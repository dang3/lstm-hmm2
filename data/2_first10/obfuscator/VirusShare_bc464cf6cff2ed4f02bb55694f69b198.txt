out
testb
out
sbb
ret
repz
inc
stos
mov
sarb
xor
vprotw
cmc
ficomps
pop
aas
in
insl
pop
xor
push
push
in
xchg
adc
jmp
mov
cmp
lret
add
pop
into
in
jecxz
lock
pushf
int3
aam
sahf
inc
adc
dec
mov
scas
and
xor
je
stos
js
fsubs
enter
push
mov
sahf
adc
xor
dec
jnp
fmuls
outsl
mov
pop
mov
mov
in
test
mov
jecxz
pop
pop
and
popf
mov
sub
or
mov
or
js
cltd
out
aad
add
pushf
shll
pop
idivl
cmp
inc
jge
es
cmc
add
pop
scas
cmpsl
sub
fwait
cmpsb
in
push
xchg
ret
cmpsl
scas
xchg
add
ja
divps
lock
aad
lea
pushf
fcoml
dec
nop
aam
test
xor
ds
pusha
and
push
movsb
in
fsts
sub
inc
lock
xor
bound
lds
shlb
jns
or
in
jle
lret
in
dec
mov
mov
jns
stos
push
mov
xorl
adcl
out
mov
add
fmulp
sub
aam
sti
sbb
and
add
pop
jb
mov
jge
bound
sbb
popf
lea
jno
add
dec
mov
sbb
ret
loopne
mov
sbb
pop
mov
sub
sub
mov
js
cmpsl
mov
mov
and
inc
dec
pushf
add
in
adc
dec
sub
cmpl
or
pushf
lods
and
leave
dec
es
cwtl
sub
inc
adcb
or
inc
pushf
mov
or
pop
imul
movsb
pop
pop
dec
sbb
sub
shlb
lea
outsb
repnz
ljmp
scas
or
stos
scas
xlat
daa
scas
icebp
das
adc
push
loope
adc
cmpsl
lods
hlt
and
sti
sbb
xchg
push
int
stc
cs
inc
sbb
jbe
cmp
addr16
fnstenv
mov
repz
adcl
int3
testl
fs
add
mov
cmpsl
sahf
push
lds
jno
adc
outsl
mov
outsb
call
out
sub
cmp
out
aam
add
pop
inc
or
neg
and
mov
pusha
call
bt
test
cmp
mov
mov
pusha
push
lea
jae
cmp
pushf
cmp
cmp
push
jmp
lea
jne
jmp
jmp
push
imull
mov
das
arpl
cmovae
cmovge
dec
add
arpl
lock
hlt
mov
mov
cmp
in
lret
movsb
pushf
stc
dec
and
lods
inc
sti
sbb
fcoms
ror
movsb
or
jo
xchg
mov
push
jg
jbe
notl
mov
ret
repz
xor
push
xchg
push
bound
lcall
xor
enterw
in
sub
xchg
adc
mov
xlat
popf
out
xchg
push
sar
push
jb
notb
outsb
mov
call
mov
lahf
xchg
and
icebp
pushf
imul
jl
mov
adc
pushf
lea
int
and
mov
push
jp
pop
mov
repz
sbb
rcrl
add
negb
inc
or
or
loopne
pop
ficomps
xchg
sarb
push
test
adc
call
pop
cmp
rcrb
aas
stos
out
aaa
dec
cmpsl
repz
out
dec
idivb
jns
mov
jns
in
cltd
xchg
outsb
sub
dec
mov
test
dec
inc
iret
adc
sub
daa
xchg
pop
and
lret
pop
inc
mov
enter
adc
mov
ljmp
lds
pop
repz
orl
dec
and
fisubrl
lret
rorl
sar
testb
xchg
stos
sbb
out
dec
scas
jmp
mov
mov
pushf
pushf
lea
jne
mov
mov
sar
rcr
pusha
sub
rcr
sar
shld
sar
lea
cmp
test
sub
cmc
pushl
popl
cmp
cmp
push
mov
lea
ja
shr
seto
rcl
cmp
sub
lea
bts
add
or
mov
rol
call
sub
ljmp
add
jmp
gs
adc
push
cltd
es
sub
xchg
out
rol
ficoms
stos
rorb
lock
xor
jl
lds
jne
ret
repz
mov
mov
dec
shrl
ficoms
insb
arpl
dec
add
mov
stc
mov
and
dec
mov
inc
movb
hlt
adc
xor
shll
iret
dec
fs
mov
rcrl
mov
inc
test
or
jno
cmp
in
cmpsl
ret
stos
jmp
adc
sbb
cmpsb
out
add
jnp
sbb
xor
rorb
lret
sbb
cmp
xor
jnp
js
insb
and
pop
mov
scas
sbb
rcl
pop
movsl
popa
fldt
add
mov
push
lcall
mov
insb
sbb
imulb
xchg
xor
lea
add
sahf
push
push
push
ss
scas
fidivs
xchg
sbb
lds
sarb
inc
mov
loope
mov
mov
pop
enter
imul
push
jbe
out
loopne
mov
dec
jg
dec
jmp
add
in
repnz
insl
mov
and
jb
lods
or
jne
xchg
or
and
cmp
iret
loopne
inc
xor
pop
xor
test
dec
xchg
movl
ja
jg
add
dec
push
je
gs
insl
inc
gs
jb
insl
gs
test
jecxz
addr16
jmp
jae
repz
xchg
cmpsl
pop
mov
lahf
es
lock
shlb
cmp
and
pop
dec
orl
mov
cmp
cli
push
pusha
sbb
xor
es
cmp
xor
adc
outsl
leave
sub
inc
push
mov
sub
pop
xor
mov
jns
push
das
test
int3
mov
in
mov
adc
sbb
mov
add
stc
pop
sub
popf
lea
pop
cmp
stos
pop
adc
loope
iret
mov
mov
xor
xor
inc
shrb
mulb
or
mov
pop
loopne
jno
push
mov
sti
or
sbb
push
sbb
shlb
jecxz
mov
push
xchg
in
push
xchg
lahf
jno
sub
mov
mov
dec
mov
idivl
out
cmp
cli
pusha
out
outsl
mov
daa
or
outsl
inc
scas
arpl
push
mov
sub
movsb
pop
cmpsl
rol
adc
pop
divb
or
arpl
arpl
and
stos
js
add
push
adc
add
je
call
and
jg
jl
mov
add
add
sahf
mov
mov
es
mov
push
fcompl
pop
push
mov
fldt
arpl
mov
ss
xlat
mov
jge
xor
or
cmp
adc
aad
fwait
mov
adc
sub
inc
arpl
sbb
shr
inc
fdivrs
insl
xchg
xor
mov
sub
and
mov
mov
sbb
lods
inc
loopne
dec
add
adc
lret
jo
push
sbb
pop
cltd
icebp
leave
cmp
in
pop
pop
push
out
ucomiss
and
es
fmulp
mov
mov
out
stos
pusha
addr16
mov
loopne
pop
push
mov
aaa
lock
xchg
outsb
imul
out
add
aas
jge
push
ret
subb
dec
mov
fstpl
cmpl
aas
xchg
or
sbb
mov
push
cmp
push
mov
popf
scas
push
inc
in
or
cmp
imul
fwait
add
adc
jae
sbb
and
pop
jl
add
mov
or
and
scas
add
rcr
mov
mov
mov
push
lods
pusha
mov
push
and
fs
and
das
mov
arpl
mov
lods
mov
xor
iret
cmp
fs
push
lahf
int
icebp
movl
push
movw
mov
push
lea
jmp
cmp
xchg
aad
dec
test
sub
mov
xor
mov
lock
add
inc
mov
dec
adc
xchg
dec
inc
call
mov
push
icebp
inc
push
das
popf
test
movsl
sti
out
push
fdivr
cmc
push
leave
lods
das
mov
cmpsb
out
popf
jmp
or
adc
bound
addr16
lea
adc
mov
popf
lret
add
xchg
lcall
lds
adc
lret
test
jae
movw
movl
jmp
push
lea
jne
cmc
aam
pushf
add
sub
aas
bsf
shld
daa
mov
mov
add
add
rol
cmp
mov
cmp
test
pusha
pusha
jmp
add
dec
insl
popa
addr16
imul
ja
or
test
popf
lea
push
mov
das
jg
jmp
inc
scas
jmp
cmp
ss
shll
jp
pop
iret
rolb
mov
xchg
pop
test
xchg
aad
or
pusha
sbbl
jecxz
int
lcall
pusha
pushf
cld
mov
xchg
and
push
rclb
push
dec
repz
or
mov
loope
cwtl
jecxz
xchg
loop
cmp
jmp
pop
push
out
js
mov
in
xchg
xchg
lock
xor
ljmp
loope
shrl
ja
outsl
stc
jmp
iret
xchg
dec
fistps
iret
sub
fildll
addr16
dec
xchg
inc
add
xor
or
cmp
pop
mov
aas
outsl
popf
out
stos
add
out
sub
js
scas
cli
pop
dec
rcrb
push
jecxz
popf
mov
sbb
cmc
sahf
pop
imul
inc
mov
push
mov
movsl
out
push
in
fbstp
dec
cwtl
jmp
es
mov
pop
fiaddl
les
xor
int3
sbb
push
lret
imul
xor
fcomps
mov
push
mov
lahf
insb
shll
dec
mov
inc
jne
xchg
insb
push
push
xchg
pusha
mov
mov
popa
fisubrl
push
sub
ds
mov
out
pop
stos
rep
pop
pop
mov
fisubs
adc
daa
sbb
sub
in
test
in
out
cmpsl
fildll
popa
inc
push
leave
fsubrs
sbb
int3
or
sub
rol
lret
aaa
push
stos
mov
lea
popf
lea
mov
imul
pushl
xor
pop
clc
jle
sti
inc
mov
mov
cmpsb
imul
jecxz
and
xchg
dec
cmp
stos
or
imul
jp
mov
arpl
cltd
fidivl
sub
jns
mov
movsb
push
lahf
jmp
or
dec
pop
mov
sbb
iret
mov
mov
iret
cmp
stos
in
sub
leave
mov
adc
xor
popf
lea
add
lret
cmp
cmp
dec
mov
addr16
pop
out
loope
mov
outsl
divb
xchg
filds
gs
add
outsl
xlat
enter
xchg
mov
jp
mov
add
mov
ret
ss
inc
xchg
dec
mov
pop
cmpsl
pushf
sbb
aad
dec
jmp
dec
test
sbb
xlat
and
dec
or
fcomps
fmulp
mov
fstps
leave
or
rorb
jne
rcll
xorb
mov
shlb
test
dec
lods
hlt
jl
cmp
dec
outsl
dec
mov
mov
adc
movsl
add
xor
sub
mov
rcll
cmp
das
inc
movsl
and
fwait
clc
ret
add
aas
sbb
push
and
icebp
adc
les
adc
sahf
out
push
mov
rcll
push
sbb
xor
mulb
push
adc
lods
xor
cmpsb
scas
in
sub
inc
addr16
mov
and
sti
and
addr16
dec
rclb
call
pop
popw
jae
jmp
sbb
dec
movsb
dec
jmp
dec
mov
and
sub
decl
adc
leave
in
sub
lods
call
dec
mov
divb
daa
imul
jno
xchg
mov
test
push
inc
aad
mov
jb
adc
and
sbb
pop
incb
int3
dec
hlt
aaa
test
sub
cmp
inc
sbb
and
jp,pt
mov
lahf
mov
aaa
dec
fldcw
push
lret
insl
movsl
cmpsl
fisubs
mov
pop
lret
mov
inc
rcrl
jmp
dec
ret
mov
or
adc
cmp
dec
xor
sbb
dec
xchg
mov
lea
cld
jbe
cwtl
mov
mov
ret
inc
sbb
inc
scas
mov
jno
cmp
push
jo
rorl
fsubrp
xchg
xchg
xor
push
popl
sbb
mov
sub
pop
into
jns
ds
stos
cmc
mov
lea
hlt
sub
hlt
push
fsubr
and
dec
add
lods
mov
jmp
hlt
cmpsl
push
outsl
fs
sbb
je
push
or
xor
lods
out
aaa
and
or
push
leave
cmpsb
mov
lock
pop
in
push
imul
cmp
ret
adc
ret
add
and
fsubs
jbe
sar
and
in
lock
ret
or
inc
cmpl
mov
loopne
daa
inc
mov
punpcklwd
mov
pop
mov
sbb
pop
push
movsbw
mov
mov
mov
lea
not
pop
pop
pop
pushf
push
mov
pushl
ret
and
inc
call
jns
cmp
add
sarb
jp
sub
out
and
mov
mov
xor
cld
inc
test
xor
mov
pop
adc
inc
out
xchg
xchg
or
data16
push
sbb
das
call
pop
arpl
jmp
scas
push
sub
xor
fidivrs
mov
push
fmulp
daa
and
add
enter
xor
sub
mov
dec
arpl
mov
pushf
scas
cld
lret
mov
pop
xchg
cli
pop
ret
pop
je
jg
add
dec
pinsrw
or
orb
jae
repz
test
dec
imul
and
or
sub
ljmp
sbb
int
mov
rcl
dec
test
bound
mov
bound
xchg
cs
sti
data16
sbb
sub
outsl
push
pop
lods
fldl
sub
adc
mov
mov
pushf
clc
pop
mov
mov
movl
pusha
pusha
movl
push
lea
jmp
cmc
out
and
lret
sahf
out
pop
jle
push
bound
int3
or
cli
and
jns
adc
mov
adc
sbb
mov
movsb
xchg
insl
testb
sub
inc
lret
inc
out
test
jmp
test
jnp,pt
sub
mov
mov
mov
inc
ss
sbb
cmp
in
fstpl
lods
cld
push
pop
dec
mov
adc
cmp
jmp
test
push
addr16
lea
push
jle
cli
inc
pop
ret
mov
mov
inc
ljmp
pop
mov
jp
fadds
mov
xchg
aad
das
pusha
clc
jne
add
pushf
shrb
int3
enter
sbb
cmpsb
adc
icebp
leave
cmp
xchg
cmpsl
push
lds
fs
sbb
call
inc
je
testb
dec
sub
movb
push
pusha
mov
lea
ja
pushf
imul
cmp
stc
pushf
clc
add
pusha
push
mov
pushf
lea
jmp
clc
shlb
stos
fimull
dec
xchg
into
push
xchg
mov
pop
cmpsb
mov
cmp
xor
jae
add
test
cmp
inc
add
das
mov
out
jae
xchg
fwait
mov
cmpl
fs
sub
andb
push
pusha
and
xorb
jnp
xorl
lea
cmp
test
inc
add
jp
dec
xchg
pop
ljmp
enter
add
sub
imul
xor
scas
dec
int3
mov
jg
pushf
lea
xchg
fistl
cld
enter
mov
xor
adc
int3
imul
loope
pusha
xor
repnz
inc
stc
movsl
pushaw
test
shll
pop
stos
roll
fwait
jmp
negl
fsubrs
imul
lea
rolb
pop
pushf
fdivrs
mov
add
enter
push
fimull
xor
cwtl
imul
xchg
push
lcall
out
cld
imul
sbb
and
shll
rol
push
test
jb
or
push
add
adcl
mov
int
pop
add
arpl
pop
pop
lahf
mov
mov
pop
gs
jmp
jo
xor
popf
icebp
inc
mov
and
stc
and
cltd
jecxz
dec
add
in
or
cmp
mov
stc
inc
dec
bound
addl
fiadds
frstor
push
sbb
movsb
adc
xchg
adc
orl
sub
cmp
sbb
outsl
jmp
xchg
add
mov
pop
xor
jle
sub
ss
stos
mov
xor
inc
dec
call
std
push
mov
jb
and
shlb
bound
in
int
add
pusha
lods
inc
xchg
insb
out
aad
imul
sbb
shl
sti
push
cmpsl
pusha
pop
call
adc
jg
mov
scas
cmp
jne
addr16
or
xor
enter
ret
ret
jno
sbb
push
cwtl
shrb
lock
sub
mov
mov
fidivrs
cld
xor
clc
xor
mov
cmp
dec
outsb
ret
mov
dec
rclb
jnp
test
add
dec
je
stc
scas
repz
and
mov
cmp
inc
in
pop
cmpsb
inc
mov
mov
lret
push
icebp
hlt
adc
shll
test
lock
aad
jnp
loop
jl
adc
jno
loope
lods
sbb
add
js
adc
in
cmp
mov
push
sar
lret
clc
or
stos
fistpll
xchg
out
push
mov
ret
scas
sbb
in
addr16
int
out
ja
mov
push
jp
add
pop
iret
add
mov
inc
mov
cmp
sbb
sbb
fmuls
test
xor
test
cmp
rolb
rolb
pop
mov
ja
aam
inc
jnp
or
stos
xchg
push
and
and
stc
xor
and
and
push
sub
les
jmp
mov
add
jo
repnz
and
dec
xor
sti
push
mov
negl
stos
sbb
pop
cmpsb
call
add
or
addr16
mov
jne
pushf
call
out
fists
xchg
shr
jne
sub
xchg
lahf
push
sbb
jae
bound
or
sahf
out
dec
inc
lcall
mov
ja
dec
addr16
push
movsl
add
mov
int3
push
jge
jne
insl
test
add
inc
cmpsl
in
imul
jo
adc
add
push
popa
adc
popf
lret
adc
jecxz
outsl
xchg
daa
dec
imul
popf
pop
xor
or
xor
or
in
mov
adc
incl
test
or
fs
sbb
push
lock
xor
or
gs
in
xorl
push
je
outsl
mov
mov
ret
or
andl
adc
or
imul
sub
les
cwtl
fisubrl
je,pt
sbb
mov
xchg
sub
or
cmpb
ljmp
rorl
lea
pusha
pusha
pushf
lea
call
jmp
and
stos
sub
lea
fbld
fbstp
xchg
fildl
bound
inc
call
xchg
mov
cmp
push
orb
pop
inc
pop
push
aaa
mov
icebp
lret
test
mov
fimuls
ret
mov
stos
or
out
lret
ret
sub
add
popf
jbe
aam
mov
cwtl
jp
push
cli
stc
popa
mov
out
push
hlt
jecxz
je
jle
adc
push
fistpll
jnp
sbb
std
daa
inc
lahf
add
repz
cmpl
aaa
push
aas
scas
shlb
call
cmp
and
add
sahf
mov
cld
shr
sti
cs
mov
and
and
in
ljmp
adc
xchg
lcall
notb
lret
aad
das
movsb
jge
das
lea
dec
test
push
dec
sahf
cmc
jns
mov
mov
test
lods
sahf
call
imul
xor
ret
pop
dec
jae
out
push
mov
leave
mov
sub
call
leave
mov
mov
mov
mov
lea
call
pushf
pushl
pushf
lea
jb
pushf
pushf
pushf
pusha
pushl
ret
out
cmpsb
sub
repz
mov
jl
push
cli
mov
ja
cmp
jnp
out
push
or
addr16
daa
add
adc
ret
and
add
xor
fcmovne
lds
jp
xlat
mov
dec
inc
xchg
cmp
outsl
push
outsl
inc
xchg
cmp
jge
inc
call
sub
adc
ret
ljmp
push
inc
xor
push
clc
mov
mov
pop
sar
cltd
mov
push
push
je
fwait
and
xlat
icebp
pop
lods
pushl
inc
add
pop
mov
bound
mov
popf
lea
in
jno
sub
not
ja
inc
sahf
push
mov
lret
mov
jmp
orl
cmc
jns
and
or
addr16
inc
loopne
pop
loope
outsb
and
sarl
push
daa
cmpsb
add
std
inc
mov
and
push
shl
addr16
xchg
call
cmp
xor
add
std
mov
aad
imul
popf
lea
push
add
pusha
mov
sbbl
repz
js
movsb
and
lds
jne
loope
jge
std
popa
xchg
lods
and
xchg
fdivrs
sbb
jbe
sbb
or
mov
cmp
pushf
stos
or
cmp
add
dec
lods
cld
sub
pop
test
pusha
mov
mov
cmp
push
jne
jo
scas
mov
in
lret
jb
popa
xchg
jecxz
rorb
in
fidivrs
cld
ljmp
push
mov
rcrb
xchg
cmc
pop
mov
xor
sub
add
xchg
lcall
loop
sbbb
mov
aam
nop
mov
icebp
push
dec
stos
popf
jmp
int
aas
cmpsl
jb
push
out
or
pop
xchg
out
ficoms
jae
movsb
int3
cmpl
xor
mov
cltd
jo
pop
fwait
movsl
or
fistpll
inc
jb
rolb
loope
std
ret
gs
mov
fsubs
inc
inc
inc
fmuls
mov
test
dec
inc
in
adcl
pop
pop
mov
inc
adc
int3
push
imull
pushf
push
mov
test
push
sub
add
xor
cmc
bound
push
in
push
sahf
and
dec
bound
ss
shlb
mov
dec
pop
inc
and
cmpsl
and
icebp
sbbb
loopne
jbe
fimull
enter
fsubl
test
adc
inc
stc
int3
sub
insl
mov
adc
sub
fnsave
roll
es
and
scas
jb
jns
adc
nop
test
addr16
jmp
ret
xchg
and
out
pushl
cmpsb
adc
xchg
sbb
jns
dec
popa
sbb
mov
push
inc
mov
rol
ror
dec
shl
out
jmp
xchg
test
ret
sahf
in
ds
xor
xchg
push
testl
lret
jmp
in
and
das
jno
rolb
sub
std
bt
not
call
shr
sar
mov
call
pushl
pushf
or
pushf
lea
jb
pusha
lea
je
bsf
setge
add
cmc
sar
sub
lea
call
lea
jne
lea
mov
stc
pusha
sub
sar
rcl
lea
sub
bt
sub
cmc
pushl
clc
cmc
cmc
call
jmp
xchg
pushl
jno
jmp
stc
inc
jge
and
ds
mov
imul
loope
mov
xor
sbb
xor
cmpb
roll
xchg
lds
sub
jae
jecxz
cmp
outsb
xchg
sbb
mov
enter
popf
lea
je
lock
mov
xor
fdivr
push
fsubr
lret
xchg
lahf
dec
addr16
loopne
xchg
in
add
addr16
stos
les
lret
inc
inc
clc
test
dec
xchg
dec
into
mov
mov
push
ret
sbbl
subb
sub
leave
adc
mov
orb
or
leave
sbb
pop
xor
adc
pop
js
repz
pushl
scas
cmp
lock
mov
add
scas
lock
sbb
lods
push
jne
push
add
dec
sub
xor
jmp
ja
sti
pop
cmpsl
sbb
jecxz
seta
adc
je
arpl
mov
jne
xchg
or
mov
xchg
jg
cli
inc
pop
testl
xchg
imul
push
test
mov
les
sbb
jnp
pop
ret
out
enter
shl
fsubs
pop
mov
test
xchg
add
dec
stos
loopne
nop
out
xchg
or
cwtl
nop
inc
mov
lock
push
pop
into
sub
outsl
mov
xorps
ret
sub
fs
xchg
stc
dec
test
adc
mov
add
ss
in
aad
sub
test
sub
cmp
out
mov
mov
testl
scas
dec
add
jo
push
shlb
arpl
mov
pusha
and
rcrb
shr
adc
sti
lcall
sub
ret
es
in
jne
mov
inc
nop
fimull
and
loopne
push
pushf
xchg
inc
xchg
sbb
mov
sub
sahf
ljmp
mov
mov
ficomps
es
add
test
hlt
jmp
sub
mov
adc
cmp
sti
push
sti
rorl
fcom
jnp
test
add
pusha
mov
ja
cmp
in
cmp
cmc
out
pop
adc
mov
mov
or
adc
sahf
rol
or
ret
aam
js
mov
imul
adc
loop
pop
mov
sbb
mov
and
xchg
jge
adc
test
xor
lea
inc
jp
incb
lret
push
push
mov
mov
jo
cmpsb
fnstcw
inc
pusha
push
leave
or
daa
sub
pop
je
cmpsl
dec
sub
sub
or
push
mov
test
adc
mov
add
clc
test
outsl
add
cmp
cmp
iret
jge
stc
xchg
sbb
pop
aas
mov
sbb
shlb
jle
jp
mov
cmp
pop
mov
xchg
add
aas
out
scas
daa
jno
aaa
jae
test
sarb
lods
mov
jns
notl
xchg
adc
jnp
sbb
cmp
pop
dec
daa
pop
sti
daa
cmp
cmp
roll
arpl
inc
add
and
sahf
pusha
cltd
in
jnp
adc
mov
arpl
inc
dec
mov
push
mov
inc
rclb
add
sub
jl
test
sub
fidivl
test
jg
adc
push
sbbl
cmp
jbe
add
inc
test
test
insb
xlat
or
xchg
outsl
aad
lods
mov
es
jae
xlat
insl
jp
scas
jecxz
mov
mov
push
dec
in
xor
pop
imul
mov
js
shrb
mov
or
dec
mov
dec
xchg
add
xchg
adc
pushf
in
les
jbe
and
push
imul
filds
clc
loop
xchg
shll
mov
mov
std
insl
pop
test
int
mov
jae
push
mov
xchg
mov
adc
push
lock
dec
and
jp
sbb
in
adcl
add
out
mov
leave
xchg
ss
adc
add
outsb
mov
pminsw
dec
pop
inc
jg
cmp
out
dec
add
add
test
mov
adc
in
lods
mov
dec
ja
add
mov
addr16
mov
in
fwait
rorb
xchg
cwtl
pop
iret
lahf
std
aas
sub
sub
ljmp
or
test
mov
push
jns
add
loopne
add
in
cmpsb
test
mov
fs
add
fisubs
push
inc
mov
inc
popa
lahf
pop
push
lods
cmp
pop
pop
push
cli
jne
push
lahf
xchg
cmp
add
daa
das
jp
js
jg
aas
mov
xchg
push
push
add
stos
test
call
xchg
mov
cltd
jne
pop
insb
cmp
pop
fsubrs
andb
jno
pop
cmc
fildl
push
in
and
pop
dec
popf
out
int
jae
insl
push
gs
je
push
xchg
inc
ljmp
push
ja
aas
inc
dec
out
movsb
jg
sti
jl
lret
test
xchg
or
push
aas
divb
mov
mov
insl
clc
jae
jo
push
cld
sahf
mov
arpl
xchg
addr16
adc
inc
pusha
pop
cmpsb
cmp
test
dec
push
test
cmp
dec
ljmp
cli
xchg
push
inc
mov
cmp
jle
mov
dec
std
sbb
into
rclb
sbb
inc
add
loope
add
and
pop
popa
pop
adcb
jnp
cld
jg
cmp
sbb
jecxz
arpl
in
xchg
inc
mov
fsubl
add
mov
mov
jb
pop
mov
xchg
adc
mov
mul
lods
xchg
mov
dec
dec
mov
mov
xor
and
push
daa
cmp
fmul
adc
outsb
test
cmp
lcall
pop
sbb
cmp
mov
flds
jecxz
pop
fwait
gs
loope
mov
je
repnz
adc
out
out
imul
fisttps
xor
jl
mov
les
mov
xchg
outsl
and
clc
popl
ja
cmp
xchg
mov
dec
movb
rorb
ss
pop
cmpl
in
inc
adcb
stc
pop
stc
roll
mov
push
xor
mov
cmp
mov
pop
fwait
cmp
mov
mov
pushf
cltd
addb
mov
data16
jle
enter
mov
add
jnp
les
dec
sbb
mov
test
or
pop
mov
push
jge
aas
xchg
dec
mov
push
stos
add
movsb
jecxz
arpl
mov
sub
xchg
mov
sbb
add
cmp
xlat
mov
adc
cmp
adc
add
das
cmpsb
clc
add
xchg
mov
ds
dec
dec
test
pop
cmp
aas
or
and
nop
xor
clc
clc
xchg
mov
outsb
fs
leave
daa
mov
jnp
cmpsb
xchg
mov
add
in
and
dec
xchg
daa
push
add
gs
xor
mov
and
mov
inc
test
gs
push
arpl
daa
mov
dec
adcl
daa
jmp
mov
mov
gs
gs
or
js
sub
mov
adc
fldl2t
pop
imul
aam
xchg
inc
cmc
push
cmp
clc
cmpsl
popl
orb
jne
and
dec
aad
inc
or
mov
iret
xchg
ret
hlt
clc
aam
sbb
nop
aas
lahf
in
out
xchg
cmp
out
xor
js
int3
push
cli
xorb
push
test
cmp
cmp
cwtl
dec
test
mov
je
dec
mov
push
cltd
sti
jno
xor
dec
test
sbb
or
test
push
out
dec
mov
mov
jl
mov
lods
add
inc
lahf
mov
fs
xchg
je
push
sbb
ja
push
add
adc
shlb
cmp
sarl
xchg
mov
ds
loop
out
lahf
ja
or
cmpsl
mov
push
test
xchg
mov
and
out
sbb
cmp
mov
xchg
popa
ja
rolb
test
mov
aad
mov
int
testl
int
stc
xchg
movsl
jl
dec
mov
lret
cmp
push
aaa
loopne
addl
aaa
shrb
dec
cmp
test
dec
xchg
clc
cmp
and
lret
cmp
aam
sbb
mov
push
xor
push
sbb
push
sbb
lea
push
push
stc
insb
stc
inc
addr16
daa
add
aaa
testl
pop
pop
mov
js
arpl
daa
add
dec
sbb
int3
sbb
push
push
sub
fnstsw
or
pop
mov
fisubrl
add
mov
inc
fs
mov
test
imul
dec
push
xchg
mov
pushl
adc
mov
push
and
push
xchg
mov
test
test
dec
nop
bound
test
mov
shll
sub
cmp
sbb
test
test
adc
inc
dec
stos
cltd
or
fiaddl
cmpl
adc
push
add
dec
dec
leave
jl
sub
call
xchg
shr
shl
cmp
scas
movsb
and
testl
adc
xor
add
dec
xlat
movsb
stos
test
mov
cmpsb
add
or
mov
adc
mov
insl
mov
in
pop
aas
movsl
ss
rclb
adc
jmp
push
jl,pn
adcb
adc
or
and
mov
mov
adc
nop
stc
rcl
xchg
testl
int3
cmp
jl,pt
sbb
mov
sarl
or
xor
xor
sbb
cmp
es
mov
xor
bound
cmpsb
push
xor
insl
cli
mov
push
mov
sbb
subb
pop
sub
pop
notl
dec
add
mov
push
cmp
addr16
sub
dec
sub
inc
inc
daa
add
or
pusha
cwtl
cld
arpl
add
xchg
inc
test
idivb
push
cmp
jbe
ret
leave
push
lcall
push
jo
mov
jg
pop
push
fstpt
and
aas
xchg
push
loop
cs
add
gs
arpl
mov
test
cmpsl
loope
mov
jecxz
add
rcll
es
xchg
dec
and
aaa
push
imul
xchg
inc
add
push
inc
jecxz
cmp
out
insl
sub
std
imul
out
add
incl
aas
enter
pop
jecxz
fs
ret
jmp
mov
lods
xchg
jl
repz
xchg
fimull
fimuls
push
push
das
rcll
xor
mulb
test
mov
aaa
pop
add
pop
adc
cmpsl
flds
lods
stc
bound
or
aaa
mov
xchg
sbb
das
push
mov
xor
mov
adc
cmc
add
test
insb
out
sbb
jb
cmpsb
cmp
mov
test
cmp
scas
test
cmp
lahf
adc
or
adc
adc
test
mov
xchg
dec
cmp
icebp
sbb
add
scas
sti
loopne
subb
out
xchg
xchg
sub
sub
xchg
or
outsl
xor
cld
movsb
in
push
outsb
notl
lods
xchg
data16
cmp
mov
jl
xchg
shl
mov
fnstenv
pop
out
mov
inc
mov
mov
aam
mov
pop
cmp
mov
jl
xor
test
or
sub
xor
pushf
andl
sub
test
push
pop
pusha
adc
cmpsb
xchg
aas
jo
pop
adc
xchg
leave
xlat
pop
mov
jle
mov
xchg
jl
sti
lret
rorb
loopne
scas
push
cmp
inc
mov
jb
fdivrp
pop
pop
mov
inc
xchg
shl
push
cmpb
xchg
cmp
add
mov
shlb
mov
inc
push
lret
test
lahf
aam
int
adc
loopne
fiaddl
enter
sbb
mov
fidivs
add
test
je
jge
arpl
add
inc
fadds
pop
add
movsl
and
push
data16
data16
mov
repz
xchg
mov
or
dec
icebp
pop
push
cmp
das
roll
xchg
jbe
ja,pn
xchg
adc
adc
cmp
cli
jae
lahf
pcmpeqw
push
popa
add
gs
aas
or
psadbw
add
cmp
cmpsl
pop
test
mov
call
xchg
adc
stos
push
sbb
or
test
sbb
mov
mov
out
push
divl
inc
jp
cld
or
in
mov
jae
mov
js
push
popl
lret
lods
mov
js
dec
lcall
add
pusha
inc
inc
jge
scas
push
notl
cmp
gs
sub
add
or
xor
xor
xchg
ja
push
sub
fdivp
dec
adc
cmp
xchg
inc
and
mov
and
xchg
push
adc
outsl
xchg
addr16
adc
icebp
mov
xchg
push
fildl
cmpsb
inc
jge
push
mov
add
add
sub
pop
out
notl
mov
ja
sti
leave
or
cmp
into
cmp
sbb
js
jns
sbb
cmp
or
out
cmpsl
mov
js
sub
mov
or
inc
jnp
addr16
jge
jge
sbb
and
out
cmp
xchg
pop
inc
cmp
test
arpl
jge
jp
jno
dec
iret
pop
jns
mov
mov
cmp
jge
out
sbb
cmp
pop
cmp
add
out
jp
add
add
testb
imul
fadds
jp
imul
pop
cmp
cmp
add
ja
jg
push
mov
or
add
jg
imul
sbb
mov
aas
js
cmp
jp
pop
mov
or
or
fwait
stc
or
sbb
cmp
or
test
mov
mov
imul
or
mov
ja
dec
cmp
std
jns
inc
sbb
sbb
pop
dec
dec
cmp
je
inc
popf
cmp
sarl
pop
sti
mov
sarb
cmp
ja
out
idiv
imul
cld
cmp
xlat
cmp
idiv
imul
inc
dec
ljmp
clc
mov
mull
pop
cmp
inc
call
cmp
pushf
fistpll
ljmp
pop
jns
imul
inc
sbb
stc
or
mov
inc
cmp
jns
adcl
push
std
and
stos
aas
jp
fistpll
js
mov
sarl
testl
jl
cmp
jnp
dec
test
in
fwait
inc
daa
popl
pop
ja
adc
incl
cmp
pop
pop
rolb
outsl
fnstcw
arpl
ds
sub
cli
dec
inc
gs
dec
sbb
mov
mov
data16
aad
mov
cmp
jne
out
pushf
ret
pop
pcmpgtw
inc
mov
push
cmpsb
sub
jecxz
imul
cmp
add
jbe
sub
fstpt
fcmovnb
dec
pop
fiaddl
pop
xchg
inc
xlat
adc
mov
pop
dec
test
cmp
add
jle
andb
push
inc
adc
test
dec
jae
xchg
mov
idivl
jns
test
aas
xchg
xchg
jo
add
arpl
mov
or
cmpsl
mov
aas
xchg
cltd
rclb
fs
cwtl
sahf
inc
or
adc
mov
push
iret
not
cmc
fldl
cmpsl
cmpsl
mov
mov
fadd
stc
shll
add
pusha
ds
xchg
adc
shrb
jmp
inc
inc
aaa
adc
and
xor
pop
test
sbb
pop
imul
adc
cmp
push
aaa
dec
stos
and
mov
adc
inc
dec
add
xchg
xchg
mov
add
daa
aas
mov
movsb
or
mov
dec
push
mov
shrl
push
sbb
cmp
addr16
dec
or
dec
cwtl
aam
imul
cmp
jbe
leave
adc
add
jecxz
xchg
mov
cmpsb
or
cmp
mov
jle
rcrb
cmp
mov
dec
mov
loope
cmp
or
cmp
xor
pusha
sub
call
test
push
lea
test
pop
ret
jae
notb
ret
dec
negl
cmp
je
cld
cli
cmpsb
rclb
lahf
pop
pop
mov
cmp
out
iret
dec
aas
popf
fwait
cmp
xchg
cmpsb
xchg
repnz
or
aas
loope
mov
test
mov
jl
cli
mov
leave
push
mov
inc
push
loope
cs
push
mov
jg
test
pop
sbbl
push
test
lret
push
mov
push
pop
cmp
clc
xchg
sub
leave
pop
mov
in
pop
push
jg
sub
xchg
or
mov
out
or
pop
sahf
cld
jge
xchg
iret
sub
adc
mov
xchg
xchg
ret
xor
out
add
insb
dec
mov
mov
sub
js
jo
jge
cwtl
cmp
jecxz
lds
add
les
xchg
outsl
inc
mov
add
cmc
mov
icebp
nop
sub
or
mov
ljmp
leave
dec
or
mov
sub
mov
pop
sbb
aam
jbe
fiaddl
or
divl
sysexit
js
sarb
mov
shlb
loope
loopne
xchg
sub
dec
mov
outsb
aas
nop
xor
in
pusha
push
mov
leave
lods
jnp
mov
push
push
push
mov
mov
mov
hlt
mov
lret
jl
dec
mov
mov
pushf
mov
cmp
fs
data16
popa
xchg
jg
pop
mov
lods
fmuls
lahf
pop
cmp
cmp
xchg
dec
roll
adc
mov
push
mov
jp
mov
movsl
lahf
push
pop
push
shl
test
orl
cmp
ret
cmpsb
test
cmp
xchg
xchg
fisttpll
cmp
inc
or
mov
dec
arpl
mov
test
inc
jg
adc
mov
or
pop
jno
add
jmp
jae
or
out
add
outsl
test
inc
stos
fsubs
sbb
mov
push
xor
mov
xchg
int
test
pop
or
mov
lahf
push
loopne
inc
inc
jmp
mov
pop
jl
gs
stc
testb
pop
add
cmpsl
mov
std
mov
dec
stc
jb
sbb
and
cmp
push
dec
xor
pop
sbb
mov
mov
in
out
addb
inc
jl
mov
add
inc
pcmpgtw
out
daa
nop
mov
cmp
cwtl
push
cmpsl
sbb
mov
xchg
rcrb
jg
stc
adcb
or
lods
popf
aaa
xchg
insb
mov
cs
dec
xor
dec
jae
mov
inc
aad
in
rcrl
ret
sbb
adc
in
adcb
lods
ret
xchg
std
lahf
xchg
mov
lods
mov
ret
test
lock
test
aad
mov
stc
cmp
adc
jo
adc
mov
pop
xchg
test
pop
mov
fwait
and
testl
adc
mov
add
iret
add
xchg
push
mov
xchg
leave
sbb
cltd
cwtl
cltd
push
jbe
xlat
mov
mov
adcb
jg
xchg
outsl
mulb
push
sub
mov
jno
xor
xlat
cmp
test
out
ss
test
lea
not
aaa
stos
rclb
inc
xchg
xchg
jl
push
pop
pushf
dec
aam
pop
mov
cwtl
fidivrs
ja
mov
sub
cmc
xchg
inc
movhps
dec
xchg
dec
xor
adc
stc
movsb
inc
daa
nop
fcmovne
addr16
ss
dec
mov
push
xlat
pop
sbb
adc
mov
cmpsb
cmp
mov
repz
inc
sarb
outsl
pusha
xor
push
xchg
mov
jbe
xchg
shl
or
jbe
mov
rcl
add
ja
push
add
imul
cmpl
mov
or
stos
push
cmp
in
jns
xchg
push
mov
inc
jo
iret
jecxz
addr16
add
jbe
fs
lds
mov
not
jbe
push
daa
cmp
fs
std
inc
mov
cmpsl
daa
cmp
test
je
addr16
adc
movsb
pop
xor
xchg
mov
cmp
push
and
outsl
mov
aaa
iret
js
insl
call
arpl
lcall
popa
jo
aas
loop
inc
add
pop
pop
pcmpgtb
ljmp
outsb
pop
add
out
dec
aas
and
cmpsb
cmpsb
fdivs
xor
cli
fldenv
dec
add
pop
jl
inc
xor
arpl
sahf
and
sbb
lahf
fcomp
inc
add
dec
mov
jnp
iret
mov
test
adc
fmuls
inc
push
cmpsb
cmp
add
mov
jbe
push
and
out
adc
dec
in
fidivrl
loop
adc
fimuls
jnp
mov
push
jle
lods
mov
lret
jecxz
pop
adc
leave
cwtl
xchg
shlb
and
sbb
mull
mov
push
mov
mull
push
mov
lcall
adc
inc
jge
pop
sbb
hlt
cmpsb
es
or
out
lcall
scas
aad
push
adc
pop
jns
push
roll
stos
mov
cld
scas
in
loop
pushf
fsubrl
dec
push
adc
add
xchg
inc
xchg
cmp
mov
or
sub
adc
movsl
dec
dec
cmp
or
inc
jns
stos
cld
pop
cli
cld
hlt
adc
mov
mov
stc
js
adc
aaa
xchg
out
mov
cwtl
movsb
leave
test
daa
dec
fsubrl
fwait
push
and
jp
sub
push
xorl
or
push
xchg
je
mov
jae
test
adc
adc
mov
addr16
or
gs
mov
popf
cmpb
dec
test
bound
jae
mov
test
fwait
push
test
imul
arpl
dec
arpl
testb
les
adc
leave
or
fidivrl
stos
popa
inc
push
add
mov
popa
pop
ficompl
adc
aam
jae
pop
sub
dec
pop
sbb
jmp
les
dec
sbb
sbb
test
push
push
sahf
jmp
mov
adc
sti
dec
push
push
cmp
mov
clc
mov
mov
or
fsts
in
test
cmc
sbb
rol
jp
outsl
out
fsubs
push
mov
fiaddl
pop
add
adc
cmpsb
push
into
ljmp
sbb
adc
jno
mov
stos
mov
outsb
lcall
cli
or
dec
adc
mov
aas
xchg
stos
int
push
or
sahf
cmp
jg
arpl
xchg
gs
cmpsl
jg
sti
sub
xchg
outsb
adc
mov
addr16
sahf
jl
xchg
bound
push
sti
mov
lea
adc
movsb
mov
scas
adc
mov
inc
mov
add
shl
sti
add
loope
sub
test
cmp
mov
js
movsb
fistl
ja
jnp
add
add
aas
mov
jbe
jno
lcall
loop
or
cmp
pop
inc
cmp
scas
mov
adc
xchg
sbb
adc
inc
lods
pop
dec
fs
aas
xchg
jno
dec
push
gs
cmp
add
xchg
mov
test
mov
movsb
lret
fs
lods
and
bound
mov
cmp
in
and
mov
repnz
sub
mov
out
dec
pop
push
xor
addl
jg
shl
or
mov
xor
sub
pusha
mov
mov
mov
fnstcw
data16
cmpsl
jb
push
mov
jle
fst
fstpt
jbe
lahf
mov
outsl
sbb
sub
sbb
into
xchg
std
xchg
out
js
div
mov
pop
imulb
xchg
adc
cmp
notl
jp
cmp
jle
xor
cltd
add
fcmovnbe
mov
and
dec
iret
xor
inc
mov
into
adc
xchg
lcall
test
aas
lea
dec
jge
push
addr16
loopne
pop
bswap
and
jp
ja
sbb
jp
loop
mov
in
add
nop
in
nop
cmpsb
sub
jb
mov
cmpsl
outsb
cmpsl
les
cmp
xchg
jg
xchg
push
pop
or
sub
inc
aas
fnstcw
adc
xchg
add
mov
pusha
cmp
out
inc
test
lcall
xor
mov
shlb
mov
fists
das
stc
dec
xchg
mov
mov
push
jmp
incb
inc
out
pushf
mov
pop
hlt
js
xchg
inc
mov
sbb
call
sbb
pop
adc
cs
sub
or
cmp
pop
dec
mov
cmpsb
in
mov
push
imul
incl
and
sub
dec
or
rorb
insl
out
xchg
aas
inc
sahf
insb
in
sti
test
jg
les
lds
inc
stos
inc
cmp
rcrb
ficoms
ds
mov
in
add
imull
cmpsl
inc
xor
pop
iret
js
sub
lock
sub
fs
push
js
or
int
roll
outsl
jg
shl
jo
stc
scas
enterw
fs
shrl
cmp
cmp
loopne
in
push
pop
dec
dec
xor
sti
or
cmp
mov
and
inc
and
and
jae
jnp
lock
ljmp
jae
nop
add
sub
jge
cltd
jns
repz
stc
cwtl
sbb
sbb
add
movsl
icebp
test
pop
popa
sbb
cmp
inc
xlat
mov
inc
sahf
int
mov
sbb
hlt
xor
mov
int3
add
sbb
and
push
outsl
push
lds
mov
mov
mov
aad
dec
mov
loopne
icebp
push
sub
xorl
inc
push
or
out
mov
push
inc
mov
mov
xchg
aaa
adc
cmpsb
repz
imul
sbb
fcmovbe
jns
xlat
push
enter
push
pop
mov
mov
adc
sub
mov
gs
in
pop
clc
or
iret
ret
movsl
jns
mov
test
gs
enter
dec
cmovno
scas
cmp
ljmp
xor
cwtl
xchg
xor
or
por
push
cli
mov
xchg
jae
adc
push
cmp
mov
mov
push
jle
xor
pop
jnp
sub
or
ljmp
or
xchg
js
pop
test
repnz
dec
cmp
or
mov
in
subl
mov
adc
lret
inc
cmpsl
aas
movsl
jns
jg
cmc
pop
mov
pop
sbb
sbb
fwait
dec
cmpsb
xor
call
cli
call
popf
movsl
push
cmp
test
ret
scas
push
cmp
scas
push
frndint
mov
mov
adc
jle
sahf
mov
push
pop
pop
jnp
mov
mov
test
arpl
outsl
dec
fldcw
add
imul
pusha
sti
fldt
insb
or
add
add
add
in
jmp
andl
fidivl
es
mov
cmp
aas
push
pop
out
and
mov
mov
cld
lods
sar
negb
pop
loope
lods
or
xchg
loopne
out
adc
add
mov
loop
arpl
rclb
mov
jl
jl
sarb
sub
add
ret
cmp
mov
add
mov
or
aad
dec
in
repz
add
jmp
inc
notl
testl
mov
pop
jo
rcrb
fcmove
jmp
sbb
out
xor
xchg
iret
orps
imulb
cmpsb
cmp
scas
stc
daa
pop
push
mov
subb
mov
push
or
mov
cmp
pushf
or
sub
sti
clc
lcall
jae
jl
mov
xchg
and
test
mov
pop
mov
lahf
pusha
cmp
sbb
loope
push
push
dec
lods
xrelease
popa
loope
mov
loopne
cmp
xor
dec
inc
inc
or
icebp
psubq
jns
or
pop
sbb
mov
lret
xchg
mov
pop
mov
jo
fildl
mov
shlb
mov
dec
arpl
outsl
daa
in
shr
sbb
xchg
jecxz
mov
fisubrs
mov
inc
ret
jo
push
or
mov
mov
mov
pop
aas
cmpsl
sbb
xchg
das
jns
cmp
dec
int
push
inc
mov
jb,pt
les
lea
in
movsb
loop
es
xor
inc
and
or
mov
jmp
xchg
dec
out
hlt
pop
pop
cmp
sarl
dec
xchg
mov
jo
ret
or
pop
push
dec
cli
insb
mov
xchg
shl
adc
test
rcrb
test
add
lret
cmp
sarb
mov
scas
inc
add
imul
int3
mov
jle
inc
cmp
sbb
clc
mov
ja
mov
lds
adc
pop
add
orb
pop
push
xchg
int
bound
mov
sub
rorb
push
xor
lock
fcmovne
push
test
xchg
xor
mov
cmp
sub
add
ret
out
push
xor
in
sbb
arpl
cli
mov
adc
pop
jp
adc
lahf
jae
lea
loop
add
pop
cmp
fmuls
xor
xchg
xor
xchg
rcrl
jae
testl
mov
mov
jge
nop
push
imul
popf
or
xor
adc
movsb
mov
or
cltd
add
pushf
xchg
insl
dec
roll
popa
adc
inc
xchg
aam
inc
pop
mov
or
cmp
bound
inc
movb
cmp
xchg
lock
cmp
repz
sub
push
lret
fnstenv
jns
out
outsb
mov
push
rclb
mov
aaa
jo
sub
mov
inc
in
sub
cs
sub
fiaddl
int3
xchg
cwtl
bound
pop
clc
lods
cmp
mov
and
mov
scas
loope
pop
xchg
rorb
popa
mov
jnp
aas
lods
ljmp
sti
shlb
das
lahf
lea
lahf
mov
or
dec
xchg
popa
mov
dec
inc
cmp
subl
decb
inc
mov
roll
pop
cvtps2pi
stos
cmp
or
adc
popa
mov
mov
sbb
nop
or
les
scas
adc
jp
je
fsubrs
imul
add
mov
js
xor
mov
lret
inc
and
stos
fnstsw
adc
xchg
daa
cmp
test
cmp
hlt
lahf
adc
incl
dec
sbb
add
xchg
mov
mov
cmpsl
das
cwtl
lret
jecxz
xchg
pop
je
cmp
jge
ds
mov
cmp
xchg
call
mov
mov
sbbl
xchg
inc
xor
and
jge
orb
in
or
lea
and
gs
scas
adc
xlat
push
push
mov
push
cmp
sub
mov
jge
dec
cmp
jns
xchg
sub
cmp
add
add
xchg
dec
push
xor
mov
or
sbb
aas
mov
sbb
mov
in
xchg
mov
cmpsl
cmp
lahf
xchg
rolb
loopne
cmpb
cmc
sbb
mov
in
sbb
inc
or
inc
ja
clc
popf
add
movsl
aas
pop
xor
int
mov
sti
add
pop
mov
push
cmp
or
mov
test
lret
cmp
add
loopne
jns
mov
ret
xor
pop
adc
icebp
push
jg
in
push
sbb
inc
mov
cli
std
push
dec
mov
xor
adc
pop
xchg
xchg
cmpsb
push
imul
and
sbb
push
push
cltd
ret
jge
cmp
nop
loope
stc
ja
sub
xchg
cltd
cmpsb
xorb
scas
ret
fnstcw
in
push
add
rclb
clc
push
mov
clc
fidivrs
dec
and
ret
stc
movsb
sahf
mov
gs
inc
movl
pop
cmpsb
fs
inc
or
jge
mov
jns
sbb
addr16
xchg
dec
push
ret
mov
imul
ja
or
mov
pop
add
adc
lock
cmp
daa
xchg
cmpsb
cmp
sub
js
jp
je
add
out
cmp
ljmp
mov
sub
xor
lcall
jns
ss
mov
pop
jecxz
insl
pop
scas
jae
in
aas
pusha
daa
adc
repz
mov
iret
mov
addl
push
popa
xor
test
sub
cmp
mov
adc
or
mov
scas
fidivl
push
call
pop
push
out
rcll
or
int3
and
or
cmp
pop
push
xor
inc
cli
ja
lcall
mov
movsb
mov
imull
test
mov
cmp
lret
cmp
es
out
add
test
addr16
mov
iret
xor
xchg
inc
and
dec
fnstsw
push
insb
pop
mov
cmp
pop
xchg
mov
aas
push
cli
jle
push
ja
movsl
lret
sub
cltd
popf
pusha
iret
and
xchg
or
test
sbb
adc
cmpsl
insl
addr16
pop
imul
mov
or
add
xchg
sbb
addl
shrl
cmp
pop
inc
inc
or
arpl
dec
insl
xchg
or
xor
call
xchg
jbe
scas
sahf
jb
mov
lock
cwtl
xchg
push
mov
lds
mov
dec
mov
daa
and
mov
cmp
and
test
pop
inc
adc
adcb
pushf
outsl
clc
mov
mov
sti
ret
mov
push
mov
dec
test
arpl
push
push
inc
jmp
dec
repnz
mov
mov
add
mov
out
cld
loope
movl
jecxz
and
cmp
xor
jns
jl
out
push
mov
jmp
add
cmp
xchg
jne
cmp
dec
cmp
and
aas
fists
jle
cs
and
mov
sub
and
iret
ja
outsl
cmp
loop
lahf
cmpl
and
xlat
cmp
xchg
fnstcw
mov
cmovno
or
cmpsb
add
pop
push
mov
lahf
adc
das
xchg
mov
and
push
int3
sbbl
jg
aam
aaa
pop
lock
outsb
sahf
add
stc
jle
push
add
lret
aas
out
mov
clc
orb
jmp
pop
iret
sub
addl
pop
stc
pop
xchg
xlat
stc
xchg
ja
sahf
sarb
add
test
sub
mov
aaa
arpl
pop
xorb
jecxz
mov
outsl
out
xchg
movsl
pop
adc
inc
lods
jnp
rcll
pop
dec
js
cli
jmp
cmp
mov
push
and
leave
loop
dec
stos
sub
inc
jb
pop
test
jg
out
pusha
mov
pop
fadds
mov
mov
xchg
mov
jl
jmp
cmp
mov
or
cmp
dec
das
or
mov
sbb
faddl
mov
jle
add
sub
rolb
cmp
in
negl
jne
mov
sub
hlt
vcvtsi2ssl
adc
inc
cmpsb
cli
xchg
aaa
or
insb
pop
test
mov
out
sbbl
add
fbld
pushf
xchg
rclb
cmp
out
push
pop
push
xor
jl
inc
test
aaa
cli
repz
xchg
call
ljmp
mov
adcl
jge
sbb
lods
scas
ja
test
stc
sbb
pusha
jp
inc
into
mov
jns
xlat
out
fdivr
xchg
push
mov
popw
mov
push
cmp
roll
cmc
dec
test
mov
jle
mov
adc
arpl
test
mov
cmp
adc
push
cmc
sub
movsb
lock
push
andb
jl
sub
sbb
add
jmp
inc
push
xor
cmp
sub
sub
mov
pop
push
push
mov
adc
ds
and
aas
aam
cli
push
js
sub
test
mov
bound
xorl
pop
xchg
loopne
inc
jno
sbbl
or
inc
rcl
sti
arpl
repnz
stc
or
push
lahf
jnp
mov
adc
jg
xchg
jno
ret
sbb
call
push
scas
fisubs
xchg
pop
mov
sbb
mov
lods
pusha
cli
inc
jno
mov
add
mov
sub
rolb
cmpsl
lret
nop
pop
mov
sub
mov
cmp
out
popa
add
lods
sub
pop
lods
dec
leave
shlb
xchg
fstps
xlat
test
cwtl
popa
imul
cld
sahf
jmp
repz
pushf
cmp
xchg
adc
sbb
out
aam
pop
dec
fwait
push
lret
jae
add
add
pop
sbb
jno
stc
arpl
mov
fstp
arpl
scas
pop
xor
jg
cmp
mov
mov
cmp
xchg
mov
aas
pop
cmp
mov
push
test
cmc
mov
mov
jnp
sysenter
pop
fidivrs
or
mov
orl
cmp
add
xor
repnz
mov
loope
sbb
cmp
mov
adc
xor
lock
lock
shlb
not
int3
iret
loope
mov
stc
cmp
xor
subl
and
xor
inc
xchg
stos
push
inc
stc
push
out
out
sbb
lret
mov
mov
cmp
push
jle
pop
dec
push
pop
jl
xchg
out
fdivs
test
pop
pop
xor
sub
in
out
pop
mov
std
imul
pop
xchg
and
xchg
scas
add
data16
adc
mov
pop
orl
ds
cmp
jl
sbb
scas
add
hlt
std
lds
mov
jmp
inc
popa
dec
pop
mov
pop
into
xchg
and
repnz
jle
jmp
dec
sahf
test
pusha
mov
or
push
femms
ret
dec
sub
adc
pop
dec
loop
add
mov
scas
inc
neg
bound
stos
and
jo
dec
jg
push
mov
push
or
or
adc
jmp
aas
push
aas
mov
xchg
test
loop
or
adc
outsl
cwtl
je
add
xor
xchg
into
xlat
pusha
fcmovnb
cmpsl
sti
jle
or
mov
shlb
popa
sbb
lcall
aaa
lahf
shll
pop
fimull
pop
cmpsl
sbbl
add
sbb
jnp
ret
movsl
jno,pt
test
sub
cli
movsl
loop
je
out
popf
add
mov
xchg
das
and
push
aaa
aaa
stc
mov
test
ds
mov
mov
jbe
lds
fxch
sbb
fucomp
cmp
in
add
cmp
xchg
inc
xorb
bound
test
mov
into
mov
and
mov
aas
sub
sbb
fs
cli
push
or
aas
xchg
xor
test
mov
sub
cld
out
andl
push
xchg
inc
ss
subl
xchg
mov
add
lods
add
cld
fnstsw
mov
into
xchg
ds
popl
rorb
mov
cli
push
inc
cmp
iret
inc
pop
push
and
aas
and
sbb
fidivrs
or
lock
sub
xchg
pusha
js
cli
dec
dec
mov
inc
dec
mov
pusha
sub
adc
sarb
push
arpl
add
pop
pop
or
add
pop
outsl
test
pop
xchg
shlb
jl
dec
test
pop
mov
mov
idiv
pop
cmp
dec
sub
aaa
fsubrl
cmp
mov
inc
cld
xchg
test
pop
imul
mov
pop
cmpsb
jne
test
mov
push
push
scas
pop
shll
sahf
mov
lock
int
or
je
dec
lods
out
ljmp
out
adc
lods
xor
cmpsl
pop
js
pop
ljmp
rep
cmpsl
test
inc
popf
outsl
cltd
cmp
add
stc
inc
inc
cmp
icebp
pop
sub
std
pusha
jge
mov
idivl
int3
mov
cwtl
pop
and
imul
or
fs
push
insb
add
into
xor
cld
fsubl
mov
fdivr
insb
mov
pop
pop
pusha
xor
call
ret
in
mov
mov
addr16
notl
loope
cmp
add
sarb
mov
xchg
out
mov
mov
push
jo
inc
ds
cmp
nop
mov
inc
pop
out
lret
leave
cli
jb
mov
dec
cmp
sbb
mov
mov
jmp
cltd
sbb
jmp
aam
cltd
dec
das
xchg
dec
pop
cmp
adc
ficompl
xor
sbb
loope
xchg
dec
sub
xchg
nop
test
popa
inc
cwtl
loop
dec
and
jns
psrlw
or
sub
std
cs
inc
add
aas
adc
mov
jmp
filds
in
cmpsl
lds
pusha
cmp
xor
mov
mov
les
inc
mov
xchg
add
pusha
movsl
add
cli
mov
scas
pop
sub
stc
lea
mov
jae
jg
mov
cmp
jg
and
and
push
or
fidivrl
fimull
adc
sahf
xor
into
jmp
int
out
and
rclb
inc
xchg
out
dec
xor
xchg
sbb
out
test
pop
add
shr
push
cmp
pop
inc
pop
inc
out
aas
mov
push
sub
pusha
test
cmp
pop
mov
jecxz
out
pop
or
rcll
mov
or
push
mov
aaa
cmp
mov
xchg
fdiv
jns
stos
lea
lea
mov
rclb
add
test
mov
jmp
inc
mov
mov
dec
adc
sub
inc
mov
mov
xchg
sbb
jge
sbb
adc
enter
mov
jnp
dec
mov
test
sbb
add
data16
jb
add
pop
add
mov
js
pop
or
mov
clc
inc
sbb
test
out
and
or
mov
mov
sahf
test
push
int3
repz
pop
mov
hlt
and
sahf
movsb
xlat
imul
mov
sarb
mov
add
imull
cld
loopne
mov
insl
out
mov
and
shrl
push
or
mov
jge
out
mov
cmp
out
orb
mov
pop
jp
stc
ja
addr16
test
jne
pop
add
call
inc
add
sub
and
mov
inc
or
fldcw
jp
xchg
bound
insb
hlt
sub
or
lahf
sub
fiaddl
sbb
adc
cmp
adc
test
ljmp
shl
cmp
fisubrl
xchg
mov
data16
adc
fsubs
push
xor
test
xor
push
daa
dec
shlb
xor
cmp
xor
sub
add
fucomip
fisttps
shll
push
mov
jns
and
ja
cmp
into
push
mov
call
pop
xchg
mov
push
push
xlat
fdivl
fsubrs
sbb
adc
and
shlb
and
popa
movsl
cmp
das
xchg
inc
sbb
jmp
and
mov
add
cmp
rolb
inc
aam
fldt
ja
push
cmp
jo
lcall
fdivrl
add
and
lret
push
adc
rcl
sub
sbb
aas
cwtl
cld
data16
popf
out
sbb
lods
out
int3
mov
cmp
adc
adc
pop
add
jl
lret
jmp
pushf
xchg
test
sbb
jmp
jmp
les
mov
or
sbb
ja
test
mov
dec
or
push
andb
inc
or
pop
dec
xchg
in
cmp
sbb
insb
mov
sbb
xchg
test
ret
outsb
mov
sub
inc
inc
fdivrs
add
cmp
and
push
nop
dec
jb
jl
jle
ss
cwtl
into
add
in
pop
fimull
cmp
outsl
jnp
or
fs
mov
cli
sub
pop
lcall
movl
and
sub
das
mov
cmp
xchg
outsl
add
pop
dec
push
addr16
jp
loop
cltd
dec
jp
sub
xor
inc
jb
loope
andb
test
aas
push
push
testb
ficompl
sub
or
inc
mov
lret
pop
inc
adc
xchg
lcall
fnstcw
pop
xchg
cmc
int
adc
push
push
xchg
jnp
xchg
xor
pop
fdivrs
frstor
inc
pop
sub
in
lret
or
dec
pop
into
movsl
jns
jge
mov
movsb
xchg
push
sti
mov
inc
fisubl
orb
or
cs
mov
pop
xor
dec
cmp
mov
pop
mov
sub
inc
inc
xchg
test
repz
jno
sub
push
cmp
adc
test
lret
repnz
jnp
jne
out
lock
ret
xor
daa
push
nop
xchg
xchg
cmp
fbstp
lahf
adcl
inc
xchg
xor
das
shlb
inc
push
push
xchg
push
sub
inc
ja
inc
pop
inc
mov
xchg
and
in
sti
add
xchg
jg
test
popa
jo
cmp
xlat
mov
inc
xchg
mov
cmp
cmp
sbb
outsl
insl
popa
mov
push
loope
adc
mov
int
pop
xor
test
and
out
dec
mov
inc
popw
inc
jne
mov
xchg
pop
mov
inc
mov
and
iret
adcb
add
dec
pop
outsl
xchg
sahf
sbb
xor
stc
int
push
dec
pop
sbb
mov
popf
mov
cmp
daa
cmp
pop
das
cmp
and
mov
sub
mov
inc
rol
scas
xor
addr16
es
pop
sub
int3
mov
out
jecxz
push
xchg
xchg
dec
popa
sbb
pop
sbb
xchg
imul
cmp
cld
aas
and
dec
lds
idivl
stos
fsubl
data16
mov
cmp
ja
int
xchg
imul
add
loopne
daa
repz
hlt
shl
or
adc
test
andl
push
push
dec
xchg
pop
xchg
jmp
cmpsl
mov
inc
lds
xor
add
lcall
dec
mov
dec
leave
nop
pusha
add
xchg
mov
outsl
cmp
sbb
push
inc
cld
sub
lcall
mov
ja
xchg
pop
mov
mov
movsl
sub
mov
push
adc
cltd
rclb
test
outsb
pop
iret
pop
mov
outsl
dec
inc
mov
orb
push
mov
loop
mov
mov
leave
addr16
iret
aaa
mulps
mov
jle
lea
popa
xchg
adc
ds
jne
call
daa
xor
test
iret
mov
sti
or
pop
loop
xlat
test
ja
xchg
iret
stc
sbb
mov
cmp
std
ds
aas
mov
mov
dec
out
lds
imul
push
pushf
dec
pop
rolb
fldl
sbb
push
ljmp
mov
test
addr16
cli
mov
test
push
jbe
sbb
push
pop
sarl
sbb
xor
xchg
fldt
cmp
xchg
inc
or
pop
or
mov
ja
cmp
xchg
int3
data16
sbb
dec
xchg
inc
test
fsubrl
gs
pop
filds
rcrl
out
out
add
movsb
mov
mov
xchg
xchg
xchg
push
xchg
sub
mov
shrd
mov
inc
and
scas
clc
xlat
dec
mov
cltd
inc
inc
pop
push
divl
dec
je
cli
inc
pusha
int
stos
push
dec
pop
aad
testl
sub
xorl
mov
adc
xchg
aas
call
dec
jg
or
push
loopne
mov
push
xchg
leave
outsl
push
adc
jp
cmp
mov
ret
adc
push
bnd
jb
mov
insl
lods
lods
int3
xchg
movsb
cld
bound
xchg
add
sub
mull
imul
lcall
dec
sbb
pop
xchg
test
and
push
add
out
loop
fwait
or
xchg
inc
mov
into
sub
mov
nop
inc
addr16
sbb
push
xor
adc
test
inc
mov
and
or
push
or
jne
pop
or
clc
mov
data16
jb
pop
loop
push
mov
xchg
inc
cmpsb
test
add
shr
dec
cmp
pop
jmp
movsl
mov
shl
orl
pop
and
stc
popa
mov
in
push
sbb
psubusw
mov
xchg
insl
push
andl
loope
cmp
pop
sbb
lret
xor
lods
fimuls
jb
pop
call
inc
repz
dec
pop
dec
mov
add
leave
jl
pushf
pop
outsb
fmull
lahf
test
mov
jge
add
bound
xchg
xchg
pop
psllw
loopne
xchg
mov
js
and
mov
mov
out
and
mov
mov
push
adc
push
cmp
mov
xchg
mov
scas
stc
mov
xchg
mov
adc
xchg
addr16
pop
mov
mov
stc
mov
sti
jns
std
dec
mov
movsl
inc
cmp
mov
xchg
mov
lret
jno
int
fcomps
nop
mov
mov
cs
sub
cmp
ja
shl
mov
mov
cmp
push
mov
lock
arpl
test
ja
leave
cmp
std
dec
sbb
test
cmp
mov
cmp
mov
cmp
mov
call
je
loopne
into
sub
hlt
in
test
cld
lods
mov
cmp
dec
repnz
push
xor
pop
dec
scas
xchg
enter
xchg
stc
sbb
out
adc
lds
adcl
xchg
cld
aas
xchg
es
mov
fdivl
sbb
jp
enter
fldenv
out
rcll
adc
movsb
pushf
jno
stos
shlb
cmp
lcall
fprem
cmp
outsl
xorl
je
shr
pusha
inc
mov
sub
movb
sbb
pusha
mov
sbb
push
adc
mov
cli
lcall
push
pop
cli
daa
mov
jp
js
loopne
cmp
mov
subl
leave
jp
sbb
gs
mov
test
pop
mov
pop
mov
push
pop
test
lret
mov
lcall
rorb
and
pop
sbb
hlt
and
cld
cmpsl
mov
imul
sarl
sarb
out
pusha
ret
setne
add
in
movb
cld
inc
ljmp
mov
jl
dec
loop
clc
roll
pusha
sub
add
mov
test
mov
cmp
fstpl
fildl
mov
test
daa
decl
push
pop
xchg
cmp
add
fldenv
mov
mov
mov
pop
sub
sub
add
inc
pop
push
in
popf
idivl
dec
mov
sbb
xchg
divl
lcall
pop
jns
cmc
sub
rorb
or
sahf
leave
out
ret
dec
mov
xor
or
ret
xor
pop
frstor
outsl
in
mov
pop
inc
loopne
imul
cmp
add
insl
xchg
shlb
sub
jmp
adc
pop
test
inc
fs
stc
adc
clc
lods
xchg
cs
jmp
mov
leave
mov
clc
divl
addb
mov
aad
mov
stos
lock
inc
ja
pop
mov
cmpsb
mov
fucom
pop
pop
cmp
jge
mov
xor
and
xor
add
adc
pusha
mov
icebp
cmp
repnz
test
roll
cmp
push
fadds
sub
cld
aas
jmp
push
pop
xchg
stc
push
in
pop
jmp
push
sbb
stos
push
or
ficoms
push
bound
out
mov
fsts
stc
insb
ja
mov
xchg
jg
or
push
jae
jne
shll
cmpsl
dec
adcl
push
js
jmp
xchg
insb
inc
stos
sub
jns
adc
cmp
mov
add
xchg
cmpb
jo
add
test
cmp
sub
inc
pushf
push
aas
das
mov
lea
out
push
ret
movsb
sub
fcomps
stos
in
ja
and
or
xor
pop
repnz
aas
jne
mov
lret
and
out
test
gs
or
jge
jg
je
movsb
or
sbb
inc
fwait
jnp
mov
jp
and
in
dec
jbe
inc
cmp
pop
pop
xchg
jmp
pop
lds
fldl2e
lcall
push
stos
and
cmpsb
setl
jae
les
loop
sub
mov
leave
in
cmp
test
arpl
decl
sbb
mov
mov
pop
xchg
mov
jnp
mov
mov
jmp
adc
pop
ret
roll
mov
pop
or
data16
sbb
pop
aaa
mov
xor
lods
dec
out
push
pop
fsubp
mov
int
rol
and
and
add
xchg
sbb
push
subl
lods
mov
dec
mov
jp
js
and
in
pop
js
xor
lds
mov
int
mov
jl
out
xor
push
notl
cmp
sbb
cmc
iret
imul
int3
or
popf
std
jnp
dec
cmp
test
inc
mov
mov
aad
fwait
andl
mov
xchg
in
outsb
sub
jge
adc
out
push
push
out
sub
inc
sub
sbb
mov
popa
ds
mov
dec
loopne
inc
loope
push
inc
or
jp
push
test
cmc
add
cmp
aas
dec
in
outsb
jge
xchg
shlb
cli
jnp
sub
test
add
iret
ja
push
inc
mov
xchg
cmp
int3
pop
mov
mov
pop
es
jl
xor
push
addb
xor
mov
faddp
test
addr16
inc
pop
cmp
sub
cmp
jnp
adc
jo
or
cwtl
enter
fisttpll
cmp
mov
mov
in
sbb
inc
fidivs
or
pop
es
sbb
or
negl
in
sbb
push
pushf
jae
xchg
test
ljmp
adc
xlat
jbe
lea
and
sarb
rclb
bound
xorb
mov
popa
pop
and
rclb
push
pop
imul
out
test
adc
fdivrs
fmull
mov
test
add
push
scas
add
jmp
jo
adc
xchg
aam
loope
jg
rorb
out
in
pop
adcb
and
ljmp
mov
xchg
xor
pop
popf
test
cmp
mov
repnz
scas
add
push
lods
mov
fs
jae
test
push
pop
mov
sbb
add
nop
jae
mov
imul
mov
xchg
cli
mov
and
lds
cmp
fidivrl
int3
add
push
pop
addb
or
and
insl
cmp
pop
mov
test
pop
push
dec
ja
mov
repnz
adc
mov
ja
testl
xchg
mov
in
add
mov
orb
negl
sbb
clc
or
mov
fisubs
lret
movzwl
pop
mov
or
pop
add
jbe
push
out
outsb
fistpll
sbb
and
lcall
cmc
test
imul
insb
stos
or
test
subl
and
in
mov
fisttpl
je
jnp
or
out
rcrb
cwtl
inc
push
xor
jp
test
cld
pop
fsubp
js
inc
leave
ret
inc
pop
dec
adc
shrb
aas
or
sbb
mov
ret
push
sbb
dec
lret
lds
pop
adc
jns
mov
aas
mov
repz
int
xchg
mov
mov
cmp
or
rcrb
enter
or
in
mov
mov
pop
adc
pushf
into
jmp
popl
jb
mov
cmp
in
cli
xor
add
mov
mov
out
push
pop
inc
add
js
aaa
cli
push
sbb
xor
push
xchg
jo
dec
jp
pop
pop
pop
or
scas
adc
dec
lods
rolb
jl
aaa
jmp
pop
fidivrl
dec
cmp
rorb
jns
jecxz
cmpsb
push
mov
sub
aad
fwait
ja
and
push
inc
mov
test
mov
mov
dec
inc
test
inc
xor
jno
out
mull
mov
mov
aad
jno,pn
inc
mov
push
sahf
ucomiss
sbb
xchg
rolb
cmpb
lahf
pop
or
mov
mov
popa
and
or
lcall
or
arpl
js
mov
adc
xor
xor
inc
sub
dec
shl
mov
push
sbb
push
xchg
shlb
or
rcll
or
xchg
dec
add
sbb
cmp
test
fistpl
insb
sbb
ret
arpl
xchg
ret
test
gs
cmpsl
inc
rclb
mov
xchg
sbb
mov
lcall
sbb
mov
test
int3
xchg
jge
pusha
mov
cli
fwait
pop
out
rcrb
mov
mov
les
jp
mov
iret
popl
push
xchg
lods
sbb
dec
or
jne
xor
stos
cmp
pop
add
repz
push
mov
pop
test
pop
dec
test
mov
mov
pop
mov
pop
enter
jg
fisubl
stc
fdivrl
sub
or
ja
xchg
fisttpl
inc
insb
aas
jmpw
sub
pop
sarb
inc
pop
daa
lods
xchg
add
in
push
pop
pop
lock
ds
out
fildl
cmp
add
testb
dec
push
dec
cmp
add
xor
lds
adc
jns
mov
xor
adc
jmp
das
fwait
dec
inc
push
mov
sarb
push
mov
inc
cmp
sti
jo
mov
cmp
xorb
pop
in
xchg
aam
fdivl
add
ret
cmp
push
jge
je
repnz
das
or
cmp
inc
sarl
roll
ss
cmp
cmp
cmp
out
cs
add
cmp
sbb
xor
in
sub
incl
fstpt
pusha
xchg
and
les
dec
and
add
enter
out
mov
mov
hlt
js
popf
add
inc
mov
xor
jno
je
cmp
sarl
xchg
inc
ja
add
je
ficoms
aas
cltd
push
jl
fmull
or
jae
mov
push
push
mov
movl
outsb
push
hlt
mov
fisubrs
sbb
pop
pusha
xor
test
pop
je
push
test
xor
test
or
imul
sysexit
fstcw
popa
hlt
mov
pop
mov
popa
mov
cmp
inc
sub
fisubs
ja
add
fldcw
shrl
test
mov
mov
test
addl
adc
cmp
jg
in
pop
push
in
jle
popa
and
pusha
test
test
imul
lret
push
jno
subl
cs
cmp
inc
insl
sbb
out
aas
lea
popf
push
movsb
insb
out
adc
les
sub
shl
xchg
aas
add
mov
and
ja
and
mov
out
xchg
leave
push
dec
gs
incl
cmp
test
fcoms
pop
cmp
sbbb
adc
aas
pop
xchg
sub
xchg
jne
pop
mov
mov
jle
popf
add
test
inc
dec
xor
mov
push
popf
psllq
or
test
out
lock
sbb
rcr
xchg
mov
xchg
test
or
cmp
sbb
xor
add
das
mov
dec
xchg
nop
jle
add
push
push
lods
mov
ljmp
les
fcompp
popa
inc
mov
xor
pop
jg
int3
mov
test
xchg
mov
negl
pushf
xor
pop
cli
adc
push
pop
inc
jl
mov
or
repnz
leave
cli
sub
out
shlb
sbb
mov
sub
test
ret
rcl
nop
sbb
pop
popf
js
push
pop
ja
xchg
adc
hlt
mov
lcall
sub
add
jnp
mov
notl
push
pop
sub
add
and
insl
or
cmp
mov
aas
xchg
fistl
pusha
cmp
pop
mov
push
mov
daa
test
jg
orb
pop
fiaddl
lcall
mov
movups
hlt
pop
mov
pop
mov
outsl
pop
arpl
mov
mov
fiaddl
jb
dec
inc
ja
test
test
sti
mov
fucomi
mov
aaa
xchg
xchg
cltd
cmp
aam
push
fcmovnb
mov
add
xchg
and
jns
dec
fdivp
bsr
enter
pop
pushf
adc
nop
mov
loop
adc
aas
jno
pop
aas
and
outsl
xchg
out
mov
scas
jle
jo
adc
ffree
sub
stc
lret
pop
sbb
xchg
lods
pop
inc
push
pop
dec
repnz
inc
sarb
xchg
stc
inc
aaa
shrl
sti
xchg
pop
leave
add
hlt
test
mov
mov
aad
ja
mov
sub
fldt
xor
shlb
js
sub
push
pushf
iret
repz
pushf
sbb
out
test
mov
leave
sub
gs
jo
sub
jecxz
cmp
stc
shrb
xor
fcompl
cmp
or
jp
pusha
fcomp
mov
out
es
aas
pop
cmpsb
xor
cmp
shll
test
push
scas
jge
sub
push
daa
mov
sub
sub
adc
lock
push
outsl
sti
rclb
mov
lods
cmp
cmp
iret
and
das
lcall
mov
rclb
ss
cmp
inc
jbe
inc
sub
sbb
aam
imul
or
ret
lds
push
xchg
shlb
in
xor
loopne
jae
das
push
and
sbbl
ss
lock
dec
arpl
sub
adc
adc
adc
xchg
inc
pop
cli
cmp
and
mov
xor
mov
fsts
sti
test
enter
out
jl
sbbb
leave
data16
sbb
fsubl
pop
jnp
add
and
xchg
popa
js
dec
aas
fnstcw
lahf
jo
call
mov
sbb
adc
sti
stos
out
push
or
pusha
cltd
mov
data16
arpl
add
pushf
push
out
mov
jmp
arpl
mov
test
cltd
lods
aam
jae
pop
mull
sub
inc
sbb
shrl
test
dec
mov
cmp
sub
xor
testl
loope
dec
jmp
stos
inc
sarl
xor
rcrl
out
or
sub
mov
stos
sti
cli
mov
arpl
and
je
pushf
inc
add
ljmp
enter
push
and
sub
xor
push
jmp
test
and
repnz
jae
test
cmc
cmp
push
test
out
idivl
dec
or
scas
test
addr16
fists
add
out
stc
xchg
mov
shlb
scas
lds
lock
out
scas
lahf
in
dec
dec
xchg
je
dec
sbb
in
ror
xchg
gs
pop
sbb
pop
xchg
aas
push
repnz
mov
enter
pop
pusha
adc
icebp
ret
and
in
adc
aas
dec
sbb
push
or
and
xchg
add
ja
sub
cmp
add
leave
jl
lock
aas
sbb
or
imul
cli
mov
outsl
popl
jo
stc
xchg
loope
gs
xchg
sbb
add
enter
dec
push
cmp
testl
aas
aas
test
addr16
test
push
mov
pushf
cli
jo
sub
test
pop
dec
arpl
cmp
ljmp
jecxz
aam
push
lahf
in
xchg
dec
enter
sub
cmp
dec
mov
mov
cld
mov
les
idivl
test
add
pushf
push
jmp
add
leave
xorl
out
test
cltd
rclb
test
pop
aad
lcall
or
mov
sub
jg
repnz
and
inc
imul
cmc
jecxz
ss
jg
mov
pop
xchg
xchg
mov
fildl
loop
ds
adc
adc
enter
std
add
jg
pop
je
mov
test
mov
sub
jnp
in
sbb
mov
add
or
push
pushf
repz
cmp
outsl
stc
test
call
aad
sti
repnz
mov
gs
cmp
push
inc
or
and
lock
or
cmp
xchg
ret
call
mov
cwtl
or
mov
mov
push
inc
push
adc
jp
sbb
or
mov
push
xchg
ficomps
push
ja
jp
mov
fs
fs
test
sbb
lods
sbb
stos
sbb
xchg
pushf
stc
inc
fwait
inc
cwtl
addr16
add
inc
inc
clc
inc
ror
test
in
xchg
mov
and
inc
aam
fdivr
push
insb
dec
scas
imul
xchg
ja
pushf
adc
jbe
jo
sbb
mov
push
not
inc
mov
push
or
adc
leave
loop
sub
sbb
add
test
outsl
out
adc
shll
cmpb
test
xchg
out
fdivl
pop
xchg
jl
sbb
jmp
leave
lcall
sbb
cmp
repz
jl
stc
or
jb
aad
pusha
fldt
lret
daa
sub
add
add
cld
fldenv
outsb
sub
mov
mov
mov
adc
adc
ja
inc
shl
dec
sub
cld
daa
rcr
xor
jmp
sbb
jb
outsb
scas
divl
xor
xor
sbb
gs
jl
sub
iret
testl
jp
pop
icebp
jns
add
mov
addr16
lods
test
sbb
mov
adc
mov
and
test
leave
cmp
nop
mov
cmpb
mov
xorl
push
fiadds
sbb
repnz
in
sahf
and
int
ljmp
cmp
add
pminsw
jns
mov
xchg
cmp
test
mov
sbb
stc
mov
int3
out
mov
cwtl
xchg
or
popl
imul
inc
sub
int
mov
sbb
cmp
xchg
cltd
mov
mov
mov
inc
sub
test
dec
sti
jge
sbb
in
repnz
cmp
fimuls
adc
dec
pop
cmpsb
clc
loop
push
sti
clc
test
fldenv
sar
mov
dec
sub
pop
push
stos
popa
sbb
cmp
pop
fcmovnbe
popf
cmp
rcrb
mov
lds
fldenv
sub
mov
jae
rcrl
daa
cmp
and
mov
push
cltd
sub
mov
dec
push
add
mov
mov
sti
shlb
and
mov
and
ret
in
and
test
arpl
jmp
xchg
mov
xchg
adc
mov
bsr
cmp
sarb
in
lods
xchg
cmp
punpckldq
sbb
push
pop
dec
pop
rorb
out
mov
push
mov
pop
popf
mov
dec
jle
pop
sub
lock
inc
shr
push
nop
aam
mov
mov
sbb
mov
imul
int3
and
xchg
mov
push
xchg
fcomps
mov
jl
idivl
and
or
pop
test
sub
adc
sbb
jo
inc
jl
ja
addr16
imul
jmp
jno
sti
inc
pop
xchg
insb
in
dec
or
outsl
ret
les
pop
or
jp
push
inc
hlt
sarb
ja
test
and
sbb
cmp
negl
push
adc
movsl
mov
cmp
fwait
test
pop
xchg
sub
sub
push
xchg
and
hlt
pusha
or
inc
mov
ds
mov
cmpb
out
dec
dec
dec
popl
xor
stc
bound
pop
scas
bound
sub
and
fimull
push
cmpsb
fnstcw
ja
fs
test
adc
add
mov
shll
in
lods
cmp
jbe
dec
push
cmp
icebp
xchg
push
movsl
mov
mov
in
mov
arpl
cmp
adc
cltd
adc
cmp
bound
inc
dec
fistl
sbb
pusha
inc
fstpt
xorl
lock
push
pop
adc
sbb
addr16
andl
jnp
ja
inc
into
xchg
jne
aad
xlat
sti
das
pop
sub
sbb
add
mov
sbb
add
cmpsb
icebp
sub
xchg
js
pop
inc
daa
fwait
mov
stos
aam
push
lahf
sbb
gs
rolb
dec
outsl
pusha
daa
push
ljmp
test
pop
push
sub
in
and
xchg
sbb
mov
push
jl
ret
stos
scas
shlb
testl
cwtl
cmp
add
sub
popa
pop
dec
cli
pop
cmp
mov
mov
rclb
lahf
sahf
inc
sarb
xchg
jl
stos
fwait
pusha
addr16
outsb
and
dec
idivl
mov
addb
add
in
cmpsl
inc
dec
pop
pop
jg
and
pushf
or
adc
xchg
dec
xchg
jmp
outsl
repz
pop
xor
call
adc
pop
add
leave
cvtps2pd
leave
cltd
pop
adc
testl
hlt
cmpsl
mov
push
subl
roll
xchg
arpl
pop
xlat
pushf
loop
jns
lods
mov
jo
subb
jae
jmp
or
pop
scas
ficompl
sbb
mov
sahf
in
loope
enter
sbb
aad
ja
cmp
adc
inc
mov
jge
scas
mov
cmp
inc
or
test
jbe
adc
dec
mov
sub
jne
ja
xchg
movsb
dec
lds
scas
cwtl
or
lods
cmpps
and
call
xchg
bound
fsubrs
push
mov
adc
add
inc
mov
in
sbb
inc
aas
popf
lods
iret
lock
jmp
nop
mov
push
mov
mov
mov
notl
mov
ret
adc
rclb
jmp
test
jnp
cmpsb
bound
dec
fists
mov
ss
and
sahf
mov
mov
inc
fdiv
jge
mov
mov
loop
pop
push
test
xchg
or
sub
cmp
lahf
stc
hlt
push
cld
lahf
stc
imul
jg
ret
cmp
pushl
push
sarb
notl
repnz
jecxz
test
push
sbb
xchg
cmp
add
inc
lcall
sbb
xor
fcoml
xchg
adc
outsb
test
inc
xchg
loopne
rolb
jmp
inc
mov
inc
fs
movsb
sbb
inc
jo
stc
iret
xlat
mov
repnz
loope
inc
ja
fldcw
mov
xchg
mov
sbb
idivl
sarb
sbb
jo
add
rorb
mov
jl
ja
cmp
mov
dec
sbb
popa
adc
adc
mov
pop
into
pop
movl
daa
pushf
jmp
push
lret
xchg
lods
ja
mov
bsr
pop
out
int
adc
loop
je
lods
cmp
mov
sbb
jns
ss
rcr
pop
leave
loop
add
pusha
fldl
jmp
inc
sbb
sub
xor
hlt
insb
dec
mov
jecxz
cmova
mov
add
call
in
push
jecxz
mov
xchg
inc
roll
cltd
mov
and
fcomps
push
inc
sbb
inc
xor
mov
or
mull
xchg
pop
into
pop
in
dec
mov
lock
out
sbb
cmp
and
mov
inc
pop
mov
mov
andb
inc
shlb
mov
aad
mov
ja,pn
xchg
xor
fisttps
shl
cmp
push
test
xlat
call
jae
mov
sub
jmp
mov
je
dec
jmp
add
test
mov
jp
inc
pop
sbbb
shrb
inc
cmp
lds
xchg
jmp
mov
dec
inc
mov
jge
xor
xchg
inc
dec
ss
repz
dec
aam
jo
inc
inc
repnz
shll
jnp
jnp
jg
sub
sbb
call
ja
jmp
pushf
pop
inc
add
jno
xor
inc
fs
dec
in
push
pop
xchg
and
addr16
divl
jle
out
lods
sbb
hlt
popa
pushf
inc
shlb
add
jns
pop
xchg
negl
test
lcall
ljmp
jl
mov
imull
lcall
fincstp
xchg
add
push
ss
icebp
or
push
cmp
mov
and
in
mov
dec
jno
sbb
add
push
icebp
or
cmp
xor
jnp
outsl
daa
jge
sub
cwtl
fisubrl
lds
pusha
xorl
mov
into
adcb
test
ds
cmpb
jg
arpl
xor
pop
adc
jp
out
mov
jg
push
scas
xlat
adc
test
jnp
loope
pusha
mov
or
mov
mov
xchg
lcall
stos
inc
sarb
cmp
imul
mov
subl
or
lret
movl
and
pop
inc
xor
ret
xor
jbe
leave
xchg
sub
test
stc
movsb
icebp
add
cmp
shlb
es
dec
pushf
sbb
add
pop
nop
push
mov
cmp
insb
jno
inc
leave
inc
cmp
cmc
xchg
xor
inc
insb
fwait
xchg
adc
pushf
loop
xchg
es
pusha
jns
lds
lods
or
jnp
jo
in
rcrb
inc
pop
add
loope
lock
nop
add
dec
stos
jmp
push
cmp
ret
xchg
mov
dec
add
mov
and
mov
sbb
jbe
in
fdivrl
sbb
pusha
sub
xor
nop
push
pop
adc
push
pop
mov
and
cmpsb
pop
call
add
adc
lret
movsl
leave
sbb
sbb
ds
mov
pop
mov
sub
daa
and
arpl
in
jecxz
xchg
mov
ja
push
jmp
jno
xchg
sub
jns
pop
mov
test
add
inc
mov
gs
cmp
les
mov
loopne
add
cs
jns
fidivrl
add
sub
bound
or
mov
jns
je
push
adc
dec
xchg
and
or
add
jl
out
inc
movsb
push
mov
add
cmpsl
out
cmp
mov
insb
rorl
xchg
lret
add
lods
dec
xchg
test
and
call
jp
jp
into
mov
cmc
cmpb
roll
or
push
adc
jnp
adc
pop
adc
add
dec
test
adc
mov
inc
lods
aad
lcall
or
lcall
mov
fdivrl
or
popa
pop
sbb
mov
lret
jne
mov
dec
xchg
movsb
sbb
in
sbb
xchg
pop
stc
sbb
ljmp
cmp
push
sub
jb
jg
jne
cmp
xor
mov
add
test
fnstcw
lods
mov
into
push
jle
imul
inc
push
not
sbb
lods
cwtl
stos
adc
mov
negl
jb
shl
pushf
cmp
sbb
jnp
xor
push
popf
dec
and
pushf
xchg
sbb
dec
mov
aad
aam
adcb
sti
mov
push
test
lock
fsubl
push
xor
inc
pop
pusha
lods
lds
cmp
jno
rorb
adc
jmp
inc
insl
js
fs
cld
push
lahf
ret
outsb
dec
adc
cmp
imull
je
and
je
jo
mov
add
shl
sti
lods
adc
outsl
xchg
lahf
jp
cmp
sbb
and
mov
rclb
test
inc
ja
inc
mov
jecxz
scas
sbb
sub
fxch
loope
sbb
jmp
push
aaa
popa
sub
arpl
jge
inc
pop
ljmp
imul
daa
aaa
and
inc
mov
jo
clc
scas
mov
xor
pop
push
cltd
pop
outsl
movntq
out
repz
jns
inc
ret
xor
xor
das
pusha
xor
and
ds
lods
or
loope
daa
jno
mov
dec
adc
jns
ret
adc
or
sbb
adc
ret
pop
and
add
cmp
mov
jmp
shrb
xor
and
mov
ja
test
xchg
mov
jecxz
fdivl
and
in
push
shrl
outsl
mov
adc
rolb
add
mov
stos
addr16
sbb
adc
fnstenv
xchg
rorl
jl
ret
nopl
test
xor
sarb
mov
pop
push
cmpsl
jb
popf
repz
sub
outsl
mov
or
out
xchg
jge
sarb
cmp
mov
sbb
jg
push
push
push
add
rcrb
addr16
jl
pusha
mull
or
push
xchg
outsl
repz
ljmp
inc
dec
fcomp
xchg
mov
jmp
xor
adc
inc
dec
inc
pop
xchg
xor
mov
and
mov
ja
mov
pop
push
inc
fcmovbe
insl
es
mov
insb
dec
inc
aad
adc
sub
mov
or
lahf
fistps
div
sbb
mov
cmp
test
fdivrl
test
add
xchg
pop
push
rcrl
stos
pusha
cmpsl
cmpsl
push
dec
inc
jge
test
imul
loop
xchg
aaa
popa
ds
iret
notl
dec
sbb
and
aaa
xchg
mov
out
and
inc
xchg
add
fs
rcrl
cmp
mov
pop
pop
cmp
mov
pushf
loop
mov
adc
sub
aas
mov
dec
adc
or
ss
fisttps
imul
iret
dec
inc
sbb
test
sbb
push
std
mov
jnp
or
jl,pt
cmp
pop
mov
ss
loop
ljmp
xor
lods
sti
ds
pushf
pop
repz
fldl
les
aaa
ja
mov
sahf
nop
xchg
dec
sbb
push
or
daa
nop
mov
pusha
fidivl
mov
sbb
data16
mov
pop
push
cmpsb
xor
shl
inc
add
inc
clc
cs
pusha
fistl
pop
ljmp
in
aaa
xchg
fstl
rorl
addr16
mov
aaa
mov
or
jecxz
sbb
push
pop
popf
jmp
faddl
cmp
aas
sub
arpl
push
mov
insb
fs
jnp
or
es
dec
ja
adc
push
sahf
xorl
out
and
xchg
cmpsb
lea
rclb
xchg
xor
push
sti
test
dec
sub
mov
shl
mov
push
pushf
cmp
imul
fildll
sbb
sbb
or
pop
adc
cmpsb
or
int
pop
xchg
dec
pop
ja
pop
rclb
repnz
orb
movsl
fstps
mov
lods
fwait
sub
cltd
rcrb
lods
icebp
pop
push
xor
adc
dec
pop
imul
jmp
xchg
enter
cmp
movq
dec
add
test
shll
lods
scas
test
jle
cmp
xchg
cmp
ret
xlat
std
mov
dec
loop
or
sti
outsb
adc
cli
sbb
stc
mov
cwtl
xchg
and
xor
stos
imul
dec
incb
loop
out
xchg
inc
orb
scas
mov
or
pop
inc
or
or
xor
adc
sub
adc
xchg
je
out
dec
scas
dec
aas
mov
lods
push
jnp
mov
inc
jp
sbb
mov
pop
aaa
pop
and
out
mov
jb
lret
enter
inc
push
imul
dec
sbb
cmp
movsl
push
fsubs
das
sbb
lods
test
xchg
cmc
add
add
sub
mov
push
sar
pop
mov
sbb
pusha
add
fwait
ret
test
cmp
xor
fadds
and
push
pop
nop
or
lcall
scas
xchg
mov
xor
fsts
pop
test
ret
xchg
mov
jg
pusha
inc
pushl
xchg
sbb
push
mov
test
cmpsl
scas
mov
xchg
loope
inc
in
xchg
sbb
xor
addb
in
fwait
inc
popa
push
test
sbb
sarl
dec
popf
std
out
mov
push
mov
jge
cmp
adc
mov
jle
aad
in
fstpt
fmulp
cmp
lcall
mov
ds
in
cmp
cmp
ror
ljmp
xchg
or
add
aad
xor
fidivl
fdivl
fwait
push
rol
cmpsb
ror
out
sbb
and
push
adc
test
scas
or
and
adc
iret
shlb
cmp
push
idivl
insb
push
lahf
sbb
pop
mov
push
hlt
scas
lods
xor
sar
inc
repz
push
fisttps
int3
jne
dec
inc
add
jae
pop
inc
or
push
mov
test
inc
xchg
mov
cmp
test
das
int
pop
sub
jecxz
leave
dec
xor
xchg
jle
sbb
movsl
inc
ljmp
jo
lcall
jo
mov
or
leave
out
pop
divl
test
loopne
pop
add
pop
jmp
adc
fnop
mov
dec
out
les
inc
inc
gs
xchg
push
pop
clc
pop
xchg
mov
ljmp
jg
jecxz
leave
mov
int3
lds
test
lock
test
repz
jno
out
test
push
add
mov
sbb
xchg
or
cwtl
add
dec
js
xchg
loopne
xchg
nop
adc
imul
test
or
xchg
adc
test
dec
cld
loop
mov
iret
jmp
sub
jecxz
out
push
dec
mov
inc
cmc
jecxz
jge
and
push
out
sub
xchg
aam
daa
in
xlat
mov
outsb
adc
add
cmpsb
inc
add
mov
xchg
cmp
lcall
fcmovnb
or
mov
mov
sahf
mov
rcr
nop
stos
xchg
aas
add
jne
dec
fwait
xlat
fdivr
xor
imul
jnp
dec
cli
scas
outsl
outsl
insl
mov
cli
sbb
fsubl
push
sub
sub
ljmp
pushf
in
addr16
push
push
mov
add
xchg
mov
add
push
jnp
cmp
ja
xor
stc
or
xchg
cmpsb
add
out
idivb
pop
jne
sbb
inc
dec
in
jns
xchg
push
cmc
out
aaa
dec
add
mov
rcrl
cs
sahf
subb
sarb
mov
aas
outsb
es
rorl
ret
cs
sbb
mov
mov
ds
repnz
rcrl
dec
xchg
leave
mov
test
or
adc
outsl
mov
or
cmp
dec
jo
xchg
lea
pop
jns
cmp
push
mov
clc
sti
xchg
sahf
imul
insl
cmp
loopne
aaa
iret
xor
bnd
sub
push
pop
sbb
xchg
fs
lock
flds
mov
out
stos
or
adc
xchg
jmp
xchg
test
scas
ss
push
mov
xchg
sub
ja
add
punpcklbw
dec
add
cmp
cmp
mov
mov
enter
add
in
inc
or
test
pop
rcrl
or
clc
lods
fistl
andb
test
xor
leave
mov
out
cwtl
sub
sbb
shrb
repnz
fidivrl
xchg
lods
dec
mov
cmp
push
pop
outsb
nop
push
lcall
xchg
ja
push
jl
adc
mov
stos
pop
xchg
pop
inc
mov
mov
lea
test
out
sbb
mov
dec
cmp
xor
or
sbb
mov
sbb
jo
dec
mov
inc
outsb
jb
subl
xor
mov
inc
cmpsw
movb
cld
mov
jecxz
test
push
test
xchg
jmp
and
mov
xchg
fsubrl
push
push
shll
pop
arpl
arpl
repnz
and
popw
mov
xchg
out
dec
add
jnp
inc
loopne
loop
outsl
mov
and
and
sub
dec
sbbb
add
mov
jns
xor
out
mov
inc
pop
and
icebp
pop
push
or
add
test
rclb
ret
cmp
inc
aas
sub
sbbl
xchg
pop
pop
cmp
leave
movsl
xchg
mov
pop
andb
fcompl
ficoms
jb
jo
cmp
sbb
jge
icebp
ljmp
cmpsl
cmpsl
or
add
pusha
loop
les
rcrl
xor
or
das
inc
mov
loopne
or
out
pop
push
dec
xchg
lods
loopne
dec
cmp
loop
cld
cs
xchg
push
out
adc
mov
insb
aam
ret
push
dec
lods
mov
inc
sbb
push
fdivr
push
sbb
add
jbe
dec
insb
not
dec
dec
ja
xor
imul
aad
sub
adc
rolb
out
fs
notl
out
and
cli
addr16
test
in
sbb
jns
popa
push
fidivrl
es
add
scas
pop
xor
mov
bound
in
lret
scas
rorb
xor
lret
xchg
incl
sbb
lea
dec
sbb
out
mov
addl
xorb
clc
lret
xor
adc
in
scas
fildl
shl
repnz
adc
sub
push
lret
sbb
jbe
lret
jbe
and
pushf
pop
sub
cmp
jp
xchg
sub
xchg
mov
jge
cld
mov
inc
idivb
hlt
adc
cmp
mov
jp
sbb
lds
cmpsl
rcrl
inc
rclb
dec
orl
sub
ja
xor
repz
jmp
inc
shll
mov
xchg
inc
mov
mov
pop
pop
mov
dec
into
jb
test
inc
pop
cmp
add
and
and
add
scas
mov
rolb
or
or
popf
jp
add
push
call
xchg
fwait
mov
add
js
popf
add
outsb
ja
add
nop
xchg
pop
rcr
or
pop
out
insl
rol
call
outsb
xchg
inc
test
and
jnp
jecxz
repz
inc
fidivrs
outsl
jecxz
jbe
mov
inc
loope
jnp
lods
test
std
sub
and
xchg
cmpsl
insl
popa
mov
cmpl
pop
sub
dec
sbb
out
notb
dec
xchg
xchg
shl
dec
sub
fsubl
fwait
sbb
test
mov
cmp
xchg
xchg
pop
mov
mov
push
push
test
out
jge
in
int3
js
fadds
mov
push
sahf
ret
xchg
or
and
xchg
out
fmuls
push
in
pushf
dec
push
inc
es
ffree
or
pop
icebp
les
test
sti
loope
int3
imul
filds
mov
dec
push
pop
lret
cmp
and
dec
jp
xchg
call
xor
pop
inc
enter
pusha
and
jp
lahf
xor
jg
test
or
leave
xchg
cmp
mov
sbb
sub
xchg
shlb
cmp
and
xor
dec
pop
cli
mov
ror
mov
or
ja
cli
cmp
mov
out
cmp
pop
cwtl
loopne
xor
mov
jge
and
testl
xchg
dec
cld
mov
lcall
adc
xchg
in
repnz
push
mov
sbb
push
sub
adc
or
loopne
rolb
filds
mov
fdivrl
mov
stc
into
sbb
pslld
nop
imul
adc
xchg
jp
mov
push
sbb
subl
scas
loope
xor
sbb
xchg
enter
movsb
dec
int
cmp
shlb
xor
lahf
push
mulb
ja
test
adc
call
rolb
cmp
scas
jns
testb
pop
shrb
sbb
jl
lds
lods
lcall
test
or
out
cltd
rcl
dec
popf
push
dec
out
sub
sbb
hlt
test
das
pop
clc
mov
add
rcr
test
cmp
xchg
sahf
mov
insl
jae
lret
pop
js
xor
sbb
fcomps
and
jnp
fcomps
adc
mov
sbb
xor
or
inc
cld
in
and
adcb
jns
jne
cmp
xchg
push
adc
mov
or
lock
cmp
test
fwait
int
mov
mov
add
mov
xchg
aaa
inc
cmp
test
cmp
addr16
popl
popa
sub
pop
xchg
ret
ja
cmpsb
add
mov
fs
push
or
leave
xchg
jl
mov
jmp
aas
aad
push
aad
sbbl
or
jo
mov
pop
xchg
test
rclb
jg
mov
xchg
adc
pusha
orb
mov
loope
dec
bound
mov
sbb
jnp
push
jecxz
cmp
mov
or
cmp
mov
xor
xchg
in
pop
dec
or
popf
cltd
pop
inc
cmp
jge
lods
and
mov
loop
cmp
xor
sbb
xchg
and
sub
mov
cmpsl
insb
sbb
mov
sti
subb
in
add
test
mov
ret
push
pop
lods
mov
pushf
pop
xchg
pusha
aas
fdivrs
xchg
add
sarb
push
shrb
inc
stos
ds
insb
iret
push
jo
cs
fildll
mov
dec
repnz
ja
adc
mov
orb
lret
pusha
cltd
push
xchg
int3
cmp
decb
ja
ljmp
mov
push
xchg
mov
sub
push
nop
scas
inc
rol
rcr
xor
cld
repnz
test
ja
sub
add
dec
imul
push
cs
pop
sbb
fs
adcb
dec
inc
add
sbb
and
sub
leave
cmp
or
xchg
jno
jno
dec
lock
clc
jnp
loop
rorb
xchg
pop
and
lret
mov
sahf
fmull
lret
orl
fldcw
scas
lds
fwait
adcl
mov
hlt
test
cmp
mov
xchg
pop
testb
fistpl
rclb
imul
xchg
cltd
test
lcall
mov
mov
andb
or
pushf
faddl
dec
mov
and
jge
test
repz
movsl
ret
dec
add
repz
aad
push
outsb
test
jmp
int3
in
adc
mov
test
pushf
cmpps
les
pushf
leave
rclb
ret
xchg
adc
xor
pop
inc
inc
xchg
sbb
jne,pt
dec
sbb
and
jo
mov
test
icebp
pop
ret
push
xor
push
dec
jo
ljmp
push
add
inc
push
jnp
sarb
inc
jb
ds
aas
push
or
jb
cmp
test
ret
or
ja
dec
pop
push
rcrb
test
mov
dec
jbe
mov
pop
loope
stos
pushf
xchg
mov
inc
pop
loop
insb
mov
gs
adc
inc
test
and
mov
insl
adc
xor
inc
jno
repnz
cmp
jne
mov
cmp
daa
mov
das
in
out
inc
dec
popa
jo
push
push
popf
push
xchg
adc
iret
or
pop
sub
int3
clc
pop
ror
jle
loop
push
cltd
arpl
cmpb
sarb
stos
out
pop
sahf
je
bound
inc
sbb
ret
push
data16
fstp
pop
dec
addl
or
xchg
cltd
addr16
jns
insl
lahf
rcr
iret
dec
daa
loopne
ror
push
lahf
and
sub
ss
arpl
pop
mov
iret
test
jecxz
cmp
or
push
add
pop
nop
xchg
jge
mov
jl
mov
sbb
test
fsubrs
sahf
sbb
mov
xchg
pop
or
fsubrs
and
xor
jne
jmp
and
mov
fsubr
cmp
clc
cmpsl
hlt
orl
push
jle
popa
push
mov
pop
push
je
dec
dec
in
ja
jne
xchg
cmpsb
sarb
cld
mov
sub
push
pop
andl
adc
movsb
shll
and
addb
fists
sub
popa
daa
sub
popf
mov
jno
sti
xor
mov
push
addl
cmpsl
mov
movsl
cltd
jno
inc
xchg
adc
lcall
xchg
imul
pop
sbb
fistpl
out
mov
in
dec
leave
jno
cmc
xchg
push
in
mov
xor
xchg
mov
insl
cmc
pop
push
leave
cmp
iret
idivb
sub
pop
lds
pop
mov
mov
fidivrl
dec
mov
into
popa
xor
pop
mov
test
jg
add
push
les
mov
cmpsb
mov
roll
in
xor
sti
hlt
cmp
pop
loopne
cmpsb
fimuls
mov
jns
inc
xor
sarb
test
jge
test
xor
cmp
shlb
inc
xchg
ja
or
aad
in
popa
mov
scas
or
js
mov
inc
cltd
push
push
lods
pop
xor
fdivr
adc
jle
ja
movsb
js
or
pop
lcall
outsb
cmp
mov
add
lods
xchg
add
xor
sbb
xor
pop
test
xor
xchg
cmp
mov
ja
push
aad
les
std
adc
pushf
pop
fcompl
adc
inc
mov
repnz
mov
mov
stc
movsl
nop
test
and
xchg
mov
subl
sti
jnp
jmp
or
dec
aad
test
out
jb
sub
xchg
icebp
push
mov
push
cmp
dec
jne
in
dec
mov
sbb
sarb
or
mov
mov
inc
lock
lods
push
pop
int3
cmp
repnz
loope
cmp
les
jae
in
flds
repnz
ljmp
jo
add
xchg
repz
outsl
es
mov
mov
lods
fnstsw
lret
mov
test
xor
and
scas
xchg
lds
fdivr
jo
and
out
rol
int3
cmp
dec
dec
mov
test
inc
aas
clc
jg
enter
mov
cmp
cs
out
mov
push
inc
mov
orb
popl
shll
and
dec
xor
das
sbb
movsl
stos
testl
int3
dec
ljmp
and
test
pop
test
sub
dec
out
pop
mov
xchg
int
lcall
jnp
sub
mov
xchg
sbb
or
jg
les
iret
cmp
pop
jge
xchg
lods
pusha
inc
cmc
scas
inc
sbb
loope
or
inc
mov
sbb
and
pop
xor
test
push
movsl
pusha
fistl
xor
sbb
imulb
inc
jo
sbb
std
loope
jle
ds
into
mov
ljmp
lret
sbb
jmp
sbb
mov
jecxz
push
loopne
add
mov
jmp
cmp
js
ja
lods
xchg
jns
pop
sbb
gs
xchg
and
pop
dec
movzwl
jns
jp
rorb
repz
add
pop
inc
data16
jg
inc
push
repz
xchg
mov
enter
je
popf
fldl
insb
dec
ja
adc
mov
bound
lods
jmp
mov
jmp
mov
iret
pusha
stos
mov
cli
in
sbb
inc
pop
pop
add
stos
jae
xchg
fldl
int3
xchg
xchg
inc
mov
cmp
aaa
clc
push
stc
aas
xchg
push
orl
add
xor
or
test
js
movsl
push
sahf
add
xor
pop
loopne
out
dec
xchg
imul
icebp
and
or
sbb
add
bound
jmp
mov
push
mov
add
xchg
adc
mov
nop
and
mov
sbb
stc
cmpsl
imul
jb
or
cmc
sbb
jbe
sbb
lds
pop
cs
hlt
push
repnz
sbbb
cs
xor
loope
rorl
out
inc
shl
aas
insb
test
ret
ss
imull
mov
sub
pop
test
outsb
add
jg
sbb
stc
jmp
jo
or
cmp
fsts
cmpb
mov
aas
mov
jl
xchg
rcl
add
js
sbb
jne
jle
int
int3
rcl
xchg
cmp
mov
or
stos
push
js,pt
xor
leave
mov
and
xchg
jae
pop
loopne
mov
sbb
outsb
sub
ds
test
mov
sub
dec
pop
andl
jmp
rol
or
mov
pop
imul
xor
out
cmpsl
jg
mov
adc
test
push
fsubrs
add
test
mov
jne
cmp
dec
cmp
cmp
or
loopne
pusha
sbb
shlb
popa
dec
mov
or
decb
jl
repnz
pushf
cmp
mov
ja
add
xchg
leave
xor
pop
shlb
out
pushf
lcall
out
movsl
cmp
subl
push
xchg
fiaddl
or
sub
fs
lods
cmp
pop
sbb
mov
rclb
mov
popf
mov
jb
mov
pop
jg
ds
pop
rcrl
xchg
and
sbb
cld
mov
jbe
sbb
lods
sbb
adc
test
stc
lods
ja
roll
in
call
daa
testb
cs
or
das
in
std
cmpsb
xchg
xchg
addb
ret
xor
adc
enter
pop
xchg
mov
inc
mov
ja
nop
inc
rcll
pushf
jmp
fs
adc
insb
jbe
jg
popl
cld
icebp
add
add
div
shrl
sbb
or
jmp
mov
sbb
mov
clc
test
inc
push
lds
mov
mov
enter
push
ja
push
mov
mov
ret
imul
adc
jo
adc
orl
rorb
call
adc
in
cmp
mov
outsl
ret
mov
repnz
test
in
fstps
aaa
test
sub
add
aad
pop
arpl
sbb
inc
cmpsl
cmp
test
push
mov
jl
adc
push
jg
cmpb
sub
je
adc
sbb
aam
lods
fs
pop
loopne
and
or
mov
fs
or
ret
xchg
arpl
jbe
mov
pop
jnp
mov
push
pop
out
push
aas
in
out
jle
mov
pop
mov
mov
sbb
add
inc
xchg
dec
stos
insb
fisubs
cmp
repnz
sbb
clc
dec
and
hlt
xor
testb
jno
lods
ljmp
mov
mov
scas
std
xchg
xor
cmp
call
insb
les
lock
mov
jecxz
inc
fildl
stc
mov
sbb
scas
mov
xor
jo
xchg
pushf
and
dec
push
sbb
aaa
mov
xchg
jmp
ret
xchg
dec
add
icebp
pop
or
dec
pop
dec
add
and
ja
popa
fwait
pop
jb
jmp
or
lahf
sbb
push
out
cmp
adc
adc
inc
xchg
pop
loopne
jae
aas
sbb
xchg
call
rclb
mov
stc
cmp
xor
pop
jg
push
out
cmpsl
mov
hlt
aam
push
push
cld
sub
xchg
dec
shlb
lods
sbb
mov
loop
gs
ja
jg
ret
jecxz
push
xlat
dec
mov
cmpsb
jg
mov
xchg
arpl
cmc
jg
shll
stc
dec
test
pop
mov
or
bound
test
lea
pop
scas
cmc
in
adc
add
jmp
subl
cmp
je
loop
inc
clc
out
cmp
cmp
sbb
pop
jno
out
adc
adc
mov
shrb
adcb
aam
fisttpl
jae
cmp
rorb
cmp
jnp
xchg
add
icebp
sub
orb
ja
movsl
push
aaa
out
scas
decl
cmp
das
adcl
jnp
fs
js
lcall
xchg
hlt
add
inc
and
inc
jb
test
std
xchg
jl
fcoml
xchg
lods
jp
pusha
dec
xorl
add
pusha
jmp
xchg
or
xchg
mov
addb
and
mov
ja
mov
and
jl
xchg
imul
testl
and
leave
pusha
add
adc
sbb
sahf
push
xchg
les
push
clc
inc
mov
sub
pop
rcrb
test
loope
mov
push
mov
adc
sar
sub
cmp
dec
fnstcw
add
inc
cli
or
sti
cmc
push
hlt
pushf
push
jae
int
mov
in
xchg
cmpsb
add
jne
mov
dec
pop
xchg
and
mov
sub
sub
push
rol
push
jg
xchg
cld
mov
sahf
push
std
pop
decl
test
push
push
test
sub
xchg
inc
ljmp
repz
push
loop
mov
push
and
mov
inc
loop
out
adc
mov
mov
subl
cmpl
mov
lret
dec
je
outsl
pop
fcoms
mov
pop
insl
jge
mov
sub
ficomps
cmpsb
sub
stos
xchg
test
mov
sarl
rcl
xchg
inc
sahf
rcrb
dec
into
mov
mov
sub
enter
jg
fists
mov
shl
out
lock
push
lods
outsl
je
jg
mov
idivl
ja
test
pop
inc
lahf
dec
mov
mov
fists
cwtl
cmp
cmp
lahf
and
repz
pop
stc
dec
lds
dec
pop
aaa
mov
out
sbb
aas
loope
std
cmp
add
sub
test
mov
fstpl
cmpb
fbstp
xchg
ret
jmp
cmp
xchg
cmpsl
movsb
dec
adc
pop
arpl
add
mov
sub
and
sub
push
loope
cmpsb
es
enter
sbb
subl
sarl
add
mov
bound
xchg
pop
push
jbe
jl
cmp
nop
xor
fadd
mov
and
pop
ja
pop
or
sbb
test
cmpl
insl
inc
mov
mov
ret
jbe
dec
ljmp
inc
addl
mov
popa
fistl
movsb
test
mov
cld
test
jb
aas
out
and
cmp
mov
mov
cli
test
or
dec
scas
js
repz
enter
xor
jmp
add
pushf
xor
jecxz
out
sbb
mov
mov
inc
insl
sbb
jnp
mov
adc
adc
inc
dec
fsubrl
pop
and
lret
fwait
std
mov
das
sahf
scas
mov
xchg
push
mov
push
or
xchg
mov
pop
or
mov
call
es
sub
sub
cmp
and
data16
iret
bound
shll
mov
fcompl
sbb
insb
xor
cmp
adcl
cmp
gs
add
mov
enter
fistpl
shrl
mov
or
pop
push
test
mov
xor
in
jae
xchg
int
leave
sbb
cmp
sti
xor
push
std
cmp
sbb
ja
outsb
mov
mul
dec
cltd
mov
or
movsb
mov
insl
cmpsl
mov
stos
icebp
test
add
cli
mov
dec
iret
clc
dec
xchg
sub
inc
cmpsb
je
xchg
push
jle
mov
lds
cmpsb
push
cwtl
or
arpl
adc
fdivrs
outsb
mov
push
jp
mov
or
leave
sub
test
nop
daa
mov
out
jns
loop
mov
pop
mov
fdivl
aas
sbb
jmp
push
cmp
pop
sbb
mov
mov
pop
adc
orb
sbb
in
xor
mov
inc
xchg
cmp
rcll
shlb
xor
jge
xor
push
cmp
xchg
xchg
ja
push
xchg
ficoms
incb
inc
xchg
iret
insl
scas
sti
pop
adc
fidivrs
dec
add
test
ret
mov
jno
popf
fwait
test
dec
aad
imul
push
repnz
mov
lock
pop
mov
or
xchg
xchg
and
gs
jge
mov
jge
sub
in
mov
jecxz
xlat
mov
sub
xchg
mov
clc
pop
out
dec
xchg
jmp
pushf
fdivrl
lds
test
jl
pop
es
pop
jns
mov
inc
mov
cmp
rcll
inc
dec
test
shl
cmpsb
xchg
add
mov
arpl
aas
cltd
dec
bound
dec
mov
xor
les
or
aas
fs
fwait
cld
out
addr16
repnz
loopne
inc
or
cmp
adc
cmp
lea
les
aaa
iret
fistpll
xchg
test
cmc
inc
inc
ljmp
sub
cmp
push
jmp
into
mov
push
add
stos
gs
out
fcmovnu
cmpsb
pop
sbb
pop
push
jecxz
ja
loopne
mov
pop
jl
push
mov
or
int3
mov
pop
pop
les
repnz
test
loopnew
stc
test
out
pop
jg
lcall
je
push
in
jne
jns
test
dec
imul
negb
cmp
iret
testl
bound
mov
fsubrl
ret
sbb
sbb
push
push
xor
cmp
push
push
pop
cwtl
popa
jnp
jp
jl
dec
rclb
cld
pushf
xchg
sbb
out
and
xchg
inc
testl
imul
shrb
push
insb
mov
lods
in
dec
cmp
mov
push
mov
mov
add
sbb
insb
shll
sub
in
pop
frstor
test
mov
sbb
and
add
outsl
leave
push
aas
sbb
inc
shrl
jnp
mov
shlb
xchg
adc
sbb
sti
aam
sahf
andb
stc
mov
or
ret
fsubl
inc
dec
in
or
fsubl
xchg
or
aaa
sbb
test
fnstenv
cmp
pop
lret
cmp
cmp
mov
test
dec
ss
jl
sub
add
or
pop
sbb
decb
push
test
mov
dec
mov
dec
mov
xchg
and
cli
cmp
ja
jo
mov
ret
and
pop
xchg
test
push
mov
or
flds
cmovne
dec
xor
jnp
and
icebp
pop
std
jnp
ja
push
into
je
xor
fidivrs
test
js
xchg
push
push
sarb
inc
enter
ja
or
inc
mov
in
mov
add
scas
mov
mov
inc
sahf
cmp
stos
test
dec
addr16
xchg
mov
jns
xor
sbb
lock
lods
cmp
sbb
stc
mov
les
dec
dec
inc
test
lds
movl
test
sbb
or
mov
push
mov
movsl
xchg
lea
out
xor
fidivrs
dec
lods
dec
add
push
jmp
lds
out
or
ficomps
repnz
in
cld
lret
out
adc
es
dec
pop
idivl
pop
sbb
and
outsl
xor
popf
aad
mov
lahf
sub
inc
dec
or
scas
xchg
test
add
jmp
push
mov
sbb
rolb
pusha
push
mov
cld
aad
ficomps
xchg
push
sbb
cmp
lret
xchg
fdivs
mov
pop
push
addr16
out
xchg
loopne
cmp
lods
adc
aaa
or
push
mov
dec
test
je
add
jns
iret
push
xchg
jae
xchg
in
add
test
inc
lret
or
sbb
cmp
jg
lret
js
neg
arpl
add
xchg
mov
sbbb
cmp
inc
xchg
add
enter
push
xchg
inc
add
jecxz
and
mov
ja
ret
and
fildl
aad
or
dec
cld
ljmp
cmpsb
push
imul
pop
popl
mov
dec
xchg
cwtl
and
sub
xchg
ret
fs
loopne
mov
mov
xor
mov
xchg
xchg
es
cmpsl
sub
out
mov
xchg
test
sub
fiaddl
mov
pop
pop
lahf
jnp
insl
pop
rolb
clc
mov
lret
fnstenv
ds
ja
cmp
int
mov
outsb
sub
scas
mov
rcrb
repnz
adc
push
in
jb
jno
push
pop
dec
data16
adc
cmp
jge
aaa
stc
iret
mov
sbb
mov
cmp
cmp
dec
pop
lods
xor
sub
out
xor
repz
mov
inc
xor
xchg
xchg
mov
inc
shl
lret
test
adcb
sbb
jmp
cmp
rolb
out
mov
je
sbb
inc
jmp
outsl
fmull
inc
std
lds
jge
mov
xor
ds
aam
fisubl
xor
inc
lods
cmp
rclb
cwtl
push
push
int3
jg
push
sub
push
into
scas
mov
ljmp
imul
and
pop
sbb
repnz
jge
xchg
adc
lcall
loopne
jb
add
leave
mov
xchg
and
mov
cmp
jecxz
add
pop
lods
add
jnp
cmc
cmp
cmp
cmp
and
bound
cmp
das
fcompl
pop
ficoms
or
mov
push
mov
sbb
add
pop
jle
pop
fwait
sub
jnp
sti
imul
inc
dec
jo
cmp
fdivrs
inc
pushf
sub
xlat
mov
mov
popa
xor
cmpsl
pop
lods
loopne
add
cmp
fwait
xchg
fcom
adcl
imul
insb
jmp
aad
in
mov
in
inc
adc
scas
inc
or
scas
shlb
sub
mov
adc
mov
push
xchg
mov
jmp
jne
icebp
jo
jno
repz
dec
mov
xchg
xchg
cmpsb
cmp
test
cmpsb
fisttpll
pop
mull
jmp
jge
xchg
sbb
and
push
sbb
mov
aas
or
loopne
dec
test
cmpsl
daa
dec
rcrb
daa
push
ljmp
sbb
leave
and
add
sarb
sbb
sbb
dec
or
jge
mov
dec
push
xor
rol
orb
clc
jg
lret
aas
mov
addr16
jle
cmp
rolb
dec
fiaddl
repnz
enter
xchg
xchg
fwait
and
fistpll
inc
arpl
push
push
xchg
or
das
push
clc
dec
aas
popf
aam
ja
aad
fisttpl
adc
inc
xor
subl
and
out
test
push
xor
and
mov
fwait
dec
jmp
mov
inc
inc
mov
orl
jl
inc
adcl
ja
pop
imul
and
int
pop
shlb
gs
cmpsl
push
jl
mov
xor
mov
outsl
add
rolb
iret
cmp
scas
fldt
xchg
xchg
xchg
leave
inc
jle
xchg
dec
in
mov
insb
jle
stos
ja
sbb
sub
mov
push
in
bound
mov
mov
add
in
hlt
sub
lods
push
mov
xchg
ret
popa
sbb
cmp
xchg
testl
push
pop
rorb
cmc
mov
sbb
icebp
adc
jo
push
inc
popa
add
lret
push
xchg
pushf
xchg
ja
je
mov
jp
adc
sahf
xchg
and
inc
lods
cltd
out
and
push
repz
xchg
xchg
rcr
sbb
popa
aad
flds
mov
out
data16
mov
in
pop
lret
dec
mov
js
mov
stos
gs
fistl
shrl
inc
rcrl
sbb
sub
testl
iret
cmpsb
cmp
sub
mov
addb
and
xor
ja
loop
cmpsl
sbb
andl
and
cmc
or
popa
mov
mov
xchg
movsb
mov
adc
daa
mov
inc
mov
xchg
xchg
mov
imul
stc
daa
rol
sub
sbb
fisttps
rolb
add
ds
xchg
mov
sub
jl
pop
xor
mov
aam
pop
ss
pop
cmpsb
fcomip
pop
push
mov
out
inc
aam
fwait
test
idivl
out
nopl
dec
cmc
mov
and
mov
pop
mov
sbb
push
and
test
xchg
xchg
nop
jo
and
sahf
cmp
cmp
aad
aas
repnz
leave
ljmp
sarl
pop
inc
das
ja
pop
ljmp
adc
iret
sbb
mov
pop
out
pusha
mov
not
aam
out
es
xchg
fldcw
cmpb
movsb
addr16
push
ja
mov
mov
pushf
cmp
mov
loope
repz
jb
mov
cmpsl
xchg
add
daa
outsl
clc
xlat
cs
cmpl
outsl
add
out
jle
repnz
aas
sbbl
daa
dec
mov
dec
mov
les
or
int
xor
repnz
adcl
rclb
mov
test
cmp
fidivrs
popf
sbb
punpckhbw
rorl
mov
cmpsl
dec
push
sbb
rdpmc
cbtw
aaa
into
and
xor
mov
test
mov
xchg
repnz
mov
aaa
xchg
and
mov
ja
jae
pop
mov
repnz
addr16
dec
xor
and
jmp
xchg
cmp
test
aam
sbb
fnstcw
pop
mov
dec
push
cld
iret
sbb
sahf
jbe
sbb
xor
jo
and
outsl
test
jp
addl
mov
xchg
neg
mov
sbb
sbb
out
lods
je
test
ret
mov
cmp
pop
mov
xor
sub
dec
repz
sbb
sbb
lock
pushf
test
fdivrs
xlat
mov
push
arpl
movsb
cmp
popa
adc
adc
and
clc
pop
dec
aas
mov
or
test
dec
pop
dec
std
rcrl
ja
xchg
push
data16
icebp
adc
or
lahf
xor
repz
and
les
mov
sbb
out
clc
stos
add
jge
and
aaa
sub
adc
daa
pop
pusha
inc
in
jnp
jo
fwait
cmc
push
out
add
xchg
or
mov
fnstcw
ljmp
hlt
mov
mov
pop
mov
mov
jge
push
int3
lea
lock
adc
in
push
or
xor
fxch
dec
or
pop
push
leave
sbb
xchg
jle
xchg
dec
sbb
dec
movsl
int
cwtl
lcall
sub
push
ret
jp
push
mov
pop
cltd
fistpl
jne
mov
cmp
fiadds
push
ret
add
mov
ljmp
int3
int
adc
or
push
imul
inc
aam
cltd
or
les
mov
aam
test
inc
sbb
sub
fst
addr16
xor
or
cmpb
lea
lock
shufps
negb
icebp
sub
cmp
xchg
les
push
cmp
add
in
loopne
aas
sub
call
pop
jle
lahf
sbb
in
loope
mov
push
pop
fstpt
ss
lods
mov
jle
dec
notl
rolb
xor
mov
xlat
clc
pop
pop
and
sbb
psrld
paddd
aaa
jl
push
clc
rorb
sub
push
or
fiaddl
iret
stos
ret
rcrl
mov
mov
idivl
lods
push
in
jg
add
dec
shlb
arpl
aam
jl
pop
cmp
stos
mov
xlat
fxch
push
mov
xor
xor
shlb
in
daa
push
push
or
mov
xor
adc
sbb
mov
xchg
in
icebp
xchg
pop
xchg
inc
xor
sbb
sbbl
add
addr16
inc
mov
ret
jns
push
ret
dec
sbb
jge
shr
dec
mov
jp
js
adc
push
fldl
jo
pop
dec
jmp
test
pusha
ror
in
cltd
xchg
sbb
es
push
cli
mov
arpl
mov
aaa
int
shlb
test
insb
imul
arpl
add
mov
sbb
bound
les
mov
iret
sub
pop
mov
jo
inc
and
leave
inc
push
ret
pop
movsl
in
out
pop
test
movzbl
or
cmpsl
stos
fwait
dec
in
popa
das
dec
std
ret
out
cmc
addr16
xor
sbbb
popa
push
jns
add
inc
xor
sub
dec
test
cs
imul
or
daa
jecxz
xchg
loop
leave
cmp
mov
aaa
dec
cmp
xchg
ds
adc
test
xchg
and
xchg
dec
sbb
push
daa
sahf
test
push
pop
inc
xorb
cmp
ret
cmp
and
sti
mov
cmpb
test
lods
pop
insb
mov
jle
jp
test
test
push
jle
mov
add
xor
movl
adc
jmp
outsb
or
lods
bound
je
sub
in
inc
xor
pop
adc
lods
out
scas
jecxz
mov
jnp
call
aas
sbb
rorb
push
mov
sar
cmp
loop
mov
roll
loope
inc
lcall
js
pop
fadd
mov
aaa
in
scas
rolb
test
inc
bound
nopl
dec
mov
bound
sbb
sub
repnz
lea
jmp
fadds
add
arpl
inc
shll
pop
sbb
adc
scas
adc
sbb
das
and
xlat
test
adc
fdivrl
insl
ljmp
adc
sub
add
and
dec
inc
lods
imul
das
cmp
dec
mov
cs
hlt
xor
call
mov
push
insb
movsl
sub
cmp
pop
sub
shrl
pop
cld
scas
pop
hlt
mov
ret
lds
pop
je
mov
adc
push
cmpsb
jnp
xchg
test
mov
inc
iret
stc
dec
adc
pop
lsl
out
repz
test
xchg
adc
gs
popl
int3
stos
ret
jmp
insb
andb
pop
xchg
frstor
sahf
sub
lds
ss
pop
push
xor
cmp
push
lret
and
out
roll
and
out
imul
ja
add
daa
fdivrl
pusha
out
je
mov
jo
xchg
mov
push
pop
and
push
loop
out
fisubrl
pop
xchg
in
js
or
test
cltd
fstpt
fwait
cmc
aad
cmp
mov
inc
repz
mov
out
mov
mov
and
popf
mov
popf
bound
or
jbe
pop
mull
das
fwait
mov
mov
sbb
mov
leave
test
lods
sbbl
insl
pop
xchg
vshufpd
into
fbstp
idivb
add
subb
push
mov
add
subl
jecxz
inc
clc
add
lods
sbb
icebp
push
stos
pop
xchg
or
xorl
aam
add
andb
cmpb
inc
xchg
xchg
push
push
andl
call
fisubrs
nop
mov
and
stc
idiv
or
les
pop
mov
cmp
mov
insb
arpl
cmpl
popf
test
arpl
addr16
es
mov
sub
cmp
popa
sub
fsub
xchg
cmp
mov
ds
iret
addr16
dec
sbb
pop
and
int3
test
or
xor
cmp
inc
inc
jecxz
pop
inc
mov
sbb
test
sbb
in
push
push
jmp
jecxz
adc
xchg
sarl
std
in
xor
loop
or
shlb
and
mov
and
inc
lret
or
ss
fiadds
lods
dec
jge
add
mov
test
test
sbb
daa
in
bound
jecxz
jmp
xchg
mov
in
test
push
ja
jp
and
into
pop
fwait
cld
push
lahf
and
fldenv
inc
sbb
gs
mov
jmp
sbbb
incl
mov
nop
fimull
dec
jle
mov
jno
or
xchg
add
jo
fisubrl
aas
or
cmp
push
test
lcall
test
stc
das
push
dec
push
mov
mov
pop
mov
xchg
clc
call
jo
mov
dec
cmpsl
es
js
jo
daa
mov
in
scas
loope,pt
xchg
leave
rorb
ret
sbbl
repnz
push
xchg
fwait
dec
and
inc
jg
or
cmpsl
addb
fcoml
std
push
out
imul
mov
in
sar
jmp
aad
sub
mov
add
mov
cmpsb
inc
push
arpl
push
cmp
adc
cmp
sbb
in
xchg
jnp
or
mov
jl
in
dec
add
dec
ud2
and
xchg
mov
aas
pop
mov
xchg
push
mov
je
sahf
mov
xchg
or
sbb
imul
fs
sahf
pop
dec
aas
paddusb
rorl
notb
sbb
push
sbb
in
repz
or
xchg
inc
lods
ds
nop
jbe
ljmp
jae
fldt
ds
lods
or
cmp
bound
movsb
adc
push
or
sub
std
scas
sbbb
test
mov
daa
and
inc
mov
add
mov
test
ljmp
lea
into
push
mov
mov
ret
cmp
xor
jnp
sbb
xchg
sbb
fstp
mov
aad
movsl
sarb
fwait
idivb
subb
fldcw
mov
jle
aaa
cmp
cmp
mov
sbb
or
pop
pop
inc
ror
daa
dec
ret
sbb
pusha
sti
shlb
push
or
subb
outsb
leave
stc
or
mov
aam
jae
in
cs
xchg
cwtl
lds
cmpsl
add
push
adc
xor
pushf
jo
mov
xchg
mov
dec
jo
ret
sbb
and
out
fistpl
add
jl
jmp
push
dec
mov
adc
out
popf
xchg
add
dec
movsb
sbb
shlb
adc
mov
sub
cmp
xor
cli
shr
in
mov
adc
inc
push
test
cmp
pop
inc
mov
and
sbb
sahf
subl
cmp
cmp
sbb
dec
jp
xchg
fnstcw
cmp
outsb
add
mov
imul
xchg
stos
mov
lods
das
dec
xor
mov
out
nop
pop
test
loop
push
inc
out
addr16
fcompl
test
jnp
add
jg
and
adc
test
jl
out
push
scas
int3
or
out
popf
jne
lret
mov
mov
mov
add
mov
add
out
lret
call
aam
in
dec
push
mov
icebp
ds
cmp
movsl
jge
xchg
addr16
outsl
imul
xchg
jecxz
jns
sarl
mov
addr16
push
inc
inc
in
mov
xchg
jmp
fsts
dec
lods
rorb
aaa
cli
mov
test
daa
adc
or
out
and
xor
add
test
and
mov
test
sbb
xor
xchg
in
push
in
cmp
mov
cmp
mov
cmp
inc
out
jnp
rcrb
gs
fwait
cmc
or
jno
mull
jmp
icebp
int3
jnp
shrl
sub
data16
ljmp
pop
xchg
add
stos
cmp
test
or
pop
loop
pop
cmp
ja
daa
loope
or
dec
inc
mov
or
xchg
stos
lret
testl
dec
in
jne
and
data16
mov
jne
and
outsb
pop
sub
jl
and
mov
add
and
insl
in
add
cmp
sbb
icebp
dec
xchg
mov
jmp
jp
add
mov
out
gs
sub
jno
jns
pop
or
sub
inc
lds
inc
push
mov
cmpsb
push
cmp
push
xor
push
push
and
iret
sti
and
stos
xor
sbb
add
xchg
shlb
ret
jmp
out
mov
cwtl
arpl
repz
gs
or
daa
shrb
fwait
xchg
fs
xor
hlt
sbb
and
fwait
dec
sbb
dec
cmp
out
cmp
mov
jmp
sbb
outsl
fcmovbe
pop
push
mov
fs
jl
pop
lret
test
aas
push
lret
and
sub
or
pop
mov
push
add
jcxz
add
and
mov
sbb
xchg
xchg
push
jl
pusha
or
xchg
pop
mov
mov
sbb
test
xchg
into
jg
jl
fidivrl
cmp
dec
scas
inc
jge
shlb
scas
push
test
jle
xchg
mov
lock
js
inc
movsb
data16
and
pop
inc
mov
push
lds
cmp
push
pop
into
ret
push
push
arpl
mov
adc
add
jae
repnz
mov
lock
cmp
pop
cmpsb
xor
push
and
sti
xchg
or
push
mov
mov
inc
mov
xchg
mov
popf
sbb
mov
push
add
xchg
cltd
mov
iret
mov
push
pusha
pop
cmp
add
dec
pop
xor
daa
and
loop
cmp
cmp
cli
out
addb
sahf
cmpsl
arpl
jo
xor
dec
rcrl
xchg
adc
dec
pop
lret
pop
aas
test
xchg
sub
js
ja
jp
mov
push
in
jae
je
jno
rol
sub
cmpsb
add
test
sbb
shlb
sbb
dec
xchg
inc
popf
ja
pop
lds
test
rcrb
bound
inc
into
or
in
cmpsb
add
xor
jl
mov
inc
data16
test
movsb
loop
dec
stc
inc
pop
mov
mov
cmp
inc
xorb
fwait
sub
or
jge
jp
adc
gs
fsub
dec
fldt
scas
sbb
cmp
shl
dec
jle
xor
mov
sbb
sahf
push
pop
cmp
mov
js
rorb
movsb
scas
cmpsl
dec
pop
mov
jb
dec
lret
js
dec
je
mov
push
jl
push
mov
sbb
pushf
sub
aas
xchg
aaa
ret
jp
movsl
inc
push
xchg
mov
fwait
xchg
jmp
arpl
push
popa
out
jnp
push
testb
pop
mov
aam
lahf
add
push
aad
and
sarl
outsb
bound
dec
pop
adc
push
mov
fldl
push
stc
inc
bound
stc
sub
push
xchg
cmc
fistpll
sti
lahf
mov
std
aam
inc
jmp
popa
add
sahf
push
leave
inc
repz
in
sbb
shl
xchg
fcompl
scas
add
or
testb
lcall
scas
sbb
iret
cmpsb
adc
jne
imulb
call
mov
lret
jl
mov
jl
fs
or
andb
nop
lahf
mov
icebp
and
adc
fistps
mov
xchg
roll
in
pop
sub
data16
mov
jo
inc
push
gs
cmp
mov
xchg
sti
xor
out
data16
adc
out
ja
mov
xchg
movsb
and
fimuls
sbb
lods
push
or
arpl
mov
or
cmp
mov
xchg
cmp
add
mov
loopne
cmp
mov
cmp
xor
inc
push
popa
aaa
cltd
scas
addr16
in
xchg
xor
arpl
es
aas
lods
mov
cmp
inc
sub
in
mov
nop
lcall
mov
adc
test
and
data16
mov
cli
pop
xor
inc
jno
xor
xor
cmp
mov
cmc
or
cmpsb
fisttps
sub
mov
or
aaa
dec
xchg
subb
pop
sbb
inc
test
sub
inc
dec
loopne
xor
lcall
sbb
mov
out
arpl
cmpb
lods
pop
cmpsb
xchg
pop
fidivrl
cmc
cmp
inc
mov
test
xchg
and
jb
or
push
push
xor
pop
push
xlat
test
xchg
pop
cmp
mov
insl
push
fnstenv
pop
insb
mov
outsb
mov
shrl
sub
xchg
adc
adc
jnp
cmp
js
in
repnz
sti
cwtl
leave
rolb
mov
push
pop
aaa
cmp
rcrb
movsb
inc
sbb
jb
sti
cmp
mov
js
test
cmp
out
mov
rcl
jb
in
into
icebp
je
ljmp
ja
push
shrl
sbb
cmp
shrw
xchg
jae
push
aaa
test
jno
pop
mov
pop
mov
dec
add
mov
push
lret
jge
jg
dec
rolb
stc
daa
jecxz
cmpsb
movsb
into
inc
rcl
int
inc
in
notl
out
cmp
add
fsubl
pop
jl
inc
cmp
loopne
lret
data16
cmp
pop
dec
xchg
sub
and
or
rolb
jno
pop
ja
jle
push
pop
fiaddl
xchg
xchg
add
cmpsb
lcall
test
pusha
imul
dec
inc
jne
cmp
cmp
mov
sbb
inc
outsl
jnp
cmp
popf
mov
xchg
cmp
sbb
sub
mov
adc
test
xchg
in
xor
jnp
xchg
jp
jl
mov
inc
jmp
mov
rcrb
loop
data16
test
insl
loop
cmp
dec
push
enter
inc
int3
orb
and
add
test
push
rol
aad
xor
mov
in
stc
mov
jnp
pop
cmp
loopne
repnz
dec
outsw
sbb
jns
dec
out
add
sbb
xchg
push
test
pop
push
add
jno
xor
or
cmp
add
test
cltd
adc
dec
pop
ret
cs
mov
gs
jno
jle
inc
mov
cmp
mov
insl
or
mov
and
mov
lea
out
fbld
jo
pop
out
fwait
pop
adc
test
sub
mov
sbb
dec
pop
out
cmp
stos
mov
sub
xchg
add
mov
pop
dec
fildl
mov
dec
pop
inc
popw
mov
fs
clc
pand
add
jge
sbb
cmp
mov
inc
sub
mov
leave
std
jmp
rolb
pop
fs
pop
out
cmp
pusha
test
cmp
push
or
mov
and
sub
pop
pop
aaa
lret
int
sbb
int3
mov
fs
push
fstpl
dec
fwait
xor
movsb
xchg
sub
mov
in
not
inc
movsl
lods
add
jno
in
addb
xchg
jne
ja
xchg
loope
lcall
mov
ja
or
cmpsb
incb
pusha
jl
bound
mov
and
xchg
outsb
cld
in
push
pop
ljmp
bound
sbb
aad
inc
pop
dec
ja
or
movl
mov
testb
test
dec
bound
icebp
jne
pop
roll
cmp
jl
pusha
test
cltd
jno
js
push
popf
mov
roll
test
in
in
icebp
test
les
inc
jl
cmpsb
sbb
pushf
inc
and
cmp
and
add
and
pusha
cmc
ret
mov
jp
mov
out
les
out
xor
cs
rorb
adc
lcall
mov
jo
jge
pop
xor
fiaddl
push
and
popa
dec
mov
cmp
sbb
dec
fs
jge
or
dec
jmp
or
xor
pop
cld
jbe
dec
pushf
loop
sub
fistl
mov
xor
ja
movsb
into
ret
outsb
test
pusha
sbbl
inc
xchg
sbb
or
cmp
dec
pop
cmp
orb
lods
pop
sub
push
mov
hlt
ret
push
dec
and
popa
inc
mov
dec
add
mov
rcrb
mov
aas
in
icebp
rcrl
sbb
or
sbb
insb
pop
test
sbb
mov
adc
je
cmp
jecxz
pop
mov
cmpsb
mov
popf
push
ja
xor
mov
xor
xor
mov
xchg
cltd
bound
loope
test
mov
in
xchg
fstpl
cmp
test
xchg
out
jo
jle
pop
out
lock
xchg
fdivs
jmp
scas
aas
sbb
ljmp
dec
sub
push
pop
xchg
and
outsb
rcrb
test
pop
push
test
pusha
push
xchg
pop
jns
push
mov
sti
dec
jge
push
adc
jns
sbb
xor
sub
ljmp
jecxz
imul
shll
dec
sub
sbb
icebp
cs
jbe
cmp
push
dec
sti
repnz
sub
aaa
cld
movsb
mull
iret
adc
sbb
dec
ja
push
test
xor
adc
cmp
int
push
mov
inc
add
arpl
dec
out
cli
cld
ss
mov
inc
add
mov
xchg
push
bound
add
jl
mov
lahf
pusha
or
mov
pop
frstor
insb
ret
mov
aas
test
push
mov
rclb
inc
lret
pop
jge
mov
mov
loop
jg
imul
push
push
fs
jecxz
sbb
inc
mov
adc
cmpl
popa
mov
and
or
inc
movsb
jno
pop
fwait
pop
rolb
push
pop
insb
stos
fcoms
sub
shlb
mov
push
lcall
mov
mov
out
cli
xor
add
and
or
adc
loop
lret
and
jp
cmp
dec
add
add
mov
les
loope
or
andl
je
xchg
jp
add
dec
je
ret
mov
cwtl
repnz
lret
inc
arpl
dec
in
sub
lods
jle
mov
xor
ja
jbe
inc
stc
sbb
jmp
inc
in
insb
jmp
js
xlat
cmp
in
add
and
stos
mov
cmc
arpl
sub
outsl
cmc
mov
dec
mov
xchg
aam
arpl
jp
stos
fstps
imul
add
xlat
jp
mov
xor
cmp
and
lock
rorb
sbb
das
mov
cmp
inc
mov
in
notl
negb
pmulhw
xor
pop
sti
add
add
arpl
clc
andb
inc
sbb
jnp
mov
add
jo
mov
mov
in
push
inc
out
mov
xor
sbb
mov
sbbb
sbb
xor
scas
outsb
je
or
into
leave
sti
mov
pop
test
bound
pop
or
push
push
pop
test
cmp
movsl
xchg
cwtl
fninit
popa
adc
lds
xor
mov
xchg
jbe
mov
cmp
je
mov
test
and
xchg
imul
test
pushf
xchg
sbb
sti
inc
or
mov
pop
andb
pop
sarl
mov
pop
fcoms
bound
jge
lcall
sbb
int3
jge
push
pop
cli
add
xchg
mov
cmp
dec
jns
xchg
sub
testl
and
sub
pop
mov
ja
jmp
xchg
inc
out
add
out
push
lret
jge
jp
mov
sbb
mov
xchg
jno
fnstcw
push
dec
push
push
lret
sti
cmc
fsts
fsubrp
aam
test
xchg
pop
jle
enter
out
filds
mov
pop
fisubl
dec
fnstcw
aaa
push
dec
jae
push
and
inc
hlt
jmp
ret
adc
enter
push
les
iret
mov
lock
rcrb
cwtl
les
jmp
and
inc
pop
jnp
pop
inc
inc
icebp
and
or
popf
mov
subl
jns
neg
test
test
jle
dec
jecxz
inc
mov
dec
jnp
push
dec
lahf
adc
pop
xchg
push
mov
out
popa
repz
dec
xchg
pop
jmp
test
xchg
mov
push
pop
into
bound
clc
mov
lods
sub
mov
adc
cmp
cmp
xchg
inc
inc
inc
mov
jns
mov
xor
xchg
push
je
pop
dec
cmp
xor
xchg
and
insl
jnp
cmp
popf
push
clc
loopne
pushf
pop
cmp
mov
leave
mov
js
mov
das
icebp
and
nop
mov
mov
daa
addl
add
mov
int
mov
pop
loope
lods
mov
mov
pop
mov
adc
loop
xchg
ret
adc
pop
mov
adc
repz
movsb
pop
mov
addr16
lret
lock
dec
add
hlt
mov
mov
xchg
sbb
movsb
insb
sub
and
push
inc
adc
fldpi
jecxz
cmp
loope
mov
mov
mov
cmp
dec
pop
shll
and
es
arpl
mov
mov
cmp
push
hlt
scas
jns
cmc
and
jae,pn
sbb
dec
sbb
xchg
push
sub
xchg
xchg
cmc
movsl
rolb
inc
mov
es
cmp
fnsave
loope
test
sahf
jg
inc
pop
cli
loopne
aaa
jb
sti
loopne
cmp
push
jbe
lret
mov
mov
pushf
jbe
pushf
xor
out
pusha
xor
ljmp
or
cltd
or
arpl
pop
cld
adc
pop
inc
mov
lods
mov
cmp
in
loope
sahf
stc
mov
fmull
test
fwait
es
loope
out
inc
mov
mov
call
in
inc
jne
xchg
cmp
stos
mov
adc
pop
into
jle
dec
dec
pushf
out
dec
dec
mov
out
cmpb
jb
xchg
cmp
sub
inc
xchg
inc
mov
test
sti
ja
sub
insb
test
dec
xchg
xchg
sahf
dec
lds
jbe
xchg
mov
push
shlb
mov
aas
or
adc
std
and
leave
mov
lods
inc
ja
popl
cwtl
sub
adcl
inc
and
cmp
xor
fwait
loopne
cmp
cmpl
repnz
cmp
push
arpl
dec
aaa
scas
jne
mov
xor
ds
loop
andb
call
orl
gs
sub
sti
test
jmp
jne
sahf
mov
pop
sub
sarb
pushf
pop
xchg
cmpsb
loopne
test
js
sarb
in
jnp
cmc
or
xlat
or
das
popa
stc
xchg
sub
data16
xchg
ja
pop
mov
jmp
sbb
repnz
xchg
lea
pop
push
cmp
jmp
fiaddl
aam
movsl
addb
idivl
jecxz
adc
sub
cmp
pop
dec
pop
inc
iret
rcl
jecxz
outsb
mov
jnp
add
mov
fisttpll
cmpsl
pushf
add
dec
mov
lret
js
add
mov
push
movsl
test
mov
test
loopne
or
loop
or
icebp
xchg
scas
pop
push
hlt
es
pop
or
mov
dec
mov
jecxz
roll
pop
lods
aaa
mov
xchg
sbb
sti
dec
sub
jnp
outsb
fwait
jg
pop
testl
pop
xchg
and
mov
mov
and
inc
cwtl
inc
sub
sbb
in
lcall
pop
fstp
inc
mov
dec
push
jmp
test
add
bound
xchg
sahf
loop
xchg
xchg
jo
cmp
adc
out
idiv
ja
sbb
scas
fnstcw
test
out
mov
cwtl
imul
mov
fmul
adc
fbstp
xor
test
mov
jae
xchg
push
bswap
and
pop
fisubl
fwait
aaa
mov
xchg
stos
jo
sub
adc
sbb
repz
test
xchg
add
imul
gs
cwtl
sbb
mov
inc
lods
cmp
test
in
mov
xchg
jle
pushf
cmpsb
scas
cwtl
mov
movsl
ljmp
push
mov
iret
stc
pop
push
outsb
push
add
add
call
jne
add
sbb
sub
cmp
shr
sub
std
sub
mov
mov
jo
fildl
sub
mov
es
sub
mov
sbb
adc
xorb
cmp
addr16
jge
sub
adc
xorb
jne
add
inc
xchg
rcll
out
popa
test
lcall
add
mov
pop
sti
adc
iret
js
dec
mov
loop
repz
and
pushl
and
pusha
adc
sub
loope
xor
dec
popa
adc
pop
out
and
cmp
ret
push
out
mov
inc
xor
jp
and
push
dec
test
scas
lahf
in
dec
xchg
rolb
push
xchg
cmp
lahf
push
inc
sub
and
or
mov
push
roll
in
out
mov
xchg
mov
xor
or
adcl
jg
inc
ja
jb
out
xchg
in
std
rcll
notl
test
dec
mov
add
xor
lock
sbb
jnp
in
fdivrl
adc
addl
push
movaps
xchg
out
lahf
mov
mov
je
mov
pop
xchg
adc
sub
cmp
out
imul
or
sarl
aaa
std
pop
insl
mov
sub
mov
or
sub
test
int3
jl
ja
mov
out
cli
imul
clc
jl
mov
mov
add
lahf
mov
jne
sarb
or
sti
sarl
jbe
shlb
adcl
aad
sub
push
mov
and
add
shrb
xchg
ss
and
and
sub
aam
sub
jnp
mov
stos
or
sbb
fsubrs
lods
add
sub
sarl
dec
loope
addr16
inc
or
lods
mov
pop
mov
mov
xor
push
int
push
add
jp
loop
ret
jbe
pop
or
ja
mov
leave
fwait
sub
push
jl
add
push
andb
cmp
xchg
stc
lods
dec
test
mov
xchg
sbb
unpckhps
rolb
sub
das
jbe
cltd
movsb
xor
cmp
subl
jmp
jnp
aaa
iret
jp
jge
jne
add
cwtl
ja
nop
movsb
push
ja,pn
jecxz
movb
out
mov
fsubl
dec
cmc
repnz
push
xchg
and
sbb
cs
cs
inc
add
inc
dec
xchg
lret
out
or
and
out
cltd
das
ret
rcrl
adcl
push
inc
jmp
add
xchg
adc
inc
pop
mov
sbb
testl
jne
divl
cwtl
adc
push
rorb
pop
test
mov
pop
mov
mov
jno
clc
test
mov
es
lea
xchg
sbb
sbb
ret
pop
lahf
movq
dec
aas
fs
popa
pusha
adc
iret
mov
dec
push
stc
test
mov
out
sbbb
sbbl
sbb
and
pop
pop
sarl
mov
popaw
xor
and
dec
xchg
sbb
adcl
jns
pop
mov
cld
addr16
jns
popa
bnd
dec
adc
mov
into
and
add
aaa
jp
into
or
mov
cmp
mov
xchg
xchg
jge
sti
loope
gs
cmp
movsb
jo
aam
sub
adcl
fwait
dec
aam
xor
add
pop
test
les
out
jns
rolb
mov
jae
sbb
xor
aam
jmp
test
cmpb
cld
cs
daa
lds
aad
push
inc
fisttpll
cmp
cmp
dec
andl
cmp
test
lret
adc
fwait
push
xlat
or
pop
mov
pop
jbe
das
xchg
xor
aad
lret
dec
mov
movsl
push
movsl
and
test
out
insb
fisubrl
inc
xchg
ja
xor
insb
jno
andb
in
pusha
fcomps
cmp
popf
push
loop
mov
test
mov
gs
aam
mov
adc
mov
xlat
xchg
mov
mov
popl
mov
cs
push
cltd
outsb
adc
or
ss
inc
mov
sbb
add
inc
push
shl
cmp
push
into
jecxz
loop
movsb
movsb
adc
mov
aad
addr16
mov
addl
cmp
or
test
adc
mov
cltd
testl
push
sbb
pop
xchg
ja
inc
enter
ljmp
fdivrl
sub
pop
xchg
out
addl
push
test
sbb
push
lcall
xor
sbb
rclb
pop
push
pop
fucomp
jne
push
jo
sub
insb
inc
out
xchg
mov
add
add
pop
jp
pop
cmp
cmpsb
inc
dec
stc
testb
into
or
mov
adcb
xchg
mov
mov
incb
jbe
les
jae
repz
add
inc
aas
fsub
fldt
fwait
mov
dec
cld
and
and
xchg
fnstcw
xchg
xlat
inc
add
in
sti
test
shl
push
addb
inc
test
lahf
pop
mov
mov
inc
dec
mov
lods
leave
into
inc
add
lds
cmp
push
ds
ret
test
mov
repz
push
xchg
mov
mov
pop
adc
cmc
enter
lret
rolb
sub
xor
shl
lods
lock
cmp
dec
loopne
mov
outsb
arpl
cwtl
xchg
cmp
out
or
aaa
and
out
iret
xor
mov
aas
mov
xchg
mov
sti
mov
nop
mov
mov
sub
push
push
jmp
cmp
pusha
popa
and
fwait
repz
jp
and
and
jnp
movsl
pop
add
sti
leave
pushf
ffree
in
jnp
add
dec
xchg
mov
loop
sub
xchg
inc
cld
nop
dec
pop
dec
ja
dec
or
xchg
mov
cmp
iret
test
add
cmp
jge
test
enter
repnz
repnz
jnp
sub
inc
ja
orb
xchg
enter
dec
js
sahf
outsl
cmp
xchg
sbb
icebp
cmp
ja
mov
and
fsts
sarl
push
in
sub
mov
or
test
and
jne
mov
and
scas
mov
out
rcrb
mov
movsl
mov
pushf
xchg
xchg
pop
js
std
pop
cmp
imul
icebp
pop
sbb
jg
nop
lods
xor
daa
sub
test
pop
jp
xchg
fisttpl
dec
into
mov
xchg
inc
in
dec
outsl
outsl
xor
pushf
in
out
push
icebp
iret
loop
or
fdivrl
cmp
mov
mov
add
andb
pusha
cmp
jmp
in
movsl
dec
mov
cmp
mov
dec
sub
stc
mov
lret
push
fldcw
cmp
mov
aad
out
add
cwtl
xor
mov
sub
lret
cmp
pop
iret
mov
jp
cli
into
iret
mov
mov
mov
or
test
adc
imull
adc
push
cmp
rcrl
mov
and
gs
inc
scas
push
in
or
push
push
jns
leave
test
push
pop
insb
xor
popf
add
jae
cmc
sub
test
pop
pop
xchg
jo
mov
data16
dec
rcr
ja
xchg
icebp
test
xorl
rclb
movsb
es
jb
insl
in
xchg
fmull
jnp
mov
jmp
sarl
xchg
push
sbb
bound
add
jno
dec
fwait
dec
inc
ds
ljmp
ja
nop
aad
mov
mov
mov
scas
lldt
fdivrp
gs
cmp
push
dec
mov
pop
arpl
out
mov
mov
add
daa
jg
insb
fcoml
popa
lcall
out
data16
int
daa
lahf
arpl
jnp
aaa
cli
cmp
iret
das
adc
arpl
sbb
mov
call
mov
test
xor
out
pusha
pushf
sub
pop
test
stc
mov
cmp
aas
inc
adc
mov
testb
stc
hlt
pop
jp
rcll
add
add
mov
push
cmp
pop
or
ss
test
cmp
pushf
bound
or
lds
lods
push
sub
aad
sbb
cltd
notl
cmp
mov
popf
mov
loop
inc
out
cmp
push
roll
or
xchg
sub
sbb
cmc
lods
pop
arpl
jae
and
orb
data16
xchg
stos
stc
in
jl
lcall
ljmp
cmp
ss
and
adc
or
xor
or
mov
mov
mov
xchg
fiadds
insl
pop
movsb
fdivrl
add
iret
arpl
lahf
mov
leave
cmp
cld
pushf
adc
testb
fwait
xchg
cmpsl
mov
mov
xlat
lea
sbb
inc
and
cmp
pop
in
dec
jns
cmp
jecxz
jns
arpl
pop
sbb
mov
pop
out
push
pop
dec
cmp
loopne
aaa
mov
icebp
inc
pop
pop
test
mov
sbb
sub
xchg
sti
fstpt
and
dec
add
and
ror
cmp
data16
test
mov
leave
mov
pop
pop
xchg
ja
mov
movsb
inc
dec
aam
sbb
daa
mov
dec
push
mov
xchg
jmp
repz
fcoml
aad
pop
shlb
imul
pop
cmpb
dec
in
out
adc
dec
cwtl
in
je
pop
dec
mov
fstpl
cmp
ret
movsb
sbb
pop
jl
jnp
inc
adc
inc
subl
sub
popa
repz
test
sbb
sub
gs
add
mov
je,pn
sub
pushf
inc
jae
imul
and
mov
jl
mov
test
mov
xchg
ds
mov
xor
dec
xor
pop
xchg
jl
jl
test
test
pop
std
xor
push
sahf
push
and
shlb
rorl
in
stos
jge
mov
jns,pn
inc
xchg
lods
cmp
xchg
jnp
adc
cmp
insb
adc
mov
pop
fcomi
les
or
adc
mov
fcoms
xlat
add
jl
push
push
nop
test
into
and
loop
push
xor
dec
push
test
mov
addr16
jno
jmp
xchg
mov
std
and
test
cmp
add
movsl
xchg
out
shrb
pop
inc
inc
adc
dec
jmp
jbe
bound
inc
adc
jle
xchg
cld
jne
notb
fisubrs
sar
and
sub
lock
jmp
roll
test
es
flds
mov
mov
push
pop
inc
cmpsb
rcr
cmp
cmp
mov
icebp
leave
mov
test
cmpsb
mov
movsl
leave
or
mov
iret
inc
adc
add
push
test
push
inc
dec
pop
mov
add
icebp
sbb
arpl
cmp
sarl
mov
and
jns
add
add
inc
dec
repnz
xchg
pushf
cs
jne
push
inc
push
cmp
adcl
ja
hlt
jg
mov
js
pop
xor
jmp
sub
mov
in
mov
mov
jo
mov
jbe
mov
mov
imul
add
dec
jl
js
popf
fidivrl
cmp
sub
jns
in
or
js
in
test
outsb
mov
bound
cwtl
dec
pop
pop
adc
pop
xchg
sub
pop
insl
sahf
jecxz
ljmp
add
aad
stos
lds
xor
xor
sub
xchg
pop
sub
adc
aaa
xor
jno
mov
dec
sbb
test
jbe
sbb
ljmp
mov
roll
test
sbb
arpl
lods
mov
push
movsl
inc
or
pop
jl
xor
xchg
fmuls
test
cmp
xchg
cwtl
mov
ret
adcb
cltd
xor
and
cmpb
gs
stc
shlb
inc
shrb
add
fldl
imulb
jnp
cmc
xchg
sbb
into
mov
dec
std
test
test
cmc
mov
je
lret
test
ret
ficomps
push
fcom
jge
in
or
addr16
das
sti
test
adc
jl
push
and
repnz
cmp
arpl
push
push
imull
fistl
testl
sbb
out
xchg
loope
mov
xor
repz
xchg
pop
adc
inc
sbb
mov
out
cmpb
inc
and
xor
sbb
cmpsb
mov
push
lods
aas
lcall
inc
sbb
dec
int3
or
mov
add
adc
and
adc
or
push
jae
cmp
mov
jmp
outsl
sbb
cmp
sub
pop
sti
or
and
fidivl
pop
mov
lea
loope
add
scas
cmp
add
jnp
sbb
and
or
add
or
cltd
ljmp
je
aaa
adc
leave
mov
xlat
cltd
cmp
mov
rorl
fwait
jp
je
mov
nop
or
adc
jmp
adc
adcb
dec
push
pop
jae
cs
ret
in
adc
jmp
pop
lahf
sahf
js
mov
cmp
pop
out
ja
repnz
push
out
lds
inc
in
rclb
push
xchg
lea
pop
push
in
add
adc
inc
xor
sbbl
jg
shll
cmc
sub
push
or
xor
dec
test
inc
lcall
imulb
jecxz
lret
testb
mov
mov
inc
inc
xchg
jmp
aam
push
lahf
test
filds
or
mov
cmpl
clc
aas
test
orl
flds
push
xor
sarb
lods
jge
and
cmp
insb
rcrl
lea
mov
dec
mov
leave
test
and
out
adcb
stc
mov
test
add
leave
adc
sub
add
mov
cmp
inc
sbb
dec
jb
gs
ffreep
je
inc
je
xor
sbb
cmp
cmp
lods
jmp
xor
fwait
add
fsubr
push
cmp
flds
push
add
aas
adc
xlat
sbb
cmp
iret
stc
mov
lcall
xchg
in
sub
aas
pushf
dec
popa
dec
movswl
out
fld
std
add
sub
push
mov
cmp
add
inc
add
cmp
mov
ds
in
pop
push
sbb
daa
testl
pushf
cmp
pop
mov
xchg
js
pop
xchg
dec
inc
aad
aas
or
xor
out
popa
jns
les
lods
xchg
pop
enter
pop
sbb
aas
sbb
ret
ja
jl
out
cmpsl
negb
sub
pop
xchg
or
inc
pop
add
inc
fildl
mov
clc
mov
stc
or
adc
xor
and
pop
pop
jns
xor
jle
fwait
mov
pop
pusha
out
mov
dec
repz
cmp
cmp
mov
inc
mov
jne
inc
icebp
inc
mov
cmp
add
push
es
lea
incb
mov
fwait
mov
inc
mov
xor
mov
adc
stc
cmc
mov
jp
xchg
test
outsl
add
aas
movswl
loopne
cmp
aam
cli
test
inc
aaa
or
shlb
add
cmp
push
rorb
xchg
pop
lret
push
pop
dec
and
jge
inc
ret
mov
push
xchg
sbb
add
outsl
stc
xor
adcb
inc
test
add
jno
jno
out
ja
daa
xor
movups
push
sbb
mov
sbb
sbb
add
lret
and
bnd
adc
mov
fimuls
inc
pop
test
loope
or
stc
pop
into
add
addb
ljmp
pop
push
cmp
and
pop
aam
test
pop
cmp
cmp
dec
das
add
mov
popf
push
sub
push
jl
xor
xor
cmpb
dec
sub
add
dec
sub
or
ret
in
test
mov
inc
sbb
adc
fldcw
adc
addr16
cltd
mov
orb
jo
aas
icebp
push
mov
pop
in
mov
lcall
out
xor
pop
arpl
testb
add
push
clc
lcall
sub
pushf
lods
xchg
adc
push
js
je
lds
inc
xchg
mov
sub
mov
add
mov
lret
and
jmp
mov
call
xchg
pop
add
mov
and
into
mov
out
inc
es
cmp
js
lds
lea
mov
mov
inc
je
mov
scas
ss
cmp
out
aas
mov
adc
sbb
sarb
pop
cmp
sbb
and
cmp
decl
xchg
or
add
sub
adc
int
scas
jo
test
dec
inc
data16
push
jge
jmp
aad
shrb
aam
adc
pop
add
sub
rol
test
push
lea
jmp
push
jnp
ret
ficoml
cmpsl
loopne
es
fwait
xchg
add
cmp
or
out
cmp
xor
dec
pop
xorb
and
sahf
aaa
loopne
outsl
jle
add
shlb
cmp
xor
or
cmp
sub
push
xchg
stc
dec
clc
jp
jmp
mov
in
aam
addr16
clc
pushf
sbb
mov
std
inc
ds
mov
popa
outsl
inc
jo
cmp
shl
clc
sub
add
add
push
push
push
jmp
lcall
aam
pop
test
sub
fidivl
jo
push
jnp
pushf
pop
rorl
push
push
push
cld
fwait
loope
jp
pop
rcrb
data16
jnp
push
cmpl
cmpsl
rolb
call
and
adc
sub
mov
jo
pushf
dec
sbb
into
add
mov
add
shll
add
loop
lret
negl
repnz
out
cs
mov
adc
cltd
lods
popf
jno
lret
js
pop
jle
push
jb
push
inc
imul
fsubr
std
arpl
aam
lods
cs
incb
insb
jle
in
idivb
xor
cmpsl
push
pop
inc
push
ja
cld
sbb
je
les
pop
sub
jno
cmpsb
test
inc
icebp
adc
call
pushf
aad
ljmp
adc
in
mov
jecxz
inc
sub
mov
mov
xchg
movsb
out
cmp
dec
pusha
adc
mov
ret
mov
loope
xchg
mov
pusha
lock
and
cli
mov
add
cmp
js
xchg
dec
jmp
fsts
mov
xchg
jg
fsubl
add
lahf
shlb
seto
jmp
ss
cmp
mov
jnp
sar
popa
sub
aas
or
vmwrite
inc
adc
jge
fmuls
pushf
cmp
fisubs
inc
je
push
push
xchg
push
mov
outsb
and
dec
lods
test
mov
pusha
loope,pn
or
xor
test
cmpsb
sub
pusha
imul
sbb
inc
fwait
loope
cmp
andl
test
test
mov
pop
pop
add
jge
xchg
xor
imul
push
std
pushf
and
mov
pop
push
cmp
xor
outsl
lock
fdivrl
arpl
sbb
push
jno
inc
repnz
xor
push
lods
mov
pop
mov
test
or
out
and
dec
out
cmpsb
cltd
mov
cmc
and
mov
dec
push
cmp
push
in
sub
mov
sub
dec
push
ja
push
jg
int3
je
setb
xorb
inc
inc
js
inc
add
or
pop
mov
fstl
test
mov
cmp
mov
cmpsb
add
push
dec
inc
and
pop
test
cmpl
xchg
push
enter
into
mov
cmpsl
pop
cmc
sbb
mov
pop
jecxz
out
repz
sub
jb
cltd
shll
jnp
push
jl
pop
mov
jmp
lods
sub
xchg
mov
dec
mov
sbb
mov
enter
mov
or
cwtl
aad
int
mov
lea
mov
cli
fwait
inc
push
pop
sub
jne
fildl
add
scas
ja
mov
sbb
lock
xor
mov
sbb
mov
jecxz
mov
mov
cmp
clc
arpl
xchg
mov
jmp
adc
lods
sahf
adc
repz
xchg
mov
das
sub
rorb
mov
fcoml
and
jmp
lods
push
cmp
cmp
loop
push
inc
add
ret
into
inc
fwait
outsl
pushf
mov
sbb
sub
stos
dec
aam
add
add
jle
leave
test
xchg
jne
packssdw
in
inc
cmpsl
and
pop
rcrb
and
pop
or
and
test
mov
test
jb
iret
xchg
aaa
sarb
adcb
xorb
mov
adc
rcrl
daa
mov
int3
mov
test
test
jo
sub
fistps
push
push
add
repz
push
stos
cmp
loop
pop
sub
mov
dec
sub
testb
lods
mov
lea
cltd
push
ss
cmp
sbb
shrb
inc
mov
cmp
xchg
and
xor
push
or
lret
cmp
outsl
sbbl
stc
into
lds
sub
addr16
mov
push
inc
xchg
jo
cmp
cltd
push
mov
mov
data16
mov
cmc
pushf
addr16
xchg
iret
pop
mov
dec
arpl
das
push
add
mov
mov
xchg
xchg
ficomps
cld
outsb
add
mov
lods
lcall
icebp
push
mov
cmp
mov
test
bound
mov
mov
cwtl
mov
mov
or
leave
cmp
test
or
jmp
lds
and
xchg
sub
jg
stos
xchg
inc
arpl
cmpsl
into
arpl
mov
push
pop
sarb
lea
sti
test
push
and
aam
iret
leave
jp
ss
cli
sub
int3
and
js
test
cmp
cmp
js
pop
aam
andb
cld
xor
adc
dec
movsb
enter
fimull
jecxz
xchg
mov
es
ljmp
mov
lahf
sub
popa
push
out
dec
loopne
adc
loope
iret
xchg
cmp
loope,pn
pushf
mov
jecxz
mov
jg
leave
cmp
fst
xchg
lret
and
jle
dec
imul
sarb
jmp
negl
cmp
imul
cmpsb
fwait
add
sbb
and
leave
adc
pop
sbb
loopne
cmp
jmp
incl
jns
mulb
fucomp
mov
cmp
test
pusha
shll
fadds
call
fs
rcr
out
or
mov
shlb
mov
leave
stc
jge
jmp
mov
push
ss
xor
xchg
adc
pop
sahf
shrb
mov
test
mov
aas
or
mov
aas
fldenv
mov
rcrb
nop
sub
test
imull
jb
mov
xchg
inc
inc
dec
jnp
rcr
jge
pop
imull
sbb
shrb
adc
std
mov
mov
mov
pop
aaa
shl
mov
lds
sbb
popa
test
mov
test
or
xor
jns
dec
pop
cmpsl
cmpsb
inc
add
sti
adc
cmp
mov
xchg
sub
cli
fstpl
sub
mov
mov
jb
mov
jl
mov
fs
mov
dec
or
and
ja
or
xchg
test
ds
dec
cmpsl
push
adc
cmp
mov
sub
adc
out
fidivrl
adc
mov
aas
xchg
shlb
fimuls
cmpsl
mov
test
adc
cmp
fcmovb
xor
mov
sub
inc
clc
push
sub
mov
sahf
fwait
cmp
jge
scas
out
or
movsb
inc
jns
sbb
mov
dec
andb
mov
test
call
lret
js
out
push
inc
or
jmp
add
roll
nop
fiaddl
mov
scas
sub
es
loopne
xchg
mov
mov
push
mov
mov
adc
pop
rcrl
fcomp
lock
sbb
fisttpl
gs
int3
pop
fcmovu
mov
je
aam
pop
pop
push
cmpsl
dec
sarb
push
dec
mov
and
js
cmp
jecxz
jmp
mov
jl
xchg
xchg
scas
das
jp
sbb
cld
xor
cld
mov
idivb
inc
xor
xor
repnz
push
cmp
mov
sbb
adc
cmp
sbb
sbb
push
in
pop
mov
xchg
mov
out
rorl
mov
lds
xlat
xchg
jb
fcmovnbe
lahf
ja
inc
jne
mov
jnp
ficompl
daa
inc
inc
lret
xchg
inc
mov
pushf
add
iret
mov
xchg
flds
dec
int3
or
cmp
stos
ds
pop
jb
pop
mov
xchg
jl
icebp
mov
cltd
pop
mov
sahf
add
xchg
shl
or
add
inc
jns
or
push
cwtl
sub
lahf
or
je
pop
ljmp
mov
leave
xchg
out
or
pop
mov
fistps
push
and
ret
pop
scas
pop
sub
mov
and
lods
fistl
sub
outsb
xor
jge
mov
in
repz
push
pop
push
test
mov
push
in
jae
test
ljmp
jo
stc
or
jns
dec
pop
stc
xchg
aam
xchg
pop
fmul
iret
inc
subb
and
fidivrs
sub
xor
cmpsl
fisttpl
ljmp
xor
mov
daa
cmp
popa
out
mov
xchg
insl
cli
jmp
cmpb
test
pop
inc
mov
in
stc
adc
or
cmp
mov
cmpsl
push
inc
psrld
ror
orb
insb
lods
sub
ja
popw
cmc
data16
xorb
jbe
dec
push
inc
jg
pop
xchg
mov
testb
div
xor
sbb
adc
push
aaa
aas
mov
test
ljmp
outsl
add
xchg
je
test
fmul
xchg
pop
and
minps
pusha
push
icebp
out
jo
and
sub
das
js
fcoml
ss
cmp
mov
lea
and
xchg
stos
test
mov
out
gs
test
adc
loop
out
push
mov
addr16
jae
pushf
in
add
ja
inc
mov
insb
mov
fs
aaa
sub
mov
test
in
lea
adc
movsb
arpl
pop
pop
roll
movsb
cmp
mov
leave
dec
pop
lods
add
mov
icebp
pop
or
xchg
cs
fstpt
std
push
or
cmp
sub
push
push
pop
cmp
loopne
adc
sbb
aad
sbb
bound
jo
pop
popf
push
test
insb
data16
push
inc
or
int3
dec
repnz
mov
fdivrl
inc
call
cmp
jmp
shl
mov
inc
lock
push
push
cmp
sub
xchg
or
mov
or
sub
arpl
inc
jnp
out
dec
pop
je
or
push
std
mov
cli
mov
xchg
fwait
sbb
fcmovne
daa
pop
inc
add
sahf
popa
dec
xor
into
cmp
push
insb
jg
xor
test
sub
out
inc
or
fcmovnu
xchg
pop
pop
add
fldl2t
pop
ret
psrad
lcall
int3
imul
cmpsb
adc
cmpl
es
push
idivb
call
push
pop
cmp
pop
test
pusha
mov
pop
divb
mov
scas
inc
inc
jns
pop
cli
dec
xor
cmp
pop
loop
pop
dec
stc
test
pop
xor
cli
test
divb
jl
scas
sub
adcl
pop
mov
pop
dec
sti
out
ret
sub
cmp
lods
adc
jmp
adc
jnp
inc
pop
nopl
lret
jle
lea
push
cmp
sbb
mov
es
push
lock
aas
shll
cmpsl
inc
adc
das
mov
jge
pop
mov
pop
rorb
push
xchg
lea
cmp
loop
pop
push
push
jle
jl
xchg
mov
out
xchg
iret
outsl
outsb
lock
lods
add
call
add
std
push
addb
inc
and
xchg
popf
lret
arpl
xchg
jne
rcrl
add
lods
xor
ja
out
mov
mov
rorl
clc
movb
add
sub
xchg
insl
mov
imul
or
addl
add
jge
fistpll
into
sub
aas
mov
bound
es
or
cmpsb
test
mov
clc
xor
or
mov
shr
fldt
cli
pop
xchg
push
in
inc
shlb
lret
pop
xor
js
jo
mov
and
jno
push
mov
mov
gs
cmp
add
pop
test
addr16
out
int
pop
mov
sbb
pop
frstor
or
xchg
clc
jle
out
pop
cld
out
push
xor
outsb
rolb
sub
inc
sbb
sti
adc
mov
pop
ss
addb
mov
xor
jo
mov
mov
mov
lahf
push
adc
xchg
cltd
data16
mov
gs
push
test
jge
cmp
fisubrs
add
and
test
nop
push
xor
mov
xor
xchg
jb
addr16
dec
sahf
frstor
xchg
fs
out
fwait
push
fwait
pusha
enter
dec
xchg
sbb
fdivrs
cltd
out
cmp
sbb
outsl
cmp
movsl
push
or
int
fwait
add
mov
adc
jne
xchg
jb
gs
lcall
out
lea
mov
cmpb
jno
aam
repnz
leave
add
test
cmp
jge
pop
xor
sbbl
pop
xor
xchg
test
add
mov
outsl
xchg
cwtl
loop
jns
sbb
dec
sbbb
push
mov
sbb
push
jmp
insb
sub
xor
popa
add
mov
cmp
sub
insb
addb
sub
gs
das
sbb
mov
cmp
xchg
out
fcoms
test
imul
pop
or
sub
jg
pop
sarl
xor
fwait
xchg
jmp
lods
loopne
sarb
inc
std
adc
mov
vpmacsww
xlat
sahf
cmp
mov
mov
inc
mov
push
cmp
stc
xor
or
dec
out
aas
adc
sahf
repz
mov
sbb
pop
ljmp
dec
pusha
push
scas
sbb
add
mov
fists
cmp
jns
call
xchg
xchg
stc
repz
js
xor
dec
push
loope
rorl
xchg
or
mov
andb
adc
fldt
in
pop
ss
pop
nop
jp
mov
lock
inc
stc
pushf
and
stos
subl
adc
gs
or
int3
pop
int3
mov
test
sbb
xchg
out
xor
dec
inc
rcrb
pop
nop
sahf
cmp
xlat
out
aas
pusha
data16
in
punpckldq
mov
je
push
pop
push
repnz
inc
repnz
divb
cmp
mov
adc
mov
dec
ss
dec
xchg
sub
inc
lret
xorb
dec
int3
xor
lcall
cmp
pushf
jmp
add
add
ja,pn
clc
xchg
loopne
mov
roll
and
cmp
int
je
xchg
sub
arpl
int3
xchg
or
push
xchg
pop
dec
mov
xchg
inc
movsb
aaa
inc
dec
inc
add
icebp
fnstcw
adc
sub
test
xor
jbe
inc
orl
fstpl
cmp
or
test
data16
aam
rorb
xorb
add
cmp
or
lret
dec
xchg
sbb
xor
mov
or
jg
test
js
and
pop
lods
adc
xchg
dec
stc
je
inc
iret
shrb
fsubs
jbe
dec
fistl
mov
xorb
inc
movsb
xchg
pop
ret
sub
push
stc
mov
push
pusha
add
aas
rolb
mov
cmp
movsl
loop
fdivrl
movsl
mov
push
stc
iret
sbb
pusha
movsl
xor
int
dec
pop
adcb
mov
cmp
mov
mov
js
cli
pop
inc
out
push
xor
dec
and
and
ljmp
and
dec
loop
aaa
jle
mov
jmp
cmp
or
pop
sbb
insb
aas
mov
mov
fdivs
mov
push
jns
imul
sbb
ficoml
dec
js
stc
out
pop
pop
pop
popa
jnp
push
aam
pop
cmp
testl
adcl
and
push
pop
sbb
xchg
mov
dec
test
es
sbb
negb
cltd
pop
shlb
xchg
jne
insb
cmc
xchg
cmp
outsb
mov
xlat
mov
mov
test
sti
iret
or
xor
addr16
xchg
and
call
lock
inc
ja
fsubr
mov
xchg
pushl
pop
mov
pop
sbb
inc
xor
dec
mov
ljmp
adc
jb
cmp
dec
cli
imul
shl
ret
cli
sub
cmp
stc
adc
test
push
mov
lcall
ja
xchg
cmp
adc
fistpll
and
pop
sarb
cmp
fstps
imull
push
sbbl
xchg
xchg
mov
push
mov
dec
imul
test
xchg
cmp
cwtl
add
and
js
xor
cmpsl
sub
jno
cs
push
lds
leave
jle
test
jns
inc
les
xchg
fcoml
inc
xchg
mov
or
aad
sub
ror
test
inc
push
shrl
and
fcmovbe
lea
mov
test
xchg
pop
cmp
or
call
ja
adcl
add
mov
outsb
push
push
adc
jl
and
sub
add
mov
adc
call
test
mov
dec
inc
dec
sub
mov
cmp
loop
rep
cwtl
add
insb
dec
stos
cmp
jmp
mov
pop
daa
andl
fimull
aas
pop
sub
pop
push
in
lahf
sbb
and
pop
adcl
pop
shrl
push
stos
in
xchg
jbe
and
loope
fdivrl
leave
mov
scas
add
into
rorl
movsl
insb
jge
sub
mov
add
sbb
add
rorb
xor
inc
cs
aaa
dec
adc
repz
xchg
dec
xchg
repnz
sub
push
xchg
and
or
xchg
push
adc
xchg
icebp
sub
xchg
mov
pop
push
mov
dec
cltd
clc
popa
inc
mov
cld
and
inc
sbb
movhps
pop
and
add
mov
jae
cmp
nop
xchg
in
enter
inc
dec
int3
xor
push
add
icebp
jl
and
xor
mov
pop
mov
cmpb
cmp
add
fidivl
fidivrl
and
fs
sbb
xlat
out
mov
sbb
in
aas
leave
int3
cmp
into
xchg
pusha
sbbb
add
mov
jge
jmp
gs
leave
jle
push
outsb
test
dec
jp
xchg
lods
sub
rorl
divl
lahf
stc
fimull
mov
bound
test
mov
push
stc
test
mov
inc
and
icebp
insl
or
dec
ret
test
addr16
push
mov
es
mov
adc
ficoml
fdivrl
push
cld
inc
or
outsl
rep
cmp
ja
mov
out
and
fidivs
shll
pop
push
jge
xor
ret
inc
inc
adc
fiadds
push
enter
sub
cmp
dec
sub
je
inc
movsb
pop
aaa
and
test
sub
mull
cmp
jbe
jae
fwait
test
bound
push
mov
sub
dec
inc
fsubrp
jmp
jns
inc
loop
fwait
mov
fstpl
xchg
cmp
sub
leave
inc
popf
jae
push
movsl
cmp
imulb
fildl
lea
jb
jmp
je
aaa
aas
mov
xchg
test
sub
adc
sbb
inc
cmpsl
xchg
flds
sub
xor
mov
sbb
inc
sbb
out
out
and
cmpsb
sub
sub
mov
or
ja
mov
mul
jl
data16
and
bound
test
add
jns
sub
fs
xchg
in
mov
sub
jmp
sbb
es
jb
push
js
pusha
bound
xchg
dec
lds
mov
out
push
enter
lods
rcr
test
push
adc
call
nop
xchg
out
mov
mov
push
jbe
push
pushf
or
xchg
insl
aad
mov
and
dec
sub
in
add
jl
xchg
sbb
sub
sbb
lcall
out
adc
sub
fstpt
inc
xchg
dec
lods
mov
mov
or
jmp
dec
inc
xchg
sub
dec
jg
cmpsl
out
addl
sar
mov
mov
jbe
cmpsl
sub
add
daa
popa
xchg
sbb
call
pop
xchg
andl
mov
push
fadd
mov
repz
or
xchg
adc
std
aam
inc
icebp
scas
icebp
push
cmc
pop
mov
jle
icebp
ds
sbb
inc
push
or
pop
dec
leave
and
adc
mov
push
jo
in
cmp
push
jle
inc
jbe
mov
fisttps
mov
test
call
xchg
flds
dec
mov
out
fdiv
testb
sbb
rcrl
cmp
dec
pop
or
inc
int3
sti
lcall
cs
fsubr
test
orb
xlat
pushf
ret
notb
roll
scas
inc
mov
filds
inc
dec
mov
lcall
sti
cmpsb
cmp
mov
jnp
sub
jns
arpl
in
xchg
pop
xchg
xchg
xchg
xchg
mov
stos
mov
out
mov
test
inc
pop
sub
rclb
xchg
pop
mov
cmp
test
pop
scas
or
mov
in
aaa
mov
test
push
outsb
pop
mov
xchg
push
add
daa
mov
les
inc
aas
dec
notl
cmpsb
dec
scas
mov
das
adc
mov
test
mov
and
inc
ret
into
hlt
push
xchg
insb
cmp
cmpb
jmp
aaa
mov
fsts
aam
ja
xchg
cmp
out
push
out
lock
cmpsl
repnz
sbb
ret
imul
or
fcomps
pop
xor
bound
adc
dec
aad
inc
xor
pushf
sahf
lods
cmpsl
xor
add
imul
jmp
std
cld
notl
rcr
pop
and
mov
xchg
into
in
and
pop
fbstp
ja
icebp
popf
rol
cmpsb
cmp
fisttpl
push
and
out
jo
mov
ss
sub
cld
sbb
inc
notl
sub
xor
lods
sti
xor
mov
inc
cmc
popa
clc
je
xor
cmp
aas
and
cmpsl
fmull
jns
push
inc
jle
adc
orl
mov
sub
sbb
in
xor
jnp
shll
js
adc
mov
das
adc
js
xchg
cmp
pushf
test
mov
xchg
in
int3
push
xor
and
and
ret
stos
lret
pop
repz
xchg
imul
imul
mov
aam
xchg
data16
pop
pop
adc
test
inc
dec
addr16
icebp
test
scas
out
pop
or
jae
repnz
jg
mov
pop
bound
ja
test
mov
mov
test
arpl
js
iret
sarb
shl
mov
sahf
jmp
cmp
lods
lcall
mov
mov
pop
clc
mov
std
pop
fldt
mov
dec
bound
dec
repz
jg
adc
and
ja
cld
inc
add
xchg
mov
mov
inc
into
adc
jb,pt
dec
inc
out
out
aaa
mov
jecxz
fstl
push
ljmp
test
in
sub
aas
in
rorl
mov
inc
test
insb
mulb
pushf
mov
mov
out
test
sbb
push
cmp
or
bound
ja
test
push
loop
push
lods
push
or
and
test
stc
xor
xchg
nop
scas
sti
sub
xor
cmp
nop
pushf
stos
inc
ret
sub
pop
sub
sti
inc
loop
xchg
mov
pop
xchg
sub
mov
adcl
and
dec
jge
subl
popa
xchg
push
mov
pop
xchg
lahf
xor
mov
fwait
das
xchg
or
aaa
mov
push
test
orb
cmp
and
roll
int
pop
cltd
pop
or
cmp
xchg
and
out
fwait
mov
out
fcoms
mov
clc
ljmp
lcall
arpl
ja
test
mov
or
add
sub
pop
cs
aas
ljmp
adc
insb
sub
les
clc
scas
mov
div
jmp
dec
jp
jns
push
jnp
ds
in
adc
cmp
xor
xchg
sub
xor
jecxz
in
call
xorb
xchg
lock
lret
push
lcall
lcall
pop
xchg
dec
push
aaa
mov
test
mov
int3
fsub
push
fstp
mov
xchg
jl
inc
sahf
imul
mov
mov
cwtl
test
sbb
mov
sbb
cmp
in
adc
repnz
pop
scas
int3
loopne
ja
cmp
mov
mov
inc
xchg
addr16
aas
sarb
ja
inc
xorl
cmp
push
and
push
pop
jl
mov
cmp
jmp
mov
pop
push
cmp
mov
sub
jnp
cmp
es
inc
adc
outsb
mov
daa
mov
negb
push
sbb
js
out
ds
jl
fwait
jno
bound
dec
jg
dec
push
rolb
ss
inc
out
lock
sub
dec
repz
fisubs
mov
mov
adc
sarb
gs
in
adcl
jb
adc
mov
jmp
dec
rcl
les
fs
push
adc
xor
lret
scas
out
cmp
cmp
or
imul
push
ret
push
in
shll
add
xor
aad
mov
insb
push
hlt
ja
clc
addr16
pop
pop
jle
cld
fadds
mov
cmp
mov
filds
dec
test
aam
or
mov
popf
test
fstps
decb
add
mov
xchg
sti
jecxz
shll
scas
dec
ficomps
andl
mov
pushl
add
std
dec
adc
xor
mov
or
loop
sbb
mov
mov
icebp
xchg
push
arpl
je
push
mov
sub
inc
mov
inc
sub
fcoms
and
mov
inc
out
xchg
es
mov
xor
mov
mov
cmp
pop
pusha
inc
out
sub
aaa
jbe
call
cmpsb
mov
cmp
test
mov
add
mov
daa
pusha
inc
enter
inc
decb
xor
leave
fwait
out
pop
adc
test
dec
sti
data16
jbe
mov
lock
adc
pusha
shll
mov
jg
sub
add
cmp
rcll
movsl
push
xchg
sbb
aad
cld
and
arpl
sub
add
xchg
popf
adc
jo
sbb
dec
scas
sti
dec
sub
mov
adc
ds
push
pusha
xor
sub
adc
sub
sub
rcl
test
inc
mov
out
pop
movsl
push
addl
adc
fs
stos
bound
push
jge
pushf
adc
push
ret
pandn
rcr
adc
movsb
cltd
sub
data16
test
popf
sbb
jp
xchg
xchg
jo
jnp
scas
mov
testb
cmp
popa
xchg
scas
js
test
adc
jg
pop
push
cmc
add
rclb
and
push
repnz
mov
cmp
test
fwait
push
adc
sub
cmp
pop
out
in
mov
inc
xchg
cltd
adc
push
cmp
mov
mov
adc
xor
mov
sbb
addr16
sti
jnp
mov
and
dec
fcmovnu
push
es
dec
gs
flds
cld
fs
inc
or
ja
push
dec
inc
test
jge
push
mov
adc
lret
mov
test
mov
enter
rol
push
jl
and
nop
loope
pushf
sti
movsb
xor
add
sbb
mov
fisubl
xchg
and
xchg
sub
test
mov
mov
xchg
push
jmp
test
xor
mov
cld
pop
rorb
push
sbb
movsb
adc
jg
imul
mov
sub
fwait
shl
mov
sbb
push
dec
aaa
fldl
sub
cmp
pop
mov
mov
lods
mov
data16
pop
dec
iret
nop
sarl
lahf
xchg
sbb
sbb
sub
and
mov
adc
mov
rcr
xor
in
xlat
xchg
xchg
loop
mov
or
lods
test
dec
loopne
dec
add
loop
jae
cmp
sbb
test
fildl
lret
imul
rorl
nop
pop
push
cmp
mov
push
mov
sar
outsb
mov
jmp
push
inc
stos
jp
sbb
pushf
push
rcll
or
icebp
cmp
jb
jo
add
sub
fstpt
add
mov
ret
inc
lods
inc
dec
xor
popf
xchg
pop
pop
xchg
repz
sub
mov
mov
or
xor
jge
es
loop
mov
mov
testl
and
cmpsb
adc
adc
jbe
mov
jle,pn
pusha
adc
stos
sub
xchg
jns
or
hlt
cmp
mov
in
pop
cmp
enter
xorb
push
leave
inc
xchg
mov
xchg
xchg
mov
rcrl
jmp
std
xor
xor
xchg
in
fistpll
add
cmp
jl
jge
adc
jle
pop
call
lret
pop
mov
adc
dec
cli
or
arpl
popf
aaa
mull
and
iret
lahf
loopne
inc
push
stos
xchg
stc
or
pop
fadd
mov
push
pop
nop/reserved
add
sub
push
sbb
lcall
dec
test
cmp
cld
add
xchg
aas
cmpsb
lahf
xchg
mov
pop
negb
cmp
jns
int3
cwtl
icebp
mov
mov
scas
fimuls
push
push
je
ja
out
fsub
push
daa
cmp
xlat
clc
adc
ss
rclb
das
ret
dec
adc
sub
jle
ss
sbb
sub
fcomps
bound
sub
mov
xchg
push
mov
lds
imul
pop
dec
xchg
js
mov
xor
cmpsb
cmp
in
pop
mov
out
dec
mov
and
adc
pop
xor
out
mov
leave
mov
jmp
and
xor
jae
gs
cmp
mov
divb
mov
lcall
jmp
cmp
xorb
adc
filds
jg
mulb
ss
jb
push
es
sub
insb
pop
xchg
sbb
and
fcmovb
pop
aas
pop
arpl
jb
add
popa
in
icebp
push
repnz
mov
daa
test
int3
cld
dec
icebp
mov
inc
stc
icebp
sbb
push
cmpsb
add
jg
in
sub
testb
jae
fdivrl
pop
adcl
mov
mov
cltd
push
mov
sbb
pop
inc
stc
adc
or
cmpsl
mov
and
jge
xchg
nop
xchg
mov
fs
cmp
cmp
jo
sub
sub
push
and
or
push
out
cmpsl
loop
sub
fadd
iret
pop
xor
jmp
popf
add
pop
mov
addr16
or
out
jno
xlat
test
out
mov
ja
cltd
cmpsl
xchg
insl
jno,pt
push
lcall
gs
aaa
xchg
push
sarl
push
lds
jne
nop
add
xor
jne
cmp
jge
pop
sub
ljmp
aas
xor
sub
mov
fnsave
out
ss
push
push
in
ret
xor
jl
pop
dec
test
pop
das
dec
js
sub
jecxz
inc
repnz
push
cmpsb
cmp
cmpsl
sti
push
sub
xchg
mov
dec
sbb
sbb
dec
jno
xchg
fwait
movsb
add
sbb
ja
add
int3
gs
cmpsb
cmpsb
jnp
adc
jb
jmp
dec
adc
imul
fdivr
icebp
mov
js
movsb
mov
testb
push
bound
inc
or
cltd
jg
and
pushf
adcl
mov
pop
dec
stc
mov
shlb
sbb
movsl
jp
sbb
mov
test
cmpsb
xchg
aaa
data16
inc
ds
inc
ja
xchg
sub
cmp
add
outsb
gs
fsubl
jnp
xlat
testl
pushf
push
ss
pop
into
pop
in
xlat
push
ja
repz
dec
and
dec
push
sub
das
in
mov
iret
jb
pop
inc
push
inc
inc
stc
clc
inc
shl
mov
mov
stos
sbb
sarl
test
cmp
scas
mov
or
sbb
pop
mov
cmpsb
sbb
mov
ja
inc
adc
inc
add
xchg
pop
pop
ljmp
loopne
arpl
and
ror
mov
mov
jnp
out
movsl
dec
add
add
into
xor
push
hlt
test
pop
stos
cmpsb
sub
and
cmp
test
cmp
shll
xchg
cltd
sbb
cli
xchg
jl
ds
lods
pushf
jp
fsubrp
xchg
xchg
push
push
in
add
aam
popa
dec
mov
ss
and
scas
test
and
loopne
xchg
jge
mov
cmp
and
addb
inc
mov
arpl
addr16
xchg
mov
xor
les
sub
js
pop
dec
stos
jmp
stos
cmp
iret
das
push
outsl
mov
add
ja
test
inc
repz
add
xor
addl
out
mov
dec
adcb
mov
lods
add
jno
fldt
cmp
xchg
call
adc
loopne
xchg
sbb
or
adc
ljmp
and
jge
lds
jecxz
sbb
pop
push
subb
xchg
pop
xchg
ja
xchg
mov
pop
aas
repz
imul
add
jns
mov
out
jno
das
inc
jp
xchg
lds
push
pusha
push
es
scas
dec
inc
pop
pop
jb
cmp
test
in
push
pop
xor
fiaddl
sbb
ja
push
lcall
lcall
rcll
mov
test
fisubl
inc
aaa
ror
fwait
enter
test
mov
mov
andl
ja
sub
jnp
fwait
adc
leave
scas
fptan
sbb
inc
jo
mov
cmp
pop
hlt
das
cmp
aam
popf
inc
xlat
add
push
mov
and
lahf
sbb
sub
repz
aas
pusha
das
or
ret
mov
insl
mov
inc
and
or
lahf
aas
or
mov
addb
mov
xchg
aad
inc
incb
test
scas
repnz
cld
adc
loop
popf
ficompl
mov
fwait
sub
ss
xor
aaa
xchg
pop
sub
mov
inc
out
and
pop
sub
adc
sar
aas
ja
xlat
xor
das
pop
jae
test
test
cmp
dec
adc
cmp
scas
roll
sbb
popf
shll
pop
mov
pop
mov
test
pop
in
ss
out
jl
rolb
cld
rolb
adc
jmp
push
in
inc
mov
ret
adc
mov
or
push
push
jno
fdivl
inc
cmp
or
arpl
add
push
xor
stos
out
xlat
cmp
loopne
jp
std
dec
jne
sahf
mov
sbbb
xor
pop
cmp
dec
sub
shlb
pushf
es
idivw
in
pop
iret
sbb
push
inc
pop
mov
fldcw
xchg
mov
arpl
out
mov
not
arpl
mov
enter
loop
xchg
sahf
cmp
test
stos
sub
ret
sbb
mov
notl
cmc
ja
inc
sbb
rorl
pusha
jecxz
xor
js
cmp
fstl
lods
leave
or
dec
sbb
xchg
push
xchg
mov
cmp
mov
repnz
lahf
pop
add
xchg
inc
imul
imul
and
mov
sub
pop
inc
stos
push
jl
cmc
lods
pop
and
sbbb
test
dec
cltd
mov
jg
out
dec
popa
popf
dec
lahf
sbb
lods
in
ss
cmp
cmpl
dec
mov
imul
adc
cmp
sub
mov
stos
push
bound
xor
mov
sbb
dec
cmp
mov
movl
iret
dec
ja
aas
dec
lcall
sbb
mov
pushf
sbb
push
xor
sub
mov
sarb
mov
or
sbb
pop
and
enter
cmp
push
push
aas
add
mov
add
mov
aaa
cmp
test
xchg
add
lahf
push
repnz
sti
adcb
sub
lds
mov
sub
and
hlt
adc
enter
adc
mov
dec
sbb
push
imul
stos
mov
jl
xor
mov
and
popf
inc
xchg
pusha
mov
jl
adc
ds
lods
lea
sub
cltd
dec
xchg
lds
shll
push
addb
sub
or
dec
jbe
das
dec
inc
and
cld
mov
dec
push
addr16
sbb
cmp
in
arpl
cmp
test
stos
lahf
stc
inc
sbb
ror
aas
pusha
cmpb
iret
xchg
aaa
xor
ljmp
jb
sub
pop
out
push
enter
bound
cltd
xor
fdivrl
arpl
lcall
inc
adc
call
jnp
xchg
ret
dec
pop
jp
xor
out
mov
mov
add
outsb
mov
mov
in
add
jmp
xchg
and
mov
in
stos
test
push
inc
mov
cmp
cs
push
in
xchg
nop
in
faddp
lcall
pushf
add
sarb
test
xchg
pop
pusha
loop
daa
fisubs
push
out
or
ja
cli
addl
xchg
gs
push
sub
cmp
lahf
mov
push
insb
push
out
sarl
ret
cmp
mov
orb
or
push
test
or
add
mov
pop
andl
dec
adc
fwait
mov
pop
push
insl
dec
aad
add
lret
in
stos
test
jge
push
sbb
in
shlb
int3
out
fwait
enter
test
jl
add
js
sub
push
mov
fdiv
lods
insb
sbb
das
ret
cmp
and
cmpsl
pop
insb
dec
test
mov
into
add
mov
adc
inc
flds
add
mov
mov
xchg
mov
inc
mov
mov
std
lock
icebp
xor
ds
outsl
inc
imulb
ljmp
and
pop
lret
aam
fbld
xchg
loope
loopne
inc
xor
xor
push
sub
arpl
or
test
fs
sbb
jnp
add
mov
mov
add
ret
js
lods
xorb
xor
cs
stc
imul
pop
adc
sub
test
jp
and
addr16
cmp
scas
xchg
add
rolb
mov
in
add
adc
out
mov
pop
mov
push
divl
or
cmp
mov
pop
mov
add
jecxz
jne
inc
adc
cmp
test
mov
rclb
sti
repnz
sbb
xor
mov
jbe
push
adc
cmp
push
jmp
add
and
inc
sbb
daa
xchg
and
mov
jb
lret
lret
cmp
mov
add
nop
pop
adc
cmp
clc
std
test
stc
xor
pop
movsl
mov
xor
cwtl
out
xor
sbb
cmpl
xchg
popf
mov
xor
int
imul
rcrb
xchg
shlb
ja
loop
sbb
not
or
dec
sub
jb
inc
lea
pop
adc
cmp
shl
push
xor
xor
sahf
cmp
dec
sub
dec
xor
push
add
inc
dec
xchg
roll
mov
in
into
sub
or
scas
rcpps
xchg
daa
or
sub
sub
loopne
mov
dec
inc
pop
push
inc
sbb
movsl
out
repz
add
sub
icebp
push
push
shlb
add
xorl
jb
jnp
subb
xchg
jmp
mov
dec
xchg
inc
xorb
js
sub
mov
and
and
rcll
mov
subb
fisubrs
out
outsb
mov
adc
cmp
jmp
jle
pminub
inc
mulb
mov
cmc
cwtl
xchg
mov
into
xchg
adc
das
or
andb
cli
jge
lds
mov
xchg
lods
cmp
mov
faddl
push
rol
push
xlat
pop
cmpsl
or
int
xchg
fdiv
jmp
sbb
aaa
out
mov
mov
bound
mov
dec
js
inc
addr16
fdivrs
xchg
sub
inc
mov
outsb
stc
mov
js
icebp
scas
fincstp
mov
add
rcll
push
jno
int3
inc
lret
stos
mov
mov
dec
je
sbb
call
cmp
orb
mov
addr16
lock
cmp
fcompl
outsl
test
dec
addr16
subl
cmc
ret
cmpb
mov
scas
icebp
les
or
mov
lret
inc
mull
sarb
cmp
movsb
adc
cmp
rcrb
inc
cmp
jge
mov
dec
push
sbb
xor
jmp
in
ret
mov
sbb
dec
sbb
sbb
leave
cld
cmp
sub
xlat
test
fs
cmp
cmp
xor
fdiv
pushf
rcr
mov
mov
inc
cmp
roll
sbb
inc
push
test
cmp
xchg
sub
lcall
add
sub
sub
pop
inc
xchg
bound
out
push
mov
push
and
test
mov
xchg
lods
ret
loopne
stc
mov
popf
les
adc
sbb
cmp
loope
ljmp
sub
mov
mov
in
xchg
popl
cmp
pop
adc
and
pop
push
or
stos
mov
add
mov
xchg
int
mov
xchg
sbb
cmc
push
mov
or
nop
mov
fwait
sub
stos
leave
mov
loop
into
mov
and
pop
scas
ret
inc
xor
test
cwtl
outsl
push
xor
pop
cmp
cmp
shl
or
aam
mov
repnz
xor
movsl
call
cmp
adc
test
out
push
ret
add
shufps
adc
jl
mov
in
mov
mov
cwtl
js
pop
dec
loopne
xor
sbb
cmp
out
jg
aam
mov
test
movsb
cmp
mov
je
xchg
push
and
gs
jle
pop
push
push
jb
pop
addr16
inc
jl
cmpsb
xchg
sub
mov
cmp
test
sub
outsl
jecxz
jle
jecxz
scas
xchg
mov
dec
push
sub
pop
jns
mov
sti
gs
fwait
pop
loop
inc
loop
dec
mov
push
xchg
js
xor
leave
fdivrs
dec
movsb
iret
sbb
pop
add
cmp
ror
leave
sbb
lds
sbb
addr16
jns
dec
repnz
dec
das
add
aam
dec
rclb
inc
and
add
xor
sub
gs
sub
out
insl
xchg
jg
addr16
movsl
lret
mov
xor
shrb
xchg
sbb
leave
xchg
imul
rol
test
bound
addr16
xchg
repz
and
cld
fsubrl
inc
adc
sub
cmpl
js
dec
ds
adc
sbb
outsl
mov
pop
pop
dec
cmp
cld
dec
cmp
xchg
sub
jnp
lods
sub
xchg
mov
hlt
and
or
frstor
cmc
fmuls
scas
sbb
push
mov
sub
dec
xor
push
xor
sub
dec
push
icebp
fs
insb
adc
cmp
scas
ja
out
sub
notb
test
enter
inc
int
rcr
jp
pop
test
mov
jb
sbb
or
mov
ss
cmp
inc
shl
pop
aas
aad
dec
inc
mov
push
insl
sub
mov
mov
jno
popa
je
push
sbb
sbb
sbb
fldcw
jno
ja
xchg
xabort
test
addr16
sbb
aas
mov
mov
mov
xchg
ss
sub
add
mov
pop
scas
fs
pop
pop
in
aad
mov
mov
push
adc
out
mov
and
xor
dec
dec
test
repnz
adcb
mov
jle
mov
icebp
dec
mov
rol
pushl
sub
inc
xor
popf
push
xchg
bound
in
les
aad
lods
sbb
add
jns
iret
pop
test
sahf
pop
test
sub
and
pop
cltd
inc
in
cmp
add
ss
das
arpl
dec
out
jns
mov
daa
pop
dec
std
and
jmp
leave
aas
test
fwait
mov
mov
stc
fwait
cltd
iret
pop
imulb
int
roll
inc
std
clc
cmp
fistl
test
test
xor
cmpxchg
mov
cmp
int3
leave
out
fsubrl
ret
or
lock
lahf
icebp
loope
sub
adc
imul
xchg
popa
cs
sub
fisttpll
mov
inc
push
push
cmpsb
inc
repz
scas
mov
jl
cmp
adc
lea
leave
divl
pop
and
lret
mov
nop
sbb
mov
push
xor
xor
loop
adc
popa
xchg
mov
js
inc
cmp
dec
adc
pop
int3
lcall
fisubrs
fistpll
ljmp
movsl
addr16
jle
xchg
adc
mov
fidivrl
test
adc
call
in
out
pop
sahf
sahf
daa
push
pop
lock
mov
add
test
stos
icebp
cmp
dec
ret
rcl
mov
dec
jle
mov
jns
mov
cmp
or
mov
inc
add
lcall
mov
lret
pop
jnp
inc
ja
aad
fs
fimuls
flds
mov
inc
cmc
jmp
les
sbb
pop
popa
mov
add
notl
lcall
mov
test
push
jne
mov
divl
ret
sub
clc
push
filds
pop
mov
stc
out
dec
push
lret
inc
cmp
shrl
pop
cmp
scas
jns
ret
jl
into
out
ds
sbb
pushf
push
jmp
sbb
repnz
sbb
jmp
cmp
fwait
add
inc
js
or
mov
fistpl
inc
xchg
fs
popa
dec
inc
rol
in
popa
bnd
mov
dec
clc
es
push
in
and
cli
cmpsb
dec
out
cltd
xchg
xchg
push
je
js
add
ja
pop
xchg
sti
xchg
and
addb
loopne
ret
pop
std
mov
mov
movsl
fwait
loopne
in
cmp
cmp
rcl
pushf
xorb
mov
xchg
arpl
jg
scas
xor
sub
dec
or
dec
xor
cmp
test
mov
xlat
dec
andl
adc
sub
fists
fisttpl
enter
repnz
pop
dec
lea
insl
out
jg
cmp
and
dec
test
lods
jg
cmp
pushf
pop
inc
dec
into
sub
test
xchg
es
lods
push
stos
dec
dec
and
sbbb
aas
add
mov
aas
sti
bound
add
cmp
out
testl
leave
dec
aaa
fstpt
cmp
jb
addr16
fdivrl
jle
xchg
mov
or
lret
inc
mov
or
pop
in
ss
sahf
cmp
out
xchg
add
decl
bound
js
aas
jecxz
xchg
push
push
adc
in
enter
xchg
rcrb
test
xchg
stos
adc
orb
popf
xchg
sbb
push
cmp
sub
outsl
sub
or
push
jnp
outsl
or
jno
sbb
cmc
out
cmp
xor
cli
mov
and
add
mov
subb
sbb
cmpsl
jecxz
cmp
lahf
adc
lcall
jne
dec
pop
cmpb
adcl
das
xchg
movups
cwtl
cmp
inc
loop
mov
dec
pusha
mov
arpl
pop
and
mov
js
lahf
pop
out
repnz
sbb
orl
scas
pop
les
adc
fs
cmp
mov
add
push
jo
je
test
cmp
fcompl
lock
es
xchg
mov
and
or
mov
push
scas
loopne
mov
fmuls
movsb
mov
dec
gs
fcmovne
inc
cmp
mov
sbb
add
fwait
sbb
mov
xchg
adc
pop
mov
rorb
dec
sti
mov
mov
mov
inc
cmp
pop
push
adc
jns
push
jge
push
mov
andb
and
stos
shl
aas
mov
test
insb
stos
sbb
cmpsb
mov
mov
test
ret
hlt
sub
cmp
enter
dec
cwtl
pop
aaa
xlat
mov
cmp
xor
pop
pop
mov
cmp
push
sub
test
cmp
adc
outsl
dec
test
xor
cld
leave
jne
sub
dec
mov
repnz
rcll
mov
test
jno
jge
mov
cmp
pop
das
mov
xor
lret
add
pop
mov
pop
les
jl
ja
xchg
ja
aas
fildl
mov
sbb
add
xor
fwait
and
ficoml
jge
popa
mull
pop
and
orb
sbb
inc
lods
in
test
jns
imul
mov
and
mov
inc
xchg
subb
dec
add
cmp
cmc
mov
cmp
sbb
jl
icebp
lea
cmpl
xchg
pop
adc
mov
cltd
jbe
jmp
mov
lea
fcompl
push
aaa
jp
adc
in
dec
shl
mov
cmpsl
sbb
lahf
sub
mov
roll
pop
test
test
ljmp
lds
jmp
dec
rol
in
in
sbb
pop
sbb
lcall
mov
cwtl
pop
mov
mov
mull
push
icebp
jmp
dec
test
cmc
in
mov
xor
and
jge
stos
sbb
sarb
pop
pop
adc
adc
inc
jg
xchg
inc
sbb
sbb
scas
cmp
mov
cmp
mov
mov
testl
punpckhdq
add
mov
je
mov
inc
addr16
cwtl
cmpl
push
xor
les
test
cmpsl
pop
pop
adc
jle
dec
xchg
xor
push
or
ret
dec
shll
jb
cmp
cltd
pushf
pop
jno
stc
insb
push
or
mov
add
gs
cmp
rol
and
stos
in
leave
push
pop
insb
mov
mov
xchg
dec
divb
xchg
pop
sub
mov
dec
and
dec
adc
push
jns
push
pop
jae
inc
xchg
push
test
cmp
inc
mov
jo
enter
push
aad
lock
mov
push
cmp
cmp
fistps
mov
xor
jbe
dec
xlat
jl
pusha
cmpb
inc
mov
aaa
cli
aad
dec
sub
sub
add
shlb
sarl
insb
cmp
jbe
sub
inc
xor
fdivs
xchg
dec
sarb
out
je
add
icebp
mov
pop
ret
les
aaa
leave
mov
mov
mov
aaa
test
in
xchg
add
das
push
mov
lds
in
pusha
adc
stc
lods
ds
mov
or
jle
cmp
add
test
pop
into
jmp
pop
mov
loop
lret
shrd
test
clc
fstp
imull
js
mov
inc
pop
jbe
daa
outsl
aad
dec
mov
jo
pop
iret
sub
xor
incb
andb
enter
cmp
push
cmpl
adcb
push
cmp
pop
sbb
xchg
repnz
mov
clc
xor
loop
pop
test
ja
xchg
pop
inc
pop
lods
popa
mov
mov
adc
cmp
sub
and
scas
loope
sahf
aam
js
roll
add
pop
xchg
enter
sbb
icebp
fldlg2
mov
shlb
rorb
add
pop
lods
push
inc
sbb
lret
dec
xchg
or
sbb
lds
out
inc
inc
rcrb
cmp
scas
push
mov
aas
mov
inc
mov
data16
jge
js
adcl
mov
rorl
jo
push
add
cmp
and
rclb
mov
jno
pop
mov
ror
fcoml
mov
lods
cmp
add
jnp
or
test
dec
sbb
scas
mov
cmp
ja
subb
push
and
ja
js
rcll
pop
or
xchg
jg
xchg
mov
xchg
addr16
and
pop
mov
mov
cmp
out
rcrb
push
bound
pusha
jnp
into
fwait
pop
jmp
inc
mov
jne
mov
inc
sub
xor
sub
and
xor
icebp
ret
jmp
xchg
push
imul
mov
xor
pop
and
push
cs
pop
dec
jg
pop
or
cmp
mov
call
sbb
js
dec
fnstsw
dec
jl
and
ficoml
jmp
sub
mov
mov
jae
xchg
shll
mov
movsl
js
or
xor
adc
imul
adc
adc
cli
clc
fwait
jmp
ja
cmp
pop
mov
xchg
cwtl
popf
push
add
scas
sbb
ljmp
jno
jle
data16
push
jecxz
pop
aas
jp
xchg
js
fnstenv
inc
sub
pop
mov
inc
jno
sub
jne
negl
add
jmp
add
adc
cmp
jmp
xchg
pusha
sub
push
mov
pop
push
sub
gs
arpl
push
dec
adc
das
xor
ss
mov
repz
fdivrl
loopne
je
mov
test
cmp
mov
fldenv
shl
or
shl
xor
shl
lea
mov
sarb
fisttpl
inc
mov
and
mov
psllq
mov
mov
jecxz
pop
push
pop
out
lds
cmp
jmp
push
adc
mov
cmp
mov
cmp
sarb
fnstenv
stc
daa
psrlw
insb
fsubr
pop
or
sub
xchg
cmp
push
mov
test
add
adc
jge
shll
push
inc
pop
xchg
push
sbb
cmpl
sbb
xchg
inc
push
add
mov
push
test
clc
nop
mov
push
fs
stos
cli
xchg
or
lcall
divl
out
pusha
mov
test
ja
ret
mov
movl
xor
icebp
scas
into
ljmp
inc
neg
iret
bswap
add
jmp
loope
push
mov
out
mov
cmp
in
jge
pop
stc
sar
pushf
out
fwait
jb
xor
nop
test
inc
xchg
mov
test
inc
or
push
mov
push
dec
sub
jns
out
in
in
lea
adc
push
pop
mov
idiv
dec
push
mov
aaa
in
idivb
test
lret
in
out
mov
sbb
das
hlt
dec
icebp
shll
adc
mov
dec
jae
or
mov
dec
or
pop
out
lret
cmp
cmp
cld
mov
aad
jmp
cmp
sbb
xor
or
fistpl
or
test
xor
ficomps
jmp
sub
mov
inc
cmp
push
fiadds
push
cwtl
push
test
rcr
jle
cmp
outsl
push
test
clc
lods
mov
sub
sti
jns
xchg
rorl
loop
mov
and
ja
fbld
mov
mov
xor
out
mov
test
imul
fs
mov
repz
repnz
cld
push
imul
and
push
dec
test
and
add
mov
gs
dec
test
inc
add
sbb
insb
shlb
xor
out
sbb
cmp
jne
hlt
mov
rol
inc
adc
mov
clc
hlt
pop
jge
arpl
pop
inc
dec
jle
push
jae
or
push
mov
mov
shlb
mov
insb
xchg
pop
xchg
test
cmc
sub
jmp
nop
mov
shl
inc
add
test
cmp
outsl
or
iret
xor
adc
cmp
inc
in
inc
xor
mov
test
and
push
pop
mov
mov
xor
adc
push
sti
das
cmp
add
mov
xchg
nop
sar
shll
xchg
fisttps
lds
xor
pop
and
and
shrb
pop
outsl
xchg
or
jmp
movsb
push
inc
sbb
mov
ja
cli
push
xchg
rolb
jg
repz
inc
push
inc
mov
js
fstps
cmp
pop
dec
pop
xchg
mov
cli
ja
shll
pop
cmc
popa
mov
js
out
mov
sub
push
add
out
shrl
pusha
and
push
stos
mov
addl
repnz
mov
lods
mov
test
cmc
hlt
pop
sub
gs
xlat
rol
sub
or
pusha
outsl
jmp
or
nop
repz
xor
or
sbb
mov
xchg
rcrb
addb
mov
in
scas
push
add
mov
or
mov
xchg
fildll
mov
lock
sbb
add
add
nop
jmp
jne
xchg
or
cmp
out
mov
dec
cmp
push
inc
mov
and
sub
mov
push
and
jp
mov
inc
stc
pop
lret
fwait
divl
xchg
pop
stc
sarl
adc
addr16
mov
add
jg
std
add
movsl
arpl
cmpsl
xor
mov
test
cmp
or
xchg
mov
insb
xchg
je
push
jl
mov
icebp
pop
clc
or
paddsw
scas
cli
pop
cmp
mov
xchg
addl
add
push
jne
and
cmpsl
and
pushf
inc
mov
lds
into
or
insb
sbb
mov
mov
xchg
lcall
pop
cld
push
arpl
scas
push
into
xor
pusha
pop
mov
inc
dec
adc
mov
cmp
and
adc
push
cs
test
popa
xchg
sub
or
mov
mov
pop
adc
movsl
bound
sub
push
aad
push
add
xchg
jle
arpl
mov
sarl
stos
inc
mov
dec
jo
sbb
lock
mov
sub
mov
inc
add
push
insb
and
mov
push
pop
xchg
je
lds
dec
inc
mov
mov
cli
and
je
adc
mov
sbb
shrd
inc
xchg
cmp
ja
xor
pop
fsts
sahf
aas
iret
mov
mov
test
add
or
sub
jno
insb
lods
xchg
mov
scas
into
inc
clc
test
cmp
imul
test
mov
cmpsb
stos
pusha
in
jmp
pop
mov
mov
xchg
xor
fcompl
popf
add
xchg
rclb
jp
inc
mulb
pop
cmc
cmp
push
sub
gs
xchg
loopne
mov
push
cmp
mov
or
jp
out
sub
or
pop
test
mov
ret
or
cmp
rolb
lods
testl
fnstsw
sar
test
push
es
outsb
in
cli
sbb
aaa
iret
xor
call
adc
cwtl
jg
mov
xchg
lahf
ror
testl
test
ja
dec
and
iret
mov
cmp
mov
cmp
jo
mov
leave
arpl
adc
cld
or
out
or
xchg
stos
sbb
dec
jnp
inc
out
int3
or
popf
ja
ljmp
and
hlt
mov
xchg
xchg
sub
insb
cmp
ja
xchg
mov
lods
ljmp
lea
mov
jbe
sbb
fs
pushf
insb
pop
mov
push
movsb
fsubrl
repnz
push
fwait
test
add
xchg
jmp
loopne
xor
or
jecxz
and
lods
xchg
pop
repz
sbb
dec
mov
cmovnp
and
jns
repnz
enter
cmpsb
mov
jnp
and
jp
mov
addl
rolb
cmp
subb
ret
and
pusha
or
and
ljmp
jmp
sbb
into
lods
sub
xchg
enter
push
bnd
clc
scas
mov
in
mov
sbb
add
or
shrb
pop
cli
shufps
js
imul
and
mov
stc
or
fcomps
js
sbb
pop
dec
fimuls
cmp
mov
lods
add
pop
sti
lea
mov
xchg
xor
sub
jmp
sub
jb
xchg
cmp
fbstp
mov
test
xor
cmp
cmp
test
adc
dec
or
xchg
sub
sub
dec
dec
imul
popa
scas
adc
test
setle
mov
dec
inc
mov
jbe
dec
pop
idivl
push
in
dec
jne
into
sub
cmp
cmp
cld
sbb
mov
xchg
inc
inc
lods
xchg
adc
jp
adc
test
lea
in
mov
lods
dec
orl
sub
std
lahf
add
cmpsb
aam
cmp
sbb
or
push
sbb
movsl
js
negl
push
cmp
out
lods
jo
xchg
cli
add
adc
xor
dec
inc
icebp
add
ret
cltd
and
stc
jmp
mov
adc
pop
push
jmp
js
rcr
inc
push
cs
insb
mov
mov
jmp
dec
in
iret
mov
jg
pop
ret
jb
aaa
mov
int3
rclb
xchg
or
jnp
xor
inc
mov
push
cmp
fucomi
xchg
out
jg
and
repnz
out
shl
addb
push
mov
add
dec
jno
mov
rorb
sbbb
xlat
iret
idivl
cli
pop
int
mov
push
add
dec
xchg
cmp
lds
mov
lds
js
test
mov
push
incl
test
scas
cmpsb
aad
jmp
and
jmp
sbb
sbb
push
cmpb
sbb
test
push
mov
mov
and
repz
inc
insl
cltd
cmp
notl
cmc
scas
loop
mov
sub
xor
imul
sbb
mov
jmp
lcall
cltd
ret
shl
jecxz
adc
push
sbbb
sbb
xor
in
pop
sbb
cld
notl
nop
aam
lea
mov
call
stc
xor
iret
mov
out
mov
mov
int3
cwtl
mov
lods
cmp
aas
leave
and
movsb
call
out
test
cmc
lahf
repnz
ja
dec
add
test
lret
loopne
xchg
xchg
shll
jnp
xor
push
push
out
mov
jmp
mov
mov
lock
test
loope
outsl
enter
sub
jmp
in
push
and
hlt
adc
mov
mov
inc
xorl
mov
scas
lods
fidivrs
sbb
pop
pop
ret
cmp
jl
int
fldenv
or
loop
xchg
out
lock
movsl
cli
test
rcrl
pop
out
icebp
ret
pop
cs
stc
sarl
stos
cmp
cmp
mov
js
xchg
sbb
negl
fwait
ret
xchg
push
cltd
push
cmp
aam
daa
mov
cmpsl
daa
mov
sahf
arpl
jl
leave
test
adc
pop
and
jp
mov
data16
movsl
xor
in
cld
xor
test
adc
cwtl
sbb
movsb
add
adc
push
dec
push
push
mov
push
xchg
cltd
push
ja
xor
cmp
rclb
ficomps
mov
mov
pushf
pop
call
loop
jno
dec
in
sub
popf
pushf
inc
shll
mov
mov
xor
lods
cmp
adc
pop
out
pusha
push
mov
fmull
mov
outsl
aad
sub
jmp
pop
icebp
jp
add
faddl
shl
fidivs
out
jno
xor
mov
pop
into
xchg
faddl
lret
imul
xchg
pushf
xchg
sbb
add
push
mov
jp
cmp
push
add
mov
mov
out
out
cltd
insl
imul
xchg
popf
inc
roll
adc
repz
idiv
adc
es
or
in
dec
pop
cltd
leave
lret
sub
push
loopne
add
mov
fxch
outsl
inc
add
andb
ret
out
pop
bound
push
dec
enter
out
cmp
push
mov
sub
add
jnp
or
adcb
fucom
fsts
aas
sti
jne
adc
xchg
out
jle
xor
dec
aas
dec
iret
ror
cmp
ja
xor
mov
mov
imul
popf
adc
dec
xor
xchg
jne
leave
ss
jge
and
xor
cwtl
fnstsw
push
mov
shrl
lret
mov
mov
jne
data16
jnp
test
inc
add
sbb
imul
inc
das
xchg
in
dec
loope
add
bound
mov
mov
push
int3
pop
outsl
or
or
cmp
addb
adc
ss
add
cmp
xor
notl
xchg
push
ja
xchg
mov
xor
and
lret
mov
pop
adc
sarl
jbe
in
sub
cwtl
push
pop
ret
mov
dec
and
sub
popf
sub
stc
add
gs
sbb
gs
adc
or
add
inc
dec
int3
js
test
push
loop
fstpl
cmp
aam
sub
add
ret
fdiv
cmp
push
sub
mov
mov
out
imul
movsb
add
xor
jo
ss
aaa
push
iret
lahf
ret
sbb
push
adc
dec
cmc
in
movsl
aaa
movsl
xchg
adc
or
leave
test
fldl
mov
test
rolb
mov
clc
test
shlb
push
push
and
push
insb
add
dec
push
add
loop
lds
pop
je
ja
jnp
pusha
gs
test
insb
xchg
push
and
mov
xchg
xor
movsb
scas
hlt
loop
add
adc
fcompl
cmp
cmpsl
and
cmc
dec
jg
popf
xor
dec
mov
rolb
iret
lret
aaa
xchg
mov
xorb
xor
sub
cmp
pop
test
sub
xor
and
in
xor
cmp
orl
sub
pop
loope
jo
fistps
xor
cmpsl
enter
jmp
imul
icebp
addr16
test
xchg
dec
imul
cmc
inc
mov
cmp
outsb
andl
jl
dec
out
or
negb
or
mov
add
out
mov
int3
jmp
repnz
lea
jecxz
push
sbb
fwait
js
add
insb
cmp
lahf
mov
out
add
pop
mov
sbb
idivl
lcall
pusha
mov
data16
lret
lods
scas
cwtl
aas
call
mov
in
data16
out
pop
and
xchg
mov
push
mov
dec
pusha
cmp
cmp
int
out
push
mov
dec
movsl
aas
sbb
gs
test
loope
out
cmp
out
mov
sbb
cltd
push
imul
mov
and
or
sub
pop
pusha
lods
mov
ss
data16
xchg
test
in
mov
mov
mov
xor
inc
jle
push
mov
pusha
push
icebp
sbb
inc
movsb
xchg
pop
pop
inc
aam
pusha
mov
or
mov
sbbb
call
leave
jg
xchg
roll
out
jmp
sbb
mov
lods
jnp
mov
rdmsr
loopne
cmp
adcb
outsl
mov
scas
jl
stc
sub
mov
fs
into
inc
aas
mov
push
sahf
inc
decl
mov
xlat
out
xchg
add
xchg
add
data16
sbb
adc
jecxz
test
repnz
fsub
xchg
cmpsl
inc
nop
push
imull
xchg
jnp
nop
stos
fldl
mov
loop
in
aad
mov
sbb
or
inc
jno
bound
cli
pushf
int3
sbb
add
outsb
mov
pop
push
movsb
mov
xchg
jl
aad
xchg
pushf
inc
popa
cld
mov
jge
lock
daa
add
cmpsb
test
stc
xchg
cli
ljmp
sbb
daa
cmp
jl
sub
shll
cs
and
shl
fdivrs
mov
test
push
ret
mov
test
mov
lcall
adcl
hlt
mov
inc
pop
rcr
pop
dec
sub
dec
jl
mov
cmp
pop
ja
out
xchg
push
sbbb
dec
mov
cmp
fdivrs
xchg
and
lret
fstl
in
sub
subb
in
jmp
repnz
pushf
fbstp
ja
or
call
test
aam
aad
ficoms
inc
xchg
sub
test
cmpb
xchg
pop
es
arpl
cmc
rclb
scas
mov
fiadds
loope
fidivrl
pop
leave
dec
mov
fidivrs
fwait
mov
es
rorb
into
loopne
movsb
inc
divl
movsl
pop
push
xchg
stc
add
xchg
add
shlb
gs
loop
mov
push
jnp
pushf
or
out
xchg
sarl
mov
add
popa
push
out
push
lods
mov
add
add
mov
push
inc
in
push
pop
cld
sbb
xchg
jecxz
push
mov
pushf
sbb
xor
push
xchg
lods
mov
lahf
movsb
jmp
mov
out
push
push
jo
data16
jmp
sbb
sub
sbb
dec
push
test
adc
push
fs
jnp
fisttps
ficompl
lods
xchg
test
mov
sbb
iret
loopne
cmp
fisubrs
aam
hlt
jl
sbb
pop
jnp
leave
sub
push
dec
xor
inc
icebp
cltd
fs
push
fxch
mov
cld
jp
xchg
add
add
xchg
repnz
insb
fdiv
jle
testb
sub
or
test
sbb
cmp
jecxz
int3
cmpsb
mov
shl
jl
cmp
push
popf
pop
repnz
sub
stos
push
sbb
and
bound
dec
dec
movsb
scas
loopne
pop
push
sti
ljmp
insb
scas
outsl
cmp
inc
mov
cmp
xor
vsqrtss
scas
cmp
and
cmp
jecxz
ja
cmpsl
dec
dec
mov
adc
pop
sbb
shrl
lcall
sub
xchg
lcall
call
aam
cmp
mov
pusha
jnp
jns
in
ljmp
inc
xor
cltd
icebp
fcomi
cmp
adc
and
mov
gs
push
mov
mov
adc
test
outsb
jne
xchg
mov
or
rorl
fcmovbe
push
sub
jecxz
shlb
pop
sbbb
es
xchg
popa
push
adc
in
in
mov
int3
fiadds
lock
shll
cmp
dec
pop
dec
adcb
repnz
in
pop
fdivrp
mov
fidivrl
mov
inc
shl
mov
decl
or
dec
sti
into
pop
adc
addr16
add
out
push
scas
stc
dec
push
ret
popf
ret
jae
aam
pop
into
inc
jne
mov
clc
les
or
cld
out
cmp
inc
test
adc
rol
std
cmp
adcl
pop
xchg
cmpsb
arpl
xchg
dec
into
ds
sub
sti
sbb
addl
scas
aas
mov
pusha
scas
adcb
aaa
loopne
sbb
cltd
fwait
inc
icebp
and
dec
mov
pop
mov
shll
repnz
pop
mov
cmp
insb
adc
xchg
sahf
rcrb
shrb
imul
mov
dec
add
pop
ja
mov
dec
inc
xor
push
cs
sbb
iret
movhps
test
mulb
je
icebp
adc
sub
xchg
inc
pop
mov
mov
jo
xor
loope
add
mov
test
stc
sbbb
xchg
pop
add
mov
daa
jns
daa
ret
pop
test
xor
add
ret
and
add
test
icebp
loopne
and
lea
cwtl
pop
fcmovne
test
test
es
xor
pop
add
push
xorl
xchg
roll
movsl
xchg
int
xor
cs
pushf
push
add
push
pushf
leave
loop
dec
rorl
dec
negl
repz
pop
sbb
cltd
sbb
sub
pop
dec
sahf
insb
and
cmp
call
cmpsb
push
mov
ds
cmp
cli
loope
mov
or
sub
or
sbb
mov
andb
fmull
out
sub
sub
mov
xchg
loopne
inc
lods
pop
stc
mov
mov
mov
jecxz
cmp
fcoml
pop
cmp
leave
mov
mov
ret
jmp
cmp
out
sbb
mov
fisubl
data16
cmp
js
shl
scas
inc
jbe
xor
jl
sbb
clc
cld
jnp
in
mov
mov
jbe
pushf
adc
mov
mov
mov
fcmovnu
lods
dec
push
lret
xor
inc
mov
ja
fbld
or
cltd
jl
and
pop
in
fisubrs
ror
or
sub
jmp
mov
sub
loope
xor
jae
mov
mov
pop
in
mov
and
xchg
daa
and
jecxz
jns
loop
inc
bound
aas
jl
adc
jl
das
js
ss
cmp
subb
ja
in
xor
es
fdivrs
mov
fwait
test
pushf
adc
jmp
dec
jmp
xor
jbe
mov
jecxz
jnp
repnz
xchg
test
jo
enter
mov
lahf
out
popa
fcomip
fnstsw
xchg
xor
jns
ret
insl
fsub
fnstenv
jecxz
ds
test
or
sbb
in
lods
add
sti
push
lcall
cmp
cwtl
mov
sbb
gs
push
pop
pop
pop
mov
loop
sub
repnz
mov
mov
nop
lods
nop
xor
or
jnp
test
ror
xchg
mov
in
push
imul
cmp
int3
mov
ret
sbb
sub
jae
pop
iret
call
out
leave
cmp
fwait
add
out
addb
cld
inc
fisttpll
sbb
out
test
popl
add
cmp
mov
mov
inc
pop
sub
mov
test
xor
or
pop
pop
mov
push
xor
adc
movsl
xor
in
adc
mov
jge
mov
addr16
mov
push
enter
out
pop
movsb
sbb
adc
mov
pop
inc
lahf
aaa
daa
add
fdiv
xchg
addr16
cwtl
lods
push
pop
pop
mov
dec
lods
sbb
cli
cwtl
mov
fwait
sbb
pop
andb
add
cmc
sbb
cmp
out
pushf
sarb
cmpsl
das
pop
mov
mov
pop
ja
cmp
icebp
fldt
xchg
mov
mov
xchg
or
stos
test
bound
xchg
cmp
push
movsl
mov
push
mov
and
iret
mov
adc
lods
repz
iret
push
lahf
fcomps
cmp
arpl
int3
pop
ss
cmp
andl
xor
lods
faddl
outsb
notb
add
mov
cmp
xor
jo
lods
jnp
cmc
jbe
push
mov
cli
jge
and
call
shrb
adc
divb
test
lcall
movd
cltd
shrb
pop
out
sbb
imul
cmp
pop
insb
inc
icebp
popa
ret
xchg
inc
les
mov
jo
fisttpl
xor
xor
ret
mov
loope
xchg
in
mov
mov
mov
in
arpl
cmp
or
movl
mov
clc
rorb
cmp
mov
hlt
shl
xor
or
or
dec
insb
or
movsl
pop
aas
dec
subb
mov
cli
fdivl
pop
aaa
mov
aam
mov
mov
pop
xlat
sub
nop
fsubs
fldt
lock
adc
loope
inc
inc
push
bound
mov
xor
je
or
lahf
and
mov
inc
adc
jne
movl
loop
mov
lahf
push
xchg
test
insb
gs
or
sub
jns
mov
fxch
test
ret
cmp
sahf
movsb
mov
test
xchg
pushf
push
lret
into
or
mov
shr
xchg
lods
int3
mov
es
shll
add
leave
xchg
inc
push
xchg
in
adc
adc
adc
adc
mov
pop
cli
repz
out
or
jnp
sbb
aad
jecxz
inc
cli
test
jnp
pushl
ss
filds
pop
mov
adc
xchg
test
adc
adc
sub
sub
push
cmc
shl
mov
sbb
sbbl
mov
dec
or
ds
jb
sub
lods
test
shll
lret
repnz
or
repnz
mov
mov
aam
sbb
lock
cmp
and
pop
and
dec
shrb
dec
add
jb,pn
add
sbb
mov
leave
xchg
add
sbb
ltr
xchg
imul
lods
repnz
jg
icebp
mov
sub
pop
jp
adc
sub
push
fildl
jl
mov
sub
fnstcw
test
xor
pop
cmp
inc
cmpsb
outsl
mov
sti
sub
shrb
pushf
cld
xchg
dec
insb
cmc
iret
ja
xchg
dec
cwtl
aas
sub
insl
pop
push
adc
loop
mov
fadd
jg
enter
cmp
sti
cmp
sub
andb
repz
dec
mov
pushf
push
xor
xchg
sbb
es
loope
daa
notb
fistpl
scas
xor
shrl
out
notl
dec
push
aaa
dec
jnp
pop
add
push
inc
sub
ret
stc
push
fs
pop
dec
sub
fwait
aas
or
out
push
les
inc
dec
cmp
pop
pop
xchg
iret
jo
xchg
aas
inc
ljmp
jae
pop
push
jge
ljmp
mov
insl
push
dec
fistps
and
sahf
out
push
and
xlat
subl
push
pushf
pop
aam
lahf
adc
js
mov
repnz
inc
es
repnz
mov
aas
add
xor
scas
std
xor
aad
loope
push
rcrl
fwait
stos
loope
xchg
rcl
sarb
sbb
push
jo
into
jl
jo
loope
js
mov
test
rolb
dec
pop
insl
jl,pn
fnstcw
add
in
mov
testb
push
push
mov
or
cmpsl
int3
mov
test
mov
int3
sub
mov
cmp
dec
or
test
outsb
mov
inc
adc
fwait
jmp
jge
add
jnp
addb
push
enter
fidivrs
shrl
fldt
stc
aad
add
loope
pop
and
dec
in
pop
imul
out
add
in
data16
xor
pop
xchg
in
repnz
pop
popf
ja
xchg
ja
out
inc
pop
mov
lods
pop
in
dec
push
cmp
inc
outsl
push
inc
jp
test
ljmp
ja
jp
mov
pop
idiv
xchg
inc
dec
cmpsb
orb
xlat
sti
pop
sub
insl
stos
sbb
fs
lods
mov
sub
add
imul
std
ja
mov
jge
dec
stc
enter
insb
loop
iret
fiaddl
mov
arpl
mov
in
mov
xor
ja
data16
push
sbbb
notl
xor
mov
dec
dec
ja
dec
pop
loop
mov
push
dec
adc
fwait
jp
daa
pop
in
loope
push
scas
cmc
out
sub
insb
sbb
dec
lea
cmp
jns
add
push
mov
andl
dec
dec
imul
jmp
and
mov
fwait
sti
repnz
pop
and
notl
pand
stos
and
xchg
push
cmp
iret
js
test
pop
lcall
jmp
sahf
aas
test
adc
sbb
loop
sub
mov
pop
imul
fcmovnu
and
jnp
js
xchg
es
xchg
jbe
and
mov
outsl
loope
repnz
jae
aam
rorb
shrb
loop
mov
scas
push
stos
or
mov
add
gs
shl
xchg
cmp
inc
fdivrs
sbb
mov
cli
into
lcall
leave
inc
ficomps
sarb
test
ljmp
and
mov
jge
adc
imul
ficomps
xchg
mov
xor
sbb
inc
mov
pushl
hlt
mov
mov
cmpsb
sbb
add
mov
subl
ss
stos
xchg
mov
add
inc
sub
and
sbb
push
add
mov
mov
or
negl
sbb
push
lds
or
push
mov
mov
loope
repz
jl
popa
int
push
fsts
jl
rolb
cmc
lock
insl
xor
popa
fdivs
iret
mov
lods
xor
adc
decb
lret
push
sti
jnp
mov
add
mov
or
popf
mov
out
jmp
cwtl
es
in
lods
xor
or
shlb
push
mov
xchg
jnp
inc
push
sub
mov
push
push
sub
dec
pop
pop
mov
push
push
xchg
xor
js
mov
pusha
jl
cmp
jae
lods
repnz
popa
push
mov
fwait
subl
loopne
push
push
lcall
sub
jle
mov
cwtl
jne
fstps
or
add
shlb
pop
sbb
ret
dec
jmp
inc
loop
daa
adcl
imulb
mov
pop
in
pop
sbb
rolb
sbb
outsb
mov
push
xchg
int3
adc
idiv
lds
movsb
cmp
dec
push
es
cmp
cmp
nop
mov
out
jp
js
cmp
inc
lds
rol
mov
cmp
jb
pop
dec
mov
lds
push
adc
jbe
mov
and
cmp
xor
iret
sub
in
xchg
popf
pop
pop
sbb
xchg
sbb
and
sub
rcrl
mov
add
xchg
add
pop
aaa
into
in
jno
rcr
dec
xchg
jb
lret
mov
mov
mov
ss
dec
xchg
pop
insl
std
outsl
add
repz
push
mov
sbb
cltd
int
out
rol
dec
sbb
add
push
push
nop
pusha
insb
and
and
mov
cmp
cmp
inc
shrl
xchg
push
pusha
pop
mov
cmp
push
sbb
sub
ja
sbb
inc
fistpl
je
xor
adc
inc
push
scas
push
xchg
xchg
lds
jnp
test
fistps
adc
fmulp
aas
daa
pop
mov
rolb
test
aam
aam
xor
divl
popa
mov
loopne
mov
ret
leave
xor
in
adc
or
pop
mov
jle
cmc
mov
testl
dec
mov
xor
cli
aam
shlb
jge
fwait
shlb
jmp
cld
test
jecxz
cmpsb
cltd
stos
jp
add
mov
test
pop
cli
pop
jns
xchg
jp
add
jg
and
nop
add
sbbb
mov
and
add
dec
cmp
sub
addr16
jno
add
stc
adc
xchg
cmp
mov
mov
pop
inc
jne
js
in
xor
adc
fldl
xor
mov
lret
pusha
mov
fucomi
rorl
scas
mov
in
cmp
movsb
mov
adc
mov
movsb
bnd
adc
fisttpll
push
dec
fiadds
pushf
into
imul
inc
or
ljmp
or
test
add
push
dec
insb
repnz
cmp
loop
jne
inc
test
je
dec
aam
cmp
jnp
and
xor
pop
mov
dec
lds
daa
adc
xor
inc
jp
mov
or
lea
inc
xchg
lahf
or
test
mov
xor
fistpl
roll
and
xchg
mov
ds
cmp
mov
xchg
fildl
mov
ret
inc
fwait
repnz
mov
sbb
inc
mov
jl
outsl
pushf
inc
test
aas
mov
mov
sub
jnp
pop
or
cmp
cmc
sub
stc
pop
jl
stc
insb
sti
mov
xlat
cmp
out
int
rcrb
fidivrl
repnz
sbb
lret
and
or
data16
sti
lods
insb
push
testb
and
cmp
xchg
fmull
xchg
xor
add
xchg
daa
adc
add
jbe
xchg
out
jl
cmp
jne
shrl
addr16
mov
mov
xor
cli
test
imul
and
fadds
pop
mov
add
push
faddp
push
mov
hlt
push
inc
mov
fxch
loope
push
ss
repz
dec
bnd
pop
test
cld
hlt
lods
cmp
cmpl
stos
pop
cs
pop
mov
mov
mov
es
daa
mov
test
std
mov
dec
adc
int3
cmp
push
aaa
mov
sbb
dec
inc
stos
lods
or
aam
inc
mov
xchg
test
pushf
mov
lods
lods
sahf
dec
inc
inc
rclb
xor
mov
push
fneni(8087
or
rcrl
cld
jl
push
sub
sarb
pop
and
es
cmp
mov
cmp
or
addr16
mov
stos
test
sbb
and
jmp
iret
mov
lods
das
and
and
test
jg
lea
aaa
cmp
jl
sti
sbb
sbb
dec
das
mov
lahf
stc
mov
in
stc
xchg
adc
scas
xor
pop
xchg
or
dec
fidivrs
sahf
mov
pop
sub
sub
imulb
dec
push
leave
rolb
mov
mov
testl
inc
daa
pop
mov
shll
xchg
out
jecxz
cmp
xchg
cmp
mov
mov
ljmp
mov
inc
lea
xor
cmp
jno
push
sub
rcrb
xchg
sahf
inc
push
inc
sub
loopne,pn
repz
call
shlb
dec
or
xor
das
out
jge
cmp
insb
fisubrs
pop
in
pop
aad
test
jns
push
mov
popf
jbe
pop
push
cltd
inc
mov
test
lods
stos
test
dec
jl
jae
in
cli
add
xor
pop
push
pop
adc
push
adc
test
rorb
popa
lcall
cmpsl
add
loop
inc
mov
mov
xor
jge
xchg
ss
pop
js
push
mov
ror
stc
aad
push
stos
add
repz
daa
pop
cmp
dec
jle
pop
in
movsb
add
push
or
movq
inc
repnz
mov
insl
imul
jb
pop
lock
out
pop
lds
jbe
repnz
adc
fidivrs
loop
loope
out
shrd
add
sbb
shl
inc
cli
xchg
sbb
adc
sahf
and
xchg
and
and
sbb
add
repnz
mov
fld
adc
pop
jns
hlt
sahf
lret
xchg
or
adcl
cmp
repnz
mov
call
cmp
int3
xchg
push
mov
xor
dec
es
faddl
cmpsb
pushf
push
jnp
xchg
adc
sbb
pop
int3
cwtl
fs
stc
ja
in
mov
add
sub
xchg
cmp
mov
xlat
jno,pn
shl
mov
xchg
inc
mov
ret
pop
movsl
es
mov
mov
repz
jno
leave
in
cmp
adc
jge
bound
or
or
in
sub
js
sbb
cmp
inc
jo
imul
idivl
mov
pop
mov
addr16
addl
push
js
insl
ficompl
and
mov
cmp
jo
sub
mov
addr16
mov
test
repz
leave
pop
cltd
adc
sub
mov
out
push
mov
sbb
mov
test
pop
addr16
push
mov
add
adc
sbb
outsl
jns
mov
pop
dec
aaa
mov
shlb
mov
add
mov
or
shrw
dec
inc
mov
mov
sbb
dec
test
mov
xchg
pop
pop
aas
jno
iret
jb
pop
andl
cmp
sbb
mov
jl
add
in
sub
iret
mov
leave
add
cmp
inc
enter
adc
or
dec
sub
xor
rol
sbb
out
es
push
push
subl
push
testl
add
mov
mov
xor
mov
mov
fidivs
push
cmpsl
jb
es
daa
mov
sbb
jg
shlb
lret
jae
std
pop
inc
cmpsb
mov
pusha
sub
fwait
paddusb
in
lcall
jge
dec
stos
jb
add
aas
stc
fwait
lcall
cmp
mov
push
mov
sbb
pop
lahf
js
js
and
out
data16
fmuls
es
sbb
sti
xor
fldt
pop
mov
daa
sub
ficoms
add
clc
jmp
arpl
inc
mov
sbbb
sbb
sbb
inc
mov
mov
pop
pop
dec
repz
das
arpl
leave
xchg
mov
jbe
cmpsb
jp
xchg
insb
aam
lods
jge
addr16
xchg
testb
jno
pushf
cmc
mov
daa
pusha
mov
push
jg
aam
mov
adc
movsl
psubusw
push
aaa
mov
xchg
and
sbb
mov
sbb
cld
cmpsb
mov
mov
cld
cmp
nop
pusha
aaa
jne
lods
clc
add
sbb
in
ja
sahf
xchg
or
sbbb
jne
mov
scas
loopne
lods
add
cwtl
test
inc
adc
cmp
es
adc
or
pop
in
mov
fs
loopne
sahf
or
pop
mov
test
mov
mov
std
fstpt
cmpsl
sbb
pop
cltd
sbb
pop
cmp
vmovapd
dec
pushf
mov
lds
mov
xchg
xchg
sub
cmp
cmp
mov
push
ja
repnz
mov
fimull
fwait
mov
sub
nop
gs
andb
in
push
cmpsb
mov
push
pop
rol
cmp
jge
sub
stos
xor
test
ljmp
ficoms
jl
pop
pop
ds
inc
push
inc
out
add
xchg
xchg
orl
inc
fildl
xor
cmpb
movd
in
movsl
aas
cltd
xor
repnz
mov
out
jge
call
sub
ja
lcall
out
roll
repz
dec
loopne
out
adc
push
fs
rcrb
mov
out
int3
mov
aam
mov
pop
xchg
repnz
popa
mov
pop
int3
cmp
js
cmp
pop
out
xchg
inc
and
push
jg
out
adcb
pop
cmp
sbb
js
ja
cmp
stos
decl
xor
add
int3
inc
xor
mov
inc
nopl
les
mov
ficoms
adc
xchg
arpl
dec
sub
or
mov
jno
jns
mov
or
add
or
pop
sbb
and
popa
gs
clc
iret
and
jecxz
push
xchg
mov
shlb
mov
call
inc
dec
jae
les
pop
adc
sbb
xchg
xchg
pop
or
mov
int3
orb
xor
cmp
cmp
mov
inc
pop
push
out
loopne
push
cwtl
xchg
test
mov
mov
test
or
rolb
mov
push
pop
push
push
fsubl
dec
test
stc
and
ficoms
hlt
mov
bound
nop
cmc
pop
lret
cmp
cltd
xchg
mov
jmp
mov
popf
sbb
push
test
xor
loop
sarl
jmp
push
bound
cmpb
sub
xor
and
scas
sub
sbb
repnz
loop
jb
sub
imul
mov
inc
pop
xor
stos
test
popf
jg
dec
mov
push
mov
or
out
cmp
stos
mull
sub
jmp
xor
add
dec
fistl
or
cltd
jl
je
sbb
lods
cli
inc
adc
rcll
sub
test
xchg
in
leave
xchg
dec
out
into
xchg
or
inc
xchg
rcl
xchg
fstpl
pop
inc
pusha
mov
sub
in
cmpsb
fcmovnbe
lcall
imul
xchg
stos
inc
mov
lea
add
xchg
lcall
pushf
pop
mov
sub
mov
aas
cmp
jp
sbb
lods
jmp
push
add
inc
jecxz
cmp
mov
dec
bound
movsl
pop
cmc
dec
popf
cmc
int3
xchg
mov
mov
je
aam
sti
pop
push
popa
add
inc
cltd
jnp
jae
dec
js
shlb
push
dec
daa
shll
xchg
out
push
mov
call
pop
je,pn
jl
xchg
and
test
cmp
mov
fisubl
and
cs
mov
sti
in
or
icebp
sbb
arpl
push
mov
int3
loopne
scas
arpl
xchg
out
mov
xor
cmp
insl
add
movsb
pusha
dec
cmovno
ret
pop
pop
cmpsl
pop
out
pop
test
negb
loop
mov
xchg
js
dec
adc
clc
ror
mov
add
sub
xchg
pushf
pop
dec
mov
inc
cmp
scas
test
divb
test
shlb
dec
jmp
xor
aad
dec
lock
aaa
adc
les
jp
aam
lret
fisubrl
sahf
fs
pop
ret
adc
push
sbbb
in
jmp
mov
mov
add
jns
popa
or
xchg
fisubrl
je
test
movb
cmp
pop
pop
sbb
sbb
pushf
sub
inc
lret
fcmovnu
lds
out
sarb
pop
jp
jecxz
dec
sub
mov
ds
or
mov
xor
scas
sbb
xchg
loop
cmp
ret
pop
addb
jecxz
insb
mov
outsl
in
icebp
loopne
adc
xchg
xor
ja
lcall
cmp
ja
cltd
imul
loope
shrl
fs
movsl
inc
out
arpl
cltd
xchg
js
sub
or
icebp
imul
mov
sub
or
cmp
pop
clc
sbb
inc
push
jmp
pop
loope
xor
add
xor
mov
push
xchg
cmp
fmull
xorl
lods
jno
stc
jl
shrl
ss
push
jmp
or
jl
repz
repnz
leave
lods
pop
fisubrs
push
mov
adc
loop
incl
pop
cwtl
mov
insb
add
in
xor
push
inc
andl
mov
xor
enter
pop
out
lahf
lea
push
fs
clc
xchg
inc
sbb
and
in
push
push
pop
aam
add
stos
pop
dec
cmc
fstps
add
stos
jp
or
push
inc
adc
and
sbb
mov
mov
stc
xchg
repz
insl
inc
scas
cmp
enter
scas
and
out
pop
pop
push
adcl
add
test
imul
mov
clc
dec
cld
dec
cmp
mov
test
jbe
fwait
push
cmp
aam
push
pop
xlat
jmp
cmc
mov
jmp
and
popa
push
in
in
sub
into
daa
push
loopne
xchg
movsb
frstor
mov
inc
test
pop
inc
js,pt
mov
add
das
data16
subb
rorb
fdivl
jg
adc
push
repz
test
cld
addr16
xor
mul
int3
cmp
lds
add
fldenv
icebp
movsl
repz
in
out
sbb
int3
cmp
in
test
or
pop
xchg
jnp
cmpsl
das
push
test
out
into
lods
scas
in
cmp
mov
or
dec
push
and
and
loopne
pop
stc
pop
test
mov
xchg
not
sbb
pop
cmp
mov
or
clc
pop
push
push
sub
fwait
cmpsl
sbb
xor
mov
shlb
push
adc
imul
loop
dec
pop
lea
mov
xchg
xor
lods
push
into
or
leave
and
loope
pusha
loope
add
mov
mov
cltd
popa
pop
jg
std
pop
pop
shlb
dec
add
cmp
dec
mov
mov
xchg
xchg
cld
and
or
xchg
xchg
test
lcall
pop
dec
or
mov
jp
repnz
test
push
enter
mov
pusha
dec
cmp
push
std
lods
inc
test
jo
gs
idivl
push
enter
mov
pop
xchg
push
repnz
mov
jns
add
test
popa
sub
xchg
mov
push
rorl
dec
loope
cmp
js
mov
movsb
or
mov
lret
push
cmp
out
cmc
call
push
ficomps
sahf
inc
scas
and
inc
in
sbb
cwtl
out
push
lods
cwtl
cld
cs
pop
sub
stos
and
adc
nop
mov
pop
test
cmp
popa
xchg
dec
jl
arpl
sub
icebp
jns
xchg
mov
or
scas
jmp
in
fisttpl
pop
cli
sub
ds
jmp
jns
add
xor
leave
push
loopne
scas
int3
lcall
or
jbe
add
dec
push
mov
xor
outsb
cmp
xchg
jp
sbb
and
imul
add
jg
scas
daa
imull
xchg
fwait
sub
inc
je
pop
mov
mov
cmp
push
daa
stos
mov
test
push
sub
pop
mov
xor
and
jae
mov
out
ds
add
out
test
cmpsl
addl
stos
dec
cmpsb
repz
add
jmp
fucom
cmp
pop
out
lret
int
jbe
outsl
xor
and
loop
pop
dec
ja
inc
mov
jg
in
mov
inc
inc
push
dec
cwtl
cmpsb
push
gs
test
iret
jmp
xchg
leave
mov
popf
xchg
mov
mov
fisubs
ja
dec
scas
cmpsl
test
mov
stos
pop
jnp
in
jp
or
cld
addr16
icebp
iret
jecxz
jno
xchg
push
jnp
xchg
mov
and
sbb
jno
mov
jo
pop
test
fdivrs
jns
ret
popf
adc
xor
jmp
push
mov
pop
dec
add
mov
sbb
or
or
push
test
inc
daa
jg
jo
jnp
xchg
outsl
sbb
add
mov
or
out
ss
and
or
add
cli
mov
jno
push
fistps
dec
push
outsb
mov
xchg
stc
sbb
lods
imul
fnstenv
mov
inc
fisttps
sub
jne
pop
sbb
mov
shr
inc
xor
mov
dec
lods
sar
cmpsb
add
adc
cmp
in
pop
xchg
jno
aas
sub
mov
mov
imul
push
loopne
scas
scas
dec
sbb
fstpl
lahf
cs
inc
shrb
mov
ja
xchg
mov
and
dec
popa
neg
dec
and
jns
outsb
xchg
in
xchg
scas
sub
test
xor
xchg
fdivrs
inc
xlat
loope
xor
mov
idivb
popf
incl
iret
into
jmp
das
cmpsb
mov
fwait
repnz
int
push
fsubr
gs
aas
mov
mov
mov
push
out
pop
mov
inc
or
dec
les
iret
xor
loop
jecxz
xlat
adc
add
mov
inc
cmp
movsl
xor
dec
pop
call
add
and
jb
data16
cmp
cli
inc
push
sarb
push
int3
or
add
enter
cld
test
mov
dec
aaa
pop
rcl
pop
mov
xor
inc
fwait
inc
aas
push
mov
push
loop
aam
jmp
dec
mov
xor
fimull
mov
jbe
cmpsb
pop
test
jne
pop
xorl
iret
mov
xor
push
xchg
out
push
cmpsb
fwait
test
shl
out
mov
loop
js
add
pop
jp
cmp
xorl
lods
cltd
sub
adc
add
das
jbe
mov
push
inc
add
aas
push
int3
sbbl
jp
scas
aas
mov
push
dec
js
add
adc
cmp
out
inc
xor
cmp
add
mov
sbb
and
push
fmull
jns
repnz
dec
clc
cmp
inc
jecxz
jle
repz
pop
mov
mov
dec
jb
mov
sbb
fsubs
repz
mov
pop
frstor
scas
jle
andb
xchg
shlb
ffreep
push
xor
dec
sbb
jl
or
iret
pusha
sbb
adc
adc
xor
cmp
les
sbb
outsl
sbb
push
out
fimuls
int3
add
adc
cmc
pusha
adcb
jge
psrlq
imul
fprem1
mov
inc
movsb
movsl
mov
inc
pop
pop
shlb
int3
mov
mov
mov
cmp
dec
mov
push
add
test
pop
and
sub
and
cmp
cmc
jbe
xor
pushf
or
flds
jae
jmp
sub
cmp
aas
lahf
mov
cmp
mov
mov
jno
movsl
dec
idivl
fsts
and
sub
xchg
jo
movsb
out
iret
fisubrl
notl
add
mov
xchg
pushf
sti
adc
add
inc
cmp
dec
jbe
lods
decl
fdivr
rcrb
xchg
jns
cmp
dec
inc
and
mov
xchg
std
xchg
cmp
and
inc
mov
test
not
pushf
js
jmp
out
sub
sti
mov
xchg
push
push
push
add
jae
mov
test
addr16
lds
cli
mov
sub
lret
cmc
shrb
dec
imul
xchg
rcrb
enter
shrb
push
xchg
rolb
adc
stos
or
cmc
dec
bound
rorl
push
aam
shlb
or
sbb
sbb
mov
pop
cltd
xchg
iret
sbb
mov
movsb
dec
dec
lret
out
pop
shrb
bound
test
jle
adc
stos
push
in
jge
rcrb
out
mov
popa
add
sti
pushf
push
pop
add
cmp
or
xchg
mov
add
mov
and
pop
test
mov
inc
mov
jecxz
add
lock
pop
mov
push
ja
lret
pop
dec
pop
test
and
ret
mov
add
sbb
popa
push
aas
mov
mov
mov
cmc
dec
mov
sub
dec
cmpl
lea
enter
fdivl
lahf
dec
call
pop
divl
scas
mov
pop
jmp
pusha
add
jg
xor
out
dec
xchg
or
js
jl
mov
sbb
adc
rcll
mov
hlt
dec
jns
aam
mov
imul
sarl
jmp
loope
cli
mov
sbb
cmp
add
mov
bound
xchg
cs
dec
sbb
mov
pop
repnz
int3
inc
sarb
and
inc
push
cld
mov
pop
or
jae
and
add
or
pop
dec
cmp
ds
sub
pop
mov
mov
cmp
xchg
add
push
int
dec
xchg
mov
mov
jmp
lret
mov
jecxz
jmp
test
add
lahf
dec
das
or
inc
adc
cmp
adc
andb
xchg
push
mov
lcall
xor
jecxz
loop
out
stc
sub
fsub
in
add
sbb
add
sub
enter
and
push
xchg
fdivr
xchg
adc
stc
aas
cmp
inc
xlat
jle
add
xor
cmp
test
xor
xchg
test
dec
jmp
data16
lods
fs
xor
adc
or
out
leave
mov
jg
mov
sub
inc
or
inc
cmp
mov
fs
nop
mov
icebp
and
pop
sahf
cmpl
out
mov
inc
pop
jecxz
aam
aam
popf
scas
arpl
sarb
mov
notb
bound
dec
and
dec
loopne
nop
lret
fwait
sub
sub
lock
add
xor
out
shlb
xchg
pushf
push
ss
aaa
adc
push
cmp
testl
and
dec
lods
jecxz
rcrb
xchg
push
nop
loope
xor
loop
andl
mov
test
stos
sahf
dec
cli
mov
push
subl
pxor
jne
aaa
js
adc
test
ds
lods
adc
mov
cwtl
cs
out
clc
in
pop
mov
lret
sub
xor
sub
loop
and
out
movb
cmp
dec
jl
jnp
dec
jo
testb
push
push
jo
ja
arpl
insb
in
in
mov
fwait
call
dec
cmp
fistpll
fsubl
out
mov
repnz
push
mov
cmp
cwtl
into
adc
lcall
inc
add
cld
pop
sub
aaa
cmp
test
mov
ljmp
pop
jmp
iret
fcmovnbe
repnz
movsl
xlat
lds
sbbb
and
stos
adc
xor
inc
fwait
mov
loope
insb
xchg
ss
mov
iret
test
and
lods
lret
adc
leave
sbb
adc
lods
ljmp
lcall
icebp
pop
test
rcrl
and
leave
daa
mov
ds
iret
xor
pop
testl
jmp
jl
scas
aaa
mov
and
mov
out
sar
adc
hlt
mov
subb
fcoms
dec
jp
xor
addr16
xchg
scas
jae
bswap
test
dec
mov
sbbb
adc
sarb
inc
push
jge
jnp
cmpsb
mov
xchg
mov
mov
mov
cmp
cltd
sbb
stc
cmp
jnp
mulb
fs
adc
dec
xchg
xchg
mov
stc
pop
mov
sbb
shll
dec
pusha
nop
js
sbb
add
ret
xchg
mov
in
mov
ret
dec
repz
test
pushf
xlat
mov
xchg
push
js
add
xor
add
xchg
call
pusha
cwtl
ss
jb
imul
stc
fwait
pushf
pop
jp
in
pop
adc
inc
and
lods
or
sahf
imul
pop
test
dec
in
aad
xchg
loop
add
popa
adc
cmp
stc
stc
fstps
xchg
sub
jle
dec
xchg
jae
adc
cld
stos
mov
lods
xchg
dec
test
mov
lods
js
aas
arpl
movsl
jb
int
lds
shl
xchg
sub
ret
sbb
fimull
out
test
insb
rol
iret
insl
mul
pop
mov
out
mov
and
add
aaa
mov
mov
add
icebp
xchg
sahf
push
dec
adc
movsl
aam
mov
and
mov
add
loop
pop
out
push
mov
mov
sbb
pop
das
sbb
inc
notl
loop
mov
mov
jecxz
add
iret
lahf
lock
dec
lods
xchg
subb
pop
pusha
pop
add
xlat
test
gs
xchg
into
out
cmpsl
js
xor
push
sub
mov
and
pushl
xchg
pushf
sub
xchg
push
test
or
sti
sub
es
pop
test
test
push
es
mov
out
pop
fidivrl
sub
divps
mov
push
sbb
mov
pop
lret
jmp
in
out
repz
pushf
mov
rcll
xchg
cmpsl
jmp
mov
das
aas
add
mov
jmp
iretw
nop
roll
add
icebp
inc
outsl
repnz
dec
scas
in
mov
sahf
cmp
lea
or
xor
pop
mov
out
inc
xchg
or
mov
out
hlt
mov
mov
lods
dec
lods
stc
add
test
mov
cltd
adc
inc
mov
fidivs
dec
or
cmp
pop
lcall
test
cli
test
jle
inc
dec
pop
pop
mov
push
adc
call
shl
and
xor
fwait
gs
pushf
imul
movl
sarl
aam
in
or
es
mov
arpl
dec
cmpsb
cmp
insb
sbb
sbbb
data16
inc
xchg
daa
push
inc
ja
rorl
jle
and
push
or
xchg
or
xor
mov
lret
iret
stc
int3
aas
jb
and
repz
push
or
pushf
sbbl
mov
push
mov
divl
aad
mov
shlb
xchg
fstpt
pop
fisubrs
arpl
inc
jmp
cmp
push
stc
mov
xchg
pop
cmpsb
inc
pop
andb
sub
mov
push
and
aam
cmp
movsl
js
mov
fwait
xchg
lock
ficoml
aas
repnz
outsl
orb
test
stc
das
outsl
cmp
insl
les
in
arpl
push
inc
orb
popa
gs
adc
xchg
pop
loopne
orl
inc
fcompl
mov
loop
sub
xchg
cmp
daa
add
test
insb
pop
loope
mov
xchg
adc
push
jo
data16
or
mov
sbb
test
shl
ja
scas
inc
push
push
jge
jns
repz
jge
js
out
mov
repnz
fsub
fsubs
out
mov
ja
pop
dec
test
cmp
ficoms
sahf
inc
sarl
push
stos
rorl
pop
sub
inc
add
ja
cli
into
cli
out
cs
xchg
insb
pop
scas
inc
jno
and
mov
sbb
cmpb
rclb
lea
mov
loope
push
mov
subb
push
je
or
hlt
cwtl
roll
test
aaa
mov
xchg
mov
and
std
les
cmpsb
add
jecxz
mov
bswap
cli
xchg
repz
roll
jbe
push
fisubrl
xchg
ja
orb
xor
adc
xchg
mov
cmpsl
aas
xor
sahf
mov
out
dec
xor
hlt
jbe
enter
xchg
out
inc
outsl
fldl
test
leave
mov
mov
call
std
or
and
aam
subb
add
pop
cli
and
add
sub
ss
add
xchg
push
in
push
xchg
in
sbb
aas
push
pop
das
jb
dec
xchg
rolb
jmp
pop
jg
ja
pop
lret
stos
cli
mov
mov
push
neg
jne
push
insb
push
xor
xchg
sarl
hlt
adc
xlat
mov
clc
jg
out
xor
mov
pop
add
push
fnstsw
push
add
xor
outsl
mov
push
ljmp
lods
cmpsb
sbb
or
dec
fwait
or
adc
lahf
dec
pushf
push
mov
pop
popf
mov
mov
mov
dec
aam
cld
insl
jbe
fcmovnu
pop
cmpl
pop
cmp
lret
inc
xor
cmpsb
xor
pop
aaa
mov
pop
inc
xorb
and
pop
cmp
add
clc
ja
ret
cmc
and
fwait
jg
inc
inc
jnp
test
test
cld
sub
mov
cs
out
mov
jp
mov
pop
lods
xchg
push
dec
push
push
cltd
add
gs
dec
rcrl
and
and
and
test
and
cmp
js
mov
xor
lods
dec
pop
aaa
fmul
push
pop
in
jle
daa
and
mov
mov
xlat
xchg
mov
imul
cmc
dec
imull
cmp
mov
add
mov
xchg
insl
adc
pop
fiadds
xor
fs
xlat
pusha
aaa
ds
and
jmp
test
or
sub
xchg
pop
mov
popa
push
xchg
inc
mov
pop
cmc
jmp
push
and
mov
sub
xchg
dec
mov
and
test
cmc
cltd
repnz
or
aam
xchg
add
push
mov
dec
es
jbe
aaa
cwtl
leave
out
mov
in
xchg
fsubs
mov
sub
aas
cli
add
adc
cmp
cmp
aas
xchg
leave
clc
push
add
mov
mov
sub
sbb
jnp
lahf
pop
inc
xchg
into
cmc
mov
jl
out
xor
mov
push
test
mov
ficoms
inc
lahf
ja
inc
test
and
addl
out
bound
int3
pop
or
fcos
loop
push
push
sub
sbb
and
out
or
arpl
stos
lcall
xor
sub
add
pop
repz
sub
cmp
or
into
call
imul
test
mov
mov
xor
es
es
adc
jle
sub
xor
dec
nop
test
mov
cmp
sub
cmp
fwait
add
leave
gs
out
xchg
ljmp
stc
lahf
add
mov
mov
scas
lods
notl
cld
jecxz
int
xchg
jnp
popf
scas
mov
shl
jecxz
notl
in
or
mov
pop
cmp
push
clc
xor
in
int3
push
add
cmp
pop
lahf
xor
or
ja
xchg
jmp
and
dec
mov
xchg
jge
rolb
das
ja
mov
xor
pop
imul
pusha
pop
push
add
test
adc
and
push
adc
fildll
stos
psadbw
fucomi
nop
sbb
shlb
pop
mov
or
cmp
cmp
cld
or
inc
dec
xor
sub
or
dec
xchg
jo
jne
leave
iret
jle
dec
int3
push
jae
push
inc
test
mov
mov
leave
into
cwtl
inc
dec
jnp
inc
mov
dec
js
aam
fisubl
sub
mov
sub
insl
inc
fmul
push
lock
test
xchg
mov
push
movsl
mov
loopne
test
inc
push
cwtl
xchg
sbb
js
pushf
push
sub
mov
mov
or
sbb
inc
cwtl
sti
mov
fmuls
add
jns
sti
mov
sbb
fadd
sub
aaa
testl
add
lahf
inc
or
mov
lcall
mov
xchg
leave
divl
or
inc
fwait
jno
sub
stos
stc
jbe
push
sub
dec
sbb
jb
mov
inc
dec
ret
mov
xchg
mov
dec
loop
sub
lods
lods
jmp
repnz
inc
xor
and
cmp
mov
push
or
enter
mov
ret
cli
mov
int3
or
mov
cmp
mov
xor
inc
mov
call
pushf
outsl
lret
pusha
add
dec
sbb
ja
add
cmp
test
ds
and
cwtl
xchg
add
mov
sbb
sub
jmp
fs
fnstcw
mov
or
jg
rorb
fistpl
pusha
adc
pop
cmp
pop
dec
movsl
mov
leave
dec
addr16
cmpsb
notb
xchg
insb
pop
addr16
and
cmp
lods
pushf
inc
mov
paddw
cmc
pop
mov
xor
mov
test
push
imul
cs
loop
push
mov
sub
pop
imul
sub
lret
cmp
lret
mov
insb
and
cmp
loopne
das
fmuls
jns
out
push
les
or
aas
leave
insb
loope
xchg
sub
lret
sbb
cld
cmpsl
out
cmp
ja
cs
lea
pop
cmp
xor
add
sti
and
enter
inc
sbb
clc
in
xchg
pop
adc
bswap
add
mov
pop
test
push
aad
inc
jmp
enter
dec
add
push
repz
cmp
shlb
jne
sbb
aam
test
aas
or
sub
pop
sub
pop
fists
sub
lods
repz
stc
and
andl
xchg
in
xor
xchg
mov
test
cmp
pop
dec
nop
pop
and
xchg
cmp
lahf
imul
test
test
fs
lods
insl
inc
mov
pop
push
jle
test
jb
insb
cmpsb
pop
xchg
cltd
shll
repnz
dec
decl
xorb
jae
shlb
mov
mov
jmp
sbb
dec
movsb
inc
or
lds
sub
data16
jmp
icebp
dec
jo
ljmp
jmp
jecxz
lcall
or
xabort
imull
xchg
xlat
int3
clc
std
xchg
out
test
xchg
shll
loope
add
testl
push
pop
cmp
mov
fnsave
cmp
pop
xlat
mov
out
mov
jp
ror
or
pusha
ljmp
sbb
add
mov
scas
insl
mov
je
mov
rclb
in
les
pusha
stc
repnz
arpl
pop
jnp
and
pusha
adc
scas
fstpt
hlt
mov
aad
pop
es
jnp
or
rcr
mov
shll
jno
or
dec
jb
or
xor
cmp
lds
sahf
cmp
int
jns
mov
jbe
cld
mov
cmc
jle
sub
sub
sub
sub
inc
and
sti
jg
mov
jl
jmp
xchg
fnstcw
and
pop
mov
pop
add
insb
bound
mov
push
adc
xchg
xchg
aas
out
sbb
mov
scas
lret
jns
lods
xor
push
jb
pushf
mov
jnp
repnz
sub
ds
adc
je
inc
push
sub
mov
aaa
iret
notl
xlat
mov
pop
lods
arpl
pushf
out
jl
adc
fmulp
mov
clc
movsl
sbb
insb
fbstp
sub
and
jl
cltd
pop
sub
or
xor
mov
mov
and
movl
lods
pop
insb
push
xor
pop
js
popa
sub
fwait
sub
or
pop
jle
mov
inc
xchg
test
add
mov
xor
xor
nop
cld
cs
int3
cmp
test
popa
int3
imul
imul
js
out
test
jb
xchg
ja
cltd
push
ret
test
xchg
adc
pop
xchg
pop
into
add
jb
cwtl
mov
stc
jp,pt
inc
rolb
dec
sub
sbb
push
repnz
lret
xchg
aam
ss
pop
or
mov
insb
sub
js
mov
xor
negl
scas
mov
lcall
and
cmp
pop
mov
scas
fstpl
xor
dec
sub
jo
arpl
mov
out
repz
cmp
cmpl
lcall
nop
cmp
jp
icebp
mov
hlt
mov
xor
jge
repnz
sbbl
mov
fiadds
cmp
clc
dec
imul
ret
sahf
loop
xchg
push
sbb
ds
pushf
test
iret
add
sbb
push
add
and
cmpsb
sahf
insb
jle
mov
push
test
xchg
and
les
add
pop
or
pop
idiv
push
sbb
xor
lcall
aas
dec
enter
das
jg
lcall
movsb
popa
loop
cmp
jo
sbb
std
sub
lcall
in
xor
jmp
pop
cmpsl
test
xchg
loopne
mov
mov
inc
popf
xchg
sub
shrb
int3
inc
mov
test
insl
ja
dec
cmp
inc
subl
pop
sub
sub
pop
jl
cmp
sub
mov
jl
stc
xchg
lods
adc
je
out
or
out
movsb
imul
in
mov
mov
jns
loopne
mov
fsubrl
jg
inc
enter
movsb
or
cmp
rol
xchg
dec
scas
cmp
push
enter
add
es
loopne
shrb
push
fistl
js
das
mov
mov
sarb
cmp
mov
pop
shr
xor
stos
stos
repz
mov
or
data16
bound
cmp
popf
fisubrl
sub
push
inc
mov
cmp
add
push
sub
pushf
xor
cmp
mov
jnp
in
add
test
xchg
ret
cmc
jp
pop
xchg
or
pushf
out
lcall
jle
xlat
dec
jle
jb
imull
pop
je
adc
test
mov
mov
inc
push
jg
inc
mov
cltd
mov
jge
rcll
test
cmp
decl
js
jle
addl
sbb
dec
sahf
or
cmp
jmp
inc
lods
lret
fwait
lea
jle
test
mov
aaa
ljmp
push
scas
xchg
cmp
dec
lds
mov
aam
imul
je
push
aad
xchg
test
ss
pop
inc
mov
cmpsb
adc
mov
ficoml
mov
ja,pt
frstor
jl
arpl
mov
mov
out
out
in
cmp
jne
leave
ror
jl
push
cmp
in
jae
test
push
dec
ret
jg
dec
lcall
lods
aaa
mov
test
dec
and
sti
pop
pushf
shll
push
xor
ja
mov
out
jg
arpl
jge
pop
mov
movl
lcall
mov
or
push
pop
mov
xchg
jl
or
cltd
lcall
fldcw
pop
xchg
mov
jmp
xchg
xor
rorl
cli
inc
pop
jg
popa
mov
push
cmpsl
pushf
adc
push
push
xchg
cmovb
fwait
lret
test
test
in
mov
xchg
incl
cmp
fcoms
xchg
in
mov
loop
adc
add
outsl
pop
js
rclb
out
call
xchg
jp
out
mov
mov
mov
out
sub
lcall
sub
dec
sbb
push
lcall
push
xchg
out
fnstenv
fwait
pop
test
inc
into
sbb
test
push
movsl
stos
test
pop
add
sahf
xchg
test
jge
movsb
cmp
aaa
leave
mov
add
add
mov
sub
ljmp
scas
mov
loop
xchg
cmp
jnp
lds
mov
sti
shll
shll
xchg
jo
js
leave
add
arpl
push
stos
fdivl
and
mov
fdivs
mov
dec
dec
addr16
fstpt
fwait
sbb
adc
flds
test
sub
lods
xor
push
mov
xchg
xchg
or
xchg
cltd
test
cmc
inc
out
sbb
jmp
imul
and
fistpl
adc
movq
cld
or
sar
mov
cmp
sbb
popf
add
dec
pushf
or
mov
sbb
insl
or
andb
cmp
mov
fldt
dec
inc
cmp
or
cmp
xchg
ss
orb
stc
test
mov
bound
cmp
into
or
xor
scas
xor
ja
mov
mov
stos
in
pop
test
sti
push
push
rcr
sbb
and
out
loop
mov
xchg
mov
leave
out
jmp
pop
sbbl
or
cmp
int3
ret
mov
nop
stos
test
pop
pusha
iret
jg
test
mov
jne
mov
int
xchg
and
sbb
movsl
push
mov
push
mov
pop
xchg
test
dec
leave
xchg
or
inc
imul
lea
pop
shl
outsb
out
mov
dec
mov
shll
outsl
test
xchg
aam
add
loop
mov
xchg
sub
xchg
inc
cmp
inc
lea
inc
lahf
mov
push
sbb
lahf
daa
add
mov
das
mov
and
repz
aas
xor
loopne
leave
nop
fadds
insb
sub
or
jb
out
fwait
or
cmp
and
sar
xchg
lods
ja
add
jo
pusha
dec
push
loopne
push
push
push
xlat
cmp
je
cmp
scas
aas
jl
add
mov
dec
pop
hlt
adc
add
sub
aam
inc
and
adc
cmpsb
inc
add
shr
xchg
cmp
mov
ret
rcll
fwait
mov
pop
dec
sub
movsb
loopne
pop
jbe
mov
fadd
lret
in
fidivrs
pop
pop
lcall
jo
ds
repnz
bound
scas
mov
ja
push
shlb
out
sub
mov
ja
addb
mov
push
pop
pop
sub
lods
mov
jmp
push
in
xchg
mov
or
ficoms
ja
push
add
mov
or
jmp
mov
ja
nop
nop
cmp
and
loopne
inc
jle
cmp
dec
test
mov
mov
idiv
xchg
mov
std
cmp
out
test
js
mov
pop
dec
xor
add
bound
or
out
ficomps
pop
hlt
pop
leave
jl
sub
push
xchg
mov
lahf
mov
scas
ret
cmp
iret
ja
aam
add
lds
aaa
and
and
mov
repz
dec
dec
pusha
aad
add
mov
je
negl
xchg
sbb
mov
cld
adc
lods
mov
lcall
cld
fwait
jae
inc
sub
jl
rcl
leave
fistpl
cmp
and
lahf
xchg
stc
stos
inc
push
lahf
faddl
cmp
idivl
test
shrb
fs
mov
inc
test
mov
addb
ja
dec
mov
inc
es
or
jecxz
cmp
shll
iret
sub
ljmp
daa
stos
xchg
mov
cmp
jnp
test
jne
notl
pop
fnsave
xchg
test
aam
and
sbb
mov
les
and
ljmp
sbb
lock
push
lea
pop
fldpi
xchg
cmc
jp
push
sub
mov
orps
in
cmp
pop
add
test
sbb
mov
test
dec
mov
test
andl
data16
lock
cli
ja
pop
pop
ss
das
je
mov
pop
test
push
add
pop
inc
es
inc
xchg
mov
ja
sbb
add
fsubrp
lods
sbb
fcomps
and
test
test
cmc
fsubl
pop
repz
rcr
leave
cmp
mov
pop
mov
imul
ja
rolb
ds
fs
lret
leave
inc
fwait
sub
test
fisttps
les
and
add
mov
lock
fwait
adc
addr16
shrl
rol
or
test
rolb
test
fildl
pop
mov
or
lahf
movsl
cs
fldl
mov
xor
and
xchg
test
ljmp
sub
in
loopne
ja
jb
jb
pop
mov
sbb
lret
xchg
inc
push
gs
iret
nop
sahf
inc
jp
mov
stos
in
add
xchg
test
sub
add
mov
lea
imul
ss
add
push
scas
sub
loopne
mov
pop
cmp
jbe
jno
mov
fwait
xchg
or
into
mov
call
fs
xor
dec
mov
shl
inc
cltd
jo
xor
test
cld
fcomps
fstpt
icebp
mov
xor
jae
test
je
xorl
nop
inc
jo
mov
mov
insl
xchg
jo
icebp
sbb
dec
mov
xchg
clc
negb
dec
ss
imul
cmc
das
cmp
cmpsb
scas
sub
inc
pop
int
pop
outsb
dec
sbb
jae
test
xchg
lret
or
dec
pop
inc
pop
xchg
jmp
xchg
es
pop
or
insb
or
insb
loope
and
mov
dec
aad
loope
cmp
fs
cmp
xchg
sbb
add
call
ret
xchg
test
xor
dec
xor
dec
es
out
clc
fcoms
dec
outsb
mov
jb
pop
popa
pop
scas
sub
mov
xchg
mov
sub
movsb
pop
pop
dec
mov
out
or
pop
icebp
cmpsb
sbb
mov
add
jl
adc
xchg
popa
dec
ss
pop
out
lock
cmp
test
inc
in
xchg
test
jmp
repnz
cmp
pop
xor
dec
shlb
pop
jb
cmp
cmpsl
xlat
fwait
cmp
inc
adc
fstpl
aas
xchg
jb
addr16
cmp
loop
xlat
int3
dec
or
push
aam
arpl
sub
push
add
or
std
popf
andl
jno
adc
in
push
ljmp
jg
push
inc
js,pn
jae
mov
in
fcmovnbe
dec
test
sahf
mov
bound
lods
cltd
pop
mov
push
faddl
adc
inc
xchg
push
test
jecxz
inc
push
mov
inc
pop
xor
jns
inc
fbstp
add
pop
jb
jmp
inc
sbb
les
adc
mov
cmpsb
ja
dec
xchg
lds
pop
cmpsb
cli
jnp
test
add
or
push
pop
mov
mov
push
fwait
popl
jg
push
xor
pop
xchg
shlb
dec
inc
jg
pop
clc
cmp
mov
mov
xchg
fstpt
inc
shl
inc
popaw
imul
movb
pop
test
sub
xor
add
jo
adc
pushf
aas
mov
xorl
xor
ret
dec
sub
mov
in
mov
pusha
lods
dec
add
loope
neg
jnp
shl
xchg
shll
sbb
std
dec
and
dec
adc
pop
jmp
es
dec
cmp
shl
adc
add
push
shrl
fs
push
add
out
sub
mov
rorb
inc
jmp
jmp
je
xchg
pop
test
dec
pop
jg
test
cld
pop
mov
aam
push
out
std
out
mov
test
sbb
mov
add
je
arpl
and
adc
fldcw
xchg
aas
mov
gs
into
popl
xchg
push
sub
jmp
mov
and
cld
push
repz
lahf
sbb
push
cmpsb
sub
in
lods
cmp
fwait
cmp
inc
insb
pushf
dec
ret
imul
fstl
sahf
pop
mov
testb
mov
inc
inc
xchg
xchg
adc
adc
pop
lods
jae
arpl
jno
movsl
jg
xchg
movsl
cmpsl
xor
loope
sub
lods
mov
mov
pushf
sub
or
mov
jbe
stc
out
jecxz
mov
cli
insl
ja
or
mov
test
xchg
add
into
bound
loopne
xor
lcall
dec
cmpsl
pop
in
mov
test
fildll
test
mov
adc
mov
out
in
bnd
rorb
dec
jo
mov
je
rcll
lret
in
push
sbb
push
xchg
ss
fcomp
rcrb
sbb
shlb
lahf
cmp
sub
xor
repnz
sbb
pusha
mov
rclb
dec
ljmp
test
icebp
dec
repz
jns
les
cmp
js
clc
cmp
aaa
mov
out
pusha
jp
push
andb
lea
pop
scas
sbbb
push
jl
fwait
int3
sbb
push
mov
sbb
nop
add
out
cltd
pop
sbb
lcall
pop
add
mov
fimull
dec
dec
out
xor
insl
sbb
pop
xchg
xchg
scas
xchg
xor
arpl
rorb
mov
pop
cs
xor
push
sub
mov
rdmsr
mov
mov
mov
mov
xor
loop
addr16
mov
sub
mov
add
xchg
lahf
hlt
jg
or
idivb
jg
mov
aam
movsb
jae
jns
push
pop
ss
push
movnti
test
sahf
push
sti
out
xchg
xchg
xlat
cmpsb
lahf
mov
movsb
sarb
mov
or
test
out
push
mov
or
xchg
mov
xlat
jecxz
pop
cmp
cmp
mov
dec
ja
xor
xchg
dec
sub
xchg
sub
add
call
mov
shlb
mov
test
pusha
xor
sub
dec
and
fistpl
out
ljmp
mov
jle
mov
push
fildll
xchg
mov
mov
jb
push
arpl
cmpsb
mov
stc
adc
sbb
gs
inc
out
test
int3
out
inc
xor
test
push
sarb
std
sbb
cmp
insl
xor
dec
jnp
jns
jo
mov
insl
mov
pop
xchg
cltd
rcrl
addl
mov
mov
pop
stos
mov
push
popa
arpl
xor
cmpb
repz
pusha
xor
sub
push
xlat
push
xor
cmc
jge
loop
icebp
mov
sbb
mov
call
mov
mov
mov
dec
jge
sbb
mov
pop
jmp
scas
cmove
or
je
cmpsb
or
in
stos
push
push
test
pop
lret
pop
repz
out
cmp
in
dec
bound
xchg
adc
lock
cld
cmp
xchg
mov
push
sbb
push
adc
and
mov
mov
cmc
dec
rcl
loop
cltd
scas
mov
push
cld
jge
lds
movsb
pop
push
mov
jo
stc
shlb
sub
out
xchg
mov
js
xor
jl
add
rolb
fidivrs
imul
je
icebp
pop
lcall
addr16
lock
adc
movsl
outsl
js
mov
cmp
jne
and
dec
add
rolb
into
frndint
cmp
fucomip
mov
iret
xchg
fnclex
ret
jne
add
fwait
lock
jp
dec
sub
iret
cmp
xchg
mov
pop
add
data16
mov
mov
cmp
bound
dec
push
in
fwait
ja
adc
imul
pushf
pusha
jg
inc
xor
xchg
adc
sbb
or
cmpsb
sbb
test
jnp
lea
xchg
cs
flds
push
xchg
ficoml
nop
lods
push
les
add
and
fnstenv
into
sbb
in
sub
nop
andl
add
jl
ret
lods
add
push
xchg
pop
jl
adc
fwait
inc
push
pop
lcall
mov
sub
sbb
or
test
and
and
hlt
stc
arpl
out
icebp
dec
es
mov
jecxz
inc
aam
sbb
aas
loope
stc
outsl
dec
sbb
test
sti
insb
clc
push
shlb
out
fcoms
in
cmp
fildll
sub
add
mov
xchg
ret
mov
xor
xchg
gs
lods
repnz
mov
hlt
aaa
dec
xchg
enter
jg
aaa
idivl
jmp
mov
add
mov
add
xor
or
cmp
add
mov
repz
out
hlt
mov
cmp
popa
dec
mov
lds
out
aas
sub
and
in
and
cmc
sbb
bound
adc
fcompl
test
icebp
sub
jg
in
loopne
shr
test
out
or
in
pop
loope
sub
jae
pusha
or
out
mov
mov
pusha
pop
cmp
and
or
and
and
rcll
mov
pmullw
mov
lret
sbb
push
dec
pop
mov
mov
into
xchg
mov
negl
adc
js
add
test
sub
sub
or
xchg
jne
cmpsb
pop
sbb
adcl
sbb
xor
mov
mov
aas
ficoml
push
int3
cmp
sub
cltd
adc
pop
mov
pop
lahf
out
rcrb
fcompl
sub
dec
xor
pop
clc
jmp
mov
fadd
fstpt
push
scas
subb
push
mov
sub
mov
cmp
fs
test
xchg
les
rcll
cmpb
test
data16
xor
dec
xor
or
jmp
push
lea
sbb
sub
jb
faddl
in
dec
fsts
xchg
mov
in
loope
fwait
sahf
aad
aaa
cli
sbb
and
ljmp
push
outsb
in
ja
sbb
idivl
call
imul
data16
sti
push
ficoms
fildl
xchg
cmpsl
in
stos
jecxz
cmp
or
lock
sbb
add
inc
fists
add
push
adc
dec
mov
lea
fstpt
and
jmp
push
ret
xor
sbb
testb
cli
and
push
mov
inc
hlt
mov
jl
xchg
inc
sbb
or
subb
sbb
dec
inc
mov
xchg
mov
test
xchg
mov
insb
dec
cs
mov
xor
push
sbb
sub
xchg
in
cmp
sub
mov
ljmp
push
in
subl
and
mov
aad
ljmp
adc
adcl
cmp
mov
push
test
mov
cwtl
test
adc
inc
mov
push
sub
mov
incl
pop
sarb
cmp
test
xchg
xchg
addr16
test
sub
loop
stos
scas
mov
lods
adc
gs
cmpsb
mov
loop
mov
xchg
inc
mov
jp
and
cmp
cmp
test
inc
and
mov
cmp
dec
cmp
movsl
sbb
inc
rcrb
pop
xor
incw
ror
push
lea
sub
cmp
sti
mov
and
push
pushl
rclb
jg
dec
cmp
adc
xor
adc
inc
leave
jbe
js
mov
out
xchg
push
fidivs
ljmp
out
fwait
jno
nop
movsl
outsb
shrb
lret
fisttps
dec
das
subl
or
jo
mov
je
fisubrl
mov
imul
mov
mov
push
lods
scas
jl
popa
hlt
pop
xchg
push
xor
pop
rolb
std
jl
jae
dec
repnz
cmp
xchg
shrb
dec
out
inc
inc
mov
xor
xchg
or
xchg
xchg
fistpll
jno
repz
pop
dec
cmp
aas
jmp
push
movsb
add
xchg
xchg
in
xchg
cmp
aad
adc
icebp
test
clc
push
aas
mov
test
into
rol
fwait
or
jns
pop
mov
dec
or
repz
dec
pop
pop
rclb
xchg
push
mov
mov
repz
add
xchg
push
cmp
je
into
dec
aam
sbb
out
pop
int3
pop
mov
mov
out
repnz
mov
pop
test
cmc
out
xor
shrb
andl
mov
xchg
out
sbb
cs
mov
jge
pop
in
int3
dec
iret
addr16
add
sbb
push
or
es
add
mov
arpl
sub
inc
xchg
dec
insl
dec
js
mov
mov
xchg
stos
inc
unpckhps
dec
cmpsl
popa
fsubr
xchg
dec
xorb
fistpl
arpl
pop
mov
in
andb
jbe
mov
enter
ja
xor
mov
or
or
js
ljmp
nop
xchg
xchg
popf
mov
pop
imul
push
scas
dec
sbb
xor
int3
dec
mov
cwtl
je
xor
cmpsl
out
mov
outsb
fcomip
lret
push
lock
xor
cld
xor
in
adc
xchg
cmp
out
aad
and
pusha
subl
loopne
addb
and
mov
idivl
dec
test
add
scas
or
stos
cmc
jns
jmp
mov
in
lock
xor
mov
xchg
dec
lods
or
mov
sbb
dec
cmp
ret
inc
xlat
add
adc
dec
xorb
notl
xchg
sub
movsl
xchg
dec
enter
xchg
cmp
xchg
jnp
decl
rcll
lahf
xor
loopne
orl
addb
inc
daa
and
sahf
add
ja
in
and
imul
mov
pop
jecxz
rcrb
or
shlb
jnp
xchg
inc
pop
aas
xchg
arpl
pusha
daa
dec
movsl
xchg
incb
cltd
cmp
sarb
pushf
mov
ljmp
mov
jno
jns
out
insb
call
dec
cmp
sub
mov
cmp
mov
imul
jl
loopne
jns
cmp
mov
pop
out
cwtl
rcll
bound
jne
pop
notl
push
dec
jg
xor
add
scas
les
in
out
sbb
add
add
aam
out
popa
cmp
leave
sub
bound
pop
sbb
test
int3
xchg
dec
jo
pop
xchg
push
loopne
dec
and
test
sub
mov
lret
adc
ss
dec
add
pusha
out
cmp
jp
push
and
pop
adc
rcrb
cld
test
mov
pop
bound
stc
stos
lea
add
sub
jp
push
mov
test
out
adc
dec
daa
lahf
into
mov
xchg
mov
mov
lea
dec
cmp
pop
test
inc
addr16
pop
arpl
dec
sub
mov
pusha
mov
jae
idivb
adc
rcr
push
and
fdiv
and
sarl
out
lock
dec
sbb
xor
sub
pop
lock
stc
popf
fdiv
negl
shlb
xchg
aaa
xchg
dec
out
shrl
pop
mov
mov
inc
dec
pop
mov
ja
enter
mov
push
inc
jns
cmp
test
cmc
gs
jmp
mov
in
jb
cmp
add
mov
shrl
xchg
sbb
ja
in
leave
mov
sub
out
xchg
stos
icebp
sbb
out
aam
push
jmp
cmp
test
scas
pop
push
xchg
fnstsw
or
hlt
or
inc
mov
test
dec
or
cmp
fiadds
xorb
xorl
rclb
stc
xor
gs
sub
mov
adc
and
push
imul
test
ds
sahf
loopnew
mov
add
push
int3
jnp
scas
push
inc
pop
add
pop
push
push
rcl
fcomi
test
ljmp
test
pop
sub
ss
mov
fildl
fs
mov
in
fsubr
lcall
clc
mov
add
ja
pop
adc
xchg
xchg
jp
adc
shl
test
mov
pop
fdivl
jmp
mov
imull
and
mov
cmc
or
cmpsb
loope
xchg
jae
jle
popf
outsl
fdivr
cmp
daa
adc
mov
clc
cwtl
scas
movsl
es
das
leave
jns
push
icebp
cmp
mov
and
dec
pop
mov
aad
add
icebp
or
es
cmp
and
xchg
sub
ja
xchg
rorb
es
sbb
add
lods
mov
repnz
and
sub
mov
sbb
inc
sub
ljmp
mov
repnz
adc
sarb
test
sbb
push
adc
ror
or
jl
dec
mov
cmp
lods
ss
pusha
hlt
ret
addr16
push
adc
jle
xchg
cmp
insb
cmp
push
and
nop
sub
mov
ja
notl
bnd
ret
fldl
pop
and
xchg
add
aas
push
out
mov
add
xor
xchg
mov
pop
fldt
cld
and
inc
fwait
pop
or
mov
fstl
jl
mov
sbb
negb
push
shrb
xchg
bound
mov
sahf
mov
xchg
inc
and
xor
adcb
mov
cmp
sahf
lock
mov
fwait
mov
sbb
cmpsb
mov
jnp
test
ret
cmp
xor
dec
add
cld
push
inc
add
and
push
not
xchg
mov
mov
push
add
sahf
push
mov
fdivrl
bound
faddl
testl
inc
inc
xchg
mov
add
cmpsb
jle
cmp
jmp
testb
or
or
lods
pop
dec
mov
cli
add
sub
xchg
mov
lods
popf
es
lods
pop
test
ret
inc
sub
out
out
aad
repz
ja
loope
pushf
out
dec
aam
ret
rorb
sbb
cld
icebp
inc
es
fdivrl
push
mov
mov
or
notl
popa
add
mov
nop
add
or
frstpm(287
cmp
jecxz
push
cmp
popa
sti
pop
pop
xor
aaa
ds
cmpsb
pop
rcr
mov
faddl
insl
xchg
jle
or
imul
mov
sbbl
inc
mov
mov
shr
and
adc
data16
adc
add
test
out
and
jl
sarb
int3
outsb
jae
shlb
lahf
orb
mov
inc
out
inc
loope
inc
sti
pop
xchg
cmpsb
sub
popa
sarl
call
xchg
js
jl
mov
jae
and
or
dec
bound
add
adc
loop
ss
dec
inc
mov
js
lahf
fwait
decl
xchg
scas
cmpb
dec
gs
lods
sbb
loop
cmp
sbb
mov
and
popa
mov
mov
cmp
mov
cmc
xor
inc
pop
pop
xchg
push
idivb
adc
jb
push
xchg
adc
and
pop
aaa
sub
out
mov
arpl
push
popa
scas
inc
in
sbb
je
jge
push
xchg
sbb
and
test
mov
xchg
xchg
out
and
mov
das
xlat
jb
call
test
mov
das
push
addl
and
iret
cmc
xchg
inc
test
cld
cmp
ljmp
xorb
pop
pop
inc
popf
and
sub
dec
ja
adc
pop
es
pop
clc
push
xor
clc
loope
es
test
sti
xchg
push
aaa
cmp
rcl
sbb
add
cmpsl
cmc
pop
test
pop
sub
adc
cmp
mov
fidivs
jne
fwait
out
add
fwait
and
jp
mov
ret
mov
push
mov
mov
cli
mov
aas
sbb
repnz
xor
inc
test
out
inc
in
mov
cmp
cwtl
pusha
cmp
bound
pusha
sbb
xor
sbb
addr16
imul
mov
mov
shlb
aaa
push
add
test
test
sarb
subl
sbb
pop
ss
rolb
mov
xchg
mov
out
shl
cmpsb
ja
std
addr16
addr16
mov
xlat
inc
pop
push
inc
int
inc
xchg
xorl
pushf
fwait
and
pop
mov
aam
push
cmp
repz
mov
mov
std
mov
shl
lahf
sti
dec
inc
pusha
rol
fadd
imul
fsts
push
or
sahf
sbb
ja
inc
aas
js
mov
push
push
arpl
mov
mov
or
test
repnz
pusha
and
mov
jecxz
cmpsb
rorl
enter
cltd
btc
cmpsb
inc
repz
aam
push
nop
add
push
mov
xor
fimuls
push
pushf
imul
add
cmp
aas
das
ret
and
cmp
mov
lahf
ror
sbb
test
dec
jo
pop
pop
mov
cmp
leave
inc
aad
out
stc
pop
fbld
es
xor
roll
and
loopne
sbb
mov
sub
xlat
lret
cmpsl
rcrl
xchg
xor
es
and
inc
test
shlb
imull
in
popa
inc
test
fisubs
cmp
push
pop
xchg
movsl
cmc
lea
loope
lock
rclb
or
dec
or
negl
jmp
xchg
fsubl
aam
pop
shl
cwtl
mov
mov
mov
push
test
pop
mov
and
sbb
jne
ror
shll
imul
popf
pusha
dec
cmp
xor
add
mov
xor
sub
or
sub
sbb
stc
shlb
sub
out
cmp
sbb
cmp
xor
xchg
xchg
mov
sti
fs
cmp
nop
pop
mov
rorb
scas
addl
add
outsl
push
jbe
fiadds
xorb
adc
pop
inc
cmp
jp
movsl
dec
out
cmp
movhps
dec
test
inc
pop
xchg
dec
and
fstpl
push
outsb
movsl
rclb
int3
ljmp
xchg
out
xchg
mov
xchg
out
xchg
mov
int3
inc
mov
dec
loop
movntq
mov
add
cli
loop
sub
repnz
movsb
cmc
xchg
pop
sub
mov
cmp
stos
dec
cs
aas
fs
orb
loopne
inc
mov
aas
sbb
int3
pop
inc
jmp
out
cwtl
stc
mov
test
adc
pop
les
adc
xor
xchg
xchg
cmp
aas
test
rolb
lahf
outsl
adc
jns
and
xchg
sbb
mov
push
jno
out
dec
push
in
leave
dec
add
cmp
xchg
jmp
cmpsl
xor
add
mov
repz
les
mov
mov
sarl
cmp
inc
or
ljmp
fdivl
push
cmp
js
mov
outsl
mov
std
pop
aam
in
pop
fs
fdiv
add
or
out
int3
and
popf
push
dec
mov
jo
pop
outsl
adc
cltd
dec
subl
vshufps
sbb
sbb
pusha
sbb
jno
xor
jge
jne
pop
fldl
mov
cmp
mov
jl
stos
add
sbb
xor
repz
pop
repz
sbb
int
mov
cmp
imul
push
test
dec
adc
mov
cmp
in
nop
and
addr16
push
pushf
in
nop
push
sbb
rsqrtps
dec
lcall
adc
sbb
jnp
mov
cmp
pop
fwait
and
jl
lea
jmp
xchg
cmp
xchg
cmp
inc
xor
mov
pop
jo
cmpsb
pop
in
out
cmpsb
rol
mov
or
aas
mov
xchg
sub
inc
lds
ja
clc
in
cmp
or
in
fsubrl
adc
jns
das
hlt
sub
sbb
inc
mov
test
and
mov
fldl
shlb
jo
xor
pusha
or
sbb
lods
mov
xor
shl
cmp
stc
daa
mov
pop
jo
jg
les
and
es
sub
fnsave
dec
shlb
dec
xor
icebp
jnp
cmp
push
xor
test
push
mov
js
sub
in
xchg
push
scas
sub
test
push
or
push
inc
aaa
pop
push
fistpll
push
fbld
rcrl
rorb
xorl
idivb
cmp
insb
mov
sarb
in
sub
addl
mov
aas
pop
outsb
ss
add
jb
pop
fsubl
lock
push
xchg
es
push
dec
xor
jae
jne
loopne
data16
jmp
sbb
push
inc
lds
andb
mov
std
pop
jg
notl
jecxz
dec
xchg
clc
cmp
sbb
lock
cmp
in
ja
xchg
inc
out
cmpsb
inc
movsb
cmpsb
cmp
pushf
pop
test
ret
test
rolb
mov
add
imul
or
push
mov
daa
adc
push
arpl
lock
fsubr
xor
shrb
cltd
sbb
jmp
dec
xchg
cs
and
test
sub
jg
jnp
mov
push
cltd
out
push
mov
xor
adc
pop
mov
fcmovbe
pop
aaa
icebp
pop
jno
inc
push
out
cmpsb
sub
add
or
pop
into
jbe
mov
mov
gs
sbb
je
or
adc
cmpsb
dec
jmp
xchg
fstpt
test
pushf
adc
xchg
dec
sahf
jo
add
pop
mov
out
scas
jae
sbb
adc
repnz
jns
or
push
xor
ret
pop
loope
sbb
mov
mov
add
divb
imul
lods
xchg
jnp
cmpsl
sar
bound
cmp
scas
mov
xchg
scas
es
sbb
pop
jle
dec
lret
mov
fs
inc
add
xchg
mov
and
test
ljmp
and
jb
sub
push
dec
mov
clc
adc
sarb
addr16
adc
arpl
cld
dec
adc
rcr
lea
rcl
jg
xchg
mov
xchg
pop
mov
fs
shll
push
adc
mov
out
test
cmp
fcompl
scas
cwtl
cmp
sub
enter
push
ja
fsub
sub
jb
inc
sbb
push
mov
mov
in
xlat
pop
cmp
mov
testl
in
loope
js
adc
xchg
mov
in
mov
dec
outsl
jbe
js
pusha
jmp
xchg
lret
ja
xchg
imul
cmp
mov
out
pop
cltd
std
nop
push
fsincos
sbb
xor
pop
push
xchg
xchg
in
pop
repz
sahf
push
loop
insb
or
rol
mov
xchg
aaa
add
dec
pop
xchg
ja
adcb
nop/reserved
gs
daa
loopne
aam
jns
or
lds
xchg
xor
push
insl
in
out
jecxz
out
ja
enter
dec
std
mov
int3
mov
cmp
lret
adc
in
jb
aaa
and
push
pop
mov
aad
scas
pop
movsl
iret
aad
faddl
sub
test
cmpsl
and
jle
add
out
dec
xchg
std
pop
push
cmp
test
sbbl
jl
add
sti
sub
int
push
cld
ficoms
inc
outsl
fnstsw
stc
sub
lods
outsb
fwait
adc
jle
test
pop
mov
jl
mov
push
out
in
xchg
jae
xor
or
mov
ss
mov
leave
xchg
ret
inc
clc
push
ret
mov
inc
in
cld
push
push
out
insl
xor
jge
sti
dec
addl
pushf
dec
aam
cmp
sbb
arpl
mov
xor
lcall
nop
cmp
lret
sub
sub
out
mov
call
fnstenv
insl
into
jl
mov
dec
xlat
sahf
inc
mov
fld
jg
mov
adc
cmp
loope
ljmp
out
gs
inc
int3
std
mov
orl
sub
xor
mov
xchg
dec
out
xchg
cld
add
mov
movsb
orl
arpl
sbb
test
mov
movsl
movsb
dec
test
rclb
out
fdivrl
sbb
add
or
rcrb
xor
inc
clc
ja
clc
and
fimull
pop
ljmp
adc
dec
push
pop
xchg
lret
orb
or
ret
sub
mov
push
add
rorl
add
push
sbb
jle
mov
and
xor
xor
ljmp
jge
add
mov
cmp
fs
xchg
negb
inc
pop
mov
fdivl
dec
xchg
les
xor
lods
sbb
mov
mov
test
jge
fimull
jno
adcl
in
mov
ret
cltd
push
lcall
movsb
rol
jmp
fs
ss
mov
je
je
sub
mov
test
cmp
jno
jbe
clc
mov
xor
out
xor
data16
mov
jnp
jmp
cmp
sti
sub
sbb
xchg
ja
jae
or
mov
pop
rclb
push
stos
push
and
out
inc
pop
mov
jle
sti
xchg
dec
movsl
test
scas
stc
xchg
jle
add
cmp
stc
repz
inc
mov
mov
or
std
dec
push
cmc
push
mov
outsb
dec
gs
add
cmpl
push
sti
pop
pop
leave
outsb
jae
insl
xchg
jnp
fisubrl
dec
repz
sahf
test
pusha
inc
mov
sbb
or
or
ljmp
pusha
sbb
es
mov
sbb
sbb
jnp
mov
add
out
fcoml
sub
popf
sbb
lock
xor
mov
int
add
mov
cmp
addr16
and
repz
or
jl
shl
dec
inc
push
xor
or
xchg
pop
fisubrl
xlat
rolb
sbb
data16
add
aas
pop
rolb
scas
or
adc
sbb
aaa
sub
icebp
insb
sbb
orb
or
jo
adc
int3
cli
mov
adc
mov
icebp
pop
dec
dec
sbb
nop
push
popa
dec
or
push
decl
xchg
test
mov
stos
arpl
push
jg
sub
insl
add
test
test
out
lret
iret
js
and
jo
out
stos
imul
int3
or
popf
dec
popw
fildl
in
jge
cmp
dec
fcomps
mov
loop
xchg
push
icebp
add
test
xchg
mov
add
js
pusha
dec
dec
mov
out
ret
in
fdivrl
mov
adc
and
aaa
out
xor
mov
sbb
ja
vpaddd
aas
and
loope
add
shl
clc
mov
jl
sbb
cmp
push
sub
add
jmp
andl
jge
out
add
cmp
aaa
clc
sarb
push
mov
mov
jne
shl
pop
mov
in
popa
inc
push
cmp
rclb
enter
cmpsl
nop
loope
lods
xchg
lock
sar
rorl
mov
mov
xchg
repnz
jns
mov
mov
mov
das
sbb
and
xchg
add
push
xchg
data16
pop
mov
push
pop
fcmovb
mov
push
inc
sbb
aas
sbb
add
bound
jmp
in
xor
dec
lock
arpl
mov
and
pop
dec
cltd
xor
stc
js
jae
mov
insb
add
sarl
inc
push
dec
adc
stc
push
push
out
xchg
dec
mov
jno
into
mov
andl
dec
sub
mov
or
pop
dec
mov
pop
aam
jmp
insb
test
pop
add
pusha
in
es
lcall
fnstenv
cld
pushf
loop
cmp
inc
xor
adcl
rcl
flds
cmpsb
test
or
cmpsl
mov
cmpsb
add
sub
xchg
and
or
pusha
push
pop
cld
test
adc
aaa
out
mov
stos
xchg
xor
fwait
xor
icebp
xchg
int3
pusha
sbb
and
inc
test
gs
negl
fnstcw
js
lahf
iret
sbb
cmovl
sbb
inc
cmp
add
push
repz
add
mov
push
test
sbb
popa
add
cltd
in
adc
pop
cmpsb
xor
mov
arpl
and
mov
fwait
shlb
test
dec
test
mov
xchg
add
pushf
and
loope
outsb
shl
xchg
xchg
pop
sbb
aam
jge
inc
cmp
adc
ret
lahf
cmpsl
xor
stos
or
and
popf
adc
cs
repnz
xor
movb
xchg
and
adc
subl
icebp
fdiv
ret
cli
dec
dec
test
out
dec
xor
and
sbb
sahf
inc
pop
mov
inc
adc
aam
lods
sbb
jo
ja
je
adc
dec
mov
mov
pushf
push
xchg
dec
clc
xchg
inc
stos
sub
je
xchg
push
outsl
or
jb
xor
ret
roll
das
lahf
jns
pop
push
sbb
push
mov
mov
daa
jmp
loop
xchg
sub
fwait
lea
xchg
gs
bound
std
jg
push
mov
lea
push
repnz
scas
xchg
mov
mov
sbb
mov
sbb
mov
je
xchg
imul
cmpsl
jle
and
mov
lret
orl
out
cmp
js
sbb
in
movsl
adc
xor
test
pop
daa
loopne
je
fs
adc
bnd
outsl
js
enter
xor
and
addr16
push
xor
loopne
lahf
jl
cmp
gs
pop
sbb
rcrl
leave
inc
insl
sub
xchg
insl
adc
xor
sbb
test
push
lret
xchg
subb
inc
div
mov
adc
add
add
sbb
jg
mov
in
cmp
jno
jnp
lahf
and
xchg
popf
nop
mov
mov
push
pop
push
mov
pop
jl
cmp
push
lods
nop
xchg
push
pop
mov
lret
sbb
mov
sbb
or
pop
popf
sbb
addr16
scas
and
mov
jmp
repz
dec
addl
sarl
hlt
ret
mov
xchg
adc
push
jae
adc
mov
into
sbb
inc
ret
orb
or
xchg
test
mov
outsl
dec
jno
ss
shl
ffree
mov
out
fisttpl
push
inc
cmc
xor
push
jmp
xchg
bound
bound
jno
ds
aas
out
sbb
dec
repz
fs
mov
mov
shlb
adcb
outsb
xchg
in
mov
lret
stos
push
pop
inc
hlt
and
sub
rcrb
mov
lret
aad
aaa
stc
adc
inc
sub
jg
and
and
jge
leave
fs
add
push
mov
adc
mov
fsts
xchg
sub
loope
cld
lock
sbb
inc
sbb
aam
mov
mov
in
dec
xchg
cmp
icebp
push
arpl
cli
jae
push
out
jl
jge,pn
jns
loop
sahf
cmp
mov
jmp
mov
mov
add
sub
gs
sbb
movsb
push
jmp
dec
pop
lahf
lcall
rorl
cmp
ficomps
test
subl
rcrl
scas
movsl
mov
xchg
imul
pop
ljmp
ljmp
xchg
pop
mov
mov
inc
inc
icebp
sbb
in
arpl
in
dec
jmp
push
cwtl
cli
int3
or
adc
jns
daa
outsb
mov
push
int
push
inc
and
ret
jle
inc
xchg
jp
xchg
cmpl
fcos
sbb
mov
push
xchg
mov
insl
push
out
ds
xor
push
mov
mov
and
jo
dec
xchg
mov
sbb
xchg
inc
scas
jno
sbb
xor
mov
dec
test
sub
pop
popa
xchg
gs
int
cmp
dec
sbb
ret
xchg
enter
xchg
xlat
inc
mov
xchg
aad
push
lcall
jl
mov
mov
inc
sbb
loope
out
outsb
in
mov
jecxz
les
or
push
push
in
cmpb
pop
xlat
sbb
dec
add
loop
dec
xadd
jmp
cli
outsb
mov
pop
mov
mov
repnz
xchg
mov
cmp
mov
dec
fcoml
add
jns
loop
sti
sub
cmp
xchg
xchg
aas
or
or
jbe
sub
jg
ficoms
arpl
out
aaa
pusha
add
data16
mov
pop
mov
test
decb
adc
outsb
loope
scas
out
cld
xchg
aam
sbb
cmpsb
movsb
lock
das
shll
sbb
mov
sub
xchg
add
test
cmp
in
cmp
xchg
scas
fsubr
push
push
jnp
sbb
dec
push
pop
es
xchg
fwait
sub
rolb
bound
aaa
xchg
push
push
xchg
jge
es
fnstcw
xlat
and
cmp
xor
imul
xchg
dec
adc
call
out
sub
fisttps
lods
sub
cmp
dec
imul
sbb
out
cmp
xchg
scas
sub
test
pop
mov
in
mov
jmp
bound
addr16
xchg
cmp
adc
adc
xor
lret
les
sub
jbe
mov
xchg
and
inc
xor
push
sbb
jbe
dec
lret
sarl
bound
dec
or
cmpsl
pop
sbb
js
xchg
test
leave
dec
jns
cli
xor
mov
sub
add
scas
push
pop
imul
cmp
js
ss
jg
pop
loop
negb
rol
pushf
fisubrl
cmp
sti
add
fimuls
sub
pusha
outsb
fcoms
sbb
push
std
test
or
cmp
xorl
mov
xor
pop
jno
mov
outsl
iret
sbb
repz
loop
aaa
jb
in
leave
outsl
std
cmp
xchg
mov
shr
sub
mov
popf
push
cmc
mov
fcoml
push
cltd
add
es
pop
dec
push
cmp
push
shl
jne
dec
sahf
test
mov
push
xor
sub
dec
pop
mov
xor
cld
and
icebp
lods
mov
fs
aas
out
test
fidivrs
xchg
imul
pop
jns
js
pushf
cmp
mov
jmp
lcall
dec
loop
jp
addl
xchg
addr16
jg
out
test
dec
sub
inc
stc
int3
xor
inc
xor
int
out
mov
mov
ja
pusha
push
fldcw
xor
push
stos
cmpsb
out
jnp
xlat
xor
iret
mov
fimuls
dec
sahf
cltd
mov
out
shrl
addr16
xchg
mov
or
std
popf
fs
and
xchg
xchg
cs
int
ret
rcll
mov
sub
sbb
mov
shrl
ljmp
mov
mov
mov
int3
outsb
xchg
in
xor
sahf
mov
out
jle
adc
jp
lods
fsts
mov
shlb
adc
in
pop
nop
in
dec
or
shrl
popa
mov
cmp
jnp
xor
push
xchg
mov
lods
repz
sub
mov
cmc
test
in
pop
lahf
adc
sub
xor
cmp
subb
sbb
cwtl
test
xchg
jp
jmp
cmp
pop
jge
sbb
lcall
fwait
xchg
pop
ret
loop
dec
jno
imul
sub
arpl
push
pushf
jb
ja
dec
lock
mov
cmp
pop
enter
addb
pop
mov
lods
ret
fldcw
and
dec
inc
cmp
mov
enter
jb
xchg
sbb
xchg
orb
stc
or
xchg
or
icebp
popa
mov
test
call
jo
test
loop
loope
dec
jbe
popf
arpl
sub
jmp
mov
sub
lcall
popa
cmc
cmp
mov
fs
scas
inc
lods
xor
mov
flds
cmpsb
inc
subb
movsl
mov
idivl
hlt
insb
out
daa
push
in
fdivrs
rcl
mov
data16
sbb
pusha
cmp
or
sub
stc
inc
mov
js
subb
outsb
repz
jecxz
jbe
push
sbb
out
xor
aad
add
cmp
add
stos
cli
pop
or
mov
mul
stos
sbb
das
ret
adc
sub
sbb
scas
stos
dec
cli
jns
jge
scas
xchg
jmp
fwait
cmpsl
mov
jmp
inc
push
dec
or
out
andb
or
xchg
mov
rorb
test
popa
adc
or
ficoml
cmc
nop
ljmp
pop
je
mov
arpl
sub
ja
cwtl
shll
mov
jmp
mov
lahf
inc
inc
xchg
sar
addr16
shlb
jnp
inc
lret
sub
scas
push
push
out
aam
jmp
and
add
xchg
xor
aaa
or
push
sbb
fidivrl
int3
inc
sbb
leave
test
and
test
not
adc
or
aad
fs
ficoms
and
push
or
and
iret
cmp
or
cwtl
adc
mov
sub
sub
sub
rcrb
fsin
cs
lret
leave
fisubl
jb
jmp
or
loopne
lods
pop
lea
popa
bswap
cmp
jp
js
in
jne
pop
aaa
test
sub
cmpsb
in
test
push
test
jnp
jecxz
lcall
xchg
data16
repz
rolb
jge
sub
jp
out
mov
mov
lcall
out
inc
or
jmp
insb
cmc
xorb
add
add
or
fstps
pop
bound
cmpsb
or
inc
loopne
loop
cli
ja
loope
stos
pop
xchg
out
pop
fmul
movsl
insb
jge
pop
fidivl
pop
push
jb
test
out
fs
lock
out
xchg
or
inc
jg
push
push
push
pop
push
pusha
pop
mov
enter
mov
loop
icebp
dec
push
scas
cmp
jb
xchg
insb
mov
stos
sbb
inc
out
and
movsb
mov
ljmp
jmp
aas
jo
xchg
or
ljmp
test
cmpsl
enter
jo
and
fdivr
dec
cmpb
bound
and
movsl
int
stos
dec
xchg
mov
daa
pop
dec
test
xchg
rorb
jle
pop
pop
lcall
cmp
mov
cwtl
inc
fldl
mov
iret
addb
in
aaa
xor
mov
push
je
fiaddl
adc
out
popa
inc
or
fldl
into
cld
insb
data16
mov
je
add
aam
adc
stc
fdiv
orl
data16
sbb
lahf
loop
mov
lcall
jno
dec
lock
outsb
sahf
adc
movsl
stos
and
test
stc
cmp
pop
sub
aas
mov
and
cmp
mov
rcrb
xchg
std
xchg
mov
sbb
adc
cs
add
inc
jo
roll
call
jo
es
jmp
inc
push
cltd
mov
cmc
inc
sub
push
sub
xor
inc
outsb
bound
sbb
scas
sbb
cmp
xchg
rolb
jb
jbe
sbb
inc
cmp
in
lods
adc
shlb
cmpsl
cmpsb
or
cmp
movsb
out
sbb
lea
out
idivl
dec
daa
shlb
int3
cmpb
sahf
in
or
repz
inc
fnstenv
mov
out
or
mov
xchg
lock
jl
mov
js
adc
xchg
add
ret
pop
mov
mov
test
dec
adc
sbb
mulb
mov
jnp
shrl
pop
and
int3
aaa
sbb
or
or
mov
or
fildl
push
push
sbb
loope
loope
into
mov
push
ja
js
testb
xor
test
pop
push
and
scas
xchg
sbb
mov
sbb
xor
sbb
hlt
inc
push
mov
xor
stos
arpl
out
mov
cmpsl
imul
inc
ljmp
sbb
movsb
sub
dec
jl
mov
mov
lods
or
lock
jle
xor
push
xor
push
nop
loopne
outsb
cmp
insb
add
test
fwait
or
ds
ret
not
int3
repnz
push
in
pop
aaa
xchg
stc
push
jecxz
aad
lock
xchg
loop
ljmp
sub
pop
xor
lret
arpl
dec
fsts
mov
out
xchg
bswap
loop
pusha
and
in
jmp
out
hlt
add
mov
andb
adc
xchg
push
fwait
jnp
stos
mov
or
mov
jecxz
dec
lods
jbe
vpshaw
aam
sbb
xor
pop
cmp
hlt
out
jge
jle
pop
pop
iret
jb
pop
adc
cs
xor
test
xchg
mov
mov
and
push
fstpt
js
mov
cs
testb
stos
dec
xchg
mov
sbb
loope
std
outsb
xor
xor
add
mov
data16
pop
int3
adcl
fwait
ret
jne
sahf
pushf
push
or
daa
xor
sbb
and
sub
call
pop
out
mov
scas
add
and
sbb
shrb
fdivrl
mov
push
cmp
xchg
ds
ja
xorb
bound
daa
add
cmp
int
dec
dec
in
jle
ficompl
sbbw
push
movsl
popf
sub
xor
fdivl
pop
repz
cmp
insl
stos
inc
test
addr16
rcr
or
out
popa
mov
sbb
cmpsb
push
je
sbb
in
cmp
imul
or
insb
ja
daa
loopne
int3
xchg
pop
rorl
aaa
inc
ljmp
jnp
adc
or
js
hlt
or
enter
repnz
mov
popa
push
or
mov
in
pop
or
pop
sbb
gs
sbb
loop
pop
dec
jmp
or
or
push
aaa
mov
rcl
fistl
test
sub
pop
mov
sbb
mov
fiadds
pop
mov
dec
or
aaa
mov
shll
mov
mov
idivl
clc
faddp
cmpsb
bound
fld
fisubs
test
pop
fwait
dec
sbbb
sub
mov
add
cmp
das
mov
clc
and
fdivr
inc
insb
xchg
dec
push
imul
jmp
test
xor
or
cli
daa
and
mov
movsb
es
pop
cmp
test
inc
jecxz
es
jno
scas
add
pop
faddl
and
sbb
add
push
inc
ficomps
addr16
cmpsl
les
inc
fsub
push
fsubrs
negl
jge
pushf
jnp
mov
sbb
in
out
and
mov
fnstcw
ret
dec
pop
cmp
pop
add
inc
jmp
xor
sbb
lods
loope
cmp
mov
daa
cltd
pop
xlat
mov
mov
test
inc
cmp
push
es
cmp
mov
cmc
notb
inc
mov
mov
repnz
xor
or
bound
push
pop
stos
inc
mov
xor
dec
std
inc
push
sbb
clc
dec
push
dec
dec
mov
loop
adc
xor
pop
mov
mov
lock
cmp
xchg
adc
addl
pop
push
fwait
or
leave
cli
movsl
xor
es
inc
push
or
mov
stc
xor
repnz
xor
out
pusha
testb
imull
and
cwtl
adc
sub
andl
comiss
dec
cmp
test
test
xchg
xchg
movsb
mov
dec
test
add
xchg
or
mov
jnp
sub
add
xlat
sub
sub
cmp
mov
push
cmpl
or
and
rclb
push
test
mov
xor
sub
push
inc
gs
insb
sbb
pop
mov
xor
je
jge
pop
cmp
lock
repnz
xor
shlb
pop
lcall
inc
xchg
cltd
adcb
inc
mov
adc
inc
jmp
xchg
stc
mov
fdivrl
dec
push
aam
mov
bound
mov
or
shll
or
adc
cmp
rorb
dec
imul
fmuls
dec
push
jl
aas
clc
iret
js
push
mov
and
cmp
jl
pop
sbb
scas
inc
fistl
mov
out
dec
les
sub
mov
out
xor
add
aaa
ret
cmpsb
out
fadds
sub
xor
in
test
or
xchg
xchg
in
mov
popa
in
push
leave
out
movsl
xchg
dec
cmpsl
push
jmp
add
mov
ds
dec
in
sbb
xlat
sbb
lds
lcall
jg
or
adcl
dec
and
inc
les
aas
scas
mov
call
sbb
mov
fmuls
inc
xchg
adcl
and
or
int
mov
sbb
jmp
ret
pop
mov
push
popf
and
jo
or
cmp
stc
inc
fldt
jae
sub
push
lahf
into
cmp
into
jl
or
xor
sbb
popa
stc
xchg
pop
pop
syscall
mov
xchg
adc
out
sub
cmp
sbb
pop
jg
das
cwtl
cld
adc
jge
xor
mov
fcmovb
sahf
out
jns
add
inc
cmp
mov
push
xchg
test
mov
arpl
insb
into
or
sub
sbb
mov
lods
xchg
inc
add
and
add
xchg
jge
repnz
aam
aad
dec
xchg
out
lock
cmp
mov
scas
jmp
mov
push
inc
cmp
test
jb
bound
cmp
pop
cmp
sbb
jl
sub
inc
lods
pop
sbb
and
cmp
lea
inc
mov
push
or
sub
popf
ret
sahf
pop
repnz
mov
dec
fists
mov
je
add
push
dec
jmp
popa
test
jl
rorb
mov
xchg
inc
fld
lds
xor
out
lods
cmp
dec
cmp
std
jb
xchg
add
push
jbe
mov
sbb
ret
inc
adc
cmp
ljmp
add
rorl
jmp
shl
jnp
mov
mov
xchg
add
cmp
and
push
lcall
lods
mov
pop
xor
or
pop
push
arpl
notl
pop
adc
dec
inc
test
push
push
mov
xor
test
fcompl
adc
loope
xchg
xchg
pop
mov
ja
shr
dec
jo
inc
loop
xchg
lahf
dec
jae
sbb
int3
jle
adc
xchg
add
cmp
idivl
dec
imul
and
mov
out
lods
inc
cld
xor
xchg
sub
ljmp
and
xor
cmp
fcomip
fldcw
dec
inc
mov
ret
and
push
pop
clc
xchg
xor
xlat
sbb
lcall
repnz
mov
sbb
arpl
jge
or
adc
imul
fwait
or
push
outsl
push
repnz
loop
sub
and
pop
movl
push
add
cmp
mov
jl
mov
xchg
lcall
inc
jmp
test
and
xchg
cmp
aaa
fidivrs
test
pusha
insl
pop
sub
add
mov
xchg
sbb
daa
call
mov
dec
insb
psubb
cmp
mov
stos
fstp
dec
or
mov
stos
fmull
jl
lahf
sahf
ret
aaa
test
adc
inc
sbb
test
sbb
fucomi
cmp
hlt
dec
pusha
imul
inc
addr16
sbb
scas
xchg
insb
pop
and
mov
es
in
dec
push
xchg
dec
stos
shll
popa
push
fwait
add
mov
jecxz
imul
test
cli
cmp
mov
imul
jmp
sti
xor
sbb
lcall
shlb
loopne
iret
xor
test
and
inc
mov
and
lcall
data16
push
or
lods
cltd
dec
call
inc
call
xorb
sti
repnz
arpl
jp
pop
cmp
idivb
mov
repnz
adc
push
push
scas
cmp
push
inc
aad
repz
iret
dec
mov
fisubl
outsb
pusha
sub
insb
sbb
jp
inc
icebp
fistpll
sarb
addr16
sub
or
popf
lds
neg
in
rcrb
lods
xchg
stc
mov
add
ja
roll
lahf
adcb
shlb
cmp
jmp
rcrl
pop
cltd
sub
push
fildl
testl
icebp
xchg
rolb
inc
sarb
sub
and
lock
movsl
out
test
je
dec
cmc
aam
mov
sbb
inc
and
cmp
orl
inc
dec
xchg
cltd
ds
adc
mov
mov
lahf
adcb
int3
ja
pop
xchg
sub
xor
dec
mov
cmp
sahf
xorb
mov
add
add
hlt
in
int
pop
xchg
mov
xor
fdivrp
int3
mov
jecxz
sub
cmp
loop
adc
pop
dec
adc
cmp
or
fldcw
out
or
pop
scas
loop
adc
ja
adc
js
pop
movsl
push
mov
inc
pop
jno
iret
outsl
fwait
xchg
lahf
or
sub
icebp
sub
gs
stc
cmp
out
xor
popa
sbb
outsl
test
bound
data16
sbb
leave
inc
imul
incl
out
fstpt
lock
pop
lods
bound
xchg
sbb
ror
cmp
mov
jp
xchg
out
orb
xchg
in
jge
mov
sbb
outsl
fwait
cli
fcomps
or
divl
jnp
xor
push
gs
inc
orl
cli
aaa
clc
xchg
fisttps
idiv
jg
xchg
inc
andb
jp
mov
inc
xlat
jnp
mov
mov
xchg
addl
sbb
bound
pop
jecxz
xlat
imul
xchg
cmp
mov
add
std
mov
adc
in
fstl
mov
and
xchg
cs
xchg
stos
xlat
sbb
add
iret
jns
mov
mov
mov
test
icebp
insb
mov
xchg
pop
inc
pop
lds
sbb
int3
notl
xor
pop
dec
xor
flds
inc
mov
jno
push
mov
adc
xor
pushf
ja
xorb
icebp
jno
push
adc
dec
bt
inc
cmp
push
cmp
filds
sub
nop
push
sub
push
cltd
scas
aaa
cli
mov
mov
sub
loope
sub
inc
mov
lret
adc
mov
insb
fdivs
lods
xchg
mov
ljmp
ljmp
push
cltd
push
xchg
mov
pop
pop
test
sbb
sub
out
outsl
or
incb
ljmp
frstor
decl
jb
fdivrs
lahf
pop
int
outsl
xchg
aas
jnp
or
mov
iret
loop
dec
mov
popa
sarl
hlt
inc
das
adcb
outsb
xchg
dec
adc
data16
or
mov
shlb
test
pop
dec
cli
ljmp
fs
dec
jnp
and
jnp
popf
movb
shl
mov
jns
sub
push
mov
push
push
mov
int3
dec
cmp
cmp
dec
insl
pop
mov
pop
jecxz
stc
jg
mov
xor
push
jp
arpl
mov
je
mov
fiadds
mov
aaa
pop
js
call
out
inc
sub
inc
stos
clc
orb
mov
push
and
vsqrtps
xor
add
out
mov
pop
je
js
rorb
stos
or
outsl
fdivrs
test
daa
dec
es
push
fnstcw
repnz
and
cmp
sbb
push
add
push
mov
mov
imul
ljmp
inc
mov
arpl
fsts
ret
shlb
pop
mov
out
fwait
inc
xchg
pop
dec
fnstenv
stc
cmc
lahf
movzwl
gs
cmp
shll
jbe
jmp
icebp
shl
or
test
data16
mov
or
jmp
sahf
cwtl
pushf
cli
and
imul
ja
subb
xlat
negb
lcall
xchg
in
pop
aas
adc
dec
fldt
cmp
iret
push
clc
or
mov
inc
or
mov
adc
xchg
sub
adc
sub
add
xchg
movl
fmuls
fsubl
sbbl
lahf
xchg
add
mov
ds
les
mov
fidivl
sbb
xchg
ljmp
pop
cs
push
pop
shll
fidivrl
mov
call
xor
stos
mov
flds
addr16
pop
std
pop
pop
or
ds
test
sbb
popa
outsl
push
ljmp
lds
dec
imulb
cmp
mov
lcall
adc
jg
not
push
mov
push
rcll
mov
or
inc
popa
and
outsb
mov
sub
push
jl
dec
pusha
cmpb
and
test
add
xchg
test
dec
pop
sub
jge
aad
mov
loop
or
inc
push
leave
test
jl
cmp
push
das
push
inc
dec
jmp
or
push
ffreep
aaa
push
roll
adc
movsb
movsb
xchg
dec
cmp
shrb
arpl
mov
xor
xor
shll
lret
aad
sarb
or
loope
cltd
stc
sbb
dec
xor
xchg
push
mov
xor
sahf
push
sahf
insb
stos
xchg
fsubl
aas
test
insl
fcmovnbe
fs
push
dec
sub
incl
jmp
fsubrl
mov
popf
insb
push
push
add
adc
push
in
rorb
dec
xchg
dec
test
push
add
jmp
inc
insl
push
pop
idivl
dec
adc
shlb
pusha
out
cmp
xchg
test
push
in
sahf
leave
mov
mov
test
xchg
cmp
ret
or
ds
test
mov
mov
xchg
inc
js
mov
shlb
push
adc
js
sbb
mov
aam
std
daa
push
dec
mov
mov
or
test
pop
pop
fcmovnbe
sarl
mov
test
sbb
addr16
sub
mov
imul
mov
mov
cltd
or
in
push
pusha
push
cltd
popa
lods
inc
xchg
cltd
add
add
fsubl
stc
jg
inc
decl
inc
push
mov
mov
ret
dec
push
xor
movsl
rolb
lea
fwait
or
dec
push
cmc
push
mov
leave
sahf
xchg
les
gs
les
pusha
fistps
mov
xchg
add
mov
scas
dec
xor
jg
aas
push
mov
mov
mov
and
lods
out
push
xchg
insb
inc
aas
outsb
jae
cltd
mov
sub
cmp
or
movsb
jp
and
cpuid
leave
iret
xchg
pop
mov
pop
add
pop
enter
mov
pusha
daa
sbb
lods
pop
pop
or
or
lcall
add
loopne
push
add
adc
sub
xchg
addr16
mov
or
popf
shlb
test
push
xchg
inc
mov
add
out
aas
les
fldt
gs
fsubrl
icebp
bound
mov
dec
stc
popa
adc
jnp
repz
mov
sub
add
scas
shrb
movhps
stc
call
int
cmp
mov
fsubl
or
pop
cmp
xor
xchg
jle
push
out
dec
fsubrl
leave
lahf
push
call
fsts
and
ja
popa
pop
pushf
ret
int3
push
mov
cmp
or
mov
imul
movsl
xor
cmp
jp
popa
cld
add
or
mov
mov
lea
pusha
jo
sub
shll
xchg
aas
push
mov
out
clc
mov
xchg
add
outsl
add
ljmp
cmp
xchg
leave
mov
int3
adc
mov
ja
cmpsb
jno
cs
mov
inc
pushf
pop
out
add
dec
add
js,pt
loope
cmp
andl
jnp
xor
dec
cmp
orb
test
cld
cmp
pop
repnz
mov
popf
ds
jne
jecxz
out
pushf
int3
push
add
dec
dec
js
add
lcall
add
push
popf
sahf
aam
cmp
lods
xchg
lret
pop
mov
rclb
jae
pop
mov
cld
sbb
add
test
pop
mov
mov
daa
xchg
mov
ret
sarl
jg
insb
pushf
pop
gs
jecxz
cmp
aas
push
adc
data16
mov
add
cmp
mov
dec
int3
push
jle
add
icebp
pusha
jmp
sub
inc
sub
repnz
sub
xchg
aaa
inc
fistpll
sbb
test
cmp
and
cltd
popf
sbb
mov
push
push
loope
sbb
push
into
cmp
jl
pop
cmp
test
add
out
movsb
nop
xchg
add
push
fdiv
fwait
or
jb
mov
test
fcoml
xor
dec
enter
sub
push
pop
pop
pop
movsb
out
jns
or
daa
sbb
test
sub
mov
add
jp
das
test
xchg
cs
popf
aaa
mov
adc
jne
sbb
int3
pop
dec
fildl
loop
xchg
mov
or
sti
loop
mov
cli
scas
push
pop
lret
sbb
scas
cwtl
rclb
das
lods
push
mov
dec
push
es
inc
test
pop
loope
add
sub
mov
inc
outsb
cmp
sub
bound
sbb
js
inc
mov
cmp
jle,pn
ja
pop
call
xchg
cmpsb
cmpsl
mov
xchg
jnp
ret
stos
cmp
mov
mov
divb
andl
loop
test
subl
xchg
and
data16
dec
jl
push
pop
jmp
inc
and
push
out
flds
jae
js
dec
test
ljmp
xchg
loope
inc
xchg
loop
pop
jmp
decl
push
adc
pop
push
lds
add
aas
pop
sub
pop
adc
xchg
add
xor
cmp
aam
or
test
xchg
lea
test
sbb
shlb
aaa
mov
mov
add
dec
xchg
out
push
fsts
jmp
fdivrl
push
pop
or
jmp
push
jae
and
dec
cli
jbe
leave
add
lcall
pusha
fwait
add
xor
xchg
rolb
or
xor
scas
cmp
shll
ja
out
push
aas
xor
popa
xchg
bound
inc
sbb
rolb
adcb
jb
mov
iret
pop
sub
add
addb
out
loope
imul
or
fst
mov
dec
sti
cmp
clc
dec
in
dec
int
xlat
pop
inc
xor
cmp
repnz
test
popf
testb
mov
dec
jmp
pop
dec
and
inc
ss
shrb
push
adc
lcall
jno
jno
mov
int
xchg
pop
and
popa
jmp
mov
mov
jg
std
xor
daa
addb
rorb
dec
xchg
loope
jmp
imul
mov
mov
pop
adcb
push
xchg
fwait
sbb
fisubrs
mov
aaa
mov
test
jno
stos
pusha
sbb
mov
pop
or
gs
mul
popa
add
pusha
xor
add
sub
sub
xchg
pop
fadds
cvtps2pi
lds
xchg
in
mov
int
fsin
in
or
imul
outsl
push
test
ss
imul
fsubl
mov
xlat
push
push
dec
pushf
mov
call
aas
cmp
adc
inc
xor
push
adc
cmp
push
out
xchg
dec
pop
cmp
or
lea
cmp
in
addr16
xor
inc
cmp
in
daa
push
subl
cmp
cmpl
or
ljmp
icebp
inc
mov
inc
jo
test
es
cmp
imul
pop
clc
mov
fidivs
cmp
mov
popa
jne
insb
lods
sbb
mov
mov
pop
mov
stc
add
fstpl
cmp
mov
jle
add
dec
imul
push
fwait
loope
jge
mov
lcall
cld
xchg
jl
mov
xor
and
cmp
mov
movsb
pop
or
cmp
iret
shlb
jo
pusha
pop
stc
jge
mov
xchg
dec
aam
xor
inc
dec
out
dec
test
adc
test
subb
push
aad
ret
xlat
dec
mov
inc
gs
and
xchg
pusha
loopne
test
popl
imull
add
jnp
sub
cmp
push
mov
sub
xchg
xchg
lds
cmp
out
bound
ret
add
jo
xor
push
in
jecxz
lea
ljmp
fsubrl
shrl
scas
imul
mov
cmp
scas
and
push
or
cmpb
adcl
cmc
lock
xchg
jge
cld
xor
mov
push
pop
icebp
fs
dec
test
fwait
data16
stos
lods
xor
adc
and
cmp
xchg
mov
test
xchg
cmp
ss
push
lods
add
clc
test
mulb
sbb
xor
jg
xor
inc
xor
ret
mov
add
mov
call
ss
pop
mov
dec
or
mov
pop
inc
xchg
repz
loope
xor
or
pushf
aam
mov
cmp
dec
rclb
mov
daa
stc
xchg
mov
gs
push
xor
inc
or
add
gs
and
or
push
xchg
dec
jmp
push
clc
out
test
daa
and
xor
adc
subb
mov
aaa
stos
cmp
mov
test
fdivl
mov
adc
push
push
in
dec
test
inc
das
push
and
jecxz
mov
sbb
icebp
dec
pop
stc
and
mov
rcrl
cmp
jle
leave
push
add
jbe
sub
das
call
call
lds
xchg
cltd
nop
pusha
dec
cmp
icebp
cli
mov
aas
jae
push
fldenvs
enter
inc
dec
or
out
adc
xchg
pop
cli
shrl
inc
mov
jb
ja
punpcklwd
pop
and
and
fisubs
fcmovnb
mov
mov
jmp
lahf
fsubrl
sbb
repnz
das
pop
jle
jbe
ss
adc
and
jns
aaa
cmp
push
xchg
cmc
lret
push
fimuls
into
imul
cltd
popf
movb
mov
mov
sub
jmp
and
pop
add
xor
sbb
push
jns
xchg
dec
test
pushl
cli
xchg
loop
or
out
inc
inc
in
leave
or
xor
xchg
rcrl
into
dec
pusha
mov
cmp
or
add
and
je
cmp
sbb
jbe
inc
xor
popf
mov
notb
subl
stc
ret
push
dec
ljmp
push
lahf
filds
adcb
xchg
pop
push
ficoms
xchg
lock
cwtl
fisttpl
mov
jns
ljmp
mov
cltd
imulb
pop
sbb
jg
stc
lret
js
mov
mov
mov
mov
dec
out
sbbl
into
or
dec
pop
xor
ja
mov
mov
roll
mov
push
jnp
lea
cmp
adc
pop
ljmp
mov
testb
cmp
cmp
push
cld
cmpps
setbe
cwtl
call
cmpsl
and
mov
mov
jecxz
jnp
icebp
jne
sbb
scas
ja
cmpsb
outsb
btc
mov
dec
cmpsl
mov
mov
mov
stc
jmp
shr
popa
jl
fdivrl
and
ds
insb
bound
xchg
repnz
sub
pushl
or
or
jns
loop
sahf
leave
js
fcoml
roll
aad
dec
cmp
mov
pop
and
add
xchg
jp
mov
in
add
in
lret
fstpl
mov
add
cmp
pop
cmovb
ljmp
and
mov
dec
test
into
push
dec
jmp
insb
inc
loope
xor
movsb
out
adc
cld
mov
or
cmc
ja
decb
cmc
pop
test
mov
std
mov
xchg
inc
mov
out
pop
mov
jns
rcl
or
roll
cmpsb
sbbl
xchg
int3
dec
inc
xor
clc
mov
fimull
popa
dec
repz
add
daa
sbb
cmpsb
mov
sti
xchg
out
fld
mov
xor
sub
xor
test
push
sbb
and
adc
mov
inc
lahf
test
addl
pop
xchg
lods
lcall
xchg
push
lods
shrb
inc
loope
jl
mov
in
aas
inc
pop
ljmp
jmp
cmp
or
shlb
addb
clc
mov
pop
xor
push
sbb
pop
and
int
mov
jecxz
adc
ljmp
dec
mov
ds
les
dec
sbb
or
mull
in
popa
mov
dec
sub
xlat
int3
pop
pop
jecxz
and
cmp
out
outsb
out
sbb
out
jmp
insb
jmp
iret
cmp
push
outsb
js
out
lock
xchg
fisttpll
rcrb
stc
pop
ja
jnp
ss
icebp
adc
stc
loope
clc
je
in
jbe
xchg
in
in
sti
xor
mov
xchg
push
ds
xor
shlb
xchg
jge
jp
xor
enter
jl
mov
addr16
scas
cmc
jbe
and
mov
shrl
xor
pop
push
add
loop
push
out
shl
push
inc
push
sahf
xchg
and
clc
sub
test
mov
xchg
mov
cmp
mov
jbe,pn
xchg
pusha
test
cmpsb
jge
lahf
scas
adc
push
out
inc
push
pop
pop
out
ror
dec
scas
pop
lret
mov
mov
sbb
adc
sub
mov
jae
ffreep
test
xchg
jo
loope
daa
xor
and
cltd
xchg
dec
mov
sti
test
movb
leave
shlb
xchg
pop
decl
xchg
fdivrs
jbe
ja
jns
mov
andl
sbb
push
jns,pn
loopne
leave
jnp
push
sbb
fidivrs
fstpt
sbb
pusha
movsb
jmp
mov
imul
sbb
xchg
scas
push
xchg
sarl
xor
jl
cli
push
sub
push
das
push
jmp
sti
sbb
and
jecxz
cmp
dec
clc
xor
sub
jl
cs
xchg
std
adc
or
ja
mov
cwtl
mov
jle
jae
lods
xchg
sbb
cmpsb
test
xchg
mov
icebp
mov
popa
cmpsl
push
test
lahf
push
xchg
inc
jge
ja
stc
dec
subb
mov
testl
dec
cmp
inc
xchg
inc
dec
push
out
or
ret
push
out
pop
cmp
push
xchg
cmp
sub
xor
movaps
pop
repz
xchg
jmp
addl
enter
fwait
es
xor
sti
pop
test
mov
aaa
cmp
insb
test
push
jae
loope
test
lcall
dec
popa
mov
inc
push
cmpl
xchg
and
stos
push
xchg
inc
jle
sbb
cli
mov
rcr
xor
jno
mov
sahf
loop
xor
push
sarl
ja
das
push
and
jne
inc
pop
xchg
dec
mov
inc
in
call
push
pop
xor
es
out
hlt
cmpsl
jb
ja
fistps
scas
mov
out
or
fcmovbe
popl
adc
mov
into
hlt
mov
cmp
dec
xor
fwait
pusha
jb
sub
insb
sti
jno
fnstcw
popa
ja
and
in
or
test
call
pusha
imul
cmp
fdivrs
and
fcmovu
ja
push
dec
addr16
xchg
loop
out
sbb
test
xor
or
loop
outsl
test
idivl
xchg
sbb
xchg
in
sbb
jmp
ja
jne
and
movsl
clc
loop
jns
dec
xchg
imul
lret
test
jle
sbb
test
xchg
scas
pop
outsb
pop
sbb
add
cmpsb
adc
push
mov
mov
cmpsl
adc
push
sub
adc
das
imul
push
dec
adc
xchg
and
adc
lcall
repz
pop
mov
sti
push
mov
adc
mov
pop
addl
test
cmpsl
xor
adc
ja
jle
jg
fcomp
dec
mov
test
insb
and
lea
in
popa
lret
or
sbb
xchg
mov
sbb
mov
sub
adc
rclb
rcl
xchg
push
popa
xchg
cmpl
sbb
cmp
scas
mov
xchg
mov
pushf
jg
xchg
push
insb
cmpsl
pop
leave
xchg
push
xchg
dec
add
cmpsl
daa
popl
lods
jnp
push
cs
inc
or
push
iret
mov
mov
xchg
jmp
cmc
sbb
push
pop
jg
popl
and
loopne
mov
add
mov
push
sbb
fcoms
test
adc
inc
cmp
and
test
xor
in
and
mov
testb
jne
in
pusha
dec
out
loopne
push
adc
cmp
xlat
push
test
les
mov
pop
add
and
jg
xor
inc
cs
iret
inc
rcrb
popf
inc
int3
test
inc
call
adc
sub
sarl
sahf
fldl
repz
sub
cmp
jns
sbb
shlb
inc
or
push
sbb
pop
mov
lods
xchg
lahf
or
xlat
mov
dec
xchg
adc
dec
pop
push
push
inc
jne
mov
xorb
push
cmp
mov
fsubl
pop
mov
fidivs
sbb
pop
pop
xlat
popa
push
mov
icebp
rcl
mov
mov
or
mov
dec
xchg
sbb
xlat
setbe
xor
scas
test
cmp
in
xchg
xor
std
test
idivb
sbb
mov
data16
iret
xchg
push
or
and
cmp
inc
test
inc
add
jae
cmp
push
adc
cmpsb
pop
mov
icebp
xor
int
es
push
xchg
jg
cmpsb
mov
loopne
fmull
add
mov
pop
xchg
loop
pop
aaa
lock
xor
xor
jg,pn
mov
sarw
mov
xor
push
sub
stc
inc
int3
nop
xor
das
js
faddl
fcmovnbe
mov
aas
mov
mov
xor
jbe
popf
add
cltd
inc
xchg
xorl
push
outsb
add
rclb
mov
mov
xor
mov
cmp
or
shlb
fs
mov
in
jl
pop
jle
or
icebp
test
add
mov
cmc
inc
and
test
loopne
rclb
add
test
sub
sahf
fildll
insb
imul
cs
mov
mov
ss
fiadds
mov
lds
adc
xor
inc
fpatan
fisubrs
addr16
pop
pushf
xchg
repnz
inc
mov
sbb
or
in
lea
pop
adc
lea
ja
nop
fs
cmpsl
lock
hlt
jnp
cmp
adc
xchg
adc
jmp
sbb
aaa
sub
sub
outsb
data16
push
push
pop
lods
mov
xchg
ss
push
mov
scas
sub
test
or
jmp
inc
maxps
ljmp
add
addb
and
mov
cs
sbb
push
in
mov
orb
fdivr
fidivs
int
rorb
sbb
push
pop
jge
sbb
dec
outsl
dec
jae
sbb
add
enter
js
sbb
dec
scas
cs
mov
mov
push
pop
xchg
mov
in
ja
adc
mov
push
lahf
xchg
arpl
lcall
sub
dec
and
xchg
or
fiaddl
xchg
pop
shll
sahf
xchg
inc
inc
mov
sbb
pop
and
inc
and
lods
sbb
scas
mov
test
inc
pop
fnstsw
icebp
push
inc
xor
mov
into
dec
cmp
xchg
leave
cmp
pop
out
aas
cmp
or
sbb
stos
sbbl
mov
xchg
mov
sbb
jp
adc
ss
or
push
lahf
push
cmp
xchg
sbb
pop
into
mov
mov
xor
popa
pop
cmovl
arpl
lea
pusha
push
or
sarb
int
mov
adc
test
cltd
loope
xchg
mov
loopne
xchg
or
lret
adc
inc
pushf
data16
xchg
pusha
ror
out
xchg
test
loope
scas
les
mov
scas
test
ret
jge
adc
test
je
xchg
arpl
pop
jae
std
jno
cmp
inc
fsts
test
adc
cmp
sbbb
mov
cmp
in
push
loopne
jp
call
mov
mov
dec
bound
inc
aas
call
ds
out
push
mov
dec
negb
push
push
stc
xchg
inc
cmc
mov
pop
shlb
or
mov
jp
mov
les
leave
push
jge
add
sbb
mov
dec
xchg
inc
jns
mov
xor
std
icebp
imul
mov
adc
xchg
lods
sub
jnp
xor
pop
sbb
mov
scas
ret
mov
xor
pop
mov
pop
mov
stos
mov
pop
jnp
aas
cmp
je
mov
sbb
jb
mov
mov
sub
xchg
push
mov
andb
or
icebp
out
imul
push
push
add
cs
and
jns
push
mov
fldcw
ja
or
out
dec
jg
out
popa
lds
lods
icebp
sbb
cmp
push
movsl
sahf
sbb
sti
push
test
jp
out
mov
pop
js
jno
push
dec
lods
bound
jg
pop
shll
mov
jae
test
ret
je
je
pop
jg
es
push
mov
test
sub
stos
xchg
fisubrl
xchg
cmp
push
cmp
aad
test
repnz
mov
inc
mov
call
mov
pop
sub
out
mov
push
test
test
or
xchg
pop
bound
cmp
icebp
shr
or
xchg
std
inc
mov
and
filds
xchg
js
lcall
scas
add
mov
test
ljmp
fwait
int3
rcrb
add
sbb
fs
cmp
sti
mov
push
add
lahf
mov
sbb
cmpsb
mov
pop
push
pop
outsl
pop
cmpl
fnstcw
xor
cmc
insb
and
sti
xchg
dec
xlat
sbb
stos
adc
leave
cmc
sarl
xchg
fcompl
out
insb
jno
mov
cs
push
pop
fsubrl
push
mov
jnp
dec
xchg
push
adc
pusha
in
stc
sar
idivl
sbb
and
sub
orb
in
data16
test
bound
add
xlat
sub
mov
lret
cmp
sbb
inc
xor
jl
xchg
aam
dec
inc
mov
and
lahf
xor
pop
cmp
jl
jecxz
sbb
loope
jno
xchg
push
cmc
push
inc
or
rdmsr
ret
aam
roll
ja
xchg
pop
icebp
cmp
test
and
data16
lahf
bound
or
inc
adc
pop
das
mov
push
push
sbb
testb
adc
or
sub
pop
pop
mov
dec
jle
insb
push
in
clc
sbb
lret
ds
in
fistpl
imul
jns
loop
into
mov
mov
mov
insb
test
cld
push
or
lods
dec
fcmovbe
flds
stc
add
xchg
leave
cmp
jo
adc
push
dec
test
stc
add
fadd
gs
dec
add
push
arpl
xor
pop
andl
push
inc
je
sub
mov
pop
in
inc
jae
shlb
cmp
ret
into
popf
ss
add
jno
gs
cmp
mov
sbb
pop
das
dec
cmpsb
jmp
popa
in
add
dec
rolb
or
cs
sub
rcr
fcomi
iret
scas
or
stc
popl
mov
sti
and
test
sub
xchg
add
pop
xor
fdivrl
push
mov
cltd
adc
in
jns
outsb
fwait
sub
pop
cli
mov
push
or
fwait
dec
loopne
pop
stos
mov
aaa
ret
jmp
dec
sub
xchg
leave
and
and
lock
dec
test
sub
adc
add
xchg
stc
cld
cmp
pusha
fdivr
push
push
add
jl
mov
xchg
leave
jge
xor
pop
xor
sahf
dec
mov
unpcklps
jecxz
clc
sbb
cmp
mull
sub
sub
cmp
test
add
jmp
jmp
fisttpll
xor
fs
cmpl
imul
cmp
out
cmp
lahf
pop
fidivrl
xorb
cltd
add
add
test
cmpsb
shlb
xor
or
shlb
cmpb
inc
test
mov
jmp
sbb
xchg
push
adc
leave
inc
loopne
adc
adc
pop
mov
sbb
in
and
mov
dec
ja
pop
loop
add
stc
in
repnz
adc
or
sub
mov
sbb
cmc
loop
mov
imul
mov
mov
iret
das
sub
ljmp
sub
cwtl
out
cmpsb
mov
xchg
js
mov
fcoms
or
dec
test
push
and
loope
cld
outsb
and
xchg
mov
cmp
fsts
sbb
jge
jns
scas
pop
out
fsubr
movsb
in
add
in
test
cmpsb
jmp
ss
dec
int3
mov
dec
cmc
cmp
stc
xchg
cmp
ds
inc
imul
cmp
es
sub
mov
mov
jno
aaa
jbe
shll
inc
xchg
cmp
ja
pop
in
loope
adc
push
ds
leave
repnz
and
stc
push
pop
dec
jecxz
and
cmp
cmp
es
andl
jmp
mov
rorw
mov
es
sub
cltd
adc
inc
push
fstps
outsb
mov
dec
addr16
or
push
jge
shlb
jg
leave
fwait
xor
mov
mov
out
mov
xchg
gs
mov
sbb
pop
mov
fwait
push
dec
test
ret
jae
xor
cmp
sub
rol
and
mov
xchg
cmp
movsl
inc
push
lret
stc
fidivs
xchg
leave
inc
repnz
sub
xchg
pop
aas
or
dec
cli
xor
xor
ja
lods
out
out
dec
or
bsr
iret
sub
push
leave
shll
pop
xchg
mov
out
xchg
movsb
pop
arpl
or
ja
and
rorb
fwait
cmp
jp
dec
shl
movsl
cli
aaa
mov
xchg
mov
mov
xchg
dec
shr
pop
fmuls
jne
dec
aaa
clc
lret
hlt
int3
fnstenv
jl
mov
pop
scas
cmp
push
or
or
push
push
sahf
andl
fisubrl
adc
jecxz
jmp
sbb
pusha
jns
adc
xor
or
jb
out
movsl
je
mov
mov
push
test
xlat
xchg
aam
add
xchg
notb
dec
xchg
jo
sub
sarb
xchg
xor
mov
xor
sub
aad
mov
jge
sti
fdivl
xor
es
lret
jg
pop
add
xchg
hlt
pusha
sub
or
mov
lods
add
jmp
out
inc
mov
mov
shrl
roll
ja
lret
mull
call
mov
dec
fucomp
dec
mov
push
sbb
rorb
dec
sbb
inc
mov
ror
out
inc
mov
mov
outsl
jp
push
outsl
les
sub
repnz
sbb
pop
mov
mov
mov
jb
xlat
mov
cmp
pop
iret
mov
ja
addb
sbb
xor
mov
into
xchg
pop
lock
faddp
add
adcl
std
ret
cld
popa
or
pop
sub
xchg
sbb
repz
mov
xchg
mov
and
enter
ret
xchg
lds
push
pop
cmc
mov
adc
xchg
xor
mov
pop
rcrb
pushl
xchg
lock
adc
loop
cmp
jnp
bound
mov
push
imul
adcl
mov
lret
pop
push
mov
push
std
fwait
add
fstpl
mov
sub
pop
ret
adc
mov
push
andb
xchg
call
arpl
mov
xor
fisttpl
xchg
setg
xchg
mov
adc
inc
test
mov
imul
fnstcw
mov
test
push
sbb
into
jg
mov
in
sub
sub
and
shll
aam
imul
test
sbb
inc
sbb
and
not
in
xchg
aad
fstpl
push
lea
jnp
xor
icebp
adc
faddp
pop
inc
ucomiss
fnstcw
rcrb
add
and
xlat
push
mov
ror
mov
imul
cmp
in
mov
push
ror
btc
xchg
push
push
cmp
adc
jnp
mov
pop
mov
push
fs
cli
or
int3
insl
xchg
cmp
xchg
mov
cs
cltd
sbb
mov
xchg
mov
adcb
sub
lds
out
lods
sti
mov
out
fwait
addb
sti
push
test
movsb
fcoms
bnd
outsb
neg
cmp
ds
pusha
jp
testb
jmp
xor
push
mov
xor
data16
cmp
and
stc
pop
jg
mov
fdivrl
ss
sahf
sub
push
xchg
stc
test
ret
mov
hlt
cmp
cli
gs
aam
pop
pop
ja
pushf
test
aad
jge
test
mov
fwait
cmpsb
out
lds
cmp
push
das
adc
cmpsb
arpl
xchg
mov
mov
push
cmc
inc
cmc
xchg
xor
push
mov
ja
cmp
mov
mov
out
addr16
pop
popa
test
xchg
push
outsl
out
sbb
add
cmp
fwait
icebp
aaa
adc
adc
ja
test
sbb
xchg
sub
sbb
test
pop
sub
push
cmp
xor
out
dec
addb
call
lds
xchg
push
push
addr16
sbb
test
sub
cmp
mov
add
test
nop
xor
mov
in
in
decl
aad
cmp
lods
cmc
mov
mov
mov
testl
cmp
adc
sub
jo
add
test
loope
or
ss
mov
mov
mov
movw
sub
jne
cmpsl
jnp
xchg
fwait
add
mov
push
mov
lods
sar
jg
jl
pop
mov
fsts
push
or
mov
or
mov
mov
test
sar
inc
cmp
pop
hlt
cwtl
push
cmp
cld
sbb
jl
push
jge
nop
add
jg
xchg
jg
stc
std
mov
insb
sbb
and
out
jecxz
xchg
outsb
aaa
idivl
repz
xorb
sub
ja
jg
mov
xchg
sub
pop
lcall
lcall
cmpl
pop
test
call
cmp
stc
xor
mov
call
lcall
add
movsb
cmp
xchg
jne
adc
ds
mov
jp
xchg
or
dec
sub
lds
adc
xor
sub
fimuls
mov
jae
mov
cld
mov
out
inc
pop
inc
mov
push
icebp
inc
push
testb
pop
iret
dec
mov
dec
dec
adc
add
out
out
sub
pop
push
sbb
dec
es
or
sbb
add
pop
mov
fcoms
dec
xchg
pop
arpl
cmc
pop
fwait
pop
dec
jg
or
test
mov
cmp
cmp
cltd
jnp
xchg
lea
mov
cmpsb
add
iret
jp
xchg
add
dec
mov
add
xchg
fldpi
leave
inc
pop
mov
mov
mov
xchg
popa
mov
add
mov
mov
repz
test
imul
add
daa
cmp
push
out
cmp
jae
jp
pop
stos
push
inc
mov
mov
push
xchg
pusha
movsl
add
push
rclb
loope
adc
out
add
fadds
sub
push
cmp
dec
cltd
xchg
outsb
dec
orb
icebp
mov
push
or
mov
adc
popa
std
pop
sbb
add
ljmp
test
fldt
push
test
lods
cmp
int
jo
test
lods
xchg
popa
in
pusha
inc
out
sbb
and
cmp
inc
jle
lock
out
mov
pusha
adc
icebp
clc
pop
sarb
jmp
aas
and
jb
jnp
fwait
incb
add
xor
scas
jecxz
inc
scas
or
jmp
pop
aad
insb
mov
ja
jecxz
mov
jnp
pop
inc
adc
push
sbb
mov
push
imul
push
cmp
cmp
cmpsb
jg
and
pop
scas
sbb
add
jno
add
loope
cmp
ret
insb
inc
icebp
xchg
dec
or
and
flds
cmp
pusha
inc
insb
in
shrb
call
jne
lret
sbb
jmp
incb
pusha
loop
xor
sub
es
out
inc
gs
fsin
push
cmp
loop
pop
loope
dec
add
cmpsl
out
test
mov
test
and
test
mov
xchg
popa
cmp
rorb
xchg
jl
ljmp
addr16
ss
push
inc
faddl
jnp
pop
mov
xchg
sbb
out
or
inc
into
hlt
outsl
adc
cmp
rclb
arpl
mov
jo
mov
leave
cld
xchg
mov
sub
out
imul
in
xor
and
mov
mov
loopne,pn
dec
fwait
cmpsl
adc
and
fldl
cmp
push
adc
and
pop
inc
xor
and
or
bnd
mov
pop
addr16
and
aaa
test
jnp
mov
repz
push
mov
mov
cwtl
bound
ret
push
xchg
add
movsb
ja
enter
add
sub
jl
dec
fsubl
push
fldt
push
mov
jnp
fwait
std
lahf
dec
cmp
cmp
ret
mov
jno
loope
inc
cli
pop
mov
cltd
lret
scas
sbb
sar
fisttpll
xorb
nop
cwtl
pop
mov
clc
mov
mov
push
mov
push
cmp
or
jl
sbb
push
xor
gs
scas
jmp
ror
es
adc
ja
aam
iret
adcl
mov
dec
movsl
addb
rcl
sbb
xchg
mov
fwait
aas
ret
add
fs
lret
enter
pop
xchg
repz
test
cmpsl
out
add
xor
rcll
mov
mov
sbb
aas
push
cmp
inc
pop
pop
bound
inc
mov
out
push
lods
sbb
ss
or
out
mov
jbe
push
out
xchg
dec
popa
fs
mov
mov
lods
bound
push
imul
loop
shlb
pop
adc
test
mov
jb
pop
neg
jle
mov
inc
call
pop
bound
or
lods
cmp
mov
lods
lea
lods
mov
rclb
imul
sbb
lahf
push
fiaddl
addb
push
aaa
iret
and
test
mov
dec
inc
xchg
jmp
pusha
bound
adc
jne
mov
loope
mov
sbb
aas
push
jmp
or
lds
aam
mov
xor
jge
pushf
mov
jg
shlb
jl
in
shrb
test
fistl
lret
cmp
test
pop
jnp
loope
mov
test
mov
mov
push
push
xlat
push
add
fwait
cmc
cmp
xchg
addr16
ret
ss
jl
add
inc
xchg
lods
cltd
pop
push
sbb
shrl
cmp
out
pop
dec
ss
sbb
sbb
scas
push
lret
cltd
into
mov
mov
mov
aam
in
jmp
clc
lahf
cmp
push
push
fsubl
dec
adc
cwtl
lock
mov
xchg
jp
orb
sahf
aad
cltd
sub
popa
rclb
test
mov
inc
lods
sub
lds
rclb
push
mov
and
sbb
inc
jmp
jae
mov
jo
xchg
inc
fs
inc
jo
push
inc
sbb
inc
jnp
mov
pop
adc
test
out
push
sbb
addr16
xor
pop
or
rcrb
jmp
jl
inc
adcb
js
repz
movsl
js
lock
enter
push
cmpsb
mov
add
push
std
shll
pushf
fcmovu
xchg
jb
clc
imul
mov
test
stc
ret
mov
jne
ds
out
mov
xor
xchg
int3
hlt
inc
lcall
addb
mov
loop
mov
pop
std
add
stos
out
adc
adc
sbb
jnp,pn
pushf
jle
sub
out
and
fcomps
pop
addr16
or
test
imul
pop
hlt
test
xchg
mov
test
xor
imul
dec
mov
fcom
cmp
mov
xchg
inc
pop
mov
jp
jo
mov
mov
cltd
mov
mov
jmp
scas
dec
pop
or
mov
scas
ja
push
adc
cmp
push
push
mov
leave
inc
repz
fadd
mov
and
push
aam
aas
test
test
mov
sbb
repnz
mov
cmpsb
je
mov
dec
mov
rorb
xchg
call
add
test
insb
add
push
sub
in
andb
fsubr
test
addr16
es
mov
xchg
clc
inc
sub
xchg
movb
mov
jl
xchg
mov
lcall
iret
movsl
imul
sbb
testb
cmpb
pop
cmpsb
xor
sub
out
lret
or
pop
outsl
stc
test
std
sbb
add
or
negb
jae
icebp
repz
filds
pop
iret
pusha
sbb
cli
hlt
loop
cltd
xchg
lcall
lea
bound
add
fnsave
lods
add
adcb
push
adcl
and
sub
ret
aas
mov
mov
shlb
mov
inc
push
add
int3
lcall
sahf
pop
sbb
mov
cs
mov
mov
sbbb
popa
sub
test
fiadds
or
dec
ss
mov
sti
arpl
mov
mov
popl
out
into
icebp
imul
gs
mov
xor
jmp
xchg
cmpl
jbe
jb
jo
icebp
fistpl
hlt
mov
inc
loope
push
icebp
or
add
dec
icebp
popa
mov
lods
push
mov
lock
cli
pop
add
cmp
aad
ljmp
mov
bound
inc
sub
lret
fsubrs
sub
aas
repnz
mov
xor
test
dec
cmp
xchg
daa
jg
notl
xor
or
dec
arpl
in
repnz
rorb
mov
aam
shll
xlat
push
jb
loop
pop
clc
jp
sbb
pop
xchg
in
popf
loopne
dec
rorb
stos
iret
push
jp
jne
stc
mov
push
sub
cmp
pop
xlat
lock
scas
fldcw
mov
jnp
outsb
and
adc
rcll
xchg
cmp
rol
push
jmp
pop
int
mul
xchg
dec
mov
jne
push
cmp
fwait
xorl
jns
pop
aas
clc
xchg
std
nop
test
add
add
bsr
enter
or
xchg
cwtl
sbbb
rolb
cltd
or
or
shlb
mov
add
xor
inc
xchg
and
cmp
cmp
sub
stc
pop
push
push
fidivl
into
inc
and
adc
cmp
jnp
pusha
pop
fsubs
lea
push
jmp
cmp
pop
cld
frstor
test
cmp
mov
popf
add
xor
adc
insl
mov
cmc
enter
pop
orl
in
push
xchg
pop
pop
mov
add
cmpsl
or
je
fucomi
add
cmpsl
push
mov
cmp
sub
add
adc
adc
cmp
leave
movsb
femms
out
xor
cli
dec
repnz
imul
jl
adc
test
dec
sbb
insb
inc
cmpsl
cmp
xor
mov
or
mov
idivb
mov
pop
pop
pop
bound
icebp
cmp
out
pusha
cmpsb
jl
mov
xor
stos
jg
xchg
int
mov
sbb
sub
jecxz
imul
cmp
add
push
mov
jp
push
dec
pop
popa
out
jle
test
das
jns
cmp
mov
xchg
orb
mov
mov
and
sbb
loop
into
pop
int
popl
mov
sub
mov
mov
out
sbb
pop
mov
or
push
cmp
sarb
popf
icebp
test
xor
push
and
xchg
ret
cmp
daa
sbb
xchg
sbb
push
cmp
bound
push
fldcw
push
push
mov
jl
scas
push
hlt
sbb
aas
test
cs
push
and
rolb
cmp
test
cltd
cmp
cmp
ja
sub
andb
add
adc
cwtl
aas
pop
comiss
dec
test
push
cmpsb
out
sarb
lds
fstpt
mov
xor
inc
sarl
mov
add
aas
fistl
imul
cmc
mov
cmp
pop
test
clc
xchg
leave
jl
and
lods
outsb
add
mov
or
cwtl
movsb
fs
xor
stos
loopne
sbb
and
inc
popa
shlb
xchg
les
push
jecxz
push
jg
int3
adc
shlb
ja
test
mov
xchg
out
cmp
xchg
or
jp
icebp
rcll
sbb
add
stos
add
jle
test
adc
shrl
js
fisubs
cmp
clc
stc
je
pop
cmp
test
dec
jmp
mov
push
mov
aaa
dec
mov
cmp
repz
std
rcrb
out
xor
cmp
or
mov
mov
aad
xchg
push
mov
add
mov
int
pop
cmpsb
lret
bound
sarl
inc
push
clc
or
dec
cmp
test
add
daa
fwait
dec
in
in
mov
aaa
loop
mov
movsb
fwait
add
xchg
scas
xchg
cmovge
mov
rol
mov
jl
dec
add
jecxz
xchg
jnp
add
enter
jae
pop
ret
mov
and
cld
jo
loopew
xor
je
leave
inc
imul
icebp
cs
in
mov
add
cwtl
in
sbb
mov
push
cmp
loopew
dec
sbb
in
inc
push
mov
test
dec
xchg
es
loope
popf
xchg
jge
jno
lds
dec
pusha
adc
mul
mov
mov
mov
inc
test
dec
out
icebp
movsl
cmp
sbb
pop
iret
and
fwait
pop
ret
mov
test
pop
sub
out
imul
xchg
and
pop
pop
das
popa
jecxz
addr16
xchg
push
jo
popa
sub
sub
mov
sub
inc
mov
lock
out
cs
sarl
xor
mov
mov
lcall
mov
mov
sbb
dec
stos
push
jg
addr16
popa
push
jns
adc
sbb
cwtl
insl
jns
inc
insb
inc
fldt
pop
loopne
pop
xchg
push
mov
cmpb
inc
lods
cmp
notb
jns
dec
cmp
test
pop
inc
xchg
out
xchg
sahf
cmp
push
push
testl
ret
pop
jnp
stos
loope
aas
aas
cmp
jo
sbbb
jg
add
jns
stc
ja
cli
xlat
mov
out
adc
xlat
mov
hlt
shll
dec
inc
les
xor
rclb
sub
dec
mov
int
cmp
mov
and
stos
aaa
test
adc
mov
xchg
dec
adcb
xchg
int3
mov
test
or
mov
leave
jbe
insl
ds
clc
and
add
xchg
cmp
mov
mov
in
xchg
push
push
sbb
adc
xchg
sbb
jns
xchg
les
and
adc
aad
dec
ds
xor
cmp
rcrb
scas
jge
inc
mov
bound
in
xchg
cwtl
sub
mov
les
jecxz
sub
push
or
repnz
jo
test
xchg
fidivl
cwtl
mov
push
cmc
leave
js
add
subb
loop
sub
shlb
subb
and
add
pop
jg
out
adc
sar
cmp
jae
test
cmpsb
mov
sub
xlat
mov
jnp
sub
adc
pop
sbb
push
cmp
pushf
repz
fisttpll
hlt
punpcklbw
cmp
push
out
stos
jge
or
inc
adc
add
jo
popa
push
sbb
jge
imul
push
add
mov
lret
sbb
js
inc
test
adc
aad
add
cli
test
stc
mov
push
sub
pop
add
lock
pushf
cmp
es
cmp
mov
nop
inc
lahf
repz
fmul
pop
push
enter
mov
push
xchg
fld
imul
mov
in
mov
ds
cmp
jle
adcb
mov
pop
ja
pop
ja
sub
lods
insb
push
jns
sahf
aam
mov
out
mov
and
ffree
mov
fs
in
cmp
mov
aam
mov
xchg
test
mov
mov
cwtl
pop
aam
enter
movsl
mov
pop
and
mov
out
xchg
mov
sbbb
sub
scas
push
scas
mov
out
jne
mov
lods
cmp
jnp
arpl
rcl
mov
aam
lret
pop
stc
inc
ret
mov
push
enter
push
mov
stos
out
fdivs
outsb
jp
sti
aam
sub
rcl
lret
mov
movsb
rcrb
jge
dec
or
inc
inc
mov
insb
xchg
inc
mov
fistpl
arpl
sub
out
sub
and
cmpsl
jno
test
dec
xchg
add
xchg
push
fwait
jle
in
adc
and
jo
xlat
pop
xor
and
cltd
or
fbstp
out
xchg
call
push
push
xchg
xor
cmp
or
xchg
cmpsb
sbb
sti
ljmp
xchg
lcall
xor
negl
dec
push
es
cs
xor
sub
sbbl
cmp
xor
inc
in
stc
dec
sub
sbb
test
nop
add
inc
mov
dec
sub
mov
mull
je
cli
mov
mov
insb
shlb
fnstenv
cwtl
mov
sbb
sub
sbb
push
gs
fsubl
or
popa
bound
push
xor
ret
js
fcmovu
adc
mov
push
mov
loope
mov
add
pop
xor
mov
pop
pop
cli
test
dec
pop
pushf
mov
popa
aas
xchg
mov
pushf
lret
lret
sub
xor
jl
push
cmp
xchg
mov
loope
and
mov
xor
sub
loopne
mov
jbe
fdiv
jge
inc
loope
in
xchg
xchg
cs
repz
push
subl
sbb
cmp
and
mov
fimull
mov
test
dec
pop
push
sbb
shll
xchg
mov
jbe
sbb
sbb
xchg
test
adc
scas
mov
push
or
and
arpl
shrb
and
stos
scas
movsl
ja
push
lods
cmp
and
pop
ja
xorb
mov
add
mov
popa
in
dec
inc
lds
imul
addr16
test
mov
shrl
mov
xor
jg
test
ficomps
cmp
cmp
pop
lods
mov
push
push
jge
into
arpl
jl
mov
arpl
loop
sarl
iret
lcall
imul
gs
jp
dec
dec
in
scas
fsub
data16
cmc
xchg
push
dec
ja
sbb
dec
cmp
xchg
inc
shll
mov
push
xchg
ss
test
data16
jl
and
dec
flds
adc
stc
mov
inc
push
pusha
dec
push
das
std
add
mov
iret
outsl
sub
xchg
sbb
sbb
cmp
ss
orb
scas
add
xchg
mov
repz
jle
jnp
loope
push
fld
xor
aas
inc
cmp
inc
fadd
arpl
mov
pop
mov
dec
lcall
mov
pop
add
in
push
dec
or
xlat
sub
xor
dec
mov
add
shlb
mov
les
mov
or
sub
mov
rorl
test
jl
dec
ds
mov
std
add
aam
movsb
inc
mull
adc
lods
data16
aas
or
push
ds
sbb
mov
mov
add
movsl
jle
aaa
xchg
push
xor
gs
mov
sub
repnz
adc
or
negl
xor
in
push
fcompl
cmpsb
jmp
mov
sbb
mov
mov
add
jecxz
rol
add
test
stc
ret
xchg
push
movsb
pop
mov
xchg
popf
inc
pinsrw
jb
push
mov
fiaddl
jbe
les
add
shlb
hlt
js
sbb
adc
adc
adc
lods
test
dec
lcall
add
sub
idivb
xor
or
sbb
nop
js
inc
add
mov
rcrl
pop
sub
jnp
sub
sub
fimull
xor
stos
gs
push
mov
cmp
scas
jmp
push
test
rep
adcb
subb
imul
cli
mov
sbb
iretw
js
imul
in
sub
jns
addr16
scas
add
bound
add
or
or
inc
std
mov
sbb
xor
dec
movsl
mov
icebp
jge
inc
ret
and
movsl
jle
pop
mov
in
fcomip
sbb
lock
cmovne
xor
cs
scas
cltd
popa
mov
ja
addr16
xor
and
or
and
and
jl
mov
add
pop
jecxz
push
movsl
in
shl
sbb
scas
out
lahf
or
mov
and
jmp
cmp
test
clc
inc
fcomi
xchg
xchg
cmp
pop
test
outsl
ret
and
adc
mov
push
aam
dec
out
push
jb
dec
in
cmp
out
into
mov
clc
aaa
lods
xchg
rorb
mov
incl
mov
sub
cltd
subb
mov
ljmp
jae
lds
pop
outsb
xorl
pop
cltd
jno
mov
sbb
rdtsc
adc
dec
insb
pop
incb
je
out
xchg
pop
ret
pop
sbb
jp
popf
inc
fwait
notl
fmull
in
mov
mov
cmp
dec
cmpsb
jmp
cmpsb
daa
stos
and
mov
jmp
out
mov
jge
jl
out
jp
xchg
sbb
inc
cmp
xchg
cmpsl
out
mov
test
and
scas
jge
sub
dec
ljmp
repnz
into
xchg
pop
and
xor
push
xchg
sbb
ficoml
jno
call
jb
jae
xchg
scas
add
sbb
pop
test
mov
xchg
test
xor
scas
push
movsl
daa
out
jl,pn
or
xchg
ret
cltd
sbb
clc
mov
sub
sub
mov
inc
adc
sarb
cmp
rol
and
xor
jmp
pushf
aaa
dec
mov
loop
sub
cmp
xchg
test
pushf
ljmp
addr16
out
xchg
mov
mov
out
daa
inc
cmc
outsb
push
push
cmp
test
jmp
popa
ss
stc
fcoml
test
cmp
inc
and
mov
sbb
mov
fdivrs
inc
lea
mov
movups
jnp
inc
fidivs
jnp
xor
cmp
ds
dec
lahf
in
inc
sub
lret
xor
xchg
fsts
push
ret
fisubl
pop
mov
loop
fs
jae
pop
aaa
pop
sbb
stc
dec
adc
push
mov
aas
add
cmp
test
xor
inc
dec
dec
or
jle
popf
xchg
pop
xorb
hlt
test
sbb
adcb
imul
test
pop
xchg
push
mov
stos
adc
mov
inc
es
jb
shll
sbb
daa
sti
and
fdivl
add
xchg
pop
les
dec
cltd
dec
out
in
aad
add
leave
push
mov
jns
loope
insb
mov
pushf
aam
dec
adc
dec
xchg
sub
jnp
cmp
in
scas
clc
mov
mov
out
and
dec
dec
fistl
aam
js
stos
cmp
and
push
mov
lock
loopne
sbb
push
mov
sbb
jne
jge
shlb
fdivrl
push
jmp
xor
xchg
pop
inc
xchg
loop
jbe
cmp
pop
gs
lret
rclb
cmpsl
push
dec
dec
mov
xor
jle
pop
test
mov
repz
xor
sub
outsl
mov
lahf
sbb
hlt
xchg
cmp
push
push
ret
push
or
sti
adc
aam
loop
mov
xchg
movsb
adc
mov
adc
imul
push
pusha
int
ret
mov
add
mov
mov
jo
fldl
sti
insl
sub
leave
testl
sarb
in
ret
cmp
ret
in
loope
mov
data16
insb
jecxz
in
aaa
jns
mov
inc
pop
inc
insb
jnp
and
cmc
jge
icebp
in
je
shlb
adc
popa
push
in
jo
bound
in
daa
cmp
arpl
jle
ss
jae
add
pop
rol
xchg
sub
sub
arpl
jnp
rcl
adc
test
call
adc
lock
dec
sbb
in
mov
jbe
add
push
jl
out
loop
popf
cltd
xlat
mov
xor
xchg
jnp
ja
cmp
test
in
or
pop
filds
xor
pop
lret
mov
push
stos
push
repnz
mov
sub
ret
mov
test
movsb
sub
pusha
xchg
ret
testl
mov
add
mov
push
mov
and
gs
sbb
push
js
and
in
imul
jbe
inc
or
inc
cmp
inc
sbb
or
cmp
sub
rcl
pusha
je
and
in
loope
int
xor
scas
sbb
push
stc
pop
test
sahf
jbe
sub
sub
ja
add
inc
outsl
mov
mov
fcmovu
je
stos
rorl
not
cli
fisubrs
cmp
cs
mov
daa
fwait
hlt
int3
sbb
xor
dec
push
cmp
testl
add
test
stos
adc
xchg
cmp
sbb
sbb
gs
inc
loop
gs
cmpsb
out
test
inc
addl
fsubrs
iret
int3
popf
cmp
clc
mov
ficompl
sti
mov
adc
incl
mov
test
or
addr16
inc
jae
test
push
xlat
and
lods
or
popa
sbb
sti
push
mov
and
ds
xorl
inc
xchg
xchg
push
add
or
imull
aad
sbb
fdivrl
inc
cmp
mov
jge
dec
jg
out
stos
sbb
xor
fwait
jb
repz
jns
inc
mov
ret
cmp
notb
scas
fucomip
popa
push
movsb
daa
jge
mov
cmpsl
stc
sarb
clc
adc
popf
test
dec
fisttps
in
out
orl
movsb
nop
stos
negl
cwtl
rorl
stc
push
sbb
cmp
xchg
andb
cld
fsubr
jmp
sbb
and
and
sub
jle
arpl
pop
es
jp
push
mov
jl
aas
or
xor
sub
xchg
andl
pop
loop
cld
aas
iret
and
pop
js
and
inc
daa
sub
or
xchg
sbb
mov
xchg
or
push
add
rclb
ja
dec
es
js
xchg
out
inc
sbb
pop
push
outsb
test
jae
or
jl
xor
add
iret
or
xchg
push
mov
test
loope
push
ror
cmp
test
iret
mov
mov
sbb
ss
dec
sarb
sub
lea
push
fildl
dec
jmp
xchg
or
sub
xor
sbb
cmp
inc
xor
cmp
stc
push
push
in
lahf
xor
pop
mov
jp
adc
addb
addr16
out
loopne
mov
aad
out
cli
lret
push
pop
push
bsr
dec
adc
inc
addr16
test
add
out
mov
or
add
adc
movsb
add
int
js
in
cmpsl
scas
mov
adc
inc
sub
sub
mov
mov
movsb
pop
xorl
pop
idivl
sti
out
and
jb
jns
xor
jg
pop
cmc
movsl
fnstcw
sbb
cltd
xchg
pop
icebp
fwait
lods
cmp
sbb
cs
js
out
fdivrl
push
fbstp
xchg
mov
mov
outsl
ja
xchg
sbb
pop
xchg
fcmovnb
jg
and
js
or
shrb
test
xor
xlat
mov
pop
jns
pop
je
dec
push
push
mov
stos
pop
mov
testl
jp
test
arpl
jle
mov
pop
enter
or
jmp
add
pop
jp
pop
mov
popa
daa
pop
mov
push
test
notl
fisubl
cmp
and
mov
add
jne
mov
xchg
cmp
fwait
repz
scas
test
push
sub
iret
cmp
hlt
cmp
sti
inc
inc
cmp
xor
lea
inc
gs
stos
test
out
xchg
adc
iret
and
xchg
mov
adc
cmp
or
repz
cmp
mov
sbb
cltd
add
repnz
fimuls
shlb
cmp
adc
loope
and
xchg
scas
ja
cmp
out
and
dec
rcrl
cmp
divb
insl
inc
call
fmull
inc
pushf
gs
push
xchg
movsb
mov
push
xchg
subb
out
lahf
jge
ds
out
sahf
or
movsl
out
repnz
xor
sbbb
or
imul
mov
out
sbb
mov
xor
insb
loope
out
jl
sbb
sbb
sar
mov
push
clc
sbb
sbb
das
sbb
imull
pop
sub
rcll
cmpsb
scas
sbb
popa
lea
fisttpl
sbb
stos
xchg
pop
dec
fsubrl
dec
testl
test
add
loope
pop
shrb
popl
add
icebp
push
shl
pusha
adc
mov
js
pop
es
jno
jns
mov
mov
pop
out
std
jge
mov
sbb
pop
icebp
and
pop
cmp
xor
in
xor
subl
stc
gs
sub
cmp
cmp
pop
test
add
ljmp
nop
lret
sbb
add
cld
pop
pushf
cs
push
ret
xor
dec
and
xchg
movd
imul
add
in
add
negl
sub
lea
stos
lahf
push
add
test
add
xor
push
add
loop
scas
es
insl
sub
sub
ds
rcl
fstcw
jge
mov
adcb
inc
mov
xor
fadd
xchg
pusha
lret
fistl
call
xor
adc
cmpsb
sti
xor
cmp
outsl
loope
mov
dec
mov
mov
xlat
jo
push
cmpsl
mov
push
nop
int3
dec
rorb
mov
sub
and
mov
imulb
mov
add
scas
pop
xor
test
mov
jns
lret
clc
lds
stos
cmp
push
inc
les
sub
dec
int
sti
and
mov
test
cmpl
sbb
shl
in
push
cmp
loop
adc
cmpsb
inc
xchg
push
inc
fiadds
adc
test
out
repnz
cmp
or
mov
loop
stos
mov
add
push
sub
adcb
sbbb
notl
shrl
loopew
cmpsb
pop
adc
xor
dec
xor
pushf
push
inc
jno
ss
mov
inc
lock
or
out
or
push
sbb
xorl
icebp
xchg
repnz
aad
xor
jbe
test
aad
sbb
pusha
and
fs
xchg
xchg
mov
enter
lds
jmp
cmc
or
dec
fnstcw
mov
mov
enter
mov
adc
test
jo
mov
in
rcl
sbb
add
cmp
lods
pusha
in
aas
cmp
out
ret
shlb
jmp
xchg
aaa
pop
or
sbb
lcall
in
ljmp
jns
push
jg,pn
and
es
jl
repz
ss
scas
fidivrs
cmpsb
mov
sub
adc
pop
testb
jb
addr16
and
add
sbb
cwtl
jne
es
dec
jle
sbb
arpl
aad
dec
mov
cmp
test
jmp
jb
xchg
mov
mov
xor
sbb
jge
fdivrl
sub
xor
popa
push
jnp
mov
inc
iret
fwait
loop
and
pop
loop
xchg
add
mov
sahf
fs
in
xlat
mov
aas
xchg
cmp
dec
shll
xor
push
xor
enter
fdivs
test
mov
xchg
insb
adc
inc
ja
std
sub
bound
adc
clc
push
inc
jl
mov
sub
rcll
push
xchg
adc
pop
clc
cmp
fidivrl
lahf
add
dec
fnstenv
mov
mov
iret
cli
push
lock
xchg
xchg
out
hlt
and
xor
mov
sub
mov
flds
test
cld
jno
out
mov
imul
out
sub
xchg
xor
jp
dec
ljmp
jmp
mov
scas
jmp
xchg
pusha
rcll
jp
xchg
mov
mov
imul
ret
and
ficoml
push
dec
pop
stc
push
out
xchg
add
sub
mov
cwtl
xchg
pop
imul
test
adc
or
sub
adc
sbb
and
jnp
xor
sbb
lret
pop
mov
xor
jmp
xchg
xchg
rcrl
mov
sbb
sbb
int3
or
push
dec
xor
shlb
out
test
mov
movsb
daa
dec
repz
rolb
sbb
sbb
pop
pop
cmpsl
xor
push
and
or
pop
mul
cmp
mov
push
dec
sarl
mov
or
inc
xchg
in
clc
in
sbb
mov
sbb
lret
sub
imul
hlt
jbe
call
decb
sbb
pop
jle
push
pop
in
xor
push
mov
mov
lea
xchg
sbb
mov
jo
dec
lods
notl
push
test
xchg
push
in
push
into
sub
cmp
notb
adc
mov
insb
dec
in
pop
jne
out
imulb
or
push
pop
ja
push
mov
jmp
jmp
mov
push
pop
in
rcrb
pop
and
fmull
jae
sub
xchg
adcb
js
push
jl
out
subb
outsb
xor
mov
sbb
xchg
xchg
fadds
jge
popa
dec
imul
enter
xchg
fwait
cmovb
es
in
inc
jmp
xchg
fcomp
mov
sub
dec
aad
xchg
xor
cmp
cmp
stos
mov
cmp
cmp
dec
out
imul
fucomp
mov
adc
fiadds
std
loope
ret
mov
sti
sbb
mov
into
sbb
lods
dec
imul
das
xchg
repz
into
xchg
fs
fcom
cs
jnp
mov
xchg
imul
mov
and
pusha
push
clc
xchg
adc
stos
out
icebp
sbb
cmp
leave
clc
test
mov
cmp
ljmp
out
in
xor
fsubrl
cmpsb
push
lcall
push
inc
call
test
stc
rcrl
loop
sbb
jg
pop
pop
add
push
mov
lods
jg
cmc
or
test
into
cmp
pop
pop
out
pusha
cmp
ret
lock
cmp
push
or
arpl
jecxz
ds
cmpsb
mov
inc
add
mov
loope
sti
in
push
jnp
pop
push
and
sub
movsb
pushf
sbb
cwtl
xor
mov
sbb
and
pop
lods
icebp
mov
cmp
add
rolb
push
ds
repnz
mov
fsubrs
out
repz
xchg
inc
push
pop
iret
jmp
push
mov
fwait
mov
clc
mov
loopne
inc
idivb
xor
xor
fsubl
sub
roll
iret
dec
push
rorl
test
or
cmp
popf
sub
jmp
add
adc
sbb
pop
dec
pop
xchg
gs
je
imul
into
sbb
mov
scas
test
arpl
xchg
add
push
xor
sub
xchg
filds
dec
cmp
test
stos
push
jge
sub
lahf
call
jns
aas
fnstenv
dec
mov
lds
xor
sub
faddp
push
inc
and
enter
xor
pusha
mov
dec
dec
dec
repz
out
mov
pop
idivb
xchg
push
xchg
das
les
cmpsb
cmp
pop
fists
cwtl
jns
subps
repz
test
icebp
in
pop
jp
adc
lret
iret
out
ds
add
sbb
push
dec
ds
push
mov
pop
xchg
aas
movsb
test
sub
loopne
out
xchg
dec
lret
daa
into
mov
cmp
adcb
int3
xchg
aam
adc
cmp
addb
pop
adc
jp
xor
pusha
cmc
shlb
cmp
roll
shl
pop
shrb
mov
ret
out
dec
in
sbbb
arpl
ja
mov
divl
sbb
and
fnstsw
stc
sbb
mov
cmp
inc
cmp
call
mov
into
pusha
cmp
push
cmp
shrl
data16
mov
subl
and
test
jp
dec
sbb
repnz
mov
jl
jmp
cmpsb
inc
shll
cmc
sub
nop
ret
loope
cs
inc
mov
mov
pushf
cli
str
fists
adc
jle
mov
cmp
out
pop
je
or
mov
xchg
sbb
pop
mov
movsb
aaa
imul
pop
cs
cmp
mov
inc
mov
adc
int3
xchg
sbb
outsb
mov
scas
dec
mov
dec
mov
shl
pop
pop
xchg
fisttpl
jge
imul
imul
push
lds
mov
mov
dec
repz
xchg
mov
pop
or
xor
mov
jae,pt
cmp
sub
loopne
mov
adc
pusha
cmp
mov
mov
loop
xchg
push
push
shlb
fnsave
jle
test
data16
scas
std
ret
rolb
shlb
add
sub
cmp
cli
xchg
lahf
ret
xchg
scas
pop
negb
xchg
pop
je
sbb
pop
sub
icebp
dec
out
lahf
dec
mov
mov
xlat
push
mov
fcoml
in
cwtl
mov
cs
mov
jp
sbb
icebp
dec
call
icebp
addb
repnz
sbb
lods
jae
pop
cmp
adc
pushf
sbb
jp
cmp
adc
adc
fimuls
je
out
push
lret
lods
rclb
jno
test
scas
add
mov
test
sbb
shr
clc
jle
adc
ja
bound
add
push
sbb
sbb
scas
push
or
sub
sti
fwait
push
cltd
inc
sar
je
cmpsb
jge
cld
or
add
gs
sub
insb
or
int
aaa
or
arpl
adcb
sti
mov
xchg
xor
xchg
mov
xlat
xor
mov
test
jnp
leave
jae
pop
xchg
andb
push
dec
mov
stos
test
fwait
and
mov
das
xor
gs
mov
push
sbb
add
cld
cmc
push
adc
sub
outsb
pop
scas
aas
jno
in
loopne
cld
ret
lea
mov
pusha
test
mov
pop
loope
mov
aas
mov
mov
pop
ret
or
ds
fdivrs
cmp
clc
cmp
and
add
jge
add
mov
daa
xchg
std
cmp
xor
add
sub
sbb
xlat
adc
xchg
call
fmuls
addl
ja
add
mov
mov
ja
hlt
xchg
scas
pusha
push
cltd
aas
mov
adc
je
push
cmp
xchg
out
rcrl
sbb
push
fdivl
imul
push
mov
cmpsl
sbb
mov
mov
sbb
sub
pop
insl
mov
mov
cmp
pop
sbb
cmp
mov
test
cmp
jno
sbb
inc
cmp
add
or
xchg
jecxz
mov
xchg
cmp
pop
lahf
cmp
sub
fisubrl
fnclex
push
jb
cld
push
out
ja
and
sbb
xchg
mov
or
lcall
pop
and
inc
cltd
lds
inc
mov
cmpl
sbb
adc
loopne
pop
call
jge
mov
movsl
fistpl
stos
daa
cmp
jle
jbe
dec
push
mov
pop
leave
dec
inc
mov
inc
adc
pop
cmp
clc
mov
pop
sahf
cmpl
data16
mov
test
inc
lahf
sti
ljmp
mov
cmp
adc
inc
pop
negl
mov
popa
aam
cmp
mov
pusha
cmp
add
push
stos
shld
test
push
mul
mov
adc
bound
out
cmp
arpl
scas
push
mov
sub
sbb
cmp
push
adc
cmp
nop
jb
pop
inc
or
icebp
dec
inc
pusha
add
aas
mov
sbb
cmp
push
fstpl
or
dec
cmc
push
int
mov
mov
mov
scas
cmp
xchg
decb
scas
xchg
pusha
inc
loop
mov
or
mov
dec
arpl
pop
cmp
cmp
sbb
push
pop
cmp
dec
xchg
inc
adc
mov
push
cmp
es
mov
sbb
cmp
pop
outsl
loopne
sbb
lcall
in
cmp
pop
mov
cmp
popl
arpl
sub
cmp
cmp
adcl
sarb
and
lds
mov
cld
pop
xchg
jl
pop
inc
movsb
or
mov
cmp
xchg
pop
sbb
mov
ja
adc
std
sub
cmp
icebp
xlat
inc
mov
add
pop
iret
xchg
sbb
cmp
test
jnp
xlat
mov
adc
or
jne
xchg
test
ss
pop
lds
aad
pop
mov
mov
mov
lcall
daa
sbb
sbb
xor
sbb
pop
js
cmp
xor
cmp
sbb
inc
xchg
add
jg
inc
xchg
cmp
int
cmp
dec
scas
cmp
pusha
jnp
iret
imull
cs
xchg
pop
jnp
xchg
fwait
mov
cmp
xchg
andl
sub
cmp
adcl
pop
iret
add
sub
push
mul
scas
sbb
inc
testl
idiv
cmp
jnp
negl
arpl
testl
fistpll
push
imull
push
and
pop
jg
fisttpll
pop
ljmp
movsb
or
aas
std
ljmp
push
or
les
rcrb
std
lret
add
dec
ja
test
xor
dec
dec
xchg
shr
jp
jae
push
mov
mov
or
add
cmp
cmpsb
jmp
cmp
jb
pop
pusha
and
repz
sarb
popa
and
mov
mov
inc
or
adcb
fsts
add
mov
xchg
xchg
adc
vmwrite
jns
arpl
outsb
ficoml
or
mov
or
sbb
les
cmp
pop
lods
jnp,pt
inc
mov
mov
mov
adc
pop
or
pop
lds
mov
and
inc
sbb
push
inc
push
sbb
adc
lcall
jle
addr16
mov
mov
leave
nop
pop
jns
cmp
lods
es
mov
cwtl
sbb
iret
push
jp
cmp
rolb
les
or
xchg
dec
mov
mov
fisubs
or
jle
imul
fisubl
pop
addl
push
sets
lock
lcall
adc
jecxz
pop
pop
aas
mov
cmp
jnp
push
cmp
ja
mov
es
sub
push
negl
aas
addl
adc
inc
aad
out
das
mov
ss
jo
or
sbb
lea
pop
inc
cmp
xchg
dec
push
mov
mov
jb
out
xchg
inc
ret
mov
jecxz
icebp
mov
mov
jp
ja
in
cmp
enter
dec
mov
or
js,pt
xchg
adc
pop
repz
ja
xchg
data16
arpl
hlt
or
mov
cmp
and
jnp
pop
push
jnp
movsl
cmp
pop
add
inc
cmp
and
ljmp
cmp
or
or
rorl
sbb
movsl
ja
push
fstps
dec
ja
popa
cmp
test
es
aas
movsb
xor
adcl
or
lahf
cmp
mov
pushf
dec
mov
adc
cmovno
ss
xchg
cli
add
mov
mov
add
mov
mov
pop
and
cmp
or
cmp
movsl
add
cmp
xchg
jb
pop
add
inc
dec
fwait
scas
pop
add
or
sbb
or
fdivrs
loope
ljmp
cmp
pop
dec
mov
sbb
cmp
dec
pop
int3
or
cmp
int
pop
jno
inc
lods
push
insl
xchg
mov
popf
popf
jns
test
xchg
imull
sub
cmp
mov
jae
cmp
xchg
xchg
add
mov
add
scas
mov
push
or
or
pop
in
jb
jecxz
mov
imul
sbb
imul
fistl
int3
arpl
stos
sub
mov
jae
mov
or
imul
in
pop
stos
mov
xchg
fcompl
inc
jl
push
daa
sbbb
cmp
sub
test
sbbl
outsb
or
mov
lret
je
test
add
pop
jl
xchg
mov
xchg
gs
imul
or
mov
push
jnp
in
or
scas
jne
aas
test
xor
lahf
loope
xadd
cmp
sub
cmp
xchg
add
jmp
sub
sti
add
test
mov
out
cmp
or
rolb
mov
ret
fbstp
pop
pop
aas
ja
mov
jl
or
adc
sbb
out
fcmovbe
test
sbb
cmp
insb
cmp
xor
add
roll
push
xchg
push
outsl
cmp
xchg
jle
arpl
cmp
adc
mov
jl
mov
lods
fistpll
stos
fsubr
inc
rcrb
pop
sbb
push
repnz
inc
lock
in
and
pop
add
cmp
mov
pop
pop
pop
add
loope
sbb
pop
cmc
pop
mull
mov
cmp
mov
int
pop
out
or
shlb
negb
nop
cmp
test
xchg
stos
incb
addr16
sti
mov
push
mov
cwtl
and
mov
pop
andb
inc
lds
dec
dec
pop
lods
ja
mov
popa
or
jle
jns
movsl
adc
enter
sbb
imul
add
jno
mov
popa
pop
rclb
jns
cmp
and
mov
dec
cmp
pop
fs
push
cmp
or
and
ljmp
cmp
cmp
cmp
adcb
cmp
add
icebp
imull
pop
loopne
add
sbb
add
push
pop
outsl
sahf
push
ja
cmp
fnstcw
popf
pushf
sbb
ja
xorl
lret
inc
scas
jecxz
idivl
test
mov
and
ficoms
pop
sbb
or
lret
add
adc
pop
popf
pop
mov
test
test
and
repnz
test
bts
xchg
nop
in
pop
ret
pop
push
test
mov
jecxz
ja
adc
in
in
pop
dec
cmp
push
mov
and
xchg
cmp
inc
cmpl
adc
inc
jo
push
jnp
test
push
inc
push
repnz
adcl
mov
mov
ret
test
pop
rcll
mov
add
push
int
xor
add
fwait
outsb
ja
in
adc
ja
cmp
aas
fnstcw
cli
pop
or
in
int3
clc
mov
jnp
cmp
cmp
push
sbb
aas
cli
push
mov
mov
cmp
mov
cld
lds
jnp
mov
push
js
or
imul
cmp
ret
xor
pop
aas
loopne
mov
jb
xchg
sbb
xchg
in
add
out
dec
mov
and
lods
pop
lret
or
push
sub
fxch
push
add
test
mov
rcll
jecxz
push
push
loope
out
ds
push
adc
xchg
mov
mov
cmp
mov
cli
pop
mov
dec
xchg
push
push
test
test
xchg
cmp
lret
mov
add
mov
inc
imul
loope
cmp
push
movsb
cmp
dec
or
cmp
ja
and
mov
mov
addr16
imull
sbb
loope
inc
adc
pop
pop
test
cmp
push
add
and
push
movsl
js
jge
outsb
mov
scas
gs
out
pushf
mov
add
aam
pusha
add
dec
pop
ja
xchg
cmp
outsl
es
sub
jnp
jbe
pop
mov
ja
imul
ja
inc
cmp
mov
cltd
aas
pop
xchg
mov
add
je
mov
push
cmp
mov
mov
xlat
jnp
das
pop
hlt
inc
dec
jnp
add
sarl
cmp
sarb
cltd
out
inc
loopne
mov
pushf
js
scas
or
xchg
mov
in
push
pop
cmp
xchg
pop
iret
push
mov
mull
push
lcall
movsb
sub
adc
inc
cmp
pop
pop
mov
mov
out
mov
lea
xchg
out
push
push
sbb
jge
cmp
inc
mov
pop
sbb
mov
push
cmp
mov
or
lret
andl
mov
inc
ja
cmp
fisubl
fdivrl
add
data16
jns
xchg
cmp
sahf
movsb
js
addr16
jg
pushf
xchg
or
rcrl
mov
mov
or
adc
push
mov
pop
mov
jmp
and
les
inc
cmp
jnp
cmpsb
cli
in
pushf
sbb
add
mov
or
ds
sbb
and
cmp
ja
test
xchg
fs
dec
aas
xor
cmp
or
jb
adc
mov
xorl
test
addr16
cmp
outsl
add
sbb
sahf
push
cmp
push
cltd
inc
xchg
ja
es
in
ja
inc
sub
lret
jecxz
mov
fisubrs
cmp
js
xor
xchg
mov
fucomip
rcrb
sahf
cmp
loope
ja
cmc
add
mov
cmp
cmp
add
ja
int
pop
mov
xchg
mov
mov
ja
repnz
push
and
sarb
xor
or
aas
fcomp
out
add
in
jo
sbb
mov
insb
fnstsw
repnz
mov
sarl
mov
or
and
pop
pop
sbb
jno
adc
cmp
cmp
push
insl
jg
clc
pop
mov
pop
mov
mov
cmp
sub
ja
rcll
stc
mov
jge
mov
ds
sbb
test
loopne
sarl
pop
mov
or
ds
std
ret
add
pop
cmp
pop
jnp
inc
mov
and
adc
cwtl
pushf
jae
add
adcl
mov
xchg
idivb
into
or
jl
ja
aam
andb
imul
add
dec
fadd
test
test
push
cmp
js
pop
stos
jg
cmp
loopne
or
cmp
mov
inc
inc
mov
pop
add
fbld
aas
adc
mov
and
js
pop
add
or
pop
fisubrl
in
or
adc
pop
push
ja
mov
loopne
rorl
mov
mov
jg
inc
xchg
adc
ss
push
adc
sarb
ror
insl
inc
cmp
mov
roll
pop
mov
mov
sahf
out
mov
mov
fiaddl
cmp
mov
pushf
ficoms
push
mov
fnstsw
xchg
test
out
mov
inc
je
or
pop
data16
add
mov
lea
adc
adc
fiaddl
or
aas
sbb
lret
mov
xlat
nop
arpl
pop
repz
push
or
enter
jbe
dec
loope
mov
or
aas
pop
sti
inc
jecxz
push
inc
iret
cmp
mov
mov
pop
jnp
mov
mov
setge
lds
call
xlat
mov
rdtsc
and
xlat
scas
mov
adc
inc
cltd
adc
cwtl
ret
sarb
shrl
sbb
or
pop
adcl
andl
insb
add
je
adc
xchg
std
ljmp
stc
lahf
mov
lds
out
adc
jnp
cmp
and
mov
xor
in
aas
scas
jns
imul
shll
mov
add
rol
mov
mov
mov
dec
xchg
push
jo
mov
pop
stos
pop
test
push
inc
mov
fidivs
mov
add
pop
cld
cs
sbb
faddl
int3
push
into
bound
sbb
ss
leave
push
sub
ret
cmp
insb
pop
xor
push
std
xchg
or
xchg
inc
mov
cmc
ja
clc
mov
pop
je
push
push
pop
sahf
dec
inc
pop
stos
pop
add
cmp
cmp
cmp
xchg
scas
pop
pop
popf
ja
sbb
cmp
insl
push
mov
inc
or
jge
pop
lcall
scas
fidivs
xchg
mov
pop
cmp
xchg
push
pop
jg
cmp
mov
arpl
mov
xchg
inc
cltd
mov
enter
push
mov
xchg
jne
ja
jl
cmp
lea
insb
aas
popa
pop
mov
inc
pop
sbbb
cmp
cmp
out
pop
shll
mov
fadds
loope
cmp
adc
seta
add
inc
pop
adc
ret
jnp
ret
xchg
insb
int
or
or
cmp
mov
push
adc
add
or
pop
lds
js
cmp
movsl
add
loopne
std
mov
das
mov
jnp
cmp
jnp
jl
lods
mov
js
or
jbe
shll
sarl
lea
mov
adc
icebp
cmp
cli
cmp
nop
fwait
xchg
xchg
inc
fwait
jns
popf
pop
jbe
mov
pusha
mov
dec
in
pop
xor
out
aas
mov
clc
btc
scas
mov
cmp
cmp
mov
daa
mov
pop
and
cmp
cmp
cmp
pop
or
inc
mov
pop
clc
push
aas
cli
lret
int
cmp
divb
mov
into
and
roll
pop
add
jns
mov
leave
cmp
inc
fstpt
sub
ret
lds
pop
adc
test
addb
movsb
cmp
aam
sbb
es
pop
popa
ja
and
sbb
jbe
aas
dec
and
push
iret
test
in
sar
in
fs
xchg
sub
lods
add
and
movb
fimuls
repnz
cld
or
push
push
repz
sti
loopne
jmp
add
in
out
cmp
xchg
insb
aam
mov
jl
psllq
cwtl
cmp
cwtl
cmp
mov
adc
xor
cmp
in
scas
fs
movsl
xor
popw
xor
pop
xchg
xchg
pop
incl
mov
sti
jle
cmp
dec
pop
enter
imul
mov
lods
sbb
idiv
das
in
les
cld
in
xor
loope
lock
xchg
shl
add
loopne
sahf
cmpsl
sbb
cmp
adc
push
sbb
adc
xchg
or
mov
pop
bound
pop
mov
xor
sub
pop
ret
add
out
ret
sub
xchg
and
jg
repnz
and
call
jno,pn
sub
dec
ss
lods
pop
adc
leave
dec
and
mov
push
jb
jnp
shl
into
cmp
push
sub
mov
ret
ja
shlb
sub
lods
mov
push
push
and
sbb
lahf
into
pusha
out
inc
dec
mov
ds
fsubrl
lods
bnd
leave
call
pop
pop
pusha
cli
sub
popa
imul
aaa
ljmp
sbb
pop
sbb
cmp
faddl
xor
mov
adc
shll
jo
and
add
loop
add
lret
cmpb
fstp
popa
xor
movups
out
pusha
js
test
iret
js
orb
cltd
xchg
ss
lcall
xor
test
mov
in
jne
shrb
test
das
mov
outsb
dec
xchg
lock
push
aaa
popf
mov
sub
daa
mov
aam
addr16
imul
cmp
pusha
pop
sub
out
add
add
ficompl
mov
es
pop
mov
arpl
sub
xchg
sub
jns
cmp
iret
shll
jns
cmp
out
test
xchg
loope
sbb
jmp
sti
inc
outsl
pop
mov
rcrb
xchg
mov
cmp
arpl
test
nop
lret
test
jmp
xchg
out
inc
mov
push
sbb
dec
add
loope
int
mov
sbb
lcall
pop
add
arpl
lahf
ds
dec
push
data16
push
jecxz
inc
arpl
fcmovnbe
sub
int3
adc
xchg
in
clc
mov
add
mov
roll
ret
dec
pushf
mov
xchg
pop
loopne
mov
mov
fs
dec
leave
test
outsb
faddl
leave
push
imul
mov
cmp
pop
mov
jg
movsb
repnz
ja
add
sbb
adc
mov
test
mov
cmp
bnd
lods
in
clc
mov
jle
aaa
testb
nop
add
fistpll
xor
xor
or
fisubrs
les
test
lods
and
cmp
or
dec
lds
pop
shlb
dec
mov
xchg
inc
or
push
out
cld
pop
dec
int
ljmp
das
jbe
pushf
jl
cmp
mov
sub
cmpsl
or
cmp
pushf
xchg
mov
cmp
jge
mov
push
and
pusha
xor
mov
mov
js
add
mov
pusha
pop
iret
add
mov
dec
shrb
xchg
test
aas
sbb
push
pop
clc
popa
push
and
dec
sbb
sub
mov
lods
test
and
arpl
sahf
popf
fwait
pop
add
call
inc
loope
cmpsb
push
xchg
clc
xchg
push
sbb
mov
or
xlat
xor
inc
int
test
xchg
push
dec
mov
or
inc
fs
lahf
jmp
mov
xlat
adc
jb
sbb
xchg
cmp
mov
in
cmp
mov
mov
mov
in
andl
and
fnstenv
stos
inc
mov
jge
mov
vmread
jns
sti
mov
mov
shl
ja
out
movaps
loope
test
jg
mov
rcrl
jp
cmovs
pusha
xor
pop
loope
iret
fs
daa
cmp
fisubrl
xor
mov
inc
lock
mov
arpl
ss
cmc
gs
fmuls
cmp
test
repz
cmpsl
into
mov
rolb
pusha
mov
pusha
std
gs
cmp
cld
cmp
ljmp
mov
ljmp
push
inc
inc
mov
lods
out
mov
scas
pop
int3
sub
cmpsb
test
into
rclb
ja
adc
aaa
mov
cmp
pop
mov
rorl
xchg
out
cmp
inc
xchg
sti
lret
jle
fistpl
xor
jnp
adc
pop
addr16
test
cwtl
stos
roll
loope
jno
sub
or
or
repz
cmp
mov
and
cmp
int3
pop
sar
mov
stc
outsb
mov
popa
cld
sbb
fucomi
rcrb
sahf
sahf
ja
or
jl
sub
adc
hlt
cmp
adc
gs
mov
xor
loop
pop
mov
cmp
fistpl
sarl
out
mov
xchg
dec
mov
sbb
jmp
icebp
push
loopne
lret
adc
jmp
call
push
mov
loop
cs
mov
jl
data16
gs
dec
mov
pop
ror
clc
inc
mov
xchg
xchg
mov
push
fs
xlat
xlat
nop
outsb
dec
adc
jno
or
movsl
adc
stos
sbb
mov
outsb
in
xchg
sti
adc
repnz
insb
lcall
call
xchg
test
pop
shlb
notb
xchg
out
mov
js
repnz
inc
sub
and
mov
mov
repnz
cwtl
xchg
mov
mov
shlb
xor
mov
jnp
scas
fld
pop
xchg
pop
xorb
xor
cmc
mov
rcl
icebp
sbb
test
sbb
xor
aad
adc
rcrl
or
xchg
scas
sbb
push
js
add
test
repnz
in
test
jb
mov
mov
test
pop
push
andl
sub
pop
sarb
xor
lods
rol
lret
mov
push
adc
data16
xchg
jg
add
mov
xchg
jp
and
pushf
xchg
xchg
lret
sahf
sahf
cmc
mov
stos
out
sbb
nop
call
cmp
sub
mov
lock
fldenv
aam
in
pusha
jl
cmp
and
ja
jo
sub
and
xchg
xor
adc
xchg
jle
jnp
mov
pop
adc
pop
aaa
idivl
jecxz
cmp
leave
jl
pop
test
cmp
push
shl
sbb
xchg
dec
pop
sub
int3
or
push
cmp
dec
mov
pop
bound
sub
xchg
cmc
stos
push
adc
pop
mov
xchg
mov
imul
jnp
test
jne
sbb
jns
call
ljmp
push
loopne
sub
into
jmp
add
test
mov
hlt
aas
mov
fildll
cmpsl
sbb
mov
cmpl
fcmovnu
popa
into
dec
clc
int3
andb
sbb
xchg
xor
cltd
sarb
mov
out
movsb
jb
cmp
sbb
ret
pop
loop
test
cmp
jg
int
bound
jnp
pop
es
sub
dec
cli
jb
out
cmp
or
adc
cld
jl
outsl
dec
test
mov
dec
outsb
movsb
cli
subb
rcrb
cmp
aas
leave
jge
cmp
scas
movsb
pop
dec
stc
xchg
mov
mov
mov
jmp
sbb
movsl
jnp
cmp
cmpl
cmpsb
insb
pop
sub
dec
cmp
and
lcall
testl
and
cmp
and
mov
imul
sbb
in
pop
mov
xchg
mov
scas
jle
sbb
add
out
add
cmp
xor
lahf
xchg
cld
and
mov
out
adc
inc
jp
adc
inc
int3
xorl
ret
adc
cmp
out
push
popa
in
aad
or
adc
jp
cmpsb
dec
out
and
xchg
stos
ret
ficoms
mulb
xor
test
or
cmp
xchg
xchg
add
aad
push
sub
ljmp
setle
sbb
xor
inc
es
jns
out
inc
mov
xchg
dec
cmp
adc
enter
mov
jnp
loop
dec
stos
or
insb
push
adc
cmp
xchg
and
fisttps
or
mov
pop
mov
in
cwtl
ljmp
iret
mov
or
dec
call
add
xor
or
cmp
push
inc
jg
push
mov
jle
divb
push
or
mov
mov
test
push
cmpsb
xchg
and
cmp
mov
inc
push
dec
aad
dec
inc
addr16
sbbl
xchg
popf
in
and
jmp
cwtl
xor
add
and
call
sub
inc
fistl
ret
mov
sti
in
cwtl
aaa
test
adc
shlb
xchg
pushf
std
scas
mov
loop
popa
mov
sub
adc
mov
mov
js
out
test
rcll
xchg
dec
imul
lea
ljmp
fisubrl
mov
arpl
sbbl
mov
pop
cmp
daa
pop
sbb
incl
xchg
insl
js
imul
out
jg
mov
or
sub
rolb
xor
addl
rclb
cs
push
mov
sbb
sbb
fcmovne
call
lods
dec
sub
xor
or
cmc
iret
add
cmc
cli
push
push
out
test
add
iret
fistps
xchg
icebp
cwtl
in
lods
add
loopne
push
xchg
in
jl
push
pop
mov
jae
xchg
dec
or
push
rcrl
nop
push
inc
stos
xor
mov
out
fdivs
js
pop
cwtl
mov
mov
cmp
sub
ret
js
iret
xchg
cmpsl
or
dec
sahf
test
out
mov
xchg
pop
pop
subl
cmp
mov
push
jae
cmp
add
or
ja
mov
popf
pop
cmp
cmp
nop
ljmp
mov
pop
xchg
pop
test
in
lret
andl
push
jecxz
push
in
cmpl
sti
test
das
jge
and
jg
out
mov
cmp
inc
jmp
cmpsl
dec
push
bound
aam
cmc
fdivl
or
popa
pop
or
cli
xor
cmp
cmp
js
adc
das
jmp
icebp
ror
mov
push
aam
xchg
jo
mov
fnstenv
pusha
cmp
test
push
decl
mov
mov
rorb
cmp
lret
push
test
aas
mov
ss
dec
sub
fdivrl
inc
sub
mov
ja
arpl
repnz
fsubl
int3
imul
ss
adc
pushl
push
cwtl
jnp
ds
movsb
mov
jns
adc
adc
inc
insb
mov
movsl
in
pop
sarl
jl
rorl
jnp
pop
xchg
mov
cmp
inc
cmp
sbb
sbb
lret
push
es
adc
push
dec
pop
loop
add
ja
lahf
ljmp
or
rorb
repz
mov
push
in
arpl
push
inc
add
rcrl
adc
xchg
xor
rolb
sbb
cmp
fucomi
mov
cmp
jmp
jge
loop
dec
mov
ja
out
mov
ljmp
or
add
jl
and
push
lea
sub
and
ss
xchg
sbb
xor
jmp
push
dec
ret
out
xchg
rcl
pop
and
adc
ret
aas
mov
jmp
pushl
roll
dec
cld
ss
out
orl
mov
test
and
ljmp
repnz
jnp
inc
cmp
sti
jp
ljmp
pop
fnstcw
xchg
ror
mov
mov
xchg
sub
out
test
leave
xchg
pop
inc
jae
jnp
mov
lret
mov
repz
mov
stc
dec
in
fs
cmp
xchg
int
mov
push
les
jmp
xchg
cmp
and
mov
xchg
in
xchg
add
cmp
or
loopne
sbb
cmp
fildll
test
out
mov
push
out
cmp
cmpsb
pop
push
adc
and
repz
ja
push
xchg
in
roll
push
xor
inc
shlb
ljmp
sbb
jg
adc
dec
jae
shrb
cmp
lahf
dec
mov
adcl
mov
xchg
pop
jne
test
loopne
incb
mov
inc
imul
scas
sub
push
mov
cld
or
sbb
js
imul
jge
rcr
cmp
lods
pop
pop
and
sahf
imul
push
jo
mov
jmp
andb
inc
xor
cli
test
shrl
test
cmp
imul
loope
inc
ret
popa
mov
mov
fcomps
pop
push
jnp
aas
and
lret
mov
mov
xor
pop
int3
sub
dec
movsb
mov
xor
or
sub
popa
js
xor
pop
shll
add
shlb
mov
jge
inc
sbb
clc
call
fmuls
cmpsb
jle
mov
pop
sub
push
adc
shlb
or
popf
nop
out
jnp
mov
shl
shlb
pop
mov
fldenv
ss
in
lods
mov
mov
lahf
mov
daa
pop
jo
mov
dec
push
push
ficompl
adc
cmp
daa
nop
adc
rorb
mov
lcall
insb
adc
dec
idivl
mov
xchg
xor
inc
insl
and
xchg
imull
js
sbb
mov
push
mov
icebp
lock
and
jne
pushf
xchg
mov
push
mov
popf
mov
jmp
inc
jecxz
loop
xor
ret
sarb
mov
jmp
scas
sub
sbbb
inc
ja
and
lods
lea
add
std
ljmp
xor
pop
adc
push
mov
test
sbb
mov
movsl
or
out
jle
out
fwait
rcl
cmc
out
cld
cmp
out
ljmp
mov
ret
dec
movsb
xchg
repnz
sbb
xlat
loop
lock
outsl
mov
mov
test
sub
fmull
inc
sahf
fs
test
xchg
mov
pop
or
dec
sar
lahf
jo
int3
lods
aas
push
lret
test
mov
fxch
sub
jnp
rclb
hlt
xchg
idivb
mov
and
mov
dec
popf
xchg
scas
in
mov
jmp
pop
mov
sbb
test
imul
xchg
lock
xchg
xchg
sbb
and
lahf
jbe
jg
filds
dec
rcr
aam
xchg
sarl
adcb
insb
cmc
adc
add
lods
jge
out
push
push
fcoml
js
cld
lret
adc
jbe
leave
rcr
insb
inc
xor
sub
sbb
xchg
fwait
mov
test
test
add
sbbl
cmpsb
jg
test
cmp
out
mov
daa
sbb
mov
mov
mov
ja
shr
or
sahf
add
cltd
out
jnp
mov
repz
or
push
jecxz
loop
jmp
mov
sbb
imul
in
mov
add
mov
fimuls
mov
jae
xor
dec
jge
scas
movsl
stos
mov
in
xchg
testb
loope
inc
pop
cmp
pusha
ret
fldl
jbe
xor
sbb
test
repnz
mov
mov
inc
pop
adc
mov
sahf
mov
enter
cld
cmp
mov
test
pop
cmp
fsubs
mov
dec
add
test
jnp
es
cmp
and
add
inc
iret
jo
inc
sub
int3
push
mov
es
cs
jl
leave
push
lcall
cmp
xchg
into
cmpsb
movsb
xchg
pop
dec
pop
jbe
shl
enter
adc
xor
adc
aaa
js
push
xlat
lcall
mov
sub
adc
shrb
pop
out
fbstp
fnstenv
mov
sarl
adc
cmp
cmpl
pop
or
mov
in
das
add
notb
repnz
repnz
iret
addr16
cltd
sbb
paddq
mov
sub
shrb
jmp
mov
fwait
dec
sub
popf
and
or
dec
out
stc
into
loop
aam
subb
cmp
push
mov
lods
andps
inc
xchg
dec
xor
jns
sarb
sub
cs
mov
and
out
pop
push
movsl
test
xchg
mov
xor
ss
test
cli
inc
cmp
jg
sbb
sbb
mov
xchg
mov
dec
orb
fmulp
push
fcompl
arpl
xchg
pushf
push
ds
rcrl
popf
inc
jns
and
je
stos
adc
lcall
out
mov
cltd
cmp
scas
dec
movb
push
pop
ss
test
fwait
rep
movsl
mov
xchg
sbbb
xor
jnp
adc
sbb
iret
pop
xor
lret
rol
mov
fwait
test
mov
jbe
jns
out
xchg
fdivs
jo
stc
pop
add
into
xchg
jb
aad
xchg
in
xchg
mov
sbb
jge
xchg
cmp
test
mov
arpl
stc
icebp
js
iret
mov
or
mov
inc
or
xchg
loop
xchg
cmpsl
dec
sbb
cmp
int3
add
loope
xchg
sbb
fs
rolb
sar
cmp
mov
cmc
leave
and
mov
loop
daa
and
xor
sbb
add
sbb
sbb
sbb
inc
jbe
int3
std
pop
scas
ficomps
fcmovu
sub
data16
roll
adc
mov
mov
xor
data16
cltd
cmpb
pusha
data16
push
pop
gs
inc
fidivrs
cmp
adc
inc
push
add
dec
lea
fisubs
stc
icebp
add
adc
popa
mov
int3
sbb
ds
pop
sub
test
or
adc
jno
cmpsl
pusha
mov
sbb
rcr
xor
adc
dec
mov
mov
out
insb
ja
out
scas
mov
mov
mov
dec
out
mov
jb
and
into
sub
ja
inc
test
clc
aaa
cld
mov
sbb
jmp
test
in
sbb
cmp
popa
push
icebp
sbb
imul
cli
xor
mov
andl
mov
sub
lahf
xchg
scas
pop
cmp
pop
add
sti
call
enter
push
xor
push
xor
mov
mov
add
rcr
mov
idiv
and
cmp
mov
outsb
mov
out
data16
cmp
inc
dec
push
dec
data16
xor
test
jle
jae
mov
mov
mov
movsl
xchg
leave
xchg
imul
xor
out
aaa
mov
xchg
aad
popa
adc
roll
pushf
xchg
rorb
mov
sbb
inc
mov
icebp
gs
pushf
es
icebp
test
test
out
lahf
mov
cli
dec
sti
insb
lods
cmp
jl
leave
sbb
std
popf
mov
pushf
xor
xchg
insl
cmp
sbb
xchg
and
arpl
inc
cltd
mov
aas
xchg
jmp
mov
aam
sub
inc
add
jecxz
aad
sbb
inc
pop
and
adc
adc
pop
jmp
pushf
out
mov
leave
and
lahf
fcoms
cmp
xchg
icebp
lret
fcoml
or
mov
stos
adc
sbb
shll
mov
sbb
xchg
mov
dec
or
pop
sub
mov
into
mov
push
push
fimull
out
lods
cmp
pop
mov
test
sub
mov
jnp
rclb
loope
pushf
adc
mov
aas
cmpsb
int
mov
les
cmp
imul
lcall
xor
cmp
pusha
cmpsb
scas
cmpsb
sahf
adc
data16
push
xchg
ss
add
dec
push
push
jecxz
jo
leave
and
out
and
mov
push
jbe
arpl
mov
jg
and
jmp
sub
inc
ror
xchg
xchg
movsb
xorl
adc
sbb
and
mov
clc
xchg
xchg
mov
sahf
xorl
pop
cltd
sarb
add
inc
pmullw
inc
add
fwait
push
lcall
sbb
push
sub
icebp
push
adc
and
inc
xchg
jmp
ror
bound
aas
and
push
sub
pop
mov
push
xchg
xchg
in
jae
pushl
test
mov
lds
jne
ja
push
mov
cmpsb
dec
push
jl
jns
lahf
xchg
cmp
push
add
inc
dec
mov
and
or
sub
jle
mov
dec
in
mov
sahf
jno
fiadds
jmp
aam
pop
jmp
mov
lds
push
enter
cli
dec
int3
jnp
js
jecxz
jnp
mov
dec
cmp
loop
inc
adc
mov
jecxz
adcl
out
cld
into
sbb
int
mov
sti
pop
fwait
sub
data16
xchg
sahf
xchg
push
outsl
push
fdivs
inc
daa
xchg
xor
cmpsb
ror
test
lret
mov
test
fldenv
cmp
jb
test
xchg
xchg
add
fsts
mov
mov
fs
test
cmp
fcmovne
clc
add
xchg
sar
jg
push
iret
or
mov
shrb
les
mov
add
push
rcrb
xlat
jns
divb
jg
fadds
iret
mov
cmp
cmp
mov
xchg
mov
mov
mov
jge
js
jmp
inc
mov
xor
mov
mov
fwait
and
cmp
and
cmpsb
pushf
out
pop
orb
mov
push
dec
test
cmp
outsl
dec
and
out
lods
cmp
mov
pushf
cmp
arpl
push
hlt
and
cmp
stos
mov
push
pusha
loop
inc
test
dec
pop
mov
roll
lods
loop
dec
lcall
add
test
jl
and
and
in
inc
xlat
movsb
popf
jns
and
xchg
orl
dec
mov
outsb
pminsw
push
in
mov
push
adc
sarb
out
fidivrs
mov
pop
adc
addl
sbb
xor
xchg
mov
mov
add
push
adc
sbb
in
add
std
xchg
inc
push
dec
or
sub
mov
ret
sub
cmp
lahf
ret
pop
dec
pushf
xlat
lahf
bound
push
les
fsts
xchg
lahf
out
std
repnz
pop
sbb
das
in
mov
mov
push
pusha
cmp
pop
xor
sub
push
mov
repnz
mov
or
out
jg
sahf
cmp
pop
int
xor
cmp
pop
xchg
fnsave
and
push
and
and
rcrb
daa
shlb
adc
mov
int
arpl
stc
lea
jmp
icebp
sub
cmp
jg
xchg
cmp
addr16
inc
test
mov
cld
xor
test
clc
mov
dec
cmp
aam
enter
mov
sbb
fdivrs
push
xchg
jnp
dec
jg
aas
sbb
push
pop
loopne
fiadds
xsave
jbe
sti
inc
popa
push
out
sub
adc
or
in
int3
cwtl
push
ss
test
cld
pop
inc
pop
pop
mov
jg
inc
jl
sub
push
aaa
sub
mov
adc
pusha
loopne
stos
stc
sbb
dec
ja
xchg
pushl
sbb
loope
cmp
iret
inc
add
out
pop
xchg
add
xor
sbb
fcmovnbe
fcmovnb
xchg
cmp
inc
imul
ja
mov
or
cltd
test
xor
mov
out
mov
ja
and
aas
hlt
je
jne
sbbb
xor
inc
fadd
cltd
aas
iret
nop
sbb
pop
in
test
pop
ds
sbb
clc
xor
aaa
xor
sbb
insl
fcoms
pop
enter
addr16
rcr
xor
adc
je
jl
or
and
sub
jae
in
repnz
ja
push
in
in
pop
xchg
inc
pop
mov
and
adc
mov
daa
jmp
xor
mov
test
ss
dec
pop
mov
sarb
fimuls
ljmp
push
xchg
jmp
or
inc
in
mov
les
hlt
mov
adcb
fwait
mov
sahf
xchg
or
push
xlat
pushf
or
insl
pusha
ficoml
es
and
xor
daa
mov
mov
out
fidivs
push
jmp
add
jno
sub
or
aam
fdivr
pusha
out
fiaddl
mov
jbe
xchg
in
cld
sub
inc
sbbb
mov
xor
jo
jae
icebp
ds
cmp
push
fucomip
pop
shlb
imul
aaa
mov
sbb
mov
pop
cld
xor
mov
ja
cmp
mov
pusha
pop
aaa
dec
lock
xchg
xlat
fwait
icebp
xchg
mov
cli
cmp
clc
insb
inc
adcb
repnz
dec
ss
and
sub
js
outsb
jl
xor
sahf
mov
stos
push
cmp
xchg
test
rol
inc
adcb
lea
mov
mov
cmp
lods
in
test
popa
stos
pop
cltd
fdivrs
subb
repz
cld
cmp
mov
pop
leave
push
adc
fld
fidivl
scas
jae
jae
push
sbb
xchg
jne
sbb
icebp
cli
jg
notb
xchg
int3
test
bound
scas
mov
pop
mov
xchg
cmc
imul
inc
add
xor
stc
mov
push
jnp
ret
and
xchg
fbld
scas
push
test
cmp
sub
add
test
subl
jb
xor
inc
pop
test
sub
aas
into
push
push
subb
xor
out
lahf
in
mov
inc
jnp
push
adc
jecxz
out
popa
into
pop
sub
rcll
gs
cmp
loopne
lock
roll
pop
sbb
add
cmp
ss
scas
jmp
or
out
sub
jno
mov
inc
add
loop
out
dec
xchg
push
fwait
inc
jb
mov
nop
and
cmp
out
adc
mov
mov
cmp
fdivl
fs
scas
xor
mov
inc
icebp
xchg
xchg
push
mov
cmp
sub
test
pushf
sar
inc
ror
jno
jl
lea
aaa
lret
cmp
pop
icebp
xor
mov
pop
mov
inc
xchg
stos
cmp
mov
filds
or
xchg
arpl
out
stos
mov
loop
jo
nop
icebp
test
bound
shlb
subb
movl
icebp
mov
mov
out
mov
test
pop
inc
stc
test
aaa
mov
xchg
addr16
xor
sti
inc
test
pop
and
in
fcoms
mov
testl
cmp
jne
stos
in
and
dec
inc
rcrb
arpl
push
pop
leave
sbb
shr
shll
sub
mov
xchg
push
clc
mov
out
js
fs
push
pop
ja
test
lcall
fidivrs
daa
xor
movsb
lahf
cmp
xchg
pop
test
push
je
xchg
add
jl
cli
fwait
aad
pop
popa
addl
sbb
sub
xchg
cmpsb
cltd
mov
push
fisttps
push
jno
out
enter
mov
cmp
loopne
dec
pop
mov
pop
sbb
xchg
imul
fs
lret
mov
sub
loopne
scas
mov
sbb
sbb
push
imul
cmp
cmp
outsl
jns
fs
iret
subl
test
cmpsl
sub
add
es
stos
movsb
push
mov
fidivrl
cmp
pusha
push
je
imul
and
xchg
push
lods
adc
mov
jle
cmp
jge,pt
ror
jbe
mov
std
dec
adc
sahf
cmp
incl
cmp
je
dec
or
test
testl
xlat
jbe
in
rolb
aad
js
sub
fwait
sub
mov
mov
xor
inc
xor
mov
scas
cmp
imul
test
outsb
neg
in
lret
inc
adc
sar
push
orb
push
fidivs
jnp
xchg
xchg
test
cmp
pop
jp
jmp
sbb
add
test
pushf
and
bound
dec
mov
sahf
sbb
push
leave
mov
mov
jbe
jns
pop
enter
scas
cmp
pop
repz
push
mov
or
negl
push
mov
xor
push
add
mov
xchg
cltd
push
jno
ds
mov
or
icebp
xor
and
inc
cmp
mov
out
xchg
out
mov
cmp
or
sbbl
jno
mov
lods
pop
je
mov
enter
ss
jbe
movsb
mov
loopne
icebp
mov
out
mov
push
xchg
xchg
sub
mov
fildl
test
dec
cmp
arpl
fdivl
pop
sbb
pop
mov
pop
pushf
out
dec
push
jmp
sbb
ss
test
xor
mov
push
arpl
loopne
arpl
inc
jp
data16
sbb
jg
push
fsubrp
jp
xor
outsb
clc
jae
mov
loope
cli
add
and
fldenv
leave
test
hlt
xchg
iret
add
shr
jno
xchg
inc
leave
add
jg
loope
pop
das
pop
mov
scas
clc
cmp
out
fidivrl
inc
mov
push
mov
imul
insb
mov
mov
mov
adcl
aas
mov
cmp
test
pop
pop
aam
aam
xor
scas
aad
pusha
pop
mov
popa
mov
cltd
test
push
push
xchg
add
adc
iret
cmp
imul
in
fisubrs
pop
icebp
xchg
add
push
insl
lds
mov
fimull
test
gs
out
jl
int3
sbb
dec
and
sbb
rorb
aaa
add
pop
sbb
movl
push
fnstenv
inc
test
dec
xchg
imul
mov
xorl
nop
jnp
xchg
loopne
jp
loopne
cmp
pop
push
or
fadds
ret
sbb
mov
repz
movsb
push
push
adcb
mov
add
popf
inc
push
xchg
cmp
jmp
sarb
lods
push
pop
and
push
es
push
cmpsb
es
lea
arpl
xor
mov
rcrb
mov
mov
inc
xchg
sbb
cmc
xchg
xor
mov
cmp
mov
fs
insb
cmp
scas
xlat
mov
in
lahf
and
adc
rcrb
cs
push
test
lock
lods
out
call
aad
jmp
xchg
mov
js
lock
fsts
add
test
ret
leave
mov
faddp
cmp
sub
int3
sbb
push
jle
outsb
sbb
mov
test
jno
fstpl
xor
add
xchg
xchg
mov
xchg
lret
mov
jnp
dec
fdivs
mov
push
mov
test
push
xor
mov
cmc
repnz
out
test
call
aaa
pop
inc
ret
xchg
add
xor
xchg
mov
pop
leave
mov
popa
mov
out
xchg
mov
push
xchg
lods
into
sbbl
push
sub
jb
cli
mov
inc
je
lock
sti
or
jne
int
mov
iret
cmp
movsb
sub
cwtl
aaa
or
stos
hlt
gs
and
outsl
mov
and
cs
or
daa
pop
imul
jae
add
xorb
lret
repz
fyl2xp1
sub
pop
inc
pop
test
push
inc
fs
pop
cmc
push
hlt
push
xchg
test
shlb
je
dec
and
xlat
das
xor
pop
xchg
lods
je
cmp
insb
cmp
pushf
lcall
mov
lock
pop
insb
push
jle
mov
nop
pusha
xchg
dec
lcall
addb
shrl
jnp
loop
outsb
not
bound
sbb
pop
enter
mov
mov
push
xor
adc
inc
xchg
cmp
and
mov
sbb
flds
out
mov
xchg
pop
cmc
mov
xchg
out
adc
add
push
test
int3
pop
mov
inc
sub
jp
inc
test
mov
out
xchg
in
cmpsb
add
je
or
fildl
cmp
mov
movsl
in
jo
sbb
shrl
in
dec
add
pop
test
sarb
mov
xchg
jb
movsb
mov
ja
mov
idiv
test
mov
test
je
pop
insb
test
mov
push
std
test
repnz
pushf
xor
aas
dec
lcall
xor
int3
add
loopne
pop
in
out
xchg
add
stc
hlt
jns
jne
mov
loope
xchg
ljmp
xchg
lock
xchg
and
and
add
ret
ja
or
pop
mov
mov
test
lods
arpl
push
dec
mov
jo
push
inc
stos
push
cmp
pop
xchg
mov
cmc
fimull
sub
out
pop
mov
push
mov
pop
sub
add
lds
out
push
mov
arpl
lods
push
jnp
push
ds
or
jp
xchg
pop
adc
test
mov
enter
lcall
ret
xchg
and
shrl
insb
sahf
xchg
loope
sahf
xlat
jo
loop
xchg
scas
jns
jl
mov
cli
dec
call
xor
test
push
stos
mov
in
repz
add
cmp
notb
adc
lods
scas
jle
cmpl
sub
sbb
insb
iret
int
inc
int
or
jne
cmp
je
pop
fcmovnbe
or
mov
xchg
xor
jo
add
dec
aaa
ja
aam
or
xchg
cs
inc
mov
cmp
xchg
push
adc
cmp
and
ret
mov
sbb
xor
jp
aam
or
and
jno
jno
mov
mov
and
pop
push
mov
adc
mov
cmp
rclb
jo
push
outsl
test
dec
pop
xor
imul
shr
sarb
add
fs
mov
xchg
mov
mov
ljmp
jl
leave
add
je
add
and
cmc
scas
popa
pop
xchg
rolb
fdivrs
sbb
leave
jbe
push
cwtl
jns
mov
nop
xchg
dec
movsb
cmp
or
mov
shlb
inc
pop
add
int3
aas
xchg
loopne
xchg
test
mov
xor
nop
or
cmp
sub
inc
sbb
push
sub
test
jge
into
mov
cmp
push
xchg
mov
add
cmc
xchg
adc
cld
pop
pop
arpl
cmp
xchg
out
xor
std
add
cltd
mov
and
lds
xchg
lock
inc
mov
cmp
ds
out
xchg
xchg
call
fiaddl
mov
fldl
or
push
aaa
imul
ret
xchg
cmp
notl
cmp
iret
pop
mov
jp
in
pop
shr
fnstcw
add
fstpt
and
mov
add
add
data16
cmp
inc
fwait
sbb
sbb
push
enter
or
push
jl
sbb
imul
lret
push
cmp
xor
outsl
ds
repz
imulb
xchg
sub
ljmp
fwait
cmp
jns
sbb
sbb
rorb
pmulhw
stc
adc
pop
fdiv
jno
mov
and
sbb
dec
and
push
inc
or
add
mov
dec
arpl
cmp
sti
dec
mov
into
mov
mov
movsb
ss
lea
sbb
test
cmp
mov
cmp
out
das
lcall
inc
push
pop
inc
xchg
popa
aas
xor
iret
mov
jg
pushf
dec
add
xchg
scas
test
inc
fwait
arpl
xchg
imul
scas
push
sar
add
test
scas
and
add
and
ret
not
mov
fdivr
sbb
flds
popf
xor
or
and
cld
arpl
xchg
aas
test
push
jo
jp
testl
call
insb
push
pop
mov
into
cld
mov
out
rcrb
clc
mov
les
mov
or
jmp
inc
adc
ja
pop
out
insb
xor
inc
mov
cmc
jmp
iret
cmp
jnp
les
xchg
shrl
and
pop
iret
stc
push
pusha
in
xor
aad
xchg
mov
leave
and
push
jmp
out
stc
jl
loope
test
cmp
dec
into
jmp
cs
leave
ss
inc
pop
cmp
sub
mov
fcmovne
xchg
mov
das
out
sbb
in
dec
or
cmp
mov
push
cmp
stos
and
out
fs
push
dec
cmpsl
out
xor
xchg
jg
out
pusha
mov
inc
jl
js
bound
repnz
pushf
sbb
xor
popa
ds
xchg
adcl
bound
sub
les
pop
sbbb
or
mov
in
push
aas
or
out
push
xchg
dec
sub
out
pop
lods
jge
push
aam
xchg
es
xchg
xor
andb
inc
pop
ja
mov
out
icebp
and
cmc
or
mov
std
or
rcr
jp
cld
sbb
pop
jbe
jp
mov
lods
std
sbb
xor
xor
arpl
adc
jb
mov
mov
fs
cmp
jle
inc
pop
add
cmp
or
iret
ja
mov
orb
mov
subb
aam
outsb
cmp
pop
mov
fbld
lods
icebp
les
shll
and
leave
les
inc
js
adc
mov
xchg
adc
mov
push
xchg
insl
into
loopne
xchg
pop
lods
dec
jle
mov
add
jno
repz
lods
fcomps
ret
mov
jbe
cmp
dec
loope
xchg
loop
xor
xor
clc
or
cmp
lcall
xor
xchg
sbb
arpl
popa
or
int
cmp
push
test
in
shrb
aas
iret
push
das
sub
pop
in
xor
lret
bound
jb
add
dec
loopne
sbb
cmp
sub
aaa
push
mov
iret
xchg
mov
inc
mov
xor
inc
and
mov
mov
inc
clc
mov
sub
add
ljmp
mov
aaa
dec
mov
pop
mov
cmpb
or
icebp
lret
in
or
imul
lret
faddl
pushl
push
jl
dec
xor
jns
jo
dec
insl
test
outsl
cmp
fndisi(8087
or
shll
mov
push
sbb
repz
add
aas
dec
xchg
aam
jp
cmp
pop
fs
push
sub
push
mov
jecxz
movsl
outsb
mov
test
aaa
jp
xorl
outsl
fcomp
out
mov
xchg
scas
xor
push
mov
loopne
sub
xchg
std
stos
pop
xchg
xchg
adc
mov
ficoml
mov
jge
adc
pop
push
or
andl
jp
cmpsl
adc
insb
addr16
xorb
loope
mov
pushf
cmp
cmp
or
popf
jb
daa
mov
push
push
movsb
in
sbb
test
in
push
sub
es
cmc
sbb
test
aas
push
adc
jbe
and
mov
rolb
pop
sbb
jg
cmc
sbb
lahf
loopne
out
orb
xchg
sub
clc
dec
mov
push
aaa
out
pop
jno
iret
dec
outsb
clc
jmp
popa
js
arpl
cmpsl
test
das
cmp
or
loopne
mov
xor
cltd
sub
outsl
addr16
addb
push
jmp
inc
fdivp
adc
sbb
sti
outsl
fistpll
std
addb
mov
lds
mov
mov
pop
stos
mov
lods
mov
mov
ret
movzwl
inc
xchg
popaw
lret
sub
mov
xor
fisubl
inc
cmpsb
jne
cmp
mov
pop
mov
xor
test
rolb
push
bound
lret
sub
subl
xor
cltd
lret
es
inc
in
sub
outsb
scas
or
cmp
cld
inc
sub
push
mull
lock
dec
je
mov
lods
dec
cmp
or
push
and
cli
ja
xor
test
cmpsb
pop
push
nop
loopne
cs
cmp
dec
les
mov
cltd
mov
inc
xchg
jnp
shrb
cmpsb
rolb
mov
sahf
ret
adc
sub
ret
iretw
aas
cmp
lret
pop
scas
movsb
cs
das
xchg
mov
or
cmp
and
and
jno
mov
sbb
adc
pop
or
push
in
negl
jns
cltd
pushf
mov
sbb
fadds
int3
sub
jbe
xchg
inc
fdivp
lret
mov
cmp
add
aas
mov
fisubl
mov
leave
jl
ja
sub
loop
jecxz
sarb
jle
sbb
mov
cmp
mov
nop
mov
mov
inc
add
add
add
stc
out
inc
rorb
mov
mov
in
sub
fcomip
outsb
mov
mov
xchg
ja
mov
sub
jp
adc
xchg
xor
addr16
das
in
sbb
jp
clc
test
sbb
je
push
shlb
sub
test
cmpb
pop
xchg
cmpsb
mov
cmp
lds
cmp
cmp
rol
mov
sti
add
mov
mov
call
loopne
adc
and
movsb
mov
test
adcl
mov
in
popf
inc
sub
adc
lea
inc
xchg
in
shlb
arpl
push
test
popa
xor
cmc
jecxz,pn
imull
cld
out
lods
inc
out
shrl
mov
jo
cmp
mov
adc
dec
jge
fs
add
popf
addr16
cwtl
xor
mov
lock
sbb
hlt
divb
pop
mov
out
leave
shl
push
mov
aam
outsb
rclb
mov
cs
inc
xchg
inc
lea
cmp
out
ret
loop
incb
nop
fwait
jnp
sub
cmc
sarl
add
and
fcmovnu
repnz
add
adc
push
mov
ljmp
dec
sub
sub
pop
sbb
push
xorb
jns
pop
shrl
in
xor
inc
sub
pop
jbe
xor
cmp
push
jge
cmp
xlat
out
mov
sbb
inc
and
fucomp
and
mov
mov
pusha
jmp
cmpsb
sbb
lahf
outsl
pop
add
lea
cmp
mov
bound
pop
clc
dec
add
loope
cmp
fdivrs
or
xchg
jg
daa
loopne
or
or
stc
mov
repz
stos
dec
out
arpl
fcmovbe
jg
push
mov
mov
pop
cwtl
mov
loop
cmpsb
inc
mov
fs
icebp
jnp
pop
enter
jmp
imul
mov
inc
pop
cmp
cmp
jp
xor
icebp
mov
push
xchg
out
pushf
loop
cli
and
ja
or
imul
xchg
inc
add
cmp
lock
roll
pop
mov
das
test
cwtl
push
movsl
inc
imulb
out
out
sub
call
divb
aaa
mov
insb
mov
ret
sub
shr
adc
xlat
flds
cmp
mov
out
lds
test
shlb
hlt
push
cmp
xor
iret
pop
sarb
repnz
shlb
ds
ds
shll
xchg
jg
sbbb
xlat
imul
push
mov
in
xchg
pop
pushf
sbb
test
loop
sbb
adc
xchg
sarl
ja
fwait
adc
dec
mov
pop
cmp
gs
in
js
push
stos
loop
cmp
stc
rol
roll
adc
sbb
ss
daa
lahf
cmpsl
ja
outsl
add
loop
testb
jns
movsl
inc
popa
xor
sub
add
push
push
jl
sub
adc
inc
mov
cwtl
cmp
loop
popa
leave
shlb
data16
movsl
insb
and
insb
adc
inc
adc
aas
int
add
stos
fwait
negb
mov
lods
les
icebp
mov
jmp
out
lret
mov
loop
pop
enter
mov
push
int3
jmp
sub
xchg
sbb
ja
ret
or
aam
sbb
push
pop
aam
inc
pop
and
cmpsb
shr
cmp
pop
pop
scas
xlat
and
std
negb
sub
aad
pop
aas
mov
xchg
add
xor
add
inc
in
pop
add
cmpsl
sbb
jmp
jp
jmp
cmp
adc
pop
cmp
cmp
outsl
fnsave
push
inc
and
push
repnz
lods
cmp
loope
add
xchg
mov
xor
jns
mov
jb
leave
lock
addr16
xorl
pop
ret
xchg
mov
inc
xchg
into
sbb
mov
sbb
pop
jecxz
add
aad
movsb
sbb
fsubrl
leave
aam
push
lahf
lods
int3
push
mov
movsb
in
out
xchg
xor
mov
mov
std
sub
jno
stos
add
and
dec
xor
out
mov
xor
mov
cmp
xchg
pop
dec
lea
fdivl
or
ja
or
xor
clc
add
xor
js
imul
add
sbb
push
cmp
mulb
stc
add
jl
mov
push
xchg
daa
sbb
dec
add
test
sub
mov
stc
inc
xchg
or
mov
ljmp
inc
test
push
lea
jmp
fldenv
call
adc
int
scas
mov
pop
and
sub
adc
pop
adc
pop
test
mov
dec
das
addb
xchg
or
mov
loop
inc
push
ds
mov
ret
rcrb
inc
js
test
pop
and
or
fdivrl
movsb
in
sbb
cmc
and
mov
cwtl
sub
jne
jb
or
test
mov
push
cmp
out
mov
push
xor
xlat
or
mov
push
mov
push
inc
outsb
out
inc
addl
loope
ret
pushf
xchg
jl
ss
sti
mov
nop
mov
lahf
sahf
add
daa
mov
test
addr16
xchg
or
mov
jle
mov
pushf
pop
test
fsubrs
idiv
pushf
add
adc
push
faddl
dec
xor
mov
cmp
sbbb
mov
push
out
ja
lret
cmp
std
mov
xor
add
xchg
sarl
add
adc
lahf
shr
lods
mull
cmp
lcall
push
imul
xor
mov
cmp
mov
pop
movsb
bswap
test
out
jmp
icebp
inc
cmp
add
adc
cmp
xchg
les
inc
out
mov
push
les
sub
mov
jo
nop
test
mov
pop
inc
scas
xor
pushf
lret
sbb
sbb
in
sahf
idiv
mov
in
sbb
jbe
scas
stos
sbb
xor
xor
cmp
ss
cmp
xor
mov
lods
repnz
add
push
repz
imul
subb
cmp
ret
scas
xchg
dec
ds
jg
mov
clc
or
sbb
xor
mov
inc
jns
inc
cmp
ret
pop
inc
insl
or
scas
divl
xorb
out
es
inc
or
das
push
jns
hlt
dec
rcll
jno
fcompl
cmp
add
scas
jmp
inc
mov
push
add
sahf
jne
leave
jl
inc
pop
push
and
jg
lods
push
orl
movsb
test
clc
sbb
push
test
sbb
mov
adc
aas
mov
cmp
sahf
pop
xchg
addr16
cmp
sti
rclb
dec
xchg
cmpsb
repnz
sub
adc
test
mov
jne
xchg
shl
xor
mov
insl
leave
insl
cmp
fistps
gs
pop
cmp
sahf
xchg
and
addr16
push
jo
push
fbstp
xchg
arpl
scas
lret
mov
pop
mov
cltd
jbe
xchg
out
ja
loop
sbb
pop
cmp
sbb
faddl
arpl
sbb
lahf
roll
aam
sahf
cmp
add
ficoms
xchg
cmp
adc
cli
call
mov
or
mov
add
push
cmc
pop
sbb
xor
inc
inc
test
dec
mov
or
inc
imul
enter
mov
cli
jmp
add
xchg
mov
mov
mov
sti
nop
mov
xchg
cmp
repz
jmp
xchg
dec
or
sbb
pop
xchg
aas
rolb
int3
xchg
popfw
aas
inc
xor
dec
outsb
lods
inc
dec
xlat
iret
repnz
notb
iret
xor
xor
repnz
cmp
push
mov
cs
out
popa
rcrl
imul
dec
jnp
scas
test
dec
jnp
mov
fs
lods
pop
xor
sti
loop
push
jg
ds
inc
pop
test
icebp
stos
pop
insb
cwtl
fwait
dec
ret
xchg
push
addl
push
es
addb
inc
dec
popf
sbb
into
cmp
adc
loop
mov
ss
shll
inc
pushf
pushl
sub
shl
jae
test
enter
movsb
sub
int3
hlt
aad
cmp
out
fldcw
insb
arpl
pop
test
fistpll
add
mov
cmp
and
sub
or
sbb
cld
xorb
rcl
mov
test
mov
sbb
mov
jecxz
pop
test
mov
aad
mov
cmp
fwait
xor
dec
pop
out
adc
das
sahf
or
inc
push
ja
call
stos
mov
stc
xchg
int3
repz
xor
cs
lock
push
mov
lret
sarb
or
or
xchg
xor
add
inc
icebp
xchg
test
cmp
sbb
insb
mov
dec
xchg
sub
jb
ja
mov
data16
sub
xor
cmpsl
xor
mov
cmp
mov
rcll
mov
popl
insl
mov
mov
push
mov
xchg
stc
mov
xlat
cvtdq2ps
jecxz
rcrb
pop
iret
sbbl
xlat
dec
and
push
aaa
or
xor
xchg
xchg
pushf
pop
fs
xor
cwtl
add
mov
outsl
clc
cmp
mov
movsl
ja
xchg
out
aas
mov
sub
imul
test
sahf
and
mov
popl
jle
mov
push
sbb
push
jbe
aaa
idivl
out
shl
sub
rorb
in
dec
mov
out
ficomps
fdivr
pop
inc
xor
adc
mov
push
dec
cwtl
int
movsb
xlat
add
dec
xchg
mov
sbb
test
mov
mov
jno
test
fcompl
gs
add
dec
pusha
mov
mov
out
inc
fdiv
or
sub
mov
aas
out
jae
out
xchg
orl
adc
pop
scas
sbb
sbb
inc
inc
push
enter
in
jle
cmpsl
push
scas
test
adc
movsb
popa
sub
cmp
cli
dec
ja
xchg
xor
fsubrl
movsl
and
aam
mov
xor
or
in
xor
adc
fadd
and
mov
add
or
iret
sarl
pop
nop
add
fwait
mov
jno
inc
mov
inc
inc
pushf
cmp
idivb
push
outsb
test
cmp
jl
sar
add
push
add
notl
mov
cmp
loopne
add
cmc
mov
mov
mov
sbb
and
in
ret
cmp
add
jg
inc
xor
mov
or
es
fiadds
lcall
jp
ss
sub
and
push
mov
adc
gs
adc
push
adc
sub
xchg
mov
cs
pop
push
es
push
inc
pop
stc
rcl
mov
lds
inc
xchg
adc
jg
movsl
push
add
adc
orl
fadds
sti
or
shld
fcmovnu
sbb
lcall
cli
mov
cmc
mov
data16
arpl
mov
jo
rol
mov
push
jmp
pushf
cmp
inc
sbb
xchg
test
mov
mov
add
cmp
mov
mov
and
xor
jg
xchg
sub
jecxz
cltd
adc
jge
sbb
push
movsl
in
andb
sar
or
call
or
xchg
add
inc
mov
or
daa
ja
mov
dec
adc
rolb
lret
mov
fidivs
stc
xchg
rcrl
stos
push
adc
push
dec
xchg
or
xor
ds
mov
pop
mov
cs
rol
popa
lret
xor
in
xchg
dec
mov
push
in
dec
pop
test
cwtl
xor
mov
testl
or
gs
loop
fs
xrelease
add
arpl
push
adc
gs
sub
sbb
mov
push
bound
pushf
pop
pop
sub
rcll
mov
loopne
int3
lahf
repz
pop
adc
call
ja
test
inc
data16
fwait
sti
test
adc
jl
add
test
add
mul
inc
cmp
movsl
sahf
jp
xor
stos
jmp
push
test
sbb
adc
loop
js
test
mov
aaa
flds
fld
jle
in
jge
dec
adc
add
daa
loopne
test
cli
or
jns
rcl
repz
fcoml
pop
je
or
push
inc
xchg
imul
mov
add
xchg
loope
fdivl
sbb
je
push
mov
aaa
mov
nop
adc
and
mov
dec
negl
adc
jecxz
pop
inc
cmp
jae
stos
cmpsb
add
xor
push
mov
cmp
mov
xchg
sub
shlb
mov
loop
leave
inc
and
mov
xchg
dec
mov
add
out
mov
in
lret
xlat
or
adc
jl
popf
add
ret
imul
popa
fcmovne
push
test
mov
sbb
inc
fcmovu
aas
ds
push
xchg
push
scas
jo
mov
adc
ja
mov
sbb
push
in
mov
ss
xor
js
imul
into
out
mov
xor
sbb
mov
push
dec
nop
out
xchg
pusha
xor
mov
adc
ja
jp
sub
test
data16
mov
jle
mov
xor
or
shrb
lcall
xchg
shl
xchg
dec
btc
test
add
push
les
ret
xchg
ror
sti
cmpl
inc
lahf
push
sub
mov
mov
and
sub
and
xchg
dec
out
add
scas
test
sbb
mov
fsubrl
sbb
mov
sbb
shlb
int
outsl
out
pop
dec
iret
xor
jecxz
push
test
xor
movsb
shrb
pop
or
xor
mov
dec
xor
inc
mov
andl
jl
dec
xor
shrl
adc
jae
jp
pop
sub
dec
adc
jo
sbb
into
pop
push
lea
hlt
arpl
push
cmp
sti
pop
mov
lret
dec
pop
fistl
mov
cwtl
adc
pop
inc
andps
sub
dec
cmp
adc
std
jnp
ja
sar
lret
adc
cmpsl
lock
inc
and
mov
jg
sbb
xor
fimull
xchg
or
mov
add
mov
ror
pop
or
sarb
aas
cmc
cmp
or
pop
nop
mov
xchg
xor
jmp
jg
mov
jns
xor
adc
sbb
mov
loop
test
or
adc
inc
mov
xchg
aad
into
daa
mov
mov
pop
lea
xorb
arpl
jno
das
add
fst
xor
mov
and
jbe
icebp
gs
icebp
mov
ret
lret
jmp
push
sti
pop
lret
mov
das
test
push
sbb
out
repnz
imul
push
and
mov
popl
push
add
test
xor
out
cmpsb
imul
push
push
jne
inc
out
js
repz
ret
mov
add
jmp
sbb
push
and
adc
cmp
idivb
xchg
rcll
push
fisubs
outsl
das
add
pop
xchg
adc
add
loop
fwait
in
sti
fistl
add
and
inc
mov
js
mov
mov
adc
sbb
pop
out
out
pop
or
js
lret
lahf
xor
lods
inc
cmp
cmp
jbe
and
in
xor
xor
repz
push
dec
cmc
cmp
test
add
sub
lds
scas
lea
outsl
enter
mov
andl
sbb
lock
or
jno
jl
jp
and
dec
adc
jge
cmp
sahf
bswap
cmpsl
add
inc
test
inc
shlb
cmp
jg
imul
movsb
fwait
test
mov
dec
cmpl
test
ljmp
fcompl
sarl
je
lods
sbb
sahf
test
out
push
sbb
or
adc
mov
dec
and
ret
test
mulb
fs
popf
fcoms
mov
mov
out
mov
adc
mov
mov
sbb
getsec
pop
lret
sub
test
add
cmp
out
pop
add
enter
test
in
fwait
out
pusha
push
inc
xchg
mov
cmp
out
pop
stc
sarl
out
dec
mov
out
sarb
add
rorl
les
xor
add
fldenv
or
inc
push
pushf
push
popf
add
pusha
and
scas
inc
test
test
and
fs
and
jns
cmp
daa
inc
push
or
insb
cltd
xchg
insb
out
and
mov
or
fsin
add
sahf
sbbl
pop
sub
ss
and
pop
cmp
mov
adc
jp
adc
lcall
cmpsb
shll
cmp
sbb
and
sub
in
outsb
jp
into
adc
xor
pop
fidivl
imul
inc
adc
out
mov
mov
jo
and
pop
mov
push
jnp
push
leave
add
idivb
adc
pusha
cmp
xor
sub
faddl
cmp
or
mov
adc
scas
mov
or
pushf
mov
enter
cltd
aaa
in
xchg
fs
cmp
aad
ficomps
xchg
mov
dec
mov
fstps
xchg
xchg
insb
add
data16
inc
idivl
lods
xor
pop
push
add
test
gs
fwait
and
jecxz
shlb
xchg
jl
pop
add
addb
cmp
xchg
pop
cli
push
sub
push
mov
jbe
repnz
scas
out
jne
pop
mov
inc
rcl
mov
adc
xor
mov
shll
pop
pop
mov
inc
pop
in
pop
and
mov
pop
test
cmc
lods
cmpl
jl
outsl
sti
dec
jl
jbe
faddl
negl
fwait
cmc
mov
inc
xor
mov
or
jg
mov
jo
inc
outsl
mov
lcall
in
add
inc
jb
aad
jge
orl
movsl
cmp
icebp
outsb
ja
jmp
test
sbb
mov
xor
rcrl
jns
outsl
sahf
test
adc
cmp
aas
test
cmpsl
or
inc
shr
imul
fisttps
aam
adc
insl
cmp
pusha
and
mov
mov
out
dec
int
pop
mov
cmp
mov
jl
sti
xor
fs
xor
sub
or
inc
rcr
lea
outsb
sub
jnp
cwtl
scas
lea
or
adc
lods
es
and
cmp
mov
xor
mov
fst
jle
mov
mov
mov
cmp
xchg
sbb
in
xlat
popa
lods
and
sar
setle
sbb
mov
aas
mov
sbb
cmp
ja
sti
xor
sbb
xchg
inc
popf
mov
push
or
decb
push
add
pop
pop
xor
cmp
cltd
jmp
mov
ss
cltd
push
xlat
dec
test
rcrl
scas
push
lds
iret
nop
out
push
loopne
jl
addr16
xor
inc
incl
arpl
dec
xchg
adc
sbb
fcomps
push
adc
data16
ja
mov
lds
outsb
sub
arpl
or
mov
dec
push
push
sbb
nop
loopne
xchg
rol
xchg
jae
mov
loopne
das
pop
xor
mov
jnp
mov
jp
cmp
add
adc
xor
mov
insb
mov
roll
dec
mov
popa
sbb
jne
notl
aaa
orb
jp
mov
aad
je
pop
lret
inc
test
xchg
jmp
in
es
xchg
jmp
es
insb
call
leave
bound
mov
iret
mov
insl
or
sub
dec
xor
pop
clc
cs
and
stos
xor
je
pop
cmpsb
movsb
dec
repnz
xor
push
add
cmp
vunpcklps
ja
or
out
pusha
data16
xchg
mov
push
and
cmp
sub
repnz
pop
or
iret
and
dec
cmp
push
push
cmp
pop
fildl
test
xchg
sub
stc
jo
jnp
mov
out
add
leave
test
jne
mov
popf
sarl
sub
mov
xchg
mov
cmpb
mov
add
push
pop
xor
insb
cmp
and
push
mov
fcoml
fpatan
lds
clc
mov
jno
imul
fisubs
xchg
inc
mov
arpl
add
fsubr
mov
inc
adc
jge
inc
aas
mov
xchg
das
movsl
aas
jb
negb
and
inc
add
push
add
sbbb
xchg
xor
cmp
inc
lds
jge
or
inc
cmp
mov
xchg
xor
mov
cld
mov
mov
add
jl
cmpsb
aas
pop
sbb
jecxz
adc
cwtl
adc
mov
ret
decb
sti
pop
cli
into
jecxz
sub
mov
sbb
pop
subl
ja
push
test
loop
sti
das
xchg
jnp
gs
or
xor
out
pop
leave
int3
mov
cmc
inc
and
xchg
ds
addr16
fcoml
mov
push
dec
mov
sbb
mov
add
push
or
negb
sub
addr16
loop
mov
push
sub
mov
cmc
adc
inc
xor
xor
mov
sbb
mov
mov
xrelease
cli
hlt
cmp
jae
pop
mov
rorb
sbb
test
lret
adc
btl
sbb
pop
mov
dec
subl
popf
pushf
movlps
stc
pop
push
in
sub
jge
ja
fadds
insb
cmc
dec
inc
inc
into
jbe
sbb
rcl
dec
idivl
mov
adc
pop
add
icebp
sbbb
not
shlb
mov
aas
cltd
cmp
iret
jp
daa
stos
adcb
xchg
adc
popf
sub
hlt
aas
out
stos
push
cmpsb
adc
scas
adc
lock
mov
pushf
loop
sbb
sub
xor
jno
mulb
push
daa
pop
inc
and
push
scas
add
jae
sbbb
pop
mov
popf
cmp
mov
aas
mov
orl
mov
jo
imul
outsb
push
cmpsb
sub
fisubrs
jne
inc
inc
cwtl
xchg
pop
mov
cmp
xchg
lods
xchg
jns
add
cmp
orb
pop
add
arpl
add
jl
mov
loopne
out
push
pop
jp
into
pcmpgtb
xor
dec
test
xor
xchg
or
popf
pusha
ds
int3
notl
movsb
pop
outsb
cmp
sbb
int3
jecxz
xchg
mov
lods
mov
lcall
dec
pop
aas
cli
fists
jg
in
jbe
and
mov
aaa
insl
or
dec
mov
mov
inc
popf
lcall
jmp
adcl
pop
mov
fidivl
icebp
xchg
xchg
push
ret
jmp
loope
xchg
or
leave
sbb
xchg
jmp
pop
xchg
jmp
cmp
les
or
scas
sub
pop
sbb
mov
test
inc
add
sarb
mov
lret
test
pop
sahf
mov
add
in
arpl
jg
mov
jle
or
add
jl
sbb
lods
mov
mov
pop
sub
cmpsl
stos
cmp
xchg
cmp
inc
fadd
add
addr16
xchg
jo
xchg
jo
nop
xchg
fwait
lds
aaa
orb
push
and
and
push
push
pop
xchg
setno
cmp
push
aam
and
pop
dec
or
js
rcrb
xchg
mov
das
or
cmp
imul
inc
fiaddl
dec
iret
out
xchg
inc
hlt
mov
dec
xchg
push
mov
pop
test
mov
test
mov
jp
pusha
inc
das
pop
xchg
nop
push
cs
popf
add
sbb
xchg
dec
lcall
push
mov
insb
push
dec
out
aas
dec
cld
push
xchg
and
pop
push
lds
adc
flds
cli
lahf
sbb
add
jge
jg
out
das
sahf
mov
outsl
movsb
ja
arpl
jg
xchg
adc
xchg
leave
fldenv
pop
jnp
stc
int
ljmp
mov
mov
and
fsubl
jle
sbb
outsb
cmp
mov
fwait
lds
into
push
push
loopne
bound
mov
cs
xchg
jp
xchg
insb
mov
dec
jmp
add
pop
leave
cmp
js
nop
mov
cmp
sub
mov
addr16
inc
mov
test
jmp
testl
test
loop
mov
jbe
cs
pushf
icebp
jbe
fildl
push
cmp
test
pusha
xor
adc
cmp
jns
ss
out
lret
jmp
and
test
in
jecxz
movzwl
mov
mov
mov
mov
sbb
shlb
mov
push
and
imul
ljmp
mov
nop
das
orl
cmpsb
test
push
cmc
sbb
inc
mov
sub
out
dec
dec
inc
test
adc
divb
mov
loope
lds
push
ljmp
pop
push
push
xchg
sub
push
sbb
dec
inc
hlt
aaa
test
clc
push
cmpsb
subl
shl
arpl
out
sbb
push
jl
jmp
or
repnz
mov
movsl
xchg
iret
mov
rol
cwtl
xchg
out
repnz
ja
fidivl
xor
jg
mov
int3
shlb
pop
outsl
test
push
pop
pop
mov
and
leave
push
inc
cwtl
lcall
jne
and
jb
loope
adc
mov
je
push
mov
fldl
xchg
test
xor
testb
rcrb
push
lcall
outsl
sbb
push
std
aaa
mov
push
es
adcl
pextrw
xchg
or
mov
pop
cmpsb
mov
pop
popf
sbb
rclb
fmull
push
push
xor
mov
sbb
lea
mov
xor
inc
xchg
xor
dec
into
adc
test
pop
popa
and
push
dec
movsb
dec
jl
xchg
dec
dec
mov
repz
fs
cmc
cs
dec
popf
in
mov
push
repnz
adc
mov
add
pop
cmp
shrb
and
inc
inc
fnstsw
xchg
fwait
pusha
out
aam
mov
aaa
mov
xchg
xchg
or
mov
fs
xor
mov
data16
pop
sahf
xchg
fwait
divl
cmovb
mov
in
xor
out
inc
fnstcw
pusha
adc
movsl
or
mov
ljmp
pop
cmp
add
testl
rdtsc
test
lret
lcall
test
out
pop
rolb
sbb
pop
jns
std
pop
mov
sbb
sbb
int3
mov
xor
std
pushf
jns
xrelease
mov
pop
xor
fcomp
jnp
jle
addl
xor
lods
sub
push
in
shlb
mov
sarb
cmc
add
out
mov
xchg
cld
fdivrl
dec
add
xor
call
sbb
jnp
data16
pusha
or
and
or
mov
ret
imul
dec
or
add
imul
add
aaa
iret
dec
push
fs
xorb
sbb
loope
pop
xor
or
xchg
jecxz
mov
aam
pusha
and
jp
test
outsl
mov
inc
jb
lea
nopl
leave
mov
movsl
mov
mov
fiaddl
dec
cmp
ja
mov
and
test
or
mov
inc
push
jo
xchg
popf
test
cmp
mov
out
cmpsb
leave
pop
pop
mov
fsubrl
cli
pop
or
mov
and
xorb
fimuls
cmp
or
sbb
test
outsb
jnp
pop
or
test
roll
adc
cs
push
pop
jae
out
rolb
pop
or
decl
jge
inc
mov
call
cmp
jns
ljmp
ss
xchg
xor
rorb
les
rol
int3
movsb
mov
das
sbb
add
mov
mov
sub
out
jmp
icebp
cmpb
push
mov
xchg
sbb
rol
cmp
fistps
scas
pop
jmp
cltd
into
or
xor
js
lods
sbb
pop
int3
out
push
sub
dec
mov
mov
lock
xor
inc
and
adc
cmp
loopne
in
fsubl
fnstcw
add
movb
adc
sub
pop
loope
lods
fldcw
pop
mov
jmp
xchg
insl
scas
xor
imul
adc
fs
pushw
jge
jbe
sbb
adcl
sub
fisttps
hlt
loop
dec
or
xchg
sbb
push
mov
lea
test
ja
inc
add
inc
dec
pusha
and
mov
and
movsb
fildl
roll
in
sbb
mov
dec
and
ds
and
les
rorl
imul
pop
adc
imulb
test
push
sbb
mov
call
dec
fildl
bnd
ret
xchg
pushf
add
and
cmp
mov
add
mov
jns
lcall
loop
dec
pop
or
and
inc
xchg
mov
les
imulb
outsb
xchg
fiaddl
test
scas
inc
add
push
aaa
xchg
lahf
dec
pop
add
sub
jle
fstps
test
cmp
adc
xchg
int3
insb
sub
fmull
addr16
or
sbb
push
cltd
cs
les
ss
fsubrs
test
addr16
shl
cmc
adc
pusha
jg
xor
mov
jmp
and
cwtl
shr
loop
sbb
test
add
mov
shrb
sub
shlb
lods
call
stos
icebp
scas
xor
adc
fiadds
xor
out
bsr
push
adc
out
pop
addr16
loop
cmp
xchg
jg
xor
xchg
pop
push
fisttpll
add
out
pop
test
mov
push
aas
movsb
scas
push
cmp
pop
dec
xchg
push
mov
decb
jecxz
scas
data16
mov
pop
dec
dec
addr16
and
or
jo
push
jecxz
mov
arpl
mov
scas
jae
xchg
orb
inc
pusha
mov
inc
xor
icebp
mov
ss
jecxz
scas
push
lods
sbb
push
dec
pop
leave
mov
inc
lods
mov
pop
andl
push
inc
test
int3
push
fistl
mov
sub
dec
aas
loop
inc
sbb
test
test
pop
popf
push
into
fs
test
push
loope
add
sub
mov
in
fcompp
ja
push
ja
mov
loop
sub
fistpl
out
testb
pop
ss
cmp
bound
mov
add
shlb
pop
dec
sub
out
dec
test
cmp
movntq
cltd
fsts
shrl
enter
cmpsb
mov
lcall
test
imul
pushf
jge
out
das
fcomps
out
xor
push
xchg
push
and
bound
fidivl
or
add
add
pop
or
das
cmp
leave
push
push
mov
jp
orb
out
fstpl
add
fdivl
lahf
mov
and
stc
mov
lahf
sahf
into
ret
aad
cltd
fistps
adc
xor
mov
add
lock
sub
push
sbb
aad
rorl
test
xchg
xor
mov
sbb
or
jl
mov
adcl
mov
and
les
ja
and
out
jle
aad
outsl
pop
jmp
xchg
sbb
jp
and
and
les
popf
test
fucomi
pop
push
out
and
jg
mov
data16
xchg
cmp
repnz
adc
rorb
inc
inc
xchg
inc
lock
daa
loop
pop
adc
cmp
cmp
pushf
in
add
rolb
lock
shll
ret
mov
push
sub
in
jno
xchg
and
decb
pusha
out
push
lcall
lock
push
cmpsl
cmp
fistpll
and
mov
add
in
insb
test
push
fcmovnbe
lret
fnstenv
xor
jecxz
loop
incb
andl
adc
mov
add
push
imul
mov
fists
mov
test
xor
arpl
test
adc
sbb
jmp
lret
xchg
push
mov
sbb
sbb
loopne
in
jb
repz
inc
test
xchg
add
add
dec
daa
jmp
dec
jnp
xlat
add
xor
js
dec
imull
sub
sbb
bound
mov
adc
adc
aaa
mov
test
fdivrl
mov
push
movl
lret
or
jp
and
cli
cmp
adc
lods
test
and
inc
lea
xchg
cmp
mov
sahf
es
mov
push
mov
add
pushf
inc
adc
out
or
sbb
fnstenv
mov
or
cmp
and
imul
mov
jns
test
cmp
xchg
dec
dec
add
lds
mov
pop
lods
sbb
popa
ficompl
push
and
dec
mov
mov
test
add
mov
sub
int3
or
xor
insb
cmpsl
gs
add
sbb
cmp
lods
mov
pop
pop
xchg
sbb
addr16
sarl
pop
push
add
sub
xchg
inc
rcr
cltd
stc
mov
fwait
lds
sbb
sarl
jns
jge
test
add
cli
pop
dec
hlt
push
dec
pop
cmpsl
nop
loope
xchg
lods
xchg
jl
push
push
imul
repz
dec
mov
fldcw
pop
scas
jg
popl
rcrl
push
add
push
test
jae
lds
je
mov
xchg
push
js
adc
sti
testb
mov
mov
mov
rorb
sub
jecxz
aas
repz
test
add
mov
cwtl
aaa
dec
mov
leave
test
es
mov
dec
in
nop
fbld
xchg
clc
cmp
mov
out
aas
popf
mov
pop
xor
pop
fndisi(8087
roll
add
mov
dec
cmp
out
repz
and
mov
jl
lret
sahf
dec
scas
adc
mov
mov
sub
gs
int
inc
cmpb
dec
and
pushf
test
jo
or
xor
cmpsl
mov
xchg
or
push
rorb
cli
fimuls
popf
push
push
sbb
inc
movsb
imull
xchg
jbe
sti
xor
push
data16
bound
shlb
mov
jns
jb
decb
jno
leave
jle
xchg
lods
xchg
iret
and
sbb
xorb
adc
out
xchg
cmp
jge
sub
inc
add
cwtl
shl
add
fsubs
jecxz
sub
xchg
fildl
js
rorb
pop
adc
out
fidivrs
cmp
push
or
cmp
es
lods
inc
mov
pop
pop
push
cwtl
add
jle
enter
push
dec
jge
test
sbb
pop
and
nop
jg
add
fdiv
cmp
pop
lods
cmp
test
xchg
push
mov
adc
lods
sbb
in
fcmovbe
jne
jp
mov
and
repnz
sbb
lret
repz
outsl
and
xor
pop
ljmp
into
mov
daa
mull
mov
cwtl
shr
scas
loope
mov
add
jge
cmova
push
or
xchg
jnp
repnz
push
dec
and
popa
mov
pop
imulb
ds
dec
insl
push
adc
mov
js
call
sub
sti
loopne
adc
mov
cmpsl
push
movsl
push
or
sub
add
in
stos
outsb
add
xor
fsubrs
ret
arpl
xchg
add
repz
test
or
ss
mov
out
sbb
es
or
in
roll
roll
rcrb
cmp
jp
cmp
ljmp
adc
mov
outsb
out
aas
inc
push
or
sbb
jne
rcrl
mov
sbb
loope
xchg
and
mov
sbb
inc
dec
pop
test
cs
out
inc
cli
jnp,pn
mov
mov
cmpsl
das
outsb
ds
cmp
outsl
pop
loopne
aam
cmp
xor
test
loop
mov
pop
xor
or
test
ja
sbb
fistl
push
lcall
pop
mov
and
sahf
inc
in
repnz
or
aas
test
inc
into
notl
sbbl
mov
cld
pop
stos
ja
mov
aad
sub
aas
jnp
or
jnp
jg
in
mov
mov
outsb
push
xchg
imul
push
adc
mov
test
ror
mov
cmp
xchg
pop
mov
sub
cmpl
xchg
ficoms
stos
icebp
push
in
mov
xchg
dec
movsb
xor
fldt
mov
cmp
std
adc
mov
scas
mov
add
shrb
or
push
push
int3
in
add
add
mov
and
cwtl
rcl
sbbb
gs
clc
nop
mov
mov
cmp
test
sahf
pop
shlb
test
pushf
shlb
test
mov
or
or
leave
test
movsb
push
jmp
popa
mov
fcompl
fcmovnbe
mov
mov
sub
ret
jg
fcoml
aas
dec
push
pop
pop
inc
pusha
sahf
mov
cmp
stos
add
mov
cld
cmp
std
cmp
dec
add
adc
cmp
sub
inc
inc
cld
and
jne
jns
aam
orps
inc
in
jno
out
clc
xor
or
out
dec
out
rcrl
cmp
sbb
mov
adc
js
test
out
insl
cli
or
movsb
cmp
inc
pop
or
push
jp
or
mov
dec
sahf
pop
cmc
sbb
ss
xchg
xchg
stos
cmp
jb
mov
xchg
xchg
dec
push
inc
mov
mov
cmp
cld
ja
cmpsl
jo
in
mov
adc
inc
adc
ret
pop
add
push
test
cmp
inc
mov
sbb
lds
xchg
and
ret
inc
stos
xchg
fnclex
pop
xor
ja
daa
xchg
lret
insb
jns
fidivs
fnclex
push
in
xchg
out
push
or
and
test
sarl
sbb
pop
mov
bound
test
es
jo
xchg
sbb
cmp
shlb
pop
xchg
sbb
rcrb
fstps
out
jbe
pop
std
xchg
loope
jo
inc
gs
pop
dec
pop
xor
push
adc
sahf
es
or
into
std
xchg
sti
lods
stc
cmp
fcompl
jp
test
cmp
mov
or
movsb
jecxz,pt
imul
and
inc
mov
test
push
out
call
sbb
push
adc
dec
add
mov
fs
loop
inc
dec
fbstp
test
shll
and
jmp
test
insl
and
pop
pop
cmpsl
mov
jo
xor
js
xchg
xchg
imul
mov
xchg
jle
cmp
mov
es
push
xchg
jnp
sbb
cmp
cwtl
pop
adcl
ja
add
jno
test
xchg
cmp
jmp
mov
dec
idiv
adc
pop
inc
push
mov
and
cmp
daa
inc
addb
ljmp
or
xchg
iret
cmc
jo
xchg
lret
daa
das
adcl
xor
loope
popa
and
in
xchg
movb
int3
mov
pusha
pop
sbb
cmp
lods
stc
mov
mov
jnp
negl
mov
jl
push
fdivrs
leave
fwait
andl
js
popa
xlat
sbb
push
xchg
je
inc
das
xchg
in
xor
jl
sub
jne
mov
mov
inc
jae
mov
sub
lcall
dec
jl
inc
add
cmp
aaa
dec
mov
sub
test
jae
push
cmpsl
repz
aas
push
sbbl
dec
xor
popa
dec
stos
mov
fcmovnb
aam
jmp
xor
cs
mov
inc
push
ret
xor
push
sbb
test
mov
sub
call
xor
xchg
inc
xlat
arpl
aaa
mov
pop
rclb
fwait
mov
shll
add
imulb
inc
lret
cmpb
test
jnp
fisttpl
enter
dec
fwait
call
out
fnstsw
iret
stc
aam
jp
fidivrl
adc
xchg
sub
add
dec
rcrb
cmp
clc
lea
mov
aas
test
push
push
jo
es
xor
out
test
sbb
jo
xchg
fisubs
int
sub
arpl
rcrl
pop
cmp
add
pop
out
subl
pop
add
mov
cmp
lret
xchg
sbbb
push
mov
push
aas
pop
xchg
push
cmp
fmull
and
lahf
mov
jg
xchg
mov
bound
cmp
xor
mov
xor
repz
or
inc
insl
leave
dec
jecxz
stos
sbb
subl
jae
or
mov
movsb
mov
cld
inc
mov
sub
cmp
xchg
ss
pop
je
lcall
jp
xchg
test
data16
xchg
popf
repz
add
mov
and
jbe
negl
cli
movsl
cmpb
rcrb
push
ja
xchg
sub
inc
pop
xchg
xchg
pusha
push
cli
pop
les
je
aaa
sarl
pushf
dec
and
ficoml
aas
ljmp
negl
push
sub
mov
jb
xchg
xor
sarl
fucom
lret
cvttps2pi
lods
out
xor
mov
mov
leave
add
xchg
sbb
rol
test
pop
repnz
fcompl
mov
mov
ret
sbb
mov
add
in
sub
mov
jnp
arpl
mov
sbb
mov
loopne
ss
cwtl
jns
mov
js
loope
cmpl
jge
dec
cwtl
add
dec
outsl
xorb
popa
in
xchg
in
test
sbb
es
daa
repz
jle
mov
cmp
push
loop
es
add
sar
mov
push
inc
and
jmp
insb
fcmovnbe
ret
and
mov
jle
insb
jnp
cmp
dec
inc
jb
xor
pop
repnz
xlat
xchg
mov
xchg
xor
inc
cmpb
insl
ret
mov
fdivl
pop
jecxz
cmp
push
dec
dec
push
cmp
addb
mov
mov
mov
loope
inc
sub
mov
xchg
cmp
and
roll
scas
popf
stos
mov
not
adc
mov
lahf
cmpsb
mov
xchg
jp
insl
mov
sbb
out
out
mov
mov
aaa
les
pop
nop
jne
out
ror
fdivrl
shlb
pushw
jmp
loopne
dec
cwtl
rolb
mov
mov
inc
cmp
shrb
out
push
loop
fistps
mov
jl
pusha
lods
push
xchg
pop
sti
xchg
loope
lods
ljmp
dec
dec
and
jl
sbb
push
mov
mov
sbb
cmc
push
jne
sarl
out
dec
cmpsb
pop
lcall
xchg
outsl
inc
jno
mov
xchg
dec
test
dec
nop
mov
jmp
stc
xchg
addr16
mov
and
ss
enter
leave
sbb
or
arpl
xchg
inc
repz
sub
lcall
out
pop
lods
cltd
cld
push
sbb
xchg
or
pop
shlb
or
es
sahf
adc
insb
icebp
cmpsl
xchg
push
es
fcmovnb
in
mov
or
movsl
xor
push
sub
mov
mov
in
cli
jecxz
in
mov
out
leave
pop
push
add
sbb
or
adc
jecxz
test
sbb
sub
xchg
rcr
aaa
and
adc
in
out
cltd
out
stos
in
inc
fimuls
inc
xor
add
xchg
push
cli
dec
lret
adc
push
aaa
xchg
dec
jg
mov
stc
dec
scas
ja
xchg
or
ret
loop
js
lds
repz
adc
sub
xchg
mov
xchg
adc
jg
xor
sub
loopne
fs
pop
loope
inc
lods
pop
inc
loopne
fsubrs
jmp
rcrl
dec
jp
fnstenv
movsl
inc
push
sbb
fldt
cli
push
sub
xlat
cmc
aas
inc
stos
or
mov
mov
add
mov
pop
fstpt
es
ret
rcr
ja
mov
inc
xchg
leave
sub
into
nop
fwait
xchg
jmp
insl
mov
and
fs
adc
scas
rclb
sub
cwtl
xchg
clc
jnp
sbb
daa
cmp
out
inc
fidivl
or
outsb
ss
pop
mov
jmp
push
add
daa
adc
push
xchg
psllq
sbb
add
test
in
pop
xchg
scas
rcrl
cmc
dec
ja
stc
xchg
cmp
mov
repnz
fdivrs
test
cmp
xor
mov
add
stos
pop
jle
bound
mov
iret
ficomps
inc
mov
lahf
out
jnp
jmp
ficompl
test
dec
mov
add
adc
mov
leave
lods
pop
shrl
mov
rclb
adc
inc
out
fs
cmp
fs
cmp
mov
mov
and
cmpsb
movsl
scas
jns
xchg
movsb
pop
pop
into
xor
or
or
inc
mov
mov
in
pop
iret
mov
xchg
test
stos
jle
pusha
addr16
jno
jnp
ret
pusha
adc
sbb
mov
sbb
leave
mov
mov
in
orb
mov
fdivl
mov
add
pop
test
mov
push
vpmacsdd
inc
aas
pop
push
ret
sub
jle
imul
lret
mov
xchg
jmp
gs
mov
mov
loop
add
pushl
fisubl
mov
xchg
push
sub
mov
int3
test
ss
fisttps
or
inc
cli
call
cmp
notb
cmp
adc
movsl
notl
aam
sbbb
test
mov
clc
xor
dec
and
movb
mov
add
test
inc
mov
pop
hlt
sub
xchg
mov
je
ja
iret
xchg
xchg
mov
and
cmp
add
and
mov
pushf
test
sub
push
dec
inc
insl
andb
fildl
mov
or
ret
sbb
cmp
jge
in
rol
pcmpgtb
push
out
shrl
adc
dec
cmp
mov
sub
imul
pushf
cmpsl
or
mov
test
cmp
jne
mov
cmp
mov
cmpsb
movsb
test
insl
nop
sub
xchg
lahf
or
in
icebp
or
mov
jbe
cmp
inc
loop
leave
mov
add
pop
xchg
jge
add
nop
iret
fwait
push
fstps
pop
xor
out
out
pop
insl
sbb
in
cli
pop
push
xchg
mov
push
mov
xor
fsubl
scas
xor
xchg
and
jecxz
xchg
movsb
mov
shrb
sbb
sub
ss
mov
inc
sub
ja
andl
cltd
push
cmp
stc
inc
repnz
sbb
aaa
iret
clc
dec
fstpt
push
aad
sbb
mov
adc
xor
dec
add
jg
iret
enter
sbb
mov
mov
add
scas
icebp
add
jae
lods
out
cli
repz
mov
iret
lods
cmp
jle
mov
add
in
test
mov
jne
dec
jl
leave
mov
fisubrs
mov
sbb
in
dec
mov
jns
mov
ret
popa
xchg
pop
js
fucom
pop
fmull
into
loopne
mov
mov
sbb
gs
fs
lods
add
jb
lock
pushf
mov
std
dec
pcmpgtd
lock
inc
out
aam
jo
dec
adc
mov
push
mov
out
inc
add
hlt
outsl
mov
lods
cwtl
stos
add
fnstenv
jnp
mov
leave
fidivrl
lock
setle
test
sbb
outsl
sbb
xchg
xchg
mov
js
addb
or
jge
pop
into
lock
iret
jbe
mov
nop
fcmovbe
inc
pop
cmc
inc
in
fwait
dec
cmp
daa
mov
out
mov
push
rol
and
addl
xchg
push
stc
aam
pop
push
ss
or
and
mov
out
cmpsl
mov
fs
pushf
mov
xchg
fwait
out
xor
mov
xchg
mov
idivl
movsb
sbb
stos
test
arpl
jmp
and
or
mov
push
cmpsl
insb
mov
fcompl
sbb
pop
xchg
xchg
xchg
push
lahf
sbb
ret
movsb
or
test
push
xchg
push
rcl
mov
pusha
jnp
sbb
xchg
mov
sbb
mov
movsl
mov
push
pop
xor
jae
mov
idiv
test
lods
lock
aad
push
inc
leave
push
and
push
cwtl
ja
inc
pop
mov
inc
xchg
xor
mov
dec
jg
addr16
jo
jp
jl
movsl
sub
jl
cwtl
cmc
mov
lods
xchg
addr16
cmp
mov
out
leave
lcall
sbb
mov
out
shll
shrb
enter
repnz
push
push
push
repnz
adc
mov
mov
icebp
pop
aad
xor
add
fnstsw
jg
or
popf
rolb
or
mov
ficoms
xchg
iret
pusha
imul
icebp
lcall
and
and
lods
add
das
les
push
or
push
add
lods
mov
sub
cs
sar
adc
addb
ljmp
ficompl
adc
and
xor
jbe
mov
jg
xchg
xchg
in
sti
pop
mov
sbb
adc
xchg
cmp
mov
ret
rclb
sbb
sahf
fdivp
clc
fnstenv
mov
scas
or
push
outsl
fsts
xchg
adc
lcall
add
or
jge
dec
add
popa
add
mov
xchg
stos
sahf
mov
lcall
lock
add
mov
push
mov
adcb
insl
lcall
insl
pusha
ja
fs
addb
push
inc
xchg
sbb
repz
cmp
add
test
popa
jo
decb
xchg
mov
jmp
mov
out
add
fmull
pushf
lock
cmc
pop
stc
xchg
repz
pop
je
mov
movsl
rorb
ficompl
out
dec
sti
cmp
jnp
leave
mov
clc
dec
stos
movsb
push
cltd
dec
sub
out
xchg
fidivrs
xchg
pop
xchg
rcrl
movsb
fs
fstl
fwait
push
sub
adc
sbb
jl
push
jl
push
hlt
rcll
inc
jo
outsl
xchg
jp
xor
cmp
jo
add
inc
inc
shl
push
les
mov
int
mov
jl
jnp
inc
std
inc
push
test
sbb
loope
inc
or
arpl
jg
lods
repnz
xchg
and
cmp
mov
xchg
fiadds
fidivrl
jl
and
ror
sbb
cltd
jp
and
xor
push
mov
mov
fs
inc
jne
lods
out
push
inc
movsb
inc
jnp
and
test
daa
decl
out
xchg
mov
cmp
stos
dec
xor
push
mov
sub
iret
mov
movl
aas
xchg
mov
int3
pushf
xchg
out
pop
es
inc
or
lock
cmp
scas
testl
xchg
xchg
adc
adc
popa
pop
sbb
dec
push
jmp
fsubrl
mov
sub
add
mov
rorb
aam
addr16
js
ret
outsl
pop
loope
pushf
xor
gs
into
mov
in
aam
lcall
rorb
stc
jle
cmc
hlt
cmpl
test
mov
daa
andb
xchg
or
fldt
sbb
and
jle
mov
test
pop
sahf
jbe
push
or
jp
test
add
xor
scas
cmp
mov
movsl
lcall
jg
nop
fnsave
push
fwait
sbb
lock
nop
jmp
and
ds
cmp
testl
adc
sub
repnz
jb
dec
mov
fdivr
scas
mov
popa
bound
cmpl
adc
fdivl
sbb
mov
mov
adc
add
cltd
or
test
in
jbe
jmp
sub
cmp
orb
test
jnp
test
mov
pop
dec
pop
sub
push
push
decb
or
leave
sub
cmp
sub
out
notb
out
sbb
aam
call
pop
mov
sarb
xchg
xchg
enter
in
addl
or
mov
cmpsb
cmc
cmp
xchg
cli
dec
mov
or
iret
cmpsl
xor
xchg
aad
cmp
sarb
lret
cmpsb
cltd
push
inc
sbb
cmpl
or
cltd
push
flds
jl
cmp
stos
fdivrs
dec
pop
and
scas
sbb
test
xor
test
insb
xor
leave
enter
add
cmp
xchg
and
inc
in
dec
call
cmp
orl
mov
aam
push
or
sbb
test
add
dec
sub
repz
cmp
add
jp
and
loopne
js
mov
mov
dec
mov
popa
scas
mov
out
arpl
add
stc
sub
data16
dec
sbb
sub
ret
fs
aas
inc
mov
mov
xchg
cmp
ret
bound
es
sbb
pop
pop
icebp
cli
jle
stc
pusha
sti
mov
push
test
xor
push
jo
insb
lret
out
ds
or
pop
dec
test
mov
push
lods
mov
xchg
sbb
push
ss
ja
add
mov
xchg
push
leave
sti
sbb
adc
add
jmp
or
into
push
leave
sbb
test
shl
fldl
xchg
sub
shlb
xchg
js
sbb
cmovb
icebp
imul
cmpsb
jns
lea
sahf
mov
addr16
cmp
out
fwait
push
roll
popa
add
in
dec
pop
mov
mov
jl
mov
mov
cwtl
je
push
addr16
or
sub
leave
jl
loop
into
inc
cltd
test
mov
ud2
mov
sti
cld
pop
xor
testl
aam
lea
fiadds
and
inc
test
push
lcall
pop
dec
rcr
jecxz
int
andb
in
bound
cmpl
bound
dec
hlt
ds
dec
inc
push
arpl
in
jnp
stc
idivl
enter
push
sbb
mov
dec
push
push
and
lahf
cwtl
cmp
mov
rorb
sub
aaa
mull
dec
xchg
loop
fdivrs
insl
fwait
xor
mov
insb
jg
pop
clc
adcb
jb
lcall
jge
xchg
xchg
sub
add
push
lahf
push
push
es
pushf
loop
int
and
cmpsb
sub
fs
popa
push
js
xor
adc
fdivrs
adc
pop
xchg
push
or
and
xchg
enter
jb
into
movq
push
jl
arpl
inc
and
pop
popa
add
lods
and
dec
pusha
and
into
movsl
mov
popf
dec
pop
mov
pop
add
xchg
inc
xlat
push
test
out
dec
adc
shl
push
lahf
aas
mov
sbb
mov
rol
outsl
ja
adc
fisttpll
cmp
daa
sub
mov
sub
repnz
pushf
ror
rcrb
stc
cmpb
add
pop
and
inc
mov
fcmove
and
daa
test
arpl
push
flds
in
mov
sub
rol
sub
mov
jg
mulb
lock
xchg
imulb
or
neg
stos
inc
loopne
or
fucompp
testb
inc
fstpt
frstor
jnp
mov
lcall
and
dec
sbb
das
icebp
xchg
inc
ret
push
mov
mov
jle
xchg
pop
xchg
add
jo
mov
in
test
insb
jmp
inc
xchg
or
gs
pop
xor
aas
aas
mov
sbb
and
pop
xor
mov
fsubl
popf
icebp
cmp
xchg
sub
jo
popa
idivl
sbb
inc
cmp
jae
cmc
jbe
sub
adc
mov
push
fdivs
repnz
mov
fcomps
push
iret
bound
fadd
push
test
lcall
adc
mov
adc
cs
out
dec
add
xor
mov
jmp
in
mov
adc
adc
ret
mov
imul
mov
add
mov
mov
mov
jl
xchg
ret
arpl
xor
xor
insl
jbe
data16
and
mov
cs
dec
pop
into
sbb
adcb
xchg
repz
xor
cltd
mov
push
pop
inc
and
pusha
cmp
mov
push
dec
fadd
scas
xchg
fwait
sbb
lds
fidivrs
jmp
aaa
js
xchg
mov
mov
push
push
pusha
add
ljmp
frstor
adc
add
or
pop
inc
fs
and
iret
push
sti
fidivrl
push
ror
popa
inc
daa
pop
mov
sbb
inc
dec
add
cmp
gs
loope
orl
imul
and
loop
aas
push
inc
jp
jl
mov
sbb
out
lcall
xchg
std
insb
xchg
or
repz
out
pop
xchg
jecxz
repz
xchg
xchg
repz
test
and
dec
and
cmp
call
mov
js
icebp
je
mov
inc
ss
or
or
or
jne
sub
subb
pusha
cld
pop
mov
jp
cmp
xchg
mov
adc
in
orl
sbb
mov
push
loopne
scas
xchg
cmpsb
icebp
push
cwtl
stc
dec
jl
shll
popf
mov
jle
xlat
test
mov
cld
jno
loop
fldenv
xchg
fisubrl
pop
orl
add
jo
daa
xchg
mov
cmp
mov
mov
js
call
dec
add
mov
or
xchg
test
xorb
mov
in
bound
sbb
out
rclb
xor
lods
les
push
cld
pop
sbb
xchg
scas
add
push
sahf
adc
test
sbb
inc
cmp
push
xorl
test
popf
and
lock
add
rorb
pextrw
sbb
test
test
jno
xchg
cmp
gs
stc
neg
es
dec
push
int
sbb
ret
push
pop
or
int3
sbb
cli
fld
pop
in
out
and
lods
jge
in
data16
shrb
dec
add
and
movsb
pop
sub
or
dec
dec
push
sti
ss
and
hlt
pop
je
scas
dec
repnz
xor
shll
and
fimull
adc
sti
out
sub
cmp
shlb
xor
pusha
xor
or
xor
mov
xchg
fbld
dec
jne
rcrl
push
mov
dec
pop
aas
xor
fcomp
repnz
ds
test
sbb
cmp
hlt
push
add
xor
pop
xchg
sbb
cmpsb
shll
mov
test
scas
dec
mov
dec
xorl
lods
mov
and
pop
aam
fiaddl
popa
inc
sbb
dec
push
mov
sbb
test
loop
fadds
push
xchg
testb
pop
mov
jmp
rcrb
cltd
mov
mov
cmp
lea
shll
mov
sub
ja
clc
icebp
or
fidivrl
inc
test
inc
xor
scas
or
mov
add
pop
divl
jl
xchg
addb
push
sub
dec
sarl
mov
test
xor
arpl
dec
pop
imul
xor
cmp
jl
ss
add
iret
pop
mov
movl
push
jg
lds
rorb
ja
ja
add
in
cmc
movsb
sub
insb
test
in
xor
add
cmp
mov
cmp
and
testl
popf
push
dec
cmp
or
adcb
dec
rol
xchg
inc
sub
cltd
xor
inc
rolb
lret
push
push
out
stos
addr16
fucom
cwtl
es
shlb
repz
ror
test
dec
sub
inc
pop
cld
cmp
clc
rorl
jb
cli
repnz
jmp
fildl
das
fsub
pop
rcrl
cmc
pop
xchg
ja
cmc
cmp
push
ret
scas
ds
push
sbb
push
xchg
mov
add
test
cli
adc
dec
je
pop
stos
pop
mov
cwtl
shll
inc
insl
into
mov
stos
push
pusha
xorb
pop
inc
push
sbb
ja
pop
int
daa
pop
xor
lahf
cmc
rolb
sbb
mov
in
or
imul
scas
movb
pop
fcmovu
inc
push
cmpsb
inc
or
insl
ljmp
faddl
into
inc
enter
aas
mov
xchg
pop
push
lret
and
pop
mov
test
daa
ljmp
out
dec
and
jl
sbb
push
sbb
cmpsl
insb
xor
sub
fcomp
js
jg
cmp
or
bound
mov
dec
jg
out
mov
sub
xor
and
div
and
sbb
xchg
fucompp
inc
jo
add
rorl
loopne
inc
nop
add
push
xor
pop
xchg
fsubrs
add
scas
xor
repz
mov
mov
icebp
nop
dec
out
push
js
into
and
pop
xchg
mov
adc
sub
mov
ja
pop
sub
lea
stos
ljmp
xchg
in
pop
out
sbb
mov
sub
and
xchg
mov
xor
and
mov
test
ret
mov
rolb
xchg
lcall
mov
cmc
aaa
jl
mov
mov
jnp
and
jae
cmp
test
push
fmull
in
incl
rclb
shll
fdivrs
sub
xchg
or
pop
cltd
mov
add
icebp
xchg
pop
sbb
ljmp
or
sbb
add
sub
mov
and
xchg
into
pushf
std
jno
mov
test
scas
push
mov
lret
out
mov
mov
inc
mov
je
xchg
and
addr16
xchg
push
stos
xchg
mov
add
jmp
inc
rcrb
fdivr
repnz
inc
cmp
sti
mov
cmp
fadds
adc
sbb
insb
push
mov
sahf
and
rclb
sar
jnp
aad
cmc
sbbb
ret
sbb
cmp
dec
jns
addr16
jnp
and
cli
mov
add
cmp
sbb
pop
ret
push
push
ficomps
sbb
adc
out
xchg
cmp
cmp
loopne
dec
test
xlat
mov
movsl
nop
mov
sarb
inc
push
mov
outsl
mov
push
lods
imul
sarl
cs
xchg
pop
jge
movsl
mov
cmp
test
sbb
jb
push
bound
xchg
fimull
pop
out
jmp
aas
fwait
inc
inc
leave
lods
icebp
push
out
push
fsts
push
je
adc
lods
pop
inc
data16
xchg
outsl
mov
sub
stc
cmp
cmovp
push
mov
popa
dec
shlb
mov
push
sbb
mov
add
mov
push
ret
cmp
shrb
jnp
dec
pop
xchg
rolb
adc
push
shl
pop
dec
pop
adc
and
xor
cmp
and
cmp
cmc
rcrl
xchg
xor
ss
pop
gs
ds
gs
daa
push
add
adc
adc
xlat
inc
in
ja
shll
or
adc
cwtl
mov
jecxz
cmp
pop
pop
inc
leave
bound
jp
adc
stc
loop
adc
mov
pushf
shll
lock
xchg
xchg
in
in
jb
ja
cs
sbb
cmc
mov
sbb
or
test
adc
cli
loope
aas
pushf
das
add
cld
add
jmp
adc
test
sub
or
cmp
cmp
jge
pushf
mov
hlt
xchg
aas
mov
jne
xor
roll
mov
xor
test
fwait
dec
repnz
sti
filds
push
inc
test
mov
jle
and
dec
inc
jp
mov
xchg
sub
mov
jle
es
jmp
jmp
mov
jg
js
mov
sbb
in
andl
pop
sahf
imul
aas
ja
sub
and
jmp
cmpb
jl
mov
add
mov
dec
stc
jo
idivl
xchg
add
push
imul
iret
and
repnz
sbb
fistps
int
pop
pop
sbb
cmp
dec
hlt
and
and
sbb
stos
in
popa
xchg
inc
fsubl
arpl
in
fnstcw
shlb
jle
adc
shrb
pusha
mov
mov
pop
mov
scas
jae
mov
add
enter
jg
arpl
sbb
sub
movsb
jnp
mov
dec
arpl
mov
imul
loope
aas
sahf
pop
into
imul
andb
sub
xchg
pop
mov
adc
in
mov
ss
sub
test
and
mov
mov
xlat
jmp
test
mov
jp
sahf
mov
and
jg
and
jmp
jl
add
test
xor
sbb
push
xchg
xchg
jno
push
daa
sbb
and
fcmovne
push
fmul
sti
push
jp
xor
mov
leave
movsb
mov
mov
push
lcall
pop
aaa
mov
sbb
test
pop
out
jl
mov
xchg
sahf
dec
pop
ud0
nop
add
cld
mov
rcrb
sub
push
sbb
imul
iret
aaa
repnz
pop
in
adc
nop
mov
jae
dec
sub
and
test
pop
int3
jne
pop
xchg
aam
jns
stos
sub
mov
push
test
sti
sbb
arpl
adc
add
js
push
es
pushf
dec
cwtl
mov
shrl
lret
dec
push
mull
xlat
mov
out
pushf
lock
cli
and
bound
sbb
pop
push
cmp
mov
push
aaa
pop
ljmp
fwait
test
add
pop
clc
cmp
addr16
pop
or
popa
sbb
dec
pop
mov
cmp
pop
mov
cmpb
iret
into
outsb
or
cmp
push
scas
fnsave
pop
mov
bnd
test
cmp
enter
movsl
pop
inc
aas
jl
inc
mov
lods
dec
mov
and
pusha
cmp
inc
enter
mov
xchg
call
cmp
adc
mov
mov
cs
pop
dec
loope
out
jbe
lret
bound
dec
cld
xchg
xorb
xchg
pop
push
jae
movsb
mov
pop
lods
push
or
jnp
mov
inc
dec
dec
cmp
xchg
dec
adc
cmc
popa
xchg
test
popf
sbb
test
cmp
fwait
xor
lahf
cmp
push
xchg
mov
inc
cmp
stos
and
not
sub
lods
fsincos
adc
popf
gs
sti
scas
jge
mov
test
mov
push
jle
test
lods
out
out
mov
fs
push
mov
jle
lea
inc
cmpsl
cmp
pop
es
ljmp
inc
xchg
out
loope
add
gs
dec
and
lock
mov
xor
out
and
stos
xor
test
mov
push
sub
xor
fdivp
aas
loop
loope
mov
and
or
leave
push
in
mov
xor
arpl
nop
test
loope
mov
testl
es
xchg
cmp
movsb
cli
cmp
test
test
mov
xchg
sub
push
mov
bound
loopne
div
add
cmpsl
pop
sbb
xlat
test
insl
movsb
mov
push
pusha
gs
xor
mov
inc
xchg
jmp
sbb
shr
iret
push
mov
cmpsl
test
data16
dec
lods
lcall
xor
push
bsr
test
inc
pop
leave
mov
xor
fmuls
lds
ret
cmc
sbb
ljmp
inc
je
push
sub
sub
or
leave
sarb
mov
jbe
sti
add
or
xchg
xchg
popf
mov
sbb
adc
fnstenv
mov
jb
adc
dec
cmp
fsubrl
xor
mov
es
mov
gs
mov
cmpsb
and
xchg
jmp
mov
notb
mov
inc
sub
out
push
rclb
cmpsb
leave
mov
movsl
pop
jl
in
add
push
sub
sub
popa
fldcw
xchg
dec
cltd
adc
test
and
mov
mov
gs
out
fcmovnb
jmp
cmp
adc
fisttpll
incb
lods
inc
pop
or
in
sbb
sbb
jmp
cmp
and
loopne
sbb
jle
jmp
push
adc
insb
jmp
push
mov
jb
jl
pop
cmp
add
mov
xchg
pop
jge
ret
repz
subb
xchg
stc
mov
aaa
adc
jecxz
ret
inc
rolb
pop
je
jg
aas
int3
aas
jno
enter
aas
iret
addb
fs
loope
dec
js
sbb
cmp
movb
nop
cmpsl
outsl
xchg
movsl
cltd
push
mov
je
xorb
push
loop
ja
inc
mov
cltd
test
xor
mov
gs
icebp
call
push
insb
fwait
or
add
push
aaa
testl
shlb
mov
aaa
iret
cli
dec
out
add
lods
mov
xor
pusha
and
cmpl
xor
xchg
mov
or
xchg
sub
cmp
nop
push
jle
out
adc
add
pop
jecxz
dec
cmp
nop
call
mov
pop
mov
ja
lods
test
popf
repz
mov
lret
mov
and
dec
je
inc
mov
lahf
xchg
into
push
xor
add
mov
sub
out
fistl
bound
xchg
push
sub
jnp
xor
push
lods
nop
fsubrs
bound
clc
cmp
in
inc
jno
test
xchg
adc
add
sbb
jl
push
mov
out
sahf
mov
push
pop
sub
shlb
dec
adc
or
test
push
out
mov
add
js
or
addr16
iret
sub
mov
jns
icebp
mov
mov
idivb
and
lcall
pop
mulb
cmpl
test
es
dec
add
jecxz
imul
test
and
pop
imul
dec
sbb
in
inc
jmp
sar
xchg
into
or
loopne
inc
sub
ja
outsb
orb
aam
mov
ja
shl
mov
or
iret
lret
inc
adc
xchg
sbb
aam
stos
mov
add
addb
mov
inc
mov
push
test
cmp
enter
insb
in
push
sahf
ljmp
rorb
pop
push
std
fbld
xchg
xor
testl
iret
rclb
shlb
pusha
mov
pop
test
cmp
out
mov
pop
xchg
jns
pusha
and
dec
sbb
add
jae
js
cmpsb
lock
in
adc
rcll
movsl
mov
dec
stc
es
xchg
ja
xlat
inc
aaa
mov
add
mov
xlat
pop
iret
ja
adc
push
sti
fmulp
sub
ja
and
jl
aas
lret
test
mov
fmull
cli
mov
imulb
push
in
sub
sub
lcall
int
mov
inc
in
gs
add
jl
jle
xor
inc
add
jno
adc
testl
fwait
int3
pop
mov
shl
out
sub
and
jbe
mov
push
xchg
sahf
shrl
mov
push
scas
jl
mov
das
ret
push
dec
jp
mov
mov
cmp
adc
out
loopne
sbb
aas
lcall
bnd
lock
ja
movsb
adc
icebp
mov
sbb
xchg
mov
fidivrl
shlb
mov
les
hlt
pop
mov
gs
in
xor
aas
pop
iret
stc
push
call
pop
sbb
pop
ret
inc
jne
fneni(8087
stos
leave
xchg
ficoms
jo
scas
in
pop
and
pop
jl
popf
enter
jp
xchg
idivb
cmc
jno
int
shrl
out
es
scas
dec
xor
nop
sub
push
jmp
es
mov
xchg
out
aam
xchg
leave
lcall
cmp
xchg
adcb
and
xchg
xchg
cltd
xchg
pusha
imul
mov
xchg
dec
jg
mov
jecxz
fmul
repnz
xor
mov
loop
aas
dec
lods
push
test
mov
adc
repz
insl
sub
call
aaa
fnstcw
rolb
loopne
scas
jmp
mov
add
lock
jg
aaa
xchg
scas
mov
sbb
xor
movsl
aaa
mov
out
test
push
addr16
inc
in
fists
adc
ret
sbb
shlb
out
xor
sbb
aas
mov
or
jge
ja
lret
jo
push
loop
movsl
stc
arpl
gs
mov
pop
pop
je
and
and
fwait
jp
aam
xor
ret
pusha
jl
and
fdivrl
xor
cmpsl
sbb
xor
stc
les
lret
mov
cs
pop
push
in
push
pusha
sub
adc
outsb
xor
sub
or
mov
cmc
mov
adc
clc
xchg
jmp
mov
cli
sub
add
inc
push
pusha
lahf
gs
adcl
dec
mov
lahf
sub
mov
lods
inc
xor
dec
sbb
pop
push
in
cmp
and
mov
fwait
test
cmp
popa
or
xor
in
js
push
dec
push
xor
jg
or
les
ljmp
sbbl
push
jecxz
jmp
std
fdivp
testl
pop
inc
sbb
in
sub
leave
mov
sbb
push
popf
mov
adc
in
xor
pop
test
in
xchg
jmp
dec
xor
xor
and
sbb
push
repz
sub
jg
cmc
xchg
push
mov
mov
pop
jmp
pop
mov
push
out
lods
sub
mov
push
cmp
or
xor
out
imul
push
sub
mov
bound
fstps
push
cmp
test
adc
xchg
jb
sahf
mov
popa
imul
sbb
adc
xlat
dec
aam
outsl
lret
fcompl
or
imul
xchg
clc
jns
mov
shl
mov
cmp
test
andb
pusha
sbb
xor
xor
adc
xchg
inc
xor
out
fdiv
mov
push
xchg
jae
adc
les
ja
lret
cmc
sbb
xchg
scas
jle
cmp
outsl
fcoms
test
mov
inc
and
fcmovbe
push
push
test
push
sub
adc
add
mov
push
fidivrs
mov
pop
sbb
cmp
out
mov
lods
dec
push
add
push
push
adc
push
insb
dec
stc
or
mov
fldt
xchg
test
jl
pop
cmc
sbb
fcoml
in
js
popf
mov
call
jno
sbb
and
test
fnstcw
sbb
xorb
cmp
shll
adc
adc
fwait
mov
test
add
ret
sub
dec
mov
loopne
sbb
add
shlb
insb
loopne
jg
and
mov
xor
js
mov
push
fs
dec
je
xchg
cli
imul
adc
xchg
dec
push
divl
inc
insb
and
xor
sti
in
sar
aaa
xchg
xchg
xor
mov
xchg
mov
into
adc
pop
pop
mov
aad
sarb
les
sub
jns
xor
test
jp
jg
in
subb
xchg
xor
nop
std
push
mov
mov
popa
inc
jg
cmp
xorl
dec
addb
xor
jo
fmuls
cmp
mov
mov
inc
loop
fxch
movsl
incl
xchg
jg
rclb
test
jg
jnp
aaa
xchg
inc
dec
add
fidivrs
xchg
inc
lock
mov
fwait
push
ja
sub
es
xchg
lds
pop
cmc
dec
mov
mov
mov
jecxz
cmp
leave
cmp
movsl
cmp
mov
adc
lods
jp
adc
outsl
and
loop
clc
sahf
pop
ljmp
aam
add
xchg
sbb
loope
lds
lea
iret
pop
sbb
sbb
mov
xchg
add
bound
push
mov
push
push
out
sub
jmp
fadds
dec
ljmp
inc
dec
fcompl
pop
jno
hlt
clc
cmp
aam
ljmp
scas
inc
cmp
faddl
cmp
adc
mov
imul
sub
inc
out
jl
jnp
fwait
xor
mov
adc
pop
and
iret
sub
ficoms
cwtl
xchg
jbe,pn
test
enter
inc
out
jecxz
push
xchg
sub
and
jns
add
loope
mov
lcall
mov
pop
inc
mov
jae
test
add
lods
mov
push
sbb
test
movsb
test
mov
idivl
outsb
cmp
js
xorb
cmc
cmp
cmp
in
jmp
jbe
aaa
outsb
sbb
jno
ret
add
xchg
pop
pop
pushf
sahf
push
pop
sub
test
es
clc
xchg
add
sub
mov
jno
adc
scas
fnstcw
dec
add
mov
mov
cmp
mov
decb
jmp
inc
mov
and
cs
cwtl
sub
or
add
dec
out
mov
clc
je
pop
inc
xor
pavgb
aas
fcmovb
stos
xchg
lcall
mov
push
pushf
sahf
jmp
cli
xchg
test
pop
inc
fptan
mov
js
or
cli
fs
push
add
push
dec
fildl
lods
ljmp
xor
mov
add
jns
shlb
icebp
xchg
xor
sub
xorb
sbb
fs
rcll
daa
pop
rcll
stos
sbb
pop
loop
icebp
mov
sbbl
mov
xor
jg
mov
mov
xchg
xchg
out
cmp
in
add
and
test
pop
fwait
mov
test
cmp
jle
shlb
movsb
das
xchg
cmp
das
fs
jmp
nop
cld
mov
pop
or
mov
or
jecxz
cmp
cs
xor
sbb
pop
push
xchg
fstpt
imull
fimull
xchg
mov
ret
mov
dec
fmul
or
add
int
nop
cmp
cwtl
sub
imul
sarl
or
fcmovnb
fsts
test
pop
int3
lcall
shrb
enter
and
fnstenv
xlat
cmp
insb
fwait
jl
cmc
add
sub
shlb
jae
leave
into
xchg
icebp
mov
shll
mov
out
lahf
push
push
loop
mov
push
mov
sub
popa
bound
cltd
mov
inc
xchg
test
jns
lahf
arpl
cmp
push
cmp
idivb
pop
ds
mov
and
dec
pop
xlat
daa
add
adc
mov
mov
cmp
ficoms
mov
in
scas
test
lds
stc
hlt
jl
mov
mov
in
fcoml
leave
add
aaa
mov
out
mov
fdiv
xchg
insl
or
fstpt
cs
pop
xchg
test
pushf
fxch
pusha
sub
leave
mov
data16
cld
add
pusha
sbb
mov
sti
xorl
cli
sbb
mov
sbb
add
pop
mov
sbb
fmuls
or
mov
inc
jns
rcrl
inc
aas
adc
test
fdivr
subb
cld
movsb
testl
push
test
cmpsl
jmp
mov
mov
add
inc
mov
inc
repz
or
pop
arpl
int3
out
pop
add
sub
jp
stos
or
mov
into
dec
sbbb
adc
mov
inc
loope
pusha
out
sub
push
jnp
xor
pop
addr16
inc
fnstenv
or
int
out
sbb
lods
fisttpll
stc
jo
fisubs
xor
hlt
out
cmpsb
sub
mov
mov
add
cs
rclb
fldenv
cmp
aaa
sarl
cli
inc
call
xor
adc
lock
mov
cwtl
popa
mov
sub
push
sub
sbb
dec
inc
pop
sar
jbe
or
xor
push
pop
pop
mov
cwtl
ss
mulb
fcoml
fisttpll
xor
mov
push
sbb
fs
repz
mov
push
addl
bound
and
dec
andb
pop
jmp
xchg
lcall
xor
pusha
sub
out
addr16
xchg
push
cmc
cltd
jmp
and
lahf
lret
pop
xchg
div
movsl
stc
stos
test
jge
cmp
sbb
dec
xor
lds
adc
xchg
sub
negb
adc
xchg
ss
push
test
repnz
and
loope
xchg
sub
mov
sub
jge
push
inc
sub
push
test
insl
mov
xchg
jns
mov
and
aam
mov
insl
les
cltd
xchg
add
arpl
and
pop
negl
mov
push
bound
jns
jae
add
xor
push
aas
cmp
xorb
xchg
jnp
mov
adc
divl
xchg
sub
jg
push
pop
add
and
adc
and
or
iretw
mov
add
aas
adc
hlt
cmc
test
cmp
in
andl
and
add
js
call
push
dec
xor
arpl
or
cmpsb
add
ljmp
add
mov
subb
stos
shrb
pop
sbb
push
xor
daa
bound
scas
cmp
arpl
mov
and
mov
mov
inc
dec
test
sbb
jno
lods
add
mov
add
dec
mul
or
pop
jp
sub
inc
push
jmp
clc
leave
scas
inc
repz
jae
jae
pop
add
scas
ds
movsl
dec
xchg
mov
movsl
mov
inc
sub
push
cmp
sub
and
xchg
xchg
popf
pop
xchg
cmp
sbb
push
mov
jl
notl
and
xchg
fs
xchg
cmp
scas
adc
pop
bswap
je
xor
add
test
gs
pop
jl
imul
addr16
js
testl
mov
out
mov
negl
jae
les
sub
mov
push
dec
sub
mov
mov
jecxz
lods
pop
into
add
inc
test
lret
or
iret
pop
push
into
cmp
push
sub
pop
adcb
mov
push
test
imul
dec
push
mov
notb
dec
std
cltd
mov
out
or
mov
sub
adc
test
int
mov
cmp
rcrb
mov
stos
fldenv
inc
cwtl
loope
lcall
in
mov
loopne
je
push
add
insl
aas
mov
stos
add
pusha
out
pop
xchg
push
pop
cltd
test
mov
ss
test
mov
dec
jo
inc
cs
inc
mov
push
dec
ud0
sbbb
mov
mov
test
mov
xchg
sub
cmp
aas
hlt
push
fildl
jne
stc
mov
xor
fstpl
xchg
call
mov
mov
xor
gs
out
pop
mov
cmpsb
adc
ljmp
pop
jne
dec
scas
cmp
mov
inc
adc
and
or
xchg
cld
insb
call
mov
sbb
insb
cmp
sti
dec
xor
mov
popa
aas
dec
cmp
mov
mov
jg
call
out
xor
test
cmp
ret
dec
or
repz
or
jns
ja
xor
xchg
call
jmp
movsb
add
xchg
pop
add
rorl
popa
jb
clc
sarb
dec
xorb
jecxz
pop
mov
jmp
mov
rol
mov
fisubl
shlb
lahf
sub
je
fbstp
cmp
jns
fnstcw
stc
loopne
and
mov
mov
sbb
xchg
rorb
xor
sub
sbb
jmp
subl
cmp
ljmp
dec
repz
inc
cld
leave
inc
in
pushf
push
cmp
inc
cmp
sub
xor
data16
mov
loop
sub
xor
pusha
fdivr
add
lahf
adc
cmp
cmp
stos
rorb
push
loop
jno
or
out
mov
jae
push
pop
pusha
sub
out
sbb
std
cmp
ss
scas
xchg
xor
cmp
push
jnp
pop
xchg
cmp
addr16
orl
ret
dec
shlb
jb
add
xor
push
mulps
pop
adc
mov
mov
xor
adc
inc
mov
mov
ljmp
sbbb
xchg
jecxz
in
adc
mov
testl
cmpsl
mov
xchg
in
mov
push
in
xchg
or
jo
lods
icebp
pop
in
xor
testb
mov
lret
loop
lds
dec
jmp
out
cmp
cltd
test
cmc
lahf
mov
test
das
sbbb
ljmp
inc
ja
mov
lods
pushf
or
call
out
pop
xchg
mov
outsl
repnz
mov
xor
jb
sbb
cmp
popf
inc
xchg
stos
fiadds
pop
hlt
fcoml
mov
dec
xchg
ds
aad
and
rep
filds
jl
pop
xchg
aam
pop
test
pushf
pop
loop
xor
dec
cmc
movl
fiaddl
mov
lret
dec
sbb
mov
mov
cmp
cmc
int3
mov
sti
mov
popf
test
mov
xchg
scas
test
sub
inc
and
jmp
fistl
mov
xchg
repnz
icebp
push
or
cs
test
stos
cmp
jnp
xor
std
jae
xchg
sahf
mov
lahf
neg
gs
test
rorl
jo
adc
lods
lea
test
arpl
cmp
sub
imul
pop
xor
rcrl
mov
pop
rcr
or
cmp
sti
jg
loop
aas
es
push
test
dec
xor
test
add
out
lret
adc
adc
mov
paddw
push
cmp
adc
insl
inc
adc
jmp
addl
adc
loop
dec
fidivrs
and
push
dec
jmp
add
ret
add
xchg
mov
push
dec
lcall
inc
cld
xchg
jne
jnp
mov
add
repz
lret
jmp
push
sub
push
pushl
test
shlb
incb
mov
inc
test
inc
jb
mov
movsl
push
cmp
cli
dec
pop
jne
dec
mov
scas
sub
push
and
movsl
push
jnp
xchg
cld
aaa
lahf
mov
test
mov
aad
pop
loop
adc
addb
mov
gs
push
in
cmp
dec
xchg
adcl
fidivs
cmpsb
test
das
dec
mov
in
jnp
xchg
push
adc
sbbl
insb
lcall
fsubl
scas
icebp
subb
jge
pushf
cmp
adc
mov
fnstcw
pusha
mov
jns
jmp
push
outsb
rcl
stc
xchg
or
dec
push
and
xlat
mov
sub
xchg
jg
xchg
xchg
add
sbb
testb
test
xchg
fldenv
inc
jp
add
xchg
repnz
in
sbb
in
mov
push
pop
out
shlb
dec
push
xsha256
cmpsb
nop
test
out
test
dec
loopne
adc
dec
inc
cmp
roll
jnp
loope
std
dec
bound
pop
divl
cwtl
jl
xchg
rclb
out
repnz
and
add
js
addr16
inc
int3
pop
sarb
shlb
sub
cwtl
test
jo
cs
adc
movsl
int3
cmp
push
sub
cmc
cmp
movsb
test
rcll
mov
add
out
and
mov
ret
mov
fcomi
mov
rolb
in
int3
jb
xchg
cld
cmpsb
cs
jl
cmp
inc
in
cmp
mov
das
mov
mov
hlt
push
xchg
pop
add
jle
lods
cmp
push
je
dec
xchg
mov
jns
mov
pop
push
push
addl
mov
jns
repnz
dec
xchg
clc
add
daa
aas
lea
sbb
jle
jge
repnz
jl
adc
inc
or
mov
pop
or
sbb
cmp
xchg
test
mov
fs
mov
inc
dec
aas
mov
push
aaa
xor
ja
sub
shlb
rclb
imull
mov
mov
divl
add
push
jg
cmc
cld
push
pop
cmc
mov
pop
daa
xchg
icebp
mov
jl
xchg
xchg
push
es
hlt
repnz
or
ret
mov
xchg
push
lahf
mov
adcl
and
xchg
mov
test
sub
mov
xor
daa
adc
adc
lods
pushf
rorl
dec
scas
mov
jl
push
das
fists
sub
push
arpl
mov
test
dec
xchg
ret
and
jno
inc
pop
and
fdivs
cmp
aas
jecxz
mov
sbb
inc
lds
enter
aas
adc
stc
loop,pn
mov
lods
cmp
adc
test
scas
fdivrs
mov
in
gs
inc
addl
push
dec
ja
or
sbb
xor
mov
loopw
int
clc
ja
mov
add
adc
sub
mov
loope
mov
shlb
and
cmpsb
jmp
repnz
sbb
xor
nop
scas
push
mov
pop
in
aam
jne
gs
push
push
filds
test
stc
xchg
fxam
arpl
lahf
cs
leave
movsl
fsubs
inc
mov
aaa
cs
pushf
jno
jle
hlt
or
or
xor
xchg
out
fsubl
pusha
xor
mov
mov
sti
es
xor
inc
gs
roll
rorb
icebp
dec
andl
scas
pusha
stos
jg
sbb
scas
pop
in
adc
lods
and
jo
push
lcall
cmpl
test
std
loop
sbb
mov
xchg
cli
sub
rcrb
sub
in
cmp
je,pt
sub
out
test
mov
pop
dec
insb
pop
outsl
dec
mov
fidivrs
dec
mov
cmp
shlb
xchg
adc
lcall
shr
jnp
xchg
adcb
aaa
mov
mov
cmp
sbb
jmp
dec
repz
in
push
imul
push
xor
and
or
adc
xchg
pop
dec
out
and
and
jnp
adcb
mov
xchg
push
divl
mov
and
je
out
adc
pop
push
addl
mov
sub
jbe
push
cmp
in
inc
mov
cmp
sbb
xor
les
popf
pushf
push
popa
pop
shll
mov
rcrb
aad
fs
movsl
cmpsl
pusha
jo
out
mov
sti
adc
xchg
mov
lret
xchg
inc
jo
pusha
cs
cmp
shl
sbb
in
xchg
es
insb
or
mov
in
jnp
and
addr16
jo
cmpsb
mov
mov
push
push
fs
add
mov
lcall
jo
dec
mov
es
mov
adc
test
nop
push
jbe
mov
mov
testl
popa
ss
xor
or
test
or
or
js
in
mov
ja
pop
jl
sti
js
arpl
rclb
xor
xor
cmp
incb
cmp
pop
push
jo
add
rcrl
imul
mov
dec
arpl
dec
push
dec
push
and
xchg
test
out
mov
xchg
xor
les
repnz
push
push
xchg
xlat
push
mov
das
and
jge
fwait
push
aad
and
cmp
mov
in
aas
push
enter
aam
pop
pop
dec
xchg
pop
dec
cmp
cmpsb
aad
leave
in
push
xor
je
pusha
sub
shlb
dec
sti
and
mov
push
xor
sub
cli
leave
sbb
xchg
sub
push
fdivrp
xchg
movsb
lcall
mov
pop
xchg
jecxz
mov
imul
test
mov
in
xor
pop
add
cmpsl
xor
sbb
jge
pop
ja
cli
je,pt
xor
inc
hlt
mov
imul
xchg
ficomps
lahf
cmp
push
and
imul
rcl
xchg
pop
jno
idivl
pop
xor
cmp
xchg
push
fidivl
inc
dec
hlt
push
repz
fs
pop
xchg
rcll
nop
xchg
pop
add
ud1
out
aas
sbb
push
incl
mov
add
mov
stc
mov
pop
xchg
pop
dec
mov
inc
dec
pop
xchg
iret
fwait
mov
lcall
xchg
loopne
pop
pop
and
or
insb
inc
cld
sub
dec
inc
and
adc
sub
popa
xchg
dec
xchg
push
out
sahf
cwtl
leave
daa
stos
mov
mov
sbb
idivl
ffreep
inc
in
test
fidivrs
pop
rcrl
loopne
in
lea
mov
cmp
mov
into
ja
push
cmp
jecxz
out
pop
adc
mov
push
inc
lcall
les
mov
idivl
popl
mov
cmpl
cwtl
dec
mov
dec
sar
loop
or
sbb
mov
sbb
push
loop
jno
fwait
popa
mov
scas
xchg
arpl
out
pushf
ret
cmp
in
les
or
lea
enter
mov
pop
loop
pop
add
stc
leave
sub
cmp
xor
xor
dec
insl
flds
mov
xchg
push
test
enter
loopne
test
xchg
xor
ret
sub
xchg
cmp
and
push
scas
xchg
iret
xchg
or
inc
ret
mov
dec
jnp
aad
clc
les
daa
inc
arpl
loop
or
enter
js
bound
pop
pop
mov
xchg
std
int
push
push
out
test
aam
in
int
sbb
dec
movsl
xor
icebp
cli
fiadds
sarb
ret
sbb
cmp
push
test
mov
scas
clc
pop
iret
stc
dec
inc
mov
repnz
cmp
or
pop
sbb
push
popa
stc
jbe
aaa
inc
adc
xor
data16
rcl
ret
mov
push
jns
test
mov
jmp
jl
xchg
shrd
jge
outsb
sub
imul
dec
imul
fwait
pop
mov
cld
imul
pop
mov
dec
cwtl
fistl
iret
hlt
cld
mov
ja
pop
xchg
out
xchg
push
pop
inc
out
jge
flds
jmp
imul
out
xor
repz
add
dec
movsl
inc
test
push
clc
mov
test
repz
es
addr16
mov
loop
enter
cli
jnp
push
iret
add
cmpsb
pop
fisttpl
pop
jb
jg
mov
lret
repnz
rcl
adc
sbb
pusha
jnp
mov
fsubrl
add
adc
rol
jae
fcomps
int
mov
or
adc
shrb
test
iret
ja
add
divb
or
fidivl
cmp
loopne
loopne
add
aad
push
icebp
dec
push
testb
fcmovu
scas
popf
fdivrl
sub
push
dec
adc
mulb
test
insl
pop
jp
adc
clc
dec
dec
sti
cmp
adc
or
mov
add
xchg
xchg
sahf
jno
sub
cli
mov
cmp
push
mov
mov
push
sti
push
test
pop
xchg
rorl
mov
and
inc
xchg
mov
mov
xchg
mov
cmp
inc
outsl
lahf
sub
or
sti
xchg
nop
jp
jno
in
adc
pop
stos
imul
je
aam
enter
mov
inc
ror
xchg
add
jle
dec
mov
in
add
sbb
jns
xor
ja
lock
insl
or
jmp
jbe
lret
inc
dec
sbb
aam
cmp
sub
and
inc
mov
mov
push
lock
cmp
pushf
xor
and
ret
dec
je
and
cmp
shl
mov
xchg
jecxz
jo
xchg
mov
and
inc
mov
dec
xor
leave
add
test
add
mov
mov
push
fsubs
or
ljmp
insb
mov
pop
iret
pop
push
popf
test
jnp
push
add
pusha
add
sbb
push
or
jnp
pop
and
and
mov
pop
loop
xchg
jmp
xor
cmp
lock
dec
fstl
sub
in
movsb
cmc
add
dec
mov
pusha
dec
data16
in
iret
clc
into
ljmp
loop
test
test
jecxz
mov
incl
cmp
sahf
lahf
inc
jmp
xchg
ret
xchg
test
out
xor
not
pusha
mov
mov
popf
repnz
mov
fwait
adc
and
push
sbb
jmp
cli
inc
jmp
loop
adc
bound
cmpsl
and
cmp
addr16
fwait
sbb
popf
fildl
in
inc
enter
test
cmp
pop
punpckhdq
jl
or
pop
repz
and
mov
sub
xor
fisubs
fdivs
jl
lahf
xorl
jg
jle
jge
cmc
xchg
and
testl
pop
sub
xorl
inc
inc
sub
mov
sarb
xchg
xchg
popf
lcall
in
jecxz
inc
or
lcall
cmp
pop
out
movsb
addb
cmp
rcrb
mov
call
lods
pop
in
shlb
sub
adc
ja
sbb
out
loopne
sbb
pushf
inc
addl
jecxz
cwtl
push
xchg
push
push
daa
pop
rcrb
test
push
cltd
loop
loopne
mov
cmp
aad
orb
or
test
sti
ret
sbb
imul
add
mov
lods
shrl
movsb
pusha
push
cmp
adc
jg
jno
testb
mov
push
ljmp
pop
es
pop
xor
mov
fisttps
cmp
push
pop
sbbl
bound
aas
divb
out
cmovb
cmc
jne
jmp
ret
or
pusha
push
shlb
shrl
cmp
sbb
mov
sbb
xor
iret
rolb
jo
xor
sub
leave
and
xchg
mov
mov
cmp
test
std
xor
imull
jne
sbb
mov
and
fidivrs
and
mov
sarb
filds
imul
std
lock
inc
fildl
sarl
inc
xor
sub
mov
ficompl
out
js
jl
mov
fimull
ds
push
es
sub
adc
sbb
into
cld
insb
jge
icebp
retw
mov
fdiv
sbb
icebp
jb
jmp
push
das
jb
cmp
xchg
adc
aaa
outsl
mov
mov
lods
clc
in
cs
out
jne
lds
push
jp
sbb
push
cltd
sbbl
push
sub
rcll
add
out
mov
test
loopne
push
push
test
xor
sub
xor
inc
pop
out
sub
or
xchg
repz
fdivl
add
movsl
add
xchg
loopne
dec
cmp
pop
not
inc
sub
fisubl
xlat
jecxz
lret
or
leave
push
xchg
mov
outsl
push
jl
test
les
out
pop
mov
scas
fnstsw
xchg
in
jbe
in
add
aad
inc
sar
cmp
sub
ret
outsl
xchg
mov
loope
lahf
pop
out
cs
jle
mov
push
dec
mov
lods
and
les
jg
jge
push
rcl
jne
adc
ret
pop
push
or
lcall
iret
stc
lret
pop
jno
gs
push
out
ds
aas
push
js
xor
sub
mov
xchg
push
rolb
loopne
pop
push
lret
xchg
add
sbb
add
pusha
and
rclb
bsr
pop
sub
or
enter
add
jne
mov
lds
xor
fimull
movsb
fsubl
dec
mov
loopne
into
pop
push
cmp
xorl
enter
fwait
insb
xchg
mov
push
sbb
mov
outsb
out
push
mov
mov
adc
cltd
pushf
pop
in
nop
cmp
dec
or
hlt
pop
pop
dec
jo
xchg
add
xor
cs
sbb
addl
cmpsb
sub
shl
mov
fadd
pop
jl
mov
add
cmp
stc
pushf
xchg
add
jge
out
add
in
cli
popa
sti
data16
xchg
mov
in
incl
or
cmp
pop
or
cmp
push
sbbb
xchg
jl
mov
stos
adc
insl
stos
fwait
add
cld
mov
cltd
cmp
push
mov
cmpsb
lret
pusha
push
jb
fs
mov
arpl
cmp
xchg
loope
pusha
mov
mov
ss
pop
cmp
xlat
push
sti
jno
nop
inc
sub
xchg
sub
inc
mov
pop
fs
leave
mov
adcl
test
lds
decb
xor
sbb
test
xchg
add
inc
xor
loopne
sti
in
xchg
xor
lock
mov
inc
data16
pop
jle
mov
popa
and
sub
jp
pop
jo
cmp
rorb
xchg
pop
movsl
ljmp
loope
shrl
je
xor
inc
sahf
ljmp
cld
stos
aas
mov
test
hlt
mov
cs
movsb
add
mov
inc
outsb
pushl
int3
push
cmp
pop
test
popf
mov
jns
ja
scas
add
and
dec
mov
popf
js
pop
mov
sbb
inc
push
pusha
xchg
cmp
add
xchg
sahf
repz
jmp
dec
mov
nop
add
cmc
sarb
lods
lea
dec
jnp
mov
scas
mov
jne
xchg
loop
jnp
xor
addr16
out
pusha
movsl
dec
cmp
imul
test
orb
dec
cld
es
imul
leave
cmp
jl
jmp
out
inc
push
xchg
test
adc
nop
movsb
cmp
adc
mov
out
mov
and
mov
sub
xor
int3
add
xor
cmp
jecxz
mov
loopne
cs
outsl
push
jmp
and
mov
xchg
adc
xor
push
sahf
cmpsl
xchg
jecxz
repnz
fsubrl
sti
push
fists
movsb
and
sbb
stos
test
cmp
xchg
mov
sar
add
mov
outsl
mov
xor
repnz
jge
mov
sahf
scas
sar
push
test
push
and
lret
pop
xchg
mov
xor
push
cmp
hlt
cmpb
shr
xchg
push
xchg
addr16
push
mov
dec
sarb
mov
movsl
jecxz
das
pusha
cld
push
jnp
je
scas
adc
xchg
dec
insb
adc
test
cmp
std
jo
jl
add
inc
dec
mov
and
xor
sub
std
mov
mov
dec
cmpsb
add
popa
ljmp
xchg
scas
mov
xchg
push
lods
movb
rcrl
mov
sbb
and
jmp
js
arpl
psrlw
ja
or
sahf
push
hlt
imul
push
pushf
pop
sbb
dec
rclb
test
insl
push
mov
int3
dec
mov
test
cld
cmp
daa
push
pop
jmp
sbb
and
mov
jg
or
out
es
and
cmc
jnp
mov
jbe
cmp
dec
cli
je
xchg
push
flds
xchg
fucomi
addr16
lods
pop
sti
mov
or
mov
pop
roll
dec
mov
or
ret
jo
subb
jl
cmp
push
push
push
rcl
push
das
cmpsl
push
das
aad
sub
scas
add
sub
push
or
inc
cmp
daa
outsl
push
out
es
inc
in
rcrb
xorl
pop
aad
repz
stos
imul
fimuls
xor
es
mov
xchg
enter
sbb
leave
test
jb
imul
mov
push
cwtl
inc
inc
pop
push
loop
popa
sbb
sbb
pop
adc
xor
xchg
daa
pop
rolb
pop
stc
push
lds
xchg
in
sub
movsl
cwtl
pushf
cmp
lret
xor
stos
repnz
push
dec
xchg
push
sub
push
cmp
arpl
jg
cmp
add
test
out
cmp
push
xchg
and
mov
in
xor
gs
xor
push
jmp
leave
rclb
mov
in
pop
cmp
xchg
add
sbb
daa
lahf
jmp
xor
xor
sahf
add
test
fldcw
push
jle
cmp
addr16
jl
pop
data16
ja
nop
mov
adc
xor
divb
cmp
xadd
test
shl
fisttpl
adcl
popf
xchg
jo
pop
jne
xchg
daa
sub
iret
mov
pop
sub
shr
add
inc
enter
add
xchg
in
into
add
dec
adc
cmp
mov
pop
add
fistps
bswap
insb
inc
add
pop
dec
xchg
int3
pop
call
jo
ss
test
dec
cld
mov
sub
mov
pop
icebp
or
mov
mov
adc
test
test
cmc
push
aaa
cmp
js
and
add
rcr
sti
movntps
fistpll
repnz
cmp
xchg
jns
xorb
xchg
inc
xlat
out
hlt
inc
les
mov
rol
cmp
mov
mov
daa
xchg
insb
push
mov
pop
jmp
adc
xchg
mov
xchg
push
pop
rolb
shrl
sbb
add
cmp
sbb
inc
cmc
sbb
push
js
inc
mov
jnp
pop
lahf
leave
and
in
scas
push
shrl
xchg
jno
out
insb
inc
jge
cmp
negl
sti
pop
cmp
mov
add
push
mov
inc
nop
mov
cmovno
jmp
pop
sub
adc
dec
mov
or
imul
cmp
in
insb
loope
mov
pop
repnz
cmp
in
mov
iret
sbb
mov
pop
pop
xchg
fstps
pushf
out
arpl
les
adc
jae
fwait
pop
push
lahf
xor
jge
adc
es
mov
filds
nop
int
out
dec
pop
scas
fidivrs
sub
sbb
push
callw
pop
mov
loopne
adc
pop
mov
and
jno
pop
or
or
je
dec
pusha
pop
lods
push
scas
pushf
fs
mov
or
cld
or
jmp
xchg
ds
inc
jmp
repz
test
fst
cmpsb
or
ffree
mov
mov
je
ljmp
ds
ds
addr16
popa
xor
adcb
data16
arpl
ficoms
and
arpl
mov
mov
test
repnz
dec
inc
pop
test
rcll
add
mov
out
insb
jl
aas
pop
divb
sub
repz
rol
xor
les
leave
mov
adc
mov
cmp
pop
outsb
pop
je
loope
imul
xlat
mov
push
jge
fstpt
rcrl
lea
ss
fdivl
pop
cmpb
sub
and
test
push
fsubrs
les
dec
or
clc
fnstsw
mov
or
ljmp
das
je
scas
xchg
sbbb
cld
insl
orl
into
in
xchg
inc
xchg
adc
cltd
andb
xchg
mov
mov
add
mulb
pop
shlb
aas
add
fldl
dec
in
data16
sbb
ljmp
les
loop
inc
fldl
push
push
mov
movsb
es
out
push
or
pusha
dec
test
in
insl
jbe
add
jns
mov
bound
movd
test
dec
rorl
pop
cs
push
fstpt
sbb
testl
xorb
insl
enter
imul
sbb
xlat
sarl
sbb
lods
scas
inc
jae
xor
jb
mov
mov
xchg
xor
es
les
dec
xor
xchg
ja
cmp
dec
aas
add
out
pop
mov
sub
add
and
outsl
jge
push
jb
in
cmp
divb
cmp
popa
es
xchg
jae
mov
inc
cmpl
adc
xchg
mov
mov
cwtl
xchg
mov
sub
lds
and
mov
outsb
cmpsb
int3
dec
insb
push
mov
push
adcb
or
stc
jns
nop
xchg
stos
xchg
fwait
inc
jle
xor
dec
loope
out
cmp
jb
dec
cmpl
xchg
sahf
and
bound
movsb
sbb
adc
inc
xor
sub
outsb
jle
mov
jae
gs
sbb
test
sarb
inc
cld
jmp
xchg
out
daa
lods
adc
aam
sarb
decb
sarl
pop
testb
xchg
mov
add
int3
mov
ds
mov
xchg
in
adc
es
imul
push
arpl
inc
mov
movsb
sbb
lahf
push
xchg
lahf
aaa
mov
xchg
xchg
popf
fs
out
jb
js
stc
ljmp
inc
fldenv
jmp
in
xchg
sbb
mov
and
xchg
out
sub
leave
iret
xor
cld
cmp
cmp
dec
xchg
xor
mov
test
sti
jae
iret
sarb
inc
leave
cmp
sti
ja
pop
addl
pop
mov
adc
lea
imul
sbb
or
sahf
cmpsb
movsb
jmp
add
fsubl
outsb
push
paddusb
mov
mov
mov
cmp
sbb
xchg
movsl
mov
stc
dec
fwait
test
lds
inc
dec
test
mov
lea
cmpsl
add
out
rorb
and
aaa
xchg
iret
xor
stos
fs
rorb
mov
dec
pop
test
fwait
sbb
repnz
lcall
jnp
jecxz
xchg
pushf
mov
stos
in
xor
in
roll
je
jl
je
xchg
cli
xchg
lods
pop
cld
cmp
test
xor
mov
jp
pop
inc
ja
lock
bound
cmp
dec
xor
movsb
inc
push
pushf
aaa
lahf
mov
lock
sbb
fsts
hlt
mov
lcall
push
movsb
cltd
mov
jl
xchg
idivb
das
adc
bound
pop
cltd
aaa
xchg
xor
stc
cltd
cs
ja
popf
push
mov
pop
ljmp
mov
lahf
inc
push
cmpsb
cmp
mul
cmp
scas
jle
mov
mov
xchg
jp
mov
popa
leave
cld
inc
add
lods
cltd
fsubrl
mov
xchg
add
ret
mov
fmuls
inc
lahf
dec
cs
sbb
pop
add
mov
lods
xchg
sub
xlat
jns
mov
xchg
popf
cs
filds
mov
ljmp
sbb
imul
shl
scas
roll
sub
sbb
data16
cwtl
rcll
popf
scas
push
call
and
movsl
lea
outsl
sbb
mov
xchg
mov
xchg
gs
push
jnp
mov
popl
test
data16
test
andb
sbb
push
xchg
pop
or
orb
add
push
in
push
inc
pop
lahf
aaa
jg
mov
scas
out
push
xchg
out
loope
scas
cmp
xchg
loopne
movsl
cmp
mov
negl
test
fistps
xchg
cld
daa
dec
test
outsl
cmpsl
or
movsl
jg
subb
dec
repnz
ds
adc
mov
jl
sub
jo
aas
push
scas
faddl
ljmp
jo
xchg
out
fwait
lds
dec
aas
daa
fs
jmp
or
enter
push
push
shll
push
fdivl
arpl
cld
inc
lea
mov
leave
sub
cmp
testb
leave
scas
push
pop
or
pop
and
sbb
stc
loop
adc
rcrb
cmp
pop
inc
insl
inc
idivl
pop
aad
dec
cmp
jle
xor
popa
imulb
and
jmp
sub
in
cld
mov
inc
imul
cmp
fsts
adc
notb
scas
mov
cmc
std
push
leave
ja
sbb
xor
out
mov
daa
out
into
lods
push
sbbl
ja
xchg
stos
sub
loop
enter
xorb
pusha
mov
out
test
inc
mov
sarb
fdivs
rcrb
dec
push
mov
xchg
cmc
fsubp
in
or
ficomps
icebp
xchg
or
add
stc
test
cmp
mov
push
adc
in
push
mov
test
in
cmp
push
roll
xchg
push
out
test
in
cmp
jno
pop
out
mov
sub
dec
test
pop
cmp
jl
mov
mov
lret
push
jl
out
test
mov
xchg
lahf
fisttpll
test
mov
or
fimuls
pop
pop
mov
in
enter
test
sub
xor
pop
sbb
mov
xchg
divl
mov
scas
hlt
into
pop
aaa
ja
shlb
ja
inc
xor
mov
movsl
into
es
mov
shl
ud2
inc
jg
sahf
sbb
ljmp
cmpsl
loopne
call
popf
mov
in
lock
push
ficompl
mov
add
sub
ret
pushf
mov
movsl
ja
cmpsl
fdecstp
cmp
aas
pop
loope
sbb
mov
inc
cmp
cmc
pop
sub
xor
lcall
or
ret
or
xchg
rcr
sbb
mov
cmp
xor
xchg
outsb
add
mov
xor
aas
or
aad
out
cmp
test
orl
ss
pop
mov
sbb
add
call
insb
push
pusha
pop
jl
push
pop
mov
stc
mov
add
sbb
sub
xlat
iret
xchg
push
psubusb
cmpsl
int3
gs
add
jne
aas
cmp
jno
mov
dec
or
lods
jecxz
pusha
faddl
inc
clc
xchg
das
pusha
loopne
leave
adc
cmc
dec
pop
aas
decl
xchg
jne
mov
dec
mov
lahf
out
or
aam
scas
mov
arpl
jnp
nop
test
and
mov
jbe
dec
adc
pop
notb
xchg
outsb
rolb
push
cld
mov
scas
mov
sbb
lret
in
mov
adc
rcr
xor
call
jb
lds
dec
xchg
fsubl
dec
iret
jle
inc
pusha
aam
and
or
popf
movsl
push
or
xchg
pop
xchg
out
clc
jns
adc
inc
repz
add
sub
divb
pop
sbb
popa
xlat
sahf
mov
sbbb
push
mov
cmp
mov
mov
not
mov
push
loopne
push
mov
loope
lahf
in
mov
sub
xchg
dec
dec
pushf
pop
ss
xchg
cmp
ljmp
pop
adcl
inc
shlb
lock
inc
xchg
in
test
out
add
shll
mov
iret
adcl
insl
xor
pop
jl
cmpl
or
and
insb
jns
fidivl
jg
add
faddl
test
pop
daa
adc
cmp
sub
loop
inc
out
fistl
xchg
scas
mov
push
xchg
mov
sti
lods
pusha
cwtl
mov
add
sub
and
sub
js
icebp
insl
mov
fiaddl
test
test
nop
cmpsl
xor
arpl
dec
shll
shl
push
pushf
dec
pop
out
cmp
sti
jge
mov
inc
daa
adc
sub
and
add
mov
movsl
inc
xor
lods
pop
ja
add
sahf
xchg
pop
sti
dec
cmpsl
cmpsb
push
mov
leave
or
push
fdivl
sti
xor
sbb
adcl
out
das
sbb
inc
in
in
push
cmp
mov
inc
in
cs
adcb
out
clc
mov
test
push
push
jge
xor
mov
jle
sti
ljmp
ljmp
mov
leave
jnp
mov
das
xchg
ss
jae
mov
mov
mov
lods
jbe
dec
shl
movsb
outsl
mov
stc
in
mov
scas
faddl
push
fidivrl
daa
pop
or
lahf
inc
ds
bound
and
iret
xchg
inc
mov
fiaddl
pop
xchg
imul
pop
and
pusha
pop
sbb
inc
bound
dec
addb
fs
mov
cs
into
xchg
ficompl
push
pushf
pop
xor
in
arpl
scas
hlt
adc
sarb
imul
or
fstps
pop
ljmp
inc
inc
lret
sbb
test
std
dec
add
inc
and
push
loopew
out
test
rorb
xchg
and
inc
into
mov
add
mov
scas
js
xchg
mov
movsl
mov
push
pop
push
rorl
and
shrl
mov
test
shll
shrl
sub
in
les
bound
shr
fwait
mov
dec
pop
icebp
mov
adc
mov
push
mov
cmp
mul
repnz
add
jp
mov
xor
out
popf
cltd
jl
outsl
mov
pop
mov
cmp
unpcklps
dec
jge
jnp
mov
scas
xchg
adc
jo
sbb
repnz
stos
decl
test
stos
xchg
lds
lods
nop
scas
inc
imulb
movsb
cmp
jns
movups
gs
mov
push
cld
xchg
push
cli
ss
xor
pop
das
loop
push
dec
clc
hlt
xchg
loopne
mov
jbe
lahf
clc
aas
pop
mov
je
sbb
das
loopne
out
dec
xor
or
cmc
push
sbb
nop
or
gs
mov
pop
test
push
shrb
cmp
stos
cltd
fstpt
dec
call
bound
into
in
adc
fcomps
add
and
dec
inc
sub
or
pop
inc
jb
test
xchg
sti
sbb
aas
push
loope
push
xchg
jbe
imul
adc
std
push
dec
aam
pop
xor
sarl
outsl
addb
cmp
rcrb
or
popf
lcall
mov
cli
push
inc
or
in
or
data16
dec
je
inc
or
cmp
fisubrs
stc
mov
push
test
ss
mov
mov
push
cld
mov
sbbb
lcall
mov
pusha
ss
pop
and
dec
adc
jmp
aad
inc
rorl
mov
lea
xlat
adc
push
mov
test
rolb
dec
pusha
mov
pop
pop
cmc
jp
mov
iret
mov
or
mov
xchg
call
int
cmp
test
jns
xchg
mov
or
push
fnstenv
add
cmp
mov
or
fidivl
jl
and
inc
add
out
scas
add
data16
in
or
push
mov
cmp
inc
pop
pop
bnd
push
shlb
pushf
test
mov
enter
sub
aad
cmp
insl
psllq
rolb
je
shlb
xchg
pop
xchg
test
jo
insb
ja
mov
push
add
adc
inc
mov
leave
jns
add
negl
push
pushf
push
xor
aas
cmp
out
mov
mov
add
adc
insb
repz
aad
and
jle
xor
mov
add
xor
cmp
mov
sbb
incb
sub
lods
or
ljmp
push
inc
sbb
cmp
xchg
adc
aam
push
push
hlt
sub
pop
dec
push
je
les
repnz
add
sahf
test
es
inc
popa
mov
mov
xchg
lock
add
pop
test
out
xor
mov
xchg
dec
adc
mov
fimuls
add
lods
aas
mov
push
mov
mov
cmp
cwtl
insb
cmp
xchg
aad
rolb
mov
test
adcl
sub
push
sub
push
xchg
mov
jns
enter
jg
cmp
stos
jnp
mov
ds
mov
sub
lea
mov
scas
or
negb
ja
jo
xchg
outsb
das
insb
das
mov
mov
int
pop
pusha
daa
and
mov
jle
shrl
pop
jns
mov
jo
and
leave
jmp
and
in
lret
xchg
data16
outsb
rolb
dec
mov
lret
scas
in
cmpb
nop
gs
mov
xchg
mov
jge
pop
bound
repz
sbb
fisttpl
push
fs
rolb
mov
jb
sbb
sbb
or
popa
adc
out
rcll
ror
test
mov
jae
testl
fildll
adc
fnstsw
out
cmp
aas
lods
mov
dec
xchg
dec
mov
test
and
xchg
insb
aas
int
mov
sbb
cmc
xor
test
inc
sub
dec
scas
gs
sti
fisubrl
fimuls
mov
in
jae
xor
mov
aad
jmp
pop
outsl
inc
mov
dec
cmp
aaa
pop
es
mov
jns
and
push
in
lds
pop
mov
jp
push
popa
flds
inc
xor
mov
test
and
cmpsl
lods
pop
sub
xchg
int3
xchg
fadds
mov
or
mov
pop
inc
mov
loope
mov
bound
int3
jo
out
or
test
push
mov
test
xchg
pop
mov
sbb
subl
sbb
add
rol
cs
sub
nop
push
cs
icebp
inc
gs
test
push
mov
outsl
and
push
dec
mov
rorb
sub
cmpsl
test
cli
xchg
inc
loope
mov
faddl
adc
das
idivb
jae
mov
xor
pop
movsl
cmp
sbb
dec
xor
test
popa
or
dec
loopne
sub
ret
jle
xchg
xchg
cs
and
fimuls
fists
mov
mov
mov
pop
and
mov
cmp
mov
xor
jbe
inc
insl
test
lcall
mov
ljmp
cli
pusha
xchg
mov
fbstp
jp
pusha
rol
mov
ja
fcomp
mov
cmp
sahf
push
aad
lock
repnz
inc
dec
testb
cltd
fildl
je
inc
ja
repnz
cmp
ja
xchg
xor
fs
shl
iret
imul
dec
jae
test
roll
lods
sub
cmovo
je
and
sub
jnp,pn
sbb
dec
cmp
xchg
in
pop
mov
in
fdivrl
fistpl
xchg
add
mov
rorl
es
inc
cmp
enter
fwait
decl
inc
or
xchg
test
stos
repnz
in
xchg
stc
xlat
shl
decb
cmp
xchg
push
aam
shl
xor
mov
vphaddbd
cmp
cmp
insl
jle
leave
scas
push
xchg
leave
pop
int3
imul
arpl
push
cltd
dec
xchg
scas
subb
adc
aas
ds
aad
pop
push
mov
lea
mov
add
shrb
out
cmp
mov
call
jno
mov
or
sub
loope
jmp
pusha
movsl
dec
add
shlb
sbb
add
in
dec
push
test
and
cmp
sub
fldz
push
out
test
lods
sbbl
mov
push
loop
es
arpl
or
fnstenv
xchg
loope
add
ljmp
aad
push
popa
mov
test
sahf
ret
fdivrs
push
mov
push
cmc
sbb
ja
ljmp
mov
loopne
inc
mov
jbe
ja
insl
jg,pn
aas
insl
inc
loope
shl
inc
sbb
and
cld
loope
inc
out
insl
and
andl
es
gs
aam
test
jae
pop
jmp
mov
cwtl
sub
mov
mov
pop
test
mov
loope
cmc
test
mov
pusha
adc
sbbb
jl
jnp
and
and
inc
shlb
and
fwait
testb
mov
pop
orb
test
cmpsb
sbb
mov
pop
mov
jecxz
mov
mov
and
in
cmp
scas
add
je
xor
adc
xor
clc
xor
jge
xor
addr16
stc
shlb
or
outsb
push
dec
push
lret
loope
shrl
sub
test
dec
sbb
icebp
adc
cli
and
jns
sbb
out
pop
test
xor
xor
push
mov
or
aas
and
cmp
sub
xchg
xchg
jp
ljmp
fucomi
aaa
inc
mov
mov
sahf
out
in
push
cmp
jmp
push
push
sbb
out
sbb
insb
xor
lret
imul
push
adc
cmp
mov
mov
push
test
inc
push
scas
aam
in
maxps
ficompl
dec
popf
jp
popf
mov
cmc
sbb
cmp
push
push
fwait
clc
add
cmp
idivb
inc
adc
lcall
mov
add
dec
inc
mov
dec
cli
bound
imul
ds
jle
or
stos
mov
sbb
shlb
push
pop
test
add
repnz
daa
pop
popf
or
mov
push
mov
out
xchg
push
mov
inc
jns
gs
adc
and
aam
mov
mov
inc
cwtl
mov
xor
xchg
dec
pusha
mulb
js
pop
les
fistpll
sub
lods
fidivrl
jo
and
dec
jno
arpl
cmp
mov
xchg
stc
aas
test
inc
les
call
add
pop
sub
nop
jmp
aas
loop
push
pop
mov
nop
in
mov
jno
cmpsb
inc
test
cltd
inc
dec
xchg
inc
cmp
add
xor
lea
xor
pop
sub
sub
pop
dec
cmp
jne
addr16
mov
dec
clc
imul
push
pop
inc
leave
cmp
adc
pop
in
xor
test
test
ja
adc
add
sub
jmp
xor
jp
insl
xchg
push
jmp
fmuls
xchg
cwtl
mov
xlat
or
mov
xchg
add
or
jae
rcll
and
std
addr16
dec
jns
stc
fwait
repnz
xor
push
lock
sub
inc
repz
lahf
ljmp
mov
pop
mov
out
setnp
cmpsb
aas
mov
not
xor
or
push
xor
xor
scas
xchg
gs
inc
adc
out
adc
cmp
in
adc
mov
jl
jle
stc
xchg
lods
jmp
pop
xor
test
adc
lahf
ljmp
in
arpl
sub
scas
xor
ret
cmpl
cmp
scas
arpl
test
sahf
and
adc
popf
call
cmp
insb
xlat
mov
mov
xchg
sub
cmp
inc
popa
lcall
jle
xchg
inc
imul
outsb
out
js
inc
loope
test
cmp
rcll
xor
cmpsb
mov
test
mov
aas
divl
ja
add
jns
xlat
xor
mov
andb
push
pop
sbb
sbb
fdivrs
sub
scas
fwait
lods
pop
rclb
cmc
push
es
jecxz
inc
xchg
xor
cmp
jl
push
test
or
scas
int
inc
dec
pop
pushl
jge
pop
push
popf
cmp
bound
incl
and
lahf
idiv
sub
jae
sti
dec
shr
or
repnz
fnstenv
pop
scas
pop
stc
loopne
mov
rclb
dec
and
push
add
hlt
sahf
sbb
ss
shll
repnz
sub
cli
pop
fcoml
mov
lea
test
inc
ret
jl
pusha
ja
inc
mov
xrelease
stc
xor
sbb
adc
mov
ret
out
mov
jmp
and
jae
dec
mov
lret
dec
xchg
movsl
imul
pop
addl
insb
test
je
and
sub
push
xlat
xlat
mov
jns
inc
popa
inc
sbb
push
mov
sbb
cmp
sub
rcr
mov
push
mov
push
cld
xor
shll
out
adc
js
mov
jne
mov
out
int
ja
and
inc
add
xor
mov
sbb
lea
out
gs
cmp
mov
mov
cwtl
testl
push
ljmp
sub
mov
cmp
dec
sbb
div
fildll
pop
out
mov
mov
popa
jb
leave
cmpsb
cmc
sub
lods
mov
ret
mov
adc
jle
cmp
cld
mov
pop
stos
mov
mov
xlat
sbb
inc
mov
mov
mov
icebp
inc
push
out
in
pop
in
repnz
negb
pushf
js
hlt
add
ljmp
jno
out
mov
imull
push
cmp
adc
push
cmpsb
jae
test
cs
jb
iret
jp,pt
sbb
fstl
cmc
xor
or
mov
pop
push
mov
and
pop
sub
lret
or
mov
dec
stc
jae
imull
and
dec
inc
or
mov
push
mov
lods
xchg
repnz
mov
xchg
out
into
mov
mov
daa
mov
sti
out
mov
mov
cmp
enter
iret
icebp
dec
add
xchg
mov
ja
cmp
decl
leave
loop
inc
sub
sbb
pop
scas
sub
xchg
push
cld
scas
jns
icebp
lds
xchg
out
xlat
bound
or
pop
sub
xchg
xchg
pop
xchg
push
add
jp
sub
ret
mov
adc
add
sbb
dec
xchg
ret
sub
inc
insb
shlb
and
aaa
cltd
push
and
add
xchg
xchg
rclb
and
xchg
jmp
ret
ret
dec
push
loopne
jmp
fs
neg
push
imul
cmp
push
sbb
jecxz
jle
dec
in
push
movsl
xchg
jg
pop
dec
dec
dec
sbb
fidivrs
inc
das
mov
rolb
sbb
idivb
jp
fwait
xchg
or
sbb
arpl
outsb
shlb
test
pop
and
mov
sub
inc
cmp
cwtl
pop
sub
fidivrs
mov
sub
in
jl
push
lahf
mov
in
mov
in
dec
sub
loopne
and
pop
fwait
xor
push
push
in
dec
xor
pop
cmp
or
pop
push
out
xor
pop
and
scas
push
jecxz
push
gs
or
loopne
sbb
jl
or
int
fldcw
pop
dec
cmpsl
pop
loope
lods
cld
mov
cmp
call
xor
sbb
cwtl
out
int
fwait
sbb
xchg
out
int
lea
inc
push
inc
mov
lods
push
roll
cmc
cmp
arpl
pop
cmp
cmp
test
xor
fwait
test
xchg
mov
rorb
sbb
test
add
mov
ja
pop
cmp
mov
ljmp
jne
xchg
xchg
cltd
test
roll
cmp
or
cmp
pop
sub
sbb
jge
adc
aam
ficoml
mov
loopne
adc
test
aas
and
mov
push
pop
pop
pop
jae
mov
pop
cwtl
or
pop
inc
mov
in
insb
lds
ja
inc
jnp
movsw
mov
add
pop
push
dec
jg
add
aas
outsb
jl
cld
sbb
fwait
mov
inc
jo
sbb
bound
dec
xlat
mov
mov
mov
sahf
test
dec
stc
jle
clc
pop
and
mov
aaa
test
sbb
fsubs
repnz
sbb
es
lea
out
bound
and
push
out
pop
std
cmp
add
aaa
or
fwait
inc
sbb
loopne
nop
mov
push
inc
clc
adc
mov
inc
mov
cld
sahf
pop
dec
mov
sbb
add
test
and
adc
and
test
sahf
push
xchg
in
imul
cmpsl
mov
shrb
xor
pop
inc
sarl
ret
mov
jg
pop
lcall
fistpl
xchg
push
roll
rolb
mov
push
xor
mov
pop
pop
test
cmpsl
jl
sbb
orl
xchg
xor
repnz
inc
pop
sbb
les
data16
popa
inc
dec
out
jle
cmovns
cs
mov
sub
dec
mov
push
shld
xchg
sarb
imul
sbbl
arpl
mov
sub
push
lods
xor
loope
sbb
pop
aas
sarb
mov
inc
push
adc
ficompl
nopl
adc
es
pushf
test
arpl
adc
icebp
orl
push
outsl
and
lcall
in
in
insl
cmc
mov
xor
int3
or
cld
mov
mov
jl
lret
fisttps
lcall
fnstcw
lods
in
jns
inc
xorb
sub
add
shrb
outsb
js
push
add
pop
popa
outsb
push
or
fsubl
add
lcall
mov
sub
xor
lahf
push
sbb
out
ljmp
mov
lcall
cs
sub
mov
xchg
adc
xchg
cmp
lock
cmp
ljmp
dec
test
popa
xchg
fs
jo
inc
pop
mov
lods
push
pop
ds
sub
imul
xor
xchg
mov
xchg
std
out
xchg
sbb
outsb
daa
inc
ret
pop
aas
call
lret
add
test
scas
xlat
pushf
outsb
rcrl
cmp
iret
test
inc
xchg
int3
loope
mov
and
dec
add
test
cmp
orb
push
int3
in
mov
mov
adc
add
repnz
test
mov
sar
stc
ljmp
insb
repz
js
sub
js
adc
lret
inc
cmp
sub
xor
sbbb
test
shrb
jg
ss
pop
pop
fcmove
xchg
into
sub
popa
jmp
xlat
rorb
mov
jbe
pop
push
inc
lea
popa
jmp
cmpsb
jge
mov
sbb
push
insl
rclb
or
cmp
aad
out
jmp
adc
daa
cmp
sub
or
mov
andl
aas
addr16
test
jae
add
out
fsincos
xor
xchg
cmp
out
aaa
aam
push
icebp
mov
fcmovnu
rorl
test
aaa
mov
int
out
insb
movsl
sub
inc
dec
inc
ficoml
jge
dec
gs
les
xchg
dec
daa
shlb
pop
jnp
dec
movb
loopne
das
ljmp
loop
sti
loop
mov
lret
add
out
bound
sub
jo
cmp
sbb
test
pusha
xor
loopne
push
sbb
pop
test
sub
and
loop
adc
xorb
sbb
push
push
xchg
fcomp
ret
push
pop
sub
xchg
or
test
push
pop
aaa
jne
int3
jb
sub
fsubrs
mov
pusha
lods
bound
test
orl
jb
sbbl
mov
mov
imul
pop
mov
or
fs
flds
pop
imulb
leave
mov
insb
scas
ret
inc
mov
cmc
cmp
ret
cmp
sub
or
xchg
stc
dec
je
loope
push
insl
dec
xchg
mov
js
inc
fisubrs
fbld
cltd
cmp
fs
add
rorb
jmp
xor
cmpsb
inc
add
push
cmpsb
cmp
pop
mov
into
mov
mov
mov
popa
nopl
test
jb
loopne
jl
sub
sub
test
mov
sbb
mov
test
ja
call
mov
inc
es
addb
sub
stos
mov
dec
aam
fdivl
push
mov
inc
or
popa
jecxz
call
jl
leave
int3
js
mov
mov
cmp
scas
mov
sbb
adcl
in
dec
dec
sbb
scas
nop
adc
insl
cli
insb
mov
pop
mov
ret
push
iret
cmc
in
into
mov
dec
gs
dec
and
or
psraw
mov
test
dec
ds
and
js
push
jle,pt
rclb
js
lret
mov
push
orl
mov
lahf
cmp
jno
sarb
incl
ds
ror
cmpb
fisubs
js
xchg
in
icebp
gs
test
xchg
popa
lret
add
jns
inc
jg
gs
in
or
jl
xchg
mov
pop
jg
pop
jae
mov
aam
fcoml
ret
lahf
int3
dec
pop
inc
out
inc
push
pop
lock
test
push
test
ljmp
xchg
xchg
jl
inc
leave
js
fnstcw
jne
mov
imul
fidivrl
out
lods
xchg
xchg
inc
jmp
push
int
fcom
and
jbe
sub
push
mov
or
mov
repnz
and
jne
xchg
loop
adc
cmp
test
andl
jge
js
mov
cmc
push
pop
popa
repz
cs
js
pop
test
sahf
xchg
mov
mov
sbb
adc
sub
adc
fnstenv
inc
aam
rorl
aam
ss
repz
mov
sub
pop
xchg
cmpsb
lods
xchg
adc
adc
jmp
clc
inc
insb
sbb
fprem
xchg
pop
inc
mov
test
imull
shlb
mov
xor
ret
sbb
jnp
dec
jno
sbb
pop
daa
sub
adc
push
and
icebp
mov
movl
add
daa
mov
xor
xchg
gs
arpl
test
mov
subb
loop
cwtl
or
sub
out
jp
mov
inc
jp
adc
inc
js
dec
adc
test
fwait
adc
aam
mov
cmp
sub
in
out
cli
dec
jl
mov
lods
adc
mov
push
xchg
cmp
ja
leave
test
cmp
push
sbb
lods
ds
mov
test
inc
sahf
mov
insb
sbb
repnz
mov
lahf
repnz
loop
pop
xor
andb
add
xor
dec
orl
pop
jle
cmp
pop
xor
inc
mov
sti
repnz
inc
aad
int3
arpl
pushf
mov
mov
pop
xchg
push
mov
mov
cmpsb
aam
mov
xor
not
in
outsb
mov
sbb
subb
sbb
mov
inc
das
into
out
out
inc
or
cmpsb
jns
push
fwait
out
fucomp
adc
fisttpll
cwtl
xchg
shrb
xorb
shlb
cltd
xchg
push
imul
fwait
xchg
dec
xchg
cmc
cmp
orb
fs
mov
out
jmp
jae
loope
or
shl
inc
cmp
or
or
mov
test
and
cmpsl
jb
inc
sub
out
xor
aas
outsb
jl
push
daa
int3
addr16
push
stos
in
add
lret
imul
pusha
xchg
fsubl
inc
subps
mov
adc
inc
add
ret
dec
xchg
enter
out
in
cmp
pop
in
icebp
or
fisttpll
xchg
inc
and
xorl
push
dec
psubd
ficoms
inc
outsb
loopne
dec
and
or
inc
rcrb
xchg
pop
in
dec
pop
cld
mov
jne
jnp
or
dec
cmp
pop
dec
jl
lods
leave
mov
fs
mov
mov
insl
xchg
cmc
mov
sbb
pop
add
adc
fiaddl
inc
add
mov
xor
in
inc
cmp
fstps
stos
xchg
xchg
adc
fldenv
jo
icebp
mov
jmp
inc
decb
mov
mov
fs
in
cld
lods
imulb
pusha
mov
pop
pop
pusha
lods
sarb
inc
cmp
call
fsubl
jmp
or
push
sub
or
sub
adc
lcall
pop
push
fildl
cltd
inc
popaw
das
ljmp
push
cmp
jle
out
dec
push
inc
xchg
pop
jl
sub
test
lahf
mov
out
jnp
lret
cli
shll
inc
cmpb
xchg
in
push
out
cmpsb
cmp
mov
inc
adc
ret
cmp
imul
mov
je
mov
out
js
inc
pop
iret
repnz
popa
lds
and
jmp
push
pop
subl
rclb
lret
repnz
fs
xchg
xor
push
xchg
mov
out
arpl
outsb
ja
or
xchg
mov
sub
mov
pop
test
xchg
pusha
cli
adc
jbe
in
jp
hlt
ja
jno
and
sub
adc
test
dec
add
cmc
mov
jae
dec
cmp
repnz
jo
mov
jmp
jg
sub
add
lods
inc
pusha
push
mov
aas
mov
mov
inc
test
in
imul
cmp
decl
adc
sahf
fldt
or
out
jns
mov
inc
mov
adc
jl
cmp
out
in
rolb
xchg
xor
out
add
push
inc
jns
mov
jne
scas
in
movsl
mov
rolb
pop
pushf
test
int3
xchg
mov
add
push
pusha
cli
scas
cld
nop
pop
dec
pop
xchg
arpl
mov
aaa
popf
cld
or
pop
or
leave
jle
xchg
neg
inc
gs
ja
sarl
inc
cmpb
push
push
add
cmp
dec
cmc
loopne,pt
out
and
scas
lock
icebp
xchg
mov
jmp
movsl
add
pop
and
dec
loopne
imul
dec
cmpsl
sub
out
push
mov
and
sbb
cltd
test
icebp
stos
or
lods
pop
fisubrl
loopne
imul
outsb
add
mov
cmpsl
sub
mov
pusha
mov
xlat
inc
mov
mov
jbe
push
jmp
cli
lods
add
mov
pushf
xor
push
cmp
fcmovnbe
and
xchg
and
jl
inc
test
add
mov
adc
loope
repnz
push
and
inc
push
jle
or
in
out
dec
mov
inc
jmp
fidivrs
rep
fidivrs
and
fidivs
enter
daa
fisttpl
sbb
dec
adc
fwait
mov
lods
dec
cwtl
add
inc
int
cmp
lods
mov
pop
add
cmpsb
movsb
lea
push
jmp
pop
scas
mov
leave
mov
sub
pusha
lods
or
mov
xchg
or
ret
iret
test
push
ljmp
loop
loopne
fcmovnu
out
push
js
pop
test
add
loopne
mov
inc
inc
inc
das
loope
inc
cs
test
mov
and
sub
es
pop
or
pop
lret
bound
test
jge
mov
dec
lcall
jle
xchg
into
xchg
int3
testb
and
sub
out
scas
cmp
mov
lret
addb
jno
sbb
add
test
or
inc
sub
xlat
lods
jb
xor
jp
scas
fwait
cltd
bound
jnp
daa
adc
xor
stos
js
jo
jge
push
pop
jg
cli
cmp
fdivl
mov
in
pop
sub
les
test
push
push
lcall
popf
insb
mov
push
inc
pop
mov
repz
scas
xor
mov
bound
mov
jne
aad
mov
lock
js
jl
lock
sub
dec
mov
add
cmpsb
test
loop
imul
nop
add
mov
insb
dec
jnp
xor
pusha
push
jb
push
sahf
xchg
mov
xorb
loop
or
dec
jo
sbbb
test
bound
out
and
ret
mov
je
enter
inc
jmp
outsb
xchg
in
push
dec
loop
sbbb
xchg
xchg
pop
outsl
push
in
xor
inc
popf
xor
cmp
adc
fdivl
jnp
orb
and
fnstenv
adc
or
repz
std
mov
ja
pop
cmp
stc
hlt
cltd
jle
push
shrl
bound
cmpl
jmp
test
cmp
mov
sbb
je
adc
rolb
test
icebp
ds
insl
and
cmp
xchg
dec
in
cld
mov
sbb
idivb
xchg
ds
cld
xorb
jl
dec
es
loopne
xor
hlt
sbb
mov
loope
sub
pushf
push
les
into
or
and
sti
ret
inc
add
push
js
xchg
cmp
dec
js
cmp
dec
mov
xchg
mov
mov
push
and
std
push
subl
pushf
lock
stc
xchg
mov
xchg
shlb
xor
mov
push
sbb
test
ja
int3
sbb
fmuls
push
scas
std
ljmp
addl
and
loop
mov
mov
test
cmp
and
inc
out
dec
sbb
mov
iret
xcrypt-cfb
cmpsl
es
jl
cs
lea
sbb
pop
ljmp
stc
out
or
and
mov
and
test
push
cmp
adc
test
mov
push
test
out
mov
movsb
in
loop
dec
pop
mov
loopne
dec
leave
mov
or
imul
dec
add
lea
test
and
fwait
xor
mov
das
dec
fstps
daa
fcoms
add
mov
mov
aaa
icebp
cmp
sbb
jp
xchg
loope
push
fs
push
jae
lods
add
mov
aas
test
cmp
push
or
shl
js
cmp
dec
push
or
shlb
movsl
xlat
shr
sbb
pop
iret
sub
jl
pop
addb
rcr
dec
xchg
fs
xchg
mov
jmp
inc
movsl
sub
cmp
fs
das
pop
popf
popa
cmpsl
ljmp
or
pop
mov
imul
mov
mov
in
test
cmp
mov
je
aas
mov
xchg
pop
insl
xorb
cmp
mov
sbb
inc
gs
test
aas
mov
sti
cmp
mov
sahf
ret
dec
mov
xchg
jmp
xor
out
idivl
mov
add
cwtl
lcall
sbbl
into
or
leave
pop
adc
into
mov
imul
jb
leave
fistpl
dec
stos
adc
mov
xor
in
xchg
adc
prefetcht0
push
dec
icebp
add
mov
pusha
ds
xchg
add
jp
mov
jae
xchg
jl
pop
mov
pusha
xchg
adc
sti
sbb
imull
hlt
and
pop
or
test
ss
test
adc
xchg
sub
imul
mov
xchg
and
movsb
repnz
ss
iret
pop
or
push
xchg
add
mov
lea
jnp
pop
pushf
mov
sbb
dec
xchg
lock
out
sub
notl
leave
mov
jmp
in
movsl
call
jnp
jmp
call
call
cli
dec
iret
sbb
xor
add
xor
cli
ret
adc
lea
sbb
mov
rcr
pop
neg
sbb
mov
and
push
ljmp
lock
jns
jp
dec
inc
and
or
fnstcw
inc
mov
mov
mov
pushl
aam
xchg
daa
rolb
fidivs
jns
mov
xor
jl
lret
pop
fsubrl
test
es
daa
mov
mov
add
push
aaa
es
jp
add
xchg
push
add
mov
repnz
adc
xchg
adc
adc
mov
xor
push
incl
adc
sahf
roll
add
cmc
mov
in
jbe
insb
jp
cmp
dec
js
or
dec
xchg
cmp
outsl
aaa
inc
es
add
inc
add
lock
cmp
decb
mov
cmp
mov
xchg
adc
or
ljmp
loopne
pushf
ja
scas
std
inc
daa
roll
jg
lea
xchg
xchg
incb
sbb
mov
lahf
daa
xchg
adc
or
adc
jl,pn
in
hlt
cli
push
inc
ja
jbe
inc
or
mov
sub
sub
and
in
loopne
mov
ljmp
movb
add
addl
les
jp
xor
ja
cmpsl
xchg
xor
mov
mov
lea
pop
int3
mov
cwtl
cmpsl
fcmovnb
imul
and
cmp
fdivrl
adc
ja
std
pop
int3
test
xchg
dec
stos
fidivs
mov
test
pop
xchg
ja
clc
stc
pop
mov
lahf
sbb
inc
jae
in
xor
sbb
icebp
jp
adc
insl
stos
sub
sti
lcall
icebp
mov
lock
push
mov
repz
sub
pop
adc
cmp
mov
jns
push
lods
ja
mov
mov
add
bound
adc
sbb
lods
test
pushl
xor
insb
test
jb
and
add
cs
rcrl
inc
fwait
push
daa
cmc
hlt
or
push
jecxz
lret
mov
es
mov
inc
out
test
scas
ss
repz
das
pop
or
sub
xchg
jg
dec
data16
int
outsb
and
xor
add
jns
sbb
es
mov
dec
sub
pusha
jmp
lods
push
sub
ljmp
and
in
or
sbb
dec
in
add
out
clc
mov
ss
cmp
rol
nop
push
jge
fs
jl
mov
add
psraw
pop
iret
mov
xchg
push
jbe
shr
sub
xchg
mov
cld
jne
and
push
push
cmp
cmp
xor
je
loope
divb
sbb
cmp
popl
sub
ja
inc
pop
sbb
pusha
sbb
add
mov
inc
shrl
shlb
notb
test
push
xorl
and
pop
jl
fstpl
outsb
shrl
outsl
pop
and
or
cmp
lock
leave
cs
jnp
dec
sti
lods
loop
into
pop
jecxz
repnz
inc
shrl
mov
sub
ret
jbe
data16
test
cltd
cmpsb
sbb
pop
addl
push
cmp
cmp
dec
xchg
test
dec
xorb
mov
sub
mull
stc
inc
xor
aaa
jmp
dec
enter
push
cmp
and
adc
sbb
cmp
pop
push
fdivs
push
insb
mov
icebp
lds
cmp
cmpsl
div
sti
popf
mov
notl
dec
int
add
cmpsb
xor
loope
adc
test
movhps
imul
dec
or
push
pusha
xor
push
jo
in
pop
mov
mov
push
mov
sbb
jg
mov
leave
sti
mov
cmp
clc
pusha
push
mov
cltd
mov
xor
cmp
jns
data16
jl
mov
cltd
pushf
push
xchg
jle
cmp
js
fildl
pop
mov
rorb
adc
dec
push
jns
mov
mov
mov
mov
es
jnp
iret
bts
sub
mov
mov
in
int3
lds
in
out
sbb
cmpsl
cmp
jb
add
pop
sbb
sub
aas
les
dec
sbb
and
lahf
mov
jo
mov
dec
pop
imul
les
jmp
flds
push
sub
es
jmp
sub
dec
gs
xchg
fstpl
ja
ja
aas
aam
mov
sub
and
cltd
jb
sbb
lock
cmp
cmc
adc
inc
and
rcr
subl
scas
jle
fucom
leave
or
adc
leave
jmp
add
mov
xchg
out
jno
xor
out
push
pop
ljmp
lcall
or
bts
dec
push
jae
loop
les
loopne
mov
push
mov
dec
test
xor
cmc
xchg
jmp
or
mov
fldt
jmp
and
ljmp
les
adc
dec
test
ljmp
cmp
mov
pop
pop
or
push
clc
leave
shll
pop
popf
dec
int3
mov
dec
xchg
ljmp
mov
out
es
daa
xchg
jl
inc
pushf
mov
cmp
movsb
fisubs
mov
outsb
stc
clc
clc
xor
insb
push
movsl
sub
mov
or
xchg
jbe
and
into
mov
jg
push
clc
or
inc
sbb
outsb
das
test
insb
cld
rcl
test
xchg
js
orb
test
fldt
adc
sbb
dec
cmp
sbb
dec
jbe
out
xchg
inc
or
cmp
mov
fldt
leave
xchg
inc
test
push
lahf
xchg
xor
ret
sbb
mov
adc
xor
sarl
cmp
xlat
and
lret
xor
mov
lahf
test
add
arpl
xor
xchg
pop
insl
movsb
idivl
icebp
shr
xor
xor
cmp
scas
sub
mov
mov
cmp
pop
add
jno
xor
cmp
push
xchg
pusha
dec
mov
test
je
xchg
mov
mov
dec
pop
pop
fisubrs
xor
mov
jle
xchg
adc
stos
jmp
loop
push
mov
iret
mov
mov
pop
dec
pop
xchg
sub
mov
sub
test
aad
jnp
rcrb
shrb
fwait
xchg
cs
sub
cmpsb
aas
ret
or
lods
mov
fucomi
or
daa
push
rcrl
sbbl
pop
or
test
xor
inc
mov
mov
mov
pop
dec
pop
ret
dec
inc
xchg
rorb
xchg
shrb
push
pop
and
fildll
xor
fwait
push
push
sub
movsb
pusha
das
push
arpl
jmp
xchg
lea
inc
ljmp
mov
jo
xchg
inc
test
lret
enter
and
cmpl
mov
fwait
test
xchg
jle
dec
lods
test
movsl
pushf
mov
adc
jns
jb
test
xchg
lahf
or
mov
lret
stc
test
and
mov
xor
mov
sub
js
pop
imul
xchg
inc
jmp
dec
and
pop
aaa
lahf
sbb
inc
test
mov
push
push
pop
hlt
xchg
sbbl
mov
push
jo
test
and
add
stos
push
cmp
lds
xor
adc
aam
insb
cmp
xor
xchg
xchg
fs
and
insb
jnp
xor
cmp
jl
adc
mov
sub
cmp
sbb
jl
push
inc
or
xchg
cmp
xchg
pop
xchg
jnp
inc
lahf
ja
add
dec
mov
xchg
out
loope
or
loopne
jnp
shr
mov
dec
rclb
push
mov
sbb
pop
lret
push
out
mov
mov
out
inc
call
inc
adc
aam
xchg
je
loope
pop
pop
xchg
in
sub
sahf
mov
pop
lcall
enter
and
push
sbb
imull
xorb
jmp
imul
lahf
sbb
rorl
inc
js
inc
push
push
sub
push
add
xor
cmp
lock
jge
pop
stos
aas
in
cld
and
ret
inc
xor
popa
cmp
iret
wrmsr
mov
js
jp
cmpsb
scas
adc
mov
sub
mov
test
push
sarb
mov
inc
mov
dec
stos
and
dec
shlb
mov
movsl
mov
sub
cmp
iret
js
jns
jnp
dec
fs
xchg
stc
arpl
mov
push
fcoml
repz
lock
dec
int3
mov
sub
addr16
pop
pop
mov
out
or
mov
aas
lahf
daa
loopne
inc
and
stc
sbb
sbb
jnp
mov
mov
dec
lret
popf
scas
push
mov
jmp
cmp
xchg
aaa
stc
push
adc
push
js
lret
lret
mov
dec
ja
mov
xor
lcall
sbb
inc
xor
add
pop
das
or
shlb
dec
stos
push
notb
es
dec
mov
enter
or
sub
or
mov
xor
or
mov
push
sarl
push
lods
addr16
sbb
xor
test
push
out
ror
jmp
mov
xchg
mov
and
lret
jb
xor
sub
add
push
mov
fcoml
fstl
hlt
add
adc
adc
ret
and
in
cmc
imull
adc
test
test
xor
in
cmc
cltd
xor
lret
dec
in
sahf
cmp
lcall
jle
rcrb
sahf
icebp
mov
repnz
sbb
daa
out
test
mov
jle
sti
out
fldt
aaa
iret
dec
cmc
enter
mov
movsb
jp
push
fwait
mov
in
rcrb
idivl
mov
push
testb
cmp
sbb
fcoml
cmc
lods
mov
aaa
push
or
mov
in
pop
sub
sub
sti
iret
ds
push
lock
idivl
sarl
push
jmp
dec
test
or
popl
inc
lret
mov
cmc
sbb
sub
sub
js
inc
xchg
push
pop
icebp
jg
lds
push
adc
stc
cmp
test
xchg
ljmpw
mov
xchg
cmpb
lock
jo
mov
scas
subb
adc
cltd
mov
cmp
leave
notl
inc
xchg
pop
xor
jl
divl
test
cmc
ficoms
loop
cli
mov
xor
gs
add
jmp
ror
mov
bound
scas
mov
adc
adcb
dec
or
and
and
sbb
jo
imul
xorb
pop
jno
sub
inc
andl
pop
mov
add
or
jnp
js
incl
imul
jns
mov
in
add
gs
jmp
cmp
mov
insl
lods
out
dec
and
fldl
outsl
lret
jle
xor
stos
call
pop
jecxz
push
and
xlat
cltd
fsubl
xchg
dec
mov
popa
lcall
or
jp
mov
xchg
adc
mov
aam
ficoms
mov
ljmp
cli
into
fcmovnu
test
fistpll
push
add
xor
sbb
pop
mov
loopne
adcb
pusha
or
jl
mov
xor
xor
in
mov
mov
add
add
add
xor
ror
fsubp
pop
into
arpl
sti
shll
mov
call
jbe
fwait
movsl
mov
inc
faddl
loope
sbb
dec
andb
add
pushf
pop
test
add
aas
test
out
mov
sbb
add
and
fwait
or
dec
pop
addr16
adc
loope
sahf
ds
lds
and
and
popa
test
lock
call
xchg
mov
fidivl
fdivrs
xor
mov
dec
shrb
test
xchg
sub
sub
cmp
test
adc
cld
push
jecxz
jg
dec
loope
dec
test
ss
test
pop
psrld
inc
fcomi
gs
pop
pop
stc
fimuls
mov
cld
lods
xchg
mov
mov
insb
mov
pop
mov
aam
inc
rorb
pop
adc
in
inc
inc
mov
dec
js
ret
push
lods
push
fstl
subl
daa
in
enter
xchg
pop
jl
lods
test
or
xchg
and
sub
pop
xchg
fistpl
push
jae
jp
or
mov
inc
pop
dec
push
pop
or
call
push
js
ljmp
test
movsb
mov
mulb
test
mov
out
fiaddl
adc
mov
pop
imul
sarl
xchg
and
lods
subl
loopne
cli
test
xor
jo
lret
jo
sbb
je
add
cli
lret
xor
mov
xchg
push
push
ret
out
loop
movsb
mov
movsb
std
and
xchg
test
jmp
push
and
dec
mov
cs
dec
shll
ss
push
mov
sti
add
xor
xor
xchg
in
or
mov
cltd
sbb
ficoms
cmp
repnz
insb
xchg
repz
mov
sub
leave
mov
stc
movsl
inc
js
es
ljmp
mov
test
push
jb
cwtl
ja
loopne
paddusw
cmpl
sbb
lods
js
jg
mov
leave
add
dec
shl
hlt
test
and
pop
jbe
movsb
add
test
xchg
inc
cmp
pop
mov
fisttpll
pop
xchg
sub
repz
sbb
mov
aam
cmp
into
push
and
mov
incb
test
in
sbb
dec
js
xchg
push
cmp
fimull
in
mov
lods
scas
lret
rep
jp
repz
sbb
xor
sub
and
cli
xchg
mov
xchg
pop
repz
mov
data16
sbb
inc
cmpb
stos
xchg
xchg
outsb
and
cmpsb
adc
test
mov
pop
nop
mov
mov
sbbl
pop
pop
out
out
scas
fnstcw
pop
cli
jp
inc
mov
mov
cmpsl
arpl
add
leave
fsub
sbb
outsl
dec
and
dec
cs
adcl
jp
cmp
shr
mov
adc
mov
cmp
pop
negb
dec
jmp
cmp
sbb
out
ljmp
cmp
pushf
ja
les
pop
sahf
leave
cltd
aad
sahf
inc
xchg
shlb
fs
jbe
dec
sbb
inc
push
push
or
jg
pusha
dec
iret
pop
test
jo
dec
xchg
cld
pop
mov
mov
cltd
loop
push
mov
stos
add
mov
jns
sbb
jl
xlat
ja
icebp
fidivs
lods
and
and
fstpt
sbb
testb
push
jmp
arpl
pop
clc
xchg
dec
cmp
shrl
jle
aas
in
cmp
pop
xchg
shll
les
imul
nop
pop
in
sbb
adc
dec
lods
out
xchg
or
popf
sub
push
cmpb
push
ss
cmp
add
push
inc
inc
ret
inc
lahf
cmp
cmp
fdivrs
xor
mov
pop
sbb
mov
sub
cmp
mov
out
out
sti
loop
push
adc
adc
stc
std
mov
andl
test
sub
popf
and
push
pop
mov
fmull
flds
xchg
ret
jo
into
pusha
imul
pop
je
out
mov
or
mov
sbb
mov
xor
jbe
ljmp
jae
pop
add
mov
rcrb
adc
rcl
out
pop
xor
jns
rclb
dec
fidivl
pop
rorb
outsl
roll
push
mov
mov
cmp
or
mov
bound
in
je
fcoml
push
push
clc
es
pop
fldcw
loope
int
adc
cltd
cmp
aas
push
adc
leave
cltd
pusha
sarb
popf
das
outsb
aam
mov
push
xor
xchg
es
pusha
jbe
sub
pop
je
jmp
sbb
movsb
add
sub
jl
inc
jle
xchg
lcall
cli
ja
mov
pop
ljmp
xchg
sub
xchg
adc
and
mov
cmp
popa
fsubs
in
lret
mov
lcall
and
mov
xor
cmp
roll
add
xor
mov
cmp
orb
mov
mov
pop
xchg
push
dec
lcall
and
adc
stc
cmp
popa
out
jle
xchg
jmp
jl
subb
lret
mov
js
xor
pop
inc
mov
lock
cmp
cmp
loop
enter
scas
and
jbe
es
insl
pop
dec
sbbb
or
outsb
sbb
cmp
sub
pop
ficoms
jp
inc
xlat
aas
daa
cmc
push
push
sbb
shlb
jg
cmpb
xor
inc
int3
pop
lds
sub
subl
arpl
add
xchg
sub
mov
loop
sbbl
stc
mov
inc
test
mov
sub
xchg
inc
sbb
sub
js
xchg
xchg
movb
mov
cmp
dec
adc
lock
mov
dec
test
cmp
mov
orb
xchg
fnstcw
jne
or
pushf
add
xchg
shlb
loopne
jp
fwait
jnp
popa
inc
pop
mov
les
xor
jmp
ret
out
sbb
iret
inc
fildll
dec
andb
mov
pop
test
iret
pusha
pusha
or
jbe
fcomi
push
adc
cmpb
in
dec
test
ret
inc
pop
shr
xchg
ret
ds
xor
mov
mov
push
xchg
sub
int3
mov
adc
scas
sti
dec
mov
jle
repz
and
icebp
cmp
iret
pop
js
jmp
stos
mov
cld
xchg
sbb
mov
popa
xor
xchg
lahf
sub
mov
pop
aaa
cmp
xchg
xor
lods
pushf
mov
cmp
idivb
ljmp
mov
ja
sbb
mov
data16
fildl
data16
inc
jp
jnp
or
pop
inc
insl
paddw
fnstenv
leave
ret
add
iret
xor
pop
add
ss
pop
jmp
testl
and
push
pop
or
stos
mov
inc
sub
add
sbb
cmc
push
insb
lods
mov
cmp
cmp
les
scas
xor
pop
sub
or
orb
cld
imul
aas
negb
subl
sarb
jecxz
add
mov
add
dec
arpl
loop
scas
adc
rcr
leave
xchg
mov
loopne
lds
lret
popf
sbb
loopne
popl
in
ljmp
cmp
out
add
in
sub
out
sbb
sbb
mov
dec
inc
adc
data16
sub
dec
scas
rcl
xor
jle
mov
xchg
adc
push
ret
movsb
out
movsl
and
andb
pop
int3
not
xor
mov
cmp
jge
inc
xor
push
sbb
jns
mov
repnz
sbb
mov
fwait
mov
sub
xchg
dec
adc
jnp
repz
mov
cmpsl
xchg
cmp
cmp
mov
negl
push
data16
and
rcl
add
fwait
mov
ja
test
mov
shlb
mov
sbb
xchg
dec
pop
pop
push
pop
add
stc
imul
cmp
pusha
ret
es
arpl
jp
rolb
cmp
adc
out
pop
test
cli
es
pop
arpl
cmp
sub
cmp
test
push
xchg
icebp
sbb
inc
loope
adc
iret
adc
dec
pop
stc
lods
add
xchg
mov
es
sti
adc
inc
cmpsb
mov
aam
jo
sti
xchg
in
scas
pop
cwtl
xchg
leave
cmp
lock
aam
adc
cmp
daa
push
idivl
jno
push
add
pop
jnp,pn
pop
jne
imul
mov
xor
test
and
mov
sbb
ja
shlb
and
mov
in
shlb
mov
mov
sti
cmp
mov
test
test
xlat
sbb
jbe
aas
mov
pop
xchg
mov
xor
pop
outsl
inc
cmp
pushl
push
push
lock
sbb
popf
dec
imul
add
cmpsb
xchg
sarb
sbb
dec
cld
in
mov
rorb
mov
jmp
inc
in
or
loop
mov
out
mov
inc
cmc
inc
jnp
pop
bound
testl
pop
mov
or
outsl
js
pop
inc
in
stos
push
add
and
xchg
clc
faddl
xchg
sbb
sbb
xchg
mov
and
fdiv
xlat
pop
mov
mov
cmp
test
hlt
mov
adc
inc
fsubrl
movsb
dec
out
adc
into
adc
push
ja
sub
bound
pop
pushf
xor
inc
add
mov
jmp
cmp
aas
mov
push
cmp
mov
test
adc
jnp
cld
xchg
pop
lret
cmp
mov
adc
in
push
into
movsl
dec
in
inc
mov
arpl
pusha
mov
pop
rcrl
lret
sub
loopne
fdivr
movsb
xor
jl
testl
ljmp
pop
push
xchg
add
cmc
sahf
lds
in
lds
adcb
jp
insl
xor
xorb
sbb
test
dec
scas
in
push
dec
outsb
or
cmp
push
mov
neg
mov
sub
jl
imul
jmp
cmp
push
sahf
and
pusha
xor
pusha
test
xor
mov
jo
or
ds
fdivrs
notb
xchg
mov
lcall
loop
sub
not
insb
std
lds
wrmsr
sbb
cmp
addb
roll
cltd
ret
es
repnz
and
out
sbb
popa
push
inc
cmc
pop
lock
insb
cmp
fisubrs
xchg
out
lods
cwtl
cmp
add
jo
dec
mov
jle
pop
mov
sub
xor
sbb
jns
fdivrs
mov
addb
adc
mov
xchg
das
scas
test
xchg
xchg
inc
adc
sub
out
add
out
jb
aam
icebp
xchg
ja
or
jle
inc
clc
mov
jnp
shll
xchg
test
adc
pop
mov
insl
fsubrp
add
xchg
inc
mov
shlb
pop
add
nop
je
add
out
fs
test
cmpsb
push
jge
add
mov
pop
sbb
ja
addb
add
fldenv
rcr
cltd
test
sub
insl
test
sti
jl
inc
pop
lock
jns
xchg
cmp
ljmp
lods
pop
addb
jle
dec
jmp
mov
leave
jns
imul
sti
inc
fistpll
loope
nop
fnsave
push
mov
jnp
popf
inc
imul
idivl
jp
aam
pusha
and
mov
pop
scas
popf
sahf
xchg
inc
cmc
test
inc
and
aam
mov
cmp
test
test
out
or
push
aas
loop
inc
in
pop
adc
jg
jns
in
shlb
sub
mov
jns
test
mov
xchg
popf
repnz
adc
adc
sbb
pusha
cmp
popl
jge
inc
fwait
loop
and
cs
add
jle
je
pop
lret
xor
inc
arpl
xchg
mov
call
dec
dec
data16
add
push
fdivl
mov
xchg
jno
push
neg
roll
inc
mov
sbb
sbbb
inc
jbe
iret
and
imul
cmp
push
sti
dec
xchg
xchg
mov
daa
insb
test
neg
inc
cmp
shlb
pop
xchg
fbld
daa
mov
jno
xchg
mov
mov
testb
cmp
xor
jno
xchg
enter
jns
mov
cmp
mov
notb
jne
pop
dec
int3
sbb
sbb
out
inc
xchg
lret
and
xchg
sub
xlat
addr16
jmp
xchg
ljmp
cmp
xor
xor
jne
sbb
xor
add
loope
stos
mov
add
xor
mov
jnp
lods
push
call
sbb
xchg
sub
xorb
stc
jno
pop
idivb
dec
and
xchg
dec
or
xchg
imul
adc
ficompl
fmulp
aad
cmp
das
dec
push
xchg
add
push
cmp
lcall
pop
push
cmc
test
add
pop
iret
subl
idivl
jle
ret
sub
push
fiaddl
dec
fcompp
movsl
cmp
repz
and
rcl
lret
and
and
js
mov
bound
cld
xor
mov
lods
popf
cmp
mov
pop
loope
std
in
adc
adc
sbb
stc
dec
js
lret
frstor
pop
popf
faddl
std
mov
mov
aaa
pop
push
xchg
inc
imul
into
test
js
xchg
xor
in
dec
iret
push
test
clc
loop
stc
int
mov
js
pop
test
rcl
test
xchg
mov
push
push
jecxz
mov
mov
cmp
stc
and
dec
mov
mov
testl
cmp
in
mov
xchg
add
sbb
movsl
xchg
lods
test
sub
cmp
push
int3
sahf
cmp
repz
add
xor
addr16
mov
sbb
aam
into
sub
loopne
repnz
inc
cmpsb
imull
xlat
ret
out
daa
js
and
cmp
fcompl
in
loopne
dec
cmpsb
mov
fsubrs
push
and
jge
pop
popf
in
inc
out
add
jnp
pop
mov
add
push
xlat
inc
in
xorl
xchg
cmpb
pushf
lcall
jns
les
dec
sti
sbb
les
mov
push
mov
xor
adc
mov
test
clc
ret
pop
in
mov
mov
push
lahf
out
pop
test
cld
mov
cmpb
dec
bnd
sub
scas
mov
jb
sub
adcb
lock
cmp
rcll
jb
cmpsb
daa
in
cmpsb
pop
stos
daa
push
mov
xchg
sbb
add
pop
iret
ffreep
fs
or
pop
bt
out
out
out
push
cmp
mulb
cmpsb
adc
push
xchg
cwtl
in
inc
pop
sub
sar
mulb
out
pop
into
push
imul
fs
gs
sub
lds
adc
test
mov
pop
jp
jae
out
sbb
in
push
lock
jle
or
mov
stos
arpl
jmp
add
rol
negl
xchg
sub
xor
sub
or
inc
addb
add
fwait
pop
loop
rolb
out
js,pn
push
insb
xchg
lahf
dec
out
inc
cmp
xor
shlb
xor
mov
scas
adc
adc
or
ss
cmp
shr
repnz
mov
sub
add
adc
xor
ss
pop
fdecstp
cmp
mov
aas
mov
pop
imul
ss
mov
loopne
jge
rol
rcll
cmp
into
test
pusha
xchg
sub
cwtl
leave
or
fstpl
cmc
push
leave
popa
sahf
inc
mov
dec
sti
test
jnp
add
out
int3
push
pusha
sbbb
subl
xchg
in
sbb
rcr
push
ja
cltd
sub
sub
xor
imulb
loop
sub
xchg
fsubs
insb
pop
cwtl
testb
pop
js
shlb
addb
jbe
scas
shrl
test
jnp
sbb
aam
repnz
ret
jne
stc
cmp
mov
inc
mov
xor
mov
sarl
xor
cli
int3
mov
and
sbb
or
jo
add
movsb
add
sub
pop
jb
sbb
sub
jmp
xchg
sbb
sbb
fnstsw
scas
ja
mov
add
loope
subl
scas
push
divl
xchg
mov
dec
insb
adc
loope
sbb
or
push
mov
mov
mov
test
sub
mov
sbb
push
fstl
ss
or
arpl
sbb
fnstenv
push
dec
out
dec
mov
xchg
mov
iret
sbb
or
jae
push
test
mov
jne
dec
pop
sub
movsb
cmp
mov
mov
xchg
push
arpl
outsl
inc
pop
cmp
stos
mov
add
sub
or
inc
mov
rep
jnp
ja
mov
xchg
push
out
push
mov
insb
test
pop
mov
inc
push
int3
mov
cmp
push
xchg
mov
adc
inc
adc
dec
ret
data16
fwait
xchg
add
xchg
dec
push
jmp
xchg
mov
cltd
orb
jp
xchg
lods
pusha
fwait
dec
mov
lret
popf
mov
sbb
lcall
loop
jo
repnz
sub
xchg
cmp
test
jno
stc
mov
xchg
repz
inc
dec
jecxz
or
test
sbbl
and
cmpsl
xlat
xchg
cmpsb
add
mov
test
add
cmp
ss
es
jo
ja
lds
pusha
dec
cmp
mov
xor
add
xchg
mov
lcall
das
fdecstp
stos
push
rcrl
mov
int3
icebp
subb
bound
test
or
mov
sbb
ja
mov
movsb
popf
inc
xor
lock
xor
sub
inc
sti
test
cmp
sbb
data16
cs
insl
sub
mov
fdivrl
fwait
lock
lea
sbb
ds
int3
pop
inc
jmp
mov
dec
les
mov
jecxz
retw
jmp
enter
add
push
adc
jmp
ret
iret
push
cmp
lahf
pop
and
mov
mov
dec
fdivrs
sub
jae
data16
push
xchg
mov
dec
mov
arpl
fucomp
xchg
mov
mov
and
test
dec
int3
xlat
out
pusha
mov
jle
rorb
sub
pusha
sti
in
inc
pop
pop
iret
xchg
dec
mov
push
les
or
push
jge
jmp
testb
push
sahf
inc
test
cmp
add
cmp
es
ja
scas
adc
add
xchg
xor
jmp
in
mov
push
in
fld
xor
fistl
testl
in
je
push
xchg
adc
std
add
into
ret
nop
jne
addb
sbb
int
les
dec
jnp
mov
adc
iret
mov
dec
xorl
mov
lods
jne
pop
mov
mov
pushf
dec
stos
ror
frstor
lret
xor
jmp
hlt
das
loope
scas
scas
xor
pusha
dec
in
test
lahf
xor
aaa
repz
in
bnd
cmpsl
jb
xchg
push
mov
cmp
data16
rolb
out
jne
ds
popa
rorl
sbb
test
xchg
insb
jl
pop
mov
jge
fwait
xchg
jge
aaa
rcl
push
cli
jns
push
shr
adc
mov
stc
xchg
sbb
mov
pop
and
sbb
cs
push
mov
sbb
jge
ret
shlb
and
lea
insb
dec
pop
call
imul
sbb
cld
jmp
xchg
mov
in
dec
sbbl
mov
js
fdivrl
fs
repnz
mov
add
stos
leave
xchg
push
lahf
sub
pop
lret
xchg
aam
mov
push
fmuls
mov
push
fld
xchg
add
mov
xchg
fldt
xor
mov
dec
cmpl
imul
sbb
cmp
dec
sub
sbb
xchg
jl
jecxz
lods
mov
das
int3
cmp
pop
inc
mov
stos
shrl
pop
repz
xchg
repz
push
xchg
push
inc
mov
lret
pop
xchg
insb
xchg
cwtl
or
std
outsl
xchg
in
jle
fdivrs
daa
dec
jmp
or
adcl
insb
mov
mov
sbb
xchg
daa
in
jmp
xchg
push
sbb
cmp
mov
xchg
ja
sbb
pop
ja
repz
pop
loop
jmp
push
dec
jmp
loopne
push
sbb
dec
push
sbb
cmp
ret
push
movsb
addl
subl
adc
xchg
jecxz
cltd
adc
faddl
pop
loop
lret
popa
sar
pop
leave
xor
jle
in
sbb
arpl
xchg
dec
push
pop
sbb
mov
popf
jnp
jns
push
aas
ds
daa
xor
xchg
sub
mov
test
adc
xchg
add
out
sub
add
rcrb
clc
stc
pushl
subb
popa
cmc
adc
nop
insb
cmpsl
adc
test
sub
jg
jne
cmp
cmp
xchg
insw
adc
fnstenv
add
xchg
xor
or
sub
push
mov
mov
or
loopne
popa
add
gs
mov
ret
addb
jae
mov
mov
in
es
scas
movsb
enter
push
les
aam
mov
dec
jp
andb
cmp
xor
add
das
jne
pop
dec
fsubl
fs
sub
dec
bound
inc
jo
and
repnz
push
test
or
and
mov
lock
movsb
shr
test
nop
in
stos
jnp
inc
jb
cmp
aas
or
js
xchg
mov
scas
dec
jne
adc
xor
lods
adc
mov
lods
jns
mov
pop
test
inc
mov
add
cs
xor
add
out
and
test
mov
mov
fisttpll
lret
and
call
ja
int3
xchg
jns
cmpb
mov
dec
xchg
ds
mov
testl
mov
test
incl
ret
in
jl
mov
loop
loop
dec
push
inc
xchg
xchg
imul
js
mov
sbb
mov
sbb
lods
aaa
or
xor
mov
sbb
and
xor
xor
mov
dec
in
inc
jno
es
add
sub
cmpl
and
test
mov
pop
arpl
aas
mov
es
xchg
pop
and
ss
or
out
inc
call
xor
dec
out
test
repnz
inc
add
and
lret
pop
repnz
mov
fistl
test
and
mov
stos
stc
nop
scas
iret
repz
mov
insl
and
sbb
xor
dec
sub
adc
push
cmpb
jl
adc
loop
mov
and
in
test
addr16
pop
jge
test
outsl
mov
lock
inc
repnz
and
andb
mov
ja
dec
out
out
pop
jle
mov
inc
pop
jecxz
sti
push
pop
hlt
fs
mov
xchg
into
add
jle
dec
lods
xchg
push
sub
jecxz
testl
out
add
scas
lcall
cmp
icebp
jmp
hlt
dec
cmp
dec
push
dec
mov
into
or
test
cmp
xor
add
mov
push
or
cli
xchg
fisubrs
out
xchg
hlt
nop
push
in
mov
sbb
sub
xchg
mov
loope
test
pop
outsb
inc
jg
scas
pushf
dec
xor
push
push
mov
lods
insl
inc
sbb
insb
sbb
adc
nop
or
cmp
push
mov
push
divb
movsb
fstpl
sarb
xchg
cmp
das
std
pop
or
popf
adc
mov
mov
sub
bound
aad
sbb
mov
push
cld
mov
js
nop
push
sbb
shrb
rcrb
test
or
cmc
sub
in
sbb
enter
or
adc
fildl
fists
dec
mov
jo
mov
sti
pop
push
mov
jns
jne
xchg
cmp
push
and
repz
adc
add
sub
pop
dec
inc
imul
xor
and
xchg
cmc
push
in
test
fwait
add
and
cmp
test
dec
lds
push
add
inc
movsb
inc
jl
and
inc
fs
movsl
lea
scas
xor
mov
sbb
xor
pop
loopne
mov
test
fwait
popl
push
sub
stc
rorl
test
jno
pop
movsl
dec
pop
pushf
cmpsb
or
rorl
imul
push
mov
fimuls
ret
adcb
jne
inc
jo
lods
xor
inc
or
imul
sub
push
scas
movsl
outsb
inc
dec
cmc
in
jmp
mov
cmp
mulb
testl
pop
lock
shlb
or
pop
jnp
out
in
cmp
push
mov
gs
mov
sub
dec
xor
ret
adc
mov
sbb
cmp
xchg
mov
cmpsb
int3
adc
mov
add
aad
subl
andb
leave
decb
fwait
jns
rorl
ret
test
adc
jg
test
dec
and
sbb
push
sub
inc
enter
mov
mov
inc
sbb
in
jae
fcmovu
sti
call
sub
insb
xor
dec
cmp
test
jp
push
aas
and
mov
or
fninit
dec
nop
pop
lahf
js
cmp
jl
cmp
mov
add
lods
add
ret
mov
shl
sub
les
push
rorb
push
mov
cmp
cli
ret
sbb
pop
outsl
mov
xor
popa
mov
mov
cld
jb
sub
stc
adc
push
mov
sbb
sbb
fisubrs
das
mov
icebp
inc
scas
mov
stos
mov
mov
mov
jns
inc
in
jg
gs
sbb
or
sub
mov
pop
push
sub
push
cmp
ljmp
push
in
jo
inc
pushf
xor
stos
sbb
test
pop
xchg
ja
mov
ret
pop
sbb
loopne
sbb
cwtl
fbstp
jg
pop
aad
jge
cmp
pop
cmp
cmp
xchg
test
cmp
out
push
insb
orb
shrb
push
add
shr
sub
dec
lock
fcmovne
pop
imul
sbb
add
scas
dec
push
fstl
xchg
pop
test
push
icebp
xchg
sar
shl
movsb
mov
xchg
mov
pop
clc
mov
test
pop
inc
jl
xchg
xchg
push
fsts
ljmp
pop
dec
in
pop
xorb
mov
rcl
je
andl
imul
mov
leave
mov
dec
scas
xchg
sti
jae
stos
cmp
jmp
inc
jb
pop
jns
shl
dec
xchg
xchg
adc
insb
cmp
scas
imul
fstpt
xor
arpl
lods
std
cmp
jge
out
cmc
cwtl
jecxz
mov
push
adc
lcall
iret
ja
pop
rcpps
push
xchg
cltd
lods
out
test
push
jnp
inc
mov
sub
mov
int3
clc
mov
xchg
mov
xchg
jbe
push
test
sbb
jns
cmp
cmc
dec
scas
xor
ss
adc
ja
mov
pushf
sbb
ja
fxch
push
dec
int
mov
test
lcall
loope
iret
mov
mov
leave
out
mov
call
jp
mulb
mov
xchg
jmp
and
add
lods
mov
test
out
lods
sub
pop
popf
inc
cmpsb
pushf
add
add
adcl
mov
cmp
push
xchg
lods
cmp
xchg
xor
mov
clc
push
add
sbb
inc
push
mov
gs
pop
dec
push
pop
push
xchg
add
fldt
add
jl
add
inc
test
mov
adc
loop
lea
es
sub
add
test
mov
lahf
inc
imull
sub
addl
lcall
pop
push
in
sbb
es
lahf
xchg
add
enter
push
nop
pop
push
in
jmp
test
sub
mov
and
in
or
faddl
jmp
outsl
in
jae
in
cs
lcall
loope
enter
stos
roll
push
inc
xchg
mov
jl
call
jg
or
cmp
sbb
xchg
xchg
into
loop
sbb
popa
clc
movsl
sub
mov
push
sarb
or
aaa
test
inc
jmp
bound
mull
stos
fwait
dec
pop
icebp
les
call
inc
jp
and
orl
mov
add
rcll
mov
shrb
les
or
ret
test
inc
insl
sbb
ja
rorl
int3
fnsave
xchg
sub
popa
jge
imull
jnp
stos
rclb
mov
pop
dec
jo
push
and
mov
lock
jno
jnp
mov
cmp
sub
adc
mov
test
mov
pop
loop
andb
or
xor
setne
mov
aam
sub
mov
leave
clc
insl
inc
gs
outsb
lea
out
pop
mov
fidivrs
mov
pop
and
inc
mov
int3
clc
sub
js
dec
cmp
pop
pop
dec
lock
xchg
cmp
adc
pop
adc
mov
fildl
pop
xorb
ficoms
xchg
sbb
loop
lock
ret
popa
aam
mov
push
xchg
push
sbb
sahf
decl
dec
fsts
loop
pop
pop
xlat
sbb
xchg
out
and
int3
hlt
mov
inc
or
aas
cmp
mov
rorb
test
aas
call
push
dec
orb
adc
cld
push
push
xchg
mov
or
add
sahf
lds
test
cmp
sbb
shrb
ja
and
ja
cmp
inc
add
inc
fistl
in
lcall
adc
jno
cmp
dec
shlb
add
int
cmp
movsl
leave
cmpsb
pop
std
cmc
pop
movsl
inc
sub
lods
add
fwait
sbb
push
icebp
xor
xchg
mov
iret
ja
stos
pop
movl
lahf
jp
testb
and
aaa
repnz
cmpl
in
or
fldenv
sub
fucomi
shrl
push
add
in
mov
add
cmp
sti
in
lahf
pusha
aaa
ja
out
fistpll
sahf
aas
cmp
jb
xchg
rcr
sahf
ja
fcoml
mov
jge
xor
fnsave
sahf
cmp
mov
mov
pop
fldl2t
leavew
out
adc
adc
jecxz
xchg
cmp
jle
cmp
repnz
cmp
jne
push
xchg
loope
mov
xchg
cmp
dec
hlt
cmpsb
cmp
sub
xor
rcrl
pop
and
std
test
out
test
repnz
idivl
ss
aaa
mov
xchg
sbb
mov
clc
fidivrl
mov
int
cmp
add
pop
sub
mov
insl
inc
fcomps
std
test
mov
add
mov
or
mov
xchg
adc
mov
into
rcll
and
xor
jbe
test
and
pop
rclb
xor
pop
fwait
push
icebp
ljmp
test
mov
cmp
lds
add
sbb
or
ljmp
xor
or
mov
sub
sbb
rclb
repz
lcall
std
xchg
fmull
cmp
dec
jns
mov
inc
std
nop
pushf
test
xor
push
push
add
int3
loop
jl
mov
lret
mov
arpl
adc
sub
add
in
out
cmp
push
xchg
mov
push
mov
aam
dec
ror
fldl
sbb
dec
jmp
lret
sbb
data16
test
cwtl
daa
adc
leave
cmp
out
xchg
xchg
pop
jle
in
fisubrs
mov
testl
sarb
clc
sub
gs
loop
pushf
out
iret
inc
dec
sub
cmp
dec
les
negl
push
cmp
xchg
in
jo
jns
lods
mov
jl
dec
push
stc
sbb
cmp
or
mov
push
inc
lods
or
es
sub
xchg
and
and
or
sub
add
or
notl
pop
rolb
xchg
clc
xchg
pop
leave
stos
and
shl
int3
test
iret
mull
push
add
lds
push
aaa
mov
loop
mov
xchg
pop
pushf
xchg
loopne
xor
sarl
lods
jl
popa
ja
xchg
adc
cmp
jl
push
sbb
inc
add
push
inc
xor
push
pop
xor
and
pusha
cld
sbb
push
scas
adc
jns
dec
push
cmp
inc
bsr
sbb
flds
fisubrl
pop
cs
sti
leave
mov
outsb
lcall
push
mov
inc
imul
cmc
push
sub
dec
dec
loope
push
add
insl
cmp
cmp
fcomi
mov
ja
stc
ljmp
adc
sbb
jae
test
pop
into
in
or
ffree
dec
jg
add
xchg
lods
dec
dec
inc
lret
mov
inc
xchg
cmp
lods
dec
dec
leave
sar
rep
lods
js
fneni(8087
jl
sub
xor
mov
mov
pusha
or
aad
into
cld
repz
mov
mov
aaa
mov
xchg
sarb
out
clc
jmp
ja
aas
ficoml
dec
cs
mov
mov
adc
outsl
test
add
cmp
mov
dec
dec
pusha
mov
or
stos
adc
pop
push
je
or
ss
pushf
dec
stos
jns
enter
arpl
mov
mov
push
dec
fcomp
inc
xchg
jge
arpl
nop
int
fiadds
stos
jle
jbe
lcall
push
mov
out
pop
stos
xchg
data16
pop
mov
jge
data16
xchg
loop
pop
sub
pop
in
cmp
enter
cmp
scas
rol
xor
stc
fbstp
pop
xchg
andl
mov
cmp
add
jmp
mov
pop
clc
xchg
mov
cmp
inc
or
int
sbb
jg
cmp
adc
jne
sti
cmp
jne
aas
jne
leave
test
je
rorb
inc
mov
or
mov
pop
xor
lahf
dec
test
pop
repnz
bnd
xchg
sbbb
mov
mov
jne
scas
testl
lds
ja
daa
lcall
loope
lea
sub
testb
insb
test
mov
xor
mov
je
push
and
pop
loope
test
aad
imul
xchg
dec
pop
inc
inc
cmp
mov
jg
frstor
pop
call
xchg
push
cmpsb
lds
mov
leave
ja
shl
or
in
out
add
in
nop
or
test
ja
pop
pop
test
jp
xor
out
adc
js
xchg
inc
fsubrp
call
push
lret
cmp
in
jecxz
addr16
lcall
pop
xor
in
cmp
pop
sbb
cmp
add
cmc
inc
adc
cltd
into
stos
sub
pop
bound
mov
cmpsl
mov
loope
push
jg
shl
jb
pushf
out
mov
cmp
cmp
adc
xchg
mov
rorl
sar
mov
add
test
mov
pop
pop
and
push
bound
hlt
jo
add
imul
cmpsl
scas
lcall
data16
sbb
adcb
cwtl
mull
aam
pop
jns
adcl
cmpsb
dec
pop
ret
movsl
add
inc
les
loope
xor
fadd
dec
push
out
pop
and
inc
fcomp
add
aad
or
rcll
test
xchg
cmpsl
enter
dec
ret
shlb
rcrb
push
popf
sar
xor
push
int3
mov
mov
xor
adc
dec
subl
mov
scas
mov
mov
xorb
pop
es
push
jae
in
adc
mov
dec
gs
cwtl
xor
adc
mov
loope
sub
cmp
sbb
pop
inc
loop
push
inc
pop
cmpsb
xchg
jp
insb
sbb
xor
nop
cmp
movsl
inc
aas
xor
pop
push
mov
inc
fisttpl
pop
push
pop
mov
mov
arpl
dec
and
repz
outsl
and
popa
xchg
cs
inc
cmp
mull
sub
stos
inc
adc
push
out
test
outsl
xchg
repnz
dec
mov
dec
mov
out
data16
cmp
dec
stc
loope
mov
fidivrl
mov
in
add
xchg
jmp
or
lret
inc
mov
xorb
scas
inc
mov
fdivrl
mov
cmp
das
movsl
cmp
outsb
xchg
fwait
dec
ja
idivl
test
add
addr16
sub
movsl
fs
mov
leave
ja
loop
push
xchg
loop
push
stc
mov
xor
jmp
xchg
test
test
inc
scas
adc
sub
pop
dec
cmp
loopne
pushf
jl
rorb
fwait
pop
pop
xlat
xchg
inc
test
div
popa
loopne
jmp
push
enter
jns
cmp
jp
xlat
xor
mov
gs
push
mov
shlb
int3
or
jnp
inc
int
sub
inc
cmp
cmp
rolb
or
pushf
xchg
xor
lods
dec
in
lods
jo
xor
sbbl
ss
imul
flds
mov
dec
jge
push
movsb
or
xchg
sahf
mov
nop
cmp
sahf
cld
fwait
sbb
rcrl
hlt
lods
out
xchg
fsub
dec
fidivrs
int
fwait
cld
les
jg
pop
cli
rorb
add
sbb
sbb
cmp
jnp
jle
mov
daa
pusha
cmc
mov
subb
fidivl
or
sahf
aaa
push
mov
add
out
or
outsb
cli
inc
fcmovnb
xor
jp
adc
xchg
jae
add
bound
sub
pop
push
sub
cli
mov
mull
pop
jp
xchg
adc
out
js
inc
mul
loopne
aas
cmp
sub
pop
test
inc
mov
xor
add
cltd
xlat
movsb
xor
adc
paddusb
inc
xor
les
stc
jmp
xchg
sbbb
mov
jmp
xor
dec
mov
js
adc
sbb
orl
fwait
jb
sbb
ret
shll
xchg
and
pop
inc
cmp
shrl
fyl2x
cmp
mov
add
pop
js
mov
and
cld
int3
mov
or
cmp
cmp
fstp
mov
aaa
das
das
mov
cmp
hlt
and
and
in
or
push
sbb
dec
cmp
push
lea
scas
xchg
aas
jmp
movsl
add
stc
add
rcl
ret
les
add
xor
jno
jg
loop,pn
js
pop
dec
and
test
cltd
adc
mov
cmpsl
dec
xchg
and
jg
sbb
adcb
cmp
and
lods
mov
add
mov
sub
sub
call
xchg
test
add
cmp
in
add
outsl
inc
sub
pop
lock
cs
nop
mov
pop
xor
jnp
in
or
test
test
xchg
rclb
or
add
push
scas
push
pop
pop
fwait
mov
rolb
imul
cmp
in
xchg
sarb
add
jg
pop
xchg
es
cmpsl
fisttpl
mov
dec
test
push
sti
xchg
leave
cld
imul
negl
dec
clc
repz
mov
arpl
xchg
jl
mov
pusha
ja
mov
cmc
pop
xchg
mov
jmp
jns
xor
xchg
test
daa
outsb
add
xchg
movsl
add
enter
test
cmpsl
es
lea
and
ds
adc
sarl
test
xchg
outsb
imull
out
cmp
jmp
jecxz
mov
test
cmp
dec
sub
mov
mov
adc
aaa
mov
rcrb
cmp
and
mov
mov
xchg
cmp
js
pop
and
push
pop
test
aam
dec
push
push
mov
adc
cmp
push
pop
clc
movl
push
xchg
sbb
sub
fdivl
icebp
lods
sbb
fisttps
inc
mov
or
xchg
xor
lock
jle
cmp
sbb
sub
push
cmc
repz
inc
cmp
inc
xchg
jae
divb
test
dec
mov
mov
xor
rcr
in
adc
jmp
wrmsr
push
sub
add
test
in
lock
outsl
jne
aaa
jecxz
dec
pusha
mov
xchg
xchg
fidivrs
hlt
cmp
xor
test
sub
and
js
out
xor
sbb
add
cmp
xor
jo
xchg
imul
or
pcmpeqw
scas
fidivs
loopne
inc
into
or
inc
inc
cmp
notl
add
mov
pusha
mov
adc
addl
data16
fisubs
sub
cmp
int
cmp
test
inc
mov
shr
push
test
test
popf
jg
out
sub
push
mulb
pushf
xor
data16
mov
xlat
sarb
cmc
mov
pop
cmpsb
test
push
mov
ljmp
test
mov
jmp
outsb
test
mov
popf
xchg
adc
or
in
out
ret
inc
ja
xchg
popa
rorl
sub
ret
int
cmp
setl
mov
andb
fwait
ret
xchg
and
add
fistpl
test
push
daa
sub
ret
push
test
jno
inc
icebp
dec
fistps
xchg
push
xchg
mov
xchg
inc
push
dec
pusha
or
push
mov
icebp
xor
leave
jecxz
mov
loop
push
jno
fstl
sbb
push
fisubs
mov
push
pop
popa
out
fadd
repnz
aad
push
xor
leave
pusha
mull
push
add
push
leave
pop
add
in
xor
fldenv
popa
ret
dec
xchg
fwait
in
push
mov
sar
orb
out
ret
ljmp
js
dec
xor
nop
jns
push
or
xchg
aas
mov
add
sub
cmp
xor
sbb
mov
push
in
cmp
mov
or
inc
fcomp
punpckhdq
xor
lods
xor
mov
fstpl
mov
push
dec
pop
rolb
pop
cmp
pop
fxam
stc
or
mov
fdivrs
cmp
bound
out
decl
jle
inc
and
push
out
inc
mov
arpl
ja
add
cmc
mov
aam
fwait
dec
jmp
jnp
decb
mov
sub
cltd
cmp
add
adc
push
es
xchg
xor
add
lcall
aam
and
repnz
lods
mov
push
cmp
mov
jl
mov
inc
xor
dec
mov
test
pushf
pop
pop
add
sbb
sar
pop
push
xchg
push
frstor
add
test
xchg
or
sbb
inc
or
mov
lret
jbe
inc
cmp
inc
shlb
pop
pop
shlb
insb
xor
clc
and
jns
cltd
xor
add
jmp
pop
mov
and
inc
xor
push
mov
rcrb
fwait
or
pop
push
bound
test
dec
push
cmp
data16
mov
cld
and
test
jne
mov
sbb
test
sbb
frstor
cld
aaa
mov
xchg
sbb
push
xor
dec
xchg
fs
adc
mov
pop
out
xchg
lahf
mov
mov
mull
jae
fwait
add
jae
cmp
fs
xchg
dec
sub
push
cld
xchg
mov
outsl
inc
mov
dec
xchg
lahf
adc
rclb
out
or
test
stc
dec
mov
bound
xchg
jge
cltd
roll
push
loop
dec
or
daa
pop
ds
pop
or
sub
dec
inc
jecxz
cmp
xchg
in
sahf
jbe
icebp
pop
push
or
push
iret
mov
scas
jae
out
cltd
mov
push
pop
stc
mov
mov
fwait
xchg
or
pop
mov
adc
xchg
cmp
adc
pop
fimuls
xchg
push
scas
pop
test
test
adc
push
mov
sbb
xchg
jo
lock
add
sbb
inc
add
clc
xchg
psubsw
push
inc
mov
inc
lods
xchg
mov
shll
icebp
jge
sbb
arpl
out
adc
mov
sub
jle
mov
popa
cmp
rclb
sti
or
pop
pop
xchg
xchg
in
mov
pushf
movsb
ret
jne
in
syscall
loop
mov
mov
pop
and
dec
js
jb
pop
pop
fcmovne
sbb
out
jge
add
cmp
cmp
push
adc
test
lods
scas
xchg
sbb
push
sbbl
lods
jl
cmp
iret
loopne
pop
and
mov
leave
repz
nop
cmp
idivl
xchg
push
movsl
in
xlat
add
lods
mov
adcb
nop
mov
push
xor
jo
dec
icebp
in
pop
mov
lret
pop
shlb
cltd
push
sbb
mov
mov
inc
and
cmp
cmpsb
arpl
aad
adc
and
das
aam
movb
lcall
adc
fdivl
cmp
dec
aaa
mov
out
sarl
adc
xor
das
push
ror
sbb
jns
mov
jle
dec
xchg
in
popf
fiadds
cmp
xor
out
sarb
es
push
mov
push
aas
ret
testb
lcall
cmp
jbe
pop
test
sbb
and
mov
jae
push
shl
or
pop
test
sarb
jp
test
cmp
mov
movsb
bound
addb
push
fwait
out
stos
sub
rcl
dec
cmp
mov
outsb
jae
dec
or
stc
push
push
xor
xchg
test
or
loopne
mov
add
sti
adc
mov
xchg
xor
push
in
cmpsb
pop
jmp
cmp
test
call
inc
lds
and
stc
cmc
pop
aaa
xor
lea
cmp
mov
jnp
test
test
jp
notl
in
adc
xchg
in
into
loopne
adc
jmp
push
ficoml
test
push
mov
dec
out
or
xchg
jp
pop
jmp
mov
iret
int
int3
jl
sahf
xor
mov
or
sub
test
dec
push
std
cmc
in
jo
pop
sub
or
in
repnz
cmp
jnp
movsl
movsl
xchg
mov
push
mov
jmp
mov
inc
add
mov
cld
sbb
xchg
push
mov
scas
test
cmp
iret
out
bound
cmpl
lock
aaa
pushf
push
pop
jmp
push
int3
jl
pushf
into
xor
out
add
test
lods
les
jmp
sub
arpl
lahf
push
pusha
ret
cmc
pop
jl
mov
ret
add
sbb
push
cmp
bound
daa
and
mov
ja
nop
loop
ljmp
sub
ret
shr
push
xchg
cmp
and
nop
add
mov
test
roll
sbb
ja
ficompl
imul
mov
test
xor
cwtl
add
pop
sbb
sub
dec
das
sahf
gs
dec
pop
cs
and
aas
jge
xor
test
loop
pop
out
mov
icebp
jle
xchg
jle
test
sub
dec
adc
jns
sbb
lock
push
out
sbbb
jnp
add
jl
push
es
cmpsb
push
cli
inc
sarl
mov
data16
test
lods
xchg
ret
test
scas
lods
mov
add
nop
add
dec
mov
push
pusha
and
or
shr
fs
mov
jge
out
xchg
or
xchg
mov
inc
scas
rorb
rorb
sarl
add
cld
jle
and
outsb
mov
pop
adc
mov
xor
shr
sbb
mov
sahf
ja
mov
ss
mov
mov
xchg
fisubs
test
sub
sub
mov
mov
mov
push
adc
sbb
pop
fbstp
mov
sahf
add
and
sbb
dec
test
push
in
ja
test
add
xchg
lcall
add
mov
push
loopne
scas
stc
ljmp
mov
bound
and
es
ja
outsl
add
push
mov
shlb
in
andl
lret
jb
out
mov
into
push
sbb
addb
or
in
or
sbb
cmp
pusha
mov
addr16
push
inc
mov
inc
xor
cmp
mov
hlt
mov
dec
call
idiv
test
aaa
subl
xchg
arpl
pusha
inc
cmp
loop
test
inc
sub
ss
sub
dec
test
adc
test
mov
cmp
mov
xchg
aad
pop
xchg
or
inc
in
arpl
adc
rcrb
xlat
jle
lods
pop
pop
mov
mov
daa
jbe
mov
arpl
mov
jbe
lock
mov
nop
mov
jle
mov
fwait
jbe
lea
mov
dec
aam
ret
ljmp
cmpsl
jge
jmp
inc
xor
jno
xchg
cmp
jns
mov
add
fwait
lock
je
ret
mov
nop
testl
shr
or
xchg
mov
dec
aam
out
inc
cmp
sbb
pop
cld
pop
lcall
mov
pop
fdivl
sarb
mov
mov
or
push
sbb
sahf
lcall
cmpsl
scas
dec
cmp
inc
push
xchg
mov
movb
or
adc
and
cmpl
sub
cmp
idivl
cmp
mov
pusha
imul
push
dec
pop
mov
inc
mov
loop
leave
cmpsb
xor
jbe
xlat
insl
xlat
xchg
dec
jmp
hlt
or
fldenv
cmc
dec
cld
xor
and
aaa
mov
aad
out
movsb
test
push
cmp
test
jnp
nop
push
or
aad
or
add
mov
cmp
jns
mov
xor
mov
arpl
gs
shll
dec
movsb
cli
jmp
add
fiadds
clc
jle
aas
stc
mov
test
dec
pop
xor
roll
push
adc
fldl
lods
xor
rcr
jmp
cli
test
dec
mov
push
xchg
jb
jbe
pop
mov
and
jl
out
or
test
mov
mov
jecxz
ficomps
test
in
ss
push
sub
idivb
inc
mov
cmc
into
loop
out
fldcw
js
cmp
iret
clc
dec
inc
fistps
aas
mov
icebp
pop
lcall
dec
sbb
inc
fisubrs
mov
sbb
mov
mov
std
in
into
adc
jbe
fnsave
xor
push
arpl
andb
pusha
pop
rcrb
xchg
movsb
mov
add
test
push
ss
daa
movsb
cmp
aas
or
pop
inc
loope
mov
push
fwait
lds
cmp
in
mov
sahf
loop
rep
pop
lods
mov
out
sub
jns
jge
shr
jge
add
xchg
rcrb
push
pop
xchg
dec
pusha
inc
xchg
test
mov
in
xchg
jl
dec
xlat
jge
test
or
mov
pop
cmp
add
inc
inc
jl
cmp
xor
or
sbb
popa
movsl
in
dec
loope
or
fsubrs
xor
aad
and
rcrb
icebp
lods
jae
icebp
test
inc
aam
sti
cmp
jne
jnp
push
xor
lock
idivb
test
or
push
and
mov
jns
mov
lahf
mov
inc
dec
cwtl
mov
nop
push
xchg
sti
fwait
popa
in
int3
das
pusha
scas
test
shrb
aad
cmpsl
inc
mov
jns
movsl
cmp
dec
out
add
fdivrs
in
pop
mov
adc
push
xor
push
loope
or
xlat
cmpsl
and
mov
aaa
xchg
inc
pop
push
add
cltd
and
jnp
fldenv
mov
adc
add
mov
add
xchg
in
in
dec
out
jnp
xchg
std
pop
lret
jmp
arpl
fsubl
cmp
movsl
ljmp
lock
inc
push
dec
push
test
xchg
dec
inc
inc
push
add
xchg
push
pusha
call
mov
sub
jp
addr16
mov
ds
aam
lods
sub
xchg
setbe
mov
leave
mov
pop
jae
jecxz
push
imul
out
mov
fimull
jne
movsl
pushf
fiaddl
pop
sub
fs
and
mov
cli
xchg
cmpsb
fnstenv
inc
cmp
ret
lcall
mov
push
in
out
ss
scas
mov
test
xchg
divb
out
sbb
sbb
xchg
push
sahf
pop
jbe
jle
arpl
cmp
loop
in
fwait
xchg
arpl
dec
in
imul
jle
testb
pop
sub
sub
jmp
shl
popa
ss
push
cs
xchg
ljmp
icebp
insb
or
dec
in
push
ss
or
in
shrl
cltd
pop
clc
sbb
sbb
inc
aam
test
push
pop
cli
mov
mov
addr16
pop
mov
xchg
hlt
stc
arpl
adc
cmc
dec
outsl
mov
jecxz
movq
jg
int
call
xor
mov
test
pop
xchg
mov
ret
sub
repz
cmp
dec
add
sub
jnp
pusha
mov
cmp
loope
dec
into
pop
out
jp
call
hlt
cmp
mov
or
jne
es
mov
pop
mov
inc
je
sub
xchg
add
imull
jne
jl
mov
rolb
popa
and
mov
popa
or
dec
int3
es
fadds
pop
add
cltd
push
inc
cmp
pop
fisttpl
leave
or
xchg
out
je
mov
out
stos
mov
pop
jmp
iret
xchg
stos
inc
daa
outsl
cmc
mov
mov
imul
sbb
xor
jge
add
enter
aas
aam
stc
push
mov
and
into
adc
dec
mov
or
dec
mov
jle
pop
test
xchg
jp
sbb
movsb
mov
ja
rep
xor
lds
and
xchg
sahf
out
jno
cs
into
mov
pop
outsl
add
sub
xor
std
fsubl
movsl
scas
js
xchg
jo
sub
cmc
je
dec
sub
xor
sub
cltd
rcr
imul
ficoml
lret
dec
cmp
sahf
imul
xor
cltd
cmp
jg
mov
jne
xorl
dec
cmp
push
lcall
push
dec
xchg
pop
ja
push
ror
mov
adc
or
dec
or
scas
sti
ret
imul
addl
or
push
subl
adc
mov
popa
inc
mov
jnp
dec
repnz
mov
adc
jl
dec
sub
pusha
daa
pop
mov
push
clc
rclb
in
mov
add
or
lret
test
ljmp
inc
aad
cltd
mov
mov
cs
stc
xor
movl
in
outsl
dec
xchg
jno
daa
das
mov
jnp
mov
and
movsl
std
sahf
jl
pusha
mov
sbb
leave
addl
xorb
test
out
js
fiaddl
stos
adcb
out
cmp
push
dec
into
jp
sarb
sub
adc
push
push
adc
lds
loope
es
mov
imul
lahf
xchg
sub
sbb
enter
and
xchg
movsl
xchg
movsb
test
fdivrl
mov
or
sub
xchg
xchg
pop
cmc
int3
cmp
cs
shlb
stc
iret
pop
sbb
test
cmc
es
mov
pusha
mov
mov
pop
test
adc
and
adc
and
push
dec
xor
sbb
cs
cmp
push
xchg
pop
imul
test
sub
add
inc
stos
jo
int3
add
push
rcrb
and
stos
testb
jae
test
push
gs
pop
shlb
push
test
xor
lods
ja
xchg
mov
and
sbb
jbe
pop
mov
adc
stc
jl
push
test
pop
add
push
lcall
fbld
test
iret
xchg
xchg
cmp
inc
mov
sti
lret
inc
mov
and
shlb
dec
daa
mov
in
adc
shlb
arpl
cltd
pusha
dec
push
mov
mov
mov
mov
fwait
popa
or
popa
aaa
xor
rcrb
xor
sarl
je
jbe
in
pop
inc
shll
add
cmp
addr16
cs
add
loop
aam
ret
cmp
or
adc
xchg
cwtl
adc
mov
addb
jnp
shr
incb
jg
scas
jb
jmp
ja
inc
mov
mov
int3
loope
ret
out
xchg
rcrb
jecxz
scas
pop
xor
xchg
shlb
inc
lret
add
insb
mov
sub
test
test
sub
jmp
jbe
sub
xor
movsb
dec
add
or
mov
mov
test
adc
push
xchg
pop
ficoms
jl
jnp
jle
pop
cmp
mov
xchg
mov
dec
sbb
nop
fimull
mov
or
movsl
push
mov
and
iret
sahf
xchg
jae
mov
xchg
cmp
out
pusha
imul
sbb
out
cmp
cmp
cmp
faddl
mov
arpl
mov
test
out
dec
mov
sub
in
xor
repnz
in
sbb
scas
mov
or
pop
add
cmp
sub
movsl
inc
mov
lock
addr16
lods
sti
jp
fldenv
mov
cmpsb
add
das
inc
xchg
pushf
js
mov
dec
movsb
pop
xor
xchg
push
xchg
imul
cmp
jg
into
leave
add
add
dec
loop
cmp
xchg
leave
out
in
pop
adc
cmp
push
mov
or
xchg
sub
jbe
xor
jns
daa
cmp
pop
dec
dec
or
icebp
lock
dec
pusha
idiv
mov
mov
dec
shl
popa
aaa
sbb
pushf
aaa
xchg
dec
xchg
pop
or
mov
jno
sbb
xor
movsb
test
test
int3
cmovg
jmp
shll
lret
sahf
dec
aam
aaa
cld
pop
fs
mov
mov
jp
push
dec
fcomps
xchg
popa
cs
xchg
aam
loopne
jl
jecxz
sub
dec
cmp
push
sub
xor
cs
sbb
pop
pavgw
add
pop
sub
pop
sub
inc
ret
push
jno
cmp
lret
out
test
ja
js
nop
jns
mov
xchg
or
imul
and
push
std
gs
mov
cmp
sbb
adc
scas
stos
mov
sbb
in
push
cwtl
data16
push
scas
jo
mov
xchg
xor
ret
pop
inc
dec
mov
add
inc
cmp
push
adc
dec
cmp
cltd
lea
sub
test
xchg
pop
or
ja
jno
jne
ret
mov
dec
iret
cmp
loope
dec
out
cmpsb
in
out
sarb
leave
jbe
pop
push
and
iret
loop
add
xor
test
xor
test
out
imul
xor
imul
stc
adc
clc
cmp
adc
repz
jo
cmp
stc
rcrb
test
mov
or
addr16
push
pop
lea
loopne
mov
cwtl
add
xchg
fcmovnu
or
lcall
aas
rol
sbb
out
dec
add
push
in
call
not
scas
sbb
xor
fcompl
jg
cmpsl
sub
push
test
push
mov
xor
bndstx
addr16
xchg
xchg
fldcw
or
xchg
mov
js
jl
push
adcl
sarb
xchg
test
fwait
xor
xorb
push
mov
mov
int3
mov
ret
ss
testb
jns
add
lcall
mov
cmp
inc
fisubrl
test
jne
inc
fld
or
or
inc
xchg
fists
sbbb
push
jnp
rorb
inc
pop
mov
jmp
adc
jge
les
lods
cmp
je
testb
mov
ret
ficompl
pop
pop
idivb
xor
aas
es
insl
in
add
lock
stos
in
add
add
mov
arpl
mov
cmp
int3
gs
pop
pop
cli
shrl
std
sbb
push
and
sub
add
mov
xor
fnstcw
pushf
mov
leave
xchg
stc
sbb
cmpb
sub
push
xchg
cmc
ja
add
sbb
cmp
fistl
unpcklps
iret
cmp
and
out
push
xchg
aaa
data16
cmp
jecxz
cmp
ret
xchg
jne
pop
mov
dec
add
in
inc
push
and
lods
scas
fwait
sub
daa
xor
xchg
push
clc
test
aas
jp
push
lahf
fildll
fwait
jb
test
xchg
shrl
fdivs
js
cwtl
inc
inc
sub
xchg
aaa
dec
mov
add
andnps
mov
mov
inc
jecxz
xchg
jp
cmp
loope
pop
xor
in
add
ja
xor
mov
rclb
push
jb
inc
insl
add
mov
adc
icebp
data16
idivl
add
sbb
jns
xor
test
inc
sbb
xor
xchg
sub
dec
mov
stos
sarb
cmpsl
daa
xor
or
push
xchg
pop
xchg
imul
imul
adc
adc
mov
and
cld
mov
add
loope
cld
xchg
stos
jnp
les
lods
sbb
sub
not
xor
xchg
out
pop
test
sbb
jno
icebp
iret
mull
das
mov
xlat
pop
push
hlt
jmp
lahf
jo
xchg
mov
xor
xor
cld
add
xchg
or
add
jmp
lretw
adc
sub
dec
ds
sbb
jb
orl
fcompl
lahf
leave
icebp
sub
sbb
or
in
lods
push
nop
lcall
mov
je
outsb
add
movsb
pop
mov
js
lods
in
mov
or
cmp
frstor
jbe
sbb
ja
or
inc
cmp
jecxz
movups
cmp
mov
mov
aam
xorb
pop
outsl
movzwl
shlb
mov
pop
fnstcw
test
add
pop
xchg
jl
adc
dec
xchg
adc
push
inc
sub
roll
rolb
xchg
rol
push
subl
xchg
adc
or
leave
add
pop
leave
cmpsb
inc
movsl
xchg
xchg
pop
mov
out
xchg
push
or
ja
icebp
xor
add
pop
push
or
add
jb
imul
pop
sub
xchg
xchg
pop
jmp
popl
cmp
test
xchg
inc
adc
mov
inc
imul
cmpsl
jmp
in
aad
pop
inc
adc
iret
xchg
mov
ss
ja
dec
or
xor
out
mov
push
cmp
fadds
jbe
test
js
hlt
sbb
fwait
and
mov
pop
imul
rclb
jae
push
pop
stos
mov
cmp
pop
jo
xchg
xor
mov
notb
lret
add
pusha
dec
imul
js
adc
in
rolb
jmp
hlt
test
push
inc
es
cmp
pop
ja
repnz
xchg
sub
jge
hlt
lret
lods
sub
and
arpl
push
dec
loop
std
imul
jg
nop
mull
int3
test
notb
inc
push
jmp
xor
mov
push
vmptrld
mov
cltd
sbb
popl
imul
test
lods
mov
adc
out
push
add
shrb
out
sbbl
bound
ljmp
pop
test
jge
inc
jmp
gs
ret
dec
pop
dec
jecxz
sbb
and
call
pop
sbb
repnz
in
push
mov
arpl
hlt
mov
cs
std
push
mov
addl
xchg
cs
gs
cmp
nop
pushf
neg
adcl
mov
fwait
adc
xchg
cld
in
mov
pop
mov
sbb
or
mov
fwait
dec
xchg
pop
sbb
ja
sbb
xor
jl
mov
mov
outsl
mov
mov
shll
ret
xchg
scas
neg
imul
cmp
test
out
and
jbe
pop
daa
sbb
or
and
fldl
js
fdivrs
mov
mov
push
sbb
sub
outsb
shll
cmp
dec
aas
fisubs
repz
out
inc
test
test
or
sbb
push
add
pop
pushf
inc
xchg
mov
push
cmp
test
mov
xor
xchg
sbb
jl
repz
cmp
or
ljmp
jge
xchg
xor
cmp
movsl
test
nop
pop
pusha
push
jno
cmpsb
je
popa
push
shrb
xchg
call
mov
pop
cmpsl
mov
mov
xlat
loope
mov
jl
xor
cmc
test
adc
daa
inc
fisubs
pop
jl
push
pop
ss
repz
cwtl
jmp
in
jne
xchg
leave
enter
mov
or
ljmp
ret
iret
aad
sbb
out
mov
movsl
xor
jl
mov
add
xor
push
and
jbe
int
fildl
jb
pusha
lods
push
lahf
aaa
lock
add
inc
decb
adc
ja
pop
mov
ret
scas
xchg
xor
imul
pop
xchg
jb
xchg
or
clc
lds
cltd
rcrb
sub
xor
xor
add
movsb
test
sub
lcall
jnp
add
fmulp
sub
aas
mov
repz
xor
scas
jns
cmp
pusha
outsb
pop
mov
pop
sbb
fs
es
mov
xchg
cmpsb
pop
pop
mov
xchg
notb
outsb
das
cmp
orb
jl
fsubs
push
aas
sti
loop
bound
add
daa
pusha
push
add
adc
out
pop
adc
addb
push
inc
jmp
mov
push
ret
popf
lods
xchg
inc
out
leave
stos
xor
jle
mov
popf
sahf
fcom
or
add
cmp
in
pop
push
mul
push
mov
sbb
lds
mov
pushf
inc
inc
xchg
test
sub
adc
lret
jno
mov
or
pop
mov
xor
iret
leave
mov
sbb
mov
mov
out
in
dec
push
sbb
mov
xchg
xchg
lea
pop
dec
es
lods
popf
rcll
sub
les
stos
xchg
or
sub
mov
pop
mov
dec
xchg
loop
sahf
xor
lcall
pusha
icebp
xchg
cmp
fs
je
ret
test
cli
rclb
mov
mov
in
insb
fwait
pop
arpl
mov
mov
fcompl
inc
pusha
or
xchg
sub
test
test
adc
fwait
imul
xchg
insb
mulb
fadd
out
lahf
xchg
scas
push
dec
inc
mov
icebp
leave
add
adc
push
mov
addb
xchg
cmp
imul
aam
mov
inc
xchg
nop
cmp
lret
divl
sahf
xchg
xchg
in
mov
and
scas
xor
adc
cmp
cmp
stc
cmpsb
push
lea
xchg
das
push
sahf
divl
mov
dec
ja
inc
testl
pop
dec
xor
push
popa
inc
scas
mov
cltd
xchg
das
pusha
xchg
mov
loope
mov
sub
inc
push
test
xchg
push
mov
lea
loop
jl,pt
and
shlb
aas
xchg
pop
sub
mov
inc
mov
mov
pop
int3
aad
test
pusha
pop
and
insl
pop
xor
stos
xchg
pop
int3
data16
cmp
mov
add
lods
ss
shl
xlat
mov
xor
pop
sbb
or
mov
dec
into
dec
and
sub
testl
faddp
ret
push
in
addr16
lds
frstor
icebp
pushf
add
repz
in
fsubrs
push
shlb
inc
lahf
fcmovbe
stos
push
cmp
and
pop
cmp
int3
cmp
sbb
lods
sub
add
push
cltd
xchg
cld
stc
or
js
inc
cmc
and
push
push
sbb
and
xchg
push
inc
lcall
ljmp
xchg
push
fwait
jp
xor
in
pop
shll
popa
mov
test
dec
jg
mov
sub
aad
outsl
adcb
pop
push
fdivrl
loop
xchg
xlat
xor
mov
inc
in
jp
inc
cmp
push
mov
add
cmp
mov
add
jne
loop
mov
jb
rcrb
or
mov
aas
jns
jbe
cs
sahf
data16
xchg
ret
in
cmp
mov
scas
sbb
std
dec
or
hlt
and
add
add
pop
sub
loopne
mov
mov
xor
lods
pop
xchg
pusha
sahf
xchg
sbb
mov
mov
lock
add
test
ror
add
cmpsb
cmc
push
and
dec
out
mov
add
sbb
cmp
inc
cvtps2pi
sub
rcrl
ret
scas
mov
cmp
xchg
fstpt
imul
xor
adcl
movsl
pop
in
loop
and
aas
mov
test
sbb
clc
mov
scas
mov
fisubl
add
aad
test
pop
cmp
xchg
pusha
sbb
lods
xor
push
mov
rorl
out
push
mov
mov
and
inc
and
stos
adc
lock
cmp
inc
bswap
in
sub
mov
inc
cltd
popa
enter
dec
add
addr16
adcl
test
out
scas
jl
sbb
dec
dec
add
fisubl
push
popa
repnz
pop
inc
jl
mov
gs
test
mov
cmp
xchg
jge
insl
shl
shlb
push
sbb
data16
rclb
lods
les
pop
loopne
pushf
jecxz
test
pop
insb
lret
cmpsb
dec
sbb
xchg
scas
jle
xchg
repnz
loopne
loope
divl
cltd
add
lods
sbb
push
mov
mov
sbb
push
scas
fistpl
dec
xchg
leave
dec
das
pop
cmp
mov
xchg
adc
ja
test
push
xchg
add
mov
bound
leave
fnsave
mov
sub
inc
jne
mov
or
icebp
dec
inc
xchg
pop
push
ljmp
lods
sub
stos
leave
mov
jmp
sti
sub
adc
das
std
inc
inc
push
or
mov
ja
test
mov
cmp
std
clc
int3
cmp
push
ss
cmpsb
bound
xor
jl
arpl
popa
mov
test
push
leave
cmp
adc
ja
insl
cmp
rcrb
mov
xchg
mov
xchg
mov
ljmp
mov
insb
mov
dec
mov
rolb
pop
subb
and
int3
in
cmp
push
jbe
inc
imul
xchg
scas
xchg
test
mov
xor
movsl
psubsw
pop
out
sbb
or
and
lock
xchg
mov
shrb
test
sbb
imul
shrl
lods
dec
jb
push
divb
pop
insl
addb
dec
pop
xchg
lds
or
insb
jae
scas
notl
push
cmp
ljmp
dec
cmpsb
xor
out
loopne
out
aam
cmp
add
test
in
jbe
mov
pop
cwtl
pop
cmp
cmpsl
add
repz
xchg
imul
outsb
inc
xchg
pop
and
cmp
and
adcl
mov
mov
xchg
jg
sbb
pusha
verr
cmp
test
lock
leave
int3
push
sbb
mov
fwait
or
push
shlb
test
add
mov
pop
mov
test
sub
sti
lea
push
mov
out
fnstenv
adc
and
mov
cmp
js
mov
cmp
push
hlt
inc
mov
mov
shlb
cmp
dec
and
outsl
xchg
mov
inc
sub
bound
cmpsl
mov
and
rolb
shrl
je
cld
xchg
mov
into
in
aad
fistpl
push
push
mov
or
add
fisttpl
pop
mov
fnstsw
mov
arpl
sub
push
cmc
cmp
outsl
fcomip
mov
mov
stos
in
xor
xchg
xchg
cmp
fwait
leave
clc
icebp
aaa
imul
fs
mov
out
sub
sub
nop
leave
out
lds
jp
repnz
sub
sbb
shlb
jg
es
mov
pop
jl
mov
jns
pop
filds
bound
movsl
test
and
pop
jbe
cmp
sub
test
add
jno,pn
mov
sahf
iret
jl
inc
mov
mov
mov
inc
scas
cmp
pushf
mov
and
and
mov
nop
pop
xchg
jp
cmp
cmp
mov
lea
pop
xchg
mov
out
fs
loope
testb
xorb
scas
jge
outsb
fmull
ja
lahf
xor
test
sbb
pop
aas
shlb
cmp
ret
xchg
and
test
xor
cmp
lods
pop
dec
hlt
and
out
aas
mov
test
mov
xor
gs
lods
insl
add
push
xchg
push
stc
movsb
mov
outsl
mov
nop
ret
out
cmp
adc
jge
sub
adc
jns
jmp
leave
xor
aad
adc
insb
aaa
mov
daa
sub
mov
cmp
xchg
inc
js
jge
mov
addr16
stc
int
sbb
or
inc
imul
test
mov
repz
mov
addr16
not
add
mov
adc
inc
xchg
orb
or
sub
lods
fildl
ret
out
shll
loope
rolb
stos
loope
rclb
ud2
scas
add
divb
dec
mov
xchg
dec
jge
das
mov
test
jge
adc
cmp
ljmp
lret
mov
cmp
mov
jl
xchg
test
add
cmp
mov
lock
loopne
sub
xchg
xchg
sti
scas
dec
push
aam
inc
mov
addl
xchg
adc
cld
aaa
test
push
sbb
sahf
icebp
popa
xorl
jmp
inc
out
test
cmp
sarb
rclb
pusha
mov
cmp
aaa
dec
cmp
aas
mov
ja
incb
sbb
push
mov
add
and
dec
fmull
test
mov
dec
xchg
leave
rorb
add
daa
xchg
imul
jmp
ja
imul
int3
aas
pop
xchg
sbbb
pop
jne
fsubrs
mov
pop
xchg
xorb
add
js
push
fdivl
int
int
outsl
xchg
mov
dec
fldt
icebp
js
xchg
cmp
fdivs
aaa
xor
movsb
lcall
inc
lret
mov
adc
enter
cmp
ljmp
movsl
mov
dec
cmc
in
data16
xchg
jnp
xlat
cltd
or
mov
push
add
inc
aad
andb
xchg
aad
jmp
jp
mov
inc
rcr
repnz
js
cmp
mov
adc
stc
push
cmpsb
ret
xchg
cld
int3
cmovno
adc
mov
sub
push
movsb
xchg
subb
outsl
sbbl
push
xchg
sbb
mov
cmp
xchg
pop
bound
add
out
cwtl
popa
dec
test
add
test
mov
js
std
test
jl
jg
fcomip
int3
xchg
mov
xchg
out
push
popf
repnz
sbb
cmpb
sbb
push
cmp
test
pop
dec
incl
les
lret
cmpsl
fnstsw
or
ja
push
iret
dec
jmp
xchg
into
jo
test
aas
repz
add
lods
mov
xchg
daa
fistpll
lea
sub
xchg
out
fmull
fisttpl
jge
cwtl
outsl
and
jg
add
std
test
pop
iret
add
pop
and
inc
movb
add
mov
clc
jecxz
subl
pop
jne
repnz
test
rorl
xchg
or
js
xchg
jb
pusha
lods
jl
cld
enter
dec
mov
add
cli
sbb
pop
dec
popf
andl
inc
mov
mov
sub
sbb
dec
and
mov
fabs
push
jle
adc
sbb
rorb
lcall
mov
mov
xchg
jl
stc
cmpb
lods
push
mov
mov
es
xchg
xchg
loopne
sub
jae
or
mov
add
clc
lahf
add
jno
lcall
test
dec
adc
imull
mov
les
push
loop
xchg
sti
xchg
push
addl
jno
mul
mov
out
or
xlat
sub
and
aam
sub
push
outsb
dec
dec
faddp
push
icebp
push
js
les
jmp
mov
outsb
or
js
add
les
pushf
icebp
mov
inc
dec
xchg
test
testb
push
mov
stos
cmpsb
mov
sbb
rcll
cmp
js
pusha
dec
out
loop
xchg
jno
push
jnp
fs
jne
fwait
push
daa
dec
vmaxsd
int3
loope
xchg
mov
mov
ljmp
jmp
orb
pop
mov
test
shl
dec
ds
add
int3
sbb
xor
xchg
fwait
jge
iret
mov
arpl
push
dec
mov
sbb
jno
repnz
mov
mov
insl
les
arpl
pop
pop
test
call
iret
jbe
dec
inc
cmp
mov
bound
loope
insl
add
sbb
sub
xchg
cmp
cmp
inc
inc
notl
out
mov
pushf
sarb
mov
sarb
and
sar
inc
jo
or
mov
adc
adc
ljmp
vpshufd
stc
xchg
and
fs
shlb
lcall
xor
sti
jp
sbb
sarb
mov
rolb
rcll
pop
in
add
cwtl
ficoml
lds
testb
cmp
pop
sbb
mov
cmp
es
xchg
in
adcl
lret
or
sahf
cltd
ja
xchg
adc
data16
and
adc
xor
scas
adc
adc
add
dec
arpl
test
and
fldcw
push
mov
xor
aam
sbb
in
aas
cld
mov
xchg
sub
xor
je
jle
out
xchg
decb
sbb
push
xor
cs
sbb
test
jns
add
fisttpll
test
xchg
push
pop
xor
xchg
sarl
jl
ror
xchg
adcl
jbe
pop
les
shll
stos
pushf
or
ljmp
push
rcrb
out
rcrl
dec
hlt
je
or
cmc
mov
lahf
fidivl
push
imul
mov
out
mov
xor
adc
out
data16
jecxz
xor
loope
test
mov
ja
in
cmp
cmpb
out
and
test
std
ror
fcmovbe
rcrw
push
fwait
or
dec
repz
loop
sbb
lods
scas
call
dec
jg
push
into
sbb
cmp
je
cmp
cs
pop
stc
dec
lock
popa
ret
scas
data16
and
insb
push
iret
in
ja
mov
aaa
mov
jmp
and
dec
cmp
jge
adc
sbb
pop
aam
sub
xchg
lret
ret
adc
push
mov
pop
jns
test
mov
pop
js
cmp
repnz
dec
cli
jmp
mov
int3
push
inc
jg
mov
loop
mov
jbe
push
mov
lret
jne
dec
rcl
pop
inc
sarb
nop
test
adc
cmp
jno
inc
shl
lahf
ret
data16
rorb
pop
xchg
sub
hlt
add
loop
push
fcomi
enter
imull
sub
and
pop
mov
xchg
add
roll
lds
outsl
xchg
add
push
mov
divb
mull
fisubrl
popa
out
push
push
iret
and
popf
lret
ror
jbe
clc
dec
lds
pop
pop
scas
jmp
or
cmpsb
out
jle
imul
jp
aam
sub
inc
dec
jecxz
jnp
int
andb
cmp
push
fiadds
test
xor
inc
push
lret
push
clc
fxam
sbb
sub
ljmp
lcall
out
out
shlb
xor
cmpsl
mov
inc
xchg
pop
pop
mov
sahf
icebp
adc
cmp
pop
and
add
movsb
jle
adc
mov
rcl
jns,pt
ja
sti
fcmovb
test
test
inc
iret
addb
add
dec
mov
arpl
push
add
xchg
rorl
mov
lds
jg
mov
out
mov
sbb
jge
push
mov
xchg
ret
and
inc
ja
fstps
cmp
xchg
test
or
jns
mov
js
pushf
movsb
popa
or
push
or
fsub
in
lods
in
inc
add
jg
out
daa
out
cmp
mov
mov
sti
sbb
xor
mov
mov
ss
pop
test
imul
into
sub
mov
xchg
test
aad
dec
pusha
xor
xor
arpl
xchg
push
push
adc
ficomps
mov
mov
popa
popa
pop
nop
dec
es
dec
xchg
cmp
loopne
out
xchg
jae
out
xlat
jl
sub
clc
push
out
outsl
push
in
ret
pop
pushl
xchg
sbb
dec
inc
push
sbb
jae
imul
pop
adc
cmc
push
ss
push
insb
adc
out
add
adc
dec
mov
sarl
cmpsb
add
pop
pop
cmp
push
aaa
pop
and
sbb
in
xchg
add
xchg
and
cmpsb
lock
std
cmp
out
and
test
push
and
testb
das
and
test
rol
or
movzwl
mov
sub
push
xchg
divb
stc
mov
fdivrs
jp
push
xchg
inc
jecxz
rcrb
mov
jno
es
out
pop
cltd
sbb
mov
mov
jbe
pop
outsb
and
sub
out
add
out
mov
sbb
jge
scas
pop
dec
in
and
fisttpl
aam
jno
adc
xchg
jne
and
push
sbb
jecxz
cmpsl
mov
pusha
pop
mov
xor
mov
cmp
orl
jae
sub
push
pop
fs
fwait
jne
loope
mov
sub
jns
push
cmc
inc
add
sbb
imul
push
out
mov
scas
ss
adc
pop
movsl
insl
shl
or
lcall
sahf
repz
xor
js
arpl
shlb
pop
jecxz
out
mov
loop
and
pop
shlb
arpl
sub
pushf
adc
mov
xchg
inc
dec
adc
in
and
ja
sbb
inc
scas
xchg
pop
jl
push
and
iret
ja
stos
add
xchg
dec
adc
test
pop
testb
lods
mov
add
loop
sub
je
ljmp
or
mov
loope
jmp
aam
sbb
push
xor
rclb
mov
roll
xchg
lahf
add
push
jne
pusha
push
adc
out
lock
jmp
cmp
xchg
jg
cmpsl
xor
adc
jmp
sbb
mov
cmp
lret
xchg
pop
pop
stc
xchg
shr
inc
and
cmp
push
rcrb
add
sbb
push
dec
xlat
jnp
repnz
jnp
cmpsl
push
cmpsb
push
jg
xchg
testb
inc
insl
lea
hlt
add
cmp
cmc
mov
in
xchg
inc
aad
ss
popa
movsl
cmp
jmp
inc
sub
rcr
pop
jge
add
mov
addb
das
sub
lcall
mov
mov
movsl
dec
ljmp
js
pop
addr16
xchg
xchg
shlb
leave
out
dec
or
xchg
out
cmp
adc
dec
add
adc
xchg
sub
popf
test
ss
out
push
int3
movsl
mov
mov
or
and
inc
ret
nop
lds
adc
lcall
push
cmp
out
fadd
std
sbb
mov
sub
jnp
lods
jp
rolb
mov
loopne
test
adc
pusha
sub
add
xor
jecxz
int
xchg
jne
stc
xlat
dec
fists
pop
dec
sbb
pop
mov
popf
sahf
mov
dec
jns
cmp
shlb
mov
popa
pop
loop
call
mov
roll
and
add
push
cmp
sbb
fnsave
sub
jmp
sub
pop
loopne
mov
sub
fiaddl
cltd
or
sarb
mov
dec
test
add
lock
lahf
scas
pop
inc
enter
push
js
jmp
ret
xor
imul
addb
test
xchg
daa
rol
sbb
out
lea
cmp
lea
xor
xchg
mov
and
sbb
cli
dec
cs
andl
mov
daa
je
aas
xchg
and
cmp
testl
mov
pop
push
mov
std
adc
cmp
lods
add
jl
adc
lret
mov
rorl
lcall
or
add
push
mov
or
addb
sbb
push
fmull
dec
sub
cmp
andl
sbb
enter
xchg
jl
shr
test
aam
mov
stos
mov
rol
repnz
push
pop
nop
mov
pop
pop
bnd
cmp
dec
sub
jb
lret
hlt
xchg
mov
pusha
sbb
dec
loop
out
mov
jle
push
add
cmpsl
mov
repz
int
sbb
and
mov
sbb
xchg
icebp
mov
add
xchg
push
and
divl
push
lock
sub
inc
mov
in
in
das
inc
jbe
dec
test
cmp
divb
pop
xor
xchg
ret
leave
sub
xor
xor
popa
and
mov
cmp
mov
jge
and
mov
xchg
enter
add
dec
sub
sbb
xchg
cmpsb
dec
push
sub
in
notl
xlat
das
pop
test
cmpsb
cmc
shl
ljmp
test
sbb
mov
icebp
nop
jns
push
mov
pop
in
test
aam
add
mov
das
xor
sub
test
insl
insl
negl
es
in
call
mov
xchg
or
xchg
nop
mov
mov
mov
add
cltd
scas
bound
xlat
push
sbb
xacquire
imul
xchg
sarl
jle
or
adc
iret
pop
mov
out
push
jle
cmp
add
xor
adc
aad
dec
mov
mov
ret
cld
xchg
pop
push
or
ljmp
lods
fadds
pop
push
pop
cmp
xchg
cmp
scas
in
icebp
push
lods
xchg
lahf
dec
sbb
ss
test
scas
mov
call
leave
icebp
sub
jmp
inc
aas
xor
pop
adc
xchg
pop
loope
loopne
xlat
sbb
dec
inc
jnp
cmp
idivl
pop
mov
stos
lods
sbb
mulb
arpl
int3
pavgb
fidivs
inc
push
rorl
pop
push
dec
pop
notl
sub
jp
cs
xchg
int
cmp
push
test
stos
jo
fistpl
cmp
lret
inc
mov
sub
mov
xchg
fmulp
dec
fists
push
mov
lret
inc
fidivrl
or
add
pushf
jle
in
out
cmpsb
sahf
lods
std
lds
push
jbe
popa
jae
les
out
pop
xchg
pushf
cmp
mov
push
inc
pop
gs
lret
jne
sbb
test
in
call
fidivs
insb
divl
fmull
loopne
and
aam
mov
push
push
jl
dec
lds
jmp
shrb
fstps
out
test
sub
fs
or
xchg
pop
jmp
push
mov
xchg
mov
jmp
inc
xor
cmp
xor
sbb
jl
mov
sub
aad
dec
js
pop
out
fnsave
jg
mov
test
xor
and
jle
xchg
mov
adc
test
loope
or
adc
mov
mov
sbb
flds
jmp
pop
xlat
mov
inc
mov
test
fs
push
dec
stc
mov
in
jg
sbb
aas
stos
jnp
test
add
cs
sub
icebp
cmpsb
sub
mov
ljmp
mov
mov
push
jmp
lret
lods
or
mov
mov
and
sub
adc
cmc
push
mov
insb
movsl
aam
xchg
sbb
adc
inc
stc
into
mov
ret
sarl
cmp
fsubrl
in
xchg
jl
mov
mov
es
jns
cwtl
ret
inc
inc
sub
mov
not
test
jle
mov
inc
aaa
add
jmp
sub
pop
or
enter
pop
cmp
mov
cmp
sbb
push
aam
mov
in
jl
xchg
cmp
jp
fisttpll
mov
pusha
cmp
sub
dec
mov
test
cmp
mov
xchg
jecxz
lods
test
dec
sub
dec
enter
push
out
clc
fsts
dec
cmpsb
lods
mov
sub
leave
mov
mov
shll
xchg
fsubl
je
rcrl
int
loope
push
dec
loop
cmp
jb
push
pushf
jmp
lds
mov
xor
sahf
inc
mov
ret
sbb
inc
cli
push
mov
and
loope
push
loope
inc
xor
sub
pop
pusha
mov
push
cwtl
pop
test
test
out
adc
pop
mov
jge
mul
rclb
mov
dec
mov
sub
int3
ja
pop
cmp
dec
dec
in
jbe
in
sub
aad
sub
fstp
rcll
add
add
jecxz
mov
aas
cmp
faddp
popl
loopne
int3
mov
lock
test
outsb
rclb
push
loopne
inc
mov
mov
cmp
mov
fcmovbe
adc
or
jo
ret
adc
sbb
push
add
int3
mov
in
test
sub
mov
mov
test
xchg
pop
xor
or
push
adc
mov
imul
nop
pop
lods
pop
daa
inc
inc
fdivrs
pop
xchg
jg
repnz
or
loop
lret
stos
mov
stos
sub
add
inc
clc
test
inc
sbb
push
fnstsw
ret
xchg
fwait
mov
xor
sarl
std
mov
sub
jo
cmp
lds
or
sahf
adc
mov
ja
repnz
sbb
and
add
mov
xor
push
ret
xchg
mov
sarl
pop
sarb
cmp
or
test
repnz
mov
in
push
inc
imul
xchg
fsubrs
test
pop
stos
daa
loopne
iret
les
sub
lahf
mov
addr16
add
cwtl
push
add
stc
dec
push
fnstsw
push
hlt
jg
fisttpll
inc
icebp
sti
adc
imul
divps
negb
int3
mov
push
dec
push
cmp
pop
xchg
sub
push
ret
leave
push
sbb
cld
lahf
daa
jnp
xchg
and
push
je
pop
call
sub
stc
hlt
cltd
mov
popf
cmp
pop
mov
ud1
out
adc
dec
jg
adc
jbe
push
xchg
shrb
sub
popa
push
arpl
repnz
movsb
in
dec
xchg
mov
add
in
rorl
outsl
push
test
sbb
stos
sub
ret
pop
cmp
addr16
xor
js
jbe
push
xchg
mov
cmp
sbb
lahf
adc
loop
pop
mov
js
nop
cmpsl
popf
rolb
xcrypt-ctr
cmpsl
cwtl
fwait
jns
lret
mov
pop
inc
and
or
sbb
popa
lret
testl
in
jecxz
in
loope
js
inc
add
xchg
ss
daa
push
dec
xchg
les
cmp
hlt
cmp
inc
mov
aas
nop
adc
pop
sbb
mov
std
lahf
aaa
mov
pop
push
push
shr
ss
les
aas
mov
push
dec
xchg
insb
out
push
cmp
push
adc
mov
ljmp
mov
into
loop
test
cwtl
aaa
mov
xchg
dec
pushl
fwait
notl
mov
rorb
inc
cmpsl
mov
xor
pushf
loope
xchg
addb
cmp
and
sbb
leave
enter
push
das
jg
jne
jno
push
mov
xor
in
sub
aam
xchg
and
sub
jmp
stos
push
add
int
shll
xchg
jb
xor
and
sbb
clc
or
ds
bound
popf
add
dec
mov
test
ret
into
mov
test
dec
sbb
mov
mov
xchg
fs
dec
mov
scas
adc
in
fwait
outsl
inc
ret
sub
in
fisttpll
mov
mov
sub
xchg
xchg
aam
inc
data16
inc
insl
repnz
int3
mov
add
add
xchg
sbb
push
movsl
andb
add
xchg
test
adc
adc
xor
add
cmp
xchg
xchg
fs
out
cmp
test
sti
cmp
inc
push
fcomps
test
loope
test
aad
mov
jg
lcall
stos
cmp
xchg
inc
std
sbb
cmp
dec
pushw
repz
in
ret
push
inc
mov
fwait
jne
mov
cmp
and
cwtl
pusha
insl
ja
inc
dec
lcall
xor
push
add
std
dec
fdivrl
mulb
sub
movb
ret
pusha
xor
out
and
mov
lahf
mov
push
sub
sub
cmp
push
and
pop
rolb
cs
add
testl
aad
mov
sub
cmp
xchg
mov
std
gs
idivb
add
xchg
imul
adc
push
mov
cmpsb
cmp
inc
mov
loop
mov
loop
into
fstl
mov
sbb
jg
xchg
repnz
test
jge
xchg
mov
mov
pop
iret
mov
lret
push
push
sarb
sarb
das
push
mov
mov
ja
je
pop
and
pop
cli
pop
pop
pop
adc
flds
fwait
test
push
pop
push
int3
es
jnp
cmp
pop
cmp
clc
jecxz
jl
lea
pop
pop
ss
imul
sbb
sbb
xchg
push
mov
jmp
mov
arpl
mov
jge
push
leave
mov
fwait
jnp
jecxz
cmp
lahf
inc
add
xor
xor
jmp
or
stc
imul
gs
inc
je
dec
mov
ss
scas
ret
mov
out
mov
cli
inc
xchg
mov
add
lahf
cld
add
and
mov
or
fdivrl
cs
mov
fdivrl
pop
add
adc
adc
push
xchg
jne
aas
mov
push
lods
push
test
or
xor
out
mov
dec
lcall
inc
sub
add
sbb
nop
adc
jns
xchg
mov
adc
push
in
sub
je
fdivr
fnsave
nop
cmp
and
jmp
and
jge
cmp
std
rclb
mov
xchg
xor
cmp
xor
xchg
in
or
sbbb
jo
push
in
dec
jnp
mov
cli
cmc
adc
dec
fsubs
mov
sub
sarb
in
sbb
mov
fnsave
daa
jnp
andb
xor
rcrb
pop
mov
sbb
popa
movsb
sub
repnz
stc
rcrb
scas
aam
push
xchg
lcall
js
dec
decl
repnz
cmpl
loop
cmp
sahf
std
in
pop
mov
adc
fsubs
mov
test
fistps
ret
xchg
pop
pusha
inc
and
cmp
iret
ja
nop
mov
cmpsb
aas
rcll
int3
test
aad
pop
push
sub
pop
xchg
mov
dec
lock
shlb
xor
dec
incb
out
std
bound
xor
sbb
mov
loopne,pn
mov
lret
iret
jmp
pop
mov
cmpl
lods
pusha
gs
mov
push
pop
call
cmp
xor
dec
mov
cmp
inc
enter
test
imul
fnsave
cmpsl
loope
dec
in
iret
stc
push
lahf
and
mov
xchg
rcrl
cmp
sub
inc
test
xchg
rcrl
pop
pop
outsl
mov
loope
pop
xor
fcmovne
xchg
mov
push
in
jno
xchg
and
movsl
ss
in
or
cld
test
fdiv
sti
or
jae
push
dec
cltd
pop
jnp
mov
mov
and
popa
sbb
sbb
pop
bound
enter
mov
pop
and
sbb
pop
out
cmp
pop
aas
jge
lds
inc
add
and
out
cmp
mov
dec
stc
lods
xchg
jp
adc
test
or
mov
sbb
cmc
gs
ret
pop
cs
std
aam
xchg
jno
jecxz
inc
inc
fdivr
aas
sbb
ret
cld
xor
mov
dec
loopne
adc
arpl
xor
xor
sub
dec
out
leave
cli
fcoml
or
rorb
cmp
out
fadds
dec
mov
adc
sub
frstpm(287
dec
add
cmpxchg
int
sahf
pushf
pop
ds
inc
inc
nop
rcrb
or
dec
rol
insb
adc
jmp
sub
pop
cmp
aas
jo
jmp
lret
dec
adc
adc
xchg
stos
cmpsb
lahf
jnp
sti
mov
out
ja
out
push
mov
cmp
xor
jge
test
push
cmp
xchg
mov
hlt
mov
scas
lret
jne
or
arpl
repnz
cmp
mov
call
inc
cmpsl
jp
into
xor
jb
xchg
sub
pop
js
mov
das
jg
inc
pusha
cmp
xor
or
rcrb
repz
pop
fcmove
imul
in
jl
add
test
loop
xchg
cmp
aas
dec
mov
js
repz
sbb
ljmp
lock
mov
xor
sbb
dec
ficoms
sti
es
out
incl
inc
adc
mov
mov
sbb
fisttpll
adc
insl
jmp
fs
jle
cmp
cmp
xchg
enter
mov
push
movsl
ja
push
popl
cmp
xchg
loop
aam
push
and
or
adc
out
push
arpl
cmpl
pop
jp
iret
jl
sti
push
cmp
and
xlat
cmp
lods
or
rclb
sub
mov
or
in
cmpl
sub
repnz
or
ds
xor
lea
xor
mov
mov
cmp
jge
inc
js
and
es
jno
dec
movsb
dec
mov
leave
inc
pop
push
lods
pop
cmp
mov
xor
adc
dec
sub
inc
jnp
cmp
rclb
jecxz
jo
pop
push
ret
fstpt
int
xchg
add
push
push
cmpsb
push
loop
test
fdivr
mov
addb
and
push
push
ja
sbb
and
cmp
fcoms
test
enter
mov
bound
push
pop
jge
pusha
lds
xchg
push
sub
mov
idivl
lret
in
mov
inc
out
fcompl
sahf
mov
sar
nop
or
xlat
pop
lods
stos
mov
mov
int3
test
aaa
stc
push
xchg
push
add
jno
andl
cmc
adc
add
xor
pop
add
out
pusha
loope
fisttpl
andb
psllq
push
cmp
popa
xchg
or
fld
ret
push
pop
mov
add
test
sub
pop
jo
aam
call
out
cmp
pop
mov
gs
in
mov
test
push
movsb
jp
cld
fidivrs
data16
pop
popa
cmp
sub
mov
cltd
mov
movb
sub
sbb
mov
insl
adc
jns
mov
jno
mov
shl
cmp
dec
test
loop
sbb
into
mov
hlt
or
inc
xchg
sbb
dec
aad
xor
scas
fstps
sub
inc
add
sbb
and
lea
mov
pushf
cmpb
adc
int
cmpsb
mov
xor
adc
subl
cmp
inc
cmpsb
add
pop
hlt
dec
mov
out
popa
or
push
mov
arpl
xchg
lret
xadd
popf
in
pop
xlat
push
xchg
cli
mov
sarb
or
outsl
imul
fldenv
in
out
adc
and
cmp
jnp
cmc
iret
adc
push
out
imul
icebp
ds
adc
mov
fstpt
sub
fldl
and
and
adc
mov
mov
mov
push
cmp
lcall
bswap
inc
push
xor
jecxz
sub
in
stc
lret
push
out
popf
fstl
and
sbb
push
add
jnp
leave
xchg
pop
inc
popf
xlat
fidivl
pop
test
mov
dec
dec
push
adc
js
jmp
xchg
enter
test
ret
lods
jmp
cmp
jl
add
fldt
icebp
cmp
adc
push
test
mov
cld
xchg
xchg
mov
into
data16
sbb
repz
mov
push
sub
les
test
fdivrs
or
xor
mov
sahf
inc
mov
and
ljmp
or
in
fs
aam
inc
sar
adc
movb
xchg
or
sbb
cmp
jge
pusha
inc
mov
push
out
test
mov
into
idivb
aam
sub
sbbl
fmuls
xlat
dec
xorb
adc
push
sbb
mov
mov
lcall
ss
dec
ret
sub
jp
pop
xchg
test
lods
outsl
lcall
fsub
xor
jp
cs
cmp
mov
push
cmp
and
dec
cmp
out
daa
daa
pop
lods
ljmp
add
cmp
xchg
lret
xchg
cmp
mov
and
sbb
or
rcll
or
adc
mov
adcl
xchg
push
pop
int3
jge
ss
dec
in
andl
or
cmp
jo
sti
sarb
popfw
or
fiaddl
mov
xchg
mov
out
mov
scas
and
xchg
add
add
pushf
scas
cltd
mov
jno
arpl
jae
pop
out
testl
add
orl
outsl
loop
mov
adc
jle
push
fwait
jbe
cmp
xchg
and
iret
clc
roll
lahf
jne
scas
int3
sbbl
cmp
jl
mov
sbb
popf
test
jmp
lods
das
adcl
ret
push
cli
adc
pop
fstps
stc
inc
or
mov
lret
or
jp
sbb
ss
outsl
mov
fwait
or
rcrl
insb
pop
pop
faddl
stos
ss
push
loopne
pop
xor
xor
jl
cmp
fs
pop
call
call
inc
sbb
cmp
sbb
pusha
dec
jmp
pop
mov
sbb
adc
arpl
cmp
jnp
jmp
mov
pop
cltd
cmp
gs
jae
xor
jno
xchg
popa
or
lds
ds
fwait
in
push
or
and
pop
lods
lea
jecxz
pop
xchg
adc
inc
mov
mov
fs
mov
or
int
xor
cmp
jge
adc
jo
mov
dec
lret
pushf
cmp
rorb
add
jns
pop
jno
dec
xchg
push
clc
push
cmp
les
or
aam
addr16
cmp
push
cli
sub
sbb
mov
jnp
pop
cmp
xor
rcrl
fldcw
push
pop
and
aaa
lods
inc
cmpsl
iret
mov
leave
adc
clc
adc
jmp
rcrb
cmpsl
mov
fidivrl
and
xchg
push
addb
fdivs
push
mov
mov
out
lea
leave
test
xor
cwtl
xor
sbb
out
push
jmp
mov
or
jmp
sti
pop
divb
sub
pop
aas
out
loope
sbb
pusha
adc
dec
loopne
sub
rol
push
cmpsb
xor
fisubs
cmp
pop
test
cli
adc
fstpt
sub
inc
outsl
add
sub
negb
jb
hlt
leave
lods
loopne
push
jnp
mov
pop
ss
add
jg
inc
gs
sbb
leave
xor
inc
mov
out
mov
push
inc
int
xchg
lea
mov
es
ss
xor
mov
inc
rcll
ja
pop
and
dec
pushf
cmp
pop
inc
ja
pusha
sub
mov
xchg
dec
xor
pop
or
test
jl
jno
mov
xchg
pop
add
cmp
cmpsl
hlt
insb
shl
push
lock
popf
daa
pusha
mov
iret
xchg
sub
jns
nop
shll
mov
mov
push
and
push
sub
mov
bound
jns
insb
mul
pop
and
jp
xor
inc
int
adc
out
dec
pop
test
js
addb
xchg
gs
sbb
cmp
test
and
push
xor
fnsave
xchg
pop
and
fdivrs
fsubl
inc
stos
sub
aas
cmc
inc
mov
adc
sub
popa
sub
dec
cmp
xchg
cmc
sahf
mov
cmp
ja
inc
jbe
add
mov
fldl
or
xlat
mov
loope
jne
mov
test
pop
lods
mov
fisttpl
loopne
inc
jno
push
xchg
call
add
sbb
xchg
int3
dec
leave
popf
dec
inc
idiv
jnp
js
addb
cmpsl
xchg
test
pop
pop
mov
add
daa
adc
or
sbb
stos
and
jns
mov
jo
xchg
incl
aas
mov
push
into
andb
cmp
push
or
rclb
and
subb
js
scas
imul
mov
ja
jl
or
pop
mov
pusha
das
dec
pusha
vmwrite
push
loope
mov
test
pop
je
add
pushl
sub
mov
filds
icebp
sbb
add
sbb
sbb
lret
xchg
ror
push
popa
xchg
aaa
inc
repz
mov
push
mov
sbb
sbb
das
xchg
aaa
je
push
pushf
loopne
fcompl
xor
adc
scas
es
sbb
jl
and
mov
add
mov
push
mov
push
adc
pop
mov
xchg
sbb
test
add
pop
test
sub
cltd
pop
imul
cli
clc
mov
mov
fldl
nop
cmp
sahf
pop
pop
sahf
out
aas
sbb
sub
pop
aaa
push
add
xchg
mov
in
push
scas
add
adc
or
ficompl
or
jle
fnstenv
xchg
fs
sub
push
pushf
jge
xor
iret
sub
mov
out
mov
inc
pop
test
cmpsl
pop
mov
ja
jae
cmc
sbb
jl
bound
adcb
out
cli
das
subb
test
sbbl
addb
xor
xchg
in
add
push
xor
outsb
or
cmp
shrl
push
or
sub
sub
push
mov
pop
mov
lret
jp
and
xlat
push
mov
rcr
push
xor
jmp
jns
movl
mov
cmp
loopne
inc
xor
jnp
pusha
adc
jb
gs
movsb
dec
cli
cli
lea
dec
js
cld
daa
push
rol
jmp
out
pop
xchg
and
push
cmp
lahf
lret
repz
dec
lea
rep
mov
sbb
les
mov
std
or
es
add
push
and
add
ss
mov
add
data16
and
xlat
rcrb
push
or
lock
mov
jmp
jmp
push
dec
jecxz
insb
dec
dec
xchg
mov
xor
arpl
cli
outsl
inc
xor
cmp
jne
nop
push
jae
xor
stc
mul
sbb
push
rcl
xchg
lahf
mov
pop
mov
mov
jge
je
scas
jns
shll
mov
inc
pop
xor
xor
sbb
fldt
xor
dec
shll
flds
dec
bound
popa
pusha
in
movl
adc
ss
mov
pushl
leave
jb
mov
push
insb
je
sbb
in
inc
mov
mov
out
inc
pop
cmpl
cmp
cmp
cmpsb
out
shrb
inc
mov
pop
out
pop
mull
pop
icebp
pop
push
add
js
xchg
pop
xchg
dec
mov
mov
push
pop
sbb
add
push
lcall
mov
cmp
cmp
inc
jo
cmp
sti
daa
push
dec
sbb
pushf
hlt
push
pushf
add
in
outsb
and
lret
or
lock
ljmp
push
scas
mov
loopw
hlt
xor
push
into
mov
fidivrs
lcall
cmp
dec
cli
xchg
sbb
and
push
mov
adc
mov
bound
dec
cs
mov
fcmove
int3
lods
js
xor
shll
ss
pop
mov
repnz
mov
js
in
mov
inc
mov
stos
jns
cmp
jnp
xor
pop
push
pop
push
lahf
mov
test
sbb
xchg
push
cmp
mov
inc
xchg
xor
or
push
fsubrs
pop
push
dec
in
inc
iret
jp
mov
mov
dec
sbb
xlat
mov
xchg
mov
inc
clc
dec
lods
movsb
mov
sbb
out
cmp
ret
scas
xchg
dec
cmp
jne
pop
cmc
xchg
ja
or
sbb
add
mov
push
in
jge
add
bound
imul
adc
call
fs
mov
loop
sub
or
push
add
sbb
mov
cmp
mov
lcall
xchg
or
in
push
daa
sti
out
mov
jbe
adc
inc
fidivrs
mov
movsl
fistpl
or
mov
in
or
test
mov
in
xor
push
adc
std
sub
jno
push
or
lea
out
popl
inc
cmp
ret
mov
int
fdivr
ja
clc
stos
pop
push
xchg
inc
aas
add
jmp
push
add
decl
add
or
xchg
pop
push
xchg
sbb
jae
fidivrl
movsl
sbb
adc
lds
test
lahf
inc
not
sbb
dec
mov
sub
sub
ret
inc
in
cmp
out
leave
xor
les
xorl
mov
jp
pop
or
sbb
mov
cld
cmpsl
xchg
js
dec
xor
popa
push
mov
jecxz
out
inc
mov
pop
dec
jle
scas
dec
add
nop
fidivrl
repnz
pushf
std
push
cmpsl
ds
sub
lcall
jg
push
xor
pop
lods
xor
push
stc
xor
xchg
adc
aad
out
xor
in
lahf
lods
shlb
mov
inc
jg
xchg
lods
pop
into
xor
mov
sahf
fdivs
clc
or
push
out
loopne
cs
loope
gs
rol
and
xlat
xchg
and
mov
sub
jg
mov
in
add
jae
cmp
shr
mov
aad
repnz
cld
iret
ret
jb
jnp
aaa
xor
sahf
dec
push
jno
push
data16
add
mov
mov
hlt
mov
pop
push
sbb
push
sub
cld
dec
inc
xchg
ja
cmp
ljmp
mov
daa
jp
imul
nop
test
aam
xchg
inc
push
scas
fdivr
mov
leave
cmpsl
test
pop
pop
mov
repnz
adc
pop
jmp
aas
in
xchg
mov
xor
jmp
mov
xchg
lods
sbb
into
mov
fmuls
psrlw
into
test
cmpsb
insb
and
sub
xchg
xchg
jecxz
jle
cli
push
je
inc
mov
push
cmpsl
int
sub
sarl
jb
movsb
mov
mov
test
adc
std
mov
jge
dec
stc
and
mov
fsubl
pop
arpl
std
add
scas
push
and
sub
bound
sub
mov
setl
cmp
js
pop
out
mov
pop
push
inc
mov
out
sti
insb
cmp
shlb
jo
cld
mov
int3
mov
dec
lret
dec
mov
mov
pop
in
test
push
sbb
fsts
cmp
lret
cmp
pop
fiadds
jg
andb
test
es
dec
push
mov
push
ficoms
mov
loop
pusha
inc
cmp
test
movsb
mov
ljmp
dec
dec
jge
push
xchg
call
rcrb
mov
and
aas
xor
push
sahf
out
dec
daa
lret
and
pop
data16
and
ficoml
iret
loope
jae
out
cmp
stos
outsl
shrb
stc
es
dec
ficomps
jmp
xchg
jmp
cmp
mov
daa
sbb
inc
jns
popa
out
dec
cld
outsb
jle
jmp
insl
scas
rcrb
sbb
jp
adc
and
out
inc
cmpsl
rolb
add
mov
xchg
push
insl
out
xchg
ret
gs
mov
sbb
movsl
lds
adc
ret
sbb
int3
dec
rcl
xor
inc
js
test
xchg
mov
pusha
sbb
and
inc
pusha
mov
shrl
lea
sbb
lret
sub
xchg
xchg
scas
mov
pop
sub
js
shrb
xchg
push
movl
mov
sbb
jl
jne
sub
pop
add
sub
pushf
cld
pop
fucomip
sbb
sahf
repnz
cmpb
cmp
pop
or
fcmove
sbb
iret
pop
in
cmp
push
push
in
cwtl
int
push
call
into
pop
jns
bound
adc
xor
pop
jbe
xchg
fisttpll
stos
test
mov
add
fists
mov
je
mov
loop
dec
push
adc
mov
je
cld
aaa
out
clc
mov
sbb
mov
lcall
xorb
xor
leave
cmp
pop
in
rcll
add
stc
mov
inc
fs
lcall
and
iret
inc
mov
pop
daa
sbb
faddl
cmpsl
jg
or
test
pop
ret
sbb
push
pop
inc
or
sub
adc
mov
scas
out
xchg
stos
mov
repz
fcomps
jl
in
cmp
xor
sbb
aas
xchg
jae
xchg
cwtl
test
adc
xlat
mov
jmp
test
dec
mov
loopne
decl
push
int3
sahf
mov
inc
jns
outsl
lds
xchg
xchg
pop
and
mov
and
cmpsb
sbb
cmp
pop
in
adc
int3
push
out
test
pusha
sbb
jne
rclb
and
sbb
mov
test
jnp
repnz
push
out
int3
pop
dec
mov
pop
out
int3
pop
popl
mov
mov
push
scas
daa
fistps
fdivl
clc
addb
movsl
rcl
in
outsb
lods
hlt
mov
imul
jnp
ja
and
mov
xchg
and
imul
mov
popa
stc
pusha
mov
adc
dec
fwait
mov
sub
icebp
sbb
push
sbb
test
adc
xlat
insl
add
cmpsl
sbb
ds
cltd
add
pop
lret
and
jg
fisubs
test
inc
mov
inc
dec
xlat
push
push
addr16
jmp
xor
or
cmp
test
sti
arpl
insb
dec
or
mov
cmpsl
xchg
mov
dec
addb
addl
add
xchg
or
jp
out
jne
es
jg
push
xor
or
bound
ljmp
dec
push
add
and
out
stos
xor
mov
call
sbb
shlb
and
jg
andb
test
pop
push
fsubr
rclb
test
add
loope
lahf
cmp
mov
xchg
dec
js
xchg
rcr
popa
xchg
dec
mov
add
push
mov
push
test
adc
fdiv
roll
add
sub
mov
mov
in
mov
sub
loop
fisubs
jmp
aaa
dec
int3
ja
xchg
push
loope
and
dec
imul
fstps
test
jmp
xchg
bound
push
adc
loop
fisttpll
or
pop
in
xchg
cmp
inc
mov
jnp
faddl
inc
stos
test
push
cld
testl
cmp
cmpsl
into
add
das
out
int
mov
cmp
testl
sub
orb
mov
jo
xor
adc
mov
out
cli
mov
xchg
sbb
inc
sbb
pop
or
cmc
push
pop
adc
rcrb
fcmovnbe
xor
adc
dec
sub
dec
mov
adc
and
cmpsb
enter
jl
test
mov
mov
pushf
cmp
xchg
sbb
gs
or
and
faddp
mov
inc
adc
mov
pop
sar
xchg
in
pusha
xor
push
cmp
xchg
or
adc
lahf
push
xchg
mov
jns
ret
fs
push
pop
dec
out
cli
mov
mov
ds
out
xor
push
mov
movsl
ss
js
or
shlb
sbb
sbb
push
and
jge
ret
sub
mov
xchg
mov
jge
ss
mov
mov
sbb
insb
push
add
dec
jmp
sub
rep
insb
ss
xor
flds
xchg
or
inc
enter
sbb
cmp
push
xchg
cs
rcl
subb
mov
xchg
mov
push
push
inc
cmp
or
jno
xchg
es
and
push
push
push
or
mov
je
sbb
xchg
sbb
lcall
jns
adc
sub
push
test
jge
js
loope
xchg
rolb
clc
gs
mov
orb
ljmp
cld
xchg
cmp
ret
loope
dec
pop
scas
xchg
jne
pushf
inc
shlb
andl
push
outsb
jmp
xor
leave
jmp
or
in
mulb
test
outsl
xchg
sbb
xchg
call
imul
dec
pop
inc
xchg
mov
pop
ja
and
sub
or
test
cs
std
out
jb
je
mov
int3
movsl
pop
mov
mov
inc
inc
sub
mov
dec
cmp
sarb
pop
std
movsb
jbe
rorb
in
rcr
cmp
adc
mov
movsb
cli
rcrl
sub
insl
es
dec
mov
and
dec
mov
add
fnstenv
inc
clc
daa
daa
mov
popf
fsubrl
dec
cmc
xchg
nop
adc
xchg
fsubs
popa
pusha
dec
in
addr16
bound
mov
push
or
mov
outsl
lods
test
cli
push
imul
nop
or
test
cmp
cld
jb
sbb
lret
adc
xchg
or
scas
out
std
fdivs
mov
sbb
clc
jns
leave
rcrb
icebp
sbb
test
rcrb
add
cmp
lock
lahf
mov
incb
jmp
movsb
add
fcoml
jp
popf
dec
nop
aad
aas
mov
movsb
xchg
xchg
add
lods
movsl
inc
sub
insl
dec
pop
mov
popf
jmp
add
xor
adc
clc
xchg
out
mov
aaa
mov
xchg
or
lods
push
pushf
je
mov
inc
jp
xor
adc
pop
mov
cmp
xchg
fiaddl
loope
jg
pusha
bound
dec
or
xchg
out
jmp
add
fidivs
sbb
sub
fmuls
push
test
outsl
push
and
xor
test
lahf
push
sbbb
adc
fisttpl
mov
ss
pop
mov
mov
imul
cld
sarl
in
xchg
inc
arpl
sub
cmp
xlat
sub
mov
ror
out
repnz
push
sbb
testl
out
inc
jge
test
mull
es
xchg
loope
mov
cmpsl
cmpl
je
data16
andb
mov
mov
je
push
cmp
or
std
cmpsb
movsl
in
xchg
cld
and
loopne
mov
jnp,pt
add
mov
mov
roll
popf
sub
sbb
dec
sub
mov
stos
shlb
push
outsb
sub
gs
cmovno
pop
xchg
inc
stc
add
leave
ret
mov
rcr
out
jo
push
jg
jmp
cmpsb
lods
ror
sbb
and
scas
repnz
inc
sbb
loopne
faddl
nop
insb
xchg
pop
cmp
cld
sbb
lahf
fs
push
mov
sbb
pop
leave
out
pop
pusha
stc
repnz
xchg
xchg
jg
stc
movntq
mov
sbb
add
cmp
and
sub
in
mov
ficoms
xor
cmp
mov
movb
sbb
sbb
out
inc
nop
sub
lock
in
imul
fs
out
xchg
mov
add
test
loopne
imul
leave
stc
sub
pop
xchg
xchg
popa
enter
loop
mov
cmp
mov
ja
shrb
jno
negl
sub
int3
fstpt
test
jo
and
mov
leave
test
mov
pop
or
mov
into
pusha
push
cs
jae
outsl
aad
jns
movsb
loopne
ja
in
repz
push
mov
cmp
mov
test
imul
mov
or
test
nop
xor
addb
lcall
add
rclb
push
mov
sub
sbb
adc
jp
arpl
jnp
out
pusha
sbb
pusha
adc
inc
push
jp
xchg
lods
inc
into
cmp
mov
insb
das
jg
mov
cmovne
ds
pop
addr16
mov
jmp
test
es
cmp
mov
xor
fxch
push
add
jne
sbb
in
mov
mov
jmp
xchg
addb
cmp
mov
cmp
or
hlt
dec
cwtl
mov
mov
cs
aas
iret
mov
stc
ja
aaa
pop
push
jnp
ljmp
into
mov
cmpsl
dec
adc
push
pop
push
dec
test
pop
xor
insb
mov
sub
push
pop
mov
in
sti
pop
push
stos
pusha
mov
mov
push
aaa
iret
cli
dec
pavgw
out
xchg
ljmp
mov
xchg
sbb
fldenv
es
rep
xchg
xor
vmread
cli
std
addr16
lret
imul
sub
test
sahf
jns
ror
nop
mov
das
jnp
xchg
and
push
out
push
cmp
push
cwtl
xchg
ficompl
test
push
xchg
int3
out
mov
je
pop
cmpl
aam
out
pusha
aad
mov
lahf
push
fnstsw
mov
fildl
inc
adc
pop
into
xchg
cwtl
adc
loope
jbe
xchg
jnp
add
cmp
shl
in
cltd
icebp
push
sub
subl
mov
and
xchg
sub
lahf
test
cmp
test
mov
insl
xchg
shlb
clc
add
es
subb
sbb
loope
xor
mov
test
cmp
mov
push
mov
jg
xchg
add
jnp
jne
stc
push
inc
xor
sbb
ret
sub
inc
lret
and
dec
mov
jl
jmp
loop
and
ret
lahf
dec
imul
cld
mov
out
add
cmp
cli
push
jo
mov
dec
in
frstor
sarl
cmpsb
into
cmp
add
mov
xor
mov
icebp
lcall
cmp
inc
add
dec
stos
in
sub
insb
enter
lock
je
xchg
into
popa
movsb
icebp
mov
push
lods
and
lret
sbb
aad
fsubrl
imul
jp
adc
xchg
inc
push
jo
dec
xor
xchg
cli
in
fcompl
orb
lds
cmp
in
cld
shr
rolb
loope
jb
mov
bswap
mov
lret
adcl
test
testl
fs
lods
or
mov
arpl
pop
mov
sub
sbb
test
int
and
dec
mov
in
testb
test
inc
jbe
movsb
pop
and
adc
and
stc
or
xor
sub
xorb
mov
push
test
mov
daa
mov
mov
mov
imulb
sub
mov
data16
or
cmpsb
orb
sbb
cmp
push
cltd
pop
push
adc
and
sbb
mov
xchg
mov
inc
data16
mov
push
pushf
mov
cmp
in
ja
lods
mull
jbe,pn
sub
cmp
mov
icebp
not
or
or
rcrl
test
push
lds
jnp
xorl
adc
mov
xor
lods
and
add
mov
and
mov
movsb
int3
add
xchg
dec
sbb
cmp
shll
lods
mov
dec
mov
scas
xchg
aad
lcall
test
xor
and
repnz
mov
test
sbb
test
test
push
shlb
loop
mov
jg
in
repnz
mov
jmp
fisttpl
mull
pop
inc
int3
fcoml
dec
pop
leave
mov
xor
imul
cmp
jmp
jl
out
decl
push
push
pushf
cmp
mov
ret
rolb
sub
js
push
cmp
shlb
lds
xchg
insb
jmp
ret
and
dec
out
mov
dec
dec
or
in
jbe
enter
mov
ja
nop
insb
repz
xchg
rorb
cmc
ja
test
inc
jecxz
repnz
cmc
dec
pop
dec
pushf
in
cmpsb
mov
popa
mov
mov
shl
xor
mov
pop
jg
inc
jno
add
pop
nop
sub
jg
mov
test
pop
add
lea
pop
outsb
mov
push
pusha
push
dec
in
bound
cmp
sub
fxch
push
dec
test
mov
test
xchg
jbe
out
sub
dec
dec
mov
mov
dec
or
inc
aam
jmp
pushf
test
push
jle
jmp
cs
pop
das
xor
xchg
int3
je
mull
imul
mov
out
js
push
js
jbe
xchg
adc
push
sub
test
pop
jns
fwait
push
jle
xorb
arpl
fcompl
leave
mov
imul
mov
mov
pop
add
mov
xchg
test
xchg
sbb
cs
or
mov
out
pushf
dec
xchg
fs
pop
insb
cmp
outsl
adc
test
mov
sub
pop
mov
xchg
push
jne
es
stc
mov
insl
mov
cli
mov
jmp
sbb
mov
mov
das
sti
dec
sub
push
pusha
aam
xchg
sbb
rclb
sub
push
xor
sbb
mov
xlat
mov
in
popa
mov
cli
mov
jno
push
in
fisttps
testb
mov
mov
jno
in
shll
push
xchg
xchg
aam
push
mov
push
or
mov
inc
adc
add
imul
inc
xchg
xlat
rcll
pop
cmp
test
sub
ljmp
popf
pop
stc
dec
lods
or
jbe
inc
and
in
add
mov
fildl
into
sahf
mov
pop
int3
fcompl
ss
jo
push
test
inc
mov
xor
dec
mov
xchg
fidivrl
mov
into
sbb
shll
cmp
inc
clc
fwait
cmp
rcl
dec
add
dec
and
out
xor
pop
mov
push
push
mov
cmp
aas
sub
push
rorl
mov
outsb
enter
arpl
and
mov
cmp
sti
sbb
sub
pusha
into
out
int3
mov
xchg
adc
jg
std
jp
pop
sub
xor
arpl
cmp
daa
jecxz
data16
loope
das
rolb
or
sbb
nop
mov
cmpl
pop
cltd
sub
xchg
cmp
mov
lods
shl
test
repnz
sbb
iret
sbb
shl
or
sub
pop
cmp
test
jge
adc
mov
mov
fdivp
mov
fcmovne
out
out
jns
lods
nop
aas
mov
es
leave
stc
inc
ss
xorl
mov
xchg
test
jne
dec
or
repnz
cmp
adc
mov
pop
pop
xor
or
test
imul
cmp
add
int
add
mov
and
fstps
sub
xchg
insl
xchg
shlb
fisttpl
cmpsb
test
add
test
sub
cld
or
lea
xchg
cmp
test
pop
fsubrs
cmp
adc
jmp
push
mov
push
stc
shl
cmp
mov
mov
fnstenv
mov
inc
cmp
xor
js
jnp
loop
std
ret
scas
int3
cmp
test
ljmp
cmp
leave
and
out
es
mov
stos
fimull
in
pushf
xor
andb
ja
inc
test
push
movsl
into
dec
and
cs
xchg
mov
add
test
inc
xor
jl
inc
sti
cmpsb
mov
mov
test
jb
or
inc
cmp
xor
fs
loope
aaa
inc
cmp
adc
decl
cmp
orb
inc
xchg
mov
xchg
orb
push
or
lcall
jge
and
jecxz
cmp
popa
cmp
mov
pop
in
pushf
pop
xor
inc
mov
outsl
daa
xchg
and
xlat
je
out
jle
fisttpl
outsb
sbb
sbb
ljmp
fisubrs
xor
movsb
mov
andl
inc
icebp
push
mov
bswap
mov
push
xor
daa
pop
leave
push
sub
int3
bound
and
dec
jne
mov
jge
cmp
ja
jne
mov
dec
andb
mov
cmp
mov
xchg
std
cmc
pop
cs
inc
les
ret
xor
lock
cmpsb
shrl
cltd
cmpl
out
insb
cmp
loop
nop
test
jnp
es
dec
cmp
shrl
pop
pop
int3
sahf
jecxz
xor
push
sarl
daa
xchg
data16
addl
jle
inc
das
enter
jb
test
nopl
rcll
inc
mov
mov
divb
inc
sub
push
cmpsb
sbb
and
inc
mov
rorb
push
or
test
push
xchg
addr16
jmp
or
xor
xchg
imul
ret
in
aam
and
dec
jmp
frstor
sub
xchg
push
mov
add
jbe
out
push
icebp
cli
sbb
inc
loopne
js
mov
mov
push
push
push
mov
adcb
sub
rorb
ret
cmpsb
inc
push
aas
add
push
mov
pop
sub
movsl
and
test
cs
movsl
add
xchg
and
mov
xor
sbb
icebp
mov
das
loopne
xlat
jns
or
loope
scas
xor
inc
adc
inc
cmp
imul
or
test
repnz
jb
inc
ja
jl
or
test
mov
sub
push
pop
sbb
ja
out
adc
cmpsl
std
and
nop
add
imul
loop
mov
pop
fisttps
gs
push
fistl
decl
dec
mov
out
int3
mov
inc
or
insb
inc
fwait
call
ds
lock
dec
sahf
inc
dec
dec
xchg
addb
fcmovne
mov
jge
xor
push
cmp
adc
pop
and
xchg
pop
add
fwait
popa
out
push
test
cmpb
dec
scas
lahf
cmp
mov
jns
int
fmulp
adc
xchg
mov
shrl
pop
cmp
mov
pop
jbe
add
cld
mov
and
sbb
push
jns
ja
xchg
and
or
push
jl
je
fwait
enterw
test
iret
inc
lahf
push
enter
cmp
sbb
ret
xchg
push
jnp
jbe
xor
arpl
mov
rcrb
stos
jb
mov
jb
or
test
xor
pop
xor
pop
addr16
push
cmpl
sbb
aad
xlat
mov
mov
push
fsubr
cmp
nop
es
out
add
or
xor
stos
loopne
dec
inc
cwtl
shrb
xor
and
out
inc
mov
in
pusha
push
jg
orb
popa
adc
add
or
push
mov
stc
divb
push
xchg
lahf
dec
pop
aam
xor
sub
into
pop
push
pop
test
jle
and
adc
cmpsl
push
dec
xchg
out
cmpsb
fs
push
arpl
loop
sbb
dec
or
loope
pop
or
sbb
inc
fisubrs
adc
xor
cli
scas
movsb
inc
outsb
sbb
clc
cmpsb
add
cmp
lods
mov
jp
xchg
cmp
push
dec
push
jns
data16
mov
scas
movsb
enter
xchg
scas
out
xchg
push
and
xor
mov
pop
enter
mov
mov
mov
stos
dec
aam
aaa
adc
fwait
les
aad
and
cmp
mov
loope
xchg
mov
cmp
rcr
dec
sbb
mov
jmp
fs
aam
loop
xchg
dec
fisubs
adc
ret
and
daa
lahf
test
mov
xchg
daa
mov
mov
test
xchg
imul
xor
aam
dec
and
gs
add
pop
in
icebp
inc
stc
loop
adc
loop
xchg
mov
sbb
and
adc
lcall
bound
aad
out
test
xchg
add
mov
and
mov
cli
pop
lods
fnstcw
lds
pop
int3
popa
or
xorl
add
iret
stc
sarl
movsl
pop
das
ss
aas
jl
repnz
cld
loopne
inc
pop
xchg
or
stc
mov
test
cmp
jne
dec
push
fidivrl
or
mov
sbb
cmp
or
enter
jg
push
out
xchg
rcl
cs
test
pop
mov
push
xchg
clc
jmp
in
inc
or
cmp
xor
mov
xchg
test
addr16
test
negl
mov
and
loope
mov
into
inc
enter
mov
or
mov
jg
mov
sarb
add
mov
xchg
xlat
cmp
sbb
sub
xor
jnp
pop
mov
lret
pop
pop
fdivrp
out
cld
pop
sub
cmp
sbb
xchg
xchg
mov
out
test
cmp
mov
imul
ja
lock
ja
bound
sub
fidivl
and
xor
js
xor
cld
push
cs
lods
add
and
les
xchg
ds
loopne
push
adc
js
stc
arpl
int3
ja
loope
test
out
int3
aaa
mov
test
sub
cmp
xlat
rcll
dec
pop
popa
sbb
inc
les
testb
pop
or
loop
int
xchg
fnstenv
xorl
mov
xchg
and
mov
test
xor
and
fidivs
dec
mov
mov
lods
pushf
andl
inc
in
push
pop
cmp
mov
in
cmpsl
jp
adc
inc
jo
cmp
rep
xchg
fyl2xp1
idiv
rcll
je
ja
scas
div
mov
ja
pop
or
gs
iret
imul
push
mov
test
pop
mov
mov
std
jmp
pop
mov
xor
xor
imul
insb
cwtl
arpl
xchg
and
mov
stos
test
xor
cmpsl
std
sbb
scas
dec
and
jns
out
stos
push
sbb
and
jae
ret
mov
fcomp
mov
xor
insl
mov
test
inc
clc
test
or
or
mov
repnz
lods
inc
mov
int
loope
jl,pn
repnz
push
leave
xchg
ja
cmc
int3
sbb
and
aaa
iret
xor
and
scas
fs
add
and
xchg
and
movsb
pusha
subb
add
shr
adc
jge
mov
inc
mov
xchg
clc
cmp
push
push
push
jl
sbb
inc
ss
adc
pop
clc
rcrb
mov
mov
sbb
jge
loop
pushf
loope
pop
outsb
mov
ja
lods
sbb
in
jecxz
je
adc
cmp
push
pop
divb
insb
xchg
push
outsl
js
add
mov
xor
nop
dec
ja
cmc
lds
and
sbb
cmp
fwait
lods
add
into
push
movsl
les
orl
es
pop
in
xchg
mov
inc
cs
iret
pusha
nop
inc
lret
pop
mov
movsl
psubsw
cmp
shlb
jecxz
mov
dec
lret
jmp
pusha
nop
or
outsl
out
add
push
jg
xchg
subb
pop
inc
cli
out
into
jbe
call
pop
mov
fs
mov
xchg
adc
pop
pop
js
sub
cmpl
xchg
cmp
pop
pop
mov
dec
jle
adc
mov
leave
dec
sahf
mov
adc
and
and
and
xor
das
xchg
test
or
cltd
cmc
mov
lcall
cmp
mov
imul
subb
mov
xchg
out
pop
push
int3
and
repz
push
xchg
cmpsb
push
mov
icebp
xorl
fiaddl
out
call
xchg
cmpb
lods
mov
add
dec
sbb
jbe
into
cmc
in
mov
xchg
cmpsl
aam
inc
lea
stc
insb
test
add
test
inc
xor
stc
je
and
pop
cmp
lods
ret
cmpsb
hlt
dec
repnz
mov
out
cld
inc
addr16
mulb
out
in
or
fidivl
jecxz
adc
dec
out
and
mov
enter
sbb
fstps
inc
jg
lret
inc
cmp
lods
stos
inc
cmc
and
pusha
icebp
jb
mov
inc
or
sub
adc
addr16
mov
out
in
je
sbb
or
mov
pop
icebp
js
dec
int
xor
or
shlb
add
aas
ja
and
jmp
inc
push
dec
mov
in
pop
bnd
mov
scas
stc
cmp
aaa
out
dec
sub
sub
xor
push
dec
push
sub
inc
mov
or
dec
adc
mov
cmp
and
cld
loopne
pop
outsb
push
pop
test
int
loop
mov
xchg
mov
inc
jnp
sahf
adc
push
sbb
in
pop
inc
jnp
cmp
scas
ucomiss
loope
push
cmp
fildl
out
jbe
ret
jl
imul
sarl
std
loope
rolb
pop
lea
cmpl
rol
dec
sbb
cmp
js
mov
sbb
xchg
pop
jl
dec
push
ror
loopne
lcall
in
add
jae
push
test
loopne
xchg
xchg
push
xchg
fistpl
test
fdivl
xchg
das
mull
lods
mov
pusha
loop
lds
cmp
sbb
cld
mov
jge
mov
sbb
jno
loopne
int3
out
nop
aaa
mov
xchg
flds
xor
and
call
cmp
addr16
cwtl
xor
mov
xchg
bound
popf
dec
and
aad
push
roll
mov
dec
rorb
insb
adc
es
lods
ja
and
frstor
cmpl
or
in
push
adc
xchg
ljmp
inc
js
dec
jle
test
test
pop
pop
xor
xor
mov
cltd
xchg
mov
cltd
mov
lahf
sbb
loope
stos
xor
imul
jl
xorb
xor
sub
pop
insw
adc
jp
inc
rcl
fwait
pop
xor
xor
gs
mov
cmp
add
in
add
cmp
popf
pusha
push
mov
add
pop
in
dec
mov
pop
fnstsw
mov
jge
movsl
test
ss
enter
std
dec
test
roll
daa
shlb
or
jge
imul
sub
push
in
loop
sbb
repnz
mov
insb
xor
add
or
add
test
add
dec
mov
or
jne
or
lcall
repnz
push
or
sbb
adc
leave
fwait
pusha
subb
push
push
and
jae
fistpll
jno
in
loope
adc
lret
mov
shrb
loope
pop
cmp
dec
leave
fildl
sti
pushf
adc
adc
adc
paddsb
sbb
out
dec
sub
loopne
mov
fsts
movsl
ds
test
movsl
repnz
in
pushl
pop
fmul
cmp
mov
dec
mov
sub
cwtl
pop
aam
add
sub
cmp
mov
aaa
xlat
fmulp
int3
or
cmp
cwtl
sub
test
add
mov
rcl
cmpb
inc
es
inc
inc
xor
cmc
jmp
cmp
pop
shr
in
cs
cld
pop
repz
xchg
mov
fidivrs
xchg
mov
std
stc
outsb
cld
jge
inc
and
syscall
add
xchg
clc
mov
gs
lods
sbb
pop
lds
gs
xchg
jl
aaa
std
add
cs
addr16
mov
jp
int3
mov
dec
pop
shl
cmp
mov
xchg
dec
shl
test
cltd
mov
and
je
mov
mov
cs
gs
sbb
leave
aam
in
pop
xchg
jnp
mov
pop
cmpsl
fdivrs
lds
jnp
sub
cmp
and
and
pop
mov
test
scas
sub
pop
out
insb
sbb
sbb
pusha
mov
cmpl
mov
add
jecxz
mov
int3
jl
mov
ljmp
jnp
mov
cmpsl
shrb
dec
xchg
jbe
add
cltd
test
mov
adc
in
movsl
sti
cmp
ret
jmp
cld
call
test
mov
push
mov
stos
jg
sahf
in
bnd
cmp
inc
mov
mov
push
pop
xor
pop
shr
cmp
pop
or
ljmp
test
sub
imul
xor
sarb
mov
fwait
bound
push
fcompl
mov
pop
shll
sbb
inc
mov
mov
mov
inc
sbb
test
cs
cmp
add
inc
pop
fidivs
inc
and
xorl
jmp
inc
jg
inc
test
popa
or
das
sub
xchg
or
add
mov
loopne
mov
and
pop
xchg
fsubrl
in
shlb
ficoml
inc
xchg
cmpb
add
mov
dec
cmc
push
loop
add
in
xchg
nop
mov
mov
sub
or
rcrb
jl
mov
adc
clc
out
xchg
mul
not
xchg
gs
jge
dec
or
adc
push
cmpb
sub
fistps
pop
adc
xchg
rorl
mov
and
xchg
sub
mov
or
or
adc
push
movsb
sbb
xchg
not
cmpsl
mov
push
sahf
cmp
daa
fistps
jno
test
cmp
dec
sbb
in
lret
popa
enter
jecxz
sbb
cmpsb
js
and
push
jnp
fwait
fs
add
mov
shrl
insb
fildll
test
arpl
mov
jg
mull
shrl
xchg
pop
out
das
imul
dec
mov
mov
xchg
jle
push
pop
call
les
pop
adc
dec
pop
shrb
int3
sti
dec
adc
fnstcw
adc
xchg
outsb
stos
or
fs
jg
xor
jnp
cmp
xor
xor
out
jo
sbb
lds
fnsave
sbb
push
xor
cmp
add
mov
cltd
and
lds
bound
xchg
scas
sahf
push
inc
push
mulb
pop
mov
cmp
arpl
xchg
and
mov
js
aam
in
push
iret
stos
je
iret
cmp
jnp
addps
add
mov
loop
mov
cmp
mov
in
xchg
test
cmp
fldl2t
mov
xor
xchg
mov
jp
icebp
cli
push
sub
jae
jg
jg
in
stc
repz
test
dec
jo
mov
inc
popa
mov
or
jmp
inc
rolb
or
mov
pusha
or
xchg
mov
aas
fiaddl
mov
push
test
imul
dec
jnp
sub
or
sahf
dec
push
cltd
in
jno
jnp
dec
lahf
xchg
adc
sahf
cli
sbb
lcall
pop
mov
in
test
cmpb
sti
loope
leave
xor
adc
repz
cmp
stos
cmp
fnstcw
mov
cmp
sub
or
and
andl
fiadds
or
ja
cld
cs
lahf
sub
push
mov
in
dec
mov
int
stc
pop
arpl
adc
push
ror
mov
dec
jne
adc
dec
test
push
loop
jl
adc
ja
jmp
mov
and
lea
mov
adc
sbb
inc
jle
pop
xchg
mov
insb
in
aad
push
sarl
out
leave
in
cmp
test
jge
mov
data16
clc
xchg
movsb
mov
cwtl
xchg
or
popa
sbb
and
xchg
pop
cmp
push
mov
xor
es
xorb
and
xchg
push
mov
into
mov
psubsb
das
sbb
test
addr16
bound
sahf
add
loop
pop
push
test
adc
jecxz
rcll
mov
mov
sbb
loop
pop
pop
ja
stos
sbb
call
aas
mov
and
jno
xchg
push
cmp
pop
std
mov
jle
js
or
inc
pop
fiaddl
xor
mov
imul
mov
mov
shlb
sbb
jl
push
mov
mov
xchg
mov
add
sbb
sti
fwait
cmp
gs
and
xchg
sbb
jecxz
sti
and
pop
mov
push
pop
xchg
jnp
test
pop
das
sub
aad
pop
idivl
jge
ja
dec
fbstp
bound
cmpb
push
fsubp
lea
lret
pop
mov
add
out
pop
push
sub
out
stos
fs
jo
jp
sbb
fistpl
addr16
add
jl
push
mov
lds
add
repz
pop
push
repz
gs
mov
xor
ret
pushf
fidivs
mov
int3
loop
sti
xchg
cmpb
test
gs
arpl
xor
push
xor
sub
jg
loopne
and
out
imul
fwait
popa
fildl
test
inc
sti
fists
lret
enter
xchg
es
adc
or
aad
add
mov
pop
cmp
test
dec
xor
mov
pop
and
pop
add
dec
xorl
add
jmp
icebp
sbb
es
cmp
rorb
jnp
mov
xchg
stc
scas
sbb
sahf
lods
data16
loopne
xor
fisttps
out
jnp
sbb
xor
in
push
xchg
adc
adc
pop
mov
sbb
stc
test
shlb
xchg
add
nop
push
sbb
pop
enter
dec
mov
sub
test
lods
xchg
aas
dec
int
addl
jnp
idivl
mov
repz
push
and
add
pop
adc
cmp
jl
xchg
mov
popa
push
mov
repz
test
jmp
divl
cmpsb
mov
jg
push
insb
adc
dec
jb
int3
sbb
and
inc
imul
popa
sub
push
mov
lea
push
inc
dec
cli
mov
cmc
dec
xor
mov
xchg
mov
into
ret
jnp
loopne
or
dec
repnz
or
mov
jge
sbb
seto
mov
sahf
sbb
lea
jmp
cmp
repz
inc
fstpt
aad
pop
daa
outsl
push
xor
mov
out
inc
aam
repnz
rclb
jmp
in
sub
lret
aaa
mov
xchg
mov
insl
push
in
push
mov
add
insb
pop
popa
cli
psubb
ret
dec
int3
xchg
push
fiaddl
sub
xchg
jge
popa
inc
mov
cmp
inc
lds
test
dec
mov
add
arpl
cmpsb
lods
mov
push
ss
xchg
jg
in
dec
loop
xchg
in
subl
stos
mov
pop
cld
stc
mov
sarb
into
daa
mov
and
xchg
sti
mov
cs
stos
sbb
jg,pn
xchg
and
daa
shrl
or
lods
jl
loopne
push
ja
punpckldq
sub
lea
jg
test
jae
xchg
loopne
orb
sbb
lea
iret
addr16
and
test
test
fs
mov
xchg
jl
loop
and
mov
dec
les
mov
cmpsb
sub
dec
inc
and
test
fwait
dec
mov
add
add
inc
decb
push
inc
sbb
inc
imul
sbb
shrb
repz
or
in
and
cmpsb
or
popf
lods
xchg
push
sti
xlat
pop
jns
jp
sbb
xor
repnz
sbb
push
jns
xchg
pandn
pushf
jne
jle
cmp
popl
sbb
divb
call
lret
sbb
mov
pop
mov
and
inc
ljmp
paddq
push
xor
xor
aaa
test
test
sbb
fldl2t
int3
xchg
mov
popa
sub
pop
leave
orb
adcb
sub
movsl
cmp
imul
mov
outsb
out
mov
xchg
add
mov
jmp
jecxz
clc
mov
pop
xchg
test
inc
push
stos
sbb
adc
push
loop
cltd
int3
push
pop
sbbl
iret
dec
je
iret
mov
cmovnp
jecxz
pop
mov
mov
mov
aaa
loop
lods
jp
fdiv
pop
xor
pop
sbb
clc
pop
add
dec
cmp
cmp
adc
movsb
sbb
sbb
imul
shlb
faddl
mull
cmpsb
jno
push
xchg
mov
adc
imul
sbb
or
cmc
mov
rorb
xor
dec
ljmp
gs
test
mov
cmp
xlat
dec
xorb
push
add
insb
leave
jmp
add
lcall
clc
stc
cmp
rcrl
mov
cltd
xor
pop
sahf
sti
divb
mov
js
mov
xchg
ret
inc
lods
pusha
mov
pop
and
dec
push
inc
cmp
mov
aas
repnz
gs
jge
or
mov
gs
sub
pop
sbb
mov
push
sbb
stc
sti
mov
xchg
mov
mov
sub
sbb
add
pop
pushf
xchg
xor
mov
adc
mov
clc
push
mov
mov
adc
push
cmp
adc
or
andb
faddl
push
stos
jg
push
push
cwtl
and
sbb
orb
cmp
arpl
icebp
jge
aas
push
xchg
sub
popa
jo
mov
cs
lods
mov
and
sbb
xchg
jg
ficoml
in
adc
fildll
test
mov
xchg
icebp
xchg
dec
sub
incb
data16
test
cmp
fadd
inc
mov
lods
or
fs
bt
sub
lea
pop
jnp
mov
xchg
push
xchg
cmpsl
loop
cltd
inc
push
jbe
sbb
mov
jae
fdivrp
pop
pop
fsts
mov
jle
fistpl
inc
cwtl
mov
movsb
add
mov
xchg
push
and
orb
jns
inc
mov
in
movsb
jae
idivb
adc
clc
mov
cmp
or
fldl
rcrb
xor
push
jnp
add
mov
jns
xchg
subb
inc
fstpt
enter
add
es
xor
mov
test
push
xchg
cmpl
xchg
jns
les
and
aas
imul
in
std
xchg
and
or
sti
xor
xchg
xor
lds
xchg
int
idivb
add
rolb
orb
or
pop
pop
insl
cs
ja
mov
or
aas
jg
scas
push
int
inc
jg
test
cmp
test
mov
aas
pop
inc
xchg
mov
sbb
cmp
in
push
js
mov
jo
pushf
fs
test
xor
or
inc
je
mov
int
cld
xchg
fwait
lret
cmp
mov
and
dec
repz
std
mov
mov
push
pop
ja
rorb
or
out
in
push
sub
es
std
mov
clc
fcomp
roll
jl
mov
int3
and
inc
into
test
in
mov
pop
cmp
xchg
inc
ds
xchg
clc
sbb
loope
jnp
shrl
xor
test
lods
es
cmp
sbb
arpl
sbb
add
inc
pop
and
ja
decb
jmp
sub
jns
jge
mov
test
loopne
test
mov
xchg
mov
push
add
mov
mov
add
mov
hlt
mov
xchg
xor
subl
imul
lods
or
push
test
sti
inc
fisubrs
outsl
test
inc
mov
cmp
inc
jg
fsts
test
jle
pop
lock
imul
stc
clc
dec
or
test
jae
mov
jl
sbb
scas
jns
outsl
push
jae
xchg
leave
aaa
leave
cmp
cmpsl
cmc
loopne
mov
xchg
xor
add
jmp
jno
adc
aas
xchg
lock
add
and
imul
fdivrp
dec
jge
xchg
xchg
int3
cltd
ret
test
jnp
xchg
out
hlt
sub
lods
dec
inc
scas
and
scas
imul
mov
sub
pusha
leave
jno
scas
cmp
sar
add
pop
test
scas
pop
sbb
sub
iret
dec
inc
cmpsb
adc
sti
jmp
add
xchg
out
repnz
add
stos
or
pop
cmpsl
cltd
push
xchg
sub
jbe
xchg
mov
pop
data16
arpl
loope
nop
mov
les
and
fsubrs
popa
subb
mov
inc
adcb
mov
loopne
cmp
xor
rol
sbb
mov
and
cmp
cmp
cld
pop
out
lea
add
inc
gs
xchg
push
add
add
mov
jno
into
std
xor
das
ljmp
sbb
cmp
int3
push
lods
jo
data16
cmp
out
fwait
ss
cs
pop
xlat
inc
mov
icebp
inc
arpl
popa
dec
cltd
xlat
dec
add
add
fcompl
cs
push
rolb
gs
data16
ja
test
cmp
xchg
cltd
in
bound
pop
mov
cmpsl
mov
mov
es
xorl
sbb
hlt
or
push
sub
movsb
shll
sbb
sbb
inc
mov
xor
cmp
xchg
es
xor
out
mov
push
sbb
aas
mov
inc
sbb
test
mov
sahf
and
aaa
popf
packssdw
xor
rcr
xor
cs
sarb
add
or
xlat
iret
movups
mov
cmpsl
out
daa
cmp
pop
xchg
inc
mov
bound
sub
xchg
add
sub
pop
pushf
cmp
mov
mov
and
dec
faddl
xchg
xchg
sbb
repnz
and
test
mov
pcmpgtw
cmp
jmp
inc
lock
mov
sbb
jae
out
or
cmp
es
adc
mov
cltd
leavew
mov
dec
mov
mov
xchg
clc
adc
std
sub
and
mov
imul
test
out
xorb
inc
jge
ja,pn
inc
adc
shr
sbb
xor
inc
adc
arpl
lock
ljmp
pop
negb
dec
cmp
mov
and
lds
inc
mov
jnp
sbb
dec
mov
pop
add
rcll
in
dec
imull
jl
mov
mov
cmp
and
dec
and
out
mov
dec
mov
inc
enter
pop
movsl
cmp
ja
fcmove
mov
nop
sub
mov
mov
je
xlat
ret
inc
aam
and
neg
dec
ds
pusha
lea
xchg
sbb
rcrb
rcrl
cmpsb
pop
xchg
jnp
mov
scas
and
daa
arpl
jmp
adcl
dec
es
xor
sub
dec
dec
cwtl
inc
outsl
add
cmp
cmp
popa
mov
and
pusha
push
sbb
xchg
or
rcll
inc
mov
lahf
push
xchg
mov
inc
ficoms
xchg
pop
out
mov
pushf
ja
es
insb
loop
dec
das
dec
andps
das
mov
cmp
push
dec
call
addr16
je
rcll
pop
test
sarl
js
leave
jecxz
scas
jmp
mov
repz
xor
add
mov
fidivrs
and
mov
xor
mov
rcll
lcall
pusha
pusha
xor
xchg
movsb
xchg
sub
mov
sbb
or
aas
cmp
xchg
test
pusha
jns
in
add
stos
loopne
repnz
pop
dec
pop
cmp
push
ds
and
js
int
or
pop
adc
jne
pop
add
sbbb
mov
lock
aas
xor
pop
pop
cmp
fildl
mov
out
dec
js
into
adcb
ficoml
xchg
lret
dec
cmp
cmp
js
inc
lods
bound
mov
divb
or
pushl
int3
adc
out
out
push
xchg
cs
aam
in
lock
test
jmp
ss
cmp
mov
mov
and
dec
loop
aad
cmp
test
fsubl
test
push
cmp
sub
mov
xor
out
xor
mov
mov
pop
in
jl
mov
mov
icebp
pop
cli
addb
test
jle
cmp
push
mov
out
imul
in
test
jmp
mov
cmp
xchg
pop
daa
rclb
lods
in
dec
das
or
push
adc
cmp
sbb
aaa
xchg
mov
mov
adc
jp
popf
jl
or
push
inc
cmp
test
js
pop
sbb
popl
inc
in
cmp
mov
fsubr
inc
bound
mov
bsr
lret
movsl
sbb
in
pusha
lock
and
or
leave
push
dec
inc
popa
pop
add
and
imulb
repz
cmp
sbb
stos
xchg
mov
inc
daa
das
sbb
xchg
xchg
sbb
push
xchg
mov
cs
aam
in
bound
jecxz
mov
dec
sti
test
cmc
jmp
mov
cmp
pop
into
add
sbb
pop
jge
data16
enter
fimuls
sbb
lret
fsubl
xchg
cmp
pop
mov
test
fisttpll
sahf
data16
add
lahf
push
fsubs
lods
jg
bnd
xor
lahf
xchg
push
xor
out
repnz
dec
or
xchg
push
out
mov
gs
popf
xlat
push
jle
inc
adc
popa
dec
fwait
pop
leave
test
mov
add
enter
lods
push
scas
and
stos
popa
adc
sbb
test
xor
cld
jae
js
sti
rcrl
push
iret
out
ds
fcom
sti
push
jmp
inc
xor
add
inc
testb
cmp
mov
add
xchg
xchg
mov
rolb
jb
xor
jl
movsl
lahf
loop
pop
add
mov
pushf
xchg
adc
jmp
inc
mov
sbb
dec
mov
iret
loope
sahf
push
hlt
call
mov
xchg
test
pop
ljmp
int
mov
mov
adc
pushf
out
sbb
insb
mov
cmp
dec
or
fmuls
pushf
std
sbbl
xor
dec
dec
push
cmp
hlt
add
dec
sub
out
test
pop
std
xchg
popa
rolb
scas
mov
ljmp
add
jg
sub
or
test
movl
pop
mov
and
leave
mov
in
ret
xchg
dec
iret
jge
sub
adc
or
pop
rolb
pop
cld
lds
xor
mov
cmp
out
sub
shlb
nop
push
lds
adc
xor
insl
cltd
stc
push
xchg
xchg
ja
xor
push
inc
mov
rolb
xchg
add
ret
jl
insl
in
out
sub
ds
sahf
jb
push
cmp
jnp
jmp
mov
in
mov
test
bnd
mul
lods
xor
cmp
ret
dec
neg
pushl
fdivrl
jns
xor
adc
or
cmp
das
cli
xchg
xor
out
dec
add
mov
sub
and
aaa
imul
btc
ja
mov
cmpsb
mov
arpl
push
mov
iret
xchg
inc
aaa
stos
push
pop
rcll
ret
cmp
xchg
inc
cwtl
push
inc
inc
adc
xrelease
call
andb
out
lods
add
rol
cmpsl
sbb
mov
pop
daa
xor
leave
cmp
xchg
les
add
cmp
lea
or
push
mov
lods
incb
fdivp
dec
ret
in
pusha
mov
loopne
mov
xor
mov
xor
push
add
dec
test
mov
enter
ja
cmp
jnp
cld
push
pop
xchg
scas
repz
insb
mov
jnp
je
xchg
jns
cli
push
je
fmuls
idiv
arpl
xchg
mov
jge
repnz
clc
add
push
push
test
push
sub
xor
inc
inc
enter
or
int3
pushf
xor
fs
push
mov
or
outsb
add
test
shlb
cmp
mov
pop
xor
pop
aas
adc
repnz
mov
xor
shrb
mov
jae
dec
xor
les
cmp
or
out
std
sbb
adc
cs
in
pop
mov
cmc
dec
out
data16
test
push
jnp
jo
xchg
in
shll
sbb
out
sarb
imul
mov
pop
movsl
shrb
arpl
xor
jmp
sahf
fs
lods
lods
fldt
inc
ficoml
add
jns
push
jg
xchg
iret
jns
stos
test
repnz
je
xchg
cmp
outsl
pop
test
aas
shll
cmpsl
add
sub
test
pushl
stos
push
sbb
sbbb
xchg
dec
mov
mov
pop
push
add
mov
sbb
in
sub
or
or
jl
fs
sarb
sbb
ja
insb
stc
lret
cltd
out
inc
cmp
test
pop
in
jnp
into
ret
xchg
cmp
ror
mov
push
lds
lahf
lret
add
mov
or
or
mov
bound
insl
das
lahf
aaa
mov
in
sbb
sbb
xor
lods
movsl
stos
pop
mov
sub
test
divb
pushf
popa
sti
jmp
pop
test
aad
inc
inc
and
mov
rol
inc
in
mov
mov
nop
fistpl
or
int3
sbb
nop
fmull
push
lret
lods
and
mov
xchg
in
mov
add
push
lcall
or
lcall
add
outsl
mov
jge
cli
add
pop
aas
or
mov
pusha
aam
shl
jl
lods
lock
insl
xchg
rcl
dec
sub
sub
mov
not
insb
xlat
and
pop
inc
and
xchg
adc
mov
in
imul
addb
cmp
movsl
lds
jl
push
jae
sbb
cmp
ja
xchg
shrb
sbb
stc
push
mov
js
xchg
roll
lea
aam
xchg
fsubrs
jl
pop
cli
mov
xchg
mov
fwait
int3
or
mov
jns
dec
out
xchg
mov
dec
xor
mov
aaa
nop
bound
jle
lcall
mov
cmpsb
adc
lds
negb
popa
lret
ljmp
cmp
jmp
repnz
xchg
mov
fcoms
sub
movsl
jns
outsb
mov
cmp
lods
mov
hlt
jae
mov
xchg
jmp
xchg
cmp
movsb
fldl
das
adc
scas
fsubs
xchg
cmp
mov
in
pop
ds
lret
sub
inc
in
test
dec
fadds
lods
jp
jo
mov
sub
cmp
into
cli
dec
push
sbb
pop
sub
daa
mov
dec
mov
xchg
aam
push
pop
xor
stc
shlb
xchg
arpl
frstor
lock
xor
mov
rcrl
cmp
adc
decb
js
in
scas
mov
out
xor
leave
pop
dec
lret
gs
adc
push
inc
mov
push
inc
insb
or
test
cs
lcall
clc
loope
xchg
pop
loopne
inc
jmp
adc
push
dec
pop
test
pop
subb
test
cmpb
lret
inc
shrb
test
popa
hlt
jns
mov
insb
and
subl
cltd
push
fstl
xchg
mov
pop
add
test
pusha
xor
fiadds
js
test
leave
and
jbe
xchg
xchg
pusha
dec
add
ja
and
mov
out
jmp
imul
repz
pop
jbe
es
jnp
mov
aad
aad
out
pop
mov
cmp
cmp
xor
es
push
and
push
mov
push
into
fwait
das
sub
jp
insb
jnp
dec
push
cld
jle
in
aad
mov
mov
add
cmp
pushf
loop
rolb
mov
iret
pop
mov
push
mov
mov
jmp
cmc
sbb
out
outsl
nop
add
mov
idivb
popf
inc
outsl
roll
xor
ds
ja
hlt
xchg
shl
sbb
movsl
rcll
and
das
mov
cmp
mov
jl
loopne
jmp
mov
and
popf
jb
dec
xchg
mov
push
outsl
add
add
stc
or
add
addr16
cmp
mov
jmp
stc
mov
xorl
or
mov
pop
xchg
sbb
addr16
jge
fildl
cld
mov
inc
iret
sub
in
js
xchg
scas
xchg
punpcklbw
aaa
test
sahf
sbb
push
aaa
mov
xor
inc
push
sbb
jle
in
and
and
mov
movsl
sub
and
sub
fwait
inc
mov
cmpb
push
mov
insl
stos
and
lcall
sbb
dec
lds
mov
xchg
dec
repnz
mov
add
stos
out
daa
movsb
mov
add
and
ljmp
rorl
inc
push
push
push
xchg
jmp
add
out
les
push
inc
lds
mov
std
xchg
xchg
rcrb
cltd
shl
dec
pop
leave
arpl
cltd
sbb
adc
ret
mov
sbb
dec
mov
test
xor
rorb
ljmp
cmp
sbb
dec
inc
into
pushf
das
daa
aad
push
outsb
cs
cmp
ja
cmp
inc
dec
mov
repnz
repz
test
rclb
dec
pop
mulb
or
insl
mov
in
xor
lea
mov
cmp
mov
cwtl
push
into
aas
sbb
mov
xor
test
fisttps
xor
adcb
jmp
lock
int
and
fisubrl
out
xchg
mov
cmp
jge
cs
imul
mov
fucomi
xor
mov
mov
push
xchg
xlat
outsl
and
and
cmpsl
das
mov
stc
xchg
pushf
push
aaa
cmp
icebp
pop
outsl
sbbb
out
or
call
xchg
jmp
adcl
ret
in
out
mov
cmp
and
cmpsl
sbb
push
insb
or
or
insl
cmp
int
xchg
out
mov
add
pop
flds
add
push
inc
pop
cmp
loope
dec
cmp
cmp
add
cwtl
sub
test
lret
mov
jmp
xor
xchg
mov
cmp
cmp
add
xchg
imul
mov
ss
cmp
cmp
adc
ja
popf
or
test
jns
pop
mov
in
or
cmp
movsl
ljmp
xor
faddl
mov
jb
cmp
fdivrl
imul
push
idiv
cmp
ficomps
rorl
test
dec
mov
dec
enter
xor
cmpsl
mov
lods
cwtl
sub
test
cs
jae
push
arpl
into
sbb
or
pusha
inc
lods
xchg
int3
ja
xor
jmp
inc
add
test
mov
mov
dec
pop
and
push
pop
test
or
icebp
decl
jle
mov
in
pusha
push
or
sbb
pop
aam
push
or
sbb
sarb
sbb
aas
movsb
aas
mov
ret
das
jmp
jb
cmpsb
push
jmp
popa
icebp
adc
xchg
ficoms
ljmp
sti
in
lea
xlat
xor
loopne
push
mov
mov
outsl
imul
cmp
push
sbb
xchg
stos
mov
adc
xchg
int3
aaa
mov
xchg
pop
jge
mov
inc
test
add
out
push
es
push
push
push
dec
or
mov
adc
out
dec
pusha
addr16
dec
jb
pop
jecxz
inc
xchg
xor
subb
xchg
hlt
subl
imul
inc
inc
mov
dec
cmpsl
xchg
mov
mov
jne
out
out
or
push
neg
enter
adc
cmp
mov
in
mov
divl
pop
lcall
xchg
stc
sub
adc
arpl
dec
sahf
cmp
fisubrs
and
cmp
dec
mov
xchg
sub
test
outsb
ljmp
lret
pop
sbb
and
loope
mov
xor
fs
mov
mov
dec
add
sahf
lret
jbe
cmp
sub
icebp
or
and
cltd
gs
out
fstp
fdivl
dec
in
jns
mov
dec
into
inc
popa
in
div
or
sub
hlt
imul
push
sahf
data16
or
jnp
in
mov
jo
add
arpl
mov
test
mov
rorb
sub
clc
inc
cwtl
subb
sbb
test
sub
icebp
mov
js
insl
pop
ret
leave
scas
mov
jns
jle
adc
push
aam
mov
cli
mov
pusha
sbb
jo
and
or
addl
add
dec
arpl
mov
ja
pop
in
pop
xchg
add
cmp
fwait
jnp
xchg
sbb
aad
xchg
xlat
dec
std
add
fxtract
mov
sub
in
cs
aad
jmp
test
mov
or
xchg
out
test
lea
out
sbb
and
pop
mov
rcrl
pop
es
xor
and
xchg
fsubs
cmp
mov
imul
insb
pop
sub
rcrb
push
in
jp
inc
ret
rol
mov
jg
xor
mov
out
or
xchg
xorb
jg
sbb
or
ljmp
or
scas
xchg
inc
pop
cmp
pushf
sti
or
mov
jns
push
je
cmp
sub
std
shrb
stos
jbe
into
xor
lods
cmp
push
pushf
mov
inc
cmp
out
jno
fistpll
test
adc
sbb
leave
orl
cmp
or
mov
push
shll
xor
cltd
cmp
cvttps2pi
loope
pusha
or
dec
cld
stos
stos
sub
imul
dec
pop
es
jno
pusha
mov
fisubrl
xchg
jp
test
lods
fdivl
xchg
or
pusha
inc
movsb
pushf
xchg
jg
dec
movsb
cmpsl
push
frstor
loope
aam
add
cmp
leave
sub
repz
bound
mov
jae
loopne
scas
inc
enter
adc
adc
neg
mov
and
je
insl
pushf
insb
xchg
jns
stc
clc
mov
sbb
lret
hlt
inc
test
test
xchg
std
jl
test
or
pop
shrb
sti
in
imul
lods
add
xchg
mov
xchg
pop
out
popa
mov
mov
push
mov
es
jbe
pop
cmp
sbb
shll
jg
mov
pop
dec
rol
or
popf
or
pop
aam
loopne
cmpsl
cmp
sbb
into
and
dec
mov
lds
push
jae
ja
mov
xchg
xor
pmulhw
das
hlt
jp
popa
lods
insb
dec
mov
mov
inc
and
loop
stc
gs
lahf
jmp
mov
xchg
or
popa
hlt
test
pushf
lret
xor
add
and
fwait
jecxz
pop
and
call
cmpsl
jnp
cmpsl
inc
lods
mov
add
mov
ret
js
pusha
cwtl
xchg
push
xchg
mov
ret
aam
shll
pop
cmp
int3
test
pop
pusha
cmp
sub
dec
and
mov
mov
jp
and
and
pop
push
inc
sbb
push
mov
xchg
dec
pop
xor
test
mov
dec
mov
pop
mov
out
inc
shlb
int3
pusha
loope
icebp
dec
aas
xor
sbb
mov
test
lds
jp
ja
lret
das
stos
cli
les
push
push
jecxz
addr16
add
or
cmp
jecxz
jne
adc
push
mov
push
xor
data16
adc
cmp
cmp
loop
rcrl
or
ja
push
cmp
jmp
ss
add
insb
mov
std
imul
inc
cmc
sti
leave
push
mov
test
lahf
rorb
test
xchg
add
or
mov
insb
mov
test
testb
xor
inc
cltd
xor
pop
or
fs
hlt
pusha
in
and
popa
mov
sti
test
loopne
mov
jnp
cmp
jno
pop
or
pop
fwait
mov
outsl
dec
xchg
hlt
or
mov
test
add
arpl
mov
sahf
lahf
inc
mov
mov
sub
loope
mov
ljmp
mov
scas
or
mov
nop
out
addl
subb
xchg
stos
pop
pop
push
xchg
outsl
cmp
mov
pop
or
mov
adc
xor
pop
lock
inc
shll
adc
xor
pop
test
test
add
movsb
push
cltd
imul
cmp
gs
scas
dec
clc
lods
or
lret
pusha
xchg
scas
pop
bsf
xchg
mov
jge
mov
xchg
ja
jne
fildl
mov
sbb
sbb
lds
lea
xchg
shlb
push
pop
jmp
pop
inc
in
in
sbb
push
mov
jno
fwait
shll
test
sub
ljmp
adc
sbb
mov
xchg
cmpsl
ja
mov
test
cmp
pop
cmp
mov
shlb
xchg
mov
add
jbe
dec
mov
or
lcall
add
push
mov
cmpb
pop
jl
rcr
mov
xchg
or
sbb
push
stc
mov
push
xchg
xor
mov
jb
mov
or
cmp
pop
rcrb
inc
lods
orb
inc
ljmp
mov
enter
js
inc
arpl
mov
imul
push
jg
xchg
sbb
adc
test
sub
cmc
or
popl
sbb
xchg
stc
mov
pop
mov
sub
cmp
mov
pop
push
xchg
sarb
out
lds
add
xor
xchg
dec
xchg
adc
neg
out
inc
xchg
loope
cltd
sub
out
cld
ss
jge
or
add
sub
mov
jnp
fwait
cmp
mov
scas
pop
sbb
xchg
popa
cmpsl
test
sar
in
add
mov
cmp
inc
xchg
fnstcw
mov
mov
mov
sbb
sbbb
jl
mov
mov
sbb
in
jp
jno
test
lea
addl
mov
xchg
push
pushf
in
orl
scas
push
jbe
scas
mov
rorl
push
bound
inc
xor
test
add
in
sub
jne
cwtl
mov
mov
or
or
jns
loopne
lret
aaa
mov
jo
fs
mov
mov
sbb
dec
ja
xor
inc
jle
mov
movsl
jo
jnp
inc
jo,pn
xchg
scas
subb
scas
cld
xchg
inc
cmp
sub
push
or
jbe
xchg
xorl
stc
push
and
lea
enter
inc
ss
rclb
test
push
xchg
or
cld
es
xchg
xchg
repz
mov
sbbl
or
rolb
fimuls
mov
mov
mov
xor
cmp
xchg
jae
jmp
inc
mov
fdivl
outsl
pushf
out
cmpb
mov
or
ja
xchg
fldt
jg
mov
stc
cs
out
dec
sbb
dec
int
and
pusha
shl
dec
mov
ret
push
cmp
jne
jg
loop
dec
rolb
jl
cmp
inc
sub
mov
dec
pop
sbb
jb
xor
xor
sbb
mov
popa
xor
cwtl
rorb
popf
ret
fwait
sub
xor
int3
xor
ja
push
icebp
jge
xor
jmp
insl
dec
inc
addr16
sub
sbb
fnstcw
rolb
mov
fiadds
mov
loop
mov
cli
jo
push
jbe
sbb
xchg
sbb
and
dec
jns
cmp
jmp
test
sarl
push
cmp
shrl
jno
adc
sub
push
neg
stc
data16
mov
mov
pop
in
add
rorl
enter
scas
loopne
scas
fists
jge
sub
popa
jg
enter
xchg
mov
mov
inc
aaa
or
outsb
mov
andb
sbb
jne
test
xor
adc
xchg
mov
icebp
xchg
scas
enter
and
shll
dec
pushf
jnp
or
mov
fwait
cmp
sub
xchg
jg
sbb
dec
pmulhw
jl
sub
fs
daa
dec
jo
xchg
jge
sbb
mov
jecxz
scas
or
frstor
push
inc
pusha
sbb
out
sbb
repz
lcall
data16
cmpsb
fisubs
sub
test
ds
cmc
test
cmp
jmp
sub
out
into
les
mov
in
dec
push
roll
mov
sbb
sub
mov
out
fnstenv
loope
cmp
icebp
push
dec
shll
mov
std
xchg
pop
push
or
dec
daa
xchg
mov
pop
pop
push
rclb
jbe
cmp
insb
movsb
imul
adc
outsb
icebp
inc
sbb
pop
or
pop
jnp
push
mov
and
mov
in
adc
push
into
jnp
out
pop
sub
push
iret
adc
out
cli
add
cmp
imul
and
jo
sbb
fcom
es
add
push
dec
sar
insl
rep
divl
lock
and
scas
push
jo
inc
mov
cmp
mov
mov
hlt
push
and
je
jae
dec
and
cmp
sub
jnp
ret
jnp
sbb
jbe
or
jnp
repnz
jne
xchg
aad
mov
out
ja
add
pop
test
mov
sub
add
push
test
jl
mov
add
iret
jl
mov
and
out
les
adc
fs
pop
mov
es
fisubrl
add
popf
lea
sbb
cltd
addr16
fidivl
cmp
pop
add
xorl
std
lods
pop
inc
cmp
cmpl
sbb
mov
ds
mov
xor
lds
lds
xlat
movd
sbb
jp
xor
mov
test
pop
sbb
pop
sti
push
dec
and
fwait
push
shrl
fstps
inc
push
xchg
sbb
mov
jmp
sbb
test
fisttpl
xor
sbb
jo
stc
in
daa
xorb
loope
cs
int3
sar
sbb
dec
fimull
roll
cmp
enter
outsl
in
mulb
push
sub
jg
inc
adc
mov
mov
aas
ja
xchg
cmpsl
mov
xchg
adc
into
test
out
das
fbld
and
sub
fildl
js
test
and
lods
xor
mov
negl
xchg
add
leave
push
and
outsl
out
shl
insl
daa
mov
mov
mov
rolb
xchg
fcmovnbe
mov
fucomp
push
imul
pop
mov
add
jg
jnp
scas
enter
pop
int3
xchg
adc
add
jmp
adc
ljmp
and
cmp
arpl
out
mov
add
sbb
push
or
xor
test
mov
mov
ret
and
mov
sub
mov
lea
test
xor
test
push
jmp
lret
repnz
mov
or
popf
rcrl
xchg
xchg
or
int
idivl
sub
jmp
fstpl
bnd
shld
mov
adc
ja
std
pop
inc
test
pop
pop
inc
mov
in
shll
out
cmp
lret
push
push
out
leave
mov
fwait
or
pop
pop
daa
and
fs
leave
inc
sbb
pop
xor
pop
mov
les
in
adc
cmp
and
jae
repz
sahf
fcoml
mov
fidivrl
aaa
lahf
pop
add
ret
arpl
and
mov
lods
xchg
repnz
mov
dec
int
cld
mov
sti
or
orb
mov
mov
inc
or
adc
bnd
push
mov
gs
xor
and
push
addr16
or
sub
xchg
adc
aas
or
jmp
sub
mov
insb
add
mov
dec
pop
vpmullw
dec
outsb
push
pop
mov
jp
cmp
aad
setb
cmp
jbe
imul
sbb
rcrl
jmp
jb
jmp
push
repnz
test
das
jp
mov
in
popa
outsl
add
fimuls
and
fwait
idiv
aad
addr16
cmp
test
inc
repz
cs
push
imul
stc
and
sub
mov
dec
insl
and
inc
inc
cmp
cmp
jp,pt
repnz
test
das
cmp
inc
xor
clc
push
sbb
stc
mov
add
test
sbb
and
insb
jns
push
lahf
hlt
mov
fnstcw
jno
xchg
push
mov
adc
rcl
cmovbe
dec
push
xchg
je
cmpsl
jne
lcall
scas
es
inc
jmp
imul
dec
adc
out
ret
scas
ja
insb
and
mov
or
bound
pop
lret
add
sub
pop
and
std
aam
xchg
adc
stc
push
pop
imull
cmp
stos
mov
add
stos
push
xor
jmp
fiaddl
mov
push
push
adc
adc
ljmp
test
aad
pushf
es
je
shl
sahf
pushf
sbb
inc
test
divl
cmpl
pusha
sbb
jns
adc
fstps
mov
movsb
addl
rclb
pop
loop
cmp
or
pusha
leave
out
jl
repz
lea
sarb
insl
mov
je
div
repz
mov
adc
mov
pop
loop
std
loop
jg
jmp
mov
cwtl
mov
repnz
cltd
xor
aas
mull
xchg
faddl
fs
cmp
sbb
xchg
xchg
add
pop
dec
cmp
into
jecxz
roll
push
call
xchg
or
or
rclb
xor
jne
into
mov
mov
sbb
insl
bound
idivl
mov
test
loop
ds
out
sbb
push
and
mov
jnp
xor
jb
jmp
sbb
inc
dec
mov
dec
push
pop
inc
test
mov
pop
shlb
adc
add
clc
xor
add
xchg
sarb
inc
cltd
std
pop
add
add
test
mov
ret
jge
fsub
mov
js
inc
jae
js
push
pop
cmp
xor
dec
push
and
or
jnp
out
call
jmp
push
fnstsw
mov
imul
pusha
test
mov
or
mov
adc
mov
fimull
pop
push
push
into
inc
push
leave
xchg
add
xchg
push
loopne
rorl
jo
scas
jmp
sti
negb
into
jnp
jne
dec
pop
inc
cmp
mov
lods
cmp
scas
or
xor
hlt
cmc
cld
fadd
sahf
pop
and
inc
leave
jl
xchg
pushf
std
int
xor
int
les
call
lods
ret
and
in
dec
mov
test
xchg
pusha
mov
cld
vpshaw
fdivr
cmpb
lock
mov
shrb
in
and
sub
mov
insb
hlt
fists
xlat
push
cmp
sub
test
cmp
sub
sbbl
cmpsb
fs
std
scas
popa
push
add
cmpsl
pop
test
pop
pop
dec
icebp
mov
js
insb
icebp
xor
out
mov
sbb
repz
inc
mov
daa
xchg
sbb
std
notl
dec
or
outsb
les
dec
jae
sbb
lcall
mov
and
aaa
sub
subb
mov
in
xor
fdivrp
shlb
ja
cmpsb
sarb
xchg
adc
into
mov
pop
jge
movsl
push
fwait
and
imul
fildll
jg
leave
adcb
leave
mov
fadds
lods
call
jnp
adc
mov
or
mov
popa
mov
xor
xor
jg
cmpsl
pop
jle
xchg
and
jae
je
ret
xor
pop
xor
ljmp
cmp
andl
push
test
sbb
and
ficomps
lods
jo
push
mov
fs
pushf
outsb
sarb
out
repnz
movsb
shl
sub
jne
lods
rclb
pop
jbe
xchg
sub
jnp
or
jmp
cltd
sbb
int3
imul
rcrl
add
push
adc
push
push
dec
test
das
movsl
in
add
push
mov
pop
movb
pop
xor
out
jb
out
leave
movsl
inc
xchg
dec
cmp
daa
mov
dec
inc
inc
xchg
inc
icebp
jbe
ret
cmp
loop
adc
sti
daa
sbb
in
dec
xchg
je
lods
adc
push
xchg
sbb
mov
call
sub
mov
add
cmpsb
je
fcomi
pushf
cmp
or
insb
arpl
mov
cld
int
jge
mov
aas
jb
push
mov
ret
xchg
into
out
std
cs
addb
mov
imul
je
out
push
jo
push
and
out
das
pop
rcl
lods
or
ret
xchg
or
clc
mov
ss
mov
push
lods
and
rep
mov
adc
cmp
dec
pop
cmp
xor
and
pop
or
pusha
push
mov
fldcw
out
xorl
out
push
or
sub
lods
pop
stc
daa
loopne
pushf
dec
add
out
lods
sbb
lahf
inc
ljmp
ds
inc
pop
js
pushf
jl
outsb
into
pop
mov
xchg
xchg
mov
pop
push
add
js
insb
adc
sarb
fstp
mov
rcrb
test
aam
xorl
test
ret
mov
or
or
xchg
jge
jno
outsl
mov
shlb
push
es
mov
xchg
jge
test
add
dec
pop
mov
lahf
cmp
push
in
xor
and
add
inc
adc
push
rcrb
dec
leave
mov
cltd
testb
cmp
mov
movsl
insb
jbe
jne
scas
pop
rcrl
cmp
sysret
ret
jne
sub
cmp
dec
lock
mov
js
push
popa
xchg
leave
fnstsw
imul
icebp
fstps
jns
add
enter
inc
test
jbe
xor
inc
outsl
sub
inc
dec
add
pop
cmp
inc
dec
adc
pop
insb
inc
pusha
sub
cmp
fdivrs
ss
and
std
stc
push
lods
lcall
pushf
jl
mov
out
push
pop
shlb
scas
ja
shlb
test
jno
sub
inc
out
or
gs
clc
test
inc
adc
ljmp
testb
fcoml
or
xchg
loop
fimull
adc
fimull
push
adc
xchg
repz
inc
xchg
mov
pusha
les
sub
xchg
adc
sub
icebp
add
pushl
sarb
aaa
outsb
in
xor
pop
ljmp
decl
jno
adc
and
aas
jne
dec
adc
leave
fdivrs
bound
dec
mov
add
lea
cmpsb
mov
jmp
jp
in
push
and
gs
jmp
daa
mov
fistpl
inc
cltd
mov
mov
inc
jne
adcl
jno
decl
cmpsb
aaa
pusha
pop
loope
mov
orl
fnstenv
shl
cmp
out
test
stos
out
roll
push
inc
add
xchg
inc
mov
jg
out
fldenv
fs
subb
pop
movsb
iret
aam
loopne
xor
cmp
mov
inc
popa
cld
bound
jo
mov
test
cmp
adc
insl
int
out
fwait
getsec
out
add
arpl
jp
lods
inc
jmp
cmp
sbb
repnz
rorl
inc
sar
mul
ds
insl
jns
push
rcrb
popf
enter
jecxz
pop
out
mov
sbb
imul
jge
lret
shl
pop
out
stos
lods
push
mov
xor
or
pop
fadd
pushf
push
in
lods
cmpsb
gs
mov
fwait
shl
fcomip
jmp
jle
cmp
dec
insb
in
roll
cmpsl
addb
mov
lods
mov
aam
nop
jp
dec
fidivs
ret
ret
cmp
pop
test
mov
xchg
mov
push
jnp
rcll
push
xor
dec
popf
xchg
sti
jmp
fwait
or
js
jg
fildl
lcall
jno
leave
mov
out
jne
imul
lea
imul
sub
inc
aam
sbb
es
aaa
out
cmpsl
inc
daa
nop
push
iret
daa
das
inc
jb
xor
addl
movsl
outsl
mov
inc
dec
xchg
pop
cmp
mov
adc
daa
xchg
xchg
leave
xchg
pop
sub
inc
lods
fdivl
push
jle
cmc
mov
push
xlat
xor
repnz
in
repz
sub
dec
and
inc
loope
addr16
jle
stos
adc
cmc
jmp
xchg
or
push
cld
sbb
pop
outsl
xor
test
test
stos
sbbb
xchg
mov
push
dec
mov
ficoms
push
cwtl
cs
test
lods
stc
outsl
cmp
imul
fdivrs
push
int
xor
xchg
mov
dec
cmp
outsl
mov
dec
add
in
xchg
push
mov
stc
sub
insl
cmp
or
je
xchg
in
or
dec
cmp
cmp
sbb
mov
inc
cld
test
push
sbb
xorl
push
lcall
mov
sub
mov
mov
scas
rcrb
mov
mov
mov
jle
sbb
mov
divl
fnstenv
fwait
cmc
jnp
sbb
aaa
push
push
mov
es
aaa
aas
jmp
xchg
mov
xor
cmp
xorb
dec
add
sarb
rolb
sbbl
fisubrl
cwtl
inc
xchg
cli
cmp
push
aaa
mov
lahf
lock
daa
xrelease
xchg
push
pop
lret
jg
arpl
mov
jg
nop
adc
xchg
dec
inc
icebp
cmp
xchg
lcall
rcrl
clc
sbb
adcb
pop
mov
loop
ret
sub
loop
pop
ret
xorl
pop
in
xchg
mov
test
cmc
lret
jmp
rolb
jl
lds
mov
push
arpl
cmp
and
in
xchg
clc
or
xlat
repnz
ds
mov
shll
lea
pop
or
dec
inc
lcall
push
add
arpl
mov
cmp
mov
mov
or
out
and
jp
stos
xchg
push
cld
pop
mov
arpl
mov
ds
dec
repnz
push
dec
add
and
mov
dec
enter
pop
pushf
cmpb
daa
xor
push
adc
lahf
xor
iret
dec
xchg
imul
int3
bound
movsb
push
gs
ja
arpl
jecxz
jnp
sub
andl
xor
jo
cmc
sbb
sub
movl
jg
insl
imul
lods
pop
mov
loop
add
mov
xorl
mov
int
addr16
popf
ja
insb
test
data16
cmpsb
movsb
xchg
or
popf
jg
push
negb
mov
dec
das
mov
add
inc
idivl
mov
popf
testb
lock
icebp
xor
addb
xor
sti
iret
rcll
test
adc
mov
flds
daa
xor
dec
jno
popa
out
sbb
jl
push
xor
xchg
lock
les
ss
cmc
test
imull
push
std
xchg
jmp
add
cltd
cmp
cmp
testb
cmc
mov
es
lea
jp
aas
insb
iret
clc
dec
pop
push
mov
push
mov
outsl
and
gs
sub
mov
cmp
lea
dec
jl
add
push
add
dec
fiaddl
xchg
or
ds
mov
cwtl
movb
sbb
jmp
sar
clc
or
jge
out
lds
aas
arpl
shrl
or
fistpl
shrl
or
xchg
mov
dec
cld
lods
in
pop
mov
cs
mov
jp
and
mov
xor
jne
mov
loope
sbb
mov
and
dec
lods
data16
sbb
mov
test
ja
test
xchg
test
add
popa
push
cld
cli
cs
add
push
xchg
push
mov
imull
push
sarb
ja
jmp
add
adc
fdivrl
add
jmp
enter
xchg
aaa
mov
aam
inc
jnp
call
push
mov
icebp
out
loopne
repnz
and
and
or
rcrb
mov
clc
mov
dec
xchg
mov
mov
xchg
lea
mov
jp
xor
mov
and
icebp
push
xor
cmpsl
jae
xchg
pop
pushf
lret
cmp
sahf
fs
dec
outsb
test
jne
shll
cmp
sbb
xchg
jnp
mov
xor
mov
test
and
imul
movsl
xor
and
add
jbe
sub
mov
arpl
add
mov
out
mov
jbe
in
repz
push
ja
pop
fcmove
cmp
test
pop
lea
and
mov
pop
mov
cwtl
push
lods
sti
leave
cld
addr16
not
inc
mov
push
out
mov
pushf
or
cmp
mov
push
lret
scas
jb
popf
lds
nop
mov
cmp
inc
dec
sbb
mov
mov
repnz
pop
stos
jmp
ret
mov
loop
lock
add
out
repnz
int3
inc
xor
xor
sub
lods
push
xor
sub
inc
push
aaa
xchg
push
roll
sub
int3
idivb
sar
call
stc
adc
cmpsb
fdivrs
jge
in
xchg
data16
jno
cli
stc
pushf
inc
daa
loope
adc
std
mov
mov
xchg
cmp
dec
inc
xor
add
lea
aas
jmp
aam
mov
or
dec
push
in
inc
fucomi
sbb
or
mov
xchg
lret
ret
adcl
out
lock
cmpsb
fnstenv
jl
out
je
lea
sbb
ret
ja
outsb
sbb
mov
test
in
fidivl
sub
stos
fistl
push
notl
mov
pusha
test
ljmp
in
mov
insl
ss
movsl
mov
mov
sbb
mov
xor
cs
jne
test
dec
mov
mov
pop
pop
test
jl
insb
lret
fdivrs
test
push
jo
inc
clc
push
ja
test
fs
mov
push
mov
push
repnz
hlt
and
test
jnp
loop
jmp
aam
int3
cmp
sbb
ret
jne
sbb
sub
inc
add
mov
xchg
roll
test
imul
mov
xlat
add
pop
in
or
es
lock
inc
push
clc
xor
pop
or
addl
ljmp
cld
push
gs
aam
fcoms
jge
push
inc
jbe
xor
push
xor
push
fidivl
negb
adc
lds
repz
cli
bnd
fwait
mov
adc
pop
mov
cs
adc
sbb
and
pop
xchg
incb
add
cs
pop
add
rcrl
pop
sbb
xor
arpl
jb
mov
ja
xchg
adcb
cmp
xchg
sub
cwtl
shlb
ret
aam
mov
xor
lds
cmp
or
rcl
cs
lods
aas
mov
push
mov
push
cmp
test
in
scas
sbb
hlt
enter
fiadds
jns
cli
fstps
or
into
sub
jbe,pn
sbb
mov
push
es
sub
mov
cmp
stc
shrl
popa
adc
mov
add
push
cmp
and
mov
pushl
sahf
popf
mov
xor
dec
adc
cmp
adc
mov
xchg
repnz
std
dec
xchg
nop
shlb
mov
in
ljmp
testb
in
shlb
mov
mov
cmp
movsl
fadd
dec
push
xlat
cmp
int3
fstpt
imul
or
popa
ja
movsl
mov
dec
inc
jmp
xchg
lods
xor
pop
dec
sahf
sub
nop
lods
aas
add
loope
nop
bound
xchg
repz
icebp
xor
cmp
fwait
or
es
popl
sub
cmpsb
test
jecxz
and
mov
add
and
sbb
dec
jg
pop
inc
mov
test
test
inc
adc
pop
fwait
xchg
cli
jle
adc
fdivl
dec
dec
cmpsb
rol
test
xlat
lcall
into
movsl
cmp
test
jb
cltd
loop
aaa
std
sahf
xchg
inc
imull
ds
ja
xor
repz
jg
ret
xchg
mov
sbb
loop
notl
imul
cmp
out
push
or
add
out
sbb
lcall
mov
repnz
mov
xchg
pushf
sbb
sub
jae
js
lcall
fstpt
xchg
mulb
add
xor
rolb
pop
dec
xchg
add
loop
inc
dec
sub
adc
sahf
lods
mov
cmp
sti
ret
dec
lcall
lock
sub
nop
xchg
mov
sarl
jmp
or
fstpt
rclb
imul
xor
push
lahf
fdivp
push
je
jg
push
push
xor
and
imul
lahf
add
xor
adc
xchg
xor
aaa
sbb
push
mov
ss
xchg
mov
cmp
jae
xor
cltd
jp
adc
push
inc
fnop
je
xor
add
push
icebp
out
sti
cmp
fsts
popa
or
sbbl
fxch
insb
xchg
pusha
add
xor
adc
hlt
test
lds
sub
enter
inc
leave
xor
hlt
leave
jb
jge
push
add
mov
lahf
fldt
loope
sbb
repnz
jmp
test
cmpsb
xchg
xor
and
jp
test
sbb
jmp
and
test
inc
dec
mov
movsb
mov
jno
test
aas
push
or
xor
rcll
aam
add
dec
pushf
dec
adc
jge
or
add
out
ret
xorl
int3
mov
imul
rolb
in
mov
cmp
adc
ss
repnz
insb
push
cs
add
pop
pop
xor
push
adc
aas
scas
inc
mov
xchg
sub
and
sub
pusha
out
pop
shr
scas
stos
sub
sub
and
add
mov
xchg
aaa
mov
dec
leave
and
pop
mov
jle
sub
mov
pop
inc
mov
mov
ja
test
sub
sub
cmp
dec
hlt
and
xchg
inc
mov
dec
push
dec
inc
les
popf
pop
aas
jmp
fcmovbe
pop
jl
iret
dec
ret
jg
xor
pushf
shl
fistps
sub
mov
mov
pop
rorb
mov
insl
jo
pop
lret
jle
sarb
mov
pusha
mov
mov
bsr
xchg
mov
int3
xchg
in
enter
scas
js
and
push
scas
divl
push
loope
cmp
arpl
dec
andb
sbb
sarb
std
mov
ds
mov
push
push
sbb
add
cmp
mov
pusha
mov
jbe
dec
loop
xor
jmp
out
push
xor
adc
rorl
insl
fbld
ljmp
test
cmpsb
sbb
test
push
push
pusha
repz
xor
movsl
pop
je
shll
mov
test
fwait
ret
je
push
pop
test
shrl
jno
idivl
jne
jno
imul
fildl
mov
dec
pop
cmc
sarb
shlb
cmp
outsl
imul
or
dec
jecxz
dec
pop
xor
ds
adc
insb
adc
sub
test
jecxz
addl
xchg
in
cmp
xor
test
push
cmpsb
adc
mov
xchg
inc
push
das
aaa
pop
mov
int3
fcomip
js
add
xchg
inc
das
cwtl
sbb
ljmp
xchg
inc
addr16
fisubrs
xchg
inc
mov
mov
mov
xor
int3
pop
test
cmp
jns
pop
fstpl
loop
rcl
mov
mov
cmp
mov
jl
stos
mov
adc
sbb
dec
jg
stc
hlt
addr16
or
cld
xor
arpl
mov
dec
and
fimull
js
aad
bound
mov
pop
fwait
adcb
idivl
mov
push
mov
lahf
out
aam
out
adc
jl
xchg
lock
add
cmp
push
negb
lods
jmp
sub
mov
jp
in
pop
ss
and
popl
or
dec
add
xchg
cwtl
orl
sti
inc
mov
test
sbb
insb
cmc
ja
pop
scas
repnz
hlt
lea
std
sarl
mov
leave
jp
mov
mov
test
pop
mov
dec
stos
adc
cld
jo
mov
dec
test
data16
insb
pop
mov
inc
js
sbb
mov
pop
rorb
cmp
out
inc
rcrl
pushf
repz
sub
jbe
sti
push
pop
test
es
add
dec
xchg
xchg
mov
dec
mov
shlb
popa
in
aam
je
inc
insl
pop
mov
sub
out
mov
sub
or
mov
sub
lods
loope
cmp
pop
pop
push
jne
lods
push
dec
pop
xchg
addb
lods
pop
scas
xor
scas
mov
xchg
inc
and
fdivl
push
xchg
and
xor
ja
test
mov
or
mov
jns
div
stos
fstps
cld
dec
cli
sbb
xchg
pop
xor
lods
dec
xchg
jo
xchg
jg
lret
fdivs
roll
int
dec
iret
rcrl
leave
push
mov
cmp
in
mov
xchg
in
test
cld
dec
xchg
jp
cli
dec
rol
aas
xchg
sbb
mov
jmp
lcall
dec
aas
cli
int3
sarb
push
adc
mov
fadds
push
insl
and
insb
mov
sahf
insb
inc
cmc
dec
push
sbb
int3
jle
in
out
jmp
or
cmp
xlat
lea
imul
or
int3
clc
xor
add
adc
repnz
mov
xchg
push
mov
add
leave
test
mov
stos
sbb
inc
push
mov
test
xchg
xchg
xor
clc
xchg
jbe
insl
lods
lds
add
mov
lods
dec
movsb
in
sub
mov
daa
scas
mov
or
sub
push
fildll
jmp
lldt
xor
andl
inc
movsb
out
mov
ja
lret
dec
out
movsb
mov
add
xchg
push
ljmp
cmp
dec
enter
lahf
dec
or
adc
popf
adcb
clc
jbe
xchg
adc
adc
sub
das
scas
push
std
mov
ja
popf
pop
shll
jno
rclb
out
jb
mov
dec
inc
lods
cmp
pop
mov
add
rolb
xchg
movsl
sub
dec
dec
cltd
xchg
or
popa
pop
cmp
jnp
ficoml
mov
addr16
fmuls
xchg
adc
lock
test
cmp
aam
cmp
dec
dec
cwtl
popa
lahf
int3
and
jne
data16
stos
bound
cmp
and
lcall
repz
cmp
leave
dec
bnd
lods
xchg
lea
xchg
ss
cld
dec
mov
fwait
push
jno
das
sbb
or
jg
loop
in
das
cmp
test
xor
arpl
cmp
pushf
lret
push
rolb
dec
ljmp
mov
repnz
cwtl
or
negl
sahf
data16
xchg
fmull
enter
lea
movsl
inc
mov
fdivl
lds
stos
and
and
mov
sarl
xor
ja
mov
sbb
cmpsb
inc
orb
loopne
int3
data16
xchg
imul
mov
addr16
cmp
shl
xchg
add
jge
fcomi
adc
cmp
mov
push
xorb
mov
insb
and
xchg
push
lods
in
sub
add
shl
rclb
cmp
mov
xor
test
dec
sahf
mov
jb
push
aas
sbb
jne
repz
das
scas
jo
test
lss
fcomip
les
jmp
adcb
xorb
out
push
popf
in
push
inc
ja
popf
adc
ret
mov
dec
cltd
icebp
inc
fsts
mov
lock
jecxz
pusha
clc
or
scas
mov
call
sbb
in
test
adc
icebp
arpl
xor
shl
dec
test
rolb
out
fsub
idiv
mov
adc
xchg
push
shr
xor
inc
inc
or
inc
pop
add
add
pop
loopne
lods
jge
mov
andb
mov
imul
lret
add
je
adc
xor
sar
mov
mov
outsl
in
cmp
loope
loop
sbb
popf
hlt
inc
scas
aaa
outsl
clc
out
pop
cmp
js
aas
insl
fwait
adc
and
fwait
pop
xchg
jge
and
jg
xor
xchg
mov
int
mov
repz
push
mov
mov
and
divl
push
stc
std
pop
daa
sub
sahf
cmp
int
sub
adc
repnz
cltd
add
imul
dec
lds
mov
in
int
dec
and
and
out
pop
int3
sbb
in
in
mov
fwait
inc
out
or
push
xchg
push
xchg
or
and
aam
xchg
cmp
test
sarb
pushf
stc
in
inc
mov
js
cmp
push
push
or
xor
sbb
shrb
mov
fwait
loop
add
xchg
sbb
int3
pop
and
sarl
mov
sub
out
mov
scas
and
enter
pop
ja
adc
fsubr
adc
jge
repnz
cwtl
cs
out
sbb
roll
dec
xchg
jno
je
mov
xor
cltd
insb
push
aaa
stc
cmpb
mov
pop
cltd
test
xor
cmp
aas
fisubl
out
xchg
xchg
add
jl
jo
test
icebp
add
std
je
xor
sbb
mov
mov
inc
dec
push
mov
sbb
jmp
push
es
test
mov
xchg
out
shll
xor
cwtl
dec
data16
shrl
lds
xchg
loop
or
jno
xor
cs
shll
inc
out
es
cmp
pusha
cltd
cmpsl
subl
js
inc
jno
adc
fstl
cmp
pop
mov
int3
test
ljmp
sbb
cld
inc
mov
shrb
dec
adc
cmp
je
sub
fildl
or
mov
xchg
push
cmp
pop
mov
dec
sbb
ret
sub
push
add
inc
cwtl
xchg
fsubl
mov
xchg
jbe
xchg
push
loopne
xchg
adc
fisubrs
cltd
cmp
push
mov
mov
cmp
xlat
xor
mov
xchg
dec
pushf
pop
repz
mov
clc
int3
mov
pop
pop
lea
and
sahf
daa
jb
add
bound
jno
dec
jp
aam
and
rolb
adc
pop
fs
rcl
lock
cli
fdivrs
mov
push
pushf
test
inc
pusha
and
repz
lcall
xchg
cmp
mov
sub
cmp
cmp
xadd
mov
js
dec
mov
mov
jge
fldcw
pop
mov
pop
fsubrs
imul
stos
and
inc
sahf
stos
dec
cmp
mov
lea
sub
dec
cmc
cmp
adc
pop
rcrl
ret
and
or
cmp
mov
sbb
dec
xor
mov
dec
fs
jmp
shrb
jecxz
sub
sub
dec
push
push
cmpsb
and
sahf
push
test
in
fs
pop
fsubrs
add
xchg
mov
jnp
clc
pop
inc
into
mov
iret
xchg
lahf
hlt
test
mov
xor
adc
data16
pushf
mov
mov
aam
fidivrl
sti
outsl
sbbb
pushf
pop
daa
or
lea
xchg
and
sub
adc
cmp
les
lahf
mov
cmp
adc
aaa
mov
test
sub
ficomps
cmp
adc
repz
or
test
jge
ret
repz
sub
out
lcall
fsubl
adc
xchg
lds
adc
das
mov
imul
mov
xor
xor
test
xlat
loop
rolb
in
cmp
push
dec
add
bnd
andb
idiv
adc
adc
shrl
mov
test
addr16
pop
mov
jbe
cmp
inc
pop
dec
mov
ss
shrb
push
dec
mov
xchg
popa
icebp
arpl
dec
cmp
xchg
cmp
test
scas
mov
add
add
test
pop
xchg
add
sbb
mov
lods
pop
lds
popf
insb
dec
or
or
repnz
sbb
test
shrb
dec
mov
repnz
nop/reserved
and
adc
stos
cli
popf
cmpsl
fistpll
sub
addb
xchg
mov
out
jge
add
fldl
std
add
ficoms
and
cmp
jp
int3
or
push
fstpt
xchg
iret
adc
imul
jmp
jge
push
fmull
dec
cmp
or
or
cwtl
aam
popf
push
jge
in
and
addr16
insl
aam
mov
jmp
call
and
dec
je
adc
flds
leave
fstps
mov
push
add
inc
push
out
mov
dec
popf
pop
fs
inc
in
xchg
sub
push
fists
sbb
push
jae
mov
jo
push
dec
stc
rcl
jg
push
mov
test
test
test
and
mov
outsb
mov
mov
das
or
jg
jp
loop
gs
pop
jge
jne
pop
cli
mov
dec
sbb
pusha
and
mov
xchg
test
add
jmp
jl
pop
push
pop
adc
ret
jae
out
repnz
mov
dec
cmp
mov
push
cmp
inc
sub
out
push
inc
push
lods
jnp
addl
cmc
adc
push
imull
out
xchg
in
icebp
adc
mov
cmp
fwait
xchg
negl
push
je
aas
mov
aas
jle
test
xor
and
xor
xchg
movsb
cmp
aad
mov
pop
dec
xchg
fsubr
mov
call
aas
cmp
dec
add
pop
out
mov
sbb
scas
push
cmp
xor
sbb
sub
mov
push
jl
xchg
push
leave
inc
out
jl
sbb
inc
loop
xor
into
inc
lds
repz
test
mov
in
push
push
pushf
leave
jbe
stc
mov
xchg
sbb
add
adc
sub
stos
icebp
sbb
idivl
push
out
adc
jl
lcall
mov
xor
mov
fiadds
mov
mov
ljmp
cltd
or
mov
sbb
adc
cmp
mov
xchg
pop
addl
cmp
jecxz
cmp
fcoml
add
and
vpmacssdql
dec
icebp
push
loop
js
scas
jl
test
je
cmp
cmp
data16
mov
movsb
jl
cmp
ret
mov
inc
adc
shrl
xor
scas
adc
in
inc
cmp
mov
xchg
fstps
xor
rcl
cmp
mov
adc
mov
cmc
std
test
cmc
rorb
pop
aam
xchg
loop
add
xchg
iret
sbb
cs
fistpll
or
punpckhdq
xor
icebp
popa
or
pop
call
je
ss
push
es
pop
int3
cmpsl
inc
out
aas
dec
sbb
jnp
mov
out
imul
cli
pop
sbb
jae
cs
xor
sbb
addr16
and
in
mov
nop
in
mov
mov
jg
bound
inc
push
ror
out
jne
or
mov
xchg
out
xchg
rolb
pop
test
in
rorl
lret
orb
pusha
xchg
pop
cmp
lahf
outsl
cs
test
clc
xchg
xchg
jmp
mov
add
push
cmp
ja
dec
hlt
add
aas
and
mov
bound
inc
outsb
adc
push
imul
es
xchg
and
fistpl
loopne
dec
mov
pop
cmp
jmp
icebp
mov
nop
xchg
js
push
cmp
sub
mov
mov
and
jmp
sub
out
bound
rcl
dec
fldenv
pop
leave
sub
xor
xchg
add
xor
add
decl
stos
xchg
dec
mov
inc
shrb
pop
outsl
pusha
cmp
pop
push
adc
jg
adc
iret
adc
cmp
and
dec
pushf
xlat
pushf
imul
jmp
addr16
jecxz
jp
jmp
xor
fs
dec
push
sub
ds
jae
ss
call
cmp
rcrb
pop
jae
out
sbb
in
data16
xchg
leave
mov
adc
xchg
push
push
adc
test
jae
pushf
div
jp
dec
push
sub
aaa
mov
out
test
xchg
js
dec
mov
cld
gs
add
jo
xor
mov
testb
into
sarb
pop
cli
insl
pop
pop
inc
movsl
mov
push
pop
jg
nop
mov
lcall
insl
adc
insl
cmp
leave
pusha
add
add
inc
pop
lods
pushf
clc
push
int3
cmp
and
jmp
cmp
test
pop
push
adc
pop
xchg
push
fistpl
inc
aad
imul
dec
jns
pop
lcall
cmp
mov
popa
lods
cli
fimuls
pop
jbe
mov
push
mov
mov
and
mov
sbb
out
jle
decl
lods
mov
cwtl
shrl
xchg
pop
push
sbb
or
lea
loopne
dec
mov
cmp
sub
adc
xchg
repz
lcall
jge
inc
and
icebp
js
xchg
inc
or
mov
pop
movq
xchg
fidivrs
shll
nop
inc
cmp
lahf
test
or
sub
or
cmpb
cmp
addl
enter
or
cmp
mov
movsb
mov
sarb
icebp
roll
out
mov
sbb
mov
shrl
mov
pop
fmuls
inc
and
xor
stos
push
fwait
push
cs
push
jo
or
pop
repz
or
mov
ret
idiv
lret
mov
fildll
inc
aas
mov
outsl
fs
out
sub
xchg
lock
adc
fs
push
test
and
mov
mov
mov
jl
jns
ja
iret
mov
popa
cmp
xchg
std
ret
sahf
mov
movsl
insl
pop
fs
pop
out
out
mov
mov
mov
xlat
push
dec
cmp
outsl
outsb
pop
adc
scas
dec
in
mov
sbb
add
dec
mov
mov
dec
js
mov
sub
int3
xor
mov
fwait
push
fcoms
pop
rorl
test
out
jmp
inc
repnz
pop
pop
pop
test
leave
je
inc
mov
pop
cmpsl
test
mov
outsl
lahf
mov
add
cmp
or
dec
pop
lret
pop
repz
pop
movsb
cli
jne
lret
mov
cmp
pmaxub
rclb
pop
rcl
pop
pop
data16
jmp
jg
and
cmpsb
jno
into
push
movsb
shlb
pop
ss
leave
push
mov
scas
mov
pusha
rorb
jmp
pop
pop
ss
mov
sbb
pop
incl
les
into
hlt
and
ret
int3
xchg
mov
ja
sbb
sub
dec
loop
call
and
ljmp
test
mov
adcb
add
inc
sub
mov
cmp
xor
int3
mov
pop
push
fistpl
pop
mov
inc
cmp
leave
lret
sbb
cmp
cwtl
rcrb
mov
add
mov
xor
lock
jg
sbb
mov
pop
insb
adc
xor
and
push
jle
lds
inc
sbb
or
mulb
test
xchg
mov
or
je
or
inc
or
cmp
xor
fisubl
rclb
idivl
test
je
or
mov
inc
outsb
cltd
test
insb
mov
shlb
adc
mov
rorl
jg
and
fwait
add
mov
dec
xchg
xchg
aad
cwtl
mov
pop
div
push
cmp
loop
negl
push
mov
ficoms
cmp
fs
mov
pop
rcr
into
or
mov
pop
mov
push
jnp
mov
test
addr16
data16
lods
mov
pop
jmp
pop
jle
mov
inc
xchg
mov
cmp
add
dec
jns
cmp
shll
scas
adc
lds
cld
idivb
sbb
sbb
repnz
jp
or
add
push
fldcw
mov
test
push
test
inc
jnp
cmc
xchg
out
jg
cltd
pop
lods
xchg
inc
dec
xor
pop
add
mov
pusha
sub
mov
stos
cmp
rcrb
sbb
out
repnz
pop
mov
jmp
jnp
xor
adc
xchg
push
imul
ss
arpl
scas
mov
push
dec
mov
shr
cmp
jmp
sbb
aad
and
scas
mov
gs
cs
inc
dec
xor
cmc
int3
repz
dec
outsb
cmp
test
decb
adc
lret
mov
clc
movb
mov
pushf
inc
loop
loope
push
dec
mov
inc
adc
in
lods
xor
inc
push
fwait
shrl
cmp
aas
or
aas
sbb
cs
addb
jo
sbb
pop
push
pop
ds
cmp
es
xorb
sub
fldl
push
xor
xor
paddd
mov
mov
mov
adc
push
mul
pop
add
rcl
lcall
dec
mov
cs
xchg
sbb
cmp
pop
aad
insl
aas
scas
add
mov
adc
sbb
loope
aam
ss
sbb
ja
xchg
pop
mov
in
test
fidivrs
jge
mov
sbbb
je
je
in
mov
xor
pop
sbb
inc
or
sbb
dec
imul
mov
psubsb
pop
in
push
loop
cmp
pop
cmp
jle
into
sub
pop
mov
fisubl
rol
jmp
fisubrs
sti
imul
mov
test
daa
idiv
xchg
sub
outsb
loope
scas
cmp
test
cltd
shrl
loopne
push
test
insb
out
js
inc
mov
sub
mov
cltd
int3
jmp
lcall
jmp
xchg
mov
dec
xorl
dec
mov
imul
jp
sub
jae
sti
fstl
ss
mov
mov
sbb
dec
outsl
lahf
loope
fwait
pusha
xor
pop
or
clc
xchg
loope
test
push
pusha
repz
xchg
cmp
iret
js
pop
mov
pop
frstor
fildll
mov
negl
push
jmp
cmpsl
imul
pop
or
xchg
pop
dec
sub
mov
lcall
ret
les
sub
inc
pop
jmp
lretw
filds
fsubl
cli
jmp
out
xchg
pushf
dec
popa
fnstcw
push
cmp
or
xchg
cmc
ja
out
push
pushf
pop
push
jp
subb
clc
cmp
decb
inc
arpl
addb
popf
cld
call
xchg
lds
ret
cmp
mov
icebp
es
cwtl
push
sub
popl
shrl
jnp
push
xchg
loopne
dec
mov
cli
and
sti
dec
mov
out
enter
into
xorl
add
dec
and
mov
loop
notl
push
in
push
sbb
cwtl
dec
retw
mov
xchg
pop
sbb
faddl
sub
dec
and
sbb
cmc
cmp
push
in
imul
in
pop
pop
aas
mov
or
out
push
ret
mov
adc
mov
mov
cmp
movsb
iret
push
divl
enter
dec
and
push
push
nop
dec
roll
test
cmp
test
sarb
and
add
lock
loope
inc
mov
mov
scas
stos
sbb
mov
mov
pop
cmp
pop
mov
sarb
test
jmp
aas
cmp
xor
xchg
cmp
cmpsb
cmp
pop
mov
add
out
xchg
je
sti
rdtsc
and
mov
seto
mov
sti
test
mov
jns
jle
xchg
pop
xor
adc
imul
inc
and
jnp
or
or
jg
adc
dec
dec
sbb
rcrb
je
fimull
mov
insl
hlt
scas
cmpsl
or
xchg
cld
addr16
cltd
mov
xchg
jg
pop
inc
sbb
xchg
icebp
push
iret
bsr
sbb
sahf
cmp
sti
jo
scas
mov
loopne
test
in
lods
shll
inc
outsl
xchg
cmp
mov
inc
movsb
cmp
pusha
movsb
stos
lds
dec
cwtl
mov
loope
or
push
lret
pop
xor
or
aas
mov
dec
mov
ds
cli
lods
mov
fndisi(8087
push
inc
enter
or
pop
push
imull
mov
xchg
push
mov
pop
push
mov
fs
add
scas
xchg
std
out
xchg
out
push
repnz
xchg
dec
stc
jge
pop
dec
shl
inc
rcrb
fwait
scas
ss
jmp
ret
jp
leave
lock
hlt
sbb
push
pusha
test
iret
clc
rclb
mov
cmpsl
inc
dec
jbe
add
mov
cwtl
test
and
dec
cmp
add
jmp
in
xchg
iret
cwtl
and
cmc
rcll
jg
mov
dec
cmp
gs
ss
xchg
cmc
pop
mov
jmp
adc
sbb
mov
adc
xchg
add
bound
push
cmp
and
dec
jb
xchg
cwtl
rorb
shl
sub
inc
int3
cmovge
pop
sarl
jno
jnp
xchg
push
sbb
scas
mov
clc
bound
mov
loope
sub
pop
test
adc
icebp
push
test
mov
idiv
xchg
mov
jnp
ljmp
sbb
sbbl
fists
imul
roll
mov
iret
js
mov
mov
jmp
xor
notl
fldenv
mov
call
nop
xchg
push
jl
nop
shrl
mov
add
dec
add
pop
in
in
pop
js
mov
jl
xor
push
mov
in
leave
or
sahf
adc
cmp
add
dec
orl
icebp
jecxz
sbb
or
sarl
mov
xchg
dec
stc
fwait
dec
es
ss
dec
mov
pop
xor
out
xchg
int3
inc
test
mov
fdivl
jg
pop
fdivs
arpl
pushf
lods
loope
stos
mov
and
sarb
mov
ret
xor
xor
push
pop
mov
or
sbb
dec
sbb
mov
mov
sub
inc
jnp
aas
add
adc
outsl
mov
rclb
movsl
jnp
jb
sub
and
add
add
mov
dec
xor
mov
sbb
xchg
lret
loope
pop
add
sahf
sub
jnp
mov
dec
test
mov
add
fmull
inc
add
lea
fidivrl
xchg
mov
mov
rorl
add
xchg
push
idivb
repnz
cwtl
mov
xchg
fdivs
sub
xchg
dec
xchg
dec
popa
xchg
xchg
hlt
imul
cs
aas
xchg
xor
fmull
and
push
int3
cmp
xor
xchg
ljmp
popa
jl
mov
xchg
jnp
out
test
jnp
mov
cmp
daa
lds
addr16
fnsetpm(287
or
faddp
add
and
daa
mov
sub
neg
negb
cmp
push
dec
mov
add
mov
push
popf
les
sbb
lds
stos
and
insb
in
mov
out
mov
dec
push
inc
cmp
add
fiadds
cmpsl
out
xor
cmp
adc
cld
loopne
shll
adc
insb
jmp
shll
push
lock
outsb
dec
sbbb
cmp
mov
repnz
out
mull
dec
pop
sbb
seto
add
jnp
rolb
xchg
mov
mov
jecxz
pop
xchg
push
add
fwait
aas
adc
pop
shrb
sti
jle
aas
js
push
pop
sbb
xor
pop
pop
je
mov
xchg
ds
adc
icebp
sbb
movsb
cmp
pop
inc
sub
aas
mov
add
bnd
mov
into
pop
cmp
cmp
leave
jmp
scas
cmp
mov
in
movsl
sti
shr
push
cmp
lret
cmp
xbegin
cmp
popa
or
enter
ss
into
cltd
pop
jb
lods
mov
cmp
sbb
cmpb
pop
dec
popa
out
into
pop
jl
mov
negb
addb
push
pop
and
jo
jle
mov
cmp
test
negl
mov
das
and
jp
mov
cvttps2pi
push
test
adc
inc
lret
fldl
call
cmpb
test
pop
ss
test
aas
rcl
andb
pop
dec
shlb
adc
ret
out
xchg
pop
jne
mov
push
jmp
jl
push
test
cmpsl
mov
fisttpl
add
es
lods
jl
pop
sbb
fs
inc
ficoml
clc
ret
and
addr16
mov
mov
dec
lahf
xor
call
in
xchg
pop
fdivrl
pop
cmpsb
lret
xor
push
and
out
jb
pushf
icebp
cld
lods
xor
jle
jecxz
sub
pop
jp
adc
stc
cmp
mov
cmp
adc
sub
xchg
sbb
xchg
and
jecxz
mov
int
push
inc
push
lds
test
shrb
mov
repz
stc
call
ljmp
push
ror
pop
cmp
es
mov
xchg
mov
add
xchg
push
add
in
in
inc
loop
popa
adc
cmpsb
mov
repz
or
sahf
test
mov
push
fsub
pop
ja
push
outsb
sbb
cmc
and
popf
cwtl
mov
sub
dec
enter
aad
mov
xchg
jb
sbb
or
pop
cmp
arpl
sub
out
mov
out
xchg
xchg
scas
adc
mov
mov
mov
cmp
cmp
lret
cmp
mov
andps
loope
mov
test
popl
mov
mov
push
loopne
mov
sahf
cmc
ds
out
sbb
jle
mov
movsl
push
xchg
test
mov
out
fisubl
incl
mov
subb
ljmp
jge
push
test
xlat
aaa
jg
mov
add
into
hlt
icebp
mov
sub
pop
xor
lret
mov
xor
pop
cs
je
xor
je
xchg
xchg
mov
pop
mov
aaa
mov
ret
loop
hlt
push
sub
jns
xor
jnp
mov
mov
push
mov
sahf
idivl
xchg
sahf
push
andl
pushf
sbb
xchg
dec
mov
shlb
dec
rcr
and
mov
out
push
ds
push
lock
in
enter
adc
test
idivl
gs
push
jno
xor
cmpsb
les
xor
test
jo
test
xor
mov
fisttps
ja
cmpsb
test
add
push
cltd
repz
jl
add
scas
pop
imul
sbb
inc
xor
jg
adc
add
test
pop
fdiv
gs
in
push
xchg
cli
lcall
cwtl
aam
ja
sbb
mov
xchg
cs
push
lahf
fwait
dec
out
lret
pop
mov
sub
jp
dec
xor
bound
push
add
imull
gs
leave
pop
cmc
in
jb
sti
test
xchg
pop
imul
add
dec
adc
cmp
add
add
pusha
mov
in
jae
jle
mov
addl
fs
ss
mov
int3
inc
add
or
testb
in
sbb
xor
and
jae
dec
mov
out
pop
sahf
jne
in
mov
xor
out
xchg
test
or
adc
rorl
and
push
out
xor
int3
jecxz
cmp
or
out
out
xlat
jge
add
inc
inc
iret
pop
mov
xor
arpl
xchg
jecxz
sub
push
jp
lds
adcl
subb
fldt
repnz
sub
mov
fiadds
adc
dec
test
fldenv
pusha
sahf
jg
sub
push
daa
outsb
push
lret
adc
sbb
and
cmp
pop
les
dec
pop
push
xor
imul
mov
adc
xor
iret
xchg
dec
xchg
jmp
loop
cmpsb
sub
in
dec
dec
dec
cmp
xchg
lods
rorb
gs
sbb
push
and
cli
xchg
push
pusha
out
inc
pop
insb
ror
sbb
inc
test
adc
cmpb
and
lods
sarb
sbb
mov
and
out
in
clc
movsl
and
leave
mov
shll
mov
xchg
test
xchg
jmp
jmp
testb
xor
cltd
in
mov
sbb
and
fsubrl
cmc
xchg
js
fldt
ret
mov
adc
pop
shll
cld
int
aam
pop
or
cli
ja
daa
cmpps
inc
sub
push
pop
inc
pusha
syscall
cld
jl
sub
fwait
cmp
jnp
push
jg
push
lret
test
lea
sub
push
pop
aaa
xchg
js
rol
in
add
out
test
outsl
jno
es
stc
xchg
cmp
lcall
xchg
out
fisubrs
leave
sbb
orl
adc
xchg
xchg
andl
out
adc
ffreep
bound
stc
inc
fadds
inc
popa
pushf
repz
push
inc
and
inc
pop
orb
orb
sub
jno
imulb
push
loope
push
or
push
mov
mov
push
mov
cmp
loope
aas
test
mov
scas
mov
push
xchg
cmp
ficoml
push
pop
mov
int3
mov
nop
and
dec
and
shrb
mov
dec
out
pop
xchg
cmpsb
xchg
jo
xor
test
int3
and
mov
faddl
fwait
daa
sub
bound
fisubs
fwait
xchg
rorl
test
xchg
inc
xchg
inc
sub
insl
insb
jecxz
mulb
inc
je
add
pop
fld
daa
outsb
cmc
inc
ret
jno
aas
in
nop
das
bound
fwait
sbb
in
mov
xchg
push
or
mov
add
adc
fdivrs
loope
lahf
cltd
ja
cmp
sbb
xor
mov
push
inc
add
sub
and
imul
or
dec
cld
and
fwait
loope
push
movb
movsb
pop
mov
lock
dec
add
xchg
jg
cmp
cmp
xchg
fistl
dec
add
test
scas
xor
dec
mov
sbb
push
out
push
or
aad
sarb
jmp
ret
scas
loopne
inc
mov
jns
mov
push
cltd
ret
cmp
mov
pminsw
cmp
repz
dec
sbb
mov
cli
je
bound
push
or
pusha
js
arpl
test
pop
mov
mov
or
dec
push
test
cmc
lods
jmp
add
popa
nop
ss
push
mov
sti
xchg
jbe
mov
add
das
andl
push
pop
sti
bound
lcall
loopne
mov
aad
sub
insb
mov
cmc
in
popa
fmul
movsl
out
jb
cmp
mov
mov
jno
mov
shl
xor
sub
js
sub
das
jo
mov
push
and
jp
sti
insb
push
lret
xchg
xlat
mov
pop
movsb
loopne
ss
push
mov
pusha
stc
jg
fs
jbe
pop
mov
xchg
cmp
repnz
aas
xchg
call
jge
xor
fwait
or
roll
into
jbe
test
cli
psubsb
dec
jns
jmp
adcb
nop
inc
subl
mov
or
xchg
push
lahf
pop
mov
int3
adcb
mov
ds
jp
lret
clc
mov
mov
orl
dec
fwait
adc
outsb
pop
test
cmc
cs
mov
pop
int3
adc
lods
movsb
outsb
insl
out
dec
sbb
jp
push
sbb
xchg
sub
push
mov
daa
pop
xor
loope,pn
pop
adc
inc
gs
pop
cld
xor
mov
push
aas
je
sub
comiss
add
or
movsb
test
xchg
daa
and
xorl
sbb
xor
inc
mov
out
inc
xor
popf
pop
repz
pop
jle
jl
or
sbb
test
cltd
xlat
pushf
adc
test
adc
leave
repz
mov
mov
out
insb
ljmp
aam
cmp
daa
pushf
out
mov
dec
cmp
and
pop
dec
and
xchg
mov
xor
daa
adc
sub
cmpsb
repnz
jo
pop
fldcw
inc
dec
gs
xchg
std
mov
sub
ja
or
lods
adc
bound
or
cmp
lret
mov
cmovs
inc
or
imulb
adc
les
test
pop
cmpsl
and
andb
into
xchg
aam
aad
stos
push
jge
aaa
aas
mov
in
xchg
xchg
cs
dec
inc
repz
xchg
aas
stos
pop
push
pop
pop
mov
mov
jle
leave
mov
or
xchg
movd
xor
or
pop
inc
and
ret
ror
cmp
adc
inc
mov
cmp
push
sbb
cmc
lret
fistpll
shll
jae
inc
sub
pusha
inc
inc
xlat
and
orb
rcrb
fwait
pop
aad
out
push
pop
push
pop
sarb
cmp
daa
lahf
ljmp
scas
dec
adc
test
int3
loope
inc
and
popa
outsl
test
push
pop
pushf
lret
adcl
jl
cmp
data16
iret
sub
sub
test
dec
mov
dec
rolb
aaa
decb
or
mov
push
js
xor
or
dec
mov
adc
sbb
or
jp
jge
xor
or
pop
ljmp
das
xor
cld
jno
enter
cmp
jbe
into
out
mov
mov
xor
mov
and
into
sub
pop
fcoml
daa
out
and
or
cmp
shll
clc
adcb
add
aaa
mov
xor
sarb
sub
push
loop
aam
jg
movsl
mov
mov
jae
jb
cmpsb
sbb
fadds
mov
xchg
jmp
mov
lahf
inc
pusha
lods
ja
je
test
pop
xor
adc
mov
mov
aam
out
in
mov
jo
xlat
and
jge
loopne
mov
loope
xor
dec
xor
jnp
js
push
pop
push
sbb
pushl
jb
and
add
ljmp
jg
push
add
out
pop
loopne
mov
add
xor
leave
push
lcall
sbb
xchg
lds
xlat
adc
dec
sbb
mov
push
rorb
mov
leave
in
inc
xchg
push
sub
fimull
mov
popf
add
and
out
nop
aam
and
mov
add
pop
dec
into
fsubrp
je
inc
ljmp
dec
jne
xchg
ja
fs
xchg
and
mov
dec
jnp
lahf
lea
mov
xor
add
lods
or
subb
add
cmpsb
aaa
divl
jbe
mov
inc
rcrl
inc
out
jns
mov
jb
repz
push
gs
ss
imul
pop
popf
xchg
hlt
movl
sbb
dec
inc
movzwl
pop
jb
sub
inc
sbb
popa
fldenv
lods
je
setb
jnp
fs
movsl
fsts
popa
and
and
sbb
push
mov
aas
adc
inc
mov
and
test
adc
int
es
movsb
sbb
mov
setb
leave
inc
adc
cmp
fwait
or
ds
jmp
sub
adc
sbb
sbb
inc
dec
test
rolb
jl
mov
insl
daa
test
pop
pop
in
jb
scas
add
or
push
test
xchg
mov
std
stos
jle
sbb
aad
sbb
xchg
push
mov
push
mov
sbb
into
jle
jmp
mov
mov
fimull
dec
cs
cmpsb
mov
and
dec
in
test
and
cmc
stos
adc
ror
jl
ret
push
dec
fidivrs
inc
jmp
push
pop
leave
ljmp
xchg
pop
xchg
cmp
aas
inc
mov
inc
rolb
xor
or
xchg
sub
or
mov
in
push
sbb
mov
iret
and
stos
or
jge
add
pop
clc
xchg
push
dec
xchg
mov
fdivr
jne
pop
cld
push
mov
pushf
add
into
out
cmp
cmpsl
pop
fsubl
sti
lret
ja
xchg
dec
xchg
loope
push
test
neg
dec
sti
cltd
jns
leave
fbld
or
push
les
xchg
add
fwait
idivb
js
sbb
subb
add
idivb
inc
xor
pop
sub
jecxz
mov
push
pop
mov
inc
xchg
out
xchg
loopne
xchg
xchg
jle
fwait
add
jo
dec
ret
fwait
imul
sub
push
push
push
mov
xchg
push
mov
repnz
test
out
negb
lods
jp
jecxz
arpl
inc
mov
mov
mov
or
aad
inc
inc
imul
test
push
jbe
sbb
jb
dec
add
in
in
mov
xchg
cmp
insl
sbb
jmp
add
in
mov
cltd
push
mov
data16
mov
jp
std
adc
mov
push
mov
sub
add
lahf
adc
jecxz
icebp
gs
xchg
mov
cmp
mov
lea
pusha
testb
test
iret
loope
pop
in
dec
testb
sbb
push
cmpsb
and
add
add
dec
arpl
jb
sub
mov
sbb
mov
outsl
xchg
pop
cmp
push
pop
pop
fdivrl
test
cld
add
ja
or
ret
pop
pop
ret
lahf
inc
cmp
repnz
pop
add
lahf
dec
add
sbb
push
mov
push
mov
icebp
sub
xor
loope
xchg
xchg
in
inc
xor
cmp
mov
icebp
inc
jne,pt
popa
int
test
mov
outsw
ja
cs
icebp
xchg
scas
in
jl
or
ja
mov
pop
jnp
xchg
mov
imul
leave
jecxz
leave
pusha
adc
fwait
xchg
xchg
in
add
pop
sbb
mov
mov
or
dec
jae
shl
jo
push
mov
pop
sub
push
aaa
jo
mov
outsl
sub
mov
dec
xchg
mov
js
dec
or
stos
dec
pop
outsb
out
mov
xchg
xchg
dec
push
xchg
jnp
xor
xor
xchg
dec
xchg
pop
add
outsb
xchg
fstl
mov
mov
iret
cmp
pop
test
push
shl
les
pop
push
aad
cmp
push
jae
pop
repnz
mov
pop
mov
jmp
adc
cli
add
pop
movaps
outsl
negl
mov
mov
pop
mov
jg
sbb
sbb
jl
jno
pop
in
jbe
ret
out
lods
pop
sahf
test
xchg
sub
adc
fnstcw
out
inc
iret
push
nop
int3
adc
rcll
mov
jmp
or
mov
push
inc
out
or
mov
dec
in
jnp
xchg
and
sub
xor
add
xchg
rorb
push
out
dec
mov
add
mov
push
mov
jecxz
imul
cld
int3
xchg
mov
fst
pusha
xchg
notl
into
cmp
out
mov
jmp
loopne
adc
outsl
mov
loop
mov
xor
rclb
cmpsb
lahf
repz
clc
testl
cs
mov
sub
aas
add
mov
das
fildll
jo
jbe
mov
mov
pop
sahf
orb
add
fs
popl
not
adc
into
cwtl
adcl
jl
jp
xor
cmpl
adc
and
in
push
cmpsb
in
push
or
inc
jns
ret
test
mov
iret
xlat
dec
sahf
insb
mov
aas
push
xchg
cmp
subb
in
inc
xor
inc
mov
push
xorb
cmc
add
xchg
adc
testl
adc
adc
loopne
test
sti
cli
popa
pusha
xchg
xor
xor
aas
ret
xor
dec
hlt
push
filds
pop
iret
pop
mov
clc
sbb
xor
into
push
les
push
aam
sbb
stc
inc
enter
mov
add
xchg
mov
fisttpl
icebp
js
repz
je
imul
jmp
adc
fwait
aas
stc
xchg
mov
dec
add
test
inc
jnp
cmp
cmp
jnp
xor
scas
xchg
mov
inc
lods
test
add
adc
sbb
enter
cmp
std
push
inc
imul
je
outsl
cmp
cmp
cld
jp
popa
cmp
popf
les
and
jns
test
push
fiadds
cmpsb
fs
loop
jl
decl
out
mov
xchg
int
mov
sbb
cmp
imull
imul
test
outsl
popa
pop
das
cmc
jb
dec
xchg
adc
inc
loop
pop
mov
and
add
mov
push
adc
mov
mov
jmp
test
adc
insl
sub
pop
aad
mov
sbb
repnz
xsavec
cltd
out
pop
mov
mov
dec
jmp
fstpt
test
xor
or
out
aaa
mov
add
arpl
jnp
cmp
lcall
mov
sbb
jnp
rolb
fistpll
shr
ja
cmpsl
es
sub
dec
es
xor
in
mov
es
flds
js
pop
push
movsb
clc
shl
adc
test
sbb
xor
fwait
cmp
xor
push
mov
or
push
test
dec
insb
pop
cmp
pop
test
notb
cmpsl
xlat
int
das
push
ret
sbb
arpl
sbb
out
push
scas
adc
pushf
ds
ja
xchg
adc
jnp
xor
mov
and
inc
inc
test
inc
dec
push
push
cmp
jge
xor
push
shr
je
push
lahf
or
xchg
sbb
bound
das
xor
stc
mov
shrl
adc
xor
pop
inc
push
jne
xchg
jle
shr
sbb
jp
subb
or
fisttpl
rclb
ret
fisttps
call
push
or
jmp
jo
xor
sahf
loopne
ljmp
cs
data16
jno
testl
mull
cltd
xor
xchg
fs
daa
daa
ret
jne
cmp
mov
cmp
push
cmp
shlb
cmp
nop
testb
or
sarb
fs
out
cmpsl
inc
ret
or
lret
adc
aaa
sbb
jmp
cmc
insb
xchg
idivb
xor
cmp
in
inc
sub
add
cmp
sbb
xchg
adc
mov
adc
out
dec
std
aam
lret
push
pop
mov
add
jnp
sub
test
notl
inc
pop
xor
and
jg
js
mov
push
pusha
aam
ds
and
testb
mov
pop
cwtl
jmp
push
aas
inc
test
sar
scas
inc
sbb
js
lahf
rolb
mov
jle
mov
nop
ror
fiadds
inc
fcomi
add
shll
jmp
or
sbb
inc
cmp
lahf
push
sbb
mov
shll
cmp
jl
pop
dec
fbstp
mov
cs
cmpxchg
das
in
lods
stc
or
xchg
test
cmp
ret
sar
push
adc
inc
push
das
mov
push
test
mov
daa
dec
lahf
sbb
pop
mov
cmp
push
test
lock
pop
pop
fwait
or
inc
mov
loopne
dec
pushf
mov
jnp
out
xchg
sub
loopne
sbb
ljmp
cmc
aam
out
xorl
jo
mov
mov
loope
movsl
inc
in
imul
mov
cmp
xchg
addr16
cltd
add
sub
loop
sbb
sub
pop
insb
movsl
ds
push
lods
adc
je
xorb
mov
xor
jo
jne
mov
xchg
mov
inc
add
add
les
add
sbb
test
mov
fcmovb
jecxz
andb
push
insl
mov
and
orl
loop
add
mov
sub
jnp
adc
mov
pop
fldcw
fsubr
cmp
incb
ficoms
out
or
jl
add
lods
cmpsb
adc
fildll
ljmp
test
sbb
in
push
sub
xchg
dec
ljmp
mov
stos
rep
sub
gs
sbb
sbb
xor
mov
mov
mulb
cmp
arpl
pusha
ja
xchg
arpl
and
xor
jne
or
push
cmp
xchg
pop
mov
dec
pop
aaa
or
movl
mov
sbb
mov
shll
lds
lds
adc
mov
sbb
pop
cli
dec
cmp
mov
or
jp
pusha
pop
mov
das
fists
test
and
loop
movsl
mov
push
push
rcrl
dec
int3
jge
add
movsl
add
cmp
test
jo
xor
ret
cs
adc
enter
xchg
xchg
repz
sub
push
lret
test
sub
je
mov
lret
cwtl
mov
ffreep
add
jnp
sub
lock
jge
push
sub
mov
sub
loopne
inc
jge
jmp
jl
mov
cmc
pop
pop
cmp
add
cmp
mov
mov
and
xor
dec
out
es
or
sub
insl
cmp
mov
push
bnd
dec
or
addb
rsqrtps
jns
cmp
rclb
dec
insb
xor
fprem
inc
dec
sbb
test
xchg
ljmp
jne
cmp
xor
mov
popa
cmp
pop
repz
fsubrs
cmovns
sub
dec
test
push
fisubrs
dec
inc
dec
shll
jmp
mov
cmp
jmp
call
cmp
dec
fsubl
xchg
test
mov
cmp
sbb
mov
xor
stc
and
aas
outsl
pop
sub
xchg
or
ss
mov
pushf
sub
sbb
cmp
icebp
add
jle
in
xor
inc
add
es
mov
int3
adc
hlt
mov
aas
pop
add
icebp
cmp
sbb
es
dec
icebp
test
pop
sub
insl
push
repz
jle
xor
jg
xor
cmp
sbb
loope
push
clc
lea
push
push
test
adc
jnp
outsl
loope
cmp
out
or
mov
pop
cmp
push
cmp
loop
mov
loope
inc
xor
cmp
test
std
add
xchg
jae
lods
cmp
cmp
sbb
and
cmp
arpl
lea
out
xor
mov
addr16
sbb
jle
hlt
push
xchg
mov
xchg
loope
leave
cmp
and
xlat
push
gs
sarl
leave
push
cmp
jmp
lock
shrl
dec
xchg
push
sbb
clc
cmp
ss
insl
cli
in
mov
inc
std
dec
mov
sbb
dec
jmp
mov
push
cmc
and
leave
lods
mov
lcall
outsl
xlat
rorb
out
pusha
or
mov
jge
mov
and
xchg
nop
inc
mov
bound
sbb
out
cmp
sahf
pop
adcb
icebp
mov
cmc
jle
xchg
addl
stc
cwtl
cmp
outsl
hlt
addr16
or
pushf
imul
adc
aas
push
inc
xor
addr16
mov
jnp
sub
cmp
shlb
imul
inc
fsub
pop
jg
lea
mov
in
fiadds
pusha
cmc
cmp
sub
in
cmp
insl
test
call
shlb
push
sbb
pop
shrb
aaa
mov
clc
dec
adc
push
xchg
lret
iret
jnp
mov
test
or
sub
xor
xchg
lods
sub
pushf
pop
int
mov
mov
pushf
lds
pop
dec
mov
fstpl
or
sub
pop
jo
adc
mov
jns
push
in
xor
add
incl
lret
mov
ror
mov
insl
cmc
repz
leave
jl
cmc
lret
fbstp
inc
lahf
shlb
adc
or
fwait
enterw
jo
xchg
mov
shrb
aad
cmp
or
inc
add
int
and
mov
shl
sub
or
mov
test
subl
out
mov
pop
lds
mov
std
lea
adc
lods
jp
push
inc
dec
or
mov
sbb
xorb
rol
imul
jp
out
popl
sbbb
cmp
mov
mov
aas
iret
mov
add
repnz
or
xchg
fwait
repz
lods
iret
push
notl
lcall
mov
add
loop
mov
sub
in
push
mov
in
scas
aaa
mov
out
or
xchg
mov
rcl
mov
dec
adc
cmp
fwait
jp
je
or
cmp
inc
bound
mov
cmp
xchg
adc
dec
fimuls
hlt
mov
shr
cmp
popf
xchg
test
shl
jp
xor
mov
inc
mov
pop
popf
in
pop
jmp
cli
aas
int3
iret
loope
lret
inc
shlb
xor
or
cmpsb
push
or
inc
repz
out
sti
cmpb
cmc
xchg
push
mov
repnz
test
push
adc
or
pusha
call
lods
clc
jae
leave
mov
add
int3
cmpsb
cmp
push
ret
cmpsl
xchg
push
popa
pop
imul
xchg
out
sbb
jge
fwait
ja
ret
dec
xor
cmpb
cmp
cmp
mov
ret
xlat
cmp
inc
xor
mov
les
mov
cmp
fwait
addl
pop
xchg
enter
cmp
ret
subb
in
sahf
rolw
jmp
nop
xlat
pop
xchg
sub
imul
ljmp
jmp
scas
negb
test
fs
push
sub
lahf
in
lea
negl
or
test
mov
xchg
xchg
jmp
shrb
sub
cmp
lret
xchg
mov
mov
xor
fwait
out
fmul
mov
mov
sub
cmp
cmp
loop
xchg
lock
enter
in
inc
or
aas
ja
adc
rcl
call
and
mov
int3
fstpt
or
jl
das
repz
je
ret
fidivs
xchg
xor
sahf
and
jg
sti
cmp
push
mov
cmpsb
mov
arpl
jmp
mov
pop
xchg
xor
data16
sub
jecxz
jae
inc
shll
mov
in
iret
mov
jbe
clc
inc
ret
in
sarb
sbb
add
cmp
adc
roll
adcb
and
sti
jg
outsl
adc
jl
or
outsl
sbb
dec
es
push
jge
sub
push
mov
pop
test
cmp
ja
sbb
dec
or
outsl
ja
rolb
fisttpll
lds
mov
mov
stc
bound
cmp
xor
jae
sbb
push
das
mov
push
repz
jno
push
sbb
mov
sbb
imul
pop
jecxz
mov
std
test
mov
data16
sbb
xchg
xlat
int3
adc
lods
and
pop
mov
addr16
xchg
hlt
cmp
hlt
mov
test
mov
add
cltd
testb
cmpsl
cli
aam
or
cmpsl
ja
push
stc
shrb
outsl
aas
divb
inc
jns
out
shrl
jbe
inc
test
push
dec
test
out
out
push
push
push
mov
jns
cmp
xor
vpmacswd
movsb
push
jl
jg
icebp
mov
out
sbb
daa
pop
mov
dec
ss
pusha
pop
pop
inc
or
aas
scas
in
sbb
inc
andb
jbe
jmp
cmp
dec
pop
adc
sbb
stc
pop
sbb
mov
or
cld
movsb
mov
les
lock
push
cmp
rorb
pushf
pushf
mov
xor
fsubs
out
xchg
int3
sbb
imull
inc
pusha
xchg
adc
jg
popf
insb
fs
and
mov
int3
push
push
sub
jge
inc
out
pusha
jl
addb
mov
aam
adcb
and
sbb
mov
push
cli
sarl
aas
idivl
popa
mov
stc
scas
shlb
in
leave
sbb
inc
mov
xchg
jns
data16
popa
aad
mov
into
dec
jae
ret
movsb
leave
cmp
outsl
rorl
mov
pop
add
daa
shlb
fiadds
fisubrl
mov
popa
aam
sti
lahf
mov
dec
add
lods
sub
xchg
inc
ds
xchg
stos
or
xor
movsl
mov
cmp
jnp
adc
lret
rcrl
pop
iret
xchg
mov
jl
stos
and
mov
lds
sub
xchg
sahf
xchg
out
push
jbe
and
pop
add
sub
pop
cmpsl
xor
sub
cs
repz
adc
xchg
aas
add
xchg
mov
cmc
push
xor
scas
cltd
bound
inc
ret
movntq
and
xor
test
add
cmpsb
or
add
scas
in
mov
rcr
fdivr
xor
and
jns
xor
call
jp
fwait
in
xchg
out
dec
ds
rcrb
sbb
cmp
in
mov
cmp
or
jae
enter
inc
fnsave
cli
sub
ret
loope
pop
cwtl
fsubs
xchg
and
or
cs
lods
mov
in
mov
test
jmp
fdivrs
xchg
test
add
mov
notl
out
sub
jl
push
dec
test
xor
cmp
or
mov
jne
test
mov
mov
push
movsb
rorl
mov
ret
std
jbe
push
leave
cmp
add
dec
cmp
mov
jge
rolb
and
xor
stc
mov
into
mov
push
add
push
adc
jns
in
pop
pinsrw
jle
sbb
cmp
fadds
arpl
mov
xor
les
cmpsl
fcompl
enter
loope
shl
outsl
xlat
ret
mov
adc
mov
ljmp
xchg
in
popa
adc
dec
inc
pop
cld
stc
jp
xchg
shrl
stc
scas
pop
out
pusha
sar
pop
mov
xchg
jg
test
sbb
jnp
xchg
mov
xchg
push
test
sbb
pop
sub
adc
ret
or
loop
mov
out
outsl
out
aas
shr
or
mov
fs
and
jns
stos
or
loop
stc
mov
pop
jecxz
ja
loop
icebp
dec
data16
pop
testb
test
jae
jno
add
scas
les
enter
jnp
sbb
insl
mov
sbb
test
and
xor
rol
lods
xor
enter
rcrl
sahf
xor
popa
sbb
mov
hlt
rcrb
push
loop
out
cwtl
test
mov
fwait
pop
pop
pushw
imul
out
dec
cpuid
mov
lods
ret
xchg
idivl
outsb
fstl
jns
icebp
jns
ja
mov
jg
mov
mov
out
ds
cmpsb
sub
mov
inc
push
push
cmp
lret
in
jnp
push
and
scas
xorb
cmc
fwait
int3
cmc
jl
jae
cmc
dec
pop
inc
repnz
cld
pop
dec
shl
out
push
ja
test
repz
mov
add
cmp
xchg
mov
ljmp
push
xor
movb
mov
fndisi(8087
mov
pop
mov
or
dec
add
xchg
out
rclb
cmpb
jne
rol
iret
out
test
push
arpl
dec
xor
add
xor
lret
sbb
sahf
and
pop
push
jecxz
and
pop
jp
jecxz
mov
and
mov
mov
mov
sbb
sub
push
cwtl
jnp
imul
scas
push
fs
sar
shrl
pushf
cwtl
addb
push
ds
ja
pop
cmp
in
andb
mov
pop
dec
cmpsb
and
cmp
cmp
test
adc
incb
int3
lds
addr16
jns
mov
icebp
mull
sbb
ficomps
xorl
test
inc
div
xchg
fsubs
xchg
xchg
pop
outsl
test
inc
std
movsl
mov
xchg
xchg
jns
dec
xor
outsl
sbbl
dec
add
fcmovbe
xchg
dec
mov
aad
and
adc
xchg
aaa
and
fstps
les
idivb
pop
test
cmp
push
in
push
inc
fidivrl
jb
loopne
push
mov
jnp
mov
xor
cmp
leave
lea
fnstsw
mov
insl
pusha
loope
rcll
cld
adc
adcl
cmp
loope
ljmp
mov
xchg
xchg
adc
jmp
xor
cmp
dec
rorl
sub
mov
dec
hlt
cmp
in
push
cli
mov
js
add
add
and
push
out
jns
scas
addb
sbb
push
test
nop
sub
xchg
shll
shlb
aam
mov
mov
imul
adc
jecxz
dec
push
fwait
xchg
mov
fiaddl
jno
in
add
mov
arpl
xchg
jp
xor
inc
sbb
ja
pop
mov
jns
shll
cmc
mov
push
lock
sbb
add
mov
dec
jg
test
fwait
inc
cmp
cmc
imul
cmp
push
bound
jl
sti
insl
je
out
mov
hlt
mov
and
dec
pushf
clc
sbbb
in
setge
ss
sbb
xchg
sarl
lahf
jp
insl
bound
jl
inc
pop
xor
inc
fs
xchg
xor
jbe
out
outsl
cmp
aaa
mov
jl
aam
add
stc
lock
xor
es
inc
mov
mov
cld
cli
fiadds
sub
psubw
loop
test
sbb
loop
sub
add
insb
jmp
xchg
push
jmp
fsubrl
add
cmp
push
xchg
push
cmp
divb
loopne
sub
movsl
jo
outsl
xor
cmp
xchg
pusha
ljmp
push
sbb
pop
push
jle
dec
sti
and
daa
scas
scas
add
movsb
shll
inc
iret
stos
test
cmp
mov
stos
das
cmpsb
sbb
mov
fimuls
cmpsb
pop
in
jl
jmp
sbb
clc
push
xchg
inc
xor
or
add
or
or
xchg
enter
mov
imul
daa
jecxz
dec
out
repz
dec
cmpsb
mov
pmulhw
xchg
enter
inc
cmp
fisttpl
fdivrs
test
and
test
int3
stc
js
xchg
dec
stc
loopne
mov
jp
lcall
push
bound
rcll
imul
and
ja
adc
orb
out
xor
pop
dec
lahf
fcmovnbe
aas
movsb
les
movsb
loopne
lock
pop
test
int
adc
cmp
dec
pop
inc
add
into
jo
mov
xchg
fstl
and
out
push
dec
nop
popa
add
jo
and
add
mov
sbb
pop
push
mov
and
xor
cltd
cmp
movb
adc
ret
push
mov
sarb
and
pop
xchg
push
imul
sub
mov
or
pop
xor
out
sbb
movsl
and
scas
add
lock
aas
lods
daa
mov
mov
xchg
pop
and
push
stc
movb
sub
mov
lds
add
push
sub
dec
clc
loop
sahf
ja
mov
bound
test
fs
lods
jp
cmc
lds
xchg
sar
fnstcw
mov
enter
stos
xor
movsb
call
mov
adc
andb
mov
mov
sub
push
and
cmp
scas
mov
jnp
lcall
cmp
cmp
cmp
cmc
mov
sti
adc
lock
insb
pop
adc
cltd
mov
movsl
sbb
imulb
push
ds
adcb
ja
call
inc
mov
sbb
or
es
add
ss
pop
push
out
test
outsb
jp
addr16
inc
mov
cmp
add
xchg
repz
xor
xor
shrl
stc
ss
lds
je
in
negb
loop
jbe
sbb
cwtl
lods
or
cmp
mov
add
push
notl
cmp
push
xor
je
or
in
push
ja
and
xor
xchg
pop
sub
pop
jp
push
in
in
pusha
into
les
fnstenv
xchg
icebp
in
test
push
call
xor
fs
cld
lcall
fldt
pop
lods
mov
mov
sbb
lret
test
mov
js
sbb
lret
cltd
mov
push
decb
dec
lret
and
je
stos
or
xchg
sahf
mov
movl
je
xchg
and
mov
pop
or
jge
sti
mov
and
or
cmp
fstpl
scas
mov
lret
sarl
out
xchg
test
mov
mov
mov
add
mov
pusha
push
xchg
repz
loopne
clc
addb
xchg
mov
pop
fadd
fwait
xor
testl
adc
out
cmpb
test
sbb
test
jne
mov
mov
cli
test
push
mov
pushf
xchg
test
rorb
cltd
push
lret
jae
inc
mov
cmpsb
fucomi
mov
cmp
sub
insl
fsubrs
orl
xchg
xchg
sarb
outsb
out
mov
cmp
out
dec
rclb
loop
les
es
jecxz
sbb
xchg
fcompl
nop
or
imul
loop
mov
test
jl
sbb
out
scas
jg
movsl
adc
dec
jle
cmpsb
ficompl
repz
and
jmp
or
out
fcmovnb
sub
dec
jl
bound
xchg
push
mov
mov
mov
clc
cltd
xlat
sarb
ljmp
xchg
cmp
cmpl
rcl
fildll
pop
xor
pop
xchg
xor
aas
ljmp
sbb
mov
stc
add
inc
jnp
test
mov
mov
cwtl
cmp
cmp
jb
pop
repz
jb
pushf
gs
dec
fwait
pop
pop
xchg
and
jp
or
jne
outsl
xchg
out
xchg
sbb
push
jae
xchg
es
fsts
ret
loop
ja
out
add
int3
sbb
test
scas
dec
cmp
lahf
mov
cmp
xchg
pop
pusha
adc
iret
clc
flds
fld
adc
jle
aam
lcall
xchg
dec
fsubrl
in
push
push
test
adc
mov
cmpsl
inc
add
out
sbb
test
sti
scas
mov
xchg
dec
push
cmpsl
adc
jle
aas
mov
inc
or
in
inc
icebp
xchg
pop
jne
icebp
jae
mov
arpl
iret
loopne
loop
pop
jb
clc
into
rdtsc
xlat
in
add
notl
jp
add
xchg
loopne
jle
addl
xor
cmpsb
les
mov
add
test
mov
rol
jmp
jnp
sub
frstor
mov
and
sar
std
push
cmp
or
ret
push
jg
shlb
outsl
mov
sbbl
mov
shlb
out
xor
lcall
mov
test
iret
fbld
adc
push
mov
mov
dec
in
adc
cmc
negb
test
mov
or
mov
das
mov
out
xor
fwait
mov
xor
xchg
cmc
das
in
xchg
push
stc
test
cmp
je
push
ss
mov
aaa
cli
dec
sbb
jmp
jnp
xor
cmp
mov
sub
sub
aam
outsb
jo
pop
test
es
cld
psrlw
in
jno
imul
push
sub
and
rcl
sub
mov
or
gs
sbb
shl
roll
popa
push
hlt
pop
xchg
daa
push
push
xchg
into
adc
add
xchg
mov
cld
fisubrl
xchg
adc
push
into
xlat
imul
xor
fnstcw
cmc
cmp
jp
jne
bnd
divl
ror
sub
icebp
cmp
fistps
sub
add
hlt
fs
lods
mov
ss
nop
scas
inc
cmovge
cld
dec
sbb
add
push
test
out
xchg
pop
mov
mov
and
out
lock
pop
je
dec
jnp
testb
addr16
dec
add
mov
inc
shlb
jp
push
aad
sub
dec
mov
ds
ret
jp
aad
mov
cmp
fmuls
sti
fstl
mov
loopne
leave
jnp
sti
cmp
inc
out
push
out
lcall
outsl
xchg
jecxz
cmp
jmp
inc
xor
lret
adc
xchg
clc
push
divb
cmp
mov
out
rcll
push
and
cmp
push
sbb
mov
mov
dec
bound
mov
pusha
lea
and
mov
mov
mov
mov
xorb
leave
inc
lea
xchg
add
stos
jl
sti
jo
rclb
pop
mov
addr16
arpl
out
mov
and
sahf
xchg
in
cmp
xchg
dec
jg
adc
sbb
outsl
or
add
stc
das
fsubr
sub
jecxz
cmp
jg
out
scas
cmp
pushf
and
and
xchg
push
push
cwtl
cmp
lret
and
mov
pusha
nop
out
cmp
es
lahf
test
movsb
cmpsb
inc
rorl
icebp
xchg
add
push
xor
pop
and
test
mov
out
cmc
push
imul
popa
push
jbe
push
movsb
push
pusha
ljmp
gs
pushf
rcrb
outsb
mov
or
sub
jbe
add
pop
sub
cmp
and
out
or
fdivl
rcll
call
idivl
push
xor
inc
hlt
shrb
jnp
cmp
mov
pushf
ss
xor
xchg
push
mov
inc
xchg
popf
ret
test
jae
daa
xor
insb
in
cmc
dec
data16
dec
scas
xor
dec
adc
cmp
cmp
mov
xor
mov
in
cltd
movb
notl
jp
test
shrb
cmp
xor
repnz
insb
cwtl
cmp
mov
rorb
adc
mov
mov
icebp
in
mov
cmpb
lock
add
sub
loop
push
dec
mov
out
sub
mov
ja
sbb
push
and
out
test
xchg
add
scas
dec
lods
push
jp
mov
add
inc
mov
mov
cmp
fdivr
nop
in
mov
cwtl
inc
inc
dec
xchg
ficompl
jns
arpl
outsl
into
dec
and
and
shrb
roll
inc
lods
enter
mov
loop
shrl
pop
and
jns
lahf
mov
push
jo
rolb
fs
mov
bts
popf
neg
aad
fwait
mov
out
xchg
cmp
arpl
into
inc
test
adc
outsb
loop
pop
mov
stos
and
inc
dec
and
adc
hlt
jge
lock
pop
push
jge
push
sbbl
push
mov
push
mov
push
mov
push
les
rcrb
iret
test
rolb
rcr
stc
aas
and
dec
test
pushf
es
jno
sub
xor
in
dec
or
clc
lea
xchg
pop
leave
adc
push
mov
aaa
stc
test
mov
mov
int3
push
in
setne
repnz
cwtl
aas
xchg
push
inc
dec
outsl
out
fdivs
in
loop
fwait
jae
adc
daa
add
int3
and
loopne
xchg
mov
sbb
cmpsb
lahf
inc
sbb
pop
cmpsl
pop
arpl
fs
lods
mov
lea
lahf
pop
and
jo
addr16
xchg
sub
and
jnp
adc
and
cld
popf
adc
xchg
xchg
lahf
mov
popf
out
inc
sti
adc
xchg
movsb
jecxz
insb
sbb
out
xor
sbb
ja
cli
mov
dec
clc
xor
jbe
xor
pop
push
mov
cmp
sbb
dec
js
cmp
mov
or
mov
and
rclb
or
inc
or
cmpsb
lahf
cmp
out
mov
cs
mov
popa
test
gs
inc
xor
lds
dec
or
loopne
stc
jmp
mov
push
pop
xchg
mov
je
adc
cmp
xchg
push
in
aam
sub
and
cmp
mov
pop
loop
sbb
inc
pop
xor
test
ret
sub
fabs
or
rclb
sub
test
xor
xchg
rcll
decl
iret
inc
mov
fcmove
sbb
lods
test
out
lock
adc
fldl
xor
sbb
mov
in
inc
insl
pop
push
inc
mov
pop
jmp
mov
mov
iret
loopne
dec
mov
ja
test
in
fsubrs
ja
cmp
adc
lret
inc
pop
ficoms
daa
adc
gs
inc
dec
fwait
dec
fisubl
sub
addl
or
cmp
dec
add
notl
mov
loopne
cli
mov
xor
fucom
jl
in
xchg
adc
mov
out
subb
jl
pushf
lods
leave
sti
cmpsb
in
lods
xchg
pop
dec
into
mov
mov
sub
scas
add
sbb
divb
negb
lret
stos
int3
mov
mov
or
int
sub
or
sub
pusha
jmp
push
inc
cltd
xchg
dec
mov
enter
jecxz
dec
push
insb
ret
inc
cmp
out
sti
lods
mov
imul
sbb
hlt
push
xchg
cmp
mov
push
jnp
cld
push
and
daa
jo
popa
mov
movsb
inc
cs
aas
jno
popw
pushf
mov
adc
out
push
jmp
fcompl
mov
out
jnp
loopne
mov
mov
inc
add
lcall
inc
in
lock
movsb
cmp
out
pop
add
adc
push
cs
test
cmp
jl
cmp
mov
dec
xor
jl
mov
imul
mov
sahf
dec
fstpt
fcmovbe
jnp
in
xchg
jge
lods
mov
jle
iret
cmpb
dec
jle
loopne
sub
shrb
and
rorl
mov
pop
jb
push
aas
lahf
lock
imul
adc
loope
mov
add
inc
or
or
dec
lcall
push
test
lret
cmp
push
mov
out
mov
shl
shlb
cmp
push
fldl
cli
xor
cmc
jmp
in
test
push
arpl
xchg
notl
repnz
hlt
mov
ret
xchg
stos
push
adcb
lret
cmpsl
test
adc
mov
test
push
mov
and
inc
cmp
test
aad
sbb
push
mov
sbb
pop
dec
out
and
in
inc
dec
mov
out
mov
add
loop
cli
push
push
arpl
push
adc
js
fnstenv
cwtl
inc
setp
fisubs
sub
sbb
shll
pushf
fsubl
sbb
ror
push
push
adc
jmp
into
sbb
adc
mov
popa
inc
jge
clc
dec
imul
cmp
xor
inc
sub
dec
jle
or
jno
cmp
les
dec
addr16
sub
xchg
pusha
ljmp
jns
rcll
lods
mov
mov
add
mov
mov
js
xchg
sti
leave
mov
pop
or
cmp
out
fsubs
shl
rcrl
idivb
addr16
lahf
setbe
lret
mov
inc
xchg
push
mov
xchg
insb
pop
xor
in
lods
lahf
and
sbb
popa
movsl
xchg
inc
fdivl
test
and
jg
dec
fimull
xor
adc
jns
pop
js
sub
xchg
mov
mov
mov
popf
pushf
jae
or
jg
mov
cs
mov
add
mov
shlb
sbbb
cmp
rcrl
push
pop
fisubl
jmp
cmp
test
fildl
andl
push
pop
out
arpl
fwait
ror
popf
xor
jl
imul
fidivrs
outsl
gs
mov
dec
mov
lret
xor
rolb
pop
sarl
cmp
std
sbb
adc
inc
ja
shrl
repnz
out
notl
mov
sbb
test
cmpxchg
xlat
sbb
popa
cmp
sub
out
test
les
push
out
sub
add
push
out
sub
addr16
mov
mov
stc
into
add
sarl
iret
loop
jae
cmp
sub
pushf
aad
dec
mov
ss
fistpl
xchg
sbb
dec
sarl
or
bound
rcrb
xorl
xchg
jl
adc
cmp
jmp
js
xchg
call
lock
cmc
inc
xchg
nop
adc
hlt
xchg
in
mov
and
mov
aas
ja
loope
iret
sahf
ret
mov
push
psubd
lea
aas
push
cwtl
pusha
mov
loope
bound
mov
lods
sub
aam
adcb
xchg
mov
jno
xor
mov
push
ja
pop
jg
popa
xchg
pop
xchg
sarb
cmp
out
pusha
stc
add
xor
daa
insl
fbstp
add
and
xor
mov
out
mov
jge
cmc
jne
clc
pop
outsl
jns
rcll
dec
popa
out
sbb
sbb
adc
adc
mov
test
sbb
in
add
xor
int
in
ljmp
test
push
imul
xchg
fidivrl
push
sbb
jnp
add
subb
mov
out
int3
or
lcall
dec
adc
pop
lret
and
pop
mov
xchg
push
test
mov
push
cmp
xchg
mov
mov
sbb
repnz
orb
push
mov
emms
test
outsl
xor
lds
es
pop
punpckhbw
es
cmp
mov
jg
sbb
or
gs
sahf
stos
or
jg
push
push
jb
popa
repnz
mov
push
mov
les
lds
and
aaa
mov
test
cmc
or
lcall
cmp
inc
sub
mov
fimuls
adc
mov
popf
mov
cltd
xor
test
shlb
out
mov
je
jl
arpl
xchg
aas
inc
mov
xchg
mov
mov
out
aaa
fildl
in
or
xchg
loopne
or
leave
in
insb
inc
mov
stc
sbb
or
xchg
mov
ss
sub
shlb
xchg
mov
popf
cmpsl
sub
inc
or
xchg
xor
shll
pop
test
lds
divb
jb
out
stc
fwait
xchg
addr16
pop
dec
repz
mov
jg
xor
xchg
sub
mov
das
cs
push
mov
mov
push
leave
add
iret
xchg
jmp
pop
aam
sub
leave
dec
mov
out
cwtl
mov
dec
and
mov
sub
mov
or
loopne
adc
imul
mov
mov
sbb
jo
lea
cmp
sub
mov
push
inc
or
or
sub
je
jb
test
fsubl
pop
mov
data16
test
dec
popf
jl
mov
pop
xlat
lret
mov
subl
pop
add
jns
push
cmp
arpl
cmp
xchg
sahf
test
leave
lcall
xchg
cltd
inc
pop
adc
cld
and
in
cwtl
jb
bound
xchg
sti
lea
xchg
fs
dec
adc
mov
sbb
sbb
mov
loop
jle
dec
icebp
and
scas
ja
fildll
add
mov
in
inc
fstps
sahf
scas
lods
inc
in
test
rclb
and
outsb
and
das
mov
out
inc
add
xchg
add
lahf
aaa
mov
lock
mov
insl
sarb
daa
pop
pop
lret
cs
scas
pop
std
xlat
dec
or
enter
push
dec
xchg
inc
out
popa
test
outsl
lahf
inc
ja
adc
adc
jg
notb
inc
jno
fisubs
out
lock
ficomps
call
and
mov
scas
pop
xchg
jo
fwait
sbb
pusha
mov
or
mov
jmp
in
out
clc
mov
sub
outsl
add
shrl
pusha
lret
pusha
cs
test
ljmp
jge
push
xlat
test
nop
push
cmp
sbb
out
push
mov
ja
xchg
test
idivb
test
mov
incb
fwait
jne
dec
dec
stos
push
push
lahf
clc
adc
je
ficoms
xor
sbb
pop
scas
stos
mov
jle
adc
mov
sbb
test
outsb
scas
jns
sub
sbb
dec
popa
insl
test
faddl
leave
xchg
enter
sub
arpl
jno
sub
and
mov
dec
pusha
incl
in
mov
xchg
movsb
arpl
push
jae
push
mov
dec
add
mov
lock
out
mov
jmp
mov
pop
pushf
pop
lcall
cwtl
pusha
mov
jecxz
les
add
fnclex
incl
jae
dec
push
icebp
popa
into
pop
add
popf
aam
out
mov
sbb
hlt
add
sbb
imulb
pop
out
lea
aad
sbb
js
xchg
pusha
sarb
cmpsb
add
lahf
jne
xchg
sub
mov
and
add
inc
lds
cmp
cmpsl
imulb
aas
jmp
xchg
push
push
loope
and
dec
jb
jo
cmp
je
test
push
mov
inc
cmp
notb
outsl
mov
ret
loop
mov
jo
les
sub
pop
ret
mov
movb
lret
adcl
push
pop
rcrb
dec
xchg
sahf
and
leave
dec
mov
inc
and
and
pop
xchg
notl
filds
sub
mov
cmp
es
mov
cmp
mov
mov
test
pop
rcl
add
insb
cmp
jae
sbb
test
pextrw
xchg
pop
mov
inc
jmp
ds
sbb
fdivl
pop
lret
fs
fisubl
sbb
mov
js
cmp
test
popf
fldenv
xchg
mov
imul
icebp
jns
dec
push
pop
stc
xchg
push
xor
test
pop
jl
cltd
rolb
inc
into
or
in
movsb
and
dec
mov
leave
mov
jg
mov
in
shll
test
addr16
int3
adc
or
repz
xor
xor
rclb
dec
rorl
popw
jne
scas
outsl
scas
adcl
inc
shlb
mov
and
lods
mov
ljmp
push
inc
ljmp
pop
push
dec
jmp
xor
aas
mov
shlb
xchg
adc
xchg
insb
pusha
in
cmpb
fs
jae
sbb
aas
daa
iret
and
lods
xor
lea
mov
aam
jecxz
cmc
rcl
jnp
mov
scas
sbb
inc
sub
xchg
rcrl
xchg
xchg
lahf
push
in
fwait
fs
dec
inc
or
mov
leave
push
jl
xchg
sarb
xchg
sub
je
stc
rcll
jae
in
adc
xchg
test
cs
mov
loopne
xor
jle
xchg
mov
ja
mov
cmp
or
xchg
cli
cmpl
lcall
push
test
xor
pusha
and
xchg
add
fisubl
push
mov
add
mov
int
in
mov
ja
test
xchg
ss
lret
int3
inc
es
stc
pop
add
mov
xorb
daa
mov
sbb
ds
push
fiaddl
ja
jge
push
loope
xor
xchg
jg
jecxz
push
sahf
js
dec
mov
or
dec
or
mov
test
jmp
ret
dec
fwait
inc
cmpsl
aas
push
int
sbb
aam
xor
test
jg
or
shrl
in
popa
fs
mov
mov
and
push
mov
scas
xor
adc
mov
add
sar
push
mov
jnp
loop
fs
or
fiadds
sti
xchg
shrb
ss
out
jo
sbb
fstpl
push
sub
dec
jmp
xor
add
es
xchg
inc
xlat
cmp
mov
push
aaa
adc
test
mov
cli
daa
shlb
cmp
cmpsb
punpckhbw
aam
cld
sbb
into
jno
fdivrl
rorb
add
jl
popf
pop
jnp
add
jp
outsl
popf
adc
sub
or
lods
test
dec
add
addb
push
xor
sbb
sbb
cmp
xchg
sub
mov
andb
jmp
add
fnstsw
sarb
imul
sub
cwtl
mov
push
mov
lahf
out
lods
inc
sti
cmp
mov
or
inc
pop
in
inc
cmpb
ja
cmp
xchg
and
mov
lret
mov
xor
imul
mov
or
pop
clc
add
cs
cld
mov
or
imul
xchg
jl
push
test
mov
out
and
jecxz
xchg
mov
pop
ja
sbb
addr16
rcrb
xchg
fmull
test
add
mov
mov
and
aas
add
sbb
adc
out
stos
sbbl
sub
lds
ds
add
repnz
in
xchg
sti
sti
mov
pop
pop
stos
fcmovnu
out
xchg
testl
push
xchg
testb
cmp
mov
mov
pop
ret
pusha
inc
testb
rcrb
filds
mov
loop
sahf
cmp
mov
push
shll
inc
shll
aam
test
shlb
or
mov
pop
add
outsl
loop
in
mov
fldt
sub
add
adc
add
xchg
out
and
sub
jae
mov
jns
push
scas
or
insl
fimull
pusha
cmp
cmp
mov
test
push
xorb
notl
popa
xlat
push
test
cmp
xor
cwtl
iret
sub
pop
mov
aas
xchg
xlat
fistps
loop
inc
mov
test
adc
mov
test
movsl
dec
sahf
in
test
mov
jo
and
mov
ja
xor
loope
lret
lcall
push
cli
ja
inc
push
and
pop
push
xchg
js
rolb
jno
jns
aam
in
dec
aas
mov
xor
cmp
fwait
mov
dec
mov
insb
mov
mov
dec
sbb
xchg
cmc
out
addl
xor
adc
in
mov
idivb
out
dec
cmc
pushf
ret
xor
mov
cmp
fldcw
dec
pop
xchg
mov
pop
push
test
xchg
dec
mov
push
xchg
sub
cmpl
ss
je
xchg
push
pop
xchg
xor
ss
cmpsb
stc
xchg
push
adc
sarl
xor
iret
outsl
es
in
mov
pop
mov
cmpsl
xor
addb
push
lods
mov
mov
cmp
in
xchg
xor
fisubrl
pop
rcll
roll
test
and
pop
fwait
loope
sbb
jbe
mov
push
fstps
pop
dec
les
arpl
xchg
xchg
cltd
fisubs
mov
cmp
or
cmp
cmp
mov
out
mov
dec
push
xor
fcomps
popa
cltd
mov
push
aad
bnd
inc
icebp
cmpl
mov
test
test
dec
aam
rcrb
out
insl
push
pop
xchg
pop
repnz
lahf
call
pop
jmp
into
adc
cmpb
xchg
xchg
test
adc
cltd
scas
add
cld
add
sarb
xchg
in
adc
sub
jecxz
lret
out
imulb
ja
push
mov
incl
push
sub
jg
jl
push
mov
lods
movsb
dec
sub
popf
xor
es
inc
jmp
loope
adc
mov
and
xchg
fcomps
aam
or
xchg
jbe
call
add
fisttpl
bound
adc
mov
xchg
and
int3
mov
mov
and
add
sub
aaa
cld
insb
dec
test
push
adc
cmp
adc
loop
pusha
out
xchg
bound
xor
insl
imul
and
out
mov
enter
xchg
rolb
cmp
sbb
cmpsb
std
sbb
rorl
in
stc
into
rorl
cmp
fs
ret
fnstsw
hlt
xchg
sub
or
ret
lock
mov
jns
gs
sub
test
and
repz
addr16
dec
imul
mov
addl
adc
das
xor
mov
stos
out
mov
xchg
sbb
aas
mov
mov
push
jns
or
adc
lea
pop
push
or
adc
mov
xchg
push
dec
sbb
mov
jg
mov
loope
shll
js
adc
je
or
adc
xorl
xchg
xchg
pop
and
dec
lret
inc
bound
test
mov
or
loop
mov
mov
push
dec
or
sub
int3
inc
mov
sahf
loop
mov
and
jl
mov
mov
and
lods
mov
push
push
movsbl
cmpsb
in
dec
mov
ret
push
mov
or
sbb
lahf
je
out
cmp
test
leave
inc
lds
roll
rcrb
lea
insb
push
mov
fimull
pop
mov
es
xchg
out
mov
insb
adc
sub
ffree
int3
and
rcll
dec
movsb
push
xchg
adc
mov
std
cmpl
out
lods
dec
cmp
rcrb
out
adc
imul
in
sub
jno
cmc
mov
mov
lahf
std
cwtl
cmp
xor
lret
test
pop
push
stc
xchg
stc
pop
addl
dec
cmpsb
insl
pop
cmp
je
mov
inc
decl
jl
imul
imul
sub
es
test
jno
arpl
adc
xor
cmp
divb
sub
dec
adc
sti
jne
push
imul
aaa
sub
loopne
jge
sub
or
outsb
cmc
fst
int
bound
outsl
cmp
add
cwtl
test
lods
xorl
mov
scas
mov
pusha
or
push
fcoml
aaa
mov
jle
pushf
fimull
dec
xchg
data16
sbb
popa
dec
pop
push
cltd
mov
lahf
jne
fnstenv
in
push
ja
dec
mov
sbb
jge
sbb
lcall
ljmp
mov
mov
add
xchg
das
movsl
jmp
test
repz
fcompp
sbb
sti
xchg
out
aam
sbb
adc
xchg
addr16
sbb
pop
pop
cmp
cmp
stc
movsb
jle
cmp
push
cmc
pop
adc
jnp
push
cltd
cmpsb
push
sahf
sbb
inc
jnp
mov
add
add
fwait
cmp
dec
scas
and
push
aaa
jo
cmp
or
mov
fwait
mov
cmpsl
xor
xchg
loopne
pop
in
test
popa
pop
lods
lock
pushf
xor
scas
and
loop
cmp
les
xchg
xchg
fwait
adc
test
sbb
push
sbb
adc
aaa
sub
xor
fcmovnbe
sbb
andb
je
sub
mov
loop
rcrb
dec
cmp
add
push
or
bound
cmp
pop
pushl
xchg
xchg
repnz
ss
repz
push
das
lret
pop
mov
lahf
js
add
loop
push
fdivrs
cmpsl
jmp
mov
pushf
lcall
test
pusha
ret
test
xchg
stos
xchg
pusha
cwtl
sub
vmread
test
incl
movsl
sub
ljmp
sub
sbb
pop
sbb
sbbb
adc
out
sub
xorb
aas
rcll
mov
dec
out
lcall
outsl
out
daa
mov
nop
push
inc
jmp
ljmp
xchg
cld
subb
enter
mov
mov
fwait
mov
mov
loope
ljmp
push
jge
push
sbb
out
fdivrs
dec
mov
icebp
test
fs
dec
pop
aas
xchg
shlb
cmp
addl
push
loop
mov
stos
dec
mov
mov
sbb
pop
out
fisttpl
cltd
push
test
cltd
fistpl
inc
jno
or
mov
cmp
inc
fwait
rorb
in
std
jbe
push
or
lea
insl
and
test
dec
mov
sub
cmp
xchg
jmp
les
push
arpl
jae
push
pop
rorb
fld
cltd
nop
mov
cld
dec
stc
push
jb
cmp
or
mov
push
dec
cmp
xlat
push
aas
dec
loop
adc
in
test
mov
sbb
dec
rorb
jmp
out
repnz
mov
stc
cld
rcll
sub
adc
testl
aad
cwtl
xor
cmp
inc
int
jne
test
scas
add
lea
inc
ret
into
out
xor
fst
push
sti
dec
dec
adc
push
int3
add
insb
xchg
jne
mov
call
decb
data16
sub
mov
gs
sub
or
rcrb
test
jno
pusha
mov
mov
ja
incb
xchg
in
mov
andl
add
in
xor
test
pop
xlat
inc
dec
cli
test
sti
sbb
mov
sahf
xorl
pop
and
mov
sahf
ret
push
pop
dec
cmpl
xchg
int
cmp
lcall
aaa
mov
mov
test
adc
fistps
data16
sub
pushf
movsb
dec
mov
fs
pop
mov
movsl
inc
lahf
sbb
cmp
push
cmp
pop
jp
je
jp
push
push
pop
sub
iret
sbb
stos
jnp
in
fisubrl
push
js,pn
mov
add
leave
std
push
cli
sub
sahf
or
out
add
stc
ja
je
mov
push
fs
test
in
dec
or
out
movntq
fiadds
test
dec
or
cmpsb
dec
xor
movsl
fwait
in
push
xchg
and
inc
in
lds
dec
jecxz
mov
scas
in
jl
fisubrs
and
xor
sub
mov
ret
mov
mov
aam
ret
mov
jmp
add
cmp
test
adc
dec
jp
pusha
dec
rclb
pop
push
subl
in
frstor
mov
mov
cmc
popf
add
mov
lahf
pop
pop
test
push
sub
mov
mov
ljmp
testb
sti
mov
xchg
movsl
cs
sub
repnz
ds
or
sub
cmpsl
scas
mov
sub
and
or
mov
cmp
icebp
in
bound
fdivrl
jg
mov
inc
cmp
pop
nop
sub
imul
adc
in
fnsave
mov
stc
sbb
int3
lea
mov
push
adcl
popf
inc
mov
popa
push
leave
adc
adcb
cmp
inc
inc
cwtl
roll
xchg
arpl
test
jnp
ja
repnz
std
in
dec
jo
and
sbb
jmp
xchg
dec
adc
cmp
inc
add
jmp
ret
test
push
dec
and
add
orb
dec
icebp
xchg
sub
xchg
xchg
dec
or
adc
stos
mov
clc
fs
push
pushf
adc
add
js
add
test
loop
rol
stc
imul
lea
sub
push
mov
rclb
mov
cmc
push
shl
fsubrs
or
loope
sbb
or
sbb
ss
fdivrl
enter
jecxz
cmp
jecxz
push
push
es
imull
popa
repz
adc
pop
addl
cld
test
inc
pusha
mov
pop
cli
dec
fists
cmpsl
lods
sub
loop
pop
push
pop
dec
xchg
jl
mov
sbb
pop
cmp
or
std
insb
fsts
fld
ljmp
lods
stc
add
adc
mov
test
fsubrl
xor
sub
cmp
in
loopne
cmp
push
test
xor
jmp
mov
fistl
jmp
mov
aaa
mov
cmpb
inc
test
daa
dec
iret
push
rcl
fsubrs
mov
xchg
lds
ds
iret
pop
jo
add
aaa
loop
std
and
cmp
dec
imul
sbb
xchg
sbb
mov
push
xor
popa
rorb
sarl
sbb
and
cli
dec
ss
mov
xor
ja
insb
push
popa
xchg
and
push
xchg
jns
jo
jecxz
jno
xchg
pop
pop
jmp
out
jl
addb
iret
xchg
cmp
jae
repnz
pop
repz
add
mov
xchg
mov
dec
ja
cmp
mov
pushl
mov
out
lock
and
repz
cltd
je
xor
cwtl
mov
leave
mov
out
les
xor
repz
into
push
xchg
jo
repz
mov
cmp
add
jno
outsl
dec
pop
js
insl
pop
rclb
fcmovnb
mov
mov
jl
inc
xchg
repnz
jecxz
test
dec
es
mov
jge
out
cmp
movsb
ja
cmp
adc
mov
popf
pop
fcmovnbe
jbe
sbb
xor
pop
jge
mov
sarl
lcall
pop
and
push
xchg
scas
pop
jae
adc
mov
pop
test
xchg
push
and
xor
popa
xchg
jle
lcall
cmp
jnp
push
popa
aas
mov
dec
icebp
dec
into
aad
dec
imulb
das
push
cmp
pop
fnstenv
stos
mov
mov
sbb
mov
jp
pop
aad
jecxz
push
jae
pop
and
pop
fmuls
xor
mov
push
dec
xchg
sbb
sbb
xchg
pop
mov
js
cmp
dec
test
dec
push
add
push
mov
in
rclb
lahf
daa
and
push
iret
push
jnp
lds
outsl
mov
dec
dec
or
or
mov
pop
je
movsl
mov
adc
xchg
dec
mov
cmp
or
mov
cld
aas
fistpll
mov
xchg
and
cs
xchg
shll
lds
jg
mov
inc
popa
mov
push
je
jle
lods
inc
sbb
add
add
notl
scas
daa
add
shl
mov
mov
xchg
into
scas
xchg
ds
push
cmp
sbb
or
cld
mov
cmp
sbb
mov
xchg
movsl
aad
jno
ds
test
sbb
xor
xor
inc
in
inc
data16
aaa
mov
loope
stos
fucomp
xor
ja
push
add
mov
js
xchg
pop
scas
ljmp
cmp
mov
scas
push
adc
mov
pushf
jge
iret
xchg
dec
iret
mov
sbb
int3
jecxz
stc
js
inc
adc
dec
test
xor
ret
xchg
cmp
shr
ss
jb
pop
aam
int
popf
nop
jle
fcmovnu
repz
popl
mov
dec
rcrl
test
or
pop
pop
pop
adc
mov
xchg
xchg
test
add
and
add
cmc
andl
pushf
sub
mov
lock
scas
popf
xchg
std
repnz
out
cmp
out
fdivr
push
shrl
test
or
or
pop
cmpsb
push
or
inc
idivl
out
and
les
xor
lea
or
aad
xchg
mov
mulb
jl
test
popa
sti
sahf
mov
fisttpl
pop
xchg
add
sbb
jb
inc
test
mov
ja
lahf
add
mov
xchg
dec
add
sarl
adc
dec
cmp
sub
nop
xlat
test
int3
mov
inc
ljmp
loopne
jp
ret
xor
cli
arpl
push
push
or
ret
adcb
out
dec
lods
mov
jnp
scas
nop
pop
xchg
fisttpl
mov
clc
sub
or
fisubs
cmp
leave
xor
cwtl
adc
cmp
xchg
lcall
pop
push
jnp
mov
ficomps
cmc
mov
push
add
ja
in
xchg
inc
fcoml
daa
mov
rclb
pop
mov
push
jl
test
and
popf
jae
sbb
mov
push
lcall
xchg
mov
pop
cmpsb
inc
and
imul
add
out
sub
inc
cmp
sti
repnz
dec
xor
fistps
add
pop
stc
movsl
pop
jbe
stos
out
cmp
mov
repz
fwait
test
aam
xchg
mov
mov
and
cmc
rcll
or
js
ret
loopne
xor
pusha
and
test
test
loope
test
pop
dec
add
cmp
and
loopne
cmp
cmc
iret
loope
cmp
jbe
sbb
mov
jo
inc
fcomps
iret
xor
and
push
cltd
mov
fistps
mov
mov
arpl
and
test
mov
xchg
lcall
data16
xor
loop
minps
mov
push
test
mov
stc
sbb
rolb
fdivr
push
adc
xchg
mov
std
in
test
inc
iret
xor
lret
add
xchg
jns
push
xchg
outsl
aas
sub
insl
mov
sbb
xchg
jp
and
pop
arpl
sarl
pop
scas
add
push
or
sbb
call
or
mov
xor
and
popa
in
and
push
adc
pop
xchg
ljmp
adc
and
testl
sahf
shrb
sub
jl
popa
cmp
loop
mov
jge
adcl
shrb
out
jl
fwait
sub
test
loope
test
loop
pop
sbb
aam
cmp
inc
lds
jbe
pop
arpl
mov
es
xchg
push
adc
cmp
leave
shll
repz
push
add
cli
push
sub
pop
jl
frstor
jecxz
hlt
xchg
add
cltd
nopl
sbb
sub
lea
pop
jecxz
push
jo
xchg
ret
adc
jle
test
das
inc
add
xchg
sbb
fstpt
icebp
movsl
ja
stos
es
leave
aas
jne
adc
outsl
xchg
cmp
mov
imul
push
mov
inc
lahf
aas
sbb
or
cmp
xchg
xchg
clc
in
jbe
js
sbb
ja
mov
push
aad
or
pop
dec
gs
out
push
mov
ret
dec
icebp
inc
nop
mov
cld
stos
dec
shlb
popa
push
jo
into
insb
and
insl
imul
movsl
xchg
ret
add
xor
push
inc
outsl
jg
push
xor
loop
push
scas
pushf
out
sbb
ss
add
fdivrl
sahf
sets
mov
clc
mov
mov
int3
je
push
cld
cltd
and
repnz
test
add
mov
scas
xchg
movsl
icebp
dec
ss
push
mov
adc
lret
loop
fidivs
pushf
js
pop
mov
gs
push
ljmp
push
add
inc
fsubp
sbb
adc
jo
mov
mov
cmp
pusha
icebp
mov
mov
cld
pop
mov
mov
insb
lea
mov
mov
lds
nop
xchg
xchg
bound
icebp
sbb
sbb
lods
push
pop
loop
test
xor
push
pop
aaa
mov
dec
add
or
inc
cltd
ss
test
or
rcr
mov
bound
test
inc
call
mov
ret
pop
movsl
aad
in
lcall
add
dec
jp
loop
xor
dec
mov
mov
daa
dec
sub
sbb
push
xchg
jl
sbb
xor
jnp
movsb
mov
enter
or
lret
popf
mov
mov
xchg
dec
ret
inc
out
out
shl
out
xchg
sub
mov
lcall
or
sub
and
adc
adc
pushf
idivb
mulb
pushf
inc
pop
and
or
nop
xchg
shr
inc
into
pop
in
out
sbb
mov
jne
jmp
lods
idivb
adc
ljmp
push
fldt
mov
lea
daa
jbe
jle
xchg
xchg
test
in
iret
xor
stos
ljmp
pop
mov
xchg
ds
sbb
or
arpl
mov
movsl
stos
xchg
jg
sahf
icebp
mov
jl
dec
ja
sbb
fnstcw
addr16
fwait
mov
sarl
adc
lock
sbb
mov
push
mov
ret
xchg
out
not
adc
mov
mov
sbb
lock
fsubs
inc
iret
movsl
lds
xchg
push
mov
pop
mov
xchg
add
jle
push
pop
sbb
dec
mov
stos
jbe
sbb
cmc
inc
leave
ss
mov
ss
xor
bound
out
or
nop
cli
mov
jge
jp
xor
scas
mov
loopne
push
std
fdiv
bound
jo
test
in
xchg
xor
inc
out
and
or
hlt
sub
cltd
cmc
imul
bound
dec
ss
cmp
lcall
pop
cmp
ret
xor
xchg
mov
pusha
dec
jb
out
pop
add
sbb
jp
mov
or
add
mov
sub
ss
adc
cmp
rol
jl
mov
xor
dec
push
jmp
inc
or
testb
popa
sub
and
xchg
xchg
mov
push
es
mov
adc
ret
mov
sub
pop
sub
push
inc
pop
out
dec
or
aaa
mov
test
loopne
repnz
mov
lods
xor
out
sbb
mov
xchg
and
mov
jns
sbb
jno
xchg
cmp
xor
push
xor
sar
pop
or
push
cmp
and
call
mov
mov
test
out
cli
push
mov
fcmovnb
xor
pushf
add
jg
or
fcoml
clc
jl
arpl
lahf
inc
faddl
mov
cmp
xchg
pop
mov
out
addb
lock
mov
es
jmp
adc
in
cmp
hlt
cmp
fildl
or
xchg
sub
push
push
and
jmp
mov
jg
mov
in
lods
inc
cmp
outsb
xorl
mov
icebp
jge
push
and
in
pop
xchg
dec
lret
pop
cmp
dec
std
inc
lods
mov
pop
andl
or
or
push
aaa
in
push
pop
mov
iret
sbb
jmp
xor
push
pop
call
cmpsb
xchg
mov
add
dec
lods
inc
shlb
xor
sbb
outsl
repz
or
mov
scas
rcr
lds
cmp
sbb
xchg
cmp
cli
mov
mov
or
data16
xor
das
jecxz
pop
data16
cmpsl
pop
ret
jmp
pop
xchg
pop
test
test
push
or
lea
cmp
sbb
pop
xchg
popa
jge
out
out
sub
and
fisubrl
mov
lods
test
sbb
loop
lahf
testb
adc
mov
push
div
inc
aad
pop
int3
sbbl
cs
mov
push
sub
and
punpckhdq
shll
push
inc
mov
shrb
icebp
iret
jmp
cs
jb
sbb
jae
adc
movsb
es
ja
les
mov
xor
sbb
fisttpl
in
push
inc
cmpsl
test
mov
mov
pop
mov
sahf
clc
sarb
mov
mov
pop
sbb
push
jmp
cmp
daa
push
xchg
stc
inc
js
daa
xor
inc
inc
xor
sub
cmp
or
push
incb
xchg
cs
cmc
sbb
fs
cs
pop
test
xchg
adc
jo
or
mov
cli
fidivs
jmp
jg
mov
mov
inc
pop
adc
adc
jnp
cmp
pop
inc
fistl
inc
mov
leave
xchg
or
sahf
or
in
icebp
js
pushf
cs
xor
xor
jge
out
and
test
jae
orb
mov
xchg
aad
sbb
nop
test
pop
es
loope
inc
ja
sbb
daa
mov
scas
mov
inc
cmp
xchg
mov
cmp
xchg
out
cmpsl
inc
lcall
mov
adc
xchg
cs
fdivrl
pop
xchg
pop
insl
cmp
mov
mov
jecxz
fs
inc
test
movsb
div
xor
cltd
and
and
lock
adc
mov
fdivrp
jge
xchg
repnz
int3
mov
ds
pop
xor
aad
xchg
in
jno
loope
fdivl
mov
cld
popa
fwait
xor
cmp
scas
or
jp
mov
jmp
add
fildl
xor
cmpsb
testb
out
test
lods
and
cmp
fildl
push
and
int3
rclb
pusha
int3
cmpsb
pop
inc
js
or
int3
pusha
and
add
popa
sbb
add
push
sbb
add
cmp
jp
addb
mov
test
push
sarb
sub
cmpsb
imul
xor
dec
test
enter
jae
xchg
adc
lret
test
dec
out
movsb
popa
insb
jmp
xor
imul
mov
leave
dec
lods
or
pop
test
fcomps
cmpsb
clc
xlat
push
andl
cmp
push
enter
rcl
xchg
fsubrp
ret
push
xchg
sbb
imul
cmp
cld
iret
pusha
add
mov
push
leave
lahf
mov
pop
cmp
ror
push
adc
les
push
inc
sbb
mov
insl
idivl
mov
in
rclb
pop
inc
pushf
loop
cld
clc
mov
sbb
cs
imul
stos
mov
lea
pop
ljmp
add
enter
fs
and
bnd
cmp
xor
out
and
out
cmp
clc
or
or
inc
xchg
mov
mov
sbb
scas
mov
push
data16
jp
popa
inc
std
jnp
mov
ja
sbb
nop
inc
sub
gs
and
adc
push
sub
mov
mov
es
mov
scas
in
jp
cli
jl,pt
ljmp
enter
shrl
inc
roll
and
or
enter
xchg
add
mov
jb
add
adc
and
inc
inc
sub
insb
ljmp
cli
rorb
shlb
iret
inc
inc
xchg
xlat
jg
xchg
push
imul
into
mov
jmp
push
into
jns
mov
lds
cmp
leave
adc
shl
pushf
jbe
ficoms
sbb
jnp
dec
adc
xchg
sbb
ds
mov
and
icebp
jecxz
fistl
in
je
sbb
cmpsb
fmull
icebp
push
or
adc
or
int
enter
shll
daa
lods
pop
pusha
mov
jge
xchg
stc
es
mov
push
fsts
sub
cmp
cltd
jmp
fucomp
test
push
fwait
adc
jge,pn
xor
loop
popf
jp
shrl
scas
lds
clc
daa
pop
push
cmpsl
mov
mov
push
push
mov
xchg
ss
sbb
cmpsl
xchg
sbbb
sbb
sub
mov
inc
push
std
call
in
je
xchg
mov
inc
inc
rclb
addb
mov
cmp
pop
and
jae
add
dec
or
rep
mov
mov
cmp
pop
cmp
pop
btc
or
cs
inc
cmp
cmc
cmp
loop
mov
inc
div
add
xchg
sbb
pop
out
scas
lods
sbb
cs
xchg
clc
and
sub
movsb
lahf
inc
xchg
cld
jmp
adc
jae
test
repz
lret
push
les
and
add
fildll
daa
push
es
pop
mov
pop
dec
inc
push
faddl
add
mov
popa
test
sub
mov
cmp
sbb
in
add
in
jmp
push
inc
mov
insl
std
stc
pop
in
add
mov
mov
inc
inc
pop
push
sahf
add
lea
pusha
mov
adc
add
or
mov
mov
cmp
int3
loop
mov
movb
cmpsb
adc
xchg
jg
mov
mov
dec
in
cmp
add
dec
jo
andl
mov
aas
add
in
insb
cmpsb
aaa
sbb
insl
jnp
adc
cmp
xlat
or
test
jge
popf
popa
repz
ss
xchg
mov
cmp
pop
mov
pop
sbb
dec
aam
lods
test
xchg
ds
mov
ret
pop
xchg
sbb
mov
fmull
sti
out
orl
shll
gs
xchg
sbb
and
mov
test
sbb
scas
adc
mov
pop
cmpsb
cmp
leave
dec
nop
dec
fisubl
xor
xor
test
adc
adc
bound
lahf
ror
mov
ja
test
pushf
out
pop
loop
fists
repnz
push
call
ss
xchg
add
rorl
push
pop
sahf
test
sub
stc
psraw
in
adc
jg
test
loope
int
ss
shll
movsb
push
push
jo
xlat
push
aas
jmp
cmpsb
jg
iret
pop
xor
pop
pop
add
jae
xchg
int
add
daa
mov
loope
push
loop
dec
test
cmp
or
test
loope
xor
mov
xchg
mov
or
sbb
mov
push
stc
mov
cmp
in
mov
lret
out
insb
and
jne
test
aam
pop
icebp
add
loop
scas
popa
and
inc
daa
push
shlb
pop
fwait
pop
sub
stos
fsubrl
in
imul
lock
scas
push
iret
cmp
adc
clc
dec
xchg
mov
and
mov
sbb
or
sub
add
lret
xlat
sar
adc
jno
stos
xor
mov
lcall
lret
mov
add
inc
es
jecxz
xlat
cwtl
pop
xchg
ret
add
cltd
ret
dec
adc
movsb
out
jnp
add
mov
je
loop
and
test
dec
xchg
xchg
pop
addb
in
adc
cmp
cmp
cmp
test
out
int3
mov
sbb
jmp
cmp
inc
arpl
into
lock
adc
inc
jecxz
push
xchg
adc
or
mov
dec
xchg
cwtl
fstps
aas
jb
pop
loop
fwait
jbe
add
jl
add
test
cli
fsubrl
cltd
es
and
jp
cmc
xchg
add
mov
aad
pusha
pushf
sbb
sbb
mov
js
je
push
mov
jne
insl
push
push
ds
mov
xchg
mov
ljmp
jge
inc
int3
sbb
or
jno
es
sbb
adc
pop
rclb
cmpsb
push
jbe,pn
test
dec
push
pop
cwtl
enter
cmp
pop
out
and
jo
loop
cmpsb
sti
cmp
mov
in
dec
dec
in
outsl
mov
sbb
icebp
stc
subb
cs
sub
idiv
dec
or
jg
cwtl
js
inc
stc
idivl
jg
cmp
pop
clc
dec
or
dec
popf
fildl
mov
dec
jle
dec
fistpl
xchg
icebp
aas
sti
fwait
sub
cs
dec
inc
fcoml
mov
negl
mov
icebp
jl
out
xchg
mov
pop
les
xchg
rclb
rcrb
ret
pop
nop
push
popa
inc
mov
mov
or
xor
mov
dec
aas
xchg
jbe
ret
ret
lods
cmc
xchg
and
out
pop
cltd
fs
cwtl
add
push
test
rcrl
shlb
push
into
mov
leave
mov
push
iret
faddp
pop
push
xor
mov
movsb
fsubrs
sbb
add
lret
stos
add
cli
mov
xor
cs
cld
dec
and
arpl
sub
stc
in
jns
pushf
add
xchg
mov
xchg
mov
scas
inc
ror
add
pop
lods
xchg
mov
sbb
ficompl
insb
idivl
mov
pop
mov
ljmp
dec
sahf
fadds
in
dec
pop
push
or
cmp
sbb
in
inc
gs
test
xrelease
jno
mov
pop
push
cmp
ret
lds
stos
push
push
and
lahf
mov
test
mov
jecxz
ss
addl
jle
or
sbb
sub
add
dec
mov
pop
pop
mov
or
lds
jmp
stos
inc
lahf
sub
pop
jmp
mov
sub
je
stc
pop
push
jmp
fmul
loopne
xlat
adc
sub
jmp
flds
and
jns
cmpsl
dec
push
ja
inc
std
mov
bound
std
stos
pop
sub
decl
sbb
cwtl
push
push
add
leave
testl
sub
mov
push
add
inc
add
imul
leave
mov
lahf
cmp
fimuls
mov
push
sub
or
push
cltd
and
jle
jnp
or
jmp
and
out
push
enter
fildll
cmc
bound
cmpsb
lret
add
cwtl
sbb
mov
cmp
jmp
mov
mov
mov
add
cmp
xchg
cmp
adc
in
sbb
cltd
xor
shl
mov
insl
in
repz
fwait
inc
lea
shrb
jmp
mov
js
icebp
mov
xchg
movsb
fadds
mul
dec
test
scas
popa
push
xchg
dec
mov
push
sbb
test
dec
in
arpl
pop
or
mov
mov
xchg
cld
dec
sahf
inc
sub
mov
dec
mov
mov
ret
mov
mov
inc
aas
add
divb
sub
mov
aas
and
dec
fwait
cmp
jmp
test
adc
out
push
aam
cmp
dec
rclb
mov
push
mov
mov
fwait
mov
push
dec
stc
aad
es
and
leave
movsb
int3
cmp
mov
test
arpl
mov
rorb
push
lret
jl
pop
mov
into
mov
sti
add
scas
clc
fwait
sub
cmc
inc
fiadds
jmp
or
cmc
adcb
pop
dec
mov
into
xchg
adc
xchg
jg
xchg
lods
add
pushf
sub
mov
mov
rolb
mov
fldcw
call
cmp
xchg
or
push
push
jg
lahf
ficomps
nop
jmp
cmp
arpl
mov
xchg
mov
in
in
cmpsl
ret
inc
sbbl
repz
shlb
stc
scas
or
sub
loope
cmpsb
pusha
pop
mov
movsl
add
loope
push
sbb
mov
xchg
dec
sub
xchg
adc
inc
and
in
sub
pop
sbb
ret
sbb
mov
je
pushf
lds
lods
sub
aad
push
not
sub
mov
stc
aad
cmp
mov
push
jne
mov
popf
dec
push
mov
sbb
filds
jg
shlb
int3
jbe
dec
inc
outsb
test
xchg
adc
dec
fnstcw
pop
fcoms
adc
jbe
imul
add
loop,pt
loope
lods
pop
decl
xchg
test
pop
iret
out
pop
addb
daa
pushf
rorl
jnp
xchg
cmp
lahf
cmp
lods
sbb
sub
cmp
mov
lret
mov
lret
inc
rclb
inc
cmc
mov
mov
cmp
shlb
xor
loope
int3
jge
loope
aam
xchg
out
lock
out
dec
imul
aas
mov
pop
xchg
sbb
adc
sub
dec
daa
inc
mov
push
and
loop
pop
scas
std
dec
xor
sbb
int3
aaa
pop
jb
stc
xorb
xchg
sahf
nop
je
dec
test
test
and
adcl
mov
mov
mov
andl
push
pop
or
adc
xorb
rol
cmp
inc
insb
insb
xchg
loope
mov
cmp
and
mov
cmp
push
ds
lcall
ljmp
xor
and
divl
sbb
sub
dec
ret
sahf
mov
sub
mov
add
rclb
in
inc
xor
fwait
jne
das
xorl
lcall
fstps
mov
dec
fildl
jns
cmp
fadd
jb
push
sub
or
cmp
in
add
fcmovnbe
mov
fsubl
clc
rolb
out
adc
daa
mov
xchg
mov
pusha
sub
test
scas
movsb
jge
stc
push
daa
sub
add
and
pusha
inc
sub
imul
in
aam
push
ss
nop
cs
mov
shrb
push
cltd
xchg
xchg
jl
mov
int3
cltd
jb
ja
adc
mov
sub
or
mov
push
dec
test
loope
mov
mov
into
fisubs
ffreep
leave
fwait
xor
loope
scas
inc
xchg
test
mov
xchg
inc
push
mov
inc
xor
js
repz
pushf
out
add
inc
sbb
test
rorb
aad
dec
loop
insb
arpl
sbb
xchg
sub
enter
loop
test
cmp
or
cmp
dec
or
adc
push
das
cltd
and
jl
cwtl
test
in
push
repnz
subb
mov
shrb
ss
dec
mov
daa
sbb
dec
ret
mov
inc
push
int3
movsl
mov
ja
mov
xor
lds
lcall
push
push
js
idiv
xchg
hlt
lods
pop
jmp
xchg
mov
or
ja
ds
decl
mov
sub
out
ret
cmp
out
repnz
test
iret
lock
and
nop
test
mov
jbe
lret
dec
jmp
call
add
push
test
adc
push
in
adc
test
imul
jnp
or
sub
jle
loop
jne
int3
xor
in
popa
pop
pop
mov
mov
mov
mov
push
leave
cmp
lds
dec
xchg
into
adc
jg
shrb
sub
lcall
insb
sub
cmp
xorb
mov
xchg
sub
jg
xor
push
xor
mov
movsl
inc
inc
out
rorl
cwtl
xor
pop
loope
cmp
js
arpl
lods
or
lea
test
inc
rclb
xchg
lea
mov
or
push
lcall
add
or
es
xor
mov
idivl
pop
xor
out
lahf
push
pushf
out
cmp
mov
es
sbb
adc
pop
jmp
jne
or
mov
mov
inc
cmp
lret
inc
sbb
sbb
xor
cmpsb
je
mov
xor
test
mov
xchg
pop
rorb
add
cwtl
mov
mov
rolb
xchg
in
mov
mov
cwtl
and
fneni(8087
and
mov
shlb
push
jb
das
push
pusha
stc
cmp
mov
test
imul
inc
mov
sbb
sub
sub
jmp
sub
sti
xchg
sub
push
sbbb
mov
ljmp
and
loop
faddl
push
cli
mov
lods
popa
leave
xor
lods
lds
cmp
mov
push
jg
cmp
shrl
cmp
xor
lods
out
movsl
jecxz
xchg
fdivs
mov
xchg
es
movsb
dec
xor
in
jb
mov
data16
insb
test
mov
mov
fistpl
sub
pop
rorl
fdivr
dec
arpl
inc
cmp
gs
cmp
push
fucomp
out
into
push
movsl
jmp
clc
mov
test
mov
ret
jmp
leave
inc
jae
mov
pop
and
fidivrs
inc
dec
adc
std
aam
ret
vmwrite
xchg
push
cmp
lahf
dec
mov
loopne
adc
jle
mov
test
pop
addl
xor
push
je
pop
xchg
push
cmp
sub
rcll
sub
xchg
pop
cld
cmp
dec
popa
subb
jbe
sbb
aad
mov
dec
iret
fwait
pop
mov
orb
imul
inc
sub
add
jns
aad
ja
test
inc
and
jmp
jns
cli
push
jp
inc
pushf
loop,pn
push
imul
mov
je
cmp
mov
pop
in
cli
test
xchg
je
out
loop
aad
jbe
in
push
cmp
jnp
out
xor
inc
xchg
or
mov
dec
psubd
int3
cmp
sub
mov
cmp
mov
sub
das
and
pop
fs
and
outsb
xor
push
add
jl
aaa
shl
inc
out
adc
mov
movsb
dec
and
aam
push
std
inc
ret
rol
sub
into
lea
imul
fcmovnu
pop
cmp
lods
dec
sti
sti
mov
xor
inc
negl
pushf
add
enter
out
pop
dec
mov
insl
test
xchg
je
jl
or
xor
je
jg
xchg
xor
adc
lods
push
out
mov
inc
repnz
jmp
and
aaa
iret
push
adc
and
or
add
cmp
arpl
sbb
scas
jbe
pop
mov
mov
inc
dec
cmp
xor
push
shlb
adc
call
test
pop
scas
nop
addr16
xchg
or
dec
aam
mov
or
jle
in
and
bound
test
es
test
int
arpl
mov
dec
pop
test
fsubp
shrb
adc
cwtl
ja
push
pop
aas
mov
xchg
insl
pop
mov
dec
mov
stos
sbb
push
cs
pop
mov
mov
xchg
data16
in
shlb
jno
mov
sbbb
xchg
les
lods
nop
jae
mov
xchg
sti
and
cld
adc
cltd
dec
dec
out
loopne
adc
sbb
mov
add
inc
iret
lds
jle
jg
test
test
leave
lods
sbb
fidivrs
dec
scas
loop
push
cmp
mov
cli
jge
rolb
add
inc
mov
push
int
test
dec
sbb
jg
cmp
mov
out
test
pmaxsw
lahf
mov
fists
xchg
pop
lret
and
mov
mov
dec
jl
dec
loopne
xor
jmp
outsb
xchg
pop
lods
inc
fistl
loope
push
xchg
mov
and
pop
inc
push
cmp
das
leavew
in
mov
xorl
sub
mov
hlt
xor
cmc
iret
inc
jbe
or
pop
sbb
pop
daa
xchg
jge
and
mov
xor
mov
inc
cmpsb
cwtl
out
or
fs
int
xor
js
mov
filds
cmp
sub
and
pop
or
add
out
out
int3
or
mov
push
push
pop
addl
fbstp
jl
adc
mov
jmp
popf
sub
movl
jo
and
adc
cwtl
fcmovu
rcll
or
cltd
mov
cmc
out
cwtl
fstpl
pop
or
ja
cmp
adcl
pop
mov
mov
jae
lock
adc
test
pusha
aad
fcoms
cwtl
es
or
aas
sti
mov
out
movsl
ds
push
xor
sbb
pop
adc
add
call
movsb
jmp
ds
add
mov
add
add
add
ss
inc
mov
push
or
test
inc
jns
cld
pop
push
out
cmp
faddl
mov
mov
repnz
hlt
out
les
xchg
fsubs
adc
mov
orl
inc
xchg
insb
es
fwait
push
xchg
test
and
mov
dec
rorb
mov
xchg
or
and
cmpsb
inc
jmp
vlddqu
xchg
dec
jecxz
inc
repnz
nop
cmc
dec
lods
xorb
cli
jecxz
mov
and
and
jno
out
sub
inc
push
into
test
cmp
aas
jo
insl
cmc
sbb
jns
idivl
mov
jmp
and
leave
jecxz
cmc
rorb
xchg
clc
xchg
mov
inc
xor
xchg
jp
je
imul
push
add
loop
fnstcw
add
adc
adc
jp
test
jnp
and
das
test
jmp
inc
or
in
xor
jo
sbb
rorb
dec
dec
sahf
sub
and
test
stc
fcmovb
in
adc
pop
cmc
and
addr16
and
cmp
or
popf
dec
into
lcall
pusha
push
mov
idiv
push
int
rclb
test
andl
fldenv
out
add
aas
cli
jge
mov
out
xchg
inc
push
test
mov
mov
push
roll
hlt
decb
push
dec
cs
adcl
mov
idivl
leave
pop
xchg
pop
ret
push
js
or
fisubrs
and
and
lods
cmc
inc
jne
push
or
inc
jge
xchg
xor
jnp
mov
sti
in
pop
aas
in
push
vmovlps
xchg
xchg
rcll
xchg
mov
sub
cmp
test
xorb
push
popa
mov
mov
or
adc
addb
mov
push
mov
fdivrs
inc
int3
imul
jne
fstps
cmp
movsl
fdivrl
aas
sarb
sbb
rcll
mov
add
aaa
iret
and
leave
push
sub
pusha
in
or
cmp
xor
cmp
pop
cmpsl
mov
out
jne
fisubs
push
jmp
mov
scas
out
test
inc
into
sahf
stc
jns
fidivs
jmp
in
adc
rol
xchg
pusha
sbb
inc
mov
mov
fistpll
stc
call
xchg
inc
subl
xadd
mov
jbe
data16
mov
test
imul
adc
sbb
jl
jl
xchg
das
xchg
pop
pop
sbb
enter
frstor
data16
out
and
js
cmp
dec
mov
out
pusha
nop
aad
lea
xchg
pop
sbb
pusha
or
sbb
mov
or
ja
out
mov
lods
inc
jnp
xor
gs
leave
hlt
and
pop
or
adc
mov
addl
mov
and
aam
aaa
mov
xchg
dec
sbb
test
das
rcr
push
in
test
jmp
out
cmp
neg
loop
mov
pop
sub
sbbb
fldl
jle
aas
jl
das
jge
xchg
mov
dec
mov
test
add
mov
inc
push
loope
sbb
cwtl
addb
lock
lcall
sub
std
jmp
in
sbb
pop
push
adc
and
inc
movsb
ja
out
jmp
sbbl
jecxz
nop
pop
test
repnz
test
add
out
jae
ss
xrelease
inc
inc
jg
cli
out
mov
test
add
out
cmpsb
fs
int3
inc
jp
adc
xchg
pop
cmp
adcb
xchg
repnz
rcll
js
lock
sub
test
pushf
int3
xchg
jge
leave
xchg
dec
sub
mov
push
pop
pop
pop
xor
loop
arpl
jg
cmp
jmp
add
into
iret
cmp
rcrl
lea
xchg
loope
cmc
sahf
cmp
pop
xor
insl
add
inc
dec
out
cld
andl
sub
repnz
rcl
xor
jge
loope
inc
mov
test
test
adc
js
in
rclb
aaa
dec
pop
out
shll
xchg
outsb
cmp
push
cmpsb
sub
ret
inc
inc
fwait
xchg
arpl
es
mov
xor
fs
int3
cmp
movsl
lret
lret
out
test
inc
jnp
dec
or
stos
mov
in
pop
leave
push
sub
test
or
inc
repnz
push
fbld
icebp
mov
push
es
outsb
dec
inc
out
mov
dec
and
cmp
call
sbb
div
jne
out
mov
sub
adc
inc
sbb
pop
xchg
mov
lods
pop
sbb
jb
or
out
nop
leave
lret
sbb
jo
es
adc
lods
sahf
or
cmp
lret
loope
movsl
and
loopne
mov
fsubrl
out
dec
fisubrl
scas
xchg
sub
add
jb
test
adc
xor
fwait
sbb
pop
leave
mov
ljmp
dec
out
dec
out
and
aaa
dec
mov
cmpsb
pushf
subb
inc
dec
xor
add
mov
sbb
sub
lret
test
add
xchg
orl
ds
cmp
jl
test
adc
repnz
out
insb
mov
xlat
dec
dec
test
in
fwait
or
out
ror
cmp
shlb
cmp
xchg
js
or
es
xor
movsb
fisttpl
and
rcll
scas
or
out
and
int3
stos
outsl
jecxz
mov
push
in
scas
nop
lods
sbbl
cli
mov
xchg
or
mov
imul
les
enter
adc
add
in
and
adc
js
pop
inc
cmp
cmp
fldenv
lods
or
xor
and
xchg
push
test
xchg
cmpsb
xchg
fsts
xor
daa
repz
stos
add
fisttpl
xor
cs
mov
cltd
or
movsl
and
xchg
lcall
sub
cltd
mov
inc
daa
jle
and
jbe
and
and
dec
aad
into
popa
cmpsl
cmp
cmp
dec
pop
push
push
sbb
fucomi
and
inc
xchg
dec
jg
sbb
xchg
mov
aad
mov
std
in
push
lahf
sbbl
mov
std
push
clc
loop
insl
cmp
aas
into
sub
mov
in
xchg
cmc
fstpl
jns
mov
xchg
lds
dec
dec
in
pushf
dec
icebp
jns
loope
xchg
or
cltd
pop
hlt
int
cmp
pop
test
mov
mov
pop
sbb
dec
mov
cmp
xchg
rorl
scas
pusha
sub
mov
cld
push
aas
mov
je
push
mov
pop
aaa
mov
test
insb
xor
mov
das
xor
out
dec
cmp
push
scas
stc
mov
cmp
xchg
jmp
cwtl
inc
leave
adc
mov
xchg
andb
jmp
push
test
lods
cmpsb
sbb
mov
divl
xabort
pop
gs
adc
cld
fdivr
push
jbe
movsb
mov
pop
mov
sarl
xchg
shrl
movsl
xchg
aam
sub
xchg
scas
inc
les
mov
xor
scas
mov
in
mov
test
inc
test
push
ja
adc
adc
xor
addl
sbb
into
jo
cmp
and
ret
cltd
cmp
push
je
enter
iret
js
aaa
mov
mov
shl
les
rorl
inc
in
cmpsl
adcl
jne
sub
fwait
inc
and
dec
mov
jb
iret
xor
fcomi
mov
mov
pushf
jg
fdivrl
out
ret
or
sbb
mov
mov
stc
scas
push
mov
dec
pop
inc
arpl
lods
ret
sub
mov
loopne
xor
dec
mov
push
not
pop
pushf
dec
mov
and
mov
sar
jge
sbb
cmpsl
enter
pop
jae
pop
jnp
dec
jl
xchg
fs
mov
pop
iret
or
decl
mov
xchg
mov
push
outsl
mov
or
nop
ja
cmp
dec
mov
rcl
cmc
xchg
inc
fldenv
add
push
jb
mov
xchg
adc
fucomi
lea
ljmp
scas
ss
les
add
popl
mov
and
add
aad
jp
fsts
mov
jg
pop
xor
and
add
decl
divb
cmp
cmp
stos
flds
push
mov
mov
lret
test
or
lods
ficompl
lcall
out
and
pushf
icebp
mov
cmpsl
cwtl
xchg
imulb
sub
mov
xchg
movsl
xchg
or
pushf
sbb
lret
sbb
mov
pop
adc
pop
xor
add
mov
sbbb
adc
test
fnstcw
sbb
inc
mov
test
xor
js
adc
repnz
lret
fcoms
fadds
imul
xor
mov
jns
jg
push
mov
stc
iret
mov
inc
and
test
mov
test
fstpt
movsb
or
mov
mov
inc
push
sbb
sti
pop
inc
jg
in
outsb
pop
dec
sbb
mov
jp
or
notl
dec
mov
mov
adc
cmp
push
xlat
adcl
sti
sub
mov
mov
xchg
movsl
sti
cld
aas
fs
jg
sub
pusha
cmp
hlt
repnz
movsl
inc
pop
xchg
outsl
daa
out
lock
mov
sbb
inc
push
mov
inc
sbb
call
jp
data16
mov
addl
xchg
sarl
add
mov
sbb
xchg
mov
cmp
mov
pusha
imul
lea
inc
scas
test
jp
xchg
loope
jb
xchg
jg
lcall
movb
adc
mov
inc
mov
and
cmp
or
cmp
mov
mov
sub
ljmp
lahf
rolb
test
adc
xchg
cmpsb
outsl
inc
andl
test
idivb
pusha
mov
or
movsl
mov
xchg
adc
out
lds
and
popa
mov
mov
sbb
ja
or
roll
arpl
roll
sbb
mov
cltd
sbb
pop
xchg
inc
sub
int3
jne
xchg
jmp
cs
jno
ret
mov
cmp
sub
cli
arpl
add
pop
test
insl
add
aas
push
leave
testl
jns
les
sub
fwait
scas
mov
bound
scas
lds
add
fcoml
dec
aam
out
cmp
in
icebp
popa
in
clc
dec
inc
add
fcoml
inc
jp
lahf
pusha
add
adc
add
ficoml
movsb
dec
daa
addr16
cmp
pop
daa
and
mov
sbb
cmpsb
testl
push
aas
fs
iret
mov
mov
add
jl
cltd
orb
and
pop
mov
add
pcmpeqd
push
xor
ss
add
mov
xor
pop
out
cmp
sbb
push
iret
mov
movsb
ret
daa
sub
arpl
inc
mov
jo
loope
mov
arpl
and
cmpsl
xchg
in
out
movb
ss
or
fimuls
adc
int
sub
pushf
aas
loop
insl
or
add
xchg
add
mov
sar
pop
xchg
leave
insl
pop
add
lock
xor
mov
lods
push
dec
cs
cmp
mov
push
xor
jne
pushl
pop
mov
je
jecxz
pushf
repz
test
int3
push
imul
mov
out
aas
adc
xchg
inc
fs
pop
xchg
sahf
jmp
jge
sbb
inc
test
std
sbb
test
push
icebp
add
jae
scas
cmp
adc
test
aas
mov
or
aad
mov
in
fiadds
in
adc
jbe
lcall
mov
pop
mov
es
mov
clc
int
js
out
push
push
push
call
in
stos
sub
or
sub
mov
out
in
mov
xchg
xchg
push
fldcw
lcall
push
lahf
call
mov
jle
pop
push
mov
xchg
mov
adc
sbb
mov
cmp
inc
stos
dec
adcb
shrl
jg
fnstenv
enter
pop
and
lods
jns
mov
add
xchg
mov
ret
and
lea
push
inc
addr16
inc
ds
cmp
in
in
xor
push
shrl
pop
test
aam
adc
enter
push
negb
idiv
test
mov
and
fisttps
data16
rolb
mov
sbb
push
jno
inc
dec
ja
int
cmp
xchg
adc
not
jle
test
xchg
mov
out
clc
xor
inc
pop
iret
bound
mov
xchg
pusha
mov
mull
aaa
iret
and
pop
adc
sbb
test
sub
into
lods
add
incl
stos
pop
sbb
inc
and
jg
push
xchg
mov
loop
dec
or
les
xchg
fisubrl
adc
mov
aas
sub
rcl
jmp
add
and
dec
or
cltd
int3
xchg
dec
rcr
test
mov
fwait
movsb
aas
fdivrl
sbb
sub
dec
inc
push
mov
popf
cmp
push
in
stos
pop
sub
pushl
xchg
jl
jp
test
in
daa
mov
jo
xchg
mov
iret
or
or
inc
gs
aam
pop
dec
push
or
mov
add
add
dec
sbbl
xor
jns
adc
mul
frstor
pusha
xor
jb
aam
jnp
pop
and
fldt
and
push
and
xlat
or
pop
and
cmp
inc
pop
imul
clc
or
adc
bound
add
and
fcomps
cmp
iret
add
fldenv
mov
add
arpl
movups
dec
aam
jl
inc
lods
cmp
dec
addl
jno
xor
ss
or
xchg
arpl
rolb
jle
or
jno
pushf
ret
inc
int3
xchg
fidivrs
adc
xchg
jbe
mov
lds
popa
pop
push
push
mov
fidivrs
or
sbb
xchg
dec
cmp
movsl
sti
fcoml
jo
xchg
add
dec
cmp
sar
into
sbb
test
gs
jl
gs
aam
shl
push
push
and
pusha
adc
mov
jne
jns
push
repz
dec
xor
mov
out
faddl
xchg
aad
mov
outsl
clc
bound
lahf
sti
xchg
jl
sub
int3
scas
imul
insb
shl
cmp
xchg
std
loope
mov
mov
mov
ljmp
sub
mov
loopne
ja
inc
pcmpgtb
lds
jmp
ja
cld
dec
xchg
out
out
test
popa
cli
dec
sub
mov
inc
nop
rorb
mov
xlat
test
fwait
xorb
nop
sbb
lds
sbb
xchg
jnp
pop
stos
pop
mov
cmc
jno
xchg
xchg
push
push
inc
add
push
and
in
loope
mov
xlat
cmp
mov
cmp
cmpsb
rol
in
mov
push
dec
loope
ds
or
push
cmp
call
adc
jg
es
cmp
cmp
mov
pop
adc
in
aaa
stc
shlb
cltd
scas
mov
sbb
test
cmp
inc
fdivl
push
lcall
repz
divl
xchg
mov
pop
dec
rolb
inc
pop
loopne
std
and
lock
out
repz
xor
push
push
mov
fmull
sbb
ss
aam
xor
cmp
and
ret
out
jg
inc
push
push
in
les
push
xchg
das
lcall
lret
lahf
aam
dec
adc
out
jmp
and
pop
and
push
sbb
inc
clc
mov
out
in
adc
cmovno
add
mov
data16
pop
test
in
push
push
sbb
lock
stos
xchg
dec
fyl2x
or
cmp
mov
xlat
mov
aam
loop
inc
sbb
enter
lret
pop
push
repz
pop
mov
xchg
pop
fsts
inc
inc
jno
inc
icebp
mov
inc
xor
pop
faddp
push
pop
out
jmp
xchg
pop
fldcw
fwait
out
push
cmp
cltd
xchg
data16
dec
and
and
xlat
imul
mov
dec
je
repz
cmp
jp
les
shr
loop
jecxz
or
jle
pop
lret
mov
jl
mov
push
inc
int3
mov
jnp
inc
inc
inc
pop
ss
jg
daa
mov
jmp
movsl
xchg
into
test
and
or
xor
mov
push
mov
movsl
or
out
mov
jb
mov
mov
pusha
sbb
xchg
push
xchg
mov
push
mov
dec
add
pop
cmpsb
je
xchg
out
push
mov
cwtl
out
pop
xchg
jne
pusha
mov
fs
sub
and
rcrb
sahf
iret
adcl
cmc
xchg
dec
mov
xchg
scas
xchg
je
shll
add
and
cmc
lods
and
je
mov
cmpsb
test
mov
xor
leave
jge
xchg
cwtl
cltd
adc
pop
mov
repz
and
test
pop
outsl
loop
cmp
or
fsubs
dec
mov
pop
or
lcall
mov
and
xor
sub
daa
leave
add
or
mov
lods
rclb
inc
push
test
push
xor
or
xchg
nop
sbb
idivb
pop
or
mov
dec
test
in
inc
mov
nop
jg
in
xchg
repnz
leave
inc
test
mov
shlb
and
in
pop
inc
fwait
out
hlt
mov
enter
repnz
pop
mov
lods
sbb
sbb
push
fsubl
call
lcall
cld
pop
mov
je
popf
pop
test
pushf
lret
push
bound
jno
sahf
xor
outsl
push
shlb
ret
pop
test
jno
jg
test
iret
lcall
jbe
bound
test
xchg
mov
movsb
ja
push
sbb
jbe
fwait
and
pushf
sbb
or
imul
enter
je
add
mov
jns
sub
pusha
test
inc
rcl
sbb
pop
or
ja
dec
mov
inc
xor
add
or
inc
adc
into
lods
imul
push
mov
insb
sub
xchg
and
out
xor
fcoms
ret
popl
push
mov
push
push
and
test
or
in
add
imulb
das
gs
pop
sarb
sub
popa
pop
leave
pop
or
xchg
mov
imul
push
aas
sub
mov
loop
ss
sti
sbb
dec
dec
aam
dec
in
in
iret
push
lcallw
fmul
into
jnp
in
dec
push
das
ljmp
sbb
mov
aas
ss
mov
jo
cli
pusha
scas
cmp
push
cld
pop
cmp
xchg
iret
rclb
cmpl
shrb
xchg
pop
daa
pusha
lods
gs
out
mov
add
decl
xorl
loope,pt
cmpsb
jns
mov
or
aam
stc
dec
out
jecxz
add
and
add
pop
cmpsb
shrl
pop
and
lcall
jns
sub
push
xchg
inc
xchg
aas
cli
daa
pop
fcomp
xor
push
add
pusha
in
int3
fstpl
aas
or
sbb
popf
xchg
outsb
lret
pop
jg
mov
jl
test
repz
and
in
xor
mov
icebp
adc
mov
and
jnp
in
mov
xlat
sub
mov
mov
dec
mov
jg
mov
inc
iret
inc
fwait
xchg
repz
lods
add
sub
cmp
jns
cmp
int3
or
fdivs
fbstp
icebp
mov
or
leave
cmpsb
add
iret
icebp
dec
pop
lcall
in
jl
stc
test
mov
sbb
sbb
xor
mov
mov
ja
movsb
in
incb
mov
add
js
daa
vpcomw
push
fdivrs
mov
xchg
push
or
cld
jnp
repnz
adc
sti
lods
adc
mov
sbb
dec
movsl
xor
adc
mov
test
sahf
or
stc
inc
adc
cmp
xchg
imul
xor
orl
cmp
bnd
data16
je
cmpsb
cmp
xchg
ljmp
sub
repz
fisttpl
jns
lods
pushf
xchg
outsb
leave
insb
mov
ja
mov
jge
or
push
jge
push
inc
inc
sbb
and
xchg
inc
inc
or
pop
pop
sti
mov
test
dec
loope
mov
divl
or
sbb
out
addl
or
inc
adc
pop
fisubs
iret
xor
and
in
cmpsb
addr16
adc
mov
orl
cmp
out
ss
ss
mov
imul
add
rcrl
mov
adcl
jge
and
pop
rol
negb
xchg
mov
jg
mov
inc
sahf
jo
mov
mov
cmp
dec
inc
out
imul
ret
movsl
icebp
lret
pop
lock
fcomi
mov
cmp
adc
loopne
cmp
movsl
icebp
dec
xchg
adc
fstl
xor
sbb
shr
jg
lahf
xchg
je
push
inc
sbb
aad
das
outsl
scas
lods
mov
sub
aas
clc
daa
fcomip
push
push
movsl
loop
test
aad
pusha
sub
repnz
pop
cmp
lods
jl
in
xchg
sarl
add
rdtsc
add
or
in
push
push
pusha
xchg
and
dec
ss
sbb
es
mov
mov
out
jge
and
sub
pop
mov
jo
testl
jmp
test
les
jmp
popf
lcall
jo
xchg
imul
call
in
xchg
fstl
shlb
stos
daa
push
mov
loope
inc
pop
adc
outsb
mov
icebp
add
es
mov
jo
cmp
test
rcrb
jecxz
test
enter
cmp
clc
inc
fcomps
outsl
xchg
mov
dec
adc
cmp
faddl
pop
dec
push
mov
push
push
sbb
mov
mov
cmp
cmp
xor
lret
movsl
or
aad
dec
leave
jp
mov
cmp
sbb
icebp
mov
pop
test
jnp
sti
lds
pop
adc
jl
cmp
jp
push
fs
mov
mov
daa
cmp
mov
xchg
push
push
sub
pop
jp
out
out
dec
in
sbb
pop
faddl
push
imul
lds
sbb
xor
pop
mov
dec
sarb
test
fwait
test
and
mov
push
dec
lcall
push
sbb
ret
jge
mov
aam
in
hlt
push
in
sbb
jg
ja
inc
out
dec
xchg
push
xor
adc
mov
mov
push
mov
cwtl
mov
jbe
shll
cmp
pusha
add
dec
repz
ret
adc
test
es
xor
mov
add
adcl
es
xchg
inc
dec
or
pusha
or
jmp
mov
and
out
mov
xchg
decb
jmp
inc
mov
sbb
and
popa
sbb
sbb
lods
cmp
push
xor
pop
add
test
lock
xor
mov
cmp
cli
mov
fnsave
adcl
aas
mov
xchg
jp
push
pop
icebp
xor
sbb
pop
pop
mov
shrb
jns
mov
cmpb
sub
sti
cmpsb
or
xor
or
andl
and
push
jnp
fabs
add
sub
cmp
fildl
dec
or
pop
notb
stos
out
mov
out
into
test
test
sub
sub
rclb
sbb
ds
lea
lods
xchg
push
out
xchg
sti
mov
xor
xor
call
xor
je
or
mov
cmp
jmp
push
push
or
es
push
xor
push
stos
dec
ja
adc
es
test
fidivs
in
mov
mov
rolb
sahf
sbb
xchg
ss
or
cmpsb
pop
fst
and
ja
fdivrl
sbb
cmp
rorl
cmp
xchg
fwait
out
ss
xacquire
jp
ljmp
mov
ret
xor
mov
mov
in
ljmp
jns
stc
repnz
cmp
lods
repz
int3
popf
adc
xchg
xchg
push
bound
dec
jl
add
int
or
mulb
pop
pop
cmp
sbb
pusha
xlat
lods
and
jg
pop
insl
pop
inc
sub
push
movl
jge
inc
ffree
push
mov
out
sbb
popf
fs
test
test
jo
in
jp
inc
mov
inc
sub
or
insb
jo,pn
mov
js
popa
push
add
cmovae
inc
push
sbb
rcll
or
andb
jns
sti
rcrb
into
cmp
mulb
cmp
dec
fst
inc
fcomi
push
cmp
out
mov
jbe
add
arpl
xchg
out
lahf
xchg
inc
js
ret
cwtl
lds
movsl
mov
mov
add
mov
dec
into
test
fbstp
loop
sub
mov
in
push
test
lods
xchg
rcrb
sti
mov
popa
jmp
inc
cli
daa
pop
pop
push
out
fisubrs
mov
in
je
test
and
sbb
fimuls
dec
ja
stos
cmp
jle
pop
jbe
inc
pop
jne
aas
outsl
dec
xchg
xchg
ja
xchg
push
adc
lock
roll
add
sbb
pop
sbb
jle
or
adc
idivl
cmc
outsb
cmp
test
std
add
jmp
sbb
es
lahf
stos
mov
or
sub
pop
sarb
adc
mov
daa
ds
dec
or
xor
mov
mov
cmp
mov
jo
addb
mov
push
mov
andb
dec
pop
mov
nop
lret
cli
test
adc
neg
stos
mov
add
or
loopne
pmaddwd
sbb
adc
out
lock
test
sub
int3
inc
add
sti
mov
pop
loop
fwait
pop
adc
cmp
fsubrl
push
lods
mov
jge
ljmp
sbb
shlb
cmp
and
xor
pop
stos
sub
mov
ja
shll
into
ret
or
pop
mov
mov
std
je
mov
sbb
lods
inc
loopne
push
mov
into
inc
ficoml
jmp
mov
test
xor
jae
xchg
in
pusha
mov
leave
jmp
test
adcb
xchg
stc
xchg
xor
insl
leave
sbb
xchg
or
inc
mov
add
ret
mov
add
test
and
xchg
mov
mov
mov
pop
ljmp
sbb
sub
dec
pusha
gs
shll
sbb
pop
push
xchg
dec
xchg
in
pop
xchg
jnp
cmp
icebp
addb
lea
mov
push
in
insl
ucomiss
cmp
sbb
out
xchg
mov
add
xor
mov
bound
pop
and
std
mov
or
pop
push
add
mov
into
pusha
pushf
jnp
xchg
test
jns
pop
inc
repnz
addr16
mov
mov
cmp
lcall
test
sub
add
xchg
in
addr16
pop
lds
mov
xchg
xchg
stos
mov
adc
lret
push
push
ds
insb
andb
ja
movsl
inc
fwait
xor
ja
addb
lahf
mov
push
inc
xor
sarb
mull
xchg
mov
cmp
mov
test
in
cmp
lock
sahf
imul
inc
rcll
push
rcrb
jge
data16
cwtl
into
mov
cmp
insl
jbe
lods
out
pop
add
sbb
mov
and
aaa
repnz
movsl
mov
popa
loope
inc
out
mov
mov
sbb
cmpsl
test
mov
cltd
jg
loop
sub
push
xor
and
xchg
pushf
js
or
sbb
sbb
dec
sbb
cmp
lock
lds
inc
ret
out
and
scas
jb
or
scas
mov
mov
cmp
push
aaa
mov
dec
dec
mov
addr16
adc
fdivrs
push
or
rcrl
loop
push
fistpll
xor
int3
leave
fpatan
mov
pop
shrb
and
xchg
enter
pop
mov
loope
clc
adc
mov
xchg
and
jnp
mov
adc
cmpsb
ja
xchg
repz
mov
lock
dec
dec
sbb
jae
xchg
sub
pusha
test
scas
inc
roll
sbb
cmp
xchg
adc
test
js
gs
push
dec
shrb
stos
andl
out
fucomip
fisubl
mov
dec
inc
addr16
daa
or
test
sbb
in
test
mov
dec
dec
not
sti
mov
inc
cmp
jns
lea
daa
sbb
popa
in
test
sbb
xor
fcmovb
cmp
sbb
test
loope
mov
pop
or
pop
add
daa
inc
mov
ss
xorl
sbb
arpl
loopne
pop
shrb
ja
roll
push
dec
out
pop
ret
mov
sub
mov
inc
inc
xchg
mov
test
fisubrl
cmp
iret
clc
inc
dec
cltd
leave
mov
test
jnp
jecxz
inc
and
jge
fstl
xor
addps
bound
movsl
xor
test
cs
xor
sbb
sbbb
xor
sbb
aas
ja
iret
xor
stc
mov
divl
dec
test
test
push
mov
addb
mov
mov
out
shl
lret
arpl
pop
mov
xor
jp
dec
rorb
mov
out
cmp
pop
js
pop
or
and
xchg
addb
push
mov
inc
pop
or
mov
xchg
mov
push
fwait
xor
cmp
adcl
cmpb
nop
je
sbb
xor
inc
mov
cld
cmpsb
push
ret
mov
inc
les
lods
add
sbb
and
sub
imul
pop
xchg
hlt
mov
mov
and
adcb
push
pop
cli
imul
stc
std
adc
in
xchg
stc
loop
mov
in
push
roll
ror
mov
dec
and
sarb
jmp
xchg
dec
roll
pop
shl
dec
xchg
test
loop
adcl
loope
mov
insb
cmp
repz
pop
int3
sbb
pop
jg
shlb
repnz
scas
xchg
orb
or
push
sbb
or
cmp
cltd
and
rcrb
call
scas
push
pop
or
push
inc
add
in
jns
clc
push
inc
jg
adc
ss
insl
out
jmp
cmp
mov
adc
push
bound
lods
or
cmp
cmp
push
aas
repz
lahf
cmp
push
xor
cmpb
fisttps
repnz
ljmp
xorb
sbb
ja
push
pop
test
loope
and
xchg
xchg
sbb
rcrl
add
mov
lods
push
lret
aaa
js
jmp
stc
dec
fwait
popa
cltd
arpl
fmull
push
mov
inc
pop
mov
and
jg
in
notl
out
or
pop
and
fidivrl
cli
mov
mov
pushf
cmp
mov
test
add
iret
cltd
jmp
bound
es
ret
xchg
add
fprem1
stos
xchg
adc
and
xchg
push
subl
fsubrp
inc
xor
pop
inc
into
out
xor
adc
imul
push
mov
cmp
pushf
in
and
add
xchg
iret
stos
sbb
mov
test
cmp
jnp
xor
test
cmc
adcl
stc
inc
dec
pop
pop
sarb
std
leave
add
cli
xchg
mov
mov
mov
sarb
daa
and
nop
iret
lret
dec
pop
and
pop
das
aas
xchg
inc
sbb
sarb
movsb
insb
sub
cmp
daa
sarl
xor
fldt
sarb
xchg
mov
popf
push
shll
pop
cmpsb
jmp
xchg
gs
push
lea
icebp
or
sbb
aaa
nop
cmpsb
adc
inc
adc
rorb
idivb
xchg
lcall
in
xchg
lahf
sbb
notb
mov
sub
add
and
inc
cmpsb
mov
sub
sti
push
out
in
aad
dec
imul
jg
mov
mull
mov
leave
jnp
mov
data16
cmp
cld
add
sbb
jb
cs
pop
cwtl
test
dec
and
add
mov
mov
mov
addr16
nop
push
push
push
cwtl
inc
mov
test
jecxz
xchg
mov
pop
xor
mov
mov
out
and
jbe
mov
jmp
jne
insl
imul
cmp
popf
or
lock
aam
mov
clc
scas
icebp
into
xchg
test
mov
mov
pop
lret
jns
loopne
or
add
mov
pop
ljmp
sbb
leave
and
jnp
pushf
cmc
bound
pop
insb
out
roll
icebp
movsb
cs
iret
rcr
bsr
mov
inc
mov
sub
pop
imul
cmp
hlt
clc
mov
push
bnd
sbb
sub
jo
cmpsb
sbb
lret
pop
hlt
int3
xchg
sbb
dec
jp
or
mov
xchg
pop
add
cltd
out
scas
mov
cmpsl
movsb
in
das
cmp
les
ja
mov
shll
mov
push
divb
mov
or
or
lret
scas
xor
mov
push
pop
scas
enter
mov
sub
fcomps
ss
outsl
pushf
sub
mov
in
jmp
andb
roll
mov
mov
loop
cltd
cmp
lds
xor
adc
dec
sub
and
sarb
out
push
int3
push
mov
andb
dec
stc
sub
cmp
mov
mov
adc
jmp
jmp
push
dec
test
jno
ja
test
js
xchg
sbb
or
mov
lds
std
mov
dec
cmp
and
test
es
out
into
fisttpl
mov
pop
sbb
xchg
jmp
sbb
adc
mov
test
adc
repnz
xchg
imul
inc
inc
and
push
sub
shrb
fdivrs
arpl
cmp
pop
mov
sub
fsubl
cmp
mov
inc
push
xchg
movsl
pop
xchg
test
mov
lea
cwtl
xor
cmp
cmp
or
mov
out
xor
sti
mov
vhsubpd
mov
int
dec
sub
adc
cmp
pop
fs
iret
pop
push
or
dec
inc
adc
sahf
pop
and
pop
sub
sub
loope
mov
jle
sub
jp
push
pop
ja
fcompl
adc
cmp
fidivrs
sar
lock
add
mov
outsb
mov
out
jno
popa
adc
icebp
and
mov
adc
sti
jle
add
and
fisttpl
xor
mov
fidivs
jl
add
xor
pushf
test
cmp
bsr
fisttps
out
subb
jle
jmp
adc
xor
cmp
cli
lcall
sbb
ret
pushf
jg
and
loop
imul
divl
dec
mov
inc
in
ds
sti
inc
pop
fistpll
int3
int3
lret
mov
fdivrl
nop
imul
adc
int
out
and
xchg
pop
xchg
sbb
cs
scas
jmp
mov
outsb
hlt
mov
lcall
pop
jnp
loop
test
lea
scas
pcmpeqw
mov
xor
adc
sub
push
ja
fidivrs
dec
push
daa
out
loopne
ss
lea
push
pusha
into
xor
jb
mov
add
inc
push
lods
jns
stc
std
cmp
add
sbb
sub
sbb
out
or
push
push
or
jmp
xor
mov
dec
sbb
xor
dec
fsubr
push
push
in
int3
xchg
call
loope
rcrl
or
divb
xchg
jnp
mov
fcmovbe
or
mov
jns
mov
adc
dec
adcb
pop
lock
add
out
iret
mov
out
arpl
inc
jo
imul
push
pusha
add
cmp
mov
fwait
sbb
push
rcrl
pop
testl
test
sarb
push
shll
lret
xor
subb
xchg
cmp
loop
test
test
test
sub
xor
out
add
pop
icebp
ljmp
mov
test
jl
imul
xor
jns
icebp
push
out
and
cs
dec
outsb
sub
insl
popf
xlat
dec
clc
push
test
sti
sbb
xchg
bswap
int
dec
jecxz
pop
or
fistpl
hlt
test
inc
add
test
divb
fcompl
lahf
cmpb
mov
test
int3
dec
sarl
ret
mov
test
push
cmp
cmp
add
and
mov
adc
inc
adc
fisttpl
lods
cltd
ret
inc
push
andb
lods
pop
je
xor
call
vpmovsxbw
cmp
fwait
xor
ja
icebp
xchg
vpavgw
xor
pushf
inc
rcll
sub
add
push
repnz
and
mov
dec
pop
incl
shrb
xchg
jo
cmp
mov
cmp
sbb
scas
push
add
sbb
add
adc
out
std
and
pusha
xchg
mov
cld
pop
cmc
xor
mov
mov
dec
jno
lock
ret
add
cs
xchg
dec
dec
notb
add
pop
xchg
inc
je
jl
aas
mov
fwait
outsl
xor
ljmp
aad
pushf
inc
aaa
jp
int3
xchg
loopne
inc
imulb
jmp
cwtl
or
jmp
outsl
dec
ja
andl
cmc
ja
stc
pusha
data16
mov
pop
push
xchg
push
dec
scas
sbb
sbb
pop
cmp
test
js
push
mov
gs
addl
fmull
mov
bound
or
mov
iret
xor
out
fcomip
push
sbb
push
fiadds
jle
sub
aam
adc
in
xchg
lods
cmpsb
pop
test
hlt
sbb
mov
jecxz
sbb
mov
lock
inc
mov
out
jp
ds
stc
lahf
jl
dec
jmp
cmp
sub
push
push
loope
mov
sub
imul
mov
add
in
mov
push
xchg
inc
clc
sti
fidivrs
pusha
popf
dec
xor
dec
sub
pop
out
sub
add
fldl
add
ret
xor
popl
pushf
mov
xchg
cs
sbb
or
aas
test
push
add
sub
dec
push
popl
sub
iret
ja
ret
push
aaa
dec
stos
mov
subb
stc
push
or
mov
es
mov
adc
in
mov
jl
scas
xlat
lods
enter
fadds
js
lods
pop
xchg
je
jge
cmp
sbb
mov
aaa
mov
inc
pop
stos
cmpsl
mov
inc
and
mov
test
sub
cli
in
mov
and
mov
fstpl
aaa
pop
iret
mov
repnz
notl
aaa
repz
push
jb
inc
and
sbb
inc
pop
sbb
cmp
mov
mov
and
jbe
jg
mov
testb
aad
inc
mov
dec
push
bound
push
mov
and
jbe
insl
push
dec
test
outsl
andb
mov
test
dec
add
les
pop
ja
xor
sbb
sbb
xorb
pop
addr16
adc
pop
cmp
cmp
rcll
cmc
pop
sub
leave
cmp
cmpsl
xchg
jg
jge
lods
divb
and
test
call
int3
sub
mov
mov
lods
pop
leave
sbb
negl
fs
ja
test
mov
add
bound
jp
nop
in
es
dec
pop
add
xor
out
xchg
into
jecxz
sbb
sub
or
xchg
push
cmp
mov
sbbb
add
xor
les
fnsave
xor
mov
iret
push
and
push
xlat
rclb
fists
cmp
and
push
adc
xchg
or
mov
pop
out
pusha
push
mov
shlb
lds
cld
pop
loop
lcall
and
xor
jnp
push
rolb
outsl
or
adc
movsb
insl
icebp
dec
cmpb
cmpsl
out
movsb
pop
fistpl
inc
pop
icebp
bound
add
jl
inc
xchg
daa
repz
xor
push
push
in
test
adc
ja
mov
add
inc
in
loope
loopne
push
add
popf
inc
cs
fwait
jo
test
lea
xor
popa
lods
inc
mov
pop
dec
xor
cli
loopne
cmp
in
outsl
mov
repnz
pop
pushf
mov
mov
jge
scas
jmp
jecxz
and
clc
into
lret
incb
mov
and
mov
sub
push
dec
ja
pop
adc
inc
jecxz
pusha
fsubrl
add
fld
ret
xchg
lcall
mov
push
data16
push
inc
test
in
jae
pop
cmp
xchg
dec
xchg
inc
ret
add
pop
add
and
xor
loope
pusha
cwtl
cli
xor
mulb
lds
adc
or
sbb
xchg
sub
inc
in
in
mov
inc
ficoml
test
add
cmp
hlt
nop
push
cmp
mov
or
xor
push
push
pop
sub
test
inc
jle
add
mov
jb
dec
sub
rorl
add
cmp
movnti
sub
in
inc
mov
xchg
push
jecxz
jmp
cmp
push
push
cmp
mov
mov
add
mov
loop
push
cmpsl
stc
sub
mov
dec
mov
push
ljmp
lcall
cltd
testb
cmpsb
inc
mov
pushf
or
push
arpl
add
daa
cmpsb
add
sbb
pop
sbb
sbb
push
sbb
fninit
xor
mov
sbb
jp
mov
out
mov
movsb
mov
mov
frstpm(287
jns
nop
jb
pushf
out
fsubr
jo
adcl
pushf
sti
cmc
int3
scas
dec
push
adc
mov
cld
mov
leave
pop
popf
mov
mov
aam
sarl
gs
pop
xchg
adc
fwait
sub
notl
sub
mov
mov
cmp
mov
into
sti
xchg
dec
jne
out
push
in
enter
out
andb
sbb
fwait
jne
fbstp
or
mov
outsl
inc
insl
lcall
cmc
add
mov
stos
inc
adc
sub
cmp
cmp
js
pop
mov
out
arpl
or
pop
mov
push
fwait
and
sub
xchg
mov
cltd
mov
aas
cmc
ret
pop
test
arpl
cmp
xchg
ja
ja
test
xor
fcmovnbe
jns
cmp
xchg
bound
pushf
test
pop
xor
cli
lds
imul
in
push
mov
pop
xorl
xchg
xchg
push
test
push
mov
pusha
orb
or
xor
adc
cmp
mov
mov
les
repnz
jae
out
and
in
je
icebp
ret
ret
testl
pushf
insl
xchg
xor
sbb
aas
xor
movl
ss
and
fxam
inc
nop
cmp
push
add
dec
shrb
xor
sbb
shrb
or
dec
mov
dec
mov
mov
stos
scas
std
xor
pop
and
icebp
cmpsb
popa
cmp
jecxz
inc
jp
jno
fwait
enter
rolb
shll
inc
not
loope
repz
rorl
mov
mov
idivb
aas
mov
fisubs
leave
fisubs
fldl
repnz
or
xchg
lods
mov
sbb
out
and
aaa
mov
pop
adc
cmp
or
and
xchg
mov
arpl
sbb
ret
add
stos
mov
xchg
cmp
sbb
arpl
sbb
mov
jae
add
inc
lods
mov
int
xchg
loope
dec
loopne
and
in
dec
in
cs
ret
push
cmp
popa
pop
pop
pusha
push
pop
sarb
mov
leave
mov
stc
sbb
add
icebp
ss
repnz
imul
arpl
mov
add
pop
xor
xor
xor
pop
mov
or
inc
cwtl
lds
push
out
push
insb
xchg
icebp
insl
int3
iret
out
sbb
sub
into
push
popa
mov
jb
cmp
inc
addl
imul
dec
or
mov
mov
rcll
mov
mov
mov
stos
scas
das
sbb
cmp
pop
pushf
xor
dec
aaa
sub
addr16
mov
dec
mov
pop
js
mov
sbb
jl
pop
data16
insb
negb
inc
xor
sub
or
cwtl
xor
mov
loopne
dec
mov
xchg
lds
cs
lret
dec
jecxz
push
and
divl
xchg
scas
mov
push
pop
jp
xchg
or
negb
leave
push
push
or
jb
inc
imul
mov
popf
jmp
sub
add
in
clc
stc
lret
xor
loop
xor
loopne
jg
cmp
jle
das
pusha
cmp
test
je
mov
or
dec
nop
inc
or
cwtl
insb
mov
cmp
lds
push
rcr
leave
ret
dec
test
mov
mov
pop
rorl
stc
ljmp
or
or
cmp
push
jnp
inc
enter
in
lock
mov
mov
sbb
push
in
adc
dec
out
push
dec
shrl
adc
popa
lds
sub
gs
inc
cs
rcrl
dec
push
inc
lcall
js
xor
xor
fsqrt
stos
repz
loope
xor
xchg
mov
dec
lea
or
mov
and
dec
cmp
sub
iret
rcrb
clc
pushl
jo
cmpsb
cmpsb
scas
sub
jle
imul
icebp
or
xor
jnp
ja
jg
cmc
sbb
testl
or
jns
and
clc
mov
aaa
mov
test
add
es
xchg
scas
xchg
enter
lock
clc
aad
pop
cmc
sub
sbb
das
xchg
mov
xor
xor
cmp
mov
dec
inc
in
bound
xchg
cmp
movb
in
cmp
push
fdivl
xchg
iret
inc
cmp
add
or
push
sub
pop
repz
sub
sub
mov
dec
lret
xor
test
out
xchg
push
test
or
pop
test
shlb
sbbb
or
add
les
or
outsl
cmp
push
movsl
int3
out
mov
test
jo
pop
and
icebp
outsl
adc
shll
pop
push
push
outsb
sahf
subl
jnp
push
mov
pop
cmp
add
aam
out
jbe
pop
mov
popa
lock
jl
cmpsl
mov
mov
out
sbb
imull
sub
xor
movsl
dec
notl
fwait
pop
mov
jg
mov
cmp
mov
push
push
testl
adc
lods
pop
mov
jge
pop
xor
rclb
xchg
push
xor
fiaddl
iret
cli
dec
sbb
inc
adc
fildl
xor
scas
scas
ret
sbb
push
inc
into
adcb
pop
sbb
cltd
aam
mov
mov
sbb
push
jmp
mov
int3
repz
repz
mov
in
sub
roll
mov
xchg
movsb
mov
stos
das
jb
push
shlb
lods
popl
dec
jnp
xor
or
enter
and
mov
ds
insl
daa
cwtl
int
add
inc
daa
mov
jmp
sub
insl
leave
dec
mov
fdivr
and
jbe
xchg
ror
inc
leave
xchg
ds
jecxz
bound
cmp
leave
push
loopne
inc
mov
out
fnstcw
mov
jb
test
xchg
rol
nop
sbb
inc
xchg
rolb
popf
aas
push
cmp
loopne
sub
out
lds
mov
pusha
sub
repnz
ret
aaa
subb
xor
cmp
xor
inc
cmp
test
mov
add
add
mov
imul
icebp
sbb
mov
cmpsl
lea
loopne
push
popa
xor
add
push
leave
inc
jecxz
data16
insb
xchg
xchg
jle
imul
cmp
xchg
cmp
dec
aas
test
icebp
cmp
movsl
lret
jle
sub
lahf
or
sarb
cmp
iret
jp
insl
jmp
bound
sbb
test
push
das
test
idivl
aad
xchg
cmc
out
sti
mov
dec
sbb
adc
sahf
mov
leave
add
insl
ss
out
rcrb
dec
hlt
idivb
sar
lcall
sbb
imul
out
mov
inc
and
std
ret
mov
jmp
sar
xor
arpl
jmp
jmp
xchg
aam
out
mov
mov
test
cmp
xchg
loopne
cmp
push
das
ljmp
repz
cmp
mov
in
xchg
mov
inc
pop
or
scas
cmpsl
sbb
push
push
mov
adc
shl
sub
test
xor
cmp
test
loope
or
mov
jmp
sbb
mov
inc
push
repnz
jmp
into
int3
lds
insb
pop
jno
sbb
adcl
insl
mov
or
andb
scas
loop
dec
jnp
push
add
sarl
ficoml
push
in
inc
out
mov
ja
sub
out
int3
cwtl
and
fptan
cmp
dec
mov
jb
dec
pop
jmp
test
jne
in
jb
cmpsl
add
or
or
push
movb
rcll
out
aam
xchg
icebp
cs
dec
popf
mull
add
cltd
or
fmuls
push
pop
xchg
iret
mov
mov
int3
in
sub
in
jb
pop
outsl
adc
stos
cmc
mov
push
sbb
push
sbb
add
cmc
mov
into
int3
outsb
jmp
out
pop
push
or
ja
xchg
stos
in
pushf
jg
mov
bound
cmp
push
inc
or
fiadds
dec
in
in
adc
sub
jbe
inc
dec
orl
push
popa
addl
pop
aad
cmp
or
scas
push
xchg
in
in
cmp
inc
pop
cmpb
subl
fwait
out
mov
stc
cmp
fisttps
cld
xorb
cwtl
pop
and
xor
mov
fmull
pusha
sbb
mov
sbb
repnz
aas
xor
loopne
xor
orb
ja
aas
cs
xchg
clc
pop
mov
jmp
es
ja
or
xchg
rorb
test
lret
es
adc
xchg
sub
pop
pop
out
cmp
scas
popf
outsl
cmp
mov
leave
dec
xchg
adc
popl
xchg
jae
negb
test
xchg
out
inc
xchg
lcall
repnz
cmpsb
les
jmp
xlat
mov
push
imul
scas
cmp
mov
lds
mov
sbb
xchg
sub
or
outsl
int3
mov
sub
jl
loopne
fisttpll
jge
cmc
bound
clc
xchg
push
sub
push
mov
jecxz
sbb
jmp
cmp
mov
pop
dec
push
pop
push
xchg
pop
fstps
pop
flds
repz
dec
repnz
fcmovnb
aas
jns
loope
xchg
pusha
addr16
mov
push
paddsb
pop
imulb
jl
push
cmpsl
shll
add
add
mull
in
jge
sub
fnsave
cmpsb
xchg
loop
roll
cmpsl
sbb
sbb
and
sti
movsl
leave
inc
repz
fisttpl
decl
push
sbb
cmp
xor
test
sbb
rcl
add
xor
insb
xchg
xchg
pop
cs
lcall
fnstcw
add
inc
imul
es
arpl
out
aaa
fstps
into
xchg
in
mov
out
mov
jns
dec
add
add
fmull
pop
repnz
orb
push
pop
dec
push
daa
iret
arpl
mov
xlat
arpl
adc
int3
ret
idiv
cli
nop
lea
mov
push
mov
sub
ret
test
cli
lahf
jo
jbe
push
mov
inc
jg
and
imul
aad
pop
mov
inc
mov
cmpb
fisubrl
pop
sti
sub
inc
mov
pop
adc
inc
xchg
loope
lret
inc
adc
adc
xor
loop
call
pop
xchg
cmp
sub
or
pop
push
push
inc
push
sbb
push
inc
loopne
push
push
xchg
fidivrs
imul
xchg
pushf
mov
loop
mov
fistpl
cmp
mov
test
pushf
pop
out
pusha
push
pop
aas
loopne
add
sbb
inc
inc
xchg
std
add
adc
jno
jbe
mov
jecxz
jae
leave
xchg
push
jmp
idivl
addr16
test
add
inc
shll
jne
mov
or
aaa
in
stc
push
mov
add
dec
add
lret
mov
in
or
xchg
push
xor
aas
sbb
iret
xorl
add
cmc
fisttpl
in
push
daa
jno
cmp
push
mov
adc
fwait
sub
fldt
inc
lret
mov
cwtl
fwait
mov
sbb
mov
jl
js
fstpt
mov
mov
aam
addb
mov
pop
mov
movsl
popf
ljmp
add
sub
dec
and
add
enter
loop
mov
test
ja
outsl
pop
call
pushf
into
sahf
or
pushf
adc
push
push
das
and
cmp
xchg
imul
insb
or
mov
inc
or
les
iret
cli
push
out
outsl
aam
aaa
inc
lea
test
fcom
mov
in
cmp
jo
lods
and
mov
movq
scas
cmp
and
sti
frstor
lcall
sbb
mov
or
loop
sti
push
loopne
cld
fcmovbe
push
arpl
pusha
scas
cld
in
mov
out
popa
mov
stos
push
fmull
outsl
jge
stc
and
xor
fwait
mov
lret
jp
add
outsl
adc
cmp
shl
cmp
roll
fstpt
jp
dec
inc
jb
fwait
mov
shlb
jo
out
inc
xchg
fucomp
push
sbb
in
test
xchg
xorl
xchg
std
mov
mov
test
pusha
mov
xor
mov
test
ja
mov
rclb
mov
scas
lods
pop
dec
xchg
cmp
dec
call
iret
psubusw
inc
insb
cmp
xchg
ret
xor
enter
pop
notb
xchg
es
out
ret
push
pushf
in
mov
dec
fiaddl
push
push
mov
xchg
cld
xchg
lods
pop
popa
test
icebp
cmp
jp
mov
jnp
xchg
push
xor
ffree
ds
rcll
sub
movsb
jno
xchg
push
jmp
mov
adc
pop
pop
pop
lcall
int3
xchg
rcl
out
out
xor
lret
enter
dec
jp
inc
jne
inc
cmpsb
mov
mov
mov
cmp
cld
shr
cmp
cwtl
test
cmp
sahf
mov
fsubl
dec
movsb
xor
mov
leave
sbb
inc
mov
jl
rcrl
xchg
jmp
lock
xchg
in
sbb
or
test
scas
jns
xor
pop
cmpsb
outsb
push
and
jns
repz
sbb
sbb
mov
pop
jns
fildll
xor
mov
lock
gs
pop
push
aaa
iret
xchg
push
fcom
imull
ret
push
les
cmp
pop
sbb
pop
xchg
in
testb
mov
xchg
cmp
jmp
fdivrl
loope
cmp
loop
int3
jecxz
xchg
mov
xchg
dec
inc
gs
js
out
xchg
cmp
xchg
les
add
scas
test
adc
xchg
mov
fdivl
das
sbb
in
mov
adcb
cmp
xchg
lcall
roll
test
clc
xchg
mov
inc
out
push
push
out
or
inc
lahf
js
lods
cmp
xchg
loop
cmp
out
add
mov
movsb
cwtl
jmp
adc
jo
out
jg
stc
scas
cmp
jge
pop
cli
int3
mov
test
or
movsl
mov
loope
out
cmp
shlb
sbb
out
hlt
jmp
inc
xchg
jns
cmp
mov
popf
pop
adc
xchg
imull
mov
mov
pop
into
xchg
fidivs
xchg
scas
lods
mov
vshufpd
dec
push
test
adc
mov
sbb
inc
ss
cmp
std
imul
leave
adc
sbb
inc
in
jnp
insb
fnstsw
ja
mov
cmp
mov
loope
dec
lods
or
bound
adc
inc
xor
push
mov
popa
cmp
rolb
roll
test
daa
pusha
xchg
fwait
cmp
jl
adc
inc
test
enter
sub
cmp
xchg
sub
aas
sbb
jmp
jb
cmp
stos
test
cmpsb
and
push
push
and
jge
mov
iret
icebp
loope
sti
add
fimull
mov
cld
xchg
mov
lods
roll
test
push
popa
rorb
scas
test
mov
nop
sbb
cmpl
idivb
cmp
pop
fistps
xor
test
ljmp
inc
shll
sub
xchg
pand
inc
sub
pop
shll
pop
jo
lock
ja
jp
adc
adc
push
or
mov
push
cmp
pusha
inc
xor
cmp
push
repz
inc
clc
or
aam
cmpsb
jmp
mov
lock
xchg
sbb
ret
jg
adc
cmpsb
cmc
dec
shl
loope
rol
add
adc
xor
dec
add
pop
je
aaa
xchg
and
sbb
leave
xor
and
xchg
jg
mov
push
mov
inc
push
in
cmp
stc
mov
push
cltd
lea
push
xchg
jae
xchg
push
mov
sbb
stos
loopne
ret
jmp
pop
imul
pushf
sbb
bound
inc
jg
repnz
add
jns
push
sbb
or
add
nop
ret
add
out
xor
add
out
xchg
std
mov
mov
mov
repnz
fsubl
xor
roll
movsb
out
test
jnp
testb
xchg
pop
xor
cmc
cmpsb
js
mov
pop
jae
xchg
aam
fdivl
pop
mov
inc
sarl
xchg
aas
fcoml
pop
jb
add
jge
dec
cmp
pop
cmp
popf
xchg
mov
jbe
sti
add
xor
ljmp
adc
push
sbb
push
repnz
jno
leave
jecxz
and
inc
shlb
cmpb
out
leave
test
in
inc
mov
lcall
int
jmp
js
sbb
stc
into
cmp
xchg
mov
xchg
xchg
pusha
add
sbb
mov
repz
pusha
test
sbb
pop
dec
lds
mov
mov
sub
push
in
repnz
mov
dec
jns
andl
adc
repnz
jmp
mov
add
sbb
inc
repz
ljmp
cmp
test
dec
in
mov
mov
or
test
and
in
pop
mov
sbb
mov
add
ljmp
ret
dec
adc
mov
jge
cmc
jmp
sub
and
xor
leave
fisttpll
xchg
cmp
inc
cmp
iret
sahf
xchg
adc
fistpll
cld
add
ret
sti
xor
adc
jne
pop
mov
scas
data16
sub
mov
ret
xchg
lock
arpl
jge
push
inc
adc
jnp
pop
xor
push
or
fsubl
test
jmp
mov
lcall
xchg
cmpsl
cmc
imul
sbb
push
in
sbb
xchg
pop
out
lahf
gs
adcb
clc
xchg
sub
xchg
or
repnz
sar
in
sbb
in
adc
mov
or
push
pop
test
je
and
cmc
scas
pop
aaa
jecxz
imul
popl
daa
loopne
repnz
pop
aas
or
and
jne
js
ja
cmp
jg
lock
pop
dec
cmp
or
ja
popf
fcomps
add
pop
fldt
iret
mov
js
popw
leave
sub
cmp
mov
xor
xchg
out
div
or
dec
sti
bound
in
inc
or
jnp
mov
xchg
rcll
mov
mov
daa
sbb
and
pop
je
movsb
lea
jns
idivl
movsl
or
test
mov
mov
xchg
pop
mov
lret
cwtl
nop
cmp
mov
in
or
loop
test
repz
jle
call
mov
arpl
scas
inc
int
xor
push
pushf
unpckhps
push
pop
sub
in
xchg
shlb
shrb
push
fucomp
enter
xor
pop
ljmp
arpl
dec
jl
sbb
sub
cmp
dec
fsubrl
or
aas
xchg
hlt
in
add
aam
ljmp
add
or
out
sub
lods
ljmp
sub
dec
lahf
cmpsb
and
mov
scas
fnsave
jmp
mov
push
mov
jns
xor
stos
xor
sbb
pusha
cli
stc
cmpl
lcall
jg
xor
test
jmp
pop
shld
add
addl
push
pop
inc
mov
dec
enter
mov
mov
pop
repz
dec
insb
and
popa
clc
aaa
loope
add
add
scas
cmp
dec
enter
or
mov
arpl
test
and
lcall
push
hlt
push
testb
stc
ljmp
jg
fs
insl
ret
into
jo
dec
pusha
popa
sub
in
in
loop
jecxz
jnp,pn
out
test
sti
int3
inc
mov
xchg
mov
iret
cmp
enter
rcrb
push
bound
cmp
out
mov
inc
sub
bound
sub
idivb
pop
jl
fcoml
cmp
jmp
fwait
cmp
xchg
jne
dec
sub
cmp
cmp
xor
test
dec
cmp
out
add
test
dec
mov
pop
push
jge
test
clc
cmc
sbb
popa
xchg
aas
xor
xchg
mov
imul
mov
bound
xchg
cmc
inc
dec
leave
dec
pop
pop
jle
mov
insb
test
fs
pushf
xchg
push
lods
pop
stc
xor
jge
cld
mov
push
push
add
addb
fldl
rcr
dec
push
test
add
cmc
test
sahf
xchg
pop
mov
shl
mov
stc
sahf
xchg
inc
sub
ja
sub
mov
ja
inc
dec
lods
inc
dec
cmpsb
xor
xorl
subb
cmpsb
and
or
jb
sbb
mov
pop
inc
lods
movsw
ss
mov
ja
fimull
and
loope
loope
add
dec
test
out
pop
addb
xchg
test
lods
sbb
out
add
shll
sub
pop
and
outsl
mov
idivl
sub
cs
loop
pop
test
dec
push
gs
ss
ret
cmpb
mov
enter
push
sub
adc
pop
ficomps
xchg
insb
mov
and
add
jnp
cmp
ror
xor
loop
daa
mov
push
unpckhps
sbb
je
inc
mov
out
mov
sti
sub
rolb
fiadds
stos
add
mov
data16
out
sbb
leave
and
adc
rol
xor
mov
dec
mov
fistps
xchg
cmp
push
mov
es
adc
inc
jnp
xor
pop
mov
lcall
cmp
push
popa
inc
inc
add
fimuls
sub
push
pop
pop
es
or
into
movsl
push
sti
sub
fstpt
dec
xchg
and
aad
xchg
pop
insb
aaa
xor
push
or
iret
ret
inc
imulb
adc
mov
iret
add
xchg
push
jbe
pop
ja
push
mov
jo
jae
xor
adc
xor
mov
xchg
outsl
dec
jge,pn
xchg
add
xor
icebp
cmp
fbld
scas
lock
sub
icebp
sbbl
pop
jle
outsb
les
mov
out
mov
scas
in
ret
cs
xor
adc
mov
and
and
mov
ret
dec
out
aas
dec
add
mov
std
loop
inc
mov
dec
adc
ds
dec
into
push
divl
xchg
test
sub
jae
mov
test
sub
stc
add
aam
idivl
xchg
push
push
roll
cmp
fdivl
fs
push
cmp
sub
lahf
mov
icebp
shlb
shlb
cld
cmp
cmp
lcall
and
pop
test
into
cmp
sbb
inc
sbb
leave
leave
leave
movsb
mov
aas
fwait
rcl
cmp
ljmp
and
mov
jns
scas
arpl
mov
sbb
js
dec
iret
lods
lds
cld
sbb
mov
maskmovq
notl
xchg
xor
icebp
and
pop
scas
test
imul
les
pop
and
or
push
imulb
jno
push
inc
mov
arpl
and
inc
leave
sbb
out
dec
mov
mov
cld
lahf
sub
mov
imull
cld
call
xorl
push
data16
in
sbb
orb
dec
js
xor
pop
iret
adc
mov
cmp
pop
jnp
and
mov
test
test
je
cli
pop
test
leave
or
add
outsb
pop
rorl
dec
sbb
mov
adc
mov
negb
mov
leave
jg
pop
stos
cwtl
or
add
and
mov
mov
orl
cmp
loop
std
int3
mov
inc
fsubl
popf
int
insb
xchg
jecxz
jp
jle
xchg
mov
sbb
icebp
pop
jp
mov
inc
aad
fsubrl
jg
mov
cmp
in
test
lods
test
add
inc
inc
movsb
xchg
inc
rorb
lock
add
jp
popa
into
and
faddl
fs
push
jl
test
cmpsl
test
xchg
mov
mov
leave
insl
rolb
leave
or
fucom
iretw
jmp
xchg
lea
push
xchg
cmp
mov
mov
jb
fdivrl
or
mov
sub
cmp
lcall
mov
mov
inc
adc
inc
test
xchg
ss
iret
arpl
ja
mov
test
lret
add
cmp
imul
jo
sub
rclb
insb
rorb
mov
leave
cwtl
mov
dec
out
jae
mov
ja
sub
mov
jmp
enter
or
pop
and
lods
cmp
test
add
mov
sbb
lahf
jnp
pmaddwd
lcall
lret
clc
push
push
pop
sbb
xor
push
xchg
jg
mov
dec
testl
ljmp
pop
push
rol
out
scas
add
xchg
pop
cld
addr16
sbb
mov
popa
xor
daa
mov
pop
add
aaa
out
pusha
adc
lods
inc
mov
adc
adc
sarb
rcr
pop
int3
push
sbb
add
add
push
mov
pop
jne
leave
ret
in
stc
or
sti
mov
arpl
sub
sbb
jnp
cmp
cld
movsb
cld
fcompl
sbb
out
scas
or
dec
mov
mov
cmp
and
sbb
push
adc
sarl
pusha
mov
xor
data16
sbb
stos
enter
pop
das
add
mov
inc
es
jecxz
fdivrs
mov
jle
sbbl
cmp
xchg
dec
je
add
or
test
orl
or
jbe
pop
jno
xor
popa
add
decl
push
pop
adc
push
clc
jnp
rorb
adcl
dec
mov
aaa
pop
and
in
in
mov
inc
sbb
xor
sub
test
inc
dec
or
mov
mov
out
js
stos
cli
adc
pusha
cmc
mov
cmp
and
push
add
bound
pop
adc
xchg
call
cwtl
xchg
or
dec
stc
addr16
xchg
inc
test
rcrl
adc
add
and
push
jp
xchg
add
in
pop
sti
mov
and
fnstcw
push
ss
pop
jg
add
rolb
sbb
fisttps
dec
xchg
jbe
and
sub
idivb
in
and
xchg
xchg
sti
punpckhdq
scas
xchg
or
adc
loope
sbb
repz
push
or
js
orl
cmc
and
adcb
pop
jg
repnz
fwait
inc
rorb
lds
pop
pusha
xchg
pop
int3
xchg
lea
popa
sarb
adc
ja
xchg
scas
out
xchg
sub
add
and
movsl
sar
repnz
aam
push
mov
test
lahf
ja
loope
cld
loop
addr16
test
es
mov
sarb
test
inc
add
nop
sbb
dec
repnz
push
rcl
pop
mov
mov
dec
mov
js
push
push
div
xchg
xchg
cmp
mov
cli
mov
xchg
dec
cmp
movl
test
imul
repnz
dec
cmp
push
mov
xor
jmp
xchg
inc
call
pop
push
inc
out
pop
js
xchg
jo
inc
cmpsb
xor
int
add
inc
sbb
xor
mov
shrb
mov
pushl
inc
add
mov
test
add
movhlps
movsb
push
emms
into
xchg
or
jg
dec
movsb
minps
adc
push
into
ljmp
jbe
add
jns
or
cs
mov
shr
mov
fiaddl
js
add
fxch
cmp
dec
inc
mov
lds
loope
and
xchg
jbe
pop
inc
ret
gs
cmpsb
lret
cmpsl
in
xor
and
rcl
xor
pushf
mov
inc
mov
jnp
or
dec
or
jo
cmp
dec
adc
data16
js
stos
pop
jmp
add
test
mov
sub
pop
arpl
pop
adc
mov
cmpsb
pop
shr
xor
jl
pop
mov
fs
push
mov
inc
xchg
shl
scas
mov
pop
rcrl
xchg
jl
das
jp
es
xlat
adc
xchg
les
aaa
mov
mov
cwtl
push
pusha
orl
dec
outsl
jno
xlat
or
push
xchg
xchg
bound
xchg
mov
cmp
leave
test
rolb
inc
jmp
add
dec
shl
lea
sbb
mov
add
mov
add
jns
bound
mov
daa
nop
push
xchg
je
mov
fnsave
jmp
clc
mov
xor
bnd
adc
or
mov
jp
mov
je
pop
filds
fiaddl
test
outsb
jae
xchg
inc
mov
xchg
fimuls
bnd
fidivrl
cmpsb
sahf
xor
in
mov
stc
cmp
or
dec
push
out
sub
jno
jo
push
jo
mov
mov
mov
sub
mov
mov
js
cli
lods
sahf
ret
jns
mov
mov
pop
jnp
stos
cmp
cmpl
jno
sarl
sarl
out
cs
sub
push
sti
lret
jle
and
adc
fwait
xlat
adc
push
xchg
loop
dec
sbb
add
cmpl
fists
lds
adcb
xchg
xchg
aas
leave
pop
sbb
out
mov
dec
xchg
pushf
mov
fwait
mov
aas
sarl
xadd
ret
cmp
inc
aam
mov
jecxz
dec
add
scas
cmpsl
pushf
pop
pusha
test
outsl
jp
push
adc
in
rol
gs
mov
lea
mov
inc
dec
dec
jecxz
cmp
mov
pop
jb
jecxz
cltd
dec
int3
loop
insl
test
lret
les
cmp
mov
inc
sbbb
fs
add
dec
lret
stc
into
test
dec
mov
sbb
stos
popa
push
js
fdivl
jge
stos
and
xchg
aad
shlb
cmp
jg
cmp
xor
pusha
aam
sahf
xchg
cwtl
mov
loopne
mov
test
out
mov
fadd
cmc
test
adc
xlat
sar
adc
pop
fs
push
cmp
push
xor
dec
es
aas
cli
mov
test
push
add
pop
mov
inc
add
mov
mov
add
adc
push
xchg
sbb
xchg
or
int3
test
sbb
call
cmp
paddsb
jl
mov
inc
enter
and
sbb
test
cli
rol
test
pop
pop
scas
pop
sbb
ss
mov
sti
mov
cmp
test
jle
in
out
dec
jl
cli
mov
mov
scas
popa
or
mov
int
sub
and
fadd
mov
jne
test
pop
mov
in
sti
jl
test
adc
xchg
xchg
pop
inc
mov
xchg
or
stc
mov
cs
dec
dec
adc
cmp
in
push
cmp
xor
xchg
lds
clc
jl
subl
ja
pop
sub
push
mov
sbb
jge
xchg
dec
xchg
sbb
arpl
or
push
xorl
push
adc
mov
sub
cmp
cli
iret
jp
fcoms
sbb
cmp
lock
dec
mov
jnp
ja
sahf
xchg
push
out
negb
addl
fdivs
test
test
push
lea
test
xchg
and
out
repnz
mov
inc
fmuls
cmp
mov
scas
pushl
sub
fwait
cmp
mov
jl
adc
or
sub
sbb
sub
stc
inc
test
out
xchg
lods
dec
sbb
test
add
std
jmp
pop
mov
push
sbb
or
aaa
mov
inc
fbstp
cmp
sub
in
mov
mov
ds
add
shl
mov
pop
sbb
push
in
cmp
jno
pop
arpl
inc
sarl
js
repnz
mov
cmp
inc
xor
dec
sbb
mov
push
fdivrs
shl
insb
cmp
dec
sbb
add
outsb
mov
pop
je
mov
mov
xchg
push
lret
dec
or
jne
xchg
ja
add
mov
dec
push
pop
pop
test
or
int3
xchg
push
dec
adc
sub
dec
lcall
ljmp
mov
inc
adc
xchg
mov
das
mov
pop
in
xchg
ja
test
mov
jne
cs
pop
mov
xchg
ret
cltd
add
mov
xchg
xor
xchg
adc
fimuls
int
pop
mov
iret
js
divl
mov
and
out
mov
push
in
mov
out
or
icebp
or
mov
xchg
adc
fwait
inc
xor
xchg
xchg
or
jmp
mov
fstps
add
dec
sahf
cmpsl
rcll
inc
xlat
test
xor
xchg
roll
or
je
aad
cmp
cld
xor
dec
cmpsb
dec
jle
iret
js
push
mov
inc
dec
out
lock
push
arpl
nop
imul
shlb
jnp
outsl
and
lret
pusha
push
pop
inc
cs
or
cmp
mov
movsl
cmp
rcll
jg
into
mov
xchg
mov
xlat
push
imul
dec
pushf
mov
iret
pusha
nop
out
das
popa
xchg
fcoml
push
cltd
cmp
rcr
sarl
subb
shlb
test
adc
icebp
decl
in
dec
adc
imul
or
dec
sbb
or
xchg
in
xor
jns
outsl
pop
lea
add
sbb
xchg
lods
pop
inc
or
ja
repnz
movsb
and
leave
xchg
lods
pop
fildl
jne
stc
into
cmpsl
out
xchg
or
xor
jns
lods
repnz
sub
insb
cmp
bound
add
dec
jle
sub
push
pop
push
mov
add
lcall
mov
aam
popa
xor
sub
inc
pop
bnd
scas
ret
test
xchg
cli
divl
mov
movsb
popa
fists
add
lods
cltd
jmp
inc
dec
jp
outsb
mov
cmp
test
test
fildl
femms
pop
test
dec
fistpll
cmp
test
frstor
sbb
xor
lds
je
fsubp
scas
mov
cmp
sbb
adc
mov
mov
xor
loopne
inc
mov
xor
sbb
cmp
pop
in
dec
bound
repnz
push
loope
fcompl
dec
movsb
or
jg
test
in
xchg
outsl
push
pop
cld
push
lahf
test
test
inc
mov
pop
in
fstpl
lahf
fiaddl
adc
xchg
stc
jge
jne
pushf
adcl
lcall
mov
push
add
and
sub
jle
movsb
out
sahf
xchg
pop
xchg
xchg
inc
sub
dec
sub
sbb
cmp
push
mov
fnstcw
and
fucomp
xchg
insb
dec
fdivl
xchg
jb
xchg
iret
jle
repz
and
sbb
or
jae
mov
inc
out
jge
ja
les
pop
cwtl
cmc
xchg
psubq
iret
xlat
cmp
icebp
xor
cmpl
xchg
xchg
sbb
shlb
shr
nop
add
cmp
pop
test
adc
mov
xchg
out
jmp
xchg
inc
or
repz
mov
iret
and
push
out
xchg
out
pushf
inc
je
out
sub
arpl
ss
mov
xchg
rolb
xchg
xchg
in
iret
loopne
ljmp
dec
xchg
cmp
sbb
aas
fwait
cli
int3
push
ficompl
mov
sub
jb
dec
rclb
xchg
lods
push
pushf
movsb
ret
push
and
pop
push
insl
dec
lock
leave
or
jns
push
loopne
out
jno
clc
addb
or
xchg
mov
xchg
ja
xor
call
mov
into
imul
pop
lcall
pop
enter
sub
loope
jg
in
and
or
xor
ret
rclb
rcrb
in
imul
lahf
push
sub
fsubp
aad
pop
stos
sbb
jns
jl
cmp
mov
loop
iret
in
push
sbb
fmuls
lahf
inc
add
sbb
movsb
dec
pop
mov
pop
xchg
leave
ja
xchg
mov
sti
movsl
mov
dec
mov
mov
xor
mov
xlat
pop
adc
stc
mov
add
inc
pusha
xor
jg
lods
pushf
es
pop
add
add
movsl
scas
ret
movq
adc
jmp
jno
cmp
test
cltd
js
mov
jg
cmp
clc
pop
mov
sbb
mov
mov
stos
jnp
loop
call
js
loop
lods
cmp
push
jbe
xchg
dec
loope
sub
rol
push
aas
out
repnz
pop
loope
sub
pop
cmp
pminsw
cmp
xorl
repz
ds
shlb
leave
rcll
lods
aaa
and
sub
stos
popf
arpl
cmp
pusha
scas
adc
pop
dec
sub
cli
test
xchg
in
inc
mov
xor
js
ror
mov
in
push
mov
hlt
sub
push
cmp
fmuls
pop
inc
cmp
dec
inc
adc
fisubrs
lods
addb
push
xchg
daa
xor
add
pusha
xor
pop
testb
clc
cmp
jb
push
jl
jg
fcmovb
xor
pop
push
push
jo
mov
inc
loope
out
jl
cld
dec
daa
cmp
ffreep
in
shll
jge
xchg
jns
cld
or
push
or
jle
cmp
test
jns
pop
dec
jo
test
fstps
xor
jg
mov
push
cli
test
xchg
mov
fldl
loop
cmp
fistps
mov
push
xchg
xchg
addb
mov
pop
sbb
mov
in
xor
insb
adc
jle
xor
mov
sub
push
cmp
xchg
cmpsl
clc
sar
pop
out
jnp
js
jp
add
adc
je
add
pop
cmp
cltd
cwtl
push
rcrl
mov
sub
jp
iret
add
push
dec
les
lock
out
movb
pop
xchg
sub
jbe
cltd
jmp
movb
xor
fstl
mov
in
repnz
test
push
xor
jns
movsb
loope
test
push
pop
xchg
mov
mov
jle
lahf
cmc
aaa
mov
out
mov
xchg
fimuls
andb
fistpll
lcall
push
pushf
fldenv
xchg
bnd
mull
push
jbe
std
sbb
clc
cmp
jge
add
stos
js
hlt
xchg
push
pop
inc
dec
sbb
insb
mov
insb
test
xchg
test
xchg
pop
push
cmp
dec
mov
fucom
xchg
mov
loop
push
roll
jmp
inc
loope
loope
cmpb
outsb
push
js
in
pop
dec
fists
push
xor
imul
nop
sub
sub
add
mov
push
jle
xchg
inc
push
push
cmp
js
sbb
xlat
push
adc
pop
lods
xor
dec
sbb
scas
and
sbb
jmp
cwtl
xor
jo
rorl
ret
repnz
push
sbb
xor
pop
mov
testb
shrb
jecxz
scas
adc
frstor
mov
mov
outsb
mov
icebp
fwait
lods
cmp
pusha
push
fwait
aam
addl
dec
or
rcl
sbb
sub
ret
cmp
cmp
sti
jno
sbb
std
in
fnstcw
push
aas
pop
adc
or
inc
arpl
std
push
dec
dec
xchg
push
shl
pop
add
repnz
jmp
lcall
in
jb
repnz
scas
xor
xorl
cmp
sub
sbb
sarb
negl
inc
inc
out
test
or
mov
cmp
je
jge
lods
js
dec
hlt
or
or
cmp
pushf
divb
mov
jle
and
clc
stos
out
sbb
dec
mov
mov
push
fdivrl
std
ljmp
push
jnp
andb
movsl
icebp
js
movsb
stos
ss
push
nop
or
jmp
xor
cmp
in
movb
mov
aam
mov
pop
dec
adc
and
xchg
iret
icebp
xchg
int
pop
sub
outsl
push
dec
inc
sbb
and
arpl
mov
cmc
push
pop
movsl
mov
and
filds
aam
rolb
popa
leave
out
sub
je
cmc
pusha
icebp
xchg
outsb
lret
andl
fsubl
jp
cmp
outsl
pushf
jns
mov
incl
pop
fistl
cmpsl
test
jge
xchg
cmp
arpl
fbstp
pop
xchg
aas
mov
xor
xor
lret
testl
add
clc
jle
iret
scas
fs
push
ror
mov
inc
jle
pushf
shrl
cli
aaa
cmc
jno
jnp
xchg
adc
sub
sti
adc
cmp
outsl
out
sbb
inc
movb
adc
lea
sub
in
movsl
pop
dec
cltd
fdiv
shll
int
mov
bound
sbbl
sti
and
scas
mov
popa
js
sbb
popf
mov
cmp
flds
pop
mov
test
add
cmpsl
pop
nop
out
cs
cmpsb
jp
cmpl
lods
bound
jnp
pushf
testb
cmp
push
xchg
in
rcrl
aad
data16
jl
sub
pop
jno
call
pop
xlat
xchg
frstor
fiadds
subb
sub
push
mov
lret
ds
push
repz
push
je
jo
cld
jg
cmp
aas
pusha
dec
sbb
scas
xor
xchg
ja
xorb
cmp
pop
add
cmpsb
inc
dec
dec
jae
sbb
inc
cltd
sti
pop
sahf
stc
jp
xor
and
gs
divl
add
mov
adc
fidivs
inc
and
fdivs
sub
inc
bound
lea
cli
out
pop
stos
mov
outsb
loopne
inc
arpl
pop
rolb
push
lret
daa
fbstp
icebp
ret
pushf
stos
sub
gs
and
into
or
aaa
mov
movsb
or
sub
sub
mov
mov
mul
loop
sub
cs
xchg
inc
sbb
mov
adc
or
dec
inc
xchg
xor
push
jecxz
icebp
and
sbb
add
jae
add
sub
scas
or
xor
ss
pushf
outsb
bswap
mov
sub
lds
cmp
cmp
outsl
js
cmp
movsb
and
ds
jnp
js
jno
in
leave
into
int3
cmp
mov
outsb
inc
clc
mov
fidivrl
add
ljmp
sti
mov
mov
or
test
negl
movsl
pop
mov
jno,pn
out
push
bound
adcb
cmpsl
enter
in
jmp
xchg
or
sbb
scas
xchg
sti
xchg
cli
out
cmp
cmp
pushf
xchg
arpl
negb
int3
bnd
leave
cmp
pop
or
and
mov
lcall
add
dec
cmp
fisubs
inc
ficoms
add
ret
jbe
lahf
mov
mov
sti
enter
push
outsl
pop
pop
test
cs
mov
cmpb
test
adc
mov
fldl
fs
aas
dec
hlt
loop
lcall
cmpsb
jmp
clc
scas
je
jl
mov
dec
daa
les
mov
pusha
arpl
test
xchg
bound
dec
xor
add
cmp
out
test
test
adc
js
add
and
imul
leave
mov
sbb
xchg
push
xor
inc
test
cmp
pop
nop
test
xor
mov
or
sub
sub
clc
add
xor
fsubrl
pushf
sub
pop
cs
addr16
shrl
push
push
fldl
js
fwait
or
xchg
jmp
js
in
fildl
jbe
jge
mul
bound
sub
and
lds
sarl
rolb
cmpsl
data16
inc
fcomps
insb
cmp
xchg
or
cwtl
and
xchg
arpl
test
dec
add
ljmp
push
and
notl
movsb
out
scas
notb
sub
mov
inc
ret
dec
add
xchg
daa
or
fld
xor
mov
push
and
insb
xchg
filds
orb
addr16
mov
cmp
fnstenv
push
push
shr
dec
pop
cmpsl
sahf
cmc
cmpsb
std
xchg
jmp
add
fsubrl
push
xlat
cmpsb
and
lahf
push
rcr
xchg
orl
dec
test
sbbb
adc
push
mov
pop
in
jl
or
mov
sti
mov
imulb
pop
aad
arpl
scas
movsb
lea
je
xchg
jmp
lds
ror
inc
shll
loopne
xchg
mov
arpl
insb
sub
dec
xor
testb
xlat
leave
xor
pop
scas
sbb
sbb
pop
lods
fwait
inc
push
inc
jb
mov
ja
ret
ret
sub
mov
out
inc
out
dec
jge,pn
cmp
push
in
and
inc
out
shrb
sub
push
mov
testl
scas
aad
xchg
cmp
add
shl
cmc
dec
orb
loop
cmp
jecxz
leave
add
or
cmp
je
stc
insb
xchg
rorb
mov
dec
jmp
fcoml
xchg
aas
mov
adc
in
enter
inc
sbb
add
or
push
movsb
or
pop
push
xchg
ret
pop
sub
xchg
shr
push
mov
mov
fisttpl
push
rclb
out
dec
xchg
fs
fwait
mov
aad
sub
mov
pop
pop
jl
add
xor
and
into
mov
icebp
sbb
fldl
pop
outsb
jg
sbb
not
and
fcompl
push
inc
dec
mov
inc
and
mov
ds
popf
dec
push
push
add
test
pusha
cmp
push
mov
loopne
cmc
jno
nop
xor
notl
out
cs
sub
rolb
ja
pop
adc
xor
push
cmp
lods
cwtl
mov
jecxz
in
sbb
sahf
pop
xor
lods
mull
popa
inc
cmp
cmp
pop
inc
mull
bound
andl
lret
ret
jmp
sti
stos
idivl
or
mov
push
dec
loopne
inc
cmp
ss
into
cmp
xor
or
movsb
cltd
lcall
ret
rcrb
sahf
sbb
adcl
ss
lock
or
sti
adc
imul
add
ja
mov
xchg
stc
cmp
mov
xor
add
mov
and
icebp
ds
iret
stc
aad
fdiv
mov
int3
out
mov
push
jbe
in
data16
test
sub
pop
ficompl
out
mov
cmpsl
jle
rep
xor
pop
push
stc
mov
sub
loopne
push
sbb
popf
dec
push
pop
jns
dec
cmp
dec
cmp
dec
sti
push
test
repnz
mov
fldenv
je
cwtl
lahf
rcr
inc
cmp
mov
push
ja
mov
push
and
push
test
adc
dec
mov
adc
sbb
cs
dec
imul
push
ret
pop
test
xchg
ret
and
in
mov
leave
es
out
test
test
mov
cmp
fsubr
imul
xchg
add
push
addl
lods
adc
adc
jge
out
outsl
ror
std
aaa
xor
ja
sbb
lea
cmpb
das
int3
imul
rolb
fdivrs
in
gs
adc
xor
arpl
inc
ds
mov
sbb
xchg
scas
ffree
adc
sarb
dec
inc
daa
adc
push
xchg
dec
mov
pushl
inc
jne
dec
jg
or
jno
cltd
pop
jno
sbb
push
push
cmp
cmc
sbb
sbb
mov
push
mov
jbe
mov
mov
add
js
add
inc
cs
test
push
xchg
sub
dec
in
test
aas
and
sub
int3
icebp
mov
push
pushf
and
jg
jno
ja
movsl
and
push
test
cmp
adc
xchg
fldt
xchg
cmp
add
test
lret
bswap
test
shl
jle
scas
insb
pop
push
les
pop
aas
sub
hlt
rcr
cmp
inc
sbbb
repz
jle
ffree
lods
mov
mov
test
and
fmull
add
mov
pop
in
xchg
and
andb
add
dec
out
sti
fwait
push
hlt
and
out
xchg
add
xchg
sbb
add
push
cwtl
leave
push
xor
pop
push
sbb
jg
loope
jl
push
cmp
clc
sbb
pop
xor
push
aaa
idivb
xchg
scas
mov
roll
fcomps
lea
cltd
ret
xchg
gs
shrl
mov
out
stc
sub
xchg
inc
mul
dec
out
pop
or
cmpsb
fidivs
clc
sar
jmp
xor
push
cltd
sbb
and
cmp
mov
jbe
push
push
cmp
imul
dec
or
jbe
mov
pop
aam
cmc
mov
js
mov
push
cltd
cmp
mov
xchg
in
xlat
xchg
push
pop
and
mov
popa
ja
push
pop
and
imul
test
aas
or
aaa
clc
outsl
xchg
push
pop
ss
cmp
inc
cmc
es
jecxz
sbb
and
mov
xor
mov
xor
sbb
insb
gs
int3
popf
mov
cld
fsubrl
mov
xchg
push
pop
dec
test
adc
popa
push
mov
aaa
pusha
cmp
mov
scas
data16
loope
jns
popf
or
xor
nop
sbb
dec
jecxz
mov
aaa
mov
ret
leave
into
pop
xchg
push
aaa
or
mov
shll
xor
xchg
leave
dec
test
shlb
jg
inc
aad
or
clc
fiaddl
pop
pop
pushl
inc
fcomps
inc
push
sbb
jnp
aas
pop
mov
in
clc
add
xor
sbb
pusha
sbb
arpl
push
mov
repz
dec
popf
imul
scas
test
fistl
aaa
push
mov
or
mov
rol
add
mov
mov
push
ljmp
stos
addr16
jmp
movsb
jo
xor
dec
in
scas
add
out
xor
pop
clc
dec
push
lret
testl
xchg
dec
aas
loop
push
sub
mov
mov
jg
mov
in
add
push
mov
fnstsw
inc
or
push
aaa
add
mov
xor
into
mov
push
addr16
js
pop
jno
imul
roll
dec
dec
mov
cmpl
or
inc
aaa
in
push
sbb
es
into
fwait
xor
jae
xor
or
jg
sub
mov
aaa
xor
ror
jle
push
push
xchg
inc
mov
pop
dec
test
rclb
insb
mov
fwait
clc
ret
icebp
jp
test
outsb
outsl
mov
lods
sbb
dec
cmp
std
clc
movsb
mov
add
arpl
sti
inc
push
pop
jecxz
leave
mov
adc
fnsave
aaa
add
xor
into
sahf
ja
push
mov
les
dec
aam
test
andb
out
inc
push
out
es
and
jp
mov
mov
dec
xchg
mov
mov
add
cmp
insl
inc
ljmp
pop
loopne
xchg
mov
int
les
mov
movsl
cmp
cli
fwait
aaa
fimuls
dec
push
pop
mov
jne
aas
fwait
andb
mov
dec
sbb
mov
mov
les
inc
dec
imul
mov
sub
fs
fstpt
jg
pusha
or
arpl
cmp
cmp
cmpsb
adc
xor
jmp
cmp
ds
das
clc
aam
ja
pop
mov
les
mov
xchg
cmp
push
lret
iret
pop
aaa
xlat
shlb
sbb
or
aaa
mov
inc
push
aaa
mov
sbb
sbb
fnstsw
scas
aaa
cli
inc
xor
aas
jle
fwait
rolb
stc
or
addl
les
fwait
stc
push
sub
inc
insb
mov
aas
mov
aaa
cmpsb
mov
sub
aaa
pop
and
sub
ljmp
jnp
sbb
sbbb
mov
fs
cmp
std
fcoms
roll
lods
jo
loope
pop
pop
cmc
jg
pop
add
fldt
aaa
adc
sbb
mov
xchg
aaa
push
arpl
and
cwtl
leave
stos
aaa
mov
dec
rsm
hlt
aaa
fmuls
sahf
imul
divl
ljmp
jne
mov
adc
mov
push
ds
aaa
push
xchg
cmpb
aaa
mov
popf
xor
aaa
mov
dec
lods
ret
mov
sti
mov
fbstp
adc
fwait
aaa
push
cmp
dec
jge
add
dec
je
xchg
movsl
andl
xchg
xor
scas
or
cmp
ds
lcall
mov
int
fcmovnbe
cmp
fs
ret
sbb
aas
pop
ret
enter
stos
jae
push
aaa
andl
sbb
mov
aaa
and
xor
and
jae
stos
adc
mov
faddl
je
call
aaa
in
pop
mov
aaa
scas
jmp
xchg
fdivl
insl
jp
and
out
and
sbb
push
dec
add
dec
aas
push
push
mov
daa
pop
bound
pop
mov
xchg
gs
daa
pop
aaa
fisubl
sbb
enter
mov
int
or
aaa
jno,pt
std
addr16
sarl
cmp
movsb
cmp
andb
or
pop
dec
js
jbe
cmc
divl
addr16
int3
mov
and
add
rolb
xchg
inc
loope
sub
scas
cmp
aaa
push
cmpsb
pop
roll
insl
mov
fwait
imul
dec
popf
dec
or
mov
adc
xchg
test
push
pushf
fistps
orl
adc
pop
ss
aaa
stc
insb
je
cmp
movsl
mul
adcb
aaa
cmp
lcall
data16
pop
stos
jb
ja
mov
mov
mov
ror
aaa
jb
push
imul
pop
and
mov
daa
call
fadds
cmp
pop
sub
lcall
sbb
aaa
or
mov
cli
pop
sbb
pop
mov
xor
lock
daa
mov
mov
popa
xchg
rcrl
jb
rcrb
fcoms
jle
xchg
std
enter
arpl
inc
rolb
outsb
das
sysret
pop
in
pusha
push
sti
gs
xor
sbb
jg
mov
adc
andl
flds
add
inc
lcall
mov
out
ss
lds
cmp
int
cmp
hlt
bswap
cmp
cmc
pop
add
dec
or
mov
jno
pop
stos
sbb
mov
cmp
js
aaa
mov
mov
std
pop
add
inc
mov
mov
cli
sbb
xor
aam
aaa
bound
mov
mov
and
sti
daa
lods
lret
add
mov
sub
addr16
cmp
mov
xchg
add
leave
repnz
jg
mov
in
ljmp
fstl
pop
jns
insl
shlb
mov
dec
lret
or
sub
cli
scas
push
scas
mov
stc
and
pop
adc
rclb
aas
mov
addr16
cwtl
into
aaa
sbb
fldl
test
add
jae
cmp
pop
add
inc
jb
cmp
repz
xchg
pop
clc
jbe
addr16
jp
jl
roll
shlb
lock
pop
adc
cmc
sbb
xor
test
outsb
cmp
pop
pop
xchg
nop
adc
mov
sbb
push
aaa
imul
cmp
stc
cmp
cld
mov
pop
into
mov
jns
jle
sub
std
leave
fisubrl
mov
pop
pop
and
push
aaa
xchg
mov
push
ret
lods
jnp
aaa
or
mov
pushl
sbb
jmp
cmp
mov
fildll
addl
xor
and
jo
sub
jae
dec
inc
int3
cmpl
jns
adc
cmpsl
clc
xchg
outsl
add
lods
add
stc
xchg
cmp
xor
sbb
aad
sub
or
xchg
xor
jle
dec
aaa
push
inc
mov
test
jb
arpl
add
mov
adcl
push
sbb
sbb
ds
aaa
sarb
add
inc
ds
mov
pop
out
cmp
je
mov
inc
cmp
sti
ffree
aaa
shrb
cltd
inc
xchg
mov
fisubl
sbb
faddl
xchg
xor
scas
aaa
push
inc
fwait
inc
shrl
fadd
aas
scas
jo
jnp
mov
add
mov
adc
idiv
out
scas
test
in
mov
mov
shlb
in
aaa
cmp
es
mov
lock
imul
or
lcall
stos
call
lret
cmp
aaa
test
or
push
mov
stos
push
cld
out
and
and
aaa
outsl
das
icebp
inc
inc
add
cmp
adc
aaa
mov
std
sub
leave
jle
cmp
mov
cmp
cmpsl
and
lods
dec
pop
push
js
pop
sbb
jb
repz
dec
or
daa
cltd
cmp
pop
add
jns
aam
aaa
lret
mov
je
aad
out
mov
fdivrs
pop
jne
std
aaa
cmpsl
cmc
xor
add
fs
sbb
adcl
flds
cmpsl
cli
aaa
imul
xchg
pusha
sbb
pusha
adc
mov
repz
in
lock
jns
mov
ja
fwait
popa
jno
adc
sbb
dec
add
pop
mov
pop
pop
shl
aaa
sub
fists
or
pop
test
add
cmpsl
pop
mov
xor
pop
cmp
aaa
sbb
inc
aaa
mov
jae
dec
pop
lds
inc
pop
cltd
add
sbb
xchg
out
imul
test
fisttpll
fdivs
and
xor
addr16
jmp
pop
add
or
stc
jge
xor
insl
cmc
adcl
mov
aaa
adcl
loop
aaa
mov
movsl
inc
ficoml
sbb
outsl
insl
arpl
cmp
fiadds
pop
push
sub
nop
push
and
cmp
test
sarl
ljmp
js
outsb
pushf
std
in
and
cmp
mov
mov
cli
insl
mov
cltd
inc
nop
pop
cmp
lret
loope
add
movsb
add
add
pop
sub
scas
sub
dec
stos
daa
mov
pop
nop
cli
pop
rclb
aaa
int3
loopne
jbe
cmp
das
adc
les
lahf
cmpsb
sub
push
dec
and
cmp
fnsave
cmp
rorl
std
fistpll
movsl
push
adcb
xor
dec
outsl
add
aaa
leave
call
mov
ja
xchg
mov
imul
sub
and
sbb
loopne
outsb
psubsb
mov
add
mov
fwait
aam
or
or
sbb
push
mov
aaa
popa
adc
sahf
cmp
push
inc
cmpb
mov
insb
and
push
dec
jns
sbb
dec
pop
jae
xchg
gs
jns
rcrb
sub
fsubrs
std
aaa
icebp
jno
cmp
inc
ret
mov
dec
xor
imul
pop
mov
loopne
mov
hlt
stc
inc
dec
dec
add
pushf
cltd
sub
mov
pop
sbb
inc
jmp
pop
and
pusha
jecxz
fwait
aaa
sbb
cmp
pushf
dec
and
jg
aaa
fdivs
mov
ss
aaa
sub
lds
mov
insl
stos
adc
mov
cmp
push
fimuls
cmp
aaa
cmpsb
pop
fxtract
mov
jnp
and
rcrb
aaa
jp
sbb
outsb
mov
mov
and
aaa
rorb
into
mov
mov
mov
xchg
lods
mov
aaa
push
divb
jg
or
xchg
js
fwait
rolb
mov
pop
pop
xor
xchg
add
sbb
xor
mov
and
not
daa
test
mov
test
mov
xchg
cli
addl
add
scas
hlt
dec
movsl
or
inc
pop
mov
lods
clc
imul
test
scas
cli
pop
test
push
lret
es
int3
sub
shl
mov
cmp
mov
in
push
and
clc
dec
jp
shrb
stos
pop
pop
dec
test
mov
scas
mov
jbe
lret
mov
ljmp
clc
rcr
nop
push
addb
or
cmp
or
cmpsl
sbb
nop
daa
jp
mov
jle
inc
iret
test
push
ljmp
xchg
fildl
mov
pop
mov
xor
add
lret
fcmove
sub
cmp
push
imul
mov
outsl
mov
xorl
inc
push
test
mov
aas
dec
pop
lret
addr16
jo,pt
jno
jb
add
ljmp
ficoml
xchg
add
cmp
cmp
or
fildl
addr16
add
ret
xlat
leave
stos
loope
lds
dec
mov
add
mov
mov
or
loopne
xor
lcall
pop
fcoms
jnp
cmp
xchg
push
add
or
jbe
sbb
adc
xchg
aam
xchg
pop
push
stos
outsb
lods
dec
data16
das
mov
out
mov
or
push
orl
clc
addr16
cs
xlat
repz
imul
imul
mov
cmp
dec
ficompl
add
xor
mov
scas
mov
jle
pop
jb
test
sub
jne
fwait
cli
mov
ficompl
inc
jle
js
sub
sub
cmp
data16
popf
or
sbb
push
lods
jle
clc
add
push
cmpsl
leave
dec
mov
mov
fs
adc
test
push
cmpsl
push
lcall
mov
lret
clc
in
fisubl
nop
movb
pop
sti
sub
jge
push
sub
imul
push
inc
testl
xlat
pop
pop
mov
jl
fstp
add
adc
aaa
icebp
mov
lcall
jge
test
sbb
cmp
imul
pusha
movsl
outsl
lds
mov
out
jle
int
mov
push
jns
dec
cmp
lcall
stos
test
out
and
std
test
bound
inc
cmp
dec
sub
add
sbb
or
sahf
cmp
pop
sbb
inc
inc
test
inc
jle
cmpsl
mov
sub
adc
dec
pushf
ljmp
cmp
push
ret
fisubrl
jo
add
pop
lcall
outsl
test
faddl
clc
jp
inc
mov
jns
aas
scas
mov
mov
push
pop
fistl
inc
add
fisubrl
into
push
add
cmp
cmp
lods
jle
pop
movsb
clc
nop
or
cmpsl
int
ret
cmp
clc
jmp
cmpsl
sbb
test
ficoms
aaa
addr16
clc
sbb
lock
push
aas
cmp
or
add
bound
push
movsb
cli
pop
sbb
mov
aas
add
jp
inc
cmp
pop
fldt
lds
lock
inc
mov
lret
cli
lods
imul
repz
mov
je
add
cmpsl
xchg
cmp
sbb
sbb
es
jp
insb
fistps
mov
xor
mov
sub
pop
movsb
cmpsl
imul
cli
jle
push
cmp
lret
pop
popa
incl
mov
cmp
js
or
mov
fcomps
scas
fwait
ja
mov
ds
sarb
dec
std
jo
jae
in
stos
mov
xlat
mov
ljmp
cli
cld
inc
add
xchg
mov
out
lcall
jnp
cmp
add
cmp
pop
push
dec
stos
jo
add
cmovne
test
stos
decl
subb
lahf
ljmp
int3
stc
loopne
lock
fisubl
jmp
addl
cli
cmp
push
andb
inc
push
jp
dec
sbb
les
imul
popa
xlat
inc
lcall
rcl
mov
dec
fisttpl
sub
mov
cmp
lcall
pop
fbstp
jae
push
add
nop
mov
mov
inc
fs
mov
jnp
pop
outsl
out
and
mov
scas
xlat
stc
fisubrl
pop
add
mov
lds
mov
repnz
shrb
int
incl
push
mov
ficomps
push
add
adc
mov
lcall
and
push
xchg
inc
call
mov
mov
pusha
aas
clc
pop
shlb
mov
jnp
add
inc
mov
inc
mov
xchg
test
jbe
lods
dec
mov
mov
mov
mov
pop
lcall
in
shr
jmp
mov
cmp
lret
lcall
sub
sub
outsb
add
or
inc
inc
test
pop
push
inc
out
dec
stos
inc
sbb
js
aam
lret
xor
push
jo
add
lock
xor
or
xchg
jns
shrb
fldcw
xchg
inc
add
jp
ret
and
pop
lahf
pusha
pushf
cmp
cmpb
mov
mov
pop
lcall
inc
cli
jae
push
pop
cmp
lea
test
add
dec
mov
xlat
lahf
dec
fistpll
cmpsb
dec
adcb
jp
decb
scas
inc
pop
das
jns
adc
stos
inc
sbb
push
jecxz
les
inc
clc
pminub
nop
cmp
jl
sub
add
xchg
test
push
pop
mov
xlat
jmp
dec
ja
pop
inc
dec
xchg
and
andl
push
cli
addr16
push
pusha
or
mov
flds
fidivrl
jecxz
cmp
cmp
xchg
js
add
jae
lcall
push
jmp
stc
pop
add
mov
push
xlat
mov
sbb
mov
sub
cli
icebp
inc
inc
add
test
lds
mov
xor
rol
jnp
mov
ja
push
mov
jo
jle
jecxz
pop
jp
xor
xchg
jp
in
stos
mov
fildl
cwtl
ljmp
jns
push
bound
xor
sahf
xchg
xchg
xor
cmp
cld
xchg
stos
mov
jecxz
daa
push
xor
jle
cmp
dec
pop
pop
scas
and
ret
jae
mov
dec
xlat
lcall
scas
pusha
push
mov
cmp
cld
cmp
test
or
lret
mov
cmp
cli
push
daa
fldt
sahf
fmuls
mov
push
cmp
mov
test
pop
add
inc
pop
pop
ds
add
mov
in
sub
mov
movsl
shl
psrad
add
jl
jns
jp
test
fistpl
jbe
aaa
mov
stos
mov
cmpsb
and
iret
fstpt
stc
push
dec
mov
add
pop
test
fildll
or
mov
mov
mov
subw
clc
jnp
fbstp
jl
arpl
ja
mov
nop
push
idiv
inc
add
lods
scas
dec
push
test
or
xchg
loopne
sar
and
das
sar
ja
mov
out
cmp
or
jae
test
cli
or
dec
lret
imul
cld
xor
push
jg
cmp
popa
add
or
inc
pop
test
in
cltd
push
addl
push
out
cli
dec
sbb
stos
adc
andl
sub
lret
adc
fisubrl
jo
popa
jbe
ja
repz
pop
mov
inc
pop
mov
enter
sbb
inc
add
fpatan
xlat
dec
dec
pop
add
xchg
test
std
sti
mov
ljmp
ficoms
cmpb
mov
jns
push
sbb
mov
push
test
aad
mov
xlat
pop
enter
ds
lods
mov
mov
xor
mov
inc
lret
inc
push
pop
jmp
sub
mov
aad
add
add
push
cli
repz
lds
outsl
cmp
jo
add
add
push
scas
cmpsb
rorl
cmp
jge
in
cmp
test
mov
push
lcall
inc
mov
ret
inc
pop
mov
das
inc
and
addr16
jp
dec
add
notb
inc
pop
lea
push
jle
cmpsl
dec
mov
xchg
cmp
fildl
cmp
cmp
out
stc
imul
cmp
test
addr16
inc
mov
inc
jle
inc
dec
pop
ffree
mov
lods
mov
shlb
lcall
scas
adc
xchg
roll
lret
rcrb
mov
fwait
xlat
aas
or
stos
push
or
movsl
in
js
dec
clc
jle
iret
pusha
shlb
mov
int
aas
aas
rorl
add
mov
cmpsl
cli
fxch
jmp
rorl
fidivl
andb
cmp
push
or
jo
xchg
clc
std
sbb
jo
push
ja
cmp
add
dec
push
pushf
jle
push
imul
gs
xlat
or
ficomps
daa
jg
cmp
pop
mov
jmp
cld
cmp
pushf
cmp
nop
push
or
pusha
lret
mov
orb
add
std
divl
pusha
out
repz
data16
gs
inc
inc
aas
pop
cmp
pop
sbb
out
je
mov
mov
push
xchg
jp
out
push
add
xchg
jp
jnp
mov
adc
popa
mov
jns
cli
sbb
sbb
and
hlt
movsl
mov
inc
cmp
or
lret
sbb
insb
push
dec
jle
mov
in
dec
mov
mov
pop
mov
pop
dec
icebp
add
jo,pt
xchg
cmp
fiadds
cmp
mov
test
cmpsl
mov
cltd
jp
add
sub
mov
ret
cli
push
fdivrl
shr
sbb
arpl
push
adc
outsl
jge
stos
inc
in
jp
xchg
mov
ds
addr16
pop
cmp
ret
xchg
and
add
mov
xlat
jo
inc
push
mov
xchg
clc
adc
in
lds
aas
xchg
sahf
cwtl
push
pushf
xlat
jge
aas
xor
pop
jge
je
inc
jle
xchg
mov
cmp
movb
mov
pusha
fs
cld
ficoml
sbb
mov
or
sub
popa
xchg
mov
mov
sub
pop
inc
or
xchg
in
adc
xchg
adc
insb
sub
xlat
ja
repz
fistps
fldt
test
push
add
cli
movsb
inc
in
mov
jecxz
bound
cmp
ja
push
cmp
inc
adc
xchg
sbb
rcrb
arpl
outsl
cmpsl
push
jp
dec
xchg
or
std
inc
add
cmc
add
lcall
xlat
sub
adc
mov
xchg
jle
mov
or
sbb
add
pop
dec
push
xor
mov
mov
sti
mov
lcall
cli
jb
adc
adc
stc
sbb
cltd
cmp
jl
or
sti
gs
cmpsl
xchg
mov
lcall
xor
mov
fisubrs
xchg
or
inc
popa
adc
pop
cmp
out
add
out
jmp
xchg
or
xlat
cld
pop
lds
add
mov
fcoml
add
adc
xchg
cli
inc
cmp
clc
sbb
sbb
mov
mov
mov
aaa
cmpsl
sbb
push
and
inc
jp
dec
jg
leave
pusha
pop
sub
out
lcall
push
cs
in
js
ret
ds
stc
sbb
jg
and
dec
ffree
mov
stos
adc
add
push
cmp
ret
arpl
xor
std
cmp
adc
add
add
and
dec
push
or
jo
jno
mov
xor
mov
daa
rolb
ja
pop
pcmpgtb
jp
mov
xchg
lahf
ss
out
or
filds
push
clc
rcrb
mov
mov
mov
inc
popa
cmp
mov
xchg
mov
add
test
je
push
pusha
adc
or
js
sti
das
pop
daa
mov
pushf
or
test
pop
pop
push
aas
sbb
mov
mov
xlat
add
fcomps
dec
cld
jg
pushf
fadds
and
xchg
lret
xchg
pushf
adc
mov
mov
push
cmpsl
fisttps
sub
imull
pop
pop
nop
mov
imul
fistps
dec
adc
ljmp
push
stos
fidivrl
sub
jecxz
inc
cmp
cmp
fs
int
jno
rcl
pusha
sbb
push
imul
dec
cmc
inc
andl
shrb
mov
xchg
dec
add
lret
adcl
xchg
jl
or
cmp
push
loop
or
xor
xchg
sbb
pop
aad
inc
clc
fisubs
and
sbbl
fsubs
aas
test
lret
es
sub
sub
test
mov
cmp
aas
mov
in
mov
lcall
aaa
mov
mov
mov
sbb
lahf
lret
jno
xor
mov
cmpb
xchg
pusha
add
sbb
sbb
jns
jnp
pop
and
inc
clc
or
pop
cmpsl
inc
mov
pop
stos
lahf
xchg
inc
jle
test
mov
or
ret
mov
adc
jle
ja
imul
sbb
roll
cmp
leave
sbb
out
cmpsl
mov
adc
adc
jge
sbb
dec
pop
cli
add
xchg
mov
sbb
fwait
dec
inc
mov
sbb
repz
rcl
mov
mov
mov
shrb
mov
xor
sbbb
xchg
mov
pusha
les
xlat
mov
out
pusha
or
cli
cld
sahf
mov
lret
and
xchg
fcmovnu
aas
jmp
sarl
pop
jl
and
inc
xorl
mov
inc
mov
dec
lcall
icebp
add
ficompl
and
sbb
pop
cmp
or
inc
sbb
mov
cld
inc
add
pusha
and
cmp
add
stos
incb
out
mov
stc
mov
test
cmpsl
insl
ljmp
clc
ficompl
jb
arpl
jl
fs
add
mov
inc
fstsw
fidivrl
stos
add
int3
jge
mov
inc
jbe
fst
ljmp
fmul
xchg
hlt
ds
pop
add
xlat
jns
mov
add
sub
xchg
ds
push
movsl
aas
js
mov
lcall
sub
mov
xor
addr16
lret
pushf
jmp
jns
mov
lods
or
inc
out
push
xchg
mov
movsb
and
fsts
aaa
inc
pop
push
inc
push
test
pop
lcall
mov
sbb
cmp
inc
cld
push
xchg
pusha
mov
pop
mov
jmp
sbb
fwait
or
pop
in
ljmp
add
negb
jge
pusha
add
shll
cmp
pop
xlat
inc
scas
fildl
sub
lea
jmp
outsl
test
rolb
mov
ficompl
cmp
mov
test
jg
xlat
arpl
outsl
popa
push
pusha
push
cld
and
filds
jnp
pusha
arpl
scas
fildll
es
pop
mov
je
lcall
cmp
add
inc
out
sbb
shrb
adc
inc
fs
orb
ja
dec
inc
out
test
ss
xlat
ss
adc
lods
rcr
dec
fbstp
add
inc
int3
arpl
pop
adc
repz
dec
mov
adc
push
and
clc
jmp
xor
imul
aam
cwtl
mov
xchg
outsb
adc
dec
ret
lods
add
dec
inc
pop
test
mov
jg
pusha
stc
je
pop
mov
mov
sbb
aas
scas
pushf
push
test
testl
inc
mov
pop
lods
pop
pop
vshufpd
cs
xchg
adc
jmp
les
jmp
add
incb
or
push
xchg
imul
xchg
in
and
je
cld
clc
mov
ljmp
inc
lods
fldcw
push
jle
xchg
cmpsl
or
xor
push
pop
mov
jge
stos
inc
adc
lock
xchg
mov
push
fxch
xchg
lret
pop
out
fidivrl
bound
imul
mov
sbbl
cmp
cmp
sarb
add
push
inc
xchg
test
jp
dec
cwtl
adc
gs
mov
mov
add
xlat
fmul
ret
jmp
adc
popa
mov
cmp
mov
push
std
jmp
or
xor
mov
sub
inc
and
add
mov
inc
into
xchg
mov
sbb
xchg
rolb
sub
dec
jle
cld
fs
xchg
cmp
cmpsl
dec
or
dec
inc
mov
inc
inc
xor
pusha
testl
push
sarb
stos
jle
int3
jmp
mov
clc
mov
cmp
sbb
or
mov
xor
lahf
pop
mov
je
and
or
divb
popa
xchg
movsb
cltd
sbb
in
imul
outsb
ds
lds
xchg
push
add
push
adcb
push
pop
pop
add
sbb
mov
mov
jl
faddl
fnsave
stc
push
pop
rolb
shll
add
cld
popf
cli
jo
add
push
inc
les
lcall
jp
mov
mov
mov
jmp
sbb
mov
lar
pop
xchg
scas
adc
pop
add
sbb
or
add
clc
lock
aas
pop
cld
jp
xor
mov
push
popa
sbb
jmp
dec
xor
pop
add
inc
push
enter
inc
inc
clc
punpcklbw
inc
xlat
push
roll
or
add
fsts
popf
je
and
test
sti
cmc
arpl
stos
jo
inc
jg
out
inc
mov
lret
add
mov
rcl
std
mov
out
inc
les
addr16
or
rcrb
mov
adcl
fisttps
es
add
cmp
fwait
adc
sbb
test
pusha
fiaddl
sub
cmp
mov
syscall
mov
adc
jnp
push
shrl
adc
inc
fdivr
shlb
sbb
faddl
xchg
ljmp
leave
jle
and
sub
push
cmp
arpl
sbb
add
jae
adc
jo
add
imul
ret
xlat
sbbl
xchg
dec
aad
popf
or
out
fwait
mov
sahf
lods
lret
xchg
xchg
addb
cmp
ds
nop
mov
xchg
jbe
pushf
lcall
outsl
pop
mov
jno
add
fiaddl
inc
fwait
adc
cmp
test
sbbb
inc
push
mov
push
xchg
or
push
jge
xchg
lcall
dec
cmp
mov
out
inc
lock
pop
outsl
jns
jno
add
or
pusha
cwtl
fsubr
xchg
jp
je
cmp
fs
out
rolb
sbb
subl
pusha
outsl
std
mov
in
lcall
dec
clc
xor
cmp
adc
jg
cmp
jae
andl
pop
inc
pop
pop
jp
add
repnz
pushf
aad
xchg
pusha
out
adc
mov
jns
nop
cmpsb
adc
fcmovne
int3
xchg
adc
imull
and
sbb
add
adc
fldt
inc
dec
or
sbb
xlat
xor
fs
mov
pop
fildl
lret
mov
negl
jg
jnp
pop
aas
dec
or
mov
stc
or
sbb
sarl
pusha
push
pop
jnp
test
push
rcr
jle
fucomi
xchg
test
pushf
test
pop
bnd
push
jae
xor
add
out
jle
add
add
add
xchg
and
adc
dec
pop
fldt
pop
xlat
mov
addr16
movsl
inc
lds
adc
pusha
out
fidivrl
sub
sarl
data16
pop
sbb
push
ja
ret
fiadds
sub
sbb
pmaxsw
xchg
add
cmpsl
mov
dec
cli
add
ret
mov
loope
jns
adc
sbb
mov
repnz
sbb
fmull
mov
stc
outsl
lcall
cs
mov
push
lcall
xchg
test
jns
add
scas
mov
rol
fiaddl
inc
sbb
xlat
pop
icebp
xchg
and
sbb
faddl
mov
les
fidivrl
xor
pop
jmp
iret
test
lcall
cli
arpl
inc
cmp
fwait
push
out
fwait
ds
jmp
add
mov
arpl
xchg
and
push
mov
roll
mov
add
enter
pop
dec
mov
push
or
add
clc
cmp
fidivs
dec
pop
mov
loope
fisttpll
add
in
jecxz
mov
mov
push
ds
lret
push
pushf
daa
mov
in
cli
fs
sub
or
fsub
sbb
push
andb
adc
lock
mov
push
xchg
jmp
pop
neg
mov
or
jge
sub
jns
inc
jo
pop
call
add
xchg
pop
jp
add
hlt
inc
leave
cs
loopne
add
mov
stos
inc
pushf
mov
inc
mov
jmp
mov
inc
pop
popa
and
xchg
mov
imul
jle
add
test
sub
pop
cmp
adc
dec
push
test
jo
fidivl
adc
add
lcall
mov
inc
add
test
vmread
sub
cli
inc
lahf
jns
jge
test
mov
ja
cmp
jnp
test
test
push
xchg
mov
dec
push
imul
leave
jns
add
or
pop
fsubrl
inc
clc
xchg
xor
faddl
jp
mov
add
lcall
scas
jg
push
imull
pop
xchg
das
xchg
pop
mov
lret
xchg
cmc
cmc
push
rol
sbb
clc
push
movzbw
push
sar
rol
mov
stc
shr
mov
movzbw
cmp
mov
or
ror
cmc
mov
rol
xor
pusha
call
xorb
nop
lea
inc
jl
inc
pusha
in
inc
jbe
mov
cmp
inc
fcmovb
pop
out
cmp
mov
xor
stos
fisttps
sbb
cs
xchg
push
sub
and
fists
lret
or
jbe
rolb
cmpl
je
jb
gs
outsl
outsb
outsb
arpl
aam
pop
cmp
push
and
push
push
xchg
movsl
push
push
push
fiaddl
mov
icebp
cmpsb
push
pop
xor
scas
or
sub
scas
outsb
imul
into
addl
push
clc
add
jns
in
and
fldenv
inc
fiadds
or
pusha
loopne
xor
stos
xor
dec
adc
je
repz
enter
push
cli
fdivrs
pop
outsl
es
loop
inc
test
add
mov
sub
iret
push
cltd
out
push
jb
cmp
xchg
push
jbe
sbb
adc
xchg
push
cmp
xor
jp
jl
adc
xor
cmpsl
es
out
das
in
ds
sbb
sub
sub
out
dec
cmc
and
add
clc
push
mov
xchg
cmc
nop
in
mov
pop
xor
pop
lahf
add
mov
repnz
pop
pushf
and
in
js
or
scas
xor
in
test
js
inc
xchg
int3
and
adc
pusha
enter
int
mov
inc
sub
orb
adc
lret
mov
mov
lcall
test
inc
std
mov
lods
fisubrl
fisttps
out
sub
hlt
xor
lahf
hlt
rclb
xchg
lds
insl
inc
lea
les
jl
lock
fidivrs
nop
jmp
jnp
pop
das
iret
or
jmp
nop
pop
push
ljmp
lea
mov
sub
inc
mov
or
cmp
jae
lcall
push
inc
and
into
insl
inc
test
or
xor
mov
mov
cmpsb
bound
int3
daa
addr16
cmp
add
inc
mov
jnp
test
icebp
add
xchg
nop
aaa
add
push
mov
jno
or
inc
pop
incb
fstl
call
inc
and
and
imul
xor
pushf
pushl
lea
jmp
out
pushl
mov
mov
pop
jecxz
cmpsl
jecxz
xchg
adc
imul
int
mov
sarb
cmp
adc
push
cwtl
daa
loope
aad
xchg
sti
or
lret
movsl
daa
sbb
addr16
fmull
sahf
js
mov
mov
stos
mov
jbe
mov
mov
and
imul
inc
xchg
rcl
jge
fldt
in
std
or
int
and
int
mov
mov
pop
mov
aaa
gs
int
imul
sarb
jnp
stos
mov
data16
fnstenv
mov
mov
xor
out
aam
cmp
fcoml
jle
sti
fwait
scas
jge
es
inc
pop
jge
shll
mov
movsl
add
sti
incb
scas
pop
scas
mov
int
jle
js
mov
mov
or
addr16
add
jns
inc
cmp
cmp
push
pop
repnz
and
lods
lahf
movaps
test
cmpsb
fcompl
mov
add
ds
sahf
pop
fdivl
cmp
leave
push
sbb
xchg
lea
jp
aam
pusha
mov
bt
jmp
push
cmp
add
call
inc
nop
movsb
or
insb
enter
insb
in
mov
cmpb
cmp
mov
xchg
scas
sbb
dec
test
ret
jno
sti
cli
adc
nop
inc
jmp
sub
adc
cld
rolb
mov
loope
jno
icebp
dec
mov
cld
pop
mov
into
sbb
mov
lea
stc
pop
leave
adc
jge
add
mov
mov
sbb
mov
in
mov
bound
xor
test
push
mov
xchg
int
stc
sub
lahf
pop
fldl
jno
xchg
repnz
in
add
xorps
or
inc
cmp
sahf
insb
xchg
mov
sub
add
repz
cmpsl
mov
lea
xchg
pusha
mov
push
or
pop
adc
shr
inc
mov
orb
xor
ret
adc
cmpsl
jmp
push
inc
pop
ja
es
nop
fistps
jae
aaa
ja
pop
push
mov
adcl
add
js
cmp
int3
sbb
jle
xor
mov
jecxz
adc
bound
sbb
fwait
mov
pop
es
test
jle,pt
mov
out
jg
or
sbb
mov
jbe
gs
jle
rorl
ljmp
push
pop
loop
push
in
sub
lock
push
pop
push
mov
in
aaa
imul
ret
ret
pop
add
dec
out
lds
xchg
mov
addr16
xchg
fcomip
nop
daa
mov
cmp
mov
sbb
dec
pop
repnz
test
and
aaa
outsl
inc
cmp
aas
aad
aas
clc
ja
push
jae
xchg
cs
stos
mov
fisubrs
add
incb
ja
pop
mov
aas
popf
xchg
sbb
mov
pop
sbb
jb
sbb
add
cmp
mov
das
test
inc
dec
out
push
int3
jae
mov
dec
mov
enter
sbb
xor
cmpsb
inc
or
aam
inc
popa
pop
mov
jle
dec
sbb
mov
xchg
cmpsl
sti
xchg
adc
pop
jmp
cmp
jne
ret
sbb
sub
mov
stos
test
aad
push
pusha
rcrl
ss
xchg
push
xchg
in
les
pop
cmp
cwtl
mov
lahf
sbb
vfrczss
sbb
or
add
adc
inc
xchg
into
es
aas
ret
testl
xor
mov
movsl
dec
insb
xchg
ret
or
jge
or
outsl
les
push
out
test
out
cmpsl
mov
divl
add
dec
cmpsl
daa
mov
mov
or
cltd
mov
cmp
fs
repnz
loop
push
daa
out
sub
loope
jg
sbb
add
add
mov
rclb
mov
aad
movsb
sarl
sbb
inc
sbb
or
jne
mov
mov
mov
inc
mov
dec
hlt
jle
insb
repz
inc
iret
mov
in
insl
hlt
cmp
jb
outsl
and
cmp
lock
scas
cmp
cmp
sbb
cmp
adc
xchg
clc
cmovns
cmpsl
jo
popa
daa
or
sub
jo
pop
jle
xor
xor
mov
in
insl
sbb
lret
inc
scas
pushf
push
aam
mov
loopne
jb
nop
sahf
and
dec
inc
mov
adc
mov
decl
test
cmp
fdivrl
addl
imul
adc
iret
mov
inc
pop
inc
fbstp
jnp,pt
mov
jns
test
repnz
sbb
test
pop
sbbl
sti
iret
mov
adcl
addr16
test
jb
jbe
mov
loope
movsl
or
pop
xor
or
inc
out
fldenv
jp
dec
dec
sbb
jo
push
pop
cmpl
fbstp
adc
scas
pop
or
in
mov
inc
jo
or
daa
or
push
cwtl
inc
cmp
shrl
xor
xchg
and
mov
pop
or
stos
mov
mov
cmpsl
sbb
pop
mov
sti
mov
and
inc
sahf
das
stc
jp
outsl
pop
push
xor
jo
xchg
pop
xchg
mov
add
out
lret
pop
xchg
mov
subl
mov
xchg
dec
orl
and
push
or
mov
mov
out
adc
mov
push
add
roll
aas
filds
pop
xchg
add
jecxz
cmp
cmp
cli
cltd
mov
jecxz
fmull
rol
icebp
mov
dec
inc
xchg
sub
int3
jb
shr
cwtl
dec
imul
xor
mov
stc
arpl
dec
and
jge
xchg
mov
mov
shrl
add
pop
test
sbb
js
mov
cmp
or
cmpsb
mov
addr16
repz
mov
lahf
pop
or
dec
ljmp
loop
ss
popl
push
cmpsl
adc
xchg
or
or
push
sub
inc
hlt
clc
jns,pt
outsb
daa
xor
addr16
cmc
ror
or
mull
add
add
adc
adc
cmp
add
cli
jns
jns
pop
faddl
outsl
mov
mov
stc
cmpsl
cs
mov
mov
inc
movsb
addb
jns
pop
dec
mov
fcomps
pushf
repnz
jbe
mov
ja
out
push
or
inc
xor
pop
mov
push
or
mov
xchg
cmp
test
sarb
mov
dec
jmp
pop
pop
fmul
dec
jg
push
sbb
dec
add
iret
inc
push
stos
mov
jecxz
push
lret
push
push
jb
mov
into
mov
popa
jge
xchg
mov
into
and
xchg
sbb
cmp
mov
imul
pop
pusha
out
xchg
bound
xchg
pop
addr16
add
sbbb
inc
push
test
inc
test
es
dec
jns
mov
fnstenv
xchg
add
call
jno
out
sub
or
xchg
jnp
jb
movsl
mov
andb
or
js
sbb
inc
imul
xchg
inc
test
pop
xchg
mov
jnp
lahf
inc
xchg
dec
into
pusha
xchg
inc
std
or
mov
sub
filds
push
xchg
jb
and
lahf
movb
xor
and
jb
push
stc
daa
adc
push
es
push
loope
or
test
jo
push
in
inc
pusha
js
or
jl
xor
movb
mov
adc
fs
sbb
pop
jge
out
mov
cmp
push
nop
icebp
push
lret
inc
and
adc
push
add
orb
clc
repnz
repnz
clc
inc
hlt
int3
sbb
in
imul
cld
imul
adc
fs
lds
jge
push
lahf
jb
dec
adc
mov
mov
lds
mov
xlat
push
mov
imul
inc
cmp
dec
ds
loopne
outsl
test
test
dec
or
shl
stos
gs
pop
or
jg
mov
and
dec
outsl
push
outsb
mov
inc
pop
test
negb
sti
xor
test
sub
mov
xchg
sub
pop
sbb
incl
test
shrb
rcrl
sub
xchg
add
xor
mov
jge
or
and
mov
mov
ret
stos
pop
push
test
jbe
pop
arpl
xor
mov
pop
test
mov
inc
test
dec
and
pop
data16
stos
mov
inc
sbb
cmc
push
mov
inc
or
aas
cmp
stos
out
mov
jg
xchg
or
cwtl
inc
js
jae
sbb
adc
adc
xor
mov
stos
cmp
das
mov
pop
sahf
jae
push
add
xchg
std
lret
mov
dec
addl
push
jge
loopne
adc
cmp
cltd
xor
cs
jnp
iret
push
stos
enter
sub
bound
ret
mov
test
push
mov
xchg
and
xchg
mov
loopne
push
push
and
test
inc
push
pusha
jg
push
pop
sub
out
jnp
xchg
bound
nop
mov
jl
cmpb
dec
dec
ss
into
sbb
push
jmp
mov
addr16
out
ljmp
jg
pop
adcb
sbbb
ja
fs
adc
adc
sub
inc
subl
lea
loope
jno
lret
sbb
xlat
mov
mov
sbb
pop
rcrb
add
inc
lret
and
insb
rcll
sahf
sbb
cmp
andl
push
mov
jg
cmp
inc
push
cmpsl
jge
mov
xchg
testl
iret
test
push
fists
lock
or
mov
cmp
gs
fcompl
stos
jo
mov
mov
ret
xchg
add
imul
bound
sbb
dec
cmp
rcrl
nop
xorl
mov
dec
xor
pop
add
mov
jno
jmp
xchg
jo
bnd
xchg
ja
andl
outsb
adc
mov
icebp
mov
test
xor
jp
xchg
mov
sub
ja
xchg
decb
push
sbb
ja
std
push
and
or
imul
dec
in
inc
pop
sbb
push
leave
pause
add
loope
rol
clc
adc
inc
outsb
pop
or
and
out
test
or
lcall
lahf
jnp
jl
outsb
add
mov
fisttpl
mov
les
mov
cmp
fcompl
dec
pusha
mov
into
xchg
push
out
mov
xchg
jecxz
inc
test
popa
bound
add
jecxz
or
add
xchg
outsb
or
mov
test
jecxz
mov
xchg
lea
test
mov
dec
aam
repnz
jge
inc
adc
movswl
fdivr
mov
adcb
xchg
add
test
repnz
lods
sahf
xchg
adc
mov
jmp
xchg
mov
or
std
add
outsl
out
mov
sub
sbb
xchg
sub
sub
outsl
rorl
out
mov
stos
xchg
jmp
out
push
ret
andl
test
push
or
jmp
mov
xchg
jo
psrad
cmp
jb
mov
loopne
lea
mov
jle
clc
xchg
dec
push
or
xlat
pop
test
test
mov
cli
addl
std
js
pusha
ret
inc
mov
mov
nop
je
ficoms
push
xchg
cmp
ret
rclb
orb
mov
mov
jns
fistps
mov
push
iret
pusha
in
jl
mov
dec
cmp
in
xchg
fs
push
cmc
sbbb
jle
adcb
cli
out
xchg
stos
es
mov
pushf
pop
push
push
jle
fldt
pop
mov
dec
lds
xor
pop
mov
test
push
xlat
dec
pop
inc
imul
sub
std
pop
cwtl
and
sbb
fstp
mov
sbb
fs
popf
addr16
nop
lcall
nop
ret
aas
jg
adc
push
rolb
js
sub
stc
mov
into
lock
stc
add
mov
pop
in
inc
sarl
enter
sar
cmpsb
jns
repz
mov
cmpsl
std
lret
lods
mov
stc
mov
cli
jbe
jnp
add
lahf
inc
mov
or
sbb
pop
sbb
pop
stc
inc
lods
inc
lret
cld
leave
inc
pop
fildll
push
pop
pop
xor
xchg
xchg
rolb
out
push
leave
push
mov
ret
mov
inc
inc
jl
jns
shrl
pusha
mov
mov
dec
sahf
sub
inc
data16
pop
cltd
jmp
fistps
pop
mov
mov
lock
inc
xchg
sub
jns
inc
notl
sbb
xor
cld
ret
pop
lcall
hlt
jns
jo
add
int
orl
xlat
movsl
cld
push
sarl
fsts
pop
pop
or
xchg
scas
add
pop
push
sub
pusha
adc
xor
shrb
xor
jnp
cmp
cmp
mov
pushf
jb
sbb
loopne
inc
inc
fs
mov
pusha
loop
imul
incl
mulb
fstpt
cli
pxor
jo
fcmovbe
cmpsb
sub
sbb
add
and
movsb
push
mov
inc
xor
iret
add
jg
pop
jnp
arpl
cmp
out
cmp
xchg
stos
incl
arpl
or
mov
or
xchg
mov
das
xchg
pop
push
push
jecxz
iret
mov
cmc
cwtl
cs
mov
jg
sbb
adc
cwtl
das
jbe
sub
inc
xchg
cltd
jl
loopne
lret
ja
inc
daa
stc
add
inc
loop
xchg
mov
pushf
movsb
pusha
inc
outsl
js
movb
shlb
sbb
jg
dec
leave
sbb
cmp
mov
dec
add
lret
mov
ljmp
dec
sbbb
in
in
add
add
sbb
fsts
andl
dec
sbb
lahf
xchg
xor
into
js
lahf
sahf
mov
xor
cmp
mov
pusha
mov
add
adc
xchg
sbbl
pushf
lahf
or
inc
jnp
mov
add
xchg
mov
mov
push
test
push
cmp
pop
mov
out
xchg
sub
or
fs
sbb
inc
xchg
pop
aad
jg
xor
leave
aas
sub
test
cltd
sbbl
arpl
ficompl
pop
xor
xchg
jno
xchg
cmp
or
or
cli
ffree
repz
insb
loop
fbld
cmp
xchg
cmp
or
or
out
mov
cltd
das
sub
test
enter
dec
outsb
dec
and
test
leave
or
and
xchg
jge
push
jmp
das
test
jno
xchg
lods
iret
mov
loopne
rol
out
cwtl
mov
jne
out
push
sti
inc
stos
out
push
xorl
je
sub
andb
inc
cmp
cld
cmpsl
test
testl
jmp
divb
movsl
jno
inc
xchg
xchg
jb
xchg
pop
pop
sbb
pop
ret
daa
cmp
push
cld
jo
inc
adc
les
mov
lock
dec
xchg
inc
or
inc
mov
inc
sbb
jb
int3
gs
bound
dec
dec
cmp
adc
rcrb
data16
inc
sarl
sbb
rolb
sarb
scas
pop
les
adc
aad
ret
pop
sbb
adc
or
mov
dec
and
pop
xor
movsl
jecxz
jg
cwtl
jb
test
sub
add
pop
or
aas
cmp
jg
dec
sti
ror
ret
mov
lcall
scas
inc
jl
leave
mov
jecxz
gs
push
add
ds
jmp
mov
push
pxor
and
out
das
push
add
pushf
push
xchg
sbb
and
stos
wbinvd
pop
out
push
xchg
inc
xchg
std
cmp
adc
mov
mov
mov
sbb
and
jge
xchg
xor
sar
adc
sbb
xchg
in
xchg
adc
pop
out
xor
jmp
lret
or
xor
xor
lcall
xchg
sbb
mov
daa
dec
pushf
pop
cld
jmp
inc
adc
out
inc
lret
orb
adc
loop
adc
repnz
enter
aad
mov
pop
pop
jnp
and
ja
in
aam
jg
outsl
jecxz
rolb
jns
enter
sbb
xchg
mov
ja
loope
mov
dec
stos
sbb
mov
test
adc
xchg
mov
fstp
push
call
mov
add
test
xchg
dec
dec
push
or
push
cmpsl
inc
jmp
movl
sub
jle
inc
sti
mov
push
dec
fwait
inc
jp
int3
mov
mov
push
out
mov
sti
mov
mov
xchg
sti
pop
insb
insb
push
pop
push
repnz
push
cmc
push
or
push
outsb
and
dec
inc
test
iret
mov
repz
xchg
inc
popa
or
ja
mov
mov
inc
cpuid
cmpsl
or
push
mov
lock
arpl
test
jg
ljmp
cmp
xchg
push
filds
fwait
dec
sbb
pop
leave
dec
mov
sub
sub
daa
jnp
sbb
ja
cmpsb
out
mov
mov
cwtl
movsl
cltd
dec
outsl
xchg
dec
iret
movsb
jle
fisttpl
xchg
sbbb
out
adc
mov
pop
sbb
xor
sbb
divl
mov
jbe
sbb
jecxz
test
sbb
xor
pop
xchg
jle
jle
mov
js
cwtl
test
ljmp
jo
test
stc
sub
mov
pop
push
or
ret
rol
mov
test
mov
in
sub
out
cs
xor
xor
inc
into
mov
fdivl
lahf
inc
rcll
test
je
inc
inc
inc
and
call
sub
mov
mov
sub
dec
and
mov
pop
jp
stc
pop
pushl
cwtl
push
mov
adcl
mov
dec
push
jmp
inc
dec
mov
cli
push
push
bound
dec
lods
fcomps
dec
cli
add
ret
inc
cmp
lahf
fldenv
bound
outsl
lea
mov
iret
dec
xor
mov
xor
add
mov
sbb
adc
push
idivl
out
imul
mov
fsubrs
cmp
arpl
inc
repz
jmp
test
mov
adc
pushf
hlt
push
sti
xchg
jmp
xchg
mov
cmp
test
ret
loopne
sarl
cmpsl
mov
adc
inc
xor
push
popl
out
pop
stos
shlb
aam
jl
inc
shll
mov
cwtl
or
add
dec
pop
test
sub
add
or
bound
popa
out
xorl
add
mov
mov
push
bound
test
add
pop
push
dec
out
sub
popa
shl
xor
cltd
lahf
subb
mov
hlt
cmp
xorb
inc
dec
xchg
leave
sub
in
fiaddl
test
jg
push
cmpsl
loopne
jp
push
inc
in
pop
xor
sub
lret
mov
nop
sahf
scas
cltd
push
mov
jl
fdivrl
imul
popl
sub
ss
decl
scas
mov
out
dec
test
inc
adc
mov
aad
iret
mov
incl
pusha
jmp
dec
jp
insb
pop
fucomip
incl
loopne
or
adc
bswap
repnz
xchg
outsl
xor
add
pop
mov
into
dec
xor
stos
mov
sbbl
and
add
pop
stos
cwtl
test
aas
gs
cmp
or
enter
mov
stos
imul
cmp
cmpsb
repnz
xor
jnp
aam
js,pn
or
sbb
xchg
and
push
sub
mov
xchg
lahf
mov
sbb
push
dec
mov
push
push
mov
or
xchg
inc
sbb
jp
jb
pusha
adc
lods
fdivr
clc
filds
and
ret
mov
add
cmp
adc
ficomps
test
xchg
and
adc
jns
or
pop
dec
subb
sbb
stos
fadds
test
push
push
dec
xchg
lahf
mov
lahf
lret
les
test
inc
sbb
push
pusha
loop
push
mov
cmp
lret
out
inc
daa
xchg
sbb
jne
pop
mov
jb
lds
inc
ja
or
les
cltd
repnz
sti
add
mov
jg
rcrl
inc
and
cmp
push
dec
outsl
add
inc
jge
outsb
and
test
dec
mov
or
jecxz
push
jge
sti
add
fwait
test
les
or
jge
test
or
shrb
ficoms
sub
pop
outsb
lea
fs
xor
jp
or
jae
outsl
jecxz
test
sbb
cmc
nop
mov
ficoms
xchg
sahf
cmp
ret
icebp
mov
xchg
data16
dec
jle
xchg
cli
mov
mov
add
out
test
lea
fwait
cmp
mov
imul
cmp
xor
push
mov
sbb
adc
and
rorl
push
data16
jg
fwait
xchg
fdivrl
fwait
sbb
sub
leave
sbb
sbb
out
xchg
mov
mov
fmul
and
jbe
rcrl
mov
lahf
cmp
ret
sbb
cmp
adc
imul
sahf
pop
xchg
fs
mov
or
push
orl
jmp
or
daa
lcall
cld
mov
ficompl
int3
sbb
les
jb
xchg
jl
cld
cmp
ds
jge
popa
je
inc
mov
std
jmp
push
out
add
cwtl
adc
sub
sub
sbb
push
push
xchg
fwait
shll
xchg
adc
push
lcall
pop
test
xchg
xchg
push
aad
loop
mov
jns
mov
push
mov
clc
mov
xchg
outsl
xchg
fmull
int3
xchg
ffree
and
in
mov
jne
jo
stc
adc
dec
mov
cmc
mov
sbb
into
add
icebp
pop
or
push
repnz
mov
sbb
pop
jmp
popl
lret
mov
lret
xor
stos
scas
xor
jb
pop
pop
mov
dec
mov
mov
jg
nop
cwtl
out
iret
popf
xchg
or
cmp
clc
xchg
jae
ja
xchg
cmp
xchg
outsb
lret
clc
popf
leave
ret
cmp
push
pop
outsb
subb
movsb
dec
inc
sbb
xchg
test
cmpsl
cli
lret
pop
mov
mov
les
add
jno
lahf
dec
push
movsb
push
dec
fwait
jo
in
or
sbb
test
fs
imul
dec
mov
push
sbb
rcrl
test
fistl
fstpl
xchg
inc
xor
inc
adc
ret
lahf
xchg
repnz
jne
fildl
sub
ss
repz
mov
js
fs
inc
mov
inc
out
gs
or
sbb
sbb
inc
mov
sub
adc
test
orb
rcrl
jno
js
pop
iret
push
mov
imul
mov
lock
aad
bound
lock
push
fistpll
test
aas
or
test
popa
mov
dec
mov
shrl
aaa
mov
mov
les
xchg
loopne
or
or
inc
daa
sar
shrl
xor
fmuls
xor
adc
inc
push
iret
sbb
adc
jle
pop
ud1
popf
xchg
je
pop
pop
subb
daa
cs
rclb
sbb
scas
sub
mov
mov
lds
jge
leave
out
aas
les
and
call
mov
sub
pop
xchg
sbbb
cmp
dec
xchg
push
dec
sar
outsb
xchg
inc
mov
das
outsb
jg
add
sti
add
dec
xchg
push
fs
les
dec
cmp
add
xchg
fcom
jmp
dec
sbb
lock
mov
sub
mov
xor
mov
xor
pusha
xor
xchg
xor
jmp
into
popa
out
imul
dec
jge
mov
pop
xor
incl
lock
inc
and
daa
mov
dec
pushf
push
mov
mov
pop
repz
or
ret
daa
lock
push
lahf
shrb
scas
xor
das
js
ret
pop
sbb
fdivrl
or
add
rcrb
clc
dec
fnstsw
push
je
pop
loop
ret
ds
cmp
xchg
mov
xchg
fimull
or
fmuls
lds
lock
rcrb
or
out
jmp
adc
add
stc
push
outsl
addr16
sub
jno
jge
lea
push
loop
jb
imul
mov
mov
cmp
adc
rcr
or
aas
pop
out
pop
mov
aad
out
iret
sbb
imul
cltd
jns
jecxz
cmp
cltd
les
jb
lret
fstpt
jmp
es
call
rorb
repnz
jg
lock
test
int3
gs
lods
xor
dec
in
cli
leave
mov
push
add
daa
mov
idivl
in
jle
cmc
in
jg
loopne
cld
stos
loopne
sti
loopne
emms
out
mov
mov
loopne
mov
sbb
sbbb
dec
lock
jb
pop
xor
mov
nop
push
xchg
nop
fistpll
push
mov
inc
sbb
cmp
push
daa
scas
jmp
sbbb
mov
pop
mov
test
nop
mov
inc
jle
fsubrs
mov
pop
imul
jmp
adc
xchg
sbbb
push
mov
push
imul
cli
sbb
rep
dec
push
cmp
fstps
jns
inc
inc
mov
jle
push
jg
adc
cld
into
das
inc
mov
push
xor
push
mov
xchg
mov
mov
pop
mov
mov
fildll
xchg
cld
xchg
fs
scas
mov
enter
scas
add
inc
push
mov
jo
jno
inc
push
xchg
mov
adc
xor
lock
push
fisttpl
orb
dec
imul
rorb
daa
jg
mov
pusha
push
orl
stc
mov
test
stc
push
cmp
ret
mov
out
or
adc
fdivp
add
pusha
dec
push
jo
in
cmp
push
nop
pop
mov
subb
mov
push
push
inc
mov
lahf
push
or
push
adc
inc
pushf
lahf
sub
xchg
pop
cmpb
mov
xchg
stos
inc
dec
int
mov
test
inc
or
push
out
sub
ja
std
daa
scas
inc
repnz
scas
arpl
jo
inc
mov
iret
adc
sbb
pop
daa
jg
adc
mov
ret
cltd
xor
lock
sti
cli
dec
ret
sbb
lock
or
mov
mov
test
subb
push
fdivp
or
pop
adc
imul
cli
jmp
mov
inc
out
jmp
sti
adc
mov
xadd
movsb
scas
inc
dec
bound
scas
stos
fsubl
adc
dec
and
xchg
jnp
lods
inc
cmpl
adc
sahf
inc
sbb
add
pop
mov
stos
hlt
or
jg
adc
repz
pop
or
out
test
sbb
sub
rcll
rcrl
jl
loopne
arpl
dec
bound
stc
push
add
test
cmp
inc
dec
lahf
andb
inc
mov
mov
jmp
das
dec
test
sbb
mov
xchg
das
scas
ds
push
fsubrs
dec
bnd
mov
jge
mov
scas
in
sbb
das
mov
jmp
sub
out
cmp
adc
jne
ja
jmp
or
repnz
lret
xor
rorl
imul
inc
repz
sahf
stos
outsl
mov
repnz
cmp
imul
dec
fs
dec
adc
incl
jecxz
and
imul
js
iret
arpl
pop
mov
mov
cmp
push
or
xor
mov
lret
inc
fcmovu
and
loope
push
outsb
mov
xor
stos
sub
or
jecxz
fisttps
out
call
out
sahf
push
out
iret
mov
pop
loope
das
xchg
call
cltd
rcl
mov
xchg
sbb
idivb
cmp
push
sbb
cmpb
add
xor
adc
lcall
std
adc
stos
das
movsb
sbb
mov
aaa
mov
dec
pop
pop
imul
orb
mov
stc
cmpsl
push
repnz
pop
xchg
adc
ljmp
sub
mov
dec
xchg
out
xor
fists
lds
adc
into
cs
jp
inc
sbbb
dec
xchg
ret
daa
jg
lahf
mov
pusha
lahf
push
enter
jl
out
add
inc
in
sbb
mov
iret
push
ret
out
dec
dec
and
imul
mov
add
shrb
mov
mov
jecxz
das
mov
push
mov
mov
andb
sub
mov
mov
push
mov
in
add
or
out
sbb
bound
xor
add
testl
sbb
into
mov
fildl
xchg
stos
mov
sub
aad
mov
mov
lcall
push
jecxz
mov
cmp
pop
push
in
rolb
xor
or
scas
adc
ljmp
sbb
subb
xchg
sti
das
out
orb
mov
adc
mov
lds
pop
mov
out
inc
int
jp
addl
push
pop
or
cs
mov
sub
cltd
mov
push
mov
mov
and
push
pop
push
jae
mov
nop
call
test
push
test
scas
xchg
xchg
xchg
fcompl
repz
repnz
dec
sbb
mov
jns
jne
pop
pop
push
push
dec
jo
mov
mov
sbb
out
and
mov
lret
cli
mov
daa
jg
jg
push
jg
or
adcl
inc
adc
lret
mov
sub
xor
push
xor
mov
jg
dec
jg
push
dec
out
inc
imul
pop
cmp
jmp
bound
in
mov
sbb
lret
jns
outsb
in
ret
lahf
mov
fidivl
xor
add
sti
out
bound
inc
shrb
mov
push
push
lcall
imul
mov
jge
stc
dec
push
iret
push
add
pop
cmpb
and
fnstsw
lahf
dec
xor
jg
pop
mov
mov
push
lahf
mov
cltd
jbe
mov
imul
push
mov
pushf
mov
inc
outsb
mov
lahf
scas
jae
dec
fimull
mov
fsubrs
ud1
and
pop
jecxz
dec
movsb
mov
jecxz
lcall
nop
aad
mov
mov
insl
popa
repnz
jmp
sbb
arpl
cli
test
insb
cmp
inc
pop
push
aas
cmp
xchg
mov
testb
inc
lret
faddp
mov
fdivl
jge
jl
sub
sbb
sbb
pop
xchg
pop
rcrb
js
sub
insb
lahf
and
int3
repnz
xor
nop
stos
jg,pn
cs
fistl
popa
mov
pop
inc
pusha
jle
inc
fwait
push
repz
insb
cs
add
inc
cmp
pop
subb
je
xor
push
sub
mov
fiadds
mov
repnz
push
loop
into
pop
js
or
out
cwtl
adc
pop
inc
pop
push
add
xchg
fucompp
or
inc
or
dec
outsb
xchg
lret
pop
add
test
dec
test
inc
das
push
mov
push
stos
add
cli
push
mov
inc
add
or
fsubrs
into
jecxz
mov
call
adc
dec
into
sbbl
in
pop
loope
adc
fstp
and
outsl
das
push
jg
mov
lret
sbb
push
ds
sbb
hlt
incb
fwait
ds
push
add
dec
sbb
xorb
cmpsb
mov
into
lods
dec
adc
jns
adc
push
mov
sbb
test
mov
lcall
xchg
adc
lods
cmp
add
xchg
stos
out
lahf
ds
xchg
push
into
sbb
mov
out
xor
stc
xorb
mov
inc
outsl
fimull
xchg
mov
pop
ljmp
sahf
rcrl
out
xor
out
lret
and
test
sahf
push
pop
sbb
std
mov
stos
sahf
jg
sahf
mov
pop
into
iret
test
and
sbb
sahf
mov
mov
mov
out
sbb
jle
into
push
orb
mov
sbb
mov
outsb
push
mov
in
mov
dec
xchg
testb
fmuls
mov
adc
add
mov
dec
fildl
adc
mov
cli
push
bound
sub
mov
out
adc
imul
scas
mov
cs
out
int3
sbb
or
or
sub
mov
rcll
movsl
jp
aaa
shrl
fsubp
push
or
jnp
ljmp
movsl
pop
mov
xor
daa
xor
pop
dec
pop
xchg
add
push
inc
push
test
pop
das
mov
pop
push
stc
pop
shlb
add
mov
dec
jp
push
xor
gs
push
inc
mov
scas
mov
inc
sub
outsb
dec
fsubrs
lahf
jle
xchg
ds
fisttpll
fnstcw
repnz
lock
repnz
sbb
sub
movsb
insl
mov
in
or
jge
sbb
push
arpl
or
adc
enter
cmp
push
fwait
mov
jo
hlt
iret
test
sub
sbb
sbb
mov
hlt
adc
cmc
sbb
clc
shlb
in
lods
push
push
mov
adc
outsb
mov
push
rcll
dec
ret
dec
sbb
and
mov
mov
les
cmpsb
lods
mov
mov
out
shlb
add
gs
xchg
jg
or
adc
fmul
jo
add
dec
mov
ja
lods
sub
jge
popa
push
sub
aam
stos
inc
cmp
pop
pushf
fwait
hlt
out
mov
push
arpl
cli
jns
push
subl
ret
insl
pop
imul
pop
add
fwait
shlb
push
mov
testl
sub
push
jnp
loope
fisubrs
imul
roll
mov
ds
xchg
ds
push
jb
jae
pop
iret
or
out
sarl
mov
jo
bound
xor
fdivr
lods
sti
filds
mov
fistpll
fldenv
sbb
inc
repz
push
add
subb
sbb
add
jle
xchg
sbb
push
popa
jle
cltd
pop
lods
sub
inc
jmp
jge
nop
pop
in
pop
adc
out
jns
mov
push
and
pop
or
lcall
fstp
test
frstor
cld
or
add
leave
mov
fimuls
mov
out
sub
cld
in
fldt
int
push
int
test
int
daa
pop
push
push
popa
enter
mov
in
mov
pop
int
xchg
leave
repnz
outsb
push
and
push
loopne
jns
add
sahf
fwait
mov
cmp
hlt
adc
int
std
sub
adc
leave
filds
imul
mov
std
arpl
std
js
xchg
xchg
data16
fldcw
sbbb
data16
call
data16
in
adc
jmp
and
out
add
ret
push
mov
xchg
in
mov
in
xor
sbb
pxor
in
sbb
fucom
or
in
adc
call
pop
jecxz
add
or
or
xor
adc
loop
sahf
xorb
add
jb
adc
jnp
gs
push
cmc
jnp
stc
mov
push
enter
cmp
ret
lea
jmp
mov
sbb
adc
andb
or
xchg
test
rclb
imul
mov
dec
pop
xchg
daa
data16
dec
inc
inc
xchg
stos
mov
mov
aas
out
jp
or
mov
addb
mov
add
jg
mov
insl
mov
in
cmp
xor
ret
enter
inc
pop
sbb
ret
and
in
rcrb
add
pop
jae
fisttps
and
push
and
push
and
sarb
loope
push
popf
lods
and
data16
cmp
xor
popf
xor
loopne
push
xor
lods
dec
imul
sub
lods
je
sarl
movd
ret
push
or
xchg
jo
cmp
adc
cmpsb
aas
mov
cld
mov
into
leave
data16
xchg
and
push
cwtl
sub
xor
xor
mov
mov
fstpt
sub
into
add
subb
icebp
mov
out
xchg
out
dec
dec
not
jg
mov
mov
sub
push
mov
das
mov
jge
mov
xor
out
sbb
aad
lahf
jge
cmp
jge
pop
cs
sbb
dec
jg
mov
loop
xlat
mov
push
jb
out
scas
arpl
insl
cli
imul
in
jge
cmc
mov
rorb
fcomps
adc
imul
cmp
mov
shrb
mov
mov
mov
jmp
scas
inc
es
bound
sub
push
jl
mov
sahf
dec
cltd
jmp
adc
mov
push
arpl
cli
xchg
andb
sbb
or
incb
pop
test
sub
push
sub
or
push
mov
inc
or
xchg
imul
fists
pusha
xchg
in
mov
jo
fists
insl
test
lock
sbb
mov
ss
pop
sub
add
mov
xor
cmp
mov
pop
add
lcall
mov
fdivrs
cmpsb
hlt
movsl
sub
gs
ficompl
sub
inc
or
jnp
stc
fisttpl
and
sti
je
sub
cmpsl
push
cmp
push
xchg
sub
sbbb
mov
call
mov
test
lods
or
or
lods
js
scas
sarl
iret
popa
clc
pop
pop
jp
subb
loope
insl
and
sub
adc
ljmp
fisubrs
fsubl
fsubrl
inc
xchg
mov
dec
sbb
cmp
jle
lods
pop
rorb
or
daa
lahf
cmp
cmp
dec
js
outsl
stc
push
xchg
jle
mov
pop
shl
fwait
jmp
adc
add
mov
ds
into
fdivs
mov
mov
fiadds
mov
cli
pop
enter
stos
shll
jle
scas
pop
push
sbbb
jle
dec
inc
std
xchg
mov
cld
jg
cld
mov
lcallw
xor
mov
mov
push
jp
push
inc
mov
cld
test
xchg
inc
sub
in
sbb
ret
push
fimull
shr
adc
shr
xchg
loop
dec
js
shl
jecxz
fists
sub
arpl
lods
aad
mov
push
gs
ret
add
pop
xor
cli
imul
outsb
xchg
push
pop
jge
shll
fstpl
dec
mov
bound
jnp
cmpsb
xchg
xchg
inc
jle
ljmp
stos
mov
mov
and
mov
mov
outsb
mov
xchg
inc
inc
cmpsb
imul
repnz
bound
iret
mov
sahf
add
stos
mov
xor
mov
jle
repz
mov
dec
imul
gs
adc
pop
and
cmp
rcr
inc
andb
push
pop
pop
mov
iret
add
das
lods
dec
or
mov
gs
lods
cli
stc
shrl
inc
mul
cmpsb
fwait
cltd
fdivr
lods
sarb
jg
fdivrp
imul
sbb
sbb
jb
arpl
mov
mov
pop
and
sahf
inc
mov
jbe
andb
sub
mov
out
daa
jg
pop
mov
sbb
xchg
in
dec
inc
sub
mov
xor
js
push
xor
addr16
imul
fadds
stos
popa
psubd
std
sub
push
dec
fmuls
or
sbb
jg
cmc
icebp
sbb
gs
sbb
in
dec
arpl
dec
mov
push
and
ret
sub
test
mov
push
jl
or
mov
jl
mov
dec
sbb
mov
jl
sub
repnz
std
xchg
out
es
loopne
mov
repz
repnz
cmpb
mov
mov
pop
and
mov
scas
inc
pushf
stos
comiss
es
jp
stos
mov
pop
mov
xchg
scas
xor
push
inc
mov
arpl
pop
add
inc
sahf
loop
inc
jns
popl
sti
sahf
push
shlb
push
mov
out
sub
sbb
out
sbb
push
pop
in
jle
pop
adc
mov
and
dec
lds
sub
jmp
test
stos
xchg
cmpsb
imul
sub
adc
lcall
adc
jecxz
inc
pop
jnp
push
jno
pmaxsw
sub
int3
je
fdivrs
cmp
popa
fimuls
and
dec
dec
push
cmp
sahf
push
fidivs
out
push
fdivs
add
pop
rcl
mov
lret
leave
out
daa
cmpsb
cmp
fwait
das
or
pop
cltd
dec
inc
inc
inc
fwait
xorb
pop
sti
cli
jb
mov
dec
hlt
subl
movsl
lahf
jo
lret
cmp
push
add
inc
jge
or
outsl
scas
sarb
adc
dec
sub
dec
lods
mov
mov
shll
cmp
dec
popa
and
stos
adc
fcmovnu
cmp
fistl
xchg
push
inc
js
mov
push
push
xchg
lods
sub
xchg
stc
inc
mov
xchg
xor
adc
cmc
dec
andb
jmp
lea
lcall
gs
add
inc
sbb
sti
test
xor
repz
mov
lods
lret
das
xchg
stos
lret
repnz
sub
mov
fsubp
pop
mov
repnz
lret
ret
sbb
mov
shlb
sub
test
cmpsb
and
lahf
insb
fmuls
sti
lahf
bound
addb
dec
pop
sti
leave
ret
mov
jg
sti
and
and
jmp
fisubl
or
cltd
test
dec
cmp
push
jmp
xor
insl
dec
jb
push
jbe
cli
dec
rcrl
or
jge
sbb
fiaddl
mov
inc
mov
pop
dec
int3
cwtl
push
cs
fdivrs
out
mov
imul
dec
push
dec
pop
mov
sbb
cmc
enter
lahf
jle
push
jmp
push
inc
dec
pusha
loop
negb
stos
cltd
jns
ret
lahf
mov
cmp
cwtl
fidivrs
or
sbb
dec
push
cmp
mov
lea
in
jae
xchg
leave
fwait
pop
enter
mov
fcompl
push
inc
dec
cld
loope
leave
jle
dec
cmc
std
decl
cmp
ret
mov
pop
inc
cmc
sbb
cmovnp
jecxz
icebp
add
mov
cld
jb
mov
jo
add
push
dec
sbb
mov
jo
jmp
lods
adc
jns
xor
lods
dec
leave
jge
das
cmpb
mov
xchg
mov
adc
scas
stos
outsb
jg
sub
ds
imul
adc
lds
test
pushf
shl
stc
dec
mov
push
cs
imull
test
ds
in
inc
scas
push
ficoms
mov
test
icebp
push
cltd
cmp
mov
dec
inc
and
pop
vmread
subb
xchg
fwait
dec
sbb
orb
ja
sub
lods
repnz
xor
test
imul
test
push
sbb
xchg
sub
lods
push
leave
inc
inc
jnp
clc
add
shl
mov
aam
mov
xor
in
scas
xchg
jle
ds
mov
in
pop
data16
gs
repnz
dec
orb
subb
ret
or
mov
mov
mov
sub
lea
bound
adc
pop
and
jns
mov
lods
fisttpl
outsl
sti
imul
sbb
sbb
mov
jg
pop
call
scas
pop
jl,pt
insl
inc
xor
ja
les
or
jb
out
dec
dec
inc
inc
bound
loope
int3
push
divb
mov
stc
pop
sahf
mov
mov
dec
dec
push
pop
jge
jb
xchg
xor
rcr
push
push
dec
xchg
adcb
and
jo
push
inc
loope
bound
stc
xchg
shrl
shl
ja
mov
out
dec
adc
mov
and
jecxz
int3
insb
rorl
data16
stc
mov
fwait
adc
pushf
jnp
imul
pop
sbb
cmp
xor
jg
sbb
mov
iret
rcr
jne
stc
loop
mov
or
jg
mov
out
adc
ja
aas
sub
fwait
jnp
leave
jp
iret
sbb
sbb
push
sub
lods
dec
xchg
jmp
and
jmp
int3
xchg
dec
test
sti
out
adc
pop
addr16
insb
sbb
hlt
mov
fadds
lds
test
imul
push
jl
mov
dec
stc
loop
pusha
pop
ss
fnstcw
jno
or
out
cld
imul
add
mov
insb
imul
aaa
or
mov
mov
pop
or
daa
insb
sub
jg
sbb
xor
ljmp
test
push
cltd
loop
ss
out
lods
sbb
loopne
in
adc
push
xchg
fwait
mov
fistps
sbb
sbb
test
shrl
xchg
fisubrs
inc
xor
ret
popf
in
out
add
push
mov
lds
dec
mov
or
bound
testl
lds
out
stc
js
cmp
lret
adc
jmp
lret
mov
jge
mov
out
sbb
xchg
dec
sub
out
or
add
lret
nop
cmovs
jnp
jb
test
mov
pop
sub
out
movsl
pop
subb
inc
mov
xchg
rcrl
fucomip
filds
sbb
lock
insl
and
ljmp
shrl
jno
jno
lahf
sahf
push
or
imul
leave
jno
call
popa
out
sub
pushf
push
dec
add
jg
insl
bound
xchg
dec
call
test
neg
mov
in
ret
add
dec
inc
xor
or
frstor
adc
xchg
push
in
xchg
and
stos
sbb
sahf
outsb
sbb
mov
sbb
mov
add
andb
shrl
sub
inc
mov
ja
cmp
add
mov
arpl
fcomp
cmp
xchg
int3
pop
sbb
mov
lret
sti
lret
mov
jmp
mov
pop
in
shl
jg
pop
pop
imul
adc
adc
add
inc
lret
mov
cs
push
out
enter
fnstsw
fstps
jae
sub
jge
xchg
and
scas
xchg
int3
ret
adc
cmp
ds
es
out
xor
lock
scas
sbb
leave
dec
lea
mov
mov
jmp
cmp
mov
jmp
inc
inc
mov
mov
sub
test
push
mov
pop
xor
jp
lock
inc
frndint
cmp
popa
mov
adc
sub
leave
fisubs
pop
mov
cmp
data16
jecxz
push
hlt
mov
or
imul
mov
loopne
dec
pop
jecxz
push
push
sbb
sub
popa
pop
xor
push
sbb
popf
add
add
mov
lcall
cmp
mov
das
push
add
mov
xchg
pop
jne
in
lret
push
sub
inc
xchg
sbb
xchg
jg
cmc
mov
fs
movsb
imul
mov
repnz
das
outsl
mov
stc
fcmovne
xchg
cmp
les
test
scas
sbb
fcompl
std
mov
mov
push
lock
jmp
ljmp
lcall
xchg
pop
and
mov
lds
stos
fldl
fists
fcmovne
sub
mov
add
jnp
ljmp
push
sbb
push
lea
jbe
repnz
dec
and
jne
cmpsb
inc
jo
dec
adc
out
fisttpll
xchg
pop
dec
cmp
js
pop
pop
rcl
xchg
mov
dec
sbb
mov
in
fistps
push
mov
shl
sti
add
ds
pmulhuw
push
jp
sbb
pushf
data16
shlb
out
fwait
mov
dec
mov
pusha
mov
adc
jmp
inc
inc
dec
lahf
dec
dec
scas
mov
jns
mov
out
insb
mov
scas
imul
je
cmp
pop
xchg
js
sbb
mov
inc
ljmp
add
stc
repnz
lret
sub
imul
scas
les
mov
popl
jp
push
inc
add
imul
pop
imul
in
lods
mov
in
lret
cmpsb
sub
pushf
fisubl
fs
ret
pushf
mov
push
adc
aad
data16
xchg
out
jmp
orl
jno
movsb
mov
stos
add
incl
cmpsb
enter
rcll
mov
fptan
dec
push
sbb
sub
les
xchg
mov
inc
pushf
pminub
sub
mov
into
mov
sbb
rolb
fwait
sub
test
iret
jle
jmp
subl
pop
inc
cmpsb
pop
pop
xchg
das
pmaddwd
int
dec
into
sub
imul
xchg
outsl
mov
lea
or
lock
rorb
add
mov
push
out
jecxz
push
clc
gs
enter
push
mulb
stos
clc
fdivr
adc
inc
xchg
mov
inc
xchg
lahf
pop
int
mov
add
out
mov
mov
das
push
in
inc
dec
jge
gs
in
inc
adc
pop
mov
mov
ljmp
scas
mov
out
gs
int
jge
ljmp
fwait
stc
mov
cmp
ret
xlat
orl
stos
movsl
mov
sub
lock
dec
into
pop
nop
dec
sbb
add
ret
lret
std
jmp
dec
adc
dec
adc
xlat
inc
mov
test
pop
inc
fistpll
jp
push
outsl
bound
enter
sarb
mov
add
xchg
mov
mov
inc
leave
sbb
add
lahf
ret
xor
outsl
dec
enter
adc
cld
pop
out
leave
mov
mov
iret
jl
mov
xchg
inc
mov
fwait
scas
std
push
adcb
fs
push
out
loopne
mov
push
cmp
push
push
jbe
xchg
ficomps
sbb
sbb
pop
jecxz
jae
pop
mov
bound
ss
scas
pushf
ret
rclb
fidivs
mov
stos
mov
xor
lahf
rorb
ficoms
imul
jbe
dec
mov
mov
test
imul
jnp
lock
or
imul
push
das
popa
lret
lret
cwtl
cmp
jmp
hlt
out
xchg
pushf
mov
out
movsb
or
mov
adc
mov
fldt
jo
lods
mov
and
sarl
mov
xchg
mov
je
gs
add
sarl
jno
out
shll
xchg
sbb
mov
mov
fs
adc
mov
jge
ljmp
jns
adc
or
xlat
adc
mov
test
ljmp
test
inc
inc
sbb
fidivs
mov
clc
cmpl
fstpt
pop
jb
xchg
shrb
mov
push
les
fcoms
or
lea
jg
sbb
test
lods
sbb
pop
test
sbb
test
adc
cs
jmp
imulb
hlt
push
lds
flds
flds
scas
loop
and
push
add
mov
jle
gs
mov
in
lods
inc
push
xchg
test
ja
sti
pop
mov
fs
dec
cmp
in
or
and
jb
call
add
stos
out
pop
lcall
jle
mov
inc
call
sub
pop
mov
daa
addr16
ljmp
ja
arpl
pop
je
clc
fidivs
adcl
lahf
pop
sbb
sub
rcrl
add
lods
sbb
sbb
or
adc
roll
jg
mov
imul
das
pop
mov
or
xchg
test
add
dec
imul
inc
and
fs
fsub
lods
dec
push
sbb
rorl
shrl
es
test
pop
mov
mov
call
sbb
popf
cld
cmp
test
loope
dec
inc
daa
imul
ss
mov
bound
pop
lds
jno
xchg
fsubrp
dec
mov
sbb
je,pn
mov
ficomps
dec
or
dec
or
lret
rcr
inc
xchg
loope
lock
push
pop
aas
push
outsb
sarb
sub
mov
popl
popf
cmp
inc
mov
sahf
sub
cmp
jp
and
icebp
gs
xchg
test
cs
dec
mov
xchg
pop
lods
pop
das
fists
mov
faddl
imul
fldenv
dec
lds
shll
lret
xchg
es
inc
jns
ret
movsl
leave
mov
stos
imul
cmpl
lret
cmp
fcmovbe
jmp
xchg
push
std
cld
stos
daa
divb
cmp
jb
push
shll
dec
push
shll
nop
cltd
lcall
pusha
sbb
sub
push
rorb
sbb
pusha
inc
shrb
mov
push
mov
dec
mov
mov
cmpsl
scas
aas
outsl
into
xchg
jns
mov
std
xchg
insl
jmp
mov
dec
mov
sbb
es
xchg
mov
dec
adc
into
lret
add
inc
test
ss
lret
xorb
into
rcr
inc
stos
outsl
mov
sbb
cmp
xchg
mov
idivb
jbe
push
jp
cmp
xchg
cld
adc
jge
mov
lcall
mov
cmp
jnp
das
imul
movsb
out
pop
fisttpl
loop
lods
into
in
push
inc
and
mov
inc
mov
or
loop
mov
pop
push
rolb
xchg
xchg
imul
clc
test
fwait
js
push
movd
sbb
sbb
jg
xor
mov
jne
cli
mov
ss
fwait
mov
sbb
cmp
lods
jl
mov
push
popa
jg
movsl
jg
test
jle
and
mov
stc
push
js
or
imul
cmc
cmp
dec
mov
shll
add
test
jmp
pop
or
cmp
pop
mov
adc
mov
lods
jge
leave
xchg
repz
pop
inc
add
xchg
mov
cmp
xor
ret
xchg
push
mov
das
mov
cmp
inc
sub
imul
xchg
xor
xorb
jle
dec
in
aam
push
dec
push
xlat
inc
inc
mov
cmpsb
ja
push
inc
pop
outsl
xlat
add
movsb
mov
inc
mov
mov
lea
inc
popa
or
mov
inc
jmp
movsl
aad
or
fcomps
cmc
sbb
sub
into
lcall
sbb
inc
mov
mov
int3
cmp
push
repz
lahf
mov
movsl
dec
pop
push
lahf
stos
fwait
mov
je
pop
fnstenv
xchg
fistpll
push
cmp
or
mov
test
enter
subb
xor
frstor
enter
sbb
cli
mov
cmp
stos
rcrl
in
push
test
inc
dec
in
sub
cmpsb
lods
mov
cwtl
flds
inc
lahf
xor
push
dec
lcall
das
test
sbb
and
dec
dec
cmp
pusha
aad
jno
xchg
ds
lret
nop
rcrl
push
xchg
pop
fst
pushf
adc
shlb
clc
push
js
mov
mov
in
fsts
or
mov
sub
orb
adc
jns
addl
mov
fcmovb
scas
nop
test
iret
cli
scas
lret
dec
shr
shr
inc
and
mov
testl
pop
or
test
and
cmp
iret
je
mov
test
xchg
or
pop
xchg
pop
adc
test
xor
xor
call
dec
adcb
test
add
shlb
sub
adcl
jmp
cmpsb
subl
outsb
push
loope
cmc
fwait
xor
lahf
inc
xchg
imul
fisttpll
fsts
sbb
mov
add
je
loope
ja
stos
sahf
mov
test
sub
xchg
sbb
push
es
outsl
fidivrs
test
sbb
mov
push
cld
jl
add
pushf
test
cli
xor
jns
lahf
mov
notl
pop
inc
scas
rcl
loope
cmp
les
test
mov
scas
jnp
cli
in
dec
test
repnz
or
popa
jmp
test
xchg
lret
mov
jnp
data16
sbb
sub
stc
cmpsb
imul
mov
sub
add
cmp
push
rorb
out
mov
testb
inc
movsl
cmc
fcoml
nop
push
loope
data16
sbb
fs
lods
mov
iret
jmp
and
movsl
movsb
pop
mov
mov
mov
scas
push
fsubrp
ret
daa
out
stc
pop
adc
inc
push
out
les
fnstcw
outsb
lods
jmp
dec
fsubl
or
jnp
in
out
test
out
test
pop
or
fldcw
icebp
mov
or
xor
lods
pop
inc
in
adc
cld
dec
in
cld
mov
rcll
jg
pop
neg
add
movsl
mov
cmp
stc
inc
incb
push
pop
jg
subl
lods
xor
cmc
and
hlt
out
cli
shr
stos
lahf
inc
sbb
lods
sub
out
sti
pushf
inc
sbb
mov
mov
outsl
inc
jecxz
push
sbb
nop
pop
mov
inc
push
jle
mov
dec
lahf
ds
xchg
and
cmp
adc
sub
inc
cmc
push
shlb
inc
push
jle
insb
inc
je
sarb
loop
add
test
repnz
jno
mov
jb
outsb
jmp
jge
lods
xchg
mov
dec
xchg
xor
loop
scas
sbb
cmp
cwtl
sbb
scas
mov
cmp
cwtl
int3
inc
js
mov
xlat
jb
scas
xchg
dec
shrb
xchg
xorb
mov
sbb
sub
mov
icebp
andb
or
js
push
in
lods
into
inc
scas
test
dec
leave
mov
and
cmp
imulb
in
add
cs
sub
push
xor
adc
push
mov
scas
pop
adc
lret
aas
push
ret
daa
fwait
repnz
mov
fistpl
iret
bound
pop
mov
jg
push
adc
xchg
pop
into
push
fistps
push
sbb
adc
enter
mov
aad
ret
ds
scas
test
push
fildl
mov
jns
or
mov
xchg
jb
test
push
ss
std
or
stc
lea
adcb
pusha
clc
push
notb
lods
stos
cwtl
testb
mov
sbb
cmpsb
mov
and
in
leave
das
xchg
inc
or
jns
loope
push
push
and
sub
cmp
push
cmpb
loop
out
rcrb
ret
push
or
int
jmp
jne
jb
sub
xchg
or
mov
gs
or
or
push
hlt
inc
jle
mov
inc
lds
inc
les
sub
test
jp
sub
xchg
push
in
pop
das
add
cltd
adc
jbe
jb
sub
sub
adc
ret
lahf
cmp
pop
jp
hlt
mov
sbb
mov
push
inc
xchg
addl
int3
and
xor
sbb
lret
mov
inc
jg
jb
cmp
rcll
xchg
pop
aad
in
adc
add
xchg
in
sbb
add
and
fidivl
jo
sub
insb
jg
cmp
cli
mov
clc
push
cmp
cs
mov
mov
sbb
xchg
test
nop
inc
lds
in
andb
nop
out
lcall
into
test
push
mov
push
push
push
xchg
adc
sarl
cltd
xchg
mov
mov
or
sbb
in
pop
test
sbb
jbe
or
pop
je
dec
sbb
xlat
loope
jecxz
mov
in
stos
fs
fcmovnb
fsubp
cmpb
imul
stc
jnp
pop
sti
jp
xchg
fcmovbe
outsb
cld
cmp
js
push
mov
jmp
jnp
icebp
and
sub
mov
pop
sbbl
mov
jecxz
aas
ficoms
xchg
test
add
xchg
jnp
shl
fcoml
mov
shrl
cmp
add
pop
loop
loope
jmp
cmpb
jp
js
stc
jmp
aas
and
xchg
lret
daa
sub
xor
fisttps
decl
mov
lret
add
test
jge
inc
cmc
gs
cmp
test
sub
cmpb
jbe
jg
les
mov
adc
adc
les
jmp
mov
js
loop
mov
xor
mov
jno
sub
jns
push
push
clc
add
fisubrl
jbe
jp
xor
scas
add
jmp
loope
jns
jge
das
repz
sbb
inc
out
std
sbb
hlt
movsb
jp
xchg
add
test
mov
incb
lock
fcom
mov
jge
mov
test
sbb
jmp
mov
and
subb
or
dec
or
xchg
scas
jo
sbb
inc
sbb
push
std
cmpsl
mov
mov
sub
ficomps
mov
je
aas
or
or
xchg
or
xchg
jmp
out
lret
mov
sti
sarb
out
sbb
pushf
inc
das
inc
in
rolb
test
xchg
pop
mov
sarl
iret
xor
into
jns
ss
sub
outsl
mov
adc
fistpll
rcr
cmp
ret
sub
das
cltd
jo
ss
jbe
sbb
jae
mov
pop
xor
stc
es
cld
jmp
sbbb
cmp
push
cmc
incb
loop
cwtl
out
and
pop
cltd
test
adc
mov
cltd
mov
ljmp
bound
push
mov
sub
mov
and
pop
stc
adc
shrl
jo
xchg
xor
sbb
cmpsb
in
cmc
pop
push
fwait
push
das
lds
pop
mov
push
jbe
leave
into
cs
adc
xchg
push
and
cmp
cmp
popa
adc
pop
or
adc
test
aas
jb
mov
scas
lds
mov
pop
fstpl
pop
aaa
pop
fcmove
lahf
int3
inc
and
jg
imul
pushf
into
repnz
xchg
push
jnp
adc
mov
mov
inc
push
xor
loope
jmp
or
jle
int
mov
xchg
movsb
ffreep
jns
or
js
or
pop
aas
test
sub
mov
scas
xchg
lock
add
jmp
jp
repnz
jg
sahf
popa
cmp
call
and
ficomps
adc
cmp
jg
pop
inc
movsb
sub
cltd
aam
in
pop
icebp
bound
dec
fwait
xchg
xorb
dec
imul
mul
popa
out
jecxz
xchg
push
sbb
test
inc
mov
push
icebp
cmpsb
inc
mov
mov
mov
fimuls
mov
sbb
xchg
push
ja
or
adc
test
jmp
xchg
mov
cmp
notl
pop
push
adc
pop
sbb
mov
out
jl
inc
addb
daa
sbb
dec
test
pop
movsb
ds
dec
mov
aad
in
loope
pop
aaa
mov
pop
fmuls
inc
stc
inc
push
pop
push
push
push
sbb
enter
aam
sahf
xor
sbb
cmp
int3
addr16
in
fmull
mov
adc
fwait
rorl
test
jg
insb
jmp
and
int3
pop
mov
push
and
enter
dec
lods
test
cli
push
jg
ror
imul
sub
inc
pop
xor
mov
repz
into
scas
and
dec
sbb
mov
aas
mov
stc
ss
into
adc
jg
xchg
outsl
out
test
jg
fs
bound
lret
mov
mov
inc
out
add
jg
pop
xchg
dec
jb
sub
popf
fsts
mov
pop
icebp
repz
add
sub
into
insl
faddl
add
pop
shrb
or
xchg
lock
push
mov
jnp
fcoml
fsubr
sub
xchg
ljmp
push
mov
mov
pop
in
sub
jecxz
mov
dec
inc
or
pop
mov
imul
jbe
pop
cmp
sar
pop
jnp
xor
fwait
test
xor
sub
xchg
inc
cs
and
pop
and
pop
loope
inc
pop
outsb
fcomi
stos
les
in
cmp
push
sub
xchg
sbb
pop
insb
jle
in
fistl
fimull
pop
or
fdivrs
gs
ret
inc
xor
pop
xchg
dec
add
out
jno
out
or
dec
out
sub
inc
ret
lds
mov
aam
push
mov
pushf
cmp
inc
adc
test
mov
das
sub
int
popf
cli
cmpsl
mov
push
adc
pop
cli
or
scas
jnp
sbb
inc
imul
ret
jge
sbbb
lods
sti
outsl
out
jo
pop
jb
stos
push
mov
mov
js
jmp
int3
push
sbb
stc
sahf
xor
jl
clc
mov
data16
push
jns
testb
inc
hlt
jmp
repnz
or
sub
nop
ljmp
or
andl
sbb
mov
xor
xchg
add
imul
pop
mov
aam
xor
mov
push
ret
cmc
jmp
insb
lret
outsb
ja
jp
mulb
add
shl
sbb
mov
pop
iret
scas
shll
dec
or
push
icebp
data16
mov
shr
loop
dec
inc
jle
outsb
push
movb
aam
clc
test
cmp
pushf
dec
inc
add
mov
ret
cmp
rcrl
push
inc
dec
dec
push
push
pop
adc
arpl
jle
out
ret
inc
inc
cmc
sub
adc
push
fidivrs
bound
popf
or
pop
mov
jmp
gs
push
jbe
loopne
mov
lcall
jg
arpl
mul
mov
jecxz
cmp
bound
cmp
mov
push
mov
or
pusha
cmp
push
test
cmp
pop
fs
push
mov
jge
cmc
cmp
cmpb
add
iret
or
fnstenv
inc
out
mov
xchg
insl
pushf
lods
int3
cmc
scas
mov
ljmp
cli
mov
pusha
pusha
aas
bound
pop
test
push
out
pop
je
pop
mov
bound
in
xchg
mov
push
mov
pop
push
adc
pop
test
dec
or
rorl
test
out
mov
popf
and
sbbb
stos
fcmovnbe
push
fbld
cmp
inc
rcrl
xor
popf
cld
dec
xchg
mov
adc
xorb
adc
sub
adc
xor
xchg
push
jb
mov
outsb
mov
push
sub
sub
sbb
mov
dec
ds
xchg
jo
mov
lds
rcr
xchg
aam
jle
imull
mov
mov
mov
mov
arpl
xchg
mov
into
movsl
cwtl
mov
sub
jmp
mov
xor
dec
jnp
sbb
mov
cli
out
inc
sar
leave
leave
inc
lret
mov
mov
iret
xchg
sti
pop
xor
mov
in
subb
popf
rolb
mov
and
stc
inc
xchg
jnp
pop
mov
lods
or
into
test
lret
mov
jb
dec
jne
dec
inc
mov
loopne
pop
jge,pt
std
jg
xor
out
sbb
xchg
mov
out
inc
movsl
das
test
dec
jnp
and
test
push
inc
dec
push
jl
test
pop
xor
xchg
fidivrs
mov
cmpsb
pop
cs
adcl
les
push
cmp
test
mov
cmp
mov
dec
pop
out
rcrl
or
inc
daa
insb
test
icebp
push
cld
sarl
push
ret
xlat
add
add
adc
mov
lods
rclb
inc
inc
push
mov
pop
xor
enter
ret
test
push
rol
push
xlat
xchg
test
fsubs
adc
jmp
mov
mov
test
sub
pop
std
mov
mov
ds
cmp
ret
daa
int3
out
mov
mov
int
or
cmpsl
mov
inc
nop
out
int3
ret
int3
cmp
inc
inc
jmp
popa
mov
jb
xchg
push
mov
jg
fdivs
cmp
in
iret
jmp
roll
mov
mov
bound
and
shlb
lahf
add
aad
push
adc
jo
je
inc
cs
dec
cltd
movsb
mov
mov
inc
sbb
mov
dec
fnstcw
pop
push
pushf
inc
push
jmp
xchg
jbe
mov
int
rclb
or
jb
popf
rcll
test
jg
push
lock
leave
or
into
push
sti
sub
mov
sahf
xorb
lods
das
sbbl
insb
pop
cltd
out
cmp
and
mov
fcmovnbe
xchg
dec
sahf
scas
test
in
shll
xor
shll
fwait
push
mov
test
cs
out
test
stc
hlt
ds
ja
ja
inc
imul
lahf
andl
lcall
xchg
add
dec
push
gs
add
mov
dec
dec
jp
adc
cmc
aam
mov
clc
or
push
rorb
out
popa
mov
sahf
into
mov
xor
dec
lret
or
sbb
pop
jl
popa
pop
mov
insb
out
sbb
adc
lods
jl
xor
mov
mov
iret
negb
dec
mov
lds
das
js
xor
scas
dec
repnz
loope
ss
pop
xchg
or
sub
out
dec
dec
ret
mov
inc
mov
push
lcall
sbb
pop
aam
dec
mov
jecxz
fisttpll
aam
cwtl
stos
fisttpll
push
mov
cmp
xor
sti
inc
test
or
mov
pop
push
pop
pop
pop
clc
ret
lods
pusha
les
mov
mov
jae
mov
repnz
test
mov
xchg
xchg
jb
cmp
incl
out
shlb
loopne
inc
or
mov
adc
sbb
ljmp
sbb
add
fildll
inc
lock
ret
rolb
push
inc
cmp
pop
lods
lea
into
push
mov
push
mov
inc
jns
jle
xchg
out
inc
pop
rclb
add
fstps
or
out
xchg
mov
jmp
pop
call
dec
add
jno
xchg
inc
fisubrs
inc
pusha
xchg
jg
cltd
shll
xchg
pop
inc
jge
xchg
add
jmp
and
idivb
mov
stc
outsl
mov
adc
push
dec
sbb
cmp
loopne
cmp
push
mov
add
aad
dec
adc
lcall
and
mov
dec
divl
adc
and
shrb
cmp
mov
inc
mov
leave
inc
push
bnd
rorb
push
in
mov
loop
mov
daa
cmc
nop
mov
imulb
mov
shlb
and
insl
cld
push
mov
ficomps
push
out
push
sub
and
fisttpl
sbb
mov
shr
cmp
mov
xchg
cmp
jnp
clc
pusha
inc
add
inc
les
into
inc
xor
cmp
mov
adc
inc
shlb
add
jge
shl
add
stc
gs
cmp
cmpb
adc
mov
fldl
dec
inc
lods
mov
pop
jp
xchg
sbb
mov
lods
mov
fbld
repnz
xor
in
fcmovnu
xlat
fwait
bound
sub
lods
dec
test
ficoms
sbb
in
js
add
dec
mov
jmp
pmaddwd
imul
xchg
fwait
jbe
sub
cmp
mov
mov
mov
lret
and
pop
inc
nop
sub
lret
jg
pop
mov
sub
mov
xchg
ret
popa
adc
sbb
test
inc
fistpl
sub
and
call
pushl
ja
mov
dec
pop
int
and
in
push
fistl
inc
imul
inc
std
hlt
mov
gs
mov
sbb
test
lea
adc
mov
rorl
bound
rorl
in
cmpsb
sub
sbb
into
test
and
dec
mov
stos
jae
adc
or
mov
ljmp
cmc
mov
inc
or
push
and
dec
sub
pop
lret
jnp
mov
xchg
mov
incl
lahf
push
int
jo
gs
sub
cmp
js
rcrb
and
jle
les
jg
add
lret
test
ljmp
mov
popl
xchg
sti
sbb
dec
out
jne
jb
popa
ja
call
das
mov
jnp
imul
push
outsl
cwtl
ds
xlat
pop
inc
ffreep
jbe
adc
lods
sbb
idivb
and
cmp
xor
rcrb
mov
jecxz
xor
jnp
xor
into
sbb
push
dec
out
out
ss
inc
pop
push
pop
lods
mov
int3
cmp
loopne
xchg
jnp
shrl
jbe
mov
adc
xor
or
or
add
imul
mov
pop
inc
sbb
ret
sbb
sub
pushl
sbb
xor
dec
jae
inc
sbb
adc
fstps
jae
adc
jae
inc
mov
and
add
dec
sub
add
enter
adc
movsl
adc
xchg
into
loope
nop
mov
lods
sbb
mov
std
cmc
sbb
adcl
sbb
aam
pushl
push
jmp
mov
cmp
ficomps
les
test
sub
push
sbb
outsl
and
xchg
cmpsl
addb
lahf
jb
sub
push
mov
test
xchg
mov
mov
cmp
enter
jae
push
sbb
mov
add
test
sbb
adc
ja
inc
sub
aam
jle
lahf
movsl
addr16
lahf
pop
and
mov
gs
ljmp
js
inc
lods
in
pop
faddl
inc
gs
dec
dec
aam
add
dec
fldl
mov
ret
leave
daa
push
lahf
adc
and
or
pop
mov
fwait
sbb
insb
roll
lahf
adc
ljmp
xor
sbb
pop
and
mov
push
mov
sar
cmp
mov
inc
dec
sahf
int
mov
inc
inc
xchg
sub
inc
enter
enter
inc
xchg
inc
mov
cmpsl
nop
loope
sbb
push
ret
inc
cs
popl
test
insb
dec
add
pop
jo
or
add
lret
sbb
push
ret
or
jnp
out
scas
sbb
and
loopne
stc
sub
or
ds
cmp
repnz
mov
add
daa
shrl
mov
push
or
pop
sub
stos
pop
loop
xchg
push
ret
mov
xchg
push
jb
nop
mov
pushf
xor
jnp
jmp
pop
clc
inc
test
loopne
xor
mov
fdivl
push
cli
mov
gs
js
shll
sbb
sub
mov
and
popa
lcall
mov
outsb
test
or
jle
xchg
jns
adc
ret
pop
dec
adc
mov
jae
cmpb
sahf
xor
jo
mov
in
ds
pop
fdivs
dec
arpl
mov
inc
jo
jp
xor
jae
test
xchg
int
out
pop
adc
add
mull
in
fbstp
movsl
sbb
ss
xchg
push
je
sbb
mov
lret
sub
lahf
mov
pop
sub
test
xchg
dec
out
packssdw
daa
or
dec
xor
ljmp
scas
repnz
sbb
aam
cmpsb
test
xchg
inc
pushl
and
mov
inc
orb
pop
adc
dec
repnz
fcoms
lock
dec
jecxz
adc
pop
flds
mov
sbb
jg
dec
test
rclb
jo
aad
and
pop
mov
and
into
mov
test
xchg
xor
lret
mov
mov
aam
pop
nop
fsubrs
and
stc
andb
in
or
xlat
pop
mov
push
or
int
cmp
fiadds
jo
clc
pop
jo
xchg
and
sarl
lahf
leave
adc
jg
aam
sbb
aam
fcomps
dec
aam
dec
cmpsl
and
push
aad
inc
shr
fcmovnb
mov
sbb
mov
shl
push
push
and
pop
sbb
dec
sub
or
shll
inc
fs
sub
pop
sbb
js
mov
xchg
adc
sub
inc
out
cmp
jecxz
xor
xchg
mov
pusha
dec
and
inc
cli
addl
bnd
jg
xorb
sub
ficomps
sub
into
pop
jecxz
xor
enter
push
jmp
dec
push
xchg
cmp
adc
fldenv
add
decl
mull
mov
fldl
in
pop
push
push
ds
or
xor
shrl
mov
sub
negb
ret
xchg
inc
popa
mov
inc
test
jge,pt
lods
pop
repnz
rcll
jp
or
insl
mov
push
push
add
sbb
call
dec
fcmove
lret
mov
je
mov
pop
mov
dec
test
pop
lret
or
cltd
jno
inc
jb
inc
or
sub
mov
adc
mov
push
jle
sub
fsubl
fs
jns
sub
pop
xchg
test
test
leave
cmpsb
fxch
or
jg
faddl
push
aam
repnz
sbb
pop
cmp
push
cmpb
mov
je
fnstsw
cmpsl
sbb
test
pop
dec
jmp
loope
sub
fs
imul
roll
out
scas
fisttpll
mov
lahf
mov
fistpll
popa
pop
jb
leave
insl
adc
inc
test
mov
push
fildll
or
dec
fistpll
sbb
inc
shrb
subl
faddl
jnp
xchg
test
pop
and
jl
xchg
pop
repz
dec
popa
ret
push
in
mov
xchg
pop
push
or
or
push
mov
xlat
add
pop
xchg
xor
shrl
mov
lods
jne
pusha
test
test
lods
mov
fwait
pop
popf
mov
ljmp
shr
fistpll
mov
cmp
ljmp
dec
arpl
mov
sbb
mov
mov
xchg
add
shrl
push
xchg
das
fsub
adc
xlat
push
addl
add
and
dec
movsb
lret
out
xchg
inc
rorb
mov
push
movsb
inc
dec
and
cld
fmul
push
cmp
push
out
outsb
mov
lret
xchg
mov
fidivrs
aam
movsb
jge
fmull
and
addb
mov
out
pop
shll
xchg
movsb
stos
cmc
jle
or
in
loop
sbb
das
sbb
popa
faddl
ret
xchg
rcrb
or
sub
popa
adc
jbe
jmp
mov
or
les
mov
inc
test
xchg
inc
mov
cmpl
mov
repz
jne
in
adc
inc
sbb
inc
ficoms
test
clc
jecxz
lret
aas
sbb
mov
mov
push
es
mov
rcrl
in
lea
loop
stos
lods
mov
sbbl
sub
imul
adc
dec
test
icebp
cwtl
ror
cmc
mov
push
das
testl
je
push
inc
hlt
or
mov
sar
pop
shlb
xorl
pop
clc
push
sbb
jg
fsubr
cli
push
subb
adc
fmul
fisubrs
fucomip
mov
add
iret
bound
bound
out
es
and
dec
ficoms
jge
xchg
and
dec
add
push
mov
xor
aas
xor
xor
test
cs
sbb
jp
add
pushl
test
cmc
sbb
pushf
jg
mov
sbb
aam
jb
and
or
sub
into
pop
ds
adc
daa
loope
ret
pop
test
mov
out
iret
adc
mov
jecxz
fwait
repnz
jmp
arpl
sar
or
mov
scas
adc
cmp
test
jg
mov
xchg
push
cltd
cs
subb
mov
cmp
pusha
mov
add
mov
mov
dec
ds
mov
mov
mov
pop
push
clc
mov
mov
in
bound
mov
pop
stos
cs
addr16
inc
dec
dec
aad
popf
test
add
testb
mov
out
mov
xor
dec
out
jo
inc
add
cmc
or
or
lret
ds
jnp
add
add
or
jle
mov
dec
dec
aaa
pusha
xor
dec
mov
mov
or
sub
xchg
add
je
int
sahf
les
jecxz
andb
out
and
xor
cmp
enter
in
ds
dec
jno
sub
lods
in
xchg
jmp
dec
mov
out
mov
repnz
xor
and
xchg
add
mov
js
ljmp
pop
inc
das
xchg
push
sub
mov
fnsave
mov
pop
cmc
out
mov
fcomps
call
push
sub
sub
cs
scas
sub
lahf
pop
xor
mov
lret
out
lahf
and
or
mov
pop
or
out
dec
jge
sbb
mov
lret
xor
dec
sub
es
roll
outsb
add
insb
jge
cmp
es
lahf
sahf
aad
gs
sahf
sbb
scas
test
les
xchg
sub
jmp
mov
pushf
shll
rclb
mov
sbb
nop
mov
lods
mov
xchg
sahf
jl
jnp
and
negb
loop
mov
xorb
cmpsb
jg
mov
int3
in
aaa
jmp
mov
push
and
iret
mov
push
in
or
movsl
cmp
jecxz
sub
cmp
xor
fwait
mov
sub
imul
mov
sbb
pop
inc
inc
test
mov
out
mov
add
call
test
aaa
in
mov
loope
add
mov
mov
mov
filds
push
mov
mov
push
inc
decl
inc
jecxz
push
rorl
movb
push
subb
pushf
lods
mov
aaa
jge
or
scas
jp
sbb
orl
sti
xchg
aas
clc
lcall
cmp
leave
out
sub
out
push
imul
mov
xor
fisubrs
and
aas
push
test
jb
js
mov
lahf
or
lds
fcmovb
test
mov
inc
es
mov
sub
scas
pusha
je
les
lahf
or
test
test
xor
adc
sahf
loope
sbb
or
jl
and
sbb
out
test
mov
xor
out
inc
jg
nop
add
mov
test
pushw
rolb
lahf
dec
enter
das
mov
lahf
xchg
push
and
xor
sbb
aas
test
jbe
shlb
test
xchg
movsl
scas
xor
hlt
je
mov
sbb
test
push
xor
mov
sahf
and
test
test
ficomps
mov
mov
mov
cltd
lds
push
ss
push
adc
lret
aad
or
inc
mov
push
lahf
jge
in
xchg
lret
stos
mov
into
mov
add
fwait
nop
sub
popl
xchg
mov
inc
pop
xor
mov
xchg
fwait
out
dec
sbb
rclb
loop
mov
lahf
pop
add
insb
push
sbb
orl
push
sub
mov
movsb
or
aam
outsl
jmp
and
stc
sbb
pusha
loop
gs
push
shrl
lahf
out
xor
jns
and
sub
jne
das
sub
mov
xchg
dec
daa
sbb
sub
int3
and
or
inc
cld
cmpsb
xchg
xor
xchg
xchg
lods
jp
push
or
mov
fwait
ret
cmp
mov
insl
lods
adc
push
out
push
add
adc
icebp
jne
repz
js
dec
fs
and
scas
sbb
jne,pn
lahf
mov
jge
mov
pop
inc
pushf
xor
dec
pop
js
repnz
or
das
lcall
movsb
or
cltd
xchg
push
pop
cs
inc
push
mov
and
xchg
jmp
fs
mov
xor
mov
xor
adc
inc
jae
xor
xor
add
fimuls
xor
sbb
pop
fistpl
mov
fdiv
adc
jb
ret
jge
lahf
test
adc
adc
push
bound
jmp
lahf
sub
adc
push
pushf
lahf
push
xor
adc
loop
and
sbb
std
and
arpl
mov
xor
mov
inc
std
and
sarb
scas
ffreep
mov
and
lret
fbstp
push
pop
stos
cli
mov
adc
data16
xlat
push
aas
jge
subb
inc
inc
push
out
daa
jg
adc
mov
xor
xor
andl
mov
and
lea
sbb
mov
cwtl
ret
jge
pop
dec
mov
pop
adc
icebp
xchg
ja
mov
scas
inc
lea
inc
mov
and
inc
movsl
call
pusha
mov
rolb
sub
das
jbe
xor
fs
jle
test
dec
pop
mov
ljmp
cmp
pushf
aam
pushl
mov
fistl
std
lahf
add
test
pop
xchg
and
imul
int3
inc
loop
jbe
xchg
mov
pop
jl
add
jecxz
test
repz
push
dec
icebp
ret
pop
rcrb
andb
nop
mov
add
pop
outsb
movsl
xor
rolb
mov
cmp
shlb
dec
push
xorl
adc
inc
popa
xchg
int3
jbe
dec
or
std
andb
js
dec
lods
rcrl
xor
cmp
mov
xchg
sbb
add
inc
xor
xor
aaa
push
rclb
shl
mov
js
fldt
rorb
je
jp
ret
push
xor
xchg
cmp
icebp
insb
mov
and
rcrl
mov
repnz
icebp
jbe
stc
push
xchg
xchg
mov
in
aas
mov
ficomps
fmull
push
adc
dec
push
jno
dec
mov
sbb
jl
hlt
test
xor
dec
lahf
sbb
push
xchg
test
or
dec
divb
mov
incl
xor
add
gs
das
cmc
xchg
into
push
ret
pop
ret
inc
pusha
xor
ss
xor
mov
arpl
push
pop
mov
outsb
sbb
stos
pop
mov
inc
in
cmpsb
dec
or
mov
push
outsb
sub
mov
pusha
leave
movsb
sub
mov
mov
lea
sahf
lahf
jnp
mov
scas
jb
aas
fcmovne
loopne
dec
subb
push
push
pop
sub
lret
push
pusha
jb
push
jno
scas
jmp
cmpsl
jecxz
jg
push
ror
push
mov
xor
fisubs
sbb
pop
adc
test
fcomps
loop
mov
jg
fstl
mov
cmp
jecxz
sar
mov
das
popa
pop
dec
jb
xchg
daa
dec
xorb
inc
incb
call
or
xor
movb
cld
loopne
shr
jne
jb
jno
push
ret
daa
cltd
out
das
inc
adc
jmp
mov
jo
push
imul
sahf
int3
rcr
dec
fadd
xor
loope
push
popf
popa
add
mov
adc
cmpsb
sbb
mov
ss
inc
xchg
les
clc
xchg
sbbb
das
cmp
hlt
adc
dec
sbb
lcall
mov
rorl
into
int3
fwait
imul
jg
ja
mov
iret
inc
sahf
movsl
adc
xlat
jecxz
jecxz
sub
out
jae
sub
sahf
xchg
xchg
ja
cmpb
and
into
jge
jbe
jbe
dec
add
repnz
dec
push
stos
inc
arpl
mov
arpl
lret
mov
or
bound
jmp
hlt
mov
push
dec
xchg
jns
push
fildl
fistps
pop
dec
xchg
push
ret
je
cmpsl
xchg
cmp
mov
xchg
ljmp
daa
das
xchg
dec
fnsetpm(287
mov
mov
std
imul
push
scas
and
rorb
ret
cmp
lcall
dec
adc
jmp
dec
mov
pushf
fwait
adc
out
test
and
fisubrl
fwait
loop
mul
nop
sub
addb
jl
leave
js
mov
inc
xchg
xor
and
jb
jne
xchg
mov
lret
std
sub
and
in
mov
sub
lret
xchg
push
outsl
sub
aaa
gs
js
lahf
and
dec
push
bound
push
mov
test
rcrl
mov
ljmp
sbbl
sub
into
ja
jle
data16
xor
imul
jl
dec
push
lock
and
mov
inc
movsl
mov
add
and
addl
jb,pn
clc
dec
mov
adc
mov
shll
mov
pop
jmp
add
pop
push
jmp
fldenv
mov
xor
bound
in
std
insb
jb
mov
cmp
inc
aas
sahf
ret
mov
hlt
sti
std
sub
lret
sbb
xor
mov
in
sbb
fwait
in
sbb
pop
pusha
aas
aam
sub
test
xchg
jbe
ret
loopne
pop
push
xchg
mov
adc
lea
adc
sbbl
scas
out
mov
push
fstl
fimull
jg
fists
sahf
mov
cwtl
icebp
and
add
ljmp
xchg
pop
sti
sub
xchg
out
lds
mov
jmp
add
mov
outsb
fistpl
jno
test
jle
pop
add
sbbl
sarb
sub
xchg
xchg
or
jb
sub
dec
push
mov
and
inc
xorb
push
dec
add
xorb
jnp
daa
scas
jnp
lret
int3
in
ss
mov
jmp
cld
movsb
add
clc
mov
sahf
sub
ss
inc
xchg
gs
icebp
mov
jmp
fsubr
mov
jne,pn
fucomi
pop
xor
mov
mov
mov
mov
jmp
ret
inc
sbb
pop
scas
test
aas
shrl
clc
jmp
inc
pop
mov
inc
xor
cltd
in
mov
jo
push
into
out
orl
iret
jne
imul
int
cmc
sbb
out
mov
mov
jo
loope
mov
test
pusha
adc
subb
shl
mov
dec
out
pop
movsb
mov
movsb
faddl
ret
shrl
or
mov
adc
gs
pop
mov
cld
data16
jmp
shll
mov
mov
cmp
dec
addr16
mov
inc
jbe
dec
mov
andb
jg
pop
jmp
sar
cld
addr16
and
fs
cmp
lea
fstl
mov
mov
test
mov
test
movsb
fsub
ljmp
lret
movb
cmp
insl
jl
push
jne
sahf
cmpsb
sub
sbb
sub
lds
xor
inc
xorb
popa
stos
push
jg
icebp
loope
scas
push
shlb
push
and
ret
in
fidivrs
dec
fwait
nop
mov
test
sbb
fisubl
in
xchg
sti
repz
mov
pop
mov
xchg
xchg
sub
imul
push
sahf
mov
loope
jl
repz
jle
test
out
jmp
lahf
jo
lahf
jmp
fists
pusha
and
xor
es
and
nop
movsb
dec
dec
sub
les
inc
lcall
adc
add
lahf
cld
jno
pop
cld
pushf
test
xor
inc
test
pop
loope
rclb
lcall
mov
add
pop
inc
jle
cmc
or
jae
test
fisttps
movsl
mov
add
dec
repnz
int3
or
mov
and
cmpsb
xchg
fisttps
jg
sub
jle
mov
rcll
inc
je
and
xchg
in
lahf
xchg
stos
sbb
in
in
adc
pop
pop
push
cmc
insb
mov
std
rorb
inc
xchg
out
shlb
test
test
dec
cmp
into
mov
add
add
ss
adc
cltd
lods
ss
pop
stc
jg
sub
and
sub
test
addl
popf
cmp
test
in
enter
push
js
mov
add
xor
add
daa
int3
bound
in
pop
pop
sahf
test
adc
push
leave
dec
add
jl
sub
lods
jo
lock
jg
dec
sbb
xor
sti
dec
sub
test
jbe
mov
mov
scas
dec
xorb
mov
push
pop
stos
in
pop
and
mov
jne
sub
jns
mov
das
push
jle
fstps
add
loop
jle
push
scas
mov
mov
sub
jno
cmpsb
mov
call
aam
pop
dec
ds
and
fistps
mov
cmpsb
nop
test
js
iret
popa
outsb
inc
push
mov
out
push
into
nop
leave
std
pop
sbb
movsl
mov
stos
jp
test
js
or
out
jno
cmp
xchg
in
dec
insl
push
test
cwtl
pop
jno
shr
xchg
push
imul
decl
cmp
into
mov
xchg
or
xor
jge
mov
or
push
xor
pextrw
popa
push
mov
jge
test
test
xor
out
and
dec
shlb
lds
das
int
inc
test
negl
das
jns
sbb
out
fists
mov
sbb
xchg
into
es
test
inc
cmp
cmp
dec
jmp
mov
out
mov
sbb
fdiv
imul
orb
adc
dec
mov
jmp
into
mov
cmp
out
mov
rclb
cltd
cmp
test
out
sahf
dec
dec
pusha
lahf
test
xchg
or
mov
mov
and
stos
xor
cmp
add
adc
jno
fwait
mov
je
dec
out
cli
mov
pop
mov
add
mov
stos
icebp
stc
jg
decl
inc
je
mov
mov
pushf
mov
pop
push
xchg
repnz
ja
push
bound
pop
fprem1
popa
mov
sub
jp
lock
lret
mov
in
add
and
push
cmp
imul
scas
push
cmp
pop
xchg
cwtl
xchg
and
mov
fld
add
lahf
inc
cmp
sbb
push
mov
mov
jo
dec
jecxz
nop
stos
xchg
jmp
ret
push
les
cmp
and
ficomps
popf
push
sbbl
xchg
leave
test
rorl
stos
and
lock
inc
ds
and
or
sbb
sub
jmp
repz
cs
xchg
fidivrl
and
outsb
jge
sbb
dec
mov
xor
popf
js
roll
mov
ficoml
scas
pusha
dec
out
in
mov
mov
cs
cmp
push
or
mov
fwait
mov
cmpsb
add
push
mov
neg
ja
and
jecxz
cmp
in
cltd
and
adcl
cmpsw
sbb
cmovl
js
dec
rol
incl
lods
jo
popf
add
pop
int
mov
cld
shlb
jmp
pusha
out
lds
sbb
dec
push
lcall
inc
in
nop
js
xchg
lret
out
push
pop
ret
fisttpll
popl
xor
into
mov
ret
outsl
pop
mull
ds
idivb
xchg
hlt
sub
xchg
mov
and
mov
lret
ljmp
femms
in
push
or
orb
pop
adc
sbbb
jmp
mov
push
push
add
rorb
fidivrl
mov
or
pusha
dec
mov
loop
out
loopne
push
pushf
xchg
dec
inc
imul
sub
dec
push
shrb
xchg
pop
dec
sbb
push
xchg
ljmp
out
sarb
add
adc
popf
stc
mov
iret
aas
lahf
fs
adcl
imul
test
cmp
sti
cvttps2pi
sub
xorl
rcl
push
dec
fsubrp
movsb
fs
je
dec
nopl
aas
adc
sbb
or
jge
xchg
jg
or
mov
lret
and
lahf
ret
ret
or
ja
out
leave
test
pop
roll
ret
push
xor
mov
mov
dec
fucom
fisubl
adc
mov
pusha
sbb
dec
repnz
in
imul
sub
push
push
addr16
xchg
pop
mov
fimull
into
mov
int3
es
mov
fs
and
jge
in
shl
jg
jno
mov
xor
out
push
cs
jmp
or
push
jge
dec
push
xchg
push
xchg
xchg
push
cs
dec
adcb
mov
adc
cli
adc
andb
mov
jo
push
mov
mov
jmp
push
lods
ja
aas
shrl
jge
scas
cli
lahf
mov
filds
mov
stos
mov
repz
pop
mov
and
cmp
pop
lcall
icebp
pop
sahf
or
sbb
repnz
mov
xor
enter
sbb
pop
jmp
in
sbb
fistpl
aaa
mov
cmp
pop
mov
jge
ret
xchg
or
lret
pop
xchg
adc
stc
mov
imul
in
in
test
push
fs
addb
adcl
out
mov
js
pop
sbb
xchg
jg
xlat
mov
cld
mov
mov
mov
adc
pop
cmc
jle
inc
and
punpckhbw
divl
repz
mov
mov
repnz
xchg
jns
orl
xchg
cld
sahf
rcl
xchg
add
leave
mov
dec
or
dec
leave
out
inc
lods
mov
sub
in
push
mov
es
mov
outsb
mov
fists
pop
mov
popf
loop
ficoms
pop
push
mov
mov
cltd
movsb
pop
mov
stos
rolb
test
add
adc
push
fnstsw
hlt
cmp
call
xchg
sub
inc
xchg
insb
std
jnp
icebp
xchg
out
inc
cmpsb
push
sar
cmp
test
inc
sub
pop
test
dec
add
arpl
mov
xchg
movsl
rcrl
adc
xor
movsb
jmp
jmp
inc
push
sbb
lahf
jo
dec
mov
pop
and
sub
scas
in
pop
fsts
ret
les
loope
inc
pop
push
popa
and
push
in
pop
push
xchg
and
lock
add
inc
jl
jle
out
scas
pusha
push
es
insb
add
inc
in
or
lods
cmpsb
inc
xchg
daa
xlat
imul
and
sbb
push
test
dec
sti
ficoml
stc
arpl
sbb
leave
rcrl
adcb
and
popf
mov
divb
ffreep
pop
push
lcall
xchg
lea
call
adc
jmp
dec
xchg
mov
bound
xor
mov
sbb
addl
cmp
cld
pusha
inc
jb
mov
mov
xchg
ret
ds
outsl
les
xchg
fistl
insl
push
jg
sub
lcall
fwait
cmp
stos
data16
xor
sarb
ja
lock
nop
xlat
andl
or
push
mov
ds
ret
or
push
push
imul
mov
push
sbb
es
jae
add
lcall
dec
scas
dec
mov
out
test
inc
xor
bound
rcrb
and
mov
xor
ret
jbe
stos
ret
inc
les
pop
fidivrs
sub
pop
es
out
loopne
add
add
test
xchg
lret
dec
push
mov
sbb
add
test
popf
mov
push
jl
pop
ret
pusha
pop
inc
sbb
out
out
dec
jo
sbb
test
mov
sti
mov
repz
xchg
sub
and
movsb
or
or
dec
push
es
or
stc
incb
dec
mov
repnz
mov
dec
mov
out
clc
test
cmp
imul
mov
sbb
rcrb
xor
push
je
lret
mov
jo
jecxz
ret
addb
jg
mov
push
xchg
dec
out
jo
lahf
inc
jmp
into
loopne
xchg
lea
jle
jge
xor
xchg
dec
out
jo
inc
sbb
arpl
dec
and
push
addl
sbb
and
rcrb
jmp
loop
adc
cld
ret
ds
pop
movsl
xor
ds
dec
jmp
das
dec
dec
sbb
cmc
mov
bound
cmp
bound
loop
into
jl
mov
data16
mov
leave
xchg
sub
adc
adc
scas
inc
nop
xor
arpl
cld
mov
sub
sbb
rorl
jge
jb
jo
and
mov
sbb
test
cld
push
add
test
push
fildll
push
xchg
sahf
bound
adc
nop
nop
out
imul
dec
mov
inc
jmp
pop
cmp
xchg
pop
mov
inc
gs
sub
jno
leave
test
andb
ficoms
sub
xor
insb
adc
mov
push
mov
pusha
out
rorl
mov
das
psrld
aas
lahf
outsl
lds
rcrl
mov
mov
clc
push
in
jge
cmp
aam
mov
dec
xchg
xor
push
xchg
cs
and
mov
push
mov
movsb
jmp
dec
int3
std
fisubs
mov
dec
loopne
jecxz
pop
fwait
mov
dec
daa
and
out
inc
insl
loop
add
push
mov
or
add
mov
stos
roll
lahf
icebp
jne
repz
sub
dec
cmpsb
int3
stos
push
das
mov
setg
data16
push
and
mov
dec
mov
paddd
hlt
sub
movsl
inc
sbb
call
pop
mov
aas
in
push
fwait
dec
mov
or
mov
insl
inc
bound
imul
sub
pop
int3
fcomps
out
jno
adc
enter
test
lahf
das
pop
fwait
xor
out
add
inc
in
adc
pusha
jb
inc
scas
mov
fidivl
pop
dec
or
std
in
pop
pop
test
lahf
xchg
clc
pmaxsw
and
push
in
push
xchg
jns
dec
mov
sub
push
ret
mov
add
roll
ja
test
jb
push
ret
adc
je
jg
pop
mov
cmp
pop
ret
mov
xor
and
movl
fildl
flds
sub
xchg
into
jo
pop
push
jb
fstpt
push
out
mov
scas
out
push
pusha
mov
sarl
insb
gs
clc
lcall
cmp
and
xchg
movsb
scas
sahf
xchg
push
ds
mov
data16
scas
pop
outsb
mov
jmp
mov
jg
cmpsb
mov
add
dec
add
imul
pushf
loop
jnp
mov
pop
rclb
das
xor
xchg
insb
loop
out
adc
out
jg
scas
loope
push
sbb
xor
dec
int
or
add
lahf
imul
dec
cltd
cltd
lods
clc
lret
ja
push
adc
xor
outsl
jmp
dec
mov
mov
inc
inc
cmc
aad
loopne
jge
mov
ljmp
pushf
and
xchg
and
cld
adc
bound
clc
inc
bound
inc
jo
shr
fldl
mov
das
test
add
push
lahf
inc
add
sub
ret
ljmp
into
je
xchg
push
push
cmp
jo
mov
adcb
jp
cmp
lcall
or
add
xor
mov
imul
mov
fidivrs
push
push
pushf
cltd
stc
fsubp
adc
sbb
sub
inc
cld
sbb
inc
push
inc
jle
add
xchg
push
jae
dec
sbb
fistps
popa
cmp
into
xchg
pop
movsl
cwtl
or
ja
xorl
push
fs
ljmp
data16
cmp
stc
popf
mov
out
orb
int3
lock
inc
call
lahf
mov
les
add
mov
in
inc
mov
jne
jb
xchg
xchg
dec
push
jno
stc
mov
push
jl
mov
mov
inc
into
inc
outsl
fistpll
xchg
fdivr
mov
pop
addb
shll
outsl
dec
in
jecxz
stos
xchg
dec
cmc
push
fistpll
test
jo
sbb
sbb
pop
sbb
test
movsl
sub
into
out
shlb
sub
inc
insb
out
repz
test
push
mov
adc
mov
idiv
jg
into
loopne
pop
pop
pop
in
mov
pushf
inc
jns
push
mov
push
ret
cli
pop
or
and
xchg
jnp
and
ficomps
add
loop
arpl
daa
hlt
loop
jle
jbe
inc
add
loop
mov
jbe
scas
dec
xor
add
push
mov
in
rcl
xchg
jmp
not
jecxz
fistl
xchg
and
pop
imul
subl
insb
outsl
pop
jo
cwtl
adcb
fcomi
xchg
push
arpl
scas
int
cmc
dec
std
xchg
xrelease
xor
loope
xchg
pmullw
ret
pop
es
and
sub
pop
loope
cltd
xor
push
mov
inc
push
lcall
jge
sbb
push
mov
inc
scas
or
jno
jecxz
sbb
and
sub
fndisi(8087
mov
and
aad
mov
andl
sbb
pop
cs
mov
lcall
xor
pushf
cs
jb
imul
loop
xchg
xor
scas
test
bound
xchg
push
add
mov
test
mov
out
xor
and
and
fstpl
test
xchg
into
cwtl
je
and
fcoml
xor
mov
fidivrs
gs
les
jge
xor
adc
ret
mov
rcl
or
push
xlat
sbb
jb
ss
inc
xor
sbb
fimuls
adcl
pop
push
cld
add
inc
inc
push
lods
mov
inc
filds
loope
adc
pop
popa
push
testl
imul
mov
xchg
pop
aas
jmp
xorb
into
daa
test
jb
jne
in
inc
shl
in
jp
sbb
cld
mov
rcrl
ss
call
insb
inc
jp
jno
fildll
outsl
test
mull
pusha
into
rcr
xor
sbb
cli
and
xchg
add
push
add
test
cmp
shrl
inc
xchg
or
jmp
xor
push
ljmp
call
pop
jecxz
imul
divl
sbb
cmp
jb
inc
jp
lahf
cmpsb
lods
sarb
out
pop
dec
movsb
jne
mov
adc
ds
frstor
aaa
fistps
pop
daa
stos
push
pop
dec
test
jge
cmc
jbe
inc
dec
popl
sbb
or
divl
hlt
cmp
or
loope
lock
out
xor
sti
xor
adc
sbb
sbb
xlat
mov
jmp
cmp
sub
jb
jns
sahf
dec
mov
jnp
or
mov
sbb
adc
test
inc
sbb
fstps
dec
int
lods
or
jnp
mov
fisttps
mov
movsb
xchg
fwait
in
andl
inc
lods
cwtl
or
jb
popf
mov
cmp
out
sub
shlb
inc
or
xchg
into
test
jg
dec
xchg
sbbb
fwait
and
test
mov
push
ret
pop
mov
mov
in
adc
ja
test
and
outsb
test
movsb
test
push
sub
sub
test
or
or
push
dec
lret
fisubrl
sahf
fstl
bswap
adc
xchg
adc
inc
es
mov
mov
pop
and
push
cmp
mov
aad
cmp
xchg
xchg
mov
popa
mov
or
xor
jge
add
jge
xchg
fldcw
je
jmp
repnz
mov
cmpsb
xor
rcr
mov
mov
mov
pop
xchg
dec
lds
ror
aad
loopne
push
pop
pop
arpl
push
sbb
arpl
inc
adc
scas
leave
int3
push
cmc
hlt
adc
add
sub
jo
xchg
pop
insl
test
movsb
xchg
or
fwait
jb
jb
jo
fst
aas
je
push
jg
inc
xchg
pop
inc
and
or
pop
push
test
lds
test
rcrl
sub
sub
xchg
adc
push
lods
gs
mov
or
out
sbb
and
gs
xchg
mov
xchg
push
mov
jo
shll
shl
mov
xlat
jp
bound
pop
das
xchg
push
ds
push
mov
pop
mov
lods
pop
jb
inc
jge
aam
mov
sti
inc
ss
cmpxchg
cs
repz
inc
pop
and
bound
pop
pop
sub
test
dec
cmp
mov
mov
xchg
shrb
inc
jle
cmc
mov
and
leave
cmpps
int3
pop
jmp
dec
jns
incl
loopne
bound
jnp
push
mov
test
mov
sbb
sub
stc
jecxz
sub
cmpsl
pushf
jb
mov
scas
repz
inc
xchg
les
aas
leave
clc
push
or
enter
lahf
sub
clc
mov
and
mov
jg
pop
test
mov
in
sbb
lea
test
adc
fimuls
mov
dec
push
into
ret
push
xchg
or
and
out
test
xchg
dec
mov
lea
jecxz
shrl
pop
dec
sbbb
fstl
fsubrl
mov
xchg
dec
dec
add
mov
sti
mov
cmpsb
int3
leave
mov
mov
lea
push
daa
test
insb
mov
xor
pop
mov
cmp
mov
pop
lods
xchg
and
daa
sbbb
jns
push
cld
adc
add
sti
inc
pusha
cmp
std
insl
pop
pop
enter
sub
aam
xchg
push
pop
pop
sub
out
test
and
into
fdivs
cmp
pop
das
lahf
adc
sub
inc
add
shl
xor
jg
divb
adc
lcall
das
test
daa
in
out
cmpb
inc
jmp
pushf
imul
adc
adc
mov
fists
lcall
out
data16
push
test
fiadds
cs
mov
lahf
mov
mov
or
int3
sbb
leave
xchg
ja
clc
ret
push
inc
adc
push
pop
add
cmp
test
subb
adc
cs
mov
push
xor
xchg
inc
fbstp
int
cmpsl
test
or
bound
xchg
test
push
cs
mov
test
push
jns
jbe
mov
fistps
jge
xor
clc
or
sub
pushf
pop
popa
in
jle
jg
lahf
or
mov
sub
xchg
pop
iret
xchg
mov
push
and
add
inc
jb
pop
test
cmovns
push
test
sub
jl
out
push
comiss
das
std
jl
test
fnsave
or
out
hlt
adc
adc
cltd
mov
sbb
stos
nop
add
add
xchg
fidivs
mov
sbb
ds
jle
xchg
xchg
js
jo
sub
jmp
xchg
in
je
das
jb
or
adc
mov
shrl
repz
hlt
mov
cli
or
das
int
pop
outsl
test
mov
dec
mov
ficomps
cmp
adc
dec
mov
nop
push
cs
sub
pop
lods
push
xor
sti
gs
mov
std
and
sbb
xchg
lock
fsubrl
mov
lea
lock
mov
sub
inc
sarb
mov
sbbl
xchg
bound
mov
setne
sub
add
clc
push
rcrb
cmpb
dec
lods
test
mov
orl
cmpsb
shr
jge
fsubrl
mov
mov
div
pop
jae
push
sub
xchg
push
test
sti
test
lds
jg
nop
fistpll
sbb
aam
data16
mov
lcall
into
out
sbb
dec
out
pop
mov
loop
fdivr
shlb
push
xchg
pop
or
out
sbb
outsb
lds
xchg
mov
bound
mov
scas
loop
shr
pusha
shll
les
cmp
xchg
sbb
jg
xor
jle
clc
xchg
dec
pop
sahf
and
jl
mov
dec
nopl
pop
jns
repnz
mov
adc
cmpsb
mov
cmp
dec
mov
arpl
push
inc
rclb
pop
out
sub
in
fiadds
out
xorb
mov
dec
test
test
out
scas
cmp
rorb
push
inc
add
sub
insl
std
loop
dec
inc
rclb
add
lea
in
insb
or
loop
ja
adc
and
test
mov
lcall
shll
in
jo
icebp
jns
sub
push
and
pop
popf
mov
cmpsb
popf
fsubrl
cmpsb
movsl
mov
test
testb
xchg
cvtps2pd
mov
stos
into
pusha
and
jle
pop
jae
pop
or
dec
mov
into
mov
int
dec
and
xchg
cli
dec
jb
js
cld
std
stos
jno
mov
jo
push
cmc
das
clc
test
ja
lods
inc
mov
xchg
mov
ljmp
jg
stc
sub
rolb
mov
jmp
outsb
testl
push
das
or
jb
push
inc
jl
addr16
or
and
or
daa
xor
lds
xchg
lds
test
sahf
cmp
dec
sahf
int3
je
jo
repnz
mov
test
jecxz
ljmp
out
dec
aad
push
daa
sub
pop
pop
sti
dec
das
mov
ljmp
inc
sub
inc
sbb
xchg
dec
fstps
stos
cmp
push
fs
and
test
jg
adc
stos
mov
rclb
jmp
das
es
inc
clc
inc
xchg
push
out
je
push
xor
jnp
lret
dec
sbb
pop
dec
cs
sub
inc
scas
xor
scas
test
adc
jge
xchg
pop
fs
or
sub
mov
push
mov
jge
adc
pop
jno
fisttpl
repz
jnp,pt
xor
mov
inc
enter
test
cld
cwtl
push
dec
fsubrl
lret
mov
sarb
sbb
lahf
inc
inc
cmp
loope
push
in
xchg
aad
shl
and
insl
loop
mov
scas
mov
pop
popa
out
pop
sbb
inc
aam
fimuls
cmp
popa
js
shl
cs
push
xchg
dec
cmc
push
pop
dec
mov
inc
gs
jbe
jmp
jp
cmp
jbe
popa
fistpl
and
inc
je
std
repz
xor
setae
sub
sbb
popa
fs
mov
jae
lahf
out
cmp
or
aas
jge
pop
imul
dec
jecxz
xchg
jmp
pop
mov
sub
sub
pop
jmp
out
cmc
or
cmpsl
sarb
leave
xchg
pop
and
sub
enter
ds
pop
push
pop
neg
push
lock
bswap
mov
ja
or
xlat
dec
scas
cmp
and
lret
movaps
je
xor
lcall
aam
rorb
mov
push
inc
push
sbb
ljmp
repnz
cmp
lahf
es
push
jo
je
cld
push
cmp
dec
push
loopne
cld
xchg
jo
cmc
cmp
into
test
cmp
and
adc
iret
sub
cmp
mov
call
dec
stos
jnp
loop
icebp
daa
and
pop
stc
call
or
push
sbb
xchg
pushl
jns
cmp
cmpsl
sbb
cmp
test
jo
lea
mov
out
xchg
arpl
adc
xchg
aas
jle
sub
es
and
dec
sbb
in
mov
fcoml
stos
scas
mov
sahf
pop
inc
test
stos
adc
pushf
push
jbe
imul
inc
sub
daa
fs
sbb
jg
stc
jecxz
sbb
out
sbb
dec
pop
shlb
bound
inc
pop
sbb
lods
and
sbb
cmp
movsl
pop
stos
add
dec
dec
mov
sbb
sbb
std
push
add
test
dec
cmp
jne
das
jb
cmp
mov
ja
xor
sbb
ss
and
mov
ret
mov
gs
stos
adc
dec
sbb
mov
sbb
push
push
leave
adc
or
dec
xchg
inc
push
or
add
xchg
jo
test
cmc
into
pop
mov
cmp
fcompl
mov
xor
fbld
cld
mov
xor
mov
or
scas
pushf
dec
mov
cs
or
cld
repz
out
std
jnp
sub
dec
jmp
shl
clc
inc
pop
sub
xchg
fsts
inc
inc
sbb
xor
pushl
rcrl
jne
dec
out
loop
add
out
in
push
shl
aam
cs
mov
aam
or
xchg
in
push
mov
sbb
sbb
gs
dec
arpl
add
aaa
mov
andl
and
jg
ss
ret
lds
test
test
test
mov
or
int3
mov
scas
cmc
jecxz
mov
jmp
in
cmp
loop
xor
rorb
lcall
xchg
add
pushf
fucomip
inc
cmpsb
gs
sub
imul
add
or
stos
ret
dec
dec
loop
popf
sbb
fdivp
test
dec
das
sub
adc
loop
add
pusha
outsl
push
xchg
xchg
js
mov
xor
mov
or
jns
xchg
push
and
ljmp
xor
mov
jmp
or
out
lea
mov
pop
repnz
push
scas
pop
orb
test
fiadds
ljmp
xor
inc
test
xchg
out
scas
xor
pushf
push
clc
push
inc
sbb
mov
mov
xor
ret
jns
adc
mov
sub
sbb
out
mulb
xchg
push
or
data16
dec
add
pop
lcall
out
shrl
mov
jb
lret
sti
popa
dec
sbbl
lods
enter
or
pop
dec
mov
push
xchg
pop
sbb
sahf
fmuls
jmp
sbb
lods
mov
fmulp
movsl
stc
pop
push
int3
adc
ja
push
test
mov
cwtl
push
lahf
adc
jg
pop
mov
bound
cmpsb
dec
inc
scas
mov
test
ljmp
pop
jb
inc
inc
in
into
adc
dec
xchg
lock
in
adc
test
cmpsb
aaa
mov
xchg
adc
and
icebp
ficoml
int
xchg
mov
jb
cmp
arpl
sub
aad
pop
sub
pop
xorb
push
fistl
ret
xor
shrb
mov
or
mov
mov
pop
cmpsb
push
int3
xchg
bound
fldt
jnp
jecxz
xor
cmp
test
mov
inc
add
xchg
std
outsb
and
add
cmpsl
cmp
jecxz
jl
jle
jl
xchg
cs
out
in
sub
out
es
sbb
fidivs
out
jp
out
clc
mov
cmp
into
inc
jl,pt
jmp
dec
or
xor
sarl
push
or
mov
ret
in
jb
cmp
movsb
and
pop
lahf
test
and
dec
adc
outsl
ja
jmp
sbb
and
es
inc
loope
push
loope
mov
mov
mov
shlb
out
subb
mov
cwtl
mov
loopne
mov
xchg
popa
sbb
sub
loop
inc
push
stos
in
sti
mov
xor
inc
out
das
les
jg
popa
jae
aas
imul
dec
pushf
leave
xor
cmp
mov
mov
test
mull
aam
add
scas
mov
dec
pushf
xchg
mov
aam
push
inc
sub
sub
inc
aas
mov
or
sbb
test
mov
sahf
pop
insb
jle
xor
xchg
inc
mov
cli
sub
imul
add
dec
add
orl
hlt
add
sbb
clc
xor
pop
imul
hlt
sbb
loope
xchg
daa
lea
aam
xor
add
cs
or
popa
add
imul
enter
inc
mov
pop
inc
popa
and
dec
pop
pop
ds
addb
xchg
pop
daa
sbb
cmp
out
pop
pop
imul
or
push
xor
jb
test
jmp
into
fistl
xor
jbe
mov
and
ret
and
sub
addr16
sbb
push
mov
test
lods
inc
es
push
push
jge
in
xchg
cli
mov
shl
mov
fildl
aam
call
je
mov
fstpt
hlt
sti
adc
int3
leave
dec
out
mov
pop
sbb
or
stc
jnp
stos
fldt
push
xchg
jecxz
mov
out
or
mov
fnsave
in
add
dec
ljmp
test
icebp
mov
adc
jno
xor
dec
cltd
lds
scas
mov
iret
fisubrl
cli
push
mov
lret
std
orb
fmul
mov
or
loope
inc
pop
ja
sbb
imul
cld
imul
mov
leave
daa
push
rolb
dec
xchg
repz
insb
enter
lahf
adcb
shll
and
mov
sti
arpl
mov
rorb
outsl
out
das
sti
sub
mov
inc
icebp
jecxz
push
cmp
inc
scas
test
cmpb
mov
or
mull
inc
push
sbb
sbb
pop
vcmpsd
gs
pushf
mov
xchg
data16
test
pushf
mov
or
dec
in
adcb
hlt
pusha
lods
add
jns
pop
dec
in
cmp
cli
pop
jns
jmp
push
cmp
inc
pop
test
jmp
mov
mov
mov
sahf
adc
out
mov
xor
xchg
rolb
mov
cmp
rcll
fwait
enter
adc
fwait
fwait
popa
leave
push
pop
jno
test
add
fwait
shrb
shr
dec
ss
or
mov
cmc
mov
into
es
mov
and
test
repz
jb
js
dec
sahf
adc
add
mov
test
outsw
push
rcrl
movsb
inc
inc
stc
cmp
mov
iret
add
adc
mov
or
sbb
xor
mov
nop
jl
push
pop
mov
ss
jo
xor
bsr
int3
inc
out
inc
movsb
inc
mov
cld
mov
arpl
mov
int3
or
sbb
test
stos
push
mov
jne
mov
leave
inc
imul
sbb
stos
and
inc
ret
sbb
pop
dec
sti
scas
stos
xchg
fwait
cmc
aad
test
movsl
arpl
push
cmp
pop
and
inc
rorb
stos
gs
fsubs
test
pop
bound
adc
fmuls
enter
push
jle
or
outsl
popf
and
push
xor
xchg
in
popa
fwait
into
push
jne
push
mov
aad
js
mov
stos
mov
pop
dec
push
cmpsb
loopne
ficomps
pop
or
movsl
cmc
sbb
imul
pop
push
and
inc
repz
xor
mov
dec
sub
fists
out
jo
mov
sbb
cmc
push
push
sbb
data16
mov
xchg
push
hlt
mov
es
cmpl
dec
cmp
fisttpl
ja
test
dec
std
lods
ss
fcoml
adc
lcall
insb
fstps
int3
pop
rcrl
jg
sub
ds
fcomi
jbe
and
test
jnp
mov
jge
sti
xchg
fisubs
decl
shrb
jmp
pop
or
andl
into
leave
aad
add
add
mov
mov
mov
loop
cltd
std
mov
out
sbb
into
imul
fdivrs
adc
push
sub
or
mov
imul
adc
xor
andb
test
fs
es
jp
push
mov
lea
xchg
ds
jge
cmp
or
test
jge
fisttpll
jnp
xor
hlt
in
adc
imul
das
lret
xchg
adc
aad
and
sbb
push
cmp
and
adc
gs
sbb
inc
jecxz
insb
aad
mov
xor
fnstcw
sub
and
inc
andb
sbb
sub
pop
dec
sbbl
rorb
insb
mov
inc
pusha
sub
aad
pop
sbb
shlb
fsts
es
fsubl
mov
and
fcomi
out
xchg
cmp
mov
cmp
test
pop
jmp
std
push
xchg
test
xchg
push
popf
jle
and
xchg
or
icebp
mov
js
jl
pop
push
sti
sahf
cltd
hlt
lret
out
xchg
dec
cmp
xor
jl
inc
push
addb
sarb
imul
pop
jb
mov
dec
lds
sti
xorl
sarb
xchg
out
xchg
pop
inc
sub
mov
sarl
scas
and
jmp
cmp
mov
scas
insb
push
testl
cwtl
gs
mov
test
jo
mov
test
lret
mov
pusha
sub
out
mov
cmpb
sbb
sbb
mov
jns
popl
or
sahf
cmpsl
gs
xchg
subb
fs
mov
pushf
inc
lret
xor
jae
push
sub
adc
add
inc
leave
sbb
jg
pop
arpl
jno
jmp
lock
add
inc
jne
rolb
jnp
mov
push
fidivl
pop
mov
ret
xchg
ficompl
xor
iret
jno
adc
dec
mov
mov
lods
jmp
xor
ljmp
inc
and
and
inc
mov
mov
adc
ror
and
and
sub
cmp
pop
sbb
or
popf
lea
shl
jle
mov
and
sbb
sbb
mov
xor
je
cs
cli
sub
popf
jb
mov
mov
mov
mov
clc
dec
mov
mov
jae
mov
out
inc
push
jno
cmp
mov
daa
push
xchg
adc
in
dec
mov
scas
mulb
in
addr16
pop
imul
inc
cmp
fs
aam
mov
push
and
shlb
inc
ljmp
test
jg
xorb
jmp
or
mov
cwtl
add
ja
xor
cmpl
test
xchg
imul
nop
add
pop
cli
mov
adc
lcall
inc
scas
sbb
dec
xchg
das
icebp
sti
push
fildl
lcall
lcall
scas
lcall
mov
xor
xchg
xchg
ret
idiv
jle
push
loope
jns
enter
jns
mov
mov
xor
in
xchg
imul
popa
popf
sbb
mov
fidivrs
scas
jp
in
sub
jp
sub
bound
dec
ljmp
andl
das
cwtl
dec
nop
mov
mov
sar
scas
jle
fs
dec
pop
mov
cli
imul
out
in
sub
jle
popa
fistpll
addb
test
stc
adc
cli
ljmp
repnz
cmp
adc
adc
or
pop
stc
flds
mov
das
jnp
add
jnp
fisttps
test
stos
xchg
jmp
js
lcall
js
mov
outsb
mov
popa
ljmp
daa
push
inc
out
push
je
mov
inc
cmp
jnp
pop
xor
fstpt
cwtl
mov
in
cmp
push
pop
cs
and
ffreep
mov
sbb
pop
jle
push
sbb
mov
mov
add
fidivs
stc
daa
rorl
mov
jnp
daa
push
lret
mov
addb
dec
lods
in
into
hlt
jp
adcl
int
fisubs
inc
push
mov
iret
xor
jno
lahf
aas
fstpt
inc
push
cld
inc
or
stc
jg
cmc
bound
test
push
loop
jbe
mov
dec
loop
lds
stc
cmp
mov
sarl
jno
push
lods
cs
out
jecxz
stos
hlt
push
mov
mov
mov
in
out
lods
repnz
std
jge
dec
cmp
outsb
adc
std
or
out
cmp
jnp
cmc
pop
mov
sbb
mov
shlb
jno
jge
jle
and
leave
adc
lock
push
jno
push
popa
mov
push
rorl
gs
mov
mov
mov
jno
xchg
cmp
or
push
push
push
out
rcll
bound
push
add
mov
mov
fwait
daa
xchg
mov
inc
xchg
or
add
hlt
jl
push
sbb
gs
mov
xor
das
sbb
stc
cmp
mov
lods
lods
ds
inc
mov
mov
dec
inc
sub
enter
enter
es
flds
xor
cmp
dec
mov
cmpsl
gs
or
jmp
dec
inc
pop
decl
adc
mov
mov
idivb
jb
cwtl
jno
aam
jle
test
rorb
xchg
pushf
add
push
xor
sarl
push
imul
ds
inc
or
out
dec
inc
nop
lret
push
jne
or
aaa
inc
cmp
mov
add
bound
sub
cmp
rorb
bound
xchg
jle
insl
jno
fldt
lods
push
push
cli
in
and
inc
push
cmp
insb
jns
push
aad
daa
pop
or
sbb
push
xchg
sub
cmp
mov
xchg
or
sbb
pusha
scas
xor
bound
jle
rorl
or
jne
popl
sarb
cmp
sub
mov
pop
lds
loope
int3
jl
xchg
inc
jmp
je
orl
icebp
fldlg2
repz
fcmovnb
and
add
inc
cmp
flds
adc
js
roll
imul
xor
fs
push
sbbb
xchg
cmc
or
sbb
mov
pushf
mov
das
sbb
mov
inc
or
mov
dec
xorb
adc
jno
xor
in
gs
leave
in
xchg
jnp
rcr
lea
push
outsb
int
sti
leave
xor
mov
mov
ret
lods
mov
popf
les
xor
roll
stc
fildll
jbe
repnz
push
mov
stc
pop
pop
std
jnp
xchg
lods
xchg
inc
cmp
popa
or
sub
into
test
jno
add
xor
in
jnp
dec
adc
test
jg
inc
lods
xor
insl
sbb
mov
mov
mov
jmp
push
aaa
jge
dec
mov
std
mov
insb
jmp
out
push
pop
or
orl
jle
jae
les
push
xor
call
mov
xlat
sti
mov
cmp
sbb
add
push
sub
add
adc
daa
sub
adc
and
out
shrb
lret
inc
bound
leave
lods
push
sbb
js
in
adc
or
in
daa
mov
jbe
adc
pop
jno
rcrl
inc
pop
imul
push
in
lea
add
mov
sbb
and
sub
pop
mov
push
stc
das
dec
mov
cmc
cwtl
outsl
or
jbe
or
inc
xchg
sbb
dec
inc
xchg
xchg
ja
mov
sub
andb
sbb
xchg
pop
sbb
cmp
mov
mov
das
andb
gs
test
jg
mov
jmp
push
mov
mov
out
xchg
int3
mov
cmp
push
jmp
sbb
dec
sbb
cltd
mov
je
fldl
inc
sbb
xchg
cmp
adc
insb
xor
ficomps
jge
mov
xchg
pop
imul
sbb
mov
push
mov
jp
push
pop
fnsave
and
push
mov
mov
mov
mov
push
push
xor
mov
cwtl
jno
add
and
lcall
ret
jg
dec
shlb
jl
dec
loop
or
call
cmp
test
mov
test
test
divl
imulb
jb
mov
out
scas
push
test
mov
cmp
or
adc
mulb
lds
lcall
lods
mov
xchg
movsl
and
hlt
test
dec
movsl
xorb
jns
dec
stos
xchg
and
inc
mov
pop
and
sbb
stos
dec
leave
lds
and
xrelease
push
and
jns
mov
lods
sbbb
les
test
mov
cmp
cmpl
push
jb
push
xchg
faddl
sub
pop
jmp
data16
inc
inc
pushf
push
xchg
adc
xlat
dec
push
imul
and
lods
add
sahf
jnp
sbb
xchg
xor
addr16
mov
std
ret
popa
or
pop
or
dec
inc
loope
daa
pusha
sbb
punpckhwd
mov
pushf
out
xor
mov
sub
sbb
pusha
ss
xchg
scas
in
decb
aad
add
sbb
adc
lahf
lcall
jnp
rcrb
push
cld
scas
pushf
or
xchg
out
add
push
rcrb
fidivs
dec
inc
pop
sbb
sbb
sbb
mov
rorl
mov
xchg
mov
push
mov
mov
cmp
mov
or
sahf
xor
cld
pushf
ds
adc
jmp
sti
jle
ret
or
inc
loope
add
aas
adc
or
lea
cmp
aas
imul
xor
stc
nopl
stc
push
pop
fcoml
das
jmp
fcoml
aad
cmovae
stc
movsl
mov
jecxz
inc
sbbb
jg
cmp
add
imul
fdivrs
notl
xor
push
jle
xchg
inc
cvtdq2ps
idivb
fisubrl
push
adc
enter
mov
les
out
inc
xor
xor
push
iret
into
scas
stos
mov
sub
push
mov
mov
imul
sub
scas
push
repnz
push
sub
push
sub
test
and
fcomps
fsub
sbb
mov
fwait
or
pushf
sbb
loope
pop
cli
mov
sbb
dec
int3
std
pop
jo
dec
mov
imul
mov
stc
dec
fdivr
mov
int3
dec
ret
mov
xchg
mov
sbb
xor
enter
pop
jecxz
int3
pop
push
xor
sbb
fdivl
sbb
push
fstl
movsl
or
dec
sti
lea
adc
cmp
and
dec
clc
loope
dec
nop
xchg
and
ds
dec
pop
clc
cld
mov
and
dec
lods
lods
insl
sub
cld
mov
dec
pop
in
push
lods
sub
jle
dec
scas
mov
push
ret
mov
sahf
out
inc
jns
scas
jnp
mov
xor
or
daa
dec
mov
call
mov
jmp
jno
insb
bound
cmp
push
xor
repz
call
mov
jle
jge
fcompl
pop
stc
fldt
dec
call
hlt
hlt
test
out
mov
jp
mov
jnp
inc
adc
loop
clc
js
rol
jo
mov
mov
es
and
out
cmp
sub
fildll
out
jmp
test
jle
aas
mov
and
repz
clc
push
stc
mov
adc
sub
lods
lea
and
pop
test
xchg
mov
loopne
repz
mov
xchg
out
sti
out
mov
mov
cs
xor
mov
repz
inc
mov
jecxz
jno
in
lods
cli
push
pop
dec
pop
mov
jge
xchg
gs
adc
aaa
or
xlat
repz
push
jno
mov
sub
ljmp
xchg
repz
bsr
dec
out
jmp
mov
inc
mov
inc
scas
bound
inc
mov
into
push
sub
pop
jge
mov
sbb
jp
icebp
test
lds
lcall
sbb
xor
pop
lods
shlb
push
or
mov
test
xchg
int
or
and
mov
outsb
dec
sbb
sbb
sbb
or
jo
cli
repnz
cmp
bound
jnp
adc
push
push
jl
jns
ret
test
push
ret
ljmp
pop
inc
daa
and
imul
sbb
mov
fcmovnb
add
rcrb
mov
fisubrs
arpl
jg
mov
pusha
shl
ss
xor
pusha
sub
cmp
test
fcompl
inc
subb
lea
adc
mov
rorl
hlt
cmp
xor
dec
dec
or
loopne
stos
and
jle
and
pop
fidivl
test
pop
pop
iret
jns
mov
out
inc
dec
out
cmp
push
inc
shr
sarb
and
imul
inc
jae
jnp
inc
and
cli
mov
imul
push
mov
out
dec
aas
lods
movsb
mov
xor
push
scas
pusha
cmp
mov
add
shrl
inc
mov
rcr
iret
pop
sbb
daa
push
mov
mov
push
sbb
push
insb
jmp
or
scas
out
pop
int
sbb
ret
ret
or
sbb
cwtl
mov
ret
lea
imul
sbb
or
pop
add
rclb
jns
mov
out
mov
jb
pop
or
in
dec
loop
mov
or
or
and
rclb
adc
outsb
fs
cmpsb
into
pop
sahf
loop
mov
std
pop
or
pop
fnsave
xor
imul
jl
cmp
testl
out
adc
pop
or
mov
mov
std
inc
shl
adc
cmp
test
sti
lea
add
cs
out
jb
das
sahf
mov
std
movsb
cwtl
sbb
daa
dec
pusha
arpl
lds
gs
dec
arpl
enter
sbb
fistps
sub
enter
lret
xchg
jnp
sbb
mov
fs
cld
adc
cli
sbb
push
mov
and
pop
pop
fs
rcrb
repz
xor
jb
jo
cmp
adc
dec
push
lock
call
ds
nop
adc
mov
pusha
xchg
pop
sub
mov
iret
inc
fisubs
test
inc
out
xchg
or
adc
out
mov
leave
xchg
sub
adc
add
push
push
jo
adc
fwait
sbb
pop
pop
adc
and
jle
mov
movsb
mov
cmp
movsb
xchg
cmp
adc
push
jg
xchg
popf
jg
jmp
cmp
dec
inc
and
out
mov
out
mov
fcomps
out
adc
repnz
xchg
adc
addl
cmp
test
mul
mov
xchg
sbb
lret
inc
cmp
ret
out
push
pushf
nop
mov
out
xor
ret
and
scas
adc
and
je
jge
and
jp
jge
and
jge
sahf
cmp
xor
jae
pusha
rcll
inc
mov
jmp
in
lcall
mov
xchg
jle
xor
out
lock
adc
inc
mov
dec
sbb
mov
sbb
sahf
xchg
fildl
sti
scas
adc
daa
scas
fisubrl
jl
lcall
imull
aad
das
sbb
xchg
mov
aad
shlb
jg
mov
dec
cltd
arpl
pop
iret
pop
mov
pop
xchg
sbb
xchg
sbb
test
inc
pop
incl
push
in
lret
lods
shlb
xor
cmc
xorb
mov
std
xchg
push
hlt
fimull
test
mov
inc
outsl
push
cmc
dec
rorb
inc
gs
popf
fisttps
idivl
mov
fdivs
or
add
pop
inc
divl
cwtl
mov
mov
inc
jb
imul
jns
adc
xorb
sub
pushf
fs
pop
adcl
les
xchg
pop
clc
cli
imul
push
cmp
sub
ret
push
adc
out
add
push
aas
lahf
or
dec
jl
ljmp
jnp
leave
sub
jnp
mov
gs
gs
push
cli
fwait
dec
jne
pop
push
sbb
lahf
dec
lcall
in
jmp
cmp
lcall
push
mov
jb
cli
jae
ret
into
push
mov
mov
mov
ss
xor
xorb
push
testb
mov
fwait
mov
adc
dec
arpl
ja
mov
leave
sbb
ret
ret
cli
in
popf
push
inc
out
mov
xor
daa
or
jnp
leave
push
addr16
pop
jg
test
sahf
test
mov
lret
lahf
mov
mov
call
push
icebp
push
gs
xchg
jnp,pt
ret
scas
in
xchg
jo
icebp
mov
std
jg
or
xor
cmc
into
lret
cmpsl
and
jb
and
sbb
gs
int3
push
mov
in
scas
pop
cmp
lods
test
scas
adc
cs
pusha
shrb
xor
or
cli
inc
andl
pop
add
cltd
pop
imul
iret
pop
aad
std
out
add
scas
cld
xchg
sarl
and
lods
sbb
out
dec
mov
mov
lea
mov
out
pusha
es
fdivl
jns
decl
repnz
rolb
pop
test
arpl
push
sub
inc
mov
jg
cmpsl
jnp
xchg
nop
fwait
inc
jle
ljmp
shlb
pop
fwait
jb
jg
daa
pop
imul
fadd
popf
fists
dec
jg
ss
cmp
ja
sbb
pop
imul
mov
fidivs
jns
sahf
mov
popf
jg
mov
add
out
pop
jmp
bound
jecxz
test
push
push
ds
cmc
jge
mov
sti
les
scas
pusha
mov
es
nop
dec
pop
mov
popf
dec
or
fwait
inc
push
xor
jg
mov
xor
lcall
sub
or
addb
push
cmc
imul
jg
jmp
cmp
out
mov
or
out
fimull
sbb
jbe
js
in
inc
scas
lods
dec
jo
sarb
das
cmp
inc
repz
fcomp
push
ret
mov
jle
stos
repnz
aas
stos
mov
scas
rcrl
pop
data16
pusha
sbb
cmpsb
cltd
in
mov
loopne
jge
dec
gs
js
inc
sbb
lret
lods
mov
mov
jecxz
dec
xchg
jne
cmp
outsb
divb
insl
lock
iret
cmp
testb
imulb
aad
das
sbb
out
sub
adc
out
int3
dec
adc
inc
adc
xchg
jbe
mov
inc
and
or
ret
test
sub
or
inc
pop
lods
enter
lahf
fsubp
or
in
xchg
ja
adc
inc
cmp
nop
lods
mov
jg
sub
jo
xchg
sub
ret
fists
cmc
decb
rcrl
and
or
fwait
mov
in
rorl
or
inc
sahf
push
popf
jg
xchg
mov
lds
inc
xchg
mov
pop
or
inc
out
mov
dec
mov
sbb
inc
ss
cmpsb
repz
or
xchg
xor
lahf
and
pop
sbb
push
mov
daa
fildl
mov
shll
cltd
mov
or
inc
mov
sbb
ss
imul
in
sbb
aad
dec
je
lods
decl
lret
mov
add
mov
sbb
xchg
cmpsb
lods
mov
cmpsb
jle
out
sub
dec
pop
imul
gs
cmp
push
ja
rcll
ja
jbe
pop
fiaddl
imul
and
shll
pop
data16
dec
cmp
shlb
xchg
int
sub
fdivl
jns
add
nop
jne
adc
cmp
mov
scas
adc
inc
or
inc
sbb
adc
enter
das
dec
jg
pop
dec
jp
adc
push
out
pop
aas
test
xchg
into
and
dec
outsl
or
xor
lcall
pop
inc
ja
and
jge
loope
sbb
mov
mov
cwtl
sub
jns
cltd
mov
test
mov
jbe
imul
nop
sbb
sarl
pop
push
and
add
push
push
enter
mov
lods
sbb
fisubs
dec
fbstp
dec
xchg
inc
jno
mov
add
inc
test
bound
in
arpl
data16
lds
push
cmpsl
sub
movsb
xchg
and
xor
adc
xchg
and
inc
cmp
out
les
pop
bound
and
ret
jb
loop
outsb
or
mov
dec
add
data16
push
push
mov
lods
and
mov
push
mov
sub
xchg
je
lea
mov
pop
dec
ss
mov
dec
rcrl
push
and
jmp
jecxz
xchg
push
ja
xchg
in
jmp
nop
inc
add
push
gs
sub
ret
mov
inc
adc
push
dec
scas
mov
mov
sbb
mov
sub
mov
scas
dec
xchg
jg
push
ja
push
sub
xchg
out
loop
xchg
xchg
daa
aam
gs
pop
lcall
fcmovnbe
pusha
mov
xchg
es
inc
imul
adc
mov
in
arpl
xchg
ja
faddp
scas
xor
hlt
sbb
xchg
push
repnz
sahf
icebp
and
pop
fwait
test
jbe
in
add
adc
mov
lea
addl
je
roll
inc
mov
dec
into
and
jg
stos
mov
cmp
push
pop
das
lcall
mov
daa
sub
mov
sbb
mov
adc
test
xor
shlb
and
das
and
add
add
into
mov
test
es
ffreep
xchg
test
addb
fldt
dec
loope
add
add
or
xchg
fs
push
push
lea
pushf
sbb
shl
jecxz
icebp
outsl
popa
repnz
es
cltd
je
shll
std
add
mov
add
cltd
mov
push
mov
mov
add
mov
ret
adc
rorl
aas
cmp
mov
pop
bound
inc
pop
adc
divl
aad
fimull
sub
aad
movsb
cmp
std
bound
rorb
dec
outsb
in
iret
das
pop
ja
pop
mov
in
xor
mov
push
cmp
test
popf
mov
push
loope
outsl
test
test
xorl
xchg
sbb
dec
jl
adc
ret
pop
sub
js
fldcw
or
dec
test
icebp
and
and
scas
daa
push
insb
iret
or
jge
repnz
std
jecxz
dec
mov
and
sbb
and
or
das
cli
rorb
fs
adc
pushl
das
mov
std
mov
inc
adc
movsl
xlat
decl
ss
jns
cmp
dec
daa
rolb
pusha
loope
push
ret
xchg
mov
pop
xchg
mov
mov
stc
mov
lock
lods
adc
inc
sbb
mov
add
sub
ja
js
lcall
sar
sbb
adc
sub
mov
adc
add
dec
into
in
movsl
dec
lahf
out
add
or
in
lahf
filds
vhsubpd
sbb
sub
dec
dec
mov
scas
test
xchg
lods
inc
mov
mov
mov
dec
das
leave
mov
testl
inc
push
sbb
test
pop
mov
es
dec
xchg
mov
sarb
fistpll
sbb
nop
fsubrs
jl
loope
subb
xor
inc
adc
dec
mov
pop
cmc
out
fucomip
jns
sbb
fs
adc
sahf
push
pop
mov
mov
or
xchg
test
pusha
sbb
outsb
js
mov
pop
or
push
xor
pop
imul
daa
cltd
mov
push
ja
leave
fidivl
imul
push
xchg
xor
and
sti
pop
cmp
xchg
sub
jge
sbb
xchg
mov
int3
add
inc
int
jnp
add
lret
push
loop
aam
js
cld
jmp
scas
loopne
ljmp
and
or
mov
dec
inc
cs
sti
imul
xor
imul
pop
jae
adc
das
mov
imul
lret
cmp
popa
repnz
ret
inc
sahf
nop
fistps
ljmp
lcall
dec
orb
int
sub
out
jecxz
cmp
inc
xchg
dec
cmp
fidivrl
xor
call
xchg
adc
cmc
enter
js
push
mov
aad
das
enter
pusha
pop
leave
and
mov
jns
sbb
push
push
popa
bound
push
mov
sti
sbb
into
mov
inc
jmp
lret
lock
leave
push
cld
mov
mov
clc
push
xchg
jns
jle
mov
dec
imul
lock
cmp
les
pushf
mov
ret
sub
pop
pusha
in
jmp
iret
dec
pop
or
sub
inc
jns
in
mov
stos
je
mov
xchg
push
cwtl
ror
shll
jnp
inc
dec
push
lret
fcoms
cmp
jb
js
test
nop
jns
pushf
or
sbb
jle
jmp
jp
insb
ds
lret
xor
fisttps
stos
lahf
jecxz
inc
mov
mov
jg
loop
decl
pusha
pop
mov
cmp
sbb
cld
scas
xchg
adc
sub
or
adc
jg
jl
mov
or
ljmp
arpl
dec
mov
sbb
pusha
cmp
mov
mov
neg
lahf
xchg
jo
inc
scas
mov
add
scas
pop
cmp
xor
push
or
adc
enter
cmpb
mov
pop
int3
div
and
inc
fucom
inc
repnz
mov
inc
sbb
dec
je
sub
jle
loopne
sbb
repz
push
cmp
and
pusha
pop
sysexit
in
mov
mov
sbb
cli
fnstcw
clc
imul
pop
lahf
jo
xor
daa
xadd
filds
add
repz
cli
pop
jnp
into
pop
cmp
scas
push
cmp
insb
loop
jmp
jle
and
dec
repnz
inc
mov
out
mov
std
xchg
incl
dec
push
pop
pusha
mov
out
repz
mov
jno
fildll
mov
adc
push
out
sbb
fs
mov
iret
inc
pop
push
and
pop
dec
jns
cld
data16
jge
leave
jns
scas
fildll
cmp
lods
sarl
test
repnz
out
and
ja
loop
push
or
dec
cmpsl
and
fcomp
test
dec
jnp
mov
fistps
std
arpl
push
sti
call
andb
stc
cli
je
fwait
bnd
jg
sahf
icebp
shl
push
cmp
mov
cmp
mov
mov
mov
push
fdivl
aam
mov
cltd
cld
cld
mov
gs
jl
insl
sub
jmp
int3
fnstcw
xchg
sbb
bound
or
add
jge
mov
pop
loopne
dec
cmp
inc
sbb
daa
outsb
sahf
push
mov
femms
dec
stc
ljmp
adc
test
mov
in
popf
jg
loopne
lret
xchg
push
pushf
mov
push
and
faddl
popa
das
sarb
mov
cmpsl
add
push
bound
lods
pop
jo
filds
mov
mov
pusha
push
mov
mov
and
ja
sti
cltd
or
mov
mov
sbb
stos
sahf
jns
lret
inc
adc
sbb
mov
sbbl
pop
ret
cmpb
sbb
call
push
jne
mov
push
sub
xor
std
mov
pop
pop
jae
int3
lahf
repnz
sahf
cmc
std
mov
cld
mov
jo
pop
sub
std
xchg
sub
sub
fdivl
js
imul
mov
mov
aaa
sbb
or
sub
and
test
mov
mov
sbb
push
ret
into
insl
ffree
sub
imul
dec
scas
pop
mov
or
sub
cltd
xorl
mov
leave
popa
orb
decl
xor
cmp
data16
push
fdivrl
sub
rolb
dec
mov
loope
pop
dec
lret
out
inc
inc
roll
fmuls
mov
pop
xorb
mov
pop
jp
mov
and
mov
into
jecxz
push
int3
bnd
sbb
leave
or
push
dec
mov
andl
imul
data16
arpl
push
cmp
jle
frstor
sti
fdivrl
cmp
fbld
lahf
dec
js
sbb
and
movsl
sbb
lcall
sahf
xor
or
mov
clc
aas
jae
xchg
sub
bound
jns
sbb
ja
test
bound
cld
cmc
outsb
out
xor
fpatan
mov
mov
insb
repz
clc
jns,pn
imul
out
daa
aam
xchg
lahf
push
js
jl
loop
out
mov
pop
xchg
out
mov
jp
lahf
lret
lret
outsl
cmp
add
sbb
ljmp
push
mov
adc
add
arpl
mov
or
pop
pxor
gs
data16
lds
push
xchg
clc
test
ja
jecxz
test
dec
cs
test
pusha
mov
outsb
push
imulb
xor
and
and
das
ljmp
fisubs
adc
dec
pop
sbbb
jb
aas
pop
test
inc
push
adc
fmul
push
mov
push
sub
out
xchg
xor
dec
sub
test
imul
cwtl
push
cmp
sbb
dec
xchg
mov
pushf
xor
xor
or
loop
jecxz
adc
icebp
sbbb
and
pusha
push
xor
jo
js
adc
filds
push
mov
outsb
jnp
stos
imulb
cmp
loop
mov
sbb
jle
inc
xchg
mov
cwtl
popf
out
xor
jne
lods
in
adc
sahf
mov
out
mov
mov
incl
and
cmpsl
jle
rcl
mov
iret
xchg
xor
jae
cmpsb
sub
and
and
xor
jns
push
sar
inc
fwait
ret
dec
pushf
pop
cmp
adcb
jmp
dec
bnd
test
or
adc
in
sbb
sti
test
ret
mov
fnclex
ss
test
fs
fiaddl
adc
loop
push
in
xor
pop
imul
mov
repz
leave
xor
aaa
je
and
in
popl
rorl
xor
mov
not
xor
cmp
dec
inc
int3
push
or
rcr
xor
xchg
inc
mov
je
xor
das
mov
out
aaa
adc
fmul
das
push
or
add
adc
xor
popa
push
pop
imul
lret
cmpxchg
out
jb
jl
ja
mov
mov
stos
cmp
adc
xchg
test
es
int3
popf
xor
bound
iret
inc
cmp
out
mov
call
add
xchg
ja
in
out
cmp
xchg
mov
add
cld
orl
cmp
mov
mov
fsubl
mov
cmp
aad
jecxz
lcall
add
bnd
pushf
push
adc
test
movsl
rclb
pop
shl
dec
scas
ret
xor
xchg
dec
sbb
xor
pushf
push
xchg
jb
add
jg
xor
les
dec
or
sbb
and
xchg
pop
dec
xor
and
faddl
mov
mov
cmp
dec
and
push
jbe
jle
shlb
sahf
loop
lahf
lret
pop
pop
imul
ds
cmpsb
fs
nop
lods
jmp
js
addr16
sbb
roll
mov
dec
pop
inc
xor
aam
sub
sbb
sbb
jmp
call
cmpl
mov
sbb
adc
out
imul
dec
mov
rcr
pushf
pop
adc
mov
rcll
pop
rcll
dec
sti
sahf
push
orb
lock
adc
push
std
xchg
push
movsl
cmc
sub
jns
pop
fsubrs
jne
repnz
xchg
jg
addr16
popf
cmpsb
shll
ret
dec
and
xor
sub
jbe
push
sti
push
jb
sub
jg
lcall
lods
adc
jnp
gs
mov
dec
decl
and
subb
jge
loope
sarb
fs
movsl
in
lahf
cmp
sbb
scas
jo
cli
or
shrl
add
dec
rcl
cmp
pop
adc
pop
fimuls
push
mov
into
add
fdivrs
cmp
sbbb
cmp
repz
loopne
sarb
and
icebp
jnp
fldl
mov
or
inc
addr16
jbe
jecxz
jne
fists
or
iret
sbb
cmp
fcmovnb
xor
nop
negb
mov
daa
and
push
mov
pop
jecxz
or
inc
daa
stc
sahf
ror
sub
dec
mov
pop
sbb
outsb
jmp
lock
xchg
mov
add
mov
xchg
sbb
cld
mov
sbb
jno
jg
idivl
inc
andl
pop
sub
sub
inc
sub
sub
incb
mov
push
nop
bound
test
cwtl
mov
imul
or
adc
leave
sbb
repnz
into
lock
lock
rclb
mov
push
jl
adc
test
mov
out
mov
jnp
push
and
imul
je
in
push
in
imul
stos
mov
lock
inc
or
sbb
shlb
lods
mov
imul
test
mov
loopne
fsubrl
fildll
mov
inc
cmp
mov
jns
out
mov
xchg
and
arpl
mov
popa
mov
outsl
xor
cmp
js
adc
xchg
adc
sbb
sar
dec
cmpb
push
in
xchg
or
inc
daa
out
or
ljmp
push
movsb
pop
out
mov
into
mov
adc
push
stc
xor
fs
dec
cs
loopne
xchg
filds
xor
pop
ret
add
push
pop
stos
mov
adc
cmp
dec
mov
jg
imul
ds
sbb
push
inc
sbb
mov
loopne
jbe
cmp
dec
pop
orb
or
mov
jg
jae
sbb
mov
push
add
sbbb
xchg
cmp
dec
pop
jae
lock
mov
jg
add
sub
sahf
xor
xchg
jmp
out
scas
testb
cmp
mov
arpl
mov
pop
cmp
stc
jg
sbb
imul
movsb
adc
mov
aaa
imul
pop
arpl
mov
scas
pop
mov
xorl
pop
lcall
mov
mov
clc
inc
xor
adc
adc
adc
dec
xchg
xchg
push
stos
cmp
dec
scas
iret
jmp
dec
or
ficoms
or
xchg
or
add
sbb
jp
push
bound
test
inc
add
inc
add
inc
ljmp
add
mov
insb
icebp
fimuls
push
out
dec
std
cs
mov
lahf
gs
mov
out
mov
jae
sarl
inc
dec
bound
arpl
out
xor
mov
mov
push
or
jnp,pt
mov
shl
xrelease
push
fistps
mov
mov
cmpsb
mov
out
out
mov
cmc
nop
mov
cwtl
leave
mov
faddp
repnz
and
and
xor
fnstsw
push
and
jge
out
pop
mov
incb
and
sti
xor
popa
addr16
mov
mov
sbb
and
cmp
fdivrl
stc
push
hlt
iret
pusha
into
hlt
xor
jb
fnstcw
icebp
rclb
imul
mov
xor
adc
cmc
inc
movsl
cmp
pop
jo
dec
jb
test
adc
sbb
rorb
imul
daa
or
mov
cwtl
imul
ret
lahf
ret
mov
or
ret
in
dec
add
in
sahf
fldt
inc
repnz
repnz
cmp
repnz
inc
stos
lcall
mov
push
rcll
out
aas
repnz
out
inc
jg
jnp
aam
in
inc
lahf
adc
test
or
test
loop
mov
loop
in
scas
js
mov
imul
nopl
loope
repnz
jecxz
sbb
idiv
loop
int3
loop
push
test
mov
mov
mov
ss
popf
andb
xchg
dec
and
out
fs
fimull
daa
mov
add
cltd
mov
shlb
xchg
xor
or
bound
pop
push
movsb
ss
xchg
and
xchg
bsr
mov
and
jmp
cli
sub
mov
stos
cmpb
mov
rclb
push
cmp
jle
in
inc
sbb
jns
adc
ds
or
mov
imul
ficoms
subb
stc
mov
cmp
test
stos
mov
lods
je
fistl
push
mov
push
mov
cs
adc
sub
lret
stos
adc
fisttpl
xor
gs
and
imul
mov
adc
stos
adc
mov
test
popa
mov
js
jg
mov
ds
add
xor
adc
xor
cmp
mov
cmp
cli
fistps
jbe
add
mov
lret
push
data16
insb
in
mov
cs
push
sub
cmp
outsl
mov
dec
lock
xchg
add
imul
xor
gs
inc
inc
into
sbb
adcl
mov
out
icebp
add
outsl
iret
mov
sub
adc
fmuls
outsb
sub
scas
mov
bnd
lahf
add
sbbb
add
inc
mov
jb
mov
jb
mov
cmp
gs
or
jne
daa
pop
pop
das
jo
ds
or
jmp
sub
mov
sub
shrb
inc
loop
into
xchg
sub
xlat
or
mov
bound
xchg
sub
push
jmp
rcll
int3
and
fwait
repnz
sahf
mov
bound
add
fwait
jge,pt
push
adc
add
add
cs
pusha
mov
add
ljmp
bound
adc
data16
pop
push
fdivl
sbb
shlb
in
sub
movsb
loope
mov
adc
cmp
adc
push
adc
xchg
outsb
inc
dec
stc
push
sub
into
jmp
cmc
sti
es
insl
jge
xor
sub
inc
cmp
and
imul
sbb
js
adc
ja
jp
xor
rcrb
add
push
ret
add
js
jmp
pop
sub
jg
xchg
addr16
push
shl
fidivrs
adc
push
jns
ficoms
nop
sbb
and
cs
dec
xchg
mov
stc
scas
stos
xor
xor
nop
cmp
xchg
push
pushf
pop
jns
ficompl
repnz
sub
lea
out
call
push
and
mov
sbb
mov
jecxz
jle
rolb
pushf
mov
mov
jb
pusha
push
sub
jmp
and
stc
js
add
pop
sbb
xchg
xor
adc
xchg
xchg
mov
lret
fbstp
push
rcl
xchg
rorl
inc
outsb
xor
add
daa
fistl
cli
das
inc
sbb
add
rorb
mov
mov
repnz
push
mov
push
xor
das
xchg
sar
sbb
jne
and
leave
into
pop
aaa
mov
or
fiadds
jns
std
fdivl
sarl
bound
xchg
sarl
arpl
sbb
mov
xor
icebp
and
add
push
xchg
icebp
fmuls
xchg
icebp
adc
mov
push
sub
roll
mov
repz
test
push
imul
test
sbb
aad
push
aad
movsb
sub
mov
or
cmp
adc
loope
sbb
out
or
adc
scas
xor
inc
ret
fwait
lock
jo
push
sub
adc
xchg
iret
xchg
xchg
scas
cmp
pop
shrb
inc
xchg
clc
ret
adc
inc
and
adc
or
push
mov
inc
mov
jge
add
mov
decl
dec
hlt
push
sbb
mov
inc
outsl
orb
gs
push
jo
add
aad
orl
insl
sbb
data16
push
sub
mov
aad
sahf
fldl
lods
pop
lods
xorl
push
int
sbb
cmp
lahf
jno
pop
jb
sub
stos
jg
cmp
or
arpl
sbb
jl
mov
out
mov
fcoms
pop
outsb
fidivrs
imul
mov
cmp
orb
lds
fidivs
ficomps
mov
push
fidivrs
mov
in
mov
push
sbb
sahf
adc
or
jge
bound
cmpsb
cmp
dec
pcmpgtd
sbb
mov
pop
das
inc
nop
pushf
dec
rorl
sbb
sarb
movsb
imul
clc
sbb
pop
inc
je
jg
dec
adc
repnz
push
mov
or
jns
push
iret
sahf
into
rolb
pop
movb
daa
mov
sub
jne
inc
add
mov
sbb
in
fwait
cli
sub
sub
xchg
or
jg
inc
cmpsb
mov
lods
insb
inc
gs
sar
mov
jne
repz
mov
data16
mov
sub
imul
lahf
inc
inc
jno
inc
stos
jno
jg
mov
or
jno
les
dec
test
sbb
xchg
xchg
out
cld
fsubr
pop
test
push
orb
je
test
out
inc
test
subl
or
sahf
mov
mov
mov
or
in
popa
js
xchg
enter
mov
pop
addb
pop
pop
shlb
adc
imul
cmp
out
mov
gs
fists
aas
or
inc
xchg
in
adc
jg
xorb
pop
mov
mov
imul
add
sub
sbb
and
int3
rclb
outsb
or
mov
pop
and
cmovne
and
mov
cli
or
rorb
or
sbb
shrb
push
das
fisttps
push
loop
das
mov
xor
loopne
scas
cmp
adc
xor
jmp
jmp
out
jnp
adc
sub
ja
clc
and
das
pop
and
mov
sub
sub
sbb
mov
sbbb
mov
push
bound
and
lahf
push
fisubs
and
or
sbb
gs
or
daa
sub
inc
mov
scas
fmul
fistps
rclb
ret
rcr
or
rclb
jg
shlb
mov
movsb
mov
dec
das
das
int3
dec
sahf
sub
inc
lahf
hlt
mov
push
mov
ret
outsb
or
js
stos
sarb
and
cmpsb
shrb
and
sub
outsl
adc
into
push
adc
cmp
mov
or
rclb
jmp
mov
sub
testb
push
xor
ja
and
mov
dec
mov
lock
mov
into
gs
fstps
lea
out
jo
mov
inc
fsubrl
sub
inc
push
add
stos
xchg
outsl
sub
mov
lahf
dec
add
lock
lods
mull
loopne
movsl
mov
fs
leave
inc
shrl
sub
xchg
fmuls
outsb
aam
pop
loopne
mov
loopne
pop
sub
loopne
scas
out
mov
adc
adc
sub
inc
mov
ret
nop
jg
nop
mov
adc
cmc
nop
and
xchg
aas
sar
mov
in
scas
jno
mov
fsubrl
and
movsl
cs
inc
xor
dec
jb
and
fsts
mov
adc
scas
scas
ret
jmp
daa
ret
sbb
and
adc
test
cmc
push
sub
and
xor
jmp
and
pop
pop
out
mov
lahf
out
mov
mov
repnz
es
out
xor
xchg
mov
push
jb
push
lods
dec
jnp
repz
mov
pop
stos
mov
pop
mov
cmp
sbb
mov
lea
mov
cltd
jmp
mov
push
add
mov
mov
sbb
popl
dec
je
in
jecxz
iret
xchg
push
test
jmp
jns
shlb
jg
jmp
fdivp
fcmovnb
mov
jg
xor
das
push
xlat
or
fisubl
sahf
arpl
subb
repz
mov
out
cmpl
jge
leave
flds
xor
jg
subb
aad
xchg
jg
inc
mov
mov
xor
mov
mov
insb
mov
repnz
decl
jo
clc
stc
cmp
inc
or
xor
jle
stc
and
leave
xchg
push
out
adc
out
and
sbb
inc
das
jo
iret
test
jecxz,pn
xchg
push
subb
mov
push
and
pusha
inc
fdivr
cmpsl
dec
push
mov
jle
jmp
cmpsl
dec
lahf
subb
es
into
mov
pusha
push
pop
out
xor
mov
ficoms
cmpsl
lea
jge
or
cmp
out
fs
add
sub
jle
imul
ret
rcll
cmp
add
fmulp
push
fstps
lret
xchg
jno
sbb
push
dec
adc
jmp
cmp
jmp
out
ds
sbb
pop
mov
mov
add
mov
add
push
pop
aam
fnstenv
leave
and
frstor
push
outsl
adc
add
mov
das
shrb
inc
mov
ret
sarl
xchg
cmp
subb
dec
add
xor
mov
inc
mov
test
loope
mov
dec
push
sbb
repz
jns
jno
shlb
jo
dec
das
push
dec
das
das
js
repz
or
mov
pop
cmc
std
sbb
mov
out
add
les
lea
dec
out
and
popa
ds
fsubrl
out
lds
inc
out
fistpll
in
fistpll
fbld
call
mov
xchg
cmp
dec
stos
fbstp
shrb
sbb
mov
iret
arpl
iret
cli
or
iret
inc
sbb
push
in
iret
xor
jmp
andl
push
push
dec
pop
lahf
mov
jnp
mov
lahf
push
test
fmuls
cmp
cmp
or
sbb
repz
scas
fsubs
cmp
ret
push
push
sub
mov
push
adc
sub
imul
das
fcom
adc
stc
push
in
out
and
jl
daa
mov
fmul
cmp
rclb
imul
clc
sbb
repz
lea
hlt
sbb
stos
sbb
cmp
xchg
out
test
fiaddl
jecxz
ja
addb
lock
ds
cmc
or
adc
mov
arpl
test
pusha
push
xor
hlt
loop
clc
ljmp
sub
imul
fpatan
jecxz
data16
mov
fs
mov
movsl
out
inc
insb
out
addb
loopne
lret
cmp
iret
inc
dec
decb
dec
mov
mov
jl
out
push
sar
jecxz
test
daa
ljmp
fisubrl
mov
mov
ret
inc
orl
push
addb
insb
jb
mov
imul
jmp
cmc
sti
pop
aad
xchg
jae
nop
mov
fsubl
sbb
scas
das
mov
scas
push
dec
aaa
bound
dec
mov
xchg
xchg
lods
mov
test
ffreep
ja
mov
inc
pop
scas
push
pop
out
mov
repnz
fwait
shlb
cli
icebp
mov
stos
es
sub
fimuls
in
scas
daa
push
mov
lods
cs
pop
sti
lods
dec
and
push
fimuls
mov
xchg
mov
inc
inc
dec
sbb
out
ja
xor
jge
cmpl
adc
lahf
jbe
ret
mov
add
in
sub
xchg
stc
sti
cld
pop
movsb
mov
mov
jg
jg
repz
sbb
adc
xor
push
jge
cmc
in
test
aas
fidivrs
leave
jmp
pop
rcrb
inc
push
imul
arpl
stos
sti
mov
into
out
xchg
fdivl
fsubrl
bound
sub
outsl
pusha
fidivs
rolb
pop
mov
dec
mov
add
dec
cld
outsl
xor
out
ret
xchg
les
bound
cmp
mov
xchg
mov
mov
push
cmp
js
xchg
sahf
movsl
fsubrs
rorb
stc
push
push
out
rcrl
call
xor
fstl
rorl
in
jle
jg
in
xchg
subb
mov
hlt
inc
cmc
xor
popl
mov
cltd
add
xor
cltd
xor
sbb
jmp
push
fwait
ret
lds
and
xchg
jno
mov
es
out
and
dec
add
xor
int3
lds
or
loope
lahf
inc
mov
jb
in
xorb
repnz
jle
int
jle
pop
push
jne
mov
outsb
adc
arpl
cmp
dec
jp
mov
or
pop
pushf
add
hlt
jb
popa
mov
jbe
xor
cli
mov
imul
mov
mov
pop
int3
xor
arpl
dec
sbb
aas
push
je
xor
addr16
into
fstpt
cltd
aas
mov
cmpl
inc
pop
push
int
sub
fs
and
cmovnp
inc
cs
cs
jo
loope
pop
fists
mov
rcl
or
fs
jmp
insl
cs
sub
jmp
nop
pushl
sahf
cli
sti
add
andl
push
lods
insb
jnp
or
test
xchg
pushf
outsb
sub
aad
pop
mov
xchg
dec
push
insl
jns
jle
mov
cli
or
xor
jmp
dec
dec
iret
adc
add
out
dec
mov
cmc
cld
mov
fwait
in
scas
xor
dec
test
into
repz
jb
gs
loop
inc
into
ja
jo
scas
icebp
push
jmp
ret
push
out
jns
xor
xor
fdiv
out
shlb
mov
push
mov
jnp
jnp
std
sti
cltd
xor
testb
repnz
jp
xorb
mov
test
loope
nopl
or
insb
mov
xor
test
mov
aas
pop
mov
jno
jg
sub
icebp
jmp
pop
aam
inc
fsubr
icebp
fisubrs
ja
xchg
aad
lret
xor
or
mov
fwait
xor
enter
sbb
scas
out
dec
enter
push
rclb
roll
mov
mov
out
ja
dec
fidivl
arpl
jg
jno
ja
jg
out
sbb
leave
jg
scas
inc
xchg
or
adc
test
movsl
shll
sbb
sarb
les
and
mov
jns
mov
add
dec
lock
daa
or
push
pop
out
rcrb
and
pop
seta
cmpsl
inc
test
leave
loopne
sbb
cltd
out
jle
pushl
mov
jbe
push
incl
and
pushf
jnp
or
repnz
mov
pop
in
daa
loopne
sahf
lods
add
nop
stos
dec
lds
insl
leave
into
mov
js
lock
pushf
out
stc
dec
sbb
fisttpl
in
xor
fwait
std
sar
sahf
out
mov
popf
cmp
mov
js
fsubl
mov
cmp
out
ficoms
sub
mov
mov
mov
out
loopne
dec
sbb
adc
cli
dec
cmp
xchg
inc
sbb
sbb
sbb
sbb
test
mov
dec
inc
int
lcall
mov
inc
jns
mov
aam
ja
or
aas
jg
mov
sub
or
rclb
jmp
out
loop
mov
lret
lock
imul
std
fidivrl
sbb
and
jns
adc
mov
int3
jb
inc
out
insb
mov
mov
cmp
xchg
add
cmpsb
push
push
cmpsb
cmp
sbb
leave
or
or
inc
cs
xor
pop
adc
test
mov
test
push
jmp
sbb
fwait
push
repnz
xchg
jg
xchg
pop
mov
add
out
mov
and
scas
sub
push
gs
sarb
fisttps
cmpb
not
aam
movsl
aas
test
sbb
shlb
mov
adc
xor
and
repnz
int3
in
js
mov
movsl
les
xchg
pop
data16
mov
mov
fisubl
push
adc
outsl
js
jl
mov
repnz
in
push
ret
icebp
loopne
pop
mov
arpl
sbb
bound
bound
mov
arpl
dec
test
mov
mov
add
in
orb
push
mov
in
sub
lea
xchg
sti
ja
insb
dec
imul
leave
bts
mov
push
or
mov
loop
xor
pusha
andb
lret
jbe
testl
jb
inc
sbb
addb
addl
cmp
sbb
add
rol
pushf
addr16
push
push
pop
std
cmp
pop
jecxz
xchg
mov
xor
and
inc
decl
xlat
stos
jb
jg
pop
adc
mov
mov
js
sub
push
inc
ret
sahf
daa
jb
pop
sub
cwtl
mov
test
mov
mov
lea
dec
testb
test
jo
scas
mov
outsb
lods
nop
cmp
sub
cmp
push
repnz
pop
and
sbb
sbb
and
mov
stos
pop
shl
adc
pop
mov
inc
es
sbb
adc
mov
jle
pop
stc
insl
push
gs
rorl
sbb
push
sti
mov
scas
adc
loop
xchg
push
sub
stos
xor
insb
xchg
mov
out
cltd
add
mov
sub
mov
sbb
cmp
mov
andb
js
lods
mov
imul
mov
xchg
sbb
mov
or
bnd
or
dec
pmullw
imul
subb
add
sbb
lret
or
sub
inc
neg
ja
das
out
slwpcb
iret
pop
sti
leave
mov
mov
sbb
bound
xchg
sub
iret
lods
lahf
inc
mov
adc
cli
xor
out
jns
cli
cmp
mov
dec
sbb
stc
lds
push
jae
int
orl
sti
sbb
inc
pop
push
mov
ret
stc
inc
shlb
testb
sbb
subb
jo
or
ss
lcall
jge
dec
push
imul
pusha
or
or
cmp
dec
dec
fcmovnu
mov
js,pt
sub
imul
jo
out
jo
fisubl
or
xchg
push
fneni(8087
jae
in
jno
int3
dec
pop
jg
repz
mov
in
aad
inc
and
mov
loope
fistpl
das
ret
xchg
pop
sbb
negb
data16
pop
scas
scas
mov
mov
pop
aaa
or
popf
inc
fwait
aam
mov
push
or
mov
imul
scas
sub
loopne
push
js
loopne
pop
lret
cmp
test
jnp
cmc
mov
xor
jl
adc
imul
xor
arpl
sti
ja
sub
ret
or
mov
cmp
pop
clc
jecxz
adc
sahf
pop
mov
shll
or
inc
xchg
mov
cmp
pop
push
xchg
push
jecxz
movl
nop
jno
dec
sub
mov
sbb
mov
ret
or
mov
sub
loop
adc
pop
les
xchg
add
cli
lahf
aas
je
mov
test
lock
shll
sbb
movsb
pop
xchg
sbb
push
mov
sbb
cs
sbb
aaa
cmp
out
in
mov
pop
popa
jge
es
cmp
fadd
mov
out
cwtl
lods
and
addl
outsb
popf
xchg
fwait
sbb
adc
addr16
lds
sbb
lahf
filds
test
mov
in
and
pop
mov
cld
ret
inc
inc
addb
inc
bound
jle
push
mov
mov
and
pop
or
dec
xor
sbb
dec
out
or
jnp
neg
jg
mov
and
jl
mov
cmp
jle
aam
imul
pusha
fwait
bound
push
pop
lret
testb
jo
rclb
divl
cmp
cmp
push
js
adc
mov
inc
push
imul
imulb
dec
enter
jb
stos
scas
push
inc
mov
cmp
or
push
loop
and
out
divl
ret
push
or
sbb
dec
and
nop
call
xchg
mov
lret
jg
loop
pop
mov
or
xchg
sub
jmp
ret
mov
jb
cmp
cli
nop
lret
loop
adc
lock
sbb
fcoms
mov
les
inc
call
add
mov
out
ret
pushf
idivb
test
and
mov
or
push
test
ljmp
nop
lret
pop
sub
pop
push
sbb
push
jnp
pop
test
lcall
jmp
out
cltd
nop
dec
inc
cmp
ljmp
mov
fwait
cmp
jbe
inc
das
push
cmp
imul
sbb
dec
jle
dec
sub
test
fisubrs
mov
jge
js
sub
jp
das
cmp
pusha
jl
es
aaa
jae
add
or
int
xchg
dec
cltd
imul
pop
scas
pop
sbb
enter
pusha
mov
mulb
xchg
adc
mov
movsb
xor
jno,pn
int3
lret
fwait
vpshlw
push
jg
cli
insl
xor
scas
mov
mov
inc
jb
jno
jo
out
xorb
in
cld
imul
inc
out
sbb
pop
jne
and
adc
mov
add
daa
cmp
pop
inc
popa
push
sbb
popa
pop
bound
imulb
into
fwait
das
loop
cmc
push
adc
xchg
sbb
or
push
mov
push
cmp
cmp
push
mov
push
mov
aad
sbb
dec
jnp
mov
mov
rorb
dec
sub
imul
dec
addb
xchg
sub
jbe
mov
ret
fdivl
fs
mov
fimuls
push
jge
jnp
dec
fildl
ret
loope
adc
mov
lods
push
mov
in
push
mov
ret
jbe
jnp
ret
jmp
nop
mov
pop
xchg
stos
mov
subb
js
push
sti
lods
jge
or
lcall
repnz
sbb
cmp
scas
mov
sub
pop
into
dec
mov
lret
mov
rcll
icebp
test
insl
jecxz
fs
xchg
sbb
jle
add
pop
test
aam
stos
and
jno
jge
add
loope
sbb
jge
mov
popa
mov
jecxz
sbb
ret
test
jnp
pushf
ss
pop
iret
es
mov
in
fwait
xor
inc
sbb
mov
outsb
cltd
std
cmp
sbb
inc
outsl
fiadds
add
pop
nop
sbb
in
add
mov
stos
bnd
lcall
je
arpl
scas
ss
mov
jg
aas
orb
ljmp
mov
cmp
daa
into
test
aam
mov
aas
sbb
inc
pop
mov
test
pop
dec
inc
xor
ficoms
push
fiadds
inc
lret
outsb
or
adc
nop
jmp
pop
mov
mov
fdivrs
lods
or
fldcw
mov
in
lahf
lret
push
in
nop
push
fsincos
jbe
cltd
js
leave
fistps
js
lahf
out
jp
out
push
ljmp
sarb
push
test
jmp
or
or
test
ret
into
out
fisttps
xor
ja
call
and
dec
subl
das
sbb
cld
lret
dec
rol
mov
jo
and
mov
test
repz
lret
push
or
test
mov
fcomps
test
mov
push
dec
cmp
ss
sub
or
dec
or
in
inc
push
cmp
xchg
xchg
leave
mov
sbb
mov
mov
icebp
fwait
add
xchg
loop
xchg
int
imull
leave
clc
and
scas
cwtl
sub
lret
nop
fiadds
mov
das
push
xor
es
es
fists
pop
mov
dec
cmp
xchg
adc
cli
ljmp
xchg
pop
iret
or
inc
xchg
jmp
sub
jnp
fidivs
aas
mov
mov
push
ret
les
scas
inc
dec
and
push
dec
jg
mov
mov
mov
mov
sub
inc
jo
push
push
push
cmpsl
xchg
pop
mov
popf
or
jb
sbb
in
pop
cmp
lret
jle
into
mov
pop
mov
cmp
cmpsb
or
ficoms
mov
cmp
int3
mov
jno
mov
add
das
mov
lock
and
push
inc
adc
mov
xchg
dec
jg
sub
mov
add
imul
and
xchg
pop
call
popa
cmp
or
add
jle
mov
cli
jle
mov
cmp
dec
call
xor
mov
xchg
sub
repz
mov
sbb
jmp
popa
jnp
lds
pushf
aam
xchg
aad
ret
and
sbb
push
mov
mov
mov
cltd
shrl
fsts
test
rol
loop
cmpsb
or
ficoms
add
cmpsl
repz
pop
fs
ljmp
xchg
pop
push
popa
lods
jno
orb
jl
mov
dec
jnp
testb
sbb
dec
ret
or
scas
ss
mov
notl
mov
negb
sbb
in
sbb
enter
lret
int3
inc
jle
push
scas
adc
mov
adc
adc
orb
addl
ljmp
popf
std
jecxz
stos
sbb
add
out
cld
inc
ljmpw
sub
and
test
in
call
or
push
fstps
shll
pushf
mov
leave
sahf
jp
push
repnz
mov
hlt
jge
add
fstl
inc
lcall
shrl
sbbl
aad
jnp
pop
push
mov
pop
das
lds
xchg
ds
js
pop
pop
insb
inc
dec
inc
std
inc
adc
push
mov
aas
shl
jl
sarl
xchg
sbb
dec
mov
inc
jl
cmp
inc
dec
lcall
movsl
jmp
popa
mov
test
and
jo
xchg
ja
gs
cli
push
loopne
insb
ret
dec
popa
insl
push
into
jb
xchg
sarb
and
lods
aad
push
xchg
aam
outsl
sub
jno
test
fstps
scas
mov
mov
add
mov
test
pop
push
xchg
sarl
fstpt
cmpsl
pushf
mov
and
imull
ret
inc
lock
sbb
sbb
sub
sub
ljmp
addl
jae
or
sub
jl
push
pushf
sti
push
nop
lcall
cmpsb
test
mov
jle
dec
push
outsb
mov
jne
imul
mov
add
fists
xchg
mov
xchg
mov
mov
pop
into
hlt
inc
inc
inc
sub
pop
adc
push
push
xchg
lahf
jbe
add
add
enter
sar
cmp
scas
inc
or
ljmp
jne
inc
leave
xchg
insb
xchg
stos
or
orb
insl
xor
jle
and
or
cmpb
mov
jge
pop
aam
jns
push
inc
out
repnz
or
jo
xchg
or
rcll
xchg
cmp
add
adc
xchg
addr16
test
and
add
mov
inc
mov
repnz
shl
dec
add
les
dec
inc
in
sub
das
sbb
dec
add
fwait
pusha
pop
repnz
push
xor
add
sbb
add
subl
cmovne
sarl
mov
add
adc
jo
std
mov
nop
or
xchg
jecxz
mov
scas
cltd
jge
add
or
inc
or
xchg
test
stc
add
pop
shll
scas
or
mov
and
test
dec
cli
inc
jl
hlt
sti
mov
push
jb
push
push
mov
fmull
lahf
jmp
dec
ja
inc
xchg
shrl
ss
sub
loop
jl
cli
sub
dec
insb
out
jg
test
out
pusha
push
mov
jge
iret
pop
jg
push
jg
dec
aad
sbb
out
aaa
mov
jns
inc
int
lds
xor
std
into
pop
outsb
scas
push
fisttpll
pusha
xchg
mov
rcrb
xorl
sub
or
fisubs
sbb
dec
mov
xchg
pop
push
pop
push
aam
pushf
cmp
xor
jl
xchg
dec
mov
inc
add
pop
in
cmpsl
jbe
mov
mov
pop
sbb
into
loop
adc
cmp
inc
in
or
xchg
loope
cmp
jns
mov
mov
je
push
scas
mov
sbb
sbb
in
xchg
addr16
rcrb
in
add
mov
mov
pop
inc
cmc
adc
xor
mov
add
push
lret
sbb
icebp
dec
inc
adcl
fsts
mov
clc
xor
push
in
cmp
in
mov
dec
in
dec
xchg
push
insb
aad
jmp
in
push
or
popa
mov
pop
test
dec
lds
stos
lods
bound
insb
mov
and
jge
pop
sub
push
or
sbb
adcl
mov
mov
repnz
cmp
das
aas
imul
xchg
dec
dec
test
cmp
jle
data16
push
inc
scas
pushf
and
aad
xlat
decl
add
outsb
dec
js
xor
inc
leave
mov
mov
and
inc
cld
xor
mov
and
pushf
dec
frstor
test
mov
idivb
rorb
mov
mov
shl
jb
adc
xchg
cs
sbb
in
ds
cmp
fadd
jecxz
cwtl
fucomip
cwtl
fwait
jno
movl
and
aad
inc
test
mov
inc
mov
pusha
dec
push
test
loopne
mov
adc
pop
mov
das
mov
xchg
push
lret
lahf
data16
dec
sub
inc
sbb
jecxz
das
xchg
lea
mov
enter
rolb
mov
mov
cmp
mov
mov
lahf
testl
cmp
xor
push
push
add
rcll
lret
mov
aad
insb
das
inc
ss
push
pop
filds
popf
sbb
pop
sub
arpl
mov
or
xor
ret
adc
mov
jle
jg
cwtl
dec
push
and
sbb
push
ss
adc
subl
add
jle
ret
xorb
mov
cltd
ljmp
push
scas
xor
xchg
xor
cltd
xor
mov
sbb
mov
rclb
addr16
sbb
out
dec
sti
xchg
mov
outsb
pop
sub
mov
sti
xchg
mov
dec
gs
shrb
rorb
sub
push
sbb
stos
pushf
mov
scas
in
sub
push
pusha
ljmp
xorl
rcrl
inc
dec
cmp
push
ja
test
dec
mov
inc
repz
xor
sbb
into
lea
lahf
pop
pop
adc
sbb
add
cmp
add
mov
jo
stos
lret
popa
test
jge
inc
push
push
and
fwait
jb
jns
mov
outsl
lret
adc
sub
mov
xorb
adc
add
jge
loope
sub
subb
scas
adc
xor
xor
mov
test
es
or
and
jnp
lods
jo
jecxz
push
out
mov
xor
jmp
adc
cmp
fwait
aas
jle
xchg
cmp
pop
or
pop
dec
pop
lea
pop
pop
fcmove
dec
data16
inc
lods
repnz
jns
mov
cwtl
fsubrs
out
fldenv
jno
mov
sub
dec
add
sarb
xchg
std
push
outsb
mov
jg
dec
add
cmp
rol
testl
fiaddl
adc
scas
sbbb
test
xchg
call
xchg
sub
into
jnp
sbb
jge
lock
mov
dec
xchg
jo
shll
jl
or
mov
loope
mov
repz
mov
sbb
xchg
hlt
or
fwait
ss
imulb
sub
jp
cmc
xchg
movb
sbb
leave
dec
inc
sub
dec
cmpsl
dec
mov
es
lahf
mov
mov
sub
pop
mov
pop
lds
sub
adc
sub
in
popf
dec
dec
mov
mov
outsb
mov
jns
sbb
push
mov
sar
add
cmp
sub
outsb
out
mov
fisubrl
mov
push
pop
or
mov
pop
jns
xor
dec
scas
jge
sub
jne
je
adc
inc
cmc
sub
push
xchg
dec
in
mov
xor
add
pop
std
xchg
ss
call
xchg
fnstenv
popa
add
sub
out
jecxz
js
pop
out
loop
aaa
jp
imul
and
mov
or
xor
sbb
sub
lods
dec
cmp
pop
pop
push
iret
jge
ja
jne
out
xor
ja
decl
scas
imul
bound
fwait
pop
repnz
or
adc
dec
lea
dec
fbld
xchg
sbb
jb
test
bound
and
aad
or
leave
addl
adc
jl
mov
push
mov
out
jp
sub
mov
repz
cld
jecxz
scas
pushf
dec
jmp
jg
and
ficomps
mov
xchg
push
daa
imulb
mov
mov
test
sbb
es
inc
jg
mov
lcall
popa
daa
dec
add
mov
xor
aaa
jg
cli
push
cmp
and
sbb
rclb
js
sbb
scas
add
sub
movsb
mov
out
dec
xchg
dec
int3
aad
pusha
ret
jge
dec
popa
aas
sbb
jnp
out
xchg
imul
mov
push
mov
fmull
mov
test
std
lcall
or
inc
cmc
fcoml
jno
mov
orl
mov
testb
hlt
jns,pt
inc
lea
fistpll
xor
sbb
push
dec
xchg
stc
adc
les
mov
dec
std
in
daa
xchg
xorb
test
loope
cld
dec
jo
and
popa
mov
inc
lcall
dec
inc
sub
jge
xor
jb
lds
dec
push
fists
xor
mov
cmp
aas
push
in
mov
mov
js
pusha
test
pop
push
test
sbb
xchg
imul
fcmovnb
les
sub
ror
mov
sub
jl
dec
push
pop
mov
shrl
arpl
xchg
negb
jbe
scas
push
lds
mov
push
adc
push
mov
xchg
mov
nop
mov
push
push
hlt
lret
sbb
add
or
faddl
push
jno
lahf
sbb
loop
call
xchg
jae
pushf
cmp
dec
je
mov
arpl
mov
mov
push
sbb
insb
fwait
xor
jp
jmp
cltd
insb
sub
mov
xchg
aam
pop
test
ret
rcrb
fisttpl
mov
inc
js
js
jo
fcomip
jnp
xchg
int3
and
repnz
sub
jne
and
lea
adcl
dec
cwtl
test
and
enter
test
in
out
sbb
mov
mov
mov
mov
jg
bound
fidivs
fimuls
lret
fwait
pop
lds
lods
mov
lahf
inc
imul
jo
mov
sbb
lldt
add
out
xor
dec
test
adc
pushf
leave
jle
roll
loop
mov
roll
lods
cli
leave
cmpsb
lret
sbb
imul
xchg
cmp
out
xor
lods
mov
out
scas
lret
add
dec
fwait
jp
and
cmp
shlb
in
sbb
dec
scas
pop
out
les
push
test
jns
das
xorb
mov
sbbl
mov
out
sti
xor
jmp
iret
adc
fidivs
in
jge
int3
sahf
jmp
jp
push
test
ret
push
mov
outsl
push
hlt
fistpl
popl
ja
icebp
cmpl
add
mov
push
pop
les
dec
mov
sub
arpl
push
xor
push
dec
test
in
push
std
je
pusha
ds
lahf
xchg
pop
mov
sub
andb
mov
subb
test
orl
subb
ljmp
ret
cmp
outsl
shlb
jo
das
cmp
fcompl
dec
outsl
lods
add
dec
mov
xorl
push
push
xchg
push
and
out
lahf
jmp
test
lcall
pusha
mov
lahf
imul
xchg
pop
orl
xor
dec
mov
sbb
int
push
repnz
or
data16
pop
imul
jg
cmp
icebp
mov
inc
dec
xor
sub
mov
xor
pop
hlt
jl
sbbb
adc
pop
ret
inc
fwait
test
lds
cld
nop
and
sbb
mov
imul
inc
mov
cmp
shl
je
xchg
fstpl
sub
incl
test
jnp
cmp
add
bound
pop
dec
push
jnp
shlb
or
inc
stc
dec
inc
pop
xor
les
and
loope
das
fsubl
mov
sbb
mov
test
mov
cmp
fimuls
cmpsb
clc
leave
mov
out
mov
dec
out
daa
dec
call
fimuls
ljmp
les
test
push
or
mov
ja
orb
jecxz
or
jo
mov
inc
mov
xchg
inc
and
sub
add
sbb
inc
push
iret
sub
test
ja
andb
jns
mov
adc
push
push
jl
out
xor
sbb
dec
repnz
orb
pop
sub
test
cmp
mov
dec
jmp
out
test
outsl
pushf
add
inc
aas
sbb
mov
repnz
mov
xor
and
lea
or
test
pop
and
xchg
mov
sbb
rorb
jle
lcall
outsl
es
cmc
jne
sbb
fildl
jg
fldt
sbb
fdiv
sub
ds
jle
fdivr
jg
cmp
lods
pusha
ret
out
xchg
pop
addr16
pop
scas
in
add
fbstp
xor
or
dec
inc
mov
rcrb
leave
ja
xchg
and
sbb
push
push
lret
out
dec
js
xor
cmc
icebp
jns
daa
mov
sbb
dec
fwait
outsl
jb
jg
sub
popa
test
fmul
push
pop
sbb
sahf
test
adc
idivb
outsl
sub
les
mov
pop
mov
inc
jb
adc
pop
je
sub
rcr
dec
sub
fstpt
rcl
out
push
int3
lods
sub
jns
mov
test
push
cmp
ss
push
mov
or
ss
ja
out
cmpsb
jns
sub
in
jno
dec
stos
xor
pop
ret
push
jecxz
int3
clc
call
or
lea
inc
popa
xchg
push
jp
adc
shrl
xchg
test
mov
test
mov
add
lret
pop
push
cli
stc
out
mov
sbb
outsl
inc
pop
cmp
sbb
out
incb
pop
sbb
add
bound
sahf
mov
popl
lahf
mov
cmpb
xor
repnz
rcrb
and
add
adc
lea
int3
rclb
scas
jo
xchg
xchg
mov
outsb
sbb
mov
push
leave
pushf
cmp
xor
jecxz
sbbb
jnp
sbb
test
push
sbb
push
jle
xchg
add
jp
mov
cmp
sub
ret
push
jge
xchg
push
mov
or
out
cmp
cwtl
mov
inc
dec
test
leave
xchg
jle
cltd
leave
adc
push
rcrb
pop
addr16
js
dec
add
mov
jge
cs
int
mov
or
pop
fcomps
fwait
pop
mov
jle
leave
in
das
xchg
fdivp
and
adc
test
ds
test
int
inc
cmpsl
mov
into
shlb
and
push
pop
or
push
mov
mov
inc
icebp
sub
or
sub
mov
ljmp
jp
test
into
push
lods
add
ret
sub
jmp
mov
dec
xchg
adc
out
orb
sbb
insb
adc
jne
fldcw
mov
mov
jbe
insl
fists
mov
aas
xchg
cmp
jle
ret
xor
push
inc
add
push
mov
adc
les
mov
es
ficomps
out
jo
inc
xchg
scas
xchg
repz
push
inc
dec
notb
cs
push
rorb
or
scas
out
mov
xchg
out
xchg
into
mov
repz
jne
jb
ret
test
movsl
mov
lcall
test
sbb
pop
mov
ljmp
ja
xchg
test
aad
jno
mov
cltd
aas
mov
push
jmp
pop
shr
mov
sbb
scas
pop
dec
pop
test
faddl
ficomps
fmull
push
mov
repnz
adc
jmp
mov
mov
inc
insb
cmpb
push
inc
adc
push
inc
int3
data16
jl
or
pushf
imul
xor
push
fwait
inc
scas
mov
test
imul
test
ljmp
popf
jne
mov
mov
add
dec
push
call
repnz
cmp
inc
xor
mov
dec
pop
aas
arpl
mov
mov
xchg
cmpl
cmp
les
jmp
jle
xor
sub
pop
mov
in
jmp
xchg
sub
stos
jnp
call
inc
pop
push
ds
movsb
xor
cld
insl
scas
test
sbb
xchg
xor
arpl
inc
push
inc
and
add
test
ss
ds
push
ret
cmpsl
mov
jnp
sub
aas
lret
gs
jbe,pn
jnp
mov
cmp
jbe
into
push
mov
inc
mov
jge
lods
insb
pusha
rcrb
fwait
repnz
dec
mov
iret
into
fistps
data16
jl
lea
shlb
lahf
scas
mov
repz
out
mov
xor
inc
jge
mov
xor
cmp
adc
cmp
lahf
fildll
leave
nop
xor
movsl
push
sub
out
call
nop
nop
out
cmp
push
hlt
push
jo
dec
cmp
push
adc
sbb
nop
jmp
loope
mov
lock
adc
xacquire
xchg
jle
mov
dec
add
mov
out
lea
dec
inc
lea
push
sbb
push
imul
sbb
fcmovnu
pushf
mov
xchg
mov
jbe
lahf
out
mov
push
jns
cmpxchg
daa
mov
lds
sub
stos
xchg
pop
fistpl
dec
jae
rol
push
mov
jae
or
arpl
test
dec
fnclex
mov
loopne
pop
jae
lahf
std
in
nop
insb
xor
pushf
dec
gs
aas
add
lds
mov
mov
negb
rolb
jo
scas
bound
pop
mov
sahf
and
inc
out
and
inc
jg
out
mov
mov
cltd
cli
push
into
mov
sub
repnz
sub
xchg
push
sbb
movsb
cmpb
push
dec
test
bound
add
ljmp
sbb
out
pop
ja
push
add
mov
jbe
cmp
add
or
dec
mov
sbb
sbb
mov
inc
call
gs
cmp
sbb
leave
xchg
scas
or
add
popl
sbb
push
push
xor
mov
ss
lret
cmpsb
sbb
shlb
xor
int3
dec
jmp
mov
fwait
and
adc
jmp
shr
push
lcall
idivl
push
cmp
adcb
sbb
inc
fucomi
mov
sbb
pop
imul
fstpt
dec
in
dec
lea
add
pop
pop
jecxz
and
sbb
stos
or
popf
pop
jb
mov
inc
xor
mov
mov
mov
test
test
mov
inc
ljmp
pop
mov
into
xchg
dec
mov
js
aad
sahf
fimull
or
mov
xor
mov
jmp
add
shrl
dec
daa
dec
scas
das
jmp
ficomps
xor
mov
inc
pop
incl
jo
shll
pop
dec
fdivl
int
ss
pop
rolb
dec
scas
orb
stos
sti
jg
sbb
jbe
add
xchg
jg
dec
xor
mov
lret
jb
mov
cmp
pop
or
jbe
out
rorb
cmp
xchg
dec
pop
push
jle
lahf
ljmp
jo
out
pop
les
test
xor
mov
jmp
jno
dec
pop
scas
inc
mov
stos
xchg
enter
mov
xchg
jp
pop
pop
shrb
in
popa
push
mov
leave
push
pop
test
int
sub
test
jmp
dec
or
loop
mov
sbb
arpl
mov
add
mov
jge
jbe
sub
cmpsl
lahf
leave
sbb
fmuls
mov
ret
mov
push
cli
loopne
jns
ja
mov
pop
push
sub
das
jge
dec
nop
pushf
dec
or
ds
xchg
fnstcw
mov
stc
sbb
int
jg
rorb
mov
and
jb
push
pusha
push
xchg
lcall
xchg
loopne
movntps
ljmp
xchg
mov
mov
push
sbb
sarl
and
test
test
cmpsb
mov
loopne
mov
and
ret
jns
rolb
pushf
mov
cli
fstps
inc
mov
mov
ret
jns
inc
aas
popa
mov
mov
jge
enter
lods
inc
mov
outsb
les
lret
outsb
into
mov
shl
push
fnstsw
les
jg
xchg
mov
mov
inc
jbe
mov
sub
mov
xchg
sub
xor
pop
adc
lods
stos
popa
jg
enter
enter
jo
jecxz
lods
loop
xchg
inc
mov
sub
mov
adc
mov
adc
dec
sahf
jno
xchg
cltd
test
bnd
and
mov
test
lock
xor
test
dec
xchg
jg
loop
mov
ss
cltd
ret
les
fidivrl
shll
aam
cli
addl
pushf
mov
inc
in
push
sbb
out
xor
cmpsb
stc
inc
xor
std
adc
insb
dec
mov
and
stos
push
fmuls
dec
fisubrs
dec
push
dec
call
mov
jnp
push
push
cmp
sbb
push
bound
rcrb
adc
mov
jecxz
mov
stc
stc
addl
ss
ret
je
stos
sbb
das
ret
rcrl
iret
dec
ret
into
inc
dec
dec
pop
sub
cld
jnp
lods
cwtl
fnstsw
out
insb
aad
cmp
inc
aaa
imul
mov
pusha
leave
mov
stos
scas
test
insb
inc
pusha
inc
sbb
xor
sub
nop
sub
dec
or
fidivl
fsubrs
scas
shrb
jmp
xor
fimuls
xlat
std
sbb
xor
jnp
xor
out
push
leave
cld
cld
xchg
movsl
mov
or
inc
je
rcl
pop
sub
arpl
icebp
mov
aad
sub
int
pop
pop
fmuls
dec
jnp
and
inc
mov
lret
xchg
mov
push
sbb
mov
mov
push
fidivs
or
adc
test
out
arpl
dec
xor
mov
push
xchg
push
jnp
daa
lcall
pop
je
cmp
ret
xchg
test
jg
mov
fcmovnu
push
or
jge
out
mov
aas
cmp
sbb
and
pop
mov
dec
inc
add
lret
xor
adc
mov
mov
lcall
cmc
das
dec
pop
test
js
and
out
in
push
cmpsb
imul
shr
add
jl
bound
xchg
inc
push
xchg
arpl
je
addl
out
add
fisttpl
sbb
sub
pop
callw
fmulp
adc
lds
fs
push
cmp
lds
into
inc
cmpsl
mov
mov
test
adc
sahf
push
cmc
fscale
arpl
pusha
and
popl
inc
loopne
mov
in
dec
xor
repz
out
subb
mov
test
mov
scas
push
in
aad
inc
pop
or
rcr
pop
inc
jb
es
mov
test
mov
jmp
mov
mov
pop
fs
or
pusha
dec
xor
sti
cld
test
fisubrl
xchg
js
je
fistpll
in
inc
mov
pop
jb
sti
stos
jle
test
add
repnz
sarl
lahf
je
scas
cmc
loope
lahf
fbstp
cmp
clc
fwait
lock
insb
stos
loopne
and
dec
jmp
sub
mov
std
jp
das
sahf
lret
push
mov
jne
std
sbb
stos
lret
push
sub
pop
out
call
pop
hlt
sub
xchg
push
test
ret
pop
ljmp
js
mov
xorl
push
inc
inc
sbb
scas
ja
mov
fs
test
pusha
popa
daa
sub
movsl
xorl
dec
mov
cmp
pop
adc
adc
adc
sub
sub
std
add
dec
jns
sbb
xor
adc
mov
jb
mov
testl
loopne
sbb
xchg
shrl
push
and
lret
push
mov
jbe
out
jp
pop
mov
xchg
inc
add
cli
test
gs
adc
cmc
dec
or
pop
jle
lahf
xlat
cmp
and
ljmp
pop
mov
cs
mov
imul
jmp
pop
pop
faddl
jb
xor
pop
test
inc
xchg
stc
sbb
std
add
sbb
dec
push
sbb
sbb
push
and
int
pop
dec
out
out
xchg
leave
xchg
jp
mov
test
lcall
fidivs
pop
sbb
xor
js
rclb
sub
stos
push
jne
test
bound
mov
xchg
push
aam
orb
add
stos
mov
daa
mov
push
aam
les
and
pop
sbb
sbb
and
cmp
mov
ljmp
sbb
sub
dec
inc
ja
xchg
imul
dec
enter
in
fwait
add
popa
dec
push
fcomp
push
sbb
adc
outsb
fwait
sub
mov
cmp
icebp
in
sarb
into
fidivs
out
jp
shr
jno
inc
xor
stos
and
fildll
cmpsb
mov
push
mov
ficompl
notb
mov
fstp
sub
sub
xor
roll
filds
shlb
push
bound
cmp
cmpb
mov
adc
movsl
daa
pushf
jbe
test
xchg
push
xchg
mov
addb
imul
insb
jge
mov
in
subl
subb
inc
inc
nop
movsb
cli
dec
lret
mov
fcmovnu
sub
xchg
mov
cltd
push
test
dec
dec
pop
bound
loop
xor
mov
bound
sbb
cmp
push
inc
shll
pop
es
repz
loopne
jecxz
jae
mov
push
mov
fbstp
cmp
scas
and
dec
xchg
mov
lret
mov
and
xor
push
sahf
gs
fnstenv
sub
cmpsb
lahf
lds
in
out
adc
movsl
sbb
std
inc
mov
or
sahf
xchg
cwtl
repz
adc
xor
out
mov
test
cltd
rorl
mov
add
int
scas
pop
push
test
fisubs
leave
push
adc
fwait
hlt
dec
bound
jle
ja
mov
mov
out
scas
pop
sti
je
or
xchg
aaa
gs
shlb
dec
jb
data16
cmp
adc
push
ss
push
ret
fiadds
roll
test
pushfw
test
jo
out
inc
test
je
and
xchg
sub
jmp
rolb
add
mov
fidivrs
jo
mov
mov
inc
sbb
jp
mov
jge
icebp
cmpsb
mov
data16
inc
add
push
mov
loopne
imul
pop
inc
loop
adc
jmp
xchg
test
add
xchg
mov
jne
out
loop
and
mov
sahf
mov
leave
outsl
inc
pop
fisttpl
xor
sbb
inc
aam
jg
pop
push
fidivs
or
xor
sbb
imul
xlat
inc
cmp
imul
dec
sarb
bound
mov
push
out
dec
xor
ljmp
pop
lahf
xchg
xor
add
test
or
xchg
outsb
mov
lea
aas
jg
cltd
test
inc
popa
ds
inc
lods
test
test
sarb
popf
outsl
xchg
jg
arpl
ds
inc
addb
jg
stc
mov
movsl
and
loope
call
fsts
inc
cmc
xor
andl
inc
mov
js
sub
test
xor
push
mov
loope
pop
lods
mov
mov
mov
fucom
and
fstl
or
in
cwtl
dec
mov
cmpsb
xor
imul
jo
jbe
xchg
into
mov
fwait
lock
test
ss
sub
ja
fstps
aam
mov
dec
fcomp
and
out
scas
lcall
sarb
stos
test
jb
repnz
cltd
xchg
out
mov
lret
outsb
ja
outsb
test
or
inc
repz
dec
dec
sti
cmp
mov
jnp
dec
out
lds
ret
movsb
cmc
iret
inc
idivl
scas
rorb
mov
fnstcw
rclb
mulb
push
pop
push
xchg
inc
jmp
cmp
test
ret
push
jmp
repnz
cmp
jl
pop
ror
fsubrl
sbb
lret
push
out
mov
rol
loopne
or
xchg
fbstp
or
inc
in
xrelease
mov
test
test
repz
dec
sub
pop
mov
in
jmp
and
jge
xor
das
test
cli
mov
fisttps
xchg
mov
mov
sub
rclb
mov
push
mov
mov
loopne
sub
pop
push
mov
jle
int3
mov
sbb
repz
and
xchg
push
mov
pop
sub
cmp
icebp
inc
gs
push
mov
sbb
aaa
addb
movsl
or
mov
insl
sti
inc
jp
dec
xor
movsb
loop
jecxz
rcrb
mov
adc
jno
pop
jp
jbe
in
in
xchg
cmp
lcall
jmp
dec
test
inc
call
stc
repz
xor
adc
mov
aaa
xor
add
movb
adc
lahf
cli
dec
pop
mov
shll
es
imul
test
ret
scas
repnz
jns
jnp
pop
jae
mov
push
scas
sub
adc
cmp
out
dec
pop
jecxz
fwait
stos
movsb
pop
daa
jne
jg
sub
pop
mov
js
push
adc
repnz
stc
dec
sub
fs
das
inc
inc
push
xor
andb
into
mov
mov
push
mov
lea
inc
addr16
jge
mov
sahf
sbbb
or
mov
cltd
test
dec
pop
mov
push
jg
sub
daa
cmpsb
lcall
test
sub
or
pmaxub
mov
loop
mov
dec
fmuls
xchg
adc
or
mov
xchg
sub
and
xchg
dec
or
rcrb
les
mov
cmp
nop
fsubrp
xchg
add
repnz
push
add
jb
mov
faddl
in
adcb
xchg
mov
xchg
out
dec
dec
cmpsl
fistps
dec
test
push
data16
or
xor
mov
cmpb
jo
pusha
mov
mov
and
mov
and
or
lcall
fcmove
sbb
outsb
mov
icebp
sahf
cwtl
push
cmp
movsl
inc
out
jge
repz
test
jl
xchg
push
icebp
and
call
shlb
pop
fwait
out
sub
jle
lds
das
xchg
js
orb
mov
mov
mov
xchg
ja
test
test
push
xchg
outsl
inc
sub
bswap
mov
cmp
mov
addb
out
das
je
push
and
mov
push
fisttpl
jmp
negb
movsl
out
xchg
dec
push
fsubs
test
sub
and
or
pop
xchg
push
mov
xchg
adc
pop
rcr
lock
mov
cmp
xor
fst
enterw
cwtl
add
cltd
mov
int3
roll
xlat
sahf
in
sbb
mov
out
and
cld
xlat
cltd
movsl
xor
and
xchg
or
dec
adc
and
xorb
adcb
sbb
das
or
sub
or
xchg
cmp
xchg
xlat
out
dec
dec
ss
sub
mov
cld
push
dec
lock
add
test
pusha
imul
rorb
fimull
fildll
clc
mov
pushf
scas
fcomip
pop
jmp
inc
pop
mov
jge
and
or
xchg
xor
ss
pusha
out
bound
adc
pop
mov
pushf
scas
mov
mov
stos
mov
popa
ret
fs
xor
jnp
mov
sbbl
sub
cmp
xor
leave
pop
js
insb
call
mov
inc
pop
push
add
sbb
clc
mov
out
rclb
fwait
push
sbb
mov
fldcw
push
or
aaa
stos
mov
fldcw
mov
cwtl
shlb
das
and
cmp
mov
inc
inc
and
sbb
or
sti
add
mov
sbb
pop
push
bound
mov
mov
add
test
cmp
cmpsb
loop
push
insb
rolb
cmp
aas
stos
into
sti
mov
pop
test
mov
jle
movsl
loope
daa
fwait
cwtl
jg
lea
push
jp
and
jb
xor
adc
jae
mov
pusha
dec
std
ret
fcomip
xchg
jecxz
pop
inc
popa
cli
out
repz
push
mov
mov
jge
add
test
bound
xor
loope
jnp
or
mov
pop
cmp
push
sbb
xchg
std
shlb
jl
cmp
pop
jge
dec
and
cmpb
popf
test
mov
mov
mov
pusha
adc
jecxz
sarb
mov
fcomps
popa
inc
addr16
mov
push
push
subl
out
int
leave
sub
cwtl
lcall
int
mov
andl
jl
lea
loopne
lahf
mov
inc
ds
cltd
popa
das
push
sbb
inc
mov
popf
dec
dec
js
shlb
fsubrl
outsb
es
fcomp
mov
incl
fsubrp
jbe
and
in
sub
pop
insb
sub
push
push
fsubrs
popl
lods
imul
sbb
adc
xchg
loop
sub
dec
cmc
lret
mov
xchg
das
sti
cmp
enter
daa
mov
xchg
or
push
mov
ljmp
cvtpi2ps
bound
fstpt
int3
inc
xor
rclb
mov
sbb
push
dec
andl
push
add
mov
ja
test
call
repnz
or
pop
test
push
or
popa
js
pop
xchg
jg
std
pop
das
sbb
arpl
or
push
sbb
imul
stos
pop
jle
fldenv
and
mov
lea
cmp
push
jg
push
xor
in
push
cmp
push
loopne
ficoms
es
call
mov
add
cli
fbld
iret
mov
es
andb
sahf
push
xor
shll
jmp
cmpsb
jo
fdivrp
jg
sbb
mov
xchg
dec
push
lcall
subb
test
lds
mov
and
ss
cltd
xchg
jae
sbb
xchg
test
mov
pop
movsl
mov
mov
add
test
mov
js
das
into
add
inc
orb
fildll
inc
cmp
std
scas
mov
enter
out
test
xchg
mov
xchg
or
test
test
mov
mov
and
lahf
fcomi
or
jp
loop
out
ficoms
out
scas
mov
pop
ror
fmuls
out
shrb
in
xchg
push
inc
cld
push
dec
inc
stos
int3
inc
inc
loope
or
jb
insb
cmp
add
shlb
or
data16
push
push
lds
jmp
push
dec
jno
inc
pop
cmp
dec
xchg
and
repz
ret
add
pop
push
daa
pop
xor
xchg
and
xchg
pop
mov
xchg
aad
add
mov
ds
cmp
and
insl
lods
rorl
cmpl
dec
arpl
mov
xlat
fstpt
mov
mov
push
fsubrp
fcmovbe
mov
push
mov
scas
scas
leave
push
inc
test
pop
test
mov
call
xor
in
xchg
test
repz
and
add
sub
mov
mov
out
lock
test
pushf
popa
push
sti
pop
push
cltd
jmp
popl
bound
call
sti
push
gs
push
mov
mov
mov
jp
and
dec
and
xor
stos
std
mov
lahf
arpl
sbb
inc
jg
adc
test
or
push
pop
adc
adc
jno
jl
sbb
jecxz
rorb
cmp
shl
pusha
pusha
jae
fcompl
cltd
andb
mov
mov
jg
inc
fists
icebp
mov
add
mov
das
addl
leave
mov
insl
or
push
sbb
and
push
jb
mov
xchg
data16
mov
sub
push
mov
adc
xor
sti
inc
ret
repnz
test
out
mov
lea
aas
cmpsb
sbb
loop
scas
pusha
mov
or
test
dec
push
fwait
incl
lock
push
mov
or
and
xchg
test
movsl
add
xchg
ret
dec
xchg
das
pop
into
jns
sbb
push
out
sbb
shrb
mov
mov
dec
leave
pop
negb
fsubr
fisubrs
mov
data16
mov
push
imul
inc
mov
mov
test
xchg
inc
rorb
shll
add
xor
daa
movd
adc
out
fstps
lahf
inc
std
mull
test
leave
out
lcall
faddl
rorb
mov
movsl
sbb
fisubs
cltd
lds
inc
lcall
test
mov
pop
push
dec
lahf
jecxz
fimull
test
aam
sbbl
jle
sub
rcrb
push
adc
stos
test
sub
inc
jl
icebp
jge
xor
push
les
jge
bound
adcb
fwait
imul
xor
add
lcall
outsl
orb
or
cs
mov
inc
dec
mulps
or
es
ret
bnd
sarl
xchg
add
cmp
jnp
push
sbb
lds
int3
cli
stos
sbb
popf
xor
mov
push
mov
sahf
jbe
test
push
lods
shlb
addr16
icebp
clc
icebp
shrl
test
mov
xchg
icebp
mov
sbb
lods
add
out
in
mov
subl
xchg
repnz
int3
xor
sti
je
pusha
popf
pusha
dec
mov
ret
add
loop
jmp
es
mov
mov
popf
adc
out
and
js
push
mov
mov
mov
xchg
or
lahf
sti
das
mov
jle
inc
jle
orb
fstpl
sbb
stos
mov
dec
int3
inc
cmc
xchg
mov
push
mov
test
and
add
sub
aas
inc
jle
fildl
mov
adc
mov
and
xchg
dec
xchg
lret
wrmsr
xchg
ret
sub
bnd
bnd
xchg
xchg
addr16
and
out
aam
inc
incb
push
ret
gs
inc
dec
mov
mov
lret
fdecstp
mov
add
add
sbb
and
add
mov
repz
sub
and
decb
fidivrl
cmp
inc
aad
aam
xor
aam
rcrb
out
xlat
ss
aas
sub
nop
jns
data16
test
test
and
test
jl
cli
into
xor
inc
jo
movsl
arpl
in
inc
es
dec
xchg
inc
dec
arpl
sbb
push
mov
cmp
mov
pop
movsb
and
jo
jle
mov
fbld
movsl
mov
xchg
ja
stos
es
dec
push
sbb
mov
daa
xor
outsb
pop
pop
inc
and
je
jne
xchg
out
mov
sahf
sbb
dec
daa
or
fiaddl
lret
flds
dec
xor
scas
xchg
cli
inc
jns
int
sbb
dec
mov
jo
leave
nop
lcall
arpl
dec
cltd
ret
pop
adc
cmp
mov
push
es
xchg
lea
mov
loopne
fdivrl
and
fisubl
mov
mov
add
shlb
inc
repnz
jns
push
mov
std
push
mov
daa
daa
lahf
test
loop
dec
out
and
inc
scas
out
cltd
mov
jl
loope
fwait
sbb
sbb
fistpll
push
in
int
pop
or
mov
insl
test
loop
aaa
and
sub
cli
fs
mov
shll
enter
imul
pop
pop
into
ss
xlat
or
cmp
xor
push
mov
mov
cmp
push
push
sub
xchg
inc
cmpsl
popl
xor
mov
push
scas
ficompl
dec
pusha
xchg
adc
andb
scas
dec
test
jo
dec
xor
les
rcll
cmp
aad
push
mov
xchg
data16
out
mov
rol
push
jg
clc
divb
push
mulb
jb
mov
adc
imul
aas
and
dec
sbb
icebp
mov
lret
lock
clc
cs
sub
mov
jg
std
sub
vprotb
cmp
aam
imul
and
out
test
push
mov
cs
movsb
out
ret
icebp
jb
jb
sbb
xchg
popf
rolb
fbstp
pop
es
adc
pop
dec
jl
adc
sub
loopne
leave
add
mov
push
pop
and
push
ja
in
cmp
pusha
adc
in
mov
repnz
gs
or
jl
sbb
mov
pop
cmpsb
xchg
hlt
xchg
fnstsw
leave
mov
out
cmpb
cli
lock
hlt
movb
mov
scas
in
add
mov
ds
imul
push
loopne
fmull
sub
es
xchg
xchg
inc
leave
bsr
adc
rorb
rcll
jo
test
scas
jo
rcrb
inc
movsb
cmp
loop
xchg
xlat
movsb
cmp
scas
jg
out
or
push
imul
dec
pop
sub
sbb
dec
sbb
jmp
test
cs
ja
mov
rorb
shll
fistl
pop
xor
and
sahf
ret
sub
addr16
push
xor
or
fcom
and
mov
dec
jge
cmc
cmpsb
push
pop
push
adc
lods
movsb
xchg
test
xchg
pop
mov
mov
fwait
xor
test
pop
lea
lea
mov
mov
mov
jne
sub
hlt
jnp
loop
out
pushl
push
outsb
cmpsl
lods
test
mov
dec
cmp
outsb
dec
jl
xchg
sub
sarl
imul
nop
mov
mov
int
pop
adc
cmc
jb
iret
pop
rcr
arpl
or
mov
push
cmc
xchg
bound
or
cmp
pop
adc
inc
rolb
test
add
rcll
xchg
iret
jmp
cli
xor
sub
dec
lds
int3
shrb
fwait
mov
icebp
shll
add
push
in
movsb
jbe
push
jecxz
into
cmp
in
pusha
call
push
adc
incb
inc
and
jmp
adc
popa
mov
pop
mov
scas
outsl
pop
push
pusha
ja
pop
sub
scas
and
pusha
mov
shll
mov
fimull
and
call
out
repnz
mov
out
push
push
and
mov
cs
push
aad
dec
or
jo
push
mov
lods
xor
mov
cs
xchg
dec
in
xchg
dec
inc
outsl
test
xchg
cmpsb
cmp
ret
push
and
pop
sub
std
lds
inc
sub
xor
xchg
xchg
imul
push
lret
cmpl
mov
fildll
jg
inc
mov
xor
pop
cmpsl
dec
push
mov
mov
data16
xorb
xchg
loope
into
cli
xchg
inc
pop
pop
sahf
xchg
js
fidivl
or
sar
pop
pop
xor
push
cltd
ret
je
xor
xor
push
test
and
je
lahf
xchg
mov
jmp
test
push
jecxz
std
adc
out
push
inc
or
fiaddl
cs
pop
ret
fsubrs
fs
cli
push
inc
idivb
mov
add
in
out
cld
pop
aas
test
sub
mov
mov
icebp
sub
ds
test
jg
loope
sti
sahf
and
scas
subl
std
shl
cmp
pop
xor
imull
nop
aas
dec
addr16
mov
ffreep
xchg
push
jg
sbb
ss
inc
jle
pop
insl
xchg
enter
push
add
test
pop
pop
push
dec
sbb
mov
mov
int
jecxz
jecxz
jmp
and
nop
push
mov
jbe
lods
jo
pop
out
or
adc
in
push
push
pop
lahf
outsl
pop
pop
sbb
jb
je
pop
das
stos
jmp
push
das
inc
stc
xchg
add
push
loop
fsubrs
xor
add
out
xchg
xor
fidivs
and
xchg
out
mov
adc
dec
unpckhps
scas
insb
pop
fcoms
leave
mov
pop
loop
push
ljmp
xchg
cmc
out
inc
pop
lea
pop
lahf
cmp
sub
mov
arpl
bound
test
into
lcall
mov
xchg
arpl
dec
jg
stos
xchg
xchg
jl
mov
push
or
mov
lahf
mov
mov
mov
fidivl
fs
call
push
in
stos
std
jl
push
inc
mov
insl
test
and
or
loope
popa
int
test
loop
cs
jle
xchg
insl
imul
lods
cli
das
pushf
out
dec
pop
icebp
jecxz
dec
cmovne
or
sbb
fsubs
or
test
add
vcmpsd
rcrl
push
leave
lods
lret
pusha
test
xchg
aad
pop
aas
dec
cmpsl
dec
ss
inc
jge
sub
stos
andb
pop
jle
adc
ja
cmp
add
test
jge
or
sbb
mov
cmp
push
mov
sbb
fs
sbb
fistl
ljmp
sarl
push
jecxz
hlt
jns
sahf
fcoms
cs
sarb
push
ret
out
jle
icebp
test
pop
dec
jns
or
ret
mov
xchg
sbb
imul
gs
cmc
nop
mov
lret
pop
jnp
sbb
shlb
mov
xor
jge
fnsave
test
xor
xor
dec
sbb
ja
mov
sbb
fcomip
push
leave
psubsw
shrb
inc
sub
pop
sub
sahf
xor
data16
int3
xchg
clc
or
cmp
inc
iret
xor
mov
into
inc
mov
mov
jnp
mov
mov
mov
in
cmc
xorl
in
inc
movsb
cmp
addb
pop
pop
fmulp
mov
bnd
cmp
bound
cmp
sar
stos
jg
sbb
aas
mov
push
push
push
mov
add
jb
shl
sbb
pop
sub
test
ret
add
sub
jg
xor
jecxz
push
cli
adc
lcall
push
push
mulb
lods
shrl
adc
ja
mov
sbb
or
shll
dec
mov
mov
push
mov
out
pop
mov
adc
sahf
lds
pop
mov
into
inc
jb
sbb
sbbl
scas
pop
insb
jnp
in
sub
dec
addl
lret
sbb
and
adc
cmp
jb
push
loopne
sub
inc
add
sti
mov
add
test
mov
mov
mov
push
mov
aam
push
int
jns
jmp
jp
popa
out
jp
sub
or
int3
jecxz
scas
dec
mov
and
enter
in
jno
cmp
jno
scas
push
mov
mov
cmp
lcall
out
mov
jo
out
inc
dec
fildl
add
shll
outsl
cs
sbb
xor
ss
pop
push
popa
or
jmp
ds
lods
adc
mov
out
cmc
sti
and
or
inc
mov
mov
fs
test
jle
lods
jmp
das
mov
mov
xchg
stos
lea
fstps
fistps
and
jp
popa
push
push
imul
gs
pop
das
sub
xorb
pop
sbb
pop
out
pop
pop
iret
adc
or
xor
sar
pusha
fs
push
inc
mov
xchg
push
pop
sahf
jmp
sahf
daa
push
and
mov
sbb
gs
jp
xchg
test
imull
popf
push
fs
mov
mov
cmp
inc
and
cs
inc
ffreep
enter
out
orl
inc
test
mov
int
scas
or
cmp
sbb
ret
xchg
mov
js
outsl
xor
inc
xor
pushf
mov
out
jne
repz
int
out
daa
push
test
and
mov
pop
test
sti
imul
repnz
aaa
mov
push
push
ljmp
jg
js
pop
jmp
pop
je
mov
mov
es
out
js,pn
in
daa
rolb
adc
or
icebp
and
leave
sahf
dec
or
add
leave
pop
jl
push
pop
jg
mov
insl
pop
bound
dec
test
pop
daa
es
jnp
lds
and
jnp
mov
sub
stos
mov
or
pop
fmulp
push
ficompl
dec
out
out
sbb
mov
push
test
test
mov
pushl
insb
or
add
mov
fimuls
add
sahf
scas
inc
cs
in
jg
mov
inc
or
ds
xor
mov
or
fcmovu
sub
push
adc
cltd
cltd
and
rorl
push
test
out
xchg
jmp
push
push
xchg
ffreep
test
xchg
cltd
mov
outsb
test
lds
ljmp
mov
dec
sarl
push
lcall
repnz
fsub
push
rcrb
jmp
call
cwtl
inc
or
mov
mov
cs
xor
repnz
push
rcrl
out
int
out
fdivr
mov
mov
sub
int3
pusha
pop
movsb
sub
mov
ret
das
popf
sub
lcall
test
sbb
scas
js
xorl
das
or
jb
and
loopne
sbb
dec
mov
and
add
ret
mov
dec
out
mov
call
bound
int3
and
xchg
sbb
rol
je
ja
xchg
enter
xor
lahf
insb
fs
aaa
pop
and
mov
arpl
int
push
jo
dec
fbstp
sub
add
xor
fwait
jbe
je
lock
in
dec
test
push
fwait
xor
ret
xchg
push
push
inc
cmp
data16
mov
pop
inc
mov
lar
mov
and
adc
clc
inc
xor
faddl
mov
cs
fadd
dec
stos
ret
loope
inc
cmc
mov
dec
sti
imul
shlb
jmp
hlt
mov
adc
clc
dec
fisubl
repnz
or
repnz
ss
inc
arpl
stos
test
ss
mov
fcmovbe
rolb
dec
jl
xchg
mov
scas
dec
test
cs
les
test
mov
adc
dec
mov
sub
das
aam
shl
icebp
fadds
aad
jb
fnstenv
cmpsl
adc
daa
inc
mov
les
mov
aam
xchg
rorl
fwait
out
ja
addr16
push
out
out
fstpt
xchg
or
movsb
cmp
das
inc
pop
test
pop
shll
inc
cmc
and
push
ss
lods
mov
pop
stos
sub
add
inc
push
cwtl
out
xchg
cmp
rclb
insb
stc
stc
adc
mov
fld
iret
cwtl
lods
mov
cmpsb
jl
fmuls
andb
movsb
mov
dec
adc
insb
pusha
sarb
dec
xchg
lcall
rcll
sbb
out
lods
dec
sbb
ret
sub
sbb
push
movsl
pop
pushf
out
in
out
xchg
jmp
ficoml
aad
out
std
call
test
mov
mov
pop
aam
push
mov
and
rcrl
jo
cmc
mov
bound
stc
xchg
xchg
out
mov
hlt
inc
dec
inc
rol
lret
xor
add
subl
cmp
ret
jnp
ret
loop
mov
test
inc
ss
sbb
lret
sbb
out
dec
int3
jp
xor
xor
xor
mov
les
cmp
push
inc
imul
jo
adc
mov
loop
arpl
dec
push
test
mov
shll
sahf
mov
ficoml
repz
adc
mov
ja
push
movsl
sub
pop
sarb
in
mov
shlb
je
mov
xor
xor
out
jge
in
lcall
mov
repz
inc
jl
and
icebp
dec
and
popf
scas
push
aad
movsb
inc
mov
ss
xchg
cmp
sub
xor
xor
sub
idiv
rorl
jnp
movsb
repnz
and
sbb
out
scas
dec
inc
rcrb
out
cmp
inc
inc
xchg
out
sbb
dec
ljmp
divb
push
loope,pn
shlb
jb
add
gs
xchg
cmp
leave
cli
cltd
xor
sahf
sti
sub
lods
fwait
inc
jl
push
mov
inc
call
or
mov
shr
jp
dec
imul
xchg
jmp
lahf
mov
bound
xor
lret
stos
or
sbb
scas
push
jle
adc
pop
sub
pop
lcall
stc
shll
xor
sub
fs
sarl
and
icebp
jns
das
inc
cmp
dec
arpl
xor
test
arpl
jb
cwtl
push
push
push
mov
mov
mov
ds
xchg
les
sti
jle
dec
or
mov
sbb
scas
out
aam
mov
dec
cltd
jg
xchg
nop
jne
hlt
or
jl
stos
shrb
or
cmpb
mov
out
adc
mov
jge
pop
lahf
mov
test
and
xchg
es
sbb
daa
mov
adc
or
rol
shrl
xchg
push
jl
push
add
xor
int
ret
test
pop
addr16
sub
and
imul
pop
imul
inc
xor
mov
gs
int
cmp
ret
arpl
mov
test
je
cmp
in
cmp
mov
jb
popf
jbe
out
dec
int3
call
push
addb
divb
jnp
stos
test
sbb
js
push
dec
fidivl
stos
inc
daa
dec
ljmp
xor
dec
out
sbb
out
mov
repnz
ret
int3
lods
cmp
out
dec
pop
adc
dec
arpl
cmpsb
sbb
pop
jmp
sub
sbbl
cs
nop
pop
imul
daa
rcrb
mov
daa
dec
popf
add
mov
sahf
test
push
cli
icebp
jmp
stc
xor
push
pop
mov
xor
dec
inc
push
jnp
gs
outsl
ret
mov
push
dec
xor
mov
cli
sbb
pop
jns
adc
pop
dec
daa
xchg
xor
fwait
jb
push
cmp
shr
mov
xor
inc
mov
test
or
sub
imul
inc
jo
xorb
sub
lahf
std
rcrb
cli
ficoms
addl
lds
loop
in
lds
test
mov
sbb
push
sbb
rcll
lret
mov
sub
cs
pop
lds
mov
mov
xchg
pop
popa
inc
adc
pusha
mov
sarl
lock
push
bound
shlb
jg
sub
test
jl
or
test
xchg
clc
xchg
sbb
xchg
cmc
mov
insl
mulps
inc
jns
and
jl
dec
outsb
cmp
js
mov
in
andb
shrb
hlt
fdivrl
and
sub
cmc
sbb
jmp
xchg
dec
lahf
and
ret
and
xchg
test
sbb
mov
ret
imul
sbb
testb
loope
adc
fstl
stos
sub
xchg
into
add
jbe
cmpsb
cld
jb
pusha
sbbb
ret
cmp
cmc
std
fwait
xchg
sub
lret
dec
mov
js
mov
xchg
lds
jmp
ds
int3
adc
sub
jnp
sbb
fsubl
xchg
xor
into
and
mov
xor
inc
pop
sub
and
lock
lahf
mov
lods
or
push
add
ret
jno
fcompl
mov
inc
cmpl
and
insb
popf
shrb
mov
fstps
add
mov
sbb
test
xrelease
adc
out
test
xor
push
pop
xor
in
adc
out
mov
fmuls
xor
jno
loopne
lea
xor
sbb
dec
mulb
in
dec
movsb
arpl
ret
fisubrl
dec
into
sub
xchg
add
jo
cmc
mov
fnstenv
dec
movsb
lret
cltd
loop
ss
aas
inc
loopne
mov
test
jmp
and
inc
pop
insl
push
aad
inc
inc
mov
call
adc
in
cmpsb
cmc
mov
xor
aam
adc
pop
mov
dec
sete
fisubrs
inc
dec
sbb
dec
dec
jnp
shl
fs
stos
repz
pop
sub
xchg
push
add
cltd
jb
rcll
int3
jmp
fsts
mov
mov
loope
add
test
icebp
add
repnz
fwait
sbb
test
mov
notb
push
sbb
ret
inc
hlt
sbb
mov
in
in
out
dec
mov
add
decb
inc
cmc
sbb
cmp
insb
into
inc
lahf
or
xor
es
data16
jo
xor
jge
imul
push
scas
dec
xor
mov
inc
lahf
out
or
cmp
xchg
pushw
sbb
jne
inc
cld
faddl
ret
push
xchg
inc
repnz
pushw
scas
push
add
test
sbb
test
pushf
aad
lods
cltd
sbb
addb
pop
test
jecxz
out
stos
mov
inc
jle
mov
cpuid
iret
pop
push
mul
and
imul
sub
in
je
ret
pop
sbb
mov
jne
mov
jno
in
bound
mov
rolb
lods
in
add
test
in
inc
xor
xchg
movsb
pop
psraw
inc
int
push
jl
push
std
jno
js
xor
incl
test
les
and
pop
popa
mov
jns
cmpsb
sar
mov
pop
mov
xor
xchg
jmp
es
mov
cmp
sub
mov
cmpl
popf
shlb
push
xchg
dec
push
lcall
lcall
inc
jg
sub
mov
xor
or
push
or
in
test
inc
scas
mov
inc
pop
sarb
test
mov
jge
nop
shr
pop
xchg
test
push
mov
incb
dec
clc
popa
rorb
out
mov
mov
inc
adc
popf
das
mov
xchg
pop
push
mov
push
test
xor
dec
loope
fwait
loop
mov
pusha
adc
push
outsl
call
je
pop
mov
or
mov
xor
mov
in
xor
jb
xchg
pop
shll
lret
imul
cmp
js
out
or
mov
dec
pop
jbe
in
xor
mov
dec
into
test
mov
movsb
push
add
jo
loop
inc
jns
adc
sub
jle
mov
sub
out
jb
jge
pushf
lods
pushf
jne
les
icebp
mov
sub
lcall
fs
nop
cld
mov
pop
inc
lret
push
lcall
stos
in
pop
lds
cmp
int
movsl
xor
sbb
out
xchg
int
sahf
jns
lret
sarb
ret
mov
fiadds
loop
fs
repz
inc
dec
mov
out
stos
sahf
cmc
push
shrb
filds
push
inc
mov
lret
pusha
test
jmp
inc
sarb
or
pop
test
sbb
push
insb
mov
repnz
pop
gs
das
dec
dec
inc
sub
mov
das
out
repnz
mov
adc
hlt
mov
mov
lods
xor
repz
xchg
mov
mov
jo
mov
push
stc
push
repz
add
sub
and
mov
lahf
sub
loop
xchg
xchg
je
dec
gs
adc
xor
dec
xor
call
fwait
out
lds
movsb
sbb
fildll
int
rol
mov
vmovsd
scas
test
rorb
and
sbb
mov
jecxz
out
mov
insl
scas
dec
bound
stos
fwait
adc
or
xor
sbb
inc
loop
divb
daa
jg
in
jbe
mov
inc
ds
imulb
xchg
fildll
dec
inc
out
push
scas
fnsave
jnp
cmp
cmp
sbb
push
lea
cld
or
xlat
pop
dec
xor
mov
jo
sbb
das
pushf
jecxz
jge
imul
or
cld
stos
repnz
insb
add
push
pushf
adc
sbb
sub
shlb
pusha
mov
or
imul
push
dec
popa
jge
jmp
adc
or
sub
and
mov
xchg
mov
nop
inc
arpl
mov
and
insb
scas
mov
fsubrs
repz
sub
into
addl
fnstenv
push
xchg
cmc
mov
repz
dec
mov
xchg
loopne
add
jg
jbe
push
lods
ret
mov
repnz
bound
scas
fdivr
orb
popa
pushf
jl
sub
into
inc
leave
jnp
xor
lods
adc
ret
push
in
xor
pop
inc
adc
mov
mov
incb
lea
jecxz
out
add
mov
bnd
mov
pop
arpl
inc
into
jg
fidivrs
ret
call
das
xor
push
call
js
ja
sbb
and
jg
test
and
or
lods
mov
ss
fidivl
adc
xchg
dec
inc
fildll
addl
repnz
or
cmp
inc
jb
mov
cmc
mov
jmp
pop
daa
outsl
inc
xor
adc
and
jge
xor
loope
cmp
and
add
dec
and
ret
bnd
adcb
jl
dec
jnp
rol
mov
test
and
scas
out
cltd
loop
lds
mov
cli
xchg
jl
lcall
test
pusha
shrb
rcl
mov
mov
cltd
out
pop
mov
xor
inc
inc
es
repz
push
xchg
loop
aam
fldenv
push
pop
and
arpl
lods
std
cmpl
jmp
inc
sbb
dec
dec
sub
push
test
in
in
sbb
ja
test
adc
out
push
sbb
lcall
mov
adcl
loop
cs
push
mov
dec
aad
jbe
lahf
cmpsl
add
popa
aas
dec
mov
pushf
mov
fiadds
mov
mov
insb
scas
and
cmp
pop
sbb
jo
xor
lret
pop
insl
leave
inc
movsl
xchg
push
jmp
mov
add
add
and
pushw
js
mov
dec
repz
andb
lds
jmp
push
fstpt
out
lds
ret
hlt
push
mov
outsb
xchg
mov
outsl
lret
ret
sahf
fidivrl
stc
pusha
nopl
and
add
outsb
in
gs
dec
aad
mov
js
sub
cmc
cli
dec
fistps
inc
mov
mov
inc
sub
aam
mov
lahf
mov
daa
fs
adc
mov
gs
addb
fwait
inc
out
sbb
shll
inc
mov
orb
orb
jp
imul
dec
in
xor
add
pop
jmp
push
shr
jp
mulb
sbbl
ds
les
es
fwait
and
jbe
mov
fmull
sub
hlt
dec
push
dec
pushf
mov
push
movsl
dec
test
sbb
out
pmaxsw
xor
mov
sbb
xor
mov
jo
imul
dec
push
ret
stc
mov
in
cltd
mov
filds
lcall
mov
adc
movsb
addb
subb
lcall
push
hlt
cmp
pusha
push
lods
shll
and
lahf
mov
loopne
jmp
mov
xor
inc
in
mov
sub
and
mov
leave
mov
dec
sarb
or
jo
jne
push
test
inc
jmp
push
push
or
ljmp
orb
data16
push
jp
and
fcoms
inc
push
jnp
sbb
cmp
jmp
xor
inc
xor
test
test
dec
decb
cmc
sbb
test
out
imul
test
push
je
shl
fcomp
repz
addr16
int
jg
movnti
xchg
es
fsubl
inc
dec
pop
fs
jp
pop
fstps
lret
and
movsb
ret
sub
xor
sbb
jae
jne
pop
push
lds
inc
ss
imul
push
mov
pop
jle
xor
loopne
xor
imul
sti
or
mov
aad
mov
cmpsl
pop
mov
mov
les
or
das
jnp
repnz
dec
mov
lds
cwtl
sbb
mov
cli
scas
jns
fisttpl
jl
and
cwtl
scas
cmpsb
lea
mov
mov
xchg
andl
lret
movsl
fsubl
ret
test
push
sahf
jecxz
jg
ffreep
jnp
push
push
mov
add
in
cmp
push
fwait
sbb
ss
pop
adc
rclb
mov
xchg
push
hlt
out
xor
or
das
jg
jno
cs
and
inc
mov
imul
dec
in
mov
push
popf
or
stos
sarb
dec
shlb
jmp
fnstsw
std
pop
fdivl
jb
mov
test
outsl
cmc
ret
lds
pop
mov
jmp
rcr
test
les
and
ljmp
rcrb
pop
jns
pop
lahf
mov
xlat
incl
jmp
ss
mov
ret
fiaddl
ds
jecxz
sahf
mov
shl
cmc
int
jns
test
sub
mov
jg
loope
mov
mov
push
xor
dec
mov
push
sub
jecxz
jo
add
popa
push
sbb
mov
fs
push
out
aaa
in
and
dec
or
sub
push
push
inc
jae
sahf
test
nop
sbb
mov
inc
dec
sub
lods
iret
cmp
test
inc
das
out
lahf
inc
dec
xor
xor
in
fmull
jle
or
adc
cltd
out
xor
mov
mov
jl
fdivl
sub
ret
mov
mov
jbe
adc
cmp
addb
fstpt
xorb
push
test
dec
sub
aad
stos
dec
ret
dec
loopne
pushf
dec
mov
cwtl
movsb
out
cmp
adc
int3
sub
repnz
js
adc
clc
xchg
push
push
jbe
test
lcall
cld
cmp
int
mov
ds
add
mov
lahf
sbb
iret
cmp
mov
repz
or
jnp
xor
sbb
sbb
pop
fcompl
rcrb
cmpsl
fs
leave
cmp
or
bound
push
xor
add
xor
adc
xor
mov
lcall
shrb
pop
imul
jp
inc
ret
and
fisttps
iret
lret
sbb
lods
lds
mov
adc
cmpsl
mov
push
je
iret
jnp
cs
shl
shlb
jg
out
sar
inc
mov
lock
rcl
or
movsl
mov
fimuls
in
pop
fists
jle
fs
lahf
inc
push
adc
sub
sbb
and
add
pop
xor
inc
inc
push
push
mov
mov
cltd
out
loope
incl
mov
test
cmc
xor
insb
rcrl
pop
popa
jg
movsb
jge
divb
cmp
fmul
cmp
mov
add
cmp
push
ss
cs
lds
test
call
out
mov
mov
push
insb
sub
inc
pusha
xchg
xchg
jge
mov
add
rcrl
loop,pn
push
inc
dec
or
rorl
mov
or
jecxz
mov
push
int3
jp
sbb
mov
pop
rorb
test
xor
mov
push
shlb
push
push
inc
stos
sahf
pop
loop
and
pop
dec
lock
push
push
sbb
and
push
mov
jmp
push
pop
hlt
jmp
jge
rcl
cs
jmp
ss
cmp
xchg
pop
inc
dec
mov
mov
fcmovb
mov
xchg
sarb
push
scas
popa
jmp
and
sub
xchg
jecxz
fisttps
ret
mov
xchg
int
and
and
ret
xchg
ja
std
xor
call
inc
dec
adc
pop
add
jmp
cli
add
daa
pop
cli
fwait
and
in
mov
sbb
cs
mov
shll
data16
and
rcrl
je
scas
les
mov
xchg
mov
bound
push
or
ficoms
cmpsl
jnp
and
cmp
mov
fsubp
lock
sbb
in
shl
pop
dec
dec
mov
pop
cvttps2pi
sbb
adc
mov
pop
add
dec
pop
add
xchg
pop
jg
sub
insb
inc
sbb
and
xchg
mov
and
push
inc
push
inc
out
fisubrs
or
push
jb
leave
dec
ret
mov
push
mov
mov
jle
cli
xchg
int3
das
out
out
or
loopne
dec
out
icebp
pusha
adc
and
loope
lods
outsb
testl
inc
aam
mov
push
and
lea
movsl
aaa
fs
test
inc
sbb
scas
aam
add
pop
push
ss
test
dec
xor
mov
cmc
fabs
std
push
das
jmp
or
mov
pop
into
mov
mov
divb
cpuid
mov
pop
push
test
add
loopne
ljmp
cmp
cli
leave
add
dec
iret
rcrl
sub
les
fldln2
mov
aas
out
sbb
dec
test
incb
ja
push
loope
into
and
dec
or
icebp
sbb
pop
or
and
lods
pusha
rclb
sbb
das
imul
pop
push
loopne
imul
mov
and
test
pushf
cwtl
inc
movsb
es
jbe
movsb
loope
popf
outsl
sbbl
xchg
pop
outsb
xchg
mov
repnz
iret
dec
jle
aas
cmp
xchg
jmp
bound
sub
sbb
imul
das
xchg
xor
mov
scas
dec
ja
sub
cmp
ljmp
scas
inc
loop
stos
xchg
mov
inc
bound
lret
repnz
pop
jecxz
inc
lahf
sbb
push
or
mov
fiadds
ss
xchg
aad
jecxz
sub
es
test
arpl
mov
lock
xor
leave
out
int3
lock
fldenv
push
mov
js
rcl
test
mov
mov
xchg
cmpsl
push
mov
fwait
mov
nop
mov
in
rorl
mov
test
pop
leave
pop
mov
repz
movd
pusha
push
icebp
int
fisubrs
cmp
xor
xor
lahf
xor
mov
mov
test
jb
xor
mov
pop
push
pop
cmc
and
sub
psllq
dec
jge
cltd
mov
repnz
xchg
push
or
test
push
es
dec
dec
jbe
nop
dec
mov
mov
jo
inc
mov
lds
jg
push
inc
jnp
and
cmpsl
aas
jg
and
cmp
scas
test
popa
shlb
and
test
push
mov
out
bound
sub
out
sub
andb
sub
mov
std
mov
or
mov
mov
xlat
push
mov
stc
add
dec
push
rol
push
stos
xchg
mov
lea
or
icebp
loopne
sub
and
subb
mov
push
vcvttss2si
push
adc
popa
push
pushf
and
dec
shr
in
jecxz
mov
jbe
sbb
jno
repz
dec
dec
and
dec
sbb
xor
data16
cmp
sbb
add
pop
cwtl
ret
cmp
mov
int3
adc
pop
popa
fstpt
xor
fstp
fsts
and
xchg
repz
xchg
mov
leave
xchg
and
xor
adc
das
sti
mov
call
inc
xchg
adc
fwait
scas
push
nop
scas
enter
nop
push
xchg
sbb
loope
ret
movq
jo
int
sarb
out
cmp
adc
push
ss
mov
mov
cmp
test
push
stos
lea
arpl
pop
icebp
das
and
inc
mov
push
xor
dec
sub
pop
inc
gs
push
jge
xor
cwtl
sub
inc
mov
and
push
ja
iret
faddl
imul
out
jp
adc
push
test
test
cmc
stc
pop
push
adc
hlt
sub
xor
addl
dec
add
inc
xor
inc
mov
jmp
mov
mov
add
fwait
repnz
movsl
cmp
into
mov
fisttpll
xchg
jb
test
xchg
dec
push
and
rcl
int
add
mov
dec
mov
sub
test
bts
inc
scas
jne
leave
mov
mov
dec
mov
les
stc
imulb
mov
sub
add
lds
out
leave
and
leave
or
popf
pop
mov
daa
iret
sub
xor
ds
outsb
pop
lahf
pop
inc
negl
xchg
in
mov
bound
add
push
mov
cmp
daa
std
sarl
enter
xchg
jo
les
xlat
add
mov
push
adc
dec
leave
arpl
jle
pop
dec
std
sub
cmp
repz
push
and
xor
xor
cmp
aam
es
pop
orb
popa
outsl
aam
xchg
cmp
add
jle
sarb
shlb
rcl
add
inc
sahf
insb
insb
ret
xor
jl
out
decb
pop
xchg
test
add
aad
xor
leave
clc
aad
test
mov
jo
test
xor
ss
repnz
fs
notl
mov
leave
fdivrl
cmp
sub
push
data16
or
mov
jge
daa
icebp
mov
fidivl
test
xchg
scas
inc
cmpsl
sub
das
push
dec
into
sbb
xchg
movsb
mov
cmp
sbb
dec
rcr
mov
mov
push
or
aas
jg
sahf
rcr
pop
test
cs
push
pop
out
and
cmpsb
in
test
and
jns
popa
icebp
sub
mov
js
in
andb
sbb
repnz
xor
insb
push
mov
loop
cwtl
xchg
test
or
xchg
jns
jge
icebp
sbb
cmp
pop
ds
movsl
xor
fcoml
gs
sub
dec
and
out
xchg
xor
loop
xor
push
jno
jge
rcr
scas
dec
pop
inc
testl
mov
enter
mov
or
mov
and
aam
cmp
lcall
mov
mov
fstpt
mov
test
pop
fsubl
leave
jg
nop
inc
add
jae
test
js
cmc
mov
ss
sub
mov
rcl
pop
test
stos
cmp
push
pop
pop
mov
mov
out
out
mov
lcall
jg
std
mov
pop
jmp
enter
mov
test
fdivrl
pop
xor
cld
cmpsl
clc
fldl
hlt
fidivs
xor
call
into
jp
in
jno
dec
ret
mov
pop
sub
std
or
or
pusha
xchg
push
xor
out
adc
fwait
add
sbb
xchg
xchg
mov
int3
sbb
int3
sub
add
and
fwait
push
rcrl
fdivrl
jg
int
out
push
mov
lcall
fmuls
mov
js
lahf
mov
stc
xchg
cs
outsl
shr
sub
dec
push
data16
cmp
sbb
push
inc
aad
shlb
mov
push
xchg
popa
in
mov
ret
paddd
jge
loopne
mov
stos
mov
out
sbb
scas
mov
insb
push
stos
adc
cmpsl
jl
or
xor
movsl
mov
sub
xor
cli
out
aas
inc
ret
jg
scas
adc
jns
out
push
jnp
loope
jno
incb
inc
ret
lea
arpl
mov
mov
loope
mov
jg
repz
cli
or
mov
cmpsb
add
jno
pop
nop
mov
push
insb
int
es
push
jno
imul
jnp
adc
rcrb
pop
jle
push
popl
jl
je
mov
aas
repz
mov
mov
mov
ret
jns
jne
repnz
jg
dec
rclb
mov
bound
cmp
ss
test
xor
cwtl
sbb
test
jge
xor
ss
or
lock
xchg
push
push
dec
cmp
gs
jb
xchg
and
ja
xchg
fsts
movsl
in
insb
jb
xchg
push
mov
inc
mov
xchg
add
jmp
jbe
cmp
test
or
sub
xchg
data16
dec
test
mov
addl
popa
call
lds
add
pop
jle
mov
in
repnz
push
xor
dec
inc
lds
push
es
repz
mov
loope
pop
push
sub
dec
mov
shlb
loop
sbb
jg
cmp
test
je
jno
inc
xchg
addr16
stos
arpl
xor
cli
test
faddl
jns
jno
cmp
mov
mov
cwtl
scas
lret
lods
jb
dec
dec
ss
movsb
aas
rorl
test
add
sbb
dec
inc
mov
ret
das
sahf
mov
or
lods
jmp
push
pop
rcr
push
mov
dec
pop
out
mov
aaa
add
ja
jl
inc
scas
out
js
add
mov
inc
ss
pop
jns
je
xchg
dec
sbb
sysret
jae
mov
mov
cmp
out
test
scas
adc
fadds
add
test
out
sbb
push
out
adc
inc
orb
mov
in
pop
sahf
incl
push
pop
aaa
jge
jmp
cli
add
fidivl
test
cli
lods
test
inc
add
sbbb
push
sahf
orb
xor
inc
sbb
fldcw
and
pop
aas
mov
aas
push
mov
clc
inc
jne
outsb
fldl
fs
push
cmp
fs
scas
lods
xchg
jo
jecxz
pop
jmp
add
fs
cmc
push
enter
minps
sbb
rorb
xchg
in
in
test
test
es
out
adc
ret
pop
pushf
das
xchg
iret
mov
xor
xor
dec
pop
repz
scas
and
jge
das
ds
mov
jbe
sub
xor
test
sbb
ret
sub
jge
xor
jb
cwtl
xchg
les
jb
inc
mov
xchg
push
mov
test
push
fxtract
jp
mov
ret
aad
and
or
mov
rol
cld
insl
mov
xor
and
les
push
movsb
mov
inc
fcmovnbe
add
lcall
dec
inc
insl
mov
lea
lahf
lock
mov
ret
cwtl
dec
incb
js
fidivs
lock
lods
and
clc
lahf
xchg
xor
fwait
jg
push
dec
fistpll
sbb
sbb
pop
insl
xor
stos
mov
sbb
pop
inc
mov
sub
lret
push
xor
jo
data16
push
cmpsb
dec
dec
clc
mov
fld
lock
lods
xchg
mov
orb
inc
idivl
sbb
repnz
dec
jg
sbb
cmp
out
push
xchg
int
je
mov
pop
jmp
daa
push
mov
jle
daa
dec
stos
push
aas
sub
xchg
add
out
scas
aad
jecxz
sbb
dec
sub
bound
push
and
fisttpl
mov
add
jecxz
stos
or
sti
jb
adc
or
jmp
lcall
sub
mov
js
sbb
popa
test
aas
fs
lock
adc
push
mov
push
push
mov
inc
cld
push
mov
daa
jmp
insl
pop
dec
aad
and
ss
cld
mov
pop
repz
scas
add
sbbl
add
dec
jmp
daa
xchg
daa
sub
push
dec
sub
xchg
daa
jg
sub
xchg
scas
fsubrs
hlt
cmp
mov
mov
icebp
sub
lret
hlt
pusha
comiss
pushf
jnp
or
xchg
sub
sub
cs
xchg
sahf
in
int3
pop
out
cld
int3
push
jge
cmp
leave
out
jbe
pop
pop
xor
mov
sbb
fsub
lahf
xorb
jo
jecxz
shrl
fcompl
xor
xor
jle
jmp
std
pop
call
call
adc
adc
sub
mov
pusha
adc
jbe
pop
imul
add
pop
mov
fcompl
loopne
stc
adc
ja
push
out
adc
pop
mov
sti
sti
cs
fbld
pause
inc
dec
pop
or
mov
jmp
dec
gs
inc
movsb
xor
xchg
add
xor
mov
in
xchg
cld
movsl
ss
mov
xchg
lret
lret
aaa
or
inc
xchg
or
insb
pop
dec
inc
les
jnp
rolb
dec
out
shrl
push
cmp
in
mov
xor
sub
jns
icebp
pusha
push
cmp
mov
xchg
hlt
mov
fstps
dec
dec
repz
enter
and
pop
in
jp
adc
cmp
scas
or
neg
jo
mov
bound
cld
jnp
icebp
jno
xchg
das
int3
mov
add
jne
xchg
popf
dec
pop
pusha
ja
dec
xchg
mov
mov
mov
mov
icebp
jb
inc
loope
cmp
or
fnsave
je
push
dec
pop
les
adc
scas
and
fwait
lcall
lods
jg
xor
ss
adc
pop
pop
xchg
outsb
dec
aas
fiaddl
mov
repz
es
mov
cltd
aad
pusha
cmc
jne
scas
push
cld
push
fsubl
das
rcrl
sub
jg,pn
popf
in
leave
mov
les
nop
sbb
mov
pminsw
and
xor
or
add
xchg
mov
mov
shlb
mov
shlb
into
inc
sbb
xor
mov
pushf
mov
js
dec
ss
int3
sarb
aas
addr16
mov
mov
jns
scas
test
mov
fwait
mov
scas
into
xor
cmp
aad
stc
mov
add
push
aam
dec
adcl
lret
lods
adc
pop
push
cmp
inc
cmpsl
sub
outsb
push
xchg
mov
pop
inc
or
mov
fsts
cmp
add
cmpb
add
xorb
testl
test
out
fwait
lahf
lock
dec
cmp
jnp
incb
test
call
fsubr
fnsave
std
pop
push
xorb
pavgw
sbb
fistpll
outsb
loope
xor
push
mov
sahf
inc
mov
push
push
loop
push
lahf
push
icebp
jg
jl
mov
daa
xor
lods
sub
in
dec
fistpll
imul
ret
movsl
test
aaa
jle
pop
xchg
dec
push
or
dec
ja
inc
icebp
xchg
pop
addr16
xor
dec
repz
pop
test
aas
fcomps
pop
ss
out
popa
mov
cwtl
scas
lret
sahf
dec
adc
aas
stos
mov
push
sub
sub
in
call
adc
dec
inc
leave
and
testb
xor
pushf
aad
repnz
sbb
push
mov
inc
cltd
xchg
sub
dec
cmp
movb
and
mov
rorb
aas
into
dec
mov
ror
inc
or
jg
pop
push
cmp
dec
jo
add
leave
fisubrs
push
pop
add
pop
sbb
xor
sub
andb
xchg
fdiv
into
inc
out
aad
lcall
fidivs
addr16
roll
sub
and
mov
push
ud1
into
rolb
ds
bound
lahf
ret
and
xchg
jecxz
add
push
lods
les
leave
add
inc
test
pop
sbb
cs
jo
cmp
lock
jmp
pop
mov
lds
dec
pop
fsubs
mov
bnd
into
pop
xchg
dec
xlat
push
repnz
test
pop
cmp
xchg
loope
fsubs
roll
jb
scas
add
test
sbb
and
pushf
repnz
fsubl
test
hlt
cmp
mov
gs
ret
jg
mov
popl
lret
push
mov
roll
rclb
andb
mov
xchg
insl
ja
mov
sbbl
push
sbb
inc
mull
cmp
outsb
jecxz
jg
repnz
xlat
dec
sbb
mov
arpl
dec
lds
pop
rorb
xchg
pop
out
cmp
dec
dec
pop
pop
push
jmp
int
out
dec
mov
adc
push
mul
mov
cmp
jo
arpl
jns
shrb
adc
js
addl
cmp
mov
pop
mov
and
aad
ret
sbb
sarb
repnz
sti
and
out
or
jg
add
out
sahf
das
out
cmp
je
sahf
push
popa
pop
pop
push
inc
andb
sahf
test
push
gs
aad
outsl
test
mov
cmp
cwtl
fsubrs
enter
and
sub
adc
dec
inc
shlb
jno
push
je
sahf
pop
sbb
xchg
ljmp
jmp
pop
mov
int3
repz
mov
add
loope
sbb
pusha
xor
scas
shlb
icebp
mov
in
loope
je
jg
pop
mov
dec
mov
mov
mov
fnsave
sub
jle
out
icebp
and
test
mov
jge
pxor
pusha
jbe
mov
cli
test
cmp
mov
mov
jno
dec
adcb
mov
jns
scas
and
leave
dec
jns
aad
shrl
out
jnp
xor
out
adc
scas
push
call
sbb
mov
inc
push
shl
mov
dec
bound
fwait
andl
daa
dec
shlb
push
flds
fimuls
rorb
dec
mov
mov
mov
xchg
xchg
push
nop
adc
xorl
adc
jmp
dec
and
divb
call
arpl
xchg
cwtl
int3
pop
mov
cmp
cmp
sti
dec
jge
in
push
xchg
dec
ja
test
repnz
lret
push
dec
mov
jmp
cld
les
addr16
lahf
in
jg
pop
out
rolb
je
fistpl
test
repnz
inc
dec
xor
add
popa
daa
dec
int
inc
xor
sahf
fstpl
push
mov
mov
inc
mov
pushf
mov
and
push
lcall
out
jl
add
jle
xchg
add
popa
cmp
jg
and
jb
int
xchg
test
and
push
jecxz
out
rcrl
adc
sub
or
das
push
mov
add
lahf
jmp
pop
mov
xchg
mov
filds
inc
daa
and
push
sbb
loope
add
dec
mov
shlb
push
lcall
int
add
jg
std
out
pop
cmpb
mov
mov
jle
jb
jno
ss
dec
fildl
jg
inc
imul
jle
test
jbe
mov
add
jnp
or
std
in
test
push
test
mov
std
xor
mov
jg
add
pop
clc
inc
dec
jle
push
iret
jg
mov
out
shlb
das
cs
jg
fcompl
inc
mov
out
jp
push
outsb
mov
sbb
mov
xor
xor
and
test
popf
mov
pop
mov
nop
mov
cwtl
data16
and
xorb
test
shll
push
dec
cmc
xchg
mov
lock
mov
cld
lcall
inc
es
repz
xor
xchg
cs
or
loop
jbe
dec
aas
and
adc
gs
pop
and
mov
daa
es
or
lods
push
test
dec
or
pop
dec
cltd
mov
xor
fs
imul
sbb
pop
fsubrs
push
scas
jmp
adc
jle
mov
pop
ss
lods
mov
xchg
scas
sub
jg
loop
mov
xor
sbb
dec
gs
push
lret
ret
aad
adc
pop
movb
add
pop
xor
xchg
add
ret
mov
stos
add
lahf
inc
xor
std
push
pop
jnp
sub
cld
mov
jp
mov
sbb
imul
les
loope
xchg
sahf
cli
daa
mov
add
test
inc
ss
adc
loope
cltd
jmp
icebp
mov
ds
adc
or
push
outsl
xor
les
push
test
and
in
jl
daa
adc
cld
xchg
mov
repnz
mov
fidivrs
sbb
scas
das
loop
mov
push
imul
cmc
and
cmp
bound
ljmp
mov
mov
xchg
movsl
popa
test
pop
mov
test
sbb
lds
clc
std
decl
add
and
test
movsl
mov
lahf
clc
rcr
pop
iret
push
sarl
lahf
pushf
adc
cmp
lds
es
adc
sub
mov
loop
mov
cwtl
popa
ds
pop
sbbl
sahf
test
jns
xchg
lcall
je
addl
pop
addb
xchg
scas
cmp
sub
loop
jno
or
leave
xor
push
xor
mov
push
push
ficoml
jp
inc
nop
adc
fisubl
pusha
loopne
sti
cmpsb
mov
push
ss
cmp
sub
inc
lock
testb
scas
out
insb
xchg
sbb
mov
daa
xor
es
dec
fidivrs
inc
jns
xlat
mov
dec
pop
sbb
dec
cmp
pop
mov
lret
test
dec
xor
jmp
sbb
mov
in
push
xchg
pushf
and
std
mov
push
out
lods
inc
popf
adc
sbb
adc
push
cmp
mov
push
mov
cmpsl
and
push
and
or
or
mov
into
test
lock
fisttpll
pop
aaa
pop
jmp
std
in
adcl
pusha
sub
inc
fdivrs
xchg
gs
add
rolb
fists
dec
cs
adc
sub
and
jmp
or
out
cmpsb
pop
mov
sub
pop
xchg
mov
dec
fcmove
pop
mov
leave
jge
pop
dec
mov
dec
rorb
push
sub
push
jmp
loope
push
jecxz
stc
mov
loopne
std
add
inc
cmp
sarb
jecxz
pop
inc
and
jno
mov
mov
dec
mov
jge
jmp
push
lahf
movsl
or
adc
push
push
sbb
fnstsw
push
aas
sbbb
stos
lcall
loop
push
out
and
lret
jb
push
inc
cli
in
in
mov
dec
pop
cli
mov
lods
pop
lret
lret
push
test
xor
pop
mov
loop
addb
inc
mov
divb
adc
fimuls
scas
test
jmp
ljmp
fldl
and
mov
mov
mov
xchg
arpl
pop
adc
popa
fbstp
inc
mov
cmpl
mov
sub
xacquire
lods
es
mov
cmpsl
mov
test
ja
gs
xor
test
daa
xchg
xchg
das
aas
adc
bound
sahf
or
scas
mov
ficoms
xchg
mov
mov
gs
jae
pop
mov
flds
repnz
xchg
jo
jle
mov
orb
into
mov
clc
cmp
test
pop
shrb
insl
ss
das
mov
testb
adc
add
loopne
add
mov
mov
jno
xor
in
sub
pop
outsb
sbb
fcomps
outsb
imul
repz
imul
jmp
rcrb
stc
cmc
mov
adc
hlt
pusha
and
or
cwtl
sub
push
bound
ss
mov
iret
sub
jne
ficoms
xchg
gs
jns
jo
test
in
push
and
in
sbb
std
aam
sti
ss
fistl
lcall
dec
loop
mov
adc
xchg
pop
and
mov
ds
dec
sbb
xor
xchg
pop
fstl
rorb
lcall
jno
sbb
pop
sbb
ret
mov
push
dec
popa
scas
push
pop
xor
test
imul
cmp
out
test
popf
ret
scas
call
and
mov
adcb
aam
cs
adc
lcall
add
popf
out
pop
mov
sub
sahf
lods
pop
and
gs
js
lea
ss
sub
inc
pusha
sarl
out
jle
insl
fucomp
decl
addb
jle
xor
xchg
mov
cli
jge
inc
jle
das
push
divl
pop
stc
cltd
sbb
mov
mov
lahf
mov
test
push
xchg
xor
arpl
jnp
test
or
lahf
out
icebp
jecxz
pop
adc
in
nop
imull
xchg
dec
cld
testb
cli
outsb
pop
shlb
adc
pop
add
sub
out
adcb
loopne
call
push
bound
xchg
push
hlt
jno
shlb
lret
rcrl
rcr
adc
std
jmp
mov
popf
orb
and
lea
out
dec
mov
arpl
dec
jl
push
into
stc
iret
bound
jge
xor
jecxz
cmp
push
nop
push
filds
mov
cmp
and
inc
jo
ret
fwait
or
test
xchg
ljmp
jp
cmp
add
push
iret
sarl
xchg
jp
add
int
test
sahf
add
mov
leave
mov
shlb
lret
movsl
dec
inc
adc
or
stos
adc
int3
inc
jns
mov
add
imul
aas
scas
test
repnz
pop
sub
fidivrl
push
aam
mov
add
mov
insb
std
and
adcl
mov
sub
cli
or
xor
sarl
ss
shll
sbb
out
int
dec
and
and
sbbl
cmp
jecxz
out
in
pop
scas
sbb
or
aam
push
dec
ret
xor
subl
stos
hlt
mov
in
loopne
xchg
call
push
mov
mov
out
sbb
dec
sbb
sbb
repnz
popa
arpl
or
push
adc
mov
loope
xchg
popf
adc
je
dec
and
mov
je
sub
scas
pop
in
cs
das
gs
clc
pushf
fdivp
popf
pushf
or
js
mov
mov
call
lods
sub
loopne
leave
push
scas
fdivs
es
add
push
and
pushf
faddl
cmc
dec
hlt
mov
or
loop
mov
and
xchg
test
xchg
cltd
push
mov
push
orl
mov
imul
push
jl
dec
aas
loopne,pn
fisttps
cmp
pop
into
mov
mov
cld
push
pushf
dec
lcall
push
jl
xchg
sahf
fnstenv
dec
sbb
cmpsb
push
mov
div
mov
jo
add
outsl
loope
ja
loope
pushf
jo
pusha
mov
adc
xor
inc
xchg
in
popf
cmpsb
mov
mov
fbld
jge
repnz
adc
data16
pop
sti
lahf
wbinvd
xchg
push
dec
mov
loope
shr
cmc
pop
pop
shll
rol
sub
push
inc
xor
jb
dec
xor
push
cmc
js
jecxz
fiadds
jl
jecxz
push
test
jecxz
adc
pop
or
repnz
xchg
popf
mov
mov
data16
cld
mov
das
dec
push
mov
dec
scas
inc
out
xchg
orb
dec
out
jb
shrb
mov
xchg
xor
sub
bound
lahf
push
push
pop
push
xor
test
push
mov
sub
aam
loop
gs
pusha
add
jb
outsb
ljmp
sub
add
shlb
out
xchg
push
ret
cli
or
leave
add
addr16
repz
dec
pop
rclb
add
adc
mov
popa
scas
push
insb
and
mov
inc
mov
aad
inc
sbb
xchg
jmp
inc
pop
mov
popf
jne
repz
and
repnz
xchg
pop
push
cmp
sahf
shlb
sbb
ss
pop
rcr
cmpl
xchg
xor
ret
sbb
add
ds
jne
shl
test
add
jbe
pusha
loope
cmp
sti
fidivl
mov
dec
inc
out
mov
ss
mov
pusha
jnp
clc
add
rolb
test
ret
lret
lret
mov
cmp
or
pop
cmp
andb
jne
and
jecxz
or
xchg
stc
xchg
in
xchg
push
outsb
nop
inc
nop
fiadds
subb
rclb
stos
adcb
or
jg
movsl
repnz
lds
mov
or
test
ret
xor
aam
std
test
cmp
xchg
sti
sbb
setns
out
icebp
mov
testb
fistl
cwtl
dec
adc
sbb
sti
xor
mov
dec
push
xchg
scas
sub
insb
dec
mov
lret
imul
div
ret
xor
jno
add
mov
bound
inc
ss
push
xchg
popf
jmp
xor
fdivl
cld
inc
sarl
or
mov
scas
sbb
in
iret
test
xchg
xchg
xchg
ja
scas
dec
jle
adc
frstor
rorl
sub
sbb
jb
imul
inc
mov
ljmp
in
loop
lcall
add
lods
jmp
push
add
add
mov
push
push
jbe
push
scas
dec
xchg
add
inc
mov
pop
fwait
icebp
lock
inc
scas
test
or
jle
adc
jecxz
cli
xchg
addl
das
sbb
sbb
push
cmpb
loope
cmpsb
lods
in
aam
push
orb
push
sbb
pop
mov
or
data16
negl
pop
and
jmp
xchg
ds
dec
test
cltd
dec
sub
iret
test
repnz
mov
cmpsb
in
std
sbb
lock
jmp
loopne
das
test
push
and
nop
cld
push
fistpl
ret
and
xorl
int3
and
sbb
loop
or
xor
shrl
bound
lcall
lds
dec
pop
sahf
mov
ror
mov
mov
inc
mov
repnz
pushf
mov
into
sbb
lods
adc
outsl
test
jns
sub
and
repnz
pop
scas
repz
mov
lret
mov
jbe
andb
pop
pshufw
sti
test
pushf
test
imul
jl
int3
data16
sti
stos
xor
xchg
and
lods
or
dec
inc
loop
out
ret
push
adc
aam
xchg
repnz
or
add
inc
push
aas
and
xchg
cmpsl
int
sbb
add
out
stc
fistl
call
xchg
pusha
inc
xor
ljmp
xor
sub
fcomps
dec
bound
gs
jb
aad
fildl
aas
es
jb
jne
aad
and
dec
das
lret
xchg
pop
lahf
jecxz
mov
xor
mov
xor
mov
cmpl
arpl
add
orb
inc
imul
sub
jnp
jp
cmpsl
sahf
shlb
add
xchg
rcll
sbb
and
sarl
or
jg
in
roll
int3
xchg
push
adc
cmpsb
out
fwait
pushl
xchg
jg
mov
mov
lea
lock
push
or
call
adc
mov
aam
loop
sub
fwait
adc
lock
mov
sbbl
cmpb
nop
clc
xrelease
lahf
push
sbb
sub
iret
cltd
roll
shl
cmpsl
test
and
ret
mov
sahf
or
mov
outsb
cmp
fldcw
hlt
xor
xchg
mov
mov
lea
lds
insb
out
add
adc
pushf
mov
or
adc
inc
mov
dec
shrl
and
inc
mov
pusha
cmp
mov
pop
cmp
jo
rcr
dec
jecxz
pop
inc
sbb
ficomps
scas
fstl
adc
mov
ficomps
mov
ljmp
std
mov
dec
enter
bound
dec
ret
test
sahf
daa
test
mov
add
mov
xchg
lret
dec
aad
cmp
in
xchg
inc
mov
ds
xlat
scas
test
popf
jnp
mov
fs
push
nop
test
inc
or
and
mov
aad
fwait
in
dec
dec
daa
popf
jg
enter
int3
roll
xchg
xchg
je
jp
add
add
sbb
movsb
mov
lret
push
xchg
mov
mov
repz
push
xor
lods
jmp
ljmp
popa
test
rol
push
adcl
cltd
mov
in
mov
sti
adc
test
stos
fsubrs
enter
insb
jge
fwait
in
jb
mov
dec
jp
mov
mov
adc
test
shrl
roll
into
xor
bound
jp
xor
sub
fucomip
and
push
cmpl
mov
cmp
fdivs
and
scas
pusha
into
and
shll
or
or
sbb
lods
les
das
not
mov
and
add
dec
push
inc
sub
mov
addr16
stos
jmp
mov
mov
sub
push
xchg
dec
ss
je
sub
out
mov
or
lods
rorb
call
cmc
inc
inc
out
test
push
and
imull
mov
in
lods
mov
push
int3
adc
jmp
adc
jnp
push
into
movsl
lahf
sub
pop
xchg
das
fcomps
cmp
xchg
push
insl
je
or
ja
cmpb
push
sbb
in
sti
stc
jmp
and
fsubrs
push
jne
popa
daa
and
test
mov
faddl
mov
shrb
out
mov
data16
mov
popf
xchg
dec
test
mov
or
xor
clc
mov
jmp
xor
mov
repz
cmc
push
pop
sbb
imul
js
xor
mov
xchg
int
out
xorl
push
push
mov
loope
ret
jne
test
mov
push
imul
add
lret
adc
pop
dec
cmp
xor
pop
or
sbb
pop
aam
incb
push
mov
mov
stos
cltd
dec
test
ja
cli
pop
jg
aas
pop
sub
test
sbb
push
mov
xchg
mov
xchg
in
mov
pop
test
inc
pusha
adc
mov
dec
inc
lds
mov
mov
daa
cmc
mov
aas
fdivrl
dec
jne
cld
jno
mov
mov
mov
scas
mov
out
repz
mov
xor
in
mov
mov
shll
and
aaa
pop
and
cmp
pop
pop
xchg
shl
cmp
push
sub
push
loope
arpl
dec
push
sbb
mov
push
dec
pop
lret
mov
orb
or
daa
adc
push
shlb
fidivrs
add
mov
imul
mov
and
jle
sub
rclb
sub
ss
or
bound
ret
dec
push
dec
jno
ljmp
mov
inc
fimull
data16
mov
mov
xchg
jmp
cmp
lret
shll
shll
lret
aad
jb
hlt
je
cli
inc
in
js
and
mov
es
or
or
inc
out
loopne
lahf
push
arpl
scas
inc
hlt
sub
loope
pop
dec
push
clc
mov
fidivrl
mov
add
filds
mov
das
andl
cli
adcb
xchg
fistl
add
xchg
pop
and
scas
mov
sbb
pop
cmp
test
scas
push
jno
repz
sub
jge
cwtl
rcr
cmpsb
xchg
sti
out
mov
iret
mov
xor
sbb
out
aas
ja
xchg
xchg
dec
imul
pop
push
mov
stos
insl
sbb
ss
flds
adc
outsb
jge
je
clc
lds
out
inc
sbb
pusha
sub
sub
push
inc
inc
lea
outsl
sbb
repnz
test
inc
inc
inc
mov
sbb
jne
stc
ds
sahf
fcoms
mov
add
or
push
push
jecxz
into
xchg
notl
pop
fwait
cmc
fs
dec
mov
or
or
aam
arpl
in
pop
cmc
imul
lock
sub
push
daa
dec
lcall
outsb
dec
bound
cs
ja
test
dec
dec
xchg
push
xchg
sub
and
push
cld
loopne
xchg
ret
sbb
push
push
push
loope
fisubl
int3
clc
xor
arpl
or
push
popf
cld
push
pop
sub
cmp
loope
lret
mov
adcb
cmp
adc
cltd
gs
or
stos
call
ficoml
sub
shrl
jle
or
ja
rcll
push
xchg
jle
mov
mov
add
inc
popa
daa
mov
mov
sbb
mov
ss
mov
sbb
and
fnstsw
xor
ret
pushf
call
and
inc
fwait
divb
pop
inc
mov
jns
out
out
notb
fmull
or
insb
sbb
ficoml
repnz
jle
dec
outsl
into
and
cmp
sbb
ret
add
es
movsw
inc
mov
and
out
pushf
mov
imul
jg
push
pop
loope
pusha
loop
xchg
sub
popa
shlb
test
leave
sahf
mov
insl
dec
jge
jno
inc
into
test
sbb
jmp
xchg
outsl
fidivrs
cmc
xchg
dec
movsb
push
or
rcr
test
xchg
mov
pushl
mov
xchg
xor
fidivrl
iret
jmp
xchg
pop
and
jns
xchg
rcl
push
mov
fisttps
mov
dec
scas
filds
std
fwait
sub
jo
or
rcrb
loop
mov
scas
mov
and
lahf
popa
sub
xchg
bound
cmpsl
xchg
or
into
mov
or
jp
pop
pop
cwtl
pop
push
mov
test
adc
push
pop
enter
pop
andb
add
cmpsb
out
sbb
xor
and
and
sub
out
and
xor
jb
fistl
adc
cmpl
cmpps
mov
repz
scas
int
jnp
cmp
ja
outsl
loop
popa
inc
sbb
jg
inc
je
out
fistl
daa
mov
nop
cmp
inc
lods
jp
dec
xor
mov
sub
shrb
fwait
xor
add
jo
lret
cld
xchg
push
xor
movsl
dec
mov
stos
testl
cmp
sbb
push
mov
mov
mov
add
and
push
fwait
inc
sbb
dec
lods
inc
test
mov
push
aas
fs
push
and
ljmp
adc
stc
xchg
inc
xchg
xor
xor
mov
ljmp
rcll
loope
push
cltd
movsl
ret
pop
dec
push
sub
xor
sub
rcl
sahf
add
jmp
xlat
adc
sahf
rorl
es
adc
push
rol
rcll
es
mov
shll
jnp
xor
test
cmp
leave
sbb
arpl
mov
ffree
dec
sbb
add
insl
ds
orl
bound
in
mov
aam
dec
out
lcall
aad
mov
shrl
lock
jb
out
pcmpeqb
jb
xchg
aas
xor
clc
pop
and
or
sub
shl
push
push
fidivs
cmpsl
dec
mov
adc
sbb
daa
ljmp
adc
adc
xchg
hlt
jne
icebp
pop
fiadds
sub
pop
test
wbinvd
mov
or
sbb
push
push
cmp
adc
pop
daa
dec
daa
jecxz
sub
es
xor
popa
or
and
fwait
adc
jb
inc
mov
and
inc
clc
add
mov
and
add
mov
dec
mov
stc
sbb
das
adc
pusha
push
xchg
out
push
sub
adc
fimull
repnz
sub
bound
cld
lahf
test
jnp
mov
es
mov
inc
test
repnz
icebp
test
inc
pusha
push
bound
xchg
cmp
sub
and
insl
test
jp
push
nop
xor
popa
xchg
jns
test
out
call
cld
dec
mov
icebp
cltd
lock
icebp
xor
in
cmp
mov
es
sub
fwait
lret
pop
fnsave
lods
push
cmpsb
mov
jbe
inc
fisubs
ljmp
insl
jge
in
pop
jl
aam
sub
push
add
add
add
cs
pop
add
xchg
push
ret
nop
and
jo
pop
fwait
repnz
and
stos
pop
dec
inc
je
pop
pop
and
into
mov
sub
pop
test
push
push
jnp
and
pop
test
pop
pop
mov
bound
mov
mov
push
push
jb
gs
dec
adc
and
push
or
lcall
push
shlb
mov
and
repnz
sub
add
ja
mov
push
jbe
xchg
cltd
fstpl
loop
js
sub
xor
sub
lcall
lods
and
jnp
wrmsr
xchg
out
mov
xor
jp
dec
loope
repz
push
adc
push
sub
dec
push
cmp
test
sub
sub
ret
and
mov
sbb
mov
sub
bound
sahf
es
iret
rolb
push
pusha
mov
or
cmp
add
xchg
loope
push
sbb
and
xor
jle
dec
xlat
sub
adc
cs
jle
cs
data16
pushf
vcvtusi2sd
fadd
in
inc
scas
test
mov
call
push
loope
lret
and
xor
fistl
jb
sbb
jmp
loopne
fs
xor
in
mov
inc
xchg
sbb
xor
sahf
cmpsb
push
pop
in
ja
ljmp
jb
stos
push
jnp
adc
jns
ds
stos
rcr
lds
jmp
jne
test
pop
scas
xor
lcall
out
jmp
out
pop
pop
scas
test
rorl
sub
or
in
out
cmp
das
push
pop
and
aad
mov
pop
sbb
test
jp
mov
sbb
sub
dec
lret
hlt
addr16
jl
mov
mov
sub
and
dec
aad
sub
push
into
loope
fprem1
std
imul
mov
cmp
sub
xchg
loopne
mov
jbe
pop
mov
loope
loope
sarl
mov
add
push
les
shrb
test
cmp
sbb
movsb
stos
xor
mov
adc
push
es
pminub
pop
cmp
cltd
xchg
arpl
pop
fbstp
ret
scas
xchg
std
mov
pop
repz
into
mov
mov
jno
inc
jg
sub
enter
jge
inc
xor
movsl
fstps
out
jno
xchg
pop
enter
adc
pop
lret
xor
or
ret
loope
cmpsb
clc
jo
icebp
adc
lds
push
jp
stc
xchg
test
aaa
in
cmp
cmpsl
cmp
xchg
in
les
xchg
rcrb
mov
xchg
push
jge
insl
repnz
mov
rcrb
sbb
ja
in
fistpl
adc
xchg
sbb
fs
ds
lcall
imulb
sbb
mov
fimuls
sbb
mov
jo
arpl
idivb
mov
movsl
call
jno
cs
pop
push
inc
and
subl
pop
cs
addb
push
cmp
mov
xchg
into
jl
mov
fnstenv
ljmp
sbb
dec
push
inc
pop
push
cmp
out
fidivl
out
pop
les
jmp
loop
outsb
cli
in
push
cwtl
aam
jl
jp
jecxz
shrl
test
cs
leave
cld
scas
sbb
dec
int
pop
pop
mov
pop
out
jecxz
sub
ljmp
inc
test
lret
push
loopne
mov
daa
mov
sbb
imul
pop
nop
mov
mov
lea
sahf
nop
mov
dec
push
subl
mov
scas
out
push
repnz
mov
adc
cmp
mov
mov
mov
mov
push
lahf
or
inc
ja
sti
mov
push
add
dec
rcr
xchg
mov
jnp,pt
stc
adc
scas
jp
fists
xor
clc
aad
sbb
std
stc
jb
lods
cmp
mov
or
inc
xchg
mov
leave
adc
mov
call
or
push
mov
dec
pop
xor
sti
mov
adc
or
dec
mov
cmpsb
cli
dec
outsb
cmpsb
lcall
xchg
add
movsl
das
insl
test
cmpsb
mov
mov
cltd
and
jno
scas
dec
or
ds
mov
xor
dec
mov
dec
std
popf
mov
ficompl
inc
pop
popf
jmp
dec
inc
into
bound
add
cmp
fdivl
js
and
sbb
fcomip
gs
xchg
dec
into
stos
lds
mov
add
xchg
push
je
xor
sub
int3
mov
outsb
xor
sub
icebp
mov
xor
jo
in
pop
aam
pop
jge
and
inc
repnz
cmpsb
clc
leave
hlt
test
das
inc
xor
dec
incl
xchg
jge
push
in
int
mov
cmp
inc
pop
ss
mov
das
push
jbe
cli
and
enter
mov
out
scas
sub
mov
cmp
sub
das
jbe
and
cmpsb
push
and
int3
negb
pop
add
jbe
dec
leave
cmpsb
xchg
pop
fst
fiadds
pop
js
lea
xchg
mov
dec
scas
jge
xor
xlat
lea
pop
bswap
mov
popf
mov
xlat
jns
je
push
iret
lret
cmpl
jge
mov
dec
push
aas
lds
push
jge
push
cmpsb
fdivr
fcmovbe
adc
scas
popl
jb
fwait
mov
jge
icebp
std
shrl
popw
test
push
dec
loope
js
int
xchg
cltd
enter
call
and
jbe
test
adc
push
jle
rcrl
fsubrp
jge
out
aaa
adc
adc
stos
iret
imul
cs
xchg
jecxz
jb
fisttpl
mov
sub
push
lahf
test
data16
mov
js
inc
popa
mov
cmpb
aas
outsl
test
and
push
dec
adc
mov
adc
lods
lock
sub
mov
xchg
roll
jmp
subb
mov
loop
xchg
inc
dec
repnz
adcb
and
and
sbb
cmc
adc
add
mov
in
movsl
mov
mov
rcll
sub
test
jbe
mov
add
mov
inc
xor
adc
add
inc
cmp
fbstp
and
jns
sbb
xchg
sahf
scas
sbb
andb
mov
pop
jge
add
inc
xlat
push
xor
cltd
pop
or
add
sbb
out
fidivrs
sahf
inc
lea
insb
or
ja
lds
sbbl
addb
mov
add
xchg
repz
push
cmp
mov
push
and
or
mov
mov
add
ret
incb
loopne
das
and
cmp
in
mov
mov
imul
ret
adc
std
cs
push
rorb
and
lcall
sub
gs
or
ret
rcll
leave
into
sub
in
jmp
and
xchg
fwait
ss
dec
jle
sbb
outsl
dec
mov
fistps
push
arpl
aad
push
sub
lahf
sub
cmp
push
add
lea
js
fcmovnbe
inc
dec
dec
sar
mov
xchg
hlt
out
inc
mov
pop
test
pop
cli
mov
inc
dec
fiadds
xchg
jo
inc
pop
push
fnsave
test
test
mov
sbb
mov
std
lods
xor
out
jg
mov
subl
sbb
daa
jmp
std
sub
sbb
loope
adcl
into
in
test
mov
test
adc
mov
test
aad
negl
rorb
mov
popf
mov
adc
dec
mov
loopne
test
xchg
push
lcall
shrb
add
test
xlat
cltd
jns
push
rcrb
test
pop
scas
push
test
sub
cmc
sbb
and
test
sbb
lahf
fldenv
test
sbb
jle
les
pop
mov
fsubrs
fildll
mov
inc
inc
test
fsubrp
and
and
cmp
jg
shlb
pusha
sbbb
adc
das
or
inc
and
out
pushl
xchg
cmp
mov
push
testl
add
sbb
jl
pushf
dec
jg
dec
test
cli
dec
xor
push
mov
divl
xchg
fiadds
cltd
and
js,pn
jg
mov
pop
shlb
aam
push
sub
pusha
outsl
xor
imull
mov
cmp
fnstcw
push
or
xor
das
dec
and
mov
mov
push
fdivrs
mov
movsl
rclb
ss
xchg
add
test
movsl
mov
and
leave
xor
inc
jg
cmovns
dec
scas
cmc
ret
sbb
rorl
jnp
mov
bound
mov
test
shr
js
shl
inc
cltd
ret
mov
add
dec
mov
shr
inc
jp
jb
ja
test
xchg
test
or
stc
rclb
inc
push
and
jne
sub
xor
addl
cmp
mov
clc
inc
es
ret
lret
adc
popa
xchg
add
outsb
jno
mov
sub
jmp
and
fs
xor
cmpsb
data16
and
jmp
enter
mov
movsl
and
mov
movl
dec
rcrb
mov
nop
inc
mov
xor
jae
dec
shlb
daa
cmp
jle
movsl
dec
ss
adc
aas
mov
sahf
adc
push
sbb
sbb
push
vfrczsd
pushf
pop
sub
mov
mov
sbb
stc
inc
clc
cmc
mov
dec
out
cmpl
mov
idivl
cld
fcomps
addl
repnz
je
sbb
lock
xor
cmp
sbb
mov
shlb
or
mov
loopne
inc
and
sbb
test
push
dec
sub
gs
je
and
mov
fldl
xchg
fisubrl
or
sti
lea
or
subl
push
cmpsl
jg
inc
pop
sbb
dec
ret
xchg
mov
mov
pop
lcall
jne
scas
mov
adc
mov
xchg
loopne
mov
mov
add
xorb
and
cwtl
push
mov
pop
sbb
test
xlat
scas
push
inc
mov
xor
repnz
add
dec
mov
outsl
sti
lods
sub
idiv
pop
es
cmc
jg
fisubs
adc
xchg
orl
jp
lods
loopne
bound
je
cli
jg
xchg
xor
sahf
xlat
es
pop
mov
lds
adc
ret
addr16
sub
fmuls
sahf
pushw
je
fdivs
sbb
and
pop
repz
jnp
lds
notb
repnz
sub
hlt
pusha
rorl
neg
bound
sti
and
pop
and
imul
ja
mov
arpl
mov
push
loope
in
inc
push
sub
mov
icebp
mov
les
insb
das
push
push
dec
mov
fistpll
cmc
jnp
dec
push
es
and
fsub
fwait
je
mov
lret
fwait
adc
lods
int
inc
pop
or
xor
inc
mov
mov
icebp
out
daa
mov
repz
sbb
pop
inc
aam
icebp
jg
mov
inc
push
mov
jns
sub
pop
out
enter
fcomp
push
shll
adc
and
in
popl
fcomps
ja
mov
andb
sub
jle
loopne
xchg
or
iret
or
mov
cmp
mov
jmp
icebp
out
test
not
xchg
dec
xchg
repnz
fwait
or
jbe
nop
stos
fs
and
cli
push
cltd
xchg
repnz
mov
push
pop
xchg
mov
sbb
and
and
pop
add
es
jo
repnz
jmp
in
mov
fwait
popa
adcb
pop
pop
pop
sub
fnsave
fwait
mov
test
pop
fs
call
mov
jo
out
scas
push
pop
push
xlat
shll
shlb
out
lds
cmpsb
cmp
sbb
test
xor
test
mov
clc
ret
sub
and
into
dec
pop
or
mov
mov
and
xchg
push
adc
add
sbb
stc
and
dec
dec
xlat
ficomps
xlat
fwait
xchg
add
jns
sti
xchg
ja
popf
or
sub
fsub
lods
data16
pusha
xchg
fucomip
data16
je
push
xor
out
dec
sbb
int3
sti
mov
loop
fsubr
pop
xchg
sub
mov
int
nop
sub
popf
test
dec
lahf
dec
adc
dec
scas
sbb
movsl
js
xchg
ja
inc
mov
into
test
mov
xorb
int
ficoml
aaa
push
push
pusha
push
mov
jne
out
pop
jl
fistpl
dec
pop
or
xchg
and
jge
xor
pusha
aad
ds
imul
lret
ffree
test
mov
iret
inc
ds
out
jmp
imulb
lea
fbld
add
hlt
dec
mov
imul
mov
push
xchg
pushf
repnz
xchg
scas
jbe
xor
in
shrl
sbb
push
test
or
mov
test
dec
es
pop
sbb
push
popf
imul
sahf
jge
xchg
fldl
inc
dec
xchg
popa
js
mov
adc
push
jnp
ja
int
test
repnz
lret
into
aad
jo
jmp
inc
mov
or
addl
movsb
xchg
sub
int3
xor
cmp
push
daa
xchg
push
test
iret
insl
pop
in
mov
dec
sub
cmpsb
dec
jge
or
test
inc
mov
ss
sub
pop
or
out
test
test
rolb
dec
in
fwait
mov
inc
cmovne
mov
inc
xchg
imul
aaa
sbb
cmp
outsb
or
cmp
lahf
sbb
mov
xchg
xchg
xchg
sti
out
sbb
sub
out
leave
cmp
mov
mov
dec
loop
xor
or
sbb
sti
lds
and
fdivl
loopne
push
dec
aaa
add
aad
idivl
xchg
test
into
ljmp
fstpt
pop
into
call
rorl
js
pop
mov
inc
xlat
xchg
push
xchg
rorb
nop
dec
sub
popf
jb
jo
push
loope
jl
dec
jae
jne
movsb
loope
cld
scas
maxps
cmp
sbb
mov
mov
mov
lahf
sub
inc
loopne
mov
ret
pop
mov
sbb
cli
out
mov
movsl
xor
sbb
aas
rol
loopne
into
jg
add
inc
out
xlat
cmp
inc
and
adc
in
incb
shlb
pop
xor
ficompl
imul
jge
sub
in
xchg
xchg
test
mov
add
bound
mov
dec
push
into
lcall
sbb
jmp
sarl
push
dec
dec
jne
jmp
repnz
jne
xchg
daa
outsl
out
mov
push
cli
cld
sti
sbb
test
or
sub
jno
or
xlat
mov
mov
movsl
or
in
pop
rclb
xchg
scas
stos
cmp
push
cmc
mov
pusha
iret
popa
scas
xlat
dec
mov
mov
pop
fldz
mov
add
mov
fldenv
pushf
adc
scas
xchg
ss
push
xor
xchg
sub
cltd
out
dec
push
jne
cld
lcall
adc
lds
sbb
mov
mov
add
pop
dec
dec
jge
clc
subb
mov
inc
inc
popa
inc
leave
pop
xchg
or
popf
jp
repnz
inc
mov
std
in
xor
add
mov
testb
mov
pop
adcb
dec
ss
lock
orl
mov
xchg
rolb
ljmp
adc
mov
mov
fwait
pop
rclb
nop
mov
mov
adc
sahf
xchg
adcl
mov
jle
cmp
stos
pop
mov
sbb
int
sbb
sub
repnz
testb
jg
inc
mov
fisubs
jmp
mov
and
mov
sahf
sbb
mov
test
call
mov
dec
ljmp
int
lahf
shlb
fmuls
sub
arpl
shlb
stos
xrelease
std
imul
fimuls
test
out
imul
loop
mov
mov
sbb
adc
cmp
sub
in
xchg
repnz
mov
inc
pusha
clc
jle
mov
ret
out
inc
mov
xchg
pop
je
leave
jb
dec
or
mov
lahf
mov
xchg
stos
repnz
out
lret
bound
mov
mov
sub
js
nop
les
mov
scas
dec
push
mov
or
add
fistl
xor
mov
lock
dec
bound
and
pushf
jb
loop
int3
iret
incb
or
add
dec
mov
dec
cmp
rcl
or
outsb
mov
ds
pusha
scas
mov
push
lcall
stos
pop
lods
adc
out
test
or
fldl
fadds
mov
pop
or
adcl
je
repnz
popa
sbb
inc
xor
mov
jb
push
or
andl
fisttpll
rorb
fstl
adc
xchg
and
rol
mov
pop
stos
test
push
pop
sub
xor
ret
push
push
insb
test
or
addr16
jo
xchg
out
mov
pop
sbb
fs
xchg
push
jecxz
cmp
stos
jb
daa
xchg
jae
pop
jge
in
sarb
ja
xchg
mov
ret
sbb
loope,pt
jg
cmpsb
pusha
test
mov
shrl
js
mov
mov
jl
ror
fiadds
ret
pop
jl
movsb
loop
out
addb
inc
sub
into
inc
add
or
mov
subb
imul
ret
pop
xchg
sbbb
js
leave
mov
and
mov
xor
jge
adc
adc
orl
adc
loop
mov
cld
sti
fimuls
mov
pop
adc
mov
out
rcll
popa
pushl
mov
nop
push
push
std
dec
aas
inc
test
dec
push
push
nop
movsl
sahf
sub
imul
xlat
mov
imul
movb
or
fucomi
adc
mov
jo
inc
in
jl
movsb
inc
dec
add
fdivs
sahf
xor
jecxz
clc
jg
sub
xor
int3
mov
sahf
jg
sub
xor
xchg
in
jg
bound
xchg
fdiv
loope
repnz
pop
mov
cs
pusha
and
bound
xor
sti
mov
out
jp
add
rorb
sub
aam
sbb
rorl
mov
dec
rorb
lret
xchg
jno
lods
es
nop
pop
sbb
insl
loopne
cmp
insb
jge
stc
adc
cmp
popf
jge
rorb
enter
test
fisubrs
icebp
repz
arpl
data16
mov
ret
mov
jnp
out
mov
jbe
out
fnstenv
or
mov
mov
gs
ret
sub
sbb
and
orb
inc
test
lods
push
bound
mov
pop
cmp
fistpll
in
lods
push
mov
inc
sub
pop
test
adc
call
xchg
mov
fdivrl
loope
les
sub
dec
loope
jg
scas
xor
jmp
jb
xchg
adc
push
mov
dec
push
cld
push
cmp
inc
cmc
iret
cwtl
std
into
dec
mov
sub
cli
sub
sbb
sub
sbb
rcrb
popa
xlat
cs
fadds
jmp
repnz
repnz
and
cmc
jns
jmp
orl
jb
stos
jg
sub
fldcw
pop
das
xor
push
pusha
jb
shlb
addr16
jno
sbb
dec
bound
inc
sbb
das
mov
fisttps
mov
das
cmp
popa
daa
jns
ljmp
cmc
ffree
mov
push
dec
xchg
out
sbb
movsb
cmpb
ret
cmc
sbb
pop
mov
mov
xlat
outsb
xchg
imul
jo
xchg
in
xchg
inc
adc
fsts
push
sub
ja
sbb
divb
jne
pop
sub
test
shll
incl
int3
lds
xor
sbb
pusha
xor
mov
ret
popa
mov
stos
mov
bound
cmp
lock
sbb
adc
scas
xchg
sub
pop
add
mov
pop
rorl
aas
loopne
sbb
bnd
mov
das
adc
loopne
mov
or
lahf
dec
in
repnz
dec
leave
ds
xor
push
mov
arpl
or
es
je
out
sbb
xchg
jbe
adc
xchg
arpl
pop
xor
pop
orb
test
movsb
fdivp
out
or
loopne
pop
ficoml
push
adc
jo
inc
lret
outsb
ss
fisubl
xor
pop
out
aam
rcl
ret
jo
das
pusha
adc
adc
mov
mov
inc
out
xor
xchg
pusha
xchg
scas
xor
sub
imul
les
adc
adc
push
pop
jno
dec
fmul
popa
lahf
or
cwtl
sub
cwtl
adc
sti
pop
jbe
out
adc
and
lds
mov
nop
outsb
add
dec
mov
sahf
pushf
adc
lods
leave
cli
push
pop
add
push
inc
test
nop
imul
scas
loopne
hlt
pop
mov
stos
jp
mov
pop
push
sbb
push
lret
cmp
mov
push
cmp
dec
cmc
into
movsl
test
jmp
mov
sub
mov
push
setne
scas
mov
inc
and
adc
and
shll
and
or
mov
mov
loope
ss
mov
fdivrs
jnp
sbb
mov
cs
jns
int
cmpsb
test
ds
cltd
test
mov
aaa
test
lock
or
xor
loope
adc
dec
mov
xor
inc
push
in
cmp
cmp
sbbb
or
mov
bound
xchg
ret
push
push
and
decl
cs
pusha
and
dec
aam
ret
jns
push
mov
jmp
adc
xchg
ret
push
lods
dec
clc
dec
xchg
popa
push
or
xchg
and
pushf
aas
cmpsb
cmp
sahf
repnz
das
pop
lea
repnz
jecxz
jb
jo
out
xor
mov
bnd
mov
push
lods
mov
jo
inc
sub
sbb
imul
mov
jb
outsl
xchg
enter
xorb
loop
jb
inc
jl
xrelease
mov
fwait
mov
mov
inc
jae
daa
call
into
mov
js
aas
popa
out
clc
adc
repnz
push
ds
cmp
mov
jb
fistps
fs
bound
dec
push
push
lret
push
sub
cltd
and
fdivp
xorb
in
cmp
bound
repnz
arpl
dec
cmp
fsubrl
andb
cli
cld
jns
jb
fwait
jp
out
add
adcb
xchg
sbb
dec
in
dec
es
jns
and
pop
in
test
fnstenv
in
clc
aam
push
divb
cltd
and
enter
fdivs
adc
scas
test
adc
and
shll
xor
mov
and
lods
in
xchg
cmp
jle
push
jmp
icebp
hlt
clc
imul
decb
push
das
pop
and
popf
addr16
mov
xchg
push
cmpsl
jo
out
sbb
cs
mov
sarb
add
sub
push
das
or
icebp
lcall
push
cwtl
mov
dec
inc
pop
mov
or
clc
lds
dec
sbb
jecxz
dec
and
inc
jg
daa
iret
leave
xchg
pop
lds
cmc
jno
add
fs
cltd
scas
int3
fdivrl
xor
xchg
fists
pop
divb
hlt
xor
ljmp
shll
sub
gs
sti
or
mov
cltd
movsl
shll
test
cld
sub
xchg
xor
fnstsw
sub
mov
inc
out
mov
sbb
mov
divb
dec
es
inc
cmp
or
mov
mov
jb
iret
jb
fldl
xchg
decl
mov
mov
push
jb,pn
pop
push
call
dec
adc
inc
dec
xchg
loop
push
dec
sub
bound
dec
in
je
adc
loope
sbb
fmuls
std
bound
xchg
dec
gs
or
mov
sub
test
cmp
insb
pop
cmp
cld
pop
pop
mov
push
cmp
scas
push
xor
stos
mov
adc
pop
push
iret
jge
loop
rolb
imul
rclb
mov
das
test
aam
mov
rolb
popf
hlt
inc
mov
mov
sbb
xor
fdiv
into
pop
sub
fcompl
imul
sbb
std
dec
enter
test
pushf
stos
ja
sub
in
sbb
xchg
das
es
inc
negl
ret
les
mov
cwtl
jno
mov
push
jns
repnz
std
and
hlt
addr16
mov
add
mov
fs
testb
push
or
cmp
outsl
dec
andb
push
into
daa
jbe
jno
sbb
daa
mov
pop
push
in
push
cld
mov
es
stos
les
mov
daa
mov
and
xor
and
fwait
xor
test
sbb
les
mov
adc
jno
mov
ret
pop
cmp
sbb
pop
leave
addb
test
aad
sub
dec
pushf
dec
or
sbb
and
adc
pop
dec
sub
push
loope
test
jp
xchg
xor
mov
in
pushf
sub
xchg
sbb
in
add
loope
pop
daa
jg
arpl
int3
jle
push
push
fidivl
rcl
sub
rcll
iret
leave
or
cmpsb
sub
insl
xchg
repnz
test
cld
ljmp
pushf
pushf
bound
int
ficoml
xchg
cmp
mov
inc
ret
lcall
mov
push
pop
filds
jle
add
sahf
adc
add
lock
fistl
fisubrs
fs
ret
mov
add
scas
cld
rol
fstl
and
test
daa
lahf
xor
fsubl
mov
xchg
arpl
pop
inc
push
xlat
leave
out
jbe
roll
pop
push
rcll
and
jmp
mov
mov
push
nop
pusha
mov
xchg
push
sbb
cli
xchg
fdivrl
cmp
icebp
lds
fdivrp
push
int3
movsl
outsb
pop
sahf
out
popa
insl
mov
add
fs
mov
sub
aam
xor
mov
test
or
dec
and
or
pushf
data16
test
mulb
data16
xchg
pop
pop
loope
loop
sti
sarb
adc
sub
xchg
push
jmp
andb
call
loope
push
cs
out
ficoml
stos
scas
pusha
and
cmpsb
sbb
test
pop
push
jmp
xchg
push
mov
movsl
ret
mov
mov
cmp
dec
out
addr16
push
or
imul
mov
mov
into
fcomps
add
lea
push
mov
xchg
cwtl
mov
repz
and
mov
jle
dec
movb
mov
jmp
or
subb
pop
cmc
mov
sbb
sbb
mov
sbb
fidivl
jo
pop
rcrl
jle
mov
push
pusha
sahf
loope
pop
mov
mov
mov
fcmovne
push
push
fsubs
fidivrs
call
pop
xchg
jge
cli
and
andl
mov
and
das
and
or
jle
dec
or
les
rcrb
and
fbld
int3
sahf
inc
xchg
push
loopne
jns
cs
jno
or
fucomi
sub
test
bound
push
shr
dec
jb
jecxz
sub
leave
cltd
addb
sub
inc
cmp
jecxz
sub
mov
push
sbb
mov
mov
dec
add
loopne
movsb
jo
dec
lods
sti
add
mov
sub
mov
xchg
lods
repnz
pop
ja
dec
test
cld
aaa
popf
jmp
jo
in
insb
jle
mov
xor
mov
mov
sub
cmp
lret
mov
lret
pusha
xchg
pop
dec
mov
jl
mov
jbe
ret
pop
pop
lds
jne
mov
lret
imul
mov
fiadds
xor
loop
cmp
pusha
inc
xor
test
in
inc
les
test
lock
iret
mov
loope
cli
inc
movups
mov
pop
test
es
lods
xchg
insb
popa
fxch
mov
push
sbb
int
fwait
jno
mov
sahf
or
xchg
mov
push
pop
adc
hlt
pushf
push
mov
push
push
pop
mov
cltd
outsl
mov
sub
inc
push
aad
test
xor
inc
test
scas
sub
mov
dec
dec
repnz
mov
inc
sub
fcomi
popl
push
arpl
jge
sbb
fdivrs
inc
mov
aas
in
iret
sbbb
push
inc
mov
sar
shlb
fnstsw
cld
mov
fistps
ds
negl
fnstcw
adc
ja
imul
mov
xchg
aas
or
std
jo
aaa
jno
cmpsb
xchg
icebp
mov
enter
sbb
inc
cmp
mov
xchg
xchg
icebp
xor
pop
decl
push
test
mov
fldenv
push
sub
lahf
lret
shrb
jg
xor
fwait
rcrb
mov
test
mov
xor
inc
xor
pop
push
xchg
sub
mov
cmc
xor
dec
push
outsb
sbb
cmp
sar
repnz
jnp
sbb
jp
cmp
pop
cmc
aas
data16
sbb
jle
xor
daa
imul
incb
or
mov
into
sbb
mov
push
xchg
leave
sub
pop
jmp
sbb
rorl
and
adc
int3
or
sbb
and
imul
lahf
push
popa
into
inc
ret
test
add
pop
mov
mov
mov
adc
rorl
ficomps
sarl
ret
sarl
push
or
add
cmp
loope
dec
lret
lds
cmc
add
out
adc
fmuls
pop
add
dec
mov
xchg
pop
gs
stos
or
scas
push
test
rol
and
lret
dec
andb
dec
fildl
repnz
in
sub
test
sbb
push
xchg
mov
pop
adc
or
pop
aaa
popl
mov
ret
pop
testb
pop
jae
out
mov
sti
jns
and
xor
movsb
mov
lea
fldt
in
jge
dec
or
pop
dec
jns
out
push
xchg
aas
test
arpl
scas
xchg
in
outsl
aad
addl
mov
in
mov
ds
sti
push
mov
scas
mov
cmp
sbb
inc
cli
xchg
mov
sub
adc
mov
and
repnz
mov
pop
inc
out
dec
dec
in
mov
inc
mov
push
pusha
jb
data16
testb
jg
lock
lods
sbb
mov
repz
cmp
push
mov
stc
into
adc
pusha
mov
add
sbb
push
shrb
push
pusha
pusha
les
movsl
add
bnd
sbb
ret
ja
xor
stc
jle
fwait
sahf
cmp
jl
test
negb
jne
jo
mov
addr16
test
adc
jno
sti
sub
adc
xchg
scas
cmp
fwait
dec
mov
push
pop
das
push
add
pop
inc
sbb
mov
mov
inc
rorb
dec
fisttps
mov
cmp
dec
out
mov
leave
and
test
or
lods
xchg
jnp,pt
roll
fildl
xchg
inc
push
fld
push
outsl
adc
jnp
stc
pop
push
dec
cmp
adc
pop
imul
out
cli
dec
frstor
test
sbb
fnstcw
mov
lock
and
lret
dec
fldz
leave
fwait
es
cmovp
mov
and
pop
inc
mov
fcoms
xchg
cltd
sar
xchg
test
scas
sbb
pop
and
imul
pop
int
adc
ret
adc
daa
sbb
push
inc
and
inc
rolb
cld
fs
lret
out
int3
jns
xor
subl
jo
push
decl
jmp
push
aas
cs
cmpsb
jge
jb
mov
or
ret
push
sub
loop
imul
xchg
int3
sti
shlb
adc
daa
push
loop
mov
bound
into
mov
stc
fists
jnp
mov
jbe
jns
test
sti
xor
int3
add
jp
cli
mov
xchg
bound
inc
imul
test
cmp
mov
movsl
xchg
fistl
dec
jno
in
cli
jbe
push
pop
add
inc
bound
mov
add
test
iret
cmp
sbb
aam
or
adc
push
iret
sbb
fwait
andb
or
ss
test
sub
pop
lods
push
cmp
mov
adc
testb
lahf
mov
mov
mov
dec
mov
test
jecxz
pop
das
cmpb
mov
and
and
inc
sti
mov
out
leave
daa
pop
in
pop
xor
movsb
push
jo
rcrb
ret
inc
sbbl
addr16
sbb
xor
aad
pop
test
sti
adc
mov
insb
in
pusha
ds
daa
dec
leave
cmp
ja
jle
iret
sub
dec
stos
dec
in
ds
cwtl
rcl
xor
or
addr16
call
adc
adc
sbb
sbb
push
push
mov
test
in
inc
test
repz
fnsave
imul
sti
push
addl
lret
outsl
fidivrl
push
cli
mov
sub
add
push
movzwl
push
and
in
lret
test
lahf
push
popf
aam
xchg
jecxz
inc
lds
fistpll
dec
push
fdivrl
fimull
int3
cmp
pop
or
in
dec
fbstp
popa
adc
loope
or
sbb
andb
adc
outsl
int3
add
cmp
icebp
cmpsb
aaa
imul
rclb
inc
cmp
pop
mov
pop
pop
call
jo
dec
jp
cld
test
sub
aad
cs
mov
pop
repnz
fdivr
stos
push
dec
inc
push
push
jmp
or
sub
or
add
aaa
adc
adc
test
mov
dec
stos
test
les
and
mov
push
fdivp
rcrb
mov
into
lea
pop
popl
leave
mov
repnz
jb
adc
jo
push
push
xor
sbb
and
and
adc
jecxz
sahf
pop
inc
pop
movsl
loope
or
xchg
test
mov
add
jp
jp
cmp
sbb
repz
je
lcall
jl
in
xlat
push
pop
mov
lds
test
in
repnz
test
and
cli
rclb
dec
or
push
pop
test
insb
nop
lds
mov
jl
push
leave
jmp
dec
mov
adc
xor
xchg
ficoms
pop
jno
ret
scas
fisubs
bound
daa
push
mov
or
mov
sti
add
lods
popa
xor
orb
lock
dec
in
std
adc
dec
adcb
arpl
hlt
jns
jnp
xchg
xor
bound
sub
sti
js
mov
sbb
fcmovbe
mov
or
cltd
xchg
int
xor
test
outsl
adc
sub
xor
xor
pop
std
shrb
jg
push
jne
in
pop
js
js,pt
lcall
jmp
xor
lret
inc
cmp
rclb
cmp
or
mov
or
push
add
push
or
sub
mov
jb
jns
inc
add
mov
lcall
adc
lret
daa
fst
mov
push
cmpsb
jmp
in
sbb
cmp
aas
hlt
push
fsts
mov
mov
aas
ja
lret
xchg
out
int3
push
xor
movsb
or
cs
sar
ja
sbb
cmpsb
in
mov
hlt
ret
xor
fbld
mov
jmp
movsl
xorl
jle
jg
repnz
add
sbb
ds
shlb
das
adc
lods
xor
cmc
arpl
clc
mov
push
jg
and
popa
ret
loopne
imul
mov
nop
sbb
inc
xchg
sahf
addl
frstor
push
cmpl
mov
and
fdivrl
and
lds
mov
data16
movsl
dec
sahf
sbb
inc
and
popf
and
iret
jo
loop
dec
cmpsb
pop
xchg
test
inc
mov
mov
cmp
ljmp
push
jne
out
inc
lods
loopne
cld
xchg
push
dec
iret
icebp
fldcw
or
sbb
iret
pop
push
ds
nop
push
mov
ja
and
fstpt
lods
xchg
test
sar
lea
xchg
mov
pop
outsb
fistps
icebp
push
mov
mov
lods
dec
cmp
fsubl
insb
lods
repz
sbb
mov
jp
or
lahf
sub
in
popa
bound
jg
xchg
dec
dec
jle
shl
sub
jg
xor
or
lock
or
inc
inc
into
pop
xchg
adc
push
or
rorb
clc
mulb
ret
repnz
in
dec
imul
scas
je
sbb
cmp
roll
decl
rorb
into
test
inc
movsl
mov
adc
cmc
pop
test
mov
sbb
mov
pop
movsb
xchg
jle
daa
inc
add
in
lods
fstl
test
sbb
xchg
sbb
jle
movsl
sbb
jg
inc
movsl
add
mov
out
divb
push
out
push
and
rclb
push
add
or
into
mov
or
ret
lods
jg
repnz
cmp
addb
scas
lahf
inc
shl
push
sarb
ljmp
js
rcrb
sbb
in
stc
jl
cld
push
or
mov
pop
iret
dec
dec
cmp
rol
sub
notl
lcall
mov
sbb
or
iret
mulb
dec
or
xchg
dec
stos
dec
out
int3
jmp
add
jle
jge
xor
testb
or
mulb
leave
inc
dec
or
ret
insl
stos
sahf
inc
xor
mov
outsl
ja
test
pushf
ss
jl
subl
pop
cmpb
xor
mov
cs
inc
test
mov
out
add
aas
cld
push
jg,pt
fwait
push
pop
push
test
and
dec
pop
fbstp
dec
or
clc
imul
test
adc
push
inc
xlat
fwait
stc
repnz
sub
test
test
es
mov
rclb
aad
mov
xchg
sub
call
and
pop
jno
pop
xor
push
inc
scas
push
loopne
sub
pop
in
and
xchg
adc
fnstcw
fwait
or
dec
das
jl
jge
loop
cmp
xchg
orl
mov
in
es
in
sbb
inc
and
mov
xchg
in
sar
cmc
xor
cmc
xchg
mov
mov
xchg
addb
call
rcrb
ret
xchg
mul
addb
xor
mov
test
out
mov
inc
xchg
push
dec
aad
dec
mov
pushw
scas
xor
and
fistpll
sbb
or
scas
cmp
xchg
int3
gs
inc
pop
test
dec
and
jl
or
mov
sbb
stos
adc
cs
ljmp
loop
fwait
cmpb
lahf
xchg
not
mov
add
js
adc
mov
push
into
icebp
out
mov
pusha
dec
jb
or
imul
sbb
incb
mov
lock
sub
mov
pslld
sbb
push
cmpps
in
mov
pmaxsw
ror
popf
je
cmc
lahf
fdivl
and
adc
neg
sarb
dec
lcall
fwait
jle
leave
mov
jg
xor
inc
pop
jge
loop
aam
es
or
loop
jmp
outsl
cli
repz
lods
lods
test
ds
mov
cwtl
push
aas
into
jle
mov
lcall
and
jmp
jge
inc
fildll
mov
sahf
in
sbb
xor
ret
inc
out
jnp
push
pop
fs
adc
xchg
mov
push
ficomps
jle
into
cmc
jbe
sub
lret
cmp
pop
fdiv
cmp
jle
test
movsl
sbb
fcoms
dec
dec
in
dec
sbb
loop
fnstsw
cmpb
cltd
mov
xor
add
out
dec
es
out
mov
sub
bnd
in
call
std
gs
dec
and
ret
or
sbb
test
pop
xchg
sti
xor
repnz
add
movsl
jb
dec
pushf
mov
hlt
xchg
xchg
nop
stc
mov
fstpt
lods
enter
sahf
cmpb
movsl
es
inc
sub
cmp
add
scas
add
lret
xchg
outsb
push
mov
fisttps
movsb
int3
fs
adc
mov
sti
ret
or
mov
fdivl
mov
jo
mov
fmull
or
test
pop
andl
icebp
lcall
dec
inc
outsb
jo
xchg
aad
jno
imul
jg
xor
mov
add
inc
lcall
data16
add
test
into
arpl
insb
cmpsb
repnz
mov
lock
push
lahf
sub
ljmp
push
in
jne
pop
mov
mov
mov
ret
cmp
jae
icebp
ret
cmpl
lods
sub
ficoms
inc
mov
xorb
or
arpl
fidivs
stos
mov
adc
test
out
gs
lahf
call
ret
sbb
mov
fwait
and
xchg
mov
pushaw
in
loopne
push
pop
out
and
xor
sub
fsubl
ds
lret
xchg
clc
dec
add
pop
into
js
addr16
leave
inc
fisubrs
or
jo
out
xchg
je
repz
push
movsb
out
cs
dec
inc
repnz
jmp
jne
inc
sbb
cltd
lret
sbb
idivb
gs
test
shll
or
xor
push
cs
sbb
mov
andb
dec
push
jmp
dec
or
mov
imul
cltd
insl
sub
lods
mov
or
movsl
fidivl
inc
orb
sahf
adc
add
dec
jmp
mov
xor
decb
push
adc
outsl
mov
fidivrl
and
mov
jnp
or
cld
ds
gs
in
rolb
pop
push
and
mov
hlt
ja
out
pop
loop
pop
inc
subb
test
fucomp
daa
or
je
lcall
mov
imul
xorl
mov
mov
shll
stos
in
fidivrs
rcl
addr16
in
jo
lock
cmp
mov
mov
sti
fdivr
shrl
jb
pop
addb
sahf
hlt
inc
dec
js
pop
loop
mov
xchg
lret
xchg
and
dec
push
lahf
ret
out
out
pop
es
fbld
cltd
subl
pop
fisubrl
pushf
add
inc
hlt
push
xor
inc
test
adc
mov
aas
jns
pop
cli
dec
inc
add
sahf
jle
push
push
and
mov
popf
fcompl
mov
lahf
xor
dec
add
sbb
push
push
push
imul
pop
jae
nop
ss
cmc
int3
arpl
std
add
push
je
xor
out
in
fnstenv
push
xchg
test
or
pop
fwait
lds
popa
inc
jge
insb
sub
or
add
or
sub
and
cs
aaa
jo
sbb
jbe
pop
mov
adc
fs
aaa
pop
pop
mov
adcl
lds
mov
out
dec
imul
lahf
mov
dec
pop
mov
test
adc
sub
pushf
pop
int
incl
sbbl
and
popa
push
dec
mov
mov
repz
into
fwait
xor
scas
inc
ficoms
repnz
inc
jb
fs
jge
cs
addl
or
or
pop
or
pop
fs
cmp
stc
add
sub
leave
dec
ljmp
lea
cmp
and
into
jne
jnp
xor
loope
mov
fisttps
push
leave
adc
ret
xchg
adc
or
loop
mov
jb
dec
xor
inc
or
das
andl
shl
mov
dec
test
adc
int3
mov
adc
mov
daa
mov
xchg
jae
xchg
cs
sahf
sub
imul
ret
sarb
adc
mov
shll
loope
filds
push
ror
push
lods
outsb
sarb
dec
push
fidivrs
inc
and
sbb
dec
and
stos
insl
sbb
out
dec
sbb
test
jb
mov
test
dec
sub
mov
div
inc
jo
cmp
xor
das
enter
mul
lea
mov
aaa
jge
sbb
pop
cmc
shll
inc
mov
or
imul
pop
mov
mov
sbbb
jmp
inc
adc
sbb
xor
outsb
mov
push
xlat
repnz
fcoml
jg
jg
sub
dec
dec
or
mov
xchg
std
sti
lock
dec
or
rorb
jmp
and
mov
cmp
jp
mov
insl
xchg
add
pop
dec
sbb
out
jns
push
lret
outsb
repz
in
cli
popf
jecxz
xchg
sbbb
adcb
adc
scas
xchg
sbb
inc
inc
loopne
cmpsb
push
out
sub
stos
adc
xchg
dec
xor
movsl
sub
mov
arpl
push
js
sahf
adc
cmp
lock
or
sbb
adc
fwait
sbb
lahf
aam
jg
inc
or
pushf
dec
mov
jg
data16
or
sub
adc
jecxz
push
and
loope
adc
mov
testl
mov
jns
add
inc
dec
ljmp
rcll
cmpb
leave
dec
enter
pop
mov
arpl
mov
lock
cmc
xor
fwait
mov
xor
mov
mov
xchg
in
rolb
jb,pt
rclb
cld
pushf
add
aas
cmp
ds
stos
lods
loop
arpl
lahf
sub
sbb
fidivl
fmull
addb
mov
test
int
pop
xchg
cmp
mov
lods
cmc
shl
insb
sub
aam
sub
out
fstpt
mov
nop
sbb
sbb
mov
xchg
in
dec
rolb
test
das
jge
js
insb
mov
mov
test
mov
js
int
sbb
push
cld
add
sbb
sub
adc
jnp
xchg
cmp
int3
in
adc
sbb
dec
mov
sub
jg
xor
cli
add
ficompl
mov
pop
stc
jae
adc
mov
aaa
test
and
shlb
scas
xchg
test
pushf
pop
add
lahf
test
add
int
movsl
mov
xchg
mov
out
jns
bound
clc
shlb
cmpb
incl
add
js
loopne
sub
xor
mov
mov
mov
kmovb
stos
iret
adc
jns
ret
les
pusha
pop
out
test
std
inc
movsl
stos
popf
xor
cmc
lret
out
xor
push
imul
fistpl
sbb
sbb
call
popa
fcoms
les
pop
test
das
test
ficompl
lret
pop
inc
loop
inc
jo,pt
stc
mov
sbb
jecxz
pop
aam
jbe
pop
cmp
andb
jno
repz
in
xchg
aad
movb
adc
aad
mov
in
mov
push
xor
gs
and
das
in
or
inc
push
insb
int
pop
sbb
jo
lea
xchg
jecxz
inc
xchg
cmp
push
push
dec
mov
popf
mov
adc
pop
pop
adc
mov
faddp
adc
lea
xor
mov
dec
mov
test
xchg
mov
jecxz
addl
scas
inc
das
mov
or
mov
fimuls
or
sbb
jb
bound
les
loope
idivb
lahf
ret
mov
outsb
roll
inc
mov
test
jbe
mov
or
mov
sbbl
sbbb
jp
sub
imul
lahf
fildll
mov
xchg
clc
add
xchg
mov
int3
sbb
mov
sbb
out
push
xchg
dec
push
lock
clc
sbb
cs
jne
in
icebp
push
loope
mov
mov
sbb
jno
jns
dec
mov
push
xchg
daa
xchg
pop
mov
rdmsr
test
fmuls
lods
xor
mov
out
push
lods
fsubrs
lods
test
fiadds
lods
mov
lahf
or
aas
int
adc
lahf
pop
ja
cmpb
in
and
pop
cmp
adc
sub
push
fldl
mov
xor
sub
mov
jge
and
shlb
mov
mov
idivl
pop
sub
mov
into
es
xchg
adc
push
pop
sbb
jnp,pt
out
sbb
clc
hlt
push
pop
cld
fstpt
ror
add
aad
js
fidivrl
push
mov
fistpll
mov
les
sub
adc
mov
bound
into
das
idivb
adc
cli
cwtl
adc
dec
and
dec
sub
dec
mov
and
rclb
orl
push
and
sahf
loope
les
adc
mov
push
mov
push
arpl
xor
cmp
and
scas
push
pop
repnz
bnd
mov
es
sub
inc
jmp
gs
mov
ret
pusha
ret
jnp
sbb
stc
fisubs
repnz
out
and
xor
repnz
or
ffreep
dec
push
lods
dec
pop
add
pop
subb
cmp
mov
call
pop
sbb
int3
xchg
xlat
mov
pop
subb
cld
jae
test
push
mov
jge
mov
xlat
orl
dec
rorb
test
xchg
xor
jp
fdivp
ss
mov
test
mov
cli
pop
pop
mov
cmc
mov
test
push
pop
inc
faddl
xchg
int3
jl
push
daa
jp
popf
divb
das
dec
dec
xor
jg
lock
xchg
mov
ffreep
shrb
jecxz
test
outsb
mov
fnstcw
es
js,pt
loopne
xor
push
add
popl
jge
cmp
push
sahf
push
loop
mov
shlb
xchg
mov
outsb
cmp
leave
aam
in
dec
js
pop
jbe
outsb
mov
ljmp
xchg
sbb
sbbb
xor
loop
inc
sub
loope
or
fwait
sbb
cmp
or
decb
mov
dec
push
cwtl
js
sub
pop
mov
adc
out
shrl
add
popa
mov
test
aaa
js
scas
or
sti
xor
cld
push
rorb
dec
std
sbb
cld
aas
mov
pusha
imul
sbbl
cmp
out
pop
sbb
cmp
xchg
inc
mov
pop
cmp
xor
mov
pusha
mov
inc
mov
orb
add
int3
mov
xchg
leave
push
mov
lret
sub
sbb
repz
mov
sub
xchg
sahf
arpl
or
mov
cmpb
lahf
mov
mov
dec
or
addl
jmp
sbb
inc
mov
dec
adc
sbb
adc
imul
aad
jnp
mov
fsubrl
mov
mov
fldt
or
arpl
test
sbb
rcr
sbb
jmp
popf
dec
ret
push
outsl
in
dec
add
sbb
cmc
push
pop
lahf
punpcklbw
jns
in
fldenv
test
xchg
lret
cli
in
cld
data16
push
jge
mov
test
fsubrl
hlt
mov
in
cli
pop
popa
mov
push
pushl
cs
mov
cmp
je
sbb
mov
std
dec
fld
mov
push
push
mov
ljmp
and
dec
les
in
cmpsl
push
fidivl
cld
xor
push
jg
sbb
std
push
aas
cmp
stos
jmp
pop
mov
mov
rcrb
sbb
cmp
sbb
mov
push
xchg
jge
xor
je
inc
les
sbb
and
repz
js
or
inc
in
sub
test
js
xchg
inc
cmp
xchg
and
test
sub
or
jge
and
jae
test
xchg
add
mov
mov
es
ss
loope
sub
mov
shr
outsb
xor
xchg
lea
mov
sub
out
out
pusha
das
shrb
push
test
mov
ljmp
incl
sub
outsb
mov
cmp
sub
aas
xorb
cmp
adc
mov
das
jbe
sub
xchg
movsb
bound
pushf
pop
scas
test
sbb
mov
fwait
rorb
dec
push
sbb
jg
and
mov
dec
dec
jmp
pop
pop
sarb
lods
mov
out
scas
jp,pn
mov
adc
or
daa
jmp
xor
jecxz
xchg
add
dec
jbe
sbb
sbb
or
lret
sub
out
test
mov
out
cmc
dec
test
pop
mov
adc
cmpsb
jl
pop
xchg
sub
stc
sub
jnp
leave
xchg
dec
inc
fisubl
ret
inc
fdivrl
es
jecxz
sub
sarb
push
and
jge
out
jbe
repnz
inc
adc
mov
xchg
rcll
dec
jo
subl
into
mov
scas
lret
xor
fcomps
push
lods
leave
idivl
mov
stos
mov
iret
lods
mov
test
in
fistps
inc
addr16
dec
mov
loope
and
mov
flds
fldcw
xchg
xor
dec
roll
jl
or
dec
into
mov
or
gs
hlt
xchg
mov
cmp
and
fwait
add
cmpsl
adcb
xor
mov
dec
pop
xchg
pop
dec
test
and
mov
push
jl
fisttps
push
and
push
addr16
xchg
jecxz
ja
out
cmc
jge
fistpl
pop
sbb
or
and
pop
mov
lahf
test
cli
dec
les
lea
sbb
das
inc
cmp
push
dec
ljmp
mov
loope
aam
test
aas
jnp
call
test
dec
sub
push
leave
add
test
rorb
mov
jo
out
add
nop
pop
sbb
add
mov
mov
and
mov
push
fwait
mov
cmpb
push
fbld
pop
sbb
mov
pop
sahf
push
xor
jnp
sbb
xor
andb
mov
mov
sbb
dec
pop
lock
pushf
pop
imul
inc
add
dec
push
ljmp
mov
push
mov
aad
pop
pop
mov
into
sbb
roll
inc
pushl
shll
push
loope
or
xchg
outsb
lods
dec
sbb
mulb
sbb
test
inc
int3
mov
mov
xor
and
xor
sbb
mov
outsl
push
imul
mov
push
xchg
fiaddl
xchg
lret
or
out
or
stc
out
scas
stos
jmp
mov
shlb
sbb
dec
jmp
mov
inc
sbb
adcb
push
out
sbb
inc
and
push
mov
mov
fwait
jno
into
pop
push
inc
subb
and
xor
cld
insb
adc
or
or
or
outsb
out
in
in
dec
jnp
mov
cmpsb
es
sub
xor
xor
sti
xor
sahf
adc
rcrl
mov
xor
xor
and
xchg
push
mov
mov
sbb
and
or
dec
fwait
jne
sub
pusha
mov
or
sbb
mov
sarl
cmpb
ja
loope
fwait
sbb
push
adc
mov
xor
in
fstpl
fcmovnb
xchg
mov
mov
push
or
fiaddl
dec
inc
in
push
mov
add
dec
gs
and
sbb
es
and
leave
addr16
fisubs
mov
xchg
pop
lea
jns
ja
jo
andb
shr
imul
insb
adc
xor
das
leave
rolb
jns
push
leave
out
int
int
adc
pushf
int3
inc
rclb
mov
out
sbbb
xor
or
test
pop
jmp
lods
js
pop
into
sbb
in
pop
sbb
push
mov
pop
add
dec
out
outsl
mov
jae
adc
sbb
mov
ss
lds
jo
sbb
fistpl
adc
cs
xchg
sbb
pop
sub
xor
popa
mov
jmp
shrb
push
inc
leave
sbb
sub
or
cmp
fsts
out
sbb
rolb
push
cld
fld
mov
cld
sti
adc
filds
orl
jg
out
xor
push
mov
ljmp
sub
into
lret
iret
in
rclb
in
lods
cld
adc
pusha
outsb
aad
sahf
lret
aam
cmp
in
std
stos
call
or
and
pop
mov
in
sub
mov
and
movsb
popa
das
mov
pop
leave
sbb
or
inc
sti
insb
jg
push
in
scas
std
lcall
xor
mov
and
addr16
fstl
xchg
push
cmpsb
cmp
cmp
lods
pop
cmp
jg
xor
jmp
fildll
outsb
xor
pop
pop
test
ljmp
or
mov
aad
sti
mov
jg
jnp
es
jmp
dec
xor
jle
cs
cmp
inc
xor
rolb
jge
es
jne
lods
or
jnp
xor
push
xor
fcoml
push
xor
sub
out
push
push
xchg
and
nop
pusha
and
xchg
add
mov
push
inc
xor
push
test
cmp
imul
push
aam
sub
repnz
repnz
jge
pop
bound
and
pop
dec
jl
add
mov
mov
sti
jnp
and
test
adc
mov
adc
mov
or
je
xor
out
mov
mov
loop
mov
xor
pop
dec
fsubrl
aam
je
or
xchg
in
out
lahf
imul
cmp
aad
mov
xchg
loopne
xor
jmp
das
mov
dec
ror
lret
fimuls
mov
rolb
cltd
pusha
popa
out
xor
sbb
sbb
cmpsb
dec
pop
cmpsb
test
jmp
sub
or
test
scas
cmp
repz
jb
mov
mov
loopne
add
sub
add
aas
sbb
adc
test
xchg
test
fmul
jp
cli
sahf
fwait
mov
jp
pop
xchg
mov
jo
mov
in
push
lcall
ret
aas
test
cli
sub
arpl
adcl
add
clc
das
shl
repz
push
sbb
cmp
push
adc
add
mov
sub
and
and
xor
movsl
repz
dec
add
fdivl
mov
in
das
test
xor
jg
xchg
and
mov
jnp
xor
pop
xor
push
js
or
push
mov
cli
push
repz
xor
sub
cs
pop
cmovge
insb
and
mov
mov
stc
push
movsl
stc
jmp
sti
repnz
sub
pusha
xor
sub
into
stos
jmp
sbb
sub
or
add
or
push
rcll
or
gs
js
out
loopne
fsts
cmp
test
out
inc
cli
xchg
gs
xchg
mov
in
mov
xchg
push
mov
adc
dec
out
inc
lret
pop
dec
push
sbb
popa
mov
xchg
jnp
mov
mov
iret
xor
movsb
xchg
fildl
mov
ret
mov
jg
xchg
mov
mov
shr
jo
in
inc
jl
mov
inc
fbstp
pop
adc
jb
sbb
daa
jnp
sahf
jno
dec
das
dec
and
pushf
cs
cwtl
bound
or
and
leave
add
xchg
cmpsb
lret
jno
shl
mov
adc
lcall
dec
test
cmp
fwait
lods
xor
test
cltd
dec
xchg
inc
jb
xor
cmp
xchg
cmp
push
dec
mov
push
push
sarl
pop
push
mov
xchg
mov
pop
xchg
sbb
fldenv
fistps
and
jg
mov
fxch
test
mov
int
shlb
stc
out
mov
sti
dec
cs
xor
mov
lcall
adc
or
repnz
xor
xlat
dec
add
rcr
loop
add
addl
bound
sub
std
sahf
sbb
shr
and
jle
sbb
or
bound
imul
sub
mov
sahf
cld
fs
sub
imulb
sub
repnz
inc
scas
push
je
stc
leave
add
cmp
adc
xchg
dec
and
out
jnp
les
test
sbb
dec
in
push
jmp
in
cmp
js
push
in
hlt
lea
nop
jmp
pop
fldenv
fidivrl
pushf
fsubrl
mov
mov
subl
arpl
test
inc
sub
sub
cli
js
aad
sub
int
sub
push
sub
mov
mov
sbb
rorl
repnz
mov
jmp
sub
mov
lds
icebp
fcmovnbe
in
outsl
idivb
in
push
cld
dec
in
int
std
test
inc
jg
mov
mov
into
lods
nop
mov
sub
pop
lea
or
inc
jge
cmpl
test
stos
cli
jg
fiaddl
fwait
push
pop
and
fldcw
fists
jmp
lds
pushf
jle
das
repz
stos
sbb
stc
stos
mov
mov
jle
mov
and
dec
and
jnp
pushf
mov
ret
js
adc
inc
xor
in
dec
pushf
divb
test
mov
jno
push
jle
popa
cmp
leave
scas
push
ja
repz
mov
cmp
xor
pop
mov
or
insb
push
dec
mov
cmpsb
pop
faddl
data16
fildll
adc
cs
mov
cli
leave
mov
pop
mov
xchg
das
inc
ficomps
test
mov
jb
lods
outsl
je
mov
inc
add
aad
xor
rcrb
repnz
push
adc
cli
outsl
push
mov
jg
mov
ljmpw
xchg
ds
clc
fimull
jmp
clc
fsubs
mov
push
adc
xchg
scas
mov
mov
ja
xor
outsl
outsb
rcll
jmp
xchg
or
cltd
cli
xor
jecxz
inc
jmp
mov
in
pop
cmp
xchg
ljmp
dec
aam
movsl
dec
cmp
and
inc
sub
push
insb
push
test
jb
in
or
stc
push
shlb
fxch
sub
inc
xchg
punpcklbw
dec
fidivl
imul
mov
mov
arpl
outsb
push
mov
cli
mov
pop
test
push
outsl
pop
in
fwait
out
xchg
mov
add
test
sub
dec
rcr
aas
pop
stc
ret
stos
imul
and
repnz
imul
loop
lods
pop
push
xor
push
lds
shrl
mov
jmp
mov
dec
xchg
inc
mov
mov
subb
out
mov
pop
jg
movsl
repnz
push
xchg
stos
and
inc
jno
fildl
sbb
out
fwait
pop
jmp
sub
jg
add
mov
xchg
push
mov
cmp
push
aas
nop
sub
shl
popl
rolb
or
stos
stos
leave
pop
mov
push
sub
or
adc
repz
dec
gs
stc
add
sub
adc
mov
lea
fwait
inc
mov
pop
xor
fmull
inc
or
inc
inc
mov
mov
jg
into
fdivrs
inc
pop
inc
xor
out
jle
or
daa
cmp
ffree
sub
pop
push
movsl
dec
fldt
pop
shll
cmp
loop,pt
pop
xor
scas
outsb
aas
lret
popa
gs
nop
stos
dec
arpl
pop
pusha
cld
jne
xchg
lahf
and
loope
dec
inc
lahf
sahf
pop
sub
stc
add
sete
test
scas
jb
add
pop
mov
cmc
xchg
and
mov
std
je
mov
dec
push
add
in
mov
dec
jle
fnsave
add
mov
pop
movb
jno
jo
jno
je
push
lds
and
jno
jmp
mov
or
mov
imul
jne
push
out
std
fcmovne
inc
sahf
or
adcb
sbb
inc
or
mov
jl
rorl
popa
mov
dec
push
ret
repnz
jl
bound
or
into
ret
dec
sub
mov
adc
push
mov
fadds
imul
sub
mov
fsts
mov
push
adc
pop
test
es
je
cmp
xorb
adc
xchg
pop
and
fisubrl
pushf
mov
dec
call
clc
or
dec
mov
test
xchg
push
or
push
pusha
add
mov
popa
out
sbb
dec
rol
fdivrl
xor
ss
pushf
pop
icebp
jp
xchg
outsb
add
and
adc
add
das
pop
dec
mov
sbb
push
xor
push
push
mov
fstps
adc
ret
push
out
and
or
js
pop
ret
xchg
das
push
insb
add
and
xor
push
stos
bnd
int3
pushf
cwtl
xor
aaa
seto
out
dec
mov
dec
inc
outsb
adcl
and
or
icebp
push
push
and
mov
icebp
adc
negl
xchg
sbb
mov
das
sahf
int
jle
mov
lahf
jb
stos
or
cltd
mov
adc
mov
js
es
scas
or
adc
mov
sub
pop
pxor
sbb
cmp
loop
dec
cs
sti
sub
ret
pop
mov
fmuls
xchg
lret
inc
jecxz
jecxz
dec
push
push
and
call
ljmp
xor
xor
aam
sbb
xor
push
mov
adc
push
daa
and
sub
outsb
jmp
mov
jb
int
mov
shrb
xor
sub
dec
xchg
push
ficoml
aam
dec
jns
xchg
or
lock
and
sbb
imulb
pop
and
lds
mov
repnz
sbbl
in
repnz
mov
addl
push
dec
out
es
stc
lahf
adc
cmp
stc
jb
arpl
or
xor
xchg
pop
mov
fsubrs
xchg
out
movsb
and
test
adc
xchg
pushf
out
repnz
xor
in
shlb
sbb
jnp
dec
shrl
fcomp
pop
inc
flds
in
ljmp
lret
bound
xor
out
inc
push
cld
cmc
pop
es
inc
leave
jne
mov
clc
jnp
mov
adc
fs
sbb
sub
adc
leave
insl
pusha
inc
mov
adc
imul
dec
loop
repz
gs
inc
in
stos
and
stc
lock
stc
call
jmp
dec
add
rcl
aas
shrb
sahf
clc
and
or
stc
dec
dec
out
imulb
sub
out
xchg
sub
mov
es
test
jg
inc
dec
jmp
out
scas
add
xor
ret
mov
pop
sbb
stos
dec
lds
subb
ljmp
xchg
xchg
xchg
mov
xchg
xor
push
loopne
nop
inc
daa
icebp
ret
jg
cmpsb
call
jmp
clc
frstor
in
test
scas
xchg
scas
sub
or
sub
sarl
push
sbb
gs
aas
adc
leave
dec
push
pop
shll
xor
pop
rcll
push
cltd
nop
out
xchg
adc
mov
xchg
cltd
sarb
dec
loop
rcrb
sbb
mov
xchg
fcmovnb
addl
jg
xor
sub
das
ret
mov
fdivrs
shlb
xor
mov
push
mov
xchg
nop
jmp
into
insl
cmp
mov
fnstenv
sbbb
mov
pusha
lahf
lea
sbb
pushf
push
xorb
inc
jge
outsb
fisttps
or
mov
jae
test
jmp
and
push
pushf
jl
div
push
call
frstor
test
jg
pop
std
inc
fstpt
lock
cmp
mov
push
push
out
sub
fwait
push
mov
test
imul
into
mov
cld
or
sub
jecxz
jl
scas
std
sub
sbb
pop
pop
xchg
pop
jl
jl
call
jge
pop
mov
cmovg
test
dec
ffree
pop
outsb
jle
insl
out
out
outsb
cwtl
fs
cmpl
cld
xchg
mov
mov
shlb
mov
cmp
testb
into
sbb
pop
push
cmpsl
mov
sahf
mov
ja
mov
or
sbb
mov
mov
mov
bound
js
lahf
orb
sub
mov
pop
jae
pop
xor
dec
pushf
mov
int
mov
xchg
mov
sbb
imul
jno
aas
pop
fdivrs
push
js
shl
sar
jmp
jge
xchg
push
sbb
out
xchg
je
fwait
push
stos
lods
sbb
inc
inc
sub
or
pop
pop
cs
into
subb
stos
lret
inc
pop
jmp
cmp
adc
pop
lret
daa
pop
inc
addl
cmp
in
hlt
rcl
clc
inc
mov
stos
mov
adc
test
pop
test
or
cmpsb
sub
xchg
mov
mov
mov
cmp
lcall
lret
pop
or
or
pusha
test
mov
fistpll
test
push
push
mov
les
and
push
push
pop
rorl
pushf
jg
nop
in
fs
roll
out
into
sbb
xor
and
or
jns
test
adc
imul
mov
mov
je,pt
es
scas
out
push
aad
loopne
cli
js
sbb
mov
jns
xchg
loop
dec
jbe
adc
mov
sub
jnp
xor
sub
adc
insl
shr
sahf
cmp
inc
and
or
loopne
push
dec
mov
inc
ret
mov
inc
js
lods
push
mov
xor
loope
cmp
bound
sbb
sbb
xchg
stc
xchg
add
push
sbb
clc
imul
push
insb
mov
sbb
jle
push
out
mov
xchg
sbb
jno
mov
inc
xor
out
nop
imul
clc
dec
mov
inc
jl
daa
jb,pt
or
out
test
test
jp
test
sub
ret
add
stos
xchg
les
pusha
or
inc
xchg
pop
loope
xchg
aad
sub
andb
and
xor
and
or
repz
xchg
push
mov
inc
aaa
sbb
or
loop
cmp
mov
popf
les
adc
mov
or
stos
sub
fimull
test
mov
sahf
inc
dec
ret
mov
cltd
shll
inc
test
push
lds
cltd
jmp
sbb
mov
fs
mov
xchg
ret
mov
or
jns
scas
and
xchg
lret
adc
inc
cs
sar
in
ds
xchg
sub
shl
mov
fwait
inc
in
mov
sbb
xchg
movsl
int3
cmpsb
pop
xchg
mov
in
jbe
ret
ret
mov
inc
sub
cmp
fiaddl
add
lds
push
mov
xchg
ret
xor
out
or
pop
imul
cmp
in
insb
jg
fstpt
ljmp
inc
pop
push
lods
adc
test
jno
mov
rorb
sub
adc
mov
jno
lods
fsubrs
test
cmp
push
outsl
jge
mov
jge
and
ficoms
jns
adc
xchg
jl
stos
push
lods
xchg
rcl
pop
pop
popa
or
jo
cltd
dec
add
mov
inc
incl
jno
ljmp
sbb
dec
movsb
or
ljmp
add
jge
loop
add
mov
and
mov
cmp
mov
in
imulb
mov
ret
imul
ja
faddp
ja
jmp
test
cmp
push
mov
pop
adc
test
pop
xor
out
int3
orl
mov
test
sbb
ret
pop
inc
adc
add
fdivl
sub
ret
sbb
movsb
mov
int
jge
es
aas
mov
add
sbb
cld
pop
or
mov
js
or
pop
add
pop
icebp
mov
dec
dec
lahf
ret
jge
sub
mov
xorl
mov
test
insb
inc
and
lock
lea
insb
inc
sbb
mov
dec
cmp
icebp
jle
xchg
mov
insl
add
add
ror
dec
push
mov
js
lret
xchg
xor
cmp
push
mov
addb
mov
jl
inc
mov
rcr
or
addb
add
sbb
test
dec
movsb
and
test
mov
push
jl
dec
mov
filds
sub
test
dec
push
jg
mov
jmp
dec
jge
out
dec
das
jmp
aas
push
adc
loop
or
icebp
sbb
sbb
add
aas
test
in
cmp
cwtl
les
repnz
and
sbb
jge
ror
push
sahf
push
adc
fisubs
add
jb
test
bound
cs
push
mov
fwait
adc
int3
adc
scas
int
and
or
mov
dec
push
jne
xor
add
test
addr16
mov
mov
sub
push
jnp
xchg
jl
and
mov
rcrl
sub
sub
mull
in
hlt
out
dec
pusha
out
pop
jmp
and
xchg
cmp
and
pop
push
faddl
jecxz
test
insl
pop
mov
stc
or
dec
xor
pop
mov
inc
and
cmc
cmpb
push
cmpl
xchg
rcrb
in
into
insb
mov
jb
insl
imul
mov
lcall
mov
flds
and
daa
add
jb
pop
push
inc
out
push
xchg
jecxz
std
lcall
inc
daa
mov
sub
mov
rcr
out
xchg
mov
jmp
mov
aas
popl
daa
adcb
mov
leave
cmpsb
or
test
imul
dec
or
adc
jg
leave
jle
add
mulb
add
push
mov
adc
das
decl
mov
dec
popa
cmpsb
sbb
mov
js
arpl
cmpsl
aas
inc
dec
xorb
jp
daa
pop
mov
lds
pop
mov
notl
mov
cmc
xor
mov
mov
ja
test
and
dec
daa
or
in
jle
rcrl
mov
cs
pop
and
cli
push
inc
mov
roll
out
push
faddl
icebp
nop
int
or
sbb
aad
mov
dec
mov
jnp
test
xchg
jle
in
mov
addb
jae
js
out
add
notl
jle
sbb
mov
push
pop
aad
mov
js
push
faddp
dec
mov
out
and
es
or
or
test
mov
iret
mov
push
hlt
xor
cmc
fildll
call
sahf
add
push
pusha
pop
mov
cmp
into
fmull
popa
out
sahf
push
push
iret
add
movsl
decl
cmp
push
sub
push
je
mov
mov
into
and
addr16
and
les
subb
sub
push
mov
sub
cmpb
or
lds
ljmp
xchg
xchg
ret
xlat
adc
in
aas
xor
sbb
inc
test
sbb
add
enter
inc
mov
or
push
pop
sub
icebp
mov
inc
dec
sbb
mov
smsw
sbb
dec
repz
mov
pop
cli
dec
lds
dec
dec
dec
lods
add
fisttps
mov
mov
shll
jb
or
inc
xor
mov
jnp
nop
and
mov
popa
ret
inc
ljmp
test
in
imul
push
shl
test
shlb
loopne
iret
and
adc
dec
pop
pusha
push
icebp
gs
adc
jg
sarl
and
cmc
lods
nop
adc
sbb
jb
mov
sti
xchg
push
lods
add
and
fistpll
cltd
rcll
iret
leave
fisttps
mov
shr
mov
cmp
sub
mov
jp
dec
fistpl
xor
or
pop
mov
inc
inc
rorl
push
pop
push
pop
xor
fbld
cmove
add
ret
sahf
or
adcl
push
add
xchg
cmpsl
mov
cli
adc
lock
add
stc
jg
dec
test
or
pop
mov
mov
repnz
or
insl
in
out
push
inc
dec
mov
push
xchg
ss
imul
pop
int
and
dec
xor
cltd
movsl
mov
aaa
popa
out
jo
xchg
xor
jno
out
sbb
cmp
lret
lea
lret
andb
adc
je
ret
mov
dec
push
dec
push
aas
cmp
push
cmp
xor
fisttpl
nop
mov
mov
test
mov
mov
gs
jbe
dec
or
add
dec
sbb
xor
push
int3
lods
push
sub
into
push
mov
inc
lea
or
push
jae
faddl
pop
das
inc
push
push
inc
loope
stc
cmp
je
sbb
out
jg
dec
push
jp
inc
mov
sub
cmp
out
les
scas
xchg
stos
mov
into
jmp
dec
test
mov
out
cmp
sub
adc
xchg
test
inc
push
mov
les
pushf
lods
data16
cltd
jge
xor
sub
ret
sbb
loope
outsb
pop
xchg
xor
ja
pop
enter
ss
test
andb
xchg
pop
scas
test
xchg
cmp
mov
or
inc
int
divb
gs
popf
popa
scas
stos
sbb
dec
pop
rcrl
int3
jle
push
lcall
bound
cmp
cmpb
mov
xchg
push
jg
push
sbb
enter
js
mov
jl
aam
mov
jns
testb
cmpb
fwait
data16
xchg
out
test
mov
movsl
xchg
imul
mov
sub
or
xor
bound
les
cmpsl
daa
dec
js
insb
cmpsb
flds
in
repnz
sbb
cmc
das
jmp
push
mov
out
pop
paddd
dec
xor
data16
inc
repnz
pusha
data16
lds
xchg
iret
pushf
sbb
adc
sub
pop
sahf
into
pop
and
int3
adc
ds
nop
jmp
mov
xor
int3
out
dec
subb
mov
test
push
and
mov
add
dec
inc
aam
sarl
or
jmp
sbb
test
push
ret
lcall
int3
cwtl
pushf
mov
xorb
stc
add
or
cmpsw
and
jns
loop
jns
jle
dec
negb
mov
jmp
xchg
divl
lret
push
fnstenv
js
sub
dec
cmpsb
fwait
xor
adc
shll
out
jo
dec
cmp
fcompl
rolb
push
test
les
jmp
pop
andl
pop
movsb
clc
push
xor
jns
sbb
imul
loop
repnz
mov
inc
jbe
mov
cli
leave
inc
ror
shl
xor
ret
outsl
aas
fwait
jb
std
dec
sahf
mov
ss
jge
fistps
and
sub
dec
lahf
jle
andl
cmp
roll
xchg
les
cli
ficoms
fsubl
xor
pusha
mov
mov
cltd
fbstp
mov
test
cmp
pop
mov
imulb
sub
ret
bnd
in
in
mov
aaa
pusha
sar
mov
pop
jge
mov
divb
mov
insb
scas
xor
inc
mov
sbb
test
fldenv
inc
dec
cli
inc
notb
aam
and
or
stc
lea
repz
test
sub
aam
jb
clc
mov
adc
test
and
xchg
repz
ret
and
ja
gs
jb
je
ror
inc
push
push
lods
sbb
kmovb
dec
fldenv
add
and
pushf
outsl
fwait
adc
jg
adc
in
iret
jns
loop
add
stc
fisttpll
adc
inc
jmp
mulb
mov
inc
dec
dec
adcb
es
mov
sub
imul
mov
mull
fcmovnbe
mul
pop
mov
pusha
icebp
popa
ficompl
or
or
dec
adc
lea
and
fbld
cmp
pop
mov
out
mov
ret
mov
inc
fwait
sbbb
icebp
jb
cpuid
test
stc
fsub
sbb
cs
and
pop
adc
aas
dec
mov
mov
push
inc
push
nop
addr16
popf
rorl
or
inc
in
popl
or
and
push
pop
pop
loop
sub
jbe
mov
dec
jbe
gs
fnop
ret
ret
aad
jge
push
adc
movsb
pop
and
dec
pop
inc
in
jmp
daa
icebp
xchg
scas
inc
xchg
in
dec
mov
sbb
cmpsb
sti
pop
repz
xor
and
in
outsl
nop
subb
lds
out
repnz
int3
cmpsb
cmpsb
fdivrl
jg
flds
fmul
jmp
dec
xchg
lahf
or
ret
test
sub
or
xor
std
mov
nop
pusha
inc
loop
jne
daa
mov
insb
inc
inc
ffreep
ja
or
adc
test
cli
ds
pop
lds
xchg
jo
or
movsl
movsl
lahf
bound
add
sti
dec
jg
and
cmp
out
enter
jnp
inc
repnz
sbb
add
dec
jle
push
int3
push
pop
mov
inc
pop
and
xchg
adc
push
inc
leave
pusha
jo
inc
mov
repz
sub
mov
jle
inc
daa
xor
xor
fcompl
loop
sahf
inc
mov
lods
sbb
mov
test
mov
pop
xor
add
push
mov
mov
or
mov
les
pop
inc
sarb
cwtl
dec
ret
xor
sahf
out
or
mov
insl
xchg
push
and
popf
jge
jecxz
cmp
xchg
call
mov
dec
pop
aam
ficompl
sub
dec
mov
xor
in
add
lea
mov
sbb
arpl
mov
sub
mov
js
shlb
and
dec
imul
add
xchg
or
jg
mov
sbb
add
xchg
orb
ret
push
mov
test
daa
outsb
cmc
xchg
pop
or
sbbb
pop
fcmovb
sub
adc
sub
sub
or
jg
add
jb
in
add
xor
mov
inc
jns
mov
add
int
sbb
or
mov
push
sub
sub
jg
icebp
fwait
je
sbb
aas
loope
popf
sub
cs
js
arpl
mov
cmp
stc
mov
sbb
jecxz
mov
mov
add
ss
std
in
testl
or
repnz
pop
out
push
aam
call
jl
out
ss
and
cmp
movsb
insb
push
cmpsb
mov
pop
cs
dec
mov
mov
fistpll
clc
or
testb
xchg
mov
fiadds
push
mov
inc
pop
sbb
std
sbb
rcl
mov
inc
lcall
xor
pusha
inc
inc
out
cmc
fbstp
test
les
sbb
enter
push
scas
shlb
sub
mov
out
ds
mov
lock
and
sbb
push
loopne
mov
mov
jns
loope
addl
out
ljmp
push
loopne
leave
into
pusha
sub
push
les
xchg
sbb
test
lcall
push
das
test
lret
nop
jp
push
ret
cmpxchg
dec
dec
in
outsl
sbb
stos
inc
imulb
mov
loop
add
imul
sqrtps
repz
sub
sbb
cmp
jo
fmul
add
loop
daa
jmp
push
icebp
sbb
dec
out
das
call
push
sbb
loope
add
pop
dec
push
mov
pop
imul
je
data16
adc
arpl
add
mov
xchg
ror
fwait
xchg
shll
sbb
or
je
stos
and
cs
in
mov
xchg
mov
scas
adc
fisttpll
je
rorb
xchg
sbb
jl
les
dec
lods
mov
arpl
dec
dec
clc
or
push
test
jecxz
fwait
lea
dec
pop
push
push
aas
mov
out
daa
clc
dec
fwait
test
dec
adc
lcall
ret
frndint
dec
maskmovq
mull
jmp
int3
out
cld
rclb
ret
sbb
loopne
dec
ja
jbe
outsb
data16
push
cmp
sub
mov
test
sub
mov
jno
pop
mov
cmp
decb
inc
mov
insl
jmp
in
fs
push
mov
jnp
push
js
insb
dec
push
mov
inc
std
icebp
mov
jg
push
mov
sub
orb
out
cmc
fdivl
cmp
dec
mov
mov
js
lahf
xchg
or
mov
sbb
inc
out
ret
mov
sub
int
repnz
adc
cmpsl
mov
call
xchg
test
mov
rcll
inc
test
sbb
rorb
out
push
pop
xor
leave
and
dec
test
push
inc
pop
jl
pushf
push
jne
xchg
mov
dec
sub
adc
test
gs
pop
rorb
jnp
mov
xorb
push
enter
jbe
pop
cmpb
push
je
clc
es
divb
loopne
xchg
push
test
jge
jne
sub
mov
xchg
out
in
dec
lds
push
outsl
test
es
cltd
push
inc
add
push
cltd
and
push
mov
mov
sub
and
lahf
test
xchg
lods
pusha
push
jecxz
ja
test
jns
iret
fbstp
lds
and
ret
xor
insb
or
icebp
enter
les
xor
mov
imul
fwait
mov
sbb
mov
xchg
inc
jmp
or
int
out
inc
and
or
das
sub
hlt
inc
xchg
test
cmp
clc
dec
idivb
push
jne
push
lds
jg
ficomps
leave
mov
sarb
outsb
xchg
inc
call
push
pop
push
mov
sbb
adc
pusha
shl
mov
test
pop
clc
inc
inc
lds
sub
in
pop
mov
into
mov
outsl
aam
mov
aad
sub
mov
inc
mov
inc
jno
add
mov
push
test
jmp
jo
sbb
sub
repz
xchg
fs
in
jae
sbb
push
icebp
sbb
scas
outsb
cmp
push
and
jmp
addb
mov
push
jl
sahf
sbb
test
jb
push
cld
push
pusha
mov
out
jg
movl
jecxz
lods
jge
notb
out
mov
aas
fisttpl
arpl
lock
mov
test
mov
xor
mov
sbb
sbb
push
and
or
xchg
cmp
fld
xorl
ret
mov
adc
or
loopne
mov
and
dec
rolb
mov
pop
lea
imul
out
fs
mov
out
sbb
int3
stos
mov
test
xchg
jge
dec
jg
sbb
lret
xchg
and
stos
mov
jmp
jno
mov
loope
insb
cmp
jmp
andl
leave
bound
jl
or
into
insl
jns
adc
push
data16
movsb
push
dec
push
adc
mov
out
sahf
sbb
sub
pop
pusha
mov
sbb
fcmovbe
fdivrl
fwait
adc
hlt
std
leave
mov
pop
and
push
adc
pop
mov
dec
cmp
mov
stc
stos
mov
jnp
ficompl
sub
scas
mov
cmp
jmp
lahf
or
out
repz
mov
dec
mov
jecxz
ss
push
jnp
fisubrl
push
mov
inc
dec
ffreep
lcall
les
divl
mov
adc
jecxz
dec
xchg
lods
les
out
pop
sub
cmp
popa
cs
scas
and
xchg
or
cltd
loop
pop
sub
je
outsb
add
dec
jmp
nop
inc
mov
sahf
cmp
test
push
adc
add
test
mov
mov
into
lods
stos
cmc
in
cmp
out
inc
pop
push
pop
cmp
ja
inc
add
jb
mov
dec
adc
popa
add
or
sbb
adc
cltd
stos
sub
js
mov
inc
jp
shll
adc
and
push
mov
lods
cmc
cmp
popl
leave
out
xchg
ret
push
sbb
hlt
jo
adc
pop
and
sbb
ret
test
arpl
sub
xor
push
push
pushf
jg
adc
shl
mov
cmp
pop
in
int3
or
enter
jnp
sbb
fdivrl
push
fwait
es
cltd
loop
rclb
sub
mov
lds
dec
and
xor
push
mov
loop
ret
gs
popa
jmp
out
shlb
xchg
pop
or
mov
call
fbld
pop
dec
cmpsb
in
push
das
jmp
xchg
in
push
sbb
lret
push
pop
nop
mov
int
dec
jge
dec
fs
jno
movsb
dec
mov
inc
and
xor
xchg
aas
test
sub
push
pop
sti
cmp
mov
pop
cmpsb
xchg
dec
ds
es
push
subl
or
dec
dec
push
xchg
sarb
cmc
jge
pusha
xor
scas
inc
out
cmc
sub
bound
jmp
clc
ret
jae
std
repz
pop
sub
mov
arpl
xchg
mov
sub
cmp
mov
dec
jp
jecxz
dec
inc
icebp
mov
pop
cmp
adc
mov
leave
mov
inc
cli
mov
dec
push
icebp
mov
xorb
push
pop
sub
aam
xchg
cltd
fwait
cmp
xchg
sub
cli
mov
sbb
cltd
inc
or
aas
out
not
fwait
cmpsl
ret
out
sbb
xchg
test
pushf
pop
jo
mov
mulb
push
mov
ret
lret
inc
ss
cld
cwtl
cmc
add
cli
jle
inc
mov
xchg
sub
incb
dec
subb
inc
or
test
movsl
sti
stos
push
and
aad
push
mov
rclb
pop
dec
fdivrs
push
mov
stos
filds
imul
mov
jmp
sbb
mov
test
test
push
cmc
adc
push
popf
ss
into
mov
or
lahf
pop
out
pop
sbbl
inc
xlat
mov
ss
movsl
dec
mov
fiadds
arpl
enter
ljmp
fdivr
shlb
cld
mov
test
mov
push
pushf
dec
loop
pop
push
jno
pop
fcoml
outsb
cmpsl
ljmp
insb
vpsllq
jo
mov
dec
dec
pop
mov
sbb
push
inc
enter
jno
jo
test
mov
sbb
pusha
idiv
jae
jmp
sbb
repnz
fiaddl
sub
adc
xor
jb
daa
push
ds
stos
insl
pop
out
sti
rep
mov
das
test
jns
xor
jl
push
xchg
jne
or
xchg
push
mov
outsl
je
mov
imul
subl
int3
jecxz
and
div
ja
enter
lds
outsb
push
sub
push
pop
and
add
das
sub
shll
in
lods
aam
outsl
mov
inc
ss
push
incl
in
xchg
fmuls
data16
outsl
mov
out
push
ss
sahf
and
cs
lahf
movsb
cmpsb
sbb
aam
out
rcrb
iret
pusha
lret
das
mov
pop
or
mov
lahf
or
sub
dec
sahf
negb
and
pop
jnp
ds
into
out
in
fisttps
xlat
cs
mov
movsl
xchg
mov
xlat
cmc
repz
pushf
leave
stos
mov
mov
xor
dec
push
mov
out
frstor
arpl
adc
pop
in
cmp
jne
xchg
or
repnz
dec
jl
loope
mov
bound
dec
dec
sub
or
xor
popa
add
test
fbstp
mov
mov
add
mov
test
adc
out
sub
mov
sub
jg
push
ret
lgs
les
sub
mov
mov
add
pusha
mov
xlat
mov
xor
cld
addb
test
iret
mov
test
jae
and
cmp
mov
cmp
adc
dec
xchg
ljmp
gs
mov
sub
push
insl
ljmp
cld
mov
or
je
mov
mov
insb
dec
dec
mov
test
aam
cmp
lock
pop
mov
ret
sub
pushf
cmp
out
mov
ret
and
out
mov
arpl
outsl
ljmp
loopne
scas
mov
inc
push
mov
pop
push
das
loop
jo
fnsave
sbb
adc
cmp
xlat
popa
lahf
int3
adc
out
cmp
and
inc
sahf
test
mov
push
mov
adc
xchg
out
int
mov
and
stos
dec
mov
repnz
clc
shrl
jnp
dec
xor
arpl
inc
pop
mov
push
jmp
push
cltd
fyl2x
dec
dec
rclb
jmp
addr16
push
scas
mov
xor
jb
insb
rcll
push
iret
jle
cmp
lds
inc
jbe
test
nop
es
pushf
sub
int
fisttpll
jl
clc
inc
das
mov
mov
fadds
mov
adc
bound
fidivl
sbb
mov
insb
add
cmp
mov
rcrb
rcr
icebp
jge
popa
xchg
xor
in
outsl
icebp
in
pushl
rorl
sub
cltd
xor
dec
push
test
push
insb
mov
loope
out
sti
fbstp
jmp
jnp
mov
stos
test
in
sbb
mov
call
and
and
inc
dec
es
mov
xchg
push
mov
push
je
cltd
mov
and
pop
or
out
outsb
sub
xor
movsb
push
xchg
pop
lds
sbb
scas
loopne
notb
mov
nop
pop
inc
daa
mov
jg
mov
cmp
push
bound
mov
dec
rol
cli
pusha
out
addb
call
xchg
in
mov
vmaxps
test
push
add
mov
popa
mov
cli
addr16
das
sbb
mov
or
aam
lock
adcl
mov
pop
dec
dec
mov
das
xchg
mov
xchg
push
and
lds
repz
jne
pop
xor
ret
and
out
ljmp
adc
mov
xchg
sub
sub
jno
dec
cmovle
nop
or
in
xchg
sub
lret
jecxz
mov
fiaddl
in
mov
inc
stc
lods
lahf
mov
cwtl
adc
test
repz
cmc
nop
ret
fcomi
push
mov
lahf
sub
jg
cmp
inc
fcomps
repnz
mov
pop
negl
daa
push
jns
xor
mov
xchg
inc
test
xchg
inc
sbb
test
mov
dec
inc
inc
xor
inc
fcompl
sbb
ret
into
xchg
sar
fldenv
jno
out
push
jl
sbb
xchg
push
shrl
or
sahf
ret
imul
addr16
dec
dec
mov
icebp
sbb
mov
ss
jg
dec
inc
or
fiadds
jmp
push
adc
pop
out
stc
dec
mov
test
lods
mov
dec
shrb
cli
mov
sbb
jbe
test
sbb
dec
out
lock
sbb
jp
add
inc
dec
loop
mov
mov
mov
test
dec
pop
loop
dec
outsb
mov
push
popf
iret
in
cltd
nop
es
inc
fs
test
add
mov
lds
scas
sub
cltd
xchg
jmp
add
push
es
cs
sarb
inc
cmpsl
inc
mov
loope
lret
std
jge
dec
std
and
xor
jmp
mov
fdivl
push
mov
iret
cld
imul
pusha
cmp
aam
fldl
cmp
inc
leave
stc
les
sar
scas
and
cld
mov
xchg
jb
or
loopne
cltd
lcall
sub
sub
aad
mov
nop
loope
sbb
inc
lods
nop
dec
outsl
imul
inc
loop
sub
scas
popa
mov
jno
fldl
jecxz
pusha
xchg
sarb
push
mov
out
mov
mov
jecxz
arpl
jmp
call
gs
jle
int
pusha
adc
inc
xor
xchg
mov
or
mov
cmpsb
jnp
mov
popa
stc
jecxz
nop
xchg
movsb
cs
lods
cltd
mov
jmp
pop
add
sub
adc
test
adc
push
xor
mov
mov
add
fwait
iret
sub
adc
sbb
loope
mov
sbb
xchg
fldenv
mov
popa
test
arpl
pop
jns
pop
fs
sbb
ret
sbb
push
lret
fcompl
cmp
cli
mov
jns
sbb
and
call
aam
int3
push
int3
cli
pushf
mov
mov
in
or
in
and
or
cmp
sub
rolb
lcall
ss
out
xchg
into
pop
gs
cwtl
xor
enter
test
popa
adc
jnp
mov
mov
mov
hlt
mov
jecxz
or
add
mov
adc
imul
pop
rcl
mov
push
inc
shr
adc
add
push
insb
mov
sbb
push
shlb
addl
outsb
add
and
stc
push
jmp
dec
bound
mov
add
loopne
leave
sbb
or
fisubrl
mov
addr16
xchg
dec
lock
mov
sub
or
orb
fimull
jo
outsl
out
mov
loopne
out
out
fdivrs
jmp
jg
shll
imul
leave
adc
fistpll
pop
pop
and
imul
and
cwtl
mov
out
add
sub
mov
rcrl
inc
cmpl
inc
pop
in
ret
sub
lods
sub
jl
push
repnz
push
and
rclb
pop
das
pop
leave
push
les
aas
xor
cmp
mov
lods
push
xchg
adc
dec
sbb
pop
mov
dec
mov
les
dec
repnz
scas
xlat
xchg
inc
xchg
inc
andb
and
jne
push
push
jmp
cvtdq2ps
xchg
push
mov
mov
dec
push
es
lods
lea
sti
test
fwait
das
mov
test
ret
fildll
ss
loop
es
jle
ss
fldt
shll
mov
into
in
es
mov
sbb
rcl
data16
mov
mov
testb
shlb
jns
and
jmp
stos
push
mov
loop
dec
push
mov
stc
sti
popl
jmp
ret
jg
push
jg
repz
cltd
rcr
sub
mov
mov
repz
jge
jge
es
icebp
hlt
test
out
rcrl
aam
mov
sub
mov
repz
mov
bound
je
cmp
imul
es
sub
incb
mov
loope
mov
push
test
jo
or
mov
sahf
rorl
mov
adc
test
inc
fdivr
mov
cmc
sub
dec
jo
jle
stos
jle
ret
mov
xor
repnz
daa
or
lock
fidivrs
das
add
mov
shll
dec
clc
decb
movsl
sub
outsb
roll
mov
push
xor
aad
dec
fcoml
lea
or
xchg
jg
push
lds
sbb
daa
cwtl
inc
test
into
lret
cmpb
bound
mov
jne
data16
mov
cmp
repnz
lds
std
jmp
int
test
out
add
jbe
test
jb
and
leavew
sub
mov
push
out
lea
dec
stos
out
test
adc
and
jns
inc
shrb
sbb
sbbl
or
adc
outsb
test
data16
ret
test
xchg
adc
roll
jo
fdivrl
cmp
nop
cld
xchg
mov
ljmp
cli
adc
mov
xchg
xchg
dec
loop
rcrl
push
iret
jg
test
or
push
mov
subb
out
orl
xchg
cwtl
enter
into
cld
sbb
mov
jmp
sahf
loop
fsubrs
jb
mov
inc
add
das
xchg
mov
and
pusha
fwait
xor
jmp
or
ret
sub
enter
lock
cmc
push
adc
out
out
ret
ret
xor
rcrb
popl
bnd
inc
pop
aam
sbb
xor
scas
in
subl
xchg
push
jb
xchg
push
shl
inc
and
or
test
nop
imul
jmp
jle
push
sub
das
mov
xchg
aam
mov
sarb
repnz
inc
inc
adc
xchg
je
cmp
dec
jl
mov
inc
cli
inc
mov
pop
push
dec
in
mov
out
ja
jae
repnz
repnz
les
andl
mov
xchg
insb
jg
add
shrb
jmp
xchg
pushf
inc
ljmp
nop
pop
or
lds
pusha
mov
xor
sahf
leave
pop
nop
test
xlat
lea
out
fcoml
negb
jb
test
lahf
and
jbe
jo
sbb
fnstenv
pusha
adc
lods
fwait
mov
cmpsl
jo
pop
loopne
jecxz
incb
aas
repnz
es
fstpl
ds
fxch
adc
mov
cmpl
into
pop
pop
jmp
orl
ds
icebp
nop
loope
or
out
insb
ds
in
xor
movsl
adc
cltd
xorl
cmpsb
aas
cmpl
fisubrl
adc
stos
jo
cmp
dec
movsl
test
rcr
or
dec
xchg
mov
sbb
rcrb
insb
adc
jmp
dec
jle
cmp
ljmp
add
pop
mov
fcmovbe
iret
mov
sar
and
mov
dec
fistpll
imul
sbb
ds
pop
inc
push
mov
scas
rol
and
jecxz
and
fldl
mov
cs
mov
sbb
push
mov
andb
rcl
adc
inc
ficomps
insb
mov
sahf
mov
add
xor
pop
lret
cmp
int
pop
inc
repnz
sbb
adc
xor
and
into
push
xchg
in
jmp
mov
test
dec
gs
ss
in
sbb
aam
test
adc
outsb
adc
mov
andl
push
and
xor
lock
jmp
shrb
mov
pop
push
mov
rorb
dec
or
js
add
leave
je
aad
out
mov
adc
lea
push
ret
loopne
in
test
rol
insb
lcall
in
repnz
out
into
mov
mov
inc
out
leave
push
clc
idivl
pusha
shlb
shlb
loopne
lds
popa
adc
cltd
addr16
inc
pop
cltd
shrl
ds
add
ret
mov
ret
mov
cmpsb
pusha
das
cmp
fnstcw
add
dec
cmp
mov
pop
jae
ds
fildl
and
lcall
out
adc
mov
add
xor
jp
dec
shrl
jno
sub
or
adc
inc
lret
test
bts
xor
je
sbb
jmp
pop
lea
jmp
shrb
pop
out
test
mov
movsb
mov
ret
push
cs
push
pop
aam
call
adcl
push
mov
dec
dec
xchg
frstpm(287
xor
fxch
push
or
in
shlb
es
adc
out
xor
mov
call
push
gs
and
inc
pop
movsb
mov
addr16
mov
push
mov
mov
mov
lds
das
out
loop
ret
cmc
push
sbb
imul
mulb
xor
dec
xor
aad
inc
out
pop
mov
fs
mov
test
neg
stc
sub
out
adcb
dec
sbbl
dec
test
push
cmc
bound
mov
adc
in
or
adc
mov
adc
negl
mov
stos
fdivs
inc
mov
fwait
xor
cmp
inc
lods
gs
pusha
out
pop
mov
data16
xchg
hlt
jg
shll
sub
jns
sub
dec
add
iret
cmp
test
pusha
icebp
mov
inc
sahf
loope
jno
add
mov
xor
push
inc
mov
loop
xchg
mov
repz
gs
arpl
lret
mov
or
jb
dec
nop
dec
sahf
sub
aaa
sahf
fwait
jno
cmp
clc
mov
pop
and
scas
sbbl
push
mov
out
in
cwtl
add
push
mov
icebp
jmp
mov
pop
jns
mov
lds
push
in
pop
nop
in
adcl
fldl2t
aad
mov
rorl
sbb
int3
int
sar
test
movsl
dec
dec
mov
jb
inc
repnz
js
push
jl
inc
push
or
jnp
andl
cmp
aas
mov
faddl
sbb
stc
fcoml
or
sub
mov
ret
jp
push
jo
xchg
outsl
mov
sub
dec
lock
sahf
cmp
imul
je
mov
ljmp
adc
bound
and
jmp
data16
lret
rorb
mov
push
jne
push
jne
jecxz
stos
jge
fisubrl
pusha
inc
inc
lahf
and
adcl
dec
xor
and
dec
sbb
push
lods
out
in
mov
cltd
mov
dec
pop
dec
push
cmpsb
sub
mov
ret
imul
test
push
push
rorb
mov
push
xor
scas
cli
inc
shlb
mov
add
ret
push
loopne
aaa
mov
xor
sbb
aas
rol
sbb
xchg
jbe
xchg
xchg
clc
push
pop
adc
xchg
inc
pop
bound
out
push
sub
mov
add
push
xchg
ljmp
push
test
cltd
jb
pop
pop
xchg
divb
out
mov
lcall
push
mov
dec
repnz
mov
addb
jmp
ret
scas
push
jo
pusha
adc
gs
push
pop
dec
dec
aas
movsb
inc
nop
out
pop
fildll
inc
out
sbb
pusha
repnz
sub
dec
bound
xor
popw
data16
mov
cmovg
addb
or
sub
aam
xchg
xor
mov
outsl
ret
scas
xchg
nop
mov
lcall
sub
push
jl
fldt
je
mov
jg
push
and
inc
movsl
jbe
or
xor
push
xchg
jb
test
xchg
loope
add
repnz
xor
xor
and
popl
inc
push
inc
mov
or
sub
les
mov
bnd
ljmp
pushf
xor
lea
rolb
xchg
int3
or
adc
jo
cli
and
popf
adc
xor
fdivl
ja
pop
dec
test
dec
mov
cli
fwait
loop
and
mov
out
push
and
mov
subb
cmp
and
jbe
out
sub
sbb
push
sbb
fimull
sub
bound
fsubrs
test
out
repnz
dec
in
xchg
sbbl
sub
inc
and
stos
pop
jmp
inc
adc
bound
mov
mov
movb
mov
adc
pop
jo
setns
sbb
into
xchg
xor
outsl
shll
xchg
mov
and
icebp
fidivrl
fwait
roll
lds
subl
and
lods
push
insb
and
aad
pop
adc
rcrl
push
stos
mov
or
ucomiss
push
xchg
add
mov
inc
shll
xor
inc
cmp
dec
adc
negb
sbb
ss
cmp
jl
mov
sbb
mov
js
sub
in
jno
push
or
mov
sti
into
push
dec
ret
daa
pop
xor
addb
aas
cmp
xchg
icebp
mov
sarb
mov
notl
outsb
shl
xor
fwait
sbb
in
add
icebp
pop
iret
out
cs
xor
add
xor
out
test
enter
xchg
aaa
mov
mov
into
push
dec
idivb
or
mov
fnstcw
push
test
mov
in
cmp
popa
test
cmp
rcrl
xor
sub
lcall
les
pop
inc
stc
adc
loope
cli
scas
jge
idivb
push
jnp
js
cld
add
pop
int3
sbb
inc
push
sti
into
ja
inc
shrl
mov
mov
add
mov
cli
mov
dec
ret
jl
xor
out
push
stc
inc
add
adc
lea
add
dec
mov
mov
les
repnz
xor
mov
xchg
lds
insl
xchg
mov
mov
mov
sbb
sahf
mov
mov
adc
sub
lcall
dec
data16
sub
out
push
addl
incb
loope
ficompl
dec
inc
pop
outsl
in
mov
mov
xchg
roll
sarl
or
adc
iret
cltd
cmpsb
xor
dec
call
orb
sbb
or
fs
movsl
inc
push
stos
inc
fnstcw
mov
and
repz
ds
sub
jp
sub
xchg
loope
mov
aam
mov
sbb
inc
push
lods
out
mov
mov
mov
mov
push
aas
dec
dec
rcll
aam
sbb
mov
in
sub
out
test
and
xor
jge
jbe
ficoms
push
js
lock
jg
sub
jnp
pop
imul
push
push
inc
jnp
jbe
jecxz
jecxz
insb
adc
xchg
jg
mov
fildl
loopne
xor
lahf
or
imul
sbb
jns
out
aam
dec
cmp
mov
movsb
insb
aam
inc
or
lods
andb
and
and
mov
notb
test
pop
jg
xor
xchg
out
adc
inc
jle
inc
hlt
xchg
push
dec
and
inc
push
pop
push
into
xchg
out
cs
fs
aaa
cld
push
jnp
jnp
push
call
add
push
push
out
loopne
sti
and
sbb
jge
xor
inc
pop
test
ret
xchg
mov
aam
push
shlb
arpl
inc
cli
leave
cmovno
jb
leave
xchg
fisubrl
setno
fstl
mov
pop
sub
cltd
flds
test
pop
test
jecxz
out
das
dec
cmp
test
cmp
outsl
js
xor
mov
decl
jbe
repz
push
xor
inc
lea
xchg
imul
loope
mov
push
mov
mov
std
pop
rorb
dec
adc
cmp
inc
mov
add
std
dec
sahf
mov
test
mov
popa
jp
addb
out
fistps
imul
push
and
dec
dec
cli
jge
ljmp
jo
or
cld
insl
dec
dec
or
mov
dec
xchg
das
sub
pop
insb
ficomps
mov
or
add
jns
mov
bound
mov
icebp
adc
cmp
jg
push
lahf
lea
mov
lcall
or
out
mov
adc
daa
in
xor
decb
or
mov
jecxz
xchg
jo
inc
push
push
lea
cmp
inc
aas
dec
ret
push
inc
mov
scas
sbb
jge
mov
mov
mov
imul
js
lea
repz
mov
pop
xorb
mov
adc
inc
hlt
add
pop
jp
ret
jge
dec
xchg
aam
xchg
enter
sbb
add
or
push
add
adc
and
mov
push
cmp
and
mov
adc
in
jecxz
scas
push
adc
nop
cmp
andb
sbb
cmp
test
shll
jg
ret
rorb
or
bound
out
cmp
adc
adc
pop
aas
jne
jmp
ret
cld
dec
or
bound
std
pop
pop
dec
sbb
jg
and
push
sarb
jb
data16
dec
or
xorb
mov
rcl
pop
lea
pop
js
scas
push
rcrb
push
pop
or
xor
jge
stc
adc
sarl
adc
sub
hlt
pop
mov
or
lahf
inc
add
xchg
ja
sbb
flds
pop
jge
xchg
mov
inc
bnd
push
cmp
mov
mov
dec
mov
sbbl
insl
incb
add
test
sahf
or
sar
xchg
mov
jp
xchg
jb
xorb
fnsave
lods
lods
out
mov
ret
orb
or
adc
sbb
loopne
cmp
loopne
pop
loopne
xor
cltd
pop
in
loopne
sub
sbb
test
cmp
or
jnp
mov
jns
push
dec
adc
test
mov
pop
jg
mov
xchg
out
mov
rep
aam
push
iret
and
subb
xchg
inc
jno
dec
fidivs
gs
jbe
sbb
xor
mov
pop
sub
mov
arpl
sbb
jne
addl
cmp
dec
sbb
dec
sbbl
out
imul
out
xchg
push
jnp
sbb
imul
ret
sbbb
push
pop
cmc
mov
lcall
dec
inc
cmp
xor
or
lds
jnp
jb
popf
rcr
in
cmp
testl
cmp
cmp
cmp
outsl
loopne
aam
push
push
xchg
jno
mov
sub
push
es
adc
and
pop
andb
aam
push
cmp
push
xchg
mov
adcb
push
mov
add
inc
in
mov
lea
pop
mov
mov
inc
push
mov
lcall
cli
call
jns
cmp
ret
xchg
outsb
mov
lea
cmp
cmp
xchg
sar
xor
in
inc
das
stc
mov
mov
sbb
mov
out
dec
jnp
sbb
sbb
out
lds
or
jno
jg
jbe
xchg
fidivrl
mov
jne
push
adc
out
mul
nop
pop
popf
cmpsb
test
pop
scas
cltd
mov
test
out
or
push
mov
jg
push
and
lahf
push
loop
xchg
ds
adc
sbb
dec
xchg
push
dec
shlb
dec
popa
mov
fstps
leave
cmpsb
or
lds
ret
dec
roll
dec
dec
xchg
jo
loope
push
lret
adc
mov
cs
push
xchg
test
cld
mov
movnti
stos
push
mov
inc
fucom
xor
jns
adc
jns
xchg
shl
lock
push
adcb
jno
add
adc
jo
push
paddd
xorl
inc
mov
sub
mov
sub
int
inc
sub
lahf
and
dec
dec
push
lret
mov
sub
pop
pop
mov
xchg
into
xchg
dec
or
fs
sbb
jle
in
imul
mov
fbld
xchg
stos
pop
ret
movsb
and
outsl
pusha
std
mov
xor
jle
outsl
scas
adc
pop
fists
data16
pop
adc
jb
add
cmp
out
js
jbe
aad
cli
leave
aam
mov
pusha
shlb
jb
mov
adc
cmc
adc
shlb
gs
adc
sbb
out
mov
and
sub
mov
dec
lods
mov
add
jp
insb
push
xchg
mov
add
sbb
bound
fildll
xadd
sbb
cli
dec
repz
or
inc
les
lret
jne
sub
inc
cwtl
lds
in
out
pop
fs
push
movsb
idiv
add
mov
mov
out
jns
jo
mov
add
pop
and
dec
and
dec
pop
pusha
ja
test
loop
sbb
fwait
loop
mov
pop
scas
xorb
aad
ret
arpl
gs
cmp
bound
mov
xchg
ss
das
fisttps
into
test
js
mov
and
add
test
mov
leave
xchg
cmp
shll
mov
hlt
cwtl
in
icebp
into
scas
mov
jge
xor
mov
xor
loope
out
push
mov
sub
push
lret
add
or
adc
add
dec
inc
cmp
test
in
lds
je
int3
cmp
imul
push
test
ficompl
cwtl
daa
cmpsb
cmp
shlb
jp
out
daa
call
jmp
fistl
js
cltd
xchg
adc
es
jmp
pop
jo
bnd
stc
out
jae
xor
into
sarb
and
repz
mov
mov
dec
add
testb
adc
leave
stc
inc
std
cmp
cmp
sub
sbb
lods
fistpl
shll
cld
fmull
leave
add
mov
cmp
sbb
push
inc
sbb
or
repz
sbb
push
pop
push
push
and
or
mov
mov
sbb
xchg
mov
nop
bound
mov
push
xor
out
sub
sub
fistl
jmp
mov
push
xchg
pop
aad
in
daa
xor
das
fs
push
fwait
stos
rcl
dec
and
adc
jbe
cmp
jle
mov
outsl
jns
daa
test
ss
xor
adc
or
inc
dec
int
test
popf
push
xchg
mov
jbe
adc
mov
test
dec
add
mov
mov
jno
push
subb
lahf
pop
jp
cmp
xchg
mov
nop
enter
bound
js
stos
push
js
push
push
bound
jns
pop
push
cmp
in
stos
lods
js
push
mov
jp
gs
shrb
test
cmp
mov
dec
adc
imul
mov
sbb
xchg
fistps
jl
hlt
pop
mov
rorl
stos
into
or
stos
fisttpl
add
stos
sub
inc
pop
sbb
rol
mov
nop
sub
sub
out
jae
fcoml
jns
repnz
and
shrl
subl
cmp
aas
sbbl
out
imul
adcl
pop
clc
inc
out
sub
jge
add
clc
js
fs
xchg
jp
test
push
xchg
imul
popf
jnp
mov
stc
movsb
fcmovnb
push
insb
inc
stc
mov
dec
js
push
adcl
inc
out
xor
les
push
movsb
lret
fcomps
loop
divl
sbb
addl
js
lcall
mov
js
inc
mov
jg
mov
jg
cli
stc
cmc
xchg
shrl
andl
cmp
cmp
int3
or
out
fwait
jnp
stc
stos
dec
lret
jns
clc
push
lock
dec
scas
xor
dec
cmp
fisttps
insb
cmp
sarb
mov
cmp
sti
test
cli
lea
mov
xor
mov
mov
movsl
jp
mov
hlt
pop
push
cli
in
adc
pop
fnstcw
cmp
push
rorl
inc
sbb
popa
jnp
xchg
out
sbb
jnp
sbb
js
cmp
sarl
sbb
js
mov
sbb
js
mov
cltd
std
sbb
fidivrs
jmp
popa
pop
sbb
aas
mov
xchg
or
sub
popa
lcall
xchg
aas
inc
add
in
inc
inc
sbb
js
orb
cmpl
xchg
js
add
loope
cmp
push
out
push
jnp
stc
fmull
andb
sbb
cmpl
fildl
bound
sbb
cmp
int3
mov
call
inc
mov
fwait
outsl
mov
ss
dec
dec
mov
cmp
scas
div
sbb
das
cmp
cs
in
fwait
stos
addb
dec
push
fcoms
je
fildll
cmp
xchg
sbb
or
mov
mov
mov
jo,pn
and
dec
jb
cmp
imull
pop
and
or
repz
xchg
loop
loop
xor
testb
pop
sti
int
sbb
js
inc
mov
or
pop
jl
sbb
das
adc
ret
sahf
lret
push
xor
mov
dec
fimuls
lret
popf
jo
xchg
cltd
popa
xchg
push
scas
sbb
sbb
adc
pusha
xchg
js
mov
in
jle
lret
divps
jne
fwait
and
subb
cmp
adc
test
in
shr
dec
dec
mov
xor
push
test
mov
rclb
jle
into
xorb
jge
sub
cmp
inc
xorl
into
mov
repz
pop
and
cwtl
inc
mov
jle
orb
cmp
mov
lods
lret
into
cltd
xchg
aas
nop
imul
adc
mov
std
cwtl
mov
lods
or
jle
pop
mov
andl
in
je
inc
ja
push
push
jb
bound
mul
push
out
or
cmp
rolb
xchg
mov
out
jp
pop
mov
repz
mov
jns
mov
sbb
bound
clc
sbb
leave
sbb
inc
gs
and
sbb
xchg
out
dec
sub
mov
or
ja
insl
fsubrs
arpl
jmp
inc
roll
cmpsb
cmp
sahf
fisttpll
cli
in
xor
popf
adc
std
lcall
sbb
lods
mov
pop
dec
dec
iret
mov
lahf
fcoml
div
mov
xchg
mov
sbb
mov
mov
sti
mov
add
lahf
adc
jge
mov
xchg
jle
fistl
mov
cmp
mov
insl
mov
jne
adc
fistps
fbld
idivl
outsl
pusha
adc
jmp
pushf
inc
test
mov
xchg
inc
mov
mov
nop
inc
out
cld
jae
xor
lds
push
and
jo
push
xchg
daa
cld
insl
data16
testl
xchg
inc
inc
stc
das
sub
cmc
repnz
pop
shll
clc
or
and
cld
cli
lahf
setb
mov
mov
mov
loope
dec
pushf
aad
xor
sub
icebp
adc
push
mov
mov
repnz
push
inc
insl
bound
daa
adc
bound
inc
mov
shlb
sbb
cmpsb
cwtl
inc
add
ljmp
push
cmc
popa
data16
scas
or
rcrb
cmp
push
pop
lods
jecxz
cmp
inc
cmpsl
scas
mov
mov
mov
jne
push
mov
jae
in
or
jno
fcoms
sbb
inc
test
outsb
sahf
push
sub
mov
ficompl
hlt
imul
sub
sbb
cmp
xchg
std
clc
mov
movsb
cmp
lret
fists
rorb
ret
mov
into
scas
rcll
scas
pop
dec
repz
les
fimull
inc
lods
push
rcrb
ret
scas
rclb
sbb
xor
shlb
mov
dec
push
dec
jnp
inc
cmp
xchg
and
shll
add
sbb
sti
or
pop
imul
sub
loopne
in
lods
test
in
hlt
sub
and
popa
mov
xchg
cmp
cltd
xor
fisttpl
sub
call
sub
xchg
adc
cmp
xchg
sbb
cmp
mov
movsl
loope
test
mov
cmc
fistps
jle
inc
scas
lahf
mov
adc
pop
inc
sbb
or
pop
filds
xor
push
mov
cmovnp
ffreep
or
into
ss
mov
jb
cmp
inc
push
push
xchg
testl
dec
xlat
mov
or
icebp
lods
imul
pop
daa
xchg
cmp
in
or
push
push
ret
xor
scas
outsl
xchg
jb
xor
mov
shl
sahf
push
mov
dec
mov
je
sbb
jg
xchg
push
adc
mov
daa
imul
pusha
cmpb
std
xchg
push
ror
out
jb
adc
inc
fdivr
cmp
data16
jl
adc
pop
cmp
fbld
ds
pop
cmc
xor
dec
dec
int
pusha
daa
push
lods
pop
mov
daa
or
std
imul
mov
and
cs
out
sub
mov
scas
rolb
push
xchg
clc
or
mov
enter
sub
test
jns
push
fsubrl
add
popf
sub
hlt
push
aas
cmp
inc
sbb
insb
ds
inc
xor
cmp
add
jo
into
xlat
fdivl
mov
mov
fisttps
or
jnp
insb
out
mov
je
enter
inc
fildll
test
ds
das
push
dec
mov
add
jns
cmpb
movsl
shl
pusha
mov
inc
sbb
jge
lret
xlat
sub
je
dec
scas
les
int
jmp
lock
data16
out
dec
imul
mov
xchg
std
shrb
repnz
cld
jle
sub
lahf
jg
out
push
inc
fidivrl
add
push
sbb
std
mov
pop
jo
jge
mov
repz
lea
fcos
daa
push
ljmp
bound
and
andl
lahf
lcall
or
mov
scas
mov
xor
mov
pop
lcall
cs
int3
mov
add
and
in
xor
fadds
cli
icebp
stos
popf
inc
mov
mov
add
mull
xor
shl
iret
dec
stc
sti
mov
mov
mov
mulb
mov
jl
pop
push
push
rorl
stos
add
xchg
outsl
add
imul
in
mov
xchg
cmp
fucomi
imul
cmp
push
push
pushf
or
loop
adc
jl
mov
adc
sarb
popa
int
lret
and
imul
repz
daa
sub
nop
and
outsl
cs
adc
scas
andb
test
jb
mov
lret
add
je
jne
into
rclb
pop
cmp
shrb
sub
sub
adc
pop
or
xor
in
xchg
or
lods
enter
xchg
add
or
cmp
out
clc
push
mov
nop
daa
xor
fstpt
jno
mov
gs
xor
imul
inc
push
cmc
jle
jmp
iret
test
adc
xchg
add
stc
popa
adc
inc
test
inc
shrb
shlb
xor
jge
movsl
mov
sahf
mov
fmuls
imul
jnp
cmpsb
rolb
adc
jge
jo
jmp
or
bound
insb
dec
iret
jecxz
push
mov
xor
pop
sbb
out
add
push
mov
bound
pop
pop
das
rcr
xchg
mov
jnp
dec
inc
les
sub
mov
sub
ss
fisttpll
popa
out
ss
jnp
test
bound
mov
pop
dec
inc
andb
xchg
cmp
gs
scas
ret
lret
add
push
add
je
insb
push
mov
pop
adc
daa
push
sub
loope
fidivrs
scas
sbb
into
xlat
call
enter
cli
fmull
sti
mov
xchg
xchg
xchg
push
or
gs
movsl
loop
mov
push
gs
xlat
leave
daa
aad
sbb
shrb
mov
ss
push
call
pop
dec
stos
repz
jg
cmp
xor
mov
and
mov
push
je
xlat
dec
fidivs
add
pop
mov
xchg
scas
call
dec
pop
inc
fdivrl
fsubrs
xchg
jg
pop
xchg
mov
sub
or
pop
sub
js
jmp
xor
mov
clc
sub
out
push
mov
mov
add
push
jbe
gs
lods
lods
scas
scas
sbb
out
jnp
idivl
aad
jl
xchg
pop
lods
xchg
adc
cmp
aaa
mov
gs
xchg
pop
aam
es
lahf
xlat
lcall
mov
test
jecxz
dec
outsl
fildl
hlt
lods
and
ljmp
test
lds
sti
fadd
fiaddl
xchg
add
jmp
data16
mov
cmp
jbe
in
enter
fsubs
add
test
or
pop
andl
mov
mov
mov
pop
xlat
or
adc
adc
jp
mov
ret
adc
pop
shlb
mov
in
pop
pop
push
outsl
jmp
std
mov
arpl
ficoms
les
loop
cmp
push
movsb
iret
push
pop
ss
bound
cmpb
xchg
in
or
in
cmp
mov
push
dec
mov
dec
andb
mov
push
rclb
sub
daa
rcrl
frstor
subb
outsb
in
or
enter
imul
xchg
shl
and
bound
mov
cld
out
xchg
adc
pushf
movsl
dec
out
mov
cltd
fistps
pop
out
mov
cwtl
or
jge
mov
xchg
shlb
jnp
and
adc
in
cmpsb
inc
jo
stc
in
test
cli
sub
mov
cld
jmp
es
mov
out
lds
addr16
mov
mov
and
imul
mov
cli
in
push
mov
movsb
mov
xchg
pop
dec
mov
and
sub
mov
inc
pushf
pop
xor
mov
arpl
pushf
xor
pop
pop
push
xchg
clc
cmp
and
arpl
xor
mov
mov
test
xor
push
mov
fwait
scas
in
sub
mov
js
into
jg
out
popa
sub
cmp
into
mov
movsb
mov
mov
fiadds
scas
mov
mov
xchg
mov
sarb
mov
inc
out
dec
test
mov
cwtl
fnsave
stos
cmpsb
mov
sahf
add
out
mov
mov
push
mov
bound
insb
mov
cli
lret
aas
or
inc
cltd
ss
mov
popf
or
xchg
fsubl
dec
sahf
sbb
cmp
inc
jecxz
sbb
and
leave
inc
jbe
dec
mov
and
cmp
xorl
push
int
inc
adc
pop
mov
mov
into
push
aas
dec
call
lahf
pusha
es
push
pop
bound
jle
sbb
mov
mov
inc
push
ret
mov
pop
jg
pop
dec
shrl
adc
or
lods
sbb
and
test
test
jb
fwait
sbbl
fdivp
and
inc
js
repnz
outsl
mov
add
les
in
movsb
xchg
nop
aaa
sahf
out
andl
fists
mov
mov
insb
dec
mov
gs
adc
jg
pop
mov
movsb
stos
xchg
sbb
or
cmpsb
inc
movsb
jnp
add
loope
sub
test
rclb
cmpl
mov
xchg
test
dec
mov
push
cmp
out
nop
mov
xchg
xor
inc
and
insb
adc
pop
loopne
jle,pt
mov
xchg
addr16
nop
dec
push
push
jo
and
test
dec
shrb
insb
add
aad
cli
dec
aam
leave
xor
mov
dec
add
jnp
jno
cmp
fiadds
jl
into
out
cld
add
aas
cs
out
add
repz
cmp
push
xchg
cmp
and
das
jl
insb
pop
frstpm(287
dec
stc
sub
pop
pusha
mulb
orb
push
sbb
jge
mov
push
xchg
jg
dec
push
inc
ficoms
ficoms
imul
jl
dec
sub
dec
xchg
aad
mull
fcom
xchg
repz
lret
pop
sub
mov
xor
ret
mov
int3
mov
sbb
insb
adc
jge
xlat
out
mov
lahf
fsubrs
outsl
mov
pushf
ficoms
cmp
inc
bound
lcall
xorb
out
adc
inc
sbb
and
dec
dec
daa
push
in
lock
mov
mov
arpl
pop
jns
loope
pop
in
loop
pop
sbb
pop
pop
pop
jp
shlb
mov
js
xchg
out
cltd
xchg
sub
jb
cmp
xorb
mov
add
adc
rclb
add
sub
bound
std
insl
ret
ds
scas
pusha
fsubp
lods
cmp
or
mov
cltd
imul
xchg
jae
popl
fwait
sbb
dec
adc
out
add
decl
or
bound
mov
lods
jle
or
dec
lds
test
cld
cs
loope
bound
xchg
dec
xchg
stos
notl
sub
inc
mov
jle
inc
push
mov
jmp
fwait
imul
xchg
inc
dec
fsubl
popa
sarl
imul
repnz
andb
sub
lahf
fdivr
out
pop
mov
xchg
xchg
cmp
xor
fildl
fldcw
ljmp
lret
jmp
and
test
mov
pop
cli
sti
sbb
insl
mov
fisubs
push
or
fildl
fldt
lcall
pushf
outsl
ss
sarl
js
jecxz
test
sbb
pop
mov
sarl
pusha
xchg
out
outsl
imul
sbb
loop
loopne
mov
xor
stos
fwait
and
shlb
and
inc
dec
push
movsb
sbb
cltd
gs
lret
data16
pop
pop
sub
add
cmp
mov
repnz
cmpsl
dec
push
jle
cltd
inc
in
stc
xchg
adcl
jmp
xchg
add
sar
pop
adc
sti
out
xchg
lret
scas
sub
xor
or
jne
sbb
pushf
jnp
stc
lret
out
inc
lahf
pop
repnz
faddl
lea
nop
shll
daa
cmp
jg
ss
mov
shll
jmp
mov
jmp
mov
scas
mov
pop
add
and
gs
jecxz
adc
nop
mov
int3
fwait
pushl
mov
pop
lock
cmp
jmp
scas
push
cmp
scas
ds
adc
rcr
lea
test
out
decl
and
iret
fwait
push
mov
int3
fwait
popa
popa
push
mov
in
dec
arpl
out
mov
push
or
pop
repnz
jmp
ss
repnz
jl
push
inc
sbb
or
ret
mov
inc
sub
and
jns
cmp
dec
bound
je
cli
xchg
mov
into
movsb
xor
ja
vprotd
cmpsb
and
comiss
xchg
rcll
pop
dec
adc
sbb
xchg
mov
mov
and
in
or
push
test
into
lcall
mov
out
adc
sbb
fdivp
add
xchg
pushf
cld
out
jecxz
dec
and
hlt
pusha
ds
xor
cmc
or
jl
pop
xchg
in
hlt
pop
jns
stos
out
inc
out
xor
mov
subb
sub
mov
in
stos
push
fwait
outsb
cltd
das
in
negb
bnd
inc
push
dec
stos
cmpsb
jecxz
nop
decb
ss
lods
xchg
mov
add
andl
xlat
or
das
ss
push
sub
mov
pop
imul
fdivrp
daa
pop
sub
arpl
nop
xchg
push
daa
cmp
test
stos
pop
jg
pop
and
dec
hlt
cs
fwait
cmp
in
ret
inc
cmpsb
dec
or
bound
pop
adc
mov
dec
loope
xchg
sbb
mov
repnz
xchg
push
es
loope
xor
imul
aad
lods
icebp
loope
sti
ds
jnp
mov
mov
xor
ljmp
push
in
pushf
xor
push
xchg
stc
xchg
jnp
xchg
outsb
and
xor
push
stos
sbb
pop
xchg
pop
jb
push
jmp
jl
or
push
or
jae
imul
push
inc
jmp
dec
dec
js
adc
pusha
imul
imul
imul
loop,pn
insl
out
test
ja
xor
mov
xor
mov
sbb
dec
dec
sub
insb
enter
xchg
and
cmc
sbb
push
fstl
stos
dec
je
sti
sbb
lods
and
test
fldenv
mov
lret
sbb
push
mov
clc
sub
push
xchg
sbb
adc
orb
repnz
adc
or
flds
sbb
lods
in
dec
mov
mov
mov
fsts
call
in
cmpb
cmpsb
inc
mov
inc
in
push
bound
dec
orl
cmp
or
movsb
push
bound
cmpsb
cmp
pop
ret
push
lret
into
mov
ss
pop
cmp
out
xchg
cmp
cmp
lods
insb
stc
jns
or
lcall
andl
push
adc
out
test
movsl
out
sub
push
adc
outsb
sub
fs
dec
outsl
dec
and
sub
dec
sbb
stc
push
mov
and
sbb
subb
push
sbb
mov
push
inc
mov
mov
iret
clc
mov
jnp
lret
xchg
bound
or
or
sarl
and
adcl
jo
cli
and
imul
cmpsb
lret
movsl
lret
ret
in
data16
mov
gs
call
and
sarb
dec
jecxz
push
lods
lret
ror
mov
adc
push
aad
test
popa
adc
and
ret
cli
scas
sbb
int
popa
fimuls
arpl
inc
cli
mov
out
sahf
int
push
sbb
popa
popa
cltd
jp
ret
ds
pop
xchg
cld
inc
fidivs
jge
mov
pop
mov
jb
inc
or
arpl
sub
leave
xchg
mov
lds
push
outsb
in
jecxz
nop
mov
jp
cs
dec
test
lods
or
mov
push
cli
dec
imul
mov
test
xor
dec
scas
idiv
jge
stc
bnd
xor
ffreep
dec
loop
clc
mov
adc
lcall
jnp
data16
adc
scas
xor
cmp
jb
scas
xchg
adcb
idivb
mov
leave
and
jb
pop
jle
cld
imul
fildll
mov
jge
in
mov
inc
out
loope
sub
icebp
mov
mov
or
cmc
cmp
jnp
sbb
bound
lods
and
outsb
gs
out
dec
dec
jle
sub
dec
or
loop
jp
jl
sahf
lods
adc
push
fmuls
pop
mov
mov
mov
dec
fbstp
ljmp
sub
int3
nop
hlt
ds
pop
inc
fwait
stos
lea
imul
sbb
and
fs
mov
pusha
sub
test
fs
xchg
clc
xor
lcall
push
sbb
loop
xchg
mov
adc
negb
inc
pop
or
pop
inc
jno
pusha
lods
std
add
xchg
jb
mov
pop
adc
pop
out
xchg
stos
out
stos
pushf
xchg
push
xorb
mov
out
dec
pop
mov
or
and
rolb
jge
cli
mov
lret
mov
lahf
out
inc
and
or
daa
popa
into
dec
sti
imul
mov
adcb
push
inc
dec
imul
and
bound
pop
std
jns
mov
iret
push
call
xchg
mov
sbb
sbb
jp
mov
sbb
push
out
fdivrs
cld
sub
jp
and
mov
xchg
loopne
fcmovbe
in
ds
jbe
mov
loopne
mov
push
imul
mov
lret
jnp
rcll
push
popa
xlat
fdivl
imul
rep
pop
inc
aas
std
xorb
dec
sub
jb
bound
xchg
dec
sbb
lods
icebp
mov
sbb
sbb
fwait
out
notl
rorl
xchg
xchg
mov
xchg
xor
aad
dec
mov
leave
int3
sbb
mov
dec
cltd
cli
xor
scas
ret
in
jg
roll
jo
push
mov
xchg
adcl
or
mov
pop
int3
or
ret
dec
pop
popf
fnstcw
inc
inc
pop
addb
jl
in
or
int
lcall
orb
cmp
ljmp
test
aas
jecxz
addr16
jne
inc
jnp
cli
mov
mov
jo
push
and
add
cmp
mov
cmp
lods
jns
mov
lock
test
mov
push
das
dec
mov
js
mov
scas
sub
push
out
stc
movsb
popa
fimuls
movsb
imul
outsl
lods
fsubp
in
inc
mov
xor
sarb
mov
inc
shlb
pop
fsubs
fnstcw
out
outsb
jb
outsb
and
cs
subb
jnp
mov
aas
jo
sti
clc
leave
xchg
push
cld
leave
fdivrl
pop
fldenv
stc
shl
jnp
mov
loope
dec
jl
xchg
mov
dec
sti
pop
jb
mov
pop
pop
inc
jb
ret
imul
dec
fcomps
std
leave
fisttps
data16
inc
cmpsb
jp
ja
repz
sbb
es
in
hlt
sbb
mov
cmp
adc
inc
lds
dec
pop
stc
fwait
mov
es
rcr
jbe
lods
cmp
mov
jmp
iret
cmp
adc
mov
nop
jb
out
shl
mov
gs
sahf
pop
mov
popa
xor
mov
push
lret
jmp
jo
sbb
jmp
jnp
outsb
mov
dec
cmc
fisubrl
fwait
movsl
dec
pop
out
mov
aas
frstor
xchg
push
pop
dec
push
insl
mov
hlt
mov
aas
jb
or
gs
enter
push
mov
mov
push
cmc
fdivrl
test
xor
mov
stc
mov
pop
inc
lcall
jp
rorb
shlb
sbb
and
aad
inc
stos
repz
lahf
shr
rcr
cmp
fs
mov
mov
cmp
int3
xchg
mov
xchg
lahf
adc
lcall
push
mov
stc
rcrb
pop
subb
dec
mov
ljmp
out
pop
xchg
pop
lahf
orb
push
out
and
cs
jge
insb
inc
test
cmp
xchg
es
dec
inc
mov
mov
arpl
enter
push
push
test
ret
inc
push
movsl
dec
mov
xchg
test
push
cltd
andl
test
push
mov
dec
mov
insl
lods
les
popf
push
imul
cli
xchg
xor
shll
outsb
dec
and
cmc
pop
push
ljmp
pop
loope
lea
fimull
adc
es
cmpsb
out
jge
mov
xchg
jecxz
inc
jl
lods
gs
jge
scas
cltd
sahf
scas
arpl
push
icebp
std
out
das
sub
dec
out
jno
dec
ds
cmp
xorb
scas
mov
mov
or
sub
dec
mov
sahf
push
or
push
and
sahf
out
cmpsl
test
out
imul
jb
insl
or
adc
jns
testl
loop
jg
movsl
je
mulb
sub
sub
nop
outsb
pusha
add
cltd
movsb
test
jns
ds
xor
es
imul
xlat
in
xchg
sub
or
push
lahf
orl
imul
cmpb
push
xor
dec
popa
jg
imul
adc
fidivrl
fbstp
in
lods
repz
adc
or
xor
enter
push
xchg
sbb
jae
outsl
cli
xor
fists
aam
stos
mov
daa
cmpsb
pop
jl
mov
pop
sbb
mov
out
ds
mov
fwait
pop
mov
sub
loop
ss
pusha
mov
data16
sub
test
fdivrl
mov
lahf
and
scas
or
incl
or
movsb
fisubrs
outsb
test
inc
or
pop
sbb
xchg
and
pushf
ja
xchg
inc
out
lret
jbe
jp
mov
xchg
sarl
ret
outsl
out
sarb
mov
xchg
inc
mov
daa
jmp
mov
push
adc
push
testb
daa
int
mov
insb
out
dec
push
test
daa
cmp
inc
adc
fsts
inc
out
lcall
popf
ljmp
enter
inc
repz
lret
into
lods
sbb
hlt
cmp
sub
sub
adcb
adc
fisttps
sahf
es
test
loop
popa
rorl
lock
lds
ds
movsl
push
mov
fs
shlb
adc
test
popa
push
sub
gs
andb
addb
pop
pop
jne
cmpsb
and
jnp
cltd
test
enter
mov
cmc
sub
mov
xchg
js
push
inc
lock
sub
mov
lds
push
icebp
iret
cld
sbb
pop
enter
enter
cltd
or
es
inc
lahf
ret
out
cmp
cmp
int3
out
mov
dec
push
loopne
jbe
jge
dec
test
stos
clc
sub
xchg
inc
daa
adc
lahf
push
dec
scas
cmpb
mov
fwait
clc
int
movsl
or
outsb
jbe
incb
sbbb
adc
call
xor
pop
xor
stc
mov
in
ficoms
movsl
pop
pop
rcrl
enter
jecxz
cmp
jl
xchg
jbe
fisttpll
adc
mov
inc
daa
or
mov
inc
mov
cmpsl
test
sub
push
pushf
repz
movsb
cmpsb
subl
add
dec
and
adc
jne
fdivl
out
xchg
push
les
repz
movb
in
jmp
imul
pop
jo
gs
cwtl
roll
cmp
mov
stc
pop
mov
int3
push
pop
arpl
sbb
push
orb
push
aas
shrb
sahf
mov
cmp
mov
test
fstps
lss
adc
mov
mov
dec
out
insb
test
inc
pop
mov
imul
stos
or
jle
scas
nopl
imul
xchg
lcall
movsl
lahf
fidivrl
test
shlb
xchg
in
xor
cli
or
shlb
sbb
mov
mov
xchg
fmul
adc
decb
aas
andb
fnstsw
rclb
xchg
ret
xchg
lods
in
test
lret
adc
loop
out
gs
and
movsl
jg
test
test
insb
pop
sub
xor
scas
fimull
cltd
inc
cmp
pop
rorb
pop
insb
cs
mov
jp
sbb
scas
imul
jo
cmpl
jle
push
int
add
sub
cmp
inc
pop
adc
lock
das
cli
push
dec
sub
mov
pop
pop
sti
xchg
push
adc
test
out
mov
add
dec
pop
xor
mov
adc
inc
inc
repz
fimull
popf
sbb
lahf
cld
push
pop
sub
mov
mov
fiaddl
lods
out
cld
js
adc
cmp
sti
push
inc
sub
fimull
movsb
sbb
inc
rorb
push
and
loop
cmpb
adc
fxch
xchg
lods
mov
test
sbb
shlb
cs
lea
mov
push
scas
push
or
xchg
mov
pop
imul
jmp
adc
jbe
xor
cmc
sbb
icebp
sbb
xchg
push
xchg
movsl
in
xchg
mov
and
jl
test
mov
xchg
sbb
sti
and
xor
dec
sbb
pusha
out
les
mov
stos
das
push
or
sub
and
dec
hlt
mov
or
or
adc
loop
or
inc
dec
fmull
xchg
push
sbb
notb
add
adcb
popl
or
push
inc
pusha
dec
adc
addr16
shl
scas
pop
inc
or
jnp
aam
popa
pop
pop
dec
xor
fdivrs
jb
pop
dec
mov
mov
inc
pop
mov
mov
mov
ja
cli
mov
jge
repz
fstpt
lcall
mov
out
xchg
jnp
test
jb
test
inc
aam
popf
xchg
pop
rcl
or
mov
or
imul
leave
dec
sub
adc
mov
inc
push
stos
mov
mov
movsb
rorb
jg
daa
mov
xlat
and
inc
iret
pop
jb
cld
test
inc
or
out
lock
sarl
repnz
push
lcall
inc
jg
push
adc
frstor
push
pusha
and
sbb
sub
ds
shlb
loopne
aad
sub
and
and
sarl
lds
scas
xchg
pop
inc
xor
add
adc
cmc
fwait
cmp
inc
lahf
cmpsb
js
bound
xor
leave
aas
and
dec
icebp
fs
mov
and
lods
out
testl
push
in
push
movsl
scas
dec
outsl
outsb
notb
sub
shll
sar
rolb
notl
sbb
daa
jns
push
jge
repz
les
mov
jae
pmaxsw
shl
mov
out
mov
mov
sahf
out
xchg
xchg
fwait
dec
xlat
sub
test
mov
test
and
aas
dec
inc
cmpsb
xchg
or
push
pop
scas
mov
ljmp
imul
mov
and
inc
in
mov
xchg
shll
roll
mov
adc
cwtl
jg
xchg
mov
fwait
mov
cs
in
sbb
icebp
xor
dec
or
loopne
push
xchg
inc
test
jg
aas
inc
out
fstps
dec
xchg
jno
inc
and
mov
mov
loop
inc
in
cltd
rcrb
les
subb
arpl
ret
push
mov
pushf
push
jle
icebp
mov
pop
fisttpl
insb
pusha
loope
leave
pop
scas
xchg
cmp
push
in
mov
gs
adc
mov
imul
fwait
pop
mov
xchg
mov
push
mov
inc
cmp
test
jb
insl
fsubl
fcoms
push
mov
sahf
mov
fldl
xor
cmp
push
andb
sub
or
adcl
push
scas
add
push
add
xor
aas
das
subb
gs
push
into
lods
and
mov
sub
fistl
mov
and
jnp
fwait
inc
ljmp
leave
mov
fstpt
repnz
sbb
ficoml
je,pt
loope
into
mov
add
inc
das
mov
inc
scas
jo
in
add
test
xchg
jl
cmc
inc
outsl
repz
jbe
ret
ja
mov
cmpsb
lock
mov
cltd
jbe
fsubr
lock
mov
aam
adc
cs
xchg
ds
addb
adc
insb
mov
pop
aaa
pop
imul
hlt
sub
sarl
addr16
leave
sahf
dec
mov
jb
or
pop
mov
inc
pop
xor
dec
andb
pop
xor
or
or
push
push
and
addb
test
test
out
hlt
mov
lahf
xor
sub
and
push
xor
mov
sahf
inc
mov
scas
sbb
pop
insb
inc
cld
mov
and
test
mov
loop
in
jmp
test
jns
mov
ret
sub
sbb
and
out
sbb
mov
mov
aad
leave
push
push
sar
test
data16
nop
stos
icebp
lods
jmp
dec
int3
inc
pop
loop
dec
inc
imul
inc
pusha
icebp
scas
push
pop
ficomps
fwait
add
sbbl
mov
loope
ret
fists
lret
sar
xchg
sub
dec
sub
insl
fwait
pushl
leave
pop
nop
and
ds
sub
jae
fcmovnu
mov
sub
xor
ds
loopne
cmp
mov
outsb
jmp
jg
in
icebp
push
test
inc
pop
adc
scas
dec
push
repnz
adc
mov
inc
or
stc
pop
pop
mov
out
rolb
test
ljmp
adc
sub
add
loopne
mov
adc
cmpb
lds
add
arpl
push
fwait
cmp
xor
and
hlt
mov
mov
cltd
sbb
push
xchg
loopne
jbe
xor
pop
ret
push
shlb
cwtl
movsb
fld
adcb
lcall
jmp
cmpl
rclb
sub
loopne
dec
mov
push
dec
out
ds
or
push
ds
dec
jg
cli
ss
loopne
cmp
nop
mov
sub
xchg
sbbb
lods
inc
and
pop
paddusb
jnp
fisttps
xchg
pop
sub
xchg
jo
iret
sub
mov
cmp
shlb
sub
lret
out
fsts
cmp
pop
mov
xchg
mov
arpl
negb
outsb
mov
dec
gs
negb
xchg
inc
push
dec
add
mov
mov
jne
scas
mov
xlat
lea
xchg
andb
shl
xchg
dec
adc
mov
mov
xor
jb
mov
loope
sarb
xlat
fdivrl
test
cld
mov
inc
ja
jecxz
dec
cmp
fwait
rolb
dec
test
adc
cltd
cvtpi2ps
cmc
shll
xchg
adc
inc
fwait
cmc
in
jmp
scas
push
push
lret
imull
fnsave
nop
rcr
lods
mov
sti
add
cmovbe
leave
scas
push
xchg
pusha
into
sbb
adc
lcallw
inc
scas
sbb
fsubs
mov
sub
mov
inc
sbb
out
repnz
dec
out
cmpb
out
pop
jmp
aaa
lret
mov
inc
xor
mov
iret
mov
ret
out
push
mov
mov
rorl
push
cli
cs
jne
mov
std
mov
lcall
sub
sub
stc
into
movsl
xchg
fs
rcrb
mov
push
shlb
stc
ret
repnz
sbb
fistpl
jb
pop
pop
push
or
fnstcw
jne
bound
sub
mov
jl
xchg
dec
js
inc
sbbb
outsb
nop
adc
xchg
fldt
mov
sbb
cmp
sbb
xchg
jo
loope
dec
fmuls
fwait
aas
icebp
cmp
inc
sbb
fcomps
jg
mov
rorb
imul
roll
push
cli
lahf
lock
adc
jno
cld
mov
mov
repnz
jne
jle
roll
sarb
je
xor
cmc
and
sub
shl
ret
ds
rclb
jo
shr
mov
cli
lretw
lods
or
sahf
test
push
aad
xor
xchg
push
jo
mov
dec
mov
mov
fdivr
cmc
mov
jmp
ret
jbe
lret
aad
ret
lds
push
pop
xchg
rorb
mov
call
in
jmp
or
dec
xor
sbb
mov
mov
mov
mov
cmp
sbb
cmpsb
repz
mov
pop
data16
pop
mov
das
mov
jns
or
ror
adc
popa
andl
cld
data16
add
add
pop
cltd
dec
mov
dec
dec
adc
dec
jb
mov
aas
loope
das
call
mov
mov
iret
adc
sarl
xchg
mov
movsbl
adc
and
shll
fistpl
aas
or
inc
mov
jmp
push
inc
mov
stos
addr16
into
iret
mulb
hlt
adcb
pop
out
mov
icebp
adc
push
rcrb
jb
dec
enter
repnz
xchg
sub
xor
test
fwait
jmp
mov
loop
xorl
sub
popa
lods
insb
sub
clc
enter
pop
mov
mov
or
xchg
push
cs
mov
sub
xlat
sti
xor
pop
xor
sub
hlt
mov
push
fwait
pop
pop
es
aad
iret
jae
and
loope
push
or
sub
and
out
mov
popa
bound
or
leave
inc
push
push
mov
hlt
out
mov
cmpb
cld
decl
out
lahf
fdivs
jno
lahf
out
idivb
xchg
jg
movsl
adc
sti
dec
lea
inc
mov
push
xchg
aad
cli
cmp
std
arpl
lret
xchg
stc
imul
mov
jmp
stos
jb
fcmovnbe
fdivs
sub
lcall
data16
cmp
adc
mov
add
or
icebp
lds
and
test
aad
std
sbb
pop
pusha
mov
xchg
leave
inc
daa
adc
outsb
jmp
xor
addb
les
lock
mov
subl
js
rcl
and
imul
leave
adc
js
sbb
jae
inc
and
mov
push
std
int
sbb
mov
movsb
sarl
enter
ret
data16
mov
popf
lods
and
dec
jg
in
shr
cmc
rorl
sub
cli
leave
scas
rolb
scas
inc
lcall
addr16
mov
mov
imul
stos
push
aas
mov
mov
cltd
pushf
jmp
lahf
or
testb
vmovq
orl
mov
mov
ret
mov
aam
cmp
and
mov
adc
movsb
jnp
cli
cmpsb
imul
lods
xchg
mov
out
aam
aam
dec
mov
ljmp
jb
sub
dec
mov
and
jge
cli
ret
jmp
mov
cld
mov
mov
adc
jo
mov
xchg
xchg
leave
push
xchg
mov
xchg
mov
sub
in
fmull
mov
mov
cmc
xor
push
js
xor
jo
in
sub
jge
xor
iret
mov
and
out
test
xchg
in
sub
rolb
lock
fnstcw
lret
in
xor
inc
daa
mov
mov
sbb
mov
fsubl
sbb
push
add
mov
jbe
jge
jb
jb
loop
dec
jne
bound
cmpsb
cmp
push
insb
shr
mov
in
dec
cltd
dec
mov
pop
sbb
mov
inc
push
and
jnp
cmpxchg
cmpl
mov
into
mov
push
mov
stc
xchg
or
and
xchg
push
mov
loop
out
out
cmp
cmc
xchg
push
icebp
outsl
dec
popf
add
fcoml
lods
retw
repnz
or
mov
mov
mov
push
into
lret
scas
pop
inc
lcall
nop
dec
lcall
fadds
xchg
gs
push
dec
pop
inc
fsubs
jb
mov
and
lahf
mov
mov
adc
inc
imul
xor
jne
push
loop
sbb
fistps
sarb
push
fwait
inc
jle
inc
adc
mov
andb
out
jne
xchg
fwait
scas
in
pop
dec
sahf
mov
repnz
push
jecxz
jb
aad
mov
popa
dec
bound
and
or
gs
gs
dec
inc
sub
sbb
stos
xor
jbe
cmc
in
cmpsl
mov
mov
fcoms
mov
in
cs
test
mov
inc
push
cli
test
jne
pop
fsubrp
test
xchg
jb
repnz
je
pop
fwait
arpl
mov
sbb
push
push
daa
sub
inc
cli
sbb
les
sbb
in
repz
jg
cmc
gs
test
or
adc
inc
push
out
jmp
and
push
lret
ret
in
jbe
jg
add
shrl
jge
jb
test
mov
arpl
andl
adc
mov
gs
mov
jb
test
bound
les
loop
outsb
pop
into
xlat
out
fs
mov
test
pop
gs
inc
fwait
push
push
mov
xor
testl
push
out
cltd
mov
pop
gs
xor
mov
xor
xor
in
into
andb
outsl
test
sbb
sbb
xlat
push
js
xchg
out
push
pushf
ss
inc
scas
xchg
pushf
je
mov
xchg
xchg
cld
test
sub
or
mov
adc
pusha
pop
popa
out
push
and
push
xor
sti
loopne
mov
sub
iret
ficoms
push
movsl
jmp
aas
imul
sbb
lds
xor
jg
clc
add
mov
jge
ret
pusha
xor
stc
dec
jle
scas
test
test
sti
cwtl
jbe
jns
cmp
jmp
push
or
xchg
push
mov
fcomip
scas
xor
cmp
sub
xchg
bound
mov
sub
cmc
int
fisubs
xchg
mov
fs
dec
adc
cmc
mov
xor
les
bound
mov
mov
ss
sub
les
mov
mov
gs
in
add
jne
push
ss
pop
dec
mov
jmp
test
in
icebp
cmpsb
jmp
sbbb
dec
aas
mov
int
xchg
cmpsb
xchg
cld
bnd
and
jno
mov
and
out
jb
mov
mov
cmp
push
xchg
xor
es
ror
subb
cli
fucomi
xor
in
pop
mov
push
or
xor
pushf
loope
stos
shrl
pop
mov
test
fmul
int
mov
push
mov
cltd
cmp
sbb
int3
std
xchg
mov
xor
into
std
rclb
sbb
pop
mov
push
push
je
xchg
inc
imul
mov
xor
dec
pop
mov
cld
lds
xchg
scas
push
xor
sbb
in
cmp
test
jmp
repnz
loop
fs
add
adc
inc
shll
pop
mov
pop
xchg
lret
out
jno
inc
mov
mov
and
or
popa
loop
and
out
mov
inc
xchg
dec
or
gs
int3
idivb
dec
out
xor
out
cmp
ficoms
sahf
nop
into
daa
test
mov
imul
out
fisttps
xor
lea
xchg
lods
sbb
push
les
xchg
daa
dec
xchg
movsb
into
orb
inc
cmp
sar
cwtl
adc
aad
push
stc
daa
jmp
mov
es
stos
push
in
movsb
adc
movsb
adc
into
ret
out
filds
mov
xlat
xor
test
dec
scas
out
push
xchg
lret
mov
inc
mov
sti
jnp
mov
movsl
sub
cltd
dec
pop
dec
and
pop
pop
data16
pop
jne
mov
das
jno
mov
in
dec
mov
push
movsb
inc
shlb
sbb
sub
add
cmp
imul
in
or
jle
jmp
hlt
std
mov
test
xchg
inc
mov
mov
negl
aam
fsubrs
je
sahf
mov
cmp
test
dec
mov
mov
mov
mov
jle
mov
jp
test
scas
repnz
call
ja
test
mov
gs
push
fs
push
xchg
xchg
bound
push
test
movsb
leave
lahf
cs
aaa
out
dec
push
add
mov
fsqrt
and
jl
xlat
jg
fs
call
pop
mov
arpl
xor
xor
icebp
jecxz
or
incb
xor
add
aad
mov
aaa
inc
mov
mov
add
add
out
or
in
bound
xor
mov
add
mov
fisubl
js
push
loope
mov
mov
inc
es
out
mov
adc
mov
add
test
rclb
push
or
gs
inc
xor
mov
jbe
push
adc
mov
cli
enter
xor
aas
mov
cmp
push
sbb
pop
or
pop
or
inc
push
cs
xchg
daa
mov
mov
loope
cmpsb
mov
push
push
cli
inc
fsubl
les
in
pop
cli
sub
xor
mov
mov
sub
mov
jo
sbb
imul
push
cmc
mov
pushf
idiv
mov
sahf
int3
jp
fildl
repnz
xor
rorl
test
lock
sbbl
sub
mov
imul
xchg
cli
mov
mov
mov
sti
mov
sti
packssdw
inc
filds
or
js
incb
dec
lret
aas
push
push
xor
fwait
mulb
ja
inc
mov
cmc
popa
movswl
sbb
out
xchg
xchg
lods
xchg
cmc
xchg
mov
mov
ja
data16
sbb
sahf
or
jbe
out
sub
imul
push
cmp
jmp
and
jl
ja
fsubl
and
sub
fs
jmp
cmp
out
test
in
sub
adc
mov
jecxz
mov
sahf
inc
mov
jno
mov
jbe
adcb
rol
fisubrs
gs
xor
je
sub
insb
jne
sbb
sub
push
fldcw
fidivs
sub
mov
cmp
push
pusha
sbb
xchg
sub
rcl
shl
loope
and
push
xchg
subb
int3
call
mov
push
arpl
int
dec
or
out
xor
arpl
imul
addb
ljmp
outsb
scas
test
not
ds
pop
mov
cmpsb
addr16
dec
sub
pop
jns
out
sub
lods
jg
mov
loope
mov
and
dec
xchg
push
mov
scas
adc
aas
push
xor
xor
adc
lods
pop
xchg
mov
mov
and
fists
adc
in
cmpsb
imul
dec
sarl
inc
add
jl
mov
movb
mov
pop
mov
sbb
mov
movsb
std
ret
fildl
in
mov
inc
ret
rorb
inc
xor
daa
mov
fmuls
inc
lcall
and
int
das
gs
inc
mov
loope
xchg
and
xlat
in
mov
mov
mov
out
mov
fsubs
and
mov
test
das
gs
scas
xor
push
xor
dec
mov
aam
in
out
imul
movsl
fwait
lahf
jmp
das
cld
fildl
arpl
inc
mov
jp
jmp
cld
ret
mov
call
sub
leave
pop
jae
ret
inc
out
push
adc
jmp
mov
jp
andb
int3
repz
dec
pop
push
fildl
add
repnz
mov
xchg
lfs
cmp
xchg
push
clc
daa
or
arpl
arpl
xchg
adc
enter
pushf
ret
mov
in
inc
lahf
shll
rcrl
arpl
pop
lods
test
xor
loop
test
lcall
adc
outsb
loop
mov
je
xor
xchg
sti
xor
test
push
xchg
cmp
adc
ljmp
adc
out
adc
scas
pop
mov
test
stos
dec
dec
inc
and
inc
js
add
ret
bound
lock
jne
pusha
leave
fcompl
sub
xor
jle
pop
cmpb
dec
mov
mov
xchg
mov
subb
imul
push
xor
outsb
xchg
mov
inc
cli
clc
addb
out
out
daa
repnz
dec
pop
mov
stos
push
in
in
xor
jge
dec
xor
dec
xor
out
push
xor
mov
insl
jl
ds
xor
mov
mov
into
xor
scas
pop
int3
add
inc
mov
pop
je
popf
mov
nop
scas
push
mov
add
jb
lea
jb
add
pop
jg
cmpsb
xchg
xor
lcall
sarb
xor
cld
cmp
sub
xchg
test
and
or
xchg
xchg
cmp
mov
out
sar
push
rcr
ficoms
xor
ret
or
mov
or
and
pop
outsb
xchg
push
sub
jb
pop
std
fwait
adc
cmp
mov
push
gs
sub
ret
add
shl
jg
inc
xchg
mov
je
arpl
adc
repnz
inc
jg
adc
jmp
dec
xchg
inc
dec
jnp
pushf
scas
fisubrs
andl
lahf
push
cwtl
pop
fs
ret
add
je
fwait
test
add
inc
jb
loop
enter
cmp
sub
mov
lret
mov
xchg
xor
push
dec
mov
in
dec
push
xor
adc
mov
jbe
rorl
loop
notb
and
push
xor
fdivrl
dec
cltd
mov
xchg
repnz
popl
in
leave
daa
jbe
sbb
ds
cmpsb
mov
sub
mov
je
xor
lock
ror
jmp
roll
add
mov
scas
and
xchg
xor
push
push
insb
pushf
or
sub
cli
stc
mov
icebp
nop
adc
ret
xchg
cld
lahf
add
ds
pop
into
and
bound
mov
repnz
enter
mov
inc
xor
fcoms
add
repnz
sbb
fcomps
scas
inc
mov
shll
sbb
jae
mov
push
and
fisubrs
daa
aam
xchg
mov
ret
sahf
push
scas
ret
data16
in
xchg
mov
pop
lcall
test
stos
mov
insl
inc
test
mov
xor
outsl
scas
sti
cmpsl
mov
inc
gs
pop
mov
lahf
bound
pop
fists
push
push
sub
bound
xchg
xchg
xor
cmp
jno
adc
mov
pop
popf
sub
out
mov
fistpll
imul
push
movsl
and
out
fdivrp
sub
outsb
xor
aad
inc
inc
push
test
pop
daa
cmp
inc
test
inc
pop
xchg
iret
mov
mov
add
vpcmpeqw
scas
sbb
jb
inc
popw
and
sub
hlt
test
insb
pop
pop
or
mov
notb
push
or
lcall
push
push
rcl
add
xor
repnz
xor
mov
sarl
mov
inc
cli
les
jbe
dec
montmul
adcl
loop
dec
lea
xor
jle
out
or
push
ret
aaa
imul
adc
jns
pop
in
inc
test
loop
shrl
cltd
bsr
test
jbe
in
xchg
jno
fs
pop
inc
mov
pop
cmc
push
jo
sbb
jle
stc
adc
push
mov
mov
xchg
mov
xchg
jnp
out
push
push
xchg
dec
or
or
out
mov
cmpb
fwait
xchg
mov
dec
push
in
sub
cmp
fstpl
and
push
popa
out
pop
stc
outsl
pop
dec
mov
or
dec
xchg
mov
fsubrs
xor
push
out
das
jmp
add
filds
dec
and
pop
push
mov
sub
jp
fprem1
sarl
mov
and
pop
dec
inc
es
push
dec
add
mov
mov
test
push
and
lea
ljmp
je
xor
sbb
jnp
push
sub
sbbl
and
mov
sti
adc
ss
dec
repz
sahf
or
add
and
test
xchg
mov
jno,pn
int
cwtl
out
mov
dec
imul
dec
shrb
testl
pop
adc
mov
add
mov
sti
and
push
xchg
pop
loope
les
icebp
out
xchg
imul
insl
repnz
cmpsb
cmc
or
inc
in
pop
lods
sub
sub
enter
dec
adc
cmpsb
dec
leave
xchg
mov
jnp
icebp
lock
or
movsb
pop
cmp
push
inc
test
push
jbe
cltd
pop
jnp
jne
shlb
lea
scas
out
rorl
loopne
mov
test
mov
push
popf
push
xchg
jg
jmp
and
hlt
adc
rcll
shlb
dec
enter
shrl
pop
cli
lfs
ja
or
icebp
jae
lods
and
loopne
test
pop
jg
push
sbb
mov
xor
sbb
fdivl
movsl
or
jbe
push
std
add
mov
cmc
lea
jge
jns
cmp
adc
sub
cmp
jg
icebp
dec
xor
or
lret
icebp
xchg
ljmp
fnstcw
and
jmp
or
sub
ss
sbb
stos
jae
movsb
mov
fsubrl
scas
dec
and
repz
hlt
inc
dec
test
pop
test
outsb
fildl
pop
aad
lods
xor
inc
cmc
xchg
inc
sbb
aam
loope
stc
les
pusha
fcoms
arpl
mov
xchg
mov
adc
shrb
fsubs
adc
fsubr
mov
mov
fwait
repz
scas
fmuls
adc
xor
xchg
fsubrl
xor
mov
push
dec
jbe
lods
sub
scas
mov
lods
cmc
lcall
lahf
and
pop
shlb
fistpll
fdivr
je
jmp
sbb
xor
lahf
sbb
shl
pop
int
rcll
mov
mov
lods
add
lock
cld
jmp
push
in
shlb
sub
hlt
gs
daa
pop
repz
lock
bound
outsl
sbbl
cs
leave
dec
mov
int3
cli
lahf
insb
or
mov
dec
mov
out
cld
fmul
ret
adc
push
xchg
stc
rcrl
rorb
mov
cs
cs
mov
xchg
cltd
jle
pop
pslld
iret
lahf
std
sahf
adc
mov
lods
lods
pushf
mov
xchg
push
mov
sahf
mov
scas
popf
lahf
jo
ret
fwait
xor
repz
xchg
mov
repz
jecxz
imul
pop
in
push
lds
addr16
rclb
push
loop
bound
xchg
push
mov
pop
xor
call
imul
cwtl
or
mov
xchg
push
bound
into
dec
int
dec
out
xor
sbb
les
test
pop
xchg
hlt
inc
cli
movsb
imul
jno
sbb
jno
out
or
test
mov
stc
mov
hlt
lds
das
hlt
push
push
out
cmp
jmp
lea
cltd
dec
jmp
ja
mov
jge
hlt
cmp
hlt
inc
ret
xchg
mov
popa
jle
mov
mov
dec
jb
popf
mov
adc
jne
out
int3
sub
mov
push
and
pushf
popa
mov
jbe
gs
pop
shlb
or
push
repnz
cmpsl
ret
in
adc
ror
mov
push
inc
mov
pop
mov
aad
mov
jmp
daa
inc
mov
bound
ret
pop
xchg
push
add
mov
in
add
push
test
daa
or
dec
push
insb
jle
jb
ja
mov
inc
testb
repnz
mov
mov
andb
push
xor
dec
loop
sbb
loope
pusha
sahf
and
xor
nop
jo,pn
inc
ret
xrelease
pop
dec
push
jg
mov
loope
jmp
cs
push
jmp
jp
int
test
xor
negb
push
add
ds
lea
or
add
dec
inc
xor
and
scas
shl
inc
pushf
movsl
cmp
dec
cmp
mov
test
cli
or
mov
push
mov
aas
pop
icebp
out
test
scas
pop
mov
sbb
stc
push
fwait
ror
icebp
lcall
cwtl
jg
rorb
adc
cmc
xor
xorl
repnz
test
dec
mov
stos
mov
call
outsl
fwait
adc
rolb
rol
mov
cld
pop
push
sbb
je
out
leave
movsb
xchg
xchg
adc
sbb
inc
int3
dec
sarb
pop
rolb
das
xchg
shrb
imul
mov
gs
sti
inc
popf
push
jmp
mov
mov
movsb
subb
mov
jb
sti
stos
push
cltd
pop
loope
movsb
cmp
lahf
out
dec
lock
hlt
mov
daa
int
mov
imul
gs
je
xor
xor
enter
aaa
data16
pusha
loopne
lds
dec
lret
sub
add
mov
push
je
lret
bound
xor
sbb
jl
daa
pusha
xor
loop
and
inc
fidivl
jg
jno
pusha
ret
cmpsb
nop
cltd
out
ret
ret
shll
and
xchg
popf
jnp
or
daa
iret
scas
mov
sbb
mov
jg
push
leave
push
loop,pn
dec
je
jg
adc
pop
push
jle
mov
xchg
xlat
sbb
nop
pop
fbstp
mov
xor
jle
mov
jp
adc
mov
mov
andb
sbbb
mov
in
shlb
mov
sbb
test
rorb
psubusb
jmp
stos
mov
fidivs
add
and
cmpsb
mov
dec
xor
movb
pop
pop
adc
clc
out
xor
inc
loop
in
push
loop
sbbb
lahf
jge
add
cmp
cs
cmp
out
loop
rcr
jle
into
sahf
sub
xor
nop
xchg
cmpsl
mov
aas
lret
daa
mov
dec
cli
jo
popa
ret
adc
ljmp
mov
mov
jmp
repnz
test
stc
in
jmp
xchg
mov
int
movsb
cs
xor
mov
lahf
inc
nop
xchg
jno
arpl
cld
push
out
push
cmpsb
arpl
inc
aam
cmp
loop
cltd
add
add
adc
scas
push
enter
and
pop
outsb
popf
bound
jge
out
fidivrl
push
popa
pop
scas
sbb
mov
push
out
ret
ret
dec
imul
mov
and
out
mov
ret
in
xchg
sub
enter
and
cmovb
cmp
cmc
lods
insb
mov
jge
cli
stos
fwait
jo
lret
push
sbb
outsb
jg
clc
es
into
repz
ret
in
cs
rcrl
mov
mov
ja
dec
mov
out
jg
lcall
jns
mov
and
and
popf
push
loope
push
aas
test
jmp
xor
push
stc
movsb
sub
and
jmp
pop
xchg
xor
rcll
jg
jg
inc
lea
push
cmc
fisttpl
aad
fwait
icebp
in
leave
out
pushf
push
imul
adc
out
jp
out
adc
dec
mov
orb
out
inc
add
inc
lods
xchg
mov
ret
mov
imul
lcall
cmc
fwait
bound
cmp
mov
test
dec
and
adc
push
test
int
push
dec
sub
scas
dec
xchg
inc
int3
push
mov
push
dec
mov
jg
into
fisubrl
push
insb
jg
mov
push
adc
das
out
cmc
inc
mov
push
fsts
loope
jb
ss
subb
or
sti
pusha
test
sbb
pop
das
pop
stos
ds
mov
popf
test
push
in
cwtl
arpl
lret
push
adc
test
sbb
repz
jg
fcomip
mov
outsb
adc
shll
sub
stc
mov
aas
mov
icebp
mov
push
out
jbe
adcl
xor
out
ss
adc
dec
push
and
filds
iret
mov
mov
xchg
sbb
mov
flds
ret
sahf
iret
mov
ljmp
push
iret
sub
pusha
mov
or
lcall
subb
cmpsb
inc
stc
xor
pushl
outsb
xchg
orb
loopne
loopne
dec
mov
mov
stos
add
jecxz
pop
mov
sub
sub
jl
jmp
xlat
ljmp
leave
bound
and
int
pop
adc
das
add
and
dec
aam
rclb
xchg
jmp
mov
movsb
ja
ds
add
mov
push
cmp
fwait
mov
into
bound
fdivr
or
stos
ljmp
les
fdivr
jg
cmp
jb
xchg
mov
mov
lahf
lret
stos
ds
aam
mov
loopne
loopne
jmp
xor
xor
sub
lret
add
orb
ljmp
sbb
lahf
lock
xor
popa
daa
pop
pop
and
ret
xor
adc
in
mov
jmp
mov
or
push
popa
mov
mov
and
inc
bound
xchg
fisubrs
in
call
and
jnp
xchg
mov
mov
fdivl
pushf
and
adc
mov
mov
and
and
out
leave
or
jge
xor
into
mov
mov
in
jb
push
shll
and
movsb
leave
scas
dec
add
jl
pop
push
xchg
cs
mov
jo
scas
cwtl
or
fcmovu
fwait
jg
ret
xor
jnp
dec
push
xor
movsb
test
scas
lea
ds
sub
lods
mov
sbb
xchg
xchg
icebp
das
jl
mov
nop
lret
pop
add
jnp
nop
xor
mov
int3
test
xchg
pop
mov
rcrl
fwait
lahf
aad
mov
cld
daa
repz
sub
mov
ficomps
pushl
push
mov
aaa
xor
ret
xor
sub
push
ja
mov
dec
mov
sbb
in
fistpl
xor
cmc
out
stos
jg
and
leave
paddb
inc
out
add
out
inc
addb
adc
push
scas
jg
lret
hlt
js
mov
insb
ret
xor
test
mov
xlat
mov
fnsave
ret
int3
inc
dec
mov
push
mov
ficoml
ljmp
inc
fcmovb
ret
adc
xor
hlt
sbb
and
inc
jle
mov
imul
sti
out
inc
adc
push
cmp
sub
scas
pop
sarl
cld
clc
orb
mov
pop
fwait
adc
mov
lock
fcmovb
ret
xorl
aad
cmp
dec
pop
xor
pop
in
shr
adc
mov
adcb
push
das
xor
ret
or
mov
xor
sbb
cmc
mov
jmp
scas
jge
pusha
jmp
mov
sbb
scas
xchg
mov
and
mov
dec
or
rcl
inc
jg
pop
and
sbb
jnp
mov
fs
daa
pop
scas
xchg
sub
push
inc
add
mov
sub
jb
jg
jp
adc
push
cmpsb
xor
sbb
cltd
push
lea
jmp
imul
xchg
xor
xchg
fisttpll
aas
mov
or
psubusb
push
sbbl
into
push
negl
fwait
lea
fidivl
mov
cmp
pcmpgtb
or
imul
and
jge
jne
hlt
xchg
cmp
xchg
cmp
xchg
xchg
cmp
xchg
sub
jo
xchg
mov
fcmovu
add
aas
cltd
aas
xor
pop
and
inc
push
and
adc
pop
incl
push
popa
outsb
push
mov
add
adc
es
xchg
xchg
pop
dec
dec
inc
loopne
xor
test
push
push
mov
fwait
ret
mov
repz
arpl
cs
jb
jb
aad
xchg
push
sbb
dec
aaa
push
and
mov
mov
dec
daa
test
fidivs
orb
nop
mov
mov
cmpsl
test
push
loop
xor
mov
pop
fidivs
dec
jle
pop
pop
lahf
mov
aaa
mov
jno
cmc
lahf
ljmp
pop
xor
popf
push
frstpm(287
nop
xchg
jg
out
mov
movsb
push
ljmp
fmul
fmul
xchg
scas
inc
mov
add
in
scas
cltd
mov
data16
and
jb
das
clc
xor
sub
dec
adc
aad
push
mov
ss
jge
cli
xchg
insb
inc
pop
dec
pop
cli
mov
push
popl
and
inc
pusha
pop
cmp
mov
mov
pop
xor
xchg
daa
outsb
out
loop
data16
icebp
pop
xor
xlat
out
clc
xchg
cs
adc
sub
mov
sub
into
jl
mov
cmp
lcall
mov
or
adc
inc
push
push
arpl
push
jp
mov
dec
dec
cltd
test
dec
push
jmp
test
leave
push
jle
pop
or
add
sahf
xor
cs
scas
out
lahf
aam
int3
sub
popf
mov
out
dec
mov
call
mov
in
mov
fmuls
call
push
scas
js
iret
mov
popf
mov
jl
les
pop
loop
add
and
das
and
xchg
and
mov
mov
and
into
out
jb
cs
pop
pop
xchg
sbb
mov
add
sbb
fisubrs
sbb
das
sbb
adc
mov
xor
jne
xor
cmp
ret
cmc
repz
xchg
into
sub
es
jnp
pushf
add
je
ret
out
ds
xchg
scas
lcall
loope
ja
lock
pop
ret
mov
out
je
arpl
scas
lret
arpl
dec
gs
pop
push
std
xchg
pushf
sahf
jno
xchg
mov
aaa
pop
les
mov
and
sbb
aas
sbb
scas
sub
das
scas
test
jo
and
in
sbb
xchg
not
cmpsb
pop
dec
push
stc
addr16
mov
scas
mov
lds
aam
jg
jne
cmc
dec
add
dec
mov
stos
cld
push
sub
aam
xchg
mov
shrb
addb
mov
xor
fsubrl
push
inc
jge
dec
daa
push
mov
scas
insb
rorl
das
xchg
jg
fisubl
jb
shr
pop
imul
mov
mov
xor
pop
push
dec
bound
adc
mov
je
jnp
lock
sbb
inc
data16
cltd
dec
sbb
shll
insl
ret
jne
mov
inc
outsb
lret
and
adc
or
cmp
push
inc
fcoms
mov
call
jnp
std
and
dec
pop
mov
in
ss
sub
outsb
icebp
lods
add
push
bound
adc
push
int
ret
insb
fstpl
xor
and
dec
jmp
mov
cs
jnp
push
mov
and
popf
mov
push
pushf
xchg
xor
es
mov
add
xor
sarl
and
lea
pop
pop
repz
mov
jno
and
sub
add
push
jg
pop
push
imul
pusha
jle
scas
xor
movsb
ficompl
sbb
lret
aaa
pop
jbe,pt
adc
lcall
popa
sub
fwait
ds
dec
cmp
insb
inc
sub
pop
in
pushl
lret
cli
mov
cmp
sub
add
fdecstp
std
xor
rcr
clc
dec
fistpll
rcr
imul
popa
stos
or
add
xchg
rorb
lea
xchg
cs
movsb
and
jecxz
or
sub
xchg
imul
mov
movsb
nop
push
mov
shr
mov
repnz
mov
sbb
sub
or
leave
jle
xchg
lret
xor
push
mov
jb
fbld
stos
inc
fstps
inc
int
lods
fisttpl
pop
in
jecxz
mov
rcrl
jb
sbb
jle
jb
fs
and
mov
mov
xchg
add
mov
mov
out
push
xor
pop
jle
jbe
inc
repnz
ljmp
scas
xor
add
fucomi
sub
or
mov
rcl
xchg
xorl
xchg
ss
divb
popf
inc
xchg
xlat
leave
orb
cltd
cmc
cltd
insb
sbb
mov
data16
inc
push
mov
and
out
scas
cld
test
test
push
pop
int3
sub
jle
and
cli
out
or
xchg
push
dec
test
mov
popf
inc
int3
scas
fiaddl
mov
movsl
popa
cs
mov
inc
incb
movsb
adcl
xchg
mov
cs
sbb
mov
jnp
cli
orl
fistpl
pop
aas
sbb
es
adc
shrb
pop
mov
mov
dec
mov
dec
sti
cmpsl
mov
or
inc
pop
inc
jg
out
dec
mov
xchg
cmc
int3
ret
out
inc
stc
add
sbb
repz
lahf
mov
mov
ret
dec
mov
push
sbb
pop
mov
push
pop
fnstcw
das
lods
and
mov
fistpl
and
xor
jl
cmp
scas
adc
adc
aas
das
nop
idivl
push
test
bound
mov
xor
xchg
push
push
mov
mov
aam
mov
mov
mov
arpl
cli
test
inc
psubd
popa
outsl
lods
jbe
fidivrs
js
mov
mov
daa
je
bnd
mov
dec
out
mov
test
push
imul
mov
sti
outsl
push
add
fs
mov
lahf
cmpl
dec
jo
xchg
lcall
push
int3
call
pop
daa
or
gs
mov
int3
push
cmp
fmul
pop
jge
in
sub
dec
fnstcw
mov
mov
shrb
xor
arpl
insl
dec
push
push
out
movsb
lret
movsb
pop
pop
shlb
jp
popf
es
mov
out
and
sbb
ds
in
mov
je
popf
sahf
ss
jle
sub
ret
arpl
stos
cwtl
jo
xor
dec
pop
test
push
xchg
xchg
jmp
jb
mov
xchg
clc
imul
sti
push
inc
cmp
fisubl
xor
rcrb
mov
jg
movsb
jne
leave
adc
sub
std
fstpl
mov
jp
loop
xchg
das
or
loope
daa
hlt
pop
loop
aad
outsb
mov
sbb
inc
imul
test
sub
pushf
ss
cmp
bound
shrl
lods
push
cmc
lcall
jmp
mov
inc
adc
daa
pusha
es
loopw
xchg
or
fnstenv
shrl
push
pop
xchg
mov
xchg
sbb
jmp
int3
pushf
aam
inc
mov
stc
test
clc
fnstenv
les
dec
int
dec
jo
jb
stos
adc
sub
loop
push
jmp
push
xlat
dec
push
out
pop
sub
outsl
inc
ds
cmp
pop
add
ljmp
mov
mov
ljmp
dec
std
jmp
sbbb
sbb
inc
mov
jp
scas
repnz
in
lods
pop
push
dec
out
imul
mov
mov
add
xchg
aaa
gs
aad
adc
aaa
xor
mov
mov
addr16
out
lcall
out
mov
in
stos
inc
jmp
inc
mov
push
xchg
lods
sub
cli
push
mov
je
mov
dec
jnp
inc
lret
and
jmp
pop
lods
jg
xchg
jb
out
and
dec
scas
and
pop
mov
cs
or
rcr
and
js
idiv
outsl
xor
addl
divb
ret
leave
lcall
xor
pop
push
iret
sbb
clc
jmp
in
pop
xchg
fistps
xchg
movsl
pop
xor
push
lret
jmp
jns
and
push
addr16
lods
pop
stc
les
in
ror
fidivl
popl
push
test
cmp
adc
inc
jns
xor
mov
jmp
mov
ja
adcb
push
insl
add
or
lcall
sbb
xchg
arpl
cld
dec
push
xchg
or
lods
pop
add
sarl
jne
ret
xlat
dec
jge
pop
fcmovnbe
mov
add
ret
addl
scas
arpl
mov
inc
sbb
push
jp
jecxz
sahf
outsl
xor
andb
popf
outsb
ds
lock
mov
push
xchg
pop
dec
stc
lahf
push
inc
outsl
repz
mov
cmpsb
call
mov
push
out
cld
pop
pop
add
leave
adc
inc
sub
lret
enter
inc
rcll
addl
bound
popa
xchg
stos
mov
les
out
lods
pushf
outsb
fadd
cltd
jmp
test
cmp
jg
adc
popf
adc
xchg
mov
pusha
cmc
ret
jle
adc
jg
cmp
loopne
mov
ss
mov
hlt
dec
outsb
mov
ret
test
xchg
xorl
inc
xor
test
mov
mov
inc
repz
push
mov
dec
sbb
mov
mov
pop
jle
imul
test
jb
jge
scas
gs
and
jg
mov
fisubrl
push
fdivrp
pushf
xorb
and
shl
sub
push
sahf
pushl
mov
cmp
jb
lods
rcrb
pop
test
sbb
shlb
jg
lods
gs
mov
sub
inc
lods
jne
jo
xchg
stc
fildl
test
and
mov
and
nop
movsb
push
ja
pop
mov
rcrl
ret
sbb
adc
imul
xchg
mov
xchg
cs
mov
clc
pop
inc
outsb
cmc
jne
jecxz
loope
loop
or
fstpt
into
shlb
dec
mov
and
pop
test
pop
mov
mov
or
jmp
mov
fmulp
cmpsb
adc
fdivp
enter
gs
jecxz
push
test
adc
dec
stc
push
outsl
scas
and
cmp
roll
xchg
icebp
fistpl
jecxz
je
shll
je
dec
shlb
mov
or
adc
jl
adc
decb
and
daa
lahf
and
jnp
leave
cmpsb
fcoml
jmp
sbb
inc
inc
jle
mov
xor
into
add
arpl
lcall
insb
inc
in
mov
mov
in
jns
daa
test
sub
mov
push
icebp
mov
inc
es
jmp
push
inc
xchg
sbb
xchg
stos
sbb
nop
sbb
cmp
sbb
and
test
xchg
sahf
lock
das
sub
movsb
cld
add
sbb
xchg
jnp
gs
inc
addb
jle
dec
xor
test
ss
fisttpl
cltd
sbb
jns,pt
adcb
daa
and
fcmovnb
popf
popa
test
fidivs
inc
adc
fistpl
pop
add
int
ds
addr16
mov
inc
and
jbe
push
xchg
lea
push
xchg
cltd
cmc
pop
mov
and
pusha
ret
arpl
pop
jmp
rcr
stc
and
shrb
dec
ror
pop
inc
or
je
mov
push
adc
or
inc
push
into
sub
repz
sub
dec
fbld
lret
inc
xchg
outsb
int
mov
dec
pop
scas
sarl
es
xchg
fstl
cmp
inc
rcll
adc
inc
in
push
outsb
pop
push
fildl
and
sbb
andb
js
lea
mov
cli
mov
setg
imul
push
push
jg
inc
shll
and
lret
shlb
add
mov
adc
mov
adc
aaa
push
lret
mov
and
ja
insl
inc
sbb
fcoms
mov
lret
pop
neg
push
int
push
jecxz
fcmovne
sub
ret
test
daa
dec
push
fcompp
or
sbb
repnz
jge
std
jb
sub
cli
mov
xchg
mov
fldl2t
movsb
or
and
enter
imul
jmp
es
bound
pop
pop
mov
dec
in
add
inc
jmp
mov
das
cwtl
inc
sahf
leave
adc
daa
leave
pop
cld
mov
push
inc
xlat
leave
scas
xchg
jl
gs
lock
inc
or
outsl
sti
lret
mov
inc
clc
push
je
imul
test
fwait
dec
arpl
fwait
mov
enter
mov
ret
pop
das
xchg
mov
enter
push
cld
xor
into
mov
in
mov
inc
imul
cmp
dec
pop
fiadds
imul
and
repz
insb
pop
mov
outsb
jecxz
out
mov
orl
mov
nop
adc
mov
lret
dec
std
add
xor
fisttps
inc
lcall
daa
mov
adc
pop
mov
test
dec
out
xchg
bound
pop
adc
in
je
add
jb
das
inc
shr
std
dec
cs
ret
popf
adc
icebp
xchg
pop
mov
adc
out
mov
test
outsl
stos
mov
data16
fwait
inc
add
int3
fcoms
lea
adc
dec
mov
cltd
in
arpl
inc
xchg
or
cwtl
jg
pop
mov
pop
lahf
sub
mov
pop
cmp
xchg
dec
sub
or
sbb
iret
pop
mov
dec
sub
loop
add
sub
test
mov
cmp
pop
inc
sbb
orl
dec
mov
cmpsb
pushl
cmp
and
inc
ds
bound
dec
test
ds
or
adc
movsl
out
xlat
pop
imulb
dec
inc
push
shrb
adc
fisttpll
sbb
out
push
or
xchg
sbb
jne
les
in
jne
mov
push
xchg
jg
jg
aam
gs
mov
cltd
mov
inc
xchg
jne
jg
jnp
sbb
mov
andl
push
cmp
cmp
jnp
ds
jnp
arpl
int
imul
imul
pop
and
aas
cmp
out
pop
push
jno
mov
adc
mov
das
dec
cmp
leave
imul
cld
fwait
daa
hlt
into
dec
scas
rcll
shl
dec
outsb
fs
mov
and
cmp
mov
or
cld
or
sbb
sbb
lret
arpl
enter
cld
imul
rorb
fildll
xor
out
add
dec
test
xchg
xchg
mov
bound
repz
cltd
inc
shl
mov
mov
push
sub
cmp
or
xchg
jg
fdivp
dec
mov
inc
mov
push
mov
movsl
jnp
bound
jle
push
leave
cs
jne
adc
mov
lahf
movsl
pop
fmull
pop
xchg
xchg
movb
incl
hlt
lahf
lds
push
fucomip
lock
jmp
xchg
je
sbb
cmp
add
gs
hlt
pop
xchg
test
sub
filds
mov
inc
cmpsb
sbb
and
in
and
inc
sbb
cs
sbb
shl
ror
mov
test
pusha
dec
data16
jb
fldcw
retw
mov
and
jmp
inc
sbb
lret
cmp
adc
decl
xchg
rolb
mov
fists
jnp,pt
xchg
frstor
xchg
pushf
scas
xlat
pushf
pop
xchg
jg
fimull
sbb
test
imul
mov
mov
hlt
mov
inc
jmp
repnz
jle
lahf
jmp
xor
cmp
xor
xchg
test
adc
mov
jmp
inc
inc
pop
bound
iret
cld
ds
leave
xchg
push
cltd
pop
ret
andb
imul
sarb
stc
fisubrl
das
out
lret
xchg
addr16
mov
arpl
cli
stos
pushl
xor
stos
xchg
xor
cli
mov
lds
cmp
pop
and
cli
bound
pop
leave
dec
push
clc
sub
fdecstp
xor
sub
push
dec
roll
xchg
scas
lea
adc
dec
imull
cli
das
out
ja
push
popa
les
shrl
cmpsb
mov
cltd
sbb
add
inc
push
xor
mov
ljmp
jo
pop
mov
ljmp
push
test
cmp
ljmp
jge
aad
lcall
lcall
xchg
push
fwait
movsl
push
xor
mov
nop
push
and
sbb
pop
stos
ds
lcall
pop
fcompl
ss
fadd
xor
inc
cmc
shlb
pusha
jbe
inc
push
mov
dec
mov
ficoms
mov
xlat
jg
mov
adc
sbbb
cli
int
popa
mov
leave
mov
xchg
xchg
je
into
in
iret
pop
add
jno
pusha
negb
inc
and
push
adc
mov
ret
inc
xchg
in
or
pop
sbb
sbb
inc
and
jmp
or
leave
adc
add
in
scas
and
pop
ja
cs
cmc
dec
orb
cmpsb
or
xor
dec
repz
in
inc
mov
mov
or
cmc
sub
mov
sub
adc
pop
popf
push
outsl
sahf
cli
pop
test
pushf
test
inc
jg
daa
data16
popa
call
dec
push
stc
and
jp
mov
and
and
mov
xor
rorl
inc
pop
sbb
xor
imul
shl
fbstp
outsb
out
adc
mov
jo
sub
pop
adc
push
repnz
lods
pop
das
mov
dec
push
sbb
jbe
mov
dec
push
mov
and
mov
adc
or
lcall
movb
jle
sub
mov
jno
les
outsl
es
xor
sbbl
loopne
mov
cwtl
jns
popa
fdivr
mov
push
xor
popa
xor
mulb
xbegin
popa
push
sub
test
das
xor
fs
pop
sbb
lods
mov
adc
fnstenv
mov
mov
mov
cld
xor
pushf
jle
pop
push
jp
faddl
movsl
xchg
fstpt
int
or
sahf
fidivl
push
sub
jb
out
mov
sbb
sarl
stc
decl
ret
fimuls
insl
push
push
push
dec
xchg
jmp
out
push
inc
sbbb
mov
roll
cmc
and
xchg
push
cmc
sbb
cli
outsb
inc
push
fldenv
and
sbb
scas
sarl
mov
sbb
ret
ret
push
sahf
xor
aas
mov
cmp
fsubl
fsubl
repnz
mov
sbb
bound
aas
cld
int3
mov
pop
ss
xchg
lods
nop
enter
mov
mov
dec
sbb
jo
jb
jns
ss
sar
jge
or
inc
and
fiaddl
and
xchg
lret
into
into
daa
jmp
sahf
inc
pushf
aam
cmp
add
insb
fwait
hlt
test
mov
out
cmp
pop
cmp
jg
bound
in
aaa
push
cmp
test
pop
jge
stc
inc
mov
dec
or
jle
cmp
jo
inc
outsb
popf
cmp
sub
dec
and
ja
mov
xchg
xor
sub
fs
mov
xor
mov
sbb
pop
div
inc
push
or
out
icebp
sar
add
js
aas
ja
ret
mov
mov
mov
in
push
jo
dec
repz
test
lea
fldenv
adc
lcall
pop
mov
sub
aam
testl
lock
int
clc
pushf
sbb
pop
cmc
in
cmpsb
clc
mov
mov
incl
dec
movsb
loope
xchg
out
dec
xchg
dec
and
push
leave
scas
inc
pop
jnp
out
inc
jg
leave
mov
xor
loopne
jecxz
inc
stc
mov
fwait
test
cltd
mov
cmp
bound
sbb
mov
inc
and
shll
leave
data16
inc
mov
in
fldenv
inc
and
inc
lahf
xchg
xchg
daa
into
mov
and
pushw
and
in
roll
cmc
ljmp
xchg
xchg
jmp
out
outsl
inc
mov
nop
loop
push
xor
fists
ss
jmp
push
lcall
shrb
out
jmp
lcall
scas
lock
cltd
out
popf
fs
and
popa
test
out
mov
fsubr
xor
add
push
pop
inc
push
xorl
jbe
jge
or
xchg
lret
out
pcmpeqb
leave
mov
ja
mov
aas
sbb
iret
in
insl
mov
jo
add
loopne
test
sbb
adcl
xchg
aam
js
jg
imul
in
push
mov
mov
lock
xor
js
stos
xchg
xor
xor
jecxz
add
cmp
lahf
fisubrl
jnp
and
into
jae
loope
aad
mov
mov
dec
scas
fdivl
scas
shl
dec
mov
and
shlb
inc
fmul
loop
xchg
xor
push
jmp
add
or
mov
add
cmp
lods
or
out
dec
pop
dec
fs
fyl2xp1
dec
pop
ror
inc
mov
mov
dec
popa
mov
fs
imul
les
clc
scas
idiv
mov
pop
leave
push
cmpsb
xchg
xchg
repnz
pop
dec
fcomps
or
lahf
cmp
notl
aaa
mov
dec
mov
pop
clc
inc
shr
fstps
add
pop
add
movsl
popa
inc
mov
mov
pop
ret
leave
cs
sub
pop
rcrb
sub
ss
mov
rep
in
lods
sbb
fstpt
incl
movsl
push
sbbl
test
inc
xor
les
lea
dec
pushf
cmp
xor
push
es
dec
cld
or
dec
push
xlat
mov
fbld
inc
xor
sub
push
add
inc
nop
jns
pop
stos
jns
hlt
test
test
test
xchg
cmc
mov
addr16
stos
adc
jge
push
ret
shrb
jbe
push
aad
xchg
fistl
bound
inc
and
sub
inc
es
mov
mov
cmp
and
push
cli
pop
stos
imul
out
test
cli
mov
pushf
lods
pop
jne
jns
ret
pop
jo
push
sub
out
cmp
sbb
add
mov
sub
pop
inc
xchg
sbbb
sub
sbb
fs
jl
movsb
pushf
mov
das
leave
shld
sub
lcall
ss
pop
mov
scas
mov
rorb
arpl
or
fcmovu
xor
push
insb
xchg
mov
out
aaa
mov
xchg
xchg
inc
into
clc
cmpsl
ljmp
and
jno
sahf
mov
or
or
in
loope
push
clc
mov
or
scas
testb
scas
adc
mov
xor
mov
mov
push
push
xchg
in
cmc
mov
jne
mov
xor
xor
out
push
pushf
xor
rolb
push
fldl
xchg
aad
pop
jle
and
xor
sbb
test
out
inc
push
aad
sub
dec
mov
jbe
jg
sub
sub
or
xor
pop
push
mov
sub
lahf
xorb
pop
pusha
and
xor
inc
fadds
es
in
lds
sub
out
mov
add
sahf
shlb
mov
mov
xor
pop
lret
push
mov
shlb
gs
enter
enter
jmp
sub
test
fists
in
mov
enter
repnz
inc
scas
lar
sbb
jmp
and
inc
dec
dec
filds
sbb
arpl
enter
ss
dec
test
divl
push
lahf
mov
sbb
jp
xor
lods
xchg
rcr
xchg
dec
mov
pop
inc
and
int3
push
sub
mov
out
xchg
iret
jge
cli
push
push
xlat
jg
call
lods
jbe
sbb
imul
mov
lods
mov
or
mov
and
xor
insb
xor
xor
jnp
dec
scas
mov
fcoms
inc
jmp
or
ret
cwtl
fmuls
pop
loope
mov
sarl
sbb
sbb
push
xchg
ds
mov
loope
adc
outsb
jge
pop
sub
add
mov
lret
xor
push
fwait
or
stos
outsb
xchg
movntq
das
iret
aam
or
arpl
cmc
cs
xlat
push
jp
stos
pop
bound
push
xchg
aad
mov
inc
mov
jl
and
xchg
push
cltd
out
popa
mov
lods
js
or
mov
leave
dec
pop
sbb
out
dec
int3
push
test
mov
dec
icebp
test
lods
and
ds
icebp
out
dec
and
fs
ret
enter
mov
xor
cld
ret
push
add
mov
pop
test
daa
push
ds
ret
or
mov
repnz
xchg
pop
mov
cmp
rcl
pop
add
rol
iret
xchg
scas
add
adc
out
xchg
stos
data16
mov
into
and
sti
imul
add
push
dec
in
int
mov
sub
sbb
divb
daa
mov
out
negl
or
pop
add
dec
das
xchg
dec
sub
ja
test
loop
add
and
adc
rorl
sti
dec
test
sub
inc
mov
cwtl
jg
dec
roll
shrb
cmc
and
mov
dec
jmp
push
jg
add
cmpl
loopne
dec
xchg
insb
aam
cmpb
test
cmp
aad
bound
hlt
sarl
jne
jo
xor
int
fsubp
into
scas
imul
repnz
aad
mov
push
loop
addb
xor
ret
push
not
sahf
test
pop
bound
mov
push
adc
mov
mov
push
push
out
xorl
test
mov
outsb
dec
scas
cs
shll
mov
pop
adc
inc
sahf
test
popa
icebp
sbb
js
int3
sbb
mov
bound
mov
outsl
andb
push
adc
inc
mov
in
fucomi
mov
jp
mov
lahf
pop
mov
mov
test
inc
aaa
or
popf
jno
and
movsl
mov
sbb
icebp
or
mov
push
jnp
iret
or
cltd
xchg
addr16
xchg
mov
into
addb
imul
pusha
xchg
xor
dec
out
push
hlt
jns
scas
mov
subl
mov
pop
lock
rcrb
sub
adcb
jne
cmp
popa
fwait
cmp
lcall
enter
or
call
ljmp
add
pusha
adc
pop
jno
jmp
xor
aam
mov
movsl
fistpl
and
jns
ss
fld
daa
sub
out
and
adc
xor
mov
cltd
push
stos
add
jbe
mov
scas
addb
test
ljmp
jnp
repz
sbb
xlat
stc
xchg
in
fcmovb
cmp
inc
push
xlat
and
sbb
or
sub
loopne
fisttpl
mov
jbe
push
mov
xchg
in
push
test
scas
mov
imul
lea
stc
jecxz
sbb
inc
jle
mov
dec
shrl
lcall
loop
in
shlb
mov
sahf
fsubl
enter
push
rolb
pop
movl
pop
shlb
nop
shll
push
scas
or
out
pextrw
and
shl
and
andb
push
jg
idivl
pop
jb
add
sbb
popa
stc
shr
mov
add
popf
imul
addb
or
jnp
mov
or
and
sbb
mov
mov
jmp
cmp
xchg
sub
sti
out
clc
push
and
pushf
fisttps
shll
adc
or
mov
lahf
icebp
fs
pop
xor
sbb
sub
dec
mov
cmp
mov
icebp
pop
pop
out
or
and
pop
mov
sbb
vpmullw
ja
popa
xchg
aam
in
mov
scas
jge
jbe
xchg
dec
inc
jmp
lret
repz
inc
mov
shlb
je
fwait
adc
in
and
xchg
jge
xor
xchg
fiadds
lret
dec
popl
sub
or
inc
hlt
cmp
decl
subb
je
icebp
ret
xor
mov
outsb
popl
scas
mov
pop
jle
lea
or
imul
out
jns
adc
xchg
sahf
push
cmp
jge
cmc
shlb
out
push
xchg
ret
fsubrl
xchg
sub
rcrb
orb
and
dec
mov
cltd
mov
adc
or
sbb
roll
push
std
sbb
repnz
xchg
push
ss
rol
inc
jge
and
mov
or
imul
xor
push
add
push
das
mov
push
jl
clc
fstl
dec
fidivs
xchg
mov
push
mov
and
and
mov
push
gs
or
repz
int3
or
pusha
pop
jne
into
adc
repz
dec
pop
pusha
cld
sub
cmpsb
ja
scas
or
and
xchg
inc
mov
lock
push
lods
inc
and
subb
mov
add
pusha
and
xchg
cltd
jl
sub
cmp
lahf
repnz
pusha
push
xchg
pop
mov
cmc
xor
fnstenv
jge
sbb
ja
xor
fwait
cmc
test
das
shlb
jbe
push
inc
mov
ja
sbb
stc
notl
lcall
daa
push
mov
push
push
push
xor
into
push
sub
lret
or
or
arpl
lods
push
jecxz
repnz
bound
dec
lahf
test
int
cmp
dec
dec
ljmp
jmp
pusha
mov
mov
cmp
xor
mov
sub
adc
mov
mov
jbe
popf
xchg
jnp
sti
cmp
or
std
fwait
or
push
inc
jmp
push
push
mov
mov
dec
stos
and
pop
jecxz
ds
and
rcrb
test
scas
inc
stc
sbb
jg
pop
sub
repz
test
pop
cs
hlt
mov
adc
into
cmc
push
dec
repz
jl
push
stos
mov
aam
or
cld
imul
clc
inc
or
repnz
sar
lods
adc
jmp
pushl
push
or
packsswb
mov
adcb
out
out
hlt
jne
mov
divl
mov
mov
jp
sub
out
cmpsl
adc
jp
aaa
jns
add
dec
adc
mov
or
add
inc
jge
sbb
mov
lds
pop
ret
pop
out
jl
aas
mov
add
stos
or
jg
outsl
push
xchg
scas
mov
dec
mov
sti
add
enter
push
test
outsl
mov
and
sub
or
mov
push
nop
xor
lahf
mov
sbb
imul
and
mov
mov
sbb
mov
jns
cwtl
mov
in
cmp
jno
loopne
adc
push
xlat
xorl
jge
xchg
add
push
jb
adcb
imul
movsb
xor
in
ja
stos
pop
inc
inc
cmp
outsl
mov
pop
add
dec
mov
mov
or
dec
clc
add
cmp
out
or
pushf
inc
call
xor
adc
out
jns
js
out
nop
gs
lods
jae
std
clc
mov
dec
test
mov
lcall
test
xchg
push
mov
int3
jle
stos
out
mov
mov
push
jp
mov
jnp
repnz
cmpsb
mov
cs
jle
pop
cmp
mov
mov
push
sbb
sub
cwtl
sbb
xchg
and
cmp
fldcw
cmp
repnz
jle
xchg
pop
int
loope
aas
mov
push
sub
mov
inc
cmp
pop
and
dec
jp
sbb
push
inc
cmp
pusha
inc
ljmp
push
jae
pop
inc
push
pop
jp
cmp
adc
sbbb
andl
outsb
xchg
mov
and
push
out
jae
fcoml
pop
push
enter
bswap
mov
enter
fsubrs
jge
jnp
pop
mov
adc
adc
mov
aam
sub
lea
sub
and
out
or
fdivrl
jae
daa
dec
mov
aas
inc
pop
jo
mov
fisubrs
pop
lret
jle
sub
arpl
xlat
mov
xchg
push
cmc
push
out
mov
imul
fdivrl
xchg
sub
push
push
cmpb
inc
jae
loopne
push
nop
jae
cmp
test
sbb
cmp
lods
loopne
push
prefetcht0
fists
pop
mov
inc
popw
mov
xlat
mov
xchg
iret
fs
in
cli
push
jl
js
pop
add
test
pop
pop
dec
push
into
cwtl
xchg
jb
jno
push
lods
inc
cmp
pop
cmp
inc
cwtl
add
dec
cmpsl
loope
pop
lock
jae
adc
js
pop
sbb
imul
and
outsb
das
mov
sbbl
sarb
test
mov
ja
xchg
inc
out
jae
jl
mov
cmp
stc
push
xchg
out
jg
sti
mov
mov
add
adcl
adc
add
pcmpgtw
xorl
bswap
aaa
mov
sbb
cmp
push
mov
or
sbb
cmpsb
or
aas
ficompl
jae
cmp
dec
arpl
add
or
cltd
sbb
add
mov
adc
pop
lds
daa
shlb
incb
cmpsl
addb
cs
movl
adc
push
and
mov
sub
inc
enter
lret
fdivl
mov
or
inc
hlt
inc
lcall
nop
push
jmp
ss
mov
sub
outsb
cmp
inc
add
mov
ja
xchg
pop
pop
jae
inc
xchg
es
mov
adc
xor
into
mov
jns
mov
nop
cld
ds
pop
cmpsb
or
fcompl
xor
into
inc
out
add
push
aam
push
jmp
test
or
mov
adcl
decl
sbb
outsl
sub
sbb
mov
ljmp
cmp
cli
pop
aad
les
cmp
inc
addr16
mov
dec
mov
mov
sub
sbb
or
cmp
pop
pop
cmpb
cmp
clc
insb
dec
sbb
jg
sbb
out
cmp
sbb
mov
stc
testl
pop
cmp
mov
mov
cmp
jmp
add
cmp
mov
push
das
cltd
pop
mov
pop
pop
cmc
clc
jmp
dec
mov
js
mov
ljmp
or
into
lcall
jg
clc
dec
call
add
movsb
stos
movb
sbb
int3
mov
in
ja
ljmp
xchg
inc
cmc
jo
sbb
test
push
jge
lret
imull
roll
aam
in
imul
cmp
test
mov
jbe
jmp
sub
cmc
dec
cmpsb
dec
addr16
lahf
adc
jg
cltd
mov
fs
jo
xchg
ss
adc
xlat
or
dec
out
add
in
es
add
pop
mov
sub
cmp
add
cmp
popa
xchg
pop
jecxz
sbb
ja
cmp
adc
push
int3
insl
mov
in
or
cmpsb
push
or
xchg
cmp
jmp
pop
movsl
inc
pop
mov
scas
xchg
scas
and
jnp
lret
adc
push
pop
bnd
out
dec
and
test
cli
jns
xlat
mov
mov
in
dec
fistl
js
sbb
xor
sti
cltd
or
punpckhdq
aam
test
fimull
outsl
fprem
jae
push
push
in
mov
and
inc
je
ja
lods
cld
test
std
mov
subl
push
mov
push
gs
hlt
hlt
xchg
lds
fsubs
xor
mov
stc
aam
mov
lcall
mov
xor
pop
push
mov
mov
inc
jb
jnp
fcoml
imul
pop
add
sbb
cmp
nop
ret
add
cmp
sbb
pop
scas
ds
sbb
cmp
test
ljmp
cmp
mov
sbb
cmp
ja
mov
xor
cli
dec
js
mov
pop
call
lods
clc
push
lahf
jge
stc
xchg
dec
xchg
ljmp
sbb
xchg
mov
pop
pop
cmp
jl
sub
ja
imul
lock
pop
ds
pop
or
in
mov
cltd
and
cmpsl
les
lcall
stos
xchg
shll
cmp
cmp
sbb
dec
and
stos
out
fisubs
es
iret
sarb
inc
sbb
dec
or
mov
das
scas
or
test
cmpl
sbb
int3
mov
insb
xchg
cmpsl
mov
sti
fisubrl
pop
stos
test
push
jb
leave
bnd
daa
imul
push
sub
fs
in
cmpsb
in
mov
clc
dec
gs
push
mov
lock
jg
jle
iret
lds
mov
push
cmp
mov
mov
xchg
or
mov
push
jmp
mov
cli
or
cmp
mov
icebp
sbb
inc
out
out
sti
lahf
jge
dec
nop
mov
pusha
cmp
lcall
or
inc
push
je
push
ljmp
int3
add
clc
xchg
imul
add
pop
cld
or
push
xchg
xchg
pop
xor
xchg
fadds
ret
or
mov
mov
js
bound
add
ds
jge
mov
or
lds
push
sbb
ret
jle
idivl
mov
cmp
pop
push
scas
cmp
cmpsl
into
push
iret
sub
fmuls
cli
cmp
dec
mov
subl
adc
mov
dec
xor
sbb
stc
lahf
pop
adc
jmp
clc
xor
mov
cmpsb
arpl
fidivrs
mov
mov
cmp
lahf
cmp
inc
jp
jle
push
out
dec
jmp
cli
cmc
test
or
dec
sbbb
mov
xor
xor
pop
cmpsl
mov
cmp
popa
cmp
xor
sub
pop
out
sbb
lcall
jg
pusha
cwtl
or
sbb
xlat
and
test
popf
xchg
push
cmp
andb
aas
test
pop
nop
pop
test
cmp
jle
lahf
mov
dec
adc
cmp
sub
pusha
lods
jbe
mov
mov
lret
test
xchg
mov
mov
fcoms
fwait
xchg
sbb
pop
sbb
addr16
fldcw
jns
mov
hlt
and
sbb
push
adc
dec
imul
sub
into
out
out
es
push
xorb
nop
xchg
jnp
mov
cmp
imul
jmp
cmc
cmp
cmp
daa
mov
out
or
mov
jns
cmp
mov
repnz
loope
pop
int
adc
push
shll
jmp
mov
inc
cmp
jp
add
les
adc
pop
js
movsl
pop
or
xor
mov
xchg
mov
jp
sbb
push
mov
mov
push
popa
repnz
out
pop
ljmp
inc
pop
ss
inc
arpl
pusha
push
out
push
jne
jns
pop
pop
enter
aad
dec
xchg
xlat
insl
dec
dec
cmpsb
pop
scas
cmp
cmp
xchg
or
mul
aam
fwait
jg
cmpsl
lods
insb
jae
stc
test
sub
pop
addr16
push
ljmp
inc
ljmp
or
dec
push
lahf
mov
cltd
or
je
xlat
push
shl
jbe
mov
mov
mov
jns
sbb
push
pop
addr16
push
outsl
xchg
mov
into
dec
test
cmc
pop
fstps
repz
out
call
clc
fimull
mov
cmp
sub
mov
xchg
sub
adc
or
sbb
cmp
test
pop
mov
and
sarl
sahf
push
ss
rorb
pop
movsl
sub
mov
ja
dec
jp
cmp
mov
cmp
adc
loop
and
mov
sbb
cmp
push
dec
mov
mov
xchg
mov
jnp
mov
xor
sbb
pop
jns,pt
or
lock
iret
xor
loopne
daa
filds
mov
push
insb
xchg
aas
inc
dec
cmp
jae
std
js
outsl
jno
inc
lahf
repz
jmp
mov
fsubr
mov
inc
jle
loope
cld
push
loopne
mov
mov
mov
mov
add
imul
imul
std
cmpsl
into
inc
aas
and
stos
gs
ja
push
and
sarb
roll
adc
iret
lods
mov
xchg
dec
pop
aam
imul
fildll
mov
loopne
push
xchg
int
mov
adc
in
push
pop
inc
jecxz
ljmp
jnp
push
lock
clc
sbb
test
aaa
xchg
test
jnp
outsl
add
ljmp
loop
insl
addb
test
test
sbb
mov
dec
out
ljmp
pop
jnp
test
ss
pop
pop
mov
dec
mov
cmp
add
jge
icebp
or
sub
mov
gs
xchg
xor
sti
cmp
fs
xor
test
inc
inc
add
xchg
stos
cmpb
push
out
add
icebp
xchg
shll
jnp
lds
pop
in
popl
cmp
cmp
mov
ss
push
fcompl
hlt
cld
cmp
xchg
faddp
mov
mov
cld
adc
imul
lcall
jns
mov
fistl
cmp
sbb
jp
push
push
jnp
adc
mov
mov
sbb
es
lea
fistpl
sahf
aad
sbb
pop
or
addr16
cmp
cmp
fwait
sbbl
popa
add
pop
fsubrp
cmpsl
mov
or
lret
mov
ja
hlt
inc
sbb
jmp
mov
xchg
cmp
stc
ljmp
pop
xchg
outsb
clc
xchg
fdivp
out
iret
adc
pop
cmp
jle
sti
test
stc
pop
adc
cmp
push
stos
pmaxub
in
pop
addr16
ljmp
stc
sub
cmp
fdivl
mov
cmp
mov
dec
int
dec
cmp
jmp
cmp
repnz
ljmp
dec
fs
add
enter
jnp
or
adc
jmp
dec
sbb
or
cmp
mov
fcomp
outsl
xchg
jg
aaa
sub
sti
or
mov
lock
aad
lea
repz
pop
push
push
test
movb
pop
sub
in
sti
imul
cwtl
mov
mov
xchg
fs
sub
pop
mov
add
mov
int3
enter
and
mov
cmp
xlat
jns
push
pop
sahf
adc
rorb
sbb
sbb
dec
push
dec
mov
inc
adc
or
adc
stc
inc
mov
lock
jg
mov
push
aaa
fidivrs
test
bound
mov
jle
adc
lods
cmp
iret
sahf
mov
gs
mov
mov
push
ja
clc
and
lds
push
cltd
cmp
outsb
testl
loope
rcll
adc
push
mov
mov
stos
loopne
jnp
cltd
lods
sub
out
xchg
mov
jle
sbb
sbb
sub
ja
cwtl
insb
test
ficomps
lock
push
jp
sbb
mov
pop
sbb
stc
cmp
cmp
dec
cli
push
mov
push
bound
mov
enter
cmp
pusha
inc
clc
or
int3
dec
pop
imul
pop
xchg
jge
sbb
cmp
jle
stos
jp
inc
imul
add
arpl
dec
test
inc
sbb
mov
sbb
les
inc
sbb
jle
fidivl
mov
pushf
jg
popf
outsl
push
lods
xchg
xchg
push
popa
dec
mov
jae
sbb
mov
fisttpl
mov
xchg
mov
xchg
dec
cmp
inc
pop
repz
mov
sbb
ja
dec
scas
adc
mov
ficompl
dec
daa
fwait
fwait
or
clc
or
and
sbb
mov
test
and
mov
subps
in
add
out
mov
outsl
sti
inc
xor
fisubrl
bound
fs
xchg
imul
clc
or
pop
test
cmpsl
and
fidivrs
mov
cmp
mov
sbb
mov
mov
sbb
sub
mov
sbb
ds
or
xchg
cmp
jns
mov
inc
sub
out
mov
mov
pop
das
mov
mov
iret
push
in
pusha
sbbb
pop
add
push
cltd
pop
movb
leave
pop
test
daa
xorb
pusha
mov
addr16
out
andl
dec
sub
add
sub
jns
aam
add
pushf
leave
or
punpckldq
std
fisubrs
dec
inc
jno
stc
inc
mov
sub
test
adc
sbb
imul
ljmp
jns
dec
inc
pop
mov
test
add
cmp
jns
mov
cmp
mov
add
inc
shrl
stc
popa
push
test
mov
and
jmp
sahf
mov
mov
sbb
and
push
mov
dec
pusha
pop
mov
mov
xchg
jp
jno
enter
mov
jge
pop
xlat
js
fmulp
add
sbb
test
mov
fwait
jmp
push
sbb
push
fiaddl
xor
icebp
mov
add
cmp
mov
leave
jl
cmp
inc
adc
cmp
pop
dec
cwtl
stos
xchg
sub
popf
pop
ja
mov
mov
js
bound
add
add
es
cmp
pop
clc
mov
sub
subl
jl
inc
cmp
cmp
cmp
test
pop
js
icebp
stos
shll
out
pop
rep
stc
and
add
sub
inc
lcall
push
pop
dec
mov
jae
js
lret
jp
xchg
loop
xchg
or
rorb
or
js
pop
or
add
xchg
lret
lahf
mov
cmp
sbb
cmp
jl
xchg
clc
fnstcw
shll
add
jo
pop
arpl
dec
loope
cmp
outsb
and
loopne
cltd
test
popf
sub
stos
test
bound
fsubrs
cmc
aad
movsl
lret
sti
jns
and
outsl
in
loope
fdivl
aas
ret
sbb
sbb
out
cmp
xchg
aas
fiaddl
iret
lret
test
xor
cmp
mov
add
pop
inc
js
pop
test
leave
inc
dec
stos
repnz
push
ljmp
pop
xchg
popa
cld
outsl
add
cltd
ficoms
testl
dec
les
out
mov
ds
mov
adc
sbb
cld
je
add
cmp
adc
inc
sti
cmp
adc
mov
aad
ljmp
ret
xor
mov
mov
fdivrs
mov
fisubrs
mov
imul
sbb
ja
mov
fdivr
inc
scas
mov
inc
pusha
sbb
fistpl
in
cmpsl
mov
cmp
sbb
cmp
inc
cltd
daa
mov
mov
cld
dec
cli
divl
cmp
xchg
cmp
mov
cmp
xchg
cmp
sbbb
popf
out
test
push
data16
sub
sub
arpl
xchg
pusha
sub
repnz
push
js
adc
cmp
sbb
inc
das
or
pop
rorb
mov
cmc
je
xchg
movsl
push
out
mov
mov
mov
and
sbb
cmp
mov
je
pop
or
cmp
jb
mov
jle
sahf
add
pop
pop
in
cmp
fmull
sbb
gs
shl
sbbl
push
xor
xchg
hlt
aad
data16
mov
in
xchg
sbb
jp
cmp
dec
inc
js
cmp
mov
aam
repnz
hlt
insl
xorb
mov
pop
jle
sbb
sti
cmc
daa
test
jns
fs
mov
sbb
mov
sbb
addr16
lods
test
mov
stc
dec
ficomps
adc
push
pop
add
push
mov
enter
or
outsb
add
xor
cs
mov
push
cmp
andb
fildll
lods
mov
jnp
push
sub
psadbw
mov
cli
les
cmpsl
inc
xor
and
adc
push
std
scas
mov
jecxz
mov
imul
int
lea
or
jae
ja
pop
mov
inc
xchg
insl
inc
jge
fistpl
test
inc
or
fwait
cmpsl
outsl
in
xlat
mov
pop
and
cli
cmp
push
outsb
adc
ljmp
sub
sbb
mov
cmp
scas
push
cmc
out
fcomps
outsl
out
mov
lds
ljmp
xchg
rcll
or
jo
add
jnp
lock
shlb
mov
push
loope
out
cmc
andb
cmpb
mov
dec
xor
fbstp
pop
sbb
xor
add
jns
mov
in
or
pop
xor
push
popf
or
rorb
inc
fldenv
cmpl
xchg
add
cmp
or
clc
pop
loop
pop
lods
dec
mov
or
mov
adc
xchg
inc
push
cmpsb
add
lods
mov
mov
sbbl
or
sbb
fwait
cmp
in
outsl
rolb
incl
xorb
cld
repz
pop
adc
cwtl
dec
ja
fsin
xlat
dec
test
cmp
addr16
pop
test
push
decb
call
xchg
mov
dec
test
jno
aas
lods
cmp
pop
mov
imul
add
test
xchg
cmp
jp
cmp
enter
mov
fisubl
fcmovnbe
loope
and
pop
jno
mov
mov
dec
cltd
pushf
dec
mov
adc
sub
cmp
mov
inc
add
lods
mov
cmp
mov
adcl
push
ror
push
cltd
and
addr16
mov
dec
sbb
arpl
fiadds
outsb
arpl
mov
mov
jge
int3
enter
cmp
sbb
in
outsb
daa
adc
xchg
pop
push
ds
dec
scas
sti
mov
lret
jecxz
pop
fprem1
loopne
adc
test
jl
mov
ja
lods
jo
pop
mov
pop
jnp
mov
enter
cmp
and
xchg
subb
push
pop
push
pop
add
cmp
add
cmc
mov
inc
sub
cltd
dec
gs
addr16
pop
rcrl
push
push
pop
mov
sbb
aas
andb
clc
or
idivl
in
out
fwait
jae
add
dec
cmc
aad
adc
cmp
jmp
test
sub
xlat
jne
fwait
mov
adcl
push
sub
call
pop
shrl
in
mov
and
xchg
pop
in
loop
arpl
adc
lcall
mov
shld
movsb
iret
ja
ds
or
test
test
add
pop
sub
dec
lcall
mov
popl
insb
inc
mov
push
push
fcoms
push
or
fwait
aam
stos
inc
int
cltd
test
inc
mov
or
lret
jnp
out
popf
pop
dec
sbb
cmp
mov
mov
jo
pop
pusha
arpl
sub
mov
fsubrs
aaa
dec
ja
js
mov
ljmp
or
push
mov
sbb
and
push
add
andl
jecxz
xchg
xchg
inc
mov
aad
mov
jecxz
rol
test
jg
xchg
or
sbb
out
imul
mov
push
repz
ss
mov
jge
xchg
addr16
mov
dec
add
adc
jae
sbb
mov
fwait
js
push
jle
aam
ficoms
mov
cld
out
ret
sbbb
mov
dec
scas
pop
int
lock
pop
mov
testl
loop
hlt
mov
outsl
test
nop
xchg
cli
or
push
cmp
jle
mov
mov
enter
stc
popf
sbb
add
lret
ja
jae
ffree
popa
out
sbb
and
sub
xchg
outsl
inc
push
inc
cmpsl
sbb
pop
test
mov
cmp
add
pop
cltd
inc
imul
dec
adc
cmp
es
mov
fisubl
imul
test
add
jns
push
lods
jne
adc
xchg
jge
clc
xchg
jecxz
test
dec
dec
pop
mov
sbb
jnp
pushf
stos
mov
imul
push
cmp
push
or
dec
xchg
movsb
sbb
inc
and
lea
sbb
scas
fsts
jp
jg
cmp
jmp
data16
jo
cmp
inc
adc
mov
pop
mov
inc
push
mov
xor
outsl
adc
cwtl
mov
in
mov
cmc
fisubrs
jns
mov
mov
cmp
call
iret
sbb
cmp
mov
mov
cltd
idiv
push
ja
mov
jmp
mov
sarl
jle
test
shrb
or
or
ljmp
sar
test
push
jns
iret
mov
xor
adc
lret
pop
inc
mov
push
pop
cmp
dec
push
nop
mov
mov
xchg
in
mull
add
xor
jmp
test
cmpsb
add
pop
xor
cmp
clc
sbb
lea
test
xchg
or
cltd
fisubrs
pop
and
jecxz
out
andl
xlat
flds
pop
jg
jae
outsl
add
or
aaa
push
cmp
jg
rcrl
push
ret
loopne
shrb
xor
add
dec
push
push
rcl
test
jecxz
js
and
cmp
add
fldl2e
decb
mov
js
sbb
nop
pop
pop
aas
cmp
sti
je
dec
into
mov
bound
out
je
pop
jl
std
js
adc
mov
cmp
xor
fstps
pop
roll
pop
jno
sbb
push
rol
sub
je
xor
xchg
jp
inc
xor
outsl
rcrb
orl
loopne
push
and
sbb
leave
imul
mov
popf
push
testb
sbb
into
xlat
push
jl
xchg
aam
out
or
stos
cmp
xchg
xchg
es
cmp
in
add
xchg
sbb
sub
cmp
addr16
popl
adc
jmp
fistpll
inc
inc
jl
test
jp
jg
pop
xchg
dec
lret
push
mov
fmull
mov
mov
lock
imul
push
mov
mov
fimuls
inc
cwtl
sbb
cmovs
pusha
or
dec
popf
cmp
sbb
js
xor
pop
mov
jnp
push
mov
adc
cmp
jge
lock
leave
lahf
push
push
ja
lds
add
out
sarb
jl
cmc
inc
push
addr16
push
mov
scas
ret
inc
je
mov
ljmp
dec
pop
mov
pop
orb
leave
aad
xlat
in
iret
call
and
pop
popf
sub
fisubl
fwait
jg
out
pop
mov
mov
aad
dec
inc
jecxz
cld
in
fldl2e
pop
inc
into
cmp
mov
pop
add
jg
insl
pop
les
js
iret
inc
sub
test
inc
add
arpl
cmp
pushl
lock
jg
lods
sbb
movsl
lret
push
and
stos
pusha
cmp
dec
fistpll
jg
roll
inc
push
jns
cmp
dec
je
mov
out
or
jge
cmp
test
pop
aas
mov
lea
cmpsb
dec
sub
fstpt
aam
ja
mov
sub
xchg
mov
mov
mov
aas
mov
or
fs
push
imul
mov
outsl
js
jmp
test
clc
stc
lret
xchg
lds
subl
sbb
or
add
xchg
sub
push
fildl
xchg
and
mov
push
cmp
mov
in
xchg
jle
mov
cmc
pop
push
or
mov
or
sbb
sbb
adc
call
outsb
sbb
out
cmp
iret
mov
lahf
imul
ret
cltd
xchg
cld
pop
imul
jns
or
leave
lahf
sub
mov
test
pusha
add
jb
sub
and
add
jmp
ss
aam
popa
mov
pop
js
cmp
adc
and
movsb
les
mov
stc
out
mov
into
dec
popf
pop
mov
test
std
xchg
pop
mov
cmp
mov
jp
pop
or
stos
pop
pop
lds
cmp
cwtl
in
xor
cwtl
inc
pop
xchg
decb
cmp
lock
dec
xor
fadd
inc
sbb
or
imul
jmp
fistl
mov
je
xchg
dec
mov
es
push
cmp
out
cmc
pop
mov
jnp
push
cmp
aas
je
test
push
ret
lock
sbbl
cmp
mov
dec
push
mov
mov
jp
cmp
xchg
bound
subb
clc
jmp
mov
jp
pop
fstpt
popf
inc
mov
mov
cmp
icebp
jp
daa
popa
push
ja
popa
mov
ds
cld
xchg
aas
mov
insb
in
dec
rolb
mov
std
mov
jle
stc
cmp
cmpsb
mov
incb
jns
enter
or
js
push
fwait
push
or
sbb
push
pop
xchg
idiv
das
aaa
sti
iret
negl
xor
mov
pop
mov
stos
ljmp
sahf
call
sbb
adc
rcr
pop
jnp
inc
dec
adc
js,pn
or
test
jg
push
adc
out
lds
stc
imul
add
push
shl
or
lret
js
inc
cmp
repz
push
call
jne
and
add
imul
jg
sbb
cmp
ffree
dec
xchg
mov
push
add
test
or
fldenv
orl
mov
orl
faddl
js
add
negl
inc
fprem1
stc
mov
mov
int
or
sbb
pop
leave
fsubrl
cmp
or
adc
mov
imul
cmp
mov
and
dec
out
dec
ret
jge
addb
push
or
ds
xchg
or
sbb
daa
dec
test
xlat
jl
stos
call
adc
xchg
stc
push
adc
stos
cmpb
pop
addl
jmp
and
add
out
arpl
or
jmp
jp
push
inc
jns
jmp
psraw
inc
xchg
shl
dec
sbb
sub
mov
inc
clc
cmp
push
mov
jle
inc
sti
mov
jg
sbb
fnstcw
push
sbb
pop
pop
pop
ja
fistpl
and
cmp
mov
xchg
and
inc
and
mov
cmp
mov
sbb
or
mov
lret
ds
xchg
bound
sbb
mov
mov
in
jns
mov
and
mov
inc
push
mov
test
clc
xchg
movsb
ja
sub
cmp
test
push
dec
pop
sbb
xchg
test
inc
dec
or
mov
sub
ror
xchg
popl
xchg
cmp
outsb
pop
dec
js
sbb
int
call
add
add
jns
and
pop
std
es
inc
push
stc
stc
mov
mov
push
mov
or
enter
mov
xchg
xchg
jnp
sbb
push
lcall
cmp
jnp
mov
arpl
ja
mov
test
imul
push
push
cmp
pop
jmp
xchg
jmp
xor
test
or
mov
pop
cmp
ja
jle
or
inc
cld
xchg
xchg
movsl
pop
inc
push
cmp
iret
daa
fwait
ss
addr16
fistps
mov
mull
cmp
or
fdivs
jnp
icebp
clc
or
lcall
jecxz
mov
push
xchg
inc
cmp
xchg
mov
adc
mov
add
sub
out
push
push
mov
xchg
out
test
das
or
pop
cld
cmc
jl
pop
lcall
mov
aaa
cli
cmp
xorl
js
pop
cmp
jmp
je
push
pop
or
not
ja
push
adc
mov
and
sub
lahf
arpl
push
push
mov
sub
add
or
movsl
or
dec
push
fs
mov
fisubl
loop
leave
xchg
cmp
mov
jnp
push
addr16
mull
loope
sahf
mov
lea
add
gs
test
cmc
pop
cmpb
add
rolb
test
pop
adc
dec
fwait
outsb
inc
jp
mov
arpl
jnp
out
imul
test
sub
pop
addr16
add
xchg
dec
std
push
bound
iret
std
outsl
fucomi
adc
adc
fs
mov
out
mov
mov
pop
cmpsl
mov
push
sbb
pop
shr
test
push
cmp
out
dec
out
fimuls
lods
cwtl
adc
mov
mov
pop
mov
cmp
pop
sub
pop
inc
add
mov
xlat
jle
inc
xchg
daa
dec
jge
inc
jnp
arpl
cs
fists
clc
dec
lods
push
xchg
out
pop
je
xchg
cs
jb
mov
mov
lahf
add
mov
rorb
pop
adc
jle
lret
jae
hlt
cmp
adcl
inc
into
cld
adc
or
mov
inc
xchg
mov
add
rep
shlb
xor
dec
fsts
push
mov
cmp
mov
add
ja
or
stc
adc
clc
mov
or
cmp
jl
and
dec
mov
test
cmp
daa
mov
cmp
ja
das
xchg
mov
inc
lahf
sub
pusha
cmp
push
sbb
or
test
aad
orl
mov
push
sub
cmp
sub
jle
jp
adc
jne
jl
push
js
sub
lds
xchg
in
insb
lds
inc
cli
imul
das
clc
stos
idiv
imul
mov
mov
and
inc
xchg
pop
addr16
or
cmpsl
add
sub
aaa
mov
in
adc
or
das
mov
in
push
push
push
adc
fistpll
add
iret
jge
jns
ja
mov
adc
iret
fstpt
filds
stc
mov
adc
sbb
insl
mov
mov
or
xchg
cmp
popf
or
shll
lea
sbb
jg
pop
and
js
inc
or
sbb
fwait
hlt
cs
insb
sbb
sub
lret
ret
ss
and
mov
inc
pusha
sbb
cmp
loop
mov
out
mov
fcmovnb
aas
mov
xchg
inc
or
pusha
repnz
jnp
dec
repnz
mov
add
push
subb
or
mov
lret
aas
sbb
adc
lods
repnz
or
xchg
jge
enter
pop
punpckhbw
out
jnp
push
push
insl
inc
movb
xchg
test
adc
adc
pop
mov
and
mov
cld
dec
decb
or
pop
jp
imul
sbb
ret
or
add
mov
push
adc
mov
mov
cmp
pop
mov
lcall
test
dec
xchg
mov
push
pusha
loopne
dec
xor
loop
mov
pop
push
push
mov
pop
cld
sub
mov
pop
cmp
xor
push
je
mov
mov
out
gs
sub
jecxz
clc
push
out
dec
fmull
cmp
test
inc
aas
mov
addr16
mov
cld
popa
push
aaa
stc
mov
call
rep
inc
mov
shrb
mov
mov
mov
pop
fs
mov
jecxz
test
jo
fidivrs
test
test
es
pop
cmpb
test
mov
loope
mov
mov
inc
out
pop
jge
and
js
cmp
repz
and
rcrb
leave
pop
test
imul
add
scas
test
test
arpl
out
pop
xchg
xor
sub
push
cmpsb
call
xchg
push
xchg
movl
loopne
or
and
or
pop
scas
popf
js
mov
add
arpl
pusha
fldl
inc
jecxz
mov
mov
jge
adc
jle
lahf
mov
add
aas
xchg
cli
cmp
or
popf
mov
ljmp
pop
xor
cltd
test
adc
cmp
jl
add
out
sub
fsts
rcrl
cmc
add
imul
jecxz
jg
pop
int
mov
out
nop
cmpsl
adc
inc
data16
sub
fmul
cwtl
cmp
pop
dec
insb
jno
ljmp
cmp
call
stc
dec
mov
jg
ja
adc
mov
jae
clc
sti
jns
jnp,pn
cmp
mov
imul
loop
arpl
mov
push
scas
jmp
cld
pop
xor
dec
clc
or
pop
lret
adc
mov
mull
insl
mov
popf
adc
mov
test
es
add
iret
cmp
scas
sub
mov
notl
sub
xchg
data16
insb
flds
test
xchg
dec
movl
imul
xlat
cmp
test
dec
jle
daa
iret
or
ljmp
add
into
pop
jae
pop
lcall
int3
cmpsl
jle
jmp
push
jae,pn
mov
adc
adc
cmp
push
scas
mov
iret
cwtl
loop
or
sub
mov
fdivp
push
xor
xchg
mov
outsb
shll
rcl
mov
or
mov
mov
shr
adc
mov
cmp
mov
push
dec
test
test
clc
outsl
sbb
js
outsb
neg
xchg
int3
lcall
mov
loope
imul
andl
mov
pop
cmpsl
xchg
stc
jle
or
outsb
cmp
jmp
nop
xor
inc
or
dec
adc
dec
or
inc
fs
nop
mov
inc
mov
sub
ss
push
cmp
outsl
addr16
push
cwtl
xchg
pop
pop
in
or
dec
cmp
ficoms
lret
cmp
ljmp
lahf
cld
push
mov
cmp
stc
mov
movd
xchg
ds
or
mov
pop
ja
cmp
add
xchg
add
mov
leave
xlat
add
ss
pop
adc
cltd
cmp
out
adc
lock
push
js
lock
divl
mov
fdivrs
add
push
mov
loop
add
lahf
mov
mov
add
ja
subl
jbe
pop
jns
cwtl
stos
out
mov
mov
cmp
mov
dec
imul
adcb
fstpt
adc
pop
jmp
xchg
aaa
cld
mov
enter
fisubrs
testb
fisttpl
cwtl
push
mov
cmp
movsl
inc
shll
push
add
cmp
cld
jl
repz
fldt
int3
xchg
fistpll
add
mov
sarl
test
ja
scas
xchg
lods
lock
dec
out
pop
mov
in
lahf
sub
mov
xchg
pop
sbb
ja
sti
mov
jle
jnp
movsl
lahf
cmp
pop
xor
mov
push
adc
jecxz
test
lea
push
jnp
add
pop
leave
or
adc
inc
inc
jae
mov
mov
dec
pop
scas
movsb
mov
ljmp
cmp
out
cmp
in
mov
jg
call
pop
pop
in
pushf
jno
mov
push
push
imul
cs
jns
dec
das
mov
sbb
call
into
cmp
sub
or
cmp
push
lahf
jne
inc
inc
int3
mov
dec
mov
test
jne
sar
sbb
jns
inc
das
mov
sar
jg
cmp
inc
dec
pop
xchg
lock
cltd
rorb
outsb
add
xchg
int3
pop
orb
jmp
ja
and
or
dec
loop
xchg
out
clc
mov
mov
xchg
nop
sbb
lods
cld
pop
iret
cli
mov
xor
sub
movsb
or
adc
outsl
mov
add
and
mov
cmp
mov
add
pop
fidivrs
iret
sbb
lds
mov
mov
jle
or
ds
dec
sub
test
cmp
or
sbb
xchg
rorb
jmp
sub
mov
iret
push
or
enter
icebp
inc
jg
arpl
je
jmp
adc
arpl
and
and
mov
xchg
mov
mov
xchg
jl
data16
xchg
cmp
mov
das
xchg
or
mov
jns
cwtl
inc
into
jp
pop
lds
cmp
push
cs
adc
jg
sbb
cmp
lods
sbb
test
stc
sub
dec
cmp
pop
les
in
js
xor
aaa
mov
mov
out
xchg
dec
or
out
fwait
jmp
ljmp
iret
out
mov
jb
sti
clc
push
jle
xor
and
and
jg
in
imul
mov
pop
mov
leave
sbb
lea
cmp
shl
stc
outsb
pusha
jp
and
add
jbe
je
test
aad
jp
fnsave
iret
jmpw
jge
jmp
mov
add
mov
xchg
sbb
daa
js
pop
mov
inc
push
dec
dec
aam
cmp
sbb
mov
stos
subb
inc
imul
inc
aas
jb
imull
jmp
sbb
lods
cmc
fildll
jge
sbb
lret
not
into
inc
mov
xor
and
mov
dec
lods
add
mov
out
jmp
fchs
mov
jmp
mov
pop
testl
sbb
ja
aad
icebp
nop
mov
lret
push
mov
repz
pop
cmp
movsl
xchg
xlat
in
xchg
int3
jb
test
inc
arpl
pop
test
push
popf
mov
pop
and
sub
gs
cli
cmp
cmp
xchg
mov
cmpsl
xchg
mov
pop
lods
push
jg
lock
pop
mov
out
add
dec
sbb
or
pop
pop
push
sub
mov
push
push
movsl
jne
dec
mov
jecxz
ja
mov
cmp
inc
stc
faddl
in
cmpsb
add
fistps
dec
add
insb
rorl
stos
rclb
out
and
adc
pop
cmp
bound
dec
call
cwtl
test
lock
daa
jnp
jge
sar
call
sub
pop
jecxz
mov
idivl
push
out
pop
je
lcall
out
pop
imul
mov
cmp
ja
xchg
cmp
and
sub
add
inc
and
outsl
stos
cmp
push
pop
inc
jnp
fsubp
movsb
xor
pop
push
call
data16
cmp
push
mov
and
leave
ja
push
jo
shr
lock
push
out
add
mov
daa
xchg
in
lods
mov
ja
pop
insl
and
mov
psubw
push
dec
xlat
mov
rcrl
clc
jecxz
aaa
outsl
cs
leave
dec
jnp
notl
out
out
or
push
push
sbb
pop
repnz
pop
lock
pop
outsb
pop
xchg
out
addr16
int
sub
or
sbb
dec
mov
sbb
xchg
cmp
pop
leave
cmp
sbb
das
popa
outsb
sbb
xchg
inc
sub
cmp
dec
jl
cmp
mull
bound
cmp
sbb
ljmp
or
ja
and
sbb
xor
xchg
xlat
lahf
insb
mov
add
pop
dec
mov
jl
jns
cmp
out
test
mov
gs
pop
iret
sub
cld
out
mov
pop
xchg
stos
cmc
adc
push
jo
inc
cmpsb
add
dec
int3
cwtl
add
bound
ret
loop
adc
mov
idivl
std
xchg
mov
out
loop
clc
gs
cmp
pop
adc
dec
jmp
add
adc
stc
shll
enter
cltd
mull
push
dec
sub
ds
clc
lret
mov
inc
pusha
jg
xor
cmp
imul
adc
pop
push
inc
add
iret
add
mov
or
xor
mov
stos
xchg
sbb
push
mov
clc
pop
or
loopne
dec
add
xchg
ja
sub
js
js
pop
cmp
fdivp
sub
and
add
xchg
push
pop
mov
cmp
jp
mov
cmp
mov
jge
dec
jl
mov
jle
daa
pop
pop
popa
mov
dec
inc
cmp
jmp
pushf
in
imul
ss
xchg
cli
xchg
pcmpeqd
inc
adc
xchg
aad
mov
or
in
bound
or
push
pop
dec
in
mov
ja
pop
scas
repz
sbb
fxch
call
xor
test
push
call
sub
pop
sbb
xchg
jno
mov
lods
mov
xor
mov
adc
pusha
ljmp
paddsw
stc
or
data16
out
cmp
js
popf
mov
jp
fdivrs
sbb
cli
mov
shll
xchg
xchg
inc
sub
inc
xchg
sub
push
adc
rol
or
sti
lahf
sbbb
mov
popa
mov
adc
xchg
mov
jne
cld
lea
repz
jne
imul
cmp
sub
mov
mov
pop
mov
sub
push
popa
push
dec
xor
mov
dec
test
test
adc
gs
mov
mov
jp
add
pop
jp
push
out
jp
loop
mov
sbb
push
pop
jecxz
cmp
or
clc
imulb
mov
inc
pop
push
jnp
or
jnp
mov
pop
mov
sti
adc
cmpl
sub
mov
mov
cmp
ljmp
inc
mov
add
rclb
xor
mov
dec
pop
aas
xchg
adc
pop
xchg
or
ja
insb
sbb
inc
fwait
and
mov
cmp
pusha
mov
cmp
adc
lds
xchg
and
movsb
pushf
mov
sbb
adc
push
pushf
adc
xor
adc
xchg
jo
adc
mov
adc
stos
mov
loope
xchg
aas
or
pop
mov
lcall
fwait
xchg
sub
paddd
sbb
inc
pop
rorb
jg
test
sub
add
jge
notw
push
sub
sarl
arpl
in
popa
push
mov
mov
push
jge
rorl
cs
filds
pusha
xor
andb
push
fs
inc
fcomp
pop
std
xchg
jnp
sub
addr16
sub
rclb
inc
cmpsb
xchg
pop
aad
mov
cmp
jg
cmp
test
sbb
jae
pop
cmc
cmp
jl
or
stos
cltd
daa
adc
ljmp
sbb
or
adcl
xchg
xlat
in
push
dec
sbb
mov
andl
pusha
xor
xchg
cwtl
rorl
xchg
int3
scas
aaa
lahf
cmp
add
or
sbb
and
and
dec
iret
rorl
aam
cmp
pushf
stos
cmpsb
sbbb
or
inc
mov
cmp
or
out
pop
fsts
icebp
fidivrs
daa
and
pop
mov
sbb
cmp
roll
adc
pop
int3
aam
imul
xchg
adc
xor
test
icebp
adc
iret
and
out
dec
mov
lods
or
iret
pushf
jo
jnp
daa
add
jmp
rorb
stos
sbb
lahf
adc
ss
inc
pop
adc
inc
clc
ljmp
jle
mov
clc
jle
dec
rcr
js
adc
cmp
pop
cmp
dec
lds
fisttpl
mov
xchg
cmpsl
test
sub
add
dec
filds
push
push
dec
cmpsb
push
xchg
pop
xchg
jnp
fistl
jnp
pop
test
jbe
and
sbbb
add
in
fmul
lock
sub
cmp
orl
iret
and
add
idivb
testl
test
jns
jp
adc
fistl
dec
cmp
sub
cli
dec
mov
sbb
nop
inc
mov
sub
test
cld
xor
mov
cmc
js
popf
or
cs
shll
fdivs
data16
test
adc
mov
dec
mov
cmp
jnp
fnop
or
sub
clc
cwtl
xchg
lret
xchg
stos
mov
ljmp
add
push
mov
cmp
inc
jo
call
in
ja
ljmp
pop
xor
mov
fstps
nop
stc
sub
and
aad
in
lret
ja
cmp
push
cmc
or
or
dec
cltd
or
mov
xchg
fwait
rorl
in
or
push
push
fucom
js
cmp
jmp
sahf
fcoml
clc
aas
fsubrp
jbe
mov
jnp
sub
mov
stc
pop
pop
pop
pop
xchg
fwait
into
mov
scas
jle
loope
roll
ja
in
pop
ret
push
sti
sbb
iret
faddp
sbb
mov
test
and
xchg
push
add
and
push
pop
clc
cltd
cld
aam
addr16
or
aam
push
in
stos
jle
bound
int3
inc
shrb
adcb
popl
jl
test
add
jecxz
leave
ljmp
mov
sbb
push
jecxz
jnp
out
fsub
pop
lods
mov
push
bndldx
mov
pop
push
fwait
insl
das
pop
insb
cmp
cmp
pop
mov
pop
jp
xchg
sbb
inc
pop
pop
mov
mov
add
or
adc
sbb
mov
or
fiaddl
dec
ds
loope
mulb
jae
fucomi
mov
mov
fprem1
ret
inc
mov
ret
xchg
xchg
xchg
sbb
jl
mov
xlat
rcrl
push
add
cmp
sarb
int3
xchg
shll
jmp
xchg
fsubs
std
jo
mov
std
cmp
dec
outsb
pop
idivb
mov
dec
rcrb
mov
or
ret
push
pop
pop
sti
mov
push
out
inc
sbb
stos
andb
jge
push
out
into
out
push
cmc
pop
mov
xchg
cld
repnz
dec
pop
inc
mov
fiadds
in
mov
push
call
insb
jl
xchg
into
jecxz
sub
xchg
fildll
daa
mov
push
push
rol
imul
pop
insb
inc
adc
mov
adc
lret
lahf
pop
movsl
inc
inc
add
inc
mov
sub
cmc
sbb
decb
stc
scas
sti
xlat
push
dec
adc
inc
xchg
cmc
sbb
sti
jge
fcmovne
xchg
add
xchg
inc
in
mov
ja
cmpsb
mov
push
imul
ffreep
mov
insb
leave
dec
ja
aaa
or
xchg
dec
sub
xchg
dec
and
dec
jge
jbe
dec
dec
mov
cmp
xchg
repz
test
jge
mov
cmc
cmp
loopne
out
mov
imul
dec
jbe
xchg
jne
push
dec
mov
cmp
push
in
mov
movb
dec
and
int3
xor
lock
test
dec
push
adc
inc
and
push
pop
jo
cmc
dec
pop
inc
cmp
xchg
mov
pop
mov
scas
dec
xorb
xchg
daa
or
jo
mov
mov
pop
call
pusha
test
and
xchg
pushf
add
ss
ds
sbb
ja
mov
xchg
push
sbb
or
mov
mov
pop
popf
jns
mov
ja
sub
jle
out
dec
loopne
and
push
cmpb
data16
xchg
inc
clc
popa
rcr
cmc
jae
cmp
xchg
mov
and
fwait
mov
ljmp
pop
add
pop
jnp
pop
pop
mov
jnp
pop
mov
adc
sbbb
pusha
dec
adc
sub
fnstcw
pop
inc
fwait
push
jge
es
mov
ds
mov
mov
or
sarb
test
jns
fidivs
fisttps
pop
jno
data16
lea
or
jl
inc
ds
repnz
mov
lods
mov
jno
int3
das
cmp
pop
mov
sub
gs
adcb
sbb
adc
clc
xor
or
test
jl
add
and
dec
test
pop
jecxz
mov
cmp
shrb
clc
fdivrs
pop
mov
mov
xchg
dec
inc
jne
push
and
fstl
shrb
andb
js
add
addl
cmp
pop
jnp
fisttps
and
fsts
or
jle
mov
mov
or
pop
mov
pop
xor
outsl
inc
dec
pop
sub
xchg
mov
mov
loopne
mov
or
pushf
dec
gs
lods
std
aas
inc
mov
ljmp
pop
testl
mov
xor
ret
stos
jle
stos
gs
pusha
fidivl
aam
or
fildl
push
int3
inc
pop
ret
pop
popf
xorl
cli
dec
push
test
pop
jmp
sarb
imull
jecxz
insb
insb
rolb
out
push
sub
mov
test
fsubrl
mov
imul
push
popa
sub
jmp
movsl
cli
pop
jle
sbb
je
xor
cwtl
dec
ds
cli
cmp
xchg
xchg
mov
mov
test
sub
cmp
push
push
sbb
js
into
xchg
jge
or
jge
mov
push
xchg
fcompl
pop
mov
add
push
jbe
cwtl
cmp
inc
inc
jnp
test
push
push
add
fiadds
rorl
dec
out
nop
je
sbb
add
jp
cli
push
arpl
ljmp
sbb
add
pop
je
aaa
rcrl
cmp
js
add
fsubrl
cmp
cmp
fstl
dec
loope
cli
sysret
aaa
test
mov
divb
int
insb
test
mov
fimuls
adc
dec
dec
cmpsb
or
dec
add
movsb
push
das
bound
jg
test
jmp
cmpsl
cmp
and
mulb
pop
std
pop
inc
cmpsb
xor
push
sbb
cmp
cmp
mov
out
ljmp
cmp
push
cmp
fldl
insb
cmp
fcmovne
rorl
roll
fdivrp
icebp
addb
outsl
in
mov
push
jl
pusha
lods
gs
sub
fstl
frndint
lods
jne
pop
sub
loop
sbb
or
pop
sbb
xchg
ja
mov
cmp
and
sub
and
mov
inc
daa
rolb
mov
es
xchg
xor
sbb
cmp
test
jne
imul
daa
mov
push
out
jb
mov
xchg
jns
mov
push
jle
jmp
test
xchg
jmp
sbbl
pop
roll
mov
imul
mov
out
cmp
test
xchg
push
xor
sub
pop
fstpt
mov
mov
fistpl
idivl
push
sbb
rorl
ja
ret
xor
add
inc
and
fwait
mov
int
pop
pushf
push
push
mov
test
cmp
filds
testl
js
adc
push
mov
pushf
mov
rcr
cmp
aas
lods
call
pushf
lods
mov
and
mov
jge
cmp
fwait
les
add
add
add
xor
jmp
sarl
jnp
filds
test
mov
test
in
xchg
testl
add
cwtl
pusha
cmpsl
cmp
cwtl
sti
jb
dec
sti
inc
js
cmp
loope
sub
cld
mov
rcrb
js
mov
inc
sub
mov
dec
cwtl
into
or
mov
cs
dec
hlt
fdivs
jmp
add
fs
and
mov
mov
xchg
ja
sbb
cmp
push
mov
fcom
adc
repz
movsb
and
sbb
push
sub
rcr
mov
mov
pop
daa
inc
call
fsubr
inc
xchg
shr
je
sub
stc
data16
xor
lods
add
cmp
jo
gs
stos
inc
test
sub
inc
mov
aam
mov
in
mov
sub
dec
cmpl
adc
add
leave
dec
test
mov
ja
add
icebp
ljmp
lcall
cltd
pusha
xchg
push
dec
ret
mov
lahf
fmull
lods
sub
fwait
mov
sub
cmp
imul
gs
or
sub
mov
test
mov
fisttpl
jns
inc
sbb
mov
cmp
inc
mov
sahf
add
icebp
ds
cmp
inc
push
sbb
data16
popa
rcrl
popa
mov
iret
cmpsl
repz
outsl
ja
xchg
dec
mov
mov
clc
insb
mov
int3
pop
in
push
and
nop
fiaddl
pop
or
imul
sbb
mov
jnp
xor
fwait
push
mov
rolb
push
xlat
test
imul
rolb
or
pop
push
fdivl
sub
sub
xchg
aam
aam
jle
bound
xor
dec
cmpsb
stc
or
inc
test
out
popf
ljmp
sub
sbb
andb
and
mov
das
mov
dec
cmpl
sbb
js
jl
mov
int3
xchg
std
out
mov
data16
push
jge
jg
sbb
add
cmp
daa
jg
mov
int
scas
outsl
push
sarl
inc
dec
sar
sub
iret
xchg
nop
test
rol
les
scas
and
aas
pop
das
int
loop
sbb
dec
scas
adc
xor
sub
push
push
push
mov
pop
mov
or
sub
jmp
scas
mov
js
shlb
mov
or
fisubs
sbb
pop
int
into
movb
in
dec
lods
lcall
test
xchg
mov
xor
pop
pop
pop
mov
push
pop
sbb
fstpt
xor
pop
test
mov
cltd
cmp
pop
sbb
in
fdivrl
and
add
in
mov
int
mov
mov
inc
push
test
xor
jno
or
jmp
fnsave
cltd
jns
aas
lea
xchg
adc
test
and
pop
jg
xchg
rorb
sbb
or
cmp
push
sub
into
add
clc
clc
movsb
lret
sahf
das
filds
sub
stos
and
rorl
sbb
out
testl
fnstcw
arpl
jb
jp
add
rol
imul
sbb
inc
sub
or
xchg
cmp
into
sbb
mov
in
pop
iret
and
imul
cmp
jns
push
sbb
or
popf
xchg
daa
movsb
jns
aaa
xchg
ffree
incb
in
mov
inc
sti
sub
push
cmpsb
dec
xchg
insb
stc
sti
scas
in
inc
mov
or
cmp
lock
mov
push
jge
in
xchg
inc
testl
push
xchg
aaa
mov
pop
emms
fidivrs
dec
fsub
cs
lods
or
cmp
sbb
inc
test
enter
scas
inc
test
popf
xchg
je
mov
jnp
jbe
fists
jp
divb
shrl
pop
jnp
mov
xchg
pop
push
xchg
mov
ss
cs
sbb
sahf
fcoml
pop
dec
leave
adc
mov
cmpsl
mov
imul
push
insl
stc
or
lret
notl
cmc
jns
mov
sbb
cmc
out
mov
jnp
jmp
mov
dec
fists
cmpsl
sub
mov
cmp
mov
js
daa
andb
and
pop
mov
xchg
mov
mov
jne
fwait
inc
arpl
jge
ret
jp
inc
and
dec
movsl
cmp
cmp
loop
dec
xchg
cld
sbb
jo
cmp
cmpsb
or
jp
fdivr
outsb
les
jmp
aam
and
subl
dec
test
dec
mov
add
cmp
dec
mov
bound
ds
mov
clc
mov
test
or
push
dec
ja
imul
sarl
inc
mov
mov
js
sti
xchg
ljmp
sarb
xchg
sbb
jge
lahf
mov
add
rcrb
cmp
pusha
rcrb
hlt
jne
popa
mov
pop
jbe
stos
inc
sub
rcrl
test
add
test
fstpt
cmpsb
add
cmp
call
jp
adc
aam
sar
cmp
andl
xchg
xchg
stc
xchg
mov
xor
test
idivl
and
push
jnp
jge
out
cld
cmovo
xchg
imul
in
loope
loopne
outsb
mov
sbb
sub
mov
or
mov
movl
sbb
jl
xchg
sbb
faddl
cli
call
push
push
adc
sbb
cltd
jne
jb
jl
aad
popa
or
pop
fidivrl
or
mov
pop
cmp
push
or
popf
sub
push
adc
cltd
ret
in
iret
test
cmp
pop
mov
out
mov
or
popa
xor
cmp
dec
sub
lcall
push
aad
sbb
and
pop
pop
jle
in
mov
jmp
pop
jl
xchg
sbb
bound
jns
sub
jmp
lods
pop
adc
cld
or
out
movsb
iret
lds
add
aas
and
idivl
mov
sub
sbbl
fidivrs
sbb
movsl
lret
stos
mov
push
add
sub
xchg
cmp
adc
aam
dec
and
cmp
mov
mov
mov
xor
jo
push
adc
pop
fdivrl
rcrl
fcmovnbe
movsb
xlat
in
xor
arpl
scas
inc
jno
iret
stos
in
shll
adc
inc
lods
out
jno
pop
cld
test
mov
push
out
mov
addr16
fcmovne
gs
mov
je
ret
aam
ret
mov
notl
stos
cli
mov
mov
bnd
addr16
popl
icebp
jge
loope
repz
lret
fldt
push
dec
fsts
clc
sub
int3
or
repnz
mov
sbb
mov
or
jp
imul
mov
cli
dec
inc
mov
or
push
cmp
inc
add
mov
pop
das
cmp
lods
sbb
in
dec
and
popa
push
dec
lret
mov
push
sbb
repz
add
xchg
mov
dec
xchg
insb
test
xchg
cmp
dec
pop
cwtl
in
or
sbb
mov
fstpl
stos
xor
sub
dec
push
jle
in
jl
push
pop
jno
je
or
bound
rdpmc
out
ljmp
sti
dec
idivl
mov
cld
out
mov
fidivrl
jle
lret
stos
or
xor
in
into
ja
lods
mov
cmp
inc
dec
test
nopl
mov
xlat
dec
push
mov
push
out
inc
int
add
mov
orl
arpl
nop
leave
jecxz
jnp
movsl
adc
adc
jle
inc
arpl
pop
cmc
cltd
inc
push
test
in
and
data16
or
imul
push
loope
dec
mov
std
fs
ret
lock
mov
js
andl
cld
mov
fprem1
test
cmp
stos
inc
loope
push
sub
sbb
ror
mov
sbb
pop
test
add
xchg
fnstsw
popf
mov
xchg
mov
imul
fstpl
lcall
mov
mov
out
fwait
clc
aaa
fildll
cmpsb
pop
ret
ja
xor
inc
out
cmp
repnz
push
js
cmp
cld
rorl
sbb
js
repz
cmc
cld
mov
jmp
cwtl
fwait
dec
push
stos
xchg
popa
negl
outsl
ret
test
dec
xchg
inc
ds
into
mov
sub
lret
mov
cltd
mov
and
cltd
inc
imul
stos
cltd
lss
jmp
pop
test
scas
lahf
jne
or
scas
xchg
push
pop
pop
addr16
stos
popf
test
pop
mov
mov
rcrb
cmp
jmp
int3
andb
pop
adc
inc
jl
cmp
cmp
xchg
orb
push
cwtl
arpl
jp
sbb
rclb
inc
sub
pop
mov
out
inc
jno
fildl
xchg
movsb
mov
fildll
jg
mov
pop
push
inc
push
mov
pop
insb
imul
or
mov
fidivrl
push
cmp
ret
sarl
orl
ja
fmulp
xor
jb
ss
dec
outsb
lret
daa
cwtl
leave
or
andb
clc
sbb
out
shll
pop
jp
popa
popl
je
mov
loop
push
pop
decb
mov
or
dec
popf
sahf
jg
jb
fstpt
jmp
mov
lods
jnp
loop
inc
test
pop
outsl
mov
lds
cld
outsb
js
not
sub
lret
cmpsl
cmp
test
lock
imul
arpl
dec
inc
or
jmp
or
cmp
mov
or
add
lock
pop
sbb
cmp
stos
mov
lret
popa
notl
pusha
pop
test
pop
mov
lret
fwait
data16
enter
or
int
mov
lea
xorb
jnp
ja
dec
mov
inc
sbb
add
jp
pop
adc
daa
sbb
jne
xlat
and
lea
dec
pop
rep
xor
jns
jmp
mov
dec
aad
sub
xor
dec
pop
cmp
jae
push
test
push
adc
cltd
mov
jns
add
mov
mov
ja,pt
add
push
adc
testl
enter
mov
sub
ret
push
sub
decb
mov
pop
sub
dec
sbb
sbb
xorb
inc
mov
jo
repz
mov
push
jge
sbb
push
test
jl
hlt
or
push
ja
and
or
addr16
xchg
jle
xor
jle
loop
push
mov
adc
cmp
dec
dec
cltd
inc
pushf
inc
or
mov
dec
imul
shrb
jl
jg
nop
or
push
sbb
or
ret
xor
cmp
or
cmp
cmp
test
faddl
jg
repnz
in
les
out
nop
cmp
fsubrs
jo
add
mov
add
fmull
xchg
adc
mov
or
dec
jb
lds
cmp
ret
shrl
push
fwait
cld
cmp
int3
cmpsl
or
inc
pushf
sub
test
gs
mov
dec
push
add
call
jnp
lcall
jle
xor
cmp
inc
ret
xchg
pop
sbb
mov
gs
add
pop
imul
cmp
cltd
ja
decl
cmc
dec
lds
adc
addb
push
js
test
push
xor
sub
fs
sub
jb
mov
lods
mov
mov
add
mov
pmulhw
dec
cmp
cmp
cmp
pushf
cmp
sbb
popa
add
clc
inc
cmp
pop
jge
imul
test
sbb
lds
popa
cmp
adc
pushw
aam
jge
mov
bound
inc
out
sbb
add
mov
pop
sbb
cmp
inc
sbb
jno
xchg
add
mov
dec
jnp
mov
sub
push
inc
and
test
xchg
lds
cli
mov
mov
gs
inc
jnp
or
mov
pop
fst
andl
mov
ljmp
sbb
ds
rcr
aas
pop
andps
dec
xchg
outsl
mov
aas
iret
or
sbb
out
es
sarl
pop
ljmp
inc
add
arpl
fs
mov
imul
or
daa
sbb
and
mov
pand
cmp
pop
cmc
push
scas
xor
inc
jae
cmp
sti
xchg
mov
cmp
ret
fiadds
ret
jo
jno
adc
mov
fcomi
ljmp
stos
mov
mov
jp
test
sub
mov
mov
push
inc
loopne
ss
jg
jle
mov
mov
mov
cltd
mov
not
sbb
hlt
test
or
mov
repz
sarb
dec
dec
xor
fwait
jmp
aaa
out
add
sbb
daa
mov
fsubrp
adc
dec
pusha
adc
jnp
ret
test
xor
pop
add
push
test
cmp
jbe
outsb
push
jnp
xchg
mov
mov
sub
pop
adc
add
mov
lods
push
push
xchg
popa
scas
xor
cli
dec
push
adc
dec
lcall
xchg
mov
mov
jge
xchg
and
xor
pop
repnz
pop
sub
cmp
out
xchg
fdivrl
js
sti
dec
clc
cmp
cli
jp
xchg
dec
xchg
xchg
out
fnstcw
cmp
mov
pop
cmp
std
mov
je
jle
mov
loope
and
push
inc
andl
test
lret
pop
jns
sub
push
inc
push
jae
xor
pushf
or
jmp
sub
mov
cmp
push
fdivl
push
loope
cmp
mov
jns
std
pop
in
xchg
cmpl
les
mov
or
aad
dec
cltd
mov
arpl
ss
inc
sbb
movsb
xchg
bound
gs
inc
pop
pop
cld
adc
jge
imul
xchg
push
sbb
sti
add
mov
adc
js
jmp
push
push
loope
scas
int
pop
sarb
dec
push
out
rolb
dec
sbb
jno
lret
inc
mov
stos
rcrl
sub
out
pusha
or
mov
lds
fdiv
sbb
mov
enter
sti
scas
jge
imul
stos
test
mov
fists
mov
xchg
fwait
sub
sahf
loopne
mov
cld
sbb
stos
pop
pop
inc
cmp
add
jl
out
jg
dec
or
nop
xchg
pop
pop
fidivl
aad
js
cmp
jb
mov
inc
cmc
sbb
mov
bound
or
or
pop
or
lods
mov
jle
cmpsl
in
test
iret
gs
test
mov
fisubs
int3
fsub
fnstcw
test
sub
aam
mov
out
dec
xchg
bound
ss
jnp
mov
add
push
adc
mov
push
aam
fildll
cmp
mov
popf
adc
imul
jbe
pop
cmp
inc
incl
cmp
clc
pop
cmp
test
sbb
push
jg
ss
mov
loop
push
mov
cmpsl
data16
js
scas
pop
push
cmc
pop
sahf
testb
pop
in
sub
inc
fdivrl
pop
test
jg
ja
cmp
pop
sub
iret
scas
push
fldl
fdiv
fwait
pop
pop
leave
add
sub
push
add
inc
aad
mull
sbb
into
or
imul
jnp
test
jmp
aaa
adc
imul
mov
pop
push
mov
sti
cmp
or
stc
or
cmp
dec
mov
sbb
pop
inc
in
or
jp
mov
popa
push
fsts
sbb
imul
xchg
push
insl
int3
inc
jl
pop
out
into
testb
mov
in
dec
mov
sarl
pop
cmp
push
mov
dec
jnp
mov
jo
dec
call
add
pop
ljmp
push
pushf
cmc
mov
jg
pushf
mov
femms
ds
cli
int
fbld
jg
rcrl
or
int3
add
ljmp
std
neg
fdivs
jae
les
push
js
xchg
cmp
out
in
adc
jo
cmp
test
cmp
fstps
pop
fmul
fcmovu
pop
mov
xor
loopnew
xchg
arpl
cs
jns
out
es
insl
roll
rcr
mov
jns
insl
adc
cwtl
cltd
mov
mov
inc
add
fcomps
clc
mov
add
jb
push
cwtl
dec
xor
inc
pusha
mov
mov
sbb
adc
cwtl
das
push
dec
mov
or
out
jae
ds
mov
scas
movsb
adc
les
js
subb
cmpsl
sbbl
or
lods
cwtl
ret
and
icebp
or
iret
dec
push
cmc
daa
jnp
pop
shrb
mov
push
pusha
xor
sbb
pop
lret
je
pushw
cld
jns
sbb
sbb
leave
mov
adc
repz
sbb
ss
loope
sub
fistps
and
imul
icebp
test
rorl
adc
and
lds
iret
rcl
mov
and
jnp
push
lods
cmp
push
dec
mov
xchg
sbb
cmc
cwtl
push
scas
fildl
cmpl
mov
pop
cs
sub
ds
mov
les
sbb
xchg
mov
jnp
mov
dec
enter
imul
mov
test
lahf
mov
rolb
sbb
pop
add
js
adc
xchg
jbe
ja
jnp
pop
jns
mov
adc
ror
jns
mov
adc
jo
sub
cmpl
cwtl
sub
xor
sbb
mov
add
nop
push
sub
inc
fnsave
push
and
push
bound
cmp
sbb
scas
test
dec
mov
add
sub
or
dec
pop
mov
mov
jge
imul
mov
dec
cmp
mov
add
test
test
cmp
jl
nop
jg
cltd
pop
ret
and
fistl
adc
or
cltd
sbb
or
push
or
cli
or
ficompl
leave
fstpt
xchg
insb
gs
mov
fidivrs
mov
pop
cmp
add
icebp
adc
rcr
mov
in
fstpt
test
shlb
flds
bound
dec
jo
shll
add
jnp
mov
push
dec
insl
mov
cmpsl
add
repnz
adc
xchg
inc
test
dec
cmp
cmp
pop
adc
jo
je
jns
xchg
push
or
ja
jne
fwait
rclb
jmp
cmpsl
pop
sbb
mov
test
add
adc
sbb
idivl
das
in
lahf
bound
cli
mov
fiaddl
inc
dec
out
divb
lds
sbb
clc
pop
push
repz
idivl
in
or
ss
ja
imul
pop
in
add
rolb
in
sbb
inc
mov
pop
or
inc
mov
shrl
adc
dec
sbb
pop
jg
pop
or
nop
test
add
insb
mov
mov
test
pop
icebp
rcrl
mov
loopne
push
ja
sarl
movsb
lahf
push
mov
pop
pop
test
clc
xor
ja
insb
inc
push
fildl
in
xor
fcomp
leave
stc
add
sbb
push
add
dec
cmp
shr
sbbl
push
stos
divl
adc
xor
test
add
imul
adcl
inc
add
adc
lock
mov
xchg
aas
mov
lahf
test
or
mov
iret
scas
xchg
lods
xchg
pop
and
pop
test
lock
pushf
mov
cmp
mov
jns
mov
adc
mov
xor
daa
jg
sbb
jge
or
pop
jmp
ret
cmpl
fmul
orb
aas
lret
imul
test
dec
outsl
in
mov
or
fwait
mov
dec
shrb
mov
cmp
ds
adc
or
push
pop
fidivl
imul
ljmp
or
idiv
cs
mov
mov
ds
xchg
test
push
aam
mov
rcll
loop
popf
stos
scas
or
sbb
mov
je
xchg
xor
je
mov
int
pop
es
popa
nop
adc
cs
push
adc
push
sub
pop
repnz
and
jo
notb
jo
or
sahf
testl
mov
mov
iret
or
addr16
aam
movsb
sbb
cmpsl
lods
test
mov
and
leave
outsb
mov
std
sbb
leave
lods
popf
inc
fs
jg
xor
mov
mov
xchg
or
je
and
push
daa
xor
mov
jae
mov
scas
sbbb
mov
out
and
xchg
adc
aas
pop
lds
mov
ss
lds
and
adc
xchg
sbb
out
jne
sub
cmp
or
call
cwtl
ja
mov
cmpl
addr16
cmp
mov
mov
jmp
fistpll
add
mov
ljmp
cmc
push
dec
inc
xchg
sbb
mov
pop
pushf
pusha
mov
test
push
mov
jl
mov
cmp
mov
jecxz
lcall
push
mov
mov
std
pop
pop
fistps
sub
int3
sbb
movsl
movsl
jg
nop
cld
dec
cld
ss
test
inc
ret
pop
fs
xor
cmp
lds
sbb
loopne
add
test
push
aad
sub
dec
test
mov
inc
dec
xor
rcrl
xor
or
cmp
cmp
dec
gs
sub
sbb
es
mov
sti
data16
push
jno
push
lret
roll
sbb
inc
aaa
ret
sbb
adc
push
pop
cmp
loopne
lods
adc
pop
pusha
lods
sti
jge
and
lods
mov
cmp
scas
loope
popa
cmp
jo
jae
sub
mov
jmp
lahf
or
cwtl
dec
pop
iret
sbb
add
popa
loop
pop
or
inc
pop
mov
push
mov
mov
mov
daa
test
stos
mov
jg
adc
std
mov
sbb
mov
lock
sbb
jnp
adc
jecxz
fwait
pushf
and
mov
adc
sbb
imul
mov
insl
mov
inc
sbb
xchg
iret
fiadds
cld
out
stos
fdivl
lahf
inc
mov
jns
pop
jl
inc
lcall
js
movsb
sbb
mov
cmp
xchg
and
scas
mov
mov
push
mov
inc
and
repz
rcll
pop
mov
add
sub
addb
mov
sbb
mov
adc
or
xor
mov
mov
jbe
pop
push
xchg
add
es
mov
call
mov
mov
gs
sbb
mov
icebp
push
sbb
xor
xchg
mov
jb
sti
push
pop
or
arpl
dec
mov
mov
in
push
test
fs
icebp
stc
mov
push
jge
lret
and
sti
adc
ret
out
mov
mov
movsl
mov
enter
or
adc
out
xchg
mov
cmp
or
or
test
push
and
push
arpl
pusha
mov
nop
jge
cli
or
daa
or
push
xchg
cld
cmp
push
pusha
daa
jge
adc
pop
add
cmp
sub
jns
inc
xchg
fs
pop
es
push
js
enter
inc
jl
cmp
mov
lea
insl
add
pop
jnp
call
cltd
pop
sbb
jns
mov
push
aaa
ja
xchg
aam
fdivs
push
mov
push
dec
ficoms
xchg
xchg
sti
pop
jmp
or
fistpll
adc
jno
jge
int
cs
movsb
sbb
or
sbb
cmc
jmp
add
lahf
popf
lret
jnp
test
out
inc
sub
xchg
or
iret
out
rcrl
std
cmp
lret
mov
shl
dec
xchg
push
les
xor
dec
sub
ficomps
xor
cmp
mov
int3
call
lds
sbb
mov
push
or
shll
sti
dec
imul
fldenv
inc
mov
arpl
pop
test
pop
cmp
daa
out
xchg
pop
lods
cmp
adcl
mov
and
lods
fidivl
aad
dec
xlat
test
mov
cmp
fisubrs
xchg
jge
bnd
and
out
repz
or
add
cmp
movsl
add
stc
pop
sub
int3
or
cmp
sub
jl
aas
gs
pop
pop
out
jp
imul
jp
sbb
daa
xchg
insb
into
cmp
xchg
inc
jnp
inc
mov
icebp
mov
rclb
inc
pop
js
pop
lods
sub
cmp
out
push
ljmp
cmp
dec
sbb
mov
mov
sbb
pop
fcoml
clc
test
and
in
cmpsb
add
gs
in
out
and
loopne
sub
inc
jge
fiaddl
neg
ja
mov
pop
xor
adc
inc
mov
fs
mov
divl
add
out
jmp
arpl
shll
mov
inc
imul
fcmovb
out
cld
negl
adc
lret
or
cmp
push
popa
cmp
jg
xlat
jne
xorb
push
mov
cli
stc
fmulp
insl
jnp
add
cwtl
add
jmp
add
mov
and
mov
dec
and
movsl
pop
fldcw
cwtl
adc
out
cmp
jge
push
punpckhbw
mov
sti
adc
and
jnp
cmc
or
cmp
testl
pop
mov
adc
mov
outsl
adc
push
cmp
push
ja
in
mov
test
cmp
xabort
cmpb
sbb
adc
gs
stc
add
xor
add
jmp
test
inc
mov
mov
jl
out
cmp
mov
imul
push
mov
cmc
jge
insl
push
mov
rcrb
sbb
dec
mov
cmp
pop
cmpsl
adc
movsb
mov
imul
cmp
sub
push
jle
xchg
cmpsl
scas
dec
fwait
ss
sbb
mov
push
xchg
fsubrl
stos
test
lds
jmp
stos
adc
push
mov
test
xchg
sub
inc
jle
jmp
or
push
arpl
sbb
subb
mov
cmp
sarl
jmp
xor
inc
sub
cmp
ljmp
mov
sbb
push
movsb
xchg
cmp
sub
jmp
cmp
ja
inc
test
mov
pop
in
test
jno
test
inc
mov
cmp
leave
in
cmp
mov
jmp
rcll
sub
cmp
es
scas
or
cmp
in
or
std
sbb
test
pop
pop
pop
sahf
mov
adc
sahf
and
or
add
popf
inc
sarb
scas
sarb
idiv
dec
mov
aaa
insl
js
dec
call
decl
loop
test
popf
mov
push
xchg
arpl
sub
add
sub
pop
pop
mov
adc
dec
out
arpl
xchg
jecxz
xor
mov
adc
adc
in
daa
ds
or
rolb
jg
cmp
sub
dec
push
es
cs
cmc
bsr
sbb
mov
test
cmc
sbb
dec
testb
xlat
sbb
jp
sbb
cmp
jp
out
dec
mov
dec
cli
cmp
es
sbb
push
stos
mov
enter
rcrb
cmpl
test
mov
cmp
test
leave
stc
ret
jns
dec
cmpsl
test
fsubrp
sarl
test
lahf
in
clc
subl
fisubrs
arpl
ja
jne
sbb
sbb
add
cmp
cmp
aad
add
and
aas
js
mov
popa
xchg
sub
add
push
imull
sub
add
lahf
jg
fildl
popa
shrl
sbb
xchg
rorl
jg
je
test
imul
cmp
pop
xchg
das
arpl
jl
and
or
mov
scas
fsubrs
cld
addr16
imul
sub
cltd
popf
inc
negb
or
jmp
xor
repnz
mov
lods
jnp
pop
and
push
lret
mov
sub
sbbl
pop
sahf
jmp
ds
dec
add
jne
push
mov
mov
adc
int
pop
or
inc
mov
fildl
les
addb
xchg
es
scas
pop
or
xchg
rorl
shlb
cmc
mul
jp
mov
xchg
js
sbb
ficoml
pop
cmp
out
cmp
jae
rolb
test
pop
and
pop
push
std
ficompl
cs
adcb
add
lods
sahf
jmp
sbb
pop
mov
push
xchg
add
adc
cmc
mov
ror
fwait
mov
repz
stos
shlb
mov
testb
stos
sbb
loopne
push
xchg
mov
movsb
jns
xor
inc
popl
sti
lock
push
pop
in
adc
fwait
inc
ja
pop
mov
mov
fmuls
sarb
xor
leave
or
pop
lcall
inc
mov
cwtl
rcll
addl
ret
pop
pop
inc
lret
inc
dec
pop
std
popa
cmp
mov
enter
jecxz
or
sub
sbb
aaa
sarl
rcrl
scas
int
cmpsb
xchg
sbb
addb
xchg
sub
mov
cmp
or
xchg
xchg
cmc
pop
sub
cmp
test
push
fimuls
mov
fstl
cmp
fwait
mov
cmp
inc
dec
mov
mov
hlt
lcall
fst
mov
pop
mov
pop
xchg
or
jge
push
les
cmp
jp
sub
push
push
out
cltd
loopne
xchg
js
lret
pushf
jno
mov
decb
cmp
mov
repz
cmp
xchg
mov
mov
jl
lock
cmp
jo
lock
mov
nop
sbb
jg
std
cmp
sbb
loopne
std
dec
scas
fwait
sbb
cmp
cmpsb
dec
stos
push
enter
add
dec
mov
mov
out
push
push
xor
loop
scas
or
ja
jno
jle
inc
js
inc
fldt
loop
jl
test
pop
dec
pop
pop
cmpb
cld
xchg
lea
push
cmp
sbb
pop
jbe
push
aaa
in
hlt
or
push
enter
inc
add
inc
lcall
xor
xor
mov
xor
mov
in
push
cmpsb
mov
or
cmp
adc
test
daa
pop
test
clc
pushf
or
fwait
inc
mov
aaa
icebp
cmp
inc
inc
jg
loop
je
pop
add
notl
or
or
pusha
cltd
in
sbb
and
dec
fstpl
loopne
push
xchg
mov
int
jbe
loop
out
mov
mov
jns
dec
and
mov
jg
pop
ret
cli
test
pop
mov
je
and
sub
popf
jecxz
push
mov
or
vcvttps2dq
sahf
cld
or
inc
insl
pop
popa
cmp
lret
add
lock
mov
cmpl
sub
jmp
out
dec
jl
jnp
pop
push
pop
outsl
mov
sete
mov
xchg
jg
mull
xor
mov
add
mov
inc
test
mov
addr16
push
rcrb
jg
jle
dec
je
mov
push
cwtl
jle
fnsave
sub
and
xchg
fmul
mov
cld
test
cli
adc
lea
push
repz
stos
cld
lds
inc
aas
xor
cmc
jno
lret
push
ret
xchg
pop
sbb
idivl
mov
out
jg
cmp
xorl
adc
fstp
cmp
pop
mov
pushf
dec
mov
sub
dec
sbb
pop
pop
or
xchg
clc
out
mov
jmp
fs
adc
sub
cmp
fwait
adc
or
ljmp
sub
ja
push
mov
popf
jns
mov
cs
idivl
jns
and
pop
sub
idivl
sbb
out
jl
adc
mov
rcrl
rorl
shrl
inc
adc
sbb
bound
es
pop
jge
inc
scas
mov
cmp
add
cmpsb
jae
cmp
es
push
and
inc
mov
jns
rorb
aas
jle
mov
dec
pushf
jge
bound
add
sbb
aas
pop
or
jle
jbe
fsubl
add
jmp
rcl
aad
mov
mov
fnstsw
or
in
mov
mov
and
jns
repz
pop
stos
or
mov
jl
xor
std
loopne
mov
pop
mov
mov
fidivrs
inc
cvtdq2ps
in
std
out
ljmp
cld
xor
gs
mov
ret
cmp
cmpl
cmp
pop
xor
test
cmpl
mov
int3
cmp
mov
or
ds
out
jg
cmp
sbb
push
imul
jb
idivb
sbb
mov
inc
popf
xorl
js
stos
out
xchg
es
xorb
sahf
sub
cmpl
jge
mov
sti
inc
jge
dec
pop
sbb
aaa
out
in
dec
add
cmp
adc
iret
cmp
lret
add
fadds
ja
sub
andl
dec
add
mov
inc
jmp
ja
hlt
cmp
cli
lahf
cs
mov
in
ja
js
negb
or
dec
sub
and
imul
xchg
scas
cbtw
mov
mov
mov
push
pop
xchg
rclb
adc
test
mov
mov
mov
inc
push
inc
adc
cltd
fwait
mov
cmpl
ret
aaa
inc
rclb
xchg
push
ja
mov
jg
sahf
fmul
cmp
je
or
mov
sbb
lret
pop
cmp
dec
aam
dec
mov
dec
outsb
mov
pop
mov
test
popa
add
jbe
rcrb
add
xchg
lcall
rorb
sbbb
push
add
jbe
fnsave
mov
sub
mov
sbb
jle
iret
fisttpll
cmp
pop
jmp
sbb
jbe
enter
push
mov
mov
push
testb
movb
pop
test
in
test
sbb
adc
mov
inc
insb
jno
test
in
mov
xchg
js
mov
add
cmp
xor
decb
loopne
xor
cmp
xlat
cmp
mov
mov
test
mov
inc
mov
jnp
mov
clc
jp
mov
fdiv
lret
sbb
dec
inc
xchg
cltd
or
push
cmp
inc
je
xor
sub
sbb
pop
push
cmp
clc
cmpsb
scas
push
push
sti
dec
mov
or
xor
pop
les
push
aad
cmpsl
scas
cmp
inc
rorb
aam
pop
push
add
in
mov
push
addr16
sub
add
add
jle
insl
out
and
inc
sub
mov
cmp
pop
fnsave
pop
push
cmp
clc
fiadds
mov
add
sub
clc
insb
testl
cld
mov
cwtl
dec
cmp
in
cld
pop
xor
xorl
test
nop
fwait
cmp
enter
xchg
stc
pop
sbb
jns
mov
cmp
or
mov
adc
arpl
xor
xchg
orl
sbb
sub
add
mov
inc
add
shlb
incl
movsb
jns
mov
jecxz
inc
jl
jmp
adc
xlat
lods
push
into
clc
mov
dec
mov
mov
lods
stc
out
js
mov
jnp
mov
imul
sub
fs
jle,pt
out
inc
sub
dec
aaa
cmpl
mov
pop
daa
mov
or
xor
inc
ffreep
mov
xchg
push
xor
dec
clc
int3
or
rcrb
push
push
jbe
jg
mov
pop
cmpl
mov
stos
pop
cltd
shlb
xchg
sbb
cmp
repz
inc
lret
push
loop
or
mov
push
lods
xlat
rolb
fdivl
cmp
mov
pusha
xchg
imull
pop
rorb
andb
push
dec
cmpsb
cmp
inc
int
push
xchg
fs
aas
mov
lods
hlt
int3
out
in
sub
push
pushf
mov
test
pop
insb
out
fs
idivb
pop
sbb
xchg
pop
adc
gs
mov
cmpsl
gs
dec
adc
or
scas
xorl
mov
mov
jnp
lret
inc
cmp
insb
in
test
pop
cwtl
add
push
cmpsl
je
inc
add
pop
dec
adc
dec
pop
insb
dec
fwait
jle
mov
test
or
mov
pop
xchg
cmp
lret
inc
or
sub
leave
movsb
cmp
ja
mov
pusha
test
int3
add
ljmp
aas
pop
into
mov
aas
dec
mov
fs
xchg
das
sbb
ret
add
inc
aaa
push
pop
sbb
sbb
dec
es
lahf
add
mov
push
sarb
ds
jo
add
inc
std
ds
xchg
aad
in
sbb
jnp
nop
sub
dec
cmp
xchg
mov
outsb
mov
leave
icebp
mov
push
add
push
cmp
dec
inc
inc
mov
jne
insb
cmp
push
mov
jnp
data16
push
adc
outsb
lahf
jl
and
fdivr
call
cli
inc
add
pop
in
sub
inc
sbb
ja,pt
hlt
loope
call
xchg
adc
xchg
inc
fbstp
cmp
sub
mov
in
jmp
pop
cmp
lods
xchg
mov
adc
push
jb
test
rol
or
xchg
sub
pop
xchg
jp
or
data16
or
lcall
push
jae
test
icebp
pop
jg
jle
sarl
imul
test
sti
xlat
repz
cs
loop
mov
pop
mov
das
negl
mov
sbb
xchg
repz
das
out
jae
shrb
xchg
push
repnz
mov
jmp
std
insb
mov
sbb
xor
pop
pop
jo
negb
stos
xor
push
or
repz
cmp
pop
ret
and
add
ret
insb
mov
jp
mov
cltd
push
lcall
mov
js
aad
cwtl
add
clc
xlat
pushf
mov
dec
mov
mov
lret
mov
push
inc
mov
das
incl
sti
ss
mov
jnp
mov
cmp
add
or
push
or
pushf
scas
push
dec
aas
adc
dec
pop
mov
ja
jge
data16
lds
sbb
test
dec
xchg
sub
enter
cmc
jl
cmp
sub
loope
test
insb
js
leave
sub
cmp
inc
dec
mov
ja
imul
mov
pop
jl
insb
ljmp
cmpb
jmp
or
sub
repnz
cmp
jg
je
jle
in
inc
test
jle
sub
setp
cld
cmp
stc
je
bound
fistpl
out
fdivrl
bnd
jo
fistl
dec
test
adc
popf
ja
fs
test
xchg
sti
insb
out
cmp
pop
out
sbb
mov
or
dec
sub
inc
jle
adc
pop
or
lcall
push
cmp
push
add
mov
pusha
push
cmpsb
cmp
es
push
sbb
clc
adc
mov
pop
xchg
cmp
pop
pop
sbb
sub
pop
pusha
xor
jmp
dec
jo
data16
mov
xchg
mov
pop
cmpl
or
dec
fwait
es
jnp
mov
sbb
sbb
sub
xchg
dec
test
test
xor
in
ror
add
dec
in
inc
jae
fdivs
xorb
jno
mov
pop
push
cmp
push
pop
mov
mov
sti
sub
lret
add
sub
cmp
ja
jbe
aam
dec
xchg
pop
test
pop
repnz
sub
push
xchg
stc
testl
cmc
pop
sarb
orl
jb
hlt
pop
jg
aas
inc
jmp
stos
push
cmp
jae
ljmp
mov
mov
insl
fildl
push
pop
roll
adc
roll
iret
fdivrl
cmc
repz
pop
loop
jl
sub
mov
sbb
fists
jp
sti
or
and
in
jecxz
fimuls
scas
pop
push
inc
cmp
xchg
lods
in
push
ss
out
mov
idivl
hlt
cmp
push
inc
in
imul
inc
ret
inc
js
stos
ljmp
mov
jl
enter
pop
mul
pop
mov
xchg
mov
push
fisttps
sub
sbb
adc
pop
pop
dec
outsb
mov
dec
sarb
jns
lods
int3
fdivr
test
mov
push
mov
divl
xchg
dec
push
or
sbb
adc
sbb
inc
dec
pusha
mov
shll
jmp
adc
loopne
mov
cmovs
sbb
cmp
xchg
dec
jnp
lcall
aam
sbb
or
mov
inc
inc
aas
cmpb
inc
jge
dec
popf
mov
gs
cltd
in
jl
dec
xchg
clc
sbb
cmp
push
pop
cmp
pop
sub
mov
js
mov
xchg
pop
pop
mov
std
push
push
pop
clc
test
popf
pop
test
ljmp
jecxz
aam
dec
sub
imul
dec
cs
mov
jp
adc
xchg
jg
dec
movsb
sbb
jmp
or
pextrw
test
push
test
pushf
sbb
mov
pop
jb
sbb
cmp
test
data16
jo
imul
test
lds
repnz
int3
lahf
pop
lea
cmc
std
cmp
in
imul
stos
sbb
clc
pop
sbb
inc
sbb
hlt
cmpsl
sub
sbb
call
mov
pop
add
jnp
inc
jg
subps
xchg
mov
shll
in
adc
mov
cli
lods
xchg
test
and
insl
mov
or
orb
test
adc
ja
mov
cs
mov
xor
mov
fstps
insb
adc
test
mov
mov
inc
and
clc
mov
fs
fwait
popa
pop
shll
jle
push
sbb
push
cmp
insl
push
movsb
fsubrl
in
cltd
loop
out
xchg
insb
mov
cmc
imul
push
jnp
pop
jno
sahf
dec
mov
dec
add
hlt
push
or
add
scas
ret
jns
dec
loop
lret
nop
js
push
cmc
xchg
aas
adc
sbbb
gs
mov
add
sub
fwait
insb
test
gs
hlt
xchg
test
out
cltd
sbb
rorl
inc
mov
fildll
sub
dec
inc
out
jae
jns
dec
lods
dec
jle
in
loop
repz
sbb
mov
xchg
add
pop
test
sbb
insb
mov
adc
in
out
cmc
mov
sbb
dec
mov
cmc
mov
fs
sub
cmp
add
test
inc
xchg
jo
push
iret
jno
jle
test
sti
cmp
icebp
repnz
mov
mov
addb
cmc
jge
cwtl
jg
jl
test
lahf
rorl
push
or
add
xchg
test
gs
or
sbb
rorb
mov
ja,pn
xchg
inc
push
cmp
push
add
dec
add
push
loopne
iret
fistpl
scas
dec
repnz
dec
mov
jmp
inc
push
dec
cmp
arpl
stos
push
mov
das
ja
jns
or
dec
testl
mov
pop
mov
test
lds
or
int3
fdivr
and
mov
dec
jle
mov
popf
pop
imul
arpl
gs
or
and
push
popa
pop
mov
adc
jp
pop
shll
sbb
movsb
cmc
push
cmp
adc
dec
dec
dec
repnz
inc
dec
jge
cli
adc
daa
sbb
mov
sub
jne
in
mov
dec
mov
mov
sub
ja,pn
jl
nop
scas
mov
mov
jmp
xor
rorl
mulb
mov
cmpsb
test
push
rclb
cmp
pop
jl
and
daa
inc
xchg
fstps
js
adc
popf
loopne
cmp
loop
mov
mov
jb
cmp
mov
aas
xor
popf
fildl
lret
fs
repnz
mov
test
dec
mov
dec
and
jmp
mov
xchg
cmpsl
stos
hlt
mov
mov
dec
cltd
lret
imul
mov
or
cmp
sub
mov
imul
fidivrs
cmp
adc
mov
mov
jp
mov
sahf
fistps
dec
cmpsl
push
mov
mov
sub
aam
cs
cmp
add
cld
repz
popa
cmp
cltd
cmp
cmp
fwait
inc
pop
push
decl
aam
cmpsb
pushf
add
sub
mov
cmp
push
lds
add
add
pop
mov
mov
jne
mov
cmp
data16
leave
mov
add
push
out
or
push
btc
aas
xchg
into
xchg
mov
xchg
rclb
sub
ja
and
cmp
mov
cwtl
cmp
push
dec
sbb
sti
aad
imul
inc
add
mov
sbb
sub
mov
push
lods
ss
testb
ja
dec
and
jo
mull
mov
cmp
jp
in
js
pushf
mov
clc
das
stos
test
pop
cwtl
lea
push
mov
bound
pop
jnp
test
pop
sti
popa
clc
mov
js
mov
push
andb
sub
out
cmp
pop
into
adc
cs
sub
clc
cmp
pop
lods
scas
lea
xchg
add
fnstsw
jnp
sbb
inc
pop
jns
push
mov
stc
or
add
mov
sub
mov
fs
fistpl
cli
or
add
lahf
pop
pop
add
mov
sbb
or
and
adc
movsb
xchg
xchg
sbb
mov
xor
test
jle
sub
loope
mov
stc
scas
jecxz
pop
adc
mov
or
push
push
jge
xor
enter
sahf
not
mov
dec
divb
sub
ss
mov
sbb
movsb
enter
shrl
jg
sti
out
in
data16
dec
dec
lret
push
dec
or
or
test
and
inc
insb
and
lret
push
das
xchg
loope
sbb
fs
or
stos
mov
clc
jns
mov
ret
mov
out
out
inc
cwtl
xchg
das
fisubrs
jno,pn
stc
ss
insb
add
loop
cmp
or
out
mov
imul
pop
cmpsl
xchg
sbb
lret
jbe
fstpt
loope
cmp
sti
sti
lahf
into
aad
lea
mov
cmp
fsubrp
cwtl
adc
mov
mov
fs
je
ds
xchg
dec
xor
daa
push
push
pop
pop
xchg
and
cmp
aam
xchg
pop
mov
stc
addr16
inc
pop
xchg
mov
xor
adc
push
sub
and
mov
xchg
cmp
test
lods
nop
pop
jecxz
add
sti
jnp
out
cltd
mov
cmp
mov
js
cmp
xlat
cmp
jge
mov
jge,pt
std
mov
add
or
cmc
pop
sub
fcoml
mov
mov
inc
jnp,pn
mov
push
leave
sarb
dec
jmp
js
mov
jge,pt
xchg
jnp
pop
mov
adc
scas
dec
sbb
adc
repz
mov
xchg
sbb
pop
leave
jns
mov
fcompl
rolb
ja
sub
adc
mov
ds
cmp
mov
or
jno
gs
dec
xor
scas
push
add
cli
imul
cmp
addr16
xchg
mov
dec
jnp
scas
popl
mov
aad
es
cmp
jp
test
cld
sbb
dec
jg
roll
cld
xor
dec
sbb
neg
jge
es
mov
inc
insb
addr16
gs
ds
mov
adc
cmp
out
fwait
inc
es
sub
arpl
ret
sub
xchg
or
or
xchg
sub
out
cld
jge
fwait
insb
lods
out
xchg
mov
inc
mov
test
cmp
sub
mov
arpl
ja
inc
cmp
das
andl
pop
orw
pop
loopne
sbb
mov
out
je
sbb
lret
push
mov
pop
xor
add
inc
lahf
test
cld
neg
mov
or
pusha
mov
cmp
jnp
mov
xchg
sub
idivl
fs
mov
in
adc
fs
mov
add
loope
cmp
push
or
out
cmp
mov
lret
pushf
dec
sbb
add
std
jno
sti
mov
mov
stos
sbb
ss
inc
and
pop
sub
xchg
mov
cltd
jbe
jb
inc
loop
add
gs
test
jge
mov
sub
xchg
adc
dec
into
sbbb
adc
and
sub
jge
sbb
scas
jg
xchg
js
idivb
pusha
dec
negb
dec
xor
dec
mov
push
in
or
xor
lahf
int
inc
push
adc
push
add
fbstp
lods
jo
in
sub
add
shrl
imul
std
pop
push
sub
sub
loopne
lds
test
clc
sub
mov
daa
das
pushf
cli
xchg
pop
cld
jo
ds
or
idivl
cmp
mov
cmp
aas
cld
ret
pop
rolb
cmp
xchg
jg
notl
daa
dec
mov
std
jle
daa
iret
dec
sti
push
cmp
test
jne
cmp
pop
pop
cld
and
adc
sub
push
inc
in
mov
clc
test
mov
nop
push
loop
push
cmp
cmp
add
or
add
or
mov
dec
mov
dec
push
loop
movb
jecxz
pop
fisubs
lret
movsb
pop
fldl
inc
roll
xor
fcompl
cmp
sbb
fwait
fistl
dec
pop
stc
cmp
or
sbb
jo
test
nop
cmpsl
imul
ror
inc
pop
push
sub
test
pusha
xor
sbb
jns
nop
xor
lahf
cmp
pop
popl
mov
sbb
push
or
test
xchg
mov
and
mov
jmp
mov
mov
cli
cmp
xchg
lea
into
xchg
xor
out
cmp
cmp
dec
jle
pusha
jo
jg
ret
mov
jp
add
sbbl
jne
jge
dec
pop
mov
iret
rolb
test
or
mov
sbb
xchg
jmp
cli
lods
jnp
xor
mov
xchg
or
adc
jmp
popf
xor
fucomip
mov
std
test
jnp
dec
jmp
xchg
mov
mov
sbbl
loope
mov
mov
arpl
int3
pop
ja
hlt
sub
jae
add
fs
adc
lret
ds
lret
pop
in
inc
loop
ss
dec
jle
pop
dec
orb
mov
pop
cs
negb
test
and
iret
push
cmp
out
fmull
xor
lret
mov
nop
sbb
in
popf
cwtl
xchg
xchg
fadds
fcom
or
addr16
bound
jb
push
jns
dec
mov
addb
pop
sub
pop
lahf
jmp
push
dec
cmpsl
popa
sub
add
or
arpl
movsl
push
pushf
cmp
pop
clc
push
clc
and
sbb
dec
mov
sub
inc
fdivrp
push
or
and
or
dec
loopne
insb
imul
jl
dec
pop
sbb
cmp
test
ljmp
dec
lcall
test
xchg
jp
push
lds
cmp
fldenv
jns
mov
jge
out
xor
fwait
shll
fidivrl
mov
pop
jmp
cmp
push
int
std
pusha
add
test
scas
fcmovnb
sub
xlat
mov
pop
jmp
dec
aad
xlat
in
pop
testb
cmp
imul
stos
ja
cmpsl
cmp
push
movsb
cmc
lea
xchg
mov
js
inc
mov
aas
repz
sbb
push
cmp
les
jl
mov
mov
add
sbb
add
ss
cmp
jl
jmp
js
cmp
dec
and
push
cmp
test
aam
cmp
stos
jnp
jns
cmp
sub
mov
ret
push
and
mov
jns
mov
pop
ficoml
js
outsl
dec
push
mov
std
push
mov
jl
imul
add
mov
inc
xor
arpl
cli
scas
adc
mov
mov
lret
or
fadds
cmp
pop
add
sbb
xchg
aam
js
sarb
fstpt
out
stc
sub
stos
test
push
pop
mov
das
fimull
adcl
cmp
xor
push
xor
subb
cmp
inc
jp
or
fwait
and
inc
mov
mov
daa
mov
gs
test
mov
jle
outsl
mov
inc
mov
or
bound
cmp
mov
mov
pop
gs
aas
out
mov
stos
cmp
jecxz
sub
jmp
mov
test
mov
and
dec
lds
arpl
push
cmpsb
cmp
icebp
fistpll
rep
or
inc
mov
dec
cmp
or
or
xchg
or
jge
mov
jge
stc
sub
outsb
sbb
pop
inc
xor
push
or
dec
xchg
inc
mov
inc
cmp
add
cmp
pop
jge
and
negl
and
sbb
fwait
out
ds
mov
push
xlat
mov
cwtl
mov
leave
mov
lahf
ret
sbb
dec
pop
lea
sub
rcrl
mov
sub
ffreep
mov
add
jecxz
test
sbb
sbb
lret
out
and
icebp
loopne
movsb
out
loope
lods
pop
lods
push
jae
mov
ljmp
push
xchg
js
adc
jmp
mov
cmp
or
pop
cld
sbb
push
jl
jp
loope
in
fimull
inc
mov
mov
popf
jnp
mov
gs
xchg
lea
les
arpl
aas
jle
jg
inc
icebp
and
and
outsl
sbb
out
mov
out
sahf
popf
fimull
push
pop
cmp
cmp
sub
mov
test
jnp
icebp
lock
loope
inc
mov
mov
inc
adc
cmp
jg
cmp
pop
push
test
push
dec
dec
push
ficompl
ss
jl
pop
or
sbb
or
xchg
mov
cli
add
xchg
fdivrp
push
fcoml
jb
mov
adc
ljmp
pop
aam
cmp
add
cmp
push
cld
in
xchg
pop
add
push
jnp
cltd
lahf
testl
sbb
jns
sub
lods
mov
inc
in
add
lret
test
std
test
and
jmp
add
test
ljmp
cli
cmp
mov
call
cwtl
sbb
arpl
arpl
xor
cwtl
dec
int3
mov
out
jmp
cmp
pop
cld
movsb
sub
xchg
int3
bound
xchg
cmp
dec
push
mov
daa
or
jo
test
fwait
cmc
mov
ds
test
dec
add
xchg
bound
xor
rcrb
addr16
jns
or
cmp
ja
push
pop
xchg
fs
jge
stos
inc
mov
xchg
jo
and
push
cs
mov
out
push
in
dec
mov
jecxz
jge
outsb
cltd
mov
inc
das
pop
test
sbb
cmp
mov
imul
mov
xchg
lea
ret
or
jmp
fs
sbb
pop
pushf
jge
jg
adc
fidivrl
test
mov
movsb
cltd
xor
lock
ljmp
outsl
mov
movsl
stos
js
or
idivb
sbb
loop
cmp
lcall
lcall
pop
cld
xchg
cmp
push
fmul
add
sub
mov
shrb
mov
cmovne
mov
fimuls
dec
dec
pop
cmp
test
fisubl
in
in
add
shrb
jnp
leave
cmpsb
push
ret
mov
xchg
push
jge
pop
xor
stos
mov
pop
dec
aad
xor
jl
push
cmp
sbb
adc
mov
jo
outsb
cmc
adc
ds
inc
xchg
cmp
mov
inc
or
test
aas
mov
lock
push
jg
je
and
cmp
pusha
cmp
bound
cld
test
data16
dec
add
data16
pop
imul
and
inc
cmp
sbb
mov
js
and
sbb
inc
mov
rorl
pop
les
cmp
cmp
std
mov
xor
loop
incb
fwait
lock
add
scas
rorl
fwait
addr16
movsl
mov
pop
sbb
stos
scas
sub
cwtl
ja
mov
daa
adc
add
push
push
cmp
or
cwtl
jg
test
jl
xchg
das
divb
push
cmpsl
clc
ja
mov
ret
dec
mov
cli
iret
or
add
ljmp
lods
les
push
pop
iret
sub
inc
arpl
pushf
cltd
add
or
inc
fwait
sub
mov
jle
xor
jg
inc
sub
in
lret
ret
scas
add
xchg
cmp
out
test
ss
stos
stc
dec
xchg
fnstenv
shlb
insb
xchg
inc
cmp
or
js
test
aas
fs
add
jnp
push
mov
pusha
xchg
leave
in
lds
xchg
addr16
mov
sbb
mov
cmp
push
add
inc
clc
sbb
jnp
andl
lea
dec
xor
add
jl
cwtl
add
sbb
xchg
or
sbbl
fiadds
fisttps
pop
sub
dec
lcall
cli
mov
ja
daa
add
pop
jno
mov
lcall
repz
ficoml
sbb
lods
scas
jge
shrl
clc
mov
or
mov
jl
dec
fisttps
loop
pop
scas
in
jne
fs
cmp
xor
push
icebp
std
shrb
jp
mov
jb
jge
fdivr
lds
xchg
shr
mov
mov
aam
xor
xor
jb,pt
stc
mov
mov
jg
mov
or
or
add
mov
lods
clc
jb
mov
add
movsl
test
es
inc
test
loope
lcall
test
popf
or
push
subb
mov
cmp
mov
lret
push
dec
jns
clc
leave
loope
or
jl
aad
cwtl
shrb
adc
jg
mov
rclb
imul
loopne
mov
xlat
data16
test
sbb
or
mov
add
imul
mov
shlb
xlat
stos
imul
xchg
mov
sub
mov
andb
xchg
xchg
pop
fsubrl
cltd
enter
mov
stc
inc
mov
push
movsb
dec
add
jbe
mov
les
pop
test
mov
add
and
js
jbe
add
stc
popa
add
mov
data16
sahf
xchg
ds
rclb
add
sahf
jg
xchg
add
inc
fsubrs
clc
mov
adc
fwait
clc
leave
repz
push
pop
dec
inc
decl
scas
mov
xchg
test
or
mov
sub
mov
cmp
or
mov
push
ret
push
xchg
and
sbb
jnp
xor
push
mov
mov
out
mov
cmp
mov
mov
jo,pt
std
test
xchg
jp
jp
fstpt
test
push
add
add
inc
cmp
jge
sbb
xor
sbb
fsubrs
ljmp
rorb
ljmp
push
jg
rcrl
add
mov
scas
gs
pop
cmp
cmp
and
aas
push
inc
je
xor
and
scas
pop
aas
mov
test
rol
insb
mov
cmpb
inc
mov
add
pop
cmp
lahf
aaa
popl
ror
cmp
sbb
scas
std
add
inc
mov
orl
and
sub
sbb
mov
add
test
dec
call
jmp
loope
pop
subl
ret
or
push
adc
ljmp
push
sbb
test
out
lret
loope
into
rcr
dec
dec
cmp
clc
notl
cltd
loope
sub
dec
addb
icebp
hlt
cmp
adc
rclb
push
or
add
test
test
inc
cltd
mov
ja
mov
or
mov
gs
fwait
rorb
popa
rcrl
repnz
pop
add
cmpsb
arpl
mov
repnz
repnz
scas
fdivs
sbb
cmp
inc
movsb
xor
cmp
loop
jge
push
cmp
clc
pop
cmp
jl
in
xchg
mov
xor
lods
jg
sbb
int3
nop
pop
lods
jb
cmp
cmp
adc
mov
inc
sub
pop
or
test
dec
sbb
shrl
pop
cwtl
addr16
cmp
sbb
cs
jle
or
fmuls
fdivrl
sbb
or
xchg
pushf
mov
sahf
inc
rcr
adc
jbe
push
jnp
imul
mov
jg
stos
jns
jecxz
mov
xchg
dec
and
push
push
jge
inc
mov
loopne
xlat
cmp
insb
ds
popa
cmp
test
clc
xchg
dec
arpl
cld
lcall
inc
nop
fcomp
sbb
out
test
inc
cmp
stos
sbb
sbb
int3
or
stos
jmp
mov
push
cwtl
mov
std
vphaddwq
addr16
fdiv
jbe
adc
cmc
pop
std
mov
add
call
mov
cmpsb
push
adcl
inc
sub
cmp
jp
outsl
aas
loope
sahf
and
icebp
xchg
cs
test
adc
add
rolb
inc
ja
test
and
mov
push
xorb
adcb
jg
jmp
xor
scas
aad
ror
lds
leave
filds
cmpsb
sarl
pop
sub
dec
dec
mov
inc
rcr
push
add
pop
setnp
or
into
pop
cmc
daa
mov
inc
repnz
cwtl
outsl
fidivrs
test
cmp
mov
and
popf
shlb
jno
sub
fdivrl
sub
lds
mulb
pop
cmp
pop
loope
fidivs
mov
aam
mov
or
pop
jge
flds
shl
jg
stc
jnp
clc
andb
popa
arpl
lahf
sub
add
clc
pop
pcmpgtw
adc
fstpt
ds
pop
xchg
xchg
mov
test
lret
mov
sub
decb
sub
test
ljmp
fisubrs
ja
mov
imul
mov
loopne
cmp
xchg
lods
mov
out
andb
sub
aam
xchg
sub
shll
mov
outsl
xchg
ss
pop
sub
fwait
cmc
push
cmp
fdivrl
sahf
dec
mov
fnstsw
adcl
dec
push
push
sti
mov
dec
rcrl
ljmp
pop
in
lods
sbb
in
test
mov
pusha
icebp
jmp
jg
rorb
push
and
test
mov
inc
jmp
pop
inc
pop
mov
add
xchg
jno
daa
scas
into
stos
lcall
jmp
leave
fwait
pusha
rcll
js
in
daa
jg
or
mov
lret
rcrl
mov
and
jmp
mov
xchg
mov
add
stos
jns
call
decl
gs
xchg
insl
test
inc
dec
dec
cmpsl
andl
int3
or
pop
fiaddl
push
testl
xor
rcrl
imul
dec
xchg
test
sbb
aas
cmp
jo
stc
jne
xchg
fstpt
cmp
adc
inc
rorl
add
cltd
pusha
repnz
arpl
aam
cmp
and
cli
cmp
cmp
dec
xor
mov
out
lods
mov
cmp
xchg
inc
mov
pop
xchg
data16
in
adc
dec
jnp
mov
sahf
fdiv
push
inc
xor
jnp
dec
or
sbb
mov
mov
sahf
mov
lret
push
out
pop
ja
fisttpl
jns
push
adc
inc
addl
cmp
fsubl
std
dec
pop
jno
sub
cmp
and
cmpl
cld
lea
andnps
lea
mov
jae
clc
rcr
xchg
dec
int
insl
in
push
dec
sbb
ret
xchg
or
int
mov
std
dec
jmp
cmpl
add
adc
lcall
fisubrs
ja
mov
jmp
adc
in
adc
add
xchg
adc
ja
aad
or
ljmp
arpl
test
sbb
ljmp
aaa
lahf
addr16
test
cmp
jns
out
cli
xchg
xchg
pop
shlb
inc
test
adc
sbb
dec
js
mov
mov
jmp
xchg
mov
rcll
shlb
ja
adc
mov
and
mov
add
cmpsb
jp
push
xor
dec
mov
mov
jnp
cli
or
push
bound
cld
push
cmp
jg
aaa
add
inc
pop
sahf
dec
cmp
jno
inc
cmpsb
xchg
adc
out
inc
mov
inc
aaa
pop
fwait
pop
xrelease
adc
add
pop
loop
clc
and
fisubs
pop
xchg
jmp
jecxz
cmp
sbb
sti
and
out
pusha
shll
test
out
inc
mov
lock
inc
cmp
adc
cmp
call
xor
pop
and
clc
pop
jle
mov
or
jb
cmp
inc
cmp
test
outsl
mov
clc
or
aam
or
mov
cmp
aas
add
out
dec
cmp
stc
test
cmp
repnz
leave
adc
mov
addl
xorb
out
mov
stos
shr
ja
popa
lret
into
cltd
mov
pop
pop
mov
xor
add
jns
push
mov
push
pushf
andb
dec
fcoms
pop
xchg
sti
fistl
sub
jbe
mov
cltd
xchg
call
adc
test
pop
out
incb
sub
xchg
mov
sarb
push
cmovae
ret
repnz
roll
jge
xchg
jnp
mov
or
cmp
adc
sbb
mov
or
jmp
cmp
xor
es
int
ds
stc
js
jmp
inc
lcall
lahf
inc
loope
jno
pushf
in
aaa
int3
scas
or
cmp
xorl
xor
iret
fstps
mov
lcall
mov
mov
imul
fadds
loope
sbb
into
jmp
add
pop
sbb
test
xchg
xor
fdivr
add
cmp
jmp
adcl
cmp
outsb
jmp
movsl
inc
jmp
addb
lock
xchg
cmp
add
jne
jle
push
ret
cmp
mov
xor
lods
loope
jnp
push
mov
add
cwtl
test
pop
cwtl
fldcw
xorb
xchg
inc
rorl
jl
adc
jnp
fstps
cmp
lds
movsb
sub
or
fcompl
jmp
fcom
popa
stos
pop
subb
addr16
and
stos
mov
js
sub
xlat
int3
jp
adc
lret
push
inc
xchg
jle
fstps
mov
into
mov
out
mov
ret
jae
or
clc
and
add
inc
mov
pop
sbb
les
adc
mov
int
ljmp
test
add
xor
lods
sbb
push
and
and
and
xchg
push
int3
pop
mov
sub
mov
push
add
sbb
sbb
or
sbb
sub
arpl
mov
into
add
and
jle
std
add
sbb
fsubl
pop
jg
pop
add
daa
sbb
mov
add
pop
mov
mov
shll
sub
cmpsb
ja
sbb
mov
cli
out
sbb
xchg
or
call
xor
add
xchg
xchg
sti
jmp
mov
mov
push
mov
test
inc
sti
xchg
jle
in
push
test
jo
in
mov
cmc
jns
cmp
cmp
push
inc
or
cmp
js
mov
das
inc
and
or
sub
insb
cld
and
mov
or
jl
mov
xorl
or
mov
jne,pt
jg
mov
es
repz
cmp
add
mov
or
fiaddl
test
sub
mov
adc
xchg
xor
jp
sbb
cli
cmc
push
icebp
in
push
int3
sbb
cmpsl
dec
push
or
cmp
movl
xchg
mov
jne
sub
push
dec
sbb
popf
pop
lods
hlt
incb
lods
std
lahf
sbb
mov
pop
add
mov
stos
xorb
add
les
cmpsb
inc
sub
sarl
rolb
inc
xchg
sub
cmp
pop
ja
mov
push
sbb
and
sahf
inc
aaa
pop
sbb
adc
inc
cmp
roll
repz
jecxz
add
int
adc
addr16
pushw
js
repz
cmc
movsb
mov
xor
dec
shrb
inc
add
out
mov
jl
xchg
nop
mov
mov
sub
mov
lea
fidivrs
cwtl
scas
aas
jno,pn
inc
mov
cs
add
inc
out
scas
sbb
in
sbb
popa
inc
clc
pop
add
cwtl
loop
cmp
mov
cs
out
mov
or
push
cwtl
ror
xchg
mov
mov
jno
cwtl
sub
jl
sbb
pop
xchg
mov
pop
and
sub
sbb
lahf
dec
sbb
into
adc
push
fbld
inc
jne
test
pop
or
mov
adc
out
int3
sub
test
mov
cmp
jmp
mov
xorl
and
clc
or
pop
mov
jo
loopne
pop
ja
jle
and
mov
add
or
mov
lea
inc
addl
adc
sbb
filds
or
xchg
push
or
cmp
aad
ja
pop
pop
push
int
pusha
sbb
mov
popa
and
clc
mov
and
mov
pop
cmpsb
lret
dec
pop
push
fnsave
test
fistpl
ret
mov
mov
loopne
js
lock
xor
std
stos
lds
out
insb
mov
pushf
dec
cmp
xchg
cltd
imul
push
jb
fdivrl
pop
dec
or
or
push
push
cld
cmp
cld
int
in
popa
xchg
ret
push
pushf
add
sub
mov
clc
or
adc
mov
mov
pop
add
imul
faddp
out
fsubs
add
xchg
cld
xlat
or
adc
loope
add
stos
cmp
ljmp
loope
dec
test
scas
stos
mov
shll
sarl
clc
cmp
push
dec
cmpsl
push
outsb
popf
pop
mov
ficomps
sti
pop
in
jo
cmp
cmp
add
fstpt
xorb
pop
or
mov
clc
sarl
mov
push
ds
mov
aad
xor
cmc
rorb
mov
les
in
pushf
jp
and
mov
lds
cmp
in
jp
outsl
or
shl
xchg
mov
xlat
or
pop
arpl
sbb
icebp
push
popf
cmpsl
xchg
pop
inc
insl
push
sbb
icebp
and
dec
cld
xchg
mov
xlat
mov
jbe
arpl
cltd
adc
ret
repnz
data16
and
push
jp
imul
test
mov
popf
cmp
scas
lods
mov
mov
cmp
or
out
insl
xchg
sbb
sbb
ja
jge
mov
test
adc
je
dec
mov
jno
xor
add
sub
dec
js
sbb
test
mov
gs
jge
stc
jp
cmp
js
pop
cmp
jge
mov
add
mov
shll
xchg
pop
sbb
ss
loop
push
push
xchg
push
test
jns
mov
cmc
cmp
cmp
cmp
std
dec
xchg
mov
xor
jbe
cmpsl
adc
out
movsl
imul
mov
mov
sbb
push
hlt
add
cli
and
jge
sbb
and
mov
lds
ja
inc
iret
cwtl
cld
add
leave
test
add
movsl
enter
adc
pushf
loop
stos
sti
adc
lds
sbb
test
rorb
jge
mov
ljmp
cmp
pop
inc
std
mov
out
xchg
loopne
sbb
sbb
js
jle
nop
ret
jmp
jbe
push
call
dec
stc
pop
std
js
sar
adc
mov
cmp
mov
pop
rorb
cmpsb
inc
xchg
push
dec
adc
push
xchg
je
repz
pop
add
insb
mov
loop
push
out
or
notl
mulb
ret
lods
repz
inc
daa
scas
pmaddwd
xchg
ds
mov
ljmp
into
js
cmp
cmp
and
adc
and
iret
clc
mov
push
cmp
fstpt
sub
repnz
xchg
or
rol
push
xchg
cld
xchg
sub
lods
in
test
dec
sahf
push
adc
aam
nop
jge
cmp
xor
cmp
sub
rcll
xor
cmovs
js
loopne
out
mov
jo
xor
sbb
fmul
and
test
mov
inc
ja
dec
ds
fs
add
and
mov
pop
xor
cli
push
xor
lods
push
sbb
add
fwait
aad
lds
outsb
rolb
push
ja
dec
or
xchg
cli
push
fstpl
insb
xchg
rol
lock
or
fcoms
mov
mov
push
shrl
mov
dec
mov
repnz
sub
inc
or
jl
sub
sbb
testl
dec
insb
xchg
jp
pop
pop
xchg
dec
or
fidivrs
mov
mov
inc
mov
pop
mov
pop
movsb
lds
mov
pop
insb
inc
lret
add
or
popf
pop
jg
mov
mulb
dec
dec
pop
decb
out
or
push
dec
mov
test
xor
clc
test
cmc
dec
jo
rcll
mov
popf
cmpb
mov
les
imul
add
mov
daa
aad
fldenv
out
xor
jle
mov
pop
jae
add
sbb
xchg
mov
mov
fimull
ja
mov
stos
cmp
shlb
inc
out
add
fcompl
js
imul
popa
sti
push
lea
jmp
pop
mov
jns
or
xor
jecxz
mov
out
pop
std
adc
clc
dec
xor
aaa
test
mov
sub
xor
or
scas
sbb
vmulps
mov
popf
js
push
push
ds
stos
mov
shl
fildll
inc
pop
fdivrs
inc
leave
lea
or
es
or
pop
fdivs
xchg
es
or
out
mov
add
dec
pop
bound
push
movsb
jns
subb
loopne
dec
dec
fwait
inc
inc
icebp
bound
sub
and
enter
mov
dec
mov
popf
ljmp
pop
sbb
addr16
sbb
adc
mov
pop
cli
jns
jnp
int3
ja
fdivl
and
cmp
pop
push
sbb
xchg
sar
dec
mov
std
lods
mov
js
clc
std
ds
imul
jmp
push
iret
scas
js
jl
xchg
sub
xor
mov
inc
popf
mov
push
mov
mov
xchg
sbb
js
or
or
jge
sbb
std
stos
dec
mov
bound
jecxz
pop
in
sahf
cmc
aas
aam
cmpsb
shl
dec
ja
test
in
mov
push
pop
aas
ljmp
out
mov
js
mov
rcrl
or
sub
or
sti
loop
add
mov
clc
fimull
add
jl
or
pop
addl
test
add
mov
stos
cmp
adc
in
orl
fsts
cmp
sti
sbb
jbe
lcall
ret
jge
inc
or
pop
adc
push
sahf
int
sub
imul
bound
mov
mov
xor
inc
mov
dec
add
testl
shrb
jno
adc
dec
xchg
dec
mov
xchg
add
add
ja
cld
or
filds
add
pop
ror
mov
jne
push
push
add
jne
add
jge
xchg
cmp
stos
xchg
or
sahf
cli
add
or
inc
mov
mov
nop
jbe
es
dec
mov
inc
jae
test
mov
shrb
add
scas
or
das
subb
mov
mov
or
cmp
jnp
cli
push
decl
mov
fs
popa
inc
and
push
out
xchg
mov
cmpsb
push
ljmp
adc
cmp
movsl
andb
push
fisubrs
mov
jns
mov
add
cmp
loopne
sarl
arpl
imul
roll
movsb
xchg
loopne
and
jle
loopne
mov
push
dec
mov
inc
pop
inc
insb
adc
shll
loopne
mov
cltd
adc
subb
sbb
or
adc
xlat
in
repz
or
cmp
add
pop
or
pop
clc
or
push
in
dec
sbb
add
jecxz
pop
jb
scas
mov
movsb
xchg
pop
sub
shlb
xor
stc
push
call
dec
bound
jle
scas
pop
je
out
push
dec
jmp
inc
test
fmuls
frstor
add
outsb
pop
and
add
iret
add
aad
das
inc
mov
add
movsb
add
les
pop
xorb
imul
add
aad
cltd
pop
mov
fs
cmp
fisttpll
test
fwait
div
aaa
inc
aam
lcall
add
lock
mov
inc
sti
test
mov
test
pop
jnp
es
hlt
fdivrp
pop
adc
addb
ljmp
and
mov
push
les
pop
add
scas
call
lods
int3
adc
fwait
dec
mov
fcmovnb
sbb
add
mov
sub
xor
cmc
ja
sub
rorb
dec
iret
sub
imul
out
test
pop
into
scas
js
jbe
add
jle
add
jbe
sbb
cmp
jmp
or
stc
ds
adc
aas
fwait
dec
outsb
inc
arpl
xor
dec
ds
dec
push
jo
sbb
jmp
test
mov
lds
stos
ljmp
std
sbb
xlat
call
stos
mov
ret
dec
mov
hlt
push
fwait
mov
sub
pop
stc
mov
popa
pop
outsl
test
cmp
jl
lahf
int3
roll
mov
call
xchg
js
daa
fisttps
dec
dec
xchg
data16
lahf
test
inc
arpl
dec
inc
cmc
mov
mov
mov
mov
xchg
and
pop
add
stos
inc
ljmp
dec
jl
in
mov
mov
xchg
or
jle
out
sub
mov
loopne
test
add
adc
cmp
jp
arpl
xchg
pop
mov
mov
daa
inc
xchg
xchg
sahf
inc
fists
fisttpll
lcall
movsl
sub
add
or
push
mov
xor
mov
push
mov
lret
cmp
cmp
inc
xchg
cmp
leave
lds
cmp
repnz
std
xor
dec
stc
xor
mov
inc
repnz
bound
movsb
ds
fsts
sub
addr16
or
test
cwtl
pop
into
adc
into
sub
inc
inc
mov
sub
lahf
ja
sub
fidivrl
outsl
inc
mov
adcb
arpl
push
jl
sarb
and
sbb
mov
shll
push
movsb
push
pop
aad
sti
push
ja
stc
jl
ljmp
dec
inc
jae
pop
cmp
test
test
icebp
jb
mov
push
xchg
jle
shl
dec
ja
ret
jecxz
outsb
adc
sbb
inc
and
sub
scas
lods
add
mov
pop
dec
mov
in
sbb
ficoms
cmp
arpl
jnp
imul
jns
loop
sahf
int
pop
dec
jg
inc
sub
sarl
dec
sbb
cmpsl
imul
inc
in
and
lods
xchg
rol
jnp
jno
incl
jg
inc
sbb
shlb
cmp
roll
js
test
and
jnp
mov
cmpb
inc
add
ret
dec
add
imul
sbb
sub
mov
jg
xchg
mov
sub
mov
adc
cmp
js
push
addr16
aas
cmp
inc
cmp
sbb
cmpsl
cltd
cltd
lret
jno
cmp
jg
mov
ficompl
cmp
in
jae
push
ds
out
pop
mov
int
mov
or
sti
pop
cmp
sub
cmp
cli
cmp
ss
or
js
mov
jge
push
add
add
popa
fldcw
add
paddw
xor
or
fcomps
jo
sbb
das
int3
pop
rcrl
sbb
jne
test
jge
sbb
sbb
xchg
ds
repnz
jae
les
out
xchg
mov
jp
stc
xor
add
mov
sbb
mov
fsubl
jns
loop
or
sahf
or
inc
mov
jmp
bound
mov
mov
dec
sub
sub
lods
ja
mov
pop
js
and
dec
sbb
sbb
mov
sbb
or
idivl
imul
mov
cli
int3
and
and
cmp
push
jle
jnp
jle
icebp
xchg
cmp
push
into
inc
add
sti
test
loop
lock
popf
push
jbe
test
das
xchg
lea
test
popa
dec
xchg
into
cmp
sarl
dec
mov
cmp
in
cmp
sub
rcrl
movsl
fimuls
mov
push
enter
loop
mov
jg
or
stos
sbb
imul
scas
adc
push
out
mov
pop
out
push
push
subb
or
test
shl
lahf
sbb
repz
cmpsl
daa
jg
xchg
add
sahf
addr16
mov
enter
sub
stos
in
fwait
cmp
sbb
jge
mov
fsubr
sbb
subb
pop
pop
insb
mov
pop
xchg
sbb
rorb
fs
dec
arpl
jo
orb
mov
hlt
and
sub
pop
sbb
inc
ja
sti
mov
jmp
pop
and
into
mov
sahf
or
cmp
lods
dec
mov
dec
sub
xor
gs
mov
inc
sbb
pop
sub
cmp
ss
loope
cmp
iret
movsb
sti
jnp
jnp
mov
mov
lock
ficoml
scas
test
add
jge
jg
insb
aam
or
pushf
je
cmp
iret
leave
mov
sti
cmp
mov
test
cs
mov
inc
andl
insb
je
std
lock
and
jecxz
mov
js
jg
jle
sbb
lock
lahf
jmp
jle
js
jle
push
cmp
popf
aas
jle
jno
xchg
test
daa
sbb
out
leave
or
js
or
dec
fdivrl
and
push
or
or
push
lcall
nopl
jnp
add
pop
in
jns
mov
xchg
fbstp
jg
popa
mov
cmp
addr16
popa
mov
xchg
cld
test
sarb
js
test
lds
icebp
bound
sti
fisubs
rorb
xor
push
mov
test
rol
repnz
call
push
test
popa
cmp
fstpt
sub
cmp
insl
xchg
popa
ds
jnp
cltd
mov
imul
rcrb
xchg
mov
xorl
dec
pusha
lret
frstor
lret
or
sti
pusha
mov
cmp
sbb
sub
dec
lods
jne
xor
jb
stc
mov
jb,pt
cmp
cmp
push
lret
jge
sbb
mov
mov
test
sbb
pop
test
xchg
cmp
sub
mov
iret
mov
add
test
mov
call
scas
dec
mov
xchg
cmp
ds
adc
bound
mov
or
lods
jnp
nop
rcrb
adc
push
add
gs
adc
ja
ja
sbb
sbb
pop
inc
xchg
mov
je
sti
xor
pusha
mov
cmp
maskmovq
testl
or
aad
jmp
mov
pop
cmpsb
push
movsl
test
dec
outsb
add
lret
sub
stos
fwait
orl
push
sub
jl
in
cmp
mov
fwait
std
xor
dec
jle
cmp
popa
iret
inc
sti
mulb
xor
pop
dec
mov
es
xor
imul
jg
fisubs
sub
push
lahf
mov
call
test
dec
jg
xchg
cmp
jns
sbb
rclb
sbb
jl
imul
inc
mov
xchg
cmp
test
cmpsb
or
xchg
decl
cwtl
lea
push
dec
xlat
mov
dec
push
inc
inc
test
push
mov
les
test
cmpsl
or
cmp
xorl
stos
xchg
div
mov
or
mov
enter
add
scas
cs
cmc
rolb
rep
add
adc
dec
xchg
xchg
xchg
scas
ljmp
jno
mov
cmpsb
pop
jbe
mov
jg
mov
out
mov
cltd
or
scas
add
adc
iret
sub
in
inc
imul
push
sbb
jns
push
popa
movsb
pcmpeqb
stc
push
jp
xchg
or
iret
dec
cmp
xor
pop
xor
mov
test
mov
jns
pop
cwtl
xchg
int3
call
adc
arpl
cld
das
loopne
lods
cmp
icebp
dec
rorb
lods
inc
roll
push
mov
or
imull
pop
lock
mov
arpl
xchg
repz
pop
cmpsl
fistps
pop
jbe
ret
add
cmp
mov
jae
sarl
shlb
imul
jge
les
shlb
cli
pop
test
sbb
pop
mov
pushf
pop
iret
sbb
dec
es
aaa
fildll
js
inc
orl
add
sbb
sahf
imul
xchg
and
xchg
adc
mov
mov
xchg
sbb
cmc
xchg
insl
les
dec
outsb
js
orl
cmp
js
movsl
dec
adc
mov
xor
dec
pextrw
push
sbb
bound
add
test
add
mov
or
mov
sbb
sub
pop
in
cmp
idivb
out
sbb
cmp
push
push
jmp
dec
or
pop
push
fidivrl
jns
idivl
pop
pop
inc
cmc
stos
test
leave
push
sbb
iret
and
xor
mov
xor
push
or
add
popf
mov
sub
inc
push
inc
push
or
ds
or
pop
inc
mov
push
fwait
mov
gs
dec
push
lea
les
xchg
in
popa
out
lods
mov
cmp
inc
fstpl
repz
test
mov
jmp
inc
adc
lea
jnp
push
mov
jle
push
xlat
cmp
and
mov
popf
movsb
cmp
stc
gs
pop
jo
daa
adc
mov
ljmp
sbb
push
dec
dec
add
mov
xchg
or
xchg
movsb
pop
xchg
push
push
out
and
mov
jge
and
jb
push
std
loop
jl
and
fistl
ret
push
cmp
popf
mov
lcall
mov
mov
xchg
sub
pop
fs
jae
jne
enter
and
mov
shll
test
mov
jge
mov
out
roll
loope
and
sbb
mov
push
fcmovb
mov
and
xor
mov
cmp
add
mov
cs
add
hlt
and
lret
shrl
stc
push
fdivrs
mov
inc
add
mov
iret
mov
mov
pop
mov
into
popa
decl
xor
loope
ljmp
inc
or
and
ss
dec
add
sti
push
dec
lahf
sub
cmp
fdivrl
cmovg
xor
addr16
cmp
adc
mov
mov
loope
mov
scas
cmp
xor
popf
inc
sbb
jp
xor
ljmp
cmp
gs
ljmp
push
xorb
mov
pop
lods
or
popa
xchg
jl
mov
scas
xchg
dec
iret
icebp
add
dec
fprem1
cmp
roll
outsl
addb
stc
inc
xor
or
jmp
pusha
xchg
iret
scas
pop
inc
jbe
sbb
ss
cltd
jb
mov
dec
stc
pop
clc
or
js
sbb
cmp
mov
imul
jg
les
test
and
mov
cmpsb
or
leave
lcall
fimuls
cmp
popf
pushf
or
mov
jns
imul
push
inc
or
daa
fwait
in
loopne
adc
lahf
aaa
movl
pop
cmp
pop
or
add
and
ja
sbb
js
pop
aas
or
xchg
cmp
mov
aam
popf
jno
push
test
sbb
es
pop
pop
and
imul
jl,pn
xor
xor
fistps
xor
gs
cmp
mov
mov
push
adc
jmp
and
popa
push
gs
jge
sti
dec
sub
test
push
repnz
pop
or
add
cli
cmpsl
into
inc
shr
ret
rcrb
test
sub
pop
xor
or
sbb
xor
push
pop
test
sub
jnp
leave
enter
bound
xor
mov
pop
push
sub
add
adc
mov
cmp
mov
cli
mov
mov
add
mov
cmpl
xchg
sub
add
mov
jle
xor
rep
rorb
stos
mov
adc
sbb
test
push
out
mov
mov
jno
inc
cmp
jl
cmp
testl
fs
cmc
stos
cmpsl
sub
mov
pop
mov
sub
out
or
in
sbb
cmp
aaa
or
fisttpl
test
incb
into
pop
mov
mov
or
xlat
stos
movsl
movsl
mov
loop
notb
dec
inc
inc
repnz
cmc
sbb
pop
or
in
push
fcmove
mov
mov
xor
and
aaa
xchg
xchg
cltd
mov
sbb
call
mov
jno
push
ljmp
pop
aas
mov
or
and
cwtl
sbb
cmp
jle
xchg
adc
cld
jmp
mov
ds
mov
adc
nop
rcrl
pop
repnz
cmc
sarl
fs
icebp
xor
nop
fmull
and
out
sub
dec
int3
mov
sbb
cmp
sahf
and
mov
cmpsb
daa
fmul
test
movsl
in
xor
mov
dec
leave
rcrb
call
rcrb
jl
popf
mov
add
test
dec
push
xchg
insl
in
mov
sbb
in
mov
xchg
mov
pusha
mov
cmp
insb
mov
or
es
jecxz
test
cltd
push
in
xor
gs
xchg
cmp
pusha
pop
insb
addl
fwait
lods
loop
xchg
xlat
pop
movsl
orl
push
dec
loop
xchg
mov
lcall
cmpsl
hlt
xchg
pop
data16
pop
movsb
sbb
sbb
ljmp
inc
testl
aam
stos
push
in
cmp
inc
add
or
repnz
jmp
into
push
xor
adc
rorb
jg
push
mov
xor
jae
pop
cmp
dec
push
cltd
or
jp
cmp
pop
dec
dec
mov
scas
add
dec
mov
jo
jmp
pop
inc
jno
roll
jp
fisttpl
jns
adc
loope
orl
lret
jns
pop
sar
dec
dec
mov
and
inc
mov
cmp
xor
outsb
mov
pop
shrb
shrl
das
decl
or
lret
mov
insb
add
lods
jnp
fcomp
fldcw
lret
jge
xor
std
rol
xchg
xchg
and
pop
jg
mov
mov
pushf
arpl
xchg
cmp
jmp
inc
sbb
jecxz
dec
imul
inc
xor
out
cmp
pop
lods
ret
clc
sub
push
adc
cmpsb
lahf
stos
jno
test
lret
lcall
aas
lahf
lods
sbb
lods
or
and
repnz
imul
dec
fcomps
jno
jg
jns
mov
dec
cmp
dec
sbb
inc
jp
mov
mov
enter
mov
sub
sub
cmp
sbb
test
ffree
jnp
jno
jle
mov
enter
jg
mov
or
addr16
mov
sbb
mov
orl
add
inc
inc
addb
ret
dec
and
add
inc
cmp
add
fs
sbb
or
sahf
mov
jnp
sbb
jg
inc
or
lahf
out
sbb
mov
mov
imul
push
mov
lahf
mov
loope
inc
dec
mov
or
dec
mov
inc
mov
inc
sbb
clc
or
add
mov
or
mov
cmp
jnp
mov
imul
jl
mov
cmp
jg
std
out
pop
sbb
mov
inc
jg
mov
jg
inc
or
jnp
sbb
cltd
and
add
inc
cmp
sbb
cmpl
imul
test
les
add
test
in
lds
xchg
es
push
fwait
and
cli
xchg
mov
pop
jg
xchg
pop
or
lods
inc
insl
and
mov
cmp
dec
iret
cmp
push
andb
pop
sub
mov
mov
dec
mov
movsl
or
cs
dec
adc
pop
pop
add
fs
lret
ss
push
bound
jle
or
jb
jbe
xchg
fistpll
mov
scas
stos
jnp
mov
out
decb
jp
add
lods
pushf
jae
xchg
out
in
sbb
push
rclb
out
jecxz
jae
add
and
aad
jl
mov
jns
jno
test
rcrl
xchg
sub
jge
pushf
js
sbb
in
leave
fcomi
jae
mov
into
out
fnstcw
dec
inc
xlat
test
jg
jns
xchg
in
mov
or
nop
dec
fs
stos
jmp
inc
in
jno
int
xchg
mov
idivl
xlat
cmp
or
outsl
xchg
inc
mov
ja
mov
les
inc
decl
xor
pxor
cmp
adc
xor
sbb
clc
fistpl
mov
insb
dec
int3
test
sub
sub
xchg
movsb
sbb
es
shll
mov
cwtl
cmc
or
push
mov
push
push
jnp
pop
mov
dec
or
fwait
stos
ljmp
les
mov
pop
pop
pop
push
inc
mov
inc
lods
adc
sar
js
inc
out
fdivrp
loop
cmpl
push
call
cmp
fidivrs
inc
inc
cltd
add
dec
or
sub
popa
adc
xchg
ret
cmp
xor
xor
dec
fdivl
cvtdq2ps
arpl
ror
sbb
jnp
outsl
cld
mov
clc
pop
aam
imul
test
icebp
mov
sbb
or
mov
push
sub
jle
xchg
mov
imul
adc
or
int3
sub
jle
divl
stc
sbb
pop
movsb
fisubrl
cmpl
out
paddw
jp
test
iret
adc
and
les
pop
xorb
jl
out
sbb
jb
cltd
divl
out
push
add
popl
bound
negb
jmp
adc
std
inc
js
test
jp
call
test
sbb
or
addr16
jo
cmp
cmp
fisttps
mov
cmp
mov
or
push
mov
cmp
mov
pop
xchg
aas
push
add
daa
incl
sbb
js
xor
aas
inc
xchg
add
xor
cmp
es
mov
pop
fadds
lcall
inc
shrl
mov
push
scas
mov
mov
rorl
mov
out
lock
cmpsb
jl
add
pop
test
icebp
mov
scas
incb
cli
mov
jle
push
subb
leave
cmp
popf
shrb
xchg
daa
hlt
iret
es
je
pop
cmpsl
sbb
jnp
cmp
hlt
iret
push
ficoms
jnp
stc
sbb
fstpt
sbb
xchg
sbb
cmc
mov
cltd
cmp
push
neg
sbb
sub
add
xchg
mov
inc
add
popa
sbb
push
xchg
inc
xchg
and
dec
add
stc
clc
int3
jae
pusha
xor
aas
xchg
mov
xchg
xor
add
jnp
pop
test
out
ret
test
sub
js
mov
cmpsl
mov
cmp
mov
sbb
inc
jno
pop
aam
js,pn
mov
mov
push
jle
push
sbb
movsb
push
sub
mul
inc
jle
lea
push
clc
repnz
sti
mov
cwtl
bound
mov
arpl
into
fs
jecxz
sbb
cmc
jns
jl
xor
sub
stos
cmc
xor
mov
xor
add
test
icebp
mov
jb
inc
xor
mov
sti
outsb
add
popf
cmp
sub
negb
fnstcw
shrb
mov
popf
and
adc
cli
mov
hlt
cli
or
fs
mov
and
or
ds
add
push
into
add
test
faddl
lds
mov
adc
add
or
aad
pop
sbb
shll
shrl
dec
adc
cmp
xlat
out
test
jmp
cmp
or
inc
add
sbb
mov
nop
fisubrs
xchg
push
cmc
jns
shll
push
pop
int3
mov
mov
into
xchg
xor
cmp
jg
mov
lods
int
jo
add
insl
and
cs
dec
cmp
imul
andl
jl
pop
mov
outsb
outsb
ds
cmp
pop
cmp
ja
cmp
and
adc
lds
pop
fisubs
test
pusha
negb
cs
into
mov
pxor
sbb
clc
mov
pop
negb
popf
xchg
ja
ljmp
jg
cmpsb
mov
jge
mov
ja
xchg
pop
lcall
jae
setb
dec
pop
fildll
cli
adc
adc
cmp
mov
or
mov
filds
hlt
pop
bswap
insb
push
int
fcmovnbe
xchg
cs
ret
insl
mov
sbb
imul
or
push
sahf
or
lahf
cmp
dec
clc
jg
jle
push
cmp
and
lods
jb
loopne
cmpsl
xchg
inc
add
je
dec
mov
cmp
imul
int3
cmpsl
pop
add
scas
and
push
cltd
jmp
ds
fmul
inc
adc
sahf
jo
jae
add
sahf
mov
and
in
mov
fs
mov
mov
jmp
push
add
mov
pop
inc
or
pop
cld
adc
add
or
out
mov
cmp
and
in
and
loopne
jno
xor
ror
pop
pop
cld
cmc
in
pop
hlt
xorl
cmp
sub
cld
add
add
pop
addr16
sbb
repz
loope
ret
js
xchg
sahf
jg
lds
cmc
hlt
push
arpl
mov
mov
jns
cltd
dec
lea
push
cmp
jg
push
cmp
loope
test
ret
jnp
dec
sti
js
pop
xor
filds
pop
xor
mov
hlt
int3
je
roll
scas
dec
sarb
dec
or
lcall
jle
xchg
insl
xchg
sub
mov
clc
popa
sarl
int3
push
xor
rorl
cmp
pop
mov
fdivrs
daa
adc
pop
jge
sbb
xchg
add
inc
add
inc
fwait
mov
testl
rcrb
cmp
add
cltd
xchg
mov
sbb
test
pop
push
in
cwtl
add
sbb
fwait
int3
icebp
sbb
sbb
lods
adc
push
dec
xchg
ret
mov
sbb
or
cs
sbb
sub
aad
sbb
cltd
in
sub
or
loopne
adc
mov
sub
pop
add
iret
fdivrp
shrb
fs
sub
arpl
push
mov
lds
cmp
rcll
shll
lahf
clc
jns
shll
mov
mov
daa
arpl
or
fldl
cmp
dec
data16
clc
add
mov
mov
outsl
fidivrs
mov
outsl
clc
xchg
xor
cmp
inc
jg
jl
dec
cmp
pop
mov
pop
or
js
in
jl
cmpb
cld
imul
jns
pop
sub
mov
pop
adc
pop
pop
xchg
ffreep
push
cmpl
in
or
mov
add
je
add
sbb
mov
mov
mov
sbb
push
or
scas
fsubrs
test
dec
or
in
cmp
repz
cwtl
or
xor
jae
fsincos
add
enter
add
adc
mov
addb
aas
jge
lcall
dec
jge
lcall
inc
push
cmc
movsl
push
je
rolb
jnp
ret
mov
test
mov
cmp
push
es
xor
jno
add
add
lock
sub
pop
mov
sub
popa
add
loope
adc
inc
cmp
cmpb
in
cmp
add
ss
aaa
fdivr
imul
mov
or
fmul
mov
icebp
adc
cmp
pop
or
mov
and
test
popa
xchg
es
out
addb
jae
dec
into
test
insl
scas
mov
mov
jo
inc
jg
add
clc
cmp
mov
dec
sti
mov
mov
xchg
pop
leave
cmp
sbb
mov
fcoml
jne
mov
dec
cmp
lcall
or
jecxz
popf
rcll
adc
dec
xchg
into
sti
in
mov
icebp
test
test
test
and
mov
cmp
pop
js
or
divl
cmp
cmp
hlt
lods
inc
add
imul
push
lcall
add
loope
ja
les
cmpsl
leave
sti
insb
push
or
add
mov
inc
push
stos
adc
cli
inc
xchg
inc
cmp
jp
jg
rcll
adc
mov
cmp
popf
pop
push
call
daa
imul
add
xchg
sti
or
push
ds
mov
push
mov
in
push
ret
ja
pop
ret
jge
xchg
push
and
das
xchg
sbb
jge
enter
inc
mov
inc
gs
sbb
push
jmp
stos
mov
mov
xchg
dec
mov
push
clc
pop
int3
jae
inc
or
jae
cmp
lret
adc
and
andb
mov
and
cmpsl
lds
push
mov
test
and
push
add
push
lcall
jmp
cmp
out
mov
xchg
push
inc
push
cmc
es
scas
sbb
cmpb
fs
dec
negl
test
sarl
xchg
cmp
sub
addl
xor
add
adc
ds
sbb
cs
testl
stos
xchg
paddusb
cmp
mov
into
jp
addr16
stos
jle
js
ja
addr16
int3
xchg
jo
pushf
and
or
rcr
inc
push
mov
cltd
add
mov
mov
xchg
aas
btc
mov
xchg
cmc
sbb
int
sbb
xchg
es
sbb
sahf
fistpl
ljmp
cli
jecxz
ljmp
xlat
xlat
addr16
and
dec
xor
outsb
pop
xchg
xor
outsb
mov
sub
or
inc
in
xor
scas
pop
ss
or
mov
xchg
dec
xor
jbe
push
shlb
enter
add
cmp
xor
xchg
jnp
sub
pop
jns
rol
fsubrl
xchg
add
jge
popf
jb
jmp
mov
movsb
fmull
push
lods
pop
mov
xor
mov
or
xor
mov
cmp
out
jp
cmp
fadd
cs
xor
aad
pop
sbb
mov
shrl
dec
mov
mov
dec
jmp
xlat
cltd
rcrb
inc
stos
test
dec
iret
mov
rolb
inc
mov
cltd
insl
loope
or
sarl
xor
arpl
adc
sbb
loope
insl
mov
dec
nop
popf
cmp
jns
sub
pop
dec
sub
jae
cmp
mov
xor
aad
fwait
stc
sbb
cmp
add
fwait
jge
inc
insl
test
and
sbb
sub
and
xlat
in
mov
mov
cmc
xchg
nop
test
fiaddl
insb
cld
or
lahf
lcall
mov
push
clc
push
cmp
sbb
repz
xchg
dec
mov
xchg
xchg
in
fisubrl
ret
or
orl
clc
ficomps
cmp
push
mov
test
sbb
dec
add
dec
in
adc
mov
outsl
or
popa
or
fistps
lret
out
dec
sbb
into
sbb
sbbl
mov
push
jmp
push
push
ljmp
into
mull
addr16
sbb
push
test
clc
fnsave
pusha
mov
test
jp
int3
outsl
jl
pop
fwait
push
rorl
not
jg
outsb
mov
adc
out
out
andl
mov
rorb
iret
xor
push
dec
sub
and
in
shlb
push
nop
stc
jecxz
dec
out
in
add
cmp
push
mov
repz
in
cmpsb
dec
pop
mov
cli
adc
popa
out
mov
rcll
mov
xlat
cmc
fiaddl
test
adc
imul
cmc
lret
mov
js
dec
std
adc
sarb
cwtl
js
or
xchg
fsts
ljmp
add
lods
jb
mov
lods
rcrb
mov
loope
lds
iret
ljmp
arpl
shlb
out
and
insb
test
mov
dec
in
sub
mov
je
sub
pop
testl
test
repnz
sub
cmpsb
pop
jnp
dec
or
mov
pop
mov
fistpl
out
aas
iret
into
imul
cmpsb
fcmovnu
cmpsb
mov
mov
mov
orl
in
test
mov
mov
xchg
jnp
fimuls
pop
sbb
and
mov
dec
pop
or
jne
mov
mov
sti
into
sub
sub
insb
jge
xor
ret
jle
test
mov
insl
xchg
mov
out
daa
js
addr16
scas
jecxz
sub
sbb
pop
cld
insb
imul
mov
pop
xor
xor
push
clc
sbbl
iret
cli
cltd
dec
xchg
aas
jmp
out
add
mov
mov
leave
clc
fsubp
sub
mov
fdivrl
adc
jp
cli
daa
ja
pop
fstl
daa
loop
jg
adc
mov
mov
shll
fwait
xchg
ror
into
jl
bound
xchg
fs
jnp
gs
in
sbb
push
loope
sbbb
mov
pop
lret
stos
add
pop
add
add
aas
adc
mov
mov
mov
test
push
cmpsb
pop
test
jg
inc
add
jbe
lea
cmp
neg
or
test
hlt
cmp
mov
fwait
mov
lahf
and
mov
imul
jne
or
cmpsb
push
add
mov
inc
cmp
outsl
inc
daa
cmpl
jns
mov
lods
push
or
addr16
sbb
inc
test
and
push
jns
ja
xor
pop
xchg
scas
add
cmc
test
ljmp
cmp
mov
addb
cs
push
or
pmaddwd
clc
lcall
imul
add
test
sbb
xchg
sbb
addr16
dec
pusha
sbb
lahf
sti
mov
jns
out
shll
inc
imul
push
cli
stc
sub
idivl
jle
jb
push
dec
dec
in
bound
sarl
test
dec
dec
js
fcomps
push
pop
loopne
jbe
cmpsb
sbb
jge
lret
sbb
xchg
loop
xchg
test
and
mov
repz
clc
sub
pop
mov
lods
push
jmp
test
addr16
rcrb
pop
or
rorb
ret
jne
mov
jmp
test
cli
sbb
cmpsb
inc
aas
mov
xor
aad
cmp
sbb
jnp
lahf
pop
mov
mov
jle
daa
mov
test
jns
cmc
mov
sti
loop
sbb
jmp
fs
call
mov
inc
mov
adc
push
jge
cmpsl
int3
or
mov
xchg
mov
xchg
mov
gs
mov
fisubl
or
es
xchg
adc
push
mov
fistpll
cmc
jge
inc
cli
cld
pop
jg
or
cmp
xchg
add
dec
mov
std
nop
aam
popa
je
scas
xlat
in
sub
test
jg
sbb
cwtl
scas
ss
cmpsb
or
das
and
cmc
imul
inc
sub
pusha
ds
push
cmpsb
out
xchg
outsl
xor
out
ffreep
es
jbe
push
cmp
testl
and
out
es
cmc
hlt
pop
xchg
addr16
je
cmp
mov
out
mov
idivb
mov
add
fdivl
rorl
mov
push
dec
cmp
fdivl
jmp
js
mov
cmp
xchg
pop
aad
sbb
push
xchg
sbb
add
pop
iret
fdivr
cmp
es
das
cmpsb
or
cli
cmp
ljmp
push
push
mov
int3
sahf
lret
jle
aas
xor
mov
lret
xchg
lahf
add
cmp
mov
push
dec
mov
jns
mov
mov
jg
arpl
push
cmp
lods
testb
cmp
test
mov
push
rep
lahf
pop
lods
pop
rolb
ja
sbb
imulb
push
adc
js
dec
in
sbb
mov
dec
pusha
or
sbb
ja
pop
mov
popa
sub
mov
ret
pop
cmpb
sbb
mov
cmp
xchg
setae
add
dec
jmp
pop
add
mov
push
mov
inc
not
aas
pop
mov
lret
scas
xchg
cmp
leave
xchg
sbb
scas
jo
cmp
ret
add
aas
ds
adc
push
inc
add
pop
enter
les
popf
dec
cmp
out
loopne
xor
sti
xchg
add
xor
xor
insl
mov
loop
ret
pop
clc
mov
mov
ja
popa
pop
loope
scas
dec
cmp
cmp
testl
cmp
jne
scas
fildll
lds
inc
sub
xor
aad
sbb
cmp
and
sub
dec
and
test
je
shlb
int3
aam
add
push
adc
mov
push
test
jg
leave
cmc
jmp
mov
pop
dec
sub
mov
fdivr
xlat
dec
leave
in
pop
push
lods
negl
inc
out
divb
stos
cmp
stos
inc
in
push
lods
arpl
repz
cmp
sbb
popa
jmp
push
dec
add
pop
stos
add
push
mov
jp
addr16
xor
sbb
lahf
sbb
or
dec
aam
popa
imul
sahf
js
push
ja
int3
xchg
insl
sti
lds
idivl
adc
xor
pop
int
add
scas
jo
or
fisttps
cli
test
stos
test
cwtl
dec
mov
and
lock
pop
push
push
fs
mov
out
pushf
mov
jae
aaa
gs
mov
jp
xchg
cmp
je
jecxz
sub
imul
push
fadd
or
data16
inc
cltd
push
push
or
jl
into
push
add
pop
add
imul
push
pop
sub
cmp
jp
inc
lret
js
sbbb
xchg
call
notb
jl
test
xor
jmp
xchg
bound
lahf
push
ss
xor
add
sub
int3
cld
pop
mov
cmc
sarl
xlat
js
roll
dec
cmp
ljmp
fimull
mov
push
sub
shll
jg
and
js
dec
arpl
mov
jl
sub
or
test
outsl
mov
sar
cmp
xchg
pusha
jnp
sbb
jbe
or
mov
cmp
aas
lds
sarb
xchg
sbb
out
jp
in
js
xchg
xor
xchg
dec
shrl
push
jae
mov
xor
lret
xchg
test
mov
inc
test
clc
mov
or
enter
cmp
sbb
or
adc
clc
pop
or
stos
popf
dec
pop
sarb
inc
aas
mov
fisubrs
add
out
and
pop
sbb
jg
mov
scas
mov
repz
cmc
xor
xchg
call
and
push
cmp
push
xchg
hlt
test
push
pop
mov
filds
scas
outsl
mov
xchg
dec
inc
test
sbb
fwait
add
push
dec
or
push
xor
int3
mov
push
sbb
cmp
adcb
mov
fstps
dec
cmp
inc
icebp
out
sub
les
sub
sbb
cmpb
test
cmp
pop
dec
pop
add
iret
and
ja
push
idivb
add
cmp
cmpsb
sahf
pushf
add
mov
pop
jp
lods
scas
adc
mov
mov
call
mov
sarl
add
test
xchg
inc
sahf
jns
push
push
push
adc
mov
push
inc
push
cli
mov
pop
test
imul
test
add
push
mov
mov
test
rcrl
std
aas
aam
lahf
and
push
fimull
jg
mov
inc
jecxz
mov
add
enter
in
dec
add
mov
mov
inc
testl
push
cmp
adc
mov
jp
aas
out
push
adcb
mov
mov
push
cmp
jecxz
sbb
push
or
add
sbb
add
inc
push
mov
dec
add
sbb
nop
outsl
rcrl
push
mov
push
mov
jg
orl
mov
mov
ds
test
jno
lods
push
mov
jb
inc
sbb
cmp
xchg
je
movb
sti
xchg
sbbb
mov
das
pop
adcl
in
mov
push
fisttpll
mov
inc
pop
pop
mov
jns
pop
fistpll
imul
scas
adc
add
scas
mov
out
test
adc
dec
mov
imul
loope
aaa
popa
xlat
pop
and
pop
xchg
test
stc
push
stos
cmp
mov
dec
sarb
and
popf
gs
cmp
stos
test
stos
lock
push
sbb
out
sbb
out
xor
xchg
sub
testl
pop
mov
push
mov
jg
inc
mov
or
pop
jecxz
aas
or
sbb
mov
jne
jg
mov
mov
cmp
test
test
cmpsb
call
pop
addl
jecxz
mov
inc
adc
subl
sbb
mov
clc
mov
stos
or
push
adc
mov
test
mov
out
imul
shlb
pop
sbb
sarl
pop
add
addl
mov
out
adc
xchg
cmp
out
mov
inc
mov
and
adc
push
push
mov
and
fiaddl
fwait
xor
sbb
xchg
inc
pushf
mov
lcall
jp
or
inc
mov
jmp
insl
lods
adc
lods
jg
shlb
cmp
test
jg
test
add
sub
adc
loop,pn
or
pop
push
lds
int
push
dec
aad
inc
push
dec
inc
cmc
cmp
psubb
hlt
and
jae
or
imul
jecxz
stos
out
push
out
lcall
stos
test
imul
iret
stos
je
jbe
mov
inc
test
jg
pusha
insl
push
push
jb
add
in
jb
inc
jno
pushf
sbb
rorl
sbb
loope
insb
cmp
loop
lcall
adc
push
loopne
dec
mov
rorb
jo
lds
inc
mov
xchg
mov
dec
push
cmp
pop
and
cmp
dec
inc
lret
sbb
rcrl
mov
or
xchg
ja
ljmp
or
mov
leave
mov
jle
les
mov
mov
or
sbb
pushf
jne
adcl
mov
in
dec
sbb
insb
mov
pushf
xlat
jbe
bound
inc
out
xchg
mov
je
test
dec
pop
andb
dec
imul
gs
test
enter
cld
mov
orb
lret
mov
xchg
mov
out
test
es
cmp
dec
dec
mov
mov
dec
or
negl
mov
mov
xchg
jb
sbb
testl
mov
mov
call
sbb
jnp
mov
or
test
std
dec
negl
fmull
or
pushf
adcb
mov
sub
xchg
or
mov
jns
cwtl
sbb
popf
sub
push
ja
arpl
jl
sti
cmp
mov
ljmp
inc
add
jle
dec
mov
fldl
pushl
sbbl
pop
das
cli
cmp
fisttps
ret
into
mov
dec
dec
pop
dec
lret
mov
cmp
cwtl
xchg
out
xchg
and
adc
sbb
mov
jmp
cmp
pop
daa
mov
shrl
inc
stos
mov
repz
adc
dec
sub
leave
jp
mov
sub
xchg
cmp
and
push
mov
outsb
call
mov
sbb
xor
or
sbb
cmp
insb
mov
test
sub
push
cmp
dec
xor
or
mov
lods
test
fists
and
sub
dec
dec
leave
lods
xchg
sti
push
cmpsl
adc
xchg
into
mov
mov
mov
test
sbb
aam
popa
add
mov
inc
mov
inc
mov
jg
inc
xor
in
pop
mov
add
test
jge
leave
or
lcall
mov
sbb
je
ret
loopne
in
push
test
test
sbb
orl
jnp
mov
sbb
repz
lahf
sti
mov
icebp
cmpsl
sbb
sbb
mov
loopne
mov
sub
inc
xchg
mov
mov
outsb
jmp
lods
xchg
mov
sti
cmpsl
jne
mov
pop
mov
inc
fisttps
mov
jmp
inc
dec
sbb
push
es
jmp
sbb
mov
push
test
js
ja
or
adc
fadd
sub
in
int3
pop
mov
lods
fcomp
adc
adc
pop
add
mov
in
adc
push
shl
jg
jmp
iret
and
jmp
mov
or
or
xchg
iret
ja
shrb
iret
sbbb
mov
popf
cmpsb
and
jl
xchg
inc
clc
push
jp
push
xchg
aam
push
and
leave
movsl
dec
sbb
cmp
and
negl
push
pop
adc
or
clc
mov
xchg
repnz
xor
scas
lea
mov
sbbb
stos
cmp
mov
std
rorl
sub
shr
adc
jnp
int3
jg
pop
ds
inc
vmwrite
xchg
sbb
dec
lods
xor
cs
out
xor
dec
add
ljmp
mov
ljmp
xor
cmpb
lahf
pop
push
in
iret
in
sti
outsl
adc
dec
lcall
mov
jl
adc
scas
js
imull
sbb
data16
xlat
mov
xchg
xchg
fistps
dec
mov
jle
inc
adc
adc
imul
sub
lret
jne
repnz
test
dec
sbb
xor
out
xchg
dec
push
xchg
push
mov
sub
je,pt
inc
negl
xchg
xchg
addr16
mov
dec
or
cwtl
adc
adc
xchg
or
sbb
inc
stc
jge
inc
sub
mov
or
cmp
mov
pop
dec
inc
pop
ljmp
dec
cli
cmp
pop
cmp
ja
sbb
mov
movsl
cmp
dec
imul
adc
cmp
clc
je
push
dec
xchg
sbb
xor
sbb
push
bound
cmp
jns
pop
inc
jge
push
fnstenv
les
xchg
mov
push
pop
jge
jecxz
test
cmp
mov
mov
js
std
push
cmp
jg
jle
cld
add
mov
mov
inc
ja,pn
adc
cmp
and
fs
mov
cltd
std
or
pop
cmp
inc
add
add
ljmp
or
mov
push
ja
sbb
jl
sbb
aas
mov
pop
ss
xchg
dec
pop
mov
sbb
out
mov
lods
dec
add
cwtl
into
or
mov
add
ja
xchg
outsl
dec
jge
jns
lods
test
jecxz
or
std
mov
lret
pop
scas
or
aam
es
sbb
test
pmaddwd
mov
loopne
inc
jg
jne
push
or
insl
sbb
pop
mov
push
sbb
movsb
dec
js
imul
cli
out
push
repz
ja
push
negb
mov
mov
mov
inc
sub
cmp
dec
push
xchg
cld
push
cmp
push
adc
test
jg
test
lds
jbe
push
or
cli
test
rcl
out
push
xchg
pop
cmp
out
iret
leave
dec
mov
push
out
stos
xchg
ss
add
sbb
ret
and
and
sub
test
inc
bound
movsb
mov
jge
sbb
jne
test
fisttps
not
data16
clc
inc
lret
ljmp
mov
test
inc
xor
mov
jnp
ret
sbb
or
xchg
cmp
dec
int
outsl
jns
mov
in
cmpsl
add
jp
jb
or
xchg
adc
loopne
shll
test
je
notl
mov
mov
pop
inc
jno
cmp
push
jge
xchg
arpl
negb
adc
push
movsb
sub
pushf
jnp
or
mov
jae
inc
xchg
adc
add
or
mov
inc
or
inc
lcall
dec
inc
dec
dec
mov
mov
pop
mov
stos
clc
mov
pop
js
jno
xchg
in
stc
push
js
insb
or
cld
sub
movsl
popf
cmp
popf
inc
add
mov
sbb
stc
cmp
dec
mov
mov
jb
sub
mov
lock
pop
jnp
dec
inc
ds
and
cli
sbb
push
mov
imul
js
adcb
aaa
sbb
adc
push
fs
jo
cmp
icebp
outsl
and
insb
or
pop
sahf
push
push
cmp
movsl
scas
and
sbb
mov
adc
fprem
lock
jmp
xor
sbb
sub
inc
dec
jb
in
lahf
mov
test
sbb
cwtl
fstps
mov
bound
test
out
pop
or
ljmp
add
fdivl
aas
cmp
loope
inc
stc
loop
insl
jle
repnz
adc
incb
dec
leave
das
push
test
add
iret
pop
lret
add
dec
add
or
or
push
sti
scas
or
inc
addb
outsl
lock
enter
outsb
dec
lods
in
aas
sbbl
rorl
add
sarl
ja
xorb
dec
cli
lds
sbbb
fs
test
mov
test
jg
dec
out
xchg
scas
out
and
cmpsl
jmp
mov
fwait
rcrl
adc
dec
cmp
or
adc
pop
enter
pop
xchg
sub
shr
in
jnp
mov
int3
pop
push
cs
in
mov
cmp
and
cmp
fildl
cwtl
outsl
into
mov
xchg
cmp
aaa
jp
adc
dec
rcr
test
cmp
andl
mov
cli
add
loopne
jp
js
adc
inc
ret
aas
insl
inc
pop
or
negl
fists
cmpl
mov
sbb
test
or
fisubrl
les
cmp
cmpsb
add
test
test
mov
xchg
adc
cmpsl
int
mov
fdivl
lcall
clc
int3
cltd
je
shll
cld
pop
sbb
sub
sbb
and
cmp
iret
jl
std
inc
clc
mov
dec
faddl
mov
test
stc
mov
sbbb
mov
dec
adc
or
lds
jmp
sbb
xchg
movsb
dec
sbb
mov
jns
ret
out
push
daa
jo
iret
lds
mov
xor
out
jns
and
mov
or
xchg
mov
dec
or
dec
cs
gs
imul
pop
inc
shll
test
popf
and
pop
sub
xor
popl
out
dec
and
fisttpll
xchg
xor
push
cmovae
mov
je
lods
adc
mov
jg
jl
pop
jle
fcomip
cmp
ja
ss
or
xchg
jmp
and
ror
mov
insb
adc
inc
cmc
push
fcompl
sti
pushf
sbb
inc
sbb
repnz
icebp
pop
pop
pop
mov
xchg
sbb
call
cmp
adc
dec
movsl
hlt
push
test
xchg
lods
ja
test
pop
test
clc
xchg
jns,pn
pop
call
mov
outsb
sbb
mov
mov
cmp
and
mul
sarl
jmp
jle
xor
mov
daa
hlt
int3
mov
jmp
js
mov
push
jmp
lcall
jo
aaa
imul
adc
leave
popf
movsl
jle
sbb
jmp
iret
dec
mov
and
mov
push
ss
stc
jns
insl
dec
clc
sbb
out
rcrl
lret
add
in
pop
dec
push
and
shlb
js
pop
adc
cmc
pop
mov
dec
add
push
jl
aam
push
sbb
sbb
and
bound
mul
into
andl
xlat
mov
pop
push
mov
pop
xchg
push
pop
cmpl
lock
cmc
push
aad
dec
pop
mov
js
push
cmp
out
call
or
sub
jbe
clc
sub
call
dec
or
enter
pop
jle
xchg
cmp
and
shll
xlat
xchg
mov
inc
mov
dec
lods
leave
notl
jno
out
loope
cmpsb
xchg
xor
sbb
push
sbb
inc
mov
jnp
sar
cmp
jns
inc
mov
jl
cld
out
cltd
push
lahf
vpshaw
in
ljmp
inc
bound
adc
inc
fcom
lret
push
jp
cmp
jl
adc
xor
popf
mov
ljmp
cmp
mov
jg
orl
insb
inc
movsl
sbb
cmp
outsl
jae
popa
popa
mov
stc
cltd
fwait
test
sub
mov
inc
ror
xchg
dec
pop
mov
jo
fxtract
call
js
popl
sbb
push
mov
ljmp
mov
cmp
xchg
testb
sub
imul
repnz
jnp
push
jecxz
xchg
sahf
jmp
jecxz
sbb
pop
dec
jnp
call
inc
dec
imul
cmc
inc
xchg
xor
les
jo
xchg
mov
lods
aam
insb
popa
lea
lret
ja
or
sbb
cmc
test
sti
jl
pop
mov
pop
xor
fcom
inc
les
inc
loope
ficoms
cwtl
lock
out
leave
push
pop
mov
push
cmp
mov
pop
jl
es
in
call
adc
dec
adc
inc
jmp
sbb
cmp
aad
or
jmp
xchg
pop
sbb
push
ja
pop
inc
leave
test
mov
jp
sahf
cmp
int
cmp
imul
clc
popf
pop
cmc
aad
inc
test
jns
es
inc
ds
mov
fisttpll
cmp
mov
fidivrs
mov
sbb
mov
jg
sbb
lret
mov
fs
mov
dec
adc
xor
popf
and
dec
jmp
loop
popa
fs
adc
mov
iret
gs
rcll
aam
mov
sub
insb
arpl
push
jns
stc
inc
iret
pushf
decb
mov
and
out
es
orl
imul
fistps
mov
or
pop
into
mov
xchg
stc
xchg
xchg
loope
inc
and
orb
or
lahf
sub
adc
jnp
or
not
iret
mov
jmp
data16
scas
stc
and
cld
cmpsb
or
pushf
pop
cmp
cmc
jno
cmpsb
push
out
mov
test
dec
cmp
mov
pop
sbb
cmpsb
jnp
mov
iret
sub
inc
out
inc
scas
sub
lds
cmp
mov
sbb
iret
mov
jo
push
or
mov
cmpsl
cmc
out
jle
inc
es
negl
test
mov
outsb
pop
inc
add
es
fildl
cmpsb
mov
fdivrl
xor
ljmp
mov
inc
test
xlat
mov
sub
jbe
sti
outsl
push
into
and
pop
shl
xor
dec
ja
sbb
cwtl
sarb
fdivrp
xchg
in
daa
add
mov
js
sub
out
jecxz
in
outsl
sbb
cmp
stos
popf
aas
mov
adc
aas
pop
jo
jmp
inc
sbb
xor
pop
mov
xchg
lahf
cmp
inc
clc
xchg
lods
dec
sub
add
fwait
sti
and
aam
fs
xchg
rcll
pop
test
lds
and
xchg
insb
or
sbb
pushl
pop
or
cmp
imul
sbb
adc
inc
jecxz
scas
leave
jl
sbb
mov
pop
pushf
rcl
mov
mov
inc
push
lret
imul
icebp
ja
dec
add
fldl
ret
pop
ret
jmp
cmp
cmp
je
sbb
lahf
pop
insb
cmp
mov
dec
mov
inc
sub
xlat
pop
dec
adc
sahf
mov
dec
pop
cmc
or
xchg
dec
iret
xchg
mov
sub
int
push
mov
stc
push
mov
vmovaps
jo
xchg
cld
sub
and
add
mov
or
or
push
ret
fsubrs
jle
cmp
or
or
out
xor
add
clc
pop
push
mov
push
mov
addr16
es
sbb
push
mov
cmp
xchg
lret
cs
cmpsb
fmul
inc
scas
xor
push
pop
cmp
fistpll
push
dec
sbb
or
jecxz
mov
sti
cmp
lds
out
daa
out
std
add
push
dec
aad
call
out
dec
and
push
sbb
add
call
push
loope
subl
pop
outsl
pop
into
negl
or
insb
lahf
out
stos
and
sub
sub
pop
test
je
xor
fcmovnb
inc
xlat
mov
add
jmp
or
lods
cmp
lret
adc
in
jl
nop
enter
call
test
sar
cmp
addl
js
pop
clc
and
or
mov
roll
dec
ljmp
push
mov
int3
mov
add
cmp
xchg
stc
popf
fs
add
jnp
shl
or
pop
cmpsl
test
int3
cmpl
jge
les
and
fcomps
das
pop
sbb
andl
push
push
fwait
inc
cmp
xchg
xor
aaa
push
lods
movsl
outsb
xchg
popf
mov
jnp
mov
mov
adc
push
cmp
mov
add
out
shll
xor
leave
mov
dec
adc
jbe
scas
push
addl
fwait
xchg
jbe
rorb
xchg
xchg
pop
dec
stc
xchg
mov
out
loopne
adc
das
imull
lret
cmp
outsb
sbb
testl
ret
vmovaps
dec
outsl
outsb
imul
sub
ret
dec
lods
sbb
jle
pop
iret
jp
rclb
sub
out
scas
push
sbb
cmp
sub
push
mov
push
push
jmp
xor
fmulp
xor
movsl
bound
sub
mov
or
mov
faddl
mov
jnp
dec
cmp
aas
sbb
fldcw
sbbl
rol
pop
stc
sbb
mov
push
mov
mov
adc
ficoml
jge
push
push
mov
cmc
pop
aas
mov
pop
mov
sbb
sub
inc
popa
jno
xor
sub
or
pop
push
ss
jae
ja
out
dec
cmp
push
sti
jle
cmp
jmp
pop
outsl
es
dec
push
sub
jp
sub
cld
outsl
hlt
cli
sbb
or
sub
iret
js
cmp
jge
test
mov
cwtl
xor
xchg
es
mov
ja
cmp
push
and
popa
pop
add
fisubrs
jle
mov
sub
or
cld
cmp
lods
or
in
add
clc
adc
out
nopl
cmp
mov
popa
and
inc
dec
mov
js,pt
ss
cld
icebp
inc
cmp
test
inc
mov
xchg
mov
xlat
lret
sub
dec
mov
inc
cli
mov
ror
clc
jg
js
pusha
stc
pop
and
mov
push
mov
mov
arpl
fstl
and
inc
pop
mov
add
jp
out
pop
imul
cmc
cmpsl
dec
cmp
push
jl
push
fldcw
pop
movsb
ljmp
jg
cli
ss
arpl
inc
iret
jle
jmp
in
xor
lahf
mov
dec
cli
xchg
sub
lret
jmp
push
mov
xchg
cmp
dec
lcall
lods
ficomps
lods
dec
jge
jecxz
dec
mov
data16
sbb
es
sbb
sbb
push
jmp
cmc
adc
mov
mov
sbb
lods
fs
mov
cmp
ret
sbb
cmp
inc
js
dec
xchg
jns
xchg
cmp
cmpsb
sbb
pop
mov
test
shll
jae
incl
arpl
or
mov
je
shlb
mov
dec
pop
xchg
pop
xor
mov
mov
lahf
cld
mov
aad
cltd
sbb
xchg
pop
add
addb
xchg
and
mov
sub
mov
imul
jge
pop
mov
cs
mov
and
enter
movsb
incl
shl
daa
mov
clc
ljmp
das
das
cmp
ljmp
aam
push
or
js
test
iret
bound
adc
cmpsl
push
dec
sbb
leave
rorl
ficompl
out
cmp
mov
push
test
lods
xchg
xchg
xor
inc
pusha
mov
push
imul
vpavgw
xchg
xchg
mov
scas
push
and
aaa
inc
in
sbb
ss
clc
inc
inc
add
imul
call
mov
add
push
lock
aas
sub
pusha
icebp
gs
or
js
adc
mov
cltd
in
or
inc
or
icebp
arpl
pop
add
frstor
adc
daa
lahf
jns
or
or
in
mov
pop
les
push
pop
xor
and
sbb
popl
scas
aas
stc
mov
inc
ja
rcrb
xchg
dec
cmp
adc
mov
fistl
daa
decb
or
sub
sbb
sub
dec
sahf
nop
or
test
jo
ret
test
push
test
ds
adc
sub
in
loop
icebp
sbb
dec
mov
sti
lods
jp
pop
xor
mov
push
push
pop
push
rorl
js
pop
iret
mov
mov
inc
pop
sahf
or
push
mov
push
test
aam
xlat
sti
xchg
cmp
ret
xchg
dec
adc
push
add
jle
pop
push
arpl
mov
sbb
fneni(8087
jnp
mov
jns
add
mov
js
mov
dec
imul
out
das
cmp
imul
nop
pop
ret
sub
or
push
push
pop
and
test
leave
sbbl
push
push
add
lahf
iret
scas
push
fimull
scas
xorl
inc
test
push
cmpsb
sub
push
test
cmpsl
shl
xchg
cmp
das
xor
imul
cmc
push
and
sbb
mov
jns
movsl
xor
cmp
movsb
insl
cmc
stos
arpl
xchg
sbb
cmp
hlt
sbb
mov
gs
sbb
lahf
fsubl
adc
mov
iret
negl
sbb
mov
inc
adc
pop
ljmp
aaa
ja
cmc
in
rolb
ret
out
xor
mov
pusha
ljmp
or
pop
out
pop
cmp
xchg
into
xchg
mov
mov
outsl
sti
cli
jmp
dec
cmp
imul
xchg
les
ja
adcl
cs
adc
cmpsl
pop
sbb
pop
xchg
into
xchg
cmp
add
xor
leave
stc
sbb
pop
mov
cwtl
inc
adc
jmp
mov
stos
pop
scas
test
aad
adc
jo
xchg
movsl
xchg
sti
or
inc
subb
jle
push
sbb
or
mov
sar
imull
jnp
das
sbb
push
negb
in
and
lds
push
add
mov
cli
xor
push
cld
leave
push
pushl
sub
aas
addl
int3
fdivl
push
filds
scas
pop
or
push
popf
ret
fistps
test
adcl
adc
pop
xor
div
cmpl
sub
lret
rorl
notb
add
iret
xchg
cmp
xchg
xorl
add
mov
mov
insb
sbb
inc
imul
sbb
add
scas
lahf
xchg
mov
mov
inc
jnp
loop
stos
sub
dec
test
ja
outsb
mov
or
or
jmp
pop
jmp
insb
sub
mov
int3
push
add
pop
or
and
fwait
and
into
jne
mov
or
dec
stos
out
std
sub
cmp
jp
jo
out
sbb
cmc
cmpsl
shld
sub
cmp
pop
out
cmp
iret
notl
fucomi
and
jne
ja
adc
cmpsb
cmp
xor
cmp
ds
in
xor
stc
fs
jle
cmp
xchg
out
sarl
mov
push
stos
arpl
jle
xchg
sub
inc
repnz
push
addb
cmp
lret
stc
pop
iret
push
or
out
out
out
xchg
fld1
or
mov
cmp
inc
mov
pop
arpl
mov
mov
mov
cmp
mov
dec
jl
popa
mov
push
cld
mov
cmp
inc
sbb
jle
dec
pop
mov
pop
cmpsl
ja
ret
outsb
cmc
ret
iret
push
xchg
int3
add
and
nop
outsl
dec
sbb
cmp
push
test
sub
fs
xchg
mov
mov
cmp
out
leave
ret
test
dec
pop
iret
cmpsb
mov
rorl
adc
daa
xor
idivl
fucomip
mov
jle
add
into
xor
push
and
inc
mov
cli
movsl
xchg
frstor
pushf
xchg
mov
jg
pop
in
xlat
cmp
clc
cltd
cmp
mov
cmp
in
xchg
fs
daa
pop
xchg
add
insb
cmpsl
cmpsb
dec
pop
fs
lahf
adc
test
push
das
scas
lcall
or
dec
inc
aas
mov
mov
daa
push
jae
in
add
icebp
jmp
enter
sub
std
add
cmp
lock
dec
jmp
inc
jl
ljmp
mov
adc
addr16
test
lods
xchg
dec
inc
and
pop
lret
inc
or
imul
pop
dec
inc
scas
push
clc
jecxz
aam
sub
sbb
daa
dec
clc
pop
outsl
jns
cmp
push
jg
pushl
xchg
jae
mov
lret
inc
jno
or
add
mov
lock
cmpsb
shll
jmp
pop
add
jp
add
insl
inc
test
and
test
jnp
in
js
jecxz
push
jg
incb
mov
mov
addb
ljmp
test
jbe
jns
scas
arpl
js
xchg
insb
insb
ss
pop
xorl
dec
add
jle
rcrb
mov
mov
out
xor
sahf
or
xchg
push
mov
push
daa
sub
xor
out
jns
shll
sbb
outsl
test
jmp
cmp
mov
orl
rep
jp
mov
sbb
call
movsl
push
mov
imul
xor
cmc
sub
cmpsb
cmp
nop
jge
jns
adc
fwait
mov
stos
jno
xchg
mov
mov
pop
sbb
sub
lock
bound
cmp
inc
outsb
lret
add
mov
addr16
cmp
lret
divl
sbb
pop
sub
into
ljmp
ret
push
leave
adcl
jge
inc
sbb
dec
ret
sbb
mov
pop
jle
adc
ret
mov
and
adc
mov
into
or
stc
cmc
jo
cmp
sbb
mov
unpcklps
outsl
mov
bound
push
push
aaa
jne
xor
jae
sbb
mov
or
lahf
mov
mov
or
xor
jl
mov
mov
cmpsl
add
pop
xchg
arpl
jns
cmp
mov
mov
lret
push
test
xchg
pop
inc
int3
iret
or
push
sub
dec
cmp
mov
mov
iret
sub
verr
je
push
add
xchg
xchg
mov
jmp
test
ds
xchg
and
test
xor
test
insl
jmp
push
addr16
sub
inc
mov
mov
outsl
adc
pop
mov
sbb
ljmp
repz
mov
sbb
xchg
mov
jp
jo
clc
idivl
sbb
jnp
lds
negl
divl
test
add
cmpsl
pop
or
push
mov
rolb
xchg
adc
imul
mov
out
cli
fs
xchg
inc
fcmovnb
leave
dec
mov
xor
shr
std
add
add
lahf
or
jb
mov
andb
repz
mov
cld
dec
test
and
outsl
and
lods
out
jl
mov
inc
sbb
test
pop
push
sbb
sarl
andb
dec
lods
in
popf
ja
or
and
sub
ss
movsb
fdivrl
mov
mov
xchg
sub
add
xchg
orb
and
pop
sbb
jge
sub
push
negl
add
insb
test
jge
fiaddl
clc
inc
cmp
mov
fistl
jae
subb
fsubrp
mov
xchg
ljmp
mov
sbb
ret
xchg
xchg
push
adc
test
adc
leave
cmp
mov
push
popf
out
lods
jnp
lods
push
mov
mov
mov
mov
xchg
mov
add
adc
je
out
popa
imul
out
mov
mov
push
in
mov
and
sbb
mov
mov
or
ss
fwait
add
inc
mov
mov
inc
movsl
dec
xor
js
mov
les
imul
cmp
sub
inc
stos
lock
cmp
cld
roll
mov
sub
push
inc
mov
test
movb
ja
xchg
loope
sub
mov
cmp
pop
sub
dec
enter
push
fwait
ljmp
dec
xlat
cmp
shlb
sbb
or
dec
pusha
adc
cmp
gs
sub
xchg
mov
inc
xor
scas
mov
outsb
push
or
push
add
fldt
fdivrl
jl
xor
jle
adc
mov
jo
sar
mov
mov
mov
inc
cmp
cwtl
mov
out
push
cmp
pop
cmp
adc
xchg
adc
lds
dec
mul
mov
mov
mov
fwait
outsl
arpl
int3
mov
mov
jmp
mov
and
jmp
or
jo
sbb
mov
addr16
or
cmp
repz
mov
mov
nop
imul
sti
add
dec
adc
mov
inc
js,pt
pop
outsl
pop
addr16
loop
add
mov
testb
mov
inc
pushf
test
xchg
in
out
js
shl
clc
jg
and
mov
jmp
sub
cmp
mov
push
movsl
paddusb
mov
aad
pop
xor
pop
inc
lret
mov
adc
add
mov
test
out
fsubs
adc
mov
mov
aas
xchg
xchg
cli
sbb
sub
jns
xchg
push
std
movsb
jnp
test
cmp
test
mov
mov
dec
xchg
mov
mov
mov
imull
lock
mov
ja
pop
insb
cld
test
xor
fs
ret
loop
pop
hlt
js
notb
sbb
cmp
add
adc
je
sahf
fidivrs
or
or
out
cwtl
sbb
mov
cld
aas
stos
or
ja
psubw
popf
test
int3
xchg
idivb
sti
push
sbb
adc
and
pop
pop
cmpsl
ja
addr16
dec
mov
mov
test
add
push
cltd
jmp
repz
push
lahf
cmp
hlt
mov
sub
lods
in
idivb
testl
imul
and
jns
xchg
xchg
jnp
or
pop
mov
sub
das
stc
xchg
js
push
cmove
out
mov
gs
fsub
mov
push
jle
add
push
inc
js
cld
xchg
dec
jns
jge
ss
adc
cwtl
xchg
iret
push
dec
enter
in
xchg
clc
jmp
ret
adc
cmp
mov
cmp
ljmp
jmp
adc
or
in
push
mov
pop
sub
adc
imul
sbb
sub
add
cltd
cmc
sbb
push
scas
mov
cmp
xchg
fstpt
dec
stc
pop
lret
xchg
adc
insb
pop
mov
stc
adc
cld
loope
pushf
clc
pop
fwait
je
dec
mov
mov
jo
icebp
insb
addr16
jmp
mov
or
sti
sub
repz
xchg
xchg
addr16
cmpsl
sbb
fildll
mov
jo
mov
imul
xorl
out
imul
jecxz
aas
xor
clc
lahf
mov
mov
ret
fs
inc
adc
xor
mov
jg
sbb
push
in
push
jno
sahf
dec
imul
pop
call
fsts
add
push
mov
mov
xchg
test
ss
jp
xchg
ret
out
mov
in
stos
cld
inc
ds
shr
aas
daa
xor
inc
push
mov
repnz
jmp
pop
insb
flds
sbb
mov
nop
shrb
xchg
daa
fcmovnu
ss
jl
test
mov
stos
pop
pusha
or
or
lock
xchg
jae
scas
jbe
sbb
sbb
sbb
xchg
push
push
imul
rorl
ljmp
xchg
or
mov
fdivp
jbe
addr16
stos
ret
mov
ret
dec
cs
sub
pop
popa
dec
mov
into
fnstcw
nop
jle
jp
dec
pop
out
sbb
outsl
divb
inc
and
jle
sbb
fs
js
jnp
fwait
cmp
sbb
in
xor
test
bound
test
and
xor
and
mov
push
xor
arpl
nop
mov
dec
fs
pop
mov
or
jp
mov
cli
inc
loope
pop
ja
gs
sub
sbb
sbb
pop
xchg
pop
cld
dec
das
adc
xchg
sbb
mov
fimuls
xchg
sbb
dec
hlt
fidivrl
pusha
stc
sbb
adc
jg
mov
xchg
xlat
into
mov
loop
out
stc
aad
dec
adc
inc
sbb
or
dec
xchg
jns
das
sbb
pcmpgtw
xchg
ret
pop
adc
loopne
and
outsl
mov
pusha
pop
into
icebp
sbb
push
sub
pop
sub
fwait
unpckhps
psrlq
fisubl
and
cmp
test
shlb
leave
lds
lcall
imul
lea
fs
inc
pop
inc
aaa
xchg
dec
mov
mov
mov
xchg
cmpsb
call
adc
sbb
jns
cmc
cmpsb
mov
ja
mov
adc
sbb
rclb
out
ds
inc
or
stos
idivl
arpl
mov
inc
xchg
mov
cmp
sbb
pop
push
pop
mov
outsb
jnp
push
push
cmpsl
mov
ja
ret
mov
mov
negl
sbb
jg,pt
icebp
in
cmp
sarl
cmp
pop
divb
or
dec
stc
sbb
or
add
in
cli
xlat
xchg
ds
pop
push
mov
and
sub
test
sti
sti
and
mov
or
or
and
sub
inc
cmc
jg
inc
addl
jnp
ficompl
leave
sbb
lds
cmp
cmp
lea
cmp
cmc
xchg
or
test
loopne
pushf
pop
test
sahf
sub
hlt
xchg
dec
cmp
jl
cmp
inc
fchs
sbb
test
jge
sub
xor
cli
mov
adc
dec
dec
add
or
xchg
mov
sbb
dec
sub
lret
cmp
mov
push
mov
lcall
loope
setbe
cmpsb
daa
sarb
and
ja
jg
inc
lret
xlat
es
sti
pop
movsl
xor
sbb
fadd
sub
fimuls
mov
mov
pop
push
add
inc
cmp
in
jle
add
clc
mov
dec
xchg
adc
data16
pop
cwtl
out
out
cmp
dec
inc
daa
jns
xchg
rcll
mov
add
xchg
stc
mov
pop
cltd
repnz
and
fwait
ljmp
bound
arpl
mov
adc
loope
dec
cmpsb
stos
js
ja
add
or
sti
mov
lahf
or
push
fwait
mov
or
mov
mov
shll
pop
outsl
add
das
pusha
cltd
pushl
fmull
test
std
clc
test
mov
jae
jg
loop
push
sbb
std
mov
sbb
push
jge
adc
rolb
imul
xchg
cmp
mov
iret
lret
sti
or
fmuls
cmp
enter
fadd
aaa
lahf
shr
jle
mov
cmc
les
sub
xchg
jnp
sbb
ss
daa
jns
loop
cmp
cwtl
mov
xchg
lods
cltd
out
dec
pop
cmc
cld
jns
clc
adc
negb
dec
sti
cmp
divl
inc
loope
stc
fmulp
push
scas
cmp
pop
mov
ljmp
ja,pt
add
push
pop
sbb
push
orb
push
outsb
cmp
call
enter
std
jp
mov
xor
inc
inc
out
add
and
xor
sbb
adc
fwait
mov
imulb
add
cmp
cwtl
xchg
mov
out
mov
test
mov
push
popf
adc
movsb
jne
ds
arpl
out
ds
sti
loop
push
fldl
push
aad
xchg
push
sbb
jl
ficomps
jl
jmp
mov
fs
mov
nop
lret
jns
xchg
arpl
add
xorb
fimuls
adc
pop
cltd
orb
mov
or
int3
orl
jns
cmp
adc
out
sbb
gs
and
mov
ret
imul
jns
mov
add
sbb
testl
pop
xchg
or
sbb
lods
in
xchg
push
pop
or
or
out
test
add
callw
outsb
mov
nop
int
sub
or
daa
scas
mov
jnp
cmp
sbb
pop
sbb
sahf
mov
ds
push
jmp
icebp
mov
xchg
pop
cmp
scas
test
inc
ljmp
cmp
loope
fidivs
loope
mov
sarl
test
jl
add
jnp
shl
loop
jne
test
hlt
loop
push
sbb
ljmp
push
divl
mov
jle
or
mov
sub
in
andl
xlat
or
mov
or
xchg
inc
push
cmp
fisttpl
fistl
sub
mov
jg
es
out
lock
test
rcrb
add
jno
cmp
addr16
jmp
nop
aaa
gs
repnz
push
xchg
movsb
cmp
js
push
mov
sub
xchg
push
sbb
movsl
sbb
xchg
push
cmp
shll
outsb
dec
pushf
icebp
push
cmp
aas
pop
xor
not
outsl
cmpsl
cmc
inc
sarb
inc
push
lock
repnz
or
jnp
addb
dec
ljmp
pop
lahf
fsts
sahf
xchg
mov
adc
jnp
push
sbb
sti
xor
addr16
adc
loop
mov
scas
sbb
push
stc
jne
sub
add
push
jmp
ret
aaa
daa
out
aam
call
mov
add
ja
cltd
movsb
int3
add
jmp
jns
cmp
mov
je
test
fists
dec
mulb
push
xchg
into
xchg
cmc
arpl
pop
sarb
fcomi
mov
icebp
or
sub
ret
sub
adc
fsubl
lcall
pop
dec
dec
fsubs
mov
scas
cmp
lcall
fldenv
pop
jmp
lea
stos
jo
into
pop
mov
xchg
lods
pop
mov
addr16
pop
sti
lahf
das
aad
add
dec
pop
inc
das
pop
push
xchg
lcall
jnp
out
inc
les
nop
hlt
stc
outsl
inc
pop
outsl
aas
or
dec
cli
shrl
jge
jp
jo
sti
cmp
or
xchg
pop
cmc
dec
mov
lds
adc
sti
pop
icebp
adc
aad
loopne
dec
test
pop
pusha
ja
push
jb
fnstenv
fs
mov
ljmp
icebp
sub
jmp
xchg
push
pop
xchg
xor
out
aas
inc
lds
daa
sbb
aad
test
shl
and
ljmp
inc
lock
leave
iret
mov
imul
gs
inc
in
xchg
cs
cmp
add
imul
adc
js
cmp
test
in
cwtl
jge
sub
inc
pop
rclb
xor
sbb
cmp
les
cmpsl
sub
pop
push
outsl
enter
mov
ficomps
xlat
ljmp
ret
fcmovnu
dec
push
jmp
mov
xchg
or
mov
or
out
cmp
in
cmpsl
and
push
dec
pop
pop
fisttpl
fisubrl
push
xchg
push
addb
loopne
dec
jmp
cs
pushf
inc
aad
and
test
cmp
pop
or
jae
rolb
xchg
push
mov
insl
inc
int
jae
ljmp
mov
insb
sbb
xchg
sbb
cs
adc
push
mov
js
in
addr16
arpl
push
ja
push
fldenv
jae
mov
out
aam
xchg
fldcw
cmpsb
push
movl
cmp
imul
and
es
add
xor
gs
fstpt
jbe
shll
test
iret
pop
sbb
in
or
jne
insb
mov
cmpsl
int
mov
mov
je
cmp
out
ret
popf
test
pusha
ja
es
mov
sbb
mov
dec
pop
mov
je
add
cmp
lahf
mov
loop
js
push
fwait
xchg
pop
mov
imul
and
data16
iret
xchg
daa
xchg
orl
xchg
push
or
lahf
adc
cmp
iret
xor
fiaddl
xchg
notb
inc
cwtl
add
test
mov
pop
sar
adc
mov
add
inc
xchg
sbb
and
mov
rorb
push
adc
test
fcmovb
imul
aaa
cwtl
fwait
ja
lret
jcxz
dec
ljmp
push
out
popf
cmp
mov
in
fstpt
repz
cmp
movsl
inc
dec
sub
int
fisubrl
inc
rcr
cli
les
push
lock
jmp
sub
sbb
dec
add
popf
xchg
lods
bound
xchg
test
std
pop
mov
and
dec
add
or
ljmp
adc
push
mov
adc
insb
inc
sbb
pop
cld
xchg
push
or
int3
dec
fs
dec
sbb
lcall
jmp
sti
xchg
shlb
mov
lcall
mov
inc
pop
add
jecxz
shlb
pop
loopne
pop
and
cld
popa
cmp
or
ds
or
lret
ljmp
push
insl
sbb
loope
fdivrs
ja
sbb
outsb
scas
clc
clc
stos
mov
jmp
jge
pop
bound
push
jnp
mov
dec
mov
iret
jne
or
dec
orb
xchg
xor
jl
dec
or
ror
jg
cmpsl
mov
mov
xor
pop
test
jp
push
divb
fdivs
cwtl
xchg
imul
adc
cmp
cmpsb
mov
cwtl
cmp
clc
jnp
mov
sbb
inc
jns
mov
sub
xor
pop
out
mov
xchg
cmp
sbb
cmpsl
sbb
aas
scas
mov
and
add
add
cmp
add
negb
push
cmp
lahf
jno
sbb
inc
or
push
push
daa
fwait
or
aaa
cmp
mov
xchg
std
nop
pop
dec
xchg
js
jmp
cmp
mov
enter
jl
js
adc
pop
fmuls
ret
or
pop
xor
inc
add
and
jmp
sti
stos
out
jmp
xchg
lahf
xorps
push
dec
dec
mov
imul
fimuls
inc
add
cmp
inc
test
xchg
or
insl
push
cmp
subb
sub
or
cmp
iret
mov
test
xchg
cmp
dec
fdivrl
imull
test
dec
sbb
mov
les
push
stc
jp
cmp
addr16
xor
push
mov
jg
filds
sub
ds
mov
xor
xchg
push
mov
push
dec
inc
cmpsl
mov
fdivs
xlat
pusha
and
add
pop
test
loop
sub
std
jno
cltd
test
lret
lds
je
std
or
stos
cmp
mov
dec
loop
mov
jg
and
popa
hlt
imul
lods
mov
das
fstpt
repz
mov
push
xchg
lret
xor
bound
mov
std
or
jge
sbb
cmp
lds
jns
cmp
xorb
or
push
adc
push
fwait
adc
mov
ljmp
cvttps2pi
mov
pop
or
mov
scas
lcall
dec
ficoml
js
mov
fiadds
out
pop
or
add
mov
pop
hlt
cld
cmp
mov
push
arpl
pop
stos
jnp
repnz
aad
add
adc
dec
aas
xchg
icebp
nop
rcrl
mov
dec
lods
in
jmp
jecxz
das
add
mov
sbb
jne
jmp
repnz
fidivrs
dec
push
dec
jmp
cmpl
stc
bound
std
dec
arpl
imul
scas
jge
mov
sub
sti
das
outsb
adc
pushw
add
fs
hlt
imul
dec
add
inc
xor
mov
xchg
enter
adc
test
sbb
cli
std
sar
sub
subb
in
arpl
cltd
pop
xchg
add
ja
js
sbb
ja
mov
push
mulb
loope
addl
mov
inc
dec
jg
mov
ds
outsl
inc
jne
sti
mov
shll
stos
jmp
push
or
sbb
ficompl
mov
mov
or
adc
xchg
test
xor
mov
push
xor
cmp
pop
pop
out
mov
lahf
and
hlt
icebp
dec
or
inc
sti
sub
sub
cmp
or
sbb
bound
enter
sbb
inc
pop
cmp
test
cmp
cmc
outsb
bnd
sub
iret
and
push
movsl
rolb
jmp
les
dec
imul
repz
fidivrl
mov
insb
arpl
mov
hlt
jnp
aas
int3
push
add
popf
pop
push
pop
inc
imul
sbb
repz
shl
sbb
xchg
stc
clc
add
cmp
adc
insb
cmp
xor
popl
call
cwtl
add
mov
fldl
inc
xchg
pop
xchg
jo
and
cmc
gs
in
push
nop
cmp
mov
sbbl
pop
inc
add
mov
inc
jl
push
push
xchg
xchg
call
js
pop
test
sbb
sub
inc
lcall
cli
mov
xchg
cli
mov
and
fmuls
and
subb
sbb
adc
dec
int3
push
scas
cltd
out
or
sub
add
sahf
xchg
xorb
or
xbegin
in
out
fwait
out
adc
clc
mov
mov
mov
scas
cmp
xor
xor
inc
add
cwtl
mov
int3
movups
loop
pop
push
out
and
pop
test
cmpsl
dec
les
xchg
stc
negl
ds
xor
pop
pusha
or
cmpsb
sbbb
push
or
out
sti
or
add
fstpt
nop
iret
imul
inc
addl
jnp
and
pop
mov
add
jg
mov
cmp
push
cmpsl
inc
mov
enter
setae
add
pop
sahf
arpl
ljmp
pop
out
andl
cmp
cmp
daa
lock
mov
dec
and
jp
aas
mov
cmp
pop
cmp
imul
cs
jmp
pusha
cwtl
sbb
push
ljmp
jl
or
rclb
mov
das
fwait
repz
pop
dec
push
cli
cmc
sbb
mov
jo
mov
jmp
loope
or
cwtl
fdivrs
xchg
test
or
addr16
push
or
cmp
mov
or
inc
sub
stos
pop
and
adc
mulb
mov
sbb
fldcw
lret
cmp
sub
adcb
mov
dec
lcall
test
mov
dec
jnp
push
add
add
mov
into
adc
xor
sbb
jne
mov
pop
icebp
jne
xchg
push
ja
mov
bound
test
sahf
rcr
insl
pop
sub
fcom
arpl
sbb
fwait
pop
rorl
pushf
std
add
js
jecxz
sbb
movsb
dec
inc
sub
jle
lahf
xchg
push
cmp
mov
aad
pop
cmp
neg
popa
rorb
inc
dec
das
rorb
xchg
movsl
jg
mov
pop
mov
dec
add
les
mov
in
push
sub
inc
pop
clc
shl
lcall
faddp
xchg
les
jns
xlat
push
xchg
clc
jge
cmp
xchg
sbb
out
jbe
mov
mov
cmp
lods
mov
mov
jns
mov
push
mov
cmp
ja
jnp
push
sub
xchg
test
test
sbb
in
adc
jecxz
fwait
xchg
inc
lcall
mov
fst
gs
cmpsb
repz
popf
stos
mov
sub
aaa
popa
popa
dec
clc
jns,pn
xchg
jns
jp
xor
mov
cmpsl
push
or
cmp
jmp
aaa
dec
lock
push
fstps
xor
push
pop
addb
outsb
stos
ss
pop
sub
stc
sti
jl
mov
dec
sub
xchg
push
stc
ja
daa
xchg
jle
xchg
mov
sbb
mov
jmp
xchg
out
popa
xor
xchg
stos
or
mov
cmc
in
sub
fcoml
jnp
daa
icebp
stc
daa
shrl
adc
fstpt
clc
or
inc
sti
mulb
mov
and
jle
lods
push
mov
sub
mov
xor
mov
inc
jge
sbb
dec
fwait
cwtl
inc
lea
cmp
cmp
aam
sub
sub
cli
add
test
cmp
iret
cmp
push
mov
dec
sahf
cltd
pop
ret
stos
or
in
ss
jnp
enter
and
sbb
js
decl
cmp
mov
std
test
out
cld
inc
sahf
jnp
dec
sti
sbb
cltd
testb
mov
clc
cmp
jns
in
mov
mov
jb
ja
xor
and
out
jp
outsl
xor
sbb
repz
cmpsl
sub
pop
mov
add
call
xchg
dec
fildl
test
jmp
mov
inc
push
int3
test
add
push
rcll
roll
popa
xor
push
push
test
ljmp
mov
dec
push
inc
aam
lods
xor
push
fcoml
popf
push
jmp
pop
sbb
adc
lcall
dec
imul
loopne
xlat
iret
lock
mov
dec
movsl
jno
fldenv
mov
mov
out
inc
push
pop
adc
lea
mov
add
pminsw
push
sbb
sub
movsl
cmp
inc
jbe
mov
or
ffreep
mov
cmp
add
bound
adc
dec
inc
cmp
enter
call
ficompl
test
mov
inc
sti
into
imul
push
mov
in
cltd
and
insb
aam
push
add
je
mov
dec
shrb
cld
sub
xchg
push
pop
push
push
sbb
or
dec
test
fidivrs
icebp
jecxz
jp
stc
les
bound
jge
mov
xor
popf
clc
sub
inc
and
out
loope
jno
scas
inc
jbe
sbb
das
inc
sub
xchg
repnz
imul
icebp
jns
adc
daa
inc
test
xchg
cmp
dec
or
sbb
jnp
push
ss
mov
sbb
push
mov
sbb
jnp
outsb
out
sbb
push
jnp
pop
mov
nop
sub
sbb
jnp
popf
popl
sbb
nop
lods
cmp
cmpb
pop
adc
mov
or
lcall
cltd
ss
bound
cld
jmp
test
jl
xchg
cltd
ss
cmp
les
scas
es
mov
int3
in
push
and
std
push
bound
adc
add
mov
bound
stc
imul
bound
loopne
into
inc
xlat
cmp
add
movaps
sub
stos
dec
mov
push
add
or
mov
adc
imul
sarl
xchg
mov
inc
inc
lcall
add
xlat
mov
pusha
loop
jg
adc
jb
jnp
mov
mov
jns
mov
sarl
mov
sbb
jns
mov
xor
xchg
or
inc
cmpl
sub
xorb
mov
cmc
push
xor
push
notb
sub
ss
add
push
mov
out
andb
dec
xchg
mov
or
dec
dec
mov
cmp
or
mov
or
not
dec
cs
push
cld
stos
mov
out
xchg
popf
pop
mov
sub
fwait
jnp
test
lods
test
xchg
loope
ficomps
cmp
test
aaa
mov
leave
mov
cmp
add
into
push
sub
cltd
imul
leave
lds
subl
fldcw
and
jp
pop
sahf
lods
arpl
cwtl
mov
scas
addr16
add
sub
cmp
push
shlb
lods
add
daa
mov
out
inc
or
test
scas
fsubs
mov
mov
rcrb
xchg
test
loope
jmp
mov
shl
push
out
mov
inc
dec
popf
sbb
xlat
cmpb
xchg
fstps
push
sbbl
stc
dec
xchg
cmp
or
mov
cmc
sbb
mov
mov
fmuls
push
mov
mov
mov
divl
aam
xchg
or
xor
ds
mov
push
inc
mov
and
add
aam
shr
sarb
jle
inc
or
ffree
sub
cmc
mov
es
cli
ss
xor
and
pusha
xor
pushf
cmp
lods
rcll
enter
sub
stc
push
xor
aaa
pop
hlt
mov
dec
enter
cld
lcall
das
sarl
fcmovb
je
idivb
icebp
pop
pop
jns
es
clc
imul
addr16
ss
mov
sbb
mov
ret
sbb
push
call
sub
jl
xchg
pop
or
push
fistl
cmpsb
cmp
rolb
mov
in
cmpsl
xor
imul
sbb
sbb
mov
adc
stos
inc
jmp
clc
clc
ja
push
jg
or
mov
sti
pop
dec
loopne
rcll
shlb
jno
scas
mov
int3
xchg
add
inc
stc
mov
cld
ds
mov
stos
cwtl
adc
lods
pop
into
lcall
sahf
pop
sub
xchg
cli
sbb
mov
add
and
xor
clc
mov
insb
pop
cmp
loope
cmp
outsl
fdivr
push
adc
addr16
out
imul
andl
pushf
sbb
js
cli
popa
or
cmp
or
mov
xchg
sub
jle
xor
lcall
push
jge
cmpsl
shlb
push
clc
inc
test
push
and
mov
dec
mov
testl
mov
inc
imull
cltd
adcl
imul
les
shl
push
add
push
mov
loope
dec
mov
jmp
push
cld
and
fs
cmp
pop
jns
mov
outsl
jne
dec
in
jnp
cmp
push
loope
xchg
xchg
notb
sbb
int3
adc
fwait
push
sbb
lods
pusha
add
aad
sub
xchg
in
cmp
das
inc
lahf
dec
callw
ds
cmp
jle
xor
xor
test
insb
loopne
jns
shl
add
xor
push
js
test
test
jno
lds
cmp
js
cmp
jg
push
push
movsl
push
int3
iret
inc
out
sub
out
adc
sbb
das
sahf
or
insl
inc
cmp
insb
or
sub
and
jne
xor
and
cmc
mov
outsl
es
and
nop
ficompl
pop
sbb
ss
push
push
push
mov
loop
push
in
mov
mov
lock
adc
dec
int3
hlt
test
jmp
test
mov
fidivl
jb
mov
mov
or
push
push
loopne
cmp
fcompl
push
out
jnp
cmpsl
inc
lret
cmp
sub
sub
xlat
fildl
or
out
dec
jmp
ret
inc
adc
sti
outsl
mov
pop
mov
pop
push
push
xchg
cmp
rclb
or
mov
xchg
rolb
jb
cltd
mov
cld
mov
test
sahf
outsl
xchg
xor
ror
pop
jge
inc
mov
test
popf
pop
leave
cmc
call
dec
inc
push
jge
aas
mov
pop
dec
cmp
cli
or
adc
dec
adc
push
ds
xor
sbb
cmp
test
lea
cmp
andb
cmp
mov
add
movsb
int3
out
ss
mov
test
adc
cmp
lahf
data16
ja
sbb
jb
jp
adc
ds
dec
push
loop
gs
xchg
mov
lret
mov
daa
jg
mov
data16
cmp
mov
fmulp
pop
out
xlat
xchg
mov
add
cwtl
pop
sbb
pop
dec
jbe
shll
mov
cli
jmp
mov
mov
daa
mov
push
inc
push
fs
pop
pop
mov
dec
popa
je
cmp
dec
cmp
daa
lods
add
loop
data16
inc
mov
lea
mov
popa
fnstsw
cli
dec
stos
xor
imulb
leave
or
or
rorb
cmp
lea
dec
orb
fcompl
dec
cli
dec
xor
test
rcr
pusha
dec
adc
pop
addr16
faddl
dec
lods
insb
mov
movsb
lcall
outsl
gs
arpl
sub
mov
jmp
test
dec
es
outsl
mov
xor
dec
jmp
loop
sbb
enter
sbb
jnp
xchg
pop
test
ss
xorl
fwait
subb
adc
cmp
addr16
cmp
sbb
sbb
test
mov
stos
divl
jmp
mov
es
jecxz
scas
je
add
push
mov
fnstenv
imul
push
or
ret
loope
mov
test
fiadds
imul
adc
inc
pop
ljmp
stos
cwtl
inc
repnz
or
ret
jo
inc
pop
jge
inc
xchg
loop
add
int3
nop
jge
sub
mov
jbe
mov
outsb
pop
ss
lret
jge
fstl
jbe
jg
pop
insl
mov
cmp
adc
icebp
fmul
jnp
cwtl
mov
dec
out
sub
scas
adc
or
outsl
lret
fdivr
jo
mov
mov
gs
adc
push
sub
xchg
or
cmp
add
mov
pop
jnp
loope
or
fs
sbbb
cmpsb
cmp
test
inc
and
jg
sub
call
push
cmpsl
fsts
in
shll
add
sbb
ss
pushf
mov
mov
cmp
xor
mov
sbb
jb
push
leave
mov
aas
das
pushw
test
fsubr
or
imul
inc
jo
jnp
jb
orl
scas
adc
jl
pop
test
clc
dec
out
push
in
movsb
adc
cmp
xchg
sbb
mov
jb
cmp
push
xor
add
mov
xor
pop
push
dec
jmp
mov
pop
stos
out
data16
jle
sub
jb
mov
insb
cmp
sbb
addr16
pop
cmp
pop
cmp
lret
pop
add
dec
ja
cmpsl
into
jnp
and
mov
je
mov
pop
jmp
pop
lods
mov
push
addb
cmc
and
mov
test
jle
stos
aaa
mov
addr16
aaa
movl
or
fists
mov
adc
mov
call
dec
xchg
mov
aas
ret
add
inc
iret
negl
out
xchg
je
test
add
cmpsb
pop
cltd
mov
sahf
push
jo
inc
imulb
cld
test
pop
ret
int
pusha
dec
cli
out
outsl
fwait
inc
adc
rcrl
and
test
sbb
push
fmull
movl
ja
mov
lahf
and
mov
cmp
mov
xchg
push
daa
in
push
fucompp
push
dec
rcrl
in
je
xor
mov
cltd
iret
shll
test
jle,pn
arpl
insl
hlt
jmp
testl
or
and
jb
cmp
xor
cmpsb
inc
cmp
push
xor
push
lods
xchg
xchg
xor
test
mov
call
xor
shll
mov
mov
jae,pn
movl
dec
sbb
nop
lock
lret
xor
aaa
addr16
and
xor
ja
test
add
mov
sbb
add
stc
fwait
adc
mov
int
cmp
mov
cltd
xchg
inc
clc
jo
xchg
mov
add
loopne,pt
mov
mov
mov
mov
dec
sbb
outsl
cmpsl
mov
ja
dec
add
es
ds
cmp
push
jle
add
les
cmp
test
and
ret
mov
test
push
sub
in
inc
mov
sarb
out
push
fwait
lods
addr16
mov
mov
outsb
fdivl
int
popf
cmp
lods
pop
add
push
mov
gs
jb
leave
cmp
daa
pop
insb
push
xor
mov
insb
inc
jbe
sbb
mov
ljmp
and
std
ja
mov
jle
sbb
movsb
fsubl
jnp
test
sub
and
push
mov
jno
xor
or
pop
test
sub
jns
xor
loop
in
mov
fsubr
sbb
mov
scas
fadd
cmp
inc
push
mov
push
mov
xor
loop
lods
in
or
repz
sbb
mov
loope
fs
add
pop
test
push
push
lea
sub
push
pop
mov
loope
frstor
xor
cmp
mov
shl
cmp
dec
mov
mov
cltd
out
shlb
push
shr
jne
insl
pop
dec
add
push
shll
pop
push
aas
pop
xchg
ljmp
mov
pushf
out
sub
sub
outsl
mov
adc
dec
or
sbb
in
mov
mov
cmp
bound
pop
mov
cs
dec
pusha
cmp
imul
pop
daa
lds
add
jle
and
pop
inc
subl
xlat
inc
sbb
cmp
ljmp
scas
popa
imul
dec
sahf
dec
mov
jb
cmp
jge
fcmovbe
fimuls
adc
push
ss
aam
sub
xor
pop
shr
inc
loopne
cltd
out
decb
or
out
xor
dec
xor
xchg
mull
movsl
fwait
imul
pushf
add
add
add
mov
shl
stc
xchg
dec
mov
push
clc
pop
mov
cs
js
pusha
cwtl
popf
push
jnp
test
mov
pop
jb
xor
test
xchg
les
adcl
cltd
dec
sub
or
mov
iret
imul
fwait
shlb
add
dec
fisubs
hlt
lret
pusha
cmp
or
stc
scas
and
test
fwait
cmpsl
bnd
xor
sar
xor
int3
leave
mov
fidivrs
dec
testb
stos
lcall
fwait
cltd
push
mov
fisttpll
jle
jno
sub
mov
mov
mov
jp
xlat
jo
loopne
lock
movb
mov
pop
fistpl
xlat
out
pop
out
cmp
clc
popf
xchg
cmp
stc
rorb
aad
ja
push
xor
or
fs
ficompl
xchg
les
test
mov
aam
inc
or
xchg
sub
js
aam
and
js
daa
js
jmp
jp
scas
adc
sbb
das
lahf
outsb
adc
test
js
adc
cmp
out
push
dec
lcall
lret
dec
es
pop
scas
push
movzwl
ljmp
xchg
in
jecxz
fnstcw
dec
andl
rcll
xchg
ja
icebp
mov
or
sub
pop
outsl
sbb
ss
test
mov
and
cmc
rcrl
cmp
adc
inc
add
pop
dec
outsb
ret
ja
jge
popa
and
sbb
cmp
pusha
mov
mov
dec
xchg
setle
out
shrl
sahf
cmp
sbb
pop
shlb
lods
jns
dec
aaa
or
ljmp
pop
xchg
or
je
insb
mov
stc
xchg
pop
sub
push
sbb
hlt
cmc
mov
mov
adc
push
jae
dec
lcall
sbb
dec
cli
ja
mov
adc
gs
sub
mov
pop
mov
cltd
push
jo
repnz
pandn
test
dec
sti
into
or
and
or
mov
fidivrs
and
lcall
mov
and
leave
call
stos
inc
cmp
fdivs
insb
aam
cmpsb
cmp
jns
mov
mov
ret
sbb
fcoml
push
je
fbstp
sbbl
ja
test
and
mov
test
hlt
jge
push
jno
insb
aad
adc
int3
fstpl
ja
pop
adc
dec
push
cmp
push
pop
and
or
cmpsb
faddl
cmp
push
mov
fs
mov
or
js
adc
sbb
mov
imul
fiadds
xchg
xor
mov
jnp
push
shll
jne
jb
fmull
pop
push
mov
cmc
jp
pop
js
test
dec
jnp
sub
dec
pop
add
ljmp
dec
dec
mov
adcb
es
and
mov
movsl
dec
xchg
fildl
xchg
lahf
xlat
leave
lret
push
in
rcr
aam
lods
test
cmpsl
adcb
es
pop
test
xor
andl
cmp
hlt
push
inc
inc
ljmp
dec
cmpsb
and
in
sbb
je
jno
jle
dec
and
push
cmpsl
test
js
jae
aas
xchg
pushf
fcoms
rcrb
inc
mov
ja
mov
pusha
pop
and
ljmp
mov
ds
push
pop
js
outsl
fistpll
loop
scas
adc
push
test
insb
loop
lret
mov
iret
mull
mov
outsl
xchg
inc
dec
out
inc
sbb
fwait
cmp
dec
xchg
sub
jno
pop
pop
cld
xor
ja
or
jge
pop
cmp
mov
sbb
shll
mov
popa
xchg
fldcw
or
ror
std
les
dec
jl
pop
ss
inc
add
fs
aam
push
sub
rcrl
mov
jp
xor
je
gs
ja
mov
je
add
dec
pop
fsubrl
mov
in
leave
pop
stos
iret
scas
ss
lcall
out
ja
adc
sbb
in
or
outsl
test
in
into
and
testl
adc
ja
icebp
arpl
popa
adc
dec
pop
lcall
sti
sbb
pop
inc
shrb
adc
enter
lret
daa
pop
inc
or
fisttpl
roll
adc
int3
clc
ljmp
add
mov
cli
mov
push
xchg
testl
stos
or
adc
and
xchg
andl
mov
dec
cs
ds
int
std
mov
push
xchg
out
leave
mulb
sbb
sub
fcoml
push
aam
frstor
aas
jo
sahf
sbb
add
or
call
pop
push
test
inc
dec
imul
or
xchg
xchg
cmp
in
xor
scas
fmul
iret
arpl
pop
pop
add
mov
fwait
jae
jmp
mov
testb
andb
and
in
insb
mov
or
imul
jne
sbb
mov
mov
push
mov
ss
pop
test
add
cmp
or
jp
mov
jmp
sbb
lahf
fdivrs
mov
int
xor
push
cmpsb
cmp
pop
xchg
sbb
jno
sbb
mov
lahf
sti
xor
pushf
cmp
loope
loopne
cs
mov
mov
dec
lret
insb
cs
pop
into
mov
cld
inc
inc
std
stos
in
repnz
jne
ss
fldcw
arpl
cmpl
aaa
fsts
xor
pop
mov
pop
add
jae
adc
jb
jne
rorl
js
cmp
and
xor
pop
inc
test
xchg
add
out
dec
in
inc
rcll
iret
roll
sub
sub
cmpsb
mov
ja
sub
fistpll
cmp
gs
xchg
negb
sahf
dec
sarb
inc
jle
cmp
repnz
jne
cmp
inc
test
repz
pop
cmp
mov
loope
ds
in
mov
dec
lods
ds
test
and
push
adc
add
les
cld
rolb
jo
sbb
mov
sbb
xchg
sarb
add
das
xor
jbe
mov
xchg
das
xor
xor
call
push
div
gs
fmull
cmc
mov
out
lods
fwait
sahf
lods
pop
xor
iret
or
or
pop
std
cmp
mov
mov
idivb
inc
adc
dec
bound
enter
shrb
jb
js
cmp
popa
imul
jns
mov
js
int
push
pop
rcrb
cs
daa
sbb
xchg
test
leave
popf
xlat
lahf
push
push
jg
arpl
icebp
jne
imul
cmc
mov
mov
jns
dec
cmp
test
lret
out
das
jmp
mov
cmp
clc
xor
popa
xchg
mov
sub
cmpsb
cltd
mov
dec
jl
ds
mov
mov
ja
xchg
and
push
add
out
jge
mov
ljmp
or
xchg
add
dec
add
popa
cmp
pushf
jle
sti
mov
dec
sbb
add
scas
mov
out
pop
dec
rolb
clc
cmp
push
fsubrl
push
mov
fisubrl
call
sbb
test
push
lret
sub
outsl
iret
mov
cmp
sub
arpl
xchg
mov
pop
jbe
mov
or
ljmp
mov
dec
xor
inc
andl
pop
mov
jbe
pop
xchg
mov
shr
push
sbb
mov
jl
inc
jmp
lret
aad
out
mov
std
xchg
pop
movsb
fisttpl
sub
je
and
jnp
mov
xchg
mov
data16
arpl
xor
cmp
in
insb
sbb
inc
or
lret
push
mov
or
movsl
xor
ds
mov
negl
cmpsl
rcrb
or
cld
daa
xor
and
fdivrs
lock
xchg
sbb
jns
dec
les
pushf
sbb
das
push
pop
or
notl
mov
dec
xchg
mov
ljmp
stc
ficompl
xchg
cmp
dec
arpl
jne
inc
cmp
lret
push
sub
push
sbb
mov
out
dec
out
imul
imul
cli
xor
gs
jne
xchg
push
stos
dec
in
jb
mov
les
movsb
cltd
fwait
insb
icebp
sbb
iret
stc
aad
adc
xchg
xchg
cmpsb
inc
sti
je
enter
imul
popa
cli
jle
mov
mov
lahf
sahf
popa
push
push
cmp
popf
out
jl
cmpsb
mov
cld
mov
jp
sbb
cmp
pop
and
adcl
sbb
clc
pop
test
inc
scas
mov
mov
cmp
xchg
repz
xor
push
push
movswl
sti
cltd
mov
mov
jp
stos
jne
js
aas
das
dec
ret
mov
cwtl
mov
ja
or
pusha
dec
xchg
jns
cmpsl
inc
dec
dec
sbb
mov
lret
sub
and
fwait
mov
sub
lea
test
jnp
lea
sbb
inc
pop
pop
test
jmp
push
and
pop
ljmp
dec
lret
add
pop
sub
sbbb
repnz
push
lods
test
mov
fwait
xchg
rclb
js
lds
das
das
mov
adc
sbb
sbb
pop
jmp
inc
or
aam
xchg
cmp
pop
mov
dec
into
repz
sbb
or
mov
mov
testb
out
les
lret
popa
scas
cmp
add
stos
mov
in
addl
or
div
mov
shlb
sub
jne
lret
fists
push
imul
pop
xor
adc
sbb
outsb
dec
jo
sbbl
sbb
out
xchg
jg
or
lds
push
out
and
jle
cmpsb
out
repnz
scas
cmpsl
test
adc
sub
negl
out
xchg
fsts
cmpsl
lahf
outsb
sub
mov
ja
sub
mov
icebp
dec
fs
add
dec
divb
sbb
sub
pop
lds
adc
mov
inc
ljmp
mov
lret
jge
idivl
inc
cwtl
adc
sbb
pop
out
outsb
xor
cwtl
outsl
xchg
or
dec
push
ja,pt
mov
mov
sub
sub
fiadds
lods
add
pop
dec
xchg
pusha
cmp
ficoml
arpl
or
call
pushf
pop
pushf
add
aas
adc
loop
popf
cwtl
adc
loopne
fistpl
mov
out
outsl
sbb
and
cli
clc
push
mov
or
sbb
test
stos
sbb
pop
cltd
js
push
mov
out
jl
dec
clc
dec
test
mov
xor
jae
jo
imul
dec
inc
stos
and
les
jmp
nop
outsl
xchg
pop
mov
push
popf
push
incb
or
mov
divl
fdivrs
and
cmp
fmuls
cwtl
adc
push
push
mov
stos
push
jnp
std
dec
mov
adc
cmp
std
push
push
push
fstpt
test
btrl
imul
arpl
or
cwtl
xchg
js
fdivrl
rep
mov
sbb
dec
jle
cmc
mov
adc
into
mov
ljmp
cmc
imul
mov
jp
emms
sub
inc
or
in
push
imul
fsubl
insb
pop
js
ds
imul
aad
mov
or
mov
fwait
adc
mov
pop
jge
mov
inc
mov
rolb
sub
jne
ja
inc
punpckhbw
push
cmc
xchg
hlt
fidivs
rcll
lds
js
pop
jmp
pop
test
das
test
or
sbb
mov
mov
mov
mov
and
mov
xchg
mov
xchg
int3
adc
mov
sbb
pop
or
xor
xorb
dec
adc
ret
rcll
xlat
jb
mov
jo
xchg
lret
outsb
cmpsl
pop
inc
sbb
into
sbb
ret
jge
fwait
push
xchg
test
fists
je
orl
inc
mov
mov
cmp
jge
out
sti
andb
jle
mov
pavgw
xor
xchg
cwtl
jns
loopne
sub
popa
cli
imul
out
push
fsts
ljmp
xchg
fmull
stos
sbb
pop
jle
jnp
sbb
mov
add
jg
stos
cmp
pop
push
loopne
jns
xchg
data16
xchg
jge
fnstcw
int
cmp
std
xchg
pusha
sbb
scas
xchg
aaa
in
aas
inc
inc
inc
arpl
rclb
and
outsb
cmp
cmp
lods
adc
mov
gs
xchg
or
aas
movsl
sub
mov
mov
out
negl
or
xchg
ljmp
jns
stc
ret
test
mov
xchg
or
fwait
cmp
cmpsl
push
rorb
xchg
push
adc
rorb
sti
pop
ds
pusha
pop
jbe
leave
jl
ret
mov
stos
mov
sub
or
cmp
mov
faddl
mov
jp
in
push
popf
or
insl
mov
js
xchg
cmp
cli
xchg
jb
movsb
adc
testl
fldt
pop
adc
popa
ja
fdiv
dec
test
sbb
cmp
sbb
fistl
sahf
mov
add
rolb
orb
jns
xor
xchg
pop
adc
push
out
jecxz
loope
inc
add
xchg
add
pop
clc
pop
ss
shl
jno
into
sti
shll
mov
jle
popa
gs
push
pusha
and
inc
jnp
xchg
cwtl
mov
jb
fcompl
loop
mov
js
push
popf
mov
int
cmp
addb
mov
xor
sbb
inc
sbb
dec
scas
push
sbb
mov
inc
nop
inc
and
bound
push
test
mov
gs
lods
jae
cmp
mov
repz
push
cmp
cwtl
adc
xchg
sub
sub
ret
into
in
push
lds
ret
and
cmp
cmpsb
mov
push
add
adc
cmp
pop
dec
jle
push
out
dec
clc
orb
sbb
in
aam
push
dec
stc
popa
mov
stos
imul
je
jns
iret
mov
out
sub
push
or
jg
ds
push
add
pop
sahf
mov
pop
xchg
and
fldcw
cmp
jno
mov
sbb
mov
pop
pop
pop
bound
repz
mov
xchg
jb
ficomps
push
xchg
daa
dec
clc
das
in
mov
dec
mov
sbb
mov
adc
or
fcmove
out
mov
fidivrl
dec
or
lods
imul
repz
mov
mov
mov
cmp
mov
fiadds
jns
sbb
pop
inc
lock
mov
pop
imul
dec
xchg
dec
mov
test
jge
xor
cmp
push
pop
or
push
ret
sbb
and
push
inc
inc
sbb
adc
jbe
aas
clc
jmp
jle
scas
ja
ja
and
jmp
lcall
mov
sbb
stos
pop
cmp
jmp
pushf
push
loope
cmc
out
sbb
sub
push
mov
cmp
xchg
je
and
leave
pushf
out
xchg
arpl
bound
ljmp
lcallw
cmp
mov
fdivrl
mov
add
or
add
test
cli
mov
inc
cmpsb
xchg
ja
addr16
and
cli
mov
mov
inc
or
sbb
inc
shr
adc
mov
inc
jl
iret
popf
push
jl
fists
ja
jb
nop
or
mov
pusha
push
jne
mov
or
popf
fmul
adc
icebp
ret
loop
dec
cmp
jl
call
lahf
xchg
lea
push
out
sub
lahf
mov
add
mov
pusha
dec
daa
popf
addr16
push
in
popa
xchg
fstps
imul
inc
xchg
jg
enter
or
xchg
clc
dec
pop
and
lods
sbb
nop
adc
test
xchg
movsl
xchg
jae
roll
fimull
dec
js
or
cli
test
mov
jne
push
xchg
scas
sub
push
cs
cmpb
orl
mov
scas
pop
pushf
movsb
xchg
fisubrs
insb
addl
in
push
outsb
or
icebp
pop
sbb
test
jae
lret
mov
setge
sbbl
adc
cmc
push
ds
pop
mov
add
sbb
push
dec
lret
or
and
mov
loope,pn
adc
idivl
or
jle
cwtl
nop
neg
cmp
sbb
jmp
pop
sbb
ja
sub
inc
sbb
std
cmp
mov
pop
cmc
cltd
lds
add
shlb
hlt
mov
mov
arpl
test
lahf
push
ret
or
pop
fidivrs
push
jg
mov
jle,pt
out
fdivl
fldcw
pop
adc
inc
jbe
mov
xor
xorb
ret
fdivs
cmpsl
jae
or
loop
xchg
push
cmc
test
xlat
call
loopne
xlat
inc
inc
sbb
mov
jmp
sbb
mov
aas
or
push
outsl
xchg
sarl
jg
xor
xlat
imull
test
xor
jae
and
jg
arpl
js
sbb
cmp
mov
imul
inc
repnz
in
xchg
pop
xchg
add
jmp
jnp
sbb
ss
nop
mov
xchg
icebp
pop
sbb
jle
jb
pop
mov
cmp
mov
pushf
sub
inc
int
mov
mov
test
or
sbb
out
cmp
xor
ja
sub
mov
shl
insl
into
mov
push
loop
lods
popf
cmp
imull
pop
xchg
cmp
cmp
pop
lret
adcb
sbb
add
scas
pop
push
ss
push
xor
jg
scas
dec
je
inc
cmp
xchg
push
mov
addr16
push
xchg
or
mov
xchg
lcall
call
test
mov
adc
jb
inc
push
sti
out
lcall
into
sbb
or
test
lret
mov
jle
fs
jp
or
scas
dec
outsl
adc
sub
sahf
mov
mov
adc
inc
pop
ds
clc
icebp
cmp
or
lds
inc
call
mov
orl
js
mov
loope
push
sub
pop
mov
outsl
xlat
or
mov
cltd
xchg
add
mov
push
xor
subl
movsl
jle
hlt
lret
inc
cmc
lcall
sbb
xlat
push
mov
inc
js
cmpsl
or
cmc
push
lods
clc
iret
jp
stos
std
add
shlb
sub
cmp
insb
push
or
or
cmp
add
loopne
scas
sbb
push
nop
fcmovb
rol
and
and
adcb
xor
pop
add
dec
jns
push
arpl
mov
popf
out
and
or
sbb
inc
and
sub
cmp
addb
icebp
popa
cmp
cmp
mov
arpl
push
add
js
cmp
mov
insb
mov
pop
call
or
cmpsb
test
sbb
xchg
push
fimuls
or
test
outsb
dec
mov
adc
pop
pop
or
adc
fwait
cmp
lret
jnp
push
mov
fisubrs
cmp
es
push
cmp
scas
jp
jl
sub
mov
fnstcw
repz
mov
or
decb
iret
jecxz
or
cmp
lahf
in
sbb
inc
mov
call
push
mov
cmc
lcall
lret
jmp
mov
subl
mov
div
lahf
jge
xchg
and
outsb
js
dec
movsl
adc
mov
adc
sbb
add
mov
sub
jle
pop
dec
mov
mov
jle
or
sub
roll
das
mov
or
cmp
push
or
jns
imul
dec
iret
es
xorb
shr
add
je
in
push
fdivrl
mov
outsl
test
cmpsb
add
ds
in
insb
pop
jb
fwait
and
dec
fildl
mov
clc
int3
push
inc
data16
shll
mov
or
push
mov
outsl
adc
outsl
out
sti
test
sbb
xchg
jle
cmc
dec
mov
ljmp
push
xor
add
lret
js
popf
scas
cld
mov
scas
mov
mov
mov
mov
jns
lcall
mov
inc
jg
int3
cmpsl
and
mov
dec
jg
xchg
lret
mov
and
xor
cmp
sub
lret
push
push
pop
imul
xchg
sbb
cmp
cmc
cmp
xchg
sbb
leave
aas
push
or
les
dec
out
push
xor
pop
ja
jae
shll
pushf
das
and
cmp
mov
in
mov
imul
push
pop
outsl
es
lea
xchg
jmp
jle
mov
adc
mov
cmp
cmp
add
mov
test
push
aas
js
push
pop
rsm
int
cmpsl
and
mov
fucomp
inc
sbb
inc
xor
loopne
push
cmp
push
cmp
push
push
js
cmpsl
andb
inc
xchg
fs
mulb
push
push
jge
push
or
mov
out
xchg
xchg
pop
cmpsl
imul
adc
test
or
loop
mov
into
out
inc
dec
popl
and
dec
jns
mov
cmpsb
flds
popa
cmp
sbb
aas
maskmovq
testl
xchg
ja
dec
inc
sbb
add
dec
cmp
insb
nop
repnz
mov
pushf
in
cmp
and
xchg
mov
es
enter
cmp
ljmp
fwait
pop
xchg
dec
sti
cmp
jns
ljmp
dec
sbb
mov
lahf
cmp
adc
lcall
movsl
fdivrs
sub
xchg
cmp
test
pop
mov
nop
stos
lods
add
fucomip
loope
add
xchg
outsl
xor
scas
scas
push
pop
enter
dec
hlt
xor
addr16
dec
jle
sub
and
int3
sub
hlt
jbe
movl
arpl
out
push
jge
cmp
fadds
int3
xchg
inc
adc
scas
cmc
lods
lret
sub
dec
stc
leave
xchg
loop
nop
aam
cmp
mov
add
xchg
jnp
cmc
fnstsw
clc
imul
cmp
sbb
mov
dec
lock
cmp
aam
jae
enter
popf
inc
xchg
adc
pushf
inc
mov
enter
in
mov
aas
or
sarb
mov
xchg
cltd
movsl
add
xor
cmpsb
cmp
out
mov
enter
inc
aam
adc
mov
lret
add
adc
int3
bound
mov
xchg
xchg
push
jns
test
sbbl
jl
jg
mov
sbb
iret
sbb
aad
call
add
or
xchg
ja
mov
rcr
dec
sub
or
mov
idivl
dec
bound
sub
rorl
jns
cmp
or
aas
fildll
pop
pop
xchg
dec
rclb
cltd
push
push
mov
sti
sub
jne
pushf
xor
mov
mov
jmp
sbb
mull
or
xchg
out
cmp
out
fists
popw
cltd
mov
cmp
cmp
rcrb
ds
leave
xchg
js
outsl
out
lods
xchg
dec
sbb
in
cmc
inc
nop
test
stos
mov
pop
call
cmpsb
bound
cwtl
add
insb
add
pushf
xchg
or
sbb
lea
dec
stos
jnp
repnz
pushf
sbb
cmpsl
test
cmp
dec
pop
jle
jb
clc
lahf
daa
stos
ljmp
cli
adc
xor
gs
jle
mov
pop
push
adc
jp
out
loopne
nop
ja
mov
dec
aad
cmp
cltd
sti
ljmp
je
ss
mov
orl
aas
xchg
cli
popa
rcrl
cli
ds
fcoml
enter
push
jbe
inc
xchg
add
cmp
xchg
push
sub
adc
pop
and
int
jl
insb
loopne
out
stos
jcxz
testl
adc
push
hlt
mov
xor
data16
out
add
cmp
dec
or
divl
add
lret
ss
sub
sbb
loopne
idivl
fldt
in
xor
lcall
rclb
pop
aam
inc
add
pop
cmc
mov
cmp
cld
jne
xchg
popl
mov
cmp
sub
cwtl
or
arpl
out
cwtl
sbb
xchg
adc
mov
inc
sti
fstpt
xchg
faddp
sbb
dec
push
dec
sbb
push
adc
call
dec
xlat
pop
int
push
movsb
push
jb
daa
fisubs
mov
sub
dec
or
adc
jb
pushf
xchg
adc
jg
sbb
rorl
cmp
sub
sbb
lods
andb
sarl
mov
int3
and
sbb
cmc
jae
dec
dec
loop
push
cmc
or
sub
idivb
idivl
ds
stc
mov
sub
jp
mov
fs
xchg
adc
xor
xor
push
push
or
popf
fsubl
fsub
call
push
dec
fildl
cmpsl
sbb
lods
addb
inc
sbb
adc
leave
jl
jg
aam
xchg
mov
dec
das
cli
js
mov
add
iret
dec
jecxz
cwtl
enter
lea
scas
add
pop
jno
pushf
aas
pusha
xor
mov
dec
sub
sarb
jge
inc
in
addr16
js
leave
push
sbb
ret
aaa
insb
push
cmpsb
clc
ret
daa
dec
sbb
or
fs
cmp
sbb
outsl
xchg
orb
push
cmp
xor
pushf
and
or
fnstenv
cmp
adc
push
dec
mov
icebp
add
fisubrs
cmp
and
js
cltd
jbe
jno
testl
outsl
add
mov
aas
or
or
clc
adc
add
dec
mov
and
mov
push
cmp
pushf
insb
pop
cwtl
fisubrs
or
dec
lds
into
testl
adc
mov
mov
cmpl
sbb
lds
sarl
leave
out
int
dec
idivl
mov
sub
adc
clc
pop
rcl
loopne
lods
sbb
xchg
int
lahf
jnp
pop
xorb
jae
fiadds
add
add
mov
push
mov
ja
push
jmp
jmp
clc
xchg
mov
push
sbb
jp
lret
cmp
xchg
ret
ljmp
xor
loope
std
mov
cmp
xchg
ljmp
out
nop
clc
cmp
cmp
dec
mov
add
xor
jg
mov
mov
pop
shrl
stc
mov
insb
mov
mov
jae
pop
adc
outsb
insl
push
fnstsw
add
testl
mov
sub
jns
es
imul
push
dec
cltd
inc
clc
pop
cmp
std
sbb
fimuls
dec
idivl
xor
xchg
popf
mov
mov
adc
fwait
loop
jno
push
loopne
jns
push
lahf
add
jbe
leave
jns
inc
jne
add
inc
popa
sub
add
shrb
pop
and
mov
mov
fmulp
sbb
fildl
popf
in
rolb
test
lods
mov
mov
add
rcr
js
push
or
mov
cltd
cmc
pop
dec
clc
pop
mov
into
fnstenv
jle
jp
clc
mov
cwtl
inc
daa
test
movsb
std
lea
dec
jb
mov
stc
int3
call
jmp
divb
insl
lahf
jecxz
ljmp
xchg
push
or
lods
inc
icebp
movsb
add
pop
popa
cmp
test
cmpsl
dec
js
or
xchg
test
ret
out
iret
cs
popf
mov
pop
jae
push
cmp
rcrl
adc
loope
jp
cmc
scas
inc
imul
mov
sub
and
ljmp
mov
imul
xchg
mov
jmp
sbb
cs
cld
test
adc
daa
andb
imul
out
pop
jmp
sbb
xchg
imul
cmp
mov
dec
pop
gs
lods
cmp
cmpsb
int3
dec
ret
mov
and
and
pop
push
test
sbbb
xchg
sbb
inc
mov
pusha
or
xor
push
outsb
add
adc
mov
fucomip
push
cmp
imul
mov
or
pop
negl
adcl
repz
cmp
daa
and
into
subb
into
jbe
insl
ja
cmp
jg
pop
cmpsb
mov
into
add
sbb
inc
add
add
push
fdivrl
lods
add
sbb
inc
fwait
sarl
jle
sub
ljmp
cwtl
xorb
pop
mov
aad
jne
fwait
add
out
ss
iret
and
js
aas
lret
pop
fidivl
inc
fimuls
xchg
xorl
or
arpl
inc
dec
int
dec
xor
cmp
mov
jle
out
div
inc
jg,pn
sbb
cmc
push
idivl
jle
dec
mov
cmpsl
xchg
xchg
scas
xchg
fstpl
shr
out
add
sbb
fdivrs
sbb
mov
cmp
insb
aam
das
push
loope
mov
cmpsl
mov
inc
mov
ljmp
dec
cmpl
loope
pop
adc
aas
imul
fimull
xchg
sub
ret
push
cwtl
xrelease
faddl
sub
pop
adc
mov
andl
inc
mov
sbb
mov
sbb
jge
aad
pop
sub
call
ja
sbb
mov
cmc
ljmp
mov
shrb
movsl
mov
cwtl
cmp
pop
or
pushf
repz
push
loope
jp
hlt
cmp
pop
test
iret
arpl
ss
test
mov
mov
add
xor
cwtl
push
or
mov
nop
jge
inc
pop
jne
mov
mov
nop
dec
jl
rolb
leave
pop
jae
cmp
out
out
imull
sti
mov
test
push
xchg
sub
adc
xlat
scas
inc
add
cmp
lds
jp
mov
or
jnp
arpl
ja
test
out
jg
cld
cltd
test
jnp
cmp
mov
imull
push
mov
cmp
jae
add
mov
xor
mov
cmpb
or
int
enter
xchg
mov
push
test
sbb
jno
inc
mov
daa
dec
in
in
jg
fstpt
pop
das
aas
xchg
das
jle
xchg
cmp
inc
into
pop
out
dec
cli
sbb
test
pop
jnp
cltd
pop
jle
movl
or
out
xchg
adc
or
adc
or
push
xchg
xor
jb
es
inc
daa
jnp
cwtl
or
sbb
push
or
xor
add
mov
sub
mov
test
mov
push
mov
ret
mov
movsb
xchg
pop
sarb
repz
out
push
insb
xor
ljmp
popf
dec
add
fwait
cmp
cmp
jbe
push
pop
inc
iret
push
js
mov
cmp
cmpsl
loope
loop
fwait
rcrl
push
packsswb
mov
mov
loope
or
out
mov
ljmp
inc
movsb
repz
mov
push
dec
inc
mov
mov
push
cld
loope
mov
aas
or
dec
dec
mov
xchg
push
adc
sar
pop
sub
mov
dec
dec
in
lret
fcoml
adc
sahf
mov
pop
ror
mov
pop
mov
pop
fcoml
leave
test
punpckhwd
insb
or
cmp
stc
lret
lock
push
lret
mov
jl
cmp
scas
pop
js
inc
xor
shrb
jp
pop
in
gs
scas
or
push
adc
jbe
test
outsl
mov
mov
mov
mov
lea
ret
pushf
negl
sub
or
mov
mov
call
or
add
lods
icebp
pop
fs
fidivrs
push
inc
jno
ret
data16
stos
clc
xchg
mov
mov
pusha
sbb
inc
dec
and
ret
or
lahf
fnstsw
mov
cmpsb
dec
and
xor
inc
sub
fcomps
and
jecxz
sub
fiaddl
jecxz
roll
daa
aas
mov
jp
mov
sbb
mov
rcr
shll
iret
stos
mov
clc
pop
cltd
lea
out
popa
int3
into
fistl
ja
push
pop
movsl
xchg
das
inc
mov
adc
xchg
int3
jne
testb
adc
xchg
fidivrs
es
scas
pop
add
pop
pop
arpl
mov
dec
push
sub
pop
movsl
dec
aad
mov
lods
scas
out
sbb
add
lahf
movsl
lahf
mov
adc
jmp
das
cmp
adc
into
mov
push
lret
imull
mov
push
cmp
push
mov
sub
in
dec
nopl
push
jge
pop
outsl
add
push
movsl
or
dec
cmc
imull
test
pop
fmuls
adc
jae
jns
call
xchg
inc
cmp
jmp
daa
mov
rclb
lret
jecxz
adc
jg
into
les
test
data16
sub
nop
cmp
pop
sbb
xchg
cmp
div
sahf
cmp
rclb
test
test
nop
add
cli
dec
popa
or
jmp
and
cmp
cmpl
adc
fcmovu
out
es
xor
xchg
mov
shl
or
nop
cwtl
fsubrs
cld
xor
push
test
out
pop
iret
jne
stc
lods
outsl
mov
or
divl
jae
mov
imul
pop
sbb
faddl
or
sbbb
mov
jle
cmp
dec
inc
jo
or
or
inc
stc
mov
xorb
add
and
daa
jg
mov
ds
xlat
dec
lods
mov
imull
je
or
mov
mov
popf
mov
adc
fdivrp
dec
mov
cli
cmp
mov
or
enter
push
sub
cmp
mov
mov
js
sbb
cmp
test
fwait
add
pusha
mov
aas
lahf
jl
je
jmp
ljmp
xchg
leave
test
jp
fldt
lahf
mov
cmp
mov
cmp
xor
das
lret
push
push
or
aas
out
dec
sbb
leave
jle
or
pop
icebp
mov
dec
js
daa
enter
clc
dec
mov
out
mov
or
adc
jge
jg
jl
dec
fs
pop
adc
out
ds
jg
imul
addr16
test
test
int3
inc
adc
test
dec
pop
sub
adc
js
in
fmull
out
aaa
faddp
add
cmp
push
pop
fildl
icebp
rorb
enter
enter
mov
mov
movsl
leave
js
je
add
cmpsb
cmp
testb
out
adc
push
jno
xchg
test
femms
sbb
ljmp
sbb
mov
lret
sbb
scas
fs
in
sbb
mov
and
sub
test
or
pop
jnp
out
rclb
aam
jnp
lret
and
scas
imul
mov
dec
jb
test
loop
pop
mov
push
cli
xor
leave
push
mov
xlat
mov
sub
or
pop
dec
ljmp
ss
jg
mov
int
leave
cwtl
movsb
scas
in
dec
mov
mov
aam
or
insl
xor
jmp
cmp
jge
or
add
sbb
insb
test
sub
push
add
stos
mov
test
js
movsl
lods
sbb
add
dec
dec
mov
lods
loope
data16
ds
filds
pop
push
mov
test
fistpll
push
leave
cmpsb
bound
dec
lcall
push
sbb
out
dec
fcomi
inc
pop
cmpsb
jae
aam
and
xchg
fdivl
sub
ds
add
dec
mov
jle
mov
pop
mov
lds
fs
sbb
or
mov
add
repz
jl
jb
nop
push
mov
sti
loop
add
loop
pusha
cmp
xchg
mov
popa
mov
jmp
mov
xchg
addr16
add
cmp
arpl
mov
jge
imul
xchg
leave
jae
cmp
mov
movsl
jmp
mov
dec
sub
movsl
iret
ficoms
ljmp
xor
cmpb
les
pop
jmp
fwait
out
sbb
cmp
sbb
or
imul
add
mov
jge
loop
or
adc
jnp
add
mov
dec
mov
xor
cmp
bound
leave
jnp
mov
dec
rsm
mov
idivl
push
jbe
pusha
sbb
dec
lea
sbb
cmp
mov
mov
mov
adc
sub
mov
test
jno
stos
lahf
cmp
js
pop
sbb
lock
cmp
add
xlat
xchg
jl
sahf
inc
add
cmp
cli
loopne
or
or
pop
jge
mov
pop
loop
mov
ret
push
mov
pop
cmp
or
lahf
lock
xor
mov
subb
add
fstpt
mov
call
adc
adcb
mov
mov
inc
cmp
mov
mov
mov
mov
xchg
mov
cmp
cmp
jno
stos
sbb
xor
in
jnp
pop
sbb
inc
ja
pop
test
mov
sub
sbb
cmpsl
sub
in
ja
test
outsb
lds
mov
mov
inc
xlat
ja
mov
mov
and
fists
dec
leave
fidivrs
cmp
pushf
jmp
xchg
dec
xlat
int
into
andl
pop
dec
sub
mov
add
mov
aas
das
mov
ljmp
scas
sbb
repnz
mov
dec
inc
xchg
sbb
enter
xchg
and
mov
pop
test
pop
imul
mov
ret
ret
mov
daa
fbstp
loopne
clc
pop
dec
cli
lods
jle
cli
setp
stc
fildl
inc
iret
xor
sbb
xchg
cmp
into
inc
test
stos
js
out
cmp
or
push
test
lds
cmc
or
add
lret
mov
test
loop
int
pop
mov
cmp
mov
andb
jmp
ret
test
iret
mov
cmp
sahf
les
pop
int3
movl
js
push
fimuls
cmp
insb
lcall
pop
or
fs
push
pop
and
leave
lret
mov
jns
dec
cmp
aas
outsb
push
stos
dec
add
lret
dec
or
imul
cmpsl
mov
inc
jg
out
stc
shlb
or
fistpll
sub
addr16
or
xchg
sub
xchg
call
mov
in
ret
lods
insb
mov
sbbl
jecxz
cmp
orb
je
out
xchg
pop
xor
notb
cmc
call
sbb
inc
lods
cmc
add
mov
jns
lods
mov
jge
shl
cmp
adc
stc
orl
mov
mov
dec
scas
jae
hlt
xchg
in
xchg
inc
dec
sbb
fildll
mov
jbe
jle
cmpsl
mov
sti
cmpsl
sbb
inc
pusha
popl
or
decl
mov
jno
scas
sti
insl
stos
add
jg
xlat
insl
cmp
sbb
add
mov
test
adc
jns
mov
sub
sbb
bound
push
jge
cmp
xor
add
iret
cld
das
or
lea
push
jecxz
into
xchg
repnz
js
das
outsb
sbb
cld
lds
int3
les
mov
lea
mov
insl
add
sub
xor
ds
ud0
data16
cmp
sbb
and
in
outsl
sarb
sbb
js
or
ret
test
jecxz
scas
mov
inc
dec
test
cmp
xor
cmp
aas
jmp
daa
iret
jne
push
movsb
pushl
cmp
popa
dec
aas
mov
jae
out
frstor
into
rorb
adcl
cmp
dec
cmpsb
xor
sbb
imul
iret
mov
inc
mov
push
xchg
loopne
sbb
lods
or
or
cmp
or
cmp
jecxz
dec
fsubr
push
shl
and
or
out
aad
insl
arpl
xchg
sbb
cwtl
fsubr
add
pop
in
push
dec
lcall
aad
les
sbb
sbb
cmpl
jl
ficompl
dec
int3
sbb
ja
cmp
sub
push
mov
cld
adc
cmp
mov
sbb
js
inc
adc
fidivl
pop
push
cmp
icebp
add
push
imul
dec
lea
js
adc
jmp
rolb
iret
inc
add
shl
insl
mov
adc
in
add
loop
push
inc
adc
std
add
bnd
adc
ljmp
outsb
adc
sbb
push
lods
test
fdivs
and
ljmp
sbb
ret
inc
icebp
mov
sbb
pop
cmp
mov
out
cmp
mov
push
dec
pop
lock
cmp
testl
test
xchg
jp
inc
mov
icebp
push
aad
adc
pushf
cmpsl
lcall
cmp
pop
inc
popf
fstpl
repz
dec
or
push
fcmovnu
pop
cmpsl
push
lahf
inc
js
mov
push
xchg
int3
fnstcw
add
int3
in
or
cwtl
mov
or
repnz
adc
sbb
pop
mov
pop
mov
mov
sub
dec
pusha
dec
dec
pop
lds
add
cmp
mov
mov
inc
aas
leave
dec
mov
jp
popf
adc
dec
ljmp
mov
stc
ja
ret
sbb
outsb
out
fwait
orl
fs
lret
mov
orb
rcl
mov
and
testb
jmp
pop
dec
inc
test
inc
mov
add
sbbb
xor
push
jle
cmp
jge
mov
movl
mov
cmp
popa
sbb
inc
jle
mov
outsl
adc
sbb
es
cmp
sub
fldenv
mov
mov
fyl2xp1
cmp
mov
js
mov
pextrw
inc
pop
cli
iret
arpl
jns
into
or
lret
daa
mov
or
mov
outsl
jnp
sub
inc
pop
push
pop
lcall
jmp
cmp
pop
sbb
rorb
xorl
cmp
ds
cltd
jne
mov
xor
pop
addb
xor
xor
test
or
mov
adc
cmpsl
jp
xor
fidivrs
out
fnsave
pop
cmp
xor
sub
in
sbb
jo
fs
bound
pop
out
adc
fbld
mov
adc
cmpb
pop
scas
dec
sub
lock
sbb
mov
std
testb
mov
xchg
sub
test
cs
fcmovbe
fs
sarl
mov
jge
cld
outsl
inc
mov
mov
jbe
cltd
inc
ret
mov
faddl
mov
cli
bound
sti
mov
mov
repz
insl
lahf
inc
ret
jb
insb
rcll
mov
insb
fimuls
or
cmp
push
cli
bswap
or
add
cs
ja
and
bound
daa
pop
inc
and
ret
sub
adc
aas
cmp
test
cmp
jge
or
adc
cld
cwtl
adc
inc
aam
xlat
fdivr
adcl
lods
aaa
or
mov
jnp
jp
cmc
int
cmp
inc
js
jae
gs
mov
cmp
adc
lcallw
dec
in
cld
dec
rcr
cmp
jb
daa
scas
cpuid
push
sbb
out
test
mov
leave
push
pop
xchg
jbe
pop
xchg
mov
cmp
push
stc
out
ficoms
xchg
mov
xchg
mov
push
rcrb
push
lahf
fdivr
jnp
dec
jno
or
push
in
stc
sbb
in
orl
lret
in
jmp
ljmp
cltd
insb
imul
mov
jnp
cmc
pop
sub
test
pop
js
cmp
mov
js
or
lea
testl
and
push
pusha
inc
jmp
sbb
xor
in
mov
cltd
inc
xchg
xchg
or
mov
cld
jb
mov
sub
cmpb
jbe
fstpt
jle
jg
loope
lods
add
or
cmp
dec
mov
bound
or
sbb
mov
mov
mov
jle
cwtl
call
out
dec
fcompl
cmp
jno
rsm
push
loope
xchg
cs
and
clc
cs
mov
dec
lods
and
cmpl
push
test
sahf
frstor
cmc
sub
or
imul
or
mov
xor
mov
mov
pusha
sub
movsl
pusha
stc
jl
sbb
lds
cmp
fdivrp
notl
mov
cmp
fistpll
sbb
into
jecxz
mov
or
push
mov
sbb
mov
jnp
jge
cmp
cli
xor
push
mov
jl
popf
bound
inc
dec
adc
aad
dec
test
jg
and
int3
int3
inc
cli
cmpsb
aas
popa
adc
jle
insb
or
push
push
adc
mov
clc
repnz
mov
fisubl
pop
int
insl
ja
and
pop
aaa
jne
cmp
outsb
push
mov
ret
out
popf
cmpsb
mov
std
cmp
decl
cmp
out
cmp
xchg
adc
or
in
pop
ljmp
xchg
dec
mov
sbbl
cmp
cmp
mov
and
sti
or
jo
sbb
out
fsubrs
sub
icebp
and
sub
jno
mov
js
inc
mov
mov
push
sbb
idivl
ret
addr16
scas
clc
fisttps
pop
emms
test
insl
shlb
mov
cmp
pop
jp
pop
sbb
sahf
fwait
pop
and
jo
repz
test
in
pop
pop
insb
add
ficoms
sub
leave
cmp
bt
dec
pop
mov
sub
ss
pop
add
add
lds
int3
cmp
push
mov
dec
pop
dec
aad
leave
out
push
push
add
filds
mov
popf
xchg
std
inc
pop
cmpl
or
inc
faddl
orl
mov
dec
lahf
cs
in
insb
fdivrs
jae
mov
lret
cmp
cld
jge
and
inc
add
mov
repz
xchg
out
and
push
lods
ljmp
sub
sbb
popa
daa
sub
pop
in
out
lret
mov
loope
inc
fimull
fdivrs
stc
sbb
lahf
sub
lods
mov
xor
or
push
out
xchg
into
push
aam
out
stc
imul
fdivrs
test
mov
mov
into
test
dec
lret
imul
push
pop
fstpt
jecxz
dec
jnp
popl
sub
mov
rorl
and
cmc
jne
mov
fstpt
cwtl
gs
mov
lods
je
pop
lahf
jl
dec
jg
ss
mov
mov
mov
pop
cld
dec
cmp
clc
cs
mov
jecxz
sub
jmp
and
xchg
jecxz
sbb
push
adc
sub
mov
mov
dec
test
sbb
cmp
inc
add
dec
dec
cli
adc
fisubl
ds
cmp
out
mov
scas
addr16
inc
ficoms
push
xor
xchg
dec
mov
dec
inc
lds
xor
jmp
dec
es
andb
inc
pop
adc
bound
pop
cmp
mov
mov
icebp
orl
pop
hlt
subl
ret
orl
inc
push
imul
jnp
and
mov
push
dec
push
jno
sti
sub
test
pop
stos
dec
leave
sarb
ljmp
add
adc
push
dec
ss
push
jle
adc
push
sbb
mov
mov
je
mov
push
insb
mov
bound
inc
push
jns
pop
fmul
mov
fnstsw
mov
or
inc
pop
int
icebp
inc
shl
add
mov
les
cltd
test
iret
sub
sbb
pusha
add
in
ja
push
or
mov
pop
aas
dec
cld
ja
pop
xor
dec
jmp
inc
and
dec
mov
jns
out
jl
mov
xchg
shr
cmpsb
xor
cmp
jns
inc
mov
outsl
jbe
adc
mov
test
cmp
idivb
testb
dec
mov
jno
lret
jmp
sbb
jmp
mov
in
xchg
icebp
sub
add
mov
pop
jl
xor
pop
call
xchg
iret
imull
xchg
ret
test
cli
cmp
lcall
sahf
adc
lock
mov
sti
ja
cmp
arpl
adc
cli
mov
add
mov
in
sub
insb
pop
cmp
push
sub
jl
pop
cld
push
push
inc
loopne
bound
pop
nop
dec
or
andl
cmpsl
dec
xchg
insl
push
test
pop
adcl
xchg
cmc
sti
repnz
sahf
sbb
adc
fst
out
mov
sahf
push
int
sbb
cmp
sti
jb
lds
aad
jo
mov
movb
int3
push
testl
cmc
out
ret
jbe
mov
sbb
lea
addr16
adc
stc
pop
dec
dec
xlat
mov
mov
dec
push
pop
clc
pop
push
pop
rorb
mov
fwait
or
in
inc
les
sbb
ds
aas
test
lret
mov
pop
push
cmp
movl
fidivrl
cli
vxorps
nop
pop
test
es
icebp
push
dec
push
mov
cmp
xchg
ss
xchg
lock
cmp
adc
push
jo
into
xchg
iret
fidivrs
jg
ss
pop
fsubrs
lret
xor
fidivl
stos
cmp
xor
out
sub
sbb
cs
or
lock
xor
cmp
pop
in
rcrb
jl
mov
ljmp
repnz
dec
cmp
jmp
out
dec
adc
out
cmp
cli
xchg
dec
test
dec
mov
popa
imul
jge
cmpsb
jno
bound
cld
or
pop
test
imul
aad
popa
or
mov
inc
xchg
or
sub
notl
lods
pop
mov
aas
outsl
mov
popf
ret
adc
mov
dec
mov
test
out
fcoml
pop
call
fdivrl
or
sbb
data16
insb
unpckhps
dec
imul
pop
jge
nop
clc
mov
inc
imul
cmp
jnp
clc
ljmp
xchg
out
xor
fstpt
insb
cmc
mov
cmp
mov
out
xchg
and
out
dec
mov
test
xchg
imul
outsb
popa
mov
outsb
std
lods
lds
mov
aas
fidivrs
stos
insb
xchg
pop
out
out
cmp
jnp
repz
push
imul
sbb
fdivrl
fwait
imul
imul
sbb
fwait
clc
enter
push
dec
test
cmp
xor
rolb
cmpsb
insb
mov
jge
or
adc
push
jb
sub
jl
inc
dec
lods
and
stc
dec
fimuls
es
popa
mov
fstpl
mov
or
mov
xchg
enter
lret
into
lret
addr16
push
xchg
testl
test
repz
lahf
popf
xchg
jle
int
jae
dec
pop
hlt
mov
mov
jge
testb
fdivp
mov
fstpl
filds
sub
mov
push
rorb
jp
dec
mov
mov
jecxz
mov
push
and
mov
outsl
stc
test
xor
mov
pop
ja
jle
loope
punpcklbw
mov
test
js
insb
push
or
or
test
jl
gs
mov
sub
jno
lods
addr16
or
ja
sub
mov
lods
mov
lret
test
jmp
and
lret
in
cld
lahf
js
clc
and
cli
inc
cmpsl
aas
push
jecxz
mov
cmp
mov
dec
scas
sub
mov
sbb
add
test
mov
fidivrs
aam
xchg
andb
sub
dec
xchg
lods
and
jns
into
cmpsl
fldt
les
add
insb
jb
loop
xorl
shl
jnp
test
arpl
cmpsb
mov
adc
mov
daa
sub
mov
pusha
jns,pt
adc
dec
pop
icebp
sbb
push
jle
pop
testl
or
lcall
mov
cmp
or
sub
fcoml
push
int3
mov
loope
dec
inc
ljmp
cs
icebp
push
nop
inc
pop
pop
repnz
sbb
repnz
jl
stos
cmc
popa
aaa
or
loopne
lods
mov
push
cmp
pop
mov
push
notl
rorl
jno
pop
cmp
jg
jmp
xchg
xor
iret
aas
add
nop
sti
dec
int3
cwtl
cmpsl
loope
ror
inc
sbb
push
stc
jae
popa
cmp
dec
dec
daa
cmp
jle
adc
or
sbb
jecxz
inc
pop
mov
push
jns
jg
jnp
daa
fbld
push
insb
mov
sbb
stc
scas
clc
push
fstpt
jmp
pop
jge,pn
xchg
push
mov
mov
imul
jnp
pusha
inc
and
test
ljmp
and
xchg
xchg
iret
std
xchg
sbb
add
lret
sbb
add
outsl
push
js
aad
and
dec
sub
and
jl
and
out
dec
mov
xchg
clc
ljmp
shrl
push
hlt
pop
jmp
pushf
push
in
imul
test
mov
movsl
adc
xchg
pop
jb
jmp
push
xor
sub
fs
cmc
mov
jnp
iret
fstl
lret
imul
adc
fdivl
mov
arpl
test
into
lahf
je
aaa
addl
jecxz
outsb
mov
pop
sub
xor
mov
cmpsl
in
aam
push
sbb
pop
xchg
jle
in
lahf
mov
adcb
inc
jge
jle
add
push
dec
insb
mov
repz
cs
std
fmuls
fs
fmull
fnstcw
ss
movsl
sbb
cwtl
jnp
jmp
gs
mov
call
pop
sbb
clc
mov
or
dec
or
jg
pop
jecxz
xchg
mov
cmc
jle
inc
mov
test
xchg
mov
sbb
daa
hlt
mov
pushl
ds
int
mov
cmp
fs
xchg
test
xchg
out
dec
cld
push
sar
cld
jg
sbb
dec
push
aam
push
dec
add
popa
add
mov
xchg
mov
pushf
imul
ja
sbb
outsl
sbb
addr16
in
aam
jno
xchg
ja
es
xchg
popf
daa
test
or
shlb
ljmp
sbb
ss
dec
and
pop
rorl
mov
dec
repnz
pop
jbe
cmp
jecxz
loop
jge
xchg
mov
mov
mov
jno
jp
in
mov
ss
out
or
jns
setp
jns
ret
adc
pop
std
ljmp
mov
xchg
pusha
fisttpll
xchg
mov
push
popf
into
rol
js
xchg
or
xchg
inc
jbe
repnz
rcrl
push
fnstsw
out
lret
sub
pop
cld
lahf
cmp
sbb
sbb
sub
cld
lock
xor
add
and
push
add
out
daa
or
adc
cmc
dec
sbb
add
iret
js
pop
out
data16
sub
repz
dec
mov
pop
jl
jg
pop
mov
push
mov
cmc
mov
mov
sub
decl
ja
adc
cmp
jp
jl
loope
test
jo
mov
push
dec
xchg
sbb
imul
or
mov
mov
jae
and
sbb
insb
orb
pusha
xchg
fidivrl
mov
sub
add
adc
jmp
or
popf
sbb
cmc
add
into
mov
out
ror
pop
push
dec
xchg
je
in
mov
mov
sbb
lret
aad
xor
push
cmp
dec
cmp
minps
mull
add
xlat
inc
xchg
enter
in
xchg
lret
gs
and
cmpl
hlt
repnz
pop
cwtl
sub
clc
aad
dec
cmp
mov
push
sbb
fstps
push
jae
cmp
cmp
test
repnz
add
test
jl
pop
pop
test
cmp
movsl
jle
dec
inc
pop
ljmp
cmc
cmp
mov
enter
and
pusha
mov
insb
xchg
lds
push
dec
aas
cmc
cwtl
into
pop
mov
sbb
lods
subb
outsb
lcall
pop
fisttps
xchg
and
popf
jnp
push
pop
lea
xchg
mov
pop
cmp
out
pop
fsubp
pusha
inc
icebp
js
ret
xchg
cwtl
sub
sub
cmp
xchg
or
ja
test
dec
addr16
out
loope
nop
sub
push
out
inc
push
sbb
adc
aas
pop
out
or
mov
jns,pn
call
ljmp
xchg
clc
sahf
dec
aas
cmc
dec
pop
push
testb
fs
xchg
pop
pop
in
sbb
xor
rcll
xchg
xchg
in
jb
lret
ret
aas
sbb
sbb
adc
mov
cmp
xchg
xor
cmp
imul
std
add
cmp
sub
fs
outsb
lret
lods
xchg
sub
xor
sbb
jle
lret
mov
adc
jl
mov
xchg
or
enter
cli
jp
sarb
inc
dec
repz
pop
rcr
cmp
rclb
jp
fsubl
push
mov
lret
jp
jno
sbb
movsl
xor
push
dec
int
mov
leave
sbb
aam
and
mov
lcall
push
and
sti
pop
xlat
pop
pop
xor
mov
fdivl
inc
test
inc
jl
jp
out
pop
mov
cmp
cmp
testb
mov
cld
pop
dec
mov
test
dec
mov
add
jae
add
cmpsl
test
andl
mov
in
add
push
cmpsl
das
mov
data16
cmpsl
lcall
sbb
xchg
pusha
inc
ficomps
pop
push
addr16
push
imul
lahf
push
in
aad
lcall
adc
test
imul
leave
ljmp
mov
mov
popf
pop
xorl
ljmp
jp
xor
imul
and
and
arpl
inc
rolb
mov
iret
jne,pn
xchg
mov
sbb
out
push
nop
cmpsl
clc
out
mov
sbb
or
jmp
mov
xor
mov
cmp
fmul
es
loopne
push
je
mov
aas
cmp
ja
mov
xorb
test
iret
pop
stc
pop
inc
mov
sahf
test
cmp
push
sbb
cmp
ljmp
popf
ja
xlat
shrb
adc
sub
fstps
lahf
mov
dec
xor
push
pop
cmp
dec
fdiv
cmp
mov
push
lcall
mov
sahf
mov
push
nop
jge
enter
sbb
xchg
pop
sbb
testl
mov
fsubl
call
loope
mov
cwtl
adc
stos
popa
aam
outsl
out
shlb
push
push
loop
adc
jg,pn
mov
cmp
idivl
jle
sbb
cs
jnp
addr16
or
jge
cmpsb
mov
ds
xchg
outsl
inc
stos
sbb
lahf
push
push
lcall
pop
das
dec
push
xor
inc
leave
arpl
orb
mov
ret
or
pop
scas
cmp
rcr
fistpll
xlat
rcl
cmp
or
aas
adc
fwait
mov
mov
sub
lretw
fdivrl
and
dec
dec
dec
add
or
cmpsl
sub
mov
adc
xchg
or
or
jle
in
inc
adc
mov
cwtl
add
in
sub
mov
xor
scas
push
dec
inc
push
xchg
pop
lods
sti
rorl
stc
jb
pop
add
popa
iret
pop
inc
xchg
mov
sbb
addl
mov
jns
fisttpl
sub
cmp
imul
inc
cmpsb
imul
cmpsb
imul
rcl
sbb
je
sbb
cmpsb
sbb
adc
sbb
mov
stos
notb
iret
iret
js
jecxz
ss
cmc
or
pusha
test
dec
cmp
imul
sbb
mov
push
sub
sub
pop
imul
popa
aas
mov
mov
sbb
scas
cld
cmpsl
adc
lcall
je
xor
out
pop
push
sbb
mov
cs
xchg
fimull
sbb
out
pusha
into
jl
sbb
add
icebp
ret
lea
sub
stos
gs
add
xlat
pop
mov
ret
sub
or
out
pop
addb
or
shl
cmpsb
mov
adc
js
rcrb
cwtl
xchg
iret
ja
fwait
ljmp
xor
clc
test
mov
bound
por
cmpsl
mov
cli
mov
subl
pop
ljmp
add
stc
fstpt
xor
std
push
dec
jle
int
test
mov
in
iret
add
add
mov
cli
scas
pop
mov
imul
mov
dec
lcall
mov
cmc
cmpsl
mov
hlt
and
sbb
sbb
mov
je
stc
arpl
out
xor
sub
inc
testl
push
jnp
push
push
mov
fcomip
push
sbb
dec
adc
mov
dec
sub
push
rcr
mov
testb
addr16
xor
cmpsl
aad
xchg
mov
dec
mul
xchg
adc
orl
stos
addr16
ljmp
and
dec
das
sub
sbb
mov
push
ds
bound
jge
pop
xchg
mov
lods
imul
pop
mov
jl
pop
sahf
cmp
xchg
xchg
addr16
mov
xorb
aam
add
dec
jnp
cmp
pop
je
mov
das
xlat
sti
fimull
fwait
dec
inc
and
mov
cmp
add
push
in
or
iret
pop
xchg
mov
pop
pop
inc
hlt
sti
lock
addr16
mov
jecxz
test
fimuls
xorl
fwait
adc
pusha
ja
out
pop
dec
les
test
xchg
inc
out
lcall
cmp
aas
push
add
pop
mov
js
arpl
lea
adc
ljmp
nop
pushf
pusha
cmp
stos
outsl
jns
pop
leave
ror
cmp
jmp
dec
inc
mov
mov
pop
push
or
pop
outsl
push
ja
mov
add
cld
incl
mov
in
mov
cmp
mov
fists
sbb
xchg
or
adc
iret
jl
mov
sub
sub
sbb
mov
ss
out
lods
out
mov
inc
mov
imul
inc
push
dec
jmp
xor
into
sbb
sbbl
jl
mov
xchg
es
pop
test
sbb
jns
fistpll
add
xor
mov
iret
mov
popl
xlat
test
rolb
xor
mov
popa
xchg
ret
stos
dec
gs
sbb
pop
shr
cwtl
addr16
sbb
or
xchg
stos
into
cmp
mov
out
mov
es
xorb
mov
cmp
cmp
cmpsb
sbb
pusha
movsb
sbb
mov
jp
lods
mov
jns
inc
mov
mov
push
mov
xchg
rclb
adc
in
mov
inc
mov
mov
mov
lods
dec
add
xchg
sbb
test
test
outsb
ss
lods
mov
jae
ficoms
cmpsl
sbb
test
out
dec
mov
cmovnp
or
nop
movb
xchg
fs
pop
xchg
inc
mov
lret
pop
pop
out
mov
push
dec
pop
cmc
pop
or
arpl
fnclex
cmp
push
test
mov
pop
xor
mov
cmp
je
in
ficomps
adc
ja
sbbb
cld
xchg
push
dec
sbb
jns
orl
mov
test
push
adc
clc
pop
inc
add
and
xor
jo
pcmpgtw
add
adc
sub
xor
arpl
lret
cmc
mov
bound
jne
pusha
aad
pop
sbb
sub
adc
rolb
jle
loop
add
andb
std
pop
fdivrs
sub
adc
fldl2t
mov
shl
dec
test
push
pop
stos
sarl
cmp
push
mov
je
sbb
test
pop
cmp
inc
sti
pop
aam
sti
sub
mov
roll
or
xor
mov
loop
decl
sub
pop
and
push
xor
pop
dec
hlt
mov
add
add
lds
ficompl
lods
popa
popf
insl
jg
sbb
nop
lahf
movsb
mov
aas
jle
lcall
ds
mov
insb
sub
fbstp
test
jae
jecxz
cmp
jle
sub
mov
cmpsb
and
xchg
js
or
dec
loope
sbb
adcb
test
cmc
or
jns
jge
loop
out
adc
mov
pop
add
rcrb
cld
js
cwtl
xchg
pop
or
pop
popa
das
pop
sub
ret
popf
jbe
mov
dec
cmp
xchg
fwait
shl
std
jmp
mov
sbb
fbld
out
jmp
xor
xchg
inc
cmp
sub
in
cmp
out
mov
mov
sti
pop
cmp
loope
cmp
je
and
or
scas
adc
leave
fnstenv
cmp
mov
cs
push
test
fldcw
push
aas
lret
sbb
mov
iret
clc
movsb
in
cmp
push
dec
bound
jge
lods
test
stc
pop
rorb
mov
dec
movsb
in
mov
sbb
jno
cmp
imul
shl
mov
stc
rclb
pop
cli
sbb
push
sbb
fbstp
movb
cli
mov
mov
sbb
in
cmp
mov
xorb
shlb
mov
jle
out
xor
xchg
pusha
or
dec
cmp
cmp
arpl
out
pushl
fistl
mov
sti
pop
shr
adc
test
mov
call
add
xchg
ljmp
inc
dec
push
cld
push
mov
mov
push
mov
movsl
std
hlt
jg
mov
add
xor
dec
or
ja
pop
cmp
aas
rolb
adc
outsl
mov
sub
pop
cmp
ja
negb
popa
fimull
push
xchg
xchg
pop
sbb
cmp
add
or
or
nop
pushf
ja
cli
pop
mov
cmp
sbb
nop
dec
cmp
mov
loope
and
icebp
adc
incb
cmc
mov
mov
cmp
dec
mov
dec
mov
notl
adc
xchg
faddl
push
mov
imull
in
and
jge
jp
or
cmpsl
iret
mov
xor
xchg
sub
xlat
aad
in
xlat
subl
adc
js
cmpsb
add
sbb
loop
out
rcr
cmp
adc
mov
cmp
aas
gs
xor
call
divb
mov
sbb
and
es
adc
dec
cmc
or
xchg
inc
out
xchg
jnp
and
xor
mov
cltd
sbb
leave
ss
decl
sbb
sbb
fwait
loop
jae
or
loop
call
add
mov
push
sti
mov
mov
loope
mov
jne
jns
and
jmp
negb
jo
pop
push
nop
mov
iret
sbb
jg
dec
pusha
push
ret
iret
sub
sbb
outsl
test
sub
dec
jbe
js
fs
dec
sbb
jmp
cmp
mov
push
movb
push
xchg
dec
cmp
lcall
or
in
es
ret
mov
cltd
dec
leave
jl
mov
ljmp
pop
stc
xchg
lods
pop
sub
test
mov
sti
push
repz
jle
dec
stc
roll
or
stos
mov
jl
pop
pop
aam
nop
jp
js
mov
xchg
cmp
pop
sub
or
clc
insb
scas
adc
mov
insl
rorl
sub
jle
xchg
stos
jp
cltd
add
mov
imul
cmp
mov
mov
pop
inc
outsl
repz
xor
fldt
je
jg
cmp
test
pop
stos
in
es
sahf
inc
lahf
xor
and
rcl
jbe
pop
xchg
fs
add
mov
jb
out
sbb
jo
inc
testl
dec
fmuls
jo
ja
xor
mov
xchg
push
outsb
lret
dec
cli
dec
call
inc
mov
es
addr16
out
add
mov
js
dec
test
push
cmp
and
in
insl
popf
mov
pop
test
arpl
adc
stos
cmp
jno
dec
sbb
inc
stos
jbe
or
mov
in
jl
inc
stos
xor
bound
sub
or
inc
jnp
sti
lods
lcall
jnp
push
inc
mov
jmp
jnp
lods
arpl
ja
lea
sbb
dec
loope
cmp
fdivrl
mov
mov
push
mov
mov
pop
test
es
push
pop
mov
ja
xlat
mov
pop
lods
insl
test
and
mov
jl
lds
adc
test
orl
mov
dec
int
test
jae
or
pop
stc
ljmp
test
sbbl
cmpsl
mov
mov
mov
add
push
xchg
add
pop
es
jo
orl
xchg
hlt
stc
divl
les
push
fxch
imul
repnz
sub
pop
and
xchg
push
test
pop
jo
cmp
adc
imul
xchg
push
pushf
push
xchg
mov
mov
leave
sarl
into
jae
inc
cmpsb
lock
sbb
dec
push
sarl
cli
cltd
jne
dec
jle
sub
pop
fs
push
mov
push
xor
mov
cmp
add
enter
movups
pop
scas
enter
fstpt
sub
and
ja
or
pushl
js
out
mov
clc
push
sub
push
pop
cmp
jb
or
xorl
mov
pop
mov
stos
ljmp
test
push
repz
inc
andb
cmc
addl
adc
test
js
clc
int3
dec
movsb
int3
and
loopne
rolb
pop
rol
cmp
lods
jo
test
xchg
mov
insb
mov
mov
rcl
mov
sti
jle
sti
cwtl
add
daa
movsb
xchg
jbe
or
adc
jmp
cltd
mov
es
daa
shll
or
and
jne
mov
or
imul
xchg
lods
push
push
push
test
jge
mov
xchg
imul
sbb
mov
push
cmpsb
xchg
jmp
push
xchg
dec
inc
xchg
sbb
cmp
push
adc
jle
jbe
or
mov
pop
pop
mov
dec
lock
rcll
sub
adc
sub
adc
mov
xchg
or
ret
xchg
adc
in
inc
mov
and
sub
je,pn
jo
in
call
sub
xchg
jno
leave
sub
mov
dec
jg
sbb
push
cmpb
scas
pop
shlb
inc
sbb
fwait
mov
sbb
ljmp
fsubrs
mov
push
imul
jnp
loopne
push
aad
inc
loopne
fisubrl
imull
fsubr
cmpsl
inc
pop
ja
movsb
push
fstpt
push
lods
mov
rolb
pop
imul
inc
in
shr
cmpl
or
jmp
std
test
cmp
insb
ss
add
xchg
or
cmpl
in
out
sub
addl
lods
cwtl
add
jbe
dec
or
or
mov
jge
fs
push
lock
pop
enter
xchg
pusha
shrl
pusha
cmp
shlb
add
and
or
sbb
test
mov
inc
mov
sub
repnz
jo
add
ljmp
jecxz
mull
sub
dec
pop
or
jp
inc
aaa
mov
cmp
pop
or
lods
sbb
cmp
subl
or
test
xor
inc
pop
cld
repz
inc
mov
xor
fidivrs
cltd
loope
mov
sub
mov
sub
xchg
jmp
xchg
mov
push
fnstcw
jge
call
pop
mov
cmp
cwtl
stc
xchg
rcl
popa
mov
cmp
popf
xor
imul
in
sub
xor
lcall
data16
fdivrl
jl
cmp
and
sub
mov
in
cwtl
inc
jge
or
clc
xor
mov
aas
cmp
out
adc
inc
incb
outsl
rolb
lods
xchg
ror
shrl
jo
push
lret
jns
push
bound
or
and
jo
gs
push
ds
test
pop
imul
fcomps
cmp
test
xor
stos
fildl
xchg
pop
insb
mov
mov
or
fistpl
jmp
mov
xchg
rorb
insb
xchg
inc
mov
lcall
jl
mov
dec
cmp
fs
mov
and
mov
sub
mov
mov
mov
fs
imul
mov
outsl
inc
dec
cmpsl
rolb
mov
jle
out
push
clc
or
xchg
pop
pop
jmp
mov
pop
mov
push
movsl
xor
inc
int
or
dec
or
cmp
mov
rclb
fwait
adc
testb
add
xchg
popf
jno
mov
lcall
dec
xor
sbb
aaa
cli
addr16
cmp
or
into
lea
cmp
pop
pop
out
xchg
dec
mov
nop
idiv
js
idivl
sarb
test
stos
cmp
xor
mov
xor
in
dec
hlt
std
xlat
orb
in
push
sti
cmc
out
outsl
xchg
jle
ljmp
divl
mov
mov
stc
insb
sbb
ror
pop
out
je
or
sub
lock
and
mov
sub
add
cld
fdivl
ss
inc
sbb
jnp
add
inc
sbb
sub
jmp
sub
inc
sti
jno
pop
inc
imul
push
js
mov
mull
fidivrl
insb
cmp
mov
dec
sbb
jbe
push
mov
int
dec
inc
mov
mov
in
lods
jge
lea
mov
ljmp
test
dec
push
outsl
jmp
cmc
imul
cmp
ret
pop
outsb
lock
jnp
iret
jg
sbb
mov
and
out
dec
jle
gs
mov
pop
int3
stos
test
sar
sahf
shl
and
cmpsb
jge
add
test
lret
adc
sub
sar
cmp
dec
adc
jmp
test
lcall
jo
jns
jbe
mov
cmp
shl
orl
jmp
aaa
enter
js
jle
bound
cmp
sbb
cltd
sbb
pop
fwait
adc
cli
push
lcall
lret
xlat
test
js
cmc
aam
loopne
mov
movsb
cmp
test
jne
ficomps
inc
mov
fsubrs
adc
sarb
daa
mov
fdivp
sbb
test
dec
xorl
push
push
inc
cmp
cs
pop
cmp
mov
mov
cmp
lea
mov
inc
adc
leave
pusha
push
test
adc
mov
mov
cmp
and
cmpsb
adc
push
out
decb
daa
fwait
xor
fdiv
mov
out
jl
xchg
mov
lds
and
adc
ljmp
jle
or
test
inc
push
adc
out
cld
cmp
lahf
jl
into
rcr
xchg
mov
jecxz
xchg
call
jle
fimull
ljmp
add
pop
mov
ljmp
xchg
idivb
jge
es
and
jge
jbe
xchg
cmp
sub
cmp
pushf
pop
dec
push
jo
mov
mov
pop
sbbb
adc
xchg
popl
movsl
jo
mov
into
addr16
scas
pop
icebp
sub
jo
clc
xlat
fidivrs
fstp
clc
or
adc
sbb
and
popa
dec
sub
outsb
pop
inc
mov
aam
aam
and
fwait
shlb
cmpsb
xchg
cmc
ja
out
mov
popa
or
mov
fwait
ret
inc
cmp
pop
out
jmp
cmc
sbb
mov
mov
adc
clc
cmp
pop
js
arpl
nop
sti
mov
inc
pop
adc
dec
sub
rolb
sbb
out
push
inc
pop
pop
test
mov
iret
loopne
sbb
mov
ss
and
in
add
mov
sub
jp
mov
pop
call
or
jle
cld
add
sbb
int3
dec
cmp
cmovae
jbe
negl
add
mov
mov
inc
mov
sub
fs
repz
cli
dec
stos
daa
fwait
push
arpl
jp
fldt
xchg
jns
mov
sti
ja,pt
xchg
sbb
sub
into
jle
xchg
in
mov
ja
test
icebp
lcall
xchg
or
xchg
dec
sbb
xchg
push
xchg
mov
das
inc
xchg
mov
dec
cmpsb
lods
jle
outsl
push
jne
sbb
ja
fcmovb
fsubs
insb
jl
sub
xor
out
sbb
adc
mov
mov
shll
add
jno
ret
cmc
pop
add
jne
div
mov
adc
jl
popa
sahf
pcmpeqw
xor
aam
and
lods
ds
in
push
popa
mov
xchg
in
push
test
mov
xchg
rcrl
rorb
loop
push
addb
or
mov
mov
out
lret
mov
mulb
movl
dec
cmp
aas
xor
testl
add
pop
sub
or
sub
arpl
push
dec
jmp
sub
xchg
popa
inc
pop
dec
jae
cmp
add
jmp
cmc
sbb
mov
andnps
decl
cmpsl
push
jle
mov
test
push
pushf
js
sbb
iret
fists
lods
fdivl
cmp
mov
pop
mov
popa
shrl
push
push
jle
sbb
push
or
jb
arpl
jnp
push
fwait
je
adc
sbb
pop
inc
sbb
sbb
idivl
add
lahf
push
out
or
jns
and
jae
jae
cmp
call
sub
mov
or
pop
mov
or
inc
fisubl
cmp
add
jp
mov
cmp
and
push
decb
push
lahf
dec
cmp
popl
mov
fisubs
or
cmc
mov
cmp
pop
lds
or
cmp
adc
daa
pusha
cmp
adc
cld
pop
cs
pop
shlb
imul
dec
test
cmp
mov
sbbl
or
sbb
dec
lds
jg
push
jg
test
cmp
test
jge
mov
mov
cmp
pop
repnz
and
cmp
int3
in
pushf
imul
add
jmp
push
in
cmp
mov
cld
jne
daa
push
repnz
pop
cmp
out
dec
daa
or
addb
in
imul
sbb
mov
outsl
mov
test
idivl
mov
sarb
call
stos
dec
mov
mov
cmp
addr16
mov
xchg
stos
mov
les
sub
push
xchg
adc
inc
int
dec
mov
imul
shlb
push
imul
jmp
ret
cmp
filds
mov
popf
data16
data16
cmpsb
fisubl
sbb
or
adcl
fisttpl
test
iret
dec
or
lcall
fistpll
jns
popf
pushf
flds
or
sbb
jbe
inc
sub
fwait
xchg
jbe
mov
mov
loopne
jge
mov
ffreep
cmp
mov
hlt
or
dec
sbb
int3
movb
std
pop
adc
lea
cmp
pusha
push
inc
push
mov
and
xchg
in
xchg
lock
pop
mov
add
pop
mov
jmp
xchg
clc
dec
ss
aaa
mov
add
inc
sub
inc
pop
xor
adc
insb
repnz
add
rcrl
cmp
into
mov
jb
push
add
lret
faddl
cltd
xchg
cmp
mov
std
mov
dec
stos
cmc
rcrl
ret
push
inc
cmp
cmovo
lds
dec
add
insb
icebp
pop
mov
lods
sbb
push
cmpsb
xchg
shl
xor
cmp
movsb
loopne
fcoml
mov
sub
ja
int3
fisttpl
shrl
cmp
pop
mov
jno
pop
nop
addr16
pop
mov
test
lods
pop
jo
idivl
xchg
xlat
cmp
js
cmp
or
test
mov
lret
hlt
aam
mov
fwait
arpl
out
pop
outsl
mov
push
mov
out
xor
out
cmp
push
aas
cmc
mov
jge
cltd
mov
mov
addr16
pop
test
inc
mov
xor
mov
leave
ss
iret
xchg
pop
sbb
aaa
jnp
lcall
sub
push
jo
cmp
pop
lds
push
lret
add
or
inc
cwtl
int3
mov
or
xrelease
cmp
or
ds
lahf
int3
jle
lret
or
adc
cmc
add
out
push
cmp
int3
pop
pop
stc
jp
iret
push
scas
clc
pop
sbb
cmp
inc
jne
sub
xchg
hlt
sub
lock
add
cs
mov
movb
hlt
mov
adc
cmpsl
mov
adc
add
xor
outsl
cmp
cmp
les
cmp
outsb
dec
shr
mov
cmc
jne
jno
loope
pop
test
push
cmp
repnz
mov
mulb
jne
fstps
popa
ja
cmpb
repnz
or
add
push
loope
aas
inc
and
jmp
test
or
push
leave
ds
adc
push
mov
subb
jl
pusha
xor
fwait
mov
outsl
mov
mov
dec
pop
or
push
fidivrl
pop
sub
inc
dec
fidivrl
es
popf
mov
jp
clc
cmp
xchg
mov
sub
movsb
jmp
ret
and
cmp
pop
xchg
sbb
and
xchg
xchg
jg,pn
mov
stos
cmp
push
mov
in
cs
out
popa
or
xchg
insb
lods
hlt
fists
mov
pop
shr
and
push
pop
mov
loope
stc
push
jle
sbb
pop
cmp
fldcw
sbb
xchg
push
frstpm(287
mov
stc
pushf
push
mov
es
and
aas
adc
ljmp
ds
sbb
loop
push
adc
cmp
mov
fmulp
hlt
ret
mov
jle
adc
cmp
clc
xor
inc
cmp
and
stc
mov
repnz
shl
jae
fnstenv
sbb
sub
sub
xor
push
data16
lods
mov
dec
xlat
xor
xchg
movb
js
cmpsl
jmp
cld
sub
aam
aad
inc
or
fs
rcl
xor
pop
xchg
inc
fcoml
out
dec
sarl
sbb
insb
jle
adc
fs
clc
mov
pop
push
xchg
push
aam
add
mov
dec
dec
jnp
jg
rcrb
mov
xor
sub
jg
jae
xchg
rolb
sbb
test
mov
mov
mov
daa
jmp
repnz
idiv
fs
int3
cmp
mull
pop
dec
out
pop
jmp
jg
jg
jns
mov
lcall
sub
mov
jmp
push
dec
xchg
in
xchg
jb
ret
cltd
sti
mov
faddl
inc
add
pop
mov
mov
xchg
fs
sub
push
xor
mov
lahf
add
push
mov
adc
xor
fnsave
sub
fidivl
fistps
icebp
mov
sub
jge
pop
lods
insb
sbb
clc
cld
movsb
jg
add
jbe
sahf
dec
jmp
lods
or
test
xlat
mov
cmc
push
jns
xchg
mov
pop
fwait
jnp
push
repz
cmp
or
ret
jbe
es
and
xchg
mov
mov
movl
sbb
stc
outsl
and
inc
xchg
sub
mov
and
mov
in
mov
sub
jge
divl
fbstp
jnp
insb
add
jecxz
mov
xchg
mov
test
xchg
add
push
call
incl
inc
addr16
fistl
adc
mov
mov
mov
cmc
negl
sub
mov
cmp
ds
add
loopne
sbbb
sbb
pop
sbb
ds
add
push
jae
arpl
mov
test
sbb
addb
sbb
movsb
pushf
sbb
lods
mov
xchg
shrl
dec
add
add
std
push
pop
int
xor
add
or
or
scas
push
cmpb
mov
jp
mov
pextrw
subl
and
pop
lock
std
xchg
fwait
cmp
aas
xchg
daa
pop
dec
adc
test
lcall
subl
repnz
xor
fistl
les
aad
push
imul
jnp
loop
fucomp
sub
add
sbb
adc
mov
clc
and
dec
xchg
pop
jns
out
pop
xor
pop
int3
fidivl
les
icebp
pop
lret
bound
and
push
dec
loopne
inc
stc
test
fs
push
sub
push
sarl
pop
iret
ja
jecxz
call
pop
mov
cmp
jbe
mov
je
pop
push
jle
fs
bound
cmc
push
aad
cmp
adc
iret
pop
fsubrl
sub
push
dec
stos
scas
ror
out
popf
mov
scas
mov
mov
scas
cmp
push
mov
sbbb
pop
rcrl
xor
out
jae
xlat
xor
mov
outsl
dec
push
sub
dec
js
jae
pop
xor
xor
push
push
mov
test
sahf
fiaddl
mov
push
sub
mov
jnp
daa
stos
pop
inc
add
shll
daa
push
in
daa
loope
xchg
stc
or
inc
adc
adc
cli
jmp
lcall
addr16
add
movsb
push
ss
shll
out
in
loope
or
js
pusha
addr16
arpl
daa
ljmp
jmp
lret
mov
ret
in
mov
cmp
add
xorl
xchg
out
adc
mov
lret
aad
push
test
repnz
mov
push
xlat
lcall
dec
push
pop
addr16
mov
cmp
pop
jecxz
ja
push
push
sub
clc
pop
es
mov
iret
sti
mov
and
sbb
ds
sbb
add
movsb
mov
add
mov
xchg
mov
push
jmp
pop
mov
dec
popa
jo
js
fbld
cli
jp
or
lods
lods
sti
es
xchg
ss
les
sbb
loop
pop
xchg
jle
stos
popa
xlat
cmp
pop
shlb
pop
sbb
cwtl
in
push
mov
fidivl
push
cmp
outsb
cmp
imul
add
jmp
pop
xchg
mov
insb
fistl
pop
dec
aad
add
jmp
sti
xor
dec
in
or
test
aaa
stos
cmpsb
fimuls
pop
cli
add
in
idivb
or
xor
inc
fmulp
lcall
sbb
fistl
jecxz
movsl
adc
and
push
and
std
aas
mov
dec
adc
and
pop
mov
ljmp
test
mov
jo
inc
mov
pop
ficomps
divb
inc
push
mov
cmp
pop
push
push
call
cld
and
pop
mov
pop
icebp
jg
mov
ja
adc
mov
sarl
daa
xor
jecxz
fisubrs
scas
addl
in
incb
inc
insb
dec
orl
xlat
test
xor
push
pusha
out
ljmp
pop
mov
es
fiaddl
adc
ljmp
enter
pusha
clc
xchg
in
push
push
lods
test
sbb
fnsave
dec
insb
test
ds
mov
pop
in
icebp
icebp
dec
loope
push
leave
js
ss
dec
or
test
push
mov
cld
mov
cmp
repz
out
xchg
mov
sti
sbb
mov
out
xor
fimuls
xchg
cmpsb
pop
push
mov
loope
outsl
rcll
inc
jb
test
sbbb
popa
idivb
in
add
sbb
bound
sbb
mov
scas
out
rorb
std
push
add
mov
daa
xor
movsb
rcrl
push
mov
mov
mov
loope
mov
fdivrp
jl
cmp
test
stc
cmp
shrl
inc
mov
dec
lret
xor
mov
repnz
and
cltd
bound
mov
dec
lret
dec
xor
jge
mov
cmp
mov
js
jp
mov
cli
cmpsl
lds
jnp
movsb
jb
mov
cmp
xor
fs
sbb
jle
xchg
lea
add
inc
outsl
mov
jns
cli
and
int3
mov
xor
mov
aam
dec
or
and
icebp
sub
hlt
lcall
mov
sbb
jg
jns
stos
int
adc
jl
jbe
or
popl
testl
pop
dec
sarb
mov
icebp
ja
dec
xchg
test
repz
pop
sbb
xchg
lret
jl
dec
into
mov
inc
test
hlt
lods
mov
mov
add
in
jg
cmpsb
je
ret
test
xchg
js
push
hlt
pop
int3
stos
mov
cmp
sub
adc
dec
addr16
cmp
jecxz
cwtl
scas
fisttpll
sub
js
mov
cwtl
add
jle
lcall
out
xor
push
lods
push
dec
movsb
mov
xor
jle
cmp
sbb
adc
lahf
test
inc
ffreep
out
std
push
sbb
jmp
pop
push
fcomi
sbb
jns
pop
mov
jo
sbb
out
lret
aam
scas
or
fisttps
cltd
jp
and
insb
sbb
leave
dec
mov
roll
arpl
packssdw
cmp
fdivrl
xor
inc
pop
aas
push
mov
addl
mov
mov
cmp
inc
dec
iret
jl
inc
mov
or
sbb
insb
cmp
sub
cmc
cmp
or
ljmp
pop
in
in
or
testl
xchg
xchg
sub
push
in
push
dec
jno
outsb
int3
or
movsb
orl
adc
call
adc
jle
sarb
jl
mov
adc
call
jecxz
mov
mov
fs
pop
push
pop
cmc
sbb
pop
insb
repnz
ja
jmp
std
scas
push
xchg
pop
mov
lret
xchg
mov
mov
std
push
fwait
jnp
jae
or
loope
ret
arpl
jecxz
in
in
pusha
mov
shll
jecxz
mov
ljmp
jge
push
mov
adc
jmp
cmpsb
add
dec
icebp
adc
loop
xor
push
cmc
imul
push
lea
or
inc
sub
ja
test
sti
call
dec
fndisi(8087
incl
sti
outsl
xlat
jle
push
pop
pop
xor
mov
jmp
fnstcw
lock
and
pop
mov
ds
clc
cmp
mov
push
movsl
lret
lahf
or
or
mov
mov
xor
dec
dec
inc
mov
pusha
sub
adc
lret
in
cmc
xchg
mov
jge
bts
mov
cmp
mov
xor
mov
pushf
jl
lods
dec
push
cmp
mov
stc
dec
lods
call
mov
and
sahf
repnz
movsl
fxch
fdivrp
jmp
xchg
jle
sbb
mov
sub
mul
inc
cmp
or
jnp
out
lods
mov
add
idivl
cmp
inc
push
xchg
cmp
sbb
bound
lret
pop
js
xor
sbb
jge
xlat
mov
dec
lret
insl
cmp
jo
xor
mov
sbbb
inc
sbb
mov
out
or
lds
insl
movsl
test
inc
out
out
lods
mov
mov
push
pop
mov
xlat
call
push
in
push
fcompl
and
or
mov
push
inc
sub
idivb
add
pop
test
add
jle
iret
mov
pop
and
pop
ret
sbb
mov
testl
jmp
or
popf
jle
fsincos
orl
pop
xchg
fwait
xchg
or
adcb
pop
inc
xlat
sbb
sub
or
jmp
lahf
and
mov
dec
sub
adc
xor
repnz
push
pusha
cld
push
bswap
orb
sub
negl
aas
mov
and
out
cmp
or
or
mov
cmp
add
jl
xchg
push
ss
sub
popa
scas
rep
cmp
sbb
fwait
jge
mov
pop
jg
ja
and
cmp
cmp
rcr
aas
or
adc
out
mov
adc
stos
jle
cmc
fcoml
aam
and
les
jne
jg
inc
jl
imul
mov
mov
addr16
lcall
jp
sbb
inc
testl
xchg
call
sbb
inc
fld1
mov
add
or
ficomps
xchg
insl
pop
in
inc
sbb
loop
inc
sbb
ja
mov
negl
orb
fcmovb
add
ja
adc
jmp
jo
mov
aas
mov
dec
enter
xchg
cmp
enter
adc
ja
add
test
mov
rorl
or
pop
out
push
sub
jge
cltd
movsl
cmp
mov
hlt
std
xlat
js
xchg
bound
push
stos
xchg
push
int
add
add
rorb
cmp
dec
mov
imul
mov
add
rcl
inc
mov
sbb
out
test
push
daa
dec
aad
pop
fidivrs
inc
sarl
shlb
push
or
dec
xchg
xor
or
sarl
push
pusha
mov
xchg
mov
xor
sub
movsl
cli
mov
ret
je
cltd
sbb
dec
xchg
pop
cmp
fnstsw
and
jecxz
adc
lods
add
lret
lahf
push
cmp
dec
bound
out
daa
jne
cmp
dec
sahf
fmulp
push
lret
jle
cmc
pop
jo
pop
fistpll
test
fldt
rcl
stc
fimull
test
test
dec
dec
test
rcll
pop
mov
pop
pop
sti
stos
pop
mov
popf
mov
int3
push
push
inc
and
adc
jns
out
cmpsb
pop
and
sub
inc
cli
sahf
out
popf
test
push
sbb
pop
xor
sarl
lahf
dec
sbb
mov
cmp
cmpsb
lret
gs
js
adc
push
xor
cld
cmp
xor
daa
lret
cmp
mov
xchg
arpl
dec
sti
cmp
jmp
pop
call
cmp
sub
jnp
xorb
mov
fs
ljmp
dec
popf
mov
sub
xchg
iret
add
mov
outsb
sbb
jp
fidivrl
jle
sbb
sbb
movlps
movsb
dec
out
aas
cmpsl
cltd
add
jp
or
btc
arpl
xor
or
imul
icebp
stos
dec
jmpw
lods
hlt
adc
outsb
push
lret
dec
add
addl
pop
cmp
cmp
nop
xlat
out
inc
cmpsl
les
mov
sub
outsl
add
fdiv
cli
int3
std
xchg
in
pop
or
leave
mov
pushf
imul
in
add
gs
dec
clc
jbe
mov
mov
in
sarb
idivl
xchg
test
stos
mov
arpl
je
iret
mov
push
stc
into
inc
stc
cmp
addr16
jnp
cmp
stc
dec
xor
cld
push
xorl
scas
int
sbb
add
cmp
push
outsl
xchg
iret
pop
sub
xor
mov
jne
test
enter
fstpt
inc
aas
js
jg
ret
jnp
push
inc
xor
xchg
cmp
iret
repnz
push
addl
dec
std
xor
dec
pop
mov
inc
and
sbb
add
mov
or
sub
push
int3
jae
fcmovnu
pusha
or
andl
or
imull
es
adc
adc
outsb
or
sub
lret
movsb
into
lods
push
jmp
mov
rcrb
cmc
cmp
cltd
add
pop
pop
js
xor
mov
std
jns
push
stos
js
mov
sbb
fwait
mov
or
test
pop
out
dec
mov
xor
add
pop
cmp
push
ret
ret
dec
bnd
adc
jb
jg
pop
leave
sub
push
xchg
or
out
adc
jp
adc
mov
xchg
fnstcw
mov
outsl
jle
cld
sub
sbb
mov
mov
xchg
cld
psubq
sbb
cmp
jmp
jnp
popf
cmp
inc
or
fxch
nop
daa
dec
and
ljmp
add
adc
cmp
arpl
dec
fisttpll
cld
jecxz
into
pushf
mov
es
or
pop
xchg
cmp
and
imul
or
pusha
shrl
and
imulb
daa
call
gs
pop
sti
jmp
addl
dec
lods
loop
fmull
ds
pusha
and
xchg
pop
pop
addr16
xorb
outsl
or
data16
fcmove
incb
push
sbb
add
test
leave
repz
mov
sub
sub
cmp
adc
loope
pop
pop
sub
sbb
mov
xchg
cmp
sub
jmp
pop
scas
xor
push
idivl
jl
mov
or
xchg
mov
cmp
jg
cmp
and
pop
mov
xchg
mov
sbb
out
jae
sbb
test
and
enter
clc
jb
incb
imul
sbb
mov
xadd
or
push
shlb
adc
popf
mov
sbb
add
and
sarl
aad
mov
gs
jb
adc
dec
xlat
pop
cmp
dec
mov
dec
pop
xchg
mov
in
xchg
inc
loop
ds
outsb
inc
cmp
dec
push
inc
mov
add
jb
sbb
adc
adc
cmp
arpl
test
movsl
outsb
neg
orb
push
mov
cmp
xchg
addr16
jae
ds
push
mull
or
notb
pop
cmp
out
jmp
stos
lret
imul
pop
pop
loopne
daa
iret
int3
mov
or
out
add
lods
mov
clc
ss
inc
aad
jge
xchg
ss
push
adc
xchg
or
dec
fisubl
xor
add
out
inc
mov
adcl
scas
fistpl
inc
and
stos
js
arpl
jo
dec
dec
shl
aam
dec
ljmp
or
ds
sarl
cmp
sub
xchg
ljmp
jnp
fstps
adc
mov
inc
sub
cmpsb
cmp
fs
jns
neg
lods
mov
inc
out
or
popa
xor
in
int3
push
add
xchg
ljmp
adc
popf
sub
jmp
push
pop
daa
outsl
jge
push
inc
leave
dec
repz
and
ljmp
ljmp
shll
pop
fs
push
inc
mov
inc
xchg
dec
jl
sbb
pop
cmp
cmp
int3
mov
fcmovnbe
jg
inc
pop
adc
sbb
int3
adc
popf
push
push
add
jbe
mov
mov
mov
or
mov
ficoms
sbb
dec
cmp
shll
int
jmp
sub
push
leave
fs
inc
jb
fsubs
sub
dec
push
sub
lea
jae
mov
aas
js
test
mov
cmp
xchg
js
outsb
movsb
mov
jo
push
push
pop
clc
addr16
jl
les
mov
loop
mov
sub
arpl
sub
add
das
sub
jg
jg
fdivl
std
sbb
jle
add
jecxz
data16
xor
loope
sbb
ljmp
dec
xchg
out
adcb
mov
imul
or
sub
adc
pop
ret
test
dec
and
ret
ret
popf
mov
daa
pop
pop
sbb
out
outsb
mov
jmp
or
adc
sar
lds
jle
sub
cltd
in
rcr
sti
fiadds
shll
lahf
fldenv
xchg
add
gs
mov
sub
or
adc
and
mov
xlat
subl
jnp
ja
push
out
cmc
pusha
mov
mov
das
int3
dec
scas
movsb
movsl
fidivl
aas
sub
xor
jmp
push
lods
loopne
mov
fnstsw
mov
mov
lods
daa
mov
xor
outsl
push
xlat
push
fwait
jecxz
fdivr
adc
ret
push
ljmp
mov
dec
icebp
fs
mov
clc
lds
test
push
mov
aad
push
loop
jne
adc
mov
scas
sub
jg
jl
gs
mov
jb
sti
sbb
sbb
rcrl
fcmovnu
mov
cmp
cs
jns
lock
mov
cmp
jecxz
lcall
dec
lret
out
ljmp
sbb
ja
mov
jns
lret
dec
xor
cltd
fs
dec
imul
pusha
pop
pop
mov
out
jl
xchg
dec
jnp
push
pop
mov
insb
lahf
bnd
pop
stc
cmp
rclb
mov
pop
and
jg
jl
push
loopne
jnp
xchg
movaps
adc
loopne
lods
int
or
fstl
roll
gs
ja
inc
stc
xor
cmp
mov
pcmpeqb
push
notl
mov
or
call
lret
sti
ja
xchg
mov
fsubl
cmp
lcall
inc
mov
sbb
cmpsl
jnp
jns
mov
call
push
cwtl
mov
sbb
pop
shll
mov
adc
test
fisttpll
ja
ljmp
jns
or
push
test
dec
cmpsb
fdivl
out
add
call
je
gs
dec
jae
daa
imull
xchg
mov
clc
or
dec
negl
jb
inc
arpl
jns
and
sbb
mov
add
inc
push
mov
xchg
addr16
push
push
mov
leave
mov
fcoml
push
mov
sarl
mov
mov
cwtl
push
sub
push
add
pop
sbb
aas
test
xor
pop
mov
lds
sti
mov
mov
sbb
mov
mov
fcmovb
dec
les
push
sbbl
pop
inc
outsb
pop
daa
pop
add
mov
lcall
sbb
ja
test
xchg
xor
sub
je
icebp
scas
jl
inc
lret
inc
xchg
or
mov
pop
or
dec
push
xchg
cmp
sub
mov
ret
pop
popf
mov
bound
push
lods
cmpsl
aad
jno
ja
xchg
fwait
mov
jne
nop
repz
jns
push
mov
add
jne
out
mov
mov
sbb
insl
cmp
xchg
mov
testl
js
mov
scas
pop
add
jmp
adc
addr16
cmpsl
mov
movb
pop
adcb
adcb
lods
xchg
imulb
mov
loope
std
pop
mov
test
or
jp
pop
adc
pop
inc
call
mov
lods
bnd
bound
insb
leave
popa
pop
cli
cmp
xchg
add
rep
mov
out
mov
xchg
arpl
inc
or
fnstsw
push
mov
out
out
or
cmp
lret
add
cmc
mov
out
gs
out
insb
sub
adc
xor
fsts
and
xchg
repz
movl
dec
clc
ret
xchg
out
lret
xor
adc
movsb
xor
daa
cmpsb
pop
inc
ss
pop
jle
mov
fcoms
push
xchg
das
push
jge
xlat
loop
test
jns
jns
out
cmp
sbbb
adc
iret
fcomps
mov
out
rclb
or
insl
push
lret
fcmovnbe
fimuls
dec
add
sbb
hlt
xor
outsl
push
pop
mov
cli
sbb
je
dec
dec
cmp
mov
xchg
add
sbb
js
outsb
fwait
test
testl
cmp
int3
add
test
sbb
mov
push
cmpsb
test
push
jns
notl
lds
jnp
push
mov
dec
pop
jl
fdivs
mov
or
jmp
jg
mov
iret
gs
test
inc
pop
es
leave
out
aaa
sbb
sbb
cmp
push
imul
loop
aas
dec
pop
fs
flds
pop
cmp
mull
lret
xlat
xchg
pusha
jp
xchg
sub
mov
jecxz
jnp
and
xor
xor
jae
mov
mov
clc
adc
and
jnp
rorb
jne
fadd
fwait
out
and
xchg
pop
ss
out
push
int3
cmp
daa
fidivl
loopne
jbe
mov
xor
rorl
mov
xor
or
pop
mov
sbb
jge
and
lret
dec
or
rolb
cli
mov
mov
dec
jne
leave
push
or
sub
add
dec
fisubl
test
xor
mov
inc
dec
and
inc
stc
add
loope
mov
dec
jns
int3
int3
inc
mov
mov
cmpsb
ja
cmp
mov
out
cltd
shlb
in
jns
jnp
out
pop
outsb
hlt
in
dec
daa
xor
or
mov
cld
pop
mov
mov
jle
jecxz
sbb
andl
dec
loopne
mov
lods
shll
out
jns
bound
outsb
les
lret
mov
addb
cmc
arpl
push
or
dec
leave
mov
cmp
sub
sub
cli
inc
jl
xor
jle
cli
rorl
jmp
or
sti
add
popf
sub
inc
push
js
xor
jge
dec
xchg
js
leave
mov
les
xchg
enter
xchg
imul
push
inc
sbb
cmp
or
adc
mov
dec
jle
ljmp
aas
mov
pop
lods
or
mov
orl
add
arpl
mov
repnz
mov
fsts
jge
cld
popa
in
ret
ds
push
adc
jnp
in
rcl
mov
adc
pop
jp
loope
xor
add
and
push
xchg
xor
mov
sub
dec
dec
paddsb
sub
lret
arpl
adc
stos
add
cmp
mov
dec
cmc
pop
pop
ljmp
sbb
out
xchg
jl
sbb
ja
fwait
sub
stos
cmp
jae
pop
cld
mov
movsb
imul
sarl
jo
mov
rclb
jb
leave
test
cmp
clc
sbbl
push
dec
push
movl
imulb
jg
lahf
lock
inc
test
jle
movsl
push
movsb
negb
outsl
mov
push
push
jle
dec
cli
test
pushf
ret
cmp
out
imulb
ds
test
jnp
dec
aas
ljmp
mov
lods
jmp
mov
push
loop
xchg
imul
mov
stc
orl
cmp
pop
negl
xchg
stc
add
cmp
push
pop
inc
sub
inc
fadd
insb
dec
cmp
xchg
pop
pop
xchg
adc
movsl
mov
cmp
jg
jp
and
push
int
mov
dec
std
mov
ss
sub
pop
push
ja
push
push
push
pop
aam
lds
add
lret
es
or
movlps
mov
sbb
in
incl
push
aam
sbbb
cmp
divb
sbb
push
idivl
iret
pop
add
fistpl
xor
les
pop
sub
push
arpl
sbb
dec
scas
int
dec
into
cmp
test
push
ss
jge
dec
or
cmp
cltd
add
inc
bound
nop
xchg
icebp
cvtps2pd
jmp
movsl
inc
sub
iret
mov
or
mov
vmwrite
outsl
cs
xchg
xchg
daa
scas
gs
jns
repz
dec
push
mov
cmp
jae
or
in
dec
or
or
sub
jg
xchg
call
inc
xchg
popf
stos
push
arpl
popf
xchg
fimull
cltd
popf
cmpsl
jbe
cmp
add
mov
incl
pop
dec
pop
cmc
inc
xchg
lods
out
pop
call
adc
push
fst
jnp
iret
shll
mov
mov
lea
mov
xchg
sbb
and
push
out
ret
adc
xchg
std
add
scas
jmp
cmp
mov
mov
in
dec
stc
cmp
fs
adc
dec
enter
sbb
popa
pop
outsb
js
fnstcw
add
pop
imul
jmp
xor
push
les
adc
sti
in
jp
bound
jl
stc
icebp
xchg
test
or
js
stos
ffree
int
cmp
mov
rorl
imull
jno
add
push
pop
mov
adc
into
push
mov
cmpl
inc
ljmp
pop
cmp
xchg
add
push
inc
mov
in
cmpsl
dec
test
icebp
or
outsb
cmp
push
xchg
push
xor
les
or
cmpsl
adc
clc
cmpsb
dec
or
out
insb
cmp
sbb
mov
imul
jecxz
pop
cmpsb
xchg
jle
xor
sub
js
orl
jge
pop
push
xlat
into
mov
pusha
imul
cwtl
pusha
pop
into
lea
popf
imul
scas
insb
inc
ljmp
pop
test
in
add
xor
mov
addr16
and
push
push
and
shl
xchg
test
sbb
ret
push
into
xchg
int
or
mov
fsubs
jp
inc
jo
xchg
dec
mov
adc
out
jb
cmp
notl
xor
scas
ret
lods
ja
in
stos
xchg
push
inc
test
add
mov
push
push
lods
push
cmp
mov
popa
cmp
cmpl
fcomps
scas
fadd
or
inc
test
ja
test
repnz
out
push
jo
mov
rol
push
jle
mov
mov
mov
movb
dec
cmp
cmpsb
inc
adc
cmp
mov
aad
cmp
or
xor
dec
sbb
jge
ljmp
clc
cmpl
mov
dec
aad
xchg
jecxz
test
test
pop
add
iret
popf
pusha
inc
sbb
mov
test
sbb
push
mov
mov
scas
test
call
jno
popf
push
sbb
push
xchg
gs
mov
icebp
lahf
cmp
adc
fwait
addl
testl
jle
xchg
aad
xlat
mov
cmp
dec
adc
mov
call
les
pop
fdivrl
iret
dec
dec
jg
test
inc
scas
inc
mov
xchg
sub
lahf
imul
sub
push
mov
sub
mov
cwtl
out
cmp
jae
cmp
out
xchg
sbb
aam
mov
mov
fidivrs
sbb
jns
outsl
lret
sbbl
repz
jp
sahf
cmp
mov
push
mov
inc
dec
mov
inc
sbb
imul
push
shll
pop
sbb
xchg
decl
pushf
lods
faddl
cmp
repz
or
mov
jecxz
sti
inc
stos
pop
sahf
pusha
jp
xor
gs
imul
cmp
mov
aas
into
inc
repz
loope
loop
js
xchg
sub
fs
or
and
int
sub
sub
push
and
sbb
push
dec
dec
sahf
fsubl
bound
xchg
push
jg
mov
pop
and
fmulp
fwait
daa
mov
fmull
cli
pop
test
sub
fbstp
js
dec
lea
and
or
jl
fs
or
loopne
in
cmp
js
adc
inc
jle
cmp
xchg
pop
out
jne
push
xchg
cld
iret
imul
cmp
daa
pop
push
les
mov
push
adc
dec
cmpsb
sbb
cmp
jg
fisubrs
jno
mov
dec
push
testb
nop
into
pop
ss
jg
nop
stos
xchg
inc
mov
dec
push
jge
inc
fldcw
push
xor
inc
xchg
mov
pop
xchg
cmp
jge
test
add
in
sbb
pop
push
mov
sub
mov
sub
jl
push
pop
jmp
add
xor
loop
cmp
cmp
inc
or
stc
jae
or
in
jns
lds
xlat
js
dec
scas
out
faddl
add
dec
call
or
je
inc
test
gs
jno
dec
lds
bound
in
jnp
cmpsb
incb
push
stos
sub
in
mov
dec
inc
jle
ficompl
test
loop
pop
lcall
cs
imul
adcl
sbb
jmp
rolb
pusha
jp
and
jmp
test
inc
subb
xor
lods
xor
sahf
xor
pop
mov
xchg
orl
mov
repz
add
dec
pop
xchg
adc
mull
ret
repnz
dec
aam
and
ljmp
mov
pop
and
push
js
sub
movsb
cwtl
mov
stos
insb
sbb
sbb
lret
dec
xchg
push
cmp
loop
js
mov
stos
cmp
jae
sbb
aam
inc
add
xchg
push
cmpsb
mov
mov
mov
adcb
and
ja
jo
fsubrs
cli
mov
dec
enter
imul
cld
fisubs
xor
and
push
loop
mov
sub
fistpl
mov
ja
pop
jge
pop
cmp
and
xlat
mov
pop
je
cmpsl
adc
aaa
mull
fistps
push
call
dec
push
incb
xor
ja
pop
lods
addb
cld
popf
insl
in
fs
fdivs
andb
add
fdivrp
fld
inc
mov
mov
test
sub
pop
mov
fcmove
in
adc
test
subl
cltd
jl
jmp
test
je
sbb
pop
mov
cmp
test
inc
ja
jg
test
test
mov
or
mov
cmp
mov
cmp
push
js
daa
test
xlat
sbb
cmp
test
inc
pop
out
lock
mov
out
test
imul
xchg
test
mov
xchg
push
pop
dec
mov
sbb
mov
test
js
scas
pop
inc
test
mov
mov
test
test
sbb
rclb
test
mov
mov
mov
or
jecxz
pop
xchg
fmull
pop
jg
xchg
mov
int
cmp
push
loop
testl
add
test
test
mov
sbb
dec
sbb
leave
test
sbb
stc
or
or
add
add
add
add
add
ret
sbb
sbb
test
punpckhwd
xchg
sbb
test
orl
sar
idivl
push
jp
sub
cmp
sub
test
sbb
call
adc
jg
adc
fidivrs
mov
imul
dec
mov
fdivr
fs
xchg
sarl
imul
jg
mov
dec
cmp
sti
add
loopne
add
notl
xlat
pop
sbb
js
mov
sbb
adc
movsb
ja
jge
sbb
add
pusha
cmp
pop
jl
cmp
jae
sarl
ffree
js
loopne
jae
push
jnp
add
arpl
filds
cmp
mov
xchg
cmp
enter
cmpl
pop
jl
cmp
add
push
cmp
cld
aas
mov
cmp
fwait
mov
dec
mov
int
arpl
mov
cmp
sbb
fwait
cmp
sbb
lcall
in
inc
pop
clc
fstpt
inc
or
adc
sbb
or
imul
mov
xor
push
xchg
aas
dec
sub
pop
fwait
outsb
cld
fwait
add
pusha
movsl
test
cmpb
add
inc
mov
inc
dec
inc
popa
mov
jns
shll
icebp
mov
inc
jge
cmp
cld
push
std
int
push
incb
enter
jo
repnz
cltd
push
inc
xchg
pop
or
jnp
push
push
cli
mov
jp
ss
iret
inc
fcomps
mov
dec
sbb
pop
xor
int3
cmp
sbb
sub
adc
xor
xor
dec
iret
inc
jns
loop
push
jmp
sbb
pop
jge
insb
cmp
cmp
bound
stos
cli
cmp
adc
repz
fcomps
les
mov
mov
xor
out
popa
stos
jp
js
test
jmp
xchg
and
mov
stos
mov
mov
lahf
push
lock
push
push
test
test
mov
out
daa
cs
es
movsb
fsubl
sbb
add
xor
aam
shrb
pop
add
movsb
jle
pop
xchg
xlat
xor
out
outsl
testb
xor
push
test
cs
mov
bound
sub
test
pshufw
nop
sets
fstpl
or
rcll
pop
das
or
mov
test
mov
mov
pop
mov
mov
add
xor
push
js
xchg
dec
mov
ret
gs
sbb
inc
mov
and
inc
fsubr
or
xchg
test
mov
sub
rorb
inc
pop
adc
cmpsb
add
jmp
lcall
pop
push
mov
sbb
cwtl
dec
inc
mov
out
dec
mov
xchg
pop
lock
mov
test
fs
icebp
insl
push
fisubrl
inc
clc
nop
cmp
insb
inc
inc
dec
cmpsl
add
das
imul
sub
dec
mov
xchg
cltd
out
jmp
fcmovb
aas
das
mov
fisttps
stc
cmp
mov
shrb
jns
lcall
mov
inc
pop
pop
test
or
hlt
xchg
push
or
ret
mov
jl
jmp
and
test
cmpsb
xor
faddp
dec
pop
xor
imul
add
cmp
push
push
cmp
jmp
and
jp
ss
dec
xchg
es
cwtl
add
popf
jge
test
addl
inc
xchg
sub
ret
stos
cld
rorb
push
nop
mov
mov
fs
dec
push
cld
and
adc
js
pop
cmp
test
mov
sub
int
mov
pop
fldl
dec
or
cmp
es
fiadds
movsb
mov
out
cmp
xchg
push
out
push
mul
mov
out
sbb
out
and
adc
dec
mov
jp
pop
cmp
mov
inc
xor
daa
das
arpl
test
xor
jmp
jmp
pop
mov
jl
jmp
inc
cmp
testb
loop
fistpll
into
shl
push
mov
xor
xchg
xchg
ret
iret
scas
pop
jnp
inc
stos
cmp
dec
adc
pushf
es
idivl
adc
mov
pop
fimuls
ja
ljmp
ja
test
inc
cmc
cmp
xchg
cmp
jmp
xlat
or
add
imul
jnp
icebp
push
pop
pop
sbb
fwait
jecxz
lods
lea
jp
xchg
mov
cmc
js
stos
fcompp
faddp
fcoms
mov
test
inc
or
clc
pop
mov
cmc
xchg
popa
mov
inc
ja
xchg
fidivs
cli
inc
push
mov
test
in
and
std
xchg
ja
jns
cmp
xchg
dec
int
cmc
inc
cmp
pop
jle
sub
sbb
clc
mov
loop
xor
push
test
mov
dec
or
pop
rolb
pop
testl
add
dec
pop
mov
adc
adc
mov
insl
out
xchg
arpl
lea
pop
in
adc
adc
sub
in
mov
mov
out
fwait
mov
xchg
fcomps
xchg
out
sub
test
cmpl
xlat
cmc
iret
jnp
push
shrl
aam
dec
inc
fwait
pop
mov
sahf
test
mov
lahf
sbb
js
jmp
sbb
dec
mov
mov
mov
inc
xchg
clc
mov
mov
stc
cltd
adc
popfw
mov
fildll
jp
mov
mov
pop
xchg
notl
push
negb
jnp
cmp
cwtl
mov
std
aaa
xchg
fimuls
mov
push
dec
icebp
mov
jge
mov
mov
js
lds
outsl
push
lahf
ds
dec
cli
cmp
fdivr
pop
aaa
mov
sbb
push
xor
in
outsb
jmp
ds
add
mov
loopne
mov
and
mov
sbb
push
lahf
cmp
jecxz
pop
dec
cmpsl
clc
jg
jle
jae
pop
lcall
add
frstor
mov
fsubrp
out
push
pop
sbb
lods
jl
xchg
decb
in
clc
or
mov
in
cld
js
icebp
lret
mov
and
mov
cmp
shll
aas
adcb
xchg
cmpsl
cli
and
push
cmpsb
out
and
out
mov
push
leave
push
scas
adc
enter
xchg
fisubl
negl
or
push
cmp
jns
or
pop
mov
ja
lods
mov
sbb
int
aam
mov
dec
jns
jae
push
xchg
rcll
xchg
sbb
sbb
dec
ret
pusha
xor
lcall
fdivrp
sbb
cmp
and
push
cmp
jo
rclb
es
push
push
popf
jmp
jae
mov
fs
scas
out
ja
arpl
mov
mov
dec
add
cmp
pop
mov
cmp
clc
sbb
cli
cmp
lods
aad
push
lds
jne
mov
fistpll
add
pop
test
ljmp
cmc
or
ljmp
icebp
cmp
mov
pop
cld
add
cwtl
lods
mov
rcll
pusha
js
jns
js
sub
das
dec
inc
hlt
fdivr
stc
idivl
test
jge
pop
jns
xchg
jl
cmp
adc
arpl
lahf
pop
sbb
push
mov
mov
cld
push
test
out
or
add
lret
cmp
andb
dec
repz
fdivrl
lcall
into
inc
mov
in
sbb
xchg
dec
cmpsb
add
sbb
test
shll
mov
lods
fcmovnu
sub
lahf
pop
adc
lods
es
rclb
jns
or
xor
pop
cmp
aas
inc
pop
pop
outsl
cmp
jns
ja
inc
lods
mov
mov
mov
or
stos
xor
into
outsb
or
sbbl
fcmovbe
mov
mov
cmp
mov
xchg
and
cld
outsl
loopne
sub
cmp
movsb
int3
cld
es
push
pushf
push
or
ficoms
xchg
inc
call
mov
test
loopne
int3
das
add
cmp
pop
mov
stc
mov
xchg
mov
test
pop
fwait
insb
insb
mov
fsubl
adc
outsb
mov
clc
jle
inc
and
cmp
mov
idivb
rol
mov
pusha
mov
push
push
inc
addr16
inc
aas
or
or
popa
pop
dec
cmp
ja
inc
cmp
adc
or
lods
sub
mov
out
inc
ffree
add
push
xor
xor
stc
jae
cmp
fsts
push
shrb
xchg
add
add
hlt
push
dec
scas
loop
cmc
jp
pop
inc
inc
add
fmull
mov
xlat
jp
mov
jmp
jle
sbb
cmp
add
add
xchg
aam
mov
lods
add
sub
push
mov
out
pop
cmp
cmp
arpl
xchg
add
dec
sahf
inc
mov
cmp
fisubrl
sub
mov
lahf
jmp
ds
fcompl
pop
xchg
cmp
mov
xchg
outsl
push
pop
push
pop
pusha
sbb
jl
lods
fiaddl
test
out
test
inc
ss
dec
mov
sbb
mov
sbb
rorl
shrl
jno
mov
bound
ret
icebp
mov
cwtl
cmp
fmuls
movsb
test
xchg
cmpsb
pop
js
adc
test
jl
xor
mov
movsb
jbe
push
xor
out
lret
cli
jmp
pop
loope
push
mov
pop
or
mov
sbb
outsb
loop
dec
xor
cmp
divb
cmp
fstps
test
jbe
inc
push
rcrb
jle
dec
or
addl
cmpl
fisttps
mov
cmc
and
dec
ret
fidivrl
lods
pop
arpl
ja
lock
rorb
push
flds
push
lcall
enter
pop
lcall
dec
cs
out
nop
pop
mov
movsb
xchg
inc
cs
call
cltd
fsts
lahf
rcll
ds
push
pop
mov
lods
rorl
dec
pushf
and
out
pop
ja,pn
ja
ljmp
repnz
outsl
adc
cmp
fiadds
dec
push
pop
jb
mov
or
push
fildl
add
imul
adc
mov
imul
dec
ret
outsb
push
out
pop
xor
insb
adc
popf
ljmp
mov
jle
dec
mov
loopne
lods
ret
cli
out
dec
mov
sub
cmp
pop
mov
stos
xchg
adc
xchg
lea
push
mov
imul
xorl
mov
jle
lock
hlt
sbb
sbb
or
test
and
out
xor
addr16
jp
sbb
std
addr16
xor
xor
out
ljmp
int3
sbb
sub
push
adc
call
pop
dec
push
sbb
mov
cmp
repz
pop
cmp
sbb
jnp
pop
adcl
loop
jnp
cld
jecxz
jle
test
ret
test
stc
jo
fdivrp
dec
add
std
insb
jae
test
jmp
fs
jge
nop
xchg
and
sti
fwait
xchg
or
dec
and
sar
out
mov
testb
jle
mov
repnz
js
sbb
negb
sbb
xchg
mov
mov
fisubl
mov
jae
cmp
cmp
int3
sub
cmp
or
push
mov
es
mov
jl
cmp
arpl
pushf
mov
cli
sub
xchg
push
testb
jmp
xor
ja
dec
fmuls
stc
movsb
iret
inc
js
gs
pop
imul
call
mov
inc
in
pop
fs
or
insl
lret
stos
inc
sub
mov
jge
push
push
pusha
or
mov
in
push
and
xchg
xchg
lahf
addr16
xor
xchg
js
cltd
out
stos
dec
std
add
xor
xor
xor
out
cmp
sub
out
in
fadds
push
pop
sbb
cmpsl
jno
ja
xor
pop
jnp
cmp
mov
pop
mov
hlt
xchg
iret
push
test
push
and
testb
xchg
mov
xor
jge
imulb
lods
xchg
sbb
inc
neg
ja
or
scas
idivb
mov
dec
hlt
xor
pushf
cmp
test
addr16
pop
jno
mov
push
add
gs
cmp
lea
aad
mov
scas
push
ds
clc
sub
fs
push
sbb
fsub
loopne
fistpl
dec
cmp
push
and
jnp
es
out
clc
iret
jl
push
gs
or
iret
dec
testl
insl
or
ljmp
lret
out
hlt
out
dec
mov
pop
and
insb
jmp
push
rcr
lea
enter
mov
pop
mov
add
adc
ja,pt
mov
pop
out
cmp
adc
or
xorl
sub
mov
ja
cmp
jnp
mov
inc
fs
xchg
mov
leave
addb
aad
adcb
add
into
bswap
sbb
add
xchg
dec
fwait
out
insl
ja
jle
or
mov
sbb
add
add
repz
dec
sbb
and
sti
mov
mov
dec
add
sbb
adc
insl
movntps
mov
push
shl
addr16
mov
sub
inc
add
cmp
incb
jnp
cwtl
icebp
xchg
sub
jl
xchg
mov
out
mov
push
xor
fistpll
dec
or
xor
mov
cmp
rorb
cmp
cwtl
js
push
mov
and
cmp
add
dec
adc
lods
cmp
into
mov
mov
loop
loope
cmp
ss
mul
cmp
xor
cmp
xchg
jns
and
jl
jnp
push
lods
incl
or
and
or
cmp
out
or
repnz
mov
xchg
sbbb
mov
push
jle
fstps
push
lods
lods
push
jg
dec
test
sub
aas
pop
and
movsl
outsl
mov
js
add
movlps
push
nop
popf
loopne
js
fistpll
sbb
popa
icebp
js
pop
xchg
adc
jbe
xor
movsl
sti
insb
xlat
sbbl
mov
lods
push
xchg
cmpsb
jnp
mov
sbb
icebp
dec
fisubrs
rclb
sub
out
sbb
mov
cmpsl
sahf
adc
hlt
mov
cmp
cmc
cmp
cli
cmp
adc
sbbl
push
mull
ss
addr16
out
xor
les
push
pop
sahf
repz
imul
lods
push
push
fs
cwtl
lds
mov
sti
pop
sub
lahf
and
mov
cltd
out
sub
adc
mov
cmp
add
mov
ljmp
xchg
ss
pushf
pop
push
dec
jb
cmp
mov
push
sbb
pushf
sub
insl
mov
cmp
sbb
mov
lods
lods
mov
test
sub
cs
xchg
lret
cmpsb
xchg
aas
cwtl
xchg
cmpl
icebp
sbb
pop
ret
dec
lea
out
pop
lea
out
mov
mov
dec
sti
fcoms
sbb
jg
fdivl
lahf
adc
inc
inc
sbb
pusha
dec
int3
pop
inc
dec
cmp
sbb
in
ficoml
test
sahf
jno
es
int
jno
xchg
shrl
das
fcomps
xchg
xor
mov
enter
fistpl
arpl
sub
pop
nop
iret
outsl
pop
mov
push
cmc
call
mov
rclb
lcall
dec
imull
insl
iret
popa
push
cmpb
cld
aas
mov
xor
xlat
inc
test
and
push
sahf
ja
sarb
dec
mov
push
adc
fdivs
adc
adc
lret
add
imul
cmpl
add
vpsrad
mov
daa
leave
fidivs
or
jecxz
les
push
aad
pop
fisttps
test
xor
inc
data16
inc
sahf
sti
shld
dec
cmp
test
sub
jb
mov
daa
mov
and
dec
mov
mov
inc
pop
sbb
les
xchg
inc
jge
add
aam
and
mov
cwtl
or
inc
or
stc
or
push
lea
xstore-rng
cmpsl
inc
xchg
inc
cmp
jns
mov
mov
cld
repz
jle
shll
mov
frstor
ss
fst
das
fwait
push
faddl
or
mov
lret
pop
push
popf
pop
sbb
and
cwtl
testl
in
orl
daa
mov
xor
adc
mov
cltd
ret
enter
jl
stos
js
and
xor
mov
dec
jp
xor
sbb
or
mov
and
jp
push
jno
mov
decl
stc
mov
sbb
add
sbb
jnp
repnz
cmc
shll
jecxz
test
jns
xor
or
pop
ficomps
in
jno
cmp
sbb
clc
jo
sbb
jle
test
sbb
hlt
mov
int3
sbb
pop
sub
test
lods
and
or
adc
lock
mov
mov
xor
adc
je
push
sahf
or
mov
mov
sub
add
jg
in
sti
popa
sbb
sbb
xchg
rorl
cwtl
jp
addr16
and
fwait
repnz
das
rcrb
inc
cmp
lock
mov
loope
cmp
push
add
inc
cmpsl
or
and
std
test
and
popf
shrl
mov
and
arpl
cmp
adc
xchg
inc
mov
aas
sub
int3
pop
jnp
fwait
sub
inc
out
rorb
mov
cld
jecxz
adc
out
test
subl
rcl
inc
test
dec
out
jo
cli
xchg
mov
inc
andb
xchg
dec
loopne
enter
negl
test
fs
rcll
cli
mov
rcl
pop
subb
cmp
jl
or
sbb
mov
std
mov
test
add
popa
cmp
dec
jnp
sbb
xchg
xor
test
xchg
pop
fs
jle
cmp
xchg
test
dec
sbb
add
or
test
test
inc
or
cmpsl
std
or
xlat
js
cmpsl
mov
clc
mov
xor
movsl
ss
std
sub
jp
cmp
xorl
ss
adc
mov
test
adc
pop
cmp
sti
mov
test
xor
jae
mov
pop
push
in
pop
or
arpl
bound
add
out
dec
push
leave
fldt
pop
or
adc
adc
test
es
mov
inc
ret
jle
test
cmpsl
mov
leave
daa
das
push
ja
ss
in
add
and
imul
ss
inc
pop
and
into
mov
fisttpl
jl
cli
dec
cmp
rcl
lcall
mov
sub
rclb
lcall
adc
fs
mov
lock
fwait
lds
push
out
out
mov
mov
inc
cmpsb
bound
outsb
js
cli
mov
pushf
dec
cwtl
test
lret
mov
sahf
or
inc
push
movsb
xor
repz
arpl
push
xchg
aad
andl
cmpb
addr16
xchg
inc
push
push
push
mov
iret
out
ss
ljmp
mov
sets
aam
mov
ljmp
xchg
push
pop
mov
dec
mov
xor
test
push
push
cltd
lds
cmp
mov
jg
add
insb
jl
popa
dec
push
cmp
inc
decl
les
clc
test
cmpsb
adc
sbb
mov
test
or
movsb
sub
jg
fs
insb
mov
cwtl
add
adc
jg
push
mov
shll
cmp
icebp
popa
aad
dec
sti
cmp
ret
fwait
push
es
xchg
mov
and
cmc
pop
mov
lahf
cmpsl
ja
mov
cmp
lcall
dec
pop
pop
jmp
and
ljmp
inc
es
test
mov
cmp
xlat
add
pop
dec
xor
insb
inc
nop
sahf
cmp
in
xchg
xchg
cld
icebp
inc
jmp
pop
pop
lret
fisubrl
pop
test
out
icebp
and
mov
mov
or
js
bound
shlb
bound
push
jge
cli
dec
push
fwait
outsl
stc
push
cli
sbb
xor
push
xchg
mov
in
into
mov
adc
cld
mov
mov
mov
and
sbbl
cmp
pusha
stc
sti
cmp
out
lcall
or
xor
jp
xchg
gs
cmp
adc
cmp
sbbl
jge
or
or
fdivrs
dec
mov
xlat
inc
cmp
bound
adc
mov
insl
cmp
inc
pop
adc
insb
mov
xor
iret
sub
sahf
cmp
bound
jle
cli
ljmp
xor
fnsave
cmp
cmp
xchg
sar
mov
lock
or
xor
out
mov
pop
shlb
mov
callw
addr16
dec
sbb
add
push
pop
push
fidivrl
sbb
cli
push
imulb
mov
mov
in
push
and
daa
dec
mov
mov
lret
push
movsb
jb
out
pop
mov
jle
clc
dec
lret
pusha
nop
sub
ret
pop
sub
test
jne
inc
out
fidivs
mov
add
mov
js
cmp
or
jmp
mov
cmp
cmc
cmp
mov
pop
pop
ret
cltd
rcll
and
mov
mov
sbb
mov
nop
jp
cmp
push
pop
sbb
or
dec
call
or
pop
lret
xor
mov
imul
les
fs
mov
ret
out
sbb
mov
jp
imul
cmp
insl
xchg
adc
jg
jmp
mov
adc
mov
sbb
sbb
jecxz
mov
jge
pusha
and
sbb
sbb
inc
loope
xchg
dec
sub
int3
mov
mov
loope
mov
sub
mov
or
mov
iret
fsub
pop
xchg
jp
jne
mov
adc
popf
mov
mov
jbe
rorb
adc
jl
xor
adc
pusha
dec
stc
or
imul
sbb
ss
lods
cmp
rorb
fisubrs
pavgb
xor
sbb
in
shrl
les
xchg
push
jle
or
mov
js
mov
mov
dec
cmp
lock
pop
mov
lock
inc
inc
pop
sbb
fimuls
mov
sbb
dec
sbb
jp
sbb
sbb
dec
cmp
mov
push
popf
ss
cwtl
ljmp
fwait
sbb
sub
movaps
vpconflictd
iret
sub
xchg
cmc
pop
fs
sarb
movsb
pop
mov
dec
sbb
fidivrs
xor
push
jge
sbbb
test
cmp
mov
dec
inc
jae
ds
stc
inc
test
addr16
cmc
idiv
sbb
mov
imul
cmc
cli
mov
or
in
push
jle
pop
call
sbb
pop
push
mov
fstps
pop
test
jp
xchg
push
ljmp
jge
add
in
inc
xchg
and
dec
sub
in
jge
sub
dec
mov
test
and
gs
cmp
xchg
mov
dec
push
scas
lahf
test
test
cmpsb
xchg
dec
sbb
or
jg
adc
mov
movsl
dec
cs
pop
arpl
sbb
adc
lahf
test
bound
or
ficompl
int3
lret
or
dec
mov
gs
add
sbb
aam
nop
mov
mov
sbb
sbb
inc
fwait
mov
jle
lea
mov
adc
adc
gs
ds
ljmp
rorl
pop
jg
arpl
add
out
adc
cs
add
pop
sbb
arpl
jnp
pop
das
jae
stc
mov
jnp
cmp
pusha
or
cmp
ds
cli
mov
ja
pop
dec
insb
xor
xchg
pusha
cmp
jno
idivl
dec
rcr
mov
cmc
sub
ss
and
sbb
mov
outsb
cld
nop
sbb
rol
push
inc
ja
loope
sbb
pushf
add
add
and
or
popf
cmp
insb
data16
cmp
sbb
cltd
ljmp
inc
test
and
rcrb
sub
test
pop
jo
dec
push
aas
xchg
test
cmp
xchg
std
xlat
adcl
add
pop
inc
or
sbb
popf
adc
sar
mov
cmpl
dec
bound
mov
dec
cmp
sbb
xchg
mov
cmp
jmp
pop
int3
xchg
imul
sub
or
sbb
push
jnp
xor
dec
jg
pop
rclb
lea
push
adc
jnp
pop
jl
sub
cmp
scas
aas
mov
xchg
rolb
push
sub
lret
stos
out
sub
or
testb
into
jg
jae
sbb
in
push
mov
iret
ja
fistps
popa
xchg
xchg
ljmp
push
lds
rcr
jb
push
dec
and
xchg
js
xchg
mov
mov
outsl
and
stc
test
xchg
aas
cmp
test
fucomi
test
js
adc
sbb
xorb
jbe
mov
mov
mov
push
push
sarb
cmpsl
adcl
not
adc
mov
adc
adc
mov
mov
test
or
jle
xorl
mov
aas
dec
mov
sbb
repz
cmp
cwtl
imul
ljmp
clc
test
bound
add
mov
jo
mov
fmull
add
cmp
das
ret
add
scas
mov
adc
inc
out
roll
lods
mov
in
pop
test
popa
mov
js
fcomps
dec
push
stc
fnstcw
mov
xor
adc
xchg
mov
inc
les
ss
mov
fists
fisubrs
add
shl
push
cmp
sbb
fisubs
scas
xor
add
adc
fwait
mov
ljmp
in
sub
cmp
push
loopne
adc
and
mov
int3
in
pop
sbb
jg
data16
inc
mov
bound
inc
inc
mov
movsl
shll
sub
sti
jmp
nop
scas
mov
fucomip
fidivrs
out
arpl
jbe
xchg
jno
ret
inc
fsubrl
aam
xchg
ljmp
mov
push
add
icebp
add
xchg
or
dec
push
data16
inc
das
pop
fldl
mov
cld
test
sub
sarl
xchg
sar
jo
jg
cmp
clc
push
cmp
push
sub
pusha
mov
dec
fstpt
cmp
cmp
mov
sbb
faddl
mov
push
xor
adc
or
fsubrl
cli
jle
xchg
push
add
mov
std
mul
xchg
mov
and
xor
negb
loopne
cmpsb
es
mov
mov
dec
movsl
rcr
je
mov
or
inc
cmc
inc
inc
cld
out
add
or
xor
dec
cmp
jmp
lods
push
repnz
lcall
cmp
push
xchg
sub
sub
std
cld
jmp
mov
jo
jge
in
out
or
pop
mov
xchg
lea
clc
and
mov
dec
xor
add
adc
mov
xor
test
xchg
jae
mov
imul
sub
cmp
rolb
mov
jg
clc
out
into
popl
pusha
leave
mov
jmp
xor
or
xchg
add
dec
jp
mov
incb
jmp
adc
jo
adc
and
int3
mov
in
add
jl
std
outsl
pop
std
push
out
pop
xchg
dec
mov
jae
aad
insb
lds
dec
orb
insl
popa
mov
fsts
and
imul
push
call
dec
cmp
dec
xchg
std
insb
loope
inc
in
cmpsb
mov
xchg
mov
insb
out
negl
jl
cmp
mov
hlt
idiv
add
cwtl
js
ja
lret
cwtl
pop
cmp
lods
sbbb
xor
ds
mov
adc
mov
ja
outsb
pop
and
sti
push
dec
sar
out
sbbl
ss
lods
pop
pop
mov
push
std
xor
movsl
sub
sub
jmp
push
pop
in
mov
aad
cld
outsb
jnp
cmc
leave
outsl
ljmp
add
mov
pop
add
out
push
xchg
push
bound
cmp
ljmp
cmp
cmc
sbb
xchg
stos
int3
xchg
jnp
test
push
pop
mov
lods
jno
sub
movaps
jnp
test
xchg
cs
push
ror
mov
test
repnz
scas
dec
fwait
mov
sarb
movsb
mov
imul
push
in
mov
cld
repz
jnp
push
jmp
dec
mov
mov
fstpt
inc
and
es
cli
ljmp
cmp
dec
mov
mov
mov
into
ja
ret
fistpll
popf
leave
xchg
jg
sub
and
pop
mov
and
mov
fcmovnu
jno
and
sbb
js
sarl
repz
out
pop
jge
mov
mov
pop
daa
xlat
mov
cmp
xchg
fdivrl
pusha
mov
loopne
in
pop
sub
loopne
gs
mov
insl
sbb
rorl
call
outsb
and
xchg
insb
clc
inc
nop
out
rcrl
std
lods
dec
js
mov
push
pusha
xor
test
and
dec
jle
out
or
lahf
negb
orb
pop
cmp
cmp
push
jnp
xor
adc
pop
cmp
cmp
sub
push
cmp
arpl
cmp
pop
lahf
jg
jp
ja
pushl
adc
test
and
movb
cmp
mov
jecxz
and
aam
inc
add
jge
sub
cmc
ja
adc
imul
mov
cmp
add
insl
jne
popf
js
push
fwait
imul
jge
and
dec
rcll
int
push
sarl
arpl
jnp
adc
out
pop
nop
hlt
cmp
add
test
adc
push
cmp
enter
call
pop
popf
cmp
cmp
sbbl
mov
cmp
dec
int3
and
sub
sti
pmullw
bound
in
adc
or
loopne
mov
mov
bound
mov
xlat
cmp
fsub
sub
or
sbb
std
add
jns
insb
inc
sbb
pop
inc
mul
inc
pop
mov
fistpll
sub
fsubr
push
out
mov
repz
movsl
std
sti
ds
dec
cmp
ret
or
mov
popa
outsl
aas
cmpsb
dec
leave
mov
sti
ja
mov
jmp
pop
inc
out
mov
lds
inc
loop
mov
xchg
mov
and
mov
mov
mov
sbb
loop
inc
arpl
push
xchg
rcll
into
pushf
pop
jnp
popf
movsb
push
or
out
inc
pop
mov
xchg
or
pop
js
iret
mov
push
jl
xchg
cmp
out
flds
loope
add
clc
test
rcll
jae
or
pop
cmpsb
into
or
sub
cs
cmpsl
xor
shll
cltd
push
mov
xor
int
stos
jecxz
iret
sub
ss
lcall
lods
movsb
push
fistl
mov
jnp
sbb
int3
ror
jp
inc
loopne
push
add
xchg
inc
push
cmp
js
mov
mov
mov
xorl
iret
ret
add
cs
shll
call
add
notl
sahf
pop
add
fdiv
jns
xor
iret
mov
jle
push
inc
inc
mov
fbld
scas
cmp
or
leave
fldl2e
fistpll
aas
xor
xchg
dec
push
fwait
shll
cmp
sub
push
cmp
add
cmp
test
movsb
dec
add
das
shlb
mov
pushf
or
lret
rol
push
ss
cmp
imul
xor
sbb
mov
adc
mov
shrb
xchg
mov
and
inc
xchg
or
cmp
les
mov
pop
pop
test
mov
dec
or
cmp
jp
xchg
xor
xchg
shll
insl
mov
ja
frstor
mov
nop
out
lods
test
in
push
jg
and
sahf
jmp
fiadds
sub
inc
repz
mov
mov
fdivrl
xchg
push
jbe
pop
mov
outsb
dec
sarb
pop
mov
loope
jmp
int3
lods
jns
add
mov
loop
adc
imul
popa
mov
jg
xor
jge
sbb
std
add
or
push
push
rcll
popa
push
sub
fbstp
xchg
aam
fadd
sbb
std
jl
out
jmp
pop
sub
push
sti
jae
jo
inc
xchg
fstps
into
fcom
push
inc
in
xchg
mov
pop
ja
cwtl
test
lcall
iret
out
push
mov
mov
xchg
es
addb
sbb
jle
and
call
pop
xchg
pop
adcb
sbb
fwait
mov
mov
mov
iret
ficoms
fdivrs
orl
jbe
rcll
xchg
cmp
pop
xor
js
push
sbb
sbb
pop
mov
sbb
iret
lahf
fs
test
xchg
out
mov
ljmp
in
sbb
push
sarl
add
xchg
jne
mov
mov
or
rclb
inc
jecxz
out
lahf
test
cmpsb
sub
mov
or
mov
iret
add
mov
xorl
xchg
dec
cld
call
pushw
test
sti
jle
xchg
sub
cmp
arpl
pop
jg
cs
xchg
jb
in
add
clc
adc
js
decl
repz
cmp
clc
cwtl
jmp
xchg
push
dec
pop
pop
pop
pop
ss
testl
add
cld
and
cwtl
xchg
pop
aas
mov
iret
adc
pusha
shll
mov
push
inc
idiv
lahf
cmp
arpl
stos
pop
out
fwait
pop
dec
mov
mov
rorl
push
inc
sar
cmpsb
pop
mov
adc
ret
xor
testb
js
adc
cmp
pop
mov
mov
out
and
leave
sub
mov
adc
cmp
add
adc
in
mov
sbb
lcall
subb
cmp
movl
test
js
clc
xchg
dec
lds
stos
lea
arpl
test
cltd
push
sahf
adc
xchg
lods
sub
xor
xor
mov
mov
inc
cmp
cmpsl
andl
fsubs
daa
test
shl
je
aam
xlat
adc
nop
call
jge
xchg
sbb
cmp
sti
mov
cld
cmpsb
adc
out
mov
push
arpl
add
outsl
testb
and
ret
xor
ret
pop
pop
inc
cmc
push
xchg
rcl
dec
mov
mov
xor
mov
sbb
outsl
mov
test
cltd
jmp
mov
iret
ja
loop
dec
add
fiadds
push
jl
pushw
jb
push
mov
mov
mov
inc
and
mov
cmp
mov
dec
popf
cmp
mov
fsts
loopne
sbb
jg
or
cmp
or
ja
xchg
popf
daa
aas
xchg
out
push
inc
mov
bound
lahf
out
outsl
fidivrs
ret
addr16
stc
jle
testb
test
aam
xchg
fildl
movsl
push
xor
mov
enter
or
aad
into
clc
mov
sbb
add
rcrb
jmp
pusha
incb
cmpsb
mov
push
imul
fucomi
mov
push
push
cmp
fwait
out
sahf
push
or
or
mov
xchg
pop
add
fwait
cmpsb
gs
xchg
add
and
cmc
push
test
pop
test
or
add
and
or
int3
pop
test
aam
mov
cmp
sbb
out
pop
ja
push
xor
push
mov
cmp
insb
addr16
adc
cmp
cmp
js
cs
dec
pop
cmc
ljmp
fs
cmp
sbbl
push
push
icebp
adc
mov
sti
jnp
jecxz
mov
cs
into
xchg
push
ret
arpl
inc
and
cmpsl
and
mov
test
ficomps
cs
loop
inc
or
ja
push
adc
sahf
xchg
sbb
lret
pop
test
or
and
sub
push
inc
mov
aaa
sub
out
pop
push
loope
mov
call
jle
sar
inc
in
call
daa
test
mov
cwtl
not
pop
or
bound
sbb
cld
fcomps
cltd
mov
js
cmpsl
cltd
or
mov
popf
fadd
or
shrl
rolb
jge
xor
inc
pop
daa
and
test
jecxz
jg
cmp
cmp
dec
js
cmp
mov
push
rcll
sbb
mov
jae
jnp
mov
add
lods
or
pop
mov
mov
mov
decl
pop
push
test
xor
push
cmpsb
rclb
or
insb
inc
xchg
inc
out
push
jg
and
inc
outsb
shlb
ljmp
push
adc
inc
push
pop
push
shl
inc
pop
sbb
sub
push
pop
jp
mov
test
pop
aas
insb
or
push
mov
mov
lcall
test
lret
call
fsqrt
fwait
mov
sbb
xchg
out
arpl
subl
push
xchg
adc
inc
shr
test
idivl
push
add
ret
int3
mov
subb
inc
pop
test
and
mov
push
xchg
pushf
scas
mov
pop
xchg
ss
push
xchg
cmp
ljmp
insb
xchg
inc
pop
jle
cmp
push
int3
or
or
xlat
xor
loope
out
adc
sub
cmp
or
aam
xor
fadd
and
arpl
test
jo
test
sbb
cli
dec
mov
jns
bsr
sbb
cmp
xchg
xor
lcall
xchg
in
mov
inc
jb
ja
cmp
dec
mov
cmpsl
loope
adc
cld
jle
hlt
jns
aam
cld
out
in
lods
lea
ds
mov
mov
mov
test
es
test
mov
or
aad
cmp
sbb
mov
stos
xchg
xchg
pop
mov
jl,pn
xchg
std
cs
shlb
test
mov
int
push
mov
inc
repz
mov
dec
pop
stos
ja
dec
mov
les
fdivs
cld
inc
pop
mov
mov
stos
popa
bound
sub
leave
dec
dec
cmp
lahf
or
push
cli
mov
scas
iret
push
sbb
test
lret
xchg
fistpl
sti
lcall
mov
addr16
jne
adc
js
jnp
push
adc
out
mov
jmp
ljmp
mov
xchg
mov
or
and
iret
ret
js
dec
loopne
ds
test
call
mov
sub
test
repz
inc
and
xchg
and
lcall
arpl
icebp
movsl
cmp
cmp
mov
out
addl
inc
addr16
inc
test
xchg
cmpsb
adc
mov
xchg
pop
out
add
sbb
mov
shrb
lahf
sbb
ja
test
add
iret
fistpl
mov
cmp
cmp
popl
lret
sub
pushf
pop
mov
call
sbb
pop
sbb
jp
jge
mov
jle
mov
lock
push
dec
aam
iret
rcll
and
or
sbb
xchg
sub
xor
dec
ja
ljmp
mov
clc
add
mov
rcl
push
or
mov
sti
pop
mov
call
xchg
stc
jge
push
push
leave
dec
dec
mov
xchg
or
int3
stos
adc
add
inc
adcb
lcall
call
pop
sub
jnp
cmp
dec
lods
jo
sbb
inc
es
sub
sahf
lret
imul
cmp
add
mov
fidivrs
add
cmp
or
test
xor
inc
mov
mov
idiv
cmp
scas
scas
add
add
movntps
lds
mov
pushf
sbbl
or
pop
or
dec
push
mov
push
in
inc
jmp
es
xchg
clc
movsb
pop
dec
lret
mov
rclb
neg
or
add
test
test
test
repz
cmp
fimull
push
pop
add
mov
movsl
mov
pushl
es
xchg
mov
clc
stos
mov
xor
jle
lds
sbb
add
or
fdivrp
push
mov
sub
inc
jle
mov
test
stos
inc
mov
mov
rorl
push
nop
cmp
cwtl
sti
add
cmp
add
or
call
inc
cli
xor
sbb
test
push
adc
push
push
jnp
xchg
ja
loop
xchg
adc
or
sub
mov
orl
adc
push
ret
ret
mov
mov
testl
xor
testb
sbb
sti
jns
push
test
xchg
dec
dec
xor
imul
mov
sbb
push
js
int3
or
int
cltd
popa
mov
cli
push
push
stos
sbb
and
cmp
rorl
lea
dec
cli
push
insl
pop
sbb
mov
or
inc
jbe
je
mov
popf
pop
push
sahf
ja
xcrypt-ofb
cmpsl
test
pop
imulb
xor
int
sub
and
jae
subl
inc
cmc
cmp
fidivrl
movsl
rcrl
lea
jo
stos
sarl
push
dec
clc
inc
adc
stos
adc
xor
jge
xchg
ja
popa
mov
or
xor
xor
mov
xchg
inc
imul
mov
and
int
mov
xchg
mov
mov
adc
xlat
or
arpl
sub
sbb
imul
lds
xchg
test
xchg
add
mov
addl
xor
add
inc
xchg
mov
out
jecxz
jecxz
pushf
out
add
push
lret
arpl
daa
jg
push
jns
rcr
xchg
sub
sub
js
xor
inc
ret
sbb
pop
jbe
mov
pop
stos
mov
pop
mov
ss
movsl
stc
or
test
dec
cmp
jecxz
add
adc
je
cmp
mov
shl
adc
aas
rcl
push
lcall
sub
stc
cli
out
sbb
clc
fmul
iret
jmp
mov
clc
out
test
sbb
popa
flds
mov
mov
xor
test
repz
and
push
test
jp
lock
insb
in
pusha
and
frstor
jge
cmp
sub
xchg
xor
nop
mov
lcall
mov
loop
jl
push
clc
or
xor
sbb
fldenv
dec
cmc
iret
cmpb
mov
pop
pushf
xor
dec
cmc
pop
ljmp
add
lock
lcall
pop
lcall
pop
xchg
test
mov
cmp
fs
arpl
dec
inc
jle
pushf
sbb
pop
cmp
es
jns
pop
addr16
cli
daa
sbb
xlat
ds
xor
pop
imul
or
dec
mov
pop
fsubr
xor
out
pop
jo
nop
mov
in
pusha
inc
or
dec
xchg
jne
dec
xchg
sti
cmp
pop
mov
ja
mov
pusha
pop
cli
jg
pop
jg
mov
sbb
jnp
test
push
movsl
pop
cmpsb
adc
lea
jge
dec
xor
iret
dec
daa
scas
mov
add
push
inc
lahf
mov
add
mov
cld
rcrb
pop
pushf
shlb
call
bound
push
scas
mov
clc
gs
fcoms
sbb
mov
mov
sbb
lahf
clc
shlb
jmp
push
sub
mov
imul
cmp
or
and
std
aas
sbb
and
jge
imul
sbb
pushf
shlb
cmp
loop
cmpb
std
jmp
js
cmc
out
or
mov
jle
in
mov
insl
test
pop
cmp
cmpsb
and
test
imul
or
mov
mov
gs
pop
push
fimull
rorl
negb
jl
imul
scas
pop
jl
jecxz
cmp
jo
push
hlt
imul
push
stos
add
xchg
lret
ja
or
lds
mov
nop
es
setae
push
pop
fisttpll
xchg
pop
addr16
ja
push
cmpsl
out
pop
sub
xchg
ss
cmp
mov
pusha
aad
scas
dec
push
xchg
or
push
jp
mov
arpl
push
js
sub
pop
pop
dec
xchg
push
push
ret
sub
cmpl
sbb
pop
mov
mov
push
insw
out
xchg
lods
das
mov
cmc
popf
aad
mov
or
sbbl
sbb
cld
xor
dec
loopne
jl
push
inc
iret
pop
js
jp
mov
lcall
cmp
rcl
int
inc
lret
test
sarl
xchg
dec
mov
xor
fcomp
mov
xchg
dec
jp
imul
fistl
in
pop
mov
sbb
nop
jo
aam
ror
cli
cli
ficomps
and
andb
in
mov
xchg
int3
call
andl
lock
sbb
pusha
mov
lock
cld
cwtl
push
ret
jno
js
movsl
cltd
sub
int3
jg
rorb
add
xchg
and
jne
jl
test
cmp
sbb
mov
movl
testl
mov
mov
xchg
inc
shl
sbb
mov
mov
pop
jmpw
lahf
loopne
or
mov
data16
xchg
sti
push
out
mov
cmp
out
fs
cmpsb
xchg
pushf
movl
scas
cmp
ja
inc
sub
addb
sti
insl
jnp
sbb
dec
pop
mov
loop
mov
roll
lds
dec
jp
pop
mov
mov
push
in
sti
xor
lea
test
xor
cs
cmp
stos
cmp
ljmp
xor
xchg
cltd
outsl
and
pop
jle
mov
sbb
mov
iret
push
cld
mov
adc
mov
imul
test
scas
mov
lret
mov
push
or
in
aad
cmp
sbbl
mov
fsts
pop
rolb
cmc
dec
mov
ret
incl
jl
add
lcall
test
push
rcl
sbb
in
fdivl
movsl
or
cmp
push
data16
inc
data16
repz
hlt
js
andb
push
fildl
insb
and
pop
mov
jmp
aaa
add
jnp
aas
jp
mov
inc
lret
mov
cmp
jp
jae
mov
jle
mov
leave
sar
adcl
mov
das
das
ljmp
stos
jnp
icebp
mov
in
jae
test
xor
scas
dec
mov
xchg
ror
icebp
clc
stc
mov
pop
inc
sti
dec
add
sti
cmp
ret
cltd
outsl
mov
bound
dec
scas
jge
sub
cmp
xchg
adc
and
cmp
xchg
into
push
mov
popa
cmp
mov
inc
test
loop
push
ss
inc
std
fildll
mov
imul
or
mov
jecxz
outsb
push
sub
fs
pop
pop
std
adc
pop
mov
jp
push
bound
mov
out
pop
mov
sbb
out
ds
or
xchg
dec
dec
imul
stc
or
cmc
fmulp
jo
jmp
inc
inc
pop
add
or
cmp
repnz
les
lret
mov
cmpsb
cmp
mov
mov
sbb
addr16
cwtl
ror
inc
stos
jecxz
scas
lock
jle
push
cmp
cmp
pop
cmp
in
orb
dec
cmp
leave
jle
push
hlt
sub
mov
mov
lea
sub
pop
and
adc
mov
sub
push
mov
cmp
in
ljmp
mov
cmp
repnz
inc
mov
fwait
js
xchg
or
push
xor
adc
push
pop
adc
jmp
movsb
mull
cmp
out
fisubl
inc
in
dec
ss
rorl
jge
insb
and
out
clc
xchg
std
mov
pop
dec
xchg
int3
push
test
fistpl
adc
ds
mov
gs
lods
inc
pop
mov
mov
decl
fisubrs
mov
mov
mov
add
push
rclb
inc
xchg
js
inc
out
mov
push
clc
cmpsb
mov
mov
data16
mov
adc
addr16
jg
mov
inc
jp
xor
sub
pop
fwait
xchg
pop
mov
xchg
sar
fstpt
ret
movsl
fildl
push
mov
adcb
shrb
icebp
mov
jnp
cmp
adc
sbb
mov
stc
jnp
out
outsl
sub
cli
rcrl
scas
xor
sbb
jnp
cmp
fisubrs
por
dec
mov
sbbl
js
popf
xchg
jg
push
testb
cmp
cli
jb
mov
dec
mov
cltd
call
adc
jge
sbb
jle
jge
inc
sahf
sbbb
xchg
push
jle
inc
mov
aad
cmc
pop
dec
clc
ficomps
outsl
sub
dec
push
mov
sbb
pop
jb
push
pushf
pop
sbb
dec
jne
mov
stc
jnp
sub
mov
mull
rol
lea
popl
xchg
pop
ds
lcall
fsubs
add
mov
nop
fdivs
leave
mov
adc
mov
dec
js
or
pop
clc
cmp
xlat
xlat
sub
leave
xor
cmp
loop
js
add
rcll
shlb
scas
push
push
push
cmp
sbb
int3
lahf
loop
jo
jmp
cmp
ja
popa
sbb
pusha
xchg
mov
pop
or
push
out
jle
aam
pop
je
iret
movsl
repz
mov
rcrb
cwtl
xchg
add
sub
add
adcl
jns
pop
shll
jo
adc
mov
cmc
cwtl
out
ja
into
jle
lea
ror
and
rclb
pop
and
pop
lret
xlat
jle
outsl
test
mov
xor
pop
loop
cltd
mov
lods
mov
lods
fwait
inc
fistpll
loope
push
xor
ja
jle
ss
inc
mov
out
orl
push
movups
adc
mov
xchg
imul
js
pop
sbb
and
add
cmc
jg
dec
jnp
mov
push
push
stc
scas
clc
fwait
scas
mov
shl
mov
or
andb
fdivrl
fwait
mov
add
stos
sub
repnz
jnp
pop
test
stc
cmp
xchg
xchg
or
fisubrs
cmp
ss
dec
test
daa
pop
adc
cmpl
test
xchg
pop
mov
pop
inc
mov
or
add
in
jae
lods
call
mov
cmpl
call
inc
nop
xchg
lcall
mov
cs
jno
unpckhps
test
pop
push
insb
int3
ret
or
sub
aas
dec
out
pop
nop
cmpsl
add
das
pop
loope
daa
or
insb
mov
imul
inc
adc
in
ds
pusha
xor
adc
pop
dec
filds
outsl
mov
dec
clc
iret
mov
or
nop
push
jle
insl
ljmp
xchg
fisubrl
mov
dec
cmp
lds
ljmp
jg
imul
jecxz
inc
pop
xor
fnstcw
ja
mov
sub
mov
push
fs
test
test
jecxz
jno
in
inc
mov
xchg
mov
jnp
sub
cmpb
or
push
mov
js
int3
adc
repz
incb
cld
pop
mov
sti
fcompl
cmp
imul
jl
pop
repz
mov
cmp
ja
sub
cli
jl
mov
jmp
lahf
dec
jmp
xchg
test
push
cmp
js
cwtl
call
bound
dec
mov
enter
mov
mov
adc
fmuls
xchg
les
dec
sub
ljmp
add
fcoms
xchg
xor
imul
out
rolb
stos
mov
pop
rcrb
clc
mov
lahf
ja
mov
inc
push
std
mulb
jo
repz
add
dec
inc
xchg
sbbb
xchg
lea
xor
or
adcl
xchg
leave
xor
lods
jo
cmc
jno
fbstp
ret
testl
xor
fistps
lods
sbb
ss
push
inc
hlt
pop
roll
jle
lods
jl
inc
mov
cmp
roll
or
mov
xchg
repnz
adc
adc
pop
jecxz
pusha
jno
sbb
fisubl
dec
lods
push
lret
cmp
sub
cld
rorb
mov
xchg
lea
sub
icebp
xor
adc
or
inc
outsb
pop
jns
negb
ja
daa
pop
sbb
cmpsb
jae
jle
adc
add
cmp
xchg
fcompl
pcmpeqw
mov
add
out
mov
inc
mov
mov
cwtl
sti
mov
mov
dec
inc
jg
loope
stos
pusha
xor
mov
stc
jmp
jecxz
mov
lret
cmp
dec
mov
sti
cltd
es
adc
push
lret
jle
xlat
adc
cmp
pusha
push
sbb
pop
shlb
xor
or
int3
sbb
lret
or
inc
test
jne
insb
or
jnp
mov
ss
fs
mov
iret
mov
mov
repnz
xchg
test
inc
sbb
cmp
data16
mov
dec
jns
daa
mov
popf
out
pop
mov
mov
inc
pop
inc
insb
test
loope
outsl
je
aaa
mov
add
test
xchg
and
push
pop
repz
sub
pusha
jp
adc
adc
cmp
subl
jg
mov
mov
sbb
mov
inc
and
inc
insb
call
jb
mov
lock
xchg
push
ret
btr
fldcw
cmp
mov
test
xchg
pop
push
mov
mov
pop
adc
mov
insb
loopne
cmp
add
dec
inc
mov
or
cmpsb
dec
pop
mov
cs
xor
pop
cmp
pop
ljmp
add
mov
xchg
popf
gs
pop
and
cmpsb
cmp
popa
pop
mov
fsts
decb
jae
adc
mov
jmp
insl
jp
pop
jb
push
adc
mov
and
xorb
loop
repz
pop
sub
fwait
dec
push
push
pop
jnp
movsl
dec
lahf
mov
xchg
cmp
push
pop
lret
mov
xchg
fiadds
hlt
test
or
adc
inc
mov
fstps
adc
push
xchg
and
repnz
test
test
xor
inc
lahf
cmp
loop
std
mov
iret
mov
mov
mov
push
or
pop
pop
xchg
push
dec
mov
cmc
in
inc
ds
fidivrl
fdivrl
mov
cmp
sub
and
push
pop
out
test
mov
cltd
inc
inc
mov
adc
lods
xor
jo
jns
mov
mov
inc
outsl
pop
push
shrb
ljmp
ljmp
push
daa
pop
cmpsb
mov
pop
jae
test
or
add
mov
push
sbb
dec
mov
sbb
mov
pop
or
loope
xchg
mov
dec
lret
in
jle
lods
dec
lods
adc
popa
and
pop
jae
je
add
mov
push
pop
xor
mov
dec
inc
andl
push
sbb
cmp
pop
fcomps
adc
and
ja
test
xor
push
push
mov
clc
ja
mov
jle
cmp
add
loopne
mov
adc
mov
xorb
fs
mov
lcall
mov
sub
jbe
cmp
test
dec
push
push
js
mov
or
mov
stos
sbb
inc
push
jle
movsl
dec
mov
sbb
sbb
int3
cmp
mov
pop
mov
adc
test
testb
shrl
in
pop
push
xchg
push
cmc
push
mov
dec
pushf
scas
dec
fdiv
lock
jl
ret
sbb
addl
adc
xchg
mov
or
mov
add
arpl
out
fidivrs
pop
in
out
mov
sub
inc
and
ss
or
mov
mov
stos
inc
jbe
jbe
dec
cmp
dec
incl
es
inc
add
hlt
jp,pn
push
sub
repnz
jnp
icebp
lret
xchg
mov
mov
mov
cmc
push
je
cmp
pop
inc
test
inc
sbb
push
mov
cmc
mov
mov
out
rolb
xorb
adc
addr16
xchg
sub
mov
sbb
mov
testl
xchg
into
jmp
fimull
mov
pop
sarl
into
fwait
add
shll
inc
adc
fiadds
xlat
jns
adc
jnp
rcrb
mov
adc
add
bound
sbb
xchg
movsb
aas
pop
fwait
js
mov
and
movsb
mov
test
lock
jecxz
rsqrtps
mov
inc
imul
repz
adc
push
ljmp
jmp
cmpsl
push
call
jmp
pop
out
mov
lret
push
cmp
mov
sub
dec
andb
ret
push
stos
mov
push
pop
sub
in
cltd
xor
xchg
in
mov
mov
cli
mov
lea
push
jg
movsb
je
push
xchg
stos
pop
mov
add
iret
push
push
fstpt
or
cmp
lods
addr16
popf
popa
mov
dec
jp
xchg
jp
mov
jl
and
pop
ret
data16
imul
ss
lea
fdivrl
inc
and
sub
sub
stos
sub
xor
mov
jp
gs
out
mov
jge
test
lret
shrl
pop
adc
push
out
js
test
insl
je
int
inc
loope
sahf
into
mov
xchg
out
loopne
dec
xchg
mov
out
fiaddl
xchg
xchg
test
jmp
jns
mov
sbb
xchg
popa
cmpsb
int
push
mov
mov
sub
pop
dec
cmp
out
cltd
jb
or
loopne
jg
xchg
add
test
sub
jp
lahf
sbbb
mov
negl
fcoml
mov
ja
pop
nop
xor
sti
sbb
mov
cmp
dec
out
xchg
mov
stc
pusha
mov
push
mov
clc
mov
dec
or
lds
xchg
cld
out
cmp
and
popf
pop
fdivrs
sbb
cmp
movsl
mulb
lds
xor
xchg
std
lahf
in
jb
scas
push
movsl
nop
out
and
mov
call
ja
sub
test
jl
add
loopne
mov
mov
push
xor
jle
mov
or
inc
adc
into
test
cwtl
dec
sbb
cmp
xor
xchg
lds
jb
cmp
jg
pop
cmp
sbb
cmp
gs
out
dec
push
add
cwtl
cmp
sub
xchg
pop
aam
dec
sub
xchg
loopne
pop
pop
dec
mov
sbb
out
inc
ss
aaa
jmp
inc
ret
or
fsubs
or
mov
inc
jge
cwtl
sbb
jg
lahf
divl
pop
jecxz
bound
sub
mov
scas
jp
addb
mov
jle
outsl
add
or
mov
push
addb
xlat
push
jae
ja
inc
mov
mov
sbb
mov
push
fiaddl
jnp
idiv
jnp
out
jbe
xchg
or
mov
cmpsb
inc
xchg
mov
inc
inc
idivl
sbb
scas
fsts
push
push
fadds
mov
xchg
cmpsl
ss
bswap
add
mov
or
cmpsb
mov
or
inc
mov
andb
test
out
cmp
or
dec
ret
cltd
ss
jno
adc
push
gs
stos
cmp
testl
orb
jbe
cmc
iret
sub
stos
adc
push
mov
mov
mov
ss
adc
cltd
adc
mov
aaa
or
mul
xchg
adc
mov
push
adc
push
testl
cmp
jg
jl
nop
fwait
cmp
shrb
daa
push
mov
inc
incb
xor
into
daa
mov
adc
and
loop
or
daa
xor
adc
add
mov
add
or
clc
pop
aas
xchg
mov
dec
sbb
xchg
call
xor
sbb
das
mov
out
cmp
iret
in
cmp
out
ss
into
lret
xchg
fsubrl
dec
inc
inc
xchg
adc
test
or
fs
dec
in
cmpsb
xchg
push
fs
sub
js
mov
sub
aaa
ljmp
pop
inc
inc
sti
mov
pop
idivl
cmpsb
ljmp
jg
xchg
shlb
into
pusha
pop
xor
dec
xchg
cwtl
notl
pop
push
mov
lea
arpl
sbb
xchg
movsl
bnd
inc
not
mov
es
mov
ss
movsl
mov
out
push
mov
dec
dec
pop
int
xorl
add
mov
sti
inc
dec
pusha
xor
dec
clc
int
cmp
pop
fs
xchg
test
or
jge
jge
clc
cmp
dec
pop
sbb
jo
dec
arpl
repnz
movsb
xchg
pop
pop
add
lods
adc
sbb
movsl
mov
divb
sbb
push
mov
xchg
cmpsl
inc
adc
jnp
dec
sub
cmpsl
cmpsl
mov
jg
pop
adc
imul
push
jmp
dec
xchg
int3
inc
pop
push
and
repz
inc
out
sbb
xchg
cli
jle
imul
subb
dec
xor
aam
in
sbb
or
imul
fildll
mov
xor
cmc
cmp
js
jge
sub
pop
pop
push
jl
fwait
and
and
insb
add
or
stc
dec
push
sbb
cmpsl
loop
das
imul
and
mov
or
dec
xchg
mul
sub
or
inc
fisubl
mov
cmc
xchg
pop
fidivl
pop
mov
pop
out
cli
cmc
jns
push
xlat
jae
cmp
ljmp
aas
test
lods
sbb
add
cmpsb
sbb
inc
lahf
jae
xchg
idivl
stc
cwtl
lds
cmp
push
call
addr16
fwait
scas
lahf
adc
stos
jnp
xchg
int
push
cmp
xchg
ja
loop
jno
or
jnp
mov
sbb
in
add
inc
subb
jge
pop
add
jg
stc
dec
add
jbe
icebp
subb
add
in
and
icebp
loop
clc
dec
add
fwait
pop
loope
ficoms
inc
jno
mov
das
sbb
stc
iret
mov
lea
or
inc
jg
mov
mov
bound
cmp
mov
ret
in
push
mov
es
dec
ror
iret
xor
or
inc
repnz
iret
inc
in
xor
sub
je
cmp
jge
mov
jg
testb
or
jmp
push
lea
xor
cmp
and
pushf
fidivrs
mov
int
subb
into
out
push
mov
jnp
sub
into
xor
testl
adc
daa
iret
ja
popf
iret
aam
repnz
int3
cwtl
sub
test
ret
or
js
adc
cld
out
xchg
addr16
dec
test
scas
test
and
mov
xchg
cmpsl
vphaddubw
lock
sbb
jnp
xor
in
inc
inc
lods
mov
jl
in
add
pop
lcall
cmp
cmovns
mov
or
xchg
mov
sarb
in
or
imul
cmpsl
outsl
mov
sahf
dec
lahf
pop
add
out
mov
outsl
dec
ret
mov
ja
jbe
pop
mov
inc
das
shlb
lods
pop
jnp
xlat
fwait
andb
test
cmp
repnz
mov
rcr
popw
sbb
dec
inc
jns
fwait
fs
lea
push
inc
imul
ja
push
inc
inc
pop
sbb
or
imul
dec
and
or
fcmovb
push
sbb
xchg
xlat
ret
insb
cld
xchg
jp
aaa
pop
inc
adc
cmp
mov
std
push
jg
aam
div
push
cmp
ret
fiadds
es
cmp
pushf
push
shlb
es
inc
mov
js
movsl
xchg
or
sbb
shufps
ja
hlt
cmp
cmp
or
adc
inc
ret
das
pop
js
or
jae
jle
xchg
dec
inc
pop
sub
push
add
mov
add
inc
xor
dec
decl
jnp
jg
lahf
mov
xchg
mov
sbb
inc
loop
cmpsl
lahf
stc
and
push
add
xor
pop
inc
popa
int3
mov
ret
push
scas
fdiv
dec
and
mov
daa
xchg
mov
push
adc
pop
stos
dec
cmpl
xchg
mov
inc
js
cmp
mov
loopne
mov
inc
jmp
adc
xchg
addr16
es
fistpll
xchg
push
xor
xchg
add
fwait
loop
shrb
ljmp
push
xchg
jo
sbb
lods
mov
cld
jnp
inc
icebp
xchg
aas
jle
fmuls
fs
insb
fisttps
xchg
add
dec
mov
add
ljmp
js
and
pop
cmp
mov
mov
popf
push
scas
jo
cmp
and
pop
pop
subb
pop
nop
dec
push
sbb
mov
add
nop
mov
ljmp
mov
popa
jmp
mov
push
mov
icebp
inc
push
jg
sbb
add
test
inc
out
jnp
jge
adc
imul
test
stc
lods
fdivrl
sub
adc
jle
int
lret
arpl
cmp
jnp
mov
arpl
mov
jb
in
inc
imul
aas
xchg
sbb
dec
ret
xor
enter
mov
lock
mov
adc
in
insb
in
pop
shll
jge
pusha
je
fildl
loopne
into
pop
out
mov
pop
jmp
jecxz
das
cmp
adc
pop
nop
cmc
pop
sahf
bound
mov
or
lods
imul
sti
lods
out
sbb
out
jp
lret
jnp
pop
push
jnp
stos
or
test
xor
mov
mov
in
mov
loope
stos
test
jo
mov
xchg
stos
cmp
jle
daa
in
out
outsb
test
inc
outsl
into
scas
stos
dec
fwait
stos
sub
lret
cmc
fstps
add
add
test
push
sbb
lds
sbb
mov
push
int3
shlb
push
xchg
cld
adc
fs
mull
popa
or
push
fwait
xchg
dec
adc
icebp
scas
xor
cwtl
loop
pop
arpl
sub
jno
pop
rol
fwait
or
dec
fstpt
mov
inc
pop
stc
mov
or
in
repz
pop
jle
or
mov
sbb
or
ret
orl
push
xor
pop
and
jns
add
ss
add
add
insb
aam
xchg
inc
xchg
sub
jo
je
pop
loop
jae
faddp
out
scas
es
push
mov
mov
stos
into
inc
jb
mov
jmp
sbb
add
insb
fbld
push
outsl
xchg
sbb
mov
adc
cld
stc
push
imul
jg
add
rol
add
push
out
and
jg
int3
aas
xchg
ss
push
imul
lcall
shlb
xor
aam
xor
mov
cmp
fwait
dec
adc
xor
pop
addr16
stos
iret
mov
mov
mov
jl
ja
sub
inc
popf
daa
add
sub
lret
add
mov
mov
mov
outsl
cmpsl
dec
pop
sbb
roll
and
mov
inc
repnz
les
or
lret
or
les
dec
inc
cmp
dec
fmull
int3
in
sub
mov
movsb
sub
jmp
stos
sbb
pusha
fisubl
mov
into
cmp
popf
mov
mov
loope
shrl
data16
pop
inc
inc
test
xor
pop
mov
jno
lods
std
insb
jmp
mov
pop
add
push
call
mov
xchg
jge
xchg
cmp
aad
jecxz
loope
cwtl
jge
iret
mov
rclb
orl
mov
lahf
mov
repnz
testl
or
es
jge
test
int3
divl
push
mov
dec
sub
fidivl
mov
inc
sub
stc
imul
cmp
dec
sbb
xchg
aaa
xchg
dec
mov
jno
es
jmp
lcall
shr
sbb
mov
xor
xor
add
test
cs
adc
mov
roll
add
arpl
lret
inc
or
or
int3
sbb
or
cmp
xchg
lds
cmp
mov
fwait
ljmp
dec
repnz
jbe
sub
inc
fwait
fisttps
shrl
cmp
mov
stc
cld
jo
mov
sbb
sbb
push
test
bound
divl
sbb
ja
fimuls
fs
inc
lods
insb
xor
dec
xchg
pop
cmp
fdivrl
nop
in
jmp
adc
jmp
push
in
movsl
jo
lock
cmp
cmpsl
xor
or
mov
mov
xor
sub
arpl
mov
mov
test
cwtl
mov
leave
adc
inc
imul
dec
test
push
sbb
ret
lods
xchg
sbb
ja
adc
mov
jo
daa
mov
daa
sub
mov
fisttpl
mov
faddl
xor
popa
fidivrs
and
jo
xchg
mov
test
xchg
sbb
stos
dec
aam
int
adc
pushf
leave
pop
lods
test
fdivrl
push
jge
sbb
pop
pop
in
cmp
ja
dec
jnp
into
add
pusha
mov
jl
dec
cmp
jg
jle
cmp
hlt
leave
stc
test
fistpll
jae
push
fs
adc
mov
out
lds
mov
test
mov
mov
lret
cmp
sub
in
fwait
mov
into
fisubrs
addr16
pop
adc
in
sub
jmp
imul
mov
and
stos
iret
out
mov
push
push
scas
adc
repnz
gs
daa
mov
pushf
stos
in
ss
inc
sbb
lahf
mov
lods
sbb
out
outsb
mov
jbe
js
lret
or
or
sub
lret
pop
pop
mov
int
or
mov
sbb
add
inc
popa
add
xor
dec
fisubrl
je
out
aaa
addl
jns
jmp
jnp
shlb
pusha
inc
lods
jbe
insb
mov
inc
dec
jmp
divl
sbb
pop
mov
insb
sbb
pop
mov
sbb
in
in
movsl
mov
sbb
push
mov
push
fimull
adc
cs
xor
add
js
test
flds
cmp
shrb
ja
inc
ja
out
bnd
into
test
ljmp
test
cmp
imul
cmp
out
out
popf
or
cmp
fldcw
addr16
pop
lahf
mov
push
xor
sahf
inc
imul
gs
les
mov
sbb
out
xchg
movsb
xlat
js
adc
addl
enter
xchg
loope
xor
addl
sbb
clc
sbb
mov
into
insb
ss
push
jo
and
dec
mov
mov
lret
and
mov
mov
xor
icebp
cmp
aas
mov
jae
js
xor
push
dec
cmp
push
xor
jmp
mov
mov
inc
cmp
inc
xchg
push
testl
mov
lcall
fbld
jo
xchg
into
ja
add
jecxz
cmc
pop
fildl
sbb
daa
scas
pushf
sub
add
xlat
lcall
das
outsl
stos
pop
xchg
insb
mull
pop
out
cmpsl
push
xlat
mov
outsb
or
flds
sub
cmpsl
cli
mov
cmp
pop
sbb
jge
pop
imul
leave
or
mov
je
ret
imul
lods
mov
cmp
int3
sbb
js
jg
daa
inc
andl
inc
test
cmpsl
and
xchg
pop
pop
cs
sbb
out
ja
add
aas
fidivl
jae
popf
sub
dec
inc
aas
cmc
cmc
in
fs
clc
fwait
out
leave
push
pop
inc
xor
sub
mov
ja
je
fnstsw
mov
mov
cmp
pop
and
cmc
mov
jmp
lock
ret
ljmp
jbe
jge
and
lahf
push
lods
test
fildl
pop
lock
addb
jno
xlat
adc
mov
jecxz
clc
bound
xchg
pop
cmp
mov
repz
fs
out
cltd
push
add
mov
or
xchg
cmpsb
pop
dec
ja
mov
outsl
dec
aas
dec
mov
dec
sbb
daa
cli
fbld
cmp
cmp
mov
je
ret
mov
lret
divb
pop
fistl
or
fwait
mov
lret
pop
rorb
fs
pop
pop
dec
imul
lahf
sbb
sbb
adc
les
sbb
mov
outsb
cmp
sub
movl
mov
clc
sub
ljmp
jmp
lahf
dec
scas
mov
mov
jp
sbb
pop
xlat
shr
cmpsb
adc
jle
cli
cmp
jmp
mov
mov
cli
cmpl
xchg
pop
sahf
scas
push
ja
cmp
out
lcall
mov
cmpsl
cmpl
xchg
xchg
clc
xchg
pop
jecxz
adc
dec
cli
add
mov
xchg
mov
mov
out
sbb
jmp
jb
sub
jb
adc
sbb
xchg
dec
cmp
xbegin
xchg
out
imul
push
pop
loopne
cmp
mov
jle
jl
mov
mov
or
mov
test
loope
fidivrs
adc
push
push
adc
lahf
xor
sub
movb
jae
out
ss
pushf
addl
mov
aas
mov
mov
and
dec
dec
aam
push
push
or
sub
mov
push
sub
inc
leave
push
loope
lahf
sbb
inc
adc
xchg
jl
add
mov
stc
xchg
sub
mov
dec
cmp
stos
mov
push
aam
add
ljmp
daa
xor
data16
or
aaa
xchg
dec
rolb
adc
loopne
mov
and
sbb
sub
add
testl
jo
xchg
xor
aas
clc
mov
sub
adc
xchg
xchg
jmp
fdivl
scas
mov
outsl
mov
cmc
stc
pop
push
sbb
add
test
outsb
add
nop
xchg
cmp
sarl
in
insl
xor
xchg
jbe
sti
pop
sbb
fsubr
sub
lret
das
mov
adc
cli
or
ja
push
cmp
repz
mov
rolb
dec
movaps
cmp
cs
popf
test
fisubl
mov
sbb
test
clc
xor
cmp
out
dec
xchg
mov
je
pop
shll
jp
ss
sbb
pop
fisttpl
aad
pusha
xor
xchg
fwait
jae
stc
pop
sub
out
mov
mov
sbb
ret
mov
or
cmp
sbb
push
mov
icebp
mov
sub
out
into
repz
and
inc
test
mov
cli
mov
daa
xchg
or
imul
pop
cmp
in
xor
inc
mov
dec
xor
shll
mov
cltd
mov
or
sub
xchg
cmp
cmp
mov
sbb
mov
into
or
cltd
outsb
imul
pop
lret
xchg
test
mov
or
fwait
mov
or
cmp
test
gs
jne
nop
dec
fstps
loop
dec
or
sbb
xor
fisttps
lods
sbb
stos
out
daa
jg
pop
js
mov
inc
popf
push
std
mov
stos
notl
out
sbb
mov
lods
jo
push
dec
testl
mov
pop
jg
out
dec
or
push
sbb
test
repz
adc
jle
push
sti
adc
jl
xor
gs
push
aas
lea
cmp
inc
das
ja
jmp
or
mov
data16
cmp
cmp
cmpsl
data16
fiadds
fwait
add
mov
adc
cli
and
mov
movsl
out
mov
dec
xor
stos
ret
jnp
push
xchg
ja
pop
mov
enter
imul
mov
out
loop
cltd
inc
popf
lea
mov
int3
lods
cmp
iret
sbb
das
sbb
stos
inc
inc
out
sbb
adc
inc
push
out
mov
mov
ja
sti
imul
pop
pop
aad
ljmp
mov
sub
notb
xor
dec
sub
and
sbb
sub
and
jp
sub
movsb
mov
pop
cmc
dec
push
mov
stc
out
xor
sbb
mov
xlat
test
pop
mov
dec
cmp
inc
into
loopne
mov
iret
or
mov
pop
icebp
mov
or
jnp
int3
sbb
movsl
adc
or
sub
mov
sbb
icebp
push
decl
in
rorl
sbb
and
neg
in
stos
cmp
cmp
dec
mov
stc
cmp
jmp
scas
mov
stc
or
sti
fldenv
imul
loop
or
clc
pop
mov
sbb
js
pop
jo
inc
push
or
sbb
fstps
jnp
mov
sahf
idivl
aam
jmp
and
iret
mov
mov
sbb
scas
incb
cltd
mov
xor
push
imul
mov
inc
add
cmc
out
test
inc
sbb
pop
pop
out
inc
dec
dec
lods
fwait
pop
shlb
ljmp
add
lods
mov
ja
mov
jmp
pop
sarb
addb
jb
shll
mov
sbb
cmp
mov
cmpsb
or
xor
sub
cli
dec
mov
loopne
sti
adc
jns
xor
mov
cltd
mov
mov
sbb
adc
add
jns
pop
repz
gs
or
repnz
sbb
js
js
or
pusha
stc
mov
inc
mov
sbb
test
jns
ja
jge
insb
aas
mov
rcrb
mov
cmp
and
dec
cmp
mov
or
fmull
mov
lds
fstps
or
or
jnp
dec
arpl
inc
xchg
sub
icebp
lods
add
bound
adc
adc
pop
iret
leave
into
ja
notb
inc
xor
fwait
mov
dec
cmpsb
out
scas
cli
cmp
push
inc
hlt
jns
dec
or
fildll
cltd
imul
dec
iret
sbb
loop
pop
icebp
adc
test
inc
dec
jge
add
daa
test
xchg
sbb
dec
in
or
xchg
pop
push
enter
adc
gs
mov
sub
push
jnp
fnsave
dec
sub
push
outsl
pop
mov
mov
and
xchg
dec
popf
fwait
dec
out
mov
in
sbb
adc
call
popf
add
mov
test
and
clc
leave
cmpsb
cmp
mov
fisubs
cmp
movb
sbb
fidivs
sbb
mov
mov
and
jmp
sbb
imul
xchg
fldcw
jbe
xchg
outsl
xchg
ja
int3
cwtl
sub
jmp
les
mov
aad
cs
mov
outsl
jnp
jle
in
mov
pop
adc
sbb
sub
test
js
insb
sbb
inc
push
out
cmp
xchg
jmp
mov
and
sbb
jg
pushf
mov
or
mov
lahf
daa
cmc
inc
sbb
cmp
push
cld
dec
mov
sahf
sbb
mov
rcl
jns
mov
faddl
push
fcomi
jg
or
pop
insl
or
test
sub
pop
mov
cmpl
sub
inc
xchg
out
sti
lods
insl
out
jae
jl
int
mov
push
leave
jle
sub
jle
lret
mov
adc
repnz
cmc
or
or
pop
sbb
mov
roll
push
mov
add
mov
sbb
iret
out
mov
arpl
jbe
fdivrs
push
jb
scas
pop
inc
fildl
stos
ja
daa
decl
into
lahf
push
sub
cwtl
shl
xchg
inc
cmp
mov
or
icebp
add
cmc
mov
rolb
pop
mov
xchg
pop
lahf
sbb
cmp
pop
adc
aam
push
test
je
subl
lods
fwait
insb
xor
sbb
mov
imul
fdivl
shrl
dec
cli
jecxz
inc
add
dec
jo
rorl
jns
out
into
dec
jle
ds
mov
xchg
jbe
inc
inc
sbb
into
mov
sbb
push
inc
add
dec
hlt
dec
pop
xchg
mov
push
sbb
cmp
add
sahf
out
call
fisttpl
test
sbb
dec
lods
test
push
adc
dec
aam
sbb
fisttpl
sarb
cs
pop
pop
test
push
xchg
cltd
xor
mov
fisubl
mov
pop
jle
jbe
jle
dec
and
in
decb
dec
daa
sbb
arpl
nop
std
jne
pop
int
sub
or
inc
mov
pop
lahf
mov
stos
mov
mov
cmp
add
adc
movl
cmp
push
mov
inc
stc
pop
out
stos
push
inc
sti
adc
arpl
sub
sub
rorl
and
addr16
or
pop
or
and
jmp
lods
test
movsl
jecxz
imul
cltd
mov
test
lods
xchg
mov
fsubl
pop
jge
jae
fists
inc
jbe
insb
fsubrs
into
xchg
add
test
js
pop
adc
mov
mov
loopne
jg
jmp
std
sub
add
xchg
out
sub
pop
lds
xchg
jge
sbb
pushf
and
sbb
bound
pushl
mov
dec
test
cmp
cmp
fwait
int
lock
push
adc
lods
in
imulb
mov
push
ds
jge,pt
shr
cmp
xchg
add
jl
sbb
loop
xchg
jnp
test
pop
fwait
or
or
fnstsw
nop
adc
cmpl
pop
mov
and
push
lods
dec
mov
rcll
fwait
outsb
arpl
fisubs
mov
imul
mov
lds
pop
add
repz
sub
add
mov
inc
xchg
inc
and
push
popa
loop
cmc
push
adc
dec
ljmp
mov
cmp
dec
pop
out
pop
sub
adc
dec
sub
dec
pop
cmp
test
int
push
jo
sbb
jo,pn
inc
push
mov
imul
outsl
xchg
mov
push
sub
inc
sbb
cmp
mov
lret
gs
cmc
jnp
sub
jle
jnp
dec
xchg
popf
sbb
jg
mov
push
cmpsl
int3
dec
lahf
fnstenv
mov
inc
hlt
sub
push
cmp
mov
cmp
cmp
popa
in
lds
sbb
pop
into
faddl
mov
cli
pushf
ficomps
test
mov
jecxz
push
adc
jne
leave
sti
outsb
pusha
jb
jns
inc
cmp
inc
inc
dec
or
xchg
and
mov
mov
adc
test
mov
ljmp
pop
lds
inc
jae
test
mov
sub
je
mov
je
jnp
pop
shlb
push
insb
mov
pop
jnp
cltd
dec
push
cltd
in
jnp
jae
xchg
movsl
pop
add
sub
mov
dec
mov
popa
or
fsubrp
add
push
mov
cmp
ja
cmp
pop
ljmp
pop
cli
nop
mov
sbb
xchg
pop
pop
fwait
push
adc
jne
lcall
push
inc
fs
testb
jnp
arpl
push
jns
in
pop
into
outsb
ret
test
enter
dec
jecxz
into
fisubrs
movsb
xchg
cmpb
notb
cmp
aas
sti
dec
mov
dec
jge
dec
jg
addr16
adc
repz
testl
lret
dec
cwtl
lcall
idivb
or
or
sbb
icebp
jns
pop
jns
popf
cmp
jno
popa
or
mov
stos
add
sub
xchg
mov
test
sbb
pusha
iret
pop
cmpsb
daa
push
js
mov
mov
cmp
sar
cmp
bound
fwait
rorl
adc
sbb
int3
pop
pop
jns
jl
arpl
ret
dec
lea
xchg
or
sbb
jnp
pop
data16
js
lahf
cmp
fsts
jp
clc
push
sub
addr16
push
clc
lcall
add
js
dec
cmp
cmp
or
xchg
adc
mov
xchg
mov
fisttpll
sbb
stc
test
push
pop
jle
xchg
mov
push
sbb
hlt
lret
mov
or
stc
pop
mov
in
jp
jnp
fidivl
sbb
ret
test
xor
xchg
or
jg
pop
repz
push
daa
or
jecxz
dec
insl
inc
outsl
jno
pop
shll
test
mov
fs
aam
pop
sub
pop
mov
dec
mov
mov
add
jmp
les
add
jmp
fdivrs
idivl
add
push
push
dec
xchg
xchg
xor
cmp
cmp
add
mov
jg
push
in
adc
imul
mov
adc
xlat
outsl
sbb
pushf
jb
inc
mov
cli
fisttpl
jg
ret
sub
sbb
repnz
pop
popa
mov
cmp
insb
sbb
movsl
movsb
popa
add
xchg
sbbb
or
jns
movsl
xor
sub
jae
adcb
ret
mov
testb
aas
in
add
sbb
mov
pop
sbb
fwait
cmp
sbb
inc
or
or
shrb
cltd
cmp
mov
sbb
adc
cli
sub
push
jle
push
mov
xlat
sub
js
jmp
pop
sbb
jno
inc
sub
sub
cmp
cli
or
push
sbb
add
les
sub
aas
insb
dec
mov
loope
nop
jae
std
cltd
dec
ljmp
cmp
iret
cmp
mov
inc
gs
jl
adc
mov
popf
mov
xchg
outsl
fistpll
adc
sbb
cld
data16
sub
push
mov
jge
mov
movsl
into
int
dec
fldl
mov
dec
ljmp
add
mov
xor
dec
sub
push
or
mov
cmp
roll
xor
stc
jle
inc
out
daa
out
sub
inc
jae
popl
sbb
inc
xlat
and
push
data16
mov
stc
nop
cmp
push
ja
std
sbb
iret
popf
sbb
mov
lods
and
imul
fs
rcrb
fsubl
stos
stc
jbe
loop
mov
pushf
jns
dec
dec
mov
pop
imulb
imul
insb
aam
in
add
sub
test
test
das
mov
jle
dec
jle
fwait
or
scas
loop
fwait
pop
sub
mov
push
add
movsl
out
jmp
jns
cmc
xchg
jge
fsub
nop
pop
popf
jmp
cmp
insl
pushf
fstpt
pop
mov
loop
adc
fs
jg
inc
popa
hlt
outsl
jp
pop
pop
dec
popf
cld
jecxz
in
cld
dec
cmp
cld
test
shlb
aas
clc
fs
inc
mov
mov
and
jnp
idivl
sti
mov
ja
cmpsl
std
mov
mov
popa
cli
outsl
push
jge
push
add
jae
xchg
aaa
test
inc
inc
rclb
addl
add
js
iret
fstpt
mov
cld
leave
add
test
sbb
push
sub
cli
cmp
ja
jno
cmpsl
test
sub
sti
and
add
sbb
inc
rclb
jb
sub
mov
add
data16
cmp
inc
sbb
cld
pop
jg
nop
call
mov
sbb
mov
dec
jo
fbld
repz
xor
dec
dec
imul
sahf
rcr
pop
clc
lods
fwait
jo
xchg
gs
test
loopne
xchg
push
lds
fsubl
leave
fstpl
rcrb
mov
cwtl
add
jle
mov
fisubrl
mov
push
loopne
or
outsl
pop
push
in
and
inc
hlt
arpl
adc
neg
popf
adc
mov
mov
sar
pop
jnp
loope
sbb
dec
imul
pusha
dec
adc
out
sahf
jb
fwait
repnz
rcr
aad
add
push
jmp
pop
clc
xchg
pop
cmp
test
and
sbb
outsl
mov
ljmp
xchg
popf
fmuls
out
adc
mov
push
mov
ret
fdivrp
insb
test
mov
or
jae
in
dec
jnp
jle
ljmp
mov
sbb
pop
or
lock
lods
mov
xchg
pop
test
mov
jmp
ljmp
push
pop
in
shrb
pushf
test
jl
popf
jne
sti
cmpsl
jp
push
jns
inc
pop
xor
pop
sbb
mov
vmovhps
sbb
repnz
insl
or
rorl
jge
inc
sbb
imul
push
sbb
pop
or
nop
pusha
arpl
push
or
insb
pop
or
cmp
pop
fnstcw
adc
cwtl
sub
cmpsl
jg
mov
neg
sub
or
arpl
jle
sbb
pop
mov
xchg
ds
pop
sub
mov
test
stc
push
xchg
sub
shrl
loop
jge
mov
adcb
jo
inc
push
sbb
xor
lods
inc
test
push
in
fnstenv
push
idivl
pop
and
pop
xchg
inc
adc
in
or
sbb
mov
ljmp
in
test
daa
pop
in
or
js
test
inc
and
jge
jle
outsb
daa
xchg
iret
jmp
cmc
xlat
sbb
xor
enter
xor
push
faddp
pop
cld
mov
call
push
in
stos
cmp
sub
bnd
add
mov
mov
jge
test
dec
and
lods
sub
cmp
add
inc
mov
xchg
sbb
xlat
mov
dec
jle
cmp
add
jl
xor
add
cmp
cmpsl
out
insb
push
rcl
ja
and
mov
sbb
rorl
pop
popf
sbb
jg
cmpsl
aaa
push
mov
scas
xor
sti
pop
fwait
stc
les
out
add
mov
sbb
and
jnp
loope
inc
cmp
jae
cmp
sbb
jno
les
in
add
pop
iret
fstpt
je
test
or
cmp
sbb
mov
cmpsb
adc
fwait
add
sub
mov
push
je
roll
fstps
test
test
and
pop
xchg
xchg
cmpb
jo
push
divb
cwtl
test
adc
mov
mov
loope
cli
lea
daa
mov
insb
mov
outsl
xor
ss
mov
lods
mov
sbb
xlat
je
in
push
mov
dec
push
mov
clc
pop
dec
xchg
in
ss
test
pop
das
imul
mov
js
aad
lahf
adc
adc
adc
imul
pop
int
xor
test
lret
pushf
sub
or
pop
mov
xchg
imul
mov
jg
inc
inc
dec
clc
ds
sub
lods
cmp
aam
ds
test
jb
mov
pop
imul
jnp
rclb
fprem1
cmpsb
pop
pop
mov
outsl
dec
xchg
gs
pop
cmp
shrb
add
cmc
xor
pop
clc
xchg
pop
sbb
mov
mov
mov
repnz
testl
add
int3
rcrb
dec
pop
add
inc
mov
imul
jmp
lods
sahf
mov
xchg
push
lret
sbb
test
mov
cmp
mov
mov
insl
pop
stos
jmp
xor
pop
pop
xchg
das
psubw
cmc
shr
lcall
test
fbld
fldenv
push
leave
sbb
test
dec
out
sbb
xchg
push
adc
or
jno
test
cmp
xor
cmp
mov
sub
stos
lods
mov
push
repz
or
movsl
movsl
push
daa
ja
je
addr16
lock
xlat
push
push
cli
and
push
cli
add
popf
addr16
mov
movb
lods
mov
aam
outsb
xchg
xchg
add
mov
imul
adc
lods
mov
or
rorb
jg
mov
clc
mov
pop
vpacksswb
or
mov
ja
jnp
orl
inc
orb
dec
cwtl
jo
addr16
cltd
mov
pop
mov
push
ja
cmpsl
test
inc
ss
mov
dec
rorb
ja
inc
adc
leave
dec
js
sub
sub
cmp
push
mov
xchg
inc
pop
cmc
testl
cmp
pusha
or
ss
xchg
dec
mov
lret
push
lret
mov
cmc
sub
cmpsb
dec
fwait
cmp
adc
scas
out
dec
jg
dec
scas
xchg
sbb
hlt
cld
mov
cmp
out
mov
push
leave
jns
gs
into
jecxz
sbb
inc
push
lods
lcall
push
sub
fmull
xor
or
ds
mov
fcomps
dec
sbb
ljmp
or
xor
mov
jmp
jecxz
jnp
adc
sub
outsl
mov
xor
jl
jne
movsl
mov
jnp
dec
and
pop
cmp
cwtl
sbb
addr16
stos
inc
pop
inc
or
mov
stc
push
sbb
std
in
sbb
xlat
cmp
insb
adc
mov
out
test
add
mov
aaa
iret
div
ljmp
and
xchg
imul
and
clc
rcrl
dec
push
dec
div
xor
pop
cmp
ja,pn
in
cmovo
inc
inc
xor
movsb
cmp
adc
sbb
rcrl
addl
xchg
xlat
sub
sub
fcomp
push
repz
inc
jmp
jmp
repz
gs
outsl
imul
lods
xchg
inc
sbb
out
js
push
push
cmp
fildl
icebp
idivb
orl
jae
mov
or
test
push
aad
mov
std
cmp
test
jle
mov
adc
daa
fidivs
inc
jmp
cmpl
inc
cmp
lock
ss
mov
dec
jge
dec
and
cltd
sbb
pop
iret
dec
sub
int3
sub
xor
pusha
out
xor
cmp
xchg
es
scas
mov
popa
xlat
adc
jns
pusha
or
jl
das
ljmp
jns
mov
pop
pop
or
and
cmpl
dec
jnp
rorb
hlt
sbb
add
mov
and
mov
inc
gs
test
test
mov
mov
shll
dec
sbb
jbe
jmp
jmp
mov
jge
cmpsb
mulb
dec
stc
jae
cmp
jmp
xor
addl
int3
mov
push
xchg
enter
push
push
pop
dec
push
pop
insb
lods
fists
test
repnz
cmp
out
sub
pop
adc
lods
test
int3
inc
popf
iret
fs
sbb
aam
sub
lock
enter
arpl
jae
or
lahf
add
cmp
mov
cmp
jmp
sub
ja
lods
or
iret
in
push
dec
jge
mov
test
inc
subb
sub
pusha
or
xchg
cli
pop
fidivrs
jle
sahf
xchg
aaa
pusha
loop
das
cmp
insb
sbb
pop
cmp
inc
sbb
inc
sbb
mov
and
jmp
out
mov
push
cmp
imull
push
jle
inc
pop
js
sbb
jb
lea
lcall
pop
push
cwtl
cmpsl
mov
push
add
inc
xor
loopne
jle
dec
jge
in
adc
fsubp
stos
je
cmp
orb
xchg
and
inc
cld
xor
mov
pop
in
or
pop
add
dec
aad
repnz
sub
dec
test
test
pop
test
add
sub
push
xor
aaa
data16
push
cmp
iret
push
pop
add
push
loopne
mov
cmp
xchg
pop
add
adc
test
push
in
push
pushf
cmp
test
mov
ja
mov
mov
stos
cmp
mov
ljmp
cmp
dec
or
inc
add
test
sbb
dec
jle
aas
fwait
daa
mov
sbb
andl
add
inc
or
addb
loop
ds
ror
out
test
lcall
push
jge
mov
pop
out
std
adc
jmp
jnp
push
cmp
ds
mov
push
loop
jmp
js
jb
pop
fstl
adc
sub
mov
or
xchg
in
adc
cmpsb
dec
cwtl
cmp
and
pop
inc
jmp
push
mov
mov
orb
dec
stc
cs
and
and
mov
sbb
es
stos
ja
test
cmp
or
mov
daa
push
pop
hlt
enter
test
cmp
jge
mov
test
cmpsb
lods
es
dec
adc
inc
jp
pop
hlt
pop
mov
test
xor
dec
pop
pminub
out
cmp
sbb
subl
xorl
dec
mov
leave
pop
add
push
xlat
lds
mov
xor
ficompl
bound
mov
dec
pusha
jnp
pop
mov
ljmp
cmp
cmpsl
sub
int3
jge
push
cmp
adc
mov
push
shrl
orl
mov
cmp
jge
stc
subb
inc
clc
pop
dec
mov
mov
pop
sub
insb
push
ljmp
fnstcw
aam
jp
inc
mov
xchg
rcrl
lret
ds
ja
jg
or
std
or
and
mov
xlat
jge
add
jg
js
cmc
dec
js
insb
inc
repz
jle
xchg
dec
dec
cmpsb
cmp
pop
cmc
dec
or
push
mov
jnp
scas
lahf
les
outsb
add
into
scas
incl
pop
dec
add
xchg
push
mov
pop
sub
xor
cmp
jne
sub
xchg
test
jl
fiadds
movsl
adc
or
mov
bnd
inc
pop
inc
lods
cmp
cmpsl
xchg
insb
test
leave
jge
jb
test
sub
cmp
jp
popa
nopl
inc
sbb
mov
mov
cmpsb
mov
into
int
add
int3
ja
jle
xor
aam
mov
pop
loop
sbb
ljmp
inc
movsl
push
insb
inc
dec
js
adc
pushf
push
xor
add
mov
and
rorb
mov
dec
xor
push
sbb
imul
adc
add
jno
pushf
sahf
cmc
mov
cmpsl
inc
sbb
gs
lds
mov
jecxz
test
and
jb
sahf
mov
mov
icebp
cmpsl
inc
sub
or
jo
push
rolb
push
jecxz
push
fnsave
dec
sub
mov
cltd
jl
mov
pop
pushl
mov
xor
movsb
pop
out
leave
or
pushf
jmp
sbb
lods
mov
out
test
and
push
scas
popf
jge
ret
lds
jl
add
pop
test
arpl
cmp
loopne
xchg
jmp
jmp
or
pop
shl
int3
adc
and
sbb
dec
ja
test
orb
mov
js
sbb
pop
mov
xchg
jg
lret
lods
mov
sub
popa
push
cltd
insb
and
cld
xor
xchg
in
mov
pop
cmp
push
push
outsl
jmp
popl
pop
or
aas
push
test
stos
xor
pop
stos
jg
xor
in
nop
and
testl
cmp
mov
loopne
jmp
cmp
popa
jmp
sbbl
add
outsl
pop
inc
sbb
jno
sahf
jae
jnp
sbb
mov
inc
jne
pop
ss
inc
cmp
jl
push
sub
in
bound
in
mov
out
dec
jp
jl
mov
sbb
pop
out
inc
jp
fcomi
jne
fwait
pop
mov
cmp
repnz
pop
sbb
pop
inc
or
les
cmp
push
add
jmp
pushf
fistps
leave
xchg
sub
lds
xchg
inc
lds
or
add
and
mov
lret
xchg
js
push
sbb
add
sbb
push
je
sub
sbb
and
ret
xorb
in
into
cmp
xor
negl
aad
inc
jmp
movsb
cmp
push
mov
push
add
mov
push
data16
xchg
push
cmc
dec
pop
aas
loope
cld
data16
cmp
cmp
mov
js
mov
loope
lock
out
scas
and
mov
scas
sub
cmp
inc
sbb
mov
sub
jns
sub
sbb
dec
mov
or
jnp
jge
mov
popa
cmc
mov
jo
mov
mov
xchg
inc
push
cwtl
ss
lahf
push
sti
scas
jne
fs
cmp
aas
adc
dec
mov
cmp
ja
repz
cmc
ja
jne
mov
push
test
pop
enter
dec
inc
addr16
lds
test
add
or
dec
adc
test
dec
mov
ret
lcall
or
shll
inc
daa
rorb
xchg
or
ja
push
cmp
cmp
and
add
xchg
test
out
outsl
push
dec
out
xchg
scas
std
adc
andb
add
jg
sbb
add
ja
mov
loop
cld
repnz
mov
cs
add
outsl
es
sbb
aas
jg
out
jle
cmp
adc
mov
push
mov
mull
mov
divl
stos
jle
mov
dec
pop
cltd
inc
or
add
cmovg
add
roll
adc
or
dec
out
insb
ds
xchg
cmpsb
pop
adc
jle
outsl
adc
je
adc
jmp
and
lock
das
xchg
mov
xor
or
imul
data16
push
lahf
mov
ret
lea
sbb
dec
and
fbstp
std
or
cmc
addr16
js
jmp
cmp
imul
jns
cli
jmp
adc
testl
xchg
testl
decl
std
clc
add
jne
sbb
inc
out
adc
jo
inc
fwait
add
imul
lret
xchg
push
push
dec
mov
ljmp
mov
xor
mov
cmp
mov
and
inc
aad
xchg
xor
jbe
sbb
aaa
sub
int
mov
icebp
rolb
inc
or
push
pop
mov
jae
dec
jle
mov
jle
push
das
cmpsl
scas
imul
loope
cmp
clc
lahf
cmp
gs
sti
sti
outsl
cmova
scas
inc
pop
aaa
clc
lahf
mov
mov
xorb
dec
js
pop
mov
lahf
pop
cmp
leave
fistl
or
inc
sti
cmp
jnp
cmp
jae
outsl
gs
xchg
adc
out
xor
js
mov
sub
add
sbb
mov
leave
add
xchg
rcrl
dec
cmpsl
pop
in
scas
push
popa
xchg
pop
fs
out
cmp
stos
popa
sbb
adc
xchg
xchg
es
je
jl
dec
or
outsb
and
lea
jge
sbb
mov
adc
lods
add
outsb
scas
fwait
adc
int3
cmpsb
jmp
push
sbb
mov
push
cmp
adc
jp
sbb
divl
nop
inc
out
mov
fists
inc
test
mov
movl
mov
test
and
pop
mov
pop
jne
divl
fwait
addl
dec
ja
pop
test
ss
push
jp
out
push
aam
cs
pop
mov
xchg
dec
push
sub
mov
cmp
sub
sbb
pop
cld
or
fwait
pop
scas
jl
jecxz
dec
cmp
iret
fwait
pop
in
or
std
cmp
adc
jo
shll
xor
push
cmp
shlb
or
pop
lret
dec
test
icebp
inc
lcall
mov
stos
mov
out
sbb
cmpsb
push
xor
add
adc
popf
sub
pop
xor
pop
sbb
dec
jbe
fcompl
sbb
ds
pop
mov
xchg
inc
cmpsb
xor
pop
mov
xor
inc
xlat
mov
fsubrs
push
js
mov
cmp
lahf
fucomi
lret
ss
add
mov
mov
adc
inc
leave
sub
or
pop
orl
add
push
filds
inc
jns
cmp
addr16
ljmp
ror
xchg
inc
out
pop
lahf
xchg
mov
or
popa
std
xchg
or
out
popl
sti
mov
out
dec
or
pop
xchg
dec
xor
adc
pop
mov
add
incl
adc
js
addr16
mov
ljmp
in
jl
lret
xchg
notl
sbb
jns
stos
or
xchg
les
jmp
ret
lahf
mov
mov
inc
xor
cwtl
fstpt
dec
xchg
jg
adc
lcall
jae
fcmovbe
cmp
pop
sti
idiv
sbb
fdivrl
mov
lahf
xor
cmp
push
pop
xor
aaa
ljmp
xchg
fs
xchg
sub
out
repz
shrb
insl
lahf
cmp
jmp
cmc
out
and
adc
aad
fidivrs
sti
outsl
test
xor
scas
sbb
push
dec
jge
adc
and
sbb
xor
pop
fs
clc
iret
or
les
inc
pop
jae
xchg
push
cmp
repz
xor
or
push
in
dec
add
fwait
mov
iret
call
xchg
mov
std
and
js
dec
lock
dec
jnp
and
daa
cltd
repz
je
mov
pop
pushf
clc
xchg
fsubr
xorl
inc
and
pop
hlt
into
add
sbb
jmp
xchg
fs
lret
mov
out
je
jbe
cmp
push
sbb
out
pop
push
jl
or
mov
jne
sti
and
or
cmp
jecxz
mov
repz
cmc
push
mov
dec
add
cmp
stc
sbb
cmp
aas
in
sbb
insb
icebp
adc
iret
mov
leave
int
mov
adcl
sub
cmpsb
or
dec
xor
sti
sahf
js
sbb
fdivrl
sbb
or
lgs
xor
mov
xchg
mov
add
adc
fdivr
push
cmp
cltd
test
dec
xchg
xchg
int
addb
aas
xchg
ss
test
jg
xor
arpl
sbb
sbb
push
xor
add
stos
out
pop
cmp
bound
jecxz
adcl
sbb
mov
sahf
sbb
pop
xchg
cmp
add
or
add
idivl
fistps
adc
cmp
add
aas
mov
fidivrs
outsl
push
shr
cmp
repnz
lcall
pop
cmp
xchg
cmp
ja
mov
test
pushf
cwtl
mov
lcall
pop
js
addr16
outsl
ret
into
popf
inc
scas
stc
jnp
cmp
xchg
jnp
jg
arpl
leave
loope
mov
sbb
mov
mov
mov
lcall
xchg
movl
sbb
addr16
rolb
inc
add
jg
mov
sub
loope
push
iret
cmpsl
pop
mov
pop
aam
pushf
rorb
pop
pop
xlat
iret
js
sti
into
xchg
test
add
test
fisubrl
sbb
sbb
pop
cmp
dec
aad
jmp
or
insb
ret
mov
cmc
fidivrs
pop
mov
jns
or
jbe
mov
and
mov
cmpsb
pop
jg
hlt
lods
fs
sbb
push
xor
jecxz
int
js
test
cmp
xchg
sti
minps
dec
jne
ja
mov
xlat
mov
inc
fldt
mov
pushf
or
or
sub
aas
jns
inc
xchg
js
push
inc
out
inc
cmp
call
lea
mov
ret
sbb
inc
rolb
shrl
jmp
cmp
add
jmp
sbb
notl
mov
mov
and
or
js
cmpsl
decb
test
sub
pusha
stc
push
push
pop
sti
lret
int
xor
jp
adc
outsl
adc
inc
negl
adc
or
cmpsl
fidivrs
test
mov
dec
and
dec
cmc
inc
cli
shlb
push
push
mov
sti
leave
call
adc
inc
fdivrs
push
xchg
cmp
jns
dec
imul
ljmp
rorb
jecxz
mov
call
lahf
dec
daa
xchg
clc
or
ja
push
stos
ss
incl
sarl
addl
xchg
xchg
inc
push
loopne
jno
mov
stos
repnz
nop
xor
jns
jns
sbb
inc
sbb
test
inc
aam
and
dec
addl
sti
pop
or
test
fdivrl
or
stos
mov
inc
sub
scas
das
out
mov
mov
add
pop
xor
fldcw
ja
mov
es
inc
dec
adc
push
xchg
pushf
or
in
mov
jno
lret
dec
insb
cmp
in
cmp
jne
mov
dec
outsb
add
dec
push
pop
test
add
fisubrs
fnstenv
pusha
loope
cmp
add
jns
xchg
icebp
jp
outsl
or
dec
inc
cmpsb
cwtl
jecxz
fstps
adc
shll
ret
or
jle
outsb
xor
cmp
pop
test
js
rorb
push
fnsetpm(287
orb
out
cld
mov
push
inc
loop
inc
mov
jmp
shr
das
mov
jecxz
jae
popa
xchg
jle
xchg
mov
mov
sti
rcrb
lret
sub
jne
cmp
jmp
jb
sbb
mov
sub
leave
gs
jne
or
or
mull
popa
mov
push
stos
jno
daa
dec
xorb
idivl
push
mov
adc
xchg
test
inc
pop
jl
add
cmp
in
or
inc
out
xlat
cmp
push
xor
add
adc
sbb
daa
jg
out
enter
outsl
cmp
pop
dec
jbe
out
arpl
push
aad
cltd
sbb
test
ja
jns
sbb
or
jecxz
inc
mov
and
icebp
aam
mov
xor
push
pop
out
ss
mov
cmp
mov
push
js
xchg
sub
mov
cmp
ljmp
out
fsubs
jmp
pushl
mov
adc
mov
mov
mov
std
lahf
jle
mov
dec
sbb
adc
cmp
js
add
sahf
push
sbb
dec
dec
pop
cmc
and
clc
fwait
orl
pop
push
inc
or
jle
xchg
xor
sbb
pslld
mov
ds
push
fstpl
mov
ret
rcll
mov
or
outsl
shl
orb
gs
sbb
cmp
cmp
cwtl
xlat
ds
push
xchg
push
jge
xchg
push
xchg
xchg
popa
sub
repnz
sub
js
js
mov
insl
in
loopne
dec
movsl
test
xchg
sti
dec
or
adc
imul
xor
sbb
lcall
movsb
out
lods
add
mov
cmp
xchg
pusha
iret
sub
and
imul
enter
scas
iret
scas
mov
hlt
and
iret
pop
cmp
sub
cmp
push
push
mov
mov
aad
pop
stos
popf
sti
test
lock
mov
rclb
addl
jo
repz
mov
sub
sbb
add
rcrl
jmp
ja
xchg
sarl
bound
jb
test
xchg
mov
mov
mov
icebp
popa
dec
leave
mov
sub
pop
mov
or
fbld
test
in
or
shrl
shlb
or
jnp
mov
mov
das
pop
cmp
pusha
jge
vmread
cmp
int3
out
add
inc
dec
cmp
pop
inc
jecxz
lock
fnstcw
insb
xor
insl
iret
cmp
loope
popa
mov
lret
dec
gs
or
pop
xchg
sbbb
sbb
sbb
add
push
adc
out
outsl
and
daa
pusha
orl
jle
pusha
sbbl
insb
jmp
fwait
pop
xchg
div
dec
inc
xchg
scas
pop
lahf
mov
and
xchg
addr16
sbb
xor
xor
and
lret
pop
and
xor
es
aam
js
das
dec
lea
loopne
fucomip
and
stc
dec
lds
orl
std
outsb
or
mov
fcompl
cmp
jne
inc
adc
test
xchg
cld
mov
repz
nop
pop
dec
mov
jl
xchg
cmp
pusha
rorb
leave
mov
mov
pop
in
add
pop
ja
fcomps
push
cmp
cmpl
lcall
mov
pusha
mov
jmp
cmp
std
pop
inc
cmc
lret
inc
pop
jmp
jnp
jmp
adc
xor
in
repz
jns
or
mov
mov
sub
stc
jnp
xor
push
or
mov
ficoml
iret
fsubr
cmp
jmp
sbbb
dec
mov
jg
pop
sbbb
daa
jg
lcall
mov
into
cmp
mov
sub
test
negl
arpl
add
neg
sub
inc
lret
notl
jne
addr16
push
imul
push
jge
dec
cmp
pop
xchg
pop
lods
mov
clc
pop
cmp
mov
cmpsl
andb
mov
cmp
hlt
mov
insb
insl
jnp
imul
xorw
cmp
sbb
les
jns
xchg
or
addl
pop
or
adc
test
popl
psrlw
xchg
sbb
mov
xor
mov
daa
mov
mov
test
fidivrl
outsl
rcll
cmp
xor
fdivl
xchg
pop
or
and
mov
jmp
dec
dec
ja
gs
jp
xchg
sbb
jbe
outsb
sti
out
cmp
xchg
sbb
ja
lea
daa
jno
mov
push
jg
mov
mull
mov
lret
jmp
mov
aam
std
bound
sbb
pop
pop
test
stc
mov
pop
adc
ljmp
movd
cmc
xchg
mov
sbb
sub
bound
cmp
jp
add
jg
jns
pop
cmp
sbb
sti
jno
add
loope
sub
xchg
fs
daa
leave
dec
and
adc
dec
negl
in
prefetcht0
faddl
dec
fwait
js
sbb
jnp
sbb
stc
sbb
test
sbb
add
in
mov
cmp
lret
jmp
push
mov
xchg
iret
fimuls
xor
clc
jae
xor
adc
cs
mov
std
adc
or
ja
cli
addr16
push
inc
add
rcr
movsl
rolb
push
jge
jmp
and
je
rcll
mov
pop
lock
mov
inc
ljmp
ret
mov
jnp
cmc
dec
out
sbb
aam
dec
lods
cmp
adc
dec
and
pop
mov
push
aam
call
pop
out
dec
sub
mov
jp
add
add
xlat
jle
out
arpl
cmp
inc
jg
mov
xchg
sbb
mov
xorl
mov
scas
mulb
mov
pop
fcmovnbe
cmpsl
cmp
dec
or
mov
mov
adc
pop
in
shl
mov
sbb
enter
addr16
outsb
fcmovu
iret
movsb
inc
mov
inc
and
repz
repnz
cld
pop
jmp
std
in
cmp
in
lcall
xchg
dec
mov
arpl
adc
sub
adcb
xchg
out
push
cmp
mov
mov
and
cmpsb
or
and
push
dec
adc
cvtdq2ps
push
int
cmp
dec
push
dec
negb
daa
sbb
icebp
repz
icebp
xchg
insb
std
bswap
call
and
or
fs
xchg
popf
dec
rcr
mov
push
sbb
jge
dec
mov
add
inc
into
popa
in
xor
cmp
mov
addr16
fdiv
xchg
les
lds
mov
outsl
mov
push
sbb
inc
sti
or
stos
inc
mov
popa
adc
jp
jo
ret
sub
out
cmp
mov
mov
mov
cld
xlat
xlat
aam
cmpsl
or
cwtl
js
cmp
add
adc
jecxz
inc
iret
jb
mov
push
mov
or
jb
lods
cmc
js
call
mov
cs
inc
test
shrb
and
mov
xor
xchg
add
or
mov
push
pop
cmp
dec
push
or
mov
add
xor
jmp
push
stos
aam
or
pop
push
ss
cs
inc
stos
out
add
outsl
xlat
test
mov
push
mov
aas
mov
fwait
lods
and
jp
pop
adc
int3
push
ficomps
pop
jae
dec
xchg
orb
cltd
jnp
and
dec
dec
fcoms
push
mov
mov
dec
enter
push
inc
ret
into
lds
push
cmc
jae
xor
das
ds
test
adc
xlat
or
dec
daa
btr
outsl
inc
movsb
or
sub
mov
sbb
hlt
ficomps
mov
adc
filds
jge
in
loope
lea
inc
jns
cmpb
and
cmp
sarl
mov
xor
jmp
jge
sbb
sbb
push
sbb
jle
xlat
fidivrs
cmp
js
out
ja
mov
movsb
test
cmp
setl
aaa
pop
ss
sub
test
or
dec
dec
stc
notb
sbb
rcrl
imul
or
sbb
sub
dec
daa
pop
dec
pop
aas
iret
lret
xchg
addl
pop
mov
add
imulb
je
sub
pop
xchg
out
lret
add
xchg
fs
cli
movsb
cmp
mov
stos
sti
xor
in
dec
or
popa
cmpsl
mov
pop
cmpl
add
into
mov
xchg
fdivrs
outsl
imul
popf
dec
add
in
cmp
in
add
lret
add
rolb
mov
ja
ja
mov
in
call
mov
mov
mov
iret
mov
xor
pop
lods
and
cli
sub
mov
dec
push
pop
mov
push
cmp
iret
mov
idivl
jl
loop
mov
js
dec
add
cmc
or
mov
lahf
adc
mov
push
mov
jle
push
add
inc
cmp
call
dec
testl
pop
movsb
adc
fldln2
ljmp
imul
push
cli
pop
flds
mov
sub
pop
adc
or
mov
jecxz
adc
lahf
loop
shrl
pop
test
das
pop
adc
xchg
mov
jp
mov
ret
xor
xchg
jae
mov
scas
fwait
add
xchg
xchg
cmpsl
js
pop
jle
or
jecxz
sahf
pop
or
roll
push
in
into
test
push
xor
xchg
jge
add
std
sub
sub
mov
jge
addr16
mov
ficomps
movsb
ljmp
out
push
aas
xchg
lret
in
cmp
xchg
in
jmp
xchg
or
mov
xor
andl
pop
jmp
mov
je
fadd
inc
lock
mul
in
add
fstpt
rcrl
ss
aas
adc
lods
and
ja
pop
jle
jbe
sbb
push
sti
pop
imul
icebp
shll
loop
addr16
mov
add
jns
or
ret
cs
mov
cmp
cmpsl
sub
imulb
add
push
inc
xchg
xchg
aaa
pop
jmp
sbb
test
popa
mov
push
xlat
pop
ss
xor
in
mov
fsubrp
lret
cli
push
jl
mov
jmp
test
xor
cli
daa
scas
cmpsb
mov
sbb
out
movl
pop
push
movsb
xor
dec
hlt
xlat
sub
inc
es
mul
or
in
pop
stc
dec
cmp
cmp
incb
into
mov
cmp
out
pushf
inc
mov
xor
nop
test
aas
clc
cmpxchg
jp
dec
pushf
cmc
adc
popf
inc
lods
jb
push
test
loop
jns
cmp
sub
cmp
xor
fnstcw
fdivrl
push
aaa
dec
or
dec
pushf
adc
inc
mov
ja
popf
lret
pop
mov
dec
mov
fstps
push
fadds
push
mov
push
icebp
cli
int3
dec
xchg
mov
xor
cmp
idivl
or
dec
fstpt
adc
dec
mov
pop
mov
rorb
or
fucom
loop
pop
mov
adc
jp
cmp
stos
jp
aas
or
out
push
ret
push
mov
cmp
ljmp
dec
pop
push
dec
faddl
jl
clc
divl
sbb
and
into
sbb
mov
lods
test
bound
dec
cwtl
test
sbb
add
in
mov
pop
das
inc
sub
jl
cmp
out
pop
push
push
jg
jno
add
xchg
mov
js
gs
leave
ficomps
scas
pop
xlat
inc
insb
repnz
lock
or
lahf
mov
and
fstpt
sub
dec
xor
adc
fisttpl
in
fdivl
cmp
mov
test
jle
pop
mov
lds
fbld
xor
aad
adc
xchg
cs
push
mov
fnstsw
mov
lea
sbb
xlat
les
xchg
mov
cmp
push
orb
sbb
jae
les
jne
sahf
popa
bound
adc
push
pop
flds
add
sbb
loop
out
ror
ja
cwtl
lock
andb
mov
rcrl
imul
test
ss
enter
dec
jge
std
aas
sarb
mov
sbb
nop
lret
stc
fistpl
insl
fbld
xchg
pusha
push
outsl
icebp
sub
push
into
ret
loopne
and
jp
aas
loope
cmp
movsb
inc
dec
jmp
mov
push
sub
cmp
dec
int3
push
iret
push
test
iret
imul
push
pop
lods
cmp
add
insb
data16
daa
inc
sub
xchg
test
inc
in
mov
jns
add
push
movsl
sbb
les
xchg
ja
test
dec
xchg
aad
inc
lds
and
les
push
js
lahf
push
inc
and
pop
mov
fwait
mov
cs
fdivr
rcrl
add
xlat
test
in
mov
out
fadds
mov
addb
rolb
xchg
or
cmp
jmp
push
lds
leave
pop
add
fcomps
mov
add
cmc
mull
int3
inc
jns
repz
nop
mov
dec
jp
push
or
test
test
sub
add
push
mov
jb
outsl
xchg
mov
push
dec
push
or
cwtl
lock
jg
cmp
add
ret
mov
jae
ss
ja
arpl
xlat
pop
es
cs
lret
and
repnz
mov
std
pop
or
lahf
movsl
sti
faddp
jg
cwtl
loop
in
lahf
decl
cmp
scas
lds
lret
andl
outsl
mov
push
mov
jg
jecxz
push
std
ret
imul
test
sti
push
pop
add
das
jnp
pop
pop
pop
pop
pushf
add
cwtl
gs
push
fsubp
jae
lods
inc
lds
and
cmp
gs
xchg
loop
pop
insl
xchg
lea
mov
popa
adc
arpl
mov
adc
pop
out
faddl
mov
adc
stc
mov
hlt
dec
mov
push
mov
insb
pop
andl
adc
into
add
or
inc
sub
pushf
inc
mov
cmp
insb
test
mov
scas
cs
into
pop
dec
and
sbb
inc
in
add
scas
call
std
movsb
js
pop
aam
outsl
arpl
xchg
push
cmpsl
in
push
mov
cmp
cmp
lds
xlat
cmpsb
mov
addr16
cltd
dec
mov
repz
jne
popf
cmp
xchg
sub
xchg
popf
rcr
fimuls
sahf
in
xor
jne
inc
aas
mov
addb
shrb
fwait
repnz
xchg
insl
and
push
stos
incl
fisttpl
mov
mov
push
lret
cmp
inc
cmpl
outsl
jae
insl
sub
loope
xchg
cmpsl
cmpsl
pop
fdivr
jne
pop
push
pop
jge
ss
push
pushf
sbb
icebp
popf
add
cmp
test
cmp
out
into
out
push
into
leave
jecxz
sub
push
dec
mov
jecxz
adc
cld
lcall
dec
cs
shl
sbb
and
ret
push
js
pop
or
inc
fistpll
negb
loopne
fstpt
pop
sbb
sti
fistpll
repz
jg
insb
mov
jb
sbb
inc
adc
lock
or
jp
jnp
push
mov
in
stc
cmp
scas
adc
xchg
add
pushw
mov
sbb
mov
testl
sbb
clc
stos
inc
sbb
imul
add
mov
cmp
pop
sarl
mov
jo
add
mov
cmp
push
push
divl
cli
mov
mov
inc
jg
sbbl
adc
add
and
pop
cmp
jne
push
mov
push
out
mov
mov
cmp
sbb
cwtl
mov
sarb
int3
mov
cld
sarb
push
test
int3
outsb
lods
pop
or
inc
addr16
bound
mov
ficoml
nop
pop
sbb
lret
idiv
sbb
cltd
dec
sbb
mov
add
sbb
negl
or
pop
sub
jp
mov
sbb
imul
push
add
int
addr16
aad
lds
sbb
cmpsb
stc
std
xchg
xchg
sbb
mov
dec
inc
add
imul
push
sbb
lahf
or
push
inc
pop
fidivrl
xor
mov
add
sub
fstpl
idivl
cmp
cld
sarb
fwait
bt
ja
mov
out
inc
in
or
fiaddl
xchg
ror
cmpsb
push
testl
pop
and
jg
pop
jnp
jns
pop
sbbb
push
sti
fimuls
pop
cmp
jle
mov
fiaddl
pop
xchg
repz
test
inc
stc
popa
add
int3
xor
int3
dec
or
insb
lods
stos
psubsw
jle
subl
lods
in
mov
sub
test
arpl
inc
aas
lret
push
mov
ret
testb
cmc
clc
mov
filds
popf
pop
pop
insb
rclb
out
imul
int
or
das
sub
insb
fstps
pop
imul
push
xlat
xchg
insb
sbb
xor
inc
xchg
popf
mov
xchg
and
lcall
xchg
add
test
or
and
or
inc
sub
xor
notb
fnstsw
daa
cmp
push
add
or
mov
mov
aaa
sbb
movb
jns
xstore-rng
cmpsl
test
or
push
rorb
inc
shrl
scas
mov
out
nop
jg
pop
ficoms
add
mov
movsl
dec
jge
dec
ja
imul
sub
inc
das
loopne
dec
pop
dec
adc
imul
notl
inc
inc
in
add
arpl
idivb
jle
mov
in
jge
push
aam
pop
or
inc
mov
cmp
test
aas
shlb
xchg
cmp
out
jne
inc
loopne,pn
adc
cmp
lods
ja
lods
sbb
pop
dec
fs
and
mov
dec
es
or
arpl
or
flds
jl
inc
mov
mov
jnp
or
inc
pop
stos
sub
hlt
push
cmp
inc
sbb
jmp
in
sub
andl
dec
pusha
push
sbb
jl
test
scas
stos
dec
ficoml
sarl
rcll
or
ret
orb
shlb
cmp
pop
cmp
adc
cmpl
mov
bound
or
push
jmp
pop
iret
cmp
mov
jns
fs
xchg
sti
mov
mov
stos
ja
inc
sbb
movsb
int
adc
fists
adc
addr16
incl
mov
outsl
jp
xchg
imul
jg
cmp
gs
fwait
out
popf
test
faddp
or
mov
and
in
and
inc
inc
icebp
in
in
lods
inc
dec
mov
mov
sub
inc
xchg
sbb
and
cmp
push
mov
iret
or
jno
iret
jg
fsubrs
les
xor
fwait
out
sbb
test
xchg
cmp
cmp
and
or
dec
add
out
and
ljmp
stos
mov
dec
push
dec
xor
loope
pop
movb
mov
int
mov
mov
mov
jle
mov
pop
imul
or
cld
clc
add
addr16
xchg
lret
xchg
cmc
in
cmc
or
dec
stc
loopne
adc
xor
into
cmp
cmp
or
scas
or
or
sub
jne
dec
or
jnp
mov
pop
inc
mov
cmp
adc
mov
adc
or
cmp
jne
les
leave
sbb
cmp
jno
sbb
cmp
filds
enter
outsl
stc
repnz
mov
test
sub
mov
into
pop
imul
ret
push
test
sbb
push
xchg
adc
dec
or
lods
mov
add
mov
in
dec
mov
inc
out
clc
lods
pop
inc
or
sbb
dec
pusha
mov
push
stos
clc
inc
pop
push
sbb
mov
mov
dec
push
jecxz
fdivrs
cmp
out
sbb
cmc
daa
pop
add
push
dec
pop
inc
in
gs
loop
xchg
xchg
mov
mov
cltd
dec
cmc
inc
fidivrs
test
ss
subb
sbb
or
dec
cltd
js
ret
cmp
test
dec
xor
push
lea
mov
jns
lods
add
adc
lods
pusha
xor
adc
js
push
fnstsw
dec
mov
sbb
inc
sub
add
stos
add
into
add
mov
fcmovnb
mov
icebp
adcl
pop
jp
jns
loope
pop
call
test
sbb
sub
sbb
sti
sbb
sbb
push
or
sub
mov
xchg
js
scas
popa
dec
push
repz
inc
mov
jg
jl
fwait
or
jmp
femms
jle
aam
pusha
daa
cmp
xchg
sbb
lds
mov
mov
aam
jns
mov
sub
inc
clc
insb
fcmovbe
imul
add
lods
nop
mov
lcall
out
jbe
xchg
xchg
fs
js
and
into
ja
add
cld
lods
xor
fwait
addr16
jnp
push
mov
fmull
jecxz
aam
add
xor
mov
cmp
xor
subb
scas
adc
aaa
add
mov
ret
cmp
hlt
sarl
mov
cmp
mov
sub
mov
xchg
or
pop
and
imul
pop
sub
mov
jp
xchg
pop
dec
out
aad
cwtl
or
lods
sbb
pop
or
in
pop
mov
out
mov
mov
inc
pop
push
stos
pop
mov
push
dec
fnstenv
mov
jge
add
ret
xorb
fwait
mov
push
jns
into
and
jo
pop
mov
out
push
inc
xlat
lret
mov
add
cmp
push
dec
mov
bound
sbb
cmp
test
sbb
int
pop
mov
xchg
lods
mov
addr16
cmp
ffreep
aad
nop
outsb
mov
sbb
sbb
mov
or
mov
jg
clc
xor
cwtl
out
cmp
adc
jg
mov
mov
dec
sbb
leave
push
test
sub
divl
xchg
idivl
lahf
pusha
mov
mov
js
or
xchg
pushf
fildll
mov
jnp
out
imul
dec
imul
sub
jmp
sbb
mov
clc
ds
xchg
cmp
out
fistps
pop
outsl
sbb
jo
xchg
js
jle
int3
decl
adc
mov
clc
fldenv
cmp
cmc
cmp
or
cmp
jns
sbb
jo
cmp
mov
imul
xchg
sbb
sbb
gs
notl
sub
rorb
or
xor
out
push
xchg
and
pop
push
std
pop
addb
jg
out
arpl
mov
inc
icebp
cmpsb
cwtl
fildl
sbb
scas
ja
test
sarb
dec
cmc
cmp
sub
push
fidivrs
sbb
dec
jnp
aam
test
or
adc
mov
mov
es
stos
sarl
ret
lods
dec
stos
or
popa
mov
out
ss
mov
mov
neg
sbb
pop
push
jb
test
push
add
inc
daa
scas
iret
or
cmpl
rcrb
mov
lea
pop
mov
mov
cmp
in
add
ja
nop
mov
sbb
mov
mov
pop
negl
into
jnp
lahf
mov
lods
out
add
out
ljmp
or
testb
push
pushf
movsb
cs
or
addr16
frstor
lods
mov
cmp
sub
les
sbb
cmp
sbb
mov
inc
or
enter
cmp
push
mov
jecxz
cltd
push
mov
cmp
dec
dec
cli
hlt
divl
inc
stos
addr16
inc
or
lock
lods
dec
test
insl
sbb
shlb
mov
gs
add
or
xor
push
popf
pop
pop
or
mov
cmpsl
test
dec
int3
pop
and
xor
add
and
jl
cmp
out
dec
cmp
sbb
sub
aam
test
js
insb
fcmove
jge
stc
dec
xor
loope
popa
lock
clc
sbb
lret
je
fcomps
inc
lahf
je
add
push
cmp
cmp
ss
mov
lcall
loopne
sahf
insb
fstpt
and
shll
pop
jge
jecxz
sbb
out
movsb
pop
in
sub
sbb
push
hlt
dec
cwtl
ja
push
inc
call
ret
push
mov
dec
adc
jge
pop
out
push
xchg
and
or
inc
in
xchg
mov
cmp
dec
pop
or
dec
cmp
in
out
bound
jno
test
mov
push
std
pop
dec
lods
or
clc
mov
movsb
inc
out
mov
call
add
mov
daa
mov
push
sbb
cmp
lret
cmpsb
mov
pop
sbb
ficompl
sbb
sub
insb
xor
inc
or
lods
mov
test
pop
mov
jnp
lcall
test
mov
mov
lods
sbb
push
mov
sbb
mov
cmp
sbb
adc
fnstcw
dec
sbb
cs
mov
fcomi
fsub
dec
xchg
xor
sbb
pop
test
add
in
jp
add
jnp
call
jp
mov
cmp
movb
sub
xchg
mov
test
js
mov
pop
ffree
rolb
mov
ja
cltd
cmp
inc
subl
outsb
mov
out
jmp
iret
cmp
mov
addr16
inc
mov
jbe
enter
mov
or
jae
or
jl
inc
sub
or
rcr
cmp
inc
cmp
arpl
lahf
stos
sbb
cmpsl
push
add
inc
mov
aas
pusha
mov
pextrw
add
mov
mov
vpcmpgtw
mov
stc
divl
mov
in
mov
jg
jns
fsincos
mov
outsl
inc
icebp
test
rcrl
cmp
mov
inc
xor
int3
aas
js
test
ja
mov
inc
jmp
jbe
lds
jmp
adcb
mov
cmpsb
add
cwtl
sub
adc
sbb
adc
inc
test
mov
push
fdivs
inc
pop
lods
fistl
lods
fwait
aaa
cmpl
pop
jg
pop
cmp
cmpsl
dec
pop
repnz
out
xlat
or
sub
outsb
aaa
cmc
sub
xlat
ljmp
insl
mull
fwait
jg
jp
inc
loope
inc
mov
mov
sub
add
push
jp
orl
iret
fsubl
jl
pop
mov
and
daa
addr16
cmpsl
pop
mull
pop
cld
inc
mov
rcrl
jns
insb
cmp
repnz
sti
insb
cmp
xchg
sbb
cmpsb
into
sti
adc
loopew
in
loop
jmp
add
fmull
push
in
xor
ret
and
jmp
int3
cmp
cs
push
cmp
mov
ds
cmp
clc
push
push
push
dec
adc
cmp
out
add
stc
dec
mov
neg
popa
shll
inc
xchg
cmpsl
jg
and
jp
out
cmp
adc
in
das
lahf
or
popf
mov
pop
mov
xchg
xchg
inc
and
sahf
dec
cmp
push
and
cmpb
push
push
xchg
and
cmp
pop
push
scas
cld
add
test
cld
jns
fwait
rcr
push
rorb
lret
nop
mov
sub
cmp
jmp
test
cs
and
mov
dec
fdivs
xchg
push
mov
mov
sub
test
mov
inc
imul
cmp
sti
inc
mov
lret
decb
and
xchg
cmp
ret
dec
das
into
inc
lcall
jo
mov
out
aad
int3
loopne
inc
aas
subl
push
jmp
ja
lcall
sbb
inc
and
jl
dec
pop
dec
int
outsb
pop
mov
mov
add
test
inc
shlb
sub
cmpsb
sbb
jmp
or
divl
js
xchg
outsl
out
mov
pop
lods
fdivrs
xor
jmp
popl
xlat
push
inc
jno
mov
sbb
push
mov
rcll
sarl
and
jge
xor
cmp
cld
xchg
xchg
and
and
adc
std
in
out
dec
sbb
cmpsl
repnz
outsl
fcomp
xchg
or
xlat
outsl
in
and
jmp
aam
xor
int
push
jne
xor
data16
mov
jle
popa
xorl
xchg
cmpsb
dec
cmp
frstor
pop
rorl
pop
clc
xchg
xlat
js
and
inc
femms
dec
jo
add
pop
mov
stc
mov
imul
adc
xchg
jns
mov
and
and
add
js
xlat
sbb
lds
hlt
dec
insb
mov
andl
daa
jg
and
pop
sar
xchg
arpl
push
enter
jge
add
sub
out
fstps
jbe
dec
mov
sar
mov
icebp
les
imull
cmpl
xchg
sbb
pinsrw
test
outsl
push
pushf
jle
xchg
cmpsb
dec
mov
test
leave
jp
pop
sbb
push
jle
pop
ret
pusha
sbb
xchg
ds
xor
cmp
mov
cmc
or
shrb
pusha
shlb
js
ret
into
icebp
idivb
push
adc
mov
test
cld
stos
adc
xchg
fisubl
jmp
ja
test
ret
lea
add
push
shll
push
jle
pop
lods
adc
xchg
dec
rorb
push
push
sahf
and
out
sbb
sbb
sbb
faddl
cli
je
sbb
nop
mov
dec
cmp
cmpsb
dec
lret
pop
popa
jmp
popf
cmpsl
js
cmp
arpl
arpl
xlat
pop
dec
loop
sub
sub
sub
movsb
movsl
pop
cld
mov
or
push
inc
xlat
idivl
cmp
iret
sub
shl
xor
out
in
pop
imul
lret
dec
and
ss
jbe
mov
stc
jno
mov
pusha
nop
sub
sub
imul
sbb
dec
pop
inc
sbb
fbld
mov
out
cmp
jl
mov
xchg
js
sar
or
ds
mov
std
lea
xor
fnstsw
fsubr
cmp
gs
push
mov
jb
dec
mov
jge
pop
jle
cmpb
jge
or
jp
aam
pop
movsl
std
cli
xchg
in
ss
bnd
aad
and
int
pop
arpl
push
mov
andb
dec
mov
ss
sub
cmp
mov
test
mov
pop
cmp
jecxz
pop
out
cli
push
movsl
xchg
push
pop
and
ficoml
push
and
mov
sub
fiadds
sbb
adc
sbb
lods
cld
xchg
lea
hlt
lcall
push
sarl
xor
out
ljmp
jge
xchg
xchg
xchg
dec
aam
cmpsl
mov
iret
mov
lods
lods
mov
adc
mov
mov
enter
std
jae
movsb
pushf
mov
rcrl
adc
or
mov
rclb
fs
push
addr16
xchg
push
or
jp
orb
lods
std
enter
xchg
lods
gs
sub
fsubrp
push
popa
cmp
xchg
shrl
cmp
mov
cmc
pop
add
push
mov
mov
cltd
pop
or
rorb
ret
mov
rcrl
call
or
sub
add
movsb
pop
fbstp
rolb
mov
test
inc
iret
fidivrs
shrb
ret
xchg
cmpsl
cmp
imul
stc
dec
or
es
fnstenv
loop
cli
es
jnp
sbb
scas
pop
xchg
and
lods
clc
fwait
divw
add
xor
sbb
fcmovnu
gs
pop
js
bound
cmpsb
mov
adc
dec
mov
xchg
cld
mov
aad
out
cmp
mov
jp
adc
loope
xchg
cmpsl
mov
pop
test
test
imul
push
push
xchg
xchg
lods
cmp
push
pop
xchg
and
outsb
xchg
arpl
add
lods
xchg
cmp
cmp
mov
inc
push
xchg
push
je
mov
jecxz
aad
ret
adc
adc
out
pop
cmpb
adc
cmp
sbb
loope
nop
adc
idivl
dec
mov
pusha
popl
lods
pop
icebp
pop
jmp
popf
sub
mov
fdivl
push
les
inc
push
stos
or
cmpsl
loope
cmp
mov
cmp
push
addr16
cmc
cltd
cmp
ds
fdivr
aad
les
pop
sub
jb
sbb
cmp
rcrl
ror
mov
cmp
mov
pop
mov
mulb
sub
dec
sar
stos
adc
andl
add
addb
and
mov
and
test
addl
stos
jmp
outsb
sbb
dec
mov
out
xchg
mov
dec
lods
test
clc
out
iret
ja
dec
adc
cmp
xchg
inc
jp
testl
int3
ret
fs
cmpsb
insl
sbb
loope
xor
dec
into
test
sub
movups
test
out
push
mov
cmp
add
and
or
cmc
je
fs
add
cmp
iret
stos
fiadds
sub
pop
push
or
xor
lret
cmp
rcr
cmpsb
cmpsl
aas
in
jbe
sbb
xchg
call
out
stos
call
inc
sbb
push
repnz
adc
jge
lahf
cmpsl
ret
cli
add
pop
stos
jno
push
pop
xchg
int3
in
fildl
cs
cmpsl
mov
sbb
sub
xchg
and
xchg
pop
int3
js
or
push
adc
je
lds
aam
in
ja
add
nop
stc
sbb
in
xor
jg
dec
and
hlt
jcxz
out
ljmp
push
insb
popa
pop
aam
movsb
push
pop
sub
add
push
pop
aaa
out
addb
imul
enter
jp
jmp
lahf
test
stc
pusha
scas
push
out
jne
out
pop
out
xchg
popf
ret
or
je
test
loope
in
mov
movsl
push
shrl
cld
pop
out
add
add
inc
and
cmp
call
inc
testl
ret
pop
cmp
pop
ja
sub
andl
or
mov
out
xlat
stos
xor
adc
xorl
xor
fs
mov
mov
xchg
cmpsb
add
mov
daa
in
or
dec
in
imul
inc
mov
sbb
inc
push
sti
push
mov
mov
mov
cmp
sub
nop
insb
cli
mov
imul
fidivs
inc
xchg
fstpl
dec
dec
mov
pop
lods
cmp
or
cmp
fldt
jge
cmp
lahf
xor
mov
imul
cmc
out
add
cmp
ss
test
jmp
jecxz
sub
pop
fsubrl
loope
xlat
cmp
test
in
cmp
fstps
lret
jge
sbb
lea
push
je
cmp
mov
jp
test
sub
aas
push
mov
cmp
idivl
adc
mov
pop
or
adc
addb
popf
filds
inc
pop
ret
mov
xchg
cmc
push
adc
pop
aaa
push
adc
inc
push
xchg
sbbw
inc
jnp
out
icebp
outsb
push
mov
dec
pop
pop
ja
test
dec
push
mov
int3
mov
imull
add
out
adc
aam
sbb
clc
arpl
push
jae
sbb
cwtl
test
rcr
xchg
mov
and
rcrl
xchg
push
lret
orl
dec
sbb
dec
cld
mulb
and
or
and
lods
xchg
push
das
mov
mov
in
cmp
data16
add
nop
jns
adc
cmp
pop
test
je
or
test
mov
js
xchg
jge
int
outsl
movsb
xor
pop
xor
mov
lods
stos
mov
inc
pop
dec
adc
xchg
repnz
sbb
inc
loop
mov
cmp
or
xchg
out
ljmp
sti
imul
inc
pop
add
loopne
jns
add
xor
inc
andl
call
ret
clc
jmp
inc
test
out
add
enter
mov
cmp
xor
dec
inc
pop
inc
jle
mov
into
mov
jae
movsl
jnp
sbb
dec
subl
pusha
fdivrl
inc
add
mov
mov
or
lret
mov
ljmp
cmp
faddp
jl
xchg
mov
repz
jg
cmp
pushf
notb
jb
iret
cli
xor
ja
jne
incb
dec
mov
jmp
adc
test
cmp
loope
test
sub
rorb
fyl2xp1
adc
scas
loopne
pusha
addb
push
mov
cltd
push
mov
popa
sbb
pop
sbb
inc
stc
lcall
les
fdivrl
jb
cmp
lret
mov
iret
dec
push
sbb
clc
inc
mov
js
repz
leave
xchg
ss
mov
inc
cmpsl
repnz
mov
pop
lret
shrb
sbb
lret
cmpsl
mov
ret
jmp
sbb
push
jle
dec
leave
jg
imul
and
repz
pop
shl
xor
sbbb
add
shll
xor
dec
fs
filds
inc
and
sub
push
and
sub
inc
or
sub
dec
jbe
or
xor
push
cmp
jl
mov
sti
lods
pushf
clc
push
jne
test
sbb
enter
mov
cwtl
cmpsb
inc
mov
sub
imul
nop
push
sub
fwait
inc
test
add
jae
jg
pop
sti
mov
dec
xchg
xchg
enter
xchg
nop
lods
inc
pop
pushf
out
shl
dec
cmp
xor
ja
lock
es
cli
mov
js
push
or
idivb
xchg
ja
push
jl
jle
into
call
push
xor
insb
lods
dec
andl
xor
mov
inc
pop
push
mov
add
ljmp
sbb
fstpt
ljmp
mov
xchg
lods
test
xor
orb
adc
add
or
inc
mov
and
pop
jae
stos
mov
psrad
rolb
dec
jle
rcl
cmp
inc
test
dec
rep
loop
call
iret
dec
dec
es
icebp
popa
mov
test
fsubrl
test
out
ret
pop
fs
mov
xchg
fidivrs
lods
jle
js
mov
mov
fwait
cmpsl
out
pushf
push
pop
fdivrs
xlat
pop
push
jno
dec
add
inc
sbb
sbb
inc
cmp
dec
and
mov
cli
mov
aaa
sbb
imul
sti
xchg
imul
stos
inc
cmc
mov
xchg
sbb
inc
push
ret
add
adc
fcompl
xchg
aas
adc
push
addr16
lcallw
push
adc
mov
stc
mov
imul
add
fsubl
daa
lret
xor
and
adc
push
addr16
sbb
mov
into
int
mov
imul
xchg
ret
mov
xlat
xchg
in
jp
cld
pop
cs
cmpsl
jae
sub
pop
jno
or
inc
int3
jns
and
xchg
in
int3
mov
lahf
notl
arpl
enter
pop
out
jae
enter
mov
sbb
pop
push
cmp
ja
cmp
out
mov
jno
or
add
cmp
cmp
mov
jmp
xor
sbb
add
mov
sbb
xor
mov
mov
jl
cmp
jge
dec
add
cmpl
dec
push
movsb
cmpsl
idivl
mov
add
je
pop
push
or
popa
loope
testl
aam
daa
sarl
hlt
ss
flds
fsubl
mov
jge
dec
mov
adc
cltd
ss
mov
insb
sbb
daa
out
js
aad
icebp
in
in
je
pextrw
jge
inc
insb
add
pop
cli
cmp
ljmp
pop
mov
sarl
jo,pt
pop
dec
pop
stos
jmp
outsl
out
sbb
xchg
imul
out
into
cmpsl
fistpll
enter
lods
jle
in
addr16
mov
mov
dec
test
frstor
pop
add
push
sbb
push
pop
out
fdivrp
pop
xchg
and
mov
mov
cltd
xchg
inc
pop
je
mov
lahf
fwait
arpl
mov
scas
or
push
cmp
xchg
xor
pop
lea
xor
jmp
aas
inc
xchg
cld
sbb
mov
les
and
jge
jmp
dec
pop
cmp
push
cwtl
shr
pop
push
sbb
cld
adc
push
inc
cwtl
mov
dec
jp
repz
adc
clc
push
test
pop
mov
test
push
mov
and
inc
mov
das
out
mov
dec
mov
mov
jae
add
push
lea
or
test
jecxz
sub
mov
jecxz
add
mov
stc
mov
push
xor
bnd
fisubrs
xor
das
adc
mov
mov
fistps
test
dec
test
icebp
inc
imul
into
mov
and
inc
sti
out
dec
jl
pop
test
cmp
cmpsl
adc
insb
cwtl
or
fmuls
fnstsw
sub
fisttpl
rcl
and
orl
shl
out
jns
sbb
add
sti
mov
add
fwait
jmp
les
pop
pop
jnp
xor
ss
frndint
clc
jle
inc
out
outsl
xor
cmp
sbb
pop
test
cmp
sub
lods
xor
inc
std
fldl
addb
sbb
dec
xor
test
aad
mov
push
or
sub
test
popf
andl
cmp
sub
mov
lea
lods
and
xchg
xor
xchg
xchg
mov
mov
sahf
mov
mov
mov
div
sbb
mov
mov
testb
pop
dec
dec
pop
pop
pop
cld
mov
neg
insl
and
mov
inc
pop
ljmp
mov
ljmp
dec
int
mov
lods
xor
test
adc
pop
sbb
jle
dec
ret
test
mov
imul
cmpsb
cvtpi2ps
daa
dec
sbb
push
cld
mov
fsubrl
cmpb
mov
fbstp
fcomps
mov
daa
dec
inc
adc
sbb
pop
in
fisttps
dec
mov
les
mov
cmc
push
das
xchg
out
loope
xchg
add
mov
fistpl
cld
std
xchg
jmp
xchg
jns
mov
sbb
jno
mov
test
and
cmpsl
or
int3
outsb
inc
mov
fstpt
xchg
stc
scas
ret
imul
mov
arpl
sbb
jbe
dec
xchg
mov
dec
mov
mov
dec
mov
dec
stos
ss
leave
and
add
ds
push
cmp
stos
js
shlb
ljmp
push
push
xchg
mov
inc
test
jle
mov
mov
cmp
mov
mov
call
pop
rolb
or
enter
adc
mov
pop
fstpt
jae
data16
add
dec
jb
scas
clc
int3
test
sti
push
test
xor
je
cmp
ds
sbb
scas
pop
test
ds
cmp
sbb
xchg
fistl
cmp
addr16
out
push
jae
call
mov
movl
sbb
push
mov
xchg
dec
cmp
push
imul
cmp
pop
test
test
sbb
cmp
sbb
jns
outsl
and
or
insb
test
outsb
packsswb
jne
fnstcw
or
jmp
call
lret
xchg
add
pop
aaa
cmp
sbb
mov
enter
fwait
xor
jp
lods
and
js
cmp
mov
sub
fdivs
fdiv
mov
dec
xor
clc
enter
ljmp
cmp
push
adc
cmc
xchg
addr16
movsb
out
pop
mov
mov
cmp
nop
fildll
jl
push
rcll
jns
in
movsl
mov
insb
imul
cmp
cmpsl
add
je
cmc
mov
or
cmp
mov
pop
arpl
loop
aaa
outsl
lret
lcall
mov
jle
push
sub
les
and
mov
xchg
push
mov
loopne
jp
cwtd
jle
cmp
filds
orl
test
mulb
add
or
std
in
or
fisttps
sbb
js
cmp
test
sahf
leave
ja,pt
mov
cmp
fidivrs
out
jmp
mov
sahf
ljmp
jnp
inc
xor
test
js
adc
cltd
sbb
leave
pop
sti
add
test
stc
sbb
icebp
lcall
les
cmp
ja
repz
adc
xlat
push
or
mov
xchg
stos
xor
sarb
or
sub
adc
dec
rep
or
aaa
add
adc
jg
shrl
jp
add
popl
cmp
lahf
cld
sbb
jecxz
pop
fldt
andb
daa
jle
test
gs
fsubl
cld
cs
clc
sbb
adc
add
dec
mov
pop
ljmp
clc
nop
mov
xchg
aad
imul
loope
inc
iret
mov
xchg
inc
andb
mov
push
mov
xorb
pusha
lcall
cmpsl
adc
ja
fidivrs
jnp
stos
push
or
loop
cs
sbbl
mov
repz
adc
loope
gs
cmp
cmp
sub
add
mov
in
ficoms
pop
fdivl
add
add
test
fnstsw
jmp
or
gs
mov
adc
push
dec
cmp
adc
adc
arpl
lret
sub
sbb
sarl
addr16
ror
adc
fidivl
sub
loope
add
inc
stos
dec
sbb
fstps
sub
add
pop
mov
xor
mov
loop
cmpsl
adc
jmp
loope
pop
mov
inc
jp
mov
and
leave
incl
orl
aam
xor
cmpsl
adc
jp
dec
xor
pop
sbb
loopne
orb
xchg
aad
loop
icebp
aam
dec
push
and
popa
mov
int
cmp
cmp
into
rcrl
test
rcll
movsl
pop
lret
add
cmp
xchg
rorl
cs
test
push
cld
outsl
xor
mov
into
fmull
outsl
test
jecxz
fwait
xchg
xor
mov
js
xchg
outsl
push
testl
stc
ljmp
inc
xor
xor
cmp
inc
xchg
jbe
js
gs
cwtl
pushf
lcall
or
lods
jl
sbb
or
rcrb
cmp
fucom
push
mov
cmp
ljmp
js
pop
inc
loope
dec
mov
cmc
not
push
lds
mov
mov
fmul
sbb
lods
in
clc
and
mov
sarl
pextrw
nop
aad
inc
frstor
fsubrl
test
mov
jnp
pop
adc
jne
pop
les
clc
lods
push
jne
add
adc
shrb
iret
sbb
pusha
out
bound
iret
adcl
or
adc
pop
dec
mov
ss
cs
test
cmp
pop
push
lods
sbb
xchg
jle
jns
mov
ss
inc
adc
lcall
test
stos
inc
jne
adc
shr
add
lock
jp
daa
jg
hlt
cmp
jbe
int3
pop
push
sub
ss
and
cmp
sbb
dec
mov
addb
mov
test
ja
xor
push
pusha
add
lock
cmpsl
adc
popf
cmp
test
push
mov
ja
lds
sub
and
dec
dec
into
sbb
js
pop
jp
popf
dec
js
ds
push
out
loopne
pop
test
dec
sbb
push
push
jns
cmp
fs
ja
dec
mov
add
pop
dec
test
mov
dec
or
aam
scas
jp
inc
mov
push
mov
into
movl
sbb
mov
stos
js
push
out
cmp
stc
push
clc
out
push
fstpt
cltd
loope
testl
mov
stc
popf
dec
or
pop
or
mov
xchg
pop
push
adc
imul
jnp
int3
xlat
test
fdivrl
mov
lahf
test
push
sti
nop
push
or
andl
test
mov
mov
stc
out
sarl
xchg
jl
jmp
insb
out
mov
rclb
xchg
loop
mov
push
pop
or
jb
fisttpl
je
add
data16
inc
test
dec
inc
cwtl
push
jno
xchg
mov
lret
popa
xchg
mov
mov
test
popf
rorb
push
jns
repz
xchg
dec
sub
fdivrl
pushf
push
push
arpl
or
push
stos
sbb
loopne
inc
dec
pop
sbb
xlat
out
add
cmpsl
pop
xchg
xor
jo
xchg
add
mov
mov
adc
mov
aad
and
sub
stos
cmp
inc
mov
fstpt
cli
or
inc
ret
mov
ret
xchg
pusha
negl
dec
inc
mov
out
sahf
or
ret
movl
xor
sub
icebp
out
mov
add
sbb
les
adc
aam
scas
notb
mov
cmpsb
or
sbb
mov
int3
jnp
mov
xchg
cmpsl
cmp
add
pop
xor
out
loope
sbb
push
add
ret
push
and
sub
aas
and
dec
aaa
mov
gs
adc
mov
xchg
add
cmp
push
in
sub
xor
js
push
mov
jecxz
shlb
js
push
or
ja
int
jns
xor
orb
inc
fimull
xlat
pop
sti
jmp
jns
out
push
xchg
inc
mov
daa
lcall
sarl
cmpsl
and
adc
out
push
out
push
cmp
push
xor
popa
movsl
ret
ds
call
xchg
pop
mov
xchg
add
sbbb
mov
cmp
test
rcll
lahf
clc
xchg
jmp
dec
jg
dec
mov
rorl
jbe
or
insl
mov
ja
push
jno
or
mov
inc
bound
nop
mov
and
jle
jle
in
xchg
mov
out
pop
jae
insl
dec
dec
sarl
inc
inc
cmp
pop
mov
push
mov
cltd
in
inc
mov
out
outsl
sub
ds
push
outsl
xchg
fdivl
mov
push
pop
ss
pusha
mov
bound
pop
pop
jns
xlat
or
add
xchg
nop
shrl
xor
mov
testl
push
cmp
fs
mov
push
js
pop
or
pop
mov
ja
rorl
cli
mov
jp
push
cmpsl
add
xchg
mov
call
mov
push
or
mov
mov
cmpl
jmp
nop
pop
cli
push
or
loopne
dec
cs
lock
loope
pop
sbb
data16
inc
mov
in
ja
scas
loope
xlat
mov
mov
pop
clc
daa
or
add
popa
sbb
out
sbb
adc
or
fistpll
add
dec
nop
jp
mov
sub
jo
repnz
iret
sbb
adc
or
pop
call
jge
xchg
xchg
pop
pop
dec
or
shlb
dec
mov
inc
sarb
das
cmp
repnz
pop
xor
aam
xchg
insb
and
push
push
mov
aas
xchg
pop
sbbl
mov
seta
inc
jns
pop
fidivrs
and
imul
push
sbb
call
mov
jl
cmp
cmc
pop
jle
dec
xor
jl
aas
jge
rcrb
sbb
out
loope
ds
out
pop
lret
das
outsl
xchg
sbb
cwtl
stc
stos
in
add
push
pop
lret
pop
add
popa
inc
jge
mov
les
mov
cmp
popa
mov
std
push
mov
mov
or
jb
or
mov
cmpsl
lea
sbb
ljmp
popf
cmp
dec
shll
cmp
outsb
adc
mov
call
cmc
sub
xor
xchg
scas
xchg
mov
pop
mov
push
test
inc
xchg
add
into
or
pop
dec
or
stos
mov
push
pmaxub
les
adc
mov
xor
mov
repz
mov
mov
dec
sub
fnstenv
lahf
test
mov
stos
ficomps
test
insb
mov
fsubl
in
not
sbb
dec
mov
adc
xchg
or
cli
js
adcl
fwait
pop
and
or
fxch
ret
dec
in
cmp
sbb
cwtl
shlb
cmp
or
mov
xchg
mov
mov
jb
mov
mov
mov
cmpsl
pop
shrl
sbb
sarl
sahf
pop
adc
sbb
mov
sbb
sub
cmpsl
xor
cld
in
rorb
mov
fstps
mov
lock
pusha
sbb
jnp
push
dec
inc
rcrl
push
lods
outsb
das
pop
jae
mov
lea
lret
shll
fistps
roll
push
daa
das
lret
insb
cmp
ret
mov
aas
incl
or
out
nop
mov
cmp
ret
adc
xchg
movsb
fs
arpl
xlat
ja
sbb
xchg
xchg
int3
js
fdivrs
mulb
aaa
neg
mov
mov
roll
xor
add
add
jns
sti
inc
cmp
js
shll
rcll
push
and
inc
add
pop
push
std
lea
pop
out
inc
jns
scas
jge
les
and
cmpsl
lods
sbb
inc
pushf
mov
mov
test
pop
fwait
xchg
pop
aad
xchg
cmp
mov
inc
cltd
sbb
or
sbb
or
repz
cmpsb
inc
cmpsb
fisubrs
push
enter
pop
test
xchg
fisubl
cs
and
mov
ret
repnz
dec
mov
push
xchg
adc
sbb
test
jg
out
cmpsl
idivl
xor
aaa
in
ds
jle
mov
popf
cld
mov
aaa
popl
mov
outsl
cmp
std
and
leave
js
push
cmp
jmp
jge
lret
sbb
or
push
mov
jae
into
ret
sbb
cmpsl
fistpl
push
aas
push
aas
push
mov
xchg
mov
cmp
jae
loop
in
jnp
imul
pop
sub
sti
pop
test
cmp
cmp
dec
fldl
xchg
test
pusha
xor
mov
scas
and
cmp
jne
ljmp
in
xchg
out
dec
sbb
scas
std
cwtl
mov
cmpb
or
imul
mov
leave
and
fidivl
cltd
lret
gs
clc
in
cld
ja
inc
testl
cmp
mov
xor
rolb
adc
jb
mov
dec
test
lahf
cmpb
xor
add
es
add
mov
bound
adc
lods
mov
std
sbb
mov
sbb
mov
shlb
mov
jb
cmp
cmp
fs
sbb
push
pop
out
mov
or
push
and
lcall
xor
ja
push
sahf
inc
cmp
mov
in
sbb
aas
push
push
push
cld
jg
push
test
or
push
addb
addl
rcrl
bound
mov
in
mov
popa
daa
xor
and
imull
adc
testl
jb
ret
sbb
mov
xchg
cmp
paddusb
ret
add
jns
iret
imul
sub
popa
outsl
lret
mov
repz
or
mov
xor
pmullw
mov
sbb
daa
pop
in
cltd
pusha
int3
dec
pop
lods
aas
push
or
push
outsl
push
lret
fs
inc
or
popa
xor
mov
dec
jne
dec
sbb
cmp
out
jg
inc
test
sub
push
push
mov
mov
xchg
cmp
inc
or
xchg
or
add
cwtl
jbe
decl
inc
mov
loopne
xchg
cmp
mov
loop
jae
push
pop
mov
cltd
add
sarb
and
dec
stos
js
and
adc
xor
fstps
sahf
fwait
mov
iret
push
and
sti
inc
pop
ret
jl
sub
pop
pop
pop
jae
jae
test
repz
or
pop
clc
lahf
test
test
ret
jae
push
sbb
enter
ret
test
add
or
inc
xchg
mov
push
jge
ss
push
mov
fidivrs
popf
daa
pop
mov
insb
jb
push
sbb
pop
jecxz
pusha
shlb
mov
pop
iret
mov
daa
pushf
sarb
cs
xchg
pop
inc
addr16
mov
mov
add
jg
ss
xlat
pop
cmp
imul
ljmp
mov
mov
and
ret
movsl
clc
les
dec
cmp
insb
nop
sub
xor
cmpsl
js
pop
mov
mov
push
jns
rol
inc
jp
lret
xorb
sub
stos
notl
pop
sarb
insb
push
pop
pusha
fnstcw
pop
jecxz
inc
mov
gs
or
pop
inc
lock
push
imul
in
push
insl
sub
std
mov
daa
mov
fcoml
mov
sub
lret
jp
sub
mov
repz
faddl
inc
movb
add
addr16
out
cmp
std
push
shrb
stc
sti
push
fldt
add
dec
into
cmpsl
xor
jge
fadds
fstpt
jnp
cs
pop
iret
jmp
outsl
adc
pop
out
es
iret
insb
mov
outsl
cmp
leavew
jle
inc
push
dec
add
push
es
inc
loope
pop
sarl
adc
mov
mov
cltd
push
fldpi
xchg
shr
xchg
bound
out
popa
xchg
test
push
cmp
or
int
add
ljmp
shlb
pushf
not
pop
mov
mov
lret
jle
mov
dec
or
xchg
mov
ljmp
stos
jle
or
icebp
push
cmpsb
cli
add
mov
pop
mov
aad
dec
mov
jge
shr
xchg
insb
mov
jo
jg
add
fwait
cld
adc
popf
jnp
or
out
add
pop
clc
cmp
cld
adc
xor
in
aas
jnp
mov
mov
repz
std
sub
ja
repnz
or
add
cmp
aas
loop
cltd
test
sub
xchg
leave
xchg
in
pop
mov
in
dec
pop
jg
cmp
xchg
aas
test
fwait
js
sbb
subb
dec
in
into
xchg
cwtl
sbb
js
inc
popa
shrl
stc
mov
fwait
das
inc
int
imul
add
daa
adc
xlat
push
in
in
fimuls
dec
ljmp
lahf
test
lret
xchg
js
cmp
cmp
push
fisubl
lahf
mov
xlat
cli
fwait
push
scas
cltd
repnz
pop
lcall
decb
push
js
stc
int
or
nop
push
ret
mov
jle
sbb
repnz
or
and
stos
cwtl
pop
pop
andb
sbb
daa
mov
or
jae
call
mov
jo
push
fcomip
pop
sub
cld
push
jp
fsubrs
stc
imul
inc
xchg
ret
lcall
outsl
adc
std
adc
mov
push
or
xchg
leave
stc
add
jmp
bound
jle
js
stc
sti
decl
sbb
inc
mov
inc
xchg
mov
insb
push
cmp
cmp
test
gs
jnp
pop
inc
mov
mov
mov
sbb
sti
jmp
cltd
or
or
out
sbb
aad
testl
pop
stos
hlt
cwtl
pushf
gs
xchg
sbb
out
sti
stc
cmp
adc
cli
or
pusha
dec
cmp
jg
jge
mov
sub
sbb
sub
mov
adc
xlat
push
cld
test
and
imul
or
sbb
dec
loope
pop
sub
xchg
gs
fidivrs
js
pushf
or
and
inc
fmuls
ss
sbb
imul
fmuls
sub
jnp
pushf
stc
aas
aas
lahf
out
addr16
pusha
clc
push
pushf
popf
inc
cwtl
imul
mov
pop
jmp
js
push
dec
cmp
roll
cmc
adc
flds
inc
push
mov
sub
mov
gs
pop
mov
cmp
sbb
jecxz
mov
xlat
test
out
jp
xorl
mov
shll
scas
ljmp
sarb
test
mov
lods
test
jecxz
cmpsl
xchg
stos
xchg
test
pop
or
addr16
cmp
stos
insb
pop
dec
xchg
jge
rcrb
jge
mov
adc
sub
popa
clc
push
xchg
dec
add
pop
out
add
pushf
leave
in
cmp
mov
add
push
mov
add
orl
mov
aas
mov
arpl
adc
mov
sbb
jle
mov
nop
sbb
and
ss
sub
rcrl
cld
sbb
or
sub
ret
ss
fmulp
cmp
jge
xchg
sbb
ret
nop
mov
xchg
mov
cmp
xchg
and
sub
ret
jg
ja
inc
push
adc
pop
pop
mov
xchg
out
push
cmp
pop
inc
mov
push
loope
sahf
outsl
pop
ja
dec
repnz
outsb
mov
xchg
mov
mov
mov
and
mov
pop
ljmp
mov
xchg
repz
and
or
push
in
fdivrs
dec
stc
daa
sbb
pop
pop
mov
fsubs
std
cli
jns
in
mov
insb
lahf
inc
jo
cmp
test
js
rorb
outsl
mov
dec
inc
fmull
pop
pop
jmp
cs
push
psubsw
mov
leave
mov
cmpsl
js
orl
lcall
lods
inc
push
xor
ds
clc
mov
lahf
jbe
ds
mov
or
mov
jmp
cmpsb
lcall
test
pusha
jecxz
shll
filds
aam
stos
test
insb
adc
stos
mov
sti
insb
sub
addr16
insb
mov
xlat
adc
add
lcall
js
out
inc
ljmp
nop
sbb
cmpb
push
mov
leave
sbb
sbb
mov
and
fidivrl
or
jbe
outsl
daa
fbld
dec
cmc
ja
jle
cmp
push
js
mov
icebp
dec
lret
pop
cli
dec
pop
dec
xor
daa
adc
out
ljmp
pop
mov
lods
mov
sbb
loope
loopne
lods
inc
decb
dec
xchg
jmp
mov
jnp
mov
icebp
mov
jg
adc
fisubl
loop
divb
push
fidivrs
cmpsl
dec
mov
sub
dec
fcoml
xor
lods
fwait
mov
xchg
pop
or
mov
lahf
adc
popa
cli
mov
jle
dec
or
addr16
or
mov
jl
fldt
incl
adc
xor
pop
shll
movsl
and
mov
out
cwtl
mov
arpl
sbb
or
inc
push
sub
cmp
pop
addr16
sub
cmp
ljmp
inc
inc
jecxz
aad
sbb
adc
push
inc
jne
add
mov
mov
cmp
push
cwtl
mov
sbb
mov
fiaddl
iret
popa
subb
push
jns
mov
cmp
inc
mov
mov
daa
out
xchg
adcl
xchg
addr16
jmp
subl
push
xor
lods
out
xlat
mov
mov
fildl
imul
popl
fistpll
pop
adc
pop
cmp
xchg
sub
mov
sub
imul
bound
add
pop
pop
pop
mov
mov
fsts
jns
dec
out
jnp
cmp
pop
xlat
pop
addr16
pop
inc
jecxz
xchg
mov
data16
shrb
fcomp
mov
mov
lahf
fmuls
sbb
mov
das
cmp
push
fwait
pop
push
xchg
pop
cmc
test
push
adc
push
ja
inc
sub
pop
mov
pop
sub
jns
test
dec
clc
daa
das
sbb
test
popa
mov
or
int3
push
imul
cmp
mov
inc
jns
dec
mov
xchg
dec
hlt
mov
push
sub
jmp
lahf
dec
jp
fimull
imul
fmuls
lret
or
loop
imul
push
imul
adc
cli
pop
cmp
fisttpl
push
pop
int
mov
cmp
mov
pop
xchg
cmp
out
jg
jmp
stos
or
xchg
sub
mov
sti
jp
dec
mov
js
xchg
es
inc
outsl
in
fwait
jo
popl
test
xchg
setbe
cmp
fcomp
cld
negl
movsb
and
es
clc
ficomps
icebp
push
cli
xchg
and
in
js
lahf
dec
dec
jmp
ret
mov
dec
clc
and
orb
jmp
mov
dec
iret
ret
mov
cld
fucomp
push
bound
adc
out
test
rcll
mov
push
or
stc
bound
jg
cmp
pop
cltd
testl
cmp
addr16
xor
fwait
sub
mov
sub
fucomip
push
shrb
hlt
cmp
sbb
mov
mov
lcall
or
cmp
mov
ficompl
sub
or
inc
xchg
push
cmc
mov
cld
sbb
hlt
sbb
jp
cld
push
hlt
stc
arpl
fsubrs
imul
xchg
ss
daa
cmp
jne
xchg
leave
dec
imull
out
sbb
xor
sarb
dec
pop
cmp
test
dec
cs
js
jg
mov
loope
jnp
push
cmp
loope
push
sbb
cli
xor
movsl
pop
inc
fbld
cmp
test
fsubr
sbb
lcall
jg
xor
pop
dec
mov
lret
mov
psubb
cmp
cli
mov
sub
jns
es
cmp
or
dec
and
xchg
or
gs
mov
call
das
add
lds
fwait
xchg
xor
repz
out
add
and
pusha
popa
inc
jno
fisttpl
rcrl
out
or
push
push
cwtl
and
mov
mov
dec
dec
js
mov
fsubr
mov
ret
aas
cmp
bound
cmp
cmc
mov
decb
divl
pop
jle
jnp
lret
or
orb
mov
cs
pop
lea
icebp
pop
out
jae
mov
pop
mov
xchg
stc
mov
mov
mov
pop
out
mov
sbb
out
xlat
arpl
fstpt
cmc
add
in
faddl
inc
push
mov
mul
fwait
insb
cmp
mov
mov
pusha
xchg
shrb
hlt
rolb
test
push
lds
cwtl
js
ljmp
sub
addl
add
jmp
push
and
and
idivl
xor
cmp
add
mov
or
adc
or
movsb
test
and
iret
cli
xchg
adc
mov
test
mov
les
gs
lcall
arpl
jbe
negl
or
inc
dec
lret
push
mov
mov
imul
xlat
cli
int
ja
lret
dec
inc
pop
imull
sub
cmp
idivl
gs
inc
stc
xchg
sub
jns
test
xchg
lods
sbb
xlat
ja
ss
pop
xchg
mov
sbbb
xchg
push
sub
fldcw
jle
or
or
push
or
jo
pop
hlt
sub
add
adcb
mov
popl
sti
jbe
xchg
dec
add
cmp
cmp
push
cmp
xchg
mov
imul
push
aaa
dec
iret
neg
or
aas
rorl
pop
jae
imul
test
sbb
loope
imul
adc
push
ret
pop
pop
data16
pop
inc
push
movsl
xor
ret
ds
xchg
xor
cmp
pop
inc
addr16
mov
cmp
xor
mov
jae
jmp
xlat
int3
movsb
arpl
adc
fdivrl
in
inc
es
adc
in
and
push
iret
mov
movsb
std
pusha
aas
shlb
add
inc
imul
cmp
fcomi
mov
pusha
loopne
jae
jle
ja
cmp
xchg
orb
mov
and
mov
jl
pop
or
cmp
jg
ljmp
test
or
scas
sti
ljmp
imull
popa
stc
repz
out
push
adc
and
mov
stc
out
pop
push
and
gs
cmpsl
popl
outsl
adc
jae
dec
cmpsb
fsubr
push
bound
add
mov
jno
adc
pop
mov
xor
or
jle
ret
fdivrl
data16
daa
aas
push
testb
or
fwait
out
pusha
and
shrb
pop
jnp
repz
cmp
enter
push
idivl
cmp
das
fistpl
inc
mov
pop
mov
outsb
dec
cmp
jnp
ret
mov
ja
push
push
pusha
add
mov
dec
mov
inc
sub
loop
jae
or
ja
dec
out
stc
pop
in
adc
jg
mov
test
stc
hlt
push
dec
punpckhbw
fnstenv
mov
lods
pop
insb
test
xlat
push
lds
clc
cmpsl
xor
jecxz
aaa
cmc
xlat
nop
mov
mov
sahf
fsubrl
adcl
cmpsb
jle
outsl
fisubl
jno
mov
jl
out
movsl
cmp
fstpl
mov
iret
fildl
dec
pop
pop
mov
nop
cmp
sub
test
add
lret
fdivr
cmovae
js
es
push
test
stc
pop
stc
jmp
jo
jnp
or
cmp
mov
xchg
xor
iret
pop
sti
cmp
and
int
pop
ja
mov
or
int3
sbb
rclb
insl
mov
inc
clc
mov
lcall
adc
push
and
cmp
adc
shrl
inc
gs
call
inc
adc
lods
cwtl
insl
dec
sbb
jo
stos
xlat
test
dec
and
jns
pop
ljmp
xchg
jg
mov
ja
sarb
subl
push
es
ret
adc
pop
and
sar
pop
bound
dec
pop
pop
inc
cmp
filds
mov
pop
rcrl
loop
fsubrl
mov
mov
mov
dec
sub
sbb
stos
cmp
mov
add
pop
iret
mov
jns
or
pop
or
cmp
fsubl
repz
pop
popa
cmc
inc
push
push
leave
sub
scas
mov
cmp
not
xchg
adc
pop
clc
addr16
adc
movsb
jnp
loope
out
mov
jae
jp
es
insl
push
push
loop
cs
imul
std
pop
xlat
insb
iret
pop
cmp
push
js
inc
and
xor
icebp
cmc
movsb
jl
adcl
or
cmp
xor
test
out
imul
inc
push
mov
outsb
insb
stos
testb
hlt
test
hlt
imul
jnp
adc
insb
or
xchg
adc
cld
hlt
jp
cld
addl
dec
int3
stos
push
jp
cmp
call
cmp
fstl
jne
pop
aaa
xor
pusha
mov
push
cmpsb
pop
sub
xchg
rorb
jne
cmp
sbbb
scas
cmp
mov
mov
cmp
push
xchg
cmp
stc
jp
movsl
sub
push
xor
jns
lods
or
repz
jnp
xchg
mov
inc
gs
mov
push
xchg
mov
push
mov
addr16
mov
jno
and
jle
push
jle
add
imull
jns
pusha
jl
push
jp
mov
mov
mov
cmp
jns
aam
mov
mov
sub
mov
fldl
and
ja
cmp
or
jne
xchg
adc
cmp
adc
ss
popf
xorl
cmpsl
mov
add
outsl
addr16
xlat
aas
mov
mov
pop
xchg
dec
jns
dec
div
jge
es
sarb
shrb
cld
or
loope
rolb
inc
mov
pop
xor
lahf
inc
push
xchg
pop
jle
and
cmp
fmulp
js
mov
ja
pop
out
pop
sbb
iret
cmc
mov
enter
sub
ja
pop
jns
adc
ds
mov
xor
sbb
adc
in
sbb
mov
sbb
inc
lret
mov
scas
data16
call
mov
jne
push
dec
dec
and
cmp
addr16
or
popa
dec
insl
test
cmp
mov
inc
rcl
lcall
cmp
test
cmp
sub
sub
imul
lahf
imul
stos
mov
pop
icebp
int3
and
sub
repnz
movb
add
enter
mov
push
mov
and
fistl
addr16
sbb
cmp
dec
test
push
out
daa
imul
cmp
pop
iret
mov
ja
enter
aas
cmp
rclb
stc
push
nop
mov
test
faddl
sahf
int3
enter
or
sbb
pop
mov
test
mov
fwait
cld
xchg
xor
xor
ret
jp
pop
fisubrs
sbb
cmp
inc
mov
add
lahf
mov
adc
mov
xor
aaa
pop
push
and
mov
add
xchg
and
push
mov
fsubrl
add
and
jl
nop
mov
out
notl
xchg
scas
stos
imul
push
pusha
sub
jl
aaa
adc
dec
mov
push
mov
xchg
sbb
fnstcw
dec
mov
add
pop
dec
data16
mov
inc
add
mov
ficompl
mov
cld
xchg
std
inc
addr16
or
xor
add
dec
sbbl
jmp
fstps
std
dec
jne
scas
clc
roll
xorl
adcl
mov
inc
sub
jno
sbb
add
pop
dec
dec
fistps
mov
std
sarl
test
pop
mov
inc
jns
cmc
inc
xchg
int
arpl
ss
lods
mov
sub
sti
pop
mov
call
dec
or
or
cmp
ffree
stos
or
in
pop
dec
xor
stos
or
jl
jno
sbb
pop
fimuls
test
pop
adc
insl
leave
cli
adc
jl
stos
pop
in
add
shlb
iret
mov
push
fistl
inc
adc
imull
nop
outsb
cmp
dec
ja
fdivrl
add
inc
packsswb
push
xchg
sub
call
les
mov
mov
sti
aas
mov
cmp
sbb
jp
in
cmp
mov
out
mov
js
cmp
dec
push
xchg
push
add
in
cmp
pop
lret
dec
sbbl
cmp
shll
mov
inc
out
out
mov
mov
ret
rcrl
dec
lcall
daa
sbb
shr
adc
pop
or
sbb
out
jmp
jno
pop
cmc
mov
lret
rolb
xor
mov
jo
cmp
pop
mov
std
fistpl
xchg
std
ret
push
pop
inc
xor
in
movl
adc
sbb
testl
or
xchg
or
xchg
bound
sub
js
inc
loop
movsl
in
pop
xor
cs
cltd
jecxz
leave
stc
fmul
cmp
pushf
fimuls
jmp
cmpb
and
hlt
fwait
jns
mov
leave
mov
jp
scas
mov
and
jae
cmp
ss
adc
arpl
das
add
testb
subl
or
mov
ds
rclb
repz
or
shrl
inc
add
dec
aad
dec
inc
repnz
cmpsl
frstpm(287
dec
jns
cltd
sahf
xchg
sbb
xor
or
adc
push
cltd
adc
test
cmp
fildl
addl
cmp
js
mov
cmp
idivl
out
scas
test
push
inc
ret
popf
fwait
cmp
sbb
call
and
and
adc
cwtl
mov
push
jle
test
into
popf
pop
sahf
dec
mov
pop
push
andl
negb
pushf
inc
gs
cs
xor
clc
lods
iret
mov
aas
adc
stc
jle
adc
adc
cwtl
add
stos
xchg
and
cmp
idivl
dec
sbb
test
xorl
je
cmp
lea
popa
inc
mov
mov
test
jmp
inc
ljmp
mov
clc
sbb
nop
adc
out
outsl
push
scas
cmp
add
dec
inc
add
rorb
fisttpl
call
adc
or
pop
pop
jl
mov
or
sti
loopne
lds
js
pop
xchg
es
ror
loop
push
bound
fwait
ja
mov
cmp
xor
sub
shll
push
fwait
jp
popf
mov
movsl
cmp
add
inc
mov
mov
sbb
pop
jne
test
test
pop
cmp
in
jg
push
sub
xchg
cmp
sbb
mov
dec
leave
dec
ja
loope
test
daa
fcomip
leave
iret
pop
cmp
or
lods
leave
lods
pop
push
js
hlt
adc
out
sub
jg
pop
lahf
call
insl
clc
loope
dec
imull
fsub
stc
ljmp
pop
fildl
sub
sbb
xchg
sti
xchg
mov
xchg
nop
lahf
clc
cld
cltd
mov
cwtl
mov
pop
fisubrs
int3
or
mov
std
adc
fisubrs
data16
mov
iret
jp
fistps
cli
ja
stc
fsubrs
scas
inc
lea
xchg
out
sub
or
in
xchg
fdivrl
push
mov
push
fwait
inc
cli
mov
pop
jle
pop
jne
dec
std
jp
das
xor
xchg
dec
js
xchg
inc
and
in
xchg
leave
dec
cmp
lret
cmp
lea
inc
in
adc
mov
mov
lods
ss
xchg
std
pusha
stos
out
cmp
mov
aad
dec
mov
jl
xor
sahf
add
ror
insb
sub
push
clc
push
ljmp
dec
and
testl
jmp
pop
fs
frstpm(287
ret
aaa
pop
lods
sti
cld
lcall
stc
outsl
test
sbb
insl
daa
dec
mov
xchg
je
cmp
popa
mov
icebp
popa
xchg
pop
sti
mov
imull
mov
daa
pop
hlt
cmc
sub
daa
outsl
xor
pop
xchg
jp
faddl
xchg
pop
mov
add
test
pop
repz
pop
sub
push
cmp
test
int
cld
sbb
push
mov
push
addr16
adc
dec
out
adc
cmp
sbb
xchg
pushf
xor
fcoml
stos
cmp
fs
xor
divps
insb
jp
cmp
or
dec
sbb
or
pop
pop
pop
movsl
clc
jge
idiv
xchg
xor
scas
mov
mov
dec
rol
ffree
mov
mov
sahf
dec
popl
and
mov
push
jl
xchg
push
jbe
lcall
cld
dec
or
dec
sub
cmp
cmp
subb
mov
std
cld
cwtl
dec
cmp
mov
flds
inc
rorl
push
add
inc
fwait
clc
inc
jae
test
in
sbb
or
psubw
stc
mov
xchg
notl
push
fisubrs
in
lret
xchg
fucomip
mov
out
in
xchg
fsubl
fdivl
iret
pop
mov
leave
cmp
pop
cmpsl
or
xlat
add
dec
popf
ja
fidivrs
add
cmc
inc
dec
fwait
stc
dec
push
sbb
mov
cmp
inc
xor
or
ja
xchg
mov
loope
sub
insb
lds
das
sbb
fistps
popa
add
mov
add
imul
xlat
in
cmpsl
lret
sub
lret
adcb
inc
int3
jae
and
jle
xor
leave
ja
out
adc
ja
mov
pop
fwait
cmp
sub
insb
mov
pusha
lret
js
sbb
mov
cmp
xchg
xchg
cmp
aas
mov
das
mov
cmp
addr16
scas
dec
mov
mov
loop
xor
jmp
inc
popf
rorl
jbe
ret
or
ds
testb
cmp
aas
fnstenv
cli
mov
add
dec
mov
push
imul
adc
cmp
ljmp
fldcw
cmpsb
fidivrs
iret
cmp
jns
xchg
jp
add
or
sub
fdivl
orl
xchg
push
in
and
js
stos
testl
dec
mov
ja
incb
mov
idivb
int3
inc
mov
sbb
or
mov
cli
mov
dec
mov
pop
xchg
cmp
iret
xchg
leave
xchg
scas
jo
cli
cmp
iret
scas
adcb
cmpsl
pusha
ret
sbb
cmpsb
or
leave
pop
insb
imul
dec
cmc
jns
pop
in
sbb
mov
shll
pop
loop
iret
jo
push
cld
sar
mov
fs
cmp
add
xor
sti
cmp
ret
add
int
outsb
xchg
in
push
xor
xor
xchg
cmp
stc
and
add
stc
pop
pop
push
jl
add
fdivrp
push
dec
cli
mov
inc
mov
fsub
ret
ljmp
mov
repz
cld
mov
sti
lods
dec
or
sbb
ss
fbld
inc
out
loopne
or
stc
sub
inc
cwtl
cld
pop
pop
repnz
int3
inc
cmp
jae
std
push
inc
mov
jg
xchg
out
cmp
loop
rol
pusha
sub
mov
dec
sbb
sahf
cmp
xchg
or
dec
lahf
test
pop
outsb
mov
jp
add
sub
pop
add
cmp
jb
ja
insb
inc
negb
xchg
pop
sbb
pop
aaa
subb
test
push
pop
push
leave
andb
or
sub
pop
sbb
jne
xchg
pushf
push
xor
jno
inc
lret
push
outsl
lds
repnz
cmp
test
test
jge
xor
fmull
dec
fmulp
inc
mov
push
mov
lahf
and
jns
pop
popl
decb
cmp
xchg
add
cmp
cmp
adc
imul
lret
test
test
push
dec
cmpl
clc
popa
sti
jae
mov
pusha
jp
add
into
mov
ffreep
xor
inc
je
mov
mov
xor
mov
adc
mov
jp
mov
andb
pop
arpl
dec
dec
add
fs
push
iret
pop
jle
dec
mov
int3
mov
dec
dec
aad
push
xchg
bound
xchg
sub
adc
aad
push
xchg
jo
in
or
insl
dec
leave
decb
ss
sbb
cmp
dec
jnp
dec
repz
nop
jp
xchg
mov
mov
or
inc
adc
xchg
test
mov
ss
mov
cltd
dec
cmp
pop
sti
or
jge
loop
les
dec
xchg
cmp
add
inc
add
mov
icebp
pusha
clc
scas
mov
and
mov
sbb
jns
inc
or
scas
pop
inc
pop
jmp
movsl
lock
mov
outsl
movsb
cld
insb
test
fucomip
jp
inc
lret
pop
jge
jmp
std
shlb
stc
lret
jg
jb
mov
insl
dec
xchg
sub
cmp
or
in
dec
adc
jnp
sbb
dec
mov
sub
popf
cmc
sub
mov
pop
dec
dec
add
sbb
cld
mov
negl
je
fsubrp
push
in
fwait
es
jne
int
add
xchg
jp
sahf
adc
rcl
int3
and
cmp
rcpps
aas
adc
or
sub
div
leave
jno
js
jo
xor
cmp
mov
adc
mov
lret
jmp
sbb
jle
pop
xchg
stos
add
push
or
xchg
clc
cmp
int3
arpl
mov
les
jge
lfs
inc
cmpsl
push
test
aad
mov
add
mov
rcrb
cs
or
loope
loopne
pop
lret
pushf
pop
xchg
cltd
ret
cmp
scas
and
sbb
daa
dec
inc
push
sti
xchg
add
cmp
jmp
adc
xchg
mov
cmp
jle
daa
cmp
push
cmp
jnp
ja
popf
out
sbb
outsl
fwait
push
xlat
jecxz
mov
incb
adc
xchg
inc
pop
test
stc
pop
xor
lea
fldenv
mov
lahf
xchg
icebp
dec
add
imul
add
jnp
aam
jp
lods
jb
test
lds
movsbl
mov
lock
test
xor
das
sbbb
xchg
mov
mov
sub
test
fucomi
hlt
dec
in
or
test
xor
or
dec
jp
daa
push
daa
lret
jae
subl
push
push
sbb
push
bound
dec
push
testb
adc
xor
insl
not
inc
jmp
inc
cmp
or
xor
fdivrl
leave
pop
ds
jge
inc
inc
ret
sbb
sub
lret
xchg
imul
push
outsb
lock
jmp
cmp
add
stc
inc
outsb
inc
mov
lock
popa
and
or
pop
test
pop
stc
dec
cmpsb
aaa
pop
jmp
push
out
lods
call
push
sub
sbbb
test
sti
cmc
cmp
stos
cmc
sti
sbb
leave
movsb
fwait
popf
cmp
ret
xor
xchg
jl
push
jnp
add
into
dec
jle
jmp
in
sub
mov
mov
cmp
jle
sbb
jbe
jnp
ja
pop
xchg
jge
aas
sbb
sbb
jecxz
movsl
rolb
ror
gs
adc
cmp
int3
mov
ja
fsubp
mov
sub
bound
push
and
enter
sti
pop
fcmovu
cmp
or
sub
xchg
mov
sbb
es
mov
movlps
jns
movsl
clc
jns
adcl
jmp
out
lds
cmp
cmp
lahf
jnp
test
sbb
xchg
test
outsb
or
inc
ja
imul
xchg
dec
enter
mov
fisttpll
popa
cmp
mov
and
mov
jge
xchg
pop
test
arpl
mov
mov
pop
fisubrs
mov
inc
aas
mov
cmc
sub
mov
mov
mov
pop
mov
pop
xor
sbb
xor
call
dec
mov
sbbl
sbb
or
pop
lret
jle
ja
mov
fsubrl
jp
test
push
scas
fidivrs
fnstcw
mov
cmp
and
sub
sti
ret
outsl
xor
test
stos
adc
adc
ja
loope
push
outsb
mov
ficoms
or
xchg
mov
dec
jg
mov
addr16
jp
repnz
lds
bound
inc
cmp
ss
inc
mov
adc
xor
mov
aas
or
std
mov
jge
sbb
push
add
jbe
orb
testb
jp
cmp
jg
pop
mov
cmp
es
test
fisttpl
mov
outsl
cmp
loop
test
xchg
incl
fsts
cmc
xor
mov
adc
xchg
push
push
mov
sbb
push
and
adc
out
ret
fnsave
mov
rorb
popf
fists
xchg
aaa
xor
jmp
jnp
pusha
sub
call
cltd
rclb
cltd
sarb
xor
arpl
cld
divl
push
outsl
es
dec
iret
nop
ja
xchg
arpl
or
adc
cmp
cmp
mov
push
andl
fidivs
mov
fs
and
jle
xchg
jl
cltd
ljmp
data16
ja
or
sub
orb
and
sub
push
push
xchg
mov
mov
dec
pop
fiaddl
pop
sbb
ret
insb
js
sbb
mov
into
sbb
dec
ss
pop
push
out
out
pushf
mov
shrl
or
btr
mov
xchg
mov
or
daa
pop
jne
jne
sbb
repnz
cmova
or
sti
adc
mov
je
mov
sbb
jbe
and
mov
mov
cmp
sbb
dec
shlb
into
call
cmp
mov
push
sbbl
or
adc
or
dec
daa
sub
cmc
dec
insb
sub
cmp
inc
in
idivl
add
jns
mov
fdivl
iret
jb
xorl
cmp
ja
insb
push
add
lcall
fs
out
mov
mov
push
jle
fcmovne
pop
jle
push
xchg
jge
add
into
adc
mov
sbb
popf
ss
insl
sbbl
mov
es
sub
cmpl
dec
dec
and
fimuls
in
inc
jl
rcr
popf
repz
je
inc
test
dec
or
mov
mov
neg
adcb
xchg
loop
nop
in
mov
push
mov
shrb
cmc
ja
sub
mov
jbe
es
adc
sbb
jnp
imul
cmp
test
test
xchg
jle
pop
stos
mov
mov
je
outsb
mov
push
pop
out
push
or
push
cs
lret
xchg
imul
fdivrl
jmp
rcll
je
jl
pop
leave
invd
jl
xor
lock
jmp
stos
lahf
jnp
or
inc
add
push
mov
sbb
negb
or
pop
sub
es
mov
xchg
pop
mov
nop
add
repz
pop
adc
and
add
and
dec
sub
mov
and
mov
in
fwait
shr
insb
jge
idivl
fists
iret
mov
js
mov
and
sbb
mov
aam
dec
inc
ljmp
cmp
mov
push
inc
mov
push
loopne
add
iret
jnp
mov
dec
adc
pop
iret
sbb
and
sahf
sbb
ficoml
jp
mov
ss
jmp
aad
xorl
lods
cmp
je
idivl
push
mov
cmp
js
sub
lret
jns
arpl
mov
mov
jnp
jl
mov
js
and
sub
add
insb
mov
in
push
xor
pop
pop
jnp
rorl
mov
sub
sbb
out
xchg
or
xchg
insb
mov
stc
movsl
mov
cmp
mov
xchg
push
int
fsubl
xor
cld
iret
mov
dec
cs
mov
pushf
lock
mov
sub
push
sbb
jle
loop
jo
lods
arpl
xchg
hlt
stc
cmp
ja
adc
aam
cmp
jge
aad
sbb
sbb
mov
sub
ret
jo
mov
daa
jmp
sbb
cmc
arpl
xchg
inc
cmp
push
mov
push
and
push
dec
jnp
sub
jle
inc
ljmp
fldt
cmp
fwait
dec
xor
gs
sub
notb
notl
sub
ljmp
add
pop
mov
or
dec
pop
js
es
mov
sbb
mov
sbb
pop
or
mov
icebp
negl
push
out
or
es
stos
jo
cwtl
push
insb
xchg
cmp
notb
fs
xlat
or
add
lods
addr16
std
js
mov
xchg
stos
js
not
push
mov
test
jp
cmp
testl
or
movsl
lods
adc
xchg
xchg
ret
jg
sbb
xchg
stc
call
fwait
out
add
out
cltd
xchg
mov
cmp
push
lahf
dec
adc
pop
mov
std
jb
jmp
sub
or
pop
or
fbstp
int3
stc
bound
adc
fldenv
jle
mov
sbbb
sti
sar
ss
mov
cld
cmp
stc
subl
sbb
inc
adc
add
jmp
fdivl
jle
out
in
add
and
cltd
xchg
jae
inc
stos
notl
pop
and
adc
fs
mov
sub
sbb
dec
mov
inc
and
or
les
adc
inc
pop
sbb
xchg
repz
popf
cmp
inc
cmp
sti
jg
stc
xorb
call
movl
aaa
or
ss
jno
cwtl
out
add
lods
les
xor
and
lods
dec
xchg
cmp
out
out
sbb
icebp
fldt
xor
movsl
dec
mov
negl
cmp
into
jle
dec
mov
add
push
aam
in
adcb
jle
mov
leave
push
sbb
fs
cmp
addr16
outsl
out
inc
rcrl
xchg
jle
xlat
push
addb
jge
mov
add
mov
cs
shll
out
mov
inc
sub
and
lea
or
les
pop
cmp
and
pop
popf
ss
cmp
lea
inc
cwtl
insb
pop
inc
pop
test
lcall
ja
or
cmpl
or
xchg
imul
test
sub
jns
rcrl
leave
outsb
pop
sarb
inc
mov
test
jns
addr16
push
mov
mov
sub
or
aam
add
and
add
nop
dec
sbb
inc
js
into
adc
in
jns
mov
cmp
stc
dec
add
or
sbb
pop
mov
jnp
ljmp
sbb
inc
cmpsl
or
cli
push
sti
in
dec
bound
jb
cmpl
call
mov
push
vmread
mov
insb
pushf
div
cmp
jnp
jbe
mov
sub
xorb
xchg
push
loop
in
jle
leave
sbb
dec
ja
dec
test
sbb
dec
test
sti
iret
scas
push
mov
insb
jp
mov
push
out
iret
and
mov
sbb
test
xchg
inc
xchg
pop
xor
push
rcrl
mov
sub
mov
xchg
dec
push
cld
xchg
cmp
sti
iret
nop
jecxz
xchg
ja
lahf
stc
jno
cmp
sbb
sub
or
clc
cld
dec
inc
je
popa
aad
jb
cld
jg
jp
mov
push
popa
cmp
pop
sbb
mov
notb
cmp
pop
mov
pushf
int3
xchg
aad
mov
jae
clc
je
sub
js
sbb
mov
push
test
mov
cmp
mov
subb
xlat
dec
mov
or
cli
jecxz
or
ljmp
stc
mov
sbb
js
rcrb
lock
dec
jnp
lcall
push
fsubl
cmp
mov
pop
pop
rcrb
clc
jle
test
imul
dec
pop
dec
cmp
ss
mov
mov
adc
cmp
push
mov
out
push
outsb
rolb
push
shlb
adc
cli
dec
dec
cmp
call
pop
scas
insl
mov
or
das
scas
pop
cmpsb
pop
mov
sbb
xchg
mov
stos
push
mov
cmp
jl
and
adc
pop
mov
xchg
mov
arpl
in
dec
inc
mov
push
cmp
mov
nop
loope
jg
pushfw
lret
adc
aaa
pop
or
xchg
cld
daa
dec
sub
cld
push
mov
cwtl
ljmp
jp
cmc
cltd
jmp
lods
in
repz
mov
lret
stos
ljmp
stc
out
push
mov
insl
lahf
mov
or
out
imul
nop
push
bound
out
js
and
jns
sbb
adc
jg
push
mov
test
sti
mov
mov
and
push
cmp
std
daa
sub
dec
fwait
pop
dec
stos
add
xlat
mov
or
mov
xor
mov
mov
sbb
movsl
sbb
mov
jmp
jno
cltd
into
enter
or
mov
sub
lcall
cmpsb
arpl
push
sti
pop
lods
dec
cmp
sbb
or
imul
sbb
xor
repnz
fs
xchg
imul
pop
inc
idivl
test
or
add
jge
jl
cltd
js
xor
inc
or
scas
lret
mov
test
adc
mov
push
data16
jmp
ljmp
jge
jle
in
jg
dec
pop
jmp
mov
sub
dec
xorl
jbe
mov
push
mov
jle
pushw
jp
fwait
mov
imul
xor
push
cmp
test
pop
test
jle
std
es
sbb
mov
enter
dec
sbb
push
adc
inc
mov
inc
xlat
addb
inc
cmp
cmpsl
out
in
or
aad
fs
pop
rorb
push
inc
out
cmc
ror
sbb
jg
in
popf
ss
in
or
mov
sarl
jmp
fninit
je
fs
fsubr
mov
xor
ja
jns
sarb
stos
mov
mov
pop
js
cwtl
out
xor
or
ss
xchg
stos
negl
jle
lods
mov
vmovhpd
stc
or
add
adc
fadds
pop
cmpsl
addr16
adc
sub
jo
lds
and
ds
sbb
jmp
add
jne
jmp
jmp
leave
xchg
jne
mov
stc
or
mov
dec
sub
jl
pop
fidivrl
inc
es
jns
xor
xchg
push
out
nop
inc
pusha
mov
xchg
dec
mov
push
into
cmp
lret
icebp
cmc
stc
clc
mov
roll
fiadds
jl
in
adc
sub
mov
bound
pop
jno
shll
das
mov
testl
or
pop
jns
or
adc
out
dec
or
mov
jp
pop
aas
mov
jge
jnp
ja
sbb
aam
xchg
sub
mov
push
icebp
jecxz
loop
stos
dec
popa
jg
jae
lods
and
aam
cmp
das
rorb
cltd
push
dec
aas
jmp
orl
mov
cld
repnz
popa
push
push
fs
lcall
aad
rolb
mov
jle
lds
imul
xlat
out
xchg
fsubp
xchg
es
jmp
leave
mov
lods
adc
mov
pop
rcrb
sub
gs
leave
xchg
lcall
jge
mov
sub
push
gs
pop
test
mov
icebp
push
ret
sub
lret
xchg
lret
ljmp
mov
add
adc
sbb
int3
call
inc
out
cmpsl
daa
scas
push
call
js
mov
loopne
cld
inc
ret
cmc
outsb
or
cmp
pop
imul
fldt
enter
pop
add
cmc
ljmp
add
mov
push
mov
or
in
mov
and
mov
jae
sbb
jl
or
mov
stc
xchg
mov
rcrb
jge
push
cmc
shlb
rclb
cli
fcmovb
in
stc
cmp
rep
mov
sbb
test
mov
add
inc
jge
sbb
push
lret
lret
xchg
xlat
xchg
pushf
sub
hlt
movsb
lret
xchg
push
add
repz
sti
cmc
inc
xchg
addb
pushf
jmp
leave
pop
mov
inc
clc
pop
mov
add
test
xchg
pusha
sbb
notb
pop
mov
lret
fistps
jp
daa
ja
loop
aam
xchg
or
fwait
dec
xor
out
add
jle
mov
sub
inc
jns
out
lret
arpl
pop
gs
or
rorl
cmpb
clc
mov
enter
and
das
mov
rorl
sbb
xchg
and
or
lock
bound
stos
pop
jle
rcrb
fwait
cmp
mov
dec
mov
arpl
cmp
popf
pop
bound
mov
int3
mov
pop
fdiv
mov
xchg
lret
arpl
stos
mov
insl
outsl
xchg
mov
add
and
mov
mov
js
adc
dec
ss
sub
or
imul
dec
sbb
push
jl
jle
pushf
testl
dec
add
and
or
out
les
dec
sbb
sahf
jle
pop
neg
push
add
push
ja
mov
or
sbb
jo
ret
std
pop
jmp
inc
jecxz
ss
add
jnp
into
mov
cmp
popa
fidivl
test
adc
test
cmp
inc
hlt
add
jnp
adc
outsl
aas
shlb
mov
shrl
test
dec
stos
push
xchg
jg
ja
inc
xor
mov
jg
insb
fnstsw
out
push
in
clc
fistps
test
or
inc
dec
ror
ja
jle
mov
outsl
js
mov
pop
out
or
xlat
mov
fs
sub
sub
cmp
add
repnz
shll
cmp
ljmp
mov
xchg
stc
test
lret
jns
ljmp
jle
xchg
arpl
xlat
test
push
jo
loope
iret
test
mov
cmp
mov
mov
jne
out
cmp
or
shl
xor
sbb
sbb
add
bound
adc
test
xchg
fiadds
add
dec
push
sbb
pushf
add
dec
subl
test
mov
fidivrl
ret
mov
sti
divb
std
xchg
mov
movsl
gs
loop
and
pop
mov
pop
jmp
mov
inc
push
dec
mov
mov
fistl
je
test
jp
sub
push
adc
and
jmp
js
testl
mov
push
pop
xchg
je
xchg
js
test
add
ss
addl
pop
pop
mov
adc
pop
idivb
push
stos
xchg
mov
mov
ror
js
repnz
nop
pop
fdivrs
ret
fcmovne
lahf
xor
cmp
lret
jge
pop
xchg
mov
fldcw
pushf
mov
test
lret
adc
sbb
mov
jp
jne
mov
dec
push
in
rcrl
xchg
push
repnz
fsincos
lods
jg
imul
icebp
xchg
push
sti
cld
sbb
pushl
add
insl
add
mov
pushf
ss
cmp
or
jecxz
loope
xor
lahf
cld
inc
test
sub
sbbl
pop
sbb
sbb
jmp
rorl
dec
lea
lret
inc
mov
cmp
in
mov
js
jbe
jne
and
dec
mov
outsb
insb
adcb
cmp
mov
test
sub
push
test
inc
lods
pop
cmp
out
imul
cmp
mov
jmp
jmp
xchg
js
push
scas
sbb
xchg
mov
in
push
sbb
mov
or
fs
mov
jae
cmc
into
clc
xor
xchg
je
andb
cltd
sub
add
fs
lods
lahf
add
lods
cltd
adc
out
out
fdivr
mov
xchg
mov
dec
nop
movb
insb
pop
xchg
ds
xor
xchg
ljmp
or
cmp
xor
xor
adc
mov
jg
and
lods
mov
je
insl
lret
mov
repnz
out
fimuls
ja
cmpsl
cmp
cmp
add
xlat
test
mov
jbe
pop
js
fistps
mov
sbb
das
mov
popf
int
test
xchg
push
mov
sbb
in
jb
jl
out
and
push
adc
cs
mov
pop
add
ljmp
mov
subl
movl
cwtl
push
jbe
cltd
sub
xor
push
cmp
xor
test
mov
mov
dec
cmpsb
mov
inc
push
lods
lcall
pop
sbb
inc
pop
bound
lcall
cli
iret
pop
pop
rclb
addl
dec
pop
xchg
pop
pusha
sbb
inc
jg
jns
mov
dec
mov
cmp
lods
mov
inc
add
fucomp
mov
pop
dec
neg
addb
or
repnz
mov
mov
pop
adc
sub
push
sbb
shl
out
into
fxam
push
fs
jp
decl
or
fwait
sbb
cmp
and
adc
test
or
mov
adc
jmp
movzwl
sbb
cmp
jp
lds
push
ss
pop
in
fldt
ds
push
inc
mov
mov
jns
jns
and
cmp
or
mov
clc
xor
sbb
call
stc
insl
mov
dec
push
scas
cli
int
imul
mov
in
pusha
fxsave
xchg
adc
push
sbb
test
daa
pop
pop
in
stos
gs
cmp
cmp
lea
jmp
ds
add
jl
std
cmpsl
test
mov
cmc
jnp
jle
push
jg
lahf
addr16
lcall
pushf
push
or
jge
into
pop
lods
mov
stos
js
mov
add
xchg
jp
mov
cmp
ret
pop
sbb
lahf
pusha
dec
cmpsl
pop
and
xchg
jge
jns
mov
pop
add
js
cli
cmp
adc
std
dec
ljmp
sub
fdivl
cmpps
out
cmp
mov
mov
jns
sahf
pop
jnp
inc
in
clc
cmp
cltd
cmc
cmc
and
sbb
xchg
or
xor
ja
dec
jmp
cmp
sbb
rcrb
cmp
adc
pushf
mov
jle
xor
pop
call
loopne
lods
jnp
mov
push
add
cmpsl
xchg
popl
fwait
jns
dec
nop
in
popf
mov
pop
scas
pop
cmp
cwtl
xchg
dec
testl
push
dec
push
sbb
adc
mov
jnp
popa
cmp
jge
pop
dec
xchg
jne
sub
outsb
xchg
pop
sub
sbb
call
loope
fdivs
fstps
insl
cmp
bound
ljmp
jl
std
and
std
or
cmp
and
sbb
loop
and
and
clc
sbb
cmp
push
call
pop
enter
in
xor
int
and
fwait
pop
cmc
pop
fimuls
sub
push
lret
push
cmp
sbb
stos
push
cmp
mov
cmp
mov
add
enter
out
icebp
xchg
bswap
stc
imul
mull
in
mulb
clc
std
mov
packsswb
cltd
mov
popa
push
pop
stc
cmp
cmp
xchg
inc
xchg
cwtl
pushf
mov
xchg
push
push
into
jb
scas
je
add
jle
or
pop
cmovae
cltd
iret
inc
adc
dec
fidivrl
rolb
lock
in
fdiv
fistl
push
cs
and
mov
out
stc
adc
cli
push
sub
int3
das
jmp
cli
stc
mov
lock
cmp
cmp
int3
mov
jmp
jmp
inc
sar
xlat
dec
hlt
daa
pop
jp
test
push
inc
test
fwait
cli
idivb
xchg
sub
fimuls
adc
clc
mov
push
jp
jmp
cmc
mov
cli
das
icebp
addr16
js
mov
push
loop
daa
xchg
xor
cmp
mov
cli
repnz
mov
test
jbe
sbb
dec
loopne
jle
jmp
test
push
dec
ss
xlat
jae
jae
fwait
or
sarb
mov
jl
mov
inc
insb
adc
movb
jp
stc
lods
xchg
mov
clc
dec
sub
dec
divl
mov
xlat
lahf
mov
mov
sub
xor
pop
fsubp
and
inc
ss
xchg
movsl
adc
cmc
dec
xchg
cmp
dec
mov
ds
ja
jno
adc
cmp
imul
test
xor
mov
outsb
jle
push
inc
xchg
out
xor
sbb
sbb
jns
xchg
out
and
mov
test
lahf
stc
xchg
cli
push
xlat
cwtl
push
push
jnp
or
imul
sub
inc
neg
xor
outsl
cmp
sbb
inc
outsl
push
jge
adc
mov
jne
js
lock
pushaw
inc
arpl
or
imul
in
xchg
jmp
or
jns
sar
sbb
pop
cmp
jmp
and
jae
push
lahf
lock
push
jge
mov
inc
or
sbb
xorl
pop
mov
pop
sub
cmp
popf
cmp
dec
adc
mov
jns,pt
cmp
pop
mov
xor
ds
fstpt
out
leave
das
jo
inc
cmc
sbb
testl
rol
xor
cmp
bound
xchg
mov
aas
sahf
jl
cmp
mov
xchg
mov
js
mov
imul
js
stos
mov
cli
inc
jecxz
add
mov
sub
pop
mov
jae
mov
rcll
popa
bound
cld
lods
sub
mov
dec
dec
jmp
inc
out
iret
subb
cmp
sbb
fcmovnb
mov
or
loop
ljmp
sbb
dec
xchg
int3
sbb
stc
sub
xor
dec
setne
or
jmp
divb
cli
xchg
push
mov
stc
or
and
sbb
mov
sbb
push
pushf
stc
or
jmp
js
addr16
sbb
fcmovnb
fcmovb
pop
out
notl
and
jo
xchg
pop
test
mov
cmp
or
outsb
pusha
push
push
rolb
ss
cmp
add
iret
mov
cmp
xlat
js
clc
adc
cmp
scas
dec
push
jle
in
xchg
cmc
or
cli
pop
mov
ja
sbb
add
sbb
pop
pushw
dec
mov
jg
push
cmpb
sub
pusha
jnp
pushf
push
cmp
jae
popa
jb
mov
jecxz
and
in
jo
pop
addb
sub
js
arpl
stc
cmp
out
mov
fldenv
in
mov
add
mov
mov
cmp
or
cmp
js
mov
popf
xor
mov
add
inc
push
addb
dec
jno
aaa
mov
jle
xchg
lock
lret
aas
push
mov
sarb
iret
ret
imul
cmp
mov
inc
add
mov
or
daa
lds
jo
mov
inc
ds
adc
ret
out
into
mov
xor
push
or
cmp
dec
aad
mov
repnz
and
push
adc
insb
sbb
cmp
pop
xchg
cmp
js
xchg
jnp
sub
add
push
mov
outsb
stc
sbb
frstor
jno
call
sbb
jle
js
loopne
jp
pusha
jo
dec
inc
daa
cs
cld
mov
dec
ss
test
je
mov
fucompp
sbb
mov
ss
sub
pop
clc
mov
leave
nop
fcoms
pushf
pop
push
mov
dec
test
mov
popf
jo
daa
jns
imul
scas
xor
inc
int3
adc
jnp
mov
pop
cmp
pop
mov
shrb
and
dec
adc
dec
data16
movaps
in
pop
pop
idivl
mov
data16
adc
inc
adc
shl
ja
inc
pop
call
add
fisubrl
cmp
mov
lcall
mov
std
jo
fimuls
mov
inc
sbb
jns
lds
es
test
leave
sub
or
add
sbb
mov
mov
xchg
mov
xchg
dec
lret
jl
fmul
xchg
fistpl
jno
insb
movsb
adc
push
sub
sbb
mov
ss
mov
push
lea
scas
sbb
add
je
push
cmp
in
leave
add
add
iret
or
popf
daa
push
inc
lods
adc
cmp
xor
push
mov
sub
sub
jmp
dec
xlat
push
iret
cmp
pop
fnstenv
in
mov
je
jne
imul
fsub
cmp
aam
lods
sbb
jns,pn
sub
rclb
jmp
aam
cs
test
xor
xchg
mov
orl
idivb
pusha
cmpsl
icebp
rcrl
pop
add
sbb
clc
pop
jns
jmp
dec
mov
sub
inc
dec
cmp
and
imul
icebp
nop
popa
cmp
push
pop
cmp
stos
notl
out
ljmp
out
aam
je
push
loopne
out
mov
push
xor
sbb
ja
mov
pop
mov
cmp
dec
inc
sbb
jo
xchg
dec
in
and
out
lret
push
add
lds
xchg
push
push
mov
sbb
or
daa
dec
aad
lcall
or
pop
or
gs
lds
test
pop
lcall
es
scas
dec
fs
mov
mov
lock
dec
andl
xor
scas
sub
cmp
dec
lea
pop
lds
pop
inc
dec
cmpsb
adc
dec
cmp
cmp
ds
mov
fcomip
mov
mov
dec
inc
push
fdivrl
ljmp
jge
rcrb
dec
pop
push
mov
outsl
jle
into
js
lahf
pop
mov
inc
sub
push
cmp
dec
out
sbb
mov
pop
adc
lahf
daa
aas
daa
es
mov
mov
jo
mov
jne
jne
loope
hlt
test
pusha
dec
pcmpeqw
lds
xor
inc
daa
imul
leave
addb
rcl
mov
adc
xchg
test
idivb
mov
repz
negl
jl
out
rorb
cwtl
push
iret
fdivrp
jbe
cltd
jne
jb
movsl
aad
xchg
insb
lods
pop
cmp
in
popl
mov
sbb
or
inc
dec
aaa
lock
das
jmp
inc
sub
jge
add
adc
cs
ljmp
mov
mov
inc
jns
sbb
test
and
subl
imul
mov
adc
push
cmp
cmp
adc
call
sbb
jg
mov
mov
divl
mov
mov
mov
pop
cs
sub
dec
cmp
clc
cld
push
push
cltd
sub
jl
adc
xor
mull
jle
mov
adc
rcl
ljmp
aas
mov
mov
je
test
dec
push
fcmovb
cmc
out
insl
mov
fwait
dec
jp
fs
cwtl
ljmp
adc
gs
mov
mov
test
orl
add
ljmp
mov
fcomip
aad
cmp
addr16
sarl
aam
hlt
out
ss
sti
inc
fisubs
mov
mov
psrlq
jmp
dec
push
xor
sbb
xchg
cmp
addr16
fcompl
ljmp
sub
std
cmpsl
cmp
sbb
cmc
ljmp
cmc
repnz
outsb
jl
es
stos
ficomps
subl
jp
xchg
dec
pop
xchg
repz
cmc
inc
cmp
mov
inc
cmc
shrb
int
fisttpll
xor
std
xor
ja
insl
sahf
outsl
cmp
sbb
inc
fcoml
cmp
ljmp
cmp
dec
repz
in
mov
repz
mov
cmp
dec
lods
xchg
inc
push
or
sbbb
mov
and
cmp
cltd
mov
cmpsb
sbb
mov
rorb
lahf
js
sahf
movsb
sbb
mov
adc
loope
out
xor
or
cli
lahf
aad
imul
mov
mov
cmp
inc
sub
mov
mulb
movsl
iret
test
pop
sbb
jo
mov
imul
mov
sub
std
nop
dec
stc
push
sub
jge
mov
cmc
jbe
push
mov
push
xchg
push
pop
mov
aam
addb
pop
push
cmp
or
dec
call
stos
insl
xchg
pop
sub
fidivs
dec
xchg
mov
mov
dec
cmp
push
sbb
lea
pop
pop
mov
cld
pop
rcr
dec
add
jb
pop
js
mov
sbb
or
test
stos
shll
cmp
std
repnz
iret
movhps
jbe
inc
loopne
xor
cmp
jmp
pop
inc
iret
xlat
hlt
inc
mov
scas
ljmp
in
outsl
enter
test
out
xchg
mov
pop
push
cmpsl
mov
daa
xchg
out
ficomps
cmp
ds
mov
dec
stos
xchg
push
jle
pop
mov
cmp
scas
cmp
stos
addr16
inc
out
inc
jmp
add
cmp
jecxz
pop
ret
mov
adc
jo
pop
jp
pop
jns
pushf
movsbl
xor
adcl
jns
xor
xchg
neg
or
js
das
pop
in
mov
mov
mov
cli
das
and
daa
mov
aam
loope
or
dec
ja
inc
mov
jmp
mov
movq
xchg
mov
test
pushl
mov
pop
out
loopne
lcall
and
mov
ficomps
dec
jl
xor
cmpsb
add
lahf
mov
push
sbb
fists
lods
dec
ds
rcl
cld
jp
data16
cmp
ja
pop
in
dec
or
addr16
xchg
movsb
scas
mov
dec
xchg
pop
mov
sbb
ss
out
xor
or
stos
pop
mov
cmp
mov
add
mov
ja
stc
inc
rcl
jb
jle
mov
mov
ds
jp
lea
dec
jp
adc
mov
daa
dec
dec
pop
es
mov
cli
mov
mov
pop
and
addb
or
sbb
std
mov
pop
int3
test
mov
idivb
jns
inc
mov
sbb
repnz
cmp
mov
out
xor
and
out
mov
je
ret
push
loopne
push
sub
pop
adc
sub
rorb
pop
scas
pushf
sbb
psrad
cmc
fisubrs
inc
push
es
add
cmp
aam
divl
xor
xor
fs
jnp
insb
popa
jge
mov
mov
adc
inc
mov
sar
jmp
adc
mov
mov
cmpsl
ret
daa
iret
push
das
aad
daa
push
fs
mov
cmp
or
mov
ror
js
test
add
pop
cld
mov
sub
xchg
cmp
negl
arpl
std
sbb
js
movsb
sahf
pushf
pop
lock
stc
cli
adc
aas
lods
fiadds
cmc
nop
jno
mov
fldpi
addb
sarb
pop
mov
dec
stc
jecxz
cld
mov
fdiv
pop
movsb
cmp
iret
cmp
mov
push
repnz
mov
enter
sarl
dec
sarl
or
es
jle
cs
aas
mov
adc
mov
xorl
ljmp
push
mov
scas
pop
xchg
xchg
dec
mov
cmp
aad
jmp
sub
fsubrs
fisubs
xchg
mov
xchg
mov
push
fsts
dec
or
fimuls
das
dec
dec
xchg
fs
cld
mov
dec
pusha
jp
xlat
and
cmp
push
push
cltd
lods
cmp
cs
jnp
xchg
xchg
fsub
fwait
das
jnp
lds
scas
xor
sub
out
popf
push
in
mull
data16
shrl
xchg
dec
test
scas
or
outsl
sbb
push
xchg
bound
push
jnp
std
out
mov
pop
xchg
aam
gs
mov
cwtl
je
xlat
or
ja
sub
mov
jno
movsl
incb
cld
or
adc
push
jp
mov
dec
mov
ret
hlt
sbb
daa
adc
out
and
xor
ja
jbe
movsl
xlat
ret
mov
mov
aad
in
pop
sub
ja
sbb
push
idivl
dec
insl
cs
stc
andb
sbb
stos
and
jle
jmp
pop
inc
iret
jmp
mov
aas
pop
mov
push
inc
mov
movsl
push
leave
cmp
ror
jg
adc
test
out
clc
mov
push
daa
popf
enter
xchg
into
js
jge
arpl
xchg
mov
add
test
sub
xor
jo
clc
fldl
xchg
in
adc
lods
ljmp
pop
insb
es
and
dec
sbbl
mov
dec
inc
iret
faddl
push
xchg
cmpsl
mov
js
mov
or
js
mov
mov
lea
div
push
lret
call
add
push
aas
sbb
mov
xchg
sbb
test
sar
lret
and
xchg
xlat
sbb
fisttpll
aas
xor
push
jnp
ret
and
ret
cmc
mov
pop
into
mov
sub
ja
and
xchg
sbb
inc
or
test
out
into
insb
xlat
mov
pushf
cmp
sbb
cmp
das
bound
adc
leave
fimuls
dec
mov
jl
test
sub
sarb
add
movsb
fsubrp
pop
mov
push
les
data16
shl
test
push
cli
aas
dec
cmp
clc
nop
cs
xchg
xor
movsl
in
jmp
fdivs
adc
mov
stc
xchg
test
cmp
jp
inc
int
xchg
daa
lret
jp
movb
pop
push
in
test
arpl
or
mov
inc
cmp
push
sbb
xor
pop
call
push
pop
or
clc
jmp
test
jno
fwait
xchg
adc
pop
imul
dec
push
pop
out
hlt
ja
addr16
lret
loope
push
sub
jo
sub
imul
das
ljmp
bound
sbb
clc
loop
cwtl
fisttpl
cld
ljmp
mov
bound
out
dec
dec
aas
vmovsd
stc
or
push
or
xchg
xchg
sbb
ficoml
fisttpl
inc
fnstenv
imulb
dec
pop
call
inc
js
sbb
dec
cmp
idivb
addr16
leave
adc
mov
mov
pop
or
sarb
cmp
push
rclb
mov
cmp
jmp
orb
cmp
test
dec
push
imull
sub
shll
sbb
addr16
jbe
xchg
push
js
loopne
or
sahf
or
sub
cmp
cmp
and
imul
push
cmp
popa
or
insb
mov
js
ds
daa
fbstp
out
xchg
dec
mov
fstps
cmp
xor
sahf
mov
repnz
iret
mov
sbb
sub
xchg
lret
ljmp
push
pop
sub
or
and
aas
cltd
leave
incb
cwtl
adc
xchg
mov
out
xchg
dec
cmp
xor
popa
jmp
inc
inc
es
test
mov
fsubs
inc
imul
or
sub
push
repz
or
test
lods
fimull
scas
fcomp
sub
imul
xchg
jae
fiadds
xchg
jnp
pmaddwd
outsl
notb
into
sub
mov
scas
jno
movsb
jbe
pushf
cmc
or
xor
jbe
sbb
dec
jnp
mov
leave
outsl
mov
or
xorl
insl
test
cli
add
ror
pop
cmp
xor
les
pop
test
rolb
sbb
bound
push
mul
mov
cmc
push
push
movsl
shrb
daa
fstpt
bound
lahf
idivl
adcb
adc
fs
fsubl
out
cmp
pop
out
jle
xor
sub
mov
enter
or
dec
call
imul
ss
jmp
ss
loope
mov
cmp
pop
pop
fwait
mov
js
add
iret
jmp
and
sub
test
lea
mov
popf
push
out
outsl
testl
dec
or
shl
lret
and
push
data16
ljmp
push
or
test
mov
test
xchg
cmp
lahf
jnp
sbbb
pop
mov
fidivs
lods
loop
insb
jecxz
xchg
push
ss
enter
loope
sub
pop
inc
pop
adc
fcmovne
sbb
movsl
mov
xchg
cmc
gs
dec
pop
jo
or
sub
test
mov
iret
jg
sub
addr16
lods
fsubr
scas
sbb
xor
xchg
pop
aam
sbb
cmc
sub
jo
and
and
dec
stos
fldl
or
push
in
mov
pop
push
mov
sar
or
loope
sub
pop
test
inc
lods
xor
pushf
pop
mov
inc
js
push
xchg
lahf
stos
jnp
push
push
add
jl
mov
xchg
mov
add
pop
add
fimuls
add
test
lods
mov
cltd
xchg
mov
mov
imul
mull
clc
shll
adc
testl
loopne
js
jnp
add
or
mov
push
adc
sub
rcr
test
iret
into
enter
scas
pop
xor
or
fiadds
in
jnp
jp
ret
add
enter
dec
cmpsl
outsl
pop
subl
mov
rcll
pusha
lods
shl
out
cmp
push
inc
xor
xchg
cmp
cmc
cmp
pushf
xor
out
jmp
xchg
adc
xlat
into
lahf
mov
mov
adc
mov
cmp
push
inc
mov
adcb
xchg
and
push
bound
dec
lods
gs
and
inc
mov
out
mov
mov
data16
fnstsw
add
jmp
cmpsb
int3
loopne
push
add
jp
jle
sub
fwait
scas
fwait
cmp
sti
ss
incb
dec
mov
andl
jecxz
sub
xchg
fstpt
test
jmp
repnz
jge
shlb
mov
push
dec
mov
aam
flds
ljmp
xor
pxor
cmp
fdivp
iret
jo
lods
or
mov
mov
jmp
sti
cld
cmp
out
pop
mov
pop
push
pop
sbb
mov
mov
cmp
xor
sub
cmp
std
cmp
mov
out
push
and
in
mov
push
xchg
jno
mov
sub
adc
or
cmp
or
pop
xchg
xor
mov
stc
xor
xor
stos
orb
ret
idivb
pop
scas
out
pop
mov
pop
leave
dec
sbb
movsl
sub
stos
dec
mov
cli
and
dec
cltd
sbb
xchg
data16
mov
add
xorb
lods
je
das
cmp
mov
mov
in
mov
mov
mov
addr16
or
movsl
daa
fwait
pop
xchg
insb
jmp
push
mov
sbb
cli
scas
dec
dec
jle
sub
stos
sub
sbb
sti
clc
adc
icebp
sbb
and
xchg
adc
adc
inc
dec
cmp
inc
push
mov
aas
popl
fists
dec
sarl
aam
jae
lods
mov
and
mov
movsl
fwait
cmp
data16
add
insb
push
push
aas
add
cli
adc
fwait
xchg
nop
aas
popf
lret
push
cmpsb
and
sbb
sub
pusha
jle
jg
xor
push
stos
cmp
sbb
out
fcoml
inc
mov
jb
mov
mov
or
xchg
nop
or
add
dec
sbbl
sbb
cli
sbb
roll
jnp
adc
das
ds
lods
in
pop
push
inc
sti
cmp
sbb
cli
jns
sub
pop
xchg
cmp
xlat
sub
xor
dec
inc
sbb
mov
loopne
jp
nop
les
mov
pop
jnp
cmp
and
aam
je
subb
jle
scas
ljmp
xchg
lods
xor
sahf
lcall
mov
cmp
cli
cmp
cmc
dec
daa
cmp
outsb
shlb
jle
pop
mov
divl
add
mov
lock
push
data16
xchg
js
push
fmulp
jl
push
lahf
mov
push
testb
adcl
jmp
mull
adc
bound
pop
mov
inc
add
test
inc
and
ror
mov
xorb
mov
fwait
mov
ja
dec
lahf
test
mov
mov
es
lcall
cmc
insb
jmp
mov
inc
cmpsl
or
inc
fstpt
imul
fnsave
arpl
lds
pop
push
leave
out
sbb
or
dec
in
jg
pop
not
adc
icebp
push
cmpsb
popf
pop
in
ja
mov
out
cmp
sbb
fadds
mov
inc
mov
inc
mov
cmp
cmp
mov
lea
fidivrl
add
dec
push
push
nop
or
or
adcl
cmp
add
add
add
sbb
pop
incb
or
sbb
cwtl
lret
sbb
sub
fnstcw
mov
cmp
push
add
je
stc
ficoms
stc
cmp
std
shrl
adc
outsb
add
inc
addr16
out
and
cli
nop
sbb
xchg
push
jmp
loop
xchg
pop
jle
cli
das
mov
xchg
cmpsl
jmp
add
clc
fimull
mov
and
inc
test
mov
dec
jmp
sub
adc
push
imul
cwtl
cld
xchg
push
divl
pushf
inc
ds
js
jecxz
mov
xor
notl
addr16
imull
cmp
popf
hlt
adc
lock
negb
cmp
cmpsb
pop
imul
push
or
sbb
lea
clc
push
ss
repz
push
shll
or
es
cmp
out
cmc
mov
pop
sbb
jbe
mov
lea
dec
mov
cmp
lret
sbb
lea
xchg
jmp
mov
mov
hlt
jl
sti
out
movsb
sub
adc
ds
test
inc
sarb
and
addr16
adc
js
mov
int3
leave
inc
out
mov
sarl
sbb
out
mov
sub
mov
cwtl
mov
jns
cmp
or
test
lea
sub
jge
inc
push
popa
mov
jmp
jae
pusha
dec
iret
ret
or
ss
mov
popf
test
cmp
mov
adc
mov
jl
adc
insl
mov
xlat
testl
pop
jle
fstl
mov
pop
js
add
es
push
fdivrl
cmp
mov
je
xchg
stos
pop
inc
leave
adc
adc
add
cltd
mov
cmpsl
pop
mov
sub
inc
xorps
cmpsl
xchg
jl
cmp
mov
sti
mov
mov
add
cmp
aam
pop
jg
in
aam
jbe
sbb
fdiv
movsl
jne
mov
int
mov
and
nop
fcomps
fnstcw
adc
pushf
fnstcw
sub
jns
inc
pop
js
jecxz
push
ret
cld
call
xchg
dec
jno
mov
dec
loopne
imul
push
jo
jns
push
cli
sbb
js
jb
pop
jge
dec
cmp
neg
je
sbb
lea
mov
test
sti
ret
mov
jnp
pop
lods
jbe
sub
xor
cmpl
stos
daa
jge
jecxz
je
lahf
clc
mov
movsb
scas
mov
test
iret
outsb
inc
xchg
cmp
stc
add
cmp
stc
jmp
popa
or
mov
jae
mov
sub
cmp
jae
xor
adc
sub
or
push
lahf
mov
movsl
push
pop
fsts
mov
mov
out
pop
xchg
xor
movsl
mov
jmp
sbb
inc
inc
insb
mov
cmp
loope
pushf
or
jo
mov
stos
fstps
cmp
lahf
test
jecxz
cmp
or
or
or
or
lret
dec
jo
sti
mov
sbb
push
stc
cmp
cmp
ljmp
mov
notl
popl
cmp
gs
add
add
dec
cmpb
jmp
xchg
out
push
cmp
in
mov
sbb
sbb
ds
stc
xor
push
jmp
push
jbe
xlat
mov
cmp
imull
adc
add
rcrl
cmp
movsb
inc
dec
mov
hlt
jp
mov
clc
test
push
popl
mov
adc
int3
nop
jbe
add
jno
sub
gs
lods
or
test
sti
in
mov
out
push
xchg
adc
jmp
sti
pop
mov
test
call
push
loope
add
mov
xor
add
mov
mov
mov
xor
in
inc
xchg
loope
jo
mov
bound
clc
cmc
dec
es
mov
addb
stc
cwtl
loope
add
pop
add
mov
push
add
nop
mov
fs
adc
mov
aas
jnp
shrb
es
int3
sub
out
lods
mov
pusha
dec
cmp
int3
xchg
rorl
add
jmp
jg
cmp
notl
int3
or
loopne
js
aam
mov
and
std
add
and
sub
cmp
cmc
cmc
cld
adc
in
sbb
push
cmp
dec
cltd
dec
or
pop
js
mov
pop
push
cmp
cmova
push
pop
cmpsl
xchg
xchg
idivb
jmp
or
insb
divl
cmp
mov
adc
adc
roll
fwait
push
stos
movsb
lret
or
push
xchg
cli
dec
iret
mov
mov
xbegin
sbb
mov
xor
xchg
xor
push
push
adc
jecxz
adc
add
mov
jp
sub
jns
jo
jns
idivb
jmp
ss
sbb
jo
cwtl
xor
mov
inc
xchg
repnz
push
pop
mulb
stos
fiaddl
and
imul
js
sub
mov
cmp
cmp
push
jge
adc
jl
repz
push
dec
jmp
shrb
push
push
sbb
mov
sub
rclb
rcrb
in
mov
sub
insb
roll
jns
mov
mov
mov
sar
adcl
cmp
cmp
push
ds
xchg
cmp
add
mov
pop
hlt
aam
cmpsl
test
cmp
cmp
or
add
add
imul
add
dec
or
cmp
in
adc
js
ss
repz
jns
sbb
push
bound
add
lods
mov
cmp
add
test
or
push
or
aam
mov
sahf
ud1
or
sbb
jle
dec
mov
push
mov
lahf
js
cmp
fidivrl
adc
mov
rorl
pop
cmp
sbb
js
fs
or
sub
jge
sbb
dec
int
mov
jle
adc
sub
xchg
sbb
or
stc
dec
mov
insb
stc
push
cmp
sub
mov
xor
cmp
xchg
enter
sbb
inc
jno
roll
push
sbb
aas
xlat
and
cmp
dec
dec
inc
push
jp
repz
pop
mov
mov
mov
pop
pop
jb
lock
lds
loop
into
out
mov
mov
mov
bnd
jo
arpl
mov
or
out
rorl
mov
testl
xor
push
lcall
lea
pop
clc
inc
pop
adc
sbb
xchg
fbld
sarl
mov
pop
xchg
lcall
pop
xlat
test
lods
sbb
ja
push
push
mov
ljmp
cmpsl
mov
test
dec
mov
test
mov
lds
shrl
push
test
pop
es
pop
dec
js
add
fcoms
mov
pop
xor
push
jl
test
pop
mov
inc
loope
sbb
mov
mov
lcall
insl
cmp
jg
orl
leave
inc
push
dec
jg
cmp
push
and
xor
cmp
mov
test
iret
sti
imull
cmp
or
cmpsb
out
ja
jg
scas
cmp
push
mov
sub
js
call
popa
sbb
lock
idivl
mov
and
mov
dec
cwtl
add
test
fimuls
lock
xchg
cmp
xchg
cmp
loopne
das
sbb
sti
in
bound
push
cmp
iret
clc
mov
jmp
mov
add
out
sub
sub
cmp
fcoml
pop
aas
adc
cmp
stc
dec
inc
sarl
sub
jmp
hlt
xchg
xor
push
pop
push
adc
test
jecxz
xlat
js
in
cmp
insl
ds
jmp
scas
dec
popf
or
mov
inc
outsb
movsb
ret
jg
cmp
pop
je
call
insl
cwtl
sbb
aad
imul
pop
pushf
mov
movl
mov
push
cltd
ja
ja
in
neg
pop
aas
sub
testl
jg
mov
testl
iret
inc
jl
mov
rol
in
jnp
mov
in
jg,pn
pop
icebp
sub
fwait
sbb
pop
dec
fs
das
pop
bound
dec
add
xchg
xchg
sub
ja
aam
jge
inc
sbb
cmp
mov
cmp
and
cmp
mov
lods
sub
rcrb
mov
jbe
mov
push
cmp
fidivrl
js
or
or
cmpsl
lea
fldenv
sbb
add
fwait
mov
test
and
mov
mov
sbb
cs
test
js
push
sub
jp
arpl
jne
popa
xor
jp
mov
dec
inc
ss
loope
stc
neg
push
addb
adc
mov
loop
mov
or
cld
adc
rorb
and
push
data16
cmp
xchg
push
dec
or
push
lds
sbb
adc
mov
cmc
sbb
xchg
mul
lods
inc
int
lds
add
sarb
pop
movsb
dec
xrelease
xchg
jge
imul
cmp
jg
ficoml
aaa
fcmovb
out
popa
fidivrl
mov
bound
cwtl
or
sbbb
lods
sub
push
data16
sbb
je
pop
mov
mov
mov
stos
dec
jns
inc
mov
js
or
mov
sbb
cmp
push
popf
cmp
inc
mov
shr
repz
mov
xchg
add
fs
pop
rolb
sub
push
push
stc
sbb
cld
out
pusha
aaa
dec
in
lea
fcmovu
test
test
shlb
push
and
add
iret
scas
jbe
sbb
adc
cmpsb
inc
ds
jge
mov
cmp
inc
or
pushf
test
mov
mov
arpl
jge
push
into
mov
pop
lods
xchg
stos
das
mov
push
inc
xlat
xor
out
andl
or
mov
ja
inc
cmpsl
cmc
mull
or
dec
jp
lahf
xchg
imul
lea
pusha
mov
inc
sbb
dec
daa
leave
notl
mov
test
mov
push
loopne
pop
sub
mov
test
fiaddl
mov
test
push
loopne
mov
fsubl
test
jmp
xchg
mov
call
dec
jns
mov
add
pop
cmp
xchg
enter
sbb
addr16
hlt
ret
pop
js
ja
mov
mov
cmp
ja
repz
push
lods
mov
push
adc
jl
xchg
iret
dec
aas
daa
xor
add
cmpsl
sbb
icebp
mov
mov
jo
jbe
xorl
in
movsl
cmc
jnp
jp
inc
mov
xor
and
mov
mov
stc
lods
test
aam
stos
in
mov
sbb
or
or
dec
stos
or
andb
jle
mov
xorb
xchg
cmp
adc
push
mov
clc
mov
pop
xchg
and
jge
inc
and
cmp
pop
movb
xchg
and
add
mov
adc
lahf
dec
or
mov
mov
mov
ret
cmp
lods
pop
test
loop
jg
test
jno
arpl
jo
push
arpl
insb
cmp
cmp
mov
lahf
lret
js
pop
dec
dec
mov
or
inc
push
mov
push
xor
jge
imul
cmp
pop
inc
xorb
loopne
repnz
and
lcall
pop
sbb
mov
inc
cmp
sbb
jp
test
add
xchg
cmc
jo
inc
stc
cmpsl
pop
jp
std
in
cmp
ficoms
mov
pop
loope
cli
je
into
lcall
mov
inc
xchg
clc
sbb
mull
or
xchg
push
push
xor
mov
cmp
mov
loopne
fwait
cmp
push
pop
jg
push
sti
or
aad
pop
sbb
pop
or
xchg
mov
mov
fcom
in
test
cwtl
cli
adc
mov
xor
outsl
mov
fmuls
mov
dec
dec
scas
ret
inc
jl
cld
mov
aam
lahf
stc
xchg
ds
insl
inc
and
dec
cmp
cmp
xchg
lcall
add
scas
lea
aas
or
xlat
jp
cmp
in
sbbl
cmc
int3
mov
sub
lcall
mov
xchg
mov
adc
clc
cli
addr16
dec
jno
nop
mov
adc
loopne
push
cmp
mov
sub
test
jo
inc
das
js
rorl
add
pop
bound
push
js
nop
push
pusha
popf
out
push
andl
push
push
jecxz
std
sbb
arpl
call
imul
push
mov
xchg
sub
jae
outsb
test
mov
into
mov
sub
ja
ja
push
mov
dec
mov
int3
inc
arpl
pushf
sub
mov
push
add
or
pop
cltd
loopne
or
nop
or
xchg
push
mov
jp
sahf
pop
xor
push
ss
add
adc
cltd
xor
rcrl
pop
sahf
ja
push
lods
mov
or
es
cmp
jge
sti
mov
lahf
loopne
insl
mov
scas
cmp
test
mov
inc
fdiv
fst
sub
and
stos
ja
mov
sub
lahf
xlat
cmc
pop
sbb
fcoms
mov
push
inc
stos
push
or
push
sub
sub
xchg
imul
bnd
dec
fdivrs
mov
fiadds
xor
and
mov
adc
sub
sub
in
pop
imul
sbbb
xor
dec
ja
inc
sbb
pop
repz
das
ja
xchg
sub
cs
and
mull
xlat
jno
gs
inc
ficomps
dec
loope
ret
shlb
clc
or
jmp
clc
pop
push
dec
fdivs
inc
push
mov
xor
mov
loopne
sub
lods
dec
jb
sbb
ja
push
push
dec
lret
adc
cmp
sarl
dec
or
adc
mov
jns
pop
pop
test
pop
test
cmp
adc
enterw
dec
inc
pushf
mov
cmp
pop
leave
fsubrl
add
pop
dec
dec
test
mov
in
pop
mov
jle
std
pop
push
ja
test
outsl
mov
fdivl
jle
dec
pop
loope
cmp
jmp
rcrb
rorb
mov
pop
arpl
dec
out
xadd
scas
imull
and
iret
lcall
fdivp
pop
stos
jns
cmp
movsl
scas
cmp
cmp
clc
dec
sbb
xor
jbe
or
pushl
cmp
popa
xor
sbb
int
or
cmp
lods
pop
cmpsb
jae
loop
pop
out
outsw
mov
xchg
sub
dec
orb
mov
xchg
xchg
jae
out
into
loope
movsb
cmp
outsl
aas
jne
sub
cmc
add
cmpsb
hlt
push
call
jmp
mov
je
cmp
mov
imul
and
cli
test
movhps
sbb
out
out
inc
xchg
out
aam
cltd
mov
in
cmp
clc
or
cmp
xchg
cltd
sbb
push
sbb
das
loopne
jo
andb
aas
adc
jmp
in
adcl
cmp
push
dec
jge
jmp
xchg
adcl
xchg
push
cld
xor
inc
lret
mov
jns
pop
sbb
pop
or
pop
push
testl
popa
push
pop
notl
sub
lret
scas
faddl
mov
jmp
int3
in
push
jg
out
xchg
neg
lahf
mov
or
or
jns
jge
test
cmp
or
lods
dec
fdiv
or
adc
call
adc
daa
sub
mov
mov
addr16
ds
xor
scas
sub
pop
idivl
and
pop
mov
lods
cmp
jge
mov
mov
cmp
aas
testb
jp
paddd
loope
xchg
popa
lods
lods
faddl
ret
mov
add
ret
push
add
dec
mov
pop
mov
arpl
add
pop
aas
cmp
cmp
cmpl
into
push
dec
jae
ja
push
mov
int3
es
in
test
imul
scas
je
pavgw
push
movsl
xor
daa
jl
xchg
subl
arpl
ja
sub
push
dec
hlt
imul
jle
push
out
dec
jl
dec
aas
xchg
ret
cmp
xlat
mov
cmp
push
inc
or
pop
lods
and
jns
cmc
sbb
or
pop
cmpsl
jg
sti
xchg
ja
or
data16
lods
mov
add
imul
inc
scas
cmp
shrb
cmc
mov
dec
gs
dec
jbe
aas
stos
jmp
xor
shr
adc
out
aam
xor
cmp
pop
jg
imul
test
xchg
dec
add
sub
rcll
cld
sub
cmp
xchg
cmp
cmp
test
mov
mov
pop
jne
aam
sbb
shrd
mov
fs
sub
mov
mov
pop
inc
push
mov
and
into
pop
pusha
add
or
push
dec
mov
enter
sbb
test
out
scas
sarl
dec
mov
icebp
lret
sbbl
aad
lock
loope
cld
fdivr
dec
add
inc
dec
arpl
enter
mov
or
ja
arpl
cmp
add
scas
ja
clc
cmp
jg
ja
and
ss
cli
sarl
jmp
loopne
push
xchg
push
or
jp
sbb
xor
leave
inc
inc
test
and
pop
orb
or
sbb
mov
mov
push
js
and
dec
fldl
int
mov
dec
mov
lds
cmpsl
iret
dec
inc
inc
pop
shll
sbb
test
lea
fwait
sub
cmp
jp
sbb
les
mov
ss
movsb
mov
es
pop
pop
xchg
pop
cmpsl
mov
sbb
jmp
out
pop
das
adc
fwait
or
push
cmp
mov
fld
cmp
int3
pop
sbb
mov
cmp
xchg
adc
leave
mov
cmpb
dec
inc
cmpsb
cmc
cmpsl
sub
jae
or
inc
mov
cmp
cmp
inc
jg
sbb
dec
cmp
sbb
cmp
aas
out
movsb
js
mov
jg
add
dec
sarl
mov
lcall
fdiv
je
and
add
sub
cmpsl
inc
clc
mov
mov
fsts
pop
xchg
arpl
inc
sbb
pop
loopne
outsl
sub
pop
or
mov
lret
jle
sub
cmpsl
ss
push
fsubrl
sti
out
or
mov
pushf
pusha
pop
cmpsb
add
cli
je
jg
repnz
mov
jecxz
int3
mov
in
bnd
ja
push
test
imull
ja
mov
sbb
repz
pusha
in
mov
fcmovnb
or
out
scas
ljmp
iret
dec
add
sti
out
outsl
add
test
fsubs
xchg
lahf
mov
iret
mov
pop
mov
jb
jge
dec
sub
fdivrl
jl
inc
sti
into
pop
fidivl
or
jl
cmp
cmp
cmp
lods
sub
negb
lgs
je
ja
dec
inc
bound
sbb
sub
jp
mov
mov
scas
push
jle
dec
mov
mov
enter
ja
sbb
adc
lcall
pop
dec
jns
pop
lods
jl
sbbl
jge
or
jb
xor
js
call
inc
dec
out
pop
add
pop
jnp
xchg
cmp
pop
jg
test
sbb
and
js
xchg
dec
fcompl
sub
lretw
sbb
add
dec
pop
mov
lret
sahf
sub
cli
sbb
ret
dec
adc
pop
pop
out
xchg
incb
xchg
push
inc
pop
xor
push
ficomps
outsl
repz
ss
add
addl
sbb
mov
push
out
jle
les
sub
ljmp
adc
adc
cmp
add
pop
unpckhps
fistpl
out
iret
mov
sbb
loopne
fimull
add
setne
lret
mov
push
sbb
sbb
sub
subb
stc
adc
sbb
mov
sub
sbbb
imul
pop
mov
xchg
xchg
clc
add
pop
pop
inc
sub
imul
iret
inc
jno
mov
idiv
push
pop
test
sub
dec
cld
inc
inc
mull
into
pop
sbb
insl
js
loopne
mov
xlat
cmp
lret
sub
movsl
cltd
sbbb
add
cmp
pop
pop
jmp
dec
mov
lret
fsub
pop
jo
je
subl
js
mul
sub
adc
rcr
cmc
shlb
mov
xchg
jecxz
sbb
adc
sahf
push
cmp
repz
fcoml
or
pop
ret
push
fimuls
subl
jbe
movsb
mov
movsl
push
cmp
sbb
test
push
pop
arpl
mov
add
push
cmp
xchg
sti
xchg
fwait
sbb
shr
stc
xchg
cmp
fiadds
dec
nop
mov
fldcw
mov
xchg
pop
dec
dec
andb
and
xlat
out
out
and
push
out
xchg
insl
cmp
lcall
test
mov
leave
cmp
rcr
and
dec
out
mov
cs
js
lods
dec
mov
stos
loop
movsb
mov
lds
mov
inc
mov
daa
mov
mov
cmp
pop
daa
daa
rol
loopne
pop
xlat
sbb
cmp
jl
imul
lods
push
jbe
jb
fimull
std
pop
pop
pop
mov
dec
pop
in
mov
lods
mov
adc
or
mov
mov
mov
std
in
shl
dec
cld
or
neg
mov
push
in
adc
add
or
enter
jmp
ljmp
sub
jle
cmc
sub
scas
lret
test
pop
jns
mov
pop
jge
movaps
lods
cmp
je
es
dec
pop
mov
cmc
in
clc
dec
xor
jbe
stos
lods
ror
pop
sub
push
popf
add
sbb
push
pop
mov
jns
in
or
mull
or
loop
mov
jbe
arpl
cwtl
cmp
jne
adc
pushf
push
fiadds
mov
pop
aaa
xchg
out
leave
mov
lret
test
jp
jae
adc
adc
shrl
pop
push
cs
lret
test
cmp
and
sbb
cmp
mov
sbb
js
xchg
in
pop
cmp
insb
rcl
push
popf
movsl
fstl
xchg
fwait
or
mov
push
repnz
lcall
mov
jnp
jns
cmp
test
sbb
fwait
mov
fwait
ret
bound
mov
js
xchg
xchg
mov
cs
inc
xor
outsl
add
jle
or
jecxz
nop
cmpsl
push
adc
or
mov
test
xchg
push
cmp
and
or
xchg
test
jno
test
xor
ret
jmp
or
mov
aaa
mov
mov
xlat
adc
mov
mov
add
or
dec
push
cli
push
or
inc
pop
jbe
push
aam
add
test
adc
mov
or
pop
or
fstps
cmp
int3
pop
fsubp
push
push
sti
or
mov
jp
pop
out
fstpt
sbbl
cmpsb
add
cmp
js
dec
sub
je,pt
lock
pop
inc
xchg
xor
fsubrp
test
inc
cmp
sarb
insl
stos
rclb
mov
fisubrl
sbb
push
add
cmp
push
fmull
leave
sti
fisttps
mov
je
test
fwait
inc
adc
mov
addr16
out
arpl
rorb
xchg
adc
inc
inc
pop
sub
stc
and
cmp
lahf
mov
push
push
mov
mov
adc
lahf
push
dec
mov
pop
dec
repnz
in
adc
or
pop
inc
xor
sbb
add
ja
or
ja
rclb
es
jo
addr16
and
js
pop
mov
jnp
add
leave
mov
test
subl
sbb
mov
xorl
or
lret
cwtl
jg
sub
stc
arpl
xchg
rcrl
pop
pop
mov
das
inc
stos
test
jnp
mov
mov
addb
popa
addr16
xchg
test
fstpl
mov
xlat
xchg
cs
cmp
pop
jns
jnp
or
sbb
in
sbb
inc
fnstsw
rcll
icebp
inc
or
js
outsl
pop
push
pop
inc
es
ja
std
cmp
mov
inc
fwait
pop
andl
add
das
call
sbb
xchg
xchg
add
sbb
es
add
mov
imul
or
popa
cmp
inc
mov
fldcw
cltd
sbb
lcall
sbb
imul
mov
enter
inc
out
sbb
js
pop
xorl
pop
dec
imul
xchg
add
mov
rorl
push
fnstcw
addl
js
movsb
inc
scas
decb
mov
lea
es
es
push
mov
dec
sbb
dec
cmp
or
xchg
clc
pop
lods
and
mov
bound
xchg
jl
cmp
ja
push
in
into
shrl
push
mov
fwait
mov
mov
fdivrs
xchg
in
sti
pop
movsb
inc
dec
or
pop
mov
shrl
pop
sbb
pop
lahf
pop
or
mov
inc
pusha
clc
mov
or
or
and
loope
iret
fwait
push
push
inc
das
sub
pop
fwait
push
ljmp
jo
mov
cmp
mov
fwait
test
or
jg
or
add
test
mov
ret
inc
sahf
test
dec
ret
lret
add
ficompl
jle
sbb
mov
ljmp
fcmovne
mov
jl
push
pop
jg
sbb
les
push
out
cmp
xorb
sbb
movsb
xchg
push
cmp
adc
ds
insb
data16
dec
mov
scas
jmp
xor
xchg
adc
rclb
mov
repnz
xor
and
idivb
xor
sti
pushw
cmp
mov
lahf
xor
inc
dec
fiadds
or
ss
add
movsb
repz
add
xor
mov
roll
lea
adc
repnz
cmp
jmp
sbb
mov
gs
cmc
mov
mov
ja
add
lods
jle
inc
inc
pop
xlat
sbb
lcall
lahf
add
lret
mov
in
mov
or
dec
daa
xchg
and
incl
mov
shll
inc
cmp
rorl
adc
bound
mov
or
cmp
or
mov
jge
mov
gs
jnp
jle
adc
cmpsl
mov
jmp
sub
je
mov
lds
out
jnp
mov
sbbb
ret
dec
add
lds
testl
dec
inc
clc
lds
and
bound
ds
sbb
adc
mov
data16
dec
test
icebp
xor
or
mov
testl
jmp
mov
mov
cmp
out
jle
cmp
cltd
xor
ds
loope
dec
iret
jle,pn
arpl
stos
sbb
push
cmp
adc
cmp
subb
ret
push
sbb
lret
ss
sub
lret
test
out
orb
xor
adc
out
push
movsl
in
cmp
inc
mov
out
sub
jmp
cmp
xchg
jno
cmp
je
mov
sbb
add
push
dec
in
int3
jge
jbe
mov
test
add
ds
push
cwtl
push
into
fsubrl
xor
mov
add
pop
or
cmp
mov
mov
outsl
imul
push
xchg
cmp
and
std
cmc
insb
shll
ja
cmpsb
out
ds
cmpsl
rorb
sub
sbb
mov
mov
stos
testl
lods
rorl
data16
push
roll
xchg
or
test
add
gs
lock
mov
mov
push
xchg
outsl
es
push
inc
out
cld
jmp
idivl
jp
xchg
fmulp
sbb
mov
push
jbe
out
jne
popf
inc
out
insl
imul
cmp
jns
cmp
xchg
mov
pop
sbb
pop
adc
mov
mov
outsl
or
pushf
pop
orl
cs
push
jb
pop
sbb
jae
or
cmp
xor
push
jp
lcall
push
sbb
mov
mov
rcr
or
and
or
movsl
outsb
mov
sti
in
cmp
out
push
xchg
sbb
aas
cmp
out
dec
mov
dec
pop
jp
js
mov
xor
pop
jecxz
outsl
jns
xchg
out
addr16
fwait
cmp
sub
lret
dec
test
add
or
fs
fwait
and
push
repz
cwtl
push
data16
ja
push
popa
inc
inc
cmp
inc
insl
sbb
adcl
mov
add
or
jp
or
imul
mov
popa
stc
dec
jp
or
clc
adc
sub
jnp
test
inc
mov
cmp
loope
imul
insb
aaa
mov
ja
decb
mov
lods
test
cltd
addr16
jmp
ret
or
mov
std
xor
xchg
dec
xchg
inc
jnp
jne
jnp
pushf
jb
setp
pop
mov
data16
rorl
sbb
or
xchg
imul
push
pop
push
pop
and
or
mov
xchg
andl
jle
sbb
add
js
cmc
pop
test
inc
ss
js
jbe
scas
fnstcw
adc
lods
fnstenv
cmpsb
adc
pop
sbbl
adc
mov
mov
cmc
test
idiv
icebp
cmp
movl
lahf
sti
push
cmp
pusha
jmp
jg
add
sub
aam
inc
iret
jl
ss
test
out
pop
mov
loop
loope
mov
out
cwtl
insl
outsl
outsl
xchg
cmpsb
test
push
dec
inc
lcall
xchg
mov
shl
outsb
dec
or
leave
adc
sbb
sub
mov
imul
mov
lods
rolb
and
ss
outsb
push
jae
jns
mov
shll
pop
cmp
mov
sbb
jnp
rorb
sbb
xchg
out
sub
pop
sti
mov
or
ja
mov
lods
leave
lods
cwtl
movsl
fiadds
and
sbb
scas
pop
cs
out
sub
ret
sti
adc
pop
jnp
sbb
mov
adc
mov
jge
dec
fistpl
cmp
jp
leave
sbb
int3
cmp
js
cmc
push
push
mov
cmp
nop
push
imul
mov
incb
jae
inc
fcmovbe
out
int3
imul
cmp
adc
es
sub
lahf
push
imul
js
mov
push
pop
js
stc
jge
cli
mov
sbb
sti
stos
cmp
mov
movsb
sbb
mov
xor
fnstenv
mov
ds
mov
movsb
fs
push
out
aas
jge
sub
or
push
inc
aas
push
std
enter
jl
dec
xor
adc
sub
cmpsb
addr16
leavew
mov
dec
fcoml
mov
sahf
sar
ret
fcompl
jo
cltd
mov
push
lea
xchg
mov
mov
je
pop
push
mov
cmp
aam
lret
cmp
push
jp
xchg
cmc
call
mov
stc
add
push
das
or
enter
call
inc
fstpl
dec
add
test
cmc
add
lods
negb
lret
mov
outsb
cmp
popf
xor
sbb
xor
mov
out
adc
sub
out
test
test
mov
dec
insb
adc
cmp
mov
mov
adc
sub
test
dec
rolb
or
outsl
test
rorb
pop
sbb
cltd
out
mov
sarl
xlat
test
ret
mov
inc
insl
jo
lds
aaa
cmc
ja
pop
icebp
and
stc
stos
mov
add
out
in
pop
xchg
leave
pop
scas
dec
bound
or
ret
test
movsl
cmc
dec
scas
incl
xlat
test
loopne
push
sub
or
xor
inc
pop
or
add
test
fstpl
pop
loop
test
fwait
mov
stos
fisubrs
sbb
mov
push
jecxz
pop
scas
mov
mov
aaa
shl
incl
rcr
sbb
xor
cmpsb
ds
ret
flds
aad
or
out
fldcw
add
add
mov
pop
mov
adc
in
out
sbb
mov
adc
shll
sbb
sub
and
dec
jecxz
pusha
sbb
iret
cld
lock
cli
adc
xchg
sub
stc
lds
imul
sub
push
add
jnp
fs
fsubs
int3
dec
adc
test
cld
out
cmp
scas
fisttpl
daa
mov
in
push
pop
sbb
dec
sbb
xlat
js
or
jns
mov
movsb
pop
out
pop
xchg
cld
mov
cmp
mov
stc
test
jno
jl
jg
mov
sbb
into
mov
adc
xchg
adc
daa
scas
sti
sub
mov
lock
xchg
outsl
cmpsb
xchg
mov
pop
dec
clc
addr16
jle
popf
push
test
cmp
repz
pushf
cmp
dec
xchg
xchg
add
mov
inc
js
ret
inc
push
imul
or
inc
imul
test
add
jno
jl
mov
xchg
sub
fwait
test
cmp
mov
xor
mov
repnz
call
enter
jle
mov
and
xor
xchg
sbb
sti
cmpsl
adc
ja
test
adc
shrl
pop
sbb
or
or
bound
jae
push
dec
js
mov
imul
fadds
mov
test
inc
imul
popf
jno
enter
je
je
cmp
push
push
adc
cwtl
fistl
push
mov
dec
and
je
xchg
or
lods
subl
and
adc
jno
fwait
push
add
dec
int
jns
test
jne
rcl
jne
sbb
mov
fisttpll
cmp
cwtl
jg
dec
dec
sarb
xchg
mov
dec
mov
aaa
adc
mov
stc
ja
test
jmp
jo
inc
jae
push
pop
test
pop
lods
mov
jmp
pop
aas
xor
lahf
mov
pushf
cmpsb
mov
idivl
sub
xlat
insb
or
pop
test
orb
pop
ficompl
mov
mov
repz
test
xchg
dec
adc
out
inc
push
js
mov
stos
jle
mov
cmp
decl
incb
dec
sbb
mov
or
adc
push
std
loope
cmp
and
sbb
mov
ret
pushf
cmpsl
jb
or
xor
xchg
je
stc
imul
mov
dec
jge
xchg
mov
jns
jge
fmull
dec
cwtl
ret
test
mov
inc
sbb
push
mov
jmp
sbb
cld
ret
jge
lods
js
sub
out
cmp
inc
stos
inc
mov
jbe
lock
sbb
cmp
test
out
push
in
sub
incl
cmc
dec
jl
sti
js
mov
jns
out
int3
orl
jns
jle
rclb
lock
and
push
cmp
orl
pop
fildl
pop
movsb
and
pop
adc
cmp
out
xchg
sti
mov
jg
dec
pop
arpl
cwtl
jge,pn
out
sub
push
inc
jmp
arpl
or
cwtl
cmp
out
xchg
xor
jae
in
rol
and
and
push
lahf
lods
incb
aas
mov
mov
lock
or
jg
dec
mov
sarl
jo
mov
mov
cwtl
push
mov
jl
push
xchg
shll
cmpsl
repnz
mov
adc
fisubrs
cli
sahf
or
out
cmpsl
jnp
sbb
mov
shr
inc
mov
dec
pop
push
dec
jnp
xor
mov
mov
movsl
gs
cmp
jb
cmp
in
std
inc
adc
cwtl
aaa
inc
sbb
nop
lret
mov
push
dec
inc
jo
inc
lea
cmc
cmp
mov
mov
mov
cmc
mov
add
popf
push
rorl
rcrl
dec
jle
cmp
sbb
inc
pop
cmp
jmp
idiv
dec
mov
shl
jbe
adcb
negb
add
jp
adc
mov
cmp
stc
loope
aas
jp
jo
sub
ret
xor
fyl2xp1
bound
cli
movsb
jmp
sub
cltd
or
sti
out
lods
js
stos
adcl
stos
dec
js
push
testl
inc
sbb
cmp
enter
push
lea
jnp
popa
mov
cmp
stos
inc
xchg
pop
jmp
jecxz
jp
mov
insb
jae
push
xor
bound
pusha
call
gs
jmp
dec
sti
mov
or
push
or
pop
dec
into
xchg
stos
negl
movsl
cltd
or
sbb
stos
or
mov
or
sub
sbb
fsubrl
mov
insb
lds
mov
nop
mov
add
mov
and
ljmp
push
js
pop
mov
sbb
sbb
sub
push
pop
ror
subl
mov
jo
xchg
dec
fwait
adcb
and
push
pop
jp
mov
pop
hlt
jmp
jmp
js
pop
mov
pop
sbb
std
frstor
insb
arpl
xor
mov
jo
test
mov
mov
leave
jecxz
or
cld
adc
jmp
fisttpl
test
cmp
bound
repnz
jg
pop
xor
js
xchg
xor
inc
fdivrl
outsb
mov
pop
push
bnd
test
inc
popf
shrl
sbb
sti
jbe
pop
cmp
mov
mov
fisubrs
sbb
loopne
adcb
fwait
popl
jmp
ljmp
adc
jg
mov
cmp
inc
bound
cmp
xlat
adc
mov
jns
dec
or
repz
movb
sti
insb
aad
push
nop
aas
mov
mov
movsb
dec
rcrb
movsb
mov
pop
js
cmp
push
xchg
sub
in
xlat
mov
xchg
mov
cmp
sub
push
jns
jle
sbb
cmp
inc
sbb
jecxz
pop
sub
in
pop
mov
ss
mov
mov
cmp
test
sbb
inc
xchg
pop
out
xlat
xchg
daa
aad
pop
repz
in
push
loopne
fbstp
jmp
mov
lcall
hlt
xchg
sub
add
pop
out
add
ss
testb
inc
iret
sti
sbb
mov
dec
loope
mov
dec
fwait
ja
fnstcw
pushf
adc
pop
testl
inc
push
bound
jg
mov
pushf
mov
add
out
jg
xchg
inc
fstpt
pusha
out
or
mov
fistl
jle
dec
mov
mov
pop
cltd
imul
out
mov
test
loopne
sub
ds
xchg
dec
fistpl
cwtl
jmp
xor
xor
outsl
jl
test
add
in
scas
movb
ret
push
cmp
pop
inc
push
mov
popf
in
add
push
jne
push
jle
das
cwtl
cmpsl
test
pop
dec
mov
mov
cmpsb
mov
outsb
adc
or
xor
cmp
sub
pop
out
mov
sbb
loop
mov
mov
mov
push
dec
fs
cli
pop
in
pop
in
xor
mov
jp
jle
in
fiaddl
addr16
push
dec
cmpsb
ss
and
outsl
fimuls
aad
mov
cmp
mov
xor
outsb
cli
mov
jecxz
or
test
testl
mov
xchg
js
push
negl
pusha
sub
xlat
mov
xor
sbb
cpuid
cltd
jle
or
sbb
je
adc
sub
aad
jmp
adc
scas
pop
loop
orl
xchg
imul
mov
cltd
or
fcomps
pop
mov
mov
addr16
cmp
push
adc
out
sub
cli
jo
xor
fimull
xor
out
push
pop
pop
pushf
std
or
xlat
fs
stc
dec
inc
sbb
fldl
in
ror
lahf
lcall
lcall
add
mov
mov
aad
push
or
dec
inc
mov
daa
out
mul
sbb
xchg
mov
fucomp
inc
jp
inc
outsb
iret
in
cmpb
jns
pop
cmp
js
fldcw
push
rclb
repz
inc
inc
xor
jo
xchg
subps
cmpsl
sub
mov
sbb
iretw
inc
addr16
mov
sub
hlt
scas
xlat
js
popa
pushf
stc
mov
fdivrs
pop
and
jnp
cmc
sub
or
xchg
aaa
repz
enter
inc
push
xchg
out
pop
jecxz
test
int3
xchg
and
xchg
push
inc
or
fstps
sar
or
mov
jnp
cwtl
pop
add
dec
into
loop
push
jne
inc
add
push
jle
out
mov
pop
push
jecxz
stc
pop
push
and
mov
out
add
fstpt
dec
dec
daa
sub
cmpsl
sub
cmp
sahf
xlat
es
mov
mull
jg
movsl
dec
fwait
mov
iret
andb
sbb
add
fwait
mov
js
push
jns
add
or
push
mov
negb
clc
cmp
sub
cli
pop
stos
cmpb
mov
js
loop
dec
sbb
scas
sbb
jae
test
fs
gs
pushl
pop
mov
xchg
ss
or
in
mov
ja
or
mov
cmp
mov
add
js
mov
or
sub
nop
orb
jle
aad
cmp
jle
outsl
incb
cmp
subl
inc
push
xchg
test
and
push
mov
jecxz
or
cmp
ret
mov
js
xor
mov
lods
mov
xchg
dec
je
rcll
dec
mov
mov
lcall
jmp
test
jo
stos
in
test
push
je
test
test
jecxz
andb
aam
pop
pop
inc
push
dec
and
cmp
loop
jmp
ja
adc
int3
gs
jge
data16
sbb
stc
jne
and
fcomi
dec
cmp
or
xor
sub
aas
cmp
mov
shll
sub
cmp
dec
lock
xchg
pop
imul
mov
out
ljmp
and
lret
dec
lods
leavew
cltd
jle
mov
or
sti
jl
mov
mov
int
pusha
mov
mov
cmpb
aas
mov
and
mov
in
jnp
mov
mov
into
fidivs
cmp
lods
iret
mov
scas
movsb
inc
loope
call
mov
cli
mov
ret
mov
xchg
xchg
xor
and
sti
jg
arpl
jnp
inc
ret
jmp
push
xchg
sar
sbb
js
sahf
push
adc
jge
push
or
xchg
fst
cmpb
ret
xor
shlb
pop
jge
push
jnp
mov
popf
cwtl
mov
xchg
add
xchg
adcb
cs
lret
cmp
pop
mov
adc
fidivrl
and
scas
aas
add
or
aas
sbb
decb
lds
inc
adc
std
aas
adc
jg
jo
or
xor
mov
and
sbb
cmc
fdivrs
pop
xchg
mov
cmp
jg
pusha
pop
mov
adc
jg
aas
pop
cmc
mov
lret
cmpsl
orl
call
cmp
inc
outsb
iret
mov
aas
inc
lret
mov
out
ja,pt
fisubrl
cli
xchg
mov
iret
and
mov
jnp
stos
test
addr16
imul
adc
sbb
clc
ds
mov
mov
and
or
inc
jnp
call
pop
mov
or
lods
subl
mov
pop
mov
enter
dec
mov
lret
out
mov
push
pop
or
test
dec
mov
jmp
pop
inc
mov
js
inc
cmp
lods
stos
ja
gs
outsb
dec
push
ja
push
inc
inc
sbb
test
dec
dec
orb
xchg
inc
stos
mov
test
sub
iret
inc
insl
int3
mov
xor
jge
or
test
mov
jo
mov
mov
push
ljmp
lret
int3
sub
mov
mov
pusha
inc
jge
or
add
out
fidivrl
test
inc
push
cmp
xchg
sbb
or
sub
fistl
cmp
js
push
mov
ljmp
xchg
repz
dec
lea
cmp
out
test
fldt
clc
sbb
sub
arpl
push
jnp
jg
dec
cmp
pop
insb
lret
sub
dec
mov
jmp
pop
add
lea
lret
jp
cmp
mov
roll
cmp
adc
add
sbb
dec
jle
sbb
lret
in
jg
repnz
mov
cmpl
lahf
ret
mov
pop
lcall
nop
lahf
sahf
mov
mov
lcall
loop
dec
sub
test
iret
push
fildl
ret
stc
dec
aas
test
lcall
jle
shll
call
inc
lret
mov
add
cltd
test
shll
jl
ljmp
dec
mov
int
sti
dec
iret
rcr
adc
mov
or
dec
jmp
add
cltd
add
fidivrs
dec
pop
enter
cmp
je
jg
jl
out
ss
repz
std
pusha
mov
jmp
test
mov
js
cmp
jg
imul
jl
xchg
add
sbb
push
ret
jg
adc
mov
adc
mov
sub
sti
sbb
mov
adc
rclb
sbb
pop
imul
or
sgdtl
sub
add
mov
js
mov
idivl
cld
lods
fbld
scas
add
ret
mov
sti
jge
pop
pop
popl
xchg
mov
mov
xchg
scas
sbb
clc
or
push
mov
imull
push
adc
mov
or
mov
or
insl
xor
and
movsl
or
push
sbb
push
adc
ds
pop
xchg
push
mov
xor
mov
lods
pop
clc
test
rcrb
ds
xchg
mull
pushf
mov
negl
rolb
cmp
mov
lods
jp
fdivr
jecxz
ja
pop
xor
sub
cwtl
in
cmc
imul
jae
ja
adc
leave
jb
mov
dec
jmp
cmc
imul
jp
lods
popf
cli
lods
psubusw
pop
mov
lods
testl
clc
nop
hlt
xchg
sbb
sbb
icebp
ja
mov
sbb
insl
jle
dec
sbb
mov
cmp
cmp
xchg
sub
js
adc
rcll
mov
mov
lods
pushf
mov
adc
arpl
test
jnp
jnp
aad
dec
dec
vpmacssww
stos
jnp
cmp
sub
jbe
arpl
test
fwait
loope
leave
pop
ljmp
fcoms
xor
iret
inc
cmpsb
jp
dec
cmp
cmpsb
cmpsl
rclb
test
mov
inc
dec
mov
sti
dec
cmp
add
cmp
adcl
or
sbb
cmp
xchg
jg
inc
sub
xchg
sahf
fs
arpl
std
dec
push
jle
pusha
sbb
jb
cmp
leave
sub
adc
cmp
xor
inc
mov
test
mov
dec
mov
cmp
clc
push
test
dec
test
ds
add
mov
test
ljmp
jnp
test
outsl
and
ret
dec
xchg
sbb
aam
adc
xchg
insl
cmp
outsb
js
sub
cli
pop
iret
pop
mov
jno
sub
ds
add
mov
mov
jle
mov
mov
movsb
scas
sub
and
adc
xlat
adcl
jmp
dec
loopne
cmc
jno
popf
inc
or
iret
lods
lret
xchg
mov
dec
xor
shl
mov
mov
aaa
dec
hlt
jle
outsl
divb
nop
dec
cwtl
imul
cltd
hlt
fs
cmp
mov
jg
adc
insl
mov
imul
pop
or
jmp
out
shll
push
xchg
xchg
xchg
stos
leave
iret
or
inc
pop
xchg
mov
push
jg
lcall
sarb
sub
lret
xchg
jns
movl
pop
in
pop
pop
sti
outsl
test
push
cmpsb
mov
mov
loopne
xorb
jns
cmp
ja
add
fwait
or
sub
pop
dec
push
outsl
xor
cmovae
test
arpl
xor
cld
cmp
pop
dec
out
xchg
pop
mov
xor
mov
mov
push
mov
xchg
stos
mov
imul
sbb
mov
aaa
sbb
pop
pop
and
neg
cmp
cmp
sbb
dec
or
cmc
jo
mov
adc
mov
ljmp
mov
jne
test
push
mov
mov
cs
int
shll
or
sbb
inc
cmp
xchg
and
xchg
jo
lods
and
fs
mov
xor
dec
xchg
adc
aas
mov
add
jno
jle
mov
inc
cmp
aas
loope
cmp
push
fdivs
pop
daa
push
adc
dec
out
lcall
dec
jecxz
add
mov
fsubrl
pop
mov
std
bnd
test
sub
mov
es
mov
sbb
sbb
mov
or
cmp
add
pop
scas
dec
movzwl
fcomi
mov
mov
sbb
xchg
push
call
pop
call
jle
add
add
adc
pusha
xor
pop
fnstsw
insl
sbbb
add
cmovl
ja
mov
cmpsb
arpl
dec
lcall
sub
sub
ljmp
call
out
pop
cmpl
cmp
sti
jle
cmp
cmp
shlb
push
pop
fs
in
movsl
std
pop
cmp
adc
adc
inc
out
cwtl
gs
sbb
mov
mov
jne
loopne
icebp
dec
jae
push
xlat
cmc
add
dec
mov
lahf
sub
mov
push
cwtl
xchg
sub
ret
push
add
xor
out
fidivrs
ret
inc
fwait
mov
lock
sbb
pop
js
enter
outsb
fcoms
out
xor
add
cmp
pop
daa
or
in
xchg
ja
cmp
data16
data16
mov
fistpl
imul
xor
sub
inc
insl
fistpl
js
es
cmp
sbb
bound
inc
icebp
sarl
mov
mov
mov
ja
addr16
jmp
in
hlt
and
pop
leave
inc
das
add
mov
out
push
ja
mov
pop
pop
outsl
mov
in
add
mov
jae
xchg
out
rdmsr
cld
add
xchg
xchg
stos
push
leave
jle
fmuls
cmpsl
and
jge
cmpb
addr16
or
mov
lret
outsb
pop
ss
mov
xchg
loopne
mov
lock
mov
or
test
or
lahf
test
jnp
test
xchg
hlt
imul
outsb
mov
outsb
add
and
repz
into
xchg
adc
adc
xchg
es
test
fidivrs
jmp
ret
xchg
inc
jle
nop
pop
add
xchg
pop
cltd
ror
mov
cmc
sbb
into
inc
adcb
ds
fiadds
cmpsl
pop
addr16
ss
xchg
xchg
std
push
or
sbb
cmp
adc
xchg
insb
mov
out
xchg
jne
in
lret
shl
mov
dec
push
addr16
fisttpl
or
pop
mov
and
insb
cs
adc
pop
andl
inc
movsb
ds
in
js
mov
int3
mov
popf
adc
movsb
mov
jle
add
les
adc
cs
shr
jmp
pushf
xchg
inc
inc
cmp
test
inc
add
adc
aad
inc
xor
pop
pop
xchg
mov
imul
sbbb
adc
xchg
xchg
sbb
mov
or
or
sub
push
arpl
clc
sbb
add
mov
mov
add
dec
xlat
fnstcw
pop
ja
push
sbb
nop
lock
in
cmp
movsl
add
loop
out
sub
sbb
lds
arpl
sahf
mov
jb
and
add
and
add
popf
dec
mov
ds
stos
sbb
icebp
rcr
orb
dec
fwait
arpl
das
das
jmp
inc
mov
jae
jne
inc
and
xlat
ds
lret
daa
stos
outsl
je
mov
pop
out
jnp
addr16
arpl
daa
jg
push
dec
xchg
dec
iret
and
pop
or
sbb
mov
mov
mov
or
addr16
jmp
xchg
fstpl
fs
scas
push
jbe
mov
inc
or
xchg
mov
stos
sbb
les
sbb
or
pop
dec
jg
mov
fwait
xlat
loope
xchg
jno
js
jns
cmp
addr16
dec
stc
jle
jl
inc
aas
cmp
adc
xchg
dec
inc
mov
dec
enter
cmp
rcrb
pop
test
imul
add
cmp
xor
push
cld
clc
dec
cmp
iret
fdivrp
mulb
inc
dec
pop
mov
mov
jl
es
cltd
adc
test
dec
mov
sub
lret
fmuls
xchg
mov
add
sbb
xchg
iret
sbb
xorb
jnp
push
cmp
addr16
xor
aam
shll
out
cmp
add
addl
pusha
mov
push
inc
add
mov
test
inc
xchg
sahf
js
mov
popf
pop
mov
mov
push
sub
mov
xorb
xchg
loop
lcall
aam
mov
pop
add
test
fdivs
push
jl
imul
xchg
imul
sbb
cmp
push
pushl
out
pop
or
cmp
clc
jae
xor
ja
xchg
dec
insb
push
sub
fldl
mov
call
mov
lret
add
dec
xor
cwtl
popa
stos
loopne
pop
ret
cwtl
xor
and
xchg
filds
adc
fimuls
cmpsl
mov
cmp
cwtl
out
repz
data16
jae
mov
addl
lds
ds
gs
sub
idivl
cmp
call
mov
push
jmp
mov
sub
fisttps
scas
cs
hlt
push
arpl
cmpsb
add
xchg
add
pextrw
add
cld
jg
scas
insb
icebp
inc
xor
mov
rorl
ja
and
es
ja
test
nop
int
mov
mov
imul
mov
xchg
mov
aam
inc
adc
cmp
test
mov
addr16
fdivr
outsl
cmp
imull
popa
popa
lods
push
pop
leave
cmp
mov
inc
pop
cmp
lea
ja
je
cmp
mov
loopne
sub
mov
pop
mov
jnp
fs
mov
cmpsl
pushl
jmp
cmp
mov
mov
mov
xor
push
sbb
fcoml
cmovae
gs
fdivl
push
sti
xchg
mov
dec
fdivrl
ljmp
movsl
mov
mov
dec
aas
cltd
jg
ja
mov
xchg
sub
dec
lods
mov
push
pop
fmulp
jp
mov
fwait
into
dec
aam
lea
push
and
push
int3
popf
mov
mov
adc
and
or
sub
lods
mov
sarl
sti
sti
sbb
xchg
dec
mov
sbb
dec
orl
test
aam
sub
rclb
mov
mov
in
testb
out
shrl
and
push
ljmp
fwait
scas
pop
test
jg
shr
mov
test
inc
push
not
sbb
out
dec
push
jge
inc
mov
ficoms
cmp
out
inc
sbb
push
or
jp
dec
cmp
out
loope
subl
jmp
testl
jmp
js
loopne
pop
popf
cltd
test
cltd
dec
clc
in
jecxz
jmp
pop
jnp
sbb
jg
das
leave
arpl
aam
jg
xor
mov
sbb
addl
mov
or
stos
mov
test
mov
jnp
xor
test
jnp
pop
sbb
pmullw
jp
loope
cmpsb
sub
pop
xlat
sbb
or
mov
lret
xor
push
inc
das
imul
dec
ljmp
and
mov
add
roll
in
sbb
hlt
stos
mov
aas
insb
cmpb
cmp
movsl
rcrb
outsl
cltd
leave
andb
cmp
scas
push
add
pop
cmpsb
std
pop
sbb
or
sub
rorl
xchg
inc
mov
stc
rsqrtps
insb
push
xor
mov
inc
aas
inc
cmp
jmp
outsl
mov
in
in
addl
mov
cmp
int3
sbb
push
iret
fucomi
sub
jb
xchg
pop
add
scas
mov
mov
adc
mov
pop
rep
jp
iret
mov
cmp
add
mov
dec
insb
add
cmp
ja
ja
mov
mull
mov
mov
mov
pop
sbb
push
xchg
out
xchg
pop
fwait
mov
or
aaa
andl
pop
dec
cmc
inc
ret
cmp
test
jo
movsl
dec
loopne
lods
les
adc
outsb
dec
jae
cmp
sub
push
aas
adcl
jo
push
mov
imul
popf
xchg
js
inc
xlat
mov
aaa
xchg
ds
lds
ljmp
dec
lods
js
adc
sbb
stc
mov
jns
add
sbb
jae
xor
push
ja
add
mov
jl
mov
mov
dec
scas
push
cmp
ja
mov
pop
push
push
pop
sbb
or
ljmp
mov
cwtl
and
cmp
add
outsl
jno
loopne
ds
push
imul
lds
out
je
add
cwtl
mulb
fimuls
sbb
test
pop
sub
dec
inc
repnz
repnz
pop
pextrw
add
mov
cmpsl
and
mov
pop
fdivrl
sbb
sbb
stos
mov
cld
adc
dec
fildl
jl
sti
or
lret
out
scas
dec
inc
mov
jg
addr16
and
insl
sub
clc
inc
inc
push
jmp
imull
or
mov
jnp
fisttps
or
mov
negl
cmp
decl
lds
jns
or
and
test
inc
inc
lret
cmpsl
jg
lret
arpl
ljmp
push
inc
jb
pop
pop
sub
xlat
adc
inc
popa
rcll
jae
dec
ja
adc
jb
imul
push
mov
xor
inc
cld
sahf
adc
cmp
arpl
sub
pop
sbb
rorl
mov
popa
movsl
or
fst
shrl
jge
sbb
jmp
xchg
aad
jnp
in
mov
lock
or
jnp
cmp
sarl
or
dec
mov
aam
stos
push
imul
cmpl
fs
mul
leave
mov
push
into
std
mov
cmp
shr
mov
xchg
fstp
testb
into
mov
push
or
xchg
iret
mov
xor
les
fldcw
cs
in
mov
mov
or
ja
iret
jmp
or
add
pop
cmp
ds
sub
sahf
mov
inc
daa
rcll
xchg
jl
js
ficoml
fcomps
ljmp
add
popf
mov
int
fistpll
sbb
pop
sbb
jmp
das
or
test
sti
cmp
iret
out
mov
push
jne
aas
repz
js
fcomps
xchg
addr16
inc
leave
jne
ljmp
jns
jns
mov
movsl
pop
ret
jecxz
sbb
cmp
pop
int3
jmp
iret
ja
pop
add
stc
sbb
pop
sarl
add
loopne
inc
test
in
push
mov
decl
aas
jmp
push
cwtl
add
enter
adc
mov
push
scas
rcll
les
js
mov
mov
jno
testl
jle
sbb
or
test
test
and
xor
and
movsl
mov
insb
and
mov
mov
xchg
xchg
pop
lahf
in
or
out
dec
int3
negb
push
inc
sbb
into
shll
arpl
das
xchg
jno
push
cmpps
mov
pusha
mov
add
cmp
sub
jle
shl
movsb
mov
ljmp
aas
and
mov
inc
mov
sti
jmp
andb
aas
push
js
insb
cmc
pop
cwtl
aas
mov
out
sub
fimull
cs
aam
cmp
inc
enter
in
cmp
insb
mov
mov
sbb
pusha
mov
icebp
jl
add
xor
test
ja
xlat
inc
jmp
stc
loop
repz
negb
jnp
mov
xchg
jb
xor
sub
lods
adcb
out
cmp
cmp
or
sub
dec
mov
cwtl
leave
test
setne
xlat
sbb
int3
sar
fadds
sbb
subl
xchg
xchg
xchg
int3
pop
jo
adc
sbb
inc
stc
sub
stos
fstpt
lea
sub
dec
cmp
sbb
je
push
ja
cmp
rorl
testl
mov
rclb
gs
cli
movsl
pop
pushf
add
negl
push
sub
test
or
popf
stc
sbb
sbb
sbb
inc
adc
outsb
jnp
int
dec
cmp
add
jmp
test
cmp
xor
push
pop
in
les
fdiv
dec
jmp
cmp
and
lds
cmc
dec
xlat
lret
dec
cmpsl
cmp
mov
inc
test
inc
popf
sar
sbb
dec
push
cmpsl
test
dec
ret
sarl
psubd
pop
and
xchg
ret
cmpsl
inc
inc
flds
mov
pop
xchg
xorl
or
out
mov
out
sbb
in
jno
cmp
dec
push
jns
inc
mulb
jns
mov
jle
sub
inc
xchg
pop
push
inc
push
cmp
adc
das
push
sub
dec
nop
inc
mov
rorb
jp
cwtl
jl
sahf
mov
cmp
cli
ljmp
fcmovbe
fdivrl
fisttps
pop
outsb
pop
sub
push
pop
cwtl
inc
pop
xchg
fisttpll
cmp
bound
shrb
and
call
sti
or
and
ljmp
jle
ds
lret
xchg
sbb
cld
rdmsr
mov
xchg
mov
sub
arpl
jp
test
out
push
and
push
mov
mov
test
mov
outsl
movsb
or
pop
test
in
test
sub
inc
mov
lcall
js
outsb
in
lock
sub
mov
leave
js
adc
daa
cltd
adc
or
imul
mov
xchg
cmpsb
xor
fcompl
sbb
jbe
or
cmp
push
fidivs
cmp
cmp
or
and
push
test
cmc
fdivrs
cwtl
inc
inc
pop
dec
xor
adc
js
push
test
jl
pop
cmpsl
xor
fldl
push
xor
or
movsb
and
test
jp
arpl
xchg
pop
cmc
cwtl
cmp
pop
sar
pop
sbb
cld
into
test
int3
pusha
adc
pop
ds
mov
or
xchg
jo
mov
jecxz
fdivrp
mov
inc
fwait
xchg
jo
dec
fs
xlat
iret
in
pop
lahf
clc
xchg
push
loope
int3
or
fsubrl
call
popf
pusha
stos
out
fmuls
push
inc
bnd
jg
sbbl
add
fildll
int
rorb
mov
sbb
jl
push
outsl
mov
sub
lret
dec
push
push
mov
xchg
push
roll
sti
jae
lret
xchg
out
inc
dec
jl
and
push
pop
or
mov
out
ljmp
jecxz
jns
pop
lret
dec
stc
cmp
int3
jle
out
test
movsl
adc
fmull
xor
push
mov
insb
fistl
and
jns
cmp
arpl
or
mov
sub
pop
xor
jnp
xor
lods
out
xor
inc
inc
xor
test
jg
out
filds
testb
mov
pop
jp
addr16
cmp
cmp
rcll
in
cli
mov
or
inc
bound
xchg
sarb
sbb
push
call
sbb
insb
mov
mov
add
or
xchg
mov
arpl
shrl
pop
out
popf
ret
mov
insb
icebp
stos
xor
test
cmpsb
fsubr
js
fcom
inc
pop
out
cmpb
xor
dec
jmp
not
push
mov
pop
popa
or
jns
pop
int3
or
ret
test
xchg
jnp
cmp
xchg
jae
cmp
push
mov
addl
xchg
inc
mov
jmp
dec
sub
pop
sub
shrb
xor
loope
xor
add
fdivl
xchg
or
mov
cmp
lcall
jmp
adc
aad
cli
xchg
mov
cli
push
sbb
pop
test
mov
flds
testb
in
cvtpi2ps
mov
outsl
sbb
cmp
push
pop
and
jae
mov
cmp
dec
sarb
xchg
dec
test
jle
cltd
xor
insb
out
int
repz
dec
cmp
mov
mov
sbb
xchg
lock
scas
pop
and
cmpsb
add
imul
cs
xchg
mov
repnz
lods
jnp
aad
cmp
xchg
inc
out
sbb
xor
mov
cmp
rorl
pop
mov
xor
out
jnp
mov
gs
cli
addr16
movsb
repnz
call
jnp
mov
dec
imul
pop
jns
jns
adc
cmp
jecxz
dec
loopne
lea
mov
test
je
xor
jl
xchg
jns
lds
push
adc
lods
inc
mov
jecxz
dec
push
sti
fucomi
leave
jnp
cltd
iret
inc
cmpsl
out
mov
pop
push
adc
add
inc
mov
or
jg
imul
mov
js
cmpb
loop
lea
xchg
arpl
int
push
int3
mov
cwtl
adc
mov
sbb
loope
into
xchg
xchg
imul
sar
data16
xchg
les
mov
xlat
insb
movsl
pop
shrb
mov
idivl
repnz
subl
aam
or
jmp
xchg
xchg
popa
sbb
cld
imul
test
jg
or
pop
jle
push
lcall
test
adc
mov
xchg
cmp
mov
sub
fwait
and
stos
insb
rcrb
in
jnp
insb
and
jo
xor
pop
iret
pusha
mov
cmp
mov
ret
movsb
jge
imul
adc
add
push
sub
inc
test
fs
leave
jbe,pn
and
xchg
mov
pop
mov
mov
ss
sub
cmp
mov
dec
xchg
adc
es
mov
mov
jns,pn
out
add
pop
adc
imul
pop
inc
decb
mov
mov
xchg
js
lds
or
cmpsl
sbb
iret
sub
adc
idivl
mov
sub
mov
mov
daa
test
or
cmp
shrb
loopne
inc
or
push
cmc
cmc
inc
xor
push
dec
mov
dec
add
xor
add
and
cltd
xchg
fiadds
jge
js
xchg
sub
cmp
scas
adc
or
mov
mov
and
lret
jmp
cmp
shlb
mov
mov
nop
adc
mov
adcl
push
or
dec
sub
push
icebp
sbb
push
xlat
test
mov
jnp
pop
dec
mov
jo
lret
ja
ret
test
nop
mov
pop
add
dec
insl
ja
push
sub
ds
aas
std
ljmp
mov
or
cmc
or
inc
xor
fs
outsb
sbb
lods
pusha
sbb
mov
pop
mov
add
pusha
mov
dec
mull
popa
std
sbb
loope
inc
enter
aam
js
call
mov
mov
test
jl
mov
push
mov
mov
movsl
mov
stos
imul
rol
mov
lea
popf
neg
and
addr16
push
pop
mov
push
test
nop
or
dec
push
mov
xlat
sahf
xchg
cmp
and
adc
push
cwtl
and
test
mov
lret
add
adc
xchg
or
or
jg
fists
jne
pop
cmp
in
repz
mov
or
pop
cmpsl
push
or
or
mov
ss
sbb
push
mov
mov
call
dec
js
shr
mov
cmpsl
pushf
imul
enter
repz
push
in
js
repz
inc
wbinvd
pop
push
sub
cld
stos
sbb
sbb
icebp
cmp
push
test
fwait
mov
ljmp
pop
jp
addr16
fwait
mov
fdivl
call
inc
jecxz
je
or
pop
mov
sbb
or
arpl
mov
jmp
adc
push
sub
or
rcrb
lcall
addb
andb
xchg
test
jns
xchg
out
js
repnz
jmp
adc
loopne
sub
or
mov
fs
loopne
into
xchg
nop
dec
pop
ljmp
int3
out
jge
call
dec
sub
cmp
sbb
mov
out
aam
mov
sti
xchg
xor
add
add
xor
lret
es
ja
ja
lahf
pop
pop
mov
in
negl
hlt
push
xchg
test
es
add
jle
sub
pop
dec
mov
sub
dec
mov
idivb
mov
outsl
mov
jle
out
or
into
jge
mov
insb
sbb
mov
lods
mov
adc
xchg
jnp
add
popa
and
xor
mov
lods
mov
ja
pop
out
aas
imul
ss
xlat
sbb
outsb
or
dec
and
rcr
clc
inc
insb
es
add
pop
xor
or
mov
test
sub
out
cmp
mov
mov
xor
fcoms
lds
ljmp
jle
shll
jl
gs
mov
jmp
insb
movsb
std
mov
fcomps
xor
jmp
std
jns
push
mov
mov
cld
fsubl
aad
adc
add
push
pop
outsb
ljmp
aam
xchg
test
in
push
test
cmpsb
mov
sbb
cmp
push
sub
js
repz
inc
clc
lret
and
dec
pop
out
fidivrs
fisubs
call
sahf
hlt
jge
sbb
xchg
dec
pusha
loope
xchg
push
jmp
aaa
adcl
dec
pop
and
sub
std
imul
imul
push
dec
addr16
adc
sub
and
push
sarb
ficoms
xor
add
icebp
jle
femms
cmp
push
test
pop
cmp
lock
cmp
test
cmpl
pop
into
and
nop
aad
push
cmp
jp
cmp
inc
jmp
test
push
xor
arpl
pop
jns
mov
out
adc
mov
xchg
add
or
mov
shl
pop
sub
xchg
or
push
mov
dec
sti
test
int3
into
cmp
inc
or
scas
ja
and
push
mov
iret
cmp
shl
cmp
adc
fsubl
data16
dec
fistl
push
sub
sbb
xchg
sbb
xor
rclb
iret
or
and
add
dec
in
cmc
mov
push
jns
inc
rcll
xlat
add
js
test
jg
push
add
popf
dec
pop
or
push
fsubs
out
mov
mov
sub
outsl
push
sbb
cmp
adc
xor
fisttpl
xchg
negl
mov
movsl
lods
jbe
jnp
mov
sahf
pop
jmp
jns
and
cmp
dec
cmp
into
fstpl
push
sbb
in
pop
ja
and
sbb
sub
mov
loop
lret
push
sbb
jns
outsb
mov
mov
lcallw
dec
or
int3
ret
dec
add
push
push
dec
mov
stc
sub
sbb
jge
mov
ds
es
xchg
pushf
mov
dec
adc
or
rolb
test
js
in
mov
ss
and
pop
ds
push
push
scas
lcall
jp
push
ja
push
jg
cmp
std
test
fwait
insb
adc
push
mov
test
lea
cli
out
dec
xor
pop
loopne
sub
clc
mov
mov
gs
push
mov
mov
push
ja,pt
mov
pop
cwtl
jno
out
sarb
mov
push
inc
js
cltd
mov
imul
or
outsl
dec
cmp
xchg
outsl
icebp
sbb
ds
cmp
stc
mov
mov
scas
cmp
push
sbb
jl
out
imul
inc
jmp
les
je
or
enter
inc
inc
sti
cld
in
pop
ja
in
cmp
pop
outsb
adc
popa
stos
dec
out
lahf
mov
ja
sbb
lods
pop
out
push
addr16
lods
inc
jge
sub
jle
jle
jnp
push
mov
mov
cld
fstpt
sub
neg
add
jmp
sbb
ja
frstor
iret
das
xchg
or
movsb
xchg
xchg
pushf
mov
dec
int3
in
lret
and
mov
sti
imul
xor
popf
cs
mov
mov
mov
mov
dec
xchg
jb
and
sbb
sbb
inc
pop
dec
mov
sbb
ss
shrb
jle
pop
inc
hlt
dec
daa
adc
add
dec
stos
cmp
inc
xchg
and
in
jbe
pop
jl
jge
xor
je
jmp
icebp
push
push
cmpsl
sub
add
mov
mov
cmp
push
or
data16
mov
in
fyl2xp1
cltd
mov
std
pop
ss
fstpt
ret
in
clc
fs
fldt
pusha
movsb
cltd
jo
andb
or
cli
sbb
jnp
push
jnp
bound
or
dec
mov
sbb
sbb
stc
test
cmp
adc
movsb
sub
adc
insb
or
lahf
jo
push
mov
fcompl
leave
or
add
jp
sbb
or
hlt
push
fnstsw
jns
ja
cmc
sub
leave
lahf
mov
inc
sbb
sbb
jnp
fadd
cltd
adc
dec
sub
push
mov
out
ss
popw
jnp
add
pop
adc
mov
into
jne
clc
xchg
icebp
mov
cmc
dec
mov
shlb
jmp
mov
cs
mov
sbb
aas
popa
mov
mov
mov
mov
hlt
mov
cmp
mov
flds
mov
out
sbb
mov
or
dec
mov
sbb
mov
or
cwtl
jbe
xor
sbb
out
lock
js
sbb
fwait
mov
js
or
cld
cld
arpl
iret
out
les
fs
jno
pop
addr16
in
outsb
push
sub
pushf
inc
mov
pop
and
jp
mov
cmp
sbb
xchg
xchg
stc
adc
dec
adc
test
jmp
xchg
push
mov
repz
inc
push
jnp
sbb
pop
sub
sub
push
xchg
out
stos
push
sbb
sar
mov
push
mov
or
or
stc
and
xor
out
jo
lods
push
push
cmpsb
xchg
insb
sbb
pop
out
cmp
mov
and
sbb
nop
push
inc
push
mov
lea
jmp
bound
and
incb
addl
negb
popf
jmp
or
test
ljmp
xchg
dec
out
imul
add
cld
arpl
mov
js
sub
add
or
mov
cmp
jg
jne
pop
jle
popf
clc
jg
mov
cmp
cmpl
fistpl
or
mov
sbb
fmull
adc
sbb
idivb
push
pop
xchg
jns
push
sbb
cmpsl
cmpsl
imul
xchg
mov
sub
xchg
cmp
inc
sbb
xchg
sbb
xchg
adc
insl
adc
dec
movsl
jle
sbb
dec
mov
inc
dec
mov
clc
push
movsb
cmp
cmpb
or
mov
mov
inc
jmp
out
sbb
adc
jmp
jmp
xchg
mov
sbb
mov
dec
dec
in
inc
test
fstp
mov
notb
lods
test
inc
mov
fs
loop
xor
mov
fwait
js
jl
in
add
nop
fwait
adc
mov
int3
and
cmp
jl
insl
xlat
pop
push
dec
mov
sahf
fs
mov
loopne
sub
sub
xchg
fdivl
jbe
mov
or
xor
ljmp
rcrb
inc
cmpsl
clc
add
mov
sbb
popf
add
and
fstps
jnp
addb
subl
xor
sbb
mov
sbb
sbb
pop
test
jnp,pn
jne
cmp
cltd
jg
xchg
and
jl
iret
in
leave
sbb
add
add
sarl
daa
cmp
mov
mov
fwait
rcll
or
push
mov
addb
stc
jo
and
mov
lods
fildl
mov
dec
pushf
cmp
xchg
mov
test
or
fldl
enter
jge
mov
mov
inc
testl
pop
xchg
and
jge,pn
xor
dec
test
imul
insl
mov
sub
add
loopne
negb
dec
mov
mov
mov
out
out
js
and
or
pop
dec
fmulp
jle
push
popa
mov
fsubrl
mov
sub
mov
dec
and
sub
mov
cli
lahf
push
xlat
sbb
fiaddl
out
sarl
or
xor
in
mov
mov
pop
mov
mov
mov
push
jge
jae
dec
push
sub
mov
mov
xchg
add
ljmp
sbb
xor
pusha
pusha
icebp
xchg
add
call
xchg
add
ret
mov
mov
inc
ror
nop
fwait
clc
dec
jnp
or
cmp
mov
dec
and
aad
adc
fwait
add
or
sbbb
jmp
and
inc
sub
add
and
xor
imul
jle
pop
dec
loop
aad
sbb
add
jp
iret
cli
roll
addr16
lret
adc
add
cs
outsl
test
out
rol
mov
add
or
mov
adc
int
lret
mov
pusha
fsubl
mov
mov
pop
lcall
into
fiadds
xor
out
jle
or
jmp
dec
mul
mov
cmpsb
icebp
xchg
dec
mull
mov
pop
cmp
mov
mov
leave
cmp
cmp
shrb
aas
xor
cmp
js
movsb
cmpsb
push
jbe
dec
xor
xchg
xchg
mov
popa
push
sbb
mov
jg
ficomps
cmp
sbb
aaa
aad
push
push
push
jge
xchg
jle
mov
out
sbb
jmp
std
mov
xchg
push
push
sbb
shrb
jle
mov
shll
nop
testl
ja
iret
clc
shrl
imul
test
out
repz
push
fidivs
es
mov
add
mov
in
in
cmp
sbb
mov
and
mov
or
add
loope
sbb
cmp
mov
scas
movb
mov
mov
out
sbb
ficomps
cmp
fs
sbb
mov
jo
in
ja
mov
ljmp
test
dec
push
pop
les
pushf
lock
rcrb
cs
cs
mov
ljmp
jp
ss
and
push
mov
test
dec
push
daa
xchg
xchg
lock
and
xlat
jp
pop
sti
popf
pop
and
mov
sbb
shl
out
mov
addl
scas
movsl
sub
jle
out
mov
incb
sub
or
jmp
nop
dec
out
inc
mov
es
out
cmpl
mov
push
mov
je
pop
cmp
dec
pop
cmp
repz
ret
ss
test
test
in
sub
inc
cmpl
clc
lods
fs
sarl
insb
sti
cmpl
xchg
ljmp
std
xchg
insb
insb
add
idiv
in
add
paddsb
add
je
sbb
scas
sbb
xchg
insb
int3
mov
test
mov
enter
popf
mov
mov
pop
jb
sbb
cvtpi2ps
mov
dec
insb
out
adc
outsl
push
xchg
lods
add
bound
mov
out
clc
sbb
push
test
mov
sarl
addr16
xchg
xor
and
leave
sub
push
mov
mov
jmp
aad
nop
mov
pop
ret
add
mov
push
sbb
loope
push
mov
addl
cmp
lds
push
mov
mov
add
mov
cmp
mov
insb
add
jno
lahf
mov
and
pop
cmp
sbb
jnp
cmp
push
out
mov
loop
out
cmp
into
dec
pop
ja
popa
mov
cld
inc
cmp
sbb
iret
fistl
mov
test
dec
cmc
mov
inc
pop
std
lea
adc
loop
ljmp
pop
fwait
or
call
lahf
mov
ret
addl
addl
mov
inc
mov
sbb
cmp
jl
shll
test
aas
push
cmp
addr16
jg
inc
fldcw
inc
mov
out
push
jnp
sbb
push
jmp
adc
lods
outsl
es
fisttps
jns
inc
sar
pop
pop
js
jo
pop
sub
xchg
je
sbb
dec
sub
movsl
inc
test
jo
test
mov
cmp
pop
push
nop
iret
jb
cmp
jne
or
xchg
push
aam
orl
aam
xchg
arpl
add
sbb
call
sbb
pop
andl
test
les
push
iret
jmp
jb
inc
sub
jl
sub
sti
push
jp
ljmp
lcall
add
sbbb
inc
rorb
adc
fidivl
scas
call
mov
push
lods
test
xlat
popf
movsb
cli
daa
ds
pop
cmp
cmp
testl
cmp
jae
out
cmp
inc
test
mov
dec
push
push
mov
insl
loopne
inc
dec
inc
aaa
push
les
stc
flds
push
js
and
pop
sbbb
aaa
lret
adc
push
mov
test
mov
sbb
pop
pop
pminsw
lret
test
and
mull
scas
cmp
jmp
inc
mov
stc
sub
pop
imul
jnp
inc
dec
mov
sub
mov
imul
nop
xchg
cmp
add
jnp
cmc
dec
scas
adc
jns
pop
push
push
xchg
mov
cli
add
mov
out
jp
stos
xchg
sbb
mov
sbb
jmp
or
dec
stos
scas
mov
sbb
mov
test
arpl
sub
sbb
test
cmp
inc
mov
and
mov
jecxz
repnz
lret
shl
mov
push
inc
mov
pop
popa
pop
stos
pop
pushf
or
in
fdivrp
inc
pusha
mov
pop
inc
add
push
sub
stc
dec
xchg
daa
jg
sub
lahf
sbb
sbb
pop
ljmp
lret
lds
inc
testl
loope
sbb
outsl
lcall
jg
pusha
lcall
xchg
ret
faddp
js
lahf
negb
pop
jle
mov
cmc
or
frstor
test
std
sarb
or
push
test
enter
inc
aas
cmc
sbb
cmp
push
jno
add
cwtl
adc
lahf
addr16
iret
insb
std
repz
pop
xor
dec
loope
lcall
inc
xlat
jl
jmp
das
std
push
xchg
stos
cmp
add
gs
outsl
ja
scas
or
and
je
jp
sbb
sbb
iret
adc
test
xorl
test
cmc
sbb
jl
mov
jmp
out
addl
insb
jnp
inc
iret
ja
pop
mov
mov
sti
jg
jne
test
int
bound
inc
daa
jl
cmp
jg
jb
cmp
jge
sar
or
jmp
ds
out
stos
insl
insb
test
xchg
cwtl
jbe
add
xor
xchg
movsl
lea
inc
fcomip
add
jae
cmp
push
lods
in
int3
adc
inc
ja
pmaxub
push
mov
lods
ss
push
add
enter
fdivrs
rcrl
gs
pop
iret
inc
dec
jns
or
adc
scas
push
cmc
dec
jne
cmp
jle
mov
jge
test
inc
add
repz
mov
roll
gs
cwtl
sub
cmp
addr16
sbb
stos
andl
add
mov
movsb
rorb
jge
mov
mov
stos
inc
mov
push
mov
adc
fwait
out
insl
xchg
lods
pop
loope
mov
pop
jp
sarb
loopne
dec
mov
lret
scas
js
mov
jg
xchg
pop
jo
jle
and
imul
in
cld
fsubl
loope
jp
or
or
test
sbb
cmpl
js
xchg
rcrl
lods
xchg
shrl
mov
fistl
mov
nop
movsl
test
in
rorb
cmp
mov
popa
dec
cmc
mov
sarb
cmp
cmp
mov
cmp
hlt
pushf
insb
xor
icebp
pop
add
jle
jnp
icebp
repz
js
inc
xchg
jns
mov
mov
jbe
xchg
inc
cmp
dec
mov
or
push
into
push
cmp
or
mov
push
aaa
call
neg
cmp
addr16
fnstcw
add
mov
adc
pop
lahf
idivl
mov
pop
mov
jmp
push
imul
addb
push
ja
xor
sbb
ds
adc
sub
adc
cmp
ss
or
mov
inc
call
addr16
movb
sbb
jg
sbbb
push
ss
aas
mov
call
lahf
popa
idivl
int3
neg
dec
push
xlat
out
fimull
dec
iret
sub
bound
adc
cmp
cmp
inc
iret
rcl
and
test
pop
out
daa
xor
inc
jle
bnd
push
lea
and
xor
cmpb
add
sub
pop
xlat
mov
or
test
js
pcmpeqw
cli
or
push
repz
pop
insb
mov
jg
jge
and
daa
lcall
popa
pop
sub
xchg
ja
bound
push
outsb
xchg
in
and
rorl
jle
mov
out
cmp
cmc
in
and
xlat
or
cwtl
inc
sbb
jbe
jp
sub
mov
jge
mov
iret
testl
sub
inc
jno
sub
jle
mulb
fbld
xchg
jge
mov
enter
mov
or
mov
movsl
pop
popf
fsubrs
adc
inc
aaa
jp
cmp
imul
pop
test
ret
mov
pop
jge
fwait
daa
aas
stos
ljmp
sbb
inc
inc
shlb
pop
cmp
add
pop
jno
jp
mov
loop
cmp
sbb
sub
enter
ret
xlat
cmp
cli
sbb
clc
mov
xchg
dec
adc
push
test
xor
cwtl
out
mov
mov
push
add
pusha
addr16
mov
push
imul
mov
sarl
cmpsl
jg
out
mov
sub
es
push
sbb
insl
mov
xchg
mov
jb
pop
outsl
pop
or
pop
xlat
add
dec
add
jnp
jno
dec
push
and
sbb
shl
imul
es
shrb
jmp
mov
popa
test
mov
mov
mov
jmp
inc
inc
repz
add
sar
jae
and
fs
pop
pusha
sbb
jae
arpl
push
jp
in
add
sbb
dec
pop
out
lcall
stc
stos
push
push
cmp
into
xor
aaa
ret
addr16
ja
adc
popf
or
jns
in
jl
dec
xchg
aam
or
orb
leave
mov
divb
dec
inc
sbb
lods
stos
test
xchg
lock
data16
icebp
shll
dec
or
push
pop
sar
mov
or
stos
fisubl
ret
sbb
adc
adc
lods
scas
lret
lahf
ljmp
jle
or
add
cwtl
inc
cmp
sbb
clc
rcl
mov
test
mov
cmp
lret
dec
sbb
mov
cwtl
enter
cmp
mov
mov
push
inc
pop
inc
mov
movsl
mov
mov
push
mov
out
movsl
cmp
repz
push
out
loop
dec
jnp
mov
jp
mov
addr16
inc
xchg
mov
jg
fcomip
fidivl
jl
stos
dec
icebp
push
and
sarl
pop
shrb
jmp
dec
rorl
pop
sbb
ret
inc
adc
pop
lret
pop
jno
add
mov
mov
xchg
mov
test
adc
inc
and
mov
pop
xchg
jg
and
jns
loope
rcr
xchg
inc
fwait
mov
ja
mov
clc
iret
inc
fcompl
dec
sbb
or
pop
and
jae
iret
stos
enter
or
xchg
aaa
push
popf
cmpsl
test
push
test
fdivrs
or
lods
jae
add
inc
add
ds
ds
scas
sub
imul
xor
out
inc
pop
sub
adc
mov
xchg
stos
pop
mov
lds
mov
mov
cmp
adc
xor
cwtl
add
pop
ljmp
lea
or
mov
cmpsl
testl
mov
ss
push
xor
xor
das
lods
push
inc
and
sub
pop
mov
insb
dec
and
movsb
es
xchg
addr16
sub
jns
js
push
jnp
fnsave
mov
mov
sub
xchg
adc
cmp
sub
push
add
mov
mov
clc
test
cwtl
gs
stos
ret
out
cmp
inc
mov
sbb
movsb
cmpsb
cmp
adc
xchg
nop
pusha
xor
loop
test
cmp
jmp
push
fldl
ja
test
addr16
dec
pop
xor
sbb
cmc
data16
adc
or
and
outsl
adc
and
or
cmp
lcall
stc
inc
pop
pop
in
push
add
insb
in
or
add
fmull
in
mov
lcall
jl
cmpsb
stos
mov
rolb
sbb
or
or
insl
cmp
add
xchg
jae
aas
gs
movsb
movb
cmp
xchg
xor
or
cmp
scas
daa
lret
mov
mov
pop
pop
sub
dec
enter
or
xchg
test
mov
fisubs
idivb
lcall
pop
imul
jp
popf
adc
into
lahf
cmp
insb
sbb
jecxz
sub
add
cmp
adc
sbb
xchg
insl
imul
cmp
outsl
pop
xchg
cmpsl
loope
insb
cmp
adc
mov
sti
jg
iret
sub
or
push
push
inc
xchg
mov
popf
and
test
push
xchg
inc
fsubl
or
outsl
jbe
mov
pop
insb
testl
add
mov
iretw
jno
fisttpl
mov
dec
xor
idivl
int3
jp
pop
test
ds
push
sub
xor
pop
mov
pushl
adc
xchg
dec
dec
sbb
lock
dec
xchg
pop
xchg
test
adc
dec
scas
test
imul
js
pop
inc
jnp
mov
fstpt
xchg
cmp
jge
push
jp
mov
xor
or
mov
imul
in
in
aam
fildll
leave
inc
aas
cmp
mov
xchg
pop
fs
mov
jnp
adc
pop
cwtl
mov
push
cli
sbb
add
lcall
dec
ljmp
cmp
add
imul
orb
sub
ja
inc
or
fs
imull
mov
ret
mov
call
or
mov
jmp
in
jbe
xor
sub
addr16
js
scas
jle
xchg
lods
stc
sub
mov
sbb
pusha
push
fstpl
jl
or
mov
xchg
test
jmp
sbb
sbb
jle
repz
cmp
cltd
rorl
call
cmpsl
movsbl
xor
sub
stc
test
shrl
rorb
sub
addr16
and
notb
mov
lds
lods
ss
out
outsl
addl
jbe
sub
and
inc
fwait
sbb
ret
and
mov
push
adc
jno
cmp
inc
shll
mov
mov
pop
mov
xor
cmpl
fisttpl
and
fidivrs
push
cs
push
mov
sub
adcb
xchg
in
in
push
adc
sub
cltd
ds
jno
or
jae
inc
ds
inc
shl
mov
mov
out
push
in
or
es
mov
push
shr
xchg
mov
xor
dec
push
les
sub
pop
call
movsl
scas
adc
cwtl
scas
jnp
out
cli
cmp
mov
cli
xchg
lcall
hlt
popa
push
test
mov
pop
pop
in
cmpsb
pop
push
mov
xchg
inc
add
cli
cmp
pop
or
inc
jnp
sbb
jg
inc
sar
notb
sub
in
shlb
add
dec
scas
repnz
scas
mov
jg
dec
xchg
and
xor
cmp
pop
fs
push
jmp
mov
das
outsl
str
das
inc
fcomi
lods
and
push
sbb
test
cmp
ss
nop
sbb
pop
testb
pop
mov
imul
or
jp
lahf
insb
out
add
fs
cltd
pop
incb
mov
sub
xor
cmp
out
jg
pop
jno
sub
sar
aam
mov
and
ss
jl
clc
jbe
in
sub
xchg
add
xchg
jle
sarb
sti
or
pop
ja
fdivs
mov
push
xchg
push
pop
int3
test
int3
test
pop
mov
dec
cmp
adc
ljmp
imul
push
cld
mov
xor
cmc
imul
inc
add
test
xlat
xlat
dec
js
into
dec
clc
mov
xchg
insb
pop
mov
stc
imul
fists
or
out
test
sbbb
dec
lods
or
stc
dec
sub
sub
mov
test
mov
sbb
jb
int3
clc
adc
dec
imul
inc
mov
test
adc
adc
lcall
imul
inc
outsb
es
adc
cli
add
sbb
in
flds
movsb
call
cs
fwait
mov
mov
dec
jnp
and
dec
notl
inc
cmpsl
mov
addr16
pushl
inc
das
dec
push
pop
mov
jmp
mov
fistl
cmpsl
lods
sbb
popa
mov
sub
jne
in
xorb
dec
sbb
jo
out
cmp
inc
fiadds
dec
aam
dec
lahf
pusha
fidivrl
in
jns
lret
sbb
fstpt
cmp
pop
jnp,pt
adc
push
add
sbb
jns
stc
mov
leave
mov
ja
mov
inc
icebp
inc
mov
jns
call
aas
push
mov
xor
hlt
mov
adc
rcrb
jmp
push
xchg
cmp
jmp
xor
mov
insb
stc
ret
dec
daa
roll
add
clc
lcall
rcrb
sub
cmp
jmp
push
lea
push
or
cli
jmp
subb
rcrl
leave
jecxz
ret
mov
int
in
dec
rcl
leave
les
flds
in
or
dec
sbb
adc
test
nop
and
jecxz
daa
adc
stos
cmp
sub
rolb
xchg
shrb
fwait
cmpsl
pop
xor
inc
mov
rcll
cli
cmp
sbb
jae
es
mov
push
cld
in
cmp
pushf
mov
mov
mov
test
orl
push
xchg
push
jl
outsl
es
std
mov
rcrl
rorl
dec
lret
push
imul
sub
stc
sub
mov
pop
out
mov
jg
mov
dec
cmp
pop
mov
ss
xchg
jb
daa
dec
pop
out
arpl
jecxz
cld
cs
or
icebp
cmp
pushl
sub
mov
sub
cmc
cmp
or
jl
sub
fcmovnu
es
push
mov
pop
imul
daa
sbb
addr16
jecxz
sub
xchg
clc
fistpl
jp
mov
push
push
pop
push
jmp
pop
popf
mov
mov
test
call
sbb
popf
pop
sub
inc
or
jmp
cld
adc
ja
addr16
scas
sub
lcall
cli
lahf
cltd
mov
cmp
mov
aad
pop
rolb
xor
and
push
jg
inc
and
adc
cmp
push
sbb
sbb
xlat
ljmp
pusha
cmp
mov
int3
pop
add
cmp
idivb
cmpsl
mov
negl
fsubrl
test
jp
mov
and
rorb
pop
or
dec
stos
add
pop
loope
sahf
out
inc
lds
sub
xlat
movsl
cmpb
cmp
jmp
sbb
das
roll
pop
test
mov
xor
inc
push
add
jnp
sbb
lcall
adc
stos
popf
xchg
cmp
fs
add
mov
jmp
push
daa
das
test
inc
jmp
sahf
sub
pop
insb
push
inc
or
push
add
xchg
adc
lcall
cmp
push
cmpsb
lods
and
mov
sbb
pusha
pop
adc
insb
sbb
mov
xchg
sub
jb
ds
popf
insb
inc
aas
test
pop
andb
imul
popa
add
push
push
ljmp
lea
mov
stos
ja
add
sbb
adc
dec
fdivrl
orb
fdivrp
push
mov
arpl
lods
cmp
mov
es
rclb
jae
les
clc
jmp
pop
jge
add
sbb
sarl
test
mov
insb
sahf
test
es
stc
xor
adc
mov
scas
xchg
dec
ror
rcrb
cmp
icebp
sbb
mov
out
adc
dec
inc
sub
mov
stos
mov
jle
js
and
insb
and
xchg
sar
dec
or
mov
jne
mov
fwait
mov
xchg
mov
rclb
cmp
mov
sbb
cmp
push
arpl
scas
out
icebp
mov
mov
or
into
fwait
arpl
icebp
aas
movsl
sub
outsb
cmc
sbb
jp
mov
sub
cmp
jnp
push
lods
shrl
push
test
mov
xor
sbb
sbb
sbb
or
in
dec
imul
xchg
sub
pop
jge
cltd
sarl
xor
adc
sbb
push
lock
push
mov
dec
inc
fnsave
or
cmp
add
test
adc
jb
cmp
scas
leave
mov
mov
js
cmpsb
jg
mov
ficomps
add
je
arpl
dec
jge
sub
leave
cmp
jge
pop
inc
cmp
mov
es
fs
mov
mov
sbb
add
cmpb
pop
pop
jcxz
sbb
arpl
mov
icebp
dec
mov
jmp
in
mov
movsb
mov
js
xchg
sub
pop
or
adc
mov
xor
lds
loop,pt
and
dec
push
or
jp
fimull
mov
sub
jno
out
orl
sbb
xchg
jo
adc
ret
push
mov
js
shrl
fldl
test
sub
or
ds
jecxz
jecxz
popf
or
cmp
rorb
fisubl
pop
inc
in
andb
mov
sbb
mov
dec
sbb
js
fdivs
push
dec
popf
rolb
sbb
test
and
sub
or
mov
xchg
xor
in
dec
ret
filds
inc
fcmovnbe
or
dec
pusha
leave
xorb
popf
movsl
test
pop
test
inc
dec
data16
cmpsb
sahf
imul
jno
scas
movsl
ret
inc
inc
xchg
test
mov
sti
jle
lods
call
sbb
xchg
addr16
dec
cld
xchg
rolb
add
push
outsl
lds
xor
js
in
push
push
mov
add
cmp
ja
sti
and
xor
shr
jecxz
addr16
cmp
push
mov
cmp
push
sub
movsb
pop
cmp
loop
mov
add
bound
test
popf
add
xchg
dec
lret
pop
test
xchg
orb
xor
pop
dec
loope
inc
xchg
and
enter
mov
jp
add
pop
int
or
clc
mov
cmp
gs
fsubrl
adc
cmc
xchg
mov
lret
outsl
orb
ja
daa
xlat
out
jg
sub
aad
ljmp
adc
fwait
mov
fimull
je
test
push
sbbb
repz
lock
push
shlb
mov
cmp
sub
decb
mov
push
cmp
adcl
push
cld
xchg
ficoml
test
shrl
iret
cmp
ljmp
stos
mov
mov
fdivrl
xchg
mov
ss
movsb
pop
xor
cmp
xor
shrb
jle
push
stos
xchg
inc
cld
jbe
cmpsb
in
scas
mov
jae
jge,pt
std
mov
dec
cmpsb
lods
dec
dec
dec
scas
mov
out
jl
das
add
jns
daa
add
sub
xchg
ja
xchg
dec
inc
pop
push
cmpl
lret
push
jnp
clc
mov
repz
xorb
or
jle
pop
adc
notl
nop
outsl
ds
mov
cwtl
test
arpl
pop
orl
pushf
leave
cmpl
jns
cmpsb
mov
mov
out
pop
test
mov
push
mov
arpl
ror
stos
pop
shlb
js
mov
xchg
outsl
dec
push
pop
nop
ljmp
clc
cwtl
cmp
jnp
dec
hlt
cmp
popf
push
fst
push
mov
test
movsl
inc
xor
xchg
inc
lret
ret
mov
sbb
add
sub
or
add
xlat
ret
and
jae
mov
fwait
cmp
mov
adc
mov
dec
inc
jl
adcl
ja
inc
or
dec
push
mov
mov
dec
test
jmp
jp
add
movsb
mov
ss
adc
xchg
cmpb
lahf
jns
sub
mov
movsl
js
adc
lret
adc
aas
mov
cwtl
add
imul
and
fstps
add
loop
lahf
test
mov
sbb
fcoms
or
dec
cmp
sub
jmp
or
loope
mov
js
xor
and
inc
shll
icebp
or
dec
int3
push
mov
insb
lea
cld
test
push
jae
push
cmp
adc
test
xor
aam
mov
mov
push
std
push
mov
add
sbb
loop
out
push
jecxz
sbb
push
pushf
dec
jl
out
xor
je
mov
or
sub
std
ss
icebp
mov
pusha
pop
fwait
push
stc
inc
cmp
mov
pop
jp
xchg
inc
cmp
mov
sbb
sti
cmp
mov
inc
cld
jnp
sbb
fnstenv
aam
sahf
jae
pop
pop
ret
mov
es
cmp
daa
xchg
jnp
out
or
adc
fwait
leave
dec
test
cltd
ss
lods
ret
or
pop
imul
ljmp
jecxz
sbb
cmp
mov
into
icebp
and
and
movsb
add
sbb
out
and
dec
mov
mov
sub
jb
sbb
pop
cmp
cmp
fcoml
jae
mov
fistpl
mov
es
mov
lahf
cmp
dec
pop
mov
dec
lock
rol
aas
push
pop
pop
daa
mov
gs
icebp
in
sbb
lahf
or
sub
or
pop
test
fisubs
adc
leave
ljmp
dec
xchg
and
int3
cmpsl
roll
notl
imull
icebp
push
arpl
insb
bound
jmp
cwtl
sub
mov
cld
sbb
mov
out
pop
jno
outsl
out
or
es
push
sbb
and
or
rol
pop
mov
xchg
xchg
ret
cld
rolb
sub
insb
hlt
loop
mov
push
push
ret
pop
inc
lods
mov
mov
mov
jp
mov
pop
outsb
jnp
adc
jge
inc
push
xchg
fadd
jns
dec
sub
loopne
sbb
cmpsb
pop
shrl
xchg
mov
in
lods
insb
jg
out
or
scas
popf
push
adc
mov
xorl
into
mov
push
mov
in
xor
jbe
dec
mov
xchg
out
adcl
clc
mov
mov
jp
jecxz
inc
subl
popa
stc
jg
dec
idivb
cli
push
test
stc
push
outsl
jnp
pop
mov
jl
mov
ljmp
repnz
mov
fwait
dec
fiaddl
push
iret
sub
or
mov
pop
cmp
iret
or
int
inc
cmp
ljmp
data16
xchg
jle
out
lret
or
dec
pop
stos
lods
pop
andl
dec
push
add
and
sbb
pop
loope
cmp
ds
or
jo
cmp
aas
sti
rcl
adc
into
dec
iret
jl
lea
adc
sahf
cmp
out
imul
sti
mov
sub
xchg
xchg
jns
xor
fildll
or
push
cmpsb
xchg
js
xor
jmp
cmp
push
pop
or
jne
and
xchg
mov
les
adc
out
dec
ret
xchg
andb
sbb
jle
push
cld
ds
imul
sbb
xchg
cmp
sub
lods
cwtl
bound
sti
or
pop
js
mov
mov
mov
mov
aad
cmp
cmp
loope
pusha
xchg
pop
fwait
test
mov
jbe
sub
xchg
push
sti
push
outsl
cmp
jb
sbb
sbb
push
pop
mov
mov
and
add
xor
add
xchg
testl
ja
lcall
adc
lds
mov
or
iret
jno
ds
jecxz
jl
push
add
gs
fistpll
push
loope
xlat
test
js
push
insl
adcb
or
push
jns
ss
add
imul
mov
push
ss
add
dec
xor
add
mov
adcb
ja
test
push
push
pop
adc
cld
mov
mov
jmp
cmp
sar
inc
or
xlat
mov
cltd
mov
mov
xchg
ja
cmp
test
adc
sub
addl
pushf
pop
add
xchg
xchg
fsubrs
and
mov
cmp
cmp
mov
adc
lods
push
ja
xchg
mov
inc
mov
add
mov
icebp
and
adc
int3
out
mov
dec
or
cmp
int3
add
clc
pop
xchg
es
fmul
sub
inc
pop
jnp
and
xchg
fdivrs
shl
jp
enter
lods
or
mov
cli
jl
iret
push
fwait
jmp
cmp
add
repnz
add
ljmp
jge
pop
outsl
es
ret
bound
mov
push
inc
mov
sbb
mov
cmp
fmull
rcrl
xchg
daa
stc
test
mov
sbb
out
in
jmp
lock
mov
fsubrp
cld
sahf
add
lock
push
sbb
or
dec
xchg
ss
ss
fists
icebp
jns
cld
pop
pop
testb
inc
test
jecxz
fnstenv
mov
cmpsb
dec
push
fwait
jg
and
loop
lock
test
mov
push
dec
jnp
loop
in
mov
or
cmp
jnp
xchg
sub
in
dec
dec
jl
enter
pop
adc
sbb
cltd
adc
cmp
loop
dec
mov
sbb
mov
mov
sbb
cmp
test
sbb
arpl
in
gs
fidivs
cmp
enter
hlt
icebp
jae
lods
dec
fldenv
test
jle
push
lods
xlat
jne
xchg
stos
mov
add
int
cmp
js
out
xchg
cmpsb
fsubrs
and
add
mov
xchg
repz
lods
mov
dec
fisubs
xchg
cmp
sbb
or
inc
loop
fmul
fstpt
pop
dec
test
pusha
sarb
div
lahf
and
imul
test
rclb
stc
fxch
shr
dec
sub
andb
xor
ja
enter
daa
lods
inc
mov
sub
jbe
ss
fdivrl
adc
push
addr16
fdivrp
data16
out
pop
pop
xor
daa
push
sbb
dec
sbb
imul
mov
dec
insb
test
dec
in
mov
or
dec
lret
xchg
insl
outsb
iret
lods
mov
js
xlat
rclb
xchg
xchg
add
stc
or
push
mov
push
cmp
mov
add
add
or
sub
sub
mov
and
gs
ds
add
ljmp
in
fnstcw
push
and
je
push
sub
adc
mov
mov
push
loope
cmpsl
pop
fdivrs
das
stos
push
and
mov
in
xchg
sbb
add
cmp
mov
push
add
fcoml
leave
arpl
xchg
test
push
orl
push
imul
cmp
xor
sarl
pop
xor
nop
test
adc
dec
push
sbb
mov
sbb
xchg
lret
cmp
dec
lds
mov
mov
js
into
xor
push
addr16
pop
mov
cltd
out
cmpb
lea
pop
xchg
pop
lahf
push
sbb
pop
cmpsl
add
mov
loop
cmp
mov
cmp
xchg
nop
xchg
sub
or
sub
out
outsl
sub
fs
sub
ret
adc
orb
cmp
jg
out
addr16
stc
pop
insb
scas
xchg
faddl
lods
lods
and
test
add
ret
test
mov
push
imul
mov
popf
js
add
call
loop
dec
sbb
mov
sbb
test
ljmp
jb
call
testl
jae
push
dec
dec
out
test
rorl
cmp
mov
lods
out
rclb
aam
lods
pop
mov
ds
fcoml
sub
push
movsb
adc
adcb
cltd
mov
movsl
and
repz
sbb
mov
lds
sahf
mov
repnz
sub
push
je
cld
sbb
sub
stc
sbb
inc
ljmp
xchg
idivl
pushf
clc
cmp
adc
rcr
xor
cmp
test
lods
jmp
insb
xchg
sbb
out
xor
shll
adc
fsubr
fidivrs
jle
sar
mov
cld
call
adc
add
xlat
cs
xchg
pop
test
dec
or
add
jae
enter
lahf
pop
cmpb
addr16
jp
ja
jp
addb
add
push
imul
popf
xchg
or
push
stos
cmp
and
xor
adc
add
cmp
jne
imul
ja
ljmp
cmp
addr16
ss
in
cli
inc
xchg
ja
xchg
push
xor
mov
subl
mov
nop
mov
cmp
sub
cmp
repz
cmp
jp
jmp
scas
sbb
pop
xor
pop
test
dec
add
lret
fs
in
xchg
movsl
sub
xor
inc
push
pop
xchg
unpckhps
pop
adc
out
mov
fwait
cli
xor
ja
mov
sub
ljmp
cmp
test
jle
cmc
mov
or
cmpsb
inc
sub
push
jp
mov
add
push
or
mov
sbb
scas
ret
mov
inc
push
cltd
test
inc
jp
cs
imul
rol
out
and
pusha
sbb
dec
or
sbb
cmc
iret
cmpsb
push
mov
or
test
dec
add
adc
xchg
notl
outsl
fnclex
mov
lods
dec
cli
lcall
pop
jle
pusha
aaa
insb
out
jl
outsl
mov
clc
iret
icebp
jp
push
cli
rcr
int
mov
dec
es
inc
jle
xchg
xchg
iret
jo
leave
clc
adc
inc
test
push
lea
mov
jnp
lret
jge
jge
cmp
int
ret
lahf
fidivrs
mov
xchg
sahf
push
push
xchg
aas
mov
imul
and
mov
adc
popf
dec
sbb
jmp
cmp
sahf
nopl
lea
idivb
sahf
mov
cmp
fwait
incb
mov
lods
push
in
push
or
iret
sub
push
sbb
dec
jge
sub
cmp
inc
ja
ret
stos
dec
mov
xchg
mov
push
inc
inc
mov
inc
je
and
enter
sbb
js
pop
jg
cmp
iret
jb
das
ja
sbb
scas
iret
mov
in
sarb
xchg
dec
popa
loop
push
sbb
cmp
adc
ret
fdivl
cmp
sub
adc
test
add
rcrb
mov
dec
adc
iret
push
mov
and
and
and
jne
xchg
ret
dec
popf
xor
inc
and
idiv
mov
mov
cmp
cltd
xchg
jle
iret
call
mov
mov
cld
rol
mov
notl
xor
add
aas
jbe
std
sarl
stos
add
dec
cmp
lret
lock
flds
ljmp
test
ret
das
mov
loop
outsb
cmp
dec
jp
mov
pop
push
decb
call
out
in
outsb
aas
jnp
pop
xchg
cs
into
push
mov
mov
mov
xorb
or
fisttps
xchg
insb
test
insb
loop
sub
add
decb
enter
test
pop
fisubrl
mov
xchg
aas
out
fnstenv
cltd
leave
in
adc
push
test
sbb
sub
cmp
addr16
jno
jg
mov
out
cmp
xor
cmp
mov
mov
ss
or
pop
cmp
sbb
test
stos
in
sbb
adc
inc
addr16
nop
es
inc
or
out
fs
mov
loop
inc
test
out
xchg
jae
ret
cmp
sub
subb
out
mov
mov
adc
int
cmp
mov
jg
addr16
stos
pusha
add
and
iret
mov
dec
js
sbb
loopne
clc
daa
sub
cwtl
lods
insl
movsb
adc
inc
pop
cmp
ss
dec
push
xchg
push
jg
in
sub
int3
cmp
push
sarb
jg
jnp
dec
subb
arpl
xorl
std
mov
pop
add
jo
dec
les
mov
daa
pop
inc
ja
popf
out
in
cmp
int3
test
dec
in
lret
jle
notl
adc
pop
dec
push
pop
dec
push
in
xchg
inc
inc
int3
cmp
add
mov
jmp
add
cmp
xlat
loopne
das
popf
scas
dec
dec
jl
aas
fstl
adc
aas
xchg
cmp
mov
xchg
cmp
pop
inc
ror
addr16
cmc
push
mov
cmp
xlat
jmp
repnz
cmpsb
addps
push
lret
les
in
stos
add
jne
test
lret
ljmp
dec
dec
aam
dec
lock
sbb
push
sub
pop
mov
push
clts
hlt
out
push
dec
call
xlat
cmp
jno
sub
pop
sub
rorl
jbe
jg
push
xorl
fisubl
testl
std
outsl
jns
rcll
xchg
mov
fs
mov
sub
popa
jae
cmp
inc
pop
sbb
ja
inc
push
mov
jae
add
addl
dec
cmp
adc
loop
scas
arpl
pop
mov
or
sub
jmp
adc
cmp
jnp
or
inc
mov
pop
xchg
inc
pop
into
push
xchg
mov
dec
mov
sbb
dec
es
xchg
dec
ret
push
jge
inc
mov
mov
call
or
jno
daa
iret
xor
std
insb
and
mov
fcmove
add
in
cmpsl
mov
xchg
shlb
jp
push
inc
test
negl
outsl
xchg
dec
movl
imul
xlat
cmp
jns
xchg
pop
jnp
jge
test
or
loope
xchg
lds
inc
add
inc
dec
shrl
incb
cmp
jmp
push
jae
in
cmp
inc
insb
sbb
push
push
test
loop
or
xlat
test
mov
cmp
push
hlt
xor
into
push
pmaddwd
lods
cli
out
adc
fisttps
xor
mov
mov
sarb
jb
insb
dec
iret
push
push
mov
mov
ljmp
fsts
jge
pusha
fstpt
pop
dec
pop
loope
popa
imul
sub
cmp
push
add
mov
push
stc
test
popf
aas
mov
mov
nop
adc
xchg
jnp
dec
lcall
inc
arpl
loop
lods
orb
xchg
xor
push
and
fcmovbe
popl
sbb
cmp
jecxz
lea
mov
xchg
lea
js
into
xor
outsb
sub
stc
mulb
sbb
insb
insl
mov
fldenv
sub
in
inc
xchg
call
daa
mov
jnp
ja
lret
mull
loope
sbb
lcall
sub
mov
add
dec
out
arpl
push
sbb
pushf
jge
out
shll
jnp
insl
mov
mov
adc
push
cmp
mov
push
cmp
pop
inc
dec
mov
push
adcb
and
pop
out
js
cmp
jo
js
fwait
addr16
mov
clc
fcomps
cmp
ja
push
and
inc
iret
leave
fidivrs
jae
jno
adc
mov
pop
or
lds
adc
sbb
in
roll
mov
insl
xchg
in
jo
test
test
test
mov
js
cwtl
in
inc
movsl
popf
mov
icebp
pop
test
fwait
cmpsb
push
cmpsl
mov
data16
lea
sahf
jae
cmp
loope
cmp
xchg
stc
cs
jne
fcomip
pop
outsl
xchg
divl
lods
imul
jbe
lcall
mov
pushf
and
jge
dec
aad
clc
imul
pusha
repz
jle
in
add
mov
xchg
cmpsb
xor
mov
aam
sub
loopne
popa
xor
in
out
mov
push
mov
and
and
inc
sub
sbb
and
test
mov
sub
fmuls
jae,pn
xchg
xor
xchg
and
push
adc
inc
stos
rorb
inc
stc
adc
mov
add
push
jmp
popa
loope
jno
ss
sbb
lds
iret
std
arpl
push
sub
mov
xchg
int
cli
mov
xchg
mov
out
call
fwait
sbb
jp
xorb
cmovae
mov
sahf
xchg
add
mov
jns
es
cmp
frstor
mov
ficomps
aad
add
push
cmp
cmp
nop
cmpsl
cmc
jns
sub
nop
dec
pop
cmp
mov
pop
clc
push
testl
test
or
dec
mov
outsb
sarl
xor
jle
fst
push
cmp
mov
xchg
aas
cmpsb
lea
add
lahf
mov
aas
xchg
sbb
jmp
mov
dec
or
cmp
cmp
dec
mov
ljmp
imul
sti
push
or
push
inc
adc
cmp
lods
test
sbb
push
jmp
js
push
mull
fbld
int3
es
cmp
push
push
cmpsb
push
gs
outsb
out
in
or
cltd
iret
cltd
sbb
cmp
mov
cmp
cmp
pop
jmp
cmpsb
es
cmpl
ljmp
mov
cmp
ja
test
cmc
inc
jl
iret
fwait
popa
mov
xchg
in
inc
jp
fcomip
cmp
outsl
adc
jb
sbb
movsb
loop
cmp
push
jmp
int3
jnp
add
mov
xchg
mov
rcrl
loop
or
out
sbbl
mov
fwait
mov
incl
movsb
push
arpl
mov
cmp
fwait
in
setge
xor
cltd
aam
arpl
mov
insb
lahf
in
loopne
cld
aas
faddl
sub
aaa
test
jecxz
mov
mov
test
imul
loopne
jg
xor
aaa
movsb
or
cvtps2pi
jecxz
data16
add
add
inc
lods
ret
pop
jge
jg
add
iret
adc
sub
jmp
jae
fdivr
ja
cmp
dec
sahf
cmp
xlat
enter
push
lahf
shl
xchg
inc
out
ds
xchg
sbb
xor
sub
pop
cmp
pop
hlt
sbb
dec
jno
jg
sbb
push
rol
sti
inc
notb
push
into
call
xor
mov
push
test
cmp
iret
xchg
aam
add
push
adc
or
scas
nop
cmp
jmp
xor
arpl
push
js
movsb
mov
js
movsb
sbbl
repnz
lret
mov
arpl
pop
cmp
sti
inc
rcrl
mov
fcompl
fstps
decb
aad
add
out
aas
shrb
ss
sbb
and
testl
popa
and
cmp
adc
pusha
cmp
iret
filds
xchg
enter
and
sbb
inc
jg
stc
sbb
imul
test
aas
inc
in
pop
cmp
int3
in
jecxz
loop
adc
sub
aas
test
inc
test
adc
imul
mov
and
push
jb
mov
enter
lret
and
adc
fldcw
inc
out
jnp
fwait
jne
push
jl
out
testl
fimull
js
push
mov
or
test
push
jb
adc
push
mov
mov
pop
mov
mov
dec
sub
repz
test
xlat
aam
das
mov
xlat
sbb
or
scas
jg
popf
mov
and
sbb
jmp
imul
insb
mov
mov
mov
cli
mov
mov
mov
lahf
enter
fcomps
xchg
hlt
jo
inc
into
dec
mov
xor
mov
xor
fcoml
leave
inc
sub
cmp
lret
mov
clc
test
xchg
and
xor
cmp
push
scas
jge
jo
leave
mov
mov
imul
xlat
pop
popa
jbe
mov
dec
mov
int3
aad
mov
sub
xchg
mov
test
testl
inc
pcmpeqb
aad
rorl
or
insb
cmp
cltd
js
ret
adc
inc
cltd
sub
sbb
cmp
and
jge
sti
clc
sbb
cmp
js
or
cmp
jge
add
orb
inc
mov
psraw
inc
bswap
lds
cli
dec
test
and
mov
or
mov
mov
mov
fiadds
sarb
sbb
dec
ljmp
jnp
cmc
sub
jb
pop
push
push
fcoms
push
outsl
scas
stos
xchg
ss
imul
push
jo
je
sbb
mov
pop
pusha
pop
jle
pop
cmc
cmp
stc
add
xor
int
cmpsb
and
outsb
mov
shll
cmc
jns
repnz
adc
mov
imul
pop
mov
out
jge
jge
jnp
jo
add
adc
sti
jge
cmp
imul
fdivrs
pop
xchg
imull
dec
mov
sti
jp
push
lahf
clc
mov
sbb
jb
das
push
cmc
cld
xchg
mov
mov
xchg
fmul
jmp
sbb
or
test
or
jo
ja
cmovge
nop
pusha
jge
adc
rcll
mov
cmp
push
mov
or
push
cmc
pop
das
test
insl
push
stc
scas
inc
jb
decb
testb
aas
cmp
pushl
pop
sub
jnp
sbb
pop
or
or
and
mov
cwtl
stc
mov
neg
inc
mov
xchg
nop
ds
add
popa
and
sub
scas
mov
stc
call
ljmp
pop
fldl
sub
mov
outsl
in
movsl
sbb
xchg
test
rcrl
popa
jo
add
mov
adc
nop
xchg
mov
adc
sbb
aas
cli
jno
mov
add
out
enter
out
pop
mov
mov
out
ss
mov
fs
jns
inc
bound
sbb
add
dec
ljmp
sub
jg
sub
popa
stos
sbb
cli
xchg
notl
mov
fmull
push
mov
addb
pop
pop
mov
lahf
inc
pop
xor
push
cmpsl
jo
mov
push
sub
jo
out
inc
pop
ljmp
ss
pop
mov
fwait
lret
roll
jge
sbb
sbbl
call
pop
mov
hlt
ret
je
pushf
mov
loopne
loopne
and
or
pop
fisttps
outsl
lahf
cmpsb
cli
mov
fisttps
push
ljmp
rclb
cmp
xchg
int3
fcompl
clc
cmc
sub
test
sbb
dec
mov
or
js
fdivrs
mov
cmp
fwait
jnp
int3
addr16
xchg
fdivrs
imul
push
dec
ret
ja
fdivrs
sbb
or
gs
popf
mov
pop
enter
push
sbb
lock
shrb
ds
adc
incl
mov
shrb
je
cmpsl
leave
dec
test
rorb
iret
fistpll
sbb
mov
fiaddl
mov
mov
aad
pop
or
stos
cmp
lahf
mov
cmpl
pusha
push
cmp
aas
xchg
cli
and
mov
aas
cmp
jle
aas
iret
shlb
add
loopne
les
popa
out
sbb
scas
mov
incl
dec
adc
js
jge
rcr
cmc
mov
fnstsw
cmp
je
test
sub
lcall
mov
xorl
leave
sti
xor
mov
lcall
ljmp
jl
shr
fdiv
jg
push
lds
sbb
and
out
mov
outsb
out
dec
adc
xchg
mov
add
or
cmp
push
sub
sub
add
push
inc
jl
and
mov
sbb
imul
or
fmuls
cmp
jg
or
jge
idivb
addr16
push
pop
cli
fs
mov
cmp
lock
es
jne
inc
je
mov
dec
add
cmp
rcll
cmp
jge
sbb
popf
fildll
mov
xchg
imul
clc
pop
pop
stos
jns
mov
xchg
cmpsb
scas
addr16
popa
add
cmp
jge
cmpl
xchg
js
mov
icebp
or
jg
ret
popf
dec
addb
dec
mov
inc
mov
cmp
js
sahf
xorb
sbb
dec
mov
jmp
rorl
fwait
sub
fwait
sub
scas
fisubrs
dec
dec
mov
lret
inc
pop
inc
ja
leave
imul
cld
cmp
xchg
sbb
sbb
dec
or
jle
aas
addl
inc
popa
decl
xchg
rcll
or
adc
sbb
inc
cli
sbb
mov
inc
inc
jmp
enter
jbe
dec
sbb
bound
sbb
and
mov
add
xchg
insb
ss
jns
mov
imul
xor
jbe
cmp
cld
rorb
popf
jg
mov
cmp
hlt
cltd
xchg
lds
loopne
dec
xchg
jge
idivl
jl
push
adc
xlat
aam
js
cld
mov
sbb
jle
pop
test
fidivrl
xor
loop
push
add
mov
test
push
mov
jmp
dec
scas
in
jno
cmp
stc
mov
mov
add
mov
jp
adc
fldl
std
cmp
cmc
lret
dec
sti
adc
mov
cli
pop
push
adc
pop
fmuls
mov
push
mov
pop
pop
pop
cwtl
add
fcompl
les
cwtl
insb
push
idivl
test
mov
idivl
mov
addr16
mov
out
ret
test
xor
daa
test
call
pminsw
addr16
stc
xchg
outsl
lret
or
test
cmpsl
push
test
imul
or
test
push
mov
pop
mov
arpl
es
leave
jno
outsb
cmp
movsl
cmp
jg
push
pushl
std
pop
pop
lods
pop
mov
pop
or
test
sbb
filds
pop
xorl
dec
icebp
or
xor
jl
mov
cmp
inc
cmpl
sbb
mov
idivl
push
loop
mov
dec
adcl
add
lret
lcall
pop
mov
insl
clc
inc
mov
push
add
cmp
adc
push
mov
adc
icebp
cmp
jmp
dec
imul
ja
repz
outsb
push
push
push
stc
push
pop
sbb
push
adc
pop
leave
mov
pop
xor
mov
frstor
adc
sti
xchg
fwait
inc
add
cs
dec
mov
shll
xchg
xchg
push
dec
fistl
inc
or
cli
dec
in
in
movsb
bound
aas
lods
xchg
jg
lock
add
add
adc
das
sbb
pop
js
cmp
jo
xchg
call
inc
xchg
and
nop
aaa
jnp
xor
or
mov
lea
push
xor
inc
sbb
mov
daa
aas
push
cmp
sbb
push
out
xor
js
mov
xchg
aas
jg
sub
outsl
dec
popf
imul
int
jb
pop
inc
dec
iret
push
inc
push
xor
push
cmp
iret
clc
ljmp
mov
fwait
mov
pop
pop
jecxz
stc
in
adc
pop
in
mov
jl
mov
jno
sub
cmp
jae
jg
ss
inc
dec
mov
add
inc
sbb
push
packuswb
lock
xor
in
sarl
sub
mov
pop
jmp
add
cmp
sahf
mov
in
pop
loopne
lods
into
hlt
pop
jae
or
rcll
xlat
mov
rcr
cmp
add
neg
movsl
cmp
das
inc
int
pop
dec
sahf
jne
adc
enter
pop
inc
daa
lds
dec
out
jnp
push
pushf
out
into
jecxz
pop
sar
ret
cmc
mov
push
xor
mov
imulb
enter
test
push
cmpl
jns
mov
mov
mov
sbb
cwtl
sub
test
jp
mov
cmp
std
call
pushf
push
sbb
insl
int
or
mov
mov
xchg
mov
ss
cmp
pop
aas
xor
test
xchg
test
test
faddl
pop
sbb
lahf
mov
fmull
mov
adc
and
add
mov
xchg
aaa
jle
cs
xor
lea
mov
in
mov
into
pop
pusha
push
or
rorb
and
cmc
sbb
gs
mov
or
test
adc
xchg
dec
cmp
sbb
mov
cmpsl
imul
push
stos
scas
clc
mov
bound
jle
mov
push
hlt
dec
ss
mov
shrb
out
insl
enter
mov
cmp
push
mov
add
add
push
mov
cmp
or
pop
imul
ud2
xchg
test
cmp
shr
aaa
gs
es
cmp
jbe
and
pop
out
test
gs
xchg
mov
clc
inc
add
jge
test
mov
popa
or
push
cmovae
call
icebp
xchg
ljmp
aas
fs
xor
lods
fidivrs
dec
test
pushf
push
scas
or
sti
sahf
lds
jo
inc
mov
mov
repz
arpl
popa
fs
clc
clc
and
ret
jo
mov
pop
clc
sub
sbb
popl
pop
lea
int3
push
test
push
addr16
jge
js
xor
int
cmp
test
and
xchg
mov
add
rcrl
fdivl
inc
test
jle
pop
jle
fstpt
dec
jecxz
xchg
xchg
push
fstpl
xor
sbb
cmpsl
out
mov
jo
imull
fidivrl
pop
adc
imull
push
jb
mov
mov
mov
xchg
xor
push
out
xchg
lds
jmp
gs
cmp
xchg
xchg
cmp
test
cmp
jmp
pushf
push
cltd
or
cs
jl
lods
inc
cs
jae
sub
xchg
js
sarl
mov
xlat
pop
pextrw
push
int
bound
cmp
es
loop
sub
mov
dec
lds
arpl
daa
dec
jg
sbb
fsubrl
jle
shrb
xbegin
cmpsb
clc
dec
test
sbb
jp
sub
jecxz
test
sbb
jmp
and
jge
sbb
pop
xor
xchg
stos
jl
xchg
loop
jp
jg
popl
or
pop
xchg
mov
out
and
stc
test
fsubrl
mov
outsb
cmp
lods
fadds
and
outsb
cld
std
in
jg
bound
pop
out
fdivrp
cli
imul
sbb
mov
mov
xor
stos
mov
imul
cmpsl
scas
js
adc
cwtl
inc
jne
mov
fildl
outsl
inc
inc
std
call
imul
loop
sbb
inc
push
and
jle
clc
jecxz
cmpsb
inc
outsl
out
mov
in
fdivr
data16
cmp
divl
imul
insb
or
add
or
stc
cmp
mov
adc
cmp
out
stc
xchg
mov
and
xchg
stos
clc
sub
xchg
cmc
or
repz
xchg
test
gs
xor
xchg
mov
inc
inc
popa
sub
gs
jl
xor
mov
cmp
sbb
jnp
aas
fnstcw
xchg
shll
lret
mov
cld
add
test
iret
ljmp
dec
dec
aam
int
clc
mov
adc
test
aad
xchg
inc
pop
testl
ljmp
mov
js
jg
ss
inc
loop
test
or
ret
scas
in
mov
fldcw
xchg
inc
mov
cs
js
jle
mov
lock
or
add
jb
xchg
hlt
push
ss
mov
xchg
in
out
cmp
sub
shr
decl
lds
ret
pop
cwtl
and
out
cmpsl
mov
daa
push
sarb
mov
ja
jmp
test
outsl
stc
xchg
cmp
std
nop
mov
mov
xchg
inc
dec
mul
aam
int
or
test
adc
popf
cmp
roll
cmp
or
int3
and
lds
testl
or
xlat
pop
or
popf
xchg
test
test
fsubs
mov
je
push
sbb
cmp
cmp
test
ss
cmp
xchg
fs
lea
jbe
leave
movsb
adc
into
js
pop
jle
loopne
stos
addr16
repz
mov
ja
cmp
sbb
push
cmp
jo
cmp
adc
add
xchg
mov
negl
filds
xchg
xor
jno
push
aad
mov
cld
ss
inc
jns
add
push
scas
scas
jae
das
mov
xchg
xchg
test
mov
push
aaa
xor
push
ficoms
push
push
mov
stc
arpl
lret
ret
rolb
pop
pop
clc
rcr
xchg
add
daa
xor
inc
js
test
pop
addr16
imul
loop
mov
xchg
into
adc
scas
adc
fmulp
int3
adc
cli
xor
dec
shll
and
and
inc
movsb
mov
mov
mov
hlt
lods
fxch
mov
jne
fdivr
addr16
xchg
aam
idivb
insb
jnp
cmp
mov
mov
jnp
jnp
push
sbb
push
stc
cld
lds
jns
fs
pop
jge
cmp
ljmp
mov
arpl
jmp
adc
mov
add
fsubl
int3
pop
leave
inc
addr16
fisubrl
pop
mov
and
pop
pusha
sub
xchg
mov
lcall
xchg
mov
nop
inc
sti
popl
dec
cmp
or
xchg
sbb
xchg
ljmp
out
mov
outsl
push
enter
mov
cmc
xchg
sbb
test
xchg
pusha
or
fucompp
pop
in
test
out
gs
and
ljmp
jnp
stos
addr16
das
pushf
or
push
scas
and
clc
mov
outsl
js
lcall
fcmovnbe
or
loopne
stos
scas
leave
out
and
aam
sbb
mov
mov
mov
loop
mov
sub
movsl
call
adc
iret
pop
stc
or
pop
addl
inc
stos
xor
or
clc
std
pop
mov
mov
outsl
arpl
ljmp
lahf
adc
or
pushf
rorb
fs
pushf
mov
sbb
lret
sub
ret
xlat
cmp
mov
mov
addr16
cmp
pop
xchg
stos
stos
les
ror
sub
sbb
cmc
fistpll
scas
dec
push
push
adc
cmp
pusha
in
add
iret
dec
fistl
aas
sarb
mov
mov
xchg
flds
cs
mov
les
lea
cld
dec
cmp
jl
dec
sbb
out
cmc
push
aam
imul
and
push
or
fsubp
negl
insb
in
adc
pop
mov
out
ljmp
dec
fcompl
pop
cmp
inc
pop
fdivl
pop
sub
xor
pop
ss
popf
rorb
mov
lret
test
rorb
jl
cmpsb
xor
lea
push
movsb
dec
xchg
xorl
cmp
adc
push
leave
xchg
js
or
cmp
and
leave
mov
lcall
dec
lods
popa
cmp
sub
clc
daa
jg
mov
pop
lahf
out
out
mov
ret
inc
push
xchg
leave
or
rolb
negb
hlt
mov
jge
popf
repnz
pop
mulps
out
inc
bound
adc
test
stc
push
sub
push
cmpsb
push
sub
lret
lods
pop
out
mov
loope
into
pop
dec
pop
cmp
mov
mov
inc
pop
int3
das
mov
icebp
addl
pushf
jp
adc
js
mov
cmovl
add
ljmp
cmc
or
pop
out
pop
cmp
insb
arpl
aas
dec
dec
pop
push
pop
insl
push
push
fsubrl
pop
insb
jmp
cmc
sbb
ljmp
jg
sbb
cmp
mov
pusha
out
js
ljmp
lret
dec
popf
sub
mov
loop
jge
stc
sub
outsl
mov
jo
jge
pop
xor
mov
mov
inc
lret
jle
cmp
outsl
ds
fnsave
lods
adc
incb
lret
jecxz
dec
xchg
pop
mov
cmp
scas
enter
dec
pop
mov
daa
das
into
dec
daa
or
pop
and
leave
pushf
push
mov
call
call
add
aam
inc
pextrw
add
daa
cltd
shl
mov
mov
inc
jns
add
mov
outsl
mov
decl
idiv
ljmp
test
jmp
ja
inc
pop
or
mov
call
mov
cmp
iret
lods
pop
xor
sbb
jle
push
jnp
nop
ljmp
pop
cmp
imul
mov
inc
cmp
sbb
aas
stc
pop
mov
sbb
lret
xchg
pop
jle
outsb
push
xchg
push
xlat
sbb
mov
insb
sbb
push
pop
jle
std
cwtl
mov
cltd
outsb
fdivrs
push
sbb
pop
cltd
psubusw
sbb
cmp
inc
dec
adcb
xchg
cmpsl
mov
test
pop
insb
rol
loope
arpl
jl
cs
and
mov
jmp
pop
and
sub
clc
dec
stos
mov
subb
fisubs
js
mov
cld
lret
pusha
icebp
adc
les
lret
mov
xor
mov
sbb
insb
test
dec
pop
ret
adc
mov
in
mov
and
shll
cmc
mov
aad
out
or
push
sahf
xchg
cmp
pop
je
lock
jg
or
rcl
jg
dec
xor
xor
lea
bound
in
dec
lock
xchg
xchg
in
mov
add
jle
sbb
push
jns,pt
dec
outsl
inc
mov
lcall
mov
mov
mov
sbb
add
leave
dec
xor
lret
pop
sbb
adc
cli
mov
outsl
cmp
repz
xor
bswap
stc
mov
jno
testb
pusha
mov
add
or
adc
dec
and
mov
cld
pop
dec
jo
popa
inc
test
movsl
jns
bnd
adc
lret
notl
fstl
rcr
cmp
mov
or
mov
pushf
daa
dec
iret
jno
fisubrs
adc
and
mov
es
jecxz
xchg
stc
imulb
js
out
sub
leave
nop
mov
xchg
pushf
adc
dec
inc
sbb
pop
push
mov
jl
imul
out
js
test
jecxz
repnz
xchg
mov
fs
xor
dec
cmp
and
mov
adc
sbb
mov
xchg
arpl
mov
or
rolb
fwait
testl
fst
dec
and
push
bound
ret
cmp
mov
push
push
test
add
popl
adc
push
mov
stos
into
out
push
ja
lahf
fcomps
push
test
mov
cmc
imul
ficomps
pop
pop
sub
xchg
adc
popa
sbbl
jp
pop
enter
outsl
add
mov
push
xchg
je
in
jl
shrb
mov
mov
xchg
jmp
mov
fmuls
mov
stc
data16
lahf
or
xor
jge
fs
or
adc
stos
add
into
imull
popa
adc
stos
push
jbe
mov
aas
cmp
and
je
lret
sbb
mov
aad
jbe
inc
clc
cmpsl
cmp
add
nop
test
shl
jecxz
sub
xor
or
jbe
dec
or
aad
sbb
aam
or
xlat
adc
fsubrs
sub
std
adc
stos
inc
stc
dec
sbb
sahf
pushf
cmp
xchg
lods
test
xor
icebp
jge
repz
sarl
push
pop
ds
push
stc
test
lods
pop
push
jle
adc
test
mov
dec
lds
xchg
push
xor
sbb
fistpll
or
addr16
or
pop
inc
into
push
sub
or
adc
pusha
frstor
dec
pop
xchg
add
push
cmp
mov
sbb
push
out
sub
push
movsb
sub
xchg
jbe
shlb
mov
inc
jb
les
or
mov
push
xchg
ds
inc
sbb
test
ja
stc
out
mov
jle
push
cmpl
pop
adc
aam
add
bnd
sbb
inc
lcall
negb
xchg
adc
sbb
mov
or
jg
ljmp
mov
leave
ds
add
sarb
pusha
mov
push
ljmp
ds
scas
jecxz
dec
jge
pop
test
sti
mov
push
push
dec
sub
test
xchg
xchg
pop
je
adc
sbb
cmp
std
rcrb
mov
mov
in
js
sti
push
out
into
shrb
leave
jmp
adc
or
push
daa
mov
repz
clc
je
js
mov
jp
push
pusha
repz
xor
stos
mov
subl
loopne
in
cmp
inc
sbb
outsl
mov
dec
fmuls
xchg
stos
push
in
ret
hlt
lea
lcall
push
movsb
gs
out
fistpl
mov
daa
inc
push
mov
pop
stos
pop
adc
orl
in
daa
push
stos
xchg
dec
adc
mov
adc
cmp
xor
clc
or
sbb
mov
dec
aad
xor
jle
rolb
imull
or
mov
jp
test
hlt
mov
or
jge
sbb
neg
js
add
sub
loope
adc
jp
test
cwtl
pcmpeqw
add
je
xchg
repnz
jae
pushf
push
push
pop
imul
sti
fs
add
push
xchg
jecxz
inc
jp
loope
fs
hlt
pop
sti
xchg
and
sar
dec
fcomps
push
incb
stos
cmc
xchg
or
and
mov
out
sbb
and
iret
and
sub
xor
loopne
pop
pop
or
and
fsubrs
outsl
dec
or
cmp
push
ljmp
jbe
pop
cmp
mov
xor
arpl
fisubrs
push
adc
cli
scas
pop
fsubl
adc
mov
outsb
testl
push
out
cmpsb
adc
in
mov
mull
cmp
push
outsb
and
out
popa
adc
subl
jg
inc
xor
or
bound
repnz
jnp
add
or
cmp
out
inc
out
pusha
add
adcl
mov
mov
into
dec
fstl
pop
in
lea
jge
sub
xchg
sbb
gs
loopne
jb
shr
cmp
icebp
insb
cmp
cmc
in
sub
cld
sub
rolb
popa
push
jmp
add
dec
clc
sub
adc
and
jg
dec
loope
push
sub
adc
test
es
ds
std
mov
into
sub
sub
pop
mov
add
aam
cs
pop
fidivl
pusha
jle
pop
and
jmp
pop
mov
cmovge
inc
pop
imul
mov
nop
psubq
ljmp
dec
sbb
cmp
mov
jns
jmp
jns
push
jp
xchg
mov
sub
fbstp
xchg
std
js
mov
xor
shr
push
in
xlat
pextrw
inc
sbb
jp
out
ss
jg
fnstcw
nop
lods
xlat
pusha
cs
sbb
scas
push
adcb
lea
adc
or
test
out
js
inc
out
cs
aad
mov
ja
dec
repnz
nop
mov
jns
push
cmovnp
pop
push
je
mov
dec
lret
or
pop
and
cmovp
inc
push
mov
and
popf
cmp
jle
and
fists
xchg
inc
aad
jbe
jmp
mov
fcmovne
mov
orb
fidivs
stc
cmp
add
pop
lock
cmpsl
adc
dec
add
sbb
test
jle
inc
and
lods
cmpsl
cmc
lahf
and
fimuls
jmp
cltd
movsb
pushf
and
out
daa
xor
js
cwtl
pop
test
mov
mov
idivl
sbbl
rcll
add
shr
out
or
xlat
pop
sub
mov
mov
xchg
ja
push
jno
add
aam
dec
push
ss
mov
sbb
clc
cli
mov
ficomps
clc
mov
int3
adc
dec
clc
xchg
push
jg
sbb
dec
js
dec
dec
sti
adc
lcall
aam
imul
pushf
jl
jmp
mov
insb
pusha
mov
imul
xchg
test
ret
sub
dec
mov
jmp
jge
stc
sbb
cld
mov
jp
xchg
jmp
xchg
sub
imul
adc
loop
lahf
cld
outsb
xchg
les
or
add
push
mov
sub
stos
lahf
or
inc
dec
mov
cmp
and
or
sbb
jge
jne
sub
clc
test
mov
test
jl
mov
daa
js
dec
mov
push
xchg
mov
dec
xor
inc
mov
gs
cmp
adc
pop
nop
in
adc
push
ror
ror
jmp
in
pop
aad
notl
shr
repz
xor
jp
data16
js
pop
and
cmpsb
fdivr
test
lea
cmp
cmp
int3
xor
nop
stos
inc
in
xor
ficompl
mov
xor
mov
xchg
stos
clc
adc
ds
faddp
hlt
mov
sti
xorb
test
pop
jge
xchg
dec
mov
or
adc
pop
pop
jnp
scas
pusha
mov
hlt
clc
push
pop
inc
xchg
into
pop
sar
stc
sbb
push
cmp
add
mov
sahf
pop
mov
pop
out
clc
mov
sub
es
xor
pusha
add
repnz
xchg
call
fstpt
in
arpl
into
stc
stc
sbb
in
xchg
in
inc
iret
adc
mov
sub
and
js
in
jmp
inc
insb
pushl
iret
out
sub
jnp
shrl
mov
jl
or
in
push
xor
fnstsw
hlt
cld
cli
push
sbb
and
or
out
jge
lret
push
push
ds
dec
xchg
jmp
movsb
xorb
ja
cmc
test
jmp
and
and
pop
sbb
add
je
mov
jle
inc
cmp
aad
xlat
dec
addr16
addl
jmp
adc
jmp
arpl
push
movsb
aas
cmp
test
andl
jle
outsl
and
cmp
mov
mov
fstl
into
popf
subb
sub
loope
out
mov
jo
dec
addr16
aaa
ljmp
adc
fisttps
fwait
push
pop
jns
xchg
mov
mov
int
mov
sbb
xchg
xchg
add
mov
dec
pop
mov
add
lret
lods
neg
mov
fdivl
aas
mov
add
jnp
mov
pop
jg
icebp
pop
out
scas
pusha
push
test
daa
jg
sarl
mov
and
xor
pop
push
inc
push
pop
mov
mov
in
mov
insb
out
and
stc
cmp
sbb
rorb
xlat
xor
shlb
mov
test
jl
dec
lea
int
push
sar
aas
adc
cmpsb
cmc
inc
cmp
add
mov
adc
pop
test
dec
test
divb
fcoms
or
and
dec
loope
out
iret
scas
mov
movsl
mov
xchg
xchg
rclb
test
mov
js
jnp
fsubl
pop
jge
call
pop
sbb
push
sub
xchg
pop
idivl
pop
addl
jmp
push
inc
outsl
clc
cli
adc
pusha
divb
popa
xchg
imul
sbb
cli
mov
test
mov
lock
lock
fmuls
loope
test
mov
loope
je
jne
jmp
mov
andb
add
jbe
xor
arpl
mov
enter
sbb
stc
mov
iret
imul
in
jge
popa
push
jmp
cmpsb
mov
or
pop
stos
jle
cmp
add
aas
inc
js
adc
adc
sbbb
xchg
pop
iret
test
lcall
jg
sub
or
popf
pop
jecxz
movsl
xchg
cmp
loope
je
sbb
mov
sub
inc
nop
rolb
cmc
or
mov
mov
add
jle
jns
lret
sbb
pop
pop
jbe
in
xchg
push
lods
or
bound
mov
js
mov
adc
mov
jmp
dec
fisubrl
gs
lcall
jns
arpl
sbbl
inc
movsb
sub
jo
inc
testb
loop
pusha
xchg
aad
push
scas
ud0
xor
adc
inc
addl
xor
pop
imul
inc
add
mov
in
insb
xchg
add
cmp
test
in
inc
lea
add
test
arpl
xchg
aam
push
cmp
test
or
enter
sbb
roll
test
loop
inc
push
out
jae
ja
cmp
cmp
out
jae
push
jbe
xchg
cs
add
lods
sub
in
cld
mov
mov
xchg
cs
in
outsl
inc
sub
mov
pop
jle
add
dec
lds
stc
divb
jns
sbb
js
cs
ret
xchg
push
jmp
mov
jns
and
negl
xchg
fimuls
addl
push
mov
out
xchg
mov
das
imul
sub
xchg
pushf
xchg
sbb
arpl
stc
fisttpl
sub
sbb
lea
dec
jnp
cmp
outsl
jae
cmp
lret
shrl
mov
dec
popf
xchg
popa
lods
ds
clc
and
lods
loop
notb
and
mov
and
sbb
mov
pop
cltd
inc
or
pop
fstpt
adc
push
mov
push
sub
lret
lods
test
xor
movsl
add
insb
sahf
in
rorb
mov
pop
mov
xchg
mov
or
jns
scas
push
xor
dec
hlt
pop
jle
test
or
push
xchg
xchg
cmp
ja
cwtl
jle
es
leave
cmp
xchg
rorb
push
inc
add
and
mov
sbb
adc
jl
xchg
mull
fwait
xchg
daa
cmp
subb
mov
cmp
lods
aam
inc
in
lock
sub
adc
cmp
test
lret
pop
jp
inc
dec
out
push
and
mov
push
sbb
mov
and
fadds
arpl
js
mov
push
inc
add
cmp
lods
push
inc
mov
push
dec
clc
dec
jo
in
inc
insl
rol
sti
fwait
mov
xor
lods
sbb
daa
shlb
imul
jmp
loopne
mov
lcall
imul
nop
dec
mov
push
or
imul
test
mov
cmp
add
jecxz
adc
push
dec
pop
repnz
mov
jl
jg
jge
dec
mov
jno
sub
aas
pop
cmp
pushl
popf
push
mov
out
jb
lcall
test
mov
sub
ds
add
jp
jmp
cmpsb
adc
push
scas
jo
mov
cmp
sbb
sbb
cmp
popa
leave
mov
sbb
filds
mov
jmp
subl
test
mov
sbb
jmp
and
sub
pop
add
or
fs
out
or
or
add
popf
dec
xlat
cmp
jae
bound
fidivs
out
iret
lods
call
popf
bound
push
sub
dec
loop
xchg
movsb
in
or
xor
pushf
mov
pop
arpl
aam
jb
imul
dec
imull
test
adc
mov
pop
adc
test
stos
jg
xchg
int
scas
mov
fmull
jp
cmp
insl
lea
jl
or
jp
pop
sbb
fimuls
jle
cmp
jns
in
sahf
cli
loope
dec
jo
inc
mov
rorl
inc
mull
mov
sarb
cld
div
inc
in
shrb
and
push
add
xor
lods
jle
mov
push
sbb
lret
push
mov
sti
sub
inc
cmp
jp
add
movsl
ret
lret
and
scas
in
add
adc
dec
add
and
pop
pop
pop
bextr
leave
aas
jno
loop
dec
jmp
cmp
sub
sbb
inc
js
movl
popl
clc
mov
sti
pop
pop
jns
xchg
orl
mov
inc
sub
jno
or
jnp
jno
cli
stc
cmp
add
xchg
mov
fistpl
jl
add
mov
cld
sbb
pop
jnp
push
sbb
dec
jno
adc
jle
pop
jg
mov
mov
jg
cmpl
inc
mov
mov
add
add
inc
fwait
sbb
sarb
pop
aas
jno
mov
push
notl
dec
loope
cmp
xchg
xlat
xchg
pusha
dec
mov
sbb
out
addl
out
inc
jmp
adc
fidivl
fwait
daa
adc
js
jbe
data16
mov
push
aam
out
cwtl
fiadds
fdivr
add
xlat
mul
dec
mov
gs
icebp
test
pushf
cmp
clc
sbb
sahf
insb
in
mov
cmp
mov
test
mov
mov
jbe
out
sub
rcll
cmp
and
out
lds
ss
cwtl
inc
test
dec
xor
jo
and
jnp
mov
push
inc
pop
mov
adc
jle
imul
or
inc
adcb
mov
fcoms
sbb
pusha
out
movsb
cmp
cld
in
dec
dec
mov
and
cmp
or
jg
push
push
repz
fs
daa
lcall
sub
jae
inc
jns
xor
ds
mov
shlb
repnz
in
sti
cwtl
or
int3
mov
add
adc
jmp
mov
sbb
xor
add
mov
mov
ror
clc
dec
in
cld
mov
outsl
test
popf
adc
xchg
cmp
push
stos
inc
fimull
cwtl
sub
aam
mov
jle
cmp
js
jns
xor
std
push
das
jg
shlb
cltd
pop
xchg
push
repz
push
leave
mov
mov
pushf
rcrb
cmp
push
mov
lret
mov
pop
dec
mov
push
jge
test
or
hlt
and
sub
out
xchg
xor
jl
cmp
cld
mov
outsl
test
sbb
sub
mov
inc
and
pop
mov
pusha
push
mov
sbb
insl
pushf
push
xchg
jmp
dec
popf
icebp
cmpsl
cwtl
cwtl
push
push
xchg
mov
jae
gs
inc
loop
cmc
lods
push
cmc
pop
ret
mov
int3
jge
xchg
lcall
sbb
push
cltd
cltd
lods
das
lahf
xchg
inc
inc
pop
loopne
xchg
push
sbb
sahf
int3
push
jecxz
pop
push
jnp,pn
data16
je
jp
lret
jge
push
icebp
xchg
push
lds
mov
sbb
push
push
mov
ret
lea
fiadds
push
cmp
or
sub
fsincos
jl
add
fsubl
cmpsl
ret
inc
enter
rorl
cmp
mov
sbb
ja
test
das
subb
sub
out
test
hlt
sti
sbb
rcrl
cld
gs
jmp
push
stos
xchg
aas
test
divl
js
inc
push
call
fmull
inc
sub
ja
xor
pop
scas
nop
mov
jmp
idivl
movsb
sub
push
mov
push
arpl
pop
popl
in
js
scas
ss
mov
out
imull
shll
out
xor
pop
mov
add
mov
icebp
inc
xchg
aad
add
cmp
sub
sub
sbb
mov
mov
insl
mov
cmp
imul
in
add
insb
mov
sub
or
fstps
fwait
add
sbb
jns
push
dec
add
fwait
packssdw
and
add
lea
adc
pop
jmp
inc
data16
das
fistps
xchg
sahf
leave
dec
jp
ss
cmp
xor
fcompl
inc
dec
test
mov
cmp
sbb
test
xlat
pop
jb
inc
xchg
dec
xlat
orb
and
adc
mov
mov
je
jp
jl
pusha
jns
cmp
cmp
out
pop
andb
push
cltd
cli
cmp
pushf
cld
popa
and
aaa
cmc
jecxz
shrb
aaa
fimull
inc
xor
pushf
ja
xor
mov
xor
push
fs
xchg
sbb
jg
mov
jb
sbb
idiv
and
push
inc
rclb
ljmp
out
fimuls
int3
add
jmp
pop
dec
xor
out
iret
cmp
aad
sbb
jns
cmc
inc
scas
test
loope
fsubl
mov
ljmp
cmp
fdivl
pusha
in
jg
rclb
sahf
inc
popa
iret
addl
movsb
pop
and
adc
js
jmp
iret
cltd
add
pop
ja
sbb
filds
outsl
and
dec
pop
add
mov
jle
out
int3
fmull
push
mov
test
mov
mov
sbb
dec
jns
imul
lods
jg
jp
decb
push
arpl
aad
imul
test
xchg
mov
add
je
dec
ret
cmp
nop
cli
cmp
mov
dec
or
dec
mov
or
pop
ljmp
sarb
cmpsb
xorl
imul
rclb
rorb
lods
movsl
pop
dec
fdivrp
push
nop
or
jp
testb
push
leave
cmp
orl
xor
push
mov
sub
fimull
fnstcw
sub
or
jns
repnz
dec
pusha
fwait
xor
out
or
sahf
jne
sbb
jl
ficoml
enter
push
sub
add
jmp
pop
sub
jle
sbb
addr16
mov
jmp
adc
jp
push
or
push
insb
imull
lods
sti
or
or
fimuls
and
jle
test
pop
xchg
or
scas
movsl
cmp
cmp
adc
movsl
pop
call
insb
jns
dec
push
in
test
loope
mov
out
push
xlat
or
or
or
xchg
jge
fidivrl
je
cwtl
jl
in
dec
or
or
adc
pop
mov
cmc
pusha
dec
lods
adcb
cvttps2pi
pop
mov
add
cmp
aad
js
cmp
pop
sub
test
push
push
adc
or
adc
dec
ljmp
xchg
out
pop
jle
cmc
ss
aaa
aas
jb
mov
adc
lods
mov
push
in
inc
mov
push
mov
iret
cs
call
sub
jnp
push
imul
aad
test
mov
or
pop
mov
out
roll
out
orb
jns
adc
jns
add
aad
cmp
pop
sbb
adc
clc
jl
gs
test
cld
enter
pop
jle
xchg
dec
pop
or
dec
push
adc
sbb
add
pop
and
jmp
pop
les
cltd
aas
mov
test
jb
fildl
dec
imul
fdiv
cmp
imul
cmp
push
aam
xchg
jp
jns
mov
inc
inc
mov
cmc
test
mov
in
xlat
xchg
outsl
enter
jp
mov
fstpt
jae
lods
mov
jb
js
test
mov
xchg
push
push
xlat
xchg
addb
out
outsl
loope
dec
dec
or
dec
xor
mov
xacquire
jns
sbb
in
push
sbbb
movsb
inc
in
aad
xor
inc
lea
sbb
jmp
dec
fxch
or
dec
ss
jge
pushf
mov
popa
aad
faddp
mov
bound
testl
roll
pop
add
jl
outsb
pop
xor
add
test
add
adc
in
stc
xchg
js
arpl
fsts
ret
pop
cmp
cmp
mov
fs
pop
test
pop
mov
jg
inc
orl
xchg
inc
sbb
ja
clc
adc
jnp
push
xchg
imul
loope
dec
jns
or
push
lea
mov
nop
les
aad
mov
aam
scas
pop
push
cmp
xchg
dec
movsb
or
or
ja
mov
mov
cmp
iret
fimuls
lods
mov
mov
or
mov
pop
int
hlt
pop
dec
cmp
dec
aad
push
aam
xor
movsl
pop
sub
inc
negl
mov
jno
scas
jmp
movsb
dec
cmp
fscale
imulb
adc
inc
ljmp
xchg
mov
jecxz
insl
jnp
or
jg
sbb
jnp
pop
ret
loope
add
adc
xchg
mov
xchg
inc
sub
pop
pop
clc
dec
jnp
sub
ret
in
xor
out
repnz
xor
aas
push
dec
inc
arpl
arpl
stc
jecxz
add
fwait
inc
inc
adc
icebp
cmp
cmp
sub
cmc
mov
sub
cmpsl
fs
stc
outsb
cltd
rcll
lods
movsb
aaa
sbb
push
sub
jmp
scas
cmp
movsb
aas
arpl
dec
sub
sbb
stc
test
sbb
inc
adc
mov
int3
add
sub
lods
mov
mov
cmc
dec
cltd
xchg
aas
mov
jp
movb
jg
popa
pop
cld
fld1
outsb
jp
cwtl
into
mov
imul
int3
sub
mov
jle
rorl
or
mov
inc
mov
xor
push
dec
add
mov
sarb
stc
mov
popf
jnp
sbb
test
push
sub
sbb
adc
cmpsb
fsubl
push
and
test
stos
rolb
mov
clc
sbb
or
add
or
dec
jmp
cmc
les
mov
xchg
in
lcall
xor
mov
stos
mov
mov
test
inc
lods
push
aaa
testl
or
js
pop
inc
popa
neg
nop
cmp
push
pop
add
sbb
pop
pop
fsubl
xchg
jp
jne
xchg
push
jle
popf
daa
fidivrl
fldt
xor
int3
test
xchg
stos
stos
arpl
leave
jp
ret
ja
movsl
gs
or
xchg
lds
adc
insl
inc
imulb
xor
and
xor
add
test
fwait
mov
cmp
test
push
repz
cmp
add
sub
or
sub
sub
out
loope
xor
out
xor
sub
adc
cmp
mov
pop
push
sub
cmp
jg
scas
addr16
test
mov
sbbb
add
outsb
mov
fidivs
push
scas
stos
add
in
adcl
aad
mov
pop
mov
iret
test
jecxz
int
ja
pop
xor
imul
dec
out
mov
add
sbb
fsubrl
rcrb
mov
mov
fidivrs
sub
inc
pop
imul
jp
xor
ret
shlb
mov
in
movsb
rol
add
testl
mov
cmp
sbbl
ja
sub
or
jbe
push
mov
cmc
xchg
test
xor
test
pop
xor
lock
js
das
jnp
xchg
jle
test
andl
dec
pop
popa
or
pop
out
push
dec
fdivs
out
cli
stos
jg
xchg
cmp
std
cltd
cmp
dec
loopne,pt
xor
out
imul
add
cmpsb
iret
mov
add
fdivrl
test
jnp
cmp
cmp
pop
sub
imul
insl
jae
stc
fidivs
or
dec
ficompl
push
add
jno
ja
cli
test
inc
das
popw
sbbl
pop
mov
sti
jle
adc
lea
push
or
add
pop
iret
test
push
sbb
mov
lods
sbb
test
xlat
pop
jl
test
cmp
iret
test
mov
nop
mov
or
mov
inc
push
repz
daa
pushl
stc
hlt
repnz
sarb
ret
nop
stc
std
int3
push
push
jnp
mov
add
mov
mov
push
mov
inc
sahf
push
or
pusha
mov
mov
mov
jmp
push
enter
mov
mov
sbb
hlt
and
sub
in
adc
loop
notl
push
jmp
push
fidivs
push
notb
xchg
imul
or
mov
filds
fwait
daa
jae
inc
pop
sbb
or
jae
lret
push
sti
sahf
jnp
or
xlat
and
push
mov
mov
xchg
dec
pop
jnp
mov
pop
add
push
je
push
ljmp
mov
arpl
repnz
inc
push
fcoms
fs
and
sbb
mov
or
fldpi
mov
cmc
xlat
inc
sub
cmp
dec
jge
or
and
inc
loope
out
pop
stos
jns
jnp
mov
andl
test
jmp
or
cmovp
cmpsb
adc
push
mov
outsb
lcall
mov
or
jbe
ret
fwait
xchg
outsb
sti
or
inc
js
push
les
sub
lahf
cs
iret
sbb
xchg
lods
jg
mov
pop
xchg
jns
add
cmp
jge
adc
add
ss
mov
js
jmp
shl
mov
dec
in
sbb
xchg
xor
roll
rep
or
clc
mov
push
es
sbb
fbld
gs
sbb
push
stc
sub
test
nop
repnz
gs
fnstcw
xchg
packsswb
cmp
jge
aad
inc
add
insl
clc
call
test
lret
cwtl
mov
es
mov
test
mov
data16
in
roll
mov
mov
inc
or
mov
inc
push
les
mov
aam
cmp
cmp
pop
repz
mov
stos
jl
std
mov
rcll
test
daa
sbb
incb
or
ficoml
fiaddl
nop
mov
test
add
clc
jp
cmp
add
xlat
sbb
dec
stc
ljmp
lods
pusha
pop
sbb
sbb
xchg
lods
inc
cmp
rcl
xor
mov
call
dec
stos
push
adc
outsl
mov
pop
mov
das
js
cmp
dec
sarb
jle
out
xorb
out
clc
out
aad
push
sahf
add
mov
sbb
mov
loope
sar
imul
and
or
fcoml
jecxz
sub
stos
aas
jl
aas
cmp
pusha
jp
jb
push
push
xchg
ret
cmp
notl
and
insb
push
jge
fdivrl
test
cmp
sahf
test
xchg
into
inc
push
jne
adc
jae
jmp
cmp
jb
mov
js
mov
es
mov
mov
aam
cmp
mov
fldenv
mov
dec
sub
dec
adc
stc
aam
add
dec
mov
mov
inc
test
jle
fsubs
out
mov
jge
mov
mov
sbb
sub
inc
cwtl
inc
icebp
arpl
cmpsl
orb
js
insb
out
ret
into
js
arpl
out
mov
outsl
lret
addb
mov
jnp
mov
loop
faddl
mov
outsl
pop
cmp
bound
jl
movb
or
pop
mov
sbb
inc
cmp
cli
sub
lods
xor
imul
pop
stc
dec
stos
sbb
xchg
pop
fildll
pop
dec
int3
outsl
jp
sarb
into
mov
dec
jge
cmp
xlat
or
mov
xchg
or
mov
or
js
jno
mov
jg
iret
inc
push
outsb
test
cmp
pop
les
jnp
sbb
test
iret
neg
ret
sahf
mov
mov
imul
call
mov
or
xchg
add
jmp
mov
or
cmp
or
mov
sub
mov
xchg
out
mov
rcrl
push
aaa
movsl
pop
mov
dec
out
arpl
outsb
test
lea
push
outsb
fmul
mov
sbb
cmp
xchg
dec
popf
aam
dec
or
addb
mov
mov
mov
mov
dec
test
xor
or
xchg
xchg
xor
xchg
jnp
cmp
outsl
jmp
mov
je
pop
dec
mov
dec
mov
outsl
push
mov
stos
xchg
mov
mov
xchg
push
add
dec
mov
adc
dec
sbb
in
sub
pop
cmc
cmpsl
iret
sub
lods
arpl
dec
in
shlb
mov
cmp
loope
stc
xchg
sbb
mov
hlt
or
loope
pusha
dec
out
filds
sub
sbb
mov
fwait
repz
dec
push
mov
mov
and
mov
inc
fwait
mov
mov
insl
cmp
sti
lret
decl
mov
mov
or
add
cmp
dec
imul
imul
sbb
cli
jge
cmp
jnp
mov
jge
cmp
jge
sbb
stos
mov
jno
pushf
pop
loope
cmp
push
imul
out
scas
in
add
in
ss
dec
call
ja
jecxz
out
sub
dec
int
push
push
fcomps
dec
fldt
add
ss
fistps
cwtl
js
inc
and
jmp
inc
add
scas
ss
sarb
jecxz
push
std
pop
cmpsl
pop
inc
mov
stc
xor
add
adc
lds
cmp
popf
adc
jmp
pop
xchg
pop
leave
jecxz
sbb
xor
mov
dec
sub
jg
add
mov
or
test
popa
out
inc
mov
add
xor
scas
mov
cwtl
shrb
leave
in
or
dec
pop
insb
cmc
shrl
pusha
dec
clc
and
cmp
xchg
and
add
sbb
int
lcall
pop
mov
pop
jns
pushf
cmc
mov
js
xchg
mov
fildl
into
js
addr16
lret
xchg
repz
pop
aaa
sarb
mov
in
cmc
or
ret
out
mov
sbb
fnstenv
ror
or
pop
mov
addr16
scas
and
roll
dec
pop
xchg
mov
jnp
outsl
push
std
or
push
sti
js
hlt
sbb
sbb
into
lods
xchg
js
cmp
mov
adc
in
xchg
lret
sub
or
jmp
mov
xchg
popa
jns
xchg
xchg
dec
pop
xor
sub
fcomp
sbb
fdivr
cmp
mov
pop
iret
repnz
dec
sahf
dec
dec
ss
addl
arpl
pop
jecxz
push
xchg
mov
jae
arpl
adc
xchg
sti
inc
out
add
scas
pop
mov
adc
cmpsb
xlat
fidivrs
push
ja
stc
add
pop
out
data16
jp
xchg
icebp
add
jbe
pop
cmpsl
mov
mov
mov
push
ret
sub
dec
xchg
mov
cmp
jo
cltd
lds
xor
pop
xchg
dec
je
out
xchg
addr16
mov
fmuls
add
xchg
cmc
cmp
shrb
adc
arpl
addr16
xchg
addr16
les
and
mov
outsl
addr16
cmp
or
addr16
mov
rcll
inc
and
ds
lret
dec
mov
daa
add
mov
cmp
mov
leave
mov
jnp
xor
sub
cmp
popa
dec
dec
cmp
push
push
sbb
push
pop
out
jg
mov
cltd
pop
jns
add
loope
mov
imul
add
jae
aas
fwait
cmp
inc
frstor
pop
mov
cmp
mov
data16
mov
outsl
cs
dec
into
jnp
mov
bound
data16
push
dec
pop
or
rcrb
or
sbb
xchg
jmp
jae
lcall
mov
test
aad
mov
mov
movsb
add
sbb
or
pop
pextrw
loopne
fwait
sub
add
int3
sahf
das
or
pop
mov
lods
pop
xor
xchg
stos
mov
pop
mov
pop
pop
fmull
notb
shll
mov
dec
xchg
leave
cli
ror
shlb
or
out
mov
ja
lret
nop
js,pt
out
mov
xor
push
cmp
or
fdivrl
sbb
add
xor
adc
adc
xchg
or
mov
jmp
pop
or
ds
jp
dec
aam
push
hlt
lcall
mov
mov
inc
cld
int3
hlt
les
push
sti
sub
sub
cmc
scas
inc
test
lds
mov
xchg
test
rorb
or
es
sbb
and
mov
jae
sti
pop
push
lcall
or
andl
aad
rolb
lods
sub
test
incb
fdivrl
sbb
mov
arpl
imul
inc
sbb
dec
push
mov
fcmovnbe
icebp
push
test
pop
xchg
jmp
mov
jnp
clc
dec
cmc
xchg
sub
sub
ja
cmp
into
arpl
mov
inc
ret
mov
daa
out
mov
mov
testl
daa
cltd
fwait
lret
pop
and
mov
mov
popw
xlat
push
cmp
mov
mov
cmpsb
ljmp
xchg
pop
push
adc
int
shll
xchg
push
push
jl
addb
or
jmp
fistpll
fwait
stos
sbb
jg
outsb
addr16
stc
outsb
cmp
sahf
scas
movsl
ds
mov
cmp
xor
cmp
sbb
push
clc
lods
jl
orl
cmp
mov
jns
test
nop
sbb
mov
in
test
aam
call
test
xchg
mov
pop
cmp
mov
push
xor
inc
das
les
and
mov
std
cmp
mov
jecxz
lods
test
das
rcrb
frstpm(287
jp
in
lock
lea
loop
cltd
xor
cmp
push
mov
cmp
mov
mov
cmp
adc
repz
in
pop
movb
addr16
or
pop
cltd
xor
lods
jmp
sbb
insb
dec
pop
push
gs
ja
jp
dec
cltd
adc
dec
and
fwait
sbb
call
lcall
sbb
cmp
mov
and
ljmp
or
xchg
mov
xor
mov
cli
xor
aaa
mov
mov
insb
js
dec
mov
jg
test
or
js
push
lret
mov
pop
js
ret
mov
push
fldenv
sbb
jle
sbb
ss
test
add
or
cmp
or
pop
dec
out
insb
std
out
xor
cmp
les
or
cmp
ret
xchg
iret
ficoml
xchg
xchg
sbb
pusha
pop
cmp
pop
fs
scas
cmpsb
rorl
loopne
loope
cwtl
ret
pop
dec
enter
mov
xor
jp
pop
jl
sbb
xchg
mov
test
dec
push
loopne
sub
push
je
icebp
mov
mov
mov
add
stos
lahf
fisubl
cmp
pop
fstp
jae
test
mov
ss
push
or
push
pop
fcom
sub
dec
inc
fnstsw
sbb
rolb
sar
push
cmpsl
sub
cmp
jno
pop
dec
cli
ss
mov
loopne
movsb
fnsave
notb
dec
insb
mov
out
out
add
jg
cmp
sbb
lock
lds
jl
in
icebp
lods
lret
adc
cmp
xchg
mov
cmpsl
push
adc
nop
std
lret
hlt
fiadds
ja
xchg
push
and
pop
test
rcrl
in
in
inc
mov
dec
xlat
jge
cmc
popa
popf
jo
add
fistpll
inc
test
subb
dec
push
test
scas
lahf
and
lods
sbb
sub
loop
fstpt
xchg
jl
sbb
mov
adc
lds
mov
add
daa
or
sub
mov
mov
fidivrl
xor
cwtl
push
inc
test
fildll
inc
incl
lds
test
test
mov
fnstsw
push
mov
dec
jl
sbb
dec
inc
xlat
mov
add
sbb
pop
lcall
cmpb
jge
sbb
push
das
enter
and
sbb
test
lahf
imul
cmp
pop
sbb
mov
js
mov
addb
add
pop
inc
test
aaa
movsb
and
mov
int3
adc
mov
iret
mov
aas
mov
jo
xchg
push
lods
push
mov
cmp
dec
mov
cltd
mov
test
shrb
aas
addr16
push
cld
jbe
sbb
add
push
inc
cmc
add
sub
sbb
pop
sahf
mov
add
adcl
lock
cmp
dec
daa
jge
cmp
test
mov
hlt
mov
fsub
mov
mov
into
lcall
jae
cmp
sbb
mov
inc
jl
not
xchg
test
sub
xor
mov
sbb
orb
cmp
xchg
loop
push
repnz
inc
outsl
add
popl
jl
sti
sbb
fildl
xor
xor
ret
jecxz
cmpsb
sbb
mov
adc
xorb
push
xlat
inc
rolb
pop
stos
enter
xchg
imul
test
xlat
pop
push
cmp
jnp
adc
lret
ss
mov
cmpsb
jle
arpl
clc
fs
pop
jns
push
cmp
sbb
lds
outsb
in
mov
and
flds
sbbl
imul
push
icebp
jmp
or
cmp
clc
mov
sub
add
pop
pop
cmp
cmp
fdivl
cmp
clc
xlat
jnp
dec
pop
adc
cmp
fsubrs
pop
es
ja
inc
jae
repz
add
and
add
cs
push
mov
fdivl
jecxz
outsl
mov
dec
push
lahf
push
mov
out
cmp
in
mov
andb
ret
pop
xlat
orb
jae
jg
sbb
incb
sbb
lods
cld
adc
arpl
or
add
lret
movsb
mov
add
fwait
mov
test
mov
iret
dec
lcall
push
pop
test
adc
add
mov
pop
mov
test
adc
fadds
nop
cmp
js
fmull
mov
filds
xorl
cmp
mov
mov
fdivrs
into
jns
pop
mov
mov
insb
jnp
lea
imull
xor
adc
imul
int3
sub
imul
mov
es
jmp
movsl
lret
cmp
cmc
dec
push
out
jmp
cmp
outsl
add
xor
insb
sbb
clc
es
cld
pusha
inc
rclb
test
push
cmp
and
scas
adc
dec
leave
add
cwtl
cld
nop
cli
repnz
dec
push
mov
jp
gs
or
sbb
aam
fwait
mov
in
jg
mov
dec
ljmp
imul
lea
incb
ljmp
mov
inc
xor
mov
mov
add
xchg
xchg
jmp
js
adc
xchg
mov
lea
cmp
loopne
out
popa
pop
or
xchg
or
jb
sbb
les
xchg
cmpsl
mov
negl
mov
pop
popf
js
and
sbb
push
lcall
popa
cmp
pop
cwtl
cmp
mov
dec
mov
jge
sub
clc
pop
cmpsl
dec
or
ficompl
stos
jp
mov
sbb
loopne
gs
dec
xor
sbb
mov
fisttps
enter
icebp
jmp
xchg
daa
mov
mov
cmpsl
jnp
ror
jo
rolb
mov
inc
in
lods
adc
or
pop
fmuls
cmp
jp
sbb
mov
loope
loop
mov
mov
or
and
mov
out
outsl
add
and
sbb
lods
hlt
dec
lock
fwait
in
subb
jns
jg
dec
or
cmp
repnz
mov
int
in
cmp
jmp
clc
out
push
std
js
test
push
std
mov
test
sbb
dec
gs
jle
loop
mov
incl
fstpl
ds
or
out
hlt
adc
js
in
dec
push
push
lret
pop
xor
pop
mov
das
sub
bound
cmp
mov
xchg
xchg
ja
arpl
arpl
int3
loope
mov
test
inc
stos
and
mov
imul
adcb
xchg
sarb
cmp
test
dec
idivl
out
xchg
bound
out
cmpsl
dec
loop
cs
hlt
cmp
or
hlt
mov
cmp
js
cltd
dec
fdivrs
fwait
push
inc
mull
jne
jb
cld
and
sub
xchg
pop
jp
cmp
inc
dec
push
shlb
popf
cmp
dec
lods
popl
cmp
sbb
lahf
cmp
sbb
add
loop
andl
rcrb
bound
test
pop
push
stc
or
icebp
popa
dec
jp
ds
pushf
xor
movsl
lods
sbb
pop
pushl
cmp
inc
cmp
sbbl
in
pusha
jge
je
js
sarl
sub
aam
mov
in
jle
ss
cmp
sub
xlat
and
imul
mov
jge
dec
lea
out
pop
enter
sbb
clc
cli
dec
call
mov
cmp
inc
mov
push
jo
pop
aaa
push
xchg
add
enter
cli
xor
mov
adc
pop
mov
insl
xor
cwtl
mov
fidivrs
stos
mov
int3
cmc
int
jle
aas
nop
sub
jnp
mov
jge
ficompl
add
stos
dec
cld
mov
daa
ljmp
pop
fwait
xor
neg
xlat
dec
sbb
in
sub
stc
add
lods
mov
test
inc
call
jmp
push
rorb
add
popf
stos
xchg
sbb
cs
arpl
movsl
pop
aad
or
fs
mov
loop
jle
cmpsl
adc
fildl
inc
push
fsubrp
or
xchg
mov
ss
aaa
and
aam
lahf
clc
xchg
clc
xor
cli
sub
mov
movsb
push
inc
jge
sti
sbbb
jge
arpl
movsl
gs
mov
dec
jae
setnp
bound
loope
mov
test
scas
cli
lahf
mov
das
ja
sbb
es
jge
inc
push
or
outsl
es
mov
mov
mov
lahf
cmp
pop
sub
add
lcall
jecxz
outsb
mov
fmul
sub
pop
jb
sti
clc
aam
cmp
sbb
leave
int3
sbb
lea
and
lods
inc
out
jge
repz
mov
jbe
cmp
mov
mov
bound
imul
adc
dec
mov
xchg
cld
inc
rcll
xchg
mov
xor
and
jg
jl
imul
jmp
test
mov
jbe
outsb
inc
pusha
sbb
cmc
cld
sbbl
ja
lock
test
inc
push
sbb
test
hlt
jo
or
into
and
mov
std
or
fcompl
cmp
jecxz
daa
mov
mov
add
test
leave
push
cmp
imul
nop
arpl
out
dec
sub
pushf
or
push
test
ja
stc
mov
jbe
xchg
repz
push
cmp
cmp
dec
cs
stc
mov
enter
lods
jmp
cmpsl
mov
mov
pop
imul
sub
fdivrs
test
xchg
in
sbb
cmp
pop
popf
pushf
or
sub
ss
or
movsl
aas
nop
test
push
dec
adc
push
jle
push
mov
test
cmp
add
outsl
popa
loope
adc
sbb
pop
pop
repnz
jg
mov
mov
or
dec
fisubs
push
and
arpl
les
in
inc
insb
mov
jae
cmp
pusha
lods
icebp
fcoml
arpl
cli
sbb
sbbl
repz
xor
scas
xchg
xor
mov
add
out
and
mov
adc
js
test
jmp
loope
repnz
dec
xchg
mov
dec
hlt
xor
fcompl
inc
xchg
orl
push
sub
and
pop
fldcw
sbb
lods
jmp
lock
xor
mov
add
xchg
mov
xor
je
push
pop
rcll
pop
adc
mov
mov
lods
imull
xchg
js
xchg
mul
lods
jle
inc
xlat
xchg
xor
add
dec
pop
mov
into
fidivl
jle
pop
js
jg
popf
daa
add
lret
mov
xlat
mov
out
leave
in
sbb
cmp
xchg
push
mov
leave
pop
mov
mov
out
xor
dec
lret
pop
test
test
hlt
inc
or
movsb
pop
rorb
pop
inc
movsl
sarb
test
jbe
ss
dec
or
mov
cmp
dec
sbb
mov
push
aas
sub
loope
lret
mov
enter
mov
imul
rol
daa
scas
add
inc
push
jg
mov
inc
cmp
or
ljmp
pop
insb
cmp
nop
movsb
pop
into
in
xor
ja
int
pop
rcrb
faddp
push
dec
sbb
push
jp
push
push
cmp
xchg
mov
cmpsl
dec
mov
pop
mov
cld
je
rorb
jmp
sbb
jg
jg
mov
lahf
or
addr16
jle
xor
adc
mov
shrl
mov
scas
mov
push
scas
stos
mov
push
cmp
dec
push
std
xchg
arpl
push
test
pop
popf
mov
ja
mov
sbb
ja
cmp
ja
pop
or
jne
ficoms
and
jg
and
mov
pop
push
push
push
sarl
imul
je
jmp
mov
stos
rcrl
ret
mov
mov
test
xchg
mov
push
ja
or
mov
add
sti
pop
loopne
in
mov
mov
test
cmp
in
and
pusha
loop
jg
and
repnz
leave
rorb
xor
cmp
ret
clc
adc
addr16
cmp
adc
js
or
loop
xchg
ret
adc
or
stc
mov
popa
cli
out
lcall
add
setbe
sbb
bound
xchg
daa
jmp
mov
in
call
xchg
js
sub
aaa
lahf
mov
push
mov
fimuls
ja
lret
fisubs
out
insl
clc
call
sbb
cmp
push
xchg
ljmp
aaa
in
es
xor
pop
add
push
shrl
psubsb
addr16
into
xorl
test
sbb
fldt
neg
or
adc
push
jns
push
lahf
cld
add
bnd
cld
pusha
mov
mov
in
pushf
dec
test
out
int3
mov
mov
add
decb
ds
js
cmp
or
data16
push
add
lcall
xor
add
or
mov
or
mov
jns
cmp
out
ss
add
daa
add
push
cmp
int
sub
jbe
xor
mov
add
inc
aaa
cmc
aam
dec
jo
test
shrb
add
mov
int3
mov
pushf
mov
cmp
std
sbb
cmpsb
shlb
cmp
dec
or
dec
adc
adc
and
leave
push
ljmp
lret
cmpsb
mov
ljmp
cli
or
pop
imul
in
arpl
mov
jne
mov
xchg
lods
sub
arpl
or
aam
add
jae
xor
add
in
xchg
call
dec
pop
call
jle
outsl
xchg
pop
and
ja
mov
pop
ret
lods
pop
or
mov
and
xor
pop
inc
inc
cmpsb
adc
lods
loopne
fwait
lds
icebp
jle
pop
jbe
sbb
pop
xor
fisubrs
fdivs
leave
lcall
pop
lods
cmp
imul
mov
and
dec
lret
int
testl
test
mov
mov
sbb
cltd
jl
sbb
cmp
mov
ds
adc
jp
xchg
cmp
cs
adc
jne
cltd
repnz
in
push
popa
pop
inc
decl
ljmp
in
js
hlt
and
mov
js
sbb
push
cld
jg
xor
push
cmp
cmp
cmp
or
gs
xchg
mov
mov
sbb
sbb
or
jmp
leave
test
add
push
jecxz
outsl
jae
mov
cltd
mov
inc
pushf
or
iret
imul
dec
xlat
test
js
inc
push
pop
or
xchg
mov
stos
mov
dec
pop
loop
pushf
mov
sbb
fsubrs
jmp
lds
and
dec
adc
cmpsb
xor
mov
out
cmp
scas
inc
xorl
dec
aad
outsl
out
mov
ds
loope
add
mov
xchg
loope
loopne
pop
ficoml
inc
out
xor
lret
imul
and
orb
out
pop
jg
dec
and
iret
jle
rorb
or
movsb
or
ja
test
rolb
push
iret
fidivrs
data16
cld
je
mov
cmp
or
hlt
or
xlat
shl
aas
outsl
mov
clc
inc
cli
insb
adc
xchg
loopne
cmp
in
repz
inc
lea
xchg
xor
repz
pop
pop
xchg
imul
cmp
jl
inc
cmp
mov
xor
loop
repz
clc
insb
fldenv
test
out
push
fcmovnb
lcall
pop
sub
stc
push
pop
mov
scas
repz
aaa
inc
fistpl
addr16
fwait
mov
scas
rorl
mov
repnz
aam
push
and
call
mov
push
sti
das
cmp
jnp
or
add
and
stc
iret
add
cmp
adc
test
testl
adc
sub
inc
xchg
jl
pop
out
lahf
pop
jo
mov
imul
shll
ficoms
lock
push
loopne
outsb
rcl
pshufw
int3
in
adc
cltd
shrl
lods
int3
pop
jne
enter
cmp
fwait
cmp
cltd
clc
fstl
and
fsub
cmp
xor
sbb
leave
cmp
pop
mov
inc
idiv
dec
movsb
lret
jae
mov
pop
andl
fcoml
mov
xlat
es
insl
pop
cmp
cmp
in
fsubr
xchg
loope
xchg
cmpsb
push
sub
mov
sti
push
pop
pop
pusha
jg
mov
ljmp
add
ds
cmp
ja
xor
loope
lea
and
ljmp
inc
mov
dec
adc
xchg
and
ja
jp
addl
clc
enter
pop
enter
jmp
test
movl
jae
xchg
notl
daa
stos
mov
test
cwtl
test
push
xor
xchg
dec
cmp
pusha
dec
js,pt
ljmp
or
arpl
sbb
bsf
dec
adc
fsubrp
dec
pop
bound
das
out
jmp
mov
adc
cmp
mov
cmp
cmc
pop
push
mov
add
adc
xchg
cmp
or
fdiv
incb
popa
xor
xor
pop
mov
cmp
sti
jle
jo
mov
loopne
push
cltd
pushf
adc
dec
and
imul
inc
pop
pusha
loope
jge
jmp
jns
cmp
stc
jecxz
inc
sti
sbb
and
and
cmpl
or
lods
sahf
push
imul
gs
inc
or
cmp
jnp
cmp
arpl
cmp
mov
test
push
lds
pop
arpl
push
clc
xchg
xchg
mov
inc
rorl
cmp
out
orl
adc
ret
lahf
in
int
pusha
out
daa
xchg
jno
pusha
pop
rorl
push
test
bound
cwtl
cmp
sbb
out
popl
xchg
fimull
cmp
mov
xor
xchg
xor
gs
xchg
xchg
repz
push
in
xchg
xchg
addr16
stc
pop
cmp
mov
movsl
lret
cmp
sub
adc
jb
pop
and
addr16
cmp
in
addr16
cmpsb
mov
into
ja
ficoms
push
lea
adc
xlat
das
data16
xor
adcl
sti
pop
sbb
or
cltd
outsb
sti
scas
adc
negl
cmpsb
xor
pusha
dec
add
notb
clc
mov
dec
and
cmp
addr16
adc
cmp
fdivl
lock
dec
push
cld
mov
inc
cmp
pop
notb
mov
mov
sbb
push
insl
dec
or
sti
push
mov
sbb
xor
in
pusha
or
addr16
jl
mov
imul
sbb
and
mov
mov
mov
cmp
pusha
push
icebp
rcrl
test
stc
sbb
mov
jl
sbb
lea
pop
addr16
out
sti
nop
inc
push
orb
clc
and
mov
jge
insl
cli
mov
je
pushf
push
incl
jo
testl
pop
cmp
jl
and
xlat
sahf
dec
leave
mov
repnz
outsb
imul
bound
into
push
and
mov
arpl
mov
xor
test
jle
insb
dec
adc
or
mov
imul
add
mov
scas
ja
test
adc
out
imul
pushl
inc
or
fs
es
push
xchg
jnp
outsb
into
dec
cmp
out
dec
mov
stc
push
nop
mov
jecxz
orl
shll
sbb
bound
mov
andl
push
jmp
push
add
jnp
adc
popf
arpl
xor
xlat
sub
in
jae
test
xor
cmc
popa
and
insb
es
jns
cmp
sbb
lods
or
test
push
data16
stc
int
mov
adc
mov
aad
sti
sbb
dec
fildl
xor
push
in
mov
arpl
cmpsl
into
std
cmpb
ljmp
jle
clc
js
and
mov
stc
clc
add
jmp
repz
mov
xor
pop
dec
add
fisubl
adc
into
sti
jl
out
fwait
or
enter
xchg
pop
daa
cmpsb
int3
fsubp
or
jl
mov
add
xchg
pop
push
leave
into
inc
pop
inc
jle
daa
lret
pop
cmp
mov
sub
cmpsl
mov
test
rorb
pop
stc
iret
mov
scas
mov
adc
cmpb
fstps
cmp
push
pusha
push
iret
dec
cmpsb
mov
movsb
xor
mov
jg
push
outsl
xor
cmp
jmp
mov
mov
pop
in
push
mov
vcvttpd2dq
stos
negl
pop
arpl
std
cmp
adc
xor
pop
cltd
mov
lret
stos
jns
sub
shr
inc
push
rcpps
leave
push
sbb
ja
andl
add
inc
sti
mov
cmp
cli
lahf
adc
cmp
or
fxch
mov
fs
mov
sbb
js
mov
sub
sbb
movsb
lock
push
pop
sub
sbb
push
and
repz
movlps
lds
jp
imul
sbb
add
sub
hlt
aas
cs
fwait
sbb
mov
sbb
fiadds
repz
mov
out
mov
sahf
mov
imul
mov
das
jecxz
adc
lcall
mov
out
test
adc
cmpsl
les
sbb
pop
daa
pop
xor
in
lds
pusha
cmp
out
es
leave
lahf
cmc
fnstenv
sub
test
mov
clc
dec
fpatan
xchg
dec
pop
push
sbb
addr16
int3
cld
insb
cmpsl
ja
cmp
int3
lcall
pop
les
int3
cmp
ljmp
cs
cmpsb
mov
xchg
in
sbb
push
jecxz
xchg
add
add
inc
shlb
gs
cmpxchg
stos
in
mov
dec
push
rclb
sub
int3
sbb
push
cltd
test
dec
mov
hlt
add
test
xchg
sub
adc
jnp
push
aad
ljmp
ds
add
out
iret
dec
pop
clc
push
mov
js
xchg
lods
pop
cmp
sub
xor
popf
subl
mov
and
pusha
popf
stos
or
testl
rcrb
pusha
orl
jno
sub
push
pop
insl
test
add
jnp
cltd
lcall
daa
dec
jp
pusha
xor
lcall
mov
ds
jg
push
or
push
cld
xlat
data16
sbb
jge
popa
add
jg
js
cmc
in
ja
jmp
dec
cmpsb
xor
xchg
push
jecxz
sti
mov
ja
cmp
call
outsb
test
into
add
test
xor
sar
jns
xchg
mov
sbb
outsl
js
enter
xchg
mov
xchg
sub
outsl
popa
or
out
inc
xor
les
sbb
scas
imul
test
sbb
test
popa
popf
je
xchg
rolb
push
mov
mov
cwtl
cmp
xchg
popa
mov
dec
xchg
out
shlb
mov
pop
or
outsl
xchg
int3
sbb
jle
push
or
mov
test
lar
inc
outsl
mov
ret
ljmp
cli
pop
mov
inc
dec
out
adc
xor
les
adc
aas
mov
test
js
aam
xchg
jae
push
add
repnz
cwtl
pop
jno
push
push
mov
jnp
fs
faddp
iret
fwait
push
pusha
sahf
data16
cli
pusha
rcrl
mov
xchg
mov
in
push
fildl
inc
push
movsl
xlat
jmp
rolb
lahf
sub
orl
int3
mov
scas
pop
adc
cmp
lret
cmp
dec
out
sahf
xchg
jmp
pop
ds
or
outsb
fidivl
xchg
xor
pushf
rorl
jl
ret
mov
or
mov
out
int3
test
insb
or
sub
mov
add
in
les
push
nop
insb
data16
popa
pop
mov
mov
iret
lods
cmp
repz
lds
xchg
stc
test
jmp
adc
mov
or
testl
xchg
and
test
and
mov
mov
push
adc
insb
adcb
pop
or
pusha
icebp
clc
lock
jns
pushf
aam
jp
arpl
nop
add
mov
mov
mov
loopne
test
loope
add
insb
cmp
mov
sarl
jg
mov
mov
pop
jg
in
movsb
cwtl
popa
or
sbb
std
pop
cltd
jg
add
mov
fistpl
pop
xchg
jb
js
jne
xchg
loope
add
imul
cmp
push
cmp
test
dec
mov
sbb
adc
and
leave
pop
sar
cmp
lods
fs
mov
or
lods
insb
mov
ljmp
add
mov
mov
dec
push
mov
push
lods
add
gs
push
adc
xchg
dec
jb
sbb
cmp
dec
push
or
loope
sub
cwtl
mov
cmp
out
ja
adc
cmp
xchg
inc
into
cmp
mov
and
pusha
je
mov
loope
loopne
jo
xchg
cmc
dec
aas
ret
loope
mov
or
pop
cmp
push
mov
adc
jnp
or
fs
mov
adc
cmc
out
inc
dec
pop
mov
cmp
scas
fwait
sbb
xor
xlat
insb
scas
popa
sbb
sbb
sbb
fistps
mov
scas
push
add
add
cmc
pushf
mov
pushf
sarl
pop
scas
jl
mov
jge
rol
push
pusha
ss
iret
negl
adc
adc
cmc
xchg
mov
xor
sarb
fisubs
arpl
std
js
popf
xchg
in
inc
testl
or
out
dec
adc
test
dec
mov
int3
pop
lcall
in
shll
inc
daa
mov
lea
sbb
mov
nop
ja
pop
push
int3
push
hlt
int
cmp
lods
and
lds
push
out
jbe
lea
push
imull
cmpsl
imul
dec
movl
lahf
cmp
cmp
out
cmp
ss
lahf
mov
aad
ljmp
inc
stc
push
pop
cmp
test
jge
cmp
add
cmp
daa
cld
outsl
gs
dec
adc
out
fstps
mov
pop
sbb
cmp
add
or
mov
pushw
adc
mov
lcall
mov
test
ret
iret
cmp
jle
mov
vpperm
es
imul
lcall
xchg
andb
lea
jge
adc
mov
imul
cmp
mov
inc
adc
lds
lods
fmull
adc
arpl
idivl
cmc
sbb
adc
fs
adc
jmp
lahf
adc
js
sarl
into
lock
mov
mov
or
xchg
pop
aad
and
pop
int
nop
xlat
ret
aas
loope
pop
xor
inc
inc
cmp
ja
fs
lcall
and
arpl
cld
popa
or
or
pop
scas
lret
mov
mov
sbb
iret
dec
xchg
jo
enter
fidivs
mov
lcall
sub
fistl
fdivl
js
push
pop
lahf
in
aad
xlat
sbb
jns
pushf
pop
ds
dec
ljmp
pop
sbb
cmp
ret
pushf
dec
sub
jg
pop
and
pop
mov
sub
jle
ret
push
es
dec
push
cmp
jnp
fdivs
jb
sub
mov
popf
fistpll
jmp
sti
test
or
in
lahf
cmp
incl
jnp
xlat
push
pop
test
and
pop
aam
add
ret
jnp
test
adcl
push
orl
cmp
mov
pop
adc
out
cmp
dec
push
aam
aaa
cmp
push
mov
addr16
mov
ja
jae
movsl
aas
mov
inc
pop
jp
mov
int
hlt
add
in
adc
push
mov
mov
mov
pusha
mov
movq
es
cmc
int3
inc
jge
cmp
dec
call
cli
pop
adc
subl
or
dec
mov
js
cwtl
cmc
fwait
mov
or
add
push
sbb
arpl
js
pop
sbb
push
testl
aad
pop
xor
jo
scas
jge
push
pushf
test
dec
dec
hlt
test
or
mov
push
or
stc
lret
pop
fstpt
sbb
sub
pop
stc
xchg
int
jns
push
in
cld
push
push
add
and
adcb
pop
jg
dec
cmpsl
xchg
adc
or
test
dec
dec
and
scas
lret
fnstenv
cmp
aaa
or
mov
dec
dec
outsl
lahf
sarl
push
mov
lahf
mov
add
cmp
dec
lea
inc
add
rorl
push
out
mov
mov
dec
sub
adc
adcl
push
out
xchg
aas
push
mov
inc
pop
test
cmp
js
inc
xchg
cmp
adc
daa
cmc
sbb
mov
adc
fst
rolb
adc
push
xchg
test
push
stos
mov
arpl
out
js
sbb
sbb
pop
dec
shll
mov
cmp
pop
mulb
pop
setae
stc
shrl
cmpsb
jp
cmp
push
push
xchg
das
iret
outsb
dec
icebp
enter
nop
ljmp
push
mov
popf
push
jmp
addl
adc
and
cli
popf
shll
or
sub
addl
jne
and
cli
hlt
sbb
lcall
push
push
sub
in
fwait
and
or
mov
lds
loope
jle
pushf
call
sbb
adc
mov
mov
cltd
xor
cmpsb
cli
dec
outsl
cli
push
js
les
jb
lahf
mov
sbb
loopne
mov
mov
lds
cmp
mov
cmp
in
add
adc
sub
dec
push
into
popf
fst
popa
flds
jl
test
and
pushf
jns
mov
add
xchg
rcll
mov
imul
sarl
fnstenv
sbb
jae
jnp
adc
cmp
lcall
xchg
ja,pt
dec
test
mov
int3
pop
inc
pushf
jae
out
aaa
pop
cli
iret
lds
lods
dec
add
and
push
jo
aas
rorb
mov
cmp
rcrl
divl
push
push
sbb
andb
adc
pop
sbb
ja
fidivrs
xor
sub
pavgw
xor
inc
sbb
mov
test
and
imul
outsl
add
fwait
dec
mov
sub
xlat
fcompl
adc
loopne
fldcw
push
fwait
movsl
dec
xor
rorl
sbb
mul
cmp
imull
ds
pop
inc
mov
mov
neg
xchg
cmc
je
mov
add
test
fstp
cmp
pop
push
sbb
and
mov
dec
pop
divl
cltd
cmp
pop
stc
mov
rcrl
scas
and
push
into
cmp
jle
xorb
or
clc
lea
ret
cmp
fnclex
or
dec
ljmp
and
cltd
xchg
pop
xor
fistpll
fimull
add
ret
aaa
addl
scas
sub
add
pop
jae
sub
lds
dec
and
xchg
mov
cmp
test
inc
mov
dec
or
cmp
ds
inc
cmp
cmp
out
jge
fadds
lds
aad
fsubrl
dec
jg
out
inc
dec
xlat
clc
mov
push
test
fmul
jg
shrb
fstpl
inc
xchg
pop
dec
mov
mov
mov
ljmp
fisubrl
jnp
test
stc
test
xchg
add
xchg
aad
and
jo
push
bound
mov
ljmp
adc
xlat
into
xchg
xlat
fcmovb
imul
add
inc
mov
jle
inc
sbb
xor
add
call
cmp
test
jo
jp
imul
aad
add
scas
mov
popa
and
loopne
mov
inc
mov
or
test
daa
fists
ret
mov
stos
jmpw
sub
mov
enter
shl
out
mov
mov
fmul
js
mov
inc
repnz
andl
ret
add
mov
orl
js
rcll
push
loope
push
jle
inc
insb
pop
les
xchg
cld
xchg
popa
sbb
pop
stos
or
test
push
inc
xchg
and
pop
ficomps
mov
pop
xchg
mov
sbb
mov
test
jb
push
push
add
sahf
inc
sahf
mov
leave
push
repnz
test
inc
js
imul
loop
cmc
xchg
xlat
fidivl
pushl
cli
or
rorb
push
adc
nop
and
xchg
stc
jnp
adcl
test
inc
clc
cmpb
fldt
inc
dec
adc
cmp
bound
xor
cmpsl
push
cmp
rorb
pop
aas
lock
daa
push
xchg
ljmp
mov
xor
xchg
inc
mov
cmp
cmp
test
dec
test
cmp
test
push
jmp
mov
jg
cwtl
pop
push
mov
fnstcw
shl
push
sbb
push
in
fdivrl
push
test
ds
or
xor
sub
inc
out
out
add
imul
inc
cmp
mov
cmp
or
cli
mov
out
push
clc
fstl
pop
jg
ja
cmpl
cmc
xchg
sbb
jae
outsb
shlb
add
scas
fistps
insb
addb
xacquire
daa
jae
push
push
mov
subl
pminsw
sahf
adc
cld
jg
nop
xchg
frstor
push
lods
inc
adc
or
subb
in
lods
cmp
jmp
push
lods
inc
push
dec
push
mov
jnp
inc
in
mov
cmc
pop
pop
inc
cmp
insb
xchg
dec
divl
sti
sahf
dec
clc
jg
test
leave
scas
cwtl
mov
hlt
loope
fsubrl
xor
inc
add
pop
cld
xor
push
es
or
cld
mov
sbb
out
incb
lret
xchg
mul
jnp
jmp
test
or
jge
imul
mov
inc
push
ret
insl
cld
add
and
mov
pop
imul
jp
ja
push
fs
add
repz
jecxz
xchg
addr16
xchg
push
daa
xchg
xlat
pop
or
and
mov
adc
aad
out
jge
pop
shll
mov
xorl
mov
mov
mov
stos
jl
pop
stos
out
in
xor
js
in
xlat
pop
outsl
jne
lods
add
cld
clc
mov
stos
out
aam
test
or
test
mov
insl
pop
lahf
jnp
sbb
std
push
lods
cmp
gs
sub
sub
or
jne
cmp
or
arpl
sub
cmp
mov
fadds
inc
in
outsl
cwtl
inc
or
call
fsubrl
fistl
push
rolb
seto
ss
push
cmpsl
fwait
jle
cli
fwait
xchg
xor
mov
add
outsl
pop
roll
ret
adc
pop
jl
mov
addr16
adc
stos
add
sbbl
cmp
add
sub
insl
mov
mov
fwait
xchg
push
or
js
or
sub
lahf
dec
nop
xchg
js
xchg
cmp
cwtl
imul
cltd
sbb
outsl
xchg
push
fs
adc
push
jns
ss
in
hlt
add
mov
in
push
inc
aad
mov
push
mov
icebp
push
push
sbb
std
cmp
or
ror
mov
test
repnz
adc
lahf
xor
sbb
dec
loop
cs
push
bound
cmp
dec
in
jo
xchg
push
sbb
cmovae
fldcw
push
dec
dec
add
or
insb
lret
dec
in
push
sbb
sub
mov
test
jmp
cwtl
fwait
lods
sbb
int3
inc
mov
cwtl
mov
jmp
inc
push
cmp
sbb
iret
xlat
mov
cmp
add
cmp
scas
mov
in
in
push
loop
cli
adc
outsl
adcb
mov
leave
rcll
shl
lret
mov
jl
mov
sub
pop
ja
pop
mov
lret
stos
sti
cmc
test
out
sbb
mov
movlps
inc
push
push
movsl
or
fcmovbe
add
js
mov
in
pop
jno
out
mov
jae
jmp
xchg
and
pop
outsb
and
decl
test
arpl
pop
jle
mov
in
int
sub
jbe
pop
testl
sbb
xchg
mov
cs
cmp
stc
add
sbb
cmp
mov
cmp
cmp
jl
cmp
sti
push
jo
std
int
js
push
mov
insl
hlt
jecxz
into
push
cld
test
gs
out
adc
cmpsl
stos
push
adc
pop
loope
insl
mov
cmp
xchg
or
fidivrs
xchg
sbb
jl
sbb
pop
push
jnp
out
cmpl
test
jno
outsl
jae
pop
lret
cs
jmp
rcll
push
sarl
jne
rorl
mov
jmp
lahf
fildll
adc
xchg
or
loope
mov
dec
add
fdiv
ficompl
test
cmpb
pop
scas
xchg
inc
imull
negl
add
jge
mov
adc
sbb
mov
mov
xor
xor
fwait
add
mov
aaa
jo
ljmp
ss
nop
adc
imul
insl
cltd
jnp
mov
mov
dec
jo
or
pop
in
push
cli
js
shl
and
add
push
shll
clc
scas
and
mov
cmp
stc
jnp
mov
js
or
add
xor
jmp
mov
lods
incb
fldcw
or
in
js
fnsave
jnp
or
js
cmp
loope
imul
movsb
xchg
sbb
dec
jae
roll
mov
xchg
leave
cmp
idivl
jle
fwait
clc
xor
cmc
shlb
inc
push
jns
xchg
andb
adc
iret
adc
push
shlb
add
pop
jp
mov
out
and
push
or
out
jno
mov
out
push
mov
inc
jb
scas
mov
jae
jl
outsb
and
cli
mov
dec
xor
sbb
or
out
aad
cmc
rorb
icebp
mov
xchg
inc
cmpl
mov
xlat
cs
cld
call
divl
sbb
jl
mov
insl
xor
imul
dec
jp
pop
out
and
stc
int3
fwait
in
push
cmp
cld
and
pusha
mov
cmp
xchg
pop
pextrw
add
cli
push
pop
push
cmp
fidivrs
mov
lock
fldl
xchg
cmp
inc
jmp
jecxz
stos
mov
adc
cli
mov
scas
in
addr16
xchg
mov
pop
xchg
jmp
push
jno
sub
xchg
cmp
and
xorl
xchg
ljmp
mov
lret
inc
cmp
je
jo
push
cmp
cltd
outsb
dec
icebp
out
push
mov
js
inc
add
jp
ljmp
popf
popa
lret
outsl
stc
xor
or
cmpl
lods
sti
mov
hlt
das
cmp
add
fiadds
mov
xchg
or
aad
lahf
xchg
loopne
imul
inc
test
sbb
add
xchg
insb
clc
lcall
cmp
sbb
ljmp
jmp
lea
push
repz
aas
and
dec
aad
jg
popf
pop
stc
xchg
stos
ja
or
mov
mov
cmp
mov
out
out
pop
rcll
stc
cmp
test
icebp
pop
shrl
orb
push
aam
sub
lock
adc
push
lods
inc
dec
data16
lret
imul
mov
xor
mov
in
mov
dec
fsubrl
cmp
jp
or
cmc
jnp
jmp
imul
cmp
mov
mov
dec
cmp
inc
sbb
test
pop
adc
and
mov
push
jo
js
push
and
dec
mov
jle
or
sbb
or
das
scas
sbb
dec
add
mov
mov
cmp
cmpsl
mov
mov
jno
jo
and
and
mov
xchg
xchg
sub
outsb
mov
dec
leave
mov
xor
ja
or
js
inc
push
push
es
pushf
push
sbb
loopne
cltd
push
inc
add
pop
out
gs
xor
xor
or
or
fistpll
stc
nop
addr16
push
mov
out
inc
imul
xchg
mov
mov
mov
sub
pop
clc
cmovae
sub
xchg
mov
add
jbe
imul
mov
pop
int3
loopne
les
clc
inc
dec
stos
pop
xchg
mov
mov
sub
loop
adc
pop
mov
pop
movl
sbb
incb
xorb
out
call
out
je
sbb
inc
in
jnp
imul
subb
and
out
test
push
inc
loop
inc
xor
or
popa
sub
cmp
mov
aam
xchg
mov
pop
cmpsl
push
sub
cli
inc
mov
pop
add
shll
faddp
std
ljmp
xchg
cmp
cmp
jb
call
iret
sub
mov
stos
jp
sbb
mov
cmp
test
sbb
fwait
inc
jp
adc
fs
or
sarb
aas
clc
rolb
push
or
push
cli
insl
pop
leave
sub
scas
addr16
sbb
stc
mov
xchg
jmp
sbb
push
push
cmp
mov
call
sub
in
push
pop
out
cmp
push
push
ss
es
dec
pop
xor
testl
popa
jle
and
mov
ja
addr16
pop
clc
xor
jp
pop
sub
sahf
adc
cmp
stos
lods
and
jns
mov
gs
pusha
or
int
cmp
loop
adc
loop
push
nop
dec
mov
iret
mull
pop
cmp
push
push
xchg
aas
fimull
in
cmpsb
enter
daa
movsb
xchg
insb
cmp
xchg
fwait
movsl
and
dec
daa
push
sbb
xchg
fnstsw
jns
pop
faddp
cmp
xchg
cmc
jl
imul
jl
cli
push
mov
cmp
dec
inc
cli
push
push
imul
jg
jg
mov
fdivrs
xchg
cs
ss
dec
addr16
lea
jmp
inc
movq
add
jecxz
add
pop
pop
movsb
outsl
out
ss
test
movsl
pop
aaa
out
mov
mov
out
negl
pop
cmp
lods
mov
pop
xchg
cmp
cld
dec
push
popf
nop
nop
mov
xor
aas
into
cmp
cs
test
xor
xchg
mov
xchg
pop
jg
pop
pop
push
scas
sti
mov
or
pop
jbe
adc
stos
addl
popa
mov
pop
xchg
mov
jns
pop
popf
pusha
xlat
lret
jle
jnp
js
pop
imul
pop
mov
clc
cld
adc
into
js
mov
sti
cwtl
test
lahf
jno
and
dec
mov
inc
js
pop
jmp
addr16
test
popa
cmp
xor
call
lahf
push
test
inc
sbb
pop
add
add
cmpb
pop
jg
push
adc
popa
clc
sbb
test
ret
jns
mov
jo
data16
rorl
scas
mov
xor
push
ljmp
mov
out
sbb
inc
addr16
push
jle
push
mov
popa
dec
mov
mov
stc
ja
mov
cmpsb
or
popa
pusha
xor
mov
cmp
pop
xchg
dec
mov
imul
cmp
sub
push
mov
dec
orl
sar
in
sbb
lods
add
iret
dec
mov
clc
cmp
pop
gs
mov
ds
push
or
lret
fisttpll
jbe
jmp
add
push
xchg
sub
push
std
orl
jl
pop
adc
jmp
add
cmp
pop
es
scas
pop
imul
mov
cmp
cli
sbb
sbb
cmp
add
jp
xchg
cmp
xadd
xchg
adc
lock
mov
mov
xchg
lret
inc
mov
mov
cmpsb
jbe
inc
repnz
insb
loopne
or
mov
fldl
dec
inc
jmp
xor
or
daa
lock
and
mov
or
pop
inc
fdivrp
xor
and
jnp
xor
fcoml
sbb
cmp
clc
sbb
cmp
adc
rorb
repnz
js
lea
clc
xor
push
sub
add
aad
jmp
fwait
js
scas
inc
xlat
sub
xchg
mov
popf
adc
sbb
ret
push
loopne
pop
inc
xchg
pushf
notl
xchg
sbb
fstpt
fwait
cmp
mov
add
or
pop
mov
xor
fdivrl
emms
shll
pop
fsubrl
aad
mov
or
stc
loope
daa
add
cwtl
dec
mov
lods
pop
add
xor
pop
ss
pop
leave
pop
jle
xchg
add
xchg
cmp
loope
sbb
inc
popl
mov
bound
push
dec
rorb
mov
sbb
out
ret
or
add
cmp
xor
mov
sub
pushf
inc
rcrl
xchg
int3
push
lock
sti
cmp
cwtl
inc
xchg
outsb
stos
mov
lods
movsl
cmp
cmp
mov
fadds
jecxz
je
dec
lods
jg
pop
jne
pop
neg
shr
cmp
jle
mov
test
xor
add
inc
inc
and
inc
mov
mov
mov
addl
xchg
call
lcall
mov
dec
lds
cmp
sbb
cli
lods
popf
sub
test
jge
es
pop
mov
dec
insb
push
outsl
jg
and
pop
shll
ss
cmp
push
jle
dec
xchg
in
int3
fwait
inc
inc
fcmovb
icebp
push
inc
jp
daa
ja
pop
mov
fcomps
fwait
jmp
js
inc
fistps
jle
pop
sbb
cmpsl
inc
pusha
adc
xlat
cmpsb
push
cmpsb
jnp
mov
adc
stos
jnp
jle
mov
cmpsl
sbb
dec
sbb
mov
cmp
mov
inc
mov
loope
mov
inc
sbb
rclb
sbb
in
in
addl
jl
inc
int3
mov
mov
mov
lcall
xor
mov
pop
test
jmp
jae
lods
xchg
push
add
adc
mov
xchg
outsl
test
push
stc
push
dec
add
cmp
imul
cmp
push
sbb
cmc
call
in
cltd
fcompl
clc
fidivrs
in
push
loopne
cld
mov
inc
iret
mov
xchg
or
push
sbb
push
xchg
add
fcompl
js
test
lahf
pop
lahf
mov
out
or
push
pop
sbb
dec
dec
out
jae
pop
mov
subb
insb
add
cmc
mov
test
ss
dec
out
ljmp
movsb
push
inc
push
into
pop
test
mov
stos
push
call
dec
lahf
dec
or
fldcw
pop
jnp
in
and
adc
repz
jg
push
jp
sub
xor
jo
jge
mov
loope,pn
or
call
cwtl
pushf
pop
sbb
cmpl
sub
stc
push
push
cltd
fstpt
mov
das
roll
mov
daa
dec
sahf
popf
scas
jg
adc
cmpsl
mov
mov
sub
adc
xlat
loope
push
sbb
mov
jne
and
in
cmp
dec
cmp
xlat
jecxz
pusha
lea
nop
out
pop
stc
repnz
pusha
jle
mov
adc
or
sahf
cs
xor
sbb
xchg
sbb
mov
fwait
testl
sub
mov
jp
iret
lods
xchg
addr16
sbb
icebp
fdivs
dec
cmp
xchg
dec
aas
test
push
scas
js,pt
fidivrs
rol
adc
push
addr16
pop
add
cld
push
xchg
clc
ds
pop
cmp
js
or
cmc
xchg
pop
cmp
iret
pop
jp
inc
xor
imul
arpl
addr16
adc
adc
je
sub
cld
mov
pop
iret
xlat
mov
push
push
and
iret
sbb
dec
push
ds
mov
add
arpl
or
add
or
add
push
test
xor
test
push
fildll
xchg
icebp
pop
in
cmp
push
mov
sub
in
nop
dec
sbb
or
scas
dec
xchg
mov
outsl
in
push
or
pop
jg
dec
test
bound
cld
dec
mov
mov
mov
fwait
add
pop
adc
fsubrs
test
loop
fsubr
fwait
adc
cmc
mov
scas
pop
mov
adc
push
jmp
or
or
mov
js
add
addl
addr16
cmpsl
pop
jmp
and
mov
or
popf
ret
cmp
aad
jnp
mov
or
push
adc
inc
inc
inc
cmp
jnp
cld
rorb
jae
cmp
ljmp
sub
mov
iret
imul
pop
cmp
mull
lcall
pop
cmc
pop
stos
loope
addr16
addr16
jp
and
inc
xlat
enter
repnz
xlat
nop
pop
adc
movl
pop
sbb
or
ds
mov
jo
xchg
out
adc
add
shll
int3
adc
xor
cmp
aas
adc
fildll
loop
cmp
xchg
test
sbb
mov
decb
aas
ds
and
cmp
add
mov
sbb
mov
or
dec
mov
insb
xchg
mov
cmp
mov
and
cmc
cs
mov
mov
stos
inc
fs
call
cmp
jae
xchg
test
sbb
inc
lods
xchg
pop
or
mov
inc
decl
adc
jne
int
fcmovnb
jno
jp
inc
mov
jns
ud1
mov
stos
cmp
or
scas
nop
icebp
lods
dec
lahf
push
mov
inc
mov
pusha
xchg
mov
out
push
mov
mov
sbb
insb
mov
in
mov
in
out
add
out
es
xor
lahf
cmp
rolb
mov
sbbb
fdivrl
insb
jo
inc
loope
pushf
cmp
push
iret
pop
mov
and
inc
sbb
mov
iret
inc
rolb
imul
cmp
mov
imul
push
push
popf
xor
cmpsb
movsb
leave
imul
push
jnp
jg
mov
xchg
mov
cmp
mov
mov
xor
add
adc
js
adc
fistpl
cmp
cmp
adc
pop
mov
aaa
cmp
iret
ja
adc
test
cmp
push
fucomip
sbb
stos
fnstenv
aaa
or
mov
lahf
add
xor
out
dec
clc
fstl
sbb
out
cmp
xor
adc
or
movsl
nop
pop
or
stc
jp
ljmp
notb
cs
add
add
ret
negl
xor
push
and
ret
fnstcw
jp
int3
out
imul
pop
rorb
inc
sbb
addl
add
sub
cmp
cmp
rcl
out
mov
cmp
andb
cwtl
inc
dec
push
es
mov
ret
pop
cmp
mov
popa
pop
adc
pop
jbe
jg
and
imul
inc
inc
pop
pop
push
push
out
dec
daa
test
mov
daa
rcr
data16
repnz
sbb
pop
enter
mov
pop
mov
mov
xlat
pop
mov
add
sub
or
cmc
xchg
push
in
out
jecxz
sub
addr16
popa
fsubrl
xor
out
cmp
cmp
push
or
xor
xorb
dec
inc
mov
inc
cltd
or
psubusw
sbb
cmp
xchg
out
in
xchg
or
jecxz
jmp
lods
cltd
adc
pop
dec
dec
jb
jle
sub
iret
fwait
pop
mov
dec
aam
sub
push
cli
fistpll
filds
sbb
jne
or
pop
imul
sbb
mov
test
adc
sti
je
shrl
jle
xchg
xchg
inc
push
inc
pop
fs
repnz
into
ds
dec
dec
leave
shll
inc
dec
push
dec
xchg
hlt
sub
adc
push
cmp
mov
jno
xchg
xor
cld
es
addr16
decb
js
mov
cmp
mov
pop
mov
scas
and
jmp
add
push
or
in
xchg
out
sub
jb
push
insb
add
fistpl
sti
mov
xchg
sub
xchg
testb
lret
daa
push
pop
outsb
fisubrl
outsl
out
push
xchg
pop
sbb
jbe
ret
je
fmull
inc
push
js
stc
cltd
sti
jecxz
clc
mov
fs
cmc
gs
fwait
mov
xor
inc
adc
inc
pop
decl
and
mov
jp
mov
hlt
pop
lret
stos
orl
lock
push
push
xor
pusha
pop
xchg
mov
dec
sbb
imul
mov
mov
dec
mov
es
ficompl
mulb
dec
out
scas
add
xchg
shlb
add
mov
fwait
and
mov
adc
addr16
mov
sub
stos
notl
cmp
pop
mov
jnp
add
xchg
adc
sahf
fbstp
or
jb
pop
or
push
jae
clc
dec
pop
or
mov
aaa
aam
inc
push
mov
mov
jecxz
sub
xchg
out
aad
outsl
gs
fimuls
pushf
iret
mov
sbb
rcr
pop
popf
cmpsl
add
std
sbb
inc
push
pop
out
jns
jg
inc
daa
dec
int3
mov
adc
fidivrl
sub
rcl
pop
fstpl
lods
clc
aaa
daa
out
ja
mov
in
sub
imul
adc
jmp
xchg
and
jae
sub
mov
cmp
out
cltd
sbb
pop
sbb
push
les
aad
arpl
inc
lahf
js
cmp
jge
push
cmp
inc
push
add
in
mov
ret
sbb
nop
pop
stc
add
fstl
fisubl
jns,pt
jg
xchg
lret
pop
stc
mov
pop
sbb
or
mov
sbb
mov
dec
dec
into
or
sbb
iret
dec
push
xchg
dec
mov
sbb
adc
ja
pop
cmp
sbb
mov
xor
dec
inc
or
push
push
addl
ds
sar
xchg
bound
inc
and
mov
ret
mov
fdivs
pop
cmp
or
fstpt
daa
cmp
lahf
add
clc
fmuls
pop
mov
and
pop
loope
popa
dec
fwait
mov
ficoms
test
imull
pusha
imul
sub
aam
push
inc
add
push
loope
mov
mov
test
sub
in
clc
lods
mov
pop
js
push
loopne
in
dec
notl
fptan
mov
push
jo,pt
pushf
jae
dec
add
pop
insb
out
xor
mov
mov
iret
inc
and
push
pop
mull
sbb
insb
push
enter
pop
inc
loopne
mov
sbb
daa
jns
push
xor
out
mov
jg
jmp
popf
pop
mov
ret
mov
adc
mov
popf
inc
or
cmpsl
test
sub
mov
dec
shll
xor
cmp
setb
xlat
cmp
add
mov
xor
or
subl
in
aaa
hlt
addr16
cmp
mov
push
cmp
cmp
sbb
roll
sti
mov
pushf
in
jnp
add
dec
in
clc
add
cmp
dec
mov
or
mov
mov
pop
fwait
xor
cltd
rcrl
idiv
test
cwtl
or
in
iret
in
cld
aas
in
xor
je
ret
bnd
adc
mov
lods
jbe
cmp
rcr
mull
rcrb
les
push
adcb
mov
jae
jbe
inc
inc
and
js
stc
cmp
sub
leave
xor
sbb
cmp
adc
mov
pop
sub
jnp
fstps
outsl
out
fnstcw
sbb
mov
mov
cmp
jb
jmp
pop
out
hlt
xchg
mov
in
sub
jp
mov
testl
dec
push
mov
orl
cmp
push
sbb
add
sub
arpl
dec
dec
shlb
push
jne
adc
dec
arpl
imul
cmp
sbb
inc
jmp
cwtl
xor
dec
mov
test
xor
dec
js
jns
clc
sbb
mov
shrb
cmp
mov
sub
or
sbb
dec
call
or
cmp
cmc
jg,pt
scas
bnd
xor
mov
in
mov
aad
aam
push
cltd
cmp
dec
mov
mov
shll
cmp
test
outsb
jle
or
mov
jnp
cld
pop
cltd
push
mov
lods
pop
pop
push
mov
cmc
xchg
cmpb
and
inc
and
jle
stc
ret
int3
cmp
ljmp
cltd
sbb
adc
mov
pusha
pop
idiv
fildl
jmp
fistl
xor
fmuls
mov
sbbl
push
daa
sarb
lods
jecxz
push
loope
mov
xchg
pop
mov
push
std
out
or
enter
jmp
out
mov
inc
mov
adc
repnz
cmp
pop
cs
fldenv
jge
xor
ficoms
jp
insb
fistps
adc
cmp
outsl
test
fimuls
sar
mov
push
jmp
loopne
add
xor
fwait
push
adc
push
adc
cmpsl
lods
adc
jo
mov
fimull
pop
into
mov
mov
in
or
outsb
fwait
leave
ret
ljmp
jno
ss
or
cmp
pushf
cltd
cmpsl
pop
dec
jle
lods
dec
jg
and
in
fwait
sub
mov
test
and
jnp
mov
inc
aas
pop
ret
es
loop
dec
dec
inc
sbb
sbb
jle
jne
dec
or
cmpsb
in
dec
mov
das
sub
adc
adc
push
fsubs
insb
lret
fs
sti
inc
cmp
inc
add
mov
outsl
xchg
jge
inc
xchg
je
out
and
lret
daa
lods
testl
in
xchg
push
arpl
sub
mov
aad
sub
cmc
test
pop
jnp
fidivrs
fs
dec
sub
ficoms
push
mov
pop
cmc
popf
adc
pandn
lahf
imulb
ss
testb
jp
insl
pusha
int3
andb
sbb
xchg
into
push
push
cmp
test
aad
jns
es
sarl
cmc
push
xchg
inc
push
aad
ret
pop
test
adc
sub
pop
mov
cmp
es
jg
pop
rcrl
xchg
dec
pop
sbb
lahf
cmp
mov
jne
xchg
sbb
mov
or
cmp
cmpsb
aaa
sahf
jle
out
jns
push
push
repnz
aas
fwait
test
xchg
dec
jae
dec
aas
addl
fldenv
stos
cmp
sbb
xor
sbb
push
aam
mov
cmp
pushf
sbb
ret
loope
sub
jp
push
mov
sti
fnstsw
mov
jge
outsb
mov
push
jno
es
dec
js
lahf
bound
loopne
jno
out
or
lcall
push
mov
std
out
ret
js
push
mov
add
clc
and
ds
clc
pushf
mull
fs
push
push
addl
sbb
mov
add
cmp
sbb
jle
jge
sbb
cmpsb
push
cmp
inc
cli
cld
dec
push
out
lret
push
mov
pop
cltd
insb
push
test
cmp
xchg
int
fnstenv
clc
sti
movsb
imull
out
xchg
pop
cli
popf
cmp
dec
outsl
mov
ljmp
sub
adc
sti
sbb
or
mov
or
popf
jge
inc
cmpsl
cli
jl
dec
jle
sub
clc
idivl
sbb
push
cmpsl
xor
inc
lret
jp
cwtl
mov
clc
mov
aam
in
mov
jp
gs
out
sub
in
mov
mov
push
and
movd
push
mov
fidivrs
mov
mov
cmp
pop
cld
jns
push
daa
cltd
push
addr16
pop
mov
sbb
cmp
rcpps
or
jnp
adc
lods
scas
push
sbb
mov
cmp
outsb
push
es
mov
pop
into
ret
add
sbb
ljmp
cltd
sbb
int
and
cmp
testl
cmp
jp,pn
cmp
outsl
stos
mov
ljmp
pop
add
gs
mov
mov
sbb
mov
je
pop
inc
pop
dec
dec
xchg
cmp
cltd
std
cmp
mov
cmp
idivl
outsl
add
xchg
sbb
push
xor
int
adc
ds
adc
mov
sub
in
mov
addr16
dec
sbb
mov
out
jmp
shll
sbb
or
sbb
xchg
imul
gs
push
sub
pop
sbb
pop
fiadds
stos
cmp
mov
mov
push
push
ret
popa
mov
xchg
add
ficoms
xchg
jp
push
aam
pop
rcrl
mov
out
mov
dec
sub
cmp
xor
dec
sbb
pop
xor
or
xchg
ror
cwtl
or
fisttpll
dec
inc
pop
ljmp
and
insl
jns
daa
shl
hlt
adc
fnstcw
fadds
loope
in
sub
lea
es
insb
cli
sahf
fstpt
cmp
xchg
dec
mul
mov
cmp
ljmp
add
sbb
jae
jcxz
or
aas
arpl
enter
or
and
add
test
jl
mov
dec
jo
stos
icebp
dec
imul
outsl
mov
mov
jecxz
pusha
rcll
daa
dec
inc
mov
push
jnp
pop
jge
outsl
dec
pushf
mov
test
cmp
cmp
test
xchg
jmp
loop
rclb
dec
ja
adc
insb
in
or
jns
mov
dec
inc
pop
dec
mov
scas
mov
lcall
fldl
or
push
add
jg
ds
xchg
nop
js
push
js
and
loopne
adc
addr16
push
insb
dec
mov
lods
sbb
push
dec
popf
cmp
cmp
test
adc
fdivr
or
rclb
fucomip
repnz
cmp
jg
mov
js
cmp
pop
jns
in
das
popf
sbb
scas
mov
dec
rcrb
divb
mov
push
mov
jae
adc
daa
cmp
cmpsb
xchg
mov
and
or
rcll
cwtl
sub
dec
sbb
mov
dec
pop
mov
imul
xor
fildll
xchg
push
dec
or
mov
fidivl
sbb
add
popa
lds
pusha
sbb
leave
and
xchg
std
pop
gs
pop
test
icebp
shll
sub
jle
dec
sbb
sbb
xchg
idivb
and
mov
push
or
pop
orl
idivl
jg
cmp
imul
popa
loop
dec
mov
shrl
push
data16
push
xchg
jmp
addl
cwtl
mov
ret
xor
jnp
loope
cli
xor
push
pop
mov
nop
sti
jns
loope
mov
pusha
jecxz
jg
push
cltd
pop
mov
ret
push
xor
and
mov
ja
dec
jne
push
mov
fsub
das
dec
out
and
ss
ljmp
xor
scas
pop
mov
sbb
add
ljmp
xchg
imul
pop
inc
mov
out
test
repnz
xchg
pop
push
and
arpl
mov
pop
jb
xchg
pop
test
jge
adcb
xchg
fsubr
xchg
lea
mulb
sbb
xlat
push
stos
mov
cmp
push
std
inc
push
sti
xchg
jle
out
adc
call
mov
sub
loopne
cmp
repz
fildl
inc
and
roll
or
cmp
iret
pushf
dec
sti
lods
mov
jo
jns
dec
jns
rorb
dec
cmpsb
loope
pop
aas
ds
or
mov
insb
popa
into
fwait
xchg
aam
inc
scas
dec
rorl
cmp
out
sub
inc
loope
inc
adc
sbb
push
rolb
shl
sbb
int3
enter
insb
or
rorl
movsb
mov
mov
outsl
sub
outsb
les
aaa
fimull
aaa
cmp
mov
xchg
mov
mov
cmp
mov
push
or
xor
mov
lret
pop
cmp
sub
xchg
aad
dec
es
adc
cmp
mov
ds
sub
pop
lods
cs
mov
pop
pop
scas
imul
cmpl
xchg
fsub
shll
imul
scas
mov
and
lock
mov
sbb
fmulp
imul
filds
xchg
ja
mov
pop
pop
bswap
cmp
dec
sub
dec
mov
and
cld
or
dec
cmpsl
in
sbb
or
jne
dec
mov
pop
xorb
push
mov
sub
push
jbe
leave
arpl
push
xchg
test
sar
or
cld
scas
popf
fwait
xchg
fwait
iret
push
loope
xchg
dec
cwtl
adc
adc
inc
jbe
push
mov
mov
sbb
lods
mov
sarl
pop
js
aas
jns
adc
mov
cwtl
lahf
sahf
clc
adc
xchg
inc
cmp
mov
cwtl
out
lock
push
in
js
mov
insb
jb
sub
jo
insl
pusha
dec
lret
stc
insb
push
aas
pop
push
scas
or
jle
leave
stos
pop
sub
mov
leave
ficoml
sub
addr16
insb
cmp
lds
pusha
xchg
cmp
pop
jl
mov
test
aam
or
jl
cmp
sbb
mov
repz
cmp
aam
inc
push
pop
ret
xor
cmp
inc
or
fdivl
daa
mov
push
fs
mov
jl
inc
lahf
lret
jmp
aam
or
or
pcmpgtw
outsb
mov
sub
test
cld
xchg
fs
js
dec
mov
mov
add
and
jl
ds
xchg
xchg
lahf
dec
jns
jo
mov
mov
mov
jg
cmp
mov
cs
stos
bound
or
mov
cs
or
dec
test
js
pop
xchg
pop
insb
int3
lods
xchg
or
in
int3
shlb
or
cli
dec
icebp
in
ss
and
cwtl
cmp
mov
test
and
mov
inc
mov
pop
mov
addr16
divb
js
mov
adc
mov
jl
jnp
divl
negb
mov
out
test
clc
jcxz
shl
add
aas
mov
add
xchg
lods
mov
mov
push
iret
stos
pop
nop
mov
xchg
clc
pop
lea
inc
mov
clc
add
xchg
mov
sbb
add
dec
fiadds
dec
es
lahf
int3
jne
idivb
dec
cmp
mov
xor
mov
jae
rclb
dec
pop
pop
pop
mov
push
cmp
mov
int3
mov
mov
movsb
in
repnz
inc
push
mov
jo
or
mov
sahf
xchg
out
iret
push
aas
test
fisubrs
or
rol
psubsw
pop
rclb
adc
jnp
pusha
sub
insb
lods
mov
callw
jo
sub
pop
nop
xchg
int3
push
mov
daa
int3
clc
movsb
push
movsb
adc
test
jl
mov
inc
xor
or
jns
test
cmp
es
jno
pop
int3
test
ret
mov
sbb
push
sub
mov
push
popa
je
or
shlb
mov
push
ficomps
in
in
jno
or
je
cmpl
js
jmp
cmc
inc
sub
pushf
ficoms
stos
out
scas
cli
mov
pop
loop
sbb
or
je
cmp
xchg
fdivs
mov
movsb
mov
setnp
cwtl
mov
mov
dec
dec
add
push
add
or
jnp
outsl
cmp
jg
pop
sbb
je
fwait
xor
xor
sbb
pop
push
add
scas
adc
adc
push
fcomip
mov
cmp
test
pop
popa
dec
mov
fcomp
icebp
rorb
dec
pusha
call
adc
sub
loop
push
imul
js
pop
std
incb
sub
jae
or
mov
movb
out
or
gs
xchg
aaa
cmp
pop
mov
mov
insb
add
ds
xor
xor
clc
imul
clc
shl
dec
mov
jp
fdivl
popa
cmp
or
cmp
or
push
dec
mov
add
push
movsl
jl
cmp
hlt
iret
in
sub
push
rolb
mov
and
pop
sub
add
inc
pop
lahf
mov
es
int
js
jae
push
jns
hlt
xchg
cmp
push
in
out
pushf
jg
ja
jae
add
jp
mov
lds
push
mov
pushf
jb
mov
pop
iret
cmp
enter
pop
icebp
mov
sub
dec
ljmp
jle
jnp
fwait
sub
call
leave
jmp
dec
add
mov
cmp
xor
xor
cmp
dec
andb
jmp
mov
shrl
in
xor
jns
jge
pop
jmp
test
mov
xor
cmp
mov
mov
mov
jge
xor
cltd
jmp
and
movsb
sbb
sbb
mov
test
cld
imul
and
movsb
mov
jge
jge
xor
daa
cmp
movsb
ss
insl
xchg
cmp
lret
data16
fstpt
push
fnstcw
sbb
vpcmpud
mov
push
ficoml
sub
dec
pop
inc
cwtl
incb
int
loopne
or
rcll
pushf
jg
push
pop
cmp
pop
push
dec
js
mov
ljmp
cmpsl
cmp
push
sbb
cmp
inc
and
xlat
dec
jno
sbb
fisubl
out
imul
cmp
jno
mov
ja
pop
sbb
ret
sub
sbb
and
cmp
repz
jns
in
ret
ljmp
mov
js
push
loop
subl
gs
mov
aam
cmc
push
mov
js
je
jmp
movsl
jmp
dec
push
cmp
cmp
pusha
push
sbb
cmp
push
jae
jo
add
dec
push
pusha
push
push
stos
pop
lock
mov
jmp
dec
jp
pop
bound
sbb
ja
mov
aam
mov
testb
icebp
out
aas
mov
push
pop
dec
mov
out
push
imul
stc
imul
bound
sbb
pop
mov
into
cltd
sbb
pop
dec
mov
inc
inc
jne
test
adc
pop
pop
leave
fdivp
inc
lea
add
jmp
jno
data16
push
jmp
shll
test
inc
sarb
shr
enter
outsl
xchg
push
add
mov
leave
es
addr16
mov
shrl
movsb
out
and
int3
jg
js
ret
and
fdivrs
or
mov
test
icebp
sbb
xchg
lea
pop
add
sbb
or
or
sub
jae
ficoms
gs
mov
and
sbbl
push
pop
mov
cmp
adc
lahf
push
inc
mov
or
negl
mov
gs
cmp
scas
inc
jo
pop
sbb
push
data16
cmp
clc
dec
push
cli
ljmp
ds
sar
jns
out
stc
push
or
jl
cmp
nop
outsl
cmp
jns
adc
loop
sbbl
jns
dec
pop
cmp
sbb
add
xchg
popf
dec
hlt
out
sub
jns
lea
decl
into
mov
jns
push
adc
arpl
pop
aad
stc
faddp
cmp
rclb
test
arpl
sub
or
cmc
out
mov
mov
idiv
add
sbb
inc
imul
daa
fs
hlt
add
jecxz
cmp
lods
daa
dec
scas
rorb
adc
pusha
inc
sbb
in
cmp
sbb
mov
jns
xchg
pop
cmp
cmp
outsl
xchg
enter
test
mov
xchg
subl
je
cli
adcl
inc
xchg
mov
and
daa
xor
jp
dec
popa
jmp
and
stos
in
je
and
cmp
add
pop
mov
mov
add
dec
adc
xchg
push
pop
sub
sub
adc
cli
lret
mov
test
and
je
inc
and
negl
in
out
mov
adc
outsb
mov
adc
or
lock
iret
pushf
mov
in
dec
add
push
mov
insl
xchg
add
xchg
dec
insl
adc
fistpll
sti
mov
pop
and
pop
pop
int3
add
iret
mov
mov
sahf
ja
sbb
mov
jecxz
jo
mov
stc
adc
push
mov
pop
add
add
iret
scas
fwait
mov
jg
sbb
xcrypt-cbc
cmpsl
pop
aaa
xchg
xor
test
into
mov
fucomip
int3
rolb
arpl
hlt
loop
or
lods
repz
adc
arpl
iret
mul
jnp
push
daa
and
cmp
push
adc
js
sub
or
pop
aas
imul
jnp
cli
cmpsl
dec
cld
imul
shrl
mov
cltd
push
pop
js
xchg
push
adc
lods
or
pop
mov
add
push
push
xor
jp
cmp
lahf
inc
negb
mov
imul
rorl
jmp
scas
mov
insb
mov
cmp
iret
pop
scas
cmp
add
jg
enter
xchg
bound
xor
lods
adc
adc
pop
cwtl
inc
mov
mov
bound
scas
cmp
icebp
mov
gs
sub
fdivrs
andl
cmpsb
clc
cld
daa
mov
hlt
out
jmp
pop
inc
shlb
ja
or
inc
ja
mov
push
movsl
cli
sbb
push
mov
test
jge
incb
mov
sbb
dec
mov
adc
or
push
popa
cmpsl
dec
adc
push
cli
leave
push
or
jmp
movsl
mov
inc
psubsw
mov
mov
andl
into
adc
dec
push
mov
mov
test
mov
mov
jmp
lods
push
sbb
adc
push
sbb
jnp
mov
dec
jno
inc
int
xchg
mov
cmp
mov
push
daa
pop
sbb
cmc
add
stc
xor
add
es
cmp
incb
mov
bound
mov
and
cmp
loop
xchg
or
xlat
add
xchg
daa
and
cmp
rol
jge
mov
xchg
in
idiv
push
xchg
popa
out
cmp
lds
imull
adc
xchg
addl
out
jae
popf
mov
stc
dec
mov
cmpsb
sbb
push
testl
test
cmp
call
sbbl
mov
cmp
imul
adc
mov
adc
mov
je
daa
adc
movsb
pop
push
mov
xlat
jg
or
sbb
adc
add
or
xchg
cmp
cmp
mov
mov
adc
pop
mov
mov
cmp
mov
push
mov
bound
mov
dec
outsl
popf
inc
test
ja
daa
and
rorl
ja
pushf
xchg
dec
pop
bound
jns
xchg
pushf
add
nop
mov
dec
imul
pop
iret
jg
pop
dec
bound
ja
cmp
sbb
pop
sbb
js
mov
les
jg
push
ficompl
outsb
adc
adc
mov
pop
push
fcomps
jnp
cltd
push
sub
mov
push
cmp
mov
test
out
cli
cmc
outsl
in
sar
shlb
xchg
mov
cld
testl
daa
lods
add
pushf
xor
jns
sub
adc
jmp
test
cmp
or
xchg
sbb
inc
xlat
xchg
test
sub
mov
push
ljmp
roll
cli
into
gs
mov
movsl
jno
leave
fwait
push
cmp
jb
push
ljmp
add
mov
mov
mov
sbb
cmpsl
test
sbb
ljmp
cmp
adc
mov
inc
mov
or
daa
jp
jmp
mov
sarb
or
cmp
pop
inc
aaa
movsl
sbb
mov
cmp
movsl
gs
test
mov
cmp
inc
xlat
inc
xchg
jbe
sbb
cmp
das
or
xchg
cli
sub
push
mov
push
cmp
dec
inc
or
mov
test
push
mov
cmpsl
das
sub
mov
jp,pn
jmp
mov
mov
xchg
repz
xchg
out
pop
mov
jbe
or
xchg
dec
mov
mov
xchg
orb
jg
xchg
or
dec
fiadds
loopne
dec
or
testl
loopne
or
sub
add
roll
out
inc
jne
test
fsubrs
xor
xor
jne
mov
xchg
loopne
loopne
into
sbb
loopne
xchg
xchg
pop
sub
fwait
push
cmpsl
js
idivl
dec
fsubrs
out
loopne
sbb
rcrb
adc
mov
ja
test
gs
mov
out
mov
mul
push
mull
sbb
loopne
adcb
stos
pop
or
jnp
mov
mov
inc
fnstcw
loopne
loopne
xor
or
mov
or
or
fsubrs
xor
subl
mov
js
sbb
xchg
or
test
sbb
shrb
push
inc
roll
out
jle
mov
and
pop
shll
push
icebp
fdiv
sub
fs
js
jp
imul
push
mov
ret
call
js
mov
cmpsb
mov
jae
xor
xchg
mov
cmp
cmp
cmp
out
cmp
int
outsl
mov
pop
mov
or
jnp
pop
inc
sbb
ja
mov
mov
decl
sarl
or
sbb
fistpll
adc
das
jmp
sub
ja
jnp
pusha
xlat
leave
add
mov
dec
inc
dec
scas
jmp
pop
pop
ljmp
cmp
icebp
push
fcoml
add
fstpl
js
pop
or
dec
add
inc
push
cmp
jmp
je
or
ret
sbb
shrb
push
and
mov
jl
out
cmpsb
jl
out
and
or
xchg
daa
inc
xchg
push
data16
dec
fwait
addl
fiadds
jb
inc
mov
repz
jae
xorl
jp
int
cmp
xchg
aas
or
cmp
neg
lret
aas
mov
mov
inc
cmp
push
lcall
ret
push
lods
xchg
adc
enter
cltd
shlb
insl
outsb
jae
jl
jle
ficoms
clc
dec
inc
aad
mov
sti
mov
arpl
mov
aad
cmp
fidivs
popf
aad
push
mov
cwtl
into
inc
repnz
mov
cltd
stos
ja
std
sub
add
popl
add
mov
fwait
mov
push
daa
mov
dec
out
xor
pusha
loop
xchg
aaa
adc
jmp
cmp
sub
push
arpl
cmp
sub
fdivr
test
mov
cmp
sti
int3
mov
xchg
mov
and
or
rolb
adc
iret
jp
aad
inc
test
cmpsl
dec
addr16
jns
pop
lret
dec
cltd
sub
xadd
dec
notl
mov
xchg
jae
mov
loop
adc
je
outsl
xorl
pop
fwait
ljmp
add
add
js
aas
ja
negb
dec
sahf
inc
cmp
jmp
xchg
dec
adcl
mov
addr16
add
dec
test
mov
xor
mov
psrld
jg
pop
test
test
sbb
dec
lcall
push
clc
scas
mov
pop
cmc
xchg
pusha
cmp
out
ss
js
mov
mov
andb
dec
mov
outsl
push
xchg
pop
xor
cmp
dec
jo
ja
leave
jl
sub
adc
sub
xchg
mov
faddl
xor
add
test
add
test
leave
and
or
push
data16
outsl
es
adc
mov
push
xor
inc
jmp
add
mov
cmp
lods
and
mov
lcall
outsl
jnp
jl
lahf
push
push
clc
xor
xchg
add
fwait
cmp
and
xor
mov
xor
imul
stos
dec
loopne
pop
ljmp
imul
sub
mov
mov
aas
in
popa
ljmp
pop
adc
ljmp
andl
bound
xor
dec
stos
xchg
fbstp
xlat
inc
pop
cmp
pop
dec
es
mov
dec
mov
ljmp
ret
add
push
jns
and
jbe
int
dec
or
mov
push
inc
jle
shlb
mov
iret
outsb
dec
dec
jnp
fstpl
sbb
cmp
push
adc
push
cwtl
inc
das
loopne
lea
mov
test
cmp
sarb
dec
dec
out
insb
cmp
fs
imul
dec
fstl
pop
fs
jns
stc
sbb
adc
sbb
mov
mov
jg
sbbb
cmp
cmc
insl
dec
cmp
insb
js
jmp
jle
push
jl
imul
daa
sarb
pop
jo
sbb
pop
loope
cmp
cmp
sub
cmp
push
or
cmp
out
repz
xchg
dec
clc
push
add
addb
leave
dec
dec
sub
cmpsb
je
jge
bswap
out
decl
and
cmpsb
bound
scas
or
loopne
ja
ret
and
xor
add
push
sbb
cmp
or
xchg
jbe
sbb
ss
jmp
daa
shll
stc
je
shll
jg
sub
lcall
mov
pop
ljmp
leave
cmp
sub
cmp
ficoms
sbb
pusha
lods
mov
cmp
icebp
jge
inc
mov
dec
faddl
fistpl
mov
push
das
cmp
jl
jo
orl
cmp
pop
push
jbe
dec
sbb
test
js
cli
jae
stc
or
mov
push
xchg
daa
pop
je
rorl
mov
sub
and
cwtl
sub
nop
or
test
inc
mov
js
jno
pop
divb
or
push
push
xchg
call
movsb
push
sbb
pop
dec
or
sub
push
jg
fcomp
or
push
fistl
cmpsl
daa
or
add
js
adc
and
loop
fstps
aas
leave
dec
add
push
into
dec
sbb
or
hlt
jg
cwtl
repz
jae
bound
aam
scas
pusha
cmpl
push
cli
jbe
xchg
push
fisubrs
mov
jp
push
sub
or
out
je
cmpsb
jl
aad
mov
inc
add
cmp
sub
ss
fdivl
outsl
mov
pusha
xchg
daa
scas
xchg
inc
je
rcll
clc
ficoml
pop
test
mov
ficoms
inc
fisubl
adc
cmc
inc
add
dec
xor
std
dec
imul
fiadds
aaa
lods
inc
or
sbb
sbb
xlat
mov
pop
inc
test
aam
cmp
pop
push
test
sbb
addl
cmp
sub
or
out
or
jge
or
inc
jnp
pusha
clc
pop
mov
cmp
jns
dec
test
je
pusha
gs
stos
mov
movntq
addr16
xchg
sbb
jb
cmpsl
mov
mov
jg
movl
ja
test
cli
sub
ja
test
xlat
jg
pop
dec
xor
push
hlt
pop
jbe
test
sub
js
add
add
mov
sbb
ja
sbb
sbb
mov
das
push
test
pop
imul
fnstenv
inc
mov
scas
ret
mov
out
pop
lcall
inc
add
pop
sti
jecxz
jp
sub
or
push
xchg
sbb
fmull
jne
inc
sbb
cmpsl
xchg
sub
adc
ret
lcall
mov
mov
mov
pop
or
xchg
pop
xchg
imul
imul
xchg
shrl
mov
pop
mov
xchg
mov
daa
xorb
testl
mov
ficomps
or
pop
aad
lock
out
push
cmp
out
pop
aas
jbe
mov
xlat
test
adc
and
movl
dec
adc
mov
add
jns
mov
mov
cwtl
adc
fidivrl
pop
pusha
sbb
cmpsb
jnp
popa
mov
adc
mov
jno
pop
sbb
inc
ja
mov
roll
mov
adc
cmp
repz
cmp
dec
jns
cld
xchg
dec
add
addb
cld
push
subl
adc
mov
xor
lods
xlat
dec
into
insl
sahf
add
add
out
xlat
sar
xchg
mov
pop
addl
cli
pop
pop
mov
cmp
arpl
call
iret
jp
out
subl
orl
idivl
in
jmp
jecxz
stos
inc
adc
sbb
pop
lret
arpl
pop
mov
cmp
mov
pop
or
sub
lods
sub
inc
mov
sbb
xchg
ljmp
test
jmp
adc
jo
in
add
aas
push
arpl
addr16
adc
and
clc
push
into
fwait
out
adc
test
repz
call
js
cld
das
dec
lods
mov
cmp
fidivrl
rolb
pop
ss
mov
add
mov
test
lahf
pop
or
lcall
mov
insl
or
out
insb
cmp
mov
xchg
or
or
dec
mov
pushf
or
in
xor
or
inc
push
sti
lods
mov
sbb
push
pop
sbb
adc
cli
mov
mov
scas
into
insb
cmpsl
adc
xchg
pop
sub
les
add
cs
jo
out
pop
ja
popa
mov
sbb
fdivs
fildll
jns
and
xlat
jmp
xor
adc
sahf
push
leave
clc
sbb
xor
lods
push
sti
bnd
scas
dec
jno
repz
pushf
xchg
enter
pusha
push
lret
jp
es
jl
mov
push
stc
aas
jno
daa
shr
xchg
dec
pop
dec
pop
or
lea
xor
jo
and
xchg
xor
jns
scas
pop
mov
enter
cs
push
push
nop
mov
push
cmp
mov
in
aas
insl
fwait
sub
pop
fiadds
xcrypt-ofb
cmpsl
outsl
arpl
cs
in
mov
icebp
mov
test
sub
jbe
adc
xchg
addb
fwait
ds
daa
out
push
movzbl
sub
ret
add
pusha
or
push
adc
jle
cmpsl
mov
lret
addr16
out
or
dec
jp
shlb
mov
fistpl
inc
cmp
imul
inc
pop
xchg
xchg
mov
mov
loope
mov
adc
or
push
sbb
imul
test
mov
mov
pop
adc
inc
mov
popf
pop
sbb
cmp
cli
cmp
inc
mov
sub
push
adc
js
out
jno
xlat
js
push
fimuls
push
push
mov
xor
push
sub
pop
add
dec
mov
out
dec
dec
das
js
add
mov
aad
mov
cmp
jae
mov
mov
mov
fisttpl
clc
add
imul
stc
mov
mov
cmp
pop
mov
inc
pop
sub
ja
jns
or
cld
mov
in
inc
push
outsl
loope
clc
movsb
in
inc
enter
rcll
loop
fs
in
or
daa
leave
add
push
popa
inc
sub
idiv
dec
inc
sub
sbb
gs
xchg
pop
call
cmp
add
mov
sbb
jl
js
cli
ret
ss
fisubs
fisttpl
push
sub
mov
movsl
sub
mov
jnp
jmp
js
sub
push
mov
int3
cmp
nop
dec
mov
std
dec
cmp
pop
mov
lahf
in
inc
xlat
mov
ljmp
push
lahf
int
xchg
fnstcw
orl
mov
add
sbb
and
testb
jae
mov
aas
or
cld
or
in
add
xlat
pop
js
cld
jp
mov
dec
in
inc
aas
js
pop
das
jmp
negl
jmp
aas
or
leave
idivb
or
dec
cld
cwtl
cs
inc
lret
outsl
ss
scas
movb
add
jp
jp
aas
je
jns
push
nop
mov
pop
fcomp
cmp
mov
pusha
aam
imul
mov
lahf
xchg
mov
jp
stc
loopne
lds
cmp
lcall
inc
decl
imul
sub
aad
cmp
lahf
mov
add
jno
sahf
js
mov
jne
sti
in
stos
stos
and
cltd
aam
out
scas
movsb
movl
mov
and
push
mull
xchg
xchg
les
movb
cld
jno
adc
push
add
mov
inc
addl
cld
add
cld
lahf
sbb
sbb
jp
repnz
sub
enter
add
mov
sbb
pop
in
or
stos
nop
enter
mov
pop
cmp
mov
mov
test
cmpsl
xchg
andb
sbb
cwtl
stos
jle
add
xchg
ret
idiv
dec
iret
inc
push
test
dec
loop
popf
in
fmuls
or
lock
cli
mov
je
adc
and
jg
add
jmp
ljmp
dec
scas
cmp
xorl
mov
adc
pusha
lcall
leave
pop
mov
push
jecxz
add
scas
sbb
pop
das
or
xchg
es
iret
inc
xchg
popf
cmp
push
es
cwtl
mov
inc
inc
mov
call
sbbl
ds
and
adc
adc
adc
mov
sbb
adc
adc
mov
dec
rclb
in
imul
mov
gs
adc
addl
addl
idivb
cmc
loope
jl
xchg
xor
js
inc
and
mov
adc
cmc
fdivrl
js
daa
imul
sbb
ljmp
cmpl
ds
ret
aad
fnstenv
mov
lds
adcl
iret
arpl
dec
add
mov
out
add
xor
out
stos
mov
out
xor
mov
roll
imull
push
xlat
in
jbe
add
jge
fnstsw
outsb
jg
lret
inc
jbe
insb
outsb
cwtl
les
test
lahf
or
adc
outsb
mov
test
add
subl
xlat
cmpsw
and
cmc
inc
sub
test
xchg
push
inc
pushf
pop
std
insb
lock
adc
gs
js
sub
sbb
and
mov
rorb
imul
fdivr
or
jnp
ljmp
cmp
mov
adc
jo
clc
jle
adc
xchg
mov
movsl
add
pop
mov
mov
mov
push
ja
rclb
dec
mov
or
fimull
in
call
sbb
fnsave
adc
out
mov
mov
stos
stos
mov
and
addr16
ret
int3
ret
lret
cmp
sub
pop
xchg
pop
xchg
add
popa
test
or
cmp
test
fsubrs
mov
insl
xchg
shrb
inc
in
xor
bound
ret
das
mov
jo
mov
mov
mov
data16
sbb
mov
pop
push
jbe
test
or
mov
cmpsl
pop
mov
sbb
xchg
stc
jle
push
dec
repnz
cmp
push
jge
jmp
pop
dec
push
out
inc
mov
fcoms
fwait
subl
push
jmp
pop
dec
push
mov
sub
xchg
sbb
xchg
sub
add
jp
jmp
sub
adc
lods
cmp
push
xchg
cs
add
xchg
jg
outsb
addl
pushf
dec
dec
gs
push
insb
into
or
in
aas
xchg
jnp
cld
scas
xchg
dec
push
lret
mov
pushf
scas
fcompl
enter
arpl
mov
and
andb
lods
mov
mov
pusha
fwait
jnp
scas
inc
imul
lahf
sub
rcrl
jnp
inc
jnp
or
dec
and
scas
jl
xorb
leave
xchg
int3
xchg
sbb
insl
pop
scas
sbb
orb
jne
mov
js
sub
cmpsb
mov
out
daa
cld
test
dec
scas
cmp
and
cmc
push
mov
mov
jle
cmp
jg
gs
add
loope
pop
lret
pop
fimull
pop
jmp
push
push
and
xor
or
add
mov
insl
cmp
notl
lret
dec
xchg
pop
adc
and
bound
cmp
cmp
cmp
jne
shlb
mul
push
or
es
popf
cmp
movsb
inc
xchg
xor
filds
cmp
sbb
int
adc
add
cmp
mov
or
push
jnp
mov
add
lahf
fwait
popa
add
cld
dec
or
mov
cmpb
stos
imul
adc
or
inc
das
mov
pusha
imul
std
or
js
sbbl
cld
or
hlt
push
pop
test
xor
enter
lods
test
lds
jns
cmp
sbb
lock
cmp
xor
xchg
cld
adc
clc
outsl
jne
mov
dec
mov
jae
clc
cmc
mov
adc
into
add
lahf
rolb
dec
ljmp
jne
leave
jae
or
daa
push
mov
idivl
iret
negl
jp
leave
adc
jg
shlb
pop
mov
push
add
adc
arpl
loop
push
mov
les
sub
xchg
mov
cmp
fildl
cmp
cli
pop
jp
mov
arpl
stc
sbb
xchg
sub
adc
dec
cld
xchg
or
fistl
dec
in
dec
pop
les
or
add
sbb
pop
int
xchg
fadd
leave
hlt
adc
out
mov
or
push
cmp
adc
cmp
xor
ljmp
or
int
jae
add
add
aas
mov
popa
test
add
push
test
movsl
mov
and
mov
mov
ds
mov
dec
imul
cld
dec
xor
divb
cld
cli
mov
imul
dec
cld
fs
add
cmp
shrl
sarb
mov
xchg
test
sub
xlat
adc
ss
loopne
mov
or
shrb
ss
lret
jle
sub
push
fcmovne
jnp
jmp
jnp
jno
xor
mov
les
inc
adc
inc
or
ds
inc
mov
mov
sub
sub
faddl
pop
mov
clc
inc
insb
mov
pushf
dec
js
pop
pop
mov
inc
ljmp
sbb
jb
and
add
jmp
jbe
mov
push
dec
jo
jno
leave
jne
mov
jmp
popa
sbb
sbb
add
clc
or
or
enter
adc
insl
out
fwait
jmp
push
inc
push
addr16
xchg
xorl
inc
mov
xchg
xchg
pop
sbb
add
test
psubb
mov
cli
cmpsl
aam
call
or
cmp
mov
xor
sbb
fucomi
push
add
daa
jmp
gs
inc
int3
in
push
sub
outsb
js
cmp
lret
pop
scas
or
cmp
repz
and
xor
mov
sub
or
movsb
rol
stos
stc
js
xor
ret
push
or
mov
mov
ljmp
push
dec
mov
ficompl
rclb
mov
mov
inc
inc
decl
into
addr16
lea
dec
or
push
xchg
subl
stos
mov
clc
jp
shll
xlat
pop
or
leave
js
pop
or
cmpsl
mov
daa
inc
test
push
sub
push
push
dec
pop
test
sub
pop
pop
cmpsl
test
sbb
stos
sub
rcrb
mov
xor
sbb
fs
pop
imul
cli
iret
sub
mov
dec
sub
sbb
pusha
dec
push
pusha
or
push
aad
cli
scas
cmpsl
dec
fnsave
mov
andl
sub
or
sub
daa
test
or
mov
insb
inc
sbb
add
mov
js
sbb
pop
lock
imul
xchg
xlat
xchg
xchg
sbb
xchg
movsb
sti
sbb
or
in
xchg
cmc
mov
cmp
pop
adc
movsb
inc
test
xchg
popa
adc
js
push
cmc
or
inc
imul
adc
cmpsl
sbb
imul
adc
enter
sti
xlat
ja
cmc
sub
mov
out
push
xchg
jecxz
dec
adc
cmp
sub
sbb
cmp
sbb
dec
or
sbb
sbb
mov
lret
push
out
sbb
cld
sbb
cli
imul
mov
jnp
mov
in
cmp
adc
sbb
roll
imul
adc
xor
inc
mov
or
xor
add
dec
jp
sub
loope
and
or
inc
lds
sub
inc
adc
lret
aad
aam
xchg
mov
inc
mov
vpunpcklwd
mov
test
ret
inc
or
xchg
sub
test
mov
cld
addl
cld
arpl
enter
cmc
lret
add
push
adc
data16
ja
leave
cmpsb
cmp
pop
cmpsb
mov
enter
xchg
xor
test
jnp
enter
loope
mov
bound
mov
cwtl
ret
mov
clc
xor
dec
mov
pusha
aam
inc
pop
cmpsl
inc
fs
arpl
insb
lahf
das
cmp
inc
xor
cmp
cli
jne
adc
ljmp
fstpt
dec
add
cmp
xlat
popf
movsb
mov
dec
push
jp
xor
pop
scas
cmp
mov
xorl
adc
and
sbb
add
in
jns
rcr
mov
dec
push
adc
jle
push
sub
add
ds
push
test
xchg
mov
sub
jle
lahf
xor
fnstenv
push
mov
jb
dec
mov
mov
fistpll
xchg
push
dec
test
sahf
imull
mov
mov
int
or
out
sub
test
jnp
sub
xor
popa
insb
pop
mov
clc
mov
push
cmp
pop
int3
jbe
dec
xlat
push
dec
fdiv
jle
adc
add
sbb
sub
out
push
movsl
jnp
adc
out
cmp
xchg
jecxz
pop
xchg
js
jae
roll
pop
ljmp
jl
sbb
jmp
in
or
jge
xor
mov
mov
cmpsl
xor
pop
icebp
mov
fwait
cmp
iret
push
xor
mov
mov
fwait
push
inc
push
cmp
cmc
sub
push
mov
pop
pop
xchg
dec
inc
insb
jg
scas
adc
in
cmp
cmp
xor
mov
push
repnz
lea
jns
test
or
adc
call
pushf
add
jg
pop
jp
cmp
push
xchg
xchg
jae
jge
sbb
out
mov
pop
incl
testl
mov
sub
mov
cmp
pop
sub
dec
lods
lods
mov
lahf
pop
cli
ss
dec
mov
pushf
scas
aas
jne
stos
idivb
icebp
xchg
and
cwtl
mov
lahf
fwait
sbb
testl
in
pop
mov
push
pop
pop
leave
dec
add
outsl
into
add
mov
pop
test
mov
mov
push
pop
jnp
sarl
icebp
xchg
imul
mov
jmp
cmp
jns
mov
mov
stc
mov
rorl
sub
loopne
movsb
push
mov
dec
jnp
cmp
or
enter
inc
dec
push
add
notl
dec
fsubrl
jg
sbb
int3
fwait
sub
dec
dec
lock
adc
xchg
cmp
dec
outsb
or
lret
mov
sar
das
and
push
mov
or
jp
dec
sbb
sub
mov
push
sbb
mov
sbb
arpl
fmull
add
mov
clc
aas
cli
sti
cmp
fs
adc
xchg
xchg
add
ljmp
lret
je
pop
js
addl
test
in
rep
push
cmp
sarb
mov
adc
out
test
mul
mov
fstp
mov
out
movsl
inc
fwait
out
add
pop
gs
add
push
sbb
repz
imul
cltd
aad
push
jge
mov
sbb
push
flds
inc
mov
shrb
test
cli
lahf
dec
push
mov
fdivs
cmp
cmc
daa
or
jl
sbb
xchg
push
insb
test
test
fs
mov
pop
add
popf
xorl
pop
gs
sbb
rolb
inc
pop
lods
fcoml
fsubrl
cmp
sbb
out
jae
adc
cwtl
mov
out
sub
in
add
sahf
fiaddl
testl
push
xor
mov
fstpt
mov
ja
dec
jmp
fsubl
adc
inc
addr16
lods
dec
insb
and
add
mov
fiadds
jmp
cwtl
cmp
jge
das
xchg
dec
addr16
add
ss
inc
leave
jecxz
pop
std
movsb
push
jl
clc
ljmp
cmp
cmc
pop
xchg
test
cli
mov
dec
out
pop
in
jecxz
fldcw
dec
inc
dec
into
aas
test
lcall
cmp
mov
adc
inc
or
push
xlat
or
in
sarl
and
push
add
test
lahf
stos
jge
push
lret
ljmp
fcmovu
or
pop
shrb
jl
pop
sub
gs
imul
push
mov
lahf
cld
fisubs
sbb
int3
mov
and
mov
js
int
pop
sti
popf
and
push
inc
setnp
xor
jns
clc
mov
leave
lods
aaa
cmp
pushl
stc
push
cmpsb
mov
in
fdivr
shll
mov
dec
dec
xor
ja
dec
or
adc
xor
cld
cmp
push
inc
lods
mov
xchg
cmc
push
dec
stos
pop
mov
nop
or
mov
push
in
jp
pushl
cld
dec
test
inc
addr16
mov
dec
mov
dec
inc
xchg
js
jle
sbb
inc
lcall
aam
mov
dec
loope
xchg
xchg
dec
lods
lahf
test
xor
stos
js
mov
xchg
daa
mov
jle
sub
int3
or
dec
leave
add
sarl
mov
or
push
ss
pop
lea
fdivr
add
out
push
sbb
lea
insb
out
fistl
ljmp
mov
cmpl
insb
cmp
sti
push
sbb
jge
mov
dec
imul
cmpsl
xlat
jg
cmp
pop
mov
sub
mov
inc
cmpsb
xor
test
inc
mov
outsb
stc
incb
adc
xor
imul
gs
or
jne
cltd
cmp
cwtl
jmp
push
jnp
stc
sub
imul
test
dec
out
int
mov
or
ret
jae
mov
pusha
lahf
push
call
mov
lods
or
jle
cmp
dec
and
loope
push
lahf
jns
mov
mov
mov
sbb
cs
and
les
loope
ja
cmc
or
arpl
jle
mov
notb
cmp
mov
mull
fidivrs
test
dec
xor
fs
jns
mov
pushf
js
cmp
push
jle
jnp
push
xchg
js
pop
push
cmp
fistl
jns
sbb
pop
dec
js
mov
jl
out
push
pop
add
jge
loop
cmp
lods
xchg
xchg
ja
int3
fists
lods
jp
pop
out
lret
in
testl
mov
sti
mov
mov
xchg
add
cwtl
xchg
xchg
xor
cmc
call
xor
dec
push
and
enter
push
or
cmp
js
cmp
mov
push
mov
dec
adc
mov
mov
jo
dec
inc
es
clc
es
fmull
fildll
mov
stos
addl
xchg
xor
cmp
dec
pop
mov
adc
adc
dec
mov
lret
mov
je
xlat
pop
cmp
mov
sti
decb
and
sbb
fcoms
ret
adc
xchg
dec
daa
ficompl
ss
mov
jbe
push
cmp
ljmp
testb
sarl
push
push
testl
sarb
popl
push
in
aas
inc
xchg
cmpsb
add
push
pop
daa
jg
sbb
add
dec
push
pop
mov
cltd
xor
mov
divb
inc
bnd
or
mov
inc
rcl
xchg
mov
dec
or
dec
add
fiaddl
pop
cmp
gs
inc
divb
jmp
flds
test
mov
or
xchg
sbb
xor
adc
sbb
push
or
ja
lret
adc
dec
outsb
jg
cmp
test
cld
and
xchg
cmp
movsl
or
cmp
adc
jnp
arpl
movsb
decl
jge
mov
loope
xchg
jnp
popf
cmp
inc
push
jl
stc
pushf
sti
mov
int3
mov
pusha
lock
outsb
sub
jne
or
sbb
mov
mov
imul
push
arpl
xor
cmp
push
cmp
incl
mov
xor
test
pop
and
adc
repz
rcl
push
xchg
out
mov
test
outsb
js
gs
leave
vfrczss
mov
imul
xchg
iret
shrb
cmp
je
adc
daa
mov
or
pop
addr16
imul
jnp
stc
pop
adc
and
mulb
mov
jae
xchg
out
addr16
inc
mov
mov
xchg
cltd
mov
cld
cmp
iret
jg
mov
notb
enter
daa
inc
mulb
xchg
imul
mov
jp
out
ja
mov
ja
lods
test
sbb
jae
outsl
jnp
push
push
mov
imul
pop
fwait
and
push
cmp
add
add
jecxz
xchg
push
push
and
ret
cmpb
lea
popw
and
out
pushw
dec
jnp
mov
das
mov
or
js
testl
adc
add
adc
ss
fcomps
jecxz
sti
sahf
shl
mov
and
adc
ret
test
sti
int3
and
xor
sarl
xchg
pop
cmp
jl
sbb
or
in
mov
sarl
add
hlt
inc
adc
adc
push
adc
js
testl
pusha
mov
cmpl
cmp
or
pusha
sub
in
jns
dec
mov
sub
sarl
test
in
xor
mov
and
fsubs
call
push
test
data16
dec
adc
rorb
cmp
mov
xchg
lock
sti
jnp
or
pushf
fcompl
sbb
xlat
or
fcomi
xchg
fwait
cmc
sarb
sbb
xor
loope
mov
or
jns
mov
rolb
fisubrl
movsb
add
pusha
jne
lahf
adc
loope
lock
arpl
pushf
mov
sub
xchg
dec
pop
cld
insl
stos
ja
js
pop
sbb
xor
scas
pop
sub
out
or
fstpt
repz
jno
push
sbb
sbb
push
nop
cmc
mov
sub
test
xor
mov
div
xor
in
dec
shr
sar
adc
mov
or
lret
lret
sub
imul
xchg
rorl
jg
fdivrp
js
mov
push
inc
or
mov
sbb
xlat
stos
jg
shll
xchg
cmp
pushf
cs
jl
mov
adc
out
orl
mov
jne
xchg
mov
mov
stos
jmp
sub
pushl
and
inc
mov
notb
mov
sub
je
pop
ljmp
push
sbb
test
sti
cltd
in
push
add
and
jecxz
mov
xor
push
mov
out
mov
mov
lret
js
clc
inc
stc
ja
add
push
addl
push
scas
sbb
jo
inc
push
aas
jno
push
inc
adc
sbb
mov
dec
ror
outsl
out
xor
out
cmp
mov
insb
jge
mov
xchg
cmp
mov
add
inc
cmp
jne
push
pop
mov
fnsave
in
inc
mov
push
xchg
arpl
xor
lods
xchg
fs
fsubrl
cmp
xlat
aaa
test
shrl
pusha
repz
leave
daa
cmp
xor
cmp
push
xchg
mov
cmp
loopne
xchg
ret
or
pop
xchg
adc
out
pop
mov
mov
push
js
mov
loop
inc
cmp
pop
lock
test
push
push
push
outsl
inc
rcr
cmp
mov
sub
push
sbb
inc
mov
push
enter
stc
bound
decb
ja
movsbl
cmpsl
out
nop
ss
mov
xchg
nop
in
add
mov
cld
add
cmpsl
push
nop
hlt
movsl
adc
imul
pop
jg
popa
sub
cmpl
test
mov
or
mov
mov
sbb
inc
cmp
outsl
xchg
adc
xchg
stos
test
sub
arpl
mov
xchg
cwtl
jg
push
pusha
cmp
push
adc
cmp
test
jle
das
mov
ss
imul
xchg
sbbl
stc
faddl
jo
mov
inc
icebp
sbb
or
fcoms
arpl
cmp
jb
sub
mov
mov
jge
test
pop
jno
test
pop
mov
popf
push
lcall
push
lea
xor
mov
popf
xchg
xor
clc
or
mov
sbb
subl
mov
inc
xor
fsubp
std
jbe
mov
test
pop
icebp
dec
inc
repnz
pushf
aas
mov
add
outsl
dec
lds
mov
rcr
cmp
rclb
fiadds
jge
mov
js
insb
dec
cld
lods
mov
mov
popa
inc
mov
addl
mov
popa
rclb
cmc
stc
mov
jl
cmp
rclb
mov
ja
dec
or
cmp
mov
mov
and
ret
jecxz
mov
cmp
dec
or
add
and
cmp
pop
mov
dec
shlb
mov
lea
shll
cwtl
jno
rclb
pop
cmc
pop
daa
dec
add
pop
mov
sti
aad
fidivrs
xchg
mov
cltd
mov
sbb
pop
mov
sub
push
cmc
fistpl
shrb
sub
negb
jge
dec
sahf
incl
pop
dec
out
cmpsb
sub
cli
test
lods
jo
scas
jne
sbb
xchg
cmp
mov
adc
sub
add
fmull
dec
adc
cmpl
sarl
ja
mov
enter
sbb
push
sti
pop
imul
icebp
shll
loop
addr16
les
jnp
cmc
ljmp
pop
or
jg
cmp
pop
outsl
and
iret
sbb
jmp
adc
into
cmp
out
or
daa
fdivs
jge
pop
push
dec
sbb
cmp
aaa
iret
js
ljmp
jle
loop
push
iret
fbstp
test
rcrb
sbb
push
dec
cmpsl
cltd
xchg
mov
sub
xchg
push
inc
cmp
or
mov
xchg
int3
push
dec
push
std
sbb
jno
xor
ret
xchg
bound
pop
cld
adc
leave
cli
or
hlt
mov
lahf
notl
pop
push
cmpsl
xor
pop
cmc
cltd
cli
daa
scas
scas
in
js
mov
adc
lea
push
xchg
push
out
shufps
int3
xor
mov
lock
jmp
mov
arpl
sub
jbe
incb
jmp
cltd
les
xor
pop
data16
jp
arpl
dec
mov
or
xor
outsb
out
imul
push
js
sarb
fdiv
in
jmp
rorl
es
rolb
mov
and
leave
jmp
lods
scas
pusha
lds
dec
sub
fs
nop
aam
repz
sbb
adc
mov
mov
jp
movsl
pusha
xor
adc
mov
bswap
test
lods
jo
and
xchg
subl
test
mov
cmpsl
push
add
add
add
add
add
fistpl
lods
stc
xlat
mov
jp
jg
xor
push
test
mov
stos
push
xor
cmpsb
jbe
push
xchg
pushf
inc
pop
mov
cmp
add
cmpsl
iret
ja
xchg
xor
rclb
xor
test
lret
adc
testl
arpl
jo
ja
and
pop
dec
and
test
and
in
push
mov
or
inc
lcall
and
cmp
pop
ja
mov
inc
inc
and
cmpsl
cwtl
in
lods
xchg
ror
movsb
xlat
mov
mov
cmpsl
les
nop
into
out
bound
popa
scas
cmc
push
dec
dec
or
mov
jno
arpl
sub
xor
xor
lds
sub
add
and
push
cli
rorb
adc
sub
sbb
std
mov
sahf
scas
cli
add
test
repnz
lods
jmp
repz
ja
jns
or
xor
pop
sbb
fmuls
fisubrs
jns
loope
aad
xor
into
ja
sbb
subl
cmc
pop
js
mov
sbb
adc
pop
jae
dec
add
nop
jmp
dec
and
jge,pn
dec
daa
fbstp
xchg
cmp
out
in
pop
dec
dec
ja
sub
test
add
dec
cmpsl
adc
leave
dec
insb
cmp
dec
pop
lcall
js
jnp
inc
inc
xor
and
adc
jb
imul
mov
push
sbb
pushf
clc
dec
pop
repnz
xchg
push
jmp
cltd
cmp
sbbl
sbb
rcrl
cmpl
pop
imul
dec
fsubrl
xchg
add
jmp
cltd
pop
sbb
cmp
adc
cmp
enter
imul
push
sarb
mov
cmp
nop
lcall
jmp
cltd
cmp
or
cmp
lcall
int3
xchg
jg
lcall
imul
cmp
inc
add
inc
adc
lcall
pop
or
imul
sbb
lahf
pop
or
mov
xchg
sarb
mov
mov
fdivrl
ficompl
mov
addl
pop
mov
lods
fstps
mov
cmp
xorl
repnz
sbb
xchg
sbb
ljmp
cmpsl
sbb
or
pusha
lahf
add
mov
mov
cmpl
cltd
sbb
add
push
mov
loop
loop
cmpl
add
dec
cmp
rcrb
fwait
cltd
add
mov
mov
call
mov
mov
cmp
xor
cmp
xchg
jg
mov
cmp
cmp
test
outsb
scas
dec
sbb
test
mov
adc
mov
sbb
adc
jge
inc
movsl
mov
loop
sbb
aad
adc
dec
cmp
jge
pop
cs
out
cmp
mov
test
notl
scas
popa
push
cmpsb
inc
jne
add
mov
mov
test
fs
xor
cmpl
cmpsb
shrb
in
flds
loop
fwait
lock
aas
mov
clc
cmp
mov
testl
dec
adc
in
mov
push
arpl
pusha
dec
jl
push
test
mov
mov
xchg
adc
lcall
xchg
jle
sahf
scas
push
test
and
pop
lret
add
dec
outsb
push
lds
in
jns
mov
adc
xchg
dec
adc
imul
cmp
push
push
outsb
ja
mov
movsl
rcpps
mov
loope
jmp
arpl
xchg
lret
les
mov
dec
fisubrs
xor
or
es
jg
fs
jnp
in
mov
cmp
xchg
arpl
cmpsl
mov
cmc
leave
sbb
xorl
in
push
adc
imull
cmp
cmpsb
imul
jns
stos
xchg
dec
sbbl
imul
pop
mov
push
ljmp
ljmp
mov
mov
lods
or
mov
inc
xchg
cmpsb
outsl
mov
not
xchg
push
push
ljmp
call
lcall
pusha
or
stos
rorb
lcall
into
gs
out
test
outsl
out
push
bound
mov
and
add
sti
insb
sbb
and
repnz
ficoms
pusha
idivl
loope
cmpsl
dec
inc
add
mov
cli
and
pushf
loop
jne
cld
jp
pop
xchg
pop
sub
adc
loop
inc
arpl
insb
ret
loopne
outsl
clc
cmpsb
sbb
pop
sub
popf
ss
arpl
or
clc
nop
mov
int
pop
pop
clc
jge
sarb
pop
jns
push
jns
jle
int
loopne
sbbl
adc
lods
popl
cmp
mov
xor
mov
js
xchg
inc
push
loope
aas
cmp
cmp
inc
push
or
push
ret
pusha
out
aad
cmpsl
divb
or
inc
mov
xor
lret
mov
mov
mov
mov
push
push
adc
sets
jns
fwait
adc
outsb
lods
imul
cmp
pop
or
aaa
cmpsl
test
jecxz
dec
cli
js
mov
jnp
xchg
pop
pushf
or
cmp
mov
sahf
mov
push
daa
mov
cmp
push
mov
pop
xor
pop
dec
sti
jg
movsb
rorb
cmpsl
mov
movsb
mov
mov
fs
notl
or
movhps
mov
or
scas
pop
popf
pop
rcrl
xchg
lea
sbb
iret
jns
cmpsl
lahf
test
fs
pop
imull
adc
in
faddp
mov
sub
mov
mov
or
lea
add
dec
mov
scas
adc
adc
std
mov
push
or
call
add
jl
out
jnp
jnp
sub
lret
pop
mov
or
in
pop
int3
pop
mov
shll
lahf
mov
dec
sbb
adc
xchg
ljmp
sub
pop
enter
pop
out
test
movsb
add
js
sub
idivl
cmp
ljmp
shlb
mov
lds
or
lahf
mov
inc
dec
jno
sub
mov
jo
push
sbb
ljmp
or
call
xchg
push
fistpll
pusha
lcall
fsubl
dec
sbb
mov
xchg
push
lahf
cmp
xor
lret
sbb
inc
mov
ljmp
lret
int3
xor
or
daa
fistpll
divb
pop
cmp
addr16
fs
xchg
mov
mov
addl
inc
pop
add
xlat
jecxz
inc
leave
cmp
jge
loop
in
pop
mov
dec
inc
inc
xchg
call
inc
push
lret
xchg
sbb
out
jg
addr16
mov
inc
fldt
jns
int
lods
jge
insb
cmpsl
push
scas
fnstsw
cmc
ljmp
popa
fldt
fistps
lcall
lret
pop
inc
nop
js
cmp
add
daa
nop
xchg
mov
divl
mov
mov
lds
in
xchg
in
sub
shld
add
jge
jp
jns
shll
lea
jns
push
jmp
sub
cmc
dec
ja
cld
pop
inc
data16
pop
out
negb
aam
or
jp
inc
enter
hlt
jmp
movsl
jae
mov
mov
sti
mov
pop
inc
cmp
clc
test
and
fisttpl
mov
jle
xchg
sub
test
mov
arpl
mov
cmpsb
scas
outsl
fcmovnb
iret
fst
arpl
jno
add
out
sub
int3
ja
adc
sbb
pop
dec
or
filds
and
pop
cmp
lods
test
lods
jp
mov
leave
incl
imul
or
outsl
lea
negb
fiadds
sahf
xchg
dec
add
push
inc
cmp
cmp
mov
test
mov
xor
push
std
mov
pop
test
mov
dec
popf
int3
or
cmp
rcrl
sub
push
pop
jmp
inc
xchg
js
fcomps
pop
push
xchg
xchg
fisttpl
mov
push
mov
test
imul
xchg
sub
cmp
sti
jcxz
pusha
cmp
lahf
mov
xchg
mov
sub
rcl
sbb
mov
add
es
add
out
jle
and
fadd
cmc
xchg
jo
xchg
fldl
into
mov
stos
out
jecxz
push
jle
xchg
iret
cli
out
shl
enter
or
daa
ljmp
pop
int
jmp
mov
pushf
arpl
data16
xchg
jno
sahf
dec
lret
adc
cmp
das
ds
sub
xor
jne
in
mov
adc
data16
jo
pop
lock
mov
aam
cmp
jmp
je
stc
lcall
push
mov
fnstsw
outsb
or
clc
mov
add
in
cmp
je
add
addl
dec
rcrb
mov
clc
sbb
pop
clc
xchg
pop
push
mov
jp
rcll
mov
ret
sti
cmp
xchg
xlat
fldenv
into
stc
inc
mov
adc
jmp
mov
mov
ret
add
fstpl
pop
test
add
dec
insb
int3
adc
mov
xor
aam
das
push
movsl
subb
jle
in
insl
sbb
je
shll
inc
push
adc
cltd
jmp
cmp
jle
xchg
sbb
sbb
sbb
jnp
dec
imul
jo
mov
inc
jo
iret
jmp
out
inc
dec
lahf
jne
jg
jl
jbe
adc
mov
xchg
xor
js
loopne
in
jmp
add
and
pop
rcll
xor
sti
mov
cmpsb
aam
mov
fs
mov
jle
jmp
mov
nopl
jmp
cmpsl
loop
adc
ljmp
lret
inc
mov
rorb
cmpsb
jmp
adc
je
pop
xchg
cmp
xchg
adc
dec
xchg
sub
xchg
sub
and
xchg
movsb
cmp
daa
dec
cmp
dec
jg
cmp
pushf
xor
xchg
mov
jp
out
add
pusha
mov
ss
aad
cmpsb
lds
je
fwait
sub
mov
jg
xor
cmp
push
cli
leave
sub
aad
fwait
jg
jl
repz
cmp
cld
pushf
in
or
loop
cmp
inc
or
mov
inc
inc
sbb
push
out
repnz
pop
repz
rcrb
xchg
leave
cmc
mov
movsb
mov
jl
mov
std
pop
sub
jne
in
cmp
mov
leave
ja
adc
add
inc
imull
imul
ret
xchg
call
fcmovbe
mov
sbb
pop
xor
popa
jbe
es
mov
xor
xchg
inc
mov
fists
sub
add
cmc
dec
test
push
lea
and
mov
xor
mull
pop
mov
sbb
jmp
inc
adc
sbb
add
sbb
jb
fisubs
pop
in
js
ja
mov
jp
cmp
leave
bt
and
stos
mov
test
or
in
jnp
in
aad
add
jno
inc
mov
bound
das
cmpl
fwait
sahf
inc
stc
add
inc
sbb
cmc
jmp
in
or
sbb
insl
mov
lret
das
dec
cmp
ljmp
jmp
or
jo
inc
or
mov
jge
add
dec
lcall
jle
sbb
dec
stc
insb
mov
pop
dec
movlps
mov
inc
popl
pop
outsb
mov
dec
xchg
push
js
pop
sti
or
data16
lods
mov
jo
into
fwait
rclb
lahf
push
fiadds
cmpsl
clc
push
cmp
jmp
out
jp
sbb
jl
fistl
or
gs
mov
pop
sar
mov
cmpsb
arpl
loop
mov
imul
add
jnp
mov
vpshld
xchg
sbb
pop
and
outsl
into
mov
sbb
pop
arpl
inc
dec
mov
push
or
dec
jecxz
ret
push
push
cmpsb
aas
stos
shr
nop
ss
push
push
jb
pop
dec
xchg
mov
or
clc
sahf
cmpsb
das
mov
fistl
adc
out
cmp
mov
inc
sub
mov
and
lahf
xor
xchg
xchg
ficomps
and
xor
lea
jg
aad
xor
sbb
ret
mov
cmp
cmp
out
cmp
add
aas
mov
cmc
fwait
lods
out
sbb
popa
sub
enter
mov
mov
push
xchg
push
int3
cli
loopne
fwait
jnp
xchg
cmp
jno
loop
adc
in
inc
je
idivb
pop
cmp
mov
nop
call
mov
add
in
mov
adc
pop
adc
sbb
sti
jmp
adc
or
sbb
inc
pop
inc
or
loop
jnp
outsl
cld
arpl
add
stos
mov
xorb
inc
stos
addr16
sbb
aam
pushf
loop
cltd
sar
jne
push
bound
jg
in
aas
jne
push
lret
pop
jno
adc
test
aam
pushf
jge
mov
lea
mov
negl
inc
test
and
lods
mov
or
jbe
cmp
jge
lret
in
jg
sbb
popa
cli
mov
fwait
andb
mov
inc
xchg
popf
lret
or
xchg
cmp
push
adc
and
fdivs
mov
test
jae
xchg
add
pop
cmc
jnp
test
dec
and
shlb
jnp
add
jnp
ljmp
cmpsl
cwtl
mov
inc
dec
in
push
push
call
shl
addr16
pop
fwait
test
inc
addl
mov
out
and
test
lcall
add
stos
mov
cmovae
mov
push
invd
xchg
xchg
xchg
add
jmp
data16
adc
lahf
in
sub
and
nop
push
in
push
pop
movsl
outsb
mov
xlat
aaa
mov
inc
inc
xor
out
pop
cmp
lahf
in
xchg
sarb
sbb
popa
mov
sbb
inc
maxps
mov
insl
or
in
push
cmp
cmp
or
int3
fs
aas
and
inc
std
mov
jle
fs
cmp
jl
mov
pushf
cmp
std
cltd
cmp
xor
in
or
sub
popf
dec
cmp
sub
mov
inc
popf
add
cltd
std
addl
or
inc
adc
adc
out
scas
jl
mov
scas
xchg
fidivrs
pop
or
sarl
jnp
jmp
sbb
mov
aas
fs
cmp
in
dec
mov
push
fmul
insl
push
idivb
addl
or
or
inc
mov
or
mov
jge
push
stos
jge
pop
pop
cltd
cmp
xor
cltd
sbb
cmp
addl
adc
daa
pusha
lahf
add
pop
das
aaa
pusha
lock
cmp
dec
mov
cmp
jnp
scas
flds
mov
test
sbb
mov
imul
jge
sbb
dec
cmp
cltd
test
jle
ds
cltd
add
mov
movsb
pop
pop
inc
hlt
dec
mov
push
pop
mov
jmp
xor
adc
mov
cltd
cmp
insb
dec
cmp
scas
sbb
dec
dec
out
mov
shrl
andl
or
in
cmp
dec
iret
sarb
stos
aad
lods
loop
push
cmp
or
sub
adc
outsb
pop
mov
cmp
shll
or
sbb
mov
inc
cmp
pop
adc
sbb
jnp
mov
pop
cmp
fmull
js
sbb
sub
dec
ror
dec
bnd
add
push
inc
ret
or
cmp
jmp
test
sub
jmp
cmp
jo
imul
jnp
and
in
mov
mov
scas
mov
mov
xorl
cmp
or
cmp
mov
shr
cmp
adc
outsl
popf
sub
es
cmp
or
clc
mov
add
cmp
or
lods
cmp
in
mov
xchg
push
jge,pt
sahf
jmp
std
mov
sbb
sbb
cltd
push
mov
int
mov
or
in
cmp
int
xchg
xor
outsb
mov
cmp
fst
cmp
ror
cltd
cmp
sub
or
mov
sbb
xor
add
cmpl
push
mulb
test
add
scas
sbb
mov
cs
lcall
and
adc
out
mull
daa
xor
ja
stc
and
mov
mov
inc
mov
mov
aas
js
dec
push
paddusb
arpl
adc
stos
fisubrl
mov
cmpb
xchg
cmpsl
call
aas
sub
push
sahf
dec
test
out
inc
cmpsl
outsl
jae
mov
sub
mov
dec
push
adc
add
add
inc
cmp
pop
add
dec
jge
dec
mov
jp
xor
push
inc
cmp
leave
movsl
outsl
jo
iret
sub
nop
sahf
jge
lret
cmpb
call
test
test
pop
ficoms
or
mov
adc
fwait
xlat
aam
push
or
mov
inc
mov
push
pop
xchg
mov
lahf
mov
call
or
xchg
fidivl
lahf
addr16
je
jo
test
cmp
cmp
push
js
rcrl
xor
cmp
filds
arpl
int3
inc
outsl
mov
add
and
or
and
dec
jae
lods
mov
cmp
inc
mov
hlt
cltd
daa
fists
pushf
subb
inc
mov
add
add
arpl
das
clc
jmp
add
dec
shll
icebp
mov
cmpsl
dec
loopne
add
mov
sti
imul
sbb
int
pop
fwait
mov
das
mov
sub
inc
mov
push
test
loop
pop
cmp
adc
ss
xor
sub
gs
pop
imul
ja
xor
cmp
iret
ds
cmp
outsl
movsl
cs
sbb
iret
pop
xchg
gs
mov
mov
mov
cwtl
mov
mov
pop
hlt
mov
in
inc
sub
cltd
jl
mov
mov
pusha
les
stc
sbb
and
dec
xchg
addr16
ret
push
adc
cmpsb
inc
lahf
mov
jg
js
movsl
test
adc
or
pusha
xchg
fs
xchg
adc
jl
adc
adc
jl
lea
dec
pop
rclb
int3
xchg
ja
test
lods
adc
roll
icebp
xchg
jo
shld
lock
mov
jmp
mov
add
mov
andl
mov
push
jg
lret
inc
or
std
xchg
inc
int
xorl
mov
sarb
xor
mov
push
idivl
das
loop
cmp
clc
push
cmpl
clc
das
andnps
jl
js
and
dec
cmp
jne
and
lahf
sbb
mov
pop
inc
je
mov
imul
and
adc
dec
or
pop
xor
jne
scas
arpl
outsl
xchg
mov
or
xchg
cmp
xchg
add
adc
sub
push
jne
xor
dec
stos
and
mov
fists
xor
jg
mov
xor
mov
aas
daa
xchg
cmpsl
stos
into
in
or
mov
ret
sbb
cmp
clc
and
sub
into
popf
pop
cmp
je
push
xchg
lods
rcrb
pushf
mov
sub
rcrb
pop
mov
fidivrl
cmc
fstpt
dec
push
jg
sub
dec
aas
jne
push
pop
xor
mov
sbbl
outsb
cld
fdivr
or
mov
mov
lar
sub
mov
imul
dec
adc
out
data16
jg
mov
in
js
sahf
adc
movsb
xor
pop
jle
arpl
adc
cld
rorb
adc
roll
rcrl
ja
sbb
fcompl
repnz
push
jle
bound
push
jle
imul
sbb
adc
push
xchg
ja
shr
or
mov
fwait
add
repnz
std
xor
pop
sbb
add
lds
jp
jg
movsb
daa
es
adc
mov
stos
jl
push
test
in
push
sarb
mov
lcall
adc
aad
xchg
jmp
add
xchg
mov
xchg
addr16
mov
dec
fs
scas
pop
dec
sbb
pop
cmp
popf
cmp
push
arpl
mov
mov
popf
mov
addb
ret
lds
sbb
lcall
cmp
sub
sti
test
xor
cmp
add
fdivrs
add
dec
dec
pop
out
mov
popa
pop
fmull
pop
adc
outsb
das
mov
leave
out
cmp
adc
inc
mov
sbb
cld
sub
int3
adc
sti
cmp
insb
or
dec
negl
fbld
loop
fcoml
mov
dec
pop
xor
loopne
sti
mov
sub
jns
mov
mov
cmp
pusha
jp
jge
sub
sub
loopne
xchg
dec
pusha
loop
lods
out
push
jg
idivb
int3
fstl
pushf
ficompl
jae
xor
cwtl
dec
jnp
outsb
jo
push
nop
out
pop
xlat
xor
xchg
xchg
pop
jle
imul
pop
xchg
out
add
out
out
mov
cmc
sbb
stos
daa
mov
sti
xchg
es
inc
cwtl
or
divb
xchg
pusha
insb
pop
jle
ja
xchg
dec
test
imul
dec
add
cmc
mov
or
nop
repz
in
iret
adc
ja
data16
adc
stc
pop
js
pop
je
idiv
cmpb
imul
mov
test
leave
movsb
fsubs
or
fcomps
pop
mov
mov
stc
iret
int3
ss
test
and
add
or
cmpb
pusha
mov
sti
add
dec
sbb
xor
jle
dec
testl
pop
xorb
inc
jg
addr16
mov
mov
fimull
mov
ror
or
in
int3
dec
out
bound
sub
cmp
iret
or
jbe
in
andb
xor
fstps
mov
pop
into
sbb
jmp
in
outsb
cmpsb
sarb
pop
mov
cltd
loopne
pop
mov
xchg
shl
repnz
push
sub
out
roll
add
pop
out
inc
cwtl
jae
jle
xchg
rclb
jae
shlb
enter
jmp
or
xsha1
cmpsb
or
xor
movsb
jbe
mov
clc
js
ss
push
xchg
cltd
adc
inc
add
stos
dec
inc
jecxz
inc
mov
inc
mov
fnstenv
addb
lret
leave
inc
imul
lcall
subb
ljmp
xor
sbb
cmp
jge
jp
outsl
test
xor
push
notb
xor
iret
push
pop
adc
add
xor
arpl
xlat
rorl
fsubrs
cmpl
inc
xlat
cmp
testb
imul
mov
mov
cmp
cmp
shlb
stc
clc
scas
imul
jnp
ret
clc
in
adc
popf
cmp
and
movl
or
dec
pop
xor
or
pusha
jp
jbe
mov
stc
iret
sbb
fwait
mov
mov
pop
adc
js
in
push
sbb
adc
jmp
in
jl
fwait
mov
fwait
adc
ret
fwait
stc
cmpsl
mov
adc
push
ss
sbb
dec
sbb
jp
inc
inc
nop
out
out
mov
mov
cmp
stos
jnp
mov
xchg
cmovl
push
dec
jp
movzwl
jge
jno
dec
ss
aaa
jb
jg
sbb
xchg
icebp
stc
push
adc
popa
iret
mov
add
or
cmp
ja
mov
cmpsb
sahf
mov
add
jge
popa
dec
pop
ja
cld
std
xor
mov
mov
cmp
sbb
mov
cli
jmp
out
stc
mov
sahf
out
jge
sbb
fisttps
insb
aas
push
fsub
jmp
or
lods
adc
sub
fmull
mov
mov
imul
es
xchg
xor
or
mov
add
sbb
xchg
pop
sti
xchg
rcrb
push
aaa
cmpl
idivl
lret
loope
imul
mov
xchg
mov
dec
jns
xchg
addr16
sbb
fisttps
lds
mov
stc
shl
cmp
les
cmp
or
dec
std
cmp
adc
mov
lret
cmc
mov
mov
jmp
xchg
inc
add
jp
test
add
cmp
lods
mov
jnp
cmp
cmp
sbb
pslld
jno
les
mov
popf
lea
cmp
sbb
imul
xor
cmpl
aas
sbb
out
adc
pusha
adcl
adc
fidivs
lcall
cmp
adc
mov
jmp
mov
and
lods
mov
mov
mov
xchg
sti
fildl
pop
add
js
sti
inc
aaa
es
lods
dec
push
push
shl
out
fisttpl
xchg
sub
sti
xchg
lea
xchg
arpl
aas
mov
sbb
adc
cmpsb
mov
jle
fimull
stc
xchg
test
jp
test
cmpsb
call
sbb
out
cld
mov
dec
fisttpl
jg
adc
sub
int3
xchg
es
aad
xchg
jp
leave
sub
in
test
stos
lret
ja
sub
inc
dec
mov
adc
ret
shr
cmp
cmp
repnz
or
js
jbe
jecxz
test
ror
in
lods
jmp
mov
mov
daa
jecxz
sub
xor
rep
cmp
testb
dec
sbbb
jg
xor
sbb
mov
adc
xchg
sub
subl
add
or
fnstenv
dec
mov
jnp
adc
mov
mov
test
cmpsb
repnz
jp
mov
aas
adc
jmp
jg
xchg
and
xor
into
leave
leave
dec
mov
mov
push
dec
lcall
mov
imull
mov
notb
push
stc
addr16
jns
outsl
int
xchg
out
adc
ja
ljmp
or
add
add
test
call
mov
sbb
xchg
mov
imul
dec
stc
ret
nop
cltd
pop
pop
fisubl
mov
jmp
cmp
stos
and
sbb
pop
mov
cmp
mov
pop
nop
mov
nop
sub
or
jns
scas
add
les
mov
push
inc
mov
mov
mov
mov
loopne
push
or
data16
cmp
mov
inc
lods
xor
in
dec
push
inc
mov
and
rcrb
bound
sub
into
cltd
scas
cmp
pop
iret
jp
xor
mov
sbb
add
push
dec
mov
dec
push
xor
sub
out
les
mov
xchg
jle
into
jmp
cli
lahf
jecxz
and
sub
jno
packsswb
fisttpl
jecxz
les
fsubrl
mov
cmp
jp
push
jbe
clc
jg
aas
mov
imul
popf
push
mov
cltd
or
cli
out
jnp
sbb
in
add
dec
pop
test
pusha
sub
inc
xchg
dec
sub
cmpsb
test
scas
ljmp
fsubrs
lret
stos
pop
and
sti
pop
pop
adcb
xor
mov
cmc
add
mov
cmp
cltd
aad
lock
inc
ret
dec
scas
push
les
popa
lret
iret
fdivrs
lret
or
and
inc
daa
fildl
jno
stc
mov
adc
xor
test
pop
mov
imul
orb
js
mov
stc
loopne
or
adc
sbb
clc
jae
and
sbb
arpl
push
insl
jp
xor
ja
cmp
cld
icebp
mov
jp
stos
xor
rol
push
cmp
mov
jnp
adc
sbb
push
mov
hlt
fdivrs
rorb
in
sti
sbb
je
rol
les
xchg
loopne
pop
add
stc
out
repz
sbb
repz
cwtl
pop
sbb
mov
aad
ja
sub
movsl
dec
mov
imul
cmp
push
sub
cmc
test
pop
inc
test
cmpl
adc
inc
mov
add
pause
mov
and
xor
lods
xor
test
lahf
mov
sub
cmp
fmul
sbb
push
fs
adc
fidivrs
jmp
test
jns
mov
jg
lods
xor
cltd
mov
add
and
fwait
pop
scas
mov
and
lods
adc
inc
xor
jbe
push
xchg
add
cmp
and
mov
iret
push
jnp
cmc
mov
movsb
mov
pop
sti
xchg
mov
adc
lret
and
mov
mov
adc
sbb
sub
mov
in
jae
inc
ds
pop
or
fdivrl
mov
dec
mov
sbb
cs
jecxz
add
clc
push
out
push
cmp
cmp
push
cmpsb
adc
jmp
xchg
jg
mov
dec
pop
fstps
cmp
jg
clc
dec
cmpsb
sti
repnz
mov
cmp
or
adc
arpl
sahf
xchg
out
subl
pushf
mov
xchg
out
push
lea
jnp
pop
mov
movsl
int3
cltd
aad
popf
sbb
cmp
mov
testl
push
stc
leave
clc
mov
sbb
and
cmp
mov
cltd
filds
into
mov
inc
pop
test
cmp
divb
sti
sahf
mov
les
into
fldl
dec
aas
or
pmaddwd
push
out
ja
xor
js
adc
andl
mov
mov
jne
fimuls
cwtl
lret
mov
mov
mov
sbb
bound
loop
mov
es
mov
jno
out
pop
push
sbb
mov
pop
inc
fdivr
or
dec
clc
pop
or
mov
cmp
out
leave
mov
xchg
dec
or
xchg
je
mov
inc
js
inc
jbe
rolb
insl
dec
js
dec
mov
push
xor
imul
into
and
mov
aaa
addr16
cmp
ljmp
mov
cld
js
dec
add
dec
pusha
jl
fdivl
mov
jle
repz
mov
shlb
fwait
std
es
addr16
bswap
fistl
testl
inc
and
xchg
clc
outsl
loope
sbb
stos
or
xchg
test
mov
or
cmp
test
jns
push
push
sbb
push
sbb
popa
xlat
js
push
cmp
push
fidivs
or
daa
xor
or
dec
es
in
imul
mov
xchg
mov
xchg
pop
fidivrs
das
stc
mov
or
push
jle
je
jle
or
es
push
aad
fadds
test
shlb
cmp
cmp
cmpsl
cmp
ficoml
fidivl
js
sahf
mov
sbb
jns
cli
adc
or
idiv
out
mov
mov
ljmp
dec
pop
out
mov
mov
mov
pop
fwait
testl
js
cmpsl
iret
inc
push
popa
cwtl
xor
inc
dec
ss
inc
iret
es
js
leave
leave
jno
sbb
cmp
cli
mov
mov
pop
adc
jae
fnstsw
mov
inc
andnps
fsubs
and
cmp
xchg
push
mov
lea
addr16
mov
mov
cmc
fidivrl
add
sbb
cmp
sbbl
xchg
pop
adc
mov
jmp
je
jmp
imul
enter
jle
or
pusha
dec
mov
xchg
into
icebp
dec
xchg
orl
push
mov
add
cltd
cltd
xchg
test
sub
mov
cmp
sbb
xchg
jecxz
jl
jg
inc
loopne
xchg
out
jge
mov
out
mov
not
adc
cld
mov
mov
inc
sahf
and
xchg
test
mov
lods
mov
mov
test
lret
bound
stc
mov
cmp
test
xchg
jne
mov
cmp
adc
xchg
sbb
scas
pop
pop
out
cmpsl
adcl
or
lret
pop
iret
mov
jp
cmp
cmp
mov
mov
ret
in
jbe
out
jp
subl
mov
mov
dec
fdivrs
cmp
notl
jo
mov
es
add
ja
adc
pushl
sub
daa
dec
out
mov
fwait
mov
imul
stc
dec
jnp
pop
pop
jns
inc
dec
ret
dec
stc
add
nop
es
jns
jnp
pop
mov
ja
mov
or
test
loope
cmp
negl
loope
push
or
mov
adc
mov
sti
ds
pop
push
adc
dec
jle
and
dec
pop
or
dec
pusha
scas
mov
inc
test
fs
push
pop
sub
punpckhbw
jns
cmp
mov
bound
add
mov
daa
pop
jg
dec
adc
iret
pop
or
adc
fisubs
idiv
jl
mov
push
xor
fiaddl
sbbl
jmp
ja
jbe
aas
in
xchg
lods
test
outsl
cmpsl
mov
xchg
dec
fcmovb
fcomps
and
insl
adc
dec
mov
js
popf
in
aaa
mov
or
xchg
push
addr16
decl
push
or
jecxz
jbe
pop
insb
out
mov
scas
mov
jp
mov
outsl
lret
pcmpgtd
dec
test
adcb
add
ljmp
enter
jmp
ja
pop
mov
ret
es
daa
jnp
push
bound
or
mov
dec
inc
adc
mov
das
jno
and
fdivrs
mov
dec
fsubrl
sub
insl
sbb
dec
adc
das
cmp
push
mov
idivb
mov
imulb
shlb
loope
sbb
les
cmp
pop
je
aas
mov
adc
stos
jnp
ja
daa
iret
cli
out
scas
dec
adc
fstl
mov
cmc
mov
xor
in
or
adc
clc
aad
push
cltd
out
jo
cmp
into
xchg
test
cmp
sti
aad
jle
mov
cmpsb
and
sub
cmpsb
aam
push
lahf
pop
cli
pop
and
xchg
xor
jmp
pop
pop
push
mov
push
iret
inc
xchg
cvtdq2ps
fcompl
cmp
dec
pushf
popa
pusha
inc
cmp
sbb
xchg
out
dec
jb
sbb
or
or
dec
test
push
jmp
stos
pop
andb
jo
fwait
xor
sbb
setbe
xchg
mov
in
in
jbe
clc
dec
in
or
xchg
pop
sub
jecxz
inc
arpl
stos
mov
adc
fsubs
sbb
add
jl
ja
cltd
xchg
xchg
add
pop
mov
push
adc
cwtl
insb
pop
dec
dec
negl
dec
mov
into
jge
sub
cmp
mov
repz
mov
in
lahf
daa
incb
push
pop
movsb
add
pushf
pop
xchg
adc
daa
mov
icebp
dec
stc
arpl
test
test
pop
mov
shlb
pop
out
fnstcw
ljmp
jnp
sbb
loope
inc
mov
sub
insb
jns
adc
in
sbb
js
outsl
cmpsb
daa
mov
mov
test
mov
sub
outsl
movsl
pop
adc
outsb
addr16
notb
adc
sub
push
mov
pop
lret
lcall
pop
and
push
adc
stos
or
ss
cs
hlt
jns
hlt
call
js
sub
mov
push
insb
cmp
push
push
cmp
xchg
mov
xchg
jge
inc
adc
scas
add
stos
push
movsb
mov
stc
ljmp
iret
imul
add
pop
shrb
repnz
and
fnstcw
push
sbb
out
int3
mov
adc
sbb
or
daa
push
int3
outsl
test
cltd
xor
jecxz
xlat
fdivrl
pop
ljmp
sti
pop
mov
and
xchg
add
mov
adc
cmp
data16
push
and
add
leave
pop
xchg
fidivrl
jb
lcall
inc
fstps
stos
pop
or
or
mov
xchg
mov
pop
fnstenv
sbb
adc
add
adc
add
loopne
cmpsl
mov
movsb
adcb
mov
jl
mov
xchg
jecxz
cmp
stc
lods
jecxz
push
push
pop
sbb
sub
pushf
xchg
dec
test
lods
push
mov
and
lods
push
imul
add
mov
sub
mov
mov
dec
lds
shlb
jns
call
loopne
mov
push
js
cmpl
test
iret
fisttps
push
adc
sub
dec
iret
add
cmp
test
stos
ret
push
jge
xchg
stos
jp
jge
pusha
aam
insb
xor
sbb
cmpl
adc
xchg
cltd
mov
pop
in
sbb
sbb
ret
into
andl
lea
ja
test
jbe
sub
jnp
add
ret
outsb
xchg
ret
insl
adc
dec
mov
inc
out
nop
iret
das
or
xchg
pop
push
stc
rorl
sub
jnp
jge
pop
clc
mov
call
push
add
es
subb
cmc
fsubrs
ljmp
addr16
xchg
inc
mov
add
adc
add
pushf
mov
call
mov
lret
dec
jecxz
fwait
aaa
pop
jle
outsl
ss
sub
xchg
jmp
adc
or
lcall
mov
aaa
mov
adc
adcb
jle
outsl
pushf
dec
into
lret
sbb
xor
add
mov
mov
cli
push
je
mov
test
cmp
mov
cmpl
lds
ljmp
nop
or
setbe
add
into
ljmp
jns
ja
cmc
xor
daa
leave
inc
addr16
mov
daa
nop
mov
sbb
xchg
cld
xor
pop
cld
add
xchg
xchg
imul
cmp
fisubrl
sub
cmp
scas
sti
movsl
xchg
mov
iret
fmull
jg
adc
sbb
rolb
mov
pop
mov
aad
add
mov
les
adc
addr16
push
test
jge
xchg
push
xchg
inc
mov
mov
in
push
mov
or
clc
jecxz
clc
mov
sub
std
outsl
dec
cmp
pushf
lods
xchg
mov
imul
xchg
pop
pop
outsw
push
or
and
out
cmc
sub
jns
subb
xchg
push
xchg
adc
cmpsl
pop
or
js
mov
imul
mov
iret
add
js
cmp
aas
jle
js
mov
pop
or
jo
mov
test
ss
cmpsl
iret
mull
dec
mov
addr16
cli
xchg
push
sbb
push
push
dec
orl
je
or
ja
xchg
mov
dec
mov
xor
aas
xchg
xchg
mov
test
js
push
movsb
out
xchg
enter
mov
aaa
ljmp
lret
pushf
adc
adc
cli
xor
add
pop
mov
mov
mov
inc
add
dec
push
xorl
lret
jb
mov
dec
dec
pop
cmp
and
add
sub
ss
out
fisubrs
inc
and
lock
pop
cli
addr16
xlat
pop
mov
inc
dec
inc
xchg
sub
pop
sbbl
push
and
call
test
jg
lahf
addr16
add
xchg
leave
jle
pop
mov
mov
insb
in
out
notb
xor
and
mov
sub
js
push
jecxz
addr16
cmp
mov
xchg
lods
fs
inc
cmp
roll
adc
sub
mov
cmp
es
adc
scas
mov
pop
iret
lea
jns
jns
fisttpl
push
mov
lret
sahf
ret
test
scas
popa
lret
mov
pop
sbb
testl
nop
mov
cmp
push
pop
jmp
scas
mov
arpl
fnstcw
mov
lahf
xor
mov
push
cwtl
inc
sbb
cld
lahf
in
sbb
or
fidivrs
loope
mov
jae
ret
scas
in
inc
scas
bound
sub
cmc
sti
push
ret
xor
xor
mov
add
das
addr16
movsb
iret
sbb
sub
mov
dec
jo
fyl2xp1
push
clc
lods
sub
push
xchg
sahf
xchg
mov
mov
push
mov
sbb
sbb
cmp
fucom
add
cmp
aam
inc
add
sbb
je
fcomps
sbb
cmc
mov
dec
aam
and
push
pusha
add
pop
cmp
pop
xchg
pop
mov
hlt
int3
les
popa
sub
aam
sub
fdivrs
mov
push
movl
outsb
cmpsl
es
push
imul
sub
test
mov
cmc
or
sbb
or
jge
nop
cmp
or
cmp
test
incl
fisttpll
addr16
les
xchg
mov
add
setbe
push
daa
xchg
out
lret
mov
or
cwtl
insb
push
mov
sbb
outsl
test
and
jns
jae
ja
out
pop
mov
into
mov
or
aam
in
or
call
jbe
sbb
cmpl
das
xchg
sub
movl
pop
or
sbb
sbbl
shlb
loop
cld
or
aas
sti
sub
jmp
mov
out
inc
sbb
lahf
dec
test
jge
stc
movsb
inc
mov
mov
icebp
xor
popa
idivl
test
imul
xchg
xor
jmp
dec
xchg
pop
cmp
mov
addl
jle
push
mov
call
ja
pop
btr
jle
fcmovb
jle
js
pop
stc
ljmp
mov
mov
inc
push
bswap
ja,pt
push
les
mov
xchg
pop
xchg
xchg
ret
pusha
mov
fstpt
adc
fcoms
push
enter
adc
movsb
jnp
mov
fwait
mov
cmpsl
push
pushf
stc
mov
add
leave
xchg
popa
inc
adc
cmp
sbb
jo
xchg
mov
and
imul
mov
or
cmp
out
mov
lahf
movl
add
sub
testb
clc
jmp
iret
movl
dec
push
cs
push
push
add
mov
push
adc
pop
iret
mov
sar
mov
pop
sbbl
sahf
dec
cmpsl
cmpsb
mov
es
sarb
cwtl
je
mov
cmpsl
cwtl
push
int
shl
hlt
xchg
pop
lret
mov
sub
mov
cmp
cmp
mov
jb
sbb
into
xlat
testl
mov
cmp
push
test
data16
loop
push
pop
jns
pop
pop
add
neg
and
lcall
or
sub
fs
cmp
test
jp
push
fnstsw
repnz
ss
in
mov
jecxz
add
shlb
jno
das
mov
add
sbb
push
xchg
mov
jnp
sbb
ds
xchg
cmp
cmc
push
mov
iret
negl
jle
ret
aam
mov
push
push
call
add
std
roll
inc
push
test
xchg
int3
or
sub
jle
jae
cmp
lcall
fidivrl
cli
test
jge
ja
jbe
xchg
mov
ljmp
cmpsb
dec
pushf
out
clc
addr16
mov
int3
sbb
loop
sahf
out
mov
push
fucomi
jmp
sub
addr16
mov
mov
ret
inc
out
lea
mov
test
lret
mov
cmp
popf
dec
sbb
xor
jnp
iret
push
mov
popf
js
or
clc
sti
jmp
pop
out
incl
mov
dec
sarb
push
lods
sub
clc
cmpsl
out
adc
xor
and
dec
mov
leave
insb
mov
push
add
mov
cmp
pop
mov
das
mov
xor
subl
subl
cmp
sbb
cmp
xor
roll
pop
xchg
in
pop
add
repz
loop
jb
sbb
sbb
je
fidivl
aad
sub
stc
cli
cmp
sti
jae
cmp
mulb
int3
ja
pop
in
cmp
lods
dec
fistpl
aam
xor
scas
cmp
inc
cmpsb
ss
or
dec
inc
loop
loope
stos
loop
add
cmpsl
test
dec
add
ss
jns
add
adc
pop
adc
daa
mov
test
mov
lret
in
pop
aas
adc
ja
aad
pop
test
cmp
fs
jns
cmp
mov
inc
adc
add
jp
stos
adcb
adc
pusha
adc
cmp
scas
cwtl
leave
leave
aam
and
ljmp
adc
mov
fmul
cmp
popf
cmp
or
jo,pn
sub
mov
sbb
jbe
sti
testl
and
mov
fisubrs
mov
add
dec
mov
clc
add
scas
sbb
sub
mov
or
xchg
test
out
pop
subb
divl
ss
mov
xchg
mov
push
xlat
xchg
iret
or
push
fdivrs
xchg
cmpsl
lods
lds
inc
mov
mov
jge
mov
and
jo
pop
ficoms
rolb
mov
jno
jns
sub
sbb
push
jne
jns
sub
pop
jnp
mov
dec
and
pop
lret
cld
insb
addr16
stos
sti
or
jle
ds
adc
inc
sbb
mov
cmp
in
mov
mov
repnz
sub
ret
cmp
clc
cmp
adc
sbb
jmp
ret
push
lock
js
dec
mov
cmp
dec
and
in
mov
pop
dec
cli
mov
loop
sti
mov
loope
ds
stos
inc
mov
jb
pop
dec
cmp
mov
ja
add
fadds
imul
adc
imul
cmp
dec
sbbb
jo
cmp
pop
pop
leave
icebp
inc
out
nop
xchg
mov
cmp
jmp
xchg
pop
sti
test
xchg
xor
cltd
cmp
sti
mov
mov
push
cltd
adc
mov
jns
sti
sbb
add
mov
adc
cmpsb
std
shll
ljmp
mov
jns
sbb
mov
sub
mov
pushf
movsl
xchg
jg
xchg
sbbl
pop
push
arpl
mov
jl
lahf
cmp
rol
push
xchg
arpl
out
xor
pop
sarb
pop
sbb
jl
arpl
pop
mov
cmp
cli
pop
ja
and
mov
xchg
mov
fucom
sti
cmpl
out
and
xchg
jo
or
mov
cmp
cmp
jb
or
jns
pop
push
into
aam
decl
xchg
inc
mov
test
sub
popa
mov
pushl
xchg
sbb
iret
mov
push
sub
adc
cmp
sahf
fdivl
jnp
ja
out
stos
lcall
loopne
into
pop
fdivrs
in
lahf
cwtl
cmp
and
xchg
dec
fs
fldt
stc
dec
mov
subb
loope
or
cwtl
add
sub
mov
sub
iret
cli
outsb
push
jg
in
add
dec
xchg
jmp
repnz
or
and
bound
pop
mov
sbb
pushf
adc
cmc
mov
jmp
sub
xor
mov
pusha
sarl
pop
or
movsb
imul
pop
jmp
jmp
push
decl
cmp
daa
insb
ja
dec
pop
test
sub
mov
add
sbb
mov
push
pop
test
dec
and
sub
gs
lds
xchg
clc
mov
or
outsl
mov
repz
stos
mov
std
nop
fmul
sbb
dec
jle
inc
and
add
pop
dec
ja
out
outsl
inc
mov
dec
sub
adc
and
inc
pop
shlb
jmp
xchg
and
push
xchg
dec
jae
sti
adc
jnp
outsl
aas
adc
fdivr
jp
sbb
adc
adc
ss
loopne
cmp
test
mov
in
cld
inc
dec
into
pop
mov
imul
xor
push
test
push
sbb
push
and
ja
cmp
mov
out
sub
cmp
sbb
das
inc
fldl
pop
js
adc
hlt
fimull
xor
pushf
test
cld
add
ret
sub
push
lds
dec
pusha
rep
dec
pmaddwd
rcrl
adc
cmc
add
hlt
test
add
xchg
pop
push
and
mov
inc
dec
mov
in
in
dec
mov
ja
dec
jns,pt
repnz
inc
jbe
xor
in
mov
js
in
push
cmp
mov
mov
sub
imul
fisubs
pop
iret
mov
stos
pusha
and
push
out
fcoml
aas
shrl
scas
arpl
xchg
mov
or
popf
sarl
sbb
xor
jmp
test
dec
push
aas
pop
mov
je
sbb
dec
cmp
sbb
pop
inc
sub
mov
mov
insl
fisubs
cmp
test
imul
jnp
movsl
das
inc
add
adc
inc
jo
mov
stos
arpl
scas
negb
and
inc
enter
lea
mov
enter
push
mov
aad
clc
sub
in
out
jmp
push
mov
in
scas
sbb
sbb
sub
push
jle
jmp
jle
cmpb
dec
mov
lds
jno
jg
mov
gs
pop
sub
add
mov
adc
sbb
cmp
sti
pop
repnz
clc
fs
out
adc
push
dec
cmp
dec
mov
pop
in
jge
sub
pop
js
in
add
jecxz
pop
iret
fidivl
jo
add
dec
addr16
push
fdivp
pop
ja
jg
dec
cmc
mov
lea
jg
inc
and
stos
jnp
and
and
fimull
dec
push
jae
mov
or
mov
mul
lcall
mov
iret
cmc
mov
jp
jge
mov
mov
cmp
mov
sti
or
stos
enter
adc
sti
cwtl
inc
or
pop
inc
clc
jne
sbb
dec
add
cmp
cmp
cli
jmp
std
bound
cmp
notl
je
lea
into
pop
stc
cmp
mov
or
or
mov
dec
mov
dec
cmpl
adc
mov
or
push
adc
mov
sbb
mov
psubb
notl
sbb
add
or
inc
jnp
cmp
inc
inc
stc
mov
cmp
cmp
outsl
enter
cmp
dec
cld
dec
mov
fsubrs
xor
mov
cmp
or
movsb
cmp
fistpll
mov
push
pop
jns
jmp
stc
mov
ljmp
cld
jns
xchg
xchg
arpl
inc
bound
mov
imul
cmp
cli
in
add
lds
call
add
cli
jg
adc
inc
add
adc
jge
cli
jg
add
movsl
mov
cli
jnp
mov
rorl
dec
and
push
or
adc
cmp
adc
mov
push
and
stc
cmp
pop
xchg
cmp
jp
fwait
cli
xchg
or
mov
cmp
inc
push
mov
aam
pop
fwait
or
xchg
mov
sbb
mov
idivl
lcall
or
aas
lahf
sub
xchg
hlt
test
push
and
mov
mov
and
test
ret
push
xor
pop
cmp
xor
mov
fadds
popl
push
lds
aaa
add
mov
sti
or
addl
or
pop
mov
adc
pop
out
fimull
inc
mov
test
ds
lcall
clc
sti
out
sbb
pusha
pop
inc
bswap
mov
test
scas
or
aam
out
mov
popf
scas
fdivrl
ljmp
outsl
sbb
idivl
cmp
dec
sbb
mov
add
adc
mov
dec
fs
xlat
cwtl
mov
idivl
js
cld
into
cmp
adc
loope
cmp
and
mov
arpl
jg
sub
movups
xor
hlt
out
testl
pop
ljmp
pop
into
js
test
add
out
ljmp
fiadds
fdiv
inc
and
adc
add
lea
int
aaa
xchg
nop
fdivl
pop
lret
mov
pop
scas
cmpsl
divl
pop
jle
mov
aaa
mov
arpl
xchg
js
mov
daa
lock
testl
les
sahf
outsl
into
pop
xchg
add
push
xchg
adc
aam
mov
repz
int3
xchg
arpl
adc
test
fadd
enter
insb
js
add
aas
sbb
clc
pop
sbb
mov
xchg
aaa
mov
aam
insl
cmp
cmp
add
push
add
clc
jns
sbb
xor
test
dec
dec
dec
sub
sbb
int
mov
cmp
out
test
pop
jb
sbb
popf
cmpsl
xchg
adc
out
xor
inc
or
addr16
or
mov
daa
mov
fistpll
stos
xchg
cmpb
cmp
jle
out
cmp
and
inc
sub
iret
sahf
pop
push
mov
sub
subl
xor
out
xchg
or
fisttpll
ljmp
jnp
inc
mov
pop
push
bts
in
clc
cmp
cmp
daa
dec
xchg
lods
es
push
mov
cmc
faddl
and
jp
fcomps
jae
xor
add
inc
ljmp
sub
ljmp
ret
adc
cmp
fidivs
push
push
xor
sti
call
nop
dec
xchg
adc
jae
mov
sbb
pop
popa
ret
or
fsts
mov
lds
jns
mov
and
xchg
icebp
bound
cmp
aas
mov
or
nop
xor
addr16
mov
in
les
lods
and
pop
imul
sbb
pop
adc
pop
dec
cmp
arpl
sbb
add
dec
adcb
arpl
xor
lcall
iret
xlat
pop
xor
pusha
push
pop
push
cmpsb
mov
mov
je
pop
js
les
xor
or
xchg
mov
xchg
xor
les
mov
jge
mov
lahf
ja
add
mov
xchg
jmp
into
stc
fstpt
adc
jmp
xor
fistps
xor
adc
rol
mov
adc
testl
outsl
cmpl
cltd
or
jge
or
dec
adc
push
adc
xor
idivb
push
mov
movsb
cmp
lods
test
xchg
xchg
or
pop
or
xchg
xchg
or
or
mov
mov
cmp
or
inc
std
cmpsl
cmp
out
and
adc
xorb
jmp
dec
mov
or
dec
ja
or
xchg
sbb
les
aad
in
pop
sbb
lret
outsb
push
scas
xor
pushf
ljmp
mov
iret
xchg
arpl
dec
leave
test
or
xchg
insb
push
daa
jnp
pop
sub
je
out
or
xchg
test
xchg
and
or
dec
sub
ss
jge
push
mov
cmp
add
jmp
adc
add
int3
arpl
cmp
pop
pop
scas
imull
fimull
ljmp
sub
call
lahf
pushf
and
sbb
ja
cmp
push
sbb
sub
inc
jnp
mov
dec
dec
mov
dec
fsubrs
mov
pop
in
imul
fwait
mov
test
or
nop
sub
lock
or
sub
mov
sti
sbb
adc
mov
xchg
pop
cmp
nop
clc
mov
std
fwait
sbb
and
sub
add
daa
xor
cmp
add
or
or
mov
test
mov
adc
mov
sub
ja
ret
sub
xor
out
sti
test
push
mov
dec
mov
ret
and
sbb
jae
in
and
insb
add
cmp
mov
adcl
xchg
jno
jle
jge
mov
jo
mov
ljmp
mov
cmpsl
xchg
idivb
arpl
and
sub
lods
movsb
ljmp
sub
mov
pop
fstpt
mov
mov
stc
mov
mov
mov
xchg
call
nop
cmc
js
idiv
sbb
jl
mov
inc
dec
stc
loope
or
or
or
or
outsb
add
dec
ljmp
addr16
cltd
aam
movsl
pop
mov
fsubrp
xchg
push
inc
pop
test
fsubrl
mov
push
into
xchg
scas
or
stc
jnp
flds
add
jp
loope
mov
test
xchg
js
mov
cmpsb
dec
jo
or
leave
into
lret
jecxz
outsl
scas
mov
or
iret
dec
inc
cmp
or
push
add
jge
fadds
pop
ds
add
add
test
in
cmp
pushf
std
int
jg
fnstsw
lea
insl
out
int3
aaa
mov
pushf
dec
outsl
mov
pop
cmp
popf
or
sbb
cld
imul
pop
cmp
popf
or
cmp
imul
mov
out
js
dec
push
push
jb
fnstsw
cltd
cmp
pop
jns
push
daa
outsl
jae
add
mov
jae
pop
js
mov
jo
sub
inc
cld
xchg
dec
repnz
jecxz
ss
popa
jae
loop
andl
sub
insl
test
add
testl
aam
cs
pusha
je
sbb
dec
pop
or
js
or
or
sbb
jbe
mov
inc
and
mov
lret
push
ja
add
pop
mov
cmp
testl
jp
mov
mov
push
jge
mov
mov
mov
daa
pop
mov
ss
jno
sub
mov
add
sbb
adcb
or
stos
jge
dec
sbb
cmpsl
sbb
mov
cmp
iret
fstpt
xchg
fsubrs
lret
lea
mov
mov
fmul
subl
mov
andb
cld
popf
jae
cmp
inc
mov
or
xchg
dec
pop
push
cmp
lods
scas
sbb
or
mov
and
xor
or
cmp
fadds
imull
xor
js
mov
les
cmp
cmpsb
pushf
jl
lahf
fildl
pop
stos
push
sub
outsb
cmpb
sub
cmp
inc
mov
into
cmp
dec
push
add
sarl
push
outsl
fidivrs
pop
inc
mov
pop
mov
cltd
xchg
mov
adc
xor
sub
or
add
sub
or
adc
jmp
lods
enter
xlat
mov
repz
add
jae
mov
popl
or
mov
or
and
out
psubq
insb
sti
jg
or
xor
fistps
loopne
add
and
mov
outsl
cmp
jge
mov
jle
ja
jo
sub
pop
push
or
jns
out
sub
sbbl
jg
mov
repz
cmp
ss
stc
gs
in
pop
inc
mov
stos
icebp
or
cmp
inc
mov
jg
cld
jo
andl
enter
jcxz
sbb
cmp
jno
mov
movsb
repz
sub
mov
cmp
cmp
cmpsb
pop
lea
fdivs
clc
ds
inc
jns
mov
lret
cmp
sarb
inc
sbb
jae
and
xor
sub
dec
xor
mov
xchg
add
ja
shr
inc
cmc
addr16
xchg
mov
pop
clc
notl
xchg
mov
rcrl
pusha
lods
mov
pxor
insb
fnstsw
scas
in
sbb
mov
mov
xchg
sbb
bound
pop
dec
push
popa
rcrl
dec
dec
or
cltd
mov
rcrl
rorb
or
sub
jae
xchg
inc
cmp
js
mov
adc
mov
sbb
std
lahf
jae
pop
stc
enter
clc
jns
or
mov
enter
mov
adc
jl
call
cmp
lock
cli
sti
pop
movzwl
mov
xor
mov
in
stos
and
cmp
ror
sub
pop
fisttps
jb
mov
dec
or
sub
cmc
dec
sbb
mov
outsb
iret
mov
pop
fwait
xchg
sub
stos
cmpsl
pop
test
add
pusha
jo
push
lret
dec
addr16
push
adc
xorb
addr16
or
cmpsl
test
negb
pop
mov
gs
cmp
lret
jbe
dec
add
or
pcmpgtw
cmp
movntq
out
imul
or
repnz
jle
ret
or
dec
loope
cmp
lock
push
inc
pop
sbb
xchg
sbb
lret
sahf
cmp
test
data16
mov
inc
mov
inc
sbb
test
js
cwtl
idivl
test
call
mov
cmp
hlt
jns
loopne,pt
jg
sbb
enter
cmpsb
outsb
int
jns
arpl
stc
xchg
inc
es
ret
add
xchg
push
mov
adc
fsubs
add
ja
add
or
push
imul
movb
pop
dec
test
ds
pop
and
mov
jae
scas
xchg
push
cmp
push
dec
and
outsb
dec
cwtl
lods
test
test
xchg
pop
or
push
adc
jns
dec
dec
rcrb
into
cmp
dec
sub
dec
xorl
xchg
fisubrs
dec
push
rorb
dec
inc
stos
insb
sbb
adc
mov
add
sub
pop
fwait
pop
push
scas
cld
pop
movsb
js
ds
imul
inc
mov
hlt
pop
fcom
fmuls
jg
pop
mov
loope
in
mov
stos
adc
lret
push
cmp
mov
jbe
jp
dec
pop
mov
sarb
scas
mov
fs
imul
xchg
cwtl
decl
sbb
dec
outsl
cmp
xchg
cmp
lods
lods
cmp
sahf
mov
mov
mov
outsl
aam
pop
fs
sbb
or
and
mov
bound
mov
dec
lcall
gs
adc
adc
fsubrl
sbb
inc
adc
add
ljmp
xlat
xchg
or
inc
rorl
test
fisttpll
inc
leave
sbb
imul
or
cmc
ds
sbb
fwait
das
inc
sbb
and
cmc
ja
and
les
packssdw
sbb
cmp
stos
mov
arpl
test
mov
aad
ds
into
jle
or
and
scas
not
daa
pop
and
inc
jmp
mov
fisttpll
xchg
cwtl
jns
shrb
push
jge
sarb
aad
jecxz
or
xchg
push
cmp
add
adc
outsb
ljmp
cmp
clc
mov
in
push
jl
jae
pop
cmc
xchg
repz
push
andb
mov
out
dec
fs
cmpsb
dec
fdivs
ja
outsl
jg
mov
nop
xchg
shlb
xchg
dec
pop
dec
out
mov
pop
out
mov
repz
pop
rolb
mov
sbb
push
dec
stc
sbb
addr16
addr16
and
or
xor
outsl
jae
popf
notl
sbb
adc
push
push
loop
dec
cmp
lret
out
mov
dec
inc
adc
jle
fimuls
jge
mov
and
mov
mov
or
pop
sub
ja
xor
sbb
lcall
lds
sub
divl
aas
pop
cli
mov
insb
inc
cltd
dec
popf
nop
dec
inc
aam
cmp
jnp
pop
popf
dec
imul
or
in
jo
fs
jno
mov
js
xor
mov
xchg
ss
mov
jns
cmpsl
in
js
sarb
adc
jmp
sbb
popa
stos
adc
jmp
cmp
sbb
or
mov
xor
outsb
push
repnz
pushl
loope
push
inc
cmp
fs
movsl
sub
sahf
punpckhwd
jp
js
push
dec
out
mov
mov
mov
or
jp
push
cmp
lret
and
xchg
adc
outsb
or
adc
arpl
mov
mov
ret
sahf
movb
cmp
les
or
pop
mov
mov
test
dec
les
jl
in
rol
add
cmp
or
dec
push
popf
pop
inc
xchg
push
sub
mov
xor
push
and
test
adc
pop
pop
pop
dec
sbb
shl
push
iret
sbb
or
cmp
out
mov
adc
dec
and
cmc
xchg
ret
loopne
cltd
mov
jo
add
add
mov
jns
lret
mov
js
or
icebp
pop
dec
test
inc
push
cs
repnz
mov
test
ljmp
in
cmp
jge
aam
in
sbb
scas
jnp
arpl
mov
decb
inc
pop
mov
iret
ja
enter
pop
xlat
fsubl
ficomps
lret
jo
or
mov
push
push
lret
js
jle
ljmp
push
cmp
int
adc
mov
jb
inc
inc
out
clc
cmp
sub
fcmovne
and
sbb
or
push
cltd
or
popf
lcall
shll
cs
cmp
dec
leave
sub
cmp
xchg
jle
fldl2e
ss
mov
out
divl
adcl
cmp
mov
dec
sbb
nop
cmp
sub
pop
jae
das
adc
jo
js
mov
movl
outsb
mov
pop
mov
or
mov
xchg
push
imul
in
testl
lret
scas
sbb
fisubs
or
daa
and
mov
insl
ret
jl
xchg
ja
jg
mov
addr16
cmc
sbb
push
pop
test
popf
mov
aam
cmp
xchg
out
mov
int
dec
add
cltd
cmp
pop
pop
leave
out
and
dec
ja
cmp
sarl
dec
ja
mov
mov
mov
cmpsl
and
or
pop
add
or
xor
pop
jae
pop
mov
test
in
sbb
cltd
mov
or
mov
dec
sbb
dec
cmc
cmpsb
adc
fstpl
pop
scas
sbb
test
dec
dec
out
insb
add
test
push
outsb
je
subl
and
xchg
xchg
mov
andb
cmc
pop
sbb
rorl
xlat
ja
lcall
scas
adc
sbb
xorl
test
es
adc
out
dec
testl
xchg
stos
insb
notl
sub
pusha
jge
cmp
xchg
das
adc
jb
inc
ret
dec
jnp
push
jno
mov
xchg
sbb
mov
outsl
mov
xchg
cltd
insb
pop
adc
aas
pop
xchg
fldl
ja
pop
lahf
cmpsl
jg
mov
imul
stos
notb
add
dec
testb
fmuls
pop
test
sub
pop
jge
inc
daa
xchg
pop
shlb
add
xchg
dec
pop
mov
mov
push
pop
add
cmc
jge
mov
pop
pop
ljmp
call
mov
mov
loopne
bound
cmp
idiv
imul
cmpsb
pop
movsb
inc
xchg
repnz
xor
pop
inc
dec
or
xchg
mov
rolb
mov
lods
aas
mov
and
cmc
in
popf
sub
adc
std
cmp
ret
insb
fadds
pop
test
dec
outsb
cmpsb
sub
idivl
cmc
cld
inc
jge
or
cmp
mov
mov
xchg
and
cmc
enter
lahf
mov
cmp
iret
stos
addb
dec
xchg
mov
push
aas
sbbl
cmpsb
pop
push
jle
insb
aas
pop
cmpsb
cmc
or
js
cmc
pop
js
lahf
imul
scas
cmp
repnz
test
scas
jge
pop
jns
fdivr
jg
mov
or
sub
dec
in
cmp
xchg
push
out
xchg
cmp
das
or
sub
push
cmp
popa
xchg
push
push
jmp
lods
and
outsl
js
add
popa
stos
sbb
add
rclb
jp
sbb
clc
ss
mov
push
cmp
or
mov
js
adc
rclb
hlt
pop
daa
or
push
push
ljmp
addr16
xlat
insl
ljmp
mov
out
mov
in
outsl
xchg
arpl
push
pusha
cmpsb
incl
mov
xor
testl
mov
call
dec
or
inc
mov
and
into
mull
inc
sub
adc
adc
cwtl
out
or
cmp
xchg
jmp
xlat
or
cmp
xchg
xchg
stc
sub
jmp
jecxz,pt
jge
inc
pop
adc
adc
addr16
lahf
cmp
xchg
mov
rorb
lods
fisubrs
xor
xchg
ret
aaa
mov
ss
mov
mov
enter
pop
push
daa
sub
dec
cmp
push
xlat
push
mov
ret
inc
cmp
add
lcall
stos
jbe
pop
std
xor
inc
mov
ret
pop
mov
mov
mov
daa
cmp
jns
jecxz
stos
cwtl
js
cmp
sbb
clc
xchg
idivl
sbb
lds
cmpsl
iret
das
sti
or
loop
push
out
inc
mov
out
inc
mov
das
bound
push
sbb
cld
jns
insb
dec
std
inc
mov
inc
and
sbb
rcl
loope
stc
mov
decb
jns
pop
inc
push
or
xchg
loop
popf
add
mov
xchg
mov
mov
jns
addr16
sbb
inc
inc
jne
jns
xor
cltd
add
push
jmp
shll
cmp
loop
iret
cld
mov
call
xchg
sarb
popl
mov
mov
or
inc
mov
out
inc
mov
out
inc
and
movl
mov
mov
icebp
jg
js
mov
mov
cmp
xchg
dec
cmpsl
daa
mov
outsb
incb
xlat
mov
addr16
popa
inc
mov
mov
mov
lods
sub
sub
mull
mov
outsl
mov
mov
cmc
rorb
lock
fidivrl
bound
mov
jle
pop
dec
mov
fs
mov
out
ja
lods
cmc
pop
cmpl
dec
ss
jecxz
lods
hlt
or
fcmovnu
adc
mov
cmp
mov
lds
arpl
out
aas
xchg
cmp
xchg
dec
cmp
daa
shl
out
jae
sub
test
mov
dec
popf
call
test
sub
dec
cmpsb
inc
or
pop
outsl
mov
push
rcl
xor
clc
xor
xchg
push
loopne
clc
or
sbb
loope
or
mov
test
or
outsb
lds
push
out
fldl
fists
xchg
pushf
sub
popa
daa
jg
jmp
in
push
mov
dec
pop
dec
ds
push
cld
ljmp
sub
cld
movsb
insl
leave
rorb
sub
sub
mov
lea
shrl
clc
jg
enter
cwtl
mov
push
xchg
mov
je
jae
call
shlb
sub
pop
pop
jbe
sahf
jle
push
mov
scas
pop
hlt
rorb
sub
pop
dec
stos
mov
or
dec
cmc
add
fcomp
or
pop
js
or
dec
jbe
sub
popa
jae
lcall
lahf
lahf
and
sbb
ljmp
pop
insl
mov
fmull
adc
loop
es
out
push
addr16
push
inc
push
arpl
pop
outsl
push
xchg
outsl
pop
mov
jg
lcall
arpl
push
divl
mov
cmc
mov
xor
push
mov
cltd
fs
cmc
stos
rcll
dec
xchg
adc
push
cmpb
inc
dec
mov
cmp
rorl
stc
add
test
mov
mov
xchg
cmp
test
fcomps
inc
div
or
pop
jg
jae
gs
enter
or
xor
jl
sti
loopne
daa
jge
add
pop
iret
jl
mov
pop
stos
enter
adc
fsts
and
jg
adc
sub
dec
mov
nop
jae
pop
mov
into
mov
out
scas
sbb
std
clc
test
mov
js
ret
add
test
idivl
imul
enter
popa
sub
jns
std
jmp
pop
repz
divl
inc
stos
out
int
sbb
jmp
ds
leave
movsl
push
add
pushf
inc
mov
fldcw
fisubs
test
push
imul
add
dec
leave
dec
pop
cmc
clc
mov
sub
dec
dec
test
jns
cmp
lcall
xlat
das
add
mov
icebp
int3
call
or
push
dec
cmc
push
jae
into
and
cmp
cwtl
popf
inc
xor
add
or
clc
xchg
test
sahf
aaa
sets
data16
add
fs
cwtl
inc
ja
out
cmp
push
lret
mov
loop
sbb
jg
es
cmpsl
mov
add
iret
ja
push
rcrl
cwtl
stos
shl
shrb
sub
or
out
add
adc
jae
stos
insb
mov
fs
inc
movd
das
mov
xlat
adc
adc
mov
xchg
jmp
add
mov
push
popf
pop
std
out
pop
fwait
daa
adc
sub
js
out
or
mov
dec
js
imul
das
pop
fwait
pop
mov
xchg
pop
push
scas
and
mov
sbb
out
mov
movl
in
femms
outsb
lret
cmp
lret
mov
bound
or
jmp
inc
xor
nop
xchg
iret
idivl
lcall
or
xor
aad
call
mov
mov
inc
xlat
or
dec
addr16
popf
mov
sbb
nop
fildll
dec
xchg
popa
xor
repz
push
aam
inc
sahf
cs
jl
test
add
jns
jge
inc
lods
inc
xlat
cmc
les
imull
xor
xchg
aaa
int
jle
pop
daa
ss
push
mov
dec
in
and
hlt
push
ret
add
jl
mov
dec
out
mov
and
mov
and
pop
jl
push
daa
pushl
push
ret
das
mov
and
rorb
mov
negb
ret
pop
insb
test
pop
jge
mov
mov
cmc
in
mov
js
js
add
cmp
inc
cmpsb
jnp
pop
aas
clc
andl
fs
int3
xchg
cmc
lock
ret
cli
iret
or
push
addr16
ret
mov
sbb
xchg
pop
xor
push
aam
push
mov
popf
push
inc
fs
xchg
movsb
in
lods
ja
lahf
or
ds
fwait
pop
daa
push
sub
mov
js
cmpsl
sub
add
dec
jae
out
push
jg
xchg
ja
push
pop
mov
in
cmpsl
or
add
iret
fidivs
inc
or
jle
pop
add
add
or
mov
adc
imul
jg
lahf
arpl
lea
call
mov
push
jg
daa
push
dec
jle
orl
pop
mov
cmp
pop
jmp
dec
mov
add
mov
scas
sub
xchg
or
movsb
jmp
lcall
ret
pop
clc
imul
xor
enter
movd
rcr
inc
jecxz
mov
sbb
imul
jge
xlat
sbb
test
sahf
test
arpl
xchg
sbb
pop
aad
add
aad
out
lods
imul
cmp
test
push
test
leave
repz
aas
xchg
outsl
push
sarb
xor
adc
fisttpl
mov
mov
aas
cmp
fmull
in
out
pop
sbb
mov
mov
test
addr16
pop
push
les
test
mov
cmp
cmpsl
lcall
sub
add
xchg
inc
int3
cmp
mov
js
mov
ret
pop
add
out
mov
dec
or
xchg
lods
add
pop
and
jns
call
scas
mov
or
or
mov
orl
cmp
push
cmp
addb
xlat
lock
cmp
push
hlt
ret
mov
mov
test
in
movsb
stos
push
xor
jmp
or
cmp
test
cli
sahf
popf
push
daa
and
aas
fxch
into
add
icebp
imul
jecxz
imul
xchg
jne
jnp
dec
idivl
out
dec
mov
testb
cmp
pop
popf
or
xchg
and
aas
sbb
jne
and
dec
add
jbe
jae
cmc
xchg
out
in
jnp
fcom
jns
dec
fwait
mov
dec
dec
cmpsl
sbb
sbb
in
push
repnz
add
fsubrs
stos
popa
mov
mov
cmc
inc
daa
mov
leave
setae
inc
sbb
mov
cld
and
sbb
testb
mov
xor
cmpsl
cmp
cmc
test
jns
add
mov
pop
mov
jmp
pop
adc
inc
jmp
mov
rorb
adc
add
sti
cmp
nop
call
adc
xlat
ja
cltd
sti
pushf
xchg
sahf
add
imull
sbb
jne
js
cmpb
sbb
pop
xlat
rcll
or
xchg
cltd
clc
adc
ljmp
pop
or
jl
cld
lock
pop
or
push
icebp
test
aas
aad
push
pop
inc
xor
fucompp
add
shl
push
daa
xor
pop
outsb
mov
mov
cltd
xor
es
cmp
imul
pusha
sub
out
decl
cwtl
lret
loopne
inc
jns
imul
ret
clc
pop
addr16
icebp
dec
ds
cmp
stos
fs
or
mov
inc
add
mov
push
ss
js
sub
dec
mov
test
lods
push
add
in
sub
dec
cmp
ljmp
ss
std
cmp
mov
push
fsubrs
idivl
add
popf
pushl
or
xchg
aas
lret
sbb
inc
repnz
or
and
addr16
pop
cmp
into
cmp
out
pop
rorb
xor
pop
mov
sti
jge
and
out
push
jp
dec
sbb
pop
lcall
mov
inc
adc
daa
xor
jmp
das
jb
movb
notl
pop
mov
loopne
pop
jle
cli
and
mov
and
mov
clc
mov
sbbl
xchg
push
push
pop
lods
addr16
insb
test
xlat
stc
fwait
mov
mov
mov
mov
sbb
fsts
pusha
inc
adc
adc
sub
adc
cmp
cltd
stos
mov
pop
sub
das
test
mov
mov
imul
js
pop
test
dec
pop
xor
lods
cmp
jo
ja
mov
and
push
jge
pusha
dec
cmpsb
lret
dec
sub
adc
mov
cmp
inc
loop
xchg
cmp
xor
cmp
mov
mov
sub
xchg
adc
stos
ja
call
sub
cmpsb
adc
mov
mulb
clc
rclb
jnp
dec
aas
jle
mov
imul
xchg
call
xor
add
add
xorl
mov
stc
xor
addb
test
es
test
sbb
adc
mov
ret
in
out
int
mov
add
jp
pop
and
lock
inc
test
xchg
adc
stos
sbb
pop
adc
aas
mov
or
sbb
jg
mov
inc
ljmp
aaa
pushf
and
lcall
mov
lods
fadds
ret
pop
andb
jbe
pop
orl
mov
mov
js
jge
in
sbb
xchg
push
pushf
outsl
enter
pop
add
jns
xor
movl
stc
and
xchg
cmp
xor
js
aad
cmpsl
jns
dec
cmc
out
js
popf
cmp
or
or
loop
pop
mov
fs
imull
xchg
pushf
ja
push
adc
test
out
sahf
jge
mov
jmp
clc
dec
dec
out
mov
shl
jmp
push
inc
and
jecxz
divl
jo
mov
lds
bound
mov
nop
clc
inc
mov
or
jo
xor
jns
mov
cmp
fsubr
xlat
push
test
xor
dec
mov
or
pushf
jns
cli
dec
xlat
test
sub
movsb
xor
jg
mov
push
rcr
fdivs
jns
xchg
or
loope
pushf
movups
xor
xor
out
dec
mov
rcr
out
cmp
jnp
mov
loop
enter
push
pushf
sbb
mov
dec
sbb
xchg
push
lods
mov
add
ljmp
mov
mov
ret
push
sbb
xchg
out
mov
test
cmp
mov
pop
xor
loop
mov
loope
into
les
add
or
push
cld
pop
mov
mov
ljmp
cmp
push
test
push
aas
mov
ds
loopne
fsts
mov
jne
inc
add
mov
test
leave
push
and
adc
mov
jmp
push
add
or
nop
lods
adc
lods
imul
inc
shll
fisttpll
js
pushf
or
sbb
pop
or
mov
out
dec
pushf
mov
rorb
pmaddwd
add
outsl
xor
pop
aam
dec
xchg
lock
xchg
or
test
bound
dec
stos
dec
pop
sub
mov
mov
mov
shr
out
adc
inc
sbb
ret
xchg
add
or
cld
sub
and
hlt
ja
jb
inc
pop
push
addl
mov
sbb
mov
mov
sbbb
ja
cwtl
ret
jle
and
xchg
les
imul
xorl
add
sbb
or
sbb
popf
mov
stos
imul
or
add
xor
or
dec
pop
pop
lods
sbb
ja
push
ficomps
jne
cmc
jmp
cmp
mov
lahf
mov
mov
push
push
mov
cmp
cmpsl
jno
mov
pop
xor
dec
mov
mov
sbb
iret
adc
sub
add
pop
xlat
imul
mov
out
mov
inc
loop
adc
pop
je
fnstcw
mov
out
fwait
mov
and
sahf
iret
mov
ja
ficoml
cmp
jl
jp
fmull
and
lret
inc
and
and
sub
lret
arpl
mov
roll
test
sbb
movsl
mov
orl
xor
cmc
adc
pop
mov
dec
dec
int3
pop
stc
aas
pop
pop
fwait
and
xor
adc
inc
out
mov
mov
dec
push
xchg
movsb
sti
push
add
mov
in
lret
xchg
cmpsb
stos
dec
mov
mull
sub
mov
sbb
sub
xchg
ja
xchg
pop
jle
xchg
clc
cmp
lods
mov
jmp
jae
popf
xchg
pop
cmp
scas
scas
pop
jns
lock
sub
sub
ror
shl
cmp
nop
test
xor
packuswb
add
js
std
test
mov
push
int3
add
fsubs
or
into
inc
ljmp
xchg
lahf
lods
mov
xor
dec
int
mov
adc
adc
jp
fidivs
lea
and
or
sub
lods
dec
lahf
inc
scas
sti
mov
clc
sbb
lahf
sahf
xlat
xor
pop
fidivl
js
xlat
add
lcall
inc
cmp
rolb
jnp
or
cmp
insb
jmp
add
gs
iret
inc
jle
outsl
add
adc
adc
addb
fldcw
mov
stc
or
cwtl
cmp
lret
inc
pop
add
sub
clc
ss
and
inc
and
outsl
lret
aas
ja,pn
loopne
cmpl
pop
aas
mov
sarb
in
addb
roll
adc
jg
sub
push
scas
adc
pop
mov
jno
test
mov
nop
sub
lret
sub
test
rorb
ret
xchg
fnstsw
push
dec
or
test
add
enter
inc
popf
xchg
cld
pop
gs
jnp
movsl
out
ret
jns
mov
add
adc
dec
jp
lea
loope
xchg
out
loope
mov
sbb
and
out
adc
inc
shrl
jg
cmp
imul
sub
pop
out
cmp
sarl
or
cmp
jns
ret
inc
sbb
es
and
sti
lods
sbb
es
jge
sbb
sti
cmp
inc
nop
imul
ret
push
bound
or
and
sub
fs
pop
mov
daa
icebp
mov
cmc
jbe
jl
xchg
add
sbb
pop
dec
pop
daa
jno
outsb
out
sub
xchg
out
pop
dec
or
inc
setbe
pop
xchg
push
lods
sub
es
icebp
mov
test
mov
xchg
xor
xchg
sub
mov
popf
xor
xor
add
mov
lds
test
ret
loopne
lea
rep
jns
add
ja
xchg
jmp
jmp
jne
test
xchg
sub
jmp
jbe
leave
mov
or
xchg
scas
xor
or
cvtdq2ps
mov
push
dec
fbstp
scas
enter
sbb
js
mov
dec
idivb
ret
dec
cmp
imul
mov
xlat
int
test
inc
cltd
mov
hlt
sub
and
xchg
fidivrl
div
xchg
cmp
js
flds
jg
xchg
fnstcw
xchg
popf
imul
xor
ret
sbb
pop
sbb
rcrb
and
xchg
jns
push
push
in
jnp
cmp
aas
cmc
dec
and
jne
mov
cmc
pop
orb
loopne
jg
cmc
lcall
ret
jp
cli
addl
jnp
jge
scas
js
jmp
add
movl
jo
mov
push
test
ljmp
cmp
xorb
cmp
inc
cmp
mov
pop
cmp
lret
cmp
shrb
xchg
rcrl
lret
dec
push
xor
inc
out
mov
cmc
sarb
das
sbb
out
dec
inc
cmp
out
or
xchg
sub
sub
call
mov
outsl
jmp
add
mov
push
lcall
xchg
jg
leave
push
fwait
and
jmp
dec
out
fwait
xorl
push
mov
cmp
dec
fdivp
push
jle
jbe
scas
aad
mov
dec
adc
roll
mov
in
dec
jae
call
dec
or
mov
dec
cmpsl
testb
or
mov
jle
das
repnz
or
out
mov
inc
mov
add
iret
and
sbb
push
shlb
cmp
addr16
xor
push
lahf
cmp
pop
mov
adc
pushf
mov
jp
adc
mov
nop
fwait
cmp
adc
addr16
jle
in
lahf
dec
loopne
scas
cmp
or
inc
mov
dec
jb
loope
lods
sbb
add
or
repz
mov
push
xor
push
pop
shrl
lahf
jge
js
stc
dec
adc
fs
rol
sub
inc
data16
add
data16
pop
rorl
cmp
movsb
push
roll
data16
push
kmovb
fidivrl
lahf
xlat
lcall
mov
test
adc
dec
imul
ljmp
je
adc
sub
jae
jbe
jno
data16
cmp
fsts
pop
test
scas
cmp
popf
clc
inc
out
pop
mov
cmpl
or
push
sbb
mov
ljmp
or
jbe
ljmp
cmp
xlat
inc
or
in
std
bound
jg
lcall
lods
inc
or
cmp
shll
rorb
push
mov
sti
push
jg
cmc
ljmp
outsl
stc
xchg
add
insl
enter
jmp
pop
jnp
lods
push
push
ffree
mov
push
sub
jno
cmpl
pop
jns
dec
loop
out
push
lret
cmp
cs
add
or
inc
add
ds
xchg
fidivs
rorl
lret
dec
inc
jmp
sub
inc
outsl
sbb
lods
jo
sbb
jecxz
adc
pop
cmp
mov
xchg
loope
sub
icebp
sub
xchg
xor
and
cli
push
adc
mov
or
adc
testl
pop
ja
imul
sub
xchg
cli
adc
sbb
mov
call
into
pop
dec
xlat
fisttps
lea
cmp
ficomps
arpl
mov
pop
notl
clc
addl
iret
jnp
push
lea
push
repnz
pop
sub
fstpt
inc
cmp
clc
push
push
inc
xlat
mov
fwait
push
insl
or
xor
ja
test
push
fs
aad
mov
xor
jl
ret
lods
sbb
push
inc
adc
pop
clc
pop
adc
cmp
fdivl
jp
inc
mov
push
mov
inc
adc
cs
test
xor
cli
dec
imul
adc
sub
add
mov
xlat
add
sbb
test
fisubrl
dec
mov
sub
xchg
fistl
js
je
mov
imull
sub
roll
mov
js
pop
mov
pop
xlat
adc
jp
jg
push
jg
decl
mov
adc
lods
test
xor
dec
inc
addr16
xchg
fadds
pop
test
imul
clc
sbbb
cmp
or
daa
dec
push
inc
mov
rorb
popf
divl
inc
daa
repnz
mov
arpl
or
pop
int
mov
jno
dec
leave
mov
dec
call
add
or
push
pop
test
inc
bsr
in
clc
xchg
pop
pop
cltd
arpl
mov
pop
jae
std
dec
jecxz
cwtl
insb
addr16
adc
insb
sbb
test
cmp
lea
jnp
adc
mov
cmp
dec
popf
ja
and
or
inc
mov
push
addr16
sub
adc
dec
pop
int3
ljmp
xchg
fdivs
pop
push
repz
popf
push
fdiv
dec
dec
dec
adc
cmp
and
push
lea
test
aas
cmpsl
nop
sub
mov
inc
xchg
and
movsb
sbb
pop
stos
mov
push
push
fisubrl
mov
int
js
jnp
sbb
or
jle
mov
cltd
and
xlat
cmp
popf
addr16
cmp
xor
push
es
mov
fsubr
push
dec
arpl
into
cmp
push
lods
or
jb
js
data16
mov
pop
or
or
xchg
out
cmpsl
sub
fimuls
xchg
je
test
sbb
gs
mov
fs
mov
enter
and
adc
idivl
push
mov
dec
sbb
mov
inc
lea
leave
cwtl
mov
cmp
dec
cld
les
jns
sub
fisubrs
jge
icebp
sbb
jns
imul
pop
mov
mov
adc
aaa
mov
cmp
adc
fimuls
pop
push
cmp
test
mov
arpl
xchg
and
push
xchg
pop
lahf
pop
jg
add
out
mov
xchg
mov
add
xchg
lods
mov
fld
xchg
jle
inc
cmp
test
sub
cmc
stos
xchg
or
ljmp
fmulp
or
rclb
dec
insb
mov
lcall
cmp
jbe
xlat
decl
test
in
movsb
pop
pop
es
mov
in
sar
cmpsb
mov
push
ds
cmp
mov
pop
lret
sbb
stos
or
imul
inc
outsl
cs
enter
lahf
push
mov
mov
pusha
dec
xchg
data16
pop
jne
ljmp
jae
push
mov
cmp
sbb
inc
cmpsl
lahf
addr16
pop
les
lahf
dec
rorl
ss
add
inc
lret
mov
and
mov
jge
pop
pop
stos
out
out
ja
pop
push
add
cltd
dec
and
or
mov
arpl
or
push
adc
imul
pop
daa
pop
cs
inc
mov
js
pop
js
not
lcall
adcl
testl
sbb
push
mov
pop
pop
test
cmp
push
or
mov
mov
movzwl
lds
mov
dec
js
rcrb
jnp
test
das
cmp
ds
repnz
js
add
stc
in
call
sbb
cli
sbb
jns
mov
push
xlat
mov
insl
cmc
ret
call
js
jg
cmp
pop
repz
cmp
les
push
and
or
pop
push
arpl
stc
mov
mov
inc
mov
mov
dec
inc
dec
add
mov
fmuls
je
push
pop
inc
mov
repz
dec
data16
sti
cwtl
jo
test
aas
pop
cmp
or
dec
mov
jp
and
adc
insb
or
pop
cmp
cmpb
sbb
adc
lret
inc
xor
cmc
cmpl
xchg
inc
loop
mov
jmp
mov
call
mov
sbb
in
pop
add
cwtl
push
ds
fmul
add
rcr
xor
sub
mov
pop
inc
pop
xchg
push
xchg
out
cwtl
add
xchg
mov
cli
sbb
sahf
xchg
mov
mov
push
test
mov
daa
ja
mov
int3
adc
popf
arpl
inc
testl
clc
lods
inc
xor
lret
cld
or
xor
pop
mov
test
outsl
rcr
aam
sbb
arpl
mov
xor
or
mov
push
ljmp
rcr
adc
imul
loopne
jns
dec
imul
jp
sbb
dec
hlt
in
fidivrl
or
mov
mov
mov
jbe
jns
iret
or
xchg
cwtl
nop
or
or
outsb
int3
push
mov
test
clc
dec
xchg
es
dec
rol
sub
hlt
xchg
test
clc
jle
mov
mov
push
fcomps
sbb
mov
sti
xchg
test
sbb
and
inc
xchg
out
pushf
ret
or
cmp
fldcw
rcr
mov
mov
adc
lcall
xchg
nop
mov
mov
adc
sbb
cmpsl
inc
test
cwtl
add
inc
pop
pushf
push
push
sbb
pushf
sub
mov
mov
call
push
cmp
push
out
rolb
add
mov
jnp
fimull
sub
mov
movb
add
stos
add
pop
repnz
dec
dec
sub
jmp
cmpsb
cmp
push
xchg
fwait
jnp
dec
fsubrl
test
cmp
movsl
ja
lods
mov
stc
mov
xchg
jb
cmp
stc
popa
push
add
lods
mov
lret
sub
stos
lcall
push
mov
ficoms
sub
scas
pop
movsl
sub
jne
mov
sbb
jae
lret
jno
add
pop
cmc
movl
push
lret
sub
push
clc
jmp
mov
incl
dec
insb
xchg
das
scas
push
dec
fdivrl
jle
jge
sbb
inc
ljmp
and
add
mov
push
stos
dec
test
dec
sbb
push
faddl
or
jge
sbb
jecxz
cmp
addr16
out
inc
movsl
jle
out
jbe
push
fnstsw
daa
and
pop
xchg
cmp
lods
pop
ror
negl
mov
fwait
out
pop
xchg
push
dec
xchg
mov
outsb
pop
fmull
and
inc
push
out
sbb
jg
xchg
jecxz
sbb
mov
addr16
or
push
mov
jmp
int3
idivl
mov
push
inc
mov
cmc
jmp
ja
jae
cs
call
jg
pop
packuswb
into
adc
pop
aas
scas
movsl
maxps
mov
pop
test
insl
cmpsb
incl
mov
sbb
stos
jle
xchg
and
adc
cmpsb
dec
loop
addr16
lock
jbe
aam
push
add
movsb
sbb
mov
imul
sbb
sbb
pusha
push
sub
xchg
dec
or
xchg
push
sbb
sub
decb
out
pop
insb
cmpb
imull
sbb
pop
je
jmp
aas
sahf
lods
cmp
push
cmpsl
outsl
arpl
mov
sbb
cmp
leave
push
orb
cmp
iret
or
mov
pop
fisubs
jg
or
fsts
loope
xlat
jp
xlat
and
adc
in
or
iret
leave
js
ficoml
adc
or
js
pop
mov
push
arpl
cmp
fs
pop
outsb
stos
cmp
add
or
pop
cmp
out
and
mov
mov
cmp
or
pop
lret
jp
scas
jp
xchg
lods
inc
outsl
mov
mov
das
fiaddl
test
pop
lcall
jl
mov
aas
cs
jae
mov
adc
and
jb
dec
jle
pop
leave
clc
jns
jbe
xor
sub
mov
hlt
test
or
cmpsb
xchg
jo
fucomip
test
cmp
outsl
popf
idivl
inc
rcl
fisubrs
xor
cmpsb
add
pop
cmpsl
testb
lea
xchg
mov
dec
pop
push
add
pop
adc
call
daa
js
andb
imul
and
cmp
nop
mov
mov
loopne
xor
and
es
cmp
xor
out
or
mov
imul
push
and
push
cmpsb
test
popf
cmpsl
jmp
cmp
imul
or
ja
cmp
cmp
xlat
jecxz
mov
fsubs
mov
sbb
or
sbb
cld
pusha
rorl
push
shlb
mov
push
or
test
adcl
popa
mov
pop
adcl
mov
cmp
lret
xor
cmp
fcomps
push
sbb
mov
and
or
push
jbe
loope
sbb
add
pop
mov
lahf
or
cmp
mov
ljmp
mov
cmc
and
cmp
das
sbb
mov
and
push
in
pop
xchg
out
repz
popf
pop
in
and
aaa
out
mov
js
cld
dec
jg
pusha
mov
mov
push
or
push
xor
dec
vdivsd
push
adc
xchg
mov
push
xchg
test
loopne
mov
add
push
inc
mov
add
mov
lahf
mov
lret
insl
cmp
push
sbb
stc
js
dec
jl
cmc
mov
adc
pop
and
outsl
lret
scas
or
test
out
fldpi
cmc
and
dec
out
fildll
xchg
pop
or
insb
fsts
dec
es
cmp
pusha
fimuls
in
out
insb
pop
cltd
dec
daa
adc
lods
mov
cwtl
sbb
fwait
leave
inc
addr16
xorl
repnz
outsl
xorb
enter
lods
push
inc
mov
or
lods
clc
push
loope
lcall
jp
mov
cld
dec
sbb
pop
cmp
cmp
push
dec
pop
mov
and
inc
lds
inc
lahf
dec
pop
data16
xlat
cmp
aaa
xor
dec
jbe
call
adc
push
ret
or
addr16
mov
xor
jg
fstps
movl
mov
jnp
pop
mov
push
sahf
mov
add
add
jmp
dec
xchg
test
jnp
jge
fldlg2
mov
outsl
xchg
cld
sub
aaa
pop
out
or
lock
cmp
inc
add
pop
cmc
clc
pop
or
jle
mov
js
aas
add
mov
pop
xor
mov
cmp
mov
sti
push
xor
jecxz
subb
or
sahf
scas
xlat
mov
sar
xchg
fwait
cmc
add
in
fsubl
inc
jle
dec
sbb
aam
dec
imul
cmp
add
cmp
xor
fdivrp
push
xchg
clc
dec
sub
jns
aas
mov
outsb
jle
pop
addl
jnp
outsl
fidivs
or
mov
add
aam
daa
add
mov
les
mov
faddl
pusha
sub
jle
inc
xchg
adc
pop
sub
sbb
inc
mov
cmc
push
jmp
pop
mov
jns
mov
push
or
cltd
cli
aam
add
add
mov
daa
dec
fsub
mov
inc
arpl
fisubrl
sbb
iret
divl
sbb
pop
add
cmp
ss
inc
sahf
add
jns
movsb
daa
cmc
inc
adc
xchg
lods
mov
or
adc
mov
jo
inc
xor
pop
pop
ljmp
adc
mov
movsl
les
cli
cmp
icebp
pop
or
jl
xchg
pop
or
sub
fdivr
xchg
dec
xlat
cmp
push
jne
xchg
push
add
cmpsb
sbb
add
lds
add
je
shll
test
test
cmp
ret
inc
scas
adc
cmp
pushf
stos
outsl
mov
outsl
dec
lea
mov
cmp
mov
inc
sub
push
jle
imul
jb
or
cmp
jnp
ljmp
imul
out
je
not
cmp
jnp
hlt
in
rcll
idivl
xchg
pushf
mov
jno
dec
dec
pop
jp
lcall
adc
fwait
mov
inc
nop
gs
fwait
sbb
dec
out
addr16
jb
sbb
inc
lods
add
xchg
in
jmp
jne
insl
or
mov
inc
jl
sbb
daa
loope
sahf
pop
aas
aaa
mov
mov
call
insb
adc
testl
aas
xchg
pop
dec
stos
pop
xchg
cltd
add
aas
fucompp
xchg
ficomps
lods
cmp
leave
sbb
mov
xlat
sub
jne
xchg
jns
mov
push
repz
adc
ss
pop
push
scas
push
push
stc
jle
pop
movsb
ja
orb
xchg
cmpl
mov
jle
fiadds
mov
ja
mov
adc
jg
mov
clc
mov
imulb
stos
mov
cmp
push
lret
sbb
dec
movsl
clc
shrl
in
enter
pop
sub
or
sbb
mov
mov
popf
sbb
nop
jp
add
mov
mov
test
pop
arpl
jae
cmp
mov
daa
or
cmp
aad
or
pop
ljmp
dec
ret
sub
call
outsl
testb
adc
dec
fmuls
lods
pop
mov
fstpl
add
and
sahf
loopne
dec
ret
dec
mov
inc
pop
jcxz
ljmp
mov
fidivrs
push
cmpb
xchg
sub
jns
enter
xor
je
gs
mov
adc
popf
sbb
pop
subb
fsubr
lret
cmp
pop
fcmovne
adc
jg
fcmove
jo
dec
mov
or
iret
jnp
cmp
lret
cmp
xlat
lret
cmpsl
sbb
add
imul
sub
pop
jl
insb
cmc
xchg
pop
fdivp
push
shrb
inc
mov
sbb
cmp
outsb
cmp
outsb
ja
cmp
sbb
inc
adc
sub
fs
or
push
loopne
mov
dec
xor
dec
dec
xor
or
lret
fiadds
pop
add
fcmovb
jnp
cmp
push
negb
imul
arpl
in
idiv
xchg
in
xchg
mov
inc
or
sbb
cmp
jns
stos
push
test
sarl
sub
and
cmc
cmpsb
dec
ja
repz
mov
push
mov
jbe
and
or
pop
loope
or
pop
sbb
test
mov
sub
inc
sbb
adc
ljmp
sbb
insl
lahf
xchg
mov
sub
addr16
inc
ds
xchg
int3
cmp
and
push
or
fcoms
push
mov
sub
jns
and
gs
imul
ja
pop
stc
sub
xchg
sbb
out
es
xor
add
fcmovnb
insb
jp
dec
lret
shl
jp
xchg
xchg
mov
mov
push
cmp
mov
cmp
out
pop
push
in
test
pop
adc
mov
shlb
mov
loopne
sub
arpl
sbb
sbb
aas
mov
cmp
pop
cmp
xor
rcrl
divl
fwait
pop
pop
cmp
mov
notl
jl
ja
push
xchg
xchg
pop
or
dec
inc
sub
xchg
outsl
cwtl
cmp
pop
xor
cmp
inc
dec
ret
enter
mov
ss
mov
or
inc
mov
inc
mov
out
dec
js
pop
push
jnp
dec
test
fnstenv
popf
js
jo
stc
cmpsb
jae
outsl
dec
cmp
mov
aas
mov
inc
cli
xchg
rolb
push
cmp
inc
arpl
je
jmp
xor
sbb
popl
push
cld
pop
sbb
cmp
jnp
sub
out
mov
pop
push
pop
fldcw
jne
push
sbb
adc
daa
imul
ja
xchg
mov
cmp
test
daa
pop
andl
cs
and
test
inc
jecxz
ret
test
dec
adc
je
dec
pop
xchg
push
daa
jns
mov
dec
cmp
cmc
mov
addr16
xor
in
clc
jnp
xchg
ds
sarb
push
sti
cmp
mov
jle
lds
jne
sbb
jmpw
and
push
adc
adc
cmp
cmp
fdivl
mov
inc
ljmp
and
imul
lahf
xor
cltd
fcmovnbe
xor
rcrb
add
sbb
pop
aam
push
insb
xchg
lret
mov
dec
pop
cltd
andb
cli
scas
or
cmp
xchg
or
jmp
and
mov
aad
dec
rclb
in
mov
jo
push
mov
lods
sbb
fsubl
in
jle
in
into
xchg
bound
es
mov
jge
dec
call
sbb
mov
jle
test
push
inc
sub
mov
adc
and
cmpb
xchg
pop
fs
in
jno
cmp
lds
sahf
push
cmp
out
test
fucomi
jae
subb
push
xchg
dec
je
lret
into
pop
and
lock
or
sbb
mov
clc
xor
sbb
mov
adc
mov
cmp
fisttpl
mov
push
dec
xchg
jnp
add
bound
es
aaa
cli
jle
lahf
addr16
pop
lock
test
sahf
pushf
mov
and
add
add
dec
pushf
sub
jmp
push
jg
pop
imul
sbb
outsl
enter
aam
cmpsl
dec
lret
dec
xchg
daa
cmp
mov
mov
adcb
sbb
pop
inc
jle
mov
sub
sub
adc
push
aas
fildl
push
daa
push
pop
mov
ret
and
lcall
sbb
pop
imul
cmp
xlat
add
mov
mov
popf
mov
movsl
add
xorl
cwtl
mov
mov
mov
pop
outsl
roll
ss
and
cmp
mov
js
imul
xchg
mov
fidivl
and
and
mov
enter
pop
cmp
jns
jns
mov
adc
cmc
ss
xor
leave
inc
sbbb
and
mov
pop
dec
lret
pushf
mov
dec
xchg
ucomiss
lahf
inc
cwtl
mov
call
dec
xchg
cmp
and
mov
mov
jmp
or
sti
lds
mov
or
jnp
inc
test
pop
mov
aaa
mov
mov
jns
or
push
cltd
xchg
clc
iret
mov
push
push
mov
or
ja,pn
fidivrl
mov
or
negl
stc
cmc
mov
mov
cwtl
cmc
mov
cmp
xchg
ja
pop
insb
flds
xchg
add
push
inc
xchg
call
out
xor
fimull
popf
stc
clc
cmpsl
add
dec
push
cmp
lds
aas
mov
test
mov
or
popfw
xchg
insb
sarb
jle
loope
push
stc
addl
xchg
into
xchg
push
mov
adc
imul
repz
inc
cli
dec
mov
inc
jno
jle
aad
dec
xor
hlt
add
dec
mov
mov
xchg
xchg
xchg
jae
mov
push
ret
lds
sbb
push
std
lcall
into
dec
imul
in
pop
jb
adc
sub
dec
inc
mov
inc
mov
inc
addr16
jb
ljmp
or
dec
popa
jns
push
insl
leave
adcb
addr16
daa
dec
clc
lods
sbb
jg
test
and
loop
jg
cld
out
mov
xchg
mov
push
lea
mov
mov
lods
ss
mov
mov
cli
pop
sbb
cwtl
pop
cmp
test
fisubrs
ljmp
repz
mov
pop
mov
pop
cmp
stc
mov
adc
stos
adcl
fcoms
cmp
jns
cmp
mov
jle
nop
stc
sub
cmc
pop
jne
ror
or
andb
fnsave
xor
sbb
idivl
jge
adc
mov
mov
mov
rorb
jne
xchg
les
lock
stos
push
int
cmpsb
test
mov
enter
repnz
jae
add
ret
movsl
jecxz
popf
daa
xchg
push
push
jmp
or
addl
xchg
nop
insb
jb
mov
and
lcall
ret
pop
dec
outsb
inc
sbb
je
sbb
xor
incb
outsb
inc
cmpsl
dec
inc
jno
jge
lods
mov
jbe
xor
adc
dec
jbe
icebp
out
xchg
fdivrs
negl
nop
cmp
inc
mov
daa
push
cltd
or
bound
dec
into
push
je
outsl
stos
mov
out
cmp
pop
sbb
pop
mov
aam
cs
mov
mov
push
bound
dec
outsl
pop
call
mov
mov
mov
xchg
sarl
cmp
fwait
mov
leave
out
xchg
mov
sub
mov
xchg
and
fldt
sbb
pop
pushf
push
decb
and
leave
mov
jbe
jo
xor
addr16
jecxz
mov
add
out
fwait
xchg
fmull
int3
into
xchg
addr16
cmp
inc
lea
into
iret
aad
in
or
inc
cmp
mov
nop
pop
pop
sbb
dec
push
mov
pop
push
lret
ficomps
adc
pop
out
adc
sbb
mov
out
mov
mov
pop
dec
fdivrl
mov
dec
flds
cli
inc
fdivl
jmp
inc
mov
mov
idivb
or
jae
iret
xor
aam
push
xor
in
xchg
call
js
mov
push
push
ljmp
inc
push
mov
fimull
pop
je
scas
sbb
mov
sbb
pop
cmc
sbb
jbe
js
and
dec
add
cmp
cmpsb
mov
cmp
mulb
cmpsl
out
aad
ljmp
inc
rcr
jns
sub
cmp
cmc
pop
dec
xchg
xchg
add
jnp
sbb
mov
dec
ja
ja
add
into
dec
jmp
sbb
cmpsl
mov
punpcklbw
addr16
cld
xchg
adc
cmp
adc
xchg
cmp
cmp
movb
or
mov
mov
out
repz
jl
jbe
sbb
and
pop
mov
adc
pop
sbb
sbb
sbb
enter
loopne
int3
out
inc
or
jo
cmc
dec
js
mov
push
repz
gs
cmp
or
mov
pop
dec
mov
and
negl
repnz
dec
pop
jno
inc
inc
cmc
or
push
rcrl
movsb
jmp
loope
lcall
pop
cmp
jb
sbb
popa
jns
sub
jns
mov
addr16
aad
jmp
xchg
add
cmc
mov
dec
in
xchg
test
adc
je
js
cwtl
add
and
or
cwtl
aaa
cmpsb
arpl
push
push
and
mov
xchg
bound
int
leave
or
cmp
xor
sub
ljmp
pop
jae
xchg
aad
inc
lock
ror
outsb
xchg
push
inc
or
xchg
inc
jae
mov
jae
imul
insb
fadd
cmp
push
call
imul
sbb
xchg
and
mov
mov
aad
xchg
call
pop
jnp
sbb
mov
daa
inc
loope
jmp
ja
mov
mov
js
rcrb
js
cmpsb
jge
fildll
and
in
push
jecxz
fnstsw
push
jg
adc
imul
imul
xor
pop
cwtl
jae
popa
pushf
lock
jne
sub
xchg
fiaddl
pop
sub
dec
inc
push
in
jg
xchg
mov
scas
push
jns
cmp
leave
jp
xchg
jae
mov
push
aas
sahf
xlat
inc
dec
or
cltd
sar
xor
aaa
mov
jb
cmc
ja
repnz
test
js
push
js
lds
fs
adc
add
inc
xchg
xchg
push
add
mov
mov
sub
test
cmp
sub
sub
push
inc
test
jecxz
loope
pop
out
hlt
inc
js
xchg
inc
incl
popf
sahf
push
sbb
jnp
add
insb
cmpsl
test
icebp
inc
rcll
ret
cmp
mov
pop
cmpsl
testl
leave
addb
subb
dec
push
cmp
push
aas
mov
enter
mov
cwtl
mov
inc
cmp
aad
cmpl
clts
testl
xlat
jg
lret
inc
ss
jg
js
test
lds
sbb
bound
hlt
notb
loop
shll
int
fdivp
xor
nop
out
out
adc
rorl
xchg
ja
repz
sbb
imul
push
xchg
std
mov
lea
frstor
into
add
cmp
aad
and
sbb
push
insb
js
inc
sbb
sbb
xchg
sbb
ss
ss
daa
inc
and
adc
testl
push
jecxz
and
add
or
jp
pushf
cwtl
repnz
fs
lret
fmul
outsl
add
cmp
into
test
cltd
sti
push
js
testw
cmp
lret
lods
sub
or
mov
rorb
inc
out
lods
fmull
mov
cld
pop
rolb
sbb
cmp
or
out
outsb
mov
vpunpckhwd
xchg
jnp
sbb
pop
mov
rclb
adc
xor
pop
push
fs
or
push
cmp
xchg
adcb
xchg
aas
out
mov
dec
jp
dec
dec
cmp
lea
push
int
nop
mov
mov
xchg
in
sbb
fsubr
imul
clc
arpl
cmp
fwait
mov
xchg
adc
sub
push
or
pop
outsb
lods
push
push
cmc
dec
ret
sbb
test
sub
sahf
xchg
packssdw
outsl
mov
pop
add
sbb
and
test
add
push
js
add
rcrl
add
mov
mov
cmp
sbb
icebp
dec
out
pop
pop
jl
cltd
frstor
imul
jb
dec
sti
test
out
xorb
adc
aam
jb
daa
dec
out
out
test
push
pop
addr16
sub
inc
out
add
sbb
adc
cltd
cmp
and
mov
addr16
into
rcrl
test
es
xor
jbe
jge
xor
js
or
push
inc
pop
mov
addr16
mov
ja
sarb
inc
xchg
add
pop
mov
inc
and
mov
cmp
dec
insb
pop
add
xchg
dec
lods
mov
push
and
xlat
mov
pmullw
aaa
add
pop
mov
jo
outsl
mov
repz
mov
jmp
mov
inc
mov
inc
dec
sbb
fildll
cmp
xor
xor
jecxz
into
mov
dec
mov
sarl
daa
test
std
xchg
push
imulb
movlps
dec
inc
inc
cmp
test
outsl
pop
jg
or
idivl
xorl
or
and
lret
out
cmp
xchg
mov
adc
push
int3
lods
or
mov
imul
adc
stos
outsl
out
stos
cmc
cmp
loop
jb
xor
loopne
addr16
repz
xor
dec
fidivrl
cmp
mov
pop
fiaddl
sbb
cmp
cwtl
clc
mov
xchg
into
ja
out
mov
aas
pop
or
cld
fsubl
daa
cltd
inc
lods
gs
mov
pop
and
jne
inc
movsl
enter
test
sub
inc
stos
jb
clc
cmp
aam
cmpsl
fidivrl
test
xchg
sarl
insb
mov
jne
fucomip
call
cmpsb
outsb
cmp
in
push
sti
pop
es
ja
mov
pop
mov
cltd
jg
cwtl
cmp
mov
leave
ss
xchg
adc
dec
negl
xchg
ds
div
cmpsl
add
outsl
push
mul
shrl
push
mov
mov
ja
pop
push
dec
or
xor
jp
cmpsl
lcall
sbb
arpl
fistps
loop
or
insb
lods
sub
mov
push
bound
inc
in
jle
jg
or
test
out
ja
in
mov
mov
xor
scas
test
not
popf
test
notb
movsl
fs
int3
repz
rcll
cmpb
subl
setbe
xchg
or
pop
pop
sbb
aam
and
cld
test
and
cmp
and
leave
imul
fdivrs
mov
pop
es
sarb
jmp
inc
lahf
scas
sbb
jbe
xlat
mov
js
adc
and
lea
xchg
xor
test
stos
pop
je
mov
mov
or
xchg
notl
cld
xchg
jmp
out
outsb
dec
mov
addr16
dec
out
data16
add
pop
xchg
sbb
jmp
lea
fcmove
shll
adc
int
clc
xchg
sub
jne
enter
js
jg
pop
mov
fcompl
xchg
inc
adc
and
sbbb
push
test
xor
sub
roll
rcl
mov
andb
push
addr16
inc
jle
cltd
jge
and
or
loop
pop
fwait
mov
xchg
insl
test
test
pop
js
sbb
cmp
mov
ja
cmc
pop
cmc
stos
sub
mov
test
add
addr16
in
sahf
and
lods
jae
and
testl
mov
pop
cmp
bswap
jle
fisubrl
test
aad
jmp
ja
or
into
xor
inc
cmc
pop
movsb
loopne
mov
js
call
addr16
mov
rol
xor
cltd
xlat
add
int3
es
fstps
xchg
aas
sbb
lcall
mov
into
test
jo
pop
mov
sbb
add
cltd
push
addb
pop
ret
dec
test
inc
xchg
in
push
cmpsl
inc
je
add
lret
add
clc
pop
rcr
negl
jp
aas
outsl
push
les
jle
outsl
dec
push
sbbl
dec
lods
push
and
ss
nop
cmpsb
fdivrl
pop
and
dec
negl
mov
outsl
push
cmp
cwtl
mov
cmc
or
pop
xlat
xor
fildl
inc
fstpt
jmp
cmpsb
sub
xchg
mov
pop
jnp
lret
out
mov
ja
cmp
and
inc
xor
es
hlt
mov
or
mov
stc
push
gs
push
in
xor
pushf
mov
lret
out
inc
popl
inc
xchg
int
and
je
add
mov
lock
sbb
sub
jp
push
cld
inc
mov
sbb
push
or
test
jle
cmc
pop
mov
fs
sub
rclb
and
dec
pop
jle
test
iret
mov
and
jl
adc
outsl
dec
pop
stos
rcr
lret
test
xchg
ljmp
sbb
jnp
sbb
pusha
movsl
shrl
and
ficomps
xlat
imul
pusha
test
jae
dec
rcrb
cmp
sub
fidivrs
mov
int
pop
dec
lahf
jl
dec
xchg
ret
cli
inc
jle
mov
cmp
xlat
push
shrb
pop
out
inc
cld
in
sbb
mov
cmp
xchg
rcll
js
jae
pop
lahf
mov
mov
test
mov
mov
inc
stc
jnp
aam
inc
mov
mov
jae
mov
fnstcw
cmp
cmp
dec
cmp
arpl
imul
mov
iret
add
test
xor
cmp
pop
clc
daa
les
cmp
cmp
or
imul
mov
inc
sub
add
lahf
xchg
jns
push
rcr
pop
push
push
mov
movsb
data16
xorb
mov
mov
out
mov
pop
dec
fcoms
repz
dec
int3
sub
int
shll
test
adc
cmp
inc
inc
stos
repnz
push
hlt
std
jns
xchg
add
push
pop
xchg
dec
js
xlat
xchg
inc
pop
jle
and
jae
sub
aas
test
cmp
xor
add
lods
lret
cmp
ret
sub
add
or
sarl
stc
test
test
dec
cmp
or
nop
dec
clc
bound
jp
test
rorl
sub
jle
loopne
sbb
cmp
xchg
jp
cmp
adc
sbb
aaa
inc
mov
xchg
into
arpl
stc
or
dec
fisubs
test
xchg
push
in
inc
out
pop
and
or
shl
pop
inc
pop
cli
jae
cmp
push
enter
imull
psubd
pop
jp
stos
fmull
imull
js
test
pop
mov
popa
xlat
leave
xor
jecxz
or
stos
sub
jg
mov
xor
add
mov
insb
adc
popa
jg
stc
sbb
fdivrl
dec
repz
inc
jecxz
pop
jmp
out
scas
inc
pop
mov
pop
dec
inc
or
mov
mov
jge
mov
js
repz
inc
add
repz
mov
out
inc
add
mov
or
jl
insb
cwtl
mov
ret
fsubl
or
xchg
push
sub
adc
cmp
testb
xchg
push
testb
add
dec
idivl
sbb
fdivrl
dec
and
inc
in
sub
sub
gs
sub
jae
mov
insb
jno
sbb
and
sbb
fcompl
inc
xorl
and
repnz
daa
mov
out
inc
add
rorb
adc
jle
mov
bound
adc
sbb
out
sti
test
push
aas
push
add
jo
xchg
call
inc
loope
outsl
jp
lds
mov
js
popa
mov
hlt
js
inc
test
mov
sti
push
sti
popa
aam
in
gs
sbb
imul
or
and
dec
sub
sub
jp
hlt
sbb
es
mov
movsl
stos
es
aaa
xchg
sbb
push
push
sub
pop
or
es
inc
sbb
es
leave
fadds
xchg
fsubrs
mov
ss
mov
dec
insb
or
clc
pop
dec
test
inc
xor
test
jl
ja
cmp
add
inc
jnp
pusha
cmpsl
ss
sbb
lret
pop
cwtl
pop
sbb
pop
adc
js
cltd
inc
mov
mov
xchg
jmp
mov
xchg
xor
js
and
scas
cwtl
movsl
repz
and
sarl
lcall
mov
cmp
jl
push
mov
popa
mov
inc
adc
xchg
mov
test
std
in
mov
outsl
adc
mov
ret
pop
movhps
push
test
adc
adc
adc
dec
jmp
xor
adc
mov
pop
dec
inc
popa
lret
lret
js
jle
cltd
xchg
jl
shll
xchg
lea
nop
cmp
pop
aam
cli
add
in
jg
add
cli
test
imul
mov
jp
ret
ja
pop
ret
sbb
ss
adcb
push
sbb
jg
lret
mov
mov
adc
pop
jle
test
movsb
or
pushf
jae
faddl
nop
es
ja
out
jle
push
xchg
inc
jle
jecxz
xor
adc
adc
jnp
int3
sbb
mov
mov
pop
jl
fisubs
cmc
cmp
les
test
imul
xchg
fimuls
test
sub
push
sub
es
rcrl
repnz
or
sub
fistps
testl
push
data16
out
push
pop
into
mov
aad
imul
jg
fsub
nop
icebp
push
outsl
cli
dec
dec
aas
dec
and
dec
fisubrl
aaa
out
xchg
jne
out
clc
rorl
jecxz
fsts
js
lods
dec
ficoml
push
push
fsubs
jnp
aad
fisubrl
pop
cmp
and
leave
movsb
testl
loop
gs
mov
jns
jo
ja
xchg
lea
fldl
sahf
test
ds
clc
pop
xorb
es
and
mov
jmp
push
dec
aaa
pop
fucomi
test
sub
dec
jae
and
je
dec
xor
int
pop
mov
sub
dec
cmp
sbb
out
sbb
jle
xor
or
pop
pop
ja
scas
sbb
push
pushf
les
mov
push
arpl
fs
jns
mov
push
xchg
fisttpll
xchg
jmp
jmp
lret
sub
inc
or
int3
xor
add
mov
sarb
rclb
cmp
sbb
mov
fidivl
cli
fldl2e
xor
or
pushf
movq
lret
cmpb
jle
sbb
jp
dec
push
dec
inc
or
out
lret
loope
arpl
add
add
mov
outsl
sub
cmpsl
movsb
jp
iret
cli
stos
test
loope
dec
out
xor
cmc
aas
adc
movb
xchg
cmc
dec
or
sbb
decb
sub
mov
cs
fistl
lret
test
scas
cs
pop
idiv
add
les
adc
push
cmpb
pop
stos
xor
push
cmp
push
test
pop
add
adc
sbb
popl
mov
call
mov
or
jp
sub
repz
lea
inc
dec
jle
jnp
cmc
mov
inc
cmp
shlb
sub
mov
cmp
mov
cli
lret
jg
cwtl
pop
adc
sub
sub
xchg
push
imulb
push
jb
movsl
sbb
sbb
mov
and
es
xor
mov
mov
or
cmpsl
push
xor
inc
push
sarb
notl
mov
xchg
cmp
inc
push
loopne
mov
add
hlt
pop
fisubl
test
adc
mov
ret
cmpsb
jnp
cwtl
ljmp
das
mov
mov
xchg
es
mov
out
push
jae
idivl
enter
mov
and
inc
adc
cltd
or
movsl
adc
cmpsb
fsubrl
ret
mov
je
repnz
ds
and
jecxz
mov
sub
inc
jo
jbe
jle
jg
push
lret
scas
ja
adc
pop
loope
cltd
js
stc
lea
pop
xchg
xor
ret
fiaddl
cmp
btsl
add
js
sub
dec
loopne
dec
arpl
scas
add
mov
mov
sub
leave
jb
xchg
cmc
sub
stos
sbb
call
mov
sbb
cmpsl
idivl
dec
loopne
pop
cmp
out
ss
aas
jp
ljmp
js
int3
aaa
inc
repnz
adc
fdivs
jmp
loopne
cmp
sbb
int3
pop
js
adc
call
std
jg
pop
or
imull
sub
ds
mov
cmp
test
mov
lds
or
dec
inc
icebp
or
scas
mov
stos
iret
imul
fwait
dec
lea
into
push
dec
sbb
lods
sti
xor
faddp
test
test
lret
test
out
dec
ja
scas
jmp
out
div
in
test
jge
cmp
into
cmp
pop
sbb
cmp
adc
lret
repz
sbb
pop
inc
and
mov
inc
arpl
lea
scas
pop
daa
dec
insb
dec
fld
inc
inc
mov
dec
pop
xchg
sbb
push
push
jl
sbb
int3
inc
es
inc
xchg
push
lods
sbb
test
inc
into
jmp
dec
mov
push
stos
xorb
clc
xchg
fcoms
xor
inc
or
mov
pusha
xor
cmp
mov
push
loop
dec
adc
pop
popa
pop
into
or
scas
xchg
or
imul
pop
inc
mov
xchg
cmp
push
aas
mov
cmp
bound
pop
and
pop
mov
mov
mov
stos
push
jle
aas
mov
mov
or
dec
xor
or
adc
sub
jo
push
stos
neg
sbb
pushf
cmpsl
fwait
ss
and
daa
cli
xchg
xchg
loopne
adc
repnz
cmp
outsb
adc
ja
xor
cmp
xor
dec
test
fcomp
inc
jo
imul
sbb
sbb
add
mov
outsl
xchg
popf
cmpsb
stos
fxch
mov
loopne
push
lods
xor
or
add
or
mov
mov
dec
push
out
push
xchg
dec
adc
xchg
in
jge
std
cmp
clc
mov
arpl
mov
test
andl
test
cmp
mov
jns
sub
add
pop
ja
adc
cmp
negl
cmp
cld
aad
cmpsl
rorl
push
sub
or
xchg
ljmp
push
xchg
push
push
test
cmp
pop
inc
cmpsb
cli
pop
cmp
add
into
pushf
sti
aad
or
out
sqrtps
xchg
cmpsb
mov
inc
pop
add
pop
std
jecxz
inc
or
stos
out
push
cmp
sbb
fstpl
inc
adc
push
out
push
leave
xor
dec
std
jle
cmp
rolb
or
jg
inc
out
pop
cvtpi2ps
inc
mov
je
imul
data16
test
adc
repnz
fwait
pop
repnz
rorl
insb
lods
push
push
fmuls
sub
arpl
nop
jle
jno
loopne
mov
dec
jae
xchg
js
and
adc
cmp
jle
adc
sub
out
jnp
mov
sub
test
cmp
cld
sbb
lahf
xor
xor
lcall
xchg
cmpsb
mov
pop
stc
fcomps
int3
sti
cmp
test
inc
or
dec
add
aad
aam
movsl
faddp
ja
or
push
cmpsl
sbb
mov
repz
cmc
mov
jp
dec
pop
aas
dec
lcall
mov
jle
xchg
ja
xlat
cs
push
lods
mov
cmp
dec
mov
jo
mov
outsb
push
into
or
push
adc
pop
cmp
pop
mov
jg
jb
stos
and
addb
rcrl
pop
je
pop
ret
xorb
xor
dec
xor
movsl
subb
or
shlb
gs
call
or
mov
ds
adc
cmp
mov
lods
mov
push
adc
rolb
jg
ja
mov
adc
sbb
xlat
jecxz
adc
arpl
lret
ret
or
repnz
ss
add
mov
adc
mov
aam
add
push
add
inc
xchg
sbb
push
mov
mov
scas
arpl
and
addl
aas
arpl
sub
test
imul
nop
adc
loopne
jg
stos
add
stos
adc
dec
jge
cld
pop
sbb
add
cmpsl
push
pop
mov
mov
cmpsl
loopne
lret
addr16
clc
fcmovb
adc
leave
aam
jns
sti
cmp
test
ret
cmpsb
jae
call
push
push
inc
inc
push
call
push
or
pop
mov
jle
incl
aas
mov
pop
cmp
sarb
and
and
fisttpll
push
fdivl
mov
add
pushf
xchg
mov
stc
or
sbb
cmpl
daa
adc
es
sub
fsubl
dec
dec
out
push
and
inc
sub
xchg
stos
mov
sti
mov
std
pop
test
in
or
arpl
jl
mov
cli
arpl
lcall
pop
testl
mov
mov
jmp
xor
out
int3
ss
add
cmpsl
adc
cmp
mov
lahf
pop
insl
sbb
xchg
or
push
or
cld
fs
sbb
xor
pop
mov
add
test
push
mov
jmp
insb
mov
pop
cs
test
cmp
cmc
sbb
dec
test
mov
inc
stc
adc
push
push
mov
aas
mov
js
cmp
test
loope
fmuls
lahf
out
mov
push
jl
je
dec
cmp
fldenv
sub
sub
out
and
or
cmp
ds
in
loopne
sbb
jg
shrb
call
out
fwait
aas
pop
mov
inc
and
add
mov
push
add
jle
mov
xlat
jg
test
test
pop
or
callw
mov
and
aaa
test
mov
sbb
add
addb
hlt
subl
adc
lahf
xchg
sbb
fs
dec
xorl
or
mov
int3
add
mov
jb
xor
inc
dec
pop
repz
scas
mov
mov
dec
rolb
inc
dec
ja
mov
push
iret
ret
sbb
test
xchg
fwait
stos
cmp
punpckldq
lret
mov
xor
cmp
pop
iret
fwait
testb
mov
push
mov
loope
jbe
fdivrl
jg
arpl
adc
jnp
rcll
dec
test
lods
cmp
pmullw
jmp
pusha
hlt
mov
jg
dec
jnp
dec
movsl
dec
pop
imulb
fwait
in
xchg
fsubrl
jmp
sub
sbbl
negl
mov
jnp
js
adc
cmp
std
imull
cmp
out
mull
movsl
enter
es
pop
add
push
sbb
int3
jnp
call
pop
xlat
sbb
or
or
shlb
pop
sub
idivl
adc
ss
rorb
adc
aaa
push
das
xor
xor
and
add
daa
xor
mov
loopne
lret
ja
xlat
mov
mov
cmp
xor
jae
or
clc
xor
inc
xchg
pop
xor
xchg
sbb
testl
fwait
outsl
sub
popf
add
mov
dec
sti
cmp
outsb
fdivrs
aas
jns
jecxz
pop
iret
sti
pop
ja
les
cld
pop
cmpb
dec
mov
cmc
xchg
dec
js
or
sub
addb
dec
push
or
mov
insb
fsubr
ja
incl
pushf
push
fldcw
ljmp
adc
pop
push
inc
lock
dec
adc
rcrl
push
and
pop
out
je
add
adc
aas
mov
movsb
aam
ljmp
js
fbld
ds
outsl
divb
je
mov
movsb
or
pop
sti
addr16
pop
adc
or
jl
jmp
sub
inc
roll
mov
nop
add
divl
xchg
jns
pusha
xor
cmp
cmpsl
aad
cmp
pcmpeqb
xchg
ja
adc
jg
movl
ds
jb
imul
xchg
dec
cmp
movswl
daa
adc
into
ret
adc
mov
gs
and
pusha
cmp
pop
or
mul
inc
jg
xchg
int3
xchg
cmp
push
inc
jnp
cmp
mov
ss
push
clc
push
pop
les
popa
std
movsb
enter
inc
aas
mov
adc
mull
sbb
xchg
insb
or
movsb
mov
js
or
xchg
andl
mov
inc
mov
or
mov
lds
mov
cmp
mov
test
es
test
push
sbb
xchg
addr16
pop
pop
cmpsb
pop
out
dec
inc
cmp
add
orl
lcall
xor
mov
shll
cmp
pop
jmp
int
js
lock
js
push
lret
or
or
lods
test
or
leave
mov
outsl
adc
xchg
lret
jle
cmp
xlat
loope
pop
push
pop
cmc
ds
add
je
sub
xchg
dec
adc
data16
mov
les
xorb
int3
ljmp
mov
dec
sub
test
pop
cmc
movsl
jp
mov
out
mov
cmp
jg
pop
mov
cmp
inc
ret
gs
jle
insb
vmovaps
mov
xor
les
orl
jns
add
and
or
cmpsb
adc
add
or
lock
push
out
xor
loopne
jg
pop
inc
jp
adc
mov
fdivs
subb
or
adc
mov
lods
lcall
test
inc
adc
stos
cmc
mov
ljmp
xchg
mov
jp
fdivl
es
fldt
sub
bound
iret
out
mov
or
stc
jmp
daa
or
mov
lds
ljmp
dec
mov
lds
out
cmc
jecxz
sub
mov
in
pop
pop
mov
nop
imul
pop
push
std
fs
sahf
mov
inc
pusha
scas
mov
in
lea
dec
push
inc
add
mov
or
sbb
jge
cmp
es
into
mov
mov
push
mov
dec
mov
je
xor
add
cmp
xor
sbb
mov
iret
fildl
out
dec
test
ret
fsts
pop
imul
mov
xchg
jecxz
pop
mov
movsl
dec
scas
push
dec
adc
pop
ja
sbb
mov
pop
xlat
jnp
iret
mov
fiaddl
cli
stos
sbb
cmpsl
insb
ds
popl
iret
sbb
xchg
jmp
imul
int3
pushf
cmp
inc
dec
adc
jge
adc
sub
jp
popa
xchg
imul
out
leave
inc
or
loopne
jg
push
add
xlat
test
or
ja
cmp
popf
ret
cmp
leave
adc
imul
add
cwtl
pushf
mull
lcall
test
mov
sbb
mov
dec
inc
insl
loopne
outsl
sbb
aam
ds
pop
jmp
dec
pop
es
test
adc
mov
cld
pushf
xchg
pop
cmp
imul
dec
sub
inc
pop
adc
mov
aas
jmp
push
lahf
loopne
andb
dec
stos
mov
ds
ljmp
push
mov
lds
mov
and
pop
cmp
pop
imul
xor
mov
test
dec
mov
mov
add
mov
out
xchg
jg
inc
xchg
imul
pop
sbb
pop
add
jnp
pop
ret
or
cmp
jg
add
sub
xchg
add
mov
or
cmp
fnstenv
push
negl
sub
push
xor
mov
ds
or
in
outsl
movsl
pop
shl
arpl
outsl
cmp
int3
add
cld
mov
cmp
push
testl
xchg
loop
into
das
dec
out
call
jnp
pop
push
outsl
sub
inc
add
outsb
sub
sti
pop
mov
jmp
das
sbb
enter
incl
cmp
cmp
and
pop
xchg
mov
loope
outsl
les
ss
lahf
sub
imulb
inc
xabort
pop
inc
ret
in
in
cmp
in
idivl
iret
pop
mov
push
fmuls
pop
jmp
repz
inc
mov
lret
xor
pop
inc
xor
dec
jmp
cmp
jg
in
in
sub
mov
stc
jnp
imul
loope
or
cltd
xchg
fdiv
sbb
daa
iret
lcall
inc
sub
cld
push
push
idivb
imul
adc
out
cwtl
xchg
lahf
mov
ljmp
inc
std
jnp
jle
push
sahf
popa
xlat
adc
jge
mov
sbb
sahf
cmp
ret
cmp
stos
movsl
shl
daa
pop
mov
jmp
out
inc
mov
lock
idiv
cld
and
mov
mov
cmpl
and
daa
xchg
mov
les
addr16
mov
fistl
imull
repnz
in
push
jae
ds
cmc
enter
out
in
pop
lods
test
test
cs
xor
sbb
flds
push
js
ds
cmp
cltd
push
out
xchg
jmp
ret
rorl
arpl
push
fs
addb
ljmp
xchg
arpl
pushl
clc
add
push
adc
dec
adc
scas
jno
push
repnz
dec
xor
mov
push
fstpt
push
add
aad
push
je
and
daa
shlb
imul
mov
data16
jne
out
xchg
add
aaa
addr16
xchg
aas
das
cmc
rorl
sbb
insb
ja
cli
call
cmc
out
lods
test
or
mov
xlat
mov
rcl
daa
mov
outsb
sub
xor
jb
imul
sub
dec
aas
imul
loopne
dec
or
xchg
or
adc
mov
inc
scas
pop
dec
pop
mov
pop
adc
push
dec
lods
test
test
or
and
cmpl
mov
adc
js
xor
sahf
cmp
and
mov
sub
sub
jl
out
into
or
cmp
subb
and
or
outsl
xor
cld
bound
sbb
sbb
mov
iret
or
pushf
gs
sbb
out
xor
fcoms
or
dec
xchg
int3
sbb
das
cmp
push
xor
shl
mov
or
js
adc
stos
cmc
ja
andl
loop
shr
shld
cmp
ret
sbbl
gs
jmp
fsubl
cmp
fldenv
mov
pusha
mov
add
pushf
mov
or
cmp
or
mov
ja
test
dec
test
inc
jns
jg
xchg
aam
roll
loope
dec
outsb
ret
ljmp
cltd
inc
or
fidivs
push
outsl
test
cmc
xchg
xchg
cmp
out
daa
das
and
repz
cwtl
mov
ja
dec
insb
adc
mov
jl
sbb
or
sbbl
push
sbb
dec
sub
sbb
out
cmpsl
inc
jae
cmp
lret
js
insb
gs
popf
sub
mov
into
xchg
pop
mov
imul
sub
push
mov
xchg
mov
adc
adc
ss
imull
fnstenv
sub
test
gs
sti
jbe
fsubr
mov
and
movsl
scas
add
jge
or
mov
sti
mov
mov
lods
jl
xchg
test
xor
push
orb
jae
xchg
filds
cli
dec
fs
repz
mov
mov
cwtl
xor
loop
nop
loopne
sbb
mov
dec
rcr
movsb
adc
movsb
lahf
xchg
stos
or
subl
mov
xchg
cmc
data16
call
stos
testl
mov
adc
sbb
faddl
mov
jle
jnp
andl
jl
xchg
insl
pop
mov
je
jl
sbb
mov
mov
fisubrs
xchg
and
pop
repnz
pop
xchg
mov
nop
push
mov
test
add
mov
cmpsl
pop
or
outsl
les
ss
xchg
cmp
aas
fiaddl
pop
mov
ljmp
jg
dec
cmp
aas
in
ljmp
mov
outsb
fisttpl
jmp
sub
push
fbstp
push
pop
nop
mov
pop
jae
inc
pop
add
mov
rorb
push
mov
outsb
fisubs
pop
mov
push
nop
cmp
sarl
cmc
clc
fdivrl
rorl
or
cmp
mov
jns
jp
div
and
ljmp
or
or
leave
mov
xchg
sub
inc
fists
mov
or
inc
pop
xchg
pop
xchg
dec
xchg
rcrl
pop
xchg
imul
lret
js
mov
sub
mov
mov
stos
pop
adc
dec
mov
pop
loopne
pop
jl
push
scas
mov
push
lcall
sbb
sar
add
jmp
stc
mov
es
mov
cmp
cli
inc
sub
stos
js
icebp
mov
int
lds
in
xlat
pop
sub
push
test
add
lods
fisttps
jnp
pop
and
int3
imull
fwait
lods
push
fdivp
push
mov
add
mov
pop
xor
test
cmc
sti
mov
js
mov
add
stos
aas
idivb
push
and
test
jl
add
cmp
cmp
jecxz
inc
push
cmpsl
aas
jmp
xchg
push
aaa
vmwrite
lods
cmp
fstps
movsb
lock
test
les
mov
movsb
mov
std
cmp
lcall
ret
sbb
pop
mov
xchg
in
rolb
insl
pop
jecxz
jns
clc
xchg
pop
sbb
pop
cmp
psadbw
push
test
cmpsl
shrb
sub
fidivl
or
out
push
sub
repz
jl
jnp
pop
add
xchg
loop
and
mov
sbb
pop
mov
pop
adc
outsb
dec
sub
ret
mov
or
ja
xchg
inc
xchg
dec
fdivrp
cmp
or
sti
stos
xlat
pop
dec
js
fiadds
jp
xlat
pop
mov
sbb
dec
inc
xor
sbb
jmp
into
mov
sbb
mov
in
mov
jae
push
loopne
int
mov
das
sub
xchg
mov
mov
jns
push
push
test
adc
xchg
sbb
xlat
dec
fdivs
pop
mov
popa
cmp
add
ss
xchg
xchg
mov
lahf
inc
inc
sbb
lea
dec
lahf
cwtl
shl
pop
add
pop
repnz
test
push
adc
movsb
fisttpl
sbb
jae
pop
outsl
mov
cmp
pop
mov
jnp
pop
aas
jae
mov
inc
shll
rolb
add
cs
lock
sbb
pop
add
pop
dec
test
dec
mov
stos
xchg
add
fiadds
mov
jle
xchg
xchg
pop
xchg
xchg
or
addr16
test
mov
pop
push
jg
mov
call
out
pop
mov
sub
mov
das
aas
dec
test
adc
pop
inc
je
mov
xchg
in
pop
adc
inc
lret
sub
cmpb
loopne
mov
sahf
sbb
fcmovbe
xchg
or
lock
fisubs
inc
xlat
xchg
push
jns
mov
int3
mov
pop
fwait
add
and
cmc
inc
fstpl
add
xchg
cli
lret
inc
bound
xchg
sti
sbbb
or
dec
ja
dec
in
sub
mov
movsl
sbb
jnp
mov
leave
pop
jge
mov
cmpsb
or
cwtl
sub
cwtl
mov
hlt
lods
test
push
mov
xchg
lea
in
jmp
mov
inc
inc
jmp
inc
add
add
jns
jb
pop
pop
pop
rol
test
adc
mov
push
movsb
test
xchg
orl
fisubl
mov
lahf
xor
ja
mov
mov
sbb
dec
cmpsb
sbb
mov
cmp
xor
or
xlat
sarb
stc
lret
pop
cmp
into
jle
imul
cwtl
mov
fidivrl
or
cmp
dec
negl
test
mov
mov
nop
dec
cltd
xchg
idiv
mov
and
cmp
add
push
inc
cwtl
jle
pop
jne
mov
lods
pop
and
repnz
xchg
cli
add
push
push
inc
cmc
push
enter
pop
dec
ja
jl
popa
shlb
cltd
pusha
push
mov
in
pop
mov
jmp
es
add
push
dec
sbb
inc
add
mov
clc
jle
das
cmp
nop
das
out
mov
int3
mov
loope
movb
sbb
testb
ret
addr16
outsb
fcomip
mov
jmp
mov
jle
adc
xor
cmp
cmp
mov
and
cmpl
sbb
int3
cmpsb
jae
aad
mov
pop
jl
add
cmc
js
cmp
das
jmp
adc
jns
adcb
fsubrl
jmp
xor
imul
sbb
push
mov
push
outsl
sbb
in
pusha
sbb
add
pushf
pop
jle
sbb
sbb
test
mov
sbb
ljmp
adc
addr16
ret
test
pop
sbb
ja
or
sbb
out
mov
sub
add
dec
mov
js
test
fsubs
inc
and
cmp
aam
jg
loopne
jo
dec
test
pop
jl
cmp
fcmovb
mov
cmp
mov
mov
inc
mov
add
test
mov
jne
divl
mov
xlat
inc
or
pop
add
shrl
js
imul
sbb
xchg
cmpsb
ret
mov
xor
or
mov
js
rcrl
xchg
or
cs
in
lcall
push
dec
pop
pop
out
clc
int
ds
int
pop
cmp
stos
sub
push
outsl
mov
dec
inc
jge
pop
fnsave
or
js
enter
fsubrs
cmp
sahf
fsubl
in
subl
sbb
mov
jne
loope
into
push
mov
push
movsl
push
sub
scas
imul
decb
inc
fisubrl
add
sub
push
dec
subb
ljmp
inc
test
ds
push
sbb
lods
out
add
dec
mov
cmp
lahf
xor
cmp
imull
cmp
sbb
pop
pop
xchg
mov
enter
test
sbb
or
push
fstps
push
push
aaa
cmp
pop
loop
inc
sub
out
pop
cmpsb
leave
arpl
cmp
lods
xchg
dec
cli
test
pop
adc
shlb
xor
lahf
sub
aas
adc
sbb
out
pmaxub
jmp
loope
cwtl
sbb
cmp
xlat
mov
scas
or
loope
iret
jmp
push
outsb
or
inc
popf
push
loope
gs
sub
incb
out
xchg
push
xchg
adc
inc
push
push
sub
divb
cmp
cmp
scas
pop
lcall
cmp
enter
mov
les
xchg
mov
dec
push
adc
or
pop
add
cld
push
sub
xlat
adc
adc
sub
cmp
repz
push
pop
ljmp
enter
and
jo
or
ja
les
and
sub
inc
push
lods
sbb
pop
iret
push
pop
inc
cltd
enter
cmp
xor
lcall
lds
xor
insb
xchg
sbb
dec
inc
jae
add
and
jnp
mov
lahf
or
cmovne
inc
aas
dec
fdiv
or
mov
adc
ret
cmp
adc
mov
ss
mov
insl
jnp
jge
cmc
pop
cmp
cld
lods
cmp
mov
dec
jmp
data16
mov
popf
adc
pop
inc
lods
jl
arpl
nop
sbb
pusha
xchg
repz
mov
add
adc
pushw
in
test
mov
inc
adcl
inc
mov
mov
faddl
loopne
cmp
aam
or
in
xchg
xor
jge
dec
imul
pop
outsl
neg
fidivrl
mov
mov
mov
cmp
es
or
outsl
notl
jp
pop
mov
imul
rcll
test
sbb
std
stos
sahf
scas
cmp
mov
scas
push
mov
mov
push
or
add
mov
cltd
lahf
mov
ljmp
xor
and
and
mulb
add
push
mov
aad
pop
xorl
outsl
std
outsb
cmp
fstpl
inc
jle
and
insl
sarl
push
daa
cmp
inc
dec
mov
sub
daa
jecxz
xlat
sbb
lds
pop
pop
xchg
inc
arpl
sub
ret
xchg
inc
mov
jg
jge
sbb
adc
lods
fidivrs
call
pop
lahf
mov
cmp
sti
or
xchg
or
popf
jge
xchg
add
mov
sbb
js
adcl
cli
mov
mov
lret
cmp
pop
jmp
mov
test
loope
pop
cmc
xor
fdivl
inc
fs
xchg
shl
add
lea
mov
std
dec
test
add
mov
faddl
ds
jge
dec
pop
xchg
mov
lods
imul
pop
fisttpll
fcom
mov
mov
jge
dec
dec
dec
push
loope
mov
mov
repz
dec
dec
inc
jg
pop
subb
or
daa
mov
call
test
dec
adc
nop
fcompl
adc
popa
jp
ja
cmpsb
inc
nop
les
lret
lods
dec
cmp
push
pop
push
test
pop
daa
and
mov
inc
mov
dec
xchg
cmp
mov
cmp
loopne
into
in
xor
xor
out
mov
or
pop
xchg
pop
into
xor
pusha
dec
mov
lods
push
mov
ljmp
stc
cmc
add
push
and
push
cmp
mov
sub
fwait
mov
cmp
mov
cltd
sbb
sbb
jnp
aas
xor
pop
cmc
or
mov
idivb
jle
pop
ja
cwtl
fistpl
pop
jbe
ljmp
cltd
sub
hlt
sbb
mov
xchg
pop
sub
mov
cmp
xchg
pop
and
xchg
jns
xor
mov
js
push
test
popf
sarb
dec
shlb
xchg
out
movsl
pop
jle
jbe
cmpsl
sub
int3
insb
xchg
stos
push
es
dec
pause
cmpsl
cli
xchg
dec
stos
add
xchg
mov
cmp
lcall
cmc
mov
hlt
mov
add
or
push
add
jmp
jecxz
pop
xchg
cmpsl
jb
sub
ret
cmp
daa
sbb
dec
xor
mov
sbbl
cmc
lock
nop
pop
ja
dec
jnp
inc
jl
movsl
mov
lds
lret
mov
ficoms
imul
aam
sub
push
fsubrp
sbbl
push
int3
test
mov
sti
movl
adc
cmp
sbb
in
inc
or
adc
or
push
inc
xor
xchg
dec
xor
mov
cmp
cmp
inc
mov
rcrl
add
ret
cwtl
cmp
inc
rclb
cld
jg
lret
inc
in
jno
addr16
mov
cs
mov
push
sbb
add
push
cmp
movsl
loop
jbe
jecxz
dec
push
inc
mov
test
popf
mov
inc
xchg
pusha
cmp
dec
sub
das
add
jge
mov
dec
jl
lods
test
dec
les
mov
fstpl
and
test
pop
stc
fldt
sbb
int3
push
sub
mov
add
and
mov
xchg
lcall
arpl
sbb
mov
pop
cwtl
or
push
inc
and
loope
inc
push
pop
push
ficoms
ss
pop
jns
aad
xchg
jg
repnz
nop
cmp
dec
adc
jae
and
daa
popa
bound
jle
and
test
xchg
cmp
adc
mov
cmc
sub
cli
xor
xor
lahf
fstpt
push
ljmp
test
inc
repnz
inc
cmp
iret
jmp
mov
inc
in
pop
mov
dec
pop
fucom
loop
ds
pushf
xchg
loopne
xchg
pushf
cmp
test
les
push
out
mov
xchg
and
xchg
sbb
ds
cmp
pusha
out
mov
divl
xlat
cmp
xchg
dec
fidivl
inc
movsl
fadds
mov
jge
mov
jnp
push
popf
lret
pop
cmpsb
ds
pop
cmp
inc
sbb
mov
sbb
mov
ret
push
or
ret
push
push
es
add
scas
pop
sbb
cmp
mov
or
sub
xchg
repz
mov
jle
cmpsl
ljmp
outsb
fidivrl
jbe
jae
test
jbe
and
daa
push
movsb
in
arpl
mov
insl
dec
lods
lcall
scas
out
fiadds
nop
arpl
ljmp
fsubp
fdivl
enter
cmp
idivl
or
xor
xor
push
js
out
aam
or
adc
pusha
cltd
sbb
fldl
fists
mov
jge
push
clc
mov
out
push
mov
pop
xchg
scas
js
sbb
fwait
popf
mov
xchg
mov
sarb
xchg
sbb
aas
jge
movsl
cld
outsl
in
je
ds
mov
inc
mov
sub
divl
icebp
push
jl
sbb
sub
or
orb
jl
xor
fisubl
xor
out
jecxz
test
xchg
cmp
je
inc
mov
not
add
ja
cli
cmpsl
fadd
pop
jg
mov
mov
inc
fs
cmp
xchg
loop
cmp
faddl
hlt
push
pop
mov
popf
inc
scas
adc
sbb
jp
or
shrb
sub
inc
faddl
mov
imul
js
int
sbb
les
sub
dec
or
daa
dec
inc
clc
push
add
call
adc
outsb
dec
and
and
xchg
cmp
ja
jns
mov
leave
repnz
xchg
outsl
sub
ret
outsl
lahf
add
and
inc
jle
push
push
imul
or
or
mov
mov
sbb
cmc
fsubl
out
push
outsb
pop
repz
sbb
cmpsl
test
stos
xchg
dec
bound
inc
nop
in
ljmp
cmpsb
rorb
sub
loope
sub
imul
mov
into
dec
cli
out
sub
into
adc
lret
cmc
mov
stc
test
dec
negl
cmp
dec
add
jo
pop
in
shl
mov
inc
push
cltd
cmpl
dec
jmp
xchg
outsb
sub
push
mov
xlat
sarb
push
out
incl
mov
cltd
mov
popf
adc
fs
or
xor
push
imul
stc
and
mov
xchg
pop
lret
cmp
dec
in
adc
movsl
inc
or
ret
cld
dec
into
sbb
movb
or
das
mov
je
xchg
popa
rcrl
sub
scas
fidivs
fiaddl
adc
lcall
aad
hlt
or
inc
out
arpl
scas
cmp
dec
xchg
mov
xlat
jae
mov
mov
sbb
mov
cmp
mov
dec
fisttps
xchg
adc
loop
out
cmpb
cmove
sarb
pusha
mov
and
pop
xorb
test
dec
mov
add
pusha
sbb
inc
out
leave
pop
push
dec
cmp
aas
mov
jb
xchg
fldenv
mov
lahf
jns
cli
test
test
and
stos
xchg
dec
test
scas
jle
fisubrl
pop
mov
or
cmp
mov
movsb
xor
ljmp
ss
test
aaa
cmp
pop
ja
mov
xchg
xor
fcmovnbe
sub
mov
pop
bound
in
mov
rcrb
add
dec
or
pop
fmull
lahf
out
xbegin
jle
mov
cwtl
inc
cmc
xlat
sub
cli
adc
popf
mov
loope
mov
xlat
sarb
jo
lcall
mov
push
mov
idivb
stc
sbb
push
divl
clc
mov
mov
loop
push
sub
pop
xor
inc
cmp
test
pop
mov
pop
cmp
jnp
out
pop
dec
lret
ret
add
add
rolb
es
pop
jne
sbb
cmp
inc
aas
inc
enter
dec
cmpsl
push
cmc
aam
pop
pop
cmp
lods
jle
lods
aad
pop
iret
mov
mov
cmp
icebp
test
mov
ss
jae
es
inc
and
ss
cmp
lcall
sub
divl
in
add
cmp
pop
mov
inc
sub
push
xor
sar
inc
cmc
sub
mov
jnp
adc
in
int3
xor
enter
pop
popf
pop
out
jge
pop
fs
adc
xchg
cmp
sarb
push
sbb
int3
pop
je
cwtl
and
inc
cltd
cmp
xlat
out
adcl
addr16
jo
jg
adc
movb
daa
pop
in
imul
mov
icebp
sbb
lahf
xchg
xchg
xchg
insl
in
push
mov
jp
push
or
add
ficomps
cli
fsubr
dec
cwtl
inc
sbb
iret
dec
inc
jle
dec
sti
mov
inc
subb
pop
mov
es
int
js
cmpsb
daa
popa
cmp
lahf
das
in
js
shll
insl
inc
push
clc
mov
lea
and
inc
jae
xorb
mov
lret
pop
inc
lods
or
xor
leave
sbb
mov
cmc
mov
test
inc
pushf
and
xchg
mov
cmpb
inc
jmp
or
mov
aam
or
push
into
fcomps
jmp
sahf
and
addr16
or
xchg
cltd
sub
mov
xchg
pop
cmp
rclb
xor
cmc
sbb
cmp
jg
mov
adc
sbb
popa
or
xchg
mov
shlb
sbb
inc
or
sahf
les
or
insl
mov
test
jg
inc
push
mov
xorl
jns
mov
das
and
test
leave
or
xchg
add
inc
ja
dec
call
xor
nop
mov
mov
out
dec
jns
or
jbe
adc
out
add
pushf
mov
cmp
lods
cmp
data16
xor
lret
addr16
xor
gs
pop
daa
pusha
lock
mov
loopne
xor
sbb
jo
mov
out
stc
sub
out
push
jns
jecxz
mov
test
out
push
ja
inc
xor
mov
jg
mov
add
daa
shlb
sub
xchg
sahf
cmc
std
fidivrl
test
pop
daa
pushl
inc
ret
arpl
mov
inc
out
jp
inc
les
pop
xchg
aaa
mov
sbb
gs
push
jae
iret
jmp
out
cmp
out
movsb
and
xlat
addr16
int3
push
lods
arpl
clc
test
pop
inc
sbb
sub
cli
addr16
mov
mov
cmp
daa
iret
decl
aas
pop
dec
ss
sarl
jmp
jno
cs
xor
cli
jns
push
cmpl
xchg
push
xor
cli
imul
fisttpl
sub
int3
nop
ja
popl
push
pop
ss
popa
pop
push
pop
xor
mov
pop
jmp
ds
or
mov
cmpsl
jns
hlt
sbb
mov
pop
dec
push
add
inc
out
adc
pop
out
rcr
add
pop
mov
mov
pop
les
and
jns
jp
jp
test
jno
mov
mov
clc
push
cwtl
inc
adc
imul
mov
and
sbb
int3
mov
leave
sbb
mov
aas
xchg
mov
call
test
xchg
test
and
les
jbe
sub
outsl
mov
push
or
inc
add
pop
pop
dec
fistl
mov
dec
cmp
adc
jg
fdivrl
ret
dec
xor
ss
add
or
pusha
cs
sub
add
sub
xchg
es
xchg
movsl
pop
or
pop
es
mov
sub
cmp
or
lea
fistpll
push
popf
out
pop
lcall
dec
fsubs
xchg
fdivrs
lock
test
sub
sub
jp
mov
mov
jns
add
xor
or
jp
test
mov
pop
test
pop
lret
or
sbb
ja
dec
pop
xchg
adc
push
mov
ja
pop
mov
es
aaa
pop
pushf
jno
sbb
dec
dec
pop
add
push
in
cmpsb
add
mov
in
jle
dec
adc
jmp
nop
sbb
fisttps
cmp
testl
jb
or
add
xor
mov
out
xchg
jb
pop
ret
lods
clc
push
xor
std
adc
adc
fdivrs
cmp
sbb
cmp
cmp
iret
add
sub
add
pop
or
xchg
mov
inc
fiaddl
inc
jp
test
mov
xchg
inc
scas
mov
inc
dec
inc
pop
call
bound
bound
mov
clc
cmp
adc
js
cmp
cmp
es
mov
gs
mov
addr16
mov
mov
pop
cmpl
cmp
sbb
mov
cmp
jae
cmpsl
pop
mov
addr16
cmc
xor
fcmovne
rorb
sti
or
test
add
popa
jbe
imul
mov
xor
mov
jns
loope
scas
inc
jns
lock
xor
sub
sbb
push
adc
ret
pop
or
cmp
outsl
cmc
mov
jb
adc
inc
arpl
xchg
fidivl
sti
dec
pushf
not
pop
in
adc
sbb
mov
lret
cmp
lds
decl
fdiv
xchg
or
sbb
cmp
push
sbb
imul
dec
std
sti
cmp
pop
xlat
pop
pop
cmp
mov
push
nop
xor
mov
push
inc
ja
dec
mov
adc
sti
call
push
imull
push
add
lods
stos
cmp
aam
pop
adc
xor
mov
and
adc
loop
inc
mov
mov
xlat
adc
clc
ljmp
daa
pushl
imul
adc
mov
mov
fisubs
mov
imul
js
cmpsb
mov
fidivs
sbb
sub
push
lea
or
mov
jb
rclb
mov
aas
or
jo
xor
pop
rclb
inc
mov
js
cwtl
outsl
outsb
dec
mov
fwait
inc
pop
pop
add
cmc
xchg
je
jns
pop
imul
xchg
xlat
xchg
popf
cmpsl
sbb
dec
rorb
sub
mov
ljmpw
clc
xlat
aas
out
cmpsl
jmp
aam
sbb
or
in
inc
dec
mov
mov
mov
cmp
daa
cmp
cmpsl
in
mov
sbb
xcrypt-cbc
cmpsl
adc
mov
mov
pop
dec
jmp
dec
stos
iret
push
mov
mov
push
stc
pop
sbb
cmc
dec
jmp
push
testb
pop
pop
mov
cmp
jle
dec
mov
cmp
loop
ljmp
loope
push
ret
insb
out
cld
sub
jns
daa
outsb
push
xchg
jae
dec
shlb
movsb
inc
and
cmova
fidivrs
cmpsl
sbb
cmp
mov
cltd
scas
mov
sbb
sbb
dec
inc
test
xchg
jae
mov
lock
les
stos
fldl
sbb
cmpsb
xlat
fs
mov
dec
push
arpl
mov
gs
mov
pusha
jns
xor
dec
clc
sub
xchg
mov
jmp
rcrl
dec
faddl
pop
imul
pop
jmp
lea
sbb
add
addr16
pop
sbb
lods
faddl
mov
xor
mov
cltd
xchg
jle
mov
add
jno
jmp
daa
adc
idivl
out
add
mov
mov
sbb
loope
arpl
dec
fistpl
leave
leavew
pop
fsubrl
cmp
mov
mov
mov
imul
out
adc
jne
mov
xchg
int
fsubrp
xchg
xchg
inc
js
dec
leave
cmp
movsb
rcrb
or
lds
popf
cmp
mov
mov
orb
mov
cmp
pop
daa
inc
rcr
out
mov
fpatan
pop
out
adc
and
push
sbb
sub
mov
sbb
ja
xlat
leave
mov
aas
addr16
ret
pop
imul
ljmp
cmc
dec
int3
cmpsb
mov
in
pushf
pushf
mov
out
fsts
out
stos
cmp
cmp
pop
imul
cmp
repz
mov
enter
dec
sbb
aad
movl
rcrl
imull
arpl
push
out
push
add
fsubl
mov
out
sbb
cmp
mov
int
mov
jb
cmp
jmp
sub
fs
js
jae
pop
test
addr16
fmuls
iret
ja
push
mov
sbb
ret
test
mov
add
in
js
dec
lret
in
pop
push
mov
je
nop
pop
stos
test
push
mov
dec
nop
cmp
sub
andb
into
mov
push
ss
test
loop
fsubrl
sub
xor
fcoml
jp
outsl
js
sub
mov
pushf
out
cmp
ret
fcompl
imul
rcll
push
js
daa
fsub
pushf
repnz
or
sahf
pop
pop
xchg
ljmp
cmp
rcrb
add
jbe
push
pop
mov
cmp
data16
lcall
sub
test
pop
or
xchg
dec
dec
cltd
mov
mov
add
nop
xchg
dec
or
orb
ret
inc
aas
fldenv
push
packssdw
imul
sub
xchg
out
fstpt
les
addb
in
xchg
mov
mov
loop
xchg
ljmp
ljmp
pop
or
lods
outsl
push
scas
xor
lods
xchg
mov
js
iret
cmpsl
in
xchg
inc
xchg
cmp
mov
fstpl
xchg
push
fidivl
jo
cmp
stos
inc
lods
cmc
dec
sub
xor
sub
push
shlb
sbb
inc
pushf
cmc
adcl
mov
es
adc
xor
push
and
sub
popa
sbb
imul
jmp
push
test
cmc
cli
ljmp
fistl
pop
push
jmp
inc
push
pop
mov
cmp
inc
mov
stos
ljmp
push
or
repnz
push
mov
scas
js
outsb
stos
cmp
ficomps
sub
aas
dec
mov
pop
sbb
test
ret
mull
mov
fwait
aas
jp
xchg
call
cmp
out
push
jl
xchg
cmp
aad
jns
xchg
sub
dec
inc
xor
std
sbb
rcrb
push
pop
stos
xor
stc
mov
aam
std
xchg
sbb
mov
push
push
jg
inc
and
insb
testl
inc
push
lret
sub
jo
fwait
sarb
jl
pop
mov
hlt
xor
outsl
fsubrs
push
aaa
sub
in
cmpb
cmp
rorb
pushf
sub
sbb
movl
push
es
mov
or
sbb
lods
test
ds
pop
sub
les
push
pop
ficoml
stos
mov
mov
loopne
dec
clc
dec
inc
or
mov
outsb
pop
test
mov
pop
dec
js
insl
cmp
iret
xor
inc
arpl
ficomps
jle
cmpl
cmpsl
xorl
xor
inc
xchg
imul
rcrl
cmp
aas
and
ja
repnz
or
xchg
adc
jg
cmc
mov
or
imul
lea
mull
jge
fildl
sbb
xor
pop
mov
out
subl
cmpsl
lods
gs
dec
enter
xchg
add
adc
cmc
sub
xchg
iret
negl
popl
cmp
mov
and
jg
cmc
xor
out
xor
daa
fidivs
movsb
cmp
sub
xchg
inc
xchg
mov
mov
jmp
enter
sahf
popa
into
cmpsl
cmpsl
dec
fstpl
push
adc
push
sbb
jge
mov
fimull
in
test
aad
ficomps
lock
out
shl
jbe
lahf
mov
aam
pop
stc
adc
test
iret
fildl
jg
pop
mov
mov
cmp
fidivl
jle
sahf
mov
pushf
loope
lahf
leave
pop
fwait
sub
jl
dec
mov
add
cmp
lahf
cmp
cmp
mov
xchg
scas
add
lret
ret
imul
aad
jg
ss
jno
mov
pop
js
jbe
cmp
cmp
xchg
mov
mov
cltd
movsb
addr16
daa
daa
loope
dec
dec
xchg
imul
mov
ja
sbb
mov
test
jns
repnz
insl
mov
jp
repnz
aam
mov
fidivl
ljmp
add
cmp
push
sbb
or
mov
and
addr16
pop
push
sbb
mov
ss
fisubrl
mov
ja
jecxz
dec
sarl
sub
andl
or
ja
stos
mov
inc
aam
dec
gs
sahf
or
dec
mov
popf
mov
cmpsb
mov
ljmp
test
dec
sbb
xchg
fdivrl
dec
sbb
cmpsl
dec
les
in
paddb
mov
fldcw
mov
dec
jle
pop
sahf
sbb
mov
les
gs
cltd
jmp
shlb
push
cltd
outsl
frstor
idivb
sbb
cmp
pop
mov
push
in
or
mov
popa
test
jge
pop
aam
push
js
mov
mov
dec
inc
adc
cwtl
clc
push
stos
clc
xchg
vmread
inc
ret
add
push
push
mov
ja
adc
pushf
lds
dec
push
in
sub
stc
push
add
inc
pop
xchg
xchg
cmp
xchg
xchg
outsl
xor
aaa
dec
stos
cmc
mov
lahf
sub
daa
daa
test
scas
pop
adcl
testb
mull
mov
cmpsl
cmp
xchg
enter
and
std
fadds
pop
lahf
xor
sub
int3
fdiv
leave
xlat
adc
xchg
pop
jg
pop
or
das
sbb
mov
or
sbb
push
incb
mov
and
dec
aam
insb
pop
sbb
cmp
cmp
aas
imul
fisttps
ficomps
mov
out
testl
popf
push
xchg
fnsave
sub
push
xor
sub
and
insl
mov
inc
mov
jno
or
cmp
pop
sub
and
bound
rclb
dec
cmc
xlat
cs
dec
imul
sub
in
cmp
fsubrl
xlat
xchg
mov
out
lods
pusha
xchg
pushf
test
push
les
xor
pop
jbe
shrb
testl
bts
xchg
mov
adc
pop
cwtl
xchg
push
xor
or
sub
data16
jno
iret
sub
inc
decl
mov
outsl
popf
mov
dec
mov
sarl
outsl
iret
cmpsb
lods
sub
inc
loopne
pop
xchg
push
xlat
out
or
xchg
in
mov
dec
adc
cmc
adc
inc
jle
cltd
push
in
hlt
repnz
jbe
pop
add
inc
cmpsw
addb
imul
inc
push
sbb
xchg
sub
mov
add
xor
xchg
mov
clc
add
mov
sti
jae
gs
mov
lea
sub
sbb
mov
mov
popf
mov
pop
dec
pop
aas
into
repnz
addr16
inc
lret
mov
push
push
mov
loopne
sahf
xchg
stos
cmp
mov
or
push
inc
call
inc
jns
mov
dec
pop
inc
addr16
push
cmp
adc
lret
cmp
mov
les
mov
idiv
cmp
orl
lds
outsl
cmc
fmul
add
movsb
push
cli
pushf
inc
mov
into
test
inc
pusha
arpl
cmc
push
les
pusha
add
insl
mov
or
push
daa
test
mov
out
cmpsl
sub
push
push
or
mov
int3
or
test
mov
sbb
mov
mov
fildl
mov
or
jp
mov
xor
addr16
loop
mov
lahf
xchg
pusha
mov
repnz
mov
sbb
lcall
and
shlb
add
mov
push
jno
dec
hlt
inc
xor
sub
xchg
xor
mov
pushf
imulb
pop
sub
sbb
cmp
mov
scas
mov
pop
iret
inc
stc
sar
push
cs
fcmove
out
dec
sub
ret
cli
call
inc
jnp
lods
push
arpl
jl
stos
xlat
iretw
sti
jle
adc
sbb
push
sbb
shr
add
dec
cld
iret
sub
mov
mov
call
add
push
xor
push
adc
or
inc
test
add
mov
stos
xchg
sub
cmp
imul
xor
mov
adc
sub
dec
push
and
push
jns
jno
mov
fsubl
mov
xor
add
cmc
adc
ret
adc
mov
arpl
or
or
push
adc
out
pop
push
mov
js
sub
pop
leave
dec
rorb
inc
cld
push
lret
test
cmc
mov
cmp
and
add
pop
xlat
lahf
xchg
adc
cmc
xchg
fs
mov
add
in
add
dec
adc
jns
and
stc
dec
negl
mov
fxch
out
jge
mov
addb
es
mov
push
icebp
inc
add
or
xlat
cmp
imul
call
or
xor
jae
ret
or
inc
mov
cmpsb
adc
lods
push
daa
stos
adc
int3
test
sub
cmp
out
dec
je
push
pop
sbbb
mov
inc
or
push
in
add
movsl
popf
cmpb
fsubrl
jmp
or
sbb
jmp
cmc
cmp
xchg
push
cmpsl
mov
sahf
add
cmp
mov
shlb
pop
push
xor
pop
in
nop
or
cs
or
je
xchg
cmpsl
fidivrs
ja
imul
subl
or
sub
pop
sub
out
xchg
cmp
dec
jmp
sti
push
mov
inc
subl
loopne
or
ja
test
out
hlt
mov
inc
stc
shll
es
inc
inc
push
xchg
add
and
aas
or
dec
mov
adc
jmp
mov
inc
adc
inc
mov
add
cwtl
xchg
mov
mov
cmpsb
mov
cmp
mov
add
cmc
xchg
jecxz
push
divl
inc
mov
lods
aas
out
xor
cwtl
xchg
mov
cmp
movsb
loopne
cltd
mov
xchg
add
sub
push
andb
mov
pop
xor
add
push
push
inc
in
daa
push
bswap
or
cli
xchg
mov
sbb
push
aas
mov
sbb
mov
scas
mov
inc
push
test
xchg
pop
sbb
imulb
mov
mov
rolb
lock
mov
cmc
cmp
popf
push
jl
mov
xchg
dec
div
lcall
stos
lahf
sub
mov
jmp
mov
pop
mov
div
mov
xor
mov
push
mov
pop
flds
iret
cwtl
pop
leave
stc
in
add
jle
popf
xchg
mov
and
push
dec
or
mov
stos
jo
out
cmp
mov
fisttpl
jle
dec
xchg
aad
ja
popa
loopne
add
sbb
daa
aam
aam
and
mov
and
xchg
cmp
mov
repz
out
xchg
jl
pop
fcomps
mov
push
js
adc
mov
test
scas
sti
or
das
xchg
push
and
scas
jge
jne
in
daa
push
cmp
cmpsb
pop
aas
or
adc
xor
mov
mov
ja,pt
in
adc
shll
clc
fnstcw
pop
jb
data16
imul
sub
shll
pop
xchg
cmp
ret
cmp
pop
test
daa
mov
cmp
ja
out
pop
or
fsubp
pcmpeqd
into
push
push
mov
sbb
popf
fs
loop
movsl
push
pop
mov
sub
cmp
in
cli
or
adc
and
rolb
subl
mov
outsb
sub
ja
popa
rorb
cmpsb
and
fs
ss
outsb
es
cmc
je
lock
inc
in
lret
mov
pop
pop
gs
vpmacsdql
cmp
gs
xchg
sbb
ljmp
push
inc
ret
mov
push
movsl
mov
test
mov
lds
and
sub
jle
add
popw
imul
cmc
ja
adc
scas
andb
outsl
mov
dec
mov
imul
xchg
dec
es
pop
rcll
sahf
sub
xchg
mov
faddl
es
mov
pop
cmp
jle
cmovo
mov
dec
outsl
sbb
fnstcw
add
mov
inc
das
out
mov
inc
dec
imul
enter
push
aaa
test
daa
mov
out
mov
or
xchg
mov
cmp
dec
jmp
jg
pop
repnz
sub
in
xchg
lret
das
into
cmpsb
mov
pop
data16
sahf
xlat
test
pop
data16
xor
inc
dec
test
into
out
sub
cmp
mov
cmc
mov
fnstcw
fisttpl
mov
lds
cs
push
xchg
xor
into
xchg
mov
pop
dec
out
mov
test
pop
clc
mov
xor
in
inc
and
pop
mov
add
shld
ja
xchg
enter
mov
pop
in
sbb
pop
dec
enter
pop
repz
cmp
cmc
lret
and
jmp
pop
mov
imul
jecxz
inc
stc
inc
repz
push
jge
daa
ja
pop
inc
psubusb
lahf
clc
lret
xchg
jg
xchg
dec
iret
add
cmp
push
sbb
mov
fdivs
mov
ds
pusha
mov
ja
jge
ja
jecxz
jge
mull
dec
sbb
xchg
ja
cmp
aas
insl
inc
adc
push
mov
shl
jmp
ret
inc
pop
pop
mov
loope
push
imul
add
lret
iret
js
pop
lcall
sub
loopne
pop
rcrl
out
xor
sub
fistpll
cs
mov
stc
cltd
stc
mov
flds
pop
xchg
int
in
cmp
inc
pop
fcoms
sub
mov
lcall
mov
push
push
xchg
icebp
jg
xchg
adc
add
shl
out
pop
addr16
xchg
sbb
mov
cltd
pop
mov
ret
ret
inc
mov
pop
add
xchg
xor
mov
or
orb
fldenv
or
dec
or
adcl
int
mov
lret
test
rcrl
mov
rolb
mov
cmp
pop
nop
aad
fimuls
mov
sub
xchg
testb
mov
fsubrs
sbb
cmpsl
mov
jmp
divl
and
les
sbb
mov
in
lds
lea
iret
scas
daa
out
fcmovu
cmp
xchg
push
dec
sbb
jge
mov
popf
loope
sbb
enter
lods
movsl
pop
mov
or
jae
mov
sbb
xlat
jecxz
cmp
inc
push
gs
push
mov
call
mov
cmp
fistl
idivl
inc
push
inc
fcoms
adc
ficoml
mov
negl
mov
jge
pop
bsr
mov
fistpll
push
push
and
xchg
into
mov
and
sub
arpl
cmp
cmp
and
sbb
pop
lods
cmp
jl
cmpsl
mov
cmp
iret
bound
psubd
sarb
inc
clc
inc
jge
cmpsb
adc
in
mov
push
jae
dec
xorb
mov
jns
push
cmp
bound
cltd
lret
fs
outsl
repz
divb
mov
popf
pop
clc
add
add
push
or
iret
test
bnd
iret
adc
xor
cmp
mov
orb
js
subb
jae
or
inc
fsubrs
movsb
lahf
lahf
into
cmp
jg
mov
lcall
cmc
mov
cmp
popf
mov
out
mov
cmp
pop
pop
call
out
push
pushf
cli
cmp
inc
xchg
dec
xchg
into
jae
repnz
pop
test
in
sbb
jle
inc
sub
addr16
jae
xchg
inc
pop
addl
mov
jl
addl
call
cs
jp
pop
ss
int
sbb
rcl
mov
jo
add
or
sbb
stos
and
add
daa
fcmovb
sbb
mov
jne
xlat
xchg
mov
rcl
out
andl
loop
scas
pop
xchg
imul
adc
xor
insb
push
iret
cmpsb
divl
addr16
sbb
mov
mov
mov
inc
insl
fisubl
cmp
adc
sbb
or
loope
decl
cmpsb
cmp
cmp
outsl
das
rorb
pop
or
mov
jae
test
aam
dec
leave
add
and
outsb
xchg
mov
lds
or
movsb
imul
xchg
xchg
push
arpl
xor
insl
or
sub
cmp
jae
cmp
cld
adc
push
sub
ljmp
cmc
pushf
fwait
repnz
popa
imul
cltd
sbb
js
add
mov
dec
sub
fs
dec
mov
push
testl
xchg
ss
inc
or
lcall
xchg
std
sbb
pusha
fidivrl
dec
jae
addr16
cmp
repz
pop
daa
jge
dec
out
mov
add
mov
jae
imul
jae
inc
aad
xchg
jecxz
xor
bound
dec
xchg
pop
cmp
inc
mov
int3
arpl
xchg
or
xchg
add
mov
aas
push
jp
negl
sub
inc
cmp
jns
test
imul
pop
jmp
add
bound
mov
pushf
pop
sub
mov
iret
cmp
sub
shll
jmp
subb
mull
in
mov
scas
jp
dec
dec
lea
shrl
mov
scas
mov
inc
pop
pusha
jae
jmp
dec
daa
mov
cmpsl
scas
ja
mov
mov
hlt
xchg
inc
and
cmpsl
imul
mov
js
cwtl
repnz
ja
cmp
inc
pop
jp
fadds
xchg
cmc
and
subl
adc
pop
decl
xchg
jnp
and
outsl
aad
imul
fsubr
popa
fs
mov
pop
cmpsl
leave
push
push
enter
add
push
pop
sub
fcmovbe
xchg
dec
push
adc
cmpsl
inc
jecxz
xchg
mov
push
sub
mov
jg
pusha
lods
dec
aas
fs
das
pusha
out
stc
lss
mov
sub
mov
idivl
or
jl
testl
or
hlt
icebp
sarb
das
lcall
cmc
push
sbb
dec
shl
cld
lock
cmp
je
lahf
test
xchg
mov
xchg
sub
mov
mov
imul
and
fsubrl
sahf
jnp
pop
lcall
sti
lret
pop
int3
inc
mov
mov
je
popa
iret
js
mov
pop
xchg
mov
idivb
aad
cwtl
call
arpl
sbb
or
rcll
test
dec
fs
lcall
push
jne,pn
xor
sub
push
imul
mov
or
dec
daa
push
out
lea
add
dec
jno
pop
dec
rcr
test
clc
js
test
xchg
lret
mov
pop
push
adc
inc
les
in
filds
cli
xchg
add
ljmp
and
pop
mov
mov
mov
into
or
inc
out
mov
fdivl
movb
sbb
xchg
lahf
mov
decb
dec
mov
or
sbb
mov
push
dec
stos
out
sbb
push
inc
inc
mov
mov
pop
xchg
in
push
js
xchg
sbb
movsb
push
push
and
cmp
popf
sarb
sbb
adc
xor
push
mov
xchg
sbb
xor
out
leave
xor
dec
fnsave
js
stc
xchg
in
fdivr
test
add
push
push
mov
xor
in
push
cld
repnz
inc
pop
jg
stos
push
dec
add
hlt
jle
cli
imul
sbb
fdivrl
fs
jns
aas
xchg
cmp
leave
jle
in
dec
arpl
dec
xchg
test
pusha
ret
xor
roll
pop
push
mov
or
lods
orl
sar
pop
pop
out
sbb
adc
mov
jnp
clc
sbb
mov
dec
popf
mov
cwtl
dec
cli
sub
jne
mov
ljmp
cmp
cmc
dec
cld
sbb
dec
or
mov
inc
xor
cmpsl
outsl
dec
pop
jle
repnz
bound
cmp
ja
mov
mov
icebp
pop
or
das
mov
adc
sub
push
dec
jge
jnp
popf
call
in
mov
mov
leave
add
xchg
sub
mov
xchg
dec
aad
stos
rcrb
sbbl
dec
imul
nop
mov
add
ljmp
xchg
or
cmp
dec
mov
xor
clc
xor
inc
sbb
test
pop
mov
insb
stc
cmp
int3
cmp
dec
out
push
xchg
xchg
xor
or
jle
jbe,pn
push
test
xchg
xchg
jmp
iret
outsl
lahf
mov
rorb
mov
outsl
mov
mov
jae
aam
repnz
clc
jns
adc
mov
cmp
mov
aad
mov
push
rcr
jle
cmp
pop
inc
cmpsb
call
cmc
insb
jns
cwtl
cmp
xchg
arpl
adc
cmp
cmpsb
inc
ja
jle
cli
xchg
cmp
sub
adc
daa
cs
bound
xchg
ds
sub
mov
mov
into
lds
into
dec
mov
cmpb
notb
xchg
out
push
dec
sti
rol
push
xchg
in
adc
mov
xchg
es
mov
dec
or
addps
inc
mov
sbb
cmp
pop
call
xchg
lods
mov
inc
scas
dec
xchg
sbb
repz
jns
or
ja
mov
jge
lret
sbb
xchg
xor
jne
inc
mov
mov
jb
mov
push
cs
mov
xchg
lcall
gs
cmpsl
iret
pop
js
jp
push
push
pop
adc
jnp
dec
test
mov
shrb
sbb
jle
cmp
cmpsl
fsubl
pop
cmp
mov
pop
inc
mov
sbb
shr
int3
leave
adc
jne
leave
or
mov
jl
lcall
adc
xchg
lcall
cmp
fldl
popf
pop
test
sbb
lods
xchg
dec
sahf
jmp
and
mov
shll
popf
sti
insb
cmp
mov
mov
in
in
mov
jge
orl
inc
adc
add
dec
inc
mov
adc
fnstcw
pop
xorb
jno
mov
mov
and
mov
fidivrs
pop
mov
push
sarl
lds
test
jg
mov
xor
adc
cmp
es
adc
mov
repnz
jge
notl
fiadds
out
xchg
sarb
sbb
mov
sti
or
pop
fcmovnbe
xchg
enter
fadds
sbb
xchg
xor
or
pop
test
sbb
cmpsl
mov
dec
lods
pop
ja
fstpt
mov
inc
out
and
pop
cmp
inc
jae
dec
inc
sub
pop
inc
or
adc
dec
movl
lods
ja
mov
push
sbb
or
fnstsw
sbb
sarb
jp
inc
pop
ret
sub
mov
cmp
jo
xchg
test
inc
gs
mov
sub
outsl
mov
lahf
cmp
mov
das
jmp
mov
aam
dec
int
sbb
mov
sub
dec
mov
std
mov
pop
scas
sahf
out
jns
push
shlb
xor
push
cmp
pop
cmpb
sbb
jp
push
pop
jg
add
lds
jnp
or
pop
loopne
mov
pop
lret
xor
addr16
ljmp
pop
out
test
movl
js
add
adc
into
xchg
bound
or
cwtl
xchg
dec
jle
out
mov
sbb
sbb
clc
adc
push
jno
adc
dec
mov
jl
pop
pop
jg
mov
fcoml
mov
incl
sub
out
sbb
aas
or
lods
xchg
fadds
jnp
cmc
cwtl
subl
popf
scas
dec
ficoms
rcrl
sbbl
sbb
mov
mov
mov
push
sub
sub
inc
iret
jmp
mov
adc
int
mov
out
mov
lahf
jae
loop
das
cmpsl
xor
push
das
cltd
andl
aad
leave
mov
add
testl
inc
jnp
js
mov
in
xchg
cmp
add
xchg
insb
mov
pop
or
mov
fwait
jno
jns
js
dec
cmp
pop
sbb
testl
and
lret
stos
js
cmc
sub
cli
cmpsb
stc
sub
fcmovu
andl
dec
xor
cmp
shlb
cmp
inc
out
cmp
mov
inc
jmp
arpl
push
or
aam
and
push
mov
lret
xor
outsb
pop
daa
ja
fldt
sub
cmpsb
nop
dec
call
mov
inc
in
push
add
fprem1
push
xchg
imul
cmp
cmp
xchg
cli
push
jne
cmp
stc
int3
sub
and
and
outsl
push
pop
dec
test
add
dec
cmp
xor
test
arpl
dec
mov
sbb
rorl
push
ret
fwait
mov
mov
push
popf
daa
iret
adc
mov
sub
cmp
adc
cmp
jl
or
sub
push
arpl
roll
pop
push
aas
sbb
push
lcall
jl
xor
lahf
sub
dec
cmp
fisttps
test
fyl2x
xchg
or
jns
lods
adc
or
int
cmpsl
cmpl
mov
std
mov
test
cmp
mov
mov
mov
pop
mov
mov
jne
dec
mov
orb
aad
or
inc
and
idivb
xchg
cmp
incl
add
data16
clc
dec
lock
ss
pop
test
test
pop
imul
idivl
loop
inc
sub
data16
pushf
mov
dec
push
jns
and
dec
in
test
add
outsb
inc
add
cmc
xchg
daa
mov
pushf
outsb
dec
sbb
xchg
mov
mov
push
mov
cmp
xchg
notl
out
int
jmp
jbe
std
loopne
int3
and
cmc
cmp
jmp
inc
push
or
lods
mov
fadds
xchg
out
ds
jae
dec
mov
lret
jno
test
mov
or
ljmp
or
bndldx
stos
clc
inc
pop
dec
je
mov
jl
xchg
mov
insl
je
dec
lcall
xlat
cmpb
jl
loope
or
fsubr
add
xchg
jle
imul
mov
test
xlat
fwait
mov
shlb
repnz
aaa
ljmp
lods
add
andb
jno
xchg
cmp
idiv
jg
cmp
decb
idivl
mov
in
cmc
dec
test
adc
xchg
adc
or
sbb
test
inc
cmp
xlat
ja
sbb
cmpsb
cmp
lahf
pop
lcall
jl
pushf
test
nop
push
jo
sbb
jge
add
fsubrl
and
fincstp
or
daa
lea
repz
jns
outsl
mov
lret
js
mov
push
adc
dec
js
sub
jge
test
jg
push
push
pop
fwait
xchg
cld
jo
push
cmc
pop
dec
cld
in
repz
pusha
add
pop
sbb
sbb
xlat
popa
loop
jecxz
sbbb
and
mov
aad
cmp
stc
mov
int
mov
cmp
sub
xchg
cmpsb
into
pop
cmp
neg
or
cmpsb
fldcw
ja
sbb
stc
test
testl
jmp
fildll
test
repz
fcmovnu
push
test
test
fdivs
test
into
push
fldcw
push
jl
fisttpll
pop
mov
sbb
outsb
les
jo
adc
outsl
push
cmovbe
fisttpl
dec
push
testl
xor
add
outsb
test
in
add
test
js
lods
in
mov
jo
cmp
adc
sbb
cmp
jp
jns
cmp
mov
pop
imul
inc
cli
xchg
gs
mov
mov
or
sti
pop
sub
popf
dec
clc
mov
mov
xchg
jge
rcl
inc
shl
ds
inc
push
scas
cmp
imul
jl
lahf
test
lcall
xor
fs
je
jns
ja
fs
lea
jge
daa
out
xchg
xchg
mov
add
das
lahf
add
ficoml
mov
mov
xchg
stos
incb
jge
xor
rcrb
fisttps
push
inc
push
fsub
lret
out
add
jge
orb
mov
sbb
dec
test
jle
loope
lahf
inc
cwtl
fwait
push
cmpsb
mov
and
or
stc
das
dec
imul
xlat
pop
dec
addr16
mov
cmpsl
js
out
jg
mov
mov
unpckhps
shl
pop
sbb
cmp
sub
push
popf
mov
push
mov
in
push
inc
push
in
rolb
jl
test
adc
cmp
jns
test
repz
sub
mov
and
mov
dec
out
idivl
lods
cld
mov
jg
test
out
cmp
aaa
ja
add
out
cmpsl
ja
mov
pop
out
xor
mov
dec
shlb
movsb
pop
sti
imul
inc
mov
fldcw
add
cmp
call
lcall
dec
push
xchg
jge
scas
sti
lods
push
jge
sti
stos
in
pop
add
mov
mov
mov
xchg
sbbl
jge
xchg
xor
rcrb
dec
sub
push
nop
mov
je
pop
mov
mov
fisttps
sbb
sub
pusha
or
pop
xchg
fistpl
iret
sub
cli
sbb
daa
jp
scas
std
lret
jmp
mov
adc
out
xchg
test
ret
cltd
add
jg
cmpsb
ljmp
jge
js
pop
push
subb
mov
xchg
out
cmc
cmp
cmp
jle
cmp
cmp
outsb
cmp
xor
aaa
add
fwait
cmc
jecxz
clc
sub
add
and
cmpsb
mov
std
test
fcompl
jae
and
mov
stc
mov
or
mov
into
inc
jbe
push
sbb
subl
push
sub
sbb
outsb
cli
xorl
xchg
fwait
sbbb
mov
or
or
dec
adc
sub
aad
je
stos
mov
push
mov
push
std
sbb
mov
mov
xchg
mov
test
xchg
inc
xor
cwtl
in
jecxz
mov
test
scas
iret
test
and
cltd
mov
sti
cmp
stos
dec
xor
cmp
lods
sti
dec
in
call
jl
js
popa
mov
mov
inc
pop
cli
sbbb
sti
xor
sub
jmp
cmp
stos
shlb
inc
cmp
sarb
pop
stos
negl
lahf
mov
inc
sub
mov
sub
scas
mov
neg
jb
popf
mov
test
gs
pushf
mov
and
in
mov
xchg
in
jns
push
out
cli
add
pop
sarb
mov
cmc
mov
test
mov
jbe
inc
js
jnp
xchg
or
test
clc
mov
jb
mov
add
scas
mov
lahf
cmp
mov
dec
repz
lock
int3
xchg
pop
fcomps
test
mov
cmp
fdivs
jnp
dec
jl
adc
or
std
pusha
push
nop
xor
sbb
push
test
pcmpeqd
cmc
popa
loop
push
cmp
lds
andb
mov
dec
sub
fadd
ja
sbb
popf
jg
push
lods
cs
mov
pop
dec
pop
add
mov
pop
xchg
test
nop
xchg
bound
loope
rcrl
and
imul
adc
cmp
movzbl
mov
jp
cmp
outsb
mov
ss
mov
js
ja
inc
xor
adc
or
cmp
mov
ja
mull
test
mov
cmp
divl
sti
mov
mov
or
sti
stc
test
inc
fucomi
in
dec
ficoms
lods
sbb
xor
in
dec
sbb
inc
pop
test
test
out
aaa
mov
jge
icebp
push
out
fiadds
repz
pop
insb
test
pop
imul
lock
pushf
xchg
sbb
jns
inc
loopne
xchg
jb
pop
fldl
cs
fsubp
data16
cmp
aas
sub
adc
sbb
ret
lock
cmc
ret
fwait
inc
jge
and
jo
ja
sbb
cmpsb
cmc
lcall
lret
fsubr
sarl
es
sbb
cmp
xchg
out
aam
test
xlat
sbb
aas
loopne
enter
dec
pop
popa
push
jge
out
out
enter
lahf
or
cltd
cmp
sub
xchg
sub
and
decl
cltd
cwtl
imulb
cltd
pusha
lcall
mov
xor
mov
dec
popf
fldl
orb
out
lds
push
mov
xor
cs
mov
sub
jge
push
xor
and
out
mov
mov
mov
or
jne
jns
repz
and
xorb
adc
pusha
stos
lods
pop
and
adc
divl
jmp
sahf
or
fiadds
inc
mov
andl
mov
jl
loopne
ja
jmp
xchg
fdivrs
mov
clc
shr
sub
cmp
movsb
mov
arpl
call
ja
sbb
in
ljmp
pop
pushf
mov
aaa
xor
stos
cmp
or
sub
add
sahf
push
cs
fnsave
fwait
xchg
push
jae
jbe
jnp
addr16
sub
inc
mov
test
push
out
push
mov
and
addr16
dec
inc
subb
pop
test
es
xchg
inc
mov
pop
pushf
inc
lds
xchg
pop
inc
mov
lock
fimuls
cmpsl
xor
cmp
push
ja
pop
cmpb
stos
ljmp
adc
test
movsl
sbb
leave
push
mov
inc
shll
mov
arpl
push
into
mov
fdivrl
aas
mov
push
adc
shrb
dec
and
scas
cmp
adc
test
imul
inc
xchg
sub
xchg
fidivrs
fnstcw
call
test
into
mov
test
dec
dec
je
sbb
shlb
fdivrs
rcrl
test
cld
jg
or
jnp
cli
mov
jg
cmpsl
std
xchg
dec
pop
imul
ss
inc
outsl
mov
xor
fsubrs
cmp
dec
adc
cmp
insb
clc
ljmp
jl
mov
das
adc
jb
xchg
mov
pop
imul
mov
push
inc
push
cmpl
inc
out
jle
dec
test
or
mov
mov
mov
xor
sub
lcall
or
pop
lret
idivl
repz
mov
pop
xchg
and
or
push
sbb
mov
ss
js
jnp
jge
mov
jp
mov
mov
in
fisttpl
js
dec
cmp
push
jp
icebp
ss
cmp
inc
jns
mov
lret
ror
iret
jae
pop
jns
mov
pop
or
inc
ss
mov
and
adc
sbb
dec
fs
adc
sbb
jns
mov
inc
mov
mov
cmp
cli
or
cmp
cmp
xchg
data16
or
ja
adc
popf
jmp
add
mov
notl
sub
out
mov
adc
and
mov
sub
mov
inc
push
mov
aad
jo
call
lcall
mov
imul
dec
cltd
and
sbb
test
js
mov
add
daa
jns
test
mov
mov
push
ss
fucomi
sbb
xchg
test
ret
cs
xchg
cmpsl
push
adc
or
cmp
sub
pop
aam
mov
inc
push
jbe
sbb
pop
cli
cmpsb
lods
jle
jge
xor
inc
mov
push
js
icebp
push
test
into
sahf
outsl
jne
jle
test
int
fst
fisubs
in
popa
adc
adc
sub
cmp
sbb
aam
mov
sbb
mov
dec
loope
adc
mov
gs
iret
sub
xchg
cmc
push
fsubp
mov
fwait
mov
cmp
push
addl
mov
aad
ret
outsl
cmp
cwtl
mov
pop
or
pop
bound
dec
mov
and
push
ficoml
inc
mov
sbb
je
lea
scas
cmpsb
add
sub
je
mov
push
mov
movsb
sahf
jb
cmp
adc
mov
sbb
pop
jp
imul
aad
ret
pop
fsubrs
ljmp
jnp
mov
push
sub
push
imul
nop
out
inc
sub
test
mov
adc
call
jmp
iret
mov
xchg
or
adcl
sti
lods
fbstp
jg
dec
ljmp
add
push
call
nop
ficoms
cmp
mov
mov
lods
adc
jns
in
aaa
mov
test
jp
in
inc
or
add
arpl
pop
pop
pop
cmc
and
jnp
or
lea
sub
mov
and
aas
out
pop
cmc
popf
xchg
xor
dec
pop
jl
sbb
lret
cmp
sbb
jp
cwtl
pop
or
negb
jmp
add
sbb
push
pop
dec
add
cmp
loop
popf
popf
xchg
sbb
push
loopne
scas
mov
inc
movsb
push
test
iret
push
pop
lcall
mov
adc
je
popa
inc
je
sbb
xchg
mov
xor
or
inc
xchg
mov
inc
jp
xchg
cmpsl
xchg
movsb
xchg
mov
mov
andl
mov
cmc
cmp
or
in
lock
aam
jmp
mov
cmp
insl
cmp
mov
xchg
out
sbb
sub
idivl
mov
sbb
sbb
or
sbb
cmp
or
mov
jg
dec
std
dec
jge
mov
fadds
and
sub
jecxz
sbb
addr16
mov
sub
shll
insl
inc
jbe
sub
fistl
dec
or
fidivrs
jp
cmp
cmc
movsb
xor
cmpb
sub
sub
mov
mov
add
jge
cmp
mov
mov
or
or
fnstsw
aas
jae
popa
popf
or
or
lea
mov
les
xor
jae
test
mov
mov
loope
sbb
jo
xchg
lea
xchg
and
xchg
fdivp
lret
add
adc
fstps
pop
jp
push
adc
pop
xor
mov
cli
dec
nop
dec
inc
popf
xchg
bound
mov
mov
stos
outsl
gs
xor
cltd
sbb
rcll
je
xchg
shrb
stos
mov
cmpsl
rolb
cs
ljmp
jnp
lods
or
in
sub
imul
test
js
test
notb
xchg
pop
sti
mov
mov
mov
negb
cmpsl
insb
addr16
cmp
popa
pop
mov
mul
daa
push
dec
popa
adc
hlt
cwtl
daa
jle
repz
call
daa
out
mov
cmpsb
mov
outsl
rclb
js
adc
cmpsl
pop
insb
jno
cmp
imul
sub
lahf
leave
neg
fidivl
adc
jno
xlat
aas
adc
cmpl
outsl
mov
adc
inc
dec
sub
xchg
xchg
daa
lea
mov
or
inc
add
shll
into
dec
test
das
jl
xchg
add
mov
and
cmp
xor
xor
cmp
push
inc
loop
iret
hlt
out
iret
ja
xor
sbb
cltd
and
sbb
or
stc
addr16
std
out
pusha
mov
mov
test
cmp
dec
or
repnz
dec
out
aad
cld
fcomps
mov
enter
mov
cmp
lds
pop
dec
pop
or
jp,pn
sbb
inc
or
mov
cwtl
dec
das
mov
cmp
aam
xchg
imul
out
dec
scas
inc
lock
mull
js
jne
je
jp
adc
jle
dec
cli
scas
adc
mov
stc
sti
sub
iret
mov
mov
ljmp
fisttpll
jg
daa
lahf
cld
div
pop
ljmp
lahf
or
inc
push
mov
scas
leave
mov
aam
movsl
cmp
mov
push
mulb
pushf
int3
jmp
gs
and
cmp
mov
mov
xor
pop
out
or
sub
es
stos
pop
cmp
imul
jmp
insb
sub
inc
lret
fsubrs
fs
gs
popa
enter
xlat
mov
movsl
mov
sahf
in
imul
sub
addr16
adc
mov
pushf
popa
xor
int3
dec
push
push
dec
enter
clc
ljmp
push
out
ljmp
cmp
repnz
mov
jle
or
dec
mov
inc
inc
sbb
mov
add
xchg
mov
in
sbb
jae
mov
or
xor
scas
xchg
mov
repnz
sbb
push
lret
mov
and
imull
fimull
pop
iret
gs
pop
mov
add
call
test
out
jo
lods
xchg
dec
pop
jmp
fcompl
shlb
push
push
andb
jl
push
ds
and
lds
cmp
loopne
dec
jns
fwait
insl
cs
iret
pop
popa
sub
mov
xor
or
test
fidivrs
lret
cmp
popa
inc
mov
sarl
sub
cmp
imul
jle
pop
mov
xchg
pop
pop
mov
mov
pop
add
cwtl
outsl
fisubs
jg
cmp
mulb
out
sub
push
pop
xchg
push
rolb
and
cmp
test
nop
pop
adcl
dec
fcmovu
mov
repz
xchg
int
mov
mov
aas
mov
sbb
call
cmpsl
adc
sub
adc
je
push
out
sub
sti
lods
icebp
mov
mov
and
arpl
pop
ja
gs
lock
sti
rcr
iret
out
fsubr
lgs
cs
repz
jecxz
push
es
inc
inc
cmp
div
mov
test
test
outsl
mov
orb
push
xchg
jb
mull
cwtl
aas
mov
sbb
jle
repnz
leave
aaa
xchg
addr16
mov
adc
add
mov
fs
cmpsl
imul
jmp
xchg
mov
cmp
fcompl
pop
stos
pop
cmc
fidivs
sbb
mov
lods
sbb
or
ds
xor
repz
or
xlat
mov
cmp
xchg
lret
mov
sbb
cmpsl
pop
push
xchg
jmp
cmc
imul
cmpsb
orb
iret
loop
mov
out
adc
clc
or
xchg
pop
mov
out
jmp
jl
pusha
dec
fstpt
xchg
lahf
jle
ljmp
cmp
fbld
cwtl
mull
es
xlat
mov
jle
mov
adc
test
sti
lcall
sub
sub
mov
adc
in
mov
aam
pop
jg
movb
mov
ljmp
xchg
jmp
and
mov
fwait
xchg
jmp
inc
mov
add
jecxz
and
xchg
xor
mov
pop
mov
dec
push
faddp
ss
or
sbb
mov
pusha
rcll
dec
ffreep
xor
mov
or
fiaddl
out
les
sub
jno
hlt
lea
jmp
fmull
jno
sbb
mov
or
mov
test
loopne
add
mov
sbb
cmp
xor
xchg
pop
fwait
jo
push
inc
pop
xor
mov
and
inc
loopne
mov
sbb
or
and
dec
test
lods
dec
mull
data16
pop
fstpt
mov
push
ret
sbb
neg
or
jl
or
sbb
xlat
xchg
mov
xchg
movntq
dec
dec
movsl
push
cmpsb
xlat
in
inc
clc
sahf
xchg
sub
popf
mov
addb
mov
pushf
pop
jle
cmpsb
jg
pop
dec
cmpsl
add
test
loopne
lahf
call
scas
orl
jnp
cmp
sbb
stos
test
test
cmpsb
cmpsb
std
mov
divl
movsb
xchg
xorb
mov
mov
jg
pop
repnz
xchg
dec
sbb
sub
and
daa
add
pop
lcall
lcall
lahf
mov
inc
adc
lahf
mov
jmp
sbbb
int3
sbb
xlat
add
sbb
imul
mov
jecxz
adc
sti
mov
stos
addr16
add
inc
sub
add
movsb
pop
pop
lea
pop
dec
and
rorb
iret
push
lcall
sti
jecxz
jge
xchg
sar
in
dec
xor
push
jecxz
xchg
fldl
mov
les
push
adc
sbb
sbb
or
sub
stos
or
test
jnp
jge
lret
jae
and
pop
ret
lods
push
insl
imul
xchg
enter
xchg
dec
sti
call
test
popf
push
and
xchg
adc
stos
xor
dec
ficompl
mov
cmp
lea
push
movsl
dec
js
js
cwtl
stc
test
mov
jno
add
xor
inc
lock
in
lret
out
cltd
cs
jnp
adc
adc
adc
sti
mov
jg
aad
cmpsb
lret
xlat
sub
imulb
inc
outsb
stos
roll
or
sbb
nop
pop
push
jp
testl
je
popa
hlt
jo
js
mov
ss
mov
jbe
sub
push
sbb
clc
push
pop
dec
int
adc
sbb
fidivrl
imul
sbb
out
lods
jle
or
dec
push
rolb
out
ror
insl
cmp
stc
int3
cmp
jno
shl
dec
jo
into
xor
test
mov
std
add
add
dec
scas
or
cltd
jmp
out
mov
inc
ror
ljmp
push
mov
int
jmp
ffree
dec
jle
shl
syscall
fldl
aam
lock
fildl
lahf
ss
popf
cltd
pop
mov
lcall
mov
jg
hlt
aad
mulps
push
dec
ja
mov
in
lods
cmp
addr16
in
aas
mov
sti
jno
mov
test
enter
popa
js
xor
xchg
xlat
into
dec
bound
ret
or
out
add
adc
daa
stc
mov
loope
mov
insb
mov
pop
aad
test
cmc
jge
xor
dec
inc
ficompl
loope
adc
repz
pop
rolb
mov
lods
cmpsb
cmp
ss
int3
sbb
call
aas
sub
nop
push
arpl
daa
jo
lds
inc
add
sbb
outsl
inc
push
shlb
sbb
push
push
xchg
or
xchg
fs
sbb
push
cld
xchg
idiv
pop
mov
iret
loope
ret
mov
aaa
iret
fdivrp
dec
popf
cmp
loop
pop
bound
sub
jp
sbb
cld
xchg
jmp
shr
push
mov
pusha
lret
pop
aad
xchg
or
mov
iret
fstpt
push
in
sub
rclb
push
sahf
sbb
inc
and
dec
jecxz
inc
bound
daa
mov
dec
outsl
pop
xchg
scas
mov
sbb
ja
orl
mov
js
lods
inc
cmpsb
mov
scas
out
fdivr
push
leave
cmp
mov
fmuls
pop
js
inc
loop
add
clc
mov
stos
out
push
or
bnd
roll
stos
dec
or
xor
out
lahf
dec
jno
rcl
mov
movl
insl
xchg
mov
or
fwait
icebp
inc
test
mov
insl
test
insb
jmp
movb
mov
sbb
push
pop
mov
in
test
inc
mov
inc
mov
in
test
mov
les
pop
cmc
cwtl
or
les
cmp
into
cmc
stos
xchg
push
cwtl
les
add
jnp
jle
js
jp
mov
dec
xchg
cmpsb
xchg
cmp
xchg
insl
cmp
test
lret
stc
jns
jns
mov
xchg
fwait
or
clc
cmp
fwait
jne
sbb
fiaddl
jnp
mov
sbbb
fwait
push
mov
iret
pop
add
push
mov
jmp
push
push
in
mov
mov
jo
inc
mov
test
lods
push
cmc
js
inc
mov
and
popf
imul
dec
test
push
lcall
cmp
inc
xchg
mov
int
lret
adc
xchg
cmpsl
testl
mov
insl
incl
mov
test
inc
es
das
pushf
and
jle
test
cmp
pop
jns
int
push
fwait
cmpl
mov
mov
and
out
test
push
imul
sti
mov
out
cmp
jo
pop
mov
leave
mov
sbb
adc
and
mov
test
xor
nop
leave
mov
cmpsb
cs
lock
fsubl
std
cli
mov
fimull
test
jp,pn
scas
add
stos
jnp
mov
and
leave
inc
adc
cmp
pop
gs
test
cmpsb
mov
pmaxub
aad
fisubl
je
sbb
mov
xchg
stc
jns
ja
pop
mov
int
sbb
jae
rclb
ja
negb
or
loope
aam
sub
add
mov
xchg
pop
xchg
fsincos
inc
cmp
out
pusha
fidivrs
push
adc
sbb
cmpsl
inc
jp
sub
and
inc
gs
loope
xchg
jno
rol
aad
mov
hlt
push
mov
and
cmpsb
sbb
or
pop
lahf
aas
movl
mov
into
gs
je
and
or
sub
dec
xchg
pop
fiaddl
ss
mov
or
mov
test
mov
mov
jnp
cli
mov
cli
inc
test
subb
sbb
xchg
push
cmp
cmp
sarb
xchg
and
cmp
push
adcl
cs
out
or
ret
push
out
cmp
inc
inc
mov
cmp
xor
and
js
adc
sub
ja
cli
inc
or
je,pt
adc
imull
dec
add
cmpsb
mov
cs
js
lds
movl
cwtl
mov
rolb
dec
add
jmp
out
pop
pop
rcrb
test
test
outsb
cltd
inc
mov
pop
push
cli
fiaddl
lret
push
dec
sub
jne
inc
adc
mov
sbb
cmc
lret
mov
out
rorl
or
inc
out
dec
dec
fdivrl
cltd
jle
cmp
or
cmp
mov
test
add
mov
int
sbb
sbb
mov
push
cmc
bound
mov
repz
ret
sar
popa
outsl
mov
setns
sbb
or
fwait
scas
sbb
fcmovu
dec
jl
icebp
pop
cmp
dec
pop
insl
mov
mov
scas
inc
cmp
xor
jle
and
xlat
adc
fistpll
adc
adc
pop
int3
aad
addb
ja
es
sub
fcoml
jns
fincstp
jg
popf
cmpsl
xlat
pop
add
jp
jo
and
mov
sar
fcmovnbe
cs
or
scas
dec
pop
imul
jno
outsb
mov
cmpsb
sub
jp
mov
push
fs
data16
xlat
jle
in
lods
sub
scas
gs
mov
xchg
sub
add
adc
imul
cmc
jp
pop
lcall
sub
outsl
adc
sbb
xchg
int3
cmc
sub
and
inc
test
push
data16
cld
mov
add
push
sbb
in
or
scas
fiadds
xor
pop
jnp
lds
lgs
xor
fstpt
outsl
jp
ds
stos
jbe
pop
cmp
pop
and
nop
cli
push
mov
sbb
and
mov
xchg
push
movsl
rdtsc
sbb
js
stc
out
cmp
push
inc
pop
in
mov
cld
pop
jl
clc
mov
sub
or
push
pop
and
xchg
sub
test
xchg
pusha
xchg
shrl
fwait
dec
jg
adc
movsb
rcrl
cmp
xor
repnz
mov
jecxz
cmp
incl
iret
sub
js
addr16
popa
lds
pop
fisubs
jle
push
es
xor
fprem
or
lea
pop
pop
inc
mov
pop
inc
idivl
or
and
test
sub
je
and
inc
daa
cmc
push
sbb
mov
inc
sbb
inc
in
subb
inc
sub
cmpl
mov
jmp
repz
cwtl
sbb
test
in
xlat
mov
test
lea
in
daa
jg
push
xchg
mov
cwtl
addl
push
mov
push
pop
mov
or
out
and
mov
xor
mov
sar
and
dec
lods
dec
orb
dec
in
popf
lods
xlat
inc
icebp
dec
rol
inc
cmp
xchg
cmp
sub
outsb
lret
js
jge
dec
xor
hlt
push
aaa
flds
cmc
cwtl
mov
push
daa
mov
xchg
pop
and
int3
stos
add
adc
loopne
adc
jb
sub
roll
sbbb
repnz
loopne
out
pop
add
jmp
inc
mov
int
idivb
subb
out
jnp
push
mov
imul
fwait
lods
arpl
push
sub
jge
paddsb
push
sbb
mov
cmp
stos
mov
dec
sub
pop
cmp
scas
iret
mov
loope
stc
test
movsb
pop
inc
jo
cmc
daa
mov
adc
xchg
jmp
xchg
xchg
adc
or
lcall
test
fldl
jmp
xchg
rol
mov
and
mov
js
mov
mov
divb
jae
sbb
gs
loope
dec
push
or
mov
fsincos
popf
ja
insb
test
mov
adcb
xor
cmp
mov
test
and
insl
popf
inc
cmp
sub
sbb
mov
dec
cmpsl
mov
jg
movsb
xor
inc
mov
and
leave
lock
aas
rol
inc
mov
jmp
repnz
les
lret
loopne
xchg
or
cmp
pop
jmp
test
sub
and
data16
jns
in
or
push
xchg
xchg
pop
out
mov
inc
xor
enter
mov
test
and
and
dec
xchg
outsl
mov
lods
mov
scas
push
movsb
nop
sbb
xor
adc
xchg
js
fsubr
js
ds
sub
lcall
fcompl
stc
mov
cli
push
pop
daa
push
jns
in
adc
push
mov
push
pop
insl
movsb
loop
repz
sbb
add
in
xor
inc
sbb
adcl
lods
jle
or
stos
jg
xchg
fdivr
daa
inc
andl
fildl
or
jle
outsl
ds
sbb
test
cmp
cmpsb
inc
jno
xchg
stos
mov
rol
cwtl
pop
stc
or
xchg
ret
pop
inc
incb
aas
mov
je
sbbl
jg
xchg
xchg
xchg
jb
jmp
rcl
mov
pop
in
loopne
out
mov
shlb
popa
scas
mov
add
out
movsb
pop
test
mov
add
sbb
testl
shr
leave
out
push
cmc
fildl
sbb
and
mov
add
push
in
mov
leave
xchg
jg
adc
cmp
xor
hlt
jnp
inc
pop
sti
daa
push
incb
stc
jno
cmp
shrb
fidivl
aam
dec
out
jno
jnp
pop
repz
pop
cwtl
insb
cltd
ret
and
fisubrs
cmp
xor
mov
adc
dec
cmp
mov
xchg
clc
in
arpl
es
dec
add
enter
inc
mov
cmp
sahf
sbb
jp
aas
push
jg
mov
outsl
add
rcll
ftst
imul
mov
out
and
sub
sbb
ss
mov
test
jno
mov
jge
dec
ljmp
sub
repz
bound
sbb
pop
cmp
cli
dec
arpl
cmp
rep
jmp
fdivl
cmc
and
in
xchg
jl
insb
sti
scas
jg
fdivrl
push
test
scas
adc
addb
hlt
lret
inc
stos
popf
xor
dec
inc
ret
fimull
hlt
sub
out
cmp
sub
xor
out
int3
fildl
loope
sbbl
jo
lret
cmp
je
inc
in
sub
sbb
dec
idivl
sti
flds
inc
insb
js
cmp
mov
or
add
push
xchg
test
bound
lods
xchg
jp
xchg
mov
outsl
fstpt
dec
push
adc
pop
scas
movsb
cmc
inc
pop
push
push
ja
test
mov
and
shr
mov
mov
lcall
je
push
jne
sbb
xchg
loope
iret
or
mov
cmp
cmpsl
xchg
leave
lcall
shrb
mov
mov
out
fs
mov
icebp
out
mov
enter
popf
movsb
mov
push
ja
icebp
sub
and
xchg
sbb
dec
outsb
ja
mov
shlb
data16
cmp
push
daa
mov
inc
jecxz,pt
aaa
sbb
mov
fdivr
outsl
pop
dec
mov
ficomps
scas
lock
into
adcl
sarl
inc
jnp
cmpsl
pand
aas
loop
sub
sbb
pusha
cmc
pop
add
mov
aad
popf
shlb
xchg
or
sub
cltd
lret
mov
push
ja
mov
mov
ljmp
sarb
addb
and
add
fiaddl
cmp
pop
js
pushf
sub
add
jmp
ret
mov
or
loopne
mov
or
mov
gs
dec
mov
icebp
stos
and
daa
mov
mov
ret
loope
sbb
cmp
inc
paddusb
les
testl
loop
cmp
loopne
mov
test
jmp
orl
adc
inc
mov
mov
fimuls
mov
mov
lret
nop
js
jecxz
jbe
mov
cmp
xorb
js
mov
pop
mov
cmp
fiadds
cmc
push
loopne
dec
cmp
mov
jno
mov
cmp
inc
pop
xchg
jl
mov
jg
dec
adc
mov
cmc
fcompl
mov
sub
test
fiaddl
cmp
stos
jbe
addb
loopne
int
dec
cmp
add
orl
dec
out
js
mov
pop
mov
clc
cmp
jmp
jg
pop
mov
inc
pop
mov
pushf
xor
mov
faddl
mov
movsb
popa
xchg
mov
iret
mov
sub
or
mov
pushl
test
dec
js
mov
fdivl
insl
or
scas
mov
and
arpl
sub
lcall
addl
add
lahf
cli
inc
or
inc
leave
cwtl
mov
insb
sbb
ret
jp
clc
and
pop
mov
xlat
gs
cmp
xchg
jge
push
mov
gs
daa
xchg
sarl
stos
sbb
and
push
cmp
lcall
push
mov
stos
popa
imull
xchg
fs
cmp
test
mov
cmp
sbb
stc
push
add
mov
cld
stos
sub
mov
ss
pop
push
fcompl
ja
pushf
push
addl
repz
sub
add
push
jl
jecxz
xchg
add
jnp
push
ss
mov
insb
cmp
or
inc
imul
in
out
jno
add
sti
push
inc
movsb
add
xchg
data16
or
push
stc
test
xchg
pushf
outsb
mov
push
dec
aad
xchg
jae
cltd
sti
and
movq
lea
aaa
ljmp
push
cmp
insb
ja
dec
cmpsb
jmp
push
js
imull
sbb
nop
insl
inc
in
ret
ror
push
les
into
push
rorb
jg
ror
push
pop
sbb
inc
test
add
dec
shlb
std
sbb
inc
cmpsl
fwait
jl
mov
xchg
dec
psadbw
dec
mov
sub
jns
dec
dec
xchg
enter
neg
xor
cmp
cld
adc
cmp
popl
sub
incb
in
jge
ja
imul
push
xchg
mov
sub
js
cltd
cmp
fcmovb
push
leave
cmp
xor
jge
pop
cmp
cwtl
repnz
cld
lahf
xor
roll
addl
test
lods
mov
ljmp
push
clc
lods
cmpsl
add
stc
ljmp
in
ja
pop
dec
cmp
xchg
aas
bswap
fwait
mov
push
adc
xchg
out
rcr
les
inc
cmc
push
xchg
mov
jecxz
jmp
mov
jl
push
xchg
mov
or
mov
sbb
jnp
push
dec
mov
mov
inc
pop
cmp
dec
outsl
js
mov
or
imul
fildll
or
dec
test
push
out
in
int3
ss
sti
in
cmp
cwtl
jge
lcall
adc
cli
ja
add
popl
pop
roll
scas
mov
add
xlat
rcll
pop
cmc
testb
xlat
adc
cmpl
lods
push
xchg
mov
mov
dec
in
iret
adc
pop
movb
dec
pusha
mov
push
mov
jns
test
xor
out
stos
jp
cs
test
and
or
les
sbb
mov
ret
insb
sti
add
mov
dec
cmc
fnstenv
add
cmp
mov
in
arpl
cmp
sti
out
movsb
pop
xchg
enter
int3
mov
and
insl
daa
mov
cmp
stos
je
loope
xchg
or
or
xchg
mov
stos
fisttpl
or
xchg
in
ljmp
xor
mov
xor
clc
daa
inc
fistpll
adc
jge
shrb
dec
mov
push
jnp
jecxz,pn
js
lock
push
repz
and
repnz
xchg
jbe
and
leave
icebp
adc
adc
lret
lods
xor
sbb
push
or
dec
pop
cwtl
mov
scas
fiadds
xlat
or
inc
call
cmp
movsl
or
cmc
fwait
int3
sbb
ja
sbb
ret
outsb
lahf
cmc
scas
pop
ljmp
push
xchg
pop
lods
mov
dec
dec
sti
call
shlb
sbb
sbb
jns
jne
orb
add
push
cli
inc
mov
inc
xchg
aam
sub
ja
mov
xchg
out
inc
mov
xlat
inc
js
fmuls
jecxz
push
mov
lret
sbb
or
jp
mov
dec
adc
adc
xchg
mov
lds
jcxz
sbb
int3
mov
fwait
xchg
ja
mov
stc
pop
inc
or
mov
loopne
adc
dec
inc
fs
ja
sti
jl
mov
mov
mov
nop
aam
cli
sbb
rcrl
stc
mov
ret
push
sahf
pop
test
jne
cltd
out
pop
inc
xchg
inc
notb
or
popf
mov
into
test
mov
jmp
mov
insb
mov
fs
lea
push
pop
aas
adc
pop
mov
push
int3
inc
adc
les
je
push
sub
xor
cmpsb
cmpsb
cmc
cmpsl
push
cmpsb
daa
inc
loope
lea
das
cmc
sbb
lods
stos
js
lahf
test
lods
xchg
jns
sbb
mov
insl
aam
mov
or
cmpsl
stc
mov
loope
and
into
xor
or
clc
mov
dec
mov
pop
mov
add
cmp
dec
mov
inc
xchg
jo
ret
mov
xchg
xchg
es
test
cmp
movl
sbb
pop
jbe
in
sbb
popa
and
setnp
mov
mov
cs
mov
fdiv
add
int
push
add
pop
xor
loopne
xchg
push
or
sbb
push
cmp
inc
mov
xchg
aam
ja
test
inc
xchg
cmp
push
fs
inc
or
jne
pop
test
inc
mov
add
fs
xlat
xchg
jge
sbb
push
ror
dec
nop
lahf
add
xor
sub
scas
out
test
scas
sahf
test
jmp
jnp
mov
rcrl
and
xlat
lahf
pushf
pop
dec
int3
mov
jp
sub
fwait
jae
fcomps
icebp
int3
dec
hlt
pusha
add
call
sahf
mov
mov
dec
and
dec
xor
add
into
sub
inc
sub
in
push
adc
cmc
push
jmp
les
push
cltd
mov
mov
inc
test
push
xchg
mov
mov
push
in
jge
xor
adc
cld
aas
div
sarb
xlat
push
out
fidivl
jg
xchg
mov
cwtl
aaa
cmp
inc
cmp
adc
mov
mov
add
in
ret
popa
sbb
jb
jns
sub
mov
add
out
cmp
dec
or
pop
jo
cmp
inc
dec
cmc
fs
aad
mov
mov
or
sahf
push
jns
pop
popa
arpl
dec
xor
cli
xchg
lea
std
rcrb
std
fdivr
mov
xor
inc
ds
cmp
out
pop
jle
shrl
inc
mov
lock
or
lret
andb
or
dec
jne
cs
aas
fcoml
sti
fadds
cwtl
mov
aad
jg
xlat
enter
lods
leave
stos
mov
xor
scas
dec
mov
push
lock
inc
das
cmp
mov
mov
fcompl
push
idivl
mov
xlat
xor
mov
fisubl
nop
push
xor
push
es
std
jle
outsl
xchg
daa
pop
ret
sbb
pop
push
xchg
xchg
mov
xchg
fcmovne
dec
into
leave
decw
sbb
insb
rorb
add
rorl
loope
fcmovnb
setg
dec
inc
sbb
cli
xorb
mov
push
ds
mov
cmc
jge
aad
mov
daa
pop
cmpsl
xor
mov
fistl
inc
in
xchg
ss
jmp
adc
mov
sti
adc
mov
lock
inc
and
sub
js
mov
inc
test
mov
dec
xchg
inc
lea
pop
pushf
mov
adc
jle
stos
out
pop
dec
daa
fcmovb
aam
pushf
testb
sub
inc
jge
leave
mov
in
xor
mov
cltd
es
pop
popa
sti
insl
out
fwait
pop
mov
sub
mov
add
push
cmp
pop
pop
lret
inc
sbb
xchg
sbb
mov
mov
push
inc
mov
imul
cmpb
mov
sub
pop
sub
mov
shlb
inc
popa
push
fdivr
jecxz
dec
insl
dec
leave
stc
cmp
dec
in
cmp
test
push
mov
icebp
or
dec
xchg
cld
ret
ds
push
inc
rorb
cmp
out
dec
mov
ljmp
out
mov
dec
xor
ds
xorb
push
clc
sub
xor
sub
es
mov
push
mov
mov
mov
stc
sbb
xchg
imul
lret
mov
xor
test
rolb
mov
add
ljmp
mov
or
gs
pop
or
xchg
mov
xchg
lea
add
mov
test
cmp
int3
out
push
fstpl
gs
movsl
mov
in
add
and
fstps
xor
std
xchg
cmp
in
pop
enter
dec
mov
cmp
pushf
aam
test
and
loope
fldenv
es
adc
inc
xchg
mov
push
jmp
jg
lea
jns
xor
cld
dec
mov
pop
adc
sbb
test
xchg
dec
popa
xchg
stc
dec
test
int3
mov
adc
insl
add
js
int3
pop
stos
pop
movsl
dec
xor
sti
xchg
sub
or
and
push
stc
lcall
js
cmpsl
dec
scas
daa
out
or
push
xchg
pop
sub
lcall
pop
lds
adc
bound
sbbb
pushf
popa
pushf
mov
cmp
and
jmp
shrb
inc
adc
arpl
push
cmpb
or
push
das
fidivrs
scas
push
cs
repz
pop
xor
dec
jg
loop
subb
or
jecxz
mov
cmp
jns
cmp
or
fcoms
sub
stos
je
in
pop
icebp
mov
push
xor
dec
inc
cmp
movb
mov
lock
cmc
mov
cmp
out
gs
cmc
push
lds
bound
cli
lods
scas
dec
mov
pop
jp
enter
fwait
nop
inc
sub
daa
dec
out
les
popf
push
cmp
pop
shr
adc
inc
cmp
cmpsl
cmp
and
addr16
lcall
ds
lret
add
pop
add
adc
test
pop
xor
dec
push
rcrl
mov
jecxz
movsb
xchg
jnp
dec
cmc
pop
cmp
ljmp
xlat
add
xor
inc
dec
pop
or
xor
bound
movsb
push
dec
popa
repnz
inc
loop
test
insb
loopne
or
std
aas
cmp
leave
sbb
insl
cli
or
fdivrl
xorl
arpl
cli
les
dec
clc
inc
adc
and
addr16
imul
je
call
in
or
or
fiaddl
xchg
push
push
push
cli
mov
xor
push
dec
lds
and
int3
mov
jmp
xchg
popf
dec
xchg
pushl
or
xchg
inc
stc
mov
mov
mov
fwait
es
inc
into
xchg
xchg
test
pusha
int3
adc
mov
popa
pop
add
mov
ljmp
ret
imul
or
aas
add
push
daa
pusha
repnz
mov
repz
ret
loopne
loopne
cmpsb
cld
xchg
xlat
push
imul
push
pop
sar
push
xchg
lcall
sbb
inc
mov
sbb
cmpsb
add
dec
mov
in
mov
lret
les
ljmp
out
add
push
push
imul
pushf
dec
mov
rcl
adc
inc
mov
movsl
cmp
mov
push
cmp
loope
cli
sub
push
jge
movsl
or
sbb
jge
and
addl
scas
cmpsl
adc
out
xlat
xor
xor
ret
xchg
scas
ja
sbb
sbb
pop
jl
xor
mov
mov
mov
cld
jae
popa
inc
fcoms
cmp
rorb
leave
push
sbb
mov
pop
aas
sbb
or
scas
enter
adc
cmp
mov
addr16
das
repz
jle
jle
lods
xchg
jmp
icebp
cmp
cmpsl
sbb
movsb
pop
sub
mov
js
push
or
mov
pop
cmpsl
lret
add
or
mov
xchg
cmp
jae
pop
lock
cmp
cld
dec
cltd
dec
scas
mov
mov
pop
dec
mov
icebp
push
ds
cli
jno
jnp
dec
dec
jge
divl
dec
xor
mov
mov
mov
add
data16
pop
jb
cmpsl
sbb
mov
stc
fsub
in
mov
or
add
cmpsb
stc
jecxz
addl
mov
enter
mov
cmp
jp
and
aaa
daa
mov
movsb
inc
cmpsl
mov
insb
jne
push
dec
add
mov
in
cs
inc
call
ret
inc
mov
jl
sbb
inc
inc
addb
or
mov
pop
mov
inc
or
call
sub
dec
dec
test
gs
fcmovne
gs
test
and
adc
outsl
addl
or
jmp
ss
mov
test
mov
gs
sub
jo
sub
fs
mov
cmp
test
sbb
movsb
fs
xrelease
popf
inc
cmpsb
je
add
les
in
xchg
in
test
int3
pop
int
push
sub
movsb
mov
fwait
push
inc
scas
test
test
addr16
fsubrl
lret
jp
out
or
or
and
pop
push
or
adc
xlat
dec
cmc
ljmp
ja
cmp
mov
push
mov
jnp
lret
cmp
shr
fwait
pop
es
arpl
mov
mov
dec
jl
ffreep
movsb
mov
cmp
pop
out
inc
push
xchg
or
cmp
mov
mov
inc
imul
aas
pop
dec
mov
or
js
popf
rclb
cmp
aas
jle
fstpt
pop
mov
clc
dec
cmpb
daa
cmp
mov
xchg
or
add
cmp
imul
subb
cmp
hlt
mov
shlb
mov
into
cmp
sbbb
mov
das
enter
aas
or
clc
cmp
loope
into
mov
cmp
sub
jmp
mov
pop
add
repnz
loop
popf
xchg
mov
xchg
ljmp
mov
repnz
push
icebp
imul
xchg
push
data16
mov
sbbb
lret
add
je
es
jmp
xchg
xor
cltd
loopne
movl
push
dec
sbb
scas
push
pop
push
fsts
xchg
cmp
notl
sub
dec
out
mov
sub
push
add
or
add
stc
or
test
aam
pop
stos
cmp
or
out
mov
test
lcall
add
cltd
mov
mov
adc
mov
cld
std
arpl
xchg
or
sub
xchg
dec
push
outsl
std
imul
add
sub
ja
cmp
call
leave
ds
pushf
gs
cmp
mov
stos
mov
subl
faddl
jae
faddl
cmpl
test
sti
jno
pop
ds
sbb
mov
pop
cwtl
dec
jle
xchg
cltd
and
jle
fisttpll
sbb
addr16
mov
sbb
jns
ds
xor
jns
mov
les
rol
xchg
stos
lods
xchg
test
adc
inc
jp
outsb
cwtl
mov
fwait
in
cmp
dec
xor
adc
or
in
jl
mov
out
or
adc
xor
cmp
sbb
movb
cmc
call
dec
pusha
rcrb
test
push
into
sbb
add
daa
or
jmp
stc
mov
or
cmpsl
sub
push
loope
mov
sbb
push
in
add
cmp
movsb
xchg
leave
jmp
mov
xchg
sbb
pusha
out
dec
inc
pusha
call
dec
sub
orl
sub
rorl
fwait
pextrw
sub
shr
roll
pop
fsubp
lret
pushf
adc
fcoml
cmp
bound
inc
bound
pop
leave
movsb
cmp
cmp
test
xchg
loop
jns
sub
out
xlat
and
or
push
and
test
pop
push
and
scas
xlat
mov
xchg
lahf
clc
out
adc
cltd
inc
cmp
pop
xor
mov
icebp
lcall
mov
xchg
mov
cltd
test
arpl
sbb
decl
test
int3
out
stos
ja
out
aaa
push
inc
inc
pusha
cmp
mov
xchg
into
cmp
seto
pop
mov
mov
cs
outsl
and
pop
inc
fucomi
pop
jp
sbb
xchg
sbb
jmp
dec
xchg
pop
mov
sbb
or
pop
pusha
inc
negb
jo
dec
sbb
sti
dec
fs
in
mov
jbe
xchg
jae
ds
cmp
aad
xlat
dec
shlb
popf
ds
ja
out
jg
add
add
lcall
mov
cmp
test
jle
pop
orl
mov
jl
fistps
ja
std
fstpt
outsl
and
lds
jmp
cmpsb
xor
dec
xchg
stos
imul
daa
jle
sbb
inc
inc
sub
dec
les
testl
cmp
sub
out
xchg
sbb
aad
test
outsl
sbb
and
imul
es
lret
push
icebp
jnp
xor
movsl
out
sbb
cwtl
fmul
dec
inc
sbb
sub
sub
pusha
mov
dec
adc
pop
ret
add
cmp
mov
rolb
push
in
and
movsb
fwait
sbb
mov
cmpsb
or
repz
insl
daa
xchg
out
mov
pusha
sbb
push
ds
cmp
test
scas
insl
xchg
sbb
inc
call
ja
cmp
sub
fisttpl
sbb
mov
or
or
mov
push
daa
rclb
sub
rorl
mov
dec
and
lret
out
adc
mov
jl
cmp
push
testl
leave
mov
mov
xchg
es
inc
rorb
adc
clc
pop
mov
or
bound
inc
jmp
popa
sbb
fdivr
dec
clc
pop
mov
mov
xchg
stc
pop
cmp
addps
sahf
gs
push
lea
push
loope
dec
js
mov
pop
lahf
cmp
lahf
mov
dec
cmp
js
mov
cmp
cmp
lods
xchg
ret
sub
fiaddl
sti
cmp
inc
mov
imul
lcall
punpcklbw
jae
sbb
xchg
test
clc
jns
data16
and
or
cli
lea
push
inc
cmp
sbb
mov
jns
int3
pushf
push
scas
ljmp
rcr
push
dec
cld
pop
mov
mov
mov
or
cli
mov
xchg
push
in
cmpsl
add
jle
cmc
fmull
jmp
sub
cmp
out
nop
jecxz
aam
cld
add
push
sbb
adc
sarb
or
add
in
add
imul
or
or
pushf
xchg
xor
or
arpl
aam
jns
in
insb
push
push
repnz
mov
adc
and
xchg
add
pop
aad
out
jp
or
sub
cmp
insb
sub
ss
add
jge
or
cld
pop
mov
test
pop
movsl
sbb
cmp
loopne
ds
xor
leave
pop
sbb
faddl
ds
fcmovnb
add
cmp
mov
fidivl
clc
push
mov
sbb
inc
gs
sbb
xor
add
addr16
push
sbb
pop
aaa
xchg
sub
jnp
in
mov
clc
aam
adc
fldt
shll
fwait
inc
les
shlb
mov
pop
lods
mov
out
mov
or
jb
xchg
into
and
cmp
mov
pop
test
jmp
sti
adc
sbb
sub
mov
outsb
addb
repz
sub
mov
aam
mov
push
jle
push
push
mov
push
and
pop
fwait
push
out
mov
xor
fdivrp
jle
xchg
cmp
dec
cmp
lods
or
sub
jp
mov
mov
xchg
pop
inc
test
adcb
lcall
xor
dec
test
mov
test
mulb
mov
test
inc
ret
test
sub
ja
sbb
test
sti
daa
dec
in
fistl
dec
lret
idivl
dec
in
sub
icebp
shr
imul
out
and
push
jg
cltd
or
addb
repz
pop
cmp
clc
jle
out
mov
pushf
pop
mov
dec
pop
rorl
in
lea
scas
jp
fisttpl
aam
arpl
jle
push
mov
fnstsw
insb
addr16
in
cmpsl
repz
fstps
iret
pop
ss
ficoms
sbb
mov
jae
pop
mov
cld
lock
daa
dec
jge
mov
loope
scas
ja
inc
loop
and
cmc
and
test
and
cmp
setnp
out
stos
mov
add
daa
push
mov
cwtl
lret
jmp
add
mov
cld
loop
mov
ljmp
ds
cmp
jge
aaa
leave
mov
aad
mov
cmp
daa
das
cmp
clc
repnz
and
adc
push
dec
inc
xor
std
movsl
andl
ss
jg
fcompl
xor
daa
add
push
fisttps
imul
flds
ss
mov
test
or
push
fidivs
ja
jle
mov
stos
in
inc
and
sbb
pop
jo
xor
xchg
xor
enter
mov
push
gs
sub
test
dec
cmp
fcmovnu
cmpb
fistps
aas
sbb
cmc
das
test
cmp
mov
and
push
loope
or
xchg
jge
daa
rolb
xchg
mov
mov
loop
rcr
mov
mov
aas
imul
outsb
test
jne
popw
dec
cwtl
sbb
outsl
outsb
pop
pop
fwait
sbb
jp
cmpb
mov
insb
mov
push
jns
ja
adc
sarb
fprem1
inc
dec
outsb
inc
inc
loopne
xlat
jl
ljmp
lds
outsl
sub
dec
cltd
add
jle
ret
lea
pop
pop
out
dec
or
icebp
sbb
xchg
xchg
xchg
out
dec
movsl
dec
sub
ds
stos
jl
xor
fwait
mov
jmp
xchg
push
in
mov
jo
sub
push
js
mov
cmpsl
or
in
in
pop
jg
jge
aad
mov
and
jp
pop
jnp
test
test
xlat
inc
inc
sti
ja
push
setno
cmc
or
sub
cmp
lcall
ret
loop
js
movsbl
ljmp
stos
outsl
test
inc
pop
and
mov
xchg
mov
movsb
mov
lahf
test
sbb
je
repnz
ja,pt
lret
arpl
jmp
push
dec
xchg
leave
dec
outsl
xchg
lea
jl
in
xchg
cld
pop
sub
xchg
mov
add
mov
cmpsl
jnp
sub
lods
sub
and
out
andb
sbb
add
or
mov
pop
xchg
or
test
inc
cmp
adc
xchg
pusha
rcrl
dec
mov
lcall
int3
add
pushf
pop
mov
aas
mov
pop
push
adc
imull
incb
movl
iret
into
add
daa
lods
add
xchg
aaa
add
test
jl
call
or
inc
sub
dec
jno
sbb
mov
outsb
lods
or
push
in
pop
cmpsb
cmpb
mov
sbb
push
lahf
dec
mov
mov
std
iret
fimuls
inc
lcall
and
pmaxub
inc
sbb
add
shrb
test
sbb
adc
sbbb
mov
mov
sbb
mov
adc
mov
std
mov
mov
fs
mov
sbb
push
js
push
ss
mov
out
push
jge
mov
sub
pop
fsubrl
add
xor
sahf
add
sub
into
cmp
lods
cmp
push
inc
mov
and
xor
fwait
push
outsb
fbld
add
xlat
xor
inc
fwait
mov
scas
inc
mov
xchg
pushf
fsubrl
add
mov
cwtl
dec
fisubs
addr16
test
mov
shrb
mov
sub
inc
adc
jmp
rclb
add
xor
add
pop
popf
js
adc
cld
mov
push
jge
add
repz
out
dec
das
xchg
push
popa
popa
xchg
mov
jg
mov
pop
les
mov
jle
sub
dec
and
cmp
add
push
pop
sbb
adc
scas
rorb
xor
fsubs
arpl
inc
testl
stc
xchg
jmp
setne
xchg
and
add
mov
xor
test
add
jle
sub
sbb
inc
sbbl
adc
xchg
ficoms
adc
add
cmp
mov
sub
cmp
xlat
cmc
fmull
mov
cmp
or
cmpsl
aad
stos
stos
mov
imul
in
scas
pop
jle
xlat
or
lahf
cmp
push
sub
les
in
pop
cmp
jmp
cwtl
adc
outsl
arpl
xlat
imul
cwtl
add
xchg
push
scas
or
popa
and
inc
paddw
pop
sbb
adc
adc
xchg
cmp
jle
jle
pop
jae
out
cmp
scas
sbb
cmpsl
sbb
or
into
jp
xchg
mov
or
aam
xchg
mov
mov
cmpsl
mov
sbb
jle
xchg
dec
mov
popf
mull
add
inc
daa
leave
mov
pop
cmpl
add
push
les
les
mov
mov
sbb
push
popf
xchg
out
inc
flds
jnp
adc
mov
sub
mov
mov
lret
clc
mov
pop
cmp
mov
sti
clc
adc
ja
or
adc
mov
sbb
cmpb
das
iret
push
std
addl
dec
std
sbb
data16
xchg
mov
ds
sbb
loop
jbe
mov
jns
cli
mov
in
rorb
daa
cs
into
cmpsl
xchg
or
push
and
lods
fadds
addb
mov
imul
jecxz
mov
jnp
aam
mov
outsb
setg
ljmp
cmc
push
sub
push
hlt
sbb
into
cmp
xor
aas
iret
loopne
xchg
test
sbb
sbb
shrl
adc
jae
inc
cmp
out
inc
or
ja
mov
add
jmp
test
adc
clc
dec
xchg
mov
mov
xchg
icebp
mov
or
push
sbb
mov
push
jmp
mov
push
daa
ds
das
push
jg
ljmp
mov
add
jge
push
pop
in
cmpsb
jno
lock
mov
jecxz
test
int
shll
dec
fwait
or
jle
or
popf
add
push
adc
fsubr
daa
push
test
mov
aam
rcrb
mov
shlb
mov
mov
sbb
jae
xor
adc
cs
sbb
jno
mov
aad
sub
xchg
jo
cmpb
lea
loope
fs
aad
lds
repnz
and
jbe
add
xchg
mov
lods
mov
add
cli
pop
aaa
subl
pop
dec
mov
test
cmc
arpl
dec
lcall
xor
sub
pop
cmp
jge
fisttpl
pop
cmp
loopne
push
mov
bound
xorb
cmpsb
imul
sahf
test
insl
repnz
lret
xor
fisubrs
push
test
stc
shr
and
or
cmp
xchg
and
es
andb
cmp
fwait
jmp
mov
out
popa
dec
cmp
sbb
xor
pushf
adc
push
mov
ljmp
mov
sbb
or
cmpsb
clc
stos
xor
es
addr16
fisubrs
xor
mov
or
aam
inc
jae
cmpl
sub
out
roll
pop
div
cmp
test
je
cli
pop
cmp
jae
nop
lret
pop
ljmp
jecxz
push
sbb
cmp
xchg
hlt
adc
cmp
repz
or
mov
push
bswap
outsl
add
cmp
sub
adcl
mov
push
cmp
jbe
fstpt
call
mov
pop
pop
ucomiss
fwait
out
or
and
xchg
out
mov
inc
addr16
outsl
add
maxps
daa
sbb
aaa
push
inc
insl
or
outsl
or
mov
lea
scas
pop
enter
sbbb
adc
ja
xlat
or
call
fs
adc
leave
push
inc
mov
out
push
pusha
lock
push
push
xor
pop
mov
cmp
or
movntq
sbb
lods
jbe
pop
pop
or
cli
mov
fcompl
das
jnp
xchg
sub
mov
and
gs
fnstcw
mov
pop
fwait
mov
movsl
add
mov
dec
or
mov
js
fcoms
xchg
cmp
push
sbb
cmpsl
ljmp
rcrb
push
out
fmull
mov
leave
rorl
out
cmpl
call
mov
inc
out
lcallw
xchg
jns
je
cmp
ja
arpl
inc
jecxz
hlt
out
mov
inc
lret
sub
idivl
xor
out
insl
dec
cmp
ja
popa
add
fildl
cmp
negb
or
pop
call
lret
pop
or
cmpsl
dec
push
sbb
imul
cltd
inc
mov
jo
dec
hlt
cmpsl
movsl
pop
pop
adc
mov
popf
push
call
repz
inc
lea
or
cwtl
arpl
mov
jnp
pop
test
xchg
fiadds
sbb
sbb
jnp
or
pop
loop
mov
mov
pop
test
fdivl
add
insb
repnz
mov
sub
pop
gs
shr
test
mov
test
testb
xor
xchg
mov
jnp
and
movl
jmp
roll
aam
add
out
mov
xchg
dec
dec
sub
jecxz
sti
pop
in
adc
push
fnstsw
cmpsb
in
xor
push
nop
jmp
mov
jle
sub
pop
adc
push
xor
mov
scas
scas
adc
dec
shufps
test
pop
xor
mov
cmp
push
test
pop
inc
lods
push
inc
xchg
test
mov
jb
pop
fidivrl
daa
out
dec
xorl
cmp
js
stc
sbb
cmp
push
ja
addr16
adc
cmp
sbb
js
jns
xchg
cmp
sub
pop
sbb
out
idivl
mov
out
mov
test
xlat
cmc
inc
aad
daa
cltd
inc
jns
sub
xor
mov
loop
pushf
outsb
sbb
out
cmp
push
insl
add
push
inc
lret
adc
ljmp
clc
mov
cmpsl
sbb
xchg
mov
ljmp
movsb
xor
sbb
push
out
lcall
aas
mov
cmpsl
xchg
pusha
mov
inc
leave
sbb
xor
mov
cmp
adc
mov
idivb
jae
pusha
xchg
cmp
enter
add
jg
shrb
jmp
or
mov
pop
hlt
fwait
rcrb
add
dec
push
add
sbb
sbb
mov
sbbb
push
imul
dec
popa
cmpsb
xchg
cmpl
data16
pusha
js
add
sbb
fldl
arpl
inc
addb
mov
cmc
arpl
sbb
fnstcw
test
and
adc
ss
outsl
fucom
add
jmp
test
add
out
dec
fistpl
cmpsb
dec
lahf
mov
adc
ja
and
mov
push
xchg
jo
jl
ret
add
sahf
add
fistl
pop
ljmp
pop
ljmp
test
int
pop
test
cmp
mov
mov
cmpsb
lds
arpl
rcrl
mov
push
es
xchg
arpl
mov
jle
clc
fdiv
pop
jge
push
rcrb
xor
lods
mov
dec
hlt
test
dec
imul
xchg
daa
scas
bound
pop
pop
add
inc
lret
jmp
out
loop
dec
loopne
jge
test
shl
imul
aad
xchg
aas
add
inc
xor
imul
rcrb
inc
push
jle
adc
flds
pop
insb
sti
cld
xor
aas
repz
lock
fstps
lcall
int3
cmp
adc
pushf
xchg
out
fldcw
andl
les
xchg
xchg
cltd
inc
nop
xor
sbb
mov
sub
imul
arpl
sti
add
lods
mov
sti
int3
sbb
jmp
mov
sbbl
add
xlat
push
inc
ficoms
xchg
pop
test
mov
cmc
jmp
inc
mov
dec
test
jmp
fyl2xp1
cmp
sub
push
dec
mov
adc
xlat
dec
daa
push
lahf
test
sbb
pop
lahf
sbb
jge
jle
adc
mov
and
sub
pop
arpl
out
cs
inc
dec
data16
mov
mov
mov
int
outsb
push
cwtl
pop
mov
sbb
fisttpll
out
js
pop
cwtl
dec
jge
out
insb
dec
int3
test
cmpl
inc
les
sub
insb
xchg
in
mov
xchg
xor
cmpsl
sbb
daa
xor
sub
jl
sbb
dec
add
xchg
movsb
rcl
outsl
test
scas
or
cmp
rclb
adc
imul
fcmovu
mov
sbb
inc
loope
push
xchg
cmp
clc
jl
push
test
ss
jg
mov
xor
je
pushf
dec
inc
mov
test
jnp
push
mov
xchg
out
mov
in
inc
pusha
adc
push
pop
dec
test
push
xchg
lret
mov
lea
sub
sbbl
push
andb
fldl
lock
aaa
add
push
addl
imul
cmpb
mov
xchg
ja
lcall
pushf
imul
push
mov
mov
sbb
ds
jp
cmp
xchg
cmp
sbb
daa
xchg
dec
shrl
jmp
addb
mov
in
inc
cmp
jnp
test
orb
inc
or
fnstcw
pusha
mov
jg
jnp
mov
push
push
inc
mov
cmpsb
cmp
in
push
daa
or
rolb
jb
inc
inc
add
cmp
jg
imul
data16
pop
push
inc
mov
jmp
sti
or
add
or
clc
xchg
fs
mov
push
ret
jne
or
cmp
adc
mov
or
or
cmp
cmp
imul
fsubrl
fwait
xor
lcall
mov
jno
or
sub
jnp
jns
push
ljmp
shll
test
jecxz
mov
int3
stos
mov
cmp
xchg
or
cmp
cmp
fwait
push
ja
jle
gs
idivb
cmp
mov
sub
mov
xlat
add
ljmp
lahf
arpl
mov
jbe
or
pop
test
mov
pop
push
adc
sub
mov
mov
imul
sbb
pop
xchg
pop
mov
addr16
sbb
mov
pusha
or
lcall
aas
into
fisubrs
daa
sbb
inc
mov
xchg
jle
fmul
push
inc
pop
jecxz
fidivrl
or
or
imul
inc
xchg
cmc
ja
loop
dec
xchg
inc
loop
cmp
lea
dec
sub
mov
dec
adc
iret
outsb
daa
xor
sub
call
xor
fldt
xchg
fcoms
xor
cmp
xor
inc
xlat
cwtl
xchg
jae
xchg
cs
and
jmp
outsl
mov
and
ds
test
pusha
cmp
adc
add
imul
mov
sub
push
lods
cmpsb
cmp
repz
mov
sbb
sti
xor
mov
jg
xlat
sub
mov
cmp
mov
fidivrl
out
pop
lcall
ret
cmp
roll
stc
sbb
cmpb
xor
cmp
ljmp
mov
out
sbb
jmp
jmp
push
pop
mov
scas
mov
into
gs
sbb
push
iret
out
fwait
mov
cmp
cmp
adc
cmpsb
or
push
dec
or
jns
sub
les
sbb
pop
imul
out
pop
loopne
sbb
jmp
jp
sub
or
and
inc
stc
add
pop
adc
pop
movsl
xchg
mov
pop
cmp
fidivs
in
mov
push
jbe
pop
in
cmpsb
icebp
jge
and
out
stc
cmpsl
aas
xchg
inc
scas
pop
add
xchg
mov
divb
sub
mov
push
sbb
ss
lcall
jae
gs
mov
rol
dec
fcomip
push
cmp
push
icebp
insl
loopne
repnz
mov
lret
pop
scas
xchg
add
int3
xchg
les
es
arpl
xchg
outsl
aaa
int3
ljmp
cltd
pop
sbb
stos
and
or
jmp
fucomp
negb
les
pop
loope
idivl
cwtl
dec
cs
out
nop
sub
insb
add
sbb
pop
cmpsl
dec
jmp
add
je
mov
dec
jae
mov
sahf
jb
sub
es
jle
in
lods
inc
das
xchg
dec
add
xlat
lods
imul
sarb
dec
add
mov
les
pop
fdivl
std
mov
scas
push
mov
outsl
call
jle
lods
mov
fimull
cmc
fs
pop
stc
loope
sub
mov
pop
dec
sbb
arpl
jno
cmp
orb
test
movsl
mov
push
imul
sbb
das
mov
adc
push
loop
push
repz
mov
gs
add
js
addr16
push
popa
sbb
insb
aas
inc
jnp
into
add
ficomps
jmp
pop
out
cmc
mov
mov
clc
sbb
adc
mov
imul
test
jns
pop
sub
stos
jno
pop
arpl
xor
mov
outsb
addr16
adc
cmc
mov
push
inc
add
jns
xchg
in
icebp
and
pop
xor
mov
repnz
leave
sub
dec
xchg
bound
and
mov
test
faddl
rorl
sarl
add
dec
es
pusha
fwait
cmpsl
pop
jl
maxps
pop
mov
cmp
xor
cmpb
mov
testl
int
aad
int
mov
lea
fcompl
out
clc
push
scas
arpl
and
sbb
xchg
pop
gs
stos
negl
pushf
lock
aas
add
sbbb
lods
inc
cmp
jecxz
sub
xor
insl
jp
mov
cmp
loopne
popa
mull
sbb
xchg
stos
adc
xlat
pop
sub
mov
sbb
mov
leave
push
divb
sub
or
xlat
add
push
movsl
fildll
xchg
sub
add
mov
adc
je
lods
or
lret
rcrb
dec
fstpl
sbb
sub
sub
test
ret
out
cmp
sbb
push
pop
dec
icebp
pop
mov
scas
cmp
lock
dec
aaa
sbb
out
mov
adc
mov
push
xor
ljmp
cmp
push
add
sub
test
test
xor
pop
xchg
sti
sub
cmp
rorb
push
xchg
stc
push
cmpsb
pop
clc
test
dec
fcompl
adc
shll
mov
movsb
pushw
jbe
leave
pop
test
popa
in
mov
pop
stos
sub
pop
jbe
push
sub
out
cmp
sub
jge
xchg
jge
andl
pop
or
loope
inc
mov
mov
mov
or
aad
or
sbb
push
and
dec
cmpsb
sub
adc
add
int
xchg
cmp
sbb
loope
cltd
call
mov
ja
adc
scas
shr
pop
test
lods
outsl
pop
mov
jmp
cmp
dec
mov
inc
push
rcrb
sbb
fidivrl
iret
aas
mov
test
fcomip
jp
dec
adc
xchg
imul
jge
inc
imul
cmp
fwait
icebp
push
fwait
test
adc
or
lea
mov
dec
or
cmp
addr16
arpl
or
loopne
sub
mov
lds
fs
mov
stos
call
xchg
or
dec
xlat
mov
mov
in
fstpt
roll
inc
lds
push
jle
clc
sbb
nop
jno,pn
or
into
sub
mov
ss
mov
imul
mov
adc
sub
adc
and
jns
jnp
sar
jge
xor
sub
icebp
mov
and
imul
insl
movb
mov
in
xchg
push
cmc
lret
scas
inc
test
mov
sub
sub
shll
push
xchg
sub
js
sbb
push
int3
add
iret
jle
pop
or
mov
out
inc
mov
sub
ret
pop
cmp
addr16
sbb
hlt
shl
cmp
pop
jg
jbe
imul
or
js
addr16
mov
push
ds
lods
int
pop
mov
lock
iret
pop
xchg
ljmp
mov
push
sbb
inc
in
xchg
mov
scas
in
mov
je
add
test
ret
inc
mov
and
mov
arpl
jle
cmpsl
movsl
jns
adc
push
imul
lahf
push
adc
shr
mov
pop
outsl
mulb
pusha
jb
leave
lahf
sub
inc
pop
dec
das
dec
in
andb
and
pop
dec
sbb
pop
jge
cmpsb
dec
add
out
sbb
aas
mov
jmp
and
cwtl
adc
fs
testl
dec
mov
jns
dec
std
pop
clc
dec
cltd
mov
in
ljmp
test
cld
xor
xchg
jmp
lds
movsl
cmp
xchg
aam
js
sbb
fistpll
sub
orb
sub
jae
int3
jle
ss
mov
jmp
jle
fadds
iret
mov
roll
scas
jp
and
imul
push
push
add
movb
push
ret
cmc
stc
mov
adc
cli
mov
mov
ja
and
push
addr16
lds
in
data16
xlat
outsl
mov
ffree
movsl
inc
xor
or
scas
pop
jb
lods
and
rorl
gs
inc
jp
notb
xchg
mov
mov
int3
fcomi
fmull
jno
adc
push
or
push
sub
push
addb
mov
es
xchg
mov
lods
in
sbb
ret
push
xor
fildll
and
adc
or
clc
dec
movsl
jnp
jno
cmp
xor
add
outsl
adc
std
in
gs
test
popa
push
imul
jle
pushf
push
xchg
or
sub
push
outsb
lock
imul
lods
test
daa
sub
es
jmp
test
mov
or
ds
pusha
push
xor
jnp
adc
sbb
xor
ja
push
outsl
imul
sbb
sti
or
inc
int
mov
mov
or
add
loope
fimuls
ss
ret
and
jp
arpl
jns
cmp
jbe
call
sub
stos
mov
jno
mov
fs
adc
xor
fwait
add
xor
cmp
in
push
push
sbb
mov
cmp
leave
cmp
dec
mov
cmp
push
or
cmc
push
jp
ror
out
test
push
mov
enter
push
fsubs
or
ja
jle
mov
mov
sub
int3
push
cld
es
lret
sub
roll
mov
fbld
inc
xchg
xor
xchg
and
push
adc
pop
jo
ss
sbb
ljmp
jo
inc
jmp
out
fmuls
inc
scas
cmc
mov
arpl
into
arpl
mov
ds
adc
or
int3
push
dec
call
cmp
pop
nop
add
sbbb
pop
inc
ja
aam
mov
aaa
aas
or
xor
xchg
out
movsl
sbb
sti
stos
inc
or
cmc
jmp
into
add
xor
loopne
dec
jg
add
sub
jl
in
add
pop
movl
jp
dec
dec
ja
cwtl
xor
es
repnz
dec
dec
or
cmp
ja
fdivr
cli
into
push
sbb
mov
test
or
into
jns
out
sbb
xor
scas
or
xchg
roll
aas
lcall
sbb
push
adc
jno
jo
xchg
xchg
add
fnstsw
sub
mov
pop
ljmp
incb
mov
lods
arpl
ja
mov
addl
xchg
push
fadds
out
enter
andb
ljmp
and
mov
pop
xchg
shlb
inc
push
jb
jmp
fwait
add
sbb
pusha
and
test
fisubrs
add
inc
ja
out
cli
subb
jns
dec
push
shrb
bound
or
xchg
or
mov
mov
and
sbbb
imul
mov
xor
sub
push
push
in
fsubs
outsb
mov
mov
test
adcb
pop
push
add
jb
sub
pop
cmp
in
sbb
mov
js
rcl
addb
inc
orl
sbb
inc
or
jmp
xor
dec
mov
jne
xchg
mov
pop
movsb
in
movsb
xchg
daa
xchg
pop
xor
sbb
mov
mov
mov
sbb
or
add
and
lahf
sub
push
cltd
pop
mov
or
daa
adc
lcall
lds
or
sub
pusha
pcmpgtb
test
insb
pop
lds
sti
das
fadds
xor
cmpb
js
in
cmp
mov
mov
lods
or
fsubp
xchg
pushf
sub
xchg
mov
pop
or
insb
push
inc
bnd
daa
push
imul
movsb
inc
cmc
jmp
popf
xchg
cmp
hlt
jbe
dec
mov
mov
inc
xor
or
pop
test
das
fisubl
or
and
stos
xor
xor
int3
dec
cli
cli
adc
popa
lods
adc
js
xchg
movsb
les
or
mov
xchg
sbb
int3
push
pop
mov
nop
test
push
pusha
imul
fcomps
cltd
orl
cmpsb
stos
dec
dec
loopne
sbb
dec
cmp
mov
loopne
pusha
xchg
test
mov
dec
pop
sbb
mov
clc
add
or
cmc
addr16
mov
nop
mov
iret
jnp
sbb
jge
xchg
add
jns
shl
scas
add
lods
insb
pop
mov
mov
jne
dec
mov
cmp
cmp
aam
xchg
xchg
sub
jnp
or
insb
jg
jno
aas
sub
adc
dec
mov
dec
pushf
xchg
pop
cmp
dec
out
cmc
pop
mov
imull
sub
jbe
cmp
inc
sbb
subb
out
leave
ret
cwtl
push
dec
jns
mov
add
fs
loope
hlt
cld
mov
data16
sahf
inc
inc
push
cmp
mov
shlb
insb
pop
scas
test
cmp
pushf
js
adc
repz
stc
out
xchg
ss
sbb
das
lods
push
mov
xor
aaa
into
or
addr16
xchg
push
js
cmp
mov
jns
mov
stos
loope
sti
mov
jo
popa
sti
dec
inc
in
outsl
cmp
iret
ja
jl
push
mov
mov
mov
bnd
into
inc
cmc
stc
mov
or
loope
fcompl
xchg
cmp
int3
outsb
lahf
push
sub
add
mov
aas
jne
pop
mov
or
out
and
push
lret
mov
aad
loop
mov
mov
fisttpl
out
sub
in
sbb
dec
lock
test
xchg
sahf
lret
outsb
cmp
test
cmp
sbb
in
mov
cmp
sub
jb
mov
jmp
inc
xchg
adc
mov
movb
mov
mov
xlat
mov
popa
inc
mov
xchg
addr16
pop
mov
sbb
outsl
jns
stos
sub
xchg
mov
scas
pop
xchg
mov
jle
sbb
jg
scas
mov
jp
inc
push
push
loope
dec
inc
pop
or
mov
xchg
pusha
loope
mov
in
mov
sub
lret
lahf
rorb
dec
push
jne
inc
repnz
inc
push
pushf
sbb
pop
mov
or
cmpb
rcrl
jp
sti
jae
shrl
dec
gs
xchg
popa
or
in
sub
stc
push
push
fcmovbe
stos
outsb
jno
cmp
push
xchg
sbb
xchg
xchg
push
pop
std
dec
imul
sbb
jle
cld
test
inc
cld
cmp
test
and
cwtl
sbb
pusha
pop
cmp
jns
mov
cmpl
std
decb
test
mov
int
xlat
mov
jno
cs
xorl
xchg
jnp
test
dec
push
mov
xchg
in
out
mov
sbb
roll
dec
ja
add
push
xchg
call
sub
pusha
mov
sarb
das
insb
mov
mov
maxps
push
mov
sub
push
mov
enter
or
repnz
or
jne
ret
out
stc
cmp
pop
sub
ljmp
mov
popf
ss
not
andb
lods
das
sub
sbb
xchg
xchg
int3
pop
fmull
hlt
repz
adc
repnz
loopne
sub
dec
pop
mov
push
xchg
and
jecxz
popf
pop
insl
cmc
test
push
test
in
pop
int3
movswl
jnp
std
popa
iret
jle
movl
scas
nop
std
mov
fildll
push
fsubl
stos
mov
andl
sub
push
icebp
or
push
ljmp
add
gs
add
mov
lahf
iret
push
lods
dec
push
outsb
pop
mov
mov
lret
stos
adc
inc
sbb
ds
xlat
stc
test
leave
sub
mov
mov
sbb
dec
cmpsl
syscall
mov
inc
std
je
sub
xchg
fiadds
test
mov
xchg
jmp
pushf
add
jne
sbb
xor
cli
lds
pop
in
mov
stos
mov
jmp
lret
ja
stos
push
push
cli
out
clc
jecxz
dec
ds
mov
pop
mov
mov
xchg
xchg
dec
cmp
pusha
mov
mov
cmp
ret
mov
ljmp
clc
mov
sbb
mov
ss
push
jo
loope
pop
in
xchg
jb
jbe
in
lret
lods
pop
or
stc
xabort
pushf
daa
test
popa
imul
jne
into
roll
lods
add
arpl
adc
js
addl
cwtl
jg
xchg
enter
test
pop
sub
mov
dec
push
dec
and
cmp
jg
lods
mul
push
insb
sbb
sub
jmp
iret
cltd
nop
or
xchg
iret
pop
movsb
scas
jl
mov
sub
jo
fnsave
inc
inc
idivl
clc
jo
dec
cmp
loop
test
dec
dec
dec
xor
pop
sub
out
mov
mov
data16
inc
shrb
nop
xchg
imull
push
ss
cmp
push
cmp
mov
and
mov
stos
fcmovbe
testl
fs
int3
fdivs
mov
adc
sahf
mov
jne
push
mov
in
hlt
jecxz
and
inc
mov
jmp
adc
pop
daa
or
in
pusha
addb
jbe
xorb
mov
adc
aas
aas
stc
fdivl
pop
xor
xor
fidivrs
add
cmp
cmp
cmp
mov
out
jp
cmp
jns
jle
addr16
jno
outsl
je
push
daa
push
jb
aad
out
mov
mov
sbb
nop
cmp
mov
xchg
stc
and
mov
icebp
or
out
cmp
aas
outsl
dec
mov
cli
mov
arpl
jno
jp
mov
pop
add
out
pushf
cmp
movsb
xor
sub
jle
push
pop
pop
lret
xlat
test
clc
dec
cwtl
jg
addr16
sbb
test
push
cmp
mov
mov
push
xchg
mov
mov
flds
insb
dec
inc
shl
jle
les
jo
jp
bswap
push
dec
pop
mov
shld
jge
pop
mov
cmp
out
sarl
mov
mov
push
out
inc
cmp
ja
test
cmp
add
sahf
push
sahf
aam
jns
in
mov
lret
xor
mov
pop
inc
std
test
sub
dec
pop
inc
es
rolb
inc
test
mov
movsb
fdiv
xor
neg
dec
mov
mov
push
fs
cld
add
pop
icebp
pop
out
testl
lds
clc
xlat
mov
sbb
cltd
cmp
out
pop
or
lods
addr16
js
pop
jnp
sbb
sub
xchg
xchg
or
hlt
pop
cli
loope
jmp
adc
mov
nop
cli
or
inc
test
aas
out
fwait
cmp
dec
xchg
ficoml
mov
push
imul
ds
push
dec
test
cmp
xor
lret
dec
sub
into
inc
cltd
test
add
andl
mov
int
mov
lret
lret
sbb
dec
mov
lock
bound
out
inc
inc
lods
mov
adc
out
pop
dec
inc
xchg
adc
cwtl
mov
fidivrl
mov
lds
cmpsl
sbb
mov
adcl
sarb
je
or
pop
xor
pusha
jge
mov
nop
mov
test
es
xchg
subb
nop
in
or
sbb
xor
notb
aad
outsl
jle
mov
sarb
mov
cmp
or
cmpb
or
jg
lds
cmp
dec
test
into
and
jge
cmpsb
fisubl
shl
lods
sub
fsubrp
mov
dec
inc
xor
mov
cmp
imul
icebp
insb
mov
or
imul
push
jg
sbb
loope
lds
insl
mov
jmp
mov
jmp
repz
test
xchg
add
mov
test
out
push
pop
mov
or
push
lds
add
xchg
push
roll
pop
es
outsb
cmp
adc
fwait
jae
add
jns
out
dec
mov
xchg
gs
andl
pop
scas
xchg
leave
xor
jne
test
sbb
stos
inc
fwait
stc
or
popa
adc
cmp
shlb
xchg
pop
mov
push
mov
mov
fdivrl
sub
cmpsb
inc
add
or
test
cmp
adc
adc
lcall
and
mov
or
or
lret
gs
fisubs
and
mov
mov
pop
mov
nop
icebp
cs
daa
sbb
rcr
stc
lret
jg
pop
out
lret
jnp
xchg
mov
inc
mov
imul
mov
xchg
test
jnp
add
jne
jno
xchg
ja
dec
or
test
mov
push
lret
mov
and
pop
lods
lret
pop
and
fucomi
subb
mov
xor
mov
mov
test
push
pop
adc
lret
adc
insb
fstps
adc
mov
notl
outsl
mov
xlat
ja
cmp
test
push
movsb
dec
cmp
ja
jp
ffreep
adc
and
cmp
sub
sarb
cmp
sbb
addr16
cltd
pop
stc
bound
inc
pop
ret
es
cmpsl
mov
mov
push
jnp
sub
jle
xlat
push
imulb
inc
les
pusha
mov
cmp
clc
push
cmp
pop
or
or
sbb
inc
jg
lahf
in
sbb
sbb
clc
sbb
std
mov
popa
aaa
scas
mov
into
fistpl
mov
mov
mov
shlb
es
add
cmp
std
lahf
fucomip
and
add
jmp
dec
loope
inc
in
call
test
icebp
mov
xor
imul
mov
ja
movsb
cmp
mov
mov
push
xorl
add
cmpl
xor
icebp
cwtl
fstpt
daa
or
inc
jns
mov
mov
pop
int3
sbb
sbb
jge
xchg
cmp
shrl
and
mov
jle
mov
adc
mov
es
daa
mov
dec
adcl
inc
popa
sti
lahf
test
dec
iret
pop
cmp
inc
xchg
js
or
test
jl
or
dec
and
xchg
dec
or
aam
cwtl
or
and
es
pop
mov
sbb
add
sbb
aas
dec
int
icebp
loopne
xor
int3
cmc
ja
sbb
dec
ds
mov
ret
mov
repnz
out
or
hlt
sti
orl
fs
add
dec
sub
sbb
dec
pusha
pop
xchg
test
xchg
cltd
cld
cli
cmpb
cmc
cmp
jle
ret
lods
jg
or
es
mov
int3
jbe
sub
xchg
sbb
dec
pop
into
loopne
push
inc
js
add
adcl
sbb
adc
xchg
push
pop
das
test
lods
or
mov
jp
push
es
dec
sub
pop
xchg
mov
jb
xlat
xchg
rorb
cmp
clc
push
setno
add
imul
ret
pusha
cmp
fisubs
cmp
inc
mov
aas
sbb
mov
popf
or
es
xchg
bound
rorl
js
outsl
mov
pop
sbb
decb
pop
std
loope
and
movsb
mov
aaa
or
mov
push
push
cmpsb
jne
test
jg
mov
ljmp
add
shrl
jbe
daa
leave
pushl
push
cmp
push
adc
add
inc
mov
pop
outsb
and
cmp
pop
cmp
out
sbb
xor
notb
sub
sbb
cmp
mov
add
pop
mov
lods
fsubrl
je
stos
insl
clc
jno
pusha
ss
xchg
cmp
addr16
jae
adc
adc
cmp
fdivrl
mov
ret
in
ljmp
stos
es
cmp
mov
fcoml
inc
adc
ret
int3
mov
xchg
lcall
mov
mov
int3
inc
adc
ljmp
push
dec
xorb
or
mov
aam
stos
rcll
loop
mov
pop
movsb
repz
and
imul
xchg
popf
mov
mov
mov
cmp
addr16
sbb
in
jg
cmpl
mov
stc
xchg
repz
add
cmp
mov
jmp
xchg
cmp
sbb
lods
lret
sub
mov
push
lret
or
push
mov
enter
fprem1
sub
notl
stos
sbb
jl
out
mov
pop
out
addr16
in
dec
inc
sti
sub
sub
stos
dec
je
and
mov
ljmp
ret
mov
push
add
sbb
lahf
push
decl
insl
es
pop
adc
scas
int3
adc
sbb
sub
mov
xchg
push
daa
ja
cli
addb
jle
push
data16
or
pop
jl
pop
cmp
lahf
xlat
test
dec
ficoml
dec
add
pusha
sbb
mov
xor
movsl
cs
push
push
enter
loop
pusha
imul
popf
push
sbb
jge
cmp
xchg
mov
xchg
je
stc
jbe
jmp
shl
fcomps
vpmadcsswd
push
push
hlt
mov
fldt
sbb
pusha
leave
aas
inc
scas
cmp
clc
stos
xchg
jg
cmpsb
adc
xchg
popl
cmpl
xchg
cmpsl
adc
imul
stos
aad
out
sbb
or
add
cmp
dec
jp
add
jns
icebp
cmpsl
cmpsl
jl
out
jmp
out
jle
popl
rcr
stos
bound
xchg
dec
call
lret
repz
and
repnz
sub
jo
ja
mov
outsl
mov
jl
dec
sbb
hlt
fs
ss
mov
fnstcw
cwtl
mov
jp
xchg
insl
pop
lods
mov
adc
sub
outsl
mov
pop
in
nop
jno
xor
xor
jae
push
gs
inc
xchg
es
push
outsl
lret
xchg
cld
cltd
or
or
dec
daa
in
cmp
xchg
arpl
daa
fmuls
sbb
sbb
jae
ja
fdivrl
nop
fiadds
dec
lods
fiadds
dec
mov
sbb
xchg
iret
test
xor
pop
imul
fnstcw
lcall
out
fdivr
pop
stos
stc
jbe
ja
popf
mov
repnz
push
sub
sbb
dec
aas
nop
pop
xlat
bound
pop
rorl
mov
jge
sbbb
mov
idivl
mov
dec
sbb
inc
aad
push
sarb
jb
inc
cmp
or
inc
sub
xchg
jns
xchg
fs
cmpsl
test
mov
ret
daa
or
in
ret
ds
adc
jnp
pop
fnstcw
cmp
fwait
out
or
lcall
movsb
adc
dec
fistps
mov
cmp
sbb
mov
add
js
or
ret
ret
adc
jae
cmp
enter
push
add
sub
adc
bound
cmp
rorl
add
es
mov
push
jle
test
out
cmp
xchg
push
incb
mov
jae
jl
out
jg
sbb
add
test
cwtl
pusha
loope
pop
fmull
out
divl
ret
lock
out
dec
mov
lods
out
inc
sub
movsl
adc
push
mov
xchg
fisubs
rorl
pop
push
mov
mov
push
mov
adc
icebp
jge
ret
adc
mov
dec
and
or
addl
lods
sub
cmp
mov
cmp
in
jnp
mov
add
dec
rcrl
adc
pop
pushf
inc
mov
loop
sub
dec
data16
mov
pop
pop
xor
cmp
lods
push
jnp
test
test
inc
ja
pop
sbb
lock
xor
outsl
idivb
adc
fisubs
gs
iret
imul
pop
adc
ja
dec
dec
adc
ss
sub
outsl
not
imul
cmpl
test
iret
shlb
std
into
jp
add
sbb
aad
add
adc
add
daa
xor
mov
jnp
and
sbb
pop
daa
mov
aas
pop
push
mov
lahf
ret
clc
mov
movsb
ss
pop
add
div
pop
inc
insb
test
pushf
sub
adc
cs
out
cmp
mov
or
outsb
popf
sbb
pop
repnz
seta
push
outsb
in
dec
out
addb
lea
jo
sahf
jg
movb
int3
mov
js
push
pusha
lds
lods
sub
mov
or
sub
push
mov
iret
sbb
sbb
ljmp
or
or
jns
scas
loopne
stos
pop
mov
sbb
insb
popa
cmp
ficoml
popa
push
and
or
fsub
sbb
inc
jp
stc
insb
fs
imul
sti
xchg
or
push
sbb
fimuls
pop
pop
or
cmp
xchg
ja
int3
mov
inc
jl
es
or
loope
fisubs
or
sub
mov
mov
pusha
mov
fsubl
sub
push
mov
adc
jecxz
jnp
sub
cmp
hlt
mov
popf
jnp
dec
lea
cmpsb
jle
call
pop
mov
push
gs
jg
jno
movsb
sbb
jbe
cmc
cmp
sbb
mov
push
aas
mov
mov
pop
mov
ds
aad
or
movl
cmc
dec
cmp
cmpsl
notl
out
cmp
mov
mov
xlat
mov
js
jle
adc
xchg
inc
sbb
inc
addr16
faddl
jno
loope
cmp
xor
add
mull
stc
inc
cmp
push
inc
pop
mov
stos
mov
test
jg
inc
leave
or
test
or
flds
xchg
cmp
sahf
adc
test
ret
pop
mov
adc
dec
push
push
xchg
jns
cmp
fdivrl
cs
cmp
add
sbb
add
or
faddl
outsb
add
test
or
int3
movb
jl
addl
fwait
outsl
cmp
cmp
adc
insb
sti
jl
sarl
or
mov
jg
dec
jp
mov
xchg
inc
mov
daa
lahf
push
cli
cld
ss
sub
ja
lcall
in
stc
jge
and
push
cmc
xchg
mov
dec
outsb
dec
push
out
mov
sbb
test
jo
loope
movb
mov
test
mov
shrl
arpl
jmp
xchg
sbb
cld
sbb
mov
dec
stos
pop
lahf
push
sbb
pushf
adc
mov
pop
xchg
sbb
mov
mov
mov
dec
sbb
sti
mov
ja
aad
adc
mov
or
mov
xchg
mov
mov
cltd
pop
sbb
jl
inc
icebp
push
push
jle
jp
push
imul
pop
cmp
or
sbb
push
inc
nop
mov
test
dec
jmp
sbb
movsl
test
sti
cmp
lahf
mov
test
gs
mov
jecxz
fstpt
cmpb
call
jg
jmp
cld
cmp
fdivrl
jbe
mov
sahf
lret
jae
mov
lock
shrb
jg
sub
loop
mov
jbe
mov
mov
cmp
std
pop
xchg
mov
and
daa
push
cmp
cmp
cmp
push
in
pop
dec
rcrb
or
les
lahf
pushf
inc
lds
movsb
mov
xchg
test
test
je
dec
jno
xor
cmp
popa
cmpl
or
or
push
ja
jae
daa
xchg
pop
mov
sahf
sbb
xchg
incb
pop
mov
arpl
jo
xlat
cmp
cmp
fmull
jle
ss
iret
xchg
or
outsb
lcall
and
push
in
dec
inc
hlt
xchg
xlat
test
rolb
pop
mov
incb
cmp
mov
xchg
sbbl
frstor
sarb
pop
in
test
fwait
add
iret
jp
dec
mov
ss
jb
pushl
push
push
popa
mov
fld
cmpsb
push
dec
adc
jmp
jmp
daa
add
popa
dec
pop
push
bound
repnz
pop
sbb
int3
insb
fcmovbe
push
test
sub
push
push
mov
in
stos
idivl
mov
aas
in
add
test
xlat
fnstenv
lcall
lods
test
out
enter
dec
in
popa
cmpsb
mov
sub
sbbb
pop
inc
fidivrl
xchg
xchg
clc
daa
fwait
jmp
or
xchg
movsb
negl
cmp
fdivp
jo
roll
dec
and
shll
xchg
dec
cmp
psrld
xor
jae
out
fwait
cli
jg
jge
mov
idivl
sbb
xchg
mov
sub
rorl
mov
mov
xchg
jge
or
fdivrl
inc
adc
push
or
sub
pop
add
or
push
fimull
jg
das
or
or
pop
dec
jnp
inc
popl
dec
or
adcb
xor
and
cmpsb
fadds
aas
fidivl
push
mov
cmpsl
in
movsb
cltd
sbb
mov
divl
in
jo
sub
dec
sub
sti
push
mov
sbb
xchg
test
stos
mov
push
das
mov
sub
mov
mov
ds
scas
je
mov
shrl
jp
sbb
stos
or
push
pop
mov
test
adc
cmp
pop
loop
adc
cmp
inc
xchg
mov
inc
daa
push
mov
jae
push
dec
add
cmp
repz
xchg
add
jg
mov
ss
sarl
fistl
imull
add
inc
out
popa
loop
lea
aaa
outsl
push
jp
adc
push
sub
test
ljmp
sub
stc
sub
notb
xor
scas
pop
cmc
in
std
mov
sub
test
arpl
roll
mov
shll
or
sub
add
aaa
lds
mov
mov
popa
rorb
daa
pop
insl
subb
cmc
jmp
fdivrp
jmp
addl
lret
enter
pop
std
cmp
push
sbb
mov
jg
fiadds
cli
test
fisubrs
mov
adc
sbb
xchg
int
addb
jns
cwtl
pop
mov
add
or
or
lahf
push
lahf
inc
mov
xor
or
mov
sti
cmpsb
test
mov
daa
sub
sbb
cmpb
jmp
call
dec
out
sub
sub
sub
or
roll
fdiv
arpl
cmp
cli
pop
and
movb
stos
stc
movsb
subl
xchg
xlat
fwait
aas
add
or
and
dec
mov
hlt
pop
imul
mov
or
test
jg
mov
xchg
cmp
mov
jg
pop
sarb
jns
mov
repnz
cmp
insl
call
arpl
enter
or
cmp
inc
mov
rclb
lods
mov
push
ja
fwait
negl
in
add
fadds
bswap
notl
imul
mov
sbb
jb
mov
cmp
add
inc
arpl
mov
inc
pop
mov
mov
jnp
leave
lret
adc
out
scas
push
fdivr
inc
fwait
or
test
dec
push
sbb
push
test
insl
sub
mov
ss
lret
cli
cmpsb
int3
imul
sqrtps
jnp
jbe
xlat
cmpl
pop
jbe
cmpsb
or
mov
or
fld1
cmp
mov
adc
cmp
mov
sbb
out
fisttps
aas
add
xor
add
jno
cmp
in
rorb
jg
mov
sbb
jmp
xor
sub
cwtl
dec
inc
push
adc
decl
es
out
cmp
bound
lds
jge
or
sarb
cmp
jg
and
ret
jg
test
ficomps
out
scas
cmpl
mov
or
add
pop
cmp
dec
mov
jg
pop
leave
pop
cmp
mov
xchg
cmp
dec
mov
ds
js
sbb
and
mov
inc
arpl
pop
imul
sbb
test
mov
sub
cmp
pop
inc
cmp
jg
or
mov
or
jg
mov
add
mov
add
xchg
clc
pop
add
test
push
pop
mov
sbb
das
sbb
jmp
dec
clc
cmpsb
sub
inc
sbbl
sarb
jnp
addb
push
pop
repz
pop
mov
pusha
push
push
add
cmp
cli
jmp
or
cmc
pop
or
or
repnz
stc
add
pop
call
sbb
stc
cmp
sbb
shr
jns
outsb
enter
pop
out
rorl
dec
inc
cmp
cmp
jne
mov
sbb
fistpll
add
test
jns
cmp
mov
sti
cmp
lahf
arpl
mov
mov
mov
cmp
cli
jns
imul
popf
bnd
outsl
sbb
cmpsb
fsubrs
mov
cmp
sbb
mov
mov
inc
push
insl
out
pop
stc
or
push
data16
xchg
inc
cmp
mov
cmp
sbb
jg
movsb
inc
push
pop
mov
pop
mov
mov
sti
sarl
cmp
jle
stos
loop
jns
sbb
clc
dec
adc
movsb
pop
mov
lret
iret
add
pop
pushf
or
pusha
sbb
mov
mov
mov
fimull
add
mov
add
repz
mov
lahf
add
cmp
dec
icebp
mov
jae
add
aad
nop
test
or
cmpsb
ret
aam
in
xor
gs
mov
mov
sbb
or
sbb
fimull
add
les
inc
or
pushf
pop
add
add
push
addl
fldenv
pop
pusha
dec
aas
and
fnstcw
add
leave
sbb
rorl
lcall
lahf
dec
repz
cmp
test
es
cmp
imul
sbb
xchg
test
and
call
add
cmp
or
mov
sti
jge
cmp
imul
or
sbb
mov
jg
int
push
or
xchg
rorb
pop
cmp
jg
mov
stos
out
cltd
stc
mov
cmpl
add
mov
and
inc
mov
sbb
jle
xchg
add
fcomp
fstpt
mov
mov
adcb
add
dec
je
mov
negb
mov
add
cli
inc
or
jb
jb
or
xchg
mov
add
js
pop
dec
out
cmp
sahf
stos
mov
pop
jge
out
mov
aas
pushf
and
cmp
clc
imul
sbb
test
or
inc
pop
sbb
jns
push
xchg
mov
js
out
loopne
cmpsb
add
inc
inc
pop
out
or
or
orl
add
movsb
aas
call
jle
roll
add
adc
rolb
add
push
mov
pop
test
cmp
addr16
lock
fisubl
mov
stos
dec
cmp
ficompl
stos
mov
cmp
xor
pop
mov
loop
cmp
cmp
cs
inc
or
inc
mov
inc
mov
scas
scas
mov
cmp
cs
cmp
jno
pop
cmp
cli
cli
adc
jle
mov
pop
arpl
out
pop
adc
negb
add
mov
mov
lods
add
xor
add
sbb
push
or
mov
mov
adc
shrb
cmp
addb
mov
dec
add
subl
fstl
sahf
stc
dec
adc
cmp
cmp
dec
mov
or
jne
sbb
scas
mov
inc
inc
or
inc
cli
sbb
cwtl
xor
mov
jecxz
test
or
pushf
mov
or
push
xorb
dec
push
out
sahf
cmp
sub
lods
gs
dec
cld
jmp
aas
mov
mov
mov
cs
icebp
and
add
insb
sub
inc
xchg
les
jge
push
inc
or
mov
add
push
mov
hlt
mov
out
leave
or
jae
mov
adc
jo
cmpsb
lcall
mov
inc
jns
ljmp
sub
js
push
push
jecxz
mov
mov
add
dec
mov
mov
add
add
jg
mov
lcall
lcall
inc
int3
pushf
push
xor
cwtl
scas
iret
adc
mov
push
pop
pop
push
inc
add
jae
dec
lcall
std
stc
mov
mov
mov
sbb
mov
imul
stos
cmp
add
test
fadds
cmp
cmp
sbb
fsubs
adc
adc
adc
out
cmp
fistps
sti
or
aaa
or
jbe
push
mov
scas
or
mov
fs
imul
jmp
xor
cmp
mov
cmp
jno
filds
sbb
mov
stos
and
add
mov
jbe
lds
insb
pop
inc
aaa
mov
sbb
xlat
inc
mov
in
daa
or
jne
cmp
mov
aam
sbb
sbb
add
lret
aaa
inc
ja
mov
adc
inc
cmp
cmp
mov
or
adc
aas
mov
and
mov
bound
dec
inc
add
mov
or
cmp
mov
mov
test
sbb
cwtl
adc
cmp
dec
es
xchg
add
sub
ja
or
xchg
dec
pop
call
call
lods
dec
xor
cmp
or
imul
or
sbb
div
pop
push
mov
repz
mov
outsb
add
lahf
fiaddl
fsubl
xchg
or
add
mov
mov
or
cmp
cwtl
xchg
fs
sub
adc
stc
or
cmp
flds
sbb
cmp
sbb
cmp
mov
sbb
jle
push
test
jns
js
adc
push
xorb
add
mov
or
lea
cmp
sbb
add
pop
daa
pushf
xchg
pop
push
pop
mov
jge
jnp
push
sbb
sbb
je
jp
cmp
and
arpl
xchg
mov
imul
test
or
inc
mov
xchg
hlt
cmp
push
and
jp
mov
push
addb
pop
aaa
jge
jns
sub
xorl
ds
pop
mov
into
rcrl
fwait
or
idivl
push
inc
inc
addb
int3
lahf
push
out
js
pop
dec
js
addb
xchg
mov
gs
push
xlat
inc
mov
dec
cmp
mov
sbb
cmp
ds
lcall
jp
test
sbb
js
cld
or
sub
mov
add
cmpb
dec
cmp
dec
and
mov
clc
les
push
mov
mov
adc
cmp
mov
js
cmp
mov
stos
sub
popa
add
decb
addr16
or
dec
jp
add
or
jnp
or
sti
mov
sbb
sub
or
cmp
sub
cmp
int3
sub
jb
popa
dec
jg
mov
cmp
cmp
or
xlat
inc
or
mov
cmp
or
fdivrs
clc
mov
jp
xlat
cmpb
cld
jnp
mov
mov
cmpb
mov
add
and
mov
cmp
sbb
sbb
cmp
sbb
xchg
or
sbb
mov
jle
test
mov
dec
cmp
pop
cld
sub
sbb
or
sub
stos
jns
jp
pop
cmp
or
xchg
jg
mov
cmp
stos
enter
lcall
stos
jnp
aas
jg
sarb
out
push
cmp
mov
xchg
jae
sbb
xchg
inc
jle
je
mov
cmp
addb
pop
pop
js
add
std
xor
mov
test
mov
cmp
test
sbb
aam
jbe
or
cmp
mov
dec
repz
les
sbb
sbbb
icebp
push
mov
mov
and
adc
pop
cmp
or
xlat
xorl
mov
mov
aaa
repnz
cmp
out
push
jecxz
mov
das
rcrl
ljmp
fs
mov
cld
push
xchg
add
call
shl
in
push
inc
adc
popa
ljmp
jmp
fmulp
xchg
fldcw
imul
popf
sbb
jg
popf
insl
mov
sbb
mov
sarl
and
loopne
push
insl
cli
in
adc
cmp
aaa
mov
cmp
fcmovnbe
mov
adcb
push
push
dec
fwait
push
shlb
cmp
mov
mov
mov
scas
or
arpl
push
mov
mov
cmpl
sub
aaa
cmpl
and
jecxz
aam
sti
aam
test
mov
out
mov
mov
mov
ja
in
xchg
mov
adc
sti
std
add
enter
pushf
fwait
xchg
push
cmp
xchg
jbe
push
xor
bound
out
cwtl
adc
daa
cmpb
pushf
cmp
leave
mov
cmp
dec
test
lock
adc
or
mov
push
xchg
jp
sbb
out
lods
pusha
mov
cmp
jne
pop
pop
sbb
or
daa
sub
mov
cmp
mov
add
ja
fisttps
adc
std
jecxz,pt
mov
jg
insl
sub
orb
aaa
lahf
lods
mov
dec
cmp
aaa
ja
ds
daa
mov
cmpb
xlat
scas
sbb
jns
sbb
add
jnp
cmpb
cmp
add
sbb
leave
test
clc
jg
sub
add
mov
push
cmp
mov
cmp
cmp
xor
cmp
out
or
mov
mov
rorl
pop
mov
int
xchg
jno
pop
push
mov
lcall
cmp
and
test
sahf
add
push
mov
bound
xchg
pop
add
inc
sbbl
mov
sbb
inc
mov
cmp
arpl
sub
dec
aam
mov
cmp
arpl
pop
xchg
cmp
fstpt
jnp
imul
push
or
mov
es
or
test
inc
mov
out
loope
test
push
sbb
adc
or
cmp
gs
dec
dec
outsb
cmp
subb
in
dec
insl
cmpb
lret
pop
jle
mov
imul
xchg
outsb
out
add
fcomp
sub
add
pusha
or
add
fistpl
add
movsb
pop
xchg
das
adcl
mov
out
add
bound
push
pop
jecxz
mov
jecxz
mov
inc
push
push
stos
pusha
sub
aad
aaa
jae
mov
or
test
pop
popa
lcall
sbb
lds
inc
add
imul
nop
add
insl
mov
fwait
cmp
xchg
push
cmp
faddl
cmp
imul
aam
aaa
push
push
jg
and
jns
test
das
ss
scas
or
dec
xchg
mov
sarl
fsubrs
xorl
add
mov
mov
pop
inc
add
test
fdivrl
roll
dec
sbb
cmpl
cmp
xchg
add
push
sbb
loope
and
pop
mov
pop
sbb
dec
fcompl
mov
pop
sti
inc
and
aas
js
addr16
cmpsb
out
sbb
mov
sub
cmp
sti
pop
pop
aas
cmp
jg,pt
frstor
sbb
sbb
test
cmp
mov
inc
lds
sbb
sbb
jmp
push
das
adc
cmp
and
cmp
or
cmp
add
cmp
pop
lock
xchg
in
adc
aad
dec
cmp
mov
dec
mov
out
lods
xor
dec
inc
ret
aaa
cmp
mov
sahf
stc
cmp
add
add
cmp
push
pop
subl
mov
cmpsl
cltd
cmp
add
xor
push
jg
xchg
adc
sbb
fcomps
cmp
or
test
jnp,pt
fisubrs
or
out
add
cmp
or
xchg
add
push
jnp
xor
lret
adc
mov
sub
cmp
inc
cmp
jg
ret
outsb
popl
xchg
jp
inc
or
jno
out
sub
adc
mov
mov
popf
mov
idivl
cmp
sub
or
jno
jg
mov
xchg
sbb
addr16
pop
add
xchg
out
idivl
imul
dec
push
or
popa
sub
out
add
add
mov
mov
fwait
lahf
sbb
out
sub
cmp
jb
lods
addl
scas
adc
out
sub
xlat
popa
mov
xchg
mov
test
fs
and
adc
inc
adc
aad
mov
pop
out
mov
mov
and
or
ja
jecxz
jg
leave
add
xor
outsl
mov
jmp
cmp
mov
mov
mov
inc
or
xchg
jnp,pt
mov
add
cli
dec
xor
mov
inc
jg
jb
adc
stc
addr16
dec
cmp
out
or
mov
dec
mov
ja
adc
inc
mov
inc
sbb
push
adc
add
scas
rcl
testl
mov
out
add
jmp
leave
jnp
jnp
addr16
mov
leave
push
adc
cmp
lahf
inc
out
cmpsl
cmp
cmpsl
or
daa
xchg
out
push
add
dec
fucomip
adc
cmp
or
mov
aaa
add
cmp
ds
jb
inc
cmpb
cmp
add
pop
ss
dec
out
cmp
and
or
cmp
sbb
cmp
cmp
dec
cmp
sahf
cmp
sbb
pop
sub
or
imul
mov
pop
xlat
mov
and
cmpl
mov
loop
ret
enter
mov
mov
or
cmp
lds
outsb
lahf
jp
and
xor
adc
xor
or
inc
mov
jns
sbb
or
mov
test
adc
vmovss
adc
cmp
pop
arpl
mov
cli
es
sbb
addps
add
sbb
out
jp
pop
pop
cmc
mov
pop
out
call
mov
pop
movb
iret
dec
stc
mov
insl
iret
inc
pop
mov
das
jno
sbb
iret
jno
xchg
bnd
pop
mov
sbb
iret
pop
pop
xchg
dec
scas
mov
pop
jg
or
lods
fidivs
dec
in
jb
mov
xchg
push
sbb
cmp
pop
ret
cmpl
and
sbb
and
addb
ffreep
lahf
xchg
cmp
loopne
mov
mov
push
popf
cmp
add
aaa
cmp
cmp
cmp
push
cmp
add
inc
sbb
pop
je
aaa
push
xchg
add
bound
pushf
dec
mov
jg
in
xorl
out
mov
jmp
imul
mov
adc
mov
cmp
xchg
add
mov
or
jmp
or
es
add
addl
mov
aaa
xchg
outsl
ljmp
sbb
cmp
fistpll
mov
cwtl
mov
add
cmpsb
pop
jg
pop
sbb
sbb
xlat
cmp
ds
in
dec
inc
cmpsb
mov
mov
mov
sti
add
mov
aaa
jns
xchg
ud1
cmp
mov
lcall
push
jg
cmp
or
mov
and
out
dec
inc
cmp
sub
mov
mov
popa
or
test
xchg
push
pop
add
pop
cmp
movsb
dec
push
xchg
cmp
sarb
inc
mov
push
sti
cmp
pop
dec
inc
xchg
mov
stos
test
in
mov
nop
into
movsb
cmp
adcb
into
xchg
jo
cmp
out
mov
test
dec
js
cmp
push
jl
cmp
fidivrl
cltd
mov
enter
cmp
cmpb
or
add
mov
add
inc
push
aas
add
out
repz
mov
fdivrs
mov
fnstsw
cmp
ret
xchg
test
les
pop
add
or
xlat
mov
sbb
add
jne
cmp
pop
movsl
out
cmp
repz
and
enter
cmp
cmp
and
mov
fists
fstl
xchg
orl
out
insb
mov
push
or
add
sbb
sbb
outsl
cmp
inc
ret
fwait
xlat
cmp
mov
mov
mov
or
aaa
idivl
cmp
sbb
imul
pop
dec
sarl
out
jnp
leave
jno
cmp
sti
push
sbb
das
jl
test
or
aas
inc
inc
sub
xchg
mov
clc
inc
fildll
inc
rorl
cwtl
xchg
cwtl
pushf
xorl
push
push
add
dec
and
lods
lret
stc
aam
add
imul
in
push
test
add
dec
andl
mov
dec
sub
mov
or
inc
add
cmp
cmp
sti
push
je
push
loope
xchg
fcmovnb
jnp
dec
test
or
pop
jg
dec
in
push
cmp
cmp
jmp
cmp
and
popf
cmp
fimuls
or
add
cmp
mov
xor
cmp
cmp
test
fstp
addb
xchg
adc
repz
xchg
les
ljmp
out
unpcklps
dec
imul
cmp
dec
adc
out
in
jbe
pop
inc
fdivrs
setbe
add
and
lcall
mov
push
cmp
ljmp
mov
jnp
mov
iret
xor
jno
jo
out
pop
pusha
xorl
call
mov
hlt
inc
int
pop
call
std
add
xor
jno
jo
out
jnp
cmp
cld
add
imul
inc
add
fs
jbe
pushf
ljmp
dec
cmp
adc
push
sbb
lcall
cmp
add
mov
test
mov
push
sbb
jnp
ficoms
fisttpl
mov
mov
dec
sbb
inc
xchg
in
mov
xor
sbb
mov
jmp
mov
cmp
add
sbb
out
mov
jg
mov
out
test
clc
les
push
jg
jbe
or
pushf
adc
jge
idivb
packsswb
jns
inc
aaa
lcall
mov
jb
push
popf
mov
xlat
mov
inc
push
mov
test
jbe
add
push
call
lods
push
mov
jmp
xchg
shrb
popl
mov
je
les
cmp
pop
sub
sub
mov
imul
fnstenv
out
mov
xchg
xchg
mov
arpl
inc
jb
insl
xchg
arpl
cmpb
pop
imul
icebp
leave
outsb
cmp
add
call
inc
push
mov
xchg
cmpl
mov
ja
and
cmp
idivl
movsb
sbb
lods
cmp
mov
and
cltd
mov
pop
mov
ljmp
push
or
loopne
adc
fdivr
add
xchg
repnz
inc
add
rorl
mov
cmp
dec
push
dec
xchg
aaa
xchg
pop
push
stc
xor
sbb
push
sarb
cmp
mov
add
negb
dec
cmp
inc
add
mov
stc
push
jg
mov
cmp
cmp
out
fwait
mov
xchg
mov
cmp
mov
out
jg
dec
out
cmp
pop
jge
sbb
dec
pop
mov
push
out
jmp
xor
mov
cld
add
xor
mov
pop
out
andl
push
in
pop
pop
lahf
pop
pop
cmp
cwtl
test
cmp
dec
xorl
testl
or
jno
outsl
inc
data16
call
xchg
js
aas
jp
cwtl
lea
push
dec
dec
jg
jbe
sbb
sti
out
cmpsb
mov
stos
lret
cmc
xlat
addl
idivb
js
cmp
and
add
out
sbb
out
add
sub
inc
dec
jnp
lods
aaa
mov
mov
push
mov
into
shlb
jle
push
leave
fs
pop
negb
scas
mov
jnp,pt
lea
sbb
sbb
mov
and
and
sti
push
leave
dec
dec
inc
out
mov
out
jbe
cmp
dec
fcom
dec
inc
ja
dec
mov
das
jp
test
or
add
lods
ret
dec
lea
jl
fs
pop
pop
cltd
adc
out
adc
add
dec
push
cmpsl
push
popf
in
sbb
cmp
or
out
jnp
add
imul
or
flds
jmp
aaa
cmpsl
mov
mov
imul
lds
sbb
add
out
dec
push
add
inc
sbb
and
ja
xchg
xchg
imulb
cmp
mov
mov
clc
jnp
ja
cmc
xor
add
imul
push
jp
pop
pop
aam
jae
adc
mov
push
mov
or
test
or
xchg
adc
mov
push
mov
dec
add
test
imul
enter
mov
insb
push
add
rcrb
es
mov
addb
push
imul
add
xchg
or
arpl
stc
nop
xlat
ret
mov
lahf
sbb
pop
mov
pop
mov
xchg
pop
mov
sti
pop
add
inc
cmp
mov
ret
adc
ja
fwait
fwait
in
add
sarl
fnstenv
dec
cli
cmp
sbb
or
jl
mov
and
dec
sbb
jns
mov
sbb
pop
or
ret
dec
jmp
mov
imulb
in
insl
fs
jnp
add
out
sub
add
flds
jp
or
aas
mov
dec
add
stc
addr16
mov
rorb
jg
cmpsb
test
cmp
sahf
add
push
adc
or
mov
sbb
test
mov
inc
das
std
mov
je
aaa
fiaddl
data16
cli
jo
and
inc
or
sub
in
inc
mov
or
sub
add
jne
push
mov
das
jns
sbb
or
xchg
movsl
mov
cmp
jge
adcb
cld
mov
mov
push
imul
mov
mov
mov
in
mov
add
fdivrp
nop
add
dec
sub
ds
flds
imul
dec
cmp
dec
cmp
or
mov
push
mov
test
shll
dec
push
stc
cmp
pop
test
xchg
cmp
add
shlb
in
cld
out
adc
and
sahf
ja
sbbl
dec
jns
mov
inc
sbb
test
sbb
rorb
cmp
sbb
fiaddl
mov
out
movsl
dec
add
lahf
in
jo,pt
and
mov
inc
add
add
cmp
repnz
mov
aaa
or
dec
lret
push
xchg
or
in
cmpb
cmp
dec
mov
xchg
mov
jnp
fcomi
imul
ds
enter
cmpb
or
inc
xor
inc
jg
jb
cmp
jmp
mov
scas
enter
mov
and
mov
or
add
jg
pop
leave
ficompl
aaa
lock
movsl
jg
inc
adc
mov
stos
adc
add
mov
mov
nop
cmp
sbb
into
jmp
push
imul
aam
loopne
inc
inc
mov
xor
cli
lcall
jecxz
jne
inc
arpl
std
pusha
js
jnp
clc
imul
imul
mov
jl
jae
sti
or
sbb
std
aaa
pop
dec
pop
test
icebp
xchg
out
cmp
imul
jmp
lds
xor
dec
ror
mov
test
push
mov
xor
or
pop
mov
pushf
cmp
mov
xchg
pop
mov
pop
mov
or
inc
pop
mov
and
add
pushf
aaa
pop
xchg
fsubs
cmp
nop
sbb
push
cmp
les
sbb
push
test
stc
sbb
adcl
jecxz
pop
addb
aaa
xchg
pop
lcall
flds
pop
stos
mov
add
lods
ret
aad
xor
out
mov
into
jg,pt
leave
adc
sub
add
add
mov
and
add
scas
aad
push
jnp
shlb
or
sbbb
inc
lds
dec
cmp
pop
rorl
repz
dec
shrl
lods
pop
imul
sbb
mov
imul
aaa
lahf
fisttps
aam
mov
scas
or
add
or
mov
sbb
mov
mov
push
mov
pop
and
dec
mov
mov
mov
mov
fdivrs
loopne
cmp
mov
cmp
cmp
test
cmp
mov
add
or
xchg
xorb
or
jbe
jg
push
push
cmpsb
cmp
flds
and
pop
cmp
mov
cmpb
addl
cmp
pop
movl
mov
push
mov
les
xchg
dec
push
jl
aas
test
sbb
mov
mov
cmpb
addl
and
aaa
inc
mov
mov
mov
aam
aaa
popa
jge
mov
cmp
and
sbb
cmp
add
dec
mov
and
push
mov
jb
sbb
xor
aaa
add
enter
in
mov
mov
dec
jmp
add
or
mov
stos
mov
clc
mov
es
out
push
xchg
shrb
pusha
add
mov
icebp
sub
xchg
xor
and
cltd
out
mov
add
cli
inc
leave
cmp
push
mov
pop
sbb
add
push
pop
mov
push
pop
insb
les
add
dec
mov
cld
mov
push
gs
cmp
mov
fcomi
jle
pop
mov
jae
push
in
push
pop
frstor
jecxz
lret
ja
fdivr
jecxz
dec
out
cmp
sbb
or
mov
add
sbb
test
dec
insl
sbb
push
sbb
hlt
lods
add
mov
add
jmp
stos
sbb
test
pop
pop
adc
cmp
mov
push
pop
add
stos
or
cmp
je
jg
add
pop
jecxz
jae
cwtl
inc
sub
sub
xchg
xor
insb
or
push
es
mov
pop
sbb
lods
xchg
push
xchg
fwait
out
mov
xchg
cmpsl
rcr
pop
lcall
lahf
into
stc
or
xlat
or
add
test
mov
sbb
out
cmpsb
inc
stc
cmc
pop
lret
add
cmp
jbe
jmp
repnz
mov
pop
add
xchg
push
sbb
jbe
jo
xchg
cmp
mov
insl
dec
popf
out
mov
mov
xor
mov
nop
icebp
inc
sbb
dec
jmp
cmp
jp
call
pop
std
add
mov
cmp
push
mov
or
cmp
pop
scas
cmp
gs
imul
sbb
inc
test
mov
and
push
out
movsl
popf
or
sub
pop
mov
in
test
mov
call
fiaddl
xchg
cmp
xchg
flds
test
or
mov
inc
mov
jnp
mov
pop
sbb
and
bound
dec
add
add
subl
cmpl
test
scas
cmp
or
push
jge
lods
mov
or
mov
std
ds
cwtl
movsb
push
add
adc
pop
mov
hlt
add
or
and
lret
mov
ja
and
jg
das
clc
xor
stc
int
cltd
adc
mov
add
mov
outsb
cmp
insl
aad
mov
mov
scas
cmp
cmp
mov
insb
shll
add
stc
xor
or
mov
jg
cwtl
mov
cmpsb
or
cmp
jnp
xchg
mov
push
rorl
out
cmp
fsubrs
push
inc
jge
insb
jl
cmp
pop
pop
stc
ja
js
lcall
aad
jecxz
pop
or
mov
sbb
lods
sbb
fcomp
or
cmp
js
sbb
jnp
sbb
pop
sbb
mov
or
mov
dec
add
mov
cltd
jg
mov
pop
jg
or
mov
inc
adc
jge
pop
cmp
push
push
cli
test
mov
inc
cltd
or
cmp
xchg
sbb
imul
ret
jbe
mov
clc
cwtl
pop
add
imull
cmp
int3
mov
je
xchg
xchg
gs
mov
jg
and
maskmovq
mull
and
cmp
and
sub
inc
xor
xlat
dec
adc
cwtl
mov
xor
dec
jne
cmp
js
pop
cmpl
stc
mov
lahf
imulb
adc
dec
je
js
sub
cmp
dec
cmp
jge
cmp
push
inc
mov
movb
mov
js
dec
add
xchg
data16
jmp
cmp
dec
sbb
stos
jnp
sbb
pop
sbb
cmp
adc
inc
jge
cmpsb
fwait
mov
mov
pusha
in
pop
aaa
jnp
fildl
dec
inc
lds
nop
inc
xchg
dec
lea
pop
sti
cmp
lds
ds
shrl
cmp
imul
sbb
pop
push
aas
mov
cmp
sbb
cmp
cli
pop
add
sbb
cmp
mov
and
mov
in
adc
fisubl
cld
add
xor
xlat
jg
lds
mov
mov
into
or
fcom
push
add
push
ljmp
movsb
sarb
jnp,pt
js
arpl
mov
lret
sbb
mov
mov
sbb
add
jl
sbb
or
sbb
mov
dec
xchg
cmp
or
ja
loope
leave
popa
sbb
test
jo
mov
sbb
sbb
mov
ds
enter
fdivrl
lds
inc
push
repnz
loopne
add
jmp
pop
shrb
vmread
out
add
xlat
mov
mov
dec
ja
add
xor
divl
fs
cmp
and
js
jg
mov
clc
inc
adc
pop
sbb
push
nop
dec
push
mov
cli
test
js
or
out
inc
cmp
dec
imul
cmpsl
cmp
xor
jg
clc
lock
dec
jge
call
cld
mov
js
stc
in
mov
and
insb
jp
jle
sub
and
cmp
xor
pop
add
mull
dec
xor
xor
call
sbb
out
fs
stc
fs
sbb
cmp
jecxz
mov
js
cltd
inc
dec
push
ja
xchg
addb
js
andl
sbb
and
arpl
push
mov
jnp,pt
sbb
cmp
and
jnp
mov
loop
or
cmp
mov
cmp
cmpl
inc
xchg
adc
pop
scas
mov
aaa
std
out
cltd
add
and
fsubrs
cmp
jg
mov
rorl
shlb
mov
rcrb
inc
mov
push
push
pop
cmp
inc
sub
movsb
push
pop
xchg
add
pop
jmp
stos
pop
in
cwtl
icebp
pop
sarb
push
rol
add
nop
scas
ret
orl
inc
cmp
or
lea
cld
xor
lret
aaa
push
push
aaa
dec
mov
mov
dec
outsl
mov
push
outsl
mov
dec
pop
aam
push
mov
imul
xchg
sbb
mov
mov
mov
std
insl
jg
xor
shll
addr16
sbb
icebp
leave
mov
bound
ret
out
ficoms
in
xor
stc
aas
jge
sbb
cmpsl
adc
inc
or
cmp
jb
loop
or
lea
scas
loop
js
sbb
sbb
mov
jbe
rcrl
add
nop
mov
xchg
int3
add
lods
sbb
jle
sbbl
mov
js
imul
jnp
jg
pusha
mov
inc
leave
std
dec
ds
shrb
not
int
mov
aas
test
inc
push
movsl
sub
push
ret
jmp
lea
and
gs
mov
cmp
jne
fisubrl
adc
fstps
xlat
xor
dec
into
mov
je
or
sub
loopne
test
and
mov
fucomp
fdivrl
imul
insl
dec
mov
push
jmp
and
jne
sahf
test
insl
adc
inc
sbb
fcmovu
adc
mov
jle
out
adc
mov
cli
shll
and
xchg
or
push
add
pop
mov
jge
add
pushl
pushf
call
lea
je
cmc
adc
lea
add
xor
sub
adc
bsr
mov
cmc
add
jmp
cld
or
gs
cmp
cmc
adc
addl
push
sub
xor
cmpsb
inc
in
push
xor
jl
add
xchg
fwait
icebp
popa
into
outsb
test
jo
sti
dec
jg
jecxz
mov
fnstenv
adc
mov
ret
sbb
mov
mov
pushf
pushl
ret
mov
in
pop
shr
inc
jge
sub
stos
jne
into
and
lcall
pop
jne
icebp
enter
add
pop
mov
inc
mov
pushf
dec
sbb
scas
and
and
push
adc
jbe
in
bound
inc
sub
jg
aad
push
xchg
test
hlt
cmpb
xchg
int
popa
jae
in
sbb
ss
cmpsb
pop
sub
clc
and
das
xchg
bound
or
fcoms
jo
sbb
pop
and
into
idivl
hlt
push
xor
insb
and
push
movl
jmp
sbb
fmull
mov
or
jnp
testl
fcomi
push
mov
aas
loop
pop
mov
mov
pop
push
sub
stos
cwtl
and
sarb
bound
sti
outsb
push
mov
clc
in
stc
insl
out
jae
push
mov
mov
add
lock
xor
sub
mov
aaa
xchg
fistps
out
pop
jne
int3
mov
sub
pusha
xchg
jg
js
lods
adc
jns
icebp
cmp
scas
xchg
add
mov
mov
pop
cmp
mov
xor
sub
sub
cmpl
mov
cmc
push
call
cmp
testl
and
sub
inc
nop
les
mov
push
ljmp
mov
push
cmp
dec
inc
mov
movsl
push
mov
dec
mov
inc
pop
push
sub
cs
mov
fnstcw
imul
mov
in
fisubrl
jle
adc
or
sarb
add
jl
out
aaa
or
dec
pop
repnz
shll
leave
jg
subl
sub
mov
add
out
mov
inc
lock
sbb
cmpsb
push
repnz
insb
mov
push
test
and
pop
inc
push
int
add
out
int3
lcall
ja
shll
ret
add
lods
out
mov
cmp
int
xlat
mov
mov
xor
sar
dec
cmpl
inc
jmp
stos
mov
outsb
inc
mov
movsl
mov
insb
inc
pop
or
fdivrl
adc
int3
mov
cmpsl
cli
xchg
xchg
loop
push
and
imul
push
adc
lea
xor
or
fsubrs
jl
xchg
xorb
lock
mov
pusha
bt
cmp
mov
pusha
jmp
jno
cld
or
cmp
in
dec
test
popa
call
cmp
xchg
ljmp
mov
mov
sbbb
dec
mov
jg
and
nop
insb
leave
and
add
xchg
lods
pop
test
pushf
xor
pop
mov
xor
scas
cld
dec
cmp
xchg
xlat
mov
add
daa
mov
es
xor
xchg
sub
pop
out
mov
jmp
outsl
mov
or
mov
xchg
add
add
ret
dec
sets
inc
inc
pusha
inc
add
dec
jmp
push
pop
or
pop
movsl
or
popa
movsl
mov
daa
fildll
lock
adc
dec
mov
add
jge
test
xchg
cmc
dec
inc
pop
fwait
pop
add
adcb
sbb
out
mov
shlb
xchg
outsb
sti
mov
push
pop
mov
xor
shl
sbb
jp
xchg
aad
xor
inc
inc
sbb
daa
mov
mov
movsl
out
mov
hlt
sti
xor
mov
mov
bound
cmp
call
cmp
xor
mov
or
lret
push
jb
cmp
jle
xbegin
sub
cmpsw
repz
inc
cmp
in
push
jg
lds
cmp
cwtl
leave
sbb
adc
je
rolb
xchg
dec
dec
out
sbb
add
adc
sub
ret
mov
icebp
add
mov
mov
adc
repz
loop
popf
jbe
loop
test
rcrl
inc
dec
mov
push
fsubr
add
or
ds
jbe
and
in
js
sub
test
dec
lds
jno
sub
pusha
repnz
jmp
mov
or
outsl
mov
repz
stos
pop
arpl
adc
stc
xorb
test
sub
andb
fisubs
dec
sahf
xchg
cmp
neg
inc
sbb
xchg
mov
jne
dec
insl
sbb
fs
jo
loopne
adcl
out
mov
sbb
out
movsl
pushf
fdivs
xor
xor
push
mov
sub
movsb
out
sbb
mov
pop
inc
add
iret
xchg
cmp
push
in
or
lods
in
and
stc
sub
jno
pop
fdivs
movsb
jns
jmp
test
mov
jb
insl
insl
ficoml
add
lret
bound
out
rcr
sub
adc
pushf
enter
sub
jb
and
aas
mov
jmp
cmp
lea
notb
sbb
pop
das
xchg
adc
jnp
pop
gs
sbb
dec
xor
fs
add
addr16
jne
jb
push
popa
insb
jne
inc
add
lea
jb
subb
data16
xor
cld
std
aas
cmpb
sub
cmp
push
inc
pusha
in
add
or
sar
cmp
mov
adc
push
testb
test
int
insl
inc
cmp
ret
test
dec
bound
pusha
xlat
mov
and
cmp
mov
inc
sbb
and
sub
int
jnp
ja
sbb
jbe
mov
add
jnp
xor
loop
popa
popf
dec
testb
xchg
jo
and
adc
inc
cmpb
mov
mov
repz
movsb
cmp
lret
inc
xor
fs
lods
pop
push
or
rorl
jae
sub
lcall
cmp
xchg
xor
dec
lods
dec
inc
out
call
out
int
pop
sti
mov
mov
adc
cs
mov
in
and
shlb
arpl
add
and
jge
std
push
repnz
leave
repz
in
scas
jmp
mov
jno
mov
pop
xchg
ljmp
ficomps
in
je
jb
roll
jmp
out
mov
imul
div
pop
pop
fwait
test
hlt
lods
jno
pushf
idivb
inc
pushl
adc
or
stos
adc
out
cmpsb
mov
push
sub
xchg
ds
mov
pop
dec
data16
sbb
inc
lods
popf
jmp
dec
adc
loop
icebp
sub
dec
xchg
mov
clc
pop
mov
gs
push
popa
push
add
ds
lcall
jb
outsb
fcomps
and
inc
out
dec
add
push
cmp
inc
xchg
loope
stc
xchg
enter
fnstenv
xchg
inc
inc
push
pop
fdivrl
popf
out
not
push
enter
nop
clc
inc
xor
mov
fidivs
outsb
out
fwait
outsb
shl
xor
inc
inc
lret
movsl
pushf
add
jnp
adc
lds
or
movsb
das
mov
and
xrstors
jmp
idivl
jmp
inc
mov
and
mov
sbb
sub
or
insl
sbb
and
fs
hlt
xchg
add
aas
cmp
aad
movsb
and
fwait
mov
test
or
ret
mov
fmuls
lock
test
dec
xchg
lods
negb
cmpsl
sbb
repz
adc
fldl
test
sbb
test
test
repnz
jmp
mov
arpl
sbb
cwtl
mov
nop
push
mov
fisubrl
jae
inc
push
mov
sub
push
xor
int3
dec
mov
or
cmp
jns
push
mov
dec
jmp
shlb
jg
fxtract
mov
push
push
add
or
dec
cmp
fwait
test
xor
sbb
in
or
loope
push
mov
stc
pop
int
aaa
jae
or
adc
mov
mov
or
test
sub
or
popf
push
xchg
into
subl
pop
outsl
andb
aad
lret
enter
fdivrl
ror
movsl
cmc
ds
roll
adc
adc
fbstp
mov
stc
or
aam
aaa
mov
xchg
xor
fisubrs
adc
sbb
jl
or
cltd
mov
lahf
fstpl
stc
call
push
add
mov
pushl
movb
push
dec
mov
jmp
lcall
dec
insl
mov
sub
aad
push
scas
out
out
je
cmc
inc
ss
lcall
pop
out
xchg
xchg
add
jmp
add
mov
ret
aaa
fsubrs
js
imul
push
xchg
ret
rorl
push
shr
ret
ret
inc
mov
cmc
inc
fildl
jp
mov
add
aam
adc
test
out
dec
mov
daa
test
cmp
inc
inc
lods
xor
ret
push
mov
iret
cmp
lret
jmp
scas
xlat
or
pop
ja
fstpt
das
xchg
insl
adc
mov
lea
xlat
inc
cld
loope
mov
mov
push
cmovo
iret
scas
push
jns
lds
mov
mov
xor
lret
dec
pop
xchg
mov
enter
sbb
pop
stos
leave
add
mov
aaa
popf
pop
fisttpll
daa
mov
add
jmp
xlat
call
fwait
xlat
aaa
fwait
jmp
dec
and
ja
mov
ud0
sbb
xchg
enter
int
sti
pop
cwtl
add
fst
daa
mov
test
cld
insb
in
push
inc
sub
mov
addr16
loop
adc
jge
or
in
call
adcl
push
mov
inc
push
sbb
push
in
negb
les
mov
pop
mov
call
adc
adc
jo
hlt
sbb
bound
outsb
test
or
jne
xchg
push
test
cmp
cmc
push
sub
aam
mov
dec
push
mov
stos
lds
or
mov
pusha
nop
loope
and
in
sub
loope
gs
xlat
mov
xlat
hlt
or
lret
add
fs
popf
jo
js
jle
gs
ja
sbb
adc
or
out
sub
ficoms
fcompl
mov
cli
insb
sub
sbbl
dec
ja
roll
mov
pushf
push
mov
lea
jmp
stc
ljmp
sbb
jl
cmp
sub
jae
push
sub
mov
sbb
xchg
rcrl
push
sub
jae
hlt
pop
adc
xor
clc
gs
push
sarb
lea
stc
cmp
or
jns
xchg
sub
cli
push
scas
test
loope
cmp
scas
jmp
scas
pop
cmp
sbb
or
in
das
or
test
or
adc
cmpsb
sub
sbb
test
or
push
repz
ja
test
not
mov
dec
test
call
jl
and
mov
out
and
out
mov
es
dec
aas
addb
dec
std
lds
xchg
pop
int3
add
jbe
adc
mov
outsl
jge
pop
adc
fcmovnbe
and
xchg
push
jecxz
sbbb
dec
or
popf
add
cmpsl
or
xchg
ret
movsl
or
cmpsl
in
jne
mov
dec
jl
sbb
or
mov
mov
out
mov
add
cld
and
daa
sti
aaa
xchg
stos
push
call
nop
mov
or
sub
test
out
mov
or
inc
jl
lods
or
dec
mov
stc
mov
sub
fwait
add
fldl
mov
loope
dec
repnz
bt
test
xchg
bsf
movw
sar
bswap
mov
call
cwtl
test
add
daa
pop
scas
repz
aas
xchg
sti
pop
pop
xchg
xor
mov
das
adc
daa
outsb
mov
fcompl
mov
or
mov
out
nop
mov
outsl
shl
xor
or
jecxz
add
stc
push
aas
push
cmp
inc
jl
fs
int3
sbb
loopne
test
call
lahf
jge
adc
sbb
lea
adc
jne
mov
jne
icebp
pop
sbb
rcll
inc
push
mov
lods
add
jno
cmpsl
in
arpl
adc
outsb
orl
xor
sub
inc
sahf
scas
test
fbld
in
test
repz
fstp
adc
leave
jo
jne
arpl
pop
test
mov
and
scas
fimuls
or
xor
mov
test
sbb
sbb
cwtl
outsl
mov
push
mov
sub
add
adc
imull
sub
add
scas
mov
dec
mov
sub
into
outsb
cmpsb
sub
ret
pop
aaa
cmp
loopne
push
mov
xchg
mov
push
add
es
xchg
push
or
dec
mov
outsl
arpl
daa
jmp
jmp
test
and
fcomi
je
mov
xor
stos
hlt
cmp
mov
loope
sub
outsb
aam
aaa
cmpsb
mov
push
stos
adc
stc
cmp
inc
cmp
in
mov
inc
and
adc
mov
mov
insl
movsl
add
add
or
scas
jns
dec
cwtl
push
aad
xor
dec
sar
in
push
mov
pop
push
dec
xchg
and
movsb
repnz
inc
ljmp
fwait
lock
loope
data16
pushf
xor
stos
inc
rolb
mov
pushf
ljmp
mov
inc
cmpsl
sbb
shll
stos
call
jbe
test
pop
ja
mull
lods
mov
iret
xor
mov
bound
mov
mov
movsl
stc
aas
xor
push
xchg
sbb
sbb
ret
pop
pop
jg
mov
sub
cmp
xor
adc
and
cmpsb
add
stos
ds
mov
jno
add
gs
sbb
sbb
cli
cmp
and
mov
push
dec
mov
sbb
repnz
push
divb
fisttpl
sub
insl
pop
add
divb
fmuls
inc
hlt
in
inc
jmp
stc
jmp
xor
aam
loope
leave
iret
mov
xchg
les
addr16
cmpsb
and
flds
std
dec
enter
clc
push
movsb
mov
dec
adcb
popa
mov
enter
fsts
and
je
shld
rol
bsr
mov
dec
lea
btc
bt
add
sub
neg
push
pusha
mov
cmc
test
jmp
push
push
pusha
pushf
lea
je
cmc
add
btc
rcr
sub
lea
ror
btr
shr
shl
shl
mov
cmc
adc
shld
add
shr
shr
and
movzbw
add
setge
test
adc
mov
jmp
call
bswap
push
mov
pushf
movb
pushf
lea
jmp
pop
dec
std
sbb
xor
mov
jbe
add
xor
outsb
mov
pop
mov
adc
out
xchg
push
pop
adc
inc
mov
cmp
xor
adc
adc
into
imul
inc
adc
and
jo
outsb
enter
mov
aaa
sbb
pushf
add
push
push
bound
xor
adc
inc
cmpsb
fwait
xchg
into
imul
outsl
ss
xchg
sarb
jle
inc
sbb
lea
mov
icebp
inc
jp
mov
or
and
push
or
sbb
mov
sti
mov
rcrl
xchg
jle
into
or
ret
aam
js
jp
or
add
fdivs
dec
pop
test
js
pop
popa
popf
inc
in
fisttps
stc
inc
popf
iret
jae
fsubrl
push
dec
push
cmp
jnp
mov
add
add
mov
cltd
xchg
cmp
mov
cmp
leave
shrb
leave
sarl
fldenv
dec
js
fisttps
loopne
sbb
shlb
aam
cmp
test
gs
aas
mov
mov
adc
les
loop
push
ljmp
lcall
aam
je
dec
inc
mov
das
sub
fwait
xchg
or
cs
into
add
lahf
iret
std
aam
hlt
sub
fcomps
ja
ss
out
outsl
jnp
sahf
imul
cmp
call
sub
lcall
call
pop
mov
mov
inc
jnp
filds
fstps
fnstenv
xor
mov
mov
cmc
pop
xchg
push
xor
mov
les
mov
ds
sub
or
outsb
xchg
mov
loopne
aas
xor
daa
out
sub
sub
jmp
push
outsb
mov
adc
adc
test
cltd
jo
aaa
outsb
scas
adc
mov
pop
push
sbb
sti
inc
xchg
sti
cmp
pop
pop
ja
mov
inc
movb
sti
or
pop
stos
std
insl
mov
ja
add
lock
bound
mov
xchg
mov
mov
pop
mov
add
xor
push
pushf
lea
fwait
mov
mov
mov
mov
lret
or
cmp
mov
xor
or
pop
movsl
fistpll
xor
cmc
ret
fdivl
mov
mov
pop
cwtl
sbb
xor
cmpl
cltd
and
in
jne
sub
rcrl
aas
cmp
outsl
and
in
pop
push
hlt
sub
xchg
scas
push
mov
add
aam
out
inc
push
adcb
je
inc
dec
sarl
pop
test
sbb
fs
pop
jbe
in
scas
mov
shr
and
jl
sbb
mov
pop
aaa
cmpl
arpl
lcall
adc
jl
imul
int
jne
jl
jmp
adc
insb
mov
xor
js
jge
flds
ss
push
and
cmp
sub
push
xlat
vmread
mov
jle
sbb
mov
and
in
lret
xchg
ffree
loopne
daa
test
sub
ds
jle
shr
loop
and
sbb
in
daa
gs
cmp
shl
pusha
cmp
and
test
std
out
cltd
sbb
sbb
push
outsb
mov
dec
mov
stc
mull
les
add
pop
shl
mov
mov
aas
add
dec
add
mov
mov
dec
mov
cmp
cli
inc
pop
mov
pop
sbb
dec
jo
xor
aaa
mov
aad
repnz
add
test
xchg
mov
outsb
test
push
stos
insb
push
pop
mulb
and
sub
xchg
xchg
test
adc
std
or
or
xchg
adc
mov
add
push
sbb
mov
repnz
sub
loopne
cs
pop
inc
dec
dec
inc
push
dec
xor
cs
insb
add
pop
std
std
and
jb
xor
jne
insb
cltd
int
aas
int
outsb
sbbl
lret
add
iret
sub
jge
cltd
in
dec
dec
inc
pop
and
aam
pop
rolb
fldcw
adc
test
jnp
popf
mov
sub
adc
xchg
push
push
test
aad
or
ror
jmp
sbb
and
setno
lods
jmp
outsl
insb
xor
cs
insb
add
mov
setb
ror
push
mov
cmc
cmpb
push
call
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
mov
push
mov
pop
je
add
insb
rcrb
pop
test
or
arpl
call
inc
or
inc
loop
stos
bound
jns
mov
daa
jo
xchg
sbb
sub
push
mov
insl
shl
sbb
loopne
cmp
outsb
decl
xchg
sub
jne
faddl
cwtl
out
cmp
fiadds
cs
popa
in
adc
xchg
stos
sub
mov
mov
pop
jo
clc
pop
js
sub
mov
repnz
push
mov
movsb
sar
mov
mov
push
pushf
ret
cmc
adc
pop
fidivs
out
in
jmp
iret
shlb
mov
in
cmc
and
iret
jbe
jnp
pop
sub
lret
notb
fnsetpm(287
jmp
and
insb
and
aam
cld
dec
pop
imul
dec
xchg
sti
sbb
call
and
lods
cmpsl
jb
outsl
data16
testb
stos
ljmp
cli
sarb
cmp
pusha
lea
xor
dec
mov
mov
fwait
or
dec
or
inc
sub
mov
jmp
aas
jge
iret
ja
arpl
das
in
sbb
mov
cmpl
mov
out
xchg
outsl
pop
ffreep
adc
mov
lds
cmp
sti
stc
sub
lret
sbb
push
mov
stc
fdivrl
xchg
ret
pop
imul
inc
cmp
or
in
mov
call
mov
mov
jbe
jae
mov
jo
or
dec
stos
aaa
or
xor
pop
addr16
pop
test
repz
jne
xchg
cmp
sbb
mov
loope
pop
movsl
jmp
xor
or
ret
outsl
mov
inc
cmpsb
in
and
dec
jmp
lret
out
and
xchg
cmp
in
ficompl
sbbl
ret
in
popa
andl
jmp
rcl
sbb
xor
repz
xor
icebp
pop
and
cmp
aam
das
xchg
mov
outsl
andb
sbb
les
aaa
mov
lods
jecxz
lret
in
mov
or
cld
negl
or
pusha
mov
mov
inc
mov
test
out
jnp
call
xchg
mov
mov
mov
jp
es
sub
popf
aad
adc
inc
xor
imul
shrl
jg
mov
inc
or
and
mov
out
add
or
mov
negb
fcmovnbe
jb
sbb
insb
ret
fstps
jg
mov
mov
ret
cmp
ss
sub
rclb
push
lcall
mov
xchg
outsl
pusha
mov
or
shlb
pop
mov
mov
imul
push
sbb
popf
cli
sbb
insl
lods
test
mov
int
outsb
xlat
loopne
fistl
mov
mov
cli
subb
mov
push
js
repnz
mov
shl
aam
and
mov
cmp
inc
cmp
adc
push
add
sti
pop
fwait
scas
jnp
fisttps
sub
daa
push
mov
adcb
test
mov
add
cmpsb
mov
jnp
mov
cwtl
int3
fstp
nop
mov
ja
outsl
mov
adc
insb
mov
ds
ret
sub
pop
mov
std
inc
xchg
imul
push
sbb
jo
or
xchg
dec
popa
mov
or
xor
aam
jo
outsl
xchg
pop
iret
cwtl
inc
mov
mov
sub
testb
adc
int
mov
push
sbb
stos
in
les
add
add
jae
jg
or
cmpb
push
inc
pusha
mov
cmp
or
mov
dec
mov
add
pop
seta
sub
push
scas
push
cmp
or
popf
mov
jge
jmp
sti
mov
jb
jmp
addl
or
push
xchg
daa
jns
lret
out
mov
cld
lahf
filds
mov
std
adcl
mov
push
adc
in
inc
jns
cmpsl
add
add
mov
xor
clc
rcrb
adc
loope
outsl
pusha
push
lods
jg
mov
repz
xchg
fldenv
inc
cmpsl
stc
mov
pop
dec
into
daa
arpl
das
in
cmc
cmp
movl
call
mov
lea
int
pop
in
jge
adc
daa
mov
dec
xor
or
stc
sbb
jns
or
rclb
cmp
adc
mov
into
and
and
lea
push
push
repz
dec
cwtl
loope
and
xchg
xchg
int3
mov
pusha
leave
cmc
out
fs
pop
aas
push
push
and
mov
aaa
mov
gs
int
mov
imul
in
jae
or
std
adc
stos
arpl
in
jge
in
test
add
cli
jg,pt
xor
jne
sbb
aad
sub
sbb
xor
shl
pusha
sub
jns
fcom
cmp
int3
add
push
test
sbb
cld
push
imul
in
sub
mov
ss
jne
jmp
xchg
stc
inc
jne
or
mov
mov
push
and
or
mov
inc
je
in
xor
mov
repz
pop
movsb
xor
jb
fs
push
stos
sub
cltd
jns
jne
mov
pop
mov
jne
mov
cmc
push
ds
mov
rcrb
gs
dec
and
jecxz
xchg
pop
ss
sti
inc
xor
insl
dec
or
scas
cmp
ss
pop
movsl
jne
js
mov
mov
fbstp
add
xchg
mov
jp
ljmp
cwtl
xor
pusha
adc
les
rcrb
loopne
pop
je
cmp
or
or
mov
pop
pop
call
cmpsl
call
repz
xor
jns
dec
and
jp
out
push
movsl
daa
sub
pop
leave
mov
mov
push
inc
int3
data16
dec
cmp
addb
inc
xor
or
lds
jmp
icebp
push
cmpsb
mov
sbb
push
mov
mov
out
jge
test
dec
mov
ss
sbb
loop
inc
pop
sti
or
ljmp
iret
cmpsl
jle
mov
jecxz
mov
mov
dec
in
xor
cmpsb
sub
jecxz
sti
pop
pop
aad
sub
movsb
add
sti
inc
xor
mov
test
mov
scas
or
lcall
std
jp
loopne
addl
or
and
aad
jge
add
shr
cmc
xor
mov
out
jne
out
mov
lea
call
jmp
aaa
dec
ljmp
lea
lock
aam
dec
mov
mov
cli
jmp
adc
ja
jne
fisttpl
inc
mov
sarb
fdivrl
push
leave
dec
stos
pop
inc
xchg
sbb
sbb
ret
lock
mov
add
jbe
xor
ja
pusha
xchg
ret
jo
or
in
test
mov
and
jbe
push
insb
cmp
outsb
pop
jmp
enter
xchg
xchg
stc
pop
dec
ficoml
dec
test
ja
xor
push
or
cmp
jmp
lods
cmp
les
xor
xchg
ret
push
ja
mov
mov
cmc
arpl
jl
sbb
xor
xchg
ret
dec
inc
cmp
mov
cltd
and
cmp
xor
jnp
rcrl
std
outsb
mov
push
subb
dec
inc
mov
and
jb
repnz
decb
into
adc
add
stos
cmp
cmp
repz
daa
out
push
flds
jne
aam
lea
jbe
insb
leave
sub
mov
add
clc
movsl
js
test
or
xchg
dec
lds
fwait
clc
pusha
pushf
mov
jae
push
cwtl
popa
movsb
ljmp
and
jp
sbb
inc
clc
xlat
popa
inc
mov
mov
add
cli
or
sti
pop
mov
pushf
enter
mov
ret
or
nop
fdiv
add
pop
and
push
fcmovb
fwait
sti
lcall
test
in
add
pop
into
mov
cmp
repz
xchg
rorl
dec
mov
dec
test
add
addb
cmp
xchg
cld
pop
xchg
add
xor
data16
xchg
mov
xor
jmp
insl
aas
sbb
mov
mov
or
ds
in
push
or
mov
sbb
mov
stc
cld
pop
sbb
ja
cmpsb
push
pop
jl
cmp
mov
inc
jb
ljmp
add
add
rorl
fistpll
stos
das
pop
test
daa
add
gs
addb
cmp
js
stos
clc
lds
mov
xor
adc
add
cmp
jl
fstps
xchg
lahf
insb
inc
cmpsb
out
ret
jmp
cmpl
push
sub
inc
adc
test
cmpsl
pop
mov
lret
or
add
adc
leave
fildll
pop
mov
sbb
shll
adcl
cmp
test
push
or
lret
adc
sub
bound
fcompl
sub
stos
mov
outsl
pop
in
xchg
lods
js
fcompl
xchg
shrb
je
sbb
xor
in
xor
mov
push
sub
out
xor
jmp
pop
xchg
repz
out
pop
fistps
mov
sbb
shr
jo
adc
mov
pop
push
das
jo
adcl
aas
data16
mov
daa
inc
sbb
jg
or
xchg
jl
in
std
mov
cmp
fisubrl
stc
mov
mov
pushf
stc
jge
addr16
xchg
cmp
xchg
mov
mov
fisubrl
jg
cwtl
fcompl
je
xlat
out
lahf
repz
jnp
push
inc
int3
cld
cs
aam
inc
mov
sub
dec
mov
xor
or
add
arpl
js
cmpsl
dec
push
popf
aaa
out
dec
mov
testl
cmp
cmpsl
cmc
ja
lret
ss
pop
int3
cmp
jns
and
into
js
mov
jle
xor
addb
jo
scas
mov
dec
mov
add
push
decb
outsl
mov
mov
push
xchg
sbb
adc
jae
inc
idiv
cmp
js
jle
std
fwait
aas
fidivrl
dec
dec
inc
inc
addb
and
imul
push
jge
cmp
ja
sbb
les
mov
cmp
jmp
fidivrs
pop
js
cmp
dec
push
fdivrl
pop
subb
test
adc
dec
add
aas
in
iret
cmp
cmp
test
adc
jbe
repz
jae
in
outsl
insl
ja
adc
fildl
fsubl
out
pop
out
or
add
sbb
clc
add
ret
or
sbb
stc
aaa
js
rolb
jns
add
idivl
xchg
mull
iret
jne
mov
dec
daa
jns
scas
addr16
repnz
or
mov
or
popf
pop
cmp
pop
test
cmp
movb
mov
stos
cmp
addr16
sbb
lret
outsl
out
mov
cmp
mov
cmp
mov
fsubr
dec
sbb
ss
lea
xor
or
and
cmp
jg
sub
bswap
inc
pop
or
mov
mov
clc
scas
inc
xchg
cmp
cld
adc
dec
jb
mov
sub
sarb
push
and
clc
xchg
ret
cmp
sub
addb
push
lcall
aas
inc
mov
xchg
lds
adc
enter
mov
nop
pop
sbb
mov
mov
sbb
test
mov
mov
mov
sbb
mov
sub
pop
dec
lcall
mov
sbb
jne
lcall
mov
mov
add
xor
ret
jecxz
mov
andb
push
xchg
repz
inc
pop
test
aas
mov
jno
pop
and
mov
cmp
sub
mov
add
cmp
push
cmc
mov
fwait
test
add
cmp
fidivrl
sub
pop
shlb
les
cmp
fstps
mov
fstps
sub
mov
repnz
xor
push
into
and
adc
fldcw
mov
dec
test
ljmp
pop
jmp
shl
cmp
and
xchg
and
out
mov
pop
mov
repnz
lods
mov
lods
inc
scas
inc
push
and
jp
sbb
inc
sti
mov
repnz
incl
xchg
pop
leave
or
and
xor
mov
sub
xlat
data16
and
xchg
xchg
pop
int
push
pop
mov
addb
addr16
jecxz
mov
add
inc
icebp
push
mov
mov
jns
adc
mov
push
xor
fs
cmpsb
push
sub
cltd
pop
sti
jle
pop
shl
xchg
jb
inc
aad
jno
or
bnd
xchg
sbb
or
or
or
ret
std
decb
or
cltd
xchg
lods
push
pop
push
cmp
in
inc
repz
mov
andb
mov
jp
and
insl
sbb
jp
sbb
jns
pop
cmp
push
fisubs
les
jnp
popa
xor
xor
adc
sbb
addr16
xchg
scas
jns
or
cmp
pushf
or
fdivr
pop
in
ret
mov
xchg
jns
pop
popa
dec
jns
mov
adc
add
hlt
xor
mov
mov
xchg
mov
mov
adc
mov
push
xchg
jns
fcompl
lods
stos
scas
pop
add
jns
adc
and
inc
mov
mov
sbb
push
mov
cli
xchg
std
inc
and
dec
or
xlat
daa
jge
sub
xchg
mov
jae
fwait
inc
mov
fsts
add
cmp
jb
xchg
cld
mov
fsts
cmp
cmp
movsb
push
mov
inc
repz
je
cmc
xchg
inc
pop
push
lcall
dec
in
mov
int
cmp
lea
xchg
jbe
js
mov
subl
stos
dec
jle
sbb
repnz
pop
cmp
mov
insb
loopne
add
stos
push
xor
pop
imul
lcall
je
inc
jb
mov
cli
or
and
cwtl
push
add
adc
xchg
movsb
inc
sub
gs
jmp
cmp
sub
push
dec
mov
cmpsb
lcall
rolb
mov
cmovnp
cmp
lea
fmuls
rcrl
out
jno
mov
daa
sbb
lock
repz
xchg
or
lods
or
shlb
js
jecxz
cmp
xor
je
xchg
inc
jae
xchg
rol
push
xor
clc
add
enter
add
xor
mov
pop
mov
sbb
mov
insl
pop
insl
jns
dec
adc
adc
ret
shll
pusha
xor
adc
jecxz
add
stos
sbb
fs
daa
roll
lahf
xchg
inc
sti
or
incl
dec
push
test
jbe
cwtl
push
xor
mov
pusha
sbb
jno
jmp
jge
inc
repnz
idivl
jl
or
jno
insb
dec
outsb
ds
ja
popa
or
mov
dec
fxch
cmp
sub
int
insb
fldl
mov
lods
mov
je
lea
push
mov
jecxz
xchg
bnd
and
mov
mov
lahf
adc
mov
inc
test
rcll
add
adc
sbb
pop
mov
jge
push
adc
roll
add
mov
pop
push
movsl
js
popf
xor
ja
repz
ja
leave
mov
div
xchg
mov
add
lds
sahf
addl
aas
pop
add
and
shl
adc
pop
das
push
mov
jb
mov
cmp
imul
outsb
mov
dec
pop
pop
dec
xor
pop
fstpl
xchg
fs
jbe
inc
out
adc
xor
jns
cmpl
repz
testb
andb
andb
adc
sbb
stc
mov
and
cmp
mov
adc
sbb
push
pop
cmp
pop
dec
push
movb
adc
xchg
mov
jns
push
cmpl
lds
push
test
movsb
pusha
mov
inc
xchg
imul
ret
test
push
push
or
xchg
cmp
mov
ss
call
jg
mov
sub
movsb
cmp
dec
imul
mov
js
mov
xchg
lahf
jb
mov
pop
push
icebp
test
inc
loope
dec
sub
pop
pop
out
popa
test
add
add
pop
test
stos
sub
dec
mov
mov
sbb
iret
mov
xchg
int3
mov
ja
scas
loop
in
add
add
imul
popa
adc
in
sbb
insb
jb
inc
xchg
les
lret
call
popf
lock
ret
sarb
cmp
test
aad
rorl
daa
je
pushf
sahf
mov
ss
and
mov
sbb
int
mov
sbb
mov
call
in
cld
out
mov
cwtl
clc
dec
lock
mov
addr16
cmp
addb
adc
popf
pop
das
movsl
jb
frstor
popa
xor
punpckhdq
enter
test
xchg
clc
jle
stc
or
mov
xchg
sbb
mov
mov
xchg
pop
pusha
mov
addr16
imul
cmp
or
mov
sti
sub
pop
adc
inc
pmullw
movb
pop
cmc
mov
mov
aas
rol
jecxz
movsb
loop
fnstenv
sbb
bound
dec
leave
or
fistpl
cmp
addr16
sbb
fisubs
loope
nop
or
mov
xchg
cmpsb
mov
imul
pop
ret
cmp
xchg
cmp
sbb
jp
mov
leave
push
xor
or
cs
push
sbb
mov
stos
or
sarb
pop
sub
cmpsl
push
movsb
mov
sahf
sbb
xchg
add
mov
popa
stos
xchg
aaa
inc
jbe
test
movsb
and
jp
inc
pop
aaa
loop
inc
xor
adc
mov
adc
push
data16
sbb
int3
sub
aas
std
fldcw
and
xchg
jle
ds
dec
cmp
push
push
push
popf
dec
dec
scas
mov
outsb
ds
mov
ret
adc
adcl
or
dec
mov
clc
mov
pusha
cmp
jecxz
mov
repnz
push
sbb
neg
adcb
js
scas
cmp
nop
jbe
insl
mov
daa
out
or
dec
xchg
cmp
jnp
lds
mov
inc
scas
cmpsl
addb
shlb
stos
icebp
fimull
sub
lret
cltd
stos
dec
mov
ja
test
inc
imul
pop
pop
stc
cmc
shrb
repnz
bound
mov
dec
jns
out
adc
pop
testl
cmp
test
cmp
stc
mov
mov
mov
clc
mov
push
dec
pop
cmp
add
jns
clc
ja
xchg
outsl
dec
jmp
jecxz
cmp
jg
cmp
sbb
pop
jl
adc
mov
sahf
adc
jg
ss
pushf
cmc
adcl
mov
lds
sarl
ds
push
arpl
add
xor
incl
outsb
lock
adc
xor
mov
push
rolb
push
in
xor
xchg
xchg
mov
mov
rcr
inc
scas
dec
sahf
dec
pop
push
jnp
notl
pop
cmpb
pop
lods
dec
or
mov
std
jb
gs
fidivs
fisubrl
es
cmovg
jnp
sti
aam
mov
mov
dec
pop
jne
mov
js
pop
pop
int
mov
add
cmp
js
mov
push
and
sbb
sbb
mov
jnp
fisttpll
loop
inc
adc
sbb
xchg
fwait
pushf
js
pop
mov
jnp
rorl
decb
dec
push
frstor
fnstcw
cmpl
ret
sub
pop
sar
fmulp
adc
mov
stos
mov
sbb
stos
enter
in
mov
sahf
push
pop
jno
in
adc
insb
dec
fnsave
fmul
sbb
adcb
push
sbb
sbb
mov
mov
loopne
loopne
daa
jbe
rcrb
mov
bound
outsb
xchg
sbb
mov
add
mov
test
pop
mov
lcall
mov
dec
std
fistpll
mov
shll
je
xchg
inc
fwait
cmp
or
cmp
or
fnclex
inc
stos
insb
testl
sbb
int
pop
or
test
aad
ret
mov
mov
loopne
ds
push
ja
inc
or
mov
push
mov
pop
sti
sbb
mov
popa
arpl
aaa
pushf
lea
je
cmc
stc
sub
cmc
jmp
inc
sbb
jle
lea
shlb
dec
sub
ds
scas
pop
xchg
jecxz
jno
nop
in
mov
int
dec
mov
lret
add
popf
imul
pop
inc
cwtl
fmul
inc
dec
xorb
mov
and
pusha
out
test
sbb
cli
repnz
xchg
icebp
ljmp
xor
insb
xchg
and
jmp
push
out
sbb
mov
sub
ja
cmpl
inc
aaa
adc
das
xchg
pop
popa
scas
cmc
adc
leave
pop
mov
sar
jbe
rolb
add
push
push
js
arpl
gs
add
add
dec
add
sub
cmc
pushf
jmp
decb
jg
lea
stc
push
mov
stc
inc
mov
sahf
cmp
fnstsw
adc
js
xor
lcall
ret
dec
mov
xor
pop
sub
jo
add
xor
loop
jle
mov
jns
xchg
call
pushf
pushf
mov
pushl
pushl
pushl
ret
insb
jge
jg
aad
dec
test
push
adc
xor
adc
js
out
fdivs
xchg
test
pop
stc
jns
cmp
dec
cmpsb
add
xchg
shll
cmpb
pushf
pop
aas
stos
popw
adc
add
inc
mov
xor
push
sahf
enter
jecxz
mov
add
aad
sbb
outsl
lds
pop
stos
in
pop
sub
call
and
outsl
std
mov
js
lea
stc
cmp
loope
dec
mov
sbb
gs
aaa
mov
cmc
mov
xchg
dec
ret
pop
xor
sahf
and
mov
adc
or
psrlw
and
bound
sbb
ljmp
adc
xchg
movsl
sub
scas
dec
push
scas
imul
xchg
fs
jmp
out
das
mov
in
mov
pop
lcall
dec
pop
int
dec
cmpl
repnz
jb,pn
fisubl
mov
sub
mov
push
pop
aaa
gs
jp
jge
popf
adc
mov
push
movsl
fldcw
inc
mov
out
cmp
daa
cmp
jle
outsb
aaa
xor
mov
into
es
mov
inc
and
sbb
mov
into
mov
xor
loopne
jb
nop
enter
mov
jmp
scas
imul
out
addr16
pop
pop
pop
ror
push
xor
dec
mov
push
push
lock
pop
aas
push
dec
adc
mov
and
incb
mov
stos
stos
mov
lret
popa
sbb
insl
imul
insl
push
jb
jo
jb
jns
fs
jns
lea
xlat
pop
outsl
iret
cmp
jecxz
jno
adc
mov
jmp
sbb
dec
fwait
mov
adc
je
daa
jo
push
jbe
lea
mov
mov
fnstcw
jp
iret
cmpsl
test
mov
call
mov
int
push
popf
pop
pushf
arpl
mov
cmp
sbb
cli
mov
xchg
dec
xorb
jge
in
aas
push
mov
aaa
movsl
or
push
xor
adc
arpl
fnstsw
sbb
or
pop
mov
push
sbbb
es
and
shrl
push
cmp
pop
movsb
pusha
dec
xchg
nop
pop
jbe
add
or
adc
push
adc
lods
std
out
pop
test
aaa
mov
aaa
xor
rorb
test
push
lods
sahf
inc
lret
mov
dec
pop
sti
mov
ret
ret
mov
and
push
mov
dec
test
cmp
int3
cli
sbb
xlat
test
adc
xor
inc
adc
lea
test
sub
dec
mov
xor
cmp
and
jae
jne
or
jae
frstor
and
pop
xor
icebp
ljmp
xlat
inc
lret
add
fwait
popa
cltd
shll
xchg
mov
jle
mov
jge
fistl
sub
lock
pop
xchg
shll
dec
mov
jno
out
lcall
mov
sbb
cmc
jnp
lea
xor
cmp
cmp
and
imul
mov
fistpl
jge
xchg
insl
jns
push
pop
inc
imul
mov
ret
dec
cmp
shrb
jne
dec
sub
and
fwait
fdivs
mov
mov
inc
inc
shlb
ds
sbb
mov
jl
adc
lods
dec
sbb
loopne
stos
add
imul
ljmp
jecxz
mov
movsb
pop
popa
dec
pop
adc
push
es
daa
incl
jmp
out
sbb
out
dec
mov
test
test
push
xchg
loop
cmpsb
jle
jnp
out
inc
scas
es
dec
lcall
incb
testl
ja
outsb
test
idivb
jl
pop
add
adc
mov
xlat
inc
popa
mov
pop
adc
rcr
push
nop
lret
push
and
test
add
jecxz
jo
insb
mov
out
fdivs
int3
mov
add
jle
jb
fbld
xchg
jo,pn
cld
bound
in
imul
cltd
out
pop
dec
clc
inc
mov
xchg
jmp
scas
lret
or
inc
in
aad
jg
cld
test
pop
icebp
pop
dec
in
xor
and
js
mov
push
push
sub
pop
add
lea
mov
into
call
cmp
mov
mov
arpl
mov
test
push
clc
and
fidivrl
addps
lahf
inc
mov
and
pause
shlb
push
sarl
adc
outsb
mov
xchg
lcall
mov
roll
in
pop
aad
mov
jne
cmc
push
mov
add
popf
push
cmp
sbb
xchg
insl
mov
ficoml
jae
or
xor
push
pop
dec
and
aas
mov
add
shlb
sbbb
mov
dec
and
fidivs
mov
sbbb
cmp
fcompl
lods
out
pop
cli
std
pop
testb
or
push
push
cmp
lea
in
fnsave
inc
xchg
mov
push
popf
out
imul
popf
hlt
mov
cmpsl
sub
pop
inc
mov
dec
cwtl
lods
in
les
push
jl
xchg
sub
jnp
out
jnp
add
icebp
jns
in
push
ficompl
in
jmp
add
adc
roll
push
pop
xor
mov
fdivl
mov
xchg
pop
sahf
push
mov
mov
push
sbb
xchg
cmpsl
push
jge
mov
mov
mov
sub
movsb
sub
jle
cli
mov
aas
and
dec
push
sub
lret
lea
add
cltd
mov
cmp
or
fistps
ficoml
push
pop
ja
popf
and
cltd
roll
sbb
push
testb
sub
jbe
ret
pop
xor
cwtl
add
xchg
add
lret
lods
mov
jge
iret
xor
pop
lods
xchg
mov
mov
andl
lret
lods
dec
mov
xchg
add
pop
test
sbb
sbb
loopne
outsl
inc
mov
push
jle
ds
mov
inc
or
stc
aaa
test
pop
mov
push
dec
mov
dec
subl
popa
mov
insb
test
add
js
sub
jle
push
ret
sub
mov
repnz
popf
and
out
inc
ja
sbb
jbe
out
or
popf
flds
mov
aas
xchg
arpl
jae
inc
shl
xor
je
dec
iret
jle
adc
nop
pop
mov
xchg
dec
mov
adc
or
pop
cmp
jmp
std
cmp
or
pop
push
loope
mov
rolb
sub
insb
test
je
push
jb
add
adc
cmp
or
test
lret
aaa
xorl
test
stos
jg
int
jle
jle
test
push
and
jmp
enter
push
pop
sub
in
and
jne
inc
inc
pop
les
into
push
addr16
sahf
sub
cmp
stos
push
sbb
cmp
pop
or
push
lods
or
push
pushf
xor
mov
cmp
xor
and
xchg
dec
arpl
roll
lea
fs
aam
dec
or
pop
fwait
and
jecxz
adc
cmpsb
or
out
cmpsl
xchg
loope
int3
lock
mov
and
xor
sub
movsl
cmc
out
ja
fisubl
push
push
push
out
int
push
dec
mov
hlt
xchg
ret
nop
fisubrs
pop
cmp
fcmovbe
cmp
mov
daa
push
jbe
and
es
push
stos
addl
fsubl
imul
cld
outsb
movsb
fimuls
call
mov
mov
das
addr16
jae
lret
jecxz
xchg
iret
and
jnp
cmpsl
repz
or
loope
adc
test
or
xor
sub
inc
xchg
and
adc
xchg
cmp
fdiv
pop
and
jl
sub
repz
mov
lods
or
inc
jb
test
mov
rolb
inc
mov
xor
dec
popa
stos
cmc
adc
cmc
daa
popa
icebp
daa
cmp
or
out
jbe
clc
xor
pushf
push
mov
push
push
pushl
ret
inc
test
cmp
movb
add
jo
mov
cmp
call
fs
inc
mov
xchg
scas
packsswb
incl
jecxz
xchg
shll
jmp
es
clc
add
jle
or
push
ds
cmp
sbb
mov
jno
jnp
and
fcmovb
popf
clc
xor
mov
and
xor
imul
shlb
mov
rclb
nop
scas
clc
inc
cwtl
sarb
lods
xor
das
xor
jnp
mov
push
push
inc
mov
dec
mov
sbb
xchg
xor
sbb
inc
pop
mov
pop
inc
xor
adc
iret
mov
xchg
in
sbb
mov
bound
xchg
mov
cmpsb
xchg
pop
lcall
push
sub
stc
dec
pop
ss
xlat
mov
ss
sahf
xor
jns
or
xchg
mov
test
add
xchg
insl
pushf
scas
xor
mov
mov
aaa
out
adc
adc
add
adc
inc
popa
lret
or
imul
jo
nop
cltd
mov
pop
jl
mov
mov
mov
adc
rorb
push
add
or
lcall
pop
xor
add
mov
clc
xchg
fwait
cmp
sub
lcall
jp
cs
lock
push
jns
ret
inc
xchg
xchg
movb
sub
call
movb
mov
push
mov
pusha
push
lea
jmp
call
loopne
movsb
inc
mov
xchg
leave
and
lds
push
or
daa
xchg
cmp
lock
mov
popf
insl
xchg
loop
xor
or
popa
int
jp
scas
gs
cmp
push
les
cmpsb
pop
repz
fs
mov
pop
and
mov
lret
loop
jp
push
cmp
fcoml
js
shl
mov
arpl
sub
movsb
bound
cmp
lea
cmp
mov
dec
pusha
inc
or
out
push
ret
add
ret
push
fs
hlt
cmpl
adc
cmpsl
cmpl
das
mov
rcrl
test
jno
into
aad
iret
jmp
data16
outsb
inc
cltd
stos
cld
cmc
ret
sbb
pop
mov
std
fadds
int
cmp
adc
jge
and
lock
jnp
inc
add
add
xchg
mov
add
shll
imul
or
popf
in
dec
gs
or
lea
adc
aaa
aad
sub
sbb
into
mov
push
or
lds
jne
call
xor
aad
or
pusha
pop
dec
inc
mov
lods
cltd
jmp
jmp
scas
in
sti
fisubrs
ljmp
loopne
fnstcw
ljmp
xchg
shll
test
imul
xchg
loopne
xor
cs
mov
sti
xor
push
sub
inc
es
dec
sarl
cmp
xchg
sbb
pop
add
xlat
cs
cwtl
clc
movsl
jo
in
dec
les
in
fsubs
ficompl
or
add
addr16
pop
dec
stos
adc
idiv
xchg
imul
inc
sahf
jl
or
cmc
adc
flds
rcll
dec
mov
mov
push
nop
dec
int
push
dec
cmp
add
sbb
sub
sub
sti
pop
jecxz
sbb
pop
mov
and
call
adc
inc
bound
stos
bound
xchg
mov
push
hlt
push
jo
or
out
scas
adc
iret
fstpl
mov
pop
cltd
jmp
jbe
imul
int3
sub
fsubs
xchg
test
push
mov
pop
jo
push
fadd
pop
pop
or
dec
push
adc
pop
sahf
xchg
repz
cmpsl
jmp
pop
mov
inc
cmp
xchg
insl
hlt
inc
jl
push
inc
imul
popa
sbb
mov
xor
rcll
ljmp
out
mov
and
jno
adc
leave
add
je
xor
aam
sbbl
cmp
fwait
outsb
xlat
das
popl
xchg
enter
nop
inc
scas
mull
aaa
jns
sub
aaa
gs
fld
orl
call
pop
or
pop
test
dec
pop
mov
pop
cwtl
fdivrs
mov
mov
negb
outsl
mov
or
repz
mov
lret
fcompl
jle
sub
mov
lret
das
inc
mov
aas
into
xchg
xor
gs
sub
fwait
cmpb
jns
ret
lea
testl
int
into
outsb
test
cmp
push
rcl
push
push
cmp
xor
dec
or
sub
push
dec
dec
dec
dec
inc
push
cs
insb
add
mov
push
jle
push
xorb
cmp
adc
or
fisubl
fidivl
push
pop
outsl
dec
xchg
shlb
imul
movsb
cltd
dec
pop
pop
test
movsl
arpl
mov
fucomi
lret
ret
fisubrs
repz
add
and
jle
cld
mov
cli
push
sub
lahf
and
sbbl
fsub
mov
adc
cmp
fisttpll
lea
push
data16
and
sbb
push
sbb
cld
sbb
punpcklwd
push
push
xchg
mov
add
mov
sbb
inc
cmp
outsl
repz
jo
testb
lock
dec
inc
ret
sub
mov
insl
pop
aaa
test
mov
push
dec
movsl
in
mov
mov
scas
movsb
or
shrb
aad
xchg
lret
push
and
clc
lret
sqrtps
xor
in
jge
inc
dec
sub
jns
pop
jno
std
aaa
cltd
add
ja
dec
inc
add
mov
cmpsl
dec
jle
ljmp
pusha
lea
call
pushf
call
out
loopne
dec
mov
scas
sbb
adc
push
ret
mov
mov
push
mov
dec
iret
out
hlt
cmp
iret
inc
lcall
subl
add
movsl
dec
scas
xchg
lret
mov
sub
sub
scas
adc
out
lods
xchg
cld
jb
loope
mov
test
mov
push
mov
in
je
pop
jo
mov
js
cmp
hlt
insl
in
daa
testb
insl
sub
cmp
sbb
push
mov
loope
bound
add
add
mov
add
popf
scas
pop
dec
mov
add
aam
jl
cmp
insb
sub
xchg
repz
es
cmpsb
xchg
inc
add
pusha
fsub
mov
adc
sbb
test
lds
xchg
mov
and
iret
sub
pop
icebp
add
jo
out
std
cmp
mov
xchg
insl
sbb
stc
mov
sti
push
xor
je,pt
or
test
je
neg
loope
aaa
cwtl
add
jl
and
lea
dec
jl
adc
push
in
sti
xor
xor
repz
push
pushl
xchg
inc
out
and
add
rcll
lahf
xor
outsl
cmp
into
lret
sbb
je
pop
mov
inc
xor
jge
dec
xchg
dec
or
or
xchg
cmp
inc
loop
ret
fs
inc
mov
push
dec
mov
aad
lcall
xor
cmp
xor
mov
lret
stc
fdivrs
lret
pusha
dec
mov
inc
jnp
aas
outsl
xchg
cvtdq2ps
sbb
das
lock
cmp
mov
mov
inc
cmp
sbb
int3
movsl
daa
push
push
jb
daa
and
mov
mov
stos
push
xchg
mov
dec
inc
jle
daa
add
mov
lahf
sub
or
adc
ficomps
pop
mov
popa
xchg
in
aas
insl
mov
mov
sub
pop
nop
dec
ds
loope
mov
movsb
aam
lock
mov
mov
loope
clc
xor
jecxz
lods
xchg
xchg
aam
out
cmpsl
fistpll
mov
out
pop
cmpsl
adc
in
dec
cmp
cmpsl
or
enter
aas
cmp
mov
das
repnz
adc
inc
cmp
notl
out
and
imul
jge
jns
adc
mov
test
lods
arpl
lods
js
sub
in
fistpl
or
cmp
mov
pop
push
scas
mov
mov
sub
aad
lods
xchg
shlb
aas
mov
mov
fsubrs
lods
test
lods
push
lret
std
hlt
fs
push
jnp
addb
lods
xor
pop
test
ljmp
into
negb
add
xor
push
sub
int
mov
rcrl
push
lock
jge
sbb
and
cmp
pop
or
loop
dec
enter
sbb
cmp
or
xchg
in
cmc
jge
movsb
hlt
cs
pop
mov
mov
dec
out
push
adc
or
pop
loop
bound
jmp
bound
test
ret
inc
jg
daa
xor
sub
pushf
fisubl
clc
push
dec
mov
imull
sbb
gs
test
int
mov
pusha
dec
push
je
rcrl
fbld
iret
or
cltd
push
jns
sub
stos
sbbb
push
lcall
std
dec
xchg
push
jle
mov
fsubs
fidivs
cwtl
mov
xor
out
ja
adc
outsl
xlat
push
add
mov
call
sbb
mov
jle
inc
xchg
rcrb
inc
mov
and
lret
xor
dec
mov
sti
aaa
jns
das
aad
lods
sbb
sahf
ljmp
imul
popa
rcrb
sub
stos
adc
repz
mov
ret
ret
jecxz
and
mov
popa
cli
push
pushf
push
push
lods
or
jecxz
inc
popf
out
sbb
jecxz
pop
push
outsb
mov
test
lret
xchg
jg
pop
daa
jg
pop
stos
sti
cmp
inc
or
imul
mov
xchg
sti
ret
js
andl
ret
adc
ret
push
out
test
xchg
popf
fsubp
xor
loopne
cmpsl
adcb
cmp
and
test
pushf
inc
sbb
in
out
sahf
cwtl
mov
dec
and
mov
pop
xchg
cmpsb
add
mov
adc
arpl
jbe
rcr
push
imull
cmp
push
cmp
sub
inc
mov
aad
xchg
andl
xchg
push
mov
lret
testb
loop
jns
mov
and
lcall
lds
mov
lods
out
lahf
mov
test
xlat
mov
inc
lret
xchg
bound
int
mov
jmp
addl
mov
pop
cmc
leave
lods
mov
xchg
mov
movsl
adc
push
scas
or
jae
pop
sub
mov
and
das
sub
xchg
std
dec
pop
mov
jnp
incl
movsl
mov
inc
jl
adc
add
add
cli
jmp
push
mov
insl
xchg
rcr
addr16
pop
mov
sbb
xchg
lods
pop
cmp
dec
test
aas
push
mov
pop
xor
pop
imull
fsub
jnp
out
lret
shl
pop
push
movsl
add
push
cltd
or
lock
push
mov
cmp
and
jp
cli
pop
mov
push
packuswb
testb
xor
mov
cwtl
adc
fldl
inc
push
mov
in
imull
aad
jns
std
adc
fldenv
popa
mov
and
fcomps
aam
pushf
push
mov
push
mov
pushf
pushf
movl
pushl
ret
xchg
movsb
push
push
mov
sbb
add
fsubrs
cmpsb
addr16
cmc
xchg
fldenv
out
outsb
and
insl
pop
cld
or
es
cwtl
jno
push
mov
popa
cmpsb
pop
push
mov
add
mov
xlat
sub
jne
sbb
orb
mov
aam
cmc
pushf
cmc
lea
add
add
ja
sub
add
jp
mov
clc
jge
push
jl
in
jmp
stos
push
mov
sbb
xchg
clc
pop
nop
fdiv
inc
nop
repnz
into
repnz
movsb
adc
add
lea
add
adc
cld
pop
mov
sti
lods
add
xchg
movb
inc
mov
mov
movsl
rcrl
or
cmp
sub
daa
xchg
add
fdivs
cmpsb
mov
lcall
push
rep
mov
jg
lea
into
ss
push
bound
repnz
in
test
push
sahf
es
into
jp
or
fistl
dec
pop
cmpsb
add
add
adc
mov
push
or
lds
jl
shll
sub
push
lods
pop
push
mov
pusha
test
xchg
movsb
inc
arpl
xchg
ret
lret
andl
aad
jecxz
adc
popa
mov
or
dec
aas
cmpsb
push
mov
ret
nop
into
xor
mov
sub
jle
jae
stc
inc
adc
mov
addr16
movq
and
dec
pop
loope
dec
cmovno
xchg
rorl
add
insl
negb
xor
jge
enter
or
mull
dec
add
data16
and
pushf
push
push
mov
movsl
es
js
lret
xlat
cmp
mov
sub
mov
sub
xchg
lahf
and
sbb
insl
pop
lcall
nop
loopne
insb
lods
add
cwtl
in
cmp
push
mov
lret
jmp
int3
test
cmp
shll
in
xchg
sbb
mov
jno
lret
push
mov
jns
scas
sbb
jmp
aad
lahf
shll
push
xor
in
nop
lods
mov
stos
xlat
pop
pushf
std
addr16
cmp
cld
push
and
std
adc
sub
jnp
and
ds
mov
cmpsb
imulb
xchg
mov
aad
popa
mov
xor
fisubs
int
sbb
movsb
out
fsubs
fbld
aam
aam
iret
pop
pcmpgtw
mov
xchg
mov
je
into
jae
or
pop
les
xor
inc
sbb
adc
outsb
bound
cltd
xchg
push
pop
adc
test
daa
int3
scas
lcall
push
lods
mov
sahf
and
xor
add
fs
shrb
js
or
mov
fcompl
aad
or
and
pushf
bt
bt
pushl
xor
lea
call
jecxz
push
mov
sti
addr16
xlat
pop
inc
lret
add
int3
popa
sbb
jmp
shr
popf
in
jmp
mov
sti
lds
cmp
mov
js
sub
cltd
repz
xchg
mov
loop
jg
flds
aad
or
inc
jmp
mov
jae
add
inc
sbb
or
adc
mov
mov
pushf
mov
out
xchg
lods
nop
or
test
push
dec
or
adc
sti
add
lods
xchg
fimull
pop
jbe
sub
sub
add
movzbw
bsf
mov
push
call
push
das
xor
and
daa
mov
sbb
and
mov
pop
xor
mov
das
xor
and
xor
and
sbb
sbb
mov
ja
push
mov
and
xchg
jmp
aam
outsl
das
adcl
pop
sub
in
fwait
nop
cltd
adc
push
js
mov
cmpsb
sub
jmp
lods
mov
jb
mov
lahf
test
xor
scas
test
clc
pop
movsl
movl
sahf
cwtl
repz
mov
pop
shrl
or
push
fidivs
mov
dec
mov
ficomps
cmc
pop
adc
rolb
mov
sub
jb
and
add
jb
mov
cmp
cmc
inc
jge
jmp
xchg
mov
xor
adc
xor
movl
mov
orl
aaa
push
lods
lds
pop
add
xchg
fcomi
iret
nop
cmc
mov
mov
les
mov
jmp
cmpsl
not
test
ret
aas
pop
xor
and
inc
sbb
adc
mov
sarb
je
insb
int
push
test
test
mov
push
gs
mov
popf
iret
cmp
push
mov
nop
shlb
les
jo
lock
push
ret
js
pop
lea
or
mov
adc
outsb
push
addr16
jno
jo
jmp
or
scas
stos
lahf
jns
push
pop
cmpsl
outsl
pop
sub
push
loopne
and
jmp
dec
stc
in
arpl
rcl
mov
jg
data16
aam
inc
mov
xor
inc
jl
mov
lcall
jnp
aad
add
sets
dec
push
movl
pusha
mov
sub
cmp
cmc
cmp
push
jmp
lahf
shll
lea
test
sbb
not
imul
fwait
sub
aad
adc
cmp
xchg
add
cmp
leave
xchg
xchg
jmp
sti
inc
cld
popf
hlt
scas
inc
fcmovbe
and
int
pop
xor
iret
sub
in
mov
fnsave
in
stc
add
movsb
xor
push
xchg
adc
aaa
lea
cmp
jo
stos
sbb
jne
rcrb
pop
test
cmp
clc
inc
xchg
pusha
out
cli
cmpsb
dec
adc
inc
sbb
lds
lea
cmp
push
jb,pt
cmp
orl
inc
cld
jle
adc
popa
es
and
out
push
inc
cld
notb
mov
imulb
jns
push
mov
inc
scas
mov
gs
xchg
movsl
xor
jge
sbb
lahf
push
pop
xlat
jae
jns
cwtl
fsubs
ds
sub
cli
dec
xchg
pop
cmp
sbb
and
mov
adc
iret
das
mov
incl
loope
insb
mov
aad
ret
ror
xchg
pop
push
push
mov
push
mov
push
mov
adc
mov
sahf
ljmp
arpl
scas
push
es
pushf
add
xor
pop
mov
mov
push
pop
out
add
lahf
out
into
outsb
mov
stc
or
adc
imulb
mov
cmp
sbb
cwtl
out
fidivrl
sub
mov
pop
mov
ljmp
or
jl
rcll
cmp
cmp
mov
mov
jbe
pop
test
sbb
mov
cld
add
movsb
sub
fsubl
mov
lret
xchg
outsb
imul
lret
sbb
pop
pop
stos
loope
pop
cmpsl
pushf
mov
lret
xchg
pop
pop
mov
sub
sahf
or
mov
bound
xchg
pop
cltd
sti
test
out
jecxz
add
pop
mov
push
lods
pop
adc
call
sti
dec
add
lods
inc
pushf
mov
mov
sti
fwait
xchg
hlt
xor
add
ds
lods
mov
jo
fwait
lds
xchg
orl
cmp
inc
push
idivb
add
ds
push
clc
test
cwtl
out
fiadds
mov
add
cltd
dec
sub
mov
xlat
pop
scas
in
inc
mov
sbb
and
out
mov
mov
jg
shll
pop
fwait
add
push
cmp
add
and
push
jns
pop
mov
push
dec
inc
xchg
dec
aam
or
sub
xchg
jp
adc
mov
xchg
std
out
es
cmp
mov
push
push
les
test
lea
ja
test
call
rcl
leave
mov
icebp
rclb
dec
mov
lock
xchg
mov
and
call
das
jge
or
sti
dec
xchg
sub
lods
stos
fs
sahf
les
enter
pop
mov
push
mov
cmp
or
ret
stc
fidivl
cmp
fwait
cltd
ficompl
inc
in
fldenv
out
cmpl
mov
incl
popf
sub
cmpsl
mov
pop
leave
lret
insb
mov
outsl
dec
pop
push
pop
xchg
popl
repnz
aad
mov
stc
sub
xchg
jp
cltd
mov
cltd
mov
xorb
lods
xlat
icebp
inc
jge
and
fwait
nop
mov
std
mov
loopne
pushf
dec
pop
mov
xor
xor
call
dec
adc
fld
or
mov
popf
jp
lds
push
ror
cmp
cli
repz
fprem1
lock
pop
jno
adc
and
sbb
jge
ljmp
roll
imull
sbb
or
mov
xor
into
xor
mov
xchg
lods
lcall
insb
inc
insb
insb
outsl
arpl
cmp
jmp
stc
repnz
pusha
pushf
lea
jne
movsbw
mov
push
movb
cwtl
setl
mov
movsbw
lea
pushf
push
movb
pushl
movl
pushf
call
je
adc
lea
dec
pop
push
mov
mov
pop
dec
addl
jb
movsl
cwtl
fcoms
xchg
clc
adc
lods
and
sahf
lods
gs
pop
mov
mov
xchg
rcrb
in
push
jg
ds
ss
cmovge
add
es
sbb
int3
xor
fs
pushf
call
fdivs
jle
ljmp
or
loop
sub
inc
dec
mov
icebp
sub
dec
stos
repz
or
push
sub
pop
les
outsb
dec
xchg
dec
cmp
xor
mov
cwtl
add
pop
test
test
mov
xor
cmpsb
out
adc
in
and
push
adc
or
mov
xlat
and
leave
inc
add
mov
jo
rcrb
cmp
call
xlat
jle
add
sbb
jnp
pop
mov
jmp
push
xchg
iret
aaa
imul
lret
dec
sahf
icebp
fiadds
ljmp
xor
icebp
popa
adc
clc
xor
mov
pop
cmpsl
pusha
pop
sti
das
or
sahf
pushf
jl
negl
ja,pn
adc
repnz
fbld
add
mov
adc
mov
gs
shlb
fimuls
mov
xchg
andl
or
pop
mov
je,pt
or
pushf
pop
fidivrs
push
jp
mov
pushf
push
mov
movb
lea
jmp
cmc
mov
sbb
mov
test
sub
jmp
cmp
bt
repnz
call
es
pop
mov
mov
cmp
les
mov
push
mov
repz
jb
outsl
vcvtps2pd
mov
insl
adc
jb
xchg
data16
pop
cmp
lahf
aas
inc
jo
sbb
out
ljmp
scas
stc
out
insl
fldenv
push
outsb
mov
cli
dec
add
out
push
jg
lcall
cmc
dec
mov
stos
mov
xchg
dec
fisttpll
jns
mov
lea
aas
jg
out
jae
outsl
mov
mov
jge
sub
and
insl
mov
out
stos
movsl
in
jle,pn
in
lock
xchg
fisubl
outsb
push
aas
xchg
push
aad
push
inc
je
mov
push
mov
lock
jnp
test
pop
mov
mov
je
lods
stc
iret
lds
adc
jl
mov
lods
cmpsb
pop
cltd
std
cmp
xlat
or
in
mov
dec
lods
sbb
cmp
mov
stos
or
mov
push
and
shll
xor
inc
or
cmp
arpl
call
dec
and
enter
arpl
cmp
aas
jge
mov
fldt
je
pop
rcrl
cmc
mov
mov
aas
push
outsb
push
mov
pop
adc
loopne
and
adc
cmovns
jmp
arpl
push
scas
cmp
movsb
mov
push
mov
and
mov
xchg
dec
or
test
in
les
mov
clc
movsl
insb
les
aaa
lock
mov
aad
push
pop
js
rorb
push
sbb
xlat
jl
xor
cmp
mov
clc
popa
stos
cmp
mov
push
pop
xchg
pop
xor
clc
push
les
pop
fimuls
mov
dec
mov
sbb
std
cmp
add
dec
outsl
arpl
inc
jb
add
movsl
mov
mov
aaa
ja
decl
mov
shrb
data16
std
xor
xor
adc
clc
ret
sti
pop
pushf
add
inc
stos
cmpb
add
cmpsl
cltd
cmp
fstpt
adc
adc
ds
test
xchg
mov
into
push
inc
js
cmp
fcomps
insb
sub
sbb
xchg
fadd
iret
xchg
mov
xor
mov
int3
andl
les
gs
and
sub
insb
arpl
xchg
out
sub
mov
xor
loop
jo
scas
test
test
mov
sub
out
dec
cwtl
loope
cmpsb
sbb
mov
mov
or
call
or
mov
jecxz
add
pushf
fcomps
push
roll
cmc
mov
daa
xchg
fistps
jae
sub
sbb
clc
xchg
sbb
jl
cwtl
mov
cmpsb
mov
xchg
fists
dec
mov
push
andl
xchg
inc
cld
push
aas
cmpsl
fiaddl
ds
insl
jecxz
mov
cwtl
xchg
daa
addr16
jno
jno
ja
dec
inc
mov
inc
cmpsl
inc
insl
or
loop
dec
loop
mov
insl
inc
mov
scas
push
lcall
dec
dec
test
jns
mov
add
addr16
mov
fcomi
repnz
mov
gs
and
andl
shll
push
inc
jmp
mulb
outsb
mov
dec
scas
out
push
outsb
lret
xchg
into
add
lods
lcall
push
cmp
pop
in
insl
mov
icebp
cmp
mov
les
pushf
xchg
icebp
inc
scas
popw
push
mov
dec
out
pop
clc
or
jge
aaa
in
fldcw
popa
sbb
inc
xchg
loopne
jnp
repnz
inc
jg
pusha
outsl
std
dec
sahf
fwait
sbb
mov
das
xorl
add
sbb
in
sub
sbb
adc
imul
negb
ja
mov
cmpsl
mov
push
pop
mov
dec
jbe
ja
cli
pop
add
flds
dec
idivb
in
adc
test
out
daa
pop
out
loope
fcmovne
fildl
lods
fldenv
push
sbb
ffree
jmp
cmpsb
xchg
xchg
clc
lds
and
nop
lret
pusha
add
or
iret
cmp
test
xchg
sub
jg
jp
pop
data16
popf
xchg
loope
push
sub
test
sti
or
mov
repz
mov
btc
sbb
jmp
arpl
mov
rcrb
xor
pushf
add
add
and
fs
or
inc
and
data16
es
and
jnp
pop
scas
insb
mov
cmp
jno
loopne
adcb
sbb
mov
and
fldl
neg
xor
xor
fs
fnsave
sub
cmc
out
je
scas
pop
outsl
xor
pop
adc
push
mov
and
pop
dec
fwait
aad
inc
jnp
and
fcomps
jbe
and
andb
inc
jne
icebp
popa
mov
or
sbb
xlat
mov
mov
bound
iret
pop
cmpl
xchg
cmp
cmp
test
pop
imul
nop
mov
add
pop
jno
ss
jg
xchg
push
mov
insb
fwait
into
adc
in
dec
xchg
scas
std
aaa
jne
xchg
lahf
cs
dec
test
dec
xor
mov
xor
add
and
mov
stos
lret
js
mov
inc
repz
sub
mov
out
hlt
clc
lahf
iret
sbb
inc
pop
scas
fiaddl
into
arpl
aad
insb
jge
jo
stc
xchg
shlb
outsl
aaa
xchg
adc
loope
mov
adc
mov
xchg
mov
sbb
ret
in
bound
push
cmp
loopne
and
movsb
out
jle
loope
les
adc
bswap
jmp
in
push
push
popf
stc
mov
dec
js
mov
icebp
fstpt
inc
mov
dec
into
ljmp
xchg
cwtl
outsb
sbb
sub
xor
pop
xor
sub
rorb
dec
mov
sub
mov
fistpll
inc
mov
loope
sahf
push
inc
loope
dec
mov
lret
lods
pop
inc
rcrl
xchg
add
xorl
sbb
pop
xor
adc
mov
push
cltd
pushf
call
mov
jno
cmp
xchg
mov
jecxz
sbb
push
sub
push
scas
push
mov
push
insb
mov
push
jb
out
aaa
sbb
andl
lds
sub
adc
daa
arpl
ss
sbb
rolb
pop
sarl
clc
mov
fwait
popa
jg
add
fisubs
cmpsb
out
mov
cmp
mov
adc
pop
pushf
add
mov
pop
sub
pushf
loopne
sbbb
ja
push
cmp
hlt
xor
out
xchg
lods
push
cmp
in
dec
into
xchg
in
sub
pusha
call
inc
pop
mulb
jnp
jmp
cmp
fisttps
pop
xor
lds
mov
ja
les
jle
js
xchg
inc
rcrb
inc
jno
daa
xor
bound
push
lcall
add
cltd
jmp
inc
iret
andb
xlat
inc
sbb
cld
iret
inc
xor
jae
push
insl
and
fisubrl
add
outsl
pop
fwait
rorl
xchg
add
int3
xor
and
out
cmpsb
jno
mov
pop
cwtl
lock
mov
push
cwtl
mov
cld
cmp
cltd
repz
fadds
jnp
aas
xchg
sbb
mov
push
mov
sbb
mov
xor
das
or
sarb
sub
cwtl
movl
test
lret
push
jbe
jae
cmc
mov
mov
mov
mov
sti
in
cmp
cmp
inc
sub
clc
out
xor
jp
enter
cmp
rolb
aas
je
mov
aam
dec
clc
lods
mov
mov
and
lahf
mov
and
dec
ljmp
inc
sahf
insl
addr16
cli
jb
data16
xchg
imul
dec
or
sbb
mov
lock
mov
stos
int3
imul
add
pop
gs
fcmovu
inc
lret
lret
xchg
imul
push
xchg
out
scas
leave
pop
sbb
push
mov
scas
ss
cli
fmuls
pop
in
lea
call
push
mov
lea
jae
jmp
sbb
mov
mov
mov
hlt
inc
push
push
xchg
sarb
insb
inc
mov
pop
addr16
setae
mov
imul
sub
jae
repz
repnz
jg
mov
adc
push
negl
call
out
push
jge
js
push
je
shll
cmp
xor
stos
lret
pop
leave
movsl
fbld
cmc
xchg
pop
cmpsl
dec
and
imul
push
movsl
mov
in
repnz
test
pop
inc
test
cwtl
outsl
movl
out
ret
mov
mov
jg
nop
in
stos
push
test
movb
push
gs
test
xchg
movsl
std
pop
xchg
cli
or
iret
jbe
ljmp
scas
into
xlat
sbb
or
loope,pn
aaa
lahf
aad
mov
in
outsl
cmpsl
dec
mov
push
sbb
aaa
xorb
ljmp
in
xor
xor
mov
xor
xchg
dec
mov
push
scas
lret
and
push
mov
sub
inc
jae
jecxz
jnp
jno
jae
xchg
outsb
scas
out
pop
lahf
pop
cs
imulb
cmp
out
cmp
mov
sti
shll
shrb
xor
or
test
ret
xchg
fwait
js
lds
pop
sub
push
push
mov
dec
xchg
into
and
shl
mov
xchg
jo
or
push
dec
inc
dec
dec
xor
cs
insb
add
out
jg
sti
xor
mov
jo
aad
je
jo
mov
cwtl
in
sub
add
mov
dec
or
fs
mov
dec
cmp
call
mov
out
push
pop
movsl
jmp
imul
mov
pop
xchg
imul
cmp
push
mov
bound
jns
pop
outsb
mov
insl
aad
aas
stos
icebp
fbld
std
pop
fwait
mov
mov
lods
or
push
mov
add
cmp
scas
adc
repz
icebp
dec
sub
lea
sbb
out
inc
iret
pop
pop
stos
inc
push
mov
fwait
push
out
dec
rorb
jns
aam
insl
sarb
add
lods
cmpsb
add
bound
fdiv
in
mov
sub
pop
mov
pop
aaa
sub
pop
cli
mov
mov
loop
dec
stos
mov
stos
pusha
inc
jg
pop
pop
mov
outsl
stos
jecxz
xchg
sti
imul
fdivr
stc
sbbb
xchg
scas
mov
pop
movsl
mov
pop
add
or
or
call
ja
int
xor
lock
xchg
mov
cld
inc
leave
jmp
add
aad
jp
cwtl
orb
pop
repz
sub
mov
rcrb
xchg
repz
and
pop
xchg
jle
jae
mov
enter
fldenv
jno
int
inc
lahf
and
mov
xchg
pushl
test
aam
dec
mov
and
mov
clc
sarb
sub
add
xchg
mov
mov
lret
mov
jmp
jecxz
pop
cmp
outsb
adc
mov
ljmp
scas
loope
jmp
dec
pop
lods
push
dec
jns
add
mull
scas
cmpb
dec
mov
push
fs
adc
add
jge
dec
push
test
lea
frstor
flds
mov
and
aaa
add
adc
cmp
cli
adc
jne
je
cmp
xlat
sti
hlt
subl
cmovne
and
or
adc
jnp
movsb
mov
cwtl
imul
loope
inc
push
fbstp
dec
arpl
andl
test
xor
lods
add
inc
lods
negb
mov
cmp
or
pop
adc
test
sub
scas
fisubs
ds
ret
scas
out
push
fstl
or
xchg
mov
dec
add
inc
inc
cmp
xchg
cmp
cld
cmc
sub
jae
int3
sbb
lods
neg
dec
insl
dec
pop
cwtl
sub
or
dec
pop
jne
push
or
int
daa
testb
xor
in
and
inc
mov
scas
ss
fisttpl
les
xchg
out
pop
mov
dec
cwtl
fs
cmpsb
adcl
adc
into
jns
mov
or
mov
clc
push
ljmp
sbb
imul
sbb
dec
out
insb
imul
push
test
int
fidivl
rcrl
and
mov
test
fnsave
mov
jb
xor
addr16
or
rorb
push
or
xor
rclb
fiaddl
js
mov
fcoml
add
jns
stos
mov
or
mov
adc
fsubl
enter
dec
adc
cmp
scas
cli
sub
jb
addb
mov
or
lock
rol
dec
add
dec
fdivrl
out
dec
mov
in
mov
cwtl
hlt
pusha
mov
adc
mov
sbb
xlat
adc
pop
and
fwait
jmp
add
lock
mov
xor
test
xchg
js
pop
or
lahf
ret
mov
gs
testb
ds
jp
jge
add
sub
mov
xor
pop
push
je
push
adc
xor
jge
pop
cmpsb
sub
adc
or
dec
ds
flds
lds
daa
insl
scas
push
outsl
pusha
outsl
sub
or
divl
mov
out
ja
jmp
mov
sbb
xlat
jp
aad
push
cmpsl
fldl
xlat
inc
outsl
movsl
fisttps
xchg
add
fstpl
pop
dec
aaa
jae
insl
mov
outsl
pusha
sbb
mov
sbb
cmp
cmp
outsl
cmp
pop
mov
jae
aas
fimuls
jb
or
mov
xor
sarl
dec
and
mov
clc
add
mov
cmp
add
mov
mov
mov
cmp
dec
pop
lret
mov
push
mov
mov
out
jnp
add
mov
dec
ret
add
cli
cmp
jle
cld
and
add
les
xor
sbb
add
xchg
sub
mov
xchg
xchg
icebp
pop
lret
jns
mov
adc
cmp
fs
cmpsl
js
aas
pop
mov
or
jmp
stos
clc
mov
cmpsl
notl
test
ds
cmpsl
ds
ds
xlat
dec
add
xchg
add
addr16
out
aas
xchg
add
push
jne
mov
and
xchg
mov
rcrl
mov
fs
add
repnz
repz
and
xchg
mov
cmp
mov
mov
loope
mov
mov
ret
adc
xchg
arpl
clc
mov
adc
inc
les
jecxz
pop
in
push
insl
stc
mov
add
cmpsb
aas
and
addr16
inc
add
bound
xor
movsb
shrb
mov
arpl
inc
arpl
adcl
jecxz
adc
cmc
jg
cld
rcrb
jge
mov
fnstcw
pop
imul
pop
dec
jle,pt
sub
fnstcw
pop
fldt
mov
push
xchg
dec
jge
stc
imul
in
cmp
insb
and
scas
or
add
xor
dec
loop
lods
cmp
stos
push
int3
cmp
aaa
inc
data16
mov
and
cmp
mov
int3
cmpsl
pop
repz
je
jb
push
enter
add
cmp
or
cmp
ljmp
in
dec
daa
out
cmpl
movsb
or
xorl
adc
into
push
lds
jnp
stc
js
xchg
pop
ret
mov
inc
out
mov
movsl
pop
mov
or
aad
inc
cmc
sub
jbe
jle
aas
jno
mov
cmpsb
fwait
mov
stos
push
add
mov
js
xchg
jmp
inc
lcall
mov
pop
dec
inc
xchg
sub
add
push
inc
push
pop
flds
pushl
mov
mov
lcall
pop
mov
nop
cmp
cmc
inc
sarb
addb
popf
cmp
sti
xchg
pop
pusha
jl
jl
mov
js
int
jmp
aaa
mov
inc
jmp
xlat
adcl
mov
cmp
sub
jle
jle
push
cmp
xchg
mov
cld
mov
push
js
mov
cmp
lea
mov
test
sub
xchg
aad
cmp
cmp
nop
aaa
imul
cmc
jo
mov
aad
out
jl
mov
fs
jmp
xchg
add
cmp
and
aaa
xchg
imul
mov
push
mov
in
lret
mov
std
aam
addr16
jmp
cmp
dec
js
jl
ss
xchg
cli
repnz
mov
stc
jle
mov
mov
shll
fidivrl
mov
dec
aad
rolb
mov
push
mov
xorl
popa
test
in
sub
mov
push
faddl
push
in
and
aaa
testb
dec
inc
sbb
js
gs
cli
cmc
rol
mov
mov
js
icebp
mov
shlb
push
cmp
in
sub
cli
cmc
xchg
lds
xor
adcl
jnp
popa
aas
xchg
xchg
and
gs
sarb
mov
ja
xchg
sbb
pop
inc
xchg
cmp
cmp
adc
test
out
ja
ljmp
push
pop
xor
jns
lret
pop
and
mov
inc
aam
bound
push
lods
mov
sbb
and
mov
mov
pop
cmp
xchg
in
jg
aas
push
mov
jg
inc
pop
scas
scas
mov
dec
out
mov
ret
cmpsl
nop
cmpsl
push
pop
lret
add
outsl
xchg
outsl
jne
mov
das
outsl
sub
sahf
mov
xchg
enter
pop
sbb
adc
imul
jecxz
pop
in
jle
mov
inc
call
jge
mov
testl
xchg
pop
xorl
jns
ret
clc
test
clc
push
clc
fistpl
clc
sti
clc
inc
call
mov
adc
mov
lea
lret
xor
mov
pop
jecxz
es
add
push
dec
orl
ror
adc
testb
xor
or
xlat
cmp
mov
and
cmp
sarb
dec
and
lock
js
pop
mov
inc
mov
cmp
xchg
jge
inc
repnz
pop
push
push
mov
lock
dec
push
ret
outsl
push
inc
and
mov
mov
call
ret
inc
jne
ss
push
aas
jg
into
cli
mov
fiadds
xchg
pop
and
push
or
rep
mov
mov
xor
lods
xchg
mov
jge
pop
sti
scas
mov
adc
insb
add
out
testb
test
outsl
mov
sbb
scas
js
in
adc
add
dec
out
ja
cmpsb
jmp
sti
ss
push
js
aad
in
aas
xor
ds
js
sub
std
fsubrl
mov
dec
mov
sbb
sbb
mov
mov
mov
or
nop
mov
push
inc
out
jae
test
xchg
jnp
inc
popl
push
std
push
fnstcw
add
jl,pt
mov
out
out
or
addr16
outsb
dec
push
rcl
stos
push
mov
mov
adc
in
push
inc
fs
in
repnz
loopw
fs
jbe
cmp
add
pop
mov
push
adc
adc
shr
inc
sbb
sub
in
data16
jecxz
stos
xlat
push
xor
jnp
add
inc
pop
push
sbb
repz
push
pop
fiaddl
mov
mov
movhlps
mov
aam
ret
repnz
adc
loopne
movsb
neg
mov
cwtl
mov
cmp
outsl
cmp
cmp
es
and
outsb
inc
inc
mov
repnz
jno
pop
add
mov
fcom
jb
xchg
adc
pop
add
cmp
add
sti
jne
lret
loop
mov
popa
xor
cltd
aad
ss
cmp
ds
icebp
mov
inc
adc
and
mov
mov
sub
mov
pop
fs
cltd
or
inc
xor
xor
add
push
and
gs
add
inc
popf
popa
pop
clc
subl
pop
jmp
outsb
insl
lcall
jge
scas
fldl
jne
dec
or
jl
andl
cmp
js
mov
fildl
inc
push
push
xlat
cmp
ljmp
rcrl
and
jl
rcrl
les
outsb
mov
mov
lods
fnsave
or
mov
dec
cmp
std
into
jle
lcall
xchg
pop
cmp
imul
lret
sbb
mov
insb
cmp
or
je
gs
inc
adc
or
outsb
loopne
push
imul
sbb
xor
into
add
insb
pushw
mov
lods
jl
sti
mov
mov
cli
inc
in
mov
jb
xor
test
aaa
mov
adcl
cmp
popl
xor
sub
es
mov
jnp
cwtl
pop
mov
mov
mov
les
mov
or
ja
mov
cltd
cmp
dec
outsb
xorb
sbb
sbb
inc
jmp
xchg
adc
inc
push
cmp
outsl
sub
ffreep
xchg
cld
subb
out
cmc
outsl
inc
repz
inc
cld
sbb
inc
sub
rorb
jns
lods
xchg
mov
insb
push
pop
cmp
sbb
fwait
aas
dec
pop
or
jns
mov
clc
fstpt
sahf
clc
es
xchg
pcmpeqb
mov
or
pushf
or
inc
xlat
add
push
sti
or
jecxz
mov
cmpl
dec
fdivrs
lcall
loope
call
adc
jp
pop
adc
sub
leave
push
test
aad
ficompl
lret
inc
xchg
js
rolb
mov
xchg
ss
jnp
sarl
and
test
ja,pn
push
andl
cwtl
test
aad
mov
cmp
pop
insb
xlat
dec
loope
imul
popf
aas
dec
dec
icebp
pop
inc
sti
sub
cmp
sub
sbb
mov
cmc
or
push
pop
shrl
cmp
movsb
insl
dec
insl
pop
cmp
std
cmp
cmp
or
lahf
test
cmp
int
jns
mov
loop
mov
mov
push
notl
push
fwait
pop
es
mov
orb
pop
or
daa
pop
or
pop
outsl
cmp
insb
mov
js
ret
cld
push
cs
mov
les
cmpb
jns
mov
into
jno
cmp
adc
jnp
loopne
aas
sarl
lret
push
insl
mov
cmpl
dec
out
pop
pop
js
test
cmp
je
insl
jle
fmuls
cli
rolb
pushf
and
add
mov
lcall
mov
mov
adcb
in
insl
sub
jns
ror
dec
xchg
mov
das
sbb
mov
nop
fnsave
push
js
rcr
pusha
mov
and
cmp
andb
loopne
fsub
les
adc
stc
cs
lret
mov
out
fsubrs
imul
cltd
sub
fwait
testb
dec
jg
cmp
jle
jmp
jge
fidivrl
ja
lock
jns
insb
jg
pop
mov
pop
add
pop
pop
pop
push
outsl
sbb
stc
cmp
ja
push
mov
jns
add
add
loopne
sbb
cmp
ja
jp
js
mov
sub
sbb
mov
mov
mov
mov
pop
lds
push
sbbb
imul
int
and
jle
lea
jnp
idivl
out
adc
mov
cmp
inc
push
pop
mov
mov
cmp
mov
mov
into
out
adc
jl
addl
sbb
jnp
mov
jns
mov
ja
daa
adc
arpl
or
jns
mov
xchg
mov
mov
cmp
notl
mov
xchg
out
xor
stc
repz
or
sbb
cmp
clc
sbb
mov
sbb
negl
xchg
jns
mov
notl
jecxz
xlat
mov
inc
jnp
push
jns
mov
inc
jnp
add
jns
mov
inc
jnp
add
mov
ret
jns
mov
inc
jnp
add
fdivrs
inc
jnp
add
sbb
inc
jnp
rorb
mov
mov
mov
aas
jns
mov
mov
leave
sbb
jns
mov
mov
or
cmp
adc
mov
dec
sbb
pop
mov
mov
insl
jge
lods
mov
std
int
ds
push
aaa
outsb
jle
pop
scas
mov
aaa
js
cmpsl
not
pop
daa
aaa
out
xchg
inc
cmp
dec
xchg
pop
test
pop
outsl
fmull
push
sub
stos
ds
outsb
jle
aas
add
enter
imul
cwtl
clc
call
dec
sbb
cltd
fdivrs
leave
or
aam
jns
mov
in
sbb
or
cwtl
call
sub
or
imul
pop
or
imul
mov
pop
pop
aas
aad
lahf
pop
pop
cmp
addr16
mov
jge
out
imul
cmp
aas
mov
mov
xchg
sbb
xchg
lahf
cmp
and
sub
mov
fxch
out
xchg
mull
stc
imul
cmp
adc
subl
or
test
js
aas
mull
cmp
pop
jae
or
enter
aas
mov
pop
pop
mov
repnz
call
cmp
imul
xchg
inc
test
mov
cwtl
jl
mov
mov
inc
call
pop
mov
mov
imul
mov
cmp
inc
pop
mov
and
mov
push
imul
aas
sbb
pop
sub
aas
mov
ret
jns
test
sbb
sbbl
dec
mov
pop
bound
stos
or
mov
cltd
add
cmp
aas
push
stc
call
leave
mov
pop
push
sub
cmp
subl
jl
sub
imul
sbb
stc
fcoml
js
aas
cmp
inc
pop
dec
dec
cli
sub
test
mov
mov
pop
mov
pop
jp
dec
mov
sbb
pop
cli
jns
xchg
pop
sbb
jne
jbe
jno
jns
pop
dec
fdivrs
aas
push
ljmp
imul
sub
fsubr
pop
or
jnp
mov
mov
add
sub
or
idivl
stos
stos
xchg
mov
pop
loope
mov
fsts
jg
or
mov
cwtl
pop
mov
jmp
xchg
mov
mov
push
lret
pop
imul
pop
push
mov
jge
out
or
mov
stc
xlat
jp
pop
add
jns
std
sub
leave
pop
mov
or
mov
or
iret
add
adc
inc
cmp
push
or
xlat
pop
push
cmp
data16
mov
enter
inc
jmp
jp
lcall
mov
je
ja
negl
dec
pop
jge
sub
aas
push
idivl
insl
jmp
mov
daa
pop
adc
jbe
fnstcw
leave
lcall
push
mov
pop
xchg
ja
popf
mov
ja
sbb
sbb
aas
adc
cmp
fnstsw
aas
cmp
jmp
adc
dec
outsb
xchg
dec
push
cli
pop
sub
pop
xchg
pop
aas
xlat
push
scas
idivl
and
sahf
mov
sbbl
jbe
or
pop
stos
stos
iret
out
inc
out
pop
dec
cwtl
lahf
cltd
pop
mov
xlat
js
aas
mov
fimuls
pop
iret
mov
jno
or
ja
ficompl
xchg
call
cwtl
mov
jg
mov
inc
clc
pop
subl
aas
push
pop
mov
inc
sub
mov
mov
stos
bound
stos
mov
cltd
stos
jns
leave
add
aas
adc
pop
sbb
pop
lahf
inc
js
pop
cmp
or
out
and
dec
xchg
mov
mov
mov
xor
mov
xchg
adc
pop
popa
pusha
mov
mov
cltd
jbe
data16
stos
add
jmp
push
cltd
xlat
push
sub
pop
or
adc
mov
or
stos
out
mov
adcb
nop
adc
pop
ret
adc
or
imul
jmp
lock
scas
push
rcrb
call
inc
pop
lods
and
ja
sub
push
clc
pop
adc
aas
mov
fwait
pop
jp
enter
pop
sbb
pop
jge
imul
xchg
mov
sub
xchg
aas
push
mov
std
pop
sub
mov
inc
sbb
loope
sbb
pop
rorl
iret
enter
data16
mov
pop
xchg
or
aas
xor
ljmp
rcll
clc
cwtl
inc
fidivrs
jns
xor
xor
inc
cli
stc
cli
pop
dec
jae
push
aas
mov
mov
inc
test
mov
xorb
cltd
push
cmp
inc
dec
pop
fistps
mov
test
scas
add
adc
imul
ret
pop
cmp
sbb
pop
mov
sub
stc
sbb
jmp
pop
cmp
pop
mov
mov
xchg
adc
enter
pop
xlat
arpl
jae
imull
inc
das
push
xor
imul
and
jecxz
pop
push
repz
lods
ret
pop
lahf
push
add
iret
sarl
jmp
dec
ja
fcmovnbe
add
jecxz
pop
cmp
aas
jecxz
jmp
push
xlat
das
sub
cmp
cmp
fstl
pop
bound
fnstenv
movsb
jle
push
pop
inc
cltd
cltd
mov
test
insl
pop
xchg
or
clc
mov
imul
pop
xchg
mov
stos
sub
cltd
imul
sbb
in
mov
dec
or
daa
hlt
xchg
cwtl
sti
pop
mov
imul
jne
aam
addr16
ja
mov
call
mov
mov
adc
gs
dec
pop
or
sub
cmp
aas
push
cltd
testl
aas
push
mov
test
pop
cld
lods
in
lret
jecxz
pop
pop
pop
stos
adc
aas
pushf
cmp
xchg
xor
inc
mov
mov
or
leave
sbbl
push
cmp
pop
dec
sbb
mov
xchg
jbe
inc
js
mov
sbb
mov
inc
pop
leave
ljmp
cld
add
xchg
jmp
jmp
jmp
mov
js
cmp
inc
pop
cltd
out
mov
imul
cmp
imul
pop
sbb
enter
jnp
leave
decl
aas
sbb
cmpsl
sub
dec
pop
mov
in
jnp
dec
test
cli
pop
call
mov
mov
push
cli
pop
cmp
sbb
addr16
sub
pop
sbb
inc
adc
push
xor
xchg
pop
imul
movzwl
xchg
xchg
fiadds
cwtl
pop
push
dec
jmp
xlat
mov
dec
daa
maskmovq
jmp
adc
cmp
push
pop
call
imul
test
xlat
jecxz
pop
mov
xchg
mov
loopne
test
jp
insb
mov
pop
sbb
decl
mov
pop
or
adc
mov
pop
pop
mov
subl
enter
testl
mov
cmp
dec
add
iret
or
test
mov
negl
pop
lds
fwait
pop
gs
mov
cltd
pop
jl
pop
addps
mov
sbb
cmp
sub
mov
push
cltd
cwtl
mov
repnz
push
imul
cmp
leave
clc
xchg
fsts
test
or
mov
enter
call
call
pop
imul
jp
pop
xchg
sub
orl
rcrl
pop
push
stos
fstpt
mov
jnp
mov
rcll
lcall
xchg
ljmp
cmp
pop
cltd
ja
cmp
xchg
jns
pop
mov
jns
cld
pop
sbb
movzwl
or
xchg
inc
pop
pop
push
imul
movzwl
pop
subl
pop
cltd
jns
push
sbb
imul
cld
pop
pop
xlat
stos
daa
pop
test
imul
xchg
stc
dec
lret
mov
unpckhps
imul
inc
sub
xchg
mov
or
test
leave
jo
mull
sti
call
cmp
fwait
add
sbbb
js
cwtl
daa
cmp
xchg
es
ja
jp
jp
cmpl
daa
test
call
sti
sub
jge
cmp
jle
jnp
test
mov
test
imul
stos
sbb
pushf
pop
rcrb
xchg
fisubrs
arpl
fcomps
xchg
jg
inc
cmpsb
enter
loope
xor
fadds
cwtl
cli
cmp
daa
or
jge
mov
mov
cmp
xcrypt-ecb
cmpsl
mov
sbb
scas
negl
test
add
cltd
mov
inc
cwtl
or
cmp
stc
push
pop
mov
pop
xorb
ja
rol
add
xchg
sbb
movsl
mov
js
les
outsl
sbb
mov
leave
xchg
push
stos
sarl
out
ret
jns
ja
push
sbb
shll
cltd
inc
enter
inc
je
or
xlat
inc
sub
cmp
mov
push
test
std
addr16
enter
pop
mov
pop
dec
cmp
aas
mov
mov
cmp
lret
sbb
stos
xchg
cltd
aas
pop
jp
popa
inc
mov
sarl
test
in
mov
ffreep
mov
mov
push
sbb
popa
sti
mov
mov
std
cld
aad
pusha
fldl
les
ja
sbb
mov
push
add
pop
leave
pop
jle
call
mov
cwtl
cmp
add
add
test
popa
xchg
sbb
cmp
cmp
sub
sbb
cmpsl
jns
xchg
test
lea
jns
cmp
inc
add
test
xlat
cltd
push
cmp
test
clc
notl
mov
enter
jnp
pop
subl
cmp
add
mov
loope
bound
mov
cmp
mov
push
add
add
fsubl
outsl
sbb
inc
xchg
pop
or
mov
sub
cmp
jecxz
pop
cmp
popa
loopne
add
fidivrl
ficomps
inc
pop
stc
inc
mov
sti
call
out
jl
enter
popa
and
dec
pusha
push
or
xchg
mov
fmuls
cmp
in
sbb
cld
popf
std
mov
add
int3
test
jnp
sbb
jg
pop
cmpb
or
fwait
int
xchg
inc
and
cmp
mov
sbb
cmpb
xchg
jmp
fxch
pushf
ret
fisttpl
jg
shrl
jb
jp
mov
cmp
cmp
mov
dec
scas
cli
jge
orl
imulb
call
popa
mov
sbb
cmp
push
mov
in
add
dec
ret
mov
pop
or
filds
sbb
push
add
jns
testl
xchg
pop
add
movsb
js
pop
mov
jp
dec
inc
jg
add
bound
mov
and
cmpsb
inc
ja
inc
or
push
jge
aaa
sub
sbb
in
sbb
cmp
cwtl
movsb
sti
movsl
pop
xchg
incl
dec
pop
mov
stc
cmp
out
add
sub
cmovns
cmp
cmp
pusha
ret
movnti
inc
add
in
sti
xchg
sbb
or
or
adcb
stc
pop
or
add
inc
clc
jle
jmp
std
push
sub
add
nopl
push
inc
sbb
stc
add
call
daa
divl
mov
sub
pop
lcall
loop
mov
stc
in
mov
sbb
arpl
mov
xchg
pop
ds
movsl
mov
call
inc
xchg
xchg
jno
adc
sbb
inc
pcmpgtw
imul
push
add
cmp
outsb
nop
pop
jle
call
in
push
dec
adc
test
mov
jns
xchg
enter
mov
test
pusha
ret
ja
maskmovq
idivl
cltd
flds
sti
jge
cmp
loope
movsb
inc
sbb
pop
out
push
dec
jnp
mov
lret
dec
stos
bound
ja
push
jmp
scas
add
test
bound
jp
jp
mov
test
cmp
push
test
pop
stc
lahf
pop
out
inc
leave
or
ja
push
fistpl
ret
push
rcrb
ret
inc
outsl
sbb
rdmsr
xchg
xorb
sahf
cmp
inc
add
stc
jmp
jmp
mov
mov
pusha
lds
sbb
ja
clc
fs
test
fcompl
jle
test
arpl
mov
sahf
inc
pop
cmp
outsl
mov
xchg
negl
mov
popf
sbb
dec
add
sbb
out
sahf
dec
xlat
mov
js
pop
pop
test
ret
pop
imul
in
pop
mov
or
or
sbb
addb
ret
clc
clc
subl
scas
mov
pop
addr16
cwtl
dec
cmpl
orl
in
vmread
aas
gs
pop
ret
cmp
loope
sbb
add
popa
and
xchg
jg
pop
inc
push
jg
cmp
jns
subl
cmpb
sbb
movsb
xorb
xchg
xchg
pop
xchg
sbb
push
mov
les
mov
aaa
clc
mov
jge
cld
or
cmpsb
pop
out
pop
loop
and
mov
rorl
leave
hlt
inc
jns
jnp
dec
sub
inc
inc
scas
xlat
es
lds
fidivs
inc
mov
js
inc
adc
pop
enter
sti
cmp
out
setne
jl
arpl
push
clc
clc
pusha
inc
xchg
cmp
jle
jnp
dec
bound
ds
cvtpi2ps
dec
insb
adc
jmp
mov
jo
mov
xchg
mov
cmp
adc
roll
pop
and
mov
push
or
sbbb
les
jg
out
dec
clc
jge
or
xchg
cmp
cmpb
neg
xadd
sbb
dec
jmp
cmp
jle
andb
mov
pop
or
mov
faddl
add
sbbb
cmpb
cmp
or
lret
sub
and
dec
sbb
les
pop
pusha
jecxz
sbbl
pop
fnstenv
mov
jl
cmp
loopne
andb
dec
fucomip
mov
fs
out
outsl
sbb
push
js
mov
js
mov
stc
mov
jns
inc
push
loopne,pt
sbb
ja
mov
jns
out
xchg
inc
inc
inc
roll
or
push
cld
popf
ja
push
test
pop
xchg
stc
and
add
fucomi
mov
dec
dec
fistps
clc
sub
sti
and
aas
nop
pop
cmovs
pushl
fnstsw
imul
sub
clc
or
mov
pushf
inc
test
shl
jecxz
mov
cli
and
fcomp
sbb
xlat
sbb
inc
jg
and
cmp
jg
orl
mov
jns
push
pusha
inc
enter
stc
cmp
cmp
pop
inc
adc
test
add
daa
loop
sub
cwtl
xchg
cli
mul
inc
xchg
loopne
jl
rcrb
lret
mov
lea
aas
sbb
sbb
js
inc
pushf
xchg
pop
enter
cmp
leave
sbb
mov
sar
stc
sbb
test
cmp
sbbb
bound
stos
cltd
xchg
out
jns
sbb
pop
mov
sbb
sbb
pop
test
xchg
movsb
fcomps
or
std
test
fwait
cli
ja
lret
xlat
sub
mov
xlat
jp
dec
stc
inc
pop
add
add
jp
cmp
add
aas
rclb
mov
ror
pop
cmp
sbb
loopne
mov
cmp
cmp
or
or
and
inc
aas
in
mov
mov
sar
push
lcall
fxch
fs
cld
aas
mov
addb
popa
add
out
mov
ret
pop
pop
mov
jae
mov
rcll
ja
or
pop
cmp
add
test
popa
bswap
cmp
inc
jge
enter
testl
paddb
loopne
inc
fstl
inc
xchg
ret
test
ret
popl
popa
ret
arpl
jns
mov
popa
cli
or
lret
pop
jns
popa
and
test
push
out
scas
imull
mov
pusha
push
sbb
arpl
sbb
outsl
shrl
cmp
xlat
notl
bound
jns
push
cmp
cmp
xlat
push
mov
ljmp
inc
movsl
lret
mov
mov
cwtl
orl
mov
leave
jg
or
and
aam
and
jp
dec
pushf
bound
ret
sahf
cld
mov
dec
fs
add
mov
sbb
stc
testb
inc
popf
fistpll
add
mov
pop
or
and
lahf
ja
dec
sbb
cmp
lea
sbb
xchg
stc
js
movsb
pop
clc
mov
and
jp
or
add
push
pop
xchg
xchg
bound
ja
or
or
std
js
les
mov
imul
fwait
push
jmp
sbb
and
sub
rolb
js
mov
mov
stc
or
sbb
js
jns
or
cwtl
add
fstpl
pop
push
cwtl
mov
imul
cmp
add
enter
or
notb
pop
sbb
sub
push
sbb
inc
fwait
push
lret
loop
and
xchg
jmp
addr16
imul
std
mov
push
loope
and
cmp
mov
inc
shrl
call
iret
sbb
iret
inc
mov
cltd
mov
fldenv
inc
test
mov
push
add
inc
adc
bound
fnstsw
leave
dec
cwtl
push
cmp
movsb
ds
test
lea
jge
or
mov
pop
cld
xchg
dec
out
xchg
inc
fnstsw
pop
ret
and
and
sbb
xor
pop
push
sub
sbb
mov
add
sar
movsl
dec
dec
xchg
outsl
pop
mov
imul
pop
cmpsb
jmp
jnp
and
cmp
aaa
push
ja
or
fiadds
cld
add
loope
scas
add
data16
sbbb
pusha
fsubs
inc
cmp
mov
sahf
pop
mov
and
fdivrs
ret
and
add
cwtl
or
gs
movsl
pop
xchg
inc
mov
fistps
sbb
loope
fisubl
lahf
add
push
mov
setle
fstpt
mov
xchg
mov
fmull
lds
cmp
adc
fnstsw
std
mov
mov
sub
jg
js
pop
xchg
int
mov
in
mov
xchg
push
add
push
push
stc
movsl
stc
rcrb
out
mov
jge
pop
pusha
pop
and
jns
xor
imul
shrb
inc
mov
mov
xchg
cmp
testl
mov
pop
call
add
xchg
pop
pop
cltd
mov
ret
pusha
pop
bound
dec
mov
shr
jg
scas
out
pop
mov
and
ds
xchg
in
lds
fwait
fwait
pop
sbbb
xchg
and
xchg
loopne
inc
addr16
xchg
stc
mov
mov
mov
andb
ds
sti
jnp
cmpsl
add
imul
add
inc
pusha
mov
push
sub
cmpsb
sbb
dec
add
ret
pop
cmpb
addr16
jge
jg
scas
inc
aad
shl
sbb
mov
xlat
dec
jae
stc
pop
mov
cld
loopne
inc
clc
iret
pop
mov
jecxz
inc
push
xchg
int3
xchg
ret
cld
pop
pusha
push
es
fbld
cmp
loopne
push
mov
jmp
stos
mov
push
mov
pop
orb
mov
sbb
mov
push
lds
dec
and
mov
mov
jmp
cmp
loopne
add
add
gs
insl
cmp
test
cltd
pusha
add
pusha
jl
rcrb
jnp
testl
mov
mov
xchg
fsub
aas
cmp
pop
pop
std
mov
int
inc
mov
jg
xchg
imul
xchg
pusha
or
inc
fnstcw
cmp
mov
or
pop
cmp
xlat
loop
popa
sbb
rolb
jnp
popa
jmp
mov
dec
pop
xchg
sbb
or
out
sbb
and
bswap
fildll
cmp
add
push
sub
pop
fwait
stc
push
jmp
xlat
adcl
ret
xchg
arpl
jecxz
fistpl
pop
jp
fcomps
pop
jnp
adc
bound
addr16
stc
aaa
or
int
pop
ja
jge
lret
repz
jmp
sbb
jnp
mov
mov
sti
adc
enter
ret
inc
xchg
in
dec
mov
sti
jns
cmp
pop
fnstenv
rol
sbb
aas
or
xchg
sbb
dec
cmpsb
cmp
sbb
xchg
ret
xchg
add
add
adc
cmpsb
sbb
mov
fwait
cwtl
fiaddl
xchg
movsb
sbb
aas
ja
daa
ss
andl
jnp
clc
dec
sarl
xchg
mov
std
test
xorb
jns
clc
and
xlat
inc
inc
mov
adc
mov
push
jle
sub
sti
sbb
rcll
xchg
mov
push
jecxz
cmpsl
mov
out
mul
loopne
jecxz
cmp
add
or
add
jbe
pop
jge
mov
mov
orb
mov
adc
push
sub
lds
push
dec
mov
bound
pushf
jp
ja
cmp
out
mov
arpl
rcll
pushf
dec
mov
fwait
ret
test
pop
test
and
add
inc
xlat
push
arpl
addr16
inc
push
mov
dec
movb
mov
cmp
jns
fmul
push
add
hlt
push
add
stc
inc
int
add
std
sbb
pop
mov
xchg
and
cmp
mov
mov
add
in
fldcw
shrl
and
popa
or
lock
lds
sti
clc
cmp
pop
in
sub
fwait
mov
pop
jl
sub
inc
ret
leave
sbb
mov
ja
cmp
fmul
cltd
pop
and
push
andb
in
dec
clc
iret
stc
testb
arpl
jns
cwtl
mov
inc
jae
mov
iret
inc
jl
cmp
dec
xchg
mov
adc
ret
jp
cwtl
gs
jmp
pop
or
lahf
mov
test
sbb
inc
adc
testl
jnp
inc
xchg
cmp
push
int3
cmpsb
dec
test
xchg
arpl
clc
jmp
inc
and
mov
inc
pop
test
cmp
testl
cwtl
dec
push
cld
jp
xlat
adc
pop
pop
pop
cmp
cli
xlat
cmp
sbb
ja
sub
cmp
lcall
stc
push
insl
pop
inc
scas
mov
ja
in
xchg
jge
xchg
dec
push
sbbb
popf
rcrb
or
sub
fwait
dec
add
dec
xlat
mov
movsl
hlt
int
cmp
inc
std
mov
mov
cmpb
cmp
sti
pand
stc
pop
addw
fwait
jmp
xlat
movsb
dec
dec
test
mov
lret
mov
xchg
pop
ret
shl
in
test
int
stc
ja
mov
fidivrs
dec
or
js
cmpsl
pop
daa
lahf
inc
sarb
test
inc
or
mov
push
cli
jg
inc
jge
inc
mov
sar
arpl
scas
loop
xchg
fs
test
loopne
mov
xor
push
addl
cltd
addr16
inc
cmp
movsb
push
out
stc
mov
fdiv
addr16
imul
test
sbb
mov
push
lahf
inc
mov
mov
and
fdivl
mov
push
cltd
adc
popf
inc
rcll
pop
inc
jmp
ret
mov
add
mov
mov
or
push
lcall
adc
adc
or
sbb
inc
flds
add
add
pop
shlb
shl
and
mov
enter
jle
fxch
xlat
clc
sub
pop
fadd
and
mov
movl
sbb
cltd
sub
pop
mov
loopne
jecxz
cmp
mov
push
fs
cmp
jmp
push
popf
mov
jge
stos
push
xor
pop
push
notl
in
sarl
popf
clc
jns
mov
cmpsb
or
test
ret
push
mov
cmp
mov
leave
inc
xchg
mov
jl
push
or
aam
mov
dec
js
push
sbb
push
mov
out
push
stos
mov
xchg
sub
mov
in
clc
lcall
push
jecxz
sbb
inc
xor
loop
xor
subl
pop
xor
push
mov
clc
push
rorl
and
pop
or
test
sbbb
xchg
push
sbb
gs
jnp
ja
pushf
pop
mov
adc
sbb
push
lret
pop
mov
mov
inc
testl
dec
dec
ja
add
dec
imul
fs
mov
pop
inc
cmp
call
mov
mov
pop
imul
leave
jns
mov
leave
movl
pop
pop
adc
pop
cmp
push
or
pop
imull
mov
dec
or
cmpl
cld
dec
testl
sbb
clc
dec
stos
int3
fisttpl
push
imul
add
test
pop
cmp
xor
cltd
or
pop
or
and
lahf
mov
cli
push
mov
inc
cmpb
add
mov
push
sub
jp
jg
out
int
or
mov
or
add
cmp
pop
cmp
testl
dec
aas
clc
fcompl
sbb
je
cmp
and
add
cmp
add
cwtl
test
insb
adc
cmpsl
push
inc
mov
xor
dec
cmp
sub
or
ja
mov
sbb
sbb
push
pop
cmp
rclb
jnp
fdiv
loope
jnp
cwtl
xchg
cmp
imul
loop
mov
push
in
sub
adc
xor
inc
call
inc
data16
push
push
cmc
test
xor
test
out
bound
imul
idivl
std
mov
stc
sbb
dec
fimull
mov
lahf
testl
pop
mov
push
jnp
sahf
js
cmp
mov
mov
stos
fisubrl
adc
cmp
sbb
sbb
clc
sbb
imul
mov
mov
daa
push
pop
or
cwtl
sbb
pop
lcall
ja
jmp
mov
test
jae
in
pop
add
xchg
imul
cmp
enter
push
sub
mov
rcr
aad
sbb
idivl
cmp
mull
mov
xchg
xchg
jp
adc
mov
sub
mov
add
sbb
xchg
jle
mov
pop
sbb
testl
adc
pusha
repz
push
das
xlat
dec
testl
mov
push
clc
clc
or
daa
popa
xor
imul
mov
fs
pop
inc
imull
insb
pop
mov
or
or
adc
jp
mov
mov
testl
movl
mov
fsub
mov
cmp
mov
lds
push
or
sub
sbb
imul
je
pop
fs
pop
push
mov
int
or
push
clc
nop
pop
sub
imul
cmpw
test
dec
inc
mov
cltd
imul
jnp
hlt
rol
dec
in
divl
je
inc
jns
pop
jns
jle
sti
leave
push
cmp
mov
test
sbb
or
mov
in
into
xchg
add
cmp
fstpt
jg
mov
jnp
cmp
xlat
cltd
xchg
es
pop
cmp
loopne
in
bound
and
daa
loope
leave
dec
loope
pop
stc
jmp
pop
xor
mov
jmp
or
fisttpll
jge
subl
popf
jns
jnp
push
xlat
push
xchg
sbb
jns
pop
jae
mov
outsl
xchg
fprem
jg
mov
sbb
mov
inc
and
enter
mov
popa
xchg
loope
inc
sbb
ret
neg
jo
sbb
pop
popf
cmp
lret
mov
lds
bound
js
push
pop
fxch
mov
mov
and
sbb
add
popa
fnstcw
sbb
or
sub
in
lret
and
mov
sub
insb
lcall
jns
gs
cmp
test
stc
sbb
mov
mov
popa
cltd
sbb
jmp
dec
js
push
or
jge
fwait
stc
and
sub
cmp
loopne
aas
outsl
cmpsl
sub
rcrb
mov
ljmp
cmp
inc
leave
ljmp
mov
mov
xchg
test
mov
mov
add
out
fs
nop
cmp
xor
imul
jl
sbb
or
mov
xchg
lret
jl
js
jecxz
loope
mov
repz
fnstsw
mov
pop
push
inc
mov
inc
inc
jg
aad
ja
add
cmp
xchg
inc
sbb
dec
sahf
iret
pop
sahf
push
mov
xchg
js
popa
sbb
icebp
fwait
dec
jmp
dec
or
in
mov
movsb
dec
imul
jg
cwtl
lds
mov
test
bound
jns
fmull
sub
lock
inc
mov
jmp
ret
mov
or
xchg
push
lods
jae
cmp
loope,pt
jns
dec
pop
scas
adc
mov
push
adc
add
push
or
sbb
push
sbb
adc
std
adc
jge
int
jns,pt
sti
outsb
in
insl
addl
jecxz
mov
push
mov
jno
movsl
xor
arpl
jg
cmp
sub
pusha
sub
xchg
int3
sub
js
pop
cltd
adc
xchg
and
es
mov
add
bound
xorb
inc
cmp
in
xor
sbb
idivb
sahf
jb
inc
mov
mov
pop
rol
mov
mov
inc
into
sbb
push
arpl
mov
inc
clc
push
lods
or
cwtl
lret
mov
pop
xchg
adc
mov
push
jge
pop
push
out
mov
call
lret
daa
in
scas
push
pop
adc
pop
jnp
mov
xchg
adc
push
adc
add
sbbl
jns
mov
add
add
mov
sbb
mov
mov
jp
cmp
mov
mov
cmp
arpl
xchg
push
mov
test
sbb
cmpb
jnp
decb
mov
sbb
mov
xor
lds
mov
sarl
sbb
jns
mov
pop
mov
sbb
mov
pop
jnp
mov
jns
mov
fstpt
cmp
or
sbb
insb
mov
pop
jnp
mov
and
mov
loope
outsb
mov
dec
scas
fdivr
scas
and
shlb
ret
lea
xchg
push
sbb
jle
dec
adc
scas
jnp
mov
ja
sub
out
inc
sub
xchg
test
and
sub
decb
dec
sub
out
inc
sub
xchg
test
and
stc
pop
leave
xchg
xchg
mov
sbb
mov
mov
jmp
pop
enter
sbb
cmp
clc
mov
mov
pop
dec
fisubrl
sbb
sbb
scas
repnz
jb
js
mov
icebp
out
dec
lret
and
sub
ds
subb
jo
js
inc
jge
cmp
divl
mov
stos
inc
pop
push
dec
mov
push
stos
sbb
pop
lods
sbb
movsb
sbb
sbb
sbb
push
mov
inc
lods
push
pop
mov
fildll
or
cmp
sub
fisttpl
stos
jmp
fwait
adc
push
pop
mov
jnp
idiv
sbb
cmp
jno
andl
dec
leave
sbb
repnz
cmp
add
mov
pop
stos
cmp
sbb
shrl
movsl
decb
call
pop
in
stc
fldenv
mov
sbb
mov
mov
cmpb
fxch
jg
xchg
enter
imul
jge
cmp
fnstenv
lea
lcall
cwtl
insl
or
pop
dec
jp
dec
lcall
xor
jbe
pop
sahf
fiaddl
test
scas
cltd
and
mov
ja
scas
idiv
or
cmp
cmp
sbb
cmp
adc
dec
jl
mov
jecxz
imul
add
push
in
les
fs
fadds
ss
aam
mov
mov
inc
jnp
inc
out
add
mov
mov
cmpsb
sbb
mov
jns
jbe
data16
push
jnp
les
xor
mov
mov
cmc
jnp
in
mov
xchg
sbb
test
cmp
push
sbb
inc
mov
clc
jnp
ja
adc
add
adc
and
jg
std
sbb
jns
mov
ja
xchg
test
sbb
jnp
inc
movsb
sbb
adc
jnp
mov
jns
mov
jns
xor
and
inc
test
sarl
mov
popl
sbb
jns
mov
cmpl
cmp
mov
adc
sbb
mov
jae
cmp
popl
adc
adc
inc
or
jns
mov
pop
sbb
jns
mov
bnd
loop
jge
xchg
jns
mov
mov
push
movsb
jnp
orl
mov
jle
sti
adc
mov
mov
fs
push
inc
jae
arpl
inc
sahf
shll
and
inc
out
mov
xlat
movb
fdivl
gs
push
mov
push
jecxz
adc
dec
bnd
adc
in
rcrb
sub
jmp
movsl
adc
add
jb
add
repnz
add
xor
loope
rcll
ret
push
leave
addr16
xor
jns
or
rorl
push
shl
cmp
bound
in
mov
jp
mov
adc
imul
adc
add
mov
cmpsb
cmp
divb
mov
je
xchg
mov
xchg
popa
mov
mov
push
andl
xchg
pop
lret
cld
ja
es
or
es
or
cmp
rcll
inc
pop
stc
xchg
test
lahf
je
and
lea
pop
js
jns
cmp
mov
mov
jecxz
mov
add
fildl
divl
add
inc
mov
out
inc
inc
mov
mov
cmp
push
stc
mov
loop
add
sbbb
sbb
sti
pushfw
jno
push
insb
cmpsb
and
jne
arpl
jl
addl
pop
hlt
mov
stc
cmp
stc
addl
jg
or
cmc
xor
xchg
inc
sbb
mov
js
popf
shll
iret
js
add
push
fwait
mov
cmp
inc
outsl
xor
dec
mov
mov
pop
inc
inc
test
aam
fdivrs
stc
push
loope
sbb
dec
cmp
fadds
ret
and
idivb
jns
mov
sbb
addb
inc
and
rcll
bnd
jge
push
lea
push
jg
inc
cmp
push
inc
push
addb
or
aad
add
or
fstpt
sarl
mov
mov
add
sbb
cmp
sbb
fisttpll
add
cli
add
sbb
sarb
testl
sbb
bound
gs
adc
or
movsl
cmp
notb
jno
push
cmp
mov
loope
sbb
xlat
xor
adc
mov
cmp
orl
shll
adc
inc
ret
stc
mov
and
xor
incl
lods
js
or
repz
insb
jnp
inc
cwtl
xlat
cmp
push
jmp
movsb
test
ret
push
add
cmp
cmp
inc
pop
push
test
sbb
fildl
inc
mov
sbb
or
popa
cli
clc
mov
out
dec
add
cmp
inc
sti
mov
sti
mov
push
gs
adc
adc
mov
adc
out
sbb
sbb
repnz
out
clc
xchg
push
xor
pop
js
add
sbb
inc
jle
pop
out
inc
nop
add
in
test
inc
mov
stc
add
sbb
push
and
push
jmp
cmp
mov
and
pop
repz
adc
movsb
loope
mov
std
cmp
cmp
insl
pushf
in
orl
push
xchg
icebp
pop
mov
jns,pn
pop
int
jge
mov
xor
mov
mov
dec
loope
cltd
ss
inc
jno
push
dec
cmp
or
ja
jnp
xorb
aas
outsb
js
mov
adc
es
dec
loop
adc
cmp
lcall
shl
idivl
xchg
xor
dec
xor
jbe
or
or
arpl
dec
rclb
movb
cmp
js
cmpsb
js
movsl
xor
test
adc
inc
mov
neg
mov
jb
cmp
or
pushf
ja
mov
sbb
jnp
fmull
or
or
xor
jnp
inc
popl
add
sbbb
jns
repz
jns
mov
xor
out
push
xchg
movsl
dec
mov
ja
dec
mov
out
js
rcr
imull
fs
or
test
mov
dec
mov
lret
xchg
outsb
lock
add
mov
lret
mov
cmp
cmp
pop
fwait
pop
mov
cmpl
add
mov
dec
cmpsl
mov
sbb
ds
ja
mov
imul
sbb
cmp
ja
test
jbe
mov
ds
mov
or
mov
imul
mov
cmp
or
cmp
outsl
cmp
add
adc
push
or
adcl
lds
xchg
mov
add
not
cmp
add
push
sgdtl
add
pop
cmp
jnp
cmp
and
shl
lds
mov
out
jb
or
mov
mov
ret
cmp
xor
xchg
add
inc
sbb
cmp
mov
cmp
mov
mov
sbb
cmp
xchg
xchg
mov
jp
or
adc
add
add
cmp
mov
fs
mov
imul
jg
mov
aas
mov
add
sbb
xlat
int
rcr
or
lea
loopne
add
aas
ret
xchg
mov
nop
pop
mov
mov
into
fdivr
and
add
stos
lret
add
inc
movsl
push
test
sbb
inc
mov
jge
jl
mov
cld
sbb
psubq
cmp
push
add
mov
scas
cmp
cmp
mov
bound
jne
push
and
mov
pop
cmp
mov
cmp
mov
insl
popa
cmp
mov
ss
shll
and
pop
or
ja
shlb
stos
shll
mov
and
pop
mov
fisttpll
mov
mov
and
add
mov
cmc
inc
mov
or
mov
and
mov
inc
and
mov
sbb
push
repz
sarl
mov
outsl
or
pop
into
adc
loope
push
and
mov
xchg
add
mov
push
mov
mov
and
add
mov
imul
call
mov
pop
jp
mov
inc
cmp
inc
cltd
add
jno
adc
adc
jl
cmp
xorl
dec
mov
ja
mov
aas
ss
cmp
bound
cmp
movsb
push
rolb
cmp
xor
or
jg
mov
cmp
ja
and
shlb
mov
or
cmp
and
and
in
sbb
repnz
jl
ds
mov
fstl
loop
in
cmp
jae
mov
cmp
or
sbb
test
dec
mov
add
dec
jl
add
xor
cld
sbb
mov
mov
push
std
aam
xchg
lcall
mov
push
jge
push
or
in
dec
mov
dec
jge
mov
xchg
mov
sti
clc
mov
fnstsw
dec
jl
nop
mov
cmp
adc
pop
test
fdivp
bound
out
adc
inc
aas
mov
xchg
lds
js
movsb
cmc
xlat
push
mov
inc
pop
lret
pop
xchg
ret
push
push
inc
add
sub
sub
dec
xchg
mov
push
fmulp
sarb
adc
out
add
scas
pop
fnstcw
lds
ds
leave
lret
dec
add
dec
or
in
ds
xor
repnz
sub
idivb
pop
insl
jnp
daa
mov
movsb
mov
fidivs
cltd
repz
jns
add
popa
inc
add
xorl
add
lea
inc
xchg
mov
fcomps
jp
and
xchg
leave
or
or
loop
clc
mov
and
aas
mov
add
jg
xchg
pop
sub
js
xchg
pusha
orl
push
sbb
sub
mov
pop
mov
push
pop
ja
pop
idivl
mov
cmp
icebp
lcall
aas
insb
addr16
jns
mov
push
arpl
mov
addr16
mov
leave
cli
push
push
adc
ss
add
ds
cli
loope
sub
xchg
ss
inc
loop
lcall
sub
fldcw
mov
jge
popf
jge
std
adc
mov
sbb
pop
adc
sbb
mov
fnstsw
cmpb
inc
aas
movhps
pop
add
push
imul
in
xchg
std
jb
jmp
sarl
fidivrl
mov
aas
stos
mov
imul
jns
push
and
divl
cmp
ret
mov
xchg
js
jge
mov
cli
stc
ret
or
xchg
inc
cmpsb
adc
nop
or
sbb
mov
dec
mov
pop
jge
mov
push
mov
jmp
nop
mov
xchg
or
fwait
mov
sbb
jp
cmp
jg
pop
add
push
mov
jle
jnp
aad
add
mov
addl
test
mov
addl
mov
xchg
stc
mov
test
ret
jg
mov
xchg
stc
mov
lahf
xchg
pop
decl
add
sbb
mov
lods
js
jge
mov
les
cli
xor
inc
xchg
jns
xorb
lcall
push
xchg
addb
sbb
pop
xchg
adc
in
push
mov
xchg
xchg
js
xchg
mov
xchg
js
jge
mov
pop
jge
mov
dec
cmc
sbb
xchg
xchg
mov
cmp
ja
pop
or
sub
decl
fdivrs
xor
push
cld
dec
mov
jae
mov
add
push
and
push
mov
mov
or
std
js
mov
dec
cmp
enter
orb
sbb
mov
xchg
imul
jno
or
js
cmp
jecxz
sarl
sbb
cld
sbb
mov
mov
xchg
clc
or
cwtl
xlat
push
mov
xorl
js
cmc
nop
js
rolb
inc
sbb
push
mov
add
ret
ja
inc
mov
add
lcall
and
pushf
insb
test
sti
js
mov
xchg
inc
cmpsb
js
inc
adc
sbb
mov
xchg
push
mov
adc
adc
mov
sbb
inc
pop
jle
rclb
incb
adc
sbb
les
inc
lcall
mov
dec
cld
mov
sti
xchg
fwait
js
mov
lds
cld
sbb
cmpl
jne
sbb
js
jge
idivl
xorl
xchg
mov
jmp
inc
aas
add
roll
cli
jp
mov
add
push
inc
xchg
data16
adc
nop
add
cmp
std
pop
mov
daa
or
mov
xchg
xchg
and
mov
fs
insl
cmp
sti
xlat
push
mov
or
imul
notl
mov
imul
imull
or
cmp
imul
cmp
dec
ds
mov
xchg
jmp
jg
xchg
xlat
rcll
add
lcall
negl
decb
mov
cmp
cmpsb
push
call
jns
bound
xorl
mov
mov
add
or
js
cld
sbb
addr16
mov
jns
add
subl
or
xchg
adc
imul
inc
inc
inc
ja
lds
xchg
js
clc
xchg
mov
mov
lods
add
fwait
cmp
std
push
or
push
addr16
sbb
rol
ds
sbb
jg,pt
andb
mov
int3
push
ret
aas
data16
or
insb
add
sbb
sbb
jnp
cmp
mov
or
adc
add
push
test
inc
mov
jge
add
push
pslld
jb
lcall
adc
cmpsl
movsb
dec
xor
repnz
or
popa
testl
pop
pop
cmp
std
in
mov
sub
and
push
pop
repz
mov
mov
add
xchg
xorl
xchg
notb
inc
repz
add
mov
ret
inc
add
loope
add
inc
xchg
ja
xor
and
mov
lret
xor
xchg
js
inc
mov
pop
mov
dec
xor
xor
jmp
mov
xchg
xlat
sbb
mov
jno
xchg
add
test
aam
repnz
mov
mov
loop
out
out
cmp
inc
mov
cmp
call
mov
pop
mov
mov
mov
xlat
aaa
mov
inc
shlb
push
movl
scas
lahf
xor
mov
lret
or
sarl
mov
add
xchg
adc
add
test
arpl
pop
cmpsl
mov
adc
jbe
jae
mov
mov
aaa
bound
push
mov
cmp
lods
jl
xchg
test
push
or
inc
loopne
xchg
mov
adc
stos
roll
ret
mov
roll
cmpsl
clc
mov
dec
cmpsl
or
add
or
jecxz
lret
xchg
je
xchg
test
test
clc
faddl
jae
and
jno
xchg
cmp
popa
pop
xchg
inc
js
pop
movsb
push
jnp
mov
data16
sbb
sbb
sbb
je
sbb
mov
ret
movsl
cmp
push
xor
xchg
bound
xchg
loop
inc
push
mov
jnp
jns
sbb
dec
mov
cmp
fwait
jle
adc
imul
dec
test
mov
mov
sbb
fs
sarl
enter
sbb
or
inc
fs
pop
stos
mov
xchg
inc
pop
idivl
mov
enter
jmp
mov
sub
and
js
adc
jb
repnz
adc
jae
dec
and
outsb
js
adc
push
insl
fisttpll
xorl
mov
clc
mov
mov
cs
sti
addl
cltd
ret
or
fwait
shrb
stc
imul
imul
enter
inc
fwait
repz
je
repnz
add
jo
shlb
add
loop
cmc
xchg
out
cmc
or
adc
jnp
mov
jp
andl
mov
iret
adc
add
rol
inc
jecxz
xchg
movaps
push
loope
jns
das
jmp
xchg
cmp
daa
sbb
outsl
ret
not
push
xor
call
inc
fcomps
test
les
mov
inc
pushf
adc
rorl
pushf
mov
sbb
sbb
je
xchg
inc
sbb
sti
cwtl
pop
add
cmp
arpl
add
pusha
cli
fidivl
sub
adc
xorl
bound
bound
dec
repz
jns
inc
and
push
pop
std
aas
cmp
in
xor
fildl
lods
xchg
cmp
or
cmp
or
jno
xchg
pop
std
jp
fadds
clc
pop
jp
mov
rolb
jp
add
js
and
mov
mov
shll
jecxz
pop
mov
jle
xchg
cmp
or
cld
xor
cmp
mov
mov
jge
ljmp
inc
jns
jmp
mov
jg
cwtl
sbb
add
ffree
loope
jg
cmpsl
push
cmpsb
mov
push
sahf
pop
push
enter
sbb
cmp
mov
xor
cmpsb
pusha
cmpb
fadds
mov
ds
in
popa
add
clc
adc
fs
jns
push
cmpsb
or
ja
or
sbb
pusha
mov
movsl
xchg
and
mov
or
cmp
mov
cmp
xlat
jp
ret
jp
inc
mov
fsts
inc
add
add
fcomps
sbb
and
mov
jl
pop
add
mov
cmp
mov
or
stc
inc
out
jg
mov
mov
inc
popf
ja
xor
pop
test
ret
dec
xorb
inc
movb
stc
lock
cmp
cmpsb
aaa
pusha
cmp
xchg
filds
pop
call
sbb
or
testb
xchg
jbe
xorl
or
outsl
xor
adc
cs
sbbl
ds
inc
mov
data16
inc
push
out
cmp
jg
cmp
jp
fs
push
xchg
jns
xorb
inc
adc
andb
push
pop
and
loopne
jmp
mov
lret
xchg
push
push
jno
into
adc
push
mov
xchg
jp
mov
test
test
inc
fwait
or
and
cli
fwait
or
mov
mov
mov
push
mov
sbb
sbb
loope
popa
jb
adc
push
push
loop
add
punpckhwd
mov
or
cmp
xor
fwait
imul
std
cmp
add
xor
add
push
lcall
scas
and
leave
cmp
mov
cmp
pop
pop
dec
push
pop
and
inc
shrb
cmp
cmp
jb
pop
repz
mov
js
lahf
xor
jne
shlb
aad
and
add
mov
add
cmp
add
dec
lock
or
pop
mov
add
ret
lea
jg
cmp
and
int3
and
dec
adc
loop
xor
stos
cltd
jmp
mov
in
std
dec
subl
jle
add
in
imul
dec
movsl
xlat
mov
jnp
mov
pop
add
js
lcall
roll
xchg
jp
or
mov
cld
mov
dec
cwtl
jns
or
add
test
inc
mov
xchg
fwait
cmp
lahf
mov
inc
pusha
pushf
pusha
dec
insb
xlat
mov
xchg
jp
sbb
mov
add
in
test
les
cli
push
sub
sbb
adc
add
inc
std
movsb
mov
orl
jg
dec
jl
loop
scas
cmp
adc
clc
ret
dec
and
jp
jle
cmp
cwtl
mov
ja
ret
rcll
xchg
movsb
sbb
adc
inc
pop
sti
imul
mov
sbb
mov
pop
repz
aam
ds
pushf
test
iret
inc
enter
xlat
pushf
mov
bound
loop
mov
rol
xchg
leave
or
jmp
cltd
mov
xchg
lcall
dec
push
lahf
cltd
js
inc
rolb
bound
fnstcw
sbb
and
or
lds
xor
cwtl
lea
dec
movsl
inc
inc
jg
in
mull
jecxz
popl
xchg
mov
cld
mov
inc
in
jge
in
mov
push
jne
pop
push
jle
ret
mov
jnp
jg
roll
inc
add
addl
mov
push
mov
lods
popf
pushf
scas
mov
std
or
add
add
cwtl
mov
loop
je
pusha
mov
insb
out
inc
jg
das
dec
mov
shrb
int
inc
mov
js
inc
sahf
inc
arpl
aad
out
pop
loopne
push
arpl
fchs
pop
mov
mov
pushl
lds
popa
fsts
rcll
repz
mov
ss
add
mov
test
pop
faddl
fidivs
cld
pop
jnp
fwait
les
js
negl
inc
sbb
mov
or
jecxz
scas
mov
mov
cmp
xor
ja
dec
outsb
xchg
dec
sbb
shrl
xchg
push
inc
cmc
jns
jns
cmp
cmp
jne
add
test
inc
movsl
sub
xorl
mov
xchg
sub
fisttps
dec
push
and
loopw
jae
adc
lahf
stc
push
add
adc
xchg
cmp
mov
mov
xor
in
fs
xchg
jno
jno
cmp
xor
xor
push
fisttpll
sub
inc
cmp
mov
scas
pop
jnp
jg
pop
loop
data16
std
pop
jns
mov
pop
in
test
cmp
sbb
jle
stc
pop
pop
adc
mov
mov
inc
mov
scas
mov
unpckhps
jb
add
xlat
incb
mov
cld
leave
push
cmp
out
adc
pop
bnd
push
add
add
jle
mov
rcrb
outsl
js
cmp
rcrl
fistpl
scas
std
nopl
sbbb
leave
jmp
enter
shld
add
fistpll
stc
cmp
jp
xchg
xor
xchg
xchg
dec
inc
je
lcall
in
push
js
jmp
sbb
sbb
in
mov
add
mov
mov
sbb
lcall
jp
mov
pop
insb
dec
mov
jmp
adc
jbe
mov
js
pop
sbb
cli
dec
int
or
mov
push
sbb
stc
lea
sbb
test
repnz
les
sbb
pop
cmp
ret
mov
lds
dec
jg
or
aad
add
push
movsb
ret
sbb
sub
popf
inc
lret
add
jle
add
call
repz
movb
cmp
fs
sbb
dec
pop
out
jns
sbb
imul
mov
enter
ret
mov
pop
in
mov
movsb
xchg
in
cmpb
repnz
cmp
lcall
jae
xor
push
xor
pop
cmp
xchg
scas
bsf
add
mov
inc
jmp
sbb
repz
call
xor
jmp
mov
pop
sub
sbb
jecxz
lods
fdivrs
mov
xor
roll
ficoml
movsb
test
ds
roll
mov
cmp
and
mov
ds
enter
or
sbb
cld
push
inc
push
movsl
or
pop
xor
std
push
pushf
jne
ret
adc
mov
dec
push
or
lea
lds
lcall
fmul
lcall
out
testl
les
test
xor
and
cmp
dec
data16
dec
loope
inc
dec
mov
inc
mov
imul
pop
es
mov
stc
pop
inc
push
push
cmp
and
push
adc
add
loop,pn
and
bound
add
sbbb
sbb
pop
std
mov
sbb
in
cmp
mov
cmp
popa
xchg
loopne
mov
cmp
dec
test
inc
pop
sub
xor
pusha
xor
lcall
cmp
and
jg
sarb
loop
testl
movsb
loope
lret
decb
mov
js
xor
pop
movsb
xchg
inc
lods
popf
std
fldcw
mov
mov
add
shrb
lea
dec
mov
or
cmp
mov
cmp
pop
arpl
icebp
in
xchg
mov
jnp
push
mov
pop
push
pop
cld
and
add
inc
mov
mov
pop
leave
xchg
popf
adc
mov
js
jecxz
inc
cmpl
stc
aas
loopne
leave
sti
or
mov
jmp
jge
ja
lods
push
lods
mov
std
sbb
pop
sub
inc
add
repnz
and
scas
inc
fwait
movl
add
cmp
je
dec
add
popa
push
sbb
cld
or
xchg
gs
adc
sarl
ret
add
out
std
jmp
leave
push
test
cwtl
and
mov
push
xor
mov
aas
jp
or
dec
pusha
icebp
out
les
lret
leave
or
push
lcall
pushf
pop
xor
adcl
rclb
add
repnz
movsb
or
popa
xchg
pop
mov
sub
andl
movsl
push
inc
dec
pop
sti
cmp
pop
dec
or
or
pop
cmp
scas
cli
xchg
icebp
lahf
sbb
jge
adc
jnp
add
sti
fst
sub
fnstcw
sbb
jo
add
or
lea
pop
outsb
arpl
sbb
gs
cwtl
add
fldl
not
xchg
jb
daa
mov
lret
cmp
push
aam
pop
push
xor
lahf
out
pop
sbb
mov
cmp
decl
jns
dec
dec
pop
repnz
out
sub
fdivrs
js
xor
add
pop
mov
mov
je
in
jp
and
imul
xchg
daa
imul
jecxz
fwait
arpl
xrelease
rcr
imul
adc
inc
pop
sbb
jle
cwtl
sbb
fwait
push
push
fld1
adc
xchg
sub
lea
xchg
loope
sahf
pop
sbb
cmp
fisttpl
add
insb
mov
jns
rol
je
test
ficompl
mov
movsb
mov
sub
push
dec
repz
out
js
std
shl
or
rcll
mov
std
pop
xchg
lock
pop
jp
pop
mov
pop
cmpl
and
cmp
mov
cmp
dec
mov
js
push
fs
mov
dec
lret
pop
mov
aas
mov
fdivrs
roll
cwtl
or
cmpsl
lahf
loop
mov
movsb
adc
sbb
or
fwait
sbb
shlb
jle
push
pop
adc
mov
roll
je
fsubl
shrb
cmp
add
jmp
inc
pop
dec
push
inc
mov
scas
pop
cmp
je
iret
ja
jl
jne
js
cmpsb
mov
inc
lcall
push
adc
repnz
cwtl
sbb
mov
or
jl
ja
inc
cltd
insl
cmp
test
movl
cld
pop
in
out
mov
loopne
clc
mov
pop
xor
mov
xchg
or
inc
ret
ret
cli
cmp
sbb
push
aaa
sbb
sti
pop
sbb
fildl
inc
fstps
jo
testl
cmp
shl
jmp
cmp
xchg
rcrl
pop
fs
ja
mov
mov
sbb
pushf
ret
add
ret
aaa
in
pop
sarb
lds
xlat
leave
fsubs
movsl
inc
inc
lahf
lods
fs
jp
sbb
jecxz
out
cmp
movsb
mov
pusha
sarl
jmp
adc
cltd
inc
mov
sbbb
jp
sbb
pop
or
sbb
add
push
mov
mov
sbb
pop
lea
jns
mov
lds
mov
ds
mov
roll
or
push
mov
mov
xchg
xchg
pop
push
sahf
das
fmuls
mov
mov
js
sbb
mov
ds
into
mov
test
adc
mov
xchg
or
pop
lea
scas
ja
xchg
inc
or
cmp
sbb
sahf
test
lret
mov
out
jnp
loope
or
pop
add
xchg
jge
mov
fdivl
ret
add
pop
sbb
sub
xchg
mov
mov
jg
lret
fidivrs
test
jb
dec
dec
dec
push
push
xchg
xchg
mov
mov
fsubl
mov
xchg
mov
pop
adc
test
jb
sub
cmp
push
xor
push
push
xchg
je
inc
rorb
js
mov
push
adc
mov
stc
cmp
mov
bound
mov
dec
pop
or
addl
in
repz
mov
jp
inc
and
mov
test
add
sub
ds
imul
mov
jb
xchg
mov
pusha
in
int3
arpl
outsb
mov
movsl
jbe
cmp
jl
sbbb
mov
adc
inc
xchg
mov
sahf
mov
sub
test
shll
inc
add
scas
popf
repz
add
inc
cmp
xor
push
ja
mov
subl
jp
or
std
inc
sub
out
and
add
int
pop
sbb
outsb
jge
movsb
or
add
or
ret
gs
adc
cltd
or
jl
mov
fstps
push
pushf
dec
and
iret
mov
iret
jg
ret
jnp
frstor
add
loope
shll
sub
dec
jle
sarl
jnp
jmp
inc
xchg
sbb
or
pop
pop
push
inc
mov
addb
arpl
pop
mov
jg
inc
mov
jl
mov
pusha
mov
roll
jns,pt
cwtl
cwtl
clc
cli
cmp
stc
clc
add
add
enter
jp
xchg
xor
shll
jp
mov
jnp
jne
sbb
push
mov
add
inc
inc
ret
lret
mov
xor
out
mov
mov
repz
jle
mov
pop
inc
xor
test
sbb
pushf
cli
iret
lds
sbbb
adc
adc
pop
test
cli
push
hlt
fnstsw
movsl
movsb
mov
xlat
push
cwtl
loopne
jmp
fmul
cmp
pop
sbbl
cmp
sbb
cmp
cmp
fs
push
arpl
ds
adc
xor
mov
xchg
cmp
mov
leave
insb
inc
add
sub
nop
int
sbbb
nop
sbb
hlt
sbb
or
push
mov
out
add
lret
mov
ja
mov
ret
mov
imul
jmp
shlb
sub
push
fwait
popa
and
xchg
fistps
mov
cmp
xlat
sbb
mov
jp
dec
mov
dec
mov
std
arpl
mov
sbb
mov
mov
lcall
loopne
cs
orb
jge
aam
les
cmp
xchg
sbb
lods
mov
inc
jo
mov
xor
shrl
mov
inc
jg
xor
cmp
shrb
mov
mov
pop
dec
loop
cld
inc
pop
popa
mov
push
rcr
ja
and
cmp
sub
jnp
adc
sbb
mov
fcomp
dec
lret
enter
dec
pop
insb
fdivrs
cmp
stc
sbb
fwait
cmp
inc
orl
in
cld
xchg
jno
leave
pushf
js
push
add
icebp
mov
ficoml
lods
mov
pop
cwtl
je
sarl
loop,pn
loopne
cld
cmp
cld
and
fs
mov
xor
imul
loop
in
mov
in
cli
jle
iret
adc
xchg
xlat
fst
imul
xchg
pop
mov
sbb
scas
mov
jle
jp
cmp
mov
push
les
push
mov
jle
push
pop
push
adc
cwtl
out
pop
and
leave
mov
dec
or
dec
mov
ljmp
mov
sbb
add
rcrl
jg
std
mov
mov
jnp
cmp
adc
inc
cmp
or
xchg
getsec
int
cmp
xchg
shrb
sbb
imul
cmp
pop
loop
jle
dec
fnstcw
sbb
sub
aad
dec
mov
jns
lret
lea
xlat
shrl
pop
jnp
push
in
and
xchg
jbe
inc
mov
mov
clc
out
push
mov
adcl
or
js
jge
or
pop
imul
cmp
ret
aas
push
insl
fstpl
jns
dec
sbb
mov
mov
ret
adc
mov
push
lret
dec
faddl
xchg
inc
mov
pop
add
cmp
push
sbb
or
sub
xchg
jns
outsl
aas
sbb
xchg
cmp
cmp
clc
in
sub
dec
ds
cmp
cmp
cmp
push
stc
cld
ret
cmp
inc
dec
or
scas
mov
stc
mov
or
imul
push
int
cmp
add
mov
jb
dec
add
xchg
icebp
test
mov
sbb
sbb
insb
sub
cmp
cmp
xchg
clc
cmp
add
subb
inc
cmp
jecxz
cmp
push
mov
insb
adc
ljmp
jns
mov
mov
and
mov
imul
dec
or
aas
jmp
jp
addl
mov
fildll
jmp
cmp
clc
sbb
cmpb
insb
inc
push
cli
mov
std
cmp
sbbb
notl
mov
imul
aaa
jno
imul
adc
out
sbb
clc
pop
fildll
inc
les
pushf
sbbl
sahf
clc
lcall
popf
sbbl
lahf
clc
fildll
pop
sbbl
outsb
subb
adc
pop
cmp
shlb
fildll
roll
mov
enter
clc
fcomp
stos
shrb
fiadds
call
fildll
filds
aaa
imul
xor
or
decb
popa
adc
orl
or
fisubrl
pusha
data16
adc
scas
addb
mov
adc
cmp
pop
pop
inc
dec
push
dec
mov
sub
adc
loope
inc
push
dec
mov
in
adc
or
loopne
into
fildll
int
leave
mov
clc
fildll
out
sbb
int3
jae
data16
mov
mov
imul
mov
cmp
push
call
out
adc
andl
mov
sub
cmpsb
lods
fildll
data16
mov
lods
subl
scas
clc
stos
fildll
sub
and
stos
imul
mov
clc
and
stos
daa
imul
xor
adcl
stos
adc
adc
adc
inc
push
adcl
sub
nop
xchg
das
inc
xchg
imul
push
das
inc
push
imul
sub
rol
aad
inc
shrb
imul
adc
jno
inc
jne
imul
es
jbe
repz
inc
icebp
cs
hlt
es
repnz
inc
mov
imul
data16
adc
xor
xorl
sub
xor
ss
js
mov
push
in
sbb
cmp
fsubl
mov
ja
dec
or
cmp
mov
or
pop
sbb
xchg
push
pop
mov
add
sbb
cmp
pop
aas
adc
orl
or
or
fwait
aas
imul
xchg
imul
repnz
mov
sub
sbb
pop
mov
daa
jnp
sub
inc
imul
pop
cmp
adc
out
pushf
fwait
add
xchg
cmp
movsl
mov
pop
sbb
pop
add
add
sub
pop
or
cmp
out
push
shl
pop
mov
fstpt
pop
mov
xchg
mov
daa
lcall
inc
adc
fucom
sub
add
mov
mov
mov
inc
lods
sbb
leave
outsb
or
sub
shrl
mov
cmp
jnp
add
dec
pop
aaa
stos
mov
lret
sub
sbb
jl
pop
pop
lods
mov
insl
sub
mov
gs
ret
cmp
pop
jp
pop
stos
mov
mov
mov
push
sbb
inc
insb
repz
leave
xchg
in
test
cmp
xchg
mov
decl
pop
jp
mov
mov
sti
inc
cmp
mov
pop
scas
jns
sub
cwtl
pop
outsl
pop
insl
mov
mov
sbb
ret
cmp
dec
jge
sbb
mov
imul
or
sbb
testb
imul
sub
jns
push
inc
or
imul
inc
fisttpl
leave
cld
xorl
stc
mov
xchg
cmc
mov
sbb
lcall
jmp
test
mov
insb
lret
test
je
and
mov
push
mov
fstl
pop
in
sbbb
mov
cmp
xor
push
mov
cmp
xchg
mov
mov
fwait
push
mov
cld
and
jmp
cmp
adc
cltd
and
and
test
jbe
inc
mov
fisttpl
add
mov
xchg
pop
add
addr16
xchg
mov
popa
jnp
int
aas
repnz
stc
dec
push
sbb
int3
mov
xchg
ret
cmp
mov
jo
dec
les
xor
add
mov
push
add
jnp
mov
xchg
cmp
ja
push
jl
inc
push
inc
xchg
jmp
xchg
add
sbb
cmp
sbb
jns
mov
cltd
jnp
cmp
inc
insb
mov
mov
fildl
in
jle
and
loopne
clc
mov
sti
cmp
mov
cmpsl
inc
adc
dec
xlat
sbb
pop
pop
loopne
pop
xchg
imul
and
xchg
sbb
ss
stc
insb
jae
or
addl
jg
cmp
cmpsl
mov
xchg
out
xlat
mov
pop
addr16
sbb
cmp
pop
dec
in
cmp
dec
mov
ja
push
dec
push
mov
adc
dec
imul
mov
mov
divl
cmpsl
pop
dec
pop
jo
xchg
fdivrl
push
cmpsl
inc
xchg
cmp
test
divb
aas
sbb
mov
xchg
bound
add
push
inc
xchg
mov
mov
cmp
sbb
jnp
pop
xchg
sti
test
cmp
cmp
aam
js
in
andb
mov
call
sbb
or
and
stc
jle
push
shlb
cmp
cmp
mulb
imul
sbb
jnp
cmp
sub
add
cmp
pop
add
xchg
fstpl
mov
mov
call
call
call
sbb
push
xchg
mov
mov
loopne
add
xchg
add
clc
pop
push
cld
xor
ja
cld
cmpl
mov
jnp
ds
jp
add
cmp
sbb
int3
add
aas
mov
add
pop
dec
push
push
or
xchg
pop
mov
xchg
cmp
sarl
jp
lcall
add
xchg
push
cmp
in
jns
addr16
testl
add
dec
repnz
ljmp
adc
dec
sarl
sar
push
sbb
push
das
pusha
xor
xchg
pop
cmp
xchg
pop
cmp
repnz
push
xchg
jle
stos
mov
pushf
repnz
insl
xchg
cmp
loop
orl
add
mov
or
sarb
add
mov
cmp
incl
aas
xorb
cmp
stos
ss
add
movsl
cmp
es
cmp
or
add
test
mov
pop
jae
aaa
mov
push
into
stos
mov
cmova
ror
pop
dec
cmpl
aas
add
popa
jne
ror
cmp
in
cmp
sub
or
jns
cmp
pop
add
ss
cmp
jle
xchg
jp
out
jge
bndstx
test
stos
ja
pop
ja
add
aam
or
xchg
mov
or
mov
cltd
jnp
jle
mov
sbbl
aaa
mov
rclb
aas
cmp
cmp
or
xlat
mov
ljmp
mov
mov
call
jns
and
add
sti
cmp
aas
or
pop
lds
pop
inc
sbb
ds
rorb
andb
aas
mov
mov
jecxz
cmp
addr16
sub
loop
iret
fwait
aas
inc
cmp
sbb
jb
cmp
cmp
aas
cmp
ret
add
ja
repnz
push
std
lcall
aas
fwait
xchg
push
jnp
enter
mov
cmp
out
cmp
or
push
adc
inc
daa
loop
mov
inc
add
pusha
add
iret
pop
shll
fistpll
lahf
sbb
pop
stc
adcb
cwtl
pop
aas
je
xor
mov
push
xchg
lock
punpcklbw
mov
or
push
aas
ret
mov
inc
fildl
int3
ja
test
ja
out
push
cli
call
add
push
out
jl
jl
mov
shlb
add
push
aas
pop
mov
or
aas
cltd
pop
pop
std
cmpb
add
add
push
or
nop
xlat
xchg
or
dec
cmp
aas
sub
add
pop
and
cmp
ja
mov
mov
jae
lcall
cwtl
cmp
mov
mov
jns
mov
push
lea
add
fwait
push
mov
enter
dec
lcall
mov
add
cmp
imul
ds
mov
les
xchg
cs
sbb
orb
jns
ret
ret
pop
lcall
cli
mov
jae
test
mov
pop
call
or
cld
pop
inc
add
cmp
xor
je
jo
psubd
push
add
pop
cmp
cltd
pop
cmp
addr16
xchg
stc
sbb
sbb
mov
cmpsl
ds
xchg
sbb
imull
inc
inc
mov
mov
xchg
stc
test
push
cmp
pop
mov
mov
push
xor
call
mov
sbb
ja
pop
dec
ja
jnp
ja
xchg
test
fmul
ja
push
ja
dec
inc
fwait
mov
mov
xchg
ss
sarb
ja
addr16
iret
cmp
popa
call
cmpsl
xchg
jg
cmp
ja
inc
push
iret
inc
xchg
lret
scas
test
inc
ja
cltd
mov
xchg
aad
mov
xchg
in
dec
mov
sub
imul
dec
ja
aaa
inc
mov
xor
das
jp
cli
ja
adc
ja
out
pop
xchg
ja
inc
mov
ss
xorl
cltd
mov
jecxz
xchg
fdivs
push
or
push
inc
or
in
lds
and
jo
cmp
or
inc
mov
push
xchg
xor
ja
fdivs
pushl
mov
out
jp
call
ss
ja
ss
or
addr16
hlt
aam
test
daa
pop
mov
cmp
dec
addr16
inc
lea
inc
xor
mov
negl
imul
sbb
xchg
loop
dec
mov
xor
jp
mov
mov
adc
mov
mov
dec
push
add
rcr
mov
adc
cs
sub
add
pop
ja
mov
ja
xor
dec
ja
fadds
lret
inc
add
mov
adc
divl
jae
add
jnp
sub
pushf
mov
pop
cmp
dec
lock
mov
les
ja
cmp
divl
loopne
or
fwait
jle
cmp
inc
popf
cld
andl
adc
mov
cmp
cmp
rorl
jno
leave
xchg
std
add
cmpsl
mov
jbe
cltd
sbb
js
clc
add
sbb
lcall
push
sub
lahf
testb
ja
inc
mov
ja
and
andl
mov
mov
fbstp
ja
loope
jmp
push
xlat
into
cmp
adc
ja
ja
pusha
sar
push
scas
xchg
mov
jnp
push
dec
call
js
xchg
out
scas
push
pushf
imul
xchg
add
jp
mov
cmc
lock
lea
mov
cmp
or
jns
or
sbb
xor
push
ja
push
mov
cmp
mov
aaa
jnp
sbb
testl
adc
out
mov
out
dec
mov
cmp
dec
cmp
cmpsl
jge
aad
das
pop
add
jo
jp
stc
gs
inc
ja
pop
inc
in
jl
mov
ss
rclb
lods
leave
sub
les
lret
xchg
sbb
cld
out
adc
ja
ja
jmp
xchg
lea
mov
decb
mov
jg
stc
rol
ret
fnsave
into
test
push
lahf
addl
jnp
rorb
sbbl
std
fwait
shll
jne
lcall
stc
push
testl
push
jge
lods
add
fnstcw
test
cmp
int3
mov
cmp
add
mov
jecxz
sub
insl
jns
xchg
clc
adcl
sub
dec
shrl
mov
stc
add
ja
jge
bound
out
add
std
test
pop
push
or
mov
sbb
mov
dec
xchg
push
sbb
pop
adc
inc
pop
inc
imul
sub
jns
mov
clc
pushf
cmp
ja
mov
lods
mov
cwtl
sbb
stc
or
jnp
stos
adc
sbb
pop
in
adc
add
outsb
out
xor
idivl
pop
pop
xlat
inc
clc
fdivrl
cmp
mov
mov
pop
imull
fisubs
int
push
lret
or
jae
setns
scas
or
addl
mov
xchg
mov
cmp
movsb
daa
hlt
mov
sub
ja
fbstp
out
out
pop
push
mov
sub
jns
jnp
ja
hlt
add
lds
mov
mov
pop
cmpsl
lea
out
ja
adcb
aas
mov
and
test
ja
ja
cmpsl
or
mov
ja
mov
nop
fsubp
imulb
ja
pop
mov
mov
ja
ds
jecxz
push
ja
ja
or
ss
lods
inc
xchg
jg
lahf
iret
fdivs
out
mov
fnstenv
or
push
mov
and
mov
jl,pt
addr16
ja
sbb
xlat
push
mov
in
xchg
test
mov
push
ja
jbe
push
popa
mov
int
push
mov
pop
jg
scas
ja
iret
add
add
adc
ja
push
or
out
call
ja
ss
das
pop
adc
movsl
mov
das
dec
ja
jbe
push
popa
xchg
mulb
cmpsl
fisubl
cmp
mov
inc
mov
ja
cmp
adc
popf
mov
mov
inc
jno
pushf
mov
dec
ja
push
ss
ja
mov
movsb
aas
inc
mov
in
jle
ja
jo
inc
cmpsb
mov
test
movsb
xlat
dec
mov
incb
jge
cmp
adc
sbb
xchg
negl
mov
jg
mov
cmp
out
outsb
cmc
jns
daa
les
sub
mov
dec
cmp
mov
ds
cmp
ltr
mov
mov
test
xchg
ja
ja
push
out
adc
mov
insl
dec
ret
mov
inc
mov
js
add
or
adc
add
ja
pop
xlat
ja
insl
dec
testl
scas
xchg
mov
pop
fwait
ja
sti
lcall
les
or
xchg
repz
addb
sub
push
xchg
int
or
out
xchg
lods
ja
ljmp
leave
xlat
push
arpl
mov
outsb
mov
mov
rol
inc
test
cmpsl
stos
cmp
lcall
fiaddl
test
inc
xchg
push
cmp
mov
or
adc
xchg
xchg
es
mov
imul
fidivl
mov
dec
sbb
div
sbb
stos
out
xchg
shl
cmp
push
pop
ja
daa
xchg
xchg
idivb
add
xchg
push
stos
not
or
neg
mov
inc
jl
dec
xchg
sbb
adc
sbb
shlb
repz
mov
test
data16
mov
mov
jnp
xchg
daa
sbb
jns
mov
cmp
push
imul
jnp
sub
pop
js
mov
xchg
sbb
sub
pusha
gs
movsb
in
imul
fisubl
inc
mov
sbb
inc
mov
test
mov
scas
mov
jbe
dec
inc
cld
xor
pop
cli
jecxz
or
push
push
les
jne
ja
pop
push
iret
xor
sbb
andb
in
pop
ret
mov
dec
mov
cmc
popf
test
mov
jmp
arpl
in
push
cmp
ja
sarb
xlat
xchg
into
dec
ja
xor
mov
or
xchg
ja
mov
loope
arpl
arpl
xlat
push
xor
xorb
insl
mov
daa
mov
ja
xlat
xchg
mov
and
insl
mov
daa
and
insl
clc
imull
add
incl
test
xor
pushl
ljmp
daa
sbb
test
sarb
ja
mov
ja
xlat
push
andb
cwtl
push
out
or
insb
inc
mov
mov
daa
push
ja
jg
pushw
push
ja
mov
jnp
xlat
push
iret
std
leave
int
ss
dec
push
das
adc
out
ja
test
imull
sub
add
sbb
jg
cmp
inc
jo
sti
fwait
shll
jb
jl
jp
inc
mov
or
mov
test
ss
pop
insl
fimull
shlb
inc
ja
ja
jae
mov
or
mov
mov
xchg
xchg
js
mov
cmpsl
push
jns
fldl
adc
ja
pop
out
jbe
cli
ja
pop
jb
inc
fldl
mov
push
xchg
ja
std
xorb
push
ss
xchg
xchg
mov
mov
cwtl
push
dec
aas
ja
ret
push
push
cwtl
push
lds
fsubr
ja
out
cmp
mov
xor
call
shrl
inc
ret
filds
xchg
ja
pop
cmp
sub
inc
lret
mov
cs
mov
ja
fdiv
adc
xchg
xchg
nop
mov
lret
mov
js
adc
or
inc
lea
add
or
es
jb
cs
xchg
clc
and
add
xchg
pop
inc
sbbb
movsl
subb
or
mov
ret
cs
ds
dec
lds
or
cmp
cli
jecxz
mov
aas
imul
inc
push
mov
xchg
test
mov
dec
jp
addb
and
enter
loopne
dec
mov
mov
jp
jmp
addb
rorb
jnp
push
and
mov
add
cmp
push
mov
mov
xchg
jge
adc
and
mov
fisubs
mov
cld
dec
xsaves
sarb
add
jle
ja
ret
addb
mov
inc
mov
jmp
and
fs
inc
lcall
imul
push
xchg
mov
dec
gs
sbb
movb
jg
mov
cmp
out
and
xchg
sub
mov
testb
ja
xchg
ret
testb
psubb
push
xchg
cmp
ja
stos
lahf
mov
ror
inc
push
fsub
insb
jl
jns
xchg
leave
js
movsb
cld
cmp
cmp
sub
mov
fidivrs
or
cmpsl
xchg
push
mov
gs
xchg
jns
sbb
or
jnp
aad
dec
and
inc
cmp
and
incb
pop
out
jnp
xor
ja
add
sbbb
xchg
gs
pop
cli
xchg
cmp
mov
or
in
xchg
es
sub
sub
mov
fninit
ja
pop
or
xchg
aaa
stc
sub
mov
adc
add
jns
cmpsb
mov
loop
dec
roll
mov
mov
std
fmuls
xor
fs
add
orb
rolb
arpl
pop
or
cmpsl
fdivrl
push
cmpsb
in
outsb
jno
or
dec
adc
mov
xchg
fadds
stos
mov
mov
rcll
pop
ja
add
adc
ret
jmp
rcrl
into
xor
jl
xchg
addr16
es
pop
cmpsl
mov
cltd
addr16
xchg
add
mov
movsb
ja
addr16
and
xchg
and
cmp
pop
or
fcomip
sub
ja
and
sub
mov
cmp
jns
xchg
fildl
sub
mov
mov
lds
cmp
vcvttps2dq
dec
add
fs
idivl
xchg
hlt
mov
andb
jp
nop
push
sbbb
and
cmp
add
out
lahf
ja
sti
test
out
xchg
int
jo
jnp
ja
add
add
mov
test
inc
cmpsl
imull
loope
jg
imul
cmp
mov
mov
pop
inc
insb
ja
sbb
imul
add
or
insl
xlat
sbb
mov
jbe
xchg
mov
insl
testl
adc
cli
mov
xchg
cmpsl
mov
xorl
mov
fidivs
fbstp
mov
std
push
neg
cs
fiaddl
xor
mov
ja
mov
adc
lds
lds
das
sub
sbb
rcr
imul
cmp
mov
dec
stos
ja
test
sbb
sub
sbb
fwait
lret
sbb
insb
mov
cld
jnp
sbb
jns
mov
jle
scas
sahf
into
sbb
jns
mov
fistpll
inc
mov
loopne
xor
js
inc
nop
or
xchg
adc
lods
divl
jno
inc
rorl
xchg
mov
daa
push
addr16
mov
mov
xchg
pop
shlb
pop
push
mov
or
enter
cmp
cmp
fstl
into
sbb
sbb
inc
clc
jecxz
cmp
push
into
or
div
stc
or
cmp
or
mov
or
and
cmp
int3
ja
or
stc
jp
jnp
ja
lods
cs
inc
pop
bound
adc
dec
aaa
xorl
negl
xchg
mov
ja
mov
xchg
pushf
xchg
mov
fbstp
xor
mov
xchg
and
adc
ja
cmp
out
ja
xor
jp
dec
cli
in
insb
jnp
ja
pop
ja
cmpsb
pop
inc
add
inc
fs
fcmovb
shrb
dec
dec
inc
test
inc
movsb
iret
ja
pop
adc
imulb
inc
shl
pop
ja
es
jmp
std
loope
mov
es
jecxz
xchg
sub
cs
cmp
enter
push
push
ljmp
cmp
pop
aaa
and
out
movsb
xchg
aaa
push
xchg
mov
cs
lock
ret
push
sti
or
cmpsl
xlat
or
mov
add
xor
push
ja
and
ret
cmp
sub
cld
lods
inc
xor
ja
dec
clc
cmpsl
jb
scas
jbe
mov
jnp
not
push
fsubrp
lods
stc
xrelease
sarl
test
sub
adc
xor
xchg
inc
int3
rcr
divl
or
idivl
mov
mov
jl
les
push
popa
cli
bound
ret
jp
xchg
jnp
dec
in
imull
and
mov
rcrl
test
cld
sub
xor
xchg
js
js
jnp
push
jge
xor
sti
movsb
adc
xchg
xchg
mov
push
pop
cmp
rolb
mov
inc
push
push
lds
mov
cld
mov
inc
cli
xlat
mov
xchg
daa
lret
test
xchg
sbb
xchg
idivl
ja
fildll
mov
clc
pop
imul
jmp
addl
ret
pushf
xlat
imul
inc
in
mov
ret
or
jg
mov
jg
cli
les
or
mov
outsb
ds
imul
or
cli
push
scas
add
cwtl
les
mov
imul
mov
xchg
out
jno
or
and
mov
cmp
xchg
xor
cmp
or
movsb
cmp
sti
popa
pop
mov
shrl
xchg
cmpsb
cmp
sti
push
leave
xchg
pushf
or
pusha
jp
mov
dec
mov
sub
push
cmp
mov
xor
lret
and
lcall
fidivl
out
add
sub
out
push
and
inc
sub
mov
aas
ljmp
scas
add
jmp
fcoms
mov
dec
mov
jp
mov
adc
jl
test
jp
shr
gs
sbb
lods
sbb
xchg
sbb
outsb
sub
fidivrs
sahf
mov
dec
out
out
int
clc
or
mov
mov
or
pop
cmp
dec
mov
adc
jmp
insb
cmp
xchg
adc
out
aad
push
aaa
fstpt
or
pop
mov
push
mov
sub
push
cmp
push
aad
pop
jg
mov
mov
mov
or
jno
cmc
dec
ret
leave
das
cmp
xor
add
jmp
mov
imul
mov
ds
jg
lods
xor
fstl
mov
fadds
lret
orl
lret
sub
dec
sti
dec
fidivrl
inc
jmp
insb
dec
cmp
add
dec
ds
mov
jl
add
mov
pop
dec
out
mov
jnp
aam
sub
aas
test
dec
mov
inc
aam
pusha
sub
sti
cli
mov
popa
std
push
cmp
and
enter
adc
mov
sarb
mov
pop
mov
cmp
cmp
and
les
mov
pop
jo
ret
pop
jle
cmp
cmp
cli
add
add
sti
fdivrl
adc
jnp
mov
push
mov
stos
push
mov
mov
insl
mov
adc
in
jp
sub
xor
xchg
sub
sbb
push
sub
xchg
sbb
addl
test
cmp
mov
inc
pop
pop
lret
sbb
scas
lods
adc
or
fistpl
mov
aas
rorb
scas
mov
adc
aas
push
dec
mov
arpl
int
sbb
adc
rcrb
dec
sub
add
add
or
adc
jns
andb
xchg
mov
arpl
ja
pop
xchg
add
dec
cmp
ja
pop
int
jge
xlat
pop
pop
push
jl
cmp
pop
sub
test
cmpl
enter
lock
mov
cmp
mov
aad
add
xchg
leave
mov
sub
test
mov
push
sti
sbb
loopne
dec
pop
xor
sub
jg
lcall
sbb
inc
xchg
cld
xor
or
add
popf
xchg
pop
nop
rclb
mov
jns
aad
mov
xchg
cmpsl
jns
fwait
mov
jge
push
xchg
nop
clc
out
mov
add
cmp
or
stos
or
subl
sbb
nop
mov
mov
mov
mov
jnp
clc
push
cld
rcll
lods
aas
inc
mov
mov
pop
cmp
mov
and
dec
adc
add
ds
mov
add
imul
adc
arpl
adc
mov
mov
adc
sbb
mov
jp
cmp
jns
cmp
mov
mov
xchg
push
dec
test
add
add
inc
mov
inc
jnp
rorb
sbb
mov
pop
inc
or
or
add
xor
mov
pop
push
ja
xor
aas
pop
or
in
cmp
push
mov
push
cmp
or
jnp
xor
ljmp
inc
add
pop
xchg
or
xchg
sub
popf
jg
fsts
je
and
xchg
pop
or
jo
js
add
clc
ret
enter
imul
fisttps
inc
adc
pusha
scas
add
in
add
lock
mov
xchg
lods
std
cmpsl
mov
cwtl
cli
cmp
mov
lds
mov
lods
add
cmp
std
or
cmp
mov
mov
sbb
clc
sbb
adc
mov
imul
mov
or
imul
aas
ss
xor
xchg
dec
inc
pop
push
adc
cmp
pop
imul
mov
and
mov
js
adc
fsubrs
xchg
enter
cmp
aaa
dec
arpl
xchg
push
sti
sbb
push
sub
adc
or
in
jl
vhaddps
jge
or
mov
ja
or
cmp
jns
mov
cmp
inc
popl
jns
mov
cmp
testl
add
clc
jnp
mov
cmpb
jnp
test
aas
sbb
jns
mov
jns
jle
inc
cld
pop
xchg
cs
roll
scas
pop
cmp
ret
sti
mov
ja
lock
cmp
mov
clc
cmp
mov
nop
mov
enter
movsl
jle,pn
cmp
jnp
lahf
popl
sbb
adc
sbb
xchg
and
out
xchg
cmp
fdivrs
mov
int
push
pusha
mov
mov
or
sbb
pop
fwait
sbb
mov
loop
in
mov
sbb
adc
sbb
jnp
loope
and
and
jne
mov
sbb
fistpl
jns
mov
in
data16
cwtl
jecxz
cld
test
cmp
lahf
mov
pop
pop
and
sahf
ret
mov
ja
loop
pop
or
mov
out
sbb
mov
xlat
cmp
sub
out
cmp
dec
push
pop
mov
loop,pt
xchg
ja
enter
rorb
jl
jecxz
dec
add
clc
jge
jl
lea
xor
imul
push
cmp
xchg
cld
sbb
insb
cmp
add
ss
std
mov
add
hlt
add
dec
clc
xchg
dec
mul
into
mov
fcomps
jp
lcall
jnp
je
data16
jns
mov
int
ja
cmp
mov
cmp
andl
sbb
xchg
mov
adc
js
pop
aam
add
pop
cmp
mov
mov
ret
testl
jg
inc
sbb
pop
add
ret
mov
ja
xchg
call
fcom
ret
and
cmp
and
ds
lea
add
aaa
dec
push
cwtl
fildll
mov
outsl
aaa
push
mov
inc
iret
sub
xor
jnp
jp
xchg
lret
push
mov
sub
mov
aas
xchg
stos
loop
orl
dec
test
sub
fbld
shl
aaa
cmc
fsubp
or
adc
mov
jg
pop
pop
jnp
cmp
jne
fiaddl
addr16
mov
jbe
adcl
mov
xlat
aaa
mov
jno
out
xlat
testl
mov
inc
mov
mov
dec
subb
aad
into
cmpsl
push
int3
lret
add
and
ss
mov
add
stos
cmpsl
or
cmp
hlt
lods
loope
xchg
sub
popa
cmpl
aas
xchg
lock
mov
lahf
pop
sbb
inc
dec
sbb
negb
pop
imulb
pop
push
lret
jno
scas
inc
xchg
pushf
jge
xor
sub
mov
sbb
push
jae
aaa
stc
dec
mov
test
adc
push
addr16
imul
mov
and
std
xor
sub
lret
sahf
push
cmpsl
push
inc
xor
and
ret
icebp
inc
add
sti
in
adc
inc
push
movsl
xchg
push
pusha
add
jnp
js
loopne
add
dec
rcr
adc
xor
jns
mov
ljmp
dec
mov
ficoms
cmpsl
insb
sbb
sub
mov
sub
pop
push
and
dec
idivb
mov
cmp
cltd
xchg
aaa
rcll
ret
pop
add
aam
fisubrl
push
ret
imul
adc
lret
lcall
or
shll
or
mov
xorb
mov
les
adc
add
sbb
hlt
fldenv
push
clc
imul
add
lods
fsub
push
pop
aaa
popa
push
sbb
bound
or
mov
aaa
stc
dec
mov
pop
jp
daa
insb
and
in
cmp
add
and
into
testb
mov
xor
outsl
sbb
push
das
push
xor
into
or
aaa
and
and
aam
stc
test
movl
pop
sub
inc
stos
xlat
add
mov
les
inc
iret
jo
inc
pop
addr16
jmp
js
inc
outsb
push
lock
js
rolb
shrb
js
cmp
bound
fnstsw
mov
cmp
inc
pop
or
mov
pusha
addr16
insb
outsb
js
inc
jo
jno
dec
call
add
sbb
pop
pop
aas
xchg
test
fucomip
dec
sar
mov
fsubrl
imul
fidivrs
mov
mov
mov
data16
bswap
push
pop
lret
fldt
mov
sbb
mov
or
push
cmp
lods
push
cli
aad
adc
adc
push
adc
pusha
shrb
inc
add
in
mov
dec
hlt
ljmp
mov
jo
mov
dec
fimull
dec
cwtl
int3
push
jo
inc
clc
test
pop
or
mov
out
mov
out
imul
pop
pop
mov
inc
or
mov
mov
ds
cmp
cmp
in
cld
jmp
scas
dec
std
ja
ss
jns
ljmp
sbb
sbbl
mov
sahf
inc
lcall
mov
insl
mov
fldcw
push
sub
clc
cmp
push
or
cmp
jg
stc
cmc
data16
fldenv
andl
dec
jg
sbb
push
mov
test
mov
mov
jno
das
dec
pusha
outsl
adc
lret
push
jge
xor
adc
std
jl
mov
push
push
and
fucom
das
lahf
imul
mov
jae
dec
ds
sub
popa
mov
aam
mov
mov
mov
jmp
jp
mov
pop
push
inc
cmp
sub
jnp
cmp
sbb
mov
or
pop
pusha
sbb
jo
inc
adc
xchg
out
or
lahf
xchg
dec
mov
pop
pop
and
test
aad
pop
aaa
mov
test
cmp
cmc
adc
jmp
adc
xor
clc
and
mov
or
call
jle
sbb
hlt
inc
jo
sub
push
ficomps
cwtl
call
add
push
or
cmpsl
lahf
inc
pop
push
xor
je
ret
setbe
aas
xor
stos
sbb
fnstenv
ss
arpl
aam
mov
pop
xor
popa
pause
iret
lret
ret
push
mov
inc
jne
lds
jge
in
add
ret
mov
cmpsb
push
sub
xor
mov
sbb
fwait
repz
sub
dec
add
insl
dec
xchg
sti
nop
fdivr
repz
mov
and
adc
mov
xor
sbb
icebp
jl
pusha
mov
fsubs
sahf
xchg
add
leave
insb
mov
decb
jno
popa
push
loop
andb
inc
mov
sbb
mov
ja
repz
jp
in
lods
ficompl
bound
inc
cmp
pop
scas
insb
pop
bswap
mov
call
hlt
int3
fwait
xor
insb
mov
in
and
xchg
call
jle
dec
jns
adc
dec
lods
bound
in
pushf
lock
pusha
jne
inc
mov
fs
daa
hlt
pop
inc
jge
pop
les
sbb
and
mov
adc
pop
add
ja
xor
or
mov
jge
aad
popf
push
das
and
rep
push
packuswb
push
xor
sti
out
inc
jb
loop
mov
push
pop
mov
inc
pop
loop
cwtl
xor
xor
movb
call
fsubs
dec
lcall
push
pop
ret
mov
pop
xchg
cmp
test
sbb
inc
jmp
pop
sbb
cwtl
int3
add
loopne
adc
push
mov
xor
xchg
sbb
dec
loopne
dec
jmp
adc
jmp
sbb
cmp
cs
dec
pop
aas
int3
ficoml
nop
pop
shll
std
xor
out
cmpl
insl
in
int3
xor
dec
call
aas
pop
out
xor
jnp
imull
ja
adc
scas
out
inc
jg
sub
xchg
rcll
gs
mov
mov
movsl
dec
adcl
inc
aas
pop
mov
xor
xchg
cmp
lea
outsl
out
jbe
out
loopne
mov
or
sbbb
jge
push
push
cmpsb
hlt
jne
cs
sub
jbe
mov
loop
mov
repnz
or
mov
nop
loop
inc
xchg
push
push
out
jnp
sbb
call
xor
imulb
outsb
repnz
pop
mov
aaa
xrelease
mov
outsb
jge
out
mov
loop
pushf
xchg
cmp
enter
and
xchg
rcrb
rorl
add
dec
test
push
addr16
into
fisttpl
and
stos
not
loope
adc
call
add
dec
adc
test
shl
in
or
fidivl
sbb
jb
outsb
cltd
cmc
pop
test
cli
jmp
and
pop
mov
xor
or
inc
jne
jns
out
add
shrd
call
jl
and
mov
mov
loopne
fs
push
fisttps
lahf
icebp
test
push
ret
or
mov
xchg
ret
pop
pop
jno
and
sbb
fldl
xor
xor
pop
jb
sub
xchg
jae
cmp
cmp
inc
sti
xor
xchg
fadds
jp
std
aaa
bound
mov
jns
mov
pushfw
ja
add
ss
test
rclb
std
pop
popf
mov
jae
adc
loope
gs
sub
test
and
cmp
lea
xlat
cmp
or
ja
repz
outsl
fisttps
push
paddw
inc
add
xchg
gs
ret
pop
test
cmpsb
pop
aas
cmp
lcall
jb
imul
iret
test
fmul
mov
in
and
and
inc
sbb
outsl
outsl
jecxz
frndint
pop
cmp
sbb
dec
insb
mov
pop
mov
xor
cli
and
sbb
cs
mov
xchg
cmp
out
jae
repz
rorl
jnp
add
outsl
xlat
and
sub
inc
add
aad
inc
jne
loopne
and
inc
lds
popa
lds
ror
jmp
ret
sub
lods
popf
repnz
mov
inc
insl
pop
aam
or
cld
jo
fs
hlt
sub
rolb
cltd
jg
cltd
xlat
pop
cmpsb
out
loopne
adc
shlb
repnz
and
push
dec
xor
pop
fstl
scas
in
das
jns
std
dec
imul
and
out
das
pop
pop
cmc
sbb
fdivrs
sbb
jecxz
jae
lcall
push
mov
xor
mov
mov
aaa
idiv
jo
xorl
ds
lret
mov
jae
mov
mov
clts
pop
mov
dec
xchg
loopne
pop
adc
insl
pop
mov
or
mov
iret
daa
lret
jo
repnz
jno
cmpsl
sbb
loope
mov
cmpsb
sarb
les
xor
dec
mov
test
idivl
jmp
out
in
out
mov
mov
dec
xchg
movsl
xchg
scas
pop
outsl
mov
mov
push
pop
scas
xor
jae
sti
dec
inc
add
lcall
rclb
lcall
push
cmp
pushf
call
sub
lea
sub
hlt
inc
mov
and
jmp
sub
xchg
cmp
daa
pop
adc
cmpsl
bound
loope
jmp
pop
and
jmp
mov
lcall
movsb
cli
and
pop
clc
xlat
add
adc
sbb
adc
push
or
lea
psllw
je
mov
pop
roll
ja
inc
gs
and
adc
or
aam
mov
xlat
mov
mov
dec
pushf
mov
pop
js
and
mov
das
mov
cmpsl
mov
aad
jo
loop
pop
adc
add
mov
popa
fsubrl
cmp
stc
pop
push
mov
xor
dec
cmp
jnp
and
and
clc
inc
fimull
sub
xor
push
jp
cmpsb
sbbl
in
or
mov
sub
jne
mov
aas
xchg
data16
cmp
push
fiaddl
jo
xchg
nop
add
add
dec
inc
idivl
mov
fs
adc
clc
fs
inc
lods
push
xchg
pop
pop
ss
int3
xor
daa
call
loop
cwtl
xchg
repnz
int
jp
es
outsb
adc
mov
push
clc
out
into
xor
dec
jno
out
or
pop
mov
loop
in
and
nop
out
enterw
enter
daa
lahf
in
pop
leave
pop
dec
pop
pusha
stos
pusha
push
push
pushf
lea
jmp
iret
xchg
mov
imul
repz
jnp
mov
mov
enter
outsl
inc
mov
inc
jl
aaa
in
mov
pop
les
xchg
dec
aad
inc
cmpsb
xchg
push
imul
in
fisubrs
lds
cmpsb
push
out
andb
outsl
sbb
iret
cld
adc
stos
fldenv
stos
cmp
xchg
mov
les
arpl
dec
and
mov
inc
lret
sahf
es
jl
adc
push
pusha
jbe
adc
add
pop
inc
lods
xlat
xchg
arpl
mov
jl
pop
xchg
call
je
cmpsl
sub
rclb
ror
pop
iret
fiadds
jecxz
xor
dec
jp
jae
enter
fwait
and
xor
pop
sub
imul
pop
cmp
ljmp
dec
repz
xchg
and
push
cmp
loope
mov
adc
gs
lods
mov
dec
lods
xor
dec
adc
mov
bound
cld
xlat
pop
loopne
cmp
mov
xchg
int3
adc
inc
pop
add
inc
adc
outsl
negb
pop
or
adc
cmc
pop
lcall
jg
pop
repz
cli
inc
xor
mov
stos
into
addr16
pop
inc
shll
ret
in
lahf
jmp
jno
fs
insl
scas
or
xlat
and
shrl
xchg
or
mov
notb
fidivrl
jmp
aaa
pop
cmp
shr
pop
fwait
add
jnp
jecxz
xchg
movsl
pop
inc
or
jns
mov
movsl
sub
decb
stos
pop
cwtl
cli
jmp
cmpsb
repnz
mov
mov
test
mov
or
dec
mov
rol
gs
stos
add
subl
add
in
jb
pop
inc
inc
out
xchg
fidivs
sbb
cwtl
fisubs
jp
mov
xchg
fwait
adc
sti
xor
fsts
fistpl
out
cmpl
inc
scas
les
mov
push
stc
sub
mov
in
inc
pop
jb
nop
xorb
push
inc
xchg
pop
pop
sub
hlt
leave
ljmp
std
xchg
sbb
sbb
mov
mov
idivl
ljmp
add
sub
or
mov
add
sbbb
fs
sub
push
cmpsl
inc
xchg
push
push
jl
loopne
mov
inc
push
rorb
sbb
and
jge
popf
add
push
gs
outsl
jbe
push
jb
jo
add
lea
xchg
loop
push
cmpsb
out
sbb
sub
push
je
test
into
add
call
int3
or
dec
xchg
push
ret
and
sar
adc
push
in
xchg
shr
push
xor
xchg
push
xor
lea
loopne
aam
pop
mov
cmp
jns
sbb
and
xor
pop
sub
clc
cs
push
test
jecxz
sub
leave
mov
cli
cmp
and
mov
xor
xor
scas
cmp
clc
dec
mov
xor
mov
sbb
hlt
mov
scas
jb
xchg
dec
rcrb
xor
sarb
push
and
mov
iret
add
xchg
movsb
dec
ret
fistpl
push
imul
mov
aad
les
out
fwait
sbb
ret
jo
cmpsl
out
cld
jbe
jl
xchg
jge
loop
mov
and
adc
pop
popa
scas
loope
jo
mov
fnstsw
xchg
add
stos
jmp
pusha
movw
lea
je
push
pusha
lea
jmp
mov
imull
fwait
mov
pop
ja
fisttps
test
inc
ja
bound
mov
or
add
cmp
adc
mov
aad
dec
aas
enter
cwtl
inc
sbb
fnstsw
cmp
lret
js
iret
aaa
pop
je
xlat
rcrl
lcall
dec
mov
add
push
jbe
ret
xchg
lret
mov
fnstcw
ret
mov
clc
push
pushl
ret
xor
das
xchg
rcll
rcll
inc
insl
pop
in
mov
xchg
loop
adc
push
push
jns
adc
insl
addl
test
pop
jle
pop
mov
cmp
add
mov
mov
into
cli
dec
imul
jl
clc
out
xchg
xchg
mov
push
xor
jle
out
xchg
mov
inc
xchg
xlat
and
adc
mov
and
xchg
xchg
rorl
mov
sub
aam
pop
lret
arpl
sub
pop
dec
xchg
mov
mov
icebp
inc
popa
shr
dec
jge
or
fisubs
cmpsl
sti
or
imul
and
inc
call
inc
sbb
pop
xlat
mov
test
push
imul
dec
mov
loop
loope
gs
in
xchg
icebp
ljmp
das
ds
cltd
scas
call
sub
xchg
loopne
xchg
loope
adc
roll
xlat
adc
pop
xchg
idivl
xchg
negl
xchg
orb
jmp
daa
add
adc
lods
cld
inc
jo
or
mov
cmp
arpl
or
into
pop
test
cmpsl
mov
mov
cld
out
xchg
lods
sbb
push
or
xchg
and
rolb
mov
adc
int
repnz
add
pushf
shrb
int3
push
pop
cli
sub
in
mov
aaa
out
mov
lret
push
fbld
jb
push
fwait
lods
cli
mov
xchg
push
jb
xlat
adc
daa
cli
inc
outsb
sub
push
test
xor
loopne
insb
cmpsb
andb
ds
movsbw
jmp
add
xor
out
sbbb
push
cs
fstl
fs
pusha
in
pop
push
mov
jge
xchg
and
cmpsw
pop
lock
xchg
std
ds
addr16
sub
dec
shr
pop
adcb
push
dec
fcomi
push
sub
xchg
mov
pushf
sub
inc
mov
lock
pop
sbb
mov
jl
iret
pop
int3
lahf
mull
repz
iret
sbb
jne
cmp
cmpl
in
aas
std
bswap
cwtl
mov
setge
lea
jmp
mov
cmp
mov
xchg
add
mov
loopne
pop
sbb
fwait
pop
inc
pop
add
mov
repz
fistl
jg
fldt
mov
inc
xchg
mov
pop
popf
or
mov
mov
icebp
adc
xor
pushf
add
mov
xlat
mov
inc
shll
mov
int3
push
xchg
loope
sbb
pop
mov
xor
inc
test
jmp
jecxz
mov
mov
xor
fcompl
lods
in
and
xchg
push
aad
mov
xor
mov
cld
pusha
into
and
das
add
jecxz
ljmp
ret
xchg
jmp
mov
rcll
add
lcall
jnp
pusha
nop
rclb
pop
dec
jmp
cmp
mov
int
fucomi
outsl
ds
push
mov
push
mov
pop
mov
cmp
iret
jmp
jg
inc
push
pushf
mov
movb
adc
push
pushl
ret
push
pusha
pushf
bt
add
clc
clc
test
test
cmp
jmp
in
fisttpll
arpl
aaa
fwait
sarl
stos
pop
loop
mov
movsb
adc
add
inc
jne
sbb
leave
imul
jecxz
mov
scas
lret
xor
or
and
jns
push
adc
clc
mov
shll
cwtl
jno
push
shl
mov
mov
enter
pop
mov
mov
inc
jo
dec
stos
pop
cs
lock
rcrb
add
cmpsl
fildll
mov
lahf
cmpsb
lods
dec
dec
add
dec
jnp
and
mov
pop
mov
rolb
test
cmpsb
push
add
out
and
ds
subb
push
rol
mov
sub
stos
sub
inc
scas
adc
adc
je
jno
adcb
push
jo
jl
xor
test
jecxz
popf
xor
add
aad
sahf
xchg
outsl
rcr
lret
pusha
mov
sub
sub
ficoml
or
inc
push
mov
mov
lahf
es
adc
inc
mov
and
lods
loop
sahf
mov
insb
sahf
loopne
xor
subl
xchg
das
out
mov
popa
in
inc
movsl
std
dec
test
xor
sahf
jb
dec
mov
mov
mov
sub
xor
add
cmpb
scas
testb
or
stc
adc
sbb
sahf
jmp
mov
shrl
sub
lds
mov
cld
std
rcrl
dec
movsb
fstpt
add
out
pop
xor
mov
jno
fstl
and
cmp
pop
jno
or
faddp
lcall
lea
and
popfw
pushl
push
call
fbld
add
shrl
mov
jmp
mov
insb
jge
pop
test
or
pop
ss
andb
shrl
stos
push
sub
mov
lods
sbb
test
dec
out
push
inc
add
xchg
sarl
sub
push
fiaddl
repz
out
xchg
xchg
xor
sub
cmp
mov
sub
test
lods
mov
pop
test
sbb
sbb
mov
push
je
and
xchg
out
inc
mov
mov
outsl
aad
pop
add
out
cs
mov
mov
std
xor
inc
cs
pop
popa
sahf
mov
jecxz
test
and
or
stc
aad
test
jbe
es
mov
dec
repz
out
clc
test
add
mov
sbb
out
push
push
lret
jno
mov
sbb
fmuls
adc
inc
popf
imul
inc
sub
nop
cld
sub
sahf
pop
nop
daa
loope
in
push
fdivp
lock
in
inc
mov
inc
rorl
jns
jb
sub
stos
or
fiadds
ss
pop
fwait
xchg
sbb
dec
test
sub
test
test
xor
adc
mov
mov
xchg
ficoml
jp
loop
fimuls
enter
inc
repnz
lods
cld
lret
sub
adc
shll
loopne
aas
jo
fcoms
mov
out
in
lods
mov
jle
aas
pushf
fs
aam
push
movsl
mov
in
dec
xchg
push
cmp
movsb
fs
add
jb
jne
ljmp
orb
jb
int
in
mov
fsubs
inc
cmpsb
hlt
es
in
inc
pushf
and
sub
sbb
jge
call
add
sbb
scas
push
lea
jne
pusha
mov
movb
call
fcmovne
jnp
mov
jb
out
inc
xchg
lret
sahf
fidivrs
aam
scas
jo
ror
das
addr16
sbb
and
es
fxtract
add
push
dec
and
andb
lret
es
pushf
sbb
or
psubsw
ftst
fucom
mov
mov
icebp
xchg
xor
sub
movsl
or
scas
pop
inc
popf
mov
std
fdivrl
cwtl
sarb
loope
test
and
ljmp
add
outsl
cltd
mov
jno
dec
or
icebp
pop
mov
and
or
jns
fildll
loope
add
mov
adc
mov
in
jmp
outsb
dec
jne
adc
inc
test
jmp
call
je
xchg
mov
jle
inc
nop
dec
loopw
mov
fdivr
add
insb
hlt
in
fadd
sub
pop
jb
hlt
movb
test
lock
data16
inc
xor
pop
inc
xchg
stos
dec
stc
jmp
add
push
popa
jae
popa
outsb
addr16
jo
add
adc
add
lea
inc
fs
mov
cmp
mov
inc
daa
jecxz
sbb
shll
test
xor
out
cmp
inc
inc
jp
xlat
shlb
dec
negb
fisttpl
push
ret
mov
fstpt
movsb
xchg
pop
test
addb
inc
push
jnp
lods
xor
sub
cmp
and
nop
imul
adc
js
daa
pop
jnp
cmpsb
sbb
aam
dec
mov
xor
cmp
or
shrl
mov
sub
in
push
fstl
gs
jmp
xor
mov
mov
add
lcall
xchg
add
jnp
xor
repnz
inc
push
mov
adc
sar
push
push
mov
mov
add
xchg
cmp
mov
shrl
inc
mov
aam
sub
mov
push
mov
xor
ret
lea
cmp
sbb
fnstsw
test
push
cmpsl
sub
add
jg
les
addl
jnp
leave
jo
sbbl
mov
jnp
xchg
cs
lahf
nop
aas
pusha
gs
fwait
push
mov
dec
add
mov
xchg
negb
loope
je
enter
movsl
shll
jg
and
add
sarb
xchg
loop
out
fmul
jl
mov
std
cmp
jge
sbb
out
mov
cmp
lcall
and
adc
mov
out
shrl
add
sti
repz
sahf
testl
test
push
leave
xor
aad
push
sub
xor
hlt
xchg
sbb
add
int
enter
jecxz
lea
and
or
addr16
xchg
lods
sti
dec
xchg
mov
shl
imul
cmpsb
lock
mov
mov
adc
in
jo
loopne
xchg
shrb
mov
movsl
sub
fsubr
dec
ja
insl
pop
pop
inc
lret
inc
rcl
or
int
daa
cwtl
frstor
stc
icebp
sub
add
mov
mov
aam
imul
mov
jb
jg
fisttpl
mov
lds
push
pop
imul
rcll
push
pop
outsl
fwait
lods
pop
pop
outsl
rcll
lahf
rcrl
mov
int3
pop
sbbl
jnp
sarl
mov
ret
sti
push
mov
into
xor
jge
xchg
lea
cli
inc
adcb
sub
push
rcl
xor
add
mov
out
mov
cltd
mov
xor
notl
push
xchg
add
dec
push
loope
jmp
cmp
std
xor
orb
and
rorb
data16
inc
cmpsb
out
stos
repz
xchg
sbb
filds
rorl
pop
cld
and
dec
jne
adc
pusha
lea
call
push
push
pushf
mov
pushf
lea
jmp
inc
push
add
out
ss
sbb
cli
inc
xchg
lret
jl
repz
cmp
push
mov
mov
or
movsb
sahf
inc
mov
jnp
push
pop
hlt
sar
mov
popw
dec
inc
sar
pop
sub
movsl
add
fidivl
push
mov
adc
daa
adc
cld
inc
lods
lret
jl
sbb
mov
orl
mov
lea
jge
aad
leave
sub
xor
sub
and
lcall
inc
jb
add
movsb
pop
popa
fwait
pop
mov
fwait
mov
addr16
xor
fdivrp
clc
dec
jp
stos
sbb
or
sbb
setno
add
pushf
jp
iret
push
dec
lods
sbbb
ficomps
jo
ljmp
cmp
fstpt
daa
inc
fsubrl
and
pop
xchg
out
jo
cmp
fmuls
sub
les
inc
sbb
popa
dec
into
mov
inc
push
les
jmp
xchg
xorl
mov
out
stos
repz
xlat
pop
arpl
sbb
loopne
pop
cmp
adc
mull
sahf
ljmp
pushf
fldl
aas
lods
push
inc
xchg
add
mov
mov
jo
xorps
jmp
push
mov
std
cs
int3
ret
mov
or
std
icebp
dec
sub
lock
pusha
int3
sahf
out
pop
pop
imul
sbb
push
arpl
ret
fs
loope
fcmovne
sub
sbb
ret
sbb
dec
arpl
add
or
notl
cmc
cmp
lea
bswap
mov
pushf
lea
jmp
aas
lods
pop
or
fiadds
stos
loop
lcall
mov
mov
mov
mov
jo
mov
jle
int3
rorl
add
pop
fildll
jb
cs
xor
iret
push
or
shll
xchg
leave
mov
mov
sub
fwait
mov
xchg
leave
sbb
jnp
dec
ret
cmc
inc
lret
adc
shl
cmp
xchg
mov
push
xor
pushl
incl
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
cli
or
add
stc
lods
or
cmpl
and
jecxz
mov
daa
call
add
daa
clc
lahf
adc
jns
add
cmpsl
in
inc
sti
aam
sti
pop
inc
nop
movsb
jl
xor
addr16
sahf
sti
loope
mov
sub
jecxz
sub
fstps
pop
les
testb
inc
jno
repz
das
pop
shr
cmp
das
aaa
lret
xor
and
pop
scas
push
pusha
mov
pusha
scas
add
call
mov
cmc
pop
insl
icebp
inc
mov
sub
inc
push
inc
inc
stos
inc
adc
je
sub
leave
push
sub
sub
int
sub
loope
mov
cmc
jnp
test
sub
repnz
mov
aam
push
and
enter
rcr
enter
push
jb
out
pop
stos
in
push
cmpsb
add
nop
cmpsb
andb
dec
or
jbe
adc
lea
push
jb
repnz
idivb
cmpb
xor
pop
ret
cmpsb
mov
popa
dec
cwtl
xor
xchg
filds
sub
jb
jnp
cwtl
xor
cmpsb
sub
mov
stos
xchg
mov
pop
xor
xor
lcall
inc
aas
mov
ss
inc
pop
push
adc
add
mov
andl
jnp
negb
mov
call
add
lods
mov
js
int3
movl
push
movl
pusha
movw
pushl
movb
lea
jmp
mov
pop
adc
lea
and
fdiv
fs
rcrb
fildll
ja
sbb
xchg
sbb
std
push
mov
stc
imul
pop
fs
push
xchg
imul
test
xchg
xchg
xchg
push
push
mov
repz
mov
jp
js
repz
hlt
pop
dec
xorl
addr16
insb
push
ljmp
insb
std
enter
cld
ret
pushf
adc
push
mov
std
pushf
hlt
sub
out
xor
fs
out
mov
dec
mov
dec
es
cmp
dec
xchg
ret
jmp
dec
mov
sub
pop
loopne
adc
lods
fcompl
jo
xor
insl
cmpb
ret
int
mov
xor
push
lods
dec
or
fnstsw
outsb
addr16
js
pop
lock
jne
iret
das
and
popa
fs
mov
adc
dec
fldt
cmp
jbe
jge
fstpt
mov
repz
jae
das
gs
jmp
dec
or
aas
xlat
xor
xlat
clc
xor
clc
clc
test
sub
pusha
ror
call
movl
lea
ja
pusha
mov
jmp
xor
rclb
mov
movsl
in
sub
mov
sbb
notb
inc
mov
sahf
mov
pop
sub
sbb
ljmp
cmp
inc
sbb
test
mov
scas
fwait
jno
sub
xor
movsl
sahf
arpl
push
mov
fsubrp
fidivs
push
inc
icebp
ret
sti
mov
mov
mov
mov
adc
inc
push
mov
cmp
mov
test
adc
jle
adc
mov
push
pushf
lret
dec
or
movsb
movsb
test
into
push
mov
pushf
pushf
mov
not
lea
mov
pusha
lea
jnp
push
mov
lea
not
pop
pushf
pushl
ret
and
lea
popf
add
popa
jge
add
jecxz
outsl
lods
add
jae
xchg
jne
or
pop
or
inc
mov
pop
insl
bound
clc
lcall
sub
test
adc
bound
pop
leave
mov
jo
mov
pop
sub
inc
lods
pusha
and
cltd
fstpt
gs
add
rcrb
push
scas
leave
insb
std
sub
sti
mov
jmp
mov
int3
or
cmpsb
in
xor
in
dec
es
aam
mov
push
mov
test
nop
inc
pop
mov
dec
nop
les
pop
lods
hlt
pop
cwtl
or
js
cmp
lahf
repz
js
loope
mov
and
jnp
aad
pop
pusha
test
pop
push
mov
cmp
in
divb
xchg
stc
or
sbb
repz
jmp
push
outsb
into
cmp
loopne
pop
xchg
sbb
out
nop
mov
pushf
lea
jne
shrd
mov
dec
movzbw
sub
pushf
btr
or
rol
lea
cmc
movl
test
sub
test
cmc
pushl
popl
call
dec
pop
or
mov
sub
je
lock
mov
xor
mov
xchg
out
inc
pop
mov
mov
inc
inc
sub
loop
dec
xchg
mov
inc
mov
push
imull
add
jecxz
and
mov
fstpt
and
xor
ficompl
hlt
xchg
addr16
mov
leave
out
sbb
mov
and
cmpsl
stos
and
fbld
rorl
inc
xor
cmp
pop
dec
xchg
clc
aad
adc
test
and
lcall
lock
xchg
pop
and
mov
roll
xlat
dec
xchg
jb
cmpsl
push
test
shll
sub
inc
mov
xor
xchg
adc
cmc
xor
xlat
das
mov
lcall
pop
push
or
inc
mov
sub
jmp
xchg
das
inc
lret
add
sub
adc
sbb
adc
dec
test
sbb
mov
lock
test
iret
mov
cmp
rsqrtps
or
test
xor
or
mov
sub
pop
mov
inc
xor
jae
je
insl
pop
outsl
add
sbbl
fisubrl
stos
jae
xor
movsl
add
adc
rcrb
adc
or
xchg
sahf
push
mov
inc
sbb
insl
mov
das
jne
cmc
dec
imul
adc
sub
fs
mov
sbb
mov
mov
or
mov
mov
insl
sub
jbe
int
es
push
or
ss
lret
xor
xchg
mov
repz
les
add
cmpsl
fwait
cmp
jge
sub
adc
push
packuswb
jle
call
cwtl
ljmp
cmp
pop
js
cld
xor
in
dec
xchg
lret
cmp
adc
xor
pushf
call
inc
cwtl
cld
es
jl
insl
iret
std
mov
pop
mov
xchg
mov
test
adc
insl
push
mov
pusha
add
xor
inc
and
ret
pushf
xchg
icebp
sub
xlat
cli
popf
xchg
out
push
lods
adc
loope
popf
mov
jl
xor
outsl
inc
mov
cld
push
xor
inc
out
insb
nop
orl
test
adc
stc
daa
inc
shlb
loop
sub
or
sbb
mov
pop
mov
pop
fwait
pop
outsl
fwait
lret
repz
cmc
pop
adc
cmpsl
lock
stc
inc
add
aad
xorb
and
mov
ret
adc
xor
out
jbe
or
iret
jb
lahf
mov
idivl
fnsave
scas
xchg
mov
jb
orl
mov
xlat
aaa
fldcw
cli
push
cmp
sub
xor
mov
xchg
fbld
sub
insl
mov
pop
insl
xchg
lcall
xlat
mov
pushf
pushl
pusha
mov
pusha
pushf
lea
jmp
cmp
call
mov
adc
mov
inc
pop
lods
in
cmp
dec
push
and
sub
shl
lea
mov
or
out
stc
fstpt
lahf
add
inc
ljmp
and
sbb
imul
js
movsl
jge
xchg
iret
jp
xchg
mov
xor
inc
cli
out
cmpsb
jae
shl
in
in
ret
sti
xchg
lahf
xchg
shrl
sar
add
jnp
sahf
fcoms
jb
int
cmc
popa
jo
loopne
ficoml
ret
jle
mov
notl
xor
pop
movsl
lods
jne
jns
mov
sbb
inc
pushl
movb
push
mov
lea
call
push
sub
sbb
lea
cld
cmp
enter
or
mov
add
adc
cli
aad
loopne
lds
daa
xorl
fwait
sub
into
jecxz
lea
mov
lods
or
fsubrl
nop
fisubs
pop
cwtl
lods
test
mov
and
je
push
cmp
stc
cmp
pusha
lea
je
call
or
lea
dec
cmpsb
cli
push
cmpsb
shlb
inc
mov
jp
std
cmpsb
cs
sub
bound
sbb
out
and
xor
daa
aas
jne
inc
fsubr
in
les
cwtl
aas
arpl
js
loop
aam
cmp
adc
jecxz
rcrb
or
adc
mul
mov
or
dec
or
scas
and
or
mov
xchg
dec
dec
mov
add
inc
push
mov
xor
and
sbb
sti
sarb
inc
pusha
movl
pusha
movl
lea
jmp
jb
mov
mov
insl
movsl
frstor
in
jge
lds
dec
cs
add
outsb
xchg
out
mov
dec
iret
push
add
lods
sbb
decb
cmp
jns
loop
add
imul
inc
rorb
outsl
xchg
addr16
jmp
jge
xchg
lret
test
and
les
inc
jle
lds
aad
push
mov
add
jmp
adc
aad
mov
into
or
mov
pop
insb
inc
ud0
push
das
adc
add
adcl
inc
call
mov
jle
arpl
inc
enter
test
pop
scas
mov
jo
adc
sbbb
sbb
add
lahf
mov
xchg
je
test
sbb
mov
add
in
adc
mov
pop
push
push
pop
das
adc
sbb
or
arpl
fists
sub
cmp
dec
inc
dec
dec
xor
cs
insb
add
rolb
mov
sbb
fistl
xlat
testl
filds
ret
cmp
ss
jmp
inc
push
fstp
pushfw
sbb
adc
aam
sti
jo
xor
push
lock
sarb
dec
mov
insl
cmpsl
adc
cmovns
test
sub
pop
lods
rclb
push
mov
not
mov
jmp
jmp
cmp
fcomps
mov
xlat
lcall
cmpl
insl
test
test
jns
xchg
jp
add
pusha
fwait
arpl
xchg
jns
sbb
hlt
int
addr16
push
ror
and
mov
cmpb
dec
repnz
push
fwait
jmp
test
loop
sbb
cmc
xchg
push
jns
adc
push
xchg
out
ja
or
jg
mov
aas
push
popl
mov
inc
movsl
lds
int
pop
mov
or
adc
inc
icebp
es
xchg
test
out
push
pop
repnz
subl
mov
dec
xlat
mov
ret
shrb
test
mov
repnz
test
sbb
inc
mov
insb
xchg
push
adc
push
inc
cmp
leave
xor
lds
xor
loop,pn
xchg
jl
jbe
jp
fwait
push
lods
lahf
mov
pop
cmp
inc
iret
jmp
jae
pop
subl
sahf
and
push
xor
lea
repz
ja
fistpl
jae
or
mov
popf
fisttpll
mov
daa
cmp
lahf
mov
mov
inc
jo
push
ss
ja
addb
xchg
stc
xchg
enter
push
jnp
shll
int3
test
cmp
or
sbb
lock
cmp
pop
imul
sub
stc
and
fnstcw
popa
xchg
std
aaa
adc
sub
mov
sbbl
sbb
xchg
jecxz
shll
pop
mov
enter
ret
push
sahf
call
out
movsb
in
pop
shll
adc
or
push
cltd
mov
cmpb
jnp
mov
lret
cmp
aad
jno
cmp
mov
inc
or
imul
mov
loop
jnp
loopew
mov
sar
in
lods
out
rclb
lcall
mov
push
pop
out
mov
es
push
btc
mov
pushf
bt
clc
cmpb
pusha
push
jmp
lea
jno
sub
clc
stc
cmp
pushf
pushl
call
mov
lea
push
ds
push
inc
lret
mov
lahf
imul
cmpsb
cmp
arpl
and
adc
popa
insl
in
ljmp
dec
test
push
bound
mov
cmp
lock
loop
fisttpl
mov
fldt
pop
add
mov
mov
jl
xorb
xchg
loop
jnp
or
push
jno
aad
rclb
jb
sub
sub
xor
inc
or
jnp
cld
push
sarb
cmp
mov
or
xchg
aad
popa
test
sub
push
sub
stos
mov
insl
xchg
add
repnz
shll
mov
mov
inc
xchg
xchg
leave
mov
jmp
sub
outsb
lret
jmp
sub
mov
xor
fldenv
xlat
sub
dec
cmc
aam
dec
cltd
iret
in
mov
fimuls
shrl
stos
add
popf
out
sbb
mov
stos
adc
jge
cmp
mov
mov
push
lcall
andb
stos
xor
popa
sbb
mov
andb
ret
jnp
mov
xchg
in
jle
sbb
nop
cmp
jp
mov
cmc
cwtl
icebp
push
jl
stos
or
xor
inc
out
adc
jecxz
stc
aas
fisubrs
mov
ss
mov
mov
cmpsl
fstpt
lods
xor
mov
and
hlt
and
jbe
cltd
fisttpl
dec
lcall
ret
jge
and
shl
and
add
sub
jmp
bsf
rcr
xor
sar
mov
stc
jmp
pop
add
mov
xor
in
cmp
push
mov
dec
scas
maxps
int3
sbb
sahf
ds
add
movsl
push
dec
ss
push
nop
pop
pop
les
sbb
pop
pushf
add
ds
pop
sbb
loop
and
or
sarb
xchg
in
xor
jecxz
fcmove
fistl
data16
adc
repnz
inc
mov
out
outsl
mov
xlat
xor
inc
push
out
push
pop
xchg
shll
and
je
push
or
pushf
lea
je
not
adc
pushf
daa
xor
ror
pop
mov
btc
mov
movzbw
inc
shr
or
bswap
btc
mov
call
and
ret
lea
cmc
dec
mov
add
mov
mov
xchg
push
mov
sbb
lock
or
push
inc
mov
in
jbe
dec
and
cwtl
push
sub
lret
mov
into
push
mov
mov
mov
test
dec
mov
dec
mov
out
inc
cmp
in
loopne
ds
xlat
lret
push
mov
and
cmp
notb
mov
pusha
push
push
mov
int3
xchg
xchg
out
insb
mov
sub
xor
or
lret
jb
hlt
ss
mov
das
imul
ret
jecxz
ja
out
push
push
std
lea
cmp
icebp
or
mov
xor
mov
outsb
cmc
cmp
sub
test
ret
mov
inc
in
sbb
sar
mov
or
cmpsl
ret
sub
xor
pusha
pop
and
cmp
cltd
leave
divl
xchg
nop
mov
adc
mov
dec
pushf
mov
jb
es
xchg
mov
push
inc
pop
inc
cmpsl
decl
jp
adc
pop
pop
stos
mov
or
imul
mov
xchg
mov
xchg
pop
iret
cwtl
pop
fcoms
inc
test
add
jb
or
in
fnstcw
inc
sahf
jecxz
pop
cld
in
inc
mov
jnp
lds
pop
push
push
inc
sbb
daa
jo
jns
fsubr
ret
cltd
loope
jp
dec
bound
cld
sti
jmp
lods
push
je
push
loope
ret
mov
test
add
mov
adc
or
inc
xchg
ret
movsb
loop
js
lret
mov
js
out
sub
adc
lea
push
dec
mov
or
fstl
subl
jbe
inc
mov
cmpsb
fwait
xor
mov
inc
lret
cmpsl
or
push
int
insb
sbb
cmp
ror
sub
adc
test
adc
pop
mov
jmp
push
xchg
dec
mov
dec
xchg
pop
mov
stos
sub
cwtl
xorl
ljmp
loopne
pusha
xchg
mov
pop
dec
in
add
cmpsb
call
mov
dec
pop
cmpsb
fisubl
mov
sbb
push
filds
and
test
pop
insl
enter
mov
inc
cmpsl
sti
hlt
fcoml
dec
inc
out
adc
test
imul
mov
push
in
mov
cmp
mov
jmp
inc
mov
xor
inc
mov
flds
inc
orl
jno
shrb
jge
cmp
xchg
stc
xchg
mov
pusha
movsb
lock
fcoms
mov
pop
push
adc
subl
ss
push
sti
or
mov
enter
fstpl
out
cwtl
icebp
xlat
iret
sub
in
cmp
xchg
sbb
inc
in
and
rcr
pop
xchg
test
fldcw
sub
lret
leave
mov
mov
aaa
cltd
pop
insl
xchg
mov
imul
cmp
sbbb
fs
call
pushf
sub
pushf
lea
jne
push
lea
call
pushf
pusha
pushf
lea
jmp
loopne
outsl
mov
mov
adc
mov
push
stos
arpl
sahf
shl
into
insl
idiv
xchg
sti
out
pop
sahf
push
and
out
inc
xchg
scas
xchg
dec
cltd
fs
test
pop
aas
out
mov
mov
and
lock
insb
bound
loop
mov
shrl
lcall
cli
cs
ljmp
push
mov
mov
cmpsl
adcb
orl
push
pop
idivl
cli
add
in
push
pop
dec
test
push
fadd
push
outsl
fmul
in
and
push
je
xor
adc
adc
call
lahf
push
mov
stos
test
adc
mov
lahf
jmp
and
inc
sbb
adc
roll
push
pop
jp
mov
inc
mov
pop
in
dec
es
jp
cmpsb
cmp
int3
xor
in
addr16
pop
jo
jp
sbb
adc
mov
xchg
mov
or
mov
jge
cs
dec
dec
pop
mov
add
test
test
inc
pop
sub
add
add
lret
push
mov
jne
add
and
ss
dec
stos
fiadds
lock
test
pop
add
bound
mov
xchg
orb
xor
les
fsubrl
push
into
int3
jae
test
cltd
jb
cltd
int
ficoms
pushf
test
or
movsl
mov
jns
pushf
sbb
cmpsb
adc
or
mov
pop
mov
ss
inc
add
pusha
ret
cmp
push
jmp
jg
inc
popa
mov
sub
push
sub
xchg
je
fldenv
dec
pop
aaa
adc
jns
xor
or
sub
jnp
fxch
push
pop
movsb
cltd
xor
icebp
mov
mov
cwtl
mov
sbb
xor
pop
std
mov
xchg
inc
jmp
and
pushf
jp
inc
cmp
or
cmpsl
fs
ljmp
dec
aam
inc
mov
or
insl
sub
sbb
outsb
pushf
xchg
adc
mov
push
es
clc
es
clc
pop
mov
adc
dec
sarb
sbb
sbb
mov
or
pop
mov
sbb
and
mov
pop
xor
mov
das
xor
and
xor
and
sbb
sbb
mov
add
push
rep
call
mov
bound
jno
sbb
lds
cmp
and
fcomps
popf
and
sub
int
dec
inc
xor
pushl
lods
loopne
push
mov
or
pop
cmpsb
lret
push
xchg
out
sub
aam
sbb
aas
aas
outsb
lret
lea
bound
cmp
sbb
jmp
pop
sahf
pop
inc
sbb
push
bound
lods
repz
lahf
stos
out
cmp
mov
or
cmpsb
cs
mov
push
pop
xchg
clc
inc
test
mov
add
adc
jnp
arpl
mov
jmp
push
xorl
ljmp
lcall
jns
fwait
arpl
out
xor
xchg
sbb
sbb
jne
ljmp
xlat
fldt
or
test
xlat
test
pushf
ljmp
jl
ljmp
mov
adc
pop
sbb
jg
roll
xchg
mov
mov
rcrb
pop
stos
ss
inc
data16
ljmp
repnz
and
ret
xor
das
sbb
cmp
pop
popf
filds
stc
pop
xchg
adc
int
rorb
mov
fwait
mov
es
xor
stc
int
pop
xor
pop
insb
sarb
xor
and
test
adc
mov
lret
addr16
push
jl
mov
adc
mov
pop
lods
cmp
lret
setbe
pop
imul
dec
cmp
hlt
push
pushf
mov
movsb
repnz
les
lret
push
fidivrs
imul
mov
dec
mov
inc
push
xchg
loope
pop
mov
push
jg
adc
and
fs
mov
pop
out
adc
mov
pop
pop
mov
stos
test
scas
cmpsl
add
sub
dec
pop
xor
xor
movsb
or
insb
scas
in
cmpsb
inc
jns
arpl
sbb
xchg
xor
lods
xchg
and
fsubrl
sbb
int
flds
sbbb
inc
jns
sub
jmp
xchg
imul
into
lea
call
pusha
pusha
jmp
movl
jmp
loopne
movsb
insb
mov
test
fnsave
xchg
fldl
in
mov
sbb
imul
call
mov
pusha
jne
loopne
adc
andb
iret
sub
push
pop
xchg
add
xchg
cmpb
int
pop
lds
mov
jg
cmp
sub
mov
mov
rclb
daa
jg
or
cwtl
fdivl
inc
movsb
jnp
sub
mov
sbb
jl
dec
mov
and
insl
inc
adc
sbb
ljmp
dec
mov
cmp
fs
jno
pushf
js
arpl
fadds
loop
int3
lcall
in
lds
shrl
popa
movsl
sahf
scas
push
icebp
cmpb
pop
mov
adc
or
pop
sbb
imul
mov
mov
stos
pop
pop
xchg
shll
jae
add
in
jns
call
xchg
imulb
xchg
push
sbb
mov
cltd
lds
mov
jecxz
loop
mov
mov
pushf
pop
ljmp
insl
nop
lea
shrl
mov
clc
ss
out
pop
dec
mov
lds
sar
mov
mov
mov
lods
gs
int3
out
cli
cwtl
pop
push
in
cmp
cli
aad
mov
and
pop
mov
or
sub
ss
mov
adc
rorb
push
scas
call
es
jne
pop
loop
xor
adc
outsb
mov
push
jb
ljmp
xchg
dec
push
stos
movb
lcall
enter
imul
out
adc
aaa
xor
mov
sbb
mov
mov
sub
xchg
lods
cmp
iret
mov
dec
mov
dec
mov
fstps
arpl
inc
imul
cltd
fidivrl
je
pushf
dec
ds
fdiv
inc
jl
sbb
in
push
mov
push
jmp
cwtl
and
in
int
xchg
jae
mov
or
hlt
or
test
or
xor
mov
mov
xor
lcall
pop
push
dec
cmp
mov
ds
insl
mov
outsb
mov
push
or
andl
inc
sbb
stos
fldl
xor
cmp
out
push
jnp
pop
dec
mov
adc
lock
fstl
jae
shr
adc
jns
or
push
or
setle
adc
push
gs
repnz
in
sbb
jg
mov
in
mov
jb
inc
push
fildll
or
rorl
mov
pop
mov
mulb
repnz
ljmp
add
pop
mov
xchg
test
jmp
fcoml
jp
decb
mov
jmp
cwtl
cli
ss
push
rcll
mov
sbb
adc
test
mov
into
inc
adc
jno
out
inc
cmp
popa
aas
movsb
out
cmp
sbb
mov
daa
and
and
pusha
xchg
add
ret
adcb
dec
push
outsl
xchg
inc
jmp
sbb
and
mov
addr16
sub
xchg
lret
into
sbb
into
in
add
fnstenv
aas
mov
dec
cwtl
loop
and
cli
push
pop
add
ss
lcall
mov
jge
rcll
cwtl
test
lcall
imul
mov
sub
in
fimuls
rorb
or
cmc
xor
xchg
daa
fisubs
cli
popa
jge
shl
mov
lret
cmpsl
out
ljmp
or
repz
mov
inc
sub
hlt
test
jno
pop
jp
xor
xor
and
and
aas
fucom
in
jae
xor
xchg
data16
ljmp
mov
push
or
mov
jae
sbbb
test
push
loop
jge
scas
pop
adc
adc
add
adc
cs
jle
push
add
rcr
cld
cmp
jne
out
jnp
mov
lret
inc
pop
xlat
and
mov
cwtl
test
pushf
pop
daa
mov
cmp
sub
rcrl
sub
int
mov
rcr
push
insb
pop
mov
sub
imul
adc
add
and
test
sub
addr16
xor
test
inc
xor
or
fdivr
xchg
xchg
dec
popf
xchg
add
and
xlat
hlt
push
cmc
xor
lds
into
or
jb
and
test
jecxz
jmp
out
repnz
mov
cmpb
mov
pop
dec
imul
pop
into
push
insl
sub
push
lea
inc
in
cwtl
aam
jl
sbb
addr16
mov
gs
rolb
xchg
loope
adc
pop
mov
test
and
xchg
int
je
mov
pop
and
mov
divl
pop
loope
mov
mov
mov
fnstcw
mov
cmpsb
jae
sub
fdivrp
arpl
mov
dec
sub
xchg
or
jp
jecxz
inc
dec
adc
push
out
popa
dec
int
outsl
daa
scas
es
pop
sub
pop
push
nop
int3
adc
in
mov
adc
cmp
dec
xchg
mov
aad
dec
push
out
pop
xchg
sti
cmp
dec
jnp
fbstp
outsl
lret
dec
add
into
cld
mov
fmuls
repnz
add
adc
cmp
jnp
test
pop
cs
xlat
inc
incb
or
xor
add
cmp
call
jl
inc
push
pusha
or
inc
lahf
out
ror
add
cld
out
add
xbegin
inc
shrb
sarl
sbb
lret
lahf
stc
push
dec
mov
imul
out
div
loopne
adc
jb
enter
lock
dec
sbb
push
mov
sar
imul
imul
mov
ficompl
into
sbb
inc
mov
adc
inc
or
clc
push
nop
jl
jbe
sarl
test
jmp
test
enter
push
pop
adc
rcrb
insb
and
fwait
adc
add
or
test
pushf
dec
mov
mov
in
sub
popf
out
xchg
mov
popa
sbb
dec
lods
testl
je
lea
cmc
push
mov
loope
lods
fyl2x
aas
int3
popfw
mov
inc
or
int
xchg
add
insl
dec
mov
dec
cmpsb
jg
fdivrs
sub
cmc
out
movsl
jecxz
mov
lret
xchg
lock
adc
int3
imul
mov
inc
xchg
fcmovne
add
add
cmc
lcall
jne
int3
ja
repnz
xchg
jmp
jecxz
add
cmp
mov
sub
sbb
out
push
mov
cmp
cmp
pushf
mov
pusha
jmp
mov
lea
out
bound
dec
mov
add
insl
loopne
int
jns
pop
xchg
test
lea
mov
jp
ds
and
lods
xor
addr16
repz
push
mov
nop
lods
fucomi
xchg
mov
push
popf
mov
xchg
jne
enter
mov
or
jne
push
mov
jne
aaa
pop
sub
mov
mov
jne
and
add
ret
sub
mov
push
dec
push
fwait
push
adc
adc
mov
add
daa
jo
ret
mov
lock
xor
enter
in
inc
jp
add
add
xor
sub
jne
inc
cld
xor
enter
sbb
push
cs
add
add
inc
shrl
xor
enter
loop
orl
mov
cmp
adc
add
add
enter
cmpb
enter
in
jle
push
or
add
daa
push
shll
mov
add
daa
jo
test
jp
add
daa
insb
sar
repz
adc
daa
jo
loopne
inc
out
leave
push
xor
enter
dec
and
mov
add
daa
jo
xchg
andb
daa
jo
ret
and
lret
shr
sbbl
enter
int
add
and
cmp
xchg
push
lock
dec
or
mov
imul
and
shr
sub
add
xor
enter
test
lret
lea
xor
enter
call
out
xor
enter
xor
inc
hlt
loopne
add
daa
push
rcl
imul
jo
add
fs
mov
sub
add
daa
or
inc
cmp
or
add
daa
jo
shll
mov
enter
add
sub
xor
dec
and
hlt
xor
xor
enter
out
mov
or
jp
add
inc
jno
out
sub
xor
enter
adc
cmp
inc
lret
dec
or
fstp
imul
and
roll
cwtl
jne
xor
enter
fildl
jecxz
add
xor
rcl
lret
dec
in
xor
rcrl
xor
lret
inc
loope
arpl
xchg
xor
enter
push
push
pop
cmp
enter
out
xchg
fcoml
xor
enter
in
ficomps
push
xor
enter
call
mov
sbb
in
mov
inc
fidivs
dec
and
mov
add
cmp
mov
divb
add
add
fsubrp
and
mov
xor
enter
mov
aas
test
lcall
test
pop
xorb
loopne
cmp
pop
outsb
mov
pop
std
cltd
pop
push
dec
rorl
lcall
dec
sub
jbe
int
mov
push
and
adc
inc
push
divl
es
mov
into
cmp
out
xorb
push
test
ret
sahf
push
xchg
ja
lret
shl
cmpsb
xor
and
xor
ss
cs
adc
outsb
outsl
fs
fnstenv
fmull
or
cmp
in
adc
jp
mov
roll
loopne
inc
popf
add
add
in
pop
mov
sub
cmp
pop
xchg
xchg
les
mov
pop
adc
call
in
popa
mov
inc
lods
fcomi
push
fldcw
and
dec
test
test
dec
sbb
mov
xchg
aad
inc
xchg
aad
fs
mov
repnz
outsl
add
repnz
lret
in
cmpsb
mov
js
mov
loop
xor
xor
sub
outsl
xor
pop
sub
pop
mov
lods
jle
mov
test
adc
imul
movsl
out
and
mov
scas
jae
daa
outsl
es
scas
hlt
cmp
push
outsb
shl
popa
push
sarb
pop
test
movb
movzbl
mov
call
call
pop
dec
std
jno
lea
push
bound
and
fidivrs
movsb
mov
fisttpll
sahf
stos
xor
mov
stos
adc
sbb
test
outsb
rcrl
movsb
stos
dec
jnp
rorl
out
jo
jnp
fdivrs
arpl
popa
mov
shr
loope
xchg
mov
cs
loop
das
xchg
xchg
xor
push
sahf
add
jo
pushf
aad
js
in
bound
mov
das
addr16
mov
fdivl
popa
jmp
aad
xor
fs
stos
ja
fwait
je
int
repnz
mov
in
mov
dec
test
dec
ret
in
pop
movsl
pop
push
inc
clc
aas
mov
and
jnp
test
pop
lods
subb
in
cmp
mov
loopne
add
xchg
mov
insl
rcll
dec
lea
xchg
mov
cmp
das
scas
pushf
movsb
in
sub
xor
cs
insb
add
aam
mov
ret
xlat
sub
pop
dec
add
add
aas
cli
mov
in
xlat
cmp
pop
adc
or
jno
lret
leave
in
push
movsb
dec
mov
sbb
nop
popa
ljmp
mov
out
cmpsl
in
scas
xor
pop
push
xchg
aaa
icebp
dec
fdivs
sub
jmp
mov
jmp
inc
jno
mov
inc
ds
insl
lods
test
push
xor
test
adc
out
scas
add
nop
movsl
mov
test
jecxz
jb
lea
xlat
notl
out
push
xchg
jmp
test
rorl
scas
add
rolb
into
nop
out
pusha
lods
sahf
xchg
inc
scas
push
pusha
popa
mov
stos
ljmp
jecxz
aam
ss
mov
lds
xor
fisttpl
push
sbb
jb
pop
cwtl
fistpl
push
gs
int
mov
mov
inc
jb
adc
sub
shl
popa
mov
jae
lea
dec
xchg
divb
push
fisubrs
inc
xchg
ss
mov
mov
out
xchg
mov
sti
or
sub
sub
xor
sbb
sahf
or
xor
test
push
movsl
pushf
or
into
es
cltd
fildl
xchg
sbb
dec
jmp
pop
shll
iret
adc
out
jp
jle
repz
in
push
jge
pushl
stos
sti
aaa
adc
aaa
mov
inc
ja
call
orb
adc
cmpsb
or
pop
jnp
insl
xchg
mov
and
loope
xchg
inc
add
jecxz
in
loopne
push
repz
push
xchg
clc
pop
inc
xchg
mov
add
pop
jns
fisttpll
jecxz
lahf
loope
test
std
mov
fnstcw
pushf
lea
jne
movsbl
pusha
lahf
movb
jmp
nop
xorl
aas
scas
repz
lahf
mov
imul
push
test
dec
add
push
mov
loopne
adc
insl
cmp
push
movsbl
push
fdivs
xlat
add
icebp
shrb
gs
push
addb
push
push
popa
insb
fldl
sahf
or
test
xchg
and
pop
xor
out
xchg
pop
dec
and
sbb
mov
fs
fcompl
inc
movsb
in
test
fists
int
dec
mov
add
jne
sub
lods
lea
cmpsl
inc
mov
movsl
cmp
test
jmp
sub
sub
push
mov
mov
fwait
loopne
repnz
jno
stos
mov
jmp
dec
insb
int3
ret
push
outsb
push
in
sarl
enter
jbe
imul
repz
mov
and
cld
push
fdiv
dec
mov
jmp
mov
mov
not
cmp
pushw
popfw
movl
push
movl
pushf
inc
mov
call
stos
in
movsb
jge
lea
leave
or
lds
cltd
add
pop
or
leave
adc
stos
neg
xor
daa
fcomip
mov
mov
das
inc
mov
cltd
push
mov
pop
hlt
pop
inc
mov
cltd
jbe
push
adc
aas
or
adc
cli
not
sbb
lock
push
lea
mov
xchg
orb
in
ret
mov
jne
and
je
outsl
mov
loopne
leave
mov
dec
mov
push
mov
adc
dec
in
sub
idivl
arpl
ljmp
push
lahf
shrl
xchg
push
jae
xor
mov
mov
addl
out
out
in
mov
cwtl
cld
inc
or
adc
or
pop
das
xchg
mov
andl
pop
jp
xor
mulb
fdivs
pop
mov
mov
dec
mov
push
sbbb
dec
and
cmc
fidivrl
cmp
mov
add
xlat
sub
xor
add
loopne
pushf
add
hlt
in
dec
and
push
push
icebp
pop
es
dec
add
lods
stos
add
sbb
xchg
sbbb
sbb
cli
dec
and
scas
test
mov
pop
jbe
shlb
mov
sub
cmp
or
dec
add
imul
inc
xchg
pop
out
sbbb
cmpsb
fdivrl
dec
notl
idivl
pop
push
sub
movsl
cmc
adc
lods
lds
jno
sbb
add
bound
aaa
fdiv
lret
dec
cmp
andb
popa
jb
call
js
inc
and
repnz
in
xchg
ja
mov
sbb
div
jb
lahf
bound
or
inc
push
mov
add
cmc
popf
lcall
add
fildl
rcll
dec
xchg
pop
xor
test
add
in
popa
mov
sub
mov
lcall
lcall
lds
and
lret
testl
leave
add
pmuludq
dec
jg
mov
jbe
repz
xchg
orl
mov
cmc
pop
lods
out
fwait
and
fildll
jne
int3
lock
jmp
sub
ljmp
cmp
js
lea
insb
shlb
lods
hlt
adc
pushf
les
push
adc
fnstcw
mov
cmp
cmp
in
scas
icebp
lds
jo
ss
sub
mov
push
or
fs
scas
mov
sarb
mov
je
jno
cmp
repnz
out
and
daa
sbb
fcom
sub
sub
xlat
or
push
xchg
push
aad
popa
push
push
cmp
iret
mov
test
pop
xchg
rcrl
mov
out
push
ss
movsb
icebp
add
movsb
aam
pop
cwtl
int3
sub
loopne
xor
cwtl
insb
daa
xor
les
es
or
or
dec
pop
aas
jne
push
or
gs
repnz
addr16
push
mov
xchg
mov
sbb
fmul
cs
dec
xchg
ja
mov
imul
mov
jp
dec
and
lds
push
sqrtps
repz
imul
adc
je
stos
mov
pop
cmp
sbb
in
sub
mov
sub
mov
push
ret
test
mov
push
cmpsl
cwtl
dec
jns
lock
int3
add
fsubrl
insb
lods
cld
xor
mov
cld
pushf
enter
push
inc
arpl
imul
mov
pop
lock
xor
dec
pop
inc
pop
jl
and
mov
sub
orb
jns
mov
in
mov
push
stos
mov
out
mov
push
stos
in
pop
and
dec
nop
ficomps
sahf
xchg
mov
iret
and
out
int
jmp
add
adc
jp
lea
pusha
lods
loopne
mov
and
push
mov
aaa
jnp
adc
sahf
mov
loop
xchg
or
clc
inc
insl
adc
ret
and
sbb
fisttps
call
mov
movsl
enter
jo
lods
fisubrl
push
loope
popf
mov
push
mov
mov
dec
addr16
repz
scas
stc
sbb
cmp
aaa
jnp
and
lods
movb
pushl
movb
dec
pusha
cmc
cmc
ror
mov
cmp
push
xor
mov
jmp
into
xchg
mov
or
push
jp,pt
mov
repz
xchg
popa
sbb
or
inc
lods
decb
movb
xor
cwtl
call
xor
sahf
sbb
cmp
jo
inc
jg
pusha
dec
dec
mov
adc
addr16
cmp
push
jno
ret
or
incl
or
inc
ffreep
pop
jmp
in
fldcw
pop
lret
sub
out
dec
mov
add
mov
or
mov
es
mov
mov
pop
xor
jnp
lea
xor
lods
or
mov
lock
lcall
iret
add
jns
orb
out
sub
cld
pop
mov
sahf
scas
outsb
inc
andb
fs
cld
nop
mov
or
hlt
push
mov
scas
cld
jle
aam
pop
movsb
btc
push
movsl
fnstcw
push
mov
int
test
or
les
lea
loopne
nop
call
inc
jl
es
repnz
push
pop
push
pushf
int
and
popa
das
or
test
int
pop
xchg
sti
in
mov
ror
sbb
fcmove
sbb
mov
xor
adc
inc
mov
push
lcall
aam
sahf
mov
jnp
ret
sbb
and
mov
pushf
sbb
cmp
push
xchg
add
js
mov
pop
daa
in
aam
xchg
rcll
imul
inc
mov
insl
addl
xchg
in
rolb
push
xor
push
aas
adc
mov
jb
pop
add
push
daa
jl
in
jae
test
out
xor
mov
call
fisubs
sbb
cmp
adc
out
leave
mov
cmpsl
mov
push
loopne
jmp
shrl
andb
insl
mov
xchg
das
inc
xchg
aad
jno
adc
ds
cmc
mov
xor
cmpsb
jno
mov
inc
mov
ss
cmpsb
mov
mov
add
sbbb
sbb
jge
inc
push
pop
mov
jbe
dec
xchg
dec
fwait
mov
mov
stos
sbb
nop
dec
addr16
pop
ret
and
add
cmp
adc
iret
ret
and
mov
xchg
lods
mov
cmp
shlb
pop
add
popa
jb
inc
mov
cmp
mov
sub
xchg
outsb
and
inc
call
mov
pop
xorl
push
pop
push
mov
ja
test
dec
in
jmp
xor
lret
lds
mov
out
aas
cmpsb
xchg
lahf
in
pop
insl
addr16
ds
addr16
add
pause
jg
xchg
add
clc
dec
push
lock
push
in
shll
loop
imul
push
inc
mov
xor
fwait
xlat
pop
stos
fldenv
add
jno
xor
push
push
jg
out
cld
or
pop
das
out
push
or
add
mov
jecxz
in
sbb
pop
sbb
mov
stos
adc
cmp
adc
cmp
jae
scas
test
cmp
fisttpl
pop
popa
repnz
mull
inc
xchg
shl
add
inc
gs
jo
outsb
inc
imul
add
lret
and
add
xchg
inc
mov
pushf
mov
sub
mov
mov
cmp
insl
lds
lret
rcrl
faddl
dec
into
scas
xor
dec
rep
lea
popa
jae
addl
lcall
clc
lahf
xor
jp
sub
std
or
outsl
negl
cltd
out
push
xchg
jmp
leave
adc
mov
push
outsb
mov
insb
inc
mov
push
gs
or
pop
mov
inc
pop
xor
mull
movsl
sub
mov
stos
add
movsl
ds
aam
xchg
fldt
push
and
and
jmp
shrl
sar
loopne
clc
mov
in
out
jecxz
or
sbb
inc
jecxz
sbb
jne
add
cmc
in
pop
bound
lret
nop
out
pop
jbe
and
pop
inc
xchg
clc
movl
adc
pop
mov
divl
inc
jg
lds
xchg
xchg
mov
idiv
shrl
inc
adc
jno
lret
cmc
jno
mov
push
int3
jns
xor
out
sbbl
sbb
fiadds
sbb
jae
je
arpl
pop
ret
sbb
xlat
add
mov
pop
aam
and
idivb
sbb
sub
cltd
jo
out
mov
pop
into
push
sahf
mov
and
and
sbb
xor
adc
sbb
jmp
in
daa
fiaddl
lock
lods
in
dec
adcb
outsl
cmpsl
adc
mov
mov
mov
daa
push
cwtl
lret
xor
outsb
scas
cli
inc
push
push
jb
out
mov
xor
jl
aas
inc
jecxz
addr16
leave
push
jne
xlat
fwait
add
pop
popf
in
mov
icebp
shl
int
cli
call
in
add
stos
mov
inc
or
pop
xchg
inc
dec
sahf
cld
in
stc
rcr
pop
jnp
outsb
mov
divb
sbb
pop
sti
dec
ss
sub
inc
or
sbb
xor
cwtl
lock
inc
xchg
sbb
subl
add
adc
push
pushf
push
mov
pop
jae
xor
or
push
cmpsl
sahf
add
jle
pop
fcomps
push
imul
mov
xor
mov
decl
das
nop
hlt
push
inc
pop
mov
movzbl
push
jmp
push
bound
dec
mov
cmp
mov
adc
fcoml
repz
cmp
mov
scas
lahf
jle
hlt
aad
out
jg
mov
pop
mov
or
jmp
fstl
inc
sbb
into
fildll
cmp
sub
or
mov
cmpb
out
out
inc
in
sbb
mov
std
xchg
das
add
mov
jge
xchg
or
aam
rorl
icebp
add
xchg
cwtl
pop
fcoml
movsl
jecxz
jg
and
fnstcw
xchg
add
adc
jmp
jg
jmp
call
sub
movsb
inc
mov
jne
sbb
xchg
aad
inc
and
mov
or
outsb
mov
sub
and
add
loope
outsb
shrb
stos
jl
sub
jge
cmc
sub
int3
adc
out
enter
fsubl
jnp
add
mov
sbb
cmp
call
xchg
mov
jge
aad
pop
mov
or
add
je
clc
cmp
leave
sbb
push
cmpsb
or
xchg
pop
inc
mov
xchg
flds
pop
lea
aaa
push
mov
push
or
lods
or
pushf
and
inc
xor
sbb
push
dec
loop
xor
repz
mov
pop
in
cld
movsb
loopne
jbe
xorl
fistpll
adc
sbb
sub
lods
push
cmp
cmp
add
jbe
fwait
loope
dec
cmpsb
in
bt
cmp
push
pusha
lea
je
clc
cmp
push
call
shr
dec
mov
mov
call
not
pusha
not
mov
lea
push
pusha
inc
mov
lea
pusha
dec
push
dec
mov
pushf
call
cmp
jl
mov
xor
sti
daa
aas
xchg
lret
pop
jnp
mov
or
mov
xor
mov
adc
and
mov
xor
out
loop
sbb
mov
fnstenv
cmpsb
out
loopne
mov
leave
sub
pop
xchg
test
adc
das
mov
jge
push
mov
inc
pop
test
cmp
int3
push
jo
les
jns
xor
mov
jmp
int3
movsb
jae
mov
pusha
mov
cld
cmp
int3
xor
lods
bound
pop
clc
aad
push
ja
mov
int
fmull
adc
jnp
add
int3
add
lods
addb
sub
sbb
sahf
xor
cmpsl
mov
inc
mov
pop
or
into
or
mov
fsubrl
insl
mov
es
or
push
test
shll
movsb
pop
dec
mov
inc
testl
inc
mov
sbb
dec
mov
mov
mov
pop
pop
js
push
dec
mov
fdivrl
fdivs
test
inc
mov
cltd
and
xor
or
add
adc
push
sbb
dec
testb
mov
push
lcall
nop
inc
cmpsl
in
add
frstor
repnz
push
mov
sbb
in
sub
mov
push
xchg
imul
pop
adc
sahf
mov
test
xchg
or
cmp
cmp
pushf
mov
push
sub
jmp
mov
push
lea
jmp
and
lods
dec
mov
addl
aas
pop
repnz
dec
xchg
cmp
jb
stos
sti
sub
rolb
xor
mov
pop
jecxz
lret
insl
imul
and
bound
cmp
and
adcb
lret
fisttpll
add
outsb
pop
inc
cltd
rcll
inc
mov
adc
loop
push
test
test
adc
imul
bnd
loop
jp
push
xchg
sbb
dec
lahf
ja
int
loop
add
push
movsb
cmpsl
xchg
adc
test
sbb
orl
sti
outsb
xchg
dec
adc
enter
stos
pop
in
imul
push
jbe
aam
jge
addr16
push
dec
int3
test
xor
pavgw
fiadds
in
int3
mov
cmpsb
aaa
or
dec
fs
cmpsl
jecxz
repz
lret
daa
pop
lret
in
dec
mov
gs
jmp
dec
popa
ret
dec
and
adc
rorb
lea
sub
xchg
pop
lea
push
dec
testb
fisubs
and
sub
insl
insl
mov
inc
imulb
dec
jl
jle
adc
jge
sub
cmpsl
in
shll
xchg
xchg
stc
xor
js
and
or
sub
in
add
push
es
lret
cmp
xchg
jmp
mov
cld
outsl
push
push
xchg
into
jmp
mov
dec
push
loopne
pop
pushf
add
pop
stc
cmp
mov
jmp
inc
ss
insl
push
push
cmp
pop
std
and
sub
fdivrl
pop
cmp
adc
cwtl
test
push
push
push
mov
lret
jns
mov
sti
mov
cmp
stos
jmp
pop
lret
jmp
pop
repz
sbb
int3
rol
and
repnz
dec
mov
xchg
int3
or
inc
jl
add
push
lret
jo
cmpsl
ss
jbe
xor
xor
out
scas
pop
aaa
ja
and
pop
mov
retw
sti
hlt
add
aaa
mov
scas
stc
shrb
cmp
mov
xor
mov
lret
rclb
pop
mov
sbb
mov
lret
bound
lods
cmp
dec
mov
roll
mov
flds
sub
pop
mov
jns
stos
andl
fsubrl
pop
jne
sub
imull
cmp
out
pop
cltd
pop
dec
int
pusha
dec
mov
and
popa
in
cmpl
inc
pop
ret
test
ljmp
dec
je
daa
cmpsb
mov
sub
das
je
sub
insl
add
xor
data16
es
ja
push
dec
icebp
sbb
dec
pop
andl
ljmp
shll
arpl
or
das
mov
inc
popa
xchg
in
cmp
andl
inc
jmp
dec
pop
or
hlt
inc
pop
mov
add
pushf
in
inc
and
and
dec
jnp
popa
faddl
dec
data16
push
fidivrs
jecxz
movsb
or
jne
jnp
dec
adc
insl
pushf
fcoms
call
cmp
mov
add
icebp
mov
cmpsl
fldl
mov
aas
arpl
mov
out
imulb
sub
add
mov
ja
fisubrl
mov
roll
xchg
fpatan
dec
iret
add
dec
and
negl
dec
mov
and
dec
mov
sahf
push
ss
mov
and
ss
lcall
xchg
cmc
loope
jp
fcmovne
cmp
popa
lds
xor
out
and
push
jecxz
in
loopne
fs
fdivr
mov
es
xor
push
jnp
cmpsl
push
adc
push
bound
sbb
mov
xchg
mov
lds
push
mov
mov
fcomps
enter
rclb
sub
cmp
stc
fidivl
jle
xor
test
and
aad
cld
js
std
pop
mov
out
data16
xchg
movd
sbb
loopne
lret
int3
xor
cwtl
test
push
jecxz
pop
sahf
xchg
je
lea
mov
xor
shlb
mov
fsubs
sub
cmp
mov
in
xor
rorl
ja
iret
push
xchg
lcall
pop
mov
cmp
mov
mov
xchg
push
jb,pt
pop
mov
xor
loop
cmpsb
pop
loope
xor
popa
push
xor
hlt
cmc
xor
jbe
add
cmpb
pop
cmp
imul
icebp
add
pop
repz
mov
sbb
adc
push
scas
sbb
lret
lods
add
nop
pop
out
xor
inc
cmp
sbb
or
push
push
pop
lcall
xor
mov
es
stos
idivb
mov
dec
cmp
out
jnp
jne
shlb
jns
pop
adc
int
cld
shrl
cli
cmpsl
cmc
scas
xor
fucomp
or
push
test
sub
andnps
enter
xlat
inc
xor
cmc
push
cli
dec
and
sub
call
loop
cmc
push
adc
in
sar
ljmp
stos
jge
sub
xlat
inc
jg
inc
cltd
jmp
cmp
push
xchg
sub
and
test
imul
mov
jno
fstpt
mov
cmp
push
leave
aaa
xor
test
sbb
and
addr16
daa
into
ss
cmp
lret
add
fistpl
jnp
or
inc
fadd
xor
cs
test
dec
std
dec
mov
shrb
sub
mov
xor
dec
mov
push
shll
sbb
loopne
ss
movsb
push
pop
mov
popf
jno
adc
add
pop
into
or
mov
add
and
adc
cmp
outsb
inc
jmp
arpl
or
ja
add
ret
sub
xor
mov
mov
push
jo
rep
sub
in
insl
lods
cwtl
add
loopne
mov
sbb
pushf
out
dec
lods
roll
stc
pop
cmp
into
cltd
push
mov
adcb
push
lcall
adc
out
xchg
cmp
push
enter
inc
mov
int
or
add
inc
popf
or
sahf
mov
jo
and
pusha
sbb
jb
pop
cmp
jecxz
mov
jecxz
adc
adc
push
ss
repnz
rcll
adc
sbb
test
cmp
cmp
push
test
mov
out
pusha
sub
xorb
dec
or
jl
xchg
mov
imul
cmp
icebp
inc
sub
gs
leave
mov
xchg
rolb
pop
aas
adc
add
xor
xchg
hlt
sub
pusha
sbb
je
and
sbb
test
call
rclb
negl
sti
outsl
adcl
mov
sub
adc
add
pop
addb
pusha
dec
mov
push
pushf
not
jmp
pushl
push
jmp
pusha
pusha
ror
call
pusha
cmp
push
mov
push
mov
scas
push
jp
orl
neg
lret
fwait
in
push
scas
les
pop
mov
data16
pop
lock
fs
lret
cmp
dec
popf
out
std
or
and
out
mov
mov
jge
mov
mov
adc
pop
mov
mov
cwtl
pop
cli
jecxz
leave
mov
popf
cmovns
cmc
pop
jge
fnstsw
pop
jno
popf
rcrb
push
mov
sbb
xlat
pop
sbb
ror
lods
adc
stos
mov
sub
aaa
fisubs
dec
mov
or
pop
adc
std
fld
mov
sahf
loope
mov
jae
push
and
push
mov
mov
sub
or
push
mov
pushf
pop
pop
stos
fld
pop
sub
jns
pop
inc
rolb
movsb
add
nop
jl
idivb
in
popl
addr16
jle,pt
sbb
sahf
cmova
mov
push
add
insb
fldcw
xor
jb
fcoml
xor
and
jo
fcmovnbe
cmp
das
clc
aam
repz
mov
jae
leave
dec
pop
movsl
repz
xchg
xchg
test
or
insb
lahf
dec
lcall
gs
add
das
push
xchg
loope
icebp
or
out
push
mov
pop
cmpsb
fidivrs
xchg
cmp
stc
xlat
pop
cmpsl
xor
cwtl
jo
lcall
in
sbb
mov
inc
arpl
divl
stos
das
or
mov
ss
je
mov
movsb
mov
dec
test
sub
int
bound
jp
xor
add
sbb
outsb
enter
pop
xchg
testb
mov
in
sbb
mov
adc
js
repz
std
aas
movsl
ret
adc
jecxz
dec
or
push
jne
xor
push
mov
movw
inc
push
not
cmp
pushl
call
btr
shl
test
mov
cmc
and
clc
add
pusha
push
lea
jmp
jmp
lea
je
clc
call
ljmp
adc
dec
imul
adc
mov
dec
icebp
sub
jns
push
inc
hlt
mov
fnstsw
stc
mov
mov
ud1
lods
push
cmp
inc
imul
xchg
and
rcr
outsl
es
cmpb
push
scas
or
cltd
cmp
push
test
inc
test
in
jge
fdivrl
ljmp
lret
add
xor
fdivr
pop
xchg
in
jo
hlt
or
lea
dec
divb
fiadds
scas
jnp
cmpb
lcall
mov
cmpsb
in
jmp
incb
push
roll
js
les
jg
jno
jmp
pop
scas
xchg
inc
cmp
mov
in
jmp
mov
pop
fbstp
mov
xchg
iret
cmpsl
fistps
pop
pop
pop
pusha
dec
in
das
add
fdivrs
mov
xchg
sbb
mov
sbb
addr16
push
mov
sbb
outsl
mov
push
xchg
fisttps
dec
mov
and
add
inc
cmp
mov
jns
addr16
testl
leave
mov
leave
cmpb
ret
mov
xlat
sbb
jb
or
repz
add
xchg
xor
imul
pop
sbb
test
lret
test
lds
arpl
int
stos
mov
lcall
int3
cmp
pop
fcompl
pop
xchg
in
lret
xor
add
add
jbe
add
add
add
add
add
add
add
clc
test
add
add
add
xor
add
add
jbe
xor
add
add
insl
shlb
add
add
add
add
xor
add
add
push
loop
add
add
add
xor
add
add
out
fidivl
add
add
add
xor
add
add
mov
add
add
jp
add
add
add
add
add
xor
add
add
aad
xor
idivb
xor
add
xor
push
add
add
pusha
xor
add
add
add
add
aas
notb
lea
cmc
inc
xchg
mov
adc
test
outsl
push
outsl
fildl
sbb
ds
jg
cmp
mov
enter
test
adc
in
pop
push
testb
push
add
adcl
sbb
scas
stc
kandw
leave
addr16
test
adc
add
adc
iret
mov
mov
dec
jns
cltd
dec
push
mov
aas
pop
sti
aas
imul
jg
xlat
sub
sbb
xchg
cmp
out
rol
or
mov
and
inc
push
popf
mov
mov
fldenv
out
loop
ffreep
sub
in
movsb
or
clc
jle
ds
cmp
push
mov
cmpl
mov
jmp
xchg
push
jge
or
jns
enter
orl
add
stos
push
mov
arpl
out
mov
mov
inc
leave
sbb
cmpsb
icebp
cli
dec
filds
shll
mov
push
or
aaa
inc
cmpsl
cmp
xor
cmc
fdivrl
test
cmp
cs
int3
stos
cld
loope
sbb
adc
repnz
outsl
adcl
or
jecxz
orb
push
sub
js
mov
adc
mov
mov
mov
subb
pop
je
mov
mov
in
push
jl
leave
jmp
push
mov
or
movsl
adc
cltd
jbe
cmpsb
movsb
in
popf
pop
pop
lahf
rep
sbbb
xchg
cmpsb
lret
sub
pushf
shl
out
jb
js
adc
out
dec
sahf
jbe
lahf
jl
test
popf
and
mov
push
fwait
in
pop
jg
pop
je
int
icebp
cltd
adc
cmp
add
jo
mov
neg
icebp
shlb
adc
jmp
jp
fldcw
pusha
out
jbe
insb
sahf
mov
sbb
addr16
mov
mov
xchg
ficomps
data16
ret
mov
jl
fwait
jbe
lods
cld
dec
test
add
test
add
xchg
sbb
icebp
jp
jge
sbb
sub
out
cmpsb
dec
push
jns
stos
aaa
xchg
or
cmp
stc
mov
push
xorb
push
pusha
outsb
cli
int
sbb
xor
adc
orl
adc
in
sub
pop
cmp
popa
in
ja
dec
mov
fists
mov
adc
mov
dec
cltd
fnstenv
lcall
repnz
jnp
xchg
cmp
test
xor
shll
sar
cmp
push
and
dec
cwtl
loope
add
xchg
out
push
out
pop
push
xor
dec
add
cwtl
cmp
frstor
mov
aad
dec
cmpsl
pusha
pop
mov
fisubrs
cmp
stos
xor
repz
adc
sbb
sub
sbb
cmpsl
ficoml
ljmp
add
movsb
mov
stos
sbb
add
ror
pusha
lea
jne
pushf
mov
pusha
pusha
movb
add
stc
pushl
clc
movzwl
add
shl
inc
mov
stc
add
test
call
mov
pusha
pushf
pushf
pushl
pushl
ret
shl
scas
pop
mov
and
in
popa
test
sub
rorl
ja
xchg
imul
jg
clc
sub
cwtl
clc
fs
mov
int
loope
dec
mov
inc
push
loop
popf
jp
lods
cmpsl
add
mov
stos
mov
neg
stc
inc
adc
lcall
shlb
jae
cmpsb
add
cli
push
stos
faddl
add
xor
pop
inc
inc
push
and
cmp
or
mov
and
fmuls
stos
clc
and
dec
into
xor
aaa
cmc
xor
int3
or
dec
pop
xchg
lret
push
aas
scas
and
jbe
inc
adc
dec
movsb
jnp
daa
dec
mov
sub
and
or
push
push
dec
mov
and
mov
jp
and
push
xchg
ja
repz
and
dec
mov
pop
push
xchg
sbb
pushf
aam
mov
cli
aad
rclb
mov
sbb
push
fnstenv
inc
lods
cmp
sbb
nop
pop
mov
repz
sub
push
mov
sti
dec
sbb
enter
mov
repnz
pop
mov
push
cmpsl
fbstp
jbe
daa
test
push
adc
call
and
mov
shrl
jne
inc
cs
aad
call
xchg
pop
mov
ljmp
jo
push
rclb
sahf
and
gs
and
aaa
xchg
jmp
mov
mov
inc
popa
mov
cmp
push
mov
rorl
mov
cmp
ljmp
out
mov
cmpsb
sbb
push
dec
movsb
repnz
cmpsb
pop
mov
pop
shll
mov
iret
leave
sub
sahf
subb
test
sub
int
xchg
cmp
decb
ja
and
jne
pop
sbb
loope
in
cmc
push
leave
jne
aad
mov
call
fisttpll
into
test
cmc
ljmp
sbb
icebp
arpl
out
dec
cmpsl
or
mov
pop
adc
sbb
xchg
pop
mov
xlat
sbb
testl
movsb
out
xchg
enter
adc
add
jge
cmp
or
cmpsb
sub
jae
ret
push
loop
leave
sbb
cld
enter
dec
inc
pop
pop
and
fsubrs
imul
sahf
xchg
mov
divb
ljmp
xchg
jno
mov
popa
insb
push
out
push
addr16
cli
push
sub
mov
push
bound
and
cmp
in
jo
cld
movsb
mov
adc
mov
mov
ret
sub
mull
add
arpl
test
rcrl
or
out
test
fdivr
inc
xchg
push
pop
lret
adc
adc
inc
pop
in
leave
mul
popa
pop
ss
ja
mov
push
dec
pop
mov
mov
jne
ret
adc
fcompp
cltd
lods
mov
pop
xlat
rdtsc
mov
dec
jbe
scas
jmp
push
mov
dec
pop
mov
das
xchg
mov
xor
mov
lcall
lea
add
cmp
cli
dec
xchg
push
sarb
xchg
int3
lods
arpl
mov
mov
cmp
adc
dec
bound
sahf
repnz
pop
inc
ljmp
push
lock
shlb
cltd
int3
push
lds
ljmp
sbb
mov
xlat
pop
lods
mov
lock
mov
cmpb
xchg
ret
mov
xor
fdivrs
stc
sub
ret
jnp
pop
mov
daa
pop
lret
incl
cmpsl
icebp
mov
test
jae
bound
out
jle
or
shll
movsb
sbb
sar
mov
sbb
xchg
mov
movsb
add
insl
lods
test
sbb
mov
push
fwait
mov
mov
lock
jo
subb
out
cwtl
fisubrs
stos
xor
or
repnz
jmp
adc
add
cmpb
mov
and
xor
pop
mov
jp
testb
add
adc
mov
add
cmp
cli
adc
add
cmp
mov
lods
or
sbb
pop
mov
inc
imull
test
xchg
push
int
mov
mov
test
sahf
es
mov
and
loopne
pusha
mov
iret
ja
mov
jmp
pushf
lea
ja
jmp
stos
int3
xchg
lea
nop
clc
pop
mov
je
lock
and
adc
ja
dec
mov
negb
push
fistps
and
int3
out
sbb
xor
jmp
lcall
fucom
sahf
ja
enter
pop
sti
incb
xor
cmpsb
mov
icebp
jecxz
mov
inc
jmp
pop
subl
sti
mov
rolb
push
add
mov
xchg
jge
shlb
jno
jmp
push
popf
jmp
add
sbb
dec
pop
push
pop
mov
out
jae
sti
inc
xchg
cmpsl
repz
push
sbbb
jns
loopne
push
inc
adc
xchg
mov
fnsave
sub
aam
xchg
pop
mov
mov
mov
fnstsw
mov
outsb
mov
iret
pop
pop
add
xlat
jo
xor
call
gs
in
add
stc
cmp
mov
outsl
fildl
int3
and
out
or
inc
inc
push
push
xor
cs
insb
add
and
pop
mov
mov
adc
imul
cmpb
adc
into
jp
adc
nop
int3
and
call
sbb
lret
repnz
or
add
add
jle
cmp
scas
xchg
insl
and
cmp
mov
xor
mov
dec
xor
lods
add
push
xchg
xlat
adc
xor
cmp
popf
shrb
pop
into
test
stc
aaa
xchg
pop
xor
mov
xor
into
xchg
ret
add
lods
lock
mov
andb
jne
jne
add
add
es
leave
mov
sbb
es
push
pop
and
scas
sbb
sub
imul
ja
or
cmpsl
jno
xchg
mov
fadds
les
mov
lds
and
push
jl
lods
lcall
xchg
or
mov
mov
mov
mov
xor
xchg
int3
inc
inc
aad
fcmovb
fs
loopne
pop
dec
fiadds
stc
call
mov
movsl
movsb
sbb
mov
xor
stos
pop
xor
cmp
aam
out
insl
andb
roll
ljmp
mov
sbb
dec
add
sub
movl
outsb
mov
std
mov
push
lret
xchg
adc
jae
mov
cmp
push
pop
sbb
dec
sub
iret
sub
push
arpl
lret
ficoms
clc
out
xchg
inc
movsl
mov
sti
xor
daa
arpl
or
adc
mov
aad
frstor
out
xlat
insl
xchg
loope
movb
addr16
lds
mov
push
subl
sti
sub
out
push
pop
xor
add
xor
test
dec
jno
mov
add
aad
sub
jb
aam
orl
fisubs
loopne
je
adc
mov
add
pop
fsubl
add
cli
jmp
cmpsb
mov
adc
pop
push
ja
or
fidivs
mov
xor
adc
mov
sbb
addr16
push
outsl
pushf
aas
cli
shrl
in
je
aam
cltd
emms
je
outsb
inc
daa
xor
and
push
sbb
shrl
ror
mov
aad
insb
mov
out
pop
jnp
test
aaa
adc
movsb
stos
movsb
je
sti
adc
loopne
add
xor
aaa
test
scas
shr
sub
int
dec
daa
xchg
dec
cmpsb
mov
fisttps
push
imul
arpl
pop
aas
adc
iret
mov
pusha
or
iret
lods
xor
or
lea
mov
cmpsl
ret
std
inc
cmp
dec
loope
loope
push
jo
shrl
jb
out
pop
dec
mov
aad
mov
out
and
loopne
pop
ja
add
inc
xor
mov
and
fisubs
hlt
mov
xchg
xchg
test
andl
adc
mov
sub
cmpsl
scas
xchg
adc
mov
pushf
call
gs
add
push
sahf
mov
xchg
sub
or
fdivrs
emms
push
daa
scas
lret
add
ret
xchg
lahf
mov
add
push
das
xchg
ret
sti
add
mov
push
mov
inc
outsb
mov
mov
ret
mulps
bound
sub
fs
pop
movsl
sti
push
inc
js
mov
adc
orb
xor
sbb
loop
repz
mov
pusha
rorl
mov
mov
mov
pushf
push
push
lea
jmp
pop
iret
cmpsb
cmpsl
mov
inc
jne
loope
pop
cltd
in
jno
sub
inc
aas
stos
inc
adc
outsb
push
insl
lret
cmp
in
add
mov
fadd
and
mov
cs
fs
pop
insl
pusha
ret
sbb
enter
jo
xor
icebp
xchg
repnz
sbb
orl
fwait
jo
enter
push
xchg
in
jp
frstor
or
popa
jnp
sti
cmp
adc
push
inc
mov
les
add
testb
push
fisubs
bound
lods
xchg
cmp
cmp
mov
push
dec
cmc
jmp
and
out
mov
std
test
cmp
xchg
ljmp
jl
rol
and
in
mov
out
lahf
cwtl
andb
call
std
negb
fstps
push
dec
fdiv
cmc
std
and
mov
popf
jmp
dec
sbb
mov
pop
cmp
icebp
pop
jb
rcll
jae
jecxz
addr16
out
xor
pop
inc
and
inc
ss
mov
dec
mov
cli
cmp
or
mov
fistpl
int3
ljmp
std
xor
iret
push
jmp
in
add
sbb
cmpsb
lock
movl
pop
stc
jge
es
xor
jne
xor
xchg
cmp
aam
popa
sbb
and
loop
xor
jne
aaa
lods
pop
push
ret
pop
lods
jne
clc
inc
fwait
mov
push
jl
in
cs
repnz
push
inc
jbe
xchg
je
out
and
scas
mov
jmp
roll
gs
jp
cmp
sub
and
push
or
xor
cmp
push
shlb
mov
adc
das
lahf
push
and
push
insb
cli
xlat
scas
mov
ss
mov
cmpb
sbbb
dec
sub
in
push
mov
ds
ret
sub
lret
fs
sub
jge
pop
push
es
out
mov
xlat
in
and
test
push
je
sbb
rcl
fs
rcr
pop
inc
or
pop
fwait
std
push
leave
adc
es
in
add
fcompl
mov
mov
stos
push
cs
mulb
outsb
mov
rorb
fucom
xchg
pop
mov
outsb
enter
std
jnp
jl
aad
sub
xchg
xor
push
das
sahf
cmpb
cmp
sbb
ret
test
fisubl
pop
sahf
jmp
test
jmp
fiaddl
fs
push
cmpsb
fwait
mov
test
aas
imul
pusha
cwtl
int3
and
lock
and
scas
out
sub
mov
sbb
jmp
loopne
clc
insl
sub
rorb
inc
push
js
adc
xchg
pop
push
mov
push
cmp
adc
call
test
lea
fstps
rclb
lret
ret
add
push
aad
scas
movsl
loope
fdivl
rolb
jge
inc
rcrb
cmc
cld
add
outsl
cld
iret
inc
xor
sar
gs
cmp
out
shll
mov
das
popf
fldt
pop
dec
or
out
icebp
cmp
outsl
mov
lea
call
pusha
lea
jbe
mov
pushf
pusha
movb
mov
lea
jmp
push
lock
std
std
notl
ret
ja
insb
cmp
frstor
bound
adc
pop
aam
xor
cs
int3
lods
jge
sbb
and
mov
pop
push
lret
add
out
xlat
es
test
cmp
mov
inc
div
mov
stos
hlt
mov
mov
dec
mov
clc
les
xor
jmp
sbb
inc
inc
call
lods
mov
mov
sbb
adcl
mov
imul
iret
pop
sbb
dec
data16
fxtract
sbb
jmp
out
and
je
repnz
push
push
adc
push
cs
xor
divl
add
jne
dec
call
push
mov
jns
lret
jno
bnd
push
aaa
shl
shrb
pop
dec
arpl
repz
call
inc
ret
lods
mov
mov
push
xchg
pop
lods
lea
pop
loop
pop
pop
movsl
aad
push
stos
out
lcall
adc
dec
pop
mov
jmp
lea
loope
testb
mov
into
and
mov
ret
cmpsl
clc
xor
and
leave
xor
ljmp
loopne
cwtl
mov
sub
mov
sbb
lock
les
mov
jo
clc
dec
add
jl
pushw
cmc
sti
aam
mov
addr16
and
jbe
jg
rorb
pop
cmpsl
pusha
in
xor
test
add
cmp
in
jo
add
imul
loopne
rorl
add
jge
rcrl
decl
mov
mov
sbb
cwtl
je
sub
jle
fcmovnbe
or
shrl
fwait
loope
popa
movl
xchg
popf
add
je
push
rep
movzbl
mov
movb
pushf
pushf
pusha
lea
jmp
lea
ja
cmc
cmc
clc
imul
pusha
add
movw
pusha
pushf
lea
jmp
es
into
scas
mov
scas
pop
push
xchg
aas
jne
cmp
push
mov
cmp
popf
inc
aad
jns
in
stos
pop
out
xor
lea
dec
mov
cmpl
movsb
add
mov
xor
sbb
pop
lock
shrl
icebp
add
movsl
and
scas
push
pop
arpl
jle
add
mov
sbb
jl
clc
cs
out
insb
rcrb
das
xchg
mov
xchg
jg
scas
mov
leave
sbb
sub
jmp
mov
jbe
adc
and
inc
xchg
popa
lds
in
cmp
xor
add
ret
daa
jmp
add
dec
inc
xchg
test
sbb
xor
mov
mov
mov
jg
jp
sbb
mov
xor
lds
mov
orb
adc
add
jae
pop
push
add
lret
jle
out
xor
lret
aam
xchg
pop
jge
aaa
fidivs
fs
shrl
dec
mov
sbb
in
or
lock
repnz
stos
incb
arpl
pop
push
xchg
xor
inc
popf
mov
mov
and
movb
dec
addb
add
ret
movsl
pop
xchg
loopne
jle
push
mov
std
mov
iret
aaa
das
jns
sub
sbb
in
out
mov
push
dec
shll
fmul
adc
in
sti
js
shrb
test
jge
xchg
and
mov
inc
movsb
inc
iret
rcl
push
inc
in
and
xor
scas
orb
mov
fisubrs
mov
dec
adc
fsubl
fsubs
clc
idivl
jmp
insl
mov
xor
xchg
add
outsl
xor
sub
movl
in
cmp
xor
lds
repnz
sbbb
sbb
inc
sahf
xchg
in
push
pop
lret
jmp
xchg
push
sarl
insb
xchg
cmc
mov
clc
cmp
add
call
movw
lea
jb
clc
bt
pushf
cmp
movb
lea
jae
dec
stc
sar
mov
rcl
sbb
bsr
mov
push
not
rcr
mov
cmp
movb
clc
xor
call
mov
shrl
call
nop
mov
and
cmp
std
cmp
inc
jge
cmp
je
and
jbe
or
fbstp
test
pop
loopne
sbb
and
inc
mov
jle
sub
or
pop
scas
clc
ja
popf
fisubs
call
test
cmpl
cmp
cmpl
inc
push
js
or
in
adc
fdivrs
pop
rcpps
pushf
rclb
rcrb
add
mov
xor
push
loopne
mov
pop
mov
inc
bound
sub
into
incb
add
add
add
add
add
cmc
xor
mov
xor
movsl
mov
xor
mov
add
add
add
add
add
xor
mov
add
xor
add
cmc
xor
shlb
xor
and
xor
pushf
cmc
xor
fdivs
xor
dec
aaa
xor
movsb
cmc
xor
loopne
xor
dec
xor
lods
cmc
xor
call
add
add
add
add
xchg
xor
mov
xor
lock
add
cmc
xor
clc
xor
add
popa
xor
cmc
xor
add
xor
xor
cmc
xor
or
xor
popf
or
add
cmc
xor
adc
xor
dec
shll
fdiv
xor
sbb
xor
add
cmc
xor
and
xor
ret
add
cmc
xor
sub
xor
mov
xor
hlt
cmc
xor
xor
xor
dec
aaa
xor
cld
cmc
xor
cmp
xor
and
xor
add
xor
add
call
push
into
jns
mov
loop
cmp
pop
dec
mov
dec
inc
rorl
and
mov
dec
or
pop
pop
xchg
ljmp
add
sub
cmp
cmpsb
in
push
xorl
pop
xchg
call
pop
pop
jbe
adc
insl
sarl
jl
or
xor
movsl
xchg
sbb
shlb
ret
inc
push
fbld
xlat
and
sbbb
sub
mov
pop
add
call
dec
xchg
sbb
mov
jle
ja
into
jno
sub
xchg
andb
out
push
data16
push
jbe,pt
push
inc
xchg
ljmp
fsubrs
les
sub
hlt
lods
imul
push
lahf
call
or
enter
mov
xlat
sub
xor
shlb
jne
arpl
in
sarl
push
ret
mov
push
push
cmp
aaa
pop
and
leave
xchg
adc
lea
fadds
mov
cmp
and
je
lret
xor
mov
mov
or
sbb
inc
test
jnp
test
popf
lret
inc
mov
jg
insl
pop
inc
push
push
stc
xor
inc
fld
fwait
xchg
ss
xor
inc
xor
push
ret
or
call
sbb
imul
lcall
xor
repnz
in
pushaw
sbb
mov
sub
fimull
aaa
xchg
imul
xchg
jnp
mov
ds
xor
fcomps
std
adc
in
xlat
jne
jb
sbb
shlb
sahf
add
jg
fwait
movsb
dec
xchg
fcoml
mov
jne
pop
add
enter
push
mov
pop
inc
cmp
cmp
xchg
pop
sub
or
push
xor
push
dec
pop
inc
pop
jns
pop
cld
sti
mov
adc
jmp
cmc
punpckhwd
or
mov
inc
test
push
jl
movl
push
lea
jmp
add
inc
jb
ja
imul
cmp
push
pusha
push
jmp
pusha
push
add
mov
mov
add
jae
xchg
push
mov
mov
jo
push
xchg
mov
pop
jge
inc
lahf
out
testb
or
andb
xor
dec
movsl
cmc
fbstp
pop
xchg
loope
jmp
popa
jb
clc
inc
adc
sti
inc
add
fidivl
loope
stc
fidivl
enter
xor
call
stc
xor
jne
scas
icebp
out
sub
mov
and
pop
imul
ret
jecxz
mov
dec
cwtl
lods
in
cmp
pop
in
sub
jne
out
or
je
push
dec
inc
lea
sub
sbb
subb
xchg
push
inc
cld
ljmp
mov
mov
insl
addr16
loop
popf
inc
cmpsl
jecxz
out
inc
dec
stos
adcb
mov
dec
mov
adc
loope
lock
hlt
pop
dec
loope
out
push
or
fistl
xor
sti
xor
mov
stos
out
lahf
mov
sbb
adc
lock
add
pop
dec
loope
cmp
dec
mov
adc
inc
push
fidivrs
pusha
adcb
les
push
jp
adc
in
fcomi
sarb
adc
pop
int3
mov
imul
mull
or
dec
xchg
sti
jmp
cld
pop
imul
add
inc
call
lock
xor
mov
jns
mov
mov
data16
hlt
iret
das
pop
cs
inc
push
pop
mov
mov
movsb
add
push
cmpsl
out
das
arpl
add
stos
xlat
out
jae
cmc
jl
adc
dec
jae
mov
aad
sti
cmp
inc
mov
rcrl
jge
push
xchg
aam
mov
cmpsb
mov
leave
xchg
cmpsb
or
insb
stc
pop
xchg
rcll
int
push
dec
inc
int3
test
mull
dec
xchg
jmp
add
popf
loope
lahf
jmp
inc
mov
pop
mov
jg
adc
rorb
fistpll
fwait
pop
cmp
out
das
ja
mov
fdivp
mov
mov
sub
outsl
nop
test
shlb
pop
push
inc
jb
shrl
mov
or
dec
push
jmp
pop
fs
sub
push
pop
ja
out
mov
in
dec
pusha
aaa
adcl
sbb
loop
jbe
push
mov
add
sar
xchg
inc
addl
dec
sbb
mov
mov
test
hlt
cmp
and
into
pop
std
pop
pop
sbb
cmp
xlat
insl
cmp
inc
mov
and
or
popf
das
rorl
push
decb
dec
aas
cld
bound
das
and
std
test
test
ljmp
inc
xor
pop
xor
or
sbb
loop
scas
jp
adc
push
jo
and
lcall
out
sub
add
mov
lea
in
lods
std
adc
cltd
lds
pop
xchg
sub
cmp
inc
push
bound
adc
jmp
mov
sbb
shlb
pop
stos
sbb
loop
jp
xchg
in
dec
mov
push
mov
xchg
jno
pop
mov
enter
das
js
mov
inc
sub
popa
movsl
out
repnz
sub
dec
lods
das
je
test
repz
imul
jge
icebp
sub
jns
and
outsb
pop
push
mov
lea
ja
out
aaa
addr16
pop
xor
cmp
push
sub
sub
cmc
roll
fiadds
pop
mov
and
inc
cmpl
sbb
loop
jnp
test
out
pop
int3
cmpsl
cmpsb
movsb
loopne
cltd
add
and
hlt
xchg
out
and
add
push
fucomip
and
adcl
inc
push
pop
jmp
inc
jnp
ret
mov
les
fs
jp
gs
sbb
push
push
lea
jne
pushf
call
and
pushf
mov
lea
mov
sbb
aaa
jl
aaa
jbe
ds
int3
jb
and
cmpsl
sbb
rorl
jae
adc
mov
repz
addr16
xchg
xor
into
das
jmp
out
add
dec
add
lret
jo
adc
inc
add
aam
mov
mov
dec
inc
xchg
cmp
aas
in
mov
inc
sbb
pop
imul
jle
pop
test
mov
mov
mov
jmp
xor
stos
push
nop
mov
mov
jnp
mov
dec
mov
sub
sub
data16
lods
out
call
xlat
mov
add
cmp
popa
mov
inc
aad
fimull
or
ret
rorl
cs
hlt
xor
jno
pop
jl
pop
rcrl
mov
test
mov
stc
dec
or
out
loopne
loope
cmp
mov
push
popf
fldenv
mov
sbb
mov
mov
jno
pop
loop
js
movsb
inc
inc
push
inc
push
dec
xor
cs
insb
add
clc
xor
lock
aam
pop
nop
cld
sub
mov
push
bnd
mov
stos
push
xchg
xor
das
mov
dec
jmp
mov
lahf
js
xor
aad
shl
pop
dec
andl
mov
xor
out
sub
add
stc
adc
adcl
jg
sti
sbb
mull
xchg
sti
cmp
mov
cmp
sub
pusha
jmp
shr
push
pusha
cmp
call
sarb
sbb
js
hlt
and
rorb
movsb
adc
pop
aaa
movb
dec
add
inc
pop
xchg
pop
andl
xchg
add
mov
ret
imul
pop
icebp
mov
in
xchg
add
jp
add
in
cmp
xor
add
fdivrl
je
mov
icebp
dec
pusha
inc
inc
shll
mov
inc
jg
sbb
add
push
dec
lea
jb
bt
cmpb
jmp
cmp
call
xorb
mov
test
gs
mov
jl
cmc
push
xchg
ja
cmpsb
cltd
and
das
mov
sarl
ficomps
and
mov
std
lret
cmpl
jne
add
jle
cvtps2pi
adc
std
adc
jecxz
adc
loope
mov
and
mov
mov
or
xchg
test
fisttpll
pop
imul
dec
test
sbb
fyl2x
das
imul
jns
adc
cmpsl
push
mov
mov
lret
lea
sbb
sbb
popa
lea
loopne
cmp
jmp
stos
sbb
dec
shl
jecxz
jle
imul
in
clc
in
cs
ror
mov
dec
in
jns
cmp
or
xor
fs
ret
movsb
dec
arpl
xlat
js
dec
stos
xor
ds
je
adcl
xchg
pop
sub
push
pusha
lret
jl
sub
fcmove
ja
and
pop
push
fxch
jge
mov
repnz
xchg
scas
shll
xchg
cmpsb
or
xchg
cmpsl
adc
aas
xchg
sbb
stos
adc
imul
and
sbb
push
jb
and
sbb
repz
mov
in
xchg
add
movsl
ficoms
inc
mov
rcrb
ja
xchg
rclb
xor
dec
mov
jg
packssdw
fsubr
les
enter
mov
nop
loopne
xor
pushf
out
push
mov
sub
int3
mov
mov
inc
je
pop
push
mov
jl
add
add
hlt
or
cwtl
stos
mov
push
cmpsb
xor
ljmp
pusha
mov
scas
jl
pop
js
out
or
fcmovnbe
adc
repnz
movsl
sub
xchg
ss
aas
shlb
dec
outsb
xlat
enter
rcrl
lcall
push
sub
clc
cmovns
mov
xor
and
mov
jle
ljmp
rorb
cs
movsb
rcrb
push
ficoml
jle
add
jp
inc
mov
out
pop
test
dec
movsl
push
sbb
xchg
pop
lcall
daa
arpl
dec
arpl
outsb
mov
add
fdivrs
dec
mov
cmp
sbb
jp
mov
pop
hlt
into
sub
pop
mov
cld
aad
sub
xchg
sub
mov
mov
popf
icebp
test
testb
fcmovne
lods
daa
stos
out
lds
dec
xchg
mov
pop
ret
sub
repz
jg
fistpl
push
imul
ja
out
ja
negl
mov
into
adcb
rcll
scas
xor
adc
jg
xchg
mov
mov
push
inc
cmp
cltd
dec
outsl
xchg
sarb
pop
fimull
xchg
ja
aas
push
jb
lods
pop
sbb
mov
sbb
cmpb
sti
push
cltd
fbld
jae
sti
cmp
add
stos
sbb
pop
imul
hlt
in
mov
cmp
cmc
or
cmp
fsts
out
mov
clc
push
loopne
xor
les
aam
insl
jmp
xchg
add
dec
lahf
js
mov
mov
ret
pop
add
push
lods
lretw
mov
fldt
push
mov
fdivl
daa
adc
lcall
xchg
or
push
inc
push
cs
mov
push
imul
jnp
ljmp
std
aaa
mov
sub
pusha
or
pop
mov
sar
jl
hlt
sub
call
adc
sub
ljmp
scas
dec
push
mov
push
mov
jmp
movsl
sbb
mov
jnp
cmp
xor
or
push
popa
add
and
hlt
inc
cwtl
ljmp
aam
add
mov
dec
scas
clc
mov
ss
decl
cld
stos
mov
push
outsb
mov
sbb
fisubl
ss
sbb
mov
idivl
arpl
popa
cmp
ffree
xlat
insl
int
sub
or
aam
lcall
push
loope
sti
aam
outsl
scas
sbb
fists
and
cwtl
and
mov
jecxz
xchg
xchg
dec
int3
andb
xchg
shr
push
fcomip
jnp
mov
sarl
jle
jbe
sbb
mov
adc
movsb
sub
mov
xchg
mov
cmpsb
pop
mov
xor
xchg
movsl
sbb
leave
and
dec
sbb
loope
aaa
xor
enter
mov
fldenv
cmpsl
add
jne
cmpsl
cs
push
mov
mov
xorl
das
xchg
xlat
inc
xchg
inc
add
and
sub
sarl
dec
mov
push
dec
lahf
mov
pop
mov
sbb
push
mov
dec
mov
or
mov
and
fcompl
bound
cld
clc
bound
pop
inc
loop
inc
addl
xchg
out
and
mov
cs
out
dec
mov
jnp
das
sbb
in
insb
mov
inc
mov
adc
rcrb
ficompl
jbe
mov
push
hlt
pushl
movb
lea
je
push
lea
jmp
lahf
nop
inc
mov
scas
es
push
mov
scas
pushf
jnp
hlt
jl
clc
adc
andb
test
rcll
les
das
sahf
nopl
mov
pushf
push
dec
addr16
leave
adc
ss
sti
hlt
orl
jnp
and
pop
jno
cmp
nop
jle
mov
les
cmp
push
cmp
shl
xchg
sarl
test
or
push
sbb
gs
jnp
xlat
add
cs
pushl
repnz
movb
call
cs
mov
imul
das
mov
das
outsl
fstl
inc
popf
mov
inc
xor
mov
and
cwtl
or
push
jmp
mov
or
mov
imul
jo
mov
pop
and
and
iret
pop
lock
adcb
fs
outsb
popa
jne
setbe
xchg
es
push
loop
pop
xor
pop
push
cmp
pusha
movsb
mov
cmp
or
movl
iret
shlb
lea
jbe
sub
out
inc
cmpb
push
push
mov
dec
and
enter
sub
negb
cltd
xor
mov
mov
fs
and
mov
jbe
sub
mov
sbb
mov
sarl
movsb
jmp
push
push
jmp
fs
gs
gs
push
mov
xor
jge
adc
aad
or
in
add
mov
in
movl
call
mov
cmc
cmp
bt
cmc
test
push
jmp
push
call
mov
lea
mov
out
inc
mov
xchg
jns
and
jmp
ret
pop
jp
scas
shl
push
int
fs
shr
inc
mov
imul
mov
dec
lock
in
lcall
cwtl
cmp
movsb
inc
sub
faddl
fcmovnbe
in
arpl
xor
pusha
fnstsw
das
inc
rorl
popa
mov
aaa
lods
fiadds
pop
jnp
cmp
loope
jg
fldt
dec
cltd
jecxz
inc
pop
lahf
mov
jo
xor
fidivs
xchg
into
sbb
lea
aad
xor
sbb
jae
push
xchg
mov
dec
in
bound
stos
or
jmp
push
imul
shl
xchg
sarl
addr16
sahf
dec
test
jp
pop
cmp
insl
pop
pusha
fxch
mov
pushf
js
xchg
mov
sub
lret
and
aad
aas
gs
push
aas
lret
sahf
push
and
mov
sub
jg
push
lods
test
sbb
mov
cld
cmp
js
and
mov
cs
rcrl
sub
mov
daa
pop
fistps
push
mov
stc
mov
iret
rcrb
pop
mov
and
xlat
stos
push
pop
xchg
xlat
inc
jmp
int3
cmp
lock
push
cmp
xor
push
mov
mov
mov
stc
sub
fstps
neg
lahf
jl
addr16
xor
sbb
out
sahf
loopne
pop
cmp
daa
insl
test
mov
in
jnp
adc
mov
mov
mov
arpl
cmp
popa
cmp
scas
addb
cmp
xchg
repz
hlt
sub
and
bound
mov
cmp
add
imull
repnz
mov
ja
adc
xor
int
jp
shll
pop
inc
mov
mov
loop
stos
enter
adc
push
mov
mov
mov
sahf
ficompl
es
cmp
jnp
cmp
push
xchg
imul
add
sub
das
mov
and
mov
mov
lea
jnp
xor
mov
sbb
popf
mov
xchg
dec
cmp
xchg
or
adcl
mov
cmpl
loop
cltd
je
mov
pop
xchg
decl
repz
cmp
mov
cmp
aam
jge
fwait
imul
ja,pt
pusha
jbe
cmpsl
pop
in
push
mov
scas
cmp
mov
pop
cli
fmuls
jno
mov
bound
dec
out
xchg
pusha
xchg
push
lods
push
xchg
adc
sbb
push
cmpsb
clc
and
cs
sbbb
dec
into
subl
movzbw
mov
pushl
xor
call
rorl
xlat
xor
rorl
dec
lahf
pushl
push
sbb
loop
lods
jb
enter
adc
sbb
fwait
bound
ljmp
daa
xchg
out
test
sarb
xor
sub
jecxz
sub
xchg
je
fnstcw
mov
repz
push
lea
call
inc
std
imul
out
push
ja
or
add
xor
inc
repz
les
cli
orb
aad
and
in
ja
ja
push
fistps
mov
popa
and
jne
add
mov
scas
call
enter
inc
xor
sbb
cmp
xchg
imul
popa
call
icebp
js
cli
out
leave
push
lea
mov
hlt
popa
mov
jmp
mov
xor
lods
adc
sub
or
adc
push
push
mov
inc
movsl
popf
pop
jmp
jmp
sahf
orb
test
cmc
xor
fstps
xlat
mov
pop
cwtl
inc
xchg
lods
jb
adc
xor
outsl
or
icebp
scas
push
inc
cld
mov
push
out
cs
sub
sbb
flds
push
mov
dec
jmp
jbe
out
push
and
fcoml
pusha
xchg
aam
push
and
xorb
sub
bound
orl
mov
aas
xchg
rcrl
push
stc
sti
jns
cmpsb
mov
jbe
mov
ret
insb
jmp
mov
lock
test
xchg
pop
xor
cmp
cwtl
fbld
aaa
adcb
and
adc
out
int
shr
cs
fildl
aaa
adc
mov
push
mov
xor
mov
rorb
jle
nop
jnp
xor
xchg
pushf
or
inc
gs
insb
mov
pusha
sar
mov
lcall
imul
sbb
daa
jae
mov
push
and
int
dec
scas
sbb
add
icebp
add
sbb
mov
repnz
test
mov
aam
mov
insb
pop
stos
jae
and
pop
lods
sbb
call
cmp
mov
pusha
and
movsb
sar
pop
es
or
ss
imul
lea
insb
mov
dec
cwtl
shlb
in
lods
fs
dec
andb
pop
push
or
sti
jns
ss
sti
je
mov
jno
add
test
adc
ret
xchg
cwtl
jb
pop
dec
and
fs
dec
sbb
xor
mov
lret
push
dec
mov
cs
push
insb
mov
es
pop
cmp
pop
dec
lea
jbe
dec
xadd
mov
sub
add
bts
rcl
sbb
shl
mov
shrd
call
pushfw
xor
mov
jnp
xor
stc
sub
jmp
sub
xlat
orl
lret
xchg
cli
cmp
movsb
outsl
xchg
out
mov
les
sub
leave
xchg
pop
ja
xor
fnclex
sar
fadd
and
shlb
pop
jae
bound
dec
xor
jae
repnz
testl
xor
loop,pn
outsl
cmp
stos
push
cwtl
xchg
xchg
scas
push
cltd
pop
nop
sahf
loope
xor
push
push
pop
sbb
lret
sub
mov
sbb
rorb
add
mov
mov
das
subb
jmp
pop
jmp
xchg
orl
jg
jmp
pop
pop
xchg
and
in
xchg
movsb
jge
ljmp
add
xor
lret
les
pusha
xchg
cmp
jbe
pop
ret
in
sub
xor
mov
fdivl
xor
sbb
xor
sahf
scas
ss
data16
rol
sub
clc
data16
out
dec
xchg
adc
fwait
data16
imul
or
rclb
xchg
shl
push
mov
push
push
push
lcall
and
adc
arpl
in
aam
lods
sub
mov
lret
cmc
ss
scas
test
push
xor
cmpsb
sbb
xchg
test
and
cs
fbstp
and
mov
jle
jg
cltd
decb
nop
stos
fld
push
bound
int3
inc
adc
xchg
xor
stc
les
xchg
pusha
stos
fcoms
mov
pop
leave
xor
xor
orl
incl
shll
leave
call
push
imull
sti
aas
outsl
pop
in
jge
lock
cmc
ret
enter
xchg
in
outsb
stos
xor
out
mov
daa
push
movswl
mov
xchg
call
or
push
pushf
xchg
int
test
and
cmc
mov
xor
int
mov
aaa
push
push
rolb
pusha
int3
or
int3
cmpsl
pop
sbb
cmp
loope
arpl
jno
mov
loope
pop
int
jne
cld
pusha
sub
rorb
inc
mov
ds
or
jp
repnz
xor
dec
das
mov
add
cmp
fst
je
mov
fdivrl
lret
lea
repz
mov
pop
or
xor
xor
das
mov
std
gs
or
aad
inc
sbb
mov
scas
xchg
mov
pop
dec
aad
lods
sbb
jne
add
sub
cwtl
adc
mov
shll
out
inc
outsl
pop
imull
jno
repz
inc
popf
jno
jge
fiadds
jle
gs
pop
and
cmp
cmp
jge
adc
pop
dec
aad
add
xor
add
jae
fcmove
jl
sub
sub
fcomps
dec
jnp
jmp
outsl
lods
pop
insl
shl
aaa
cltd
jne
mov
roll
jge
lea
ja
ja
not
setp
pusha
inc
pusha
inc
cmp
sbb
bt
bt
xchg
movb
movzbw
mov
ror
mov
sub
je
push
shld
mov
stc
sub
pushf
movb
rep
movzbl
pusha
lea
pusha
mov
pushf
pushf
movw
lea
jmp
lea
call
cmc
cmp
push
lea
jae
call
adc
aam
mov
mov
pop
xchg
stc
cmp
int
inc
fcmovbe
icebp
cmpsb
repz
xchg
sarb
cltd
push
sub
jne
dec
lock
add
dec
cmpsl
jg
sbb
enter
mov
pop
xchg
cmp
ficoms
lea
or
push
and
pop
xor
xlat
or
sub
and
call
push
inc
setne
les
xchg
movsb
push
push
movsb
in
sub
loop
mov
mov
les
out
jne
ret
inc
call
lret
xchg
loopne
test
inc
ljmp
rorb
scas
testl
in
loop
mov
dec
sbb
sub
hlt
stos
or
xchg
loopne
sub
push
mov
bound
sahf
enter
xchg
testb
les
outsb
mov
or
cwtl
rolb
fsubrs
push
repnz
jae
ss
mov
mov
fdivr
cmp
cld
sub
pop
cltd
dec
lods
adc
jle
rcrl
repz
insl
lcall
xor
rcrl
int
test
and
mov
add
or
fisttps
call
call
pop
movsb
pop
push
adc
mov
insb
adc
and
imul
push
push
into
push
dec
xchg
fs
pop
test
fs
shlb
fs
out
mov
xchg
lods
push
push
shlb
pop
lods
sbb
test
mov
and
aad
xchg
mov
add
fst
sbb
iret
mov
and
lcallw
ds
mov
pop
popf
lcall
pop
arpl
ds
sub
ds
jle
jns
add
ffreep
cli
leave
inc
fstpl
testl
std
mov
mov
mov
cmp
adc
adc
push
cs
inc
icebp
mov
mov
cmp
and
cmp
insb
stc
xor
push
sub
test
fwait
push
add
add
js
repz
aaa
xchg
dec
rcrb
fmuls
add
mov
shr
cmp
outsl
mov
cmpsb
int
or
sbb
xor
xchg
fucomi
jecxz
mov
sbb
cwtl
test
push
push
addr16
xlat
sbb
aam
pop
lret
mov
cli
pusha
mov
ds
pusha
nop
repnz
cmc
out
mov
and
shlb
test
or
adc
lods
gs
scas
inc
sbb
outsb
xchg
xlat
insl
roll
and
in
jle
push
adc
iret
enter
stos
xor
pop
clc
and
lret
ja
popf
jnp
repnz
add
add
jmp
and
in
push
fsts
sahf
call
int
xchg
sub
sahf
in
cmp
jo
and
loop
data16
push
ljmp
mov
movw
xchg
jmp
neg
pushf
movb
push
pushf
not
pushf
inc
cmc
xor
cmc
cmc
rol
movb
call
lods
lock
push
jle
jecxz
jo
mov
xchg
cmp
sbb
push
shlb
jl
mov
stos
adc
test
fnstsw
orl
mov
dec
push
aas
call
pop
mov
mov
mov
xor
jmp
scas
lret
jmp
cltd
cwtl
or
shl
sarl
out
jmp
push
adc
cmc
dec
mov
imul
inc
rclb
and
out
negl
addb
jne
push
js
icebp
xor
popf
filds
cmp
aad
out
bound
fmuls
in
gs
xor
imull
insl
mov
xor
add
icebp
mov
nop
out
sub
jg
sahf
shll
out
add
adc
adcl
hlt
and
adc
bound
arpl
ficoms
pop
in
dec
push
push
inc
push
xor
cs
insb
add
xchg
push
mov
jmp
cld
adc
mov
call
add
jl
mov
inc
mov
sbb
bound
imul
scas
fidivs
xor
cmp
sti
mov
cmpsl
add
loope
pop
ja
clc
icebp
daa
add
or
and
or
mov
mov
add
mov
sub
pop
pop
mov
rcrl
dec
cltd
mov
jp
xor
lea
sub
cmp
mov
test
fcoms
xchg
shrl
or
add
or
push
ljmp
push
pop
sbb
movl
pusha
pushf
call
push
jmp
push
adc
add
add
add
jbe
add
add
add
add
add
add
add
clc
test
add
add
add
xor
add
add
jbe
xor
add
add
insl
shlb
add
add
add
add
xor
add
add
push
loop
add
add
add
xor
add
add
out
fidivl
add
add
add
xor
add
add
mov
add
add
jp
add
add
add
add
add
xor
add
add
aad
xor
idivb
xor
add
xor
push
add
add
pusha
xor
add
add
dec
cmp
xchg
mov
scas
into
push
or
ds
and
mov
hlt
jbe
mov
pop
pop
clc
ljmp
out
mov
sub
cmp
fistps
sub
ss
pop
push
andl
xor
std
int3
cld
in
cmp
ds
and
addr16
mov
xchg
inc
cli
cmp
in
push
int
decl
push
mov
mov
push
xchg
mov
and
add
mov
jp
xor
xchg
push
flds
out
dec
scas
push
mov
jo
clc
jmp
dec
popa
mov
adc
mov
add
rcrb
fs
daa
das
mov
ja
pop
aad
iret
cmpsb
xchg
mov
jns
mov
xor
fstpt
xor
cmp
cmpsb
testb
leave
pshufw
inc
mov
add
out
push
ja
or
nop
dec
insb
or
les
push
int
mov
icebp
testl
adc
stc
into
addr16
rclb
shl
lods
insb
stos
sahf
hlt
push
test
push
mov
and
and
push
or
sub
xchg
bnd
cmp
xchg
jno
mov
mov
and
aam
sub
int3
roll
xlat
cmp
xchg
mov
lds
jne
std
adc
jmp
outsb
add
ret
xchg
imul
iret
cmpsl
push
into
ret
hlt
push
mov
push
mov
lods
sbb
mov
repnz
jl
stos
or
mov
pop
xchg
jge
lcall
jno
mov
or
push
inc
scas
out
orl
scas
popf
loopne
jmp
or
mov
add
mov
or
shrb
xchg
adc
jp
stc
adc
or
push
inc
xchg
mov
xlat
testl
add
cmc
push
data16
push
jmp
jne
stc
or
push
les
push
and
inc
cmp
cltd
mov
inc
ficomps
repz
mov
call
fsubrs
pop
sub
movsl
sbb
lahf
sti
push
mov
ja
test
leave
and
and
jnp
mov
es
pop
jb
push
push
or
push
and
es
adc
subl
mov
lahf
xchg
mov
inc
js
in
sub
mov
mov
xchg
jle
lret
or
clc
test
fisubrs
out
add
and
inc
dec
shl
cs
inc
ljmp
sbb
and
jecxz
sub
add
scas
xchg
in
push
popf
push
adcb
inc
sbb
lds
cld
inc
or
push
dec
cli
jge
aaa
jp
cmp
xchg
imul
nop
adc
in
scas
jle,pn
xor
data16
in
xchg
mov
inc
jl
adc
test
add
lea
jbe
bsr
bsr
mov
shl
sub
lea
rol
btr
cmp
mov
adc
dec
mov
xadd
sar
add
xchg
add
pushf
pushl
bt
shld
shr
and
xadd
jmp
and
mov
jp
cs
mov
pop
mov
or
cmp
mov
lea
mov
adc
add
rcrb
or
inc
jge
mov
out
jp
fwait
adc
cmp
mov
pop
filds
xchg
fdivl
rcl
mov
test
adc
ja
daa
xchg
ret
icebp
in
stos
lods
dec
mov
and
cmpb
xchg
mov
ljmp
mov
pop
imul
idivl
sbb
fcomp
fcmovnbe
push
sbb
jnp
in
jge
cli
jo
mov
mov
imul
loopne
push
push
push
mov
pop
jns
add
xchg
mov
xchg
dec
scas
ficompl
push
mov
jge
gs
es
xor
xor
push
test
cmpl
cli
sub
cld
ret
out
cs
cld
adcb
push
bound
add
sahf
sti
outsl
xor
icebp
dec
hlt
cmp
inc
lret
in
and
jmp
scas
cmpsl
mov
out
sbb
push
mov
cmp
fisttps
or
jb
inc
mov
inc
ret
fs
loop
jbe
cmp
push
shl
inc
dec
cmpb
sbb
mov
adc
dec
mov
adc
lods
out
mov
je
ret
lock
mov
fildl
scas
add
mov
imul
mov
fs
jns
orl
sbbb
push
lods
dec
scas
xchg
out
pop
jno
or
jl
jnp
add
lods
ljmp
rcrb
dec
mov
mov
rol
jb
mov
pop
xchg
pop
push
stos
add
imul
pop
pushf
sarb
xchg
outsl
push
xor
push
das
fdivl
sub
mov
xchg
ja
sbb
lds
sbb
xchg
dec
mov
add
inc
jl
adc
fcoml
add
and
es
mov
mov
popf
nop
aaa
lahf
int
rcll
push
xor
cs
insb
add
rclb
imul
adc
jl
pop
mov
jge
dec
stos
xchg
lds
push
sub
cli
jno
subl
js
enter
jl
ja
adc
lret
lea
shlb
or
and
xlat
aaa
jge
mov
xchg
mov
cld
pop
movsb
add
repnz
xchg
ja
cmc
dec
fwait
nop
mov
xchg
mov
and
sub
aaa
outsl
cmpsl
fistpl
pop
cmp
mov
sub
mov
jns
int
call
jp
hlt
pop
xchg
cmp
arpl
inc
pop
imul
sbb
movsb
inc
fidivs
xchg
add
mov
sub
jae
mov
push
sub
mov
fistpl
aas
jae
inc
jns
push
jb
lahf
sub
inc
sbb
and
lock
or
or
push
jns
loope
insl
std
pop
cltd
add
out
dec
into
arpl
adc
pushf
mov
lcall
xchg
mov
mov
lahf
insb
pop
adc
mov
jg
ss
xchg
loope
aaa
sub
jg
xlat
sbb
push
adc
in
inc
icebp
ds
movsb
pop
push
xor
sbb
push
iret
ds
or
insb
aad
jbe
mov
into
push
jno
lret
add
and
or
xor
mov
aam
inc
adc
mov
and
out
push
inc
lods
lds
popa
scas
jmp
add
frstor
imulw
ljmp
dec
imul
add
and
popf
mov
stos
in
testl
jno
mov
xor
insl
lods
adc
mov
inc
jge
testb
cmp
imul
clc
or
fistpll
test
lret
mov
adcb
pop
gs
arpl
add
pop
lea
mov
jmp
jns
cmp
sub
xor
cld
cmpb
jp
push
push
jmp
popa
push
add
movb
insl
bound
mov
lock
push
or
and
out
xchg
js
mov
jne
mov
jg
gs
mov
outsl
out
bound
sub
or
xchg
push
push
call
jp
pop
std
xchg
push
ret
jnp
sbb
add
pop
mov
add
mov
sbb
mov
jo
mov
add
sbb
pop
aas
stos
getsec
push
mov
xlat
cmp
xchg
clc
cmp
mov
call
leave
jle
lret
cmc
lcall
xlat
mov
push
leave
mov
cmpsb
in
cmpsl
or
dec
adc
fstl
int3
mov
or
ss
add
mov
rolb
mov
or
cwtl
mov
adc
mov
clc
inc
mov
mov
out
xor
push
testl
xor
pusha
lds
pop
pushf
xor
push
xchg
hlt
pop
dec
lahf
add
popf
aad
das
sahf
in
jne
dec
add
xchg
mov
pop
in
lea
cld
sbb
dec
pop
aad
jle
rorl
and
xchg
cld
ljmp
fisttpll
dec
xchg
lds
jns
std
cmp
pop
rolb
add
fs
jae
pusha
lea
jmp
or
mov
loopne
fs
sbb
and
cmpsl
cli
jp
push
jge
sbb
outsl
notb
mov
lods
cmp
xchg
aas
cmpb
adc
jnp
call
ds
jmp
push
dec
pop
icebp
xchg
mov
out
fsubs
xchg
mov
push
xchg
pop
sub
cmp
xor
jecxz
stos
cmp
test
rolb
or
icebp
push
sub
jb
or
in
inc
xlat
add
push
mov
clc
xor
cmp
leave
sub
mov
dec
xchg
rcpps
xor
aaa
imul
sarb
mov
es
ret
add
cmp
adc
cwtl
outsb
ret
popf
shll
push
mov
lcall
add
jbe
fs
add
add
cmp
testl
push
js
sti
jns
rol
mov
fidivs
mov
fwait
shl
ret
sub
pusha
aaa
fwait
pop
cmp
ja
xor
and
fidivrl
subl
fs
adc
mov
push
lea
jae
jmp
push
arpl
cwtl
mov
inc
push
scas
sub
std
arpl
xchg
jecxz
aam
repz
mov
adcl
push
into
push
inc
and
test
pop
enter
cmc
push
push
nop
pop
pop
push
sub
stc
cmpsb
jbe
pushf
call
pushw
ret
sbb
sbbl
popa
sbb
mov
imull
add
lds
insb
in
mov
fnstenv
inc
cmpl
rol
jbe
pop
sbbb
les
lcall
adc
sbb
ret
xchg
aad
dec
movsl
xor
mov
mov
inc
cwtl
lock
movsb
shr
cmp
mov
shlb
pop
sub
sub
movntq
out
mov
or
jo
xchg
bnd
das
add
adc
sub
sub
std
pushf
test
add
pushf
xor
mov
and
inc
push
jl
and
rcll
mov
jnp
neg
dec
outsb
jne
xchg
bound
fiadds
lea
pop
lret
add
pop
jle
outsl
dec
mov
jae
cltd
mov
fstpl
jne
stc
pop
fstl
call
hlt
aad
adc
call
and
dec
pushf
xchg
cmp
push
dec
mov
cmp
in
add
int
push
xor
mov
scas
pop
adc
push
mov
fdivrl
mov
pop
xorb
inc
call
dec
xchg
mov
andl
xchg
daa
repnz
packuswb
xchg
nop
int3
pop
pop
sbb
add
lret
aaa
out
cmp
rclb
inc
stos
in
dec
movsb
imul
imul
fistpl
mov
mov
or
jecxz
jmp
stc
std
cmp
movb
lea
ja
call
dec
pop
or
push
mov
pop
and
xor
aad
jnp
ret
add
loop
inc
sub
xchg
and
outsl
aaa
fadds
add
mov
fnsave
in
lds
cmpsb
jg
jl
je
ds
sub
adc
int3
sbb
cli
mov
xchg
hlt
stos
pop
xchg
fnstenv
sub
add
mov
movsb
repnz
mov
xor
fisubl
pushf
xchg
mov
mov
adc
mov
pushf
lea
ja
call
add
movsb
fwait
mov
cltd
loope
test
pop
outsl
push
cmp
sbb
gs
cwtl
add
inc
out
cmpl
or
inc
sbbb
sub
stc
sarl
pop
mov
in
ds
pop
jae
mov
mov
push
lcall
add
sbb
jl
push
xchg
sbb
icebp
call
in
push
jge
sbb
xchg
adc
inc
popa
push
mov
and
cmpsb
push
fwait
mov
push
inc
cmpsb
push
es
into
add
cli
adc
mov
imulb
mov
sbb
fs
orb
fwait
mov
adc
pushf
lods
ficomps
jg
imul
jnp
arpl
mov
jb
cmpsl
call
emms
out
or
cmp
sbb
ret
das
pop
jae
pop
insl
xchg
lods
pop
cmp
jb
dec
mov
mov
pushf
pusha
mov
call
out
pushl
scas
pop
push
mov
aas
mov
xor
inc
dec
jp
push
test
ds
sub
mov
add
jo
mov
dec
out
and
jg
outsb
mov
pop
lcall
sub
aam
std
mov
or
jae
inc
mov
in
shll
cmpsl
mov
push
add
mov
mov
xchg
in
out
push
jg
rdtsc
out
imul
aam
fdivp
cmp
mov
push
in
lea
lret
xchg
mov
push
lretw
cmp
jg
adc
aaa
lea
cmp
mov
inc
cmp
inc
sbb
mov
sub
jl
mov
xor
pushf
out
lea
mul
insb
aas
xchg
pop
stos
xor
jg
add
addr16
jbe
jmp
rep
ljmp
shlb
pop
mov
adc
out
clc
pop
mov
or
gs
adc
pop
mov
dec
pop
cmp
ret
push
aas
pop
xchg
in
inc
mov
lds
push
repz
jns
sbb
xlat
movl
jmp
loopne
jo
cmpsb
add
xor
cmp
add
jg
add
fimull
shrb
or
cmp
imul
iret
cmpb
pop
sub
adc
in
dec
rcrl
jge
cmc
inc
insl
mov
dec
inc
add
xchg
insb
lcall
mov
clc
push
nop
fcompl
mov
hlt
int3
push
mov
mov
push
mov
pushf
fsubr
xchg
fimull
dec
jae
ret
xor
mov
rolb
push
xor
les
icebp
lret
mov
jmp
popf
sbb
ret
mov
ret
addl
xchg
sbb
frndint
and
adc
push
test
mov
mov
out
jge
pop
iret
pop
add
fadds
loop
pop
xchg
fimuls
dec
mov
or
mov
orl
imul
lods
int
push
jge
cmc
jns
paddb
sbb
adc
sbb
xchg
dec
lahf
mov
push
rcr
inc
jne
loop
cltd
leave
stos
pop
jmp
cmc
fcoms
dec
cmpsb
lock
data16
aaa
and
mov
in
push
mov
call
mov
pop
test
xor
in
fisubl
clc
iret
mov
mov
xor
arpl
pop
xchg
inc
lock
xchg
xchg
cli
sub
lock
mov
inc
xchg
loope
into
roll
aaa
cmpl
dec
movsb
add
js
or
movsb
lock
clc
inc
int
add
sbb
mov
xlat
enter
cwtl
scas
lock
jl
lret
add
test
mov
mov
insb
test
cmp
pusha
push
popa
xlat
ss
sahf
and
or
jg
dec
inc
jecxz
or
movsb
and
pop
jnp
inc
aas
push
jg
inc
mov
sub
lret
lods
adcb
dec
shlb
das
jmp
sti
sub
mov
repz
adc
dec
popf
jecxz
xchg
mov
out
lea
mov
adc
mov
or
push
movsl
data16
daa
push
call
shl
sti
das
adcl
scas
ja
les
jle
sub
bnd
push
push
push
mov
push
pmuludq
xchg
xor
ljmp
fidivl
les
cmp
popaw
lahf
cmpsl
in
aaa
push
pop
and
sbb
mov
dec
iret
aas
adc
ficoml
mov
push
sbb
aaa
lret
sbb
adc
loopne
lea
pop
cmp
scas
mov
shr
stc
push
cmp
sub
pop
xor
ss
ljmp
into
add
sarl
lcall
out
sub
shlb
inc
sti
mov
jb
leave
icebp
aam
sub
add
inc
jbe
repnz
fcompl
je
call
fimull
ds
mov
or
pop
dec
add
add
push
jb
outsb
jae
popa
jb
outsb
je
insb
je
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
icebp
ljmp
jge
stc
gs
aad
and
movsl
imul
push
jns
js
xchg
mov
push
or
lds
fnstcw
xchg
or
call
inc
mov
vsubpd
mov
push
mov
mov
sbb
flds
pop
std
stos
ror
setbe
aaa
sub
xchg
movsl
in
push
movsl
fst
stos
outsb
ret
mov
sub
push
inc
xchg
inc
stos
aaa
addr16
fnsave
cwtl
shrl
push
aam
pop
ljmp
mov
xor
rclb
push
loope
call
sti
sbb
sub
lea
movsbw
movzbw
pop
bswap
pop
mov
call
pushf
jmp
mov
push
loope
lea
pop
mov
daa
inc
fwait
out
addr16
mov
bound
js
enter
lds
xor
fs
push
fisubrs
js
iret
scas
push
mov
sahf
sti
icebp
and
xchg
push
add
inc
jg
sub
outsb
imul
lds
cli
xchg
scas
cld
jnp
ljmp
jmp
fisttpl
fsubrp
testb
jo
sbb
negb
sub
call
lods
rorl
test
loop
lea
or
push
mov
jne
push
out
jnp
mov
jp
inc
xchg
loope
gs
adc
sub
cmp
xor
jle,pt
sbb
jmp
ss
inc
mov
cwtl
ljmp
addb
stos
pop
jnp
loop
outsb
dec
jo
out
movsl
fstl
pop
mov
shl
mov
fidivrs
jo
loop
lea
mov
adc
push
push
mov
xor
ljmp
outsb
dec
jo
pop
xchg
insb
aam
xor
lods
clc
and
aas
jnp
cmp
cmp
es
push
test
add
pop
xor
mov
cmpsl
leave
or
fwait
out
decb
lcall
paddusb
jo
push
jnp
push
loope
sub
orl
xor
adc
arpl
pop
insl
xchg
lret
dec
fbstp
mov
add
xchg
daa
ja
sbb
data16
push
sbbl
xchg
jb
mov
movsl
sbb
xchg
js
pop
sahf
or
mov
inc
xchg
sbb
in
cmp
fs
int
jno
mov
rclb
inc
pop
add
cwtl
mov
lock
add
and
sbb
arpl
and
cli
fldl
hlt
cmp
sub
rorb
scas
xor
enter
in
lods
jmp
fwait
iret
add
and
rorb
and
add
test
push
jmp
jmp
fsubs
dec
mov
dec
mov
ds
mov
ljmp
mov
jo
jb
ret
pushl
loope
inc
jg
and
lds
arpl
lahf
es
jb
movsb
stos
lods
ret
xor
data16
ljmp
je
push
outsl
push
cmp
outsb
mov
loopne
cs
outsb
mov
fs
out
adc
cmp
icebp
inc
test
sbb
sub
dec
nop
sbb
imull
xchg
ret
addl
movl
lea
jmp
jne
call
fwait
out
sub
idivl
jg
lcall
loop
cmp
addr16
dec
ds
insb
pop
int
pop
ja
xor
in
nop
fcoms
xor
dec
jge
mov
push
push
in
add
mov
sub
pop
cmp
and
pop
mov
add
outsl
sbb
hlt
shlb
lods
cltd
xchg
lods
add
sbb
push
test
mov
loopne
cmpb
ds
je
out
add
xor
xor
mov
or
outsl
ds
fwait
and
fidivrl
test
test
and
jmp
sub
add
and
mov
dec
pusha
pushf
or
xchg
ficompl
or
mov
enter
insl
popa
pop
outsl
push
cmc
xor
scas
push
int
mov
fmulp
rorb
test
jg
fldcw
sarb
pop
inc
fcompl
mov
jo
xchg
sbb
test
fists
xchg
mov
pop
aam
dec
sbb
sbb
pop
xchg
pop
sub
imull
les
test
sbb
lea
out
inc
xchg
into
push
sahf
shlb
mov
sbb
mov
or
mull
mov
xchg
pop
testl
mov
mov
xor
movb
sub
daa
enter
inc
pop
sbb
sub
mov
add
jecxz
lcall
xchg
push
jmp
dec
xchg
fnsave
or
negl
push
xor
fisttps
push
outsl
fldl
scas
or
repz
adc
scas
out
sub
stos
call
lea
ja
ret
push
push
fldz
mov
loopne
mov
adc
dec
insb
inc
or
push
repnz
inc
movsb
in
ds
shlb
dec
mov
jnp
mov
cmp
aas
mov
jle
mov
mov
cmp
xchg
ror
mov
or
and
sbb
andb
mov
mov
into
mov
mov
adc
dec
shll
cmp
aam
int
mov
mov
push
push
mov
jle
jg
punpckldq
orb
pop
adc
and
push
xor
mov
scas
mov
lock
movsl
sub
fstl
mov
gs
repnz
cmc
rcrl
inc
xchg
call
and
movsb
sub
stc
mov
xchg
imul
lea
and
mov
jo
cmpsb
mov
jnp
add
scas
pop
jecxz
test
pop
cmp
mov
pop
jo
cmp
lds
outsb
sahf
fwait
lds
lahf
cmp
dec
psubsw
insl
jle
je
lea
push
notb
mov
mov
and
cmp
stos
or
adc
jge
xlat
xor
repz
arpl
add
ljmp
pop
adc
mov
sbb
not
add
movzbl
pusha
mov
lea
jnp
push
pushf
call
lea
je
clc
pushf
cmp
push
pushf
push
movw
lea
je
pushf
lea
jmp
and
call
or
jnp
sub
pop
dec
xchg
scas
pop
fs
std
jbe
popa
or
bound
pop
pop
jecxz
enter
lods
iret
dec
aad
add
dec
popf
cmp
in
pop
clc
jl
popf
add
cmc
shl
mov
es
cmc
cs
adc
aam
xchg
mov
xor
and
shll
pop
sub
jg
loop
and
fcmovnb
es
adc
jge
or
cmpsl
lds
popa
push
lock
js
lret
fmull
ret
inc
jbe
sub
inc
jb
lock
fnsave
add
jg
xlat
insl
das
pushf
push
adc
cmpsb
andb
push
push
or
push
mov
fs
pop
pop
push
loopne
es
out
dec
ds
std
add
mov
pop
jno
in
xor
sub
std
int3
cld
mov
insb
and
sahf
sbb
sub
cmpsl
orb
sub
std
xor
adc
mov
in
ret
mov
jmp
inc
push
push
jmp
pop
xchg
leave
sbb
push
test
mov
push
movsl
cmc
mov
mov
pop
lahf
xchg
inc
gs
cld
pop
mov
imul
mov
cmp
cmp
dec
sub
cwtl
stc
cmp
iret
xlat
ficoms
jge
fsubrl
sbb
leave
push
xchg
jmp
jle
ret
xchg
dec
mov
or
push
fcompl
pop
cmpsb
in
es
jmp
cltd
rcrl
jmp
mov
inc
xchg
mov
push
pushf
aam
out
pushf
mov
sahf
std
outsl
movsl
push
push
fs
roll
and
mov
dec
xchg
ror
pop
xchg
mov
addl
mov
push
mov
add
inc
xchg
push
or
pop
push
sub
mov
or
push
fcomip
push
mov
loope
pop
mov
pop
jae
jnp
testl
xor
sahf
call
data16
jl
out
push
test
insb
sub
inc
ljmp
movsl
pop
cmc
or
xlat
cwtl
je
inc
mov
pop
dec
mov
out
or
sub
leave
lods
pop
dec
inc
xchg
and
inc
dec
push
fndisi(8087
pushf
fs
daa
jo
xchg
jnp
dec
imul
push
sbb
xchg
mov
mov
xlat
cmp
sarb
ljmp
maxps
adc
loope
push
mov
fdivrs
into
lods
sub
mov
stos
out
loopne
ljmp
insb
addb
mov
dec
cwtl
fdivs
movsb
sub
rclb
cmp
pop
mov
pusha
cmp
outsl
mov
pop
dec
jg
cmc
sub
xchg
leave
cmpsb
jle
lods
mov
test
mov
xchg
push
hlt
int3
test
inc
pop
repz
push
sub
and
cmp
es
and
xchg
mov
pop
arpl
or
xor
or
mov
push
push
fisubl
pop
loopne
mov
mov
cwtl
enter
lcall
adc
push
movsb
mov
push
jo
add
scas
xchg
mov
imul
cmp
lahf
filds
jp
lods
xchg
je
sub
push
test
jge
loope
cs
inc
les
xchg
sub
daa
and
popf
dec
lods
and
xor
sbb
inc
or
add
push
cwtl
mov
sbb
out
insb
imul
test
add
adcb
leave
test
subl
and
inc
addb
lret
nop
sarb
les
adc
push
xor
or
mov
mov
adc
xchg
jle
push
jecxz
aaa
fwait
jmp
xchg
or
shrb
enter
sbb
jo
adc
pop
and
lods
imul
add
jne
add
push
inc
push
fiadds
hlt
test
shlb
fprem1
sub
mov
ljmp
mov
jbe
pop
mov
sub
mov
push
pop
jne
pusha
xchg
out
pop
dec
movsb
movsb
or
sbbb
out
push
mov
push
out
dec
sub
scas
dec
into
xchg
cmp
sbb
clc
cmp
add
pushf
pushf
pusha
pushf
lea
jmp
cli
jmp
hlt
mov
stos
mull
push
addr16
xchg
out
and
xor
divl
lret
cmp
xchg
out
inc
cmp
mov
in
fists
insb
aad
or
push
cli
push
jg
jbe
adc
pop
popf
psrlw
cli
jmp
sbb
dec
mov
pop
mov
je
mov
sbb
xlat
or
xchg
in
sbb
dec
pop
or
push
jb
repnz
cltd
jno
popa
repz
sub
js
cmp
or
cmp
or
mov
mov
imul
xor
push
xchg
jmp
sub
inc
out
xchg
es
sbb
das
xchg
adc
sub
sub
imulb
mov
arpl
fwait
lods
cltd
es
orl
push
push
stos
and
aam
xchg
test
mov
addr16
push
shlb
mov
xchg
adc
mov
push
push
int3
inc
push
in
push
sub
dec
xchg
mov
inc
std
gs
std
sbb
xlat
and
orb
sub
mov
dec
push
mov
pop
ret
out
repnz
loopne
scas
jp
fidivrs
jnp
cli
div
mov
inc
push
jp
cmp
cmp
rcrl
push
pop
mov
xor
dec
cmp
mov
and
mov
lret
xor
loope
jne
adc
sub
rolb
into
cmp
add
inc
gs
outsl
fs
gs
imul
add
lea
pop
addr16
fmul
jp
rcr
mov
mov
pop
shrb
clc
and
or
push
imul
icebp
jl
jmp
dec
cmpsb
hlt
push
push
enter
in
popf
outsl
rcr
xor
mov
mov
xchg
divl
sbb
xchg
testb
xchg
lock
inc
cltd
mov
outsl
rcr
cmc
or
popa
fwait
jmp
dec
cwtl
mov
sbb
int
pop
sbb
imul
xor
mov
mov
mov
dec
jmp
js
sbb
mov
jbe
mulb
xor
into
cli
and
pop
pop
push
lahf
lret
push
push
and
xchg
push
push
repnz
pushf
pop
fiadds
sbb
enter
mov
push
lea
jne
bsf
sbb
sub
aaa
bsr
bts
mov
adc
rcr
dec
sub
add
shl
setp
pushf
mov
cmc
test
call
push
call
push
bswap
mov
lea
jb
pusha
mov
movzbw
movzbw
xchg
pop
mov
movzbw
pop
jmp
out
jns
mov
cli
cmp
adc
xor
sbb
paddb
add
insl
jo
push
adc
dec
and
pop
add
adc
and
popf
xchg
shll
imul
or
push
call
inc
adc
insl
iret
movl
imul
jno
mov
or
stc
cmpl
stos
adc
fstpl
sbb
xor
loope
xchg
out
xor
sbb
push
fcoms
decl
or
pushf
movw
lea
jmp
or
rcl
add
adc
or
mov
mov
push
pushf
pushf
push
test
jmp
out
jbe
mov
or
add
imul
popf
mov
aam
inc
xchg
dec
adc
repz
aaa
out
fdivrl
out
mov
ret
std
pop
iret
fwait
or
mov
outsb
xor
mov
stc
bnd
jnp
mov
mov
xor
dec
and
pop
and
adc
or
notb
fsubs
push
jp
incb
mov
xchg
ss
icebp
mov
shll
pop
jecxz
inc
cmpsl
iret
out
daa
xchg
iret
cmpsl
rclb
jns
popf
xchg
xlat
insl
aaa
movsb
pop
xor
cmp
icebp
xor
adc
lcall
pushf
aas
ja
orl
scas
push
outsl
pusha
outsl
inc
mov
int
sbb
stc
fsubrl
mov
or
add
out
jnp
mov
loop
hlt
in
in
pop
jae
cmp
andnps
jmp
cwtl
loop
jmp
stos
fsubr
pushf
icebp
mov
test
and
cmp
stc
cmp
jns
and
mov
xchg
repz
pop
subl
mov
jbe
mov
add
push
fdivrl
fildll
je
push
jl
aam
mov
adc
or
push
fs
inc
rcrl
setae
fists
rorl
jno
jmp
add
push
mov
or
pop
repnz
shlb
mov
push
adc
and
test
ret
lock
imul
jmp
jg
cmp
sbb
nop
loop
inc
sub
nop
mov
push
push
mov
ss
or
push
int3
negb
cmp
mov
lock
frstor
pop
dec
jbe
loop
and
mov
cmp
loope
push
dec
adc
mov
sbb
sbb
cmpsb
xor
or
mov
adc
jl
and
imul
imul
loope
cmp
loop
repnz
pushf
int3
loopne
push
aam
out
dec
pop
lods
pop
addl
and
cwtl
fimull
cmp
xchg
xor
pop
xor
jp
sbb
lods
icebp
sub
and
inc
sarb
fnstcw
jae
shrb
mov
fsubr
xchg
xchg
sub
or
mov
not
les
scas
shlb
cmp
jp
flds
inc
pop
ss
stc
push
jmp
push
daa
fwait
mov
inc
jns
fldenv
gs
or
lcall
xor
mov
lea
clc
pusha
cwtl
fdivrs
cwtl
int3
cmp
sub
inc
push
dec
decl
jl
jmp
inc
xchg
mov
cmpsb
lods
mov
fbld
jo
shll
push
jns
push
shr
xlat
mov
cltd
sbb
jmp
insb
push
aaa
add
ja
and
shrl
addr16
into
mov
icebp
call
enter
xchg
xor
add
and
inc
pop
enter
xor
decb
sbb
pop
movswl
ja
inc
push
dec
inc
dec
xor
cs
insb
add
and
mov
mov
incb
scas
lods
roll
subl
push
sbb
xor
and
or
sbb
jae
mov
fistps
stos
inc
sub
subb
cmp
and
jle
das
dec
es
rcr
xor
adc
ror
movsb
or
jne
loope
scas
pop
pop
pop
imul
mov
ds
sahf
push
into
fdivs
dec
pop
pop
idivb
pop
aaa
jge
lds
jno
frstor
adc
cmpsl
and
test
test
mov
cmp
and
dec
sub
sbb
lods
cs
lret
out
icebp
dec
inc
js
sub
cwtl
fsubrs
fs
and
mov
test
ret
daa
loope
out
loopne
add
cmp
push
add
jae
minps
pusha
out
sub
ss
mov
lods
fsubrl
cmp
lock
je
or
push
xlat
mov
in
inc
in
or
jbe
jmp
idivb
and
mov
fs
mov
jecxz
push
ficompl
jmp
mov
ret
mov
push
sahf
and
out
ja
jbe
and
mov
fs
iret
loopne
xchg
inc
jle
cld
out
mov
mov
andps
imul
mov
ja
mov
mov
mov
mov
mov
inc
movsl
jge
lcall
jmp
xor
adc
orl
and
pushf
or
xchg
std
mov
and
jp
cli
sub
pop
xor
push
mov
xchg
fdivp
lret
lahf
insl
sbb
pushf
dec
aam
imul
mov
popa
ret
mov
enter
aad
add
sub
cmpsb
in
test
adc
ret
test
push
push
loopne
and
test
add
gs
decb
aam
dec
mov
cmp
mov
lahf
imul
push
push
cmp
je
mov
int
test
mov
pop
jg
mov
jns
push
imul
dec
stos
mul
test
jle
data16
insl
push
out
dec
cltd
and
xchg
sbb
cmp
sbb
bound
cmpsb
dec
add
cltd
in
ss
mov
std
leave
mov
lahf
sub
pop
pop
loop
mov
dec
call
fistpl
jns
fcoms
aad
xchg
cmc
cmpsl
inc
xchg
cs
mov
fimuls
mov
or
jnp
mov
dec
mov
fs
jne
shld
bsr
sub
rcr
sub
rcl
mov
jmp
pop
xor
decl
cwtl
loopne
insb
test
inc
fs
hlt
cs
push
xlat
in
pushf
aam
push
dec
xchg
popf
or
mov
jo
outsl
fwait
in
lcall
dec
cmpb
out
pop
ss
mov
mov
xchg
xchg
leave
pop
jb
or
cwtl
pop
inc
insb
and
mov
cmp
ja
mov
xor
movb
clc
test
mov
decl
cli
data16
sbb
mov
push
jbe
xchg
sbb
mov
shll
rcrl
sbb
jo
ja
inc
xchg
insl
mov
hlt
and
mov
mov
cmp
inc
lcall
aad
shrl
push
pop
shlb
leave
add
fildl
shrb
cs
xchg
fstpt
inc
mov
loop
xor
push
inc
scas
lock
pop
sub
loop
mov
pop
vmovapd
or
insl
int
in
popf
icebp
jne
and
mov
loopne
cltd
pop
xchg
aam
outsb
dec
loop
rolb
ret
out
ret
cmc
push
test
push
or
jne
sbb
scas
fiadds
pusha
int
jae
cmp
push
aas
lea
int
aaa
mov
clc
stos
sub
ror
adc
xor
dec
pop
ja
cmpsb
adc
fadds
stc
push
lock
es
mov
cmp
ljmp
fmuls
cs
push
and
sub
call
add
ret
lea
xchg
and
jmp
hlt
fidivrs
mov
inc
xchg
jg
les
arpl
push
xchg
ljmp
pop
les
stos
push
cltd
in
inc
pop
dec
out
pusha
jno
lret
push
sub
push
mov
scas
xchg
ss
push
or
xchg
scas
push
adc
aas
cmpsl
pop
xchg
pop
pop
xchg
shrb
fildl
jp
sub
aam
dec
mov
and
jmp
cli
cmp
mov
stc
mov
or
mov
sub
negb
sahf
jbe
adc
adc
inc
sahf
testb
cli
repz
adc
mov
sub
scas
stos
add
push
mov
jl
imul
mov
test
repnz
pop
pop
inc
imul
scas
add
je
hlt
data16
outsl
xlat
adc
mov
mov
in
xor
mov
loopne
andl
pop
lcall
stos
jg
pop
cmp
inc
mov
mov
mov
mov
dec
dec
loop
adc
sbb
mov
mov
cmp
lret
or
pop
test
dec
sub
jge
inc
mov
cmc
push
es
out
daa
mov
std
jge
lret
pop
in
hlt
movsl
or
jecxz
or
aad
cs
popa
push
add
out
icebp
ds
dec
inc
mov
mov
xchg
mov
dec
in
xchg
dec
mov
cwtl
fadd
jbe
fcoms
jbe
jmp
jno
in
mov
mov
push
mov
lods
cmc
xor
clc
push
cmp
sub
push
pusha
clc
bt
ror
stc
test
stc
not
cmc
shr
pushf
call
jne
pushf
bswap
movb
cwtl
pushf
pusha
movsbw
mov
lea
pushf
pop
call
dec
cmp
sti
mov
ret
mov
jecxz
pop
ja
repz
or
jbe
add
pop
test
out
and
ss
push
mov
or
cwtl
movsb
negl
xchg
call
jmp
inc
xchg
hlt
cmp
cmp
adc
xor
cli
popa
stc
ds
lahf
fistpll
iret
int
leave
sub
mov
jle,pt
test
sbb
sti
dec
fwait
mov
outsl
lret
shlb
jno
add
mov
lea
in
dec
lods
cmc
and
cltd
jmp
or
lea
xorb
bound
jg
insl
mov
lea
icebp
mov
mov
xchg
into
push
lods
add
andl
xor
push
pop
mov
scas
ss
sti
sub
pop
imul
scas
addr16
xor
cmp
fdivp
jp
fidivl
push
and
aaa
sub
add
inc
js
je
jb
arpl
jae
lea
jne
jg
push
push
pusha
mov
mov
mov
pushf
movb
mov
lea
jbe
call
jmp
xchg
les
popf
aad
dec
xchg
rcll
popa
mov
aas
nop
pop
cltd
rcrl
mov
pop
bound
push
outsb
mov
pop
adc
das
arpl
negl
adcl
mov
jbe
add
cmp
mov
jnp
incl
rcrb
int3
in
icebp
ljmp
les
call
cmp
ljmp
icebp
adc
icebp
pop
xchg
roll
test
mov
xor
mull
sti
add
push
stc
cmc
shr
pusha
cmp
lea
jbe
pushf
movb
pushf
lea
je
jmp
push
sub
mov
cmpsl
mov
xor
pop
insl
mov
pop
pusha
popa
mov
les
pop
jg
decb
or
test
es
jecxz
in
in
out
push
ja
adc
out
popa
call
fdivrs
repz
scas
out
add
mov
jno
mov
repnz
outsb
icebp
push
dec
test
pop
mov
cmp
adc
repnz
dec
mov
call
or
fs
xor
cs
insb
add
lods
push
clc
or
sarl
push
mov
push
in
subl
jmp
inc
push
jg
sub
xchg
loopne
add
push
mov
icebp
push
sub
pop
inc
xor
push
gs
in
mov
xor
xor
add
push
in
dec
mov
cmp
fidivl
call
sub
jno
or
movw
rep
movw
jmp
test
mov
ret
arpl
and
inc
or
inc
aam
ret
outsb
test
fimull
ret
or
mov
push
je
jmp
add
scas
jecxz
mov
lahf
and
adc
inc
fbld
jecxz
inc
cmp
clc
or
sbb
push
mov
pop
pop
cmp
repnz
inc
jmp
pusha
push
jl
push
lods
cmp
xchg
mov
dec
add
jge
shlb
ret
xchg
push
movl
xchg
sub
or
pop
dec
mov
sub
stc
test
pushf
lea
je
test
call
lea
jne
sbb
rcr
and
cmc
mov
pusha
test
pushf
bt
cmp
mov
call
pop
pop
out
mov
push
aad
cmp
jo
sub
enter
ret
sub
jl
mov
stos
lret
in
movsl
lahf
out
ret
fidivs
dec
int3
ljmp
das
mov
daa
loop
rcrl
mov
sbb
fs
add
into
add
mov
in
mov
fbld
pop
ljmp
mov
popa
jmp
xor
xchg
cli
mov
mov
out
arpl
sbb
mov
movsb
xor
mov
in
xor
aam
mov
fcmove
aas
mov
inc
mov
fldenv
mov
pop
daa
call
rorb
scas
iret
das
fwait
decl
cmpsl
mov
mov
jns
mov
cmp
mov
hlt
lahf
mov
jl
movl
pop
test
jecxz
data16
loop
cmp
push
fnstsw
mov
push
xor
adc
test
sub
sbb
mov
leave
push
js
mov
xor
adc
mov
push
push
mov
mov
mov
and
pop
mov
xchg
fistps
loope
jne
in
test
xor
add
inc
imul
je
imul
rorb
jne
jmp
pop
lea
sbb
adc
int3
xlat
jne
xor
adc
fsubrl
adc
sub
movsb
pushf
aas
xchg
jns
lret
adc
mov
pop
jb
sti
cmpsl
cld
insb
sub
mov
icebp
out
or
push
loope
sti
jp
and
mov
or
xlat
sbb
testl
adc
daa
dec
and
rorl
insb
fmull
inc
pushf
lock
jecxz
sub
outsb
push
dec
xchg
ljmp
lods
or
lock
or
fwait
cld
pop
lds
loopne
xlat
pushl
jb
mov
jae
xchg
jp
mov
arpl
sub
sub
jg
fdivs
xchg
mov
and
cmpsb
lcall
test
in
cmp
fistl
inc
dec
fldt
hlt
pop
jl
push
xor
pop
or
adc
int3
ljmp
rcrb
mov
xor
ret
push
jp
push
sub
ret
ret
test
jbe
jns
out
push
xchg
mov
dec
inc
jecxz
mov
jns
arpl
sbb
xor
icebp
push
es
shll
test
loope
mov
out
insl
push
or
cmp
stos
negb
sbb
push
rorb
sbb
mov
stos
pop
jno
inc
stc
xlat
lahf
dec
aam
pop
arpl
sti
insl
mov
dec
movsl
fildll
pop
jge
rolb
les
insl
pushl
pushf
mov
lea
je
jmp
ret
mov
ret
aam
push
lods
fsubl
mov
loope
pushf
clc
push
test
movsb
lock
add
std
and
adc
mov
insb
adc
xor
sub
les
popf
hlt
icebp
add
or
mov
rcll
je
cltd
stos
and
jnp
or
mov
push
and
pop
je
dec
mov
loopne
in
movsb
clc
and
lods
sbb
ljmp
hlt
jo
mov
movsl
add
dec
gs
popa
addr16
outsl
js
add
sub
test
cmp
push
push
lea
jae
push
pushf
push
movw
lea
jmp
xchg
ret
mov
rcrl
das
outsl
shr
cmp
das
jno
loopne
aaa
ficoms
fcomi
into
push
jge
add
cs
jns
icebp
loop
and
or
cmpsb
mov
inc
fists
ja
mov
jp
fs
insb
icebp
xchg
sub
ja
xchg
mov
mov
fdiv
loope
or
hlt
jmp
ss
add
xchg
rorb
outsb
mov
test
push
cmc
xor
mov
add
xlat
sub
add
cmp
mov
ror
mov
clc
pusha
pushf
lea
jne
repnz
jmp
pusha
lods
and
pushf
clc
pushf
xor
cmp
sub
rcr
ror
pushf
not
not
not
call
sub
ret
lea
out
lahf
jmp
xchg
inc
fldenv
popa
and
adc
imul
fucomi
add
ss
add
pop
stos
test
jg
lds
data16
test
xor
out
enter
xchg
out
rcrl
xchg
adcb
jnp
je
mov
cmpsl
jp
idivb
push
cwtl
rcrb
clc
ss
out
je
divb
test
push
fs
scas
pop
int3
mov
sbb
fisubs
inc
and
or
inc
xchg
dec
xchg
je
out
ficompl
lahf
xor
mov
pop
pop
sar
mov
and
dec
mov
adc
mov
and
mov
cmp
jbe
mov
sub
adc
ds
sub
inc
cmp
inc
nop
dec
add
rol
cmp
mov
popf
xor
xor
cmp
sub
test
or
push
cwtl
inc
stos
repz
shl
dec
pop
insl
sbb
mov
stc
push
mov
adc
jae
stos
fildll
add
adc
push
cltd
inc
mov
sbb
cmp
pop
adc
jle
jmp
sbb
jmp
add
mov
add
sub
test
popf
out
and
std
xor
js
loop
dec
fiadds
mov
pushf
out
lods
dec
cmp
sub
es
nop
and
out
or
push
xor
cltd
cwtl
xor
mov
int
ret
out
and
jnp
out
and
roll
insl
cs
xchg
dec
movsb
jl
pop
fisubs
es
bound
ljmp
pusha
cltd
lock
ja
repnz
mov
sub
pusha
lods
gs
sbb
cwtl
push
dec
stos
repnz
mov
xchg
imul
jns
notl
jecxz
cltd
mov
les
mov
pop
loop
imul
mulb
jbe
repz
dec
orb
lds
les
cmp
push
loope
adc
jne
push
pop
dec
cmpsb
in
loope
sub
in
and
loopne
mov
and
xchg
loop
xor
lds
jbe
scas
pop
into
mov
js
rcrb
mov
push
fistpll
insb
inc
fwait
iret
je
rol
call
icebp
pop
lahf
in
loop
rcrb
jno
mov
rcr
cli
lods
stc
shl
stc
imul
jp
cmp
pushf
imul
mov
adc
or
out
adc
sbb
xchg
aaa
xchg
sbb
push
push
mov
lret
sub
pop
out
or
xor
push
not
movb
mov
dec
test
test
stc
pushl
cmp
movsbw
lea
lahf
jmp
inc
push
add
mov
or
and
jecxz
mov
mov
addr16
sub
outsl
in
xchg
fwait
sbb
sub
lret
sbbb
pop
or
mov
ja
mov
lahf
addr16
mov
mov
aam
mov
cmp
arpl
xchg
iret
push
loopne
dec
cmpb
dec
aas
int
lds
jge
cmc
mov
mov
and
mov
inc
nop
mov
into
mov
and
inc
std
out
cltd
iret
mov
mov
test
sub
add
push
stos
push
mov
mov
xlat
insl
pop
push
push
or
pop
add
or
xchg
mov
mov
aaa
cmp
les
fnstcw
xchg
mov
popl
aad
mov
xchg
enter
into
or
outsl
daa
pop
aas
lds
jo
xchg
adc
iret
mov
push
stos
jle
dec
push
movb
sbb
outsb
enter
js
push
pop
sub
test
pushl
mov
cltd
dec
enter
imul
fnstsw
mov
test
ss
lahf
pop
imul
cmp
movsl
or
test
mov
and
pop
ja
xchg
mov
and
popa
inc
int3
pop
mov
int
adc
and
in
and
xor
jecxz
pop
adc
pop
jns
or
loop
and
inc
add
test
pushl
adc
pusha
pushl
lea
jmp
sub
insb
leave
mov
xor
adc
gs
mov
loopne
xlat
xchg
cmp
addr16
mov
dec
xlat
std
repnz
shlb
xchg
push
jle
mov
push
ss
ret
inc
sbb
mull
cmp
inc
stos
test
dec
dec
dec
hlt
fstpl
test
sub
stc
pop
xchg
add
mov
lahf
aad
cltd
jecxz
arpl
in
js
pop
xchg
add
add
push
dec
outsb
sub
fstl
push
jge
cmp
call
mov
imul
sub
pop
mov
insb
cmp
mov
jl
dec
sbb
xchg
xor
mov
adc
dec
in
sub
jmp
sbb
cmp
rclb
jl
fstpt
lret
lea
or
lds
jnp
sti
clc
mov
decb
mov
stos
cmp
mov
cmp
fldt
sbb
sti
or
dec
cmp
stc
mov
or
insl
sub
pop
dec
mov
pop
fnstsw
sub
mov
fstps
mov
sub
cmp
cld
xchg
or
jno
outsb
jno,pt
xchg
jle
mov
lret
insb
add
push
pop
cmp
js
lods
or
pop
int
cmp
mov
sub
add
jns
pop
clc
imul
and
push
enter
fcmovbe
cltd
xchg
testl
aas
xchg
mov
xchg
xor
sbb
mov
nop
xor
notb
repz
lods
adc
jl
adcl
adc
jbe
cmpsl
pop
mov
cmpsl
lods
mov
cmpsl
dec
mov
push
stos
or
mov
cmp
xchg
push
dec
divl
xchg
jno
add
stos
sub
pop
cmpsl
push
es
inc
rorl
jmp
shlb
cmp
ss
jle
lcall
fisubl
push
xchg
cli
inc
jecxz
push
inc
loopne
push
cmpsl
clc
lea
lods
jbe
lds
cli
pop
addr16
adc
push
ds
pop
pop
dec
stos
sub
jae
add
popa
add
cs
xchg
lcall
das
int
jl
js
add
test
push
mov
fisubrl
mov
popa
pop
push
aam
pop
jb
aad
daa
or
pop
clc
cmpb
sub
or
ljmp
and
and
test
cmpsb
dec
add
add
adc
cwtl
and
push
jp
xor
jecxz
sub
cmpsl
inc
pop
mov
imul
addl
pop
adc
leave
xor
push
jge
cmp
movw
push
test
dec
test
pop
mov
out
add
add
stc
clc
add
cmpsl
sbb
data16
sbb
mov
push
arpl
sub
mov
inc
xlat
repnz
pop
xor
nop
or
inc
add
sarl
push
add
cwtl
mov
cmp
out
aaa
sti
enter
xchg
jle
fcomps
pushf
sub
xor
outsl
gs
lcall
cld
bsf
push
mov
add
sub
pop
aad
faddl
lods
inc
dec
adc
in
add
ds
cmp
push
sub
mov
ret
mov
cmpsl
clc
insb
cmovns
addb
cmp
cmp
add
pcmpgtd
xchg
mov
stos
xor
lds
insb
fdivrs
aas
push
push
shr
add
test
pop
xchg
or
mov
daa
ds
jns
cmp
mov
add
dec
adc
push
pop
mov
mov
dec
jb
sub
push
andb
cmp
mov
dec
push
add
nop
jbe
add
out
add
xlat
out
rcl
xlat
xor
mov
jnp
mov
lahf
arpl
cmp
adc
mov
pop
cmpsl
cwtl
clc
imul
lds
push
jno
sti
aam
sub
ds
xlat
xchg
xchg
clc
idivl
mov
jns
jp
sbb
push
mov
data16
dec
add
test
mov
filds
cmp
sbb
dec
sub
loop
xor
imull
outsl
mov
addr16
mov
daa
cmp
rolb
loopne
aad
pop
in
or
xlat
cmp
xor
addr16
ljmp
test
sub
push
lret
in
movsb
add
lcall
inc
jb
cmpsl
add
xor
xchg
xor
ficomps
pop
xchg
push
jge
or
inc
push
mov
out
cmpsl
jbe
rolb
test
and
lret
inc
inc
into
xlat
pop
out
cmc
addr16
fldl
xchg
test
stc
dec
pusha
dec
out
sbb
lahf
push
cmp
imul
cmp
xlat
jle
into
push
mov
ja
or
and
xorb
cmp
roll
xchg
inc
xorps
jl
clc
inc
xchg
pop
mov
outsb
es
inc
mov
cmp
addr16
xlat
rcl
testl
push
add
js
push
daa
xor
movsl
pop
xor
cmpb
ret
jns
push
mov
mov
cmp
sub
lea
loopne
jbe
add
enter
ja
addr16
adc
push
pop
es
xor
dec
mov
fidivrl
inc
ret
xlat
ja
out
mov
lods
mov
jg
pop
mov
cmp
adc
out
xchg
fildll
cmpsl
pop
imull
stos
xchg
xlat
push
pop
xchg
mov
lret
pop
into
add
adc
cmp
push
cmp
cld
xchg
mov
jae
ja
daa
mov
push
dec
insb
inc
adc
cmp
xchg
pop
mov
cmpsl
or
adc
sti
pop
neg
mov
cmpsb
adc
aas
push
syscall
inc
int3
mov
cmp
xor
add
mov
ja
inc
sub
mov
mov
xchg
cmp
ret
negl
add
insl
push
cmp
mov
cmp
sti
addl
sbb
stc
ja
inc
das
arpl
push
cmp
add
sub
pop
xchg
jg
fwait
add
aad
cmpsl
jbe
hlt
add
cmp
test
cmpsb
mov
daa
push
out
mov
and
pop
inc
cmp
xchg
aas
cmp
addr16
or
cmpsb
inc
add
inc
pop
test
mov
addr16
fcoms
mov
pusha
xlat
std
mov
push
jae
xchg
xchg
adc
out
clc
mov
cmp
jg
or
inc
fadds
inc
popf
mov
adc
stos
outsl
inc
push
jno
stc
ds
inc
cmpsl
std
ja
pop
mov
xchg
xchg
push
scas
dec
mov
push
push
adc
mov
jle
add
inc
mov
xchg
add
mov
jnp
movsb
stos
add
movb
mov
xchg
in
addb
add
and
xchg
cmpsb
cmpsl
bound
inc
scas
cmpsl
push
push
pop
popf
pop
loope
or
mov
enter
mov
push
add
xorl
pop
repz
cmp
das
loopne
lds
in
jbe
aas
mov
sbb
xchg
pop
add
or
movb
inc
add
sbb
inc
js
fs
jns
mov
cmpsl
andl
gs
lds
imulb
xor
ret
push
jno
andb
js
mov
xlat
mov
mov
aas
or
add
adc
pop
cmp
mov
pop
add
xchg
push
add
pop
cmp
push
ja
and
vmwrite
incl
andb
push
xchg
addb
ja
sbb
addr16
pop
and
mov
ja
and
inc
lret
pop
add
mov
inc
nop
pop
add
test
pop
cmp
aas
xchg
jne
jno
add
stos
gs
out
push
sbb
incl
fnstcw
out
pop
enter
inc
inc
es
getsec
ss
add
cmpsl
sti
pop
sti
or
add
movb
sbb
cmp
inc
or
mov
mov
mov
mov
shll
add
adc
mov
ret
es
aas
fnstcw
fsubrs
int3
xchg
addr16
andb
sbb
inc
push
addl
cmp
mov
lock
scas
imul
inc
inc
xchg
jno
gs
cmp
cmp
cmp
cmpsl
ds
sbb
ret
flds
ja
cmpsl
jmp
push
push
mov
decb
add
cld
pop
mov
nop
xchg
cmp
cmp
jb
in
cmp
movb
adc
ds
mov
dec
inc
js
out
inc
sbb
mov
mov
outsl
mov
and
pop
pushf
mov
dec
bnd
jo
dec
inc
pop
mov
fiadds
lret
loopne
jno
sti
int3
imul
arpl
inc
test
adc
bound
bound
mov
push
pop
xor
cmp
sub
pop
popa
pop
inc
inc
ja
pop
jl
cmp
cwtl
stc
fst
sbb
imul
pop
jle
aas
cltd
xor
mov
outsb
dec
xchg
sbb
pop
sahf
cmp
es
jmp
cmp
cmpsb
pop
fcmovnb
sub
ds
daa
cmp
and
xor
add
xchg
aas
mov
or
push
mov
add
push
ss
negl
addr16
sbb
in
cmpsb
sbb
jl
lea
jmp
lret
clc
inc
loop
jns
add
movsb
mov
pop
push
push
mov
dec
notb
or
add
push
xchg
mov
sub
insb
es
and
or
cmp
iret
xlat
mov
incb
jo
incl
cwtl
push
sbbb
mov
scas
test
push
cmp
movb
mov
push
or
pop
push
add
mov
cs
out
pop
xchg
adc
cmp
pop
xor
loopne
mov
test
jmp
cltd
inc
cli
inc
inc
jecxz
jne
add
xor
pop
aaa
mov
xchg
pop
push
push
inc
xchg
xor
aas
mov
pop
jecxz
add
je
test
dec
ja
addb
pop
notb
ds
lock
shll
cmpsl
pop
pop
lcall
bound
js
dec
add
pop
xlat
push
inc
es
xchg
gs
mov
pop
insl
add
mov
pop
pop
leave
aad
xchg
push
cmp
xor
inc
mov
pop
or
js
out
mov
mov
xchg
and
sub
pop
mov
in
xchg
out
push
push
adc
fstps
and
xor
sahf
mov
cmpsl
dec
dec
mov
pop
aad
inc
ja
out
jg
popfw
add
pop
add
push
pop
aaa
inc
xor
insb
mov
ss
inc
pushf
jae
js
add
imul
push
notl
fiadds
movsl
add
pusha
xor
andb
ja
lret
pop
pushl
incb
pop
lds
addr16
lods
xchg
loopne
roll
xchg
inc
lds
enter
pop
jp
pop
push
cmp
xlat
les
into
loope
xchg
sti
ds
jg
pop
sub
jecxz
cmpsb
not
fsts
xor
inc
addr16
arpl
xchg
add
push
push
pop
ss
ljmp
pop
aas
mov
scas
and
aas
cmpsb
movsb
hlt
outsl
push
sbb
push
jle
mov
or
out
bound
pop
add
sub
mov
ret
fiaddl
jns
push
pop
dec
fprem1
lret
inc
testl
xlat
cmp
fadds
jbe
es
add
xor
cmp
ret
push
inc
pop
cli
outsb
test
stc
dec
aad
and
pop
cli
daa
add
add
rcrb
xlat
das
pop
xchg
aaa
inc
sub
xchg
out
and
inc
daa
pop
add
ret
data16
out
jne
xchg
mov
mov
arpl
addr16
xchg
in
cmp
cmpsl
cmp
mov
add
outsb
ss
and
xor
in
ret
dec
mov
pop
pop
nop
divb
out
mulps
int
xor
mov
je
pop
and
mov
sbb
jp
maskmovq
testl
mov
and
ss
rolb
adc
cmpsl
roll
pop
lcall
inc
daa
xor
sbb
mov
add
add
cmpsl
stos
pop
inc
xchg
pop
mov
stc
popa
sub
sbb
cmp
xchg
sub
in
movsl
addr16
push
out
fadds
cmpsb
cmp
das
mov
fnstsw
test
xlat
cmpsb
xlat
fsubrl
scas
jge
das
fisubs
cmpsb
add
jnp
movsb
jbe
arpl
in
sti
pop
std
mov
loope
mov
pop
xchg
adc
inc
cmp
xor
fiadds
jns
push
aaa
push
in
arpl
stos
xchg
fnsave
add
xchg
data16
adc
or
incb
xchg
cmpsb
xchg
mov
sbb
popl
adc
pop
icebp
out
cmpsl
jp
pop
gs
jg
adc
adc
inc
sbb
adc
sti
mov
pop
dec
ja
pusha
cmp
std
push
cmp
call
mov
cmpsl
int3
cmp
adc
xchg
data16
dec
mov
mov
sbb
cmp
das
jnp
test
xchg
xchg
xchg
adc
and
adc
jns
inc
ja
idivb
movsl
dec
and
cmpsb
push
fs
cmpsl
pop
roll
in
notb
pushf
pop
das
ja
add
sti
out
jns
mov
inc
add
add
cmpb
aas
test
clc
adc
jae
cltd
cmpsl
pop
adc
fbld
cmp
jp
push
and
pop
inc
mov
cmpsl
jb
xchg
xor
pop
mov
cmp
test
cmp
jbe
es
leave
mov
fs
loop
fwait
adc
or
and
sbb
out
inc
sub
movl
mov
inc
ds
sbb
adc
sti
pop
cmp
ds
clc
outsl
pop
lods
outsl
pop
adc
addr16
rol
cmp
push
pop
dec
xchg
es
andb
dec
mov
xlat
cltd
jl
sti
sarb
cmp
and
sbb
js
in
daa
xchg
hlt
mov
inc
xchg
enter
add
xchg
pop
mov
pusha
in
clc
pop
out
cmpsl
insb
inc
mov
cli
in
xchg
rcrb
jecxz
loop,pt
jecxz
pop
mov
push
gs
dec
inc
fldl
cli
sti
jle
stos
cmp
ds
fs
xchg
pop
push
mov
out
fimuls
jecxz
cmp
jle
sti
or
ds
add
rorl
or
push
test
cmpb
add
pop
add
xchg
sbbl
sub
lret
movsl
sbb
outsl
jg
jecxz
sbb
roll
cmp
je
cli
es
add
mov
pop
test
push
jg
adc
mov
incl
add
or
insb
pop
dec
or
fnstenv
dec
mov
cli
sub
test
clc
pop
mov
inc
rcl
push
mov
inc
lcall
pop
js
mov
repz
lret
mov
inc
sbb
cmp
fucom
bound
pusha
xchg
inc
or
loop
add
sarb
jge
insl
fs
jl
sbb
iret
pop
inc
imul
outsb
insl
bound
add
imul
je
cmp
setae
fcoms
push
xchg
lret
pushf
pop
mov
inc
dec
mov
scas
mov
lret
in
pop
nop
loope
adc
ja
push
gs
xchg
xor
sbb
or
js
jge
sti
mov
cmp
cmp
inc
mov
inc
aam
inc
mov
xchg
cmp
inc
faddl
jne
add
add
mov
loopne
gs
inc
jl
sub
jb
in
cmp
popa
adc
mov
cmp
or
imul
jp
testb
add
mov
ja
cmp
int
dec
push
or
outsl
in
ds
pushf
jge
xor
ret
jg,pt
or
sbb
inc
add
inc
pop
inc
sbb
cmp
mov
clc
lea
inc
mov
cld
xchg
movsl
push
push
pusha
lahf
and
add
jo
cmc
adc
shll
xchg
jp
inc
cmp
imul
mov
push
cli
sbb
push
and
sbb
jae
cmp
test
mov
pop
ds
int3
cmpb
add
dec
jno
cltd
shr
mov
cmp
xor
ljmp
inc
addl
cwtl
leave
repz
pusha
mov
mov
cmpsb
xchg
loopne
nop
or
adc
adcb
adc
adc
pop
and
mov
jns
je
jb
adc
js
mov
push
xchg
mov
mov
out
push
xchg
mov
or
testl
or
mov
or
daa
je
inc
mov
ret
xchg
test
xchg
adc
push
mov
dec
dec
mov
mov
pop
cmp
push
xchg
pop
iret
jbe
add
add
out
sbb
pop
fs
pop
jge
ret
pop
addr16
or
es
pop
dec
divl
mov
push
js
add
mov
pop
mov
addr16
mov
mov
cld
pop
loope
sub
xor
jecxz
sub
clc
mov
dec
cmp
pop
add
lret
push
pushf
mov
sbb
pop
push
adc
xchg
jnp
pop
fidivrs
aas
imul
incb
cmp
pop
mov
push
ja,pn
sub
sub
test
mov
or
cmp
lret
sub
sub
mov
mov
pusha
adc
sub
pop
adc
scas
andb
pop
mov
add
ja
cmpsl
lods
aas
ja
mov
ljmp
push
std
jns
cmp
jg
jp
pop
jb
dec
mov
pop
imul
cmpsb
add
aas
fisttps
xchg
sub
cld
dec
js
jp
mov
addl
mov
pop
sub
sbb
ficompl
mov
mov
jg
pop
xchg
cmpsl
ja
outsl
lcall
mov
jnp
and
xlat
inc
mov
sub
pop
sarl
test
sbb
jae
cld
cmp
cmp
xchg
mov
jae
mov
xchg
fadds
lret
pop
mov
dec
rclb
ljmp
xchg
mov
pusha
or
or
jge
fs
jns
dec
xor
incb
jo
stc
pop
mov
xchg
scas
jge
xchg
pushf
fisttpl
or
gs
pop
cmpsl
cmp
outsl
jno
stos
mov
pop
cmp
daa
pop
xchg
dec
pop
adcb
ja
lock
cmp
dec
cs
xor
xchg
sbb
ja
mov
jns
mov
fdivrp
clc
loop
mov
cmpsb
pop
aam
daa
jns
cwtl
cmp
outsb
pop
mov
inc
sbb
cmpsl
orl
add
mov
inc
mov
loope
rclb
and
pop
cmp
iret
mov
mov
pop
ja
test
inc
mov
es
mov
stc
sbb
pop
pusha
mov
cmp
cli
add
das
cmpsl
or
pop
pop
push
xchg
scas
js
cmp
cmpsl
add
jo
dec
aam
xchg
arpl
mov
mov
or
rorb
test
out
pop
pop
cmp
pop
pop
cmp
mov
cmpb
test
cmp
cmp
clc
push
push
fdivrl
sbb
fists
cmp
mov
sub
cmp
adc
cmp
mov
loop
sub
or
in
xorl
cmp
out
dec
mov
bsr
stos
aam
cmp
cmp
mov
sub
cmc
mov
lret
mov
mov
fimull
or
push
cmp
mov
inc
or
js
jo
sub
pusha
mov
jno
sub
incl
mov
push
mov
pop
xor
lds
js
mov
jl
js
sbbl
adc
lret
ja
jnp
push
mov
ja
jnp
loope
loopne
sarb
mov
dec
mov
mov
xor
in
stos
pop
idivl
inc
lret
mov
mov
mul
cwtl
pop
testl
push
or
test
jae
cwtl
test
shlb
cltd
mov
mull
sbb
sbb
test
mov
sahf
xor
repz
das
idivl
mov
rol
xchg
sub
in
mov
jg
jmp
xlat
adc
daa
cltd
popl
or
mov
push
lret
mov
fwait
mov
mov
mov
mov
mov
push
xchg
inc
cmp
push
mov
inc
mov
imul
cmpsl
push
repnz
sarl
les
sub
addr16
mov
xlat
pop
gs
sbbb
int
pop
mov
mov
mov
daa
aas
das
push
and
or
sub
pop
mov
push
jno
mov
std
mov
call
fisttpll
lock
jecxz
lcall
prefetcht1
cmp
std
cmp
pushf
dec
loope
pop
inc
pop
sbb
xlat
mov
scas
pop
negb
sbb
frstor
cmp
shll
push
scas
cmpsl
lea
mov
out
mov
aam
jecxz
scas
cmpsl
cwtl
sub
add
js
lahf
push
pop
mov
xlat
push
je
mov
repnz
push
mov
or
cmpsl
daa
xchg
and
pop
cmpsl
leave
mov
arpl
mov
mov
add
pop
mov
out
mov
xlat
mov
xchg
daa
xor
xchg
cmpsl
stos
pop
movsb
mov
mov
movb
imul
test
jne
insb
push
repz
cmpsl
cmp
jo
cmpsl
mov
stos
sub
cmpsl
ret
cmpsl
imul
mov
out
xlat
push
bound
insl
lea
sti
scas
cwtl
sbb
jecxz
adc
push
stc
mov
dec
std
inc
jb
std
icebp
mov
inc
fistpll
dec
cmp
inc
mov
mov
inc
shrb
add
jnp
jo,pt
dec
cmpsl
mov
in
cmpsl
out
add
gs
movsl
jmp
sbb
inc
mov
mov
adcl
and
sub
ss
js
jmp
xchg
inc
mov
andb
pop
adc
pushw
mov
sub
js
xor
push
push
mov
mov
mov
sahf
test
or
cmpl
xchg
mov
push
inc
repnz
jg
addr16
push
call
push
inc
mov
rclb
mov
mov
out
jg
mov
push
das
or
test
inc
insb
or
dec
cmp
fstps
push
pop
cmp
mov
mov
push
ds
mov
add
dec
mov
xlat
sti
or
cwtl
jnp
and
scas
dec
fnstsw
sbb
cmp
fistl
jg
or
jge
fstpt
sbb
dec
addb
mov
ret
inc
insb
stos
addb
loopne
mov
adc
lods
in
push
in
or
xlat
or
cmp
push
int
inc
fimuls
mov
inc
inc
jge
fbstp
mov
pop
mov
jl
sbb
xlat
inc
jns
sbb
sub
push
mov
cmp
mov
out
stos
xchg
cmp
jo
jo
pop
and
or
psadbw
add
mov
das
fisttpl
dec
test
jge
mov
stc
or
test
aas
jnp
sbb
popa
stc
sti
cld
out
pusha
or
pushf
adc
mov
add
fld
pop
jbe
jb
lods
ficoml
insb
sub
jns
clc
sbb
mov
pop
dec
ret
pop
stc
lret
mov
addr16
pop
mov
xchg
inc
inc
adc
clc
push
inc
cwtl
cltd
push
push
clc
dec
fsts
arpl
jns
pop
adc
arpl
xchg
adc
jb
xlat
ja
pop
repnz
in
mov
imul
bound
jmp
cmp
jge
mov
mov
andl
sar
jl
cmp
stos
ret
push
mov
pop
cmp
push
addr16
or
mov
sub
stos
ja
out
sub
mov
sbb
sub
aam
mov
stc
insb
xor
stc
adcl
movsb
insb
mov
push
mov
and
mov
in
pop
js
jo
rorl
or
jns
mov
jnp
cmpb
mov
addr16
jmp
loopne
js
call
ja
jne
pop
add
xchg
lods
jge
add
in
add
jge
ja
or
or
pop
fnstsw
mov
xchg
aaa
add
ds
imul
inc
or
sti
ja
add
inc
mov
pop
pop
call
pop
mov
jmp
sub
mov
test
mov
stc
sbb
sbbl
insb
mov
xchg
in
aam
pop
int3
mov
mov
rcrb
push
cmp
lcall
sti
jns
push
add
dec
sub
jmp
bound
mov
paddw
mov
adc
cmpl
mov
enter
inc
sbb
paddw
push
xchg
mov
xor
sti
jge
add
ret
and
jo
cmp
dec
insb
lret
cmp
outsb
decb
adc
mov
movsb
ja
xor
mov
stos
ja
dec
outsb
ja
add
std
jecxz
sub
sarb
jge
cmp
jns
enter
sub
pop
sbb
cmpsb
add
mov
fisubl
mov
mov
ja
sbb
jbe
insb
lea
mov
jge
sub
das
pop
out
mov
fimull
mov
ja
cld
add
int3
pop
ja
mov
shr
mov
aas
sub
imul
pop
mov
cmp
mov
insb
cld
out
fisttps
in
loopne
mov
test
push
push
mov
cmp
ja
aaa
jle
pop
push
sbb
inc
in
mov
pusha
sahf
jnp
sub
mov
idivl
fsubrl
mov
inc
pop
addl
dec
sbbb
mov
cmpl
orl
pop
adc
in
or
adc
repz
nop
mov
sub
cmp
inc
sbb
sub
sbb
jg
add
pushf
arpl
fwait
add
lret
scas
iret
repz
mov
frstor
add
cmp
or
jl
out
push
ret
sti
jl
lock
add
ficompl
je
sub
jle
and
insb
xchg
ret
idivl
and
adc
add
inc
mov
mov
dec
dec
mov
dec
sbb
notb
das
testl
xchg
in
aas
pushf
add
lret
sub
cs
inc
pop
mov
repnz
jg
cmp
sbb
out
pop
mov
mov
sub
mov
cmp
rcll
mov
mov
fistpll
jmp
fstpt
ja
mov
mov
fidivrs
sbb
add
inc
adc
cmp
fstpt
jns
rol
mov
cltd
adc
mov
jo
pop
pop
out
push
pushf
sub
xlat
shrb
cmp
or
lret
mov
pop
ds
insb
mov
gs
std
das
lcall
inc
add
test
sbb
dec
fimuls
lds
sbb
mov
pop
mov
pop
ds
in
mov
pop
ss
sahf
mov
xorb
pop
adcb
ja
mov
sbb
mov
out
adcl
xchg
pop
mov
or
sarl
and
mov
mov
add
ds
sbb
repz
cmp
xchg
inc
inc
ds
fdivs
jg
inc
mov
cwtl
cmpsl
mov
pop
or
dec
out
int
pop
lret
jnp
cmp
mov
mov
xchg
mov
mov
inc
js
mov
pop
jnp
dec
lods
outsl
add
xlat
lret
inc
jge
test
jbe
adc
jmp
xchg
xchg
sbb
jnp
stc
inc
mov
adc
es
ja
repz
hlt
das
sbb
lea
pop
mov
fwait
mov
sub
push
inc
gs
push
ds
lret
cmp
sbbb
mov
mov
daa
sbb
aam
jno
sti
inc
fwait
mov
mov
mov
mov
rolb
aad
cmp
testb
in
push
push
inc
mov
data16
data16
mov
cltd
pop
test
pop
lcall
pusha
inc
cmp
mov
mov
testl
fistpl
sbb
mov
xor
pop
cmp
fstpt
sbb
or
addr16
adc
xor
aaa
push
out
es
lods
sti
sbb
xor
mov
insl
pop
pop
sarl
inc
cmp
sbb
add
add
push
std
mov
xchg
dec
or
or
mov
add
add
push
scas
cmp
xorl
sbb
or
ja
pop
insl
mov
lahf
cmp
mov
cld
mov
orl
mov
mov
repz
pop
fidivrl
jl
cltd
mov
or
jp
jl
lahf
add
jge
cmp
addl
sahf
das
lea
sbb
les
mov
add
shld
out
andb
fwait
mov
aaa
test
decl
addb
pop
jge
pop
fdivrl
xchg
bound
in
cmp
loopne
ss
stos
cmp
mov
cmp
ficompl
jg
mov
mov
js
push
mov
lahf
mov
mov
stc
sbbb
cmp
dec
loop
popa
jg
inc
jp
jg
imul
cmp
push
jle
mov
popa
and
cld
lcall
jp
roll
flds
popa
decb
in
outsl
cld
mov
sti
cli
mov
dec
or
jns
rorb
cmp
sbb
cmp
clc
cmp
mov
mov
sbb
mull
pop
jmp
js
lods
in
mov
cmpsl
cwtl
mov
fwait
mov
cli
pop
out
cmp
pusha
ja
add
pop
jne
lods
adc
dec
xlat
dec
pop
out
mov
mov
movsl
sub
fcomps
cmp
lcall
mov
cld
fcoml
cmp
xorb
cwtl
dec
inc
jns
nop
inc
sbb
adc
mov
xor
lock
fcomps
mov
loop
sahf
adc
pop
push
loopne
mov
adc
sti
xchg
in
ret
cwtl
mov
jnp
imul
xchg
and
push
outsl
sbb
cmp
movsb
fnclex
sarl
sub
cmp
nop
or
add
arpl
insb
mul
xorb
sbb
push
pop
mov
push
aaa
mov
xchg
mov
sbb
xchg
pop
dec
inc
mov
add
or
rorl
sbb
jg
jg
rolb
xchg
pop
and
add
add
imul
inc
push
outsb
popa
mov
sbb
pop
fsubrs
cmp
test
push
sbb
sbb
sub
lea
pop
or
jecxz
cmp
subb
loope
inc
insb
jmp
mov
and
cld
sbb
mov
inc
mov
jg
fisubs
jp
fs
mov
inc
lods
xlat
out
cltd
add
outsb
or
jl
mov
inc
mov
fsubr
sbb
negl
jle
xchg
adc
sbb
fdivl
push
lods
add
lods
inc
add
fsubs
cmp
std
mov
sbbb
mov
sbb
cmp
jnp
or
xchg
aam
out
or
jmp
push
pop
push
sbb
dec
mov
or
inc
aas
lahf
iret
mov
pop
push
pop
sti
xor
pop
mov
xchg
cmp
pop
idivl
je
mov
pusha
inc
lcall
pop
out
mov
loopne
fcompl
sbb
mov
cwtl
sbb
inc
insl
cmp
popf
mov
adc
dec
and
sti
sahf
adc
cmp
pop
rorl
push
sarl
dec
std
push
jnp
pop
dec
xor
add
xchg
xlat
inc
std
outsl
or
jle
xlat
mov
stos
mov
xor
dec
inc
xor
cs
insb
add
stc
xor
clc
clc
clc
sub
clc
ror
pushf
not
jmp
pusha
mov
mov
pushf
lea
jmp
dec
adc
xor
pusha
pushf
or
mov
cld
and
xchg
repnz
in
sub
mov
shl
sub
adc
stos
cmp
fndisi(8087
das
sub
test
sbb
insl
lods
push
pop
rcl
mov
and
cmp
imul
push
cmp
add
push
pop
inc
pop
scas
jnp
mov
es
and
test
sbb
out
pop
clc
add
mov
aam
leave
mov
sbb
fcompl
pushf
sarb
mov
xchg
js
cmp
leave
outsb
and
jns
dec
xlat
insl
fdivrl
add
rclb
loopne
jns
xchg
test
jno
mov
fnstsw
aam
jns
dec
mov
push
xchg
nop
js
fldl
pop
loop
fwait
mov
int3
and
push
push
pusha
jge
jmp
out
hlt
rcrl
bound
or
testb
addr16
movsb
and
push
mov
out
mov
xorb
dec
mov
sub
loopne
mov
sti
insb
pop
pop
adc
or
call
mov
xchg
pop
cld
rol
push
xchg
nop
hlt
int
int
nop
clc
cmp
test
dec
xor
jecxz
into
ljmp
mov
lret
out
inc
incb
adc
movsb
mov
lret
shrl
inc
popa
out
mov
and
mov
and
sub
jg
mov
test
mov
add
arpl
fs
xor
lret
daa
sbb
cld
cs
stos
fsubrs
jo
enter
fstpt
std
xor
aad
bt
pushl
test
cmp
mov
lea
ja
pusha
push
pusha
imul
test
movb
add
pushf
pushf
pushf
movb
lea
jmp
jmp
dec
push
shll
mov
lret
pop
movb
xor
test
orl
popf
jbe
call
mov
mov
mov
iret
test
adc
mov
add
pop
stc
sbb
mov
divl
mov
xchg
pop
xchg
loopne
lds
icebp
add
dec
pop
pop
bound
xchg
int
in
data16
jo
and
push
pusha
sahf
jp
and
xchg
adc
jns
mov
lea
jb
cmc
cmp
cmpb
pusha
lea
jne
movsbw
mov
clc
pusha
add
pushf
call
sbb
movsb
xor
xor
incl
scas
xlat
notl
insb
es
push
pop
mov
ja
test
ret
add
xor
icebp
push
scas
les
jp
fwait
add
push
xchg
rolb
fidivrs
popf
mov
and
insb
jbe
dec
test
jmp
xlat
into
cmpsb
fdivrs
popf
out
ret
mov
mov
out
clc
cmp
xchg
push
push
pusha
push
fwait
sti
cmp
or
imul
out
dec
mov
add
test
push
jg
dec
xchg
push
nop
push
out
jle
ds
lret
mov
add
rorb
call
xchg
xchg
pop
xor
mov
dec
adc
push
fisubl
imul
sub
sub
insl
jae
mov
sub
loopne
jns
push
sub
int
sub
imul
xchg
ljmp
pop
scas
add
inc
cmpsl
adc
lcall
cmp
and
movsl
inc
cmp
fs
je
js
cmp
add
bt
cmp
cmp
pushf
mov
lea
jb
pusha
cmp
pushf
pushl
movw
lea
jae
or
shrd
mov
bt
adc
shl
rcl
mov
sub
mov
cmp
push
call
mov
repz
notl
sbbl
xchg
xchg
xchg
sti
sbbl
xor
cld
or
sbb
les
adc
out
and
mov
push
ret
xchg
mov
lret
aad
cmpsb
add
or
push
sbb
pop
leave
ret
fs
jno
dec
js
adc
add
xchg
loope
push
sub
cmp
push
and
add
dec
jnp
adc
lods
lret
add
lods
sti
xor
jmp
dec
ja
inc
cmp
or
cltd
shll
popf
push
and
daa
push
call
out
lcall
pop
sbb
out
shlb
adc
scas
out
frstor
and
pop
imul
inc
inc
in
ljmp
aaa
sub
adc
xchg
lock
fidivs
xchg
ljmp
js
cli
mov
pop
repz
stos
repz
jae
pop
push
loope
and
pop
mov
fcomps
call
cmp
mov
sbb
adc
push
jbe,pt
inc
jp
les
int
loopne
stos
imul
inc
sub
stc
int
inc
pop
adc
mov
pop
and
and
jns
rorb
in
in
int3
in
xchg
pusha
pushf
lods
stc
dec
lds
add
or
iret
fisubl
bound
sbb
or
pop
pop
fwait
icebp
cmp
dec
mov
es
dec
xchg
push
dec
adc
mov
mov
xor
adc
sahf
cli
dec
mov
daa
mov
ja
jbe,pt
and
fxch
cmp
mov
add
pop
mov
out
das
cwtl
mov
inc
ds
pusha
push
jl
popl
mov
fwait
pop
fs
inc
push
ret
xchg
sahf
xchg
aad
cld
cmp
cld
push
test
sub
lods
roll
mov
mov
mov
or
dec
mov
fimuls
arpl
mov
pop
flds
sbb
mov
mov
sub
jb
or
push
out
addr16
test
sbb
push
popf
and
leave
ss
out
pop
dec
aam
push
xchg
aad
testb
inc
mov
out
mov
push
adc
sarl
imul
ljmp
xchg
in
int
push
inc
sbbb
cld
dec
scas
mov
das
xchg
mov
push
jge
loope
pop
dec
jecxz
icebp
int3
jae
add
jne
call
lods
cmc
inc
pop
popf
shrl
test
add
adc
ss
loope
ds
cld
int3
lds
enter
mov
mov
ret
jns
repnz
sub
pop
ret
mov
mov
adc
addr16
pop
xchg
test
xorb
call
loope
cs
test
hlt
sub
test
dec
sbb
mov
icebp
sub
xor
test
sti
mov
dec
cmpsb
in
ds
lcall
pushf
out
jnp
xchg
repz
mov
adc
into
es
and
and
jp
dec
test
mov
cltd
test
jge
mov
rcll
and
adc
out
sbb
in
sub
test
mov
stos
repz
xlat
nop
cmp
popf
xchg
fbld
xchg
jg
xor
push
mov
ss
sub
movsb
adc
xchg
adc
cmp
sti
sbb
pop
gs
cmc
inc
xchg
popa
in
into
inc
dec
cmc
pop
mov
cmpsl
push
push
xor
xor
fs
insb
add
push
inc
push
dec
xor
cs
insb
add
std
pop
mov
inc
jno
loope
popf
lds
addr16
sti
test
or
scas
jle
cltd
dec
mov
mov
bound
data16
inc
nop
fldenv
loopne
push
lods
jmp
xchg
fisttpl
stos
mov
icebp
cwtl
add
dec
loopne
ffree
lcall
fcomip
pusha
les
insb
sub
je
movsl
sub
jg
jns
dec
fidivs
fisubl
jo
push
loopne
loop
repnz
mov
fldenv
aam
and
sbb
daa
mov
out
imul
xchg
sti
mov
movzwl
btc
bswap
mov
stc
stc
test
add
pushl
jmp
call
movl
jle
pushf
movl
push
lea
jmp
mov
dec
pushf
ror
push
xor
push
dec
pushf
stc
not
jmp
rol
ror
ror
bt
push
shl
mov
rcr
btc
shrd
daa
sub
pushf
aas
mov
add
btr
clc
push
aam
push
pushf
pusha
not
shl
mov
or
bt
mov
push
bt
stc
pusha
test
jmp
hlt
ss
cmp
cmp
in
add
cwtl
hlt
ds
mov
push
ds
xor
jns
int3
sub
push
dec
mov
adc
push
xorl
sar
fdivs
add
dec
aad
push
pop
scas
sbb
arpl
cmp
push
pop
fs
pusha
test
out
rcl
sbb
stc
sbb
lea
inc
adc
arpl
aaa
gs
cmc
or
jg
pop
jbe
xchg
mov
aad
test
inc
lods
stc
sub
cmpsb
imul
sbb
aad
push
pop
lahf
push
test
or
pushf
xchg
mov
cmpl
loop
lahf
pop
xor
and
lcall
push
mov
mul
in
adc
mov
nop
in
aad
and
mov
mov
add
mov
jecxz
aad
xor
sbb
test
loop
jbe
or
mov
pop
inc
std
cwtl
loopne
daa
call
or
leave
add
into
in
lret
repz
loopne
mov
push
and
add
dec
imul
imul
movsb
or
lds
jno
addb
lret
icebp
out
ds
lds
fisubs
ljmp
or
fdivrl
sub
insl
pusha
add
fwait
cs
push
je
imul
sarb
add
stc
push
arpl
cs
jl
addr16
arpl
jmp
sbb
out
adc
mov
pop
jo
in
inc
jecxz
mov
cmp
xor
mov
add
mov
fwait
loope
mov
push
dec
sub
push
or
dec
insb
jge
push
xchg
movsb
add
lret
or
scas
sbb
mov
or
shl
leave
js
sub
xchg
fldl
xlat
movlps
xor
xchg
xor
mov
pop
mov
cmpsb
mov
repz
sub
outsl
cli
push
test
add
add
or
sbb
dec
inc
test
lods
loope
and
mov
cwtl
sbb
cld
in
sbb
sub
jb
in
and
sub
push
shll
jb
rcrl
mov
shr
push
mov
add
lds
aas
in
add
inc
dec
je
or
cwtl
test
ljmp
sbb
jp
push
stc
mov
test
jnp
add
std
jno
inc
add
inc
xchg
or
push
scas
push
fldl2e
mov
les
clc
sub
fdiv
fsubrl
pop
test
pop
jecxz
js
lret
fbld
mov
std
rolb
jns
pop
repnz
roll
push
mov
and
push
push
sti
insl
mov
xchg
loopne
int3
int3
sahf
push
inc
aaa
fimuls
ds
out
add
ss
pop
sub
push
pop
jecxz
lods
rcrb
cmpb
pop
mov
jne
inc
enter
xchg
adc
dec
xor
jae
repz
shll
mov
fcoml
mov
out
adcb
insb
lret
popf
movsb
sub
vmread
imul
loop
ret
aam
in
mov
das
add
push
inc
mov
fwait
jno
sub
pop
js
pop
mov
sub
push
movsb
subb
mov
shll
mov
ret
fistl
jb
mov
mov
dec
daa
xchg
lods
fdivs
stos
stos
negb
jmp
or
nop
pop
or
loop
mov
stc
cmp
lret
jmp
test
fldenv
and
cmp
fldenv
test
loopne
daa
cmpsb
inc
mov
ljmp
mov
std
pop
mov
dec
and
sbb
adc
jo
sbb
ds
push
imul
xor
jle
out
push
fwait
dec
cmp
mov
add
or
cmc
push
push
pop
movsl
jle
xor
mov
xchg
mov
bound
mov
pop
lcall
loopne
inc
dec
scas
mov
cmpxchg
aam
out
sarl
imul
mov
pop
push
loopne
cmc
pushf
shlb
mov
shl
pop
stos
inc
cli
cld
cmp
test
mov
sub
inc
mov
push
cmp
call
push
outsb
rcl
adc
test
pop
cld
sbb
sarl
not
ja
call
and
push
fucomip
adc
loopne
xor
ret
lds
in
and
fisttpll
stc
sbbb
dec
hlt
out
pushf
xchg
jb
hlt
xor
cmpsb
mov
xor
dec
lods
mov
in
or
fdiv
xor
fdivs
and
movsb
or
adc
subb
mov
test
out
add
adc
xor
daa
roll
out
xor
mov
fs
packsswb
adc
or
lea
push
cs
in
sub
xchg
outsb
inc
jo
jns
arpl
sub
push
test
or
mov
or
mov
jno
fsubs
mov
sbb
out
lock
inc
mov
xchg
je
or
lds
jecxz
adc
mov
fildl
jb
in
push
jge
test
cmp
or
mov
cli
lods
push
imul
mov
imulb
xchg
push
cmp
inc
pop
push
es
jge
xor
push
cs
adc
out
icebp
mov
fnstcw
pop
xchg
repz
fimuls
xorl
cltd
jbe
lea
or
clc
xor
cld
adc
cmp
cwtl
and
jnp
stos
cs
jp
push
repnz
lret
in
dec
pop
outsl
sbbl
das
int
outsl
cmpsl
out
adc
ss
inc
test
push
mov
jbe
fstpl
dec
popl
lahf
push
add
push
xchg
dec
and
push
cmp
sub
dec
add
pushf
xor
mov
cmp
fst
mov
insl
hlt
cmp
fisttpll
jmp
lods
lahf
je
xchg
mov
dec
sub
add
in
jg,pt
add
rolb
or
sub
mov
cltd
pop
xchg
pop
or
pop
mov
cmp
inc
xchg
das
inc
jne
call
or
adc
mov
and
lea
dec
mov
fdivrs
add
repz
popa
insb
popa
push
xchg
sub
cmp
and
je
cmp
fstl
xchg
pop
insb
lret
jne
sbb
lock
mov
aas
xchg
out
lret
loop
and
popa
test
lea
in
lds
fildll
or
and
xchg
jo
push
lahf
es
dec
xchg
mov
adc
aam
in
cmc
push
mov
xchg
xor
in
test
xor
xchg
shl
jmp
adc
jge
adc
sar
xor
xor
fidivl
cli
subl
push
xchg
out
lods
out
sub
stc
or
test
mov
sbb
insl
cmpsb
sub
subl
mov
inc
mov
orl
jns
xor
cmc
pushf
mov
pop
cwtl
lods
and
cmp
xor
into
lret
mov
in
xchg
test
mov
inc
adc
mov
inc
jge
and
mov
dec
outsl
push
mov
loopne
and
sub
mov
rcrb
mov
stc
sub
ljmp
pop
xor
cmpsl
lods
push
pushf
in
test
fwait
xor
shrl
adc
xor
or
xchg
mov
sub
int
aad
imul
test
adc
jae
sbb
push
xor
jo
enter
pop
jnp
xchg
inc
enter
sti
and
loop
mov
pop
mov
aaa
mov
lods
fldenv
push
fbstp
rcl
jle
testb
rorb
or
adc
cmc
xlat
sub
aas
andl
imul
in
setle
fisttpl
into
dec
repnz
jmp
stc
push
lods
or
sub
por
adc
aam
outsl
fmuls
mov
cld
sub
mov
inc
cmc
jge
cli
mov
adc
nop
lods
pop
jno
and
push
insb
mov
loop
test
push
xor
or
mov
add
nop
mov
and
out
mov
inc
stc
jecxz
incb
and
mov
imul
dec
add
xchg
xchg
inc
jbe
in
push
jbe
test
dec
jo
xlat
jl
jle
mov
or
lds
outsl
mov
sub
mov
jns
jnp
or
lea
pop
push
mov
sub
ficompl
in
enter
les
imul
je
cmpsl
repz
push
mov
mov
add
xchg
ror
cmp
aas
pop
jo
jg
sbb
xchg
fsubr
je
or
out
lret
adcb
push
cmp
jmp
dec
popf
sti
xlat
outsb
enter
stc
inc
cwtl
push
mov
xchg
inc
insb
pop
cs
or
ss
lea
fistps
jbe,pn
jae
out
cmp
outsb
add
mov
adc
xchg
add
aam
xchg
sti
dec
or
sub
sub
and
and
mov
sbb
or
cmc
out
ret
sbb
mov
mov
ja
dec
bound
or
inc
push
xchg
hlt
mov
cltd
out
push
scas
in
out
lcall
and
gs
xor
jnp
lods
or
jb
push
pop
xor
lds
icebp
js
inc
popa
cmp
inc
jno
mov
add
loope
js
push
scas
enter
out
add
sub
stos
add
adc
cmp
jp
mov
outsl
xchg
in
cmp
into
sbb
leave
out
pusha
outsl
sbb
insb
in
xchg
fsubl
in
and
cmp
aaa
gs
sub
push
in
mov
dec
inc
and
push
cltd
and
test
or
sbb
push
xchg
or
or
xlat
mov
inc
enter
add
mov
ror
cmp
arpl
jb
xor
sub
jne,pn
cmpsb
fisubrl
lahf
cs
test
xchg
pusha
mov
push
mov
adc
outsb
orl
fadds
sub
mov
mov
jecxz
cli
ficomps
pop
pushf
cli
movsbl
pusha
js
xchg
jge
pop
sahf
xor
mov
int
adc
scas
jle
pop
adc
dec
jne
push
incl
imul
push
inc
sub
push
jne
sub
movsl
mov
sub
aaa
cwtl
jne,pn
sub
mov
fiaddl
test
cmpsl
mov
xchg
ret
dec
sub
jmp
mov
lret
dec
cmpsb
fwait
call
pop
mov
enter
outsl
imul
scas
out
stos
mov
pop
add
dec
jle
mov
mov
in
mov
add
movsb
mov
pop
scas
add
cmp
lcall
jne
imul
jecxz
outsl
roll
insl
inc
and
shll
add
and
out
sub
xchg
in
jne
inc
test
pusha
dec
jo
daa
js
xchg
cmp
or
pop
jl
shll
cmp
fcmovnbe
sahf
cld
dec
dec
test
cmp
ficomps
or
out
push
icebp
stos
sbb
inc
lea
fnstsw
loope
scas
in
add
pop
popf
jp
or
dec
les
xor
repnz
adc
popa
cmp
int3
lock
inc
fld
in
aas
out
sti
imul
sbb
jns
mov
push
or
outsl
pop
mov
inc
call
in
push
js
fdivrl
js
stc
inc
or
dec
push
imul
cmp
cmpsb
pop
dec
adc
dec
xchg
out
xor
or
test
pop
jb
xchg
lret
xchg
fsubr
sub
insl
cmp
xchg
jg
mov
inc
cmp
fsubrp
lods
rcrl
aas
mov
in
mov
cs
shrb
lods
sub
dec
adcb
jno
in
and
scas
inc
je
pop
mov
mov
in
add
mov
pop
mov
mov
jno
xor
out
mov
xorl
jge
add
sbb
fimull
imul
and
stos
test
in
push
jl
cmp
roll
or
push
adc
arpl
push
jp
stos
inc
push
adc
roll
popa
repnz
xchg
dec
add
add
shll
scas
ret
xor
dec
xchg
mov
and
push
dec
out
mov
lcall
ret
add
mov
imul
lds
lret
mov
mov
or
mov
adc
mov
mov
sub
jb
dec
nop
aam
push
imul
push
add
cmp
adcl
les
push
jl
adc
cmp
jnp
popa
sti
cld
mov
xchg
outsl
mov
movsl
orb
mov
xor
cwtl
push
sub
mov
cli
or
dec
pushf
repz
repz
jae
mov
adc
and
loopne
jbe
icebp
add
pop
xorb
addr16
sub
leave
aaa
push
push
stos
mov
inc
out
cmp
in
movsl
ja
test
cmc
arpl
shl
mov
cld
adc
dec
clc
xchg
or
mov
or
push
add
test
or
pop
add
dec
js
mov
and
and
ret
sti
hlt
out
mov
repz
mov
push
xchg
shll
inc
mov
push
cwtl
int3
xor
dec
mov
push
mov
push
sub
in
push
jbe
pop
sub
flds
fcoml
dec
pop
shrb
daa
cmp
loopne
mov
je
outsl
cmp
data16
mov
pop
sbb
test
hlt
insb
nop
fdivr
repz
and
sbb
rcrb
int3
adc
movsl
sub
jg
test
jbe
inc
data16
ljmp
push
mov
jmp
inc
scas
cld
mov
lock
xchg
negl
popf
sub
js
jne
push
jg
mov
pop
or
data16
jnp
mov
inc
sub
ljmp
cmpsb
out
jge
mov
lret
sub
xor
mov
mov
insb
repnz
gs
lods
xchg
les
je
aam
push
jnp
jo
xchg
repnz
lea
sub
mov
je
cli
cmp
pop
cltd
fstpl
adc
xlat
int3
inc
sbb
jle
pop
jnp
jns
add
inc
mov
and
or
outsl
rcrb
xchg
mov
inc
mov
or
int
lods
testl
ja
clc
push
fstps
fimuls
inc
cmp
ja
sbb
xchg
sbb
inc
pusha
sahf
in
frstor
pop
jae
imul
mov
call
pop
jno
xor
mov
into
add
add
fcomps
insl
adc
stos
repz
inc
push
or
jb
repz
popf
pop
in
scas
into
or
add
leave
add
in
in
cmp
scas
out
dec
add
or
jg
cmp
sbb
stc
mov
xchg
sti
dec
pushf
fiaddl
stc
or
fstps
ret
or
sub
mov
fmuls
and
xchg
pop
dec
dec
and
cmp
sub
xor
jno
or
jb
inc
or
sbb
faddl
shlb
addr16
jge
cmpsb
mov
adc
js
or
aam
cmc
sahf
push
stos
call
insl
cmpsb
mov
add
add
sub
fcompl
out
lods
nop
mov
lods
push
pushf
mov
dec
xor
add
and
and
call
cmp
aam
mov
lods
sbb
mov
jl,pn
adc
stos
ljmp
loopne
adc
js
lret
add
add
push
outsb
xlat
and
lods
or
sbb
mov
mov
pop
jno
push
scas
out
sub
sub
sti
pop
mov
loopne
fdivl
repz
sub
dec
pop
cmp
sbb
adc
jp
lcall
xchg
cmp
rcrl
bound
std
mov
mov
jns
jno
stc
pop
adc
cmpsb
and
mov
push
dec
mov
cs
dec
aad
cmp
xchg
mov
push
leave
fs
jmp
test
lods
addr16
inc
int
push
jns
cmp
dec
jecxz
xchg
outsl
ds
pop
jg
movsl
insb
adc
jle
stc
popa
push
mov
bound
stos
xor
cmpsl
es
cmp
inc
scas
std
mov
push
push
js
leave
addr16
mov
add
in
adc
js
cmp
mov
pop
sbb
push
call
or
jae
jnp
neg
mov
pop
jo
jp
xchg
in
test
sahf
repnz
fdiv
mov
lea
cmc
sbb
dec
in
pop
loop
mov
in
jns
scas
repz
imul
out
aas
ljmp
dec
or
jns
mov
mov
fsubs
fidivs
dec
mov
jmp
loop
add
inc
xor
jbe
ds
add
scas
aas
loope
popa
daa
dec
xchg
movsl
xlat
xor
idivl
ret
sub
sbb
jg
aad
out
dec
xchg
movsb
outsl
inc
mov
jl
or
mov
clc
push
imul
daa
fwait
jecxz
cltd
jo
iret
adc
inc
pop
jl
sbb
movsb
or
sahf
out
outsl
lret
dec
test
dec
sbbb
dec
ficoms
mov
jae
mov
lds
in
mov
imul
mov
xchg
out
shll
loop
sub
sbb
dec
pop
inc
scas
or
nop
pop
sbb
jne
sub
or
aas
mov
jmp
adc
mov
xor
pop
xor
adc
int
push
push
add
add
xor
xor
jo
das
sub
cwtl
imul
shl
pusha
sbb
inc
mov
sub
mov
std
mov
jge
add
mov
aaa
cwtl
cld
aad
cltd
pop
cwtl
fnstcw
or
jecxz
icebp
mov
sbb
aaa
adc
mov
rorb
stos
push
pusha
cwtl
fcoms
je
pop
out
dec
sub
int
fdivl
rorb
in
sbb
sub
add
ja
mov
les
sarl
fiaddl
cmc
inc
shl
xor
daa
movsl
add
into
jae
xor
push
das
add
into
stc
sbbb
mov
popf
mov
xor
movups
outsl
pop
punpckhwd
or
dec
sbbl
xor
xchg
xchg
into
out
fidivl
xlat
and
dec
cmpb
push
inc
in
sbb
jo
iret
cmpsl
rcll
push
shl
ficompl
add
jns
adc
cmpsb
test
mov
lods
loope
rclb
pop
lahf
roll
insb
pop
lds
in
adc
mov
dec
scas
out
push
xchg
outsl
ds
mov
dec
add
mov
pop
nop
loop
dec
es
mov
mov
lods
cmpsb
adc
in
sub
std
inc
xor
test
sub
dec
pushf
aam
pop
scas
and
mov
aas
out
insl
orb
pop
les
clc
inc
pop
ret
cmp
test
jae
sti
dec
stos
xchg
ss
insl
mov
daa
mov
cli
inc
cltd
call
loopne
xor
mov
sti
jbe
or
cmovge
comiss
pop
jae
arpl
les
data16
cmp
pop
adc
fldt
xchg
aad
sub
imul
pop
adc
adc
outsl
test
aaa
jmp
jle
mov
pop
mov
jmp
clc
or
mov
adc
test
fs
mov
sbb
in
sbb
cmp
popa
insb
shlb
lea
bound
push
sbb
addr16
ror
dec
jnp
rcrl
ret
sbb
ljmp
dec
cmp
add
xchg
stos
and
loop
mov
jg
inc
push
mov
add
xor
leave
std
das
inc
mov
mov
in
adc
lea
inc
cmp
loope
stc
cmp
or
cmp
mov
add
mov
out
aas
idivl
sti
or
pop
divb
mov
rcll
stos
mov
mov
adc
xor
ret
dec
mov
or
mov
outsl
mov
push
add
xor
out
subb
into
ret
dec
gs
cmp
or
ljmp
outsb
scas
in
dec
pop
outsb
fdivrs
cmp
jbe
sbb
push
mov
int
push
in
leave
in
fcoml
sbb
jb
sbb
ja
dec
jb
xor
and
adc
inc
jns
xor
mov
ficomps
push
dec
lods
in
popa
mov
vmovaps
and
test
sub
divl
movsl
shl
pop
jne
inc
fisubrs
fistl
popa
test
push
nop
movsl
repnz
lods
xchg
dec
adc
xchg
cmpb
dec
inc
add
dec
ret
je,pt
out
inc
ds
vmread
pop
push
in
into
or
and
in
repz
lea
rorb
inc
or
and
push
add
xor
add
sub
mov
and
pop
adc
js
sub
adc
dec
je
cmpsb
mov
xchg
xchg
lods
loopne
mov
xchg
jg
ficomps
pop
add
pop
movb
lahf
dec
insb
test
ds
pop
int3
in
rcll
jmp
ds
add
cltd
insb
test
inc
adc
xchg
out
and
clc
ds
cmp
and
jb
sti
jmp
add
inc
outsl
dec
outsb
imul
add
cld
adc
imul
aaa
add
pop
push
repnz
imul
insb
shlb
cmc
jno
xchg
daa
into
add
pusha
adcb
cli
repz
shll
daa
sbb
es
fiadds
mov
xor
sahf
inc
aad
out
and
rep
add
pmaxub
gs
ja
ret
repz
in
sub
bound
xor
and
daa
cli
pop
cmpsb
in
sbbb
pop
lods
mov
or
jmp
add
mov
mov
ficoms
jbe
out
pop
ret
in
movsb
dec
stos
or
or
loope
ds
xlat
insl
sbb
or
fst
ss
sbb
rcl
clc
sarb
jnp
dec
add
incb
inc
rorl
mov
add
outsl
mov
sbb
aad
pop
mov
addr16
inc
mov
jns
lds
pop
jmp
adc
into
push
jmp
je
xor
in
xor
in
inc
mov
lea
dec
fwait
sub
or
insl
adc
fldenv
add
test
xchg
push
mov
pop
adc
and
mov
and
xchg
sbb
les
or
movsl
sub
movsb
inc
cmp
insl
inc
inc
mov
cmpsl
or
pop
adc
xchg
and
and
data16
mov
sbb
shr
jne
std
cmp
inc
outsl
and
mov
add
and
lahf
sbb
push
push
mov
ljmp
imul
rcl
jecxz
jne
lds
mov
push
mov
add
fsubs
and
sub
adc
mov
push
pop
aas
shl
cs
or
push
idiv
inc
add
push
mov
jo
add
ret
enter
add
or
sti
xor
ljmp
sub
sub
daa
sub
cmp
sub
sbb
mov
sbb
aam
nop
add
mov
sub
orl
xlat
mov
xor
repnz
lcall
push
jns
enter
push
fwait
push
aam
inc
jno
jne
es
scas
sti
in
adc
adc
popf
out
aas
shll
sub
fimull
add
aaa
xorb
les
cmpsb
insl
out
xor
and
fs
jae
mov
mov
cmp
inc
jg
ljmp
icebp
daa
jne
xchg
rcrb
lea
push
mov
mov
es
loop
xchg
push
je
rcr
lcall
sbb
cltd
push
cld
cmp
mov
cs
cld
leave
sub
inc
std
notl
cmpsl
jg
cltd
pop
xor
test
inc
sbb
fisttpl
push
xor
into
sub
cmpsb
sar
cmp
sti
inc
cmp
loopne
jecxz
lahf
leave
cmp
scas
lds
pop
mov
fisubrs
dec
into
sbb
pusha
sub
pushf
push
call
lea
ja
je
bt
sub
call
bswap
push
pusha
sbb
lea
shl
rcl
pop
mov
pusha
or
xchg
sar
shrd
pushf
mov
movzbw
test
xadd
bsr
mov
cmc
btr
rcr
xchg
sbb
clc
shl
mov
shrd
pop
setne
bts
mov
stc
mov
cmc
or
call
jp
cmp
mov
aad
jge
jmp
dec
mov
pop
repnz
les
movl
push
andb
mov
cmp
dec
dec
or
add
mov
hlt
mov
rorb
mov
push
or
gs
cmp
scas
cmpsb
add
movsl
fidivl
mov
scas
insb
sub
fisubrl
and
jne
mov
subl
adc
repz
popa
subl
loopw
add
in
sub
pop
ret
pop
mov
iret
sti
cmp
sub
sbbb
clc
cmp
cmp
push
lea
jae
shl
rcl
bsr
mov
shrd
lea
btc
mov
pusha
jmp
push
lea
pop
aaa
xchg
filds
xchg
das
dec
cli
mov
leave
in
mov
sbb
jno
outsl
mov
push
sbb
mov
sbb
cmp
xlat
and
inc
mov
repnz
std
movsl
jg
fs
outsb
pop
aas
xchg
loopne
or
and
push
xchg
clc
mov
pop
test
fs
loop
push
popf
push
dec
mov
cwtl
mov
clc
call
out
int3
movq
mov
stos
insb
inc
lods
sahf
sbb
imul
inc
xchg
and
shll
inc
popf
mov
cld
fdiv
sbbb
lds
mov
aam
inc
mov
sub
sub
movsb
sub
rcll
loop
cs
roll
jns
rcl
ret
int
fstpt
gs
cltd
xchg
ret
push
or
sar
jb
sbb
ljmp
ljmp
push
mov
imul
lock
cmp
mov
sub
repz
test
xlat
jle
or
sbb
dec
std
out
and
add
jge
lahf
dec
dec
fstl
adc
push
inc
xor
fdiv
roll
add
dec
fsub
inc
mov
or
mov
inc
mov
hlt
dec
movsb
add
test
xor
in
mov
or
jnp
cmpsb
or
je
xor
into
push
fwait
push
dec
lods
sbb
jns
inc
cmpsl
push
daa
cmpsb
pop
in
scas
pop
cmp
mov
cld
or
aaa
es
cmp
icebp
popa
jne
add
mulps
jmp
mov
or
pushl
pushf
jmp
mov
push
movb
pushl
ret
sub
sbb
scas
negl
lods
cmpsl
testb
jnp
xchg
or
stos
push
sbb
decl
lret
add
shr
and
pop
pop
xchg
rorl
pushf
xor
cmp
or
gs
cmp
int3
xchg
into
adc
cltd
std
push
int
or
xchg
stc
or
sarb
mov
jg
daa
dec
xchg
jmp
aaa
mov
mov
ficomps
jno
sarb
xchg
int
popf
int
or
xchg
int
aaa
sbb
push
pop
pop
mov
test
sub
jb
xor
cmp
test
adc
and
pop
xchg
repz
jp
pop
rcrb
movsb
sahf
inc
pop
pop
in
xor
pop
add
leave
es
push
das
jge
mov
fcmovb
popf
jbe,pt
xchg
push
lods
cmp
push
scas
or
mov
aam
sub
notl
sti
cli
push
and
cmpb
jp
fidivl
mov
lods
push
pop
cmpsl
and
mov
movsb
lcall
sub
iret
add
and
jb
aam
and
aas
addr16
adc
xchg
outsl
inc
sahf
cmpsl
aaa
pop
repz
std
xlat
addr16
xchg
add
jnp
aaa
xor
mov
push
adc
nop
push
les
and
pop
das
aas
mov
push
sub
fcomps
jecxz
and
or
idivb
aas
and
cmp
fwait
cmc
imul
xlat
cmp
or
lock
fisubrs
mov
mul
mov
int
clc
adc
mov
aaa
sub
or
cmp
gs
mov
addr16
jecxz
dec
inc
aaa
push
enter
xchg
jle
inc
jnp
fld
mov
xor
xchg
popf
sub
leave
notl
stos
jg
ds
out
pop
fisubs
and
mov
aaa
test
mov
movsl
call
fdivs
test
insb
aaa
scas
enter
cmp
adc
test
push
sbb
divb
mov
lods
testl
jae
jg
andb
pushf
cmp
add
push
rcrl
mov
mov
aaa
in
icebp
out
in
jbe
ljmp
inc
sub
inc
aaa
push
rol
push
fsubl
cmp
cmp
aas
hlt
aaa
cmp
xor
xlat
test
in
shrb
pop
sarl
sbb
xchg
mov
mov
xor
stos
ja
ljmp
outsb
fadds
dec
mov
dec
push
outsl
or
daa
cmp
inc
pop
loopne
clc
sbb
cmp
add
push
fstpl
ficoms
aaa
mov
mov
xchg
and
jg
int3
sub
or
cmc
jge
and
imul
pop
xchg
aaa
jmp
jb
sbb
ja
aaa
cmpsb
jne
mov
aaa
loope
inc
push
aad
inc
sti
aaa
add
aam
mov
daa
int3
cmp
add
xchg
mov
aaa
stos
dec
xor
outsb
xchg
sbb
mull
sbb
pop
mov
cmp
ja
sub
aas
xlat
push
push
xor
add
shlb
test
lcall
in
es
mov
jmp
push
or
cmp
push
or
aaa
mov
andb
das
lret
pop
jne
pop
inc
insl
ret
jo
clc
outsb
dec
in
or
lret
pop
adc
fadds
xchg
pop
xor
sahf
lcall
fdivrs
xchg
cmp
sbb
test
xor
arpl
jg
mov
lcall
add
test
mov
aaa
mov
popf
cmpsl
push
imul
pop
dec
cmpsb
mov
inc
add
es
cmp
and
lcall
and
repnz
xor
or
pop
sbb
mov
jnp
stos
aaa
dec
sub
jl
mov
icebp
lret
mov
mov
dec
bound
mov
aaa
cmp
scas
jmp
bsr
enter
cwtl
aaa
cltd
addr16
sbb
jbe
sbb
cmp
js
inc
cmp
ret
ljmp
mov
clc
inc
mov
enter
add
scas
int
bound
ds
sbbl
leave
inc
orb
mov
stc
icebp
aaa
add
enter
shrb
cmp
pop
mov
out
mov
mov
cmp
jle
jge
cwtl
adc
push
aaa
hlt
sbb
xchg
push
adc
jge
sub
sub
fwait
sbb
push
mov
and
ss
or
or
mov
push
push
lahf
bound
lds
or
filds
in
pop
and
push
divl
negl
pusha
inc
aaa
push
out
push
cmp
and
cmp
mov
ds
sub
push
or
sbb
aaa
mov
adc
loope
xor
cmp
push
clc
addr16
test
mov
pop
jmp
inc
inc
add
aaa
lcall
notl
pop
mov
mov
mov
sahf
aaa
js
or
mov
and
enter
sbb
shlb
dec
mov
in
jl
aad
mov
add
aaa
jno
mov
cmc
bound
add
lods
add
and
and
inc
jg
xchg
loop
inc
fstpt
shl
cld
pop
fsubrs
pusha
or
sbb
mov
push
mov
lret
icebp
enter
add
dec
dec
xor
das
mov
test
jnp
aaa
xchg
mov
pusha
aaa
sti
lret
and
sarb
out
xchg
inc
inc
xchg
push
xchg
leave
rorl
fnsave
fcmove
mov
pop
shl
push
inc
daa
test
xlat
or
popa
into
mov
pop
popf
push
hlt
lret
mov
inc
das
gs
sbb
mov
ja
insl
xor
dec
aas
mov
pop
lods
sbb
sub
outsl
aaa
push
pushl
dec
idivl
loopne
mov
notl
outsl
aaa
sahf
clc
ret
cld
js
ds
arpl
aad
push
lahf
dec
data16
enter
neg
addb
out
stos
out
aaa
cmpsl
jp
mov
adc
push
inc
xchg
les
sbb
mov
cmc
movsl
pop
repz
out
cmp
dec
adc
divl
imul
loope
cmp
insl
fs
adc
inc
add
addr16
xchg
and
inc
shlb
pop
mov
adc
inc
cmp
or
scas
bound
addr16
mov
je
test
dec
aaa
ds
lods
mov
aaa
mov
loopne
ret
cmp
bound
insl
add
pop
fwait
push
out
push
mov
and
insl
ljmp
pop
mov
mov
das
mov
mov
push
or
xlat
xchg
push
cmp
aaa
loopne
fs
pop
aam
std
or
xor
aas
mov
iret
ss
leave
ja
fsubs
jge
cmp
scas
aaa
cmpsl
data16
or
adc
push
sahf
fstps
std
aaa
stos
and
popf
testb
fisubrl
add
roll
cli
les
and
sbb
mov
std
mov
repnz
scas
push
idivl
mov
sub
aam
mov
adc
movsl
xor
cmp
jnp
or
inc
cltd
roll
into
inc
push
cmc
xor
test
outsl
jns
fcomp
aaa
xor
and
stos
daa
inc
fisubl
mov
test
aaa
movsb
lock
aas
hlt
ljmp
mov
ror
jo
jns
fldcw
and
cmp
ds
jg
pop
imul
push
fldcw
sbb
enter
adc
inc
push
in
bound
xchg
or
jno
scas
lret
stc
in
fsts
xchg
pop
fcmovbe
pop
mov
adc
aas
les
aaa
jnp
pop
mov
aaa
leave
subb
dec
jns
repz
dec
aas
or
jno
cs
push
repz
cmp
aaa
fs
insb
mov
dec
std
mov
cmp
xchg
shll
out
fucomi
xchg
fnstenv
imul
out
out
andb
ficoml
ret
clc
xchg
popa
cmp
fstpt
mov
cmpsb
loope
je
addb
popa
sub
mov
cmp
in
out
push
idivl
mov
jnp
fs
int
out
lret
std
jmp
jg
scas
lret
lods
arpl
mov
ja
cmp
jno
sbb
in
sbb
and
mov
mov
ret
xchg
or
adc
pop
jnp
rorb
mov
ret
jnp
movsl
jbe
inc
jns
mov
push
xchg
sbb
jnp
pop
jns
sub
jnp
fmull
btc
jnp
adc
fs
pop
out
js
pop
lcall
mov
push
jnp
jae
mov
mov
mov
mov
or
sbb
sub
ds
mov
push
or
pop
xlat
cmp
dec
push
fldl
and
push
fnstcw
inc
leave
call
adc
or
scas
or
pop
adc
inc
lea
pop
rolb
jle
enter
out
mov
xchg
lock
mov
jb
popa
mov
or
jle
lods
lea
scas
jl
mov
cmp
scas
insl
push
outsb
mov
insb
fst
ds
insb
jle
jl
mov
or
imul
clc
fcomps
mov
fadds
sbb
lods
lds
imul
std
jle
sbb
aad
mov
adc
and
fcomp
xor
insb
jecxz
lods
shlb
insl
es
pop
and
mov
or
add
dec
std
dec
imul
jge
insl
dec
pop
ficomps
lock
jle
cmp
fimuls
decl
ficoms
mov
xchg
lcall
sbb
fidivrs
mov
or
pop
negl
push
pop
in
lret
fsubl
lods
bound
sbb
fdivrl
call
lcall
sub
insl
push
mov
stos
xlat
in
lret
std
sub
jb
loope
adc
ret
loope
mov
jp
iret
call
in
adcl
out
inc
enter
cli
dec
pop
jnp
ret
inc
cmp
cmp
cmp
jnp
jp
or
jl
aas
dec
leave
mov
pop
inc
or
cld
cmp
mov
inc
push
or
xchg
pop
cmpsb
or
sbb
cmp
push
mov
cli
add
jg
js
pop
js
dec
add
addr16
sbb
mov
cli
dec
pop
js
js
jmp
popf
sbb
jmp
mov
or
in
loopne
cmp
stos
sbb
cmp
mov
addr16
cmp
adc
inc
flds
dec
add
add
add
push
roll
mov
sbb
push
ja
xlat
mov
ljmp
mov
sub
or
fsubrs
mov
cmp
ja
pop
ja
ret
pop
movsl
xchg
cmp
mov
gs
leave
push
xchg
add
cmp
xor
inc
out
test
add
pop
jnp
scas
add
ss
test
cmp
mov
fdivr
addr16
das
dec
add
in
xchg
pop
adc
jge
mov
ljmp
dec
out
push
xchg
pop
ss
das
sub
dec
push
sbb
xor
shll
repz
movsb
mov
ret
xor
cmp
mov
aas
cmp
or
push
aas
pop
sbb
push
add
push
fimull
fnstsw
mov
sub
addb
adc
sub
sbb
nop
push
cmp
sbb
or
mov
psubsb
or
cmp
js
dec
adc
push
cmp
or
mov
xchg
jno
cmp
inc
dec
aas
add
adc
sbb
push
add
jecxz
add
push
push
stos
jp
lret
inc
add
aaa
stos
pop
dec
jp
sbb
mov
sbb
sub
fbstp
cmp
mov
lcall
sbb
or
sbb
mov
mov
scas
pop
imul
cmp
pop
scas
jns
xor
test
gs
mov
sbb
and
sbb
or
ret
aas
rcrl
mov
cmpsl
adc
std
sbb
mov
jb
ret
push
push
cmp
mov
or
sti
leave
stos
pop
dec
in
xor
sub
dec
insb
pop
cmp
mov
test
roll
ret
test
mov
in
pop
aas
stos
lret
dec
dec
sbb
jp
push
enter
inc
dec
scas
or
mov
es
stos
dec
or
rorb
xor
ret
lea
ds
pop
or
inc
inc
and
add
mov
cmp
push
dec
mov
frstor
dec
xchg
push
xchg
jnp
jg
mov
sub
jp
hlt
ja
cmp
fcompl
mov
and
jnp
je
inc
jae
shr
xor
popa
mov
push
cwtl
insl
or
jge
insl
adc
lock
xor
addb
push
adc
roll
dec
inc
xchg
mov
dec
inc
pop
es
popa
outsb
mov
mov
jnp
imul
and
pop
sbb
dec
pusha
lock
jnp
sti
jae
cmp
mov
pop
pop
ret
mov
call
ja
movsb
mov
mov
leave
fistl
bound
mov
jae
aas
out
stos
dec
out
pop
adc
fidivs
pop
in
sbbl
add
mov
cmp
mov
jg
pop
decl
jae
fstps
push
cmp
jg
pop
lock
xor
cmpsl
inc
mov
mov
add
enter
cmp
mov
call
mov
cli
jmp
push
sbb
mov
fwait
mov
mov
push
mov
fistpl
jnp
pop
mov
dec
pop
cs
mov
lcall
jp
cmp
stos
dec
cs
sbb
aas
adc
fcomps
mov
add
cli
sarb
repz
adc
jns
stos
dec
ljmp
add
inc
mov
addl
daa
push
xchg
mov
adc
enter
pop
pop
pop
mov
cmp
mov
cmp
jmp
orb
cmp
push
sbbl
push
mov
jno
or
fwait
ds
dec
adc
push
xchg
jge
cmp
pop
xor
xlat
inc
add
in
scas
xchg
pushf
adc
jae
outsl
add
gs
add
xor
xchg
lahf
and
pushw
mov
add
roll
xchg
cmc
out
cmc
pop
sbb
inc
aad
cmp
mov
js
sbb
call
addb
xor
and
jo
xchg
int
jns
dec
in
jno
jl
adc
aas
dec
jge
xchg
sub
sti
cmpsb
xor
ljmp
js
cmp
pop
sar
out
shrl
cmp
mov
jge
sub
outsl
repnz
push
aas
jnp
or
push
mov
insb
and
pop
test
xchg
xchg
mov
xchg
shlb
mov
lds
push
call
sub
mov
mov
mov
xchg
test
cltd
lods
in
adc
mov
pop
sti
or
daa
repnz
js
mov
xor
and
lds
pop
and
add
push
sbb
sub
xchg
push
mov
insb
jg
fs
inc
push
cmp
in
scas
push
pop
push
jecxz
xchg
mov
sbb
test
or
jge
lea
stc
loop
cmp
sub
jl
pop
sub
xchg
js
dec
add
add
cmp
sbb
js
stos
incb
cmpl
xchg
add
aad
ja
lea
lock
lret
mov
jb
cmc
jo
ss
jno
ret
jl
sbb
push
out
jmp
xchg
hlt
push
inc
stos
xchg
aaa
roll
repnz
add
jnp
lods
imul
test
repz
cmc
js
repz
test
mov
in
pop
sahf
mov
jl
jecxz
movsb
mov
int
push
and
mov
jle
loope
cmp
insl
sbb
cs
decb
push
js
adcl
cmpl
adc
pushf
cmp
sti
out
mov
js
fnstsw
shll
ds
xchg
ljmp
hlt
add
mov
xchg
push
mov
pop
cmp
js
xchg
jb
sbb
mov
sti
fnsave
fcmovb
shlb
adc
pop
xchg
add
stos
cmp
pop
dec
jge
sub
cmp
mov
push
out
mov
loopne
dec
jmp
sub
or
inc
fwait
cli
xchg
aad
cmpb
movsb
addb
add
ds
lea
or
mov
scas
push
mov
sbb
cmp
cmp
cmp
cmp
or
pop
aas
punpcklbw
arpl
jp
jns
mov
mov
pop
cmp
fnstcw
mov
xchg
add
dec
ret
xor
outsb
cli
js
or
sub
jge
movsl
les
xchg
push
shll
call
aas
jmp
cmp
xchg
mov
inc
ds
cmp
arpl
lret
aaa
loope
jbe
shll
adc
xor
or
add
dec
jecxz
xor
xchg
movsb
inc
or
pop
fldl
or
push
jecxz
push
sub
dec
pop
clc
roll
xchg
xchg
adc
shlb
mov
adc
cmp
or
push
stos
fnstenv
fsubl
push
sub
mov
cmp
mov
push
cmpsl
adc
and
mov
cmpsl
push
mov
inc
push
jp
xlat
and
in
ljmp
fstps
add
movsb
jae
inc
aaa
xchg
in
cmpsb
jecxz
add
mov
xor
mov
pop
ja
cmp
out
adc
repnz
xchg
pop
jecxz
test
pop
xlat
movsb
push
js
push
push
push
add
lds
dec
ret
lahf
cmp
pushf
pop
cmp
mov
movsl
or
or
leave
mov
xlat
rolb
mov
sub
xor
jnp
aas
ljmp
adc
xor
aaa
repz
cmpsb
addb
and
xchg
sbb
cmpl
and
mov
push
xor
rorl
mov
testl
mov
cmpsl
sbb
mov
sbb
sbb
gs
fildll
divb
adc
mov
jecxz
add
lret
arpl
ret
inc
pop
cltd
and
popa
xchg
dec
cltd
jge
xchg
push
add
test
mov
inc
push
popa
mull
xchg
outsl
xor
cmp
repz
cltd
shlb
xchg
mov
mov
ds
repz
adcl
xor
add
xchg
add
shrl
popa
cmpsb
in
in
cmpsb
cwtl
xchg
repz
adc
sarb
lret
xchg
inc
ror
arpl
push
test
sbb
cmpl
inc
and
inc
jb
mov
push
repnz
loopne
add
mov
pushf
add
adc
mov
lods
sbb
fiadds
inc
pusha
adc
loope
jns
addw
xor
clc
xchg
mov
mov
mov
pop
sbb
adcl
ret
les
push
jp
add
pop
pop
pop
push
loopne
sbb
sbb
iret
loop
iret
mov
xchg
pop
movsl
push
outsl
fcompl
ja
or
mov
fnstcw
les
xchg
cmp
xchg
loop
sub
mov
adc
xlat
mov
arpl
dec
lods
icebp
aaa
addb
mov
sbb
push
jp
dec
fistpll
pop
adc
test
sahf
fadds
xchg
sbb
or
jp
dec
dec
add
rcll
clc
or
inc
push
jp
dec
clc
pop
pop
popa
fwait
jecxz
jo
mov
lret
shrl
push
jecxz
and
or
push
loop
xchg
inc
push
movsb
cmp
jno
add
adc
repnz
xchg
call
lock
jmp
inc
xchg
fbstp
mov
adc
cmp
jo
mov
push
aas
fsubl
mov
xchg
or
stos
imul
loope
inc
sbb
mov
inc
imul
push
push
xchg
ljmp
jbe
push
xchg
xchg
mov
cmp
pop
or
jbe
pop
js
cmc
fwait
clc
mov
rol
out
mov
inc
out
aam
cmpsb
fadd
mov
test
arpl
cmp
push
ret
jb
inc
mov
sbb
cmp
in
push
jp
mov
push
cmp
sti
xor
outsb
and
aam
dec
dec
cld
jecxz
or
or
out
mov
sbbl
dec
dec
mov
rep
ja
mov
mov
mov
pop
add
add
stos
repnz
mov
dec
and
cmp
jae
mov
push
mov
xor
xchg
iret
imul
add
fs
sub
pop
add
ret
adc
icebp
outsl
xorb
movsb
xor
ret
cmc
pop
fs
mov
jp
dec
mov
loop
and
ljmp
jb
popf
sub
pop
mov
das
mov
daa
popa
fwait
adc
js
fs
adc
jmp
lcall
lcall
add
mov
mov
xchg
mov
mov
jmp
cmp
jle
sbb
les
and
leave
dec
lods
loop
popa
add
sub
test
sbb
jnp
sbb
imul
pusha
ficomps
fs
or
jmp
sbbb
cmp
add
sbb
jne
push
in
or
xor
stc
les
xchg
sbb
mov
imul
cmp
andl
push
dec
js
sub
inc
adc
in
cmp
mov
movsl
inc
adc
adcl
orl
mov
xchg
push
push
pop
fsts
lods
or
or
pop
popa
filds
xchg
adc
sbb
sti
jl
lock
int
cltd
sbb
rcrl
pushf
popa
test
pusha
xchg
stc
fwait
cmc
sbb
dec
mov
cmp
xchg
cmp
dec
add
cmp
imul
xchg
stos
imul
out
dec
inc
xchg
nop
mov
loopne
mov
or
rclb
sbb
pop
cmp
ja
jnp
add
or
cmp
popa
sbb
cmp
jno
xor
cmp
mov
or
sub
ja
jnp
xorl
mov
ljmp
mov
inc
cmp
fdivl
aas
adc
aas
fucom
adcl
mov
pop
lock
pop
dec
adcl
repz
add
cmpsl
fistpll
aas
les
and
adc
or
cmp
cmc
cmp
and
cli
jbe
inc
cmpsb
cmp
cmp
es
push
addr16
push
aas
mov
aas
icebp
xlat
aas
dec
or
sub
call
aas
lret
loop
dec
call
clc
ja
jnp
enter
int3
fdivs
imul
mov
test
mov
xor
outsb
stc
cmp
jns
cmp
sbb
mov
cmp
mov
or
dec
cmpsl
ja
mov
mov
cmp
mov
mov
sub
lcall
cli
pop
dec
fidivl
jnp
sub
or
call
xchg
jmp
cs
push
or
mov
addr16
jmp
mov
cmp
sub
sbb
pop
sbbb
jl
in
pop
addr16
mov
addl
sub
ja
int3
mov
iret
pushf
fcoml
mov
jge
mov
mov
cmp
cmp
cmp
cmp
std
add
or
fstl
subb
sub
cmp
sbb
cmp
outsb
cmp
cmp
dec
jnp
sahf
cmp
cmp
setno
jo
pop
pop
sahf
pop
rcrb
out
ja
jnp
ja
into
ja
aas
ja
outsl
ja
pop
ja
mov
insb
fbstp
das
mov
mov
cmp
adc
hlt
cmp
cmp
cmp
xchg
adc
mov
cmp
mov
or
lock
loop
pop
rcrb
mov
ja
jnp
adc
or
cmp
out
inc
ja
jnp
push
mov
mov
cmp
mov
test
in
cmpl
mov
icebp
seto
fld
pop
pop
inc
pop
daa
ret
jae
inc
xrelease
mov
pop
sti
aad
mov
cmpsb
cmp
push
cmp
cmp
sbb
cmp
inc
jnp
jl
push
test
xchg
divb
xlat
or
pop
mov
mov
push
cmp
mov
mov
mov
ficoml
or
mov
dec
out
ja
fs
jmp
daa
add
mov
jno
xchg
sbbl
xlat
mov
push
cld
mov
inc
data16
jecxz
xchg
stos
jns
out
mov
insb
xor
sti
aam
mov
int
and
fisttpl
mov
jmp
xchg
mov
cmp
cmp
stos
mov
mov
ret
mov
mov
xlat
push
mov
iret
stos
cmp
mov
mov
test
cmp
mov
or
cmp
cmp
push
jns
or
ret
cmp
pushf
cmp
cmp
ja
cmp
in
scas
mov
out
pusha
mov
or
pop
ret
jo
rolb
ja
mov
gs
or
inc
lock
xchg
or
sbb
repnz
or
shlb
and
adc
mov
add
ja
popa
mov
and
push
mov
ja
nop
or
lea
xchg
sbb
repnz
or
cmc
mov
cmp
loope
cmp
or
xor
sbb
btr
test
mov
xor
jnp
movsb
addl
aam
xor
or
inc
adc
sbb
mov
jge
or
sub
ja
fwait
jnp
loop
mov
sbb
mov
or
cmpsl
sub
loop
or
xchg
and
imul
test
repz
push
inc
repz
movsl
or
cmc
pop
aad
cmp
jae
jge
xchg
mov
mov
xchg
mov
je
ret
xor
xchg
inc
ret
mov
mov
xchg
mov
or
xor
xchg
mov
or
shll
mov
and
or
jnp
hlt
inc
xchg
inc
jnp
push
outsl
jbe
sbb
les
ret
xchg
rep
add
mov
movnti
mov
dec
hlt
addr16
sub
negl
jne
sbb
jbe
mov
jnp
ss
xchg
inc
xchg
jbe
cmp
aad
xchg
xor
xchg
fimuls
insl
adc
jnp
hlt
mov
mulb
adc
ret
clc
add
je
jp
xor
cmpsl
ja
inc
xlat
pop
xor
cmp
mov
xchg
fnstsw
in
xchg
cmp
les
jg
lea
testb
jne
ja
xor
nop
cmc
imulb
mov
je
mov
cmpsl
sbb
enter
mov
jbe
testb
xor
orb
ja
xlat
cmp
cmc
not
mov
notb
mov
xchg
imul
int3
sbb
ja
and
mov
divb
pop
mov
insl
xchg
scas
mov
mov
cmp
aad
fiaddl
test
inc
or
pop
xlat
test
or
ret
sti
leave
mov
inc
xor
cmp
mov
addr16
or
jl
mov
sbb
dec
or
movsl
ss
daa
psubq
dec
jge
pushf
outsl
inc
pop
data16
in
insl
jns
xchg
andb
insl
outsb
cld
or
add
roll
ret
xchg
loope
jmp
dec
stos
sub
int3
dec
jae
int3
out
orl
insl
rorb
mov
push
psubusw
push
int3
cmpsl
xchg
xor
clc
insl
das
mov
iret
dec
scas
fldcw
sub
cmp
or
or
jecxz
xor
gs
ret
push
mov
pop
jge
fidivrs
call
jge
add
adc
or
imul
bnd
jne
or
fdivl
xlat
xlat
xorl
mov
lahf
loop
pop
lods
fmull
sub
adcl
or
lds
imul
cmc
mov
add
cmpsl
ficomps
or
sub
pop
xor
mov
andl
push
or
js
adc
mov
sub
fists
nop
sarb
adc
add
mov
subb
das
inc
pop
mov
jg
and
pop
scas
sbbb
cmp
pusha
inc
jmp
xchg
jnp
cli
pop
push
cmp
jle
fldz
daa
xchg
sub
fisubrs
cmp
gs
lock
pop
and
fmul
cld
imul
adc
jb
xor
bound
add
insl
sub
cmp
in
mov
fcmove
lods
pop
jl
push
xchg
cmp
stos
js
dec
data16
and
fcoml
or
popa
pop
sub
mov
bnd
pop
test
add
jp
cld
mov
das
mov
sub
ja
xor
push
inc
or
int3
imul
test
call
loope
push
enter
int
insl
mov
sub
cmp
cli
add
cmp
mov
xlat
jmp
add
sub
push
jp
add
add
jmp
arpl
mov
jo
pushf
sbb
sub
cmp
push
cmp
xchg
clc
subb
pop
inc
popf
lock
inc
cmp
xchg
sbb
loopne
popa
loope
mov
push
jne
lcall
dec
mov
push
add
cmp
jecxz
inc
sub
cmp
cmpsl
fstpt
imul
fs
fbstp
mov
pusha
add
xor
pop
xchg
test
ficoml
dec
sub
pop
cld
cmp
adc
pop
cld
cs
pop
or
cmp
xchg
sub
jmp
mov
scas
fildll
pop
cmp
inc
pop
stc
addr16
inc
test
mov
cmp
xor
pop
js
xlat
cmpsb
cwtl
cmovge
inc
jmp
pop
jge
shl
lahf
sbb
orb
inc
mov
cmp
jmp
leave
sbb
inc
push
mov
and
lock
fbld
repnz
imul
pop
jge
pop
sub
push
out
cmpsl
fwait
mov
jg
pop
mov
pop
cltd
pop
mov
add
xchg
mov
cmp
movsl
shl
hlt
xchg
xor
sbb
ret
out
insl
imul
icebp
sub
leave
clc
scas
mov
movsl
mull
cmp
fmuls
dec
daa
ljmp
imul
jge
xchg
jg
out
cmp
jmp
in
push
sbb
ja
mov
sti
insb
cld
add
pop
test
scas
loope
pop
fstps
test
mov
pop
addr16
out
or
pop
pop
xchg
sbb
pop
dec
adc
cltd
pop
jp
bound
add
pop
in
out
sub
cmpsl
sbb
add
jg
push
mov
jnp
mov
jnp
mov
mov
jg
cs
jnp
mov
jnp
push
daa
ja
push
add
add
cmpb
sbb
mov
or
xchg
mov
andl
or
sub
push
aaa
fstpt
mov
sbb
add
cmp
jo
mov
outsb
sub
mov
adc
pop
push
pop
sbbl
fsts
imul
ds
popa
pop
ja
pop
shll
mov
mov
or
jmp
ja
and
mov
push
xchg
popa
and
imul
aas
bound
mov
push
cmpb
orl
ret
mov
stc
xchg
push
jmp
pusha
mov
adc
mov
repz
je
mov
aam
or
hlt
jle
mov
mov
sbb
sbb
sbb
loop
ja
pop
add
sbb
inc
sahf
xchg
jmp
xchg
adc
mov
adc
push
push
ret
mov
jne
push
jb
inc
pop
xchg
fwait
int
nop
mov
xor
xchg
dec
jbe
xchg
repz
mov
sbb
mov
mov
mov
inc
mov
cmpl
mov
xrelease
je
mov
inc
fwait
mov
mov
jae
mov
xorl
or
jmp
mov
mov
xor
jb
sahf
xor
mov
xchg
mov
cltd
mov
roll
mov
inc
dec
negb
in
nop
ja
xor
pusha
mov
ss
mov
xchg
ret
pusha
jbe
add
inc
inc
xorl
jnp
call
jmp
mov
pop
inc
inc
hlt
scas
incl
xchg
dec
jne
inc
xor
nop
jbe
mov
insl
xor
mov
shr
sub
stos
xchg
xchg
inc
push
jge
xchg
fsubr
rorl
sbb
xor
adcl
sti
rcl
jne
mov
cmc
sub
jbe
cmp
shlb
jb
dec
and
add
sbb
mov
ja
roll
test
dec
dec
orl
jne
inc
fs
pop
loop
mov
push
enter
mov
sahf
ret
cs
not
mov
sub
mov
inc
jnp
xchg
pop
inc
je
dec
test
cmp
pop
pop
or
dec
adc
xor
imul
xchg
mov
adc
dec
lock
jb
test
imul
sbb
insl
ss
mov
jo
or
icebp
loope
popa
or
push
pop
and
sub
inc
je
ret
push
push
pop
inc
rcll
add
cmp
sbbb
push
shrl
pop
sbb
push
fwait
and
into
inc
scas
mov
jno
mov
rcrb
shll
and
int
call
push
lock
cmp
inc
arpl
mov
push
int
add
mov
add
sbb
and
ja
xchg
push
jecxz
push
int
push
jle
mov
or
jae
jns
iret
or
inc
sub
push
cld
or
cmp
sbb
pop
and
hlt
invd
dec
add
push
pushf
mov
cmc
sarb
add
mov
iret
jns
cmp
dec
mov
cmp
insl
or
cmp
add
int3
pushf
pop
push
add
sbb
push
push
clc
iret
test
ja
or
add
sbb
ja
adc
jp
dec
fidivrs
or
cmp
push
pop
xlat
inc
fcmovu
cmp
or
xlat
les
xchg
pop
xchg
inc
jnp
arpl
outsl
xchg
in
xchg
int
add
sbb
or
fs
or
xchg
mov
enter
lret
mov
or
or
inc
and
cmp
dec
call
and
mov
mov
pop
jmp
mov
mov
jg
in
sahf
inc
adc
xorb
sbb
scas
rcrb
sub
add
aam
push
sahf
mov
out
mov
call
pop
lret
cmpsl
jnp
fdivs
xchg
sub
out
repz
ja
or
pop
imul
inc
mov
ljmp
sub
ja
pop
or
pop
pop
fsubrs
pop
jno
sub
or
xchg
xchg
sub
xor
pop
stc
rolb
cltd
cmpl
sub
cmpsb
mov
fisubl
imul
repz
mov
test
jns
jnp
lea
jae
cmpsb
or
or
cmp
xchg
cli
jnp
mov
fisubrs
mov
inc
xor
mov
inc
push
mov
push
push
add
jae
fwait
hlt
xchg
cli
jp
xor
mov
sbb
xor
sub
mov
push
xor
xchg
add
sbb
xchg
mov
mov
cmp
repz
je
clc
gs
js
jae
push
xor
inc
gs
xor
sub
ja
xchg
jbe
jne
xchg
rcrl
ret
imul
or
lods
inc
lcall
testl
lcall
hlt
mov
xor
inc
push
xchg
mov
sysenter
mov
xchg
pushf
mov
shl
mov
ror
inc
xor
mov
or
xchg
pop
cmc
xlat
movsb
adc
sbb
mov
in
add
testb
push
lock
test
movsb
sarl
fsubs
out
sbb
fcomi
int
stc
ret
inc
and
push
xor
cs
mov
ja
pop
stc
jnp
fimull
adc
pop
cld
imul
add
sub
cmp
sbb
jp
int
mov
mov
mov
fistpll
adc
fsubrp
cmp
add
lea
mov
jg
ficomps
jge
add
ljmp
in
add
push
outsl
push
fimuls
fwait
stos
rclb
cmp
add
mov
sbb
leave
cmp
pop
fstpt
sub
lcall
jge
or
add
push
fwait
add
fidivrl
mov
adc
mov
sub
out
fidivrl
sbb
lods
ds
jo
out
or
fidivrl
addr16
mov
cmp
faddl
into
ficompl
ljmp
or
cmpsl
out
cld
pusha
xor
lret
dec
lret
pop
or
add
pop
cmp
shll
cmp
adc
mov
test
mov
dec
call
mov
das
mov
orb
rorl
or
pop
mov
dec
push
aaa
dec
bound
wrmsr
arpl
jl
cmpsl
out
jno
nop
mov
push
add
cmpsl
cltd
int3
sbb
jo
daa
mov
addr16
outsl
cmp
jge
cltd
ja
stos
mov
por
pop
or
push
add
iret
add
mov
xchg
dec
test
jle
pop
cmp
subl
jns
cmp
popa
and
and
xlat
sub
push
ljmp
jmp
leave
cld
xchg
and
jge
xchg
pop
hlt
in
cli
lcall
pop
mov
xrelease
cld
xchg
jne
bound
ss
jns
sarb
mov
pusha
sarb
mov
imul
js
hlt
sub
sti
ret
notb
xor
repz
inc
dec
mov
mov
ret
es
arpl
ret
mov
pop
xor
inc
mov
stos
jnp
jne
cmp
sarb
mov
mov
cmp
or
idivb
ficoms
out
addl
testl
pop
imul
testl
inc
sti
push
fwait
in
addr16
leave
int
fmuls
lods
lcall
mov
cli
pushf
sub
or
mov
or
fnstcw
lret
repz
mov
aas
clc
mov
lods
fsubrl
call
notl
jmp
cmp
or
int3
add
cmp
lcall
sub
insl
mov
cmp
sub
lods
and
roll
pop
mov
or
xchg
in
inc
or
pop
add
or
sbb
lods
daa
add
dec
insl
and
or
mov
mov
movb
insb
add
ja
pop
pop
cld
mov
mov
mov
inc
pushf
faddl
mov
jns
sub
std
and
jae
shll
incl
shrl
mov
mov
mov
cmp
push
mov
test
nop
lahf
mov
fwait
cmp
cli
push
inc
push
adc
inc
xor
jg
mov
ret
xchg
ds
or
dec
std
inc
addl
pop
sub
mov
and
sub
jg
cwtl
roll
sbb
adc
cmp
and
jns
cmp
inc
mov
mov
mov
inc
or
sub
mov
pop
push
push
cmp
push
mov
in
mov
mov
jmp
test
xorb
leave
inc
cltd
sub
push
inc
mov
adcb
fiadds
cmp
add
and
and
push
add
inc
ja
fld
push
sarl
mov
clc
das
subb
ds
push
jbe
sar
push
das
stc
adc
mov
fisttpl
mov
hlt
inc
push
jl
adc
push
mov
aas
push
xchg
ret
cmpl
aas
mov
pushf
xorb
scas
cmp
sbb
mov
dec
inc
out
mov
inc
mov
inc
xchg
sar
mov
jle
mov
not
inc
lds
dec
xchg
int
xchg
movsb
add
orb
sbb
inc
inc
push
call
push
lds
inc
les
push
xchg
cmp
ret
cmp
aas
js
jbe
jmp
sarl
mov
into
inc
xor
pop
inc
inc
fwait
mov
cmp
or
push
ret
xor
sar
enter
fidivs
int
sbb
mov
xor
pop
add
lret
xchg
jp
sbb
add
sbb
dec
add
ret
dec
inc
out
xor
iret
ja
addl
inc
sbb
add
lds
ret
add
mov
ret
shlb
gs
ret
test
sbbl
in
pop
das
inc
or
jp
pop
inc
mov
xchg
inc
jg
popf
ja
add
sbb
sbb
incb
sbb
dec
jp
testb
sub
inc
aam
sbb
notl
pop
push
mov
mov
inc
push
sub
ret
leave
out
push
test
imul
ja
inc
sbb
add
inc
inc
stc
pushf
fwait
xor
addb
jnp
xchg
cltd
arpl
xor
adc
pusha
adc
inc
inc
int3
mov
std
cli
adc
inc
mov
iret
add
roll
add
rclb
ret
add
in
push
add
ja
jl
stos
ja
arpl
addb
andl
iret
add
add
mov
jg
jge
fwait
add
xchg
fwait
sarb
dec
or
in
sub
inc
sbb
notb
mov
xchg
ja
jbe
loop
add
inc
mov
push
faddl
jg
inc
mov
xchg
cld
jge
inc
sarb
mov
inc
jno
jge
mov
jbe
mov
xor
lods
add
jno
and
fstpl
ja
jnp
push
jg
push
jns
jnp
mov
or
sub
ret
js
jmp
mov
add
mov
cmc
aas
or
dec
xor
icebp
sbb
stc
jnp
das
xor
mov
repnz
cmp
icebp
mov
sbb
sbb
daa
ret
dec
add
ret
mov
adc
mov
lea
addb
push
repz
jns
loop
daa
add
mov
negb
addl
mov
jle
ja
ret
fs
ret
add
sub
mov
xor
add
movzbl
pushf
jno
fdivrl
daa
add
sbb
out
add
test
add
out
incb
mov
aas
push
test
add
aas
add
or
sbb
out
dec
inc
clc
in
sub
add
and
mov
xchg
sbb
addl
jmp
cli
dec
add
incl
lods
je
xor
cltd
jle
add
mov
out
and
or
pop
push
gs
mov
test
dec
out
fimuls
je
or
lahf
cmp
fwait
inc
add
outsb
bound
inc
mov
sub
aaa
inc
pushf
test
or
cmc
jmp
inc
rcll
ret
decl
loope
mov
add
cmc
jnp
in
xchg
mov
jg
xchg
sub
jmp
ja
addl
ret
xchg
sub
imul
js
push
xchg
add
xchg
add
adc
subl
cmp
sbb
daa
add
mov
and
clc
roll
ret
xor
ds
cmp
mov
xor
sbb
or
and
and
xchg
in
sbb
or
das
ja
test
arpl
shll
mov
pushf
or
mulb
jp
ret
adc
gs
inc
filds
mov
aas
inc
cmp
int3
cmp
xchg
ja
add
add
mov
sti
sahf
jae
mov
clc
fnstcw
adc
xor
mov
clc
add
cli
adc
dec
cmp
push
adc
aaa
sbb
fwait
xor
adc
sub
jae
mov
loope
jp
push
inc
fadds
inc
roll
rol
inc
stos
ja
adc
cmp
lahf
mov
jge
cmp
sbb
fwait
sbb
cmp
rcr
jae
and
inc
and
mov
dec
pop
data16
push
aaa
ja
mov
imul
xacquire
sub
sub
shr
decb
pop
push
xor
push
aas
mov
ja
mov
add
and
pop
or
cmp
or
stc
mov
mov
shll
movsb
adc
mov
push
xchg
dec
ret
and
lds
pop
ja
js
cli
add
add
push
mov
sub
jns
jg
jne
popa
xor
arpl
push
mov
jnp
mov
push
out
mov
add
mov
inc
cli
mov
andb
movsb
jp
out
and
cmp
les
cmp
test
mov
add
es
or
popf
jg
sbb
mov
sbb
subb
aas
lcall
jg
mov
xor
mov
add
decb
jne
int
popf
jg
bound
fwait
insb
inc
xchg
shlb
mov
add
repz
and
mov
stc
and
int3
repz
jnp
pusha
stc
cmp
mov
jp
push
and
mov
push
add
or
mov
add
mov
mov
xchg
jp
rorl
mov
ss
jbe
dec
ret
inc
mov
push
test
sbb
insl
xor
aaa
mov
loop
and
adcl
jb
pop
sarb
jg
push
aam
in
ds
sti
ret
mov
ljmp
mov
dec
mov
lds
cmp
dec
xchg
pop
push
and
inc
xchg
add
push
xorl
ja
in
ret
mov
jmp
mov
sarb
mov
loope
jle
mov
lcall
and
es
sbb
test
and
in
xor
dec
ret
or
test
sarb
mov
mov
xorl
in
add
out
or
jns
lods
mov
ret
rcrb
dec
pusha
std
mov
inc
cli
insl
xchg
icebp
je
cmp
pop
cmp
cmp
ja
mov
jae
pushf
sar
imul
cmp
aad
shrl
mov
pushf
cld
rorl
cld
mov
sarb
ds
ja
ret
inc
fnstenv
or
inc
mov
insb
or
insl
loop
inc
dec
daa
mov
mov
sbbb
mov
scas
ret
adc
inc
xorl
xchg
cmp
mov
mov
jl
sbb
ret
inc
jp
jmp
jg
mov
jl
lahf
ja
inc
xor
in
jg
or
sbb
xchg
inc
fwait
and
push
mov
lcall
inc
ret
jmp
and
cmpl
adcb
std
test
pop
xchg
in
aam
out
test
daa
xor
sub
mov
inc
lods
mov
mov
sub
mov
fisubrs
add
mov
add
movl
inc
cmp
fldl
mov
fldl
dec
aas
lret
test
cmp
lret
push
add
mov
push
push
cmp
rcrb
inc
jnp
push
jns
jge
mov
cmp
pushf
push
jae
shlb
jmp
std
jecxz
bound
push
and
leave
mov
inc
and
jo
mov
out
mov
js
jle
adc
je
repnz
add
mov
jnp
inc
sti
pop
and
cmc
and
pusha
push
sub
cmp
fs
dec
push
mov
add
jg
daa
mov
divl
push
popl
call
ds
gs
sbb
out
mov
std
dec
loopne
test
mov
jns
push
push
sub
and
jmp
cld
dec
hlt
decl
int3
pop
aaa
pop
hlt
sbb
or
sub
jg
pop
daa
mov
add
jg
and
cmp
ret
aaa
lea
adcl
addl
mov
cmp
push
xchg
outsb
inc
cld
add
pop
mov
les
jg
and
inc
jl
and
pop
cld
rcrb
push
xor
xchg
jbe
insl
pop
cmc
jg
cmpl
inc
outsb
jae
movsb
fadd
js
data16
jle
out
popl
mov
push
jg
mov
and
sub
jp
mov
mov
aas
jg
push
lea
sbb
mov
sbb
adcl
mov
xor
leave
jmp
mov
mov
mov
dec
fs
out
ret
xchg
jp
insb
sti
xor
sub
ret
sbb
xor
aas
xor
xchg
push
xchg
rcrl
cld
mov
mov
es
xor
cltd
lahf
mov
gs
and
xor
jns
pop
loop
in
or
fwait
jg
popa
sbb
jp
ret
outsb
fwait
and
mov
inc
loope
aaa
xchg
inc
testl
repz
aaa
jbe
dec
push
sbb
mov
inc
push
rcr
scas
ror
dec
pop
lds
mov
pop
xor
aas
xchg
popf
jmp
outsb
dec
les
add
xchg
rcr
out
push
add
shlb
icebp
ja
inc
movsb
xor
mov
and
aaa
dec
add
aas
mov
cmp
fs
test
mov
cmc
cmpsb
ja
mov
mov
inc
repz
insb
rcl
inc
adc
fwait
bound
popf
mov
add
jp
jo
lcall
orb
dec
mov
insb
add
shl
out
jp
cmp
mov
mov
aaa
fwait
cmp
out
mov
jp
das
jae
dec
les
adc
jle
fisubs
xor
js
lds
xor
testl
shll
sbb
sbb
fldt
mov
mov
movb
incb
jmp
jl
pop
mov
popf
xchg
push
cmp
inc
rorb
inc
adc
and
adc
jle
roll
leave
push
lods
cmp
aaa
fwait
pop
data16
jle
leave
inc
cmp
cmp
bound
mov
je
jg
andb
xchg
xor
roll
mov
sarl
aas
or
push
int
sub
sti
xchg
aaa
stos
mov
test
xor
mov
inc
adc
je
xchg
xchg
cmp
add
fiadds
in
jl
cmp
jnp
cmpsl
push
jne
mov
add
rol
jl
and
test
jp
jg
adc
into
aaa
xchg
sahf
dec
addl
aad
fcmovnb
add
shlb
inc
test
sub
ja
jb
lea
in
dec
cmp
add
add
lds
lods
inc
xchg
idiv
fsubl
rorb
repz
mov
adc
push
gs
fbld
jecxz
stos
cli
mov
mov
mov
or
testl
mov
xchg
out
xor
sub
jg
lds
jo
sarl
test
ja
adc
inc
mov
xchg
and
out
lds
rcl
adcb
sbb
nop
outsb
xchg
insl
mov
ss
imulb
cmp
push
fwait
test
popw
js
mov
xchg
int3
sub
xchg
sub
pop
sub
std
test
and
jmp
addl
inc
jmp
aas
jmp
pop
andb
sbbl
lea
mov
cmp
ja
jnp
and
and
inc
roll
dec
rcr
cmp
arpl
and
orl
test
or
add
and
sbbl
or
mov
aaa
push
testb
inc
mov
fsubrl
ret
loop
mov
cmp
cld
outsb
push
xor
faddl
sbb
in
cmp
mov
mov
sbb
jge
and
inc
push
pushf
cld
cld
jle
push
add
push
pop
inc
pop
jge
pushf
hlt
mov
shrb
inc
sbb
in
adc
mov
lds
push
jne
push
loope
inc
inc
ret
out
jne
out
and
cmp
ret
pop
push
divb
ds
jmp
nop
sbbb
cmp
xchg
shll
mov
mov
mov
jbe
shll
jecxz
mov
jg
fwait
xchg
out
popl
sub
xor
inc
fwait
cmc
iret
push
push
hlt
ja
jg
ret
xchg
cmp
out
loope
push
les
neg
jns
out
cmp
push
les
cmc
cltd
stc
cmp
or
mov
fwait
xchg
test
push
pop
adc
sbb
test
pushf
xchg
mov
push
cmp
repz
sub
loop
les
ja
cmp
push
js
push
sar
rcll
inc
imull
add
cmp
sbb
inc
xchg
aas
xchg
js
in
add
push
jle
xor
leave
mov
ja
push
inc
add
icebp
pop
andl
test
sbb
or
dec
mov
mov
orl
jl
mov
cmp
push
cmpsb
cmp
or
pop
rolb
mov
mov
mov
notl
test
xchg
add
mov
xchg
int
inc
repnz
gs
data16
fsts
lds
sbb
stc
inc
inc
push
cmp
cld
adc
inc
subb
push
andl
roll
fnstcw
mov
ds
push
push
testl
lcall
sub
mov
nop
stc
cs
roll
mov
stc
cmp
test
push
inc
mov
jge
inc
rcl
orl
cmp
xchg
inc
mov
inc
add
pusha
js
aas
jnp
lea
pop
add
loopne
cmpsb
aas
push
and
inc
les
add
fwait
shlb
mov
pop
add
mov
stc
hlt
sub
jns
mov
mov
mov
ds
cmp
inc
data16
jnp
subl
out
mov
cltd
inc
outsb
loopne
pop
shrb
mov
out
jns
mov
pop
aaa
mov
lods
jae
mov
and
loopne
sub
inc
push
inc
fsts
cmp
mov
jmp
sbb
inc
ljmp
mov
in
mov
in
ja
pop
add
and
test
push
ja
stc
jnp
pop
jnp
and
xor
cmp
lods
mov
jg
xor
mov
add
adc
cmp
out
mov
aaa
push
xchg
fwait
or
add
les
fiadds
pop
mov
jg
jl
shlb
mov
orl
cmpsb
mov
xchg
shl
movsl
jp
mov
add
mov
rolb
std
jmp
cmp
cmc
jl
xchg
and
cmp
ret
sahf
cmp
dec
stc
and
jbe
jl
sahf
int3
sbb
push
mov
dec
push
cmp
sarb
mov
not
dec
sbb
in
jns
sbb
mov
inc
fwait
dec
ds
insl
cli
mov
fwait
int3
sbbl
aad
dec
mov
ret
mov
xorb
jle
insl
mov
cmp
lret
sbb
movsl
addb
mov
test
fdiv
jno
fisttpll
sbb
add
or
in
sbb
and
jg
aad
sbb
mov
andb
push
add
ret
stc
loope
sub
sbb
mov
inc
js
push
jae
and
mov
sbb
aaa
mov
xchg
pop
cmp
pop
addb
mov
aaa
xchg
jmp
cmpsl
push
xchg
cli
jmp
mov
ja
xchg
rorl
xlat
pop
js
pop
int3
cmp
pop
sarb
mov
mov
fistpll
cmp
pop
dec
mov
ret
adc
push
daa
cs
or
mov
xchg
sbb
inc
sub
imulb
sub
out
inc
fcompl
dec
sub
ds
jg
sbb
cmpsl
stc
xchg
int
or
sub
cs
sub
dec
nop
sub
out
inc
sub
imulb
sub
out
ret
sub
push
test
and
ds
jg
sbb
dec
xchg
jns
mov
add
adc
out
inc
sub
xchg
test
and
sub
out
lds
dec
sub
out
inc
sub
add
lahf
xor
pop
jge
xchg
sbb
inc
int3
sbb
test
and
sub
out
inc
sub
xchg
test
xor
sub
out
inc
sub
test
and
sub
into
out
inc
sub
imulb
pop
mov
xchg
pop
push
xchg
add
adc
out
inc
sub
test
and
sub
out
inc
sub
xchg
test
and
sub
out
inc
sub
xchg
test
xor
sub
into
out
ret
adc
je
or
inc
push
nop
mov
leave
cmp
ds
mov
rcrb
cmp
sbb
rcrb
cmp
rcrb
cmp
rcrb
cmp
sbb
mov
sbb
out
rcrb
cmp
rcrb
cmp
addr16
bnd
mov
jns
mov
xor
cmp
pop
cmp
mov
pop
cmp
pop
cmp
mov
pop
cmp
pop
cmp
sbb
and
test
xlat
ror
ja
aam
daa
out
imul
sbb
pop
mov
daa
cli
xchg
cmp
fcmovu
clc
or
test
mov
sbb
std
xor
push
shrb
mov
aad
fadd
add
sub
sarl
sbb
mov
adc
gs
imul
pop
xchg
ja
cmpsl
aas
add
aas
pop
inc
andb
cmp
in
daa
ja
test
aas
ja
mov
fnstcw
mov
mov
imul
pop
jg
das
fsubs
aas
and
repz
addr16
adc
test
nop
jnp
fsubrl
mov
push
pop
sub
sbb
into
pusha
imul
or
fdivrs
mov
sub
fwait
cmp
sub
in
sbb
lcall
or
loopne
cmp
adc
cmp
xchg
fs
lods
and
mov
or
clc
fcmove
pop
jnp
or
push
stos
lret
aas
daa
sub
test
pushf
mov
adcl
sub
sbb
ss
mov
adc
xchg
mov
or
mov
cmp
hlt
xchg
dec
mov
jmp
push
shr
int3
test
add
or
hlt
mov
test
sbb
inc
repnz
push
xor
repz
sub
arpl
xchg
and
ficomps
or
dec
int
and
in
cs
dec
imul
sub
pop
cmp
mov
fwait
cmp
rolb
pop
add
js
scas
clc
push
mov
outsl
clc
addr16
inc
jp
repz
adc
rcr
ficomps
fldenv
sbb
call
push
ss
add
insl
or
fs
or
bound
mov
inc
std
jbe
daa
and
add
xchg
jnp
jecxz
mov
daa
loop
je
push
add
jae
test
mov
inc
in
xchg
movsb
push
add
xor
negl
mov
adc
cmp
and
icebp
or
xchg
push
adc
xchg
adc
loop
pop
jb
mov
hlt
and
aaa
jno
xor
xor
movsl
push
xchg
adc
and
inc
cltd
bound
jae
ret
icebp
adc
and
roll
jae
push
inc
jle
xlat
xchg
inc
ss
mov
and
mov
or
sbb
daa
lea
mov
shrb
xchg
repnz
popa
data16
test
adc
cmp
push
bnd
les
dec
xor
mov
xlat
mov
outsl
lock
push
arpl
xor
xchg
and
imul
enter
stc
rolb
stos
mov
ret
gs
and
mov
push
xchg
inc
in
push
jne
insl
cmp
popa
bound
mov
cmpsb
stc
mov
inc
xor
repnz
jecxz
jmp
repnz
add
insl
leave
clc
jle
outsb
es
sahf
sub
dec
movsb
mov
mov
mov
je
pop
jb
jecxz
fnstcw
pop
sbb
pop
xchg
mov
int3
movl
imul
aad
jno
stc
movsb
inc
jecxz
add
aam
or
and
push
sub
adc
loop
jns
sbb
xor
mov
daa
add
adc
popa
into
and
adc
jno
out
mov
jp
cmc
daa
aas
cmp
mov
shll
xchg
mov
cs
test
add
je
test
and
mov
inc
sbb
pushf
or
pop
andl
roll
jne
add
xchg
mov
movsb
shrb
mov
shl
pop
call
ret
sub
ret
mov
lods
jbe
in
mov
mov
jecxz
lds
adc
fs
inc
mov
mov
push
mov
pop
xchg
cmp
and
inc
mov
daa
or
aam
inc
daa
mov
ret
repnz
add
xor
je
scas
mov
adc
idivl
mov
jp
sbb
or
lahf
in
loope
mov
mov
gs
push
sbb
xor
jl
in
mov
mov
arpl
dec
std
ret
push
outsl
add
pop
ret
cmp
and
push
xchg
aad
xchg
fdivs
xchg
cmp
jne
inc
jle
lods
cmp
data16
push
cmc
lcall
cmp
sarl
movsb
jl
and
mov
xchg
and
scas
mov
imul
loope
fadd
push
xorl
push
push
xor
scas
lea
in
jne
xor
xlat
add
push
repnz
pop
jns
shlb
adcb
into
jb
adc
cmp
jge
mov
cmpsl
jge
add
mov
sbbb
push
xchg
pop
add
insl
rclb
mov
inc
bound
enter
or
xor
lods
arpl
add
push
and
addr16
in
mov
cmp
cltd
cwtl
xor
mov
add
int
mov
orb
or
push
push
fs
mov
pop
movsb
add
add
js
jg
xchg
hlt
aam
out
lret
mov
icebp
xchg
ret
bound
pop
mov
cwtl
test
cmp
movsl
push
movsb
loopne
jno
clc
enter
aad
bound
adc
lds
aam
imul
xor
mov
add
out
out
mov
fmul
add
xchg
add
cmc
scas
inc
adc
push
shrb
mov
and
insb
pop
bound
sbb
and
xchg
mov
enter
xor
dec
xchg
addr16
mov
add
inc
and
sbb
cmp
out
gs
out
dec
dec
out
jnp
dec
dec
repnz
mov
push
adcl
mov
test
jbe
movsl
inc
fnsave
push
loope
adc
add
or
roll
mov
xor
adc
push
in
mov
inc
sarl
jae
push
mov
and
arpl
test
add
dec
jecxz
push
hlt
sub
dec
jge
inc
psllq
or
pop
adc
popa
pop
lahf
mov
mov
inc
or
sub
xchg
scas
out
adc
add
and
je
cmp
mov
xchg
es
js
mov
pop
mov
xchg
inc
push
loopne
inc
or
loopne
or
cld
jne
mov
mov
xchg
cmc
sti
out
or
adc
or
mov
out
repnz
adc
pop
cwtl
cmp
adc
stc
sti
dec
push
dec
lahf
mov
dec
jecxz
cmp
inc
push
pushf
or
pop
loop
cmc
xchg
gs
or
fcompl
aas
add
add
pop
mov
js
out
add
andl
push
pop
movsb
rcl
popa
out
xor
push
andb
adc
aad
push
hlt
out
lret
loope
or
pusha
xor
dec
pop
add
lahf
or
test
pop
push
movsl
cli
imul
add
inc
adc
xchg
in
out
dec
je
or
repnz
fs
inc
jbe
and
ljmp
inc
ss
out
jp
jl
sub
xor
adc
out
jne
inc
jns
cmp
out
cmp
out
inc
and
arpl
arpl
arpl
int3
out
jb
bound
adc
push
cwtl
aaa
cwtl
cmp
xchg
and
daa
and
fbstp
fdiv
cmpsb
fsubs
mov
and
pop
sbb
arpl
subb
cwtl
out
leave
out
mov
lea
test
and
or
xchg
out
xor
push
mov
ds
fsub
aas
push
adc
xorl
xor
out
push
and
inc
outsl
sub
iret
inc
imul
lret
fnstsw
inc
adc
int3
mov
ret
xchg
repnz
and
fmuls
and
mov
fwait
mov
sbb
popa
mov
adc
jg
aad
mov
lret
jg
add
mov
icebp
jb
xchg
repz
lahf
shlb
add
and
push
pop
aas
adc
notb
pop
and
loope
movl
cld
inc
sub
mov
dec
or
adc
rcll
aad
cld
daa
mov
xchg
in
leave
shll
call
daa
mov
std
stos
cli
mov
adc
push
xchg
jb
clc
sbb
fmul
imul
mov
mov
repnz
js
mov
adcl
and
xor
mov
outsb
xchg
add
mov
repz
ret
loop
jbe
pop
xchg
icebp
andb
popa
xchg
cmpl
pop
xorl
out
pop
add
push
inc
out
and
inc
adc
sbbb
pusha
xor
jb
push
jp
cwtl
out
mov
cmp
xlat
mov
sti
fcompl
enter
loope
ret
ror
repnz
pushf
adc
mov
es
push
sbb
fs
mov
arpl
sub
xchg
fdivl
fs
sbb
push
cmp
in
cmp
aaa
in
cmp
pop
inc
cmp
ja
fwait
mov
cmp
cmp
sbb
cmp
pusha
jae
xchg
jl
cmp
or
xchg
lods
dec
cmp
mov
sbb
pop
cmp
std
mov
or
sti
aad
xchg
adc
cmp
jmp
xor
ret
loop
adc
jmp
leave
mov
repz
repnz
test
in
mov
rcll
ja
xchg
lret
add
cmc
cmp
mov
or
leave
or
push
push
sbb
fstps
jp
js
mov
dec
or
imul
cmpsb
and
cmp
add
inc
lret
xchg
scas
jns
mov
push
pop
xchg
push
scas
in
cmp
add
dec
mov
add
iret
adc
insl
cmc
arpl
dec
pop
sbb
xchg
sbb
mov
je
mov
sbb
mov
fnstcw
aaa
dec
adc
xor
loopne
pusha
divl
mov
mov
adc
sub
or
enter
mov
mov
dec
mov
xor
xchg
fmul
pop
ds
sbb
unpcklps
fcmovnb
dec
sti
add
xlat
cltd
fcomps
in
xor
jne
and
pop
adc
or
mov
push
cmp
stos
dec
pop
xchg
gs
jnp
fnstcw
test
and
jp
sub
dec
enter
mov
dec
pop
mov
mov
xchg
aaa
shl
xchg
les
aad
adc
pop
mov
push
popa
mov
or
stos
addr16
lds
add
or
jge
fimull
jp
loop
dec
mov
stos
popa
popf
xlat
inc
repnz
shrl
push
bound
adc
cmpsb
dec
pop
lock
adc
lock
loop
mov
movsb
les
add
push
dec
adc
icebp
adc
mov
fnstenv
or
bound
repz
je
inc
jmp
pop
fs
mov
pop
jns
lahf
push
mov
mov
xchg
mov
inc
jae
mov
xchg
mov
mov
add
mov
imul
or
jp
xchg
enter
mov
add
mov
push
jp
pusha
mov
xor
xor
mov
xchg
mov
popa
jb
xor
or
jne
mov
pop
cmp
jecxz
inc
mov
sbb
or
cltd
add
mov
pop
aad
std
mov
stc
adc
rclb
xchg
aaa
push
push
test
inc
ds
adc
ret
in
leave
sbb
enter
mov
out
popa
mov
push
inc
sbb
cmpsb
stos
jg
test
jae
aad
pop
jne
fsubl
sub
jns
mov
push
daa
inc
dec
imul
mov
mov
xchg
dec
push
stos
stos
adc
pushf
pusha
std
push
inc
fnstenv
scas
sti
xor
ss
cmp
cmp
inc
xchg
dec
outsl
cmc
sbb
xchg
cltd
stos
orl
loopne
or
stc
les
mov
out
mov
cmp
or
xchg
inc
gs
andb
andb
aas
sub
or
bound
pop
loop
arpl
roll
inc
stos
sbb
sbb
sahf
insb
dec
popa
imul
sub
jnp
pop
flds
xchg
adc
jle
jae
dec
mov
cmp
subl
push
pop
sbb
mov
js
inc
or
leave
popa
adc
pop
xorb
and
out
rcl
jecxz
adc
add
fs
ret
mov
mov
push
data16
jp
pop
dec
push
in
pop
orl
adc
repnz
iret
xchg
pop
call
orl
adc
repnz
stos
jge
fldl
lds
bound
stos
jge
fldl
repnz
mov
dec
add
movb
add
cmp
insb
adc
mov
dec
mov
mov
ret
cld
fcomi
or
fistl
mov
popa
imul
int3
cmp
sub
adc
out
push
sub
or
push
mov
sub
cmp
or
mov
or
jle
imul
jp
dec
inc
dec
fnstcw
adc
sbb
test
enter
dec
popf
sahf
roll
push
inc
imul
cmc
or
mov
adc
data16
shrl
add
adc
aaa
cmp
jae
push
xor
andl
shlb
imul
ret
lret
les
lcall
rol
incl
cmp
xchg
fucomip
cmp
add
arpl
cmpl
imul
lock
aaa
imul
int
or
mov
std
sub
enter
cmp
jle
push
lods
sub
loopne
adc
aaa
mov
es
inc
mov
test
xchg
mov
xchg
or
xor
clc
test
pop
bound
jecxz
lret
jle
loop
movsl
mov
inc
aaa
imul
repnz
sbb
movsb
ja
mov
push
inc
xor
push
movsl
add
pop
jl
or
cld
or
dec
ret
test
xchg
or
call
fistpl
xchg
cmc
bound
and
and
or
jbe
es
repz
and
es
dec
fnstsw
and
cltd
sbb
pop
sub
int
sbb
mov
jae
adcl
arpl
or
push
stc
mov
test
xchg
and
out
aam
and
xor
add
jecxz
ret
mov
out
and
stc
add
add
pop
sbb
mov
stc
adc
push
pop
sbb
out
lds
stc
dec
clc
stc
cmp
jmp
mov
ds
push
mov
sbb
or
dec
add
addr16
sbb
imul
stc
out
add
jmp
sbb
jo
insb
out
dec
add
bound
pop
sbb
out
xchg
sbb
adcl
or
cs
add
bound
pop
sbb
out
xchg
jge
stc
fwait
dec
add
bound
sbb
out
cmp
pop
sbb
andl
out
imul
or
xor
ss
jns
out
scas
cmp
jmp
dec
bound
sbb
pop
mov
stos
stc
mov
add
out
adc
dec
add
cmp
or
jo
insb
dec
add
bound
pop
sbb
sbb
mov
mov
addl
stc
cmp
add
dec
push
jo
lahf
cmp
addb
sbb
mov
jmp
shrl
dec
vpmacsdql
sbb
dec
mov
out
dec
dec
leave
sbb
jae
or
mov
in
popa
mov
pushf
mov
or
or
dec
popa
insb
js
or
lods
or
xchg
or
mov
mov
jmp
add
dec
add
mov
push
mov
ds
add
bound
pop
mov
mov
arpl
mov
push
xor
mov
dec
inc
mov
test
dec
outsl
push
xchg
push
lods
outsl
xchg
dec
packsswb
adc
leave
in
sbb
xchg
inc
ss
je
add
fs
sbb
cmp
sbb
scas
in
addr16
push
or
mov
push
xor
sbb
mov
xchg
pop
cmp
lret
or
cld
enter
sbb
mov
dec
mov
mov
xchg
pop
mov
xor
pusha
mov
cmp
lds
pop
aad
lret
cmp
dec
cmp
popa
stos
js
inc
sbb
inc
js
arpl
addr16
lret
lret
lret
dec
cmp
adc
aas
xchg
sahf
sbb
and
sub
or
fs
inc
fbld
xchg
sbb
xchg
xlat
js
out
fimull
sti
stc
filds
xchg
mov
in
jg
aad
out
sbb
out
cmp
cmp
cld
push
enter
orl
out
lret
dec
leave
pop
sbb
test
dec
add
sub
adc
outsl
and
imul
mov
repnz
xchg
xchg
mov
lret
sub
or
fnstsw
bound
jbe
cs
add
push
mov
sahf
dec
rcrb
and
sub
pop
add
mov
outsl
sbb
dec
popf
or
dec
inc
jg
jle
popf
pop
sbbl
push
popf
push
les
pop
dec
sbb
ds
adc
ret
popa
push
push
mov
add
mov
mov
dec
and
lret
repnz
fs
inc
adc
or
mov
js
push
cs
dec
jo
test
xchg
xchg
fcompl
je
xor
jge
or
stc
call
adc
or
dec
mov
lds
cld
xchg
shrd
aas
bound
mov
push
ss
mov
xor
mov
repz
lods
adc
sbb
xchg
push
insl
lods
or
xlat
sbb
adc
xchg
push
test
mov
sbb
fidivrs
pop
outsl
jg
dec
jns
mov
jnp
out
lcall
iret
jns
mov
adc
jo
inc
sbb
mov
sbb
rcrb
jns
mov
adc
jno
inc
sbb
mov
sbb
fdivrs
movaps
cmp
jnp
sub
mov
or
fisubl
ret
popa
xchg
sbb
xchg
cmp
mov
jnp
push
ja
cmpsl
mov
and
cmp
jnp
cmpl
div
and
cmp
mov
cmp
popf
or
ljmp
aas
insb
js
or
data16
pop
pop
fildll
leave
mov
sbb
mov
or
sbb
enter
pop
fwait
sub
test
or
sbb
or
movsl
cmp
dec
cltd
jp
sbb
ja
jnp
mov
cmp
scas
addl
push
push
js
dec
pop
sbbl
cmp
mov
ja
pop
mov
lods
adc
scas
add
jmp
loope
xor
pop
ja
inc
jne
pop
sbb
xchg
xchg
push
and
mov
insb
mov
xchg
xlat
cmp
adc
push
pop
arpl
mov
or
inc
push
jge
mov
imul
gs
in
icebp
sbb
inc
or
xchg
popa
dec
mov
mov
lock
frstor
addr16
rcll
sub
mov
loope
js
sub
aaa
mov
xchg
inc
jns
push
rorl
mov
mov
cs
cmp
push
loop
sarl
pop
xorb
inc
inc
mov
push
stos
mov
js
dec
int3
jnp
pop
mov
jmp
cltd
loope
pop
femms
cltd
jmp
in
inc
mov
xor
into
movsl
leave
popl
mov
and
jecxz
les
pop
sahf
js
ss
es
sahf
jb
movsb
mov
cwtl
lret
sbb
mov
xchg
scas
cmc
sbb
add
jb
decl
pop
and
stos
stos
inc
mov
add
or
xchg
mov
push
cmp
add
mov
cmp
cltd
outsl
mov
pop
sub
inc
mov
jns
cltd
sub
jmp
and
sbb
clc
and
in
idivl
mov
mov
mov
add
cmc
fwait
out
or
popf
or
dec
test
in
xor
jnp
lock
mov
imul
mov
das
add
loope
inc
test
test
sub
loop
mov
test
mov
adc
push
test
mov
sbb
imul
jecxz,pt
inc
into
mov
scas
cs
pop
scas
test
mov
test
jge
inc
mov
mov
mov
sti
jg
mov
je
outsl
cmp
or
dec
scas
sahf
mov
mov
jp
sbb
inc
xor
fucomi
pop
dec
ds
xchg
rcrl
push
xor
xlat
or
into
mov
loopne
mov
sbb
inc
out
jne
shlb
ss
mov
nop
sub
xchg
jmp
fldcw
dec
lock
xor
pusha
outsb
insl
pop
out
push
push
or
cmp
test
movsb
xchg
pop
cs
sahf
pushf
or
mov
pop
nop
mov
jmp
jmp
xor
sub
add
out
inc
dec
lock
fwait
dec
adc
sbb
mov
icebp
dec
lock
sub
lods
mov
adc
pop
mov
lock
aam
pusha
icebp
imul
fsubl
pop
and
bnd
fnstcw
push
in
adc
jo
and
and
pop
fisubs
andl
dec
or
in
jae
sub
inc
popf
leave
xor
in
inc
fldenv
ret
push
push
jns
mov
xor
and
jmp
out
pop
test
push
sbb
xor
aas
jle
fs
jmp
pop
adc
movsb
and
xchg
dec
and
int3
movsb
gs
fwait
push
lds
decb
in
rolb
xchg
dec
sbb
lock
icebp
fld
shrl
push
sbb
loopne
icebp
int3
xchg
cmp
test
inc
and
sti
pop
stos
xchg
cld
std
inc
gs
test
add
idivl
aam
popf
cld
pop
mov
xchg
movsb
rcr
mov
xchg
ds
ja
xor
fildl
lret
ja
pop
mov
jecxz
cmp
fidivs
fdivrl
sub
adc
push
lret
inc
push
mov
sub
mov
lret
fcmovnb
flds
add
xor
jge
popf
lahf
pop
aas
sahf
inc
testl
mov
mov
daa
sahf
fwait
in
mov
imul
sub
outsl
cmp
nop
or
or
dec
rcrb
mov
stos
enter
lcall
popa
dec
outsl
pop
jno
aas
push
inc
mov
lcall
cmp
subl
out
loope
push
icebp
cmp
lret
shrl
xchg
pop
outsl
xor
jg
add
scas
adc
aas
lahf
inc
sub
mov
mov
adc
jo
cmp
int3
xlat
mov
ret
xorb
lock
dec
sarb
frstor
jae
aas
jno
dec
add
xchg
mov
sahf
loopew
xadd
rcrl
xlat
inc
addr16
aas
adcb
loop
fs
ret
mov
aas
and
sbb
movsb
adc
test
ds
add
xchg
clc
xor
cmpsl
xchg
les
pop
repz
cmp
xor
aas
xor
adc
ret
jne
aas
movsb
inc
adc
xlat
hlt
test
pop
and
roll
gs
aad
outsl
loopne
test
xchg
push
and
in
adc
mov
inc
mov
ds
clc
push
cmpsb
in
xor
add
add
aam
mov
stos
and
es
arpl
lods
jnp
clc
or
pop
lret
ljmp
jnp,pt
cmp
fcom
ja
pop
pop
inc
or
pop
or
addr16
fwait
pop
clc
sbb
cmp
divl
cmp
lcall
jbe
xchg
and
cli
pop
add
mov
stos
jns
pop
pop
push
sub
jnp
mov
pop
cmp
lcall
pop
lock
push
pop
cmp
or
repz
sbb
or
clc
jl
fnstcw
adcb
xchg
popa
ja
nop
pop
mov
fdivs
mov
in
xchg
dec
sbb
pop
push
repnz
cmpl
sub
mov
cmp
mov
sbb
cmp
add
repz
stc
clc
sbb
lret
pop
lret
jns
out
mov
cmp
cmc
call
addr16
gs
jge
cmp
pop
and
fisttpll
jp
dec
ljmp
dec
cmp
jecxz
aas
stos
mov
sbb
ljmp
add
or
sbb
lret
cmp
add
pop
xchg
mov
xchg
ja
xor
sbbb
mov
xchg
dec
mov
sub
stos
push
call
popa
iret
sub
cmpsl
pop
xchg
mov
stos
dec
cmp
roll
cmp
dec
call
and
mov
fdivrl
push
js
cmp
cmp
icebp
shl
cmp
pop
add
out
in
and
js
cmp
push
push
fadds
pop
inc
mov
jns
out
mov
lahf
sub
int
xchg
stos
adc
ja
int
pop
loop
mov
imul
dec
out
push
fstps
adc
mov
pop
lret
repz
lods
insb
jo
xchg
add
scas
sbbl
cmp
pop
cmp
ja
xchg
pop
daa
es
sub
xchg
or
xchg
mov
sbb
pop
cltd
fwait
push
push
sbb
cmp
inc
repnz
dec
clc
inc
sbb
addr16
add
in
mov
cmp
fs
movsl
mov
mov
fstpt
bound
cli
mov
push
leave
mov
lods
pop
cltd
jmp
inc
jno
in
aas
adc
add
testl
add
addl
jns
imul
push
sbb
adc
lds
xor
sbb
jbe
push
sbb
adc
sbb
jns
cld
cmp
sbb
sbb
ja
inc
adc
cmpsl
jnp
xchg
idivl
daa
jnp
or
js
dec
and
mov
mov
enter
cmp
or
mov
dec
jnp
test
jns
mov
leave
jnp
sub
push
sbb
jp
pop
sbb
adc
lret
sbb
jns
mov
jnp
dec
pop
stos
sbb
adc
sbb
jnp
fisttpl
or
jl
dec
sbb
mov
jns
mov
fdivrl
cmp
jns
mov
pop
jnp
mov
jns
mov
fnstsw
ds
push
sbb
jns
mov
pop
jnp
mov
sbb
ja
sub
xchg
pop
mov
add
cmp
stc
cmp
inc
xchg
mov
mov
mov
xlat
mov
daa
mov
cmp
sbb
cmp
cmp
iret
shrl
xchg
mov
xor
lahf
cwtl
lock
xchg
cmp
enter
xor
cmp
sub
jg
cmp
sbb
imul
dec
fdivrl
jnp
pop
jl
jg
test
rcr
outsl
sub
cmp
jno
mov
fidivrs
or
sub
mov
sub
adc
mov
cmp
or
aad
orb
mov
jnp
add
sbb
insl
stos
cmp
or
jmp
xchg
sbb
sti
pop
lret
pop
or
ja
jnp
sub
cmp
call
outsb
sbb
sub
cmp
call
xchg
int
cmp
cmp
in
cmp
jnp
mov
int3
dec
jge
mov
loopne
lret
cmp
aas
fistpl
insl
pop
mov
pop
push
sbb
mov
mov
mov
cmp
cmp
sbb
sub
cmp
push
sbb
outsb
mov
test
pushf
pop
cmp
jnp
fidivrs
mov
xchg
cmp
mov
into
aas
cli
fidivrs
mov
orps
outsb
aas
pop
jb
pop
sahf
pop
pop
imul
jg
dec
pop
sbbb
pop
pop
cwtl
scas
ja
jnp
out
ja
push
test
add
add
and
scas
lahf
mov
or
pop
push
mov
cmc
les
and
fwait
sti
repz
mov
scas
dec
popf
cld
dec
xchg
sbb
fistps
jle,pn
xchg
sub
orb
int3
sbb
mov
mov
xor
jg
xchg
fdivrl
lds
cmc
and
adc
js
xor
ja
mov
sub
push
int3
dec
push
imul
fildl
aad
pop
popl
mov
fldcw
stos
inc
cmc
ja
ret
mov
add
mov
iret
mov
or
lds
out
push
inc
jecxz
add
pop
adcl
mov
std
push
loope
push
mov
fcomps
cmp
gs
sahf
jmp
xchg
jbe
push
inc
cmpsb
dec
push
adc
incb
aad
aad
push
ss
icebp
subl
sub
fbld
js
mov
jl
cmp
mov
sub
in
mov
fwait
inc
dec
sub
mov
jmp
mov
or
and
ljmp
xchg
cmpsl
xchg
out
adc
pop
push
cs
pushf
mov
xchg
or
sbb
dec
xorps
push
dec
daa
inc
nop
mov
mov
mov
arpl
aad
outsb
ss
add
mov
mov
inc
mov
xorb
andb
inc
mov
xor
rclb
xor
xchg
pop
xlat
sbb
mov
or
js
pop
out
ljmp
dec
pop
imull
daa
test
cli
jbe
sbb
lea
mov
cmp
add
ja
addr16
sbb
push
ss
sbb
jecxz
adc
dec
pop
or
cmpsl
mov
pop
subb
cmp
mov
or
sub
aaa
sbb
or
push
push
sbb
js
movups
adc
dec
sbb
adc
jns
sbb
pop
xor
mov
mov
cltd
jp
pop
stos
mov
jnp
pop
stos
mov
jl
pop
lods
mov
jge
pop
lods
mov
jle
pop
scas
mov
jg
pop
scas
mov
jo
push
mov
loopne
jno
push
mov
loope
jb
push
mov
sbb
jae
push
mov
jecxz
je
push
movsb
mov
aaa
xchg
in
gs
push
movsl
aaa
mov
xchg
in
data16
pop
push
cmpsb
mov
xchg
out
test
in
test
or
fistpll
pop
scas
or
jnp
mov
sbb
pop
or
or
mov
sbb
aaa
mov
imul
add
push
hlt
add
add
and
pop
in
dec
xchg
adc
xchg
sarb
adcl
je
and
adc
fcmovu
fdivrl
aas
dec
loopne
into
stos
dec
movsb
aaa
push
iret
ljmp
mov
int
aaa
in
jae
jmp
aaa
or
imul
neg
mov
jo
mov
ss
rcl
push
aaa
push
rcl
and
aaa
xor
in
push
scas
inc
aaa
xchg
push
add
jle
cmpsl
pushf
into
popa
mov
out
gs
arpl
decb
jp
in
aaa
or
inc
je
inc
hlt
into
and
aaa
test
popa
mov
rcrb
xchg
mov
sbb
adcl
add
faddp
cmp
outsb
xor
lcall
xor
sbb
adc
jns
inc
repnz
fldcw
mov
das
addr16
pop
jb
movsb
or
mov
ljmp
aaa
std
adc
inc
xor
jp
push
push
shlb
int3
in
lods
aaa
out
xchg
test
aaa
lcall
or
movsb
dec
jmp
adc
add
sbb
aaa
mov
dec
push
imul
out
addr16
fcmovb
in
add
dec
les
and
ret
push
push
insl
loopne
aaa
pop
and
mov
xchg
jge
addl
int3
aaa
cmpsb
push
sub
sub
xchg
cli
jo
int3
cmp
cltd
lea
inc
dec
fiadds
pop
inc
xchg
or
add
mov
daa
lds
adc
leave
push
scas
pop
jg
push
negl
aad
jmp
pop
into
xchg
and
aam
push
push
jae
addr16
mov
jp
inc
sarl
mov
enter
add
xor
and
jno
mov
pop
jbe
gs
jmp
lret
insb
mov
inc
aaa
cmpsb
lods
cwtl
pop
mov
fidivl
ror
jno
adc
scas
cmpsb
pusha
aaa
push
or
pop
aaa
mov
dec
xor
cmp
push
lret
and
mov
mov
add
lods
mov
flds
cli
je
sbb
aaa
ljmp
mov
push
mov
jae
aaa
sbb
insl
leave
movsl
pop
aaa
inc
shrb
sti
subb
mov
lds
aaa
aad
mov
xchg
aaa
add
xor
idivl
out
in
push
xor
dec
das
iret
sbb
leave
stos
cmp
cmp
flds
dec
rcrl
enter
in
ss
in
arpl
mov
shlb
aaa
dec
sbb
sub
cmp
sub
xlat
sbb
loope
cli
or
jg
leave
and
push
and
in
int
jno
aaa
pop
out
pushf
ret
and
jecxz
jns
out
mov
fdivrl
dec
sbb
mov
inc
mov
xchg
aaa
fdivrs
sub
lods
sub
test
sahf
jg
cmp
insl
daa
popa
cmc
push
mov
adc
pop
lahf
addr16
push
sbb
aaa
cmp
xor
popf
leave
aaa
adc
inc
and
aaa
xor
cmpsb
mov
roll
push
aas
in
popf
cmp
pop
aaa
pop
or
mov
inc
in
fnstenv
mov
lds
getsec
jb
jge
push
xor
xchg
lea
cwtl
cmpsl
adc
imul
subb
aaa
inc
xor
and
push
cwtl
cmpsl
mov
shll
inc
sbb
mov
lahf
push
mov
loop
mov
mov
xchg
fcoms
xchg
jl
mov
sub
xchg
inc
fsts
in
pop
xchg
sbb
popa
jo
test
js
outsl
lods
push
mov
pusha
pop
hlt
jo
ss
clc
or
mov
adc
mov
dec
call
pushf
mov
pop
or
mov
dec
sbb
mov
push
jmp
xor
test
and
xor
mov
movd
mov
sbb
or
sub
sbb
lea
mov
dec
fidivl
mov
dec
js
pop
loop
int3
cmpsl
mov
pop
or
or
mov
mov
mov
out
push
pop
mov
or
out
mov
out
jp
stos
mov
pop
imul
imul
dec
mov
cs
jp
jb
add
inc
fbstp
push
sub
xchg
imul
jb
pushf
jne
adc
cmp
xor
mov
push
inc
ja
cmp
imul
mov
stc
stc
jge
mov
shll
loope
imul
xlat
or
das
inc
sbb
mov
icebp
cs
sbb
jp
subb
sub
pop
xlat
or
inc
das
inc
in
fimuls
es
adc
sbb
mov
scas
cmc
mov
mov
inc
mov
ds
and
push
adc
cmp
adc
cmp
adc
test
ret
sub
aad
je
je
cmc
xor
je
data16
cmp
dec
mov
sbb
or
dec
arpl
xor
jmp
sti
add
inc
push
xor
xor
push
add
outsb
lcall
mov
adc
adcl
push
nop
jmp
mov
push
and
and
imul
sbb
xchg
lea
jmp
or
pop
les
mov
or
pushf
lahf
es
sbb
stos
nop
fwait
cltd
dec
xchg
pop
loope
aad
jecxz
icebp
inc
sbb
rclb
mov
sbb
sbb
les
ds
push
adc
jle
pop
sbb
pop
mov
stos
jnp
sbb
pop
or
sbb
push
jp
dec
pop
imul
jo
sub
push
mov
dec
filds
push
rcrl
or
dec
jp
insl
xchg
push
shl
xchg
mov
movsb
add
xorb
push
push
push
cltd
lea
sbb
in
sbb
stos
lcall
push
idivb
addr16
mov
pop
jmp
mov
mov
sbb
xorb
pop
int3
enter
pop
pop
dec
mov
mov
and
nop
cmpsl
roll
mov
xchg
clc
idivl
out
cmpsl
mov
push
sub
and
fldcw
imul
or
mov
cmpsl
mov
and
stos
pop
pop
leave
fldl
sbb
push
clc
xchg
sub
inc
loop
xchg
xchg
pop
xchg
push
fidivs
mov
rcrl
fstpt
jnp
mov
inc
xor
xchg
aaa
mov
das
shlb
mov
jecxz
xor
imul
xchg
lret
ficompl
filds
out
or
add
or
xor
aad
xchg
aaa
jae
insl
or
xor
inc
push
fidivl
pop
stos
aaa
jno
outsb
dec
sbb
sub
aaa
and
mov
lds
rolb
mov
popf
test
add
loopne
inc
push
fisttpl
and
aad
jle
ja
ja
loope
std
xlat
andl
sbb
idivb
pop
and
mov
cwtl
inc
jns
ret
movsb
das
pop
push
pop
jmp
push
popa
shlb
int3
inc
test
aas
es
push
dec
cmpsl
fmuls
mov
sub
adc
fwait
loope
jp
imul
mov
lock
lret
js
scas
dec
jo
jno
rcl
mov
mov
add
shrl
stos
lds
jmp
icebp
dec
jg
or
pop
sbb
fnstenv
in
xor
js
ret
inc
fiaddl
mov
mov
jge
sbb
out
in
stos
mov
inc
ljmp
cwtl
jno
inc
iret
fists
icebp
cld
mov
por
icebp
mov
jecxz
sbb
sbb
push
xor
push
aam
adc
sbb
movsl
inc
mov
jle
pop
js
lock
and
jo
push
xor
fimull
pop
jae
shl
jno
pop
pusha
lret
test
sub
rcr
xchg
adc
xor
fmull
cs
in
aaa
jb
arpl
idivl
jae
movsl
shrb
push
aaa
or
hlt
dec
push
lret
loop
and
nop
adc
mov
pop
jns
adc
pop
sbb
jmp
mov
lock
mov
push
ret
outsl
lcall
fistl
aaa
aad
sti
out
mov
outsb
cli
or
enter
add
jns
aad
pop
aaa
xchg
cmc
mov
mov
xchg
and
push
cli
jmp
pushf
cld
in
aaa
xchg
out
filds
rorl
push
xlat
dec
push
adc
cmp
bound
aad
mov
and
enter
aaa
in
mov
fidivrs
add
sub
das
lahf
aaa
jp
xlat
push
sahf
dec
je
aaa
mov
lcall
pop
pop
push
loopw
aaa
dec
or
mov
ficoms
jmp
fsub
sub
imul
push
insl
andl
std
movsb
imul
and
aaa
int3
sti
pop
aam
icebp
aaa
push
dec
jl
lock
addr16
inc
cmpsl
idivb
cmpsl
sti
cs
decb
jmp
out
imul
scas
lret
aaa
rcr
rclb
lret
aaa
jle
push
aam
xorb
lock
imul
mov
push
xor
pop
in
jmp
xchg
lcall
xor
out
mov
aaa
dec
imul
shll
repnz
pushf
cmpsl
lea
jl
or
xor
je
stos
add
xor
cmc
out
aaa
mov
xchg
and
es
mov
or
mov
ret
inc
bound
pop
mov
xor
subl
xchg
cmpsl
sbb
add
gs
imul
pop
repnz
jl
inc
orl
sbb
add
adc
cmpsb
data16
add
pop
pop
mov
xchg
jns
fldenv
fcmovbe
cmp
push
je
inc
aaa
and
aam
fsubr
mov
daa
sub
mov
ret
pop
xchg
inc
mov
lock
mov
mov
cmp
xchg
ret
out
loopne
mov
adc
jnp
jg
in
inc
mov
out
inc
lcall
aas
leave
leave
outsb
js
clc
push
rcl
das
push
roll
aaa
in
scas
loop
out
ret
xchg
sarl
stc
and
push
insb
mov
push
push
mov
sar
out
iret
mov
dec
or
in
movsb
cli
pusha
adc
cmpsl
fildll
adc
inc
aas
sbbb
sub
aaa
adc
push
lock
fdivp
aaa
scas
pop
and
movsb
notl
les
push
mov
mov
add
adc
mov
test
insl
mov
mov
push
xor
in
clc
jae
loopne
adc
pushf
int
push
ret
icebp
push
mov
gs
inc
push
popa
dec
int
loop
pop
dec
shr
mov
lahf
xchg
pop
push
jle
addr16
dec
xor
imul
sub
jae
pop
aaa
cmp
stos
icebp
xchg
mov
mov
dec
stos
es
aad
movsl
fildll
cmp
repz
mov
cs
jne
or
popf
in
xlat
scas
sarl
loop
cmp
sarl
gs
dec
not
aaa
pop
pop
stc
test
daa
xchg
cli
and
mov
stc
aam
out
and
xchg
sub
aaa
out
aam
jbe
mov
and
aas
push
xchg
aaa
mov
call
inc
lods
cmp
in
mov
loopne
dec
or
xchg
aaa
sbb
jecxz
orb
repz
xor
mov
aaa
inc
lea
sub
aaa
push
jno
dec
xchg
jne
ljmp
mov
sbb
mov
sbb
jmp
xchg
sub
nop
dec
pusha
push
int
aad
lahf
mov
push
les
movsb
cli
or
cmp
outsb
add
cs
jo
fs
aam
push
and
cltd
in
pop
mov
test
dec
loope
add
mov
sti
lcall
sbb
add
ret
lds
nop
pop
icebp
cmc
addr16
loopne
test
add
adc
lret
inc
shlb
lods
mov
test
dec
insl
push
mov
int
daa
dec
adc
mov
push
aaa
push
stos
cmpsb
mov
mov
add
adc
aaa
mov
aad
fwait
aaa
loop
xor
cmpsl
loopne
addl
addb
roll
js
and
xchg
dec
inc
cmpsl
adc
xchg
fs
scas
sbb
and
aaa
jno
lods
jmp
aaa
dec
inc
adc
cmpsb
push
data16
or
gs
mov
leave
push
add
pop
aas
fcoms
mov
outsb
pop
mov
into
sbb
ret
lret
aaa
pop
jl
stc
rorl
and
sahf
lds
rorl
jb
loope
push
mov
or
xor
decb
push
out
adc
stos
pop
sbb
pop
aas
lret
mov
adc
cmc
lock
jb
mov
aaa
adc
sub
popa
mov
ret
add
xlat
rorl
add
insl
xlat
mov
lcall
mov
jbe
jle
inc
mov
jmp
xchg
adc
push
ss
fisttpll
mov
sbb
jno
leave
xchg
dec
in
mov
lahf
stc
adc
stos
fxch
push
leave
fmul
enter
cmpsb
iret
aam
push
out
jb
mov
xchg
icebp
pushw
sbb
cmpl
out
or
mov
cmp
xor
clc
sbb
pop
pop
das
and
adc
shrl
lcall
js
icebp
pusha
sub
stos
push
shrl
movsb
and
arpl
les
cmp
add
mov
sub
push
fcmovnu
jnp
mov
cmc
mov
and
mov
pop
xor
dec
fstpt
shrb
imul
cs
xlat
or
jnp
mov
pop
lds
cmp
inc
loope
xor
je
mov
push
stos
push
insb
cmp
icebp
xchg
sub
outsb
adc
sbb
loope
mov
pop
adc
insb
xchg
dec
xchg
cmc
loope
jno
enter
loopne
pop
xlat
cmp
cld
shl
mov
imul
jo
rolb
roll
sbb
or
and
inc
mov
or
imul
icebp
push
mov
jns
cltd
xchg
pop
pop
add
xor
stos
inc
test
sbbb
addr16
sub
jae
sbb
sbb
push
cmp
mov
lock
dec
push
dec
push
hlt
lock
mov
xorl
je
fsubrl
push
xchg
stos
push
dec
mov
inc
jno
hlt
push
adc
mov
xchg
cmc
fidivl
mov
loope
dec
sbb
xchg
sub
jbe
cmp
xchg
dec
cmp
insl
stos
imul
jg
jmp
js
mov
mov
daa
popa
sbb
adc
sbb
ret
mov
gs
loopne
insl
insb
inc
jae
enter
lahf
loop
aas
lahf
ss
scas
dec
and
cmpsb
fistps
addb
and
dec
or
inc
dec
and
jns
dec
sub
into
push
js
loope
mov
sbb
xor
out
lcall
lock
jae
push
rorb
icebp
orl
stc
out
or
inc
cmp
mov
sbb
imul
adc
mov
rorb
sbb
xchg
ja
xor
out
or
push
popf
sub
add
and
sub
pusha
lds
loope
jnp
cs
shll
sbb
jno
imul
sbb
cmp
scas
icebp
inc
adcl
mov
shll
or
jp
scas
or
es
jns
imul
mov
imul
movsb
fidivl
adc
fidivs
out
jmp
jmp
jmp
fbstp
cltd
or
pop
das
or
loope
push
scas
pushf
sbb
xor
pop
insb
jmp
ret
dec
xchg
popa
pop
mov
mov
ss
shrl
fistps
aad
js
test
arpl
ds
xchg
mov
mov
js
scas
xchg
fnstenv
stos
movsl
sub
sub
xor
je
in
inc
push
push
rcll
pusha
insl
sbb
inc
push
sbb
loop
xchg
mov
fldl
imul
enter
lock
dec
clc
rclb
mov
enter
fistps
out
sub
mov
loop
mov
fnstcw
inc
xor
push
mov
mov
push
inc
mov
aam
cmp
mov
cld
jo
push
std
jo
test
xor
sbb
push
popa
popa
movsb
sub
ret
cmp
icebp
es
insl
and
into
orl
lods
icebp
loope
fnstcw
loope
pop
pusha
outsw
shrl
or
push
mov
mov
inc
outsb
or
push
cmpsb
mov
dec
icebp
inc
imul
push
scas
mov
cmp
test
sub
push
icebp
xor
clc
stos
adc
test
jp
popf
fcmovnb
popa
jnp
mov
xchg
jmp
jmp
test
rolb
inc
cmpsl
xor
je
in
pop
jmp
jb
repz
push
ficomps
dec
orb
pop
xchg
andb
jnp
repnz
call
xor
jne
shlb
xchg
icebp
jns
cld
in
loopne
dec
movsl
das
inc
dec
mov
xchg
es
lock
pusha
ja
arpl
xchg
mov
stos
jnp
pushf
cli
mov
push
sbb
push
sub
adc
xor
stc
dec
pop
xchg
leave
cmp
jae
sbb
push
jp
jo
fsubl
repz
push
jnp
fcomip
push
dec
add
imul
push
mov
sub
add
xchg
popa
mov
jae
add
jmp
addr16
gs
fnstsw
cmp
cmp
addl
fcmovnbe
fucom
mov
adc
in
push
dec
std
xchg
int
fnstsw
insl
lods
fnstenv
and
cwtl
mov
mov
ficompl
out
add
gs
stos
sbb
xor
fucomi
and
jp
push
mov
addl
mov
ja
push
inc
stc
xchg
mov
sbbl
mov
arpl
test
add
add
xor
pop
daa
mov
add
stos
pop
inc
in
out
stc
jne
fcmovnb
addb
lods
rclb
aas
repz
aad
mov
fisubs
aas
push
es
fcomps
outsb
aaa
ja
lea
hlt
cmp
inc
aaa
mov
sub
iret
aaa
stos
jmp
inc
jns
fisttps
mov
xchg
pop
or
and
add
shll
push
adc
sti
mov
test
mov
aaa
add
jbe
fidivrl
and
dec
dec
insl
xchg
es
xor
gs
jg
cmp
insl
into
cs
sub
xlat
clc
mov
mov
xor
test
movsl
aaa
cmpb
push
fcomps
xorl
sbb
sub
jb
insb
push
fwait
aaa
sti
add
pop
adc
scas
hlt
add
ljmp
daa
mov
adc
adc
xchg
cmpsl
or
outsl
dec
or
jl
mov
lea
sub
xchg
jmp
adc
or
and
test
aam
enter
and
jns
gs
dec
movsl
cmpsl
mov
ds
mov
mov
sbb
xchg
les
add
xchg
call
sbb
aaa
adc
ficoms
and
xchg
popa
popf
loopne
aaa
mov
call
dec
pop
out
in
test
mov
pop
pop
outsl
sbbl
imul
xor
lds
lods
xchg
sub
enter
push
fidivs
pop
lea
sub
adc
leave
xchg
dec
pop
push
add
bnd
and
jge
push
jne
mov
aaa
je
std
pushl
out
sub
inc
jmp
es
pop
fbstp
xchg
in
add
fmull
fs
push
cmpsb
ret
and
aaa
pop
test
mov
out
out
or
xor
cmpsl
fisubrs
fidivrl
lcall
xor
pop
out
aaa
xor
mov
clc
rcrb
cmp
and
pop
aas
inc
clc
pandn
mov
inc
fadd
je
sub
xchg
out
cld
lock
and
pushl
mov
fstpl
sub
cmc
aaa
jmp
mov
fistpl
outsl
cmp
jg
push
pop
xchg
xchg
fsubr
aas
fstp
xor
add
leave
mov
jno
add
mov
imul
insb
or
aaa
sub
faddp
sahf
cs
jle
sub
dec
mov
jp
addb
mov
and
inc
aaa
add
shlb
out
cmp
xor
sub
mov
inc
aaa
movsl
xor
sub
mov
sbb
mov
mov
lea
aaa
xchg
adc
popa
ljmp
cli
stos
push
xchg
lcall
dec
in
xor
mov
inc
cmp
lods
imull
adc
mov
ds
aas
xchg
lret
pop
and
jns
fimuls
inc
int
aaa
iret
lods
jae
cltd
xchg
aad
cli
mov
rorl
sarl
pop
cmp
xor
pop
stc
fwait
fs
push
aaa
lret
sub
or
adc
js
call
aaa
repz
clc
aas
mov
or
dec
push
fdivrs
int
cli
push
loope
cld
imul
mov
push
jle
dec
clc
sub
xchg
pop
sub
xchg
adc
sbb
sub
mov
push
pusha
mov
popa
pop
xorb
inc
cmp
push
fsubrs
pop
in
inc
cmc
bound
jns
out
cmp
pop
or
mov
mov
push
inc
cmp
cmp
mov
mov
and
orl
inc
cmp
mov
add
fisttpll
cmp
and
cmp
sbb
or
inc
xchg
lds
repnz
add
int3
mov
add
xchg
test
push
or
movsb
xchg
fidivrl
mov
movsb
insb
push
fcmovnb
mov
mov
incb
mov
pop
add
fisubrs
cmp
mov
mov
imul
cmp
sbb
push
shll
add
cmp
iret
iret
cmp
fidivrl
add
scas
or
shl
sbb
negl
imul
pop
fcomps
cmp
xchg
fidivrl
cmp
jg
outsl
in
mov
outsl
stos
jg
sbb
cmp
test
idivl
pop
cmp
mov
cmp
or
add
subl
into
push
push
stos
mov
aas
and
add
sbb
sub
cmp
rorb
or
mov
or
cmp
xor
inc
cmp
cmp
push
aas
sarb
das
or
xlat
push
sbb
jo
add
in
enter
xorb
xchg
bound
xorl
mov
add
in
lcall
add
ficompl
cmp
ljmp
add
fildl
das
mov
xchg
cmp
cmp
aas
or
adc
mov
sbb
cmpsl
mov
les
js
adc
cmp
xchg
aam
cmp
pop
push
cmp
aaa
lds
dec
jmp
inc
ds
cmpl
xor
dec
mov
xor
jns
add
movsl
xor
add
fdivrl
ds
cmp
jne
mov
cmp
adc
mov
or
add
nop
mov
aaa
xchg
add
cmp
aaa
mov
fidivrl
push
xchg
aas
xchg
push
mov
stos
imul
mov
add
cmc
stos
cmp
movsl
adc
arpl
cmc
stos
add
mov
jns
movsl
mov
push
cmp
ljmp
jge
cmp
mov
add
pop
push
mov
gs
lods
mov
mov
nop
cmp
and
pop
stos
pop
mov
push
mov
aas
or
xchg
adc
mov
mov
pop
push
mov
mov
add
out
andb
xor
or
mov
mov
mov
stc
addl
or
mov
fdivrs
enter
cmp
addb
imul
sub
jg
sub
dec
cmp
aas
xchg
sub
test
mov
lret
inc
mov
fistpl
imul
lret
mov
pop
das
aas
fldt
add
mov
push
mov
pusha
sub
mov
add
pop
cmp
lods
mov
mov
xchg
mov
lahf
cmp
jmp
sbbb
mov
test
cmp
jmp
lcall
fwait
cmp
int
cmp
add
test
lahf
sub
aas
jg
jg
gs
cmp
data16
add
loope
ljmp
cmp
mov
push
push
mov
xorl
mov
in
add
xchg
add
inc
mov
pop
push
push
gs
imul
adc
adc
test
xchg
add
pop
dec
cmp
inc
inc
cmp
fiaddl
xchg
mov
add
ltr
cmp
add
fiaddl
cmp
aas
rolb
cmp
sub
arpl
mov
adc
pop
add
mov
jmp
mov
adc
mov
test
shll
arpl
push
outsb
cltd
sub
jge
jle
sbb
fidivrs
shrl
bnd
dec
ja
and
or
add
mov
inc
cmp
xchg
cmpsl
aas
mov
or
inc
and
insl
subb
xor
cmp
mov
cmp
or
mov
jp
ret
cmp
mov
orl
inc
push
mov
ja
pop
lds
mov
xchg
mov
adc
or
out
mov
xor
or
cmp
cmpsl
cmp
jp
mov
cmp
xchg
cmp
pop
leave
adc
jl
aad
std
jg
cwtl
or
aas
andb
cmp
ljmp
leave
add
cmp
sub
or
cmp
mov
inc
lods
mov
shrb
je
cmp
mov
lds
cmp
xchg
mov
or
rorl
or
add
xchg
fiadds
dec
cmp
add
jmp
sub
add
mov
cmp
clc
cmp
and
push
jne
dec
or
pushf
inc
adc
add
push
add
in
ds
lock
inc
data16
movsl
xchg
dec
add
add
push
cmp
ja
aas
cmp
jb
ja
cmpsl
mov
mov
sbb
mov
jnp
clc
fwait
add
cmp
pop
imul
ja
add
ret
cmp
fldenv
or
cmp
or
or
inc
mov
inc
and
cmp
sub
mov
xchg
pop
ja
pushf
imul
cmp
adc
test
sbb
sub
add
add
mov
sarl
mov
add
and
cmp
xor
cmp
push
mov
arpl
mov
das
push
mov
pop
lds
sbb
adc
stos
xorb
mov
ret
inc
mov
cmp
cmp
adc
cmp
inc
cmp
shlb
add
decb
sbb
xchg
ficoms
insb
addl
or
jae
insl
cmp
mov
push
stc
push
cmc
outsl
in
addr16
or
and
imul
xorb
mov
cmp
push
pop
xchg
or
push
jnp
daa
cmp
push
cmpl
inc
xor
push
mov
mov
mov
add
pop
dec
dec
pushf
sbb
sub
cmpb
push
rolb
fistpll
ret
cmp
test
pop
mov
dec
mov
pop
pushf
cmp
cmp
or
sbb
int
cmp
add
mov
jle
jl
imul
add
add
push
mov
cld
mov
add
imul
cmp
lds
jge
jge
or
imul
cmp
pop
push
inc
aas
jns
cmp
cmp
sbb
addl
add
adc
cwtl
arpl
lret
mov
add
cmp
mov
push
mov
xchg
std
aam
dec
xchg
cmp
jmp
jg
icebp
sbb
ss
mov
jns
nop
mov
jl
cmp
add
push
enter
lds
cmp
push
dec
mov
fsubr
add
add
mov
cmp
xor
cwtl
mov
ja
icebp
mov
mov
addb
add
cmp
xor
jbe
adc
xor
mov
jb
popa
xor
xchg
outsb
test
dec
mov
and
sbbl
jecxz
ja
negl
lret
ja
xor
mov
negl
jmp
pop
les
adc
cmp
adc
cmpb
adc
enter
or
mov
inc
ds
adc
ret
aad
mov
cmp
sub
mov
jle
pop
imul
pop
cmp
mov
add
or
xchg
or
cmp
cltd
mov
les
aaa
addr16
popf
mov
ja
mov
mov
add
sub
cmp
sbb
cmp
fwait
dec
xchg
cmp
pop
push
cmp
add
stos
stc
aaa
jge
das
aas
pop
cmp
mov
mov
lcall
je
fistpll
dec
enter
fwait
stos
mov
mov
fwait
lcall
mov
ja
mov
jmp
pop
add
or
mov
xchg
lock
mov
cld
ds
inc
mov
cmpb
add
imul
cmp
mov
enter
cmp
cmp
jmp
subb
addb
roll
inc
xchg
std
sub
sbb
aam
cmpsl
mov
add
mov
adc
cmpsl
stos
mov
shlb
sarb
cmp
cmp
dec
inc
add
xlat
shlb
ret
lahf
mov
pop
cmp
faddl
cmpb
sbb
mov
add
sub
dec
arpl
mov
ds
add
cli
add
sub
dec
int3
ja
ja
mov
fdivrl
push
mov
mov
test
gs
push
cmp
jnp
fistps
mov
cmp
flds
sarl
sub
dec
xchg
daa
int3
mov
sbb
ja
mov
popa
stos
fsts
addl
mov
cli
fwait
out
inc
push
cmp
xlat
sbb
xchg
clc
cmp
adc
sbb
stos
or
inc
jl
imul
adc
fdivrl
cmp
pop
jmp
add
or
pop
jmp
mov
fsubr
frstor
dec
cmp
loopne
cmp
xchg
sub
push
push
cmpsl
pushl
dec
inc
movsb
push
daa
pop
pop
les
push
cmp
aas
xchg
daa
pop
or
incb
adc
sub
cli
add
mov
add
push
cmp
xor
and
stc
inc
sub
xchg
xor
mov
adc
cmpsl
pop
bound
ds
out
js
stos
fcoms
aaa
enter
mov
cmp
add
or
xchg
clc
cmp
jo
add
imul
cmp
fs
ds
mov
pop
mov
dec
add
mov
push
fcom
and
nop
test
test
int3
imul
xchg
xlat
mov
cmp
cmp
pop
mov
jmp
add
imul
pop
sub
imul
sarb
jno
add
outsl
jmp
add
push
cs
dec
mov
push
test
dec
pop
scas
mov
sbbb
and
inc
orb
jmp
or
add
dec
jg
outsl
jmp
fwait
jnp
cmpl
int3
filds
cmpb
pop
and
or
pop
mov
sbb
or
sub
cmp
xorb
imul
add
test
cmp
cmp
sbb
aad
gs
dec
and
add
gs
mov
fs
andl
inc
shrl
push
add
cmp
xor
xchg
mov
insb
aam
mov
in
dec
jle
mov
mov
sbb
in
add
xchg
adc
sbb
mov
jnp
jmp
nop
les
sbbl
add
adc
cmp
shlb
inc
fcomps
xchg
stc
push
lcall
outsb
mov
xchg
sbb
jns
mov
or
test
loop
cmp
xor
and
push
addr16
sbb
adc
vmwrite
sbb
jns
mov
add
dec
aas
pop
pop
cmp
xor
adc
mov
jno
orl
outsb
sbb
dec
out
pop
fidivrs
int
sbb
leave
sbb
test
mov
cmp
inc
ljmp
mov
mov
stos
call
jl,pt
cmp
xor
pop
filds
ds
cmp
and
sub
xor
or
lret
adc
mov
aas
loope
std
xor
jmp
mov
lea
xchg
pop
repnz
add
and
adcl
ret
aaa
cli
addr16
jbe
xor
ss
aas
cmp
ds
sti
ret
outsl
imul
sub
cs
cmp
clc
les
imul
xor
add
sar
jno
jo
xor
cmpl
aaa
out
ljmp
mov
jnp
jle
out
jmp
out
scas
stos
mov
aaa
mov
inc
js
aaa
jmp
mov
mov
cmpl
in
lock
mov
mov
aaa
pop
arpl
data16
and
es
pop
adc
push
ror
aaa
pop
sbb
and
aaa
ud2
adc
iret
lret
ror
aaa
sbb
fldenv
adc
enter
sbb
and
aaa
adc
ror
aaa
xchg
jecxz
out
mov
xchg
mov
aaa
lahf
fwait
loop
pop
pop
mov
xchg
mov
push
dec
aaa
cltd
in
in
movsl
pop
movsb
aaa
mov
dec
push
aaa
loope
loopne
mov
xchg
lea
dec
rolb
ds
out
aaa
lahf
sub
test
lds
jbe
push
cli
push
or
cmp
sti
or
adc
pop
add
ja
mov
adcl
sti
pop
or
sar
and
xor
pop
fidivrl
and
bound
push
ds
cmp
pusha
mov
andps
and
insb
mov
sbb
or
mov
sub
jg
adc
xchg
sbbl
cltd
jle
cmp
add
add
xchg
xchg
xor
sbb
lods
rcrb
fiaddl
xor
stc
inc
mov
xchg
xchg
xchg
jns
inc
filds
pop
add
mov
fcmovbe
inc
xlat
cld
faddl
or
daa
mov
or
andl
daa
ja
inc
cmp
xchg
lret
pop
mov
xchg
sti
mov
lret
cmp
cltd
arpl
lret
sub
cmp
pushf
aad
inc
repz
xlat
sar
outsl
jno
fisttpll
jnp
sti
cmp
js
incb
pop
mov
pop
adc
loopne
mov
or
sub
ja
mov
or
sbb
cmp
cmp
adc
add
dec
bound
inc
jo
mov
movsl
push
sub
add
pop
pop
mov
adc
nop
orl
fcompl
movups
dec
inc
dec
ja
cmpl
add
mov
fildl
lret
and
arpl
fcmove
dec
or
fidivrs
dec
popl
ljmp
cmpb
xor
cmp
mov
ds
mov
mov
ret
pop
add
cmp
mov
adc
pop
orl
mov
dec
cmp
ds
icebp
ljmp
lret
push
mov
add
ror
add
mov
dec
mov
out
lcall
and
mov
test
or
lret
test
imul
add
dec
sbb
sub
fcmovnb
cmp
gs
push
das
adc
fwait
xchg
add
enter
add
into
push
addr16
jmp
add
add
ds
sub
mov
addb
xor
add
cmp
mov
lds
cmp
sub
popa
aaa
push
add
push
jne
jmp
filds
add
fisubs
cmp
push
popa
lret
dec
enter
jno
inc
dec
inc
cmp
or
aaa
mov
add
in
mov
add
ds
dec
test
xchg
stos
lret
lds
xchg
dec
or
mov
add
mov
lds
add
ret
inc
clc
inc
and
lds
pop
in
mov
cld
add
xchg
in
cmp
pop
xor
sub
ja
aaa
pop
jnp
lods
cwtl
aaa
les
cmp
pop
test
out
or
cmp
mov
adc
and
es
add
imul
dec
jb
adc
ds
stc
mov
jmp
cmp
adc
mov
nop
cmp
add
xchg
cltd
jb
mov
ds
dec
cmp
push
jmp
inc
jbe
cmp
jno
cmpb
mov
aas
test
or
xchg
imulb
adc
test
cmpl
xor
jle
add
add
jbe
adc
mov
fucomi
cmp
aaa
add
add
cmp
ds
mov
mov
mov
test
mov
jg
inc
aaa
jns
jge
js
jl
aaa
jp
jle
idiv
sti
ret
aaa
stc
sar
clc
sar
aaa
cli
ret
pop
pop
sbb
sbb
sbb
fs
sbb
xchg
lahf
fwait
jecxz
cltd
loope
in
loopne
in
lcall
mov
movsl
pop
mov
mov
aaa
fldenv
frstor
aaa
fisubl
fisubs
pop
ud2
adc
or
or
adc
or
push
push
xchg
add
mov
nop
mov
inc
dec
dec
push
dec
push
dec
aaa
push
dec
push
dec
push
dec
push
dec
aaa
push
iret
lret
ror
ror
aaa
aad
ror
aam
ror
aaa
outsl
imul
insl
aaa
jne
jo
je
jb
aaa
jbe
out
jmp
jmp
call
repnz
aaa
mulb
mov
aaa
mov
mov
mov
mov
aaa
mov
das
sub
sub
sub
sub
sub
xor
cli
aas
add
cmp
add
cmp
aaa
add
ja
jg
js
aaa
inc
inc
jns
inc
inc
jp
aaa
inc
inc
mov
mov
addb
aaa
addb
cld
aaa
rol
std
rol
aaa
ret
or
adc
or
adc
or
aaa
adc
inc
dec
dec
push
dec
dec
aaa
push
push
dec
dec
push
push
dec
dec
aaa
push
push
xchg
aaa
nop
xchg
mov
aaa
xchg
xchg
lret
iret
ror
int3
aaa
rcl
leave
int
aad
into
aaa
rcl
pop
sbb
arpl
sbb
pusha
sbb
aaa
bound
pop
pop
mov
movsb
pop
pop
mov
mov
jecxz
pushf
aaa
loopne
cltd
popf
loope
lcall
fbld
fcomp
aaa
and
frstor
and
imul
insb
aaa
jo
imul
jb
cmpsl
stos
scas
mov
lods
aaa
mov
test
scas
aaa
mov
out
out
repz
jmp
out
aaa
repnz
sub
xor
sub
xor
sub
mov
cmp
cmp
add
add
inc
rclb
or
ret
pop
push
pop
sbb
sbb
sbb
add
arpl
addr16
insb
insl
outsb
outsl
jo
jno
jae
jne
ja
aaa
jns
jnp
jge
jg
aaa
inc
inc
inc
inc
inc
inc
inc
dec
aaa
dec
dec
dec
dec
dec
dec
dec
push
aaa
push
push
push
push
push
push
push
pop
aaa
pop
pop
pop
pop
pop
pop
pop
mov
movsb
movsl
cmpsb
cmpsl
test
test
scas
scas
mov
mov
mov
mov
mov
aaa
mov
mov
addb
aaa
mov
nop
aaa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
aaa
cltd
lcall
aaa
loope
jecxz
in
out
aaa
jmp
out
out
lock
icebp
repnz
cmc
div
clc
aaa
stc
cli
sti
cld
std
inc
aaa
rol
enter
lret
int3
int
iret
shlb
rcl
rcl
aad
xlat
fdivs
fcmovnu
fstp
fbld
aaa
and
and
sub
sub
xor
xor
jp
jns
jnp
pop
ja
pop
ja
inc
out
mov
sbb
cmp
stos
or
rolb
sbb
push
les
jl
mov
fistl
cmp
sti
push
mov
cltd
jmp
cmp
mov
or
ret
insb
cmp
lea
cmp
sub
pop
lahf
outsb
cmp
imul
sti
fidivl
ds
sbb
mov
or
cmp
inc
mov
sub
jnp
fldt
sbb
inc
ja
mov
in
or
or
push
mov
jecxz
mov
mov
ss
daa
mov
push
clc
adc
dec
ds
lcall
or
mov
cmp
aas
insb
dec
ds
fstpt
mov
push
or
sbb
push
sti
or
push
push
outsb
sub
pusha
and
ss
scas
jle
mov
cmpsl
scas
stc
aaa
or
xchg
aas
das
inc
popf
ds
push
insl
aaa
xchg
jno
jge
sbb
add
fcoms
push
add
mov
sti
mov
aaa
fisubs
enter
jge
mov
cmp
popf
mov
and
and
aaa
inc
in
cmc
inc
aam
or
push
aaa
inc
mov
je
pop
cmp
push
sahf
xchg
sbb
dec
lahf
sub
pop
cmpsl
js
std
push
insl
or
daa
out
adc
fucomp
fdivrl
lea
sti
inc
or
cli
popa
adc
addr16
stos
inc
ja
aaa
dec
fs
push
xchg
push
out
xorl
sbb
xchg
ret
test
dec
xor
movsb
les
cmp
or
aaa
mov
pop
or
inc
inc
or
jb
nop
aaa
push
loop
daa
push
rolb
mov
bound
out
scas
sub
mov
aaa
adc
leave
pop
mov
pop
push
push
hlt
pop
ret
aaa
sbbb
adc
sub
push
mov
xor
inc
addb
mov
addl
popf
cs
pop
int
mov
std
jge
pop
cld
insl
movsl
inc
mov
or
dec
dec
fistl
push
push
aas
out
push
pop
call
pop
lods
inc
daa
push
mov
cmp
mov
in
and
out
mov
aam
sbb
jbe
je
dec
aaa
sti
inc
idivb
leave
mov
jno
cmp
inc
or
xor
mov
test
inc
inc
adc
testb
stc
popf
xchg
pop
aaa
xchg
fnstsw
mov
cmpb
jnp
enter
sti
aaa
xchg
loope
inc
aam
push
cli
inc
cmp
or
test
pop
cmp
notl
jb
sahf
sub
xchg
xor
and
xchg
and
adcb
mov
inc
add
aaa
inc
xorl
fldl2e
cld
shlb
add
outsl
adc
jb
xor
mull
add
jle
stos
daa
push
in
scas
cmp
dec
pop
hlt
ja
outsl
pop
les
out
jne
jg
jge
ficompl
cs
xor
inc
shlb
xchg
and
adc
cmpsl
into
jnp
daa
push
fs
jno
scas
mov
aaa
arpl
int3
lods
sbb
dec
aas
push
pop
std
mov
pop
call
je
pushf
sahf
in
ret
fwait
aam
lods
sub
xor
mov
test
add
test
mov
adc
test
sub
lods
bnd
ret
push
push
aaa
sub
pop
bound
test
call
addr16
cmp
jae
insl
xor
adc
aaa
or
jb
aaa
repz
outsl
pop
ret
sub
mov
aaa
ret
stos
out
xchg
pop
pop
aaa
sbb
pop
inc
dec
and
loop
push
mov
pushf
inc
jmp
cld
mov
mov
or
xor
out
and
in
add
jge
pop
insw
aaa
popf
dec
xchg
jo
daa
pop
xchg
push
xchg
dec
cmpsl
lods
cmpsl
push
push
fwait
xor
push
js
andb
adc
out
mov
fbld
and
xor
xor
out
xchg
pop
gs
push
xchg
mov
sub
pop
and
in
pop
xchg
cmpsl
cmpsb
adc
stos
mov
movsl
sti
pushf
fidivs
ds
daa
ss
push
cmpsl
pop
cld
out
or
and
lea
and
or
mov
and
aaa
outsl
ja
arpl
mov
mov
cmp
lea
fwait
aaa
popf
adc
les
xor
push
ljmp
xchg
push
and
and
xor
stos
xchg
ss
cmp
data16
fsubs
jecxz
jo
insb
mov
inc
pop
add
add
rorl
xor
pop
fnstenv
mov
inc
pop
call
jmp
out
adc
fcomip
jae
xor
pushf
iret
xor
adc
mov
or
inc
jl
push
imull
sbb
fwait
xlat
sbb
add
mov
ja
add
push
push
lea
mov
leave
out
push
je
in
xchg
jge
scas
dec
mov
mov
ret
adc
sti
cld
or
test
sub
cli
jmp
adc
insb
jge
xchg
outsl
adc
jae
jne
rorb
adcl
sub
inc
inc
into
arpl
dec
and
popa
xchg
lds
adc
sbb
lret
pop
outsl
jbe
xchg
addr16
ja
stos
inc
mov
cmp
cmp
xchg
xchg
inc
add
push
adc
and
xchg
sahf
inc
add
xchg
lret
std
sub
cmp
out
push
ja
leave
fstpt
cli
cmp
imul
mov
sbb
add
pop
cmp
pop
sbb
jle
add
cmp
or
insb
ja
or
cmp
sti
adc
mov
xchg
push
add
add
add
nop
mov
cld
adc
xchg
or
mov
or
xchg
mov
pop
aas
sub
xchg
push
fs
sbb
inc
or
inc
mov
or
and
dec
add
aas
ljmp
fcoml
or
aas
cmp
push
sub
cmp
adc
add
arpl
mov
or
sbb
add
mov
or
lahf
ja
add
cmp
or
mov
push
mov
xchg
cmp
stos
js
ja
aas
push
sub
jmp
push
je
icebp
cmp
mov
cmp
nop
mov
adc
inc
inc
testl
or
in
aas
xchg
sub
fldl
or
fs
cmp
cmp
sarb
jmp
sti
jns
add
test
fisttpll
cmp
cmp
dec
vpsubw
pop
je
int3
stc
enter
jnp
sbb
inc
in
fiadds
cmc
inc
inc
mov
dec
stc
hlt
jge
sbb
cmp
cmp
cmpl
jo
adc
mov
cmp
dec
mov
cmp
mov
lds
dec
and
push
ret
clc
jnp
arpl
mov
inc
imul
cmp
mov
fwait
mov
pop
fidivrl
mov
mov
jnp
pushf
sbb
nop
mov
sarb
pop
test
paddb
mov
sbb
test
cltd
sbb
cli
jns
fwait
mov
rclb
sbb
push
xchg
inc
xabort
or
cmp
inc
fisubrs
mov
pop
sti
cmp
lock
push
sbb
pop
pop
adc
fldt
dec
sahf
test
jle
idiv
pop
stc
mov
stos
add
test
les
mov
cli
insb
fiaddl
xchg
sub
cmp
popa
mov
push
hlt
aas
cmp
clc
dec
fldl
sub
fcomip
pushf
into
jns
lock
push
bound
jns
jle
cmc
push
push
cmp
jmp
addr16
mov
push
sub
adc
bound
js
cmpsl
ja
leave
ret
sub
jmp
outsb
push
cli
xchg
js
pop
and
mov
sbb
mov
loopne
nop
mov
jae
mov
xchg
add
das
arpl
shlb
xor
mov
push
repnz
add
bound
cmpsb
cmp
push
out
sbb
pop
mov
cmp
push
lds
sbb
dec
cltd
inc
add
pop
and
les
mov
and
sub
push
loop
cmp
sub
jle
dec
ds
lods
push
ds
jge
mov
lea
xchg
insb
cmpb
xor
fiaddl
cltd
inc
imul
fstps
mov
mov
mov
and
sub
add
inc
pavgw
or
or
xor
cmp
cmp
mov
pop
std
dec
mov
aas
jae
in
cmp
inc
out
test
aam
inc
jne
ds
jecxz
cmpl
cwtl
jns
mov
shr
push
add
mov
mov
or
mov
mov
aaa
ds
jge
rorb
ja
or
mov
jp
jnp
mov
push
mov
mov
adc
mov
jecxz
mov
jbe
lea
stc
or
push
pop
or
mov
xchg
dec
dec
outsb
inc
push
cmp
cmp
dec
adc
jg
fistpll
insb
testl
mov
or
fs
add
xchg
js
cld
rorb
mov
dec
std
lea
or
mov
inc
add
mov
adc
dec
push
sti
mov
dec
outsb
sub
stc
cli
cmpb
mov
dec
lcall
jo
les
xchg
cmp
prefetcht1
imul
or
or
dec
cs
push
sub
into
inc
mov
aas
pop
test
add
and
sub
xor
outsb
divl
xchg
pop
mov
pop
mov
test
fstpl
push
mov
cmp
cld
daa
mov
lea
sub
pop
pop
int3
push
cmp
mov
inc
decl
pop
mov
adc
popa
xchg
adc
addr16
and
bound
mov
or
data16
cvtps2pi
or
add
mov
arpl
jl
jns
or
fwait
mov
jne
ret
lds
mov
clc
lret
insb
cmp
add
lea
lock
jnp
lahf
mov
mov
mov
ds
dec
or
fnstsw
mov
lcall
or
jns
mov
inc
push
mov
jp
pop
daa
sbbl
imul
mov
cmp
stc
push
mov
mov
sbb
cmp
lcall
xchg
call
out
test
push
or
inc
leave
add
xlat
push
fstp
or
pop
das
adc
cmp
out
cmp
sbb
cmp
addl
or
sub
sub
cltd
jnp
cwtl
das
adc
cmp
xlat
jmp
mov
fucomp
add
or
es
add
or
movsb
stos
cmp
xchg
or
sub
lret
jge
fnclex
aas
mov
push
js
imul
std
sbb
outsl
lret
jnp
pop
xchg
jnp
sub
pop
dec
lea
ljmp
lret
sbb
mov
mov
scas
or
jnp
outsb
js,pt
or
call
int
out
outsb
inc
sbb
sbb
clc
cmp
fnstcw
outsb
adc
mov
ja,pt
insb
dec
sbb
adc
testb
adc
push
std
sub
or
pop
mov
push
flds
pushl
inc
cmc
incb
jge
lcall
inc
inc
dec
bt
inc
sar
mov
mov
outsb
push
test
mov
arpl
cmp
fnstcw
in
std
or
insb
mov
in
add
jg
add
fistl
imul
or
mov
xor
jb
cmp
push
adc
int3
mov
cmp
mov
inc
add
mov
stos
pop
int
xor
cmpsl
insb
jle
mov
jnp
cmp
icebp
mov
into
push
pop
ja
sub
sti
mov
aaa
sbb
ds
ret
cmp
lcall
aas
xchg
inc
mov
add
and
mov
xchg
aas
xlat
and
jns
mov
sbb
sbb
ljmp
push
adcl
mov
push
mov
pop
push
cmp
rorb
or
das
mov
out
ret
ret
dec
dec
inc
or
lahf
decl
mov
cmp
pop
sbb
data16
mov
pushf
jl
add
mov
add
push
stos
xor
pop
subb
sti
cli
cmp
mov
dec
push
mov
jl
aas
rcrb
das
mov
enter
imul
xchg
xchg
add
jnp
add
ja
sahf
ja
jle
aas
mov
loop
mov
lods
cs
add
jnp
shrb
xchg
sarl
int
jo
sbb
rolb
fisttps
sbb
sbb
sbb
ja
sbb
sbb
or
mov
mov
or
addr16
inc
add
mov
dec
pop
std
aam
cli
or
insb
sbb
idivl
insb
add
inc
testl
mov
test
cli
into
or
pop
push
stc
pop
dec
or
ja
pop
mov
addl
data16
mov
outsb
mov
xor
nop
jecxz
cmp
mov
mov
ljmp
cmp
sub
into
mov
fidivrl
sub
adc
add
fnstenv
add
pushf
pop
mov
das
adc
cmp
and
cli
addl
add
jmp
push
xor
shll
dec
test
sbb
cmp
mov
icebp
mov
arpl
in
scas
mov
lahf
mov
js
jae
iret
mov
fildl
push
sbbb
or
insl
mov
cs
mov
inc
movb
in
mov
mov
insb
mov
xchg
insb
idivl
fidivrs
mov
cmp
push
adc
push
lds
cmpsl
popf
sbb
cmpl
insb
mov
push
daa
pop
es
mov
jno
pop
push
test
inc
xchg
pop
enter
fwait
xor
and
cld
cmp
fsubrl
js
mov
ja
mov
adc
sub
cmp
cmp
cmp
push
inc
xchg
mov
nop
orb
jne
cmp
add
xor
aas
fs
out
cmp
jg
push
xchg
add
cmpb
shlb
sbb
aas
push
cmp
dec
popw
cmp
push
cmp
popl
lahf
mov
cmp
cmp
fdivr
aaa
mov
jne
jg
dec
mov
sbb
pushf
mov
push
sbb
or
imul
sub
lods
out
push
jge
test
mov
cmp
inc
dec
xor
jnp
mov
push
or
add
aaa
pop
sub
sarl
sbb
lret
or
pushf
sub
xchg
jnp
sbb
fs
rolb
test
pushf
ds
adcl
ja
jl
emms
dec
gs
out
add
test
mov
subb
gs
shll
inc
cmp
dec
push
mov
fldcw
add
outsb
sub
and
sbb
arpl
and
and
cmp
xchg
ret
inc
sub
mov
rcrl
ljmp
cli
repnz
push
and
cmpb
test
imul
jns
and
inc
pop
add
mov
jge
lods
sub
adcb
sbb
adc
sbb
test
mov
popl
xchg
mov
mov
sti
mov
jmp
add
mov
push
pop
xchg
mov
cmp
inc
mov
pop
stos
jp
fsubrl
jb
pop
cmp
mov
add
mov
ret
or
xchg
push
mov
xor
dec
xchg
jg
les
dec
xchg
ja
mov
push
mul
insb
mov
mov
sti
pop
inc
push
lock
xchg
mov
out
add
xor
cmp
push
push
mov
dec
enter
jge
jns
sbb
sub
stos
jl
jo
fildl
jmp
mov
lea
mov
aam
and
fldt
aas
push
cld
insl
adc
add
mov
jl
adc
aas
outsb
sub
xor
cmp
cmp
sbb
gs
aas
mov
stc
xor
cmp
subb
inc
xor
mov
testl
jns
arpl
mov
pop
xchg
jge
mov
out
pop
adcl
out
adc
stos
cmp
sub
sbb
dec
je
daa
imul
and
fcmovnu
arpl
mov
subl
test
and
testl
mov
add
ds
scas
mov
push
pop
insl
outsb
int
jle
sahf
test
scas
adc
jne
outsl
jge
addr16
cmp
loop
xchg
sub
daa
push
xchg
jg
outsl
out
sbb
adc
scas
stc
in
sub
mov
scas
mov
xchg
cmp
fisttpll
or
jg
push
paddusw
insl
sahf
mov
dec
mov
mov
cmp
sti
cmp
xor
cmp
mov
jge
jnp
pop
and
jl
pop
insb
outsb
js
lods
jo
out
jl
mov
js
dec
mov
mov
cmp
mov
js
sub
cmpsl
fstl
imul
jo
scas
mov
es
sub
stos
sti
mov
or
test
dec
cmp
fimull
imul
fdivrl
add
pop
sbb
mov
add
cmp
cmp
insb
xlat
push
cmp
cwtl
sub
or
sbb
pop
cmp
mov
add
loopne
ficompl
and
and
data16
stos
pop
fucomp
sar
cmp
insl
mov
sub
pushf
pop
push
add
mov
shr
data16
mov
imul
mov
std
push
xor
sub
mov
cmpsl
cmp
jg
fistpll
and
divb
jge
lods
or
test
stc
pop
mov
pop
jge
iret
cwtl
pushf
mov
xor
test
dec
or
insl
in
fdivrl
pop
mov
inc
int
push
push
jno
jns
int
jo
push
pop
mulb
inc
cmp
mov
aad
pop
sbb
cmp
stc
mov
dec
jg
outsb
lahf
cmp
pop
iret
arpl
xor
orl
add
mov
stos
cmp
or
imul
in
fst
dec
sti
add
inc
loopne
int3
sbb
push
jns
push
lcall
aam
dec
sbb
fsubl
insl
out
addr16
pop
cmp
fisttpl
vmulps
jno
lea
mov
add
cmp
mov
imul
and
push
sub
pop
dec
aaa
arpl
xchg
ficompl
in
cs
popf
sub
sbb
cld
popf
test
cs
addl
les
sub
mov
shl
gs
lret
std
jge
cmp
dec
pop
adc
dec
cmp
dec
fldl
mov
out
xchg
add
jle
repz
push
jmp
imul
sbb
fiadds
jp
mov
mov
sub
cmp
dec
xlat
iret
scas
xchg
dec
pop
dec
int
or
inc
aas
fprem
jnp
cmp
pop
mov
mov
pop
mov
call
fwait
mov
sti
fs
mov
js
mov
fiadds
pop
add
mov
xchg
cmpsl
pop
inc
arpl
movsl
ja
pop
sbb
dec
out
fidivrl
mov
cmpsl
mov
stos
daa
lods
fisubrl
cmpb
ds
mov
call
jbe
inc
daa
ja
clc
pop
clc
dec
mov
inc
mov
jg
divb
mov
mov
mov
xor
pop
dec
xchg
inc
fmuls
add
inc
sahf
dec
testl
sbb
mov
xchg
sbb
xchg
rolb
xor
xchg
or
pop
or
cmp
js
cmp
sbb
ficoms
cmp
andb
arpl
ds
push
sti
cmp
or
xchg
or
mov
mov
imull
pop
js
mov
jle
cmp
and
cli
cmp
inc
loop
cmp
inc
jp
cmpsl
test
mov
xchg
sbb
ja
repnz
div
aas
in
cmp
addr16
sbb
or
sub
insb
ja
inc
sbb
aaa
aas
imul
and
arpl
jmp
in
cmp
xor
push
sbb
bound
and
or
idivl
lods
movd
test
push
popa
xchg
addb
jnp
pop
dec
inc
mov
add
xchg
mov
cmp
sti
cmp
mov
pusha
or
mov
add
cmp
pop
jns
into
pop
jnp
nop
js
imul
xchg
inc
jnp
sbb
sarb
cmp
mov
sub
cmpl
js
add
ds
sub
cmp
mov
data16
aas
mov
jnp
mov
cmp
cmp
iret
arpl
mov
cmp
ds
js
js
cmp
cmp
push
push
test
mov
js
mov
push
adc
jnp
mov
cmpb
mov
add
cmp
xchg
jnp
js
sub
test
jnp
mov
mov
cld
pop
mov
aas
js
mov
mov
sub
sti
test
cmp
mov
sub
mov
cmp
jle
cmp
insb
cmp
addr16
mov
cmp
xchg
stc
mov
movsl
test
jle
nop
mov
or
dec
scas
subl
adc
sti
mov
add
mov
push
aas
xchg
sub
lahf
add
sbb
sarb
test
mov
cmp
mov
aaa
mov
cmp
mov
and
mov
sbb
js
mov
jge
jmp
xchg
sti
mov
mov
imul
sbb
sti
insb
cmpl
mov
push
scas
lock
cmp
mov
mov
in
cmp
mov
mov
xor
das
add
cmpb
mov
add
or
nop
xchg
add
adc
cmp
js
cmp
mov
cmp
jnp
aas
js
insb
cmp
subl
add
cmp
xchg
jnp
cmp
addl
inc
jnp
fwait
cmp
or
cmpl
cmp
jnp
mov
bound
out
das
cmp
cmp
mov
iret
inc
cmp
pop
jnp
nop
js
stos
cmp
xorl
push
sub
cmp
add
js
add
sbb
cli
psubq
mov
inc
mov
nop
js
fstpt
inc
xchg
sti
test
xchg
add
into
fnstsw
xchg
jnp
js
mov
cmp
cmp
add
pop
mov
mov
lds
lahf
xchg
add
jnp
mov
mov
xchg
inc
icebp
mov
cmp
leave
cmp
enter
jmp
sarl
add
mov
cmp
js
pop
clc
loopne
jecxz
mov
test
add
fldl
jnp
js
add
and
inc
iret
cmp
jnp
mov
fidivrs
add
jle
scas
push
or
pop
jnp
cmpb
adc
xchg
aas
call
loope
mov
fstpt
cmp
stos
mov
js
je
bound
sarb
add
add
add
mov
cmp
inc
xchg
sti
mov
subl
mov
mov
mov
dec
cmpl
lods
cmp
mov
or
add
psubd
sti
js
xchg
mov
test
inc
jnp
push
cmp
orl
xchg
sarl
jnp
add
mov
cmp
xchg
subb
cmp
inc
jnp
sbb
stos
mov
jecxz
aas
inc
fwait
icebp
das
aaa
nop
adc
adc
das
aaa
adc
js
mov
outsl
jmp
arpl
add
mov
jge
insb
mov
xchg
jg
inc
mov
nop
js
stos
mov
lahf
test
inc
cli
add
rcrb
dec
into
enter
cmp
or
mov
sub
cmp
mov
fisttps
dec
mov
mov
cmp
mov
inc
stc
cmp
inc
add
jmp
sbb
aas
mov
inc
add
xlat
mov
push
cmpsb
addr16
testl
fs
mov
xchg
adc
fsubrs
jnp
mov
test
addb
fmul
fdivrl
or
push
mov
push
subl
lret
cmp
xor
aaa
adc
inc
mov
js
lahf
inc
mov
popa
add
cmp
cmpb
ja
stos
xorl
mov
cmpl
bound
nop
mov
inc
cmp
pop
mov
or
insb
jle
mov
aas
gs
mov
add
stos
adc
cmp
add
xchg
mov
mov
fistpll
add
mov
fldcw
inc
mov
lds
jmp
stos
xchg
cmp
add
inc
addr16
test
adc
inc
lea
cmp
sub
mov
push
ds
mov
test
mov
das
lods
mov
cmp
inc
in
or
ret
adc
subb
insb
in
cmp
pop
mov
sbb
das
out
mov
add
cmp
add
adc
mov
aam
bound
mov
mov
dec
bound
push
mov
ljmp
mov
mov
out
adc
adc
fildl
or
adc
ret
adc
add
cmp
mov
sbb
iret
jb
fdivrs
dec
ds
dec
arpl
add
imul
adc
jmp
cmp
stos
adc
jecxz
test
mov
pop
cmp
cli
mov
xchg
pusha
add
mov
inc
mov
imul
sti
mov
mov
addl
adc
cmp
insl
push
mov
pusha
and
cmp
jecxz
inc
into
push
filds
or
das
addb
aaa
mov
pop
mov
xchg
xchg
pop
jns
cmp
rcrb
jo
mov
jo
add
jmp
mov
xchg
add
scas
out
rolb
mov
and
adcb
lods
aaa
imul
cmpl
insb
mov
or
jo
xchg
arpl
inc
or
sbb
push
mov
add
mov
mov
sbb
lea
jle
clc
scas
mov
sar
mov
mov
add
sub
test
imul
pusha
cmpb
push
cli
mov
or
lahf
mov
sub
dec
lahf
dec
aaa
jno
mov
arpl
test
push
and
andl
andl
push
fdivs
xor
cmpsb
add
jecxz
cmp
mov
xchg
cmp
fldt
sbb
pop
nop
cmp
gs
cmp
xorl
adc
push
sbb
mov
ds
cli
mov
add
jmp
jns
ds
mov
dec
cmp
cmp
adc
mov
call
mov
mov
cmp
mov
cld
mov
add
add
stos
add
mov
and
add
cmpsb
in
cmp
enter
insb
fdivs
jp
test
mov
out
cmp
jmp
cmp
lahf
ds
dec
inc
add
addl
pushf
add
scas
fisubrl
add
mov
inc
cmp
cmp
jnp
push
ja
xchg
mov
sbb
cli
stos
mov
sti
push
mov
imul
mov
fbstp
mov
inc
jg
sbb
mov
imul
dec
push
sbb
cmpsl
loopne
jnp
insb
lahf
aaa
pop
mov
aaa
gs
fnstcw
cmp
xor
orb
add
mov
repz
aaa
iret
mov
cmpb
addl
jecxz
mov
mov
mov
cmp
insl
mov
insl
or
xchg
sbb
cmpl
cs
mov
das
push
loopne
cmpsl
jns
mov
test
mov
lock
adcl
jg
lock
cmp
mov
push
dec
mov
mov
fcmovnu
aaa
pop
mov
fsubr
stc
mov
cmpl
mov
jge
adc
jecxz
cmp
mov
data16
mov
jg
rcr
xor
mov
shl
mov
cmp
mov
inc
pop
pop
stos
add
jl
add
lods
mov
push
push
test
mov
sti
addb
mov
jg
mov
lahf
cmpl
add
mov
xchg
add
push
sbb
gs
push
cmp
call
out
ljmp
mov
cmp
outsb
sti
cmp
mov
xorl
jnp
mov
inc
test
jne
adcl
mov
xor
xor
lds
mov
or
or
lods
lahf
dec
mov
ds
mov
fisttps
jae
shll
xor
mov
or
xor
add
scas
mov
xor
sub
clc
aaa
iret
mov
xchg
cmp
mov
inc
in
cmp
cmp
add
mov
cmp
jge
push
pop
add
cmp
cli
mov
mov
out
dec
sbb
nop
cmp
lods
xchg
cmp
add
insb
xorb
add
les
add
add
mov
or
lahf
sub
dec
lret
dec
nop
cmp
sbb
adc
xchg
fwait
test
mov
mov
fcomps
data16
pop
add
fcomps
push
cmp
ds
call
mov
addr16
push
fistpll
gs
mov
popa
out
mov
add
cli
add
cli
mov
jno
add
test
mov
push
popa
inc
mov
push
cmp
andl
add
or
mov
mov
adc
sti
mov
adc
addl
imul
test
aaa
cmpl
jns
jno
ds
iret
inc
inc
scas
mov
mov
cmp
mov
sbb
jge
outsb
mov
pop
push
add
add
push
add
jecxz
mov
add
pop
push
add
inc
push
fnstenv
stos
orb
imul
mov
gs
aas
dec
cmp
sbb
cmp
imul
iret
cmp
cmpl
cmc
addl
orl
imul
pop
jo
fdivrs
add
cmp
adc
and
imul
sahf
or
mov
bound
test
sbb
jnp
les
cmp
push
mov
sbb
push
adc
sbb
ficompl
sti
sbb
adc
cwtl
jg
call
adc
sbb
jnp
fmuls
jecxz
adcb
sub
xchg
mov
adcl
stos
adc
cmp
mov
or
or
gs
gs
gs
mov
inc
mov
add
mov
mov
mov
or
or
or
std
or
or
or
or
or
gs
gs
gs
or
loope
xlat
lahf
push
aaa
or
subb
pop
repz
call
xchg
adc
mov
mov
loope
rolb
test
hlt
fwait
popa
aaa
mov
loope
push
add
mov
sbbb
add
fwait
cmpb
stc
mov
add
jl
push
mov
xchg
jg
and
dec
test
cmp
push
call
jnp
shll
cmp
adc
mov
mov
mov
test
gs
xor
push
mov
in
roll
mov
push
pop
sbbb
or
aaa
mov
cmp
daa
sbb
jnp
vphadduwq
mov
xchg
gs
aaa
pop
mov
mov
mov
cmpsb
push
jge
mov
mov
cli
mov
sbb
shrl
repnz
gs
push
adc
xor
push
mov
mov
jo
js
mov
mov
fsubrs
imul
sub
inc
inc
in
mov
addb
mov
inc
mov
imul
mov
lahf
cmpsl
pop
dec
lahf
add
ljmp
gs
ds
ds
aas
mov
mov
sub
mov
sbb
mov
and
adc
xor
stos
aaa
imul
cmp
jg
xor
cmp
mov
mov
cmp
mov
cmp
in
cmp
sub
sub
adc
cmp
lahf
mov
mov
inc
cmp
xor
pop
mov
mov
mov
ficomps
mov
inc
inc
xor
loope
mov
mov
push
add
pop
adc
cmp
add
movb
cmpb
dec
mov
lret
shl
adc
push
push
mov
sarl
inc
js
stc
mov
ds
mov
mov
and
jb
arpl
adc
cmp
adc
imul
mov
lods
aaa
imul
fildll
fcom
mov
clc
test
dec
cmp
mov
scas
mov
dec
aas
insl
add
mov
mov
rcr
idivl
add
movsl
adcl
jb
add
adc
cmp
jmp
mov
clc
aaa
pop
push
gs
data16
fcomps
add
pop
mov
sbb
jns
sub
jb
mov
push
cmp
mov
dec
push
sub
cmp
mov
push
mov
mov
adc
cmp
cmpl
mov
mov
mov
cmpl
add
xchg
pop
mov
add
and
jge
mov
imul
jg
mov
addl
pop
add
adc
push
cmp
mov
pop
mov
imul
dec
mov
sub
inc
imul
add
add
add
push
xchg
add
sub
jmp
adc
add
mov
cwtl
mov
imul
mov
mov
out
cmpl
push
mov
pop
loop
add
imul
pop
mov
aaa
inc
in
mov
addl
add
mov
and
sbb
mov
push
mov
test
mov
aaa
repnz
push
cmp
mov
cli
ds
inc
ds
or
add
ja
add
sbb
mov
stc
xorb
ds
ret
cmp
ret
ret
adc
cmp
ret
mov
pop
sbb
ret
add
push
mov
xor
push
mov
cmpl
faddl
add
lea
push
cli
jle
cli
cs
cli
lahf
pop
cli
push
pop
cli
add
icebp
pop
cli
mov
cli
ret
pop
cli
mov
cli
gs
cli
aad
cli
xchg
addr16
subl
push
pop
cli
or
stc
pop
cli
stos
pop
cli
sbb
lret
pop
sbb
sbb
fstpl
imul
dec
jns
mov
test
add
mov
mov
jmp
les
leave
jns
mov
sub
cmp
sbb
sbb
or
loop
mov
gs
mov
int
mov
mov
mov
mov
mov
adc
aam
mov
mov
cmpsl
repnz
or
or
or
gs
gs
or
cmp
pop
xor
lock
mov
push
mov
push
sub
bound
cmpsb
bound
mov
sub
and
or
inc
add
mov
and
dec
shlb
cmp
stc
mov
cli
mov
data16
add
test
dec
mov
imul
fcomps
data16
sbb
stos
adc
cmp
inc
lret
and
mov
or
gs
mov
fs
mov
mov
ljmp
and
js
fsubrs
imul
imul
mov
or
push
imul
iret
push
insl
addb
insl
andb
insl
adcl
arpl
or
movsl
ds
xor
sbb
aaa
pop
jae
cmp
mov
mov
cmp
add
push
adc
sbbb
pop
andb
orb
imul
ja
adc
mov
push
pop
add
push
mov
cmp
cmp
es
push
dec
cmp
push
dec
mov
mov
imul
stos
adc
addl
add
test
push
clc
xchg
or
mov
sbb
mov
nop
cmp
push
cmp
mov
les
mov
aas
orb
subl
bound
sbb
mov
sub
jmp
adc
mov
das
call
dec
add
or
aaa
inc
in
cmp
cmp
add
add
cmp
mov
cli
aas
iret
push
add
add
xchg
mov
arpl
add
push
addl
cmp
insl
mov
addb
mov
outsb
pop
jae
mov
lods
dec
add
lret
cmp
cmpl
mov
mov
jnp
add
cmpl
mov
cmp
lods
xchg
xchg
cli
cmp
in
ds
mov
mov
mov
cmp
mov
add
push
cmp
aas
push
mov
fwait
mov
leave
push
js
xor
mov
jecxz
mov
fmull
cmp
ds
add
inc
push
lret
add
add
rclb
mov
and
ja
jecxz
aad
rorl
inc
xrelease
cmp
adc
cmp
inc
cmp
gs
gs
andl
add
imul
pop
andb
pop
add
fcomps
cmp
or
ret
call
sbb
mov
sbb
mov
add
addl
or
pop
push
cli
mov
mov
cwtl
cmp
xchg
sub
sbb
rol
aaa
push
cs
push
gs
sti
cmp
cmp
cmp
inc
sbb
mov
cwtl
addl
sbbb
nop
cmp
gs
aaa
push
dec
cmp
push
addl
push
and
jg
mov
cwtl
cmp
cmp
cmp
and
aas
aas
mov
cmpb
mov
add
mov
push
addr16
sub
mov
cmp
cmp
mov
push
xchg
jns
cmp
xchg
add
cmp
scas
mov
mov
orb
jb
jecxz
mov
jno
icebp
mov
or
jmp
jmp
aaa
pop
add
add
imul
push
fwait
sub
add
cmp
fucomi
aam
aaa
jmp
or
sbb
mov
cmp
adc
cmp
adc
inc
dec
in
or
push
cmp
or
mov
sub
scas
mov
ret
fists
enter
scas
mov
ret
fists
clc
xchg
fists
enter
scas
mov
ret
mov
jg
xchg
insl
adcb
aaa
cwtl
cmp
cmp
mov
push
mov
xchg
xor
jecxz
mov
mov
dec
in
sub
aaa
cmpl
mov
mov
jmp
imul
dec
add
push
jbe
mov
cmpb
mov
xrelease
imul
stos
adc
mov
mov
imul
push
cmp
roll
xor
mov
adc
jnp
mov
cmp
add
cmp
cli
mov
cmp
das
cli
or
fwait
sbb
mov
adc
cmpl
sar
mov
cli
add
mov
add
and
call
call
call
jnp
mov
sbb
movzwl
inc
mov
mov
pop
cmp
add
jnp
scas
adcl
mov
and
aas
sbb
dec
push
or
jecxz
pusha
rolb
std
out
aaa
imul
imul
popl
pop
mov
mov
ret
sbb
mov
aam
xchg
xchg
stos
mov
imul
jge
pop
gs
adc
adc
pop
add
push
aas
push
aas
adc
inc
add
jecxz
add
cmp
cli
and
mov
inc
and
in
ret
push
enter
insl
mov
stos
push
sbb
mov
mov
imul
pop
cmp
mov
add
and
cmpl
ja
ds
cmp
jmp
insl
add
or
ret
stos
out
mov
bound
stos
adc
xor
movsb
push
adc
ds
or
fdivl
sbb
cmp
sub
cmp
mov
clc
push
popl
sbbl
mov
sub
aaa
push
aam
lahf
add
test
stos
aaa
imul
imul
xchg
cmpl
mov
and
inc
add
orl
adc
cld
aaa
inc
in
mov
push
push
inc
test
lahf
add
movsb
imul
or
jl
dec
cld
push
jge
jbe
out
xor
aaa
cli
sbb
aaa
xchg
out
pop
cmp
mov
stc
cmp
pop
xor
add
cmpl
test
xchg
push
cli
stos
mov
add
mov
mov
mov
aaa
push
dec
mov
aaa
imul
add
add
insb
cmpb
inc
stc
mov
cli
aas
cmp
mov
aas
or
mov
cmp
stos
sti
out
mov
imul
cld
add
mov
mov
les
jge
sub
andb
cmp
mov
push
mov
aaa
cmpl
in
adc
mov
cmpb
cmp
push
imul
in
cmp
inc
cmpl
add
addl
sub
sbb
cmpb
cmp
cmp
mov
or
inc
mov
adc
aas
scas
adc
addr16
inc
add
mov
je
mov
cmp
arpl
xchg
or
push
js
iret
mov
jmp
insb
mov
fbstp
pop
mov
pop
andb
pop
add
or
adcl
and
pop
add
mov
cmp
test
add
adc
in
or
mov
mov
in
aaa
iret
mov
sub
out
in
adc
sbbb
fadd
add
mov
add
xlat
popl
mov
movsb
push
cli
test
adc
xchg
pop
cli
push
int3
sbbb
movsb
mov
cwtl
mov
leave
mov
lret
mov
mov
hlt
mov
mov
push
mov
scas
mov
add
inc
add
orb
xchg
imul
test
cmp
cli
mov
adc
cmp
mov
mov
inc
insl
outsb
push
jne
xchg
adc
add
lods
mov
xchg
popw
cmp
mov
xchg
les
jecxz
mov
mov
aaa
or
xchg
adc
sub
cmp
inc
ja
add
cmp
out
mov
test
add
add
fmull
cmc
addb
add
in
cmp
mov
cli
jmp
inc
ljmp
iret
mov
aaa
cmpl
out
mov
cmp
mov
add
mov
jecxz
mov
mov
mov
xchg
mov
sub
das
mov
insl
mov
nop
cmp
aaa
gs
mov
xor
dec
mov
adc
add
sbbl
stos
add
out
andl
mov
push
pop
push
cli
mov
aaa
das
cmp
mov
sti
mov
cmp
mov
js
test
add
insb
cmp
fnstenv
sahf
dec
mov
add
stos
adc
mov
adc
cmp
cmpb
adc
fistpll
mov
cmp
mov
add
push
jb
pop
test
mov
clc
movsl
fistpll
cmp
push
push
cmp
gs
aas
gs
cmp
mov
mov
mov
loopne
aam
cmp
mov
dec
adc
mov
cmp
mov
test
movsb
stos
aas
sbb
out
push
aaa
gs
stos
js
mov
sub
cmp
mov
push
cmpsl
jne
sbb
mov
mov
mov
cmp
aaa
mov
add
cmpl
adcb
or
xchg
add
pop
test
addl
add
mov
push
inc
or
gs
gs
mov
pop
jo
fmuls
jns
push
sti
sbb
int
mov
mov
fistpll
testl
push
sbb
dec
add
ds
mov
aaa
jnp
fisttpll
cmp
mov
mov
mov
dec
test
fstpt
popa
subb
push
cmp
test
add
aaa
push
inc
call
mov
cwtl
mov
hlt
push
andl
fildll
cmpsl
movsl
xchg
aaa
cmpl
cmp
pop
js
subl
stos
add
push
mov
mov
call
mov
std
mov
stos
inc
push
mov
cmp
cmp
jnp
cmpsb
fstpl
cmp
mov
clc
pop
push
mov
lahf
inc
test
fidivrs
cli
cmpb
mov
or
stos
add
data16
aaa
or
mov
jge
sub
data16
stos
adc
decb
inc
xor
add
cmc
fsubrs
xchg
xchg
or
mov
fwait
ja
add
cmpb
mov
add
cmp
cmp
inc
popl
insb
ret
aas
sbb
xor
out
add
mov
push
mov
jl
push
aaa
and
stc
xchg
in
mov
cwtl
mov
mov
cmp
mov
imul
fcomps
data16
pop
ds
fcomps
data16
pop
add
fcomps
mov
in
cmp
gs
pop
mov
cmp
mov
add
mov
mov
xchg
imulb
and
movb
out
or
mov
add
lods
incl
jp
cmp
mov
sub
movsl
addl
popa
aaa
add
addl
mov
test
std
mov
scas
mov
mov
mov
lods
push
add
jle
cmp
aaa
imul
jg
aas
imul
or
push
mov
or
mov
mov
mov
push
inc
push
pop
es
cmc
icebp
mov
cwtl
mov
mov
jns
aaa
sahf
dec
mov
aaa
imul
push
push
jo
add
or
sbb
mov
stos
sbb
add
cmp
gs
mov
add
fcomps
inc
fcomps
sbb
pop
dec
fcomps
data16
pop
mov
add
lods
cmp
mov
add
jl
inc
in
mov
mov
sbb
pop
cmp
xchg
aas
cmp
mov
mov
sub
imul
scas
adc
ret
mov
inc
and
add
pop
in
cmp
sub
call
out
mov
jmp
mov
mov
out
stos
aaa
imul
mov
fcomps
data16
pop
sbb
stos
push
add
pushf
cmp
inc
mov
orl
mov
cli
cmp
gs
clc
pop
mov
add
mov
sbb
pop
cmp
cli
ds
mov
testl
cmp
mov
adc
xchg
dec
jp
iret
mov
pop
mov
andb
pop
add
mov
push
les
imul
mov
or
ret
adc
add
cmp
fisttps
adc
add
mov
push
mov
cmpsl
das
arpl
clc
pop
cmpb
push
jo
mov
aaa
inc
in
mov
mov
mov
mov
inc
stc
mov
mov
add
add
push
add
aas
push
js
insl
add
push
mov
adc
daa
adc
shrl
jg
xchg
jmp
addl
mov
push
jno
adc
mov
push
pop
mov
shlb
add
inc
mov
sub
xchg
out
add
repnz
sub
add
add
addb
xchg
cmp
out
or
das
cmp
imul
adc
addb
push
add
mov
test
imul
mov
mull
add
jmp
daa
mov
aaa
popa
inc
fs
stos
push
mov
bound
addb
dec
mov
jg
push
test
lret
aaa
jmp
mov
lahf
xor
dec
cmp
add
aaa
or
lea
aaa
cmp
std
addr16
aaa
xchg
mov
lock
xor
shlb
jg
in
adc
mov
adcb
aaa
push
fdivl
dec
cli
aaa
and
add
and
int
jmp
aaa
sbb
push
adc
mov
addr16
popa
hlt
and
sub
stc
push
jge
lcall
or
testl
dec
push
stc
aaa
sbb
rcrb
jae
inc
add
jg
inc
in
mov
clc
je,pt
aas
test
xchg
pop
adc
aaa
aad
imul
aaa
mov
pop
int3
xor
out
enter
jae
test
mov
je
sti
aaa
inc
jle
mov
or
jmp
call
pop
lret
aas
jb
inc
movsb
shll
add
call
or
xchg
aas
fiadds
int
xchg
sbb
aaa
sbb
sbb
fists
push
jl
xchg
dec
aas
addr16
addr16
testl
inc
lods
adc
add
addl
jnp
mov
sub
cmp
xchg
out
sti
pop
or
jge
mov
sbb
jnp
mov
bt
fists
xchg
sbb
and
arpl
ret
jns
mov
xlat
leave
xchg
sbb
jns
movsb
cwtl
cmp
xchg
sbb
sbb
cld
nop
mov
xchg
cmpb
mov
jnp
inc
popl
xchg
fnstenv
jnp
cmp
popf
decb
cmpl
mov
sbb
lcall
jnp
mov
jns
mov
xchg
cmp
xchg
mov
jns
mov
inc
jnp
add
lds
xchg
adc
cli
mov
jns
mov
add
test
cld
stc
aaa
adc
jnp
push
clc
cmp
xchg
bound
jns
mov
or
sbb
jnp
sbb
jns
mov
mov
xchg
xchg
fcoms
clc
jns
mov
mov
aas
sbb
jns
mov
and
data16
or
mov
adc
fistps
loope
inc
mov
cmp
sbb
jnp
sti
pushf
sbb
adc
sbb
jnp
add
and
sbb
jns
pop
jnp
jl
clc
lcall
pop
cmpsb
call
adc
loopne
aas
std
sbb
jns
mov
ja
xchg
arpl
inc
jns
mov
pop
jnp
cmp
lcall
iret
xchg
sbb
loopne
fistpll
mov
fstpt
cmp
cmpsb
mov
adc
sbb
inc
mov
jns
mov
pop
jnp
out
test
and
ret
jns
mov
inc
dec
pop
out
xor
push
sbb
sbb
xchg
pusha
fiadds
sbb
loop
adc
fdivp
pop
jge
incb
addl
ret
jns
jmp
push
jnp
inc
cmp
sarl
jg
sbb
sbb
jns
jnp
test
sbb
jnp
and
pop
mov
clc
dec
xlat
arpl
pop
ja
mov
cmpl
sbb
adc
inc
dec
pop
inc
jns
mov
loope
add
inc
jg
or
jns
mov
xlat
cmp
jnp
in
and
arpl
mov
mov
jl
pop
jns
mov
ja
imul
add
and
mov
jnp,pt
cld
cmp
sbb
mov
sbb
les
mov
add
fimuls
pop
mov
fnstcw
xlat
mov
sbb
adc
ds
jge
jmp
mov
mov
cwtl
sbb
xchg
adc
sbb
jnp
add
mov
cs
cmp
or
add
add
popa
sbb
aas
mov
mov
jns
sbb
jnp
dec
ja
mov
jecxz
pop
out
mulb
jp
pop
xchg
mov
xchg
cmp
ficompl
cltd
jnp
inc
xchg
test
or
adc
fs
mov
add
add
fisttps
sti
mov
push
in
cli
add
cld
ficoms
xchg
pop
push
inc
mov
adc
push
or
mov
pop
jnp
leave
out
popa
in
pop
jle
jge
xchg
paddb
xchg
imull
sbb
lds
and
mov
cmpsl
popf
add
icebp
mov
fadds
mov
leave
cmp
push
aaa
xchg
cs
scas
inc
jle
aaa
sub
insb
pushf
mov
lea
pop
xor
mov
pop
inc
cmpsb
daa
and
pop
xchg
xchg
shl
inc
push
mov
cwtl
and
movups
stos
xor
ds
mov
inc
ret
mov
mov
arpl
mov
xor
aaa
scas
xchg
xchg
inc
dec
cmp
repz
mov
mov
mov
shlb
dec
or
dec
cmp
mov
xor
lds
std
aaa
or
cmc
js
inc
cmp
aaa
cwtl
cltd
mov
xchg
aaa
fidivrs
movsb
xchg
sbb
aaa
sbb
and
pop
or
or
cmp
es
sbb
pop
xor
mov
fdivl
jg
repnz
add
fildl
inc
addr16
fstpl
dec
add
sarb
aaa
dec
pop
add
sub
pop
sub
clc
push
fsubrs
xor
dec
daa
and
jp
xor
pushf
ficoms
cmp
rclb
std
iret
dec
push
and
dec
mov
inc
mov
repnz
rorl
push
mov
aaa
movsb
cmpsl
inc
push
rclb
mov
scas
inc
and
stc
int
aaa
lods
cmc
sbb
mov
filds
gs
mov
les
nop
jge
scas
lcall
sbb
fwait
mov
pop
sarl
xlat
jge
add
rorb
sub
mov
ret
out
addb
sbb
push
cmp
aas
aaa
push
adc
cs
lcall
mov
jno
mov
sbb
fiadds
test
in
enter
aaa
mov
xchg
out
test
test
test
insb
mov
sub
mov
orl
add
cmpsl
mov
imul
insb
movsl
mov
pop
std
mov
xchg
xor
clc
sub
mov
hlt
ljmp
rcll
aas
push
adc
fs
cmpsb
mov
xchg
adc
stc
cli
and
aaa
jle
fmul
xchg
das
mov
lret
sub
mov
pop
clc
mov
movsb
pushl
jne
jg
pop
test
rcrl
test
jmp
jge
pop
mov
and
mov
push
movsb
push
jl
xor
ja
mov
in
subl
les
ljmp
movsb
insl
sbb
cmp
loop
out
pop
pop
ds
push
test
add
lods
add
add
aaa
inc
lods
sub
dec
lock
aaa
add
mov
mov
xchg
es
jo
addr16
xor
enter
mov
fcmovu
mov
push
adc
xchg
js
aaa
add
add
mov
aaa
dec
and
sbb
adc
push
add
dec
and
cli
sbb
cmp
xchg
add
aaa
sbb
adc
sbb
aaa
negl
xorb
and
aaa
or
test
adcb
add
jbe
inc
sbbb
push
xor
into
cltd
movsb
addr16
add
testl
push
pop
mov
addr16
arpl
mov
aam
shll
push
nop
xchg
dec
in
or
sbb
mov
mov
pop
lcall
push
jge
mov
xor
dec
insl
cmpsl
inc
out
mul
sub
repnz
pop
mov
sbb
mov
cmc
xchg
int
shlb
daa
inc
adc
jmp
or
xor
xchg
cmc
adcb
push
aas
aas
popa
arpl
push
inc
xlat
sbb
inc
pushf
aaa
mov
mov
in
cmpsl
psraw
mov
adc
or
and
or
mov
lret
out
and
pop
out
pop
dec
sub
xorl
mov
mov
stos
sahf
push
out
lods
cmp
xchg
add
stos
aaa
or
cmpsb
xchg
test
jae
push
xor
or
push
xchg
mov
aaa
pushf
cmp
fidivs
xlat
and
cwtl
int
int3
adc
push
sub
jecxz
movsl
xlat
xlat
inc
call
lock
or
jnp
cld
cwtl
out
pop
test
mov
aaa
mov
out
mov
aaa
fsubr
cmp
xorl
adc
les
dec
cld
jg
testl
lods
lret
lcall
repz
adc
cmp
inc
cld
or
leave
test
xchg
xchg
or
or
addr16
aad
fmuls
adc
aaa
or
or
ss
jbe
pop
lahf
call
add
aaa
jge
xor
dec
inc
scas
xchg
lahf
inc
pop
add
outsb
ja
test
cmpsl
jl
push
sbb
rcr
mov
mov
cmp
aaa
iret
test
mov
dec
and
bound
movsl
shlb
mov
repnz
aaa
or
shrb
into
addr16
and
jecxz
add
jbe
push
xlat
sbb
cmp
jne
pop
mov
sbbb
ret
test
jbe
stc
int
loopne
xchg
mov
sub
sti
movhlps
sbb
dec
xor
cmp
repnz
jne
mov
cwtl
sub
cmp
fbstp
fwait
inc
xchg
addr16
sbb
add
fstpt
fcoms
or
imul
scas
adc
xchg
add
pop
test
lods
xlat
push
xor
aam
in
or
cmpsb
push
aaa
cs
sub
inc
push
call
in
inc
xor
out
aaa
loop
daa
arpl
jp
add
clc
xchg
fidivrl
sub
orb
lret
mov
je
pop
dec
xor
xor
outsb
push
ficomps
int
aaa
adc
aaa
adcl
cli
or
mov
xchg
popw
aaa
cmp
shlb
cmpsl
addb
jg
sbb
mov
aaa
jns
ja
sub
pop
aaa
fs
mov
aaa
insl
sbb
scas
mov
dec
movsb
ds
pop
es
add
mov
or
and
daa
insb
addr16
or
adc
add
aaa
in
les
or
mov
aaa
mov
pop
js
daa
fwait
xorl
clc
pop
xor
fcmovnb
push
fidivs
fsubrp
scas
jb
cs
jae
into
jge
jbe
or
push
mov
test
cmp
pop
outsb
pusha
insb
xchg
mov
fstpt
aaa
xchg
fs
test
aaa
loop
imul
movsl
sub
in
inc
mov
dec
stc
pusha
ljmp
xchg
pop
jle
pop
push
je
pop
mov
popf
sbb
fisttpl
aaa
lret
or
xchg
fcoml
xor
outsb
add
and
std
ljmp
rcl
aaa
cmp
pop
mov
fisubl
pop
lcall
aas
jle
stos
fisttps
adc
push
sub
cmpsl
pop
movsl
insl
aad
add
and
out
faddl
inc
jb
mov
xor
jbe
pop
inc
rorl
in
ds
pusha
jle
lcall
lods
jmp
insl
pop
jbe
jmp
movsb
pop
xor
mov
ret
rcll
sub
jmp
jne
push
add
out
and
xchg
aaa
popa
xchg
fiadds
cmp
or
loop
aaa
pop
mov
cmp
inc
inc
mov
inc
mov
add
and
in
movsl
or
xchg
loop
pop
inc
xchg
pushf
jns
aas
sbb
outsb
addr16
aaa
or
xchg
aaa
rolb
adc
decl
mov
sub
in
cmpsl
mov
mov
jns
jle
ret
jae
jmp
pop
pop
sbb
repz
aaa
xlat
cmc
imul
iret
daa
mov
mov
add
or
aaa
jno
mov
push
jne
imul
dec
mov
xlat
mov
pop
cmp
mov
movsl
mov
test
jnp
add
push
clc
dec
adc
xchg
mov
sahf
clc
popf
rcrb
jne
xor
sbb
nop
adc
sub
in
pop
orb
mov
push
add
mov
in
sbb
sbb
ss
push
fmuls
push
mov
mov
push
jmp
aaa
mov
cld
aaa
cmpl
testb
bound
pop
aas
gs
mov
sbb
dec
adc
and
std
adc
pop
jo
jns
out
sti
fnstsw
and
lds
aaa
inc
test
mov
xlat
inc
xor
mov
lea
js
dec
add
add
aas
out
cli
mov
mov
rclb
sub
mov
in
aaa
xor
daa
pop
popa
aaa
xchg
mov
push
aas
dec
aaa
sarl
jbe
aaa
pop
std
rclb
cmp
aaa
repnz
xlat
nop
jmp
orl
aas
lds
les
dec
cs
shll
popf
adcb
jns,pt
cmp
hlt
adc
sahf
mov
fistl
jne
je
cmpsb
push
pop
les
rorl
or
aaa
pop
dec
ss
push
mov
mov
add
sbbl
aaa
jge
xor
int3
aaa
mov
or
jb
repz
mov
testb
add
popa
xchg
into
lds
pop
sbb
stos
adc
xchg
aaa
adc
mov
sub
or
js
lock
sarb
std
adc
push
paddusw
cli
aas
roll
mov
fcomi
and
pop
xchg
aaa
jmp
mov
xchg
jno
cmp
aaa
ss
jbe
and
or
cmp
outsl
or
xor
push
xor
jle
jno
mov
daa
hlt
xchg
push
ret
fdivl
test
out
jg
and
iret
xchg
int
fcmovu
fidivrl
fiadds
sbb
push
addr16
jl
push
jbe
add
xchg
and
sbb
sub
adc
js
pop
pop
pop
sarb
pop
cmp
cmp
xor
jmp
pop
loop
test
pop
mov
jne
jns
mov
cmp
inc
cmp
fnstsw
xor
dec
ja
pop
repnz
aas
cli
out
movsb
ds
ds
xor
and
jno
out
push
mov
and
xor
lcall
xchg
ror
into
insb
cmp
imul
mov
fs
divb
pusha
mov
push
xchg
pop
sahf
gs
cmpsl
lock
test
rclb
sahf
push
cmpb
outsl
pushl
popf
aam
lret
mov
fwait
jb
and
and
mov
out
int
jbe
fidivs
imul
rolb
xchg
pop
add
stc
stos
hlt
lods
arpl
loopne
arpl
pop
lcall
mov
adc
mov
out
jno
and
lock
data16
sub
shrb
aaa
lret
adc
out
aaa
add
out
mov
aam
xchg
adc
pop
xchg
sbb
enter
xor
in
iret
pop
sarb
dec
jo,pt
xchg
rorl
pop
arpl
decb
mov
xchg
inc
out
lret
aaa
movsl
mov
dec
ret
cmpsl
mov
pop
loope
cmp
rclb
clc
sahf
push
sar
daa
scas
fdivs
cmpsb
in
add
mov
idivb
aaa
sub
add
addr16
mov
jbe
icebp
aas
add
fcoml
lret
clc
fsubs
les
mov
fiaddl
hlt
xchg
inc
lret
fnstcw
jns
int
ret
add
dec
addr16
sbb
movsb
out
sti
push
jo
cmp
sub
push
ret
and
cmpsb
daa
mov
nop
test
fsubs
jmp
jle
stos
xchg
jecxz
add
adc
dec
pop
sub
add
xorl
jno
inc
mov
mov
aaa
pop
mov
xchg
cmpsb
or
sbb
nop
loopne
mov
push
mov
sub
les
pop
ds
mov
mov
aaa
cmc
retw
cld
aaa
mov
js
push
pop
mov
test
outsl
repnz
mov
popa
xor
daa
pop
push
jmp
shlb
outsb
add
into
repnz
aam
pop
pop
subl
pop
xchg
mov
js
cmpl
mov
lds
stos
sbbl
push
add
lods
mov
test
ds
dec
div
push
iret
or
push
sti
aam
xchg
cwtl
ret
mov
xchg
fdivrl
jg
push
aaa
insl
lcall
aaa
cmpb
stos
lret
scas
ds
push
daa
test
clc
cmc
stos
stc
sar
mov
mov
ret
aaa
dec
dec
xlat
nop
aaa
mov
stos
cmp
or
dec
imul
sahf
add
aaa
mov
in
dec
ret
out
jno
fsubr
pop
aaa
jo
std
inc
mov
cmp
sub
cmp
enter
stos
mov
fcompl
inc
mov
jmp
hlt
adc
aaa
and
fcoms
cmp
aas
addr16
pop
pop
jb
leave
lcall
imul
popf
and
push
jmp
xor
cmovle
popa
pop
mov
cmp
loope
or
into
adc
lret
xlat
iret
scas
pop
xchg
aaa
leave
nop
sub
aaa
xorl
jecxz
pop
aaa
or
pusha
add
aaa
mov
rcl
mov
xchg
sub
jmp
xor
mov
mov
mov
or
imul
xor
test
popf
ljmp
test
cltd
mov
fwait
or
xor
jo
jl
xchg
fnstcw
mov
adc
mov
jae
flds
push
fistpll
jle
push
fnstcw
mov
push
pop
mov
mov
sbbl
sub
sub
rcll
pop
mov
xchg
loop
sbb
popl
add
adc
dec
add
imul
fidivs
xor
aad
lods
ds
pop
cmpsb
xchg
es
xor
ljmp
movsb
sub
cmp
aas
push
and
sti
jbe
gs
enter
imul
adc
int
inc
or
paddb
daa
insb
loop
aaa
insl
ss
lret
dec
or
popf
test
negl
add
dec
arpl
in
sbb
int3
jne
stc
cmp
test
rcrl
xchg
aaa
sbb
cmp
aaa
imul
mov
lcall
inc
lea
jmp
dec
std
fdivrs
or
fidivl
roll
jne
imul
sti
sbb
push
push
push
jae
cmpsl
jle
test
cmp
add
fwait
sahf
lret
aaa
jmp
mov
cmp
and
dec
aaa
pop
frstor
fxch
adc
dec
pop
aaa
lods
adc
rcr
test
sarl
test
aad
nop
sbb
addr16
mov
jmp
test
or
push
movsb
xchg
aaa
loop
push
pusha
and
cld
pop
lret
cmp
adc
mov
repz
pop
and
cmpsl
xchg
sub
xor
sbb
faddl
push
adc
mov
aaa
jb
push
int
fwait
dec
aaa
stc
pop
inc
adc
add
mov
dec
call
outsl
push
xor
icebp
fwait
shlb
xchg
shlb
lcall
mov
movsl
sbb
and
mov
push
pop
in
pop
add
cltd
cmp
add
dec
xor
lock
aaa
mov
sub
lds
cmp
test
inc
dec
push
xor
aaa
fneni(8087
shr
push
loop
lahf
sub
cmp
aaa
and
sahf
inc
fldcw
xchg
xor
xorl
repnz
out
xorl
add
jecxz
jno
cmp
insl
out
mov
cmp
adc
xlat
aaa
sbb
test
xchg
xchg
aaa
mov
outsb
push
push
data16
pop
cmp
dec
shll
mov
dec
pop
repnz
xchg
mov
aaa
mov
fildll
std
xorb
jmp
cmp
xor
and
mov
into
cmp
ds
insb
cmpsl
jmp
push
test
push
sarb
js
into
push
pop
jge
or
sub
mov
add
mov
pusha
dec
aaa
jg
out
ljmp
jmp
lock
xlat
jecxz
mov
add
push
clc
jnp
lcall
xchg
test
add
flds
aas
sbb
imul
test
inc
adc
jbe
mov
sbb
daa
sti
mov
cmp
pop
sub
div
pop
out
outsl
aaa
mov
jno
pop
adc
insb
aaa
out
popa
mov
rolb
push
aaa
test
cltd
aaa
xchg
sub
popa
push
aaa
jp
jb
test
lahf
out
add
sbb
lea
sub
cmp
outsl
jmp
add
fsubs
test
mov
pop
lahf
sub
add
aam
xchg
aaa
pop
xor
xchg
jns
sahf
out
xchg
aaa
cs
sar
mov
lods
xor
aaa
fbstp
les
repnz
add
cwtl
dec
inc
push
mov
dec
add
cmp
mov
push
inc
fs
scas
cmpsb
jl
incb
dec
pop
aaa
pop
dec
cmc
dec
xchg
xchg
mov
sbb
xchg
std
movsb
jmp
jae
adc
push
add
divb
jae
mov
push
fcmovne
bound
aaa
shl
push
ret
xchg
data16
mov
push
cltd
adc
jae
aaa
and
decl
xor
push
mov
aas
push
cmp
mov
mov
decl
xor
les
push
aaa
pop
inc
and
lahf
mov
cwtl
aaa
ret
mov
cmpsl
add
popa
lahf
aas
push
xor
aaa
cmp
shl
ret
fcmovbe
dec
aaa
xchg
pop
mov
imull
mov
ss
and
xlat
xlat
xchg
faddl
insl
cmpsl
icebp
xor
es
xchg
xor
test
dec
add
test
aaa
mov
adc
imul
loope
sbb
push
or
mov
or
movb
aaa
rorb
or
mov
add
cmp
mov
adc
in
je
mov
pop
xchg
popa
mov
pushf
sub
jne
jno
mov
jmp
xchg
shl
sahf
or
jmp
ljmp
pop
data16
pop
in
xchg
jg
mov
aaa
sub
movsl
mov
subb
aad
fstpl
mov
test
pop
icebp
divl
sbb
and
xor
out
lods
jnp
jno
inc
add
mov
aas
or
or
mov
setg
inc
or
and
add
pop
lret
mov
ja
add
inc
or
push
add
jecxz
test
pop
lret
push
or
and
cld
push
adc
stos
lock
add
add
push
andb
add
ss
sub
in
push
pop
xchg
call
aad
push
aaa
sbb
jg
enter
jne
repnz
xchg
test
subb
pop
jb
sbb
add
jp
jns,pt
lds
pop
or
loope
jb
cmc
cmpl
lahf
ds
xchg
aad
ss
cmpsl
cld
fldenv
shlb
aas
andb
xor
test
iret
addb
movsb
scas
jnp
jmp
aaa
insb
pop
push
in
cmp
aaa
pop
aas
lods
es
ds
aaa
cmpsl
lods
jmp
mov
mov
adc
jle
push
adc
jnp
jns
aaa
ficoml
pop
pop
hlt
mov
sbb
mov
sbbb
cmpsl
pop
stos
xor
add
aaa
jl
loop
into
outsb
ljmp
je
aam
int3
clc
xlat
pop
pop
aad
mov
add
or
or
jl
outsb
mov
mov
iret
xlat
mov
mov
movsl
daa
or
pop
and
cmp
aaa
sahf
jl
pop
pop
add
jns
dec
addr16
mov
mov
xor
ret
or
and
mov
clc
adc
je
daa
out
pop
or
sub
pop
pop
cli
and
add
sbb
lods
mov
vpcmpgtd
xlat
js
loop
add
dec
aaa
mov
adc
jns
add
sbb
aaa
dec
addb
push
fld
pop
mov
xchg
xchg
stc
or
ret
ficomps
sahf
inc
cmp
or
enter
daa
aaa
mov
ljmp
inc
aaa
mov
mov
xchg
jle
ljmp
aaa
ret
test
dec
add
aaa
dec
inc
mov
and
leave
orl
inc
mov
sub
shrb
add
je
mov
fistpl
faddp
decb
aas
jge
std
dec
cmpsl
push
and
ds
inc
cmp
mov
dec
push
cwtl
aaa
add
loop
sub
into
push
lret
pop
cmp
lds
push
imul
mov
aaa
jg
fs
xlat
test
cmp
dec
rcll
inc
clts
xor
pop
xor
mov
ja
fnstcw
les
lret
mov
mov
mov
pushf
shlb
jp
les
nop
pop
cmp
stos
data16
jns
inc
jmp
test
cli
outsb
add
and
lret
cs
or
aaa
daa
or
outsb
loopne
push
aaa
ss
hlt
add
mov
push
cmpsb
and
inc
out
decb
cmp
jns
inc
gs
sarb
into
xchg
mov
mov
std
aaa
mov
lods
movsl
les
cmpsl
pop
xor
fsub
popa
mov
stos
xchg
jbe
fiadds
or
daa
mov
jg
inc
pop
scas
imul
js
imul
test
mov
inc
add
shlb
aaa
mov
mov
call
aaa
jo
sbb
jp
cld
jge
loope
ljmp
sahf
out
ret
gs
aaa
add
jge
aaa
xchg
sbb
cmp
fisttps
push
icebp
shlb
xchg
adc
loope
pop
fiadds
cmp
and
incl
cmpsb
sub
outsl
addr16
fistps
pop
aas
mov
sbb
aaa
in
sbb
movsb
xlat
push
adc
cmpsl
scas
lods
aaa
ljmp
out
pop
or
pop
dec
out
sbb
int3
jne
add
aaa
add
movsl
inc
out
aaa
sub
push
xchg
sbb
xchg
pop
inc
fsubs
ficoml
insb
outsb
scas
add
pop
shll
mov
jge
inc
insb
push
aas
add
pop
dec
gs
xchg
cmp
or
jo
jno
push
ret
fwait
cmp
or
dec
sbb
cmp
jno
add
mov
sahf
aaa
push
pop
push
xchg
cli
sub
cmp
test
adc
mov
jle
xchg
lock
pop
cmc
jecxz
mov
cmp
jmp
cmpsl
sbb
pop
and
xchg
scas
jp
mov
mov
push
jecxz
pop
shrb
xabort
aaa
adc
stos
ja
dec
js
jmp
insb
repnz
inc
lods
addr16
jae
loope
add
cltd
imull
or
test
adc
mov
aaa
shll
jg
mov
pop
or
inc
pop
or
daa
mov
inc
std
mov
addb
fcoms
test
push
shr
sbbb
fistpll
insb
jl
push
aaa
lret
cmpb
xor
and
mov
xchg
inc
aaa
sub
outsb
push
neg
es
adc
push
stc
jmp
aaa
out
cmp
and
jle
aaa
ljmp
and
int3
cs
sub
add
std
lods
cmp
aaa
popa
mov
loope
adc
int3
aaa
imul
test
jle
aaa
rclb
xchg
inc
add
mov
pop
aas
iret
hlt
rorb
data16
add
outsl
aaa
pushf
bound
aaa
outsb
adc
jecxz
cmp
hlt
aaa
push
adc
mov
dec
cmp
push
jp
aas
cmp
sub
jne
xorl
js
jno
das
sub
jns
mov
fdivrs
push
aad
in
cmp
pop
movsl
jo
fucompp
fcmovnbe
imul
aaa
fisubl
adc
cmpsb
lret
out
or
and
insb
cmp
aaa
sub
pop
mov
or
mov
jo
insl
and
cmpsb
shlb
pop
jae
add
push
mov
add
dec
xor
aaa
and
js
ret
negl
int3
pop
xlat
aaa
sbb
popf
pushf
lcall
lret
lods
xchg
loopne
pop
cmp
popf
xchg
push
stos
addr16
cmpb
ds
fdivl
shll
dec
or
loope
aaa
repnz
nop
mov
cmp
mov
xlat
aaa
popf
push
or
das
in
pop
xor
hlt
aaa
mov
shlb
out
scas
cld
adc
push
push
les
popa
sbb
or
lcall
xor
aaa
add
inc
or
data16
ss
leave
add
mov
daa
enter
cmp
inc
dec
adc
scas
loopne
mov
out
outsb
movsl
imul
adc
test
or
clc
jns
jo
fcomps
pop
cmp
xor
jbe,pt
aaa
sub
es
mov
fidivl
pop
adc
push
je
mov
adc
adc
pop
dec
ja
clc
inc
xor
lcall
xor
test
pusha
daa
test
inc
fiaddl
cmp
fdiv
sbb
je
sub
sbb
mov
xor
addr16
jb
mov
add
mov
sahf
push
xor
pop
jno
mov
inc
adc
rolb
or
icebp
pop
xchg
xor
call
insl
aaa
shr
lock
cmp
sub
pop
mov
daa
fists
mov
mov
mov
aaa
out
outsb
adc
mov
enter
xchg
jbe
xor
sti
ds
aaa
mov
vcvttss2si
pop
xlat
pop
icebp
xchg
mov
aaa
add
es
aaa
dec
sbb
pop
aaa
pop
push
push
movl
clc
cmp
add
and
mov
xchg
mov
pop
aaa
stos
dec
xor
shl
or
cli
add
add
mov
les
jns
out
push
jnp
daa
loopne
adc
orb
int
out
js
aaa
cmpsb
mov
mov
fstpl
ja
cmp
aaa
sbb
ljmp
dec
pop
push
js
sbb
jp
mov
mov
sti
rorb
stos
push
xor
mov
push
aaa
out
and
ds
aaa
xchg
mov
ja
stc
and
icebp
lret
cmp
mov
into
mov
cmp
dec
or
enter
fistps
dec
imul
insl
aas
stos
cld
mov
mov
add
mov
repnz
mov
dec
cmpsl
std
aas
popa
aaa
ljmp
aam
xchg
add
xor
and
inc
sarl
shrl
xchg
jb
jl
mov
adc
push
xchg
sbb
push
push
adc
cmc
mov
xor
cmp
les
jbe
ds
fistl
aaa
clc
push
in
sbb
das
shlb
cld
xchg
in
test
ds
test
add
push
or
fidivs
jae
repz
xlat
loop
or
fdivrs
pop
fdivs
dec
inc
out
xor
ja
push
js
fcoml
test
aaa
dec
cmpl
loop
inc
jp
cmp
inc
testb
aam
aaa
or
loope
lea
popf
out
xchg
inc
sarl
jp
aaa
mov
jne
add
enter
push
testl
mov
movsl
enter
xor
adc
or
sub
pop
negb
xor
mov
scas
add
push
repnz
fbstp
in
add
inc
ja
sub
dec
loope
adc
lret
bsr
jae
lret
out
mov
xor
xlat
nop
add
outsb
cmp
and
cmp
rolb
lea
jne
aaa
xchg
stos
mov
and
outsl
movsb
fsubrs
dec
in
or
inc
test
clc
dec
popf
jno
dec
hlt
jnp
iret
fidivs
aas
xor
lahf
out
dec
aaa
add
daa
cmpsl
or
in
or
inc
sub
pop
and
hlt
imul
cltd
movsb
aaa
out
pop
xlat
test
jle
jg
add
mov
outsl
aaa
jl
jo
stos
sub
mov
jne
andb
test
mov
insb
xor
or
notrack
stos
jnp
jl
mov
subl
mov
aaa
faddl
pop
loopne
mov
aad
inc
aas
sbb
sub
fldenv
sbbl
clc
jo
aaa
test
gs
fldenv
fdivrp
daa
inc
jle
fidivrl
shrl
jae
xlat
insb
xchg
dec
je
iret
fdivl
adc
add
cmpsb
aaa
mov
dec
cmp
fcomps
xor
inc
addr16
subl
aaa
les
xchg
pop
cmp
mov
aaa
inc
out
rolb
bound
jbe
aaa
or
call
rorl
aas
scas
cmp
mov
in
stos
xorl
enter
xchg
les
into
test
mov
leave
fmuls
add
push
mov
into
shrb
sub
push
jns
aaa
incl
push
lods
cmp
pop
or
pop
cmp
into
fdivs
push
inc
decl
int
pcmpgtd
aaa
insb
mov
popf
pop
in
cmp
xlat
mov
fidivl
rcrb
aaa
out
aad
mov
adc
xor
enter
pop
mov
stos
add
jne
jno
aas
mov
sahf
aaa
mov
js
lods
pop
cli
aaa
stos
sub
ret
fistpl
nop
ljmp
sub
popa
mov
mov
bt
cmc
push
faddl
mov
mov
adc
mov
lret
test
add
mov
aas
pop
movsl
mov
mov
xchg
bound
xor
aaa
add
mov
xchg
jl
sbb
cld
inc
push
aas
mov
mov
test
mov
push
aaa
inc
inc
in
push
mov
adc
xlat
push
outsl
fisubs
cmp
pop
aaa
and
or
sub
push
mov
mov
pop
lret
in
push
cmpsl
rcl
rcrb
ret
dec
and
imul
mov
or
mov
add
pop
jecxz
shlb
mov
fwait
stos
xor
hlt
pop
adc
cmpb
adc
inc
add
jno
jmp
sbb
sbb
int3
adc
jbe
test
sbb
cmp
aaa
inc
and
aaa
out
sbb
imul
mov
mov
pop
int3
aaa
popa
mov
mov
repz
mov
pop
add
lds
mov
cmp
adc
or
pop
push
pop
data16
dec
ret
mov
lods
dec
cmp
pop
outsl
sbb
dec
int
imul
push
sbb
mov
sbb
adc
insl
push
popf
gs
into
andl
test
inc
cmp
mov
popf
and
mov
mov
sub
xor
cltd
lods
push
fwait
push
dec
out
jl
test
movsl
call
adc
or
test
into
sbb
scas
inc
test
ret
lcall
leave
push
in
and
std
aas
mov
dec
cmpl
and
fcompl
fucomi
fwait
sbb
dec
jl
cld
cmp
mov
or
xor
pop
lret
fnstcw
and
dec
aad
repnz
inc
ret
loop
mov
sub
lret
cmpsl
das
das
add
test
loop
icebp
add
mov
mov
int3
sub
outsb
test
fs
je
fstpt
mov
xor
rorl
lea
fisubs
ljmp
xchg
and
sub
mov
mov
call
stos
or
sbb
enter
daa
and
cli
shl
test
lods
push
insb
cmp
loope
out
pop
push
out
add
mov
pusha
mov
dec
shll
mov
pop
mov
mov
loopne
jb
es
cwtl
or
ret
lods
cmp
scas
std
out
cltd
sbb
push
lods
sbb
xchg
mov
js
mov
je
iret
ja
imul
iret
xor
fcomp
jne
and
rorl
push
mov
dec
repnz
xchg
in
mov
or
gs
les
icebp
push
or
stos
ret
mov
hlt
xchg
aas
pop
mov
push
mov
imul
repz
je
xchg
xchg
pop
sahf
faddl
sub
sbb
mov
adc
lret
push
dec
dec
dec
dec
cs
insb
add
lea
movsl
mov
sub
adc
sbb
gs
imul
lret
shl
mov
jae
insb
mov
sub
mov
dec
mov
adc
adc
sbb
ja
ss
in
std
shlb
jo
mov
int
loope
pushf
cmp
ds
mov
xchg
lods
ds
inc
mov
cs
sbb
fucomp
mov
in
cmp
ficompl
lea
scas
out
ja
iret
cmp
popa
dec
sbbl
adc
clc
jmp
mov
pop
jnp
sbb
jecxz
test
outsl
push
push
cmpsb
mov
pop
mov
cmp
cmp
dec
imul
loopne
outsl
adc
mov
cmp
imul
sbb
fld
inc
pop
les
pop
jo
dec
sbb
shlb
ret
add
rolb
pop
fwait
mov
push
icebp
xor
test
sub
lret
vcvtpd2ps
xor
xchg
sbb
push
notb
jbe
repnz
dec
cs
cwtl
xor
jecxz
fistpl
inc
leave
in
jno
in
inc
repz
sub
out
pusha
mov
xlat
int3
lea
in
fstps
ja
inc
lock
jl
sub
lret
mov
sbb
jbe
pop
pop
xchg
pop
int3
push
ja
aam
nop
rclb
push
sub
xlat
mov
decb
pop
push
test
add
mov
push
fst
adc
inc
ljmp
jnp
adc
mulb
pop
int3
out
adc
popa
popf
aad
andl
jmp
push
or
in
scas
sbb
push
je
gs
push
cltd
push
and
lea
fbld
cmpsl
sti
aaa
add
addr16
add
add
clc
orl
xchg
pop
jo
mov
mov
cli
mov
xchg
orb
jmp
std
xor
cli
gs
xor
cld
cmc
dec
jno
dec
and
rorl
cld
mov
mov
mov
int
fmul
pop
inc
xchg
mov
and
lcall
out
cmp
cmp
cmc
mov
test
in
sub
inc
pop
leave
stc
sub
and
jno
out
inc
mov
sub
cmp
sbb
ljmp
sub
mov
ret
or
leave
in
rorb
sbb
push
sahf
repz
out
fyl2xp1
sub
add
loope
pop
stos
adc
lret
or
mov
es
lcall
lea
stos
negl
dec
divl
xchg
push
pop
dec
stos
push
es
in
test
add
dec
repnz
imul
in
out
sub
mov
idivb
jp
movsl
mov
cmpsl
mov
xor
out
pop
das
xchg
mov
push
dec
stos
out
sti
out
imulb
js
clc
pop
mov
or
push
rep
out
imulb
jmp
and
in
lea
mov
push
movsl
or
jns
add
mov
mov
inc
stos
sub
cmpsb
imul
gs
cmc
bound
pop
out
enter
mov
clc
rcl
imul
jns
pop
xor
ss
adc
in
mov
insl
push
call
dec
jmp
cli
std
or
cmp
je
xchg
lret
add
xchg
mov
imul
jmp
jnp
jo
xor
lea
dec
jno
in
or
std
adc
fs
push
inc
and
pop
adc
jecxz
jo
nop
icebp
sub
addl
xchg
rol
and
push
xchg
mov
xor
out
mov
mov
xor
test
cli
pop
mov
xor
repz
pop
xlat
movsb
add
dec
cmp
fistps
fldz
leave
lret
dec
lock
pop
outsl
ret
sub
sti
inc
arpl
xor
or
pop
mov
mov
shlb
lea
test
sub
mov
inc
je
push
movsl
sub
enter
lds
xlat
sbb
imull
push
cmp
shlb
fbld
mov
lds
fidivl
and
jnp
rcll
fdivs
aad
movsl
adc
outsb
or
mov
lret
jae
shl
pushf
aam
cmp
pop
or
cld
inc
pusha
into
add
ficomps
push
loop
test
cmpsl
insl
sbb
insb
lea
imul
aas
stos
xlat
add
jnp
cmpsb
xchg
jne
dec
push
pop
mov
cmp
inc
addl
jmp
jg
and
add
mov
xor
data16
stos
jmp
xchg
es
sti
lea
inc
jp
push
inc
jp
outsb
mov
loop
or
xchg
pop
xor
sbbb
loop
mov
jno
jmp
shrl
pushf
jge
ret
push
mov
loope
push
call
mov
cmp
jnp
sbb
cmp
or
sub
jg
and
sub
push
xchg
shll
ret
sar
mov
pusha
push
scas
pop
gs
jmp
daa
gs
lods
cmp
cltd
lds
popa
aas
xchg
movsl
push
pusha
lea
das
jnp
daa
imul
inc
or
fbld
xchg
or
sbb
xchg
jb
sbb
int3
add
ljmp
pop
mov
pusha
mov
arpl
xchg
pop
ss
cld
dec
xchg
shll
out
and
xchg
aas
xchg
movsb
in
sub
adc
mov
cwtl
lock
movsb
repnz
mov
push
cmp
push
and
mov
rolb
sub
test
cmc
test
call
adc
aam
lea
and
or
stc
inc
mov
push
xchg
fbstp
xchg
hlt
inc
je
cmp
sbb
movsl
repz
shlb
int
pop
and
mov
pop
movb
pusha
cmp
sbb
push
dec
mov
in
fnsave
ja
xlat
lcall
aam
or
in
in
nop
fsubl
subl
push
mov
sbb
sbb
sbb
sbb
es
mov
jg
lret
cmp
pop
movsl
jmp
mov
fs
inc
pushf
into
sbb
bt
clc
sub
pushf
mov
movb
rep
call
out
add
mov
adc
rclb
inc
stos
push
dec
and
xor
gs
xchg
pop
lret
into
std
movsb
in
adc
pop
dec
mov
sbb
cwtl
aaa
jp
enter
iret
xchg
neg
pusha
nop
xorl
icebp
fldt
daa
stos
hlt
in
push
mov
dec
lods
std
jmp
clc
scas
pop
mov
jmp
out
cld
pop
jnp
cmp
push
cmp
imulb
dec
mov
and
cmp
icebp
mov
mov
repz
pop
lods
adc
mov
scas
adc
jae
ret
test
in
and
jmp
lods
lahf
jmp
pop
xchg
rcrl
xor
jbe
in
lock
sbb
arpl
int3
or
push
jb
out
aad
aad
ret
add
call
loop
adc
xor
pop
push
test
in
inc
cmp
jno
test
cmpsb
popf
std
aam
mov
cmp
ret
test
sub
mov
into
cmp
stc
shll
mov
adc
mov
std
dec
lods
rcll
loop
adc
sub
cmp
cmp
shll
lds
xor
or
test
enter
jl
int3
sbb
mov
cmp
jb
pop
xlat
loopne
pusha
subb
fnstenv
xchg
sti
in
jecxz
popf
call
mov
xchg
or
repz
adc
je
jmp
std
sbb
out
mov
mov
adc
fsubrs
js
loopne
push
dec
push
clc
push
mov
fs
movsb
pushf
pushf
jmp
mov
arpl
xchg
lret
daa
pop
daa
arpl
add
pop
movsl
pop
xor
mov
jns
and
mov
repnz
pop
cmp
js
push
push
test
adc
les
push
sub
mov
mov
jne
and
fdiv
cmpsb
jp
popf
push
inc
xor
stos
clc
add
mov
cmp
push
push
pop
xchg
enter
adc
dec
pop
fsubl
js
sub
pushf
test
test
repnz
call
cmp
movw
push
lea
ja
shr
sar
jmp
ror
setbe
xchg
shld
rol
rcl
daa
mov
sar
add
mov
mov
call
jge
sbb
mov
bound
lret
dec
push
ror
sub
and
jp
fistl
xorl
sub
sub
cmp
add
mov
adc
mov
pop
dec
icebp
jmp
enter
bound
int
mov
sahf
call
pop
xor
adc
pop
inc
int
dec
xchg
jmp
add
adc
clc
jmp
mov
in
push
test
dec
popf
vcomisd
movsl
push
adc
fisttpl
repz
cld
ds
ret
in
xchg
shlb
fsubrl
mov
mov
inc
subb
jmp
mov
mov
mov
outsl
xlat
and
movsl
lret
cltd
das
icebp
in
nop
mov
or
pop
in
nop
pop
sarb
nop
divb
jno
pop
push
mov
adc
jnp
xor
dec
mov
xor
mov
mov
jg
xorl
repnz
insl
lea
cs
push
push
cli
and
sbb
mov
aas
sub
lret
cwtl
cld
in
test
mov
jmp
pop
inc
pop
in
ds
mov
out
fnstenv
stos
stos
add
pop
inc
sbb
das
mov
lret
inc
mov
xchg
int3
test
jnp
rcll
xlat
aaa
lret
sbb
iret
jmp
bound
cmp
add
je
outsb
push
pushl
popl
movw
pushf
lea
jmp
shr
mov
neg
add
adc
neg
neg
bts
setno
xor
bswap
btr
sbb
bt
add
cmp
call
pushf
push
decl
pusha
lea
jne
call
bsf
stc
mov
inc
dec
and
mov
stc
sub
test
clc
shr
jmp
mov
pusha
call
rcr
rcr
shr
mov
push
jmp
shr
rcr
shl
mov
movzbl
call
pusha
call
pusha
jmp
cmp
xor
cmc
lea
ja
pusha
sub
pusha
pushf
lea
jle
pusha
mov
mov
pusha
pushf
lea
jmp
mov
push
lea
jmp
pushf
pushl
popl
push
pushf
lea
jmp
movl
jmp
add
movb
cmc
cmp
add
pushf
jmp
pushf
popl
jmp
mov
pushf
pushf
jmp
mov
pushf
push
lea
jmp
pushf
pushl
mov
jmp
mov
pushl
movw
mov
push
jmp
shr
neg
pushf
sub
mov
inc
add
pushf
pusha
mov
pushf
push
push
mov
mov
push
movw
mov
lea
jmp
add
mov
pushf
push
mov
call
pushl
popl
pushl
lea
jmp
mov
jmp
jmp
bt
or
inc
shld
add
clc
rol
shld
seto
mov
xor
sub
jg
push
lea
setnp
dec
sub
adc
adc
xor
call
neg
shr
mov
stc
cmp
test
sub
jge
push
mov
movb
mov
pushf
pushf
lea
jmp
cmp
movb
test
add
mov
pusha
movb
jmp
pushf
mov
pushf
mov
push
lea
jmp
cwtl
call
cmc
xor
clc
rcl
shld
stc
not
shld
push
bts
and
sbb
and
mov
pushf
bt
add
mov
mov
pushf
pushf
movb
lea
jmp
jmp
pushf
add
jmp
mov
pushf
push
movb
lea
jmp
clc
xchg
cmc
pusha
movw
call
stc
test
movb
sub
push
call
mov
movw
pushf
jmp
pushf
pushf
not
pusha
pushf
cmp
not
mov
pushf
sub
call
jmp
push
mov
pushl
lea
jmp
sub
call
and
btr
test
shrd
sub
mov
movzbl
mov
mov
pushf
bswap
pushf
popl
not
bswap
push
pusha
not
xchg
mov
movzbw
movsbw
lea
call
pushf
popl
pushl
pushl
popl
pushf
pushf
movw
lea
jmp
mov
jmp
mov
pusha
call
or
clc
adc
mov
cmc
test
pusha
sub
call
or
call
pusha
mov
mov
mov
movw
pushf
mov
push
mov
pusha
pushf
jmp
pusha
movb
call
jmp
stc
and
jmp
pushl
popl
movl
pusha
lea
jmp
call
clc
clc
jmp
clc
bt
bt
add
jnp
pushf
mov
mov
movb
push
lea
jmp
pusha
mov
movb
call
mov
add
ja
cmp
test
clc
add
push
movb
pushf
pushf
popl
call
rcl
jmp
jmp
cbtw
jo
movzww
pusha
call
jmp
mov
pushl
lea
jmp
pushf
inc
pusha
call
mov
pushl
lea
jmp
mov
pushf
mov
jmp
mov
pushf
mov
mov
call
movb
mov
pushf
lea
jmp
divl
jmp
pushl
pushf
popl
call
mov
bswap
pop
setp
lea
mov
xchg
pushf
lea
mov
lea
jmp
not
pushf
bt
sub
movb
clc
test
cmc
sub
jmp
pusha
pushf
popl
call
mov
mov
movw
lea
jmp
jmp
bswap
xadd
mov
test
stc
mov
jmp
mov
movw
lea
jmp
jmp
mov
rep
btc
cmc
mov
adc
jmp
bsr
mov
add
add
js
inc
ror
ror
call
push
push
pushl
popl
pushf
pushl
movw
lea
jmp
daa
aas
out
sarb
out
push
pop
out
sbb
stos
jnp
out
sub
stos
push
dec
out
inc
push
out
pushf
inc
out
jl
out
xchg
inc
out
push
dec
out
sbb
stos
dec
pop
out
xchg
inc
out
negl
stos
dec
ds
pushf
inc
out
popf
cmp
stos
dec
pop
out
xchg
pop
out
push
pop
out
adc
cmp
stos
dec
pop
out
xchg
dec
out
imul
stos
push
dec
out
xor
out
sub
stos
push
pop
out
xchg
pop
out
lock
out
rcll
sbb
out
fiaddl
stos
jl
out
lock
stos
scas
pop
out
negl
stos
push
dec
out
cmpsl
dec
out
sti
cmp
stos
sbb
out
rcll
stos
sarb
out
lock
stos
cmpsl
dec
out
jl
out
rcll
sub
stos
push
pop
out
fcomps
stos
xor
out
sti
cmp
stos
negl
stos
fcomps
stos
dec
dec
out
lock
stos
dec
pop
out
ds
out
sti
cmp
stos
fcomps
stos
pop
push
out
push
pop
out
ds
out
mov
stos
aas
pop
out
and
dec
out
dec
dec
out
pop
pop
out
mov
stos
push
pop
out
scas
pop
out
pop
pop
out
push
push
out
fcomps
stos
daa
aas
out
ds
out
xor
out
xor
out
fcomps
stos
mov
stos
push
ds
lock
stos
scas
pop
out
out
scas
pop
out
sti
cmp
stos
jl
out
jle
out
push
pop
out
fiaddl
stos
mov
stos
dec
dec
out
sti
cmp
stos
pop
pop
out
jnp
out
sarb
out
xchg
dec
out
scas
pop
out
pop
pop
out
scas
pop
out
cmpsl
dec
out
xor
out
rcll
stos
out
jnp
out
xor
out
daa
aas
out
popa
pop
out
xchg
dec
out
mov
stos
push
pop
out
sbb
out
popa
pop
out
incb
stos
rcll
stos
push
inc
out
push
dec
out
lock
out
cmp
stos
and
inc
out
and
push
out
xchg
pop
out
popf
cmp
stos
scas
pop
out
xchg
dec
out
jo
out
jo
out
scas
pop
out
scas
pop
out
fiaddl
stos
scas
pop
out
fcomps
stos
cmp
stos
dec
pop
out
aas
pop
out
cmpsl
dec
out
cmp
stos
negl
stos
fiaddl
stos
lock
stos
rcll
stos
jl
out
push
inc
out
jo
out
cmp
stos
adcb
and
pop
out
cmp
stos
push
dec
out
xchg
inc
out
cmp
stos
incb
stos
and
dec
out
cmp
stos
push
pop
out
and
inc
out
cmp
stos
sarb
out
and
inc
out
cmp
stos
adc
dec
out
sarb
out
cmp
stos
sbb
out
and
dec
out
cmp
stos
inc
push
out
and
dec
out
cmp
stos
rcll
stos
and
pop
out
cmp
stos
push
inc
out
and
push
out
cmp
stos
imul
stos
jl
out
cmp
stos
sti
cmp
stos
and
inc
out
cmp
stos
sbb
out
and
pop
out
cmp
stos
dec
ds
and
push
out
cmp
stos
xor
out
and
push
out
cmp
stos
push
dec
out
fcomps
stos
negl
stos
daa
aas
out
adc
pop
out
xor
out
scas
pop
out
lock
stos
push
pop
out
jo
out
fcomps
stos
dec
dec
out
rcll
scas
pop
out
aas
pop
out
out
push
pop
out
dec
pop
out
jl
out
push
pop
out
pop
push
out
adc
dec
out
sti
cmp
stos
sbb
stos
sarb
out
imul
stos
sub
stos
dec
ds
test
stos
adc
pop
out
jnp
out
sarb
out
popa
pop
out
push
dec
out
ds
out
jmp
mov
pusha
pushf
mov
pushf
lea
jmp
mov
mov
pushl
movw
lea
jmp
call
push
mov
call
cmc
add
mov
mov
pusha
push
pushf
lea
jmp
push
mov
lea
jp
push
pusha
pusha
mov
mov
movb
mov
call
movb
mov
jmp
mov
jmp
mov
push
jmp
mov
pushf
lea
jmp
add
cmp
mov
test
pusha
bt
bt
sub
lea
jno
pushf
movb
push
mov
pusha
mov
push
lea
jmp
jmp
push
lahf
mov
call
mov
mov
movb
mov
movb
pushl
ret
lea
lea
cmc
cmp
jp
pushf
movb
lea
ja
dec
bswap
mov
cwtl
setne
push
lea
aas
push
aas
bts
sub
btr
lea
dec
cmc
lea
neg
and
bswap
not
inc
sub
mov
call
cmc
mov
call
call
sub
clc
pushf
push
ror
test
bt
jmp
jmp
mov
mov
push
mov
push
mov
pushf
pushf
push
call
pushf
add
call
sar
shrd
neg
xorb
lea
bswap
jmp
jmp
clc
setae
mov
setns
stc
inc
mov
clc
add
pusha
pusha
call
bswap
mov
pusha
setge
xchg
mov
mov
cltd
mov
pop
pushl
mov
jmp
push
jmp
pushf
pushf
call
mov
push
mov
push
pushf
popl
pushf
pushl
popl
movb
push
push
lea
jmp
sar
rcr
inc
mov
sbb
clc
or
shl
mov
clc
jno
add
push
jmp
push
pushl
popl
mov
lea
jmp
push
jmp
lea
jno
pop
pusha
mov
push
lea
jmp
pushf
pusha
add
push
call
bt
ror
push
cmp
cmp
neg
jmp
mov
call
jmp
push
lea
jne
call
push
pushf
call
jmp
mov
call
call
call
pusha
jmp
mov
pushf
push
lea
jmp
call
pushl
popl
push
push
pushf
pushf
lea
jmp
sub
test
sub
cmp
lea
pop
movzbl
bts
inc
bt
pushf
mov
stc
pushf
call
mov
jmp
ror
push
mov
movsbw
btc
rcl
mov
bt
jmp
pushl
popl
pushf
movl
mov
pushf
lea
jmp
push
mov
call
lea
cpuid
stc
test
sub
test
clc
push
cmpl
pusha
movb
jmp
mov
pusha
push
call
jmp
movw
lea
jne
je
ror
mov
cmc
stc
cmc
bt
and
cmp
cmp
pusha
lea
jne
bsf
inc
cmp
xorb
pusha
movsbw
not
mov
pusha
pushf
pushf
lea
jmp
sub
test
call
xor
btr
shrd
mov
adc
stc
shl
add
push
pushf
push
mov
pushl
pusha
pushl
pushf
mov
push
pushl
lea
jmp
jmp
mov
pushf
pushf
mov
movb
lea
jmp
sub
bt
bt
movw
stc
and
lea
jl
pushf
pushf
pushf
popl
pushl
jmp
mov
pusha
pusha
lea
jmp
mov
movsbw
jmp
cmp
sub
mov
call
add
mov
mov
pushf
popl
call
bt
pushl
popf
pushf
pushl
movb
pushf
lea
jmp
jmp
lea
lea
sub
rcl
call
push
cmp
adc
sub
shr
bt
xor
movsbl
not
shl
pusha
call
jmp
pusha
pushf
movw
pushf
pushf
popl
movb
movw
pushl
movb
pushl
popl
movb
lea
jmp
add
jmp
jmp
mov
pushl
mov
pushf
push
movb
lea
jmp
mov
call
xor
pushf
push
jmp
mov
movl
mov
mov
mov
mov
mov
lea
jmp
cmc
bt
neg
call
jmp
mov
setl
mov
movb
pushl
ret
pushf
pusha
mov
pusha
mov
mov
pushl
jmp
pushl
call
pusha
mov
call
sub
pushf
mov
mov
push
push
movw
pushf
lea
jmp
add
jmp
xchg
aas
rcl
mov
neg
pushf
mov
pushf
sub
test
push
lea
js
shr
jmp
bt
bsr
movsbw
rdtsc
test
bt
pusha
sub
jmp
call
call
jmp
pushf
popl
pusha
jmp
jmp
pushl
popl
mov
lea
jmp
movb
mov
pushl
call
cbtw
push
cmc
call
pushf
push
mov
call
add
pusha
lea
jmp
movb
mov
call
add
mov
pusha
pushf
stc
sub
pushf
movw
mov
pushf
lea
jmp
pushl
pushl
jmp
mov
test
stc
sub
movb
mov
jmp
pushf
test
dec
das
mov
bsf
mov
pushl
movb
stc
cmc
not
cmc
call
pushl
pushf
mov
movb
pushf
pushf
mov
push
movb
mov
lea
jmp
mov
pushf
std
pushl
popf
mov
movl
mov
lea
jmp
movsbw
mov
movsbw
mov
mov
cwtl
mov
pusha
push
call
bt
xor
clc
pusha
cmp
sub
cmp
clc
neg
jmp
pushf
jmp
sub
and
test
sub
mov
stc
movb
cmc
sub
movw
mov
pushf
movw
push
mov
lea
jmp
movb
pushf
popl
pushf
lea
jg
popl
push
pushl
lea
jmp
neg
bt
or
movzbl
shr
shld
inc
rcl
sub
sets
lea
push
inc
shl
pushf
sub
call
pusha
movw
mov
mov
lea
jmp
mov
pushl
mov
pushf
mov
lea
jmp
ror
rcl
add
test
add
shl
mov
mov
add
call
btc
sar
shl
aaa
mov
rcr
bsf
mov
call
push
pusha
push
mov
pushl
push
mov
call
rcl
call
pushf
cwtl
test
cmp
pushf
call
jmp
mov
push
mov
lea
jmp
pushf
push
pushl
popl
pushf
lea
jmp
call
movl
push
pushf
call
jmp
cld
call
call
mov
pushf
call
jmp
bsr
cmc
sar
pusha
mov
test
and
pusha
cmp
movw
stc
cmp
pushl
lea
jne
call
mov
pushl
push
lea
jmp
pushf
pushf
jmp
mov
push
jmp
jmp
sub
setge
lea
rcl
sub
pop
lea
and
neg
neg
dec
movzbl
and
adc
sar
mov
cmp
jmp
push
pushl
popl
movb
movb
push
lea
jmp
push
mov
push
movw
pushf
lea
jmp
movzbl
ror
sub
bsf
bsf
stc
not
bt
shld
rcr
stc
sub
bts
shrd
movzbl
cmc
mov
test
call
lea
jae
pushf
lea
pushf
call
cmc
xchg
clc
call
mov
pusha
mov
push
mov
pushf
pushf
lea
jmp
jmp
push
pushf
mov
call
sub
call
pushl
jmp
pushf
mov
mov
movb
mov
pushf
pushf
pushf
lea
jmp
shl
push
mov
pushf
pushf
mov
call
mov
pushf
push
push
lea
jmp
mov
movw
pushf
mov
call
pusha
push
sub
call
movw
mov
bswap
std
mov
push
std
pushf
std
cld
pusha
rep
inc
shl
cmc
mov
not
lea
test
jmp
lea
jg
ror
cmp
jmp
mov
jmp
call
pushl
pushl
popl
pusha
pushl
lea
jmp
add
push
mov
mov
movb
pushf
pusha
lea
jmp
jmp
pushf
bt
add
stc
call
call
mov
pushf
jmp
call
bswap
dec
pushl
xor
push
bts
jmp
jmp
push
pusha
movw
mov
mov
mov
pushf
mov
movb
jmp
rol
bswap
shld
neg
shl
xor
movsbw
add
rcr
mov
pushl
add
movl
mov
push
pusha
pushf
lea
jmp
call
and
mov
pusha
add
push
pusha
mov
call
test
call
pusha
push
jmp
pushf
mov
push
movb
pusha
mov
pusha
movb
movw
call
cmp
sub
jmp
cwtl
movw
push
stc
add
ja
sub
call
and
setns
btc
inc
mov
rol
bswap
neg
add
mov
dec
clc
add
not
call
setne
jmp
lea
btc
xor
btr
rcr
sub
bsf
mov
shrd
shl
xor
rol
mov
jnp
and
rcr
bsf
add
sbb
not
setg
mov
shl
btc
xor
neg
sub
push
lea
inc
dec
sar
neg
xor
jmp
push
movb
push
pushl
not
cmc
bt
bt
stc
sub
jmp
mov
pushf
push
movw
mov
lea
jmp
pusha
pusha
mov
mov
mov
mov
lea
jmp
pushf
pushf
mov
pushf
push
mov
push
mov
push
pusha
pushf
mov
pushf
mov
pushf
mov
push
pushf
mov
pushf
lea
jmp
jmp
mov
jmp
not
mov
cmc
cmc
clc
add
pusha
call
ror
pusha
add
movw
movw
cmp
bt
add
clc
call
pushf
popl
pusha
jmp
pushf
pushf
mov
pushf
mov
pusha
movw
pushf
lea
jmp
movsbw
ror
bsr
shld
inc
neg
jmp
jmp
mov
seto
bswap
setb
dec
sar
bt
ror
shl
xor
sar
rcr
rcr
sub
jmp
bt
add
jmp
mov
call
push
push
call
xchg
call
pusha
bt
clc
call
call
pushf
sub
cmp
jmp
bt
shr
call
mov
pushf
mov
pushf
pushl
ret
push
mov
push
mov
push
pushl
mov
pushf
mov
mov
jmp
mov
call
cmp
cmc
pushl
popf
movb
mov
mov
movb
lea
jmp
mov
pushf
inc
mov
cmc
jmp
mov
pushf
movw
movw
lea
jmp
mov
movsbw
lea
xchg
movsbw
movzbl
jmp
rol
cmp
mov
pushf
cwtl
cwtl
not
mov
dec
lea
mov
bt
cld
xchg
or
mov
shrd
bsr
std
xor
mov
aaa
cmp
call
add
add
pushf
test
sub
clc
jmp
pusha
mov
pushl
mov
jmp
pushf
pusha
mov
push
jmp
jmp
sub
btr
neg
neg
mov
bt
cmp
shl
bt
pushf
shr
clc
clc
test
or
call
mov
mov
mov
jmp
not
stc
bt
mov
and
call
mov
pushf
lea
jmp
pusha
xor
jmp
mov
push
call
mov
pushf
mov
call
sub
mov
jmp
stc
mov
movb
sub
jmp
cmp
not
pushf
lea
clc
push
jmp
pushl
pushf
popl
pushf
movb
push
pushl
popl
pushf
lea
jmp
pushl
shrd
pusha
pushf
call
mov
mov
mov
lea
jmp
call
aam
mov
jmp
movb
pushf
pushf
popl
jmp
pusha
mov
movl
push
pushf
lea
jmp
neg
cmp
push
cmp
mov
pushf
pushf
call
mov
pushf
jmp
setge
not
mov
mov
call
jmp
call
pushf
popl
call
jmp
pusha
lea
ja
ror
xadd
lahf
mov
ror
lahf
lea
rcr
and
rol
jmp
push
cbtw
movb
call
push
sub
push
pushf
pushl
inc
clc
ror
call
jmp
inc
bt
cmc
rol
jmp
pushf
jmp
mov
mov
lea
jmp
pushf
jmp
push
pushf
push
mov
push
pusha
pushl
mov
pushl
ret
pushf
pusha
mov
pushf
pushf
popl
jmp
add
test
clc
call
push
pusha
pusha
mov
mov
pushf
push
jmp
mov
call
mov
push
pushf
popl
push
pusha
jmp
mov
pushf
movw
movl
mov
lea
jmp
cbtw
pusha
cmp
cwtl
cmc
call
btr
dec
or
cbtw
movzww
test
xor
cmp
clc
pusha
call
lea
pusha
call
pushf
pusha
call
mov
push
jmp
ror
bswap
xor
mov
movzbw
neg
movb
ror
ror
mov
xor
or
setb
add
dec
bts
mov
clc
mov
pusha
call
mov
movw
pushl
pushl
pushf
mov
push
pushf
lea
jmp
push
mov
push
call
cmc
clc
add
pushf
pusha
jmp
stc
cmp
push
stc
shr
mov
jmp
lea
jnp
decl
pushf
jmp
pusha
mov
pushl
call
aaa
movzww
pusha
clc
stc
test
xor
cmc
pushl
cmc
test
sub
call
pushf
mov
call
jo
pusha
test
add
movw
pushf
popl
jmp
push
call
pushf
mov
pusha
mov
pusha
pushf
mov
pushf
mov
call
pusha
call
push
mov
pusha
pushf
mov
push
push
lea
jmp
mov
not
mov
push
mov
clc
mov
call
setb
call
push
pushl
popl
movb
pushf
pusha
pushf
lea
jmp
push
xchg
lea
lea
lea
pusha
mov
movl
push
pushf
jmp
add
cmc
stc
call
xor
mov
sub
push
mov
mov
push
pushf
pushf
lea
jmp
mov
call
xor
jmp
pushf
pushl
popl
pushf
mov
lea
jmp
xchg
sar
adc
xchg
mov
bt
mov
jne
sub
jg
cmc
clc
shl
push
jmp
call
call
jmp
mov
pushf
lea
jmp
pushf
mov
push
pusha
mov
mov
lea
jmp
pushl
popl
movb
pushf
movb
mov
lea
jmp
pushl
popl
movb
mov
mov
mov
lea
jmp
call
sub
bts
clc
xor
mov
push
xor
push
pusha
jmp
pusha
jmp
pushf
popl
jmp
shl
pushf
pusha
call
pusha
mov
jmp
jmp
setb
notl
shl
aam
rcl
inc
mov
pusha
call
cmp
shl
shl
mov
bts
sar
bsr
add
dec
sub
xor
jmp
push
pusha
sub
bt
call
setae
push
mov
bt
add
pushf
dec
push
bt
pusha
rol
cmc
pushl
pushf
cmc
neg
clc
push
sub
test
jmp
pushf
popl
mov
pushl
popl
push
lea
jmp
shr
mov
neg
sbb
mov
clc
cmp
sub
jge
cmp
shr
call
rol
pushf
mov
dec
rol
rol
mov
movb
movl
cmc
add
pushf
call
mov
pushf
mov
jmp
pusha
pushf
popl
movsbw
lea
call
shl
shl
jmp
mov
mov
pusha
lea
jmp
push
cmc
lea
pushf
mov
cmp
xchg
mov
bt
test
xor
bt
push
test
sub
call
call
and
push
bsr
mov
mov
dec
jmp
sub
mov
shr
ror
mov
jmp
mov
mov
mov
lea
jmp
call
mov
pusha
jmp
neg
stc
lea
mov
call
pushf
mov
pushl
pushf
mov
push
pushf
pusha
pushl
lea
jmp
pushf
mov
pushf
lea
jmp
std
mov
pop
mov
movsbw
pushl
lea
lea
jmp
and
mov
dec
cmp
sar
mov
push
sub
cmp
shl
call
cmc
cmc
pushf
shl
push
pusha
call
call
sar
mov
pusha
cmp
pusha
stc
add
jmp
mov
jmp
lea
jne
pusha
push
mov
push
lea
jmp
lea
jne
clc
bt
cmp
clc
sub
pusha
push
pusha
pushf
xchg
call
jmp
mov
call
push
mov
call
xchg
bt
jmp
mov
pusha
push
mov
push
mov
jmp
mov
push
pushf
pushf
pushl
ret
mov
mov
movb
pushf
pushf
lea
jmp
setp
pushl
popf
call
pusha
pushf
popl
call
mov
push
pushf
pushl
lea
jmp
mov
jmp
lahf
xchg
not
jmp
cmp
pushl
pusha
call
push
mov
jmp
pushf
pusha
mov
call
xor
mov
cmp
cmp
pusha
add
pushf
pusha
pushf
movb
lea
jmp
mov
cwtl
bswap
jmp
mov
mov
movb
movl
mov
lea
jmp
call
lea
jge
not
pusha
lea
jbe
cmp
sub
cmp
stc
call
mov
call
mov
mov
pushf
sub
pushl
jmp
cmc
sub
js
cwtl
push
cmc
sub
movb
mov
movw
pushl
lea
jmp
pushl
popl
mov
pushf
movb
lea
jmp
bswap
cwtl
setge
mov
call
jmp
call
call
mov
pusha
pushf
popl
movb
push
call
call
call
mov
mov
jmp
mov
sar
adc
sub
bswap
add
btr
lea
sub
sbb
shrd
shld
movzbl
cmp
mov
cmc
add
bt
push
test
add
jmp
pushf
movw
mov
lea
je
call
dec
sar
mov
push
mov
neg
mov
push
cmc
clc
add
stc
shld
pushf
call
pusha
sub
jmp
call
pushf
call
lea
movzbw
repz
shrd
and
btc
push
bswap
inc
push
jmp
pushf
push
push
push
mov
pusha
mov
pushf
mov
movb
call
mov
movb
mov
jmp
mov
lea
jle
pushf
pushf
popl
call
movw
stc
add
cmc
clc
call
pushl
popl
pushf
lea
jmp
mov
call
push
push
pushl
mov
pushf
pushf
lea
jmp
sub
cwtl
dec
aas
lea
bt
jmp
