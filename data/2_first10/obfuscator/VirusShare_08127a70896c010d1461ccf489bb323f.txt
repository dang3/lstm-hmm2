push
or
add
add
add
addb
add
add
push
xchg
add
add
add
enter
add
add
add
add
xchg
add
in
nop
add
cld
nop
add
or
xchg
add
sub
xchg
add
loopne
add
pushf
nop
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
jo
out
std
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
inc
add
nop
inc
add
add
pop
add
and
in
xchg
add
add
outsl
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
mov
clc
mov
std
outsl
scas
xchg
mov
mov
sar
or
dec
shlb
jno
lods
pop
fimuls
and
sub
jl
mov
call
shl
mov
mov
rorl
sub
sub
adc
xor
xor
mov
dec
inc
hlt
and
sbb
push
adc
xchg
cltd
mov
mov
rcrl
cmpsl
inc
mov
popa
das
aad
or
lock
and
inc
xor
sub
push
nop
js
and
js
or
xchg
or
iret
xchg
out
jmp
divl
les
arpl
jno
aas
mov
lds
xchg
lcall
pop
pop
lahf
xchg
fstpt
xchg
int3
pop
or
mov
inc
out
outsb
sbb
out
jp
aam
add
ret
lea
lods
lock
mov
jle
mov
out
stc
gs
xchg
stos
mov
insb
xor
ja
jl
stos
inc
adc
lock
sub
cmp
insb
aaa
dec
sbb
clc
add
mov
sarb
jnp
jno
lcall
and
cmpb
loope
popf
cmp
dec
lret
sti
push
test
inc
add
sbb
adc
pop
push
cmc
movsb
addr16
jg
bound
nop
into
sbb
sti
aam
shll
bswap
lea
loope
cmp
fwait
jae
dec
sub
or
mov
mov
aaa
lahf
xchg
subl
mov
adc
arpl
sub
je
fstl
push
sbb
lods
jo
or
jo
imul
sbbl
inc
mov
push
jmp
in
mov
xor
adc
or
push
cmc
jmp
cmovns
aam
ljmp
xchg
inc
orb
les
push
cltd
cmpsb
call
jge
loop
nop
repz
inc
pop
hlt
mulb
lods
in
jg
sbb
sub
inc
pusha
xlat
sub
fiaddl
adc
bound
das
popa
ret
out
mov
inc
movsb
xor
xlat
pop
andl
xchg
mov
push
shl
mov
outsb
in
dec
sub
imul
push
sarl
xor
mov
jp
jo
fs
adc
cs
cmpsb
xchg
and
mov
in
out
iret
pop
dec
mov
dec
or
mov
fcomip
jne
push
insl
push
inc
test
inc
push
or
pop
out
cli
mov
sti
push
aas
sahf
xor
lods
xor
jbe
pop
jle
bnd
mov
cli
in
mov
mov
repz
cmpsb
xor
aam
hlt
mov
fcoml
sti
mov
mull
add
aam
loopne
sbb
dec
mov
in
scas
sbb
out
enter
and
jnp
push
loopne
inc
xchg
mov
mov
dec
outsb
icebp
cmc
lret
and
mov
adc
enter
push
imul
movsb
xor
shrb
xchg
fstps
inc
lret
mov
in
loope
in
inc
enter
add
je
mov
jle
mov
test
ret
pop
or
in
mov
enter
in
icebp
sbb
rcrl
mov
push
push
aaa
add
mov
pushl
push
lahf
test
lea
fwait
iret
sub
call
sahf
in
pop
cld
xchg
mov
xchg
cmp
dec
orl
je
movb
dec
jle
mov
mov
inc
mov
mov
dec
sub
pusha
test
pop
mov
sarl
jge
dec
cs
pop
out
orb
push
cs
mov
fdivs
addb
cmp
mov
pop
jle
sub
mov
mov
pop
sbb
repnz
hlt
es
mov
mov
std
xor
dec
xchg
cltd
faddp
and
mov
cmpsb
pusha
stos
sub
stc
popf
cmpb
loop
ja
repnz
enter
push
pop
add
pop
imul
ja
mov
mov
stc
outsl
mov
adc
push
or
pop
push
push
cmpsb
daa
imul
stos
repnz
mov
push
orl
rclb
in
mov
sbb
mov
mov
cmp
push
loope
xchg
mov
in
mov
fnsetpm(287
pop
dec
aas
add
cli
inc
mov
xchg
fisubl
mov
or
push
lds
out
mov
mov
mov
xchg
aad
fbld
or
test
mov
pop
or
push
xchg
jp
lods
jp
push
inc
leave
push
or
fidivrs
add
fidivrs
pop
sub
fsub
xchg
fisubrs
sbb
js
cmp
inc
cli
sar
mov
mov
adc
xchg
mov
in
mov
sbb
and
pop
int
xchg
sub
test
sub
cmp
imull
mov
cmp
imul
fdivs
xlat
sbb
or
mov
sbb
mov
enter
cld
xchg
and
inc
inc
jbe
mov
xor
insl
int3
add
jmp
jnp
and
mov
push
dec
shlb
mov
pop
iret
aad
ror
sti
mov
cmp
cwtl
sub
lahf
push
push
pop
loope
in
aad
aas
mov
adc
push
dec
jge
sbb
test
sbb
fdivrs
pop
fidivrs
std
jns
lods
xchg
mov
cltd
repnz
sti
adc
call
addr16
push
addr16
arpl
dec
cmpsb
dec
add
mov
dec
xchg
out
movsb
mov
popa
xchg
mov
sbb
ja
mov
cmc
lret
dec
insb
gs
sti
cmp
dec
mov
pop
ds
shlb
dec
or
mov
scas
xchg
mov
jg
aaa
shl
scas
sub
loop
mov
adc
and
ret
movsb
dec
shlb
dec
inc
xor
push
mov
iret
enter
aaa
movsb
xor
and
dec
jnp
test
sbb
negb
jecxz
jle
pop
push
xchg
movsl
add
dec
pop
push
add
js
out
adc
lcall
dec
icebp
dec
sbb
test
cmp
jg
jne
xchg
js
int
sarb
xchg
dec
mov
dec
cmp
sbb
popf
ret
pop
jne
jne
dec
inc
mov
or
fwait
pop
arpl
roll
adc
pop
sbb
jecxz
ret
bound
jns
pop
mov
sub
add
jge
or
sahf
jae
ss
and
das
enter
int3
lret
sarl
lret
arpl
pop
lahf
std
fmulp
imul
out
jle
cmp
mov
popl
cmc
inc
sarb
mov
and
rclb
dec
cmp
loopne
repz
mov
adc
clc
add
subps
test
cmp
and
dec
adc
inc
mov
in
outsb
lret
pusha
dec
lods
cmp
push
mov
mov
loop
inc
push
adc
add
cmpsb
jae
push
mov
xchg
jae
sbb
idivb
mov
mov
mov
sbb
out
fs
jge
pop
loop
mov
repnz
dec
jl
cmp
mov
xor
push
sbb
in
mov
lods
bound
sti
in
lahf
and
pop
lahf
cmp
push
in
jecxz
les
stos
mov
jge
sub
cmp
in
movsb
or
filds
insb
mov
adc
push
outsb
or
repnz
mov
ds
pusha
add
daa
jnp
test
mov
or
pop
in
movsb
int3
mov
leave
loope
rcrl
mov
dec
mov
lcall
mov
rorb
fcomip
repz
mov
insb
in
dec
dec
and
call
aaa
adc
sub
enter
int3
adc
adc
add
mov
pop
subb
imul
aad
ljmp
xlat
sbb
fisubl
dec
xorl
imul
ljmp
xlat
mov
sbb
mov
mov
out
dec
sahf
mov
adc
insb
push
test
inc
mov
or
jp
mov
sub
or
sub
sub
push
int3
cli
mov
push
and
ss
xchg
inc
movsb
sub
push
pop
test
cmp
adc
incb
ss
repnz
cmpsb
or
or
aad
lods
outsl
rclb
adc
lret
sbb
mov
push
loope
sbb
imul
pop
push
sub
test
sub
sub
je
orl
or
sti
mov
stos
xor
js
pop
scas
stos
xor
jecxz
inc
das
fld
push
test
push
fucomi
xchg
jg
adc
cmp
cmpsl
adc
out
bound
mov
sub
mov
push
inc
mov
mov
arpl
out
in
lcall
dec
push
pop
iret
cmp
inc
rep
jle
mov
cwtl
test
aad
jmp
push
and
clc
jbe
dec
js
arpl
jmp
dec
fdiv
xor
lret
xchg
mov
cmp
and
xchg
test
movsb
and
pop
pop
cmpsb
into
jb,pt
ljmp
xchg
xchg
aad
sbb
xor
push
mov
push
ficoms
mov
add
sbb
sbb
aaa
adc
xchg
insl
fistl
sbb
mov
push
outsb
dec
outsb
cmp
loopne
jl
jmp
or
insb
loop
in
inc
jg
addr16
mov
add
into
and
jmp
pop
ss
mov
jge,pn
pusha
pushf
mov
and
add
enter
sbb
bound
insb
jmp
pop
mov
and
mov
movsb
sar
js
insl
jae
lock
sub
mov
fwait
incl
cmp
lcall
adc
and
xchg
daa
pop
sub
push
mov
das
add
fimull
mov
roll
scas
push
mov
sub
lock
pop
adc
fstpt
gs
aad
mov
xor
nop
lds
mov
inc
dec
or
gs
mov
shlb
fsubrs
push
lahf
cmp
dec
das
inc
xchg
bound
adc
push
aas
out
and
or
lret
mov
sbb
fildl
dec
cmp
push
cmp
pop
mov
xchg
mov
arpl
cmp
testb
mov
mov
xchg
subb
pushl
add
inc
xchg
ret
inc
xor
sar
mov
jb
sbb
jg
jo
adc
push
cmpsl
cmc
xchg
inc
shrb
pop
repz
mov
aad
add
push
sbb
sbb
dec
mov
and
js
ss
pop
cmp
imul
das
jg
xchg
fstps
das
es
inc
or
addl
xrelease
xchg
add
adc
adc
cmp
hlt
fcomip
ficomps
stc
pop
lock
add
mov
mov
mov
insl
and
ja
aaa
cmp
imul
jmp
jae
cld
rclb
aad
push
fbstp
mov
jle
push
cmpsl
jbe
repnz
enter
jge
sbb
push
xchg
pop
enter
jl
inc
pop
fistpl
mov
jecxz
int3
pop
int
jb
cmc
lods
pop
jl
shrb
inc
stc
sbb
push
xchg
out
test
and
push
sbb
in
jg
ljmp
loope
xor
sub
lahf
or
test
mov
push
xor
cltd
sarb
fucom
jp
pop
js
jno
mov
cmpsl
lds
subb
std
loop
sahf
push
mov
cmpsb
rcll
ss
lds
and
dec
or
nop
cmp
and
test
xor
pop
aam
mov
imul
mov
mov
ljmp
fadds
hlt
rorb
lea
movsb
xchg
pusha
inc
mov
loopne
mov
adc
push
xorl
push
daa
push
sbb
scas
stos
mov
xchg
or
test
ficompl
push
cmp
jo
outsl
cmpsb
add
mov
xor
push
inc
jno
push
scas
ss
daa
push
ljmp
ret
mov
xchg
xchg
ja
jg
push
cmpb
cwtl
adc
fwait
das
mov
push
cmpsl
mov
mov
cmp
loop
mov
sarb
aas
sub
jg
and
mov
pop
inc
adc
and
out
add
fwait
leave
aas
int3
push
cmc
adc
sbb
test
add
negb
pusha
inc
int
scas
gs
sarl
lcall
addb
sub
call
mov
out
pop
shr
lret
inc
jo
inc
pop
pushf
mov
mov
dec
imul
jbe
dec
mov
push
lds
dec
repz
sbb
jne
jae
std
xor
add
sbb
out
scas
je
fdivrl
xchg
aaa
xor
sbb
inc
ja
pop
cwtl
hlt
subb
jb
mov
gs
aam
dec
ret
adc
ret
pop
rorb
fstl
mov
jns
mov
inc
repz
push
loop
xchg
xchg
sub
adc
xlat
cmp
scas
jnp
push
cmpl
test
mov
loopne
or
inc
xor
lret
sbb
enter
sbb
inc
push
push
nop
stc
ss
mov
pop
dec
cmp
pop
fiaddl
ret
adc
repz
mov
ret
pop
call
in
xchg
cmpsb
mov
add
adc
xchg
fisubl
and
scas
inc
nop
repz
notb
and
sub
outsb
ja
popf
shl
inc
in
jmp
dec
loop
fnstsw
call
inc
sarl
ljmp
add
loop
in
imul
cld
daa
imul
scas
mov
add
mov
mov
jle
and
loop
mov
mov
mov
mov
repnz
or
push
sub
cmc
sbb
loopne
or
push
xchg
xchg
subl
ja
sub
jb
sub
fisubrl
mov
and
jb
sbb
xchg
out
jae
jmp
jbe
loope
repz
call
mov
hlt
mov
icebp
pop
xor
test
push
or
and
cmp
push
push
jmp
dec
jnp
mov
sub
and
movsb
out
mov
cmp
add
inc
fwait
sbb
mov
lret
jle
and
insb
sbb
out
ret
sub
jmp
lds
inc
mov
add
add
inc
inc
jne
sbb
mov
pop
push
fimuls
push
and
outsl
jg
out
push
push
out
loop
pop
out
std
popa
das
test
push
push
mov
mov
inc
dec
mov
xchg
cmpsb
aad
and
inc
adc
and
xor
js
cli
out
addb
enter
sti
dec
lea
mov
jge
aam
push
push
ror
xchg
jecxz
add
mov
clc
loope
dec
ds
pop
sahf
cmpsb
push
pop
xchg
cli
inc
out
add
movb
pop
cmp
mov
sti
push
or
je
adc
add
fstps
lcall
inc
sbb
sarl
cmp
or
fdivl
adc
popa
push
bound
sbb
and
dec
xor
mov
push
and
push
xor
add
push
cmp
imul
inc
out
mov
cmp
pop
push
push
data16
mov
lea
jge
adc
repz
out
or
jbe
pusha
scas
sahf
mov
loopne
mov
fsubrs
mov
push
pop
mov
sti
loop,pn
jmp
cwtl
jmp
mov
and
pop
fidivl
fxch
scas
and
push
roll
add
mov
xor
xor
jns
jl
inc
cwtl
mov
xor
push
fnsave
or
jmp
sbb
bound
add
mov
mov
jne
xchg
in
sub
pop
std
stos
and
arpl
mov
jb
insb
dec
pop
scas
push
insb
fld
in
fstpl
sbb
loope
gs
lock
icebp
int3
or
fdivl
es
adc
mov
rorl
sbb
inc
jne
lock
arpl
xchg
cmc
fwait
andl
imul
rolb
add
repz
imul
es
mov
jp
push
das
and
gs
push
sahf
jno
lcall
loopne
fnsave
and
enter
lods
hlt
adc
scas
jno
rorb
inc
or
rcl
ja
rorb
cli
inc
out
cmp
mov
or
sub
sub
sub
imul
imul
xchg
add
in
movzbl
jmp
movsl
jbe
ja
or
mov
push
xchg
ret
jns
dec
sahf
in
ljmp
dec
iret
ror
push
mov
or
sbb
mov
or
adc
cmp
test
dec
daa
inc
test
les
pop
test
adc
mov
ret
add
pusha
rcll
testl
mov
jae
add
xlat
sahf
inc
rorl
sub
push
je
xchg
daa
push
sbb
out
out
cmp
rclb
lods
push
push
iret
fcmove
scas
sbb
push
insl
dec
and
mov
cmp
clc
xor
lea
orl
in
jmp
sbbb
aad
mov
cmp
adc
pop
dec
out
jnp
and
cmp
clc
xor
inc
and
fistl
out
or
xchg
rclb
add
movsb
pop
fwait
out
jg
add
cmpsl
daa
mov
ret
mov
fldt
scas
add
hlt
sarl
xor
cmp
add
mov
test
mov
repz
pop
jns
xchg
cltd
mov
adc
xchg
xchg
push
mov
dec
mov
and
movsl
sub
lret
dec
mov
lret
cs
jge
push
repz
xor
pop
sbb
mov
cmp
jecxz
fimull
jo
cmpsl
daa
or
xor
push
lock
lret
data16
popf
outsl
inc
xchg
int
mov
jns
bound
fidivrs
push
adc
iret
xchg
fcomi
rclb
lods
mov
sbbb
test
add
arpl
or
dec
jge
pop
jecxz
pop
pop
cltd
imul
push
lods
notb
outsb
xor
icebp
and
lods
mov
jnp
cmc
int3
mov
sahf
inc
sbb
add
popf
repz
andb
xchg
cltd
adc
or
jb
cmp
arpl
push
dec
cltd
jge
ret
dec
xchg
or
ss
pop
mov
out
and
sbb
notb
dec
mov
insl
imul
xchg
mov
fxtract
inc
ljmp
xor
mov
fdivs
mov
xorb
in
mov
pop
cli
rclb
adc
mov
push
sbb
mov
cwtl
jnp
xor
xchg
ss
cmp
sub
push
loope
into
mov
popa
dec
cmp
cmp
xchg
loope
add
push
mov
dec
lock
out
dec
or
or
dec
mov
loopne
lret
fsubrl
int
sub
push
jno
stc
mov
xchg
or
mov
xchg
imul
inc
lods
ret
jb
add
out
jnp
mov
jl
incb
popa
xchg
mov
sbb
daa
out
das
inc
mov
sub
push
iret
add
call
mov
mov
insb
aaa
icebp
push
mov
mov
loopne
jg
mov
pop
push
fimuls
popf
gs
and
push
mov
jg
mov
icebp
fcom
xchg
or
testb
cmp
scas
pop
aaa
inc
loop
outsl
inc
in
stos
mov
mov
mov
lcall
jmp
adc
xor
push
int3
aaa
xchg
out
jno
mov
ss
sahf
cmpl
movsl
pop
adc
add
data16
lea
mov
insl
xor
leave
scas
popa
push
cwtl
push
xchg
mov
mov
mov
mov
inc
jb
nop
xor
jp
faddl
movsb
loopne
fs
cltd
and
ljmp
test
mov
fcoms
add
cmpl
jae
jp,pt
shll
fdiv
cli
lods
mov
mov
push
inc
cmp
fisttpll
mov
fistl
mov
sub
addr16
ljmp
and
nop
je
jmp
roll
mov
or
std
and
cmp
aad
lahf
jl
jnp
sub
enter
lahf
pop
mov
out
insb
clc
add
leave
cmc
cmp
xchg
sti
jbe
fildll
jbe
xchg
pop
ja
mov
repz
idiv
subps
adc
pop
sarb
xor
mov
mov
add
mov
or
cmc
xchg
sub
xor
pusha
popl
hlt
lcall
leave
jnp
addr16
stos
lea
xor
loop
dec
pop
mov
push
mov
hlt
rorl
cmp
adc
movsl
add
or
icebp
mov
fistps
jo
lret
cmpsl
pop
bnd
mov
aaa
in
lcall
cwtl
mov
fs
dec
push
clc
testb
orb
push
push
inc
ja
sub
add
lods
jo
inc
scas
pop
xchg
pusha
test
in
rol
mov
or
and
sub
sbb
mov
test
ljmp
jo
dec
xchg
cmp
mov
dec
push
dec
inc
sub
popa
xchg
test
into
cmp
rcrl
xchg
sub
nop
ret
jno
sub
ret
inc
popf
inc
sub
add
mov
or
loop
mov
mov
mov
and
pop
mov
mov
fnsave
or
cmp
lea
popf
sbb
jecxz
dec
mov
cltd
lods
lds
push
pop
mov
push
xor
cmp
and
xor
cs
lods
mov
testb
rolb
mov
hlt
rcll
xor
in
ret
mov
lods
sbb
adc
jns
push
push
sahf
pusha
add
sti
out
or
dec
int3
or
stos
inc
dec
rep
arpl
mov
fcoms
scas
add
in
test
add
push
jmp
sarb
mov
lock
and
les
add
jl
mov
sbb
pop
cmp
pop
cwtl
pusha
mov
leave
jecxz
mov
push
aad
ljmp
sbbl
or
adc
vpsrlq
pushf
sbb
pop
vpunpckhdq
jae
inc
jbe
sub
dec
sti
in
sbb
repnz
lea
out
daa
sbb
sar
dec
mov
sbb
pushf
or
lods
mov
xchg
shlb
ljmp
jo
das
lea
lock
xor
sbb
aas
jecxz
cmp
xorb
push
push
adc
adc
cmp
pop
out
dec
xchg
test
lds
pushf
aas
icebp
loope
jno
popa
fidivs
pmulhuw
xor
test
loop
push
xor
test
push
lods
sub
cld
push
lock
in
or
lods
call
and
cmp
dec
mov
mov
jo
xor
out
aad
cli
push
pushw
and
js
xor
insl
repz
jl
pop
xchg
sbb
invd
repz
and
or
scas
and
mov
mov
add
ds
dec
xchg
dec
cmp
hlt
leave
in
pop
in
inc
insb
fsubrs
stc
pop
aam
fldl
push
mov
rolb
out
mov
cmp
pop
xchg
or
mov
mov
or
mov
outsl
cmp
js
pop
pushf
xor
jl
bswap
xor
or
das
mov
repnz
arpl
and
mov
in
stos
and
cwtl
cmp
cmp
lods
push
mov
or
push
hlt
mov
pushl
adc
stos
or
sbb
or
out
push
insb
pushf
fstp
push
or
inc
push
scas
jmp
dec
xchg
push
loop
jne
movb
movsl
push
clc
scas
pop
or
into
adcb
jl
push
mov
lds
fmulp
xchg
pop
pop
rcrl
js
in
lret
shll
pop
mov
je
sbb
push
adc
pusha
xchg
stc
stc
shll
xor
mov
sub
cltd
mov
lret
jge
cmc
shr
sub
adc
outsl
pop
scas
outsl
mov
test
push
push
mov
jp
or
aaa
fadds
lea
aaa
or
push
gs
xchg
pop
xor
push
add
test
mov
jmp
mov
adc
push
push
scas
jmp
mov
pushf
mov
mov
pop
dec
lods
aas
mov
xchg
push
movsb
scas
xchg
lret
jae
xor
leave
cmp
xchg
mov
cli
xchg
jge
mov
fs
in
loop
pusha
push
dec
and
jns
mov
stc
jbe
xchg
sbb
mov
stc
add
ret
push
cmp
xlat
mov
ret
or
es
pusha
fimuls
divb
cmp
inc
jae
div
enter
loope
mov
vsqrtsd
hlt
pop
fs
icebp
sub
pop
rolb
mov
cmc
mov
aad
cld
mov
jno
and
mov
daa
mov
xchg
movsl
mov
ljmp
sub
cld
daa
sub
adc
mov
hlt
pop
std
sbb
add
pop
push
mov
jle
jno
ljmp
sbbl
sarl
push
call
subb
fsubp
outsb
jl
les
scas
sbb
push
mov
jo
cmc
stos
xor
sub
or
xor
xchg
mov
icebp
icebp
sub
ss
xor
sbb
mov
and
jg
xor
push
test
cmpl
test
clc
cmp
add
movsl
xchg
pop
es
pop
leave
pop
pop
and
or
adc
leave
dec
lea
pop
iret
add
loope
mov
sub
xchg
cmp
movl
lods
cmc
xchg
stc
pop
mov
sub
push
iret
mov
popa
jle
inc
jg
in
dec
in
add
aam
pop
mov
sub
dec
mov
xor
jbe
iret
mov
ja
leave
and
icebp
push
jne
cmp
jbe
mov
inc
fnstsw
xchg
push
sbb
ds
mov
in
cmp
xor
add
cwtl
adcl
int
test
psrad
sbb
mov
dec
shll
jmp
or
and
shll
outsb
add
das
repnz
sub
jmp
jbe
sbb
lods
inc
and
adc
mov
pop
jl
jecxz
ret
popa
inc
dec
fidivrl
or
ret
or
pop
bound
sbb
shlb
shlb
fbld
push
xchg
outsb
aam
iret
jne
aam
mov
lret
add
sub
add
cmp
dec
jno
jae
pop
sbb
jno,pn
add
repnz
xor
adc
cmpsl
leave
push
mov
sahf
out
in
cmc
popa
adc
or
add
rorl
pop
es
mov
pop
xlat
mov
pop
pop
dec
or
jne
xor
into
mov
add
in
fbld
dec
jp
push
mov
sbb
lret
mov
sbb
cli
into
mov
adc
dec
movsl
das
xchg
and
imul
sbb
sub
xchg
mov
jne
dec
cmpsl
pop
popa
es
dec
cld
sub
cmc
ret
dec
xchg
repnz
imulb
daa
in
mov
mov
push
imul
shll
xchg
dec
bound
stc
clc
lcall
leave
sbb
cmpsb
out
insl
mov
les
js
inc
sbb
lock
in
shrl
out
scas
pop
cmpsl
jne
dec
push
aad
dec
sub
mov
cwtl
ljmp
push
mov
inc
or
add
sti
push
push
stos
aad
sahf
dec
mov
push
loop
in
pop
outsl
pop
filds
sub
mov
xlat
jae
sbb
leave
and
imul
out
adc
insb
or
lcall
push
ret
test
gs
cmp
pop
add
jns
mov
enter
lret
adc
jmp
stc
lods
cmc
lahf
jp
and
in
mov
dec
out
jp
std
and
sbb
cwtl
cltd
jg
xchg
mov
shll
mov
ficompl
mov
cli
mov
mov
xor
mov
jecxz
inc
in
fisubrl
fisubs
mov
sbb
cld
mov
js
sub
fdivl
jnp
loop
popf
inc
mov
inc
pop
fs
fcomps
dec
or
repnz
fidivrs
inc
dec
mov
or
or
out
bound
inc
cltd
jbe
movsl
dec
jecxz
scas
sbb
xchg
cltd
lods
cltd
enter
adc
push
dec
bound
dec
mov
rolb
in
mov
lods
fcmovu
jge
popf
jne
pop
scas
nop
inc
sbb
xchg
daa
push
sub
mov
adc
add
in
loopne
mov
add
mov
mov
int
dec
cmp
repnz
aam
pop
lock
jno
lock
xchg
out
sbb
push
cmp
aas
jmp
pop
and
scas
icebp
or
push
mov
adc
mov
cmp
inc
repz
dec
mov
jecxz
add
jl
pop
cmpsb
hlt
pop
mov
and
dec
xor
xchg
lds
xchg
jns
out
sub
int3
out
push
mov
or
jns
fldt
mov
mov
mov
dec
mov
jl
enter
jp
mov
outsb
daa
xchg
xor
rolb
jno
test
and
jmp
shll
mov
add
fs
mov
cld
ret
pop
pop
fidivrs
sbb
cmp
hlt
or
add
add
mov
pop
ja
cs
out
dec
jbe
cmpsl
jo
or
add
fiadds
mov
rcl
fs
int3
dec
or
outsb
xchg
loopne
leave
je
inc
inc
and
subl
mov
sbb
ljmp
xor
mov
idivb
sbb
pop
cmpsl
ss
mov
sahf
inc
sbb
lahf
push
adc
xor
test
ja
cmp
push
fisubrs
ljmp
jl
pusha
cmc
std
add
test
stos
imul
int3
mov
test
lds
cmpl
push
jge
lret
dec
imul
cmpb
shll
in
inc
adc
and
push
mov
mov
pushf
adc
lods
cmp
and
rcll
je
dec
mov
std
dec
jns
pop
jecxz
push
cltd
mov
ret
aaa
and
mull
cld
push
fimuls
movsl
fidivs
popf
dec
sub
pushfw
jl
in
jecxz
addr16
fldenv
adcl
and
adc
push
jno
scas
mov
mov
pop
sub
out
jg
aam
sub
mov
cli
adc
fs
int
popa
jnp
leave
mov
jo
outsb
cs
outsl
scas
movsb
cmp
in
ds
insl
push
mov
cmp
mov
mov
jnp
test
dec
mov
and
rclb
in
movl
push
lds
push
out
or
fs
cmp
inc
dec
int3
scas
cmp
pop
lcall
int
fnsave
inc
ja
dec
pop
hlt
jge
mov
rcr
push
mov
pop
popf
in
dec
out
and
iret
add
fdivr
dec
jg
mov
mov
lods
sahf
push
xchg
sbb
lcall
pop
mov
out
cs
stos
adc
push
sbb
mov
sbb
js
or
lds
in
cmpsb
cs
pushf
sbb
xchg
stc
or
mov
inc
mov
and
dec
push
arpl
outsb
dec
aad
xchg
adc
xor
cmp
inc
mov
pop
pop
mov
fbld
imul
jo
pusha
dec
jle
and
mov
rclb
data16
pop
in
mov
push
xlat
add
pushf
mov
adc
sbb
stos
ret
cmp
ja
cmp
daa
dec
pop
jb
in
mov
cwtl
icebp
pop
stc
cmp
mov
cli
iret
mov
lea
stos
mov
sub
inc
pop
ds
andb
sbb
or
and
pop
dec
push
loope
mov
outsl
jno
push
sub
or
mov
add
pop
and
adc
insl
leave
repnz
mov
inc
in
adc
dec
and
lds
mov
or
jno
lds
mov
adc
loope
scas
mov
add
int3
je
lret
and
dec
jle
mov
les
and
push
sbb
fs
push
mov
test
jmp
pop
lea
popf
je
out
xchg
xor
fwait
xchg
push
shll
pop
je
adc
push
pop
mov
je
lods
cmp
jno
daa
ret
and
aam
jae
je
mov
addr16
out
aas
ret
subl
or
sub
or
out
sbb
and
and
imul
arpl
xchg
push
addr16
mov
les
adc
add
arpl
shrl
xor
push
inc
cmp
jbe
mov
sub
mov
jmp
jne
insb
shll
hlt
push
sbb
jbe
ret
fdivs
lea
push
lret
or
sarl
jmp
jmp
aam
inc
adc
cltd
and
jne
sbb
cwtl
test
outsl
pop
push
nop
loop
scas
js
and
or
jae
pushl
sbb
divb
daa
scas
cwtl
in
or
cmpsb
or
adc
fsubl
lahf
sahf
rol
jp
mov
call
cmp
out
pop
mov
xor
mov
ret
fmul
movsb
cmp
mov
outsl
ret
out
cli
scas
adc
bswap
pop
pusha
add
pslld
dec
xchg
xchg
ret
aad
push
mov
lret
or
cmpsl
sub
dec
xchg
ja
xor
fcoms
fldl
out
push
cli
out
popa
andb
shl
xchg
mov
lods
nop
xchg
add
gs
shlb
xor
gs
je
mov
sbb
push
adc
mov
sbb
lcall
jg
es
flds
jns
aaa
xlat
prefetch
cmp
inc
pop
and
pop
xchg
pop
enter
xorl
ficoms
es
and
fs
scas
in
and
and
adc
stos
sub
lret
repnz
sub
cmpsl
test
pop
inc
xchg
insb
mov
push
mov
ds
rcll
es
mov
lea
mov
scas
mov
push
xchg
scas
xor
mov
jne
lock
sahf
jo
xchg
pop
mov
and
cmpsb
xchg
cmpb
jno
popf
cs
in
mov
lea
fimuls
jo
fdivrl
sbb
hlt
fstps
ljmp
mov
and
js
jle
inc
lods
inc
fbstp
das
lds
loop
push
cld
adc
sbb
mov
stos
cld
scas
aad
add
push
add
push
sbb
mov
notb
shlb
mov
sub
daa
adc
rcll
into
cltd
xor
test
xchg
pop
mov
jmp
jecxz
hlt
mov
mov
xorb
test
sti
xor
sahf
mov
xchg
adc
jmp
lds
dec
mov
push
pop
fnsave
or
divl
inc
arpl
xchg
loop
mov
rorl
dec
add
jo
das
sub
cmp
mov
adc
idivl
xlat
inc
sub
test
xlat
xor
sub
or
cmpsb
ss
pop
xchg
mov
test
inc
mov
lds
sbb
cmp
cmp
xor
inc
pop
aaa
adc
sub
xchg
or
or
xlat
inc
sbb
call
push
mov
dec
cmp
sub
dec
add
out
imul
icebp
mov
pushfw
ss
xor
leave
xchg
lea
cmp
cmpsb
adc
cs
sbb
xorb
aam
iret
fwait
inc
popa
mov
or
xchg
inc
movsb
sbb
nop
push
jb
in
lret
lds
mov
fidivrs
push
mov
adc
ret
add
push
mov
cmpsb
fisttpll
xor
mov
push
adc
aam
lret
cmpsl
mov
ja
cmc
push
adc
lods
pop
out
scas
cmp
jnp
adc
repz
push
in
enter
mov
pop
jno
mov
dec
in
ror
fidivs
inc
enter
stos
rorl
pusha
call
and
fstps
out
icebp
dec
mov
xor
and
punpckhwd
fimull
xchg
jmp
sub
faddl
jne
mov
xor
xorl
das
std
xor
push
repz
push
sbbb
pop
outsl
es
bound
and
adc
pop
mov
sbb
mov
inc
jl
mov
xchg
out
das
xchg
lea
mov
iret
roll
scas
pop
xchg
xor
jb
mov
and
ds
nop
mov
ss
pop
aam
jb
and
sarb
aad
popa
dec
inc
sub
stos
or
mov
jo
cld
inc
bound
sbb
adc
sbb
and
aaa
ficoml
push
cmp
stc
push
fs
add
fistps
imul
or
call
xor
popf
sbbl
or
repz
cwtl
fsubrl
sub
mov
pop
addr16
mov
in
mov
mov
imul
dec
rcll
adc
sahf
pop
push
insb
mov
mov
insl
push
xchg
cmp
fisttpll
repnz
shl
addl
inc
xchg
roll
push
dec
adc
testb
cs
mov
popf
mov
jnp
rcrb
lea
push
scas
daa
dec
push
lods
shlb
sub
cld
mov
sahf
adc
dec
dec
mov
lock
mov
lcall
js
insb
cmpb
insb
stc
sbbb
dec
inc
add
pop
mov
inc
scas
or
dec
pop
js
sbb
ret
mov
inc
in
dec
in
mov
jno
inc
out
fs
jmp
pop
fs
inc
cmp
in
lcall
cs
sbb
push
in
sahf
inc
mov
insl
jl
or
sbb
mov
inc
and
mov
scas
imul
sub
sub
or
mov
inc
and
jmp
fcoms
pop
cmp
xor
sub
in
imul
lock
fmull
stos
arpl
mov
xor
push
mov
inc
and
jno
and
jmp
or
idivb
xchg
sub
jge
jns
jae
mov
dec
aam
cmp
cs
shll
aad
xchg
push
jl
mov
xchg
pop
and
xchg
push
push
cmp
push
ds
and
jle
mov
cmp
shlb
hlt
pusha
mov
dec
movsb
nop
push
xchg
mov
sbbl
and
aaa
jb
daa
lods
loope
xchg
nop
and
jmp
bnd
mov
xchg
push
mov
push
sub
iret
fisttps
aad
pop
cwtl
or
es
cmc
fcomps
ret
lods
xor
inc
stc
push
call
xor
repz
rclb
jecxz
cmpsl
hlt
pop
imul
sbb
jmp
lret
gs
or
ljmp
ficoms
dec
mov
ss
jo
adc
xor
pop
mov
iret
xchg
jl
mov
and
or
adc
add
dec
ja
jge
and
fsubs
ss
or
lds
fdivs
mov
pop
and
pop
stos
stos
rcl
cmp
mov
inc
xchg
xor
lret
push
inc
add
es
subl
or
push
aad
inc
mov
lods
aam
gs
adc
lret
lret
iret
in
add
jecxz,pn
or
cmp
mulb
dec
loop
loop
push
nop
or
or
cmp
dec
mov
pop
daa
mov
lahf
dec
ss
stos
mov
cmpl
pop
add
inc
js
cs
pop
repnz
add
xchg
sahf
ja
movsb
loope
out
dec
fistpl
xor
sub
pop
push
shr
sbb
aas
int3
gs
and
add
jb
mov
push
movsb
test
loop
pop
push
rol
ja
jmp
scas
pop
in
mov
push
xchg
cmp
xchg
mov
pop
sub
cmpsl
mov
jo
fstpt
pop
mov
adc
outsl
iret
rorb
fs
sbb
xchg
fimull
or
pop
bsf
loop
jns
mov
sbb
jno
sub
mov
fiaddl
mov
jo
xor
sub
ret
sti
and
dec
lcall
notb
int
dec
sbb
or
jbe
mov
sub
aas
mov
dec
rcr
xor
cmpsb
in
cmp
adc
add
and
fdivs
inc
mov
gs
fcoms
lock
roll
in
popf
call
repz
or
scas
mov
jecxz
mov
mov
insl
sub
aad
les
inc
ja
xchg
push
popa
pop
bound
lcall
stc
xor
iret
add
fs
stc
lods
pop
lret
mov
out
scas
pop
pushf
xchg
repnz
outsb
pop
lds
movsb
and
orl
outsb
aas
mov
dec
outsb
inc
sub
addr16
mov
inc
ds
cwtl
xchg
inc
jl
test
xchg
imul
mov
inc
loop
cmpsb
enter
out
dec
and
mov
lcall
and
int
ret
push
add
push
ss
mov
int3
cmp
mov
xchg
xor
aad
mov
adc
out
add
push
adc
loop
cld
add
xchg
inc
fisttpl
aaa
mov
xor
jae
mov
lds
jg
sbb
ror
sbb
mov
pop
push
sbb
movsl
adc
pop
mov
sub
rdtsc
outsl
es
mov
imul
or
mov
stos
lock
push
addr16
nop
fists
add
test
les
pusha
jnp
or
or
cmpsl
loop
sbb
gs
insl
jne
in
incl
inc
cmp
loop
cmp
popf
sub
pop
testl
pop
pop
add
mov
icebp
fnstsw
popf
or
pop
dec
add
sub
imul
pop
hlt
icebp
cltd
lock
xchg
les
loope
sub
shll
fimull
sarb
dec
shlb
xchg
lcall
sbb
cld
sub
xchg
pop
cli
cld
sbb
loopne
int
push
push
shlb
push
xor
insl
mov
in
jp
mov
mov
xchg
leave
testl
jle
lcall
pop
scas
jae
lcall
shrb
lods
xor
inc
faddp
cmp
gs
adc
pushf
mov
pop
mov
icebp
push
or
mov
xor
push
cltd
mov
ror
push
leave
adc
ficoms
xlat
xchg
pop
push
jge
xor
sti
adc
sub
rdmsr
iret
into
jbe
lock
cmp
dec
add
mov
das
push
dec
inc
pushf
inc
and
loopne
test
in
sti
hlt
adc
xchg
push
mov
sub
and
jo
push
jl
js
or
je
pop
push
movsl
ja
ds
fldenv
jnp
icebp
out
je
testl
popf
inc
jne
pop
in
sbb
jb
ljmp
lods
xor
outsb
cs
jae
loop
cld
fdivs
inc
and
inc
cmp
repnz
push
xchg
mov
pop
add
dec
subb
pusha
fisttps
popa
mov
pop
loop
imul
push
mov
clc
lcall
adc
fxch
pop
cmpsl
nop
fsubr
adc
xchg
fiadds
inc
enter
pop
cmp
push
scas
adc
sbb
pusha
dec
out
cmpsl
mov
arpl
loopne
lock
lock
and
inc
out
movsl
nop
jl
bound
sub
mov
movsl
test
inc
fs
jbe
push
jmp
mov
jo
cld
mov
mov
dec
nop
jge
jp
sub
cmp
push
xchg
cmp
and
out
add
sub
inc
inc
add
data16
or
int
sub
stos
mov
inc
push
push
in
jae
pop
sub
mov
aam
add
punpckhwd
imul
ja
addb
js
jno
push
and
into
xchg
mov
dec
and
push
cs
lret
sub
out
and
dec
aad
out
mov
pushf
jno
mov
das
es
jg
fadd
dec
jbe
sub
enter
dec
xor
ret
or
ret
test
sub
add
jg
lods
insb
pop
nop
ljmp
push
sarb
fcoms
mov
repnz
filds
fnstsw
xor
xor
or
lods
xchg
dec
enter
dec
loop
inc
xor
aam
rol
std
outsb
callw
or
mov
pop
out
dec
shrb
addr16
or
jge
pop
mov
sub
mov
into
jns
push
jb
fnsave
add
push
clc
sub
or
pop
mov
je
jmp
test
loopne
mov
std
sub
mov
inc
inc
in
push
xchg
jmp
add
imul
mov
jge
mov
pop
pop
jmp
sub
outsl
sub
sbb
mov
add
mov
cmovle
testb
and
movsl
shl
cmpsb
insl
adc
mov
imul
cmp
test
sbb
das
mov
insl
mov
inc
dec
in
adcb
push
sbb
jg
push
bound
inc
ljmp
push
adc
xor
sbb
fsubrp
loope
dec
cld
dec
adc
inc
push
mov
add
dec
setl
jne
push
jnp
mov
pop
sbb
sbb
pop
pop
fsubrl
fisttpl
mov
mov
es
lods
or
testb
lods
das
push
subl
out
jmp
frstor
xorl
or
aad
jg
mov
ss
xor
add
pop
mov
std
or
outsb
and
jo
sbb
xlat
popf
adc
fisubrl
pop
jno
stos
dec
bound
test
sarb
mov
mov
lahf
mov
xchg
jge
xchg
int
ret
xor
daa
in
sbb
outsl
sub
inc
add
in
int3
fldenv
xchg
dec
cmp
scas
stos
pop
insl
inc
jecxz
cmp
shll
stos
jmp
inc
aad
and
repz
fs
sub
jge
mov
inc
push
test
cmpsb
mov
popa
push
cltd
xchg
xchg
mov
xchg
test
lock
pusha
mov
jecxz
push
push
popa
movsb
or
add
cmpsb
ss
xor
out
or
push
addr16
loope
xchg
in
inc
rcrb
aas
les
popf
mov
adc
sub
aad
mov
or
xor
sub
int3
cld
mov
daa
sbb
sarl
add
into
adc
dec
data16
xlat
cmp
pop
idivb
adc
nop
add
mov
dec
imul
add
xor
js
iret
jmp
or
sub
insb
shrb
sbb
mov
xlat
and
rorl
dec
cli
and
repnz
arpl
es
or
into
pop
xlat
mov
notb
sahf
addr16
xor
test
jo
cmpsl
push
jnp
jecxz
test
adc
cmp
adc
xchg
add
mov
idivb
add
movsl
sbb
and
ljmp
jo
mov
pop
adcb
lar
or
jns
mov
ja
cwtl
ds
dec
cmc
adc
loopne
xchg
pop
lcall
inc
rcl
push
xchg
addr16
jae
cmp
cmc
sbb
push
cmp
xchg
sbb
push
pop
jg
fisubl
push
and
and
lahf
pusha
rclb
scas
cmp
lahf
xor
push
cli
jb
scas
aam
mull
sar
xor
mov
test
inc
cs
aas
out
js
xchg
orl
jl
mov
js
inc
es
dec
and
notb
sub
fs
pop
icebp
loope
xchg
stos
ja
sub
jb
mov
sbb
movsl
mov
pop
popw
loop
mov
xchg
cmp
xchg
mov
into
pop
pop
stos
xor
jb
pop
test
mov
push
bound
mov
sti
bound
andb
or
mov
in
and
and
xchg
and
mov
pop
aad
dec
mov
mov
rcl
mov
aam
adc
sti
sub
in
add
xchg
movsl
xor
xor
in
stos
mov
lcall
push
adc
insb
out
mov
nop
mov
js
popa
mov
scas
fbstp
lods
xchg
mov
xchg
fs
imul
fimull
repz
dec
mov
mov
jl
add
js
pop
nop
fnstenv
xor
shll
scas
adcl
add
je
hlt
jmp
std
mov
xchg
imul
insl
mov
pop
adc
mov
mov
movsb
loopne
mov
xlat
pop
outsb
call
adc
lods
add
push
or
clc
rcr
mov
iret
mov
fs
cmpl
jns
ds
sbb
mov
leave
cld
rcrl
mov
mov
hlt
push
inc
lret
loop
cmpsl
lcall
popf
xchg
lcall
xchg
sbb
test
out
loope
jmp
orb
gs
sbb
xchg
mov
and
shll
fdivs
push
jl
or
adc
nop
or
test
xor
inc
lret
mov
fwait
rcll
or
adc
cli
test
je
xchg
cmpsl
movsb
out
fs
push
pop
orb
into
and
fwait
ds
push
or
test
mov
xor
fisubl
rcrl
imul
inc
jb
cltd
xchg
xlat
lret
add
fsts
nop
popf
ret
aaa
es
enter
mov
sub
icebp
lret
arpl
fwait
mov
mov
in
das
data16
fldenv
in
and
mov
repz
enter
mov
popf
jns
clc
lods
test
xor
add
loope
jecxz
dec
xlat
sub
inc
push
dec
scas
mov
cmp
sub
imul
popf
adc
aas
inc
or
push
inc
mov
push
adc
or
cmpsb
jb
rcrb
push
inc
daa
scas
pop
cmp
mov
xchg
push
sbb
cld
lret
adc
dec
sub
sbb
mov
aam
mov
sahf
in
fisttpll
cld
adc
lahf
inc
ret
aas
dec
push
jne
popa
fisttpl
mov
in
xchg
mov
xchg
cmc
stos
push
rcll
sub
popf
xchg
push
fimull
pusha
stc
sbb
cmc
inc
popa
cmpl
stc
xchg
or
mov
push
arpl
test
es
add
ja
xchg
jns
xchg
fldcw
cmc
stos
ret
xor
mov
shlb
dec
repnz
bnd
jmp
ss
pop
xor
adc
inc
cmp
jge
ds
ljmp
js
xchg
popf
insl
adc
pop
sbb
dec
jle
mov
lea
dec
out
sbb
xchg
sub
push
cmp
test
sub
cmp
shll
or
fdivrl
jne
pop
push
xchg
or
mov
pop
ret
arpl
pushf
jle
testl
pop
cltd
pop
dec
idivl
sbb
pop
cmp
mov
xor
fs
mov
or
mov
int
ret
xchg
push
dec
arpl
shlb
inc
popa
ds
clc
ret
icebp
mov
and
jmp
xchg
xchg
add
xor
cmp
imull
jecxz
sub
mov
xchg
sub
add
inc
loop
jge
gs
lods
orb
push
loop
add
mov
std
jmp
loopne
lahf
lods
rdtsc
xor
pop
cwtl
jae
arpl
inc
jbe
push
xchg
repnz
pushf
cmp
or
mov
push
inc
test
xor
pop
pop
and
cmp
mov
test
push
xor
pop
lret
scas
adc
mov
xor
filds
ljmp
adc
sahf
pop
ret
sti
je
inc
mov
fmuls
imul
iret
cmpsl
cmovl
popa
dec
lods
add
mov
mov
add
ja
sub
and
stos
addr16
ror
lock
sbb
add
aas
jo
bound
adc
lods
pop
mov
or
popf
dec
xchg
pop
ljmp
pop
fdivrs
enter
inc
adc
ret
xchg
inc
test
stos
pop
jp
pushf
jle
mov
stos
gs
jle
leave
sub
in
arpl
je
and
aam
mov
and
cmp
xchg
add
shlb
jnp
push
jmp
lock
rclb
ljmp
stos
je,pt
dec
out
sarb
add
gs
sbb
inc
ret
mov
lods
mov
mov
jle
stc
sbb
loope
js
sub
icebp
in
scas
sbb
pop
icebp
nop
xor
jp
xchg
jl
cmp
loope
pop
in
int3
cmp
clc
pop
xlat
lahf
mov
jg
cmp
xchg
ret
jle
in
pop
inc
jo
cmp
jge
cmp
loop
cmpsl
mov
sti
xor
xor
push
dec
int3
ljmp
jg
fs
popf
leave
mov
sbbl
pop
mov
mov
das
add
cmp
fcmovne
add
ds
out
imul
scas
jp
cmpsb
repz
dec
jno
sbb
ficoml
push
sbb
mov
call
sbb
data16
mov
stos
sbb
adc
arpl
hlt
jecxz
xchg
add
add
xchg
daa
js
and
movsl
filds
sub
insl
ljmp
popf
adc
adcl
jns
mov
inc
cmp
pop
lds
cld
xor
cmp
pop
sbbl
arpl
mov
lret
call
pushf
sbb
aas
mov
cmp
fwait
mov
insb
xchg
data16
adc
mov
push
push
out
sub
mov
xchg
or
mov
jb
gs
out
adc
js
push
shlb
mov
testl
test
mov
test
sbb
stos
xchg
popf
inc
jmp
and
mov
inc
or
cmpsb
adc
mov
aad
or
imul
fdiv
adc
pushf
xorl
sub
sub
loopne
stos
or
fs
mov
inc
mov
pop
arpl
fsubs
imul
xchg
adc
test
fnsave
jecxz
push
es
mov
jg
ljmp
pop
sub
sub
mov
mov
pop
clc
adc
lods
cld
inc
in
ret
mov
jne
mov
or
leave
and
push
inc
jle
aaa
xorb
loop
mov
insb
lret
cs
pop
adc
inc
ss
out
push
jb
cmc
mov
mov
out
cld
imul
in
mov
fwait
lods
inc
sbb
gs
mov
jne
cwtl
xor
sahf
or
xchg
cmpsl
dec
jne
js
and
movsl
xor
sahf
mov
imul
pop
xchg
ja
cmp
mov
fisubrl
ljmp
jmp
pop
push
inc
je
pop
out
push
rcll
mov
mov
mov
mov
int3
pop
sar
ljmp
stos
add
and
and
and
mov
int3
sbb
fmuls
enter
and
test
lret
les
mov
mov
mov
addr16
and
inc
mov
dec
inc
loop
and
push
cmp
clc
push
pushf
cmp
or
out
cmp
popa
outsb
jl
daa
mov
mov
lods
xchg
inc
adc
adc
cld
int3
inc
cwtl
les
or
cmp
dec
sbb
repz
repz
mov
stos
dec
cwtl
mov
test
jo
xor
pop
pop
shlb
adc
pop
xchg
fdiv
mov
inc
dec
xor
lods
imul
mov
lcall
test
pop
movsb
fnstsw
mov
lahf
stc
pop
inc
out
in
mov
or
push
pop
push
mov
sub
dec
dec
add
xor
cs
push
leave
sbb
daa
mov
mov
fldt
mov
mov
sbb
dec
mov
sbb
cwtl
out
sbb
push
imul
inc
jnp
lret
adc
mov
or
jp
cld
daa
xlat
aad
stc
into
cwtl
add
btcl
push
inc
adc
test
adc
xor
fiaddl
mov
mov
adc
repnz
fldenv
mov
sbb
je
mov
add
sbb
push
and
cmp
xlat
cmp
jl
dec
push
call
ret
int3
pop
add
push
addr16
xchg
inc
inc
imul
jae
cmpsl
sbb
push
ret
inc
std
insl
mov
aad
mov
dec
and
pusha
int
mov
lock
pop
loopne
inc
jnp
bound
jmp
or
push
mov
pushf
cs
flds
out
pusha
call
push
mov
mov
orb
jo
decb
jle
mov
push
adc
mov
fwait
dec
adc
shr
cwtl
nop
inc
jb
push
adc
cmp
loope
ret
fisttps
jge
jge
lock
imul
pushf
lret
inc
shlb
mov
inc
stos
and
inc
lods
adc
push
pop
mov
dec
cmp
fisubl
imul
dec
into
bound
mov
fcoms
or
nop
sbb
push
add
jmp
jl
aad
inc
adc
sub
popa
ret
loopne
pcmpeqw
sub
xchg
cmp
jb
inc
xchg
sub
jg
cmc
add
jge
sbb
push
fnclex
in
leave
jle
lahf
hlt
lret
sub
pop
jmp
or
xor
lods
sbb
les
jb
pushf
mov
dec
test
mov
mov
jne
sbb
sbb
mov
in
and
add
les
push
jge
in
lcall
xor
or
stos
notl
insl
call
pop
cld
cmp
or
mov
lret
sbb
ret
mov
inc
jnp
leave
test
aaa
cmp
sbb
or
testb
jb
stos
mov
stc
jg
xchg
xor
dec
out
pop
incl
cmp
in
shrl
mov
xchg
and
incb
xchg
xor
adc
dec
jmp
call
nop
dec
dec
cmpsb
popa
fwait
movb
dec
mov
jns
mov
mov
jmp
inc
pop
cmc
mov
divb
test
repz
addr16
dec
scas
pop
sbb
inc
mov
inc
push
cli
sub
and
mov
add
pop
or
adc
mov
or
mov
jle
add
hlt
cmpb
inc
xchg
inc
sub
add
out
fdivl
adc
inc
push
fbstp
jge
test
jns
ds
adc
fisttps
mov
loop
push
jns
idiv
fs
mov
test
pop
add
jbe
push
jae
mov
cmc
lret
daa
div
bound
and
fnstcw
pop
out
jmp
aad
aas
jbe
inc
test
lret
cmpsb
or
xchg
jo
lret
test
dec
loopne
repnz
lods
jbe
xchg
cld
lods
outsl
mov
xchg
sbb
push
lods
mov
sti
dec
jle
js
push
mov
jle
pop
sbb
xchg
push
lock
arpl
and
test
sub
fwait
cmp
sub
jg
sbb
inc
cmp
jb
in
fstpl
repnz
pop
and
sti
cmp
pop
mov
repz
sub
push
sbb
mov
std
cmpsl
pop
mov
mov
push
pop
jp
dec
sbb
push
push
into
fbstp
lods
pusha
adc
mov
mov
pop
out
sbb
enter
add
stos
in
xchg
xlat
cmpsl
cmovae
add
movsl
mov
or
xchg
dec
mov
adc
jo
cmc
ret
jp
adc
lret
shl
or
push
fwait
inc
cld
mov
cmp
aad
aad
in
mov
data16
notl
mov
xchg
mov
lds
mov
ret
jle
push
inc
lret
dec
or
daa
hlt
adc
gs
fcmovu
dec
out
jns
sbb
xchg
lea
negl
jnp
or
addr16
dec
loope
jo
je
lahf
add
lea
enter
adc
and
mov
pop
and
jnp
sub
pop
repnz
mov
jns
pop
xor
push
cmp
xchg
popa
divps
xor
shrl
mov
popf
arpl
mov
adc
jb
pop
push
dec
in
out
jb
fisubrl
iret
mov
mov
int3
cmp
push
xchg
dec
pop
call
jg
or
fidivl
in
mov
push
repz
inc
hlt
in
outsl
incl
sbb
xlat
js
inc
mulb
mov
add
xchg
cmpsb
xchg
imul
repz
add
ret
push
sub
jl
test
lea
xchg
adc
mov
push
ljmp
pop
xchg
fisubrs
in
jo
pop
call
pop
icebp
mov
std
das
enter
mov
movsl
lret
das
sbb
cld
jo
mov
xor
xor
je
movsb
push
clc
jmp
sbb
aad
iret
inc
cwtl
data16
sub
jne
mov
xor
sbb
sub
aad
aad
mov
push
scas
push
push
mov
push
xchg
js
cmp
ds
inc
out
mov
xchg
mov
aad
mov
aad
test
pushf
iret
cmp
sub
aaa
push
in
pop
xchg
and
aad
mov
ljmp
inc
fcmovnbe
jno
adcb
nop
pop
adc
pop
mov
fisubs
and
jle
hlt
popf
ja
clc
push
mov
stos
cltd
mov
and
sbb
clc
jae
fwait
ret
mov
les
test
rorl
mov
push
faddl
xchg
sahf
dec
jp
sub
adc
enter
mov
and
iret
aas
cmp
xchg
imul
sbb
icebp
pusha
mov
jge
sub
xchg
ljmp
xor
pop
jmp
cmp
mov
push
and
sub
stos
pop
movsb
mov
in
mov
or
inc
sbb
inc
jbe
xchg
mov
add
daa
sub
xor
push
dec
mov
mov
iret
insl
pop
aas
push
cs
mov
pop
sub
push
xor
lea
imull
int
jne
add
mov
mov
xor
cmp
stos
mov
or
mov
out
lea
add
shl
icebp
roll
mov
imul
mov
dec
mov
mov
jl
xchg
pop
pop
cwtl
stc
ficomps
jbe
mov
xchg
xor
lock
push
lret
js
pop
insl
in
cli
sub
or
cs
mov
mov
xchg
xchg
shl
in
dec
sub
sub
cmp
inc
scas
mov
sub
adc
aas
popa
test
and
add
cs
iret
incb
jne
ss
mov
push
add
push
sbb
add
push
lret
pop
movb
lret
mov
jp
mov
mov
cmp
xor
cmpsb
in
sub
xor
pop
cmp
lods
sub
in
mov
repnz
icebp
rolb
pop
mov
out
xchg
iret
xor
cmp
add
pusha
mov
jns
jl
add
push
ja
and
xor
jp
mov
and
xor
dec
mov
mov
cltd
dec
in
andl
addr16
aad
or
dec
insb
dec
mov
mov
xchg
in
mov
stos
add
xchg
xchg
pop
or
jl
dec
daa
mov
cs
sbb
and
es
in
adc
xor
mov
pop
jecxz
out
mov
dec
or
push
cmovp
or
dec
fnstsw
jb
xorb
pop
pop
push
mov
push
xchg
adcb
pop
in
jge
mov
jg
add
sub
add
xlat
sarb
xchg
xchg
outsl
inc
movsl
call
jp
in
inc
loop
mov
add
dec
mov
mov
test
out
adc
test
or
aad
mov
pop
out
adc
inc
stos
xchg
and
and
push
ljmp
jp
xor
ds
arpl
inc
lds
lock
mov
inc
inc
jno
and
mov
mov
pop
int
and
and
jle
adc
scas
mov
or
fildll
pop
hlt
xor
fs
push
js
fnstsw
pop
aaa
mov
push
aam
out
xchg
popf
repz
pop
fcmove
insb
jae
dec
xlat
test
sub
mov
jge
push
fmuls
inc
movsl
xchg
mov
pop
push
xchg
sub
repz
push
mov
jns
scas
pop
pushf
jns
mov
orl
test
mov
pop
ja
aaa
xchg
into
fmul
xchg
mov
cmc
loope
mov
idivl
mov
lods
push
gs
inc
ljmp
sbb
or
cmc
and
xchg
push
cmc
pop
insb
mov
push
jg
outsb
jae
adcb
jne
xor
loop
jns
hlt
push
cmp
mov
pusha
lret
push
inc
loop
fisttpll
or
push
fbld
cmp
or
daa
sarb
pop
ljmp
insb
xchg
sub
fwait
aaa
daa
mov
cwtl
xlat
aaa
arpl
inc
fs
je,pn
push
stos
add
pop
push
popf
icebp
jo
ljmp
lret
pop
out
repz
test
lock
je
pop
lcall
add
dec
cmp
and
add
cs
mov
push
push
jno
cld
int
fucomip
sbb
cwtl
js
mov
sub
scas
stos
xchg
pop
movsb
sub
add
jne
lahf
arpl
outsb
cmp
pushf
inc
and
mov
sbbl
cli
imul
xchg
aad
mov
lret
push
hlt
call
mov
cltd
adc
in
arpl
xor
dec
sbb
or
nop
mov
jecxz
adc
xor
das
mov
jns
shrb
out
scas
inc
push
je
lds
jo
in
insl
addr16
lds
dec
ja
cmp
xchg
testl
insl
in
add
ss
push
fdivp
push
mov
jmp
push
test
pop
mov
xchg
push
adc
pop
popa
sarb
mov
or
adc
and
test
idivb
cmpsb
testb
or
mov
and
outsl
add
movsl
xchg
test
lcall
fucomi
data16
pop
mov
test
das
or
and
pop
adc
lods
data16
dec
lock
loope
mov
mov
lods
cld
inc
gs
notb
insb
lock
out
sub
arpl
jae
inc
scas
jns
push
js
jp
push
lea
icebp
mov
pop
into
repnz
adc
push
cmc
fadds
xor
inc
mov
or
jne
lcall
add
mov
shrb
xor
jmp
mov
sub
fs
pop
xorl
repnz
mov
push
enter
push
mov
int3
and
sbb
xor
dec
adc
add
fsubrl
test
push
sub
xor
xor
or
cmp
addr16
int3
jns
mov
arpl
lock
mov
call
js
push
into
jo
insl
in
jg
test
push
or
mov
jnp
cli
int
sbb
xor
loop
xorl
xchg
iret
lods
dec
imul
imul
icebp
mov
sti
in
dec
test
cmp
pusha
mov
add
ss
je
dec
inc
lahf
cmp
jg
lds
cld
cmp
inc
sbb
or
push
xchg
and
jne
push
mov
int3
cmp
daa
clc
test
inc
ret
movsl
pop
fwait
aad
cwtl
popa
pusha
les
sub
cmc
inc
imul
mov
mov
pop
cmpsb
xlat
std
sbb
inc
xchg
jno
or
fadd
negb
jecxz
arpl
inc
icebp
jne
push
testl
movsb
iret
mov
movb
pop
add
jp
xor
push
mov
flds
into
push
sub
mov
ret
in
enter
mov
or
loop
adcb
std
sbb
xlat
mov
mov
and
fs
adc
jge
and
movsb
cwtl
adc
xor
xchg
lods
inc
and
movsb
sbb
std
call
in
cld
out
sbb
xchg
sub
fists
xchg
mov
rcll
mov
ds
addr16
lret
pop
sbb
imul
pop
jno
mov
popf
dec
pusha
xchg
pop
or
jg
mov
loopne
outsl
pop
ret
pop
sub
inc
jp
push
push
fstpl
in
sub
outsl
jno
push
es
inc
inc
movsl
in
add
imul
sbb
inc
push
jb
iret
pop
push
mov
dec
mov
imul
push
das
jle
dec
mov
mov
sub
subl
adc
fmull
xchg
xchg
leave
dec
leave
rorl
pop
push
ss
push
mov
add
fildl
dec
cmpsl
ljmp
iret
xchg
jb
out
and
cmp
movsb
mov
movsl
xchg
std
cmp
aas
push
ret
out
fistl
sbb
ja
jmp
mov
out
mov
pop
mov
call
bnd
insb
push
mov
adc
sub
jb
and
pop
loopne
stc
rorl
push
xlat
in
into
mov
in
or
fmul
and
mov
in
movsb
lret
sub
lcall
loopne
pop
mov
adcb
jns
pop
out
repz
jg
outsb
inc
push
mov
movsl
xchg
es
xor
push
xor
je
or
mov
cmp
shl
xor
shll
jp
xchg
rorl
lock
mov
pop
mov
mov
push
repz
pushf
mov
and
or
jae
rcrl
jmp
das
dec
sub
add
inc
jl
pop
mov
ljmp
div
inc
sbb
fs
sarb
mov
testb
push
mov
loop
dec
push
popf
adc
sahf
dec
mov
stc
sub
jbe
pushf
push
imul
scas
testl
cmp
cmp
stc
mov
sarl
ret
xchg
les
add
jnp
out
subb
fbld
jg
mov
mov
mov
mov
ret
inc
cmpsl
push
out
mov
pop
les
inc
adc
cmp
lcall
bound
mov
insl
lea
out
aam
mov
in
icebp
jne
push
adc
push
clc
fwait
dec
ljmp
push
lds
xlat
add
pushf
das
mov
hlt
xabort
mov
push
leave
mov
insl
ret
jmp
imul
and
stc
cwtl
adc
sbb
pop
in
loope
mov
ljmp
push
push
cli
mov
sarb
or
xchg
or
inc
or
lods
dec
and
xchg
ret
mov
push
add
xchg
jnp
mov
out
loop
dec
loope
push
sbb
rorb
and
push
dec
xchg
dec
pop
adc
xchg
push
pop
outsb
rcl
jp
sub
daa
insl
in
push
fistl
arpl
mov
mov
pop
dec
outsb
notb
xor
les
add
mov
pop
pop
leave
mov
fyl2xp1
xchg
and
inc
push
add
adc
jl
xchg
sub
hlt
xchg
das
push
mov
inc
push
and
int
mov
jl
or
in
cmpb
out
or
lret
std
pop
shll
int
pusha
add
fs
xor
cmp
or
inc
and
je
add
mov
pusha
rclb
insl
je
xchg
jne
jb
cmp
mov
jne
ret
rcrl
nop
test
jns
push
lods
xor
out
rcrb
or
js
sbb
cmp
pop
xor
jmp
cmpb
or
inc
add
or
jnp
into
flds
sbbb
or
popa
adc
leave
adc
aam
orl
shlb
mov
and
xchg
in
bound
shll
cmpsb
pop
addr16
push
and
push
and
test
gs
aad
mov
push
loop
pop
pop
sub
mov
leave
push
in
lret
sti
sub
imul
mov
js
aad
test
nop
stos
pop
jbe
push
push
mov
push
mov
les
sti
mov
ss
hlt
mov
xor
imulb
mov
mov
test
mov
push
inc
or
inc
jle
jecxz
loop
and
clc
adc
pop
jnp
mov
daa
stc
and
in
mov
pushf
leave
in
push
jbe
sbb
cmp
addr16
inc
fwait
dec
mov
outsl
hlt
dec
out
ja
notb
pop
adc
mov
scas
mov
testl
outsl
add
add
xor
dec
mov
mov
in
out
and
inc
and
cld
inc
jecxz
push
cmp
movsl
fildll
cmp
imul
cmpsl
subb
fs
sarb
xchg
xor
jae
jo
fldt
xchg
sti
and
xor
std
movsl
sbb
xor
pop
adc
push
stos
jns
jmp
lcall
aam
pop
mov
mov
jecxz
or
pusha
pop
jecxz
out
mov
movsb
mov
dec
sti
mov
ret
mov
dec
gs
test
mov
mov
push
imulb
notl
insl
scas
pop
movsl
push
mov
fwait
cmp
ss
and
ss
sbb
js
enter
popf
inc
xchg
psadbw
push
icebp
inc
cwtl
or
repz
mov
xlat
sbb
daa
lock
xchg
enter
adc
daa
movsb
in
mov
dec
push
pop
repz
pop
sbb
mov
jns
das
pop
mov
jmp
fsubrl
sbb
roll
pusha
imul
rcll
es
inc
inc
aam
lods
fsts
xchg
sub
push
sub
imul
cli
ret
pushf
flds
sbb
les
cmpsb
and
idivb
fbstp
sub
fistpll
jecxz
dec
or
fdivl
jne
xor
xor
cmp
cs
gs
clc
test
jmp
mov
jecxz
pop
in
push
mov
in
cmp
cmp
icebp
ret
test
fs
incl
jp
mov
jge
push
adc
pop
cli
cld
divb
or
push
sbb
cli
dec
lds
gs
loope
sub
ja
push
pusha
hlt
mov
mov
add
mov
stos
and
mov
jae
cmp
fbld
jmp
mov
push
cmpsb
or
xchg
roll
xchg
and
dec
cmpsl
ficoml
insb
xor
mov
hlt
fisubrl
mov
xor
dec
lods
fwait
repnz
inc
mov
adc
lock
loop
cmp
jno
inc
popf
push
jmp
or
adc
jecxz
jg
inc
adc
sbb
imul
jae
and
sub
push
insb
std
sbb
jno
outsb
cltd
shr
adc
inc
hlt
enter
pop
mov
pop
adc
push
pusha
push
aaa
stc
cmp
mov
lahf
or
inc
dec
mov
cmpsl
out
rcll
jns
data16
outsb
insb
pop
jne
xchg
outsl
cltd
xor
jl
inc
js
fs
cmpsl
js
xor
hlt
push
inc
mov
pop
js
xchg
in
hlt
cld
ds
xchg
inc
xchg
icebp
loop
popa
push
or
push
outsb
adc
pop
out
daa
shlb
flds
dec
mov
dec
scas
in
add
push
repz
mov
jae
dec
clc
mov
sbb
loopne
lret
test
repz
je
sub
lcall
xchg
dec
test
mov
loopne
mov
data16
rcrl
sbb
mov
jae
pop
iret
cmp
mov
push
enter
mov
and
xor
add
add
jmp
shlb
sbb
ja
fs
ja
sub
into
cmpsl
pusha
jae
inc
pop
mov
pop
stos
cmpsl
push
mov
clc
mov
inc
add
clc
addl
dec
sub
data16
cld
push
and
mov
pushf
or
adc
cmpsb
inc
aad
dec
xchg
dec
jno
add
jb
add
aam
xchg
mov
imul
sbbl
pop
pop
sub
lcall
dec
mov
ficompl
mov
and
in
addr16
xor
adc
or
cmp
ret
dec
adcb
dec
push
test
int
sarb
ret
jmp
jp
fsubl
push
mov
dec
mov
or
dec
jp
shrl
jp
push
dec
pop
pop
fsubr
and
inc
xor
add
and
mov
mov
jo
test
pop
lods
out
sub
shl
mov
xchg
mov
sbbl
into
les
mov
out
fidivrs
lock
loope
mov
popf
mov
mov
int3
popf
popa
or
inc
dec
jns
xlat
cld
fcoms
sbb
out
push
shrb
add
xchg
add
cwtl
push
test
call
enter
xchg
fxch
jne
push
pop
push
push
fstpl
dec
call
mov
xor
jbe
jp
mov
pop
fdivrs
mov
cmp
mov
jno
push
pushf
iret
or
mov
pop
jl
fistpll
in
xor
dec
mov
pop
jmp
clc
push
inc
mov
inc
cmp
cld
in
jbe
sarb
ss
orl
leave
mov
and
shrb
out
inc
pop
or
mov
cmpl
inc
sbb
fisubl
orl
test
pop
push
mov
sub
cld
sub
add
cmp
sbb
push
insb
xor
jg
or
mov
mov
add
jae
ret
mov
adc
sub
mov
outsl
lret
pop
lcall
paddsb
lods
and
dec
shlb
loope
fdivs
rcrb
es
in
mov
add
fmull
icebp
das
xlat
mov
sbb
pusha
mov
sbb
jle
mov
xlat
or
loopne
repz
cmc
mov
repnz
or
cmp
stc
hlt
out
xchg
cmc
dec
hlt
xchg
test
lods
jge
push
mov
rcll
notb
dec
fisubl
sbbl
lea
mov
jbe
jns
cmpsl
pop
sbb
lock
sub
andl
mov
xorl
popa
shl
xor
es
jl
aas
sbb
mov
repnz
shl
shl
cltd
push
or
lods
test
and
sub
sti
mov
adc
aaa
jbe
push
das
inc
add
mov
shll
cli
fistps
cmpsl
xlat
mov
sub
mov
mov
sahf
out
dec
sbb
bound
push
mov
mov
inc
or
les
jle
xchg
int3
inc
or
mov
cmc
pushf
sub
out
lahf
xchg
dec
push
sub
cltd
pop
xchg
cmp
call
or
pop
pop
or
cli
test
sahf
mov
mov
ljmp
pop
divl
js
bound
insl
popa
inc
rcll
call
xchg
or
cmp
cmc
scas
loopne
icebp
scas
icebp
imul
test
std
loope
pop
aad
out
mov
xor
testl
jge
mov
leave
push
and
pop
popa
in
mov
lret
dec
testb
mov
ds
les
rcr
fcomip
aad
sbb
xor
jne
pop
dec
mov
sub
cmp
stos
mov
imul
sub
test
jmp
mov
sbb
xor
lahf
pop
jne
repnz
sub
insl
jae
roll
in
fwait
ljmp
mov
mov
insb
aas
lcall
sbb
cmp
push
test
nop
lods
loope
adc
push
in
xlat
fldt
inc
data16
ret
xor
mov
lods
in
pop
mov
push
xchg
or
push
inc
cmp
xor
push
aaa
test
mov
add
mull
call
pop
fdivs
and
or
sti
mov
enter
jp
mov
pushf
mov
sbb
mov
fwait
xor
sbb
fwait
rcll
lock
data16
cmc
cs
mov
sbb
mull
xchg
dec
xchg
mov
or
lock
addr16
mov
aad
dec
test
or
or
dec
inc
sbbb
cli
mov
mov
pop
jo
stos
lcall
enter
das
ret
cs
push
mov
or
sbb
pop
pop
or
add
jnp
push
lds
push
mov
cld
mov
dec
ljmp
stos
dec
enter
sarb
sub
sbb
push
or
dec
out
lahf
pop
data16
test
leave
jb
push
or
inc
rep
cmp
lock
int3
sahf
fildl
scas
mov
cmp
mov
cmp
outsb
daa
nop
mov
cli
mov
pop
icebp
mov
push
aam
into
dec
mov
push
or
imul
call
mov
or
xor
inc
imul
loope
xor
ds
scas
out
lea
add
cli
js
mov
pop
rcr
rolb
stc
lea
icebp
xchg
subl
sub
add
shl
dec
mov
push
mov
pop
xchg
std
test
daa
xor
xchg
jp
mov
xchg
inc
jne
jne
jge
xlat
xchg
std
cs
pop
test
pop
ret
inc
imul
mov
test
add
cwtl
inc
test
mov
cwtl
cmp
rorb
mov
out
iret
inc
test
jmp
out
in
out
test
shll
jge
imul
cwtl
xorb
pop
jmp
lds
outsl
inc
jno
add
jmp
testl
rcl
or
sbb
repz
cmp
xchg
scas
stos
lock
push
mov
mov
sbb
jl
and
aas
sarl
mov
mov
and
jno
adc
addr16
arpl
jmp
nop
addr16
sbb
je
je
add
inc
sbb
call
xor
dec
inc
push
daa
xchg
lahf
or
and
sbb
mov
lcall
and
push
and
mov
dec
cld
push
mov
xorb
out
mov
es
xor
pop
loope
pop
loop
das
ss
or
fisubs
xor
add
adc
sarl
insb
into
push
loop
daa
popa
ret
repz
and
mov
icebp
push
cmpsl
jge
xchg
cmpsl
cmp
inc
clc
push
data16
xchg
repz
xchg
es
sbb
mov
daa
inc
call
jl
and
ss
push
shll
pop
pop
dec
pop
popa
shrb
pop
ja
pop
push
push
cmp
into
sub
hlt
gs
arpl
xor
fwait
mov
mov
xchg
lock
fwait
jnp
jecxz
cmp
out
adcl
and
or
mov
pop
cmp
and
int3
jb
mov
cmp
mov
push
pushf
shl
std
jp
sbb
fxsave
jnp
jge
jae
inc
jle
test
imul
aad
mov
and
xchg
sti
cmp
and
sub
xchg
test
add
pop
stos
testb
stc
int
inc
in
and
iret
or
cmc
sbb
mov
mov
int
xchg
lods
mov
data16
cmp
rcr
lock
dec
into
pop
pop
lret
shrl
pushf
sbb
push
aaa
adc
xchg
xchg
sti
inc
orb
pop
mov
jne
mov
jae
popa
dec
mov
sarb
jae
pop
imul
rclb
adc
adc
mov
in
mov
xchg
jno
into
int3
sbb
fdivrs
add
pop
and
push
outsl
sub
rcll
daa
std
xchg
test
aas
pop
sbb
jne,pt
push
pop
sarl
adc
push
cmpsb
xchg
adc
push
ss
lds
pop
jne
aas
inc
mov
shll
mov
adc
jnp
xchg
out
aaa
sub
add
mov
inc
sub
popa
or
cltd
pop
out
fdivrs
pop
xchg
xchg
cmp
sti
dec
sbb
push
push
in
xchg
inc
lods
les
cld
rcrl
loope
movsb
enter
fs
pop
adc
inc
adc
test
jbe
ljmp
sbb
adc
cmp
push
fistl
jbe
add
aaa
imul
xchg
pusha
dec
jl
nop
out
out
lods
jmp
mov
cwtl
add
xor
call
fcompl
inc
in
sbb
add
and
dec
push
cs
es
sbb
mov
sbb
out
and
imul
mov
test
fdivrs
popf
mov
outsl
ljmp
syscall
cwtl
mov
fwait
test
add
or
sub
mov
mov
dec
subb
filds
mov
je
xchg
out
xchg
inc
cld
or
and
xor
xor
das
jge
push
sbb
push
sbb
adc
push
popa
xchg
or
add
mov
inc
in
mov
sbb
scas
or
sti
shll
shrl
jl
fcomp
add
mov
popl
ss
dec
in
inc
xchg
dec
pushf
pushf
fsubrl
pusha
jbe
outsb
mov
mov
bound
adc
xchg
mov
add
xchg
xor
xor
jecxz
jp
push
scas
std
push
push
aam
mov
sti
xchg
cs
ret
jge
and
mov
mov
lcall
ss
adc
out
loopne
inc
gs
add
and
and
sar
ja
xlat
xchg
xchg
mov
sub
jge
add
jp
test
hlt
dec
subb
inc
adc
fimull
lds
jno
mov
push
ljmp
xchg
or
movsb
dec
popfw
jmp
in
inc
jmp
sbb
shl
aam
test
jl,pn
jae
out
mov
adc
xlat
xor
rorb
ret
into
rorb
int
and
adc
or
int3
dec
jmp
mov
stc
mov
movsl
mov
roll
pop
xlat
sti
jno
je
push
inc
add
mov
dec
stos
aam
arpl
lock
xchg
lahf
pop
cmc
and
popa
les
cmc
pop
into
xchg
bnd
sub
inc
sti
sbb
sbb
outsb
jl
add
lea
leave
jbe
xor
rcll
jae
scas
sbb
xchg
and
data16
dec
movsl
xchg
mov
pop
cmp
mov
fadds
jecxz
ja
cmp
mov
std
mov
pop
xlat
jg
jb
inc
mov
or
mov
out
jno
jle
pushf
aaa
sbb
dec
leave
ret
inc
pop
sub
shll
rol
mov
xchg
pop
iret
push
lahf
ret
cmpsl
inc
imul
push
arpl
dec
jle
cmpsb
jne
js
fldl
pop
xchg
rorl
pop
insb
add
jecxz
lods
in
in
in
lods
jne
cmpsb
lea
jo
repnz
mov
test
cltd
xor
add
add
adc
imul
mov
cli
mov
add
iret
orl
mov
push
or
jecxz
inc
pop
je
cld
push
pop
adc
pusha
mov
sub
cs
sbb
bndldx
xor
dec
imull
push
inc
push
xor
popf
and
push
cmp
int
xchg
ret
and
je
je
aaa
pop
and
inc
sar
mov
lret
test
mov
dec
pop
mov
sub
mov
push
dec
es
mov
cmp
mov
dec
fstp
aas
imul
cltd
and
mov
lret
sub
xor
loopne
mov
sub
leave
stos
in
jno
jp
sub
in
mov
cli
test
sbb
mov
push
and
rcl
test
sub
cmpsb
mov
adc
int3
aaa
dec
adc
push
inc
in
mov
xchg
mov
jo
test
add
jnp
movsl
mov
aad
jg
arpl
aam
rcrl
xor
and
sbb
incl
sub
jo
sbb
xchg
pop
imul
imul
jo
lods
inc
sbb
xchg
xor
and
icebp
push
lds
and
lcall
jae
sbb
test
cmpsb
jno
testl
or
xchg
xchg
movsl
adc
mov
pop
andl
push
in
adc
or
jecxz
add
jg
das
lods
lret
cld
loop
cmp
ss
inc
repz
dec
adcb
fucomp
ret
pop
mov
js
cltd
jo
and
add
movsb
sbb
clc
cli
fincstp
inc
cmp
test
jae
in
fwait
mov
or
es
xchg
mov
push
cli
cmp
or
push
push
adc
mov
popf
int3
lret
lcall
mov
pop
jp
mov
sbbb
push
pop
dec
stos
aad
andb
and
sbb
mov
sub
aas
je
nop
cmp
enter
push
fdivrl
cmp
arpl
push
ds
inc
pop
sbb
test
push
enter
pushf
js
ret
cmpsl
sbb
dec
testl
dec
nop
rclb
and
and
push
test
test
rcll
hlt
and
sub
mov
pusha
mov
jl
lods
and
cmovs
push
inc
pop
iret
lds
imul
pop
std
add
ret
cwtl
mov
and
jle
pushf
shll
stos
push
call
jmp
std
std
mov
mov
xchg
imul
inc
sarl
jle
mov
cmc
cmp
cmpl
xor
jl
fcomp
cmp
iret
xor
adc
jne
dec
mov
xchg
movsl
mov
sub
out
mov
lea
mov
test
in
mov
movsl
sbb
jge
and
scas
repz
mov
fstpl
and
cmpsl
outsb
ss
repz
adc
add
jae
inc
adc
mov
xchg
mov
pop
inc
mov
out
fmull
enter
cltd
fnstenv
repz
mov
orb
addr16
push
cltd
pop
sub
movsb
hlt
pop
pop
cmp
rolb
inc
or
ret
sbb
sub
into
int3
jle
adc
negl
push
mov
and
and
jnp
sbb
jno
or
mov
call
negl
les
mov
data16
enter
fs
popf
test
fwait
out
rcll
adc
push
rcrb
jo
mov
imull
sub
mov
addb
pop
lods
pusha
lahf
lret
mov
sub
aad
pop
iret
rclb
xor
lods
sbb
es
setnp
stos
imul
inc
mov
rcrl
cmc
je
mov
mov
dec
xor
stos
popa
in
mov
push
test
fists
add
xchg
sub
xor
mov
hlt
sub
dec
mov
mov
movsb
mov
mov
ja
lcall
loopne
int3
in
fs
xor
pop
mov
out
sub
rolb
leave
xchg
jns
pop
aam
pop
jo
cmpb
and
adc
mov
in
outsl
es
cmp
xchg
faddl
cmp
jb
mov
ss
xchg
mov
enter
push
sbbb
xor
in
mov
mov
int
daa
jp
shlb
pop
fwait
inc
cmp
xor
xchg
add
arpl
fldl
xchg
pushf
lcall
xor
sub
daa
or
ret
jbe
popf
mov
push
fsubr
clc
or
or
cmp
popa
jne
push
push
inc
xchg
jae
jmp
or
outsl
ret
fs
dec
negb
roll
call
add
sub
inc
movsb
std
or
shr
loopne
rcr
dec
push
fsubl
jns
in
dec
jecxz
or
fistpll
dec
pop
jb
inc
pop
add
adc
push
xchg
test
mov
lods
adc
cmp
loope
and
insb
dec
mov
cmp
push
rcll
ret
aam
sub
fcmovu
xor
cmp
rorb
push
cwtl
or
aas
rcl
cmp
jge
push
xchg
nop
arpl
lcall
arpl
sbb
mov
jns
mov
adc
test
out
pop
push
xchg
xchg
add
dec
mov
xor
mov
and
mov
jmp
in
cmp
sbb
frstor
xor
je
lods
or
xchg
test
lods
inc
das
ss
dec
inc
pop
jo
xchg
sbb
lea
sub
pop
neg
sub
test
movsb
mov
cld
loopne
adc
in
mov
hlt
sbb
cwtl
loope
hlt
jae
loope
inc
imul
xor
xchg
mov
lahf
push
dec
ja
sahf
je
repz
lods
in
xchg
gs
rorb
dec
sub
cld
adc
push
out
push
push
shll
jmp
aad
xor
aas
push
cs
loop
jmp
pop
inc
jne
std
push
mov
xlat
fwait
add
rcr
fistl
mov
cmp
push
out
sbb
lahf
outsl
arpl
rcr
test
xor
in
cmpsb
dec
cmp
aas
mov
sub
shl
mov
sbb
xor
cmp
out
lret
shl
pop
adc
pop
roll
dec
jne
pop
cmp
xchg
add
pushf
scas
aas
mov
cmpsl
dec
and
addr16
mov
push
add
and
mov
cmc
pop
sti
hlt
and
into
jmp
jns
stos
subb
subl
sub
sahf
inc
lods
xchg
cmp
jnp
xor
sub
cmc
fwait
add
sbb
cltd
and
movsl
mov
xchg
sbb
sub
xchg
imul
xlat
sub
fistl
push
pop
mov
sub
stos
int3
leave
push
lds
jl
call
sti
sbb
in
sbb
cmp
xchg
or
dec
push
add
dec
mov
stos
scas
mov
xor
in
cmp
sub
dec
iret
inc
jle
sub
add
cwtl
cmc
fucomp
jmp
repz
loope
mov
shr
hlt
lds
lds
mov
bound
in
loopne
adc
movsb
sub
dec
push
shl
cltd
cmp
sub
std
xor
sub
int3
xchg
clc
cli
outsl
pop
mov
orb
sbbl
pop
cmp
push
sarb
xchg
cs
popf
inc
adcb
mov
leave
pop
pop
popa
ret
incb
mov
lret
sub
mov
add
repz
cmc
andl
sbb
pop
mov
sub
lret
pop
scas
int3
in
in
in
mov
cmpl
adc
fnstcw
ficomps
inc
and
sub
sarl
ret
aad
loop
popa
push
movsl
xor
jo
cld
mov
fcomps
sbb
stos
pop
or
daa
mov
ficompl
popf
dec
test
sbb
jmp
lcall
cmp
leave
xchg
xchg
popf
pop
inc
shrl
dec
popf
imul
iret
mov
cmp
sub
pushf
jae
cltd
mov
fxch
mov
mov
and
js
push
push
ja
test
push
mov
jns
mov
cli
sbb
jp
pop
movsl
shrb
pop
jge
pop
xchg
into
cltd
fwait
repnz
aad
dec
mov
in
mov
cmpsb
sub
xlat
or
push
xor
insb
mov
and
pop
and
out
clc
pop
and
mov
jmp
pop
clc
rol
inc
sub
rcr
mov
stos
xchg
aas
mov
mov
mov
adc
stos
cwtl
aaa
xor
loop
imul
fs
cmc
jns
sahf
inc
mov
cmp
xchg
mov
inc
gs
mov
add
adc
dec
pushf
mov
xchg
xchg
imul
push
sub
daa
mov
jp
jg
adcb
jns
mov
les
loopne
stos
adc
cltd
stos
xchg
fnstsw
xchg
push
scas
cmp
test
ds
loope
cmp
sbb
or
ss
test
push
cmp
insl
mov
cs
addr16
cld
in
xchg
mov
loopne
jb
add
ja
inc
mov
ds
roll
sbb
push
pop
test
xchg
mov
dec
lock
mov
mov
sbb
shrl
pop
stos
test
sarl
fs
push
cmpsb
movsl
lret
mov
mov
sbb
xor
and
in
dec
sub
mov
mov
imul
testl
inc
xor
mov
jae
out
or
cmpsl
fwait
sbb
mov
pop
mov
cmp
int
jp
movl
sub
cltd
pop
loopne
lds
jg
xor
mov
sbb
lahf
in
arpl
sarb
stos
sbb
shll
mov
out
int
lods
cwtl
int3
addr16
and
and
mov
gs
test
sarb
shrb
decb
je
cmp
lcall
test
push
roll
rcll
notl
mov
mov
jle
add
mov
inc
in
sbb
imul
int
jge
mov
cmp
in
aaa
and
xor
out
mov
jmp
sub
stos
cli
std
adc
mov
jle
mov
movb
lock
data16
ss
fmuls
xor
add
out
jbe
hlt
test
mov
push
fprem1
jp
sub
jbe
push
pop
in
js
stc
push
xor
cmp
xchg
shl
adc
push
mov
gs
mov
pop
pusha
xchg
lahf
xor
or
fmuls
ja
roll
mov
enter
leave
js
add
movsb
loope
lret
mov
je
push
sub
lret
add
sti
mov
mov
pushf
fwait
cmpsl
mov
xchg
repz
add
jmp
lahf
mov
dec
inc
mov
int3
stos
fdivl
xchg
test
enter
push
cwtl
clc
xor
inc
fisttpll
dec
or
dec
xor
inc
dec
fildll
mov
push
lock
stc
sbb
int3
imul
aaa
std
outsl
out
push
jg
mov
std
imul
pop
pusha
mov
daa
jge
insl
jbe
hlt
pop
sub
out
sahf
out
push
in
ds
popf
or
dec
mov
adcl
mov
xor
lods
aam
loopne
xchg
inc
inc
lods
cmp
stos
repnz
push
sub
pop
and
inc
jae
sbb
sbb
test
inc
insl
sbb
cld
mov
in
push
std
sub
mov
jmp
mov
fdivrs
test
push
mov
sbb
add
ret
iret
insl
out
cmpl
jo
sbb
mov
and
sbb
fsubl
ss
push
cmp
mov
or
or
sbb
jl
jmp
or
inc
pop
rclb
loopne
cmpsb
lea
or
inc
cmpsb
aad
push
jbe
fimull
inc
adc
pop
inc
inc
pop
sub
aas
jb
clc
cmpsl
cltd
pop
cmc
test
pop
mov
xchg
ljmp
jbe
shl
jp
sahf
dec
mov
mov
jo
lods
xor
jl
in
mov
in
leave
faddl
push
shrl
adc
xlat
pop
sbb
cmc
popa
aam
sbb
pop
div
jo
sub
fcmovbe
lds
xor
pop
aad
xor
cmp
xor
in
rcr
xor
hlt
mov
sub
or
decb
add
pop
nop
ret
enter
lret
add
imul
mov
cmp
mov
andl
sub
push
hlt
add
dec
sbb
jecxz
pop
repz
stos
sub
shrl
or
mov
outsl
sarl
or
pusha
mov
push
jnp
hlt
add
rclb
stc
and
shlb
shlb
lcall
or
lods
out
aam
sti
push
xchg
push
and
test
out
cmp
or
jns
inc
nop
stc
fdivs
xor
dec
dec
shrl
repnz
insb
faddl
lock
fs
pop
pop
aas
and
xchg
cli
iret
lcall
inc
pop
xor
test
lods
inc
imul
xor
dec
mov
inc
test
xchg
out
xlat
dec
sub
mov
adc
scas
aas
aad
rcrl
fistps
jp
inc
outsb
rcrb
mov
sub
addr16
sbb
pop
adc
pop
in
jnp
and
fidivl
cmp
cli
sbb
add
cli
xlat
xlat
mov
int3
repz
push
rcrb
or
movb
jge
dec
test
push
pop
mov
cmc
push
pop
fstpt
imul
jne
in
sub
push
shl
jne
test
fwait
loope
xchg
mov
mov
rcrl
jae
subb
mov
mov
stos
add
xlat
adc
vpsubusb
pop
inc
xchg
hlt
push
mov
stc
pop
arpl
lock
add
mov
pushl
icebp
jo
in
lea
sti
std
dec
aaa
lahf
xchg
xchg
push
fs
jp
loop
leave
mov
dec
dec
jnp
sub
ffree
dec
push
daa
das
loopne
jne
ret
sub
in
mov
aad
in
push
addb
cli
imul
pop
cmpsl
jp
out
adc
sbbb
adc
iret
shr
xchg
stos
test
add
pop
sub
lret
das
dec
imul
stc
sub
pop
lock
cwtl
jmp
jae
fldenv
popa
mov
fyl2xp1
and
cmpsl
adc
test
dec
xchg
dec
mov
popf
outsl
ret
jb
jae
inc
adc
xor
push
test
push
jbe
mov
adc
mov
lods
cli
mov
jbe
sub
and
xchg
rcrb
andb
lods
cmp
ret
jns
mov
and
xor
gs
dec
ret
out
inc
popf
movsl
rolb
rclb
or
mov
push
mov
inc
js
dec
and
add
cmp
ss
inc
int3
sbbb
in
outsl
xchg
inc
dec
inc
insb
sub
mov
repnz
lods
loope
popa
aam
dec
lods
push
lea
loope
in
pmuludq
ss
iret
cmpsl
push
jo
push
mov
mov
sub
pop
int3
xchg
inc
sub
fisttpll
popf
cwtl
jo
sbb
cmp
pop
sub
mov
sbb
orl
pop
mov
pop
and
call
mov
test
mov
pop
les
sub
dec
xchg
push
xchg
cmp
mov
jns
sbb
lret
dec
shlb
and
insl
cmp
repnz
add
add
xchg
lret
in
leave
movhps
mov
mov
sub
pop
insb
addr16
mov
les
cmp
scas
and
add
scas
out
fwait
jbe
imull
adc
add
mov
cmp
or
dec
jae
fstl
enter
icebp
ret
imul
or
into
rcrb
cli
rcl
or
add
imul
mov
call
sbb
dec
and
jns
mov
inc
xor
inc
fs
insb
cmp
in
sub
dec
in
sahf
jle
test
inc
insl
mov
xchg
fiadds
test
inc
loop
cltd
inc
inc
push
mov
pop
adc
or
push
sbb
sahf
in
stos
mov
cmp
cs
mov
cli
dec
mov
push
mov
sbb
sbb
rclb
dec
jge
cmpsl
loop
and
jecxz
mov
lods
pextrw
xchg
in
add
and
bound
sub
test
cmp
lds
pop
or
insl
inc
aaa
lret
pushf
pusha
mov
pop
fincstp
adc
test
or
mov
das
rolb
mov
adc
jmp
xchg
daa
ljmp
shlb
xchg
ljmp
fmuls
dec
into
cmp
add
mov
jg
insl
pushf
lcall
enter
int3
and
xchg
nop
mov
nop
popf
test
fwait
push
testb
xchg
add
iret
mov
stos
sti
lods
push
pop
popf
inc
xchg
pop
push
into
sub
sub
push
leave
xchg
cltd
dec
test
jmp
stos
mov
mov
adc
cmp
push
jb
mov
ljmp
mov
pop
popf
mov
inc
in
aad
jp
sbb
push
xchg
mov
stos
dec
stos
mov
mov
cmpsb
sbb
push
xchg
push
cmp
pusha
and
repnz
sbb
inc
insb
sub
dec
mov
mov
scas
stos
mov
test
out
rorl
or
dec
mov
lods
les
pop
fidivs
mov
addr16
add
rcrb
and
jge
cmp
mov
cmpb
mov
pop
xor
out
out
int
or
ret
rolb
aas
mov
sub
dec
bound
je
stos
gs
dec
inc
or
and
into
sub
pop
test
cs
xchg
stos
imul
xchg
xchg
jne
les
and
mov
fwait
inc
push
cmp
mov
cmpsb
sub
cmpsb
insb
leave
jg
clc
pop
pop
inc
movsl
push
inc
div
insb
push
xchg
ret
loopne
xor
mov
mov
push
push
lret
push
loopne
jne
add
mov
cmpsl
rcl
clc
pop
ficoml
mov
je
dec
push
call
in
and
inc
ret
outsl
jmp
in
leave
movsb
pop
test
fwait
pop
lock
pop
mov
adc
movsl
inc
inc
insb
mov
mov
inc
dec
jno
xor
repnz
iret
fdivp
lods
inc
mov
cs
push
inc
in
mov
cs
notb
pop
clc
lods
push
inc
adc
scas
mov
mov
ss
jae
sub
and
jge
adc
adc
in
inc
and
loopne
or
jmp
inc
jle
sub
repz
jmp
push
outsb
xor
pop
fstpl
mov
add
movd
gs
aad
jno
rorl
or
cpuid
pushf
outsb
notl
cmp
add
add
push
insb
lcall
cmpsl
or
mov
mov
pop
arpl
ja
cs
mov
mov
pop
jp
pop
and
rcr
out
nop
push
xchg
es
add
daa
mov
mov
popf
push
test
mov
inc
les
jns
pusha
inc
cli
loop
xor
bound
mov
loope
xchg
and
sbb
and
xchg
sahf
mov
test
lods
pushf
fst
pop
mov
push
xchg
mulb
mov
push
sarb
insl
cmovle
adc
inc
xlat
push
das
loop
jae
inc
xor
inc
sub
bound
icebp
pop
std
shlb
and
push
call
out
jb
mov
and
jmp
pop
pop
into
jne
repz
aad
ljmp
xor
and
iret
fisttps
ficoms
mov
inc
test
mov
mov
loope
lods
lods
arpl
aad
jecxz
and
push
jp
inc
into
nop
inc
in
stos
int3
lret
repz
test
and
rolb
dec
fcoml
je
testl
mov
mov
sahf
test
into
loopne
or
popa
dec
push
cs
repz
pusha
jecxz
pop
test
cmp
dec
ss
xchg
sbb
out
xor
or
repnz
mov
js
sbb
scas
xorb
lret
jno
in
pop
in
cmp
outsl
hlt
push
mov
mov
fbstp
push
jp
lods
dec
mov
sbb
jmp
add
pop
pop
nop
mov
push
movb
into
sub
add
in
outsl
mov
or
popa
xchg
cmp
mov
mov
add
or
mov
xchg
inc
loop
dec
fdivrl
ljmp
mov
mov
clc
stos
cli
pop
inc
inc
jo
dec
insl
and
pop
jo
cwtl
fadds
bound
pop
mov
push
xchg
inc
or
pop
aam
sbb
push
je
aad
std
sbb
cmpsl
iret
mov
lds
aad
add
cmc
cmp
insl
push
sub
add
fsubl
jae
push
fidivrl
aaa
in
or
loopne
jmp
pushf
mov
mov
xchg
mov
xor
sub
mov
std
ror
hlt
stc
pop
mov
popa
scas
out
pop
jge
ljmp
movsl
sbb
out
xchg
call
ret
punpckhdq
rcrb
int
lods
mov
das
jno
mov
pop
mov
lahf
sti
in
icebp
pop
push
divl
jge
sub
icebp
xlat
mov
cltd
lock
in
insb
jnp
sbb
add
mov
fcmovnbe
jno
jp
or
xlat
mov
and
xchg
cmovl
aam
arpl
add
mov
mov
imull
mov
push
sub
push
cmpl
aad
mov
cmp
outsb
lods
in
mov
or
rcll
mov
pop
push
fbstp
loop
jmp
dec
fistpl
in
pushf
xchg
negb
fcomip
ja
jle
push
xor
popa
js
xor
repnz
jecxz
or
scas
inc
loope
mov
pop
in
and
popa
inc
xor
xchg
xchg
hlt
pusha
add
dec
sbb
lret
pop
and
loope
add
sbb
shrl
nop
mov
adc
or
lret
sub
xor
std
testl
mov
insl
adcb
sbb
mov
xchg
xchg
inc
and
xor
test
sub
test
add
test
xchg
ret
sub
in
mov
inc
ret
jae
jne
dec
nop
js
add
into
insb
iret
clc
test
data16
jl
jne
in
repz
xchg
roll
mov
cmp
jo
stos
ss
sbb
push
push
repnz
shr
cmp
inc
call
cmp
into
sarl
fsts
out
imul
mov
add
xor
adc
cmp
scas
xor
add
fdivl
sub
pop
jmp
inc
xor
arpl
pop
stos
mov
push
adc
sti
xor
lea
lret
int
push
xchg
mov
lret
aam
and
hlt
pop
sub
inc
cmpsb
jno
pop
mov
enter
cli
cmpsl
push
nop
fstpl
sti
add
data16
lods
mov
sub
popf
bound
pop
add
js
int3
jne
js
pop
add
jg
or
movsl
sub
frstor
xor
mov
mov
sub
out
mov
add
pop
loop
mov
push
rcrb
mov
adc
add
xchg
and
ret
and
aad
outsl
sbb
pop
inc
inc
inc
cltd
je
push
push
ds
cmp
es
mov
in
adc
mov
xlat
aas
dec
add
aaa
out
push
addl
mov
shlb
add
pop
movsl
inc
mov
lock
fdivr
imul
push
sar
ret
in
scas
sub
xchg
jno
add
pop
xchg
sub
adc
push
fwait
xor
pop
aam
mov
xor
popf
or
cmpsb
jb
je
add
pushl
fidivrs
das
cmp
jno
lds
in
insb
and
or
loope
add
jl
inc
dec
sahf
pxor
inc
mov
daa
aas
mov
les
jg
xchg
fs
repz
rdtsc
icebp
pop
and
push
or
dec
clc
out
xchg
jae
fsubr
shlb
inc
insl
gs
int3
imul
out
sbb
inc
in
push
dec
orl
lods
and
rcrl
daa
pop
adc
negl
and
cmp
cmp
mov
mov
xor
fldl
jae
mov
add
lcall
imul
pop
mov
in
jp
les
jp
add
push
fmull
stos
stos
xchg
addr16
xor
insl
loop
sahf
or
sub
mov
subb
cltd
ljmp
cmpsb
into
push
push
push
sbb
pop
out
cmp
mov
jns
add
dec
xlat
imul
fsqrt
in
sub
in
dec
cmp
add
data16
jbe
jg
stos
mov
xor
popf
loopne
xchg
push
mov
bndstx
loope
adc
shlb
into
addr16
jo
mov
dec
lahf
test
cs
sarb
je
pop
popf
pusha
or
inc
mov
mov
xor
xchg
push
aas
dec
sub
repnz
ljmp
test
mov
pushf
clc
inc
add
dec
sti
cmpsl
mov
pop
adc
inc
mov
mov
in
mov
and
mov
pop
pushf
pop
aad
jne
push
or
mov
test
adcb
ret
xor
jp
bound
rorl
cli
rol
cli
mov
push
cmc
scas
pushf
fs
jne
inc
stc
addr16
das
ss
jb
fisubl
stos
sub
fistps
fiadds
movsb
xor
dec
add
or
stos
and
dec
adc
outsb
addb
pop
outsb
xor
and
imul
cwtl
dec
adc
mov
xor
or
mov
and
dec
adc
clc
jbe
scas
ss
fnstenv
and
sbb
sub
or
or
jge
repz
cli
pushf
mov
test
xlat
int3
bound
adc
jnp
mov
mov
mov
mov
push
pop
hlt
aaa
cmp
mov
addr16
add
iret
xchg
std
jl
sub
clc
subb
shlb
mov
dec
pop
xchg
fs
push
addr16
mov
lcall
lcall
mov
fistpl
mov
mov
push
lods
jnp
pop
pop
sub
sub
out
in
and
movsb
jecxz
or
cmp
pop
dec
in
sbb
jns
cmp
push
cli
xchg
movb
sub
and
jae
jns
sub
xchg
aad
dec
orb
loopne
or
sub
sub
pop
movsl
inc
xchg
sbb
mov
cmp
fst
fmul
pop
add
lea
add
pop
mov
and
jge
sbb
cmpsl
sbb
inc
mov
aaa
xor
adc
es
sub
fistpl
cmp
sahf
xchg
jle
mov
lcall
lods
or
adc
jp
mov
dec
in
mov
iret
lea
xchg
mov
mov
repnz
fidivrl
xchg
jno
sbb
pop
fildl
fdivl
test
dec
fs
sbb
mov
pop
stos
inc
pusha
pusha
faddl
jb
mov
fs
insb
pusha
aad
xchg
repz
mov
push
jo
hlt
inc
cmp
adc
mov
loopne
add
rcll
inc
sbb
lea
pop
mov
test
push
and
aaa
loope
mov
pop
aam
add
cwtl
enter
and
push
adc
pusha
xor
dec
xlat
call
sbb
mov
enter
fistpl
aam
or
aas
sahf
sub
xchg
cmp
jns
push
shll
jno
ds
in
xchg
sbb
mov
xor
jp
fimuls
mov
sbb
mov
mov
stos
mov
les
lods
rclb
add
inc
outsl
xchg
jno
pushf
and
ret
add
sbb
lahf
sub
or
arpl
addb
repnz
mov
shll
pop
mov
pop
insl
add
daa
jbe
loopne
daa
outsl
fwait
aaa
adc
popf
in
mov
and
xchg
mov
out
push
aam
leave
and
xchg
inc
jo
pop
mov
push
jg
or
dec
mov
sub
je
cmp
push
sarl
pop
inc
cmp
mov
jae
mov
mov
das
cmp
imul
stc
inc
pop
adc
in
call
je
push
jge
xchg
out
inc
xchg
xchg
pop
lcall
scas
dec
movsb
call
add
shlb
das
and
sbb
je
int3
mulb
jns
jp
out
ja
leave
mov
ja
mov
std
daa
lods
sub
lds
ja
inc
or
dec
inc
mov
adc
movsb
mov
pop
lods
jg
insb
rclb
fxch
jno
jb
movsl
js
and
fwait
stc
lea
xor
pop
push
std
adc
sbb
mov
jo
cmp
sbb
mov
fists
stos
mov
ja
mov
lea
outsl
test
pop
test
inc
and
xchg
cmpsl
add
call
cmpsl
out
inc
mov
sbb
pushf
imul
stos
mov
loop
in
aas
inc
in
push
incb
in
cmp
aaa
enter
pop
ljmp
in
mov
pop
pusha
fwait
fs
mov
mov
push
sub
rol
push
in
dec
cmp
pop
jle
rcrl
xchg
cltd
pop
jae
add
rcll
fldl
movb
cmpsl
cmp
lret
add
outsl
mov
or
sub
test
sub
sub
pop
xchg
fildl
inc
loopne
shr
stos
loop
sub
rcl
pop
stos
insb
sub
cmpb
sbb
sbb
int
adc
out
sbbb
iret
fwait
cmpsb
push
or
add
cld
cwtl
out
mov
imulb
test
int
inc
sbb
push
mov
imul
sub
pop
cmp
inc
in
push
mov
adc
pop
es
adcb
pusha
pop
stos
fidivrs
aad
test
jne
sub
mov
in
outsl
sbb
ror
in
iret
inc
sub
std
mov
jecxz
out
mov
ret
lret
scas
dec
jno
orl
das
out
push
fmulp
scas
in
lret
cpuid
push
and
adc
cld
push
cwtl
into
pop
inc
push
loop,pn
std
adc
cmpl
sub
loopne
test
dec
xchg
nop
aad
lret
lret
mov
insb
dec
dec
push
or
jecxz
xchg
sbb
das
imul
test
mov
pop
ss
jl
xor
std
std
mov
cmpsl
fs
sub
lret
or
cmp
xor
mov
push
sub
aas
xorb
mov
cmc
nop
xor
and
cmp
aaa
loopne
xor
call
push
cmpsb
inc
sbb
jge
out
out
xchg
test
push
in
push
inc
add
jno
into
xor
mov
jmp
pop
xor
cltd
aaa
das
inc
adc
xchg
push
testl
push
push
sub
pop
inc
dec
pop
xlat
and
in
call
mov
gs
jmp
rorb
out
in
sub
fisttps
push
addr16
les
in
xchg
and
movsl
and
jl
adcb
js
fsubl
cmp
clc
mov
jb
cwtl
hlt
mov
es
ljmp
pop
sub
mov
sub
fildll
pop
jge
add
dec
mov
dec
scas
out
jl
negb
xlat
push
sub
xor
imul
or
xchg
mov
sub
cmp
mov
es
inc
faddp
icebp
pop
jle
mov
loope
push
mov
ficoml
es
add
aam
mov
iret
xchg
mov
movsl
mov
inc
cmp
sub
add
fldcw
xor
push
bound
test
cwtl
cli
adc
fnstsw
lock
insl
int
ror
out
stos
adc
sub
lret
repz
push
push
cmp
sbb
jp
mov
xor
push
subl
mov
push
cmp
lret
fcmovbe
add
lods
jecxz
dec
pop
adc
cmp
add
lods
out
inc
push
sbbb
rorl
setge
add
test
in
rorb
mov
pop
icebp
cmpsl
mov
lock
push
push
dec
xor
clc
out
enter
popf
dec
dec
inc
movsb
adc
push
dec
into
sbb
and
and
or
mov
cmpsb
pop
pop
test
jns
xor
push
es
jb
loopne
dec
sub
or
addr16
pushf
adc
lret
ljmp
bnd
lock
mov
jecxz
daa
sub
int
jecxz
cwtl
jbe
and
add
testl
rdmsr
lea
jnp
daa
xor
dec
out
mov
dec
enter
mov
lret
lods
fmull
repnz
cld
leave
fldcw
and
xchg
les
out
xor
out
add
imul
popl
sbb
inc
pop
cmp
inc
pop
repz
jbe
into
notl
jmp
mov
sub
jl
and
sub
jns
aam
mov
push
sarb
lds
arpl
push
test
rcrl
mov
lcall
repz
int
mov
mov
xor
mov
in
arpl
pop
lock
into
subb
dec
xchg
jl
or
rorl
out
repz
xchg
jecxz
mov
cmpsl
inc
cmpl
jp
mov
mov
loop
dec
add
bound
mov
arpl
std
dec
push
cmp
lods
jno
cmpb
mov
sub
loopne
out
fstpl
cmp
shrl
xor
ljmp
icebp
ss
jae
xchg
jno
push
pop
out
mov
scas
add
dec
sbb
mov
sbb
dec
sahf
and
jbe
cmp
jae
mov
js
sbb
cmp
jb
cmp
push
inc
in
cld
in
jb
and
jmp
in
sbb
icebp
mov
push
xorl
and
mov
fcoml
jl
xchg
stc
clc
mov
add
mov
sti
stos
add
ret
xor
lock
sub
and
pop
clc
cmpsl
adc
xchg
xor
or
aaa
add
out
arpl
sti
rclb
cld
js
pop
adc
test
jmp
cmpl
jmp
movl
aas
add
sarl
xor
add
pop
push
mov
mov
icebp
and
insb
mov
xchg
adc
pop
das
imul
sbb
xchg
psubusw
adc
lods
add
scas
fwait
jo
xlat
jl
sbb
adc
mov
push
adc
xor
ficomps
dec
andb
aad
out
scas
dec
ljmp
push
pusha
push
or
in
lods
push
push
xchg
movsl
ror
add
push
sub
aam
cwtl
pop
pushf
adc
sbb
push
add
imul
test
jae
jb
daa
pop
lods
sti
addr16
mov
les
mov
push
sti
test
cld
stos
das
xchg
out
int
jno
les
fwait
mov
rorl
mov
jle
xchg
dec
mov
fs
mov
cmp
mov
cld
bound
repnz
addl
fidivrl
jmp
shl
add
mov
sbb
enter
adc
add
idiv
iret
jecxz
cmp
pop
sbb
jg
inc
pop
les
dec
imul
add
jne
cwtl
dec
movsb
in
adc
dec
push
mov
and
inc
nop
je
bound
push
fs
into
daa
lahf
mov
mov
les
inc
pop
mov
outsb
xlat
or
aad
mov
pop
cld
push
jmp
inc
add
dec
jae
pop
testb
pop
add
outsl
stos
adc
sub
int
scas
fsubrp
sub
adc
cmp
xor
popa
int3
mov
add
and
data16
add
mov
dec
cmpsl
cmp
push
pop
pop
jo
add
mov
call
out
jmp
test
jg
js
scas
lahf
pop
test
xchg
push
xchg
pop
cld
rcrb
aaa
inc
rcr
out
pop
dec
cmpsb
dec
mov
push
adc
adc
outsl
sbb
lret
push
insl
scas
mulb
insb
scas
sub
jp
cld
pushf
push
and
dec
arpl
stos
adc
ret
or
loope
dec
xor
inc
push
jnp
nop
fnstenv
dec
or
movsl
add
repnz
sub
cld
xchg
push
jnp
xor
mov
adc
sub
popa
imul
mov
push
int3
out
es
icebp
jg
pop
dec
and
mov
cli
push
ror
rcrb
add
dec
sbb
mov
ret
sbb
aaa
xlat
sub
stos
das
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
