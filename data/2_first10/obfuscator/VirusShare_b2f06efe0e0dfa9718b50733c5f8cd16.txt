jge
or
gs
dec
je
fdiv
xor
or
add
ret
and
pop
sti
ja
pop
pop
ret
add
ret
adc
pop
pop
leave
ret
dec
sbb
mov
mov
add
ret
shlb
adc
and
subb
jmp
and
inc
add
call
mov
add
mov
or
dec
and
dec
and
add
and
add
insb
jnp
and
push
mov
inc
or
adc
insl
jbe
addb
add
mov
add
and
adc
adc
and
in
lods
jb
adc
andb
add
adc
and
dec
jnp
mov
ds
daa
add
lods
adc
and
mov
and
adc
add
adc
ja
mov
mov
add
mov
mov
orb
sub
mov
mov
and
pushf
mov
mov
lods
pop
movsb
sbb
in
lods
jae
lret
fcmove
add
add
xlat
pop
mov
inc
addb
add
aaa
leave
test
inc
pusha
cmp
dec
bound
int3
pop
mov
or
pop
xchg
adc
cli
push
bound
adc
mov
aaa
cmp
gs
xchg
or
and
add
aas
inc
push
movb
ret
pop
imul
sbb
shl
add
decl
test
arpl
xor
add
add
sbb
mov
clc
jge
in
iret
incl
lds
aas
mov
add
lret
arpl
outsl
incl
pushf
pusha
iret
push
int
jl
flds
xchg
or
orb
push
jg
inc
add
pop
xor
movsb
push
push
jbe
cld
add
sarb
incb
xor
insl
movb
push
test
and
jno
and
adc
push
add
mov
insl
fists
or
mov
stos
mov
cwtl
les
jmp
add
subb
mov
cmp
mov
shrl
add
mov
gs
je
add
inc
cwtl
shl
pusha
jne
mov
fucomi
fsubrs
adc
add
jmp
cmp
jae
and
add
jl
jmp
or
sbb
movb
cltd
inc
sahf
div
in
filds
add
add
cmp
jo
loop
sub
lret
std
cmp
lcall
insl
mov
push
inc
add
sbb
jno
mov
sbb
push
in
add
push
push
dec
add
jo
cmp
or
sbb
mov
pop
scas
add
xchg
cli
cmp
pop
out
lods
add
inc
sbb
stos
js
in
pushl
sti
pop
stos
xor
jns
inc
fs
adc
out
mov
cwtl
decb
jge
incl
popf
sub
add
jne
mov
fsubrs
lahf
mov
decl
das
cld
push
movsb
jp
adc
shrl
movsb
or
or
push
int
loop
jmp
or
out
mov
in
push
mov
adc
imul
mov
mov
fwait
cmp
aaa
pop
fs
or
icebp
add
fucomi
ja
testb
pop
sbb
test
stc
add
mull
cmpsb
mov
lcall
add
cltd
mov
out
cmp
add
shrl
adc
add
mov
pop
lret
not
and
jb
inc
mov
sub
fstpt
add
add
jmp
lods
jge
insb
push
jecxz
xlat
stos
add
dec
ret
xchg
mov
or
int3
ret
outsl
cld
push
add
movl
fistl
add
mov
cmp
das
sub
cmp
data16
pop
jnp
and
dec
xorl
jb
psubusw
add
xchg
shrl
aam
lret
inc
insb
jmp
cld
pop
mov
or
std
in
dec
loopne
call
cmp
loop
outsl
shrl
repz
xor
popf
or
insl
mov
rclb
lret
sbb
adcl
ja
stc
fcmovnb
xchg
cmpxchg
push
in
loopne
daa
das
aaa
xor
fs
paddsb
sti
mov
mov
mov
je
mov
rorl
push
test
lcall
icebp
out
test
or
adc
mov
mov
leave
cmpsb
test
stos
lock
mov
xchg
inc
fbstp
int3
movsb
inc
mov
xor
adcb
mov
jb
fstl
inc
pop
mov
mov
sti
pop
dec
or
jg
lret
sbb
mov
rorl
adc
mov
mov
fucom
outsb
stos
jnp
insb
dec
imulb
fists
stos
sub
sub
popa
jbe
movsl
in
ffreep
jne
add
lret
adc
out
movsb
push
lock
adc
adc
insl
loope
cwtl
es
mov
stc
add
sbb
cltd
cmpl
movsb
dec
cmpsb
lea
mov
pusha
jae
js
mov
mov
jecxz
and
or
ljmp
pop
push
loop
jbe
sbb
add
pop
in
insb
jg
pop
mov
insb
jl
jge
pop
push
lea
icebp
ds
popf
insl
shr
sti
daa
fdivrp
outsl
sbb
jo
pusha
in
insb
loopne
push
or
lea
test
fildll
cmc
xchg
xor
in
idiv
test
dec
mov
incl
scas
jp
int3
push
fisttps
ljmp
cld
incl
xor
ds
repz
mov
shrb
dec
sbb
xchg
bound
in
cmpsb
cmp
mov
jmp
add
pop
and
xchg
sahf
inc
scas
jmp
mov
in
cmc
bound
or
xor
add
mov
xor
jge
fsubl
adc
out
mov
hlt
dec
xor
adc
add
movl
ss
das
fistps
and
hlt
jmp
int
cmp
cs
pop
mov
add
daa
hlt
outsl
pop
jle
or
push
lods
adc
insb
mov
das
adc
cli
fildll
into
loop
add
sub
sub
inc
test
or
out
push
and
mov
adcb
jecxz
jmp
sub
adc
cmpsl
sbb
int3
add
mov
xor
mov
fstpl
outsb
pop
xchg
adc
adc
adc
mov
cld
lcall
add
daa
sub
xchg
adc
adc
frstpm(287
sub
in
inc
xor
adc
not
sbb
call
clc
ss
inc
jmp
xlat
mov
and
in
xchg
sbb
decb
fidivrs
insb
and
cmpl
in
cmpsb
ret
pop
adc
add
dec
xchg
ljmp
push
mov
out
icebp
cmp
sbb
mov
pop
add
scas
int3
mov
les
pop
push
inc
inc
pusha
pushf
and
add
add
lods
fistps
aaa
or
xchg
cmp
pop
xchg
jbe
mov
decl
sarl
loopne
add
add
cmp
mov
jo
cltd
fs
adc
sbb
or
mov
fstps
sub
jmp
mov
jns
xchg
inc
jne
dec
test
jne
mov
das
mov
jmp
push
cs
loopne
jecxz
xorl
ret
outsl
cmp
adc
xor
jns
ret
int3
in
or
fbstp
pop
ret
mov
inc
jmp
fwait
adc
pop
pop
enter
add
mov
iret
sub
and
dec
xor
mov
movsl
add
test
xor
adc
shrl
int
push
add
dec
pop
dec
rcrl
and
adc
mov
stc
scas
shrb
and
xchg
sar
xchg
fadd
ret
insb
adc
cmp
cmp
mov
push
jge
xorl
pop
xchg
int
sub
js
mov
out
ja
cmpsb
inc
jle
mov
and
xor
adc
jle
ret
adc
cs
gs
dec
negl
xor
mov
adc
stos
js
jns
insl
aaa
mov
dec
into
outsb
sbb
jmp
movsl
xlat
sarl
xchg
in
mov
add
movl
out
jo
mov
mov
fimull
in
sbb
add
out
mov
fwait
or
mov
mov
or
and
sbb
mov
add
jnp
sub
rorl
jg
sti
mov
pop
inc
enter
pop
call
pop
jge
out
rorb
mov
mov
xor
mov
fisubrs
pop
enter
fmuls
out
xchg
sti
sub
mov
mov
fadd
jl
outsl
out
cs
ret
adc
insl
ja
repz
add
add
or
xor
push
not
push
push
pop
sbb
cmp
lret
inc
fistpl
imul
out
cmc
xadd
imul
rclb
mov
imul
add
jge
pop
lret
adc
rcr
push
fadds
mov
stc
add
push
adc
fisubl
or
incl
add
adc
add
fstpl
ret
mov
mov
xlat
lock
adc
or
push
ds
pop
insl
iret
adc
cld
mov
dec
sub
jge
into
outsb
movsl
jmp
add
xor
cld
test
lock
dec
faddl
stos
test
xchg
or
mov
mov
outsl
or
icebp
add
addb
mov
sub
lock
jnp
xor
pop
clc
aaa
rcrl
cmp
fistpll
inc
lods
xchg
test
xor
test
aas
insb
xchg
js
mov
out
roll
push
add
push
popf
fstps
mov
cs
mov
sahf
sbb
adc
mov
not
add
movl
mov
adc
aaa
fcoml
jle
addb
lods
adc
out
inc
or
inc
lods
sub
and
rorl
mov
ficoms
fsubrs
ret
xchg
xor
cmp
outsl
movsb
xchg
in
xlat
mov
cmp
ja
ret
dec
push
adc
in
dec
lods
mov
lods
xchg
or
cmp
cvtps2pd
out
test
je
mov
out
dec
ds
jno
adc
fwait
jl
xchg
ficoml
fidivrl
imul
adc
jge
inc
mov
pop
clc
int
and
or
inc
and
sub
cwtl
ret
pusha
in
add
sub
es
sbb
mov
stos
fwait
sbb
inc
mov
fiadds
ljmp
inc
xor
mov
and
ljmp
movsl
cmpsb
decl
push
lea
push
push
add
dec
cmp
mov
shll
mov
pop
sbb
and
add
pusha
adc
and
mov
inc
pop
add
imul
sub
adc
movd
cld
testb
in
cli
ret
leave
ret
fs
sub
add
push
jg
lds
inc
dec
push
mov
in
pop
aam
jmp
dec
pop
fidivrl
push
xchg
add
mov
jns
fdivl
enter
dec
mov
sbb
repnz
jno
out
xor
popf
add
mov
lret
fildl
jg
and
inc
ja
repz
iret
or
xor
adc
and
inc
pushf
dec
es
xchg
fnstsw
mov
pop
jle
and
movsl
ret
std
les
inc
cmc
lahf
dec
lds
inc
aad
negb
cli
or
fildll
pop
insb
and
int
insb
orl
dec
data16
push
fbld
dec
adc
mov
ja
jns
lret
add
sub
fbstp
aad
pop
mov
adc
pmaxsw
or
popf
nop
or
inc
popa
mov
rcl
add
or
or
push
jg
or
jmp
orb
jle
cs
jg
lret
lods
push
push
cmpb
pop
inc
adc
pop
sub
int3
call
aad
push
pop
jmp
jnp
push
or
dec
repnz
je
cmp
xor
hlt
push
sub
or
dec
mov
mov
sub
dec
idivb
std
jne
or
call
cmp
mov
shrl
and
aaa
xor
out
sbb
inc
push
and
jmp
jne
mov
sahf
or
add
jo
scas
mov
jnp
push
dec
add
or
adc
xor
mov
ja
outsb
movq
movsb
xchg
or
addr16
arpl
out
mov
fcoml
push
mov
adc
jae
into
imul
mov
pop
fwait
cs
mov
imul
push
jmp
inc
sub
jne
xlat
and
imul
cs
sbb
fnsave
decl
test
insb
xor
imul
inc
mov
insl
testl
mulb
dec
int
fidivrs
arpl
xor
mov
mov
cmp
enter
mov
and
lock
ror
jge
add
sub
cmpsl
fnstenv
jnp
cltd
add
mov
adc
sub
jmp
and
mov
rorl
dec
fsubs
pop
addb
call
mov
pop
mov
add
es
jp
lret
inc
jmp
sbb
xor
jge
rorl
arpl
into
push
mov
rcll
inc
rolb
call
pop
dec
je
push
jle
not
es
imul
mov
sbbl
je
neg
neg
shlb
in
out
cli
push
fmuls
xlat
aaa
roll
mov
fstl
fstp
fmul
out
fwait
add
add
inc
xor
jbe
aam
lock
jbe
add
xorb
jo
xchg
jbe
or
cmpsl
sarl
add
and
add
js
add
adc
mov
push
push
pusha
jmp
sarb
jmp
rcrl
mov
push
push
or
call
sbb
pop
cld
jmp
popf
mov
imul
int3
and
mov
mov
in
jbe
mov
in
mov
push
cld
sub
cmp
ds
shl
xor
sbb
mov
push
fsub
push
pusha
push
movsb
xor
push
in
icebp
jo
stos
inc
test
xor
adc
cli
dec
adc
fpatan
xlat
cmp
loopne
add
sbb
or
fdiv
movb
dec
mov
cmpsb
mov
add
lods
and
ret
jb
inc
push
jle
or
or
or
or
ror
add
xchg
xchg
ds
hlt
add
aas
int3
pop
jmp
jae
or
mov
dec
mov
or
xor
xor
mov
xlat
cmpl
test
mov
mov
dec
popa
cmp
sub
int3
sbb
and
and
dec
out
ret
cwtl
imul
shll
int3
mov
pushf
sub
mov
test
enter
push
in
xor
mov
add
in
add
inc
mov
and
add
fs
sbb
jo
or
daa
xor
popf
mov
outsl
inc
dec
into
xor
dec
sbb
sub
push
adc
in
es
dec
in
add
add
cld
inc
add
fadds
jge
ljmp
pop
mov
or
or
cli
das
mov
fstpt
push
mov
or
movsb
adc
adc
je
aam
or
dec
sub
push
mov
imul
fildl
lock
sbb
js
jle
pop
sbb
jne
dec
mov
or
decb
fmuls
dec
pushf
dec
adc
pusha
int3
lret
mov
adcl
xorl
xchg
dec
mov
mov
jbe
jle
add
fiadds
in
and
adc
adc
jnp
xchg
adc
mov
inc
and
test
in
adc
cmc
js
dec
inc
std
jbe
jnp
dec
dec
lods
push
rclb
or
mov
adc
sbb
cmp
adc
out
cwtl
sub
rcrb
into
cld
adc
cmpsl
xchg
ljmp
inc
repz
leave
aad
adc
loop
or
scas
jmp
pushf
rolb
add
push
sub
push
f2xm1
in
je
hlt
and
arpl
add
adc
cld
mov
jne
sub
xor
sbb
int
aad
cld
pushf
imull
popf
scas
push
xchg
arpl
fcmovu
jnp
dec
add
inc
aaa
rcrb
jne
cmp
cmp
mov
sub
mov
fs
mov
sar
aas
out
add
enter
rol
js
jg
stos
inc
jnp
imul
cld
das
repz
xor
xchg
add
cmp
pop
adc
repnz
outsl
outsb
mov
pushl
push
sub
push
lea
inc
and
push
xor
pop
lahf
addr16
leave
cmp
adc
sti
in
adc
xchg
inc
mov
int3
pop
shr
cmp
sub
adc
pop
test
jne
mov
jb
das
xchg
mov
lods
xor
scas
cli
xchg
inc
andb
in
sti
xor
movsl
bound
inc
adc
fsubs
insb
inc
test
sahf
int
cwtl
add
dec
fstps
mov
incb
xor
addb
jecxz
cmp
xchg
xor
jmp
dec
or
inc
adc
jnp
jecxz
adc
ret
icebp
ficomps
or
cld
sbb
sub
pusha
cmp
add
and
pop
mov
mov
xor
fsubr
xor
les
and
or
push
cmp
faddl
addr16
out
adc
repz
add
stos
outsb
or
push
sbb
and
and
in
mov
inc
fdivrl
sbb
add
pop
jae
sbb
or
lret
fcmovnb
mov
sbb
cmc
push
and
cmp
enter
pusha
jno
frstor
cltd
sub
repnz
lods
mov
add
sub
out
lahf
jns
xor
push
dec
lcall
sub
fstps
adc
sub
lds
rcll
pop
dec
cmp
jo
mov
or
xor
xchg
add
pop
sbb
mov
mov
adc
aad
insb
adc
adc
xchg
fidivrs
add
daa
cmp
cmp
xchg
and
loope
xor
adc
adc
xor
xchg
and
xorb
ds
insl
pop
loopne
xor
inc
mov
pop
jg
or
push
mov
cmp
shll
or
add
adc
jns
push
sub
inc
mov
scas
or
adcl
pop
daa
mov
cmp
ret
arpl
sbb
test
dec
sub
mov
cmc
hlt
mov
push
aaa
push
add
cmp
or
cmp
divb
imul
sub
ror
fs
pop
rcrb
cwtl
push
inc
aas
dec
loopne
cs
and
add
lods
lods
flds
test
pushf
add
addb
add
push
xchg
std
cwtl
push
rorl
or
lds
fimull
int3
dec
pop
pop
fistpll
xor
sbb
sub
dec
push
add
movsl
mov
mov
adc
cltd
es
or
sbb
sbb
jmp
jb
inc
aaa
mov
jns
rorl
adc
fadds
int
std
nop
ret
add
scas
loopne
sti
call
sub
and
dec
xchg
mov
mov
mov
orl
test
and
inc
popa
mov
lahf
js
mov
or
cmpsb
lock
xchg
ja
jo
dec
sbb
int
xchg
pop
enter
out
or
or
push
pop
inc
jo
addr16
and
sbb
and
loopne
mov
fprem1
call
mov
dec
and
movsl
adc
adc
jg
sahf
movsb
push
cs
fdivrs
loop
fsubr
xor
rcrb
gs
and
sub
cmp
or
jp
inc
and
out
push
pop
fidivrs
mov
rolb
cmpsl
dec
adc
adc
xor
jnp
xor
and
dec
sbb
mov
push
dec
dec
call
cwtl
shlb
sbb
mov
movb
xor
mov
lahf
sub
fimull
push
stc
js
cmp
jb
cmp
cmp
icebp
pusha
sbb
mov
adc
add
or
add
or
mov
xchg
into
test
pop
mov
adc
push
addr16
add
mov
push
mov
add
jl
bound
adc
fmuls
add
in
icebp
push
out
pushf
in
sti
jnp
pop
jb
mov
adc
mov
outsb
jl
cwtl
add
mov
jmp
int
mov
inc
mov
cltd
loopne
cmp
cld
xor
cmp
sti
sbb
or
adc
addb
imul
mov
aam
aam
movsb
add
push
dec
add
cs
jge
aam
cli
subb
rcll
enter
sbb
mov
jle
add
push
fistl
sbbb
add
int3
jp
or
movsb
add
js
imul
fs
dec
pusha
add
push
in
fbld
xor
push
jp
fdivrs
fdivrs
leave
cld
into
sbb
bound
scas
cmp
push
inc
and
imul
mov
jmp
cmp
pop
filds
lcall
movsb
pop
mov
xor
aas
out
lods
dec
pop
outsb
pushf
jg
cld
push
shrl
jmp
adcl
jo
repnz
add
fcmove
test
jo
andb
and
mov
ret
pop
sbb
popa
clc
dec
sarl
mov
add
int
lds
pop
jnp
jbe
arpl
mov
nop
iret
rorb
call
inc
xor
dec
jg
fisubl
dec
pop
mov
out
rcrl
mov
loope
popa
and
cltd
sbb
lcall
movsl
pop
les
sub
push
enter
push
adc
mov
inc
repz
xchg
lcall
push
iret
jge
iret
push
mov
or
in
lahf
add
data16
inc
cmp
cmp
test
sbb
mov
mov
rclb
dec
dec
dec
sbb
cwtl
pop
je
sbb
lret
lods
rolb
mov
lock
cmp
jb
popf
mov
rolb
enter
sub
pop
adc
mov
jbe
aas
loope
fimuls
xor
outsb
shlb
add
add
mov
push
ret
jns
lods
imul
ds
sub
and
es
dec
xchg
dec
arpl
mov
test
in
sub
xchg
jbe
fistpll
sub
shlb
in
and
jl
shr
jle
sub
xor
add
xchg
mov
and
and
jp
mov
cld
scas
clc
cld
xor
sub
cmp
lret
xor
stc
xor
fsubl
jb
jo
data16
daa
insb
push
shlb
lock
ret
daa
ja
mov
jp
lods
fstps
sbb
shll
mov
add
call
sub
mov
xchg
jne
nop
xor
ficompl
xor
adc
loopne
xor
aaa
sub
cwtl
icebp
lret
ret
dec
lahf
iret
sub
mov
or
adc
pop
stc
das
mov
sub
mov
stc
mov
fdecstp
lds
ja
jg
adcl
push
jnp
pushf
dec
add
loopne
and
jl
lock
test
dec
call
mov
push
inc
pop
fbld
pop
xor
es
fsubrl
test
adc
lock
das
dec
loopne
aam
push
ficoml
mov
subl
inc
neg
fcomip
jne
xor
xchg
adc
pop
test
icebp
sbb
sub
cmp
clc
scas
mov
jbe
aas
movsb
cli
dec
insb
inc
cwtl
aam
and
addr16
jmp
shrl
je
in
cld
fsubl
or
stc
lods
inc
clc
stos
aaa
xor
aad
add
sbb
aad
xchg
push
out
loopne
pop
scas
jp
rolb
push
sar
add
sbb
pusha
cli
cld
test
ja
mov
jb
ds
mov
xchg
addr16
xor
or
repnz
xchg
adc
or
jnp
fucomip
sub
test
jae
les
xchg
cld
push
jge
inc
dec
pop
mov
movsbl
dec
mov
in
rolb
mov
inc
test
xchg
imulb
movsl
jnp
std
cmp
mov
mov
lret
jae
negb
stc
andb
add
xor
aad
insl
rorl
add
sbb
iret
iret
ljmp
movsb
mov
sub
shr
dec
ret
loop
dec
jmp
xor
inc
ja
enter
pop
and
mov
cmp
cld
out
mov
scas
cmp
lods
push
adc
mov
add
add
pop
jl
push
sub
enter
add
js
lea
fwait
mov
mov
push
lds
gs
jmp
and
xlat
xchg
xor
imul
filds
xor
mov
jne
xor
push
aad
pushf
inc
mov
inc
cwtl
loope
cwtl
scas
add
and
jmp
sti
test
inc
mov
stc
add
loope
jne
xor
jo
jnp
add
add
mov
mov
outsl
int
jbe
mov
bound
iret
imul
ds
loope
inc
pop
xlat
mov
or
js
dec
pop
jns
shrl
test
flds
inc
mov
lret
jge
ds
or
mov
es
push
popf
mov
sbb
mov
rol
cmp
sub
loop
jne
shlb
pop
xor
sbb
cwtl
xchg
out
mov
pop
mov
mov
pop
cmp
jg
jge
xchg
int3
int3
push
xchg
jns
hlt
lea
ljmp
push
or
add
mov
movb
xor
jne
sbb
and
es
rcr
xor
stos
mov
mov
int3
shll
cmp
dec
and
orps
add
in
test
int3
mov
shrb
jae
add
add
das
cs
test
int3
hlt
pop
cmp
sbb
jp
jp
mov
or
loop
inc
nop
dec
mov
fidivrs
bound
dec
mov
or
or
xchg
push
je
mov
mov
push
test
rcll
fnstcw
test
jae
mov
mov
sbb
or
hlt
mov
push
les
or
ret
adcl
repnz
loope
stos
sbb
fxch
push
mov
and
ret
or
fiaddl
pop
sub
adc
inc
adc
shlb
add
fwait
cmc
pop
push
mov
sbb
rcl
fildll
adc
movsb
adc
in
repnz
push
inc
dec
dec
sub
in
pop
shl
or
dec
push
subl
jns
cwtl
mov
outsl
std
add
inc
notl
cmc
dec
pop
aam
fs
rol
sub
add
jmp
fisubs
loopne
xchg
in
les
popa
adc
cld
xor
sbb
mov
xchg
stc
sub
jmp
add
or
jle
ret
shr
push
jle
cmpsb
fsin
sarl
xor
scas
xor
jbe
dec
jp
movsb
jb
push
int3
pop
push
jp
dec
imul
pop
in
adc
push
lds
loopne
pop
inc
inc
enter
nop
loope
out
movsl
pop
lds
cmp
add
adc
pusha
rcl
inc
pusha
fs
add
lock
xlat
and
sbb
sti
add
add
push
and
dec
xor
addl
cmp
jnp
fs
test
lock
xchg
jns
shll
jmp
fldcw
jo
xchg
loop
push
xorb
adc
jmp
add
pusha
rclb
or
xchg
insb
out
push
in
sub
jge
mov
mov
test
add
mov
push
mov
shl
adcl
imul
push
cmp
lret
jbe
shlb
sub
and
add
push
cmp
or
lods
xchg
mov
lcall
call
fs
push
int3
inc
mov
mov
inc
in
jge
lret
pusha
stos
inc
sbb
cmpsl
int3
lock
jae
add
add
sub
xor
les
in
or
cmpsl
pusha
subl
movsb
fdivs
loopne
adc
movsb
fst
adc
ljmp
add
sarb
jmp
ror
mov
sbb
aas
add
inc
sbb
scas
xchg
adc
mov
loopne
not
dec
inc
adc
xchg
mov
orl
inc
adc
and
movsb
and
outsb
add
shll
or
loope
mov
dec
jecxz
mov
fisubrl
fstl
sti
sbb
jno
test
sub
roll
repz
mov
pop
loope
aas
push
adc
lahf
xor
sub
pop
push
push
test
sbb
add
jmp
jnp
loopne
sbb
outsb
mov
push
stos
insb
add
xchg
shlb
xchg
mov
push
push
fldenv
add
js
sahf
aad
ljmp
pushf
enter
or
adc
or
and
iret
jae
cmp
bound
fnstcw
daa
dec
add
pop
push
lcall
rol
shlw
in
xor
sahf
push
sub
push
int3
mov
or
scas
repz
addb
fsubrl
test
setp
fisubs
lret
lods
or
mov
cmp
in
add
fwait
push
mov
hlt
scas
fisubs
adc
addb
cmp
jo
fidivl
inc
sarb
mov
aas
jmp
jns
inc
xchg
xor
popa
xchg
pop
and
aam
or
push
dec
cmpl
adc
jecxz
movsl
ss
testl
sub
adc
xor
sbb
js
pusha
imul
scas
xor
add
aaa
sub
cltd
and
sbb
cmp
and
movsb
mov
xchg
ret
xor
test
sub
sbb
aad
jnp
fildll
xor
rclb
pushf
sbb
cmp
jo
daa
mov
xor
inc
sbb
sbb
shll
add
cmp
xor
sub
or
xchg
push
cmp
push
xorl
ret
pop
shlb
cmp
ds
arpl
js
mov
out
pushf
adc
mov
enter
push
adc
fiaddl
push
int3
ret
inc
sub
and
xchg
inc
shlb
push
aaa
mov
or
rol
mov
jnp
cmpsb
dec
adc
cmpb
in
loop
lock
insb
ret
push
pop
sbb
xchg
icebp
cmpsl
pop
adc
and
sahf
iret
les
push
fldenv
dec
push
lret
js
xchg
adc
sbb
fadds
lea
sbb
pop
in
push
add
add
cli
cmp
jne
clc
push
pop
mov
and
sub
cmpsb
sbb
push
sbb
fmuls
and
cmp
sbb
cmc
fsubr
insb
jl
jae
push
inc
xor
sub
mov
inc
lret
repnz
lcall
xor
add
cli
jb
push
es
test
adc
std
scas
sbb
mov
jl
les
test
ret
in
xchg
xchg
iret
mov
pushf
lcall
icebp
enter
insb
ret
mov
adc
mov
pusha
sti
scas
add
sets
xor
jae
push
add
sar
pop
lds
cli
cs
in
add
in
dec
addl
lcall
dec
mov
das
aad
stos
add
gs
xor
test
pop
cwtl
je
add
push
loop
add
inc
and
add
insl
cmc
mov
adc
iret
inc
ljmp
add
add
mov
fisttpll
rorb
std
add
mov
cmp
mov
lret
mov
add
add
add
add
and
add
push
add
lods
fistpll
adc
cmpsl
ds
aaa
pushf
mov
fdivl
pop
hlt
mov
mov
or
shrb
std
push
test
jg
dec
pop
add
mov
arpl
add
mov
hlt
pop
inc
cmp
add
pusha
addb
inc
xchg
mov
jg
lret
lea
add
add
out
in
outsl
inc
dec
jmp
pop
cmp
or
ja
adc
or
dec
pushf
pop
push
popf
push
ds
movsb
or
mov
orl
testb
push
mov
cli
mov
stc
imul
mov
push
rcrl
jno
movsb
sub
test
mov
and
and
imulb
mov
or
enter
aam
shlb
add
sub
ficomps
push
ds
push
cs
pushf
pop
popa
mov
cmpb
sub
roll
aaa
pop
test
pop
push
mov
into
add
xor
fistpll
ds
hlt
aam
aam
dec
xor
repz
dec
push
xchg
iret
out
mov
mov
int
dec
push
mov
pop
inc
adc
jl
lock
mov
js
mov
mov
call
mov
mov
lret
rolb
or
cmp
je
add
mov
adc
jmp
aaa
clc
decl
mov
es
cmpl
jmp
fists
cltd
xchg
shlb
int3
incl
sbb
lods
orb
add
out
pushl
or
insb
ficoms
add
out
test
xor
jno
pop
repz
cmp
jg
or
inc
imul
fisttps
dec
cmpsb
xchg
and
inc
movsb
sub
jge
ja
xchg
jge
add
add
sbb
ror
iret
jbe
xchg
test
cs
stos
sbb
mov
negl
les
dec
push
mov
cmpb
pop
adcl
mov
js
xor
dec
test
fimuls
rol
add
in
or
sahf
sub
pop
xor
les
aad
cwtl
jmp
aaa
into
xor
add
fdivrp
xor
add
add
out
popf
jmp
sub
add
mov
daa
aam
scas
in
lcall
push
push
xor
out
shlb
sbb
pop
lods
hlt
pop
push
cld
add
mov
mov
mov
int3
adc
sbb
inc
push
popa
popa
roll
aad
push
push
je
add
mov
jns
cmpsb
loop
sti
add
and
mov
lret
adc
ret
das
aaa
arpl
mov
notb
jle
rclb
in
push
cmp
push
sbb
sbb
ss
add
dec
jp
out
inc
pop
cmp
mov
loopne
loope
adc
subb
pushf
ret
out
mov
dec
flds
jmp
or
jle
pusha
and
add
push
ret
sbb
mov
add
cmp
add
inc
data16
mov
cmp
nop
cmpsb
jg
push
push
sbb
out
adc
cmp
mov
sub
cmp
jle
sbb
sar
test
mov
jnp,pn
lahf
adc
sub
cld
decl
icebp
rorb
fstps
push
dec
inc
stos
pop
fdivrl
xchg
cmp
lods
dec
mov
dec
aam
gs
divl
mov
outsl
or
cwtl
push
inc
les
cmp
inc
stos
push
loopne
fnstsw
call
jle
adc
addl
scas
test
or
mov
hlt
notb
aas
clc
pop
lods
mov
fstps
mov
mov
js
scas
cmp
sbb
mov
pop
push
sbb
fistpll
and
aaa
stc
in
in
or
add
mov
jmp
out
pop
js
or
arpl
cltd
dec
rorb
sbb
add
in
mov
and
mov
inc
sub
jbe
or
out
rorl
outsl
sbb
jmp
lcallw
rorl
aaa
mov
and
cmp
add
pop
clc
inc
roll
popa
int3
lahf
add
mov
mov
jg
jg
shlb
inc
jnp
pop
filds
enter
imull
adc
stos
sbb
loope
xor
js
mov
adc
cmp
aas
and
out
push
rcl
pushf
cmpsb
call
xchg
lock
loop
dec
push
and
dec
push
mov
jge
push
or
sahf
push
mov
push
add
mov
lret
cmc
adc
lcall
xorb
xchg
out
dec
pop
test
cld
adc
fimull
xor
icebp
add
mov
sub
mov
cmc
daa
adc
pop
aad
in
pusha
dec
cwtl
stos
std
aad
sbbb
stos
adc
in
cli
adc
sbb
sbb
cwtl
mov
push
daa
push
into
insb
adc
push
cs
push
sbbb
nop
push
sarl
mov
sahf
xlat
mov
mov
rcrl
out
add
add
sub
jb
iret
clc
pushf
xor
sub
mov
xor
outsb
aad
and
fld1
fadds
add
clc
mov
sbb
cmp
lret
xor
adc
inc
cmpb
aam
popf
out
mov
popa
cmp
pop
icebp
cmp
or
sbbb
ret
sub
mov
pop
inc
mov
adc
jbe
std
push
add
jo
call
fwait
adc
dec
outsb
fdivr
dec
adc
mov
xor
stos
mov
mov
add
out
jo
mov
inc
js
aam
repnz
jp
xor
fdivs
mov
addl
fimull
dec
add
mov
icebp
adcb
cmpl
call
in
sub
mov
mov
push
cmp
jg
lahf
call
mov
rclb
xor
pusha
adc
loop
int3
inc
xchg
sub
out
lahf
fnstenv
push
cmp
in
clc
add
test
adc
stos
in
aam
jne
mov
test
dec
popf
dec
adc
dec
aam
movnti
outsb
jae
jo
cmc
inc
cmpsl
push
inc
xor
mov
push
cmp
cmc
push
es
or
insl
cmp
push
and
stos
push
inc
xlat
scas
cltd
call
pop
pop
in
dec
andb
mov
or
mov
xchg
add
lock
jecxz
mov
sub
push
sbb
sbb
scas
dec
loopne
jb
daa
into
pop
insl
push
xor
jmp
out
dec
xor
adc
jb
lods
or
push
mov
out
mov
xor
xchg
cmpsl
call
cld
out
mov
push
mov
mov
subl
rep
add
lods
xchg
fcom
add
dec
shll
fsubrl
cmc
sub
pop
out
loope
fwait
aad
in
and
popf
xchg
dec
jp
jle
clc
mov
les
je
jo
push
pop
inc
fisttpl
or
mov
pop
pusha
test
push
inc
pop
dec
loope
cmp
dec
loop
ss
mov
movsb
push
arpl
out
or
and
mov
fwait
ret
dec
xor
repz
sub
in
or
mov
sub
data16
add
xchg
add
lret
push
in
fs
mov
stos
adc
pop
adc
push
mov
lea
or
loopne
das
jmp
mov
icebp
jmp
and
xor
adc
mov
daa
push
sub
cld
push
test
sbb
nop
aaa
or
fsub
rolb
popf
loope
push
shrl
jbe
inc
sub
jnp
pop
and
xchg
fists
pushf
outsb
rol
add
in
jl
inc
fsubrs
xlat
mov
adc
mov
mov
scas
add
shufps
add
sbb
jmp
push
and
inc
arpl
push
in
xor
ret
lods
adc
jne
pop
sub
push
cmp
xor
mov
mov
inc
push
push
insb
sti
inc
stos
and
dec
xor
xor
mov
add
mov
int3
js
push
sub
sbb
pop
jp
jge
and
dec
push
adc
xor
scas
adc
daa
xchg
repz
mov
or
daa
adc
inc
mov
and
jae
lds
pop
adc
sbb
mov
call
cmp
inc
dec
repnz
pop
loop
sub
xor
cli
inc
es
call
in
sbb
ret
fildl
inc
add
and
inc
mov
cmp
xor
push
call
mov
nop
and
incb
and
bound
push
jno
push
pop
dec
add
pop
add
adc
xor
sub
ljmp
cmpsb
not
or
loopne
xor
mov
xor
stos
dec
loop
add
jl
out
or
and
push
les
push
mov
inc
jmp
mov
or
add
sbb
mov
dec
sarb
cmp
adc
data16
xor
fnstenv
xor
test
rorl
dec
and
or
adc
push
jnp
int
mov
xchg
sarb
dec
pop
dec
cld
push
cmp
sbb
push
push
outsl
in
lock
inc
aad
mov
xor
xchg
xor
jge
stos
push
mov
mov
dec
cmp
outsl
mov
outsb
ret
push
cwtl
imul
inc
sbb
ljmp
mov
outsl
cmc
mov
test
add
jecxz
push
dec
mov
loopne
addr16
lcall
pop
loopne
cwtl
sbbb
pop
sbb
imul
into
pop
adcl
iret
pop
add
dec
das
pop
loop
mov
stos
jle
dec
jb
ret
sbb
rclb
add
aam
test
test
inc
mov
xchg
mov
pop
loopne
mov
mov
jecxz
add
shll
lods
sub
aaa
pop
pop
mov
mov
jp
xchg
call
test
adc
pop
mov
jle
xchg
ljmp
insb
imul
add
mov
nop
adc
in
rol
push
lods
call
lahf
mov
fisttpl
out
adc
call
outsl
mov
inc
out
inc
mov
push
add
sti
push
lods
or
xchg
in
sub
sbb
jp
push
pop
clc
cmovle
cs
jae
mov
mov
movsl
stos
inc
addr16
rcll
add
testb
outsl
stos
shrl
mov
cmp
or
std
sub
repnz
std
jle
push
add
mov
ret
dec
adc
sbb
jecxz
cmp
add
shlb
out
add
cs
fistpll
and
neg
inc
lock
sbb
mov
fisttpll
sbb
mov
mov
push
mov
pop
dec
fwait
or
push
nop
ret
cmpsb
out
adc
add
push
dec
nop
leave
push
outsl
aam
lds
ret
stos
aad
mov
inc
add
out
push
nop
inc
mov
ret
inc
pusha
movsb
and
decl
cmp
add
jbe
lds
test
and
rolb
test
lock
or
inc
xor
cwtl
jg
outsl
shlb
in
ljmp
dec
inc
cltd
mov
daa
cld
call
mov
daa
or
arpl
add
mov
outsl
push
ffreep
mov
imul
insl
incl
mov
jp
dec
out
stos
or
sbb
sub
add
pop
xorl
in
mov
popa
sbb
lods
lret
jno
loop
int3
push
pop
inc
std
incb
mov
adc
jle
xor
add
cmp
push
cld
decb
lcall
test
pop
push
push
add
dec
mov
stos
push
clc
inc
movsb
jno
jns
mov
cmp
pushf
mov
test
in
xchg
jle
mov
mov
inc
js
mov
or
outsl
lock
push
xor
mov
ret
stos
mov
inc
ret
enter
stc
shll
cmp
inc
inc
cwtl
pop
addr16
add
mov
popa
fistps
sub
add
aaa
and
jge
ret
cltd
inc
jae
add
cmpsl
sub
push
sbb
xor
andb
pop
icebp
ja
xchg
fistpll
and
fidivs
cmp
sub
loope
and
jp
in
sbb
lods
or
sub
call
decl
adc
add
push
xchg
jg
dec
inc
arpl
and
xor
and
adc
icebp
xchg
daa
lods
aas
mov
lds
xchg
sub
pusha
decl
aad
jb
push
lcall
add
add
pop
ret
ret
mov
cltd
lods
push
sbb
cli
mov
fiadds
adc
test
loop
adc
js
mov
inc
mov
pop
and
out
mov
sbb
push
js
ljmp
push
fnsave
stos
repnz
test
gs
xchg
inc
or
test
sub
or
inc
sbb
je
fiaddl
mov
inc
mov
fisttpll
icebp
mov
dec
imul
fldcw
adc
xlat
inc
sub
cmp
add
adc
inc
outsl
xor
adc
mov
fwait
scas
pop
into
popa
scas
add
out
mov
xchg
cmp
xor
aas
pop
jp
xlat
add
pushf
out
mov
insb
cmp
cwtl
sbb
sbb
jae
add
push
adc
mov
xor
inc
in
push
stc
jnp
movsl
addl
mov
sbb
adc
xchg
pop
xchg
mov
push
xlat
xchg
cmp
jl,pt
add
iret
sbb
int
es
das
mov
sub
popa
inc
in
inc
lods
add
dec
stc
mov
sbb
movsl
int3
xorb
in
sub
js
sub
mov
push
adc
xchg
inc
movsl
shrb
cmc
sbbl
mov
in
mov
lods
sbb
pushl
sub
out
and
lahf
mov
pop
lods
lea
sti
pop
lahf
shrl
sub
fistpl
mov
xchg
cli
dec
bound
mov
or
or
adc
or
outsl
push
mov
in
mov
and
fisttps
or
adc
inc
fucomip
into
data16
pop
add
das
insl
mov
or
mov
or
add
pop
mov
lret
or
sub
sbb
dec
or
or
pop
subl
and
aas
mov
in
adcl
andb
adc
sarb
sub
jns
push
popa
xor
cmp
decb
cld
push
jne
mov
mov
pusha
lods
adc
outsl
mov
mov
and
test
jne
fcoml
rclb
jno
mov
pop
clc
or
jge
or
sbb
fisubs
sbb
xchg
mov
jmp
inc
mov
aad
nop
inc
lods
jae
iret
das
les
adc
dec
mov
ret
or
add
scas
jb
mov
in
sar
cmp
mov
iret
inc
call
adc
and
int
mov
cmp
dec
mov
outsl
adc
call
mov
xlat
mov
fdivrp
cs
ret
popf
add
das
pop
dec
in
ljmp
inc
addr16
imul
gs
in
and
std
andb
inc
add
ljmp
stc
xor
iret
icebp
pushf
pop
and
add
mov
negl
lea
add
or
inc
sti
arpl
lock
cmp
pop
jns
cltd
cmp
jnp
cmp
adc
mov
leave
xlat
push
nop
movsb
dec
int
dec
call
xor
cli
shl
lret
test
les
arpl
bound
addb
mov
test
out
rcll
xor
and
fiadds
cwtl
pop
insb
fwait
out
pop
add
lock
and
and
js
cmc
enter
fdivrs
sbb
push
add
add
popa
mov
movsl
dec
push
adc
call
sub
fisttpl
in
mov
clc
xchg
xchg
out
cmp
fs
in
ja
out
aad
lahf
jge
pushl
stos
or
lds
sub
mov
outsb
adc
and
adc
cmp
add
or
push
push
add
adc
fistpll
xor
add
mov
mov
leave
xchg
cmp
sbb
dec
jbe
data16
in
insb
jbe
add
adc
loopne
xor
sub
sbbb
cmp
sbb
sbb
shl
inc
sbb
jno
clc
insb
jbe
rolb
loopne
and
xor
mov
or
xchg
js
cmp
bound
sbb
and
push
clc
and
inc
jb
outsb
dec
test
outsb
mov
xchg
adc
sbb
xchg
xorl
cwtl
xlat
insl
out
enter
push
addb
fnstcw
int3
push
out
jnp
push
test
xor
jno
push
or
daa
push
ret
jnp
mov
dec
cmp
jns
pop
or
sbb
cmp
and
pop
jbe
adc
loop
aad
add
test
aaa
cli
dec
insb
adc
js
and
dec
xorb
jbe
lods
sbb
dec
push
dec
xchg
sbb
xchg
dec
adc
test
sbb
sbb
adc
js
adc
leave
pop
sbb
push
push
cmpsb
adcb
outsb
insb
xor
and
push
lret
cs
mov
andb
outsb
pop
icebp
sahf
insb
out
dec
mov
add
in
lahf
fcompl
mov
rorl
stos
in
sbb
inc
or
je
fwait
loopne
in
mov
sbb
movsb
xchg
cmp
add
inc
out
rcll
inc
or
es
loopne
adc
lret
pushf
cmp
jg
inc
stos
jecxz
and
xchg
adc
out
pop
pusha
mov
jnp
incl
sbb
mov
sub
xor
cmp
push
mov
fsubs
xor
jmp
decl
ds
mov
cld
jmp
sbb
sbb
add
adc
jl
push
outsl
hlt
jle
pop
sahf
mov
icebp
push
push
je
push
mov
aam
std
or
sub
pop
push
push
dec
push
cmp
lea
sbb
mov
movsl
sub
pop
push
mov
stos
cmp
add
movsl
mov
mov
push
add
mov
sbb
xor
or
imulb
ds
and
xor
test
xchg
add
mov
lods
push
sbb
push
jbe
mov
sti
or
bound
or
scas
movsb
pusha
subl
fst
mov
jecxz
pusha
ljmp
jecxz
dec
add
sbb
mov
add
pop
xchg
jp
dec
stc
decl
cmp
aas
sbb
cld
jns
stos
adc
inc
lods
aad
out
rclb
sub
and
cmc
sub
fsubrp
call
pop
stc
sbb
add
movsl
pop
clc
ljmp
mov
mov
xorb
jecxz
pop
mov
icebp
and
sbb
push
popf
xchg
push
or
enter
aam
inc
mov
add
outsl
inc
jg
fists
lcall
xchg
add
cmp
sub
popl
adcb
aas
sarl
in
aaa
fidivrl
inc
gs
jecxz
xchg
mov
call
cld
jecxz
movsb
mov
xlat
aaa
jge
aam
cwtl
pop
faddl
pop
das
inc
inc
icebp
clc
xchg
and
lea
cmp
je
pop
or
sub
in
dec
mov
xlat
ja
push
xor
test
lcall
sahf
out
jl
xlat
aad
outsl
js
mov
bound
or
insl
rcll
aad
int
mov
mov
dec
sbbb
ja
outsl
cmc
dec
or
les
fildll
sbb
jg
std
pushl
aas
adc
mov
push
and
ss
scas
ss
jg
rclb
roll
in
adc
jl
data16
sub
or
sub
xor
jp
jecxz
loope
addr16
xor
xchg
jno
sub
jg
addl
jg
lds
inc
fsubl
lahf
or
neg
fistpl
mov
push
mov
je
pop
dec
sbb
mov
lds
xchg
cmp
push
inc
pop
add
and
dec
loopne
adc
iret
mov
pop
clc
push
sbb
xcrypt-ecb
cmpsl
or
add
xchg
mov
mov
lea
mov
xchg
jo
push
jecxz
icebp
lcall
es
les
lahf
push
xlat
scas
or
dec
dec
jle
dec
ljmp
js
js
add
jp
test
and
scas
int3
loop
enter
dec
in
fcompl
jno
fildll
xor
std
int3
push
dec
dec
push
sub
push
std
test
sbb
sbb
lods
in
and
mov
dec
into
mov
push
loopne
mov
aad
cmp
loope
pop
mov
xor
xchg
push
or
in
add
push
insl
cld
das
push
or
push
arpl
add
daa
dec
dec
dec
adc
pop
xor
xor
rol
mov
repnz
jle
xchg
aam
jp
stos
movsl
push
add
les
jle
mov
inc
mov
movsl
sbb
fmuls
jno
xchg
mov
jmp
movsb
push
clc
jb
xchg
and
or
je
adc
daa
rorl
push
or
cmp
pop
cwtl
fsub
imul
icebp
fwait
push
cmp
adc
lea
or
cli
inc
imul
out
outsb
std
movsl
xlat
arpl
jb
or
xchg
dec
add
out
bound
fcompl
lds
xchg
mov
les
das
ret
cmp
xchg
and
jns
jl
fildll
mov
lods
aad
loop
mov
mov
inc
mov
or
insb
aas
add
test
std
push
pop
mov
add
out
mov
mov
pop
dec
push
xchg
pop
inc
cmc
getsec
sbb
jle
jl
in
jl
movsl
daa
sub
loopne
or
xchg
gs
push
into
rorb
in
xchg
mov
out
das
sbb
popl
push
and
and
xchg
cli
outsl
mov
sarl
jg
jbe
cmpsb
das
sub
in
cmpsl
fiaddl
je
js
repz
jb
imul
jge
aas
ds
push
in
and
push
fists
mov
jns
and
and
sbb
sarl
sbb
mov
mov
xchg
idiv
negb
enter
adc
cmpsb
repz
mov
sbb
mov
sub
jmp
xchg
lret
je
cmp
or
aas
loop
jo
fldt
popa
add
sub
mov
test
das
sbb
push
inc
mov
bswap
cltd
int3
adc
inc
inc
xor
sbb
add
pusha
fisttps
dec
pop
lock
and
mov
mov
aaa
aam
mov
push
xor
in
lock
lcall
sbb
push
push
aam
stos
xor
out
ffreep
xchg
pop
inc
and
push
aam
fisubl
push
test
call
pop
push
cmp
mov
jle
mov
icebp
push
loopne
cli
in
and
or
push
xor
stc
sbb
daa
add
test
xchg
add
test
daa
loop
jl
aam
mov
or
loopne
loopne
lea
push
loopne
aam
mov
xor
out
mov
or
nop
push
aas
cmpsb
jo
pop
hlt
push
pop
push
loopne
jecxz
cmp
pusha
pusha
fwait
mov
adc
divb
add
add
push
js
push
rcrb
mov
inc
stos
push
ret
das
movsl
inc
aaa
mov
xchg
call
and
sbb
sbb
and
icebp
arpl
mov
std
or
sbb
ret
insl
shrb
sbb
mov
mov
mov
sub
movsb
sub
insl
cmpb
movsb
dec
fstpl
addr16
shll
sub
pop
ss
inc
mov
aam
inc
inc
xor
outsb
ret
add
lcall
inc
shrb
test
mov
decl
mov
stos
add
dec
lock
xlat
inc
add
repz
test
cmpsb
loope
mov
and
sub
mov
call
inc
push
xor
stos
mov
shrb
push
arpl
les
imull
mov
out
ret
or
add
mov
shr
mov
clc
pop
lods
dec
xchg
mov
loop
mov
jp
adc
xor
int
xor
call
aam
mov
add
rcll
outsl
xor
or
mov
mov
clc
add
popa
dec
aas
adc
adc
dec
mov
add
xor
mov
or
dec
ljmp
dec
push
cmp
cmp
mov
jo
sbb
clc
in
ljmp
push
aaa
xchg
or
leave
in
xchg
clc
insl
adc
les
push
cmp
sub
xor
sbb
adc
sub
das
jno
push
push
jns
inc
sbb
adc
xor
incl
adc
add
xlat
in
cwtl
or
pop
loop
std
in
loope
in
scas
out
ret
test
mov
mov
lcall
mov
addl
sarb
hlt
xchg
lock
mov
and
and
dec
jno
pop
or
leave
push
rol
mov
fildll
push
sti
sbb
jecxz
xchg
pop
adcb
add
push
cmp
pop
scas
xchg
jb
in
xor
push
pop
cltd
jg
icebp
and
sub
inc
pushf
enter
ffreep
add
mov
adc
sbb
mov
jns
and
clc
and
idivl
data16
outsl
hlt
or
sbbb
adc
je,pn
ja
stc
add
negb
dec
fdivr
dec
faddl
and
mov
push
sub
movsb
pop
mov
mov
jp
orl
mov
sbb
in
and
pop
fwait
stc
dec
hlt
and
pushl
stos
sbb
lret
clc
adc
dec
ret
and
adc
mov
iret
aaa
inc
inc
pop
pushf
outsb
cmpsl
and
nop
call
enter
push
inc
sbb
mov
xchg
mov
jg
das
push
call
xlat
cmp
hlt
push
inc
or
mov
adc
call
stos
inc
scas
movsl
sub
and
lcall
and
jg
fidivrs
push
subl
adc
jb
mov
mov
cs
test
mov
mov
outsl
js
pop
test
or
mov
fistps
push
daa
call
fsts
shrb
xor
inc
pop
call
sbb
push
js
xlat
cmp
adc
pop
mov
pushf
mov
add
and
fmull
sbb
mov
mov
xchg
ss
sub
enter
xlat
push
fidivrl
push
mov
pop
sub
jbe
mov
daa
inc
aaa
jno
std
insb
stos
mov
les
adc
cmp
sahf
sbb
es
and
push
imul
ljmp
mov
loop
ss
xor
sub
das
xchg
pop
test
icebp
inc
mov
fcmovb
xchg
cli
cmc
je
andl
std
lcall
fists
add
push
push
push
xchg
xchg
sub
add
jmpw
call
gs
dec
lea
outsl
test
das
lds
pop
test
and
js
std
out
push
sbb
fdivrl
cmp
adc
mov
mov
test
mov
jle
push
inc
loope
xor
outsb
or
outsl
cs
push
jbe
inc
stc
sarl
fmull
inc
outsb
dec
outsl
icebp
dec
lods
push
int3
pop
lods
adc
and
test
sti
incl
js
rcr
push
inc
jp
dec
cmp
push
decb
je
jno
jo
cmc
inc
jne
fadd
sub
cli
fildl
mov
add
stc
jl
cmc
shrb
dec
aad
adc
jl
dec
pop
clc
ljmp
in
jno
pop
mov
mov
push
shrb
push
insb
loopne
or
insb
xor
test
inc
jns
jl
sar
add
out
sub
xchg
push
jno
sbb
scas
js
repnz
je
loop
sbb
xchg
call
out
dec
stc
mov
and
aas
or
aaa
arpl
aam
out
std
and
dec
fcmovnbe
lock
leave
adc
cmc
das
or
into
or
rclb
xor
lods
fstpl
lods
push
jne
loopne
jmp
pop
icebp
fildll
test
xchg
xchg
cmp
dec
push
sti
mov
inc
andnps
test
sbb
xchg
sti
mov
cmp
sarl
push
cmpsl
pop
push
jmp
lods
mov
mov
add
scas
movsb
push
or
repnz
mov
dec
mov
xchg
filds
jecxz
xchg
push
jo
lods
jecxz
fwait
and
es
pop
or
movsl
or
mov
ret
sbb
xor
mov
shl
adc
lret
mov
jg
js
and
push
inc
push
sbbl
pop
mov
iret
inc
cmpsb
nop
mov
sar
cmp
dec
lahf
iret
call
mov
inc
cmp
out
test
movsl
mov
popl
and
jbe
xor
jle
shr
jg
rcl
into
ds
add
xorb
lea
lret
inc
out
shl
in
aad
mov
jl
sbb
nop
daa
addr16
fnsave
jmp
sub
mov
imull
mov
mov
add
clc
pop
and
or
pop
and
inc
jae
dec
shlb
outsl
and
ljmp
add
ds
notb
ret
sbb
scas
pop
pop
lods
loop
ret
xor
rcr
adc
xchg
inc
add
clc
push
jne
mov
rolb
add
ret
adc
inc
dec
push
pusha
mov
push
cld
das
cmc
bound
loope
cmp
sub
cwtl
inc
xchg
clc
mov
jl
sub
sbb
gs
bnd
rorl
call
shlb
pop
jae
leave
mov
test
add
mov
je
inc
sub
fisttpl
mulps
bound
clc
sbb
rorb
cltd
add
xor
out
pop
ljmp
test
mov
xor
cmp
aam
mov
sahf
pop
enter
add
lahf
sub
push
mov
cmpsb
leave
cmp
out
or
cld
mov
movl
add
dec
add
jae
cmp
insb
js
or
mov
shll
and
mov
aam
adc
in
dec
sub
pop
data16
lock
adc
popf
or
push
dec
xlat
push
xor
jle
push
fstps
fdivrl
jecxz
and
lea
jge,pn
fwait
add
pop
or
adc
fiadds
mov
insl
mov
jle
enter
or
pop
add
jb
xchg
and
fcoml
and
sub
dec
push
xchg
out
and
or
loopne
ffreep
and
and
pop
pop
rorb
push
leave
sbb
not
ror
sti
push
pop
push
xor
jmp
xchg
je
cmpxchg
icebp
sahf
fs
pop
cwtl
js
ds
and
scas
in
es
mov
stc
stos
cmpsb
xor
xchg
jge
adc
push
jnp
les
test
add
addb
test
sub
mov
pop
fstpl
pop
inc
sti
mov
fildl
aaa
push
mov
xor
pop
and
insb
or
push
pushf
mov
jno,pn
sub
adc
push
nop
mov
repnz
incl
jle
and
cmp
cli
xchg
pop
jbe
add
push
add
stos
addb
inc
add
movsb
xor
dec
mov
ds
adc
jb
ljmp
pop
pop
sub
inc
push
ret
mov
mov
clc
and
popf
xchg
stos
adc
out
mov
sub
jne
aaa
cmc
and
js
cltd
sbb
clc
mov
dec
mov
push
mov
out
out
xchg
lods
mov
dec
cmp
lds
and
or
outsb
sub
ficomps
stc
adc
xor
insl
shrb
add
fwait
sub
inc
insb
bound
cmp
or
mov
mov
testl
pop
and
add
popf
pushf
mov
clc
incl
push
test
add
call
lret
pop
mov
dec
imul
jmp
mov
push
setbe
dec
int3
aaa
add
gs
push
es
mov
jns
je
jg
fmull
mov
ret
outsl
bound
repnz
fwait
push
xor
sub
adc
lret
es
addb
in
dec
sbb
and
je
shrl
std
jl
xor
es
and
in
insl
mov
lds
aam
jg
mov
rolb
pop
push
fiadds
add
xlat
xchg
inc
xor
jecxz
dec
xlat
inc
xor
dec
adc
inc
in
jmp
mov
pusha
mov
xor
shll
push
mov
outsl
jbe
adc
mov
in
xor
lock
dec
lret
xor
and
clc
xor
lret
das
dec
aam
mov
ficoms
mov
sub
aad
push
ds
sbb
add
or
jmp
sbb
ret
pop
xor
push
or
add
cmpsb
inc
xchg
cmpsb
push
fidivs
fidivs
mov
fcomps
jg
ljmp
or
fdivrl
and
popa
aaa
jecxz
xorl
jle
sbb
mov
cmp
sbb
xorl
imul
pop
clc
arpl
pop
mov
xchg
pop
dec
or
pop
xor
xor
enter
fidivs
xor
xchg
shrl
sub
xlat
out
pop
fists
jmp
dec
or
cwtl
pusha
mov
mov
mov
or
jnp
and
mov
add
add
loope
jmp
or
fbstp
int3
push
testb
jae
into
movsl
or
push
sti
lock
pop
jp
scas
std
jo
stc
ljmp
inc
pop
mov
mov
fwait
outsl
je
mov
mov
inc
je
and
mov
adc
clc
cmp
lea
adc
pop
adc
push
popl
inc
xor
xor
cmp
pop
jbe
cwtl
shll
popf
mov
mov
push
dec
and
dec
jo
cmp
outsl
je
lods
shll
pop
mov
mov
nop
cmp
push
sarb
add
lods
cmpsb
pop
testl
jmp
push
pop
push
or
icebp
decl
or
jmp
or
int3
adc
and
scas
shl
adc
mov
adc
push
cmp
and
pushf
pop
mov
add
stc
mov
pop
adc
pop
aaa
movsb
add
xor
cmp
fisubs
and
or
mov
mov
in
roll
les
push
cmp
aaa
loopne
add
adc
or
imul
mov
push
mov
aad
fwait
hlt
jecxz
sbb
fstpl
xchg
hlt
inc
adc
hlt
jle
pop
les
add
in
push
in
fisubrs
addl
xor
mov
shlb
mov
jge
cmp
ret
imul
cli
mov
or
sub
jmp
mov
inc
daa
jp
sub
test
mov
mov
push
mov
orb
inc
mov
adc
jge
mov
decb
jnp
mov
add
add
ss
adc
fcompl
sub
mov
add
mov
push
sbb
inc
ret
loop
or
faddp
js
pushf
add
iret
outsl
loopne
mov
or
push
mov
rcr
addr16
jne
ljmp
or
xlat
ret
add
sbb
jne
ds
adc
shlb
sbbl
rcrl
nop
jno
add
xchg
pusha
cmc
jge
loope
aam
mov
sub
hlt
mov
hlt
sub
cmpl
or
add
scas
mov
lret
out
mov
fistps
and
cmp
aam
push
push
pop
add
icebp
sti
inc
or
mov
scas
xor
push
fimuls
lods
js
pop
jnp
jo
xchg
imul
fwait
dec
dec
pop
mov
arpl
pop
cmpsb
pop
add
inc
or
cmc
fimull
out
data16
pop
and
add
scas
inc
test
lods
and
cmp
add
fldl
imull
jne,pt
stc
push
lcall
ljmp
les
lea
add
sub
sub
inc
sub
jbe
inc
outsl
sbb
fadds
push
pop
test
mov
aaa
sub
xor
xor
cmp
fwait
push
inc
jo
xorl
cld
push
pop
dec
and
ret
pop
les
mov
add
fidivrl
mov
sbb
adc
clc
adc
outsb
fsubs
push
fcmovne
adc
outsl
fimull
fsts
stos
mov
add
dec
add
xchg
imul
out
dec
sar
pusha
xor
add
pusha
xchg
pusha
stc
jmp
fsub
into
in
ret
mov
repz
xor
bound
mov
jle
bound
pop
push
aad
fdivrs
aad
pop
inc
into
jecxz
rcr
push
xlat
loope
or
dec
mov
adc
xor
int3
mov
popa
call
lret
out
sub
jo
clc
addr16
push
sbb
outsl
push
std
rcll
movsb
jo
jle
negb
xor
cmpl
push
in
mov
pop
xor
push
or
dec
test
sub
sub
mov
mov
pop
rol
outsb
mov
scas
add
sbb
mov
pop
and
jp
not
add
push
out
sub
in
xor
loope
insl
or
test
mov
mov
in
ja
or
inc
mov
inc
enter
and
sub
or
mov
enter
rolb
or
in
fcoms
inc
in
jecxz
int
adc
lahf
stos
or
test
sbb
nop
dec
in
loope
add
or
cmpsb
push
mov
sbb
mov
shrb
inc
inc
ret
aas
push
fldcw
ret
inc
cwtl
outsl
push
les
cmp
lcall
xchg
xor
add
adc
outsl
push
mov
sbb
pop
outsl
lret
add
pop
mov
or
hlt
or
in
add
mov
push
jnp
push
cwtl
add
loope
imul
jmp
xor
xchg
mov
adc
data16
mov
sub
aam
adc
inc
int
adc
xlat
ss
dec
shrb
shlb
mov
mov
mov
jns
mov
mov
ret
stc
jne
dec
add
lds
subb
cld
rorb
into
loop
leave
mov
jae
call
call
pop
fcoml
pop
xor
mov
in
cmpsl
jmp
push
sub
popf
or
test
fcmovnb
loope
fcompl
inc
lret
sub
movsl
imul
int
pop
and
shll
sub
sub
dec
inc
shl
sbb
dec
dec
jp
and
adc
mov
mov
neg
xchg
outsb
out
xor
loope
add
add
inc
mov
popl
dec
jae
test
mov
push
mov
clc
outsl
pop
ret
sti
enter
and
jns
mov
loope
es
orb
ja
mov
mov
icebp
int
push
xor
aam
and
dec
or
and
pop
xchg
and
push
cltd
out
popa
jl
lods
pop
and
dec
pop
clc
xchg
and
mov
into
scas
sarl
iret
js
mov
mov
or
mov
add
js
xchg
mov
adc
pop
addr16
mov
mov
jbe
push
adc
or
icebp
lret
cmp
mov
lods
mov
dec
outsl
cld
inc
push
int3
mov
sub
mov
rcrl
jmp
or
repz
xor
xlat
adc
jl
fstl
cmp
movsl
mov
jnp
gs
adc
stos
push
dec
das
addr16
mov
pusha
out
lcall
inc
pop
xchg
pop
jle
call
mov
and
add
dec
push
stos
add
stos
sbb
cmpb
enter
mov
mov
popa
imul
scas
outsl
cmpb
std
fbstp
add
push
fildll
pop
repz
outsl
out
xor
push
push
xchg
jne
adc
das
add
fildl
test
jle
cmpsl
pop
mov
testl
or
pop
push
inc
and
call
pop
inc
roll
fsubrs
push
xchg
dec
jo
or
mov
stc
outsb
push
pop
add
ficoms
sub
mov
pop
stos
lahf
lock
gs
mov
add
inc
icebp
mov
psrlq
mov
ret
jno
pop
or
cmpsb
andb
sbbb
loopne
push
or
dec
inc
mov
mov
push
pop
jne
insl
lret
cmp
fidivl
outsl
xor
sbb
push
push
lea
dec
fcompl
cmp
add
add
push
inc
xchg
add
cmp
loope
xchg
and
je
lods
pop
ss
dec
xchg
mov
and
inc
inc
outsb
sti
pop
jo
and
mov
jnp
sar
pop
jne
and
lods
enter
xlat
mov
and
stc
xchg
sbbb
mov
scas
in
adc
je
test
sbb
pop
jecxz
fcomip
aad
dec
jmp
xchg
jb
in
mov
jg
pop
jecxz
enter
aas
add
test
sub
xchg
out
dec
in
jo
lods
jne
push
add
outsl
cld
outsl
and
dec
test
cmp
pop
stos
andl
loop
sub
rorb
loope
adc
filds
pop
and
push
dec
lds
idiv
push
std
ljmp
pop
je
and
out
loop
inc
iret
or
ja
sub
add
out
jo
aas
jb
inc
inc
inc
in
outsb
je
outsl
fwait
push
aas
sbb
dec
xchg
negl
cmp
jle
or
clc
test
in
inc
add
repnz
adc
add
in
negl
fstpt
pop
push
aaa
add
mov
int
mov
push
mov
pushl
inc
mov
jo
test
cpuid
ret
ljmp
mov
inc
out
xor
cmp
shrl
xchg
pushl
icebp
xor
hlt
cld
add
xchg
imul
call
mov
stos
sar
les
iret
fldl
sbb
dec
jo
xchg
dec
cmp
push
loope
or
cmpsb
ljmp
gs
pop
push
js
jle
xor
pop
fs
add
das
cld
fildll
sub
repnz
repnz
pushf
lahf
jecxz
pop
or
ret
mov
mov
sub
into
cld
sub
fsts
jno
testb
scas
loop
and
lea
adcb
xor
pop
scas
jecxz
xor
pxor
daa
int
pushf
jg
mov
jb
cmpl
inc
std
lcall
push
cmpsb
mov
sbb
add
push
and
mov
or
xchg
int
pop
in
jo
cmp
jge
cltd
xchg
push
push
sbb
adc
movsl
mov
clc
mov
sti
jg
aas
gs
add
xlat
fwait
adc
and
xchg
mov
rolb
dec
imul
mov
jne
mov
lods
fldl
cli
in
adc
adc
inc
or
dec
and
fwait
jge
mov
inc
add
mov
inc
addr16
cmpb
jns
jbe
je
cmpsb
lret
xor
aaa
mov
clc
mov
xchg
out
adc
pop
outsl
or
lock
push
ss
ret
movsl
test
inc
mov
lods
sbb
dec
pop
je
fstpt
or
xorb
jo
decl
test
pushl
sub
repz
aam
rol
and
aad
mov
outsl
cli
add
fistps
pop
or
test
fcmovnbe
gs
dec
push
mov
cli
jg
int
popa
sarl
in
mov
jno
shr
loop
mov
sub
in
add
jl
sti
jge
sub
push
stos
pop
test
cli
push
leave
dec
xor
jge
lcall
out
jno
sub
push
scas
sbb
sub
jo
pmaxub
add
mov
cmc
aaa
std
xchg
aad
jge
movsb
cs
mul
icebp
loop
call
cwtl
adc
xor
pop
ss
out
add
arpl
cmpsl
rorb
jg
add
xchg
imul
das
mov
jmp
cmp
mov
ljmp
rcrl
xchg
or
pop
int3
enter
out
or
sub
xor
fdivr
mov
adc
push
outsb
fadd
pop
jp
in
mov
test
sbbl
pop
and
or
jmp
in
inc
mov
bsf
mov
cmp
sub
jmp
fwait
push
and
mov
loopne
inc
lcall
and
sbb
hlt
pop
or
int
rcl
insl
xchg
mov
jp
jnp
stc
and
dec
adc
outsl
fsubl
daa
mov
adc
dec
mov
xlat
xchg
sbb
xchg
inc
out
inc
stos
cmp
and
out
incl
rolb
imul
or
pand
push
call
push
mov
push
pop
in
sub
test
mov
push
add
xchg
loopw
cmpsl
or
ljmp
sub
js
or
push
mov
sbb
xor
and
mov
and
sbb
movsl
pop
push
repz
jbe
outsb
push
das
mov
test
xchg
cmp
xchg
jne,pn
lea
ss
mov
mov
jmp
adc
inc
jmp
xor
outsb
pop
ss
rcr
jge
sbb
vcomiss
pop
push
pop
cwtl
rorb
and
jno,pn
push
and
sbb
inc
mov
pop
leave
call
fs
ret
xor
and
cmp
lds
mov
ret
popa
inc
scas
push
fs
fisttpl
xchg
jns
jmp
inc
hlt
push
outsl
xchg
dec
lret
js
in
stos
insl
mov
dec
jne
call
sub
in
pushf
xor
xlat
sarl
sarl
jg
dec
les
std
pop
je
jp
dec
jnp
sub
xor
fsub
mov
pop
jecxz
jns
jl
xchg
rcr
shl
aaa
addb
popa
imull
outsl
rorl
pop
mov
sbb
movsl
sub
add
inc
dec
jge
inc
push
ljmp
call
popa
je
pop
inc
cwtl
push
jge
les
xor
aas
repz
lcall
mov
sbb
fimuls
insl
inc
ljmp
mov
adc
push
iret
jo
loopne
fbld
push
stos
nop
cmpsl
xor
imul
pop
mov
stos
call
add
aad
mov
inc
arpl
and
or
pop
or
stos
sub
inc
sub
pop
mov
cmp
pop
jp
pop
cs
nop
in
fbld
call
sbb
jno
sub
push
push
sub
sub
jg
dec
xchg
sbb
ss
and
or
or
fidivs
or
fs
add
or
fildl
mov
push
mov
mov
sub
jg
leave
ja
push
pusha
mov
decb
cmpsb
mov
das
jle
cwtl
mov
jg
xchg
push
jnp
xchg
popa
imul
pop
add
mov
mov
in
cli
imul
and
pop
jl
push
cltd
lock
xorb
mov
mov
popa
pop
outsb
loopne
dec
jle
stos
inc
pop
into
cmp
mov
mov
sbb
jle
lahf
mull
fwait
test
jo
mov
dec
ror
ja
cld
mov
jp
and
dec
add
push
adc
repz
orl
mov
sbb
rorb
and
pand
outsl
adc
fs
jbe
jb
adc
aam
dec
out
mov
pop
loop
sub
mov
push
push
rclb
jmp
test
andl
enter
lcall
adc
call
lcall
clc
jg
icebp
in
push
and
add
arpl
fistl
xor
inc
out
xchg
pop
inc
and
pop
sub
mov
and
cmc
push
pop
jge
sbb
mov
add
lahf
mov
pop
adc
sub
adc
js
rcll
push
and
cmc
cld
lock
inc
sbb
pop
les
sub
inc
repz
sub
add
pop
add
test
in
add
push
popa
inc
les
mov
les
or
jg
xorb
lea
lahf
push
and
sbbb
into
movl
or
jmp
mov
and
inc
mov
jno
mov
xlat
cmp
or
lret
push
rorl
sbb
mov
or
leave
add
inc
adc
bswap
or
inc
jl
add
xor
pop
fdiv
rcrb
add
xor
fisttpl
test
addr16
jne
movl
out
push
or
add
movb
mov
or
dec
jno
cld
pop
pop
aaa
mov
mov
clc
adc
inc
loope
xchg
fidivrs
fs
mov
dec
jp
sti
imul
or
inc
add
mov
lds
lock
lcall
sarb
sub
lods
aaa
jno
add
in
adc
or
mov
xchg
mov
int
add
add
add
adc
ret
dec
cld
push
les
jb
mov
push
imul
xchg
jle
divps
mov
fsubr
add
mov
xchg
push
pop
roll
push
mov
pop
cltd
stos
dec
mov
subb
mov
mov
add
mov
out
mov
arpl
or
into
push
xor
mov
inc
je
xchg
mov
movsl
adc
arpl
pushf
clc
cmc
sub
sahf
sub
out
data16
int3
mov
and
mov
jp
jle
mov
clc
inc
fsub
sbb
mov
nop
fwait
pop
and
loopne
rcrl
sbbb
jmp
cmpsb
mov
and
inc
js
xchg
sbb
ret
mov
repz
clc
pusha
rcll
int
shrb
test
jmp
sbb
jbe
fs
cmp
sub
adc
xor
daa
sub
mov
daa
add
daa
cmp
inc
int3
and
cmc
out
or
or
out
fwait
loope
xchg
loope
jp
xchg
or
cwtl
and
xor
hlt
outsl
adc
lds
jb
jnp
sbb
push
jae
xchg
jmp
push
loop
xchg
lahf
cmpsl
cwtl
dec
call
dec
or
sbb
cmp
jno
xor
xor
in
xor
mov
mov
xchg
lods
pop
adc
xchg
cmpsl
adc
adc
mov
cpuid
xor
sbb
icebp
mov
xlat
mov
rcll
movsb
and
pusha
ret
or
mov
shl
cmpsl
daa
push
lea
jmp
ss
mov
push
fists
fcmovnu
dec
hlt
dec
repz
jae
not
sbb
inc
xor
xor
imul
cmp
sub
fisubrs
inc
std
xor
fcompl
aam
stc
shl
xchg
fld1
mov
popa
push
hlt
jl
adc
mov
rcr
sbb
test
dec
mov
cli
rcll
punpckldq
hlt
xchg
shrb
mov
cs
cmp
mov
testb
in
mov
clc
mov
jl
stos
rcrb
fucomip
leave
ret
adc
mov
xor
lea
and
imul
mov
decl
roll
fiaddl
sub
xchg
test
dec
cmp
std
jge
femms
imul
movsb
rcrb
roll
mov
out
shlb
add
testb
mov
mov
test
lret
add
insl
outsl
pop
mov
mov
mov
mov
dec
sbb
insl
loope
pop
pop
xchg
test
jmp
sub
arpl
add
mov
xchg
es
cmp
xchg
sub
dec
cmc
jle
mov
mov
mov
jl
jg
cmp
movsb
xchg
pusha
mov
mov
lret
movsl
mov
pop
in
sbb
sbb
lea
rclb
lods
outsb
fdivs
cmp
sub
mov
jae
loopne
cwtl
cmp
ret
xor
lcall
lcall
test
adc
lret
add
cmp
and
cwtl
pop
inc
mov
xchg
mov
jne
inc
loopne
ret
aaa
push
push
and
sbb
push
cmpsl
adc
add
mov
fiadds
cmp
ret
add
add
addl
out
mov
outsb
pop
dec
pusha
out
iret
push
mov
out
sbbl
mov
jnp
loope
lahf
push
xor
jle
loopne
jmp
and
pop
add
imull
test
insb
mov
adc
add
ja
or
and
mov
lock
jnp
adc
adcb
and
gs
fildl
jg
fadd
popf
lahf
xor
xchg
xor
jp
push
aaa
pusha
test
mull
fistpll
test
cmp
pushf
push
loop
inc
sbb
pop
xchg
or
in
pop
mov
xor
or
les
pop
or
mov
icebp
fiadds
cmpxchg
jmp
push
rclb
lahf
fdivrl
mov
in
cmp
add
nop
ds
and
or
or
adc
add
cmp
flds
outsl
mov
fcom
sub
jge
push
inc
fistps
mov
cs
cs
je
mov
cmpsb
dec
cs
lea
outsl
mov
mov
push
js
adc
mov
das
mov
lock
gs
mov
xchg
pop
adc
cmp
cmp
out
or
lret
adc
push
aas
je
sbb
fistl
int
sub
bound
or
lods
insl
stc
mov
cmp
adc
mov
es
pushl
dec
shlb
adc
mov
mov
jo
pop
lock
mov
push
xchg
test
mov
or
mov
mov
push
sub
outsb
and
xchg
lods
push
nop
xchg
mov
push
add
cmp
fisubrl
or
adc
lahf
mov
sbb
arpl
loope
and
and
es
push
inc
fucomi
inc
mov
push
and
sbb
add
xchg
adc
outsl
push
fidivrs
fcos
pushf
pop
inc
push
mov
add
arpl
push
std
push
sbb
jg
xchg
inc
fstpl
fnstenv
inc
rclb
andb
push
flds
jnp
enter
sub
or
enter
or
add
cli
in
js
daa
push
hlt
xor
mov
mov
xor
push
movsb
lret
repnz
inc
adc
mov
mov
and
dec
adc
insl
inc
add
and
mov
pop
imull
into
dec
jo
cwtl
dec
bound
fimuls
cmp
mov
mov
aad
xchg
mov
bound
push
jl
inc
jne
mov
idivb
outsb
lock
xchg
pop
rclb
push
push
pop
in
pop
pop
aad
mov
sbb
cs
dec
nop
fwait
push
int
adc
add
or
clc
and
cmp
loope
rcl
movsb
xchg
test
mov
xchg
adc
cmp
adc
pop
pop
adc
sbbb
inc
sbb
int
or
sbb
les
mov
icebp
aam
into
sahf
add
push
sbb
cwtl
inc
mov
mov
and
sbb
ljmp
subl
aam
or
clc
minps
and
inc
adc
and
xchg
and
cmp
sbb
iret
jnp
jp
sbb
fisubl
jne
inc
push
push
jbe
pop
and
cmp
addr16
mov
stc
test
mov
sub
push
loop
out
loop
mov
repnz
pop
xor
jns
in
sub
hlt
out
sub
orb
xchg
lock
clc
sbb
push
aad
mov
clc
ja
js
inc
js
mov
mov
adc
and
adc
sub
jmp
cwtl
sbb
lret
fsubl
shlb
fldt
dec
scas
data16
incl
cli
dec
lods
inc
sub
test
pop
cli
or
cmp
sbbb
mov
or
rclb
nop
or
in
xor
in
loope
dec
cmpsb
scas
add
inc
and
inc
sbb
and
xchg
pop
sbbb
pop
mov
push
int
repz
or
scas
inc
xor
or
repnz
push
ds
mov
and
aad
into
sbb
jns
adc
or
sbb
inc
das
mov
jne
clc
xor
ja
cli
mov
dec
sub
inc
daa
cmp
out
mov
mov
cmp
dec
repz
sarl
leave
sub
add
xlat
into
cltd
in
rcr
rcrb
test
lahf
in
jae,pn
mov
movsl
mov
mov
inc
push
mov
dec
jo
mov
mov
fisttps
pop
jmp
and
adc
mov
dec
pop
inc
and
lcall
sub
cwtl
pushw
jmp
adc
lock
mov
push
jg
jg
pop
adc
and
dec
inc
int
and
sub
sbb
cltd
pop
dec
int3
dec
adc
test
lock
pushl
movsb
dec
and
pop
xchg
and
shlb
cli
sub
fists
decb
cmc
mov
fbstp
cmp
xor
xor
jl
add
test
xor
push
pop
adc
orl
pop
lock
fisttpl
aaa
mov
jne
gs
inc
lahf
pop
add
cmp
jnp
bound
sub
cld
pop
mov
and
pusha
mov
fdivs
jg
rolb
aaa
clc
and
cld
stos
divb
std
push
pop
popf
jp
or
ds
mov
jle
ret
xor
dec
iret
and
lods
fstps
rcrb
or
lock
loop
xchg
and
cmp
faddl
mov
adc
leave
xorb
lcall
dec
xchg
add
push
andb
lcall
jne
notb
cmp
int
mov
xor
pop
dec
loope
icebp
mov
out
xor
int3
mov
push
push
sub
pusha
fldenv
xor
and
add
sarb
std
pushl
in
movsl
xor
mov
mov
push
pop
xor
lock
fldl
cmp
ret
sarb
xchg
or
in
pop
incb
fdiv
push
mov
mov
sub
mov
sub
popf
into
imul
aaa
pusha
pop
pop
aaa
jo
cwtl
pop
cwtl
mov
nop
in
dec
sbb
clc
push
jl
mov
call
or
sbb
or
add
mov
insb
insb
fidivrs
aam
pop
je
dec
jne
out
xlat
mov
clc
pop
xor
arpl
out
dec
fwait
add
mov
loop
fstpl
cmp
jb
jg
cmpsb
bound
mov
popf
add
fbstp
mov
mov
decl
mov
jnp
lds
testl
mov
add
pusha
arpl
gs
in
cmp
icebp
dec
dec
popf
xor
adc
das
pushf
insl
arpl
cmp
lds
into
outsl
fbstp
cmc
adc
mov
mov
lods
push
sub
push
push
jg
out
in
cmp
icebp
fucomip
lahf
add
add
aam
pop
fbld
push
frstor
cltd
std
les
std
cmpsb
fstpt
pop
jecxz
or
jno
fildll
jge
es
rcll
pushf
jbe
fnstsw
andl
push
repz
xchg
test
out
mov
cli
dec
push
mov
xchg
xor
or
addr16
dec
push
pushf
in
xchg
xchg
fists
mov
je
dec
or
nop
push
sbb
into
outsl
adc
rolb
pusha
sub
inc
sar
sub
pusha
mov
out
test
fisubl
aaa
lret
xor
stos
push
jp
aaa
jle
jno
out
inc
rclb
shrb
cmp
in
fmuls
sbb
cmp
mov
lea
lds
rcr
jecxz
adc
dec
push
jae
ljmp
add
mov
or
mov
orb
cltd
mov
add
inc
fistps
std
test
xchg
mov
push
sub
cld
inc
and
and
pop
pop
pop
lds
arpl
jge
fbld
push
stos
cmpsb
and
ret
dec
dec
clc
mov
div
push
sub
enter
sbb
mov
xor
mov
add
outsl
jno
aaa
jnp
and
pusha
ss
rcrl
call
and
pop
ds
and
jbe
lcall
mov
sub
in
test
nop
add
test
mov
popf
mov
aas
cld
cltd
mov
jo
sbb
adc
sub
pop
mov
pop
fadds
nop
lcall
bound
popf
xchg
xor
sti
dec
push
addb
inc
in
cmp
and
out
shll
les
jmp
cld
and
xchg
inc
add
inc
mov
and
loopne
loop
jl
sbb
outsb
movsl
test
adc
add
push
dec
and
enter
dec
mov
xchg
pop
or
lahf
hlt
adc
jp
or
mov
fisubrs
and
popa
and
dec
mov
inc
shlb
int
fiaddl
int3
dec
stc
and
and
daa
and
inc
xor
fadds
out
fcmove
js
stos
pop
push
xor
data16
imul
neg
jnp
out
push
jp
in
mov
arpl
inc
in
sbb
fwait
pop
fadds
xor
bswap
push
stc
sbb
adc
fsubrs
mov
mov
pop
shlb
add
sbb
mov
xchg
xor
rcll
outsl
cmp
pop
movsl
and
jnp
cwtl
push
je
dec
mov
xchg
aaa
inc
sub
nop
ret
sahf
adc
dec
sub
inc
mov
mov
repz
adc
aad
hlt
cmp
and
push
call
mov
addb
xor
inc
popa
test
pop
test
add
scas
or
xor
jno
or
push
jno
dec
push
xor
lret
xlat
push
insl
or
test
mov
psubusw
enter
xor
in
arpl
jbe
lds
mov
cld
fcompl
xchg
mov
addr16
or
insb
and
sub
cld
shl
addr16
int
dec
xchg
push
dec
mov
jo
lahf
rorl
inc
push
fcompl
inc
inc
push
ds
sbb
roll
inc
icebp
and
xchg
loope
out
and
fwait
mov
inc
push
test
fcomip
push
mov
or
lcall
jg
sar
lock
lret
pop
push
cmp
lods
or
xchg
add
loop
int3
and
push
idivb
in
aaa
mov
rorl
scas
pop
pop
mov
scas
loopne
loop
stc
roll
push
std
xor
adc
push
mov
imul
pop
inc
fmull
das
push
mov
ss
andb
sti
mov
fistpl
add
shll
cmp
mov
aas
shrl
outsl
add
mov
pop
mov
lea
push
in
stc
outsl
imul
fildl
iret
mov
sub
jg
aaa
pop
jae
insb
mov
test
sub
mov
pop
loopne
ljmp
scas
nop
jne
xor
clc
fcmovnu
push
pop
mov
cmp
mov
xchg
out
es
jno
sub
inc
jge
jg
jge
addb
loopne
add
cmc
out
fistl
sub
sahf
mov
or
pushl
push
stos
jg
xchg
pop
jg
incb
mov
cmp
or
mov
pop
js
jg
cltd
cwtl
mov
nop
mov
sbb
cmc
pop
in
sub
push
xchg
mov
inc
add
popf
popa
cli
incb
call
stos
pop
ja
adc
sbb
sub
push
mov
cld
inc
mov
jb
shrl
ljmp
rcr
mov
mov
or
sti
add
and
sbb
mov
addb
insb
into
mov
outsl
inc
cmp
sbb
or
arpl
add
out
mov
mov
xchg
adc
loope
pop
imul
pop
push
in
aam
cmp
out
adc
out
mov
shlb
dec
out
and
adc
arpl
jo
xor
jg
mov
push
not
add
mov
pop
dec
les
xor
add
test
ret
fadd
mov
fs
hlt
mov
mov
pop
aam
movl
adc
mov
sarl
icebp
int
adc
ficoms
push
xor
andb
addr16
cld
mov
mov
cmp
les
inc
loope
and
inc
jmp
xlat
add
inc
inc
sbbl
jle
jge
cmp
adc
cli
push
out
jo
cmpsl
call
sub
sub
mov
inc
dec
add
adc
add
or
inc
test
add
dec
add
sbb
adc
enter
scas
mov
adc
sbb
stos
cmpsb
dec
jg
pop
xor
out
std
sbb
bound
pop
das
mov
in
inc
scas
adc
aaa
out
xchg
dec
mov
loopne
push
rolb
and
and
inc
mov
inc
loop
pop
mov
jle
mov
cmp
jnp
stos
inc
ss
add
jb
int
jg
pop
aad
fldl2e
icebp
inc
xor
andl
jecxz
and
push
aad
mov
sub
add
ljmp
imul
xchg
dec
std
mov
push
loopne
pop
adc
pusha
mov
pusha
jo
push
jl
ret
mov
loop
sbb
mov
add
pop
push
sbb
xchg
loopne
roll
jg
adc
stos
jne
dec
test
sbb
or
ljmp
xchg
in
loopne
sub
pop
add
movsb
push
cmp
gs
fiadds
out
fists
add
and
loope
add
inc
lahf
xor
shrl
adc
adc
add
inc
sbb
stos
out
dec
ret
cmp
pop
call
mov
pushf
imul
jge
rolb
xor
daa
and
ret
adc
mov
jbe
or
inc
mov
or
adc
sub
popa
sub
clc
cmpb
ss
xor
mul
aad
add
shrb
or
adc
loopne,pt
ret
lcall
pop
clc
rolb
scas
rcll
scas
cmp
outsl
jge
adc
lods
out
adc
ja
addl
and
sbb
cli
fldenv
enter
mov
adc
in
lret
and
into
push
dec
lahf
or
mov
pop
test
pop
bswap
stos
cmp
mov
push
hlt
pop
hlt
out
das
dec
movzbl
cli
mov
clc
hlt
insb
lcall
fists
mov
add
add
iret
push
or
cmp
negl
adc
push
and
ja
mov
cmp
fcompl
mov
dec
movsb
cs
inc
mov
inc
lea
mov
and
lar
mov
xchg
fcmovbe
scas
popa
fmulp
out
and
cs
adc
fstps
rcrl
push
inc
mov
push
into
or
xor
push
sbb
popl
cwtl
push
std
jbe
xor
mov
and
push
les
scas
cmp
into
xor
lock
fldt
sarb
xchg
dec
pop
insb
xchg
arpl
push
test
imul
and
daa
cmp
call
inc
pop
movsb
xor
fneni(8087
dec
les
lds
sub
leave
sub
push
test
or
rclb
iret
inc
add
ret
or
lcall
add
cmp
ret
lahf
pop
in
imul
mov
test
sub
dec
pusha
add
adc
add
hlt
mov
popf
cmp
lret
add
mov
or
loop
rclb
push
aam
mov
arpl
and
addr16
loop
push
inc
ud1
loope
and
ror
pop
jo
inc
add
jecxz
push
inc
mov
mov
or
enter
jp
pop
or
ds
shl
sti
sub
cmc
push
pop
fnstsw
cwtl
mov
cld
dec
push
arpl
sub
or
test
adc
add
cwtl
outsl
add
outsl
mov
loopne
mov
pushf
and
mov
sbb
add
mov
enter
mov
inc
dec
xor
outsb
or
or
inc
push
and
add
inc
sbb
adc
pop
add
mov
sub
cmp
adc
hlt
fbstp
ja
dec
push
add
add
into
xor
mov
sbb
dec
scas
cmpsl
arpl
sbb
dec
jne
xchg
push
lcall
in
fidivrl
js
lret
dec
xchg
movsb
jge
pop
adc
arpl
mov
idivb
xchg
adc
loope
lea
or
test
lret
loopne
mov
nop
icebp
cs
inc
cs
outsb
das
sar
inc
out
add
mov
popa
js
sub
pushw
add
lret
cmp
cmp
lods
push
push
test
aaa
pop
mov
mov
fistl
sbb
mov
cs
je
dec
dec
dec
add
push
pushl
aaa
fiadds
mov
pop
xchg
pop
cmp
jmp
adc
ret
call
insl
and
cmp
and
insl
add
or
outsl
lds
mov
imul
pushf
clc
out
add
lods
popa
pusha
sub
jmp
arpl
xor
cld
jns
push
sar
outsb
or
dec
and
lcall
stos
sti
cmp
test
insb
mov
or
insl
mov
pop
cmp
sub
fs
mov
dec
add
ja
rolb
xchg
cs
jl
add
test
cmp
or
loop
inc
cwtl
adcb
mov
mov
dec
out
mov
jle
pop
ficoms
call
mov
shlb
pop
mov
add
mov
add
repnz
push
leave
fisttps
aad
add
cli
popf
push
and
push
sti
xchg
lcall
jl
mov
das
ret
cmpsb
push
orb
add
pop
or
cmp
mov
out
test
test
xchg
in
imul
stos
insb
aad
mov
add
and
adc
lretw
call
andl
xor
aad
or
sbb
push
ljmp
jne
mov
outsb
jne
mov
mov
lcall
push
popa
neg
or
sub
rcrb
rcll
add
out
ljmp
fwait
stos
push
call
clc
add
mov
mov
or
pushl
add
imul
add
loope
outsb
or
lods
outsl
mov
dec
scas
mov
xlat
dec
adc
rorb
imul
push
adc
mov
in
test
sti
adc
jg
fisttpl
add
es
sub
call
loope
stos
push
sub
add
jp
xorb
fldenv
leave
fmul
ja
outsl
lds
rorb
mov
incb
inc
outsl
iret
inc
pop
pop
dec
test
xchg
call
pop
and
es
fwait
pop
icebp
push
pop
out
add
inc
ret
insl
cmpsl
mov
iret
cmp
xchg
dec
inc
icebp
call
enter
pushw
sbb
push
lods
sub
aaa
incb
jg
popa
insb
xlat
inc
lock
addr16
xor
jg
mov
push
inc
jmp
in
outsl
mov
jp
sub
mov
pop
daa
and
sub
and
xor
mov
jl
xor
inc
rorl
les
adc
and
insl
push
test
imul
es
jl
push
adc
add
ss
dec
inc
mov
aaa
pop
pop
pusha
mov
xchg
adc
pop
and
lock
push
mov
lea
pop
and
out
ds
xchg
xchg
push
jge
out
cld
sbb
dec
repz
fimuls
push
stc
out
mov
xor
xor
push
test
jmp
sub
adc
dec
scas
and
in
enter
mov
xchg
movsb
push
das
xchg
and
cltd
inc
mov
xor
or
fwait
or
pop
out
test
les
ror
shl
mov
xor
das
nop
xor
insl
idiv
imul
mov
push
adc
pop
cmp
push
xlat
ljmp
jb
dec
xchg
jecxz
dec
pop
push
arpl
cmp
negb
xor
sarb
in
into
pop
add
adc
sbbb
adc
mov
inc
daa
sbbb
in
jge
ja
mov
or
push
add
fcmovnb
dec
pop
out
pop
mov
js
push
hlt
xchg
mov
inc
add
dec
mov
clc
ljmp
std
stc
in
cld
cmp
or
sbb
stos
push
orb
add
jae
out
test
sub
into
adc
rcrb
xor
aaa
incb
lods
rclb
dec
inc
aas
fists
sub
outsl
jge
dec
outsb
outsl
mov
jle
add
dec
lcall
add
loope
sub
orb
mov
das
rcr
sbb
aas
and
cmp
js
cwtl
int3
fistpll
pop
dec
ljmp
inc
fdivrl
ljmp
and
test
aad
pop
jge
cmc
jmp
adc
shrl
fcompl
loopne
repnz
ljmp
lea
mov
sti
push
mov
je
sub
cmpsl
xchg
adc
mov
bound
jecxz
mov
addb
and
sti
sub
mov
add
fwait
lds
xor
inc
adc
push
pop
scas
add
xor
xchg
popf
in
fisubl
popa
push
mov
fcoml
jge
inc
mov
mov
xor
lods
aaa
xor
xor
mov
mov
pushl
out
loopne
loope
test
dec
jl
dec
cmpb
mov
push
rcrl
inc
dec
mov
fisttpl
pushf
xchg
add
icebp
xor
dec
jne
sub
roll
add
int3
shr
add
add
add
test
pop
push
shrl
xor
aam
sti
mov
or
sub
ds
sub
pusha
adc
push
add
ja
jle
lret
xor
ds
jmp
in
pusha
and
adc
jp
call
cmp
xor
add
outsb
xchg
sbb
xchg
mov
push
shlb
add
sbb
dec
cmp
sub
lds
sub
inc
push
or
insb
push
lock
lret
in
jp
sbb
daa
fwait
test
pop
push
std
out
es
aad
arpl
xor
jno
leave
mov
push
in
addb
mov
xchg
pushl
adc
mov
mov
or
xchg
inc
push
cmp
daa
shl
mov
mov
sbb
jns
adc
sbb
adc
aam
push
add
mov
inc
and
ret
bound
add
repnz
inc
push
dec
mov
shrl
lahf
add
das
loop
ret
stos
lret
pop
xchg
and
add
cmp
dec
adc
daa
ret
mov
enter
xchg
mov
pop
jae
dec
push
or
mov
sub
add
add
add
fcmovnu
lods
adc
stos
addps
hlt
repz
pop
dec
bound
inc
add
mov
imulb
cmp
lods
and
sbb
ja
cmp
adc
js
jne
dec
sub
xor
and
push
adc
mov
sbb
adc
daa
pop
mov
outsl
or
insb
orb
push
push
inc
and
add
rcr
and
icebp
sub
clc
inc
mov
hlt
ds
inc
in
outsl
push
xor
rcll
jae
add
mov
and
std
or
fstpl
push
adc
scas
inc
subl
jno
xchg
sti
add
adc
stos
nop
addl
sbb
mov
cmpsb
pop
jge
inc
mov
test
lret
or
or
mov
xchg
push
add
mov
mov
and
mov
ja
and
imul
or
sbb
stos
add
test
jl
int3
inc
pop
cltd
inc
lcall
out
jmp
loop
add
adc
dec
sbb
repz
int3
xorb
jmp
mov
repz
jge
adc
add
sar
sbb
movsl
fsubrp
icebp
rclb
test
rolb
push
xor
loope
fsubrs
mov
fcoms
loopne
mov
mov
push
add
es
lcall
fstps
jno
inc
lock
stos
adc
into
subb
lcall
mov
adc
xor
cmp
in
or
pop
in
dec
jae
and
adc
xor
bound
and
inc
mov
sub
sbb
sbb
or
mov
inc
sbb
aad
and
inc
andb
ss
or
les
icebp
pop
imul
mov
jo
and
mov
mov
mov
rorb
sub
jns
sbb
mov
stc
jae
sbb
cmp
lock
xor
test
and
pop
mov
adc
xor
lds
xchg
sub
push
aad
aas
sub
add
or
add
jmp
add
xor
dec
xor
pop
or
andb
shlb
imul
sti
pop
into
cli
adc
push
ja
sub
push
fsubl
pop
xchg
push
daa
and
xor
inc
scas
xchg
in
cmpb
or
sbb
dec
gs
pop
inc
add
and
cli
cld
fdivrs
jne
push
and
mov
xor
add
lcall
or
je
add
into
xchg
in
and
xor
loope
mov
jg
popf
adc
dec
push
imul
es
movsb
pop
sbb
xor
inc
inc
movsb
mov
stos
push
sarb
shl
into
sub
add
sbb
cmp
sarb
adc
mov
fsub
das
inc
push
inc
lods
lds
imul
xchg
and
sbbb
pushl
or
cwtl
jbe
iret
mov
sub
shll
roll
push
out
into
cli
or
hlt
cmpsl
daa
popf
dec
add
jmp
cld
jne
sub
movsb
out
nop
out
out
fldenv
shrb
aaa
hlt
and
dec
outsl
int
ja
fsts
push
pushf
dec
inc
pop
mov
xor
xor
mov
sub
pusha
or
inc
mov
jno
cld
inc
push
fistpll
dec
arpl
pop
push
sub
fcompl
sub
push
mov
mov
push
std
sbb
stc
movsb
push
push
fdivrs
daa
les
and
xor
cli
sub
mov
add
mov
xor
dec
pop
and
jae
adc
cwtl
loope
push
sti
pop
ror
les
mov
call
repnz
stos
mov
arpl
hlt
mov
fidivrl
jmp
lret
xchg
popf
vmread
aam
cs
dec
shlb
push
adc
js
pop
int3
mov
or
mov
fdivrl
mov
aas
pop
push
mov
pop
testb
mov
sbb
fbld
in
fisubrl
lods
aam
shlb
add
je
jp
roll
mov
cld
insb
cmp
les
rcrl
push
gs
in
add
adc
sub
xor
cmp
cmp
outsl
xor
inc
hlt
aaa
pop
jecxz
out
dec
leave
cmp
push
push
dec
jl
int3
dec
test
jmp
pop
push
jg
adc
mov
mov
add
loopne
outsl
test
out
inc
adc
and
cld
fbld
mov
jno
add
add
jns
out
je
lea
dec
popa
adc
push
mov
loopne
rclb
movl
bound
nop
neg
add
mov
aam
shrl
add
jae
jbe
into
sub
add
xor
movsb
xor
in
jle
mov
insb
cmpb
out
insb
add
cmpb
add
cmp
sbb
pop
jle
mov
insb
and
ljmp
add
adc
or
aad
cmc
iret
das
gs
loopne
sbb
test
dec
out
adc
add
pop
lret
add
test
les
inc
xchg
shrl
mov
shll
add
ljmp
sbb
mov
adc
icebp
or
mov
pop
or
adc
lds
sub
outsl
and
push
mov
adc
add
arpl
dec
sbb
loope
and
lea
lcall
adc
mov
adc
rorb
xor
and
mov
add
testb
adc
xor
jp
adc
inc
int3
mov
or
jecxz
add
cmp
and
shlb
nop
dec
mov
test
cwtl
jmp
xor
fistpl
add
inc
gs
mov
sub
pop
fwait
xor
out
loopne
cmp
mov
out
and
add
mov
push
addr16
or
add
push
jge
adc
out
pushf
add
mov
bound
xor
push
jl
in
add
adc
testb
inc
test
sbb
test
dec
push
inc
adc
fists
lahf
call
aaa
movsl
mov
jne
mov
add
adc
pop
leave
clc
sub
sbb
jl
imul
fs
pop
insl
inc
pop
add
es
push
xlat
jno
sbb
jne
xchg
and
mov
test
cmp
ret
xorl
pusha
push
fildll
cmp
cmp
out
jg
add
add
mov
add
pop
test
push
imul
call
es
ret
scas
adc
push
scas
fisubl
daa
or
popf
sub
insl
popf
clc
pop
pop
and
xchg
mov
bound
adc
add
jae
sub
scas
int3
lock
shlb
mov
adc
xchg
dec
bound
pop
shl
dec
pop
push
insb
mov
cli
mov
pop
adcl
pop
lds
jle
or
mov
and
rolb
nop
cmpsl
add
xlat
xor
push
mov
add
negl
sbb
pop
xchg
push
inc
movsl
mov
pop
es
mov
mov
daa
push
lods
out
insb
ljmp
out
jmp
xchg
ljmp
add
repz
sub
iretw
aas
daa
and
xor
out
pop
call
adc
mov
incl
shlb
movsl
xor
cmpsl
ja
dec
pusha
mov
mov
cwtl
pop
hlt
into
shlw
mov
xor
and
cli
jns
rol
xor
jnp
lock
ret
fwait
xor
in
add
out
imul
inc
pop
adc
jnp
aam
sub
lret
and
and
pop
jno
arpl
cmp
push
adc
ret
cmc
in
popf
js
xor
sub
lods
inc
es
lods
popf
mov
repz
xor
fsubrp
lods
or
inc
mov
inc
lahf
inc
gs
mov
scas
push
popf
lock
xchg
cmp
push
pop
pop
mov
push
scas
adc
push
rorl
adc
neg
stc
add
mov
mov
jecxz
push
iret
jl
shrl
movb
lcall
xor
or
jae
or
adc
inc
add
test
lds
add
cmpsl
adc
int
rclb
cwtl
add
sbb
lea
add
pop
fimuls
roll
in
sbb
sub
filds
les
push
add
cmp
push
mov
out
cmp
sub
xor
adc
js
ljmp
testl
test
out
cmp
push
and
pop
stc
mov
push
pop
in
adcl
or
add
imul
clc
movsb
out
dec
dec
push
sbb
dec
xor
pop
rclb
adcb
insb
in
inc
test
lds
leave
add
fnstenv
outsl
or
and
cmp
inc
fwait
mov
loopne
sbb
add
or
enter
xor
pusha
or
mov
cmp
sbb
or
shrb
aaa
dec
hlt
pop
mov
insl
inc
sub
mov
cld
call
leave
pop
jns
das
mov
inc
jno
lds
sub
leave
outsl
aam
xchg
das
cmp
js
mov
mov
mov
iret
xchg
jp
outsl
inc
sbb
fnstcw
push
std
lcall
add
push
movsb
movsl
scas
push
xor
or
jg
add
hlt
cmp
jp
pop
add
xchg
sarl
das
adc
fistpl
push
aad
fwait
and
insl
add
ljmp
ret
or
cltd
pop
fs
divb
shll
test
lods
or
cmpl
adc
push
andb
mov
std
fiadds
add
shll
fwait
cmp
jns
iret
or
add
mov
push
push
mov
and
or
mov
xor
pushf
and
push
add
cmc
dec
les
in
mov
inc
fistpll
add
and
mov
fldt
call
arpl
jbe
in
mov
hlt
sbb
mov
pusha
pop
mov
movsl
daa
outsl
push
jg
cmp
out
mov
clc
test
mov
inc
inc
lahf
jbe
test
lcall
sbb
pop
cltd
pusha
cmp
jbe
add
sbb
cmp
lds
push
hlt
mov
xlat
ds
mov
lock
cmp
mov
xchg
adc
push
insl
aaa
jl
add
fcomp
movsl
pop
pop
sti
adc
mov
loope
adc
ss
xchg
jo
negl
lcall
lods
pop
add
sub
push
shll
lcall
stc
or
and
faddl
imul
stos
divb
iret
rclb
add
sub
mov
jns
mov
pusha
nop
shlb
xor
inc
mov
lret
jg
adc
xchg
add
add
ljmp
das
sbb
std
push
std
pop
push
push
jne
adc
add
mov
str
lock
or
das
sub
push
cmc
divb
xor
outsb
rep
stos
std
or
jecxz
lret
stos
jnp
sub
cmovns
push
push
push
push
call
out
push
cmp
out
add
gs
imul
push
mov
testb
aad
add
shll
sub
push
push
ud1
test
outsl
fscale
lahf
aad
scas
push
in
hlt
mov
mov
enter
dec
fbstp
adcl
test
mov
add
jno
addr16
cltd
fistpll
shlb
jo
adc
pop
daa
inc
roll
popa
fstpt
mov
leave
cs
jns
mov
orl
mov
pop
stos
bound
jp
sbb
shrb
inc
leave
cs
stc
notb
push
add
mov
mov
mov
call
aaa
sub
jge
fistpl
jae
notb
sbb
push
mov
adc
pop
mov
xor
aaa
call
pop
adc
jg
cli
hlt
pop
jnp
adc
or
cld
movsb
aad
mov
les
jnp
sub
daa
negb
sbb
xchg
sub
outsl
out
inc
jmp
fucomi
fstl
xchg
sbb
outsb
pop
subb
fadds
imul
mov
insb
dec
insb
roll
mov
rolb
sbb
insl
adc
cmp
and
mov
in
pop
adc
inc
and
dec
enter
or
loopne
cld
jnp
add
add
inc
sub
repnz
cs
or
adc
and
fcomps
lods
cmp
mov
lea
cs
lea
add
das
aam
adc
in
push
icebp
push
push
jno
lcall
inc
mov
xchg
aam
inc
cld
adc
lock
mov
repz
orl
in
xor
mov
mov
call
ficompl
adc
rclb
fwait
adc
sbb
jge
add
or
hlt
mov
xor
inc
in
xor
adc
sbb
xchg
and
js
adc
add
add
inc
hlt
or
push
call
mov
lock
and
pop
add
pushf
fs
test
cmpsb
pop
scas
mov
mov
call
jo
adc
dec
or
cmp
mov
call
add
out
adc
lock
add
mov
xchg
addr16
inc
dec
ljmp
inc
shll
inc
pop
sub
sbb
aaa
sub
call
xor
push
cmpb
xor
pop
adc
xor
addl
xor
rcll
scas
dec
lock
or
mov
dec
pcmpgtd
cmp
dec
xor
loope
push
sub
xchg
pop
addr16
in
in
sub
dec
les
mov
sarl
bnd
stc
out
or
shll
hlt
xchg
daa
sub
and
add
les
insb
push
and
fiaddl
push
lock
and
push
or
add
and
pop
adc
sub
adc
dec
adc
inc
xchg
cmpsl
mov
jmp
loopne
mov
test
xor
and
pushf
pop
movsb
std
adc
push
adc
sbb
ss
enter
xor
push
sbb
sub
arpl
in
adc
dec
fdivl
dec
out
push
leave
sub
jb
mov
add
jno
roll
adc
xor
ficompl
mov
aad
fdivs
lds
or
adc
arpl
repz
loope
adc
mov
test
sub
adc
mov
test
test
movl
and
and
jno
js
dec
stc
xchg
add
dec
adc
dec
inc
nop
loop
dec
push
fldenv
push
fwait
sti
push
dec
inc
fmul
pop
iret
lret
mov
pop
inc
enter
push
mov
or
sbb
aam
mov
sbb
pushl
insb
aam
and
push
sbb
mov
lock
mov
ffree
inc
or
or
aam
sarb
push
mov
pop
or
outsb
mov
dec
adc
jge
dec
scas
jecxz
pop
mov
push
lea
ss
sbb
nop
push
add
mov
xchg
add
lahf
pop
mov
jmp
call
ljmp
inc
mov
or
test
mov
add
inc
les
notl
out
mov
inc
push
xchg
imul
shr
mov
jno
inc
and
dec
cmp
loop
pop
out
dec
cld
and
test
push
int
push
lcall
scas
stc
add
add
out
andb
repnz
cmc
cmc
mov
pop
jmp
fstl
inc
mov
jb
pop
cli
jne
fs
clc
pop
andb
lock
xchg
sub
mov
mov
inc
andb
inc
push
outsb
pop
inc
sbb
fucomip
in
aaa
sbb
lock
int3
dec
inc
addb
and
xor
push
jmp
cld
inc
and
mov
insl
xlat
push
sub
cmp
pop
je
stos
movsb
and
inc
push
lahf
and
andb
xor
jne
sub
lahf
outsl
andb
cli
sbb
inc
mov
jg
and
adc
pop
add
hlt
add
add
jbe
fucom
push
adc
aam
jne
testb
add
xchg
inc
inc
inc
inc
jl
dec
xchg
or
stc
cmpsb
loop
jecxz
in
das
test
and
mov
jne
jecxz
insl
xor
stos
jle
dec
das
hlt
jg
sub
sahf
sbb
xor
idivb
sbb
stos
mov
imul
sub
ja
cmpb
subb
pop
push
ret
mov
lds
cs
mov
aaa
push
loopne
xchg
add
out
mov
sub
sbb
mov
push
je
mov
cmp
push
insl
ss
xchg
push
rcrb
xchg
xor
pushf
imul
lcall
imul
jne
dec
fildl
and
add
lcall
mov
popa
cli
hlt
repnz
push
hlt
iret
fbstp
mov
pop
add
inc
aas
mov
clc
aaa
sub
mov
mov
push
sbb
lret
cmp
cmp
stc
popa
jb
mov
xchg
pop
adc
or
shlb
ljmp
mov
push
dec
push
push
jne
or
fmuls
sbb
loop
outsl
push
sub
xchg
push
imul
sub
test
xchg
andl
loope
into
out
inc
fcomps
xchg
leave
aam
cmpsl
mov
arpl
ss
insl
dec
sahf
jmp
or
mov
sbb
rcr
fadds
iret
mov
iret
push
sub
fcomp
cld
ret
adc
xor
xchg
xor
shll
loopne
loopne
push
cmp
add
or
xchg
sti
aas
mov
repnz
adc
lea
sub
mov
jno
dec
mov
and
pop
jbe
mov
dec
xor
mov
inc
test
inc
faddl
or
cmc
sbbb
mov
ja
inc
dec
or
out
xorb
insl
jl
lock
out
icebp
lahf
jg
aam
in
pop
add
test
dec
add
sub
mov
mov
iret
mov
pop
movsb
push
push
xchg
inc
mov
test
pop
ficoms
mov
xchg
xor
sbb
dec
jne
xlat
push
mov
popf
lret
int
dec
adc
add
mov
adc
or
cwtl
leave
add
mov
sub
stc
mov
push
xor
or
cmp
adcb
clc
mov
fstps
es
aad
pop
sbb
sub
or
inc
int3
adc
jg
das
inc
adc
aam
push
nop
sub
sub
sbb
or
rcl
inc
jecxz
lahf
int
ss
cwtl
dec
cmp
adc
jle
add
mov
inc
fcoms
sbb
stc
add
stos
outsl
mov
aam
add
push
push
pop
ret
dec
scas
mov
sub
divb
std
lods
decb
dec
setno
add
or
mov
andb
or
sbb
mov
std
pop
ret
adc
outsl
mov
fisubrl
xchg
pop
mov
add
jo
inc
sbb
xchg
xor
jg
cmpsb
clc
mov
subl
scas
push
cld
orl
xor
mov
movsl
add
js
dec
loop
adcl
call
cmpsb
mov
xchg
jo
shl
scas
xchg
pop
dec
pop
pop
sub
lcall
adc
stc
lahf
movsl
add
add
shrb
iret
dec
pop
xor
push
xorl
pop
pop
add
fdivrs
fistpll
adc
sahf
adc
fiadds
fs
fst
test
adc
mov
icebp
call
pop
or
mov
add
inc
arpl
mov
inc
das
fbstp
loop
in
dec
jmp
in
mov
std
ds
xor
add
leave
andl
fwait
jmp
adc
and
ja
dec
scas
push
fs
rcll
push
or
add
loop
push
sub
xchg
mov
xchg
lock
out
les
loop,pn
in
pop
mov
adc
loopne
cmp
outsb
jg
xchg
shll
fbld
dec
dec
pop
aaa
pop
gs
and
pusha
rorl
lret
xor
ss
cwtl
inc
icebp
das
jo
pushl
cli
cltd
call
mov
cmpsl
push
loopnew
nop
loope
mov
clc
out
jmp
push
mov
sbb
xor
les
jge
and
inc
add
in
fucomip
loopne
inc
call
or
or
dec
push
das
mov
fstpt
out
and
insb
outsl
push
add
nopl
lea
mov
arpl
outsb
outsl
jg
push
or
push
inc
xchg
inc
pop
xchg
and
fmull
sbb
pushl
inc
je
shll
stos
sub
push
add
adc
and
out
lods
dec
sbb
fisubrl
jecxz
mov
mov
xchg
inc
rorl
push
jns
call
pop
pop
fcmovb
ret
xor
pop
loopne
mov
in
or
and
mov
push
sbb
push
mov
inc
data16
inc
lret
xor
leave
imul
inc
cwtl
imul
into
sbb
xchg
sub
loop
jbe
xchg
cwtl
aas
jmp
xchg
sub
les
enter
push
push
aas
loope
push
ficompl
dec
mov
cmp
loope
xlat
add
insb
aaa
out
fidivrs
mov
movsb
rcll
mov
xor
jecxz
nop
adcb
jbe
out
cli
int
add
rclb
sbbb
in
sbb
mov
xchg
jl
sbbb
jns
lods
loop
aaa
rorl
ljmp
inc
mov
mov
cli
pop
xor
push
lahf
push
lods
adc
addl
cs
popf
lds
js
ja
and
filds
pop
inc
sbb
add
sub
test
icebp
add
and
mov
mov
pop
inc
jae
inc
or
lahf
mov
data16
or
dec
out
addl
mov
ds
in
pop
arpl
mov
aam
rcll
xorb
mov
xor
adc
push
outsl
test
mov
push
lcall
sbb
sub
sbb
add
xor
mov
in
mov
sub
cli
add
or
lret
add
cmp
clc
and
imul
and
test
pop
jns
fs
push
lea
lods
jp
push
mov
aaa
inc
adc
sbb
out
fadds
xchg
dec
xorb
aad
mov
jnp
add
inc
adc
stc
and
loopne
int3
aad
scas
mov
and
push
dec
aaa
arpl
ljmp
es
lock
cli
sub
mov
adc
and
ss
subb
in
pop
xor
adcb
dec
cltd
cli
push
mov
push
outsb
inc
add
mov
rcrl
pop
rcll
push
push
clc
jl
push
fs
inc
jb
and
bswap
dec
ficoml
mov
stc
push
sbb
int3
pop
out
inc
mov
xor
add
mov
xchg
out
mov
hlt
es
mov
or
dec
inc
cmc
sbb
push
les
add
fisubl
loopne
xor
add
aas
jl
stos
loopne
stos
sbb
fcoml
test
ss
leave
fwait
adc
add
inc
sbb
cltd
test
loope
push
or
sbb
roll
xorb
cmp
daa
xor
pop
mov
sahf
inc
mov
sub
mov
or
fisubrs
push
stc
leave
xor
push
lea
mov
das
out
pop
jmp
ret
in
aam
orb
sub
dec
leave
mov
es
mov
fsubl
xor
add
sub
mov
mov
lods
mov
add
shl
in
fsubl
add
push
or
jo
test
stc
repnz
ret
dec
rcrl
push
addb
fstpt
pop
inc
adc
imul
add
jecxz
fistl
adc
adcl
rolb
inc
pop
fdivs
dec
cltd
pop
lods
mov
add
ret
inc
adc
imul
jno
or
or
loope
xchg
adc
cmp
movsl
pop
jae
sbb
scas
outsl
adc
xor
mov
push
cld
sbb
in
mov
push
pop
mov
sub
mov
repz
lods
mov
ss
push
push
mov
cmp
xchg
mov
cli
sbb
inc
sbb
push
dec
add
outsl
dec
jnp
lock
test
test
ljmp
inc
mov
clc
adc
pushf
jnp
incl
or
cld
in
call
sarb
adc
jne
orb
insl
mov
jb
fistpl
xor
sti
inc
mov
xor
popf
add
add
hlt
out
loop
inc
or
push
pop
pop
ja
lret
push
cmc
divl
scas
das
and
shrb
inc
jl
dec
mov
lret
out
lahf
mov
int3
inc
sub
mov
mov
jp
les
ss
dec
xchg
js
add
and
sbb
js
xchg
add
xchg
and
sbb
cld
adc
dec
arpl
inc
test
cmp
adc
pop
fisubl
test
mov
jo
movsl
call
push
mov
jno
mov
sbb
stc
clc
les
jnp
call
test
outsl
sub
sti
es
xor
jnp
movsb
stos
sub
xor
ja
filds
rorl
push
add
jmp
js
push
xchg
sub
sbb
xor
or
nop
leave
clc
into
add
scas
dec
add
adc
rorl
add
and
pop
jge
fcoml
jnp
ss
pop
mov
incl
leave
sub
leave
lock
xor
xchg
fidivrl
or
inc
nop
pop
scas
dec
mov
mov
adc
adc
arpl
stos
push
call
ret
inc
mov
mov
in
cmc
pop
push
lret
or
jno
add
das
mov
xor
and
sti
das
cmc
pop
lcall
and
in
sub
fists
cmpsl
inc
lcall
sbb
call
or
fidivrs
popa
adc
insl
cld
add
sub
inc
test
push
jo
cvtps2pi
jl
ds
and
xlat
sub
cmp
lock
sbb
bound
jns
and
and
outsl
mov
popa
andl
xchg
loope
outsl
enter
and
fisubs
mov
loop
mov
cld
add
mov
sti
pop
insl
or
and
aad
into
pop
rol
fisubrs
mov
daa
pushf
ds
mov
jmp
jge
mov
add
jns
lret
cmp
lock
push
jmp
mov
cli
mov
out
push
in
pushl
mov
add
stc
movsl
cld
and
aas
xchg
push
jno
pop
push
pusha
test
mov
adc
clc
adc
xchg
dec
rcrb
sbb
out
xchg
push
js
in
and
ficomps
cld
sbb
cmc
push
pop
out
xchg
jae
adc
lock
int
loopne
fnstenv
stc
insb
fsubrp
jg
add
mov
jno
mov
dec
mov
loope
and
dec
lcall
lahf
cli
sub
and
sub
fmuls
ljmp
mov
push
mov
jge
testb
int3
ret
das
jmp
cmp
pop
clc
push
inc
pop
inc
push
mov
and
ret
rclb
orb
dec
and
out
xor
popf
mov
ja
ret
enter
incb
call
and
jns
sbb
sub
aaa
jmp
hlt
add
jl
std
or
or
fs
xorl
xor
mov
test
out
and
in
pop
sub
pop
mov
or
pop
dec
jl
pop
fildl
inc
hlt
sarb
add
pop
dec
test
lock
adc
dec
test
add
mov
cmp
cwtl
sahf
in
notb
or
xchg
adc
jmp
or
repz
loope
adc
arpl
subb
jns
adc
or
movsl
fisubrl
dec
pop
imul
xchg
dec
lods
or
mov
sahf
push
xchg
aaa
mov
pushf
int3
ljmp
cmpsl
push
xor
js
dec
sahf
inc
das
cld
outsl
add
sub
adc
divl
inc
loope
in
fildll
xor
in
mov
rcl
jle
loope
adc
pushl
mov
mov
icebp
flds
xchg
test
dec
icebp
mov
out
scas
outsl
test
loopne
mov
inc
loop
insb
pop
cltd
dec
aad
icebp
out
in
adc
xor
in
in
lock
push
and
mov
into
mov
aam
fldl
lcall
clc
push
pushl
loopne
push
dec
notl
or
in
sub
ret
pop
popa
pop
add
inc
mov
push
jb
loop
shr
jo
or
cmp
fdivl
mov
push
call
or
xchg
in
pop
pusha
imul
jno
mov
sbbb
stc
xchg
pop
pop
dec
mov
pop
mov
bound
sbb
adc
mov
pushf
add
jl
dec
popf
and
repz
pusha
push
xor
rolb
test
stc
or
add
inc
push
mov
xchg
mov
mov
or
shll
adc
fistl
inc
and
sbbb
mov
cmp
xor
add
outsl
adc
pop
aam
cmp
mov
adc
popf
cmp
nop
xchg
sub
adc
and
fistpll
fwait
adcl
loop
mov
inc
mov
dec
add
ds
xchg
jp
mov
lods
cmp
add
dec
add
adc
movsb
dec
sub
push
adc
sbb
sbb
in
loope
stos
shlb
ss
pop
mov
loope
rcr
mov
out
fcompl
imulb
dec
scas
pop
sbb
inc
cwtl
add
iret
adc
pop
hlt
inc
inc
pop
sub
cmp
and
sub
in
mov
push
in
or
sar
jmp
xchg
adc
insb
mov
jae
incb
pop
or
xchg
jg
push
hlt
add
sbb
sbb
or
xchg
xor
mov
test
mov
push
test
cmpb
jo
cld
ror
jge
sub
inc
xlat
lock
inc
jns
jmp
fisubl
loop
jge
push
xchg
or
fsubs
pushaw
mov
ret
sub
inc
and
rcl
popf
fmull
aam
sub
sbb
xlat
mov
jns
mov
xor
ret
mov
in
adc
mov
and
sub
add
jle
dec
inc
jno
fbstp
or
or
in
aam
lret
jae
adc
add
insb
jbe
es
je
pop
or
ljmp
fbld
jb
sbb
insb
push
aam
inc
pop
add
push
ficoms
add
mov
in
add
mov
outsb
in
sub
adc
or
and
mov
iret
and
push
cltd
push
dec
stos
mov
cmp
xchg
enter
inc
mov
clc
shll
fimull
adc
and
xor
or
fidivs
in
jb
add
and
add
adc
lcall
fdivrs
subb
pop
adc
xchg
dec
lods
add
rorb
aas
mov
repnz
dec
xchg
push
stos
in
dec
cld
push
xchg
add
jp
push
push
pop
lock
icebp
push
sarl
aam
mov
inc
add
adc
xor
addl
mov
jbe
arpl
in
js
and
sarb
pop
jle
mov
rolb
loopne
add
mov
mov
add
jg
lods
pop
enter
cld
xchg
sbb
fldt
callw
pop
call
mov
inc
nop
mov
mov
inc
and
or
sbb
gs
lea
sbb
imul
aad
cmpsb
sub
pop
rcll
call
pop
add
fs
mov
lock
mov
sub
sub
cmpl
xchg
xor
push
mov
mov
ljmp
add
pop
lret
cmp
mov
stc
lret
mov
outsb
mov
push
pop
test
sub
jns
inc
mov
stos
and
dec
pop
pop
and
mov
jg
push
adc
xor
insb
cmpb
dec
cmc
pop
pop
add
jmp
inc
jecxz
mov
xchg
push
out
inc
cli
rcrb
outsl
pop
pusha
fidivl
add
mov
in
call
repnz
jg
fdivs
aaa
or
push
and
fwait
push
add
movsl
sbb
shrl
push
and
shlb
add
andb
fadds
jmp
sub
stos
es
lret
mov
das
adc
icebp
mov
mov
xor
cmp
fbld
xchg
inc
pop
xor
xor
out
or
in
testb
push
lds
aad
mov
rcll
test
iret
scas
adc
inc
movsb
inc
je
jmp
jp
fildl
jl
jle
clc
add
fists
mov
inc
jb
jecxz
lea
loope
push
pop
inc
xchg
mov
or
sar
and
ret
push
sbb
rcrl
int
and
cmp
add
or
scas
outsb
aam
je
push
dec
and
lret
movsl
dec
std
ret
or
inc
xor
push
mov
pop
mov
pop
repz
xor
lcall
sub
mov
xchg
ja
in
aaa
ljmp
icebp
ss
mov
mov
adc
or
filds
dec
dec
pusha
dec
lds
test
addb
cmpsl
cmp
lcall
sbb
fnsave
xchg
call
arpl
xchg
fdivr
fstl
pop
xor
divb
mov
ss
ret
jbe
sbb
call
mov
insb
or
push
pop
mov
js
sbb
mov
aam
xchg
gs
sbb
les
add
cld
out
pop
call
cltd
inc
ja
xchg
pop
xchg
pop
lods
sbb
ja
es
mov
insl
ret
or
jp
cli
push
mov
jecxz
incb
adc
cmp
movsb
popa
repnz
in
pop
lds
mov
or
sub
sbb
clc
enter
cmp
xchg
pop
xchg
stos
mov
mov
add
mov
ds
mov
shll
mov
pop
rclb
lret
pop
sub
repnz
daa
push
add
test
or
cli
xorb
lds
adcb
dec
popl
mov
cmc
insl
push
adc
fisttps
mov
fstp
fsubrs
pushl
adc
xchg
fldt
in
cmp
xor
jge
mov
inc
es
cmp
outsl
sarl
jg
outsl
dec
hlt
outsb
scas
push
mov
mov
filds
fbstp
push
pop
loopne
pushl
mov
rolb
movsb
pushl
lcall
inc
movsb
jg
push
or
int3
mov
sub
lret
shl
rolb
testl
test
pop
out
jp
and
enter
out
imul
icebp
addl
fdivl
xchg
or
sbb
add
repnz
lock
repnz
into
gs
pop
loopne
cwtl
test
jg
rcr
popa
pop
jae
jne
dec
rolb
scas
push
xchg
loopne
cmp
data16
adc
dec
xchg
sub
fidivrs
addr16
mov
pop
pop
in
sub
icebp
add
mov
lcall
inc
mulb
or
add
sub
push
jl
pop
pop
mov
or
dec
paddusw
mov
outsl
call
jecxz
xor
pop
and
jns
cmp
inc
xor
ss
push
or
adc
dec
mov
das
or
fs
int
adc
inc
iret
push
mov
aaa
xchg
aaa
or
add
adc
mov
ja
ds
sub
pop
sub
and
add
or
push
mov
pop
incl
cmp
cwtl
dec
jbe
inc
dec
and
push
rclb
cwtl
fistl
add
jae
push
mov
sub
push
mov
fsubs
pop
cmpsb
loop
mov
jg
fcmove
addr16
cmp
sub
push
push
stos
pop
lods
push
push
push
mov
jne
popa
clc
in
mov
xchg
dec
repz
ljmp
and
stos
push
pop
inc
popf
mov
adc
mov
or
xor
xchg
and
push
cmp
subb
pushf
cs
xchg
cmp
dec
into
cmp
jb
jno
mov
ret
xor
cltd
mov
les
ja
out
jnp
neg
sub
mov
cmp
add
test
mov
inc
shlb
dec
mov
mov
loope
outsb
push
in
push
out
mov
fucom
mov
int3
add
fists
sub
cltd
testb
push
pop
shlb
push
std
daa
and
sub
repz
push
adc
inc
decb
mov
add
or
pop
fmull
sub
and
push
lock
jmp
repz
or
pop
clc
mov
adc
cmpl
repz
inc
pushf
inc
mov
mov
aaa
loopne
inc
and
or
adc
lea
mov
pop
fisttps
das
or
cmp
lahf
lods
jns
in
mov
lods
pop
lods
lret
push
aaa
icebp
pop
adc
inc
out
sbb
add
push
pop
lock
add
or
push
lock
aaa
or
xchg
xor
push
mov
add
and
ja
aam
loop
test
orps
sbb
loop
mov
mov
inc
repz
add
xchg
mov
push
cld
inc
nop
mov
cmc
sti
sub
adc
dec
cld
sub
sarb
dec
iret
rcll
sbb
pushf
mov
scas
inc
lods
mov
jp
lock
jno
ss
mov
test
mov
and
dec
add
mov
mov
fdivs
inc
movb
or
jge
xor
jge
fidivs
push
filds
xchg
lcall
mov
iret
mov
dec
or
mov
movl
inc
pop
xor
jns
cld
ljmp
push
insb
mov
add
push
mov
jbe
std
add
fdivs
add
xchg
or
sub
push
jo
jecxz
cmpsb
push
jae
sub
jo
jmp
shrb
sti
or
js
jle
gs
leave
pop
jb
movsl
rcrb
outsl
xchg
sub
jo
mov
dec
ljmp
jl
mov
outsl
push
clc
lret
aaa
fists
xor
cmp
das
icebp
fbld
and
pop
test
sub
sahf
push
gs
and
das
icebp
push
mov
popf
addr16
xchg
sbb
mov
clc
jmp
mov
push
xchg
les
xchg
divl
je
js
sbb
jle
es
cmp
push
add
mov
in
mov
mov
std
in
or
into
mov
repnz
ss
addr16
fsubp
call
and
nop
test
and
leave
xchg
xchg
icebp
jg
lahf
adc
xchg
test
clc
shl
or
aaa
push
jnp
add
int3
adc
aam
pop
subl
pop
nop
push
adc
sbb
pop
mov
mov
mov
icebp
stos
aas
loopne
add
adc
cmp
in
inc
ljmp
jl
scas
in
aas
push
adc
icebp
inc
dec
aaa
add
mov
lock
add
arpl
dec
jle
push
insb
mov
inc
shrb
jp
aad
mov
test
jmp
adcb
or
pop
adc
inc
add
outsl
clc
pusha
and
xchg
rcr
dec
dec
push
dec
cmpsb
cmp
xchg
andl
mov
jg
cmp
jns
pop
cmpb
hlt
cltd
push
cmpsl
sbb
movsb
cmpb
sti
shl
popf
dec
cmp
andb
repz
not
adc
mov
dec
stos
adc
or
cli
mov
jg
or
adc
dec
and
adc
popa
cmp
bound
hlt
gs
dec
sbbb
imul
and
movsb
jge
cmp
loopne
inc
outsl
inc
sbb
adc
mov
mov
leave
repz
pop
outsl
out
xchg
xor
mov
xchg
cli
frndint
xchg
cmp
daa
inc
cld
aaa
clc
mov
xchg
jl
dec
adc
mov
lds
and
push
jno
or
jle
adc
cwtl
add
cmpsb
pop
add
aaa
or
mov
imul
adc
aas
mov
mov
or
pop
movsb
addb
call
mov
addl
je,pn
add
push
inc
data16
push
xor
in
adc
or
sbb
clc
xchg
ror
in
inc
inc
and
fists
mov
adc
lret
orl
sbb
or
inc
or
adc
or
dec
and
push
inc
jno
cltd
inc
add
in
cmp
inc
insb
lret
int3
add
add
test
fistl
cmp
scas
sub
push
rclb
in
popf
xor
cmp
inc
inc
lret
cmp
ret
push
daa
test
mov
dec
pop
adcb
adc
add
add
sub
or
mov
addl
add
sub
addr16
sub
sub
mov
inc
std
movsb
and
pushf
fsubl
add
inc
xor
mov
outsb
push
pop
add
pop
inc
ret
into
or
add
and
or
fisubrl
dec
mov
or
in
push
cmp
or
jne
jns
cld
jmp
cwtl
dec
xor
add
pop
sbb
outsl
in
scas
mov
cli
popf
loope
aam
mov
pop
hlt
mov
fsubr
mov
mov
inc
add
shlb
cmpsb
xor
push
jecxz
jl
add
mov
inc
testl
inc
sub
push
push
cmpsl
cmc
pop
icebp
adc
xchg
add
imul
pushf
xchg
jae
pushf
adc
call
cmp
add
rolb
rclb
add
movsw
dec
retw
push
mov
pop
stc
push
xor
mov
mov
xchg
and
int3
stos
push
faddl
sbb
loopne
fucom
push
dec
and
es
push
xchg
fists
mov
stos
aam
call
aad
cld
jg
sbb
imul
call
rcrb
orb
pop
stos
add
and
and
adc
mov
lds
jmp
inc
int3
lahf
je
outsl
push
sub
mov
jle
fcoml
les
sub
sub
dec
jecxz
shrb
adc
lcall
and
push
xor
pop
cmpsl
mov
mov
and
mov
mov
shrl
out
pop
shll
dec
xchg
jle
repnz
std
das
push
mov
jle
jp
rcll
dec
sub
jle
add
pop
cmpsb
faddl
enter
adc
movsb
sub
add
addr16
lds
mov
fs
int3
sbb
pop
fsubrs
mov
mov
mov
mov
lock
roll
inc
push
pushf
js
xchg
popf
push
lcall
cmp
adc
in
pop
std
pop
mov
popf
dec
mov
or
add
test
loop
incb
out
sar
insb
and
cltd
lahf
push
cld
push
das
adc
mov
inc
sarl
sbb
sbb
mov
test
insb
xlat
cwtl
mov
push
mov
mov
jns
pop
xor
xchg
clc
cmp
pop
push
enter
lcall
movsb
sbb
insb
clc
mov
lahf
mov
inc
jne
mov
or
cwtl
test
cmpsb
cmp
fmuls
push
js
lock
ds
cmp
cmp
pop
rcrl
push
out
sub
add
sti
push
xchg
repz
loop
push
aad
std
or
adc
fdivrl
mov
and
ja
pop
add
shlb
add
push
lds
aas
adc
insl
aam
cmc
scas
or
bnd
and
cmpsl
lock
jp
sub
push
push
xchg
inc
pop
std
mov
sbb
out
aad
dec
adc
add
push
sub
sbb
push
shlb
fistpl
cmpsb
cmp
shlb
push
cmp
outsb
fadd
sub
fs
add
jbe
mov
cli
adc
jg
daa
push
adc
cs
mov
ss
add
adc
and
jno
lcall
mov
enter
push
adc
fimuls
cmc
addl
cmp
je
sbb
flds
mov
sbb
adc
stos
dec
ja
loope
lahf
sahf
dec
xchg
push
jnp
pop
scas
fs
icebp
decl
jle
clc
test
add
xchg
test
into
mov
pop
sti
xor
scas
xor
dec
pop
test
icebp
mov
cmp
mov
xchg
hlt
repnz
mov
in
cmc
mov
mov
test
pushf
pop
hlt
cmc
push
and
pop
subb
outsb
hlt
and
inc
adc
xor
fldl
call
xchg
jb
and
pop
popa
pop
push
pop
inc
xchg
and
icebp
pushl
cwtl
push
push
rorl
mov
dec
adc
dec
or
test
fistpll
cmp
dec
std
jo
sub
add
pop
jo
inc
popl
push
mov
inc
fimuls
xchg
andl
clc
incl
outsl
outsl
data16
in
shrl
das
data16
testl
or
adc
lock
mov
pushl
out
fnstcw
jg
mov
mov
lret
gs
dec
inc
test
sbb
xor
insl
negb
pop
dec
mov
movsl
push
aad
lahf
leave
incl
push
mov
sarb
ds
jp
adc
test
sub
or
and
into
xor
dec
xchg
ss
jp
lahf
incl
pop
and
fdivl
scas
xorb
loope
cli
call
inc
xor
push
ror
cmpsl
icebp
testl
aas
fs
jns
rclb
test
movsl
call
loopne
mov
lcall
popf
sub
add
pop
inc
loop
nop
cltd
or
fs
or
jne
sbb
aam
fwait
jle
pop
xchg
inc
pop
mov
outsl
xchg
jno
sbb
mov
jne
cmp
dec
push
es
xchg
les
xchg
mov
icebp
adc
pop
dec
stos
pushl
mov
inc
add
ss
xchg
movsb
pop
cli
inc
cld
jg
repnz
call
pop
adc
out
mov
inc
popa
add
pop
adc
jne
push
nop
add
ret
pop
add
inc
cmp
lods
push
lahf
rorb
mov
mov
jmp
enter
inc
mov
pop
scas
push
adc
dec
inc
sub
and
ficoms
add
inc
test
subl
mov
mov
lcall
cmp
fnstsw
shr
pop
test
inc
adc
fs
inc
out
ret
scas
cmp
cmp
lahf
notl
push
mov
loop
pushl
movsl
inc
ljmp
aad
push
jbe
sub
xor
cmp
adc
imul
dec
sub
fcmovnbe
mov
adc
jl
and
inc
mov
push
mov
ret
add
mov
jnp
movsl
sbb
inc
sahf
push
inc
shlb
pop
out
push
push
lea
lods
icebp
sub
jp
xchg
push
shlb
mov
aaa
fidivrs
sti
inc
lods
lock
rcrl
sarl
sarb
es
mov
dec
sbb
stos
int3
bound
dec
outsl
mov
cmp
mov
das
in
push
pop
repnz
mov
push
lods
inc
xchg
mov
push
and
adc
idivb
adc
jg
lock
fisttps
jne
mov
orl
cli
dec
nop
cwtl
or
cmp
out
stos
and
sbb
aam
adc
stc
dec
in
sub
in
pop
inc
ljmp
xchg
cmc
mov
pop
jo,pn
daa
dec
lcall
sub
orl
mov
outsl
mov
sub
inc
mov
inc
ds
scas
data16
in
js
or
cmpl
mov
ss
cmp
sub
pop
ljmp
pop
repz
lds
xchg
aas
addb
mov
jnp
jle
jno
pop
test
push
imul
mov
arpl
lds
push
andb
pop
pop
adc
push
pop
cmpsb
pop
shlb
xor
lods
fs
pop
xor
ret
sbb
outsb
jge
adc
sub
fists
imul
jne
inc
sbb
push
fcomp
push
insl
push
nop
pop
sub
adc
shlb
push
mov
mov
rcrb
xchg
mov
push
or
dec
iret
dec
push
push
add
out
jne
movsl
out
jecxz
mov
je
fldl
pop
or
mov
cs
in
mov
and
mov
jg
pop
inc
mov
mov
mov
mov
lods
push
jbe
or
cld
xchg
dec
test
jns
es
aas
adc
bound
fadds
and
in
sub
dec
add
inc
mov
mov
cld
mov
incl
or
stc
or
sahf
paddw
clc
or
and
mov
push
shrb
clc
fbstp
movsb
and
lcall
faddl
insb
std
call
fwait
cwtl
xchg
xchg
pop
add
ja
sub
dec
pop
ja
add
scas
fists
outsl
outsl
jmp
inc
or
sub
imul
loope
iret
cmc
xchg
pop
add
les
mov
data16
rcr
xchg
and
or
or
rcrb
ds
das
mov
sbb
pushf
in
dec
pop
add
adc
shll
jge
data16
outsb
xor
jne
das
xchg
imul
insl
test
mov
aas
sbb
fwait
lahf
add
mov
sbb
mov
pop
orl
incb
pop
mov
fsubrs
loop
cmp
filds
cmp
icebp
sti
test
mov
xor
lcall
mov
negb
lea
fisttpl
and
and
mov
mov
callw
pop
sbb
js
push
faddl
or
or
loopne
jle
sub
call
mov
xchg
pop
mov
lahf
xor
inc
outsb
sub
or
fldenv
std
and
popa
adc
xchg
fsubrs
xchg
pop
cs
clc
inc
fiadds
cmpsb
add
dec
inc
movsl
andb
jecxz
std
sahf
inc
and
dec
sub
push
aaa
adc
fsts
push
fnsave
and
out
or
fmul
add
mov
jo
xchg
or
mov
das
mov
adc
dec
jmp
cmc
insl
adc
out
std
lret
push
jl
mov
mov
faddp
sbb
push
sub
movsb
hlt
mov
add
pop
stos
inc
adc
mov
mov
repnz
sub
push
popf
xlat
and
sub
inc
dec
mov
icebp
ss
ljmp
out
add
xor
roll
ja
jb
adc
pop
fidivl
adc
cltd
int3
lds
push
dec
call
mov
inc
sub
adc
pop
ret
or
pop
or
push
movl
insl
mov
notb
dec
sub
add
inc
rclb
sarb
jo
add
inc
push
push
sub
mov
adc
mov
outsl
dec
loope
mov
into
sbb
outsl
in
in
je
in
jb
inc
mov
rclb
scas
in
mov
divl
xor
adc
sbb
lret
jne
jle
adc
ret
pop
fwait
and
mov
and
push
aaa
bound
test
push
movsb
jmp
jbe
push
xchg
cld
loop
clc
dec
jnp
sti
cmp
outsb
inc
test
add
add
pop
dec
pop
lds
std
or
cmp
adc
ss
popf
and
in
movsl
mov
pop
mov
ret
mov
das
jnp
adc
and
scas
sbb
xchg
pushf
test
adc
lock
mov
and
pop
push
jo
fsubrp
sub
test
push
adc
push
xor
test
push
push
add
pop
dec
sarl
loopne
sub
loopne
icebp
dec
cltd
pop
lds
xchg
mov
fsubr
inc
and
mov
pop
xor
xor
inc
and
test
jno
sub
adc
add
scas
ret
cmpsb
inc
xor
call
adc
add
aam
aam
lahf
orb
flds
das
push
ficoml
dec
iret
fldl
add
addl
add
cli
push
cmpl
sbb
lds
fucom
mov
push
xor
bound
jmp
lds
jne
add
xchg
lods
movsb
stos
jge
inc
or
xor
scas
sbb
add
mov
rcr
and
out
adc
add
pop
jnp
aam
add
adc
mov
stos
mov
addr16
or
adc
fisubrl
jecxz
mov
scas
icebp
dec
mov
and
jecxz
test
sub
hlt
or
add
dec
inc
mov
aad
js
addb
xor
mov
xorb
stos
pop
lret
adc
cmc
mov
push
add
add
pop
imul
add
cmp
jne
and
push
or
inc
dec
js
push
add
and
xchg
aam
aas
or
retw
or
andb
and
add
sub
ljmp
jb
mov
add
adc
dec
outsb
sub
mov
push
lds
mov
test
les
xor
xchg
add
lcall
add
sub
pop
sub
mov
aam
push
and
adc
mov
inc
mov
in
aad
lret
inc
fsubrs
and
inc
jne
or
sarb
sub
fld
push
lock
sub
out
call
cmp
pop
test
jbe
faddl
jmp
mov
sbb
and
stos
cmp
fists
gs
cmp
jbe
test
xchg
arpl
sub
call
add
loopne
sbb
loop
jp
add
and
popf
sbb
and
push
mov
scas
stos
push
and
and
push
test
mov
inc
or
and
or
adc
or
rol
jo
stos
or
xchg
push
stos
fdivs
popa
dec
jg
or
std
out
in
mov
or
test
movsb
or
pop
pop
push
in
mov
xor
inc
dec
outsl
stos
add
inc
add
xorb
daa
add
jg
cmc
jmp
or
cmc
adc
or
dec
jo
sbb
movb
push
int3
cwtl
andb
pusha
xor
popa
push
xor
sub
icebp
sub
stos
jp
add
pop
or
inc
outsl
pop
les
hlt
or
xor
inc
add
pop
loope
enter
and
jmp
jl
rolb
out
cmpsl
ljmp
ret
cmp
fs
stos
mov
cmpl
or
insl
dec
test
inc
inc
xchg
stos
ret
xlat
push
test
xchg
clc
fimuls
sub
ja
or
push
outsl
movsl
insb
add
jo
mov
mov
int3
push
pop
incb
and
fdivrs
or
pop
push
sbb
xorb
cmpsb
pop
dec
hlt
adc
mov
sti
and
or
std
mov
stc
fs
call
dec
adc
push
shlb
fwait
stc
pop
cld
les
lahf
andnps
adc
xchg
mov
fucomip
xchg
jns
aas
jns
inc
scas
outsl
icebp
and
rcr
sub
push
jno
test
mov
jno
or
mov
aam
call
jns
xor
icebp
fcomip
jg
andb
sahf
ret
xor
xchg
das
adc
enter
add
negb
pusha
scas
lahf
pop
mov
std
inc
loop
loop
sbb
xchg
sti
pop
shll
sbb
ljmp
sub
popa
sbb
xchg
push
lcall
loope
xor
inc
das
xchg
lret
out
fistpll
aam
mov
gs
inc
pop
pop
leave
insl
test
mov
mov
mov
fists
sahf
addr16
lret
les
and
insb
inc
fistpll
dec
cs
push
rcll
in
push
cmp
fs
push
mov
iret
push
jbe
jg
aaa
push
and
or
jg
jo
push
inc
loopne
std
jg
shrl
lcall
es
or
mov
xchg
adc
into
mov
ret
rcll
xchg
aad
ljmp
mov
ja
aaa
pop
cmp
fiaddl
cld
pop
loop
or
cld
int
mov
adc
add
cmp
and
mov
fsubrl
add
dec
lret
aam
imul
out
add
cld
push
adc
sbb
dec
faddl
faddl
mov
push
push
lcall
mov
sub
ret
pop
and
insb
pop
clc
push
xchg
jp
int3
cmc
or
cld
sti
cmc
jne,pn
lcall
push
pushf
inc
es
mov
add
add
clc
pop
adc
and
addb
mov
xor
cs
imul
shr
and
test
test
icebp
in
cmpl
cltd
or
and
or
and
dec
mov
or
sbb
scas
xlat
mov
mov
fdivrl
or
cld
lret
mov
test
pop
inc
sub
add
jmp
scas
jge
inc
movsl
push
mov
add
fnsave
lods
add
mov
fdivl
xor
scas
mov
dec
adc
cmpsl
or
in
pop
push
insb
imul
or
push
das
dec
add
fdiv
fisubs
aaa
cmp
cli
mov
inc
cmc
sbb
imul
pusha
mov
nop
sbb
mov
xchg
pop
pop
aas
xor
and
adc
lock
sbb
pop
rolb
into
and
mov
push
les
data16
in
mov
sub
rclb
inc
inc
loopne
push
ret
sbb
pusha
mov
cmpl
sub
mov
and
xchg
add
shl
fisttpl
cmp
adcb
das
xor
cwtl
mov
lret
daa
out
fldcw
mov
fiadds
pop
call
xor
adc
dec
xor
addb
fdivrs
clc
repnz
fs
sub
in
push
push
push
cmp
pop
les
mov
dec
cmp
add
int
mov
dec
aad
andl
subl
xlat
mov
into
add
sub
stos
testb
adc
and
lods
daa
and
dec
sub
fisttpl
and
jbe
ds
add
mov
es
dec
sbbl
xor
push
fdivl
out
xor
jnp
cmp
jle
inc
popf
or
hlt
sahf
pop
mov
test
icebp
stos
pushf
mov
aas
scas
xchg
sub
cmp
xor
xor
ds
mov
mov
lcall
mov
sub
aad
cmpsb
or
addr16
fcomp
xchg
mov
mov
hlt
or
push
push
mov
xchg
loope
adc
dec
push
mov
test
std
ja
sub
mov
orb
inc
cmp
sbb
out
push
push
pop
cmp
imul
addl
xchg
add
mov
andl
repz
std
and
outsl
xchg
mov
cld
jo
or
add
popf
xor
add
jne
pushf
xchg
xor
int
ret
jle
push
cmp
push
mov
clc
data16
jecxz
xor
ljmp
adc
cmpsl
cmp
dec
adc
pop
inc
lahf
je
out
sbb
cltd
mov
inc
xchg
pop
inc
popl
push
shlb
sar
sub
sbb
and
and
sbb
inc
add
cmp
add
push
sub
pop
in
es
fiadds
mov
scas
mov
sbb
add
xor
push
adc
insb
cmp
cli
cli
pop
negb
xchg
ds
loop
leave
adc
cwtl
add
lods
cmc
outsl
xor
ret
mov
inc
jb
notl
repz
sbb
scas
and
adcb
and
hlt
add
cmp
mov
clc
pop
jp
xchg
cs
adc
add
mov
flds
xchg
test
imul
push
inc
sbb
int3
std
mov
mov
jg
push
stc
jge
aad
shlb
roll
inc
mov
add
cmp
add
lock
test
or
mov
and
leave
push
push
lahf
imul
lcall
in
add
lcall
push
ror
repz
imull
hlt
test
push
mov
jo
insl
add
fstpl
loope
test
movsl
push
dec
or
mov
insl
daa
stos
fwait
bound
aam
frstor
sti
or
orl
and
pop
aaa
repnz
outsb
xchg
rolb
cwtl
push
out
decl
imul
icebp
pop
dec
mov
add
mov
mov
add
cs
sbb
sbb
enter
lret
or
fisttpll
mov
mov
incl
jge
les
or
call
pop
daa
mov
les
jmp
pop
imul
add
xchg
mov
sub
pop
mov
or
fsubs
jecxz
xor
pushl
xchg
inc
push
lods
sbb
inc
rol
daa
js
xchg
sbb
pop
xor
enter
and
mov
int3
popa
daa
fdivr
lds
stos
jae
jbe
mov
jle
push
sbb
and
lcall
and
mov
mov
xor
and
stos
mov
subl
clc
ljmp
add
and
and
push
dec
mov
popl
sbb
mov
push
jno
inc
and
aad
sbb
mov
or
pop
inc
cld
add
imul
push
fdivrs
iret
lds
cltd
push
rorb
cli
out
sbb
add
pushl
adc
bound
push
imul
shlb
out
xchg
mov
ljmp
xorb
sub
int
mov
iret
pop
int3
leave
mov
cltd
cli
outsl
cmp
xor
dec
pop
sub
fstpt
fisttps
rdpmc
and
iret
mov
aas
enter
aas
inc
fnsave
xor
xor
cmp
cmc
cld
dec
fstps
jmp
mov
ja
aam
inc
xor
clc
cmp
xor
leave
lret
push
pop
mov
add
inc
ss
popf
nop
std
test
sub
rorb
mov
insb
jle
dec
ja
inc
push
inc
lds
cmc
cmpsl
push
cld
jg
mov
mov
cmpsb
sahf
pop
cmp
imul
insb
push
lahf
daa
jne
movsb
fidivrl
add
cmc
inc
xor
jecxz
xchg
or
jno
movsl
push
shll
jbe
mov
dec
or
pop
mov
cmp
add
push
mov
xor
lock
outsl
js
pop
aad
mov
pop
and
rol
cmpsb
ret
loop
xchg
aad
call
incl
and
and
sbb
adc
mov
mov
sbb
push
out
leave
fstps
add
xor
in
mov
jae
fsubp
dec
les
adc
add
outsb
xchg
inc
enter
es
mov
and
popf
push
push
inc
aad
cmp
mov
jmp
popf
sub
mov
sub
out
dec
push
push
addl
sbb
aad
test
mov
std
cmpsb
call
outsb
inc
fs
add
sub
mov
popa
cmp
dec
add
iret
or
add
stos
rolb
inc
adc
mov
repnz
dec
into
adc
aam
in
and
dec
dec
mov
add
or
movsb
adcb
call
arpl
sub
xchg
bound
mov
pop
add
movsl
sbb
pop
lds
mov
jmp
loopne
mov
mov
add
push
jge
adc
mov
dec
das
or
xchg
sbb
pop
fldt
test
dec
and
xchg
rorl
ds
and
cmp
sarb
lock
adc
bound
push
gs
js
jno
push
jp
mov
lcall
nop
and
adc
cmp
xor
rclb
add
mov
faddl
sub
addl
les
fstpl
rcll
sbb
cmp
sbb
dec
cwtl
or
add
bound
adc
mov
scas
cld
or
test
popa
mov
jg
ret
inc
adc
mov
fsts
sahf
sub
cmp
cld
ret
sub
cltd
sar
aad
hlt
lds
jle
ss
jne
das
jge
xor
and
sub
adc
sub
cmp
std
outsl
cmpl
fs
fnsave
sub
int
mov
aad
xchg
std
aad
mov
xor
fmulp
adc
jle
push
icebp
mov
push
ror
sub
mov
jl
or
add
xchg
test
mov
mov
jo
nop
jmp
mov
inc
aam
push
clc
dec
xor
xlat
es
shlb
sub
loope
pop
sub
lahf
adc
or
test
inc
mov
stos
and
adc
stos
fsubp
js
or
mov
dec
push
xor
cltd
leave
mov
enter
inc
adc
inc
push
mov
sbb
sub
insb
and
mov
pusha
add
outsb
jp
fwait
popf
mov
lcall
loopne
fwait
ljmp
inc
nop
add
lock
or
call
dec
pushf
cmpsb
mov
mov
or
push
inc
rol
jo
adc
rorb
jbe
and
cmp
rclb
inc
outsb
push
mov
in
and
cmp
dec
shrb
mov
add
es
sbb
dec
xorb
rcrb
dec
das
stos
addl
add
mov
mov
xchg
int
rorb
cltd
and
cmpl
mov
pop
push
cmp
jbe
js
ret
xchg
aas
test
push
jg
jno
push
rcll
jmp
int
sub
xor
das
jns
jb
fstps
ss
mov
mov
dec
jecxz
cwtl
rcrb
inc
cmpsb
pop
sarb
push
int
fwait
adc
test
daa
jecxz
adc
stos
jp
stos
pop
inc
pop
ror
hlt
jnp
or
adc
mov
inc
fistl
or
loopne
mov
ds
arpl
push
add
inc
je
inc
gs
inc
inc
adc
and
js
lret
jne
add
cs
loope
or
mov
andl
jb
shrb
repz
pop
test
repnz
xor
dec
jl
sbb
fidivrl
pop
mov
out
aam
jecxz
add
lcall
in
pusha
push
pop
mov
std
popa
data16
fbstp
and
lods
stos
daa
sub
add
inc
push
in
pop
jge
or
xor
rorb
pop
xor
xor
mov
adc
sub
int
xor
jl
push
or
adc
mov
js
fimuls
cltd
cmpsb
insl
xor
and
cmp
jb
lock
add
neg
mov
ret
xor
jns
jb
push
jne
pop
ret
inc
sar
nop
and
and
and
flds
dec
add
dec
mov
jbe
adc
dec
lock
ret
add
adc
xor
sahf
fidivs
repnz
and
adc
add
xor
mov
dec
adc
andl
mov
xchg
push
into
pop
mov
int
push
fbld
adc
sbb
jp
js
and
dec
neg
adc
mov
lret
xchg
inc
jb
inc
and
lcall
int3
add
mov
jge
repnz
inc
daa
cmp
xor
xchg
or
dec
cmp
xchg
push
daa
mov
push
cmovbe
cmp
addl
lcall
lock
insl
loop
das
ljmp
adc
or
rorb
xchg
je
popf
adc
iret
dec
cmp
jnp
in
cs
mov
fidivrl
lods
adc
aam
push
ljmp
stos
lcall
add
les
jg
xchg
add
inc
das
subb
push
jbe
andb
bound
addb
stos
fiadds
ficoms
in
pop
adc
xorb
into
sub
test
pop
enter
inc
xchg
dec
fmuls
das
sbb
bound
add
adc
mov
les
mov
push
pop
mov
test
add
adc
daa
push
mov
or
xor
inc
mov
fnsave
and
out
imul
mov
bound
mov
push
ret
aas
int
sbb
jp
outsl
mov
inc
add
dec
fildll
out
adcb
insl
pop
out
pop
sub
cmp
push
stc
fwait
in
inc
test
cmp
pop
add
je
divb
dec
push
shlb
jge
mov
dec
inc
sbb
push
xor
mov
mov
hlt
loopne
test
jae
arpl
lock
push
cmc
xor
fs
test
sbbl
add
inc
pop
push
data16
fistps
je
add
mov
push
mov
mov
dec
add
push
lret
imul
and
jmp
loop
cmp
daa
inc
shlb
sbb
sarb
xchg
inc
out
insl
dec
push
or
cmc
and
dec
test
jne
pop
cltd
std
pop
jno
add
roll
inc
aas
rcll
inc
xor
dec
xchg
and
xchg
sti
adc
scas
and
rorl
sub
pop
lods
push
rcl
inc
out
add
add
mov
aaa
and
aam
mov
add
sahf
sub
jne
or
loopne
gs
mov
in
adc
data16
or
mov
or
cltd
into
and
inc
aam
pop
jb
xor
sahf
lds
dec
jmp
and
adc
cmc
fsubrs
in
jnp
mov
movsl
cmp
xchg
push
push
movsl
scas
gs
mov
jmp
lret
movsb
mov
xor
mov
cltd
inc
mov
adc
lcall
std
cld
mov
leave
scas
add
add
ljmp
mov
add
mov
add
xchg
cld
aad
jbe
mov
inc
nop
sub
pop
push
push
push
xor
enter
push
xor
call
lea
adc
xchg
and
in
xor
hlt
add
shlb
out
test
int
and
cmp
xorb
fidivrl
lock
cmp
das
aam
ljmp
loopne
and
into
add
mov
arpl
aaa
mov
push
rolb
mov
xor
ja
loop
mov
lds
mov
add
adc
out
sub
add
clc
pop
dec
or
stos
pusha
data16
cmc
sbb
inc
cs
stos
push
in
jmp
fwait
cltd
add
xor
test
ja
pop
push
stc
icebp
sbb
dec
push
int
inc
push
jb
data16
adc
adc
rolb
pop
mov
or
out
inc
xor
orb
and
orb
js
pop
adc
and
arpl
inc
rcll
les
cmp
push
inc
or
add
push
mov
jne
fsubrp
xor
or
stos
mov
inc
hlt
inc
and
lock
and
icebp
sbb
cmp
imul
es
les
lahf
mov
add
cli
dec
int
pop
add
mov
ljmp
stos
fcmovnb
xor
loopne
add
adc
mov
cwtl
rclb
mov
pop
xor
jl
dec
movw
pop
enter
shlb
mov
in
or
or
or
adc
adc
add
es
das
adcb
int3
es
incl
test
and
push
fiaddl
aad
andb
or
fmul
fwait
loopne
push
lahf
f2xm1
mov
add
mov
jno
push
mov
sub
xor
cmp
addb
inc
sarl
push
incb
imull
pop
push
sub
jp
add
mov
add
test
inc
test
push
arpl
cmp
mov
cwtl
in
sbb
bound
sbb
std
lock
gs
push
mov
and
xchg
jno
sbb
mov
fcompl
xchg
add
pushf
sub
out
mov
in
cmp
adc
xor
gs
cwtl
xor
cmp
mov
fnstenv
js
mov
fidivl
push
pop
and
cmp
ss
xor
mov
jne
test
dec
push
adc
xchg
push
mov
repz
mov
or
cmp
sbb
sub
inc
out
jmp
jmp
xorl
add
xorb
sub
loopne
pop
adcb
jecxz
jmp
mov
and
xor
movsbl
push
loope
pop
xor
sbb
and
cmp
cmp
out
ss
mov
push
xchg
push
call
add
das
add
push
mov
lds
pop
cmp
dec
insl
pop
ds
mov
xlat
cwtl
js
sbbb
out
addb
enter
or
dec
inc
int
ficoml
fucomip
inc
mov
sub
shr
dec
fcoms
enterw
cmpl
mov
or
inc
add
loop
and
xor
fadd
jne
mov
pop
inc
dec
lret
add
add
jl
mov
or
add
je
xchg
add
das
adc
ret
inc
mov
ds
andb
sbb
flds
mov
sbb
outsl
sahf
lods
jp
lods
adc
xor
and
fiaddl
pop
into
stos
in
pop
mov
int3
nop
mov
shll
push
and
js
or
ret
mov
add
mov
dec
repz
mov
inc
sbb
nop
call
push
icebp
fsubrl
les
push
xchg
push
lret
repnz
hlt
lret
stos
pop
adc
test
loopne
out
dec
adcb
test
in
jl
lock
sub
ficoms
dec
fs
lcall
cwtl
icebp
pop
pop
push
xchg
addb
fcoms
pop
ja
in
stos
and
sub
lcall
add
insl
lods
sbb
test
xor
sub
add
mov
sbb
lret
fsub
cmp
inc
leave
sbb
and
testl
mov
iret
inc
pop
sub
cmp
rclb
hlt
or
xor
xchg
je
sbb
lds
and
fdivrl
adcb
adc
ss
push
fidivrl
fbstp
das
pop
or
adc
pop
test
xchg
inc
inc
add
jp
dec
mov
daa
mov
insb
add
adc
clc
and
push
add
dec
jno
movsl
cwtl
nop
sub
or
push
adc
mov
hlt
lcall
dec
adc
mov
push
jno
mov
pop
add
jg
aaa
ljmp
pop
ds
stos
incl
cli
pop
push
jge
xchg
add
movsl
add
inc
mov
fsubr
stos
sub
push
sub
fiaddl
mov
mov
xchg
sub
dec
mov
add
ljmp
pusha
xchg
fdivrl
add
loop
push
mov
out
add
repz
iret
add
roll
lea
xchg
push
incl
fistpll
pop
xchg
adc
mov
test
mov
lods
adc
pop
jl
fildll
popa
or
cmp
fistpl
cmp
and
or
mov
sbb
ret
mov
pop
dec
ja
cmp
push
or
scas
push
and
cmpsb
pushf
clc
dec
rcrb
xor
imul
fisubrl
and
inc
adc
xor
sbb
xor
jbe
dec
sub
int3
in
xor
mov
jns
dec
jbe
out
pop
inc
int
sar
xor
imul
data16
add
mov
add
inc
and
cmc
fcomps
decl
imulb
test
mov
pushf
jp
inc
jbe
repnz
repnz
and
jns
jbe
push
aad
std
incl
call
jmp
jle
add
cmp
aaa
jg
push
add
rclb
insl
xchg
or
cltd
mov
mov
sub
mov
adc
sub
cmp
sbb
jbe
mov
inc
cmp
call
stc
dec
jne
push
popf
ss
in
inc
xchg
cmp
mov
mov
lods
nop
loopne
movl
push
ss
adc
or
shll
xor
sub
ljmp
add
pushf
iret
loop
inc
int3
shl
shll
lret
and
mov
lret
or
cli
lods
pop
jne
loop
xor
cmp
jg
xchg
add
lea
add
loope
push
add
sbb
cmpsl
and
inc
adc
test
hlt
cmp
stc
xor
add
cld
mov
push
ds
scas
add
les
add
addb
sti
decl
call
and
in
jle
adc
add
jecxz
jge
mov
adc
test
popa
push
pop
daa
inc
mov
dec
leave
lds
xchg
inc
dec
outsb
aad
mov
roll
orb
xchg
mov
sar
mov
and
clc
sbb
push
adc
cli
in
enter
in
js
mov
out
add
push
jmp
loope
push
cmp
xchg
jns
inc
jbe
xchg
jecxz
mov
pop
add
pop
mov
xchg
cmp
add
xchg
mov
mov
add
test
and
mov
xchg
adc
pusha
inc
js,pt
jne
stc
add
testb
notl
sbb
loop
shrb
sbb
fstps
or
sahf
test
insb
mov
and
jg
in
add
frstor
add
test
xor
push
xor
jg
dec
imul
jecxz
stos
rorb
and
pop
add
andb
adc
out
decb
mov
mov
pop
mov
sbb
aas
cli
fcomip
fists
orb
push
shrb
ficompl
mov
pop
sbb
sbb
clc
mov
push
xchg
sub
push
sub
rolb
std
jg
aam
inc
push
pushf
ffreep
adc
roll
loope
icebp
adc
or
pushf
push
fsubr
enter
add
mov
mov
add
add
sbb
cli
data16
loop
out
popf
pop
popf
mov
inc
inc
mov
popl
and
lock
repz
push
and
orl
rcr
mov
packsswb
adcl
or
and
or
mov
push
cmp
insl
or
add
add
sub
mov
mov
jns
sbb
jb
pusha
mov
or
add
jne
outsl
shll
fstpt
or
in
pop
add
jnp
pop
sbb
inc
and
dec
rorl
fwait
or
xchg
andl
or
or
movsb
fisttps
cmp
test
sub
outsl
mov
imul
adc
and
icebp
mov
inc
jb
ds
add
sub
adc
add
push
loopne
andb
ficoms
je
and
and
pop
cmpl
frstor
stos
loop
add
push
sub
loopne
pop
imul
cwtl
and
add
imul
dec
jg
push
es
out
hlt
sbb
fdivs
push
faddl
aad
and
and
add
fisttps
push
lea
adc
add
add
movsl
aad
aas
mov
push
pop
push
and
and
ret
push
or
scas
ja
sbb
out
les
shrb
push
lcall
clc
pop
insb
mov
add
mov
pop
inc
pushf
addb
test
or
ret
mov
popf
in
cld
dec
stos
repz
hlt
and
pop
xchg
push
rclb
mov
push
iret
push
cmp
decl
rcrl
bound
push
sub
cli
and
je
sub
cmp
sbb
stos
pop
jg
add
sub
icebp
aas
std
aaa
adc
rcll
sbb
loop
mov
insl
add
sbb
inc
cltd
sub
mov
in
ss
inc
mov
dec
shrl
adc
pushl
push
sti
jae
shll
and
imul
fdivr
adc
nop
int3
cmpsb
dec
inc
outsb
xor
adc
add
mov
adc
aam
jecxz
fnstenv
decl
incb
or
cmp
subb
mov
xor
cmc
push
mov
lods
pop
pop
or
outsl
rolb
loop
push
dec
stc
xchg
add
adc
xlat
mov
lcall
mov
dec
into
into
sbb
sub
add
add
xchg
add
in
or
stos
sbb
xor
mov
mov
repz
test
or
sub
ret
adc
push
jo
dec
das
xor
icebp
inc
lock
repz
jbe
mov
repnz
rclb
pop
mov
adc
pop
jbe
enter
mov
les
sbb
ret
add
add
adcb
add
inc
dec
movsl
mov
roll
call
xchg
mov
das
mov
icebp
fisttps
dec
movsb
cli
mov
mov
cmp
jb
adc
xchg
cs
shlb
xor
or
push
push
or
pop
inc
or
rolb
xor
subb
jg
inc
sbb
and
add
xor
mov
or
and
jg
ret
jg
sub
insl
sbb
nop
push
test
mov
mov
rolb
lods
repz
lahf
adc
rcrl
and
sub
lds
rorw
push
ret
sbb
inc
sub
inc
aas
adc
and
add
out
nop
ja
cld
jg
fisubl
xor
jmp
dec
xor
push
and
jae
jl
add
add
jo
jp
sub
decl
xchg
mov
daa
pusha
pop
vmwrite
mov
les
adc
xlat
fwait
or
fadds
xchg
sub
inc
daa
adc
cmpsl
inc
sbb
add
dec
fucomi
xchg
ljmp
inc
je
mov
mov
add
ret
inc
mov
icebp
xor
lock
jno
es
mov
insl
sbb
clc
pop
add
xchg
mov
cmpsl
jne
mov
push
add
xchg
pusha
lret
addr16
xchg
xorl
scas
imul
lret
in
in
lock
out
sarb
mov
or
ret
push
xchg
and
loopne
and
outsb
mov
push
xor
orb
mov
into
std
add
and
rorb
or
pop
popa
ret
or
xor
hlt
sub
cmpsb
mov
inc
ja
pop
push
pop
add
cmp
and
popa
jecxz
leave
pop
pop
push
inc
daa
jmp
cmp
sub
xor
test
inc
mov
mov
fsubr
adc
aas
mov
jnp
and
mov
xchg
pop
sahf
psrld
rcrb
mov
dec
fbstp
jge
jl
enter
xor
add
dec
sbb
or
jno
add
pop
imull
clc
jecxz
rcl
adc
add
pop
pop
incl
ljmp
into
mov
call
mov
stc
iret
sbb
inc
add
lea
lcall
dec
adc
jo
fcoml
test
or
and
int3
sbb
adc
cmp
scas
sbbb
push
mov
icebp
mov
mov
sbb
or
push
add
scas
adc
aas
les
jb
fistps
mov
mov
sub
add
adcl
pop
popf
mov
cld
sbb
test
mov
push
add
out
lods
jle
and
cld
inc
mulb
mov
mov
fs
popa
jmp
notl
pop
ljmp
movntq
fcmovnb
lret
out
inc
add
cmp
cmc
les
call
jb
icebp
mov
mov
loop
mov
stos
mov
loope
xor
sub
pop
sbb
loop
das
fildl
sbb
inc
push
int
out
jmp
cmp
lret
loope
push
addr16
lcall
sti
into
mov
pop
dec
dec
adc
in
outsb
cli
lock
loopne
mov
mov
xlat
xchg
test
insb
incl
popf
shrb
push
lret
testl
cmp
jnp
insl
stos
add
inc
pop
in
push
jo
pusha
scas
cmp
aaa
mov
lea
lcall
icebp
repz
mov
arpl
push
outsb
xchg
cli
xchg
xor
mov
jbe
sub
movsl
mov
andb
jmp
cli
stos
pop
sub
dec
leave
mov
out
add
aad
or
mov
fbld
out
push
clc
and
lds
fcmovne
movsb
add
xchg
cmp
pop
push
mov
push
shl
pop
add
mov
pop
jl
das
icebp
push
jl
jbe
push
xchg
inc
inc
pop
push
mov
int3
das
inc
fcmovnu
aaa
add
fldenv
jle
jne
dec
lret
mov
imul
cmp
and
insb
lds
out
es
mov
lcall
dec
sub
mov
pop
cmp
mov
jne
inc
scas
mov
inc
lock
andb
out
jns
int
fisubrl
adc
dec
bound
jl
loope
dec
loopne
ret
out
pop
rorl
popa
imul
hlt
mov
shll
cmp
push
hlt
pop
mov
rclb
sub
mov
jl
mov
adc
jmp
inc
xchg
pop
inc
push
fsubrl
jp
push
mov
sbb
inc
cmpb
xchg
call
ds
add
inc
xchg
sbb
sbb
push
outsl
cmp
cld
inc
lret
adc
shrb
inc
mov
add
and
fmul
xchg
or
or
fcmovne
insl
push
sub
shl
pop
repnz
mov
loope
and
pusha
or
stos
dec
cld
or
or
inc
or
stos
push
call
fdivrl
lds
ljmp
push
mov
ret
fsubl
lods
pop
mov
fiaddl
sbb
in
stc
sub
clc
push
aad
mov
and
pusha
adc
das
ss
xor
push
mov
pusha
ftst
into
std
lods
jo
fwait
sub
dec
add
cltd
mov
cld
jae
sbb
xor
pop
popa
enter
pushf
push
adcl
adcb
sbb
test
js
adc
dec
stos
into
xor
cld
dec
adc
inc
dec
dec
jne
sub
ror
add
and
xor
rcr
add
loope
mov
roll
fdivs
cmovne
das
jns
je
push
push
adc
mov
or
clc
lahf
int
lret
repnz
sbb
ljmp
mov
jb
outsb
and
push
adc
loop
js
lahf
cmp
movsb
cltd
dec
sbb
and
jmp
aam
xchg
cmp
fwait
clts
mov
lcall
or
insb
jne
and
mov
popa
shl
cmpsb
or
andps
enter
jae
pusha
sbb
popf
daa
lahf
cld
dec
pop
push
push
mov
call
subl
sbb
std
addl
lds
pushf
cmp
jp
mov
orl
push
pop
loopne
stos
push
mov
mov
cld
xorl
or
cmp
cli
mov
aam
test
orb
mov
mov
or
inc
add
fsubrl
ljmp
test
mov
inc
lret
aaa
mov
or
out
loope
push
push
fiaddl
lret
dec
adc
mov
push
sbb
add
ficoms
cs
enter
sub
xlat
or
clc
pop
inc
mov
cmp
xchg
js
sbbb
test
and
mov
push
je
and
int
add
pop
and
js
pop
push
sti
jl
arpl
popf
mov
lds
pop
rorl
outsb
mov
loop
ror
mov
pop
and
push
and
les
sbb
lods
cmp
data16
jp
pop
jo
movsl
into
aam
push
mov
dec
das
and
inc
push
pusha
fstpt
sub
jns
cmp
add
mov
cmp
jge
pop
or
fstp
jo
pop
or
daa
mull
mov
bound
decl
mov
pop
negl
mov
mov
in
push
aam
loope
and
lock
lods
fsubrs
popa
or
push
inc
adc
inc
cli
xlat
dec
xor
mov
std
mov
inc
mov
xchg
push
pop
icebp
ds
add
jecxz
stos
bound
pushf
sbb
clc
and
rorb
pop
cmp
outsb
mov
in
pop
xchg
mov
cld
outsl
sub
adc
push
inc
jne
rcl
lds
mov
dec
dec
nop
mov
add
mov
mov
leave
mov
in
outsb
pusha
mov
add
and
inc
incb
jae
fisttpl
mov
xchg
adc
cmp
lock
cltd
or
ljmp
xchg
add
fwait
dec
dec
pop
shrb
ljmp
jno
mov
ds
sbb
sti
inc
jo
xlat
movsl
sub
and
sub
add
out
and
mov
mov
inc
fdivs
dec
add
inc
jge
fcom
pop
and
rcrb
push
lock
outsl
pop
pop
xchg
fcom
lods
add
and
dec
push
mov
rcrb
adc
cvtdq2ps
mov
imul
dec
out
mov
or
and
pusha
adc
add
mov
add
adc
inc
xchg
and
mov
dec
mov
xchg
and
je
dec
leave
stos
and
pop
clc
push
iret
sbb
add
or
adc
ja
sub
mov
fmull
push
shll
adc
inc
test
push
dec
aad
push
out
or
pop
outsb
lods
lock
or
movb
lret
or
ja
js
ja
add
xor
sbb
xchg
cld
xor
mov
fldl
mov
sbb
mov
fisttps
xor
mov
pop
cmc
push
lods
mov
rorb
shrb
sub
lock
sbb
xor
add
jae
jae
rcll
subl
push
in
dec
gs
add
shrb
xor
or
mov
jle
loop
aad
sub
mov
std
loop
adc
insl
xchg
mov
xor
dec
fcomps
xlat
adc
cmpsb
jp
adc
add
les
xor
in
xor
sbb
or
and
mov
pusha
add
pushf
and
into
clc
shl
adc
repnz
shl
xor
jbe
cmp
mov
sbb
loopne
ss
ljmp
or
push
cld
and
call
int3
add
adc
cltd
jb
add
jno
enter
adc
aam
mov
or
xchg
mov
aad
sbb
out
fnstcw
pop
cmp
hlt
dec
cmp
or
lock
js
sbb
in
daa
call
push
xor
xchg
sub
cmp
pop
sbb
xchg
add
je
movsl
addb
xchg
lods
add
jno
sbb
mov
nop
push
out
cmp
xor
mov
add
cmpsb
or
lock
out
cltd
pop
fbstp
lock
jmp
in
cmp
cmp
shlb
nop
stc
add
jo
adc
stos
jbe
inc
lods
scas
das
push
sarl
cli
sahf
mov
xchg
loopne
sbb
mov
xor
shl
pop
push
mov
js
mov
jnp
mov
dec
sbb
xchg
and
sub
arpl
test
clc
loop,pn
sbb
add
jg
loopne
inc
inc
mov
loopne
cmp
mov
or
ficomps
pop
sti
adc
sbb
xchg
call
mov
mov
push
in
inc
lds
sub
fs
test
fsub
cmc
adc
xchg
mov
ss
sti
out
mov
push
lods
inc
mov
mov
insl
lret
or
xlat
add
mov
jg
fbstp
jmp
pusha
sarl
and
ffreep
adcl
mov
or
xor
xchg
dec
sub
fildl
stos
mov
pop
inc
dec
cltd
in
icebp
loopne
push
xor
push
ret
mov
inc
pushl
inc
push
add
daa
cmpsl
and
bswap
push
stos
test
stos
les
pushf
out
inc
add
cmp
icebp
shlb
mov
hlt
and
add
fistpl
rorl
mov
icebp
mov
fidivs
inc
cld
jl
add
cld
aaa
stc
out
xor
shlb
pop
mov
or
add
add
in
push
sub
insl
mov
ret
push
adcb
lret
mov
cld
fildll
add
mov
adc
xchg
ljmp
es
or
icebp
mov
add
mov
push
push
or
push
ljmp
adc
push
or
adc
outsl
adc
mov
sbb
xor
or
push
dec
adc
inc
add
ret
push
sbb
push
or
inc
das
adc
adc
or
xor
fmull
add
mov
mov
inc
mov
lret
cmpsb
fwait
mov
dec
movsl
inc
xchg
fiaddl
pushf
fdiv
xor
loopne
lods
adc
or
inc
cld
outsb
add
inc
lahf
pusha
adc
fldl
adc
cmpb
adc
shlb
sbb
jbe
xchg
adc
mov
js
sub
inc
insb
push
movsl
sub
sub
xor
int3
mov
mov
xchg
test
push
pop
mov
je
sbb
aad
or
mov
push
dec
call
push
inc
ret
add
xor
push
cmpl
mov
cld
sbb
jmp
clc
jle
popl
mov
lock
out
inc
inc
mov
add
cmp
pop
adc
jno
in
dec
insb
cld
insl
scas
dec
xchg
mov
add
andb
dec
sbb
outsl
push
xor
or
imul
psrld
clc
cmp
push
mov
mov
sbb
adc
dec
cmp
inc
scas
jne
mov
outsb
adc
lods
add
mov
pop
nop
into
adc
jp
lock
and
add
cmp
jno
xchg
repnz
inc
inc
xorb
add
test
int
shlb
dec
in
sub
inc
pusha
les
pop
inc
cmpsb
mov
lds
cmpsb
lea
js
add
pop
ljmp
pop
clc
movsl
iret
insb
mov
inc
pusha
inc
pop
xlat
mov
outsl
jno
fnsave
ret
cmp
lock
and
or
or
mov
fidivl
pop
mov
out
cmp
mov
lcall
cmp
cmpsb
lcall
mov
repnz
push
add
adc
sbb
pop
mov
and
fdivr
push
push
mov
fistl
push
sahf
jmp
pop
cmpb
lock
std
hlt
stos
adc
les
fbstp
subb
in
stos
jne
sarb
sub
xchg
dec
jg
cs
mov
push
jle
icebp
sbb
outsl
lret
jnp
push
or
push
cmp
clc
mov
xlat
lcall
dec
mov
cmp
lea
rcrl
sub
sahf
subb
jne
jmp
sbb
lea
roll
dec
mov
pop
incb
sti
test
mov
or
mov
add
cmp
in
into
fbld
lea
push
or
fisttps
pop
jbe
jnp
fisubrs
add
inc
daa
push
cmp
inc
add
add
sbb
cmp
subl
jmp
fs
jnp
add
or
loope
mov
xchg
sub
adc
and
in
sarb
xor
sbb
lods
test
jecxz
js
or
ja
sti
xchg
add
lcall
clc
pop
sti
jno
movsl
fs
pop
ja
dec
inc
mov
std
das
pushf
jne
xor
xchg
pop
int3
jecxz
es
jmp
mov
xor
mov
adc
cmp
clc
pop
mov
lods
sbbl
cmp
xor
dec
aaa
inc
out
out
call
int
pusha
and
in
pmullw
data16
shrb
dec
mov
mov
push
xchg
popa
and
cltd
add
pop
es
std
out
lea
mov
mov
mov
addl
fisubrl
cmp
mov
fisubrs
cmc
int3
movsb
or
jbe
mov
mov
out
push
push
adc
gs
call
in
fsubl
mov
faddp
sbb
mov
popf
fisubrl
aam
loopne
js
jl
mov
and
out
addb
aam
insb
adc
adc
add
call
stos
addl
or
into
mov
dec
aad
fisttpl
mov
mov
fisttpl
imul
inc
rolb
lea
push
outsl
filds
jb
and
pop
mov
sbb
lcall
sbb
and
mov
xorl
lock
or
popa
adc
xor
outsl
push
mov
mov
inc
add
scas
add
outsb
add
inc
frstor
es
xchg
adc
adc
pop
push
fistpll
mov
cmp
cli
or
jmp
push
mov
lret
jmp
rcrb
aad
pushl
hlt
push
sbb
ret
xchg
pusha
jbe
dec
cmp
pop
cmp
xchg
dec
fst
fstpl
pushf
mov
popf
cmp
or
sub
inc
in
mov
sub
pop
pop
and
jnp
dec
and
pusha
imul
pop
push
pop
and
fistps
enter
fwait
inc
andb
dec
mov
sbb
lea
lret
add
push
sub
lock
sub
test
clc
repnz
push
loope
rol
mov
neg
ss
push
loope
xchg
pop
sub
and
inc
xchg
xor
dec
push
jp
icebp
push
sub
ds
push
push
fnstenv
push
mov
nop
pop
xchg
aas
andb
enter
inc
andps
int3
add
stos
idivl
pop
ja
xchg
mov
and
fs
pop
add
int3
mov
or
mov
adc
xchg
mov
or
inc
pop
fdivp
pop
pushf
cld
or
in
push
movb
mov
test
je
std
cmp
ds
sbbb
and
rol
ss
dec
ja
out
leave
mov
insl
or
push
ja
add
sarl
jg
and
fstpl
cmp
pop
mov
orl
jge
or
mov
outsb
pushf
and
dec
jg
outsl
lea
cs
add
adc
shl
lods
sub
mov
mov
lret
fsubrp
out
and
pop
in
mov
in
fwait
mov
sbb
std
dec
in
sub
addl
mov
sbb
or
jnp
ja
xchg
repz
and
ljmp
insl
sub
pop
and
call
sbb
push
mov
div
jbe
sub
into
icebp
mov
call
and
gs
sbb
mov
mov
xchg
mov
cld
popa
mov
push
pop
arpl
sbb
xor
xor
sbb
jp
lcall
inc
jne
push
lods
pop
ja
sti
lods
enter
rsm
sub
roll
filds
mov
xchg
iret
lret
scas
fsts
jne
lret
pop
js
pop
jbe
pop
mov
decl
xchg
rol
mov
nop
jmp
aad
jb
outsl
mov
out
ljmp
jae
mov
jae
out
stos
dec
mov
mov
ja
clc
pusha
fucom
push
cmp
pop
dec
and
inc
mov
out
mov
sbb
jg
and
ficompl
stc
mov
out
push
test
daa
dec
push
lods
std
mov
inc
xchg
int3
in
sub
nop
adcb
mov
sub
test
lock
les
jo
inc
sub
roll
movsl
pop
inc
mov
jg
mov
jmp
jle
jns
or
jg
das
rcrb
test
pop
gs
xor
pop
dec
cmp
insl
and
loope
and
in
add
inc
out
push
cwtl
xor
sbb
icebp
xor
pop
gs
das
pop
push
pop
adc
in
inc
xchg
shrb
pop
xor
movsb
cmp
test
call
jecxz
pop
dec
push
pop
and
sti
xchg
gs
in
adc
adc
dec
or
outsl
pop
or
push
lret
xchg
test
inc
sbb
adc
js
sub
mulb
push
cli
clc
mov
outsb
and
add
cmpb
jb
out
gs
cld
sbb
push
shrw
inc
inc
and
std
lcall
fldt
xchg
push
cltd
adc
cmc
jne
or
add
xor
call
dec
enter
pop
clc
dec
iret
fcmovnb
and
inc
pushf
cmc
pop
add
in
incl
add
pop
cmovno
fsubrp
mov
lods
inc
lea
into
xchg
jle
mov
int3
pop
and
sub
inc
pushf
stc
lcall
popf
loop
rcrl
lcall
sar
jecxz
addb
sbb
xchg
xor
clc
mov
rcrb
xchg
pop
lret
adc
push
jg
mov
and
push
dec
ss
mov
xor
push
std
mov
cmp
subb
in
add
cmp
neg
neg
adc
push
sbb
clc
push
jne
pop
inc
jne
adc
sarb
mov
push
daa
inc
push
mov
push
dec
test
adc
sub
and
xor
rorb
hlt
int
inc
aad
cmp
adc
add
stos
out
int
test
push
pop
je
aad
loopne
rolb
sbb
push
and
loopne
jae
sbb
add
or
cmp
cltd
add
mov
or
pusha
add
test
or
lret
cmp
or
adc
das
ss
inc
outsb
add
loopne
sub
je
and
mov
insl
or
loopne
fimuls
mov
scas
add
icebp
loopne
add
add
dec
xlat
push
popa
cwtl
adc
imul
jo
daa
adcb
into
or
and
and
and
push
push
loop
fcoms
or
cmp
add
lock
shrl
nop
rclb
inc
fildll
addb
or
cli
and
test
mov
xlat
push
aam
test
push
cld
pop
xchg
adc
fsubr
test
inc
inc
fwait
loopne
or
push
setle
pop
lods
mov
or
rclb
dec
sub
mov
sbb
sbb
add
sbb
rol
sbb
clc
cmp
test
push
mov
push
int3
mov
scas
mov
or
mov
add
jno
dec
add
nop
lods
loope
mov
sbbl
filds
adc
cmp
je
and
int3
add
add
fisubs
and
loope
cld
pop
sarl
sub
add
ss
mov
and
mov
or
mov
hlt
leave
ret
lea
xchg
fsubrp
adc
dec
popa
xchg
or
mov
inc
sarl
xchg
sbb
mov
dec
pusha
push
and
push
push
call
cmp
int3
adc
mov
fdiv
inc
mov
out
cli
lcall
shrl
js
push
and
call
xor
repnz
adc
ds
hlt
dec
and
aaa
jl
orb
out
and
loopne
scas
int3
out
fsubr
inc
adc
fcoml
aaa
mov
push
cld
add
lret
jp
sbb
xchg
mov
push
pop
sbb
dec
jmpw
in
fsubrs
pushl
mov
gs
xchg
adc
sub
xchg
adc
ja
jg
push
adc
aam
pushf
sbb
pop
lret
add
dec
mov
sub
orl
aaa
js
sub
mov
or
loop
inc
add
and
ja
fisubrl
mov
mov
sbb
adc
mov
or
and
ljmp
adc
sbbl
sbb
scas
push
insb
dec
pop
stos
jecxz
mov
pop
mov
jnp
mov
loope
sbb
sub
fnstcw
fcoml
mov
shll
mov
adc
xor
cmp
cmpsl
or
lahf
pushf
add
mov
popf
sti
mov
mov
ss
add
shll
push
inc
sub
popa
pushf
fs
add
adc
jmp
push
das
and
into
pop
inc
addb
or
and
call
mov
filds
add
pop
out
leave
push
xor
cmp
inc
mov
loopne
adc
mov
mov
lock
or
push
scas
out
xor
lods
inc
jmp
sbb
jo
mov
pop
mov
dec
sbb
call
sub
into
mov
test
cmpb
push
sbb
inc
or
insl
cmp
sub
test
jmp
lock
in
rol
ja
inc
or
cli
stos
sub
psllq
add
mov
mov
xor
mov
pop
mov
and
xchg
and
jb
rcr
pop
inc
or
sub
stc
dec
addb
adc
ljmp
xor
cmpsb
and
sbb
pop
bound
xchg
add
xor
out
scas
insb
cs
mov
mov
mov
lea
mov
and
or
sbb
pop
imul
in
cli
addr16
fbstp
stos
push
mov
pop
lea
mov
cmp
dec
fisttps
lods
inc
push
sub
jle
movb
rcll
loope
push
jbe
and
ljmp
ret
cld
fistpl
mov
inc
mov
test
jns
push
push
call
icebp
dec
ljmp
mov
fists
ljmp
jnp
or
xchg
push
idiv
shrb
adc
adc
sti
or
out
add
repz
adc
out
inc
movsb
faddl
hlt
leave
xchg
cwtl
lock
jl,pn
mov
or
jecxz
push
mov
jno
popa
jl
sti
lea
into
pop
xor
rcrb
sbb
insl
cld
jg
lods
fistl
mov
nop
pop
cld
outsl
mov
insl
sbb
aas
mov
mov
mov
inc
in
int
insl
mov
idivb
jl
push
mov
je
sahf
stc
adc
ljmp
nop
jbe
ret
js
bound
shl
push
xlat
incl
push
pushl
push
jmp
jecxz
inc
cmp
add
loopne
and
adc
jp
fisttpl
or
push
aad
inc
inc
mov
push
inc
sub
sbb
or
aam
addb
jmp
out
add
cs
and
sub
sbb
mov
shll
lock
push
test
in
sub
push
mov
adc
push
loope
pop
lock
int
adc
mov
mov
pop
shrb
adc
xchg
adc
repnz
jge
or
gs
dec
je
fdiv
xor
or
add
ret
and
pop
sti
ja
pop
pop
ret
add
ret
adc
pop
pop
leave
ret
dec
sbb
mov
mov
add
ret
shlb
adc
and
subb
jmp
and
inc
add
call
mov
add
mov
or
dec
and
dec
and
add
and
add
insb
jnp
and
push
mov
inc
or
adc
insl
jbe
addb
add
mov
add
and
adc
adc
and
in
lods
jb
adc
andb
add
adc
and
dec
jnp
mov
ds
daa
add
lods
adc
and
mov
and
adc
add
adc
ja
mov
mov
add
mov
mov
orb
sub
mov
mov
and
pushf
mov
mov
lods
pop
movsb
sbb
in
lods
jae
lret
fcmove
add
add
xlat
pop
mov
inc
addb
add
aaa
leave
test
inc
pusha
cmp
dec
bound
int3
pop
mov
or
pop
xchg
adc
cli
push
bound
adc
mov
aaa
cmp
gs
xchg
or
and
add
aas
inc
push
movb
ret
pop
imul
sbb
shl
add
decl
test
arpl
xor
add
add
sbb
mov
clc
jge
in
iret
incl
lds
aas
mov
add
lret
arpl
outsl
incl
pushf
pusha
iret
push
int
jl
flds
xchg
or
orb
push
jg
inc
add
pop
xor
movsb
push
push
jbe
cld
add
sarb
incb
xor
insl
movb
push
test
and
jno
and
adc
push
add
mov
insl
fists
or
mov
stos
mov
cwtl
les
jmp
add
subb
mov
cmp
mov
shrl
add
mov
gs
je
add
inc
cwtl
shl
pusha
jne
mov
fucomi
fsubrs
adc
add
jmp
cmp
jae
and
add
jl
jmp
or
sbb
movb
cltd
inc
sahf
div
in
filds
add
add
cmp
jo
loop
sub
lret
std
cmp
lcall
insl
mov
push
inc
add
sbb
jno
mov
sbb
push
in
add
push
push
dec
add
jo
cmp
or
sbb
mov
pop
scas
add
xchg
cli
cmp
pop
out
lods
add
inc
sbb
stos
js
in
pushl
sti
pop
stos
xor
jns
inc
fs
adc
out
mov
cwtl
decb
jge
incl
popf
sub
add
jne
mov
fsubrs
lahf
mov
decl
das
cld
push
movsb
jp
adc
shrl
movsb
or
or
push
int
loop
jmp
or
out
mov
in
push
mov
adc
imul
mov
mov
fwait
cmp
aaa
pop
fs
or
icebp
add
fucomi
ja
testb
pop
sbb
test
stc
add
mull
cmpsb
mov
lcall
add
cltd
mov
out
cmp
add
shrl
adc
add
mov
pop
lret
not
and
jb
inc
mov
sub
fstpt
add
add
jmp
lods
jge
insb
push
jecxz
xlat
stos
add
dec
ret
xchg
mov
or
int3
ret
outsl
cld
push
add
movl
fistl
add
mov
cmp
das
sub
cmp
data16
pop
jnp
and
dec
xorl
jb
psubusw
add
xchg
shrl
aam
lret
inc
insb
jmp
cld
pop
mov
or
std
in
dec
loopne
call
cmp
loop
outsl
shrl
repz
xor
popf
or
insl
mov
rclb
lret
sbb
adcl
ja
stc
fcmovnb
xchg
cmpxchg
push
in
loopne
daa
das
aaa
xor
fs
paddsb
sti
mov
mov
mov
je
mov
rorl
push
test
lcall
icebp
out
test
or
adc
mov
mov
leave
cmpsb
test
stos
lock
mov
xchg
inc
fbstp
int3
movsb
inc
mov
xor
adcb
mov
jb
fstl
inc
pop
mov
mov
sti
pop
dec
or
jg
lret
sbb
mov
rorl
adc
mov
mov
fucom
outsb
stos
jnp
insb
dec
imulb
fists
stos
sub
sub
popa
jbe
movsl
in
ffreep
jne
add
lret
adc
out
movsb
push
lock
adc
adc
insl
loope
cwtl
es
mov
stc
add
sbb
cltd
cmpl
movsb
dec
cmpsb
lea
mov
pusha
jae
js
mov
mov
jecxz
and
or
ljmp
pop
push
loop
jbe
sbb
add
pop
in
insb
jg
pop
mov
insb
jl
jge
pop
push
lea
icebp
ds
popf
insl
shr
sti
daa
fdivrp
outsl
sbb
jo
pusha
in
insb
loopne
push
or
lea
test
fildll
cmc
xchg
xor
in
idiv
test
dec
mov
incl
scas
jp
int3
push
fisttps
ljmp
cld
incl
xor
ds
repz
mov
shrb
dec
sbb
xchg
bound
in
cmpsb
cmp
mov
jmp
add
pop
and
xchg
sahf
inc
scas
jmp
mov
in
cmc
bound
or
xor
add
mov
xor
jge
fsubl
adc
out
mov
hlt
dec
xor
adc
add
movl
ss
das
fistps
and
hlt
jmp
int
cmp
cs
pop
mov
add
daa
hlt
outsl
pop
jle
or
push
lods
adc
insb
mov
das
adc
cli
fildll
into
loop
add
sub
sub
inc
test
or
out
push
and
mov
adcb
jecxz
jmp
sub
adc
cmpsl
sbb
int3
add
mov
xor
mov
fstpl
outsb
pop
xchg
adc
adc
adc
mov
cld
lcall
add
daa
sub
xchg
adc
adc
frstpm(287
sub
in
inc
xor
adc
not
sbb
call
clc
ss
inc
jmp
xlat
mov
and
in
xchg
sbb
decb
fidivrs
insb
and
cmpl
in
cmpsb
ret
pop
adc
add
dec
xchg
ljmp
push
mov
out
icebp
cmp
sbb
mov
pop
add
scas
int3
mov
les
pop
push
inc
inc
pusha
pushf
and
add
add
lods
fistps
aaa
or
xchg
cmp
pop
xchg
jbe
mov
decl
sarl
loopne
add
add
cmp
mov
jo
cltd
fs
adc
sbb
or
mov
fstps
sub
jmp
mov
jns
xchg
inc
jne
dec
test
jne
mov
das
mov
jmp
push
cs
loopne
jecxz
xorl
ret
outsl
cmp
adc
xor
jns
ret
int3
in
or
fbstp
pop
ret
mov
inc
jmp
fwait
adc
pop
pop
enter
add
mov
iret
sub
and
dec
xor
mov
movsl
add
test
xor
adc
shrl
int
push
add
dec
pop
dec
rcrl
and
adc
mov
stc
scas
shrb
and
xchg
sar
xchg
fadd
ret
insb
adc
cmp
cmp
mov
push
jge
xorl
pop
xchg
int
sub
js
mov
out
ja
cmpsb
inc
jle
mov
and
xor
adc
jle
ret
adc
cs
gs
dec
negl
xor
mov
adc
stos
js
jns
insl
aaa
mov
dec
into
outsb
sbb
jmp
movsl
xlat
sarl
xchg
in
mov
add
movl
out
jo
mov
mov
fimull
in
sbb
add
out
mov
fwait
or
mov
mov
or
and
sbb
mov
add
jnp
sub
rorl
jg
sti
mov
pop
inc
enter
pop
call
pop
jge
out
rorb
mov
mov
xor
mov
fisubrs
pop
enter
fmuls
out
xchg
sti
sub
mov
mov
fadd
jl
outsl
out
cs
ret
adc
insl
ja
repz
add
add
or
xor
push
not
push
push
pop
sbb
cmp
lret
inc
fistpl
imul
out
cmc
xadd
imul
rclb
mov
imul
add
jge
pop
lret
adc
rcr
push
fadds
mov
stc
add
push
adc
fisubl
or
incl
add
adc
add
fstpl
ret
mov
mov
xlat
lock
adc
or
push
ds
pop
insl
iret
adc
cld
mov
dec
sub
jge
into
outsb
movsl
jmp
add
xor
cld
test
lock
dec
faddl
stos
test
xchg
or
mov
mov
outsl
or
icebp
add
addb
mov
sub
lock
jnp
xor
pop
clc
aaa
rcrl
cmp
fistpll
inc
lods
xchg
test
xor
test
aas
insb
xchg
js
mov
out
roll
push
add
push
popf
fstps
mov
cs
mov
sahf
sbb
adc
mov
not
add
movl
mov
adc
aaa
fcoml
jle
addb
lods
adc
out
inc
or
inc
lods
sub
and
rorl
mov
ficoms
fsubrs
ret
xchg
xor
cmp
outsl
movsb
xchg
in
xlat
mov
cmp
ja
ret
dec
push
adc
in
dec
lods
mov
lods
xchg
or
cmp
cvtps2pd
out
test
je
mov
out
dec
ds
jno
adc
fwait
jl
xchg
ficoml
fidivrl
imul
adc
jge
inc
mov
pop
clc
int
and
or
inc
and
sub
cwtl
ret
pusha
in
add
sub
es
sbb
mov
stos
fwait
sbb
inc
mov
fiadds
ljmp
inc
xor
mov
and
ljmp
movsl
cmpsb
decl
push
lea
push
push
add
dec
cmp
mov
shll
mov
pop
sbb
and
add
pusha
adc
and
mov
inc
pop
add
imul
sub
adc
movd
cld
testb
in
cli
ret
leave
ret
fs
sub
add
push
jg
lds
inc
dec
push
mov
in
pop
aam
jmp
dec
pop
fidivrl
push
xchg
add
mov
jns
fdivl
enter
dec
mov
sbb
repnz
jno
out
xor
popf
add
mov
lret
fildl
jg
and
inc
ja
repz
iret
or
xor
adc
and
inc
pushf
dec
es
xchg
fnstsw
mov
pop
jle
and
movsl
ret
std
les
inc
cmc
lahf
dec
lds
inc
aad
negb
cli
or
fildll
pop
insb
and
int
insb
orl
dec
data16
push
fbld
dec
adc
mov
ja
jns
lret
add
sub
fbstp
aad
pop
mov
adc
pmaxsw
or
popf
nop
or
inc
popa
mov
rcl
add
or
or
push
jg
or
jmp
orb
jle
cs
jg
lret
lods
push
push
cmpb
pop
inc
adc
pop
sub
int3
call
aad
push
pop
jmp
jnp
push
or
dec
repnz
je
cmp
xor
hlt
push
sub
or
dec
mov
mov
sub
dec
idivb
std
jne
or
call
cmp
mov
shrl
and
aaa
xor
out
sbb
inc
push
and
jmp
jne
mov
sahf
or
add
jo
scas
mov
jnp
push
dec
add
or
adc
xor
mov
ja
outsb
movq
movsb
xchg
or
addr16
arpl
out
mov
fcoml
push
mov
adc
jae
into
imul
mov
pop
fwait
cs
mov
imul
push
jmp
inc
sub
jne
xlat
and
imul
cs
sbb
fnsave
decl
test
insb
xor
imul
inc
mov
insl
testl
mulb
dec
int
fidivrs
arpl
xor
mov
mov
cmp
enter
mov
and
lock
ror
jge
add
sub
cmpsl
fnstenv
jnp
cltd
add
mov
adc
sub
jmp
and
mov
rorl
dec
fsubs
pop
addb
call
mov
pop
mov
add
es
jp
lret
inc
jmp
sbb
xor
jge
rorl
arpl
into
push
mov
rcll
inc
rolb
call
pop
dec
je
push
jle
not
es
imul
mov
sbbl
je
neg
neg
shlb
in
out
cli
push
fmuls
xlat
aaa
roll
mov
fstl
fstp
fmul
out
fwait
add
add
inc
xor
jbe
aam
lock
jbe
add
xorb
jo
xchg
jbe
or
cmpsl
sarl
add
and
add
js
add
adc
mov
push
push
pusha
jmp
sarb
jmp
rcrl
mov
push
push
or
call
sbb
pop
cld
jmp
popf
mov
imul
int3
and
mov
mov
in
jbe
mov
in
mov
push
cld
sub
cmp
ds
shl
xor
sbb
mov
push
fsub
push
pusha
push
movsb
xor
push
in
icebp
jo
stos
inc
test
xor
adc
cli
dec
adc
fpatan
xlat
cmp
loopne
add
sbb
or
fdiv
movb
dec
mov
cmpsb
mov
add
lods
and
ret
jb
inc
push
jle
or
or
or
or
ror
add
xchg
xchg
ds
hlt
add
aas
int3
pop
jmp
jae
or
mov
dec
mov
or
xor
xor
mov
xlat
cmpl
test
mov
mov
dec
popa
cmp
sub
int3
sbb
and
and
dec
out
ret
cwtl
imul
shll
int3
mov
pushf
sub
mov
test
enter
push
in
xor
mov
add
in
add
inc
mov
and
add
fs
sbb
jo
or
daa
xor
popf
mov
outsl
inc
dec
into
xor
dec
sbb
sub
push
adc
in
es
dec
in
add
add
cld
inc
add
fadds
jge
ljmp
pop
mov
or
or
cli
das
mov
fstpt
push
mov
or
movsb
adc
adc
je
aam
or
dec
sub
push
mov
imul
fildl
lock
sbb
js
jle
pop
sbb
jne
dec
mov
or
decb
fmuls
dec
pushf
dec
adc
pusha
int3
lret
mov
adcl
xorl
xchg
dec
mov
mov
jbe
jle
add
fiadds
in
and
adc
adc
jnp
xchg
adc
mov
inc
and
test
in
adc
cmc
js
dec
inc
std
jbe
jnp
dec
dec
lods
push
rclb
or
mov
adc
sbb
cmp
adc
out
cwtl
sub
rcrb
into
cld
adc
cmpsl
xchg
ljmp
inc
repz
leave
aad
adc
loop
or
scas
jmp
pushf
rolb
add
push
sub
push
f2xm1
in
je
hlt
and
arpl
add
adc
cld
mov
jne
sub
xor
sbb
int
aad
cld
pushf
imull
popf
scas
push
xchg
arpl
fcmovu
jnp
dec
add
inc
aaa
rcrb
jne
cmp
cmp
mov
sub
mov
fs
mov
sar
aas
out
add
enter
rol
js
jg
stos
inc
jnp
imul
cld
das
repz
xor
xchg
add
cmp
pop
adc
repnz
outsl
outsb
mov
pushl
push
sub
push
lea
inc
and
push
xor
pop
lahf
addr16
leave
cmp
adc
sti
in
adc
xchg
inc
mov
int3
pop
shr
cmp
sub
adc
pop
test
jne
mov
jb
das
xchg
mov
lods
xor
scas
cli
xchg
inc
andb
in
sti
xor
movsl
bound
inc
adc
fsubs
insb
inc
test
sahf
int
cwtl
add
dec
fstps
mov
incb
xor
addb
jecxz
cmp
xchg
xor
jmp
dec
or
inc
adc
jnp
jecxz
adc
ret
icebp
ficomps
or
cld
sbb
sub
pusha
cmp
add
and
pop
mov
mov
xor
fsubr
xor
les
and
or
push
cmp
faddl
addr16
out
adc
repz
add
stos
outsb
or
push
sbb
and
and
in
mov
inc
fdivrl
sbb
add
pop
jae
sbb
or
lret
fcmovnb
mov
sbb
cmc
push
and
cmp
enter
pusha
jno
frstor
cltd
sub
repnz
lods
mov
add
sub
out
lahf
jns
xor
push
dec
lcall
sub
fstps
adc
sub
lds
rcll
pop
dec
cmp
jo
mov
or
xor
xchg
add
pop
sbb
mov
mov
adc
aad
insb
adc
adc
xchg
fidivrs
add
daa
cmp
cmp
xchg
and
loope
xor
adc
adc
xor
xchg
and
xorb
ds
insl
pop
loopne
xor
inc
mov
pop
jg
or
push
mov
cmp
shll
or
add
adc
jns
push
sub
inc
mov
scas
or
adcl
pop
daa
mov
cmp
ret
arpl
sbb
test
dec
sub
mov
cmc
hlt
mov
push
aaa
push
add
cmp
or
cmp
divb
imul
sub
ror
fs
pop
rcrb
cwtl
push
inc
aas
dec
loopne
cs
and
add
lods
lods
flds
test
pushf
add
addb
add
push
xchg
std
cwtl
push
rorl
or
lds
fimull
int3
dec
pop
pop
fistpll
xor
sbb
sub
dec
push
add
movsl
mov
mov
adc
cltd
es
or
sbb
sbb
jmp
jb
inc
aaa
mov
jns
rorl
adc
fadds
int
std
nop
ret
add
scas
loopne
sti
call
sub
and
dec
xchg
mov
mov
mov
orl
test
and
inc
popa
mov
lahf
js
mov
or
cmpsb
lock
xchg
ja
jo
dec
sbb
int
xchg
pop
enter
out
or
or
push
pop
inc
jo
addr16
and
sbb
and
loopne
mov
fprem1
call
mov
dec
and
movsl
adc
adc
jg
sahf
movsb
push
cs
fdivrs
loop
fsubr
xor
rcrb
gs
and
sub
cmp
or
jp
inc
and
out
push
pop
fidivrs
mov
rolb
cmpsl
dec
adc
adc
xor
jnp
xor
and
dec
sbb
mov
push
dec
dec
call
cwtl
shlb
sbb
mov
movb
xor
mov
lahf
sub
fimull
push
stc
js
cmp
jb
cmp
cmp
icebp
pusha
sbb
mov
adc
add
or
add
or
mov
xchg
into
test
pop
mov
adc
push
addr16
add
mov
push
mov
add
jl
bound
adc
fmuls
add
in
icebp
push
out
pushf
in
sti
jnp
pop
jb
mov
adc
mov
outsb
jl
cwtl
add
mov
jmp
int
mov
inc
mov
cltd
loopne
cmp
cld
xor
cmp
sti
sbb
or
adc
addb
imul
mov
aam
aam
movsb
add
push
dec
add
cs
jge
aam
cli
subb
rcll
enter
sbb
mov
jle
add
push
fistl
sbbb
add
int3
jp
or
movsb
add
js
imul
fs
dec
pusha
add
push
in
fbld
xor
push
jp
fdivrs
fdivrs
leave
cld
into
sbb
bound
scas
cmp
push
inc
and
imul
mov
jmp
cmp
pop
filds
lcall
movsb
pop
mov
xor
aas
out
lods
dec
pop
outsb
pushf
jg
cld
push
shrl
jmp
adcl
jo
repnz
add
fcmove
test
jo
andb
and
mov
ret
pop
sbb
popa
clc
dec
sarl
mov
add
int
lds
pop
jnp
jbe
arpl
mov
nop
iret
rorb
call
inc
xor
dec
jg
fisubl
dec
pop
mov
out
rcrl
mov
loope
popa
and
cltd
sbb
lcall
movsl
pop
les
sub
push
enter
push
adc
mov
inc
repz
xchg
lcall
push
iret
jge
iret
push
mov
or
in
lahf
add
data16
inc
cmp
cmp
test
sbb
mov
mov
rclb
dec
dec
dec
sbb
cwtl
pop
je
sbb
lret
lods
rolb
mov
lock
cmp
jb
popf
mov
rolb
enter
sub
pop
adc
mov
jbe
aas
loope
fimuls
xor
outsb
shlb
add
add
mov
push
ret
jns
lods
imul
ds
sub
and
es
dec
xchg
dec
arpl
mov
test
in
sub
xchg
jbe
fistpll
sub
shlb
in
and
jl
shr
jle
sub
xor
add
xchg
mov
and
and
jp
mov
cld
scas
clc
cld
xor
sub
cmp
lret
xor
stc
xor
fsubl
jb
jo
data16
daa
insb
push
shlb
lock
ret
daa
ja
mov
jp
lods
fstps
sbb
shll
mov
add
call
sub
mov
xchg
jne
nop
xor
ficompl
xor
adc
loopne
xor
aaa
sub
cwtl
icebp
lret
ret
dec
lahf
iret
sub
mov
or
adc
pop
stc
das
mov
sub
mov
stc
mov
fdecstp
lds
ja
jg
adcl
push
jnp
pushf
dec
add
loopne
and
jl
lock
test
dec
call
mov
push
inc
pop
fbld
pop
xor
es
fsubrl
test
adc
lock
das
dec
loopne
aam
push
ficoml
mov
subl
inc
neg
fcomip
jne
xor
xchg
adc
pop
test
icebp
sbb
sub
cmp
clc
scas
mov
jbe
aas
movsb
cli
dec
insb
inc
cwtl
aam
and
addr16
jmp
shrl
je
in
cld
fsubl
or
stc
lods
inc
clc
stos
aaa
xor
aad
add
sbb
aad
xchg
push
out
loopne
pop
scas
jp
rolb
push
sar
add
sbb
pusha
cli
cld
test
ja
mov
jb
ds
mov
xchg
addr16
xor
or
repnz
xchg
adc
or
jnp
fucomip
sub
test
jae
les
xchg
cld
push
jge
inc
dec
pop
mov
movsbl
dec
mov
in
rolb
mov
inc
test
xchg
imulb
movsl
jnp
std
cmp
mov
mov
lret
jae
negb
stc
andb
add
xor
aad
insl
rorl
add
sbb
iret
iret
ljmp
movsb
mov
sub
shr
dec
ret
loop
dec
jmp
xor
inc
ja
enter
pop
and
mov
cmp
cld
out
mov
scas
cmp
lods
push
adc
mov
add
add
pop
jl
push
sub
enter
add
js
lea
fwait
mov
mov
push
lds
gs
jmp
and
xlat
xchg
xor
imul
filds
xor
mov
jne
xor
push
aad
pushf
inc
mov
inc
cwtl
loope
cwtl
scas
add
and
jmp
sti
test
inc
mov
stc
add
loope
jne
xor
jo
jnp
add
add
mov
mov
outsl
int
jbe
mov
bound
iret
imul
ds
loope
inc
pop
xlat
mov
or
js
dec
pop
jns
shrl
test
flds
inc
mov
lret
jge
ds
or
mov
es
push
popf
mov
sbb
mov
rol
cmp
sub
loop
jne
shlb
pop
xor
sbb
cwtl
xchg
out
mov
pop
mov
mov
pop
cmp
jg
jge
xchg
int3
int3
push
xchg
jns
hlt
lea
ljmp
push
or
add
mov
movb
xor
jne
sbb
and
es
rcr
xor
stos
mov
mov
int3
shll
cmp
dec
and
orps
add
in
test
int3
mov
shrb
jae
add
add
das
cs
test
int3
hlt
pop
cmp
sbb
jp
jp
mov
or
loop
inc
nop
dec
mov
fidivrs
bound
dec
mov
or
or
xchg
push
je
mov
mov
push
test
rcll
fnstcw
test
jae
mov
mov
sbb
or
hlt
mov
push
les
or
ret
adcl
repnz
loope
stos
sbb
fxch
push
mov
and
ret
or
fiaddl
pop
sub
adc
inc
adc
shlb
add
fwait
cmc
pop
push
mov
sbb
rcl
fildll
adc
movsb
adc
in
repnz
push
inc
dec
dec
sub
in
pop
shl
or
dec
push
subl
jns
cwtl
mov
outsl
std
add
inc
notl
cmc
dec
pop
aam
fs
rol
sub
add
jmp
fisubs
loopne
xchg
in
les
popa
adc
cld
xor
sbb
mov
xchg
stc
sub
jmp
add
or
jle
ret
shr
push
jle
cmpsb
fsin
sarl
xor
scas
xor
jbe
dec
jp
movsb
jb
push
int3
pop
push
jp
dec
imul
pop
in
adc
push
lds
loopne
pop
inc
inc
enter
nop
loope
out
movsl
pop
lds
cmp
add
adc
pusha
rcl
inc
pusha
fs
add
lock
xlat
and
sbb
sti
add
add
push
and
dec
xor
addl
cmp
jnp
fs
test
lock
xchg
jns
shll
jmp
fldcw
jo
xchg
loop
push
xorb
adc
jmp
add
pusha
rclb
or
xchg
insb
out
push
in
sub
jge
mov
mov
test
add
mov
push
mov
shl
adcl
imul
push
cmp
lret
jbe
shlb
sub
and
add
push
cmp
or
lods
xchg
mov
lcall
call
fs
push
int3
inc
mov
mov
inc
in
jge
lret
pusha
stos
inc
sbb
cmpsl
int3
lock
jae
add
add
sub
xor
les
in
or
cmpsl
pusha
subl
movsb
fdivs
loopne
adc
movsb
fst
adc
ljmp
add
sarb
jmp
ror
mov
sbb
aas
add
inc
sbb
scas
xchg
adc
mov
loopne
not
dec
inc
adc
xchg
mov
orl
inc
adc
and
movsb
and
outsb
add
shll
or
loope
mov
dec
jecxz
mov
fisubrl
fstl
sti
sbb
jno
test
sub
roll
repz
mov
pop
loope
aas
push
adc
lahf
xor
sub
pop
push
push
test
sbb
add
jmp
jnp
loopne
sbb
outsb
mov
push
stos
insb
add
xchg
shlb
xchg
mov
push
push
fldenv
add
js
sahf
aad
ljmp
pushf
enter
or
adc
or
and
iret
jae
cmp
bound
fnstcw
daa
dec
add
pop
push
lcall
rol
shlw
in
xor
sahf
push
sub
push
int3
mov
or
scas
repz
addb
fsubrl
test
setp
fisubs
lret
lods
or
mov
cmp
in
add
fwait
push
mov
hlt
scas
fisubs
adc
addb
cmp
jo
fidivl
inc
sarb
mov
aas
jmp
jns
inc
xchg
xor
popa
xchg
pop
and
aam
or
push
dec
cmpl
adc
jecxz
movsl
ss
testl
sub
adc
xor
sbb
js
pusha
imul
scas
xor
add
aaa
sub
cltd
and
sbb
cmp
and
movsb
mov
xchg
ret
xor
test
sub
sbb
aad
jnp
fildll
xor
rclb
pushf
sbb
cmp
jo
daa
mov
xor
inc
sbb
sbb
shll
add
cmp
xor
sub
or
xchg
push
cmp
push
xorl
ret
pop
shlb
cmp
ds
arpl
js
mov
out
pushf
adc
mov
enter
push
adc
fiaddl
push
int3
ret
inc
sub
and
xchg
inc
shlb
push
aaa
mov
or
rol
mov
jnp
cmpsb
dec
adc
cmpb
in
loop
lock
insb
ret
push
pop
sbb
xchg
icebp
cmpsl
pop
adc
and
sahf
iret
les
push
fldenv
dec
push
lret
js
xchg
adc
sbb
fadds
lea
sbb
pop
in
push
add
add
cli
cmp
jne
clc
push
pop
mov
and
sub
cmpsb
sbb
push
sbb
fmuls
and
cmp
sbb
cmc
fsubr
insb
jl
jae
push
inc
xor
sub
mov
inc
lret
repnz
lcall
xor
add
cli
jb
push
es
test
adc
std
scas
sbb
mov
jl
les
test
ret
in
xchg
xchg
iret
mov
pushf
lcall
icebp
enter
insb
ret
mov
adc
mov
pusha
sti
scas
add
sets
xor
jae
push
add
sar
pop
lds
cli
cs
in
add
in
dec
addl
lcall
dec
mov
das
aad
stos
add
gs
xor
test
pop
cwtl
je
add
push
loop
add
inc
and
add
insl
cmc
mov
adc
iret
inc
ljmp
add
add
mov
fisttpll
rorb
std
add
mov
cmp
mov
lret
mov
add
add
add
add
and
add
push
add
lods
fistpll
adc
cmpsl
ds
aaa
pushf
mov
fdivl
pop
hlt
mov
mov
or
shrb
std
push
test
jg
dec
pop
add
mov
arpl
add
mov
hlt
pop
inc
cmp
add
pusha
addb
inc
xchg
mov
jg
lret
lea
add
add
out
in
outsl
inc
dec
jmp
pop
cmp
or
ja
adc
or
dec
pushf
pop
push
popf
push
ds
movsb
or
mov
orl
testb
push
mov
cli
mov
stc
imul
mov
push
rcrl
jno
movsb
sub
test
mov
and
and
imulb
mov
or
enter
aam
shlb
add
sub
ficomps
push
ds
push
cs
pushf
pop
popa
mov
cmpb
sub
roll
aaa
pop
test
pop
push
mov
into
add
xor
fistpll
ds
hlt
aam
aam
dec
xor
repz
dec
push
xchg
iret
out
mov
mov
int
dec
push
mov
pop
inc
adc
jl
lock
mov
js
mov
mov
call
mov
mov
lret
rolb
or
cmp
je
add
mov
adc
jmp
aaa
clc
decl
mov
es
cmpl
jmp
fists
cltd
xchg
shlb
int3
incl
sbb
lods
orb
add
out
pushl
or
insb
ficoms
add
out
test
xor
jno
pop
repz
cmp
jg
or
inc
imul
fisttps
dec
cmpsb
xchg
and
inc
movsb
sub
jge
ja
xchg
jge
add
add
sbb
ror
iret
jbe
xchg
test
cs
stos
sbb
mov
negl
les
dec
push
mov
cmpb
pop
adcl
mov
js
xor
dec
test
fimuls
rol
add
in
or
sahf
sub
pop
xor
les
aad
cwtl
jmp
aaa
into
xor
add
fdivrp
xor
add
add
out
popf
jmp
sub
add
mov
daa
aam
scas
in
lcall
push
push
xor
out
shlb
sbb
pop
lods
hlt
pop
push
cld
add
mov
mov
mov
int3
adc
sbb
inc
push
popa
popa
roll
aad
push
push
je
add
mov
jns
cmpsb
loop
sti
add
and
mov
lret
adc
ret
das
aaa
arpl
mov
notb
jle
rclb
in
push
cmp
push
sbb
sbb
ss
add
dec
jp
out
inc
pop
cmp
mov
loopne
loope
adc
subb
pushf
ret
out
mov
dec
flds
jmp
or
jle
pusha
and
add
push
ret
sbb
mov
add
cmp
add
inc
data16
mov
cmp
nop
cmpsb
jg
push
push
sbb
out
adc
cmp
mov
sub
cmp
jle
sbb
sar
test
mov
jnp,pn
lahf
adc
sub
cld
decl
icebp
rorb
fstps
push
dec
inc
stos
pop
fdivrl
xchg
cmp
lods
dec
mov
dec
aam
gs
divl
mov
outsl
or
cwtl
push
inc
les
cmp
inc
stos
push
loopne
fnstsw
call
jle
adc
addl
scas
test
or
mov
hlt
notb
aas
clc
pop
lods
mov
fstps
mov
mov
js
scas
cmp
sbb
mov
pop
push
sbb
fistpll
and
aaa
stc
in
in
or
add
mov
jmp
out
pop
js
or
arpl
cltd
dec
rorb
sbb
add
in
mov
and
mov
inc
sub
jbe
or
out
rorl
outsl
sbb
jmp
lcallw
rorl
aaa
mov
and
cmp
add
pop
clc
inc
roll
popa
int3
lahf
add
mov
mov
jg
jg
shlb
inc
jnp
pop
filds
enter
imull
adc
stos
sbb
loope
xor
js
mov
adc
cmp
aas
and
out
push
rcl
pushf
cmpsb
call
xchg
lock
loop
dec
push
and
dec
push
mov
jge
push
or
sahf
push
mov
push
add
mov
lret
cmc
adc
lcall
xorb
xchg
out
dec
pop
test
cld
adc
fimull
xor
icebp
add
mov
sub
mov
cmc
daa
adc
pop
aad
in
pusha
dec
cwtl
stos
std
aad
sbbb
stos
adc
in
cli
adc
sbb
sbb
cwtl
mov
push
daa
push
into
insb
adc
push
cs
push
sbbb
nop
push
sarl
mov
sahf
xlat
mov
mov
rcrl
out
add
add
sub
jb
iret
clc
pushf
xor
sub
mov
xor
outsb
aad
and
fld1
fadds
add
clc
mov
sbb
cmp
lret
xor
adc
inc
cmpb
aam
popf
out
mov
popa
cmp
pop
icebp
cmp
or
sbbb
ret
sub
mov
pop
inc
mov
adc
jbe
std
push
add
jo
call
fwait
adc
dec
outsb
fdivr
dec
adc
mov
xor
stos
mov
mov
add
out
jo
mov
inc
js
aam
repnz
jp
xor
fdivs
mov
addl
fimull
dec
add
mov
icebp
adcb
cmpl
call
in
sub
mov
mov
push
cmp
jg
lahf
call
mov
rclb
xor
pusha
adc
loop
int3
inc
xchg
sub
out
lahf
fnstenv
push
cmp
in
clc
add
test
adc
stos
in
aam
jne
mov
test
dec
popf
dec
adc
dec
aam
movnti
outsb
jae
jo
cmc
inc
cmpsl
push
inc
xor
mov
push
cmp
cmc
push
es
or
insl
cmp
push
and
stos
push
inc
xlat
scas
cltd
call
pop
pop
in
dec
andb
mov
or
mov
xchg
add
lock
jecxz
mov
sub
push
sbb
sbb
scas
dec
loopne
jb
daa
into
pop
insl
push
xor
jmp
out
dec
xor
adc
jb
lods
or
push
mov
out
mov
xor
xchg
cmpsl
call
cld
out
mov
push
mov
mov
subl
rep
add
lods
xchg
fcom
add
dec
shll
fsubrl
cmc
sub
pop
out
loope
fwait
aad
in
and
popf
xchg
dec
jp
jle
clc
mov
les
je
jo
push
pop
inc
fisttpl
or
mov
pop
pusha
test
push
inc
pop
dec
loope
cmp
dec
loop
ss
mov
movsb
push
arpl
out
or
and
mov
fwait
ret
dec
xor
repz
sub
in
or
mov
sub
data16
add
xchg
add
lret
push
in
fs
mov
stos
adc
pop
adc
push
mov
lea
or
loopne
das
jmp
mov
icebp
jmp
and
xor
adc
mov
daa
push
sub
cld
push
test
sbb
nop
aaa
or
fsub
rolb
popf
loope
push
shrl
jbe
inc
sub
jnp
pop
and
xchg
fists
pushf
outsb
rol
add
in
jl
inc
fsubrs
xlat
mov
adc
mov
mov
scas
add
shufps
add
sbb
jmp
push
and
inc
arpl
push
in
xor
ret
lods
adc
jne
pop
sub
push
cmp
xor
mov
mov
inc
push
push
insb
sti
inc
stos
and
dec
xor
xor
mov
add
mov
int3
js
push
sub
sbb
pop
jp
jge
and
dec
push
adc
xor
scas
adc
daa
xchg
repz
mov
or
daa
adc
inc
mov
and
jae
lds
pop
adc
sbb
mov
call
cmp
inc
dec
repnz
pop
loop
sub
xor
cli
inc
es
call
in
sbb
ret
fildl
inc
add
and
inc
mov
cmp
xor
push
call
mov
nop
and
incb
and
bound
push
jno
push
pop
dec
add
pop
add
adc
xor
sub
ljmp
cmpsb
not
or
loopne
xor
mov
xor
stos
dec
loop
add
jl
out
or
and
push
les
push
mov
inc
jmp
mov
or
add
sbb
mov
dec
sarb
cmp
adc
data16
xor
fnstenv
xor
test
rorl
dec
and
or
adc
push
jnp
int
mov
xchg
sarb
dec
pop
dec
cld
push
cmp
sbb
push
push
outsl
in
lock
inc
aad
mov
xor
xchg
xor
jge
stos
push
mov
mov
dec
cmp
outsl
mov
outsb
ret
push
cwtl
imul
inc
sbb
ljmp
mov
outsl
cmc
mov
test
add
jecxz
push
dec
mov
loopne
addr16
lcall
pop
loopne
cwtl
sbbb
pop
sbb
imul
into
pop
adcl
iret
pop
add
dec
das
pop
loop
mov
stos
jle
dec
jb
ret
sbb
rclb
add
aam
test
test
inc
mov
xchg
mov
pop
loopne
mov
mov
jecxz
add
shll
lods
sub
aaa
pop
pop
mov
mov
jp
xchg
call
test
adc
pop
mov
jle
xchg
ljmp
insb
imul
add
mov
nop
adc
in
rol
push
lods
call
lahf
mov
fisttpl
out
adc
call
outsl
mov
inc
out
inc
mov
push
add
sti
push
lods
or
xchg
in
sub
sbb
jp
push
pop
clc
cmovle
cs
jae
mov
mov
movsl
stos
inc
addr16
rcll
add
testb
outsl
stos
shrl
mov
cmp
or
std
sub
repnz
std
jle
push
add
mov
ret
dec
adc
sbb
jecxz
cmp
add
shlb
out
add
cs
fistpll
and
neg
inc
lock
sbb
mov
fisttpll
sbb
mov
mov
push
mov
pop
dec
fwait
or
push
nop
ret
cmpsb
out
adc
add
push
dec
nop
leave
push
outsl
aam
lds
ret
stos
aad
mov
inc
add
out
push
nop
inc
mov
ret
inc
pusha
movsb
and
decl
cmp
add
jbe
lds
test
and
rolb
test
lock
or
inc
xor
cwtl
jg
outsl
shlb
in
ljmp
dec
inc
cltd
mov
daa
cld
call
mov
daa
or
arpl
add
mov
outsl
push
ffreep
mov
imul
insl
incl
mov
jp
dec
out
stos
or
sbb
sub
add
pop
xorl
in
mov
popa
sbb
lods
lret
jno
loop
int3
push
pop
inc
std
incb
mov
adc
jle
xor
add
cmp
push
cld
decb
lcall
test
pop
push
push
add
dec
mov
stos
push
clc
inc
movsb
jno
jns
mov
cmp
pushf
mov
test
in
xchg
jle
mov
mov
inc
js
mov
or
outsl
lock
push
xor
mov
ret
stos
mov
inc
ret
enter
stc
shll
cmp
inc
inc
cwtl
pop
addr16
add
mov
popa
fistps
sub
add
aaa
and
jge
ret
cltd
inc
jae
add
cmpsl
sub
push
sbb
xor
andb
pop
icebp
ja
xchg
fistpll
and
fidivs
cmp
sub
loope
and
jp
in
sbb
lods
or
sub
call
decl
adc
add
push
xchg
jg
dec
inc
arpl
and
xor
and
adc
icebp
xchg
daa
lods
aas
mov
lds
xchg
sub
pusha
decl
aad
jb
push
lcall
add
add
pop
ret
ret
mov
cltd
lods
push
sbb
cli
mov
fiadds
adc
test
loop
adc
js
mov
inc
mov
pop
and
out
mov
sbb
push
js
ljmp
push
fnsave
stos
repnz
test
gs
xchg
inc
or
test
sub
or
inc
sbb
je
fiaddl
mov
inc
mov
fisttpll
icebp
mov
dec
imul
fldcw
adc
xlat
inc
sub
cmp
add
adc
inc
outsl
xor
adc
mov
fwait
scas
pop
into
popa
scas
add
out
mov
xchg
cmp
xor
aas
pop
jp
xlat
add
pushf
out
mov
insb
cmp
cwtl
sbb
sbb
jae
add
push
adc
mov
xor
inc
in
push
stc
jnp
movsl
addl
mov
sbb
adc
xchg
pop
xchg
mov
push
xlat
xchg
cmp
jl,pt
add
iret
sbb
int
es
das
mov
sub
popa
inc
in
inc
lods
add
dec
stc
mov
sbb
movsl
int3
xorb
in
sub
js
sub
mov
push
adc
xchg
inc
movsl
shrb
cmc
sbbl
mov
in
mov
lods
sbb
pushl
sub
out
and
lahf
mov
pop
lods
lea
sti
pop
lahf
shrl
sub
fistpl
mov
xchg
cli
dec
bound
mov
or
or
adc
or
outsl
push
mov
in
mov
and
fisttps
or
adc
inc
fucomip
into
data16
pop
add
das
insl
mov
or
mov
or
add
pop
mov
lret
or
sub
sbb
dec
or
or
pop
subl
and
aas
mov
in
adcl
andb
adc
sarb
sub
jns
push
popa
xor
cmp
decb
cld
push
jne
mov
mov
pusha
lods
adc
outsl
mov
mov
and
test
jne
fcoml
rclb
jno
mov
pop
clc
or
jge
or
sbb
fisubs
sbb
xchg
mov
jmp
inc
mov
aad
nop
inc
lods
jae
iret
das
les
adc
dec
mov
ret
or
add
scas
jb
mov
in
sar
cmp
mov
iret
inc
call
adc
and
int
mov
cmp
dec
mov
outsl
adc
call
mov
xlat
mov
fdivrp
cs
ret
popf
add
das
pop
dec
in
ljmp
inc
addr16
imul
gs
in
and
std
andb
inc
add
ljmp
stc
xor
iret
icebp
pushf
pop
and
add
mov
negl
lea
add
or
inc
sti
arpl
lock
cmp
pop
jns
cltd
cmp
jnp
cmp
adc
mov
leave
xlat
push
nop
movsb
dec
int
dec
call
xor
cli
shl
lret
test
les
arpl
bound
addb
mov
test
out
rcll
xor
and
fiadds
cwtl
pop
insb
fwait
out
pop
add
lock
and
and
js
cmc
enter
fdivrs
sbb
push
add
add
popa
mov
movsl
dec
push
adc
call
sub
fisttpl
in
mov
clc
xchg
xchg
out
cmp
fs
in
ja
out
aad
lahf
jge
pushl
stos
or
lds
sub
mov
outsb
adc
and
adc
cmp
add
or
push
push
add
adc
fistpll
xor
add
mov
mov
leave
xchg
cmp
sbb
dec
jbe
data16
in
insb
jbe
add
adc
loopne
xor
sub
sbbb
cmp
sbb
sbb
shl
inc
sbb
jno
clc
insb
jbe
rolb
loopne
and
xor
mov
or
xchg
js
cmp
bound
sbb
and
push
clc
and
inc
jb
outsb
dec
test
outsb
mov
xchg
adc
sbb
xchg
xorl
cwtl
xlat
insl
out
enter
push
addb
fnstcw
int3
push
out
jnp
push
test
xor
jno
push
or
daa
push
ret
jnp
mov
dec
cmp
jns
pop
or
sbb
cmp
and
pop
jbe
adc
loop
aad
add
test
aaa
cli
dec
insb
adc
js
and
dec
xorb
jbe
lods
sbb
dec
push
dec
xchg
sbb
xchg
dec
adc
test
sbb
sbb
adc
js
adc
leave
pop
sbb
push
push
cmpsb
adcb
outsb
insb
xor
and
push
lret
cs
mov
andb
outsb
pop
icebp
sahf
insb
out
dec
mov
add
in
lahf
fcompl
mov
rorl
stos
in
sbb
inc
or
je
fwait
loopne
in
mov
sbb
movsb
xchg
cmp
add
inc
out
rcll
inc
or
es
loopne
adc
lret
pushf
cmp
jg
inc
stos
jecxz
and
xchg
adc
out
pop
pusha
mov
jnp
incl
sbb
mov
sub
xor
cmp
push
mov
fsubs
xor
jmp
decl
ds
mov
cld
jmp
sbb
sbb
add
adc
jl
push
outsl
hlt
jle
pop
sahf
mov
icebp
push
push
je
push
mov
aam
std
or
sub
pop
push
push
dec
push
cmp
lea
sbb
mov
movsl
sub
pop
push
mov
stos
cmp
add
movsl
mov
mov
push
add
mov
sbb
xor
or
imulb
ds
and
xor
test
xchg
add
mov
lods
push
sbb
push
jbe
mov
sti
or
bound
or
scas
movsb
pusha
subl
fst
mov
jecxz
pusha
ljmp
jecxz
dec
add
sbb
mov
add
pop
xchg
jp
dec
stc
decl
cmp
aas
sbb
cld
jns
stos
adc
inc
lods
aad
out
rclb
sub
and
cmc
sub
fsubrp
call
pop
stc
sbb
add
movsl
pop
clc
ljmp
mov
mov
xorb
jecxz
pop
mov
icebp
and
sbb
push
popf
xchg
push
or
enter
aam
inc
mov
add
outsl
inc
jg
fists
lcall
xchg
add
cmp
sub
popl
adcb
aas
sarl
in
aaa
fidivrl
inc
gs
jecxz
xchg
mov
call
cld
jecxz
movsb
mov
xlat
aaa
jge
aam
cwtl
pop
faddl
pop
das
inc
inc
icebp
clc
xchg
and
lea
cmp
je
pop
or
sub
in
dec
mov
xlat
ja
push
xor
test
lcall
sahf
out
jl
xlat
aad
outsl
js
mov
bound
or
insl
rcll
aad
int
mov
mov
dec
sbbb
ja
outsl
cmc
dec
or
les
fildll
sbb
jg
std
pushl
aas
adc
mov
push
and
ss
scas
ss
jg
rclb
roll
in
adc
jl
data16
sub
or
sub
xor
jp
jecxz
loope
addr16
xor
xchg
jno
sub
jg
addl
jg
lds
inc
fsubl
lahf
or
neg
fistpl
mov
push
mov
je
pop
dec
sbb
mov
lds
xchg
cmp
push
inc
pop
add
and
dec
loopne
adc
iret
mov
pop
clc
push
sbb
xcrypt-ecb
cmpsl
or
add
xchg
mov
mov
lea
mov
xchg
jo
push
jecxz
icebp
lcall
es
les
lahf
push
xlat
scas
or
dec
dec
jle
dec
ljmp
js
js
add
jp
test
and
scas
int3
loop
enter
dec
in
fcompl
jno
fildll
xor
std
int3
push
dec
dec
push
sub
push
std
test
sbb
sbb
lods
in
and
mov
dec
into
mov
push
loopne
mov
aad
cmp
loope
pop
mov
xor
xchg
push
or
in
add
push
insl
cld
das
push
or
push
arpl
add
daa
dec
dec
dec
adc
pop
xor
xor
rol
mov
repnz
jle
xchg
aam
jp
stos
movsl
push
add
les
jle
mov
inc
mov
movsl
sbb
fmuls
jno
xchg
mov
jmp
movsb
push
clc
jb
xchg
and
or
je
adc
daa
rorl
push
or
cmp
pop
cwtl
fsub
imul
icebp
fwait
push
cmp
adc
lea
or
cli
inc
imul
out
outsb
std
movsl
xlat
arpl
jb
or
xchg
dec
add
out
bound
fcompl
lds
xchg
mov
les
das
ret
cmp
xchg
and
jns
jl
fildll
mov
lods
aad
loop
mov
mov
inc
mov
or
insb
aas
add
test
std
push
pop
mov
add
out
mov
mov
pop
dec
push
xchg
pop
inc
cmc
getsec
sbb
jle
jl
in
jl
movsl
daa
sub
loopne
or
xchg
gs
push
into
rorb
in
xchg
mov
out
das
sbb
popl
push
and
and
xchg
cli
outsl
mov
sarl
jg
jbe
cmpsb
das
sub
in
cmpsl
fiaddl
je
js
repz
jb
imul
jge
aas
ds
push
in
and
push
fists
mov
jns
and
and
sbb
sarl
sbb
mov
mov
xchg
idiv
negb
enter
adc
cmpsb
repz
mov
sbb
mov
sub
jmp
xchg
lret
je
cmp
or
aas
loop
jo
fldt
popa
add
sub
mov
test
das
sbb
push
inc
mov
bswap
cltd
int3
adc
inc
inc
xor
sbb
add
pusha
fisttps
dec
pop
lock
and
mov
mov
aaa
aam
mov
push
xor
in
lock
lcall
sbb
push
push
aam
stos
xor
out
ffreep
xchg
pop
inc
and
push
aam
fisubl
push
test
call
pop
push
cmp
mov
jle
mov
icebp
push
loopne
cli
in
and
or
push
xor
stc
sbb
daa
add
test
xchg
add
test
daa
loop
jl
aam
mov
or
loopne
loopne
lea
push
loopne
aam
mov
xor
out
mov
or
nop
push
aas
cmpsb
jo
pop
hlt
push
pop
push
loopne
jecxz
cmp
pusha
pusha
fwait
mov
adc
divb
add
add
push
js
push
rcrb
mov
inc
stos
push
ret
das
movsl
inc
aaa
mov
xchg
call
and
sbb
sbb
and
icebp
arpl
mov
std
or
sbb
ret
insl
shrb
sbb
mov
mov
mov
sub
movsb
sub
insl
cmpb
movsb
dec
fstpl
addr16
shll
sub
pop
ss
inc
mov
aam
inc
inc
xor
outsb
ret
add
lcall
inc
shrb
test
mov
decl
mov
stos
add
dec
lock
xlat
inc
add
repz
test
cmpsb
loope
mov
and
sub
mov
call
inc
push
xor
stos
mov
shrb
push
arpl
les
imull
mov
out
ret
or
add
mov
shr
mov
clc
pop
lods
dec
xchg
mov
loop
mov
jp
adc
xor
int
xor
call
aam
mov
add
rcll
outsl
xor
or
mov
mov
clc
add
popa
dec
aas
adc
adc
dec
mov
add
xor
mov
or
dec
ljmp
dec
push
cmp
cmp
mov
jo
sbb
clc
in
ljmp
push
aaa
xchg
or
leave
in
xchg
clc
insl
adc
les
push
cmp
sub
xor
sbb
adc
sub
das
jno
push
push
jns
inc
sbb
adc
xor
incl
adc
add
xlat
in
cwtl
or
pop
loop
std
in
loope
in
scas
out
ret
test
mov
mov
lcall
mov
addl
sarb
hlt
xchg
lock
mov
and
and
dec
jno
pop
or
leave
push
rol
mov
fildll
push
sti
sbb
jecxz
xchg
pop
adcb
add
push
cmp
pop
scas
xchg
jb
in
xor
push
pop
cltd
jg
icebp
and
sub
inc
pushf
enter
ffreep
add
mov
adc
sbb
mov
jns
and
clc
and
idivl
data16
outsl
hlt
or
sbbb
adc
je,pn
ja
stc
add
negb
dec
fdivr
dec
faddl
and
mov
push
sub
movsb
pop
mov
mov
jp
orl
mov
sbb
in
and
pop
fwait
stc
dec
hlt
and
pushl
stos
sbb
lret
clc
adc
dec
ret
and
adc
mov
iret
aaa
inc
inc
pop
pushf
outsb
cmpsl
and
nop
call
enter
push
inc
sbb
mov
xchg
mov
jg
das
push
call
xlat
cmp
hlt
push
inc
or
mov
adc
call
stos
inc
scas
movsl
sub
and
lcall
and
jg
fidivrs
push
subl
adc
jb
mov
mov
cs
test
mov
mov
outsl
js
pop
test
or
mov
fistps
push
daa
call
fsts
shrb
xor
inc
pop
call
sbb
push
js
xlat
cmp
adc
pop
mov
pushf
mov
add
and
fmull
sbb
mov
mov
xchg
ss
sub
enter
xlat
push
fidivrl
push
mov
pop
sub
jbe
mov
daa
inc
aaa
jno
std
insb
stos
mov
les
adc
cmp
sahf
sbb
es
and
push
imul
ljmp
mov
loop
ss
xor
sub
das
xchg
pop
test
icebp
inc
mov
fcmovb
xchg
cli
cmc
je
andl
std
lcall
fists
add
push
push
push
xchg
xchg
sub
add
jmpw
call
gs
dec
lea
outsl
test
das
lds
pop
test
and
js
std
out
push
sbb
fdivrl
cmp
adc
mov
mov
test
mov
jle
push
inc
loope
xor
outsb
or
outsl
cs
push
jbe
inc
stc
sarl
fmull
inc
outsb
dec
outsl
icebp
dec
lods
push
int3
pop
lods
adc
and
test
sti
incl
js
rcr
push
inc
jp
dec
cmp
push
decb
je
jno
jo
cmc
inc
jne
fadd
sub
cli
fildl
mov
add
stc
jl
cmc
shrb
dec
aad
adc
jl
dec
pop
clc
ljmp
in
jno
pop
mov
mov
push
shrb
push
insb
loopne
or
insb
xor
test
inc
jns
jl
sar
add
out
sub
xchg
push
jno
sbb
scas
js
repnz
je
loop
sbb
xchg
call
out
dec
stc
mov
and
aas
or
aaa
arpl
aam
out
std
and
dec
fcmovnbe
lock
leave
adc
cmc
das
or
into
or
rclb
xor
lods
fstpl
lods
push
jne
loopne
jmp
pop
icebp
fildll
test
xchg
xchg
cmp
dec
push
sti
mov
inc
andnps
test
sbb
xchg
sti
mov
cmp
sarl
push
cmpsl
pop
push
jmp
lods
mov
mov
add
scas
movsb
push
or
repnz
mov
dec
mov
xchg
filds
jecxz
xchg
push
jo
lods
jecxz
fwait
and
es
pop
or
movsl
or
mov
ret
sbb
xor
mov
shl
adc
lret
mov
jg
js
and
push
inc
push
sbbl
pop
mov
iret
inc
cmpsb
nop
mov
sar
cmp
dec
lahf
iret
call
mov
inc
cmp
out
test
movsl
mov
popl
and
jbe
xor
jle
shr
jg
rcl
into
ds
add
xorb
lea
lret
inc
out
shl
in
aad
mov
jl
sbb
nop
daa
addr16
fnsave
jmp
sub
mov
imull
mov
mov
add
clc
pop
and
or
pop
and
inc
jae
dec
shlb
outsl
and
ljmp
add
ds
notb
ret
sbb
scas
pop
pop
lods
loop
ret
xor
rcr
adc
xchg
inc
add
clc
push
jne
mov
rolb
add
ret
adc
inc
dec
push
pusha
mov
push
cld
das
cmc
bound
loope
cmp
sub
cwtl
inc
xchg
clc
mov
jl
sub
sbb
gs
bnd
rorl
call
shlb
pop
jae
leave
mov
test
add
mov
je
inc
sub
fisttpl
mulps
bound
clc
sbb
rorb
cltd
add
xor
out
pop
ljmp
test
mov
xor
cmp
aam
mov
sahf
pop
enter
add
lahf
sub
push
mov
cmpsb
leave
cmp
out
or
cld
mov
movl
add
dec
add
jae
cmp
insb
js
or
mov
shll
and
mov
aam
adc
in
dec
sub
pop
data16
lock
adc
popf
or
push
dec
xlat
push
xor
jle
push
fstps
fdivrl
jecxz
and
lea
jge,pn
fwait
add
pop
or
adc
fiadds
mov
insl
mov
jle
enter
or
pop
add
jb
xchg
and
fcoml
and
sub
dec
push
xchg
out
and
or
loopne
ffreep
and
and
pop
pop
rorb
push
leave
sbb
not
ror
sti
push
pop
push
xor
jmp
xchg
je
cmpxchg
icebp
sahf
fs
pop
cwtl
js
ds
and
scas
in
es
mov
stc
stos
cmpsb
xor
xchg
jge
adc
push
jnp
les
test
add
addb
test
sub
mov
pop
fstpl
pop
inc
sti
mov
fildl
aaa
push
mov
xor
pop
and
insb
or
push
pushf
mov
jno,pn
sub
adc
push
nop
mov
repnz
incl
jle
and
cmp
cli
xchg
pop
jbe
add
push
add
stos
addb
inc
add
movsb
xor
dec
mov
ds
adc
jb
ljmp
pop
pop
sub
inc
push
ret
mov
mov
clc
and
popf
xchg
stos
adc
out
mov
sub
jne
aaa
cmc
and
js
cltd
sbb
clc
mov
dec
mov
push
mov
out
out
xchg
lods
mov
dec
cmp
lds
and
or
outsb
sub
ficomps
stc
adc
xor
insl
shrb
add
fwait
sub
inc
insb
bound
cmp
or
mov
mov
testl
pop
and
add
popf
pushf
mov
clc
incl
push
test
add
call
lret
pop
mov
dec
imul
jmp
mov
push
setbe
dec
int3
aaa
add
gs
push
es
mov
jns
je
jg
fmull
mov
ret
outsl
bound
repnz
fwait
push
xor
sub
adc
lret
es
addb
in
dec
sbb
and
je
shrl
std
jl
xor
es
and
in
insl
mov
lds
aam
jg
mov
rolb
pop
push
fiadds
add
xlat
xchg
inc
xor
jecxz
dec
xlat
inc
xor
dec
adc
inc
in
jmp
mov
pusha
mov
xor
shll
push
mov
outsl
jbe
adc
mov
in
xor
lock
dec
lret
xor
and
clc
xor
lret
das
dec
aam
mov
ficoms
mov
sub
aad
push
ds
sbb
add
or
jmp
sbb
ret
pop
xor
push
or
add
cmpsb
inc
xchg
cmpsb
push
fidivs
fidivs
mov
fcomps
jg
ljmp
or
fdivrl
and
popa
aaa
jecxz
xorl
jle
sbb
mov
cmp
sbb
xorl
imul
pop
clc
arpl
pop
mov
xchg
pop
dec
or
pop
xor
xor
enter
fidivs
xor
xchg
shrl
sub
xlat
out
pop
fists
jmp
dec
or
cwtl
pusha
mov
mov
mov
or
jnp
and
mov
add
add
loope
jmp
or
fbstp
int3
push
testb
jae
into
movsl
or
push
sti
lock
pop
jp
scas
std
jo
stc
ljmp
inc
pop
mov
mov
fwait
outsl
je
mov
mov
inc
je
and
mov
adc
clc
cmp
lea
adc
pop
adc
push
popl
inc
xor
xor
cmp
pop
jbe
cwtl
shll
popf
mov
mov
push
dec
and
dec
jo
cmp
outsl
je
lods
shll
pop
mov
mov
nop
cmp
push
sarb
add
lods
cmpsb
pop
testl
jmp
push
pop
push
or
icebp
decl
or
jmp
or
int3
adc
and
scas
shl
adc
mov
adc
push
cmp
and
pushf
pop
mov
add
stc
mov
pop
adc
pop
aaa
movsb
add
xor
cmp
fisubs
and
or
mov
mov
in
roll
les
push
cmp
aaa
loopne
add
adc
or
imul
mov
push
mov
aad
fwait
hlt
jecxz
sbb
fstpl
xchg
hlt
inc
adc
hlt
jle
pop
les
add
in
push
in
fisubrs
addl
xor
mov
shlb
mov
jge
cmp
ret
imul
cli
mov
or
sub
jmp
mov
inc
daa
jp
sub
test
mov
mov
push
mov
orb
inc
mov
adc
jge
mov
decb
jnp
mov
add
add
ss
adc
fcompl
sub
mov
add
mov
push
sbb
inc
ret
loop
or
faddp
js
pushf
add
iret
outsl
loopne
mov
or
push
mov
rcr
addr16
jne
ljmp
or
xlat
ret
add
sbb
jne
ds
adc
shlb
sbbl
rcrl
nop
jno
add
xchg
pusha
cmc
jge
loope
aam
mov
sub
hlt
mov
hlt
sub
cmpl
or
add
scas
mov
lret
out
mov
fistps
and
cmp
aam
push
push
pop
add
icebp
sti
inc
or
mov
scas
xor
push
fimuls
lods
js
pop
jnp
jo
xchg
imul
fwait
dec
dec
pop
mov
arpl
pop
cmpsb
pop
add
inc
or
cmc
fimull
out
data16
pop
and
add
scas
inc
test
lods
and
cmp
add
fldl
imull
jne,pt
stc
push
lcall
ljmp
les
lea
add
sub
sub
inc
sub
jbe
inc
outsl
sbb
fadds
push
pop
test
mov
aaa
sub
xor
xor
cmp
fwait
push
inc
jo
xorl
cld
push
pop
dec
and
ret
pop
les
mov
add
fidivrl
mov
sbb
adc
clc
adc
outsb
fsubs
push
fcmovne
adc
outsl
fimull
fsts
stos
mov
add
dec
add
xchg
imul
out
dec
sar
pusha
xor
add
pusha
xchg
pusha
stc
jmp
fsub
into
in
ret
mov
repz
xor
bound
mov
jle
bound
pop
push
aad
fdivrs
aad
pop
inc
into
jecxz
rcr
push
xlat
loope
or
dec
mov
adc
xor
int3
mov
popa
call
lret
out
sub
jo
clc
addr16
push
sbb
outsl
push
std
rcll
movsb
jo
jle
negb
xor
cmpl
push
in
mov
pop
xor
push
or
dec
test
sub
sub
mov
mov
pop
rol
outsb
mov
scas
add
sbb
mov
pop
and
jp
not
add
push
out
sub
in
xor
loope
insl
or
test
mov
mov
in
ja
or
inc
mov
inc
enter
and
sub
or
mov
enter
rolb
or
in
fcoms
inc
in
jecxz
int
adc
lahf
stos
or
test
sbb
nop
dec
in
loope
add
or
cmpsb
push
mov
sbb
mov
shrb
inc
inc
ret
aas
push
fldcw
ret
inc
cwtl
outsl
push
les
cmp
lcall
xchg
xor
add
adc
outsl
push
mov
sbb
pop
outsl
lret
add
pop
mov
or
hlt
or
in
add
mov
push
jnp
push
cwtl
add
loope
imul
jmp
xor
xchg
mov
adc
data16
mov
sub
aam
adc
inc
int
adc
xlat
ss
dec
shrb
shlb
mov
mov
mov
jns
mov
mov
ret
stc
jne
dec
add
lds
subb
cld
rorb
into
loop
leave
mov
jae
call
call
pop
fcoml
pop
xor
mov
in
cmpsl
jmp
push
sub
popf
or
test
fcmovnb
loope
fcompl
inc
lret
sub
movsl
imul
int
pop
and
shll
sub
sub
dec
inc
shl
sbb
dec
dec
jp
and
adc
mov
mov
neg
xchg
outsb
out
xor
loope
add
add
inc
mov
popl
dec
jae
test
mov
push
mov
clc
outsl
pop
ret
sti
enter
and
jns
mov
loope
es
orb
ja
mov
mov
icebp
int
push
xor
aam
and
dec
or
and
pop
xchg
and
push
cltd
out
popa
jl
lods
pop
and
dec
pop
clc
xchg
and
mov
into
scas
sarl
iret
js
mov
mov
or
mov
add
js
xchg
mov
adc
pop
addr16
mov
mov
jbe
push
adc
or
icebp
lret
cmp
mov
lods
mov
dec
outsl
cld
inc
push
int3
mov
sub
mov
rcrl
jmp
or
repz
xor
xlat
adc
jl
fstl
cmp
movsl
mov
jnp
gs
adc
stos
push
dec
das
addr16
mov
pusha
out
lcall
inc
pop
xchg
pop
jle
call
mov
and
add
dec
push
stos
add
stos
sbb
cmpb
enter
mov
mov
popa
imul
scas
outsl
cmpb
std
fbstp
add
push
fildll
pop
repz
outsl
out
xor
push
push
xchg
jne
adc
das
add
fildl
test
jle
cmpsl
pop
mov
testl
or
pop
push
inc
and
call
pop
inc
roll
fsubrs
push
xchg
dec
jo
or
mov
stc
outsb
push
pop
add
ficoms
sub
mov
pop
stos
lahf
lock
gs
mov
add
inc
icebp
mov
psrlq
mov
ret
jno
pop
or
cmpsb
andb
sbbb
loopne
push
or
dec
inc
mov
mov
push
pop
jne
insl
lret
cmp
fidivl
outsl
xor
sbb
push
push
lea
dec
fcompl
cmp
add
add
push
inc
xchg
add
cmp
loope
xchg
and
je
lods
pop
ss
dec
xchg
mov
and
inc
inc
outsb
sti
pop
jo
and
mov
jnp
sar
pop
jne
and
lods
enter
xlat
mov
and
stc
xchg
sbbb
mov
scas
in
adc
je
test
sbb
pop
jecxz
fcomip
aad
dec
jmp
xchg
jb
in
mov
jg
pop
jecxz
enter
aas
add
test
sub
xchg
out
dec
in
jo
lods
jne
push
add
outsl
cld
outsl
and
dec
test
cmp
pop
stos
andl
loop
sub
rorb
loope
adc
filds
pop
and
push
dec
lds
idiv
push
std
ljmp
pop
je
and
out
loop
inc
iret
or
ja
sub
add
out
jo
aas
jb
inc
inc
inc
in
outsb
je
outsl
fwait
push
aas
sbb
dec
xchg
negl
cmp
jle
or
clc
test
in
inc
add
repnz
adc
add
in
negl
fstpt
pop
push
aaa
add
mov
int
mov
push
mov
pushl
inc
mov
jo
test
cpuid
ret
ljmp
mov
inc
out
xor
cmp
shrl
xchg
pushl
icebp
xor
hlt
cld
add
xchg
imul
call
mov
stos
sar
les
iret
fldl
sbb
dec
jo
xchg
dec
cmp
push
loope
or
cmpsb
ljmp
gs
pop
push
js
jle
xor
pop
fs
add
das
cld
fildll
sub
repnz
repnz
pushf
lahf
jecxz
pop
or
ret
mov
mov
sub
into
cld
sub
fsts
jno
testb
scas
loop
and
lea
adcb
xor
pop
scas
jecxz
xor
pxor
daa
int
pushf
jg
mov
jb
cmpl
inc
std
lcall
push
cmpsb
mov
sbb
add
push
and
mov
or
xchg
int
pop
in
jo
cmp
jge
cltd
xchg
push
push
sbb
adc
movsl
mov
clc
mov
sti
jg
aas
gs
add
xlat
fwait
adc
and
xchg
mov
rolb
dec
imul
mov
jne
mov
lods
fldl
cli
in
adc
adc
inc
or
dec
and
fwait
jge
mov
inc
add
mov
inc
addr16
cmpb
jns
jbe
je
cmpsb
lret
xor
aaa
mov
clc
mov
xchg
out
adc
pop
outsl
or
lock
push
ss
ret
movsl
test
inc
mov
lods
sbb
dec
pop
je
fstpt
or
xorb
jo
decl
test
pushl
sub
repz
aam
rol
and
aad
mov
outsl
cli
add
fistps
pop
or
test
fcmovnbe
gs
dec
push
mov
cli
jg
int
popa
sarl
in
mov
jno
shr
loop
mov
sub
in
add
jl
sti
jge
sub
push
stos
pop
test
cli
push
leave
dec
xor
jge
lcall
out
jno
sub
push
scas
sbb
sub
jo
pmaxub
add
mov
cmc
aaa
std
xchg
aad
jge
movsb
cs
mul
icebp
loop
call
cwtl
adc
xor
pop
ss
out
add
arpl
cmpsl
rorb
jg
add
xchg
imul
das
mov
jmp
cmp
mov
ljmp
rcrl
xchg
or
pop
int3
enter
out
or
sub
xor
fdivr
mov
adc
push
outsb
fadd
pop
jp
in
mov
test
sbbl
pop
and
or
jmp
in
inc
mov
bsf
mov
cmp
sub
jmp
fwait
push
and
mov
loopne
inc
lcall
and
sbb
hlt
pop
or
int
rcl
insl
xchg
mov
jp
jnp
stc
and
dec
adc
outsl
fsubl
daa
mov
adc
dec
mov
xlat
xchg
sbb
xchg
inc
out
inc
stos
cmp
and
out
incl
rolb
imul
or
pand
push
call
push
mov
push
pop
in
sub
test
mov
push
add
xchg
loopw
cmpsl
or
ljmp
sub
js
or
push
mov
sbb
xor
and
mov
and
sbb
movsl
pop
push
repz
jbe
outsb
push
das
mov
test
xchg
cmp
xchg
jne,pn
lea
ss
mov
mov
jmp
adc
inc
jmp
xor
outsb
pop
ss
rcr
jge
sbb
vcomiss
pop
push
pop
cwtl
rorb
and
jno,pn
push
and
sbb
inc
mov
pop
leave
call
fs
ret
xor
and
cmp
lds
mov
ret
popa
inc
scas
push
fs
fisttpl
xchg
jns
jmp
inc
hlt
push
outsl
xchg
dec
lret
js
in
stos
insl
mov
dec
jne
call
sub
in
pushf
xor
xlat
sarl
sarl
jg
dec
les
std
pop
je
jp
dec
jnp
sub
xor
fsub
mov
pop
jecxz
jns
jl
xchg
rcr
shl
aaa
addb
popa
imull
outsl
rorl
pop
mov
sbb
movsl
sub
add
inc
dec
jge
inc
push
ljmp
call
popa
je
pop
inc
cwtl
push
jge
les
xor
aas
repz
lcall
mov
sbb
fimuls
insl
inc
ljmp
mov
adc
push
iret
jo
loopne
fbld
push
stos
nop
cmpsl
xor
imul
pop
mov
stos
call
add
aad
mov
inc
arpl
and
or
pop
or
stos
sub
inc
sub
pop
mov
cmp
pop
jp
pop
cs
nop
in
fbld
call
sbb
jno
sub
push
push
sub
sub
jg
dec
xchg
sbb
ss
and
or
or
fidivs
or
fs
add
or
fildl
mov
push
mov
mov
sub
jg
leave
ja
push
pusha
mov
decb
cmpsb
mov
das
jle
cwtl
mov
jg
xchg
push
jnp
xchg
popa
imul
pop
add
mov
mov
in
cli
imul
and
pop
jl
push
cltd
lock
xorb
mov
mov
popa
pop
outsb
loopne
dec
jle
stos
inc
pop
into
cmp
mov
mov
sbb
jle
lahf
mull
fwait
test
jo
mov
dec
ror
ja
cld
mov
jp
and
dec
add
push
adc
repz
orl
mov
sbb
rorb
and
pand
outsl
adc
fs
jbe
jb
adc
aam
dec
out
mov
pop
loop
sub
mov
push
push
rclb
jmp
test
andl
enter
lcall
adc
call
lcall
clc
jg
icebp
in
push
and
add
arpl
fistl
xor
inc
out
xchg
pop
inc
and
pop
sub
mov
and
cmc
push
pop
jge
sbb
mov
add
lahf
mov
pop
adc
sub
adc
js
rcll
push
and
cmc
cld
lock
inc
sbb
pop
les
sub
inc
repz
sub
add
pop
add
test
in
add
push
popa
inc
les
mov
les
or
jg
xorb
lea
lahf
push
and
sbbb
into
movl
or
jmp
mov
and
inc
mov
jno
mov
xlat
cmp
or
lret
push
rorl
sbb
mov
or
leave
add
inc
adc
bswap
or
inc
jl
add
xor
pop
fdiv
rcrb
add
xor
fisttpl
test
addr16
jne
movl
out
push
or
add
movb
mov
or
dec
jno
cld
pop
pop
aaa
mov
mov
clc
adc
inc
loope
xchg
fidivrs
fs
mov
dec
jp
sti
imul
or
inc
add
mov
lds
lock
lcall
sarb
sub
lods
aaa
jno
add
in
adc
or
mov
xchg
mov
int
add
add
add
adc
ret
dec
cld
push
les
jb
mov
push
imul
xchg
jle
divps
mov
fsubr
add
mov
xchg
push
pop
roll
push
mov
pop
cltd
stos
dec
mov
subb
mov
mov
add
mov
out
mov
arpl
or
into
push
xor
mov
inc
je
xchg
mov
movsl
adc
arpl
pushf
clc
cmc
sub
sahf
sub
out
data16
int3
mov
and
mov
jp
jle
mov
clc
inc
fsub
sbb
mov
nop
fwait
pop
and
loopne
rcrl
sbbb
jmp
cmpsb
mov
and
inc
js
xchg
sbb
ret
mov
repz
clc
pusha
rcll
int
shrb
test
jmp
sbb
jbe
fs
cmp
sub
adc
xor
daa
sub
mov
daa
add
daa
cmp
inc
int3
and
cmc
out
or
or
out
fwait
loope
xchg
loope
jp
xchg
or
cwtl
and
xor
hlt
outsl
adc
lds
jb
jnp
sbb
push
jae
xchg
jmp
push
loop
xchg
lahf
cmpsl
cwtl
dec
call
dec
or
sbb
cmp
jno
xor
xor
in
xor
mov
mov
xchg
lods
pop
adc
xchg
cmpsl
adc
adc
mov
cpuid
xor
sbb
icebp
mov
xlat
mov
rcll
movsb
and
pusha
ret
or
mov
shl
cmpsl
daa
push
lea
jmp
ss
mov
push
fists
fcmovnu
dec
hlt
dec
repz
jae
not
sbb
inc
xor
xor
imul
cmp
sub
fisubrs
inc
std
xor
fcompl
aam
stc
shl
xchg
fld1
mov
popa
push
hlt
jl
adc
mov
rcr
sbb
test
dec
mov
cli
rcll
punpckldq
hlt
xchg
shrb
mov
cs
cmp
mov
testb
in
mov
clc
mov
jl
stos
rcrb
fucomip
leave
ret
adc
mov
xor
lea
and
imul
mov
decl
roll
fiaddl
sub
xchg
test
dec
cmp
std
jge
femms
imul
movsb
rcrb
roll
mov
out
shlb
add
testb
mov
mov
test
lret
add
insl
outsl
pop
mov
mov
mov
mov
dec
sbb
insl
loope
pop
pop
xchg
test
jmp
sub
arpl
add
mov
xchg
es
cmp
xchg
sub
dec
cmc
jle
mov
mov
mov
jl
jg
cmp
movsb
xchg
pusha
mov
mov
lret
movsl
mov
pop
in
sbb
sbb
lea
rclb
lods
outsb
fdivs
cmp
sub
mov
jae
loopne
cwtl
cmp
ret
xor
lcall
lcall
test
adc
lret
add
cmp
and
cwtl
pop
inc
mov
xchg
mov
jne
inc
loopne
ret
aaa
push
push
and
sbb
push
cmpsl
adc
add
mov
fiadds
cmp
ret
add
add
addl
out
mov
outsb
pop
dec
pusha
out
iret
push
mov
out
sbbl
mov
jnp
loope
lahf
push
xor
jle
loopne
jmp
and
pop
add
imull
test
insb
mov
adc
add
ja
or
and
mov
lock
jnp
adc
adcb
and
gs
fildl
jg
fadd
popf
lahf
xor
xchg
xor
jp
push
aaa
pusha
test
mull
fistpll
test
cmp
pushf
push
loop
inc
sbb
pop
xchg
or
in
pop
mov
xor
or
les
pop
or
mov
icebp
fiadds
cmpxchg
jmp
push
rclb
lahf
fdivrl
mov
in
cmp
add
nop
ds
and
or
or
adc
add
cmp
flds
outsl
mov
fcom
sub
jge
push
inc
fistps
mov
cs
cs
je
mov
cmpsb
dec
cs
lea
outsl
mov
mov
push
js
adc
mov
das
mov
lock
gs
mov
xchg
pop
adc
cmp
cmp
out
or
lret
adc
push
aas
je
sbb
fistl
int
sub
bound
or
lods
insl
stc
mov
cmp
adc
mov
es
pushl
dec
shlb
adc
mov
mov
jo
pop
lock
mov
push
xchg
test
mov
or
mov
mov
push
sub
outsb
and
xchg
lods
push
nop
xchg
mov
push
add
cmp
fisubrl
or
adc
lahf
mov
sbb
arpl
loope
and
and
es
push
inc
fucomi
inc
mov
push
and
sbb
add
xchg
adc
outsl
push
fidivrs
fcos
pushf
pop
inc
push
mov
add
arpl
push
std
push
sbb
jg
xchg
inc
fstpl
fnstenv
inc
rclb
andb
push
flds
jnp
enter
sub
or
enter
or
add
cli
in
js
daa
push
hlt
xor
mov
mov
xor
push
movsb
lret
repnz
inc
adc
mov
mov
and
dec
adc
insl
inc
add
and
mov
pop
imull
into
dec
jo
cwtl
dec
bound
fimuls
cmp
mov
mov
aad
xchg
mov
bound
push
jl
inc
jne
mov
idivb
outsb
lock
xchg
pop
rclb
push
push
pop
in
pop
pop
aad
mov
sbb
cs
dec
nop
fwait
push
int
adc
add
or
clc
and
cmp
loope
rcl
movsb
xchg
test
mov
xchg
adc
cmp
adc
pop
pop
adc
sbbb
inc
sbb
int
or
sbb
les
mov
icebp
aam
into
sahf
add
push
sbb
cwtl
inc
mov
mov
and
sbb
ljmp
subl
aam
or
clc
minps
and
inc
adc
and
xchg
and
cmp
sbb
iret
jnp
jp
sbb
fisubl
jne
inc
push
push
jbe
pop
and
cmp
addr16
mov
stc
test
mov
sub
push
loop
out
loop
mov
repnz
pop
xor
jns
in
sub
hlt
out
sub
orb
xchg
lock
clc
sbb
push
aad
mov
clc
ja
js
inc
js
mov
mov
adc
and
adc
sub
jmp
cwtl
sbb
lret
fsubl
shlb
fldt
dec
scas
data16
incl
cli
dec
lods
inc
sub
test
pop
cli
or
cmp
sbbb
mov
or
rclb
nop
or
in
xor
in
loope
dec
cmpsb
scas
add
inc
and
inc
sbb
and
xchg
pop
sbbb
pop
mov
push
int
repz
or
scas
inc
xor
or
repnz
push
ds
mov
and
aad
into
sbb
jns
adc
or
sbb
inc
das
mov
jne
clc
xor
ja
cli
mov
dec
sub
inc
daa
cmp
out
mov
mov
cmp
dec
repz
sarl
leave
sub
add
xlat
into
cltd
in
rcr
rcrb
test
lahf
in
jae,pn
mov
movsl
mov
mov
inc
push
mov
dec
jo
mov
mov
fisttps
pop
jmp
and
adc
mov
dec
pop
inc
and
lcall
sub
cwtl
pushw
jmp
adc
lock
mov
push
jg
jg
pop
adc
and
dec
inc
int
and
sub
sbb
cltd
pop
dec
int3
dec
adc
test
lock
pushl
movsb
dec
and
pop
xchg
and
shlb
cli
sub
fists
decb
cmc
mov
fbstp
cmp
xor
xor
jl
add
test
xor
push
pop
adc
orl
pop
lock
fisttpl
aaa
mov
jne
gs
inc
lahf
pop
add
cmp
jnp
bound
sub
cld
pop
mov
and
pusha
mov
fdivs
jg
rolb
aaa
clc
and
cld
stos
divb
std
push
pop
popf
jp
or
ds
mov
jle
ret
xor
dec
iret
and
lods
fstps
rcrb
or
lock
loop
xchg
and
cmp
faddl
mov
adc
leave
xorb
lcall
dec
xchg
add
push
andb
lcall
jne
notb
cmp
int
mov
xor
pop
dec
loope
icebp
mov
out
xor
int3
mov
push
push
sub
pusha
fldenv
xor
and
add
sarb
std
pushl
in
movsl
xor
mov
mov
push
pop
xor
lock
fldl
cmp
ret
sarb
xchg
or
in
pop
incb
fdiv
push
mov
mov
sub
mov
sub
popf
into
imul
aaa
pusha
pop
pop
aaa
jo
cwtl
pop
cwtl
mov
nop
in
dec
sbb
clc
push
jl
mov
call
or
sbb
or
add
mov
insb
insb
fidivrs
aam
pop
je
dec
jne
out
xlat
mov
clc
pop
xor
arpl
out
dec
fwait
add
mov
loop
fstpl
cmp
jb
jg
cmpsb
bound
mov
popf
add
fbstp
mov
mov
decl
mov
jnp
lds
testl
mov
add
pusha
arpl
gs
in
cmp
icebp
dec
dec
popf
xor
adc
das
pushf
insl
arpl
cmp
lds
into
outsl
fbstp
cmc
adc
mov
mov
lods
push
sub
push
push
jg
out
in
cmp
icebp
fucomip
lahf
add
add
aam
pop
fbld
push
frstor
cltd
std
les
std
cmpsb
fstpt
pop
jecxz
or
jno
fildll
jge
es
rcll
pushf
jbe
fnstsw
andl
push
repz
xchg
test
out
mov
cli
dec
push
mov
xchg
xor
or
addr16
dec
push
pushf
in
xchg
xchg
fists
mov
je
dec
or
nop
push
sbb
into
outsl
adc
rolb
pusha
sub
inc
sar
sub
pusha
mov
out
test
fisubl
aaa
lret
xor
stos
push
jp
aaa
jle
jno
out
inc
rclb
shrb
cmp
in
fmuls
sbb
cmp
mov
lea
lds
rcr
jecxz
adc
dec
push
jae
ljmp
add
mov
or
mov
orb
cltd
mov
add
inc
fistps
std
test
xchg
mov
push
sub
cld
inc
and
and
pop
pop
pop
lds
arpl
jge
fbld
push
stos
cmpsb
and
ret
dec
dec
clc
mov
div
push
sub
enter
sbb
mov
xor
mov
add
outsl
jno
aaa
jnp
and
pusha
ss
rcrl
call
and
pop
ds
and
jbe
lcall
mov
sub
in
test
nop
add
test
mov
popf
mov
aas
cld
cltd
mov
jo
sbb
adc
sub
pop
mov
pop
fadds
nop
lcall
bound
popf
xchg
xor
sti
dec
push
addb
inc
in
cmp
and
out
shll
les
jmp
cld
and
xchg
inc
add
inc
mov
and
loopne
loop
jl
sbb
outsb
movsl
test
adc
add
push
dec
and
enter
dec
mov
xchg
pop
or
lahf
hlt
adc
jp
or
mov
fisubrs
and
popa
and
dec
mov
inc
shlb
int
fiaddl
int3
dec
stc
and
and
daa
and
inc
xor
fadds
out
fcmove
js
stos
pop
push
xor
data16
imul
neg
jnp
out
push
jp
in
mov
arpl
inc
in
sbb
fwait
pop
fadds
xor
bswap
push
stc
sbb
adc
fsubrs
mov
mov
pop
shlb
add
sbb
mov
xchg
xor
rcll
outsl
cmp
pop
movsl
and
jnp
cwtl
push
je
dec
mov
xchg
aaa
inc
sub
nop
ret
sahf
adc
dec
sub
inc
mov
mov
repz
adc
aad
hlt
cmp
and
push
call
mov
addb
xor
inc
popa
test
pop
test
add
scas
or
xor
jno
or
push
jno
dec
push
xor
lret
xlat
push
insl
or
test
mov
psubusw
enter
xor
in
arpl
jbe
lds
mov
cld
fcompl
xchg
mov
addr16
or
insb
and
sub
cld
shl
addr16
int
dec
xchg
push
dec
mov
jo
lahf
rorl
inc
push
fcompl
inc
inc
push
ds
sbb
roll
inc
icebp
and
xchg
loope
out
and
fwait
mov
inc
push
test
fcomip
push
mov
or
lcall
jg
sar
lock
lret
pop
push
cmp
lods
or
xchg
add
loop
int3
and
push
idivb
in
aaa
mov
rorl
scas
pop
pop
mov
scas
loopne
loop
stc
roll
push
std
xor
adc
push
mov
imul
pop
inc
fmull
das
push
mov
ss
andb
sti
mov
fistpl
add
shll
cmp
mov
aas
shrl
outsl
add
mov
pop
mov
lea
push
in
stc
outsl
imul
fildl
iret
mov
sub
jg
aaa
pop
jae
insb
mov
test
sub
mov
pop
loopne
ljmp
scas
nop
jne
xor
clc
fcmovnu
push
pop
mov
cmp
mov
xchg
out
es
jno
sub
inc
jge
jg
jge
addb
loopne
add
cmc
out
fistl
sub
sahf
mov
or
pushl
push
stos
jg
xchg
pop
jg
incb
mov
cmp
or
mov
pop
js
jg
cltd
cwtl
mov
nop
mov
sbb
cmc
pop
in
sub
push
xchg
mov
inc
add
popf
popa
cli
incb
call
stos
pop
ja
adc
sbb
sub
push
mov
cld
inc
mov
jb
shrl
ljmp
rcr
mov
mov
or
sti
add
and
sbb
mov
addb
insb
into
mov
outsl
inc
cmp
sbb
or
arpl
add
out
mov
mov
xchg
adc
loope
pop
imul
pop
push
in
aam
cmp
out
adc
out
mov
shlb
dec
out
and
adc
arpl
jo
xor
jg
mov
push
not
add
mov
pop
dec
les
xor
add
test
ret
fadd
mov
fs
hlt
mov
mov
pop
aam
movl
adc
mov
sarl
icebp
int
adc
ficoms
push
xor
andb
addr16
cld
mov
mov
cmp
les
inc
loope
and
inc
jmp
xlat
add
inc
inc
sbbl
jle
jge
cmp
adc
cli
push
out
jo
cmpsl
call
sub
sub
mov
inc
dec
add
adc
add
or
inc
test
add
dec
add
sbb
adc
enter
scas
mov
adc
sbb
stos
cmpsb
dec
jg
pop
xor
out
std
sbb
bound
pop
das
mov
in
inc
scas
adc
aaa
out
xchg
dec
mov
loopne
push
rolb
and
and
inc
mov
inc
loop
pop
mov
jle
mov
cmp
jnp
stos
inc
ss
add
jb
int
jg
pop
aad
fldl2e
icebp
inc
xor
andl
jecxz
and
push
aad
mov
sub
add
ljmp
imul
xchg
dec
std
mov
push
loopne
pop
adc
pusha
mov
pusha
jo
push
jl
ret
mov
loop
sbb
mov
add
pop
push
sbb
xchg
loopne
roll
jg
adc
stos
jne
dec
test
sbb
or
ljmp
xchg
in
loopne
sub
pop
add
movsb
push
cmp
gs
fiadds
out
fists
add
and
loope
add
inc
lahf
xor
shrl
adc
adc
add
inc
sbb
stos
out
dec
ret
cmp
pop
call
mov
pushf
imul
jge
rolb
xor
daa
and
ret
adc
mov
jbe
or
inc
mov
or
adc
sub
popa
sub
clc
cmpb
ss
xor
mul
aad
add
shrb
or
adc
loopne,pt
ret
lcall
pop
clc
rolb
scas
rcll
scas
cmp
outsl
jge
adc
lods
out
adc
ja
addl
and
sbb
cli
fldenv
enter
mov
adc
in
lret
and
into
push
dec
lahf
or
mov
pop
test
pop
bswap
stos
cmp
mov
push
hlt
pop
hlt
out
das
dec
movzbl
cli
mov
clc
hlt
insb
lcall
fists
mov
add
add
iret
push
or
cmp
negl
adc
push
and
ja
mov
cmp
fcompl
mov
dec
movsb
cs
inc
mov
inc
lea
mov
and
lar
mov
xchg
fcmovbe
scas
popa
fmulp
out
and
cs
adc
fstps
rcrl
push
inc
mov
push
into
or
xor
push
sbb
popl
cwtl
push
std
jbe
xor
mov
and
push
les
scas
cmp
into
xor
lock
fldt
sarb
xchg
dec
pop
insb
xchg
arpl
push
test
imul
and
daa
cmp
call
inc
pop
movsb
xor
fneni(8087
dec
les
lds
sub
leave
sub
push
test
or
rclb
iret
inc
add
ret
or
lcall
add
cmp
ret
lahf
pop
in
imul
mov
test
sub
dec
pusha
add
adc
add
hlt
mov
popf
cmp
lret
add
mov
or
loop
rclb
push
aam
mov
arpl
and
addr16
loop
push
inc
ud1
loope
and
ror
pop
jo
inc
add
jecxz
push
inc
mov
mov
or
enter
jp
pop
or
ds
shl
sti
sub
cmc
push
pop
fnstsw
cwtl
mov
cld
dec
push
arpl
sub
or
test
adc
add
cwtl
outsl
add
outsl
mov
loopne
mov
pushf
and
mov
sbb
add
mov
enter
mov
inc
dec
xor
outsb
or
or
inc
push
and
add
inc
sbb
adc
pop
add
mov
sub
cmp
adc
hlt
fbstp
ja
dec
push
add
add
into
xor
mov
sbb
dec
scas
cmpsl
arpl
sbb
dec
jne
xchg
push
lcall
in
fidivrl
js
lret
dec
xchg
movsb
jge
pop
adc
arpl
mov
idivb
xchg
adc
loope
lea
or
test
lret
loopne
mov
nop
icebp
cs
inc
cs
outsb
das
sar
inc
out
add
mov
popa
js
sub
pushw
add
lret
cmp
cmp
lods
push
push
test
aaa
pop
mov
mov
fistl
sbb
mov
cs
je
dec
dec
dec
add
push
pushl
aaa
fiadds
mov
pop
xchg
pop
cmp
jmp
adc
ret
call
insl
and
cmp
and
insl
add
or
outsl
lds
mov
imul
pushf
clc
out
add
lods
popa
pusha
sub
jmp
arpl
xor
cld
jns
push
sar
outsb
or
dec
and
lcall
stos
sti
cmp
test
insb
mov
or
insl
mov
pop
cmp
sub
fs
mov
dec
add
ja
rolb
xchg
cs
jl
add
test
cmp
or
loop
inc
cwtl
adcb
mov
mov
dec
out
mov
jle
pop
ficoms
call
mov
shlb
pop
mov
add
mov
add
repnz
push
leave
fisttps
aad
add
cli
popf
push
and
push
sti
xchg
lcall
jl
mov
das
ret
cmpsb
push
orb
add
pop
or
cmp
mov
out
test
test
xchg
in
imul
stos
insb
aad
mov
add
and
adc
lretw
call
andl
xor
aad
or
sbb
push
ljmp
jne
mov
outsb
jne
mov
mov
lcall
push
popa
neg
or
sub
rcrb
rcll
add
out
ljmp
fwait
stos
push
call
clc
add
mov
mov
or
pushl
add
imul
add
loope
outsb
or
lods
outsl
mov
dec
scas
mov
xlat
dec
adc
rorb
imul
push
adc
mov
in
test
sti
adc
jg
fisttpl
add
es
sub
call
loope
stos
push
sub
add
jp
xorb
fldenv
leave
fmul
ja
outsl
lds
rorb
mov
incb
inc
outsl
iret
inc
pop
pop
dec
test
xchg
call
pop
and
es
fwait
pop
icebp
push
pop
out
add
inc
ret
insl
cmpsl
mov
iret
cmp
xchg
dec
inc
icebp
call
enter
pushw
sbb
push
lods
sub
aaa
incb
jg
popa
insb
xlat
inc
lock
addr16
xor
jg
mov
push
inc
jmp
in
outsl
mov
jp
sub
mov
pop
daa
and
sub
and
xor
mov
jl
xor
inc
rorl
les
adc
and
insl
push
test
imul
es
jl
push
adc
add
ss
dec
inc
mov
aaa
pop
pop
pusha
mov
xchg
adc
pop
and
lock
push
mov
lea
pop
and
out
ds
xchg
xchg
push
jge
out
cld
sbb
dec
repz
fimuls
push
stc
out
mov
xor
xor
push
test
jmp
sub
adc
dec
scas
and
in
enter
mov
xchg
movsb
push
das
xchg
and
cltd
inc
mov
xor
or
fwait
or
pop
out
test
les
ror
shl
mov
xor
das
nop
xor
insl
idiv
imul
mov
push
adc
pop
cmp
push
xlat
ljmp
jb
dec
xchg
jecxz
dec
pop
push
arpl
cmp
negb
xor
sarb
in
into
pop
add
adc
sbbb
adc
mov
inc
daa
sbbb
in
jge
ja
mov
or
push
add
fcmovnb
dec
pop
out
pop
mov
js
push
hlt
xchg
mov
inc
add
dec
mov
clc
ljmp
std
stc
in
cld
cmp
or
sbb
stos
push
orb
add
jae
out
test
sub
into
adc
rcrb
xor
aaa
incb
lods
rclb
dec
inc
aas
fists
sub
outsl
jge
dec
outsb
outsl
mov
jle
add
dec
lcall
add
loope
sub
orb
mov
das
rcr
sbb
aas
and
cmp
js
cwtl
int3
fistpll
pop
dec
ljmp
inc
fdivrl
ljmp
and
test
aad
pop
jge
cmc
jmp
adc
shrl
fcompl
loopne
repnz
ljmp
lea
mov
sti
push
mov
je
sub
cmpsl
xchg
adc
mov
bound
jecxz
mov
addb
and
sti
sub
mov
add
fwait
lds
xor
inc
adc
push
pop
scas
add
xor
xchg
popf
in
fisubl
popa
push
mov
fcoml
jge
inc
mov
mov
xor
lods
aaa
xor
xor
mov
mov
pushl
out
loopne
loope
test
dec
jl
dec
cmpb
mov
push
rcrl
inc
dec
mov
fisttpl
pushf
xchg
add
icebp
xor
dec
jne
sub
roll
add
int3
shr
add
add
add
test
pop
push
shrl
xor
aam
sti
mov
or
sub
ds
sub
pusha
adc
push
add
ja
jle
lret
xor
ds
jmp
in
pusha
and
adc
jp
call
cmp
xor
add
outsb
xchg
sbb
xchg
mov
push
shlb
add
sbb
dec
cmp
sub
lds
sub
inc
push
or
insb
push
lock
lret
in
jp
sbb
daa
fwait
test
pop
push
std
out
es
aad
arpl
xor
jno
leave
mov
push
in
addb
mov
xchg
pushl
adc
mov
mov
or
xchg
inc
push
cmp
daa
shl
mov
mov
sbb
jns
adc
sbb
adc
aam
push
add
mov
inc
and
ret
bound
add
repnz
inc
push
dec
mov
shrl
lahf
add
das
loop
ret
stos
lret
pop
xchg
and
add
cmp
dec
adc
daa
ret
mov
enter
xchg
mov
pop
jae
dec
push
or
mov
sub
add
add
add
fcmovnu
lods
adc
stos
addps
hlt
repz
pop
dec
bound
inc
add
mov
imulb
cmp
lods
and
sbb
ja
cmp
adc
js
jne
dec
sub
xor
and
push
adc
mov
sbb
adc
daa
pop
mov
outsl
or
insb
orb
push
push
inc
and
add
rcr
and
icebp
sub
clc
inc
mov
hlt
ds
inc
in
outsl
push
xor
rcll
jae
add
mov
and
std
or
fstpl
push
adc
scas
inc
subl
jno
xchg
sti
add
adc
stos
nop
addl
sbb
mov
cmpsb
pop
jge
inc
mov
test
lret
or
or
mov
xchg
push
add
mov
mov
and
mov
ja
and
imul
or
sbb
stos
add
test
jl
int3
inc
pop
cltd
inc
lcall
out
jmp
loop
add
adc
dec
sbb
repz
int3
xorb
jmp
mov
repz
jge
adc
add
sar
sbb
movsl
fsubrp
icebp
rclb
test
rolb
push
xor
loope
fsubrs
mov
fcoms
loopne
mov
mov
push
add
es
lcall
fstps
jno
inc
lock
stos
adc
into
subb
lcall
mov
adc
xor
cmp
in
or
pop
in
dec
jae
and
adc
xor
bound
and
inc
mov
sub
sbb
sbb
or
mov
inc
sbb
aad
and
inc
andb
ss
or
les
icebp
pop
imul
mov
jo
and
mov
mov
mov
rorb
sub
jns
sbb
mov
stc
jae
sbb
cmp
lock
xor
test
and
pop
mov
adc
xor
lds
xchg
sub
push
aad
aas
sub
add
or
add
jmp
add
xor
dec
xor
pop
or
andb
shlb
imul
sti
pop
into
cli
adc
push
ja
sub
push
fsubl
pop
xchg
push
daa
and
xor
inc
scas
xchg
in
cmpb
or
sbb
dec
gs
pop
inc
add
and
cli
cld
fdivrs
jne
push
and
mov
xor
add
lcall
or
je
add
into
xchg
in
and
xor
loope
mov
jg
popf
adc
dec
push
imul
es
movsb
pop
sbb
xor
inc
inc
movsb
mov
stos
push
sarb
shl
into
sub
add
sbb
cmp
sarb
adc
mov
fsub
das
inc
push
inc
lods
lds
imul
xchg
and
sbbb
pushl
or
cwtl
jbe
iret
mov
sub
shll
roll
push
out
into
cli
or
hlt
cmpsl
daa
popf
dec
add
jmp
cld
jne
sub
movsb
out
nop
out
out
fldenv
shrb
aaa
hlt
and
dec
outsl
int
ja
fsts
push
pushf
dec
inc
pop
mov
xor
xor
mov
sub
pusha
or
inc
mov
jno
cld
inc
push
fistpll
dec
arpl
pop
push
sub
fcompl
sub
push
mov
mov
push
std
sbb
stc
movsb
push
push
fdivrs
daa
les
and
xor
cli
sub
mov
add
mov
xor
dec
pop
and
jae
adc
cwtl
loope
push
sti
pop
ror
les
mov
call
repnz
stos
mov
arpl
hlt
mov
fidivrl
jmp
lret
xchg
popf
vmread
aam
cs
dec
shlb
push
adc
js
pop
int3
mov
or
mov
fdivrl
mov
aas
pop
push
mov
pop
testb
mov
sbb
fbld
in
fisubrl
lods
aam
shlb
add
je
jp
roll
mov
cld
insb
cmp
les
rcrl
push
gs
in
add
adc
sub
xor
cmp
cmp
outsl
xor
inc
hlt
aaa
pop
jecxz
out
dec
leave
cmp
push
push
dec
jl
int3
dec
test
jmp
pop
push
jg
adc
mov
mov
add
loopne
outsl
test
out
inc
adc
and
cld
fbld
mov
jno
add
add
jns
out
je
lea
dec
popa
adc
push
mov
loopne
rclb
movl
bound
nop
neg
add
mov
aam
shrl
add
jae
jbe
into
sub
add
xor
movsb
xor
in
jle
mov
insb
cmpb
out
insb
add
cmpb
add
cmp
sbb
pop
jle
mov
insb
and
ljmp
add
adc
or
aad
cmc
iret
das
gs
loopne
sbb
test
dec
out
adc
add
pop
lret
add
test
les
inc
xchg
shrl
mov
shll
add
ljmp
sbb
mov
adc
icebp
or
mov
pop
or
adc
lds
sub
outsl
and
push
mov
adc
add
arpl
dec
sbb
loope
and
lea
lcall
adc
mov
adc
rorb
xor
and
mov
add
testb
adc
xor
jp
adc
inc
int3
mov
or
jecxz
add
cmp
and
shlb
nop
dec
mov
test
cwtl
jmp
xor
fistpl
add
inc
gs
mov
sub
pop
fwait
xor
out
loopne
cmp
mov
out
and
add
mov
push
addr16
or
add
push
jge
adc
out
pushf
add
mov
bound
xor
push
jl
in
add
adc
testb
inc
test
sbb
test
dec
push
inc
adc
fists
lahf
call
aaa
movsl
mov
jne
mov
add
adc
pop
leave
clc
sub
sbb
jl
imul
fs
pop
insl
inc
pop
add
es
push
xlat
jno
sbb
jne
xchg
and
mov
test
cmp
ret
xorl
pusha
push
fildll
cmp
cmp
out
jg
add
add
mov
add
pop
test
push
imul
call
es
ret
scas
adc
push
scas
fisubl
daa
or
popf
sub
insl
popf
clc
pop
pop
and
xchg
mov
bound
adc
add
jae
sub
scas
int3
lock
shlb
mov
adc
xchg
dec
bound
pop
shl
dec
pop
push
insb
mov
cli
mov
pop
adcl
pop
lds
jle
or
mov
and
rolb
nop
cmpsl
add
xlat
xor
push
mov
add
negl
sbb
pop
xchg
push
inc
movsl
mov
pop
es
mov
mov
daa
push
lods
out
insb
ljmp
out
jmp
xchg
ljmp
add
repz
sub
iretw
aas
daa
and
xor
out
pop
call
adc
mov
incl
shlb
movsl
xor
cmpsl
ja
dec
pusha
mov
mov
cwtl
pop
hlt
into
shlw
mov
xor
and
cli
jns
rol
xor
jnp
lock
ret
fwait
xor
in
add
out
imul
inc
pop
adc
jnp
aam
sub
lret
and
and
pop
jno
arpl
cmp
push
adc
ret
cmc
in
popf
js
xor
sub
lods
inc
es
lods
popf
mov
repz
xor
fsubrp
lods
or
inc
mov
inc
lahf
inc
gs
mov
scas
push
popf
lock
xchg
cmp
push
pop
pop
mov
push
scas
adc
push
rorl
adc
neg
stc
add
mov
mov
jecxz
push
iret
jl
shrl
movb
lcall
xor
or
jae
or
adc
inc
add
test
lds
add
cmpsl
adc
int
rclb
cwtl
add
sbb
lea
add
pop
fimuls
roll
in
sbb
sub
filds
les
push
add
cmp
push
mov
out
cmp
sub
xor
adc
js
ljmp
testl
test
out
cmp
push
and
pop
stc
mov
push
pop
in
adcl
or
add
imul
clc
movsb
out
dec
dec
push
sbb
dec
xor
pop
rclb
adcb
insb
in
inc
test
lds
leave
add
fnstenv
outsl
or
and
cmp
inc
fwait
mov
loopne
sbb
add
or
enter
xor
pusha
or
mov
cmp
sbb
or
shrb
aaa
dec
hlt
pop
mov
insl
inc
sub
mov
cld
call
leave
pop
jns
das
mov
inc
jno
lds
sub
leave
outsl
aam
xchg
das
cmp
js
mov
mov
mov
iret
xchg
jp
outsl
inc
sbb
fnstcw
push
std
lcall
add
push
movsb
movsl
scas
push
xor
or
jg
add
hlt
cmp
jp
pop
add
xchg
sarl
das
adc
fistpl
push
aad
fwait
and
insl
add
ljmp
ret
or
cltd
pop
fs
divb
shll
test
lods
or
cmpl
adc
push
andb
mov
std
fiadds
add
shll
fwait
cmp
jns
iret
or
add
mov
push
push
mov
and
or
mov
xor
pushf
and
push
add
cmc
dec
les
in
mov
inc
fistpll
add
and
mov
fldt
call
arpl
jbe
in
mov
hlt
sbb
mov
pusha
pop
mov
movsl
daa
outsl
push
jg
cmp
out
mov
clc
test
mov
inc
inc
lahf
jbe
test
lcall
sbb
pop
cltd
pusha
cmp
jbe
add
sbb
cmp
lds
push
hlt
mov
xlat
ds
mov
lock
cmp
mov
xchg
adc
push
insl
aaa
jl
add
fcomp
movsl
pop
pop
sti
adc
mov
loope
adc
ss
xchg
jo
negl
lcall
lods
pop
add
sub
push
shll
lcall
stc
or
and
faddl
imul
stos
divb
iret
rclb
add
sub
mov
jns
mov
pusha
nop
shlb
xor
inc
mov
lret
jg
adc
xchg
add
add
ljmp
das
sbb
std
push
std
pop
push
push
jne
adc
add
mov
str
lock
or
das
sub
push
cmc
divb
xor
outsb
rep
stos
std
or
jecxz
lret
stos
jnp
sub
cmovns
push
push
push
push
call
out
push
cmp
out
add
gs
imul
push
mov
testb
aad
add
shll
sub
push
push
ud1
test
outsl
fscale
lahf
aad
scas
push
in
hlt
mov
mov
enter
dec
fbstp
adcl
test
mov
add
jno
addr16
cltd
fistpll
shlb
jo
adc
pop
daa
inc
roll
popa
fstpt
mov
leave
cs
jns
mov
orl
mov
pop
stos
bound
jp
sbb
shrb
inc
leave
cs
stc
notb
push
add
mov
mov
mov
call
aaa
sub
jge
fistpl
jae
notb
sbb
push
mov
adc
pop
mov
xor
aaa
call
pop
adc
jg
cli
hlt
pop
jnp
adc
or
cld
movsb
aad
mov
les
jnp
sub
daa
negb
sbb
xchg
sub
outsl
out
inc
jmp
fucomi
fstl
xchg
sbb
outsb
pop
subb
fadds
imul
mov
insb
dec
insb
roll
mov
rolb
sbb
insl
adc
cmp
and
mov
in
pop
adc
inc
and
dec
enter
or
loopne
cld
jnp
add
add
inc
sub
repnz
cs
or
adc
and
fcomps
lods
cmp
mov
lea
cs
lea
add
das
aam
adc
in
push
icebp
push
push
jno
lcall
inc
mov
xchg
aam
inc
cld
adc
lock
mov
repz
orl
in
xor
mov
mov
call
ficompl
adc
rclb
fwait
adc
sbb
jge
add
or
hlt
mov
xor
inc
in
xor
adc
sbb
xchg
and
js
adc
add
add
inc
hlt
or
push
call
mov
lock
and
pop
add
pushf
fs
test
cmpsb
pop
scas
mov
mov
call
jo
adc
dec
or
cmp
mov
call
add
out
adc
lock
add
mov
xchg
addr16
inc
dec
ljmp
inc
shll
inc
pop
sub
sbb
aaa
sub
call
xor
push
cmpb
xor
pop
adc
xor
addl
xor
rcll
scas
dec
lock
or
mov
dec
pcmpgtd
cmp
dec
xor
loope
push
sub
xchg
pop
addr16
in
in
sub
dec
les
mov
sarl
bnd
stc
out
or
shll
hlt
xchg
daa
sub
and
add
les
insb
push
and
fiaddl
push
lock
and
push
or
add
and
pop
adc
sub
adc
dec
adc
inc
xchg
cmpsl
mov
jmp
loopne
mov
test
xor
and
pushf
pop
movsb
std
adc
push
adc
sbb
ss
enter
xor
push
sbb
sub
arpl
in
adc
dec
fdivl
dec
out
push
leave
sub
jb
mov
add
jno
roll
adc
xor
ficompl
mov
aad
fdivs
lds
or
adc
arpl
repz
loope
adc
mov
test
sub
adc
mov
test
test
movl
and
and
jno
js
dec
stc
xchg
add
dec
adc
dec
inc
nop
loop
dec
push
fldenv
push
fwait
sti
push
dec
inc
fmul
pop
iret
lret
mov
pop
inc
enter
push
mov
or
sbb
aam
mov
sbb
pushl
insb
aam
and
push
sbb
mov
lock
mov
ffree
inc
or
or
aam
sarb
push
mov
pop
or
outsb
mov
dec
adc
jge
dec
scas
jecxz
pop
mov
push
lea
ss
sbb
nop
push
add
mov
xchg
add
lahf
pop
mov
jmp
call
ljmp
inc
mov
or
test
mov
add
inc
les
notl
out
mov
inc
push
xchg
imul
shr
mov
jno
inc
and
dec
cmp
loop
pop
out
dec
cld
and
test
push
int
push
lcall
scas
stc
add
add
out
andb
repnz
cmc
cmc
mov
pop
jmp
fstl
inc
mov
jb
pop
cli
jne
fs
clc
pop
andb
lock
xchg
sub
mov
mov
inc
andb
inc
push
outsb
pop
inc
sbb
fucomip
in
aaa
sbb
lock
int3
dec
inc
addb
and
xor
push
jmp
cld
inc
and
mov
insl
xlat
push
sub
cmp
pop
je
stos
movsb
and
inc
push
lahf
and
andb
xor
jne
sub
lahf
outsl
andb
cli
sbb
inc
mov
jg
and
adc
pop
add
hlt
add
add
jbe
fucom
push
adc
aam
jne
testb
add
xchg
inc
inc
inc
inc
jl
dec
xchg
or
stc
cmpsb
loop
jecxz
in
das
test
and
mov
jne
jecxz
insl
xor
stos
jle
dec
das
hlt
jg
sub
sahf
sbb
xor
idivb
sbb
stos
mov
imul
sub
ja
cmpb
subb
pop
push
ret
mov
lds
cs
mov
aaa
push
loopne
xchg
add
out
mov
sub
sbb
mov
push
je
mov
cmp
push
insl
ss
xchg
push
rcrb
xchg
xor
pushf
imul
lcall
imul
jne
dec
fildl
and
add
lcall
mov
popa
cli
hlt
repnz
push
hlt
iret
fbstp
mov
pop
add
inc
aas
mov
clc
aaa
sub
mov
mov
push
sbb
lret
cmp
cmp
stc
popa
jb
mov
xchg
pop
adc
or
shlb
ljmp
mov
push
dec
push
push
jne
or
fmuls
sbb
loop
outsl
push
sub
xchg
push
imul
sub
test
xchg
andl
loope
into
out
inc
fcomps
xchg
leave
aam
cmpsl
mov
arpl
ss
insl
dec
sahf
jmp
or
mov
sbb
rcr
fadds
iret
mov
iret
push
sub
fcomp
cld
ret
adc
xor
xchg
xor
shll
loopne
loopne
push
cmp
add
or
xchg
sti
aas
mov
repnz
adc
lea
sub
mov
jno
dec
mov
and
pop
jbe
mov
dec
xor
mov
inc
test
inc
faddl
or
cmc
sbbb
mov
ja
inc
dec
or
out
xorb
insl
jl
lock
out
icebp
lahf
jg
aam
in
pop
add
test
dec
add
sub
mov
mov
iret
mov
pop
movsb
push
push
xchg
inc
mov
test
pop
ficoms
mov
xchg
xor
sbb
dec
jne
xlat
push
mov
popf
lret
int
dec
adc
add
mov
adc
or
cwtl
leave
add
mov
sub
stc
mov
push
xor
or
cmp
adcb
clc
mov
fstps
es
aad
pop
sbb
sub
or
inc
int3
adc
jg
das
inc
adc
aam
push
nop
sub
sub
sbb
or
rcl
inc
jecxz
lahf
int
ss
cwtl
dec
cmp
adc
jle
add
mov
inc
fcoms
sbb
stc
add
stos
outsl
mov
aam
add
push
push
pop
ret
dec
scas
mov
sub
divb
std
lods
decb
dec
setno
add
or
mov
andb
or
sbb
mov
std
pop
ret
adc
outsl
mov
fisubrl
xchg
pop
mov
add
jo
inc
sbb
xchg
xor
jg
cmpsb
clc
mov
subl
scas
push
cld
orl
xor
mov
movsl
add
js
dec
loop
adcl
call
cmpsb
mov
xchg
jo
shl
scas
xchg
pop
dec
pop
pop
sub
lcall
adc
stc
lahf
movsl
add
add
shrb
iret
dec
pop
xor
push
xorl
pop
pop
add
fdivrs
fistpll
adc
sahf
adc
fiadds
fs
fst
test
adc
mov
icebp
call
pop
or
mov
add
inc
arpl
mov
inc
das
fbstp
loop
in
dec
jmp
in
mov
std
ds
xor
add
leave
andl
fwait
jmp
adc
and
ja
dec
scas
push
fs
rcll
push
or
add
loop
push
sub
xchg
mov
xchg
lock
out
les
loop,pn
in
pop
mov
adc
loopne
cmp
outsb
jg
xchg
shll
fbld
dec
dec
pop
aaa
pop
gs
and
pusha
rorl
lret
xor
ss
cwtl
inc
icebp
das
jo
pushl
cli
cltd
call
mov
cmpsl
push
loopnew
nop
loope
mov
clc
out
jmp
push
mov
sbb
xor
les
jge
and
inc
add
in
fucomip
loopne
inc
call
or
or
dec
push
das
mov
fstpt
out
and
insb
outsl
push
add
nopl
lea
mov
arpl
outsb
outsl
jg
push
or
push
inc
xchg
inc
pop
xchg
and
fmull
sbb
pushl
inc
je
shll
stos
sub
push
add
adc
and
out
lods
dec
sbb
fisubrl
jecxz
mov
mov
xchg
inc
rorl
push
jns
call
pop
pop
fcmovb
ret
xor
pop
loopne
mov
in
or
and
mov
push
sbb
push
mov
inc
data16
inc
lret
xor
leave
imul
inc
cwtl
imul
into
sbb
xchg
sub
loop
jbe
xchg
cwtl
aas
jmp
xchg
sub
les
enter
push
push
aas
loope
push
ficompl
dec
mov
cmp
loope
xlat
add
insb
aaa
out
fidivrs
mov
movsb
rcll
mov
xor
jecxz
nop
adcb
jbe
out
cli
int
add
rclb
sbbb
in
sbb
mov
xchg
jl
sbbb
jns
lods
loop
aaa
rorl
ljmp
inc
mov
mov
cli
pop
xor
push
lahf
push
lods
adc
addl
cs
popf
lds
js
ja
and
filds
pop
inc
sbb
add
sub
test
icebp
add
and
mov
mov
pop
inc
jae
inc
or
lahf
mov
data16
or
dec
out
addl
mov
ds
in
pop
arpl
mov
aam
rcll
xorb
mov
xor
adc
push
outsl
test
mov
push
lcall
sbb
sub
sbb
add
xor
mov
in
mov
sub
cli
add
or
lret
add
cmp
clc
and
imul
and
test
pop
jns
fs
push
lea
lods
jp
push
mov
aaa
inc
adc
sbb
out
fadds
xchg
dec
xorb
aad
mov
jnp
add
inc
adc
stc
and
loopne
int3
aad
scas
mov
and
push
dec
aaa
arpl
ljmp
es
lock
cli
sub
mov
adc
and
ss
subb
in
pop
xor
adcb
dec
cltd
cli
push
mov
push
outsb
inc
add
mov
rcrl
pop
rcll
push
push
clc
jl
push
fs
inc
jb
and
bswap
dec
ficoml
mov
stc
push
sbb
int3
pop
out
inc
mov
xor
add
mov
xchg
out
mov
hlt
es
mov
or
dec
inc
cmc
sbb
push
les
add
fisubl
loopne
xor
add
aas
jl
stos
loopne
stos
sbb
fcoml
test
ss
leave
fwait
adc
add
inc
sbb
cltd
test
loope
push
or
sbb
roll
xorb
cmp
daa
xor
pop
mov
sahf
inc
mov
sub
mov
or
fisubrs
push
stc
leave
xor
push
lea
mov
das
out
pop
jmp
ret
in
aam
orb
sub
dec
leave
mov
es
mov
fsubl
xor
add
sub
mov
mov
lods
mov
add
shl
in
fsubl
add
push
or
jo
test
stc
repnz
ret
dec
rcrl
push
addb
fstpt
pop
inc
adc
imul
add
jecxz
fistl
adc
adcl
rolb
inc
pop
fdivs
dec
cltd
pop
lods
mov
add
ret
inc
adc
imul
jno
or
or
loope
xchg
adc
cmp
movsl
pop
jae
sbb
scas
outsl
adc
xor
mov
push
cld
sbb
in
mov
push
pop
mov
sub
mov
repz
lods
mov
ss
push
push
mov
cmp
xchg
mov
cli
sbb
inc
sbb
push
dec
add
outsl
dec
jnp
lock
test
test
ljmp
inc
mov
clc
adc
pushf
jnp
incl
or
cld
in
call
sarb
adc
jne
orb
insl
mov
jb
fistpl
xor
sti
inc
mov
xor
popf
add
add
hlt
out
loop
inc
or
push
pop
pop
ja
lret
push
cmc
divl
scas
das
and
shrb
inc
jl
dec
mov
lret
out
lahf
mov
int3
inc
sub
mov
mov
jp
les
ss
dec
xchg
js
add
and
sbb
js
xchg
add
xchg
and
sbb
cld
adc
dec
arpl
inc
test
cmp
adc
pop
fisubl
test
mov
jo
movsl
call
push
mov
jno
mov
sbb
stc
clc
les
jnp
call
test
outsl
sub
sti
es
xor
jnp
movsb
stos
sub
xor
ja
filds
rorl
push
add
jmp
js
push
xchg
sub
sbb
xor
or
nop
leave
clc
into
add
scas
dec
add
adc
rorl
add
and
pop
jge
fcoml
jnp
ss
pop
mov
incl
leave
sub
leave
lock
xor
xchg
fidivrl
or
inc
nop
pop
scas
dec
mov
mov
adc
adc
arpl
stos
push
call
ret
inc
mov
mov
in
cmc
pop
push
lret
or
jno
add
das
mov
xor
and
sti
das
cmc
pop
lcall
and
in
sub
fists
cmpsl
inc
lcall
sbb
call
or
fidivrs
popa
adc
insl
cld
add
sub
inc
test
push
jo
cvtps2pi
jl
ds
and
xlat
sub
cmp
lock
sbb
bound
jns
and
and
outsl
mov
popa
andl
xchg
loope
outsl
enter
and
fisubs
mov
loop
mov
cld
add
mov
sti
pop
insl
or
and
aad
into
pop
rol
fisubrs
mov
daa
pushf
ds
mov
jmp
jge
mov
add
jns
lret
cmp
lock
push
jmp
mov
cli
mov
out
push
in
pushl
mov
add
stc
movsl
cld
and
aas
xchg
push
jno
pop
push
pusha
test
mov
adc
clc
adc
xchg
dec
rcrb
sbb
out
xchg
push
js
in
and
ficomps
cld
sbb
cmc
push
pop
out
xchg
jae
adc
lock
int
loopne
fnstenv
stc
insb
fsubrp
jg
add
mov
jno
mov
dec
mov
loope
and
dec
lcall
lahf
cli
sub
and
sub
fmuls
ljmp
mov
push
mov
jge
testb
int3
ret
das
jmp
cmp
pop
clc
push
inc
pop
inc
push
mov
and
ret
rclb
orb
dec
and
out
xor
popf
mov
ja
ret
enter
incb
call
and
jns
sbb
sub
aaa
jmp
hlt
add
jl
std
or
or
fs
xorl
xor
mov
test
out
and
in
pop
sub
pop
mov
or
pop
dec
jl
pop
fildl
inc
hlt
sarb
add
pop
dec
test
lock
adc
dec
test
add
mov
cmp
cwtl
sahf
in
notb
or
xchg
adc
jmp
or
repz
loope
adc
arpl
subb
jns
adc
or
movsl
fisubrl
dec
pop
imul
xchg
dec
lods
or
mov
sahf
push
xchg
aaa
mov
pushf
int3
ljmp
cmpsl
push
xor
js
dec
sahf
inc
das
cld
outsl
add
sub
adc
divl
inc
loope
in
fildll
xor
in
mov
rcl
jle
loope
adc
pushl
mov
mov
icebp
flds
xchg
test
dec
icebp
mov
out
scas
outsl
test
loopne
mov
inc
loop
insb
pop
cltd
dec
aad
icebp
out
in
adc
xor
in
in
lock
push
and
mov
into
mov
aam
fldl
lcall
clc
push
pushl
loopne
push
dec
notl
or
in
sub
ret
pop
popa
pop
add
inc
mov
push
jb
loop
shr
jo
or
cmp
fdivl
mov
push
call
or
xchg
in
pop
pusha
imul
jno
mov
sbbb
stc
xchg
pop
pop
dec
mov
pop
mov
bound
sbb
adc
mov
pushf
add
jl
dec
popf
and
repz
pusha
push
xor
rolb
test
stc
or
add
inc
push
mov
xchg
mov
mov
or
shll
adc
fistl
inc
and
sbbb
mov
cmp
xor
add
outsl
adc
pop
aam
cmp
mov
adc
popf
cmp
nop
xchg
sub
adc
and
fistpll
fwait
adcl
loop
mov
inc
mov
dec
add
ds
xchg
jp
mov
lods
cmp
add
dec
add
adc
movsb
dec
sub
push
adc
sbb
sbb
in
loope
stos
shlb
ss
pop
mov
loope
rcr
mov
out
fcompl
imulb
dec
scas
pop
sbb
inc
cwtl
add
iret
adc
pop
hlt
inc
inc
pop
sub
cmp
and
sub
in
mov
push
in
or
sar
jmp
xchg
adc
insb
mov
jae
incb
pop
or
xchg
jg
push
hlt
add
sbb
sbb
or
xchg
xor
mov
test
mov
push
test
cmpb
jo
cld
ror
jge
sub
inc
xlat
lock
inc
jns
jmp
fisubl
loop
jge
push
xchg
or
fsubs
pushaw
mov
ret
sub
inc
and
rcl
popf
fmull
aam
sub
sbb
xlat
mov
jns
mov
xor
ret
mov
in
adc
mov
and
sub
add
jle
dec
inc
jno
fbstp
or
or
in
aam
lret
jae
adc
add
insb
jbe
es
je
pop
or
ljmp
fbld
jb
sbb
insb
push
aam
inc
pop
add
push
ficoms
add
mov
in
add
mov
outsb
in
sub
adc
or
and
mov
iret
and
push
cltd
push
dec
stos
mov
cmp
xchg
enter
inc
mov
clc
shll
fimull
adc
and
xor
or
fidivs
in
jb
add
and
add
adc
lcall
fdivrs
subb
pop
adc
xchg
dec
lods
add
rorb
aas
mov
repnz
dec
xchg
push
stos
in
dec
cld
push
xchg
add
jp
push
push
pop
lock
icebp
push
sarl
aam
mov
inc
add
adc
xor
addl
mov
jbe
arpl
in
js
and
sarb
pop
jle
mov
rolb
loopne
add
mov
mov
add
jg
lods
pop
enter
cld
xchg
sbb
fldt
callw
pop
call
mov
inc
nop
mov
mov
inc
and
or
sbb
gs
lea
sbb
imul
aad
cmpsb
sub
pop
rcll
call
pop
add
fs
mov
lock
mov
sub
sub
cmpl
xchg
xor
push
mov
mov
ljmp
add
pop
lret
cmp
mov
stc
lret
mov
outsb
mov
push
pop
test
sub
jns
inc
mov
stos
and
dec
pop
pop
and
mov
jg
push
adc
xor
insb
cmpb
dec
cmc
pop
pop
add
jmp
inc
jecxz
mov
xchg
push
out
inc
cli
rcrb
outsl
pop
pusha
fidivl
add
mov
in
call
repnz
jg
fdivs
aaa
or
push
and
fwait
push
add
movsl
sbb
shrl
push
and
shlb
add
andb
fadds
jmp
sub
stos
es
lret
mov
das
adc
icebp
mov
mov
xor
cmp
fbld
xchg
inc
pop
xor
xor
out
or
in
testb
push
lds
aad
mov
rcll
test
iret
scas
adc
inc
movsb
inc
je
jmp
jp
fildl
jl
jle
clc
add
fists
mov
inc
jb
jecxz
lea
loope
push
pop
inc
xchg
mov
or
sar
and
ret
push
sbb
rcrl
int
and
cmp
add
or
scas
outsb
aam
je
push
dec
and
lret
movsl
dec
std
ret
or
inc
xor
push
mov
pop
mov
pop
repz
xor
lcall
sub
mov
xchg
ja
in
aaa
ljmp
icebp
ss
mov
mov
adc
or
filds
dec
dec
pusha
dec
lds
test
addb
cmpsl
cmp
lcall
sbb
fnsave
xchg
call
arpl
xchg
fdivr
fstl
pop
xor
divb
mov
ss
ret
jbe
sbb
call
mov
insb
or
push
pop
mov
js
sbb
mov
aam
xchg
gs
sbb
les
add
cld
out
pop
call
cltd
inc
ja
xchg
pop
xchg
pop
lods
sbb
ja
es
mov
insl
ret
or
jp
cli
push
mov
jecxz
incb
adc
cmp
movsb
popa
repnz
in
pop
lds
mov
or
sub
sbb
clc
enter
cmp
xchg
pop
xchg
stos
mov
mov
add
mov
ds
mov
shll
mov
pop
rclb
lret
pop
sub
repnz
daa
push
add
test
or
cli
xorb
lds
adcb
dec
popl
mov
cmc
insl
push
adc
fisttps
mov
fstp
fsubrs
pushl
adc
xchg
fldt
in
cmp
xor
jge
mov
inc
es
cmp
outsl
sarl
jg
outsl
dec
hlt
outsb
scas
push
mov
mov
filds
fbstp
push
pop
loopne
pushl
mov
rolb
movsb
pushl
lcall
inc
movsb
jg
push
or
int3
mov
sub
lret
shl
rolb
testl
test
pop
out
jp
and
enter
out
imul
icebp
addl
fdivl
xchg
or
sbb
add
repnz
lock
repnz
into
gs
pop
loopne
cwtl
test
jg
rcr
popa
pop
jae
jne
dec
rolb
scas
push
xchg
loopne
cmp
data16
adc
dec
xchg
sub
fidivrs
addr16
mov
pop
pop
in
sub
icebp
add
mov
lcall
inc
mulb
or
add
sub
push
jl
pop
pop
mov
or
dec
paddusw
mov
outsl
call
jecxz
xor
pop
and
jns
cmp
inc
xor
ss
push
or
adc
dec
mov
das
or
fs
int
adc
inc
iret
push
mov
aaa
xchg
aaa
or
add
adc
mov
ja
ds
sub
pop
sub
and
add
or
push
mov
pop
incl
cmp
cwtl
dec
jbe
inc
dec
and
push
rclb
cwtl
fistl
add
jae
push
mov
sub
push
mov
fsubs
pop
cmpsb
loop
mov
jg
fcmove
addr16
cmp
sub
push
push
stos
pop
lods
push
push
push
mov
jne
popa
clc
in
mov
xchg
dec
repz
ljmp
and
stos
push
pop
inc
popf
mov
adc
mov
or
xor
xchg
and
push
cmp
subb
pushf
cs
xchg
cmp
dec
into
cmp
jb
jno
mov
ret
xor
cltd
mov
les
ja
out
jnp
neg
sub
mov
cmp
add
test
mov
inc
shlb
dec
mov
mov
loope
outsb
push
in
push
out
mov
fucom
mov
int3
add
fists
sub
cltd
testb
push
pop
shlb
push
std
daa
and
sub
repz
push
adc
inc
decb
mov
add
or
pop
fmull
sub
and
push
lock
jmp
repz
or
pop
clc
mov
adc
cmpl
repz
inc
pushf
inc
mov
mov
aaa
loopne
inc
and
or
adc
lea
mov
pop
fisttps
das
or
cmp
lahf
lods
jns
in
mov
lods
pop
lods
lret
push
aaa
icebp
pop
adc
inc
out
sbb
add
push
pop
lock
add
or
push
lock
aaa
or
xchg
xor
push
mov
add
and
ja
aam
loop
test
orps
sbb
loop
mov
mov
inc
repz
add
xchg
mov
push
cld
inc
nop
mov
cmc
sti
sub
adc
dec
cld
sub
sarb
dec
iret
rcll
sbb
pushf
mov
scas
inc
lods
mov
jp
lock
jno
ss
mov
test
mov
and
dec
add
mov
mov
fdivs
inc
movb
or
jge
xor
jge
fidivs
push
filds
xchg
lcall
mov
iret
mov
dec
or
mov
movl
inc
pop
xor
jns
cld
ljmp
push
insb
mov
add
push
mov
jbe
std
add
fdivs
add
xchg
or
sub
push
jo
jecxz
cmpsb
push
jae
sub
jo
jmp
shrb
sti
or
js
jle
gs
leave
pop
jb
movsl
rcrb
outsl
xchg
sub
jo
mov
dec
ljmp
jl
mov
outsl
push
clc
lret
aaa
fists
xor
cmp
das
icebp
fbld
and
pop
test
sub
sahf
push
gs
and
das
icebp
push
mov
popf
addr16
xchg
sbb
mov
clc
jmp
mov
push
xchg
les
xchg
divl
je
js
sbb
jle
es
cmp
push
add
mov
in
mov
mov
std
in
or
into
mov
repnz
ss
addr16
fsubp
call
and
nop
test
and
leave
xchg
xchg
icebp
jg
lahf
adc
xchg
test
clc
shl
or
aaa
push
jnp
add
int3
adc
aam
pop
subl
pop
nop
push
adc
sbb
pop
mov
mov
mov
icebp
stos
aas
loopne
add
adc
cmp
in
inc
ljmp
jl
scas
in
aas
push
adc
icebp
inc
dec
aaa
add
mov
lock
add
arpl
dec
jle
push
insb
mov
inc
shrb
jp
aad
mov
test
jmp
adcb
or
pop
adc
inc
add
outsl
clc
pusha
and
xchg
rcr
dec
dec
push
dec
cmpsb
cmp
xchg
andl
mov
jg
cmp
jns
pop
cmpb
hlt
cltd
push
cmpsl
sbb
movsb
cmpb
sti
shl
popf
dec
cmp
andb
repz
not
adc
mov
dec
stos
adc
or
cli
mov
jg
or
adc
dec
and
adc
popa
cmp
bound
hlt
gs
dec
sbbb
imul
and
movsb
jge
cmp
loopne
inc
outsl
inc
sbb
adc
mov
mov
leave
repz
pop
outsl
out
xchg
xor
mov
xchg
cli
frndint
xchg
cmp
daa
inc
cld
aaa
clc
mov
xchg
jl
dec
adc
mov
lds
and
push
jno
or
jle
adc
cwtl
add
cmpsb
pop
add
aaa
or
mov
imul
adc
aas
mov
mov
or
pop
movsb
addb
call
mov
addl
je,pn
add
push
inc
data16
push
xor
in
adc
or
sbb
clc
xchg
ror
in
inc
inc
and
fists
mov
adc
lret
orl
sbb
or
inc
or
adc
or
dec
and
push
inc
jno
cltd
inc
add
in
cmp
inc
insb
lret
int3
add
add
test
fistl
cmp
scas
sub
push
rclb
in
popf
xor
cmp
inc
inc
lret
cmp
ret
push
daa
test
mov
dec
pop
adcb
adc
add
add
sub
or
mov
addl
add
sub
addr16
sub
sub
mov
inc
std
movsb
and
pushf
fsubl
add
inc
xor
mov
outsb
push
pop
add
pop
inc
ret
into
or
add
and
or
fisubrl
dec
mov
or
in
push
cmp
or
jne
jns
cld
jmp
cwtl
dec
xor
add
pop
sbb
outsl
in
scas
mov
cli
popf
loope
aam
mov
pop
hlt
mov
fsubr
mov
mov
inc
add
shlb
cmpsb
xor
push
jecxz
jl
add
mov
inc
testl
inc
sub
push
push
cmpsl
cmc
pop
icebp
adc
xchg
add
imul
pushf
xchg
jae
pushf
adc
call
cmp
add
rolb
rclb
add
movsw
dec
retw
push
mov
pop
stc
push
xor
mov
mov
xchg
and
int3
stos
push
faddl
sbb
loopne
fucom
push
dec
and
es
push
xchg
fists
mov
stos
aam
call
aad
cld
jg
sbb
imul
call
rcrb
orb
pop
stos
add
and
and
adc
mov
lds
jmp
inc
int3
lahf
je
outsl
push
sub
mov
jle
fcoml
les
sub
sub
dec
jecxz
shrb
adc
lcall
and
push
xor
pop
cmpsl
mov
mov
and
mov
mov
shrl
out
pop
shll
dec
xchg
jle
repnz
std
das
push
mov
jle
jp
rcll
dec
sub
jle
add
pop
cmpsb
faddl
enter
adc
movsb
sub
add
addr16
lds
mov
fs
int3
sbb
pop
fsubrs
mov
mov
mov
mov
lock
roll
inc
push
pushf
js
xchg
popf
push
lcall
cmp
adc
in
pop
std
pop
mov
popf
dec
mov
or
add
test
loop
incb
out
sar
insb
and
cltd
lahf
push
cld
push
das
adc
mov
inc
sarl
sbb
sbb
mov
test
insb
xlat
cwtl
mov
push
mov
mov
jns
pop
xor
xchg
clc
cmp
pop
push
enter
lcall
movsb
sbb
insb
clc
mov
lahf
mov
inc
jne
mov
or
cwtl
test
cmpsb
cmp
fmuls
push
js
lock
ds
cmp
cmp
pop
rcrl
push
out
sub
add
sti
push
xchg
repz
loop
push
aad
std
or
adc
fdivrl
mov
and
ja
pop
add
shlb
add
push
lds
aas
adc
insl
aam
cmc
scas
or
bnd
and
cmpsl
lock
jp
sub
push
push
xchg
inc
pop
std
mov
sbb
out
aad
dec
adc
add
push
sub
sbb
push
shlb
fistpl
cmpsb
cmp
shlb
push
cmp
outsb
fadd
sub
fs
add
jbe
mov
cli
adc
jg
daa
push
adc
cs
mov
ss
add
adc
and
jno
lcall
mov
enter
push
adc
fimuls
cmc
addl
cmp
je
sbb
flds
mov
sbb
adc
stos
dec
ja
loope
lahf
sahf
dec
xchg
push
jnp
pop
scas
fs
icebp
decl
jle
clc
test
add
xchg
test
into
mov
pop
sti
xor
scas
xor
dec
pop
test
icebp
mov
cmp
mov
xchg
hlt
repnz
mov
in
cmc
mov
mov
test
pushf
pop
hlt
cmc
push
and
pop
subb
outsb
hlt
and
inc
adc
xor
fldl
call
xchg
jb
and
pop
popa
pop
push
pop
inc
xchg
and
icebp
pushl
cwtl
push
push
rorl
mov
dec
adc
dec
or
test
fistpll
cmp
dec
std
jo
sub
add
pop
jo
inc
popl
push
mov
inc
fimuls
xchg
andl
clc
incl
outsl
outsl
data16
in
shrl
das
data16
testl
or
adc
lock
mov
pushl
out
fnstcw
jg
mov
mov
lret
gs
dec
inc
test
sbb
xor
insl
negb
pop
dec
mov
movsl
push
aad
lahf
leave
incl
push
mov
sarb
ds
jp
adc
test
sub
or
and
into
xor
dec
xchg
ss
jp
lahf
incl
pop
and
fdivl
scas
xorb
loope
cli
call
inc
xor
push
ror
cmpsl
icebp
testl
aas
fs
jns
rclb
test
movsl
call
loopne
mov
lcall
popf
sub
add
pop
inc
loop
nop
cltd
or
fs
or
jne
sbb
aam
fwait
jle
pop
xchg
inc
pop
mov
outsl
xchg
jno
sbb
mov
jne
cmp
dec
push
es
xchg
les
xchg
mov
icebp
adc
pop
dec
stos
pushl
mov
inc
add
ss
xchg
movsb
pop
cli
inc
cld
jg
repnz
call
pop
adc
out
mov
inc
popa
add
pop
adc
jne
push
nop
add
ret
pop
add
inc
cmp
lods
push
lahf
rorb
mov
mov
jmp
enter
inc
mov
pop
scas
push
adc
dec
inc
sub
and
ficoms
add
inc
test
subl
mov
mov
lcall
cmp
fnstsw
shr
pop
test
inc
adc
fs
inc
out
ret
scas
cmp
cmp
lahf
notl
push
mov
loop
pushl
movsl
inc
ljmp
aad
push
jbe
sub
xor
cmp
adc
imul
dec
sub
fcmovnbe
mov
adc
jl
and
inc
mov
push
mov
ret
add
mov
jnp
movsl
sbb
inc
sahf
push
inc
shlb
pop
out
push
push
lea
lods
icebp
sub
jp
xchg
push
shlb
mov
aaa
fidivrs
sti
inc
lods
lock
rcrl
sarl
sarb
es
mov
dec
sbb
stos
int3
bound
dec
outsl
mov
cmp
mov
das
in
push
pop
repnz
mov
push
lods
inc
xchg
mov
push
and
adc
idivb
adc
jg
lock
fisttps
jne
mov
orl
cli
dec
nop
cwtl
or
cmp
out
stos
and
sbb
aam
adc
stc
dec
in
sub
in
pop
inc
ljmp
xchg
cmc
mov
pop
jo,pn
daa
dec
lcall
sub
orl
mov
outsl
mov
sub
inc
mov
inc
ds
scas
data16
in
js
or
cmpl
mov
ss
cmp
sub
pop
ljmp
pop
repz
lds
xchg
aas
addb
mov
jnp
jle
jno
pop
test
push
imul
mov
arpl
lds
push
andb
pop
pop
adc
push
pop
cmpsb
pop
shlb
xor
lods
fs
pop
xor
ret
sbb
outsb
jge
adc
sub
fists
imul
jne
inc
sbb
push
fcomp
push
insl
push
nop
pop
sub
adc
shlb
push
mov
mov
rcrb
xchg
mov
push
or
dec
iret
dec
push
push
add
out
jne
movsl
out
jecxz
mov
je
fldl
pop
or
mov
cs
in
mov
and
mov
jg
pop
inc
mov
mov
mov
mov
lods
push
jbe
or
cld
xchg
dec
test
jns
es
aas
adc
bound
fadds
and
in
sub
dec
add
inc
mov
mov
cld
mov
incl
or
stc
or
sahf
paddw
clc
or
and
mov
push
shrb
clc
fbstp
movsb
and
lcall
faddl
insb
std
call
fwait
cwtl
xchg
xchg
pop
add
ja
sub
dec
pop
ja
add
scas
fists
outsl
outsl
jmp
inc
or
sub
imul
loope
iret
cmc
xchg
pop
add
les
mov
data16
rcr
xchg
and
or
or
rcrb
ds
das
mov
sbb
pushf
in
dec
pop
add
adc
shll
jge
data16
outsb
xor
jne
das
xchg
imul
insl
test
mov
aas
sbb
fwait
lahf
add
mov
sbb
mov
pop
orl
incb
pop
mov
fsubrs
loop
cmp
filds
cmp
icebp
sti
test
mov
xor
lcall
mov
negb
lea
fisttpl
and
and
mov
mov
callw
pop
sbb
js
push
faddl
or
or
loopne
jle
sub
call
mov
xchg
pop
mov
lahf
xor
inc
outsb
sub
or
fldenv
std
and
popa
adc
xchg
fsubrs
xchg
pop
cs
clc
inc
fiadds
cmpsb
add
dec
inc
movsl
andb
jecxz
std
sahf
inc
and
dec
sub
push
aaa
adc
fsts
push
fnsave
and
out
or
fmul
add
mov
jo
xchg
or
mov
das
mov
adc
dec
jmp
cmc
insl
adc
out
std
lret
push
jl
mov
mov
faddp
sbb
push
sub
movsb
hlt
mov
add
pop
stos
inc
adc
mov
mov
repnz
sub
push
popf
xlat
and
sub
inc
dec
mov
icebp
ss
ljmp
out
add
xor
roll
ja
jb
adc
pop
fidivl
adc
cltd
int3
lds
push
dec
call
mov
inc
sub
adc
pop
ret
or
pop
or
push
movl
insl
mov
notb
dec
sub
add
inc
rclb
sarb
jo
add
inc
push
push
sub
mov
adc
mov
outsl
dec
loope
mov
into
sbb
outsl
in
in
je
in
jb
inc
mov
rclb
scas
in
mov
divl
xor
adc
sbb
lret
jne
jle
adc
ret
pop
fwait
and
mov
and
push
aaa
bound
test
push
movsb
jmp
jbe
push
xchg
cld
loop
clc
dec
jnp
sti
cmp
outsb
inc
test
add
add
pop
dec
pop
lds
std
or
cmp
adc
ss
popf
and
in
movsl
mov
pop
mov
ret
mov
das
jnp
adc
and
scas
sbb
xchg
pushf
test
adc
lock
mov
and
pop
push
jo
fsubrp
sub
test
push
adc
push
xor
test
push
push
add
pop
dec
sarl
loopne
sub
loopne
icebp
dec
cltd
pop
lds
xchg
mov
fsubr
inc
and
mov
pop
xor
xor
inc
and
test
jno
sub
adc
add
scas
ret
cmpsb
inc
xor
call
adc
add
aam
aam
lahf
orb
flds
das
push
ficoml
dec
iret
fldl
add
addl
add
cli
push
cmpl
sbb
lds
fucom
mov
push
xor
bound
jmp
lds
jne
add
xchg
lods
movsb
stos
jge
inc
or
xor
scas
sbb
add
mov
rcr
and
out
adc
add
pop
jnp
aam
add
adc
mov
stos
mov
addr16
or
adc
fisubrl
jecxz
mov
scas
icebp
dec
mov
and
jecxz
test
sub
hlt
or
add
dec
inc
mov
aad
js
addb
xor
mov
xorb
stos
pop
lret
adc
cmc
mov
push
add
add
pop
imul
add
cmp
jne
and
push
or
inc
dec
js
push
add
and
xchg
aam
aas
or
retw
or
andb
and
add
sub
ljmp
jb
mov
add
adc
dec
outsb
sub
mov
push
lds
mov
test
les
xor
xchg
add
lcall
add
sub
pop
sub
mov
aam
push
and
adc
mov
inc
mov
in
aad
lret
inc
fsubrs
and
inc
jne
or
sarb
sub
fld
push
lock
sub
out
call
cmp
pop
test
jbe
faddl
jmp
mov
sbb
and
stos
cmp
fists
gs
cmp
jbe
test
xchg
arpl
sub
call
add
loopne
sbb
loop
jp
add
and
popf
sbb
and
push
mov
scas
stos
push
and
and
push
test
mov
inc
or
and
or
adc
or
rol
jo
stos
or
xchg
push
stos
fdivs
popa
dec
jg
or
std
out
in
mov
or
test
movsb
or
pop
pop
push
in
mov
xor
inc
dec
outsl
stos
add
inc
add
xorb
daa
add
jg
cmc
jmp
or
cmc
adc
or
dec
jo
sbb
movb
push
int3
cwtl
andb
pusha
xor
popa
push
xor
sub
icebp
sub
stos
jp
add
pop
or
inc
outsl
pop
les
hlt
or
xor
inc
add
pop
loope
enter
and
jmp
jl
rolb
out
cmpsl
ljmp
ret
cmp
fs
stos
mov
cmpl
or
insl
dec
test
inc
inc
xchg
stos
ret
xlat
push
test
xchg
clc
fimuls
sub
ja
or
push
outsl
movsl
insb
add
jo
mov
mov
int3
push
pop
incb
and
fdivrs
or
pop
push
sbb
xorb
cmpsb
pop
dec
hlt
adc
mov
sti
and
or
std
mov
stc
fs
call
dec
adc
push
shlb
fwait
stc
pop
cld
les
lahf
andnps
adc
xchg
mov
fucomip
xchg
jns
aas
jns
inc
scas
outsl
icebp
and
rcr
sub
push
jno
test
mov
jno
or
mov
aam
call
jns
xor
icebp
fcomip
jg
andb
sahf
ret
xor
xchg
das
adc
enter
add
negb
pusha
scas
lahf
pop
mov
std
inc
loop
loop
sbb
xchg
sti
pop
shll
sbb
ljmp
sub
popa
sbb
xchg
push
lcall
loope
xor
inc
das
xchg
lret
out
fistpll
aam
mov
gs
inc
pop
pop
leave
insl
test
mov
mov
mov
fists
sahf
addr16
lret
les
and
insb
inc
fistpll
dec
cs
push
rcll
in
push
cmp
fs
push
mov
iret
push
jbe
jg
aaa
push
and
or
jg
jo
push
inc
loopne
std
jg
shrl
lcall
es
or
mov
xchg
adc
into
mov
ret
rcll
xchg
aad
ljmp
mov
ja
aaa
pop
cmp
fiaddl
cld
pop
loop
or
cld
int
mov
adc
add
cmp
and
mov
fsubrl
add
dec
lret
aam
imul
out
add
cld
push
adc
sbb
dec
faddl
faddl
mov
push
push
lcall
mov
sub
ret
pop
and
insb
pop
clc
push
xchg
jp
int3
cmc
or
cld
sti
cmc
jne,pn
lcall
push
pushf
inc
es
mov
add
add
clc
pop
adc
and
addb
mov
xor
cs
imul
shr
and
test
test
icebp
in
cmpl
cltd
or
and
or
and
dec
mov
or
sbb
scas
xlat
mov
mov
fdivrl
or
cld
lret
mov
test
pop
inc
sub
add
jmp
scas
jge
inc
movsl
push
mov
add
fnsave
lods
add
mov
fdivl
xor
scas
mov
dec
adc
cmpsl
or
in
pop
push
insb
imul
or
push
das
dec
add
fdiv
fisubs
aaa
cmp
cli
mov
inc
cmc
sbb
imul
pusha
mov
nop
sbb
mov
xchg
pop
pop
aas
xor
and
adc
lock
sbb
pop
rolb
into
and
mov
push
les
data16
in
mov
sub
rclb
inc
inc
loopne
push
ret
sbb
pusha
mov
cmpl
sub
mov
and
xchg
add
shl
fisttpl
cmp
adcb
das
xor
cwtl
mov
lret
daa
out
fldcw
mov
fiadds
pop
call
xor
adc
dec
xor
addb
fdivrs
clc
repnz
fs
sub
in
push
push
push
cmp
pop
les
mov
dec
cmp
add
int
mov
dec
aad
andl
subl
xlat
mov
into
add
sub
stos
testb
adc
and
lods
daa
and
dec
sub
fisttpl
and
jbe
ds
add
mov
es
dec
sbbl
xor
push
fdivl
out
xor
jnp
cmp
jle
inc
popf
or
hlt
sahf
pop
mov
test
icebp
stos
pushf
mov
aas
scas
xchg
sub
cmp
xor
xor
ds
mov
mov
lcall
mov
sub
aad
cmpsb
or
addr16
fcomp
xchg
mov
mov
hlt
or
push
push
mov
xchg
loope
adc
dec
push
mov
test
std
ja
sub
mov
orb
inc
cmp
sbb
out
push
push
pop
cmp
imul
addl
xchg
add
mov
andl
repz
std
and
outsl
xchg
mov
cld
jo
or
add
popf
xor
add
jne
pushf
xchg
xor
int
ret
jle
push
cmp
push
mov
clc
data16
jecxz
xor
ljmp
adc
cmpsl
cmp
dec
adc
pop
inc
lahf
je
out
sbb
cltd
mov
inc
xchg
pop
inc
popl
push
shlb
sar
sub
sbb
and
and
sbb
inc
add
cmp
add
push
sub
pop
in
es
fiadds
mov
scas
mov
sbb
add
xor
push
adc
insb
cmp
cli
cli
pop
negb
xchg
ds
loop
leave
adc
cwtl
add
lods
cmc
outsl
xor
ret
mov
inc
jb
notl
repz
sbb
scas
and
adcb
and
hlt
add
cmp
mov
clc
pop
jp
xchg
cs
adc
add
mov
flds
xchg
test
imul
push
inc
sbb
int3
std
mov
mov
jg
push
stc
jge
aad
shlb
roll
inc
mov
add
cmp
add
lock
test
or
mov
and
leave
push
push
lahf
imul
lcall
in
add
lcall
push
ror
repz
imull
hlt
test
push
mov
jo
insl
add
fstpl
loope
test
movsl
push
dec
or
mov
insl
daa
stos
fwait
bound
aam
frstor
sti
or
orl
and
pop
aaa
repnz
outsb
xchg
rolb
cwtl
push
out
decl
imul
icebp
pop
dec
mov
add
mov
mov
add
cs
sbb
sbb
enter
lret
or
fisttpll
mov
mov
incl
jge
les
or
call
pop
daa
mov
les
jmp
pop
imul
add
xchg
mov
sub
pop
mov
or
fsubs
jecxz
xor
pushl
xchg
inc
push
lods
sbb
inc
rol
daa
js
xchg
sbb
pop
xor
enter
and
mov
int3
popa
daa
fdivr
lds
stos
jae
jbe
mov
jle
push
sbb
and
lcall
and
mov
mov
xor
and
stos
mov
subl
clc
ljmp
add
and
and
push
dec
mov
popl
sbb
mov
push
jno
inc
and
aad
sbb
mov
or
pop
inc
cld
add
imul
push
fdivrs
iret
lds
cltd
push
rorb
cli
out
sbb
add
pushl
adc
bound
push
imul
shlb
out
xchg
mov
ljmp
xorb
sub
int
mov
iret
pop
int3
leave
mov
cltd
cli
outsl
cmp
xor
dec
pop
sub
fstpt
fisttps
rdpmc
and
iret
mov
aas
enter
aas
inc
fnsave
xor
xor
cmp
cmc
cld
dec
fstps
jmp
mov
ja
aam
inc
xor
clc
cmp
xor
leave
lret
push
pop
mov
add
inc
ss
popf
nop
std
test
sub
rorb
mov
insb
jle
dec
ja
inc
push
inc
lds
cmc
cmpsl
push
cld
jg
mov
mov
cmpsb
sahf
pop
cmp
imul
insb
push
lahf
daa
jne
movsb
fidivrl
add
cmc
inc
xor
jecxz
xchg
or
jno
movsl
push
shll
jbe
mov
dec
or
pop
mov
cmp
add
push
mov
xor
lock
outsl
js
pop
aad
mov
pop
and
rol
cmpsb
ret
loop
xchg
aad
call
incl
and
and
sbb
adc
mov
mov
sbb
push
out
leave
fstps
add
xor
in
mov
jae
fsubp
dec
les
adc
add
outsb
xchg
inc
enter
es
mov
and
popf
push
push
inc
aad
cmp
mov
jmp
popf
sub
mov
sub
out
dec
push
push
addl
sbb
aad
test
mov
std
cmpsb
call
outsb
inc
fs
add
sub
mov
popa
cmp
dec
add
iret
or
add
stos
rolb
inc
adc
mov
repnz
dec
into
adc
aam
in
and
dec
dec
mov
add
or
movsb
adcb
call
arpl
sub
xchg
bound
mov
pop
add
movsl
sbb
pop
lds
mov
jmp
loopne
mov
mov
add
push
jge
adc
mov
dec
das
or
xchg
sbb
pop
fldt
test
dec
and
xchg
rorl
ds
and
cmp
sarb
lock
adc
bound
push
gs
js
jno
push
jp
mov
lcall
nop
and
adc
cmp
xor
rclb
add
mov
faddl
sub
addl
les
fstpl
rcll
sbb
cmp
sbb
dec
cwtl
or
add
bound
adc
mov
scas
cld
or
test
popa
mov
jg
ret
inc
adc
mov
fsts
sahf
sub
cmp
cld
ret
sub
cltd
sar
aad
hlt
lds
jle
ss
jne
das
jge
xor
and
sub
adc
sub
cmp
std
outsl
cmpl
fs
fnsave
sub
int
mov
aad
xchg
std
aad
mov
xor
fmulp
adc
jle
push
icebp
mov
push
ror
sub
mov
jl
or
add
xchg
test
mov
mov
jo
nop
jmp
mov
inc
aam
push
clc
dec
xor
xlat
es
shlb
sub
loope
pop
sub
lahf
adc
or
test
inc
mov
stos
and
adc
stos
fsubp
js
or
mov
dec
push
xor
cltd
leave
mov
enter
inc
adc
inc
push
mov
sbb
sub
insb
and
mov
pusha
add
outsb
jp
fwait
popf
mov
lcall
loopne
fwait
ljmp
inc
nop
add
lock
or
call
dec
pushf
cmpsb
mov
mov
or
push
inc
rol
jo
adc
rorb
jbe
and
cmp
rclb
inc
outsb
push
mov
in
and
cmp
dec
shrb
mov
add
es
sbb
dec
xorb
rcrb
dec
das
stos
addl
add
mov
mov
xchg
int
rorb
cltd
and
cmpl
mov
pop
push
cmp
jbe
js
ret
xchg
aas
test
push
jg
jno
push
rcll
jmp
int
sub
xor
das
jns
jb
fstps
ss
mov
mov
dec
jecxz
cwtl
rcrb
inc
cmpsb
pop
sarb
push
int
fwait
adc
test
daa
jecxz
adc
stos
jp
stos
pop
inc
pop
ror
hlt
jnp
or
adc
mov
inc
fistl
or
loopne
mov
ds
arpl
push
add
inc
je
inc
gs
inc
inc
adc
and
js
lret
jne
add
cs
loope
or
mov
andl
jb
shrb
repz
pop
test
repnz
xor
dec
jl
sbb
fidivrl
pop
mov
out
aam
jecxz
add
lcall
in
pusha
push
pop
mov
std
popa
data16
fbstp
and
lods
stos
daa
sub
add
inc
push
in
pop
jge
or
xor
rorb
pop
xor
xor
mov
adc
sub
int
xor
jl
push
or
adc
mov
js
fimuls
cltd
cmpsb
insl
xor
and
cmp
jb
lock
add
neg
mov
ret
xor
jns
jb
push
jne
pop
ret
inc
sar
nop
and
and
and
flds
dec
add
dec
mov
jbe
adc
dec
lock
ret
add
adc
xor
sahf
fidivs
repnz
and
adc
add
xor
mov
dec
adc
andl
mov
xchg
push
into
pop
mov
int
push
fbld
adc
sbb
jp
js
and
dec
neg
adc
mov
lret
xchg
inc
jb
inc
and
lcall
int3
add
mov
jge
repnz
inc
daa
cmp
xor
xchg
or
dec
cmp
xchg
push
daa
mov
push
cmovbe
cmp
addl
lcall
lock
insl
loop
das
ljmp
adc
or
rorb
xchg
je
popf
adc
iret
dec
cmp
jnp
in
cs
mov
fidivrl
lods
adc
aam
push
ljmp
stos
lcall
add
les
jg
xchg
add
inc
das
subb
push
jbe
andb
bound
addb
stos
fiadds
ficoms
in
pop
adc
xorb
into
sub
test
pop
enter
inc
xchg
dec
fmuls
das
sbb
bound
add
adc
mov
les
mov
push
pop
mov
test
add
adc
daa
push
mov
or
xor
inc
mov
fnsave
and
out
imul
mov
bound
mov
push
ret
aas
int
sbb
jp
outsl
mov
inc
add
dec
fildll
out
adcb
insl
pop
out
pop
sub
cmp
push
stc
fwait
in
inc
test
cmp
pop
add
je
divb
dec
push
shlb
jge
mov
dec
inc
sbb
push
xor
mov
mov
hlt
loopne
test
jae
arpl
lock
push
cmc
xor
fs
test
sbbl
add
inc
pop
push
data16
fistps
je
add
mov
push
mov
mov
dec
add
push
lret
imul
and
jmp
loop
cmp
daa
inc
shlb
sbb
sarb
xchg
inc
out
insl
dec
push
or
cmc
and
dec
test
jne
pop
cltd
std
pop
jno
add
roll
inc
aas
rcll
inc
xor
dec
xchg
and
xchg
sti
adc
scas
and
rorl
sub
pop
lods
push
rcl
inc
out
add
add
mov
aaa
and
aam
mov
add
sahf
sub
jne
or
loopne
gs
mov
in
adc
data16
or
mov
or
cltd
into
and
inc
aam
pop
jb
xor
sahf
lds
dec
jmp
and
adc
cmc
fsubrs
in
jnp
mov
movsl
cmp
xchg
push
push
movsl
scas
gs
mov
jmp
lret
movsb
mov
xor
mov
cltd
inc
mov
adc
lcall
std
cld
mov
leave
scas
add
add
ljmp
mov
add
mov
add
xchg
cld
aad
jbe
mov
inc
nop
sub
pop
push
push
push
xor
enter
push
xor
call
lea
adc
xchg
and
in
xor
hlt
add
shlb
out
test
int
and
cmp
xorb
fidivrl
lock
cmp
das
aam
ljmp
loopne
and
into
add
mov
arpl
aaa
mov
push
rolb
mov
xor
ja
loop
mov
lds
mov
add
adc
out
sub
add
clc
pop
dec
or
stos
pusha
data16
cmc
sbb
inc
cs
stos
push
in
jmp
fwait
cltd
add
xor
test
ja
pop
push
stc
icebp
sbb
dec
push
int
inc
push
jb
data16
adc
adc
rolb
pop
mov
or
out
inc
xor
orb
and
orb
js
pop
adc
and
arpl
inc
rcll
les
cmp
push
inc
or
add
push
mov
jne
fsubrp
xor
or
stos
mov
inc
hlt
inc
and
lock
and
icebp
sbb
cmp
imul
es
les
lahf
mov
add
cli
dec
int
pop
add
mov
ljmp
stos
fcmovnb
xor
loopne
add
adc
mov
cwtl
rclb
mov
pop
xor
jl
dec
movw
pop
enter
shlb
mov
in
or
or
or
adc
adc
add
es
das
adcb
int3
es
incl
test
and
push
fiaddl
aad
andb
or
fmul
fwait
loopne
push
lahf
f2xm1
mov
add
mov
jno
push
mov
sub
xor
cmp
addb
inc
sarl
push
incb
imull
pop
push
sub
jp
add
mov
add
test
inc
test
push
arpl
cmp
mov
cwtl
in
sbb
bound
sbb
std
lock
gs
push
mov
and
xchg
jno
sbb
mov
fcompl
xchg
add
pushf
sub
out
mov
in
cmp
adc
xor
gs
cwtl
xor
cmp
mov
fnstenv
js
mov
fidivl
push
pop
and
cmp
ss
xor
mov
jne
test
dec
push
adc
xchg
push
mov
repz
mov
or
cmp
sbb
sub
inc
out
jmp
jmp
xorl
add
xorb
sub
loopne
pop
adcb
jecxz
jmp
mov
and
xor
movsbl
push
loope
pop
xor
sbb
and
cmp
cmp
out
ss
mov
push
xchg
push
call
add
das
add
push
mov
lds
pop
cmp
dec
insl
pop
ds
mov
xlat
cwtl
js
sbbb
out
addb
enter
or
dec
inc
int
ficoml
fucomip
inc
mov
sub
shr
dec
fcoms
enterw
cmpl
mov
or
inc
add
loop
and
xor
fadd
jne
mov
pop
inc
dec
lret
add
add
jl
mov
or
add
je
xchg
add
das
adc
ret
inc
mov
ds
andb
sbb
flds
mov
sbb
outsl
sahf
lods
jp
lods
adc
xor
and
fiaddl
pop
into
stos
in
pop
mov
int3
nop
mov
shll
push
and
js
or
ret
mov
add
mov
dec
repz
mov
inc
sbb
nop
call
push
icebp
fsubrl
les
push
xchg
push
lret
repnz
hlt
lret
stos
pop
adc
test
loopne
out
dec
adcb
test
in
jl
lock
sub
ficoms
dec
fs
lcall
cwtl
icebp
pop
pop
push
xchg
addb
fcoms
pop
ja
in
stos
and
sub
lcall
add
insl
lods
sbb
test
xor
sub
add
mov
sbb
lret
fsub
cmp
inc
leave
sbb
and
testl
mov
iret
inc
pop
sub
cmp
rclb
hlt
or
xor
xchg
je
sbb
lds
and
fdivrl
adcb
adc
ss
push
fidivrl
fbstp
das
pop
or
adc
pop
test
xchg
inc
inc
add
jp
dec
mov
daa
mov
insb
add
adc
clc
and
push
add
dec
jno
movsl
cwtl
nop
sub
or
push
adc
mov
hlt
lcall
dec
adc
mov
push
jno
mov
pop
add
jg
aaa
ljmp
pop
ds
stos
incl
cli
pop
push
jge
xchg
add
movsl
add
inc
mov
fsubr
stos
sub
push
sub
fiaddl
mov
mov
xchg
sub
dec
mov
add
ljmp
pusha
xchg
fdivrl
add
loop
push
mov
out
add
repz
iret
add
roll
lea
xchg
push
incl
fistpll
pop
xchg
adc
mov
test
mov
lods
adc
pop
jl
fildll
popa
or
cmp
fistpl
cmp
and
or
mov
sbb
ret
mov
pop
dec
ja
cmp
push
or
scas
push
and
cmpsb
pushf
clc
dec
rcrb
xor
imul
fisubrl
and
inc
adc
xor
sbb
xor
jbe
dec
sub
int3
in
xor
mov
jns
dec
jbe
out
pop
inc
int
sar
xor
imul
data16
add
mov
add
inc
and
cmc
fcomps
decl
imulb
test
mov
pushf
jp
inc
jbe
repnz
repnz
and
jns
jbe
push
aad
std
incl
call
jmp
jle
add
cmp
aaa
jg
push
add
rclb
insl
xchg
or
cltd
mov
mov
sub
mov
adc
sub
cmp
sbb
jbe
mov
inc
cmp
call
stc
dec
jne
push
popf
ss
in
inc
xchg
cmp
mov
mov
lods
nop
loopne
movl
push
ss
adc
or
shll
xor
sub
ljmp
add
pushf
iret
loop
inc
int3
shl
shll
lret
and
mov
lret
or
cli
lods
pop
jne
loop
xor
cmp
jg
xchg
add
lea
add
loope
push
add
sbb
cmpsl
and
inc
adc
test
hlt
cmp
stc
xor
add
cld
mov
push
ds
scas
add
les
add
addb
sti
decl
call
and
in
jle
adc
add
jecxz
jge
mov
adc
test
popa
push
pop
daa
inc
mov
dec
leave
lds
xchg
inc
dec
outsb
aad
mov
roll
orb
xchg
mov
sar
mov
and
clc
sbb
push
adc
cli
in
enter
in
js
mov
out
add
push
jmp
loope
push
cmp
xchg
jns
inc
jbe
xchg
jecxz
mov
pop
add
pop
mov
xchg
cmp
add
xchg
mov
mov
add
test
and
mov
xchg
adc
pusha
inc
js,pt
jne
stc
add
testb
notl
sbb
loop
shrb
sbb
fstps
or
sahf
test
insb
mov
and
jg
in
add
frstor
add
test
xor
push
xor
jg
dec
imul
jecxz
stos
rorb
and
pop
add
andb
adc
out
decb
mov
mov
pop
mov
sbb
aas
cli
fcomip
fists
orb
push
shrb
ficompl
mov
pop
sbb
sbb
clc
mov
push
xchg
sub
push
sub
rolb
std
jg
aam
inc
push
pushf
ffreep
adc
roll
loope
icebp
adc
or
pushf
push
fsubr
enter
add
mov
mov
add
add
sbb
cli
data16
loop
out
popf
pop
popf
mov
inc
inc
mov
popl
and
lock
repz
push
and
orl
rcr
mov
packsswb
adcl
or
and
or
mov
push
cmp
insl
or
add
add
sub
mov
mov
jns
sbb
jb
pusha
mov
or
add
jne
outsl
shll
fstpt
or
in
pop
add
jnp
pop
sbb
inc
and
dec
rorl
fwait
or
xchg
andl
or
or
movsb
fisttps
cmp
test
sub
outsl
mov
imul
adc
and
icebp
mov
inc
jb
ds
add
sub
adc
add
push
loopne
andb
ficoms
je
and
and
pop
cmpl
frstor
stos
loop
add
push
sub
loopne
pop
imul
cwtl
and
add
imul
dec
jg
push
es
out
hlt
sbb
fdivs
push
faddl
aad
and
and
add
fisttps
push
lea
adc
add
add
movsl
aad
aas
mov
push
pop
push
and
and
ret
push
or
scas
ja
sbb
out
les
shrb
push
lcall
clc
pop
insb
mov
add
mov
pop
inc
pushf
addb
test
or
ret
mov
popf
in
cld
dec
stos
repz
hlt
and
pop
xchg
push
rclb
mov
push
iret
push
cmp
decl
rcrl
bound
push
sub
cli
and
je
sub
cmp
sbb
stos
pop
jg
add
sub
icebp
aas
std
aaa
adc
rcll
sbb
loop
mov
insl
add
sbb
inc
cltd
sub
mov
in
ss
inc
mov
dec
shrl
adc
pushl
push
sti
jae
shll
and
imul
fdivr
adc
nop
int3
cmpsb
dec
inc
outsb
xor
adc
add
mov
adc
aam
jecxz
fnstenv
decl
incb
or
cmp
subb
mov
xor
cmc
push
mov
lods
pop
pop
or
outsl
rolb
loop
push
dec
stc
xchg
add
adc
xlat
mov
lcall
mov
dec
into
into
sbb
sub
add
add
xchg
add
in
or
stos
sbb
xor
mov
mov
repz
test
or
sub
ret
adc
push
jo
dec
das
xor
icebp
inc
lock
repz
jbe
mov
repnz
rclb
pop
mov
adc
pop
jbe
enter
mov
les
sbb
ret
add
add
adcb
add
inc
dec
movsl
mov
roll
call
xchg
mov
das
mov
icebp
fisttps
dec
movsb
cli
mov
mov
cmp
jb
adc
xchg
cs
shlb
xor
or
push
push
or
pop
inc
or
rolb
xor
subb
jg
inc
sbb
and
add
xor
mov
or
and
jg
ret
jg
sub
insl
sbb
nop
push
test
mov
mov
rolb
lods
repz
lahf
adc
rcrl
and
sub
lds
rorw
push
ret
sbb
inc
sub
inc
aas
adc
and
add
out
nop
ja
cld
jg
fisubl
xor
jmp
dec
xor
push
and
jae
jl
add
add
jo
jp
sub
decl
xchg
mov
daa
pusha
pop
vmwrite
mov
les
adc
xlat
fwait
or
fadds
xchg
sub
inc
daa
adc
cmpsl
inc
sbb
add
dec
fucomi
xchg
ljmp
inc
je
mov
mov
add
ret
inc
mov
icebp
xor
lock
jno
es
mov
insl
sbb
clc
pop
add
xchg
mov
cmpsl
jne
mov
push
add
xchg
pusha
lret
addr16
xchg
xorl
scas
imul
lret
in
in
lock
out
sarb
mov
or
ret
push
xchg
and
loopne
and
outsb
mov
push
xor
orb
mov
into
std
add
and
rorb
or
pop
popa
ret
or
xor
hlt
sub
cmpsb
mov
inc
ja
pop
push
pop
add
cmp
and
popa
jecxz
leave
pop
pop
push
inc
daa
jmp
cmp
sub
xor
test
inc
mov
mov
fsubr
adc
aas
mov
jnp
and
mov
xchg
pop
sahf
psrld
rcrb
mov
dec
fbstp
jge
jl
enter
xor
add
dec
sbb
or
jno
add
pop
imull
clc
jecxz
rcl
adc
add
pop
pop
incl
ljmp
into
mov
call
mov
stc
iret
sbb
inc
add
lea
lcall
dec
adc
jo
fcoml
test
or
and
int3
sbb
adc
cmp
scas
sbbb
push
mov
icebp
mov
mov
sbb
or
push
add
scas
adc
aas
les
jb
fistps
mov
mov
sub
add
adcl
pop
popf
mov
cld
sbb
test
mov
push
add
out
lods
jle
and
cld
inc
mulb
mov
mov
fs
popa
jmp
notl
pop
ljmp
movntq
fcmovnb
lret
out
inc
add
cmp
cmc
les
call
jb
icebp
mov
mov
loop
mov
stos
mov
loope
xor
sub
pop
sbb
loop
das
fildl
sbb
inc
push
int
out
jmp
cmp
lret
loope
push
addr16
lcall
sti
into
mov
pop
dec
dec
adc
in
outsb
cli
lock
loopne
mov
mov
xlat
xchg
test
insb
incl
popf
shrb
push
lret
testl
cmp
jnp
insl
stos
add
inc
pop
in
push
jo
pusha
scas
cmp
aaa
mov
lea
lcall
icebp
repz
mov
arpl
push
outsb
xchg
cli
xchg
xor
mov
jbe
sub
movsl
mov
andb
jmp
cli
stos
pop
sub
dec
leave
mov
out
add
aad
or
mov
fbld
out
push
clc
and
lds
fcmovne
movsb
add
xchg
cmp
pop
push
mov
push
shl
pop
add
mov
pop
jl
das
icebp
push
jl
jbe
push
xchg
inc
inc
pop
push
mov
int3
das
inc
fcmovnu
aaa
add
fldenv
jle
jne
dec
lret
mov
imul
cmp
and
insb
lds
out
es
mov
lcall
dec
sub
mov
pop
cmp
mov
jne
inc
scas
mov
inc
lock
andb
out
jns
int
fisubrl
adc
dec
bound
jl
loope
dec
loopne
ret
out
pop
rorl
popa
imul
hlt
mov
shll
cmp
push
hlt
pop
mov
rclb
sub
mov
jl
mov
adc
jmp
inc
xchg
pop
inc
push
fsubrl
jp
push
mov
sbb
inc
cmpb
xchg
call
ds
add
inc
xchg
sbb
sbb
push
outsl
cmp
cld
inc
lret
adc
shrb
inc
mov
add
and
fmul
xchg
or
or
fcmovne
insl
push
sub
shl
pop
repnz
mov
loope
and
pusha
or
stos
dec
cld
or
or
inc
or
stos
push
call
fdivrl
lds
ljmp
push
mov
ret
fsubl
lods
pop
mov
fiaddl
sbb
in
stc
sub
clc
push
aad
mov
and
pusha
adc
das
ss
xor
push
mov
pusha
ftst
into
std
lods
jo
fwait
sub
dec
add
cltd
mov
cld
jae
sbb
xor
pop
popa
enter
pushf
push
adcl
adcb
sbb
test
js
adc
dec
stos
into
xor
cld
dec
adc
inc
dec
dec
jne
sub
ror
add
and
xor
rcr
add
loope
mov
roll
fdivs
cmovne
das
jns
je
push
push
adc
mov
or
clc
lahf
int
lret
repnz
sbb
ljmp
mov
jb
outsb
and
push
adc
loop
js
lahf
cmp
movsb
cltd
dec
sbb
and
jmp
aam
xchg
cmp
fwait
clts
mov
lcall
or
insb
jne
and
mov
popa
shl
cmpsb
or
andps
enter
jae
pusha
sbb
popf
daa
lahf
cld
dec
pop
push
push
mov
call
subl
sbb
std
addl
lds
pushf
cmp
jp
mov
orl
push
pop
loopne
stos
push
mov
mov
cld
xorl
or
cmp
cli
mov
aam
test
orb
mov
mov
or
inc
add
fsubrl
ljmp
test
mov
inc
lret
aaa
mov
or
out
loope
push
push
fiaddl
lret
dec
adc
mov
push
sbb
add
ficoms
cs
enter
sub
xlat
or
clc
pop
inc
mov
cmp
xchg
js
sbbb
test
and
mov
push
je
and
int
add
pop
and
js
pop
push
sti
jl
arpl
popf
mov
lds
pop
rorl
outsb
mov
loop
ror
mov
pop
and
push
and
les
sbb
lods
cmp
data16
jp
pop
jo
movsl
into
aam
push
mov
dec
das
and
inc
push
pusha
fstpt
sub
jns
cmp
add
mov
cmp
jge
pop
or
fstp
jo
pop
or
daa
mull
mov
bound
decl
mov
pop
negl
mov
mov
in
push
aam
loope
and
lock
lods
fsubrs
popa
or
push
inc
adc
inc
cli
xlat
dec
xor
mov
std
mov
inc
mov
xchg
push
pop
icebp
ds
add
jecxz
stos
bound
pushf
sbb
clc
and
rorb
pop
cmp
outsb
mov
in
pop
xchg
mov
cld
outsl
sub
adc
push
inc
jne
rcl
lds
mov
dec
dec
nop
mov
add
mov
mov
leave
mov
in
outsb
pusha
mov
add
and
inc
incb
jae
fisttpl
mov
xchg
adc
cmp
lock
cltd
or
ljmp
xchg
add
fwait
dec
dec
pop
shrb
ljmp
jno
mov
ds
sbb
sti
inc
jo
xlat
movsl
sub
and
sub
add
out
and
mov
mov
inc
fdivs
dec
add
inc
jge
fcom
pop
and
rcrb
push
lock
outsl
pop
pop
xchg
fcom
lods
add
and
dec
push
mov
rcrb
adc
cvtdq2ps
mov
imul
dec
out
mov
or
and
pusha
adc
add
mov
add
adc
inc
xchg
and
mov
dec
mov
xchg
and
je
dec
leave
stos
and
pop
clc
push
iret
sbb
add
or
adc
ja
sub
mov
fmull
push
shll
adc
inc
test
push
dec
aad
push
out
or
pop
outsb
lods
lock
or
movb
lret
or
ja
js
ja
add
xor
sbb
xchg
cld
xor
mov
fldl
mov
sbb
mov
fisttps
xor
mov
pop
cmc
push
lods
mov
rorb
shrb
sub
lock
sbb
xor
add
jae
jae
rcll
subl
push
in
dec
gs
add
shrb
xor
or
mov
jle
loop
aad
sub
mov
std
loop
adc
insl
xchg
mov
xor
dec
fcomps
xlat
adc
cmpsb
jp
adc
add
les
xor
in
xor
sbb
or
and
mov
pusha
add
pushf
and
into
clc
shl
adc
repnz
shl
xor
jbe
cmp
mov
sbb
loopne
ss
ljmp
or
push
cld
and
call
int3
add
adc
cltd
jb
add
jno
enter
adc
aam
mov
or
xchg
mov
aad
sbb
out
fnstcw
pop
cmp
hlt
dec
cmp
or
lock
js
sbb
in
daa
call
push
xor
xchg
sub
cmp
pop
sbb
xchg
add
je
movsl
addb
xchg
lods
add
jno
sbb
mov
nop
push
out
cmp
xor
mov
add
cmpsb
or
lock
out
cltd
pop
fbstp
lock
jmp
in
cmp
cmp
shlb
nop
stc
add
jo
adc
stos
jbe
inc
lods
scas
das
push
sarl
cli
sahf
mov
xchg
loopne
sbb
mov
xor
shl
pop
push
mov
js
mov
jnp
mov
dec
sbb
xchg
and
sub
arpl
test
clc
loop,pn
sbb
add
jg
loopne
inc
inc
mov
loopne
cmp
mov
or
ficomps
pop
sti
adc
sbb
xchg
call
mov
mov
push
in
inc
lds
sub
fs
test
fsub
cmc
adc
xchg
mov
ss
sti
out
mov
push
lods
inc
mov
mov
insl
lret
or
xlat
add
mov
jg
fbstp
jmp
pusha
sarl
and
ffreep
adcl
mov
or
xor
xchg
dec
sub
fildl
stos
mov
pop
inc
dec
cltd
in
icebp
loopne
push
xor
push
ret
mov
inc
pushl
inc
push
add
daa
cmpsl
and
bswap
push
stos
test
stos
les
pushf
out
inc
add
cmp
icebp
shlb
mov
hlt
and
add
fistpl
rorl
mov
icebp
mov
fidivs
inc
cld
jl
add
cld
aaa
stc
out
xor
shlb
pop
mov
or
add
add
in
push
sub
insl
mov
ret
push
adcb
lret
mov
cld
fildll
add
mov
adc
xchg
ljmp
es
or
icebp
mov
add
mov
push
push
or
push
ljmp
adc
push
or
adc
outsl
adc
mov
sbb
xor
or
push
dec
adc
inc
add
ret
push
sbb
push
or
inc
das
adc
adc
or
xor
fmull
add
mov
mov
inc
mov
lret
cmpsb
fwait
mov
dec
movsl
inc
xchg
fiaddl
pushf
fdiv
xor
loopne
lods
adc
or
inc
cld
outsb
add
inc
lahf
pusha
adc
fldl
adc
cmpb
adc
shlb
sbb
jbe
xchg
adc
mov
js
sub
inc
insb
push
movsl
sub
sub
xor
int3
mov
mov
xchg
test
push
pop
mov
je
sbb
aad
or
mov
push
dec
call
push
inc
ret
add
xor
push
cmpl
mov
cld
sbb
jmp
clc
jle
popl
mov
lock
out
inc
inc
mov
add
cmp
pop
adc
jno
in
dec
insb
cld
insl
scas
dec
xchg
mov
add
andb
dec
sbb
outsl
push
xor
or
imul
psrld
clc
cmp
push
mov
mov
sbb
adc
dec
cmp
inc
scas
jne
mov
outsb
adc
lods
add
mov
pop
nop
into
adc
jp
lock
and
add
cmp
jno
xchg
repnz
inc
inc
xorb
add
test
int
shlb
dec
in
sub
inc
pusha
les
pop
inc
cmpsb
mov
lds
cmpsb
lea
js
add
pop
ljmp
pop
clc
movsl
iret
insb
mov
inc
pusha
inc
pop
xlat
mov
outsl
jno
fnsave
ret
cmp
lock
and
or
or
mov
fidivl
pop
mov
out
cmp
mov
lcall
cmp
cmpsb
lcall
mov
repnz
push
add
adc
sbb
pop
mov
and
fdivr
push
push
mov
fistl
push
sahf
jmp
pop
cmpb
lock
std
hlt
stos
adc
les
fbstp
subb
in
stos
jne
sarb
sub
xchg
dec
jg
cs
mov
push
jle
icebp
sbb
outsl
lret
jnp
push
or
push
cmp
clc
mov
xlat
lcall
dec
mov
cmp
lea
rcrl
sub
sahf
subb
jne
jmp
sbb
lea
roll
dec
mov
pop
incb
sti
test
mov
or
mov
add
cmp
in
into
fbld
lea
push
or
fisttps
pop
jbe
jnp
fisubrs
add
inc
daa
push
cmp
inc
add
add
sbb
cmp
subl
jmp
fs
jnp
add
or
loope
mov
xchg
sub
adc
and
in
sarb
xor
sbb
lods
test
jecxz
js
or
ja
sti
xchg
add
lcall
clc
pop
sti
jno
movsl
fs
pop
ja
dec
inc
mov
std
das
pushf
jne
xor
xchg
pop
int3
jecxz
es
jmp
mov
xor
mov
adc
cmp
clc
pop
mov
lods
sbbl
cmp
xor
dec
aaa
inc
out
out
call
int
pusha
and
in
pmullw
data16
shrb
dec
mov
mov
push
xchg
popa
and
cltd
add
pop
es
std
out
lea
mov
mov
mov
addl
fisubrl
cmp
mov
fisubrs
cmc
int3
movsb
or
jbe
mov
mov
out
push
push
adc
gs
call
in
fsubl
mov
faddp
sbb
mov
popf
fisubrl
aam
loopne
js
jl
mov
and
out
addb
aam
insb
adc
adc
add
call
stos
addl
or
into
mov
dec
aad
fisttpl
mov
mov
fisttpl
imul
inc
rolb
lea
push
outsl
filds
jb
and
pop
mov
sbb
lcall
sbb
and
mov
xorl
lock
or
popa
adc
xor
outsl
push
mov
mov
inc
add
scas
add
outsb
add
inc
frstor
es
xchg
adc
adc
pop
push
fistpll
mov
cmp
cli
or
jmp
push
mov
lret
jmp
rcrb
aad
pushl
hlt
push
sbb
ret
xchg
pusha
jbe
dec
cmp
pop
cmp
xchg
dec
fst
fstpl
pushf
mov
popf
cmp
or
sub
inc
in
mov
sub
pop
pop
and
jnp
dec
and
pusha
imul
pop
push
pop
and
fistps
enter
fwait
inc
andb
dec
mov
sbb
lea
lret
add
push
sub
lock
sub
test
clc
repnz
push
loope
rol
mov
neg
ss
push
loope
xchg
pop
sub
and
inc
xchg
xor
dec
push
jp
icebp
push
sub
ds
push
push
fnstenv
push
mov
nop
pop
xchg
aas
andb
enter
inc
andps
int3
add
stos
idivl
pop
ja
xchg
mov
and
fs
pop
add
int3
mov
or
mov
adc
xchg
mov
or
inc
pop
fdivp
pop
pushf
cld
or
in
push
movb
mov
test
je
std
cmp
ds
sbbb
and
rol
ss
dec
ja
out
leave
mov
insl
or
push
ja
add
sarl
jg
and
fstpl
cmp
pop
mov
orl
jge
or
mov
outsb
pushf
and
dec
jg
outsl
lea
cs
add
adc
shl
lods
sub
mov
mov
lret
fsubrp
out
and
pop
in
mov
in
fwait
mov
sbb
std
dec
in
sub
addl
mov
sbb
or
jnp
ja
xchg
repz
and
ljmp
insl
sub
pop
and
call
sbb
push
mov
div
jbe
sub
into
icebp
mov
call
and
gs
sbb
mov
mov
xchg
mov
cld
popa
mov
push
pop
arpl
sbb
xor
xor
sbb
jp
lcall
inc
jne
push
lods
pop
ja
sti
lods
enter
rsm
sub
roll
filds
mov
xchg
iret
lret
scas
fsts
jne
lret
pop
js
pop
jbe
pop
mov
decl
xchg
rol
mov
nop
jmp
aad
jb
outsl
mov
out
ljmp
jae
mov
jae
out
stos
dec
mov
mov
ja
clc
pusha
fucom
push
cmp
pop
dec
and
inc
mov
out
mov
sbb
jg
and
ficompl
stc
mov
out
push
test
daa
dec
push
lods
std
mov
inc
xchg
int3
in
sub
nop
adcb
mov
sub
test
lock
les
jo
inc
sub
roll
movsl
pop
inc
mov
jg
mov
jmp
jle
jns
or
jg
das
rcrb
test
pop
gs
xor
pop
dec
cmp
insl
and
loope
and
in
add
inc
out
push
cwtl
xor
sbb
icebp
xor
pop
gs
das
pop
push
pop
adc
in
inc
xchg
shrb
pop
xor
movsb
cmp
test
call
jecxz
pop
dec
push
pop
and
sti
xchg
gs
in
adc
adc
dec
or
outsl
pop
or
push
lret
xchg
test
inc
sbb
adc
js
sub
mulb
push
cli
clc
mov
outsb
and
add
cmpb
jb
out
gs
cld
sbb
push
shrw
inc
inc
and
std
lcall
fldt
xchg
push
cltd
adc
cmc
jne
or
add
xor
call
dec
enter
pop
clc
dec
iret
fcmovnb
and
inc
pushf
cmc
pop
add
in
incl
add
pop
cmovno
fsubrp
mov
lods
inc
lea
into
xchg
jle
mov
int3
pop
and
sub
inc
pushf
stc
lcall
popf
loop
rcrl
lcall
sar
jecxz
addb
sbb
xchg
xor
clc
mov
rcrb
xchg
pop
lret
adc
push
jg
mov
and
push
dec
ss
mov
xor
push
std
mov
cmp
subb
in
add
cmp
neg
neg
adc
push
sbb
clc
push
jne
pop
inc
jne
adc
sarb
mov
push
daa
inc
push
mov
push
dec
test
adc
sub
and
xor
rorb
hlt
int
inc
aad
cmp
adc
add
stos
out
int
test
push
pop
je
aad
loopne
rolb
sbb
push
and
loopne
jae
sbb
add
or
cmp
cltd
add
mov
or
pusha
add
test
or
lret
cmp
or
adc
das
ss
inc
outsb
add
loopne
sub
je
and
mov
insl
or
loopne
fimuls
mov
scas
add
icebp
loopne
add
add
dec
xlat
push
popa
cwtl
adc
imul
jo
daa
adcb
into
or
and
and
and
push
push
loop
fcoms
or
cmp
add
lock
shrl
nop
rclb
inc
fildll
addb
or
cli
and
test
mov
xlat
push
aam
test
push
cld
pop
xchg
adc
fsubr
test
inc
inc
fwait
loopne
or
push
setle
pop
lods
mov
or
rclb
dec
sub
mov
sbb
sbb
add
sbb
rol
sbb
clc
cmp
test
push
mov
push
int3
mov
scas
mov
or
mov
add
jno
dec
add
nop
lods
loope
mov
sbbl
filds
adc
cmp
je
and
int3
add
add
fisubs
and
loope
cld
pop
sarl
sub
add
ss
mov
and
mov
or
mov
hlt
leave
ret
lea
xchg
fsubrp
adc
dec
popa
xchg
or
mov
inc
sarl
xchg
sbb
mov
dec
pusha
push
and
push
push
call
cmp
int3
adc
mov
fdiv
inc
mov
out
cli
lcall
shrl
js
push
and
call
xor
repnz
adc
ds
hlt
dec
and
aaa
jl
orb
out
and
loopne
scas
int3
out
fsubr
inc
adc
fcoml
aaa
mov
push
cld
add
lret
jp
sbb
xchg
mov
push
pop
sbb
dec
jmpw
in
fsubrs
pushl
mov
gs
xchg
adc
sub
xchg
adc
ja
jg
push
adc
aam
pushf
sbb
pop
lret
add
dec
mov
sub
orl
aaa
js
sub
mov
or
loop
inc
add
and
ja
fisubrl
mov
mov
sbb
adc
mov
or
and
ljmp
adc
sbbl
sbb
scas
push
insb
dec
pop
stos
jecxz
mov
pop
mov
jnp
mov
loope
sbb
sub
fnstcw
fcoml
mov
shll
mov
adc
xor
cmp
cmpsl
or
lahf
pushf
add
mov
popf
sti
mov
mov
ss
add
shll
push
inc
sub
popa
pushf
fs
add
adc
jmp
push
das
and
into
pop
inc
addb
or
and
call
mov
filds
add
pop
out
leave
push
xor
cmp
inc
mov
loopne
adc
mov
mov
lock
or
push
scas
out
xor
lods
inc
jmp
sbb
jo
mov
pop
mov
dec
sbb
call
sub
into
mov
test
cmpb
push
sbb
inc
or
insl
cmp
sub
test
jmp
lock
in
rol
ja
inc
or
cli
stos
sub
psllq
add
mov
mov
xor
mov
pop
mov
and
xchg
and
jb
rcr
pop
inc
or
sub
stc
dec
addb
adc
ljmp
xor
cmpsb
and
sbb
pop
bound
xchg
add
xor
out
scas
insb
cs
mov
mov
mov
lea
mov
and
or
sbb
pop
imul
in
cli
addr16
fbstp
stos
push
mov
pop
lea
mov
cmp
dec
fisttps
lods
inc
push
sub
jle
movb
rcll
loope
push
jbe
and
ljmp
ret
cld
fistpl
mov
inc
mov
test
jns
push
push
call
icebp
dec
ljmp
mov
fists
ljmp
jnp
or
xchg
push
idiv
shrb
adc
adc
sti
or
out
add
repz
adc
out
inc
movsb
faddl
hlt
leave
xchg
cwtl
lock
jl,pn
mov
or
jecxz
push
mov
jno
popa
jl
sti
lea
into
pop
xor
rcrb
sbb
insl
cld
jg
lods
fistl
mov
nop
pop
cld
outsl
mov
insl
sbb
aas
mov
mov
mov
inc
in
int
insl
mov
idivb
jl
push
mov
je
sahf
stc
adc
ljmp
nop
jbe
ret
js
bound
shl
push
xlat
incl
push
pushl
push
jmp
jecxz
inc
cmp
add
loopne
and
adc
jp
fisttpl
or
push
aad
inc
inc
mov
push
inc
sub
sbb
or
aam
addb
jmp
out
add
cs
and
sub
sbb
mov
shll
lock
push
test
in
sub
push
mov
adc
push
loope
pop
lock
int
adc
mov
mov
pop
shrb
adc
xchg
adc
repnz
shll
add
sub
movsb
xor
shll
adc
cmp
adc
gs
inc
adcl
jnp
inc
and
mov
or
mov
subl
add
adc
andl
sbb
or
mov
push
mov
push
mov
cmp
fcoms
lods
call
test
sub
andl
fdivrs
xor
sub
sbbb
les
add
sarb
add
lret
inc
mov
sub
sub
jbe
mov
adc
push
lds
insl
xchg
add
dec
pop
cs
or
popl
sahf
les
jle
sbb
xchg
adc
scas
into
push
je
and
ljmp
mov
mov
and
and
mov
ja
mov
pop
cmp
jns
sbb
int
adc
dec
jle
out
call
adc
push
push
out
loopne
mov
xlat
inc
push
add
jg
incl
movsl
add
sbbl
fcomps
std
inc
cld
and
cmpsb
aam
aaa
inc
pushf
out
std
incl
out
mov
and
shll
icebp
cmpsl
divb
in
or
int3
subb
inc
push
mov
scas
or
dec
xchg
xor
daa
pop
test
mov
jnp
add
jg
xlat
pop
imul
inc
dec
jl
jbe
adc
sub
dec
inc
ljmp
cld
clc
clc
dec
andb
xorl
add
inc
mov
dec
inc
inc
push
sub
pop
loopne
dec
add
jbe
pushf
xor
in
mov
jg
stos
sbb
loope
push
nop
add
sub
pushl
movsb
or
sti
xor
lods
enter
call
popf
dec
push
orl
out
xchg
sbb
dec
and
pusha
inc
flds
pop
int
xchg
aas
dec
scas
movsb
aas
popf
cmc
or
lret
jg
sbb
jg
dec
cmp
sub
pop
pop
jmp
dec
fisubl
jp
out
sbb
outsb
jbe
inc
iret
xchg
ja
push
add
inc
or
lahf
in
in
das
sarl
mov
leave
xor
and
pop
xor
mov
outsl
and
fwait
dec
cmpsb
jge
lock
dec
xor
shlb
inc
test
and
add
arpl
push
ljmp
adc
lods
cli
aas
movsb
adc
and
add
push
xor
sbb
hlt
jge
inc
jne
mov
ss
sbb
xor
into
add
sbb
leave
inc
adc
mov
mov
and
sub
jmp
sub
jmp
push
sub
dec
lcall
push
shrl
sub
out
push
fadd
and
push
cmpsb
push
sbb
lcall
data16
sti
fcompp
jecxz
fnstenv
xchg
cmp
fsubs
test
xchg
or
ja
xchg
and
cmp
lcall
jmp
inc
mov
ljmp
pop
jnp
loope
test
dec
inc
or
or
mov
sarb
lods
stc
inc
inc
call
fsubs
or
not
and
add
cmpl
inc
icebp
and
add
add
push
in
pusha
scas
and
fildl
cwtl
arpl
push
push
shlb
ljmp
sbb
sbb
in
daa
es
push
andb
cmovg
mov
add
in
inc
and
addb
ljmp
mov
pop
cmc
add
fcompl
pop
mov
push
add
stos
jle
mov
push
mov
adc
xchg
mov
or
enter
inc
inc
add
xorl
js
outsb
push
sub
push
scas
add
mov
lods
cmp
stos
or
pop
fists
push
xor
mov
rcr
push
push
fstps
mov
inc
sahf
ret
shll
into
call
sbb
cmpsl
and
add
xchg
daa
outsl
es
jo
xorb
mov
shr
sahf
addb
lret
jle
icebp
mov
xchg
push
rolb
xor
andb
ljmp
sarb
mov
gs
imul
imul
repnz
stc
add
mov
cmp
aaa
dec
std
test
mov
inc
scas
cmp
js
ret
adc
leave
test
mov
mov
or
xlat
xchg
and
jns
pop
xor
paddq
lds
ds
xchg
cmc
lahf
jle
lock
fcmovnbe
pop
mov
adc
rcrb
xchg
movl
stos
faddp
inc
or
fistl
jo
mov
shl
fistps
sub
out
movsb
daa
inc
jbe
sar
mov
jns
xor
inc
mov
scas
ja
jmp
ss
lcall
jle
adc
repz
jmp
lcall
fisttpll
sbb
pop
xchg
push
jge
sbb
or
cmp
in
arpl
sar
clc
mov
pop
aas
je
and
mov
inc
inc
aad
inc
ljmp
mov
insl
out
adc
rcll
sub
pop
addr16
shl
push
add
jecxz
stos
pushl
pop
das
add
outsb
or
pusha
mov
pushw
test
mov
call
pop
les
or
lret
mov
gs
call
push
sub
outsb
xor
dec
inc
ds
aam
xor
mov
jne
push
adc
jge
outsl
xchg
mov
iret
enter
mul
sbb
xor
pop
bound
mov
ja
xchg
fsubl
rolb
in
or
fstl
test
js
call
ss
bound
je
inc
std
cli
dec
jo
scas
aad
mov
in
mov
out
or
adc
cmp
test
sti
mov
xor
outsl
clc
push
movsb
dec
pusha
ja
mov
add
xchg
lea
dec
and
test
out
and
sbb
lock
inc
jno
ja
test
xor
fldpi
add
mov
clc
jg
mov
pop
lock
pop
add
jns
sbb
lods
stos
xchg
mov
ss
out
and
pop
jns
adc
insb
cld
mov
add
or
adc
leave
daa
out
es
fildl
ficoms
dec
popa
sub
sub
incb
or
lock
sub
adc
loopne
push
sbb
call
xchg
fidivrl
inc
loop
xor
ss
cmp
dec
int3
and
or
inc
pop
jp
fbstp
test
sbb
add
pop
ret
test
jmp
inc
add
inc
sti
test
loop
lcall
mov
jnp
jle
fsubrs
lahf
out
outsl
add
or
xchg
xor
es
iret
and
dec
pushf
cs
and
clc
fdivp
add
mov
adc
or
hlt
sbb
call
xchg
cs
popa
sahf
sbb
pop
scas
mov
inc
jecxz
inc
push
mov
lfs
cld
outsl
faddl
lret
ja
push
insb
xchg
mov
ds
xchg
test
or
sbb
xor
decl
pop
jae
jnp
div
paddd
dec
fistpll
lock
in
fstl
cmp
loope
push
and
add
or
push
inc
inc
out
aaa
mov
jmp
scas
xor
ja
jo
loopne
jge
xchg
sbb
pop
rorl
push
std
ja
notl
or
push
jmp
jo
daa
ds
mov
rclb
int3
fs
xchg
or
push
in
pop
and
andb
mov
loope
and
mov
lock
shlb
enter
fisttps
and
or
pop
adcl
ret
and
jo
cmp
fnstenv
cld
pushl
sub
nop
inc
push
scas
stos
sti
std
sar
cwtl
lds
xor
jp
imul
rclb
mov
xchg
mov
fbstp
cmp
add
ret
ds
push
int3
sub
outsb
jo
pop
inc
inc
cmp
mov
or
gs
xlat
mov
push
jecxz
jne
sahf
inc
dec
mov
lret
cmp
sbb
add
xchg
mov
ja
xchg
mov
aad
sbb
jp
mov
outsl
fwait
xchg
mov
lds
sar
pop
aas
and
inc
and
sti
and
xchg
inc
add
or
pop
sbb
push
add
adc
icebp
jbe
loop
rcrl
inc
or
imulb
xchg
mov
lock
pop
mov
out
xchg
push
imul
popa
std
testb
or
or
addb
mov
daa
enter
pop
cwtl
cmpb
xor
fwait
push
das
popf
adc
mov
xchg
in
movsl
or
sub
leave
std
sbb
sub
testb
inc
loopne
ljmp
sub
fadd
or
arpl
shlb
aam
push
mov
xchg
inc
roll
jb
nop
mov
sahf
sub
repz
sub
rolb
das
xchg
movsl
add
sbb
xchg
and
mov
add
cli
cltd
xchg
inc
mov
test
lea
lcall
je
jae
addr16
les
imul
mov
das
mov
xor
inc
shlb
jge
push
lods
ret
and
sbb
or
js
enter
lcall
sub
jbe
xchg
shl
add
hlt
xor
movsb
cmp
mov
dec
faddl
push
adc
stc
ljmp
pop
and
jp
and
push
mov
jg
jg
jo
cli
es
cmpsl
stos
adc
loope
adcb
cltd
xor
filds
aas
pop
add
push
aam
lret
fwait
sub
add
xor
testb
push
mov
xlat
jmp
push
mov
fisttps
lods
push
ret
lock
int
subl
add
in
es
sbb
std
or
pushf
jbe
xor
lods
int3
jae
sarb
mov
test
shrb
cwtl
bound
loop
xor
rorb
jg
xchg
jle
leave
nop
out
cmpsb
icebp
push
xchg
jecxz
enter
jmp
decl
add
cltd
jge
rorb
xorb
sub
and
inc
xor
pop
xlat
add
std
mov
sub
and
or
outsb
adc
xor
into
ja
loopne
aad
scas
jge
mov
dec
mov
outsb
jb
cmpsb
push
and
aas
out
into
sbb
imul
pusha
out
cmp
outsb
stc
ljmp
outsl
loopne
xchg
jle
cmp
shrb
fbstp
jle
xchg
add
cmp
cmp
pop
loop
test
jl
adc
andb
mov
int3
ss
adc
mov
sub
shlb
pushf
adc
cld
push
scas
stos
sub
or
mov
or
ds
movb
in
cs
xor
pop
ret
jecxz
pushl
xorb
gs
popf
icebp
cld
add
jg
cmp
push
dec
cld
inc
or
movsb
sub
inc
scas
add
xchg
mov
fistpll
push
add
pop
xlat
push
mov
mov
das
cld
testl
add
mov
dec
jns
or
mov
or
pop
xchg
and
add
out
cmp
sbb
adc
sub
repz
or
mov
dec
cmpsb
add
call
jg
mov
data16
push
inc
nop
add
mov
sarb
dec
xor
sbbl
addr16
or
test
mov
call
inc
mov
cmpsl
aam
mov
pop
jge
jecxz
and
add
pop
cmpsb
and
pop
inc
in
ret
inc
inc
lret
push
daa
inc
dec
add
inc
je
sub
sti
push
sbbl
ficompl
jb
mov
or
in
mov
daa
adc
sbb
pop
mov
out
lock
cmp
les
in
insl
pop
clc
das
jns
cmpsb
dec
add
in
sub
mov
in
mov
das
negl
add
jg
punpcklwd
cmpl
push
mulb
inc
jmp
adc
test
adc
call
test
xchg
add
mov
push
cwtl
mov
jmp
lea
in
push
shl
std
xchg
push
or
sbb
pop
scas
jp
addr16
arpl
mov
sub
jns
mov
and
cli
test
je
gs
jo
or
xchg
dec
xor
fsubrl
xorb
xor
mov
jo
adc
aad
mov
or
push
xchg
mov
or
cli
jge
sbb
sub
shll
sub
and
sahf
in
aaa
push
xchg
push
out
mov
mov
add
jp
mov
stc
xchg
jp
paddb
fists
jae
rcl
stc
aaa
sub
aaa
pop
inc
bound
sbb
or
adc
call
out
push
pandn
add
push
jle
hlt
notb
pop
lret
fs
mov
or
add
add
push
push
stos
xor
jo
jne
add
sub
lcall
arpl
dec
lea
mov
pop
sub
inc
mov
testb
cli
rolb
ret
fstpt
ljmp
into
and
pushf
out
sub
lea
pop
pop
lods
test
stc
xchg
cmp
shl
pusha
enter
lock
loopne
stc
jb
shlb
and
repnz
cmp
pop
outsb
sti
arpl
popf
dec
lock
cld
int
jno
pop
mov
cmp
push
insl
clc
pop
stc
cmpsl
movsb
adc
pop
out
pop
pushl
or
adc
jmp
fwait
mov
pop
push
xchg
mov
or
mov
push
xor
cld
sub
fisubs
dec
sub
fdivs
dec
sbb
jmp
ljmp
add
push
or
add
xchg
imulb
stc
cmp
jecxz
leave
lock
stos
test
stos
sahf
pushf
inc
push
mov
cmp
jne
mov
pop
dec
cmp
aad
cld
nop
popf
pop
outsb
insb
or
jecxz
mov
adc
outsl
jge
cs
or
inc
mov
repnz
adcb
push
mov
ss
clc
aam
xor
lret
or
rep
fisubs
mov
sahf
int3
out
push
xchg
mov
sub
mov
jns
insl
orl
or
inc
xor
insb
jmp
faddl
iret
mov
outsl
mov
mov
jmp
inc
pushf
in
mov
xchg
das
stc
sub
insl
in
pop
in
sarl
xlat
stc
insl
insl
xlat
pop
pop
aaa
test
add
test
pushf
mov
test
xor
in
xchg
jp
imul
push
xchg
insl
or
icebp
cmp
pop
or
xor
aam
repz
sbb
stos
fisttpl
and
and
pushf
pop
stc
xchg
push
shlb
adc
mov
rolb
and
xchg
aas
and
scas
sbb
inc
loop
les
push
pop
push
mov
outsl
xor
dec
addr16
leave
iret
popa
pop
lods
stos
xchg
push
mov
lret
or
or
cmp
arpl
xchg
mov
scas
fisttpll
jne
mov
or
xor
mov
and
jge
call
mov
stos
mov
sub
lret
pop
ret
add
cwtl
push
xor
sub
mov
nop
test
jb
or
adc
insb
and
jno
sub
movsb
jne
call
pop
or
jb
mov
jne
ljmp
inc
popf
dec
dec
cmp
fistpll
mov
mov
jne
sub
push
mov
ficoms
mov
ret
sbb
imul
sbb
fnsave
fcmovne
sub
movsl
push
dec
repnz
sti
insl
mov
sbbl
add
sub
adc
outsb
jg
mov
iret
pop
mov
ret
inc
icebp
xor
mov
cld
fcoms
or
int
adcl
jge
ss
xor
jnp
mov
lret
xchg
mov
mov
cmp
insb
pop
dec
and
or
sbb
pop
outsb
jl
push
xchg
dec
push
cli
jp
and
and
lahf
add
test
insb
xor
mov
push
sbb
imulb
add
sub
sub
movsl
lds
adc
inc
es
mov
mov
push
pusha
ds
pop
sub
add
adc
sbb
mov
sub
das
jl
sbb
add
pop
rcll
sub
std
cmpb
push
or
sub
call
lods
sub
inc
push
sub
mov
out
push
pop
adc
adc
mov
mov
sub
in
add
dec
push
std
test
or
jle
push
cmp
mov
push
mov
ret
incl
add
xchg
or
loopne
iret
mov
jecxz
cli
dec
jnp
xchg
inc
mov
decl
arpl
lock
mov
daa
or
mov
adc
sbb
lret
cmp
pop
mov
negb
push
push
push
pop
int
dec
dec
out
cmp
outsl
das
stc
mov
stos
fsubs
mov
push
push
insb
dec
or
in
std
inc
xlat
inc
je
std
dec
inc
add
push
divps
add
dec
cwtl
jmp
mov
xor
cli
inc
inc
adc
sbb
lods
mov
sbb
movsl
jnp
adc
mov
fstpt
cmp
fnstsw
shr
aam
pop
push
loop
add
outsb
sbb
xchg
mov
call
xchg
notl
das
leave
mov
movsl
rorb
push
pop
dec
lea
cltd
or
add
or
leave
out
test
cltd
rolb
rcrl
push
roll
push
inc
shll
sub
lods
icebp
inc
shr
int
icebp
jo
dec
aas
xor
fcompl
mov
push
push
jbe
mov
inc
fdivrl
insb
mov
fisttps
leave
movsl
xor
and
xchg
test
inc
test
or
mov
pop
jle
jmp
jne
jmp
push
nop
dec
fdiv
ret
push
xlat
shrb
test
divb
inc
sar
push
fisubs
dec
fstl
lock
mov
inc
cld
and
xor
pop
fucomip
cwtl
test
add
gs
add
cmpsb
decl
jp
push
jl
icebp
jbe
scas
jl
push
push
or
sub
imull
in
jg
and
jb
into
sti
or
xor
cld
pop
ds
je
pop
enter
mov
mov
dec
sub
scas
dec
jbe
mov
clc
pop
xlat
sbb
pushf
mov
fisttpl
adcl
sbb
add
adc
ficoms
call
adc
and
fwait
ljmp
sbb
pop
ficoms
push
mov
mov
inc
mov
in
ljmp
mov
nop
divb
sub
fbstp
in
xchg
cltd
jecxz
sbb
sbb
ret
adc
faddp
test
or
xchg
sbb
cli
push
jle
aas
pusha
dec
sub
in
mul
fbstp
mov
mov
cmp
out
repnz
mov
js
testb
out
xchg
incb
dec
sbb
in
and
sub
loopne
mov
dec
clc
aaa
adc
aas
cmp
loopne
sbb
in
xlat
aam
cmpsb
das
nop
mov
cld
aaa
imul
push
std
incb
xor
mov
jmp
push
mov
test
sbb
into
add
sub
test
leave
repz
fidivs
lcall
ret
aad
pop
in
negb
or
hlt
push
mov
mov
test
imull
loopne
jg
or
rorl
out
add
pop
mov
into
pop
fldl
rcrl
int
or
dec
mov
sbb
neg
and
js
inc
mov
inc
inc
and
mov
or
pop
jb
mov
sbb
in
sar
cli
cmp
std
cmpsb
outsb
pop
and
shr
inc
adc
jge
scas
or
xchg
dec
mov
imul
mov
push
cmp
cwtl
mov
sub
out
sbb
inc
and
xor
loop
js
push
sbb
add
cmp
ss
mov
add
shl
inc
imul
pop
mov
xchg
cs
xchg
pop
jns
cwtl
jge
cli
movsl
push
sub
sbb
rcrb
or
cmp
adc
cmpb
test
dec
daa
out
psubw
sub
jg
pusha
dec
loopne
push
cwtl
adc
je
mov
scas
div
or
ffreep
test
dec
add
inc
aas
add
cmpsb
icebp
in
mov
aaa
jle
orl
lahf
mov
ret
or
pop
outsl
loopne
and
gs
incl
fsubrs
sbb
nop
add
popa
imul
stos
je
inc
shrb
mov
mov
push
aam
push
test
add
clc
mov
test
xchg
and
jge
in
lea
mov
add
mov
in
icebp
mov
mov
or
lock
xor
test
std
inc
xlat
pop
cmp
cmc
inc
stos
xlat
test
outsb
sbb
xor
add
das
cltd
mov
mov
aam
mov
mov
and
cwtl
ljmp
loop
sbb
jl
insl
xchg
enter
cmp
andl
dec
xlat
mov
outsl
push
sub
push
and
inc
hlt
sbb
add
mov
icebp
test
or
sar
dec
add
ja
insl
stos
jp
dec
sbb
push
xchg
jg
pushf
add
std
xchg
adc
and
cli
ja
into
pushf
repnz
fiadds
mov
repz
arpl
loopne
loopne
jp
push
dec
icebp
mov
inc
subl
sbb
pop
cmp
and
test
int
sahf
push
test
push
cmpsb
jle
lock
xchg
and
or
jmp
dec
addl
sbb
and
int3
mov
mov
rcrb
pop
mov
pop
fdivp
dec
mov
es
pusha
xchg
mov
aad
and
mov
nop
xor
pop
mov
sbb
sbb
nop
jecxz
adc
aas
pop
sbb
sbb
push
mov
adc
adc
lds
ret
pop
js
lret
cmp
mov
lea
mov
dec
pop
aaa
test
push
inc
cmp
add
les
cmp
mov
xor
cli
xor
adc
orb
stos
xor
sub
mov
rorb
aaa
fcmovbe
inc
rcr
jo
clc
xor
mov
shlb
pop
xchg
sbb
inc
inc
jne
lock
pop
fadd
push
xor
cld
jbe
mov
sub
sub
mov
stos
repz
push
xor
pop
frstor
push
cs
mov
aam
ret
test
xor
pop
enter
ljmp
inc
aas
xchg
inc
push
das
pop
inc
pusha
pop
cmp
mov
and
insl
rol
jg
jl
out
test
mov
xchg
shrb
xor
mov
movsb
sbb
jp
sbb
add
and
push
sub
fcoms
es
xor
xor
rorl
popa
cmp
pop
mov
push
subl
adc
scas
pop
in
dec
stc
mov
add
mov
inc
lods
push
cmpsl
fisubrs
push
mov
push
scas
incl
js
out
xchg
loopne
push
rclb
mov
mov
cmc
cld
cmp
mov
fwait
and
mov
jmp
fsts
jnp
pop
adc
pusha
icebp
ja
inc
push
dec
inc
pop
fcoml
dec
das
and
and
jne
push
dec
push
scas
mov
mov
scas
dec
mov
ret
shl
xlat
call
cmc
pop
or
xchg
out
mov
nop
lret
hlt
pop
sbbb
add
mov
inc
scas
loopne
aaa
pusha
in
fidivrl
mov
cmpsb
pop
mov
imul
out
fiaddl
movsb
dec
imul
dec
jg
push
adc
out
movsl
jmp
sbb
call
mov
push
mov
icebp
jg
leave
push
mov
jge
lcall
mov
or
push
cmp
pop
mov
sbb
daa
out
imul
pop
lret
sahf
test
cmc
or
inc
fcoml
mov
and
add
adc
adc
mov
popa
stos
sbbb
pmaxub
jne
mov
call
das
or
mov
push
push
jge
sbb
das
or
xor
xchg
ss
and
mov
in
adc
jmp
mov
pop
or
iret
push
stc
jmp
add
or
loopne
dec
rcl
int3
push
or
adc
mov
sbb
nop
int3
jne
pop
add
jo
out
mov
adc
imul
cmpsl
mov
js
dec
lods
fmull
pop
mov
push
lds
sbb
and
aaa
clc
adc
add
cs
fldenv
in
xor
mov
adc
mov
fcompl
add
sbb
imull
mov
call
jo
sbb
push
dec
int3
pop
in
inc
into
call
adc
sbb
mov
adc
xchg
xchg
xchg
inc
jl
and
ljmp
push
lock
and
in
or
cmp
scas
je
cmpsb
loop
add
cmp
sub
jns
add
add
add
andb
addr16
mov
pop
iret
mov
pop
mov
mov
sti
push
inc
stos
cmp
push
repnz
xor
adcb
fistpll
dec
call
mov
cmp
inc
mov
inc
and
loope
sub
insb
test
stos
cwtl
inc
inc
inc
push
frstor
pushw
fcompl
lahf
cmp
inc
push
mov
addb
pop
add
xchg
mov
fidivrs
push
pop
adc
or
xchg
jb
add
shrb
inc
clts
inc
add
or
add
sbb
xor
sbb
adc
mov
loope
int3
mov
daa
mov
popf
dec
inc
cmc
inc
xor
or
dec
rcrb
loope
sbb
hlt
sarb
xor
push
push
mov
pop
out
xor
ss
call
sbb
or
add
aaa
push
aad
add
out
jmp
popa
lret
call
faddp
xlat
mov
shll
ljmp
and
pop
call
jecxz
push
aaa
clc
sbb
push
inc
cld
in
adc
cli
adc
inc
mov
push
int
jae
pop
jl
xchg
mov
stos
mov
movsl
call
mov
jl
inc
adc
and
faddl
outsl
xor
std
mov
jo
push
sahf
into
pop
sbb
shll
or
or
das
sbb
test
fisttps
and
add
dec
in
cli
adc
loope
data16
fistps
cs
xorb
or
pop
loop
cmc
xchg
add
sbbb
jb
xchg
xor
sbb
jne
leave
dec
sub
sahf
xchg
out
or
sub
pop
aas
addb
mov
dec
loope
roll
mov
push
jg
sbbb
es
lret
popa
cli
push
add
fldl
je
lahf
and
dec
jp
inc
mov
push
enter
mov
enter
xchg
add
mov
xorb
or
sbb
push
mov
stos
cld
dec
aad
out
pop
xchg
mov
sub
and
xchg
mov
inc
pop
fwait
sub
cmp
je
mov
imulb
or
lret
xor
fsub
adcb
incl
sbb
hlt
ret
stos
xchg
sti
mov
adc
dec
mov
mov
int
aas
enter
stos
sub
cmp
inc
xor
pusha
mov
fwait
fs
addr16
xchg
and
pop
pop
pop
jecxz
xorb
insb
ds
mov
leave
jg
mov
repnz
daa
fisubl
xchg
ljmp
adc
insl
mov
mov
jg
mov
inc
cwtl
mov
outsb
test
cmp
xor
lods
rcr
cmp
add
push
pop
jle
push
xchg
add
pop
movsl
into
push
cmp
jno
mov
add
sbb
sbb
jg
hlt
repnz
push
aad
jp
push
std
xchg
or
xor
pop
fstenv
cmp
mov
mov
ror
sbb
das
test
push
adc
jle
pop
call
jl
pop
mov
inc
dec
int3
jo
push
test
inc
mov
mov
cmp
dec
bound
les
int
jg,pt
lahf
pop
mov
cmpsb
and
stc
add
adc
inc
in
lea
leave
xor
jo
fsubs
cmp
add
push
loope
push
cmp
xchg
xor
or
pop
fs
test
mov
jg
mov
adc
scas
ficompl
loope
adc
ja
sub
fsubs
std
in
inc
sbb
cwtl
movsb
das
lahf
dec
pop
or
sub
cmp
pop
xchg
loop
xlat
jp
je
cs
insl
cmp
loop
aas
sub
mov
inc
adc
stc
mov
lea
test
adc
or
mov
out
sbb
lret
sub
or
movsl
xchg
fcmovbe
adc
pop
lret
neg
fmull
mov
insb
xor
outsl
lea
movsl
testl
add
shlb
add
xor
stos
fistps
repnz
call
negl
aad
push
stos
push
or
mov
fucomi
aaa
loopne
sbb
in
push
repz
dec
and
aam
sbb
or
jge
out
mov
cmp
or
mov
or
xor
cmp
cli
lret
mov
pusha
cmpl
call
roll
add
jne
leave
jmp
subl
jmp
pop
push
mov
jle
sub
push
xor
out
jp
cmp
xor
and
adc
sbb
mov
es
and
out
or
imul
dec
add
decl
jne
mov
cmp
add
dec
sub
insb
and
dec
mov
adc
adc
test
loop
adc
cmp
pop
jae
mov
cld
js
cli
jne
aas
loope
mov
inc
dec
imul
push
or
ret
sbb
enter
sub
lcall
or
inc
push
jg
daa
pop
mov
cmova
mov
jge
out
adc
adc
mov
sahf
lret
or
enter
cmp
imul
out
push
rorb
sbb
xchg
xchg
ja
add
dec
jmp
rcll
fs
push
pushf
popa
das
pushl
jb
sub
pop
mov
sub
jbe
das
xchg
rolb
xchg
arpl
cs
test
ret
adc
xor
imul
mov
cltd
and
lock
mov
xlat
mov
or
xor
js
int
pusha
enter
clc
push
sbb
sub
cmc
jnp
mov
mov
cmp
push
repz
jne
mov
sar
xchg
sub
xchg
lods
xor
mov
add
les
insl
and
and
mov
cld
test
ficomps
bound
lds
popf
sub
xor
pop
stos
pop
xchg
mov
dec
sub
sub
loopne
repnz
add
movsb
loopne
fnstsw
xchg
lods
icebp
scas
in
dec
cmpsb
notb
xor
in
or
imulb
outsl
push
cmp
jp
sub
cmp
cmp
test
rcrb
or
rorl
imul
movsb
mov
imul
sub
cmp
push
inc
adc
inc
insb
dec
dec
or
mov
stc
sbbl
rcrb
cmp
sbb
mov
jmp
ret
mov
fisubrs
out
adc
inc
inc
jae
ja
jg
push
mov
aam
clc
xchg
cwtl
dec
aam
or
jae
dec
stos
das
psubusw
push
ljmp
mov
int
fstpt
pop
mov
mov
inc
fsubs
lods
sbb
dec
in
imul
mov
mov
sbb
pusha
sub
repz
loope
mov
scas
dec
xchg
push
fsubrs
pop
push
fucomi
jg
je
or
ljmp
aas
rol
orl
jnp
es
cmpsb
push
mov
js
add
mov
pop
das
jl
or
into
cmp
dec
sub
mov
mov
mov
es
push
cmpb
outsb
sbb
and
std
pop
lock
clc
sarl
or
out
xor
add
dec
jno
cmp
add
pop
loop
or
ljmp
int3
add
mov
adc
cltd
lret
and
scas
mov
addb
clc
nop
mov
or
fbld
jecxz
or
daa
pop
and
sbb
fistpll
add
add
mov
or
add
or
sti
add
loop
and
mov
mov
and
cld
loope
icebp
mov
les
sub
sbb
divb
mov
jp
mov
into
push
insb
test
and
sahf
cld
pop
push
mov
dec
mov
mov
cmc
mov
adc
call
rcll
push
dec
push
das
in
push
cli
lahf
fwait
sub
pslld
dec
ja
add
jns
push
fsts
orl
xchg
rcrl
aaa
cmp
inc
or
or
ja
pop
fidivs
mov
mov
and
push
enter
cmp
scas
fdivr
enter
test
adc
ss
ss
sub
pop
loope
xor
icebp
xchg
push
mov
adc
mov
add
or
or
pop
dec
mul
fistl
inc
mov
call
and
cltd
mov
inc
testl
daa
sbb
cltd
push
inc
xchg
sahf
sbb
test
or
adcb
mov
push
or
or
rclb
jb
lea
xor
inc
lea
push
add
jp
fiaddl
insl
or
into
add
jl
aam
enter
out
add
push
mov
insl
pop
sub
cs
pop
je
mov
test
test
add
outsb
add
and
insb
dec
andb
and
out
loopne
xor
gs
add
inc
cmp
or
and
push
jae
pusha
clc
add
decl
push
ss
dec
jle
ret
cmc
jo
inc
dec
cmp
jle
hlt
mov
iret
and
ret
jp
xchg
iret
pop
sub
js
xlat
xor
xchg
pop
dec
xor
sub
fistpl
les
and
xchg
jge
and
push
roll
fcompl
push
sub
cmpsb
pop
add
je
pop
jnp
jmp
sar
inc
test
fadds
pop
or
jb
lret
dec
mov
or
shll
adc
mov
xchg
add
xor
adc
aaa
fwait
insl
cmp
ret
lret
mov
cmp
sub
stos
or
jecxz
ljmp
js
mov
cld
pop
jle
sbb
es
add
mov
hlt
pusha
cmc
out
lcall
mov
out
rolb
lret
push
data16
nop
jle
rcrb
dec
adc
lock
and
stos
fstpt
andb
sti
dec
js
xchg
sub
jno
out
dec
dec
mov
pop
pop
cli
das
cmp
rolb
xor
cld
outsl
shl
sub
negl
outsl
jg
cmp
mov
add
stc
pop
aaa
mov
imulb
daa
add
outsl
rolb
cmp
jnp
mov
outsb
inc
fildll
cmp
add
in
mov
andb
test
jl
test
inc
data16
mov
push
xchg
call
xor
jae
call
and
jnp
loope
mov
add
mov
fmul
or
xchg
cmp
lret
add
xor
jmp
adc
test
cmpsb
test
mov
dec
outsl
sbb
ror
jnp
decl
fnstsw
loopne
ss
les
jno
adc
testb
add
sbb
or
fistpl
sbb
inc
mov
cltd
icebp
filds
fisttpll
in
ret
xchg
pop
daa
ret
jb
dec
cmp
pop
das
sub
pop
lcall
pop
loope
iret
mov
call
jmp
out
inc
andl
jae
pop
add
sti
fstpt
push
pop
push
jg
imul
push
lahf
sbbb
call
cld
xor
and
inc
cmp
stos
add
shl
and
aas
out
dec
sbb
mov
inc
pop
add
mov
lock
and
push
xchg
rcll
mov
push
stos
shlb
inc
test
push
vshufps
cmove
mov
jmp
arpl
movsl
subl
jmp
test
add
xor
inc
rcr
movsl
cli
js
nop
sub
cld
pop
orb
or
cmpsb
cld
dec
aaa
fldt
aam
pop
jecxz
mov
push
push
in
subl
jo
xchg
sbb
aaa
cli
lods
mov
inc
pop
dec
adc
shrb
test
jle
and
in
or
cwtl
mov
jg
sbb
adc
adc
mov
rorl
dec
repz
jb
leave
xor
in
shlb
sahf
out
fwait
jmp
loop
fucomi
dec
andb
popf
sti
pop
stc
or
cmpsl
dec
ficoml
xorb
xchg
fcom
fdivrl
sti
mov
pop
push
add
jmp
fldl
sbb
mov
jb
inc
inc
push
sti
mov
js
xor
adc
ficoms
sbb
push
movsb
sbb
bound
std
ror
and
inc
add
xor
cmpb
dec
enter
movsl
lods
aam
popf
ljmp
inc
xchg
push
mov
mov
xor
push
push
fildll
pop
out
sub
jl
push
test
out
mov
adc
rolb
adc
call
pusha
push
loopne
insb
aam
adc
daa
movsl
add
jo
xor
cmp
adc
loop
js
adc
fcmovnu
pop
push
ret
mov
mov
icebp
repnz
aam
imul
mov
push
add
dec
or
addl
repz
aaa
shr
pop
mov
sbb
inc
jnp
in
insl
cmpsl
das
in
pop
xlat
adc
add
mov
inc
sub
fwait
jmp
clc
addl
lods
les
fsts
sar
cmp
mov
xchg
cmp
mov
adc
push
jb
mov
inc
dec
ja
mov
dec
dec
std
pop
loop
sahf
hlt
mov
clc
lods
mov
int3
lea
pop
loop
outsb
stc
sbb
push
flds
pop
outsl
clc
mov
or
jno
push
cmp
sarl
lcall
aas
cmp
mov
xor
xor
ret
lock
test
repnz
mov
and
lds
mov
cmc
aam
inc
adc
test
decl
xchg
jg
and
movsb
dec
push
sbb
fldt
repnz
and
rcr
pop
pusha
arpl
xchg
xchg
repz
jno
pop
mov
es
mov
aam
mov
push
popa
repnz
dec
and
jmp
jp
xchg
sbb
add
test
xchg
inc
inc
loope
push
jle
cltd
push
call
out
push
subb
adc
movsl
sub
push
sub
sub
mov
xor
xchg
cmp
mov
in
je
cltd
mov
cld
inc
inc
dec
dec
jg
mov
hlt
lcall
clc
rcrb
pushfw
and
arpl
jp
mov
outsb
je
sub
cmp
or
ds
cmp
clc
mov
testl
sbb
movsb
icebp
arpl
or
ss
out
xor
ja
push
mov
adc
mov
inc
add
inc
shll
cmpsb
pop
ror
dec
inc
xor
inc
xor
pushl
push
mov
in
rclb
cmpsl
or
es
lret
dec
push
rorb
movd
or
int3
icebp
ret
sbb
push
lret
inc
fnstcw
test
mov
ret
xor
push
mov
jg
mov
test
lock
mov
les
and
pop
push
js
jmp
adc
add
fstps
js
cmpsb
ljmp
pushf
in
adc
test
mov
in
lea
pushf
or
jns
jle
iret
shrl
dec
icebp
adc
in
frstor
cs
add
add
loope
cmpsb
push
cltd
test
es
insl
clc
mov
adc
or
add
cld
xor
loop
icebp
testb
dec
adc
bound
icebp
adc
outsb
scas
add
sar
or
xor
int
aad
push
adc
xchg
lock
add
icebp
cs
lods
mov
int3
popa
and
inc
mov
adc
mov
and
xor
mov
sbb
mov
add
cmp
int
or
push
ret
call
xchg
lcall
mov
cli
bound
rcl
push
adc
cmc
lcall
sbb
mov
xor
lods
aaa
fldt
xorl
adc
add
add
jbe
sbb
insl
add
sbb
imul
mov
test
and
cld
xchg
sub
cwtl
mov
sbb
cmpsb
cmp
mov
push
inc
aaa
cld
aaa
sbb
add
push
sub
cmp
dec
neg
lods
mov
jne
add
adc
mov
imul
xor
ficomps
inc
outsb
pop
in
pop
xor
call
dec
cli
iret
adc
arpl
xor
fscale
or
cmp
adc
xorl
jne
or
shl
lea
dec
aaa
jae
mov
pop
pop
fnstcw
pop
inc
add
add
icebp
dec
stos
add
inc
push
mov
ja
das
jbe
adc
rorb
bound
test
mov
bound
xor
xor
or
adc
and
mov
call
jg
mov
push
add
lret
xlat
es
push
inc
xchg
sti
jg
lret
mov
xchg
clc
jns
pop
mov
jno
dec
sub
lret
mov
xchg
lcall
add
push
pop
and
jae
or
adc
lods
mov
mov
clc
dec
lret
pop
outsl
call
or
mov
into
jp
je
and
bound
iret
imul
jno
jge
jmp
adc
jg
mov
loope
mov
xor
sbbb
loop
xchg
fstpl
jno
xor
in
daa
decl
mov
cmp
lret
add
or
push
or
out
xor
lods
cli
push
or
scas
dec
mov
xlat
int3
cmpsb
popf
mov
sahf
jmp
dec
loope
inc
lods
in
lds
xor
mov
scas
stos
push
push
lcall
cmpsb
cmp
in
and
jg
negl
popa
or
or
xor
in
cmp
cmc
filds
xchg
add
xor
jp
or
jle
xor
mov
xchg
sub
pop
repz
in
hlt
sub
mov
out
movsl
mov
std
cs
lcall
rcll
add
outsl
pop
rcll
sub
daa
mov
mov
int3
mov
fs
cmovo
or
cmp
mov
cmc
call
jo
sub
scas
push
mov
mov
filds
lahf
mov
fsubs
rcr
test
idivb
rcrb
ss
out
mov
outsl
stc
sub
jle
ss
mov
xor
imul
mov
ror
lcall
push
adc
lods
ss
mov
fwait
nop
std
in
mov
mov
dec
hlt
mov
mov
xor
xor
push
dec
test
xor
or
sti
iret
loopne
add
or
ficoms
xor
mov
dec
push
dec
ja
pop
push
adcl
pop
stos
mov
mov
insl
cmp
adc
cld
push
es
sub
inc
dec
push
mov
data16
sbb
mov
sbb
orb
and
lret
cmp
sub
mov
fldenv
fsts
adc
and
dec
adc
xchg
mov
mov
xchg
sbb
aam
gs
sbb
int
cmpl
out
cmp
and
cmp
dec
xchg
out
cltd
aas
leave
inc
adc
and
stc
lret
mov
push
jmp
cmp
lcall
add
frstor
push
add
sub
shlb
xchg
test
sahf
mov
fimull
add
in
inc
aad
stos
mov
das
or
outsl
fsubrs
mov
or
adc
jo
add
fsubrl
pusha
xor
popa
xchg
sahf
shll
push
add
sub
decl
js
out
cmp
adc
ljmp
mov
pusha
test
inc
bound
mov
adc
imull
ret
insb
add
sbb
push
or
mov
into
aam
and
mov
pop
xor
leave
stc
loopne
adcl
xor
fwait
out
pop
int
add
orb
pop
out
lock
hlt
or
fisubl
clc
pop
inc
mov
or
andl
mov
out
test
mov
push
xchg
cmpsb
lret
adc
mov
das
std
aaa
adc
enter
dec
push
sbb
sbb
test
cmpsb
add
stos
adc
xchg
xor
cmp
ds
xchg
mov
pop
and
jg
adc
inc
shrl
pushf
inc
rcl
negb
or
dec
cld
ss
xor
scas
adc
or
or
xor
xor
sub
pop
sub
add
mov
test
negb
je
xchg
xor
sbb
aad
add
or
mov
mov
lcall
and
xlat
pop
rcll
out
cmp
xor
mov
lcall
shll
cmp
lock
clc
inc
mov
lahf
fdivrl
sbb
inc
and
mov
mov
jb
dec
push
sbb
incl
jnp
test
lods
cmp
mul
das
push
lret
ss
repnz
insb
and
loop
mov
or
push
test
ljmp
xor
mov
rclb
mov
mov
mov
xchg
mov
rorb
xlat
sbb
sbb
jp
out
xlat
arpl
es
pop
shlb
sbb
or
bound
loope
inc
scas
adc
aas
and
fxch
inc
inc
add
jg
jg
jl
ret
movsl
or
dec
ficomps
inc
out
fiadds
and
mov
js
fildl
push
xchg
push
fldl
xchg
shll
mov
pop
xor
push
fsubrl
cmp
enter
mov
jl
inc
mov
imul
outsl
pop
or
jge
jne
push
sub
mov
or
outsl
mov
stos
jb
xchg
shrb
daa
insb
sarb
pop
scas
mov
sbb
inc
xor
test
mov
xchg
jbe
fistl
fwait
shll
lea
stos
jmp
mov
mov
rorl
mov
outsl
and
ljmp
adc
out
push
jp
mov
mov
xchg
loop
add
inc
sbb
imul
inc
ja
mov
mov
mov
daa
sub
jmp
pop
lock
and
das
sub
mov
jp
sbb
loope
popf
cld
ljmp
cmp
push
xchg
or
icebp
push
mov
xchg
mov
mov
hlt
push
insb
sbb
and
popf
sub
sbb
out
jo
ljmp
rolb
rcrl
enter
and
jge
pop
adc
addb
mov
stos
cmp
or
xor
jle
and
inc
jecxz
pop
cld
cltd
xor
addl
in
bound
sub
out
mov
pop
pusha
in
pop
jae
movsl
sbbl
cmp
sbb
hlt
call
nop
orb
push
mov
fiaddl
dec
rolb
loop
test
scas
mov
adcl
out
ja
addl
dec
pusha
aad
mov
into
or
cmpl
hlt
dec
imul
outsb
push
andb
add
push
mov
inc
cmc
gs
ficoml
add
fwait
add
pop
out
xor
iret
or
enter
or
ss
enter
or
aam
add
jmp
push
cmp
push
in
jmp
and
or
or
inc
mov
xchg
mov
mov
nop
idivb
add
fldt
sbb
or
bound
lods
orb
jbe
jl
xchg
daa
mov
stos
pmaxub
add
out
mov
pop
mov
dec
and
xor
adc
xchg
cld
fucomp
push
repnz
add
xchg
mov
insl
insl
stc
sti
aaa
jae
and
push
and
movsb
pop
inc
cmc
cltd
dec
inc
ljmp
iret
or
cmp
outsl
js
call
sbb
add
jae
iret
inc
adc
jb
sar
lcall
adc
shlb
xor
xlat
js
xchg
popa
rcrb
dec
in
inc
jne
adc
lock
sbb
rolb
sub
shll
mov
sub
lret
or
addr16
orl
sbb
mov
adc
rorb
outsb
fmull
and
adc
add
aas
or
or
adc
adc
sbb
push
pop
mov
cmpsl
mov
cmp
inc
sub
in
or
xchg
xchg
pop
mov
je
push
mov
fsubl
outsb
ret
adc
jmp
pop
inc
rcll
sbb
bound
int3
orb
insl
rcrl
out
sbb
setl
xor
adc
sub
cmp
pusha
sub
xlat
frstor
and
insb
mov
fucomp
jmp
das
pusha
clc
rorb
inc
adc
pushf
xchg
xor
mov
xchg
xchg
push
fadds
fdivp
data16
mov
loopne
push
pop
insb
push
xor
sub
inc
adcb
jno
push
data16
adc
jae
flds
or
sub
jge
or
pop
push
jmp
mov
xor
aaa
mov
loope
dec
xor
or
insb
sbb
xlat
mov
adcb
movsb
dec
add
jle
cmp
fiaddl
add
fidivrs
in
jno
adc
sbb
les
and
cwtl
add
cmp
roll
dec
sbb
mov
add
dec
or
mov
and
pop
adc
xchg
add
jne
mov
insl
and
roll
pop
sbbb
loopne
adcb
push
mov
loop
inc
cmp
mov
mov
js
mov
inc
lahf
xor
sub
cmp
sbb
adc
add
out
adc
and
add
mov
int
pop
xchg
cld
push
push
shll
ret
xor
imul
icebp
push
add
shl
sbb
mov
shr
jnp
add
and
in
add
add
cmp
rcrl
jne
mov
push
inc
inc
pop
test
jnp
add
mov
cmp
test
inc
jo
adc
add
shll
mov
inc
int
shl
or
pop
cmp
loopne
adc
inc
xlat
add
or
or
ljmp
jne
add
push
ds
add
loopne
fstps
enter
inc
add
and
dec
add
pop
jne
repz
shlb
jae
rorl
adc
jle
add
and
in
imul
xor
adc
out
and
js
das
mov
fucomp
inc
in
push
sub
enter
data16
xor
sbb
das
dec
popa
pop
out
js
andb
xchg
test
ja
shl
add
hlt
mov
fcomip
test
test
jb
mov
and
addl
mov
cld
pop
cs
inc
dec
dec
outsb
mov
arpl
sarl
pop
loopne
rcll
inc
mov
cmc
es
push
mov
cmpsl
pop
addl
xchg
pop
adc
movsl
add
hlt
add
or
or
xchg
add
adc
jae
test
pop
or
data16
data16
outsb
sub
rorb
xchg
push
and
dec
jmp
jo
add
mov
inc
inc
andb
fcoml
push
dec
inc
aaa
mov
dec
mulb
lods
mov
jg
rcrl
pfpnacc
ret
xchg
scas
pop
adc
xchg
cmp
mov
inc
fadds
shl
jl
lods
add
add
fcomip
jp
scas
das
add
xchg
pop
mov
adc
or
cwtl
inc
shl
xlat
adc
sub
add
cs
in
dec
das
or
cwtl
je
shll
lret
cmp
out
jmp
mov
and
clc
inc
lds
neg
sub
cmp
pop
mov
movb
lods
mov
add
shll
stos
shrl
data16
les
sbb
or
dec
addl
push
cmp
xlat
mov
stos
mov
neg
inc
nop
pop
test
js
sbb
pushf
mov
add
sbb
call
test
test
loop
loop
aas
mov
jge
or
stos
cmp
aaa
pop
sub
mov
mov
pop
dec
lcall
negl
data16
add
mov
mov
mov
sub
adc
addl
push
icebp
or
clc
pop
out
adcl
in
jnp
pop
jp
add
icebp
dec
adc
dec
jne
jmp
cmp
or
ret
mov
dec
or
aaa
cmc
mov
fbstp
sti
adc
mov
popa
outsl
shrb
inc
rcrb
cmpsb
test
xchg
jae
push
mov
call
and
pop
jo
mov
push
push
repz
call
jae
xor
cmp
mov
mov
out
mov
cli
fwait
sub
jp
xchg
add
lea
add
xchg
push
das
cmc
jg
adc
add
in
addr16
shll
mov
pop
scas
sarb
mov
mov
mov
mov
and
lods
lds
cltd
aas
add
push
loope
stc
jl
mov
push
add
sub
or
ds
xchg
pop
xorb
mov
jnp
mov
adc
fiadds
movsl
in
dec
add
lret
mov
mov
add
and
sub
pusha
fadds
lcall
loopne
ljmp
add
and
ret
enter
fucomi
ljmp
inc
pop
std
xor
xchg
fbstp
mov
loopne
jmp
dec
add
and
mov
loopne
and
leave
add
mov
xor
jnp
idivb
mov
inc
sbb
dec
mov
ss
push
ljmp
test
xchg
jne
lcall
icebp
bound
dec
jl
add
test
push
mov
mov
stos
and
das
xor
fcmovb
mov
mov
scas
add
repnz
cmp
ljmp
mov
rcll
add
add
push
mov
sbb
inc
movswl
cmp
jmp
shlb
shl
ljmp
push
inc
pop
stos
daa
imul
jb
imul
std
mov
push
pop
movsb
and
add
jg
mov
loope
push
inc
mov
sub
fidivrl
push
sarl
push
subb
adc
adc
pusha
and
add
js
in
or
xor
adc
inc
cmpsl
push
pop
and
mov
rorl
fdivs
cs
cli
aas
imul
roll
or
add
sub
cmp
xchg
add
xchg
pop
clc
les
prefetcht2
mov
sbb
inc
dec
sub
repnz
addb
andb
inc
pop
decl
dec
adc
add
add
lods
push
sahf
push
jne
fbstp
xor
js
jge
adc
xchg
sub
cli
loopne
sub
scas
cmpb
xchg
cld
out
incl
sub
add
lcall
test
adc
das
std
mov
sub
xchg
mov
subb
lcall
mov
dec
subl
stos
push
and
pop
and
jp
xor
les
mov
inc
add
test
adc
ljmp
pop
testb
pop
mov
and
aas
lret
mov
push
cmpb
sar
adc
pop
test
addl
pop
test
lods
cmp
int3
and
shr
or
pop
jp
insl
push
sbb
xlat
mov
pop
pusha
mov
mov
push
adc
sbbb
imul
int
or
scas
pop
in
and
sbb
aaa
lea
jp
shr
imul
and
movsb
in
repnz
mov
sub
outsl
dec
into
mov
cmp
sbb
les
mov
sbb
or
adc
je
mov
cs
and
adc
dec
sbb
add
sbb
mov
jnp
into
pop
dec
int3
jmp
lock
inc
pop
mov
data16
sbb
lock
cmp
std
scas
arpl
shll
mov
inc
sbb
cmp
jae
fisubl
pop
adc
add
or
jp
clc
mov
icebp
les
adc
add
pop
jmp
cmpb
sbb
xchg
add
stos
adc
mov
jo
push
leave
ret
adc
nop
mov
mov
repnz
and
and
incl
cs
inc
mov
xchg
aam
sub
sub
add
push
rolb
sub
pushf
xchg
hlt
in
js
xor
cwtl
mov
push
aam
inc
lret
fildl
jb
mov
adc
xor
addb
les
jbe
call
lret
wrmsr
inc
inc
shrl
mov
jecxz
andl
in
dec
push
and
clc
push
push
mov
out
push
fisubrl
jae
adc
and
pop
loopne
aad
inc
loope
insl
or
jecxz
test
mull
and
pop
mov
or
shll
inc
dec
add
orl
cmpsl
stc
ljmp
ret
mov
or
outsl
or
inc
outsl
cli
jp
cmp
or
lret
dec
sub
sub
loop
push
sbb
add
in
adc
mov
les
pop
inc
insb
xchg
jo
sbb
inc
cld
hlt
pop
xor
sbbb
movsl
clc
mov
ret
jne
mov
fdivr
outsl
adc
xchg
scas
inc
mov
push
sahf
pop
imul
and
mov
adc
or
mov
sub
cld
jnp
in
ret
mov
imul
pusha
inc
jne
jg
ljmp
jno
and
stos
js
push
lock
bound
cmp
dec
add
sbb
fists
pop
add
out
add
cmp
sti
lods
jno
xchg
and
ret
mov
shll
mov
pushl
add
sti
inc
imul
jge
add
ficomps
andb
mov
loopne
std
filds
clc
xchg
and
xchg
inc
leave
mov
cmp
add
aaa
jp
ljmp
mov
fdivrp
test
movsb
fistps
sbb
cmpl
and
add
jg
lock
xor
push
cmpps
inc
xor
icebp
mov
adc
xchg
xorl
fwait
push
pushl
cld
jo
xchg
push
out
outsb
xor
jne
pop
sbbl
adc
imul
and
je
lcall
sbb
or
jmp
inc
dec
jg
sub
enter
pop
or
add
pop
in
sbb
inc
mov
dec
mov
repnz
and
and
xchg
dec
inc
mov
jecxz
mov
mov
adc
mov
and
call
inc
test
outsl
daa
or
cli
push
lods
movsb
repnz
addb
mov
rolb
sbb
icebp
fiadds
mov
mov
add
shrb
push
stos
and
mov
add
gs
adc
aam
sbb
or
mov
sub
addr16
je
add
roll
movsl
or
dec
sbb
ror
cltd
jae
jg
jne
fldcw
roll
das
dec
les
xchg
out
es
sbb
sub
js
mov
add
or
nop
cwtl
fldl
xlat
push
mov
movsb
fucom
sbb
fimuls
pop
mov
rclb
add
std
decl
jne
ret
add
stos
fcoms
aad
enter
dec
dec
test
push
mov
es
nop
mov
mov
scas
sbb
fistps
shll
sbb
lds
push
lds
loopne
adc
jg
push
mov
shlb
dec
push
imulb
add
int3
loop
mov
test
mov
shll
cmp
mov
fwait
cs
add
cmpsl
mov
enter
xor
ss
dec
out
mov
jl
loop
dec
mov
sar
jbe
jnp
sub
pop
sarl
test
pop
add
or
cmp
ss
fisttpl
test
cmpsl
sub
movsl
outsl
xchg
sub
inc
or
jge
mov
push
retw
jno
and
add
add
xchg
mov
loope
mov
add
sbb
sub
mov
or
loope
mov
adc
sti
mov
out
mov
dec
push
mov
rol
and
jo
push
std
or
push
mov
lahf
in
dec
dec
cmp
out
out
sti
push
jae
das
adc
or
mov
add
imul
shll
test
add
icebp
incl
lea
xchg
loope
cs
lods
shl
jg
or
jecxz
cmp
subb
outsl
fstpt
popf
add
cmp
loope
push
mov
aam
test
sbb
jmp
sbb
int3
mov
dec
lock
fldl
sbb
orl
xor
sub
pop
cwtl
mov
imul
adc
rclb
jnp
or
jmp
pop
mov
std
repz
imul
cmp
push
push
popl
rcr
or
inc
popa
cmp
push
mov
add
rolb
push
jl
and
lcall
cmp
loop
add
add
or
push
je
aam
lds
cmpb
pushf
xor
xchg
daa
xor
and
mov
or
sub
mov
imul
sar
dec
loopne
cli
and
jne
pop
adc
pushf
leave
adc
dec
add
xchg
push
xor
lods
aas
mov
fldl
fcomp
js
add
mov
mov
add
sbbb
add
xor
lret
and
or
mov
loopne
mov
and
inc
pop
or
repz
aam
ret
aam
xchg
arpl
repz
add
fadds
stos
or
add
adc
in
movsl
pusha
or
or
lahf
or
push
sti
aad
pop
adcl
cmp
data16
je
loopne
sbb
jmp
adc
sbb
pop
xchg
mov
cs
fsubs
xor
xlat
jle
test
push
mov
xchg
dec
movsl
stos
or
ja
inc
and
jno
add
mov
loop
fdiv
sti
sub
cld
jmp
xchg
pop
jg
cld
pop
call
fisttpll
ss
jne
add
jp
cmpsl
dec
test
mov
xchg
pop
sbb
or
add
or
push
mov
ss
insl
xchg
flds
hlt
mov
out
fists
nop
jnp
push
xor
mov
addl
lock
lds
push
pusha
fcoms
out
fists
out
and
dec
add
pop
and
loope
int3
lahf
popf
bound
adc
inc
mov
lock
jns
out
int
bound
or
adc
pop
movsb
and
sti
xor
push
faddl
xchg
in
ret
ljmp
sub
arpl
and
mov
add
stos
sbb
dec
pop
push
repnz
daa
cmpsb
add
decb
mov
fdivr
adc
and
push
jp
cmpsb
sbb
or
rorb
cmpsl
dec
test
sub
push
loop
hlt
add
mov
mov
movsb
incl
ljmp
adc
mov
mov
mov
xor
dec
jecxz
imul
mov
xchg
xchg
pop
repz
and
pop
push
aaa
lock
adc
adc
mov
stos
push
adc
mov
push
test
xor
or
inc
fwait
and
loopne
sbb
xchg
adc
call
mov
jb
shll
gs
or
add
lods
js
mov
mov
mov
sbb
test
mov
lahf
or
loop
outsb
add
dec
adc
and
outsb
lods
pop
add
inc
jg
not
mov
js
pop
sub
mov
fisubrl
sub
es
out
call
and
shl
add
and
shlb
call
mov
push
and
push
jmp
jae
in
andl
or
inc
les
insb
bound
xchg
xchg
sbbb
sbb
lahf
mov
cmp
shrl
xor
add
or
imul
flds
xchg
dec
inc
ret
or
inc
test
loopne
hlt
dec
repnz
lahf
sbb
mov
nop
mov
inc
jno
inc
les
ret
xchg
adc
adc
push
pop
data16
or
mov
jne
jp
mov
out
add
cmp
pop
adc
fwait
and
or
dec
adc
cmpsl
pop
inc
xor
sbb
xor
add
add
jp
or
xchg
test
sahf
cmp
shl
sbb
mov
jmp
dec
dec
inc
mov
add
pop
jo
repnz
dec
xchg
ficomps
inc
xor
aaa
or
mov
popf
lods
inc
rcrl
mov
cmpsb
shlb
call
mov
ret
inc
xor
fstps
fistps
data16
or
outsb
mov
shlb
and
rolb
shrl
sub
gs
xchg
stos
cli
lahf
int3
ret
cmpsb
stos
pop
dec
pushf
testl
int
add
outsb
into
sbb
sub
xchg
xor
lock
dec
add
adc
inc
test
mov
and
stos
call
xor
repz
cmc
fbld
orl
mov
add
add
bound
jp
cmp
daa
mov
xchg
xchg
sub
imul
sub
and
fdivp
icebp
xchg
sub
add
pusha
dec
adc
ret
lret
cmp
les
popa
cwtl
loop
jbe
sbb
push
mov
dec
or
les
aaa
out
adc
shr
jne
jb
outsb
stos
aam
in
push
mov
push
push
rorl
pop
ds
inc
jo
and
add
mov
hlt
cwtl
inc
xor
popf
adc
sbb
push
orb
fnstsw
loop
test
push
sbb
mov
out
add
xor
sub
fcoml
aam
in
inc
jae
push
or
mov
popf
js
mov
push
fimuls
mov
jg
lds
add
pop
addr16
dec
pop
inc
add
aam
call
lea
cli
add
jo
jge
stc
xor
mov
pop
cmpb
in
xchg
ret
mov
mov
and
inc
xor
sub
inc
mov
inc
jp
movsl
pop
mov
mov
xor
sbb
jg
adc
or
int3
add
cmp
imul
loop
and
and
adc
outsb
adc
jl
adc
pop
jmp
mov
add
lret
inc
jno
mov
ret
jg
fsubs
adc
inc
or
ss
push
out
mov
xor
xor
insl
add
adc
adc
test
das
rcrl
cld
mov
inc
xchg
int
xor
js
add
inc
add
xor
add
test
jg
xchg
pop
dec
std
les
adc
inc
insb
mov
push
sbb
adc
ljmp
loopne
mov
pop
or
sub
jl,pn
shlb
call
push
popa
dec
cmp
stos
into
mov
mov
jmp
xchg
imul
inc
sbb
sbb
dec
adc
stos
add
push
cmc
cmpsb
jb
aad
and
xor
shlb
add
jg
jne
adc
jae
gs
pop
cmp
pushf
or
imul
push
dec
adc
adc
lcall
and
shlb
cs
into
sbb
or
cltd
jmp
fistps
add
mull
or
movsb
pop
jge
push
add
cmp
shlb
mov
push
cld
ss
nop
xchg
dec
push
pop
clc
js
inc
inc
cld
or
ds
lds
ficoms
aad
fldl
dec
mov
into
mov
xor
adc
inc
cmc
fmuls
rcrl
sub
or
inc
xor
adc
mov
cmc
test
mov
mov
sub
inc
std
add
push
pusha
inc
ret
pop
and
mov
popf
pop
mov
jg
xchg
jecxz
outsl
cs
in
and
inc
inc
mov
mov
add
pusha
mov
mov
mov
test
cmpsl
pusha
cmp
dec
rolb
sub
mov
add
and
aad
ret
cmpsb
or
mov
movsl
call
loope
out
jae
jg
cmc
lea
adcb
push
addl
jp
aam
add
push
mov
push
pop
fucomi
cmp
pusha
push
movsl
add
mov
add
mov
jbe
sbb
std
jg
jno
bound
mov
pop
adc
add
mov
fdivs
imul
inc
sbb
mov
outsl
add
xchg
in
sub
es
push
jno
hlt
or
xlat
dec
inc
ret
add
outsl
aas
rcll
pop
stos
out
push
nop
rcll
xchg
fmuls
push
fisubrs
adc
ret
aas
jl
les
push
sub
cmp
mov
jg
fistpl
mov
push
lea
xor
dec
or
adc
dec
movsb
rorb
clc
in
push
imul
mov
add
pop
cmovo
mov
insb
add
mov
out
lods
mov
fidivl
out
enter
pusha
jle
jno
mov
sub
cmp
xchg
imul
add
nop
insl
cmpsb
out
pop
mov
movsl
pop
or
mov
push
fnstenv
aaa
push
push
xlat
or
cmp
jle
push
subb
or
mov
test
xchg
dec
cli
and
cs
cmc
sar
xchg
scas
les
dec
jp
stos
mov
push
inc
pop
push
outsl
mov
sub
or
pop
pop
fimull
clc
push
int3
jmp
mov
ficoml
sub
arpl
cwtl
fcmovnu
ss
fs
into
or
sub
lret
mov
sbbb
addr16
in
rclb
inc
push
dec
pop
rorl
and
movsb
mov
fadds
sbb
ret
mov
mov
imul
leave
or
xchg
and
mov
idivb
ja
loopne
and
popf
push
mov
and
aad
orl
inc
cmc
pop
int3
xchg
aam
popf
inc
imul
gs
ss
pop
ja
ljmp
mov
mov
lret
loop
jno
push
clc
cmc
cld
or
dec
mov
loopne
xchg
add
dec
hlt
jmp
adc
push
fs
mov
mov
mov
stc
push
fiadds
inc
inc
lret
iret
stos
cmp
lcall
cmp
xor
push
stos
dec
iret
cli
test
stos
clc
sbb
imul
dec
int
clc
pop
addb
jp
cld
mov
or
jle
mulb
inc
cmp
bound
add
mov
dec
or
push
out
lds
jmp
pop
jle
sub
or
mov
pop
mov
in
fnstcw
push
inc
push
lea
or
and
sbbl
outsb
imul
cli
pop
lods
cmp
popa
and
pop
insb
mov
lock
sti
lods
jb
push
mov
aam
push
mov
loope
sub
mov
fcomps
rorb
loope
and
cmp
ret
nop
cmp
and
sbb
fsubrs
add
sbb
jbe
and
outsl
mov
pop
inc
jb
loop
popf
push
pushf
in
imul
adc
mov
test
popa
stos
push
popf
loopne
pushl
je
insb
jge
sbb
mov
lock
test
ret
les
faddl
iret
popa
adc
out
push
decb
mov
or
cmp
adc
daa
outsb
loopne
push
loope
and
adc
add
data16
movsb
pop
test
sub
sbb
cs
fs
xchg
das
jbe
outsl
add
inc
mov
fbstp
insb
cmp
jbe
insb
and
out
test
decl
mov
xchg
in
xor
and
cmp
mov
loope
pop
gs
gs
inc
jns
dec
movsl
sbb
movsb
dec
sub
dec
rclb
call
inc
lods
stos
xchg
in
aaa
or
ds
pop
mov
dec
test
and
stc
repz
cltd
icebp
adc
or
or
jbe
inc
add
shll
jbe
sbb
xchg
xchg
les
notl
adc
inc
mov
aaa
dec
xchg
repnz
adc
ljmp
mov
mov
adc
in
pop
stos
mov
jno
lcall
xchg
mov
bound
cwtl
pop
sub
stc
and
aam
test
das
jge
mov
mov
mov
sub
scas
pop
cmpb
mov
push
outsl
loopne
sarl
lock
and
lcall
cs
sbb
push
mov
inc
pop
pop
in
popf
sti
orl
cmp
jnp
scas
and
sbb
jbe
jecxz
push
pop
or
or
outsl
inc
jmp
mov
jno
mov
frstor
cmp
out
xorb
movsl
jbe
aaa
in
push
es
loop
hlt
int3
outsl
sbb
push
cli
or
or
ljmp
push
inc
push
out
enter
jecxz
xor
out
and
mov
stos
ret
fdiv
add
xor
jno
sbb
outsb
inc
pop
movsb
cmp
add
sub
xchg
pushl
xor
mov
movsb
ds
mov
mov
test
xchg
cmp
sub
mov
jno
in
inc
aaa
loop
mov
mov
mov
jae
xchg
je
inc
sub
lock
je
in
cmp
fcomip
xchg
pop
stos
mov
jg
add
shrb
adc
sub
cmp
das
sbb
in
adc
cmp
test
test
rclb
push
gs
mov
data16
sbbl
popf
xchg
jne
push
push
jle
jecxz
outsb
insl
add
dec
test
push
loopne
dec
pop
outsb
xchg
cmp
sarl
and
or
test
out
or
sti
cmp
add
aam
mov
popa
sbb
push
sets
lahf
xchg
testb
adc
out
mov
and
mov
jbe
cmc
push
mov
js
dec
pop
dec
nop
rorb
lea
push
and
jae
mov
icebp
sbb
rcrb
and
loop
aam
push
fmuls
shlb
jne
rcl
fbld
das
jne
xchg
shlb
js
pop
mov
jle
rcrb
decb
jle
ss
and
fimull
push
pop
or
aaa
clc
cwtl
bound
pop
test
xchg
xor
inc
je
lret
hlt
aaa
jle
xchg
movsb
and
push
jmp
sbb
mov
sbb
out
push
xchg
xchg
adc
test
jg
repz
adc
rorb
push
out
ljmp
and
lods
mov
callw
push
addr16
cmp
pushl
and
xor
sub
pusha
rcll
push
or
mov
xchg
pop
mov
lahf
pop
and
sbb
xchg
popw
bnd
sub
mov
push
inc
sub
sbb
xchg
aas
and
incl
pushf
cmpsb
push
scas
xchg
jle
cmp
mov
inc
int3
roll
cs
fstps
daa
loopne
lock
adc
inc
push
and
daa
xorl
test
or
loop
sub
hlt
pop
add
push
lds
call
push
mov
hlt
ret
call
mov
lods
sbb
ficomps
push
cmp
jne
fwait
stos
cmp
scas
pop
adcb
loopne
roll
loope
sub
mov
jg
dec
mov
in
adc
adc
and
adc
pop
xor
xorb
rcrb
pop
in
adc
outsb
pop
xor
enter
addr16
fnstcw
into
in
cld
xchg
sbb
dec
push
jo
fisttpl
fcmovnb
mov
sbb
or
and
testl
inc
repnz
jo
xor
adc
mov
shl
and
test
shr
outsl
dec
and
test
sub
cmpsb
out
mov
or
pushf
add
adc
sbb
add
inc
push
incl
arpl
cltd
and
push
aas
pop
outsb
mov
fldenv
ss
aas
lcall
adc
cltd
loop
mov
enter
cmp
je
adc
xchg
adc
mulb
fcmove
fldcw
add
pop
aad
inc
aam
inc
pop
movsb
cmpb
push
fndisi(8087
add
std
push
cmp
insb
aaa
sub
fwait
xor
mov
sahf
cmc
mov
add
dec
push
xor
or
mov
add
addl
mov
les
xchg
or
or
push
fdivr
jg
sbb
aam
sbb
dec
mov
cmp
icebp
add
pop
adc
push
sbb
frstor
add
stos
push
cmp
inc
pop
lock
pop
data16
or
xchg
xor
loopne
aam
in
cmp
inc
mov
ficoml
xchg
mov
stos
mov
les
sbb
mov
push
pop
push
insb
fucomp
test
mov
cmp
pop
push
or
call
pop
jno
out
add
hlt
test
into
lods
and
in
ds
js
aad
fmull
enter
push
lea
mov
arpl
mov
jnp
pop
push
daa
sbb
dec
jg
and
ds
pop
mov
xor
add
mov
outsb
stos
dec
adc
push
pop
fucomi
fsts
or
aad
outsb
sbb
lods
xor
mov
jnp
dec
dec
fsubl
sbb
and
lahf
add
sbb
addr16
jnp
xchg
dec
pop
lahf
mov
ret
dec
mov
test
ljmp
cmpl
or
jae
adc
pop
dec
sub
outsb
mov
xor
add
or
test
pop
sub
pop
call
xchg
fld
loope
aam
loope
dec
add
aas
adc
enter
aad
cmp
xchg
das
loope
jp
pusha
or
inc
loop
push
pushf
lock
insl
out
xchg
sub
arpl
pop
sahf
lret
mov
mov
insb
out
push
mov
stos
sub
dec
mov
fwait
inc
roll
aad
clc
cmp
movsl
gs
mov
inc
push
push
insl
add
cmp
hlt
arpl
jno
push
xchg
add
cltd
xor
push
cltd
push
and
sbb
fmuls
mov
xlat
aad
fsubs
push
dec
inc
xor
fcmovu
xchg
sarb
mov
add
and
imul
fisubrs
adc
push
es
mov
arpl
faddl
les
int3
fnstcw
mov
push
sahf
mov
add
mov
adc
ljmp
js
shll
or
mov
cwtl
adc
dec
mov
mov
outsl
add
ja
decl
sbb
push
push
js
shl
and
pop
mov
xchg
inc
push
mov
and
fincstp
shlb
cmp
mov
inc
dec
inc
inc
jb
dec
push
jmp
notl
icebp
das
hlt
add
add
repnz
ss
andl
mov
inc
xor
mov
xor
push
xchg
add
inc
or
ss
mov
mov
pop
add
add
repz
daa
adc
test
lea
rcr
fadds
and
xchg
add
rolb
adc
subb
call
fisttps
mov
mov
sub
mov
adc
dec
add
mov
push
mov
rcrb
and
andb
lock
andb
aam
sbb
lcall
insl
adc
pop
add
xchg
test
iret
add
cmpb
out
aad
sbb
push
outsl
mov
push
xor
dec
and
add
mov
jbe
aas
cmp
cmp
add
inc
in
add
stos
inc
ror
jp
xchg
pop
rorl
push
jl
frstor
xchg
fistpll
xor
cmc
xor
ret
inc
aas
mov
rcrb
and
ret
in
cmp
inc
rclb
insb
xor
push
inc
adc
jecxz
sub
rcll
cltd
mov
inc
cmp
ficompl
dec
add
and
mov
push
xor
xor
mov
mov
popa
es
cmp
cmp
adc
sub
or
push
mov
sbb
mov
cmovns
fistl
popa
fmuls
jbe
xor
add
xor
mov
pop
pop
hlt
inc
leave
push
or
xchg
mov
xor
scas
stc
inc
inc
xrelease
add
inc
or
xor
cmpl
rcll
int
sbb
cmpsl
xor
mov
xor
enter
and
and
inc
cmp
outsl
std
add
or
jno
mov
outsl
gs
inc
es
add
fxtract
out
add
pop
les
or
adc
xchg
inc
insl
dec
mov
pop
and
bnd
sub
pop
sbbb
mov
xchg
adc
pop
xor
mov
inc
dec
adc
adc
mov
mov
cltd
test
jo
push
xor
ret
adc
clc
inc
dec
push
hlt
mov
inc
xchg
je
bound
adc
popa
cmp
pusha
in
movsb
mov
mov
xor
xchg
lock
mov
shrb
ficoml
mov
mov
dec
or
sbb
data16
pop
mov
mov
adc
ss
sarl
lds
sub
dec
or
push
sub
and
aad
lods
mov
sbb
addr16
sar
mov
sbbl
xlat
das
lock
inc
adc
or
mov
push
add
lods
add
push
jg
mov
adc
cmp
mov
rolb
mov
test
or
ret
dec
mov
inc
in
outsl
cmc
negb
dec
adc
dec
aaa
pusha
out
mov
dec
inc
mov
jle
xchg
pusha
push
add
or
push
arpl
or
dec
ljmp
fnstenv
sbb
add
ljmp
push
mov
push
outsl
pop
inc
sti
mov
add
divb
aaa
pop
inc
sar
icebp
jnp
in
test
rol
mov
fdivrs
push
insl
add
jp
xchg
ljmp
mov
insl
call
dec
push
loope
sbbl
xlat
jle
sbb
pop
mov
cli
inc
xchg
and
push
outsl
inc
testl
mov
mov
mov
jae
subb
add
mov
jle
mov
mov
xlat
ss
mov
and
add
fcomps
ljmp
xor
xor
push
repnz
add
out
orb
divl
xchg
push
add
das
les
add
add
aaa
jb
adc
fimuls
pop
ror
mov
pop
or
fistpl
xchg
dec
sub
test
and
mov
hlt
mov
fcomi
adc
and
push
and
cmpsl
inc
test
mov
jmp
mov
add
or
sbb
dec
jo
pop
ficomps
fdivrs
loopne
stos
cmpsl
xor
clc
jmp
jge
movsl
cli
inc
adc
inc
rcll
aas
pop
xor
out
cwtl
sub
mov
jge
addl
fcmovnbe
add
popf
imul
or
dec
insb
lods
mov
clc
sub
lret
add
add
iret
or
lret
and
add
lret
push
je
mov
in
insl
or
test
mov
jbe
jno
add
cwtl
pop
inc
mov
mov
sbb
test
fidivrs
hlt
xchg
les
xchg
xor
sahf
dec
sbb
inc
out
mov
mov
mov
mov
inc
xor
jno
andb
mov
jecxz
cmp
roll
add
mov
outsl
lods
dec
mull
dec
loope
arpl
addr16
scas
mov
sub
fs
and
xchg
repz
mov
fisubs
push
adc
enter
in
pop
xchg
les
loopne
mov
test
push
cmp
pusha
dec
add
and
jbe
ficoms
add
dec
sub
lahf
and
lock
ja
cwtl
aam
in
push
bound
orb
sbb
enter
inc
stos
and
mov
add
iret
cmp
lds
mov
rcrb
clc
cld
push
push
outsb
push
cmp
loopne
fcoml
xlat
mov
xchg
cwtl
mov
enter
inc
sub
sub
push
xadd
push
fcomip
addb
arpl
sbb
and
in
ret
inc
inc
fiaddl
push
or
inc
lock
mov
jecxz
fsubrp
jle
jg
add
fsub
icebp
inc
push
int3
adcb
push
pop
and
sahf
test
daa
jbe
add
jnp
int3
imul
cli
idivl
loop
push
push
add
mov
mov
test
xor
inc
or
leave
and
test
sub
adc
adc
xchg
xor
rcl
xor
sub
inc
jmp
loopne
stc
enter
push
xchg
sbb
sub
repz
pop
fdivrl
faddp
xlat
out
sub
inc
notl
movsl
xchg
add
add
mov
add
mov
lods
sub
add
lahf
fiadds
mov
andb
insb
int3
sbb
loopne
ljmp
negb
bound
inc
stos
test
mov
push
pop
rcrl
ret
int3
inc
dec
dec
js
jecxz
icebp
or
add
in
int3
cltd
or
sub
fadds
jb
ja
push
dec
bound
adc
adc
jg
test
fldenv
inc
adc
cmpsb
dec
add
mov
dec
push
dec
fs
addb
gs
or
fdivl
or
clc
hlt
add
popa
pop
shlb
xchg
clc
pop
stc
aaa
jo
shlb
adc
xchg
sbb
sub
dec
cmpsb
xchg
or
push
fdivrl
or
xchg
sub
outsl
sbb
xchg
mov
mov
pop
sahf
popf
loopne
sub
jae
das
mov
and
scas
add
hlt
dec
je
push
or
adc
dec
xor
ret
xchg
jnp
and
adc
in
stos
mov
xor
shlb
call
adc
adc
xchg
sub
xor
cmp
mov
add
insl
xchg
add
and
test
mov
push
mov
loopne
push
dec
rclb
cli
mov
test
icebp
xchg
xor
subb
mov
xor
mov
push
add
dec
inc
or
subb
xchg
fcmovnbe
jp
ljmp
add
cmp
sub
adcb
movsb
xchg
add
xchg
jbe
dec
mov
mov
adc
xor
imul
mov
loop
pusha
jo
inc
es
inc
add
push
mov
out
cmp
cs
fsubs
dec
dec
je
sub
jns
push
les
sub
add
mov
sbb
lret
dec
cmpsl
dec
loop
push
mov
dec
inc
pop
push
ds
cmp
mov
adc
mov
fisubl
cmp
incl
xor
push
push
out
pop
mov
mov
out
adc
add
lock
in
push
and
out
lods
sub
xor
testb
xchg
xchg
jno
mov
std
aas
int
fs
push
sub
pop
push
jo
dec
cmp
pop
adc
inc
xor
rclb
fcompl
sbb
adc
push
ja
cmove
pop
bnd
mov
insl
adc
cwtl
mov
push
shlb
scas
inc
into
jo
mov
push
sbb
sub
jns
mov
sbb
sub
add
and
shlb
xor
mov
lds
shll
aas
jo
aam
or
test
push
mov
add
sbb
add
ja
repnz
repz
add
addb
adc
sub
pushf
inc
lret
into
push
repnz
inc
dec
outsl
and
jmp
mov
aam
popa
dec
add
sub
mov
mov
fwait
addr16
inc
sub
lcall
hlt
adc
jne
sbb
pop
int
mov
aam
cld
xor
ficomps
cmpsl
inc
xor
xchg
sti
daa
and
push
out
mov
add
pusha
or
loopne
js
mov
mov
sub
je
or
and
or
lret
mov
add
add
and
mov
test
imul
pop
and
andl
push
dec
adc
inc
sbb
mov
and
add
shlb
mov
and
mov
cmp
sbb
adc
outsl
adc
and
or
cmp
aaa
in
aaa
movsl
dec
add
add
sub
shll
sti
push
mov
test
or
xor
lods
gs
jno
jno
lds
inc
xor
enter
sahf
stc
push
jo
xchg
or
inc
test
pop
call
aam
xchg
bound
mov
call
roll
inc
subl
in
push
fimuls
int3
bound
call
mov
negl
dec
testl
hlt
inc
rolb
add
cmpsb
pop
decb
out
in
adc
fwait
addr16
shll
adc
adc
sub
push
and
repnz
push
xor
rorl
pop
hlt
sub
mov
or
into
ret
or
jo
cmpsb
jb
pop
lods
test
outsb
xor
enter
aaa
lock
movsl
cmpsl
sub
add
aad
ja
fidivrs
movsl
nop
scas
add
push
out
mov
ljmp
ss
adcb
or
pop
mov
loopne
jecxz
incl
std
lods
xchg
mov
push
sub
out
aaa
lret
aam
aad
mov
and
jp
mov
fwait
sub
xchg
jg
dec
jnp
cltd
decl
cltd
daa
xchg
add
cmp
cmpsb
add
cmp
loope
mov
push
mov
mov
lds
cmp
je
xchg
add
aaa
imul
and
shl
push
mov
addb
xor
sbb
add
jg
lods
sub
mov
and
test
js
out
fs
js
pop
lock
or
inc
insb
in
in
cs
lcall
mov
loop
and
dec
lods
pop
mov
insl
cmp
dec
aaa
rorl
push
cmp
mov
outsl
je
out
jge
sti
shll
mov
sbb
or
nop
sarl
test
add
xchg
lods
and
jle
add
pushf
xchg
sbb
xchg
adc
xor
adc
pop
or
lock
pop
enter
and
iret
pop
addl
add
and
or
es
push
and
aam
or
int3
or
push
loope
loopne
in
xor
xchg
dec
add
jg
fiaddl
mov
pushl
cmp
adc
or
ret
mov
cmp
fwait
lods
test
inc
push
call
push
loopne
xchg
gs
test
in
cmp
imulb
ljmp
jle
mov
xor
xor
or
xchg
or
bound
dec
cltd
mov
ret
mov
orl
cmpsb
dec
add
insb
movb
cld
incl
in
jns
pop
add
or
push
icebp
loop
js
loop,pn
hlt
negb
cs
ja
push
mov
repnz
xchg
dec
cld
sbb
pushf
jmp
test
jl
push
mov
outsl
xchg
lods
jns
movsl
stos
inc
test
stc
fwait
je
pop
add
xor
lret
ljmp
icebp
adc
jb
inc
push
pusha
and
jmp
jo
sbb
ja
orl
loopne
adc
sub
or
popl
sub
hlt
or
xor
and
xor
cmc
inc
push
lods
mov
sbb
pop
js
add
jg
mov
mov
repz
add
mov
inc
add
outsb
test
ret
mov
cwtl
xor
inc
in
lcall
and
in
mul
mov
push
cmp
add
mov
or
mov
pushf
mov
or
or
push
scas
dec
cmp
add
test
loop
ljmp
jno
leave
pop
les
pop
subb
add
cmp
pop
loop
stos
outsb
pop
mov
les
inc
enter
or
adc
dec
cli
loop,pn
rcrl
hlt
mov
lcall
pop
mov
scas
xor
xor
das
or
cmp
sub
add
push
xchg
insl
mov
dec
cli
mov
jg
mov
mov
stos
hlt
mov
js
pushf
std
cmp
cld
movsl
xchg
sbbb
dec
fs
das
jl
sub
ds
in
shlb
cld
ljmp
rclb
es
mov
adc
in
insl
sti
aaa
mov
enter
dec
jmp
cli
jg
jbe
popa
push
adc
push
and
add
aaa
outsl
icebp
lea
xchg
es
push
adc
leave
repnz
add
test
add
les
and
xor
incb
ljmp
rolb
push
aaa
bound
icebp
push
adc
push
mov
lcall
pop
xchg
push
or
add
bound
pop
rclb
adcb
sbb
orb
sub
mov
int3
clc
in
das
inc
and
aam
xchg
aad
lret
sub
roll
ret
jmp
mov
pushf
mov
jb
add
mov
inc
clc
popa
test
fucom
movsl
ja
jp
iret
dec
adc
mov
fldt
xchg
ret
or
dec
test
adc
frstor
mov
push
jmp
or
push
sbb
jbe
sti
mov
lds
cmc
pop
push
loopne
xor
insl
fidivrl
cli
mov
movsb
adc
out
ret
add
test
dec
xor
push
inc
inc
inc
or
xchg
std
je
lret
cmp
aam
push
scas
insb
push
ret
sti
scas
xor
cmp
adc
sbb
mov
pop
adc
test
outsl
outsb
fimuls
int3
test
int3
cmp
jo
push
mov
sub
fsubl
cmp
outsl
inc
mulb
xor
lcall
sub
add
add
jno
clc
call
xor
fbld
inc
adc
pop
call
ja
loop
aam
sbb
sbb
test
dec
cmc
dec
das
cmpsl
dec
rcrl
lock
jnp
pop
and
sbb
sub
pop
cs
shll
cwtl
cmp
leave
jo
sub
jle
incl
je
out
adc
sbb
xor
push
fwait
incb
mov
clc
repnz
lea
outsl
dec
insb
xchg
jnp
push
jl
lock
shll
mov
repz
mov
test
repz
std
les
inc
das
outsb
adc
pop
dec
adc
rorb
fs
leavew
inc
sub
mov
icebp
inc
jno
and
and
incl
cmp
xchg
aam
cli
aaa
or
fwait
cmp
int
add
ja
push
stc
inc
dec
mov
sbb
xchg
shr
cmpsb
loope
fisttps
fsubrl
ljmp
xor
mov
jecxz
or
orb
call
je
filds
xchg
aas
hlt
pop
mov
and
mov
cwtl
sbb
fistpll
xchg
fiadds
xchg
dec
test
dec
xchg
cmp
clc
mov
cmp
lds
dec
mov
pop
insb
xor
sub
or
pusha
mov
cld
xor
mov
mov
stc
ds
push
in
push
ljmp
daa
dec
sub
adc
fisttpl
sub
mov
nop
xchg
dec
das
lock
aas
fimuls
lcall
pusha
mov
and
dec
pop
popf
xorb
addb
aaa
mov
out
std
test
mov
push
ja
pop
insl
pinsrw
mov
xor
or
dec
add
sahf
push
ffreep
jmp
push
mov
ret
aas
std
mov
lcall
cmp
fwait
push
xor
in
scas
out
xor
mov
mov
pxor
and
mov
adcb
lds
icebp
enter
cmpsb
movntps
adc
cs
push
mov
loopne
pop
or
mov
adc
inc
les
dec
inc
jno
push
orl
cmp
sub
jne
in
loopne
aam
push
dec
adc
test
pop
movl
test
mov
push
sarb
or
add
ja
pop
xchg
inc
jno
cmp
mov
or
jecxz
je
mov
insl
add
cmp
out
mov
jne
add
or
push
adc
jmp
ljmp
cmp
inc
add
jge
inc
dec
out
fiaddl
adc
scas
sub
fs
cmc
adc
jecxz
and
mov
xchg
fadd
pop
test
adc
pop
icebp
mov
and
leave
lret
rcll
divl
clc
cmp
sbb
push
xchg
jb
add
or
addr16
cmp
and
je
fwait
add
jl
addb
daa
fs
hlt
adc
mov
and
dec
mov
scas
xchg
mov
popf
gs
sbb
std
lds
add
add
mov
jmp
cmpsl
lock
xor
les
adc
or
mov
addr16
sub
imul
jp
pop
sub
and
jecxz
add
add
add
inc
xchg
in
lock
push
sar
xchg
sti
orb
pop
inc
cld
mov
sahf
lcall
add
add
jecxz
xorb
sub
adc
pusha
push
roll
and
xor
ret
call
cmpsl
sub
call
roll
hlt
xor
adc
stos
rolb
out
adc
push
outsl
out
icebp
call
lods
loopne
lock
orb
dec
push
mov
xchg
lock
outsb
les
and
dec
das
bnd
fcmovnbe
imul
popf
sub
pop
cld
in
movb
adc
pop
add
xor
mov
lret
xchg
mov
loopne
enter
popa
push
add
movl
push
imul
cmp
add
cwtl
adc
in
add
pusha
or
and
scas
orb
mov
mov
jmp
gs
push
aaa
fs
push
adc
out
aas
mov
mov
inc
pusha
mov
dec
in
adc
xchg
orb
ja
mov
and
ret
push
outsl
jne
jo
xor
adc
or
pop
inc
pushf
addl
and
and
outsl
icebp
stos
test
insl
in
out
sti
jg
clc
aaa
loop
and
lods
pop
jb
mov
adc
aaa
pushl
cmp
adc
pop
add
incl
jp
inc
pop
mov
xchg
cli
jl
mov
in
adcl
mov
mov
imul
add
pushl
sahf
push
out
scas
imul
xor
jecxz
and
pop
mov
fistps
push
idivl
lock
ficomps
sbb
scas
nop
mov
outsb
stos
push
into
mov
dec
imull
icebp
out
add
pop
sar
jp
sbb
sbb
call
movsb
int
pop
add
popf
cltd
data16
insb
mull
and
sbb
insb
inc
std
and
inc
jne
mov
push
pop
cld
mov
jg
sbb
clc
repz
add
sub
movsb
jmp
jnp
jae
mov
xchg
jecxz
dec
cli
incl
add
sbb
pop
into
aaa
test
jg
dec
push
inc
or
sub
pop
mov
test
je
sahf
push
in
ret
sub
cli
incl
mov
je
pop
test
stos
call
fistpl
or
cld
mov
insl
mov
cld
dec
xchg
sub
dec
rolb
pop
fimull
call
dec
cmp
push
xchg
pushl
loopne
lds
inc
add
stos
mov
cli
xorb
and
push
test
in
cmp
push
cwtl
stos
cld
fsubs
pop
imul
leave
and
jg
add
repz
mov
scas
pushf
daa
sbb
sub
clc
int3
imul
repnz
sbb
cwtl
mov
call
mov
mov
sub
adc
jg
clc
daa
repz
ficompl
xchg
mov
sahf
pop
stos
in
cs
test
xchg
xor
sti
dec
add
cs
sbb
dec
rcrb
sub
add
pop
mov
dec
popf
sub
lods
push
mov
lock
xor
and
cli
inc
or
or
mov
imul
out
loop
and
push
mov
mov
clc
mov
imul
ret
xor
insl
xchg
mov
dec
testb
addb
adcb
out
call
aam
jbe
and
adc
pop
sti
aaa
adc
pop
mov
jge
mov
jae
popa
cmp
mov
jl
jno
xchg
xchg
jmp
jmp
xchg
pop
sub
or
and
int3
repz
push
pusha
popa
orl
sub
ds
cmp
inc
in
mov
pop
mov
js
ret
ffreep
add
lret
sar
push
xor
fadds
inc
je
cmp
notb
mov
insl
mov
clc
inc
fsubp
sarb
add
lds
add
xlat
in
fnstenv
out
inc
inc
popf
adcl
decl
and
push
or
push
add
add
add
shrb
cmp
cmp
leave
adc
orb
in
mov
ja
bound
jbe
and
lock
xchg
mov
xchg
decl
hlt
and
imul
aaa
shrb
pushl
loope
lcall
and
scas
or
adc
movsl
mov
sbb
xchg
mov
xchg
jle
in
xor
jg
mull
or
cmp
ss
adc
pusha
jecxz
push
fs
mov
mov
cmp
inc
ss
add
push
xchg
or
sbb
aaa
ficoms
jnp
outsl
or
pop
cmc
in
push
add
pop
mov
stc
arpl
pop
decb
mov
lahf
es
and
fmul
cmpsb
inc
filds
add
fdivrp
repz
cmpsb
and
and
mov
icebp
aad
test
in
loopne
pop
stos
jae
sbb
iret
sti
daa
arpl
jge
ja
and
cmp
cmp
testl
sub
adc
dec
push
sarb
adc
mov
sbb
sub
and
iret
adc
test
es
pop
mov
mov
push
sbb
loop
adc
mov
dec
mov
jge
xor
inc
loope
xchg
xchg
fisttpll
jle
xchg
jbe
sbb
xchg
inc
dec
dec
inc
in
mov
in
add
and
jbe
gs
jnp
ret
loope
loopne
clc
fiaddl
pop
aaa
mov
push
or
popf
movsb
xor
rorl
out
outsl
jne
add
fcompl
pop
jno
imul
clc
test
adc
scas
mov
jg
cmp
out
adc
pop
and
int3
nop
mov
es
sub
jmp
lods
imul
push
in
ja
dec
pop
sbb
xor
add
push
push
push
mov
sub
sub
es
inc
fwait
cmp
sbb
pop
call
icebp
into
jno
pusha
mov
add
jg
rcr
push
inc
loope
or
push
outsb
mov
sbb
fisubl
mov
leave
insb
repnz
fidivs
loope
sarb
lcall
decl
add
dec
mov
mov
clc
or
aad
mov
shlb
aaa
fdivrp
imulb
xor
push
sub
in
mov
sbb
and
mov
fwait
sub
dec
dec
jg
dec
addr16
ss
popa
dec
lret
or
mov
std
sub
les
or
add
cwtl
daa
cmp
adc
rclb
and
or
pop
pusha
pop
push
clc
and
hlt
adc
xchg
imul
aas
jg
sub
ss
push
ret
popa
insl
fcomi
ljmp
pop
ja
loop
sarl
loopne
mov
std
outsl
mov
xchg
dec
push
dec
clc
inc
sbb
dec
xchg
ficomps
and
in
jecxz
ret
pop
jo
stc
sub
in
ret
int
mov
sbb
mov
pop
mov
jmp
sub
emms
add
push
mov
out
aam
sbb
pop
xor
dec
aam
loopne
pop
jg
sub
jae
std
lret
mov
rcrb
adc
js
loopne
out
sarl
mov
hlt
lret
rclb
in
fcompl
imul
pop
cli
mov
mov
outsl
jge
dec
sbb
mov
jp
lea
xchg
loope
pop
pop
hlt
dec
pop
cs
pusha
imulb
pop
push
push
xor
cmc
mov
test
ds
sahf
les
popl
xlat
sub
inc
cmp
xor
mov
xchg
int
sbb
mov
gs
lcall
lcall
aas
mov
mov
sahf
dec
mov
test
sub
fisttpl
inc
imul
fiadds
das
test
add
add
scas
pop
jl
rcrb
pop
xlat
aam
mov
call
jp
lcall
xchg
popf
jl
jl
cmp
mov
mov
push
test
pushf
and
lods
sbb
mov
jg
inc
xlat
popl
clc
jl
and
xor
xchg
cmc
inc
std
shlb
pop
lret
mov
sub
fistpll
or
popa
push
adc
ljmp
mov
mov
adc
int
hlt
in
and
ljmp
jmp
js
xchg
ds
xor
out
add
mov
filds
out
adc
out
inc
subb
mov
lods
mov
mov
enter
add
jne
ds
push
insl
push
jle
sar
push
xchg
je
insl
pop
fs
dec
jecxz
pop
pop
je
call
lahf
outsl
mov
ljmp
ja
cmc
inc
pop
andb
adc
movsl
sub
mov
fs
test
les
ljmp
loopne
stc
adc
lcall
or
xchg
ret
and
popa
iret
std
sbb
mov
mov
test
icebp
inc
pop
mov
out
test
rorb
xchg
jle
mov
adc
dec
lahf
shl
out
nop
arpl
sub
loope
mov
jbe
mov
clc
not
jno
ds
xchg
loopne
mov
push
sbb
movsl
lods
lcall
aaa
lds
das
mov
pop
adc
inc
int
cmp
mov
mov
cmp
lcall
fistps
cli
or
imul
mov
push
push
push
shrl
pushl
leave
push
mov
xchg
icebp
pop
cmp
test
push
mov
fisubl
pop
dec
das
out
pop
stos
faddl
pop
cli
addb
cmp
std
jo
sbb
xor
pop
cmp
aam
add
push
or
add
or
xor
shl
aaa
ss
scas
mov
out
scas
mov
ds
dec
mov
pop
inc
mov
loop
adc
fst
pop
mov
test
mov
cmc
inc
xchg
in
sbb
call
mov
sbb
cli
movsl
aaa
xor
sub
pushf
clc
jecxz
or
sti
mov
inc
lods
cwtl
sub
dec
scas
sbb
cmp
aas
sub
dec
cmp
dec
mov
call
fsubp
jl
or
int
or
cmp
clc
push
aam
dec
cmp
jle
scas
mov
inc
lds
cmpsb
loop
in
mov
xchg
mov
lcall
je
xlat
je
or
pop
loope
and
or
les
or
lock
mov
call
or
add
lcall
pop
shrb
addl
pop
jo
mov
pop
sbb
fdiv
lods
test
inc
sub
and
push
fistpl
mov
cmc
jb
daa
movsb
sub
pushl
xor
inc
mov
imul
cli
mov
imul
inc
jecxz
pushl
pop
popf
xchg
mov
pop
aam
pop
add
out
mov
fxch
mov
xor
aam
mov
lock
mov
jg
mov
sbb
mov
js
lock
add
add
lcall
sbb
inc
mov
or
cmc
mov
shll
pop
or
das
jno
cmp
cmp
rorl
push
js
mov
test
icebp
loopne
push
xchg
pop
jl
jle
arpl
sub
mov
mov
mov
mov
addr16
inc
les
roll
je
std
insl
rcll
mov
mov
xchg
dec
pop
xor
dec
lea
sub
push
inc
lods
inc
mov
popa
imul
imul
rcrb
stc
pushf
xchg
xorb
mov
aad
movsb
push
call
sbb
xor
jmp
les
or
stos
test
mov
jl
push
dec
inc
add
ss
into
sub
dec
jne
adc
outsb
xchg
nop
ss
xorb
inc
inc
mov
loope
sub
mov
addb
and
shrl
mov
pushf
mov
leave
fsub
or
sub
cmpsb
les
add
fildl
cwtl
fstpl
xchg
mov
xchg
dec
test
sub
add
arpl
aaa
and
ret
xor
push
mov
lock
mov
adc
jle
inc
lock
pop
in
call
loopne
jecxz
movsl
sbb
push
xor
pop
push
or
or
shl
xchg
ja
pushf
and
addb
out
xor
sbb
jecxz
es
ljmp
lea
inc
pop
cli
aaa
add
and
out
mov
adc
mov
movsl
push
mov
mov
subb
add
mov
fildl
sbb
mov
adc
inc
sub
cld
decl
jle
and
push
out
arpl
cmpsb
shrb
push
out
inc
scas
mov
dec
imul
loope
jge
enter
mov
lea
fcomp
shll
add
cmpsb
subl
inc
lret
xchg
fdivp
inc
cmp
xchg
popw
int3
enter
xchg
pop
adc
call
dec
loop
aaa
clc
mov
aad
sahf
ds
jecxz
mov
pusha
or
push
call
fadd
xchg
stos
call
xor
adc
arpl
lods
div
cmpsl
sbb
popf
lods
inc
add
icebp
scas
dec
fmull
cmp
stos
sub
stc
and
xchg
lods
adc
pop
fcmovu
rorb
ret
add
lods
mov
les
mov
popa
out
adc
leave
mov
mov
pop
xor
das
mov
mov
ljmp
xchg
or
sub
add
js
xor
push
lcall
jns
js
add
sti
les
lea
jecxz
pop
mov
loop
pop
push
push
lock
push
jge
push
push
mov
sbb
jle
insl
js
stos
push
lods
pop
cmpl
mov
out
and
loopne
mov
push
hlt
jge
idivb
push
mov
fwait
ss
dec
inc
or
cmp
mov
adc
cli
bound
int3
sbb
sub
mov
mov
fs
push
das
jge
mov
pop
fmulp
mov
or
or
lea
adc
sbbl
cli
push
mov
clc
pop
call
shrl
pop
and
mov
dec
sbb
pop
push
cmp
adc
call
sub
mov
mov
mov
pop
cmp
call
ror
push
inc
xchg
cmpb
aad
mov
es
icebp
or
sub
adc
test
or
xor
sbb
roll
ret
rep
pop
or
and
push
push
push
stos
xor
loop
push
bound
jnp
add
fnsave
inc
add
adc
and
pop
fldenv
inc
mov
push
add
clc
test
addb
call
push
mov
or
push
mov
daa
jne
loop
and
adc
lods
add
rcrl
loopne
movsb
out
cltd
mov
cmpb
sbb
sahf
cli
xor
sbb
and
xchg
insl
xor
mov
fs
push
int
lret
outsl
push
rclb
sarl
push
mov
pop
sub
cmp
call
adc
enter
adc
mov
sub
xchg
push
lahf
rorb
sbb
or
mov
cmp
sub
add
jmp
sub
add
icebp
or
out
cmp
and
xchg
and
jnp
adc
pop
repz
andb
into
mov
bound
mov
js
sub
cmpsl
scas
fbld
mov
add
and
lock
cli
push
xchg
mov
mov
mov
jnp
pop
loop
je
in
clc
dec
clc
inc
sbb
adc
adc
movsl
or
fmull
adc
mov
clc
icebp
lods
mov
pop
inc
add
shrl
push
push
adc
and
jecxz
push
adc
inc
push
mov
and
sbb
pop
or
scas
stos
lods
repz
xor
test
cli
dec
inc
inc
sbb
or
or
mov
sbb
xchg
aam
sbb
dec
adc
movsl
sti
lock
fwait
xor
xor
add
mov
pop
fbld
stos
mov
xor
or
fsubrs
cmp
cmp
lock
mov
pop
sub
stc
and
out
sbb
popf
rcrl
movsb
add
or
lret
cld
shrl
adc
push
stos
or
ret
adc
aaa
fisubrs
inc
sbb
ja
aaa
data16
or
sbb
xor
ret
lcall
scas
and
bound
sub
mov
cmp
sub
push
push
push
loope
test
xor
daa
add
or
pop
mov
sub
push
imul
xchg
xchg
adc
xor
and
push
mov
rorb
sub
push
or
sub
iret
pop
cmp
mov
fdivs
xchg
sbb
mov
xor
fwait
cmpsl
dec
add
jl
xchg
ret
push
mov
or
clc
loop
in
sub
or
inc
adc
ljmp
push
push
aam
mov
es
jmp
or
sti
lahf
cli
movsl
mov
xchg
sbb
int
cmp
sbbb
mov
mov
call
addb
pop
clc
lea
pop
dec
dec
mov
dec
push
push
mov
jg
test
mov
xchg
mov
pushf
push
add
and
movsl
cmp
notb
sub
test
push
and
jo
xchg
mov
insl
into
nop
xor
shr
mov
mov
cmpsb
ret
orps
adc
call
jecxz
subb
test
ret
and
and
inc
mull
int3
sbb
ficomps
xchg
adc
iret
lcall
mov
stos
cs
add
and
ret
stc
cmp
sub
push
pushf
js
push
sarb
ret
loopne
inc
push
and
sub
push
shll
mov
add
push
push
jne
adc
stc
mov
dec
push
loopne
add
pop
ret
mov
fistpl
mov
sbb
in
add
xchg
stos
cltd
mov
pavgw
adc
pop
test
add
mov
push
std
mov
fsubrl
inc
leave
jns
push
imul
push
mov
sub
inc
test
popf
and
mov
adc
ret
add
sbb
inc
test
aad
or
jnp
in
mov
inc
or
dec
push
test
test
dec
xor
int3
push
mov
add
pop
push
aad
pop
jmp
or
sbb
mov
pop
jmp
mov
aaa
roll
mov
mov
mov
jmp
cmp
dec
xchg
ret
xor
lods
add
test
adc
jae
fiaddl
or
movsl
mov
xchg
in
add
add
add
add
scas
outsl
dec
andps
mov
mov
lcall
pop
xchg
inc
xor
push
adc
cwtl
sub
add
and
mov
mov
in
push
xchg
out
insl
inc
scas
scas
shrl
adc
sub
xor
cmp
dec
in
inc
std
and
push
orb
aas
dec
push
jmp
dec
jge
mov
inc
xchg
add
push
pop
push
add
bound
jmp
push
mov
pop
xchg
or
xchg
vmovntps
lcall
cli
lret
add
ljmp
jmp
push
or
repnz
mov
enter
out
inc
xor
lds
push
lcall
xor
jge
clc
and
fs
xchg
sbb
push
clc
sbb
sarl
pushaw
pop
and
das
push
dec
lret
mov
and
mov
pop
fs
notb
pop
dec
dec
xlat
movsb
cs
push
nop
or
mov
fldl
ljmp
push
fwait
push
mov
sti
add
push
lcall
outsl
rorb
xchg
pop
lock
xorb
adc
shlb
fsubrs
push
stos
fcmovne
xchg
cmp
out
fisubl
decl
adcb
jmp
sub
aam
adc
or
or
into
jecxz
movsl
and
xor
out
jg
cmpsb
lret
pop
push
outsl
in
mov
sub
xor
sahf
or
aad
adc
int3
and
movsl
loopne
incl
icebp
pop
sub
adc
lds
adc
adc
xchg
lods
xor
cs
mov
data16
sub
ja
xor
add
cmpsb
adc
mov
dec
or
lock
and
adc
pop
add
dec
sub
outsb
loop
popf
sahf
jne
add
mov
add
mov
xchg
cmp
ds
push
mov
sbb
add
test
mov
andl
mov
aad
loopne
add
or
leave
push
pop
test
outsl
in
jb
inc
gs
mov
cmc
mov
lahf
mov
add
cs
fcmovnb
jnp
shr
test
mov
cmpsl
xchg
cmp
mov
gs
das
mov
mov
inc
std
repnz
ret
mov
lods
cmp
test
mov
or
outsl
call
fldcw
push
sti
fisttpl
or
push
cmp
pop
and
rorl
jg
ljmp
xchg
hlt
pop
sub
mov
pop
repz
fildll
lret
jl
lcall
dec
dec
sub
jl
ja
das
test
push
add
ret
cmp
and
add
insl
mov
ljmp
clc
sbb
adc
mov
push
std
and
mov
lret
xor
or
clc
out
lea
cs
xchg
mov
in
cmp
add
cld
push
test
jg
fsubrs
add
mov
in
lock
and
cld
repz
jp
jge
and
lcall
pop
es
sti
jo
sbb
iret
sub
loope
xor
fwait
outsb
xchg
xor
dec
mov
mov
sub
sbb
sbb
ret
lahf
movsl
and
clc
idiv
cmc
inc
add
nop
lods
sbb
fnsave
fsubl
jb
pop
les
testb
mov
aaa
mov
add
push
sbb
daa
pop
mov
mov
iret
push
sbb
iret
pusha
pop
xchg
xor
mov
adc
pop
test
scas
inc
dec
ds
les
jl
roll
hlt
loope
cmp
sbb
push
cmpsb
movsl
mov
inc
insl
mov
mov
dec
pop
add
xchg
js
adc
mov
push
mov
sar
lods
mov
mov
nop
bound
lret
jle
sub
and
mov
push
outsb
sub
cwtl
mov
pop
lock
xchg
aaa
push
push
dec
lods
sbb
add
test
jb
movsl
fisttpl
cltd
mov
sub
mov
lods
movsl
cmp
xchg
out
or
sahf
cmp
push
push
scas
or
jg
push
mov
bound
negl
clc
ljmp
or
pop
mov
enter
stos
mov
sbb
push
or
pop
and
sahf
mov
imul
add
mov
aam
aam
add
inc
add
mov
leave
cltd
sbb
jecxz
push
pusha
adc
outsb
mov
outsb
out
add
dec
xchg
lret
outsl
mov
arpl
push
dec
push
mov
clc
jnp
push
es
mov
jg
fildll
pop
fstl
shrl
jp
test
cmp
loope
jl
mov
aaa
inc
div
lods
or
push
jns
or
mov
sarb
lcall
icebp
cwtl
sbb
loop,pn
jmp
ljmp
cs
loop
jbe
ret
sbb
ret
pop
andl
int
sub
je
sbb
jbe
dec
cld
push
fsubp
push
jl
repz
mov
out
mov
test
adc
pop
adc
mov
loopne
lcall
jo
cwtl
xchg
cld
sarl
cwtl
sub
in
shlb
ret
and
loop
pop
mov
enter
sar
fdivrl
fcompl
sbbb
fcos
add
jecxz
mov
jmp
cmp
push
sahf
lea
or
add
sub
add
lcall
add
sti
fisubs
add
mov
inc
pusha
mov
dec
pop
jl
and
insb
es
push
sti
sbb
jae
sbb
lock
inc
or
cmp
rcrb
mov
xor
out
adc
test
push
push
mov
cwtl
ficoms
pop
pop
lahf
lea
pop
sbb
sbb
push
push
andl
ds
push
sti
xor
fdivrs
or
xchg
push
lahf
test
jge
mov
and
lock
mov
mov
pop
mov
xor
fnstenv
rol
mov
lcall
xor
addr16
dec
fdivp
data16
pop
sbb
sbbl
mov
lea
sub
jno
es
adc
add
movsl
push
inc
mov
cmc
stc
es
inc
inc
add
push
mov
push
nop
repz
fstpl
dec
push
insb
std
push
cli
mov
xorb
jl
fisttpl
stos
cmp
movsl
push
add
push
aaa
cwtl
push
clc
sahf
movl
daa
movsl
lcall
mov
cwtl
adc
fdivr
xchg
jecxz
xor
iret
and
ret
popf
sahf
loop
push
outsl
add
call
xchg
mov
inc
fnstsw
cld
or
sub
mov
std
jmp
icebp
mov
into
mov
aas
orb
or
lock
pushf
pop
hlt
lea
mov
inc
outsl
cld
mov
mov
mov
insb
mov
add
in
mov
push
jo
push
sahf
mov
sbb
jge
std
in
xor
mov
sub
xchg
dec
sub
xor
clc
xlat
ret
pop
rcrl
lcall
mov
lret
nop
and
decl
push
jo
pop
inc
movsb
sub
sarb
mov
mov
jne
imul
nop
mov
in
pop
push
in
add
and
mov
aas
testb
ds
xchg
fucom
jnp
dec
fcomi
ja
test
jae
mov
dec
fdivrl
jbe
sti
cmp
ljmp
jmp
test
inc
dec
cmp
or
repnz
mov
or
adc
pop
hlt
add
sub
sub
rcrl
dec
and
inc
mov
jg
pop
fisubl
test
mov
and
cmp
cmp
adc
adc
aad
sarl
dec
mov
pop
cltd
in
cmpb
and
add
pop
out
mov
xchg
gs
push
call
xchg
cmp
js
cmp
sub
jecxz
je
imul
movsl
dec
stc
inc
mov
sub
mov
inc
jge
lods
or
mov
pop
loopne
cwtl
add
mov
xchg
add
aad
inc
lcall
sbb
lods
jno
xor
cmp
jl
sbb
nop
cld
mov
and
mov
jp
pop
push
push
clc
lods
outsl
into
mov
jns
shr
mov
es
push
or
dec
fisubl
lods
cmpl
jbe
test
test
dec
mov
stos
or
pop
outsl
or
ljmp
iret
shl
das
or
sub
sbb
push
insb
xor
mov
xchg
mov
leave
fwait
loopne
insl
aad
test
clc
call
xchg
loope
cltd
icebp
mov
jno
int
dec
add
dec
jg
cli
push
mov
dec
pop
xchg
addl
mov
les
pop
and
xorl
push
pop
mov
aaa
enter
dec
adc
or
sbb
aas
lcall
repz
popf
inc
jmp
cmp
xlat
and
mov
lock
insb
dec
mov
test
and
lcall
aaa
outsb
movsl
outsb
leave
lcall
xor
jbe
test
test
aas
pushl
cs
or
or
xlat
jns
xor
xor
push
push
jl
mulb
fmulp
ret
xor
in
pushf
rcrl
idivb
js
jb
movsl
or
scas
xor
inc
test
lret
lret
mov
mov
hlt
mov
jne
mov
mov
in
test
pop
xchg
sarb
repz
push
mov
pop
cmp
call
bound
lods
imul
mov
in
pushl
bound
sahf
adc
hlt
sub
jae
call
push
subl
cmp
imul
pusha
dec
leave
aam
mov
outsl
fstpl
sub
pop
ficoms
mov
frstor
push
je
jl
dec
jne
test
rcll
shrl
icebp
inc
add
pusha
mov
stos
outsl
mov
xchg
pop
loope
add
das
push
or
fisubrl
jmp
add
push
and
sub
push
xchg
pushf
xchg
pop
adcb
dec
adc
lcall
push
or
loopne
shrb
pop
mov
scas
fisubs
push
sub
dec
repnz
mov
add
dec
mov
inc
and
bound
rclb
lret
cmp
sub
add
dec
pusha
cld
insb
or
xor
add
ja
push
and
test
cmp
push
inc
loope
sbb
aad
daa
insl
out
loope
push
lock
imul
add
pop
mov
cld
int3
sub
stos
push
aaa
fcompl
mov
loopne
shll
xchg
dec
push
sbb
fdivrl
dec
push
jno
loopne
cwtl
loopne
cmp
pop
and
fld
fistpl
cs
push
mov
dec
or
fsubr
and
scas
xlat
sbb
ja
mov
sub
sub
mov
shrl
call
cmpsl
push
mov
sub
inc
dec
inc
adc
test
push
data16
pop
sbb
jmp
push
add
push
adc
and
inc
dec
xor
sub
mov
sahf
inc
or
mov
and
pop
xchg
lock
cmp
in
mov
fwait
mov
sub
cltd
fwait
adc
stos
sbb
and
les
shll
cmp
sub
mov
or
push
sub
pop
lcall
fimull
add
mov
daa
mov
movsb
orb
inc
shr
xor
push
mov
loop
je
loope
je
pop
sub
xor
cwtl
pop
mov
ficoml
test
aas
add
loop
and
hlt
xchg
mov
push
enter
orb
xor
ret
sahf
add
scas
mov
mulb
cmp
or
or
pop
pusha
cli
aas
and
aam
cli
and
inc
jp
stos
add
xchg
mov
xor
ljmp
lea
sub
push
add
pop
fnstsw
xor
sbb
sbb
add
outsb
jno
push
notb
insb
mov
std
xor
rcrl
fcom
lcall
inc
sahf
inc
cmp
xchg
aam
in
imul
sbb
xchg
ljmp
iret
jmp
and
push
rcrl
mov
aad
add
roll
pop
or
aam
loopne
or
out
in
add
mov
test
rclb
cs
adc
push
lods
not
sub
fisubrs
test
outsl
cmpb
call
or
mov
adc
nop
aas
jecxz
int
jl
dec
shll
mov
lcall
ljmp
pop
lods
dec
cmc
sbbb
mov
add
inc
pop
arpl
sub
xor
test
stos
outsb
outsl
xchg
das
arpl
sbb
bound
decl
ds
mov
popf
fistl
mov
testl
pop
scas
pop
sbb
fdivr
jg
jg
fimuls
and
mov
jp
lock
mov
and
sub
cmpsl
add
repz
dec
faddl
mov
xchg
loop
fmull
pop
clc
lahf
cmpsb
rolb
movsl
pop
mov
dec
mov
leave
mov
pop
pop
call
fiaddl
shlb
adc
or
mov
dec
stc
data16
mov
inc
outsl
mov
dec
daa
jmp
sarl
decl
mov
dec
ds
test
mov
mov
int
ds
xchg
loope
push
add
pop
leave
jb
aaa
clc
mov
dec
push
stc
out
lret
lock
clc
sti
mov
pop
call
push
or
mov
xorl
dec
mov
sahf
mov
cmp
je
push
fmull
repnz
loope
or
mov
in
push
xchg
inc
daa
shl
inc
test
cmp
scas
loopne
out
xchg
xlat
loop
std
mov
mov
or
andb
push
dec
push
test
aas
and
lock
mov
cmpsb
sub
push
insl
jecxz
inc
mov
ja
add
loopne
lahf
and
xor
sub
xor
and
add
call
test
loope
jmp
rorl
adc
add
push
jno
shrb
inc
pop
and
es
stos
jbe
sub
in
stos
add
aad
lock
adc
into
jo
cmc
cltd
mov
add
mov
das
sbb
or
inc
xchg
sbb
popa
add
sub
in
aad
mov
add
cmp
mov
fisubrl
in
mov
pop
add
xchg
ss
mov
and
imul
mov
jle
pop
std
xchg
test
les
mov
cmpsb
ss
ja
ret
xchg
mov
push
cmp
aaa
inc
loop
inc
lods
dec
jmp
mov
outsb
jno
cmp
push
in
adc
xchg
lcall
lret
es
out
sub
or
mov
cmp
icebp
int3
cli
add
outsb
xchg
inc
xor
pop
jl
ljmp
sbb
daa
and
jne
or
fadd
and
lea
pop
and
clc
fildll
jle
cmp
mov
jb
xchg
lds
jne
add
cmp
stos
cmp
sbb
hlt
loop
js
shlb
pop
xlat
fcompl
or
mov
mov
mov
sub
dec
test
push
test
sub
xor
gs
ja
inc
cmpsb
in
sub
and
sub
mov
cmp
cmpsb
aam
cmp
lods
pop
sbb
jne
or
ss
inc
popa
ret
pop
clc
pop
outsl
push
mov
xor
xchg
sub
or
in
fistpll
clc
mov
lods
fisubrs
jle
lcall
pop
jne
insb
dec
xor
ljmp
insb
jg
mov
sti
dec
sub
mov
add
jg
jo
mov
cmp
mov
cmp
mov
cmpsb
ja
out
lds
notl
in
jbe
jle
push
insl
push
sbb
lret
pusha
imul
and
inc
and
push
push
inc
jecxz
fmull
in
inc
add
test
and
lahf
sub
cwtl
and
rorl
mov
nop
add
stos
pop
inc
fistpll
cli
pop
jl
mov
sbb
jecxz
shlb
sti
test
pop
jge
add
mov
fildl
cwtl
jg
jns
mov
fildl
pop
pop
into
jge
or
mov
xor
and
popa
lods
stos
outsb
mov
xchg
mov
outsl
cs
inc
cmpsb
xchg
js
jl
neg
inc
insl
aam
add
mov
sti
sahf
jle
mov
add
and
cli
das
mov
inc
mov
sbb
sbb
push
push
adc
and
inc
or
test
sbb
mov
pop
push
pop
jb
hlt
add
cmp
dec
and
push
add
rorl
pop
lcall
sub
inc
xor
outsl
and
or
add
into
mov
sub
shr
loop
add
add
add
jo
stos
jns
mov
in
inc
xor
rorl
fwait
mov
adc
icebp
insb
mov
mov
and
mov
mov
xor
push
outsl
cmpb
push
dec
ljmp
mov
roll
out
movsb
xor
fiaddl
mov
mov
shlb
fdivs
and
and
aas
data16
dec
aam
adc
loop
dec
dec
lods
inc
add
outsb
test
inc
or
outsb
pop
call
add
add
push
call
cmp
cmp
fimuls
or
pop
mov
mov
pop
je
inc
push
jg
push
sbb
xor
inc
add
push
addr16
push
add
jmp
cli
xor
adc
mov
and
dec
push
jmp
cmp
cmc
int3
aam
xor
fwait
pop
mov
xor
mov
push
adc
xor
and
mov
adc
adc
aam
mov
xor
rclb
mov
clc
loopne
pop
add
add
push
push
adc
lcall
xor
mov
ja
xchg
das
mov
outsb
mov
call
imul
mull
adc
fsubp
cld
push
lods
adc
jg
xchg
mov
repnz
ds
and
mov
fdiv
roll
pop
aam
push
mov
into
jne
mov
or
add
in
ret
cwtl
imul
pop
push
lods
jnp
cmpsb
pop
test
push
shrb
adc
sub
push
mov
test
sub
in
or
sbb
and
sbb
xor
sub
stos
xchg
lret
mov
jno
ljmp
stos
jo
xchg
add
shr
push
bound
shrb
cmp
je
inc
mov
test
sbb
add
inc
sub
int3
add
lret
inc
ja
dec
addr16
xor
lods
movsb
mov
and
xorb
mov
ret
and
sub
add
inc
and
push
add
jle
jl
call
add
into
pushf
add
aaa
xor
jp
cmp
dec
stos
push
adc
in
lds
add
loopnew
xor
cs
outsb
cli
and
in
xor
mov
push
pop
or
loop
cmp
xchg
aam
mov
sub
movsb
pop
scas
gs
mov
cmp
xor
push
mov
rolb
mov
outsl
leave
shl
movsl
cmc
movsl
sbb
filds
dec
or
shlb
in
inc
loope
jmp
pop
add
mov
fldcw
movsl
jg
and
in
mov
test
subb
or
dec
cmp
repz
in
das
mov
add
xor
insl
sub
add
out
fsubr
jmp
xor
sbb
cmp
gs
jo
add
cmp
or
movsb
rolb
faddl
push
fsubl
orb
ds
or
rcll
adc
mov
inc
mov
std
mov
fldl
das
cwtl
xchg
cmpsl
icebp
sbb
ss
cmp
pusha
notb
jl
mov
xor
cs
pop
xchg
push
sbb
ljmp
and
and
lock
aas
sub
les
out
movsb
mov
sti
insl
push
add
fistl
fidivl
adc
aaa
add
popw
sbb
popl
jmp
and
sub
adc
shrb
icebp
sbb
jo
dec
or
loop
sub
dec
inc
lds
fs
loope
mov
sub
pop
xchg
in
push
and
jl
mov
test
cmp
outsl
cmc
mov
xor
xchg
or
stos
shl
mov
xchg
fnstcw
hlt
cs
iret
add
femms
add
cmp
dec
inc
outsl
mov
or
mov
and
cmpsl
lcall
fldt
add
test
add
cli
bsr
jg
push
sti
mov
arpl
mov
xchg
mov
pushl
popa
or
pop
or
push
lahf
sbb
ljmp
test
xchg
and
in
pop
mov
test
mov
sub
xchg
jo
mov
js
mov
lods
lods
clc
xor
mov
cwtl
dec
das
adc
aad
mov
bound
stos
dec
aam
inc
int
vmwrite
pop
dec
push
xchg
adc
xor
popa
mov
sub
mov
cld
mov
push
movsl
sti
pop
push
sub
adc
pop
fidivrl
push
imul
xchg
pop
ficomps
push
add
xchg
cmpsb
pushf
js
and
outsl
out
lret
adcl
shlb
jno
fwait
pop
cli
in
in
or
mov
test
inc
mov
sarl
add
mov
in
cltd
pop
add
sbb
addb
xor
xchg
rolb
je
test
lahf
cli
lock
les
lcall
push
adc
out
stc
popl
mov
cmpl
out
lcall
fbstp
push
add
ljmp
mov
pop
call
or
lds
loop
jecxz
or
mov
std
decb
push
pop
inc
popa
or
stos
jmp
cmp
and
sbb
ret
pop
test
mov
add
mov
insl
imul
dec
mov
test
mov
xor
inc
shlb
out
loopne
or
test
pop
mov
pop
std
pop
push
pop
add
adc
inc
dec
pop
pop
adc
or
cmp
movsb
adc
idiv
add
xchg
add
adc
mov
cmp
dec
jae
mov
fbstp
pop
mov
dec
icebp
clc
mov
and
mov
sbb
push
add
adc
pop
vpshlb
add
adc
divl
test
dec
mov
add
sbb
adc
xor
or
sub
cmpb
enter
inc
mov
pusha
push
cmp
push
in
sbb
arpl
or
test
sbb
add
sub
mov
test
mov
jl
cltd
add
pop
sbb
xor
cmp
xor
push
out
adc
mov
fadd
mov
add
xchg
adc
inc
mov
sub
add
or
int3
stos
xchg
add
push
inc
imul
test
inc
mov
rorb
es
mov
fcomps
sub
popa
add
adc
jae
aam
orb
mov
add
lods
int
push
adc
sahf
outsl
inc
lds
clc
mov
xor
sbb
adc
mov
or
repnz
fdivl
add
in
pop
add
add
clc
shll
dec
add
stos
hlt
adc
frstor
pop
pusha
or
cmc
fcompl
adc
inc
ja
fimull
mov
fimull
cmpl
or
loopne
cmpps
dec
negb
insl
inc
mov
fisttpll
hlt
xchg
xchg
jmp
cmp
push
pop
add
clc
mov
pop
mov
repz
loope
inc
xor
shlb
jp
pop
mov
cmovge
push
imull
adc
je
in
ss
mov
inc
icebp
xor
sbb
cltd
lds
repz
jl
xchg
adc
ds
jg
shl
fsubrp
inc
add
jg
add
sbb
stc
push
pop
mov
iret
push
test
cmp
lods
mov
dec
mov
cmp
mov
in
pop
add
js
pop
push
cmp
mov
sub
lahf
add
fcompl
sub
inc
popl
cmc
cmp
push
add
shrb
in
fsubrp
imul
pop
loopne
sbb
or
loopne
cwtl
inc
push
rcrb
xor
adcb
nop
je
repz
xchg
clc
aas
sub
xchg
fimuls
pop
fistpl
cmpsb
popa
mov
jl
lret
add
pop
aad
fwait
add
movsl
mov
add
subb
fcoml
jno
xchg
mov
sbb
pop
jae
mov
add
movhps
in
sti
dec
mov
add
sub
mov
adc
dec
lods
cmp
in
dec
mov
loop
punpckhdq
int
roll
push
cmp
dec
push
pop
pusha
and
stos
mov
shlb
lods
adc
cmp
mov
adc
xchg
sub
loopne
shl
cmp
xor
dec
push
dec
ljmp
int3
jbe
add
adc
mov
sti
fisttpll
ss
fiaddl
pop
aaa
and
add
call
leave
pop
or
pop
pusha
cmp
out
cs
jne
lea
or
add
nop
out
cltd
and
inc
out
clc
push
mov
mov
ret
call
mov
stc
sarl
jo
cmp
push
inc
add
pop
xor
xchg
add
xor
sbb
fwait
sbb
cmpsl
xchg
pop
mov
jge
sub
divl
mov
or
xchg
pop
test
dec
mov
xor
or
push
jno
cmpsb
jae
ss
outsb
mov
imul
mov
loop
nop
sub
call
or
sbb
lock
cmpsb
dec
repnz
add
push
xchg
in
jne
subl
js
shl
mov
je
shl
pop
jmp
xorb
add
mov
incl
movsb
leave
cld
leave
push
mov
mov
test
xchg
add
add
inc
sub
add
in
inc
jecxz
ret
add
pop
jg
fiaddl
outsl
add
call
xchg
ss
mov
dec
cmp
mov
push
adc
dec
insl
sub
pop
mov
icebp
push
test
lret
test
push
cli
jb
push
or
jns
cmp
es
xchg
inc
mov
cmp
mov
inc
mov
flds
orb
add
outsl
fmull
cmp
jnp
or
and
std
add
andb
movsl
fdivl
mov
and
testb
mov
fs
dec
sbb
out
outsb
cmp
cmp
push
or
and
or
jnp
pop
or
adc
stos
clc
gs
enter
mov
or
mov
imul
jge
aas
inc
mov
loope
and
or
mov
adc
and
outsl
mov
in
pop
lahf
lods
push
imul
sahf
add
mov
mov
mov
aad
mov
lea
adc
mov
jb
icebp
push
test
jl
xchg
test
fstp
dec
popa
add
mov
xor
inc
outsl
ja
push
jp
dec
gs
insl
add
dec
cli
or
pop
int
in
fildll
imul
and
sti
incl
sub
and
rcl
xor
add
shl
enter
int3
xor
pop
inc
mov
mov
and
dec
ret
jns
dec
push
lea
js
shll
sub
loopne
data16
insb
xorb
repz
mov
cmc
test
iret
cmp
add
subb
ljmp
sarb
aam
mov
pop
icebp
xchg
push
xchg
dec
push
rolb
or
mov
cmp
cmp
mov
jecxz
outsl
incl
cmp
jecxz
and
push
xor
call
adc
dec
add
and
in
inc
cwtl
in
or
cmp
pop
mov
sahf
push
mov
lahf
and
loope
es
mov
lock
add
sbb
pop
adc
ret
mov
mov
jo
std
add
dec
or
adc
testb
shll
inc
arpl
ret
mov
cmp
in
pop
cld
push
cmp
popa
add
or
dec
pop
and
aas
inc
inc
fwait
imul
mov
aad
sub
cld
repnz
shll
xor
mov
inc
mov
mov
movsl
or
cmpsb
xchg
jns
add
or
lret
mov
inc
sbb
test
ja
and
sub
aam
cld
outsl
inc
clc
jmp
stc
cmpsl
test
mov
aam
adc
jmp
jne
mov
jg
sub
pushf
adc
xor
imul
xor
aaa
rorl
cld
and
icebp
xchg
xchg
cli
xor
push
inc
outsl
pop
and
fldcw
xor
adc
adc
sub
call
dec
fucomip
add
add
and
cli
sbb
and
adc
repnz
cli
mov
test
xlat
enter
lret
out
mov
add
cmp
rcrl
jno
sub
mov
fdivrs
adc
fnstsw
inc
xor
ds
decb
adc
adc
mov
lcall
lds
iret
lahf
mov
add
xor
fs
pop
cltd
std
loopne
mov
incl
enter
les
adc
sarl
xchg
aaa
xchg
test
sbb
aad
outsl
sub
jb
add
test
sahf
lock
fdivp
jg
pop
pop
adc
adc
mov
adc
sub
call
int3
insb
mov
clc
daa
mov
lret
inc
icebp
and
inc
movsl
daa
test
mov
push
inc
aam
lds
mov
mov
xchg
and
mov
lods
das
call
sub
mov
jg
imul
xor
into
cmpb
arpl
insb
cmp
jmp
add
leave
push
mov
js
ja
pop
jae
cmp
call
jae
lods
inc
mov
icebp
xchg
in
jmp
cltd
fmuls
pusha
outsb
lahf
push
adc
dec
negl
clc
pop
decb
test
sub
sub
push
mov
das
sub
lcall
add
push
cld
sbb
movsl
es
add
mov
cld
ss
jge
test
icebp
cmp
lock
jbe
outsl
cmp
sub
bound
cli
xchg
das
insb
inc
mov
dec
adc
lret
sub
scas
inc
repnz
or
mov
scas
mov
loope
xchg
fistps
faddp
xor
aaa
mov
adc
pop
lret
loop
pmovmskb
or
inc
sub
add
dec
or
fistpll
xchg
fsub
lea
push
jne
sbb
xchg
outsl
mov
icebp
push
int3
cmp
into
mov
jg
cmp
sbb
and
mov
mov
fdivrp
or
pop
call
cmp
insb
add
notb
stc
insb
hlt
jne
inc
cmp
test
sarl
lock
fnstcw
ret
add
mov
dec
jecxz
icebp
jg
lea
ret
scas
inc
arpl
pop
jae
iret
xor
popa
shr
cld
push
jp
or
jae
sub
jecxz
adc
fiaddl
stos
xchg
pushl
add
andb
or
mov
xchg
mov
add
sti
inc
or
jb
cmp
aas
pop
sbb
outsl
jl
addl
or
inc
shl
lahf
or
out
mov
cmpsb
mov
xchg
xchg
testl
icebp
add
dec
dec
adcl
pop
sbb
xorb
sbb
out
add
aad
dec
xor
sbb
loopne
xor
adc
mov
and
aad
sub
sti
mov
jnp
mov
mov
mov
mov
push
mov
ret
or
add
jbe
fldpi
lret
jp
daa
jmp
test
xchg
test
mov
roll
shll
std
int3
mov
lahf
xor
out
dec
adc
cld
add
fdivs
icebp
add
mov
ja
dec
pop
dec
push
push
mov
cltd
dec
mov
mov
cmp
mov
dec
xchg
jg
lock
dec
shrl
mov
dec
fdivrs
xchg
lret
jg
or
and
out
pop
xchg
jae
and
dec
pop
or
ret
inc
or
mov
mov
pop
inc
cmc
imul
adc
ljmp
int
iret
xor
sub
jbe
jno
fidivs
icebp
adc
sbb
cmc
mov
mov
pop
out
xchg
dec
iret
push
add
adc
add
mov
jge
jp
js
cltd
stos
mov
xor
outsb
xchg
stos
sbb
jnp
stc
jb
rcrl
cmp
ss
clc
add
fistps
dec
mov
push
and
and
inc
mov
cld
mov
hlt
out
jb
mov
adc
push
or
and
inc
pop
and
outsb
mov
lock
dec
dec
ds
sarb
xchg
xor
or
fisubrs
xchg
inc
iret
js
xchg
pop
inc
xor
add
stos
outsl
lock
aas
inc
mov
nop
movsb
and
mov
adc
lods
imul
or
decl
push
pop
dec
xor
or
jns
mov
rcrb
test
es
pop
mov
cmp
and
fst
dec
aam
add
mov
push
xchg
cmp
out
out
pop
push
and
sub
fwait
clc
jmp
aam
cmp
push
pusha
test
mov
jle
jo
call
imul
mov
mulb
test
adc
jmp
shrl
bound
fldt
push
fmull
xor
xchg
jle
test
xchg
movsb
adc
pushl
in
add
clc
popa
mov
movsb
lcall
js
xchg
adc
sbb
cmc
inc
lea
lock
out
push
shl
push
aas
sub
sbb
or
jb
jns
stos
add
mov
lods
pushl
mov
fildl
push
fldt
notl
pop
aaa
inc
ret
adc
dec
ja
lods
std
aaa
or
cmp
fbld
cltd
add
idivb
inc
shrl
stos
movsb
lcall
push
stos
mov
mov
mov
inc
add
mov
cli
test
mov
push
inc
cltd
fidivrl
ds
fwait
test
and
mov
mov
xchg
sub
vmovss
push
mov
sahf
sbb
or
jne
sahf
add
pop
sbb
jo
or
or
test
inc
mov
inc
paddw
call
pop
xchg
test
je
jle
insl
xor
icebp
test
mov
aaa
xor
add
ret
adc
inc
push
pop
in
std
call
fst
icebp
aas
mov
stc
xchg
sbb
incb
jns
xor
rorl
fistpl
stos
out
sbb
jmp
jmp
fsubrs
popf
inc
sub
xchg
scas
fs
inc
xor
pop
loop
pushl
call
icebp
data16
mov
push
dec
std
cmp
in
jl
mov
adc
cs
cmpsl
les
and
sbb
sub
loopne
push
shll
jmp
fwait
xchg
pop
sbb
inc
pop
cmp
andl
int3
pop
add
or
scas
shlb
mov
or
cmpsb
jle
cmp
dec
ljmp
clc
out
ss
cwtl
pop
cs
pop
push
and
pop
mov
ljmp
daa
lea
cmp
mov
push
cwtl
mov
sbb
add
sub
and
sub
fwait
mov
sub
ret
imulb
les
cltd
sbb
mov
xchg
add
fdivrl
clc
outsb
dec
xor
dec
dec
nop
push
adc
shl
mov
shl
cmpsb
jp
push
fnstsw
sbb
sub
negb
outsb
jecxz
fidivs
mov
and
or
pop
js
pop
in
mov
xor
hlt
push
out
nop
mov
popf
aas
test
xchg
mov
pop
push
sti
cmp
dec
repz
or
lahf
lds
arpl
xchg
jno
mov
push
xchg
lret
in
lods
sbb
jg
mov
mov
int3
dec
pop
sti
mov
xchg
sub
lea
sahf
dec
inc
imul
lea
xchg
rclb
fadds
mov
jecxz
adc
or
jmp
nop
and
ret
rorb
xchg
or
adc
and
jp
inc
adc
outsl
lds
mov
or
dec
mov
divb
xchg
ret
cmc
inc
and
jg
fisttpl
add
mov
movaps
mov
jne
popf
inc
lock
stos
jno
daa
test
mov
fsubl
sbb
aam
pop
loopne
test
inc
icebp
js
test
sub
aaa
mov
pop
fs
xlat
adc
loope
add
push
stc
xlat
int
popa
xor
or
ret
adc
popf
or
insl
lds
cli
sbbb
mov
adcb
fs
xor
in
loopne
jnp
jnp
stos
imul
aas
mov
ret
jle
push
dec
push
lea
xor
add
push
movsl
ret
xchg
inc
ja
shll
sub
pop
movsb
clc
adc
cli
or
xchg
movsl
mov
daa
push
pop
and
mov
stos
sub
inc
or
inc
sbb
fs
sahf
push
cmp
out
sbb
outsl
cmp
jge
mov
loopne
mov
fstpl
out
and
or
xchg
mov
shl
add
add
inc
sahf
sub
push
pop
lret
xor
fcompl
nop
pop
pop
mov
nop
mov
outsb
sub
mov
mov
inc
cmpsb
lds
push
sbb
loope
insb
push
out
ficompl
mov
gs
cmp
and
je
mov
and
rorl
aad
imul
fcmovbe
add
push
push
rcr
mov
cld
data16
inc
mov
mov
or
jo
pusha
lds
notl
outsl
clc
inc
outsl
adc
jnp
pusha
xor
pop
outsb
std
scas
cmp
push
rolb
lds
cmp
cmp
jg
push
movsb
idiv
or
mov
movsl
les
dec
or
push
loope
sbb
pop
pop
lds
mov
add
loope
enter
mov
cld
inc
xchg
rorl
scas
mov
mov
dec
das
pop
mov
mov
enter
movsb
pop
std
sub
dec
aaa
call
xor
insb
cmp
pop
xor
pop
sbb
addr16
hlt
xor
movsl
mov
pop
jg
dec
scas
xchg
xor
mov
mov
sub
jle
mov
push
std
pop
mov
outsb
stc
lods
jns
mov
lock
hlt
sti
cmpsl
shrl
xchg
sub
std
pop
cli
mov
adc
inc
andl
pusha
adc
mov
jmp
lods
repz
int3
jl
push
sbb
imul
pop
cmpl
or
pop
mov
xchg
sub
mov
aaa
ret
dec
cmp
lds
adc
mov
xchg
mov
inc
mov
mov
push
push
sahf
mov
add
loope
cmpl
and
add
fmul
lret
mov
arpl
lea
inc
mov
pop
cmp
and
add
stc
into
scas
cld
adc
sub
xor
add
pop
fcoml
jg
inc
aas
jne
and
sub
add
and
dec
insb
adc
push
stos
or
test
insb
adcb
cli
or
ret
inc
nop
in
dec
adc
sub
push
shrb
das
mov
fmuls
jbe
subl
adc
clc
inc
in
imul
stos
xchg
adc
rcrb
mov
outsb
das
sub
loop
cld
and
adc
mov
clc
das
mov
pop
lcall
rcl
mov
sub
mov
pop
and
pop
mov
sti
mov
mov
or
push
jne
push
addl
push
and
rcrb
inc
pop
fists
mov
or
shl
mov
loope
iret
fistps
rol
inc
orl
jle
test
cli
cld
lcall
jl
inc
pop
and
pop
mov
or
jmp
dec
add
mov
out
cmp
jno
xchg
lods
mov
sahf
stos
outsl
mov
pop
mov
inc
jecxz
cmp
ljmp
test
icebp
decl
outsb
cmp
pop
add
inc
fldenv
mov
movzwl
or
lods
lea
mov
into
mov
and
push
rcl
stos
lods
mov
cs
dec
xor
pop
rcrb
pusha
or
push
jbe
in
xchg
jle
mov
dec
jge
xor
add
push
and
call
jl
xor
int3
dec
cmpl
push
jmp
lcall
mov
std
or
nop
pushf
add
imul
pop
test
pop
lea
outsl
js
aaa
sub
or
loopne
mov
outsb
fiadds
daa
mov
jmp
mov
mov
cmp
push
or
inc
outsl
sub
mov
or
jno
stc
fldl
xlat
scas
pop
in
outsl
ja
mov
stc
hlt
and
or
movsl
xchg
inc
outsb
inc
add
sub
outsl
sar
fdivrs
pop
in
or
xchg
bound
shll
hlt
sub
hlt
sbb
les
test
jecxz
inc
nop
arpl
jmp
loope
popa
ljmp
dec
mov
incb
sub
dec
fbstp
pop
out
cmp
unpcklps
sub
clc
inc
cmc
call
pop
insb
xchg
das
shll
incl
jmp
jg
in
mov
int3
ret
vpshufhw
xor
mov
jle
mov
mov
or
cli
cmpsb
pop
cs
loope
push
inc
cld
or
pusha
inc
div
fadds
push
mov
aam
mov
ret
mov
mov
das
xor
pop
xor
sbb
xchg
mov
bound
out
movsb
sub
mov
and
imul
push
adcl
bt
push
jg
sti
cmpsb
dec
decl
outsl
repnz
dec
adc
mov
addr16
jo
and
testl
xchg
cmpsb
pop
inc
push
cmp
sarb
ds
mov
mov
jecxz
fisttpll
scas
push
xor
pusha
div
or
jnp
lds
pop
fldl
sahf
xchg
fidivrl
out
or
je
sahf
mov
mov
xor
icebp
in
outsl
inc
pop
out
adc
adc
test
push
rolb
jmp
cmp
jmp
jae
ret
xchg
mov
xor
flds
mov
or
mov
fstps
out
mov
pop
jge
mov
xor
cmp
psubw
lahf
jp
in
movsl
cs
mov
pop
mov
jns
stc
jg
movsb
add
or
adc
cmp
in
pop
push
lret
sub
filds
jl
pop
psubb
sub
push
mov
inc
sbb
mov
mov
mov
icebp
jl
dec
cmpsl
and
inc
nop
sbb
pop
testb
jle
pusha
subl
fcom
fstpl
fcomps
aad
cs
sti
sub
mov
inc
adc
dec
inc
mov
inc
push
fadds
mov
sbb
inc
in
rorl
lea
rcl
mov
xor
and
push
pop
inc
inc
stos
pop
sub
loop
sbb
incl
add
ret
cli
sub
mov
pop
shll
xchg
loope
movsl
sti
outsl
nop
and
das
add
mov
push
sti
rcl
ror
push
and
mov
shl
jg
add
inc
xlat
and
inc
test
roll
push
add
pop
insb
mov
xor
mov
jecxz
lock
nop
mov
shrb
jno
testb
icebp
insb
pop
mov
xchg
lret
cmpsb
pop
fbstp
out
sbb
push
daa
sub
arpl
add
js
sub
adc
dec
push
push
loop
pop
mov
movsl
mov
xchg
add
mov
adc
jno
or
ljmp
pop
sti
das
xchg
inc
js
xchg
adc
daa
rorb
js
shrb
in
pop
push
js
jbe
push
arpl
push
incb
into
out
mov
dec
sub
mov
repnz
mov
cmp
pusha
les
add
xor
bound
cmp
mov
cmpsb
fildll
and
aad
pop
jnp
push
imul
mov
and
std
and
movlps
scas
sar
pop
ret
fcoml
stos
push
cld
xchg
clc
hlt
xor
cwtl
sub
aam
mov
jne
dec
adc
das
pop
movsb
loope
repz
pop
rorl
loop
jb
cs
fildll
repnz
pop
cmp
xor
lret
insb
pop
loop
fdivrs
push
cwtl
push
shll
adc
and
iret
cmp
ds
fidivs
orl
popa
and
mov
jmp
mov
mov
add
mov
pop
clc
fcmovnb
cltd
xor
mov
movsl
lock
dec
or
add
cli
xor
subl
decb
sbb
inc
or
xor
dec
jge
pop
cmp
sbb
push
and
aaa
jmp
mov
cmp
add
scas
call
jg
mov
push
mov
hlt
dec
cmp
arpl
test
or
sahf
lods
mov
pop
mov
mov
mov
pop
adc
rcrl
adc
scas
and
push
pop
jecxz
gs
jp
and
jmp
mov
and
mov
fwait
mov
mov
mov
scas
xor
loop
fldt
out
fcomp
adc
and
sub
mov
loopne
inc
mov
jne
dec
mov
jecxz
fdivp
and
push
outsb
pusha
add
addr16
inc
pop
jecxz
jp
ret
xchg
ljmp
sub
mov
pop
push
jg
push
mov
loop
inc
mov
adc
shrl
ljmp
jl
adc
pushf
test
cli
adc
mov
sbb
inc
sbb
cmpsl
daa
out
outsb
add
imul
xchg
ret
aaa
cli
mov
adc
mov
aam
mov
pop
mov
or
xor
dec
inc
repz
std
inc
ja
dec
add
aas
sub
and
test
repnz
mov
or
adc
mov
xchg
hlt
jb
jg
or
inc
in
gs
lock
adc
cmpsl
push
sahf
stos
mov
mov
lcall
sbb
xchg
aaa
mov
ret
cmp
or
pop
and
push
cmp
mov
in
imul
mov
test
into
jle
cs
fiaddl
rcrb
iret
call
addb
push
sbb
mov
jge
bndstx
mov
call
in
test
xchg
bound
adc
xchg
clc
jbe
pop
pop
adc
or
lds
lods
pop
sarb
mov
loopne
rcrl
push
bound
mov
fidivs
inc
or
daa
xlat
jnp
jp
rcrl
das
push
mov
mov
dec
out
mov
test
push
ret
pushf
cli
jl
mov
xor
sub
loopne
andb
ret
push
dec
push
and
jns
in
xor
decl
ja
sbb
sahf
dec
dec
mov
ljmp
ds
sbb
mov
xlat
nop
xor
cltd
xchg
repnz
pop
push
push
sub
and
or
int3
mov
std
pushl
xlat
and
loope
lods
sbb
fcoms
aad
lock
or
fistpll
or
pusha
push
add
inc
cmp
push
fimuls
jge
data16
loope
pop
xor
scas
jle
std
scas
adc
and
push
cmpsb
int
or
xor
adc
cmp
leave
fwait
mov
stc
lahf
push
mov
std
xchg
icebp
test
movb
xchg
xor
lods
leave
or
adc
lods
rorl
addr16
xlat
xor
pop
or
push
enter
xchg
pop
add
enter
adc
push
loope
pop
cli
pop
sub
subl
bound
iret
shrl
push
push
subl
inc
xchg
enter
insb
pop
bound
adc
mov
loopne
xor
shr
push
cs
call
int3
sbb
dec
jbe
mov
jno
fadds
dec
and
in
sbb
jo
scas
test
inc
mov
outsl
inc
mov
ss
andl
pusha
ss
outsl
mov
jnp
inc
xor
push
in
xchg
fcmovu
shlb
outsb
inc
mov
inc
fistpll
inc
jle
pop
sbb
dec
addb
jnp
ljmp
or
xor
ficomps
in
lcall
xchg
push
in
repz
adc
sub
hlt
inc
sarb
lea
loopne
stos
xlat
mov
rorb
mov
sti
jae
loope
insb
or
mov
aad
xor
pop
jp
outsl
pusha
and
dec
repz
push
pop
test
sub
cmc
decl
movsb
in
mov
test
adcb
js
outsl
or
mov
sbb
ja
inc
mov
insl
cwtl
lret
out
icebp
xor
fisubrs
fbstp
icebp
inc
test
mov
xor
adc
imulb
loope
sub
lret
jg
jb
push
in
leave
fsubs
repz
or
pushl
push
rcrl
inc
xchg
push
push
insb
mov
pop
mov
pop
hlt
sub
cld
sbb
dec
popa
jmp
pushf
adc
rcll
inc
aam
pusha
pop
jle
dec
int
mov
imulb
adc
pop
shll
dec
mov
inc
enter
cli
or
mov
xchg
popa
sahf
xchg
jns
sbb
cmp
push
xchg
cmc
fsubl
inc
mov
sbb
sti
mov
and
pop
push
mov
inc
aaa
push
lcall
rolb
sbb
call
loop
jmp
inc
jge
mov
mov
dec
push
data16
or
mov
and
outsl
or
mov
orb
sbb
cmp
push
fsubrs
lret
push
movsb
fwait
outsl
inc
fistps
mov
mov
shll
and
jae
sbb
adc
mov
outsl
icebp
push
shl
mov
leave
shlb
sbb
fsubrp
dec
aad
popfw
adc
push
add
jmp
mov
cli
shr
ljmp
adc
cmp
cmp
cmp
mov
push
jne
icebp
pop
push
push
or
int
data16
dec
lcall
sub
gs
fwait
sub
inc
mov
pusha
fistpll
pop
int3
xchg
push
adc
insb
sub
notl
aaa
call
push
js
mov
mov
xor
popf
inc
sub
mov
repz
add
sub
sarl
hlt
push
stos
push
and
cli
jns
mov
cmp
inc
pop
add
pop
add
mov
sbb
divb
rol
movsl
gs
gs
popf
das
add
loopne
cld
insl
xorl
or
inc
iret
fdiv
dec
jp
mov
ds
xchg
ja
adc
inc
jecxz
jge
add
xor
xor
stos
mov
pop
dec
and
xchg
adc
mov
mov
das
scas
jae
jae
pop
inc
fcompl
stos
push
daa
dec
mov
hlt
mov
or
adc
ss
jne
sub
mov
pop
add
and
and
mov
mov
ja
and
stos
push
mov
jne
sti
pop
movsb
adc
xchg
ficomps
es
movsl
xchg
cmp
lret
imul
les
bound
inc
rclb
sbb
and
in
or
rcl
push
addl
jg
adc
xor
xor
neg
in
add
or
sub
nop
adc
xor
pop
cmp
or
cmpsl
and
jge
stos
pop
adc
mov
out
fs
ret
xchg
xchg
inc
sub
or
xchg
ljmp
or
mov
adc
fs
cmp
adcb
sbb
fcomps
mov
fcomps
cwtl
push
sti
sbb
repz
lret
mov
mov
add
fs
cwtl
lods
outsb
push
push
mov
negl
lea
jns
adc
aam
push
out
jb
std
test
mov
or
lret
mov
sbb
xchg
divl
ret
cld
icebp
or
cmp
nop
or
jns
addr16
add
or
push
mov
push
sti
decl
int
add
push
es
fstpl
and
cmpsl
stos
aas
enter
jns
mov
bound
pop
mov
inc
stos
test
fsubrs
adc
test
inc
sbb
sbb
mov
jecxz
daa
movsl
pop
jp
test
roll
loope
or
decl
orb
pop
mov
test
mov
jl
cltd
ja
lods
and
xor
call
shl
xor
xchg
xor
out
lock
inc
adc
sub
shrl
adc
stos
inc
dec
or
sub
lods
fadd
xor
or
das
out
mov
cmpsb
insl
imul
cmp
clc
pop
gs
jl
mov
in
mov
out
inc
mov
jge
cwtl
in
push
cli
and
arpl
xor
jo
roll
cmp
sbb
insb
sbb
push
ret
aaa
push
xchg
jno
je
dec
rcrb
mov
xor
mov
and
in
test
jno
and
ja
call
fxtract
cmp
dec
enter
dec
insl
out
clc
jg
test
adc
mov
ljmp
jmp
aaa
dec
mov
stos
stos
jmp
adc
push
adc
test
inc
scas
aaa
scas
and
inc
add
sbb
mov
inc
stc
dec
andl
scas
cmpsb
inc
inc
xor
fdivrl
or
push
sbb
insb
popf
mov
js
push
es
ret
outsl
mov
mov
gs
addl
inc
sbb
loope
ret
add
cmp
enter
push
mov
adc
les
and
mov
ret
adc
loopne
jbe
sub
adc
jge
stos
out
or
jp
movsl
cwtl
push
outsb
loopne
add
and
in
jl
cmp
in
or
push
xchg
mov
imul
mov
sub
adc
out
sbb
jg
into
sbb
test
pushf
data16
leave
sbb
sub
push
adc
stos
fiadds
jl
mov
ss
rclb
add
pop
addl
in
int3
icebp
je
aad
aaa
jmp
pop
inc
fs
movsb
sub
or
sbb
rcrl
pop
fincstp
inc
jecxz
fwait
push
sahf
outsl
das
jo
lea
popf
insb
mov
mov
push
divb
scas
sub
push
or
stos
add
stc
ss
mov
ljmp
pop
outsb
jl
mov
bound
into
and
pop
mov
mov
jp
push
leave
inc
or
pop
popf
push
push
stos
repz
lea
in
fisttps
jmp
aad
rcll
std
roll
cmc
add
cmpb
mov
pop
loopne
fisubs
and
pop
sbb
pop
push
cmp
popa
aad
imul
inc
imul
test
mov
dec
sbb
lods
movsb
add
in
dec
xlat
cmc
push
adc
adc
outsl
stos
insl
mov
test
daa
mov
inc
add
mov
fwait
push
insl
js,pt
rcrb
and
xor
mov
mov
in
divl
int3
ret
imul
insl
adc
sbb
jg
sub
mov
jb
mov
push
push
or
nop
movsl
add
call
les
outsb
or
movsb
mov
out
mov
adc
push
mov
cmp
cmp
stos
mov
cmpsl
dec
push
movsl
xchg
push
jmp
pop
jnp
scas
hlt
clc
sbb
outsb
sti
xchg
fisubrs
std
xor
scas
cmp
call
mov
das
adc
sbb
test
push
cld
das
cwtl
mov
jp
loopne
push
inc
jns
dec
shlb
or
imul
xor
mov
fcomip
jb
push
daa
and
adc
inc
lods
cs
add
sbb
add
jmp
ds
add
xor
shrl
pusha
xor
lea
mov
jnp
jb
and
dec
movl
pushf
loop
cmp
aam
cli
lahf
cwtl
not
loopne
aaa
insb
mov
jg
fs
lods
mov
leave
adc
ss
pop
repnz
aaa
push
mov
and
roll
addl
arpl
inc
xor
sub
fisttpl
cltd
xchg
fbld
and
lea
test
jo
fildll
test
or
sub
pop
cld
sub
mov
jmp
icebp
sarb
mov
sbb
add
or
or
adc
mov
test
sub
sbb
dec
mov
push
into
out
lret
fisubl
cmp
test
xchg
in
inc
adc
stos
and
cmpb
or
shrb
mov
pop
mov
shll
jae
add
incl
cmp
cld
mov
adc
lods
push
mov
push
mov
std
or
ds
and
dec
aad
xchg
cli
incl
jbe
aad
pusha
shrb
daa
nop
and
push
imul
jmp
cmp
add
add
push
js
or
test
or
xchg
hlt
push
push
std
sbb
test
xlat
xchg
mov
xchg
decb
xor
xor
addl
mov
cmp
inc
movsb
or
sub
mov
mov
jg
pop
mov
addl
test
stos
pop
xchg
adc
mov
das
int3
scas
mov
jle
jb
rcl
insb
push
jecxz
lret
ds
inc
adcl
sub
lcall
sub
stos
push
fstps
push
cmp
sbb
loopne
inc
inc
int
pop
repz
lock
lods
xor
push
lret
inc
aam
xor
ret
int
je
stc
pop
xchg
xchg
ret
dec
sub
aaa
push
ljmp
lcall
dec
outsb
push
xor
insl
sub
xlat
mov
ret
lods
add
sub
sbb
insl
sti
popl
push
aaa
int3
sbb
dec
dec
jns
cmp
aas
loop
xor
outsl
xchg
out
jecxz
loop
xchg
sbb
pushf
insb
pushl
ret
inc
addb
mov
adc
xor
lods
cwtl
das
sbb
sbb
push
mov
pop
or
cmp
shlb
hlt
pop
daa
js
nop
mov
enter
adc
dec
xchg
aad
es
adcb
repz
dec
icebp
daa
ja
loopne
fists
cli
and
mov
popa
add
adcb
call
xor
sbb
jp
decb
pop
jb
in
xchg
xorb
clc
fbld
test
and
bound
jbe,pt
mov
mov
imul
testb
popa
pop
xchg
pop
clc
ja
xchg
or
dec
or
outsl
mov
add
sahf
lods
les
aaa
jbe
ljmp
lods
ret
add
adc
sbbb
pop
xchg
rcll
sbb
repnz
add
lods
mov
out
outsl
or
pop
test
pop
pop
das
sub
repz
outsl
mov
das
shl
ds
cmp
push
sbb
inc
jne
iret
fs
rolb
mov
arpl
inc
incl
dec
mov
sub
jg
jmp
xor
in
stos
lcall
add
ret
in
jae
lcall
jbe
adc
add
xchg
sbb
fsubrl
adc
inc
jns
iret
loope
andl
fwait
stc
aaa
je
outsl
xchg
sub
fs
ret
into
xchg
and
pop
clc
fbld
lods
popa
sub
jl
pop
jae
xchg
pop
sbb
movsl
fwait
shl
in
test
sti
and
mov
or
aam
enter
adc
ljmp
movsb
ss
push
mov
mov
push
pop
jo
rolb
mov
dec
lods
inc
sub
aad
mov
xchg
call
aas
pop
jb
ja
adc
push
lods
adc
push
mov
pop
or
outsl
cld
sbb
mov
inc
jle
mov
lds
loopne
xchg
repz
cwtl
loop
dec
add
lea
loope
loop
cli
or
movsb
sbb
loopne
add
rolb
rorb
popa
gs
lea
fcmovu
clc
adc
stos
leave
int
cmp
cld
outsl
mov
and
icebp
cmp
push
mov
hlt
or
dec
test
cmpsl
jae
repz
dec
fisubrl
out
sub
inc
mov
sarl
jns
gs
and
dec
arpl
dec
cld
mov
push
cmp
lods
mov
mov
loop
sub
cmpb
inc
insl
insb
mov
add
imul
mov
cmpsb
cltd
push
push
pop
or
and
mov
insl
push
pop
movsl
fcmove
jg
push
jns
inc
dec
ret
inc
outsl
add
jne
inc
push
jle
jg
lahf
insb
lahf
xchg
pop
adc
scas
sub
or
call
outsl
mov
mov
push
stc
jne
push
inc
test
leave
shlb
push
and
fistl
inc
inc
and
pop
mov
inc
filds
int3
cld
push
scas
out
jno
add
aad
fsts
test
dec
jo
js
adc
mov
jp,pn
pop
pop
testl
mov
pop
add
push
push
call
push
mov
in
mov
xchg
sbb
cmpsb
jecxz
adc
iret
fcomi
fisubs
xchg
loopne
pop
or
inc
dec
cmp
or
push
mov
in
xchg
shr
pop
cwtl
bound
test
and
xchg
popa
push
fbld
jg
mov
push
les
cmp
je
fcmove
jae
add
or
lret
int3
or
or
mov
adc
jbe
adc
jo
sbb
dec
adc
add
dec
movsl
ror
in
mov
and
roll
notb
stc
sub
in
out
pop
pop
push
imul
xchg
ja
adc
add
mov
lock
pop
dec
mov
lds
pop
loopne
mov
pop
lods
dec
lock
mov
data16
adc
pop
pop
inc
das
cltd
arpl
lds
mov
scas
mov
pop
clc
lods
xchg
fs
ja
cld
push
jbe
hlt
idiv
fbstp
nop
add
adc
mov
adcb
cmp
pop
mov
push
mov
push
inc
in
push
dec
cmp
stos
mov
out
stc
test
add
mov
mov
mov
pop
rcrb
call
jbe
pop
das
jmp
pop
mov
and
pop
lret
cmpsb
mov
pop
push
inc
inc
or
sar
js
jns
dec
ds
out
mov
cmp
inc
xor
fwait
sbb
push
cmpsl
sub
call
pop
dec
dec
idivl
and
mov
xor
xchg
call
and
pop
xor
adc
sbb
sub
fiaddl
cmpb
pop
add
dec
insb
test
cli
test
lods
call
adc
sbb
jb
mov
pop
stos
xchg
ds
lods
pop
mov
and
scas
insl
adc
fcomip
add
sar
cli
orl
pop
add
test
add
mov
loopne
inc
cmc
pop
enter
shlb
inc
pop
fs
xorb
mov
fsubp
push
repnz
mov
les
stos
sub
ss
fistpll
push
nop
pushl
cmpsb
leave
add
inc
clc
dec
sub
dec
ret
das
fdivr
push
xor
inc
in
dec
hlt
mov
pop
pop
clc
test
push
repz
jbe
icebp
aaa
sbb
sub
sub
xchg
xor
lcall
fisubs
stc
aas
pop
fcmovb
xchg
pop
push
push
inc
and
add
fcmovnbe
ja
mov
lea
xchg
xor
std
jp
fistpl
and
add
sbb
xor
inc
jl
lock
dec
inc
movsb
add
cmc
xchg
push
out
add
movsb
incl
cli
ljmp
lea
mov
addb
fnstenv
loopne
outsb
fcompl
and
sti
daa
lret
insl
rep
outsl
pop
jl
adc
sbb
arpl
outsl
dec
dec
adc
aas
push
stos
out
push
dec
cmp
sbb
xchg
sub
push
cltd
js
xchg
sub
pop
jo
jle
cmpsb
pop
decb
cmpsl
enter
inc
adc
push
lock
mov
jo
lods
adc
jle
frstor
adc
mov
and
mov
fisttpll
std
mov
addr16
push
rclb
fldenv
lret
ljmp
jge
jo
adcb
fnstcw
push
mov
nop
sbb
push
mov
dec
cltd
je
inc
push
arpl
mov
push
lcall
std
sbb
lea
popf
inc
addb
xor
aam
aad
insl
test
adc
outsl
dec
lds
push
in
or
pop
inc
sti
mov
aaa
add
ljmp
mov
incb
iret
xchg
iret
sahf
aaa
cmc
cmc
jg
push
test
je
test
fcomps
rclb
inc
cmp
jo
lds
xchg
jl
out
les
pop
jp
shl
cli
leave
and
fucomi
scas
pop
push
cld
out
push
or
mov
lock
stos
ja
pop
jle
or
push
fcoms
or
cmp
push
int
decl
inc
push
orl
push
mov
fcoml
and
mov
mov
insb
sub
int3
cmpsb
ss
call
cld
adc
jl
call
sub
fisttpll
jp
dec
push
adc
mov
push
div
inc
jl
subb
xor
adc
xchg
int3
ret
adc
jp
xchg
adc
xchg
fld1
and
mov
mov
inc
xor
fnstsw
dec
jno
ret
nop
xchg
mov
push
mov
inc
mov
nop
or
sahf
stc
loopne
clc
xchg
xchg
mov
mov
pop
sub
pop
inc
dec
das
lret
in
roll
add
insb
in
fildll
outsl
scas
sub
mov
cmp
xchg
push
mov
pop
aad
mov
loopne
popf
in
movsb
shrb
lcall
jne
mov
sbb
push
jae
shll
idivl
sbb
adc
andb
pop
sbb
imulb
cli
xor
fs
jnp
rclb
and
push
sbb
pop
es
das
xchg
mov
loop
sbb
push
sub
jecxz
inc
jecxz
push
movsl
dec
in
in
loopne
fistpll
call
ljmp
push
push
hlt
sbb
fdivl
fstl
js
adc
out
sub
mov
fadd
sarl
mov
je
mov
mov
mov
cmpsl
test
aam
and
cs
mov
push
pushf
xchg
fldt
je
imulb
imul
std
sub
and
call
sub
ss
lret
xor
fcmove
clc
test
cs
jle
xchg
decb
rcr
xchg
mov
mov
leave
sbb
aas
push
add
test
sbb
mov
scas
stos
repnz
dec
dec
push
cmpsl
mov
insl
sbb
dec
fstl
inc
adc
outsl
pop
mov
lcall
imull
push
pop
mov
add
xchg
mov
loope
and
push
push
mov
test
inc
and
push
sbbl
shrb
stos
inc
movsb
add
les
and
push
inc
pop
dec
sub
in
mov
ja
push
fistpll
ret
jne
les
shlb
mov
mov
cmp
in
int3
imul
popf
xchg
fnstsw
nop
ret
mov
decl
or
xor
call
incl
mov
shr
movsl
mov
adc
dec
xchg
dec
popa
inc
shl
leave
or
push
adc
jnp
js
jecxz
pop
or
fistpl
and
in
add
add
pop
pop
hlt
mov
lds
jecxz
sub
imul
sbb
adc
aaa
add
loop
pop
push
cmc
movl
ret
decb
jae
rorl
and
cmp
push
sti
pop
adc
mov
jecxz
das
mov
dec
sbb
popf
dec
inc
lock
dec
ret
and
fbstp
jno
in
in
dec
cmp
aad
mov
cwtl
pop
imul
jne
cmp
inc
add
push
loopw
add
cs
mov
pop
jo
adc
sbb
cmp
adc
decl
add
je
loop
cmp
negb
pop
lds
ds
adc
popa
dec
sbb
pop
push
mov
arpl
pop
pop
insb
mov
mov
insl
movsl
inc
bound
pop
jmp
jp
popa
sbb
test
lods
mov
lods
xchg
jmp
pop
jl
mov
notb
repnz
int3
sub
adc
pop
cmp
cmp
jp
ret
test
shrl
out
sbbb
inc
mov
fidivrs
hlt
sbb
popa
push
cmpsl
adc
add
inc
mov
xor
cmc
mov
or
imul
popa
popa
test
clc
inc
sbb
test
sbb
mov
pop
jnp
jge
xchg
inc
das
push
mov
or
ljmp
adc
incb
jmp
shlb
test
or
notb
inc
or
hlt
test
add
filds
jg
pop
cld
add
mov
dec
gs
lahf
popa
inc
or
mov
sbb
mov
lret
int
mov
clts
stos
inc
mov
jg
jns
inc
xchg
xorb
mov
ja
lods
scas
sbb
adc
sbb
add
add
or
arpl
dec
rcrb
imull
dec
cs
add
add
sbb
test
outsb
add
mov
push
js
lods
loope
lahf
add
and
push
clc
rcrb
test
add
xorb
inc
pop
xchg
xor
lcall
and
call
and
mov
adc
xlat
arpl
xor
pop
push
inc
notl
mov
sbb
mov
sub
insl
jp
ficoms
icebp
mov
shlb
add
lds
sbb
mov
pushf
lods
mov
cmc
negl
cli
mov
inc
testb
add
mov
adcb
mov
mov
mov
js
inc
mov
add
dec
sub
sbb
adc
mov
pop
dec
sbb
xchg
push
mov
aam
sbb
inc
adc
or
fnclex
sbb
scas
add
or
mov
add
cmp
ljmp
xchg
orl
jp
mov
repnz
pop
xchg
mov
push
inc
fildll
dec
bound
ja
mov
push
rcll
jg
adc
xchg
pusha
mov
inc
cmp
sub
mov
cmpsb
test
loope
fildll
adc
shlb
push
push
push
sub
adc
pop
jl
push
add
and
testb
push
leave
cwtl
cld
sub
in
pop
fisubrl
and
insl
jg
imul
enter
outsl
jecxz
or
mov
fcomp
aas
jge
test
movl
bound
xor
repz
in
icebp
push
ret
pop
sub
push
mov
cs
mov
lds
push
jmp
cmp
or
push
scas
clc
push
xchg
lea
or
int3
loop
aad
inc
cmc
pop
mov
sub
ss
jle
jbe
stos
and
push
lret
pop
das
popf
subb
xchg
addb
jb
aaa
ljmp
gs
and
dec
aad
add
fdivr
lret
sbb
pop
outsb
incl
shll
mov
jg
lods
dec
bound
daa
or
mov
in
xchg
testl
aam
in
or
fisubl
lock
iret
lods
mov
jge
dec
or
push
jns
mov
and
lret
aaa
icebp
inc
std
test
dec
jle
insl
call
sbb
cmpb
fists
xor
cmc
lret
mov
sbb
rclb
sbb
cltd
or
cmp
add
out
xchg
fdivrs
mov
sub
insb
cmp
xlat
xor
or
add
rol
xchg
add
pop
sub
jae
cli
xlat
popf
loopne
push
xchg
popa
cmp
popf
in
rcrb
cmp
or
loop
ret
pop
daa
ds
push
pop
sub
rcrb
or
icebp
push
outsl
mov
sub
xchg
shrl
mov
or
inc
divb
and
cs
adcl
cmp
cs
xor
cmc
rorl
std
dec
aam
inc
xlat
adc
cmp
adc
rcl
les
test
loope
and
rorb
xor
xor
inc
aaa
mov
mov
aas
mov
pop
enter
and
pop
cld
pop
ss
or
and
cld
cmp
icebp
sub
add
jbe
fcompl
ret
mov
lods
aad
jo
movsb
mov
cltd
ja
jg
fbld
add
and
je
pop
dec
xor
push
into
xor
out
test
lock
in
pop
push
jmp
mov
das
das
leave
inc
shlb
add
int3
loop
push
fcomps
jmp
pop
lds
cli
mov
adc
push
shrl
mov
sarb
mov
mov
mov
sbb
test
push
jns
pop
cmp
in
jb
and
pop
xor
xchg
imul
icebp
loopne
and
insl
xlat
mov
ret
jp
jp
rolb
and
xchg
clc
loop
jmp
das
pop
es
sahf
dec
inc
cli
mov
cmp
adc
imul
addl
jg
add
jecxz
push
test
mov
dec
mov
push
aam
xlat
xchg
pop
test
push
sub
das
loop
pushl
js
jb
jle
adc
adc
je
sbb
mov
je
out
jo
xchg
push
ds
and
mov
or
cli
pop
orl
mov
imul
add
xor
or
mov
icebp
stos
xor
test
jnp
cli
jmp
pop
jns
jle
fwait
or
dec
clc
jns
adc
outsb
sub
inc
inc
push
sub
pop
dec
and
sub
dec
sarl
lds
ds
cmpl
xchg
cmp
sbb
pop
xchg
lea
xchg
out
call
push
push
mov
dec
sub
ss
into
in
cld
das
int
sti
repnz
and
jae
call
lods
clc
addr16
std
aas
sub
mov
jmp
sub
bound
push
jne
push
mov
jge
jl
sub
clc
lods
fidivrl
sub
ret
js
sub
fstps
dec
stos
pop
repz
inc
pop
test
stos
lock
fisttpl
push
cs
std
mov
pop
cmp
push
lds
mov
add
xchg
inc
ret
push
mov
mov
int
mov
ja
daa
data16
xchg
cwtl
jl
jns
jb,pt
imul
popf
sbbl
dec
pusha
push
xor
sbb
cld
ds
adc
repnz
scas
mov
cmpsl
push
movsl
push
insl
outsl
mov
adc
mov
lcall
adc
mov
ret
aaa
scas
jl
xchg
xchg
inc
sahf
adcl
mov
mov
lcall
pop
sub
xchg
test
jmp
and
icebp
xor
adc
inc
sub
or
xlat
mov
cmpsb
or
lods
iret
fcmovnu
mov
jns
push
add
inc
and
insb
cmpsl
inc
mov
inc
mov
lea
push
pop
pop
mov
push
xchg
mov
outsl
test
cmpsl
pop
test
test
mov
jne
outsl
psubusw
lds
scas
out
rep
adc
aas
mov
adc
lahf
dec
push
pop
fldt
xor
push
and
adc
lods
aas
pop
in
outsb
pushl
les
inc
mov
insb
cmpsb
sti
fs
push
pushf
sti
scas
not
or
mov
rorl
adc
pop
mov
loop
iret
das
xor
adcb
jmp
mov
mov
pop
jl
pop
and
mov
sub
hlt
lea
and
dec
cmp
jg
scas
and
icebp
test
jbe,pn
cli
nop
mov
out
dec
sub
mov
bound
mov
sbb
lret
and
adc
push
jge
sahf
jno
cmpsb
cmp
adc
hlt
das
add
leave
xor
and
jb
lods
loopne
mov
xchg
outsb
cld
sub
adc
cli
xchg
inc
les
mov
int3
push
jno
cmp
xchg
cwtl
jno
jne
ss
mov
xchg
loopne
gs
loopne
cld
pop
outsb
mov
jecxz
popl
cmpsb
mov
push
mov
add
sub
cld
outsl
rorb
data16
addb
or
aam
cmpsb
scas
call
outsl
jg
jecxz
cmp
fiadds
clc
mov
cmp
and
dec
add
dec
nop
mov
push
cmpb
inc
test
les
dec
sbb
pop
xor
pop
roll
dec
xchg
mov
pop
lods
add
or
lock
dec
das
cwtl
push
dec
jne
leave
mov
dec
rcll
fstl
sub
push
mov
rcrb
jge
xor
hlt
pop
push
cld
roll
outsl
es
mov
icebp
add
sub
sub
bound
xchg
or
movsl
mov
xchg
ret
decl
add
sub
pop
inc
xor
dec
lea
or
cmc
mov
add
pop
icebp
sub
jge
pop
xchg
cmp
xchg
jbe
nop
cmp
cmp
adc
ja
push
mov
xor
push
rcl
xchg
xor
rcr
loope
sub
repz
imul
jge
mov
cld
rorb
std
fwait
mov
adc
out
mov
jb
decl
add
jbe
loop
orb
icebp
dec
xchg
nop
gs
fimuls
lret
xorb
shr
notl
mov
cmp
push
aam
orb
push
loop
call
inc
js
dec
and
cwtl
add
mov
adc
mov
cs
lret
push
and
xchg
dec
inc
fucomp
push
ret
inc
add
idiv
dec
stc
stos
sti
or
insl
mov
add
push
xor
insb
push
outsb
jb
xchg
imul
cmc
jns
sbb
popf
mov
dec
xor
call
bound
jle
stos
pop
daa
loop
mov
jle
mov
or
add
push
xchg
sbbl
ljmp
sbb
pop
push
xchg
xor
ds
mov
add
cmp
adc
loope
loopne
lds
push
jg
test
and
cmpsl
pop
sahf
popa
pop
popf
fs
or
add
and
test
mov
jae
push
movsl
inc
roll
clc
inc
add
add
es
mov
or
jo
fidivs
insb
pop
test
js
pop
nop
jle
push
ljmp
cmc
lds
das
add
rorb
jle
aaa
mov
mov
ss
shlb
dec
xor
xchg
cli
or
int3
cmp
scas
jo
sub
cwtl
pop
fnstcw
or
popa
rorl
movsb
aad
in
xchg
cli
xor
push
pop
lods
dec
sub
std
mov
jmp
addl
sbb
mov
sbb
inc
push
jmp
mov
and
mul
or
loop
dec
mov
inc
dec
push
cmp
cmpsl
dec
jg
jns
jne
push
cs
mov
xlat
mov
movsl
sahf
add
and
jmp
pop
outsb
xchg
or
loopne
and
push
inc
stos
mov
add
mov
add
mov
add
jns
and
sub
mov
stos
or
or
mov
scas
insb
pop
nop
loop
mov
rcr
adcb
lods
mov
insl
daa
xchg
jg
sub
adc
jmp
fwait
daa
cmp
and
jns
iret
lret
jl
aam
mov
pusha
add
sbb
or
sub
adc
test
cmp
fcomps
pushf
add
sub
pushf
mulb
and
mov
aas
dec
jecxz
sbb
mov
mov
ljmp
add
testb
addr16
sarl
or
outsl
jge
sbb
shll
dec
mov
adc
fistl
fdivl
pusha
cs
and
repz
outsl
mov
int
pop
jo
add
push
and
loopne
fcoms
and
lock
or
gs
decl
dec
mov
jae
push
test
sbb
movsl
orb
dec
sub
lret
mov
sub
mov
pop
mov
mov
rclb
rcrb
push
mov
push
adc
testb
push
call
mov
mov
ret
adc
cs
mov
f2xm1
add
insb
inc
pop
sbb
sbb
shl
fcomp
add
inc
in
test
sahf
je
sti
lea
out
mov
push
aas
loopne
xor
sbb
sub
cwtl
mov
stos
jg
mov
or
pop
mov
xchg
pop
or
xchg
fwait
sti
dec
cmpsl
push
loope
inc
rcrb
daa
sbb
test
out
xchg
inc
jo
fldl
imul
sar
jmp
jbe
mov
jecxz
lock
dec
jo
push
cmp
jo
test
push
not
dec
leave
js
push
add
or
ljmp
add
pushf
adc
cli
push
ljmp
mov
jle
mov
adc
jo
pushl
cli
lock
in
call
jg
inc
sahf
xor
cltd
push
into
push
pop
xchg
adc
and
lret
xchg
push
sbb
mov
test
cmpsl
jnp
or
jns
cld
pusha
addr16
mov
adc
pusha
pop
mov
popa
mov
aam
and
cmp
pop
add
fdivrs
divl
dec
cld
xchg
clc
sub
mov
xchg
aaa
and
repnz
pop
push
ljmp
lcall
lahf
sbb
dec
jmp
das
push
adc
cmc
lods
push
mov
jecxz
fisubrl
push
mulb
adc
pusha
xor
data16
push
fwait
out
jg
repnz
pop
cmc
test
aas
nop
inc
or
aad
mov
icebp
sbb
cmp
in
fcmovb
and
or
mov
jg
dec
mov
cmp
mov
jbe
outsl
nop
jne
push
loop
sti
fdivp
jg
xchg
daa
mov
mov
scas
ljmp
test
enter
out
ljmp
subb
and
jle
popf
mov
inc
pop
shrl
cltd
push
jae
sub
and
decl
cmp
ret
sahf
push
mov
leave
mov
arpl
icebp
shrl
push
leave
adc
mov
lea
cli
rcr
jbe
pusha
aam
jb
push
xchg
cld
shlb
xchg
loop
shll
je
sbb
and
sub
ljmp
aas
inc
push
cli
dec
cld
ljmp
std
adc
js
xchg
cmpb
cmovl
mov
mov
lock
add
clc
decl
inc
lcall
pop
or
mov
mov
jmp
xchg
xor
insb
push
call
fadds
shlb
mov
cmp
call
ds
pop
shlb
jecxz
repnz
fadds
ret
bound
lock
lcall
scas
test
jae
daa
lods
inc
call
mov
sbb
std
lcall
lret
shll
fstpt
scas
or
dec
repnz
xchg
lcall
hlt
or
mov
push
fdivrl
sti
pop
dec
and
arpl
mov
fnstcw
sub
sbb
xor
push
jmp
in
or
mov
xchg
xchg
cmpsl
outsl
and
lcall
call
loop
hlt
pop
sbb
add
inc
scas
pop
scas
nop
lgs
ljmp
or
xor
push
in
and
incl
insl
ret
fcmove
aas
cmpsl
add
jb
ja
lods
jecxz
scas
arpl
bound
mov
iret
out
mov
push
fs
jne,pt
rcll
fisubrl
ljmp
rcl
ret
inc
sub
push
sub
push
or
push
sub
mov
das
pop
pusha
shrb
cmpsl
and
mov
mov
mov
imul
das
lock
cltd
inc
mov
adc
cmp
shll
aam
mov
leave
cmp
lcall
hlt
xor
movb
dec
cmp
and
xchg
repz
rcrb
icebp
fisubrl
std
decl
daa
inc
in
and
jl
cmp
je
ret
js
jmp
jl
ljmp
cmp
xchg
push
scas
icebp
or
loope
adc
js
lret
lcall
fidivs
fiaddl
sbb
push
lcall
xchg
mull
and
test
rorb
adc
call
mov
adc
pop
mov
xor
addr16
xchg
imul
cmc
inc
sub
mov
pop
fcoml
xor
xor
push
mov
xchg
icebp
fwait
mov
fs
clc
dec
call
stos
shl
mov
ljmp
sbb
cltd
je
insl
rorb
shrb
lcall
fildll
stos
xorb
push
mov
push
ss
repnz
das
std
jp
aad
xchg
test
adc
lahf
push
sub
fidivs
ja
test
ljmp
repnz
mov
inc
mov
insl
imul
mov
in
pushl
jae
fs
sub
xchg
scas
sbb
in
sbb
aaa
arpl
fs
pop
xor
decl
inc
and
sti
mov
push
sub
lcall
loope
mov
pop
xor
push
jne
rorb
adc
inc
loop
loope
push
int
and
dec
rcrl
mov
ljmp
bsr
repnz
dec
adc
adc
adc
sub
xchg
ds
jp
sahf
cmp
out
inc
jns
push
testb
ja
cltd
sbb
lcall
std
js
sbb
xchg
xchg
xlat
mov
mov
mov
subl
stc
lds
daa
or
sahf
and
inc
in
scas
shr
jne
ret
sub
mov
into
xor
shrl
les
add
sbb
mov
fwait
in
aad
push
mov
fdivl
mov
in
in
lds
pushl
mov
adc
or
fdivl
inc
das
inc
inc
pop
call
jecxz
or
jg
ds
clc
xor
jp
pop
in
into
cmp
int3
addl
cli
fdivrp
in
jmp
push
push
jle
mov
ljmp
mov
repnz
repnz
sub
fisubrs
mov
jnp
out
sub
pushl
jp
fdivrp
push
lret
mov
sbb
inc
out
xchg
mov
call
cmp
mov
dec
faddl
mov
outsl
dec
inc
mov
cmp
jb
aad
jg
mov
push
nop
es
adc
cltd
pusha
aaa
mov
pusha
mov
call
mov
pop
dec
fs
dec
mov
incl
fisubrs
leave
pop
mov
dec
cmp
mov
out
push
and
faddl
pushf
ja
mov
mov
mov
inc
lods
pop
fs
inc
pop
cmpsb
scas
lds
lret
cwtl
sbb
inc
aaa
cli
incl
dec
or
mov
hlt
pop
or
xorb
mov
loopne
dec
mov
cmp
cmpsl
mov
test
shll
sub
or
mov
sahf
dec
test
sub
mov
fs
test
push
mov
ret
or
lea
mov
cmp
test
add
or
mov
movntq
cmpsb
jbe
mov
hlt
inc
movsl
aas
dec
pop
lcall
decl
lds
daa
cltd
mov
push
mov
xchg
push
cmp
mov
push
xchg
aaa
clc
das
hlt
sbb
cmp
cwtl
ret
mov
rorb
mov
xchg
adc
test
filds
movsb
pop
imul
arpl
mov
jg
ljmp
cmc
sbb
pop
into
lods
xchg
or
fstpt
gs
jmp
test
push
mov
mov
shl
jb
add
mov
insb
mov
cltd
push
in
adc
rcl
pop
lcall
sbb
cmp
stos
fsincos
xchg
dec
cmp
cld
mov
xchg
and
cmpsb
jmp
push
rorl
daa
and
sbb
scas
xor
sub
repz
xchg
add
dec
adc
ljmp
ret
push
xlat
inc
idivl
idiv
mov
fsubrs
jo
inc
or
bound
push
mov
push
repz
pop
mov
lcall
mov
xchg
sub
dec
lret
jecxz
push
dec
inc
and
lret
inc
roll
push
cli
test
decl
icebp
inc
push
pop
push
mov
inc
inc
xchg
pop
pop
ss
or
addr16
rcrb
loope
ljmp
or
sbb
xchg
ljmp
cmp
mov
fwait
arpl
enter
andb
loop
ffreep
out
xchg
fbstp
cwtd
sbb
add
xor
fisubrl
pushl
data16
pop
jg
jns
aaa
cs
add
mov
je
outsl
cld
ficomps
clc
stc
pop
xor
xchg
push
pop
push
out
lret
cwtl
das
cmc
ljmp
and
gs
cmc
mov
push
sbb
bound
mov
or
push
icebp
cmpsl
jae
mov
mov
xor
shll
mov
not
lock
cwtl
cmpl
add
lcall
jbe
xor
rolb
aas
fwait
sbb
sbb
mov
sbb
adc
jmp
xlat
pop
imul
xor
mov
xchg
test
pushf
ret
sti
popa
mov
dec
mov
jae
lods
jbe
mov
ja
xchg
mov
and
push
jmp
out
mov
lret
cld
cmp
or
xor
call
dec
mov
push
jge
cmpsl
sbb
mov
js
fnsave
xchg
call
pushf
inc
and
xchg
aas
int3
or
or
mov
in
daa
lahf
pop
jbe
and
jecxz
pushl
pop
push
cmp
xor
mov
out
pop
test
pushl
out
inc
adc
cltd
or
js
push
dec
sbbb
inc
sti
std
mov
adc
lock
mov
pop
ss
out
stc
sahf
adc
fisttps
or
dec
cmp
inc
movsb
add
jno
adc
outsl
inc
das
adc
jmp
cmp
test
cmp
int3
jb
addr16
inc
xchg
cltd
jl
aaa
das
mov
or
gs
jne
jae
stos
pop
rcl
incl
movsl
in
jle
es
cmc
das
and
ljmp
std
and
xchg
push
push
push
xchg
mov
cmp
fcmovb
xchg
incl
testb
dec
jnp
jmp
jb
or
cmp
outsl
mov
icebp
xor
adc
sub
jmp
gs
sbb
add
dec
sbb
pusha
movsb
cmc
aas
mov
negb
std
push
je
or
js
jns
mov
pop
mov
xchg
daa
xchg
xchg
call
jecxz
push
or
std
fmuls
pop
mov
or
xchg
loop
pop
inc
fimull
out
pop
sti
or
mulb
ss
xchg
add
lcall
push
adc
fmull
xchg
cmc
xor
lds
ret
mov
lea
test
pushl
mov
dec
js
xor
test
pusha
inc
lock
mov
cwtl
in
movsb
jg
das
mov
fcompl
or
mov
out
call
lods
adc
xorl
mov
sub
test
cmpsl
mov
mov
je
jo
push
int3
sbbl
mov
pop
sub
decl
and
loopne
in
xchg
xchg
ljmp
call
jae
jge
lret
ds
gs
out
pop
jbe
and
pushl
popa
stc
push
rolb
ds
cltd
jmp
repz
jmp
aaa
add
lea
mov
subl
fcomps
pop
loopne
call
stc
mov
and
test
xchg
fisubrl
mov
adc
fucomip
ss
mov
nop
inc
pop
xor
jg
push
push
add
test
stos
rorb
inc
mov
jns
popf
pop
fildll
cmc
sub
stos
dec
int3
mov
push
popf
pop
jne
and
lods
pushl
jns
testb
rcrb
shl
and
loop
mov
mov
cld
and
incl
movsl
lock
cld
mov
xchg
cs
lods
mov
call
lcall
or
adc
dec
and
cli
or
jb
fisttpl
jnp
pop
pushl
pop
lock
sbb
repnz
xlat
mov
push
xor
test
or
idivl
ret
test
push
xchg
fucomip
sub
in
fs
lods
adc
ljmp
pop
daa
sbb
pop
pop
jp
jl
push
loope
loope
mov
mov
jecxz
ljmp
xchg
mov
lods
rolb
ss
addr16
das
dec
cli
fs
jg
out
jge
adc
out
mov
mov
iret
cmpsb
inc
mov
nop
and
jmp
out
inc
cmc
cmp
adc
and
enter
movl
repz
sub
pop
popf
fnstcw
mov
jbe
test
cmpsl
inc
scas
mov
jg
pop
ss
mov
push
out
rorl
cmp
xlat
lret
das
xchg
inc
push
popf
decl
in
movsb
rorb
cld
mov
cmc
push
fnsave
jle
and
jl
stc
xchg
into
cmp
push
lcall
mov
and
sbb
pop
loope
sub
inc
xor
enter
es
push
lcall
leave
es
pop
mov
scas
push
pop
or
mov
cmp
or
movsb
jg
sbb
mov
cmp
test
pop
ret
mov
call
or
sbb
xchg
pop
mov
jmp
and
lds
mov
jo
xchg
outsl
xor
push
ret
cmp
push
test
ds
xchg
dec
fistpl
adc
decl
cmpsl
lret
faddl
jb
lods
flds
mov
push
stc
add
les
loope
lcall
pop
movsl
enter
cltd
pop
add
shlb
paddsw
mov
pop
sti
dec
fisubrs
dec
mov
into
mov
xorl
lcall
cmp
push
mov
sub
and
icebp
jmp
arpl
add
clc
pop
aam
jmp
repz
mov
mov
repz
push
add
jae
les
inc
jo
sbb
lock
jl
adc
scas
pop
cld
pop
dec
ret
incl
daa
dec
push
icebp
lods
sub
fisttps
xor
lods
fs
dec
mov
sbb
mov
add
jg
cmp
fst
mov
mov
in
out
lods
test
mov
mov
lret
mov
push
jge,pt
mov
jne
jge
call
xlat
dec
jmp
mov
inc
xlat
xor
cmpsb
fstpt
imul
decb
decl
frstor
or
ret
scas
push
jo
jns
mov
push
incl
gs
hlt
cmp
add
dec
lcall
dec
out
sub
fcompl
push
fstpt
xchg
mov
enter
and
jge
sub
imul
jg
je
int3
decb
imul
mov
pusha
mov
jb
ds
ljmp
mov
mov
fwait
and
sarb
fwait
dec
cld
jmp
add
insl
cli
jno
imul
in
aas
jb
ljmp
std
jnp
pop
inc
gs
pop
mov
imul
push
dec
adc
jl
daa
test
mov
call
inc
pop
xor
xchg
lcall
out
jae
shrb
lahf
push
sbb
jg
fisttps
lds
and
jle
pop
sbbl
pop
data16
decl
cmp
cwtl
fildl
lea
cwtl
mov
mov
stc
lret
add
pushl
testl
jnp
adc
test
outsl
and
rcl
fildll
mov
push
gs
std
ljmp
aaa
pop
or
mov
jle
rcll
int3
sbb
xchg
sub
mov
mov
cld
sub
mov
test
insl
xchg
add
inc
imul
mov
add
pop
xlat
mov
jae
outsb
jae
mov
icebp
xchg
xchg
and
cmp
jmp
inc
or
rorl
adc
jb
sub
mov
push
leave
inc
je
inc
mov
cmp
call
pop
nop
icebp
xchg
dec
push
mov
nop
test
push
adc
adc
pop
or
add
lods
cs
xor
test
call
out
or
mov
xchg
loop
nop
out
dec
jge
sbb
and
add
ljmp
lock
push
pop
add
dec
dec
aas
jb
inc
test
xchg
adc
dec
xor
les
jg
mov
cs
cmp
sub
mov
push
fildl
dec
frstor
xchg
insb
dec
adc
rolb
push
test
js
scas
mov
jg
mov
mov
lcall
aam
pop
cmpsb
sbb
scas
sti
rolb
decl
icebp
rcrl
in
jb
testb
sbb
cli
call
mull
lds
or
sbb
sub
loop
fisttpl
in
add
sbb
call
cmp
adc
fwait
xchg
sbb
xchg
inc
sbbb
cwtl
notb
and
xchg
cmp
mov
lcall
or
or
and
dec
sub
movsb
jl
incl
decl
arpl
mov
xchg
rorl
mov
mov
or
push
js
in
loop
test
icebp
jmp
or
stos
es
clc
jp
out
test
pop
test
sbb
lcall
std
cmpl
add
jo
bound
pop
push
pushf
adc
hlt
aas
je
ds
ljmp
out
icebp
divb
pushf
sub
test
out
add
jge
dec
movb
dec
adc
fcos
jmp
ss
fidivrs
andl
pushf
rcr
call
addr16
sbb
adc
ljmp
mov
mov
jp
mov
cltd
push
das
cltd
js
cmpsl
xor
mov
movsl
hlt
pop
repnz
lods
cmp
pop
and
in
dec
addr16
ds
pop
std
sub
mov
xchg
mov
les
pop
inc
loope
xchg
call
movsl
out
cmp
adc
and
sub
fsubrl
mov
mov
mov
push
xadd
sahf
adc
mov
sub
mov
mov
xchg
xchg
loope
fldl2e
call
fstps
repz
int3
add
daa
ja
cs
enter
jl
das
push
sub
xchg
sbb
adc
shrb
int3
cmpsl
or
push
pusha
mov
int3
inc
hlt
xor
cld
loope
decl
pop
jo
imul
stos
cmp
rclb
movsb
cmp
jo
enter
mov
inc
pusha
cmpsl
xlat
loopne
jmp
jg
xchg
mov
inc
cmc
loope
dec
or
insb
sbb
sbb
in
rcll
mov
push
lahf
xchg
jnp
cmp
mov
jmp
jg
call
dec
dec
xchg
outsl
and
pop
xchg
push
mov
stc
cwtl
pusha
in
mov
sbbb
jae
loope
add
repnz
mov
inc
sahf
cmp
mov
mov
aas
pusha
adc
adc
dec
test
pop
fbstp
clc
lcall
aam
mov
push
add
pushf
daa
jg
test
mov
clc
fucomip
dec
incb
mov
mov
mov
mov
fbstp
cli
hlt
and
jo
repz
cmc
adc
fwait
lcall
inc
xor
adc
movsl
cwtl
pop
sub
adc
aam
sub
push
mov
adc
cmpsl
mov
ljmp
out
jmp
jo
add
sahf
sbb
jle
xor
inc
dec
jg
cld
mov
mov
dec
hlt
ja
rorb
call
bound
push
jnp
outsb
mov
lock
and
or
sub
and
in
adc
lock
call
push
add
xor
mov
addl
lock
in
out
pop
mov
das
cmc
ljmp
imul
out
push
adc
sahf
out
push
ret
sti
xchg
mov
inc
xchg
mov
pop
movsl
popa
out
ljmp
sbb
adc
push
rorb
add
icebp
jmp
xchg
popf
rolb
pop
test
lcall
push
ret
lods
jmp
icebp
lcall
std
lcall
cmp
inc
xchg
add
je
push
xchg
xor
jmp
test
cmp
insb
pop
pushf
test
xchg
cld
lds
lret
movsl
inc
push
out
pushl
add
pop
cli
fbld
mov
pusha
push
and
push
dec
pop
lret
lods
lea
pop
jo
js
dec
inc
in
pop
and
xor
mov
clc
jne
inc
xchg
inc
inc
and
testb
add
aas
mov
jg
movsb
rorl
loop
or
sub
popa
dec
iret
incl
out
js
cmc
movsl
ret
fiadds
pushl
add
lods
or
mov
mov
lock
jbe
inc
add
out
call
call
outsb
ljmp
jo
mov
fldt
hlt
nop
add
call
loopne
int3
adc
inc
add
outsb
pop
gs
icebp
cltd
imul
incl
and
jno
sbb
and
sub
aas
icebp
sbb
sahf
lods
dec
icebp
cmpsb
int3
and
mov
pushl
and
hlt
or
push
mov
aas
push
dec
pusha
add
pushf
mov
fnstsw
call
inc
xor
jns
add
mov
test
gs
jne
adc
ss
call
ret
sbb
lcall
adc
adc
xor
mov
jmp
mov
pop
or
jge
inc
mov
lahf
pop
out
stos
push
ret
shrl
decl
xchg
and
and
iret
jb
inc
mov
sub
push
mov
das
cmc
pop
mov
insl
mov
ljmp
incl
hlt
jle
push
xchg
outsb
in
and
jb
jo
cld
jns
outsb
adc
cmp
pop
push
adc
pop
push
fdivl
xor
or
lcall
aas
ret
daa
xor
jl
mov
jl
dec
adc
pop
sbb
out
fldcw
pushl
fimull
adc
mov
mov
loop
scas
fwait
cmp
mov
mov
adc
clc
sbb
jns
adc
mov
jno
scas
int
outsl
inc
mov
mov
rol
cmpl
xor
idiv
outsl
lock
inc
xchg
and
movsb
les
xchg
pop
jb
rclb
adc
lcall
jle
jp
pop
in
dec
mov
jne
sbb
fwait
pop
sub
mov
sub
dec
xlat
int
sub
sbb
call
fwait
ret
cmp
fadds
cmpsl
insl
pop
cli
fisubl
fdivrl
sti
mov
or
pop
es
out
mov
js
mov
lcall
gs
aam
outsb
in
sbb
jg
dec
mulb
or
dec
cltd
mov
dec
adc
test
dec
dec
incl
cmpsl
jno
jae
sub
bound
out
cwtl
jnp
cli
addr16
das
pushf
push
outsl
hlt
dec
or
movsb
dec
sub
in
pop
imul
lcall
or
icebp
inc
xchg
adc
xchg
stc
insb
test
dec
sbb
imul
xchg
clc
decl
pushf
cmp
in
nop
rcll
jge
ret
mov
pusha
into
sbb
pushl
and
pop
je
mov
scas
stos
push
pop
jmp
add
int
clc
incl
into
in
test
arpl
imul
loop
data16
cwtl
imul
std
lcall
test
arpl
and
xlat
pop
mov
test
inc
ds
imul
fdecstp
inc
mov
mov
xlat
lcall
jge
daa
test
and
test
and
xor
aas
sub
lock
and
cmp
outsb
push
push
cwtl
stc
jno
push
or
push
mov
jge
mov
jle
ret
stc
dec
test
into
xchg
xchg
rcrb
or
insl
pop
cmp
jge
lods
jmp
mov
sbb
xor
hlt
xor
movsl
sbb
xor
push
and
call
arpl
cmp
xchg
sarb
dec
jg
and
fwait
pcmpeqb
cmpsb
mov
xchg
arpl
pop
cmc
lret
lea
std
test
aas
add
pusha
shrl
call
sahf
pop
pop
lock
jo
sbb
das
jae
jnp
fiaddl
cmc
mov
mov
cld
mov
data16
gs
mov
cmp
add
dec
sub
cmp
fimull
outsl
and
test
pushl
dec
ss
mov
and
test
call
rcrb
adc
inc
jmp
jbe
sub
jo
mov
add
movsb
jo
imul
lcall
stos
std
lea
mov
xor
sub
pop
aaa
pop
imul
push
lcall
test
test
insl
sti
adcl
arpl
mov
pop
sbbl
test
xor
dec
and
mov
in
push
jae
xor
mov
scas
loope
sti
popa
cli
cwtl
dec
mov
fbstp
push
mov
inc
dec
jae
cmp
mov
into
popa
arpl
insb
repnz
out
loop
addr16
fwait
adc
sbb
push
aaa
cmp
ss
decl
cld
imul
call
je
cmp
xchg
push
jbe
call
test
cld
add
jbe
test
lea
xchg
fidivl
inc
aad
xor
jbe
decl
out
add
aam
push
add
aad
adc
test
call
pop
mov
testl
pop
push
inc
fbld
lret
ljmp
lcall
mov
jg
and
aaa
pushf
pusha
icebp
outsl
clc
jo
lret
les
inc
push
xchg
imul
pushl
cli
gs
mov
sbb
mov
mov
push
push
test
jg
mov
int
pop
push
call
pop
xchg
mov
dec
cltd
dec
cmp
cli
pushl
pushf
inc
lret
cmp
cmp
out
and
daa
iret
jecxz
lock
lcall
xchg
sbb
test
dec
xchg
pop
dec
push
sbb
jl
loopne
ljmp
lods
add
xor
push
jns
mov
cmp
fbstp
pop
daa
sbb
xchg
pop
mov
adc
jne
in
int
sar
decl
inc
lahf
mov
push
push
decl
mov
jmp
es
mov
adc
ljmp
repnz
cmp
notl
arpl
dec
ret
hlt
jo
lahf
inc
in
dec
call
decl
sbb
push
repz
scas
push
jb
push
sub
cmp
je
adc
jo
jb
ljmp
adc
fsubrp
pushf
mov
xchg
cwtl
fdivrp
call
icebp
loopne
sbb
push
inc
jl
mov
or
arpl
adc
xchg
insl
fidivs
arpl
jl
jmp
push
shl
cmp
lods
shrb
stos
cli
add
and
xchg
popf
cmp
lahf
mov
xchg
dec
sbb
jmp
dec
and
sub
xchg
xor
cld
fbstp
xor
xchg
or
decl
dec
hlt
stos
or
lret
mov
push
lahf
sub
mov
movsb
loop
clc
lcall
lds
repz
jle
and
lods
add
pop
cwtl
fnsave
and
mov
xchg
call
cli
sahf
inc
in
pop
movsb
imul
ljmp
call
mov
shrb
xchg
add
fucomip
jnp
sub
mov
adc
add
push
sbb
mov
jg
call
lds
add
cld
jecxz
insb
mov
sbb
xchg
jp
out
mov
or
cmp
aam
stos
pop
cli
stc
mov
daa
movsb
xchg
int3
lock
pop
mov
stos
ret
sub
jae
jnp
adc
dec
inc
push
add
bound
hlt
call
aaa
in
inc
idivb
scas
in
pop
out
ja
sbb
mov
call
add
in
iret
xor
mov
jge
push
out
mov
mov
sub
das
in
daa
add
fsubrs
call
pop
scas
or
push
push
iret
jbe
push
xchg
call
mov
adc
inc
or
das
xorb
loop
int
es
sbb
pusha
repnz
inc
pop
push
mov
mov
ret
aaa
test
jmp
shll
test
inc
pop
cmpb
jecxz
bound
adc
mov
outsl
inc
movsb
mov
incl
lahf
mov
cwtl
pop
cmp
ret
xchg
dec
pusha
mov
popf
aaa
xor
daa
aam
mov
push
popa
aaa
pop
mov
xor
mov
cld
inc
push
mov
iret
sti
adc
sub
jle
lds
or
or
jl
mov
popf
mov
dec
mov
shll
mov
jns
cmp
sbb
inc
dec
xorl
jae
repz
sub
incl
test
mov
mov
or
add
cmp
fiaddl
pop
ljmp
ror
cmp
jge
jle
mov
or
mov
jb
mov
es
lods
adc
sub
jecxz
adc
lret
inc
sbb
je
clc
push
lods
ljmp
pop
push
pop
inc
push
cmp
jg
fists
sbb
je
outsl
rep
push
mov
jl
sub
mov
sbb
lcall
cs
xchg
xor
cli
pop
xor
adc
ds
mov
mov
or
aam
addl
cmp
inc
inc
insl
scas
rorb
pusha
loopne
js
iret
addr16
mov
push
scas
jg
cmp
adc
aad
push
mov
std
push
lods
mov
test
lds
xchg
mov
out
mov
stos
in
xchg
push
sbb
mov
insb
add
ficoml
loopne
jecxz
or
push
lods
mov
jmp
iret
sub
lock
xor
jg
int
lcall
pop
or
inc
pop
xor
cmp
in
jns
jecxz
aas
call
pop
adc
rorb
repnz
or
mov
mov
cmpsl
push
cmp
cld
dec
cmpsb
push
scas
mov
sub
pop
inc
out
pop
mov
pop
mov
call
xor
or
xchg
jecxz
add
lods
push
lods
push
mov
add
std
dec
movsb
jg
or
add
dec
lea
mov
loopne
xchg
xchg
sbb
add
mov
xorl
pop
sub
fldt
sub
cmp
push
push
in
es
inc
jo
stos
mov
push
sub
in
lahf
mov
and
mov
sub
popa
and
and
addr16
and
add
jg
outsl
std
mov
lea
push
mov
testb
mov
pushl
push
gs
sbb
mov
mov
cmc
test
xchg
jg
push
mov
mov
insb
add
sbb
mov
ja
add
adc
std
ret
aaa
addr16
das
add
xor
sbb
push
pop
icebp
outsl
std
or
jg
sbb
inc
or
pop
ljmp
cmc
inc
test
mov
push
mov
out
rcll
ljmp
call
out
dec
out
mov
mov
test
push
adc
fists
mov
jg
jl
adc
adc
repnz
mov
ss
andl
push
sbb
and
movb
sbb
push
decl
cs
and
xchg
cmp
or
xchg
lahf
jp
pop
sub
decl
mov
add
adc
lret
jp
push
or
cs
or
cltd
jg
or
mov
hlt
dec
pop
add
test
sbb
sti
cmpsb
mov
mov
or
repnz
lret
sbb
cmc
dec
inc
sbb
clc
xor
jg
mov
jb
pushl
cld
adc
es
mulb
lcall
mov
xchg
jo
loopne
sbb
out
add
mov
adc
incl
dec
ficoms
push
xor
push
nop
data16
mov
xchg
test
inc
repz
popa
xchg
xchg
jmp
pop
push
inc
sahf
cmp
mov
call
mov
rcrb
rcrb
sahf
jg
fimull
stos
imul
repnz
lret
out
mov
jmp
gs
rol
cmp
inc
jmp
inc
or
mov
loopne
inc
shlb
dec
je
sarl
sbb
arpl
mov
sbb
and
test
xor
iret
add
mov
int
push
mov
pop
fstl
jmp
aaa
mov
or
movsl
jmp
mov
fisttpll
jmp
enter
mov
sub
sub
sbb
cli
fucomip
or
jg
inc
call
in
or
xchg
and
in
dec
mov
hlt
out
mov
pop
aad
jmp
jecxz
incl
xchg
daa
imul
or
mov
mov
xor
jmp
jo
decl
std
mov
inc
fcomi
out
sub
and
je
scas
test
std
ljmp
cwtl
cld
ljmp
cmp
fdivrs
pop
hlt
data16
ljmp
cwtl
pop
xchg
aad
out
or
inc
mov
imul
decl
outsl
mov
addr16
inc
sbb
lds
mov
aas
jge
icebp
dec
call
leave
push
in
push
insb
dec
push
mov
jge
jnp
add
test
pop
jg
incl
pop
jns
popa
fmuls
mov
cs
xchg
std
mov
cmp
std
popf
aas
fst
int
push
in
aas
dec
int3
and
testl
pop
jno
mov
decl
pusha
xor
cmp
addr16
jno
and
in
iret
mov
sti
mov
sub
sbb
sbb
icebp
mov
jg
mov
sbb
dec
or
pushl
mov
arpl
addr16
scas
cltd
jo
lods
sub
jmp
movzwl
jne
xchg
add
xor
mov
sti
cli
imul
sbb
push
scas
cmp
mov
sub
push
or
adc
sbb
scas
decl
pusha
ljmp
xchg
lds
dec
mov
mov
cld
jmp
dec
xchg
inc
inc
mov
add
dec
xor
mov
xchg
fmull
push
xchg
lcall
dec
mov
cli
xor
stos
insb
cltd
push
add
and
shll
jno
fsubrs
dec
cmc
sbb
cmp
pop
ljmp
call
or
adc
jns
push
cmp
sub
mov
push
cltd
push
mov
addr16
xchg
xor
xchg
sti
pop
cmp
xchg
sub
hlt
pop
imulb
push
mov
mov
leave
jl
push
call
cmp
loop
mov
jns
in
mov
mov
mov
cmc
movsb
or
cli
je
mov
cs
pop
mov
sub
lods
fs
jmp
gs
jl
cmp
inc
in
pushl
cmp
lahf
sub
mov
les
call
jae
xchg
mov
sub
dec
inc
sar
jg
sbb
ret
movsl
lods
sub
addr16
and
sbb
adc
dec
aad
ret
insb
lcall
jg
shlb
mov
aaa
and
push
and
pop
pop
test
in
ds
stos
cltd
sub
mov
xor
jnp
shl
loopne
sbb
inc
sbb
ljmp
push
out
xor
jl
lret
fs
mov
xchg
lds
and
call
xor
pop
pop
andl
mov
es
cmp
push
sub
add
lea
dec
jb
mov
mov
inc
aam
in
daa
into
mov
xor
rorb
jmp
insb
daa
jmp
int3
mov
incl
xchg
dec
mov
enter
out
orb
mov
or
dec
dec
xlat
jg
push
sub
fidivrl
add
repnz
xchg
sbb
jecxz
aas
aam
xor
icebp
pop
ljmp
inc
sbb
aas
into
fisubs
ljmp
xor
push
or
inc
push
popa
enter
jns
push
cmpsb
inc
lea
xchg
mov
or
dec
or
mov
jns
ret
icebp
aaa
mov
ljmp
loop
pusha
nop
mov
fcmovnu
cmp
lret
aam
fucomip
ljmp
lret
js
adc
jo
adc
cmp
dec
lods
ljmp
arpl
lcall
ljmp
push
lods
in
sti
inc
xor
cltd
lret
mov
pop
adc
push
rep
ficomps
mov
lods
mov
addl
xchg
jmp
push
pop
clc
mov
pop
outsl
outsl
add
mov
sahf
push
cld
push
imul
cld
add
pop
xchg
and
mov
stc
sti
andl
addl
cwtl
cmpb
faddp
pushl
add
ret
or
shlb
add
jmp
jns
or
push
loopne
stc
cmp
mov
xchg
stos
dec
leave
testb
mov
mov
sub
sahf
sub
cld
sqrtps
xchg
testb
hlt
outsl
pop
sti
dec
addl
shrb
stc
add
incl
mov
pop
imul
or
jne
data16
xor
cmp
pushl
mov
push
push
sub
cli
inc
fstl
scas
nop
and
xlat
rcrl
fcos
call
mov
stos
mov
mov
and
test
xchg
dec
jmp
pushl
mov
jb
xchg
sbb
and
pop
mov
test
test
lcall
insl
cld
mov
push
pop
push
dec
pop
cmpl
ss
addr16
ljmp
ret
mov
das
rcl
sub
andb
lret
or
mov
int
test
mov
push
mov
adc
incl
sub
xor
xchg
roll
cmpsl
movsl
jb
aaa
or
test
rcll
movsb
popf
fiaddl
and
js
in
mov
hlt
inc
dec
sub
stc
out
std
out
pop
jbe
push
pop
std
call
loope
mov
repz
nop
pusha
mov
and
out
fucomip
add
les
mov
sti
sub
inc
xor
push
jecxz,pt
data16
lcall
sub
mov
jno
stos
or
aaa
xor
rorb
lcall
jle
push
popf
ja
xchg
inc
int3
or
add
jmp
dec
sbb
inc
cmp
sbb
mov
fisttps
gs
shr
jbe
and
loop
hlt
mov
movsl
jmp
sbb
adc
mov
pcmpeqw
dec
ljmp
icebp
push
mov
sub
lock
jbe
mov
ret
inc
decl
inc
cltd
cmp
pusha
inc
int
addr16
mov
inc
sub
add
fiadds
incb
mov
mov
bound
mov
test
adc
data16
push
xchg
jle
idiv
sub
dec
sub
in
dec
sub
sahf
je
stc
stc
xor
jmp
inc
xor
pusha
mov
sbb
stc
dec
cmp
lock
cmp
xchg
movsl
jp
outsb
dec
mov
dec
push
jge
inc
out
scas
mov
cs
jmp
mov
xor
rclb
lcall
mov
stos
xchg
mov
aaa
int
cmc
push
xor
or
pushl
push
out
dec
and
jg
lcall
scas
mov
pop
xchg
lahf
xor
arpl
loop
push
pop
call
out
fsub
inc
or
out
addr16
addr16
icebp
mov
stos
fwait
bound
and
clc
pop
es
jno
mov
mov
jmp
es
pop
imul
adc
push
jg
or
mov
in
int
or
je
aad
mov
pop
fdivs
fnstsw
popf
ss
int
pop
xchg
out
push
jno
adc
adc
movsl
jne
sbb
icebp
js
sbb
jae
aam
pop
xchg
lret
inc
call
call
cmp
inc
cmp
sub
arpl
jae
push
push
mov
insl
fisubl
ljmp
outsb
xlat
pop
clc
decl
test
mov
ss
cmpsb
push
mov
ret
jnp
inc
pushl
lods
and
outsl
cmpb
jb
dec
inc
inc
lds
xor
stos
imul
cmpsl
cli
xchg
hlt
decl
mov
mov
lret
mov
jae
and
mov
and
ljmp
mov
shr
mov
adc
jmp
xor
pushl
jo
pmaddwd
pop
xchg
imul
mov
pop
insl
cli
mov
add
pusha
call
subb
out
dec
cmp
adc
or
push
xchg
std
jge
fistpl
fdivs
push
jnp
mov
mov
fmuls
sbb
dec
or
out
jns
aam
dec
pushf
cmpsl
test
ljmp
adc
fdivrl
ror
sub
cs
lcall
push
dec
inc
leave
loopne
repz
xlat
mov
popa
iret
mov
lcall
inc
outsb
pop
sub
cmp
pop
sbb
ljmp
and
xchg
mov
iret
cwtl
jg
repz
lds
dec
cli
mov
mov
xlat
mov
and
fcom
rcll
andb
lcall
loopne
fildll
pushf
jl
loop
leave
pop
push
sub
jg
mov
repz
pop
cli
aam
or
add
xlat
dec
pop
cld
lcall
test
jmp
mov
fcomip
xchg
pop
sbb
xor
in
jmp
jno
cli
sub
pop
loop
shlb
adc
hlt
inc
scas
jl
test
add
clc
sti
std
call
jmp
loopne
cmpxchg
jns
movsl
push
mov
lcall
pop
mov
lret
das
cmpsl
jge
inc
or
pop
and
jl
and
jle
imul
stos
mov
int3
adc
call
jmp
xlat
movsl
mov
pop
push
push
adc
nop
lret
hlt
jmp
jg
das
cld
jg
mov
pop
movsl
pop
mov
lods
sub
dec
pop
xor
jne
mov
mov
insl
inc
mov
incl
sub
lret
call
jge
sbb
icebp
xchg
ss
xor
push
test
adc
loop
lahf
cld
inc
mov
popf
shll
mov
data16
and
dec
or
mov
cmpsb
lcall
push
icebp
cmc
js
push
scas
cmc
movsl
lea
sub
pop
sub
ljmp
jge
jge
mov
xchg
pop
mov
lcall
pushl
dec
ficompl
ljmp
aas
jecxz
inc
cmpsb
sbb
add
jg
ja
loop
int3
sbb
inc
adc
roll
fidivrs
bound
and
repz
ljmp
sbb
mov
hlt
arpl
adc
push
jecxz
das
pushl
inc
sub
push
outsb
adc
xchg
jp
lcall
idivb
loopne
xor
push
stc
in
ds
push
adc
mov
or
rolb
pusha
stos
jl
xor
outsl
fwait
stc
fmul
pop
mov
fldcw
ljmp
dec
or
cmpsl
mov
mov
xchg
inc
xchg
add
sub
push
ljmp
popf
aad
dec
pop
or
lret
aas
mov
mov
out
cmp
sub
out
ret
and
mov
push
and
and
loope
mov
xor
add
fdivl
das
fs
call
jb
inc
xchg
cmc
in
and
xchg
sbb
lea
imul
xchg
jno
xorl
or
das
mov
and
scas
pop
mov
sub
bndldx
ja
and
out
movb
sahf
mov
call
sbb
notb
mov
fmulp
cltd
xlat
jp
int
bound
jg
repnz
mov
aam
dec
fs
les
int
add
pushl
ja
mov
pop
test
jbe
fcompl
mov
enter
enter
incl
loope
jns
pop
pop
popf
xchg
into
shll
jno
stos
jmp
pop
adc
int
xchg
jnp
repz
fs
or
inc
mov
push
aaa
jp
pop
dec
pop
inc
pop
outsb
into
pushf
dec
mov
cli
inc
scas
into
sbb
roll
aaa
sbb
xor
in
fwait
jle
dec
jno
sub
add
jge
mov
test
nop
in
pop
test
scas
loope
icebp
cmp
icebp
es
xchg
mov
outsb
push
adc
call
adc
daa
out
jmp
imul
xor
mov
imul
mov
xchg
mov
add
lea
shrl
out
and
sarb
hlt
or
jle
nop
icebp
rolb
ljmp
mov
pop
out
push
daa
loope
and
pop
shll
pushl
imul
lea
xor
mov
mov
sbb
fadds
aas
outsb
out
and
fidivs
test
cmp
pmuludq
or
mov
sti
adc
pop
out
sbb
lret
loopne
adc
mov
decl
xchg
dec
ss
scas
lds
add
inc
stos
lcall
xchg
enter
or
arpl
arpl
cld
add
sti
mov
nop
scas
js
push
xor
gs
jo
or
xor
jl
sbbb
push
or
dec
pushl
jp
adc
jns
aam
jb
stos
and
pop
jne
xchg
mov
enter
fisttps
or
fidivl
call
outsl
addr16
jge
int3
mov
in
out
lods
addr16
cmpsb
inc
sub
jb
push
lcall
mov
cmp
stos
jbe
jmp
int
arpl
rcll
out
cmc
ds
loope
fucomip
and
pop
in
cs
and
xchg
cld
dec
insl
js
xchg
mov
mov
icebp
out
scas
push
or
ljmp
data16
xchg
movsb
inc
test
push
xchg
mov
xor
pop
mov
pop
pop
dec
push
add
inc
add
sahf
dec
and
fnstsw
fcmovnu
mov
xchg
rep
es
cmp
shrb
mov
mov
insb
cli
aas
testl
aaa
xor
pop
clc
ljmp
cmp
pop
lods
push
bound
in
push
push
cs
incb
cmp
adc
or
or
das
in
test
mov
int
adc
jp
push
loopne
aas
cmovp
negb
dec
xchg
mov
inc
hlt
fnstsw
push
mov
xlat
test
in
roll
cmc
daa
sti
inc
loope
jb
pshufw
jno
or
mov
and
push
sub
mov
mov
and
lods
jb
add
cld
pop
mov
sti
call
xchg
sub
or
pop
pushf
adc
pop
ds
sbb
outsl
sub
clc
xchg
subb
es
lds
push
cmpsl
or
jge
imul
mov
push
dec
jo
adc
mov
cmp
inc
out
aaa
call
pop
scas
pop
dec
fmuls
insl
pop
inc
decb
mov
mov
fstpl
mov
call
cmc
push
imul
and
sbb
aam
cmp
push
cli
jge
add
js
pushl
mov
hlt
cli
subl
test
pushl
stos
sbb
pop
and
push
xlat
push
cli
adc
add
decl
cmp
jb
xor
sub
sbb
jo
jnp
xor
cmp
jmp
sbb
xchg
pop
gs
stos
fcomi
xchg
das
push
mov
jmp
cli
mov
mov
jge
fs
jl
sub
test
or
in
lret
lahf
pop
fisttpll
outsl
xchg
jmp
pandn
dec
mov
mov
push
or
mov
mov
dec
popa
cmp
orb
in
je
and
cmpsl
push
mov
ljmp
aad
mov
xlat
mov
pop
mov
in
sbb
decb
aam
mov
decl
out
cmc
movsl
mov
and
std
jp
in
xchg
stos
mov
cmp
jns
adc
sub
aad
sub
test
cmp
inc
cmpsb
xchg
decl
leave
pop
jmp
je
cmp
rcrl
jb
icebp
test
aas
ret
je
sub
incl
jmp
mov
popa
jp
arpl
nop
jg
cwtl
sahf
fdivrl
jmp
mov
sbb
push
jae
rcrb
int
icebp
outsl
cmc
fnstcw
int
in
shlb
or
lea
jg
stos
std
int
and
pushf
js
mov
sahf
dec
adcl
hlt
lcall
lahf
adc
jmp
test
or
loop
insl
adc
shr
cli
sbb
push
jb
sub
pop
add
inc
dec
rcll
xor
insl
cwtl
mov
outsl
fcoms
dec
insl
or
push
pop
pop
adcb
push
sub
push
push
outsb
lcall
call
shlb
pop
add
or
in
cli
and
sarb
lods
jle
lods
imul
js
adc
ljmp
add
pusha
les
xor
movsl
mov
push
mov
jp
mov
out
pop
dec
add
xchg
cmp
lcall
std
flds
fmuls
push
push
nop
or
imul
daa
inc
dec
pop
sbb
mov
add
pop
cmp
mov
or
incl
add
jecxz
lock
sbb
adc
xlat
add
mov
jne
outsb
cmp
jge
mov
clc
add
imul
js
add
and
inc
movl
sarl
pop
and
mov
aam
movsl
xor
stos
movsl
addb
sub
lcall
jo
bound
testb
out
sbb
jno
and
inc
sub
add
add
loop
shl
add
inc
lea
jg
decb
adc
dec
push
inc
add
adc
cmpsl
test
test
inc
pop
push
xchg
dec
mov
push
call
push
movsb
ljmp
or
sbb
adc
clc
outsl
push
test
and
pop
push
leave
incl
adc
xor
scas
push
push
adc
movb
fadds
cld
inc
mov
dec
in
or
and
jb
cmp
pop
in
test
pop
mov
xlat
pop
stos
cs
test
iret
inc
add
test
in
out
adc
inc
lods
icebp
xor
int3
add
mov
in
jbe
arpl
mov
ljmp
ljmp
fidivs
fisubrl
adc
add
mov
mov
sub
jmp
push
test
cmp
cmpb
imul
dec
adc
pushl
and
rcrb
dec
xchg
mov
loopne
lcall
push
lods
dec
movsb
scas
add
and
fldt
arpl
mov
adc
jb
mov
out
out
dec
inc
jmp
push
dec
loop
or
aam
push
jp
ret
sub
dec
or
push
lret
lock
fcmovnu
mov
cltd
or
xchg
push
aam
mov
adc
jno
xchg
filds
loope
xchg
pusha
mov
hlt
stos
enter
xchg
jns
jno
ror
lahf
adc
dec
std
ud0
add
add
dec
incl
add
fsubrs
enter
mov
sbb
daa
xorl
mov
sti
addr16
testb
xchg
dec
pop
test
adc
cmp
sbb
fistpll
cltd
ljmp
or
ds
fstpl
cmp
sbb
jge
jnp
sbb
jle
ljmp
aad
or
mov
movsl
push
pop
push
and
and
mov
insl
dec
push
and
jmp
mov
aam
ret
sbb
mov
sbb
aaa
push
pop
movsl
clc
push
push
sub
addr16
sub
and
adc
sbb
movsl
push
roll
jg
arpl
pop
sti
testb
xchg
or
add
mov
out
xor
or
jns
adc
sub
test
std
push
nop
xlat
clc
es
xchg
outsb
mov
ss
hlt
sub
adc
call
addr16
inc
mov
add
loopne
sahf
pop
cli
adc
in
mov
dec
jle
or
mov
mov
mov
add
shll
pushf
mov
push
movsb
add
jge
sti
aaa
pop
imul
jl
nop
dec
xor
sub
inc
xchg
movb
add
outsb
cld
leave
ja
addb
or
and
inc
std
mov
jbe
loopne
lahf
push
jo
imul
mov
push
xchg
aam
add
or
xchg
adc
jo
sbb
add
mov
dec
mov
repz
inc
shrb
mov
mov
icebp
rorb
inc
jo
mov
sbb
jl
ret
sub
dec
adc
mov
mov
addb
xor
loopne
inc
or
aas
mov
cli
xchg
mov
push
pushf
test
mul
adc
xchg
cmpsl
arpl
jmp
mov
mov
add
fcom
push
cld
std
imulb
pop
xchg
and
sub
inc
mov
outsl
inc
push
inc
xchg
loopne
cmp
jmp
fldt
or
cmc
push
mov
cmp
ds
sbb
push
lods
add
iret
pop
jecxz
std
or
xor
lcall
pop
jg
mov
das
out
leave
add
in
and
push
cld
sbb
or
jmp
dec
imul
das
movsb
and
data16
add
in
adc
adc
mov
push
ret
scas
jne
cmp
cmpsb
outsl
cld
call
or
mov
or
bound
cmp
and
jno
push
xor
push
sbb
inc
cmp
add
pop
cmpsb
fistpl
jnp
xchg
sub
xchg
dec
ds
and
xorl
add
or
pushf
mov
sub
jg
cmp
and
jbe
call
sbbl
outsl
adc
jecxz
cmpsl
push
sub
mov
inc
sti
lcall
test
pop
out
out
jbe
mov
loope
clc
xlat
mov
outsl
fisttpl
jg
iret
stos
push
jmp
lret
xchg
xorb
sbb
loop
jae
jne
sbb
sarb
and
fistl
sarl
mov
lea
sahf
int3
push
inc
dec
push
xchg
mov
daa
fs
pslld
add
mov
js
mov
pop
pop
dec
pop
rorb
ja
sub
jp
sbb
or
mov
nop
in
jg
aaa
sbb
cld
leave
mov
mov
push
adc
mov
mov
push
add
xor
or
or
ret
inc
or
cli
loop
lock
pop
test
movsb
cmpsl
out
dec
push
xchg
add
insb
outsb
mov
jmp
jmp
inc
mov
push
pop
mov
out
dec
jno
fistps
mov
sub
add
adc
push
jb
cmp
mov
and
push
mov
icebp
or
sbb
xchg
or
mov
ljmp
push
push
or
sub
adc
imul
mov
mov
pusha
cmp
xor
xchg
inc
jno
jo
test
xchg
inc
stos
enter
bound
inc
in
jne
mov
pause
adc
sahf
jne
mov
pop
xchg
movsb
xor
test
outsb
gs
ljmp
out
and
scas
and
imul
dec
int3
dec
stos
mov
adc
inc
dec
cmpsl
cmp
lock
in
lcall
push
mov
jecxz
testb
inc
add
inc
jecxz
sbb
push
and
stc
clc
jg
push
or
test
pop
add
in
nop
test
arpl
mov
sbb
or
xor
xchg
sti
sbb
out
dec
imul
shrb
inc
add
dec
sub
stos
ljmp
mov
out
inc
sub
add
daa
add
jo
xchg
cmp
icebp
js
xchg
fidivrs
outsl
enter
push
jno
mov
pusha
sub
fdivrl
xchg
es
fsubrs
fdiv
negl
ret
mov
cwtl
rorl
cmpsb
add
fidivrs
mov
rcr
mov
pop
inc
add
out
pop
sbb
subl
push
jecxz
lods
pop
jmp
cmp
adc
fnstsw
rcrl
sbb
ljmp
cmc
je
test
dec
das
sbb
push
cli
mov
sbb
loope
and
add
add
aas
inc
or
mov
les
and
movsl
outsl
mov
mov
sub
sbb
ret
mov
test
adc
out
and
pop
push
arpl
pusha
aas
or
push
jecxz
push
jbe
adc
or
sarb
lods
and
cltd
testl
fcmovnb
adc
pop
add
ljmp
mov
mov
fbld
test
mov
mov
mov
mov
lret
clc
test
jo
xchg
and
loop
and
aad
xor
pop
push
and
lods
repz
cmpsl
push
lock
test
push
sub
scas
gs
movsl
movsl
pop
mov
mov
push
jecxz
lret
stc
lods
pop
mov
je
pop
data16
push
je
in
sbb
push
dec
mov
mov
adc
lods
pop
xchg
fcoms
div
popa
lea
sbb
rcll
arpl
mov
test
rol
lret
aam
mov
nop
call
jmp
out
cmpb
outsb
mov
test
cmp
pop
push
and
pushf
es
jmp
dec
add
in
mov
sti
push
xlat
cwtl
fildll
icebp
dec
add
push
add
mov
in
pop
or
cmp
or
sbb
mov
xor
mov
arpl
mov
pop
push
push
sub
fisubl
fwait
or
inc
push
jmp
pop
test
xchg
fdivrs
into
pop
xchg
and
push
cmpsl
sub
mov
mov
addr16
xor
and
inc
sbb
daa
or
movsl
adc
bound
adc
outsb
das
mov
mov
sub
xor
not
outsb
cmp
test
aad
jo
rcrl
adc
xor
mov
mov
scas
push
fidivrl
shlb
inc
pop
leave
jecxz
shl
in
enter
test
setp
lahf
cmp
add
pusha
sub
shlb
jl
xchg
and
adc
pop
imul
test
adc
mov
fwait
test
movsb
lods
adc
test
shlb
or
lock
sub
pop
fisubl
insb
jp
decb
aam
dec
test
call
jge
mov
xor
call
cli
mov
sub
pop
test
jg
out
pop
decl
pop
loop
pop
and
dec
call
clc
adc
or
push
loope
jbe
and
cli
test
xchg
mov
and
jne
push
imulb
data16
sub
mov
stc
mulb
divb
mov
add
or
and
flds
fbstp
test
push
cld
mov
aas
pop
js
xchg
repnz
cwtl
xchg
or
sub
mov
ja
std
aas
lds
mov
pusha
pop
loope
out
dec
mov
xor
jno
or
test
decl
mov
xlat
jmp
in
in
or
movsl
pop
dec
dec
sbb
testl
mov
or
adc
mov
fdivr
lret
mov
add
and
lods
adc
mov
call
mov
and
push
lea
clc
shll
jb
add
lock
js
xchg
cs
and
sti
mov
lods
adc
add
addl
jns
ljmp
pop
and
clc
adcb
dec
pop
sub
cli
pop
jp
lret
cs
mov
xchg
dec
push
pop
loopne
mov
std
sbb
pop
add
xchg
add
lods
cmp
dec
daa
sub
mov
push
inc
push
pushl
pop
push
or
loopne
daa
ret
sub
sbb
je
sub
sarl
mov
pop
test
sahf
decb
mov
sbb
mov
dec
into
jle
in
cs
jmp
inc
sahf
dec
stos
ljmp
xchg
fbld
in
popf
push
mov
sbb
loopne
xor
in
aas
push
mov
jmp
and
cmp
addb
cli
dec
cmp
mov
stos
loop
cltd
pusha
pop
xor
xchg
lock
cs
sbbl
xlat
imul
pop
sub
adc
mov
push
ja
shll
in
mov
or
lea
jns
lods
lock
mov
jecxz
jno
ljmp
ss
push
or
mov
ljmp
das
imulb
inc
sbb
jb
push
cmp
lods
in
jnp
adc
push
fisubrl
das
rorb
dec
in
bound
repz
pop
adc
mov
mov
bound
imul
mov
das
out
sub
mov
sub
mov
jg
sub
sbb
daa
test
fs
pop
testb
repz
incl
scas
int
push
add
popa
repnz
fsubl
jns
and
adcb
xchg
mov
pop
lea
pop
push
push
iret
cmp
sub
sbb
fdivl
inc
mov
fwait
pop
xlat
jno
fsubrs
sbb
ficoml
lock
pop
mov
test
rolb
je
mov
lret
xchg
ds
int
cmp
incl
jb
push
pop
push
cmp
inc
pop
ds
mov
sub
mov
xchg
push
mov
insl
xor
pop
in
mov
js
setbe
mov
push
ud0
mov
rcll
clc
jb
lock
dec
sub
mov
mov
or
pop
enter
or
push
test
mov
mov
mov
xchg
outsl
fdivr
pop
add
or
xchg
mov
mov
ret
in
push
in
xchg
pop
fstps
add
adc
dec
lea
mov
xchg
mov
xchg
xor
rorl
cs
mov
ret
xor
cs
clc
inc
lret
sbb
loop
dec
test
lret
jge
or
rcrl
jne
adc
adc
sbb
dec
push
mov
inc
jl
jmp
incl
mov
movsb
inc
and
loopne
cs
lds
xchg
mul
dec
xlat
or
fstpl
sub
scas
mov
hlt
pop
shr
dec
std
sub
inc
or
xor
xor
fwait
insl
fisubs
loop
add
jp
jmp
dec
xor
sbb
mov
andl
ret
lock
xor
push
addr16
add
add
std
outsl
cmc
cmp
sub
cmp
ret
fcomip
and
sub
out
cmpb
loop
push
sti
sbb
adc
fidivs
ret
pop
mov
adc
and
adc
pop
sbb
jmp
fdiv
fmul
jns
dec
in
jns
aam
xchg
cwtl
push
jmp
xlat
gs
and
or
push
lock
testl
fstpt
fidivrl
jno
push
jl
sub
test
and
addb
pushw
jmp
insb
sub
js
lds
push
sbb
cmp
cmpsl
push
clc
test
popf
mov
pop
mov
orb
pushf
pop
inc
adc
xor
cld
das
icebp
or
mov
test
aaa
cld
jl
and
out
pop
pop
ss
loopne
pop
insl
pushf
push
add
sbbl
inc
shlb
ljmp
inc
aam
fcmovnu
jb
sbb
sahf
std
enter
mov
and
sti
adc
add
int
testl
push
outsl
insl
mov
jae
jbe
mov
ss
loopne
push
rorl
dec
or
push
ljmp
mov
iret
adc
sbb
add
sub
jo
lock
pusha
fcoms
sub
test
out
repz
jle
dec
dec
push
movsl
pop
sahf
push
rcrb
and
out
push
inc
mov
loop
cltd
leave
pop
scas
out
hlt
movsl
mov
jle
add
and
jns
pop
clc
lret
das
sahf
popa
dec
in
lods
enter
test
and
jge
jecxz
inc
jns
fs
scas
or
cmpsb
cmp
dec
or
call
inc
ds
push
mov
int3
dec
sbb
andb
fiaddl
jmp
pop
mov
sub
mov
out
out
pop
test
aas
mov
jo
mov
jo
mov
add
addl
inc
aas
xor
int3
push
incb
mov
test
neg
pop
cmpb
sahf
fdivl
stos
clc
ret
push
int3
xor
icebp
pop
pop
inc
mov
leave
or
xor
xor
shl
lock
push
fsts
pop
pop
call
mov
imull
xlat
leave
enter
jmp
mov
xchg
lods
lds
push
adc
aam
insb
shrb
hlt
les
adc
mov
cltd
das
imul
add
adc
sbb
cmp
mov
pop
stos
push
dec
jnp
ret
call
and
pop
and
scas
mov
sbb
loope
pop
jge
mov
inc
jmp
xlat
cltd
aaa
inc
lods
icebp
into
bnd
js
popa
inc
enter
test
pop
repz
dec
mov
push
and
rolb
inc
push
jo
mov
decb
pusha
pop
mov
dec
mov
xchg
cmp
lods
sbb
or
stos
ret
mov
inc
or
out
out
and
xchg
test
push
sub
popa
add
rolb
sbb
sbb
loope
push
mov
fisttpl
or
mov
pop
enter
incl
dec
cmp
movsb
outsw
popa
ja
test
xor
int3
sbb
hlt
adc
cmp
fcmovu
stos
movsl
or
outsb
mov
xchg
jl
add
mov
push
push
loope
mov
dec
addl
sub
das
mov
jne
int3
outsb
cmp
jne
jmp
ja
xchg
inc
movsl
jl
rol
mov
jge
lret
mov
and
sbb
xchg
cli
and
mov
sbb
loope
mov
das
std
in
test
adc
sbb
repz
dec
add
pop
cli
iret
or
mov
ss
push
addb
inc
xor
pop
sbbb
mov
movsb
sarl
pop
mov
jb
sbb
sbb
aaa
sbb
daa
and
jg
std
xlat
mov
cmp
or
jl
jp
mov
mov
mov
insb
or
ss
inc
hlt
fistpl
dec
mov
daa
arpl
div
lock
xlat
jg
movsl
ficoml
add
ret
mov
inc
adc
cmp
dec
cmpsl
mov
cmp
fcmovb
das
shl
adc
xlat
xor
push
sar
mov
aam
dec
push
jmp
imul
sbb
dec
into
cs
and
fistpl
in
out
mov
popa
ret
pop
out
mov
mov
fdivrs
xchg
inc
adc
push
lea
mov
mov
loope
repz
add
int
xchg
jmp
testl
adc
or
int
ljmp
cs
sub
jno
sub
clc
push
nop
push
shll
fwait
and
sbb
outsb
or
mov
lret
sarb
mov
jecxz
mov
mov
adc
gs
stos
mov
xor
in
adc
pop
sbb
push
and
mov
mov
inc
icebp
cmp
mov
lods
xor
les
int
cmp
pop
arpl
int
fwait
mov
pop
mov
das
ret
je
mov
not
inc
mov
push
fists
idiv
cltd
cmp
loopne
cmp
push
xchg
std
orl
add
insb
les
jae
loop
outsl
jg
out
mov
in
lahf
fwait
imul
inc
add
sub
sbb
mov
add
xchg
pop
jns
cltd
jl
enter
sub
pop
loop
jg
xor
xchg
js
fnstcw
outsl
push
adc
or
dec
ja
jbe
iret
pop
subl
xor
and
pop
rcll
nop
xchg
loop
pop
push
ja
outsl
add
shlb
pop
enter
sbb
push
in
pop
xchg
cwtl
jns
add
jl
iret
mov
fbld
fbld
mov
push
ds
ja
stos
or
jns
mov
fisttpll
cmpsb
pop
add
out
in
fdivrs
push
imul
rorl
add
xor
ja
imul
test
jo
pop
loop
adc
repnz
je
jae
xchg
push
cmp
or
fldcw
lahf
cmp
jmp
inc
mov
lock
insl
cmp
mov
jo
dec
xor
and
xchg
cli
add
movb
cli
pop
or
and
dec
jle
or
mov
inc
pop
push
inc
inc
adc
incb
fbstp
xlat
mov
inc
inc
bound
ljmp
lret
sub
insl
or
and
mov
dec
test
lret
movsl
push
mov
pop
arpl
sub
lock
sti
lret
push
pop
fdivr
outsl
cld
pop
inc
sti
push
aad
dec
mov
rcrb
push
jle
aad
mov
divb
lea
stos
notb
sbb
test
lods
xor
cmp
cltd
mov
ja
fisttps
inc
popf
loope
adc
ret
inc
and
adc
jg
ja
push
insl
lea
cmp
into
subl
sub
mov
pop
sbb
data16
fistpll
push
test
call
hlt
add
pop
lock
sub
mov
das
mov
imul
pusha
adc
lcall
test
mov
sbb
mov
mov
pushf
sbb
pop
cli
mov
and
fprem
movsl
xor
shll
lods
pop
dec
insb
and
stc
sub
add
jg
mov
jg
fwait
pop
je
push
jne
jae
stos
push
push
xchg
icebp
and
cli
push
popa
and
pushf
xor
pop
mov
xor
inc
mov
movsb
lea
mov
adc
test
outsl
mov
mov
xor
pusha
in
xchg
in
loope
repnz
das
lds
loope
mov
ret
mov
roll
xchg
das
mov
mov
cmp
pusha
int3
popa
loope
lock
lret
sbb
xchg
lea
lret
fucomip
jle
xor
fdivs
push
mov
mov
add
lahf
fistl
pop
sbb
mov
into
adc
les
mov
scas
or
jge
or
cmpsb
mull
xchg
lret
and
rorb
mov
push
mov
or
je
and
jnp
adc
xchg
dec
cs
test
mov
dec
loope
adc
cwtl
cld
cli
lock
outsl
jb
pop
loopne
pop
outsl
jg
inc
adc
mov
pop
clc
aam
addb
cli
ret
sub
mov
inc
mull
add
sub
mov
dec
mov
cmp
or
sub
xchg
dec
cmpsb
push
iret
lds
and
dec
sbb
xchg
jle
add
stos
or
imul
sti
insl
push
test
cmc
mov
leave
ljmp
cmp
pusha
mov
or
jo
daa
jne
das
lock
cld
cli
xchg
add
in
fldcw
addr16
sub
orl
sub
bound
rcll
fimuls
roll
incl
dec
movsl
iret
fsubrl
cld
push
mov
jecxz
add
jp
mov
jg
test
rclb
lods
jns
inc
out
icebp
cli
negb
and
cmp
stos
xor
pop
test
mov
rcrl
out
pushf
adc
call
dec
gs
hlt
push
push
fistps
adc
sysexit
es
mov
pop
fldt
jo
iret
hlt
inc
adc
push
lcall
sub
xchg
cltd
aas
mov
jb
jge
jbe
or
cmp
icebp
xchg
mov
or
ficoml
rclb
lock
subb
sbb
and
leave
sbb
pop
and
add
mov
xchg
leave
movl
loop
mov
movsb
sbb
mov
outsb
gs
sarb
sub
inc
inc
inc
movsb
mov
dec
or
test
sbb
pop
pop
pushf
cs
fsin
pushl
movsb
push
add
cmpb
ret
fistpl
sbb
pushf
roll
xchg
add
mov
rcrl
repnz
roll
aaa
or
outsl
fistl
mov
lret
fs
add
xchg
push
jmp
mov
adc
pop
sub
xor
into
data16
pop
inc
sti
mov
or
mov
xchg
push
pop
sbb
mov
fistpll
mov
inc
mov
es
jp
and
cmpsb
lret
jae
sbb
jp
daa
mov
sub
int
sbbl
pop
rcr
jecxz
add
je
mov
jb
push
in
ljmp
test
lea
xor
ret
jno
hlt
aas
adc
adc
push
nop
push
aam
dec
dec
sub
mov
or
dec
sbb
imul
mov
fs
jmp
shll
push
lar
inc
dec
add
aaa
push
out
iret
push
push
ret
or
imulb
xchg
hlt
xor
mov
sub
pop
insb
stos
leave
test
push
inc
fimull
test
pop
sar
dec
hlt
xchg
adcb
sub
inc
mov
xchg
jne
shl
test
outsl
adc
mov
stos
notl
imul
dec
filds
pop
clc
cmp
cmp
adc
cmp
test
movsb
push
dec
add
dec
push
and
into
clc
xor
or
mov
dec
push
mov
cwtl
xchg
xor
scas
fidivrl
test
cltd
add
inc
xchg
dec
and
out
ret
mov
xor
mov
out
mov
cmovle
subl
fs
stos
movsl
pop
cmpsb
ss
mov
and
or
and
sbb
jecxz
dec
add
mov
clc
push
xchg
dec
out
and
imull
mov
sbb
pop
and
lret
jno
or
xchg
jo
cwtl
cmp
or
js
jge
cld
push
std
and
and
inc
leave
push
add
inc
or
fstpt
aam
xlat
and
jmp
adc
push
std
gs
ds
add
push
dec
in
leave
mov
mov
enter
cltd
add
jae
popa
xor
and
xor
pop
ljmp
xchg
sahf
pusha
sbb
jle
fistpll
rorb
movsl
test
cmp
xlat
push
jl
daa
mov
cmp
jno
lret
andb
push
out
sub
mov
or
add
add
test
cld
movsl
pop
jnp
inc
mov
loope
leave
mov
inc
xor
into
jge
sti
jg
imul
cmp
jae
or
int3
or
sub
add
aaa
std
hlt
jmp
jg
jb
inc
inc
ds
xor
ljmp
clc
inc
mov
rcrb
mov
sub
and
push
inc
dec
or
mov
into
in
mov
or
pop
mov
aas
pop
xor
and
ljmp
pop
pop
inc
lds
mov
mov
mov
jae
adcl
lea
fildll
aas
xor
pop
inc
dec
or
fcomi
sbb
or
inc
scas
mov
shl
and
push
js
ss
jo
push
push
jne
sub
add
pushf
push
and
ret
or
add
mov
sbb
cmp
in
jno
das
icebp
sbb
in
pop
notl
mov
or
adc
in
or
pop
clc
pop
mov
mov
and
xor
adc
pop
pop
mov
dec
aam
xchg
jg
aas
xchg
cmc
es
xor
inc
mov
mov
or
cwtl
push
xchg
mov
or
loop
in
push
pop
mov
jmp
fwait
or
or
xchg
stos
into
jmp
mov
mov
or
mov
rclb
push
vmread
mov
push
shll
push
or
call
hlt
mov
pop
or
mov
nop
push
inc
fwait
ss
stos
xchg
es
cli
ret
adc
jle
jne
stos
dec
sub
cmc
pop
fisubs
nop
popf
leave
jle
movsb
popa
call
repnz
inc
mov
push
and
push
fstpt
add
mov
xor
call
xchg
xor
shrb
push
cmp
clc
sbb
or
mov
call
repz
pop
xchg
cmp
negb
stos
bound
fistps
ds
rolb
pop
arpl
pop
es
add
cmp
loope
inc
and
inc
mov
mov
andb
cltd
xor
insb
cmc
push
add
xchg
pop
push
push
xor
pop
inc
mov
jl
setp
and
push
sub
push
push
jo
lods
pop
mov
xlat
iret
dec
adc
js
cltd
in
push
fstpt
xchg
xor
mov
loop
mov
loop
es
aad
adc
ret
mov
adc
mov
movsl
lods
movl
push
pop
sub
sub
mov
insl
mov
inc
ja
add
dec
pop
pop
and
outsb
xchg
mov
je
jmp
push
pop
cli
cmp
sbb
js
bound
mov
inc
outsl
and
push
popf
xor
pusha
jle
add
sarl
push
push
nop
mov
fwait
or
mov
mov
cwtl
jge
and
adc
clc
imull
fsubrl
cld
dec
or
mov
sub
rep
pop
leave
mov
cmc
fbstp
popf
test
push
sbb
pop
fldl
daa
adc
mov
push
jle
leave
aas
push
clc
fistps
dec
jo
cmp
or
pop
sahf
sub
mov
add
sbb
inc
orl
dec
dec
xchg
addl
popa
sti
mov
test
push
push
pop
xor
jp
das
mov
mov
andb
mov
or
les
lods
jbe
rcr
xchg
dec
aaa
bound
pusha
fucomip
mov
sub
mov
inc
ds
adc
notb
push
add
fstl
dec
mov
call
test
sub
jo
icebp
inc
int
sbb
das
loopne
push
adc
sbb
push
insl
mov
sbb
pusha
int
sub
fnsave
lods
push
mov
inc
ffree
and
icebp
aas
inc
mov
leave
testl
mov
movsl
mov
mov
subb
xlat
mov
pop
out
push
dec
cmp
gs
xchg
mov
mov
incl
add
pop
shl
adc
test
incl
xor
pop
fwait
xchg
lock
outsl
cli
ds
fildl
or
lret
jp
fisttps
adc
or
push
mov
add
aas
mov
mov
or
aaa
add
popa
test
cmp
decb
and
sbb
dec
mov
repnz
push
andb
push
adcb
mov
jle
lret
std
fcoml
or
mov
mov
adc
imul
pop
in
inc
into
mov
push
int3
xchg
and
dec
iret
lods
insl
mov
popl
hlt
movsb
inc
xlat
adc
arpl
pushf
pop
mov
outsl
stos
roll
xor
push
mov
shl
clc
inc
shl
mov
inc
dec
cmp
subl
inc
pop
fsubl
xchg
movsb
push
dec
int3
jp
imul
cwtl
push
cwtl
addr16
sub
pop
or
into
je
pop
dec
cld
add
addr16
mov
jp
test
loopne
add
adc
xor
or
insb
scas
inc
popa
jecxz
shlb
daa
fs
mov
es
or
and
cmp
inc
es
std
scas
push
fcmovnb
test
inc
repz
stos
imul
pushf
fdivr
sahf
inc
lods
roll
xor
push
stc
or
loopne
fildll
mov
pop
inc
sti
ret
xor
ja
and
mov
clc
mov
shlb
lcall
jmp
arpl
shlb
pop
cs
mov
cli
and
ret
std
pop
sbb
xor
xchg
and
jecxz
sbb
js
call
dec
mov
lcall
sar
es
sub
sub
test
es
es
mov
test
jo
insb
mov
orl
inc
xor
adc
push
sbb
clc
inc
rorl
cs
jmp
mov
lret
mov
pop
mov
cltd
and
xchg
push
and
or
aad
push
cwtl
xor
mov
push
aas
adc
mov
shl
out
dec
lock
xor
outsl
mov
push
sbb
leave
xchg
mov
mov
mov
lods
lret
clc
mov
lock
push
lock
cld
ffree
add
es
push
mov
xor
shll
mov
ret
fmull
orb
aam
ret
out
pop
cwtl
or
mov
add
imulb
inc
add
out
jo
in
inc
dec
into
mov
sub
sbb
sub
adcl
inc
int3
sbb
xor
dec
sub
loop
mov
mov
jbe
add
fadds
loop
or
sub
movsb
adc
rcr
and
cmpsb
es
js
and
mov
outsl
sti
stos
cmc
mov
dec
adc
ret
jle
push
inc
dec
inc
inc
in
rol
adc
cmp
fwait
xchg
adc
mov
inc
sub
int
pop
push
inc
lahf
cli
mov
xchg
les
subl
pop
jg
imul
ljmp
fimuls
adc
stos
or
and
cmc
test
es
dec
imul
das
mov
dec
and
adc
lock
sub
icebp
jb
mov
pushf
pop
cmpsb
mov
nop
mov
out
add
jle
stos
in
xor
cmpsl
cmpb
cs
push
cmpsb
addr16
fld
dec
ja
lahf
adc
dec
jo
and
insb
jge
cmc
fucomi
inc
popl
jo
pop
pop
stos
repz
pop
test
push
jne
mov
or
or
shll
std
leave
lret
dec
jno
rol
pop
or
xchg
and
inc
call
shll
inc
jp
and
mov
or
dec
outsl
lret
inc
cmpsl
pop
push
jo
or
cmp
adc
jno
js
aam
les
cwtl
jecxz
mov
add
mov
jno
mov
mov
stos
std
das
rclb
int
aam
scas
icebp
inc
pop
mov
das
xor
icebp
cmp
aad
addr16
leave
push
std
loop
or
mov
stos
mov
fxch
iret
test
pop
push
fsubrl
mov
adc
push
push
les
dec
adc
push
inc
sbb
xchg
jg
mov
movl
jl
add
cmpl
int
outsb
fistpll
das
dec
sbb
out
mov
adc
sbb
pushl
cmp
stos
jl
mov
rclb
dec
mov
cld
push
push
sbb
fdivr
es
mov
sbbb
push
mov
test
jg
in
inc
inc
pop
and
sub
loop
adc
stos
fistpl
add
push
cmc
icebp
mov
pop
dec
es
adc
and
insl
mov
sub
popa
lret
or
divb
push
inc
test
pusha
or
jp
pusha
outsb
std
testb
movsb
out
jns
sub
hlt
rcl
sar
pop
sub
dec
xor
xor
das
mov
fistpll
or
lret
push
inc
add
cmp
adc
push
std
adc
into
fs
sbb
cwtl
cs
push
pop
sub
rorl
adc
xor
scas
or
aas
cld
test
test
ret
jmp
arpl
fisttpl
sbb
test
shrb
mov
fwait
or
das
std
pop
pusha
add
loopne
sub
pop
clc
xchg
rclb
loopne
mov
js
adc
fsubl
sub
cmp
or
dec
mov
or
ja
xchg
daa
test
lcall
loope
in
cmp
aam
enter
loope
mov
sbb
sub
shll
pop
mov
adc
cs
aas
pop
iret
mov
decl
adc
test
lods
fstps
test
inc
pop
sahf
push
mov
and
clc
int3
call
dec
jae
sbb
mov
jne
fcmovnu
push
push
ret
out
addr16
insb
mov
inc
rcrl
out
cs
clc
sbb
adc
add
lahf
imull
mov
lcall
mov
sbb
sub
xchg
inc
pextrw
insl
jg
mov
shlb
add
fcoms
jle
push
outsb
repnz
rorb
sbbl
sahf
and
out
pushf
daa
mov
mov
mov
mov
and
ss
add
mov
movsb
add
call
sub
push
ds
syscall
insl
loop
push
jecxz
pop
loopne
pusha
xchg
or
cwtl
adcl
fildll
mov
loop
cmpsl
xor
ja
xor
xor
repnz
pop
das
faddl
or
push
gs
xchg
push
icebp
in
mov
adc
jmp
popf
or
fstpt
ja
dec
sbb
push
sar
and
jecxz
fnstcw
cs
repz
nop
jmp
or
dec
push
cmp
jp
sbb
xchg
movb
mov
jns
pop
pop
loop
push
xchg
inc
sbb
and
inc
sahf
jae
pop
fisubs
mov
movsl
push
mov
sbb
inc
shlb
pop
stc
aas
xor
aaa
dec
mov
or
repnz
pusha
in
mov
jg
cmp
xor
or
hlt
sbb
sbb
add
mov
push
xchg
sub
sarl
xchg
jmp
ljmp
hlt
or
pop
mov
outsl
mov
adc
cltd
sub
pop
sahf
cmp
das
sub
imul
in
xchg
lcall
loop
sub
adc
push
sub
push
aam
arpl
inc
nop
mov
shlb
lea
rcl
pop
jne
dec
in
and
or
aad
loope
mov
push
or
inc
adcb
xchg
js
adc
pushf
je
inc
js
mov
into
sbb
jle
push
fcoml
and
sti
rolb
dec
lea
push
outsl
lods
mov
je
xor
and
pop
fdiv
mov
out
sbb
pop
mov
xchg
cmp
inc
icebp
ja
rcll
out
scas
jo
cltd
stos
and
jnp
sub
aad
aam
sub
aaa
lock
or
mov
js
cmc
test
jne
xchg
incl
push
and
mov
sbbl
test
pushl
aas
mov
and
stos
hlt
adc
adc
aad
xchg
mov
mov
cli
pop
lret
pushl
or
outsl
cld
in
dec
xorl
arpl
mov
xchg
rcrl
push
mov
hlt
ljmp
call
xchg
test
incl
xchg
jb
or
leave
or
adc
xchg
mov
push
mov
shll
xchg
sbb
dec
aaa
mov
or
xchg
iret
dec
mov
push
je
jne
mov
inc
inc
xor
pop
sub
sbb
outsl
fisttps
sbb
stos
and
std
mov
nop
pop
daa
ret
lock
subb
and
jne
mov
out
mov
adc
push
jl
dec
jg
and
jecxz
xor
aas
test
xor
push
mov
fsts
push
pop
in
aaa
cmc
cwtl
mov
adc
lock
sbb
mov
mov
cmpsb
dec
cmp
sub
clc
xor
jecxz
ficomps
pop
data16
jg
pop
cmp
push
mov
sbb
and
lods
cmovp
cmp
cmc
push
cwtl
jns
mov
inc
fsubrs
dec
iret
and
inc
icebp
outsw
push
sbb
dec
dec
mov
mov
int3
loopne
mov
push
inc
outsl
jb
mov
testb
leave
or
repnz
orl
rclb
sbb
jne
fimull
rorb
fcmovu
mov
aas
jg
sub
dec
hlt
xchg
mov
add
pushf
dec
sbb
icebp
cmpsb
cs
pop
dec
adc
push
sbb
add
aam
imul
xor
inc
jmp
je
jle
mov
nopl
stc
cs
or
xchg
mov
mov
in
fildll
mov
push
iret
fsubrl
outsl
out
sahf
xor
mov
gs
inc
inc
aam
andl
addr16
mov
mov
sbb
test
es
and
adc
loopne
jno
push
mov
lcall
xor
test
jg
cmp
mov
nop
pop
xor
sub
je
dec
fcmovnu
scas
pop
add
in
dec
sub
subb
dec
push
dec
ror
mov
sbb
cltd
mov
cs
aad
xor
out
arpl
scas
push
outsl
xchg
pusha
cmpsl
je
fisttpl
adc
mov
adc
jg
xchg
jmp
aam
inc
lods
dec
into
ljmp
xlat
movsl
xor
arpl
mov
push
notb
push
and
pop
or
inc
add
add
and
pop
leave
add
mov
pop
mov
icebp
mov
ss
push
test
xchg
out
rcl
or
shrl
pushf
pop
xlat
lret
pushf
inc
xchg
out
pop
mov
inc
in
sbb
mov
in
cli
icebp
mov
mov
sub
push
icebp
or
adc
and
pop
rorl
or
mov
mov
pop
rorl
mov
ljmp
sub
add
cmp
jl
or
mov
jbe
imul
and
outsl
test
jge
inc
pop
adc
jecxz
mov
or
dec
int3
push
ds
leave
les
or
pop
sbb
sbb
pushf
adc
adc
mov
pop
lea
add
xchg
jne
cmc
dec
lds
adc
test
inc
push
jb
or
mov
and
fwait
cmp
or
xor
jg
mov
mov
mov
and
dec
std
jmp
in
test
test
test
xchg
and
xchg
ret
shl
incl
mov
push
and
push
sti
cld
aaa
add
mov
ss
xchg
and
sahf
std
or
add
mov
push
dec
inc
ror
pop
adc
mov
push
andb
shlb
xchg
outsl
dec
push
clc
gs
push
daa
xchg
or
int
inc
jo
iret
movsl
mov
lods
dec
les
mov
in
mov
ljmp
jp
jo
mov
hlt
imul
lahf
and
faddl
xchg
xor
test
sbb
ja
and
mov
icebp
movsl
dec
dec
imul
or
clc
ret
daa
lahf
mov
sbb
outsb
mov
dec
sbb
arpl
lock
push
ret
or
sti
jae
mov
bnd
mov
mov
out
sub
mov
ds
movsb
inc
fisttpl
test
inc
adc
jbe
mov
enter
popa
add
sub
fisttpll
inc
sub
and
jmp
pusha
into
jle
jge
mov
mov
cmp
rorb
add
push
leave
jo
ljmp
es
mov
insl
hlt
mov
dec
lret
push
outsb
call
mov
mov
mov
rcrb
jge
cmp
adc
xchg
loop
orb
pusha
mov
xchg
iret
enter
rcll
cmp
and
lock
cmp
testb
daa
ss
push
sbb
sarb
cmpsl
add
sub
xor
pop
jg
popf
and
call
xchg
inc
fcoml
scas
push
nop
mov
fs
lcall
dec
ss
decb
insb
inc
nop
rcll
dec
in
aaa
in
mov
test
add
das
mov
xchg
push
lods
in
sub
ja
pop
xchg
mov
sub
xchg
jns
bound
ret
incl
cmp
push
sbb
and
jg
scas
push
movsl
decl
inc
jecxz
or
cli
into
xchg
and
pop
sbb
jg
push
jno
and
mov
movsl
pop
into
lds
or
jle
movsl
ds
es
push
in
std
mov
rorl
push
add
mov
push
cmp
mov
jg
and
stos
fisttpll
mov
push
push
call
ret
ret
ljmp
mov
xor
jbe
sahf
xor
sbb
mov
mov
pushf
push
xchg
ffree
and
mov
cld
popl
cwtl
dec
test
aaa
mov
shrb
mov
or
movb
sub
ss
adc
pop
lds
movsl
lret
sti
bswap
ret
addb
or
xlat
push
dec
cmp
int
aad
jb
jg
addr16
shrb
mov
imul
gs
mov
fnsave
pop
aas
das
std
dec
push
bound
leave
xor
mov
sar
inc
mov
pop
movsb
jo
jae
jne
sub
divl
mov
mov
adc
and
inc
add
pop
dec
in
or
jmp
aaa
loop
andl
lods
arpl
lahf
xor
test
fidivrl
mov
out
mov
cmp
out
push
inc
mov
movsb
jnp
repnz
pusha
aad
mov
push
lcall
hlt
adc
mov
xlat
and
xchg
je
jg
push
insb
arpl
adc
mov
xchg
iret
popw
in
mov
jle
sbb
lea
fnsave
pop
and
mov
sub
call
outsb
add
push
cmpsb
cmp
xchg
outsb
incl
jno
xor
dec
jb
lods
push
jl
pop
and
dec
jp
fwait
iret
sub
test
out
mov
jle
in
xor
arpl
ds
push
aad
push
sbb
psubsw
fildl
mov
xchg
mov
push
inc
je
imul
fld1
int3
rcrb
outsl
mov
popl
addr16
insl
mov
pusha
movsl
mov
inc
outsl
sub
negb
into
int3
jne
rcll
mov
push
adc
pop
jbe
mov
outsl
fs
scas
ljmp
push
cld
cs
pop
out
push
movsb
sbb
jmp
divb
stos
or
xchg
cmp
pop
xor
dec
ret
in
xorb
rolb
jg
scas
inc
xlat
lods
mov
mov
insb
cld
xor
cltd
les
pushl
cli
dec
pushf
loope
inc
aad
test
cmp
in
jmp
mov
pop
imull
push
pop
mov
mov
lcall
sbb
loope
mov
cld
call
jbe
inc
out
sbb
call
jmp
sbb
sbb
inc
pushf
popf
push
mov
dec
jp
sbb
lea
pop
jbe
lock
push
sarl
cld
xchg
lcall
pop
jb
pop
sbb
dec
fldcw
add
iret
cli
incb
ja
insb
shrl
adc
pop
incl
or
lock
pushf
jo
neg
jge
incl
call
or
or
imul
adc
loop
int3
shlb
adc
sub
lods
mov
cld
jecxz
dec
in
pop
shlb
repz
pop
stos
test
and
addb
xor
das
adc
xchg
inc
adc
mov
xlat
inc
mov
jl
ret
fstps
pop
clc
push
mov
dec
mov
js
int
or
addb
mov
movsl
xor
leave
sbb
pop
sbb
lret
nop
outsb
test
add
xchg
jl
mov
push
adcb
jbe
dec
rolb
dec
in
inc
in
pop
mov
jecxz
cs
movsb
inc
inc
and
mov
in
mov
decb
call
rorb
xor
mov
sbb
pop
fstps
sbb
and
scas
sub
mov
pop
push
pop
add
call
and
mov
lods
fucom
jecxz
dec
loopne
movsl
insl
or
mov
adc
pop
sbb
and
rcr
sub
xchg
mov
out
mov
sub
test
push
jl
jae
call
mov
rcl
mov
and
loopne
incl
and
xchg
jmp
mov
bound
mov
das
filds
lcall
add
add
mov
pop
xor
fidivl
lds
js
or
test
push
subb
mov
push
mov
cld
incl
jne
and
jg
lods
test
xor
mov
pop
shlb
xchg
jns
lahf
sahf
pop
push
mov
cs
fisubs
adc
les
mov
bound
mov
mov
or
mov
sub
sub
mov
push
mov
loope
adc
sub
fcoms
add
fsubl
xchg
mov
data16
lds
cmp
shr
aam
loop
enter
loop
movsb
jne
mov
decl
lods
xor
inc
scas
movsl
pop
test
and
cmpsl
dec
cmp
xchg
pop
ret
incl
sub
ds
stc
fistl
push
cltd
push
inc
jns
push
and
mov
adc
subb
dec
xorb
in
cmp
pop
mov
sbb
lds
jle
and
call
outsl
inc
push
mov
adc
test
dec
jne
mov
out
aaa
movsb
decb
mov
scas
mov
pop
xorl
inc
pop
clc
adc
cmp
and
mov
jno
cltd
and
push
inc
cmp
dec
addr16
push
pop
lahf
mov
mov
sbb
xor
lahf
mov
dec
fwait
nop
ret
push
mov
inc
mov
fidivl
popf
xchg
push
sbb
loope
nop
xchg
mov
out
mov
icebp
add
gs
ljmp
xor
sbb
out
pop
frstor
movsl
call
aas
rorb
popa
mov
ret
lret
inc
inc
dec
and
stos
cli
adc
pushf
aas
inc
mov
hlt
loopne
sbb
mov
push
in
lcall
stos
inc
stos
mov
sub
aaa
addr16
mov
adc
into
cmc
fwait
xorb
std
mov
sub
sbb
rolb
das
sub
add
out
les
test
subb
xchg
ljmp
push
mov
pop
test
mov
and
jle
fdivrs
sub
sahf
pusha
mov
jmp
cmpsl
std
jmp
pushl
test
pop
xchg
andb
add
adc
subb
sbb
mov
sub
mov
dec
push
xchg
in
sbb
jns
sbb
inc
mov
pop
ficompl
test
pushf
addr16
faddl
mov
dec
int3
and
xlat
cs
clc
push
lods
lock
call
mov
mov
push
jmp
test
and
mov
ret
cmp
fisubs
xor
int3
mov
clc
icebp
shrl
mov
clc
cmp
lods
inc
and
push
mov
push
testb
mov
fsubrs
sahf
and
dec
add
pop
mov
out
fs
sbb
pop
js
sbbl
stos
xchg
test
test
mov
out
int
xor
push
aaa
dec
and
mov
sub
enter
in
add
fstp
jle
inc
push
test
cltd
mov
aad
insl
shrl
jmp
pop
ss
pop
adc
aad
inc
push
sub
and
pop
ss
jbe
xor
mov
xor
push
jp
mov
fstpt
xlat
std
stos
sbb
inc
jl
ljmp
mov
mov
cs
mov
aas
or
mov
inc
or
adc
out
push
cld
lahf
pop
clc
out
sahf
xchg
inc
cli
sbb
mov
jb
mov
pop
add
rorl
pop
inc
mov
out
jnp
cli
xchg
in
pop
std
and
adc
outsl
mov
jo
push
inc
pop
cwtl
cmp
cmpb
insl
pushf
sahf
push
add
insl
decl
push
into
ljmp
pop
bound
cmpsl
nop
in
movsl
movsb
fisttpll
jl
pop
lcall
push
pushf
jne
lahf
jne
in
mov
mov
stos
call
xchg
gs
adc
mov
mov
jo
cmp
lahf
jb
mov
dec
dec
sub
xchg
dec
xchg
stos
sub
cmp
and
jbe
ss
and
movsl
cmpsb
mov
fs
out
movsl
outsl
mov
xor
xchg
mov
fdivrs
sbbl
cli
sub
cmp
dec
push
sbb
inc
xchg
and
pop
js
adc
add
jns
arpl
pop
xchg
push
hlt
push
sarb
clc
push
lock
int
call
outsl
cld
inc
cmp
test
stos
adc
dec
out
sbbb
pushf
jecxz
or
stos
add
iret
outsl
cld
lcall
inc
out
sub
ss
and
nop
push
rcrl
insl
mov
ds
stos
dec
aas
fcomps
jbe
imul
add
cwtl
dec
mov
mov
jg
or
cmc
mov
mov
xchg
push
mov
negb
mov
or
idiv
fbstp
add
inc
ja
dec
mov
adc
cmpsb
sub
loopne
sbb
lock
test
or
fiadds
lods
dec
clc
jg
lods
adc
push
sub
aaa
cs
out
into
frstor
xchg
jge
imul
mov
xchg
cmp
inc
fs
dec
es
incl
jnp
loopne
mov
rcrb
mov
xchg
pop
dec
pop
hlt
lret
dec
and
push
mov
in
xchg
test
jb
je
fmull
lods
sub
xchg
mov
xor
sub
adc
fisubrl
xor
das
sub
inc
pop
leave
xor
jnp
loop
dec
sbb
insb
mov
dec
je
sbb
dec
sbb
adc
adc
leave
inc
or
shl
popa
shlb
imul
push
outsl
insb
clc
comiss
sub
xor
imul
or
push
fiadds
mov
stos
add
sti
mov
mov
testb
sbb
dec
mov
das
mov
add
in
mov
lods
push
push
push
xchg
jno
adc
jb
mov
sbb
or
movsb
jb
inc
push
push
outsl
les
sbb
jmp
scas
mov
fcomi
cmp
insb
jg
lds
call
loope
insl
mov
loopne
repz
imul
shlb
pop
pop
scas
test
ret
std
in
in
sbb
pop
and
clc
add
idiv
ret
rcll
add
lds
xchg
jno
lock
inc
hlt
jg
insl
out
sub
sub
sbbb
dec
cwtl
stos
cs
das
jge
outsb
icebp
xchg
cltd
shrl
mov
mov
push
dec
and
loop
stos
add
aam
shrb
or
inc
ret
mov
imul
je
mov
and
in
push
fadds
icebp
mov
adc
mov
scas
cmp
incb
pop
daa
pop
movsb
cmove
in
incl
adc
and
mov
mov
lret
add
cwtl
sub
addr16
cltd
or
movsl
in
mov
nop
lods
jns
xchg
push
push
jbe
add
mov
jae
shrl
inc
pop
dec
add
decl
add
adc
add
push
push
push
ffreep
xchg
dec
jl
inc
out
negl
add
loopne
jl
xor
adc
add
js
jmp
add
push
insb
sub
add
outsb
lea
clc
mov
add
dec
and
data16
orb
test
sub
fildl
fyl2xp1
inc
dec
xchg
xchg
dec
push
rorl
les
sbb
xor
addl
jae
sub
add
jle
inc
ljmp
inc
ds
icebp
outsl
mov
cmp
xor
xchg
js
imul
cltd
jge
xchg
mov
aaa
add
jns
mov
outsl
mov
inc
aas
mov
inc
mov
mov
mov
lea
movsb
icebp
xchg
insb
shlb
mov
outsl
enter
mov
cmc
cld
rclb
xchg
sbb
jg
stos
xor
push
es
shlb
push
sti
mov
dec
pop
adc
inc
shl
pop
or
push
andnps
rcll
aad
dec
add
loope
call
push
jge
or
pcmpgtd
mov
and
push
vmovq
and
in
xchg
push
xchg
jmp
addr16
int3
inc
mov
pop
or
sbb
sbb
loopne
xor
sub
clc
test
pop
icebp
or
shlb
push
and
test
push
popf
jmp
stc
inc
jge
pop
je
into
inc
ret
pop
cmp
ret
mov
inc
xor
push
mov
ljmp
push
leave
movsb
out
fldl
andb
push
rorb
mov
lea
test
xchg
xor
dec
dec
sbb
in
notb
push
adc
xor
mov
pop
mov
add
aas
add
pop
or
rcr
lods
imulb
jmp
add
push
adc
adc
push
xlat
ss
daa
pop
mov
add
imul
stos
shr
out
add
dec
pop
add
mov
pop
xorb
insl
inc
or
add
out
sbb
inc
mov
push
cli
xlat
cli
inc
push
in
out
lds
mov
pop
test
int
cmp
addr16
std
outsl
out
push
push
mov
outsb
sub
cwtl
aad
push
fistpll
cmp
or
fimuls
aaa
pop
inc
test
enter
hlt
ds
push
into
es
in
jp
fisttpl
cmp
pop
sub
push
imul
mov
cmp
pop
ss
pop
mov
fisubl
or
push
adc
mull
mov
adc
push
stos
mov
jb
adc
ret
mov
push
iret
pop
jl
mov
sarb
pusha
mov
and
decl
push
orb
lea
xor
and
sub
inc
cld
cmp
sbb
jle
nop
push
lret
std
add
xchg
les
cli
pop
sub
jmp
stos
insb
xchg
sbb
fwait
test
testb
in
inc
lret
into
movsl
add
jg
imul
popf
insl
call
jl
ret
inc
out
sub
push
mov
out
mov
push
js
inc
bound
jmp
ret
dec
cltd
jo
lret
push
dec
xchg
cmp
and
adc
or
jns
mov
fsts
jmp
adc
xchg
sbb
cltd
insl
push
in
outsl
push
sbb
lret
and
sub
sub
dec
ljmp
or
mov
push
and
orl
cmp
sbb
out
mov
ret
pop
fisubrl
into
ret
jno
call
inc
sub
jle
arpl
test
pushl
mov
or
push
inc
jle
sbb
pop
inc
lret
cmpsl
dec
sbb
cmp
lea
xchg
push
push
mov
xor
mov
fldcw
icebp
jmp
cmp
jns
loopne
mov
jne
push
movsl
jg
cmc
dec
test
fildll
insl
push
push
decb
cmpsb
nop
std
sub
das
lock
call
leave
pop
stos
loopne
adc
int3
mov
mov
mov
inc
or
shr
and
jmp
stc
in
jnp
scas
push
ljmp
ljmp
shl
ret
add
add
cld
ds
mov
push
fldcw
xorb
pop
sub
ja
push
push
mov
xchg
movsl
scas
xchg
clc
movb
xchg
in
pop
and
lcall
in
sti
mov
mov
stos
pushl
push
xchg
enter
insb
adc
mov
mov
mov
jnp
jle,pn
cmp
repz
jo
cmp
hlt
arpl
das
mov
pushf
cld
inc
in
in
add
cmp
mov
inc
mov
ljmp
cmpb
enter
out
cmc
out
sub
shrl
or
ds
mov
mov
sahf
mov
adc
outsb
scas
dec
fdiv
push
push
mov
inc
ret
pop
mov
sbb
jecxz
pop
daa
enter
das
fwait
pop
xchg
mov
xchg
aad
sbb
rorl
adc
mov
jae
inc
mov
nop
out
les
icebp
xchg
in
cmpsb
push
mov
xchg
out
pop
add
int3
add
xchg
orl
mov
fmull
xor
add
xchg
aas
lock
mov
or
notb
push
or
js
ja
jmp
push
mov
inc
sub
mov
and
pop
dec
std
outsl
cmpsl
mov
inc
pop
dec
jecxz
int
dec
dec
mov
or
mov
mov
sbb
mov
jl
inc
adc
in
jl
mov
add
add
or
xchg
xchg
jg
aas
pop
xchg
int3
popa
cs
sub
mov
pop
imul
sbb
lcall
pop
addl
jnp
xor
fdivs
pop
pop
xchg
pop
add
icebp
adc
cmc
cmpsl
cli
and
out
testl
call
adc
outsl
mov
pop
ret
cld
outsb
test
dec
pusha
orl
dec
call
pop
jbe
incb
xchg
ljmp
add
jae
dec
adc
orb
scas
add
xchg
mov
sbbb
cmpl
outsl
cli
test
pop
out
pop
pop
aam
adc
mov
hlt
lods
rorb
pusha
jo
nop
dec
adc
fmull
or
js
dec
mov
aas
cld
cli
js
daa
arpl
xor
mov
shll
mov
movb
adc
cmc
outsl
sub
jnp
add
out
mov
fsubs
mov
into
out
cmpsl
lods
lea
sub
xor
jg
lods
jle
jg
mov
test
daa
mov
dec
inc
pusha
cltd
insl
pop
js
sub
adc
mov
mov
hlt
std
int3
xchg
int
inc
inc
popa
sysret
sbb
inc
adc
cmp
fnstcw
adc
icebp
ljmp
cs
xor
adc
js
insl
imul
fldt
sub
addb
pushf
out
movsb
cmp
test
test
movsl
test
xchg
push
fistl
stos
cld
test
filds
dec
xchg
and
pop
test
mov
ja
dec
test
popf
or
cld
push
sbb
decl
jp
add
pop
dec
sbb
xlat
push
cmp
cmc
adc
aaa
inc
ljmp
das
sub
xchg
add
inc
pop
aas
ret
jmp
sbb
or
xchg
lcall
and
mov
lods
add
sbb
rorb
mov
inc
inc
xchg
pop
or
mov
fstp
and
iret
pusha
cmp
sahf
shll
imul
xor
mov
mov
dec
and
xchg
inc
sub
push
jb
mov
push
int3
fildll
or
mov
stos
jbe
dec
jb
movsl
sub
adc
push
mov
mov
inc
enter
lock
mov
into
xchg
addr16
rorb
xchg
add
pop
js
cmp
loopne
cmp
mov
mov
das
jbe
dec
sbb
push
mov
stos
subb
sti
rorb
faddl
mov
movsl
and
jg
inc
mov
mov
fxch
insl
push
enter
push
jecxz
push
std
jg
loop
xlat
imul
iret
movsl
sbb
outsl
mov
addl
ret
and
loop
pop
nop
clc
pop
fdiv
pusha
and
dec
mov
insl
dec
icebp
or
jo
rol
sbb
lods
adc
ficoms
in
loope
cmpsb
jg
fildl
jb
sarl
movsl
ja
inc
inc
add
mov
fldt
push
pop
sbb
add
adc
dec
xor
fsubrs
and
cmp
pushf
mov
sbb
cli
sub
jmp
pop
jno
es
jmp
fdivl
xor
jp
pop
enter
pop
jb
cmc
xor
test
and
push
xor
std
lcall
sbb
inc
js
jge
xchg
jl
fstpt
dec
pop
pop
sub
mov
out
test
mov
gs
into
in
sub
outsl
in
rcr
fs
cmp
mov
decl
daa
pop
dec
dec
std
pop
jo
leave
jge
and
cmp
loop
push
pop
cmp
dec
jmp
adc
and
stc
ret
mov
xor
in
mov
lahf
shr
fists
mov
test
outsl
jl
and
fistps
test
notb
shll
movl
inc
insl
js
xchg
leave
mov
les
adc
mov
xchg
cltd
mov
pop
push
fisubl
push
mov
add
ja
lret
or
inc
cmp
fists
imull
cmpsl
dec
sbb
jns
mov
outsb
adc
popl
sbb
sbb
ljmp
inc
cmp
lcall
jne
mov
hlt
xchg
jg
scas
pop
div
rclb
jb
adc
add
das
mov
sbb
pop
fs
xor
sub
movsb
cmp
adc
das
inc
adc
jno
mov
cmp
sub
stos
inc
pop
pop
fbld
fwait
test
add
rorl
push
adc
cld
popf
or
test
inc
or
inc
pop
mov
jg
cli
mov
sarl
push
xchg
mov
test
push
imul
push
jl
dec
adc
add
cmp
sub
pop
xor
es
test
insb
pop
cmc
movsb
xchg
clc
dec
aad
cli
fwait
pushl
dec
rclb
or
dec
jb
jl
stos
mov
sub
xor
cmp
sbb
jge
mov
xor
std
flds
cmp
mov
cmc
fisttpll
cs
add
cmp
incl
push
enter
mov
test
adc
leave
cmp
jl
xchg
jb
mov
sub
pop
mov
add
or
insb
or
and
adc
jl
loope
cwtl
std
filds
mov
scas
xor
xlat
lret
cld
enter
or
sbb
and
cld
incl
insl
lea
jecxz
insl
popf
or
sub
clc
pop
shlb
mov
popl
pop
imul
or
add
or
fsubr
rcll
xor
pop
mov
lahf
and
arpl
repnz
mov
js
dec
jg
lock
cmpl
mov
pop
js
xchg
sub
mov
jmp
inc
mov
adc
fcmovne
lahf
dec
xor
ret
cmpsl
adc
js
mov
insb
mov
sub
fs
aaa
stos
pop
push
cli
cmp
cwtl
fsubl
sbb
push
pop
jbe
push
dec
jg
in
adc
sub
jb
jae
shrl
or
adc
push
loop
rclb
sbb
xor
mov
outsl
subl
cmp
xchg
fildll
xchg
test
xor
adc
push
sub
hlt
or
lahf
xlat
adc
inc
std
out
loop
add
call
frstor
andb
and
stc
jle
and
or
xor
fists
cltd
cld
sbb
add
js
jb
out
push
push
sub
aaa
pop
es
pop
mov
popf
xor
fs
movsl
jp
or
insb
popa
inc
lds
mov
or
inc
cmpsb
or
and
jmp
or
nop
mov
incl
mov
or
test
and
out
scas
insl
mov
xchg
xchg
xchg
ud0
push
sub
mov
test
cltd
adc
pop
pusha
and
bound
repz
ss
or
loopne
iret
fwait
sahf
pop
dec
sbb
leave
arpl
add
into
dec
and
add
icebp
cmp
xor
in
ret
and
pop
movsb
scas
jb
xor
mov
mov
rorb
pusha
inc
lds
in
iret
sbb
push
adc
cli
lea
add
mov
mov
pop
mov
dec
cltd
mov
addr16
sbb
shlb
mov
gs
dec
sbb
mov
sbb
mov
ror
ret
shlb
inc
mov
std
fsubl
jne
mov
pop
add
or
pop
cmp
pop
mov
and
icebp
decl
fmuls
mov
cmp
pop
push
inc
mov
and
cli
sbb
addb
xlat
xchg
rcrb
outsl
call
xchg
fcomps
out
inc
test
xlat
mov
cmp
aaa
fdivl
xchg
stos
mov
sub
pop
outsb
lods
or
sub
mov
fcmovnb
xor
or
or
mov
call
pop
shll
test
adc
test
out
mov
mov
jecxz
inc
xchg
xor
fwait
mov
test
inc
jle
call
push
aaa
jns
pusha
imul
push
mov
push
adc
or
inc
adc
imul
out
mov
pop
pushf
insl
stos
inc
push
in
sbb
push
cltd
fstps
popf
push
aas
mov
data16
xchg
lcall
popf
inc
cmp
jne
dec
xchg
push
sbb
into
cmp
mov
sub
pushf
sub
scas
cli
jnp
lea
xchg
sbbl
iret
mov
jecxz
xor
xchg
xorb
hlt
dec
lods
xchg
stos
xchg
xchg
stos
das
shrb
inc
repz
mov
sbb
jl
imul
std
fldt
fwait
jb
sub
cmp
add
jle
fiaddl
inc
stos
jge
outsl
sub
and
jp
sbb
arpl
mov
pop
mov
pusha
adc
or
jle
push
test
outsb
fcomps
out
stos
and
sub
jae
out
hlt
out
lea
jns
jl
jmp
jmp
divb
adc
add
mov
sbb
dec
mov
outsb
or
int
addr16
xchg
add
psllw
sbb
divb
rclb
hlt
test
insl
pop
or
int
adc
inc
lods
cmp
or
mov
sahf
andb
sbb
or
mov
fnsave
outsb
lock
or
aaa
add
sub
adc
ss
in
jp
inc
decl
and
imul
xor
rcl
mov
inc
lods
xorb
jmp
cltd
aaa
in
insb
xchg
push
pop
and
fmull
sbb
push
or
mov
stos
rolb
loopne
adc
nop
cmp
or
js
loopne
std
push
push
mov
cmp
jmp
pop
mov
xchg
push
jbe
fcompl
pop
pop
cwtl
mov
dec
fdivr
dec
nop
inc
leave
or
mov
sbb
scas
rcrb
push
jl
push
aad
mov
test
mov
xchg
mov
sbb
int
mov
icebp
orl
xchg
outsl
cmc
scas
movsb
out
ficoms
push
xchg
leave
test
enter
or
fcomi
aas
xchg
push
dec
add
rcr
push
loopne
test
cltd
mov
jmp
cmp
add
dec
push
mov
loop
mov
mov
xchg
and
jmp
pushf
pop
popf
cmp
push
or
pusha
loope
add
pop
jmp
mov
mulb
mov
inc
lea
addb
aaa
push
iret
movsl
or
adc
xor
in
add
inc
add
in
xchg
ficoml
outsl
fldt
mov
xor
loope
adc
mov
outsl
adc
mov
andps
lret
or
cli
cmpsl
hlt
pop
xchg
pop
xor
sbb
sti
push
push
xchg
lock
sub
nop
inc
aas
cs
and
data16
fs
ljmp
icebp
inc
and
repnz
into
jmp
xchg
sbb
aam
mov
pop
pusha
pop
jmp
arpl
pop
mov
jo
rclb
fstp
int
or
rorl
xchg
cld
or
mov
sub
sbb
lock
push
pop
rcrl
outsl
sbb
jl
lret
aas
or
and
jle
call
mov
int
sub
adc
inc
or
inc
stc
int3
add
test
shl
imul
mov
xlat
add
xchg
xor
ds
cmp
das
jne
fcoml
test
adc
pop
aaa
mov
ds
dec
jns
xchg
in
shl
test
or
push
mov
sbb
or
jle
push
fiaddl
lock
lea
fwait
out
jge
add
adc
test
loope
push
pop
ljmp
jl
ds
pop
insl
in
cmpsl
and
ljmp
roll
mov
mov
pop
and
sti
js
subb
pop
and
mov
insb
fsubs
aam
lock
or
jecxz
pop
jg
das
std
loop
xor
inc
adc
and
lods
lods
loope
sbb
jmp
mov
fnstsw
enter
loop
gs
push
negl
out
outsb
inc
sti
in
xlat
or
sbbl
andl
push
inc
adcl
mov
notb
mov
clc
push
cmp
inc
pop
inc
push
mov
sti
push
aam
jno
fs
pop
filds
mov
inc
xlat
xor
mov
dec
add
mov
fcom
pop
sarl
pop
lret
xor
pop
test
fcmovnb
into
or
daa
stos
loope
cs
pop
mov
mov
aaa
cmp
hlt
mov
jle
dec
add
fistl
lods
mov
shlb
negb
jecxz
je
push
and
xor
and
cmpl
mov
movsb
pushf
jb
push
test
add
add
xchg
rclb
inc
ja
jg
cmp
sarb
push
inc
xchg
xchg
loopne
lahf
loopne
daa
xor
pop
mov
xchg
fadds
enter
dec
mov
add
pop
or
xor
sub
sbb
or
dec
push
mov
fisttpll
cmc
sub
jg
stos
sub
jg
in
mov
mov
addb
je
pushf
mov
mov
icebp
fs
and
int3
adc
cld
ret
add
call
addr16
jbe
movsl
arpl
sub
inc
sub
addr16
jg
icebp
inc
rcrb
cmp
pusha
loopne
sar
dec
mov
decb
mov
cmpsl
call
xchg
adc
cmpsb
push
mov
jnp
shlb
mov
imul
scas
add
mov
mov
cld
jecxz,pt
icebp
or
sarb
sub
mov
pushf
xchg
or
cmp
adc
icebp
jg
mov
clc
loope
mov
fisubs
sbb
jae
push
push
stos
repz
cmp
mov
pusha
mov
out
and
xor
cli
sub
adc
push
in
mov
ret
mov
outsl
push
sbb
repz
jmp
fimuls
outsl
cmp
xor
dec
leave
inc
jno
les
pop
jg
test
mov
sub
cmpsl
add
call
pop
lcall
and
cld
inc
jns
adc
and
mov
lret
add
test
add
or
jle
out
ret
jge
mov
shll
pushf
jbe
mov
popa
incb
lds
sub
loope
je
pop
mov
lahf
rolb
add
add
test
jo
dec
popf
cld
movsb
jo
enter
pop
mov
mov
sub
cmpsb
or
test
and
mov
add
sub
cmp
cmp
mov
in
fadds
rcrl
fisttps
fcoml
aad
push
daa
mov
sub
lock
push
clc
or
rclb
xchg
mov
push
push
ret
testb
pop
mov
pop
sub
sbb
pop
fldt
inc
jo
mov
gs
pop
iret
ret
call
adc
mov
or
push
mov
dec
adcb
mov
int3
push
and
pusha
gs
inc
xchg
and
xor
jno
mov
orb
out
dec
and
loope
aam
dec
and
jnp
add
jmp
hlt
fwait
ret
cmp
cmpsb
adc
mov
or
cmp
stos
pop
jg
sbb
push
nop
xor
pushf
push
and
fwait
and
mov
call
or
jmp
incl
pushf
pushf
dec
scas
daa
sbb
scas
dec
rcll
ljmp
ljmp
lods
and
cmpsl
divl
mov
jl
popf
xchg
xchg
push
inc
jecxz
dec
pop
jle
adc
push
std
rcl
or
jecxz
je
popf
faddp
xor
int
lcall
push
fisttps
push
jl
sub
ja
insb
xchg
stc
les
mov
fstpt
repnz
mov
sbbl
nop
push
popf
das
pop
stos
lahf
xchg
int
push
jl
loop
fwait
pop
add
in
mov
sbb
insb
incl
xorb
push
xor
mov
sti
cmp
popa
cmovns
outsl
xor
fcmovb
ret
jle
add
cmp
addl
lahf
mov
ret
std
dec
shlb
inc
xchg
call
ss
subl
sub
aam
mov
add
pop
mov
adc
or
sub
mov
inc
jge
cmpsb
inc
cltd
bound
sbb
dec
or
test
repnz
and
icebp
push
decl
jmp
adc
scas
mov
dec
aaa
stos
mov
rcrb
shrb
cli
out
sub
dec
sbb
icebp
fisttps
test
jo
inc
dec
lds
adc
js
ffreep
adc
out
out
clc
or
inc
pop
add
xchg
in
sub
adc
call
rolb
or
sub
data16
mov
jp
test
loopne
pop
lods
mov
mov
repz
clc
rolb
inc
adc
aaa
sbbb
jnp
sbb
xchg
pushl
lds
neg
xor
std
movsl
fists
xchg
lock
mov
lret
or
divb
or
xor
rolb
mov
cltd
shr
pcmpgtb
adc
jae
clc
notb
rorl
addr16
es
in
nop
shlb
lock
xchg
add
dec
adc
jne
insb
je
jnp
dec
arpl
loopne
iret
sbb
cmpb
push
sub
insl
pop
loope
adc
outsl
aaa
pop
mov
cmpsb
leave
mov
outsl
inc
inc
stos
mov
jecxz
and
pushf
ljmp
or
icebp
and
mov
arpl
mov
adc
dec
cmp
jl
dec
shll
pop
mov
push
sahf
les
std
mov
inc
pop
js
adc
pop
outsb
inc
pushf
inc
xchg
insb
push
jo
adc
out
sub
sub
fisttpl
lahf
or
loop
mov
repz
adc
fwait
std
inc
jecxz
call
mov
loopne
and
cmp
adc
add
js
xor
and
lret
aad
mov
xchg
or
push
mov
sub
adc
mov
mov
jecxz
xchg
cli
jg
iret
test
xchg
dec
outsb
bound
push
mov
pop
mov
mulb
incb
jg
xor
xor
xchg
adc
or
cmc
adc
lcall
sbb
enter
or
gs
jnp
add
jbe
divb
dec
movsb
dec
or
adcb
jl
cs
rorl
mov
adc
xchg
repnz
imul
in
std
add
pop
pop
add
push
sbb
push
sbb
in
mov
and
push
pop
or
and
in
pop
jns
jmp
mov
stc
into
popl
inc
les
dec
xchg
lods
jl
ret
xchg
shll
out
and
icebp
fnsave
lods
cli
bound
push
fucomp
sub
outsl
pop
hlt
bndldx
mov
dec
jmp
mov
mov
dec
xchg
outsl
je
adc
pop
inc
movl
test
pop
and
inc
lock
mov
adcb
out
pop
cld
fcomip
mov
cmp
push
pop
and
sarl
sub
movsl
int3
cmp
test
adc
jge
iret
hlt
or
in
js
push
jo
rcll
in
enter
popf
je
pop
sub
inc
rcr
cs
cmp
outsl
les
imulb
mov
push
cmp
adc
lods
add
jecxz
sbb
push
inc
lock
pop
push
and
insb
jp,pn
cmpsl
cmp
mov
cmp
push
pop
sub
ficoml
sub
outsl
pop
or
cmpsb
dec
and
jbe
ja
cmc
test
ficompl
xchg
xor
push
mov
loopne
nop
popf
rcrb
call
mov
lods
sub
xchg
fdiv
loop
xor
jne
imul
stc
lahf
mov
push
mov
push
ficoms
push
rorb
inc
mov
aam
inc
push
out
icebp
ficoml
mov
mulb
scas
inc
loope
push
ret
mov
mov
pop
and
adc
add
es
mov
lret
sub
and
pop
push
fsubr
mov
xchg
inc
dec
insb
fwait
call
scas
div
in
or
shrl
jae
arpl
sbb
scas
or
or
inc
pop
ficoml
cltd
outsl
mov
and
cmp
lcall
add
jle
clc
pusha
test
aaa
sbb
add
xchg
pop
hlt
mov
push
test
pusha
repnz
outsl
add
call
jl
mov
jp
icebp
sbb
mov
es
imul
and
aas
inc
scas
or
out
lods
insb
fildl
out
mov
leave
cltd
lahf
mov
add
or
mov
add
mov
ds
adc
jge
daa
imul
call
pop
cmp
mov
mov
and
call
xor
bound
add
push
popa
push
or
icebp
adc
or
adc
mov
in
cmp
or
and
cmp
dec
cwtl
mov
sub
addr16
dec
adc
mov
xchg
dec
pop
icebp
fwait
mov
push
push
xchg
mov
jge
cli
inc
sti
mov
sarl
add
in
and
cmp
mov
mov
pop
push
call
inc
xchg
pop
and
fwait
xchg
jecxz
mov
and
fbld
adc
es
mov
mov
add
test
or
lds
cld
setle
jle
stos
out
shll
inc
inc
shl
pop
sarl
dec
adc
pop
cmp
jg
aad
out
adc
add
in
push
pop
popf
push
add
cmpsl
sbb
mov
mov
data16
xchg
out
inc
xchg
and
or
cli
mov
cmpl
add
and
add
inc
idivl
push
xchg
add
pop
testl
arpl
incl
jnp
dec
in
popf
lock
push
repz
int
jo
and
pop
das
stos
ror
and
pop
std
xor
lock
jo
stos
jo
xchg
cmc
pop
xchg
jecxz
pop
xchg
pop
stos
imul
dec
rcl
jae
lods
cmp
ja
jp
test
mov
sahf
test
rcl
mov
outsl
xchg
sete
add
popf
pop
jge
mulb
or
addr16
rorl
ret
xchg
outsb
inc
mov
mov
aaa
or
cli
adc
push
pop
mov
cld
mov
sbb
mov
mov
inc
mov
cmp
icebp
xor
nop
xor
or
test
sbb
or
pop
fcomps
or
out
cmp
jmp
loopne
out
and
subl
aas
mov
sbb
call
or
cmp
rcrb
sbb
push
mov
orb
out
sbb
pop
in
xchg
fisubl
loop
pushf
fadd
pop
xorl
pop
lods
sbb
aam
mov
cltd
lahf
int3
jae
jmp
mov
jge
jl
popa
out
mov
push
popf
in
push
mov
sub
scas
divb
cs
ffreep
sbb
cld
aas
fdivs
out
add
cmpsl
sbb
popf
pusha
dec
sub
adc
sub
iret
repz
dec
and
imul
sbb
cld
outsl
push
decl
or
and
ret
inc
je
dec
jge
jnp
lock
out
lock
int3
xchg
rolb
mov
cs
dec
cltd
call
xchg
or
xor
hlt
call
push
jcxz
nop
dec
movsb
shll
cld
inc
adc
pop
ja
xchg
jl,pn
notl
jbe
jg
lods
mov
cmp
arpl
xchg
jae
mov
adc
push
aad
aaa
xchg
lea
xlat
pop
clc
das
rclb
inc
mov
push
loope
sbb
add
and
lock
ret
fldl
adc
lock
or
jae
sbb
push
mov
push
jmp
arpl
and
dec
cmp
dec
or
fwait
nop
mov
inc
aad
rol
int
dec
popf
lock
ljmp
pop
lock
aaa
rolb
int
and
fisubs
mov
enter
out
jmp
push
mov
xor
sub
js
add
sbb
push
dec
fiaddl
cmc
insl
subl
mov
adc
jno
sbb
adc
xorl
rolb
mov
adc
jge
sub
cltd
imul
jg
jo
nop
filds
repz
ret
xchg
cli
cmpl
sbb
out
fdivr
cmovo
mov
or
mov
sar
inc
mov
jbe
lds
sti
movsb
jp
mov
iret
lds
add
mov
xor
outsl
push
je
mov
sub
xchg
or
aaa
sbb
les
jp
fdivs
mov
mov
fdiv
rolb
dec
add
shr
enter
mov
js
xlat
mov
testb
incl
ss
outsl
mov
das
xor
mov
rol
stos
pusha
sub
jg
test
xchg
jbe
pop
xchg
or
and
into
jns
mov
cmpl
call
mov
jecxz
cmp
mov
add
push
xor
ror
orl
outsl
pusha
push
or
jne
out
scas
add
xor
xor
icebp
sbb
fidivrs
addr16
jg
cmp
mov
pusha
scas
lock
lock
add
insl
in
mov
sbbl
gs
test
lcall
clc
idiv
sbb
jmp
ret
sti
testl
xchg
jp
arpl
rol
mov
and
pop
repnz
xor
cld
inc
rcrb
add
lahf
loopne
xor
rcrb
aam
sbbb
ficompl
add
inc
imul
cmp
pop
daa
sbbb
ret
test
sbb
adc
add
mov
dec
jecxz
jmp
xor
movb
mov
je
out
fdivrs
mov
orl
imul
cmc
mov
xor
jge
add
imul
or
sahf
enter
rcrb
inc
call
fcmovnu
lods
add
mov
mov
pop
push
inc
insb
hlt
and
out
stc
sub
push
aas
sub
flds
ljmp
inc
mov
cmpsb
dec
jg
push
mov
mov
inc
and
dec
inc
in
leave
mov
add
incb
push
push
jae
mov
clc
jg
push
mov
pop
or
sbb
nop
dec
mov
push
int3
aad
fwait
xchg
adc
lret
decl
jae
mov
shlb
jmp
dec
mov
push
ja
sub
cli
sbb
ljmp
mov
sub
sar
cld
adc
aam
push
fwait
into
addr16
rcl
mov
push
ret
fcomps
mov
lea
fldl
xchg
test
jg
in
aas
jl
push
cmp
add
xor
push
insl
call
sbb
add
stos
mov
jae
or
je
sbb
pop
aas
in
jl
sbb
jecxz
jmp
jl
test
test
and
pop
icebp
push
dec
xor
lea
les
mov
imul
inc
addl
mov
cmpsl
sbb
in
lea
xchg
imul
sub
fistpl
iret
fs
insb
pop
cli
xchg
ds
xor
outsl
adc
or
fdivr
pop
push
sub
movsl
push
call
clc
jg
in
fildl
xor
push
or
mov
push
push
call
test
xchg
push
mov
pop
jbe
das
cmp
add
inc
call
sub
sahf
adc
leave
add
and
cmpsb
xchg
int3
mov
aad
xchg
sbb
mov
pop
shll
xchg
jno
test
loop
add
aam
cli
mov
pop
fldt
das
pusha
pop
and
cmp
sub
scas
int3
test
sub
pop
fwait
das
jp
cmp
ljmp
mov
jo
int3
popa
xor
and
loope
push
scas
sbb
mov
shr
mov
leave
push
std
lcall
pop
mov
in
add
xor
or
insb
sbb
movsb
mov
lock
scas
mov
call
ja
out
push
mov
add
push
jg
daa
shlb
push
xchg
scas
mov
in
sbb
popf
add
push
gs
and
xchg
mov
mov
test
lea
cmp
cmc
ja
cmc
aam
sbb
fsubrl
and
pop
push
test
cltd
loopne
adc
mov
pusha
or
push
and
call
ds
jecxz
rcrb
jle
or
loop
dec
std
mulb
mov
je
push
lret
xorb
mov
sbb
xor
into
sarb
jg
ljmp
insl
ljmp
xor
sub
in
into
jno
mov
jbe
repz
stos
xchg
sub
fists
cltd
arpl
fildl
or
test
and
mov
cmpsb
es
rclb
push
std
inc
cs
rol
mov
xor
popf
into
test
movsl
lcall
leave
adc
sarb
shl
mov
outsl
adc
inc
fsubl
sub
or
dec
add
stos
das
sti
or
push
jmp
or
into
out
cld
xchg
inc
and
mov
dec
rorb
pusha
mov
mov
push
outsb
dec
inc
push
or
push
imul
test
mov
push
jmp
pusha
jmp
mov
cmpsl
daa
js
mov
mov
push
fldt
fs
nop
pop
test
int
sbb
push
movsl
orb
ret
jnp
icebp
lods
shr
xchg
leave
mov
jg
push
mov
stc
inc
mov
iret
push
rcr
fcomps
or
push
xchg
ret
and
icebp
and
cmpb
xchg
cmp
aaa
mov
pushf
lea
aaa
ds
fwait
and
test
cmpsb
mov
mov
jnp
fs
repz
sub
aad
jge
mov
sbb
loopne
cltd
jns
or
pop
rcr
inc
dec
imul
fs
insb
insl
in
jg
fs
mov
jg
mov
out
insl
or
fs
fcoml
outsl
mov
fstps
cmp
dec
jb
insb
mov
sar
shrl
cmp
mov
test
aam
push
ss
outsl
and
cmpsb
addr16
lret
and
dec
pop
push
dec
pushf
lea
pop
sub
mov
and
or
mov
ds
push
xor
jo
jae
or
nop
cld
adc
sub
fisubrs
xchg
lret
xor
jecxz
or
insl
mov
cs
shlb
or
in
add
pusha
out
je
add
mov
adc
test
push
hlt
lcall
jg
dec
mov
or
jb
cmp
cld
pop
mov
mov
cs
jl
or
movsl
mov
mov
decb
pop
mov
mov
mov
inc
mov
loop
shlb
fneni(8087
cmpsb
fwait
cmp
xchg
movsl
aaa
in
inc
clc
adc
jbe
mov
push
adc
pop
mov
imul
and
push
add
lock
inc
jg
std
mov
push
scas
loopne
push
jle
repnz
xchg
add
xchg
scas
add
aaa
mov
pop
xchg
sub
xor
add
dec
ss
mov
or
add
cs
jnp
mov
daa
fildll
sar
cmp
jb
adc
cmp
mov
pop
cltd
dec
sub
iret
aad
lods
stos
fldenv
idivl
ss
push
outsb
ja
inc
jne
ds
push
bound
jb
daa
fcomps
popa
imul
cs
push
iret
cs
clc
push
and
into
fisubrs
xchg
pop
mov
and
stos
pop
test
xchg
lock
add
mov
cli
and
xchg
sbb
divb
xchg
add
ja
adc
ret
stos
arpl
adc
mov
pusha
adc
in
inc
aaa
dec
or
pusha
add
xor
mov
or
cs
pop
mov
pop
aam
fisttpl
loop
mov
push
jnp
nop
sub
jo
push
pushf
pop
call
clc
mov
jmp
cwtl
mov
leave
xor
mov
add
ljmp
cld
inc
aam
mov
push
arpl
push
jg
adc
push
ret
pop
subb
dec
push
fs
ret
test
adc
mov
gs
push
outsl
pop
inc
inc
clc
xor
add
lods
xchg
sti
jne
cmp
aam
rcr
cmp
sbbb
jge
andb
popa
movsl
add
arpl
data16
pop
movsl
pop
and
cmc
imul
pop
mov
sti
ror
in
outsl
dec
fdivrs
jne
pop
pop
jle
inc
jl
mov
xlat
jno
pop
loop
call
jp
mov
xor
in
ffree
inc
rol
add
and
inc
js
cs
inc
jnp
outsl
mov
sbb
scas
icebp
cwtl
loopne
mov
aaa
add
xchg
mov
aaa
jns
xor
cmpsb
mov
cli
mov
pop
mov
push
adc
out
push
aaa
fstl
xor
mov
das
rcll
je
cmpsb
jbe
mov
sarb
gs
cmp
shr
jb
pop
outsl
loop
test
ljmp
test
rcrl
sbb
hlt
pop
push
push
fcmovnb
ja
fadds
pop
cld
and
and
lds
sbb
lret
pop
idivl
movsl
in
mov
inc
ds
roll
xor
cld
sub
xchg
pop
mov
insb
es
and
sbb
icebp
push
lcall
jo
bound
inc
shll
xor
push
sub
fisubrl
ja
jg
xor
mov
inc
rcrl
mov
and
js
in
sub
ljmp
sbb
ss
stos
dec
cmp
cmc
outsl
sub
inc
push
jge
pop
jle
adc
dec
ss
jp
ja
ds
push
cmp
cmpsb
mov
adc
mov
pushf
adc
pop
mov
sbb
gs
pop
insl
push
sub
inc
sbb
sbb
mov
add
sub
jg
fnstcw
mov
xor
jmp
fwait
cmovle
aas
adc
bound
pop
push
sbb
test
mov
ljmp
loope
dec
div
rolb
xor
xchg
or
push
into
sub
push
mov
loope
cmp
dec
lret
add
mov
or
pop
arpl
sub
rcrb
test
ret
ljmp
mov
jecxz
imul
notb
cmp
arpl
mov
sbb
fadds
and
xchg
dec
adc
xor
cld
adc
dec
xchg
dec
das
rol
test
pop
xchg
xor
in
push
rcrl
cmp
push
xor
and
cltd
cmp
rep
mov
mov
dec
icebp
mov
inc
push
fidivrl
repz
iret
xor
pop
cwtl
cld
ds
xchg
mov
jnp
loope
fistpll
jmp
loopne
jl
repz
inc
pop
mov
psllw
lock
sar
adc
or
stos
mov
dec
dec
inc
mov
sub
clc
and
adc
addr16
sar
in
call
outsl
jno
icebp
and
jnp
rorb
jg
in
lea
and
shlb
jne
push
scas
inc
dec
in
or
and
pusha
sbb
lahf
stos
aad
outsb
dec
imul
pop
pop
cltd
fcmovu
inc
arpl
clc
and
mov
mov
jne
adc
sbb
sahf
push
fdiv
push
jnp
mov
insb
xor
pop
into
enter
mov
mov
cmp
sbb
dec
sbb
les
pop
pop
mov
pop
xor
movsl
sub
xor
pusha
jmp
sbb
xorl
test
pushf
fmuls
mov
xor
pop
outsl
mov
inc
xlat
mov
xor
mov
sbb
rclb
ror
inc
jecxz
sbb
add
inc
insl
aad
inc
pop
clc
ja
adc
pop
push
fcoms
jnp
sbb
sahf
adc
mov
or
int
cs
adc
mov
jo
add
int
aam
lahf
outsb
and
mov
inc
out
or
mov
mov
mov
mov
mov
mov
test
cmp
sbb
mov
mov
mov
call
js
push
dec
add
out
incl
push
xchg
inc
insb
pop
mov
add
in
lock
andb
outsb
push
xor
addr16
sub
cmp
loope
fs
iret
in
add
jnp
cmpsl
mov
adc
or
mov
xchg
sarl
inc
jo
xor
out
loope
ds
test
call
mov
frstor
sbb
addl
orl
mov
sub
xor
jmp
outsb
pop
mov
lock
imul
stc
add
jo
shlb
out
inc
pop
xlat
mov
rolb
add
jg
add
movsl
inc
add
sbb
fsubs
fcmovnu
arpl
dec
cmc
shlb
sub
pop
xor
push
fsubr
push
out
or
and
jmp
fwait
cld
mov
aad
xlat
testl
ret
sbb
clc
and
pop
outsl
add
cmp
lds
lock
xchg
jle
out
push
out
lret
inc
dec
pop
lods
xor
mov
fsubs
cli
mov
sbb
fstpt
sti
push
inc
decb
mov
cmpsl
test
or
clc
decl
cmp
movsb
movsl
in
lret
jg
pushf
mov
lock
fcmovnu
inc
cmpsl
add
xchg
vcmpsd
mov
push
sbb
adc
andl
cmpsb
lahf
cmp
pop
jecxz
rcll
mov
test
xor
add
push
out
adc
push
sbbb
fists
out
minps
mov
insl
mov
std
mov
fwait
mov
mov
adc
lods
call
sub
pop
sbb
mov
xor
sti
xchg
sbb
adc
les
and
or
outsb
stos
stos
push
or
push
idivb
bound
insb
pop
xchg
pop
jp
mov
inc
cli
addr16
fdiv
pop
orb
mov
push
mov
lcall
pushl
pop
pushf
push
jmp
cli
and
jb
call
cmc
aad
enter
popf
pop
inc
or
repnz
in
inc
dec
add
jnp
idivl
hlt
enter
adc
push
shrb
fwait
mov
test
mov
std
cmp
push
ret
insl
loope
mov
jmp
cs
push
aas
dec
int
push
dec
gs
aaa
or
push
pop
sub
mull
sub
inc
add
jp
ja
movsb
cmpsb
xor
dec
inc
mov
or
fimull
nop
sbb
ds
movsl
cs
sbb
adc
clc
es
in
jbe
mov
xchg
scas
push
movsl
pop
cli
incb
add
and
mov
clc
push
and
xchg
shlb
jbe
xor
andb
in
out
or
std
sbb
out
cs
lock
xchg
or
call
or
fdivrp
icebp
loop
and
sub
push
inc
aam
mov
pop
xor
outsl
in
inc
mov
inc
mov
inc
rcrb
ljmp
lods
sbb
inc
jns
cli
inc
mov
aaa
insl
mov
lcall
test
mov
sbb
cmpsl
add
jno
cli
push
xchg
test
clc
sbb
pop
mov
imul
push
or
sbbb
dec
lret
or
mov
inc
lret
stos
sti
ja
jne
add
lea
or
push
dec
ss
xchg
dec
xor
xor
mov
arpl
or
add
rclb
call
jle
push
fucom
aaa
pushf
test
sti
inc
lods
mov
push
mov
mov
test
ss
popa
inc
pop
sub
testl
adc
push
icebp
mov
xor
ret
fldcw
xchg
ja
and
and
dec
cli
mov
adc
ret
sub
cli
or
and
cltd
add
je
or
mov
outsb
mov
aaa
fdivr
testb
stc
hlt
sbb
jmp
and
popa
or
add
adc
pop
fistps
mov
cmp
mov
mov
mov
fadds
push
mov
add
mov
or
or
push
add
les
pop
aad
xor
out
test
popf
push
mov
mov
push
fs
scas
pop
out
add
rclb
sub
mov
and
jno
cmp
and
stos
add
jle
add
loope
lahf
jmp
fcomip
jbe
pop
and
fildl
inc
idiv
sub
cmp
shll
lahf
lret
push
and
mov
lock
shrb
call
popf
pop
hlt
pop
mov
cmpsl
cwtl
hlt
lods
lds
push
shrb
mov
fnsave
xchg
pop
ds
in
jg
push
push
je
and
pop
push
scas
inc
or
loopne
shl
not
sub
sub
sub
stos
lea
fbld
cmc
adc
dec
lea
ja
lcall
mov
mov
pop
cmp
cld
push
lock
inc
fisubrl
movsl
push
mov
out
insl
fistps
rolb
adc
sub
pop
outsb
push
lret
cmp
ds
ret
lahf
inc
incl
inc
push
add
pusha
adc
out
and
jno
call
sti
cli
into
bound
fidivs
or
xchg
adc
mov
sbb
lods
sub
sbb
add
div
lock
in
jo
mov
leave
popa
xchg
sbb
dec
rcll
and
repnz
sbb
aad
sub
ret
sbb
out
cmp
mov
mov
test
incb
or
sub
aaa
bnd
loop
sub
lcall
or
iret
in
rol
shrb
aaa
icebp
call
sub
adcb
jns
dec
adcl
add
popl
xor
in
mov
pop
hlt
mov
add
lods
sbb
loop
inc
inc
iret
mov
cmpb
sbb
inc
push
sbb
ja
outsl
sbb
out
or
xchg
call
movsl
outsl
and
mov
push
cmpsl
je
leave
inc
decb
mov
sbb
push
push
loopne
mov
aad
data16
xlat
rcrl
lock
fdivrl
xor
mov
or
repz
inc
xchg
out
add
xor
aad
jp
push
jno
mov
icebp
jg
cmp
mov
adc
sub
or
adc
fprem
leave
loopne
jbe
aam
inc
dec
incl
dec
lret
mov
sbb
inc
and
inc
push
pushf
xor
sub
or
ror
pop
cmp
sbb
addl
fs
loopne
mov
adc
inc
inc
sub
add
mov
xor
push
loopne
jg
hlt
mov
jb
rcl
sbb
xchg
imul
clc
xchg
int
dec
popf
sahf
lret
arpl
adc
aaa
je
dec
sbb
subb
test
test
or
xor
icebp
lcall
fadds
push
xor
cltd
scas
or
add
stos
ljmp
adc
ja
pop
push
add
es
mov
lods
clc
mov
mov
mov
push
std
aaa
xchg
ret
ret
sti
xlat
out
loope
sbb
push
mov
sbb
mov
les
push
movl
pusha
jp
xlat
sbb
cmp
fildl
inc
lret
or
scas
sbb
mov
rcrb
pop
xchg
or
cmpl
out
adc
jg
mov
or
outsl
in
and
mov
pop
sbb
push
add
je
cld
fs
cmp
push
scas
gs
xor
mov
add
mov
cwtl
icebp
pop
adc
sbb
sbb
dec
outsl
ret
clc
rcrb
or
xchg
xchg
ds
jnp
lock
std
es
and
fadd
push
mov
jae
clc
jne
mov
jnp
fnstsw
adc
jno
or
addl
js
ret
lock
push
mov
sub
mov
and
stos
in
repnz
fistpll
shlb
or
leave
sahf
push
cli
mov
aam
bound
mov
outsl
lahf
and
xchg
insb
push
add
xlat
pushf
pop
mov
les
adc
ljmp
mov
mov
push
dec
mov
test
icebp
add
pop
mov
xchg
repz
lcall
jl
dec
andl
ret
mov
outsb
test
sar
pop
lea
add
sub
jge
aam
sbb
sub
mov
jg
dec
ss
push
cli
sbb
xchg
mov
inc
add
mov
mov
or
and
xchg
es
add
mov
clc
ja
add
cmp
xlat
ret
and
jno
and
jo
daa
sbb
or
pusha
lea
dec
in
mov
test
or
pop
sarb
or
lea
in
sbb
les
jp
push
jno
loopne
out
jge
mov
fs
push
mov
push
fisubl
and
fwait
cli
fisttpl
test
mov
xchg
js
add
nop
push
mov
push
icebp
lea
and
xchg
jb
ja
ja
jg
or
sub
xor
dec
sub
test
mov
sbb
negl
mov
loope
mov
cli
add
in
into
pusha
sub
shr
jmp
movsl
test
pop
xor
pop
rol
lret
scas
and
or
or
adc
frstor
inc
jmp
dec
movsb
xor
xchg
stos
in
push
and
lock
inc
cli
inc
pop
mov
frstor
jbe
jle
and
push
pop
push
aaa
jg
jmp
pop
iret
xor
cmp
jge
cld
xchg
aam
xchg
and
iret
and
xchg
jb
inc
outsl
mov
aas
push
rcrb
cmpsb
xchg
movsl
pop
out
or
push
push
testb
lock
pop
xor
and
decl
xbegin
mov
or
pop
test
pop
movsl
cltd
xchg
and
add
pop
add
enter
adc
incl
or
inc
cmp
add
mov
mov
cwtl
add
std
cmp
inc
das
jne
push
lahf
mov
xchg
bound
fdivrs
aas
clc
mov
cltd
clc
mov
mov
xchg
inc
jg
addb
jno
xchg
es
sbb
repz
ror
movsb
add
fistpll
sbbb
rcrl
jecxz
adc
sbb
or
sbb
mov
inc
scas
xor
addb
cld
lret
pop
mov
ficoml
lock
enter
icebp
mov
jae
cmp
sbb
cld
arpl
dec
fistps
or
rcrb
jg
or
xlat
in
mov
mov
mov
lret
aaa
jae
sub
cmp
add
mov
cs
sbb
mov
ljmp
lock
cmp
jle
xor
mov
std
ret
pop
fwait
in
and
cltd
je
inc
mov
sbb
and
sbb
and
mov
mov
gs
xchg
ljmp
mov
ret
fildll
dec
adc
pop
cld
fistps
clc
sbb
dec
jge
fs
rcrl
inc
inc
nop
mov
or
push
mov
jmp
mov
pop
or
sbb
mov
push
scas
icebp
add
pop
pop
ror
cmp
test
jg
inc
cmp
mov
lock
in
movlps
mov
adc
shlb
call
xor
call
decb
lret
pop
fs
mov
cmp
gs
or
in
cmp
aam
arpl
add
fisubs
test
popa
je
mov
adc
cld
adcb
incl
adc
iret
cld
dec
test
jecxz
or
push
xor
push
test
cmc
ret
jbe
inc
sub
sub
movb
aas
jg
dec
into
xchg
outsl
outsl
or
cmpsb
mov
push
cmp
lods
mov
and
rorl
push
xchg
in
sub
lods
jne
jecxz
scas
mov
pop
call
jno
fdivrs
lahf
stos
xchg
js
pop
jp
movlps
jnp
cmp
stos
inc
lock
mov
add
lret
pop
and
cs
imul
mov
pop
pushf
lock
cmp
shlb
clc
cmpsb
xchg
sbb
ret
rol
imul
mov
rcrl
leave
shll
dec
pop
pop
sub
fdivr
mov
dec
imul
icebp
in
mov
pop
bnd
stos
lcall
dec
add
pop
jle
push
out
inc
in
in
push
lcall
das
fwait
add
mov
sbb
mov
mov
lock
mov
push
mov
jns
or
into
and
push
icebp
cld
ljmp
stc
push
cli
testb
sub
daa
and
inc
jecxz
xor
mov
int3
sub
aaa
cmpsb
test
outsb
das
mov
jp
lret
outsl
xor
out
loop
outsl
insb
push
xchg
inc
inc
bound
or
jmp
enter
pop
cli
add
mov
adc
push
mov
ljmp
mov
add
int3
ret
lock
jb
jle
or
jl
repz
inc
imul
and
adc
arpl
stos
hlt
lcall
hlt
js
sbb
mov
mov
movsl
test
jne
divb
xor
in
or
aaa
add
lret
adc
pusha
out
aad
pop
push
add
dec
sahf
mov
outsl
cmp
sbb
add
sbb
inc
test
cmpsl
adc
push
dec
cmp
adc
cmp
imul
dec
mov
addb
inc
mov
and
cmp
jbe
pushw
test
mov
fst
mov
mov
add
sub
ret
outsb
xchg
pop
cmp
or
lahf
mov
cmpsl
sbb
mov
call
jo,pn
shlb
or
dec
test
js
pop
hlt
mov
adc
shl
orl
xor
dec
dec
mov
mov
or
sbbl
xor
shr
inc
and
enter
adc
hlt
out
xor
js
das
adc
clc
fiaddl
out
imul
incl
inc
jns
or
add
xchg
sub
add
imul
mov
fistpl
ficompl
sbb
xor
mov
push
les
push
sbb
jne
push
in
push
adc
repz
imul
in
sbb
ss
test
sti
xchg
jo
pop
mov
mov
push
int3
sti
sbb
arpl
cmp
pusha
cmp
dec
and
jns
shlb
es
sbb
inc
push
mov
or
sub
push
dec
and
test
cmpsb
mov
cmp
xchg
stos
and
adc
rolb
in
pop
hlt
mov
hlt
sbb
push
insl
shl
pop
mov
insl
adc
add
mov
fists
ljmp
std
sub
lock
mov
mov
ficoms
hlt
cwtl
cld
fucomi
push
jp
jp
jecxz
scas
pinsrw
or
mov
movsl
movsl
lods
sbb
cmpsb
and
icebp
movsl
pop
loopne
or
lret
or
into
out
rorb
lahf
rcrl
cmp
outsb
call
push
fldt
cmpsl
sub
stos
mov
stc
test
sbb
imul
dec
loope
sti
pop
aam
pop
jl
fisttps
int3
js
inc
lcall
lods
inc
mov
scas
mov
movsl
inc
inc
pop
ss
lcall
mov
sub
je
xor
pushf
pop
xor
adc
shll
fs
xchg
push
test
add
incl
adc
sub
inc
inc
and
or
add
loope
stos
shrl
sarl
push
xlat
in
in
or
popf
or
cltd
mov
jae
xchg
mov
mov
pusha
loope
out
mov
movsb
push
xor
jp
mov
lcall
jb
xor
xchg
mov
daa
test
decl
ror
rclb
ret
enter
and
lods
adc
adc
mov
bound
push
mov
mov
and
pop
sarb
mov
lahf
pushl
popa
cld
or
jo
iret
out
adc
mov
jno
outsl
hlt
adc
cmpsb
outsb
push
pushf
rorb
push
mov
add
movl
xchg
inc
lds
sub
ret
decl
out
repnz
add
lahf
mov
pop
ljmp
jle
cmpsl
stos
or
mov
jle
mov
cmp
daa
xlat
inc
ja
xchg
das
jno
jmp
mov
xchg
scas
pop
out
add
pop
sub
cs
pop
in
jne
test
mov
ljmp
dec
fstps
or
testb
dec
xchg
das
lock
lea
jmp
sub
std
xchg
fimull
loope
mov
cmp
dec
cmp
fs
test
dec
add
push
sbb
push
clc
test
inc
and
dec
dec
pushf
les
jl
mov
or
adcl
pop
fdivrp
mov
and
xorl
pop
mov
clc
lcall
mov
divl
mov
ja,pn
mov
jno
sub
pop
xor
fwait
ss
into
add
dec
rep
test
sbb
filds
enter
cmp
pop
fcompl
inc
cmc
jno
cmc
arpl
add
mov
mov
mul
mov
lods
inc
inc
scas
add
leave
mov
and
mov
test
mulb
outsb
aam
xchg
xorb
dec
xchg
jns
insb
cld
movsl
push
pavgb
inc
push
lret
cwtl
mov
pop
cs
mov
lret
jno
mov
icebp
insl
pop
mov
pop
rcrb
add
add
jp
pop
mov
jge
push
sub
xchg
aas
std
mov
lret
xchg
mov
inc
cs
enter
dec
int
fsubs
mov
insb
mov
pop
clc
or
push
mov
sub
dec
pop
mov
adc
hlt
in
inc
outsl
inc
pusha
hlt
mov
pop
clc
mov
enter
pop
cmp
and
lods
stc
sar
es
add
data16
test
xlat
aas
fwait
pusha
sub
ret
dec
push
xchg
adc
jl
sub
xor
xor
add
outsl
hlt
jg
out
xor
xchg
sbb
sbb
loope
inc
stos
sbb
sbb
mov
mov
xorl
addr16
mov
cmp
test
imul
cli
mov
or
mov
adc
fists
test
add
push
popa
adc
push
loop
sti
test
mov
das
std
dec
mov
or
mov
inc
add
sbb
inc
rcrl
jae
arpl
fidivrs
mov
repz
imul
cli
and
cmc
rorb
sub
insb
movsb
fwait
mov
push
mov
in
pop
cld
sbb
loope
and
cmp
push
and
sbb
repnz
aas
or
clc
les
push
iret
repnz
clc
pop
inc
mov
aas
scas
mov
das
pusha
std
jns
je
cmp
xchg
fisubrl
and
test
sub
test
mov
push
add
xchg
xor
outsb
aaa
inc
jae
adc
nop
pusha
mov
fcmovb
pop
subb
andl
testb
sub
cmp
push
insb
jns
mov
or
sbb
imul
pop
pushl
lret
mov
mov
xchg
mov
adc
shlb
adc
sub
aas
inc
clc
mov
cld
sbbl
xchg
fimuls
push
ret
pop
rcll
cmp
fcoms
andb
aaa
jle
in
mov
stos
out
mov
sbb
add
lock
clc
sub
das
sub
cmp
inc
out
push
xchg
adc
jo
inc
push
jecxz
out
mov
inc
sub
jg
sbb
daa
lods
cmc
stos
aam
leave
not
repnz
jo
lcall
out
push
and
inc
mov
push
pop
stc
xchg
sub
pop
inc
pop
ljmp
es
das
in
loop
adc
jbe
pop
mov
or
cld
adc
leave
jnp
pop
jg
inc
lods
xor
int
das
insl
push
pop
sub
hlt
mov
sub
imul
lds
xchg
cltd
cmp
ljmp
push
enter
jo
test
repnz
sub
imul
mov
loopne
lds
xchg
fcoml
push
and
jmp
dec
rorb
pop
jp
jb
movsl
mov
add
or
push
stc
lods
jnp
aas
fdivrs
push
pop
sbb
mov
add
add
lret
xchg
inc
mov
std
dec
jge
jo
add
dec
mov
cwtl
dec
loope,pn
adc
jg
lret
xchg
add
popa
nop
icebp
sbb
aaa
cmp
push
sbb
sub
cwtl
cmc
clc
filds
aad
icebp
cmpsb
bound
pushf
dec
test
push
cltd
hlt
cmp
jge
add
sbb
subb
adc
imul
fidivs
mov
add
adc
or
pop
pop
fildl
lds
sub
dec
jg
bound
jns
xchg
sub
sbb
in
push
or
mov
sbb
scas
inc
xor
imul
sub
fs
and
testb
push
loopne
das
test
scas
movsl
test
fldl
call
or
add
movsl
mov
pop
mov
cmp
dec
push
xchg
stos
lods
arpl
shlb
add
je
dec
rolb
lds
pop
adc
int3
movsl
adc
dec
notl
call
lock
mov
clc
and
xor
jno
out
mov
in
xorl
pop
fidivl
imul
and
xor
mov
loope
and
adc
fdiv
jg
sbb
clc
pushf
loopne
test
lods
sbb
jl
xlat
sub
cli
je
xchg
dec
pop
mov
mov
mov
xorl
mov
push
or
imul
adc
add
dec
sbb
insb
mov
push
or
test
pushf
fstpt
imul
sahf
jecxz
jno
jecxz
sub
inc
sbb
inc
lock
adc
push
stos
push
mov
jecxz
push
cli
in
push
movsb
adc
std
adc
clc
mov
sbb
push
pop
sahf
fsubrl
idiv
outsl
clc
mov
cmp
je
shlb
lcall
pop
shl
imul
mov
in
call
sub
sbb
ja
xor
adc
shrl
ja
pop
arpl
dec
or
ja
dec
jae
cmp
lods
shlb
mov
clc
adc
call
notb
sub
xchg
sub
leave
xchg
or
in
push
sbb
fsts
mov
dec
xchg
xlat
mov
sbb
enter
jg
ja
inc
sub
jl
popa
shld
jecxz
rcll
push
jno
loop
bound
nop
mov
js
inc
mov
inc
xchg
jle
mov
add
je
ljmp
mov
aam
sarl
sub
mov
cmp
sahf
nop
xor
out
xor
mov
pop
stos
inc
js
rcr
sbb
sahf
mov
or
in
xor
push
loope
add
and
pop
mov
jbe
jne
pusha
subl
sub
sbbl
xor
das
and
outsl
adc
dec
cli
cltd
or
hlt
cmp
test
dec
cli
test
fdivrl
iret
lock
jae
out
fs
jae
ja
bound
std
xor
mov
inc
xor
cmpsb
std
call
mov
and
or
test
add
psllq
cmp
cmpl
lea
cmpb
mov
or
dec
sub
bswap
aaa
insb
sub
cs
std
test
cld
loope
jmp
mov
out
pushf
xor
lock
add
push
insl
in
lea
dec
inc
hlt
mov
test
dec
out
fisubl
or
jmp
dec
sub
xor
icebp
push
and
push
xorl
fistpll
fwait
pop
pop
std
movsl
inc
inc
les
nop
repnz
sub
insb
mull
cmp
or
mov
clc
jb
pop
adcb
pop
xchg
and
inc
lods
xor
sub
into
je
sti
mov
bound
cmp
ret
test
xchg
inc
and
andb
add
clc
sar
aaa
push
push
cmp
shlb
fcmovu
stos
mov
push
cmpsb
xor
out
pusha
rorb
fucomip
icebp
scas
sub
aad
ljmp
ss
ljmp
call
cmp
mov
movsl
xchg
clc
out
repz
sub
jecxz
or
mov
mov
repz
cwtl
subb
test
je
les
mov
inc
das
mov
out
arpl
add
adc
ss
icebp
into
sbb
subb
mov
push
add
inc
imul
mov
jecxz
cli
add
fnsave
adc
sti
andl
lock
hlt
lea
fisubrs
dec
imul
jle
jbe
hlt
cmp
push
xchg
inc
int
jae
mov
mov
sbb
xor
xor
ret
cld
in
lods
sti
jmp
mov
push
loopne
pop
xor
and
aaa
inc
cld
ljmp
popa
js
add
fnstsw
cmp
sarl
mov
inc
push
mov
loop
subl
pop
je
dec
jecxz
cld
cmp
mov
adc
mov
add
or
mov
mov
and
mov
adc
popl
adc
xorl
ret
lods
frstor
aas
adc
jg
repz
sarb
mov
cmpsl
cmp
shr
rcrl
popa
pop
xchg
popa
adc
pusha
imul
inc
jns
inc
data16
push
mov
mov
stos
jne
call
in
push
cld
int
cmpl
jns
xchg
adc
dec
test
iret
adcb
inc
jne
xor
dec
dec
mov
loop
out
movsb
leave
in
sysenter
test
cs
xchg
pop
shlb
sbb
xchg
xor
add
insl
mov
dec
rorl
pop
daa
cli
pop
jg
jo
lock
pop
add
pop
add
mov
push
lret
lcall
mov
clc
ret
pop
pop
add
loop
mov
and
shll
pop
jmp
nop
in
xchg
add
push
push
inc
fst
inc
mov
cmp
loop
sbb
fdivrs
test
mov
jo
mov
decb
addb
ret
repnz
clc
ficoml
int
lods
or
mov
frstor
xor
scas
daa
pop
cwtl
pop
rcl
fldl
inc
cwtl
iret
fldenv
mov
push
adcl
or
mov
inc
add
testb
stc
loope
in
stos
daa
test
xchg
mov
fbstp
mov
sub
bound
xchg
cmp
test
add
test
movsb
lods
gs
ja
push
repnz
cmpsb
sbb
add
cmpsb
mov
push
lock
mov
int3
jno
cmpsl
lods
push
cmp
outsl
sub
mov
rorb
sub
fcmovnbe
inc
aam
or
mov
mov
cmp
les
mov
icebp
lods
cltd
inc
cmp
lea
xchg
xchg
mov
leave
ljmp
push
inc
icebp
inc
cmp
adc
pop
mov
sbb
addr16
ret
mov
mov
dec
add
inc
push
popa
jmp
push
inc
clc
xchg
jg
dec
mov
mov
jo
lret
pusha
cmp
xorb
inc
out
xlat
inc
shl
jae
mov
mov
pop
decb
pop
mov
cwtl
or
cmpsl
gs
or
sbb
add
ss
xor
into
or
push
mov
sbb
push
clc
es
dec
jl
or
fnsave
add
pop
pop
xor
pop
pop
mov
and
hlt
mov
cmc
pop
sahf
leave
call
mov
stos
movsb
ja
insl
mov
unpcklps
push
pop
arpl
xchg
les
adcb
jno
dec
test
fisttpl
dec
dec
and
lret
push
mov
movsl
sbb
adc
cmp
pusha
push
sbb
sbb
xchg
in
pop
mov
push
jns
push
xor
out
call
jbe
push
addr16
cmp
dec
add
fistl
jmp
cmp
rorl
xchg
pop
dec
adc
lea
push
aas
add
shrl
pop
rorb
outsl
addb
jp
mov
repnz
mov
pushl
orl
loopnew
fistpl
jno
xor
sub
sbb
out
add
fidivs
inc
movsb
xor
mov
fisubrs
dec
mov
pop
fsubrs
mov
xchg
sub
and
dec
mov
push
test
ljmp
mov
lea
fbstp
mov
and
mov
sti
mov
out
mov
fldenv
cmc
inc
dec
fcomps
mov
fnstcw
cmpl
ret
pop
mov
cmc
mov
inc
xor
cld
push
sub
ret
add
xchg
mov
pop
cmp
jg
inc
rorl
cwtl
sbb
in
push
sti
xor
in
sbb
jo
mov
ficompl
inc
push
loopne
lea
pop
mov
push
fiadds
push
mov
jg
movsl
pop
xchg
push
sbb
or
sahf
ljmp
std
xor
out
mov
das
pop
mov
sub
fistl
ss
xor
fs
mov
lods
xor
xchg
dec
inc
cmp
ds
xor
xlat
arpl
data16
push
xchg
ret
je
loop
cs
addr16
sub
cmp
std
mov
inc
mov
fwait
jmp
jo
stc
or
and
xchg
dec
jnp
xchg
out
in
jbe
dec
push
jg
std
sarb
push
xor
loope
or
mov
xchg
pop
int3
pop
lds
jne
cmp
incb
fdivl
mov
int3
sarb
mov
mov
pushf
cmp
or
pop
fldenv
push
enter
mov
aas
bound
ret
push
xlat
lods
std
lock
out
ret
xor
inc
jo
push
or
and
jle
icebp
fwait
push
je
int
fdivs
jg
call
xor
cmp
mov
aaa
inc
mov
cld
addb
in
xchg
cli
pop
daa
int3
aam
int3
shr
pop
es
pop
sub
inc
mov
jg
ds
jno
lret
sub
push
jne
aam
xchg
jl
mov
push
sbb
xchg
jo
dec
jbe
mov
pop
js
xchg
xchg
push
jle
or
sub
sbb
das
fimull
orb
jb
int3
mov
push
xor
out
ss
mov
loope
jmp
push
push
add
in
pop
pop
mov
push
mov
test
pop
inc
js
mov
sbb
or
and
dec
sarl
mov
and
inc
sti
scas
push
adc
sbbl
lea
and
lret
fcmovnb
out
mov
mov
sbb
mov
mov
sbb
mov
daa
pop
cmp
lock
je
mov
or
repz
jle
jg
mov
imul
add
icebp
repnz
or
rcl
sbb
movsb
fwait
sub
fnstsw
xorl
push
sub
shl
jp
jge
jg
enter
jns
nop
or
jmp
push
jmp
mov
cmpb
loopne
and
lret
outsl
jl
mov
rcll
lods
sub
or
filds
fs
sti
fists
aad
or
dec
test
dec
mov
js
mov
adc
and
leave
jns
push
jne
movl
push
jle
ljmp
subb
sub
data16
or
stos
sbb
adcb
mov
enter
jbe
dec
sbb
fstpt
mov
leave
dec
xorb
mov
mov
mov
out
outsb
test
das
je
lds
sti
sar
inc
stos
outsl
dec
mov
cmpsl
jl
outsl
adc
push
mov
or
add
and
orl
out
sbbl
int3
aam
add
push
stc
stos
dec
je
sub
fwait
cs
mov
loope
xlat
or
int3
adc
filds
in
adcl
loope
pop
and
lret
adc
dec
or
and
adc
pop
pushl
mov
fmuls
xor
mov
shll
mov
cmp
or
push
add
popf
pop
cmp
cli
sub
inc
push
js
pop
mov
jmp
in
xlat
sub
enter
pop
mov
jns
popa
or
add
dec
jnp
sbb
shrb
jle
nop
push
mov
pop
xor
mov
es
clc
fildl
dec
or
int
push
add
pop
lock
pop
imul
xor
xor
sub
outsl
lea
jg
push
or
outsl
xor
lock
pop
enter
loopne
mov
or
ret
imul
shrb
xchg
stos
lcall
scas
and
cmp
xchg
pushl
orl
loopne
lcall
popl
rclb
mov
add
push
adc
clc
and
push
dec
inc
xchg
ss
push
pusha
mov
sti
ret
lahf
sbb
rcr
mov
and
fwait
xlat
xorb
scas
inc
cmp
pop
sbb
jns
fistpl
or
adc
stos
pop
js
pop
sbb
roll
pop
arpl
dec
dec
pop
jns
orb
in
cmpsb
mov
adc
lret
push
iret
sub
repz
or
mov
mov
or
call
inc
lods
adc
or
fisttps
lret
notl
cwtl
jmp
add
das
or
sbb
addb
and
inc
je
mov
fmull
int3
cmp
inc
ja
imul
fwait
loopne
cltd
fdivr
das
jno,pn
sbbl
repz
xor
flds
test
lds
movsb
sti
icebp
jns
mov
mov
loop
dec
push
jle
push
lret
inc
hlt
mov
lods
icebp
cmp
fsubl
add
test
std
fnstcw
es
add
dec
mov
push
cli
fildl
pop
rolb
pushf
icebp
adc
rcl
adc
mov
shlb
dec
dec
lock
test
add
sub
mov
decb
insl
bound
call
out
jo
rcl
les
fildll
push
sub
insl
jmp
cltd
cmp
dec
or
mov
jbe
cmp
fldt
pop
clc
nop
sarb
das
sub
xlat
inc
test
jl
add
scas
clc
in
repnz
hlt
mov
mulw
and
or
adc
mov
insb
mov
mov
xchg
inc
mov
movsl
nop
js
mov
sbb
xchg
inc
mov
adc
ret
mov
sarl
sbb
test
mov
xchg
push
cmc
or
dec
xor
cld
out
inc
les
mov
pushf
xor
mov
push
adcl
push
sub
push
out
pop
mov
dec
lahf
adc
aas
push
mov
mov
push
inc
imul
or
fistpll
adc
pushf
cmp
adc
call
push
pop
inc
push
cmpsb
pop
jns
jl
inc
mov
xchg
pushf
mov
jmp
dec
jae
insb
sub
xchg
stc
mov
cmc
cmpsl
pop
and
pop
pop
mov
add
int3
cwtl
dec
or
mov
jbe
dec
jecxz
call
xchg
mov
cmp
inc
sti
into
sti
jno
outsb
decl
and
hlt
mov
adc
xchg
xchg
int
ret
or
test
std
jecxz
pop
or
xor
pop
jo
loopne
aaa
movsb
dec
sbb
stc
jle
ljmp
repz
mov
jno
pop
data16
adc
mov
cmp
mov
mov
mov
ss
pop
push
and
mov
cmp
push
stos
cwtl
pop
js
mov
int
sti
insl
jae
jno
addb
or
jp
sbb
add
pop
repnz
jnp
cld
negb
out
enter
out
dec
push
push
or
out
mov
cs
mov
in
inc
xchg
and
js
pop
fcom
ds
clc
fucomip
cmp
lea
cltd
stos
push
out
inc
data16
push
jmp
loop
addb
sub
repnz
fdivl
sub
pushf
mov
decl
or
aad
push
adc
call
imul
pop
adc
sbb
push
mov
inc
mov
xor
jmp
subb
rcll
loope
cli
mov
mov
jno
stc
push
push
aam
pop
iret
dec
test
push
test
fidivrl
movsl
test
pushf
mov
divb
inc
aaa
push
loope
lret
pushf
xchg
adc
mov
ret
mov
in
lcall
cmp
cli
je
fildll
mov
xchg
ror
pop
outsl
fisttpl
imul
aaa
icebp
cmpsb
mov
xchg
adc
loop
leave
xor
lea
xor
mov
lods
test
lea
jae
cld
sbb
add
cmp
add
adc
or
mov
add
mov
xor
or
cmp
mov
mov
out
dec
inc
mov
push
jg
shrl
xchg
rcrb
leave
adc
cmp
les
out
loope
mov
negl
icebp
pop
mov
xor
test
das
fsubr
dec
repnz
pushf
mov
inc
sbb
outsl
mov
and
or
fiadds
cs
mov
jge
mov
js
pop
imul
fsubrl
js
in
int
jecxz
dec
fildl
pop
icebp
stc
imull
mov
mov
out
mov
insl
rolb
mov
add
pop
xchg
cmp
and
push
cli
inc
outsl
aad
aam
cmpl
dec
push
int
fsubr
lods
cmpl
idivl
movsb
fidivl
add
lods
inc
and
adc
pushf
adc
inc
push
lea
adc
push
mov
mov
out
sbb
js
icebp
pusha
mov
in
and
xchg
adc
mov
out
sbb
out
in
mov
mov
cli
ljmp
xlat
outsl
and
adc
test
scas
gs
jns
lods
icebp
xchg
popf
jnp
dec
in
cmp
cmp
ss
add
jmp
pushf
sbb
adc
fimuls
mov
cltd
or
mov
mov
push
test
shlb
lret
fstpt
popa
mov
push
jb
and
iret
nop
mov
fwait
or
repnz
push
and
sar
cmc
ljmp
mov
andb
arpl
fistpll
mov
push
andb
addb
sbb
xor
ss
fidivrl
leave
inc
js
dec
cmp
inc
add
das
add
or
lds
incb
pop
ljmp
repnz
ret
fistpll
sbb
adc
add
les
sub
inc
xchg
inc
push
xchg
and
fimull
in
sub
clc
jnp
dec
xor
out
in
mov
inc
addb
and
cs
or
mov
mov
pop
test
add
movsb
adc
or
mov
push
out
cmovg
decl
pop
and
jl
pop
add
pop
subl
xchg
and
or
pop
push
js
in
mov
dec
or
or
push
xchg
xor
pop
push
push
dec
pushf
push
add
jle
rcll
insl
add
push
leave
and
mov
adc
xchg
jecxz
insb
or
ffree
sbb
xchg
mov
aam
pop
add
fnstcw
lahf
add
cli
idiv
in
fistpll
push
inc
cmove
divb
imul
pop
daa
outsb
or
xchg
inc
xchg
nop
scas
movsb
sub
jle
jge
push
iret
mov
jnp
mov
call
inc
add
push
mov
mov
push
cmp
or
mov
les
push
sub
xchg
jmp
mov
and
roll
or
mov
fistps
sub
andb
repnz
dec
icebp
mov
jmp
aad
mov
pop
pusha
sti
pop
fistps
cmp
mov
scas
fcoms
js
mov
mull
adc
sbb
pop
jle
stc
fcoms
cld
cltd
push
rolb
into
mov
dec
cld
outsl
pop
cmp
push
mov
insl
icebp
mov
push
sbb
jmp
sbb
call
orb
sub
or
inc
cmp
jg
pop
daa
mov
mov
mov
aam
dec
push
cmp
or
outsl
mov
inc
adc
add
outsb
lock
ljmp
push
imul
in
xchg
mov
das
add
scas
jns
push
js
mov
xchg
push
filds
shrb
fwait
jle
or
dec
add
push
arpl
js
lcall
cmp
dec
push
jb
lock
dec
mov
sub
in
fbstp
loopne
sbbb
xchg
inc
sbbb
add
cmp
subb
loop
add
insb
and
std
jbe
push
cmp
jnp
push
mov
ja
fbld
ret
loopne
or
lods
stos
sahf
stos
movsl
decl
xchg
icebp
mov
imul
jns
xchg
ljmp
aaa
loop
inc
pop
dec
mov
cli
cmpsl
and
xchg
xchg
mov
insl
pop
mov
push
iret
xor
outsl
and
mov
jbe
in
mov
lock
add
mov
push
negb
jle
pop
test
outsl
aaa
cmp
nop
lock
sbb
rcrb
in
jbe
push
sbb
mov
es
and
fcos
loope
mov
sbb
or
dec
rclb
push
lret
or
and
sbb
loopne
xchg
incb
gs
dec
insl
stos
mov
outsl
or
cmp
pop
loope
pushf
sbb
lret
lret
sbb
push
cmp
sub
aaa
adc
pop
inc
call
imul
dec
ja
fs
sub
inc
rclb
cmp
push
push
inc
push
xlat
lahf
and
out
add
sub
rorl
sbb
cmp
sub
or
pop
cld
sbb
jle
pop
xchg
mov
aaa
xchg
gs
cli
scas
jle
imul
jb
jb
movsb
sbb
cltd
cmp
jno
or
push
test
aaa
inc
test
sarl
push
adc
mov
push
pop
or
xlat
jne
int3
sub
cmp
push
bnd
sbb
out
sbb
call
pop
push
dec
fstps
mov
mov
outsl
adc
shll
adc
aad
sarl
sahf
cld
xlat
mov
lock
lret
lock
fildll
jmp
push
out
mov
and
mov
sarb
adc
push
iret
imul
mov
in
js
ret
daa
divl
int3
bound
fistps
push
pop
sub
push
add
push
dec
clc
ffreep
mov
fildll
jmp
add
or
adc
repnz
call
or
ss
popf
fwait
push
std
pop
mov
retw
push
shl
sti
push
xchg
or
das
fstpl
mov
sub
fwait
cmp
icebp
dec
push
andl
jns
fwait
inc
clc
push
ja
lcall
adc
cld
mov
jge
push
inc
add
xor
loop
sbb
cwtl
negb
adc
cltd
aad
dec
js
hlt
data16
lods
add
sbb
enter
mov
sahf
jg
call
mov
add
jmp
cmp
sahf
lcall
mov
inc
mov
mov
or
or
fs
cmp
push
aaa
add
cli
mov
ja
repnz
push
test
push
outsb
bound
push
call
dec
jge
lock
lods
aaa
and
inc
fstps
adc
mov
xor
or
ljmp
stc
mov
adc
shll
clc
mov
insl
cmp
xchg
fcmovnb
ret
lret
mov
jmp
call
xchg
subl
push
gs
fdivr
mov
jmp
je
jecxz
cmp
add
jmp
dec
sub
pop
in
mov
lea
xor
dec
lret
pop
mov
sub
mov
dec
or
mov
push
lret
pushl
inc
aad
cwtl
inc
mov
inc
mov
cld
lret
add
or
movsl
das
cwtl
mov
jl
push
mov
push
adc
movsb
xor
jno
or
aas
loop
jl
push
scas
test
dec
aaa
dec
mov
push
repnz
punpcklqdq
aad
inc
mov
or
gs
icebp
out
dec
mov
test
icebp
test
stos
cmpsl
jns
jb
cmp
ret
outsl
ljmp
jp
add
fistpll
into
lds
sub
dec
ja
ret
inc
sarb
xorl
cmp
xchg
scas
jns
loopne
and
push
test
mov
xor
mov
jnp
insl
xchg
add
pop
sub
and
pop
push
cmp
jae
ficompl
fists
cmpl
jns
push
pop
add
imul
fidivrs
sbb
pusha
adc
pop
inc
jg
pushf
mov
and
push
push
das
mov
dec
inc
push
pop
movsbl
sub
pop
clc
add
push
push
jle
mov
daa
outsl
ja
sub
mov
adc
and
lret
or
cmp
lret
cmpsb
push
lret
sbb
jle
pandn
sub
adc
fnstenv
into
sbb
push
dec
divb
push
pop
pushl
shlb
mov
fsubs
filds
jmp
into
cwtl
xchg
dec
push
dec
cwtl
dec
movntq
test
mov
popf
add
shll
mov
shl
add
arpl
insb
pop
and
stos
hlt
sbb
or
cli
jecxz
inc
jbe
sub
test
push
sti
nop
or
pop
in
cltd
repz
xor
lock
stos
lea
and
icebp
sub
and
loopne
cld
bswap
push
adc
mov
add
fwait
cli
xchg
and
aas
call
and
mov
xorb
mov
les
sub
and
hlt
cmp
cwtl
addr16
rorb
rcl
ds
or
insl
adc
fists
dec
adc
jp
test
inc
aad
lock
shlb
jge
cltd
add
bndldx
add
nop
inc
cmc
inc
sbb
scas
test
and
adc
sub
insb
jp
add
aam
arpl
or
sbb
int3
stc
adc
pop
clc
movsb
adc
std
sbb
loop
xor
cmc
push
andl
icebp
cmp
inc
fimuls
xchg
lret
subb
and
or
lret
sbb
push
fucom
clc
mov
or
mov
dec
fmuls
adc
mov
xchg
xchg
fidivrs
fwait
or
pop
sbb
jg
xchg
push
out
pop
xchg
imulb
sub
cmp
dec
lock
xor
gs
or
inc
stc
jg
xlat
mov
jle
sub
daa
inc
pop
sub
clc
mov
in
push
movsb
mov
sub
mov
inc
leave
jge
xor
aas
add
lcall
std
pop
test
insb
movsb
loopne
test
mov
mov
out
bound
mov
and
std
or
inc
add
push
or
rorb
lcall
out
sti
or
arpl
stc
pushf
xchg
push
sbb
mov
lea
aaa
stos
sbb
mov
roll
js
dec
clc
ret
scas
jnp
clc
add
test
pop
jg
inc
ss
add
arpl
das
frstor
inc
mov
and
lock
add
mov
test
push
icebp
jecxz
inc
mov
push
mov
xchg
fidivrs
mov
jo
in
jg
pushf
mov
xor
mov
mov
push
movsl
pushf
stos
xor
push
cmc
lds
sbb
fisttps
mov
cld
cwtl
mov
pop
mov
jle
jns
adc
hlt
stc
pop
repz
fs
das
and
lock
stos
inc
cmpsl
add
mov
cli
jmp
push
adc
fisttpl
push
inc
lea
mov
mov
ds
ja
sub
dec
sbb
data16
mov
dec
sbb
test
inc
pusha
rorb
add
faddl
dec
jo
pop
push
outsl
push
adc
lds
les
or
xchg
mov
loope
aaa
es
or
incl
lods
out
shll
sti
adc
fcmovnbe
decl
sub
mov
xor
outsl
cld
mov
mov
out
adc
cmpb
sub
and
ja
jecxz
loope
jno
dec
pop
jmp
into
pushf
decl
clc
or
je
les
jl
daa
subb
sarl
aas
fcoms
sbb
mov
or
inc
inc
outsl
add
xor
cmp
leave
dec
jno
cmp
xlat
aas
adc
fwait
push
mov
mov
and
test
adc
ds
cmpb
js
add
add
jp
xor
lcall
xorb
inc
es
inc
sub
xchg
loope
stos
data16
mov
movsl
rol
inc
movsb
sahf
insl
xchg
clc
push
push
incl
daa
out
prefetch
or
je
std
addb
hlt
inc
adc
adc
mov
pop
pop
or
jle
les
push
mov
in
and
les
jp
fs
imul
push
sub
fisttps
mov
fiadds
clc
jle
mov
xchg
mov
aad
push
aaa
push
aas
inc
aaa
gs
lock
mov
mov
dec
pop
xchg
js
mov
mov
sub
mov
pop
cwtl
mov
adc
or
or
leave
lods
mov
pop
and
loop
cld
add
lret
test
jmp
fistpl
adc
sbb
test
fisttpl
pop
dec
hlt
mov
mov
add
sub
mov
jmp
add
push
jo
test
cli
xchg
jg
mov
incb
or
jl
aad
pop
push
outsb
leave
test
mov
imul
test
adc
push
aaa
cli
sub
add
fnsave
and
fnsave
xchg
subb
je
into
scas
pop
or
lock
push
and
pop
or
nop
push
sub
push
jg
push
stos
inc
fdivr
outsl
gs
mov
sub
pop
stos
fistpll
ds
bound
int
icebp
cmp
mov
ja
dec
fldl
fsts
xlat
loope
ljmp
call
push
inc
push
and
sbbl
test
pusha
jp
xchg
movsl
int3
test
roll
or
fistl
pop
push
adcl
orb
aam
fdivrs
sbb
and
pop
flds
push
mov
sbb
cwtl
pusha
cld
jg
add
inc
aas
and
ds
jp
dec
sub
pop
jnp
mov
ss
in
pop
push
shl
jne
jp
movsb
xor
clc
pop
sub
clc
jp
push
mov
pop
push
jl
jecxz
xchg
add
and
fimuls
push
adc
or
mov
lea
loop
jmp
mov
jg
loopne
pop
hlt
shll
lret
mov
mov
or
outsl
fcompl
push
add
clc
roll
sub
pusha
add
fdivrp
lds
mov
sub
push
inc
jge
out
inc
jo
out
lods
movsb
mov
xorb
movsb
ja
sahf
xor
ja
inc
xchg
xor
cmc
fistps
movsb
sarl
int3
notl
mov
cmc
call
insb
inc
in
iret
push
mov
xor
mov
ss
pop
push
mov
jg
dec
or
pop
into
pop
scas
rorb
mov
pop
imul
mov
enter
pushl
xchg
or
jg
and
mov
les
or
pop
lods
scas
sub
bound
fiaddl
fstps
fildll
lds
scas
or
adc
adc
test
mov
cli
xchg
loop
adc
mov
das
leave
and
dec
gs
push
int3
mov
test
pop
fcoms
outsl
in
mov
xchg
cmpl
nop
and
outsb
insl
cmpsl
lea
test
jecxz
ljmp
pop
sbb
mov
nop
jmp
mov
or
loop
fnstsw
leave
jmp
lods
xor
and
sub
adc
test
ficompl
xchg
dec
ret
and
insb
and
jae
jle
call
fmuls
mov
jl
sbb
movsl
push
lock
mov
mov
inc
mov
pop
pop
cmc
shr
mov
roll
push
rcll
mov
mov
xchg
mov
mov
arpl
fs
push
sbb
js
jg
mov
jmp
mov
cs
adc
repz
test
int
push
jo
inc
leavew
jmp
jp
stos
sub
and
adcl
js
mov
cmc
fistl
add
loope
mov
jno
imul
xchg
addr16
adc
inc
test
outsb
or
iret
ljmp
cltd
daa
pop
xchg
std
nop
movhps
and
xchg
in
inc
mov
movsb
pop
jl
fimull
inc
add
mov
sbb
xor
call
jo
mov
mov
decl
sub
and
jb
inc
iret
mov
jecxz
vandps
imul
jg
xchg
std
mov
jg
iret
jp
pop
jo
lock
dec
and
or
call
ja
inc
sar
ret
filds
push
or
cs
sbb
stos
sbb
cmpsb
jbe
sub
cmp
jmp
mov
cld
adc
pop
cmp
mov
cmc
test
jo
jmp
mov
mov
out
rclb
decb
mov
mov
mov
cmp
xchg
in
mov
adcb
fildll
mov
cmp
pusha
fistl
inc
outsl
adc
pop
adc
rolb
call
pop
jno
sub
and
ss
rcrl
ret
inc
xor
mov
mov
fdivr
lcall
lds
mov
sub
in
sub
cmp
sub
mov
pop
push
fistl
cmp
pop
mov
out
lods
fsubp
adc
popf
mov
dec
mov
xchg
adc
cmp
int
hlt
xchg
pop
imul
enter
jecxz
and
nop
out
mov
roll
lcall
xchg
mov
jmp
lds
cmp
das
or
xchg
aas
jo
dec
insl
push
mov
adc
pop
mov
shlb
or
xchg
shll
cmp
inc
sbb
aas
push
pop
std
rcll
cmp
xchg
xor
mov
test
js
add
inc
xor
cmp
xchg
icebp
lahf
or
dec
dec
rclb
orl
mov
push
lods
aaa
arpl
cmp
push
lea
movsl
clc
or
sub
mov
jno
cwtl
jle
and
sbb
lea
rclb
je
in
sbb
xchg
roll
subl
test
aaa
jmp
sbb
adcl
into
popf
adc
std
hlt
push
push
ja
dec
push
dec
sbbb
mov
loopne
inc
sti
xchg
ja
cmpsb
mov
jp
and
arpl
jmp
mov
cmp
mov
std
aam
popa
mov
icebp
mov
mov
push
mov
mov
inc
rorl
inc
mov
xchg
mov
push
aas
mov
repz
das
lock
add
push
jae
shll
adc
cmp
inc
lods
pop
or
mov
sub
jb
mov
mov
push
mov
lea
adc
ljmp
insl
jmp
and
pop
popa
cmp
add
sbb
pop
push
lcall
adc
mov
and
add
js
out
inc
jbe
mov
xor
cmpsl
cld
xlat
ja
aad
lods
loope
sbb
repz
or
filds
push
mov
cli
out
inc
jo
test
jg
and
xlat
push
mov
nop
push
dec
sbb
mov
xchg
inc
ret
testl
fisttpll
push
sub
popf
mov
or
jp
mov
push
fmul
loope
je
dec
pop
adc
int3
rol
push
lods
imul
hlt
fcmovnb
adc
xchg
push
cmp
fs
icebp
mov
xchg
jp
inc
fsubs
xchg
sub
mov
cltd
xor
xchg
js
sub
inc
jp
lods
adc
das
pop
dec
jecxz
jecxz
pop
or
mov
jmp
or
ds
pcmpeqw
and
sbb
or
lahf
xchg
hlt
fucomip
lods
add
movsb
sbb
dec
push
fldt
xchg
clc
sbb
mov
dec
push
cmp
dec
loope
lcall
xchg
sub
or
cmp
repnz
outsl
and
cmp
hlt
shrl
std
mov
jl
xor
mov
inc
xchg
jne
xor
sarl
pop
fdivs
in
ljmp
inc
mov
repz
sub
std
jmp
in
pop
cltd
xor
sub
fildll
scas
adc
je
adc
lods
adc
es
mov
mov
insl
aaa
movsb
mov
mov
sbb
rcr
jmp
pop
push
notb
mov
mov
mov
sub
pop
insb
stos
insb
mov
and
das
add
mov
sub
shrb
or
sub
adc
add
jmp
lret
filds
fs
cmp
test
fidivrl
inc
das
cld
fwait
mov
clc
jl
inc
or
test
and
mov
mov
stc
ljmp
or
loopne
cmp
inc
or
test
dec
lret
adc
fdivrl
aad
xor
clc
inc
aas
inc
mov
in
mov
mov
jmp
mov
test
mov
cmp
jbe
fldl
pop
sub
mov
add
cli
and
xor
jae
jge
outsb
sbb
sbb
or
or
jnp
xchg
mov
mov
push
sub
jo
aaa
hlt
xlat
pop
sahf
test
outsl
dec
sbb
jae
jge
stc
sarb
rolb
imul
fsubrl
sbb
and
jmp
jns
and
aaa
shlb
cmp
stos
test
cltd
sub
lea
mov
insl
jmp
je
jge
push
aad
adc
shlb
xor
sbb
fidivs
push
mov
pop
or
mov
sbb
mov
sbb
cmpsl
fmuls
test
xchg
inc
inc
jle
jecxz
cmp
jecxz
mov
xor
rcll
fldt
ja
add
xchg
jge
inc
pusha
out
add
adc
jnp
cmpsl
jle
mov
jp
incl
in
fsubp
std
pop
orb
jb
hlt
inc
es
push
push
repz
inc
push
pop
popa
push
or
cmpl
push
insb
lock
mov
cmpsb
dec
std
test
iret
adc
and
mov
mov
imul
jnp
mov
and
push
mov
xor
test
test
jmp
fnstcw
xorl
int3
fildll
je
fildl
xchg
xor
pop
adc
push
call
sbb
sub
shl
aam
dec
mov
add
fmuls
push
lds
xor
insb
pusha
sti
imulb
add
cmpsb
adc
inc
pop
jp
sti
outsl
dec
adc
icebp
jg
out
inc
insb
lahf
xchg
in
mov
mov
pop
sbb
popa
lods
mov
mov
cmp
dec
call
outsb
xchg
push
out
pop
loopne
fidivs
adcl
mov
out
add
dec
fistl
imul
jp
dec
cmpb
inc
push
pushf
push
sbb
xlat
popa
xchg
in
mov
push
cmp
call
lock
ljmp
iret
mov
sbb
inc
mov
int
adc
pop
jnp
mov
inc
ffreep
rolb
fwait
shrb
roll
jecxz
xchg
icebp
add
xchg
out
insb
xchg
dec
mov
cmpsb
cs
pusha
sti
sahf
iret
icebp
cwtl
sub
jge
shlb
mov
pop
adc
inc
lock
and
jb
inc
adc
pop
dec
fs
mov
iret
pop
sub
pusha
ss
adc
lds
pop
cmp
les
dec
add
and
outsl
fs
add
lods
insl
fucomip
sbb
rcrb
cltd
movsb
nop
add
out
and
sti
ret
xchg
cs
mov
adc
stos
shlb
pop
xor
fucomip
xchg
insl
inc
dec
leave
jo
push
mov
xchg
leave
push
pop
cmpl
js
in
bound
aam
push
in
adc
cltd
out
test
arpl
insl
outsl
rcl
jle
cltd
sub
mov
fistpll
sub
lds
loop
je
pop
xor
clc
xchg
faddl
mov
mov
jo
stos
mov
inc
call
mov
push
loopne
std
test
shrb
mov
jecxz
ficoms
cmc
cmpl
adc
xorl
rclb
xchg
jo
fsubs
sub
mov
ret
in
push
mov
fdivrl
pop
mov
cmp
or
mov
mov
mov
mov
pop
addl
mov
jb
sahf
jbe
outsl
sub
push
into
and
dec
jle
mov
and
popa
adc
push
jo
cmp
loop
push
fnsave
stos
dec
mov
jecxz
adc
test
add
outsb
mov
adc
mov
sbb
pop
lcall
movsb
xor
ret
imul
push
xchg
xchg
cmp
adc
mov
lods
mulb
or
mov
jbe
add
or
fistl
cmp
dec
daa
leave
mov
stos
xchg
arpl
adc
jecxz
js
and
iret
cmc
mov
or
or
add
mulb
sbb
std
xchg
dec
sti
in
outsb
mov
mov
lcall
mov
fidivrs
aas
mov
mov
rcl
hlt
mov
data16
xorl
mov
repz
pusha
stos
jg
adc
repz
mov
and
sbb
jg
and
mov
jno
ds
sbb
dec
add
mov
lret
pop
push
xchg
add
inc
imul
push
pop
and
js
and
pop
inc
cwtl
and
loope
push
or
inc
xor
movsl
pop
repnz
jecxz
pushf
cmp
fisttpll
lret
lcall
mov
jl
dec
xchg
sub
or
test
stos
and
sbb
pop
jae
mov
adc
push
pop
mov
and
adc
out
xchg
pusha
xor
push
jae
mov
lock
ret
pop
jno
adc
repnz
fsubs
in
fsts
sahf
pusha
loopne
ljmp
inc
add
ret
sbb
push
js
xchg
and
aad
mov
lret
das
lock
stos
shrb
mov
rcrl
jo
adc
mov
adc
adc
into
add
outsl
hlt
lods
mov
stos
or
ret
into
int
outsl
adc
mov
pusha
pop
ljmp
mov
push
daa
in
ds
scas
mov
lahf
insb
lret
push
mov
cmc
outsl
in
mov
mov
movsb
mov
repz
lea
and
adc
pop
mov
jl
call
arpl
outsb
inc
aad
js
test
arpl
inc
jb
cmp
jb
in
jbe
pop
jne
xchg
xor
sub
addr16
movsb
and
and
inc
jp
adc
decl
cmpsb
adc
pop
lcall
lea
mov
clc
pop
adc
add
ljmp
and
xlat
loopne
lret
cwtl
cmp
fsubrl
lds
mov
rorl
in
and
test
fdivrl
fnstcw
inc
push
xor
les
cs
pop
out
sub
jl
push
push
xchg
das
mov
add
cmc
inc
dec
or
cmp
das
cmp
or
push
mov
pop
mov
in
js
and
incl
leave
cltd
push
fwait
rolb
mov
push
sub
mov
js
cmp
call
jmp
jecxz
stos
and
inc
fnstsw
and
inc
add
push
push
or
mov
fcmovb
push
sbb
mov
adc
xor
pop
call
hlt
les
ret
test
pop
aam
cmc
rclb
and
in
movhlps
dec
int3
push
or
lahf
jno
insl
mov
imul
sahf
cmp
cli
add
outsl
js
jns
jmp
push
jo
xchg
loopne
sub
iret
cmpsb
pop
xchg
mov
pushf
punpcklqdq
cli
outsb
inc
mov
aaa
or
cmp
push
adcb
xor
adc
inc
jle
add
push
sub
popl
mov
dec
shlb
movsb
sbb
test
push
sbb
mov
or
negl
pop
ss
push
addr16
xchg
xchg
ret
aad
test
sub
jns
mov
jns
jp
shrl
dec
sar
xor
and
add
lods
je
call
push
sub
test
and
movb
or
test
mov
inc
imul
cli
aaa
xchg
sub
pop
jo
and
xor
aas
push
and
cmp
pop
inc
scas
jb
icebp
out
jbe
xlat
ficoml
lcall
daa
mov
add
ret
add
das
xchg
push
rclb
hlt
test
xchg
mov
mov
ss
fcomps
inc
repnz
and
ss
into
jnp
and
xor
mov
pushf
xchg
movb
cmp
and
ljmp
or
insl
pop
ficomps
jb
and
shlb
sar
mov
pushf
lcall
into
mov
popf
jb
sbb
inc
push
fsubl
mov
inc
jg
mov
mov
push
cmp
cmp
and
loopne
dec
decl
push
lret
mov
mov
in
ds
jmp
sar
flds
jg
negb
cmpsb
dec
inc
push
movsl
cltd
iret
mov
and
insl
add
inc
mov
clc
out
push
xchg
lahf
hlt
or
scas
mov
cld
inc
inc
or
pop
inc
fchs
dec
mov
es
hlt
divb
and
sbb
fstps
xlat
jb
sbb
shr
pop
push
jmp
fucom
jbe
mov
inc
and
shll
incl
cli
pop
pop
xchg
pop
lock
cli
or
jmp
push
or
jg
fldt
lcall
addl
xchg
aaa
push
rcrl
push
mov
cld
mov
mov
enter
pop
mov
test
mov
mov
lock
sbb
les
fsubs
rorb
jl
fistl
mov
fimuls
outsb
mov
and
lods
dec
mov
popa
nop
iret
test
add
inc
push
test
insl
stos
imul
pop
and
cltd
xor
mov
mov
add
pop
push
jo
in
add
gs
mov
fldcw
ret
sbb
shll
xchg
and
cmpsb
scas
sbb
movsb
dec
jne
cmp
das
das
std
and
mov
fwait
sub
fstps
inc
mov
ret
xor
ss
into
js
and
or
jle
pop
loopne
popf
push
pop
roll
mov
cltd
aam
inc
mov
push
pop
adc
xchg
ljmp
sub
cli
pop
mov
test
add
mov
mov
push
sbbl
pop
or
adc
das
pop
mov
and
inc
xchg
xor
fsts
mov
sbb
mov
pop
sub
cmp
push
adc
bound
and
test
and
dec
xor
xchg
jae
push
push
mov
mov
cmpsb
notb
loope
jnp
add
data16
outsl
mov
xor
sbb
stos
jmp
fisttpl
iret
es
adc
decl
loop
mov
adc
mov
push
mov
xor
and
or
adc
inc
test
push
imul
std
xchg
lods
cs
lret
sub
or
sbb
mov
lret
xchg
push
jg
jno
fwait
mov
cmp
mov
inc
sub
clc
cwtl
aaa
test
push
lcall
mulb
das
pop
clc
push
mov
leave
pop
dec
pop
or
lcall
lds
push
sub
arpl
out
ja
sub
jge
sub
lods
jb
inc
int3
xor
xchg
add
addb
jno
aad
fnstsw
loopne
push
adc
push
add
loop
and
das
push
ljmp
push
lea
push
xor
fucomi
add
sub
dec
loope
xor
jl
call
inc
out
je
decl
std
and
mov
into
movsb
mov
jbe
cmp
xchg
push
insb
icebp
scas
or
loop
loope
scas
rcll
movsl
lret
jg
cmc
imulb
aam
xchg
jg
je
push
and
mov
add
mov
movsl
mov
lret
aad
push
and
add
xchg
es
pop
cmp
fsubrs
fisubrl
cmpsb
negb
push
mov
sbb
lods
cli
add
xchg
fldcw
aam
jb
xor
cmpxchg
cmc
xor
jmp
sub
dec
push
leave
dec
shlb
test
punpckhwd
test
cmp
xchg
mov
dec
cld
iret
and
test
cmp
xor
push
fnstsw
and
xorl
push
add
mov
inc
and
xchg
xchg
ret
fistl
lret
inc
mov
stc
cmp
ds
mov
fstpl
flds
cmp
movsb
xor
mov
push
sub
arpl
jg
mov
xchg
pusha
add
adc
push
pop
test
xchg
mov
add
in
jb
inc
jnp
loope
dec
rolb
cmp
adc
outsl
in
jg
jnp
in
adc
xchg
xor
cmc
nop
dec
and
clc
cmp
adc
pop
push
repnz
xchg
mov
ss
clc
outsl
loopne
dec
enter
data16
outsl
in
mov
cmp
out
mov
mov
out
icebp
negb
adc
mov
scas
pop
xor
mov
clc
jg
adc
std
test
inc
aas
mov
loopne
test
mov
fisubrl
ret
je
mov
lods
xchg
inc
push
scas
call
cmpsb
adc
in
mov
fisttpl
and
stos
push
aam
adc
mov
das
sti
add
daa
push
cld
mov
ja
outsl
cmp
pop
bound
and
cmp
push
sar
add
jmp
outsb
mov
popf
jle
and
fwait
arpl
imul
adc
gs
push
xor
rol
sbb
cmpl
lods
popf
mov
ss
push
clc
fdiv
xor
bound
pop
xor
jecxz
jl
les
mov
leave
pop
mov
pop
push
mov
jl
and
insl
es
sub
loopne
lods
ljmp
ss
xlat
call
mov
dec
xchg
push
dec
fdivrs
or
loop
inc
movsb
mov
push
adcb
add
pop
std
dec
iret
mov
jbe
movsl
add
movsl
call
das
mov
mov
adc
daa
inc
sar
cvtdq2ps
pop
mov
das
mov
movsl
or
call
mov
and
jne
call
adc
cld
les
cmp
dec
lods
dec
cmp
insl
stc
inc
imul
movsb
test
jp
bts
push
jge
fbld
dec
push
insb
adc
add
add
test
loope
pop
mov
jo
cli
xchg
leave
add
popa
sbb
fdivs
loopne
sbb
jne
pop
faddl
cmp
mov
dec
sbb
hlt
in
cmp
mov
sbb
or
loop
dec
or
test
sbb
popf
loope
mov
and
push
xchg
mov
std
mov
test
mov
or
movsl
pushf
mov
jne
stos
movsl
pop
or
pop
push
sar
aaa
push
xorb
hlt
call
enter
mov
rorb
sub
jnp
adc
test
cmp
cmp
or
pop
pop
lret
lea
cld
xchg
jb
mov
push
lea
cmpsl
mov
lock
mov
jbe
clc
sbb
adc
add
and
outsl
fistpll
int3
xchg
xchg
lods
and
dec
mov
inc
pop
pop
xchg
in
and
pop
mov
fsubs
xorb
insl
dec
cld
fildll
sub
and
in
dec
into
sbbl
cmp
ret
imul
test
shll
je
adc
mov
xor
in
push
mov
lret
fisubl
incl
push
add
mov
pop
test
popl
sbb
inc
mov
decl
jp
pop
les
jp
jbe
pop
cmp
mov
lahf
push
aaa
push
sbb
xchg
popf
leave
push
mov
dec
adc
mov
pop
sub
push
push
gs
fxam
movsl
adc
out
clc
bound
pop
push
xchg
ret
shr
and
notl
cmpsl
adc
pop
in
or
or
sbb
sub
out
clc
or
mov
mov
push
and
jae
mov
aaa
add
cwtl
mov
xor
jmp
cmp
push
jg
xlat
mov
popa
pop
sub
jno
roll
jg
gs
loop
cmp
inc
xor
in
fcmovnb
aaa
dec
and
jecxz
push
push
je
cmpsb
das
inc
hlt
ret
xor
inc
sbb
fidivs
int3
les
xchg
test
jp
jp
incb
sub
shlb
jae
mov
or
sub
stc
add
mov
outsl
push
pop
push
push
add
nop
pop
and
mov
add
negl
inc
jne
push
mov
pop
inc
cmp
add
mov
xlat
inc
shrl
or
push
jg
cs
ret
in
popa
pop
lcall
loop
scas
outsl
sub
sarb
aad
das
std
pop
mov
sbb
xor
add
jmp
adc
out
jb
mov
xorb
lods
mov
cld
sarb
leave
mov
add
add
aaa
mov
fwait
mov
aam
jle
jno
test
add
call
call
pop
cmp
fnstcw
inc
cltd
mov
loopne
add
pusha
and
pop
int
fwait
jmp
rolb
jle
jb
repnz
sti
pop
loop
mov
adc
icebp
push
push
ss
jl
je
bound
inc
das
jne
jecxz
test
cs
loop
call
jmp
decl
inc
push
mov
inc
scas
adc
shr
jnp
sbb
int3
jbe
push
cli
ret
cmp
sahf
xor
out
mov
bound
ja
jp
mov
clc
fists
idivl
inc
and
movsl
mov
loopne
mov
test
pop
movsl
incl
addb
clc
sahf
xchg
fistps
cld
test
enter
popa
push
pop
adc
push
xchg
sub
fistl
or
loop
adc
lock
jo
sbb
or
push
pop
dec
or
push
test
sub
jae
pop
aaa
inc
push
fs
aad
dec
jg
mov
imull
rorb
and
mov
paddsw
or
call
das
outsl
ja
sbb
repnz
cmp
scas
push
in
in
or
fstp
sub
push
xor
jae
mov
pushf
test
mov
cmc
scas
add
push
mov
sub
xor
andb
cvtdq2ps
mov
aam
sbb
fcomi
pop
cltd
outsl
sub
fildll
mov
jp
jg
xlat
test
cmp
lcall
pop
ffree
cmp
or
and
pusha
adc
movsl
xchg
pop
sub
fisttpl
lock
xchg
les
adc
movsb
add
in
aaa
xchg
sbb
in
sbb
pop
aad
sub
popf
xchg
xor
sub
ret
pushf
add
sbb
lret
mov
test
lret
mov
mov
movsb
cmpsl
jns
mov
hlt
xor
or
decl
sbb
push
lcall
les
scas
or
mov
jg
mov
call
jmp
sub
pop
xor
push
dec
push
cwtl
pop
out
jne
pop
scas
andb
daa
scas
in
mov
push
and
mov
push
ror
cmpl
mov
fimull
out
xorl
sbbb
mov
and
sub
sbb
push
scas
cmp
jl
and
in
jo
mov
jae
ret
push
push
pusha
mov
aam
mov
mov
mov
das
pop
inc
and
sbb
sub
sbb
jecxz
outsl
roll
add
and
xorb
pop
mov
cltd
cmpsb
enter
pushl
add
rclb
sub
rorb
inc
in
sbb
cld
idivb
ljmp
mov
inc
incb
push
popl
jno
mov
mov
jecxz
arpl
dec
jmp
xor
nop
xchg
dec
jnp
inc
std
loope
imul
dec
ss
out
xchg
lods
jecxz
fistpl
sbb
xor
in
lret
ja
push
nop
jnp
icebp
jb
repz
jge
add
loop
popa
dec
adc
jecxz
mov
decl
insb
mov
pop
lea
sbb
test
test
mov
push
jns
sbb
sti
cltd
lret
out
mov
inc
cmp
outsl
push
pop
fiaddl
mov
push
rolb
and
or
adc
ffreep
movsl
shrb
mov
adc
adc
orb
or
sbb
push
push
cmp
and
or
std
jge
pop
jecxz
sti
insl
jno
cmp
lock
mov
add
xchg
hlt
out
inc
mov
and
sbb
mov
push
aam
sbb
inc
decl
ficomps
dec
lods
std
mov
sbbb
call
xchg
fidivs
scas
or
mulb
push
fistl
bound
iret
adc
insl
dec
cmp
loope
jg
dec
adc
icebp
call
pop
mov
bnd
mov
mov
and
inc
insl
imul
push
out
cld
xchg
enter
xchg
adc
outsl
ljmp
xchg
fdivs
add
push
cmp
loop
stos
loopne
test
or
dec
pop
jnp
sbb
push
je
add
push
fwait
cli
xor
mov
push
fmuls
xchg
pop
cmp
sbb
and
cmp
add
cs
arpl
das
fs
mov
inc
push
pop
clc
das
loope
sbb
xchg
daa
push
lea
test
aas
add
pop
leave
push
push
mov
xchg
adc
test
push
sti
xorl
aad
test
push
aad
rcl
mov
jbe
nop
cmp
inc
enter
aas
pop
mov
lods
mov
sub
in
out
xor
lock
mov
cmp
add
push
sbb
es
leave
shl
mov
jnp
push
loope
push
cld
pop
dec
xabort
aaa
push
pop
mov
and
int
adc
cld
dec
mov
stos
xchg
adcb
inc
add
push
cmp
jns
mov
int
ds
or
fbstp
push
inc
add
rcrl
pop
sub
or
mov
addb
add
adc
mov
loopne
xchg
fs
cmp
dec
je
test
jno
inc
cli
push
mov
sbbb
or
inc
jo
adc
inc
cmp
adc
xlat
cmpsl
jg
cltd
or
xlat
and
and
ret
insb
test
mov
in
or
mov
scas
mov
xor
xchg
add
lds
pop
cwtl
test
sub
mov
sub
cmc
add
jnp
add
inc
in
fbld
rolb
inc
icebp
icebp
aas
dec
pop
xlat
push
jne
jg
inc
pop
jmp
outsl
push
hlt
cmp
cwtl
xchg
loope
int
sbb
out
mov
pop
outsb
dec
inc
push
adc
xchg
xor
mov
jae
xchg
add
sti
mov
mov
sbb
jge
shll
add
cmp
outsb
pop
mov
pop
hlt
shll
jmp
pushl
rcrb
popa
iret
push
mov
add
pop
dec
xchg
mov
sub
std
xchg
cwtl
inc
addb
ja
fcomps
pusha
shl
jmp
fcoms
xor
dec
or
push
push
stos
inc
xchg
in
cmp
loop
lea
movsl
mov
inc
adc
insl
push
push
jne
aam
pusha
imul
clc
mov
add
in
adc
adc
in
aaa
icebp
xor
mov
sti
cmp
int
cmpl
xchg
test
mov
in
adc
scas
ja
sti
fistps
fisubs
out
shr
xchg
pop
mov
sarl
or
aaa
cli
jg
pop
cmp
xor
jno
shlb
cli
bound
pop
pop
insb
pusha
in
cld
dec
int
lahf
push
lock
xchg
les
dec
dec
add
stos
adc
push
xor
sbb
hlt
inc
nop
push
sbb
pop
jg
mov
jns
aad
outsl
or
sbb
in
mulb
je
orb
cmp
rcll
or
and
fwait
lds
fcmovnu
in
dec
dec
outsb
cltd
or
aas
mov
sbb
inc
sbb
clc
jg
jns
insb
movsb
sbb
imul
fdivs
out
mov
shll
outsl
jecxz
cmp
mov
cmpsb
test
in
dec
pop
xchg
dec
cmpl
xor
mov
sbb
push
test
add
stos
sub
mov
fiadds
pop
mov
mov
pop
mov
xrelease
movsl
fdivs
or
xlat
dec
sub
and
jns
fildl
in
push
inc
bound
clc
fistpl
fsubrp
dec
incb
push
dec
fsubrl
cli
dec
mov
sbb
pushl
stc
inc
pop
leave
nop
mov
std
xchg
jns
sbbb
cmpsl
add
out
mov
aaa
fadds
mov
cld
fildl
sbb
add
in
lahf
sbb
inc
outsl
divb
mov
dec
cltd
add
mov
mov
in
adc
movsb
sub
in
loopne
fdivs
sub
call
rorb
cli
xchg
js
mov
push
and
adc
adc
mov
test
adc
out
fisttpl
mov
je
loop
cmp
mov
sar
mov
in
popf
and
mov
comiss
aam
sub
jp
mov
mov
lock
popl
notb
out
or
cwtl
or
jnp
and
popa
ror
andl
ljmp
std
outsl
pop
ss
adcb
pop
add
and
aaa
inc
or
movsl
movsl
mov
pusha
mov
xchg
in
mov
pushf
add
add
es
inc
bound
sbb
push
cmc
fwait
clc
imulb
fucomp
scas
or
sub
pop
int3
pop
loopne
test
adc
xor
ret
mov
xchg
mov
jp
es
jns
push
repz
and
das
push
and
adc
fiaddl
push
test
push
sbb
push
and
inc
and
jecxz
jbe
lahf
or
push
ds
std
dec
add
jle
dec
daa
add
and
mov
test
adc
and
test
clc
nop
push
pop
mov
xlat
jmp
jmp
rclb
aas
in
push
inc
iret
add
mov
fisttpl
fwait
cmp
lcall
and
aam
rorb
mov
inc
mov
and
fs
adc
jo
push
mov
mov
xor
add
xchg
orl
mov
and
dec
popa
fdivrl
pop
push
jl
ds
mov
fnstcw
xor
cmp
pushf
pushl
pop
mov
xor
or
xchg
addr16
adc
mov
andb
cld
push
lret
push
es
adc
mov
xor
movsl
je
xor
aaa
pop
xor
dec
lret
not
imul
sub
pop
arpl
in
fildl
mov
push
pop
mov
mov
jo
shlb
bound
push
int3
outsl
xchg
push
push
divb
add
dec
testb
cmpsb
push
pop
add
mov
gs
and
loope
xchg
addr16
mov
push
lods
in
mov
movsb
out
mov
jnp
sti
and
inc
iret
add
cmp
push
sbb
or
mov
mov
leave
movsl
js
push
inc
push
pop
shl
out
ljmp
adc
push
push
and
adcb
mov
pop
rorl
or
pop
mov
jl
push
mov
nop
fstps
or
pop
adcb
lods
out
mov
iret
inc
mov
or
insb
sub
cmp
ror
push
mov
xor
testl
sbb
cmpl
jbe
xor
lahf
in
add
pop
outsl
sbb
adc
jmp
cwtl
loop
jnp
cmp
mov
xor
mov
push
sbb
leave
and
adc
pop
add
pop
sub
jae
lds
sarl
xchg
cmpsb
repz
dec
mov
and
adc
mov
fimuls
popa
fchs
pushf
xor
inc
shlb
leave
jo
pop
in
push
add
cmpsl
jle
push
cltd
mov
out
jbe
sbb
jge
es
setle
pop
fadds
xorl
std
dec
mov
and
sub
push
push
imul
sub
dec
push
jl
sbb
sbb
xchg
mov
das
insb
inc
movsl
push
pop
adc
add
subl
nop
adc
sti
xchg
cmpps
leave
jp
push
inc
aaa
mov
add
jne
fwait
stc
xchg
adc
imul
arpl
sbb
mov
inc
mov
xor
inc
dec
lret
out
subl
cmpb
or
dec
rcrl
push
inc
push
mov
jle
sub
jno
out
and
jmp
jne
shl
loop
xor
rcl
mov
jle
in
and
lea
or
int3
and
sbb
and
sti
idivl
loop
mov
push
push
lcall
test
out
sbb
shlb
jo
sub
mov
fidivrs
xchg
xchg
mov
xacquire
ss
push
mov
xchg
cmc
or
movsl
lods
in
shlb
lar
sbb
xchg
loope
popa
das
in
xchg
scas
push
mov
out
lret
xchg
cmc
jg
test
outsb
loope
int
cltd
imul
xor
push
inc
repnz
push
lret
xor
jp
ljmp
stc
aam
outsb
xor
ds
cmp
or
loopne
outsb
xor
inc
pop
sbb
or
incl
test
and
pop
push
hlt
fldt
fistps
scas
mov
mov
add
xchg
or
push
aad
ljmp
out
mov
add
mov
out
das
je
jmp
and
pop
xchg
mov
repnz
in
mov
imul
xchg
mov
cmp
decl
js
rol
andps
popa
fildll
sbb
outsb
fbstp
gs
fcoms
cmc
mov
sub
test
and
or
jge
es
and
add
adc
xor
in
sarb
jae
push
push
sbb
dec
xchg
pushf
enter
pushl
push
fwait
inc
jns
fwait
jne
mov
ret
xor
call
or
into
adc
adc
inc
andb
mov
dec
aad
and
or
js
insb
stos
pop
cli
lods
stos
negl
aam
sbb
add
pop
addb
mov
mov
mulb
bound
ds
pop
dec
decb
ds
lea
in
imul
sbb
push
mov
inc
push
jno
jg
loop
push
fidivs
jo
ret
fldt
push
es
movsb
rcrb
mov
jecxz
addr16
jmp
cmp
loope
outsb
or
xchg
dec
out
mov
jns
xlat
and
ret
test
cmpsb
std
push
or
shll
js
fs
popf
pop
icebp
cmp
push
bsf
test
lods
cmp
cmp
or
dec
xchg
test
adc
cmp
cmp
mov
andl
bound
mov
fldenv
incl
es
fistpll
cmp
loopne
out
stos
ss
enter
sarb
jg
jmp
push
daa
xchg
stc
flds
and
pop
rcl
stos
adc
jle
imul
cmpsb
xchg
stos
xchg
jl
lea
ja
addl
mov
sub
rolb
cmc
test
subl
imul
mov
je
or
or
lea
mov
push
pop
add
ds
rorl
popf
mov
xor
or
in
sub
loopne
or
bound
popa
xor
mov
jae
xchg
and
std
or
mov
push
adc
lahf
jnp
ss
pop
push
mov
outsb
jo
subl
push
loope
das
inc
mov
jae
pop
and
jmp
or
xor
jnp
xchg
dec
add
inc
es
adc
mov
test
mov
mov
mov
stos
xor
or
mov
mov
xlat
scas
lcall
shrb
loop
add
decb
jge
je
subl
jbe
aam
adc
pop
nop
call
push
adc
aas
sub
cs
mov
lds
dec
insl
push
inc
cmp
jnp
push
imul
cmpsl
call
cmp
cmp
mov
mov
sub
gs
in
stos
repz
iret
push
js
sub
or
mov
out
stos
or
jmp
aaa
call
mov
mov
mov
add
or
push
mov
add
loop
add
sub
dec
mov
dec
rcrl
ret
add
add
loopne
mov
or
jl
sbb
mov
aam
sub
jmp
fsts
dec
js
and
or
outsb
aaa
xlat
iret
mov
mov
loop
mov
rorl
jne
out
test
ret
call
push
pop
mov
mov
dec
mov
xor
adc
sub
add
cmc
es
pop
arpl
ja
cli
cli
aas
cld
orb
push
rclb
and
aaa
loopne
pusha
and
out
jnp
fidivrl
xor
or
lods
or
sbb
mov
sbb
pop
sti
pop
jle
idivb
popf
xor
scas
movsb
mov
mov
lret
addr16
rorb
sub
sbb
push
and
pop
push
xchg
sub
mov
jbe
stc
aaa
pop
dec
es
cmp
vpavgw
aas
jp
jne
adc
pop
sbb
jne
sub
inc
icebp
pop
mov
adc
add
fwait
call
test
dec
inc
mov
xchg
lock
and
mov
dec
data16
loop
xor
dec
pop
jp
pop
je
sub
lea
sbb
inc
fwait
iret
xchg
dec
push
das
pop
dec
mov
cs
ljmp
int3
xchg
mov
and
ja
call
inc
lahf
test
insb
mov
mov
adc
push
test
xor
fbstp
mov
pop
xor
dec
test
push
shll
xchg
nop
cld
sub
cli
mov
mov
daa
enter
xlat
sahf
mov
hlt
jg
idivb
cli
sub
adc
jp
dec
loop
or
addb
mov
shr
mov
movsl
lds
dec
pop
jl
mov
pushf
xor
addr16
repz
cmp
fdivrl
xchg
sub
mov
cmp
clc
adc
leave
inc
sbb
cmp
push
js
jg
fisubrl
arpl
lahf
test
das
js
imulb
shll
cwtl
lods
jo
jo
adc
movsl
mov
push
mov
jnp
je
jmp
mov
adc
push
push
jnp
aaa
inc
ret
cmp
cwtl
repnz
nop
lret
xchg
jge
push
xor
fsts
inc
push
push
ljmp
out
repz
incb
mov
jp
adc
jle
in
inc
std
orb
inc
mov
in
fildl
sbb
jp
push
sub
adc
sti
fisttpl
std
aaa
jo
hlt
arpl
inc
movsl
aas
fcoml
imull
cli
inc
add
imul
ret
push
pop
sar
inc
mov
pop
fldt
daa
test
and
jno
cmpsl
addr16
stos
insl
std
cltd
lcall
inc
cmc
fucomp
decl
xor
cmp
push
imulb
cs
test
scas
int
inc
adcb
xor
cli
jbe
jp
sub
cmc
add
jmp
jno
lods
adc
test
hlt
addr16
cli
add
jge
pop
push
aam
stos
mov
movsl
or
cli
mov
or
push
mov
in
sub
popa
jno
in
or
iret
inc
stc
hlt
dec
mov
mov
ja
inc
push
and
movsb
pop
testb
xor
insl
gs
push
lock
xchg
cltd
cmpsb
pop
in
lcall
arpl
mov
repz
xchg
fldt
dec
pop
push
cmpsb
out
sahf
adc
dec
dec
cltd
push
adc
das
jo
jecxz
push
ret
rolb
rcr
mov
adc
mov
push
fwait
rolb
lret
and
mov
pop
arpl
mov
loope
fistpl
lcall
lods
jle
adc
shrl
xchg
add
test
pop
pop
aad
jecxz
inc
or
dec
and
xchg
mov
jno
sub
sub
push
or
dec
aam
in
enter
add
ss
orl
mov
push
roll
sub
test
mov
lods
les
out
xchg
xor
or
sbb
cwtl
bound
loop
pop
clc
lea
ja
jl
pop
decb
loope
adc
data16
mov
lods
inc
mov
xor
ret
dec
pop
imul
pop
sub
push
cmpsb
add
push
mov
mov
clc
subl
cmp
pop
dec
cwtl
imul
imul
or
cmpsb
inc
pop
outsb
and
loopne
mov
and
icebp
pop
out
inc
fisttps
shrb
xor
lea
js
popa
dec
ljmp
stos
jge
add
add
and
dec
inc
inc
and
mov
dec
and
push
add
adc
inc
add
or
andb
and
or
or
mov
sbb
adc
adc
or
adc
adc
addb
jg
inc
and
add
or
addb
add
sbb
xor
and
or
xor
adc
mov
rolb
mov
and
dec
inc
add
stos
outsl
das
adc
inc
adc
adc
adc
push
insl
and
inc
dec
add
push
addb
jp,pt
mov
ds
adc
adc
add
lods
std
call
inc
outsl
add
rclb
or
test
in
or
or
and
sbbb
mov
icebp
fwait
nop
add
imul
or
mov
and
addb
adc
popf
mov
add
icebp
xor
loopne
add
test
jnp
outsb
xchg
or
adc
push
add
dec
add
add
adc
adc
nop
orb
mov
add
icebp
popa
jge
in
pop
hlt
test
or
and
push
mov
sbb
adc
fstpt
inc
inc
inc
adc
and
or
dec
add
or
ret
pop
adc
push
mov
dec
in
neg
mov
mull
inc
nop
adc
test
and
rclb
or
add
mov
or
fcmovu
and
inc
or
adc
sbb
outsl
outsl
out
inc
sbb
fcmovu
or
and
inc
icebp
and
shlb
add
inc
xchg
mov
and
dec
nop
sbb
fbstp
add
xor
push
mov
cmp
orb
mov
add
adc
sar
outsl
adc
dec
cmpsb
adc
icebp
and
icebp
add
sub
test
or
in
ret
test
add
add
pop
sub
cmpsl
and
sbb
in
adc
add
add
lods
jge
adc
rcll
cmpb
or
adcb
inc
adc
fidivrs
lock
orb
icebp
int3
add
mov
add
adc
icebp
add
fsubrs
insb
insb
adc
and
scas
pop
sub
test
bound
lret
paddsw
inc
push
adc
xchg
and
or
andb
xor
push
mov
test
jecxz
inc
dec
dec
cltd
mov
nop
jae
mov
fimull
nop
lock
pop
fldt
and
adc
push
lea
or
dec
pop
pop
and
dec
insl
test
or
xor
popf
and
xchg
push
adc
mov
jp
push
dec
and
mov
stos
insl
and
test
ss
stc
or
adc
imul
mov
adc
add
mov
adc
add
or
add
mov
insl
and
adc
and
and
insl
fistpl
push
dec
push
subb
inc
and
mov
imul
add
adc
mov
sub
nop
xchg
xchg
fistpl
and
test
and
rcll
into
and
dec
or
jns
outsb
fldt
addb
add
adcb
jecxz
imul
add
inc
push
das
xchg
and
add
cmc
pop
mov
mov
mov
out
nop
int3
xchg
mov
mov
les
jmp
repnz
jmp
inc
into
mov
imul
mov
rcrb
sbb
std
add
lods
mov
or
or
add
loope
pop
fistpl
add
test
push
push
mov
out
jmp
dec
scas
jbe
movsb
adc
int3
orb
mov
and
pop
mov
fbld
mulb
adc
dec
inc
and
sbb
pop
shl
fadds
mov
and
mov
mov
mov
sub
pushw
incl
xor
ljmp
mov
jne
mov
or
sbb
mov
nop
inc
inc
stc
adcl
lods
adc
jge,pt
jmp
pop
inc
test
dec
mov
lods
rcrb
jb
or
dec
dec
push
and
adc
and
inc
jo
xor
inc
jae
inc
jae
ds
sub
mov
jmp
inc
push
inc
jno
add
mov
push
add
mov
adc
out
xchg
lods
rorb
out
paddsw
inc
or
pop
aas
push
push
addb
lods
loopne
lods
xor
sub
pop
mov
pop
imul
mov
cltd
lods
xor
mov
mov
or
int
xor
xorb
and
mov
movl
inc
or
mov
mov
or
mov
mov
imul
inc
into
jbe
lods
popa
lret
or
fnop
pop
fiaddl
inc
jnp
inc
add
xor
in
rcrl
pop
ja
mov
push
sub
push
daa
fwait
pop
imul
or
xchg
push
ret
js
scas
jae
jl
pop
dec
adc
mov
out
cmp
sbb
push
pop
mov
call
rol
mov
inc
ja
jo
fistpl
inc
pop
andb
cmp
cmp
jo
xchg
jae
ja
js
fldt
cwtl
decb
add
push
inc
imul
pop
lcall
pop
test
je
out
hlt
fildll
and
daa
xor
ficompl
sahf
test
inc
jae
into
mull
lcall
xchg
sbb
push
aam
cli
sahf
test
mov
xchg
ss
imul
or
inc
andl
lods
mov
mov
xor
add
lcall
cwtl
cs
dec
stos
loopne
fwait
fs
xchg
insl
mov
mull
lods
mov
push
aam
or
lods
mov
jp
mov
test
mov
add
pop
jae
xor
stos
mov
imul
sbb
fmulp
bound
ds
aas
cmp
arpl
ret
sub
in
imul
cmpsb
addr16
mov
adc
fiaddl
jae
inc
or
xchg
sub
pop
sub
xchg
dec
and
shr
nop
test
cmp
or
inc
inc
and
pop
imul
dec
pop
dec
cs
or
lcall
add
lcall
stc
adc
int
jb
cmpsb
cmpsl
aad
fwait
mov
or
scas
mov
mov
or
push
int3
jecxz
push
sbb
push
enter
mov
add
mov
dec
cmp
fidivrl
add
mov
leave
bswap
pop
mov
pop
sub
int
movsb
cmpb
data16
leave
push
or
inc
xor
push
add
jo
lcall
mov
adc
mov
xor
and
sub
stos
cmp
inc
inc
gs
mov
scas
add
mov
pop
mov
lret
movb
xchg
cmp
test
push
int
mov
dec
mov
push
pop
or
jge
jbe
mov
rorb
add
insl
scas
sbb
pop
jg
fimull
push
pop
jae
mov
push
fnstcw
pop
jae
mov
pop
jnp
int
push
sub
sbb
or
push
out
pop
push
dec
sti
das
xor
jge
sbb
and
adc
inc
jnp
xor
and
es
imul
adc
xchg
xlat
sbb
cmp
cs
sbb
test
inc
imul
fsubrl
cmpsl
inc
jo
xchg
repz
and
roll
fisttpl
scas
cmp
pop
xor
mov
jae
add
movsl
jge
cmpsb
test
cmp
into
cmp
adc
or
outsb
adc
popf
cli
es
cmp
or
mull
aas
mov
inc
nop
test
jne
sub
adc
or
add
push
cmp
dec
into
sarl
fs
mov
call
fiaddl
mov
jle
mov
inc
push
jne
or
push
cwtl
pop
xor
push
inc
add
mov
mov
ficoms
cs
jo
push
pop
mov
and
sbb
pop
add
arpl
out
xchg
addb
fs
mov
stos
ficompl
jo
inc
in
lods
add
jo
push
mov
sub
jo
xor
xchg
aad
and
cmp
xor
mov
mov
xlat
insb
jns
fcom
mov
insl
push
inc
or
mov
mov
xor
mov
lods
xor
pop
sub
test
jmp
and
push
pop
loop
scas
data16
push
pop
fisttpl
or
and
mov
test
dec
inc
mov
int
cmp
inc
js
cmc
add
lcall
add
ret
fs
pop
into
add
stos
push
pop
inc
xchg
sub
push
sub
xchg
xchg
popa
test
sbb
fstpt
add
dec
cltd
jo
mov
jns
sbb
or
inc
add
or
cwtl
xor
xor
loop
pop
add
push
ljmp
stos
pop
je
or
push
adc
and
pop
mov
and
stos
mov
sbb
and
adc
sbb
adc
scas
cmp
sbb
mov
pop
daa
pop
pop
ret
and
push
fistpl
inc
push
test
outsb
mov
test
lds
aad
push
lods
in
cmc
mov
xor
aam
jo
test
sbbb
mov
fcmove
pop
es
in
xor
jae
push
inc
mov
outsb
imul
or
daa
test
aad
repz
jbe
pop
cmc
test
add
mov
mov
xor
jo
fcoml
dec
xor
sbb
jae
into
push
xlat
loopne
mov
inc
cmpsb
lcall
pop
imul
lret
xor
and
add
push
or
or
mov
mov
pop
xchg
lods
mov
ret
test
or
jne
adc
or
mov
push
or
pop
mov
ret
inc
add
push
xchg
sbb
scas
dec
mov
lods
rorb
cmpsb
inc
and
add
cmc
xorb
mov
int
subl
loope
inc
scas
pop
or
inc
gs
or
push
fldenv
mov
inc
lret
jmp
pusha
rolb
add
insl
jo
jb
push
je
imul
idiv
gs
outsl
fs
gs
popa
outsb
fs
imul
xchg
fdivs
push
push
jns
je
insl
push
imul
outsl
fistpll
sti
arpl
jns
inc
jne
movd
add
mov
push
push
insb
insb
fstpt
jb
outsb
xor
gs
gs
jo
jge
fisttpll
dec
dec
jb
jne
addr16
jle
outsb
jbe
in
int3
mov
push
lahf
jae
insl
insl
sti
adcb
fidivs
outsb
push
jo
imul
inc
imul
imul
xor
push
sub
push
adc
cmp
sbb
sub
divb
or
je
popf
data16
jne
dec
outsb
outsw
inc
mov
jnp
mov
sub
pop
icebp
ret
mov
cmp
inc
inc
or
out
xchg
test
jnp
int
add
inc
insb
addr16
inc
dec
push
outsl
add
pop
ret
les
inc
arpl
push
inc
por
addb
mov
add
or
add
mov
fldz
jne
adc
or
xor
add
jmp
mov
add
mov
or
xchg
outsb
add
adc
pop
push
add
mov
mov
cmp
pop
insb
xchg
jl
jmp
push
je
je,pn
js
pushw
sti
xorb
pop
js
and
fs
popa
or
jo
sti
sbb
mov
jb
cmp
daa
or
fnstenv
jnp
lods
add
outsb
int3
mov
arpl
jmp
daa
ss
inc
lcall
pop
or
cmpsb
imul
rcrb
jnp
les
std
push
sbb
pop
or
add
add
add
or
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
