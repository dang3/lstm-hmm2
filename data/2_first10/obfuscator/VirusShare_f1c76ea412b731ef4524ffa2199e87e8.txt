sbb
mov
add
cmpsl
push
mov
sbb
pop
pop
test
pop
dec
jl
sub
and
pusha
repz
jge
in
out
sti
sub
orb
or
dec
adc
adcb
cmc
lret
mov
std
fs
fs
imul
daa
rorl
dec
mov
and
mov
stos
xchg
xor
icebp
std
add
jg
xor
movsl
out
and
xchg
xor
mov
ret
sub
hlt
or
call
inc
sub
call
or
lods
ficoms
in
pop
clc
pop
fidivs
clc
jmp
loop
mov
jne
inc
sbb
in
cmp
sahf
inc
pop
cmpsl
mov
and
pop
rcl
mov
xchg
jno
mov
push
rcrl
jnp
inc
dec
rorb
jae
push
lock
xchg
fistpl
jo
sub
pop
jle
fdivrl
rcl
fs
and
loope
scas
jle
sub
movsl
cs
fildl
dec
negb
inc
sbb
jge
stos
cld
push
or
mov
sub
dec
in
xchg
inc
adc
inc
lds
xor
orb
stc
bound
adcl
jle
js
xorl
dec
leave
or
dec
out
lea
rcr
shll
jle
jg
or
not
lock
mov
enter
push
lret
fisubs
sub
inc
das
dec
popa
int
mov
hlt
xchg
out
shlb
jge
or
pop
mov
mov
mov
jno
sbb
push
pop
pusha
aaa
sub
popf
xor
gs
arpl
dec
mov
jnp
psrlq
jge
das
jo
scas
hlt
dec
cmp
sahf
add
movsb
stos
push
inc
mov
js
cmp
jecxz
xor
pushf
outsl
in
jo
fidivs
icebp
repnz
loope
jo
or
cmpb
fwait
cli
and
push
jne
xlat
jecxz
incb
add
movsl
push
fs
imul
or
add
cmp
jge
push
and
ret
in
aad
sbb
jbe
lret
xchg
inc
xchg
mov
into
mul
pusha
test
sti
cld
in
add
xchg
imul
jne
dec
jmp
lock
insl
and
shlb
jl
jp
pop
fwait
mov
jns
out
mov
push
fbstp
jns
adc
test
mov
inc
out
or
jo
les
shlb
in
loope
aad
ja
jmp
pop
adc
pushf
sub
xchg
push
stc
push
loop
ljmp
cmp
push
add
xor
sti
pop
aaa
call
aad
jmp
aaa
or
js
fcoml
cmpsb
mov
lahf
xor
dec
movl
es
jecxz
cmp
mov
mov
push
mov
data16
cmpsb
fidivrl
outsb
inc
lods
test
sahf
push
pop
xor
mov
scas
out
jl
outsb
xchg
cwtl
in
add
scas
xor
popf
mov
xchg
cltd
ljmp
cmp
jo
sub
add
cmc
rcl
xchg
fstpl
mov
into
xchg
pop
xchg
nop
in
idivl
mov
cmpl
ja
cli
sub
test
adc
mov
pop
sbb
je
stos
xchg
scas
lret
and
bound
or
lcall
mov
jbe
sbb
std
test
push
jne
out
and
mov
adc
lret
or
imul
movsl
sub
push
lahf
out
fstl
shrb
mov
rorb
mov
push
push
push
je
sub
pop
adc
fs
mov
fldenv
das
fnstenv
movb
mov
stos
test
js
jb
mov
daa
lret
push
pushf
cwtl
lds
shlb
test
or
adc
popa
test
iret
add
shll
pop
cli
popf
pusha
iret
pop
xor
mov
mov
cmp
cmpsl
inc
jecxz
sbb
pop
shll
lahf
out
jge
shr
xchg
ja
pop
or
and
dec
shl
mov
adc
mov
lcall
insb
scas
push
test
xor
dec
mov
lret
insl
inc
loope
adc
add
mov
xchg
xchg
and
iret
mov
test
xchg
and
ret
xchg
inc
enter
aam
and
sub
loopne
add
fimull
add
sub
ficompl
xchg
cmc
or
shlb
dec
mov
jmp
dec
movsl
icebp
adc
fs
lds
ds
mov
mov
lods
test
daa
pusha
idiv
loope
cmp
or
jl
mov
negb
push
cld
test
out
dec
test
fs
stos
movsl
push
imul
xchg
pop
adc
or
mov
stc
ret
inc
arpl
xorb
in
roll
std
or
loope
int
xor
fbstp
int3
outsb
in
scas
mov
sub
cmp
cwtl
decb
arpl
repz
inc
sbb
dec
and
dec
pop
mov
scas
sbb
add
mov
sub
push
xor
out
ja
mov
sbb
aam
mov
lret
cmp
add
adc
lret
jmp
mov
pop
pop
mov
adc
ds
sbb
cmp
out
mov
or
leave
test
aas
loop
pop
pop
js
xchg
and
xor
adc
sub
sti
ds
mov
imul
mov
aad
pusha
jp
inc
fwait
pop
xor
inc
nop
repz
adc
and
cmp
mov
das
xchg
push
cmp
sub
pop
cmp
sbb
and
mov
push
dec
cmpsl
mov
dec
lea
int
jbe
jp
mov
and
xchg
or
cmpsb
rcr
xchg
sarb
lea
loopne
cmp
cmp
pusha
fcoml
inc
jae
add
fisubrl
xchg
adc
dec
jg
out
data16
push
imul
out
dec
add
cmpsl
pop
ficoml
jecxz
addr16
or
lds
lea
inc
push
add
mov
adc
add
adc
stc
and
dec
ret
lods
cmp
adc
fisubl
xchg
or
adc
and
rcll
sub
mul
pop
icebp
push
sbb
mov
mov
int3
and
pop
mov
cmp
shll
push
lcall
mov
jl
pop
xchg
std
adc
mov
into
dec
in
jmp
into
mov
pop
cmp
imul
or
ds
out
scas
jmp
sbb
jo
xchg
sbb
cmp
dec
push
cs
cli
call
in
push
cpuid
dec
mov
pop
push
mov
inc
mov
push
ret
pop
pusha
inc
insl
mov
shll
pop
xor
mov
icebp
cmp
gs
xor
push
push
and
adc
push
int3
pop
pop
ficoml
outsb
inc
jmp
movsl
mov
xchg
xchg
ret
popa
or
std
adc
adc
iret
xor
fstps
dec
push
arpl
mov
cs
inc
mov
mov
and
push
icebp
adc
or
dec
mov
into
aaa
ljmp
adc
cmp
push
jge
negb
stos
pop
inc
xchg
sub
push
xchg
adc
sbb
sbb
cmp
fdecstp
aad
and
in
out
push
sbb
sbb
jo
cmp
int
jbe
ja
insl
sbb
xor
pop
lods
push
outsl
cmpsb
aaa
xorb
jno
vmovdqu32
mov
mov
mov
fsts
subb
cmc
roll
xchg
sbb
pop
push
push
fwait
jb
test
scas
lret
push
push
shll
fisubrs
rorb
sub
add
movsb
movsb
mov
sub
sub
mov
xor
ljmp
jno
sbb
test
andb
dec
test
inc
pop
ja
xchg
mov
sub
or
clc
enter
loop
mov
jnp
aad
cltd
jnp
outsb
jbe
and
push
test
jg
cmp
ret
leave
mov
js
aad
jmp
insb
jbe
dec
xchg
jbe
pop
sub
mov
fldenv
es
shlb
or
xor
cmpsl
jmp
dec
ljmp
sbb
cmp
sub
in
ret
icebp
in
repnz
or
sbb
cs
movl
fnstcw
push
xchg
movsl
or
add
jmp
mov
or
push
pusha
pop
jnp
sahf
test
adc
repz
cmp
aad
adc
fldt
lret
mov
jo
adc
ret
dec
and
mov
jge
sbb
sub
push
cmp
in
ljmp
mov
pop
pop
dec
mov
pop
mov
loop
mov
jb
sti
lea
jne
aad
shll
mov
fmul
in
cmpsl
rol
fsubrl
mov
push
xchg
pop
push
dec
jno
mov
adc
sub
and
pop
and
adc
xor
stc
inc
pop
cmp
imul
popa
xchg
inc
and
and
sbb
je
dec
jecxz
sbbb
dec
inc
xchg
pop
mov
cmp
adc
cwtl
sbb
dec
inc
jno
adc
mov
std
rorb
push
push
ret
nop
pop
adc
mov
mov
inc
dec
push
andb
dec
add
je
jge
aam
movsl
orb
fs
xchg
nop
not
mov
push
xor
push
xchg
lods
mov
push
sbb
mov
inc
add
mov
add
xor
xchg
pop
push
mov
aad
stc
push
fidivrs
inc
lock
es
push
stos
push
insb
sbb
mov
sti
xchg
inc
movsb
lea
icebp
adc
leave
sub
cmp
jp
insb
mov
stos
push
xor
inc
cli
pop
mov
xchg
aaa
popa
sbb
cmp
pop
push
fidivs
push
rcll
sbb
sub
movsb
xchg
aas
or
add
jge
das
sub
repz
xor
push
sbb
jno
push
es
sbb
imul
pop
mov
ss
pop
sub
inc
jp
in
insl
push
in
mov
dec
mov
pusha
and
pop
pop
cs
scas
or
mov
mov
clc
in
mov
mov
subl
mov
xor
and
dec
cmp
inc
sub
or
sub
insl
negl
cld
lods
fcompl
mov
outsb
fsubrp
bound
pop
out
jl
gs
lods
xor
jno
imulb
dec
out
pushf
dec
movsl
mov
cmp
sub
or
inc
push
rcl
add
ret
sub
rclb
sub
dec
jbe
int
cwtl
icebp
into
or
test
outsb
mov
jns
jle
das
test
mov
stos
test
and
mov
cmc
pop
clc
aad
aam
xchg
or
push
enter
popa
xchg
leave
daa
jno
frstor
fnsave
lcall
mov
and
iret
push
xor
and
dec
xchg
cwtl
and
repnz
in
fdiv
xchg
outsl
lahf
xor
add
push
stc
lods
je
repnz
repnz
mov
bnd
sbb
inc
jbe
fsubs
int
jl
sbb
and
jb
push
je
imul
call
jnp
ret
inc
mov
dec
lret
jecxz
xor
dec
cmp
xor
mov
and
aas
pop
out
int3
mov
in
leave
lret
jl
pop
sarl
dec
sbb
leave
ljmp
xor
dec
arpl
sbb
int3
jmp
popa
or
aad
les
jne
cmp
hlt
cli
inc
push
jp
loope
mov
repnz
and
xchg
jecxz
xor
cmp
pop
mov
and
clc
sbb
sub
mov
cmp
sub
sahf
ds
insl
pop
jecxz
pop
or
sbb
lods
mov
iret
ds
push
adc
divl
nop
mov
jecxz
lods
or
mov
or
addr16
jbe
sub
iret
lcall
stos
xchg
dec
or
notl
out
icebp
inc
mov
xchg
dec
dec
std
into
test
test
rorl
sub
daa
inc
es
leave
rcr
jno
pop
ss
mov
fwait
mov
fs
xchg
lock
ret
cmp
insb
data16
adc
jnp
jp
shl
mov
scas
cwtl
scas
ss
cwtl
gs
rcrl
add
inc
xchg
mov
addb
cmp
ja
xchg
push
pop
sbb
xor
add
push
js
sbb
sub
ja
fisubrl
out
nop
sub
imul
leave
insl
repnz
out
repz
lods
mov
sahf
xchg
in
repnz
and
rcll
outsl
pop
mov
fisubs
shrb
jb
and
andb
jle
ficoms
fidivrs
jge
push
xchg
ret
dec
movsb
cmp
add
mov
xchg
sbb
xchg
negb
push
mov
pop
test
xchg
dec
pushf
jle
fwait
fwait
lret
iret
ret
fs
cmpsb
pop
popa
test
fcmovnbe
pop
pop
test
aad
cmp
and
sbb
adc
mov
adc
insl
inc
subb
lret
pop
or
int3
mov
ds
adc
jno
fistl
pop
push
dec
mov
clc
jnp
cmp
adc
in
mov
mov
call
add
mov
jb
push
adc
push
xchg
ret
clc
jns
test
iret
rolb
inc
jmp
pop
sbb
inc
sub
cmp
mov
mov
push
sub
inc
cmpsb
aad
mov
xor
push
xchg
ret
hlt
xchg
push
es
scas
xchg
das
cwtl
repnz
mov
mov
in
dec
push
cmp
cltd
jnp
adc
cmp
in
es
dec
dec
shrb
shll
mov
sbb
inc
mov
lock
mov
ret
roll
mov
dec
dec
inc
jmp
inc
jnp
push
lock
in
sbb
and
nop
and
jo
xchg
bound
aad
js
rclb
gs
jbe
adc
int3
daa
stos
push
sbb
adc
push
add
loop
or
lods
leave
push
adc
les
jne
outsl
add
aad
cmpsb
inc
rclb
or
inc
arpl
ret
lahf
gs
fdivrl
pop
cmp
xchg
mov
outsl
jg
push
loop
leave
cmpsl
sbb
xor
aas
jno
and
xchg
popa
adc
mov
sub
mov
mov
ret
rol
pop
inc
jne
rclb
dec
orl
sub
adc
adc
ret
mov
test
add
loop
mov
lock
mov
sub
fisubl
mov
sbb
movsb
mov
jp
push
rcll
cmpsb
cmp
jmp
bound
iret
xor
je
pop
xor
loopne
test
and
add
mov
icebp
or
jge
jo
push
or
cli
pop
jp
mov
imul
and
repz
jns
stos
push
xchg
cmp
or
sbb
rcrl
rcrl
scas
ret
jae
adc
pop
add
test
cld
cmp
int3
or
imul
iret
add
rcr
sbb
enter
jge
cld
push
ja
jnp
lret
cmp
cmp
imul
xchg
mov
sub
pop
es
dec
in
push
mov
into
movsb
stos
sub
bnd
xor
xor
adc
jbe
inc
pop
filds
sbb
push
sub
cwtl
stc
cmp
sub
stos
pop
jno
sbb
clc
scas
jb
cmp
out
xchg
dec
xchg
mov
out
jne
pop
pop
popa
test
jle
arpl
aad
gs
pushf
leave
ret
bound
mov
sub
ss
repnz
sbb
add
mov
xlat
mov
adc
jae
sbb
pop
cmc
dec
or
dec
inc
imul
or
mov
xor
rorl
mov
inc
inc
inc
and
sbb
jp
ja
das
pushf
inc
push
push
cld
daa
push
jecxz
pop
or
dec
pusha
roll
imul
sub
addl
add
data16
xor
and
xor
nop
mov
movsl
lret
stos
nop
inc
testb
push
lret
mov
xor
les
jp
faddp
cmpsb
ljmp
xchg
js
inc
push
out
in
fsts
adc
mov
stc
aam
adc
int
ret
or
imul
or
nop
out
scas
push
pop
in
sahf
jne
lock
stos
out
movsl
inc
test
add
xor
ss
in
xchg
js
ret
jne
or
inc
sub
xor
push
cli
dec
pop
mov
mov
xor
cmp
and
dec
loop
negl
popa
or
xor
add
mov
insb
ljmp
fisubrs
jae
ret
ss
jg
bound
xchg
aaa
dec
pop
movsb
pop
inc
lcall
insl
add
dec
fnstcw
jo
movsb
jo
xchg
cli
bswap
and
sub
xor
add
stos
test
clc
mov
jg
adc
insb
mov
aam
or
mov
rol
cmp
add
jo
mov
cmp
test
repz
aad
cmp
pop
cltd
inc
cltd
inc
mov
or
sbb
inc
test
adc
sbb
dec
adc
mov
inc
xlat
scas
jecxz
and
dec
in
leave
lcall
sub
je
cmpsl
mov
mov
or
shll
xchg
push
xlat
jno
adcl
sahf
pop
repz
divb
in
adc
out
jl
pushf
iret
gs
ljmp
imul
leave
pop
hlt
ljmp
cmpl
xchg
leave
in
xchg
add
nop
sbb
add
into
enter
and
js
mov
push
cli
and
ja
arpl
adc
add
leave
xchg
push
jb
ret
ljmp
ret
mov
mov
lock
call
adc
fmull
jne
aad
push
jmp
jb
and
pusha
pop
sarb
dec
add
clc
pop
ja
cmp
aaa
adc
sarb
lcall
cmp
cmp
jl
jns
in
adc
xor
test
ds
add
icebp
insb
mov
js
dec
sub
dec
cmp
or
clc
xchg
mov
pop
and
test
or
dec
xchg
xor
shr
aaa
repz
mov
jbe
movl
dec
call
mov
adc
bound
add
cmp
lds
shlb
fsubrs
or
addb
bound
jns
mov
dec
sbb
pop
rolb
lods
fisubrl
jbe
push
fwait
inc
push
insl
cltd
popf
mov
xor
inc
pop
cmp
cli
adc
xchg
lahf
clc
outsb
dec
js
xor
or
std
mov
jns
push
push
jecxz
push
pop
sbb
sbb
and
aas
or
add
out
test
push
pop
cmpsb
or
cwtl
into
jo
ret
jo
adc
hlt
int3
inc
pop
pop
testl
xor
cmp
arpl
inc
cmpsb
mov
xorb
mov
loopne
cmp
xor
sbb
xor
jle
xor
addr16
mov
das
jl
fsubr
push
test
lock
adc
adcl
xlat
js
popa
mov
das
push
pop
fdivs
inc
aas
or
cmp
mov
sbb
pop
loop
jnp
movsl
lret
in
adc
add
in
shlb
jecxz
add
jbe
lock
xchg
fcmovu
das
std
dec
dec
push
addr16
mov
lret
cmp
xor
inc
scas
rcrl
test
addl
fwait
daa
mov
jo
jnp
fistpll
int
inc
dec
aaa
cmpsb
loop
arpl
inc
decl
stc
cld
jg
insb
mov
dec
sbb
or
pushf
out
test
jp
jmp
add
fwait
orb
mov
or
adc
rol
mov
lret
test
test
ret
push
in
xor
stos
mov
mov
into
cmp
fsubl
pop
or
and
and
jl
int3
jle
dec
jb
or
dec
repz
mov
xor
mov
mov
mov
sbb
fnsave
and
pop
mov
xchg
flds
mov
lods
fwait
loopne
movsb
adc
out
idivl
sti
add
inc
lret
pop
dec
fiaddl
bound
enter
cli
xchg
fsubp
ds
mov
inc
repnz
sub
dec
and
gs
retw
cmp
iret
jmp
in
pushf
mov
stos
rclb
xchg
and
jge
std
bound
stc
sub
jnp
enter
cs
mov
inc
stc
jo
jnp
rcrb
icebp
sbb
push
add
dec
push
mov
insb
testl
add
inc
pushf
jbe
addr16
fwait
xor
test
mov
js
fcoml
mov
lds
daa
xor
mov
adc
dec
pop
mov
fisubl
cmp
xor
into
xchg
mov
adcb
push
sbb
add
dec
mov
pop
xchg
and
jo,pt
mov
cli
rorl
mov
ss
add
push
mov
incb
pop
push
jne
loop
scas
pop
jb
ljmp
arpl
in
jle
or
test
hlt
test
mov
cmc
dec
outsl
shl
fisubl
sbb
repz
sub
sub
in
shr
ja
pop
testl
sbb
std
jle,pn
std
jbe
jnp
add
sbb
cmp
push
scas
stos
add
sub
xor
sarl
xor
mov
adc
cmp
mov
outsb
and
lea
ret
mov
cmp
clc
xor
sbb
sub
cs
insb
shll
outsb
inc
or
add
mov
out
fsubrl
cmpsl
aad
dec
ret
ljmp
out
lret
pop
das
aaa
cmp
add
mov
sti
je
shll
ja
popf
push
shlb
mov
mov
outsl
xchg
rcrb
cmp
pop
add
cmpsb
aad
popa
sub
mov
movsb
jne
fcoms
arpl
cmp
mov
xchg
pop
div
dec
cmp
cltd
mov
pop
mov
popf
xor
xchg
mov
lock
add
mov
add
gs
cmp
mov
gs
pop
mov
jae
mov
jbe
popf
adc
call
dec
xchg
pop
int
xorb
push
or
mov
mov
lahf
mov
mov
stos
outsl
mov
mov
shlb
xchg
sbb
xchg
dec
adc
xor
lds
repz
pop
iret
das
js
cmp
test
jmp
ljmp
cltd
inc
nop
sbb
sarb
dec
scas
adc
stc
push
inc
xor
dec
lcall
xchg
aas
repz
aad
outsb
xor
clc
in
ret
daa
dec
mov
or
xchg
scas
loope
sub
std
in
adc
ret
xchg
dec
xor
daa
mov
stc
lcall
xchg
lock
cmp
addr16
dec
xchg
add
or
dec
outsb
mov
xchg
inc
jbe
test
add
fistl
cmc
cwtl
ljmp
mov
cli
lret
adc
mov
std
lock
insl
xor
mov
xor
xor
fsubrp
lcall
enter
and
fsubp
outsl
add
cmp
stos
call
jecxz
push
push
xor
lahf
jb
jge
jno
test
mov
or
mov
push
or
sub
xchg
mov
notl
and
jle
pop
fwait
es
imul
mov
mov
jo
mov
pop
cld
aam
mov
push
jns
xchg
aad
dec
inc
push
mov
out
dec
ret
pop
inc
sbb
fcmovb
das
in
cmp
lock
xchg
adc
add
cmp
and
cmp
bound
out
pop
inc
mov
pop
jae
xlat
cmp
mov
dec
pop
mov
mov
push
lods
sub
je
push
push
in
xor
mov
cld
lret
pop
fwait
pop
xchg
enter
mov
push
and
das
dec
xchg
mov
adc
mov
and
inc
int
je
add
jg
test
rcll
and
jl
pop
iret
sbb
xchg
filds
mov
fsubl
pop
in
dec
mov
lock
jle
pop
jno
cmc
mov
add
mov
cmp
cmp
mov
fldenv
bound
enter
push
mov
dec
cmp
xchg
fsts
push
loope
and
les
leave
adc
vshufps
jb
dec
and
or
mov
out
pop
cmp
flds
addr16
loop
out
das
push
pushf
cmp
insl
adc
stos
pop
arpl
cli
test
das
xor
lods
sbb
movsb
sbb
adc
out
cmpl
addb
cmp
subl
test
mov
je
inc
lods
inc
fsubrl
loopne
gs
inc
lds
ficomps
push
mov
add
push
fisttpll
lods
std
shrb
mov
push
xlat
rorb
leave
sub
mov
in
loope
cli
roll
xchg
dec
lret
fistps
dec
imul
or
cmpsl
mov
mov
xchg
dec
inc
inc
jp
repnz
pop
js,pn
mov
pop
cmp
int3
push
fdivrs
jp
loop
xchg
and
push
arpl
mov
push
outsl
int
in
xor
adc
or
xchg
push
arpl
xor
jb
sub
into
sbb
lods
inc
faddp
lods
or
dec
xor
fucom
and
movsb
enter
sbb
dec
fldt
ds
in
leave
sbbl
outsl
in
mov
push
sahf
cmpsl
push
jp
sub
cmp
pop
inc
and
loope
fsubr
mov
sti
push
dec
icebp
or
dec
adcb
xor
and
ficomps
xchg
jle
je
repnz
jns
fisubrl
push
jp
int
inc
cs
outsb
loopne
adc
sbb
insb
mov
xchg
pop
dec
and
mov
jp
adc
stc
pop
cmpsl
std
data16
shrl
arpl
aad
cli
jmp
gs
push
int
adcb
jle
pop
jne
mov
cmp
repz
sub
adc
mov
cmc
sbb
in
test
imul
scas
rolb
dec
pop
pop
into
mov
jmp
add
divb
inc
adc
xchg
pop
jbe
jbe
in
cltd
mov
lods
fnstcw
mov
mov
jb
push
popa
fisttpl
push
sbb
loope
insb
xor
aam
xor
mov
add
lods
jb
nop
std
test
xchg
push
cmpsl
inc
out
mov
jo
xchg
dec
out
pop
xor
jns
imull
mov
lcall
cwtl
mov
out
fsts
loopne
xor
cmpsl
sti
mov
stc
inc
in
and
mov
mov
repz
cmpsb
and
jo
gs
lods
out
out
out
into
mov
negl
jle
loop
cli
adc
push
sbb
mov
jno
lret
iret
jnp
cmp
in
daa
in
rclb
mov
jmp
dec
mov
mov
pop
lock
and
fisubrs
repnz
xor
dec
mov
and
cmp
repz
js
leave
roll
jecxz
lret
mov
mov
push
sub
cmpsl
and
in
mov
scas
add
pusha
inc
mov
push
aam
mov
repnz
adc
xorl
les
jl
jns
fs
xlat
and
arpl
push
inc
dec
lret
push
push
sub
dec
jno
movsb
inc
sahf
push
jmp
xor
cli
fdivr
push
outsb
jle
xchg
jns
mov
xchg
int3
lret
int3
mov
add
jb
mov
pop
lret
mov
ljmp
add
and
jmp
imul
pop
xchg
daa
insl
and
push
jle
cs
cmpsb
stos
xor
mov
adc
mov
add
ja
pop
adc
push
xchg
std
roll
xchg
push
push
dec
shrl
ret
int
dec
xchg
imul
sbb
aaa
add
js
shr
pop
cmp
xor
popa
fstp
je
sahf
int3
cmp
daa
pop
call
sbb
div
fldln2
fnsave
lods
fs
sti
test
lcall
call
add
jbe
fcmovb
mov
test
bound
inc
jne
cmc
or
pop
nop
insb
adc
jo
jno
jecxz
mov
shlb
fsubrp
fs
inc
mov
fcoml
jle
pop
push
gs
inc
xor
lods
stc
mov
dec
int3
pop
int
adc
sti
adc
xchg
mov
dec
dec
rorl
fadds
or
push
lock
inc
or
into
jne
repz
push
sahf
add
cmp
mov
sub
inc
lcall
mov
dec
sub
mov
mov
movsb
ret
stos
cmp
pop
sarb
cmpsl
xchg
fisttps
xchg
inc
inc
mov
gs
xchg
and
repz
sub
scas
lock
lret
xchg
fcom
xchg
cmp
or
fnstcw
pop
xlat
sbb
mov
hlt
sbbl
xchg
test
jb
add
sub
inc
aaa
push
dec
xchg
sub
subl
sbb
xchg
jnp
shll
fbld
adc
scas
cmpsb
inc
cwtl
int
popf
inc
jle
lahf
shll
xchg
push
imul
mov
hlt
cmc
es
push
cmpsl
dec
xchg
int
rcll
inc
daa
mov
lock
ftst
rcrb
in
call
fidivrl
lahf
and
ficompl
xchg
std
push
mov
pop
push
enter
pusha
les
xor
mov
mov
fistpll
inc
popa
push
outsl
sbb
lds
inc
add
enter
or
jae
and
gs
jle
cmp
add
out
loop
aad
pop
adc
jmp
popa
ror
fdivr
in
loope
and
cltd
sub
out
sub
ffree
stos
rorb
ja
mov
jo
pop
mov
test
inc
ja
push
adc
pusha
push
test
mov
or
xchg
arpl
cli
xor
sbb
or
adc
jl
stos
ficoml
shl
out
add
repz
les
fldcw
movsb
pusha
imul
xor
arpl
mov
mov
roll
jne
mov
mov
fs
fisubl
repz
mov
addb
cltd
adc
loopne
icebp
jnp
adc
xor
imul
adc
adc
inc
repz
adc
out
jno
sbbl
fistl
fldl2t
ds
xchg
push
xor
inc
insl
dec
push
xlat
push
outsl
pop
shll
mov
push
inc
call
cli
push
dec
cmp
add
sarb
sub
das
in
les
cmp
fs
mov
push
lods
sarl
sbb
sbb
adc
jns
call
pop
in
movsb
push
adc
sti
lods
jge
push
cmp
scas
xchg
push
mov
sbb
sub
and
xor
outsl
rclb
ja
loop
cmpxchg
mov
das
addr16
jl
add
mov
negb
testb
test
leave
lods
and
add
nop
sbb
lret
sbb
cmp
and
push
and
cmp
mov
cmpsl
mov
iret
push
and
cmc
rolb
lods
mov
mov
xor
or
repnz
loope
push
mov
cmp
sub
mov
xor
mov
and
mull
stos
cmp
lods
pushf
rcr
imul
ja
jo
or
xchg
jmp
icebp
outsb
loopne
fldenv
inc
add
js
popf
fldt
enter
xchg
mov
mov
adc
and
mov
test
push
sub
cmpsb
outsb
ret
fnstsw
repz
mov
rolb
xchg
lods
sar
or
stos
stos
fcmovbe
test
fcomps
cmc
out
xlat
leave
mov
inc
lahf
fiaddl
xor
add
mov
dec
loop
insb
jno
shl
iret
fistpll
push
cmpsl
pop
mov
fldenv
ret
ret
ficompl
mov
inc
mov
aaa
mov
loope
mov
arpl
gs
movsl
scas
insl
or
add
loopne
mov
mov
lret
ja
sarb
jae
ds
enter
push
dec
xchg
repz
aas
out
bound
mov
pop
jo
movzbl
push
jb
scas
xchg
mov
xchg
mov
pushaw
and
lret
outsb
test
ja
sbb
jbe
daa
xchg
cltd
mov
xor
sbb
js
add
cld
dec
int3
popa
pop
mov
or
nop
jl
out
popf
ret
xchg
lret
lret
cwtl
push
jmp
dec
scas
fsubr
insb
sbb
lret
out
dec
xorb
je
das
flds
mov
in
xchg
push
mov
mov
testb
clc
xchg
jbe
mov
clc
mov
push
loop
sub
in
inc
mov
repnz
imull
cwtl
outsl
xchg
js
dec
int3
pushf
scas
push
imul
mov
repz
cltd
inc
push
test
pop
ss
add
mov
iret
out
or
push
xlat
mov
leave
lds
lods
stos
imul
mov
jbe
out
sub
pushl
repnz
sub
cmp
pop
mov
daa
cmp
pop
ret
xchg
bound
mov
dec
jns
xchg
xchg
subl
mov
insb
insb
test
jmp
lods
ds
jp
mov
lret
or
scas
add
inc
jne
add
mov
lret
mov
test
and
imul
jnp
mov
mov
adc
fcomp
shr
and
fs
push
ret
sbb
jle
xchg
dec
orl
insl
outsl
dec
movsl
cmp
xor
pop
iret
cmp
pop
push
int3
push
insb
rcrb
mov
xorl
mov
pop
xchg
pop
inc
adc
jecxz
outsb
jmp
add
fimuls
cld
mov
cld
aad
int
add
daa
fs
test
ret
test
push
sub
insb
int3
xor
sub
mov
add
sahf
repz
pop
ds
or
push
jmp
aad
int
push
inc
fcompl
sub
mov
outsl
lods
push
xchg
test
mov
inc
inc
fnstsw
das
repnz
ljmp
mov
cli
clc
js
jle
test
jmp
shrl
pushf
adc
pop
or
repnz
cmp
sub
lret
pop
pop
sub
or
push
daa
adc
lcall
mulb
jle
frstor
mov
out
adc
add
xor
mov
pop
inc
test
sub
jg
into
jae
into
rorb
sbbb
movsb
test
popa
mov
sub
pop
pushf
repnz
jmp
adc
fwait
shrl
pop
jmp
dec
std
mov
push
mov
dec
jecxz
test
push
inc
pop
adc
pop
push
mov
add
daa
lret
scas
push
repz
and
cli
int3
mov
movsb
fwait
lods
cmp
movsb
es
fidivl
jb
adc
or
into
inc
sbb
and
jmp
insl
jno
mov
aam
lea
adc
pop
xchg
inc
adc
inc
add
stos
insb
push
adc
gs
faddl
pop
jns
jmp
lock
mov
jg
sub
sub
or
mov
sbb
inc
cmp
repz
ficoml
jb
jl
xor
pop
in
inc
lret
imul
mov
cs
push
mov
push
pop
mov
andb
fs
dec
add
and
xchg
push
test
cmp
in
dec
adcl
cs
popf
push
pop
xchg
push
icebp
pop
test
jge
push
std
out
roll
leave
push
sbb
pop
push
lds
call
push
and
mov
pop
cmp
cmp
cmp
cmp
mov
xor
xchg
mov
xchg
add
cwtl
sub
lret
adc
arpl
dec
adcb
insl
mov
jo
std
cli
add
sub
adc
dec
pusha
dec
add
dec
mov
aam
cmpsl
out
cmp
sub
mov
mov
mov
pop
movsb
or
sbb
push
jp
push
adc
aad
cmpb
jae
mov
sub
jle
ljmp
pop
dec
mov
adc
add
mov
lret
adcb
mov
loopne
xor
push
cmpsl
dec
ja
lcall
lahf
sub
loopne
or
xor
sub
jge
dec
incl
shlb
std
jl
out
nop
dec
leave
and
sbb
cmp
adc
mov
xchg
pop
fld1
scas
in
mov
jp
stos
inc
adc
mov
call
data16
pop
push
xchg
je
jb
jle
push
or
sub
into
mov
ficoml
orl
push
call
popf
add
inc
add
mov
pop
inc
data16
or
fidivrl
pop
pop
repz
push
add
jg
cmpsb
xchg
mov
into
sti
hlt
rorl
rcll
sarl
inc
ljmp
ret
xchg
inc
je
lods
mov
hlt
inc
scas
pop
lods
int
mov
outsl
inc
inc
out
jl
call
arpl
dec
adc
cmp
adc
out
add
arpl
movb
jne
addr16
jno
xchg
cmpsl
loop
sub
jecxz
jae
xchg
sub
mov
cli
popf
movsb
dec
dec
stc
lcall
and
mov
iret
js
jmp
sub
clc
test
shr
xor
push
cmpl
fs
jmp
imul
dec
clc
inc
mov
out
std
adc
outsb
aaa
mov
cmp
jecxz
push
divb
sub
outsb
add
insb
mov
mov
xchg
inc
shrl
jnp
in
test
dec
mov
mov
adc
test
add
pop
iret
sub
and
adc
outsb
xor
cltd
ds
cmpsb
push
stos
push
sbb
aas
push
sub
call
cmp
in
sbb
jbe
rcrb
sbb
scas
test
imul
mov
sarl
imul
push
push
sub
jl
rorl
movsl
insl
jmp
xor
out
cmp
testb
mov
pop
dec
mov
dec
ja
loop
mull
mov
pop
dec
lods
scas
xor
fldl
call
xor
mov
cmpsb
jg
lock
pop
out
sar
cmpsb
add
fidivs
insl
jne
mov
xorps
test
or
add
imul
push
sahf
jo
xor
push
jnp
inc
mov
mov
cmpsb
lods
adc
scas
mov
sub
sbb
cs
pop
fucomip
mov
mov
out
cmp
movsb
js
int3
jmp
stos
pop
adc
jnp
dec
lods
rcll
mov
pusha
stos
data16
mov
jg
pop
sbb
or
adc
pop
sub
inc
movsl
inc
sub
in
pop
jns
or
adc
pushf
sti
adc
test
jmp
dec
scas
push
cwtl
adcb
outsl
scas
sub
test
pop
scas
aam
push
mov
cmc
pop
jae
add
adc
adc
jg
stos
decl
loopne
imul
aam
mov
add
test
xchg
icebp
fistps
out
cli
sub
stc
scas
cmc
adc
lahf
dec
aas
lcall
ret
int3
inc
in
lock
inc
lret
push
inc
inc
inc
mov
jo
sti
xor
cmp
rcrl
mov
dec
adc
jae
cmp
es
dec
and
ja
push
repnz
in
dec
daa
push
out
into
xor
push
mov
js
sub
lahf
xchg
ja
popa
popf
jg
xlat
mov
in
jae
mov
inc
mov
mov
out
out
pop
mov
mov
das
xchg
mov
pop
ret
mov
add
pop
or
xchg
jle
adc
ret
pop
mov
out
aam
sub
mov
mov
rolb
call
gs
mov
pop
insb
test
nop
inc
cltd
subb
xchg
mov
push
jne
std
jno
ret
add
inc
mov
js
jmp
lret
adc
inc
fistl
out
popa
lret
stos
ss
fistpl
or
arpl
cmp
lret
ret
mov
xchg
data16
pushf
pop
stos
push
jns
dec
sub
outsl
mov
add
movsb
popa
sbb
xchg
enter
dec
addl
inc
mov
inc
in
jmp
int3
stos
push
movsb
fisttpl
and
xchg
rclb
testb
or
shrb
cmp
call
mov
jo
mov
adc
pop
shrb
push
push
xor
popf
add
fwait
std
cld
cmp
leave
mov
int
fcom
pop
cmpsb
and
cmpsb
and
sbb
mov
mov
hlt
out
insl
push
jae
or
out
je
lds
int
jo
jae
fsubp
jecxz
sbb
xchg
scas
les
shl
push
insb
insl
pop
loopne
aaa
mov
nop
dec
fadd
pop
ret
pop
sub
sub
aas
and
jle
popf
stos
pusha
bound
jnp
push
sbb
adc
jns
push
adc
es
incb
adc
scas
jne
dec
adc
fwait
jo
add
cmp
push
add
sbb
cmc
sub
mov
jg
repz
cmp
and
push
js
jl
out
hlt
out
fisubrl
sub
lret
inc
and
mov
les
push
or
cld
sarb
cld
ficomps
add
dec
and
loope
sub
test
pop
and
sub
fcomps
mov
jnp
fmull
mov
xor
cmp
inc
pop
jge
pop
mov
lods
adc
mov
or
adc
js
pop
mov
mov
push
or
lock
push
enter
jae
lds
fisttpll
dec
xchg
mov
out
inc
push
movsl
out
mov
out
not
fwait
cmc
adc
mov
jae
mov
add
push
mov
into
sub
fimull
popa
mov
loope
inc
loope
xchg
arpl
cmp
mov
add
jl
jbe
fst
mov
mov
aas
shrb
push
arpl
push
cli
les
pop
lret
out
loope
and
fnstsw
push
xlat
and
jb
add
les
outsl
cmpb
fucomi
movsb
xchg
aaa
xor
shrb
pop
mov
mov
mov
rcl
inc
inc
mov
pop
nop
push
nop
mov
in
ljmp
es
pop
bound
or
stos
cmp
ret
mov
ljmp
adc
mov
loope
add
jge
lock
push
test
sarb
outsb
jmp
loop
sbb
or
and
js
push
popa
dec
lea
or
fwait
inc
repz
xchg
aam
adc
xchg
xor
sub
and
xor
inc
icebp
nop
stc
int3
xchg
cld
mov
scas
sarb
mov
mov
rorl
hlt
or
adc
and
pushf
loope
and
sbbb
and
lds
add
outsb
jae
sahf
sbb
fcoms
enter
cmp
jno
bound
push
movsb
mov
mov
in
addr16
mov
pop
mov
ficoms
sbb
gs
outsb
mov
test
enter
imul
adc
loope
jmp
xchg
mov
mov
add
add
mov
cmp
ret
popf
xor
in
cmp
test
insb
sbb
xor
cmp
std
and
insb
out
ret
mov
xchg
push
xchg
mov
sbb
mov
ret
lods
sub
lcall
inc
iret
pop
mov
ror
dec
xchg
pop
pop
popa
jle
xchg
out
pop
leave
sub
add
scas
incb
xor
jl
pushf
add
fdivr
mov
icebp
mov
int3
lcall
clc
xor
adc
adc
inc
scas
outsl
scas
out
sbb
insl
scas
lcall
inc
sub
fwait
orl
test
std
lahf
sbb
or
mov
adc
ret
rcll
aam
sbb
mov
shr
scas
cmpsb
lock
xlat
les
sub
xor
mov
and
mov
dec
jecxz,pt
in
iret
js
fdivrl
sti
inc
sub
jle
mov
pop
aas
mov
cmp
nop
and
pop
cmc
inc
sbb
mov
cmp
popf
imul
push
pop
pop
jae
pop
inc
inc
mov
or
push
mov
popf
mov
int3
lods
mov
xor
ja
les
in
arpl
dec
sub
repnz
lods
lea
jb
mov
pop
mov
repnz
test
push
xchg
pop
mov
dec
push
in
aam
sub
inc
adc
call
xor
pop
add
lret
xor
dec
xor
xor
dec
aaa
ret
rcl
sub
mov
sub
sbb
jne
sub
ljmp
push
sbb
cmc
xchg
aaa
call
jp
pop
jae
test
mov
mov
mov
call
lds
push
adc
into
pop
jno
lds
fistpl
dec
push
ret
jmp
cmp
mov
filds
add
lods
cmp
idiv
shll
inc
loopne
or
arpl
xor
test
mov
inc
inc
inc
pusha
int
cmp
adc
cmc
fists
fisttps
dec
add
cmp
mov
adc
sub
les
roll
cmpsl
mov
fstpl
dec
pop
adc
enter
stos
aam
and
jb
mov
or
mov
enter
std
mov
push
ljmp
movsl
xchg
mov
in
sarl
jae
addr16
push
scas
adc
adc
sti
add
cmp
sub
push
lds
add
icebp
lret
push
lea
adc
stc
adc
bound
enter
adc
cli
pusha
pop
mov
filds
xchg
sbb
jb
pop
jmp
aad
push
sub
xchg
call
loopne
adc
repnz
mov
jge
aaa
stos
fcomps
cli
adcb
pop
jo
sub
mov
out
sbb
fwait
inc
test
movsb
stos
mov
lret
lods
push
xchg
jnp
mov
adc
pop
das
faddl
dec
inc
dec
stos
mov
xchg
ror
inc
icebp
jl
and
cs
xchg
add
sub
inc
xchg
dec
nop
fiadds
and
test
xchg
jmp
int
push
enter
sbb
cmpb
sbb
in
adcl
out
cli
test
add
jns
pop
clc
mov
xchg
fistpll
dec
push
das
nop
incl
dec
xor
mov
or
rclb
dec
pusha
mov
lods
adc
adc
leave
sub
and
inc
push
cmp
push
dec
fcoml
test
sahf
mov
adc
fdivl
pop
jo
push
mov
sti
lret
iret
sti
orl
rcll
lock
lods
xchg
xor
cli
lcall
or
or
or
xchg
pop
push
mov
cs
jne
mov
push
out
sub
push
test
jmp
or
outsb
sub
repnz
nop
addr16
xchg
fs
add
es
adc
sub
mov
repnz
jo
mov
into
dec
movsl
push
into
xchg
xlat
push
movsl
jmp
adc
addl
test
popf
or
je
aam
pop
cld
cmp
mov
shlb
rcl
adc
jae
dec
data16
test
dec
lods
xchg
in
or
or
push
cmpsl
leave
inc
xchg
sub
lret
dec
icebp
lret
mov
daa
in
imul
jae
fsubrp
lods
aad
mov
lahf
sbb
and
xor
sub
test
push
loop
mov
in
nop
insl
jbe
cmc
inc
dec
and
sbb
outsl
xchg
loop
je
cmpsb
lea
inc
dec
test
mov
pop
lcall
adc
std
mov
sbb
enter
es
xor
shll
ljmp
ds
inc
cmp
arpl
and
repnz
rcrl
xchg
test
lcall
rcrl
in
scas
xchg
test
mov
lock
scas
notb
mov
hlt
shlb
js
loop
fwait
inc
mov
jae
arpl
mov
jl
dec
xchg
lcall
std
xor
push
je
adc
mov
cli
fbld
and
call
cmc
cs
xchg
jns
lret
mov
xchg
sub
mov
jge,pt
xchg
sub
jbe
enter
push
and
push
jg
shlb
daa
test
push
pop
xor
inc
js
out
aas
mov
mov
add
fsubrl
test
xchg
mov
pusha
inc
loopne
mov
sbb
and
pop
dec
rorb
stos
pop
fistpl
subb
pop
mov
sub
xchg
dec
jmp
cmp
int3
scas
sbbb
sub
out
not
mov
cld
push
dec
ja
push
adc
xchg
or
aam
mov
add
clc
out
mov
xor
andb
or
pop
dec
xchg
out
xchg
imul
xor
icebp
pop
push
jl
jge
cmp
push
add
mov
xor
pop
ja
push
aas
push
in
mov
fcomps
jb
xchg
pop
jns
fistpll
inc
add
mov
cltd
push
stos
movl
jno
movsb
divl
lock
roll
outsb
mov
pop
out
sbb
sub
rolb
push
add
add
je
sbb
ljmp
mov
and
mov
pop
sbb
sub
or
push
cmp
pushf
jp
cltd
cmp
jg
push
aam
scas
pop
loop
mov
jmp
out
addr16
sbb
push
xchg
mov
mov
rclb
dec
sbb
out
adc
aam
scas
fdivr
cs
pop
dec
sbb
stos
adc
jbe
mov
xor
dec
mov
xchg
out
repnz
xchg
sub
adc
adc
imul
sub
cli
leave
mov
into
daa
dec
addr16
dec
mov
mov
xor
imul
mov
sbbb
sbb
hlt
iret
xchg
jmp
push
pop
push
mull
and
aaa
roll
jge
outsl
jbe
je
stc
dec
test
icebp
dec
jo
pusha
and
pmuludq
imul
cld
or
cmp
icebp
popfw
push
nop
xor
and
repnz
sbb
insb
mov
shl
repz
and
inc
fcmovne
test
cmp
xor
lods
enter
repnz
mov
sbb
add
loope
addr16
jae
and
js
popf
sbb
adc
repz
xchg
dec
mov
jno
adc
push
mov
adc
test
dec
scas
add
in
jg
inc
frstor
fwait
and
or
outsl
xor
lcall
ficompl
inc
scas
std
mov
lds
rcl
lds
dec
lock
and
dec
mov
jnp
mov
push
add
lret
ret
mov
ret
xor
out
and
ds
cmp
mov
loopne
sub
cmc
sahf
call
add
mov
and
push
pop
dec
mov
dec
adc
mov
jne
popa
out
cwtl
cwtl
test
jle
aam
sub
or
test
push
aas
add
inc
insl
jno
jb
add
cmpsl
mov
call
mov
xor
or
sar
jp
pop
aaa
testl
mov
sub
out
dec
push
iret
jbe
pop
mov
int
dec
xchg
xor
jnp
jne
repz
dec
aam
or
popa
push
xor
test
mov
sahf
pop
cmp
xorl
adc
fwait
popa
pop
and
cs
and
popa
fistl
mov
enter
pop
lret
imulb
das
cmpsb
loopne
jp
dec
sbb
mov
loopne
adc
jg
jl
std
stc
inc
mov
mov
push
cmp
push
and
pusha
adc
imul
notb
enter
faddl
pushf
sub
mov
and
sti
sub
inc
mov
inc
sub
xchg
push
loop
insb
or
mov
xor
jae
jns
jnp
icebp
pop
push
add
jg
lret
cmp
adcb
shrb
jmp
imul
mov
xchg
sqrtps
sbb
sti
ljmp
ss
scas
movsb
faddl
cltd
xchg
aas
lcall
repz
shrl
cmp
xor
inc
cmpsl
cmp
adc
cmpsl
inc
out
or
xchg
enter
fwait
adc
cltd
adc
jmp
cwtl
push
dec
mov
sbbl
jge
addr16
dec
sub
and
enter
cmp
xchg
jno
inc
xchg
cld
adc
pop
jg
and
sub
and
mov
in
mov
les
inc
xchg
cltd
xchg
mov
and
sub
testb
dec
pusha
popa
xchg
iret
cmp
fidivrl
push
dec
cmp
jge
cwtl
jns
jns
imul
test
push
shll
xor
jecxz
mov
pop
xorl
aas
ljmp
mov
insb
call
xor
and
iret
into
fwait
lret
gs
out
inc
and
mov
call
add
xchg
push
push
and
movsb
cltd
dec
in
ss
and
imul
pop
inc
in
xchg
iret
pop
dec
dec
pushf
and
popf
popa
cwtl
xor
cmpsl
jae
outsl
movsb
fisubrl
sub
gs
in
aad
xchg
add
xchg
xor
ret
decb
xchg
xchg
mov
test
mov
xchg
bnd
xchg
dec
push
jno
andb
loop
xor
mov
daa
movsl
fists
xor
jp
outsl
cmp
test
test
lock
push
mov
popa
jno
cs
add
xor
dec
stos
dec
jmp
dec
add
push
movsl
ds
in
xchg
stc
adc
ja
loopne
bound
sub
cs
fistps
mov
xor
jbe
pop
sub
in
push
aad
imul
xchg
aam
scas
pop
cmpsb
pop
dec
fsubl
dec
fcompl
sbb
mov
pop
push
sti
mov
xchg
xlat
mov
rolb
fnclex
das
push
push
stc
push
ss
shl
loopne
fistps
mov
stc
jne
push
sbb
mov
daa
iret
jns
adc
fs
pop
std
repz
sub
xor
cli
insb
test
inc
or
negl
cmc
mov
add
xlat
dec
aaa
xor
mov
jecxz
and
aam
or
aad
sti
jmp
push
xor
jo
pop
sbb
insl
lret
inc
xor
fwait
rcr
subb
mov
jb
sti
fwait
outsb
bound
push
ds
fildll
idivb
call
imul
mov
sub
test
mov
out
outsl
xchg
mov
movsb
fsubp
dec
stc
test
add
push
test
fwait
mov
mov
adc
enter
jno
orb
cmp
adc
push
incl
jno
sarl
fld
add
in
jmp
into
mull
xorl
jb
mov
cwtl
mov
push
stos
psllw
adc
cli
mov
pusha
jo
and
jmp
adc
push
pop
xchg
divb
fidivs
cwtl
stos
cltd
add
push
inc
or
xor
ljmp
xchg
adc
mov
adc
adc
popf
lahf
imul
imul
mov
cmpsb
push
mov
mov
sub
stos
sub
rcrl
dec
xchg
shlb
pop
jns
adc
dec
push
repnz
test
mov
sbb
frstor
lea
and
in
add
pop
jge
pop
xchg
int3
movd
cmp
jo
inc
sub
stos
cld
sahf
into
insl
pop
cmp
mov
pop
ja
xchg
mov
add
jle
leave
and
repz
pop
rcl
cmpsl
lea
sbb
cmp
outsb
out
into
dec
sub
cmpsb
inc
add
adc
pusha
push
xchg
jg
pushf
dec
std
test
dec
orl
and
adc
scas
lret
sbb
fmuls
sarl
clc
in
out
inc
push
imul
cmp
mov
enter
lods
hlt
inc
je
lcall
out
out
fdivrl
or
pop
fldl
gs
insl
cltd
push
js
leave
sbb
adc
dec
sub
out
fst
imul
into
mov
dec
inc
hlt
and
push
mov
inc
xlat
into
hlt
cwtl
push
cmp
or
pop
ror
inc
and
mov
sbb
or
data16
jno
cld
adc
mov
adc
xor
add
insb
icebp
test
mov
inc
iret
push
ret
cmp
sbb
mov
enter
push
mov
aad
adc
push
notb
xchg
mov
stos
test
lods
sahf
mov
pop
mov
fldt
xor
inc
mov
push
adcb
or
sbb
jb
xor
sub
fidivrl
inc
rcr
cwtl
sbb
push
cs
aad
xchg
xor
mov
movsb
ljmp
and
leave
sbb
adc
and
sbb
pop
pop
icebp
movsb
in
sbb
int3
into
adc
pop
adc
lret
push
fisubs
xchg
lods
lret
inc
mov
mov
inc
adc
mov
addr16
cmpl
jns
dec
mov
and
ljmp
stos
pop
aam
jbe
lods
bound
sbb
test
sbb
cmp
push
sbb
add
icebp
sbb
xchg
subl
add
ja
fs
xlat
pop
fisubrs
jae
mov
ret
dec
pusha
iret
stos
mov
mov
or
mov
cmp
pop
or
das
rcrb
clc
sti
test
jae
pop
dec
add
jns
jp
sbbb
mov
jo
aas
rcll
inc
lods
repnz
add
mov
iret
jbe
sub
pop
imul
je
and
test
pop
rolb
repnz
adc
lcall
xchg
xor
adc
aad
xchg
dec
repz
push
xlat
adc
test
dec
lods
adc
pop
fstp
in
xor
loop
es
in
mov
sbb
sub
shl
ss
or
loop
sbb
rcrb
shl
int
cmc
pusha
rcll
pop
adc
or
cld
nop
inc
mov
dec
idivl
xor
jp
adc
jge
in
clc
inc
std
pushf
ret
inc
mov
subl
or
addr16
cs
ret
loopne
and
or
xor
popf
rclb
xor
and
adcb
xchg
or
js
and
mov
cmp
mov
jbe
cmp
aad
mov
sarb
mov
fldenv
xor
andl
pop
jns
sbb
imul
xchg
xchg
mov
mov
mov
pop
inc
mov
jp
in
pop
dec
daa
dec
xchg
push
mov
jge
aad
orb
push
in
mov
in
cs
mov
add
xchg
nop
icebp
fiaddl
jne
dec
inc
call
out
mov
jno
xchg
or
je
xorb
and
sub
imul
or
inc
enter
sbb
jo
out
stos
xchg
push
sti
mov
jnp
inc
repz
cltd
cmp
pusha
mov
push
aaa
jl
push
and
dec
inc
or
cmp
push
push
cmp
leave
lcall
and
xor
cld
out
cmc
mov
aas
pop
movsb
inc
or
enter
mov
lods
jnp
jmp
scas
and
add
mov
ss
lods
jmp
jl
imul
mov
out
jle
mov
jmp
divl
xor
or
in
pushf
sub
dec
ja
cmp
push
dec
outsb
xchg
pop
xchg
mov
icebp
repz
ljmp
adc
pop
jp
andl
inc
jge
mov
es
xor
mov
sub
or
daa
scas
pop
xchg
cmp
push
sarl
loopne
enter
push
sub
fwait
ss
push
jmp
adc
bswap
pop
push
leave
in
inc
stos
and
pop
cmp
mov
xchg
or
and
jbe
xchg
in
mov
enter
or
mov
sub
cmp
cmp
mov
jae
xlat
dec
fildll
sub
jb
sbb
data16
mov
jle
xlat
push
fimuls
mov
cli
inc
cmpsb
repnz
ljmp
jl
jge
ja
push
fistps
pop
adcb
adc
add
or
repz
and
fisubl
mov
inc
dec
sbb
outsb
xchg
mov
push
js
push
popa
jb
mov
and
or
js
push
lods
mov
in
ret
je
adc
arpl
dec
fadds
popf
and
push
push
loop
and
dec
cmp
bound
scas
xor
rorb
jns
xchg
jl
das
sub
inc
or
addr16
cmp
jns
cmpl
rorb
xchg
mov
cmp
or
xchg
inc
lock
sbb
xor
adc
popf
enter
cmpsl
mov
sbb
and
lods
cmc
subl
jns
sbb
cmp
inc
sbb
ret
or
mov
push
mov
pop
dec
mov
lcall
daa
lahf
mov
push
xchg
mov
or
mov
loope
mov
mov
js
arpl
pop
lods
shlb
pop
loop
mov
jae
sub
ss
int3
push
and
test
jg
scas
decb
int3
add
mov
scas
push
movsb
fiadds
inc
or
aad
add
mov
scas
call
pop
mov
aas
mov
or
clc
cmp
shl
roll
movb
or
lcall
xchg
aam
push
mov
in
xchg
fcoms
mov
in
sahf
aaa
add
lock
xchg
leave
cs
sbb
jae
adc
cmpsb
lods
add
dec
or
insl
sbb
imulb
mov
arpl
sbb
sbb
fwait
xchg
jecxz
mov
dec
in
sarl
jmp
mov
rcl
mov
inc
xor
das
jb
lods
jne
fisubl
or
jmp
dec
mov
push
sbb
jecxz
push
loope
std
mov
std
xchg
xlat
aad
sub
mov
ja
mov
std
xchg
test
icebp
out
movsb
leave
and
out
or
mov
lods
bound
fstl
enter
sub
inc
dec
cmp
push
pop
mov
scas
inc
cmpsl
push
lcall
xchg
fldenv
les
roll
push
insl
sub
xor
test
push
or
mov
jge
mov
push
lret
test
push
jge
std
mov
jo
pop
rcrb
cmp
mov
push
or
fnstenv
insb
jp
fbstp
cld
jmp
or
dec
xchg
in
xchg
stos
aam
iret
lods
shll
or
push
out
mov
loope
hlt
in
mov
mull
sbb
push
cmpb
jb
sarl
out
add
ss
stos
std
rcll
outsb
jns
push
cmpsb
adc
mov
outsb
push
addr16
fstl
sahf
jb
mov
adc
push
push
mov
xor
adc
inc
call
sar
fdivp
aas
pop
mov
inc
stos
xchg
jb
lcall
outsb
icebp
loope
dec
mov
jns
sub
leave
pop
lret
idivb
shlb
aas
rcl
lock
in
aad
in
jp
enter
dec
ds
jne
out
das
insb
xor
jl
jle
rclb
or
lods
mov
stos
or
leave
pop
repnz
icebp
ret
into
iret
lods
sbb
mov
aad
mov
frstor
enter
sbb
pop
aaa
sub
push
pushf
test
pop
nop
rcll
add
and
xlat
pop
xchg
std
test
daa
mov
test
fmuls
and
xchg
sbb
movsb
mov
pop
jae
dec
cs
mov
dec
pusha
push
sbb
xlat
ror
sub
push
lret
mov
adcl
int
xor
cmc
mov
in
xchg
in
pop
mov
jecxz
mov
dec
stos
and
andl
jmp
outsl
add
cmc
dec
loope
cmp
scas
mov
pusha
inc
pushf
mov
or
fstps
lret
stos
outsb
xlat
js
jnp
and
mov
mov
jl
pop
lret
loopne
mov
jne
add
rcrb
pop
add
xlat
sbb
mov
bound
add
add
cltd
jg
mov
jo
popl
or
inc
lods
cmp
add
cmp
or
xor
stos
push
inc
aad
aas
scas
fildll
xor
xchg
mov
shrl
icebp
std
jns
stos
lock
cltd
lods
sti
xchg
and
inc
xlat
add
mov
xchg
testb
jbe
jbe
test
rclb
push
pop
and
mov
inc
sub
push
adc
cltd
gs
jb
dec
pop
mov
pop
cwtl
out
lcall
push
repnz
bound
pop
and
ds
xchg
lock
lret
cs
xchg
mov
mov
sbb
xlat
xor
ds
es
dec
mov
movsb
pop
je
add
add
mov
fisttps
jmp
testl
xchg
add
sbb
aaa
mov
jno
mov
sub
sub
pop
js
fs
les
xor
mov
stc
mov
inc
sar
cmp
jecxz
sbb
incb
dec
pusha
es
insb
mov
lds
in
gs
sahf
loop
jns
pop
xor
in
xchg
dec
shl
mov
cmp
aam
fisubrs
js
les
jne
jmp
cmpsl
iret
push
or
mov
lock
aas
mov
cwtl
lahf
mov
jno
pop
cmp
cmc
adc
adc
cmp
fdivrs
jge
movsl
sbb
mov
sub
xor
pop
adc
cmp
jae
pshufw
aaa
xchg
gs
lret
pop
das
pop
mov
fstps
imull
xchg
arpl
mov
xchg
mov
ror
or
adc
shll
ss
mov
into
sti
xor
jmp
mov
pop
inc
xor
adc
sti
ficoml
xchg
adc
inc
mov
inc
jne
sti
dec
and
or
movsl
add
mov
pop
xchg
aad
fbstp
out
mov
inc
dec
arpl
es
mov
icebp
jl
dec
fs
std
sbb
adcl
roll
iret
and
loope
mov
xlat
cltd
test
lods
out
mov
mov
dec
addl
push
xchg
adc
ss
xor
mov
rolb
jno
mov
les
push
dec
sbb
sub
dec
outsb
scas
add
inc
cmc
jg
stos
inc
js
inc
popa
test
or
int
inc
ret
mov
cmc
or
sti
repnz
mov
orb
aad
mov
xchg
repnz
adc
xchg
sbb
lea
ds
hlt
xor
or
add
add
xor
jae
cmpsl
addl
sar
xchg
adc
dec
scas
xor
cld
pop
mov
test
mov
outsb
pusha
mov
aam
jle
lods
filds
push
cmp
pusha
popa
pop
mov
fadds
fimuls
and
cmp
and
mov
push
mov
stc
jle
inc
pop
clc
dec
nop
ss
fidivrs
fistl
movsl
sbb
dec
cmp
inc
xchg
jge
adc
lods
pop
xbegin
mov
in
lods
jns
cmp
xor
scas
mov
mov
mov
inc
movsl
and
mov
movl
jbe
adc
mov
fwait
mov
and
cli
cmp
mov
loope
addr16
loopne
cltd
cld
arpl
jmp
lods
and
popa
dec
dec
adc
push
mov
aas
leave
pop
test
bound
mov
negl
mov
cmp
push
pop
mov
lcall
mov
xor
icebp
cmp
std
mov
lods
aaa
push
dec
insl
xchg
inc
mov
leave
inc
stos
jo
pop
lock
cmpsl
out
ror
sbb
jnp
in
stos
je
ljmp
cmpsl
add
push
cmpsb
cwtl
add
or
in
mov
mov
cmp
movsb
out
iret
test
ljmp
mov
aam
addl
ror
mov
pop
andb
into
inc
scas
xchg
pusha
pushf
push
push
xchg
dec
sbb
cltd
je
insb
mov
jns
xchg
das
mov
xchg
out
inc
pop
data16
in
xchg
cs
mov
mov
lret
and
and
inc
adc
and
cmpsb
mov
mov
xchg
iret
or
lock
mov
out
insl
push
dec
add
aad
lods
jne
movsb
pusha
iret
ss
leave
test
fld
jbe
sbb
insl
fucomp
push
dec
mov
push
push
repnz
and
int
push
movsl
mov
mov
adc
add
lock
inc
cmp
popf
lods
stc
loop
jle
test
dec
repz
aad
push
dec
aam
mov
pop
adc
lret
cltd
jne
sbb
popf
dec
imul
add
inc
xchg
stos
out
mov
gs
xchg
stos
mov
cmp
adc
inc
mov
or
fldcw
roll
xchg
cmpsb
pop
int
push
mov
popf
mov
mov
cltd
inc
mov
cs
push
sub
test
mov
pop
pop
add
je
ror
loope
mov
xchg
mov
push
jbe
pop
mov
inc
out
and
insb
rcll
sub
fcom
andb
mov
sbbb
outsb
or
shrb
or
in
mov
in
shll
imul
push
mov
mov
mov
cli
cmpsb
adc
push
mov
jbe
sub
sub
push
imul
jmp
arpl
push
lods
mov
lahf
add
and
or
call
divb
sub
cmovbe
cmp
xor
mov
inc
mov
mov
add
cmp
mov
lret
pop
cmp
or
icebp
xlat
jns
dec
je
fdivs
fmull
loope
or
cli
out
xlat
add
cld
xorl
aaa
cmpsb
add
adcb
jp
imul
iret
xor
into
addr16
cmc
mov
or
clc
ffree
jmp
repnz
test
jbe
shlb
inc
push
arpl
cmc
inc
dec
bswap
and
lahf
cli
sub
and
imull
push
lods
sub
inc
and
enter
lea
pop
push
std
fs
pop
dec
pop
out
pusha
stc
inc
hlt
cmp
cld
movsb
push
inc
inc
pusha
mov
mov
dec
in
sahf
out
mov
mov
push
adc
push
stos
mov
pop
call
add
add
push
cmp
outsb
cmpb
lods
xchg
sbb
mov
leave
add
test
add
repz
push
imul
mov
inc
loope
mov
mov
aaa
inc
jl
pop
jae
fwait
pop
push
cli
inc
in
ljmp
cltd
xchg
xchg
lea
pop
dec
dec
pop
and
popf
mov
test
cs
movsb
mov
loop
jg
nop
ss
ss
mov
andl
jge
out
hlt
out
xlat
push
mov
pushf
pop
and
mov
aam
mov
lret
inc
sbb
cltd
stc
test
pushf
mov
sub
and
push
dec
test
dec
insb
cmp
test
addb
pushf
loopne
or
mov
jmp
inc
test
lock
mov
fst
roll
mov
jl
sub
loop
add
mov
and
xchg
mov
xrelease
jbe
int
sbb
xorl
sub
jl
arpl
fwait
in
pop
fwait
push
in
pop
out
and
pop
adc
cmp
mov
mov
mov
adc
jae
ficompl
sbb
clc
fnsave
fldln2
jno
lret
jmp
repnz
lretw
push
dec
mov
adc
sub
add
popa
stc
mov
mov
inc
jno
mov
scas
cmp
inc
dec
cwtl
mov
sbb
decl
mov
iret
bound
mov
add
call
ret
xlat
insl
jmp
mov
and
out
cmp
aad
icebp
and
add
daa
jo
xor
cmp
pop
shlb
adc
or
push
fldcw
inc
push
in
popa
ljmp
sbb
inc
addr16
iret
lea
es
and
sub
pop
sbb
jge
pop
sbb
adc
sarl
aam
mov
lahf
int
xchg
mov
enter
shrb
dec
pusha
popa
jns
adc
adc
mov
mov
inc
xlat
std
and
sub
jl
and
loop
xchg
fildll
fidivrs
out
lods
mov
loopne
xor
dec
imul
xchg
sbb
pop
std
mov
mov
movsl
and
loopne
xchg
inc
lods
mov
rcl
sub
pop
in
addr16
loope
xchg
dec
push
or
jp
enter
in
push
loope
add
stos
jns
lret
aam
loopne
test
jmp
outsb
pcmpgtd
fwait
pop
ljmp
lret
es
jno
out
mov
dec
mov
cmp
mov
imul
aaa
inc
leave
iret
lcall
xlat
jle
cli
int
fadds
faddp
out
jno,pt
lcall
fidivrs
sbb
mov
pop
push
jnp
xchg
loop
or
mov
mov
pop
nop
daa
rorl
popa
push
sti
pop
call
lret
mov
push
rcrb
xchg
jg
js
jne
addb
xorl
mov
or
and
fcoml
clc
decb
fwait
sbb
xchg
imull
mov
inc
cmp
cmp
les
xor
xchg
adc
mov
xchg
mov
sahf
insb
cmp
mov
fwait
pop
add
std
cmpsb
je
add
or
adc
cmp
jb
mov
fs
aam
fcoml
cmpsl
sbb
pusha
lock
push
daa
ja
stc
les
lea
out
jb
in
and
push
sub
sbb
and
and
xchg
in
xchg
xor
stc
jle
loop
ds
lret
sbb
mov
ffreep
in
xchg
out
cmp
lret
adc
test
sahf
mov
jecxz
pop
sub
and
xchg
lret
nop
xchg
sbb
push
test
fbld
lcall
mov
lods
das
adc
enter
ja
xor
sub
push
jmp
xor
sahf
movsl
sbb
pusha
xor
shlb
xchg
xchg
repnz
push
xchg
das
pop
rorl
xchg
mov
rclb
andl
enter
pop
mov
fists
in
outsl
scas
arpl
lods
pop
outsl
pop
add
mov
into
movsl
sti
push
in
es
sbb
into
xchg
shl
dec
xchg
jb
dec
lret
hlt
in
mov
dec
or
ret
or
adc
mov
inc
repz
mov
xor
fwait
mov
mov
aam
lds
pop
subl
or
stc
mov
pusha
mov
aas
lds
iret
mov
jg
fwait
lcall
test
pop
xchg
add
jg,pt
lret
andl
mov
adc
mov
fs
dec
pusha
pushf
mov
ja
adc
test
jl
ljmp
imul
lods
mov
xchg
add
push
mov
dec
jae
lods
leave
adc
jne
out
mov
sbb
xor
and
cmp
popa
push
and
lea
and
aam
add
enter
mov
cmp
jg
call
pop
inc
je
bound
dec
divb
mov
mov
dec
pop
test
cmp
jb
push
cmpsb
repnz
lock
xchg
xchg
or
lahf
test
sbb
dec
xchg
xor
mov
filds
mov
aad
popf
dec
gs
sahf
es
pop
movsl
sbb
mov
hlt
leave
mov
lcall
xor
mov
cmp
test
ret
sbb
push
cmp
xchg
loop
fldcw
aam
into
enter
or
or
divb
mov
fisttps
sub
xchg
push
jl
popa
and
das
cwtl
mov
test
ret
jae
fwait
mov
dec
push
mov
lods
inc
mov
cmp
xor
andl
pop
lret
push
sbb
aas
hlt
or
lock
xchg
sbb
outsl
jbe
imul
dec
mov
pop
pop
mov
hlt
daa
sbb
cli
cwtl
sub
xor
cld
sbb
xor
mov
imul
or
adc
jl
jecxz
push
shlb
xor
mov
push
xchg
sbb
jecxz
inc
ds
dec
popf
aad
and
dec
mov
fcomi
jae
popf
pop
adc
xchg
mov
cmpl
sub
push
pop
loopne
lret
adc
push
pop
jle
push
lock
lock
cmp
negl
std
jo
cmpsl
add
pop
inc
fimull
mov
ficompl
lret
insb
ja
mov
js
xchg
ret
cmp
xchg
lahf
xchg
add
pop
or
scas
and
xchg
push
and
jae
xor
popl
insl
xor
fwait
dec
lcall
fs
xchg
mov
pop
stos
outsl
repz
jg
adcl
adc
push
mov
aam
push
xor
xor
popa
cmc
mov
xor
pop
sbb
mov
inc
rorl
push
inc
xchg
lods
dec
jecxz
cs
add
inc
or
and
arpl
add
xchg
out
push
test
mov
pop
mov
jge
push
mov
xor
pop
pushf
sub
jge
xchg
mov
lcall
cmp
push
dec
mov
sub
jbe
add
sbb
popf
push
inc
pop
pusha
negl
xchg
cmp
leave
jge
and
cwtl
pop
clc
outsb
insb
mov
std
jnp
imul
fwait
out
inc
pop
mov
mov
fwait
adc
scas
insl
and
and
cmp
cltd
mov
js
adc
rcll
pop
dec
mov
hlt
sub
dec
movsb
movsl
xchg
nop
sbb
add
dec
cmp
lods
jmp
fdivs
std
mov
mov
fcmovbe
mov
mov
xchg
mov
ss
jp
ret
inc
xchg
cs
xor
push
push
lret
std
adc
test
jle
cmc
jecxz
lahf
icebp
daa
stc
ja
jmp
mov
fstl
adc
lods
push
dec
loopnew
inc
mov
mov
sub
dec
xor
push
and
leave
leave
xchg
or
jo
sahf
xchg
repnz
add
movsl
jb
xchg
loope
push
or
stc
or
push
inc
sarl
xchg
cmp
dec
sbb
ret
mov
xchg
jmp
in
imul
mov
jl
das
rorb
pop
adc
and
pop
in
pop
rol
mov
sub
lret
cwtl
jg
negb
fimuls
add
out
mov
cmovns
fdivl
insl
pop
daa
inc
fmul
pusha
addb
cli
mov
pop
mov
dec
cmp
adc
mov
push
in
or
xorb
in
gs
mov
xchg
push
sub
push
sahf
sahf
repz
xchg
sub
xchg
pop
xor
rcrl
testb
pop
cmp
rcrl
mov
lea
jecxz
add
mov
inc
sub
js
adc
add
imul
cmp
fsubr
loop
xor
adc
imul
jmp
ljmp
xor
mov
sub
movsb
pop
inc
cwtl
scas
add
jbe
sbb
ret
mov
out
lock
test
jmp
pop
xchg
jnp
mov
inc
jp
mov
and
or
dec
data16
fxam
shll
or
loopne
xchg
jge
cwtl
adc
andb
adc
sbb
cmp
mov
cmp
mov
popa
adc
mov
sbb
xor
fcmovu
outsl
xchg
mov
inc
cltd
push
into
push
sbb
jp
sbb
repz
mov
ljmp
cmp
dec
adcb
inc
popa
movsl
ja
outsl
sbb
jmp
xchg
mov
xor
inc
loopne
out
out
sbb
mov
clc
pop
pop
iret
std
jo
fistl
ss
push
movsb
je
popa
push
call
sub
out
std
iret
in
stos
adc
aad
sub
cmc
movl
add
cwtl
loop
arpl
add
hlt
enter
js
push
outsl
mov
scas
rorl
fisubrs
jmp
lahf
insl
add
fwait
aam
jb
lcall
pop
adc
in
out
dec
jmp
addb
popf
pop
cmp
and
dec
in
out
xor
add
mov
sub
aas
jge
push
jge
xchg
stos
add
insb
inc
lret
sahf
vmovntps
xchg
sub
cli
out
pushl
fisubrs
mov
fnstcw
sahf
inc
xor
dec
popa
and
daa
test
insb
roll
pop
xor
call
adc
lret
mul
daa
movsb
imul
cmp
repz
mov
pop
outsb
mov
insl
icebp
xchg
movsl
rol
divb
testb
test
push
dec
sbb
popa
ret
out
cmp
and
mov
jns
jbe
out
mov
sub
fs
pop
sbb
clc
sub
or
scas
inc
mov
out
out
sbb
push
xor
xchg
mov
add
cmp
xchg
pushf
or
sub
stos
cltd
out
mov
mov
lock
mov
hlt
insb
mov
aam
and
test
fcmovnbe
xor
pop
mov
push
arpl
sbb
mov
dec
push
pop
mov
out
arpl
mov
mov
sbb
imul
divps
sub
hlt
sahf
cmpsb
ljmp
or
or
mov
pop
jb
cmp
or
inc
outsl
jmp
call
cwtl
jle
andl
and
rcl
inc
pop
into
pop
sbb
js
movsb
dec
lock
push
push
push
cmpsb
dec
pop
pop
xchg
and
sti
dec
jo
ficoms
js
fsubr
push
pop
push
pop
xlat
inc
popa
hlt
pop
stc
aad
sbb
adc
hlt
pop
cmc
inc
jne
push
xchg
fcmovne
cmpsl
bound
jl
push
cwtl
les
and
aad
cmp
sbb
cmp
pop
aam
push
aas
fdiv
movsb
pop
les
mov
movsl
adcl
mov
mov
cltd
and
call
lock
jnp
call
movsb
mov
pop
mov
rolb
dec
sbb
je
adc
test
fimuls
lds
stos
push
add
and
addr16
shlb
aaa
mov
jns
rolb
push
jno
cmpsb
or
repnz
std
imul
lahf
shrl
int3
adc
fiaddl
push
pop
cmp
inc
stc
lock
sahf
ljmp
mov
js
push
mov
pop
aam
inc
es
xchg
pop
xchg
addr16
xor
cld
das
jle
sub
pop
insb
lods
inc
roll
mov
dec
lcall
xor
cli
jmp
jns
mov
jmp
rcll
or
scas
sub
ljmp
popl
mov
ret
inc
jle
mov
bound
sbb
mov
out
ret
enter
aaa
push
and
push
push
mov
dec
rcrb
push
and
leave
out
mov
loope
add
ljmp
and
mov
sti
push
xchg
clc
in
fcomps
push
mov
imul
add
outsl
test
mov
xor
jne
std
and
movsl
mov
xor
xchg
js
int3
stos
fdivp
pop
lock
mov
jns
lret
add
cmp
jge
inc
cltd
add
inc
lret
mov
clc
fldl2t
popf
cmpsb
and
ljmp
add
scas
fcoml
cmc
pop
lock
mov
andl
sub
mov
push
inc
test
out
std
dec
push
test
stc
rcrb
out
mov
mov
pop
cs
mov
adc
rcrl
or
mov
bound
ljmp
cmp
push
into
xchg
cltd
das
mov
call
inc
jb
xor
pop
loope
sbb
sbb
or
clc
sub
addb
push
cmp
in
outsl
imul
mov
icebp
jmp
popf
cwtl
lcall
movsb
test
cmovge
mov
push
inc
fcompl
push
cs
pop
fidivs
mov
in
push
push
push
sbb
aad
aas
fs
mov
xor
jo
sahf
fistps
xchg
cmpsl
xor
dec
pop
mov
and
jne
jl
call
inc
xlat
leave
dec
cmp
xchg
xor
dec
dec
cmp
in
std
pop
push
ds
out
rclb
aad
mov
lods
leave
xchg
js
lret
add
stos
inc
jnp
mov
insb
and
pcmpgtd
sub
faddl
dec
dec
es
outsl
add
push
outsb
dec
in
jbe
pop
mov
sahf
jns
add
add
adc
bound
dec
mov
xchg
pusha
jnp
stc
ljmp
cld
cmp
mov
test
mov
test
inc
add
hlt
adc
imul
jmp
mov
pop
arpl
sbb
pop
jae
sti
xchg
xor
xor
push
jle
cwtl
mov
adc
mov
arpl
pop
rep
in
inc
jmp
fsts
in
in
arpl
jnp
in
mov
mov
mov
cmp
call
jns
xlat
dec
negb
mov
mov
movsl
subb
shlb
sbb
aas
jno
mov
xchg
bswap
outsl
test
sbb
into
mov
adc
out
dec
sti
or
sub
jge
fimuls
je
arpl
ds
push
mov
icebp
jo
clc
fldenv
add
sbb
call
fcompl
aad
cli
lcall
sub
and
xchg
or
inc
inc
pop
lods
incl
jp
mov
pop
fsts
sbb
inc
or
outsl
dec
push
ljmp
sub
xchg
adc
cmp
adcb
fiadds
repz
imul
sub
add
sbbb
push
outsl
movsb
nop
dec
and
out
cmp
dec
bound
mov
inc
mov
or
mov
inc
movsb
aam
mov
dec
loope
in
aaa
pop
mov
aas
mov
ss
pop
mov
gs
rcrl
mov
sbb
popa
iret
sbbl
pusha
mov
mov
jne
inc
jb
push
leave
cld
gs
adc
dec
sbb
loop
mov
jmp
les
gs
imul
sub
sub
out
adc
sub
mov
insb
nop
arpl
mov
es
rcrb
cmp
outsb
mov
loopne
xchg
pop
push
adc
test
sub
dec
mov
dec
mov
sar
jg
shl
stos
js,pn
sub
jmp
test
addr16
dec
pop
pop
push
mov
scas
push
push
lods
out
std
xchg
leave
cli
or
ja
sub
outsb
push
into
pop
in
inc
lock
inc
popf
das
clc
mov
cmp
icebp
jno
out
lods
imul
push
pushf
sbb
enter
sub
mov
cli
ret
dec
cs
sti
inc
popa
and
arpl
xor
in
mov
push
xor
out
pop
push
jp
loope
push
cs
aam
xor
cmp
sti
mov
lods
push
push
nop
rorb
or
cmpsb
xlat
xchg
push
scas
xor
or
mov
je
xor
mov
fdivl
xor
imul
icebp
cmpb
imul
cmp
fdivp
std
mov
repnz
adc
dec
mov
inc
fs
jp
jecxz
in
adc
nop
sbb
addb
push
mov
mov
dec
stos
add
dec
test
cmp
popa
lods
dec
mov
fldcw
jae,pn
scas
test
scas
js
cmpsb
ficoms
loopne
or
push
leave
pushf
adc
lcall
daa
orl
addb
pop
cwtl
mov
cmc
xchg
int3
push
fstpt
fs
inc
push
xor
sub
pop
ja
mov
cmpsb
sbb
add
jns
adc
out
mov
dec
lcall
push
adc
stos
cmp
sub
in
dec
fdiv
neg
int3
sub
cs
stos
jne
mov
cltd
and
sbb
and
jmp
jno
pop
adc
mov
mov
sbb
ret
lret
push
mov
adc
add
jb
ret
cmp
and
jb
xor
cmp
jb
xor
loopne
daa
cli
or
fstpt
xor
or
std
fnstenv
mov
fisubs
in
leave
adc
cmp
or
dec
cmp
lods
loope
jnp
xor
jg
lret
sub
inc
loop
in
cmp
test
sbb
adc
inc
sti
test
cli
mov
lea
inc
or
fwait
and
lahf
sar
fistpll
outsl
adcb
push
pop
daa
xor
mov
lret
sbbb
hlt
insl
repnz
stos
mov
pop
mov
ds
xchg
inc
ja
nop
xchg
push
inc
and
mov
jbe
sarl
stos
cmpsl
jge
mov
mov
je
insb
arpl
jmp
fwait
push
xchg
lahf
sbb
fisubl
push
xor
ss
lds
push
mov
jne
pop
inc
loop
std
pop
leave
pop
jbe
add
adc
jecxz
int
cs
dec
jl
ret
sbb
push
ror
pushf
scas
inc
lods
pop
cmp
or
cmp
mov
shll
mov
subb
mov
xlat
push
movsb
popl
loop
out
shr
dec
sbb
jg
jns
mov
inc
testl
lahf
push
sub
and
mov
fcompl
mov
dec
sub
fs
test
testl
mov
add
and
dec
ret
xchg
je
cmp
mov
mov
sahf
adc
fxch
out
cmp
movsb
pop
adc
mov
xor
jecxz
xchg
lahf
rcrl
mov
pop
cmp
xor
xchg
dec
andnps
cmpsb
stos
fiaddl
int
cmp
inc
and
inc
pop
fs
push
add
jb
push
adc
cmp
push
in
xor
inc
adc
jp
cmp
xchg
loope
shrb
or
inc
out
pop
mov
cmp
repnz
shlb
xchg
push
push
jo
pop
out
movsl
lret
cwtl
jmp
lods
jecxz
inc
scas
add
in
mov
inc
pop
jmp
rcll
imul
icebp
xor
mov
aaa
je
sbb
mov
aad
cld
xor
in
fmuls
out
sti
lcall
adc
imul
loop
jecxz
mov
in
dec
mov
in
outsb
add
addr16
jbe
sarb
sbbb
loopne
inc
les
or
leave
sti
xchg
cltd
test
jns
std
aad
neg
shll
mov
or
xor
scas
cwtl
aam
xchg
adc
or
lea
pop
inc
int3
mov
sti
into
hlt
push
fdivl
xor
std
scas
cmp
rorb
aas
fstl
stos
stos
inc
mov
insl
inc
fiadds
lea
jns
mov
pop
xor
or
sub
test
jb
test
and
xor
pop
mov
adc
ret
push
push
mov
xor
and
lahf
int
fwait
mov
xorb
dec
out
outsl
push
nop
out
cmc
push
add
cmpsl
xchg
push
dec
mov
int3
inc
jbe
pop
popa
cmp
sub
xchg
fisubrl
adcl
test
dec
stc
in
sahf
mov
add
sbb
xor
ljmp
outsb
jl
rcrl
in
mov
pop
mov
std
int
fbstp
jae
lock
notl
insb
dec
lea
xchg
and
mov
mov
xchg
mov
inc
push
xchg
pop
push
lods
loopne
xor
imul
mull
push
ljmp
roll
roll
outsb
dec
in
mov
push
xchg
mov
push
in
xor
add
mov
xchg
or
ss
inc
js
stos
scas
hlt
push
adc
sti
aam
orb
in
ljmp
stos
adc
cmp
fcoml
inc
jnp
mov
push
mov
jecxz
or
out
lds
xor
aas
pop
pop
repnz
test
xor
sub
mov
add
sbb
add
fsts
push
call
dec
mov
inc
das
daa
stos
out
cmp
addb
test
test
xor
jle
jmp
scas
mov
xor
cmp
mov
imul
cmp
mov
pop
inc
mov
popa
xchg
dec
cmpsl
insl
xchg
mov
jno
aas
clc
jmp
mov
pop
dec
mov
ss
mov
test
and
mov
jnp
cli
fbld
fadd
jge
jmp
add
notl
movsl
jle
sarb
jmp
sahf
pop
test
and
jge
jl
lods
pushf
inc
sub
sbb
pop
imul
scas
dec
inc
or
aam
xor
popa
adcl
ljmp
mov
mov
mov
cmpl
bound
push
repnz
jbe
sbb
in
jecxz
dec
int3
std
pop
adc
cmp
xorb
mov
mov
cmpsl
rcrb
pop
aam
inc
inc
add
ljmp
fsubs
jle
repz
jnp
cwtl
data16
and
mov
call
adc
push
and
dec
jne
pushf
lods
mov
movups
popa
mov
pop
fisubrs
mov
lock
loop
leavew
sbb
movsb
xchg
cld
loope
add
mov
mov
push
push
shlb
pop
fld
push
popa
adc
or
in
sbb
out
sti
sbb
fldpi
xchg
cmp
xor
inc
add
or
dec
jmp
je
add
add
divb
sub
aam
add
ljmp
sti
jnp
test
test
xchg
and
pop
pusha
cmp
jne
lahf
dec
in
sub
mov
adc
cmpsb
inc
and
or
call
test
loopne
rol
add
pop
mov
movsb
popa
xchg
mov
notb
jge
dec
adcl
pop
dec
js
std
aas
pop
sub
or
fs
pop
or
aas
xor
lret
push
out
icebp
cmp
mov
jge
ds
or
inc
or
inc
sub
pop
je
movsl
nop
xchg
cwtl
xchg
jnp
lods
or
jecxz
or
xchg
decb
xor
or
sub
imul
inc
jg
mov
ja
mov
xor
push
xchg
dec
je
cmp
dec
shll
xchg
out
iret
xor
scas
push
adc
pop
fs
pop
mov
mov
push
mov
xchg
push
push
hlt
add
xor
mov
dec
loopne
and
sbb
dec
lcall
pop
ret
lahf
fbstp
push
sub
subb
aad
inc
cmp
push
push
add
pop
jge
out
add
das
push
xchg
mulb
dec
or
outsb
dec
xchg
loop
nop
in
lcall
push
mov
push
leave
jmp
add
test
cmp
xor
sbb
mov
or
jno
mov
aaa
ljmp
jae
test
and
scas
or
pop
out
and
arpl
push
lods
inc
test
sahf
pop
je
loopne
sahf
xor
outsl
ljmp
adc
inc
push
and
sub
dec
sbb
popa
scas
movsb
xchg
sbb
data16
mov
hlt
adc
js
clc
push
push
loopne
or
push
adc
cmpl
sub
mov
inc
ss
push
lods
pop
mov
jbe
not
test
add
mov
leave
mov
rcr
test
push
jl
mul
inc
mov
std
in
xor
aas
in
fsubp
cltd
adcb
sbb
adc
lds
jbe
ret
je
nop
cmp
xchg
push
or
dec
dec
or
sbb
dec
iret
jl
and
inc
cmp
cld
sbb
aaa
push
jl
imul
jecxz
jb
loop
add
xchg
mov
inc
cmp
push
pop
dec
js
cmc
es
clc
mov
rcrl
ret
push
scas
ss
add
scas
rorb
shlb
addr16
xchg
movsl
enter
pusha
inc
cmp
jl
cwtl
scas
les
pop
loope
push
stc
mov
dec
sub
or
stc
ss
mov
sysexit
or
xlat
or
gs
push
repnz
aam
mov
push
leave
xor
mov
frstor
sbb
imul
xlat
jmp
push
js
std
or
lret
sub
cs
stos
xchg
sbb
sub
repnz
imul
ret
pop
inc
push
xchg
adc
sub
in
push
mov
push
jecxz
lods
and
cli
lock
inc
add
lcall
lahf
inc
movsb
unpckhps
xchg
ss
jmp
daa
or
lret
inc
insb
jae
mov
xorb
movsl
clc
xlat
or
push
stos
imul
or
fs
imul
test
cwtl
ja
movsl
std
ficoms
rcrb
bound
mov
repnz
out
outsb
aad
sbb
or
or
ja
mov
adc
jge
xchg
shr
sbb
push
ss
cmc
dec
loop
imulb
lret
push
xor
add
fistps
push
or
or
or
outsb
jp
fnstcw
mov
sahf
sub
fs
ret
in
jae
frstor
or
rorb
ja
push
mov
movsl
out
xor
push
inc
je
das
shrl
scas
std
stos
imul
xchg
loop
arpl
fstpt
shlb
sub
cmp
inc
stos
inc
jge
cmp
inc
std
pop
xor
push
enter
jmp
lock
add
pop
sbb
rorb
cli
pop
fsubrp
mov
pushf
insb
loopne
sbb
dec
sahf
sub
push
sub
lret
pop
mulb
addb
mov
and
out
sbb
jl
push
sbb
mov
xor
inc
push
fcmovnb
fs
jbe
scas
and
pusha
inc
in
loope
enter
loope
sbb
sbb
jo
add
mov
and
jae
daa
cs
mov
bound
inc
ret
stos
dec
call
test
jecxz
data16
cmp
add
xchg
aam
jns
rcrb
pop
and
das
repz
das
out
mov
dec
pop
lret
scas
divb
sbb
mov
fdivrp
pop
enter
aaa
or
leave
xchg
jg
hlt
and
sub
inc
dec
jae
dec
adc
mov
cmc
loopne
hlt
fs
cli
js
movsl
in
fdivp
jecxz
cmpsb
rorl
jns
sub
subl
push
lods
adc
outsl
xor
ja
shlb
dec
ret
mov
cmp
and
mov
sub
outsb
jb
stos
es
lahf
sbb
dec
fldcw
scas
sbb
sub
adc
cmp
dec
pop
test
mov
dec
pop
sbb
cmp
and
dec
push
xlat
fists
popf
in
leave
dec
sub
xchg
test
adc
dec
ficoms
jecxz
pop
testb
orb
shlb
aad
cltd
andl
mov
addr16
mov
pop
sbb
cmp
negb
or
xor
pop
stc
push
fsubs
jl
or
jae
push
dec
push
mov
and
ret
bound
enter
lcall
sub
xchg
loopne
bound
jecxz
clc
das
push
es
in
lea
sub
call
les
cld
iret
adc
ljmp
das
out
cmp
aaa
cmpsl
xor
xorl
mov
pop
lret
test
mov
cli
sbb
test
dec
pop
mov
mov
ja
ljmp
inc
ja
adc
jne
insb
idivb
ds
popf
pop
inc
in
decb
cmp
stc
insl
negl
pop
dec
xor
and
outsb
adc
pop
mov
add
and
sub
xor
push
int3
cmpb
or
push
shlb
or
into
sub
sbb
adc
das
pop
pop
xor
sbb
fs
test
nop
jb
in
test
jo
mov
pop
test
test
sbb
popf
and
sti
xchg
xor
movsl
push
aaa
mov
xlat
push
pop
sbb
dec
pusha
lahf
inc
pop
sbb
cmpb
popa
push
and
jno
sbb
cmp
dec
or
out
mov
in
push
and
es
aad
or
cmp
das
add
lret
or
jmp
and
mov
and
mov
mov
shrl
adc
jecxz
imul
insl
mov
sub
cwtl
cmp
xor
repnz
add
pop
outsl
je
pop
sub
cmc
int
mov
dec
xlat
push
cld
es
xor
inc
int
ds
sbb
in
jmp
cmp
lock
cwtl
stc
push
push
lds
insl
or
les
xchg
dec
push
jno
mov
ljmp
imul
add
add
or
mov
sarb
xor
int
xchg
std
jb
shlb
test
cld
and
scas
jmp
pop
int
cmc
test
iret
sbb
push
xchg
and
mov
jb
inc
pop
sarb
jno
and
mov
sbb
sbbb
pop
adc
bound
xor
and
or
dec
popf
out
pop
or
jl
sarb
jle
std
inc
lods
xchg
cmp
out
adc
cmp
icebp
sub
xchg
ljmp
or
addr16
mov
jle
imul
clc
je
xchg
movsl
jno
mov
sbb
out
push
dec
sub
cmpsl
add
lret
and
dec
jno
cmp
jge
scas
ja
pop
mov
lods
lea
stos
xlat
fs
and
fnstsw
push
out
ja
rorb
mov
add
int3
mov
xor
lods
ljmp
inc
mov
sbb
cmpb
pop
push
add
imul
cltd
call
mov
xchg
sti
xchg
adc
jae
push
fidivrl
mov
jg
jb
outsl
movsb
adc
sub
fsts
push
xchg
flds
dec
in
adc
lds
insb
jbe
jmp
jecxz
mov
imul
ljmp
js
or
dec
and
cmp
sbb
insb
xchg
ret
popf
fdivp
mov
clc
int
stc
lods
inc
and
test
xor
fcmovnb
and
cmpsb
xor
ret
cmp
fldl
cmc
shlb
push
lcall
push
into
scas
mov
test
or
push
dec
sub
bound
mov
sbb
aaa
jle
push
or
mov
loope
pop
rcrb
mov
test
test
pop
jb
push
push
cld
cwtl
and
adc
add
pop
cmp
or
int3
sahf
int3
clc
std
pusha
mov
pop
jo
sti
es
push
push
pop
in
mov
stc
xor
ljmp
loope
lcall
inc
push
cmpsl
xchg
add
lods
in
sbb
mov
inc
add
dec
out
inc
arpl
inc
jb
mov
xchg
ljmp
xchg
mov
cmp
es
outsb
xor
sub
push
inc
paddb
loop
popa
pop
dec
stc
push
roll
and
adc
pop
rcl
pop
test
mov
inc
or
ja
mov
loope
or
xor
adc
pop
push
dec
cli
dec
addr16
in
pop
aas
and
or
rorl
cmp
sub
negl
int
int
ss
sbb
push
push
loopne
cmp
pop
in
inc
incb
xchg
ljmp
aaa
push
lds
pop
mov
or
dec
add
pop
daa
lods
dec
inc
fcompl
xor
push
sub
fdivs
dec
lret
cmp
loopne
xchg
insb
rcrb
add
out
ljmp
dec
daa
inc
xchg
jnp
inc
dec
sub
out
sub
wrmsr
cmpsl
lret
daa
adc
mov
push
jg
sbb
adc
cmp
lock
push
popa
and
xchg
ljmp
aad
neg
mov
mov
lcall
mov
cmp
daa
repnz
das
mov
fnstsw
mov
outsl
or
cmp
pop
ror
inc
sbb
mov
fimull
pop
or
xchg
sub
sbb
daa
sbb
les
jno
xchg
inc
cli
scas
aaa
nop
out
cmp
sbb
pop
out
add
sbb
push
fs
bound
push
in
ja
int3
sbb
xchg
mov
mov
shll
dec
inc
into
imul
xchg
jnp
dec
sub
mov
lcall
test
mov
lds
aas
stc
jb
or
shrb
in
cmp
push
aas
ja
fcoms
stos
imull
les
sub
stos
or
or
add
test
mov
mov
and
mov
bound
dec
sbb
test
fwait
mov
adc
jecxz
mov
add
cmpsb
out
mov
sti
dec
divb
in
mov
enter
movsl
push
mov
repnz
inc
subl
in
add
cmp
fbld
jbe
das
in
sbb
mov
push
int3
cmpsb
popl
aad
ja
imul
fiadds
sub
leave
aas
inc
out
sarb
idivl
inc
addr16
cmp
xor
mov
flds
pop
jp
dec
add
out
dec
dec
inc
mov
js
add
test
icebp
sbb
aaa
mov
xchg
test
mov
push
mov
and
pushf
add
inc
adc
loop
push
hlt
repnz
mov
dec
pop
adc
adc
push
fnstsw
addr16
ret
mov
inc
xor
sbb
andl
jnp
or
and
mov
rcrb
test
dec
or
jl
test
ja
movsl
insb
xor
imul
pop
inc
sbb
add
out
sub
xor
xor
xacquire
mov
xor
aad
cmp
fcmove
movsb
dec
inc
fadds
push
sbbl
out
into
push
push
inc
push
adc
mov
mov
loop
xchg
je
into
pop
ja
mov
cmp
mov
std
add
mull
push
imul
push
add
pushf
in
and
sbb
shll
cmpsl
cmp
nop
imul
data16
orb
push
jecxz
mull
add
xor
mov
sbb
iret
js
or
adc
jge
cmp
lds
out
add
stos
mov
cmp
mov
hlt
je
inc
and
das
bound
fucom
imul
dec
mov
data16
repnz
adc
lret
es
push
out
test
cmpsb
popf
movsl
push
call
or
dec
imul
out
jno
sbb
push
notb
mov
cmpsb
insb
vunpckhps
lret
js
sar
hlt
icebp
and
add
push
sahf
push
pop
in
fwait
insb
je
inc
les
ss
sbb
repnz
mov
lock
test
aas
pop
lods
mov
jg
cmc
jae
sbb
lods
rcll
adc
xchg
cli
jno
imul
setb
rcr
push
push
mov
rcr
and
xchg
adc
sarl
test
mov
push
cmp
mov
outsl
pop
in
mov
push
lods
cmp
lock
xchg
add
ret
sub
add
fnstsw
xchg
xor
pop
stc
mov
push
sbb
repnz
jmp
jo
and
mov
dec
jecxz
push
xor
dec
pop
inc
divl
insl
jl
add
mov
push
aaa
xchg
cmp
xchg
fcomps
fsubl
scas
mov
nop
sbb
mov
mov
into
pop
clc
fwait
movaps
jne
mov
in
aam
push
mov
ficomps
mov
test
push
lahf
mov
xlat
and
mov
mov
jno
fnsave
pop
lret
dec
push
xchg
fwait
iret
lahf
jae
cmp
push
add
jl
and
outsl
data16
aaa
inc
push
sub
popa
es
sub
loop
xchg
scas
push
jno
movb
test
mov
and
dec
in
inc
or
cltd
imul
mov
mov
cltd
aad
jne
stos
das
fcompl
fdivr
sbbl
testb
mov
add
dec
or
sahf
cmp
sbb
add
jmp
or
aam
sbb
xchg
or
movsl
jmp
or
jg
pusha
sub
rorb
lret
lods
dec
jle
inc
fs
add
call
mov
push
jmp
mov
divb
int3
pushf
sarb
scas
sbb
mov
jge
rcrl
sub
cltd
xlat
add
mov
inc
lcall
into
dec
mov
jle
mov
mov
xlat
and
popa
add
pop
mov
cwtl
xchg
lcall
lock
cld
arpl
adc
mov
int3
push
ret
sbb
gs
cli
cmp
cmc
shrb
or
push
sub
mov
push
mov
add
mov
mov
repz
sbb
ficompl
hlt
sbb
mov
and
andl
push
das
cmp
aad
sti
mov
mov
movsb
int3
cmp
sbb
imul
cwtl
stc
call
rclb
dec
sbb
cli
sub
cmp
andb
gs
xlat
test
pushf
roll
cli
xchg
data16
mov
pop
jae
mov
rorl
mov
jl
int3
shr
cmp
sub
xor
fwait
ret
gs
cmp
scas
gs
clc
pop
mov
mov
mov
lock
aas
shrb
daa
imul
in
sbb
ja
fimull
pop
mov
loop
xchg
cwtl
insb
mov
mov
scas
lods
and
dec
jbe
lret
out
fmulp
fdivs
comiss
test
pop
xor
scas
or
mov
repz
scas
imul
pusha
xchg
das
mov
pop
add
sub
iret
sub
ret
int
and
mov
loopne
fwait
leave
xchg
push
mov
dec
mov
sbb
sub
scas
dec
mov
loopne
pop
push
fistpll
xchg
and
rorb
mov
dec
mov
inc
addl
mov
jno
xchg
jne
lcall
out
mov
pop
fcmovbe
inc
push
and
mov
int
enter
mov
xorb
stos
mov
nop
xor
or
inc
sub
popf
out
xlat
jo
lret
sahf
mov
fcomp
mov
mov
adc
xor
xor
mov
adc
icebp
adc
divb
cmpsb
hlt
and
mov
sub
mov
xor
in
xor
sub
and
imul
lods
div
mov
test
adc
jmp
sbb
ljmp
fs
push
das
push
fsubs
mov
mov
sbb
fs
aas
adc
ror
xchg
push
rolb
sbb
decb
js
movsb
sub
lds
adc
and
lock
push
repnz
in
xor
pop
test
cvttps2pi
xchg
pop
imul
std
jg
addb
mov
aas
xchg
pushf
cmp
mov
shl
lahf
jecxz
sarl
or
push
xor
mov
add
adc
je
cmp
xlat
fstps
mov
js
in
or
int3
sbb
adc
insb
xor
cs
and
lock
push
dec
stos
repz
sub
mov
dec
pop
mov
data16
rcrb
add
aaa
std
into
fiadds
push
add
std
insb
sub
mov
jmp
ja
and
gs
pop
pop
out
jne
repz
movb
out
lods
addb
lods
cmp
pop
sahf
push
inc
adc
dec
jmp
jecxz
mov
mov
mov
ds
scas
dec
orb
adc
push
nop
cmpsb
sbb
inc
push
in
xchg
and
arpl
les
jge
adc
jb
sbb
dec
out
cmpb
mov
xor
xor
outsb
dec
and
movsb
arpl
push
scas
popf
mov
pop
fs
movsb
nop
bound
cmc
aam
xchg
loopne
lcall
sbb
push
pop
mov
mov
scas
enter
adc
push
cltd
and
lcall
inc
out
mov
imul
or
mov
inc
outsb
sets
ret
imul
into
lahf
out
push
inc
fistl
clc
aaa
fstpt
inc
mov
cwtl
es
jae
test
aad
jmp
outsl
or
call
dec
jp
bound
dec
mov
int
or
lahf
adc
out
cmpsb
ss
add
imul
in
mov
bound
sbbb
aas
fsts
dec
sub
add
sub
mov
push
les
xchg
sub
in
popf
cmpsb
xchg
pop
xor
push
mov
and
push
in
mov
lock
in
fnsave
sub
or
add
and
je
test
test
inc
stc
dec
dec
push
inc
jle
xchg
ret
dec
pop
push
pop
xchg
or
ret
add
mov
andb
and
icebp
lahf
mov
fiadds
xchg
insl
sub
mov
and
xor
sub
sbb
insb
dec
jmp
decl
stos
push
sahf
mov
rolb
das
pop
in
xor
mov
fwait
pop
sub
inc
mov
push
mov
adc
and
lret
mov
mov
mov
test
imul
aam
out
pop
dec
dec
sbb
aam
sub
stc
adc
xor
xor
adc
cmp
cmp
andl
jmp
aas
lcall
add
cmp
jns
fisubrs
mov
into
fsts
adc
pop
int3
xor
pusha
add
sarb
dec
inc
scas
popa
mov
insl
pop
pop
sbb
mov
push
xchg
out
jnp
pop
add
mov
rol
lea
ret
stc
aad
xchg
adc
inc
in
mov
cmp
inc
push
dec
push
sbb
push
mov
mov
cs
dec
subb
hlt
inc
sbb
mov
jno
outsl
mov
xor
stos
xor
push
mov
movsl
cmp
inc
out
adc
imul
add
sub
sbb
roll
add
mov
jecxz
adc
sub
cmpsl
jo
xlat
shrl
pop
add
push
insl
push
cli
ljmp
mov
cmp
mov
adc
inc
adc
or
bound
lods
sbb
loop
cmpsb
je
hlt
push
inc
sub
insl
or
jge
int3
mov
in
lods
insl
orb
outsb
sub
sub
addb
xor
pushf
cmp
push
dec
imul
clc
adc
adcb
jbe
push
gs
insl
ss
mov
sub
dec
aas
pop
mov
jno
mov
jns
push
shrb
mov
add
pop
pop
jle
out
nop
pop
xchg
aas
xlat
shlb
push
add
outsb
bound
xchg
repnz
mov
mov
xor
jg
fidivrl
imul
iret
sub
call
pop
sahf
mov
dec
adc
pop
aad
cmpsl
je
sub
test
sbb
das
into
insw
data16
add
icebp
dec
pop
cmp
rcrl
push
stc
mov
dec
push
jg
pop
int3
pop
xor
or
adc
pop
add
or
pop
aam
dec
jmp
repnz
xchg
les
out
xor
and
andl
arpl
mov
icebp
and
adc
xor
cwtl
inc
roll
adc
js
stos
insb
ret
inc
iret
stos
xor
mov
mov
test
dec
jo
jl
add
dec
xchg
fsqrt
xor
ror
mov
ficompl
das
imul
jo
addr16
mov
inc
test
mov
cmp
lea
inc
mov
sbb
movsb
or
insl
pop
jne
enter
and
ss
aam
je
loope
sbb
pop
or
into
fldl
scas
nop
fsubs
push
mov
test
enter
xor
lds
dec
and
addl
mov
inc
stc
or
jmp
xchg
xchg
xchg
xchg
and
xchg
xchg
jle
mov
test
test
test
movsb
adc
jp
adc
ds
lret
aad
test
mov
test
nop
adc
int
mov
call
hlt
pusha
lods
xchg
push
xor
pop
clc
mov
or
shlb
adc
adc
inc
pop
add
adc
in
inc
mov
mov
hlt
xchg
jne
mov
sub
sbb
adc
into
fldcw
in
sub
xor
mov
push
ds
inc
mov
icebp
add
aad
movsl
cmp
cmp
pop
cmpsl
sarl
jns
movsb
push
clc
repnz
dec
cmp
mov
inc
daa
outsb
subl
cmp
addr16
jge
jne
and
pop
roll
push
sbb
jp
dec
int
xor
jmp
push
sbb
mov
mov
cltd
lock
adc
das
mov
sub
sub
and
std
gs
cmp
stc
imul
jmp
aam
push
or
ljmp
mov
fidivl
je
pop
or
test
inc
or
xchg
mov
jg
rcr
pop
dec
scas
cwtl
hlt
jp
mov
xlat
mov
daa
or
rolb
les
cmp
adc
jl
inc
std
call
repz
mov
lds
filds
inc
lcall
dec
test
dec
movsl
gs
lods
lea
pop
out
sbb
cmpl
test
fnstenv
dec
rcl
jb
pop
push
test
sbb
addb
xchg
nop
mov
ss
movsl
jnp
call
and
inc
push
pop
xchg
cmp
push
cmp
imul
pop
clc
and
mov
dec
dec
dec
push
iret
xlat
shl
cltd
mov
xchg
jo
mov
jl
jle
lods
or
dec
dec
dec
xor
arpl
daa
sbb
mov
jecxz
lods
dec
gs
rolb
leave
lea
ds
cli
xlat
pushf
mov
fwait
mov
add
lock
shlb
mov
mov
sbb
ja
push
imul
outsb
rcll
push
and
add
cmp
insb
cmpsl
sbb
xchg
daa
fwait
popf
xchg
movswl
mov
popa
sti
orb
xchg
loope
sbb
sbb
add
inc
in
inc
mov
pop
dec
or
sbb
adc
fsubrl
scas
dec
arpl
add
pop
lret
aaa
les
aaa
xchg
in
mov
sbbb
out
fs
sub
pop
mov
mov
sarl
jnp
and
popa
adc
jl
push
mov
sarb
mov
lahf
mov
xchg
mov
mov
lret
mov
leave
push
cld
clc
and
mov
stc
sbb
sti
sub
cltd
and
mov
mov
or
into
scas
mov
mov
das
push
cmp
js
mov
scas
adc
cmp
stos
push
mov
mov
jge
xor
mov
inc
pushf
xchg
mov
jns
std
test
adc
jbe
fisubrl
mov
lret
push
mov
les
sub
sbb
test
fimull
aad
mov
mov
test
sub
mov
outsl
mov
bound
mov
mov
sub
xor
push
sti
cmpl
pop
lods
or
int
jbe
neg
push
sti
mov
mov
insl
jbe
pop
add
xchg
lods
jp
mov
cmpsb
pop
and
stos
movsb
lds
ficompl
mov
pushf
ret
icebp
cmp
pop
dec
nop
cmpsl
cmp
cmp
iret
in
js
cmp
adc
sub
out
mov
xchg
xchg
push
add
push
jns
outsl
or
push
jmp
mov
pop
mov
jns
lds
in
movsb
shrb
push
add
cmp
iret
cli
jecxz
jge
jmp
ret
pusha
stc
jg
pop
cld
ret
scas
inc
arpl
or
cli
insl
xchg
imul
arpl
adc
out
fwait
shl
sbb
stc
inc
loopne
mov
rcll
pop
inc
lcall
xor
mov
push
subb
mov
inc
imul
or
lret
push
or
lea
mov
loop
push
adc
xor
js
adc
sbb
sbb
in
sbb
push
inc
in
lea
lods
mov
fwait
gs
pusha
shll
addr16
mov
cmc
xchg
adc
fmuls
je
sar
pmuludq
sub
sub
aaa
lcall
out
xlat
cmp
cwtl
lods
push
divb
mov
push
sbb
insb
in
out
add
xchg
push
cmp
xchg
push
ret
test
mov
in
xorl
outsb
add
lcall
dec
jbe
push
movsl
call
cmpsb
lds
adc
lahf
popf
push
scas
and
repz
pushf
nop
fwait
cmpsl
iret
cld
adcb
jp
xchg
xorb
data16
xchg
mov
adc
xlat
add
or
fwait
add
test
ss
icebp
jo
out
jmp
call
pop
pop
adc
push
cmp
push
jnp
cmp
mov
adc
loope
dec
ss
adc
outsl
outsb
mov
xchg
iret
aas
xlat
test
lock
ja
cmp
sbbl
shl
xor
push
and
aam
scas
jbe
mov
xor
mov
xor
stos
pushf
push
sub
mov
imul
int
pop
jbe
lds
and
in
sub
subl
jge
xor
jnp
popf
loope
fstl
jbe
pop
test
les
dec
call
cmpsl
es
cmp
pop
cmp
outsl
jp
out
pop
out
das
out
cmp
dec
fwait
cs
xchg
sbb
out
jo
dec
mov
cmp
mov
sub
dec
cmpb
pop
and
repnz
test
mov
ljmp
ljmp
xor
dec
and
xor
xor
movsl
aaa
mov
outsb
cwtl
mov
xor
jbe
xchg
dec
cwtl
fnsave
inc
aad
lahf
insl
mov
xor
dec
mov
mov
add
xchg
test
pop
adc
fistps
int3
insl
xor
jecxz
pop
fisubs
pop
int
xchg
popf
in
shlb
mov
insb
loopne
lret
int3
xchg
cmpsl
out
testl
arpl
out
push
mov
cli
lods
mov
or
daa
jmp
ret
in
stos
pop
mov
imul
mov
lahf
mov
jb
mov
lock
dec
sub
jecxz
sahf
sub
cmpsb
fimuls
ret
aas
lret
and
fcoms
push
fisubs
rcrb
clc
jae
xchg
idivb
and
stos
jno
cmp
push
mov
lock
add
jbe
and
imul
lods
enter
xor
daa
pop
adc
jl
sbb
ljmp
in
stos
in
pop
sub
jne
jecxz
pop
outsb
inc
and
incb
fwait
push
dec
dec
das
loop
cli
lret
mov
mov
inc
out
fwait
mov
sub
jo
inc
cmp
xchg
sarb
pop
add
sbb
out
sti
mov
mov
mov
adc
int
xchg
repnz
pop
arpl
xor
icebp
xchg
xchg
sarb
shll
lea
rep
test
add
and
mov
xchg
loopne
inc
jnp
cmpsl
cmp
or
sub
cmp
cmp
outsb
cwtl
outsl
scas
daa
xor
jge
popa
lcall
stos
cmpsl
cmp
aas
push
es
cmp
mov
cmpsl
add
in
push
aam
fisubrl
cmc
nop
jbe
andb
pop
imulb
inc
xchg
push
jge
sbb
xor
xor
push
adc
jbe
loopne
cmpsl
push
lcall
jne
addr16
xchg
mov
sbb
je
add
and
jmp
dec
scas
inc
xchg
aam
repnz
push
sbb
repnz
mov
fiaddl
divl
mov
push
or
test
mov
leave
mov
sti
subl
adc
inc
inc
or
sub
push
sti
push
orb
mov
jne
pop
inc
pop
imul
jno
mov
mov
cmp
jae
lret
aaa
and
loope
push
xchg
or
mov
xor
test
jp
dec
sub
lock
fsubrl
push
cld
mov
sbb
bound
sbb
aam
lret
push
stos
movsb
mov
pop
jae
jecxz
test
idivl
push
in
xchg
push
jle
les
add
xchg
pop
in
stos
ljmp
cs
hlt
fnsave
cmc
or
jg
aaa
cmp
xor
mov
xchg
out
or
enter
mov
xor
push
sub
leave
cmpl
or
ficomps
mov
and
nop
mov
jle
cld
int3
xchg
lret
push
mov
sub
lret
xor
cmp
inc
sub
imul
inc
outsb
hlt
nop
adc
iret
xlat
push
leave
pop
das
cmp
mov
jg
or
sub
rclb
xchg
mov
sub
std
sub
mov
pop
mov
outsb
mov
popa
and
sbb
stc
repz
mov
dec
xor
adc
cmp
and
lret
or
in
fadd
jne
xor
jbe
into
mov
leave
mov
inc
stc
sub
test
fisubrs
inc
xchg
xchg
adc
push
xor
in
mov
into
ja
jo
fidivrl
mov
repnz
ret
pushf
jo
stos
or
mov
les
and
mov
jno
outsl
sub
mov
sbb
icebp
aaa
mov
stos
jne
nop
mov
test
xor
sub
int3
jb
shrl
sbb
clc
arpl
push
mov
lods
dec
jg
sbb
mov
xchg
lcall
fisttps
xchg
inc
dec
test
cli
or
xor
lcall
lock
dec
nop
mov
ficompl
mov
mov
into
pop
xorb
lahf
xchg
into
or
inc
sbb
pop
icebp
sbb
lcall
andl
mov
push
sbb
dec
mov
mov
repnz
adc
add
loop
xchg
clflush
jnp
push
rorl
clc
mov
js
inc
ja
arpl
push
test
fdiv
add
cmc
adc
xchg
mov
into
mov
dec
jne
or
adc
sarb
adc
mov
xchg
adc
mov
push
pop
fildll
jnp
out
imul
stos
out
mov
pop
mov
outsb
out
mov
pop
aam
push
inc
fcompl
dec
mov
adc
pop
add
sarl
imul
mov
shrb
jnp
dec
jnp
std
push
sbb
push
out
pop
scas
filds
lret
or
sti
mov
fsts
movsb
jbe
daa
insb
sbbb
repnz
mov
flds
test
cmpsb
out
popa
or
cmp
and
in
adc
inc
push
dec
stos
mov
cli
pop
test
ljmp
dec
xor
call
leave
xor
int
dec
stos
xchg
mov
popf
out
xor
divl
dec
shlb
cmp
sbb
jno
push
mov
jns
add
jns
ss
sub
pop
mov
adc
pop
lea
lock
into
cmpsl
rorl
adc
jo
dec
mov
lcall
mov
push
jmp
fsincos
jp
dec
jmp
test
adc
cld
push
cmp
imul
out
pop
lods
sti
mov
or
mov
stos
lcall
mov
movsb
push
dec
test
subb
push
das
mov
inc
or
inc
adc
lds
inc
imul
adc
outsb
xchg
dec
push
scas
ror
xor
mov
test
push
jg
jnp
sar
roll
arpl
ret
mov
arpl
sti
iret
sbb
scas
sahf
je
xchg
data16
stos
mov
sub
dec
and
cld
pop
adc
cmpsl
pusha
jle
sub
call
inc
cmpsl
inc
mul
ret
push
hlt
dec
mov
or
cwtl
xor
repnz
jg
das
push
jbe
ss
fsubrp
jb
scas
test
push
fs
loope
push
xchg
pop
ss
popf
xchg
mov
add
sbb
push
or
mov
test
gs
mov
enter
rcrl
stos
cmp
pop
mov
fidivl
push
jbe
push
jno
lods
popf
incl
test
xchg
std
pushf
mov
pop
stos
out
push
int
and
push
adc
xchg
ret
adc
addr16
pop
mov
pop
adc
test
pop
cwtl
xchg
inc
pop
jp
push
sub
pusha
push
push
in
xchg
fiaddl
fmull
add
cmc
add
lret
push
popa
xor
xor
lock
sub
cli
cld
imul
jp
jl
loop
jnp
je
or
jg
pop
mov
push
xchg
push
das
mov
int
add
xchg
or
test
clc
dec
jecxz
sahf
jl
repnz
test
mov
lock
add
xor
sahf
sahf
lods
daa
aam
sbb
cld
push
xchg
jmp
insl
jmp
movsb
into
sub
mov
jno
mov
mov
nop
pusha
jg
push
adc
bnd
or
xor
sti
cli
test
mov
mov
arpl
sbb
arpl
ja
mov
jmp
mov
movsb
ja
push
stos
cmc
pop
out
les
outsb
pop
mov
jl
insb
jmp
jle
push
inc
xor
arpl
or
push
mov
bnd
dec
cmpsl
sbb
enter
inc
ret
or
jmp
icebp
pop
loop
inc
ja
fstl
sti
xchg
dec
aam
add
adc
loop
fiadds
mov
or
jo
mov
dec
fbld
lret
pop
cmc
cmpsb
add
int
fs
int
sub
inc
push
stos
or
sti
push
mov
stos
int
xor
rolb
dec
sbbl
aas
adc
sub
into
shll
test
leave
cmpsl
xchg
loopne
push
test
sbb
mov
add
rorl
mov
out
js
mov
test
pop
inc
sbb
movb
fnstcw
mov
and
pop
pop
test
fstps
sbb
inc
sub
pop
pop
shr
or
push
es
add
mov
jns
test
adc
or
dec
mov
xor
mov
push
dec
adc
and
enter
aad
mov
pop
or
sbb
decb
inc
outsb
jae
inc
inc
inc
stc
mov
pushf
movaps
and
xchg
into
stos
mul
add
bound
pop
add
sbb
push
sub
cmp
insb
jne
push
das
in
fs
push
stos
lret
cs
repz
aaa
test
add
adc
out
pop
fsubrs
pushf
push
loope
int3
sub
add
int3
mulb
push
psubb
fnsave
lret
movsb
or
leave
aaa
lds
jnp
cmp
push
jo
test
inc
in
aas
das
cli
mov
iret
pop
je
cmpsb
aam
test
mov
add
mov
mov
test
lret
lods
nop
push
add
inc
sar
std
push
inc
cld
test
sub
jmp
into
sub
push
into
sbbl
mov
add
inc
repnz
stc
xchg
cmpsb
dec
mov
lods
cli
orl
or
nop
pop
movsb
dec
cmp
xchg
jae
loopne
push
movsl
cltd
cmp
out
push
mov
sbb
dec
into
scas
mov
cmp
pop
dec
ljmp
sbb
inc
mov
ds
in
cmp
mov
jl
mov
push
or
scas
xor
lds
inc
mov
jg
daa
and
add
cmp
and
and
sub
out
es
jo
xor
push
xor
sti
jne
out
sub
jne
sbb
ja
dec
push
stos
das
call
push
int
jecxz
shrl
pop
rol
mov
xchg
enter
pop
and
lret
aad
movsl
jmp
sub
lock
test
ss
in
dec
jge
mov
mov
icebp
out
xor
fsubrl
repnz
dec
mov
cld
cmpsb
fnstcw
ss
dec
add
xacquire
fwait
imul
push
dec
sbb
je
or
into
push
mov
dec
pop
iret
push
out
test
mov
testb
cmp
xchg
jp
cmpsl
les
mov
je
mov
nop
ret
xchg
push
inc
arpl
bound
sbb
aaa
pop
mov
add
jp
and
mov
xlat
in
xchg
in
lret
fwait
push
xor
pop
push
mov
mov
dec
test
out
test
mov
dec
inc
cmp
dec
imul
outsb
pop
mov
or
cmp
cmp
cmpsb
jb
jecxz
mov
xchg
mov
sahf
lcall
jmp
pop
mov
in
aaa
add
push
and
xorl
addr16
dec
leave
push
jo
mov
in
in
inc
push
mov
pop
fwait
xchg
push
jnp
push
in
or
lret
dec
pushf
xlat
cmpsb
sahf
pop
cmp
add
imul
xchg
divb
inc
mov
mov
lcall
popf
stos
cmpsl
and
sbb
iret
js
out
mov
addl
dec
dec
mov
shll
inc
sub
inc
push
xor
xlat
outsb
sub
cmp
push
fisubrl
iret
shlb
and
sbb
ficoms
sbb
mov
mov
add
insl
xor
and
jns
pop
jg
mov
mov
add
jo
scas
pop
rolb
pop
xlat
jecxz
lahf
shlb
fwait
mov
xlat
shlb
pop
ss
push
pop
out
imul
push
mov
ret
jbe
inc
shlb
dec
inc
shrb
shl
xor
cmp
pop
sbb
in
popa
cmp
mov
mov
enter
ror
add
flds
jg
fdivrs
jecxz
in
subb
and
test
add
mov
adc
subl
jnp
ret
mov
in
lods
jp
cltd
mov
push
nop
sbb
and
inc
pop
rcrb
add
insb
cmpl
psllq
inc
sbb
sbb
xor
sar
add
xor
nop
fs
daa
xchg
sahf
sbb
inc
or
cmpsl
pop
fs
divb
rcll
sub
xchg
ljmp
sub
subb
outsl
dec
js
or
cs
call
aaa
aaa
xor
sub
xor
push
cmp
lret
data16
nop
mov
push
sbb
jns
mov
das
insb
and
or
cmpsb
dec
ljmp
and
sbb
repnz
sbb
cmc
jp
mov
sub
pop
mov
mov
dec
pushf
adc
das
mov
dec
mov
sbb
mov
push
adc
loopne
mov
lret
rol
icebp
imul
test
sbb
jmp
lods
lahf
jne
lcall
cwtl
mov
push
push
insb
adc
mov
fdivrl
push
adc
daa
add
xchg
pusha
lea
testl
xchg
add
les
add
out
cmp
hlt
adc
iret
mov
inc
mov
pop
les
jle
sbb
mov
jge
sbb
xorl
sub
adc
shrb
test
lock
stos
xor
aaa
in
cli
cmp
xlat
inc
aas
js
and
scas
and
int3
jge
aaa
popa
mov
cmp
fiadds
lock
jno
int
mov
push
mov
cs
push
insb
xchg
mov
or
adc
rcl
jg
stos
mov
call
mov
pusha
cmpb
mov
lock
or
mov
push
mov
test
pop
push
jns
xchg
add
or
and
jmp
and
in
sbb
out
outsl
push
scas
mov
testb
dec
jns
pop
mov
mov
outsl
fadd
ret
xchg
push
sbb
and
pop
lods
movsb
or
jge
push
fwait
xor
sub
aad
lds
push
push
cmc
loopne
sub
adc
sbb
jmp
fistps
or
lock
imul
push
mov
cmp
in
sbb
adc
std
outsl
dec
jnp
pop
shl
pop
loopne
fdivrl
sub
sbb
mov
inc
or
shll
fsub
jno
daa
lods
and
popa
andb
hlt
sbb
test
adc
sahf
nop
xor
pop
paddusb
mov
xor
fnsave
xchg
imul
mov
mov
aad
les
sbb
sbb
add
jmp
orb
iret
sub
into
ud2
push
icebp
pop
add
mov
push
adc
mov
xor
je
testb
mov
lret
cmpsl
dec
sbb
push
push
sbb
sub
adc
gs
cmp
sbb
cmpsl
loop
pop
push
jge
imul
mov
cmp
mov
inc
push
repz
movsl
xchg
jne
xchg
adc
mov
cmp
push
adc
popf
push
iret
cmp
arpl
mov
stc
add
mov
in
shl
dec
out
aad
xor
scas
jecxz
sub
movsb
pop
popf
jmp
jnp
test
call
aad
aad
test
jo
in
jb
sub
jg
jns
xor
imul
sbb
mov
in
cmp
cmpsl
xchg
inc
xchg
fnstcw
jmp
daa
and
push
sub
jmp
shr
call
or
ljmp
lret
or
in
inc
popa
lcall
sub
test
cltd
adc
lret
pushf
dec
xor
inc
ljmp
adc
push
add
pop
cltd
push
sub
testl
jnp
jecxz
jl
mov
mov
sub
in
sbb
push
frstor
push
js
stos
jge
pop
mov
xor
bound
and
and
ret
xlat
mov
movl
push
aad
mov
sub
es
bound
clc
mov
lret
call
add
xchg
lahf
pop
popa
mov
push
cmc
out
or
and
and
push
push
jmp
adc
add
sub
pop
xor
movsb
jl
push
push
in
mov
lods
lds
add
adcl
int3
adc
mov
js
clc
xor
dec
pop
jns
sub
adc
divl
imul
xchg
mov
or
inc
repz
fs
cli
push
pop
sti
les
push
mov
mov
mov
aam
sub
pop
ss
push
std
leave
js
push
add
xlat
sub
ss
fmulp
loope
rcll
popf
rcrb
ja
xor
jecxz
fidivl
mov
pop
dec
add
fisubrs
jae
ss
xorb
sarb
leave
push
leave
ret
scas
out
mov
loop
adc
xchg
mov
sub
xchg
or
cmp
mov
loopne
clc
in
or
pop
add
rorl
jns
dec
clc
mov
cmp
push
push
arpl
ljmp
sti
dec
scas
jno
out
ret
mov
xchg
mov
adc
xchg
ret
stos
icebp
jnp
xchg
jmp
rclb
mov
sub
push
sahf
pop
add
jo
cmp
dec
xchg
adc
add
cmp
or
xchg
jnp
jecxz
outsl
inc
imul
insb
out
divl
sarl
jge
xchg
xor
in
fs
dec
push
push
sbb
mov
unpcklps
mov
add
cmp
out
and
int3
dec
sbb
insl
add
mov
jg
je
or
push
cmp
outsl
adc
pop
xor
scas
cmc
lds
xchg
and
cmp
or
cmpsb
xor
sahf
jmp
pop
js
mov
mov
cmp
mov
push
dec
inc
fidivs
push
scas
movsl
inc
sarb
popf
or
or
sub
push
into
jle
pop
jmp
jp
cltd
subb
orl
es
outsl
pop
xchg
leave
push
and
push
add
pop
cmc
hlt
and
aad
jns
and
sbb
je
out
sbb
mov
out
pushf
and
fs
jnp
mov
push
add
pop
xchg
xor
int
in
es
lcall
ja
push
jns
xor
jecxz
into
in
loop
inc
iret
test
jne
lds
or
fstps
jae
fdivrs
jo
enter
sti
ds
adcl
fcmovb
in
jecxz
sti
cmp
sbbl
adc
jg
pop
addl
mov
pop
xchg
aas
adc
pop
daa
rcrl
xor
int3
jmp
sbb
mov
gs
jne
sub
jb
ret
cltd
fcmovbe
mov
ljmp
inc
ret
mov
ja
movsl
in
sub
push
ret
sub
lcall
inc
mov
loop
inc
xchg
jecxz
adc
divb
in
xchg
mov
xchg
jnp
add
lods
push
mov
xorl
jp
fnsave
push
daa
sbb
cltd
lea
sarl
xor
cmp
mov
adcl
movsl
aam
cltd
mov
lret
jmp
nop
loope
ss
xchg
aas
movsl
pop
cmp
adc
pop
fstl
loopne
or
pop
pop
or
or
cmp
rcr
xchg
adc
pop
mov
mov
mov
and
push
scas
cmpsb
cmc
notl
scas
pop
nop
or
jmp
dec
pop
and
inc
arpl
cmp
jecxz
dec
xor
rorl
test
insl
jge
push
lcall
ret
imul
out
push
pop
cmpl
lahf
adc
pop
adc
sub
imul
jge
mov
pop
xchg
lock
sub
sub
mov
add
fdivl
lret
adc
adc
fwait
jno
push
xchg
jmp
mov
jg
mov
call
push
test
sub
cmpsb
or
cs
pop
lcall
adc
or
call
cld
iret
sahf
lock
bound
inc
insb
mov
xchg
sbbl
popa
movsl
cmp
push
mov
les
xor
dec
xchg
lcall
inc
mov
xchg
push
cli
shrb
outsb
mov
mov
outsl
mov
test
out
rorb
cmpsl
fdivrs
push
xor
dec
lds
lcall
mov
adc
push
cli
lret
dec
div
sub
outsl
out
aad
sub
inc
int3
das
and
dec
fists
fsts
inc
add
dec
enter
push
sub
jnp
push
push
sbb
mov
or
mov
inc
cmp
nop
mov
and
popf
ss
mov
lcall
mov
mov
pushf
cmp
cmpsb
setne
imul
or
out
mov
popa
mov
arpl
push
lret
flds
leave
xor
mov
pop
sbb
fistps
leave
sbb
sub
lds
dec
loopne
or
sub
sbb
push
and
mov
mov
subl
lcall
sbbb
dec
add
push
daa
lret
das
pop
rcrl
ljmp
leave
sti
fisubrs
aas
cltd
pop
scas
xchg
push
jnp
in
mov
repnz
xchg
repz
dec
out
mov
push
or
icebp
inc
fdivs
jmp
dec
xchg
fcoml
mov
roll
repnz
into
scas
movsb
mov
push
in
mov
mov
test
out
and
mov
adc
sub
dec
sarb
lret
iret
out
movsl
sub
ja
je
mov
or
adc
insb
jno
arpl
add
in
dec
lock
movsb
iret
inc
ret
fidivl
sub
leave
mov
loop
inc
dec
push
xchg
lods
xchg
loopne
hlt
xchg
lahf
mov
and
iret
xor
mov
or
add
jbe
rcrb
std
sbbb
sub
ja
leave
mov
les
push
out
xor
insb
int3
gs
dec
push
mov
cmp
aas
shlb
in
das
into
sbb
movsl
push
push
or
and
mov
or
aad
roll
lcall
sahf
lods
shll
jmp
xchg
outsb
mov
sti
pushf
stos
jecxz
xlat
or
dec
jge
shll
dec
xor
cld
jmp
cmp
andl
lods
movb
loope
lock
add
cli
fcoml
pop
xlat
pusha
push
arpl
push
sti
jo
insl
ret
cmp
push
inc
mov
or
ss
data16
xchg
or
sub
dec
insl
push
mov
mov
add
daa
cmp
test
inc
sub
hlt
pop
stos
lods
faddl
inc
mov
dec
jp
sbb
xchg
pop
dec
mov
in
sbb
test
call
pop
jae
lcall
inc
outsb
cmpsb
xchg
or
sbb
lret
and
popa
inc
xchg
adc
cmpsb
mov
js,pn
mov
or
mov
xchg
test
mov
into
xorb
inc
sbb
jecxz
xor
cmp
xchg
jo
sub
popa
and
or
cmp
sub
cmp
inc
xchg
dec
cld
inc
testl
jmp
jp
pop
sub
xchg
mov
in
mov
das
pop
aad
test
sbb
pusha
xchg
and
sub
les
imul
imul
nop
mov
cmp
adc
andb
jno
pop
ja,pt
lcall
leave
add
shlb
scas
insb
out
pop
scas
adc
call
xchg
imul
notl
push
sbb
cmp
gs
jnp
outsb
scas
fsubp
insb
cmc
mov
arpl
inc
imul
sbb
mov
pop
lods
xor
lods
cmp
or
ret
lods
jge
and
adc
inc
push
arpl
pop
xchg
inc
xchg
out
cmp
ret
cli
shrl
mov
mov
loope
call
push
bnd
mov
mov
xchg
notl
fnstsw
call
sbb
std
xor
add
bound
out
pop
cmp
out
cltd
fmull
sub
pop
cmp
dec
stos
pop
jge
or
fs
cltd
adc
mov
lret
xor
push
lea
xchg
cltd
or
iret
xor
add
jae
ja
mov
cmc
mov
mov
ljmp
stc
inc
pop
sbb
das
inc
lods
jecxz
je
test
out
lods
adc
push
das
jmp
call
adc
inc
add
xor
sbb
pop
cmp
sbb
adc
mov
xor
fnsave
pop
sbb
inc
mov
aaa
ficomps
mov
cmp
js
pop
or
mov
jbe
jne
and
add
leave
sti
incb
or
push
scas
jl
inc
xlat
arpl
nop
xchg
push
movsl
dec
subl
pop
jne
mov
sbb
dec
fldenv
sbb
pop
lds
push
dec
cmp
xchg
outsl
mov
jge
inc
pushf
sub
push
jle
inc
test
inc
push
adc
xchg
iret
sub
lret
sti
aam
lret
aas
dec
cwtl
push
jnp
inc
jl
stos
into
jns
inc
sub
cmpxchg
enter
mov
jle
mov
mov
ljmp
int3
pop
aad
xchg
nop
and
ss
cld
xor
out
xor
mov
fistl
sbb
mov
hlt
xchg
fistl
add
pop
xchg
sub
mov
push
dec
repz
adc
rolb
icebp
das
cli
xor
lods
xchg
pop
xchg
shrb
ffreep
in
sahf
or
icebp
cli
in
jecxz
mov
addr16
cs
add
xor
sbb
cs
ja
jnp
imul
jg
fs
fisubs
xor
add
popl
stc
insl
dec
clc
call
jno
lds
in
stc
fildll
lock
iret
ret
cwtl
into
xor
rol
xor
movsb
movsl
mov
scas
loope
sbb
xchg
outsl
xchg
pop
jne
fsubl
xor
fs
jo
pop
push
insl
rorl
sbb
bound
cltd
mov
and
jae
subl
aas
faddl
mov
aam
mov
or
subb
push
mov
push
and
outsl
nop
xchg
loop
dec
sbb
jmp
lock
adc
aaa
xor
mov
adc
push
stc
test
inc
push
and
jns
out
push
mov
cmc
adc
mov
mov
shlb
sub
out
xchg
and
or
adc
std
mov
jnp
push
dec
pop
test
dec
add
lcall
in
cmp
test
dec
push
jl
test
jnp
sti
call
dec
sbb
adcl
jp
mov
and
sbb
xchg
push
jb
mov
das
or
lock
mov
mov
outsb
mov
adc
xor
mov
adc
mov
andb
outsl
jg
stos
and
pop
dec
xchg
ss
mov
inc
cmp
cmovs
aad
les
scas
mov
xor
dec
push
insl
sub
mov
ljmp
in
mov
ds
inc
push
pop
mov
mov
test
adc
pop
and
mov
mov
das
push
out
stos
lock
jl
scas
clc
inc
int3
mov
in
fisubl
fistps
pop
mov
cmp
jecxz
in
fistpll
fstl
cmp
fsubl
jle
push
mov
mov
dec
xchg
out
pop
lea
sbb
push
push
or
mov
pop
decl
dec
dec
test
mov
jo
dec
sub
sbb
or
cmp
call
adc
js
iret
movsb
fimull
outsl
or
fwait
daa
insl
xor
sub
add
mov
sbb
sbb
insb
mov
mov
movsb
popa
shl
sbb
cmpsl
es
xor
xor
or
mov
pop
push
adc
arpl
lcall
movl
or
sbb
in
imul
scas
mov
mov
test
fwait
jl
ret
ds
pop
cmp
and
out
pop
lahf
xchg
xchg
in
mov
pop
xor
adc
mov
jb
ss
and
dec
dec
jae
push
ret
pop
sub
stos
leave
cli
repnz
pop
lret
test
inc
cli
or
cmp
adc
push
pushl
inc
fadds
pop
mov
or
je
mov
int
in
lock
insl
inc
lds
mov
fs
jge
xchg
push
jecxz
jmp
popa
xor
xchg
pop
or
stos
fsubl
jo
mov
push
pop
mov
mov
mov
int3
scas
orb
sbb
bsr
cs
loope
sbb
mov
inc
lods
sub
mov
mov
repnz
inc
aaa
jecxz
lret
bound
xlat
sar
jge
call
pusha
call
jae
cwtl
aam
ds
add
pop
and
jno
mov
jecxz
sbb
sub
insb
jb
xor
cmp
in
popf
les
ret
into
or
dec
loopnew
dec
mov
cmp
sub
sub
divl
mov
push
mov
lea
sbb
push
mov
mov
cmpsb
xchg
push
stos
adc
mov
jno
mov
xor
cwtl
mov
xchg
stos
or
push
jle
jecxz
sbb
out
xorb
ljmp
f2xm1
je
sub
loop
clc
repnz
xchg
sbb
loope
pop
dec
std
sub
push
mov
jp
jae
lods
mov
movsb
mov
xchg
icebp
jge
cmpl
jnp
cli
inc
xor
sti
mov
dec
push
cwtl
xor
fstp
ds
out
test
add
out
mov
fs
inc
inc
testb
push
rol
outsl
ret
shl
push
in
adc
dec
rorl
fstps
or
jl
sub
in
loope
push
sbb
jo
jge
pop
insb
movsl
inc
enter
aad
pop
test
fcoml
and
mov
mov
and
aas
mov
int
and
xor
mov
xchg
int3
mov
leave
testl
bound
fistpll
addr16
lahf
adc
xor
push
mov
cmp
hlt
ror
cmp
pop
ret
inc
in
rcrl
pushf
ds
lods
and
lret
or
mov
and
shrb
and
out
mov
addr16
sbb
sbb
std
add
xchg
xchg
fsubs
push
add
push
mov
div
lods
push
jle
or
cmp
aas
pushf
sti
push
fs
jae
mov
jne
jp
mov
mov
std
dec
mov
push
cltd
das
xor
gs
in
shl
pop
addb
mov
int3
mov
xchg
push
mov
mov
jmp
lahf
add
xor
mov
ja
outsl
adcl
add
mov
cmp
or
in
sahf
test
mov
stos
in
arpl
push
adc
loopne
and
imul
daa
rcl
fmul
pop
outsl
mov
jno
jo
pushf
or
adc
repnz
sbb
xchg
addl
out
jno
add
pop
mov
cmp
xor
or
cli
dec
scas
in
popa
fnsave
xor
int3
pop
ret
icebp
sbbl
fdiv
int
ret
movsl
push
enter
out
cmc
add
inc
fcoml
inc
adc
cwtl
or
pop
push
jmp
sbb
sti
popf
jmp
lock
mov
nop
xchg
dec
iret
inc
inc
jno
pop
dec
push
enter
cs
fs
insb
add
stos
and
jmp
mov
test
icebp
loope
jb
lea
outsl
mov
ficompl
adc
and
sbb
mov
mov
dec
ss
leave
push
sarl
pop
fcmovnbe
cmpsl
xor
dec
cld
mov
and
out
sbb
fwait
lea
push
jle
cmp
push
pop
out
push
ret
rorb
mov
insl
fbstp
pop
dec
jg
cmp
dec
add
mov
rcr
imul
js
cmpb
test
adc
out
and
aaa
add
stos
lcall
scas
xchg
lahf
mov
lods
in
popf
inc
mov
jl
mov
dec
popf
xchg
in
lcall
xor
mov
orb
mov
arpl
rorl
decl
pop
mov
cmpsb
xchg
fldl
shll
jmp
test
and
dec
add
andl
loop
cmpsb
dec
cld
jge
mov
shlb
mov
cld
inc
and
pop
xor
pushf
xor
das
push
sbbb
movsb
cltd
adc
push
jg
divl
adc
mov
repz
aaa
and
pop
mov
dec
lods
sub
fimuls
cmpl
cmp
add
movsl
data16
lods
pop
push
imul
fists
data16
scas
or
push
aad
mov
insl
push
iret
cmpsl
pop
daa
adc
push
hlt
jbe
movsb
clc
jb
cli
ret
fsubrs
std
aaa
incb
or
pop
mull
hlt
daa
hlt
jae
and
ljmp
sbb
xchg
sub
push
ljmp
mov
ret
ret
push
mov
xchg
out
ret
dec
xor
mov
inc
es
loope
cmp
push
mov
sti
xor
mov
pop
arpl
push
mov
subl
inc
and
testl
sub
sahf
out
rorb
movsb
icebp
stc
dec
jmp
cmp
call
lock
test
push
pusha
aad
cmp
jne
pop
scas
aas
mull
push
scas
fisttps
xchg
cwtl
pop
mov
inc
xchg
mov
dec
adc
shll
push
aad
jae
ja
xor
pop
imul
jae
aas
lahf
or
pop
mov
stos
jbe
lods
pop
sbb
lcall
sub
test
clc
pop
or
jp
dec
jne
inc
xchg
cs
cmpsb
es
mov
shrl
test
fldcw
loope
sub
aaa
out
dec
push
aas
inc
iret
gs
outsb
add
mov
jecxz
push
or
cmp
mov
add
popf
in
adc
cmp
loope
xor
jge
or
int3
mov
imul
sub
xor
in
je
pop
sbb
xchg
lcall
test
loope
xlat
mov
ret
xor
add
ds
int
ljmp
and
add
and
rolb
sub
mov
push
in
lcall
movsb
rcr
xchg
leave
test
les
xor
lock
test
sbb
mov
mov
or
repz
je
inc
lods
popa
jmp
call
shll
push
loopne
or
adc
int3
mov
push
test
fisttpl
fildll
and
test
pushf
jp
sub
fs
inc
mov
fsub
fs
mov
in
test
and
mov
jns
inc
mov
add
push
or
rcrl
push
std
shl
sbb
jbe
in
push
stos
dec
jns
repnz
lods
scas
or
xor
iret
cmp
data16
fnstsw
mov
pop
xor
push
push
inc
divb
cld
inc
outsb
hlt
fwait
and
and
push
pushf
mov
mov
imulb
scas
mov
push
sbbb
xchg
pop
inc
mov
dec
test
xor
push
shlb
in
scas
or
mov
ret
in
and
mov
shrb
mov
lods
cmp
mov
cs
loope
jnp
add
out
cmc
mov
or
jg
xchg
lret
fdivl
jle
adc
mov
cmp
fs
cmp
fidivrl
add
popa
push
push
test
addr16
mov
pop
data16
jnp
gs
cltd
call
jg
stos
add
adc
movsl
pop
mov
or
mov
jle
subl
std
sbb
cld
jmp
icebp
fadds
sahf
jae
test
or
xor
mov
fstpl
mov
imul
inc
jb
and
jne
mov
enter
subb
arpl
popa
push
adcb
sbb
sub
das
push
hlt
in
int3
jg
mov
popa
stos
add
fcomps
mov
aad
in
adc
sbb
jecxz
out
out
aam
add
inc
mov
push
jge
data16
out
hlt
adc
or
in
sti
cli
jnp
or
mov
push
push
cltd
jnp
mov
imul
push
pop
xchg
push
push
push
adc
loop
fnstenv
and
loope
imul
cmp
jle
sub
xor
sub
ljmp
or
int
stos
jb
xor
cmpsb
mov
pop
repnz
mov
push
call
sbb
mov
mov
cli
ret
xor
rcrl
jp
psubw
mov
dec
roll
orl
mov
pop
test
insb
push
xor
into
push
push
or
cmpsl
sub
loopne
and
cmp
mov
subb
inc
arpl
cmc
in
mov
insb
leave
push
jae
divb
dec
notb
mov
arpl
nop
stos
push
jl
mov
js
xchg
push
aaa
outsb
into
fsubp
insb
fsubrs
in
lret
ja
adcb
dec
xor
data16
dec
adc
out
adc
push
sti
out
bound
inc
cld
or
sbb
imul
nop
jle
fprem1
loopne
je
lret
jno
sub
cmp
xchg
aaa
repz
cs
cmp
loopne
pop
aaa
repz
pusha
in
cmp
sub
test
mov
or
cmpl
add
lock
push
fisttps
lret
dec
push
xor
adc
add
les
ja
sub
sar
cli
cmpsl
push
cmp
es
xchg
jmp
cld
sti
adc
fisttpll
or
hlt
pop
inc
mov
or
test
push
cmp
sar
fs
dec
popa
push
fidivrl
les
jns
add
push
js
inc
neg
cwtl
mov
push
fbstp
cmp
sub
lahf
shll
ja
sub
mov
clc
add
shl
lcall
adc
sbb
rorl
dec
lea
punpcklwd
stos
mov
cmp
out
out
int
mov
fidivs
ljmp
add
cmpb
pop
xor
lcall
mov
pop
jg
mov
mov
rcl
outsb
out
push
jg
in
sti
sbb
cmpsl
mov
mov
jp
jae
pop
shrl
push
cmp
xor
push
lods
sti
or
cmp
lcall
and
in
arpl
mov
adc
jo
enter
js
enter
test
dec
cmp
pop
cmpsb
sub
cld
fs
pop
enter
jae
jae
cmp
cmpl
mov
inc
out
bound
sbb
fidivrs
and
je
cwtl
mov
inc
fsubs
pop
xchg
sahf
ds
inc
pop
dec
ror
loope
and
out
sbb
pop
dec
repnz
push
push
inc
pop
lahf
pop
mov
xlat
add
mov
jmp
dec
lret
push
icebp
es
clc
adc
sbb
xchg
or
enter
and
test
loopne
lods
cmc
and
aaa
mov
push
enter
inc
jg
loop
scas
subl
sbb
dec
call
je
lods
and
cmp
aaa
aaa
cmpsl
jl
dec
ja
xchg
es
aam
movsl
inc
pop
ret
adc
mov
sbb
outsb
ret
in
and
roll
and
ljmp
int
scas
xor
inc
and
jns
test
jl
push
pop
ss
xchg
test
cltd
shl
cmp
inc
int
xor
and
ret
int
fucomi
adc
hlt
mov
loop
adc
in
aad
ret
inc
loop
sbb
dec
nop
mov
or
cmp
cmc
xor
adc
xchg
adc
dec
out
adc
iret
mov
add
lock
int3
ljmp
sbb
jae
pushf
movsb
fdivrs
pop
repnz
test
or
dec
pushf
mov
inc
push
pop
inc
bound
lock
mov
popf
xor
fcompl
adcb
jmp
mov
ss
mov
in
dec
and
sbb
sbb
daa
test
cs
popf
or
movsl
sti
in
pop
lock
and
sub
lods
and
jle
in
cld
test
dec
inc
xor
lds
add
cltd
inc
out
xchg
icebp
arpl
gs
mov
mov
push
imul
fisttpl
loop
addr16
jo
jb
sub
ss
mov
sbb
cmpsb
mov
icebp
aas
pop
jmp
jae
jmp
and
fsubrl
xchg
aad
out
movsb
test
dec
cmpsb
into
mov
lahf
lret
mov
dec
pop
push
adc
mov
loope
mov
sahf
or
cmpsb
iret
ret
jo
and
inc
repnz
aad
das
push
and
jno
cld
int
jecxz
rorl
xchg
dec
push
mov
in
call
ljmp
mov
in
in
out
sbb
loope
insb
clc
mov
daa
icebp
aam
aaa
lea
mov
ret
xchg
or
iret
mov
hlt
mov
mov
xchg
mov
rcrl
dec
xchg
cmp
ja
cmpsb
mov
push
mov
cltd
test
sub
xor
fisubrs
cmp
lods
add
inc
ret
rcl
mov
loope
iret
hlt
adc
xchg
ret
loope
mov
mov
in
mov
or
lods
clc
cld
xchg
in
and
xor
add
or
xor
jb
pop
cs
mov
xor
and
insl
sub
pop
and
sbb
cs
mov
mov
daa
in
push
iret
jg
cmp
sbb
bound
out
test
pusha
cs
iret
sub
xor
mov
cltd
sub
stos
and
adc
shll
pop
jne
cli
fwait
xor
xchg
pop
aad
and
xchg
dec
es
popf
jne
sub
push
inc
repz
cmp
adc
repz
or
cmp
sub
inc
push
sbb
push
dec
or
leave
sbb
sti
inc
cmp
std
dec
stc
out
dec
nop
jp
mov
mov
je
int3
int
sub
cmc
xor
mov
mov
mov
xchg
scas
xchg
in
mov
mov
xchg
stos
fldenv
sub
or
dec
sub
fisubrs
jno
add
jb
xchg
enter
sahf
arpl
dec
jmp
jecxz
dec
xchg
out
xor
lret
sub
sub
xchg
dec
stos
xchg
pop
inc
dec
leave
mov
cs
jb
push
xor
xchg
xor
out
clc
std
mov
mov
and
inc
stos
adc
xchg
mov
mov
lcall
add
pop
and
lret
jmp
xchg
flds
inc
pop
fcmovne
pop
mov
or
insl
dec
xor
xchg
subb
out
clc
cli
inc
shrl
cmp
adc
fs
jnp
jp
cmpsb
xchg
fwait
push
scas
fcmovb
xchg
leave
cmpsb
incl
push
stos
outsl
pop
xor
pop
jmp
pop
out
inc
pop
addr16
out
subb
push
lea
aaa
pop
adc
aaa
cmpsb
loope
aam
imul
jg
and
stos
lahf
fs
sub
imul
cwtl
or
jae
push
out
push
cmp
xor
mov
mov
sbb
sbb
mov
fidivl
outsl
clc
stc
fldl
lock
push
mov
loopne
lahf
ljmp
outsb
sbb
lret
repnz
movsl
addr16
jmp
movsl
or
fists
out
ss
pop
xor
pop
call
sahf
test
ja
mov
pop
shlb
sbb
arpl
pop
or
movb
mov
sbb
inc
mov
adc
shlb
jg
cmpsl
xchg
push
popa
lret
push
push
adc
pop
outsb
adc
cmp
xchg
inc
push
push
mov
pop
stc
xchg
aaa
cs
out
cmp
rcll
rorl
mov
cmp
outsb
fwait
xlat
mov
xchg
pop
call
hlt
jns
mov
xchg
xchg
and
mov
es
fldenv
push
pop
aad
sbb
add
push
add
jecxz
jbe
adc
sbb
push
jnp
movl
or
jbe
jns
lret
or
inc
in
mov
push
test
int
jnp
int3
xor
aas
shl
or
jne
xchg
or
les
shlb
xor
leave
sbb
sub
dec
pop
sbb
mov
repnz
pop
shl
repnz
cld
adc
test
shlb
aad
aam
mov
test
mov
sahf
dec
lret
adc
push
insl
mov
lods
sbb
adcb
dec
shr
mov
sbb
sbb
add
and
fnstenv
in
sahf
push
pop
mov
call
es
fwait
lret
and
mov
xchg
mov
gs
mov
pusha
out
mov
lret
movsl
idivb
stos
cs
adc
mov
fst
ljmp
nop
adc
sar
stos
loope
sub
xor
sbb
cwtl
adc
les
cwtl
mov
jns
pop
cmpb
movsb
cs
mov
scas
xlat
pop
daa
into
lret
and
out
inc
sbb
xor
pop
enter
in
stos
jecxz
lock
addr16
jecxz
insb
jl
orl
dec
fldl
cltd
gs
out
push
mov
std
add
mov
push
cmpsb
sti
aas
lret
sub
cmpsb
cmp
leave
mov
leave
das
in
or
xchg
pop
mov
ds
xchg
and
lret
adc
fwait
clc
ljmp
push
ret
shrl
inc
xor
aaa
arpl
sbb
xchg
dec
mov
leave
pusha
xchg
push
sbb
inc
sub
pop
mov
or
fisttps
cwtl
xchg
aaa
xlat
adc
xchg
inc
outsb
sahf
movb
frstor
mov
inc
ja
push
es
dec
mov
and
xchg
or
sti
mov
out
xchg
mov
mov
gs
call
fidivrs
mov
out
repz
xchg
xchg
pop
loop
mov
add
push
popa
in
ljmp
das
sbb
lods
push
push
scas
daa
popf
adc
mov
sbb
jb
xor
mov
or
add
mov
jge
sub
pop
jae
enter
test
or
jb
js
mov
aam
inc
adc
iret
push
cmp
pop
and
insl
adc
and
push
jmp
pop
scas
adc
sahf
movb
movb
fisttps
iret
imul
push
cmpsl
sbb
cltd
lret
in
scas
ret
stc
cmp
pop
cmc
xchg
adc
mov
ret
xchg
lods
rcll
outsl
in
outsl
jecxz
nop
rol
lods
add
loop
or
jg
and
add
mov
push
fldt
repnz
mov
xlat
imulb
push
fxch
push
aad
and
mov
adcl
imul
sub
test
and
mov
sub
cltd
adc
push
jp
popf
xchg
lret
je
test
xchg
not
movlps
jo
xor
daa
pop
insb
clc
cltd
pop
pushf
shrl
dec
jno
frstor
pop
cmp
jnp
adc
jge
adc
rcr
xor
out
xchg
add
pushf
mov
sub
jne
ret
pop
adc
xchg
mov
lret
iret
adc
and
push
add
sub
mov
and
mov
fldt
mov
out
fisttpll
mulb
cmp
stos
xchg
pushf
test
repnz
repz
sbb
repnz
cmpsl
xchg
mov
sub
aam
rcr
lret
jb
push
arpl
fstps
cwtl
push
sub
adc
adc
nop
xchg
xchg
push
pop
popf
imul
mov
xor
std
xor
pushf
repnz
jg
pop
orb
push
je
ljmp
in
jge
push
ljmp
jp
add
fbstp
sub
jmp
call
in
xor
xor
jl
repnz
stc
cs
mov
sub
sub
lret
pop
lcall
fsubrs
lods
fdivl
jmp
popf
shll
repnz
xor
adc
lahf
push
mov
lea
jne
out
in
or
sbb
mov
ffree
cmp
xor
dec
cltd
dec
cmp
arpl
bound
add
adc
rorb
sub
push
and
push
leave
add
lods
inc
ds
and
mov
subl
jle
insb
add
repz
insl
or
imul
icebp
out
outsb
lock
sahf
jnp
sbbb
inc
or
xlat
ds
lret
test
cmp
cltd
mov
arpl
stc
imul
inc
jo
pushf
rol
gs
lds
loopne
mov
lret
and
dec
fstpt
mov
jnp
dec
xor
push
mov
mov
adc
or
push
out
mov
jnp
fucomp
xchg
scas
movsl
cmp
movsb
dec
in
rcr
or
in
add
cs
imul
clc
int3
or
inc
sbb
out
jae
out
aas
jbe
push
cmovbe
aaa
scas
mov
push
cwtl
pusha
mov
mov
mov
sti
sub
cmp
jns
fcomps
ret
sbb
mov
cmc
pushf
push
not
xchg
fmuls
cmpsl
insl
ss
mov
jge
inc
mov
div
and
mov
sti
aaa
xchg
fldz
inc
dec
and
pop
mov
dec
aaa
js
psrlq
dec
xor
inc
mov
or
jp
jmp
js
add
out
inc
loope
mov
or
pop
xchg
cmp
mov
arpl
pop
aam
sti
inc
xchg
stos
call
pop
push
mov
out
rcr
mov
inc
inc
in
icebp
fcompl
jae
sbb
and
jns
mov
dec
call
fisttpll
sahf
mov
push
out
add
leave
pop
iret
inc
hlt
xchg
daa
cmc
push
hlt
add
testb
sub
jne
xchg
dec
sbb
fs
popa
test
push
sub
jle
out
roll
mov
sbb
jp
or
or
fs
nop
dec
jns
inc
dec
jne
ja
ficoms
fbld
and
xchg
cmc
repz
ret
pop
jle
lret
and
lds
shr
jmp
adc
and
sbb
push
inc
mov
stos
movsb
mov
push
push
sub
out
mov
cmp
roll
leave
xchg
mov
pop
mov
xchg
js
icebp
stos
imul
repnz
dec
hlt
cmpsl
imul
aad
push
cmp
xor
popf
cltd
int
hlt
sahf
jg
lods
add
movsl
xor
mov
mov
inc
fcmovnb
pop
sbb
enter
xor
xor
jmp
sub
cmpsb
xchg
and
mov
sbb
test
inc
adc
mov
xchg
sbb
sub
mov
lock
fidivs
sub
mov
push
andl
aam
scas
pop
pop
jo
mov
and
xchg
sbb
inc
mov
int3
add
icebp
repz
aam
or
push
dec
fmull
les
int3
shrb
loopne
sbb
fstpl
xor
orl
jae
add
loope
mov
fwait
test
imul
add
dec
mov
jp
lret
mov
add
fadd
cmp
into
ret
inc
mov
cmp
mov
xlat
dec
in
or
pop
inc
testb
dec
movsl
mov
std
stc
in
jbe
dec
mov
xchg
sbb
dec
data16
xor
xor
in
data16
rclb
xchg
push
mov
int
and
jecxz
nop
aad
or
arpl
fmul
bound
ljmp
lahf
xchg
fildl
arpl
adc
jns
push
jno
mov
mov
mov
scas
mov
fdivrl
add
adcb
test
mov
aad
stos
cmp
push
pop
xor
js
loopne
mov
xchg
mov
inc
fcmovnu
outsb
cmp
jle
lret
daa
sub
sbbl
sbb
push
imulb
push
mov
pop
jae
shr
xorb
jne
outsl
cmp
xlat
aam
push
insl
test
jge
xlat
xchg
push
in
fidivl
outsl
ret
fbld
push
mov
jg
fsts
in
pusha
fcomi
loope
aas
or
shll
cmp
out
sub
stc
sub
mov
bound
popa
xor
add
movsl
out
mov
sahf
sahf
inc
stos
ret
sti
sub
dec
push
add
ja
popf
mov
fs
xchg
in
pop
and
sub
sbb
test
enter
aaa
pop
xchg
mov
lock
dec
mov
fwait
out
in
pushf
adc
mov
mov
mov
jno
pop
inc
mov
xor
ret
testl
aam
popf
and
xor
cmp
xchg
ja
das
sarb
or
leave
orl
dec
push
popf
jo
iret
jp
test
loop
push
fadd
mov
dec
sub
mov
jle
inc
mov
loope
add
jle
sbb
jmp
subb
pop
add
popl
mov
test
xor
adc
arpl
ficompl
sub
pop
sbb
sbb
fisttpll
or
cs
mov
mov
dec
sbb
inc
push
imul
dec
jb
rcr
lcall
imul
inc
and
sbb
test
data16
xchg
pop
pop
xchg
sbb
std
add
jns
and
lret
sahf
testl
sbb
aam
dec
incl
cs
sarb
cmp
adc
or
into
cmp
out
cmp
aas
loopne
in
cmp
out
sbb
jbe
push
push
xlat
mov
dec
pusha
inc
xchg
cmpsb
mov
lock
sub
cli
int
je
cltd
call
and
fsts
iret
lods
out
mov
pop
mul
jns
push
cmpsl
ja
adc
xchg
mov
nop
jno
push
fs
inc
mov
cld
cmc
loopne
xor
sbb
scas
cmpsl
sub
popf
and
cmc
nop
cmp
insb
or
sbb
inc
jecxz
shl
add
cmpsb
out
jnp
jne
sub
sub
mov
cltd
faddl
int3
scas
negl
subb
cmp
int3
aaa
mov
mov
xor
daa
jbe
and
push
push
ds
dec
mov
lcall
mov
mov
and
jmp
sar
sbb
xorl
repnz
xchg
jo
pop
loop
mov
test
adc
jo
repnz
icebp
andl
lret
and
test
shll
lods
push
or
sub
js
jne
mov
repz
imul
add
inc
cltd
cmp
mov
sub
jl
jns
shll
pop
add
xchg
ljmp
das
xlat
call
and
and
or
in
fs
add
mov
pop
test
and
push
mov
ror
sbb
or
adc
clc
lock
repz
loope
ja
daa
daa
popw
mov
dec
lock
in
push
inc
cmp
add
sarl
jb
fldenv
xchg
outsl
pushf
scas
fwait
sub
cmp
test
gs
popf
sub
push
adcb
adc
pop
mov
jno
leave
int
test
es
out
or
lahf
add
and
dec
inc
aam
lods
shrl
pushf
xor
imul
sahf
pop
sub
sub
push
lahf
loope
aam
or
inc
or
xor
or
inc
pop
insl
and
adc
cmc
and
pop
leave
xchg
push
cli
popf
stos
xchg
cmc
inc
scas
mov
push
lcall
ss
jbe
mov
dec
inc
cmpsl
dec
pop
lods
mov
cmp
lods
add
add
into
xor
or
pop
loop
xchg
and
outsb
mov
cmpxchg
mov
cs
and
inc
push
loop
push
xchg
addr16
and
sub
inc
dec
scas
ret
out
cs
dec
fists
xorl
ret
mov
add
mov
sahf
test
xlat
fimuls
fwait
push
cs
fs
mov
filds
enter
adc
mov
popf
daa
adc
pop
into
fcomip
mov
mov
mov
mov
dec
add
sub
fcmovnb
pop
mov
clc
call
add
jmp
int
out
inc
inc
or
mov
jo
jnp
loopne
mov
aad
xor
push
les
aad
xor
icebp
and
addr16
xlat
xchg
inc
jbe
inc
cltd
inc
pushf
shll
inc
inc
add
cmp
xchg
mov
cmp
cmpsl
adc
outsb
addb
rolb
ds
xor
mov
mov
add
ret
call
sbb
cmpsl
out
or
lret
test
cli
cmp
jnp
sbb
sbb
push
jge
test
divl
mov
adc
cmp
out
into
out
into
sub
out
cltd
sub
jg
lods
std
cmovo
xchg
clc
mov
aaa
testb
out
xchg
jnp
push
je
loop
fwait
out
into
pop
pop
xchg
push
std
idiv
cmp
xchg
push
aaa
push
xlat
out
lahf
mov
jecxz
adcl
adc
push
notl
lds
cmp
mov
pop
call
ds
push
adc
int3
scas
in
fxch
andb
xchg
ss
nop
mov
xlat
enter
test
push
add
in
cmova
cltd
sub
cmpsl
ja
fmull
or
mov
std
dec
cli
adcb
adc
movsb
movsl
push
fadds
popa
sbb
repz
cmp
pushf
aad
xchg
movsb
orl
sbb
es
fsts
push
pop
pushf
orl
jo
pop
out
outsl
pop
adc
pop
dec
les
pusha
mov
subl
mov
cmp
fiadds
xchg
outsb
loopne
test
arpl
subl
aam
jo
shll
cmp
addr16
scas
cmp
jae
popa
jge
pop
imul
push
imul
and
repnz
rol
inc
adc
fsubr
sub
dec
lret
inc
repnz
mov
out
or
xor
pop
mulb
mulb
push
sti
fs
leave
lods
cltd
js
cmpsl
push
xchg
and
jecxz
mov
aas
popa
mov
test
jl
mov
js
mov
enter
mov
cmp
sbb
sahf
aad
ja
sub
jns,pt
leave
hlt
sub
jno
dec
imul
xchg
in
sahf
stos
cmp
sbb
xor
aas
jle
pcmpgtw
sbb
ss
mov
inc
insl
js
and
dec
cmp
out
mov
sub
xchg
mov
cmc
push
jp
jecxz
mov
lcall
cmpsb
xorl
pop
ret
mov
es
sbb
xor
out
pop
mov
push
push
add
lret
mov
adc
jb
mov
lahf
aad
aad
aaa
adc
push
mov
add
ljmp
add
repz
inc
push
popf
lods
pushf
xchg
ja
add
xor
test
popl
addr16
jg
cmpsl
lcall
scas
bound
inc
pusha
adc
movsb
sbb
dec
icebp
or
add
dec
push
cmpsb
jl
sbb
pop
clc
xor
add
insb
jle
mov
adc
adc
clc
mov
into
lock
jne
out
mov
jl
adc
dec
and
add
or
fidivs
ret
int3
cmp
fstpl
in
mov
enter
dec
out
mov
xor
pop
es
or
cmpsl
pusha
repz
testb
pop
incb
xlat
mov
or
inc
and
fimull
scas
jmp
and
ds
mov
jecxz
outsl
push
push
shl
xor
mov
sub
jae
push
lock
cmpsb
imul
scas
push
xchg
push
inc
sbb
in
roll
out
rorb
sbb
je
push
addr16
jb
xchg
aam
push
or
jbe
jns
aam
dec
outsb
scas
pop
pop
mov
dec
movsl
nop
test
inc
nop
cmp
movsb
mov
or
jb
xchg
sbb
lahf
push
lcall
lret
cltd
cmp
mov
cmp
jbe
cmp
jmp
call
lret
cmp
aaa
mov
add
mov
push
xor
test
lods
xor
es
fldt
push
mov
dec
dec
lock
popa
and
cmc
cmpsl
mov
sub
xchg
lcall
cmp
cmp
addr16
fcmovnb
jmp
fwait
mov
in
jo
cmp
popf
mov
sbb
fmul
sbb
adc
mov
xor
adc
mov
jge
fidivl
pop
hlt
aam
std
adc
dec
out
outsb
in
int
mov
xchg
subps
push
out
fisttps
sub
mov
and
jb
or
push
pop
pop
mov
nop
mov
xor
out
lcall
mov
push
arpl
cmp
sahf
mov
jl
cmp
adc
cmp
xchg
das
cmp
cmp
xchg
dec
out
aaa
jmp
xorl
xor
and
mov
mov
xor
push
add
inc
daa
push
push
mov
cmpsb
pop
test
jno
and
repnz
pushf
rcll
call
pop
icebp
test
fcmovne
jnp
out
cmp
imul
sbb
shrl
xor
das
and
sbb
sbb
adc
mov
pop
shll
scas
mov
nop
iret
mov
push
xchg
icebp
dec
xchg
loope
jbe
adc
mov
xchg
cwtl
and
pushf
sub
push
mov
ret
imul
fldenv
in
cmp
outsl
xor
sub
jns
jnp
cmp
lods
push
cmpsl
jg
push
int3
nop
shll
fs
sbb
lahf
xchg
out
leave
push
test
test
cmp
cmp
add
add
les
hlt
mov
in
or
lcall
ljmp
movsl
out
jnp
mov
clc
mov
popa
movsb
lahf
test
xchg
sti
or
adcb
push
sbb
outsb
pop
jle
iret
adc
decb
or
adc
int3
pop
std
shll
adc
fadd
leave
cwtl
dec
ss
repnz
inc
jnp
or
test
or
push
lret
or
repz
and
aam
out
push
push
adc
out
lods
jnp
push
jle
jne
push
aad
adc
push
loop
repnz
and
stc
adc
lcall
pop
xchg
shl
pop
jns
pop
cli
sbb
sub
scas
shl
int
cmpsb
lea
fwait
aam
mov
pop
jno
or
or
push
in
pop
inc
push
pop
inc
sti
sbb
inc
xor
push
int
inc
adc
pop
inc
daa
xchg
shl
mov
sarl
leave
les
inc
rsqrtps
mov
xor
mov
loope
xor
inc
xchg
pop
push
jle
push
push
shr
cmc
sti
bound
fmul
jp
inc
xor
push
aad
movmskps
or
js
subb
scas
movsl
and
xchg
dec
and
mov
sub
jnp
lret
fbstp
sub
and
dec
stc
imull
dec
jp
jnp
cli
push
dec
movsb
push
addr16
lret
cmpxchg
icebp
pop
les
jge
std
pop
cwtl
adc
pop
jp
and
loop
push
ljmp
mov
jl
mov
xchg
add
rolb
adc
mov
imul
inc
cs
mov
popa
rorl
dec
jb
arpl
andb
inc
enter
jmp
lcall
pop
fcmovnbe
jne
xchg
dec
inc
repnz
lcall
inc
imulb
jecxz
xor
popa
push
and
fs
adc
or
mov
bound
mov
sbb
int3
test
cltd
mov
xchg
cmp
std
loope
or
inc
mov
int
mov
out
push
cmc
stos
out
stos
ret
fcompl
push
fisubs
loopne
sub
lock
mov
insl
mov
fchs
in
or
daa
rol
jle
ret
or
in
in
cmpsb
ret
mov
pop
aaa
sub
in
fwait
xchg
and
pop
sbb
es
mov
cld
mov
dec
cmp
mov
daa
jae
mov
repz
add
and
ret
jae
notl
mov
aad
push
inc
imulb
loop
leave
cmp
andl
inc
mov
lds
xchg
mov
iret
test
imulb
lods
aaa
in
mov
dec
call
iret
pop
inc
lret
pop
sbb
push
rcr
sub
scas
dec
mov
aam
add
dec
jl
test
negb
js
cmc
orb
lret
insb
ficoml
fisubs
ret
mov
xor
or
push
push
hlt
pop
xchg
std
and
test
mov
mov
fs
jne
mov
icebp
pop
enter
cld
ret
push
ja
push
fs
std
push
xor
leave
push
out
test
int3
int
xor
inc
push
cmp
stos
mov
mov
daa
test
scas
shlb
pop
sbb
lahf
dec
adcb
adc
xor
push
pop
sbb
cwtl
scas
or
call
aas
in
mov
and
push
push
dec
loop
xchg
pop
pop
test
pop
jl
pop
adcl
mov
sub
cmp
jecxz
sbb
sbb
fiaddl
xchg
xchg
push
testb
loopne
mov
hlt
dec
lods
xor
cmp
nop
insb
mov
cltd
nop
sbb
out
arpl
inc
lock
int3
cmp
in
es
mov
scas
mov
cwtl
call
ret
dec
dec
aam
lret
test
jmp
xchg
jmp
cmc
cld
mov
push
pop
jno
or
inc
inc
cmp
adc
adc
jb
lds
popf
xchg
mov
xor
sbb
shrl
mov
sub
addb
pushf
aam
sar
out
cmp
pcmpgtd
mov
imul
int
sbb
insb
out
mov
pop
push
xlat
xor
xchg
xor
cld
popf
jl
or
xchg
mov
std
in
push
xchg
adc
and
js
in
cmp
push
pop
xchg
mov
andl
pusha
loope
adc
pop
and
inc
sar
in
inc
add
push
popa
dec
xchg
sbb
daa
jae
mov
sahf
out
cmpsl
push
lock
out
cs
adc
cmpsb
out
faddl
mov
aam
in
mov
inc
addr16
daa
add
movsl
ret
lret
jmp
scas
pop
mov
dec
inc
scas
jo
out
rolb
dec
pop
dec
roll
sbb
lret
imul
loopne
mov
fisubs
shll
jne
rorl
inc
test
sbb
add
jae
icebp
shrl
popf
mov
roll
dec
lcall
jp
test
out
aas
xor
lock
ja
mov
jmp
jmp
lcall
jecxz
aaa
lock
sti
lret
sbb
mov
xor
testb
mov
mov
dec
out
sub
ss
sub
adc
mov
inc
fsubrs
addl
lea
dec
enter
xchg
inc
or
mov
scas
lods
pop
mov
xor
scas
adc
call
scas
xchg
adcb
and
out
movsl
or
push
lods
imul
test
jno
xchg
pop
aas
test
stc
push
fidivrl
lcall
cmp
ljmp
lret
sbb
lods
mov
and
cmp
insb
das
cld
mov
repnz
js
cli
cwtl
loop
adc
sub
loopne
out
into
addr16
xor
push
adc
sbb
xor
pop
loop
roll
mov
push
lret
and
lret
add
ss
push
jp
mov
mov
clc
cmp
and
xchg
fst
sub
dec
call
cmp
push
lret
pop
fiaddl
xorl
test
mov
jecxz
lahf
cmp
and
xor
fnstsw
xchg
lods
lods
fldcw
dec
mov
test
fcmovnu
pop
xor
push
and
insb
adc
arpl
enter
push
jg
xor
lock
pop
test
int3
mov
xor
scas
lret
pop
inc
add
mov
add
loop
loop
mov
ss
inc
sbb
dec
hlt
add
mov
repz
push
test
pop
or
arpl
insl
rcll
lock
mov
rclb
std
nop
mov
repnz
pop
in
fs
mov
dec
cmc
sub
fsubrs
rolb
push
pop
and
jno
jp
rcr
mov
addl
sti
jo
out
ret
fisttpl
nop
pusha
mov
inc
cmp
cli
cmp
sub
sub
pop
adc
inc
outsb
in
test
cmp
jg,pn
mov
out
mov
rcl
es
xchg
clc
es
mov
insb
sub
cmp
xlat
out
or
jl
mov
sub
dec
ljmp
or
test
xlat
iret
icebp
cmp
cmp
shlb
jl
cld
cmp
iret
mov
divps
inc
fidivs
imul
mov
movsl
cmp
movsl
sub
xor
xor
add
stos
dec
sbb
sahf
out
xor
push
jnp
sbb
out
aad
cmp
or
enter
lahf
fisttpl
cs
xchg
data16
loope
movsb
fldt
xlat
cltd
jno
push
pop
fcoms
jns
sbb
mov
dec
pop
lds
ds
add
popa
data16
adc
jmp
repnz
mov
or
inc
pop
jmp
lret
push
jne
pop
int
pop
test
jne
inc
inc
and
test
in
lret
push
xchg
and
sbb
out
xor
push
loop
dec
testb
add
scas
sti
push
jnp
test
push
sub
data16
addr16
fucompp
or
pop
into
fs
xchg
mov
dec
xor
push
inc
subl
xor
data16
adc
push
shll
inc
aad
sahf
out
hlt
jae
xor
jp
cs
aas
or
push
sbb
xchg
mov
mov
es
pop
in
pop
cwtl
aam
xchg
iret
clc
add
pop
aad
cmp
and
shr
xor
cmp
mov
out
pop
leave
fimuls
aam
enter
fs
test
dec
jns
cld
ror
enter
sbb
leave
adc
dec
in
inc
fwait
cmp
mov
xor
in
inc
lds
ja
movsl
mov
sub
fs
fidivrl
adc
clc
stos
leave
pop
test
lcall
cs
xor
repnz
xchg
jge
arpl
lret
add
movsl
leave
sub
andb
or
or
sbb
xor
les
icebp
popa
ds
in
fcmovbe
sub
mov
outsb
js
jmp
or
ret
and
jne
cmc
inc
cmp
orl
mov
push
ror
mov
test
pslld
push
inc
imul
jl
mov
test
in
rclb
push
jne
dec
icebp
mov
jbe
daa
stos
mov
pop
inc
hlt
jle
rolb
lds
mov
mov
pop
pop
sbb
fildll
xchg
test
push
dec
jg
jb
in
add
xor
sub
mov
mov
aam
dec
mov
outsl
fucom
arpl
dec
aaa
dec
add
fsubrl
clc
add
xchg
mov
pop
pavgw
leave
xchg
push
dec
jmp
jo
or
inc
and
lahf
pusha
and
dec
or
and
mov
mov
stos
clc
push
je
test
imul
push
insb
dec
jae
pop
xor
hlt
adc
or
add
cld
xor
shll
mov
fildll
cwtl
mov
ljmp
test
dec
jns
scas
xor
mov
add
jecxz
loop
cmp
aad
mov
icebp
sti
or
inc
or
inc
adc
int3
adc
cmpsl
in
ljmp
push
inc
hlt
lea
in
cld
mov
mov
pop
cmp
push
lock
cmp
dec
and
insb
mov
mov
and
xchg
ficomps
mov
jle
movl
das
ret
pop
xor
mov
sub
cwtl
pop
fcompl
xchg
jae
and
push
mov
and
fimull
jmp
add
mov
leave
test
fimull
imul
mov
js
insl
cmp
rcll
clc
sbb
add
ljmp
and
int
fcmovb
imul
xor
inc
xchg
jns
push
movsl
mov
repz
or
test
xor
jecxz
jo
iret
mov
jo
addr16
lcall
dec
mov
jb
jo
or
adc
lds
cmc
cmpsl
pop
lret
in
mov
pop
sub
addr16
dec
movsl
or
jp
mov
push
fistps
dec
jmp
lcall
cmp
push
test
lret
sub
cmp
mov
mov
jae
jb
cmpsb
in
mov
pop
ficoml
ret
mov
push
jnp
cmpsl
js
sbb
fdivr
mov
sbb
enter
mov
push
lcall
aad
inc
cmp
push
mov
leave
test
lea
cmp
fcomip
cmp
nop
fmull
push
iret
inc
cmc
and
jns
dec
and
enter
dec
ds
inc
ds
fcoml
rcrl
bound
mov
push
addr16
or
mov
xchg
in
push
sub
insl
push
xor
aad
fxch
sub
push
es
pop
ret
sub
movsb
ret
sbb
lods
inc
sbb
mov
adcb
sahf
sub
pop
xlat
pushf
pusha
push
shrb
mov
sbb
lea
add
mov
movsb
sar
into
push
aam
imul
lcall
add
js
cmp
adcb
jecxz
mov
outsl
aaa
loopne
repz
add
repnz
adc
fnstsw
jmp
and
dec
gs
pushf
lret
aam
xlat
cmp
mov
popa
xor
add
push
aas
fidivrl
lret
or
test
push
xor
fsub
mov
ss
sub
bound
lret
inc
adc
cwtl
xchg
rorb
add
je
loopne
inc
orl
adc
call
rclb
in
rcl
mov
movsb
ret
mov
adc
scas
shrb
adc
fwait
mov
and
mov
adc
imul
push
adc
sbb
sbb
test
pop
js
sbb
std
stc
mov
lret
cmp
cmp
int3
pop
jno
jae
push
jb,pt
std
pushf
jecxz
test
rolb
stos
push
ss
or
or
cli
mov
dec
cs
adc
rcrb
and
cmpsb
push
std
rol
enter
jo
orb
pop
arpl
mov
xlat
out
sub
and
sub
rcll
cltd
push
push
and
movsl
cltd
lds
add
scas
ffree
ret
scas
and
mov
push
shr
cmpsl
mov
xor
jne
stos
rclb
sti
ja
shl
std
lret
push
or
push
rcll
pushf
ret
adc
arpl
orl
and
mov
nop
xchg
jecxz
out
fistps
jno
ja
das
pop
jg
fwait
sub
out
and
cmpsb
sti
jbe
es
mov
mov
sarl
and
scas
jl
sbb
jle
nop
popf
rclb
scas
sbb
mov
and
jle
vdivpd
sub
adc
sub
push
cmp
aam
popl
loope
lock
cmpsl
inc
pusha
xor
sbb
mov
mov
xor
sbbl
inc
sbbl
insl
adc
pop
jl
push
inc
inc
aam
xor
add
ja
ret
filds
out
dec
lock
aam
push
cmp
mov
in
les
call
data16
fldl
scas
mov
lods
gs
mov
inc
insl
pop
adc
mov
ret
roll
or
loopne
bnd
es
cmpsb
xchg
jecxz
int
push
pop
cmp
sub
shl
mov
dec
push
pop
repz
xchg
mov
int3
lcall
cwtl
cmp
shlb
cmp
addr16
js
cli
sbbl
mov
sub
dec
sbb
das
ljmp
ret
lahf
sbb
pop
pop
cmc
cmpsb
add
shl
cmp
mov
mov
fdivs
jecxz
or
ret
fwait
xor
int3
aaa
cmpb
xchg
jl
mov
std
inc
jne
inc
cmp
lods
add
and
test
ljmp
adc
push
xchg
lea
inc
bound
das
mov
or
psubusb
popa
lock
cmp
in
add
outsl
adc
inc
scas
ret
lock
cld
sbb
mov
adc
lods
mov
insl
lret
roll
mov
inc
inc
jne
jb
mov
mov
pop
dec
dec
aas
jno
xor
push
push
xor
ret
adc
push
cwtl
mov
mov
xor
dec
mov
test
cmpsl
inc
xorl
sbb
je
dec
jnp
es
mov
mov
push
data16
cmp
das
sub
ds
clc
sub
xchg
repnz
adc
cmpsb
inc
adc
pusha
inc
outsb
adcl
and
xor
sub
jmp
out
mov
inc
add
es
pop
loopne
inc
pop
sahf
mov
push
imulb
mov
sub
scas
adc
imul
shrl
cli
jle
faddl
mov
and
jbe
pop
mov
hlt
and
inc
aad
dec
test
outsl
mov
add
sub
dec
daa
repnz
jbe
addr16
push
pusha
mov
std
mov
pop
decb
xlat
insl
dec
jb
out
loop
lock
testb
aam
in
xor
lcall
fldenv
or
add
mov
fcmovnb
stos
pop
mov
or
mov
repz
mov
and
cmp
out
pop
cmp
fcomps
dec
fdivs
test
std
lods
inc
push
push
xor
mov
mov
xchg
jg
sbb
test
mov
repnz
rolb
xchg
aam
stc
inc
pop
int
in
or
pop
lret
sbb
imul
mov
mov
test
repz
xchg
imul
push
js
nop
adc
in
scas
add
inc
aas
sahf
ss
add
repnz
int3
ljmp
movsl
jae
xor
and
pop
mov
and
arpl
xor
or
lret
dec
ret
lods
pop
fdivrs
push
push
addb
add
addr16
mov
mov
pop
lods
movsb
push
stos
mov
rorb
sbb
push
jbe
push
lock
jbe
sti
xchg
mov
movsl
jecxz
inc
lret
mov
cmpsb
lods
icebp
mov
lods
scas
fwait
icebp
clc
or
mov
xor
sbb
cli
les
add
dec
dec
cs
dec
dec
clc
jg
scas
mov
into
add
fidivrs
in
out
iret
cmpsl
dec
inc
mov
mov
lahf
or
xchg
and
not
xchg
mov
lock
ret
ret
out
lods
xor
jno
jg
lcall
add
push
mov
fisubs
loop
pop
hlt
pop
int
add
jp
clc
xchg
mov
mov
mov
push
rcrl
push
rorb
cltd
xchg
add
iret
imul
sub
or
aaa
mov
aam
and
xchg
pop
stos
pop
fstl
mov
rolb
xchg
mov
in
inc
in
aad
or
mov
cli
in
mov
je
inc
iret
jb
dec
mov
fnstenv
mov
push
jle
gs
hlt
fimull
or
shr
shrl
std
imul
mov
mov
push
lds
data16
loopne
sub
stos
insl
mov
shrl
pushf
xchg
pushf
pop
cmpsb
fcmovb
aam
pop
jns
xor
addr16
lret
popf
mov
scas
inc
xor
cld
push
xchg
les
fistpll
and
jne
test
lea
inc
and
adcb
mov
jg
pushf
mov
jno
jl
fsts
jecxz
shl
sub
mov
adcl
mov
cmp
inc
rcrl
in
mov
je
mov
adc
mov
cmp
loopne
jae
cltd
in
mov
fsubrs
push
add
loope
mov
daa
cmpsb
outsb
mov
sbb
add
fistps
fstpl
int
imul
or
jg
out
mov
movsb
mov
popa
and
mov
or
arpl
mov
das
cs
push
sbb
pop
loopne
outsb
push
push
insb
pop
rorb
into
add
stos
mov
sub
sub
leave
xchg
frndint
popa
out
pop
sbb
vpshufd
repz
push
pmaxub
movsb
cmpsl
dec
dec
enter
push
insb
loopne
mov
imull
ss
mov
and
pop
xor
aam
inc
ds
or
sub
stos
lods
or
in
rorl
seto
jmp
popf
push
cld
out
out
jle
mov
xor
pop
xlat
mov
lods
jp
jle
pop
cmp
out
push
push
cmpb
jp
jl
inc
xor
pop
mov
nop
mov
push
cmp
xchg
mov
pusha
sarb
int
aad
fstpt
push
repnz
jo
bound
pop
or
jmp
mov
mov
xor
add
sbbb
sub
test
mov
xchg
sbb
scas
lds
aad
and
xchg
cmp
add
scas
jg,pt
std
xchg
insb
xchg
rorb
shrl
mov
mov
sti
mov
and
sub
leave
sahf
sub
loope
es
push
sarb
loop
pop
jnp
lods
pop
int3
add
dec
xor
insb
inc
add
or
pop
pop
fistpl
mov
xchg
iret
pop
sbb
imul
loop
rol
icebp
jg
xchg
jp
sbb
pusha
dec
mov
arpl
xor
insl
xchg
sahf
shll
daa
inc
add
sub
mov
in
mov
ljmp
rol
fwait
cmp
into
or
jp
rep
pop
sarl
xchg
add
data16
sbb
scas
cmp
or
das
aaa
push
or
movsb
loopne
cmp
add
xchg
and
divb
add
mov
mov
shll
sub
mov
loope
add
mov
mov
aaa
pmulhw
sahf
lahf
and
fwait
mov
add
mov
test
mov
lods
push
cld
jge
cs
aas
in
or
and
shrl
notrack
mov
xor
out
or
push
push
jae
mov
das
testb
fidivrl
arpl
das
repnz
sbb
cmpl
mov
mov
popf
mov
loop
in
adc
adc
out
xlat
inc
movsl
fldcw
sti
inc
mov
sbb
xchg
cmpsl
inc
mov
cli
les
xchg
in
rcrb
push
hlt
add
arpl
shrl
and
cltd
in
push
aad
push
fldcw
xchg
mov
out
push
scas
pop
inc
push
and
mov
ficoml
and
cmp
jl
cld
lcall
xchg
pop
jo
jmp
xor
cltd
jmp
popa
mov
hlt
cs
adc
xor
mov
cli
jle
lea
aaa
and
cmp
sbb
pop
js
iret
xor
xor
and
leave
xorb
push
add
and
and
test
fwait
test
mov
clc
sbb
inc
out
ds
adc
adc
mov
xchg
cmpsb
cmp
scas
or
push
push
mov
mov
movsb
lods
sbb
dec
sbb
lods
add
sub
out
inc
jo
adc
pusha
inc
sbb
jns
iret
adc
sub
mov
xchg
mov
inc
lret
pop
popa
inc
jmp
neg
jae
enter
or
rorl
pop
nop
adc
push
xlat
lret
lahf
ss
divl
arpl
stos
and
arpl
xchg
lock
sahf
nop
mov
ret
ficomps
and
roll
mov
repnz
pop
lods
adc
pop
push
jecxz
aad
pop
test
test
les
jnp
popf
insl
xchg
pop
lcall
and
inc
cmpsl
hlt
jne
jbe
les
xor
xor
imul
sbb
fst
or
arpl
mov
or
enter
out
fchs
sahf
cwtl
daa
movsb
dec
pop
cmp
fstpt
das
into
lahf
inc
mov
insl
adc
sbb
aad
testb
repz
frstor
sbb
or
adc
aas
fisubs
lcall
mov
sbb
out
mov
mov
jo
inc
add
xor
icebp
imul
push
dec
jecxz
fdivrs
mov
inc
int
push
pushf
scas
int3
sub
lea
xchg
sbb
movsb
and
pop
scas
ficompl
in
mov
xor
mov
dec
or
xchg
mov
mov
loope
aas
dec
add
mov
mov
pop
test
add
pop
xchg
fs
adc
into
insl
in
stc
test
dec
and
or
std
lods
in
rol
pop
rol
mov
mov
nop
test
int
jle
outsl
pop
jp
and
or
test
inc
inc
adc
xchg
orb
mov
in
jmp
into
push
add
in
fstp
cmp
push
scas
mov
lcall
test
pop
xchg
cmp
sub
scas
or
jp
inc
push
push
push
cmp
cmp
push
cwtl
push
repnz
ds
and
sub
push
push
jnp
das
xor
ss
incl
jnp
dec
cli
jo
xor
ds
mov
mov
xlat
enter
sbb
xor
xor
test
fisttps
or
lcall
mov
leave
dec
mov
mov
pop
or
pop
cwtl
mov
mov
push
sti
inc
xor
std
lods
std
adc
mov
adc
clc
push
jno
or
aas
pop
xchg
xchg
lock
or
sub
cwtl
cmp
sahf
xchg
xor
in
scas
cmc
ficompl
hlt
cltd
dec
mov
mov
mov
ss
pop
and
dec
std
jo
xor
enter
cmp
lods
mov
incb
xchg
xor
jmp
dec
mov
mov
jne
scas
aam
sub
lret
std
test
jno
sub
dec
cmpsb
fsincos
test
dec
mov
push
bnd
adc
jbe
les
push
inc
cmp
cmp
xor
push
and
add
adc
adc
loope
or
sub
push
rcl
pop
xchg
out
mov
xchg
and
jge
mov
sub
ret
mov
mov
shlb
jns
insl
mov
call
push
stos
fnstcw
call
aas
lods
out
js
rorl
cs
lds
cmp
mov
out
xor
aas
cmp
fwait
aam
nop
mov
jns
push
out
xchg
cwtl
sbb
scas
outsl
sarl
xor
sbb
lret
incb
sbb
mov
scas
cmp
add
xchg
ficoms
xor
test
push
adcl
or
dec
in
lahf
adc
fsubrl
sub
add
out
test
cmp
leave
int
push
jns
xor
inc
pop
push
add
pop
roll
jo
cmpsl
test
xor
int
xchg
call
movsl
nop
mov
data16
mov
js
mov
ficompl
stos
jle
cli
mov
jecxz
push
sti
mov
pop
push
lds
fwait
lods
movsb
fdiv
inc
scas
lods
es
mov
xchg
sub
imul
rorl
test
ja
xchg
xor
add
xchg
push
in
das
cmp
cwtl
movsb
xchg
push
or
stos
lods
les
or
test
arpl
cmpsb
popf
push
mov
es
sbb
ret
aas
jg
xor
mov
mov
out
insb
jno
out
mov
mov
movsl
and
xor
mov
xor
mov
jmp
sahf
loopne
xchg
cwtl
cld
fdivl
test
popf
mov
inc
cwtl
es
inc
in
addb
sbb
jp
and
pop
out
push
dec
jge
sub
push
leave
push
dec
mov
dec
hlt
cmp
jns
into
jo
lret
out
std
xor
cmp
adc
fidivl
pop
cmp
out
or
lret
sbb
outsl
xchg
xor
in
mov
notl
jo
pop
out
push
add
cmp
add
adc
dec
mov
mov
or
push
or
out
pop
dec
jnp
mov
push
unpcklps
sbb
or
lahf
lds
pop
jno
push
mov
mov
mov
fisubrs
and
stos
and
movsb
jecxz
pop
add
cmpsl
push
sarb
aam
xchg
jmp
dec
mov
sub
outsb
adc
test
std
jl
or
add
call
add
xor
loopne
xchg
lods
sub
fldl
dec
mov
mov
dec
mov
pop
adc
pop
lretw
in
test
cmpxchg
sub
adc
adc
mov
leave
rolb
mov
inc
push
push
jo
cmpsb
mov
or
testl
clc
inc
iret
mov
lret
jbe
fwait
inc
mov
mov
xchg
fldt
orl
mov
jge
int
mov
jo
pop
pop
inc
fldenv
lahf
add
cltd
iret
int3
and
pop
pop
jge
gs
scas
add
int
and
mov
gs
mov
push
mov
push
or
pop
jnp
mov
test
push
xor
out
jmp
arpl
adc
xlat
push
or
int
jecxz
mov
aad
or
aad
ljmp
nop
dec
outsl
mov
jg
loop
mov
outsb
leave
mov
adc
pop
fimull
shl
jne
sub
inc
pop
shll
shl
mov
push
inc
lods
outsl
pushf
ss
cmp
and
call
xchg
jae
loope
fldl
cmp
mov
inc
sbb
inc
pop
aad
popa
lea
inc
fwait
mov
loop
ja
xor
inc
je
mulb
ret
inc
ficoms
lods
add
enter
mov
mov
mov
fisttpl
sbb
mull
je
in
or
pop
call
xchg
sbb
aad
and
int3
inc
fstpt
push
add
inc
int
xlat
rorl
es
dec
fwait
rclb
leave
movsb
cmc
in
push
sbb
loop
jb
faddl
cmova
add
cmp
pop
sub
dec
fdivs
lods
dec
sub
cs
adc
xor
push
mov
mov
lret
add
lods
mov
mov
dec
aaa
call
adc
xchg
push
aad
cmp
dec
insb
adc
mov
sbb
nop
arpl
sbb
push
data16
inc
std
xchg
test
sbb
gs
xchg
jno
int
jecxz
jae
jo
sbb
mov
inc
es
cmp
xchg
pop
out
inc
mov
outsb
addr16
inc
fs
imul
int3
cmpsb
shrb
fildl
imul
icebp
les
aas
test
pusha
notb
push
jle
sub
sbb
mov
inc
sbb
jle
scas
movsb
push
insl
ljmp
nop
scas
ret
and
jo
dec
dec
gs
daa
fucom
push
jne
mov
pop
mov
dec
test
mov
ljmp
xor
pop
cli
pop
sbb
mov
mull
or
xor
je
ss
xchg
lret
ljmp
push
xchg
repnz
push
in
sub
int
push
xchg
jl
aaa
outsl
rorb
out
pop
sti
outsl
mov
mov
jo
ret
push
jnp
ds
cmp
push
lret
and
data16
imul
lret
popa
stc
or
jno
dec
jno
repnz
ret
sbb
cmp
push
insl
lahf
mov
add
xchg
movsl
clc
scas
jge
call
ja
sbb
pop
pop
lahf
imul
push
pop
sbb
icebp
push
pop
fs
int
lret
mov
shrl
dec
fst
mov
mov
popa
inc
adc
test
jnp
or
jmp
mov
test
cmc
add
andl
ljmp
sub
sub
insl
inc
jmp
faddl
sbb
xor
push
mov
orl
push
pop
aas
pminsw
cmp
jns
mov
sbb
sub
or
dec
aaa
test
sub
das
adc
inc
repz
add
pop
dec
pop
les
jae
push
mov
scas
aad
adc
test
ljmp
daa
sbb
ss
adc
out
cmpsb
fsubs
shll
mov
or
outsb
pop
movsb
mov
popa
add
mov
lods
negb
sub
ja
sub
or
adc
repnz
mov
xor
imul
sahf
sub
mov
pop
aam
push
fimull
sbb
clc
jg
mov
int3
stos
daa
std
int
add
aas
or
lret
dec
jmp
mov
push
mov
fidivrs
mov
push
add
sti
push
push
push
adc
in
out
xchg
mov
adc
fsts
sub
add
sahf
ret
or
sub
xchg
adc
or
in
mov
sbb
lods
fcmovb
pusha
fwait
pop
jno
mov
imulb
cmp
xchg
shlb
dec
stos
movsb
jnp
xchg
mov
inc
adc
lret
popa
xchg
fdivp
mov
int3
inc
stos
pop
ss
dec
push
mov
jmp
or
push
imul
jl
inc
push
push
loope
inc
mov
dec
nop
sarb
mov
rdtsc
addb
mov
xchg
dec
jnp
mov
insl
das
inc
fmulp
imul
or
scas
insl
sti
not
cld
xchg
sub
aas
fmuls
or
leave
lock
pop
call
xchg
add
or
ss
cmp
ljmp
xorl
lea
subl
repnz
loope
rcl
lods
mov
dec
lcall
imul
pop
into
test
ds
sbb
pop
pop
jnp
mov
test
cmpb
pushf
in
xchg
shrb
mov
filds
fwait
cld
and
push
ficoms
push
bound
test
sbb
hlt
movsl
das
dec
dec
push
jo
push
nop
push
inc
mov
cmc
and
out
imul
out
adc
sub
and
jl
xchg
es
add
das
roll
mov
mov
lods
mov
push
dec
popa
dec
mov
stc
pop
lock
stc
xchg
leave
test
sub
outsb
xor
or
iret
lahf
sub
sbb
mov
das
mov
mov
out
inc
clc
in
pop
jne
mov
sub
fs
cli
js
or
jae
out
mov
xor
std
xor
lods
inc
fcomps
add
sbb
mov
or
stc
clc
repz
pop
and
arpl
jbe
push
inc
mov
inc
imulb
cmp
push
popf
xor
sub
jo
push
adc
shll
cltd
mov
pop
mov
daa
sub
mov
dec
xchg
push
sub
bound
aaa
inc
inc
jl
pop
mov
mov
notl
jnp
sub
pop
adc
mov
push
outsl
lods
dec
xor
lods
hlt
and
test
jp
subb
scas
loop
sub
cmc
xchg
jo
mov
jge
pop
jecxz
pop
mov
out
jne
js
je
movsb
adc
bound
cmp
rcrb
push
xchg
jecxz
mov
leave
push
xchg
xor
jl
imul
out
mov
mov
idiv
hlt
jbe
pushf
xor
out
sbb
pop
pop
sahf
sbb
add
and
outsl
lea
movsb
mov
into
pop
dec
aad
xlat
add
pop
andl
jle
insl
and
push
lds
push
cmc
dec
aas
insl
sub
xorb
decb
adc
xchg
fwait
and
test
stos
jo
outsb
inc
mov
or
mov
mov
sbb
and
pop
rclb
cwtl
cmp
ja
adc
fcomi
mov
arpl
dec
ds
ret
out
out
jbe
or
lret
push
pop
mov
jb
call
pushf
inc
mov
cmp
stos
icebp
ds
ljmp
push
les
xchg
inc
imul
dec
push
jecxz
dec
dec
jne
out
outsb
jge
ficompl
xor
fs
jno
pop
repnz
scas
out
or
inc
adc
jb
push
sahf
pop
sbb
pop
push
fdivrl
and
push
mov
daa
mov
es
bound
ljmp
push
mov
dec
cli
add
push
sbb
leave
pop
jnp
in
insb
xchg
jae
inc
inc
test
pop
pop
xchg
inc
inc
pop
scas
pop
ds
movsb
enter
int
cmp
push
test
adc
push
jns
out
xchg
mov
cs
mov
cmp
adc
stos
sbb
nop
xchg
dec
fnstsw
ss
mov
dec
pushf
fsubl
repnz
add
icebp
lock
and
shr
data16
sbb
movsb
sbb
push
mov
rcrb
or
xlat
lods
xlat
ret
pop
push
subps
jge
dec
and
mov
lret
adc
adc
daa
cmp
pop
lcall
push
push
fldl
stos
and
push
inc
xor
mov
out
push
stos
adc
mov
mov
fnstenv
sbb
or
popf
test
pop
cmp
rolb
add
mov
jbe
jno
loop
mov
cltd
mov
mov
fchs
ret
mov
pop
inc
js
jbe
ret
push
cmp
pop
call
fildl
sbb
mov
cmc
mov
push
sub
cmpsl
nop
sbb
ljmpw
mov
mov
jmp
jp
daa
jnp
push
fldt
loopne
shll
fisttpll
jno
ficomps
rcll
imul
gs
dec
mov
jp
imulb
dec
addr16
cmp
incl
sbb
pop
pop
lods
xchg
jb
sub
mov
jo
jmp
ficoml
push
xchg
sbb
lret
pushf
outsl
jp
cmpsb
pop
mov
rol
or
or
dec
les
push
andb
jl,pt
loop
cmp
daa
lods
aaa
push
add
test
imul
dec
jl
pusha
test
stc
jnp
loope
push
adcl
lahf
and
mov
and
les
mov
out
dec
fldenv
mov
push
mov
sbb
stos
bound
aad
cmpsb
data16
lods
cld
hlt
addr16
xor
negl
mov
jecxz
shr
mov
and
and
mov
inc
bound
pop
add
flds
lea
jl
nop
mov
jmp
cld
mov
pop
or
dec
and
cltd
xchg
and
popf
cmp
and
jns
sbb
pop
jg
out
xor
pop
mov
stos
mov
scas
mov
mov
jno
subl
fistpl
pop
pop
in
iret
pusha
aad
push
xor
insb
adc
mov
xchg
sub
xor
fcompl
dec
mov
xchg
cld
lret
pop
mov
add
adc
shl
loop
daa
sbb
test
mov
in
cltd
rolb
and
dec
aas
aaa
das
fcomps
faddl
mov
xchg
and
mov
adc
inc
stos
cmp
pusha
jnp
inc
dec
sbb
mov
ror
mov
sub
data16
inc
mov
add
mov
xchg
xrstor
aaa
mov
xchg
jp
pop
int3
add
mov
and
imul
sub
xlat
stc
outsl
out
mov
xor
mov
ja
rcrb
jl
or
sub
call
mov
subb
and
sub
lods
cmpb
pop
test
jg
popa
fistps
addr16
cmp
pop
pop
ret
dec
push
outsb
loopne
sbb
mov
jl
jp
loopne
repnz
jl
cmp
icebp
pusha
adc
inc
in
dec
dec
xor
int3
pop
sub
jmp
int3
cltd
sub
add
pop
imul
das
int3
out
inc
scas
mov
cmpsb
addr16
add
xchg
adc
jo
popf
push
cli
mov
pop
mov
or
div
ficoml
cwtl
lcall
mov
shl
movsb
add
std
lret
sbb
push
test
test
or
pop
adc
fcompl
out
pop
fisubs
fisubl
push
aaa
add
movsb
mov
xor
adc
xchg
scas
dec
mov
jae
fildll
push
xchg
in
dec
aas
dec
cmp
js
jge
cmc
mov
and
in
pop
aad
mov
pop
out
xor
cld
ja
in
lcall
dec
inc
sub
jmp
dec
dec
mov
enter
call
cwtl
and
ja
clc
xchg
sbb
clc
inc
popa
fiadds
rclb
pop
dec
icebp
inc
push
in
add
lret
loopne
insl
sub
out
ficoml
call
xchg
rcll
ret
nop
js
outsl
std
in
mov
push
sbbl
and
cld
scas
scas
lret
mov
sbb
leave
pushf
in
push
mov
push
jo
and
cmp
paddusw
jbe
insb
pop
adc
das
or
cld
movsl
insl
sub
in
push
push
push
mov
mov
jecxz
inc
xchg
and
setbe
jge
out
int3
xlat
pushf
negb
mov
sbb
mov
jae
addl
sub
out
add
sub
xor
hlt
or
sub
mov
and
aaa
xchg
add
cmc
aas
daa
repz
mov
mov
std
cmp
xchg
shlb
dec
push
rep
add
dec
push
xor
pop
push
mov
mov
js
sti
test
lcall
and
mov
addr16
sbb
push
xchg
aas
add
sub
fmuls
or
mov
mov
popa
dec
cmc
cmp
fmull
and
adc
pop
jno
or
xor
sub
dec
or
leave
mov
std
test
movsl
mov
xchg
inc
jns
sbb
mov
cmp
or
dec
push
xchg
testl
mov
dec
sbb
loope
lahf
ret
in
sti
fmull
sbb
jns
adc
add
stc
test
fucomp
fisubrl
cmp
mov
xchg
les
xlat
sbb
jo
rcrb
rorl
cmp
adc
mov
lock
popa
dec
cmc
inc
or
outsl
xchg
js
cmpsb
and
or
adc
gs
adc
fdivr
dec
notb
faddl
test
aaa
inc
mov
rcl
sub
inc
nop
cli
mov
daa
xor
scas
jg
mov
mov
movsl
jns
fisubs
jp
movswl
mov
ret
lret
pop
xchg
inc
ja
cmp
xchg
ret
jle
inc
test
xchg
ljmp
or
cmp
les
aad
pop
xchg
and
notb
mov
out
cmp
pop
jmp
ljmp
dec
dec
sub
pop
ja
mov
pop
sbb
test
adc
jle
jno
and
testb
lds
dec
mov
div
push
mov
nop
add
insb
adc
sub
sbb
nop
adc
mov
xor
sbb
ret
inc
inc
sbb
xorl
cmpsb
cmp
xor
mov
jl
scas
ss
pop
cmpsl
or
dec
aad
sbb
pusha
add
xchg
movsl
rorl
sti
mov
test
jb
outsb
movsl
cmp
push
lcall
push
sbb
or
add
push
jl
outsl
fwait
xchg
ja
pop
xor
fisubrl
stos
pop
xchg
cwtl
mov
mulb
dec
popa
cli
adc
adc
push
mov
xchg
roll
testb
lea
scas
rorb
in
fwait
inc
xchg
popa
and
cmp
jge
sbb
and
jo
rorb
push
or
xchg
icebp
inc
sub
push
aad
arpl
mov
mov
add
sar
jbe
xor
adc
and
sub
popa
mov
test
lds
mov
sub
lods
fwait
test
pop
pop
inc
mov
sbb
mov
or
inc
dec
mov
lahf
sbb
push
sahf
movsl
neg
aaa
iret
int3
jp
cmpsl
into
sbb
inc
lcall
fcompl
repnz
xor
sbb
mov
adc
mov
jns
inc
xchg
mov
dec
push
xchg
sbb
push
popa
inc
aad
add
xor
jle
push
jo
push
xor
pop
mov
fisubs
xchg
dec
insb
xchg
inc
dec
mov
test
test
mov
xlat
xor
daa
mov
cmpsb
jae
fwait
cld
jmp
out
sbb
sbbl
popf
test
cmpb
or
call
pop
adc
movsb
out
test
or
push
daa
fstpt
adc
int
inc
dec
xor
lret
pop
sbb
imul
pop
popf
dec
leave
adc
sbb
rcrl
nop
dec
divb
cli
repnz
popa
xchg
sbb
loope
dec
push
sbb
or
adc
in
mov
insl
inc
push
sti
lcall
push
jmp
sbb
fistps
mov
std
ret
sub
sbb
xchg
mov
nop
push
xchg
mov
sub
xor
rorb
mov
or
mov
stc
call
cmp
or
sub
aaa
movsb
pushf
mov
jb
loopne
cwtl
hlt
mov
pop
scas
jp
fsubrl
add
jo
lret
movsl
clc
lahf
or
sub
fcmovb
loop
mov
adc
sar
jecxz
cmp
pop
dec
ljmp
cmp
dec
cmc
mov
je
call
add
xchg
xor
sub
pop
adc
jmp
lods
jno
pop
add
push
xor
lods
divb
fsubs
push
ja
es
nop
rcl
std
or
repz
lret
and
lods
test
inc
lret
inc
jno
mov
push
hlt
cmp
cmp
xchg
cmc
pop
xchg
cmp
clc
xchg
sbb
out
and
or
pop
leave
mov
mov
mov
lcall
lods
shll
mov
sarb
in
lret
popa
jne
jecxz
mov
lods
xchg
push
daa
insl
repnz
rol
xor
mov
pop
cmp
js
sbbb
dec
mov
mov
sbb
pop
mov
loop
enter
addb
add
dec
fimull
xchg
andb
push
xorl
jg
nop
je
sub
in
test
jle
mov
lcall
jg
lcall
pop
imul
repnz
test
inc
test
shrl
or
push
adc
and
inc
fs
mov
int
push
movsb
pop
mov
and
add
fsubl
inc
aad
sub
popf
xor
xor
dec
push
push
out
pop
out
jmp
lock
push
scas
mov
int3
adc
popl
int3
push
out
push
aam
adc
xlat
add
mov
cwtl
rorb
dec
dec
sub
mov
aas
fcmovnu
dec
jge
mov
inc
xor
xor
mov
xor
loopne,pt
js
jne
mov
loopne
fs
jp
mov
call
icebp
repz
and
mov
xor
out
pop
scas
lods
mov
insb
jne
lcall
and
call
jmp
mov
rorb
ret
mov
wbinvd
jecxz
cmp
mov
lahf
inc
out
icebp
inc
sbb
lea
andl
and
mov
rorl
lahf
and
fidivrl
lods
rcll
jnp
and
push
ficoml
adc
nop
and
imul
pop
push
lods
fstps
les
xchg
lcall
out
sbb
xor
sub
pop
cmpsb
imul
add
or
mov
sbb
xor
stos
out
js
sbb
stos
fildl
lea
xor
xlat
int
dec
xor
aas
jno
jmp
cmp
mov
inc
fsubrs
dec
dec
jl
xchg
adc
inc
push
arpl
jle
inc
fisttps
int
icebp
rcrb
or
daa
push
xchg
roll
bound
daa
jle
jecxz
mov
stos
xlat
xchg
outsl
mov
xor
adc
movsl
sub
mov
lea
cmpsb
inc
push
mov
call
mov
and
cmp
sbb
sub
jl
mov
rcrb
lret
mov
jno
or
ds
ja
jns
ficoml
dec
sahf
popf
push
mov
add
out
lea
push
repz
test
dec
movsl
out
loopne
shlb
fstpt
push
jne
mov
cmpsb
mov
jnp
es
add
scas
daa
aas
mov
shlb
repnz
add
imul
ds
mov
sahf
out
xchg
jne
cltd
sar
inc
push
add
or
mov
repnz
loop
movsb
mov
jmp
dec
sti
sub
cmp
ss
mov
cmp
addr16
mov
sub
scas
add
push
inc
fisubs
aaa
testl
mov
adc
into
jnp
jmp
add
inc
inc
xorb
xchg
xchg
xchg
fld
pop
popa
mov
adc
mov
cmpsl
xchg
inc
icebp
sbb
movsl
hlt
loopne
stos
mov
lcall
bndstx
notl
mov
pop
into
sub
push
cmpsl
inc
mov
out
fnstenv
push
and
pop
xor
pop
lea
imul
jge
cmp
cmp
lahf
lret
pop
pop
roll
pop
arpl
js
aaa
repnz
insl
jns
and
sub
jnp
push
mov
lods
arpl
sub
cltd
out
and
andl
pop
sbb
sarl
push
test
movsl
out
aad
cmc
shll
xor
and
cmp
sub
jbe
sbb
pop
mov
inc
push
cld
out
stos
idiv
fadds
repz
nop
data16
dec
cltd
adc
jecxz
out
sub
sbb
and
out
or
or
pop
mov
shll
test
test
xchg
xchg
stc
pop
dec
push
adc
lret
cmp
adc
int
hlt
rcrl
dec
aam
mov
and
es
mov
xor
sub
movsb
mov
loopne
fsts
mov
mov
and
push
add
sub
add
lea
cwtl
cmp
fnstenv
push
fildl
mov
pushf
cmp
aad
xchg
sbb
add
pop
stc
pusha
xchg
shlb
js
lcall
xchg
mov
pop
lahf
sbb
push
test
fcoms
aad
lock
dec
cmp
mov
push
pop
inc
mov
lret
test
fcompl
lret
xor
adc
test
and
in
inc
jb
std
test
adc
sbb
add
out
xchg
imul
pop
mov
inc
xor
cmpsl
mov
bound
jns
jl
add
xchg
lea
inc
lds
push
imul
mov
cli
test
xchg
fcom
subl
adc
mov
adc
adc
and
stc
out
stos
mov
xchg
pop
add
enter
dec
imul
sbb
pusha
mov
icebp
cli
dec
jnp
mov
inc
and
stc
mov
iret
jmp
out
push
pop
jl
idivb
cmp
adc
scas
pushf
insb
jmp
jmp
in
pop
sbb
out
out
outsl
mov
xchg
sub
sbb
jne
pop
mov
lret
mov
fcmovnb
and
add
call
nop
jae
ja
movsl
inc
xor
fildll
sti
jno
dec
pop
and
loopne
call
or
fadds
lock
stos
sbb
mov
jp
cwtl
in
and
fsubs
lahf
push
adc
out
or
push
push
movsb
clc
push
push
cli
xchg
daa
in
xor
mov
mov
inc
xor
popa
cmp
xchg
push
jo
cld
xchg
cmp
cmp
into
outsl
mov
jae
js
adc
jns
pushf
dec
mov
mov
aam
rclb
js
lock
lods
jo
add
ret
adc
lret
movsb
adc
mov
stc
mov
adc
sbb
aad
shlb
jno
leave
lret
out
mov
fcomps
adc
stc
scas
shr
stc
int
mov
imul
xor
aaa
cs
movsb
add
out
fs
scas
shlb
pushf
je
jne
lahf
adcl
ljmp
inc
subb
or
pop
adc
outsb
shlb
call
xor
add
pop
pop
add
leave
jg
sarl
aam
mov
mov
jl
out
lahf
ret
jecxz
jae
dec
fnstsw
dec
sahf
rclb
sbb
repz
movsl
iret
and
int
xchg
ds
bound
jge
pushf
fcomps
cld
push
lret
rolb
mov
les
fwait
pusha
adc
cltd
lds
lea
dec
mov
popl
hlt
mov
mov
sub
imul
subb
or
out
pop
in
movsl
jae
and
push
cmp
or
inc
mov
fstpl
dec
xor
adc
jle
icebp
mov
int3
call
shlb
sbb
push
dec
or
repnz
xchg
sbbl
xchg
inc
mov
push
pop
mov
mov
mov
sarb
repnz
pop
fwait
or
pop
dec
nop
lds
or
lret
jl
xor
xchg
adc
lea
push
jmp
mov
xchg
fcompl
scas
xchg
mov
jmp
rcrb
test
push
lds
scas
xor
pop
sub
mov
cmpb
jge
sarl
rorl
xchg
or
ja
adc
stos
fsubrl
cmp
daa
push
sbb
inc
arpl
imul
sbb
cltd
jbe
xor
pop
into
imul
adc
mov
pop
imul
test
pop
aaa
mov
int3
dec
sti
mov
push
pop
dec
dec
add
std
push
insl
idivl
ret
loope
out
mov
sbb
push
insb
add
dec
sahf
imul
mov
in
jae
repnz
jno
jnp
loope
orb
pop
pop
push
subb
cmp
cltd
les
and
mov
popf
pop
bnd
mov
xor
sar
jge
iret
mov
jno
mov
dec
decl
fsts
mov
out
out
pop
ret
stos
test
shl
cmp
push
fidivs
in
inc
cmp
iret
lret
xor
mov
aad
and
and
rol
inc
jne
pop
enter
add
push
pop
mov
add
xchg
faddl
shl
into
jne
pop
jb
mov
jg
adcb
in
stc
sbb
in
cmp
xchg
inc
stc
push
mov
testl
dec
imul
pop
add
out
fchs
push
mov
mov
push
sbb
mov
test
cmp
push
pop
jns
mov
dec
add
add
sub
jb
stc
push
ljmp
lea
or
mov
mov
mov
and
iret
and
dec
rorl
pop
mov
sub
ret
push
sbb
or
mov
xor
fistpll
adc
mov
mov
mov
sub
sbb
sahf
mov
outsl
inc
mov
cmpsl
fdiv
fwait
arpl
inc
mov
dec
jno
push
add
mov
popf
test
jl
or
cmp
lcall
ss
adc
and
rcr
gs
lds
add
and
add
xlat
cmc
bound
cmp
mov
ljmp
mov
popf
sbb
push
fwait
dec
jo
cltd
xchg
scas
cmp
sub
in
push
insl
outsb
add
inc
daa
mov
mov
aas
or
popa
dec
daa
in
pop
and
mov
gs
into
cmp
je
int3
into
xchg
inc
dec
pop
xchg
cli
push
orl
adc
daa
or
or
xchg
sub
sub
add
push
cmpl
cmp
lret
enter
mov
cmp
test
mov
dec
jo
sarb
mov
adc
sbb
mov
imul
push
out
fdivrs
mov
imul
dec
nop
xor
sub
lods
adc
out
fildll
pusha
sbb
dec
jecxz
popf
das
cmp
inc
sahf
shr
outsl
outsl
movsl
mov
loope
fiadds
mov
loopne
and
pop
push
notl
rorl
lds
dec
pop
cmc
and
int3
xor
adcb
adc
cmp
and
loop
nop
jecxz
cmp
add
out
sub
cmp
fldln2
mov
aaa
ja
imul
outsl
lcall
and
pop
and
shlb
mov
lret
je
test
loope
enter
rclb
mov
call
mov
or
cmp
movsb
mov
mov
xor
rorl
js
jmp
scas
leave
jae
cltd
pop
cmpsl
or
psrlq
xchg
lods
push
add
inc
mov
sbb
mov
mov
pop
std
sbb
xchg
xchg
imul
in
dec
out
mov
adc
pushf
dec
inc
mov
scas
push
xchg
cmp
mov
push
js
mov
outsl
sub
aad
fbld
dec
xchg
dec
lock
scas
stos
out
pop
sub
addl
cwtl
pop
sbb
pop
orl
in
loope
cs
jnp
dec
pop
mov
add
cmpsl
pop
sub
in
mov
sbb
xor
sbb
jg
popa
test
lret
jno
shl
fldcw
shrl
ss
lds
or
xchg
je
movsl
test
pop
sub
sbb
inc
jae
mov
pop
fstpt
sub
stos
cmp
dec
or
imul
sti
jl
js
sbb
jo
adc
jbe
sbb
push
adc
in
inc
loope
outsl
jnp
push
mov
int
add
add
movsb
or
pop
popa
jns
xchg
movsl
pop
sbb
add
cmp
dec
seta
push
inc
pop
mov
sub
pop
cwtl
dec
repz
in
xchg
pusha
add
and
sbb
int3
fisttpll
sti
pop
nop
test
les
and
mov
cmc
jle
xchg
inc
outsb
sub
loope
cmpsl
jnp
adc
dec
lahf
and
inc
push
test
sbb
dec
in
jmp
mov
sub
and
push
jmp
and
loop
fiadds
sar
in
popf
cli
mov
push
stos
cmpb
icebp
dec
lcall
push
popf
push
and
notb
fwait
pop
pop
xchg
stos
adc
xlat
cmp
jno
fsqrt
lods
push
aas
pop
lret
aad
adc
jbe
movsl
movsb
inc
movsl
imul
repz
dec
ljmp
stos
xchg
jl
mov
leave
and
mov
enter
das
mov
pop
cltd
jmp
outsb
unpckhps
mov
outsl
into
xchg
adc
fistl
ficoms
cld
leave
fdivp
mov
shlb
and
shrb
jp
adc
jmp
mov
jle
xchg
jmp
push
adc
jge
mov
fcompl
mov
js
fsubrs
mov
jnp
sub
sub
pop
arpl
out
xchg
mov
and
std
dec
cmp
pop
movsb
sar
mov
xchg
cwtl
test
ds
add
xorb
sbb
sbb
dec
popa
lret
inc
mov
aad
rolb
sub
nop
xlat
daa
or
xchg
leave
aad
ljmp
or
fisubrs
fwait
mov
or
mov
ja
adc
jmp
iret
sbb
pop
xor
sbb
scas
lods
lods
mov
lds
sti
aaa
out
fcom
cltd
imul
pushf
es
in
push
mov
mov
scas
xor
push
adc
dec
test
les
sbb
mov
ds
inc
adc
imul
push
jno
test
lahf
loopne
cmp
movsb
fisubrl
scas
arpl
loop
scas
lret
movsl
cwtl
scas
outsb
inc
fisubrs
inc
pop
add
push
test
add
outsb
mov
mov
xchg
andb
lret
push
dec
lahf
ja
aad
add
inc
imull
popf
push
xor
lods
mov
lock
adc
jbe
jg
nop
std
stos
fsubrs
cmp
mov
outsb
cs
cmp
fwait
pop
xor
jle
test
loopne
ss
pop
out
stc
xchg
xchg
xor
fstpt
icebp
mov
ret
xchg
lea
mov
sub
adc
cld
out
lea
aam
lock
cs
cltd
adc
cmp
dec
push
push
inc
dec
and
mov
adc
loope
or
fldl
adc
in
jne
pop
sbb
int3
test
sub
push
inc
rcr
fstpl
mov
dec
scas
jecxz
push
leave
or
xor
lahf
das
divl
stos
or
mov
rolb
adc
scas
cmp
sbb
idivl
fcomps
mov
data16
test
jmp
roll
mov
cmp
in
cmp
lret
std
lret
int
push
popf
mov
imul
loop
lds
or
jge
das
push
add
pop
pop
rcrl
ja
test
cmc
pop
ret
shlb
push
dec
xlat
rcl
sbb
xor
repnz
loope
daa
lock
add
loope
sti
mov
ret
in
ja
mov
cli
mov
add
cmpsb
popl
mov
xchg
test
adc
lods
xor
hlt
push
add
in
cmp
clc
sub
in
ret
dec
push
out
test
in
push
roll
call
ja
loop
notl
mov
cmp
cmpsb
and
lret
mov
mov
arpl
xor
and
pop
mov
inc
mov
daa
jp
push
sbb
std
jne
inc
mov
pushf
or
sbb
and
mov
mov
dec
mov
icebp
pop
mov
sub
into
push
loopne
icebp
mov
cmc
cmp
dec
xor
pop
test
test
push
mov
push
fnstcw
mov
shlb
add
leave
lods
nop
mov
pushf
cmpb
and
int
std
sbb
push
ret
pop
mov
adc
dec
adc
cmp
pop
mov
or
pop
sub
and
xchg
xchg
pop
cmp
dec
mov
mov
cmp
jp
or
pop
dec
mov
or
mov
scas
filds
mov
addr16
pop
mov
cmc
mov
pop
push
sbb
sbb
icebp
and
add
sbb
push
xchg
sbb
into
ret
out
shrb
stc
loop
fsubrs
roll
push
in
repz
jmp
add
mov
movsb
test
leave
mov
pop
cmpsl
rclb
in
or
adc
std
push
sbb
sbb
ss
add
sub
cli
insl
insl
adc
enter
cmp
int
adc
xchg
push
stos
aaa
xchg
xchg
xchg
push
mov
testb
test
clc
xchg
sti
fistpll
jb
and
and
sbb
out
push
jb
cmpsl
ds
mov
int3
push
xchg
and
adc
rcrl
mov
add
adc
pop
es
push
lods
mov
sbb
fs
and
sub
cli
sub
push
xor
inc
lods
mov
or
mov
mov
in
and
mov
jle
out
and
cmp
mov
add
test
and
sti
sub
andb
jae
jg
mov
jne
aam
add
stos
testb
inc
stos
mov
add
ljmp
dec
and
jnp
jg
sbb
inc
or
fcomps
addr16
or
daa
ret
sbb
lahf
mov
std
inc
sub
jmp
mov
mov
mov
fsubr
jns
adc
cmp
mov
jge
clc
add
fiaddl
xlat
add
pop
arpl
pop
sar
test
xchg
mov
jb
scas
push
outsb
ljmp
out
jnp
out
push
adc
ja
fsubs
orl
mov
mov
repz
dec
add
pop
pop
push
arpl
pop
mov
lods
rcll
mov
cltd
inc
sahf
cmp
cs
movsl
xor
mov
mov
add
outsl
mov
out
push
ja
inc
lahf
or
mov
rclb
mov
outsb
dec
fucom
int
cli
xor
jmp
jno
xor
cli
xchg
jns
push
lods
mov
daa
add
cmovle
in
xchg
call
jge
xchg
cltd
test
jmp
mov
ja
stc
jnp
fmulp
cltd
loope
dec
cmp
das
fnstcw
xor
fimull
dec
jge
jp
aaa
jns
cld
xchg
jae,pn
mov
jle
and
clc
shl
outsl
fdiv
xlat
dec
mov
jb
pushf
mov
or
jmp
fidivrs
jge
fldcw
xchg
jne
fs
std
pop
sub
xor
or
jo
rcr
and
push
dec
mov
mov
shlb
sbb
adcb
movsb
es
movsl
lds
mov
fistl
fistpll
test
sysexit
xchg
and
and
add
scas
xchg
shl
xchg
and
cs
inc
jle
scas
iret
out
mov
out
ja
popf
jbe
pop
add
or
and
aas
push
sub
shrb
lods
mov
xor
lock
jle
rolb
cmpsl
add
test
push
xchg
out
cmp
mov
repnz
xchg
cmc
mov
dec
subl
int
xor
push
fsts
jmp
lds
or
out
js
loope
mov
lret
sbb
sahf
jp
insb
scas
mov
inc
xor
push
popa
sbb
std
xchg
movsb
or
cmp
ret
lcall
gs
lret
lret
sbb
sbb
test
ret
mov
loop
fistl
clc
ja
icebp
or
in
jmp
mov
and
xchg
dec
mov
pop
mov
xchg
push
push
inc
int3
pop
std
pop
lods
jecxz
les
push
stos
push
neg
sete
sub
jl
adc
test
xor
outsl
mov
lret
jbe
cld
dec
movb
cld
inc
mov
cmc
ret
ret
mov
imul
js
sbb
notl
xchg
shrw
jbe
inc
xorb
sub
pop
dec
repnz
pushf
loope
sub
xor
push
cld
xlat
jns
push
add
jmp
sti
xchg
or
daa
adc
int3
mov
imul
sbb
movsb
lret
scas
xchg
clc
mov
xchg
lea
mov
mov
inc
pop
sbb
xlat
and
add
jl
js
lret
ret
cltd
outsb
cmp
jo
push
push
cmp
add
sub
lcall
sub
cmp
call
adc
push
cmc
mov
pushf
and
sbb
jl
xor
sahf
and
xchg
insb
fmull
les
cmp
mov
dec
cmpsl
mov
pop
dec
movsb
push
ret
inc
cmpsl
cmp
ret
cmp
mov
cmc
and
lret
mov
dec
inc
xorl
mov
cmp
lret
dec
mov
push
or
fidivrl
jle
out
sti
test
xor
mov
shl
je
sub
jge
imul
adc
fisubl
push
jecxz
out
jne
orb
jp
mull
pop
pop
xchg
cmpsl
mov
or
and
xor
pop
mov
out
sbb
inc
inc
in
add
int3
aam
arpl
stc
cltd
outsl
sbbl
inc
jg
cld
xchg
and
xchg
mov
add
jnp
mov
stos
cmpsl
fldl
xor
sbb
mov
xor
cmp
add
cli
lret
inc
xchg
lock
pop
push
mov
lds
das
push
push
jl
test
out
movsl
ficoml
popf
xchg
loopne
rcl
sub
sahf
in
stc
nop
sbbb
loopne
lcall
out
mov
repz
std
jecxz
cmpsl
pop
cltd
mov
shrb
xorb
fstl
jecxz
or
pop
cmp
cmp
fsubrl
push
adc
test
bound
jmp
adc
dec
je
mov
stos
push
or
pop
lret
lret
notl
cld
cwtl
call
mov
nop
jne
roll
add
push
pop
and
cld
push
addb
outsb
in
push
mov
xchg
ret
cmc
inc
jmp
pop
mov
add
lahf
nop
mov
repz
cld
sbbb
sub
leave
push
xor
pop
pusha
xlat
sbb
loopne
mov
in
and
aad
lret
pop
dec
pop
out
mov
jl
repz
or
add
jmp
mov
lds
popa
or
icebp
xor
mov
scas
push
add
fs
jb
jns
movq
dec
test
cmp
int3
aas
dec
jmp
mov
scas
sub
sub
mov
ret
xchg
test
mov
xchg
push
dec
out
or
shl
fists
lods
add
mov
enter
xchg
or
das
lret
ss
add
push
cmp
test
jns
jmp
mov
pop
insl
daa
add
push
add
dec
outsb
gs
pop
call
rcrl
or
mov
loop
in
aaa
inc
into
rcrb
loope
pop
mov
pop
nop
push
pop
imul
cmp
cmp
mov
fs
jbe
jmp
popa
xchg
jecxz
stc
dec
jmpw
push
push
xor
movsb
jb
add
sub
aaa
stos
repnz
aas
loope
push
mov
or
ret
pop
sub
ss
inc
mov
out
inc
stos
sbb
shlb
xchg
outsb
mov
xor
mov
jmp
aas
js
pop
xor
in
adc
push
sub
pop
mov
mov
jno
std
jecxz
jmp
test
xchg
daa
into
jecxz
push
jbe
mov
pop
lock
hlt
sbb
push
pop
jne
jecxz
xchg
mov
mov
xchg
mov
arpl
ljmp
mov
sbb
popa
dec
ja
adc
mov
ds
fisubs
pop
add
jae
movsb
pop
xor
testl
dec
fcoms
jge
pop
fcmovbe
cmpsl
shl
cmpsb
push
hlt
jo
pop
pusha
cs
cmp
shr
xor
jecxz
or
dec
test
and
pushf
pop
loopne
bound
test
jae
inc
push
inc
inc
nop
mov
mov
mov
and
xlat
inc
and
mov
out
scas
idivb
pop
mov
inc
and
fistpll
in
ret
xchg
xor
push
lock
jbe
mov
xchg
test
xchg
movsl
popf
pop
push
mov
cwtl
aas
xchg
scas
std
add
inc
iret
ds
aas
mov
mov
dec
mov
jmp
jno
ror
cs
int
inc
arpl
push
test
xchg
dec
cwtl
inc
fistpl
jne
rol
cmc
inc
mov
sbbb
cwtl
push
sub
call
cwtl
jns
data16
pop
add
pop
call
icebp
cmpsl
cmpsb
add
rcl
adc
xor
mov
bound
mov
inc
xchg
flds
rcrl
sub
ret
repnz
int
sbb
fnstsw
sub
mov
stos
inc
and
or
out
add
fdivrl
pop
push
mov
xor
into
lock
addr16
int3
inc
setbe
inc
and
or
push
mov
sub
pop
iret
cmpsl
mov
insl
or
insl
sub
inc
cmp
jnp
push
inc
mov
cmp
inc
sub
popf
mov
test
adc
lcall
fisubs
aad
xor
mov
orb
popf
and
pop
fistpll
cmp
add
scas
inc
fstl
ret
icebp
enter
mov
or
mov
jns
sahf
stos
or
scas
pop
xchg
cmc
mov
add
cmpsl
cld
ret
or
or
mov
std
lret
pushf
out
nop
pop
jecxz
imul
mov
mov
es
shrb
mov
stos
xchg
imul
bound
cmp
xor
push
jp
clc
push
cmc
add
dec
mov
mov
push
add
sub
icebp
push
sbb
sub
push
scas
rcr
push
mov
in
cmpsl
incb
enter
ret
push
add
jae
xchg
lock
nop
mov
int3
xchg
cmp
aad
loopew
aaa
dec
ret
inc
loop
xlat
inc
out
adc
pop
incb
int
cmp
fidivs
mov
cmp
fiadds
fimull
dec
or
int
daa
inc
add
mov
cmp
aaa
cmp
scas
xor
into
add
xlat
les
jbe
js
aad
inc
cld
std
xchg
pop
push
sub
shl
outsb
test
cmp
test
mov
inc
mov
cmp
adc
fwait
sub
cmp
test
mov
hlt
arpl
iret
xchg
cmp
xor
or
cmc
and
imul
xlat
sub
xchg
push
insl
ljmp
mov
pusha
adc
xor
adc
or
loopne
sub
in
cmc
fsubrp
sub
push
add
orb
lret
aaa
push
dec
mov
mov
mov
and
mov
jp
dec
out
orb
or
or
push
mov
imul
sub
mov
fs
inc
ljmp
daa
aas
aam
ja
int3
push
xchg
and
lods
ret
cmp
jge
lcall
popa
mov
scas
popf
test
ficoms
fidivrs
sbb
jle
xchg
jb
and
and
ja,pt
xchg
sub
jl
daa
mov
outsb
pop
call
test
lcall
test
jns
pusha
outsb
scas
inc
inc
inc
jle
pop
rcrb
loop
push
add
jge
dec
push
fistpl
or
and
nop
sub
enter
sub
test
jecxz
sub
hlt
sahf
popa
ds
sbb
imull
mov
mulb
or
or
test
mov
inc
gs
dec
cmp
out
aas
hlt
cmp
xor
shlb
xchg
cltd
sub
daa
xchg
xor
pop
fistpll
pop
push
mov
inc
into
dec
adc
ja
mov
adc
out
fiadds
mov
cmp
fwait
and
call
outsb
outsl
mov
loop
xor
xchg
xchg
js
push
in
in
ja
jmp
sub
rclb
loop
orw
lds
inc
lea
lods
mov
add
popa
testb
lods
push
push
sub
add
adc
add
fcomip
inc
cwtl
shrl
pop
test
or
adc
sbb
push
movsb
mov
push
repnz
hlt
dec
cmp
inc
or
fnstcw
push
xor
jo
xor
mov
mov
movsb
insb
add
mov
fscale
lcall
xchg
xchg
mov
aam
shrl
jge
mov
inc
notb
shrb
sub
and
adc
sub
sub
mov
das
cld
mov
xchg
insl
jecxz
mov
je
or
nop
shlb
stos
std
cmc
or
jmp
mov
or
lret
and
xlat
cwtl
dec
outsb
out
aad
out
xchg
jb
leave
push
xchg
and
xor
or
sbb
jnp
xchg
and
push
and
imul
lods
into
mov
push
jb
push
and
scas
call
incb
ds
adc
xchg
dec
add
add
repnz
xchg
pop
test
test
sbb
cmp
lock
pop
xlat
fsubrp
mov
pop
xchg
or
and
mov
mov
inc
adc
mov
xor
aad
pop
sbb
xchg
inc
add
adc
pop
or
pop
and
pop
inc
xchg
and
sub
mov
mov
sahf
not
enter
jb
clc
fsubrp
testb
inc
ret
ffree
sub
in
out
popl
outsl
ljmp
les
jae
xchg
sub
lods
jp
sbb
shl
add
ds
stos
jp
add
lcall
jae
mov
cmp
and
test
mov
fwait
sbb
cmp
shll
mov
mov
addl
mov
push
es
cmp
addr16
out
jl
push
cmp
add
outsb
xchg
add
cli
fists
jmp
lods
push
ljmp
mov
cmp
cwtl
or
and
mov
xchg
add
mov
dec
mov
or
dec
mov
movl
test
sub
imul
add
popf
mov
xchg
enter
jl
cmp
aaa
or
pop
push
mov
jb
shr
nop
sub
pop
dec
sub
out
shr
addr16
cmpsb
cmpsb
out
mov
push
adc
xchg
add
cmp
lods
mov
jle
loope
jo
cwtl
dec
test
adc
in
repz
jnp
mov
lret
and
scas
aam
mov
sub
inc
ss
into
xlat
push
mov
add
jne,pn
out
jp
xorl
mov
cs
dec
xor
cmp
shlb
cmp
sbb
outsl
rep
insb
fsts
mov
dec
push
dec
sub
jbe
push
mov
aaa
or
sub
mov
mov
clc
sarb
loopne
mov
pop
call
outsb
fld
pop
popa
loop
cmp
jp
mov
lahf
sbb
ja
fsubs
or
mov
fnstenv
xor
mov
sbb
std
shl
jg
inc
add
enter
mov
dec
mov
jp
sub
sbb
push
mov
jg
adc
xchg
ss
push
mov
sub
imul
clc
fsub
mov
daa
mov
sub
les
or
lock
std
mov
jo
cli
lods
clc
ja
test
pusha
dec
adc
push
addr16
dec
adc
lock
pop
shr
aam
cld
cmp
jp
andl
jge
outsb
cltd
xchg
pop
mov
ds
insl
xchg
ret
in
in
fstpl
push
cwtl
addr16
push
dec
out
sbb
mov
je
xchg
and
scas
outsb
cmp
and
sbb
fiadds
test
lea
stc
sti
movsb
adc
inc
jg
data16
sub
aad
inc
mov
in
mov
add
out
clc
out
inc
sub
dec
mov
jb
shl
jmp
push
sub
pop
mov
mov
mov
ljmp
je
lret
lock
jge
lods
push
repz
jp
inc
mov
insb
add
fwait
gs
aad
mov
jbe
mov
add
pop
nop
xchg
push
imul
adc
mov
push
mov
cli
inc
aam
push
add
jmp
add
imul
xchg
dec
push
or
test
cmp
push
lds
cli
xchg
movsb
xchg
sbb
add
fxch
mov
inc
je
and
lcall
insl
test
ja
rclb
add
lods
js
in
fdivrs
hlt
mov
daa
push
fwait
int
add
dec
leave
mov
dec
jb
fucom
or
mov
jne
pusha
dec
shrl
in
mov
dec
ret
mov
shr
cmpl
scas
insl
in
and
inc
ljmp
sti
pushf
es
push
lcall
out
mov
outsl
sbb
fdivs
mov
shrl
xchg
mov
je
and
or
dec
test
dec
pop
ret
mov
jno
popa
aas
xchg
and
mov
test
jecxz
outsb
pop
pop
imul
pusha
pop
inc
pop
popf
mov
cmp
hlt
mov
loopne
test
mov
jae
dec
jle
mov
xor
movsl
cs
ljmp
adc
jno
xchg
mov
in
adc
aad
fistpl
push
pusha
xchg
aaa
into
mov
mov
mov
outsb
add
stc
sahf
pop
cmp
sbb
dec
xor
jp
sbb
jl
sbb
xor
scas
xor
push
fnstcw
dec
pop
dec
dec
insl
xlat
xor
pop
int
repz
int
mov
pop
add
jnp
sbb
pop
std
lock
add
xchg
inc
cwtl
or
sbb
fwait
pop
and
int3
out
std
sarb
inc
mov
adc
cmp
cmp
pop
push
mov
repz
xor
push
cmp
xor
xchg
push
mov
cmp
rdtsc
ret
subb
loopne
pop
adc
enter
pop
cld
imul
adc
cld
jb
ret
or
push
rolb
inc
in
add
sbb
or
cmp
or
lcall
data16
pop
adc
jns
sbb
inc
push
cmp
sarb
outsb
push
aas
push
dec
loope
sub
mov
mov
sti
push
rolb
push
int
lds
mov
lods
push
lock
icebp
leave
negb
fimuls
mov
sub
cld
mov
jmp
xlat
push
fisubrl
pop
jb
mov
js
js
inc
pop
je
lds
push
sahf
add
jne
jge
jg
test
xchg
xchg
push
pusha
pop
adc
add
or
lds
inc
cmc
mov
mov
insb
push
movsl
ret
call
ret
ja
cmpb
and
inc
add
out
sbbb
adc
inc
adc
aad
pop
jp
and
sti
cmpsb
adc
lds
xchg
in
dec
dec
jmp
in
push
jns
xchg
nop
mov
push
mov
and
xor
mov
sbb
inc
insb
jno
sbb
jmp
mov
adc
mov
pop
xor
mov
sbb
jae
sahf
rolb
sti
fwait
mov
mov
dec
cmpsb
repnz
insl
push
add
fstp
mov
push
and
add
mov
add
cmp
repz
out
push
mov
inc
popa
les
dec
or
aam
stc
scas
into
add
les
pop
jp
xchg
and
in
inc
add
mov
pop
cmp
ret
ret
enter
lcall
ret
xlat
inc
mov
fisubl
repnz
movsb
pusha
pop
mov
dec
or
sbb
std
imul
dec
or
int
adc
pop
sti
adc
add
or
sub
addr16
pusha
cltd
ss
loope
jb
cmp
test
imul
or
push
clc
push
or
mov
mov
les
out
fs
cmp
push
sub
in
dec
out
fimuls
nop
scas
sti
ficomps
imul
sahf
outsl
mov
pop
mov
test
fnstenv
rcrl
mov
mov
xor
and
mov
mov
popf
jno
mov
mov
imul
pop
mov
fstpl
cmpsb
pop
dec
and
int3
sub
or
popf
int3
inc
inc
jecxz
push
dec
call
push
jg,pn
insb
rcrb
test
xor
sub
addr16
sbb
insl
mov
rorb
xorb
imul
add
scas
pop
fs
xchg
ds
cmc
push
or
xchg
push
addb
bound
push
dec
filds
dec
test
imul
call
or
ffree
lock
les
mov
neg
aaa
aaa
neg
leave
in
jb
data16
stos
cmp
push
mov
hlt
add
fsts
mov
mov
hlt
mov
clc
arpl
jp
xor
sarl
stos
add
inc
test
fstpt
fdivl
cmpsb
fs
fwait
adc
ret
mov
mov
add
push
adc
iret
sub
sub
sbb
sbb
xchg
mov
xorb
movsl
sbb
pop
test
inc
iret
ficomps
sbb
int3
je
mov
xchg
aas
push
and
pushf
std
inc
rclb
jo
mov
mov
fwait
sahf
mov
push
pop
fdivl
clc
adc
dec
inc
movq
push
jbe
mov
mov
sahf
cwtl
cmp
lret
sub
xchg
mov
cld
or
add
es
mov
cmp
jp
pushf
xchg
shlb
scas
mov
pop
jae
pop
dec
or
dec
jg
push
in
mov
xchg
inc
out
mov
pusha
ret
rcrl
mov
push
inc
sub
bound
push
pop
pushf
push
pop
add
push
dec
jg
stos
sahf
mov
ljmp
sar
pushf
out
into
rorl
rcrb
out
testl
cwtl
mov
xchg
and
or
sub
cmpsb
jl
mov
testb
dec
push
mov
mov
insl
cmp
mov
dec
sub
or
leave
es
loop
lock
adc
add
mov
cmp
jecxz
lock
push
xchg
hlt
dec
rolb
inc
loope
in
in
ret
arpl
push
in
or
push
fsub
pop
adc
lds
ja
add
imul
pop
leave
and
push
inc
cld
dec
bound
push
aam
or
ss
push
sbb
sub
cmp
jo
push
pop
ror
sub
mov
push
lret
mov
flds
lock
push
rorl
jmp
std
cmpsb
outsb
xor
cmp
mov
in
rorb
jb
mov
mov
mov
cmpsl
xchg
rsm
out
mov
adcl
xor
pop
dec
xchg
fwait
popf
pop
mov
sub
repnz
in
dec
add
push
cmpsb
add
push
stos
insl
mov
dec
pop
or
rcrb
add
cmp
mov
xor
cmc
and
sarl
push
xor
pop
mov
sub
in
push
clc
into
je
mov
sub
push
test
push
test
stc
inc
fcmove
mov
lods
inc
jmp
lahf
xor
dec
pop
pusha
add
xor
imul
pop
xor
out
enter
pop
shlb
jl
pextrw
add
jno
es
dec
ret
jns
rclb
es
or
ss
rcll
loope
test
cwtl
xchg
popa
in
pop
push
inc
jg
mov
pop
mov
pop
pop
pop
jbe
sub
mov
mov
shr
xlat
mov
adc
mov
xor
movsb
add
faddp
sbb
fildl
mov
mov
or
adc
stos
ja
cmp
mov
mov
push
xchg
frstor
jnp
cld
in
notb
pop
xchg
push
ret
gs
xchg
xchg
cs
mov
push
lds
out
in
cmp
fs
ds
jge
dec
xchg
outsb
and
adc
pop
mov
enter
sbb
rcrl
cmp
mov
mov
ret
pop
mov
idiv
ret
push
jne
ret
repnz
mov
filds
and
mov
aaa
adcl
int
xchg
mov
mov
std
sub
rcrb
jo
mov
fucom
imul
addr16
jmp
jge
jg
jp
aad
xchg
ret
sar
cwtl
imul
ja
out
adc
or
pop
cmpsb
loop
or
out
dec
subl
test
push
sbb
fsubs
enter
mov
int
mov
outsb
pushf
xor
push
insb
mov
mov
push
mov
lods
pop
das
sub
mov
jecxz
test
add
cmovp
ss
fnstcw
jp
sbbl
sub
insl
and
cltd
jle
fisubl
insb
idivb
lods
loopne
dec
dec
inc
dec
sahf
xor
adc
mov
aas
cltd
decb
rcrb
and
and
fwait
sbb
outsb
out
sbb
rclb
push
gs
add
inc
push
fcoml
mov
inc
ss
lock
sub
fucomip
nop
jle
jg
insb
jno
sbb
imul
jb
stos
inc
mov
sbb
add
xchg
inc
push
scas
fadd
mov
xor
out
aad
and
pop
orl
adc
icebp
mov
pop
sbb
aaa
adc
cmp
inc
ret
or
clc
cld
push
ret
pop
inc
sub
sub
into
sub
ds
mov
add
rolb
cwtl
out
and
lret
jbe
rcrb
int
into
daa
push
jbe
in
push
inc
jno
repnz
call
add
mov
jne
ficoml
jl
pushf
insb
jecxz
stos
int3
push
ror
sub
push
mov
outsb
or
sub
xor
insl
xchg
in
out
sti
push
jns
xor
mov
sub
mov
push
fdivrl
call
sbb
dec
sbb
rorb
scas
aam
ljmp
shl
pop
mov
pop
mov
es
movsl
dec
imul
xchg
xchg
pop
xor
dec
out
cmp
or
scas
xchg
mov
jle
nop
out
push
cmp
sbb
mov
pop
das
gs
jno,pn
xlat
pop
out
xchg
aam
int
adc
lock
ret
cmp
shll
test
fistpll
xchg
and
mov
push
mov
jle
setne
mov
cli
int
or
movsb
std
divb
dec
inc
lock
cmp
std
jne
jp,pt
jo
int3
iret
outsl
xchg
pop
xor
cmp
mov
mov
push
sbb
cs
mov
lahf
xor
repz
or
enter
push
xor
xchg
stos
pop
dec
inc
mov
cmpsb
movsb
sub
pop
cmc
fnstcw
adc
pop
adc
push
mov
push
movsl
pop
sarb
addr16
jnp
in
outsl
out
sbb
imul
jg
xor
xchg
daa
and
xorl
sbb
mov
bound
mov
ret
insb
xchg
lea
insl
mov
adc
pop
and
lcall
arpl
test
jnp
add
pop
adc
cmpsl
dec
mov
and
out
test
xchg
int
cltd
rorb
mov
lahf
imul
xor
mov
aad
in
cmp
xor
fbld
add
cs
mov
inc
adc
movsb
mov
ffree
mov
aam
push
pop
lret
dec
jecxz
sbb
shl
sti
sbb
jae
pop
mov
test
xor
fimull
mov
xchg
and
inc
in
adc
faddl
sub
pop
push
push
pop
jb
add
daa
push
lods
in
push
jecxz
cmc
fisttps
xor
cmp
xor
pop
lods
call
dec
xor
jp
insb
imul
aam
andl
or
inc
jne
cltd
or
movsb
mov
or
cmp
adc
clc
and
xor
arpl
inc
sahf
sar
lds
pushf
loope
sub
inc
sub
pusha
gs
std
cmpsl
popa
mov
cmpsb
sub
xlat
cs
mov
push
test
inc
dec
mov
jb
stc
mov
cmp
pop
pop
inc
inc
push
mov
push
sar
push
jb
pop
bound
mov
sbb
push
jle
sub
rorb
jmp
call
pop
jns
add
repnz
daa
add
pop
ja
mov
inc
jg
and
cmpsl
sbb
icebp
movsb
filds
test
pop
pop
jns
push
lock
sti
mov
mov
inc
jp
outsb
inc
mov
jg
bound
ljmp
xchg
push
outsl
sarl
pop
mov
add
call
adc
lcall
or
jnp,pt
loope
push
stos
test
cmp
inc
pop
dec
lods
and
in
data16
cmp
mov
jae
jne
adc
inc
imul
dec
ja
ljmp
repnz
shl
rcl
xchg
into
sub
lahf
lds
out
inc
mov
fistpll
jno,pt
cmp
lret
stos
mov
test
push
ret
cwtl
inc
and
mov
jno
imul
inc
je
ja
insb
mov
fiadds
xchg
subb
or
pop
push
shrb
insb
or
and
jg
add
mov
xor
sub
pop
hlt
mov
js
ja
xchg
sarb
dec
in
lcall
adc
mov
cmp
dec
lahf
popa
push
jecxz
dec
cwtl
clc
inc
cmp
cmp
in
lcall
and
and
into
cmp
adc
sti
jae
lcall
sbb
adc
call
cmp
or
jbe
orl
pop
jecxz
loopne
ds
push
mov
stos
jecxz
sbb
pushf
push
out
pextrw
fs
insl
outsl
adc
call
jne
shrl
movsl
setl
mov
pop
shrd
lret
xlat
das
int3
mov
ljmp
je
outsb
sti
lret
insl
xchg
and
and
push
dec
mov
dec
arpl
or
jp
xor
mov
jns
dec
jmp
lcall
push
sbb
outsl
loopne
push
xor
jno
pop
leave
enter
hlt
push
mov
pop
loop
shll
jne
inc
in
divb
stc
push
pop
fcom
xor
clc
in
int3
and
mov
gs
daa
jecxz
cmp
cmp
xchg
ret
insb
lahf
cmp
mov
lds
mov
cli
and
mov
cmc
mov
mov
ret
js
in
enter
aas
inc
fs
sbb
add
scas
lock
or
inc
popf
rcrl
jb
loope
add
xor
iret
fidivrs
push
into
clc
jle
out
hlt
sarb
hlt
or
imul
sbb
scas
mov
or
sub
cmp
leave
aam
push
aaa
sub
hlt
stos
sub
inc
negb
mov
pusha
xor
pushf
fs
sub
pop
int
lock
rclb
stos
jge
push
cmpsl
fwait
xchg
out
add
cwtl
pop
lock
jae
fdivr
pop
xchg
xchg
jl
test
adc
mov
or
mov
decb
pop
and
xor
ljmp
cwtl
sub
aas
cmovp
xlat
pop
out
xor
pop
push
test
subl
xchg
mov
imul
in
es
dec
jo
dec
mov
push
in
icebp
cmc
mov
xchg
jae
sub
jp
aas
inc
gs
cltd
iret
dec
mov
fs
mov
sub
xchg
test
push
imul
add
notb
xchg
testb
cmp
or
fbld
repnz
xchg
mov
adc
xor
sub
out
sbb
xchg
sarb
ljmp
pop
sbb
xor
adc
icebp
lret
or
cmp
lret
sub
and
jge
iret
adc
adc
xor
or
imul
mov
sbb
mov
sbb
add
push
jns
test
adc
xchg
rcr
mov
movsb
add
mov
jbe
test
int
fs
push
pop
lds
inc
cmp
daa
test
pop
cmp
test
out
ss
je
fs
xchg
int3
std
or
popf
popa
bound
mov
gs
shlb
sub
lcall
out
call
jns
sub
fldcw
mov
ficompl
xchg
sti
xor
das
cmpsb
pop
adc
push
sub
xor
xchg
jb
js
std
jnp
out
bnd
mov
test
sti
lret
jns
imul
or
xrelease
adc
add
sbb
dec
iret
lock
xor
dec
leave
ret
orps
push
mov
pop
xchg
push
inc
in
jmp
cmc
jecxz
cltd
and
subb
aaa
insb
in
sub
mov
popl
mov
ds
fidivl
fiaddl
or
sti
cmpb
add
es
outsb
stos
push
inc
jbe
mov
les
jnp
rorl
cmp
repnz
cld
shrl
mov
out
nop
and
mov
filds
ss
pop
sub
sub
dec
pop
push
jle
ja
out
xor
test
call
xor
cmp
sbb
adc
data16
cs
sahf
call
inc
mov
cmp
pushf
rclb
or
daa
push
push
mov
ljmp
sarb
and
sub
inc
xor
or
adc
cltd
xchg
dec
mov
sahf
es
int3
pop
adc
iret
aad
pop
aaa
scas
divl
movsl
mov
xchg
jno
pop
xchg
and
fnsave
lods
lock
sbb
xor
lods
mov
pop
fsubr
inc
outsl
test
enter
rolb
xor
in
out
push
ja
into
jns
leave
out
pop
stos
into
or
lret
lahf
in
ret
ja
cmp
sub
and
loope
mov
inc
mov
inc
test
sbb
cmp
push
aaa
ret
mov
pop
sub
dec
lret
jbe
lahf
sti
insl
xchg
inc
or
lock
popf
xchg
mov
jae
out
mov
lea
cmc
cwtl
push
or
outsl
lret
out
or
inc
lods
push
icebp
mov
jne
bound
test
mov
xchg
repz
mov
outsl
shl
xor
int3
xchg
and
imul
add
je
std
dec
sub
popa
jnp
pop
rclb
cs
ret
loopne
xor
xor
call
iret
add
mov
popa
push
pop
xchg
enter
mov
add
push
sbb
enter
ret
pop
ja
call
fmuls
dec
jae
mov
pop
push
sbb
sub
xor
mov
jmp
jecxz
mov
mov
cmp
jecxz
cltd
add
and
loopne
addr16
lahf
add
ret
sub
and
and
xor
insl
aam
jbe
sub
jle
mov
cld
and
xorl
pop
jbe
inc
loop
sub
int3
aaa
push
sarb
or
cmp
jne
mov
fs
and
or
jge
cli
jecxz
push
jbe
jne
je
pop
hlt
testb
std
cli
mov
pop
sbb
jae
mov
cli
mov
mov
pop
mov
test
outsl
xor
insb
scas
outsb
daa
and
arpl
xchg
rorl
push
call
push
leave
mov
pop
jp
call
mov
mov
pop
cmc
cmpb
or
popa
mov
dec
popf
dec
sub
inc
aad
icebp
push
out
inc
xchg
xchg
test
push
addps
and
push
repz
xor
test
hlt
decl
movsl
fisubrs
jnp
in
stos
adc
cmp
lds
xor
pop
push
mov
subl
jns
xchg
sbb
sarb
idiv
push
inc
push
in
mov
scas
mov
addb
sbb
xchg
std
jae
cltd
aam
je
jle
adc
sti
pop
xchg
mov
popf
jns
rcrl
push
mov
enter
adc
fmull
jl
mov
stos
and
inc
popf
in
in
out
push
pop
lret
jmp
and
iret
cmp
fbld
loope
pop
jbe
inc
jle
mov
jl
lahf
test
stos
pop
mov
or
fsubs
mov
add
or
enter
test
test
adc
cmpsl
dec
cmp
cmp
add
inc
jne
lock
sub
cli
adcb
lock
ret
or
data16
pusha
mov
cmp
sub
test
lahf
adc
add
mov
mov
addb
into
rclb
mov
xor
jle
mov
jl
stos
mov
int3
stc
loopne
xchg
mov
icebp
or
sbb
je
push
sub
ja
sub
test
aas
xor
jmp
add
xchg
add
jnp
sbb
test
cld
imul
loop
pop
xorb
and
pop
cld
push
pop
popa
loope
jg
push
xchg
and
out
mov
cmp
lods
add
lret
out
out
popa
ret
and
mov
loop
pusha
or
push
sbb
mov
pop
loope
and
lcall
pusha
fstpt
pop
jecxz
xchg
sbb
js
xor
xor
xchg
jne
cltd
xor
jb
push
push
push
inc
xor
pop
lahf
outsl
orb
js
pop
imul
mov
and
lcall
pop
icebp
dec
mov
js
fcmovb
mov
add
and
sbb
xor
jae
push
loop
inc
lret
xchg
xor
fwait
int3
mov
stos
cmp
jg
mov
mov
inc
cmp
push
or
inc
notb
xchg
mov
pop
sbb
add
inc
pusha
icebp
call
pop
fs
xchg
cltd
ficoml
cwtl
mov
test
lahf
xchg
xor
arpl
shlb
pop
sub
push
scas
mov
lret
push
jge
loope
scas
aas
pop
sub
sub
ret
fisubrl
ss
and
jns
sarl
rorb
dec
adc
mov
fimuls
xorl
dec
je
push
mov
adc
out
fimull
mov
fwait
and
xchg
lcall
les
movsl
out
xor
es
sti
mov
xor
inc
out
pop
addb
mov
add
push
outsb
pop
push
pop
jo
sub
loopne
outsl
add
daa
and
ficompl
push
xor
add
mov
cmc
push
mov
rclb
rcrb
lods
xlat
jne
jnp
scas
or
addr16
mov
stos
int3
call
mov
dec
gs
test
mov
clc
lea
adc
mov
push
in
cwtl
jl
fdiv
push
jno
iret
orb
jge
jmp
in
pushf
xchg
sbb
sbb
and
ficomps
insb
sbb
scas
push
and
cmc
cmp
lcall
and
dec
sarl
stos
addl
push
jl
rcrb
mov
stc
add
popf
push
xor
sbb
sub
sbb
out
sub
ds
add
sahf
jnp
in
lock
sub
stc
push
dec
add
mov
dec
jg
stos
test
sub
cwtl
cwtl
xlat
dec
sub
jmp
cmp
or
rcl
je
cmp
nop
adc
adc
sub
bt
lock
mov
lret
push
cmpsb
and
or
mov
mov
test
adc
lods
xchg
stos
shll
cmovge
mov
fcmovnb
fisttpl
es
aam
mov
scas
pop
pop
lock
cli
add
test
rorl
xor
mov
ss
xor
pop
or
push
addl
ret
dec
js
xchg
sub
jecxz
fistl
jecxz
fnstcw
dec
repz
push
or
push
je
jge
sti
ljmp
xor
shl
cmp
aaa
xchg
jp
and
jo
push
mov
filds
xor
jne
lea
mov
mov
and
push
out
jp
xchg
pop
shrb
test
cmp
xrelease
jae
dec
and
sahf
movaps
inc
inc
jns
jg
push
shll
rorl
mov
xor
jae
lret
imul
loopne
mov
mov
add
aad
xchg
lods
and
cld
jo
es
rcrl
cmc
aad
push
pop
std
inc
cmpsl
je
xchg
pop
push
push
xchg
dec
fdivs
imul
sub
inc
add
or
xchg
xor
outsl
mov
cwtl
add
clc
scas
xor
jb
repnz
leave
mov
cli
add
das
neg
sbb
orb
mov
mov
shl
jg
out
mov
sub
mov
test
stc
adc
cmc
xlat
loop
repz
mov
movsb
ret
mov
test
ficoms
mov
hlt
push
mov
daa
mov
push
push
ja
dec
addr16
pop
add
push
aas
js
adc
loop
cmpsb
push
lahf
mov
adc
inc
mov
jo
sti
mov
mov
pop
repnz
mov
cli
loopne
stos
out
sbb
fldlg2
stc
and
sub
daa
mov
sub
cmc
and
lock
repz
mov
and
outsb
movsl
aad
es
in
imul
cmpsb
xchg
cli
lret
out
std
int
dec
mov
cmp
and
sarl
idivl
jmp
cwtl
mov
cmpsb
push
enter
jb
stos
repnz
aad
mov
cs
mov
in
cmp
ljmp
jno
sbb
pop
push
mov
pusha
mov
sbb
dec
cli
cs
stc
gs
sti
xchg
test
lds
cmp
cmp
push
push
xlat
cmpsb
and
add
cmp
pop
add
push
push
mov
cmp
pop
and
icebp
mov
add
jge
lods
dec
in
mov
cli
cmp
outsb
mov
inc
shl
into
rol
mov
mov
rcll
movsl
mov
xor
rolb
data16
add
nop
cmc
out
jmp
sbb
mov
jb
adc
and
pushf
fists
push
dec
and
aad
repnz
push
pop
in
gs
jge
sahf
loop
dec
or
je
adcl
lahf
cmpsl
inc
aad
sub
and
xchg
out
sub
loop
sub
pop
xchg
call
lahf
imul
jle
repz
adc
sahf
into
cmp
add
fnsave
fistl
fwait
hlt
imul
xchg
cmp
xchg
in
aad
xchg
fdivrl
and
imul
add
or
scas
push
aad
popf
ret
outsl
mov
aam
or
sbb
jge
pop
outsb
pop
popf
loopne
mov
sub
loop
cmpsl
inc
incb
scas
mov
enter
xchg
out
cli
jns
dec
jno
rorl
dec
lock
jge
js
push
js
or
and
popa
adc
cmp
fwait
in
arpl
cmpsl
cmpsb
out
lea
int3
pop
es
in
add
ficomps
inc
stc
pop
push
cmp
scas
sbb
mov
ror
insb
ja
mov
and
stc
cmp
hlt
gs
rcrl
jle
addl
imul
pop
shrl
mov
stc
test
push
pushf
xor
test
dec
jg
jmp
aad
sbb
cld
adc
pop
jae
hlt
sub
sub
test
dec
mov
loopne
das
pop
jecxz
stc
sub
inc
xchg
and
inc
add
in
into
push
lret
pop
lahf
lods
ret
mov
push
ret
cld
jnp
cltd
pop
mov
mov
xchg
add
inc
cmp
mov
rol
int
add
and
mov
daa
jle
test
mov
cmp
outsl
jb
pop
mov
loope
inc
lock
and
mov
mov
xchg
dec
mov
cmc
sbb
cli
shlb
push
ljmp
mulb
sbb
cmp
imul
xchg
and
xor
dec
lea
and
xor
jb
xchg
pop
push
pop
pop
or
jge
add
lcall
aam
mov
or
fsub
cmp
jne
jmp
test
push
stc
icebp
sub
das
xchg
pop
xchg
xor
out
mov
int3
xchg
mov
scas
imul
pop
std
mov
or
sbb
add
push
addr16
jmp
int3
mov
cli
mov
sub
sbb
mov
sbb
xor
add
clc
arpl
fs
lods
notl
inc
inc
sbb
fisubrs
jecxz
lds
cmp
sub
aas
sbb
sub
popl
mov
jnp
push
pop
pop
fucomip
mov
fcoml
insl
pop
daa
addb
sbb
jae
leave
test
jp
mov
sub
ret
cmp
jg
jg
shll
add
pop
or
xchg
insb
xor
xchg
sub
add
pop
cmp
mov
sbb
sbb
push
jns
mov
or
push
inc
mov
inc
rorl
adc
adc
push
jne
out
push
push
nop
cmpsl
inc
mov
xchg
mov
lret
cmp
inc
sbb
push
add
dec
mov
sub
inc
jae
mov
adc
jno
and
xchg
popf
out
loope
leave
pop
dec
or
aam
pop
scas
inc
sbb
jecxz
loopne
mov
out
add
adc
mov
imul
std
icebp
ja
and
xchg
out
sbbl
xchg
push
mov
add
mov
pop
push
js
es
mov
or
in
xchg
sbbl
icebp
adcl
cltd
add
push
test
inc
or
add
in
les
mov
mov
shlb
mov
fwait
leave
lret
rorb
lea
scas
pop
iret
jge
shll
or
imul
icebp
ret
int
sbbl
repz
out
daa
mov
mov
rcll
push
xor
out
or
sarb
cmp
xor
or
lds
cmp
fiaddl
sub
lods
xor
mov
inc
mov
mov
pop
adc
jne
push
pop
fmuls
pusha
gs
pop
sbb
or
stos
mov
mov
cmp
mov
mov
in
push
mov
mov
sub
popa
je
movsb
mov
xchg
xor
popa
ja
pop
and
xchg
sub
test
push
mov
jae
lret
mov
insl
subl
sbb
sub
aas
mov
mov
lds
test
call
xchg
rorb
inc
inc
inc
test
adc
insl
outsl
pop
dec
or
rolb
nop
cmp
das
xchg
adc
cmpsb
xor
inc
clc
leave
push
push
push
push
and
loop
mov
int
adc
inc
pop
inc
clc
or
jl
push
stc
loopne
cmp
adc
mov
sbb
adcb
inc
cmp
aad
push
call
jb
and
scas
cltd
inc
stos
adc
lcall
loopne
test
push
ds
das
dec
in
ds
punpckhbw
leave
adc
rcll
out
mov
mov
inc
inc
xchg
cltd
xor
jae
enter
test
sbb
lods
add
xchg
cmpsl
cwtl
cmpsl
sahf
das
mov
push
es
dec
pop
je
test
xchg
cmpsb
stos
scas
xchg
xchg
sti
jo
sub
cmp
cmpsb
xchg
mov
push
fisttpll
movsl
icebp
or
mov
aas
into
call
cli
aam
sarb
pop
inc
xacquire
scas
push
push
push
imul
ds
push
sti
xchg
push
jmp
cmc
arpl
call
dec
pop
js
mov
mov
jnp
sub
aas
imul
fsubr
cmp
sahf
sbb
inc
jae
in
into
mov
and
push
insl
aad
cmp
int
ds
mov
fcompl
stc
xor
jmp
cmpsl
arpl
jge
mul
and
or
or
enter
push
dec
push
adc
and
or
shrl
addl
aaa
repz
pusha
ss
sub
sbb
mov
xor
test
insb
js
gs
aaa
sti
jecxz
imul
xchg
xor
call
sub
push
les
dec
ret
or
and
mov
inc
lock
xor
cmp
ljmp
jo
in
push
pop
mov
shrb
lahf
sub
pop
loopne
cmp
sub
and
imul
shrb
data16
stos
add
xchg
xchg
ss
xchg
int
dec
mov
jnp
movsl
push
dec
xor
xchg
loope
adc
out
jl
dec
cmc
into
jo
push
in
shrl
imul
mov
imul
testl
add
fistpll
jecxz
imul
dec
xchg
add
mov
loopne
pop
mov
xchg
repz
cmp
gs
xlat
mov
mov
pusha
xor
xchg
push
aas
out
loope
jl
cmp
xlat
mov
or
fbstp
and
xlat
xchg
sbb
fisubl
sbb
call
cltd
pop
mov
fdivrs
mov
mov
xchg
dec
int
cmp
mov
xchg
inc
mov
push
sar
xchg
fcoml
adc
push
dec
push
mov
mov
sub
and
cmp
and
mov
stc
push
mov
mov
movsl
ret
adc
cld
push
xor
out
das
das
leave
dec
je
xchg
mov
decl
mov
les
out
fdivrl
aad
dec
cld
fs
jle
test
push
std
or
mov
test
pop
lds
aaa
sbb
mov
jp
pop
aad
xor
and
out
inc
lahf
xchg
dec
jge
and
fs
sub
fcmove
rolb
jecxz
mov
xchg
dec
sti
jmp
sbb
daa
adc
imul
ret
imul
sub
push
insl
or
push
je
in
or
in
in
or
out
rcrl
inc
add
cmp
mov
and
lcall
in
shlb
mov
aam
push
mov
cmc
adc
jmp
sbb
fs
pop
xchg
xor
rorb
mov
aaa
and
inc
add
dec
and
hlt
jbe
lret
fdivl
adc
popf
or
sub
lret
call
adc
adc
outsb
or
sbb
cwtl
add
dec
rcrl
dec
lods
into
popf
subl
cs
and
mov
jno
in
cwtl
out
ja
push
insb
lea
cmpsl
cwtl
mov
or
into
xor
mov
mov
mov
mov
ds
js
mov
jnp
iret
out
imul
stos
pop
outsl
inc
rcll
test
mov
pop
xchg
popf
xor
xlat
or
sub
icebp
mov
dec
mov
je
sbb
adc
mov
test
mov
popa
cmp
stos
adc
push
dec
jnp
dec
add
lret
sbb
and
xchg
dec
mov
and
jl
push
mov
sub
sub
movsb
std
xchg
daa
mov
call
mov
mov
dec
sub
push
in
push
adc
icebp
hlt
xlat
mov
or
and
push
add
test
push
stc
cmp
cld
push
xor
mov
test
fcmovu
jo
sbb
sub
dec
inc
mov
inc
dec
inc
cltd
aas
sub
scas
jg
and
fcompl
jb
and
ljmp
test
sbb
jae
dec
ret
insl
lret
inc
xchg
lret
pop
mov
test
stos
xor
sbb
pop
xor
or
xchg
xchg
mov
mov
rorl
sbb
out
clc
cmp
cmp
sbb
jl
add
in
push
dec
push
test
fwait
push
or
cltd
pop
cmp
test
in
aaa
sarl
enter
ret
cld
mov
inc
ror
jge
jb
fdivrs
call
aaa
dec
movl
lret
adc
inc
xchg
cmpl
out
or
faddl
lret
int
ja
lret
mov
popa
loope
add
and
faddl
in
push
and
scas
hlt
cmp
aad
mov
xor
aaa
sbb
fstps
loopne
cmp
mov
add
ffreep
fstps
mov
cmpsl
mov
add
icebp
imul
jg
sub
mov
inc
add
lcall
push
jne
xchg
and
and
insb
ficoms
or
jne
push
dec
out
pop
cmp
pop
pusha
sti
shlb
movsl
sub
sub
mov
jb
or
clc
cmpl
sbb
lea
sbb
repz
jecxz
stc
push
sub
jns
jmp
cwtl
push
jne
imul
pushf
push
lret
adc
cs
scas
pop
ss
sbb
sbb
push
or
pushf
lret
testl
addr16
scas
mov
in
imulb
adc
insl
mov
call
loopne
push
notl
test
mov
inc
xchg
and
jle
inc
pop
ljmp
sti
push
mov
es
and
int3
outsl
xchg
lcall
mov
gs
movsl
enter
push
mov
fisubrs
xchg
cltd
mov
testl
ret
rcrb
in
test
fimull
inc
add
sbb
sub
mov
add
aam
stc
add
xor
hlt
js
fwait
sub
pop
je
push
loopne
mov
repnz
or
inc
mov
jo
pop
cmp
push
out
dec
in
mov
ds
scas
ja
sti
mov
mov
pop
loopne
lods
or
mov
loopne
js
nop
xor
inc
pop
sahf
test
ja
movsl
mov
cli
push
xchg
ja
push
push
outsb
ret
mov
add
mov
push
insl
xor
shlb
pushf
adc
and
add
lahf
mov
enter
mov
testb
scas
pop
xor
rcr
lret
int3
stos
loope
mov
mov
push
adc
test
push
fildl
ficomps
test
mov
xchg
int3
js
mov
popa
je
jg
jne
and
mov
lcall
fstpl
movsl
cmp
sub
jns
and
adc
test
mov
pop
sub
inc
xor
cld
jg
popa
sub
lods
mov
int3
cli
popf
sbb
or
out
jne
jo
adcb
loopne
mov
sub
sbb
cmp
lds
mov
test
mov
xchg
ret
mov
loope
push
push
mov
jp
adc
mov
jge
pop
push
test
or
cmp
and
xchg
push
pop
inc
dec
call
test
pusha
pop
cld
ljmp
movsb
mov
lods
sub
sbb
pusha
insl
nop
pushf
test
insb
cs
shrb
push
mov
mov
push
stos
std
lahf
das
lods
fiaddl
loopne
dec
mov
sub
jmp
test
mov
mov
iret
cmp
jecxz
cmc
cmp
fldt
shl
or
inc
xor
sahf
inc
dec
cmp
cmpsl
push
cld
ret
enter
pop
jno
call
arpl
stos
and
push
xchg
mov
sub
or
fnstcw
in
cmp
jge
dec
int3
iret
pop
mov
mov
mov
insl
dec
mov
xchg
in
in
and
loope
or
cmc
mov
pushf
cmpsl
mov
push
into
xchg
or
std
lret
cmp
imul
sbb
and
lods
in
adc
jg
adc
mov
roll
jp
testl
sti
loop
push
push
mov
dec
or
and
rolb
mov
in
mov
les
cli
mov
lret
xchg
lea
pop
aam
or
xlat
fsubl
jmp
cmp
popa
icebp
sahf
inc
dec
mov
ljmp
jne
and
notl
pop
jl
xchg
cli
push
sbb
fs
test
fbstp
clc
sbb
inc
dec
ss
jmp
lds
mov
push
push
adc
imulb
fnstcw
and
daa
or
pop
xlat
add
or
fcmove
mov
scas
cmp
cmp
loopne
cmp
or
int
xchg
fisttpl
push
xchg
and
cmp
push
add
test
mov
xchg
in
sbb
rclb
mov
sub
jo
neg
out
cmp
or
mov
lds
pop
test
jle
out
inc
xchg
sbb
pop
fwait
mov
hlt
pop
inc
sub
sub
pop
xchg
mov
scas
mov
mov
outsl
mov
arpl
out
stos
test
inc
jo
cld
icebp
push
fisttps
negb
mov
insl
ret
jle
and
and
popa
push
inc
add
cmc
jae
or
subb
ret
movhlps
pop
mov
fdivrl
jp
sbb
push
out
sarb
xor
js
push
nop
out
dec
mov
loope
and
mov
adc
cmp
jns
out
pop
nop
arpl
inc
add
in
ficomps
in
xchg
inc
lcall
lret
xchg
xchg
lea
aam
pop
add
push
repnz
setl
inc
adc
imul
cmp
cli
and
xchg
dec
ret
cmp
pop
pop
push
mov
pop
jp
fwait
data16
enter
adc
in
push
xor
sub
cmp
adc
inc
and
std
pushf
add
cmpsb
fs
mov
dec
or
add
pop
movsl
call
pop
cld
and
mov
adc
pop
lret
lods
pop
inc
mov
mov
out
inc
mov
movsl
jno
jns
add
dec
inc
sub
ret
or
es
mov
popf
mov
idiv
jnp
cmp
pop
testl
mov
mov
adc
ret
adc
mov
int3
cs
lods
jbe
lcall
xchg
or
test
mov
sbb
test
jl
sbb
add
or
enter
push
adc
xchg
fidivl
add
lods
cmp
dec
pop
mov
mov
lock
adc
sub
lds
jge
pop
or
sub
shl
pushf
jns
imul
mov
insl
or
add
sub
clc
adc
cltd
cmpsl
mov
pop
loop
movsl
stc
inc
in
push
iretw
xchg
lahf
fstl
push
negl
leave
dec
sub
hlt
adc
dec
iret
sub
inc
test
add
xchg
ret
lock
into
fistpl
cmp
xchg
mov
es
cmp
nop
insb
mov
leave
sar
push
rclb
iret
shlb
popf
jp
pop
mov
rcrl
adcl
in
addr16
xchg
arpl
bound
lock
leave
cli
sbb
mov
scas
cmpsb
pop
sahf
xor
scas
inc
movsl
scas
mov
add
adcb
mov
ret
les
mov
fwait
out
test
push
sbb
lock
dec
push
jle
mov
cmp
jecxz
adc
insl
or
push
cld
and
pop
jge
sub
dec
stos
xchg
int3
mov
xchg
std
arpl
fdiv
movsl
out
xchg
pop
fcompl
cld
incl
cmp
pop
xchg
into
bound
daa
cmp
mov
pop
leave
idivl
add
push
and
lods
lock
cmp
sahf
mov
imul
aad
jbe
adc
call
mov
push
adc
pusha
popa
and
scas
jne
adcb
jl
cmp
ja
mov
movb
mov
gs
jecxz
jge
sub
repnz
push
rcl
and
jl
mov
fnstcw
in
mov
lcall
scas
jns
repz
dec
clc
xchg
adc
add
mov
adc
aas
push
mov
pop
ja
fbld
les
push
frstor
in
and
lcall
in
cmp
pop
mov
popa
cmp
cmp
enter
xor
xchg
add
aad
mov
xchg
mov
lds
and
xchg
rcll
call
and
lret
loope
push
pushf
push
jp
mov
inc
mov
pop
icebp
mov
std
jnp
adc
add
into
jle
xchg
and
cmp
negb
mov
mov
fs
insb
jne
fldt
repz
imul
mov
adc
je
add
mov
mov
into
outsb
out
mov
jo
sbb
dec
jb
and
xor
mov
stos
movsb
jbe
sub
cwtl
inc
aam
add
fisttpll
ja
xor
test
and
enter
js
jge
mov
insb
dec
push
test
test
push
inc
mov
pop
out
hlt
vpsravd
mov
decb
ljmp
ds
cmp
adc
lahf
or
mov
scas
call
in
rcr
popf
adc
addr16
popa
inc
out
mull
cmp
stc
lods
cmp
dec
and
aad
not
in
mov
lahf
add
sub
enter
lods
jge
fiadds
mov
test
jb
enter
push
das
xor
lock
jo
xor
arpl
in
jae
and
pop
mov
cmp
pusha
sti
in
pop
inc
jbe
cltd
scas
mov
repz
cmp
fmul
icebp
or
and
jg
xchg
fsts
imul
sahf
lret
cmc
sub
pop
sahf
das
dec
sub
mov
jle
rcrb
cmpsb
es
xor
cltd
add
mov
inc
mov
pushf
call
xor
and
sahf
insb
jb
push
sub
pop
xor
sub
rcll
mov
push
fdivl
dec
mov
std
mov
mov
dec
push
aad
nop
idivb
cmpsl
dec
push
lret
fpatan
dec
repnz
rorl
lcall
jno
insl
sub
pop
mov
loop
ja
pusha
punpcklbw
pop
pop
add
scas
push
jb
xor
insb
xor
cmc
sarl
ror
add
and
sbb
adc
push
dec
aas
and
scas
aad
pop
enter
pop
push
add
adc
cs
mov
nop
adc
xor
push
rolb
into
call
subb
xlat
add
jg
lret
xchg
enter
xchg
mov
out
add
adc
pusha
ret
fsubl
les
in
cmp
gs
push
jl
jle
sbb
inc
mov
push
sub
mov
push
hlt
fs
cmp
adc
sub
mov
inc
lcall
mov
dec
pop
je
mov
lock
dec
jp
gs
std
lds
out
add
dec
pop
test
outsl
cmpsl
and
xchg
fmul
sbb
lods
xor
push
jne
andl
inc
aas
jg
stc
pusha
sbb
mov
gs
and
push
cwtl
jle
jb
pop
pushf
shlb
xor
test
jns
xor
nop
sub
pop
add
shlb
jp
xchg
inc
cs
xor
mov
xor
rolb
hlt
sbb
and
mov
push
cmp
mov
add
or
mov
mov
cmp
xor
adc
outsl
sub
push
push
pusha
roll
push
mov
ret
dec
test
cmp
fisttpl
inc
or
xchg
or
xchg
push
insl
data16
sti
sbb
fdivs
mov
imul
gs
jge
push
cmpsb
ss
cmc
add
outsb
loopne
ljmp
out
xor
and
jne
std
and
bound
mov
into
push
test
push
bound
gs
lret
push
jmp
loop
pop
add
out
jmp
fs
adc
scas
xchg
into
loopne
sbb
sub
inc
imul
orb
xlat
adc
int3
jge
inc
jns
mov
mov
and
pusha
es
and
test
jg
rcrb
testb
arpl
cwtl
test
rclb
jle
sbbl
ret
nop
push
mov
psubq
xchg
dec
pushf
dec
add
pop
cmpb
xorl
movsl
cmp
pop
test
aaa
test
int
outsb
scas
out
mov
cmc
pop
aas
sbb
jbe
and
clc
jp
xchg
ret
xor
jo
push
jno
jmp
mov
lret
lahf
cwtl
test
adc
mov
fisubrl
mov
cltd
add
or
lods
pop
adc
push
xor
push
loopne
mov
ret
lods
mov
mov
pextrw
stos
stc
mov
sti
insl
fcmovne
sbb
push
data16
scas
push
scas
xor
push
mov
and
outsb
pusha
push
lret
mov
cs
pop
add
jl
xchg
shrb
sbb
push
call
das
fwait
pushf
in
lods
sub
outsb
mov
aad
mov
fsubrs
fwait
mov
stos
rolb
pop
sub
or
sar
xchg
pop
inc
inc
mov
dec
jge
imul
dec
dec
arpl
fldt
pop
sbb
stos
jbe
sbb
iret
xchg
icebp
push
pop
dec
ljmp
enter
enter
mov
push
xor
adc
push
testb
adc
ffreep
sti
stos
push
std
inc
fiaddl
mov
fnstcw
popa
adc
dec
test
xorb
sub
arpl
push
xor
cmp
jb
add
or
mov
mov
inc
aaa
dec
aad
or
mov
inc
mov
sbb
inc
icebp
daa
inc
in
mov
mov
mov
xor
pusha
push
xor
fnstenv
imul
lret
sbb
stos
out
cli
mov
ja
mov
outsl
data16
cwtl
cmpsb
cmpsl
push
call
hlt
xchg
jne
cmp
ja
inc
imul
xor
lods
inc
xor
mov
inc
mov
fmuls
sub
imulb
orb
fists
mov
dec
mov
fwait
cli
aas
sub
inc
daa
xchg
sub
mov
loopne
lret
xchg
dec
jo
clc
ret
adc
leave
adc
outsb
or
lds
push
insb
xor
jno
cmp
fdivs
das
cld
sub
mov
or
add
adcb
push
cmc
scas
fsubrs
pop
cmp
mov
test
jno
out
push
xchg
sti
cld
xorb
insl
dec
cli
or
push
insb
jb
xchg
xchg
lods
jnp
mov
dec
or
mov
jle
mov
stos
test
sub
ret
stc
jns
ljmp
mov
sbb
out
rorb
int3
sbb
mov
les
xchg
push
sub
cmp
les
iret
test
movsl
pop
icebp
aad
aas
mov
in
addr16
dec
mov
pop
inc
dec
pop
repnz
sbb
lret
xchg
flds
movzwl
mov
cli
cwtl
jge
lret
jmp
sbb
cli
xchg
stos
shlb
out
xor
daa
xor
fadds
imul
push
ret
xchg
or
repnz
mov
jmp
push
rcll
lea
sub
filds
sub
ljmp
addr16
dec
push
mov
dec
out
cmp
les
test
xor
xchg
and
xchg
mov
mov
sub
push
and
hlt
xchg
mov
cwtl
and
jmp
aad
stos
fstpl
bound
test
stos
call
aas
mov
or
jge
dec
mov
sbb
or
cmp
pop
sub
sub
in
pushf
jbe
dec
pop
fs
xchg
iret
je
das
mov
jbe
or
aas
push
xchg
addr16
scas
int3
adc
jnp
inc
push
push
scas
into
js
scas
mov
jb
fs
fbstp
xchg
stos
fcom
or
dec
imul
ss
cmpsl
mov
js
mov
jle
lahf
mov
adc
pushf
mov
leave
or
or
pop
xor
pusha
psrad
popf
inc
cmp
lea
push
xor
into
or
call
dec
imul
add
push
mov
stos
in
inc
pop
das
rcrl
sub
fdivrs
lahf
mov
orb
shlb
popa
scas
pop
sub
int
adc
mov
roll
ja
push
fwait
fwait
and
xchg
test
xor
and
mov
sub
cltd
adc
mov
ret
scas
ja
in
scas
pop
xorb
add
pop
dec
jl
xor
mov
adc
ret
orl
and
cmpsl
out
test
add
cmp
xchg
mov
aas
iret
addb
lock
rclb
into
aaa
or
imul
sbb
xor
add
add
inc
sarl
pop
ljmp
and
ds
mov
sar
in
je
cmpsl
cmp
out
xor
mov
out
jmp
or
fistpll
movsb
outsb
push
lods
shl
pop
mov
or
fildl
cmp
cmp
sub
aam
fisttpll
xchg
outsb
jbe
ret
cld
imulb
std
nop
adc
arpl
aaa
repz
cmp
jge
test
insl
push
arpl
jmp
adc
mov
pop
mov
mov
scas
rorb
inc
cmp
ds
ret
inc
adc
pushf
lret
push
jge
mov
test
sti
loope
mov
lret
das
cmp
aam
mov
mov
push
sbb
cltd
xchg
cmpsl
sub
dec
jbe
or
pop
lock
mov
sub
cmp
add
push
xchg
or
ja
mov
insb
sub
loop
mov
and
ljmp
faddl
xor
loop
lods
pop
or
mov
int3
mov
mov
stos
dec
mov
jne
xor
decl
out
in
cmp
push
add
pop
push
mov
addr16
add
cmpsb
jp
frstor
inc
jne
scas
test
pop
movsb
cmpsl
mov
inc
clc
lds
repnz
dec
push
je
sbb
add
insb
leave
mov
outsl
scas
sub
int3
xchg
int
jo
fiaddl
bswap
icebp
scas
pop
inc
mov
add
mov
jecxz
clc
inc
addr16
mov
cmp
shll
push
dec
pushf
icebp
mov
mov
ror
jle
ljmp
ret
call
rorl
and
out
pop
stc
mov
loop
mov
lret
roll
sbb
movsl
clc
jmp
add
es
fistl
pop
test
fdivrs
xchg
mov
daa
inc
ljmp
gs
shrl
fbstp
ret
pop
lea
popf
pusha
or
hlt
fcmovu
cli
or
cmpsb
add
adc
jns
movsb
fnsave
mov
scas
test
and
cmp
fsubs
dec
pop
mov
cmpsb
cmp
cmpb
pushf
pushf
pop
xchg
leave
rol
pop
mov
lock
out
or
in
stc
loope
lcall
loope
in
loop
pop
lret
scas
insb
inc
pop
aaa
pop
cwtl
scas
out
enter
call
lock
lret
mov
dec
adc
jecxz
loopne
jmp
js
in
iret
mov
add
je
out
hlt
jae
ficomps
mov
fnstsw
mov
pop
mov
in
cmp
mov
cwtl
xor
sbb
jmp
cmp
xchg
addr16
cmpsb
cmp
ja
add
mov
xchg
stc
clc
mov
push
push
xchg
adc
and
inc
sti
hlt
leave
pop
aad
loop
imul
or
or
lcall
lds
pop
pop
push
movsl
popf
cs
jecxz
addr16
push
jg
repz
mov
inc
dec
aaa
out
loop
pop
leave
inc
pusha
push
fstpl
jmp
aaa
ret
loopne
sahf
test
and
inc
push
sub
shlb
or
mov
and
dec
test
int
dec
xchg
aaa
repz
mov
es
movsb
mov
es
sbb
xchg
mov
xor
dec
or
int3
push
ss
mov
enter
pop
cwtl
cmp
jle
mov
stos
sub
mov
add
inc
dec
mulb
ja
inc
mov
sub
xchg
pop
das
inc
jnp
enter
push
inc
push
cs
or
push
loope
stos
dec
xlat
pop
in
jmp
jns
ljmp
js
scas
pop
aas
in
jae
stc
in
das
jnp
sub
inc
push
xchg
test
sbb
imul
sbb
cmp
repnz
mov
xchg
cli
mov
mov
jno
dec
lahf
stos
mov
hlt
cmp
ret
xor
imul
int3
lods
push
insb
sbb
push
out
and
movsl
add
mov
enter
mov
bound
xchg
stos
gs
bound
push
mov
pop
mov
sub
repz
pop
test
ljmp
int3
mov
mov
xorl
les
out
push
stos
add
xchg
pop
xchg
idivl
fsubrl
xor
dec
inc
ljmp
fs
and
xchg
fadds
bound
adc
sbbl
in
loop
fstl
cmpsb
push
or
mov
iret
out
mov
xlat
push
cmp
dec
or
jle
jl
xchg
aam
bound
loope
mov
cmp
jle
jne
outsl
sub
push
shlb
aaa
jae
insl
xchg
push
arpl
aad
push
adc
sbb
lret
in
mov
jno
jo
push
repnz
outsb
adcb
pop
into
dec
cmpl
jne
call
daa
cmpsb
dec
inc
pop
cmp
stos
cmp
loope
stos
mov
cld
push
inc
stc
repnz
lods
rolb
mov
std
leave
mov
fcmovb
ljmp
cwtl
outsl
imulb
pop
aad
mov
xor
pop
outsl
shll
outsl
cmpl
das
sarl
xor
inc
xchg
scas
cmp
subl
int3
mov
subl
jbe
dec
pushf
scas
movsl
jnp
in
dec
jecxz
sub
jnp
inc
sbb
jbe
je
sbb
cmp
loopne
cmc
inc
jns
into
sub
cmpsl
mov
fisubs
in
leave
fisubs
lret
dec
aas
jmp
inc
outsl
dec
add
ljmp
shl
lcall
bswap
mov
leave
cmpl
jmp
shlb
mov
mov
sbb
dec
sbbw
inc
fcmovb
adc
fiaddl
pop
xor
aad
fimuls
aam
mov
in
push
test
mov
lds
or
cmp
int3
jbe
test
add
xor
popf
push
test
lods
mov
test
fsubrl
pop
push
dec
push
xor
or
icebp
jb
mov
jg
mov
rclb
and
xchg
add
aad
jp
punpcklwd
xchg
aas
jecxz
jbe
or
or
xchg
int
adc
lock
shll
mov
or
les
lret
aas
mov
pop
in
sub
add
mov
cmovne
sahf
adc
dec
jmp
dec
in
jne
push
ret
jl
cli
add
and
mov
jmp
mov
jnp
jne
mov
mov
fimull
jle
pop
xchg
pop
fmull
mov
sub
xchg
cmc
sbb
push
dec
imul
out
sbb
xchg
mov
jecxz
pop
out
aam
aas
sub
lea
pop
iret
les
shl
xor
lret
or
and
je
fisttpl
xor
imul
and
mov
xchg
fwait
xchg
sbb
xchg
and
mov
movsl
in
push
movsl
aas
mov
and
mov
pop
mov
outsb
ds
cmp
in
jp
mov
mov
fildl
sub
call
cmc
mov
test
sahf
mov
ja
cmp
insl
jb
sub
cmp
push
and
dec
test
or
scas
rcl
xchg
mov
shr
xchg
cmpb
xor
movsb
xchg
fs
sub
inc
pxor
jmp
pop
fistl
fdivr
dec
push
adc
xor
popa
les
pop
xchg
bound
cmp
or
jnp
ss
pop
out
pop
xor
pushf
mov
jb
or
pop
fcmovnb
push
jl
mov
cmp
lea
gs
sub
xchg
enter
outsb
sahf
or
hlt
jge
or
pop
jbe
movsl
push
ror
mov
xchg
sbb
cmc
popf
push
shlb
out
popa
cmp
mov
sbb
loopne
outsb
xor
push
inc
into
ror
movsl
scas
cld
add
add
or
mov
xchg
or
push
push
imul
xchg
icebp
cli
push
fwait
rclb
rorb
test
sahf
sbb
mov
pop
cmp
inc
cmp
fiaddl
lock
cmpl
pushf
push
mov
cmpsl
xor
pusha
fisubl
cmpl
testl
jns
roll
and
aaa
ds
stos
pusha
gs
jecxz
jae
orb
sahf
xchg
clc
or
cli
cmpb
mov
or
loopne
imul
sbb
adc
mov
mov
aas
pop
fwait
pusha
pusha
jne
int3
call
lahf
mov
int
and
aam
sub
and
jae
sub
int3
cmp
stos
mov
dec
sub
inc
rcr
dec
int
inc
in
icebp
mov
push
mov
cmp
lea
mov
add
arpl
jnp
jbe
dec
xlat
sub
add
lods
dec
scas
cmp
inc
dec
xor
jne
insl
xor
repnz
mov
adc
sub
icebp
mov
cltd
adc
and
sbb
call
lcall
ds
daa
inc
pop
movsl
xor
fstpt
into
fists
or
mov
aam
sbbb
xorb
and
mov
movb
or
out
adc
cmp
xlat
and
adc
iret
enter
mov
inc
cltd
icebp
out
mov
cmpsb
decl
pop
xchg
insl
or
jne
push
call
push
cmp
es
ret
mov
jne
push
or
loopne
sub
adc
cmc
add
dec
or
outsl
push
adc
push
scas
aas
xchg
sub
lret
xor
xor
jg
icebp
outsb
xchg
sub
enter
dec
sub
push
lods
xor
xorb
add
fmull
and
das
aad
cmp
adc
adc
xor
in
dec
adc
ja
xor
imul
lods
cmp
rcrl
adcl
fcompl
fldt
fs
shlb
scas
int
sbb
sbb
jge
sbb
dec
lods
movb
out
jbe
fildl
rcrb
adc
push
ss
incb
and
mov
int3
jns
roll
dec
push
mov
mov
sub
mov
push
push
ja
fs
addr16
push
lock
xchg
mov
cmp
scas
mov
enter
lahf
scas
loop
nop
hlt
xchg
adc
rcrl
test
enter
xor
cmp
xor
sub
add
ljmp
pop
inc
sarb
in
frstor
jl
stos
ja
pop
cmp
or
arpl
sbb
mov
sbb
xorb
es
out
pop
mov
sub
or
xorb
fs
adc
out
jecxz
arpl
sub
jp
pop
js
inc
and
inc
fisubl
xchg
jb
mov
mov
gs
gs
mov
out
push
mov
popa
add
inc
in
scas
lret
cmpsb
push
sti
in
jecxz
mov
add
gs
lahf
pop
out
hlt
ljmp
arpl
rcll
test
jl
sbb
loopne
rcll
std
fnstcw
xchg
dec
xchg
or
mov
lock
mov
in
lds
cmp
pop
push
xchg
stos
loope
adc
pop
lods
adc
incl
push
push
jo
dec
neg
push
cld
fnstcw
sbb
fidivs
enter
pop
scas
mov
imul
add
out
loopne
xor
into
hlt
pop
loop
mov
cmpsl
push
xchg
repnz
in
jl
and
in
jmp
fnstsw
dec
pop
xor
cli
test
xchg
int3
aaa
xchg
into
clc
sbb
xchg
bound
mov
shr
ret
ficoms
sub
test
dec
dec
mov
mov
xchg
xchg
fldl2e
fcoms
shlb
pop
or
cld
push
and
inc
mov
fdivr
andb
ret
sbb
and
or
in
xchg
fs
xchg
movsb
daa
repnz
nop
push
cmp
pop
out
add
stos
imul
sub
mov
ljmp
inc
mov
cmp
and
mov
cwtl
dec
sarb
cld
int3
sbb
xchg
cmp
mov
pop
iret
xor
dec
insb
jl
movsb
fidivs
mov
sub
cld
or
clc
jno
dec
lea
std
pop
jb
jnp
mov
and
aad
xlat
aad
call
adc
inc
daa
add
rcrb
mov
repnz
loopne
mov
xchg
ss
inc
shlb
mov
add
es
fwait
insl
shll
fidivl
in
scas
mov
aam
mov
repz
in
dec
jmp
pop
and
ja
loop
subb
test
test
adc
icebp
ret
mov
int
clc
mov
jbe
in
shll
xchg
ja
cmp
leave
loop
ret
pushf
out
xchg
int
cmpsb
mov
lret
lret
push
ret
fstps
ror
sbb
push
jl
sbb
pop
mov
dec
shll
sbbl
lret
and
dec
fsts
push
and
data16
test
xlat
fwait
or
jg
bnd
lret
jecxz
sti
ja
push
mov
int3
mov
test
lds
hlt
stos
daa
jo
daa
sti
call
sub
sarl
mov
inc
insl
jl
push
sarl
jbe
xorb
cltd
mov
xchg
jmp
dec
push
clc
movb
imul
mov
mov
mov
mov
lods
sbb
or
inc
daa
icebp
push
pop
loopw
jo
addl
push
jl
jns
xor
xor
cmp
xor
sub
call
xchg
add
push
or
or
sbb
dec
mov
cltd
cmp
sbb
push
jg
ficoml
das
inc
push
outsb
and
mov
inc
sbb
sbb
xorb
arpl
test
popa
xor
outsb
aas
lret
ror
dec
bound
into
ffree
or
cmp
dec
push
es
jmp
cli
test
mov
test
mov
cwtl
jg
shlb
stc
jnp
into
push
xor
cmp
mov
les
mov
bound
mov
and
xchg
lds
push
lods
sub
enter
fs
sti
xchg
lahf
inc
lods
push
adc
not
bound
in
push
sbb
xchg
sbb
outsb
adc
lret
imul
cli
sbb
jecxz
out
add
jnp
push
mov
jnp
cld
lea
loop
ja
dec
insb
or
xchg
dec
push
jb
inc
xorb
sub
fcompl
daa
fwait
js
push
adc
jnp
add
jecxz
icebp
ss
push
aas
in
aad
jnp
cmpsl
loope
add
jns
cmp
jns
cmp
and
dec
aas
outsb
test
jle
mov
pop
mov
out
xor
lret
test
ror
mov
test
pushf
lods
pop
or
gs
inc
or
lds
sub
sub
xchg
jg
fcompl
push
leave
and
lahf
or
ds
fisttps
inc
dec
inc
fdivr
add
fcomps
dec
std
or
mov
pusha
addr16
lret
push
rcrb
iret
cmp
subb
ret
mov
mov
xor
sub
ficoml
clc
out
pop
mov
in
inc
test
cmp
and
cltd
sub
xchg
ljmp
sub
or
insl
rcl
push
movsb
dec
adc
enter
fstpt
mov
inc
inc
shrb
mov
push
and
mov
pop
jge
lahf
mov
ja
pop
sub
pop
jge
inc
aas
movsb
and
mov
into
popa
mov
mov
sbb
cmp
jns
ret
jne
lods
add
rcrb
sahf
pop
rol
rclb
les
sub
xchg
dec
popa
push
hlt
pop
aaa
aad
insl
cmp
mov
pop
mov
adc
and
lahf
cmc
in
mov
xor
pop
clc
add
pop
jp
icebp
xchg
cmp
inc
xorb
and
lret
or
push
jge
jne
in
lods
leave
dec
out
sahf
xor
xchg
xchg
sub
jg
adc
ds
xlat
mov
loope
pushf
das
in
pop
sub
or
or
in
pusha
sbb
lahf
and
aam
mov
sub
dec
mov
cmp
aad
outsb
lret
sti
xor
fistl
test
in
dec
mov
adcb
fs
inc
fincstp
or
mov
dec
sbb
ljmp
loopne
lds
sbb
push
or
cli
stc
out
xchg
cmp
add
pop
cld
cmp
push
jl
or
scas
aam
cvtdq2ps
jg
cwtl
mov
xor
and
call
ljmp
enter
adc
and
push
mov
aad
sub
dec
jmp
popa
push
jmp
sub
jg
cmp
push
std
jl,pn
mov
push
nop
jb
in
xchg
rcrl
ja
sahf
jp
inc
push
das
jb
lahf
jl
or
push
into
jge
inc
lahf
lea
loope
xor
mov
cmp
inc
mov
in
xor
aam
adc
shll
or
not
jnp
test
sbb
or
mov
pop
push
ficomps
bound
fisubrl
aam
sub
stos
out
js
push
xchg
xchg
imul
daa
fisttps
push
sub
inc
xchg
adc
fadds
lret
xor
add
out
inc
mov
push
insb
lret
out
mov
adc
repnz
gs
outsb
leave
loopne
stos
add
loope
mov
les
ljmp
jns
pminsw
aaa
ss
sti
movsl
stos
dec
jb
xchg
int3
mov
mov
repnz
xor
cli
into
aad
into
std
mov
into
scas
push
iret
pusha
sbb
sub
dec
stos
cmpsb
push
sbb
push
cmp
mov
inc
and
out
pop
xor
cld
cmpsb
bound
adc
cmp
popf
in
add
mov
add
jl
add
cmp
dec
fwait
daa
sub
push
jg
pusha
rorb
push
stc
add
loopne
sub
pop
xor
outsb
pop
xchg
in
pop
cmc
jmp
cwtl
cwtl
cmp
clc
jle
push
dec
xchg
out
mov
movsl
fs
fmul
test
jge
jl
mov
shll
roll
jbe
cmp
sbb
mov
or
dec
mov
cmc
push
out
pusha
cmp
loopne
cmp
xor
adc
push
aas
xorb
imul
rol
call
mov
sarb
outsb
bound
insl
imul
sbb
push
pop
fwait
adc
imul
adcl
mov
pop
jge
aas
jae
xchg
pop
sti
pop
cmp
scas
add
sbb
in
nop
data16
jns
nop
daa
cmp
repnz
inc
ret
pop
cwtl
imul
aaa
mov
not
stos
jge
add
fcmovb
pop
cmp
mov
sbb
adc
push
jne
mov
fldt
gs
pop
mov
and
loope
sub
mov
stos
adc
adc
pop
lea
es
pop
inc
scas
push
mov
js
xchg
or
ret
imul
lods
push
push
mov
add
pusha
or
mov
xor
jbe
out
push
clc
popf
mul
lea
mov
push
cmp
push
fnstsw
ds
sarb
into
push
bound
mov
lahf
push
push
sarl
lret
into
pop
dec
xchg
clc
and
xor
idivb
test
lds
jbe
jmp
and
sbb
mov
leave
lds
inc
in
cli
sbb
cmp
aaa
out
sub
ljmp
sub
cmpsb
or
sbb
es
lock
xchg
loop
pop
scas
loop
jbe
mov
push
mov
mov
jl
mov
push
daa
xor
sub
fsubrs
in
mov
adc
or
xor
push
push
inc
push
jno
ss
in
sahf
mov
out
imul
dec
mov
sub
fsts
add
mov
jg
nop
mov
jb
fbld
mov
mov
push
xor
add
aam
dec
loop
sbb
stos
rcr
pop
test
int
or
or
leave
icebp
dec
jmp
mov
std
mov
out
add
enter
xorb
and
enter
mov
int3
cmc
lahf
mov
sub
lcall
sarb
setno
and
fisttpll
roll
mov
add
test
std
lret
mov
add
mov
mov
sbb
repnz
cmpl
cmc
sti
test
adc
fmuls
or
mov
data16
imul
pop
xchg
icebp
mov
jne
cwtl
push
xchg
pop
imul
cmc
rcrl
mov
addl
pop
xor
fdivp
mov
loop
rol
push
inc
mov
push
shll
std
mov
inc
mov
sbb
and
push
jbe
shll
add
fadd
nop
mov
sbbb
cmp
push
pop
mov
testl
aaa
pop
cli
cs
mov
pop
or
mov
fwait
nop
and
push
iret
and
push
cmp
sub
fdiv
repz
or
mov
jl,pn
fnstenv
in
cltd
nop
add
idivl
cwtl
xor
mov
aad
ds
and
dec
dec
lahf
dec
or
stos
sarl
insb
iret
cmpsb
popa
leave
dec
das
fsubrp
sbb
enter
jl
jmp
inc
mov
out
or
repz
mov
mov
mov
pop
pop
stos
enter
cld
movsl
mov
sub
in
iret
popa
dec
addb
or
mov
push
jg
ja
aam
insl
movsl
inc
rcll
or
aaa
jbe
xor
mov
add
dec
fs
push
mov
sub
in
mov
mov
dec
jecxz
adc
add
mov
cmovg
imul
dec
loope
jns
lcall
iret
or
jg
into
xchg
sub
je
bound
movb
pop
mov
xor
out
andb
movsl
mov
dec
stos
mov
adcb
inc
and
mov
lds
mov
idivl
lret
sahf
outsl
iret
jbe
sar
mov
sbb
add
sbb
aam
mull
dec
mov
into
fiaddl
adc
push
and
and
mov
push
fistpl
jg
jg
dec
and
inc
insb
lds
add
mov
and
in
pop
test
sbb
xor
xchg
mov
mov
jae
or
mov
adcl
test
out
fs
pop
mov
pop
add
movsb
popa
jo
push
psubusw
lcall
mov
sub
push
popa
sbb
pop
inc
scas
out
jo
push
cmp
push
out
sub
mov
and
sbb
dec
iret
pop
hlt
mov
sbb
les
sbbl
loopne
push
sub
js
jne
pop
xor
push
pop
or
leave
add
dec
xchg
jns
cmc
fimuls
add
iret
iret
jmp
push
or
jle
mov
mov
inc
and
jbe
push
jl
inc
jbe
sub
div
jp
es
inc
inc
outsb
les
cmp
or
push
test
rorb
jmp
rcrb
jo
movsl
rcl
popa
test
icebp
sbb
je
cmp
xor
out
cmp
mov
dec
stos
or
xchg
jl
cmc
mov
jbe
or
cmpsb
inc
gs
movsb
loopne
jno
xor
leave
dec
and
xchg
sbb
adc
and
stos
das
nop
inc
aad
dec
add
mov
addl
cmp
daa
sub
sbb
test
push
pop
add
idivb
aam
push
cmc
cwtl
mov
iret
xorb
add
inc
aam
cli
jne
aas
dec
out
jecxz
push
movsl
arpl
jp
dec
dec
popf
rclb
add
leave
mov
flds
cli
loopne
insb
shll
mov
inc
aam
andl
out
sbb
fs
aas
and
iret
mov
and
or
int
ret
popf
in
jp
or
sti
fstpl
inc
adc
push
ja
test
popa
leave
mov
mov
dec
decl
rcrl
inc
mov
pop
add
inc
dec
or
mov
fistpl
cmpsl
jnp
sbb
shll
fsubs
ja
sbb
xchg
setl
in
and
fwait
pop
je
mov
mov
mov
xlat
xor
decb
or
jae
xchg
dec
and
jns
push
dec
daa
ja
cmp
pushf
push
mov
and
div
add
xchg
dec
dec
daa
dec
mov
es
xchg
sub
pop
mov
cltd
jecxz
in
jo
test
push
fiadds
inc
sarb
jae
push
shl
mov
sub
jl
lcall
mov
mov
outsb
adcl
and
xchg
cmp
cmp
call
int3
out
mov
out
popa
fisubs
mov
cld
pop
cmp
out
push
cld
jb
rorl
lods
fwait
sbb
hlt
adc
push
test
mov
mov
lahf
sbb
ds
or
sub
pushf
movsb
dec
shl
andl
dec
ljmp
cmpsl
aam
push
jl
das
pop
and
je
push
xor
cmp
in
jmp
xchg
and
aam
jo
xor
cli
aas
and
xor
pop
test
cs
push
cltd
fildll
push
repz
push
xlat
ja
adc
sub
into
pop
and
mov
jno
and
ret
add
cmp
insb
fs
sub
aas
sbb
push
add
inc
imul
adc
pop
sahf
test
push
and
cmpsb
xchg
repz
add
cli
outsb
add
pop
mov
sti
sub
aad
pusha
repnz
mov
test
push
lods
lret
sub
popl
mov
mov
xchg
xor
hlt
es
fwait
js
gs
out
enter
rep
insl
push
pushf
in
ja
daa
mov
inc
out
cmp
loop
sbb
add
lock
clc
xchg
mov
fldl
push
orb
sub
add
push
inc
mov
xchg
cmp
adc
scas
mov
gs
dec
aaa
lcall
or
cmovae
jmp
push
enter
push
xchg
data16
pop
xor
js
xchg
mov
int3
cmc
shrb
mov
push
sbb
dec
int
mov
sub
xlat
jnp
loope
xchg
je
xor
andb
xor
clc
fucomip
xchg
das
ret
sti
lea
adc
mov
inc
std
inc
test
stos
cmp
daa
add
pop
lea
jle
pop
add
and
pop
fimull
pushf
push
fnsave
adc
mov
xchg
mov
mov
jnp
aam
rolb
rcrl
add
and
loop
jle
mov
ud2
aad
js
dec
pop
xlat
adc
leave
jge
outsl
ljmp
clc
loope
pushf
and
lahf
pusha
push
add
add
inc
mov
and
mov
ret
scas
sbb
cmpsl
adc
xchg
scas
sub
out
pop
sub
jl
icebp
fmuls
daa
xor
xchg
sub
push
cmp
adc
mov
and
lods
test
xor
xchg
sub
xchg
push
mov
aaa
dec
xchg
insb
adc
in
insb
mov
call
add
insb
jnp
enter
xchg
mov
xchg
pusha
dec
sub
je
xor
push
add
divl
jecxz
bound
push
ret
es
jp
pop
mov
in
dec
ds
jmp
xchg
sbb
cmp
pop
or
mov
rcll
mov
mov
mov
sub
enter
jmp
imull
mov
or
mov
dec
inc
sub
inc
mov
xchg
out
scas
mov
mov
out
adcl
and
cmp
lock
scas
or
jb
addr16
cld
mov
aad
inc
cmp
adc
or
mov
jg
lods
ret
mov
shrl
pop
lds
pop
rcrl
pusha
sub
aam
add
lret
std
leave
push
aas
jl
or
inc
out
jge
int
or
dec
mov
cltd
gs
mov
int3
and
repz
lock
xor
sbb
or
jb
scas
in
std
xlat
movsl
xor
mov
outsb
dec
cli
cwtl
add
mov
cmp
lcall
and
cmp
rolb
nop
dec
sub
xchg
adc
jl
push
test
jo
in
rolb
mov
or
pop
rclb
cltd
fwait
xchg
out
push
and
pop
stos
lahf
clc
lret
lret
adc
mov
mov
aad
scas
test
mov
inc
sbb
lods
sub
xchg
push
jle
nop
stos
fwait
jl
push
sub
lds
inc
mov
orb
mov
pop
xor
mov
jl
jbe
testl
sub
push
mov
outsl
jg
pop
das
dec
mov
push
aaa
lret
push
lcall
std
push
lock
mov
jecxz
faddl
cmp
push
sub
pop
sbb
pop
in
popa
push
mov
jns
stc
or
mov
mov
mov
add
clc
fwait
push
push
add
rcrl
push
lods
push
orb
sub
jecxz
push
xchg
sub
pusha
pop
push
ficoms
jb
or
scas
cmp
int
outsb
in
fs
sbb
aad
xchg
xchg
inc
mov
mov
pop
cs
cmp
and
arpl
dec
daa
and
gs
rol
adc
int3
jo
sub
clc
mov
adc
or
mov
xor
sahf
inc
nop
adc
sub
cmp
stos
push
bound
shrl
int
mov
or
sbb
sub
mov
or
push
fwait
sub
add
or
mov
pop
mov
insl
mov
mov
inc
cmc
cmp
out
fiaddl
cmp
xchg
mov
rcrl
rol
sbb
popa
enter
fidivrl
out
adc
mov
bound
dec
outsb
fsubr
sub
jge
orb
dec
loope
add
pop
mov
mov
push
mov
outsl
mov
popa
pop
andb
mov
xor
xor
icebp
cmp
fs
sti
sti
mov
aam
dec
orl
mull
shll
mov
out
and
movsb
lret
cmc
mov
leave
mov
mov
insl
sbb
in
ficoml
mov
mov
xchg
inc
inc
inc
imul
xor
sub
pop
outsl
jp
pop
pop
add
xor
out
or
and
sub
sbb
jmp
sub
fnsave
hlt
scas
bound
dec
out
sub
fucomip
outsl
pop
ret
std
dec
inc
push
add
xchg
inc
fcoms
lahf
nop
and
xchg
hlt
dec
popf
dec
stos
xchg
or
or
sti
mov
fmul
jbe
lret
enter
cmp
outsb
sub
add
mov
fs
gs
lahf
in
xchg
movsb
dec
push
insb
pop
inc
fs
cmp
mov
outsl
in
paddusw
cmp
sbb
or
pushf
cmp
mov
aas
negl
loope
inc
xor
mov
adc
inc
stos
jle
dec
testl
inc
push
cmpsb
push
pop
cmp
add
and
xchg
or
and
ret
imul
pop
inc
enter
sub
insl
cmp
stc
je
add
ficompl
lods
test
xor
inc
repz
fstps
add
sti
hlt
imul
lahf
cmpb
jno
sbb
repnz
shlb
popw
movsb
pop
pop
insl
mov
stos
cwtl
je
xlat
jae
notl
fwait
dec
sub
inc
jnp
bound
sbb
mov
inc
or
sbb
ja
xor
out
movsb
sub
out
cmp
and
adc
sbb
xchg
push
jne,pn
in
mov
mov
dec
test
cwtl
adc
add
fisttpl
pop
push
or
cmpb
sbb
ss
addr16
imul
fs
or
sbb
pusha
lds
and
mov
or
pushf
push
xchg
pop
stos
sbb
loope
test
cmp
and
pop
mov
out
inc
fwait
xchg
push
xchg
inc
cmpsl
add
jmp
xchg
iret
or
pop
jb
mov
mov
or
mov
cwtl
jle
fwait
push
sbb
aam
cmp
imul
jae
jle
loop
xor
dec
cmp
fcmovnu
inc
ret
jle
insl
leave
shrl
lret
mul
xor
ljmp
pop
dec
inc
jmp
leave
dec
scas
orl
mov
and
cwtl
cwtl
xchg
icebp
int3
lea
mov
cmp
js
sub
movsl
xchg
sar
roll
jecxz
pop
mov
fstl
scas
inc
arpl
mov
std
mov
sbb
mov
aam
aad
mul
je
mov
pop
and
mov
xor
enter
fldenv
lret
xor
call
sub
sbb
in
shrl
xchg
adcl
arpl
inc
cmpsb
xor
adcl
xchg
sbb
or
cli
jo
mov
repz
insb
ss
in
stos
adcb
mov
add
cld
into
mov
fsubrp
in
lret
cmc
je
pop
sahf
sbb
cwtl
and
ret
icebp
imul
add
sub
insl
sub
jnp
stc
mov
cmp
bound
inc
adc
pop
in
sbb
gs
jmp
imul
fcoms
shlb
push
ficoml
add
jg
das
jecxz
or
lods
mov
cmp
or
pop
mov
sbb
cmp
inc
xchg
mov
nop
mov
sbb
popa
adc
jp
add
inc
test
add
cwtl
pop
stc
ds
fldl
cmp
arpl
movsl
xchg
pop
jnp
insl
push
leave
in
aaa
cwtl
out
mov
dec
inc
pop
dec
stc
push
mov
inc
cmp
cltd
and
adc
cmp
test
gs
mov
push
lock
setp
pushf
mov
insb
xchg
fistpl
pop
lahf
jae
sbb
testl
movsb
arpl
mov
pop
pop
mov
xorl
shrb
mov
cs
hlt
push
test
call
dec
jae
out
outsl
pop
or
subb
mov
sub
push
add
sub
xchg
sub
loopne
inc
pusha
lret
imul
or
add
lret
stos
leave
aam
stos
jb
cmp
das
push
fists
push
add
xlat
lods
jns
mov
loop
xor
push
mov
mov
add
push
in
imul
cltd
inc
inc
loopne
xlat
aas
das
lock
xor
push
nop
imulb
std
lret
push
pop
into
xor
xchg
into
fcmovbe
js
push
mov
xchg
dec
cmp
inc
mov
ljmp
sti
out
and
mov
arpl
jb
int3
int3
mov
jbe
aaa
xorl
scas
and
out
adc
movsl
push
xor
push
fnop
and
scas
jmp
fistl
into
inc
mov
push
and
sub
fbld
push
push
outsl
rclb
dec
clc
xor
pop
aam
xchg
and
imul
inc
or
les
ja
clc
into
or
cmp
cs
inc
fs
mov
pop
call
pop
xor
cmp
sbb
add
div
add
in
lods
pop
pop
popf
inc
in
in
sub
mov
mov
sahf
int
mov
or
insl
push
cli
adc
insl
lods
cmp
das
pop
adc
add
mov
mov
jbe
sbb
xlat
push
adc
xor
cld
mov
and
push
mov
mov
aas
pop
je
shll
lahf
pop
ror
fstenv
fcoms
int
insl
or
xor
or
sub
aam
aad
popf
pop
popf
xor
aad
cmpsb
dec
hlt
insb
xor
pop
pop
xor
jl
outsb
cmc
mov
int
or
inc
jge
sub
test
dec
xor
gs
ja
dec
xlat
pop
push
sti
sbb
jbe
jno
pushf
pop
xchg
outsb
stos
repnz
out
addr16
cmp
sbb
mov
imull
dec
or
mov
jmp
imul
ljmp
add
cmp
sub
mov
xchg
insb
cli
push
mov
adcl
and
leave
shll
jnp
jge
cld
mov
loopne
ret
xchg
jae
or
push
or
aaa
cli
mov
mov
fnstcw
scas
rol
in
xor
adc
xlat
adc
or
sbb
lods
and
jl
push
aaa
jp
push
inc
cwtl
mov
push
or
daa
lahf
sub
and
out
mov
inc
xchg
push
aas
adc
jl
mov
and
sub
fstpl
sbb
ljmp
fisubrl
dec
ds
dec
or
fs
sahf
xor
and
test
mov
sbb
bound
mov
aam
mov
and
int3
out
add
mov
sub
inc
jmp
icebp
add
test
mov
or
jae
sub
lods
sahf
pop
adc
out
iret
lock
mov
shlb
imul
adc
orl
sbb
push
jb
sbb
cmp
sbb
pusha
cmpb
pop
mov
dec
pop
call
cmp
shl
pop
cld
call
popf
adc
xchg
cmp
cltd
aad
cwtl
sbb
xor
cli
jo
and
aad
ret
repz
push
arpl
mov
daa
sbb
in
pop
scas
cwtl
lods
and
sahf
cwtl
sahf
ss
push
xchg
mov
sub
rcrl
test
jmp
mov
jne
pop
jg
mov
std
shll
shrl
cmp
scas
and
rcll
push
test
cld
jle
xor
push
sahf
mov
xor
pop
jnp
push
fmull
mov
dec
lock
jge
movsb
adc
xchg
xchg
pusha
adc
xor
push
cmc
lock
movb
aad
jno
xor
clc
cmp
dec
test
insb
adc
lcall
iret
cli
push
mov
fimuls
test
shlb
arpl
add
cmp
cmpsl
mov
push
push
sbb
mul
sbb
movsl
mov
cmpsb
in
lock
ret
dec
or
test
les
lods
bound
lock
pop
xor
sbb
xor
mov
aam
testl
dec
and
int3
mov
adc
jge
push
subl
pop
insl
clc
push
xchg
xor
jle
fwait
repnz
loop
or
outsl
mov
sub
dec
adc
mov
rorl
fimull
in
mov
sbb
xor
jnp
cltd
lahf
out
sti
into
out
adc
sbbl
push
mov
push
push
or
mov
xchg
lahf
repnz
dec
lds
sahf
xchg
xor
push
or
pop
shll
fisubs
mov
pop
lret
int
push
mov
xchg
inc
mov
sub
xor
daa
or
jp
aad
dec
cmpsl
repz
jge
out
lock
sahf
mov
xchg
outsb
cmpsl
std
sbb
scas
sbb
sahf
mov
out
ds
clc
pop
leave
sarb
call
ljmp
lods
in
insl
ret
inc
xor
lret
in
mov
loope
dec
pop
addr16
jbe
push
push
inc
es
and
sub
dec
addb
shll
movsl
mov
popa
hlt
into
pop
pop
dec
xchg
scas
ficoms
sahf
sarl
jae
enter
dec
fnsave
ss
imul
pop
fbld
push
push
xor
divb
lcall
inc
sbbl
xchg
lret
cs
rclb
stos
sub
test
sbb
or
dec
pushf
and
cltd
dec
stos
mov
mov
test
dec
test
iret
int3
cmp
xor
in
push
mov
inc
sub
ljmp
cmc
cs
cwtl
mov
out
aaa
mov
cmp
add
pop
cmp
std
pushf
scas
dec
dec
and
xchg
sub
jle
cmc
adc
adc
mov
push
mov
mov
mov
push
clc
stos
pop
scas
cmc
fs
jl
daa
repz
repnz
and
movsb
cwtl
in
fsubr
maskmovq
negl
mov
test
dec
jns
lods
in
out
repz
pusha
mov
mov
leave
enter
lods
lahf
aam
imul
aaa
push
scas
sbb
mov
pop
mov
push
and
add
jmp
inc
xor
lods
out
out
mov
xor
inc
pop
cmp
fwait
cmp
fs
daa
cli
outsb
mov
xor
loope
add
cmp
mov
fsubr
dec
aas
jns
aad
pushf
ljmp
xchg
sbb
mov
jg
lahf
lret
nop
xor
cld
xchg
les
popf
es
aam
mov
bound
into
data16
out
popf
mov
sub
fwait
fs
fcoml
cmp
mov
cmp
inc
xchg
call
testl
scas
loop
cmpsl
ja
int3
mov
lock
inc
leave
xor
fimull
lcall
pop
imul
push
xchg
mov
push
mov
test
mov
cltd
fxch
imul
push
ret
add
dec
lea
push
data16
add
cmp
aaa
sub
sbb
sbb
fxch
comiss
mov
dec
addl
icebp
push
add
movsl
mov
out
iret
mov
and
mov
and
lea
in
mov
or
add
pop
dec
out
inc
xchg
iret
stc
mov
out
inc
fisubrl
xchg
push
insl
xor
add
cltd
push
stos
xchg
sub
leave
fstl
inc
sub
mov
adc
imul
pop
cmp
sbb
out
xchg
and
sbb
mov
loop
call
aas
xlat
test
shl
dec
mov
jbe
xor
jno
pop
divl
mov
popf
out
aam
ja
jne
rcrb
mov
fs
inc
test
jp
fidivrl
fs
sub
clc
lahf
cmc
jecxz
xor
lods
sbb
add
push
cmp
cwtl
ficompl
mov
and
out
ljmp
in
mov
jno
or
jmp
fistl
mov
push
or
out
sbb
ret
mov
fstpt
loop
push
leave
xchg
je
jnp
nop
cli
sbb
imul
push
gs
jge
jno
insb
push
push
cmp
gs
mov
int
and
jecxz
mov
jg
inc
mov
inc
pushf
out
or
loope
dec
xchg
adc
add
in
inc
fidivrl
xchg
mov
xchg
fistpl
inc
dec
stos
cmp
push
and
mov
mov
stos
jnp
dec
mov
mov
mov
or
xchg
rcr
ja
sbb
shlb
jmp
punpcklwd
ds
sub
mov
mov
and
arpl
jg
mov
int
testb
mov
push
aaa
stos
mov
sbb
in
cmpsl
rcrb
out
or
jo
sbb
jmp
ret
jmp
sub
insb
iret
stos
es
and
arpl
sub
std
adc
jl
or
pop
pusha
push
aad
lock
je
into
stc
or
xchg
stos
into
xor
das
jle
xchg
fsubrl
add
shl
lahf
cmp
pop
ret
ret
mov
loope
dec
or
ja
rol
sub
xchg
aam
cmp
pushf
mov
leave
rclb
cmc
xchg
cltd
push
mul
jno
add
ljmp
adc
cmp
cwtl
fidivrs
mov
jg
mov
imul
sbb
fcomip
pop
ss
mov
xchg
movsb
mov
ljmp
sbb
xchg
insl
cmc
cld
adc
adc
arpl
mov
cmpsb
inc
push
xchg
ljmp
push
mov
orl
add
mov
idiv
jge
ds
repz
data16
dec
fidivrs
fs
mov
ret
mov
fcompl
js,pn
jne
cmpsb
dec
jne
jbe
mov
or
push
xchg
nop
data16
in
dec
push
mov
push
leave
out
ja
bound
fs
in
jne
jmp
fisubs
clc
cwtl
jg
cmc
fsubs
fistpl
imul
frstor
int3
es
xchg
xchg
test
scas
xchg
mov
aam
mov
xchg
xchg
mov
mov
shll
xlat
fucomp
in
mov
mov
dec
in
mov
xchg
push
xor
imul
outsl
loopne
out
in
icebp
add
adc
lds
cs
mov
add
xlat
inc
int
mov
int
in
xor
push
arpl
out
mov
or
lods
inc
sub
lods
test
pop
inc
sub
les
jmp
pop
inc
jl
mov
xchg
pusha
xchg
addl
push
aaa
cmc
mov
mov
cmp
pop
fsts
in
lcall
pusha
push
adc
les
test
in
jp
pop
in
dec
gs
js
mov
xor
push
lret
sbb
mov
cmpsl
int3
mov
cmpsl
xchg
daa
out
out
in
cld
outsl
stos
xor
dec
lahf
fucomi
loop
int
daa
shr
dec
aad
adc
inc
sbb
pop
clc
inc
or
push
aaa
pop
ret
and
and
push
cmp
add
fwait
or
pop
cli
shrb
inc
scas
sbb
test
cli
mov
rcll
js
jg
mov
jp
pop
dec
push
mov
push
inc
jmp
aad
xor
xchg
jbe
inc
fimull
inc
lock
xor
mov
enter
rcll
loopne
inc
cmc
arpl
pusha
xor
push
jge
nop
rep
xchg
fistpl
add
push
lret
and
sarl
adcb
mov
mov
mov
adc
insl
out
cltd
push
pop
xlat
popa
jb
mov
mov
lock
cld
shll
shll
lock
add
xor
sbb
jmp
je
rclb
lods
imul
dec
imul
sub
jbe
cwtl
cmp
push
imul
jbe
xchg
dec
adc
lcall
rcr
and
pop
sbb
mov
xchg
test
mov
adc
fbld
bound
sarl
shl
ret
mov
jmp
cmp
jmp
pop
inc
jnp
xor
sub
loop
push
mov
and
add
mov
fdivrs
sbb
sub
cmp
or
add
sbb
rclb
or
daa
sarb
sub
mov
fbstp
sub
call
out
mov
lock
inc
adc
push
adc
cmc
shlb
fstps
mov
movsb
cmpsb
lock
cltd
xor
mov
mov
cmp
push
adc
xor
jnp
jno
das
xlat
adc
outsb
sbb
xor
bound
sub
jno
jns
dec
jns
fmulp
nop
movsb
pop
fisttps
cwtl
aaa
out
fidivl
int3
out
or
or
daa
movsb
fcompl
adc
std
leave
shlb
arpl
lret
mov
cmp
lret
push
cwtl
hlt
xor
test
mov
inc
outsb
hlt
pop
push
leave
imul
lds
iret
loop
push
xor
adc
push
mov
inc
jle
push
pop
dec
adc
and
test
pop
push
push
ljmp
lock
jecxz
xchg
xchg
xor
and
hlt
mov
xchg
inc
mov
pop
pop
daa
sub
insl
test
cmpsl
or
call
popl
and
lcall
jne
fisttps
inc
sbb
sub
in
scas
jg
mov
in
jg
xor
mov
mov
dec
mov
test
ljmp
jb
pushf
cld
ljmp
pop
xchg
dec
pop
lea
sub
mov
addr16
pop
or
stos
jo
mov
fcomi
stc
or
and
and
imul
and
jbe
mov
mov
test
ds
pop
mov
dec
out
in
add
stc
mov
dec
sti
mov
mov
scas
daa
jb
mov
jmp
sti
lret
hlt
mov
fildll
or
lock
in
in
imul
and
adc
pop
jecxz
add
mov
orb
mov
pop
mov
sub
shlb
jo
adc
insl
cs
push
pop
mov
and
aam
cmp
push
mov
clc
lret
cmpsb
std
dec
or
ss
mov
mov
xchg
test
mov
icebp
ljmp
movsb
mov
jle
std
lea
sbbl
mov
push
or
lods
pop
mov
sbb
repz
std
jecxz
pop
sarb
fdivr
rorb
bound
insb
adc
popf
mov
cs
cltd
lahf
pop
add
sub
mov
dec
or
inc
mov
lahf
push
repnz
cmp
insb
ja
mov
mov
cmpsb
cmp
test
fucomp
ljmp
cld
push
inc
gs
aas
rclb
push
inc
aad
fnstsw
jg
popf
fldenv
or
cmp
mov
or
jbe
fildll
ja
jae
enter
dec
popl
pop
sbb
jno
push
jne
mov
inc
ljmp
mov
sahf
lret
or
and
ret
cs
inc
clc
test
or
mull
clc
leave
or
jecxz
pop
movsl
je
sbb
aas
out
out
int3
xchg
out
ja
loop
xchg
je
jb
es
loopne
jne
mov
into
push
out
ja
lret
inc
mov
push
pop
js
pop
push
loopne,pn
mov
ss
inc
jbe
mov
aad
cld
fistps
add
push
dec
xchg
outsb
ret
cmp
ss
cmp
sahf
andb
iret
pop
xor
pop
jb
popl
std
out
pop
inc
or
aam
push
mov
mov
dec
das
mov
dec
outsl
mov
and
mov
or
lret
stc
pop
hlt
sub
lock
scas
jecxz
mov
jae
xchg
inc
sbb
test
mov
inc
xchg
mov
push
aaa
lods
pop
cmp
inc
daa
inc
cltd
push
mov
mov
das
pop
inc
jecxz
test
xor
jne
lcall
stos
and
push
stos
mov
mov
xchg
aas
lahf
or
cmp
dec
iret
into
jecxz
test
iret
int
push
cmpsl
cmp
aad
leave
sub
dec
test
je
and
xchg
insb
aas
scas
scas
or
push
push
mov
mov
mov
mov
xor
sbb
aam
in
sarl
and
into
js
xor
pushf
mov
icebp
lahf
dec
imul
out
pop
xchg
push
pusha
test
push
lea
loopne
adc
sub
mov
test
orb
cmc
mov
dec
dec
stos
mov
test
inc
xor
adc
lea
fcmovnu
adc
mov
add
push
pop
and
paddb
shll
mov
xor
in
call
xchg
sbb
test
adc
push
ds
insb
test
xchg
cmc
add
imul
cmpsb
pop
add
push
dec
shlb
sti
fldenv
xchg
orb
popf
clc
add
insb
cmp
in
es
outsb
push
xor
xor
push
push
fadd
js,pn
jo
add
lods
shrb
jle
xchg
cmp
jecxz
sub
xchg
aam
jmp
jbe
cltd
cwtl
pop
cs
les
les
jnp
popf
int
cld
stos
loop
pavgb
sbb
popf
dec
xchg
sbb
adc
adc
mov
mov
xlat
add
enter
add
negb
stc
cwtl
test
jb
mov
adc
pmuludq
or
nop
push
sbb
out
mov
mov
out
push
ljmp
lea
dec
arpl
cltd
sbb
mov
cmpsb
movsl
sbb
cltd
iret
pop
sbb
mov
mov
mov
inc
pusha
adc
push
or
adc
inc
xchg
and
jns
movsl
js
adc
mov
ss
jbe
and
and
int3
cmp
pop
push
mov
cmpsb
adc
in
mov
mov
lods
or
lds
adc
pop
push
dec
adc
push
mov
mov
int3
mov
out
xchg
ret
das
popa
jp
cli
sub
add
dec
inc
xchg
js
jne
aaa
or
in
mov
jl
pushf
and
sub
fdivs
mov
shrl
adc
pop
cmp
lcall
mov
cmp
inc
je
ds
les
cltd
sub
pop
out
into
push
jge
sub
xchg
jge
inc
cmpb
popa
ret
or
outsl
loopne
rorl
xchg
mov
xor
dec
ret
ljmp
fnsave
lret
inc
mov
cmp
jnp
pop
jo
inc
call
add
push
jo
dec
mov
dec
mov
test
cld
data16
sahf
testl
xor
jo
mov
mov
jp
divl
mov
iret
jmp
fcos
cwtl
clc
outsb
pop
mov
insb
xorl
jg
and
mov
outsl
js
es
and
sub
inc
sti
pop
out
fwait
lods
cmpsl
inc
xchg
aam
popf
inc
mov
mov
in
enter
data16
call
xchg
add
das
xchg
cmp
int
inc
fbld
sarb
jecxz
xor
repnz
out
jmp
sbb
xchg
ficoml
fdivrs
rcrl
sub
jmp
xor
aad
hlt
mov
es
std
scas
pop
scas
pop
pusha
push
add
popf
jle
lea
xchg
xchg
rclb
scas
pusha
dec
fwait
dec
je
cltd
clc
dec
std
xchg
gs
js
push
dec
rorl
iret
dec
push
jle
fs
sahf
das
jnp
into
aaa
dec
cmp
add
iret
sbb
jo
int3
mov
dec
aad
pop
lock
or
shll
pop
add
popf
or
xor
je
imul
pop
dec
push
movsb
lahf
pop
in
inc
shll
jno
mov
in
mov
mov
xlat
or
scas
pop
xchg
inc
call
add
testl
rol
addl
movsb
mov
cmp
pop
xor
ret
idivl
mov
mov
mov
call
sti
adc
ret
addl
push
xor
scas
shll
sahf
jns
jo
pushf
scas
sbb
cmpsl
ror
test
aas
in
lcall
out
popf
mov
cmp
pushf
cmc
stos
inc
mov
adc
push
mov
dec
imulb
jmp
lea
scas
pop
push
lret
xchg
sbb
std
js
mov
js
xchg
pop
xchg
fst
in
push
aad
add
fmul
pop
jmp
popf
add
aaa
sarb
adc
ss
mov
fisttps
sbb
outsb
lods
or
dec
dec
xor
push
jnp
fsubs
lret
dec
mov
and
roll
jecxz
movsl
jbe
movsb
lea
sbb
js
inc
popa
sbb
lret
in
xchg
shrl
push
lods
bound
lds
cmp
pop
mov
std
pop
sub
mov
call
fdivrl
ret
and
jge
movsl
mov
sahf
sub
int
mov
xchg
shll
xlat
call
dec
add
imul
inc
mov
mov
push
adc
ds
mov
mov
dec
leave
cmp
jp
fldl
fidivrl
adc
stos
adc
xchg
enter
lret
mov
repnz
dec
inc
sbb
sub
add
out
mov
mov
mov
rcr
xchg
jns
inc
sbb
mov
cmp
fildll
dec
push
pop
sahf
add
testb
adc
orb
mov
lods
ljmp
cltd
test
sahf
mov
push
mov
scas
js
imul
inc
leave
xlat
nop
mov
roll
jae
cmc
adc
loop
sbb
addr16
adc
ds
inc
pusha
jae
push
ss
and
sbb
inc
adc
sub
add
add
xchg
stc
aad
and
js
js
out
add
jo
fmull
push
int
imul
call
mov
or
ja
ds
das
loopne
pop
and
in
je
out
mov
cmc
fwait
sbb
mov
stos
push
cmpsl
sub
movsb
fistl
cmpsl
cmp
rorb
xor
and
pop
sbb
xor
mov
or
push
iret
aaa
jg
push
cmp
movsl
pop
and
testb
inc
int
ljmp
cld
adc
inc
sbb
dec
pop
es
sbb
xor
aam
mov
and
jle
nop
psubsb
xchg
or
mov
stc
sbb
pop
pop
test
cltd
sbb
xchg
adc
mov
or
dec
les
lock
adc
pushf
aaa
mov
xchg
sub
push
inc
and
rolb
push
call
fs
ret
mov
addl
xchg
out
fwait
xchg
jge
mov
mov
mov
cmp
into
fdivr
aad
fwait
test
pop
pushf
std
insb
or
sbb
jae
jno
sub
inc
sub
xor
sbb
lcall
sub
cli
jge
aad
iret
mov
fs
mov
insl
cli
leave
rclb
and
cmp
mov
mov
push
loopne
sbb
adc
push
lods
xchg
stc
imul
jecxz
fs
cmp
dec
pop
call
loop
mov
mov
xchg
xchg
mov
cmp
out
mov
in
pop
jle
sahf
pushf
fnstsw
dec
jmp
ret
sbb
mov
bound
mov
mov
bound
lods
pop
cmp
aaa
hlt
lds
testb
pop
aam
and
inc
dec
xor
lret
push
sbb
mov
push
sbbb
inc
mov
lea
xchg
pop
cs
lods
scas
or
icebp
dec
mov
xchg
les
mov
aad
push
dec
mov
ret
insl
out
ret
jg
inc
rorb
ja
in
mov
jge
cmp
pop
jp
int
dec
cmp
imul
sahf
aas
lcall
popf
xchg
pusha
adc
dec
push
jnp,pn
fsubs
jno
insb
lahf
or
sti
outsb
mov
in
pop
pop
mov
dec
cmp
mov
add
lods
mov
cmc
aam
and
roll
jge
xor
cltd
outsl
push
adc
or
call
je
aam
jmp
or
push
shl
cltd
dec
ret
imul
xor
imul
push
add
lods
or
cmp
mov
xlat
out
iret
and
pop
mov
stos
ss
std
and
xchg
xor
add
adc
enter
mov
mov
pop
mov
cmp
jge
hlt
add
not
sub
pop
and
dec
and
sbb
lcall
rorl
scas
je
cmp
inc
fiadds
push
cmc
sahf
clc
fs
jg
jg
in
cmp
scas
mov
roll
mov
xchg
inc
push
mov
xchg
dec
ljmp
cmp
shr
jmp
xlat
mov
enter
add
xchg
jp
lods
cwtl
lea
sub
jge
outsl
into
adc
bsf
clc
pop
push
and
scas
out
mov
jne
dec
data16
aas
jle
add
mov
mov
pop
jno
stc
or
lret
jmp
push
or
mov
scas
jno
outsb
cmp
pusha
stos
cmpsb
sarb
es
mov
fsubrp
jae
xor
ret
push
repnz
sub
rorb
sbb
ja
xor
jle
cmp
cmpsb
mov
push
inc
pop
dec
insb
jecxz
cmc
je
mov
mov
xchg
inc
mov
je
ds
xor
push
mov
push
xchg
sbb
in
loop
pop
mov
xchg
or
int
scas
mov
cmp
fisubrl
cld
jbe
sub
int
and
push
shrl
jnp
hlt
ss
cmp
cmpsb
std
adc
pop
xchg
out
mov
cmp
stos
mov
iret
push
mov
mov
cmc
xchg
test
daa
add
push
push
loopne
mov
push
push
lret
mov
adc
cs
xor
pop
ss
ficoml
jb
ret
sub
jnp
xchg
ja
jmp
sub
int
mov
stos
dec
mov
xchg
xor
mov
aaa
pop
fisubs
icebp
imul
mov
rcl
shlb
xchg
cmp
mov
ja
hlt
bound
movsl
mov
adc
ret
dec
scas
mov
push
jge,pt
xchg
jne
fiadds
ds
cmp
nop
mov
or
les
int
jle
jno
daa
sub
clc
loop
cli
pusha
inc
mov
mov
mov
cmpl
fbstp
adc
pop
fidivrs
fwait
jbe
inc
pop
push
inc
daa
fistl
scas
cmpsl
pusha
mov
std
inc
hlt
nop
scas
xchg
into
outsl
xchg
nop
mov
out
xor
out
xor
xor
testb
out
xchg
push
jnp
pop
cltd
test
lret
add
add
jecxz
lret
gs
dec
cmpsl
inc
sub
push
sbb
daa
rcrl
jl
fsubr
push
pop
pop
call
cli
lahf
lret
or
fldt
leave
jp
jecxz
loope
xor
mov
mov
jecxz
dec
subb
mov
lock
jl
movsl
add
sub
scas
mov
cmp
dec
sbb
cmp
orl
dec
outsb
and
pop
in
inc
xor
out
aaa
mov
inc
lret
sub
inc
jnp
stos
dec
mov
dec
into
iret
adc
out
iret
fidivrl
notb
dec
in
jle
mov
push
pop
add
jno
fld
mov
cwtl
adc
jmp
cmpsl
cmpsl
call
sbb
es
lret
push
and
roll
pop
or
dec
lds
out
jl
xorb
or
push
fs
repnz
call
mov
int3
sub
xor
mov
inc
in
iret
xor
mov
dec
sbb
inc
xchg
ljmp
sbb
pop
fisttpl
repz
jp
push
out
in
push
in
xor
jns
daa
aaa
push
mov
inc
xchg
mov
dec
lahf
or
xor
dec
stos
mov
add
adc
mov
ret
adc
aaa
mov
inc
lock
jbe
int
xchg
pop
aam
mov
sub
jmp
mov
pop
xchg
dec
sbb
divl
mov
hlt
vpmacsdqh
and
es
lock
je
dec
jae
sti
mov
xlat
fnstcw
ret
das
leave
dec
mov
stos
imul
jle
popa
mov
shl
lea
push
sbb
push
push
es
sbb
xchg
lods
bnd
add
repnz
or
push
jle
fldcw
jne
inc
sub
push
mov
int
cs
mov
mov
jnp
and
jns
pop
mov
inc
push
and
mov
jb
mov
push
cmp
scas
pop
dec
cwtl
shlb
test
mov
push
mov
fs
adc
call
jmp
pushl
xchg
xor
pop
jge
adc
sti
daa
or
mov
adcl
xchg
movsl
icebp
test
loope
out
hlt
and
xchg
jbe
xchg
jmp
mov
scas
mov
or
cld
int
jae
inc
cli
mov
out
and
inc
fcoml
cld
mov
dec
cmp
rcrb
lret
idivb
adc
sbb
nop
loop
dec
int3
stc
ja
and
inc
popf
push
lods
cmp
or
imul
sbb
cmpsl
rcrl
pop
lcall
int3
sbb
in
lea
xchg
popf
jae
sub
in
fcoml
pop
fadds
pop
jg
add
push
or
push
stos
cli
jb
and
sub
xor
fcom
push
arpl
cmpsl
push
pop
xor
jns
xlat
clc
aaa
loopne
addl
popa
pop
mov
outsl
inc
push
ret
dec
jno
movb
leave
mov
and
out
sbb
mov
test
fsts
test
into
movsl
dec
jbe
call
fwait
outsb
fxch
xchg
in
cmp
mov
pushf
mov
or
fstpl
into
xchg
sahf
add
fucomp
scas
dec
xchg
hlt
out
movsb
jnp
inc
mov
das
dec
inc
jne
outsl
xchg
sti
xor
cmp
pop
sbb
mov
mov
aad
shll
imulb
rclb
repz
leave
lods
out
jle
pop
pop
shrb
pusha
xchg
aam
nop
push
insl
jbe
sbb
pushf
xchg
cli
lahf
add
mov
mov
ss
test
std
movb
loope
pop
adc
xchg
mov
or
inc
insb
push
dec
mov
stos
jl
jnp
mov
jnp,pt
insl
cmpsl
push
xchg
xchg
aam
rol
movl
xchg
pop
aam
xor
dec
shl
mov
sbb
daa
imulb
adc
push
ljmp
add
cmpb
push
xor
ja
orl
cwtl
sub
cltd
push
xchg
in
push
lods
outsl
push
jmp
mov
cmp
jbe
pushf
and
push
mov
outsl
testb
or
out
add
add
push
or
popf
pop
and
mov
loopne
jae
bound
bound
dec
ljmp
add
movsl
or
mov
xorl
and
js
lret
jo
and
dec
dec
push
stos
dec
push
test
sbb
clc
test
sar
pop
roll
add
jl
add
pop
maskmovq
idivl
repnz
cli
adc
xor
popa
adc
jne
ljmp
jno
add
push
in
lds
dec
cmp
int
mov
dec
jge
jno
movl
sub
inc
mov
fnstcw
call
jmp
or
jb
imul
iret
inc
mov
xor
dec
pop
fldl
cmpsb
mov
arpl
lods
dec
adc
sbb
xchg
sahf
or
pop
or
mov
arpl
fs
lcall
test
imul
xchg
shll
dec
fdivrs
into
xor
sbb
cmp
pop
test
sti
cmp
sti
mov
jmp
daa
dec
call
jecxz
repnz
and
inc
cmp
mov
or
movsl
mov
aad
push
cmp
iret
sub
push
cli
adcl
cmp
cs
adc
rcl
or
nop
dec
pushf
mov
jge
push
js
cmp
lods
xlat
xchg
mov
dec
mov
cmp
cld
sub
xchg
pusha
jbe
mov
pop
pop
adc
aaa
jne
imul
rclb
sub
stc
or
negb
adc
sarb
mov
cmpsl
xchg
xchg
mov
lahf
sub
imul
mov
push
and
lret
fcomp
mov
xchg
mov
mov
adc
mov
mov
inc
mov
insl
jecxz
add
push
dec
ret
lahf
push
ja
fwait
inc
push
xchg
jnp
out
dec
and
sahf
mulb
add
xor
and
in
sarl
fidivs
hlt
pop
movsl
mov
cs
add
int
outsb
movsb
scas
pop
sub
or
clc
lret
inc
xchg
stos
roll
cmp
filds
mov
mov
xor
les
popf
inc
cmp
int
xchg
pop
xchg
test
cmpsb
mov
sbb
fbld
cmpsb
mov
sbb
inc
cmpsb
in
mov
testl
popf
fisubrs
ret
fisubs
testl
dec
and
jno
roll
add
leavew
xorl
fcmovbe
adc
push
mov
or
test
sbb
adc
mov
jl
outsb
daa
mov
mov
test
and
mov
aaa
imul
cmpsl
data16
dec
pop
scas
mov
push
test
daa
jnp
stc
xchg
aaa
aam
aad
lret
cmp
rcrl
or
mov
sahf
mov
adc
stc
xor
push
pusha
leave
stos
jle
jb
in
dec
fists
pop
mov
aas
test
ret
xchg
scas
xor
jb
ret
push
mov
xor
cmpsb
fldt
int3
sbb
sbb
sub
jmp
add
inc
test
fs
cmc
mov
xchg
loopne
lahf
sbb
fpatan
mov
insb
push
out
inc
and
ljmp
orl
xor
icebp
dec
std
stos
cmp
andb
adc
inc
jbe
sub
mov
mov
add
imull
lret
shrl
aaa
xchg
inc
repz
js
dec
sarb
movb
movsb
cmovae
stos
fstpt
lods
jl
mov
jne
xor
out
mov
cmc
addr16
mov
iret
cmp
arpl
enter
xor
out
push
movsb
jb
mov
sub
mov
testb
enter
pop
in
push
aaa
cld
lret
ficompl
repz
stos
pop
leave
vpsubd
popf
dec
push
shrb
lods
aad
test
movsb
popf
lret
int
in
sarl
dec
js
std
fsubrs
gs
movsl
cltd
das
in
cmp
ds
jp
cmpsl
out
into
ret
cmpsl
ss
movsb
jecxz
jnp
jle
xor
jae
xchg
push
stos
mov
lea
fsubr
cltd
mov
bnd
not
or
dec
and
fiadds
xchg
add
ljmp
cmpsb
mov
lock
stos
lret
adc
inc
insl
push
pop
push
jb
movsl
loope
call
cmc
pop
sbb
jae
pop
or
in
je
jmp
insb
add
add
enter
adc
subl
jne
pop
addr16
lds
push
aam
fldt
in
jge
sbb
xor
mov
or
lret
daa
rorl
repnz
and
int
mov
mov
or
mov
cld
repnz
dec
std
jg
pop
push
stos
jl
ret
cmp
inc
pop
jnp
or
or
popa
in
pop
add
or
sbb
sub
dec
cltd
sahf
clc
add
cmp
test
xchg
ret
aaa
adc
rorl
aad
test
fdivs
in
lret
rol
jp
xchg
das
lods
and
jg
cmp
sub
pop
arpl
icebp
push
mov
int3
pop
mov
std
add
xor
stc
cmpsb
dec
pop
pop
sub
inc
dec
repnz
out
dec
push
subl
cmpsl
cmp
push
les
pop
sti
jecxz
lret
mov
xchg
xor
sub
ss
inc
push
fildl
xchg
test
ja
jo
sarb
xchg
mov
cmp
icebp
cmpsl
mov
add
popf
cs
into
arpl
ss
lods
xchg
sarb
or
andb
hlt
movb
pop
push
dec
rcrb
mov
adc
pop
ja
xchg
fsubrs
mov
jg
lods
mov
fadds
adc
idivl
sbb
add
sbb
lds
daa
in
mov
inc
call
adc
dec
or
popl
dec
cltd
into
mov
adc
in
or
sub
xor
fs
lret
inc
clc
xchg
jnp
call
jg
add
rclb
fstpt
dec
test
aaa
sub
aas
adc
sbbb
out
and
sbb
xchg
push
jge
stc
test
xor
mov
in
stos
clc
lahf
fidivs
ret
aam
push
mov
fwait
sbb
push
cli
shlb
mov
add
notl
popf
inc
fisttpl
jno
gs
xlat
jns
insb
mov
pop
pop
sub
add
gs
pop
sbb
cli
popa
mov
flds
mov
in
cmp
stc
scas
cmp
jnp
mov
inc
mov
outsl
movsb
sub
adc
jo
push
mov
and
xchg
stos
or
push
mov
dec
int
pop
inc
cltd
cmpsl
inc
movl
mov
sub
or
fdivrl
jmp
sub
movsl
push
loopne
arpl
push
repnz
movsl
add
cmp
and
mov
sahf
jae
inc
push
hlt
or
call
stos
inc
pusha
mov
xor
or
dec
and
inc
stc
cmc
in
sub
dec
das
es
subb
bound
push
push
sbb
cli
or
xchg
adc
dec
pushf
in
es
xchg
sbb
adc
jecxz
pusha
stos
jo
ljmp
xchg
mov
cltd
cmp
out
stc
ficompl
xchg
ljmp
jo
fiaddl
mov
mov
push
lahf
mov
add
add
jbe
aas
test
adc
dec
jp
xchg
repz
mov
lods
xchg
jl
jbe
fldenv
mov
jbe
enter
jg
and
pop
insl
xor
pop
add
cmpsl
ficompl
pop
dec
adc
mov
mov
cmp
inc
mov
jg
arpl
dec
fs
dec
aam
lret
ljmp
into
imul
push
rorb
and
leave
add
or
pop
push
fldcw
sub
aas
in
ljmp
jns
sbb
sbb
cld
fbstp
adc
clc
lods
sahf
xchg
and
in
into
or
cli
push
out
xchg
sbb
push
inc
xor
enter
sar
mov
xor
inc
add
out
sbb
aaa
sbb
imul
sub
lcall
xchg
pop
pushf
jg
push
cmp
sbb
dec
imul
sbb
add
pusha
mov
fsubrs
into
dec
add
push
xchg
daa
sahf
add
lcall
mov
push
imulb
cmp
ja
test
imul
pop
cmp
pushf
jbe
in
je
pop
pop
xor
les
dec
xchg
and
mov
pop
mov
das
icebp
inc
mov
cmp
add
into
mov
loope
push
bound
sbb
pop
cmpsb
lret
out
hlt
stos
xor
adc
pop
mov
xchg
loop
add
sub
and
lahf
pop
movsb
push
fsubrs
sub
pop
dec
test
rolb
add
and
add
aaa
int3
rcrb
jb
cld
xchg
fists
daa
repnz
aam
cmp
and
cmpsb
out
stos
movsl
lea
mov
pop
jl
push
or
leave
or
icebp
inc
add
fcompp
outsl
shrl
pop
dec
xchg
jmp
leave
add
fadd
adc
jl,pn
sub
mov
xor
sahf
or
push
movaps
pop
mov
aad
cmpsl
ja
pop
test
mov
cld
cmp
test
mov
leave
das
mov
cmp
cltd
cs
aam
pop
leave
dec
movsl
jle
cmp
ror
rcr
cltd
int
dec
ret
lds
stos
loopne
out
jo
aaa
rcl
mov
dec
cmp
mov
imul
xchg
hlt
insb
sub
sbb
scas
repnz
lds
inc
aam
pop
jge
inc
push
das
lods
cmp
dec
mov
sarl
es
jno
int3
data16
xor
push
test
jne
or
mov
sub
sbb
push
xor
inc
xchg
testb
cmp
out
iret
or
lods
xchg
jge
pop
lods
mov
add
dec
icebp
mov
icebp
add
cmp
sub
in
mov
test
mov
push
rcrl
pop
sub
mov
sbb
call
adc
fnstenv
inc
roll
cs
test
mov
or
add
icebp
push
mov
pusha
std
or
jle
mov
and
sahf
mov
xor
pop
popf
jne
ds
std
out
jl
call
or
js
lods
arpl
pushf
adc
xchg
xorb
dec
jb
mov
mov
es
cltd
or
dec
xchg
xlat
dec
les
xchg
mov
dec
out
mov
mov
div
shll
cmp
xor
xor
mov
test
aam
add
es
fldcw
dec
out
mov
adc
pusha
into
xlat
pop
shlb
cmp
cmpsb
lahf
xor
leave
dec
mov
pop
xchg
add
add
mov
mov
rolb
aas
es
lcall
lods
rcrl
jnp
stos
lcall
aad
push
mov
dec
or
pop
sub
scas
mull
xchg
insb
pusha
shll
icebp
add
inc
orb
cmp
push
subl
pop
cs
movb
xchg
in
mov
out
pcmpgtd
sbb
jecxz
test
jae
jne
mov
insb
xchg
xlat
test
popa
mov
fcoml
jae
lods
pop
out
jbe
cmpsl
shlb
push
cmp
xchg
fidivs
cmc
pushf
inc
shrl
sub
loope
js
fisttpll
push
mov
xchg
std
sbb
or
sub
or
inc
mov
out
repnz
sbb
rcll
imul
arpl
mov
sbb
dec
imul
jge
push
ja
jmp
sub
stos
xor
testl
sbbl
in
or
pop
mov
aam
xor
cmp
inc
xchg
and
inc
mov
frstor
xchg
imull
jno
aas
scas
mov
cmp
dec
inc
mov
add
sbb
mov
roll
cmp
enter
movb
les
sub
pushf
push
adc
jnp
xchg
stc
sti
in
cmc
inc
mov
xchg
cli
bound
push
pop
aad
push
cmp
inc
push
les
xor
aad
inc
fdivl
jnp
adc
pop
popf
in
push
js
rcr
in
dec
dec
testl
xchg
ret
std
inc
jae
iret
rolb
dec
or
or
mov
xor
cmp
int
jecxz
test
push
add
sub
std
or
orl
fisubs
movsb
mov
leave
sbb
mov
jg
aad
pop
in
mov
fs
lock
sub
cmpsl
mov
xchg
popf
test
and
lahf
divb
xor
push
aam
push
jne
sub
iret
mov
enter
aad
add
pop
push
sarb
test
test
js
sub
arpl
aam
stos
push
roll
jae
push
iret
push
aaa
rcl
divb
ds
sub
mov
jae
add
daa
xor
jae
dec
jl
mov
xchg
shrb
test
das
xchg
je
movsb
loop,pn
dec
mov
leave
mov
adcl
xor
aad
sub
dec
cltd
fldenv
inc
xor
inc
stc
enter
lret
sbb
add
loope
and
pop
mov
dec
clc
xor
pop
lret
xchg
cmp
xchg
dec
pushf
xlat
sbb
cmp
and
and
and
idivl
in
cmp
js
scas
or
das
push
adc
fmuls
xor
xchg
adc
jmp
cmc
jno
loopne
aam
testl
insl
and
shl
xor
mov
add
ret
xchg
or
cmp
cmp
movsb
ljmp
sbb
add
xchg
out
dec
fwait
push
les
popa
dec
adc
inc
das
push
adc
dec
mov
xchg
arpl
aad
dec
mov
bound
xchg
lock
sbb
pop
roll
imul
pushf
hlt
shll
cld
std
cmpsb
pusha
leave
mov
lcall
xor
testb
ret
mov
cmpsl
adc
lock
add
xchg
enter
lods
sub
mov
sub
outsl
call
xor
mov
xor
push
pop
div
adc
aam
or
sbb
loope
int3
xchg
aas
push
hlt
xorl
lret
jp
mov
int
out
ss
cmp
lea
jbe
ds
xor
push
or
loopne
stc
scas
addb
xorb
jl
adc
iret
sarl
jno
es
jno
ret
pop
lods
in
cltd
movsl
add
mulb
xchg
cs
data16
clc
pop
and
mov
insl
lahf
jle
adc
adc
xor
icebp
sub
rolb
jne
sbb
mov
inc
fcoml
xchg
pop
iret
xchg
stc
xor
push
cmpsl
sub
repnz
inc
cmp
push
pop
mov
push
scas
push
sub
into
loope
xchg
mov
clc
fmull
dec
js
popa
aas
adc
mov
mov
adc
and
mov
inc
jl
inc
out
mull
or
and
mov
or
xchg
sarl
ljmp
ss
sbb
mov
sbb
cmp
aas
cmp
test
outsl
data16
dec
or
push
out
ret
dec
pop
lret
jmp
jecxz
icebp
jns
mov
and
int3
arpl
lcall
push
or
mov
stos
jecxz
cli
jno
psubw
mov
rolb
pop
mov
js
cs
aam
sub
je
ljmp
pop
pop
les
mov
imul
fwait
jg
mov
lret
addr16
mov
and
sub
xchg
mov
inc
push
cmp
pop
jno
dec
push
dec
pusha
mov
imul
push
jmp
mov
dec
lret
fs
xor
ljmp
dec
cmpsl
or
in
push
sub
xchg
or
stos
mov
sub
je
cmp
xlat
add
xchg
loopne
mov
ret
mov
sbb
fldcw
cld
and
pop
adc
lahf
pusha
cli
aam
nop
pop
shll
lcall
lds
or
std
dec
mov
lea
fs
mov
pushf
dec
ja
xchg
out
and
cmp
rclb
imul
xchg
out
pop
mov
jp
mov
adc
negl
xor
rorb
test
push
movsl
sti
mov
dec
push
cld
cmpsb
mov
adc
jle
jecxz
scas
cmp
inc
add
mov
out
push
mov
pop
lods
pop
cmp
rcrb
insb
push
or
fwait
lea
lret
pop
and
je
inc
mov
enter
pop
push
xchg
arpl
subl
and
jmp
mov
inc
pop
pop
add
test
scas
lret
xchg
loop
mov
push
fcompl
sub
out
xor
mov
testl
mov
aam
inc
push
mov
or
jbe
insl
and
mov
cmp
inc
jae
jno
pop
mov
jno
push
or
add
cltd
sbb
xchg
xchg
sbb
and
call
xchg
xor
rcrl
push
call
adc
dec
lahf
mov
icebp
or
sbb
fistps
cmp
dec
bound
fsubl
add
lcall
sub
jbe
out
clc
sub
add
icebp
movsl
jnp
test
mov
lods
dec
lock
xchg
fidivrl
add
leave
sti
xor
pop
mov
push
popa
push
pop
dec
lahf
mov
test
pop
cmc
xchg
iret
add
inc
inc
in
inc
movsb
aaa
data16
outsl
leave
pop
mov
movsb
cmp
mov
ja
cs
push
pop
fiaddl
inc
enter
jno
push
repnz
iret
arpl
rep
mov
sbb
push
mov
pop
adc
scas
pusha
add
xor
addb
or
fistpll
adc
hlt
stc
les
sub
sti
adc
jo
mov
scas
icebp
or
test
ja
stc
pushf
push
and
outsb
jno
pushf
sbb
sahf
pop
jo
std
shl
adc
dec
inc
ja
lods
adc
lret
int3
or
mov
lods
in
fisubs
jge
add
loopne
or
and
cs
popf
xor
add
and
aad
orl
push
bound
dec
mov
mov
xchg
sahf
paddusb
push
in
and
out
aam
leave
fmul
sbb
adc
mov
and
cmp
aad
push
add
loope
shrl
sbbb
xor
into
push
scas
pushf
jmp
xchg
dec
jno
mov
repz
add
dec
mov
rclb
out
mov
and
pop
xor
jnp
mov
ror
int
int
dec
sbb
jp
push
ja
adc
adc
popf
icebp
jge
lret
xchg
test
and
mov
pop
int
sub
test
jnp
ret
in
inc
mov
test
push
sbb
push
imul
fwait
in
and
shlb
lock
int
jae
pop
pop
pop
fxam
and
in
cld
mov
scas
ja
iret
clc
adc
std
adc
jae
sbb
aad
dec
xor
or
jle
add
jb
add
xchg
fisttpl
push
rcll
pusha
add
push
jmp
addb
ja
pushf
xchg
and
orb
and
shr
mov
add
jbe
mov
out
push
mov
jnp
std
jge
add
sub
mov
and
pop
sbb
xchg
xor
jle
sti
mov
arpl
jmp
sub
xor
xchg
xchg
sub
je
pop
ss
xor
adc
add
sarl
mov
mov
pop
cmp
loop
mov
test
jmp
jno
xchg
jp
sbb
pop
xchg
mov
ja
dec
mov
inc
xchg
cwtl
arpl
inc
or
daa
inc
cwtl
cli
xchg
sahf
enter
out
mov
outsl
shr
jae
stos
dec
out
fsub
dec
jae
or
xchg
push
fsubs
lret
jge
mov
lret
imul
stos
fidivrl
fistpll
jmp
inc
rorb
jbe
jns
pop
adcb
les
add
call
test
ret
mov
inc
add
into
sub
clc
push
sahf
adc
repz
jbe
aam
out
push
jb
mov
push
inc
mov
test
dec
clc
movl
jae
mov
xorb
mov
lahf
mov
mov
mov
mov
push
push
flds
imul
lock
scas
mov
xchg
inc
and
push
push
cwtl
xor
pop
mov
popa
inc
fsts
cmp
out
mov
cmp
mov
sarl
jns
mov
adc
js
sbb
pop
pop
sub
dec
sbb
mov
mov
fnstenv
jecxz
push
int3
gs
push
aaa
lds
das
rolb
movsl
jmp
sti
lock
jo
xor
js
mov
and
scas
push
push
xchg
jg
sahf
roll
mov
insb
mov
icebp
mov
divb
cmp
lods
push
lds
pop
addl
cmp
std
imul
addl
pop
push
ss
les
pop
sahf
inc
push
rcr
pop
movsb
xor
js
adc
push
rcl
insb
out
mov
movsl
mov
popa
pop
test
or
inc
mov
push
inc
aam
enter
push
mov
fisttpll
add
lods
loopne
dec
and
mov
xor
fdiv
xor
push
or
jp
mov
scas
sbb
xor
lock
test
sbb
push
call
dec
ds
jnp
std
loop
loop
lods
aas
loopne
xor
mov
xor
pop
pop
mov
sub
fsave
outsb
or
mov
addr16
jno
pop
shl
jns
popa
jle
daa
add
pop
pop
dec
mov
test
push
das
adc
jns
orl
cmp
ss
add
outsl
pop
and
add
fistl
mov
mov
roll
imul
and
push
lock
push
int3
sbb
bound
rcrl
ret
jno
mov
xor
xchg
nop
xchg
xchg
popf
out
push
js
test
cmp
sbb
push
imul
push
sbb
repnz
insb
fdivl
dec
popf
or
dec
sahf
jno
cmpsl
xor
mov
push
sub
mov
mov
scas
sbb
icebp
push
add
jbe
sub
ds
push
cmp
movsl
xchg
stos
cmp
outsb
sub
daa
dec
mov
ret
in
pop
lret
pop
mov
mov
cmp
jmp
cmp
jae
pop
negl
popl
jecxz
repnz
ja
inc
inc
cld
adc
ret
xchg
mov
gs
xchg
mov
jb
pop
mul
in
add
bound
xchg
fcmovnb
dec
mov
fs
repz
je
sbb
out
or
shrl
into
scas
das
insl
mov
mov
or
dec
ja
jae
xlat
ret
jmp
dec
test
clc
dec
mov
pop
test
add
lock
je
pop
mov
mov
cmp
out
nop
mov
mov
nop
mov
repnz
xchg
adc
adc
mov
call
xor
mov
popa
xchg
jg
mov
test
mov
test
mov
aam
pop
mov
xor
neg
pop
push
loope
xchg
shlb
jg
ja
mov
test
fadd
out
shlb
int
cmp
push
jmp
orb
int3
js
jl
lcall
sbb
xlat
insb
inc
pop
ret
out
loop
push
pop
stc
loope
sub
scas
sti
mov
xor
pop
out
fldl
lret
repnz
cs
pop
les
int3
out
dec
fidivl
sti
mov
rolb
scas
divl
sub
sub
pop
dec
push
orl
scas
mov
push
shlb
ret
and
loope
adc
out
in
insb
jae
xor
roll
dec
sub
mov
pop
stc
adc
movsb
adc
jg
dec
popa
cmc
sbb
movsl
or
aam
ja
out
test
jecxz
fisubrl
insl
repz
sub
mov
cmp
lds
movsb
je
scas
mov
or
pusha
pop
das
cltd
andb
repnz
das
sub
out
pushf
into
les
or
or
xlat
xchg
pop
xorps
mov
js
cmpsl
ret
and
cwtl
inc
data16
xor
cmp
mov
inc
subb
jbe
sbbb
pop
push
sub
mov
movb
mov
lret
outsl
jg
rorb
push
leave
dec
sub
dec
pop
xor
jb
int
das
mov
lea
scas
out
clc
jns
push
dec
stos
or
mov
lods
out
jnp
or
jge
out
rolb
fsubs
add
or
xorl
or
repz
neg
push
inc
or
aam
pop
xchg
in
xchg
pop
aas
mov
push
jge
lods
popf
mov
sbb
int3
lods
lret
mov
sbb
mov
iret
push
adc
loopne
out
enter
cmp
and
sbb
mov
mov
xor
inc
insb
or
movsb
js
adc
sar
cwtl
xor
lock
dec
repnz
popf
mov
pop
out
push
jge
push
pusha
jg
in
ret
jo
push
dec
mov
push
xchg
call
mov
sbb
jbe
movsb
ret
mov
pop
icebp
in
mov
test
movsb
sub
or
dec
stc
mov
mov
fcompl
and
sahf
and
cwtl
ficomps
pop
cmp
ss
int3
pop
xchg
mov
in
je
push
dec
xor
pop
jmp
aad
add
mov
cwtl
sub
or
mov
push
out
cmp
push
int
jo
rolb
push
xchg
repnz
repnz
xchg
lcall
sbb
imul
call
add
sub
or
pop
daa
fmuls
bndstx
push
std
movsb
cmp
sbb
mov
mov
and
jo
insb
inc
cmc
pusha
dec
aam
mov
testb
adc
stos
aad
xor
sub
mov
sbb
inc
les
out
cwtl
mov
sbb
or
mov
sub
and
loopne
ss
sub
subl
test
insl
insb
out
pop
pop
mov
adc
mov
rcll
or
shlb
mov
xor
loope
mov
jmp
addr16
jl
pop
shlb
imul
xchg
or
rolb
push
add
mov
mov
or
int3
shr
jecxz
xor
xor
pushf
or
mov
gs
loope
mov
adc
mov
scas
sub
xchg
xchg
push
add
lcall
lret
dec
sahf
and
into
ret
ds
add
cmp
cmc
or
pop
call
dec
xchg
sahf
xor
out
adc
mov
sub
mov
outsb
jl
rol
scas
jmp
pop
loopne
gs
pop
inc
cwtl
add
fistpl
in
mov
into
movsb
insb
xlat
mov
sbbb
ficoml
xchg
scas
mov
js
stos
inc
imul
mov
sub
xchg
inc
nop
aas
imul
fisubrs
xor
cltd
ljmp
cmp
xor
inc
dec
add
mov
mov
inc
jge
mov
jmp
sbb
sti
and
inc
xchg
movsl
push
in
cmp
jbe
or
mov
js
add
cmpb
mov
in
repz
adc
add
fstpt
xlat
inc
stos
xor
cmp
popf
data16
movsb
add
outsl
adcb
negb
mov
jle
cmp
and
push
fldt
sbb
xchg
aaa
xchg
sbb
loope
cwtl
mov
call
pop
mov
push
imull
pop
dec
outsb
jge
xor
xchg
addr16
cmc
popa
enter
add
dec
aam
test
movsb
adc
jmp
fstpt
sahf
ljmp
sbb
mov
mov
xchg
inc
scas
mov
mov
adc
fnclex
push
jbe
mov
insl
add
fcoml
inc
inc
imul
push
sub
jecxz
push
enter
sub
mov
add
inc
sarb
lcall
add
sbb
call
sbb
mov
sub
add
test
dec
adc
mov
or
inc
sar
add
ja
sbb
and
and
in
xchg
or
xchg
push
rclb
push
dec
and
bound
mov
enter
dec
dec
sbb
jg
pop
out
insl
mov
or
dec
out
outsb
sub
test
addl
pushf
mov
mov
mov
lods
xor
fisttpl
xlat
pop
sub
push
mov
hlt
inc
addr16
into
mov
push
cmp
dec
xchg
fildll
or
lret
into
add
mov
int
movsl
push
mov
fisttpll
shrb
dec
stc
mov
in
xor
ss
jmp
mov
lret
movsb
mov
jb
stos
aam
pop
xchg
movsl
xchg
mov
xchg
pop
jmp
mov
arpl
adc
mov
and
mov
jnp
mov
push
pop
jg
inc
xor
fstp
popf
frstor
adc
sbb
loopne
daa
add
inc
xor
mov
sub
into
sbb
ss
push
mov
insl
sbb
orl
and
icebp
fstp
cmp
hlt
xchg
je
clc
stos
rcrl
jnp
out
test
inc
mov
xchg
sbbl
pop
push
shll
dec
out
nop
cltd
mov
repz
js
scas
lods
xchg
push
mov
out
in
and
dec
std
mov
les
mov
dec
cltd
imul
fstl
mov
cmp
rcrb
pop
popa
push
inc
push
lret
daa
ds
imul
mov
rcrl
cld
jmp
sbb
sbb
jge
mov
mov
cmc
data16
movl
or
xor
test
cmp
in
lahf
push
nop
inc
cltd
jecxz
rcrb
jns
mov
adc
scas
outsl
mov
mov
xor
gs
dec
subb
sub
insb
ds
dec
aad
sbb
loope
arpl
and
daa
mov
add
and
mov
movsl
sarl
mov
fiaddl
in
sub
push
or
mov
mov
fmuls
mov
cmpsb
ret
pop
cmc
sbb
test
test
sbb
add
jnp
mov
pop
mov
and
in
sub
inc
inc
int
addr16
inc
ljmp
dec
xchg
sub
clc
xchg
xchg
xor
mov
hlt
add
lock
pop
and
rcrl
es
lret
push
cmc
jge
pop
mov
aad
sbb
inc
push
adc
movsl
inc
ja
lahf
dec
dec
mov
stos
lock
dec
pusha
cld
sub
mov
mov
mov
cmp
xchg
push
aaa
mov
js
fldenv
cmpsl
xlat
mov
leave
xor
pop
insl
fldt
gs
cmp
es
and
mov
test
jp
mov
cmc
inc
jg
fbld
mov
xchg
pop
data16
sub
or
data16
mov
jp
jg
jmp
in
xchg
in
scas
sbb
cmp
popa
stos
out
and
lock
fdivl
fwait
out
push
mov
imul
iret
mov
pop
inc
dec
jp
ja
pop
add
test
jmp
movsl
and
js
jns
lret
xchg
test
jl
sahf
call
xor
outsb
mov
lds
out
mov
scas
mov
mov
cmpsb
loopne
xchg
shrl
cs
jmp
push
inc
cmp
shll
xchg
loope
pop
adc
das
test
push
inc
lds
repnz
fildl
fldenv
clc
icebp
xor
mov
pushf
dec
sahf
cli
pop
adc
sti
mov
dec
mov
jmp
ret
sub
repnz
test
lds
or
lret
sbb
dec
adc
imul
sahf
and
les
andb
hlt
mov
int3
call
mov
xlat
fdiv
push
inc
lods
xorb
ljmp
or
add
test
js
push
mov
ja
jno
popl
mov
fucompp
mov
lret
add
inc
xchg
push
sub
stos
daa
stc
hlt
or
lea
enter
inc
mov
gs
sub
sti
addr16
push
gs
or
sbb
lods
cmp
jl
jo
nop
mov
xchg
sub
insb
dec
push
sbb
int
jmp
flds
sbb
and
das
or
pop
test
dec
lcall
pop
adc
add
mov
mov
rclb
rorb
scas
fidivl
aaa
push
sarl
xlat
cmpsb
data16
pop
das
mov
mov
xor
outsb
adc
pop
cld
cltd
outsb
sub
repz
xlat
xchg
add
lock
inc
lods
xor
cmp
lods
testb
loopne
xor
pop
mov
rorb
sub
popf
dec
sbb
push
dec
fs
xchg
cltd
nop
aaa
jae
pop
daa
shrl
dec
movsl
push
ffree
mov
aam
pop
adc
popf
mov
das
add
ficoml
popa
pop
xor
out
xor
inc
ds
dec
les
out
cmpsl
xchg
pop
inc
aad
inc
paddusw
imul
mov
xchg
lret
bound
cmp
int
add
fsubrl
in
je
fnstsw
scas
pushw
inc
jecxz
mov
sub
push
fs
movsb
fs
das
xchg
aam
sbb
sub
lahf
sub
mov
lea
ljmp
cmc
repz
cltd
pushf
dec
arpl
push
cmpsb
jno
or
xchg
mov
and
push
das
imul
pushf
xchg
popf
pop
cld
sub
movsl
das
js
loop
xchg
add
out
mov
sub
bound
lcall
lea
jno
repz
mov
cmove
dec
out
mov
testl
and
push
mov
xchg
mov
and
cmp
push
pop
mov
addr16
jmp
aam
adc
adc
xchg
push
mov
lcall
pusha
je
push
pop
xchg
xchg
cmpsl
mov
add
int
xor
test
push
mov
mov
xor
xchg
and
in
lds
sbb
adc
stos
pushf
aam
and
push
mov
cmpsl
xor
cwtl
out
ss
inc
inc
or
stos
or
jle
xor
cmp
roll
fwait
stc
mov
int
add
push
imul
push
add
inc
lahf
pop
jno
in
mov
cld
lret
rcpps
addr16
cmpsb
inc
loopne
ficompl
or
rcrb
out
mov
stos
jne
mov
add
jecxz
xor
lret
pop
jge
aaa
mov
jnp
cld
mov
or
out
shl
out
in
sbb
fdivrl
addb
popf
mov
xchg
aas
mov
adc
rcr
enter
jnp
aaa
sub
adc
fwait
push
add
cs
ds
dec
aas
cmp
push
push
loopne
dec
pop
inc
daa
inc
ss
sti
out
mov
xchg
or
inc
and
lret
or
mov
mov
mov
cli
cmp
test
lock
mov
inc
adc
or
or
jae
shlb
adc
stos
out
jb
clc
pushf
mov
adc
sahf
cmp
fnstcw
mov
les
loope
lahf
movsl
cmpl
cmp
mov
mov
cmp
adc
jp
fdivrl
in
inc
lret
std
inc
and
icebp
int
adc
pop
icebp
pop
inc
xor
fs
repnz
test
and
fs
mov
popf
mov
je
idivl
cmpsl
jmp
wrmsr
shrb
push
xlat
dec
movsb
testb
inc
imul
inc
cmp
jg
jge
xchg
out
shlb
and
cmp
popa
cmp
or
popl
dec
jg
insl
dec
xchg
fnstcw
fdivs
incl
sbb
into
add
insb
pop
jl
jg
push
aas
cmp
aaa
mov
in
push
ds
push
mov
fnstsw
call
ja
jmp
ret
daa
adc
push
dec
lock
jae
cmp
test
xchg
sbb
xchg
movsb
inc
lods
mov
sub
movsb
dec
adc
aam
xchg
iret
push
das
or
lods
pushf
dec
lods
insl
lock
jecxz
out
jb
pop
mov
aas
iret
push
les
insb
cmp
loope
sub
jo
add
push
idivb
pop
pop
sub
adc
mov
push
xchg
in
inc
cmp
sbb
dec
jge
std
leave
test
imul
ss
mov
stos
push
or
in
ja
cmp
cmpsb
xchg
jb
aam
or
mull
dec
mov
in
pop
inc
rolb
cmc
test
mov
in
fistpl
xchg
pushf
idivl
gs
or
jg
sbbl
jns
fidivs
mov
imul
into
ja
sub
into
outsl
mov
push
or
adc
outsb
xor
sub
dec
je
push
clc
mov
sbb
sbb
fistps
std
xchg
mov
fbstp
scas
dec
rcrl
mov
pop
dec
ss
push
out
xchg
inc
mov
cmp
in
mov
lea
push
clc
test
sbb
push
cmp
or
adc
dec
or
adc
or
add
out
push
ljmp
sub
movsb
int
lahf
xor
shl
ljmp
fistpl
dec
test
xchg
push
xor
mov
mov
xor
repz
cs
lret
fwait
pop
es
sbb
mov
adc
movsb
outsl
xor
in
sbb
into
pop
push
dec
xchg
out
cltd
jge
lahf
jb
jae
mov
ljmp
xchg
push
pop
jns
cmpsl
leave
inc
addl
mov
push
arpl
jb
xor
adc
mov
cmpsb
mov
mov
mov
push
out
sub
xchg
ljmp
pop
das
aas
out
aas
out
dec
sar
and
pop
xchg
xor
pusha
aam
sti
push
cmc
sub
and
mov
pop
add
stc
jb
aam
jg
dec
push
out
cli
testl
mov
fwait
pop
sahf
fisttpll
jbe
dec
dec
add
xchg
fwait
inc
and
test
dec
and
add
xor
fisttps
stos
shrw
es
call
iret
fwait
pop
call
arpl
lea
sahf
jb
icebp
scas
push
shlb
pusha
daa
pop
sub
cmp
into
sbb
and
xchg
jle
shrl
dec
sub
into
pop
cmp
shl
lahf
cs
inc
xor
imul
lock
shrl
pop
int
and
inc
cltd
push
aad
push
arpl
mov
jmp
scas
mov
cmp
cmpsl
insl
shr
pop
cmc
enter
fcomps
mov
cltd
mov
aas
jmp
mov
and
pusha
cmp
hlt
in
not
mov
sbb
dec
or
xor
xchg
push
into
ss
std
scas
jnp
or
gs
outsb
jnp
insb
les
cmp
sbb
add
roll
adc
inc
test
in
adc
into
fmull
cmp
inc
push
adc
inc
add
or
mov
pop
mov
mov
dec
xor
cmp
bswap
add
and
sbbw
dec
and
mov
leave
mov
mov
lret
cmpsb
adc
movl
fidivrs
jg
outsl
sbb
popf
mov
and
xor
push
fistpl
pusha
pop
clc
jne
inc
lret
rcr
arpl
dec
xchg
cmp
pop
pop
gs
fmull
mov
iret
push
pop
cmp
lock
lock
cmpsl
lret
mov
sub
test
loope
inc
fimull
fbstp
mov
pop
adc
fisttpl
clc
shlb
add
sbb
jae
sarl
subb
sbb
push
cmpsl
lahf
rcrl
dec
ficoms
fiaddl
mov
out
call
push
and
fs
popa
pop
cld
stos
and
xor
add
xchg
jnp
rclb
mov
adc
subb
sbb
inc
mov
pop
sub
movsb
pusha
addr16
stos
mov
fwait
sub
inc
xchg
out
adc
popf
in
add
pop
insb
lahf
in
test
xchg
cmp
insl
imul
daa
outsb
stc
jns
test
dec
stos
mov
mov
adc
pop
jno
notb
nop
lock
popa
pusha
add
fwait
xchg
xchg
push
and
pop
mov
sbb
fcomps
pop
ljmp
push
insb
push
rorb
filds
repz
and
addr16
mov
pop
call
jmp
or
int3
enter
mov
and
out
insl
mov
mov
cwtl
idivb
and
xchg
sbb
add
mov
test
stc
dec
jl
xchg
add
jle
rcrl
mov
inc
cmp
mov
lock
imul
jmp
push
inc
pop
cmpsl
cwtl
inc
popa
dec
mov
ss
pop
test
inc
mov
jne
cwtl
out
in
and
mov
pop
push
lret
ds
clc
lods
pusha
pop
pop
test
dec
int3
fistpll
js
pop
lock
sar
movsl
sub
cmp
jo
int3
dec
dec
inc
sub
xchg
inc
pmulhuw
xchg
sub
and
aam
loopne
outsb
mov
push
adc
rcrb
popf
push
jge
sbb
jb
push
xchg
ds
inc
scas
push
je
shrl
jns
rclb
sbb
movsl
enter
cmc
fiadds
dec
sbb
lahf
and
jmp
sbb
imul
jb
push
js
push
jge
pusha
pmuludq
or
shlb
popf
gs
repz
mov
xchg
stos
test
jmp
es
fsubrs
movsl
mov
mov
push
rcrl
inc
outsb
loop
xchg
or
inc
sti
dec
sbb
dec
pushf
push
sbb
jo
addl
push
or
pop
ss
addl
sub
jp
sbb
and
mov
push
mov
xor
cmc
xor
dec
fcmovnb
std
dec
mov
and
lods
std
cmp
fidivl
daa
sahf
shll
adc
scas
lret
popa
aad
add
add
loope
pop
sub
mov
sti
jge
out
sbb
cmp
xor
pop
outsb
ds
lods
xor
insl
mov
loope
fldcw
loop,pt
mov
mov
inc
adc
sub
es
sub
aad
or
cmp
jnp
pusha
mov
sbb
xor
imul
sub
and
jb
in
pop
push
jne
iret
into
cmpb
push
pop
cli
lds
add
xchg
mov
fisubs
dec
roll
in
cmc
or
or
sub
ret
dec
jno
pop
xchg
jbe
push
xchg
mov
popa
arpl
add
mov
loop
mov
lahf
mov
mov
rcll
xchg
icebp
in
call
or
fbstp
inc
dec
das
cmc
imul
dec
push
push
jnp
xchg
pushf
cmp
mov
mov
dec
in
mov
jae
hlt
sub
iret
jo
sbb
popf
xchg
outsl
flds
fldl
jo
jmp
stos
data16
insb
or
or
xlat
mov
or
add
pop
iret
movsb
dec
scas
pusha
sub
ljmp
je
arpl
push
enter
and
lods
xor
mov
movsb
orb
inc
mov
inc
xchg
scas
fbstp
jl
or
in
sbb
or
loopne
fsubs
lods
subb
movl
jb
sub
mov
and
clc
xchg
int
inc
rorb
mov
nop
mov
sti
paddd
sahf
scas
pop
sub
in
ljmp
shrb
int
mov
call
fbld
xchg
fisubrs
xchg
shll
mov
dec
mov
add
mov
daa
pop
pop
inc
les
fiadds
mov
cmp
mov
and
push
stc
insl
add
mov
adc
fisttpll
jbe
iret
sub
mov
gs
insb
addr16
test
scas
dec
movsb
inc
in
fdivs
jmp
insl
icebp
inc
or
push
nop
push
lret
test
fildl
push
test
stos
dec
test
jl
xchg
sub
add
inc
push
es
lret
lods
cld
pop
gs
std
xchg
cltd
pop
pop
pop
sub
jne
and
push
rcrl
xor
mov
nop
pop
cmpsl
addr16
test
add
mov
hlt
addl
rcr
out
push
sti
push
fldcw
mov
xor
ret
cmp
cmp
or
xchg
and
fsubp
and
jmp
fimuls
mov
jae
pushf
inc
mov
xchg
rorl
adc
loop
iret
stos
push
je
or
pop
lock
dec
mov
scas
mov
jns
nop
repz
adc
push
stos
push
jecxz
js
jb
aad
push
sbb
nop
ljmp
push
xchg
shlb
jge
mov
sbb
aas
cmpsb
pop
xchg
sbb
and
roll
arpl
fstpt
movsb
sub
mov
rcrb
push
push
js
test
push
ret
cmp
lcall
mov
loop
pop
fmuls
iret
cmc
out
inc
movsb
or
dec
cmpsb
cs
dec
loopne
js
mov
mov
aas
cmp
fstps
movsl
push
mov
push
ds
rolb
push
lods
lea
call
addr16
pushf
push
xchg
test
dec
mov
cli
adc
pop
repnz
shrl
fisubrs
pop
ficoms
jno
outsl
repnz
sub
scas
lahf
sub
mov
flds
jp
xchg
jo
js
add
jae
cmp
jo
insb
add
fs
std
jae
aas
pop
cltd
adc
mov
push
pop
jp
fnstenv
dec
sarb
loope
into
and
mov
jns
or
test
in
pop
decl
movsb
adc
or
jmp
ret
or
sub
add
fldt
cmpsb
or
sub
and
mov
or
shrb
xchg
loope
push
lods
xchg
xchg
cs
pop
push
mov
cltd
jp
xor
ja
mov
jp
push
movsl
das
jae
or
xchg
lahf
pop
add
xchg
push
cmpl
dec
stc
pop
mov
ljmp
fsts
mov
lock
cmp
mov
add
pushl
test
movsl
neg
divb
aaa
aas
inc
inc
xor
orb
mov
jp
je
add
jae
or
ds
xchg
sbbb
push
outsb
mov
call
sbb
out
lret
fisubrl
mov
popa
add
leave
cmp
js
lods
adc
sub
js
lock
push
dec
scas
mov
mov
cld
fcomps
outsl
andb
dec
or
cltd
sub
sbb
popf
in
mov
jo
sti
dec
shll
xchg
jb
insl
daa
aas
push
call
mov
mov
xor
fwait
out
stos
stc
sub
daa
inc
mov
jno
pop
mov
pop
in
mov
movl
xor
mov
int
adc
adc
mov
push
push
and
cmc
mov
movb
mov
sahf
mov
mov
add
mov
hlt
movsb
jno
mov
je
sub
inc
outsl
cmpsb
inc
shl
mov
test
lret
inc
shl
mov
xchg
dec
sub
mov
leave
pusha
or
jecxz
movsl
pushf
decb
test
xor
outsb
test
leave
repz
push
xlat
lods
outsb
mov
mov
lret
push
jae
dec
andb
dec
cmp
push
pusha
int3
push
test
push
leave
dec
nop
decl
sub
add
xchg
mov
xchg
lds
mov
imul
outsl
ss
inc
popa
sbb
xchg
cmp
xchg
pusha
nop
or
push
sub
aaa
or
mov
insl
mov
sub
fwait
shll
daa
dec
inc
fcmovb
pop
mov
insl
inc
addb
adc
jne
pushf
and
pop
fbstp
imul
push
lcall
mov
rcr
cltd
add
sub
aad
call
ret
movsl
push
xlat
lods
in
popa
aam
inc
add
mov
cmpsl
and
xlat
mov
daa
fsubs
fucom
xor
sahf
das
add
cmp
or
testb
pop
pop
shlb
enter
or
dec
pop
mov
test
push
push
in
fimull
sub
out
cmpsl
popf
das
cld
shrb
dec
mov
xor
stos
add
lock
mov
push
jmp
int
mov
rorb
data16
out
cld
test
outsl
pop
call
sub
jae
test
imul
fildl
cmc
cltd
shlb
sbb
inc
or
sbb
dec
cmpsb
xchg
js
adcl
mov
lods
pop
and
stc
xor
mov
mov
adc
rcll
push
sbb
push
inc
jp
data16
pop
test
inc
aaa
test
and
cmpsb
xlat
lods
fnstcw
arpl
aam
mov
hlt
adc
scas
cmp
pusha
popa
jge
adc
sub
decl
sub
mov
mov
mov
ss
lds
inc
fimull
das
push
xchg
mov
mov
push
mov
or
lret
fstpl
jb
lods
int3
jne
adc
test
sbb
inc
add
cmc
mov
mov
scas
push
inc
mov
or
add
sub
cmp
in
push
mov
inc
pop
imul
and
inc
lcall
jp
pop
call
ret
mov
fisttpll
fdivs
xor
imul
push
xchg
and
sarl
cmp
jo
mov
pop
mov
mov
stos
gs
jo
pop
ljmp
popa
and
fcmovbe
cmp
shlb
jb
in
xchg
stc
lcall
fld
push
xchg
dec
andb
sbb
cmp
adc
jae
inc
pop
xchg
jb
dec
dec
notb
movl
mov
mov
and
jns
stos
jecxz
scas
into
fadds
daa
int
ret
mov
jbe
and
ja
mov
sub
mov
mov
cmp
mov
test
xchg
popf
or
daa
lds
shlb
aas
das
pop
jns
loop
xchg
cmpsb
add
dec
cmp
test
jbe
pop
movsb
jle
pushf
notl
jecxz
js
mov
lcall
sahf
scas
add
sub
rclb
push
and
jg
xchg
xor
loope
sbb
sbb
cmp
dec
push
adc
sub
adc
sub
lods
push
jecxz
mov
xor
push
cmp
sbb
std
dec
aas
push
sahf
aas
insl
in
pop
mov
or
enter
add
movsb
inc
sub
jg
fcoms
cmc
bound
iret
dec
fcoms
lahf
mov
in
out
dec
or
pop
iret
out
repnz
sbb
lret
mov
stos
mov
dec
ja
int3
es
mov
cld
add
loopne
or
sbbl
loope
or
cli
sbb
loope
cld
pop
out
push
lahf
add
scas
xchg
jecxz
cmpsl
movsb
sbb
clc
call
or
cmpsl
mov
je
daa
aam
push
jbe
mov
push
mov
daa
jmp
cmp
out
cmp
imul
adc
push
and
mov
inc
arpl
les
notl
mov
lds
fbstp
pop
push
mov
test
mov
stos
push
mov
xchg
popa
adc
cmp
rclb
cmp
cmp
mov
push
lods
popa
insl
sub
cld
sbb
mov
cmp
cmp
ret
cld
push
xorl
pop
inc
aaa
rep
mov
test
push
xor
dec
inc
jl,pn
popa
sbb
xor
inc
cld
jle
andl
lahf
jle
push
or
test
in
fwait
push
jbe
shr
rorb
jno
mov
inc
jbe
mov
jge
mov
lock
shll
int
jmp
imul
push
jl
mov
sbbl
scas
and
cmp
add
xchg
inc
push
mov
mov
aad
stos
sbb
sbb
stc
mov
ror
inc
cmp
pop
xchg
and
stos
ja
cmpsl
das
sbb
sub
mov
int3
fisubl
popa
mov
fs
or
pushf
jg
and
xchg
loop
js
les
stos
in
andl
lret
mov
mov
dec
mov
rcll
xor
and
xor
out
fsubrs
xlat
pop
xchg
mov
push
cmp
push
ja
fs
sbb
add
popf
dec
sub
push
cltd
fld1
mov
add
insl
or
addr16
pop
lcall
ffree
aad
cli
cmc
xor
aas
out
or
pushf
out
push
inc
int
push
enter
push
or
push
mov
leave
inc
incb
lea
mov
xorl
retw
mov
iret
dec
loope,pn
cmp
cmpl
cmp
ds
jne
mov
sbb
ret
hlt
lret
sarl
cwtl
pop
stos
ret
mov
lahf
xchg
sarb
xor
call
jbe
xchg
mov
jo
scas
sarb
pop
adc
out
jo
insl
mov
mov
sbb
out
mov
and
leave
sbb
popa
inc
or
roll
rclb
xchg
orl
add
orl
sbb
mov
fs
std
fists
adc
fwait
xchg
cli
pop
xchg
shlb
mov
add
inc
dec
push
ljmp
or
aam
sub
adc
daa
sub
jb
popf
orb
push
mov
rolb
repnz
sub
xor
popf
setae
mov
xchg
pushf
repnz
jmp
std
xor
ret
mov
pop
dec
out
addr16
cmp
or
xchg
fldenv
ficomps
decb
mov
or
push
mov
sbb
mov
enter
sub
inc
aam
inc
out
push
data16
addr16
lock
fwait
insb
jae
and
jmp
xchg
shrb
sti
cmp
push
out
and
or
popaw
mov
mov
mov
mov
dec
cmp
jmp
sbb
test
push
movsl
mov
adcb
mov
aam
jbe
sub
sub
popa
subb
out
mov
and
sahf
jb
stos
jo
out
in
pop
xor
repz
loopne
int3
test
stc
lods
mov
jecxz
lret
xor
imul
js
adc
xchg
scas
xor
sub
and
inc
dec
test
pop
pop
stc
pop
popa
int3
aas
pop
lods
scas
inc
aam
repz
inc
cmp
jmp
dec
dec
push
mov
test
cmp
or
jecxz
jp
sbb
in
push
dec
enter
pop
or
stc
lds
in
imul
call
stos
popf
mov
mov
mov
xor
lods
push
and
inc
sbbl
xchg
dec
fnstenv
pop
in
fistl
in
xchg
push
push
mov
outsl
ja
mov
or
mov
mov
stos
adc
sub
mov
push
add
mov
hlt
data16
sbb
mov
inc
in
loope
add
xchg
jmp
imul
and
xchg
dec
cmp
pop
sub
and
jae
loopne
pop
push
ja
int3
lret
std
ds
iret
pop
xorb
xor
shll
movsl
mov
xor
call
int
jbe
in
jp
iret
pop
push
xor
popa
lcall
sbb
hlt
test
xchg
scas
sbb
repnz
imul
push
dec
xlat
sbb
jmp
cmp
lret
roll
js
or
insl
pop
xlat
sub
jno
mov
dec
jnp
mov
fisttps
fsubp
dec
mov
fsubrl
and
adc
push
mov
pop
aam
pop
movsl
pop
xlat
test
xchg
add
dec
push
jg
xchg
push
sti
cmpsb
push
inc
sti
add
adc
or
mov
xchg
imul
test
dec
xor
sti
out
mov
icebp
jg
push
call
sti
std
mov
rorb
cwtl
pop
mov
sbb
out
mov
dec
aam
and
jmp
pop
ret
movsb
fnsave
repnz
and
cmpsb
aam
lret
jne
dec
mov
mov
or
pop
cmp
subl
test
aaa
jge
mov
negl
stos
xor
jno
fistps
inc
ret
push
and
inc
adcb
dec
sbb
scas
cwtl
pop
shll
or
mov
sbb
addr16
cmp
mov
inc
mov
je
sub
es
add
mov
sahf
and
or
sbb
das
aad
test
in
adc
out
js
scas
and
push
push
enter
lret
sub
sbb
xchg
dec
add
cmc
ljmp
push
in
ja
shr
mov
sbb
data16
les
pushf
xor
sarb
xchg
pop
out
jo
notb
pop
loope
lret
adc
add
fidivrs
pop
fcmove
pop
jp
aas
cmp
call
popl
bound
test
in
test
jmp
dec
lock
jmp
frstor
xor
pop
lahf
push
lods
ja
int3
push
jo
fbld
or
pop
jb
push
pop
jae
sahf
cmp
push
movsb
into
lret
mov
cmp
sub
mov
popf
enter
ss
pop
insl
test
fadd
push
outsl
push
pop
mov
popf
jns
or
cwtl
data16
inc
jno
jge
fdivl
mov
or
sub
test
sti
jmp
lods
mov
movsl
sti
and
push
faddl
data16
cltd
jbe
sbb
pop
movsb
orb
xor
push
xor
sbb
cmp
aas
jge
cld
and
adc
fisttpll
xchg
xlat
fnsave
outsb
jno
xchg
into
ficoml
mov
in
jmp
leave
sub
mov
add
mov
dec
xor
sub
repnz
hlt
and
xor
jae
jnp
dec
inc
movsb
pop
fisttpll
xor
xor
add
and
sub
ljmp
negb
cmp
jo
or
xchg
cmpsl
and
aad
or
dec
mov
xchg
dec
imul
in
mov
mov
jno
fldcw
sbb
ds
push
mov
inc
jb
aam
dec
inc
fisttps
push
mov
inc
aaa
mov
roll
jmp
lods
pusha
inc
and
aam
pop
loope
mov
xchg
inc
adc
and
add
scas
inc
jge
cmp
hlt
fisttpl
cmp
cltd
js
mov
les
dec
mov
arpl
cmpsl
jae
sbb
jnp
and
stc
mov
jge
negb
leave
mov
outsb
push
out
mov
xor
xorb
test
outsl
adc
cmpsl
pop
adc
sub
push
push
mov
test
outsb
cmpsb
jno
xor
push
cmp
cmpsb
sub
push
rdmsr
mov
pop
dec
fimuls
add
je
shll
jae
lea
jl
cmp
out
lds
in
leave
fstp
add
ret
movl
enter
sub
mov
scas
int3
insl
lret
lods
push
sbbb
mov
cli
inc
daa
popf
shl
ret
testb
mov
iret
pop
lret
xchg
sbb
test
lcall
sub
jae
pop
pushf
jmp
mov
mov
and
push
rcll
fidivrs
ja
or
clc
inc
aam
mul
jae
or
loop
popf
cmp
dec
mov
inc
push
adc
ja
or
bound
push
sarb
push
pop
pushf
pop
add
xchg
or
int
repz
arpl
xchg
pop
sub
insl
mov
lahf
seto
test
jae
in
mov
pushl
out
data16
or
jl
rcrb
xor
lcall
decl
lret
pop
repz
js
mov
aas
test
sti
decb
push
mov
mov
bextr
loope
dec
js
cltd
push
cltd
mov
xchg
or
outsb
cmc
xchg
xchg
daa
mov
pop
shll
rcrb
mov
insl
push
out
mov
dec
mov
sub
enter
fists
add
xor
jmp
pop
jae
jbe
xor
add
xchg
test
pusha
sahf
adc
ret
xchg
test
inc
xlat
mov
pop
adc
ja
test
jl
lret
mov
aad
lods
mov
adc
or
aam
cld
lods
nop
mov
je
pop
and
lret
push
xor
enter
dec
je
call
xchg
mov
cmp
sbb
subl
pop
std
adc
cmp
xor
in
repz
dec
xor
insb
je
add
cwtl
sbb
pop
stos
inc
adc
xor
dec
or
andl
fstpt
cwtl
dec
mov
stc
divl
aaa
jle
pop
push
cs
push
sbb
insl
jmp
xor
xchg
inc
or
pop
pushf
inc
xor
out
add
aad
es
adcb
and
int3
cli
jl
push
adc
sub
jne
movsl
in
cmp
push
mov
and
leave
cmpl
xchg
aas
repnz
or
sarb
jo
adc
lret
in
icebp
lods
cld
stos
movsl
les
adc
outsl
jl,pn
adc
repnz
ret
inc
std
mov
movsb
dec
xor
out
repz
shll
leave
and
jmp
shlb
jnp
cwtl
ja
jb
pop
xor
dec
repnz
xorl
jecxz
leave
mov
arpl
lea
add
fsubrl
jnp
inc
lret
add
cmp
ss
in
mov
out
or
cmp
push
arpl
cltd
gs
outsl
cmp
call
imul
sbb
mov
shrl
aas
dec
mov
adc
hlt
fcoms
sbb
jle
outsb
adc
jb
in
jo
jle
push
jmp
sarb
mov
into
jne
fucomp
sub
push
mov
outsb
std
int3
xor
xchg
leave
pop
jmp
sbb
fwait
xor
std
adc
rorb
jb
add
pop
outsl
sub
testb
bound
add
xor
ret
cmp
lea
pop
outsl
fadds
pop
cmp
mov
stos
gs
mov
fisubs
in
aaa
rcrb
imull
jp
mov
lods
push
or
cmpb
sbb
mov
movsl
pop
or
mov
mov
or
cltd
inc
jge
icebp
xchg
data16
scas
std
gs
arpl
add
push
xchg
jmp
dec
adcb
dec
shr
test
cmpsl
or
sub
push
loop
fs
shll
pop
lods
ja
push
scas
mov
jl
adc
and
xor
in
sbb
lahf
in
and
xor
push
idivb
ja
and
xor
stc
add
push
test
mov
ret
xchg
xor
cmc
jbe
and
jae
cs
fwait
and
mov
aam
xchg
lcall
jle
lods
xor
mov
test
in
in
scas
out
in
ljmp
jnp
xor
aad
out
mov
call
push
shl
sbb
mov
push
out
xor
mov
fldl
mov
cltd
jl
sbb
inc
xchg
aas
stos
gs
out
sub
jmp
or
rol
repz
cmc
jecxz
lds
xchg
or
es
xor
jge
cld
repz
fcomip
int
int
test
inc
push
sub
jb
stos
mov
test
ret
push
mov
scas
pop
lea
adc
enter
push
adc
cmp
je
adc
and
xor
scas
insb
or
mov
sub
popf
mov
hlt
sub
mov
jmp
sub
clc
inc
jno
or
and
push
daa
and
jo
xchg
shll
clc
mov
aam
cwtl
mov
and
and
jmp
pop
inc
mov
imul
popa
sahf
xchg
sbb
pop
ret
xor
cmp
dec
jle
xchg
adc
jmp
aas
leave
out
jecxz
mov
mov
pop
and
push
xlat
fwait
push
adc
out
xchg
add
fistl
cmp
cld
lods
sbb
rorl
push
pop
fs
mov
mov
scas
mov
push
mov
inc
lret
or
aad
cltd
cwtl
jbe
and
cmp
scas
pop
mov
xchg
test
cmpsl
pop
stc
clc
repz
xchg
call
sub
adc
ret
test
push
jle
xchg
out
imulb
and
add
call
cmpsb
push
adc
and
inc
xchg
outsb
gs
sbb
cmp
loopne
xlat
and
sub
push
sub
int3
jp
leave
in
and
xchg
mov
stos
push
mov
cli
jns
lods
cwtl
jle
mov
sub
int3
lods
jle
mov
outsb
add
mov
jns
std
repnz
push
movl
loope
cmpsb
sti
arpl
mov
div
fidivl
add
das
mov
pop
test
dec
iret
stos
outsl
lret
scas
nop
jmp
and
and
cmp
push
in
push
bswap
dec
xor
orl
out
inc
in
pop
xor
repz
loope
cmp
inc
std
jo
lea
adc
mov
imul
inc
in
pop
popf
negb
adc
cmp
fwait
add
xor
cmp
mov
mov
insb
mov
push
or
shrl
sbb
daa
cmp
jl
xor
ficomps
sub
addr16
or
jg
das
push
cmp
lods
or
pop
or
xchg
cmp
ljmp
and
test
dec
in
sub
enter
cli
lcall
lods
test
lret
mov
aad
or
mov
movsl
add
and
cmpl
pop
jg
cmc
test
js
data16
leave
and
push
data16
jo
insb
iret
divb
nop
mov
mov
repnz
sbb
aam
adc
in
jo
jns
push
sub
paddq
cltd
fisubs
mov
sub
mov
repz
arpl
jecxz
out
sbb
rol
mov
dec
shl
movsb
in
push
ja
rorb
mov
int3
xchg
loop
hlt
mov
ja
inc
and
and
push
nop
or
ds
inc
in
xchg
mov
rolb
dec
lock
insb
mov
cmc
mov
mov
in
into
jmp
push
sbb
push
xchg
mov
in
sti
out
sbb
mov
jae
mov
shrl
outsb
rolb
dec
outsb
dec
jnp
or
mov
adc
fucom
cmp
arpl
mov
das
sub
mov
inc
es
rorb
xchg
movsb
cltd
sub
or
lock
jne
sub
aas
out
inc
sbb
in
mov
jl,pt
movlps
icebp
sbb
dec
xchg
sub
mov
dec
xchg
popa
xor
or
test
and
popa
ss
xor
ljmp
in
in
push
sub
addb
jnp
pop
stos
shrb
imul
ds
ds
call
incl
rol
addr16
cmp
and
rdmsr
or
scas
jge
out
lcall
sbb
jnp
sbb
sbb
add
dec
cmpsb
fistps
cltd
jle
add
adc
popa
and
dec
and
out
out
mov
xchg
adc
movl
add
xchg
xor
test
lret
test
je
fs
jg
adc
stos
movsb
cmp
add
fisttpll
cmpsl
insl
pop
cmpsl
pop
pushf
in
cmp
fincstp
xchg
sub
push
mov
rorb
jl
jp
xor
push
mov
test
stc
sbb
pop
movsb
sbb
pushf
loop
xchg
jl
pusha
jl
out
add
out
push
fiaddl
pop
add
and
or
xor
ljmp
cmp
sbb
push
mov
adc
enter
loopne
dec
dec
inc
inc
adc
mov
out
sbb
push
testl
rcl
test
sbb
mov
je
pop
push
in
dec
test
popf
mov
movsl
xor
test
addr16
aam
push
loope
lret
mov
xor
into
pop
mov
lret
and
adc
or
xor
pop
mov
ret
shlb
mov
and
and
sti
fistps
adc
jae
jne
mov
shlb
iret
and
dec
std
mov
inc
and
repnz
call
shrb
push
cmp
inc
popa
adc
outsb
lds
or
xor
xor
mov
clc
popf
mov
inc
std
jno
mov
ficomps
or
cltd
orl
cs
jp
sbb
stc
lcall
jae
and
int
addb
mov
cmp
out
int3
ret
push
clc
aas
clc
iret
push
inc
das
xor
mov
cli
filds
in
xorb
pop
xor
sub
sbb
push
xor
mov
stos
push
lahf
xor
repz
mov
dec
pop
test
sbb
inc
jo
or
ljmp
or
jo
sbb
mov
out
push
mov
push
iret
push
andl
xchg
cltd
ljmp
clc
mov
leave
jbe
sahf
inc
aam
and
stc
pop
adc
sub
sub
pop
fstpl
dec
jle
adc
sti
pop
and
call
loope
xor
enter
and
push
mov
lods
xchg
ds
lods
mov
jne
scas
inc
cld
in
call
out
xchg
or
inc
test
mov
je
inc
sub
push
inc
pop
int
cmp
inc
jb
adc
pop
ljmp
inc
movsl
xchg
incl
push
mov
dec
cmp
xchg
gs
add
or
andl
sbb
lods
pop
mov
mov
sbb
cmp
cmc
mov
add
xchg
mov
rcl
mov
push
cmp
push
add
repz
jns
sub
jl
mov
aas
fnsave
sub
lret
sti
jae
cli
sbb
imul
sbb
ficoms
push
rorb
cs
sub
push
mov
sub
inc
dec
stc
ret
sbb
aad
fisttps
rcll
cmpb
xchg
pushf
cmovg
sub
incl
stos
pusha
fmull
out
add
mov
xor
loope
push
mov
lock
jno
outsl
xchg
or
addl
pusha
cmp
pushf
sarb
mov
pop
aad
adc
sub
loope
leave
lods
je
push
lret
adc
mov
adc
push
sub
lods
cld
mov
cmp
mov
pop
pop
int3
xchg
std
mov
xor
pop
add
sti
dec
mov
test
scas
addb
data16
mov
mov
pop
inc
push
lods
ret
rcll
loop
shrl
shl
mov
cmpsl
xor
mov
ja
push
int3
rcrl
mov
popf
sub
sbb
xlat
push
and
push
push
xchg
adc
movsl
sbb
lock
lock
jo
jl
lcall
mov
push
outsb
ss
lds
fcompl
dec
int3
into
mov
xchg
in
cmp
lds
pushf
fistl
enter
cli
repz
iret
fwait
dec
sar
jmp
in
adc
inc
add
scas
jb
pop
adc
nop
mov
push
push
rolb
ljmp
inc
bound
int
mov
loop
mov
inc
dec
and
mov
subb
loope
imul
pop
pop
insb
lods
pop
cmp
mov
adc
sbb
push
sbb
and
out
out
loopne
inc
ja
inc
stos
rclb
sti
in
cmpsb
repz
cmp
mov
push
stos
cld
mov
loopne
shll
xchg
hlt
rol
xlat
jb
push
in
and
popa
or
fdivr
dec
loopne
dec
fsubrl
push
mov
stos
insl
xchg
dec
or
data16
and
es
mov
test
shrl
adc
add
sbb
mov
daa
cmp
add
xor
mov
jne
push
sbb
and
jmp
rol
mov
push
and
lods
jg
jg
dec
sbb
jno
lds
push
mov
push
or
mov
sbb
in
cltd
fwait
loopne
push
add
in
cwtl
testb
aam
inc
loopne
push
incl
test
jmp
das
lods
mov
mov
negb
out
test
push
cmpsb
addr16
shlb
pop
out
sbb
xchg
mov
outsl
mov
mov
mov
frstor
pop
daa
pop
jl
repz
adc
lock
push
mov
and
bound
push
leave
jae
shrl
pushf
divl
bound
iret
dec
sub
int3
jle
arpl
rolb
fdivl
inc
adc
das
cmpsl
dec
fnstcw
xor
sub
mov
mov
adc
sbb
fcomps
or
cmp
adc
mov
add
pushl
test
mov
sbb
sbbb
add
lock
push
dec
xlat
stos
jns
shr
fcoml
sbb
mov
mov
icebp
call
push
sub
mov
add
or
sbb
loopne
in
xchg
loopne
inc
int3
push
pop
or
adc
movsb
push
popa
sahf
rcrb
inc
pop
flds
fs
rcrl
movaps
mov
xchg
orl
sarb
out
pop
inc
shll
nop
rcr
sahf
int3
adc
invd
icebp
xor
push
out
outsb
imul
push
sbb
cmpsl
pop
mov
bound
sbb
push
insl
testl
stc
fnsave
pop
mov
out
mov
dec
push
pop
aam
out
fidivs
mov
adc
rorb
rorl
into
jmp
inc
mov
jmp
hlt
fistpl
ja
loop
xchg
mov
push
jno
pop
inc
xrelease
jp
lods
dec
push
pop
setns
aad
push
mov
sbb
pop
loop
outsb
sbb
pmaxsw
rcl
insb
psrlq
mov
mov
push
adc
and
jne
mov
movsl
ds
xchg
sti
xchg
or
inc
rcrb
mov
push
adc
add
cmp
push
shll
xchg
scas
add
popf
psubw
lods
and
aaa
jl
fsts
sub
sbb
inc
pusha
xor
push
dec
xor
sbbb
sarl
out
aaa
mov
mov
xchg
add
test
add
inc
les
mov
mov
mov
mov
jmp
xchg
out
lahf
adc
mov
in
cmp
or
insb
je
inc
enter
push
jnp
bswap
inc
pop
mov
lds
ds
pop
bnd
mov
sub
mov
aad
aas
inc
mov
aad
jne
jge
adc
jp
cmp
mov
pop
lret
stos
aaa
dec
popa
push
mov
adcl
int
iret
push
mov
fld1
mov
lods
movsb
inc
jno
sub
xchg
insb
lret
or
loop
mov
mov
lods
stos
lret
sub
pop
mov
fucomi
adc
in
inc
mov
mov
sbb
stos
stos
jmp
cmp
jne
aas
inc
sub
push
lahf
lahf
hlt
lds
sbb
gs
inc
dec
lods
jnp
sbb
sbbb
mov
das
sahf
and
jns
mov
mov
push
popf
cmp
in
mov
je
xchg
ss
aaa
xor
mov
imul
sbb
add
enter
cmp
ret
int3
jge
js
jno
inc
push
fistpl
add
sub
mov
pop
movsb
js
icebp
cmpsb
lret
sahf
sbb
and
inc
aad
push
es
push
in
mov
or
cmpsb
add
cli
and
mov
popf
mov
push
in
push
mov
fldenv
ss
dec
aaa
push
jbe
add
lret
sub
lahf
mov
and
add
add
sti
test
push
sub
push
sti
cmp
push
cwtl
in
mov
rcr
outsb
cmp
pop
or
push
mov
mov
jb
pop
adc
xchg
inc
dec
and
cmp
or
rcrb
add
inc
jo
sahf
bound
ret
push
out
lret
xlat
mov
mulb
inc
bound
into
mov
cli
push
in
nop
mov
or
jg
shld
pop
or
add
adc
jl
aaa
popa
push
cmp
in
jl
cmp
xor
sbb
and
jno
sub
xchg
or
add
lds
or
dec
cmp
cmc
mov
imul
push
mov
enter
sub
pop
mov
dec
and
and
xor
dec
divl
into
out
addr16
fsubrl
bound
rcrl
sbb
lods
mov
inc
out
loop
jae
ret
push
bound
ja
mov
push
mov
adc
lret
in
jbe
les
adc
aam
add
call
pusha
push
add
push
cmpsl
ds
shl
push
cmp
jecxz
push
jb
xchg
scas
xor
push
push
cmp
dec
das
in
movsb
aaa
stos
lret
or
push
addr16
or
cld
mov
pop
push
or
pop
lods
mov
clc
xchg
fucomip
lds
and
sti
sub
jge
testb
jmp
sub
lock
out
or
and
inc
cmpsb
iret
rorl
jns
dec
loop
test
sbb
mov
dec
mov
push
arpl
jne
lds
jnp
push
out
mov
mov
subl
lcall
sar
xchg
inc
jno
repnz
insl
xchg
push
inc
stc
popa
subb
push
loope
dec
fwait
cmc
ljmp
hlt
push
jne
push
and
and
ret
jmp
les
incb
ret
mov
dec
sbb
inc
shrl
cmp
mov
outsl
shll
repz
andb
das
sbb
imul
xorl
imul
sub
lahf
hlt
add
dec
xor
push
das
mov
cmp
and
sub
xor
fstpt
jb
xlat
hlt
xlat
pop
rclb
test
sub
jge
ss
mov
movl
inc
jmp
adcl
ja
lahf
mov
shr
mov
fwait
xchg
into
out
xchg
xor
mov
mov
pop
in
fwait
jp
jl
in
or
jns
movsl
mov
sbb
divl
lock
mov
pop
das
and
jne
jne
and
pop
mov
jg
inc
test
inc
pop
mov
jb
inc
pop
ret
lds
mov
adc
push
insl
ja
icebp
notl
insl
jecxz
scas
mov
daa
ss
lret
aam
mov
mov
push
cli
pop
sub
xlat
mov
outsb
xchg
leave
test
or
mov
dec
movsb
vfnmaddsd
mov
fwait
cwtl
out
add
xchg
inc
adc
pop
xlat
shrl
xchg
sbb
xor
inc
rclb
arpl
add
pop
sbb
cli
ror
mov
ret
icebp
xor
mov
cwtl
into
adc
xchg
jmp
mov
shll
xlat
idivl
dec
movsl
xchg
in
scas
fiadds
repnz
jl
mov
loope
ret
in
cli
neg
cmp
ret
push
loop
mov
cmpsb
sub
or
iret
lahf
sub
test
ja
jg
mov
cwtl
add
ret
stos
mov
stos
pusha
inc
mov
push
jge
std
mov
dec
mov
inc
pop
cmp
ss
insb
fnstenv
ror
and
insl
loopne
jp
ds
push
fcmovb
imul
mov
cmp
js
cmp
ret
or
insb
or
sub
push
xchg
outsb
mul
popf
sti
mov
inc
enter
in
cmp
in
mov
mov
or
sbb
pop
fidivrs
inc
rol
pushf
incl
mov
outsl
sbbb
dec
incb
cwtl
sbb
and
clc
scas
mov
push
loope
movsb
and
fcmovne
pusha
movd
mov
cmp
les
negl
jno
nop
rorb
xchg
fisttpl
nop
mov
or
push
negl
push
push
aas
push
aam
sbb
arpl
mov
jmp
push
gs
stos
cld
out
sub
cmp
andb
mov
sahf
rclb
jg
dec
int
pop
adc
icebp
fnsave
icebp
xor
jg
std
push
mov
addr16
cwtl
jb
pop
mov
push
fbld
pusha
test
xor
andl
xor
inc
mov
int3
fdivr
orb
aaa
stc
bound
pusha
movsl
daa
add
sarb
jbe
xchg
sbb
aam
filds
inc
pop
jg
std
fstpt
out
mov
hlt
and
mov
cmc
mov
arpl
pop
std
jmp
in
stos
mov
call
out
jns
lahf
lret
mov
mov
rcll
daa
fdivrs
hlt
mov
addr16
inc
mov
clc
add
insb
in
xlat
xor
rorb
mov
adc
leave
cmpsl
xchg
ja
cmpsl
mov
jo
not
add
into
std
mov
xchg
mov
jae
mov
sub
sbb
dec
repnz
pop
lret
sahf
imul
mov
test
outsb
jecxz
adc
loopne
cmp
jl
in
push
adcb
test
mov
cmp
popf
lret
lds
mov
stc
cmpsl
outsl
pop
sbb
inc
and
cmp
push
jbe
pop
sbb
adc
push
out
fbstp
hlt
cli
lcall
lret
xor
mov
xchg
mov
adc
lahf
or
aas
xor
sub
call
fcoml
popa
mov
mov
addr16
mov
fnstsw
dec
mov
ret
in
xchg
cmp
je
pop
dec
aad
adc
fidivrs
cld
inc
sub
test
aas
mov
in
and
lahf
mov
sbb
dec
fbstp
fcoml
movsb
lret
stc
mov
mov
and
in
and
or
js
push
pop
push
sbb
inc
inc
stos
movsb
inc
xor
int3
push
cmpsl
pushf
das
jns
fs
cmp
xchg
xor
xchg
push
push
lods
fidivrl
mov
inc
fcmovnbe
mov
fbstp
inc
inc
repnz
ja
insl
cltd
adc
or
add
pop
mov
f2xm1
xchg
pushf
adc
loop
or
dec
jnp
pusha
hlt
mov
out
xchg
ficoml
fists
or
outsl
mov
out
outsl
gs
in
add
icebp
push
cmp
pop
popa
mov
adc
push
popa
cmp
mov
roll
ds
push
xor
pusha
push
lahf
outsb
dec
dec
outsl
jge
cmp
cmp
push
test
mov
outsl
test
test
jmp
pop
aaa
scas
mov
jmp
adc
inc
mov
div
js
inc
inc
lock
cltd
cld
xor
inc
push
jge
mov
add
icebp
mov
and
cwtl
xor
or
sub
imul
and
add
xchg
adc
jbe
imul
add
adc
aas
scas
cmp
xchg
mov
push
outsl
shll
pop
sbbb
fistpll
mov
push
inc
mov
adc
into
je
add
icebp
push
xchg
orl
adc
out
sbb
sub
shl
outsb
scas
es
lods
dec
inc
loop
push
dec
cld
pop
nop
pusha
lea
std
ja
loope
in
push
in
lret
les
gs
imulb
cs
std
mov
mov
add
mov
and
xor
inc
sar
je
sbb
lods
pop
mov
inc
push
mov
popf
and
push
sti
call
js
out
jp
sub
xchg
xchg
sbb
stc
jmp
lahf
in
or
out
push
aad
cs
adc
int3
fcomps
js
pop
pop
xchg
nop
push
xchg
pop
stc
insb
add
or
negl
inc
jns
lods
int
mov
push
mov
lds
xchg
out
xor
sub
add
int
push
adc
cli
xchg
cmp
mov
and
into
cld
or
mov
cmpsl
jno
andb
xchg
data16
xchg
in
or
test
jae
add
lret
pop
jo
es
je
imul
inc
sub
pop
je
push
jp
push
push
rorb
mov
push
sbb
repz
dec
pushf
inc
cmc
and
xchg
sbb
ja
addl
aad
mov
flds
inc
pop
sub
je
dec
sub
pushf
ret
pop
daa
xor
sub
push
mov
out
movsb
or
cmp
je
rcrb
pop
ja
xlat
out
shl
fs
mov
js
shlb
enter
add
es
mov
xchg
in
fwait
and
and
inc
lds
shl
mov
xchg
mov
push
inc
int3
loope
mov
sub
pop
inc
gs
cli
loopne
insb
inc
jp
mov
sbb
push
sar
push
add
imul
inc
pop
cmp
push
les
ja
push
mov
xchg
inc
mov
fldcw
stc
sub
xor
std
ljmp
test
ds
push
and
jmp
movsl
cmp
sbb
jnp
fdivp
cmpsb
int
fildll
mov
pop
push
outsl
jmp
fidivl
mov
mov
mov
add
mov
push
and
jle
loopne
inc
pop
das
pop
jmp
dec
lret
cmp
sbb
cmpsl
int
adc
cld
add
push
jno
add
std
test
imul
jbe
sub
repz
xchg
repz
in
dec
pop
mov
addl
xchg
xchg
push
push
es
jae
mov
pop
cli
dec
push
ds
subl
or
out
pop
das
pop
loope
mov
in
cwtl
jae
sub
dec
bound
mov
rorb
push
enter
cwtl
push
aaa
dec
es
clc
mov
or
iret
movsl
mov
fcmovnu
out
and
movsb
dec
mov
push
fsubl
mov
fsubs
ds
sub
push
mov
popa
call
pop
shll
dec
dec
imul
mov
out
adc
sub
jl
jg
aas
jle
imul
xor
test
and
adc
mov
xlat
mov
testb
ljmp
dec
sub
mov
loopne
jbe
or
jb
jmp
ret
xchg
cmpsb
sarb
lods
into
enter
aad
jmp
mov
mov
mov
mov
mov
pop
dec
adc
movsb
fisubrs
sub
sbb
push
dec
inc
mov
mov
movsb
jmp
dec
mov
or
push
cmp
jmp
sub
cmp
adc
fs
or
fidivl
xchg
in
nop
mov
add
xor
inc
inc
xchg
and
mov
call
adc
arpl
fisubrs
jns
ret
mov
push
out
dec
jmp
push
cmp
and
jle
push
adc
icebp
leave
mov
mov
popf
out
ljmp
insb
adc
test
mov
lods
jmp
mov
shll
dec
leave
popa
out
stos
imul
sub
dec
mov
xchg
adc
aaa
mov
imul
cwtl
imul
add
xchg
and
insl
cmp
clc
mov
lea
loop
sub
fcoms
mov
pop
incl
movsl
mov
pop
adc
push
pop
mov
stc
dec
int
andl
xchg
push
push
out
mov
in
fsubs
stc
push
rolb
ror
adc
je
sbb
and
xor
out
in
mov
adc
imul
dec
sub
or
lret
js
mov
es
ss
popa
fbld
arpl
cld
pop
ret
push
and
out
push
js
xlat
mov
xor
jne
push
popf
dec
or
xchg
adcl
dec
test
pop
dec
push
scas
call
subb
out
mov
add
sub
add
ljmp
fiadds
lea
movsl
inc
sbb
or
push
das
movsb
xchg
cmc
lock
mov
das
adc
imul
dec
out
dec
push
sbb
jo
xor
cmc
mov
mov
int3
pop
sub
dec
pop
mov
stc
loope
mov
jle
push
jno
frstor
adc
adc
mov
test
pop
add
pop
lret
in
sbb
shll
adc
aam
dec
xor
popl
push
cmp
xchg
pop
or
pop
jmp
mov
call
test
mov
add
adc
cmp
sbbb
fnsave
std
dec
lahf
test
sete
cmp
push
xor
mov
mov
lds
and
inc
in
shl
cmp
sbb
push
jl
clc
jnp
fs
int3
arpl
shld
cmp
adc
mov
push
ja
shll
jb
xorl
loopne
pop
mov
add
mov
adc
fdivrs
les
bound
mov
lret
adc
mov
insb
jae
fildl
pop
bound
adc
ljmp
cmp
lea
vminps
aaa
mov
pop
cli
faddl
pop
das
add
push
fsubp
ja
xchg
mov
bound
scas
mov
add
xchg
xchg
sbb
add
mov
lea
std
loop
loop
imul
aad
or
mov
push
mov
shll
mov
push
movsl
arpl
call
sbb
js
dec
xchg
mov
aam
shll
ljmp
mov
dec
ds
pop
fwait
xchg
jnp
and
pop
push
mov
repnz
fmulp
lcall
cmp
lods
adc
pop
stc
xchg
lret
mov
mov
xchg
xchg
cmp
bound
or
mov
adc
mov
xor
fidivrl
add
dec
jecxz
and
add
adc
inc
adc
lea
xor
xchg
cmp
insl
add
cmc
mov
cmc
out
ja
out
inc
popf
xchg
jl
jecxz
int
xor
and
pop
and
sub
xchg
leave
mov
bound
aas
jle
mov
test
lahf
sbb
xor
jmp
aaa
sbb
fwait
movb
push
mov
sbb
mov
out
mov
cmc
je
lods
movsb
lea
push
dec
or
aad
imul
popa
pop
hlt
scas
inc
push
out
xchg
xchg
ret
mov
rcll
hlt
ds
mov
and
int
pop
jg
test
sub
test
aas
data16
xchg
jbe
pop
mov
rol
mov
mov
and
cmc
cld
mov
sbb
jo
adc
out
mov
pop
cwtl
sahf
movsb
enter
test
js
lret
movsl
lret
pop
dec
in
cmpb
repz
lock
fcmovb
je
in
pop
es
push
ljmp
pop
xor
lds
adc
xchg
sbbl
loop
push
insl
fnstsw
push
call
inc
push
and
ficompl
jge
jp
mov
pop
sbb
movsl
mov
scas
js,pt
pop
or
mov
mov
jne
or
imulb
xor
loopne
mov
xchg
mov
js
cmp
fisubrl
mov
xor
imul
scas
out
mov
push
fsubs
stos
das
sbb
jmp
pop
add
loopne
adc
jp
adcl
xchg
loopne
pushf
and
push
push
cld
divl
jecxz
fimull
ficomps
or
push
faddp
das
loopne
outsb
jp
sbb
in
sbb
xor
adc
ret
test
jp
pop
xchg
mov
xchg
in
dec
fucom
daa
dec
gs
adcl
dec
fsin
insb
insl
lahf
or
sub
xchg
test
inc
push
cmpsb
jbe
push
jae
arpl
pop
inc
adc
jp
subl
pop
mov
pop
push
stc
jae
dec
je
addb
mov
sub
xor
das
imul
sbb
pop
mov
and
ret
sbb
mov
or
es
pushl
mov
sub
adc
mov
insb
dec
mov
add
call
xchg
pop
xchg
test
jmp
add
mov
xor
jb
add
lret
stos
imul
je
push
ljmp
add
insl
sub
mov
mov
push
cmp
imull
jae
adc
movsl
cmp
insb
pop
dec
aad
test
lret
xchg
mov
dec
add
mov
in
xchg
mov
fidivrs
pop
push
insl
add
pop
vmread
pop
pop
pop
adc
adc
jp
in
mov
cmpsl
mov
xor
mov
mov
mov
xor
lods
test
mov
repz
in
icebp
jle
outsb
sarl
xchg
mov
insb
dec
cs
pop
xchg
push
pop
push
rorl
xchg
or
xor
cmc
push
leave
and
pop
ficoms
sub
lea
dec
inc
loope
scas
lods
shll
loop
lds
pushf
add
or
xchg
add
cwtl
mov
inc
test
fnstcw
inc
adc
mov
adc
xchg
das
dec
xchg
add
dec
or
cmp
pop
sub
xlat
popf
dec
cmp
mov
je
mov
scas
or
pop
add
test
ja
mov
mov
roll
lds
xchg
cmpsb
je
sub
stc
sbb
subb
and
nop
nop
aam
or
shll
pop
mov
lds
inc
andb
pop
xchg
sbb
mov
cmpsb
mov
add
inc
int3
lret
enter
mov
jnp
imul
sub
loop,pt
pop
cmc
cmp
es
xchg
or
xlat
leave
jp
pop
and
bound
xor
shrl
out
mov
arpl
add
pop
call
outsl
dec
jge
sbb
cmp
call
lods
aad
mov
sbb
iret
mov
fsts
inc
scas
int
lods
notl
mov
fldenv
mov
pop
jnp
jmp
mov
fcomps
xchg
jo
mov
push
push
adc
jecxz
sti
sbb
or
daa
cmc
sub
pop
pop
push
loope
aaa
mov
dec
fiaddl
or
pop
roll
push
scas
jmp
out
loope
inc
push
stos
jno
jecxz
xor
jle
popf
cli
xchg
mov
mov
xor
in
or
dec
pop
lret
pop
inc
sub
call
test
les
fld
mov
jp
out
xor
pop
jbe
in
cld
inc
inc
lret
insl
jae
xchg
adcl
or
inc
cwtl
fdivrs
data16
cmp
into
divl
adc
lahf
pop
dec
inc
pop
out
pop
loop
outsb
xlat
mov
mov
mov
xchg
ja
add
gs
push
movsl
test
rolb
mov
lcall
sbb
dec
in
cmp
adc
fisubrl
inc
rcrl
pop
xchg
fs
mov
rorl
ret
cld
gs
xchg
sbb
call
jl
int3
dec
mov
cmp
or
ljmp
xchg
std
test
loope
push
mov
add
dec
mov
pmulhw
sub
enter
pop
ljmp
mov
sub
jno
mulb
sbb
movsb
add
scas
dec
add
sbb
iret
push
pop
mov
not
cmp
fiaddl
adc
jnp
adc
int
push
es
mul
jne
cmp
and
dec
lret
jge
fwait
mov
and
sti
incb
and
out
cmp
mov
fisubrl
aas
test
inc
and
cmpsb
jbe
sbb
loop
xchg
inc
xchg
jmp
out
add
adc
xchg
mov
aam
jae
jmp
cld
push
inc
mov
inc
jmp
in
call
cmp
cmp
rcl
mov
dec
pop
mov
test
fmull
jmp
shl
push
mov
scas
subl
jg
fmuls
inc
add
out
aas
or
push
push
inc
outsl
mov
and
imul
pop
pushf
xchg
inc
xor
xchg
iret
ret
lret
xchg
or
lcall
imul
loop
shl
ja
push
dec
inc
ljmp
gs
pop
icebp
inc
shrb
aas
inc
sub
cmp
mov
sbb
mov
sbb
mov
sbb
in
mov
pop
sbb
and
cmpsl
dec
lds
pop
sbb
cwtl
push
ret
dec
lods
icebp
fsts
ds
bound
jecxz
in
xchg
icebp
jnp
xor
jp
mov
ret
cmp
jbe
scas
int
inc
movl
or
in
out
in
fs
sub
inc
push
jge
push
jo
loopne
mov
adc
cmpsl
call
xlat
cmp
sub
mov
jl
js
aas
add
sbb
adc
into
adc
dec
in
push
xlat
out
cmpsb
ds
ficoml
push
jmp
jnp
pop
cwtl
outsl
mov
out
xor
adc
jbe
mov
and
xor
and
ja
imul
outsl
frstor
sti
pop
mov
loope
orl
and
int3
sub
les
jle
fadd
lcall
enter
stos
aaa
adc
in
jns
jecxz
adc
xlat
arpl
enter
xchg
int3
inc
and
adc
bound
sbb
push
aaa
sub
loopne
add
xchg
pop
pop
mov
nop
pop
sub
popf
push
test
testb
pop
inc
inc
cmp
loope
insb
mov
ljmp
push
popf
mov
jbe
adc
push
cmp
fisubrs
dec
pop
jnp
or
fldt
mov
scas
xchg
push
xlat
pop
cmpsb
push
and
aad
sub
sub
mov
jne
lahf
mov
mov
test
and
dec
cmp
hlt
mov
sbb
daa
add
add
fiaddl
xchg
add
stc
sub
xor
dec
mov
pop
lret
mov
mov
inc
es
sub
pusha
inc
dec
push
es
cwtl
push
pushf
mov
xor
pushf
repnz
in
test
pop
adc
lods
push
addb
aam
push
sbb
pop
cmp
roll
ss
hlt
jmp
ja
add
cmp
decb
aad
aam
int3
sbb
in
mov
pop
and
mov
push
xor
into
xchg
xor
popf
push
push
enter
rcrl
gs
gs
or
out
push
mov
sbb
jno
lods
push
adc
mov
aad
mov
rep
and
jo
arpl
mov
sbb
push
ja
mov
push
push
or
xor
mov
mov
popa
pusha
scas
call
ret
xor
fptan
mov
fcoms
hlt
add
mov
xorl
loop
in
insb
mov
insl
leave
push
ljmp
jmp
add
mov
bound
push
mov
icebp
cmpsb
aam
jae
aaa
cmp
mov
pusha
and
movsl
cwtl
cmpsl
add
pushf
stos
int3
or
inc
push
sar
jmp
cmpsb
push
xor
mov
pusha
ja
test
test
fs
cmp
dec
adc
or
loopne
mov
stc
lods
lods
lret
lea
lret
xchg
xchg
dec
push
pop
inc
inc
subb
arpl
add
ss
jl
jbe
xchg
and
and
outsl
loopne
mov
sbb
das
xchg
xchg
nop
and
scas
push
xchg
cmc
insl
clc
push
movsb
adc
mov
push
sbb
shl
pushf
and
cmp
fs
sbb
lods
mov
mov
addl
sbb
cmp
mov
imul
lcall
push
xor
bswap
push
imul
fwait
inc
jl
ret
mull
dec
das
cmp
mov
add
inc
xchg
paddq
add
cmpsl
sub
fwait
jne
adc
sahf
and
insl
push
ss
sbb
les
pop
add
imulb
outsb
push
imul
xchg
push
sub
clc
mov
pop
jl
loopne
lahf
sarb
ret
add
cmpsl
fmuls
lods
inc
jecxz
xor
mov
lods
jecxz
lds
je
mov
addb
popa
mov
icebp
sub
sub
insb
mov
jno
or
push
sbb
lret
mov
xchg
pop
roll
out
jge
xchg
and
out
jns
lret
sbb
cmp
push
and
fiaddl
movsb
aad
lcall
push
in
inc
hlt
fdivrs
pop
jecxz
aad
aad
loope
xadd
call
add
rol
sub
jecxz
and
jo
mov
xchg
inc
inc
subb
cwtl
mov
vorps
cmpsl
inc
jae
dec
aaa
xchg
in
jge
ficompl
rcr
inc
pop
in
or
clc
in
mov
insl
cmp
xchg
dec
jle
hlt
push
xlat
sub
jg
insb
arpl
sysret
jo
jl
jmp
dec
std
sub
push
xchg
lret
pop
mov
sub
and
jmp
mov
jb
mov
jne
xchg
jecxz
adc
inc
popa
out
in
sbb
pop
sub
fs
imul
sub
and
mov
cs
push
cmp
clc
sbb
int
imul
mov
es
test
stos
repz
adc
dec
popf
mov
xchg
xchg
das
sahf
jo
cmp
mov
leave
pop
shrl
sub
cs
outsb
or
rorb
sub
fucomip
movsb
test
subps
mov
lret
fcomi
adc
loopne
push
pop
outsl
push
sub
add
mov
mov
hlt
sbb
mov
loop
sbb
divl
sarb
inc
jb
scas
out
push
mov
push
push
sub
imul
icebp
pop
out
sbb
ret
pop
mov
test
in
mov
cwtl
pushl
out
mov
mov
dec
mov
push
call
test
sbb
add
sbb
outsb
mov
jae
popf
daa
mov
cmc
xchg
adc
jb
push
lcall
xchg
cmp
sbb
cmc
push
mov
lea
mov
cmpsb
pop
mov
cmovb
push
lahf
repz
ss
xchg
and
pushf
lret
addr16
mov
out
and
or
inc
inc
rorb
clc
out
xchg
and
out
out
or
pusha
xchg
cmp
xchg
sbb
movsl
adc
lea
xor
insb
xor
mov
outsb
and
stos
cmp
inc
dec
cld
rorl
push
stos
push
rcrb
sbb
mov
aad
fsubs
movhps
dec
mov
sbb
cli
pushf
sahf
lret
add
testb
cmpb
sub
lret
fdivrl
jecxz
rorb
mov
fisttps
xlat
mov
cmp
inc
and
add
int
inc
les
aad
jne
push
sahf
mov
int3
dec
es
data16
je
lods
xlat
shrl
stos
add
loope
repz
add
cs
and
imul
jb
ja
add
fistpll
mov
inc
cmp
cmc
push
push
fdiv
adc
fstpt
lea
mov
xchg
test
inc
jne
inc
push
std
out
mov
dec
inc
into
mov
mov
es
insl
mov
cmpsl
lds
out
push
insl
dec
mov
sub
or
ds
aaa
and
ds
jbe
pause
loope
mov
fs
mov
and
pop
dec
pop
cmpsb
or
mov
jae
sbb
push
sbb
leave
push
iret
mov
inc
or
incl
mov
dec
in
add
pop
inc
ret
fadd
cmpsb
cs
mov
lock
out
pop
dec
xchg
shl
jmp
xchg
add
mov
stos
push
mov
add
jns
xchg
add
int3
mov
insb
icebp
pop
loopne
ljmp
jp
enter
or
outsb
cmpsb
in
lahf
sub
out
mov
cli
sbb
push
mov
fsts
das
pusha
mov
jmp
and
adc
pop
mov
test
sub
fdivrs
or
pop
pop
stos
mov
outsl
cmp
hlt
lods
repnz
in
loop
loope
cmpsl
js
or
cli
pop
cmpsb
lahf
pop
data16
mov
jp
insb
or
and
push
xchg
dec
xlat
jns
mov
xor
ja
outsl
repz
add
imul
int
sbb
nop
test
and
int
dec
adc
pop
aas
icebp
fldcw
fistpll
jecxz
test
mov
dec
out
lods
mov
aas
adc
aaa
rorl
adc
out
out
mov
mov
mov
dec
pop
insl
add
mov
mov
mov
add
mov
or
mov
add
jae
cmpsl
push
mov
or
scas
sbb
sub
lea
inc
stos
insl
jp
jp
fdivp
jmp
or
mov
mov
cmp
xchg
mull
outsl
and
or
adc
lret
inc
dec
ljmp
cltd
xchg
shr
sbb
pop
cld
xchg
out
cmpb
cmp
and
push
test
mov
sub
lods
and
les
sub
lret
mov
xchg
lds
inc
xchg
pop
mov
jno
into
inc
add
ret
jp
dec
sbb
adc
lret
push
sub
push
ds
pop
push
mov
scas
cwtl
nop
arpl
iret
xlat
jae
shll
push
push
dec
cwtl
adc
vhsubpd
movsb
aam
sub
jns
and
push
mov
mov
xchg
jle
icebp
gs
dec
icebp
xor
sbb
inc
add
dec
or
or
xchg
push
clc
arpl
test
orl
pop
lds
std
mov
in
scas
imul
dec
insl
test
fs
mov
sbb
xchg
test
sbbl
pop
out
add
sbb
xor
xor
push
les
daa
aaa
jmp
cwtl
pop
test
jg
leave
adc
cmp
mov
pop
stos
icebp
mov
loop
in
pop
int
rcrl
sbb
pusha
addr16
mov
sarl
cmpsl
cmp
outsb
fadds
repz
daa
mov
vmaxss
pop
mov
arpl
scas
push
cmpsl
pushf
pushl
int
mov
push
repnz
or
fisttps
popf
jge
push
dec
arpl
push
ja
xor
lea
pop
stc
jl
test
or
ret
mov
jle
jecxz
inc
fisttps
fwait
mov
sti
and
mov
adc
vmread
mov
out
mov
adc
mov
sarb
jp
movsb
sbb
jle
pop
bound
sub
data16
mov
daa
cmp
mov
add
lods
sub
add
bound
jnp
inc
subb
stos
lds
in
jecxz
mov
add
aam
test
cmovg
push
adc
push
mov
pop
and
xchg
pop
sbb
pop
or
inc
outsl
sub
roll
ss
sbbb
jnp
pop
shll
aam
mov
test
int
adc
mov
adc
mov
inc
lcall
shl
mov
shlb
sbb
xchg
add
cmpsb
stc
nop
cs
xor
mov
popf
dec
jno
xlat
and
divl
sbb
mov
rcl
es
popa
pusha
mov
lret
jmp
xor
lock
cwtl
cmp
gs
daa
xchg
lahf
add
test
sub
into
ret
push
jg
xchg
pushf
leave
pop
jb
stos
inc
hlt
fistpll
pop
out
mov
pop
insb
push
movb
jl
iret
adc
push
or
les
and
push
mov
bound
cmc
xchg
adc
jle
das
lds
adc
jae
add
push
aas
mov
pop
push
pop
sbb
push
mov
call
arpl
jecxz
xchg
sub
sbb
lds
out
add
mov
push
in
cmpsb
adc
bound
insl
pusha
push
sub
int3
ss
call
daa
pop
inc
add
sbb
adc
lds
sbb
mov
pop
dec
and
shl
std
and
loope
xorl
sub
movsl
out
rcll
aad
mov
rolb
jle
inc
adc
sub
xor
ret
out
outsb
or
fsub
pop
jne
and
popf
daa
jecxz
les
popf
in
cwtl
pop
rcrl
mov
lods
mov
out
icebp
roll
sbb
leave
pop
mov
push
mulb
xor
dec
mov
xorl
stos
in
stos
pop
into
xor
outsb
ret
inc
jns
into
pop
push
adc
mov
or
pop
cmp
adc
pop
mov
popl
lahf
cwtl
sub
cli
cld
insb
test
subb
jle
jl
icebp
movsl
cmp
rcl
aaa
int3
adc
or
out
je
cmp
dec
enter
add
aad
push
sbbb
stos
jns
mov
imul
pushl
pop
adc
adc
sbb
cltd
cmp
sti
add
inc
cmpsb
pop
fnstenv
pop
xchg
mov
push
jne
fists
loope
gs
scas
mov
or
movsb
pop
push
fcomi
add
popf
cld
pusha
les
xchg
inc
ljmp
push
cmpsb
cmp
jp
rcll
or
pop
test
popf
push
xchg
daa
pop
out
loopne
rcrl
xchg
jl
inc
in
dec
stc
icebp
addr16
pmulhuw
or
adc
mov
pusha
negl
inc
lahf
icebp
repnz
cmp
inc
jg
movsl
push
roll
sbb
jmp
adc
and
rcr
or
mov
repnz
sub
in
cwtl
int3
jae
shrl
les
and
cmp
popa
push
push
jle
adc
dec
xor
mov
scas
jne
rclb
push
andl
push
cltd
pop
stc
push
jno
cmc
into
into
mov
test
pop
repz
out
jp
dec
push
lds
push
sub
sub
repnz
popf
mov
xchg
add
bound
pop
or
pop
mov
xor
xor
js
aam
nop
in
push
orb
adc
je
mov
inc
aam
es
nop
mov
pop
inc
outsb
jo
pushf
enter
sub
mov
xchg
bound
aaa
ret
daa
push
add
addl
aam
push
mov
lahf
into
push
pop
sub
pop
cmc
adc
mov
fistpl
mov
jmp
mov
lret
fwait
and
xchg
cmpsl
adc
add
cmp
fs
ret
push
stos
inc
in
xchg
mov
testb
repz
movsl
pushf
call
andl
ret
fwait
popf
sbb
jmp
mov
xchg
fsubl
call
repz
push
test
pushf
mov
ljmp
jae
stc
and
pop
out
mov
mov
rolb
jmp
adc
lock
mov
aaa
jb
andb
mov
loopne
mov
xor
adc
mov
sub
mov
mov
mov
lods
cmc
cmp
movb
mov
pop
or
lods
pop
mov
movsb
lcall
push
imul
sub
sbb
sbb
jl
dec
pushf
daa
adc
in
loop
jne
cmp
movsl
in
mov
cli
mov
jle
cld
dec
sub
int3
jns
jmp
mov
je
or
ja
mov
and
jg
mov
pushl
fisubl
subb
in
jle
xor
mov
in
outsl
lcall
cwtl
push
pop
inc
sbb
add
or
add
inc
loopne
fisttpll
mov
push
mov
xchg
imul
out
adc
into
xchg
enter
or
pop
leave
or
xchg
inc
movsb
scas
outsb
outsl
push
adc
add
cmc
sti
scas
shl
xchg
dec
sahf
push
or
mov
push
xchg
ljmp
cli
inc
push
and
into
pop
adc
inc
lods
pusha
fs
out
sub
jmp
cmp
or
ds
clc
cmc
adc
aad
sahf
inc
and
xchg
inc
xchg
and
add
mov
push
test
mov
jle
sub
test
repnz
mov
push
into
ffree
mov
enter
test
sbb
push
jge
insl
jg
in
or
cltd
sbb
fldl
std
adc
stos
lret
sbb
push
mov
lahf
mov
lods
dec
jo
lock
lret
decb
andl
pushl
sbb
out
out
imul
mov
outsb
xor
add
clc
loop
in
mov
ds
icebp
mov
cld
and
mov
ljmp
call
scas
mov
loope
mov
cld
adc
in
call
mov
lcall
xchg
out
ds
xchg
popf
call
insb
stos
in
jecxz
dec
pop
mov
movsb
in
jecxz
xor
push
xchg
icebp
rolb
jnp
sbb
mov
sahf
subl
sub
pop
pushf
stc
add
push
subb
das
pop
mov
shl
cmpsl
fistl
icebp
fs
pop
sub
cmp
xchg
stos
mov
mov
filds
push
sarb
test
mov
mov
lcall
cmpsb
or
leave
adc
fldt
xor
movl
mov
repz
es
add
adc
dec
jecxz
and
int3
insl
jecxz
xor
insl
repnz
shl
adc
rclb
push
shll
mov
mov
mov
pop
jns
push
fmulp
cmp
nop
pushw
idivl
inc
es
shrl
fdivrs
push
push
ja
in
fildll
adc
imul
add
mov
fs
fwait
mov
sbb
dec
insb
inc
out
pop
inc
sti
scas
fcoms
xchg
pop
inc
push
lods
popf
fldcw
lds
test
sysenter
lds
push
add
test
jns
add
adc
cmp
mov
loopne
in
jbe
es
daa
in
lds
jl
mov
pop
push
lock
arpl
or
cmpsb
sub
adc
lcall
movsb
fcoms
add
sub
sub
pop
cld
imul
popa
add
jns
push
int
arpl
aad
mov
test
aaa
mov
imull
and
arpl
loop
les
js
or
fists
ds
xor
stc
mul
repnz
into
push
jbe
sub
push
inc
mov
lods
sbb
xchg
nop
rclb
testl
sti
xor
mov
dec
xor
loop
or
fsubp
jge
adc
xchg
push
fcomi
or
push
stc
test
xor
sbbb
shrb
adc
lcall
test
inc
je
sarb
popa
push
cli
sub
adc
int3
adc
adc
jo
sbb
daa
mov
mov
stos
pop
inc
jno
push
inc
or
push
mov
cmpsb
sbb
hlt
xchg
outsl
xchg
push
dec
leave
or
imul
les
and
addr16
hlt
lahf
in
pop
pop
xchg
lea
ljmp
mov
in
inc
and
jns
cltd
aas
xchg
jle
pop
insl
pop
mov
lret
pop
fsubp
cmpsl
inc
cmp
xchg
int3
mov
mov
in
push
data16
sbb
cs
testb
adc
insb
and
cmp
cmp
jmp
insb
leave
inc
ds
mov
loope
lea
movsb
jecxz
inc
rol
mov
cmp
pop
mov
add
int
dec
outsl
jg
js
xor
push
fwait
cmc
xchg
das
xor
stc
sub
pop
ret
mov
jo
cltd
pop
dec
xor
cmpsl
popf
push
mov
repnz
inc
mov
jge
jecxz
mov
pop
xchg
repz
test
stc
jle
lods
sahf
mov
lahf
jp
xchg
xor
sbb
push
inc
jno
fpatan
adc
cmp
lea
or
lods
daa
addr16
movsl
pushf
push
mov
arpl
pop
cmp
or
scas
jo
lods
mov
sub
outsl
dec
daa
sub
fildl
lahf
je
jne
xor
sub
mov
mov
scas
popa
in
orl
jmp
arpl
dec
and
loopne
xor
jae
lock
fwait
daa
fistpll
bound
push
in
adc
jae
cld
mov
ss
addb
cld
or
ja
cltd
adc
test
gs
sbb
daa
add
es
faddp
push
test
and
fdivr
gs
in
pop
pop
rcrb
int3
mov
mov
jns
jle
in
mov
ja
jne
fs
mov
out
adc
push
mov
xchg
pusha
fiadds
push
dec
add
sub
dec
scas
lcall
hlt
dec
sti
jmp
daa
js
enter
dec
pop
into
insl
or
xchg
xor
xchg
mov
aas
jno
mov
jbe
push
mov
sti
fwait
aad
xor
and
mov
stos
dec
mov
sub
adc
sbb
xchg
popa
scas
pop
cwtl
in
add
mov
data16
jb
lcall
fwait
mov
fsubr
lcall
enter
sbb
xchg
and
imul
or
ja
sbb
sub
and
mov
xor
je
fcoml
sbb
xor
inc
push
xchg
or
sub
fwait
ds
xor
push
dec
and
jne
jbe
adc
adc
mov
jbe
sub
jnp
push
dec
pop
push
in
and
fidivl
out
adc
fdivs
fisttpll
rorb
xor
aaa
test
mov
aaa
push
xor
sbb
addr16
or
inc
jno
pop
lcall
cmpsl
inc
push
sbb
inc
xor
mov
mov
mov
icebp
inc
outsl
movsl
dec
or
in
lock
daa
cld
sub
pop
mov
add
outsl
and
cltd
jp
cmp
arpl
inc
loope
pusha
mov
pop
push
pop
sbb
pop
mov
push
repz
stc
js
inc
pop
mov
or
lea
jbe
xchg
mov
sub
mov
mov
xchg
inc
pop
pop
lods
xor
rcr
xor
iret
lcall
loopne
popa
icebp
cs
sarl
aad
xor
cwtl
int
or
fldenv
fcomps
cmpsb
adc
call
mov
sahf
adc
jmp
or
lcall
std
call
lods
fdivr
mov
ds
out
sbb
sarl
gs
insl
test
rol
add
fisubs
dec
lahf
mov
push
and
fnstcw
and
inc
inc
in
pop
adc
and
push
sbb
cld
cmp
jno
call
mov
sub
imul
xchg
cs
and
call
dec
cmp
mov
lods
clc
popa
popa
jecxz
and
lret
mov
xchg
ja
mov
sub
pop
fmull
stos
mov
fdivl
adc
xchg
and
adc
jge
mov
cmp
lcall
and
pop
fwait
sub
xor
lcall
push
es
cmp
inc
dec
in
inc
cs
inc
push
inc
jecxz
or
or
mov
pop
and
das
push
and
stos
movsl
cmp
cs
mov
adc
jge
icebp
scas
clc
jnp
push
mov
sub
xorb
jae
mov
clc
xchg
xchg
aad
push
mov
dec
out
dec
cmpsl
jge
mov
aas
push
pop
push
mov
add
pop
pop
or
mov
movsb
adc
mov
jne
sbb
pop
loop
xchg
xchg
jae
add
rorl
inc
ss
jno
aad
fadds
add
xchg
mov
lcall
dec
lock
bound
ja
cmp
mov
aaa
jb
test
jmp
adc
aaa
jb
ficomps
fmuls
inc
jo
mov
mov
inc
adc
nop
xchg
or
movsb
xchg
xchg
mov
jp
adc
data16
imul
dec
sarb
fistps
movsb
leave
and
loopne
cmpsl
repnz
xchg
fidivl
add
mov
and
push
leave
pop
ficompl
movsl
and
mov
mov
xor
sub
shlb
jmp
cld
sub
nop
cmc
repz
cmp
mov
mov
fwait
mov
jo
lahf
cmpsb
lret
or
xchg
repnz
aas
insl
sbb
pushf
cmp
push
mov
inc
pop
ss
clc
jnp
imulb
sbb
cld
insb
cwtl
mov
adc
or
inc
xor
xchg
or
outsb
sbb
sbb
cwtl
es
test
or
jmp
sub
loop
xor
loope
in
and
int
jp
fisttpl
aaa
fwait
jb
dec
nop
inc
icebp
test
cltd
mov
add
aad
loop
jo
subl
scas
jbe
shlb
inc
test
cmp
xor
repnz
adc
call
mov
mov
mov
and
fcomip
jno
pop
mov
insb
mov
inc
cwtl
add
pop
mov
xchg
push
dec
les
loope
add
popa
fcomps
mov
mov
add
fimuls
inc
mov
mov
outsb
inc
and
aaa
mov
dec
sti
mov
mov
shll
dec
insb
test
int
or
les
cmp
cmp
and
adc
mov
loope
rcll
xlat
mov
in
jno
les
add
push
cmp
jno
enter
jno
cld
mov
call
xchg
push
hlt
push
pop
pop
stos
and
cvtps2pd
push
pop
popf
les
mov
sbb
sahf
stos
fsub
xchg
xchg
inc
daa
out
arpl
flds
ss
lods
mov
test
cmp
sbb
add
and
xchg
aam
dec
popa
mov
mov
daa
xor
imul
adc
test
mov
arpl
outsb
and
jecxz
mov
cmpsb
daa
clc
jnp
scas
test
test
push
enter
fimull
cli
scas
icebp
dec
or
enter
mov
cmpl
xchg
loope
out
pop
jmp
push
inc
add
mulb
je
adc
je
in
push
adc
xor
pop
inc
sbb
sti
adcb
xor
jnp
and
cwtl
sub
mov
add
mov
pop
jp
xchg
repnz
scas
enter
addr16
cli
aad
repz
adc
pusha
ds
cltd
mov
pop
icebp
pop
add
pop
inc
gs
lods
xor
aas
fidivl
repz
fs
pop
cmp
lret
cmp
jecxz
xor
in
sub
fnsave
bnd
insl
sti
cmp
fwait
hlt
out
push
fistl
mov
xchg
lret
fxch
sub
xchg
adcl
ds
lahf
xor
and
add
pushf
sbb
dec
add
xchg
mov
mov
fucomi
mov
mov
aam
je
scas
shl
aad
push
pusha
fwait
push
fimuls
xchg
test
and
scas
sub
and
sbb
pushf
or
in
push
mov
sbb
test
pop
dec
fisttpl
aaa
mov
insb
mov
mov
cltd
outsb
add
jg
sar
add
push
inc
lahf
hlt
aad
cmp
cmpsb
cwtl
push
add
fs
dec
and
ret
sub
repnz
into
mov
xchg
addb
pop
add
xlat
xor
mov
js
jp
ret
xchg
or
or
inc
mov
ret
push
aad
roll
jo
arpl
iret
adc
adc
adc
mov
inc
movsl
cmpsl
movsb
inc
cli
out
insl
scas
xchg
cmp
ljmp
testl
ficompl
aad
inc
cli
pop
push
and
xlat
imul
sarl
aad
int3
pushf
cmp
sub
shll
jns
into
jns
xor
cmovs
mov
jmp
cs
inc
shll
cmp
and
push
lods
mov
movsl
dec
xor
out
testb
dec
jmp
push
lcall
sub
sbb
dec
adc
sub
mov
push
lock
stos
cmpsb
push
subl
lods
lods
or
orb
or
push
int
out
pop
adc
ficompl
add
icebp
into
xor
inc
fisubrs
test
add
int3
mov
mov
testl
outsb
jbe
scas
push
jge
sub
fldcw
shrl
mov
or
and
add
and
arpl
gs
ret
sbb
iret
cld
ss
cltd
iret
xchg
xor
repnz
xor
and
cmpsl
rclb
aam
cmpsb
inc
add
or
dec
push
negb
or
dec
sub
outsb
aas
push
or
pop
filds
loop
test
pushf
dec
pop
repz
jl
mov
pop
les
mov
and
jmp
jle
add
and
shll
mov
nop
mov
xchg
lods
jg
mov
lret
mov
dec
fadds
pop
jne
xchg
mov
adc
leave
add
push
sub
in
jo
ffreep
mov
daa
pop
stos
pusha
repz
mov
sbb
xor
sbb
mov
jle
out
jecxz
push
inc
loope,pn
mov
jo
pusha
sbb
data16
or
inc
ds
sub
sbb
dec
stc
cmp
sbb
jae
movsb
repz
js
mov
mov
lea
sbb
aas
dec
incb
jae
jnp
jl
fsts
jo
imul
jge
push
xchg
jbe
inc
mov
sti
sub
gs
leave
daa
xor
dec
xor
xchg
jns
mov
roll
ror
addr16
add
xor
inc
adc
xchg
inc
imulb
mov
pop
sbb
sahf
arpl
fists
stos
in
scas
les
push
gs
or
sbb
lret
loopne
sahf
sbb
out
jge
push
cwtl
mov
cltd
pop
xchg
arpl
test
in
add
test
int
ftst
adc
lea
es
mull
sub
call
in
sbb
or
cmp
lods
and
out
cmp
scas
fwait
and
test
nop
push
loop
inc
cld
mov
nop
pushf
inc
stc
pop
ja
jge
loopne
aas
aaa
shlb
pushf
dec
cmp
and
xchg
cmp
pop
mov
lret
add
cmp
sub
pop
adcb
xchg
nop
mov
les
daa
jb
jmp
roll
sub
and
addr16
movsb
xchg
fsubrl
adc
ret
imul
ficomps
outsl
and
jmp
cld
stos
shrb
rorb
inc
test
sbb
jns
out
jle
pusha
mov
mov
pushf
mov
sahf
mov
or
cld
scas
dec
pop
jp
add
imul
push
mov
lock
orb
test
add
or
xchg
call
setl
jns
dec
xchg
es
mov
fcmovu
repz
fucomp
jmp
repnz
fxch
test
mov
in
xchg
sbb
cmc
mov
pop
test
test
fsubl
fcompl
pusha
sbb
addl
mov
fs
cmp
mov
mov
jge
out
sbb
out
dec
and
pusha
add
outsl
mov
jmp
mov
ljmp
pop
adc
xchg
daa
jo
adc
out
ja
imul
shrb
inc
xchg
and
mov
enter
dec
addr16
jecxz
aas
xchg
nop
cs
cmp
mov
lret
insl
add
lea
sbb
testl
adc
adc
xchg
in
xchg
aad
movsl
xchg
or
movsb
sub
adc
pop
jg
mull
rcr
inc
cmp
dec
inc
inc
rcll
push
inc
lods
rcrb
dec
popa
aad
movsb
in
xor
dec
in
xchg
gs
xchg
stos
jo
les
fistl
sti
mov
or
xchg
ficomps
scas
and
and
mov
shrl
dec
addb
mov
dec
shlb
imulb
mov
add
pop
cmpsl
xchg
mov
hlt
loop,pt
insb
xchg
mov
mov
jmp
sahf
sub
sbb
add
mov
jnp
popl
mov
ror
push
movsl
ljmp
insb
mov
popf
pop
mov
hlt
jecxz
pop
test
adc
int
sahf
iret
fisttpll
fcomip
and
push
cwtl
or
popa
sbb
push
push
sub
fcomi
or
pop
mov
pop
mov
mov
repnz
lds
add
push
fs
push
fsub
sub
sub
and
pop
mov
jb
pushf
jp
aas
in
sahf
push
ja
mov
enter
pop
and
pop
movl
outsb
repnz
outsl
mov
leave
mov
xchg
lcall
push
inc
jge
cs
sbb
faddp
fldl
jp
arpl
mov
add
lret
mov
pop
and
aas
popa
stos
fistps
dec
add
xchg
push
xchg
adc
mov
xor
in
sbb
in
dec
mov
insb
iret
or
mov
and
adc
sbb
push
jl
or
add
and
sahf
ret
cmp
test
clc
and
js
xchg
cmpsb
mov
insb
fidivl
sti
fildll
cmp
cmp
sti
mov
jecxz
push
cmp
dec
roll
fsub
xor
repz
dec
scas
aad
jecxz
mov
mov
nop
push
loop
not
lods
cltd
sbb
and
je
xchg
jbe
insb
sarb
jb
fistps
bswap
adc
out
jmp
std
test
fdivs
repz
inc
aam
dec
mov
inc
dec
ljmp
xchg
and
setnp
je
insl
or
cld
shrd
mov
mov
adc
jb
pop
and
cmp
sub
pushf
outsb
adc
rclb
mov
cmpsb
jbe
ret
sbb
push
aas
mov
dec
dec
add
mov
or
push
push
xchg
inc
aam
jge
cmp
fcomi
outsl
std
adc
sahf
pop
jno
lret
mov
dec
js
outsl
or
adc
aad
lods
xor
jae
loopne
xor
fldcw
rorb
mov
jns,pt
pop
outsl
cld
or
mov
shl
scas
ror
nop
js
inc
push
stc
or
jnp
aaa
pop
jb
hlt
mov
repz
dec
xor
push
inc
gs
adc
ret
scas
jns
push
fs
vmwrite
fsubrl
movsb
or
or
sub
lcall
lds
push
push
fsubs
sub
imul
loope
sti
mov
mov
out
mov
inc
jo
stc
jne
mov
mov
and
dec
test
or
icebp
sarl
mov
cmp
push
add
xor
rcrb
sarl
aaa
push
popl
divl
and
fidivrs
sbb
cli
aaa
shl
mov
jno
in
jmp
leave
push
xor
or
mov
hlt
cmpsb
sbb
jmp
in
sub
jnp
stos
sbb
sbb
das
jae
push
cmc
cld
cmp
and
lock
je
sub
outsl
push
mov
cli
movb
icebp
sub
pop
sahf
repz
loopne
push
jb
mov
adc
mov
fists
test
std
jns
jo
mov
jge
ret
ja
xor
sub
mov
leave
adc
les
add
je
cmp
mov
daa
int3
push
icebp
in
shll
mov
and
sub
jbe
push
jo
fs
mov
mov
push
in
rcll
adc
leave
sub
jmp
fstpt
out
push
jo
pop
lods
out
mov
dec
movsb
out
stc
xchg
dec
pop
push
imul
iret
sbb
or
test
into
cmp
sub
add
push
nop
inc
pop
out
ret
push
out
and
jbe
sbb
imul
outsl
std
sar
inc
aam
push
loope
push
dec
lret
jns
or
loop
jbe
shrb
addr16
sbb
push
cmp
cmp
insb
sub
sub
cmp
jle
inc
pop
push
xor
nop
out
es
and
ret
clc
xor
inc
pop
mov
sarb
fwait
dec
mov
call
or
pop
dec
addb
pop
je
sti
jne
pop
rcrl
xor
cmpsb
pop
sbb
mov
jne
movsb
dec
psubb
or
pusha
ret
ljmp
xchg
sar
call
lods
jmp
cs
push
in
je
es
insl
add
and
inc
cld
daa
xchg
push
into
insl
xchg
xchg
mov
bound
jmp
out
jle
loop
jmp
scas
dec
imul
testb
xchg
xchg
jo
out
mov
sub
das
sbbb
das
xchg
fistps
adc
popa
lcall
xor
or
gs
arpl
dec
pusha
dec
push
inc
mov
push
fwait
xchg
loopne
xlat
in
movsb
and
mov
dec
pushf
in
xchg
push
int
pushf
or
mov
stc
inc
sub
xlat
jmp
dec
sahf
lds
lret
mov
add
xchg
inc
ret
test
cmp
mov
xor
cmpsl
sub
sahf
je
or
gs
sub
lret
sub
jmp
test
or
cli
jmp
pop
jne
dec
add
sbb
mov
inc
shll
test
cmp
daa
adc
mov
fnstsw
jg
mov
test
fidivl
test
mov
sub
xchg
pop
mov
cmpsb
mov
rorl
mov
mov
iret
pusha
xchg
das
xor
adc
dec
jb
inc
jno
xlat
int
and
add
sub
imul
dec
xor
repnz
or
stos
jns
and
sqrtps
pushf
js
movsb
xchg
jno
repz
daa
or
xchg
lds
mov
mov
jecxz
dec
lcall
ja
stos
mov
fcoms
enter
add
lea
faddl
xchg
and
xchg
adc
xor
movsb
mov
pusha
and
dec
mov
fldl
popf
cs
test
outsl
repnz
decl
sub
jl
sti
in
push
cmp
cmp
jle
fsubrl
mov
ja
xchg
mov
jae
pop
push
push
imul
push
pusha
clc
es
inc
es
into
subl
xchg
pop
adc
add
insb
fstpt
jae
sub
aaa
in
cmp
div
mov
std
push
cmp
mov
inc
and
mov
ljmp
or
jns
jb
js
out
xchg
les
mov
xlat
outsb
xchg
mov
fwait
jge
mov
rcl
add
pushf
jo
vdivss
notl
dec
xor
add
idiv
les
jne
jmp
jle
cmp
jge
and
aam
add
sub
daa
dec
jo
fwait
mov
shlb
and
xchg
in
jecxz
inc
mov
push
dec
test
push
pop
cmp
cmpl
pop
outsl
ret
in
xchg
add
jne
pop
pop
dec
fnstenv
bound
xor
inc
mov
es
dec
out
xchg
iret
sti
cmp
cmp
xchg
gs
stos
adc
mov
cmp
insb
loop
xchg
inc
ljmp
sub
cmp
sbb
mov
aam
andl
sub
push
bound
mov
mov
mov
test
int
lea
push
inc
or
lods
sbb
jecxz
xchg
push
test
inc
fs
push
insb
xchg
aam
hlt
push
sahf
mov
push
les
outsb
arpl
out
imul
cmpsl
jmp
mov
mov
fcmovne
add
adc
stos
jo
daa
xchg
adc
pop
jg
in
cmpsb
inc
push
mov
clc
mov
add
pusha
cs
cld
mov
lds
sub
nop
js
scas
pop
sub
adc
sbb
mov
xor
jmp
xchg
mov
fidivrl
fs
repz
dec
mov
ljmp
out
sarl
movsb
lret
imul
out
arpl
repz
jl
sbb
stc
cmp
pop
loop
cmp
xchg
push
cmp
adc
mov
addr16
sub
cltd
adc
pop
fistps
ljmp
lret
insb
and
ret
ljmp
adc
add
fistpl
neg
out
xchg
mov
dec
or
push
mov
or
repz
lahf
cmpsb
pop
cmp
xchg
stos
divb
aad
cmpsl
adc
xor
mov
pop
lret
fcmovnbe
push
pop
mov
mov
fdivl
cmc
pop
mov
or
mov
out
das
jns
push
orb
mov
mov
sbbl
out
sbb
fstl
dec
mov
xchg
scas
xor
test
xor
push
xor
subb
or
cmp
cmp
inc
sbb
cli
arpl
pop
push
imul
int
in
aas
adc
inc
add
cmpsb
loop
loope
pop
mov
and
int
xchg
scas
gs
mov
sbb
cmpsl
xor
add
push
ljmp
add
and
aaa
xchg
lcall
std
arpl
xchg
cs
mov
testl
adc
pop
xor
call
std
dec
and
add
cmp
in
sbb
pop
test
pop
das
sbb
imul
pop
rclb
push
sbb
fcomps
stos
repz
es
xor
and
xchg
arpl
pop
mov
stos
add
jno
jg
pop
aas
push
loopne
mov
nop
test
jecxz
sahf
xchg
jp
pusha
pop
push
icebp
aad
cmp
mov
dec
dec
cmp
ja
stos
dec
fsubrs
ret
fsubrs
test
sub
mov
iret
jne
xchg
mov
leave
mov
mov
out
cmp
and
cmpsb
rorl
lret
inc
xor
or
nop
in
xchg
mov
xchg
rolb
push
mov
xor
or
push
cmp
mov
mov
out
addr16
cld
jo
push
out
xchg
rcr
out
mov
int
push
adc
fldenv
pop
enter
out
sub
mov
push
test
lret
xor
pop
and
dec
rcr
das
mov
clc
aam
loopne
xor
cmp
and
push
jns
andb
out
cmp
adc
sub
nop
or
mov
aad
jne
bound
loopne
jg
in
je
push
mov
push
sahf
mov
dec
push
pop
jae
cmp
dec
xor
mov
popf
xchg
int
pushf
fcomp
xor
notl
aaa
je
dec
mov
scas
fwait
add
fs
iret
js
fmull
pop
mov
inc
pop
inc
adc
sbb
out
push
repnz
lcall
bnd
mov
push
and
aaa
out
mov
cs
jnp
lret
or
fwait
jge
loop
stos
push
push
sbb
cmp
adc
out
mov
in
add
mov
out
push
push
fdivs
fwait
mov
push
pop
mov
push
cmp
inc
push
push
gs
test
and
cs
stos
dec
rclb
addr16
or
int3
and
mov
pusha
test
jmp
mov
xor
enter
jecxz
loop
jb
dec
mov
test
xchg
xchg
push
lea
enter
mov
pop
loope
stos
andb
adc
adc
lea
cwtl
xchg
call
fsubs
hlt
xacquire
popa
mov
push
jmp
xor
fdivrs
adc
imul
mov
sbb
xchg
cmpsl
inc
inc
incb
clc
scas
jp
pop
sarb
inc
dec
xchg
push
bound
decb
mov
mov
popf
sub
iret
nop
push
mov
cli
pushf
clc
and
dec
pop
stc
add
xchg
push
les
and
cmc
xorl
popa
pushf
mul
cld
pop
fcmovbe
dec
out
movsl
or
cmc
push
lret
mov
xlat
and
pop
movsb
mov
push
mov
inc
loope
popf
mov
pop
and
pop
or
rcrl
inc
push
dec
mov
dec
arpl
or
xchg
cmp
and
xchg
jns
iret
sarl
jns
ss
xchg
xchg
popa
dec
jne
mov
pop
nop
xchg
imul
scas
jmp
inc
out
bound
dec
pop
fdivl
mov
sub
test
adc
xchg
cmp
xor
in
sub
jmp
sahf
sbb
mov
push
push
mov
test
pushf
ljmp
pop
sub
or
cmp
add
paddb
iret
sahf
stos
fisubrs
xlat
test
ja
push
loop
data16
out
pop
repnz
in
mov
push
xchg
xor
pop
cmp
insl
jge
push
fcompl
and
lock
mov
movsb
push
int3
data16
idivb
aad
jnp
mov
lea
lock
mov
ds
rcll
test
aaa
daa
adc
adc
add
sub
lea
mov
movsw
scas
rcll
cmovge
fbld
push
ljmp
ds
pushf
xchg
shll
jle
push
cwtl
xchg
xlat
xchg
jp
mov
and
sahf
push
xchg
and
test
in
xchg
daa
lcall
mov
sub
fcomps
mov
xorl
dec
ja
stc
add
add
fsincos
rcll
push
iret
pop
pop
insb
jno
sbb
adc
and
out
jb
aam
xchg
shl
loopne
sahf
or
es
dec
pop
leave
outsb
cld
sub
dec
mov
inc
sbb
adcb
sahf
or
or
inc
mov
mov
pop
sub
fwait
mov
push
jecxz
pop
xchg
int3
push
fldl2e
xchg
mov
es
sub
fists
movsb
xlat
lods
pop
add
jns
call
pop
or
xorb
jl
rep
outsb
notb
and
enter
in
jmp
sbb
dec
je
add
or
stc
sub
inc
lret
sbb
dec
fldl
out
push
cmp
inc
jp
push
daa
popf
cs
pop
add
bound
cmp
outsl
nop
mov
cwtl
inc
shlb
adc
aad
jnp
sbb
aad
push
mov
frstor
cli
jge
enter
subl
out
cmp
push
cmp
cmc
mov
call
mov
add
pop
push
orl
xchg
and
ja
inc
and
cmp
jnp
aad
jne
scas
mov
ja
jo
jnp
bnd
int3
out
cmp
sahf
cmp
add
add
fnstcw
jle
pop
repz
jb
les
mov
sub
sub
cs
sub
sbb
adc
pop
movsb
cmpsl
mov
pop
loope
imul
lods
xchg
or
dec
lret
inc
cmp
loope
stos
std
push
sti
ljmp
cmp
data16
std
lahf
fwait
sub
in
mov
jns
dec
sub
fistps
xchg
add
mov
push
sub
fstps
rorb
sub
jle
push
lret
lcall
mov
and
icebp
cmc
cmpsb
cmp
jno
leave
andl
ljmp
loope
shll
test
dec
cmpb
cmc
xadd
add
mov
ljmp
xchg
aaa
test
xchg
push
adc
inc
gs
xchg
xchg
pop
and
adc
repz
dec
dec
mov
lock
sar
mov
sbb
negl
ret
pusha
insl
dec
stos
cmp
aas
xchg
insl
push
ret
inc
pop
lock
pop
and
inc
mov
jmp
scas
or
mov
mov
call
push
fisttpl
dec
ficoml
repnz
out
jge
pop
adc
fs
sar
or
sbb
orb
add
add
in
jp
adc
addr16
repz
mov
gs
cmp
insb
adc
mov
dec
cld
divb
popa
xor
mov
jge,pt
adc
lods
inc
dec
dec
ror
jne
leave
mov
cmp
into
xor
or
dec
es
stos
push
mov
mov
xchg
iret
in
mov
xchg
sub
outsb
idivb
or
mov
int3
push
add
adcb
test
xor
test
hlt
iret
pand
mov
daa
int
sbb
pop
sub
mov
adc
in
cmpl
mov
cmpsb
add
pop
dec
xchg
outsb
jnp
gs
lods
ja
mov
pop
push
lahf
aad
pop
out
inc
fmul
aad
pop
adc
in
pop
sbb
imul
arpl
sahf
testb
cmp
mov
das
push
cli
hlt
pushf
pusha
jmp
roll
cwtl
pop
mov
jge
loop
mov
jno
jg
sti
inc
ljmp
xchg
fadds
and
xor
push
pop
sbbb
cmc
mov
cmpsb
mov
inc
mov
cld
inc
lock
mov
jns
cs
cmpl
or
fwait
pop
mov
and
pop
push
out
push
add
push
sbb
and
dec
enter
xor
mov
mov
sub
dec
and
jns
or
and
mov
adc
popa
and
dec
jp
push
stos
cs
cmpsb
test
mov
and
push
into
inc
inc
loop
xchg
je
cmp
xor
and
and
out
mov
std
xor
sahf
gs
imul
out
loop
jmp
push
fwait
jo
mov
mov
mov
loope
xchg
nop
pushf
add
imull
mov
pusha
arpl
mov
fcomp
sti
and
loope
movb
lahf
sbb
js
out
mov
rcr
mov
cld
aad
jmp
repz
movsb
iret
sub
mov
mov
nop
stc
movsl
stos
and
sub
sub
movsb
cmp
mov
pop
sub
movsb
jb
fstpt
outsb
repz
into
sub
and
hlt
sbb
sbb
add
arpl
sarb
imul
add
shr
sbb
adcl
pop
adc
xlat
fldl
and
jno
lds
xor
mov
in
mov
inc
cmp
and
xor
mov
jp
bound
inc
xlat
shlb
js
repz
lds
rclb
add
cmpsb
stos
sbb
xchg
pop
lret
insl
cmp
mov
add
xchg
jecxz
xchg
std
adc
mov
fists
lods
shll
push
or
in
push
sti
out
aaa
push
mov
ljmp
mov
xchg
das
push
inc
sbb
mov
mov
push
pop
and
rcrl
fwait
lahf
arpl
daa
subb
push
mov
cmp
xor
pop
inc
push
dec
mov
sahf
mov
daa
adc
dec
loop
or
daa
in
test
addr16
lock
mov
sbb
data16
dec
push
push
lret
push
mov
out
sub
xchg
mov
js
pop
enter
mov
push
mov
dec
xchg
icebp
test
jp
lret
test
xchg
aaa
jge
xor
add
repnz
inc
imul
enter
fwait
inc
and
rorb
xchg
filds
xchg
add
mov
loope
sbb
push
aam
stos
mov
jo
mov
cmp
test
clc
aam
je
inc
inc
inc
cmpsl
daa
aam
lock
lret
sbb
cld
jmp
mov
pop
js
repnz
xor
cmp
test
sbb
fwait
test
add
xchg
imul
xchg
mov
loop
pop
iret
out
cli
adc
sar
stos
mov
mov
pushf
inc
loopne
shll
je
mov
inc
mov
loopne
repz
mov
addr16
repnz
xor
and
into
xchg
lea
ror
fnsetpm(287
inc
and
adc
inc
push
adc
xchg
jno
movsl
nop
sbb
in
add
ja
out
inc
mul
shl
xchg
push
xor
push
filds
cmp
pop
jae
push
ficoms
jns
out
push
popa
negb
and
setbe
push
inc
cmpsb
cwtl
jp
mov
add
jl
add
mov
sahf
sbb
jecxz
pusha
pop
push
cmp
ret
int
repz
out
sub
das
pop
outsb
ljmp
push
xor
mov
mov
xor
cwtl
mov
cltd
imul
fmuls
xchg
ss
push
or
movb
xchg
dec
adc
pusha
cli
ljmp
xchg
fdivrl
outsl
scas
cmp
pop
divl
and
pop
mov
stos
stos
std
arpl
dec
or
jb
fs
pop
jns
les
jmp
hlt
mov
pop
ds
movsb
adc
xor
push
pushf
icebp
fstps
mov
scas
sub
mov
or
sbb
jle
lds
and
jb
pop
push
cmpsb
arpl
and
dec
rcrl
in
outsl
lret
sub
and
icebp
pop
pushf
dec
cld
dec
mov
mov
cmp
push
mov
push
aam
jmp
mov
pop
sbb
idivb
vucomiss
and
lret
ljmp
sbb
xchg
call
jnp
jp
pop
mov
and
mov
push
rclb
sbb
and
xchg
fidivrl
aaa
gs
adc
stos
jmp
aaa
mov
sbb
xor
sub
enter
sarl
pop
adc
or
inc
jns
or
pop
in
mov
sub
xorb
adc
dec
sbb
pop
ret
and
movsb
lock
xor
aam
daa
xchg
ss
or
xor
js
pop
xor
pop
call
jne
in
dec
imul
pop
out
sub
int3
lcall
jmp
fcomi
sub
ret
mov
ss
inc
mulb
inc
sub
xor
ja
xor
fisubrl
sbb
dec
add
push
mov
xchg
xor
or
inc
mov
cli
cmpsl
aas
dec
frstor
jecxz
xor
rclb
and
adc
fbld
ljmp
cmp
inc
xor
lcall
sbb
pop
ret
mov
inc
and
sub
jle
xor
sbb
lret
xchg
test
cmovbe
add
aad
xchg
pop
and
push
clc
mov
mov
dec
lods
mov
shrb
add
rorb
shll
jge
sti
arpl
jge
lock
lahf
bswap
pushf
insb
sub
push
aad
xchg
ljmp
mov
popl
ret
ds
lret
sbb
addl
scas
pop
repz
aad
sbb
enter
arpl
xchg
aad
or
jmp
iret
ret
push
popa
mov
popf
bound
jnp
adc
sar
sbb
dec
or
sbb
lods
sbb
mov
and
daa
cmp
lahf
popa
inc
mov
mov
aaa
mov
daa
or
inc
scas
cmp
fiadds
adc
in
in
insl
mov
and
out
push
jne
ret
in
cs
popf
stos
cmp
dec
adc
mov
jmp
mov
mov
adc
outsl
ret
iret
filds
ret
iret
out
mov
sub
lea
inc
int3
lods
js
inc
jg
mov
gs
test
jecxz
lock
iret
pop
sub
hlt
jo
mov
pop
and
popf
cmp
mov
movsl
jbe
lods
fstps
int3
push
gs
sub
and
es
jecxz
mov
mov
inc
test
test
jp
dec
pop
jnp
sub
dec
enter
mov
insb
cmc
ret
sbb
lret
cs
stos
pusha
les
dec
loop
cmpsl
inc
push
mov
mov
movsb
or
popa
sar
adc
push
push
fstp
pcmpgtb
insl
jo
addr16
mov
sbb
rclb
mov
lods
mov
xchg
and
lock
mov
dec
and
shrb
inc
ds
ds
imul
pandn
or
rcll
sub
loope
xor
daa
rcll
adc
scas
cwtl
mov
xchg
adc
jno
stc
mov
jne
fsubrs
dec
clc
imull
sub
jne
pop
add
cs
lock
stos
scas
pop
mov
cmpl
xlat
xor
adc
aam
scas
in
shll
and
mov
xchg
mov
push
pop
popa
fs
push
sbb
arpl
fnstcw
push
fnsave
mov
leave
sub
loope
mov
test
psllq
jmp
stc
add
cmp
cli
xchg
jge
pop
outsb
je
cmp
scas
dec
popf
loopne
scas
test
vpmacsdql
xor
mov
fistpl
das
movsl
push
mov
or
test
jmp
jne
xor
imul
aas
sahf
popf
popa
dec
or
inc
stos
jecxz
lret
mov
jmp
cmpsl
pop
mov
push
jg
insb
and
mov
and
mov
add
je
lcall
addr16
test
or
pop
inc
push
pop
arpl
sbb
push
jnp
cmp
xchg
mov
in
fnsave
inc
lods
data16
ja
xchg
outsb
mov
mov
jl
add
xor
sub
xchg
adc
mulb
cwtl
inc
fdivrl
js
fistl
xor
push
pop
icebp
out
popa
imul
adc
movsb
cs
pop
cmc
inc
mov
repz
and
sub
rol
dec
clc
sub
adc
repnz
pop
dec
shr
lea
lret
icebp
ja
jns
test
inc
ja
dec
sub
and
xchg
xor
jne
call
lock
stc
clc
and
outsb
clc
insb
lret
xchg
aam
or
in
pop
subl
jae
imul
push
out
in
jne
or
mov
imul
lock
jbe
push
add
dec
outsb
pop
je
xchg
cmp
popf
lods
scas
adcl
mov
scas
aam
js
mov
sbb
outsl
dec
fisubs
js
pop
xor
mov
jb
fscale
lock
out
adc
popfw
or
dec
dec
sahf
sbb
adc
into
out
sub
sub
cmc
cmp
int
add
xor
scas
out
jp
fsts
enter
scas
pop
repz
in
lods
lods
cmp
dec
push
dec
xor
js
push
pop
sarl
push
mov
test
push
and
sub
cmpsb
popf
pop
pop
inc
sub
jp
ja
rcrl
fiaddl
push
mov
insl
jnp
aaa
stos
dec
push
cmp
rolb
test
call
or
inc
out
cmp
jo
outsb
cs
sub
push
nop
fstpl
xor
sub
adc
scas
inc
hlt
out
ljmp
popa
sub
cmpsl
inc
xor
xchg
cmp
jns
and
divb
in
jne
jae
inc
inc
scas
jb
daa
lahf
scas
arpl
or
into
xor
sub
pop
mov
orl
mov
and
jecxz
sarl
mov
push
jle
xchg
dec
int3
dec
adc
lods
mov
pusha
in
inc
cld
fdivrs
mov
dec
jnp
cmp
out
xor
out
mov
mov
je
adc
add
mov
xchg
cmp
and
loopne
pop
stos
push
out
aad
clc
jbe
repnz
mov
aas
cmc
imul
xchg
ljmp
inc
mov
imul
mov
out
cmp
repnz
ficoml
inc
xchg
mov
in
and
jmp
xchg
inc
cmpsl
sub
and
outsb
adc
adc
fimuls
sbb
push
mulb
out
ret
add
xchg
mov
push
adc
mov
pop
daa
rcrb
fwait
aad
test
jecxz
mov
jg
bound
scas
imul
enter
jno
scas
imulb
sbb
mov
outsl
fbld
sbb
stc
shl
ss
sbb
shr
repnz
or
test
insl
cmp
lret
jmp
mov
jae
push
cmp
mov
mov
jge
fwait
mov
ja
and
sbb
xor
mov
cmp
mov
pop
in
int3
mov
xor
cmp
rcrl
jp
xor
icebp
femms
lods
mov
mov
fisubrs
pop
mov
daa
icebp
mov
mov
jp
lret
and
and
adc
mov
add
imul
dec
pop
fildll
mov
push
xlat
dec
les
out
daa
inc
movd
mov
mov
mov
inc
xor
rorb
sub
in
fs
mov
mov
stos
sub
push
test
push
mov
lahf
out
jle
idivl
ja
lcall
xor
pop
or
fmuls
mov
cs
mov
pop
mov
inc
cmpsl
test
jl
add
lock
xor
adc
inc
in
pop
xchg
test
cmp
test
test
jecxz
push
stos
cmp
adc
cwtl
xlat
aas
jmp
sub
xor
mov
cmp
pop
loop
scas
popf
call
jge
adc
stos
mov
jbe
xor
in
cwtl
arpl
outsl
inc
enter
xor
inc
adc
jb
push
xor
mov
jecxz
cld
or
mov
arpl
cmpsb
inc
pop
cld
je
cltd
stos
ret
jns
andl
dec
in
movl
mov
jno
jp
jmp
xchg
jecxz
inc
ret
push
and
push
inc
ja
mov
jg
add
sub
sub
dec
rolb
lock
fidivrl
mov
push
lods
or
or
xor
mov
mov
dec
je
jns
add
shll
aaa
mov
jg
xor
push
andb
jns
mov
mov
es
cld
pop
pop
lret
test
das
push
pop
cmp
lcall
push
push
lock
jne
mov
shll
cmp
aaa
icebp
and
cmp
outsb
data16
mov
mov
shrb
sbbb
jg
cmc
mov
cld
out
sar
xor
ljmp
mov
dec
mov
mov
inc
and
push
in
mov
xchg
sbb
sbb
dec
xchg
cmp
test
imul
std
sbb
hlt
jo
dec
fildl
mov
ret
int3
xor
xchg
mov
fs
pop
inc
push
lds
adc
leave
fdivr
dec
xchg
mov
push
inc
fcoms
mov
insl
cmpsl
sbb
lds
mov
mov
jo
pop
mov
and
jnp
or
aas
mov
inc
leave
push
push
sbb
clc
scas
push
adc
cli
jmp
out
cmp
stc
sahf
mov
das
adc
mov
adc
or
orl
fsubs
popf
test
and
rorl
mul
jge
test
loop
push
xor
loopne
js
inc
popf
and
out
sbb
xor
test
decb
lods
mov
outsl
pop
test
fsubrl
loope
xchg
sbb
sub
and
mov
sbb
xor
movsl
push
sarl
jb
int3
ret
sbb
aas
and
xor
pop
cmp
dec
daa
or
mov
cwtl
push
pop
or
jns
mov
out
test
addr16
cmp
sub
jnp
sub
fsubl
xchg
jl
jecxz
jmp
ret
xor
jle
mov
loope
push
xor
leave
std
adc
cmp
cmpsl
cmp
lahf
loope
data16
es
push
enter
cmc
and
jp
sarb
xor
dec
sbb
cmp
in
es
mov
mov
mov
fwait
xor
sub
enter
mov
xchg
pop
lahf
arpl
mov
pusha
jp
mov
out
je
aas
out
inc
mov
inc
cs
push
outsb
cmp
insl
outsb
lock
pop
sub
popa
and
cmp
incl
xchg
les
lahf
addl
add
cmpsl
push
scas
jle
xor
je
cmp
in
aas
pop
xor
fsubrl
xchg
scas
test
scas
push
arpl
sahf
xchg
aas
mov
call
cltd
int
mov
jno
aad
inc
or
cmp
repz
xor
xlat
dec
sub
pushf
out
mov
pop
jo
mov
adc
repz
aam
rclb
inc
jle
js
adc
hlt
mov
dec
push
aad
cmp
mov
jmp
daa
jae
in
dec
es
jmp
and
inc
leave
mov
lods
pop
cmp
ljmp
fwait
shrl
push
xchg
in
int3
cmp
ljmp
dec
mov
mov
jae
lock
jnp
xchg
icebp
rolb
xor
out
fisubrl
imul
push
int3
test
mov
jecxz
lea
inc
int3
add
ret
mov
movsl
or
cmp
outsb
pop
cs
push
jno
jmp
inc
and
ret
dec
dec
pop
sub
cmp
rorl
mov
ds
mov
je
fmuls
push
jne
adc
cld
fistps
scas
mov
jo
sbb
inc
sub
test
iret
insb
pop
adc
mov
lods
push
cmp
pop
sbb
sub
lods
lods
push
xchg
cwtl
leave
mov
jg
dec
fs
sub
adc
xchg
xchg
inc
ds
pop
mov
push
sbb
ror
adc
push
mov
ret
in
sub
mov
je
xchg
nop
jnp
adc
pusha
jmp
lahf
movsl
mov
or
or
cld
and
push
sub
subb
jp
mov
inc
xchg
fcoms
pusha
outsb
les
sbb
xchg
fnstsw
and
pop
add
sbb
cmpsl
sbb
sub
mov
mov
ljmp
lock
xchg
cmp
test
jle
add
xchg
jb
pop
push
and
add
arpl
xor
sbb
sbb
xchg
mov
push
out
leave
pushf
out
lock
xor
cmp
adc
in
mov
rol
in
nop
popa
xchg
inc
mov
ret
mov
or
mov
movsl
mov
cwtl
in
inc
or
jo
pop
and
sahf
int3
sti
arpl
push
loopne
mov
sbb
push
in
jbe
adc
inc
in
aam
idiv
cmp
rorl
lods
lods
add
int3
mov
mov
call
xchg
fldt
int
add
rol
les
scas
jne
cmp
pop
movsb
sbb
cmp
add
shlb
push
testl
pop
xchg
aam
icebp
mov
inc
nop
or
rcll
scas
inc
fucomip
inc
in
inc
push
jb
movsb
movsb
outsb
jb
xor
or
xchg
mov
dec
and
ret
push
femms
and
add
sub
and
gs
xchg
cwtl
shll
enter
xor
lods
outsb
sbb
sub
rorb
add
pop
lods
adc
icebp
or
lcall
ret
adc
stos
dec
xlat
in
lret
cmpsb
mov
cwtl
mov
push
sbb
cltd
subl
shrb
fiaddl
xor
inc
dec
jo
lods
push
ja
or
or
push
test
dec
jecxz
inc
dec
imul
lret
xchg
sbb
mov
xchg
dec
testb
cmp
out
sar
int
lock
or
cmc
mov
xor
rorb
sub
inc
pushf
adcb
int
xchg
fistps
pop
sbb
stc
adc
push
xchg
mov
pop
in
sti
jmp
sarl
fwait
mov
sbb
stos
xlat
adc
add
out
lds
imul
cmp
nop
inc
test
dec
push
cmc
sub
loop
cltd
test
xor
rcll
pop
sbb
sbb
mov
out
inc
mov
cmpsb
icebp
hlt
adc
mov
xchg
je
cmpsl
mov
clc
pusha
bound
nop
insb
or
mov
fcoml
push
rorl
ds
push
test
sbb
lea
repnz
sub
inc
out
and
mov
jecxz
cmp
inc
push
or
jl
pop
into
cli
dec
push
pop
jle
or
fdivl
cmc
xorb
mov
sbb
or
mov
aaa
lahf
shll
pop
inc
push
xchg
mov
xchg
popa
sti
mov
ret
pushf
or
gs
shrb
or
push
xor
ja
jmp
out
leave
dec
aad
in
fmul
jb
gs
repz
icebp
mov
push
xor
fbld
push
std
popf
fldenv
imul
popf
push
lcall
in
jmp
cwtl
xor
push
sar
inc
scas
ja
jno
lcall
xor
push
dec
repz
nop
add
das
jns
or
jo
sbb
xchg
mov
addb
cs
jp
hlt
sahf
in
mov
xchg
cmpsl
fcomp
xor
popa
mov
ja
cmp
and
in
and
aas
enter
dec
mov
ljmp
cmp
jg
push
ror
mov
ret
mov
mov
sbb
hlt
mov
test
cmp
add
xor
fucomp
pop
inc
ds
daa
popf
mov
test
loopne
sbb
pop
and
sbb
mov
mov
ja
sub
sbb
shll
cmp
adc
into
mov
add
cs
cmp
mov
shrb
decb
mov
xchg
mov
dec
jg
jnp
push
sti
xchg
adc
out
pop
xor
mov
or
pushf
pop
and
or
repz
pop
inc
add
inc
cld
mov
jg
mov
xchg
enter
scas
out
sahf
or
pop
dec
ss
cmc
cmpb
push
out
pop
sub
mov
int3
out
dec
cmp
push
addr16
mov
and
fstpt
rorl
scas
dec
punpcklbw
pop
xchg
es
aam
push
ja
loop
push
jnp
bound
pop
pop
stos
pop
mov
inc
setle
ds
add
xchg
sub
xchg
out
cmp
jl
cwtl
lret
outsl
mov
mulb
shlb
push
add
loope
jmp
pushf
push
jno
pusha
jp
rcll
jnp
ja
popa
push
add
xchg
fistpl
cwtl
jge
push
and
lock
sub
dec
repnz
outsl
fidivrl
pusha
sub
dec
js
aad
ret
int
dec
movsl
lcall
pop
or
mov
cltd
mov
cmpsl
cmp
add
cs
sub
fwait
data16
mov
mov
in
mov
mov
outsb
xor
imul
xchg
xchg
adc
cmpl
adc
inc
xor
lcall
mov
int
cmp
clc
add
xchg
in
in
sbb
dec
in
popa
mov
xor
ja
pop
pop
rcrb
cmpsl
mov
or
xchg
cmp
adc
xchg
hlt
push
push
scas
dec
stos
out
mov
je
mov
imul
sub
pop
std
mov
and
js
gs
ret
enter
mov
das
add
jg
jo
sub
sub
sub
xchg
pusha
loopne
jno
gs
cmp
movsl
push
fwait
lock
sub
pop
shrl
mov
leave
xchg
scas
lret
aam
inc
or
clc
out
xor
test
test
mov
pop
bound
cld
in
mov
in
filds
sar
loope
lret
lahf
ss
movsb
xor
sarl
push
mov
stc
xor
mov
std
sub
out
inc
icebp
leave
pop
loope
mov
lahf
adc
pushf
mov
mov
sub
jmp
adc
loope
dec
call
lret
lahf
xor
dec
andb
xor
test
sub
xchg
das
ljmp
push
sahf
dec
lock
cltd
loope
mov
ds
fdivrp
xorb
cmc
push
push
pop
cmp
stc
int3
dec
cmp
std
pushf
iret
leave
test
xor
fisttpll
push
cmp
sub
ss
lea
sahf
inc
cld
sbb
lret
pop
jmp
jecxz
movsl
cmc
ret
mov
in
inc
fwait
mov
jne
jge
pop
xchg
add
sub
shr
mov
nop
mov
sbb
scas
pop
sub
sub
fldenv
xor
shl
jo
xchg
outsb
mov
or
mull
mov
fwait
jns
jge,pn
fimuls
sub
into
addl
mov
lock
out
xchg
stos
enter
cmc
mov
in
lds
testl
cld
insb
enter
push
pop
xor
mov
xchg
cmp
outsl
pushf
in
sarb
lea
scas
rcl
stos
js
es
xchg
pop
leave
mov
sub
jae
cmp
jae
and
push
jge
pop
mov
and
or
mov
test
repz
fadds
cmp
cltd
aaa
fmulp
mov
or
lea
sub
call
fnstcw
in
jns
test
stos
pop
pop
dec
cmp
out
sti
xchg
sti
push
dec
pop
lods
lods
dec
mov
lahf
mov
ja
std
lods
sub
jno
jne
insb
dec
sbb
inc
sbb
sub
sbb
sbb
push
mov
dec
sub
subb
push
add
addl
inc
dec
and
mov
add
push
pop
lods
fidivl
xor
pop
mov
in
or
test
popl
mov
int3
ljmp
xchg
mov
imul
or
mov
cs
jnp
test
push
scas
add
mov
cmp
arpl
stos
outsl
xchg
ljmp
std
and
mov
out
scas
lods
in
sbb
pop
ret
adc
or
pop
je
setge
dec
mov
nop
fnstenv
ret
stos
inc
mov
lret
jb
lods
cmp
xlat
mov
in
sbbl
es
push
sub
rclb
fldl
fs
cmp
fmuls
out
movsb
mov
mov
pop
push
or
dec
mov
jg
insb
arpl
mov
pop
cmp
enter
scas
jecxz
stos
hlt
dec
dec
mov
in
aaa
inc
mov
push
mov
shll
popf
popa
xlat
or
sbb
test
jg
popf
negb
pop
das
push
push
add
jo
iret
jp
bound
jnp
nop
dec
nop
mov
data16
in
popf
gs
cmp
xor
in
aam
add
out
imul
jb
lods
or
cmp
fcomi
lretw
mov
dec
jae
mov
nop
movsl
push
lret
in
mov
xor
dec
and
pusha
push
push
popf
and
push
pusha
rclb
xlat
sbb
and
cs
addr16
outsl
insl
inc
pusha
pop
sub
cwtl
push
insb
stc
sbb
in
push
mov
cwtl
ss
out
clc
loop
inc
in
adc
lods
mov
add
stc
popa
and
xchg
cmp
sahf
inc
icebp
xchg
nop
movsl
jbe
movsb
jmp
aaa
arpl
js
addr16
or
loope
mov
ljmp
sub
leave
jno
pop
cmpb
pop
dec
and
fsubs
dec
in
lea
rolb
mov
xchg
fsubrs
jl
jnp
mov
sbb
ljmp
roll
mov
shll
inc
fisubrl
adc
jo
je
movsb
sub
movsl
enter
fimuls
dec
cmp
arpl
or
test
pop
cwtl
aas
inc
test
lret
inc
cmc
cmpl
add
pop
dec
stos
cmp
xor
in
shrl
jnp
or
mov
mov
lea
sbb
push
aam
xchg
push
bound
loop
bnd
pop
mov
stos
jp
fnstenv
cmpsl
jnp
int
and
jge
pushf
sbb
jae
dec
or
fisubrl
inc
jnp
push
inc
outsl
sub
pop
mov
in
adc
and
arpl
scas
out
xchg
mov
xor
jecxz
cmpsb
push
loopne
sbb
jnp
movsl
nop
xchg
dec
les
and
cmpsb
xchg
push
outsl
xor
xlat
daa
cwtl
push
mov
xor
ret
mov
pop
pop
xchg
loopne
sub
mov
mov
jge
dec
and
dec
ds
xor
and
int3
lods
popa
fcmovnbe
fcompl
gs
loop
dec
or
ljmp
movsb
jno
xorb
sub
inc
push
je
sub
orl
mov
pop
inc
das
add
std
es
xorl
stos
orl
and
or
xchg
sbb
mov
push
iret
xchg
mov
cbtw
mov
push
leave
jmp
pop
sub
fldt
sbb
addr16
pop
into
xchg
push
push
js
push
inc
loope
aas
pop
sbb
nop
orb
or
les
xor
add
dec
ret
ss
daa
mov
hlt
imul
not
fisubrl
adcb
sbb
jle
mov
mov
push
fadds
dec
adc
sahf
into
test
decb
popa
pop
dec
shlb
es
cmp
mov
jmp
xor
pop
imul
adc
lods
mov
icebp
enter
jo
outsl
icebp
and
sti
add
popf
cmc
fs
ljmp
icebp
test
jns
jecxz
out
popf
shlb
ja
pushf
adc
ret
jnp
jno
mov
push
fsts
insl
add
rcrl
lret
cmpsl
std
gs
jo
push
test
in
mov
movsl
mov
or
cltd
pop
and
in
or
pop
vpunpcklwd
adc
sub
xor
orl
movsl
lcall
iret
cmp
lcall
jg
or
xchg
mov
adc
jp
add
xor
shl
cmpsb
pause
dec
pop
adc
xor
ret
pop
popa
jno
xchg
ret
pop
mov
pushf
ljmp
popa
les
dec
xchg
stos
lea
in
sbb
je
repz
sub
fiaddl
and
test
pop
jb
mov
adc
ds
fildl
gs
pop
cltd
lea
push
mov
les
xor
pusha
or
fwait
outsl
inc
das
pop
pop
rolb
dec
jmp
stc
jle
adc
dec
outsl
and
cmp
or
in
add
scas
dec
out
mov
cmpsb
jne
mov
jl
pop
or
mov
xchg
dec
gs
sti
leave
mov
xor
xor
xor
pop
gs
test
loopne
mov
adc
sbb
cs
addb
inc
mov
add
xchg
jo
pop
jb
fildll
dec
cmp
fldl
mov
push
out
jmp
mov
jl
inc
and
inc
pop
push
mov
dec
mov
sub
pusha
fs
add
pushf
add
jb
das
jns
into
pop
ret
mov
icebp
je
movsb
mov
push
or
mov
ja
xchg
jl,pn
in
mov
fsub
cmp
sahf
test
call
idivb
mov
test
aas
xor
or
pop
aad
ret
mov
push
dec
or
pop
fstps
push
add
dec
leave
subb
fcomps
jle
and
repnz
and
sbbl
push
dec
push
lret
sub
mov
sbb
enter
sub
or
pop
or
inc
inc
sbb
iret
arpl
mov
mov
jle
fimuls
outsl
imul
or
fstpl
xlat
ficoml
sti
xchg
test
sub
fwait
repnz
jnp
and
mov
aam
cmpsl
inc
cmp
inc
cmp
cmpsl
gs
sbb
push
pusha
push
mov
sub
pop
mov
loopne
pop
lea
sti
xchg
jmp
out
lods
pop
xor
enter
jbe
sbb
shl
fmuls
lret
push
clc
mov
and
or
movsl
adc
jo
lahf
push
in
mov
js
mov
shll
test
xor
lret
sub
std
cmpsl
jae
imul
pusha
clc
push
arpl
jo
loope
push
aad
dec
test
pop
lods
hlt
cmp
add
daa
daa
je
int3
jp
xor
stos
push
ficoms
xchg
insl
push
cmp
cmpsl
das
adc
out
arpl
cwtl
es
sub
sub
push
aaa
cmp
sbb
fldenv
add
ljmp
pop
mov
mov
sbb
inc
iret
inc
push
mov
dec
or
dec
mul
inc
add
pop
sub
pop
cmp
pop
jge
mov
push
repz
nop
pop
and
ja
das
xor
pop
xor
pop
xor
mov
andl
mov
jp
sub
std
push
push
push
dec
mov
mov
mov
mov
imul
shlb
inc
mov
rcrb
in
movsl
and
xchg
xorb
and
jae
inc
mov
aam
or
out
pop
aaa
cld
imul
js
sub
push
jecxz
adcl
pop
rcl
fsubr
sub
xchg
mov
es
mov
jbe
jne
stos
lahf
insl
dec
int3
xchg
les
insb
or
mov
sbb
fcom
sub
mov
inc
incb
push
sahf
or
lea
jmp
lcall
lea
mov
jecxz
aas
addl
lcall
xchg
mov
scas
shl
rcl
or
mov
or
addb
dec
mov
mov
orb
cli
icebp
add
jnp
and
iret
stc
jge
cmpsb
inc
sbb
lret
cld
stos
dec
lahf
mov
mov
stos
or
int
mov
jo
stos
stos
xchg
mov
mov
push
and
pop
int3
mov
subb
cmpsl
inc
les
sub
jb
dec
push
push
mov
cmpsl
jl
xor
jmp
pop
rcrb
mov
jno
out
fcompl
getsec
mov
pop
add
cmp
bound
int3
nop
out
xchg
push
out
test
addb
shrb
add
pop
push
jle
enter
cmc
test
and
data16
ljmp
data16
lret
mov
dec
sti
cmp
pop
push
outsl
inc
loop
pop
stos
sar
test
and
inc
sbb
add
andl
popa
push
jae
lods
cmpsl
rcll
push
jb
xor
xchg
nop
ljmp
imull
sti
test
das
jb
adc
rep
sbb
rcpps
jecxz
pop
std
sti
cmp
dec
pop
mov
inc
sbb
push
inc
fsub
shrl
pop
scas
imul
mov
es
adc
mov
sbb
dec
cmp
imul
jno,pn
jg
mov
jb
mov
fcomps
incb
mov
cmp
lahf
call
setnp
dec
aam
jnp
pop
and
inc
insl
lock
sbb
enter
lds
repz
icebp
enter
pop
and
pop
cmpsb
fdivrs
insl
push
lret
jno
xor
rolb
pushf
js
jecxz
repz
mov
test
mov
ja
mov
movsl
outsl
es
mov
adc
test
inc
inc
cmpsb
ljmp
stos
movsb
dec
xor
insl
into
and
mov
add
stc
push
push
mov
xchg
stc
lods
lods
into
adc
xor
push
push
leave
adc
push
stos
pushf
xor
adc
stc
scas
sbb
orb
call
inc
ds
sbb
xchg
xor
pusha
mov
scas
ds
pop
mov
stc
in
cmp
jne
pop
jge
jb
bound
lahf
or
mov
jno
dec
mov
xchg
mov
call
pop
call
cmp
push
cmpsb
jno
xorl
fldenv
das
ret
fprem
and
xchg
adc
xchg
loope
sbb
popf
sahf
pop
aaa
lahf
nop
jae
and
lds
inc
jge
inc
shlb
ud2
mov
xor
sub
fiaddl
sbb
stos
clc
sbb
xchg
xor
insl
jp
add
push
mov
xorb
js
inc
dec
mov
dec
aaa
sbb
add
xchg
mov
in
mov
in
pop
rorl
call
cmp
inc
stos
cli
negl
pop
scas
cmp
jns
jecxz
mov
xor
mov
bound
push
icebp
pop
insb
dec
in
pop
std
xor
fdiv
shlb
pop
mov
out
scas
sti
repnz
inc
xchg
cli
int
jecxz
inc
inc
sub
mov
lcall
daa
jp
pop
pop
add
add
insl
cmp
cld
xchg
xor
sahf
std
in
cmp
adc
loope
jne
mov
cmpsl
call
sbb
xor
std
or
into
inc
pop
out
jne
sub
adc
fs
pusha
cmpsl
out
popa
dec
inc
adc
adc
cwtl
int
mov
rolb
push
mov
cmp
dec
jbe
sti
iret
int3
cltd
fsubl
fisttps
push
pop
mov
dec
fstpl
icebp
cmpsb
cld
cmp
pop
cmpsl
bound
nop
das
arpl
stos
xor
xchg
adcl
lock
out
sub
xor
int3
cli
pop
out
movsb
popa
cmpsl
fistl
jp
xchg
mov
xor
aad
dec
cmp
loop
mov
or
xchg
inc
mov
pop
lea
sub
lods
cmc
dec
and
cmp
jecxz
out
ror
jmp
fucom
js
sbb
jecxz
mov
add
mov
aad
rcrl
lea
aas
pop
sbb
sti
push
mulb
aad
cmc
inc
lock
or
xlat
push
and
jecxz
cmp
pop
mov
jne
xor
xlat
ficompl
cwtl
sub
dec
hlt
icebp
mov
pop
xchg
mov
mov
lret
push
ljmp
pop
pop
mov
dec
scas
jnp
push
cmpsl
push
sub
movsb
in
mov
cmpsl
push
pop
xchg
jbe
xchg
clc
adc
xchg
rcll
sti
shrb
push
mov
mov
decb
fs
mov
and
mov
into
xor
push
push
jno
les
mov
ds
int
add
and
data16
push
jmp
pushf
icebp
push
xchg
repz
lds
cmc
xor
xchg
testl
dec
pusha
inc
dec
sub
jnp
inc
inc
daa
je
or
gs
sbb
negl
movl
cwtl
xchg
clc
cwtl
popf
pop
mov
imul
add
cmp
pop
js
mov
adc
adc
cmp
mov
fnstenv
loop
pop
or
xchg
mov
or
or
push
sbb
cmpsl
jne
xor
out
fucomi
xor
pop
jns
ret
insb
jg
fwait
pop
xor
inc
scas
cmp
ds
inc
or
loopne
mov
mov
adc
xchg
xor
xlat
jp
cmp
xchg
jge
jg
jns
mov
xchg
pushf
mov
or
loope
loop
insb
cmp
rol
filds
add
stos
cmp
les
sbb
jg
mov
loope
xor
out
or
les
pop
aam
mov
shlb
rclb
test
or
xlat
je
loopne
sub
or
imul
or
outsb
sub
scas
mov
push
jne
jbe
adc
ret
aad
xor
mov
lods
inc
xor
xchg
stos
lcall
dec
stos
push
adc
cmp
adc
cmp
lret
inc
pop
pushf
push
mov
inc
loop
popl
jg
pop
scas
mov
lcall
cltd
daa
hlt
jmp
int
lahf
fisubs
call
xchg
sbb
mov
cmp
out
add
fldenv
adcb
js
out
push
movb
mov
imul
dec
jle
pop
pusha
outsl
push
movsl
cmpsl
outsb
sti
movsb
sti
outsl
mov
rcrb
pop
fdivs
xchg
shll
cmp
pushf
jl
loopne
cmp
jae
xchg
or
cmp
cmp
dec
loopne
cmpsb
pop
dec
mov
or
adc
mov
mov
je
jmp
leave
mov
fistpll
mov
mov
cmp
sub
popf
sbbl
cmp
jge
add
clc
stc
push
enter
sbb
or
push
adc
icebp
push
push
icebp
mov
xor
cs
adc
inc
out
scas
xor
push
loope
data16
ja
and
cmp
lretw
cs
mov
cli
add
sub
movsb
mov
xchg
pop
sub
sub
pop
fnsave
je
lds
pop
mov
jle
data16
mov
inc
stos
add
call
lods
es
xor
mov
loope
cmp
push
push
dec
jne
inc
mov
stc
push
adc
push
mov
jge
shrb
cmpl
popf
stos
shlb
push
pop
dec
xchg
out
data16
subb
insl
cmpsl
imul
xchg
into
dec
mov
pop
pushf
xor
pop
or
shrb
cwtl
lret
adc
addr16
popa
lcall
xor
push
xor
lcall
inc
push
in
mov
rcrb
sahf
outsl
mov
xlat
hlt
dec
pop
ss
test
mov
ret
sbb
sub
push
inc
adc
mov
pop
sub
pop
stos
test
and
aad
into
icebp
sbb
sbb
dec
mov
imul
out
mov
addl
push
shrl
push
and
push
test
nop
divl
gs
imul
and
sub
sub
lahf
ret
call
mov
dec
cli
mov
jnp
outsl
es
sbb
sub
xchg
push
subl
dec
push
shll
add
push
jnp
mov
fbld
movsl
in
xor
sbb
mov
js
dec
pop
aad
add
dec
adc
lret
outsl
push
int
push
or
push
and
out
inc
xor
std
or
stos
int3
jg
arpl
adcb
je
sbb
cmp
pop
ss
imull
cmp
mov
notl
fcmovne
mov
mov
repz
xchg
xchg
wrmsr
adcb
adc
sbb
repz
xchg
xchg
pop
outsb
leave
pop
scas
sbb
adc
loop
add
cmpsl
mov
dec
pop
xor
pop
sarl
pop
test
pop
mov
dec
es
mov
stos
in
sub
xchg
addr16
bound
inc
mov
dec
in
sub
repz
jo
cmp
fldenv
icebp
push
cmc
xchg
ret
adc
test
xchg
dec
mov
push
cs
mov
fbstp
mov
mov
push
cltd
jp
fcmovb
cmpl
aam
jge
ss
cmc
mov
loope
mov
xor
mov
sbb
push
leave
and
inc
fimuls
fsts
add
cs
ljmp
insl
adc
lods
hlt
jnp
scas
out
fdiv
inc
xchg
out
hlt
cmp
or
in
mov
js
jno
pusha
fisttpll
inc
xchg
test
dec
fcmovnu
test
xchg
inc
add
jbe
fstl
mov
bound
xor
enter
mov
or
and
lods
mov
ljmp
push
clc
das
inc
jae
dec
add
dec
jl
lahf
push
inc
mov
cmpsb
sub
addl
add
inc
pop
repnz
jecxz
push
imul
pop
adc
sbb
xchg
jbe
outsl
cmp
mov
mov
adc
adc
fsubrs
jecxz
jno
movsb
rcl
pop
cltd
push
je
andb
ja
mov
jno
add
pop
ja
add
sar
es
leave
mov
dec
lods
jp
scas
push
test
jmp
pop
add
mov
and
jle
bound
sbbl
std
insb
pop
adc
push
mov
pop
inc
loop
lock
sbb
xchg
stos
lret
outsb
sub
test
addr16
imul
adc
test
sbb
ja
mov
fs
jns
loopne
cmp
hlt
popf
subl
notb
xchg
cmp
cld
cmc
pushf
jg
mov
sbb
dec
scas
and
rclb
in
sbb
rcl
xor
and
ds
mov
out
or
aam
or
rcrl
jae
or
in
cmpsl
mov
mov
sbb
or
adc
das
and
dec
dec
mov
xor
push
lods
lods
enter
lea
xchg
push
cmp
dec
sbb
mov
aad
cmp
js
fimull
or
mov
pop
scas
mov
fmuls
repnz
mov
push
ds
lods
pop
aad
test
stos
subb
hlt
mov
add
or
cld
push
orl
aas
jns
adc
jg
push
mov
pop
dec
or
inc
mov
xchg
xchg
xor
mov
cld
aad
and
in
cmp
xchg
loope
sbb
push
and
push
xchg
adc
inc
cmc
mov
dec
cmc
cmpb
fcoml
fs
jns
xchg
xchg
and
lahf
xor
into
lea
loopne
sqrtps
fisttps
stos
scas
jns
xor
add
pop
adc
fwait
or
mov
mov
scas
xor
sub
roll
mov
cwtl
cld
jle
xchg
mov
sub
dec
dec
out
repz
stos
mov
stc
inc
lods
inc
gs
push
out
adc
in
jo
into
xor
nop
inc
pop
data16
sub
xchg
sub
mov
xor
and
scas
mov
cmc
loop
inc
fcmovnb
xchg
and
cltd
adc
lret
lods
sti
cli
int
fs
add
xorl
into
jb
adc
mov
test
cld
pushf
push
cld
dec
sub
pop
aaa
push
fsubrs
inc
xchg
fldl
adc
mov
xor
add
add
pop
enter
ret
xor
mov
scas
pop
bnd
shlb
xchg
sbb
sbb
ja
fs
pusha
repnz
insb
dec
inc
xorb
mov
rorl
pusha
add
cmc
jo
fsubrl
xchg
xchg
lea
mov
jecxz
mov
add
push
cmpsl
cmp
mov
sbbl
scas
inc
cltd
mov
add
add
push
roll
push
push
fldt
adc
xor
dec
inc
int
clc
or
mov
imul
sub
fsubr
repz
jb
pusha
pop
sbb
sbb
xchg
je
popa
push
xchg
sub
aaa
push
dec
aas
adc
xchg
out
out
cmpsl
fiadds
push
fcmovb
outsb
mov
insl
in
and
clc
push
std
shl
add
xchg
in
test
xchg
sbb
addr16
pop
iret
fisubl
test
pop
sub
pusha
into
cli
aam
mov
jno
arpl
xor
and
leave
dec
je
xchg
pop
ret
sti
or
stos
stos
icebp
fs
pop
mov
fldcw
mov
or
mov
push
or
jnp
adc
add
sahf
dec
in
dec
jg
repnz
pop
pop
mov
push
ret
adc
adcb
loope
sub
jmp
push
mov
dec
mov
ja
pop
inc
jno
enter
sub
mov
les
bound
pop
and
daa
dec
xchg
xchg
fidivrl
fnstsw
xor
inc
shll
sub
push
pop
ja
aas
jne
loop
data16
insb
neg
out
movsb
or
add
or
lea
jnp
leave
sbb
mov
dec
scas
inc
fildl
lods
lds
jns
in
movb
and
shr
sbb
dec
xchg
out
fs
ja
sti
in
pop
xchg
hlt
cmpsb
lock
push
cmp
or
test
mov
and
andb
aaa
jae
scas
xchg
pop
mov
sub
mov
lret
mov
cmpsl
push
fstl
adc
arpl
aaa
xor
xchg
sub
sarb
clc
mov
ss
jo
dec
dec
mov
nop
cmp
sbb
and
div
sub
sar
fisubrs
sub
adc
push
sarl
adc
cwtl
mov
das
int3
sbb
sbb
add
push
adc
fsts
mov
stc
cmpsb
sbb
in
movsl
loopne
ret
cli
loopne
movsl
test
or
or
add
jb
mov
cs
repz
push
pusha
arpl
xor
sbb
pushf
insb
xor
ficoml
inc
fisubl
xchg
xor
notb
push
jb
and
push
fildl
push
push
mov
pop
push
or
ljmp
shl
or
into
subb
nop
out
adc
inc
frstor
dec
or
stos
ja
jo
pop
loope
movhps
lock
lret
xchg
fisttps
in
clc
sub
flds
das
and
pop
in
sbb
xor
mov
push
js
mov
jno
out
dec
ficoms
push
aaa
xchg
aaa
inc
popf
loope
sbb
add
cwtl
jno
dec
and
cmp
mov
fdivs
jne
fistpll
shrl
sub
lock
ret
sbb
cli
call
adc
stos
lock
cmpsb
push
adcb
jno
out
mov
jns
fnsave
xor
gs
das
outsb
or
sbb
mov
pop
xchg
jae
push
in
bound
mov
into
orb
movsb
movsl
jge
mov
jnp
sub
lods
mov
nop
jg
insb
sub
pop
xchg
popf
mov
lds
sbb
sbb
pop
lds
mov
repz
xor
movsl
jae
ss
lret
daa
shll
or
std
mov
adc
pop
sub
cmp
sbb
mov
repnz
popf
test
xchg
dec
aaa
rclb
mov
inc
or
lret
movsl
fwait
lods
add
and
xor
mov
out
movsb
cwtl
inc
in
xchg
movsl
mov
sysenter
adc
mov
push
and
decb
je
mov
aaa
sbb
js
fnstcw
cmp
shll
hlt
adc
cmp
adc
mov
repnz
push
stos
mov
adc
dec
lret
aas
pushl
push
sahf
inc
cmpl
mov
call
add
int
mov
shll
add
push
neg
in
mov
mov
or
and
mov
mov
or
mov
cld
or
jle
lcall
push
insl
inc
xor
iret
xchg
jne
mov
repnz
test
lock
lahf
idivl
adc
mov
xchg
lea
es
jle
jb
inc
xchg
test
add
lahf
sub
pusha
sub
std
fdivr
or
dec
adc
mov
imulb
je
mov
mov
pop
into
mov
mov
in
in
popf
lret
pop
stc
repnz
cmp
inc
mov
adc
repnz
movsl
push
insl
jge
xchg
sbb
inc
test
cltd
js
sarl
jns
into
push
mov
push
add
mov
sub
arpl
xchg
cld
and
pop
push
orl
stos
loopne
xchg
sub
stos
fwait
divb
in
lret
jno
ds
ficompl
mov
inc
mov
push
xor
push
call
mov
mov
out
dec
sub
cmp
out
cmp
rcl
sub
outsl
push
push
push
popa
sqrtps
cmp
xor
ffreep
and
inc
push
dec
xchg
xchg
xor
leave
gs
xchg
inc
xor
js
mov
imull
xor
das
out
nop
push
and
ss
test
mov
mov
loopne
or
aaa
mov
pop
add
hlt
test
incl
lock
dec
shrb
sahf
lods
into
data16
xor
stc
xor
and
movsl
jecxz
pop
fwait
sbb
fadds
pop
popa
out
rep
shll
mov
sub
gs
sti
adc
sub
mov
iret
testl
jge
ds
cmp
sbb
xor
dec
sub
mov
adc
clc
roll
and
jecxz
inc
adc
int
sahf
or
cmpl
lds
and
outsb
icebp
dec
lock
lock
lret
sub
stos
lcall
or
jge
add
dec
cmp
mov
mov
pop
stc
loope
mov
inc
dec
cmc
pop
add
psubb
push
push
cld
punpcklbw
mov
xchg
scas
and
mov
leavew
push
jae
push
sub
lods
xchg
outsl
les
xchg
mov
dec
jle
out
xor
jge
lret
jnp
ficompl
lahf
loop
push
xchg
jno
test
gs
xor
ss
pop
mov
jne
add
push
inc
xor
call
xchg
frstpm(287
and
fwait
inc
add
cli
enter
xchg
sub
pop
cmp
rcrb
stc
in
out
dec
xchg
xor
sbb
aaa
sub
divl
xchg
ljmp
loope
gs
lock
mov
movsb
fsubs
pop
push
enter
pop
mov
or
jb
ret
dec
inc
push
pushf
add
out
sbb
cmpsl
sub
cmpl
inc
sbb
cmp
dec
adc
mov
dec
mov
pop
repz
cmp
arpl
lods
sti
push
xor
fisubs
mov
cli
cmc
inc
movsl
hlt
movsb
fildll
cmp
adc
or
and
fcoml
mov
cld
xor
out
add
jmp
jle
out
cs
sarb
mov
mov
dec
jge
pop
fnsave
testb
add
or
jge
adc
es
mov
push
add
adc
imul
push
fwait
rcrb
lcall
cmp
xchg
test
push
cli
std
rcr
imul
or
bound
std
lcall
js
push
push
xor
in
inc
in
imul
lcall
xor
rcl
jp
ja
dec
icebp
xchg
pop
stos
js
pushf
push
and
outsb
sti
hlt
aaa
inc
mov
in
bnd
sbb
mov
pop
enter
push
cmp
sbb
xlat
sub
mov
fcomps
ja
xchg
mov
xor
lods
push
push
mov
push
lahf
and
out
leave
int3
and
dec
or
jmp
lods
cmp
icebp
sbb
loope
mov
mov
xchg
les
loope
inc
xchg
cmpsl
aas
xor
in
xchg
fcomip
cmpb
ret
neg
popf
cmp
xchg
dec
jo
push
sbb
and
int3
mov
add
orb
insb
cmpsb
test
cmp
jo
xor
and
mov
cmp
test
ds
inc
fwait
or
dec
ds
or
fwait
pop
or
mov
mov
faddl
mov
and
js
mov
scas
sbbl
xchg
out
push
jae
jns
add
ret
out
push
sub
cmp
mov
fsubrs
bnd
sbb
movsb
mov
aaa
mov
jnp
jne
call
and
mov
cli
mov
cmpsb
aas
pop
inc
sbb
pop
sbb
and
iret
fsubs
insl
addr16
js
xchg
aaa
add
adc
loop
mov
std
cmpsl
mov
arpl
mov
xchg
add
jnp
mov
xor
pop
into
jmp
add
push
loop
bound
xor
xor
fsubr
inc
mov
adc
ret
mov
adc
adc
jmp
out
xchg
ljmp
ds
loop
jge
iret
dec
gs
lods
loopne
push
cmp
mov
push
push
addb
imul
lcall
je
fmull
inc
sbb
mov
mov
push
pop
add
xor
mov
inc
xor
sub
std
fs
xchg
lea
and
ret
ret
jnp,pt
sub
ljmp
das
xchg
not
jno
mov
dec
jl
out
daa
sbb
xor
jg
aas
mov
not
lret
out
mov
mov
push
stc
dec
mov
mov
sub
pop
pop
xchg
addr16
out
adc
mov
mov
cld
pushf
icebp
nop
jno
adcb
popa
xchg
mov
push
push
cli
bound
sbb
movsl
lret
xchg
popf
jns
cli
icebp
or
dec
mov
dec
je
pop
imul
fisttpll
adc
mov
out
adc
and
adc
mov
test
shrb
or
aas
clc
iret
imul
out
dec
insb
jae
mov
sub
xchg
jg
int
xchg
pop
iret
or
mov
test
cmp
xchg
or
inc
xlat
xchg
stos
sbb
cli
inc
dec
xchg
mov
inc
call
jecxz
mov
cmpsl
xchg
lock
fs
dec
dec
rorl
and
shlb
les
sarl
add
push
cmc
push
out
imul
xchg
xchg
or
cmp
pushf
jne
jle
xor
and
push
in
int3
inc
pop
adc
lods
xchg
cs
dec
idiv
sub
pop
das
xor
mov
in
and
xor
movsl
imul
cmpsb
add
xor
mov
psubq
push
sub
bound
pushf
adc
aaa
inc
sbb
je
nop
movsb
pop
dec
nop
lcall
rsm
dec
mov
jns
into
icebp
sti
add
cmpb
cmp
xchg
xchg
rclb
or
iret
push
jg
xchg
xchg
pop
popa
sbb
push
test
ja
mov
lea
out
pushf
xlat
fstps
dec
ljmp
or
leave
push
mov
sbb
cli
mov
call
cmp
mov
jo
ja
flds
popf
icebp
in
testl
jmp
and
push
pop
shlb
dec
xchg
hlt
xchg
int
divb
xor
iret
int
mov
add
push
bnd
ret
adcl
stc
lods
jle
and
lock
stc
in
or
faddl
xchg
aas
mov
or
cmp
icebp
jnp
adc
xor
mov
jmp
add
cmpsb
mov
push
js
mov
add
out
cli
mov
cltd
inc
xor
lock
popa
mov
rcrb
orl
sbb
or
inc
xor
dec
cld
int
push
out
into
dec
and
add
cltd
ret
sbb
decb
fs
loopne
sbb
into
call
ficoms
out
jo
lcall
ss
les
inc
pop
aad
stc
xchg
jecxz
imul
shll
mov
mov
enter
pop
mov
adc
add
sub
andnps
arpl
mov
arpl
jnp
nop
ret
mov
aaa
dec
cs
dec
xor
adc
aas
int
rcll
adc
addl
divl
and
das
push
dec
cmp
sti
outsl
fidivl
hlt
fwait
movsb
dec
fbstp
into
pop
test
and
imul
adc
xor
scas
pop
xor
mov
loope
insl
push
aaa
imul
mov
out
jo
fsts
loopne
adc
ds
pop
push
cwtl
push
adc
imul
add
xchg
sbb
pop
sbb
dec
mov
clc
clc
jg
fs
dec
and
cmp
xor
mov
push
ja
adc
sub
js
mov
cmc
cmc
testb
push
ret
jecxz
testl
int
testl
xor
sbb
fs
dec
mov
pusha
sub
loop
loope
push
test
addb
xchg
sti
icebp
int3
mov
sbbb
mov
fdivrs
hlt
roll
movsl
adc
insl
ret
in
mov
ds
mov
pop
mov
mov
dec
push
xor
xchg
mov
fisubl
adc
dec
imul
enter
mov
js
mov
lcall
and
rorl
mov
das
xor
in
and
out
add
testl
jp
out
fwait
pop
aam
dec
popf
pop
icebp
into
push
test
aas
insl
or
fwait
or
insl
xchg
or
aad
add
mov
dec
xor
xchg
mov
sbb
stc
and
add
xchg
leave
xchg
jle
jae
out
and
sub
sti
and
cmp
inc
js
mov
sbb
adc
mov
push
dec
lahf
cmp
sbb
sbb
cmp
lods
cmp
dec
ret
mov
loopne
cmp
test
and
inc
loope
lret
ja
adc
addr16
faddp
int
leave
mov
lods
movsl
sbb
mov
leave
adc
fisubl
lcall
pop
ss
mov
adc
sbb
enter
stos
cld
jl
mov
and
iret
imul
fsubrl
add
bnd
bound
jno
sbb
sub
or
sarl
lea
cmc
jns
cmovg
adc
ja
pop
pop
mov
mov
sbb
adc
fbstp
enter
push
popa
stos
es
enter
ret
stc
jbe
cmpsl
jo
mov
pop
cmc
lds
mov
sbb
mov
call
in
dec
jl
adc
sub
jl
xchg
mov
sbb
ret
pop
subb
mov
in
and
imul
in
lret
nop
enter
ret
jno
mov
inc
ficoms
cmp
dec
xor
mov
xchg
push
dec
movl
aas
nop
and
movb
repnz
push
mov
sub
shll
lods
dec
jb
shl
repnz
lock
or
mov
cmpsb
adc
push
sbb
out
pop
daa
push
ds
test
sub
pop
mov
call
movsl
add
lds
sub
popf
sub
or
pop
and
jnp
adc
inc
mov
mov
or
jne
mov
lea
or
adc
fwait
and
mov
lcall
enter
leave
sarl
or
adc
sbb
cwtl
adc
xor
jno
cmpsb
push
inc
scas
mov
call
xchg
aaa
pop
cmpsl
xorb
std
adc
push
into
xlat
dec
mov
sub
fwait
xchg
jns
push
jl
mov
pushf
adc
cltd
es
jb
pop
push
xchg
movb
sub
mov
and
icebp
loope
sub
lret
inc
or
cli
inc
ret
pushf
inc
mov
neg
sub
dec
adc
out
mov
aam
adc
aam
clc
jmp
scas
cmc
fs
mov
aaa
stc
xchg
push
test
fmul
and
in
lds
int3
xchg
sahf
or
pop
daa
movsb
and
aas
mov
and
push
rorl
lock
jns
test
xchg
mov
aam
fsubs
mov
and
in
shl
cwtl
clc
inc
lcall
mov
iret
aas
and
sbb
adc
repz
dec
sti
jl
ss
cmp
mov
or
cmp
xchg
xor
sar
pop
scas
mov
adc
pushf
or
popf
jae
enter
sub
jp
cmp
or
or
or
pop
popl
or
incl
enter
enter
mov
sarl
lds
frstor
nop
pop
push
sti
and
jg
ficompl
pop
lcall
leave
pop
sub
cmp
cmp
pop
in
cmp
icebp
sub
xchg
bound
popa
and
jnp
add
ret
cmp
mov
subb
or
push
xchg
inc
xchg
decb
dec
mov
fstpt
xor
sbb
repz
addb
iret
movsl
inc
jge
outsb
jl
cmp
fistl
sub
cs
shll
inc
fidivl
cmpsb
sub
jecxz
sub
movsl
ja
cmpsl
cld
out
xchg
jno
sub
test
cmc
xor
hlt
insl
leave
outsl
and
insl
sbb
pop
sbb
std
fsubr
subl
and
xor
stos
rcrl
sub
outsb
xor
in
test
mov
ss
jecxz
pusha
popf
add
add
xchg
pop
out
mov
pusha
test
mov
mov
sub
cli
fadds
mov
mov
and
sub
mov
sbb
rep
xor
adcb
mov
sbb
jae
ret
pop
sub
pop
push
xorb
and
iret
lret
add
mov
inc
fcmove
pushf
sti
mov
sub
jle
aam
adc
and
es
std
jecxz
out
push
xchg
mov
shrb
ss
cmp
jb
mov
frstor
add
xchg
xchg
cwtl
lret
xchg
or
add
movsb
or
mov
enter
ret
adc
mov
popa
adc
adc
andl
jne
xchg
icebp
cmp
ficoms
mov
test
clc
dec
lds
inc
lods
popa
push
mov
lahf
stc
xor
push
sbb
mov
xlat
push
mov
xchg
jne
stc
jecxz
cld
mov
add
inc
push
rep
jecxz
xchg
dec
xchg
mov
loopne
xor
jge
cmp
jae
mov
sub
or
sbb
std
mov
in
sub
dec
movsb
push
fldt
jmp
and
jns
out
pop
mov
aas
ss
jmp
fidivl
cmp
inc
das
xchg
adc
xchg
mov
adc
inc
pop
es
cmpsb
popf
or
lret
dec
arpl
cmp
aam
ljmp
xlat
bound
cs
jno
cmp
xor
dec
mov
imull
push
mov
inc
jo
xor
and
incl
sub
repz
test
push
out
lahf
cli
pop
test
cltd
sarl
outsb
xorb
das
sub
sahf
orl
fs
or
xor
lods
pop
mov
stos
ds
push
jbe
add
aas
or
mov
cmpb
pop
pop
sbb
loop
jge
addb
loop
in
jnp
push
aad
push
jne
mov
in
clc
cs
xchg
daa
adc
aad
add
aad
arpl
dec
das
lcall
ja
sarb
jnp
incb
mov
mov
sti
push
out
les
mov
loope
push
xchg
fwait
rcl
outsl
in
pusha
enter
push
pop
cmp
add
sbb
jo
cs
not
xchg
jle
mov
bound
sub
cmpsb
sahf
adc
dec
repz
and
int3
gs
xchg
addr16
lea
dec
bound
xor
movsl
cmc
xor
adc
and
lcall
test
out
cmp
jae
outsb
jg
test
sub
sbb
adc
sbb
jb
call
mov
or
lea
cld
mov
xchg
push
or
cwtl
outsl
inc
jl
neg
cwtl
popf
aas
pop
fistl
das
int3
sti
leave
mov
sub
fnstcw
outsl
mov
addr16
pop
xchg
nop
jmp
jb
and
repz
cmp
mov
ret
je
sahf
cmpsb
rorl
dec
or
jae
std
pop
adc
sar
in
pop
in
mov
push
insb
je
lret
in
add
xor
aaa
mov
leave
divb
pop
and
xchg
mov
cmp
bound
ljmp
repnz
out
mov
push
aad
sbb
adc
push
mov
pop
out
loop
lret
insb
int3
lods
xchg
inc
dec
pop
fcoml
icebp
aas
sti
adc
or
btc
adc
popf
lea
mov
in
xchg
cmp
loopne
xor
push
mov
clc
call
iret
les
sub
sub
inc
lock
mov
xor
sub
jge
adc
inc
in
out
jnp
popf
addr16
inc
xchg
mov
mov
jge
and
inc
mov
push
dec
test
inc
mov
lds
cli
push
push
scas
xor
stos
mov
les
fstpl
sub
ror
in
mov
jl
divb
dec
scas
mov
mov
mov
jno
push
sub
mov
lahf
sbb
mov
and
push
sbb
jae
push
arpl
sbb
loope
xsha1
cmpsb
mov
cmp
mov
pop
mov
mov
pop
mov
int
fildl
dec
mov
rcrl
rep
out
aam
sub
movsb
xchg
push
pop
pop
fwait
pushf
cmpsb
inc
inc
jle
mov
or
test
outsl
iret
cmp
pop
ss
in
xchg
mov
xchg
stc
fcom
out
icebp
ja
je
add
jecxz
out
adc
inc
cmpb
adc
mov
cmp
mov
aam
pop
leave
int3
push
js
add
xor
test
lret
mov
lds
test
xchg
sbb
pop
pop
mov
aad
enter
adc
mov
jne
mov
daa
stc
mov
add
jns
dec
push
fwait
mov
jne
fnstcw
jmp
pop
mov
xchg
mov
insl
mov
in
outsb
mov
es
rcr
mov
sbb
xchg
jnp
xchg
dec
mov
aad
mov
push
out
adc
xor
shlb
mov
mov
inc
inc
lret
or
adc
or
test
mov
icebp
push
fimuls
int
fdivl
mov
incb
daa
inc
jns
dec
mull
cmp
jle
push
jb
jno
sar
inc
cmp
xor
andl
pop
pop
sbbb
leave
push
mov
cmp
add
lods
shll
stos
sbb
dec
cli
mov
sbb
dec
std
call
dec
sbb
sbb
or
sub
and
jmp
push
es
mov
iret
les
fiaddl
sar
mov
testl
out
push
mov
rolb
sbbl
mov
jbe
mov
sarl
sbb
xchg
ja
fisubl
pop
push
pop
mov
das
cmp
in
outsl
sub
cwtl
repz
xchg
test
daa
les
lret
lret
popa
jmp
adc
dec
mov
adc
roll
popa
mov
popf
fistps
mov
divb
in
inc
cs
pop
dec
rclb
hlt
cmp
in
nop
popa
push
add
adc
add
nop
icebp
data16
cli
pushf
aaa
jmp
mov
xor
cmp
faddl
bound
in
mov
rcr
inc
xchg
mov
sub
mov
lret
cmp
xor
jp
push
ljmp
sbb
sar
lret
dec
popa
xor
cmp
push
pushf
in
inc
and
sub
aaa
fistpll
test
sub
inc
sbb
cwtl
cmp
adc
inc
push
in
imul
or
cmp
jl
adc
loope
jb
faddp
xchg
xchg
adcb
ljmp
arpl
sahf
out
cmpsb
enter
push
shlb
pop
xchg
fwait
in
adc
stc
icebp
mov
xor
push
mov
sub
fbld
outsl
fmuls
fildll
mov
loope
push
mov
fwait
cs
push
add
or
out
xchg
outsb
lods
xchg
popa
and
push
push
push
leavew
aaa
sbb
push
and
stc
cmp
negl
out
mov
cmp
in
aam
inc
cmpsb
dec
cmp
dec
mov
iret
push
pop
mov
lret
loop
dec
cs
dec
jg
fmul
js
jnp
mov
out
jno
repnz
int
xchg
mov
in
mov
loopne
in
add
lods
test
jae
stos
mov
cmp
inc
pop
push
movl
mov
add
mov
xchg
aam
das
int3
mov
js
rcll
jmp
adc
jge
out
les
ljmp
fstpt
xchg
stos
les
pop
sbb
aam
pop
aaa
pop
mov
out
sbb
cmp
inc
push
pop
addr16
sti
jns
fs
iret
push
pop
sub
int
cmp
push
sarb
push
push
pushf
pop
out
test
pusha
push
and
sub
mov
mov
mov
in
mov
aad
mov
cltd
insl
pop
xor
dec
popf
lods
jb
call
dec
xchg
xchg
leave
jae
and
inc
jle
xchg
sbb
push
fldl
imul
mov
sarl
fadds
dec
test
pop
mov
cmp
decl
lret
sbbl
xchg
mov
mov
shlb
dec
lret
repz
mov
cmp
sub
lods
shlb
xor
movsl
sub
movsl
and
nop
sbb
in
add
stos
enter
pop
jle
sub
sub
loope
jns
popf
pop
sub
fnstcw
mov
ds
dec
mov
mull
sub
das
push
out
add
and
mov
cmp
aaa
cmpsb
cmpsb
cmp
leave
adc
enter
cli
adc
add
in
repnz
inc
push
int3
lcall
mov
lods
pop
sbb
push
mov
fdiv
lds
xchg
push
fistps
in
cmp
int
sub
jne
cld
sub
pop
movsb
add
sub
cwtl
aam
sahf
es
cltd
outsl
jg
xor
push
popf
notl
push
scas
fadds
and
push
inc
cwtl
int
stos
filds
fildll
orl
movsb
xor
ds
mov
jno
mov
push
orb
in
mov
push
clc
mov
les
in
or
enter
movsl
scas
sbb
dec
dec
adc
inc
pop
mov
xchg
pop
pop
xchg
data16
jb
ret
add
or
adc
loopne
mov
neg
cmp
cli
shll
les
sbb
push
mov
mov
ret
int
mov
pop
sbb
sti
dec
in
adc
icebp
out
test
enter
inc
push
nop
sti
mov
fs
or
pop
sti
add
loope
rorl
pushf
push
or
push
jo
ljmp
lods
fwait
adc
add
lcall
adc
cli
cmp
jge
mov
xchg
push
jbe
test
dec
jne
cmp
outsb
dec
testb
jecxz
lahf
mov
pop
sub
dec
test
push
sbb
ret
mov
xchg
and
cmc
and
mov
push
ss
xor
jle
fbld
inc
jne
clc
fmul
loopne
lods
pop
and
cmp
inc
dec
mov
movsb
sbb
push
aas
jge
outsl
out
shll
scas
inc
add
mov
inc
jo
popf
pop
subl
icebp
scas
xlat
sahf
pop
mov
cmp
jl
stc
test
outsb
sbb
lock
xorb
xlat
mov
lahf
daa
push
popa
sbb
push
fwait
imul
insb
push
adc
push
fwait
sub
aam
push
mov
fiaddl
xor
out
push
jbe
ss
and
sti
cli
cmp
into
mov
iret
pop
je
add
adc
andl
xchg
adc
ss
xchg
lcall
sub
repz
daa
cmp
incb
mov
fisubrl
dec
fisubrs
mov
fwait
loope
lahf
daa
std
mov
cmp
sti
jl
xchg
arpl
push
pop
js
push
add
outsb
insb
xchg
xchg
popl
int
dec
fstl
fisubl
inc
add
shlb
push
fwait
xlat
mov
jno
mov
jl
sbb
out
pop
mov
sub
pop
mov
iret
sub
mov
loopne
inc
fimull
cwtl
movsl
lcall
inc
jne
push
dec
add
dec
shlb
lods
sub
pop
bound
shll
mov
aaa
mov
scas
mov
push
andl
wrmsr
pop
xchg
icebp
xlat
and
std
stc
xor
mov
sub
lahf
dec
punpckhdq
jecxz
lret
decb
mov
sbb
xor
out
out
mov
mov
insw
sbb
mov
addr16
or
inc
inc
fdiv
shrl
jnp
inc
out
jno
arpl
dec
mov
mov
adc
mov
add
out
jl
xor
mov
loope
ret
sub
dec
pop
sub
lahf
jae
pop
notb
cltd
fbstp
leave
and
jo
jp
mov
data16
mov
mov
xchg
icebp
out
mov
mov
cmpsl
mov
xchg
insl
pop
psubw
enter
call
jnp
in
inc
push
jp
dec
das
inc
and
sub
movsb
in
popf
imul
xchg
xchg
loope
push
ror
xchg
data16
mov
in
imul
lea
out
cmp
or
sbb
mov
call
xchg
cli
jae
mov
jle
or
lret
lahf
jp
aam
iret
xchg
pop
mov
adc
mov
ljmp
fldl
and
enter
rcl
out
pusha
sbb
leave
jecxz
movsb
movsb
int3
cmp
or
pop
in
dec
icebp
xor
or
cltd
inc
pop
cmp
and
pop
mov
scas
mov
cmp
jnp
dec
sbb
divb
fisubl
inc
xor
ret
push
ret
mov
pop
sub
pushf
pushf
jns
mov
pop
push
loop
pop
mov
fs
add
or
jle
shlb
pop
sbb
movsw
leave
add
ljmp
cmp
pcmpeqb
xor
add
in
xor
fisttps
sub
mov
lea
fidivl
pop
add
sbb
xchg
xor
pop
ljmp
imul
or
jnp
cltd
daa
push
cmc
movsb
pop
mov
lods
lahf
nop
pop
out
cld
bound
mov
sub
mov
sbb
lods
push
xchg
cwtl
cmp
jne
mov
xchg
mov
dec
cs
out
inc
inc
bswap
mov
and
stc
fistpl
cmp
aaa
mov
xor
jg
pop
lret
loopne
dec
in
jne
movsl
xor
pop
std
leave
in
jno
rcrb
push
jp
stc
fcoms
jg
cmp
mov
push
fisubrl
jns
adc
cltd
cmovs
sbb
pop
pop
xchg
rcrl
push
jo
int
pop
xlat
inc
iret
movsb
dec
and
cmp
in
xchg
in
ror
mov
fsub
pop
enter
mov
adc
cmpsl
cmp
dec
jns
mov
cli
ss
shrb
dec
es
pushw
xor
adc
adc
clc
ror
cltd
leave
fdivrs
adc
leave
imulb
test
mov
mov
push
and
cmp
mov
in
js
out
and
xor
jno
out
jo
pop
loopne
jle
mov
rol
push
jmp
inc
push
adc
xor
push
mov
enter
movnti
mov
test
loope
mov
sub
dec
ljmp
dec
es
adc
jb
das
push
xchg
and
movsb
mov
lea
jno
lea
add
cli
mov
push
pop
out
add
sub
sub
inc
pop
aam
aas
nop
fdivs
test
adc
pop
movsb
divps
inc
popa
or
movsb
push
and
push
xchg
sbb
pop
repz
in
aam
movsl
mov
lods
cld
sub
int3
pop
add
add
cmc
add
scas
pusha
lret
iret
js
pop
test
loopne
pop
push
das
fwait
cmpsl
repz
adc
shlb
addb
pop
test
jmp
xlat
aam
xchg
xchg
imul
xchg
scas
and
sbb
jmp
adcb
nop
dec
mov
test
sbb
pop
xchg
lods
mov
test
xor
adc
gs
adc
movsl
popa
sahf
iret
lea
xorb
xor
lahf
mov
loopne
jb
mov
data16
xchg
xchg
call
into
adc
imul
popf
push
push
clc
test
dec
divl
jns
cmp
fsubl
dec
mov
xorl
insl
pop
sub
mov
test
ss
fnstenv
lods
dec
xor
mov
and
pop
adc
pushf
sub
rorl
adc
cltd
out
cld
in
daa
xlat
pop
add
jo
xor
mov
pushf
jg
dec
xor
cwtl
gs
mov
popl
push
sub
negb
sbb
adc
loopne
push
popf
popf
mov
jle
out
push
cwtl
xor
sbb
sahf
or
leave
sahf
in
pusha
inc
xchg
mov
xchg
fwait
xchg
xchg
orl
push
lods
and
aaa
dec
popa
mov
push
push
sbb
jno
mov
mov
scas
cld
loope
add
mov
dec
pop
xchg
sbb
xchg
jne
and
enter
xor
dec
dec
movsb
add
sbbb
cmp
mov
add
xchg
pop
sahf
pusha
out
cmp
jno,pn
cmpsw
mov
and
sbb
inc
mov
das
cltd
pop
js
xadd
das
test
mov
inc
dec
xchg
sub
jl
inc
movsb
mov
mov
clc
xchg
cmpsb
xlat
dec
ss
cli
mov
inc
out
add
jb
movsb
sbb
clc
cmp
add
jmp
sub
mov
push
lcall
dec
nop
mov
push
dec
or
jl,pn
lret
jbe
aam
das
sub
push
add
and
mov
es
mov
mov
mov
imul
rolb
dec
fdivr
push
mov
pushf
inc
xor
into
xchg
cmp
es
or
lahf
pop
into
lcall
out
addr16
arpl
cmc
mov
dec
jne
addr16
in
out
loop
mov
shrb
cmc
test
mov
mov
xor
jecxz
pop
push
mov
sub
sub
in
jg
pop
xor
movsl
jle
xor
sub
push
mov
sbbb
cli
mov
fwait
mov
loope
push
ss
mov
add
insb
call
dec
sub
mov
stos
hlt
fidivrs
aad
jle
cs
insb
or
xchg
push
mov
pop
mov
dec
ss
jmp
arpl
scas
push
ss
bsf
dec
cmp
jge
pusha
push
push
xlat
jb
mov
shlb
jmp
adc
loope
lods
bound
lahf
mov
loope
adcb
or
or
and
pop
jecxz
pop
movsl
push
std
xor
sbb
adc
sub
aad
bound
xor
push
mov
or
aam
roll
in
ljmp
hlt
pop
subb
mov
mov
xchg
outsb
jne
mov
sub
xchg
in
int3
mov
xchg
mov
test
pop
mov
sbbb
outsb
inc
dec
inc
outsb
add
mov
out
inc
xchg
xlat
xchg
lcall
xchg
cmc
aaa
es
jb
jecxz
scas
sbb
negb
stc
pop
lret
ficoml
sub
sub
in
test
jns
je
and
mov
ljmp
insl
out
movsl
int
cmp
cli
mov
mov
pop
lcall
in
xor
insl
jg
mov
adc
mov
add
das
pop
adc
mov
jns
sub
adc
mov
mov
push
mov
int3
scas
movsb
xchg
push
and
jae
orb
fdivrs
outsl
cmc
insb
iret
jo
sbb
shlb
cmp
decb
xchg
mov
fsub
daa
std
popa
jns
dec
lock
jle
mov
push
adc
inc
mov
test
in
mov
dec
mov
pop
ss
arpl
les
jmp
dec
pop
jecxz
xchg
ljmp
cltd
in
shll
shlb
cmp
or
pop
xchg
data16
test
aaa
adc
push
push
xchg
popa
mov
test
add
outsl
leave
outsl
insl
xor
shrl
aad
sub
filds
stc
call
jo
jle
into
jb
xchg
dec
sbb
stos
or
sar
add
out
xor
repz
add
mov
movd
test
sti
inc
mov
outsb
dec
and
fisttpl
sub
sub
add
sbb
push
dec
aaa
cmovbe
nop
xchg
push
sub
jg
les
mov
aas
add
and
mov
xchg
aaa
or
adcb
jecxz
in
repz
mov
pop
lock
lahf
sbb
and
cmpsb
lret
push
andb
mov
dec
add
push
imul
das
repz
int3
mov
testl
mov
dec
mov
imul
lahf
loop
js
fs
cmc
in
cmpb
xor
pop
pop
xchg
shll
sbb
loope
outsb
pop
push
pop
push
adc
fnstenv
jecxz
lods
push
sub
outsb
out
loop
bound
and
jnp
add
inc
jb
std
dec
fcmovbe
sub
xor
bound
leave
add
mov
add
sbb
stos
jmp
mov
sbb
pop
push
sub
mov
mov
sahf
xor
lahf
les
out
test
cmpsb
fs
add
lock
dec
ss
fidivrs
fimull
dec
dec
popf
mov
mov
mov
xor
mov
cmp
mov
mov
inc
add
inc
imul
xor
lods
jge
cltd
xor
push
imul
mov
jmp
mov
stos
insl
add
int3
je
jbe
cwtl
mov
out
iret
fisubrs
cmp
sbb
cwtl
and
mov
int
lsl
xchg
add
in
sbbb
shll
mov
fwait
hlt
test
mov
in
mov
aaa
je
push
fs
je
or
jns
insl
das
sub
repz
int
ret
push
mov
xor
sub
cmp
mov
jmp
pop
inc
jno
push
lcall
cmp
inc
adc
ret
gs
push
jb
pushf
pop
xchg
adc
cmp
scas
sub
gs
lock
aam
mov
pop
xor
pusha
lock
outsl
mov
or
mov
sub
mov
xchg
in
pop
mov
pop
mov
or
mov
sub
sbb
lret
mov
lods
iret
mov
decb
in
jecxz
in
outsl
loop
int3
xlat
mov
nop
inc
mov
cmp
mov
and
sbb
and
xor
notl
or
pop
or
cmp
sub
jg
xor
cld
outsb
push
test
jp
dec
in
dec
inc
mov
outsb
int
lock
andl
fisubl
out
iret
sub
sbb
int3
bound
lea
mov
xchg
dec
push
push
push
pop
imulb
xchg
divb
jnp
mov
fdivr
mov
inc
lods
jecxz
stc
fcomp
cmp
scas
aas
pop
push
jmp
mov
jo
scas
jl
je
jns
je
push
mov
inc
cmp
jo
les
imul
les
mov
xor
pop
sub
sub
jmp
pop
shl
lret
xor
adc
outsl
jne
fsubrl
push
push
xchg
xchg
fs
pop
sub
mov
or
jb
and
xchg
lret
xor
in
lahf
mov
pop
mov
int3
inc
jl
or
ljmp
or
ljmp
clc
lea
xchg
dec
aas
or
in
sti
inc
mov
dec
and
sarb
dec
inc
dec
mov
jo
sub
xchg
pop
lea
out
inc
pop
int3
push
inc
fnstcw
mov
adc
je
rcll
cld
gs
outsb
xchg
faddl
lcall
test
pushf
xor
es
pop
xor
cmc
leave
xlat
clc
mov
jp
in
add
xchg
rcrl
sarb
inc
outsl
jl,pn
je
sub
clc
pop
or
lods
ret
mov
jg
sbb
pushf
sbb
xchg
pop
jmp
lret
push
mov
pop
faddl
movsb
test
jns
cld
cmp
push
xor
mov
sub
or
test
xchg
lock
mov
ljmp
mov
jno
add
cld
and
mov
insl
push
xor
mov
xor
ret
aam
sbb
sti
cmp
fabs
adc
out
cmpsb
test
mov
mov
add
fucomip
imul
dec
cmp
sahf
sti
fildl
outsl
pushf
test
xchg
in
push
sahf
xchg
jo
push
icebp
out
jbe
xor
stos
or
sbb
pop
in
jg
mov
jns
and
jge
fcmovnbe
dec
jp
jns
jne
iret
andb
and
cmpsb
andl
iret
jg
scas
dec
scas
dec
arpl
in
push
sub
jmp
call
push
aaa
dec
pop
inc
xchg
inc
xor
sub
arpl
pop
nop
add
lret
jo
out
sub
xchg
popa
add
xchg
popa
inc
aam
jg
push
test
push
or
test
imul
sub
jmp
sbb
pop
cmp
sbb
pop
pop
test
add
dec
fsincos
movsb
inc
mov
imul
sub
pop
ja
out
push
xorl
cli
mov
fldt
add
sbb
mov
pop
xchg
fstl
ret
shrb
push
xchg
push
cmp
cmp
or
and
ljmp
ljmp
dec
sbb
mov
shll
inc
push
xchg
shll
xorb
std
pop
xchg
orl
push
and
pop
stc
sub
stos
pop
jmp
xor
cs
clc
push
xchg
aam
aam
push
jae
and
pop
fisubs
pop
imul
aad
push
stos
test
xchg
sub
daa
xchg
call
rorl
movsl
and
repz
lret
push
les
notl
in
fbld
pop
mov
dec
and
lock
xor
int3
xor
sub
test
push
ja
lea
pop
jae
add
jg
pop
insb
les
sti
in
or
cmp
out
push
mov
dec
nop
jle
pop
cmp
addl
add
pusha
ss
and
stc
int
add
xchg
push
imulb
cmp
negb
sub
and
lret
cwtl
test
dec
xchg
xor
out
xchg
xor
lcall
add
sbb
sti
stos
loopne
mov
mov
xchg
ljmp
add
jne
ljmp
shrl
push
mov
ljmp
addr16
test
sub
jmp
push
add
fistpl
jmp
mov
pop
std
xor
mov
and
and
sbb
pop
insb
ss
out
clc
pop
addr16
inc
push
xchg
mov
add
in
mov
push
mov
adc
lahf
push
mov
ret
fimull
loope
insb
cmp
cmp
das
jb
fistps
rolb
test
cmpb
fadd
or
add
out
mov
loop
fisttps
inc
dec
hlt
mov
mov
add
test
adc
push
adc
es
add
xor
sbb
stos
lods
mov
aam
mov
loope
arpl
xor
xorl
rcr
std
inc
push
loop
repz
mov
mov
pop
test
or
shlb
push
aaa
call
gs
cmpsl
in
mov
sbb
xor
xchg
rolb
out
addr16
insl
into
jle
xchg
jo
sahf
cli
mov
jae
arpl
shrl
dec
fs
and
insb
pop
lahf
dec
sbb
and
or
aam
mov
xchg
push
mov
aaa
movsl
jne
addr16
mov
shlb
inc
sbb
andl
pop
lea
dec
sub
cmpsl
and
cmpsl
xchg
inc
or
add
xchg
jno
cwtl
pushf
pop
sub
dec
imul
inc
xchg
test
sbb
mov
lock
pop
pop
nop
add
inc
mov
inc
divb
rclb
mov
shlb
movsl
or
outsw
dec
insl
in
and
jb
lods
punpcklwd
sub
and
push
lcall
fisubrl
xchg
jne
cmc
adc
or
std
outsb
ret
jbe
xchg
subl
pop
xchg
or
mov
pushf
out
add
and
add
push
mov
or
dec
xchg
data16
inc
gs
push
sahf
lds
or
dec
sahf
sbb
nop
cwtl
pop
ds
mov
xor
sub
fistl
shlb
cmpb
test
in
loope
mov
xchg
pop
inc
xchg
sbb
jecxz
lods
add
jne
mov
fwait
int3
aaa
jp
xor
fwait
mov
mov
outsl
notb
in
jb
out
dec
test
imul
stos
or
or
dec
jge
lahf
dec
dec
fmuls
ljmp
in
pop
stos
cmpsb
jmp
scas
xchg
sbb
adc
cmp
dec
das
enter
scas
adc
xchg
int
mov
ret
push
cmp
fisubl
jno
lahf
scas
popf
jmp
mov
pushf
cmp
cmpsb
add
neg
xor
loopne
pop
jne
scas
insb
ljmp
cmp
aaa
arpl
add
sbb
clc
and
inc
test
in
inc
mulb
cld
mov
inc
dec
lds
sub
shl
fcmovu
push
stc
sub
outsb
push
push
pop
loopne
or
addl
jb
or
jp
dec
mov
fadd
arpl
xor
stos
call
push
jl
sbb
fucomip
sub
cmp
lea
sub
scas
or
jge
les
inc
ds
lcall
in
ret
jae
inc
add
ret
mov
in
or
je
push
arpl
bound
or
aas
or
xchg
fidivrl
cld
pop
divb
add
cwtl
mov
leave
mov
andl
loopne
leave
fs
cmp
fistpll
pop
or
lds
rcll
aad
xchg
add
int3
loope
shl
dec
and
or
pop
cmp
dec
cmp
aaa
adc
mov
cmp
jo
add
cmp
retw
pushf
adc
pop
add
cmp
dec
mov
ret
sub
outsb
jns
ficoml
xor
pushf
imul
fnstcw
aam
iret
pop
outsl
lret
cmp
fldenv
insl
fcmovu
mov
jb
in
cld
enter
push
pop
addl
add
das
inc
xlat
dec
mov
mov
or
test
mov
inc
movsl
adc
jg
cmp
sbb
lods
ja
fnstenv
es
pop
loope
popa
or
cs
xchg
jl
push
fiadds
push
icebp
mov
xchg
lods
test
ljmp
jo
dec
popa
lock
scas
cmp
mov
xchg
xchg
pop
xchg
inc
fisubs
lret
lahf
jmp
mov
mov
jns
cmpl
mov
int3
sbb
mov
mov
imul
mov
jne
mov
ds
sahf
pop
mov
faddp
dec
and
scas
push
dec
fstpl
or
and
xor
inc
sub
lea
pop
shll
mov
repnz
cwtl
dec
pop
lcall
mov
cltd
inc
sub
leave
stc
mov
or
es
test
xchg
add
subl
xchg
xchg
jo
push
pushf
ljmp
mov
into
mov
fimull
and
lahf
sub
xchg
xchg
or
add
out
fmuls
dec
or
dec
sub
fisubrl
sti
lret
test
test
and
sub
jl
and
xor
mov
movsb
dec
fidivrs
push
mov
fld
out
inc
lahf
mov
or
mov
xchg
je
push
daa
nop
mov
das
in
jecxz
ficomps
lahf
inc
rcll
jb
mov
lahf
adc
fadd
daa
inc
dec
jo
aam
add
aas
mov
jns
xor
sbb
jmp
xor
cwtl
mov
and
dec
jle
ret
dec
inc
cmc
lahf
movsb
pop
aad
sbb
imul
outsl
xlat
sti
cmpsl
xchg
xchg
sbb
xchg
ficompl
sub
imul
cli
inc
mov
jg
inc
icebp
out
xchg
incb
repz
pop
lds
cmp
xor
dec
mov
jne
add
add
lds
pop
pop
orps
xchg
xor
je
adc
stos
call
outsl
in
sub
fidivrl
das
xor
xor
mov
test
out
cmc
and
pop
loope
shlb
inc
xchg
fs
dec
sbb
or
xchg
and
mov
dec
into
std
jmp
popa
pusha
jnp
fsts
lret
popa
xchg
push
and
daa
ret
addr16
cwtl
aas
enter
pop
and
dec
imul
pop
sub
dec
fstpt
loop
push
mov
xchg
adc
mov
ds
int3
add
scas
add
aam
jo
shl
jp
repz
lods
cmp
arpl
aad
movl
inc
pop
ds
xor
pop
push
in
cld
jmp
popl
xor
scas
mulb
popf
nop
inc
shll
loop
ret
pop
adc
jns
jne
imul
cwtl
push
pop
jg
std
xchg
or
mov
adc
in
inc
lods
lds
into
jge
cli
in
into
jo
adc
and
test
pushf
pusha
shrb
adc
fs
ficomps
cli
ret
mov
divl
or
dec
pop
dec
dec
cmp
mov
push
nop
xchg
push
xchg
jnp
lcall
scas
mov
pop
push
inc
iret
in
mov
push
and
add
test
cmp
mov
xchg
dec
jns
pop
aam
cmpsl
jecxz
outsl
inc
loopne
aas
cltd
aam
dec
mov
adcl
cld
inc
mov
adc
sub
xorb
pop
sti
pop
pop
and
lods
xor
mov
jl
in
pushl
mov
jno
aad
xchg
mov
adc
push
or
add
aaa
out
pop
fistpll
cmp
shl
fildll
call
sbb
mov
adc
jnp
jbe
xchg
mov
test
ficomps
jmp
lret
in
lahf
jecxz
stc
cli
add
lds
add
mov
daa
mov
or
lahf
mov
test
lcall
xchg
add
sub
cltd
test
aas
popa
add
ret
xchg
fldenv
jne
testl
push
call
push
test
add
dec
mov
cwtl
mov
insb
gs
inc
adc
adc
mov
shrb
xchg
cmp
push
addr16
stos
out
repz
into
lret
push
mov
cli
or
loop
adc
pop
rol
jle
in
inc
xor
shlb
jmp
popa
in
mov
aas
add
adc
or
or
and
xchg
jge
gs
jo
adc
xchg
or
mov
flds
sub
adc
push
cmpb
cltd
jl
xchg
mov
mov
adc
mov
mov
push
int3
scas
and
cli
cwtl
inc
push
int3
std
pop
jbe
repz
mov
inc
dec
pop
inc
xchg
test
jns
hlt
imul
or
or
scas
in
sbb
sbb
mov
mov
push
repnz
shll
or
mov
mov
js
ret
adc
mov
inc
mov
in
mov
inc
xchg
mov
sbb
inc
pusha
cmpsb
adc
insl
sub
pop
push
mov
jb
jo
sti
xchg
subl
dec
das
mov
lcall
roll
scas
out
fcmove
pop
lret
jne
fwait
popa
sub
sbb
xchg
int3
lock
repnz
ja
cmp
scas
stc
mov
mov
lahf
mov
icebp
lock
mov
sarb
sub
cmc
repnz
mov
insl
lahf
cmp
lret
cmp
xchg
push
ljmp
mov
sbbl
loope
test
and
or
cmp
inc
mov
sub
je
inc
fisubrl
cmpsl
jge
xor
aad
jb
jae
pop
mov
add
insb
jmp
cmpsb
pushf
test
testl
in
cmp
scas
dec
mov
outsb
ds
pop
cli
jns
int
ljmp
inc
stos
inc
add
scas
in
jnp
ja
repz
add
outsb
jae
arpl
inc
cmpsl
jl
pop
sbb
jmp
aaa
dec
dec
jmp
popa
mov
adc
ror
test
xchg
rcrl
std
arpl
out
mov
sbb
flds
jp
movsl
push
addr16
dec
sub
jl
mov
cmp
fwait
jg
push
or
sbb
loopne
add
cmpsl
ret
jl
std
mov
cmp
sub
aaa
xor
lods
in
call
xor
cmc
mov
xor
rorl
cmc
fdivrl
sbb
jb
cmp
jo
popa
jp
sbb
leave
test
pusha
sbb
jnp
test
jb
or
sarl
push
test
sbb
loope
rorb
lds
lret
lods
aam
stos
fsubrl
cmp
sti
fsincos
test
push
mov
and
push
int
mov
in
movsb
and
push
data16
xor
out
push
subl
mov
call
pop
mov
sub
out
mov
and
ss
xchg
data16
adc
dec
and
inc
ret
xlat
jo
push
dec
mov
stc
cmpsb
push
adc
shlb
mov
dec
stos
xchg
mov
pop
int3
lret
lods
pop
mov
xchg
repnz
ljmp
xlat
fdivp
mov
in
push
stos
into
call
mov
clc
stc
shll
cmp
insb
xor
int
cld
push
pop
jl
ret
rorb
jns
pop
xor
pop
fcoml
ds
repnz
jecxz
test
js
test
xor
inc
dec
dec
mov
inc
adc
int
cmp
pop
les
cmp
inc
dec
test
rcr
dec
in
popf
mov
leave
mov
incl
pushf
nop
lldt
xor
lcall
mov
mov
test
loopne
lret
mov
pop
stos
subl
lcall
call
jne
outsb
insb
notl
jnp
mov
inc
lcall
jle
mov
dec
ficomps
cs
jnp
mov
cmpl
push
aaa
shll
push
and
and
dec
push
pop
mov
push
sti
aas
jnp
jmp
roll
cmp
mov
lcall
xor
jb
xchg
ja
scas
pop
gs
mov
push
inc
sub
sbb
cli
out
pop
jnp
push
mov
and
mov
mov
jb
pusha
xchg
ficomps
nop
cmp
insl
inc
fdivl
xlat
cmp
ds
rcr
shl
mov
aam
jnp
test
cmpsl
jne
dec
into
mov
jl
fwait
mov
push
pop
sbb
aam
xchg
shr
ljmp
adc
mov
pop
jg
xor
mov
imul
jp
xor
mov
inc
outsb
jae
cmp
dec
imul
jecxz
and
icebp
lods
xor
adc
rep
rcrb
push
jp
dec
popf
cmc
test
loopne
enter
jecxz
enter
dec
popa
adc
pushf
or
xor
popf
rcll
pop
jb
mov
sahf
mov
cwtl
andb
lret
leave
and
cltd
push
mov
jmp
je
pop
inc
lret
imul
mov
adc
ds
sub
pop
jmp
cwtl
mov
fcoms
xor
mov
testb
lods
shlb
and
sub
add
xor
add
dec
push
sti
xchg
pop
imul
inc
addl
mov
sub
in
xchg
outsl
jno
jl
out
sub
xchg
arpl
push
add
loope
icebp
xor
and
ss
fwait
ja
dec
sahf
decb
leave
ret
dec
xor
pop
cmc
rorb
pop
mov
cmp
mov
bound
sub
add
push
pop
sub
push
cmp
mov
addb
out
stos
rol
repz
add
inc
in
mov
xchg
aam
sahf
aam
dec
pop
xlat
movl
or
jns
addl
lea
xor
movsb
xor
shlb
add
in
sbb
push
cs
xchg
dec
sbb
cltd
rorb
jl
test
lret
xlat
es
ds
xchg
rolb
jle
fs
stos
cld
mov
dec
push
push
aas
jmp
adc
xchg
hlt
xor
pop
pushf
adc
pop
std
sub
or
das
mov
xor
aaa
pusha
sub
fsubr
inc
bound
popf
icebp
les
inc
sub
cltd
nop
fwait
sbb
mov
xor
cmpsb
jo
mov
mov
test
fidivs
call
cmpsb
xchg
imul
push
lahf
dec
push
popa
scas
sub
je
xor
pop
lret
sub
cmp
jbe
and
stc
xlat
popf
xor
js
iret
push
inc
push
mov
bound
scas
fsubrl
stos
pop
imul
imul
adc
movsl
test
ljmp
sbb
imul
xchg
mov
dec
popf
mov
lds
scas
sub
iret
scas
ret
inc
stos
xchg
or
pop
or
sarb
jp
test
adc
idivl
fimuls
sbb
push
ja
mov
xor
xchg
mov
and
add
out
pop
pop
sti
cs
cmp
bound
dec
dec
rorl
push
in
pop
rorb
jg
gs
pop
shll
and
adc
mov
lds
adc
sub
and
sbb
xchg
xor
adc
test
inc
rcrl
jne
and
add
xchg
ljmpw
lds
sti
add
adc
jno
push
in
js
mov
xchg
jns
lea
adc
iret
outsl
push
cltd
cmpsb
push
inc
xlat
mov
imul
jne
int
push
mov
ljmp
sub
cwtl
fists
lock
mov
add
jnp
push
add
imul
arpl
dec
outsl
out
xor
test
xchg
repz
bound
dec
or
mov
movsl
insb
add
repz
sbb
jp
mov
xor
xor
jnp
mov
mov
mov
push
lea
jle
pop
fcomi
cmpsl
fsubrl
xchg
push
shlb
xor
scas
add
push
int
mov
insw
mov
ret
rorb
pop
jbe
enter
jg
lahf
repnz
jp
inc
adc
push
xor
out
jne
in
pop
jg
mov
test
inc
push
mov
or
addr16
xor
lods
and
xor
add
pop
and
imulb
xchg
jo
sbb
pusha
enter
jl
pop
mov
sti
je
les
outsb
xchg
mov
mov
pop
sub
or
iret
das
mov
xchg
or
out
jle
fldt
push
data16
dec
fdivrl
pop
test
ja
stc
add
mov
test
mov
push
ja
rorl
int
leave
and
inc
dec
jns
imul
enter
cmpl
sarb
call
inc
pop
sub
clc
in
sbbb
or
mov
pop
pop
dec
dec
mov
sub
js
hlt
jne
push
in
mov
mov
addr16
cld
cmpsl
andl
dec
pop
cltd
mov
ret
std
inc
inc
xor
xrelease
pop
mov
jno,pn
enter
adc
lods
fmul
in
inc
into
pop
pop
loop
cmp
pop
inc
stos
and
sbb
insb
in
push
adc
scas
push
int3
add
int3
in
adc
out
fsub
add
fwait
test
push
sbb
jmp
xor
push
fisttpl
jp
pop
and
and
loopne
fwait
cltd
pop
cmpsl
je
jmp
xlat
pop
test
dec
lods
mov
inc
pop
into
xchg
sub
jae
rcl
inc
in
inc
rclb
mov
dec
cmp
or
or
inc
jns
mov
mov
ds
mov
jbe
push
ja
fwait
dec
ss
mov
mov
mov
add
cmp
mov
outsb
repz
es
shrl
pushf
bound
jge
out
cmpsb
lock
xor
add
inc
add
fwait
mov
insb
or
int3
xchg
dec
aam
jmp
repnz
xchg
lods
inc
call
sub
ds
vunpckhps
push
js
out
sub
push
lds
cmpsl
xchg
sub
xchg
fsubl
insl
push
mov
nopl
mov
or
fnstcw
dec
test
and
outsb
and
sub
xor
movsl
pop
out
mov
xor
clc
inc
icebp
cmp
out
out
popf
jg
movsl
outsl
movsb
shll
xchg
push
mov
dec
pop
loope
arpl
cmp
int3
fnstsw
mov
cmp
push
inc
outsb
jbe
sub
xchg
mov
cmp
cmp
ja
adc
inc
je
xchg
aad
cmp
pop
aad
jle
gs
lock
pop
jecxz
cmp
movsb
mov
nop
outsb
mov
dec
lcall
xchg
inc
call
lods
jo
sar
sub
or
in
cmp
jb
push
add
aaa
jo
lock
mov
lahf
xchg
out
sub
mov
mull
xchg
adc
cmp
out
test
push
inc
data16
cmc
or
sbb
cmpsl
std
pop
in
data16
popa
and
ret
stos
push
sti
ror
xchg
jg
xchg
mov
out
jg
movsl
fists
add
jbe
sub
or
js
and
or
xor
jo
pop
call
xor
rcrl
xor
frstor
add
in
mov
fdiv
dec
xor
loopne
mov
imul
and
mov
enter
pop
subl
adc
mov
icebp
pop
adc
sbb
mov
pop
lock
sbb
sbb
into
imul
clc
pop
mov
call
pop
clc
bnd
dec
cmp
movsl
fistps
cmp
pop
jnp
js
dec
lahf
push
add
sbb
sub
out
fisttpl
shl
xchg
push
cltd
sbb
stc
cmp
sbb
fwait
mov
jb
data16
and
inc
xlat
scas
xchg
pop
sub
inc
xchg
data16
dec
aas
fisubrl
enter
sub
mov
xchg
xor
aaa
inc
insl
test
loopne
dec
cld
push
mov
icebp
aad
movsl
aam
je
pushf
push
and
aas
xor
mov
jnp
cmp
jecxz
xchg
sub
push
outsl
scas
test
sbb
or
into
mov
out
sbb
hlt
add
data16
fldl
aas
and
cltd
je
xlat
stc
sbb
into
push
mov
sub
in
xchg
add
faddl
fimuls
aam
adc
data16
pushf
enter
pop
add
out
xchg
mov
mov
movsb
in
cmpsl
xor
adc
add
rorb
outsb
dec
dec
dec
in
push
arpl
xchg
pop
aaa
repz
mov
adc
mov
jnp
popa
dec
out
xchg
pop
push
pop
je
push
aam
mov
cs
jp
adc
mov
mov
cli
pop
fsubp
lods
test
push
fs
lahf
and
rclb
popl
adc
lret
add
xor
mov
or
and
std
pop
jge
mov
dec
dec
aad
dec
addr16
bound
xchg
fiadds
imul
daa
repz
loopne
subl
rorl
inc
add
mov
shrb
lock
xor
push
mov
dec
aas
inc
test
test
lea
sbb
add
in
insl
bound
jge
xchg
mov
fimull
pop
sbb
in
mov
add
pop
xchg
movsb
add
lds
push
mov
pop
xor
mov
jmp
cmp
mov
xor
and
xchg
cmp
roll
add
ss
inc
test
adc
cmpsl
inc
outsb
fnsave
lods
ret
adc
out
aam
xchg
push
cmp
mov
and
dec
push
or
fwait
sbb
testl
and
in
sbb
add
cmpl
fcoms
shrl
dec
pushl
repz
inc
jne
adc
pcmpeqd
mov
jge
inc
and
je
mov
test
or
test
cltd
jl
test
and
cwtl
sbb
loop
icebp
or
mov
sbb
mov
sbb
std
fsubl
jae
dec
inc
mov
rol
add
out
lcall
out
dec
xchg
mov
cmpsl
mov
mov
xchg
lods
sub
inc
in
adc
or
inc
ret
in
clc
inc
aas
mov
xchg
fists
repz
sub
dec
or
adc
into
inc
mov
mov
movsl
xor
push
sti
mov
cmpsl
inc
loope
mov
aam
popf
ja
mov
adc
xchg
cmp
call
add
cmp
dec
mov
sbb
call
add
mov
cmpsl
push
xor
scas
das
aaa
mov
mov
stos
xlat
add
and
add
cmpsb
push
js
jb
push
sarb
sbb
adc
push
in
imul
sti
and
cmc
mov
aas
inc
adc
test
or
sahf
fidivs
push
cmp
push
mov
add
out
lods
repnz
push
nop
fs
sub
imul
iret
aad
lds
jp
inc
sbb
add
xor
inc
lcall
and
int3
scas
sbb
or
imul
xor
inc
sub
pop
mov
lahf
push
incb
scas
sbb
pusha
aad
inc
inc
ret
je
xor
mov
xlat
fwait
mov
rcrb
xchg
mov
fsubl
addb
add
jp
xchg
das
cs
jmp
xor
push
or
scas
push
int3
int3
pop
cmc
mov
xchg
ljmp
leave
es
jmp
popf
dec
fisubl
pop
jae
mov
cmp
and
daa
cli
mov
mov
ret
push
jge
xchg
imull
cli
xchg
or
mov
call
cmc
fimull
cmc
xchg
imul
sub
filds
jecxz
push
sbb
scas
mov
fwait
jle
mov
repnz
push
mov
icebp
cmpsl
pop
imul
cmpsb
xor
lahf
arpl
dec
into
data16
and
popl
sbb
inc
fld
mov
push
xor
xor
add
mov
daa
outsl
movsl
jmp
fbstp
ja
sbbl
add
jmp
inc
negb
add
pop
sar
arpl
jbe
sub
jne
jne
mov
push
outsb
or
andb
cmp
mov
xlat
faddl
or
and
mov
jns
std
push
ret
ja
je
jle
cmc
fadds
or
mov
rclb
dec
pop
sub
movsl
les
mov
dec
adc
jne
cld
adc
frstor
call
loop
xchg
mov
push
sbb
jecxz
mov
addl
aad
dec
xor
fs
push
in
cmp
arpl
jbe
fwait
xchg
pop
or
mov
testl
or
data16
shlb
outsl
rcll
shrl
dec
push
cld
or
jmp
add
jmp
pop
xchg
ss
out
pop
adc
in
inc
cld
xchg
fdivrs
cwtl
or
or
in
dec
mov
sar
and
sahf
repnz
aad
xor
mov
pop
clc
in
sub
das
arpl
cld
adc
push
sti
vmovntps
in
jl
mov
jo
ret
imulb
aad
jns
pop
outsb
shll
leave
orl
mov
iret
iret
mov
mov
mov
xorl
mov
jbe
call
mov
pop
addl
mov
inc
out
sahf
dec
sti
inc
sbb
sahf
rclb
dec
xchg
add
aas
shlb
or
mov
out
popl
int3
xor
add
pop
outsl
mov
or
rorb
mov
mov
aad
lds
jne
dec
imul
cmpb
and
sti
sbb
xor
nop
iret
xor
mov
or
pop
aas
repz
cmp
sub
xorl
out
jmp
bnd
mov
xchg
jns
movsb
push
inc
jge
les
inc
mov
jp
or
inc
je
mov
insb
je
mov
inc
or
adc
pop
lods
add
fmuls
call
loope
xchg
fs
mov
sbb
jp
lock
in
pop
xor
dec
inc
ss
pop
inc
inc
push
jp
mov
and
fldcw
int3
adc
icebp
rcr
jne
lods
jns
ljmp
scas
sub
repz
mov
fwait
cmp
test
iret
mov
and
repz
jmp
cmpsl
mov
insb
add
xor
sbb
push
pop
sub
in
lret
adc
mov
aam
push
out
rorl
test
sub
mov
je
add
mov
dec
test
es
out
subb
add
pop
sub
add
rorl
scas
or
cmp
inc
or
lret
out
stos
pop
inc
iret
lcall
out
push
shll
adc
fistl
or
adc
xchg
rorl
push
mov
stc
inc
idivl
xlat
stos
lret
scas
xor
xchg
push
movsl
pop
push
adc
cmp
mov
mov
int
mov
icebp
push
es
or
fs
ret
pop
jecxz
cs
or
pop
out
je
xchg
adc
or
gs
mov
movsb
fldt
jmp
pop
inc
push
sbbb
pop
dec
mov
inc
aam
push
cmp
xor
push
les
jno
outsl
scas
pusha
or
sarl
aaa
leave
iret
fidivl
dec
mov
movsl
data16
icebp
out
push
or
mov
adc
and
xor
inc
mov
cmp
push
and
mov
and
pusha
cmpsb
xor
cltd
mov
leave
xlat
movl
xchg
fwait
adc
mov
int
fsubl
jb
mov
into
outsb
cld
xor
lret
test
pop
push
rolb
mov
sarl
mov
pop
cmpsl
jno
out
jle
mov
and
nop
mov
adc
fsubs
sub
pushf
or
sbb
xchg
inc
cwtl
jnp
fcomps
or
pop
cmp
lods
xor
sbb
xchg
sub
lcall
and
pushf
or
outsb
sbbb
test
fstp
scas
jne
rorb
out
cmp
je
lret
out
lds
ficompl
in
add
in
test
daa
dec
sbbb
lcall
mov
test
lods
xchg
push
lock
cld
pop
or
cmp
repnz
addr16
int3
sub
js
add
dec
pop
adc
mov
mov
outsl
or
pop
push
jb
jle
pop
sti
loop
iret
lds
push
inc
mov
cmp
aam
popf
cmp
and
sbb
shll
mov
push
jne
add
stos
dec
dec
test
bound
movsb
ret
cmp
idiv
adc
movsl
leave
sub
gs
lahf
bound
and
outsb
mov
fcompl
lock
adc
push
popf
dec
or
inc
andb
int
cmp
sahf
rcrb
inc
xchg
adc
jo
lret
jne,pn
jmp
gs
fsubr
lds
mov
mov
andb
test
push
scas
cmp
aad
push
nop
sbb
into
mov
in
cmp
jbe
cwtl
mov
adc
cmp
sub
sbb
inc
outsl
sbb
push
jb
cmp
sub
lods
mov
test
lods
mov
cmp
arpl
repz
pop
dec
test
clc
ljmp
iret
mov
icebp
out
cmp
mov
rcr
ror
idivb
push
stos
cmp
js
mov
lahf
sti
imul
data16
or
and
mov
mov
scas
pop
in
mov
fucomip
into
mov
shrb
jp
push
jnp
sti
xchg
cmp
or
pushf
orl
add
mov
xor
xor
dec
push
or
jle
and
pop
lods
bound
push
sub
mov
lds
adcl
inc
add
cmp
or
sub
orl
mov
add
pop
fbstp
xchg
push
stos
add
or
mov
popf
add
xor
sbb
sarl
pop
mov
or
ds
or
insl
mov
shlb
into
imul
add
and
inc
gs
sub
pop
jnp
and
lret
lock
jg
xchg
push
cmp
pushf
xlat
and
jns
movsb
jl
les
insb
jge
leave
jns
imul
rcrb
cmp
cmp
mov
cmp
adc
jae
mov
jns
sub
dec
ficoms
gs
std
or
into
scas
sbb
leave
testb
mov
sti
xor
cmp
cltd
out
dec
mov
les
push
fnstenv
mov
stc
mov
jg
jg
sub
call
xchg
cltd
jmp
idivb
xchg
in
fwait
rcll
jecxz
ljmp
popa
sub
push
pop
jg
fidivl
sti
pop
mov
pop
sarl
ss
pop
clc
test
rorb
imul
xchg
bound
fdivrs
mov
jl
mov
jp
push
std
xor
rcl
seta
insb
and
push
fucom
xchg
cmpsb
jp
cmc
fmul
xlat
std
adc
lock
cmp
push
shrb
and
xchg
fsubrl
jae
xchg
lods
ret
int
pop
sub
xchg
roll
aad
and
xchg
mov
dec
dec
xor
ret
push
pop
adc
xchg
mov
lea
insb
sahf
cmp
cmp
hlt
push
push
imul
add
in
outsb
in
rcrb
outsb
jle
add
das
mov
sbb
push
rcrb
lds
sub
push
imul
cwtl
loope
and
ret
mov
mov
cmp
mov
and
jecxz
add
out
sub
clc
xchg
pop
out
addr16
mov
repnz
loopne
sbb
inc
jecxz
or
in
push
pop
leave
mov
ja
dec
or
add
inc
enter
test
outsb
jo
stos
add
lret
sub
jle
lcall
add
jbe
imul
jg
filds
cld
pushf
xchg
addr16
mov
in
data16
mov
out
cmpsb
aas
jne
inc
movsb
pushf
cwtl
adc
or
jno
dec
jg
and
add
pop
test
fs
xchg
xor
jae
addr16
or
int
adcl
mov
pop
inc
adc
xchg
movsl
dec
int3
push
mov
add
sbb
inc
pusha
pop
dec
cmp
xchg
ja
scas
sub
stos
sahf
dec
sbb
push
xchg
pusha
stc
mov
popf
adc
int
xor
mov
sub
cmpsb
xor
addb
icebp
ret
mov
adc
test
xor
cltd
sub
mov
lods
sub
mov
lahf
cltd
mov
mov
into
stos
call
movsb
int3
imul
loope
pop
xor
pop
xchg
mov
fbld
push
sbb
lods
aam
sbb
mov
xchg
add
dec
mov
or
add
outsb
jne
sahf
cmpsl
push
or
mov
mov
dec
cld
mov
fistpll
and
mov
pop
imul
repz
push
push
les
rcrb
push
mov
pop
andb
int
mov
xchg
xchg
cmp
pop
into
addr16
mov
pop
std
scas
loop
xor
mov
ret
nop
sub
mov
mov
sbb
test
cmp
dec
xchg
mov
icebp
imul
or
inc
fimuls
add
test
inc
dec
push
adc
jmp
xlat
jbe
loope
out
popf
lcall
adc
movsb
in
insb
cmpb
and
in
out
movb
cltd
nop
movsl
scas
add
mov
adc
imul
mov
int
scas
cmc
aas
call
jg
mov
adc
cmp
ss
test
mov
pop
stc
xor
icebp
stos
dec
out
fbld
cli
sbb
test
xchg
push
jb
or
shl
dec
lock
aam
sub
pop
or
js
test
outsl
lods
jg
pop
sbb
shl
pusha
loopne
lret
add
dec
lret
rcrb
jno
push
clc
data16
xor
dec
std
call
and
ret
push
mull
insb
xchg
aaa
xor
mov
cmp
adc
xchg
mov
fsub
frstor
dec
mov
pop
rcrb
scas
sti
test
out
jecxz
sbbl
adc
mov
push
loopne
mov
test
push
push
jae
fdivl
sbb
mov
movzbl
out
push
inc
push
fwait
push
mov
push
cmp
repz
test
shll
loopne
mov
nop
insl
repnz
std
xor
pop
int3
xor
loope
mov
sti
mov
insl
dec
cmp
dec
not
setl
jle
bound
push
stc
repnz
jne
lds
mov
test
sub
mov
cmpsb
pop
or
das
sbb
sbb
pop
push
popf
xchg
rolb
pop
popf
mov
shlb
aaa
loopne
pop
stc
ss
mov
xor
xor
mov
hlt
sub
pop
and
or
mov
sti
cli
or
or
cmp
and
cmc
jle
jns
xor
jns
pop
lahf
leave
adc
push
stos
inc
popa
xchg
aam
scas
sbb
out
nop
adc
xchg
jno
out
test
movsb
rorb
sbb
cli
faddl
lret
lds
in
cmp
test
xlat
mov
and
sub
cld
rorb
or
fsubrs
outsb
push
xlat
xor
sub
ret
cmp
sub
inc
stc
and
shrl
pop
lods
aam
je
in
je
ret
and
rorl
cli
in
dec
push
imulb
sub
mov
push
lods
mov
mov
lea
xchg
jne
stc
and
jp
cld
cltd
test
pop
inc
popf
jmp
mov
push
mov
mov
in
sub
stos
data16
into
sahf
shrl
out
xor
push
push
cmp
out
adc
sub
in
div
mov
and
jl
xlat
lock
pushf
xor
sti
hlt
pop
mov
or
xor
pop
lods
daa
add
xor
cli
mov
push
dec
jl
enter
xchg
ficoml
mov
and
fcoms
fs
mov
dec
cmpl
leave
cmpsb
push
movsb
pop
mov
sbb
pop
or
out
mov
nop
adc
mov
std
out
pop
sub
cmp
in
mov
jo
lock
aam
pop
jo
les
cld
jge
mov
sbb
shll
pop
dec
dec
lods
add
sahf
add
aaa
in
dec
stc
mov
pop
xor
add
adc
into
xchg
mov
leave
stc
lock
mov
loopne
pusha
jbe
jns
fldenv
sbb
cmpb
mov
add
fwait
adc
push
inc
mov
repz
popf
inc
iret
cmp
fwait
repz
cmpsl
lods
loop
test
add
popf
push
icebp
mov
enter
mov
sub
mov
xchg
sub
lret
pusha
mov
push
in
inc
xlat
es
mov
add
iret
and
adc
add
arpl
ror
stos
xor
push
jno
push
loopne
bound
loop
in
js
shr
aam
clc
clc
pop
aas
icebp
loop
adc
fisttpll
dec
or
sbb
std
dec
or
aaa
cmp
mov
jae
cmpsb
adc
lods
push
jmp
lret
ja
das
sub
aam
fmull
mov
ja
xor
xor
lret
jl
cli
sbbb
aaa
xchg
seto
mov
or
out
add
test
testb
cmp
in
ret
jmp
jge
push
lret
inc
sarl
sbb
mov
nop
pop
mov
outsl
sbb
cmp
mov
pop
jg
mov
jno
pop
sub
sbb
pop
mov
movsb
adc
lahf
outsb
inc
xchg
fsubrs
or
imul
adc
add
aam
mov
mov
add
and
lahf
jnp
and
jae
insb
ljmp
cmp
int3
out
imul
ds
add
jg
sub
pop
xchg
jecxz
mov
aas
xchg
pusha
lock
add
and
xchg
mov
xchg
push
lcall
insb
cmpsb
repnz
inc
mov
rcrb
movsl
repz
repz
int3
push
xchg
fwait
ljmp
adc
pop
inc
lcall
dec
cmc
lret
lods
jmp
inc
ds
test
popl
cmp
and
push
xchg
cmp
xor
inc
sahf
mov
repnz
mov
inc
sahf
icebp
pop
addr16
and
and
adc
dec
ret
lods
cltd
inc
cmp
lods
jne
in
jmp
lea
sbb
mov
push
adc
jp
cmc
js
mov
outsb
in
mov
mov
pushf
pop
jl
lods
inc
lds
inc
gs
hlt
cltd
stos
xor
call
mov
dec
fdivs
shlb
fcmovu
je
scas
adc
inc
mov
push
push
inc
sahf
js
mov
inc
fdivp
add
divb
gs
shll
push
fldt
cld
add
adc
lret
and
or
jp
or
dec
roll
es
adc
jnp
pop
ret
pop
push
daa
lock
mov
or
fwait
pop
imul
es
test
cmp
aaa
mov
je
mov
xchg
lret
sbb
rcll
into
rep
lahf
test
push
pop
push
inc
adc
fimull
pop
jo
inc
cltd
sub
xor
cmp
push
jecxz
sti
stos
mov
inc
and
mov
jg
mov
push
shrl
loope
mov
notb
les
pop
cmp
popa
incb
pop
addr16
scas
icebp
fstpl
jno
sub
mov
push
jmp
sub
inc
and
and
aam
daa
es
dec
mov
je
cmpl
pop
push
or
into
pop
mov
bound
js
aam
pop
pop
in
mov
xor
push
pusha
bound
nop
cmpsl
stos
fdivs
sub
sbb
pop
xor
shlb
inc
sub
or
jne
sub
iret
int
push
aad
fisubl
loop
push
adc
and
mov
fisubl
loope
scas
add
adcl
adc
cmpb
mov
cwtl
pusha
adc
jb
mov
sub
aas
cltd
xchg
popa
mov
stos
mov
cmp
lahf
xor
jmp
jno
pop
push
add
dec
push
incb
and
pop
fwait
lret
and
dec
movsb
dec
pop
cmp
and
in
mov
lret
sti
jl
int
pop
rcrb
mov
dec
mov
pop
jp
les
int3
lods
ja
into
in
in
cmc
ret
inc
leave
divl
jo
test
mov
inc
cmpsb
dec
aas
sub
xor
loope
std
dec
and
jnp
add
inc
in
faddl
sbb
pop
pop
mov
mov
imul
mov
push
add
lock
repz
mov
dec
loope
cmp
cltd
lods
repnz
pop
inc
js
mov
and
movsb
push
adc
xor
inc
jne
lods
xorl
or
lahf
inc
xchg
int
repnz
mov
xlat
movsl
stos
popa
int
movsl
xchg
mov
sbb
push
lcall
cmp
inc
push
ja
ljmp
inc
pushf
imul
movsl
aad
test
mov
push
clc
dec
dec
xchg
inc
in
jno
sbb
sti
jmp
jae
jmp
mov
out
sti
jns
mov
dec
jge
stos
movsb
xchg
stc
gs
dec
insb
mov
mov
out
enter
imul
movsb
xor
add
aam
lds
inc
icebp
rcrl
push
sub
xchg
ror
sbb
push
jnp
andl
aas
aas
out
adc
cs
inc
fprem1
xchg
sub
in
push
xor
and
and
insb
pop
mov
add
iret
mov
fs
icebp
push
cs
sbb
lea
xor
addl
inc
xor
push
mov
insl
xchg
push
mov
lods
adcb
sbb
test
push
xchg
push
mov
cld
add
fimuls
popf
pop
or
push
pop
sar
les
mov
stos
cmp
push
and
paddq
jecxz
push
jb
push
mov
and
aas
aas
out
adc
xlat
fsubrl
add
sbb
cmp
jnp
ljmp
jp
into
arpl
popf
push
dec
xchg
lret
add
incb
fstps
sub
and
fnstcw
mov
sahf
lods
push
out
xchg
lods
inc
mov
push
aas
mov
fcmovb
ret
pop
int3
enter
or
push
es
je
dec
push
push
inc
and
ds
sub
pop
test
mov
leave
sub
xor
test
mov
xor
jae
out
arpl
sarb
and
fdivrl
and
ds
lea
cli
lods
cmp
jo
shlb
cmpsb
mov
jle
loop
lods
ss
mov
ljmp
shlb
test
xor
hlt
outsb
clc
repnz
and
push
ret
push
xchg
xor
lods
adc
std
inc
mov
xchg
in
sub
cmpsl
and
inc
mov
dec
jne
or
into
sbb
lret
push
insb
mov
jg
push
or
cmp
ret
clts
shlb
inc
xor
mov
pop
jle
xchg
cmpsb
fmuls
mov
js
mov
and
or
xor
jnp
mov
pop
add
and
or
cwtl
cmc
add
ret
subl
imul
xchg
mov
sub
hlt
sub
ficomps
jecxz
cmp
sbb
cmp
in
mulb
xor
in
jnp
rorl
shlb
fsin
mov
loopne
mov
mov
adc
sub
adc
sub
in
inc
imul
fimuls
dec
test
test
dec
or
cmp
test
ljmp
nop
out
xor
hlt
fidivl
push
sub
adc
sbb
popf
ret
std
arpl
xchg
xchg
ficomps
daa
pop
xabort
sarl
jle
add
cmp
dec
add
mov
mov
imul
add
orl
jl
cmp
pop
das
sti
or
push
aas
ss
ja
iret
fs
mov
test
mov
inc
loopne
in
ret
xlat
ja
subl
gs
cmc
adc
lahf
mov
add
jge
cs
cmp
test
ret
ljmp
mov
and
daa
dec
xor
outsl
sub
daa
fldl
or
sub
cmc
das
pop
mov
xchg
les
and
cmp
jmp
scas
enter
inc
pushf
adc
test
jge
icebp
jns
js
push
or
lcall
push
mov
sbb
pop
add
mov
js
jne
dec
mov
xor
and
cmp
repz
lret
in
mov
imul
neg
les
mov
xor
fs
xchg
push
insl
les
mov
push
fistl
jae
or
xchg
jl
out
roll
adc
inc
out
insb
lret
lods
inc
mov
pop
lcall
in
aas
incb
testl
shll
xor
mov
dec
insl
out
add
or
adc
adc
out
mov
or
dec
sub
jnp
xor
aas
pop
jecxz
xchg
inc
pusha
insl
pop
inc
imul
mov
push
jae
test
dec
sub
rcll
lret
push
jns
xchg
jmp
mov
cmc
scas
dec
outsb
mov
jecxz
bound
mov
xchg
ss
mov
les
jmp
sarl
fidivs
push
xchg
dec
dec
and
or
xor
mov
jecxz
repnz
xor
mov
push
out
stos
aad
aam
fisubrl
into
cmp
in
imul
jne
jnp
adc
inc
xor
sti
iret
dec
xor
pop
repnz
sti
mov
push
add
sub
pop
mov
cwtl
xchg
jae
cmc
and
xchg
jle
xor
adc
jo
pusha
test
add
cmova
pop
and
adc
or
and
sbb
clc
inc
pop
pop
pusha
call
jl
sbb
or
test
cmpsl
mov
or
cmp
and
ds
loop
aaa
pop
inc
cltd
push
dec
incl
ja
cmpsl
xchg
xor
inc
mov
push
lds
xchg
ja
mov
adc
sbb
mov
int
addb
out
adc
imul
scas
fs
cs
sub
mov
fsts
mov
dec
inc
sahf
jne
negb
push
jb
in
stc
dec
push
xchg
mov
popf
mov
stos
lret
add
pop
sbb
iret
and
ret
inc
stc
clc
cmp
repnz
std
fdivl
int
cmp
loopne
jns
movsb
dec
pop
jne
addl
mov
lcall
xlat
cmp
ficoml
xchg
or
or
dec
inc
aaa
sbb
mov
sub
sarb
and
in
push
arpl
lret
and
add
lods
jmp
sub
mov
mov
pop
cmpsl
push
jge
mov
test
outsl
dec
je
movsb
outsl
mov
mov
lret
cmc
add
pusha
shl
fwait
cld
cli
push
rol
js
jmp
mov
in
fwait
adc
push
ficomps
outsl
jo
cmpsb
test
es
xchg
popl
mov
mov
mov
lret
imul
loop
cmp
aam
pop
mov
cmp
repnz
sahf
lock
cmp
iret
icebp
iret
jno
sbb
jno
adc
sub
fucomi
xchg
or
pushf
arpl
cmp
std
dec
ds
scas
lods
inc
xchg
push
pop
mov
pop
and
mov
mov
inc
push
das
mov
xchg
xchg
jae
mov
out
call
cmp
inc
or
inc
jmp
lods
xchg
xor
push
xchg
ret
mov
daa
push
or
cmp
or
mov
sub
bound
jp
xor
xor
in
sub
mov
into
out
sar
add
insb
cwtl
xchg
icebp
adc
mov
sbb
jns
sub
stos
imul
adc
cmp
loope
addr16
sarb
out
sub
sub
and
stc
or
jb
sbb
fldenv
sbb
in
xor
cld
cmp
fs
cmp
xlat
inc
stos
inc
and
sbb
xor
xor
sub
or
add
pop
into
in
push
ficompl
cld
push
or
inc
lcall
dec
or
jb
jo
mov
sub
ret
cmpsb
jnp
xor
mov
push
sub
arpl
xor
loopne
fisttpl
rolb
pop
cmp
cs
out
subl
and
adc
mov
cmp
or
push
lret
clc
test
test
push
dec
mov
cld
cmp
outsb
inc
es
sbb
xor
push
aas
int3
jnp
lods
in
mov
rcll
xchg
mov
push
add
cltd
fsts
out
pop
mov
pop
clc
push
ret
ds
push
sbb
pop
in
dec
jae
arpl
sub
and
stos
movsl
mov
fnstcw
sbb
aad
cmp
aad
inc
sbb
or
sub
xor
push
ret
pop
call
jle
pop
inc
sbb
iret
mov
add
sbb
subb
xor
lret
mov
mov
jecxz
gs
adc
jne
xchg
fwait
xchg
es
stos
cmp
aam
dec
jnp
lret
hlt
fs
jp
pop
test
jb
add
pop
ret
sbb
xor
test
add
repz
pop
lods
adc
adc
movsb
mov
out
imul
in
test
push
mov
lcall
fxch
and
fiaddl
sub
cmp
or
shr
es
or
push
push
push
jo
mov
sub
scas
pushf
xchg
test
or
xor
mov
jns
push
or
sahf
or
inc
test
mov
movsb
iret
in
push
lcall
ja
jg
pop
xchg
imul
sbb
jg
nop
imul
lret
mov
bound
xchg
add
or
jle
cmp
lahf
push
dec
push
fs
cltd
xor
add
test
cli
pop
aaa
or
and
push
mov
pop
mov
addl
es
repnz
imul
sbb
mov
mov
cmp
enter
jge
pop
jmp
cmpsl
adc
add
stos
dec
inc
jmp
xchg
mov
or
ficompl
not
sbb
lret
mov
aad
out
fsubrs
lret
rcl
mov
insl
mov
insb
test
and
cwtl
lock
mov
shrl
mov
jne
or
cmp
sbb
test
add
mov
and
cmove
jp
adc
ds
lea
shll
dec
pop
cltd
test
xchg
mov
lds
int3
push
pop
insb
pushl
jmp
cmp
push
xorb
imul
mov
aad
push
popa
add
bound
movsb
repz
out
sarl
push
fisubs
inc
sub
pop
imul
pop
mov
rorb
xor
testl
mov
sbb
sub
leave
inc
xor
xchg
cmc
push
sbb
sahf
ret
sbb
popf
gs
shrl
stc
shlb
xor
in
decb
pusha
rorl
pop
xchg
xchg
daa
es
ds
inc
inc
mov
outsb
jg
mov
loop
shl
cmpsl
cs
mov
dec
sbb
aad
cmp
and
adc
push
pop
inc
shlb
in
scas
xor
add
mov
mov
flds
mov
jmp
sahf
scas
jne
mulb
jmp
insl
cmpsl
adc
xchg
test
mov
mov
inc
scas
out
popa
movsb
dec
mov
insl
imul
xor
js
cmp
int
sub
sub
cmp
xchg
push
scas
mov
pop
cmpsb
fwait
push
cwtl
aas
push
pop
pop
sti
jle
mov
sub
das
push
int
stc
cs
stos
push
test
or
push
jge
mov
pop
dec
sub
es
test
pop
aaa
pop
int
and
or
mov
xchg
ss
rcl
movsb
sub
ja
cmc
add
rclb
ljmp
je
pop
push
test
in
int3
loop
mov
mov
mov
dec
in
cmp
movl
movsb
stos
movsl
subl
pop
insb
mov
jbe
sub
xlat
mov
push
mov
cwtl
lret
mov
mov
xor
mov
add
xchg
test
mov
dec
xor
roll
mov
mov
push
ss
jo
mov
movsl
push
cmpsb
pop
in
jbe
sbb
cmp
push
push
mov
les
jmp
imul
fnstenv
je
cmp
sar
xchg
je
pop
xchg
cmp
add
inc
lock
sub
ljmp
or
ds
add
sti
scas
mov
xor
push
mov
addb
or
shll
add
das
dec
add
sbb
cmpsb
jno
sub
fiaddl
in
test
or
and
int3
je
pop
into
outsb
movsb
push
cmp
mov
in
inc
mov
adc
lea
mov
cmpsl
push
adc
add
roll
out
insb
mov
addr16
push
shll
sub
adc
inc
cwtl
xchg
and
mov
push
js
pop
mov
imul
inc
jecxz
outsl
pop
sub
inc
cmp
fadd
add
and
jge
imul
and
pushf
movsb
leave
pushf
repnz
rcll
cmp
sub
jmp
xor
push
and
add
subl
push
dec
loop
out
pusha
shll
xchg
cmp
add
jo
adc
jns
jnp
xor
arpl
enter
push
aam
les
mov
adc
outsl
idivb
scas
ficomps
addr16
cltd
lods
out
sbb
imul
shrl
inc
push
push
cmp
leave
or
cmc
test
add
sti
inc
stos
out
fimull
xchg
mov
xor
push
lret
adc
imul
inc
in
or
cmp
add
lret
lock
pop
xabort
outsl
test
lods
ljmp
mov
mov
or
scas
or
scas
lods
outsb
daa
adc
add
ja
outsb
loopne
daa
test
and
pop
cltd
andl
and
sub
sub
sub
push
pop
into
stos
mov
cmpsb
jle
mov
jmp
and
cmp
aas
stos
adc
or
sub
add
push
push
xor
or
cmc
idivb
jl
insl
mov
fcmove
jecxz
xor
bt
outsl
sti
and
arpl
ss
mov
jge
and
xchg
movsb
push
push
loopne
ret
test
int
dec
lods
fidivrl
sbb
loope
add
repnz
ror
out
sbb
enter
jae
ljmp
cmp
push
sub
imul
aam
jmp
push
ret
rcr
jmp
push
jmp
pop
push
xchg
cld
xchg
stos
or
arpl
mov
lds
inc
add
xchg
sbb
mov
es
popf
sbbb
xor
pop
cmpsb
jge
jae
int
adc
pop
pop
and
stos
fucomip
popf
pop
push
push
mov
jbe
rolb
into
mov
cs
xlat
movsl
jbe
push
mov
mov
mov
dec
repnz
pop
pop
rcll
in
fabs
fsubrl
push
jle
xor
jne
sbb
cmpsb
je
jmp
cmp
jne
xor
mov
arpl
pop
sbb
xchg
loop,pt
out
icebp
mov
sbb
jl
mov
aas
add
add
mov
pop
push
repnz
mov
xchg
mov
sbb
ficoml
in
sbb
rolb
test
pop
push
repz
or
inc
inc
jno
repnz
xchg
test
jnp
int
lret
ljmp
orb
dec
dec
push
xchg
or
xchg
in
and
push
mov
push
jle
stos
lods
test
cmp
xor
cmpsl
or
pop
push
or
dec
and
ss
inc
int3
lcall
loope
lcall
cmpl
leave
and
outsb
mov
dec
andb
jl
std
xchg
lcall
or
loope
inc
fldl
out
lahf
aaa
iret
gs
subl
lret
imul
aad
dec
dec
mov
filds
pusha
fsub
orl
aam
not
test
fadds
cld
xchg
lods
add
dec
dec
gs
push
mov
cmp
pushf
pusha
mov
pop
in
and
insb
clc
loopne
sar
sbb
or
pop
sub
mov
outsl
sbb
push
std
push
mov
lock
jmp
rorl
jl
pop
mov
call
fiaddl
sub
lret
insb
add
pop
sbb
sbb
push
jmp
mov
jmp
shrb
cmpsb
iret
inc
pop
je
pop
js
je
popf
or
ret
rorb
xchg
ret
out
aas
mov
mov
flds
xchg
push
cmp
insl
add
rolb
xchg
and
cld
aad
dec
adc
arpl
in
push
xchg
mov
inc
mov
lods
call
aas
push
imul
xor
and
xor
out
clc
scas
movsb
adc
jne
addr16
int3
movsb
xor
fidivl
sbb
pop
aaa
rclb
aaa
sbb
adc
mov
mov
and
mov
cld
mov
dec
addl
cmpsb
lock
bound
cmpsl
mov
jl
adcb
hlt
nop
sahf
inc
lock
pop
push
push
scas
xchg
aad
outsl
xchg
popa
jecxz
cltd
aad
mov
enter
mov
insb
xchg
aad
pop
repz
cltd
cli
cmpsb
sbb
out
push
es
out
cs
lods
shl
shll
daa
rorl
gs
clc
gs
jns
or
and
das
mov
pop
sub
out
iret
xchg
int3
ss
pop
push
and
pop
sub
and
out
xchg
jmp
lock
call
lret
je
ret
je
inc
movsl
sbb
int
repz
daa
and
dec
out
inc
pop
or
mov
shl
js
in
fsubs
pop
loopne
xor
push
and
and
push
xor
inc
push
xchg
pop
test
push
in
cmp
sbb
xchg
jnp
call
inc
mov
xchg
out
cmp
stc
sarb
call
repnz
dec
insl
jo
adcb
or
mov
mov
inc
repz
push
fistpll
cwtl
adc
add
fldt
lret
jo
arpl
xlat
and
mov
in
pop
loop
xor
fnstenv
xor
inc
ljmp
bound
ret
movsb
mov
jo
jle
push
mov
orb
or
mov
outsl
jnp
in
xchg
add
xchg
inc
jge
xlat
mov
out
out
mov
out
and
out
sahf
out
inc
mov
fsubl
push
mov
push
inc
hlt
lret
sub
xlat
jae
repnz
imul
jnp
mov
adc
push
lods
dec
fcmovne
lret
fnsave
and
push
rcrl
dec
jnp
adc
cmp
mov
mov
loopne
cmp
push
lea
pop
ljmp
int3
pop
fs
cs
es
inc
test
mov
loope
and
jbe
push
xor
sub
cmpb
orw
sub
addr16
mov
inc
call
cmp
pop
jge
loop
jnp
jae
sahf
arpl
cltd
xchg
sub
push
dec
pusha
setnp
jecxz
adc
pushl
out
movsb
das
mulb
mov
sub
scas
cmpsl
sahf
cmp
mov
push
adc
pushf
pop
insb
insl
fnstsw
add
inc
jg
and
and
daa
das
inc
cmp
insl
mov
mov
jecxz
cmovne
scas
int3
pushf
pop
add
xor
lea
pop
js
sysexit
or
notl
push
pushf
mov
movsb
push
daa
imul
inc
out
loope
int3
data16
inc
sar
add
push
adc
inc
xor
ss
add
sbb
or
loope
pop
ror
mov
aam
jb
xchg
fcmovnu
push
sub
push
mov
or
aaa
dec
add
stos
sbb
adc
rcll
xchg
sub
xor
scas
mov
jp
in
hlt
add
xor
in
sub
jnp
outsb
es
dec
pop
inc
inc
push
inc
cmp
test
push
cld
jp
sub
inc
js
ficomps
cmpsl
push
cltd
xor
mov
jae
and
mov
pop
stos
enter
call
and
mov
push
out
pop
dec
inc
inc
cmp
adc
add
leave
and
sbb
sbb
sarl
sub
leave
sti
and
cmpl
sbbb
dec
ret
shrb
dec
scas
mov
or
pushf
movsl
aaa
mov
aaa
lods
je
ja
sbb
or
mov
stos
sub
and
arpl
shll
cmp
ficomps
mov
pop
cmp
rcrl
in
inc
rcr
or
nop
das
pop
pop
dec
aas
xchg
push
ret
push
and
pop
mov
js
gs
mov
mov
ret
fwait
mov
rol
je
in
and
sub
dec
adc
cmp
rcll
pop
adc
fcmovnb
mov
xor
imul
pop
aad
in
push
push
sbb
push
push
aas
dec
pop
pop
xchg
cld
mov
dec
jno
mov
mov
sbb
and
lahf
andb
inc
pusha
lahf
orb
jne
stos
push
hlt
sub
jbe
loop
pop
push
out
inc
jo
mov
into
cli
jle
mov
hlt
adc
scas
scas
fnstsw
scas
jecxz
aas
or
cmp
push
xchg
fdiv
jge
into
sub
or
vshufps
ret
movsl
imul
jo
cltd
push
rcrb
sbb
mov
or
lds
aam
jl
fiadds
mov
jno
inc
rorb
jae
lods
add
xchg
cmpsb
cmc
testl
add
lods
mov
out
rclb
stc
xor
js
fdivrs
lds
daa
cmp
lahf
pop
mov
mov
push
aam
movsb
jns
and
les
je
pop
outsb
xchg
mov
mov
push
cmp
push
push
dec
mov
fnstsw
in
dec
sub
adc
pop
jmp
iret
adc
xchg
inc
push
xchg
jecxz
adc
ds
xchg
movsb
xchg
lret
adc
aas
data16
fisttpll
sbbb
in
mov
cmp
inc
aad
xor
movsb
mov
xchg
lods
xlat
xchg
shlb
mov
insb
add
rclb
movsb
jo
dec
inc
push
xchg
pusha
out
jg
std
sub
jne
test
shll
es
popa
push
ret
ja
pop
mov
add
sbbl
dec
or
add
ja
je
cmp
cli
js
outsb
clc
fdivs
cmp
push
sbb
cmp
out
pop
mov
out
ss
jo
jnp
pop
jnp
mov
std
and
addl
je
xor
mov
jb
ljmp
imul
rcrl
ss
ljmp
loopne
in
sbb
sahf
imulb
mov
loopne
push
insl
addl
scas
jle
fisubrs
jne
in
xchg
sbb
arpl
mov
testl
les
or
cmp
iret
test
mov
ret
in
int3
push
std
in
xchg
out
out
xchg
scas
inc
inc
sbb
and
pop
or
jbe
jo
adc
leave
xchg
xchg
jns
std
and
xor
inc
cmp
or
push
dec
andl
mov
test
fisttpl
mov
mov
arpl
pop
nop
inc
rorb
adc
pop
in
lahf
pop
mov
lahf
pop
in
movb
mov
cli
cmc
stos
cli
repz
or
add
sbb
lock
push
inc
sub
flds
gs
loope
and
mov
push
jp
sbb
out
pop
mov
repnz
lods
push
push
xlat
inc
fildll
test
lea
jno
movsb
aam
je
fwait
jg
push
clc
cmp
enter
mov
jge
icebp
xchg
add
ds
pop
dec
imul
jle
lock
cs
mov
andl
jnp
filds
mov
mov
test
sub
or
aad
insb
movb
in
gs
fistl
lcall
in
mov
pop
mov
cltd
xchg
pop
pop
std
mov
sbb
jnp
into
cli
sti
js
sarl
mov
mov
pop
out
add
inc
shll
fldcw
and
push
scas
std
insb
pop
mov
or
add
mov
insl
push
push
cmc
imul
cmp
jnp
test
jl
repnz
fwait
inc
pushf
out
pop
divl
fiaddl
ds
vandpd
push
jl
orl
cs
pop
jbe
pop
mov
mov
mov
and
jns
mov
ds
iret
pusha
mov
jl
sbb
je
pop
js
pop
pop
stos
rcll
add
mov
jmp
mov
stos
push
imul
xchg
xor
mov
push
imul
jle
jne
mov
cs
cmp
jle
out
das
pop
test
jecxz
int
sub
sbb
leave
stc
mov
int3
popf
sub
sahf
jecxz
movsl
jmp
sbb
push
push
jns
or
and
jbe
ds
adc
ds
sub
jp
subl
lods
rcrl
mov
sahf
mov
punpckldq
ljmp
nop
nop
ret
out
stos
inc
outsl
loop
mov
jb
sbb
lret
icebp
popf
pushf
mov
jmp
push
fcmove
aaa
shlb
lahf
mov
mov
xchg
adc
cmp
mov
int3
aad
cmp
out
xchg
add
xchg
imul
adc
out
pop
mov
inc
fdivr
repz
sbb
lods
insb
notl
imul
out
ds
cmc
andl
mov
subb
arpl
add
xchg
stos
shrb
idivb
push
jne
loope
dec
add
sbb
lahf
jmp
incl
inc
jge
rorl
cmp
shl
mov
mov
insl
fs
sub
jle
and
pop
psubd
les
or
mov
in
arpl
jecxz
mov
lods
mov
movsl
sub
cmpb
pop
out
aas
ss
rol
or
jle
lods
std
jnp
scas
scas
or
xor
mov
mov
add
movsl
out
mov
incb
mov
into
pop
mov
fs
popa
xchg
push
pop
push
inc
mov
lret
lret
jno
and
add
sub
sarl
lret
mov
and
insl
jno
out
insl
icebp
adc
adc
aad
inc
sbb
dec
fsincos
adc
sahf
fimull
pop
sbb
test
jecxz
adc
repz
xlat
lahf
sbb
mov
push
flds
fcmovbe
pop
outsb
aas
fwait
add
idivb
add
faddp
les
loop
loop
ficoml
pop
sbb
lods
and
data16
xchg
data16
sub
mov
gs
pop
mov
xor
mov
adc
xchg
push
dec
ficompl
jmp
mov
cltd
aas
das
pop
pop
negb
mov
inc
push
mov
fldenv
jg
dec
or
mov
add
push
imul
pop
pop
push
lea
cmpsb
out
or
lcall
and
stos
or
push
in
xchg
fsubs
or
mov
iret
pop
inc
pop
test
fwait
rep
push
push
sahf
mov
inc
cmp
push
outsb
or
lock
lock
mov
bound
sahf
cmpsl
xorl
xor
sub
scas
es
rol
xor
sbb
in
fbld
iret
lcall
cld
data16
push
mov
aaa
push
das
mov
mov
cmp
or
mov
test
xchg
xchg
add
call
hlt
or
rol
sub
push
scas
aad
mov
insb
jge
fs
add
ret
or
std
adc
and
lcall
stos
xchg
test
daa
jns
mov
scas
loope
subl
or
and
push
sub
jbe
rcl
lods
incl
xor
mov
push
adc
out
add
test
mov
das
aaa
or
ret
pop
push
sub
inc
into
ret
dec
push
dec
xchg
mov
fnstcw
xchg
push
mov
xchg
push
jo
pop
mov
int
jno
dec
add
ja
xorl
sahf
inc
scas
aad
adc
xchg
add
xchg
mov
mov
dec
cmp
pop
cmp
roll
scas
cwtl
xchg
mov
dec
cmp
mov
in
cwtl
int
sbb
shll
cld
lock
mov
jns
aam
mov
test
xor
dec
dec
sub
loope
shll
push
out
dec
repnz
inc
fldl2t
lock
pop
push
add
insb
aad
lock
shl
mov
test
nop
aas
push
push
jl
mov
cmp
stos
es
cltd
shlb
inc
jmp
sub
jg
jae
xchg
les
adc
mov
stc
pop
cmp
sub
mov
lock
mov
negl
into
into
test
mov
outsl
fldcw
or
sub
ror
mov
push
scas
aas
mov
xchg
outsl
cmpsl
sarb
pop
loop
jb
testb
test
jae
ret
adc
inc
cmpsl
rcll
mov
xor
mov
pop
insl
aas
stc
sub
sbb
sbb
jp
lahf
daa
dec
arpl
inc
ret
xchg
popf
mov
pop
out
xlat
cmp
push
cmp
std
jmp
movsl
sbb
mov
testb
cmp
ror
call
movsl
sub
add
ret
jnp
rcrb
sub
sub
mov
pop
mov
addr16
fcmovbe
sub
mov
xchg
pop
call
outsb
mov
mov
jo
repz
int
adc
add
jbe
lret
xchg
cs
in
jp
sahf
mov
xchg
push
jno
xchg
dec
sub
adc
int
pop
rcl
pop
jbe
sbb
cmp
jmp
nop
mov
insl
cltd
inc
cld
jl
cli
test
add
in
xchg
out
mov
jns
mov
mov
push
out
loop
int
stos
push
cmp
into
aam
or
push
rolb
hlt
insb
jecxz
cltd
push
imul
loopne
leave
push
jae
xchg
dec
pushf
movsl
sbb
cmp
call
push
pop
or
lahf
mov
fmulp
icebp
lahf
xchg
xchg
or
enter
loop
rclb
jbe
pop
pushf
dec
in
fimuls
mov
jecxz
cmpsb
lret
out
inc
cmp
loop
push
aas
ret
cmp
popa
cmp
aam
out
stc
inc
fists
adc
push
jb
or
jp
fcoml
push
fldt
xlat
fs
lock
jg
or
addr16
mov
pop
insb
xchg
or
es
jge
mov
push
cltd
mov
daa
adc
sbb
inc
mov
cs
loope
dec
or
mov
push
int
addl
cmpsl
lahf
test
dec
dec
movsl
pushf
sbb
cmp
jo
cmc
add
sbb
nop
lods
scas
popa
mov
aaa
push
xor
xor
ret
pop
or
dec
push
sarl
pop
in
inc
aam
mov
pushf
push
lcall
and
add
lahf
sbb
insb
bound
mov
or
in
int
out
lods
cmc
xor
cs
fsubl
pop
mov
shlb
shrl
insl
xchg
adc
dec
movsl
sarb
icebp
les
mov
les
dec
pop
rcl
push
sbb
push
test
push
popa
lret
test
mov
mov
ja
xor
sub
mov
adc
fisubl
mov
repnz
pop
inc
mov
cmpsb
adc
mov
int
in
fisubrl
sbb
mov
sub
dec
jo
sbb
mov
sbb
or
jbe
mov
dec
adc
enter
inc
mov
xchg
scas
cwtl
jmp
sub
aas
mov
jns
sbb
stc
sbb
or
dec
shlb
xchg
mov
into
xlat
jae
push
inc
push
jp
aas
pop
fwait
aam
pop
mov
cmpsb
xor
push
mov
test
jl
mov
mov
stc
notl
sub
outsb
pop
push
and
dec
mov
enter
gs
mov
xor
insb
fiadds
fwait
movsb
ret
lea
repnz
or
xchg
lahf
add
or
aaa
jno
lods
push
enter
push
das
dec
aas
insb
int3
or
sbb
int
jmp
inc
shrb
inc
inc
leave
aaa
sbb
test
mov
inc
orl
lahf
loope
jb
push
mov
cmp
js
pop
repnz
int
pop
mov
aad
jae
mov
sahf
pop
addl
mov
push
in
mov
jae
lea
inc
adc
notb
pop
push
pop
xchg
aas
dec
pop
or
sbb
das
push
adc
fmull
cmp
lahf
dec
mov
out
popa
push
adc
cmp
aad
jne
mov
dec
mov
sub
inc
test
dec
outsl
pop
mov
dec
mov
int3
into
dec
fsubs
inc
fcomi
movsb
mov
sbb
outsb
inc
rclb
jnp
test
or
fists
ss
fldcw
xchg
cmp
sbb
cmp
int3
pop
iret
fadds
loope
pop
mov
lods
jno
mov
xor
mov
cmc
ds
adc
or
push
jg
scas
fnstcw
or
adc
sub
mov
scas
cmc
or
inc
mov
and
jne
movsl
mov
sub
fbld
dec
stos
shlb
test
mov
pop
das
mov
push
cmp
dec
sub
cmpsb
or
shrb
andb
cmp
mov
aad
int
xor
jge
shr
mov
pushl
insb
push
icebp
test
sub
ja
shl
xchg
pop
and
mov
xchg
add
push
dec
jge
leave
inc
push
imulb
dec
xchg
jb
out
int
movsl
rolb
cmc
movsb
xchg
mov
xor
aam
nop
lret
mov
inc
inc
fwait
or
insl
std
add
enter
test
lock
pop
int
popa
push
mov
xor
mov
xor
and
call
push
sbb
ret
pop
rorb
sbb
xchg
test
mov
fisubrl
xlat
lds
jno
fbstp
pop
nop
incl
cmpsb
scas
sahf
into
rorb
dec
icebp
data16
adc
adc
add
sub
mov
sahf
adc
lock
pop
jo
shrl
jnp
mov
jmp
ljmp
shll
mov
add
adc
dec
mov
fwait
xchg
push
not
lock
push
sarl
daa
push
cli
pop
pusha
ret
call
lcall
fwait
pushf
enter
sbb
shlb
push
lock
xchg
test
push
mov
mov
lods
mov
ret
xchg
pop
movsb
cmpsl
jl
arpl
imul
int
pop
test
iret
mov
std
mov
iret
rcrl
pushf
out
adc
pop
mov
and
cmc
sbb
in
mov
lods
and
nop
in
dec
push
cmp
sub
hlt
cs
mov
mov
pop
lods
jg
pop
roll
sbb
clc
std
pop
jmp
repz
addr16
call
inc
test
arpl
cmp
mov
inc
xchg
adc
inc
test
inc
inc
inc
xor
shl
jg
fistps
test
sbb
lret
fcmovbe
insl
ljmp
mov
push
xchg
adc
lods
call
push
test
dec
cmp
int3
das
mov
and
test
mov
or
mov
das
sub
test
insb
shrb
pop
sbb
or
leave
sbb
xor
cmp
mov
sub
mov
inc
mov
andb
sub
rcll
mov
imul
jb
mov
or
in
push
pop
mov
ja
and
sbb
into
jnp
mov
movsl
popf
adc
mov
rcr
insb
jg
and
ror
pop
shll
fistps
adc
mov
mov
pop
clc
add
aam
dec
cli
jge
flds
cmp
in
mov
jns
mov
pop
cmp
dec
xchg
mov
adc
jmp
nop
enter
addl
pmaxsw
xor
cltd
rcll
sub
mov
incl
gs
dec
and
xor
aam
loop
pop
pusha
scas
out
aas
rcll
xchg
iret
ljmp
jl
xor
clc
mov
popa
cmp
mov
lods
cmp
jns
sub
lahf
pop
xor
add
xchg
jmp
fdivs
sahf
sub
cmpsl
mov
push
hlt
popf
movsb
jne
pop
or
rolb
push
xchg
add
pop
mov
xchg
cmp
aaa
pop
jg
std
dec
loopne
stc
cld
sar
daa
lods
fstp
jo
int
pop
outsb
pop
adc
pop
mov
je
add
movsl
fidivl
pop
mov
adc
outsl
out
adc
dec
sub
sub
inc
pop
enter
or
sbb
push
popl
leave
je
fwait
sbb
mov
jae
mov
imul
xchg
adc
mov
xchg
pop
lret
add
mov
test
call
lcall
add
ret
movsl
les
mov
push
pop
push
out
test
sub
adc
xor
push
mov
xorb
jb
imul
push
sar
and
xchg
scas
dec
xor
fdivs
std
push
pop
mov
sbb
dec
aad
push
cmp
or
fisubrs
jle
adc
sbb
push
jnp
aas
xchg
pop
xlat
and
jae
sti
dec
push
aam
idivl
scas
cmc
lret
in
dec
cli
in
icebp
shrb
and
leave
int
cmp
shrb
adc
out
sahf
aaa
stos
add
push
and
add
cmp
adc
jns
hlt
insl
and
lods
cmp
pusha
test
and
sub
pop
mov
inc
or
sub
ret
shll
dec
lods
test
jmp
mov
xchg
std
jae
dec
imull
xor
pop
mov
jb
xor
divb
sub
cmp
cmp
repnz
mov
or
dec
mov
cwtl
xchg
push
xchg
insb
add
test
push
sbb
scas
repnz
arpl
nop
insl
popa
dec
xlat
cld
push
std
xlat
data16
cmpsb
cltd
mov
pop
mov
and
push
inc
jge
ficompl
repnz
imul
sbb
ja
mul
imul
jns
jle
jne
lea
and
and
sub
push
jb
iret
inc
pop
fmul
fisttpll
lcall
adc
ret
fidivl
out
scas
cmp
shrl
adc
push
mov
std
testb
rcll
in
cmp
jns
jne
ret
shlb
dec
or
rcrl
test
inc
sub
xchg
daa
aas
xor
jmp
enter
inc
adc
cwtl
jns
adc
shlb
jg
rcll
push
loop
out
mov
xchg
dec
or
inc
lcall
jle
das
cwtl
lods
lods
cmp
jae
stc
test
mov
mov
roll
cwtl
nop
mov
sbb
add
xchg
inc
imul
std
fmull
test
sub
mov
icebp
movsl
in
sbb
mov
loop
int
loope
mov
inc
push
mov
cmc
mov
push
or
cmp
imul
sbb
call
jecxz
mov
cmp
mov
pop
and
call
jb
sub
popf
daa
cmpsb
pop
ljmp
adc
test
dec
cmp
inc
sbb
popf
mov
pop
jno
fstl
or
pop
mov
jns
aad
pop
pop
outsl
pusha
popl
arpl
xorb
push
out
xchg
jne
iret
out
cwtl
es
xchg
sbb
addr16
dec
dec
out
js
pop
scas
nop
loopne
mov
pop
and
mov
test
pop
or
das
xchg
push
sbb
inc
lea
cltd
inc
in
jg
push
sub
sti
shrb
add
inc
scas
pop
aad
sbb
out
dec
lods
push
sbb
pop
insl
pop
xor
and
xchg
das
lcall
sub
and
lods
and
ret
push
push
subb
imul
jecxz
rsm
xchg
mov
mov
xchg
mov
daa
mov
out
in
data16
cmp
cltd
addr16
push
mull
idiv
in
fsubr
imul
xchg
aam
cmp
and
mov
pop
lods
mov
scas
add
pushw
push
dec
cmovl
fisttpl
add
mov
mov
js
and
jp
or
out
mov
in
imul
push
dec
or
cmpb
cld
dec
sbb
rcrl
ds
in
fimuls
out
mov
inc
idivb
fisubs
stc
movsl
pop
movsb
std
nop
cwtl
and
dec
xchg
andb
int
lret
mov
fadds
and
test
cltd
dec
sub
pop
test
addr16
rorl
notb
movsl
shlb
mov
stos
add
in
movsl
mov
push
ljmp
jmp
xor
jecxz
les
pop
add
mov
in
insb
ljmp
dec
push
stos
pop
jmp
stos
or
sub
cmpsl
mov
sub
out
adc
and
enter
add
loopne
and
sub
andb
add
shrl
inc
aam
dec
inc
mov
dec
in
mov
repz
xor
dec
lds
insl
or
imul
mov
stos
xor
push
xchg
sub
pop
out
je
jmp
dec
ficompl
and
mov
jne
fldenv
pop
stos
sar
addr16
into
in
pop
jns
add
scas
outsb
ss
movsb
or
pop
movsb
in
sub
cwtl
les
fimuls
bound
and
insb
jmp
rcrl
inc
dec
call
xor
insl
dec
notl
sarl
pop
xor
imul
mov
inc
sub
mov
jl
pusha
xchg
pop
sbb
js
inc
arpl
fiaddl
inc
push
and
mov
outsb
shll
xor
mov
push
cltd
xor
add
mov
xchg
pop
mov
adc
dec
cli
sbb
xchg
mov
cmp
loope
cmc
mov
insb
jp
mov
popf
flds
cmp
inc
negl
es
inc
inc
insl
inc
add
pop
insb
fwait
pop
mov
mov
fs
popa
sub
xchg
sti
loope
ja
hlt
pop
sub
inc
test
push
nop
jbe
sti
scas
mov
lret
xor
lds
aaa
mov
pop
adc
imul
sbb
or
test
inc
mov
rcrb
push
mov
fsubl
push
and
and
sbb
hlt
push
enter
mov
mov
popf
push
out
rolb
gs
inc
loope
aaa
mov
jge
mov
push
arpl
mov
pop
fwait
dec
sbb
or
mov
arpl
sub
sub
jo
push
pop
xchg
jno
les
push
sbb
add
stc
mov
in
add
xor
xor
clc
or
mov
lods
sub
xor
xor
ljmp
test
sbb
aas
mov
cmp
in
mov
dec
mov
pusha
add
sbb
xor
mov
lds
movsl
pop
and
test
ljmp
xor
pop
loop
mov
aaa
ret
roll
xchg
sub
data16
inc
test
push
mov
lret
sub
mov
xor
bound
mov
lea
mov
jb
and
cmc
das
mov
jl
mov
cmpsb
in
mov
mov
loope
int
sub
sub
jmp
xchg
push
mov
mov
jge
adc
mov
jne
ret
cmp
xchg
faddl
imul
dec
and
mov
push
test
dec
or
imul
mov
push
sub
lock
push
sarb
inc
adc
les
loop
lret
shr
sbb
js
ja
xor
inc
mov
and
or
ds
mov
push
mov
cmpsb
jno
cs
scas
mov
xchg
mov
or
sbb
stos
lcall
xchg
dec
sub
pop
xorl
dec
scas
cmpsl
cmc
movsl
or
mov
mov
in
nop
mov
lahf
dec
ret
dec
cmc
mov
xor
fistpll
add
je
adc
xor
les
adc
and
jo
mov
mov
fisubrs
xlat
popa
neg
mov
add
shrw
cmp
add
fmull
mov
add
mov
imulb
orb
lret
out
lahf
adc
fs
jne
ret
pusha
imul
jge
mov
pop
mov
jmp
jge
sarb
pop
sarb
out
mov
mov
in
lret
xor
mov
inc
shrl
bound
hlt
test
push
xor
ficoml
les
jg
jl
in
add
add
jne
les
daa
jp
jno
mov
mov
daa
mov
mov
mov
lock
in
push
jg
push
push
mov
out
mov
adc
mov
scas
scas
dec
lahf
jg
cld
mull
mov
push
or
idiv
or
mov
out
iret
sub
loopne
cmpsl
adc
inc
sub
fisubrl
jl
out
daa
push
xor
subl
scas
aam
sub
icebp
adc
push
insl
jb
push
lret
dec
inc
jns
jns
out
jmp
mov
cmp
or
dec
xchg
mov
jbe
or
push
jmp
lods
adc
ljmp
jne
pop
or
jmp
xor
insb
or
inc
jne
cmc
jbe
adc
mov
stos
push
stc
inc
fcoml
out
data16
mov
cmp
mov
inc
aad
cmp
xchg
movsb
xbegin
inc
ret
movzbl
and
fiaddl
dec
xor
sub
mov
into
out
fildl
fdivrl
mov
mov
mov
sub
xor
fwait
loop
add
shlb
pusha
fstps
mov
mov
adc
xchg
jmp
loop
adc
mov
cmp
mov
fwait
aas
push
dec
jp
mov
nop
xchg
jg
popf
adc
hlt
mov
jnp
fisubrs
mov
push
xor
leave
pop
inc
shll
lock
mov
call
mov
fsub
jp
mov
shr
xor
ljmp
cs
mov
hlt
xchg
add
cmpsb
pop
int
call
xchg
nop
or
pop
xor
aam
xchg
popf
inc
push
cmp
mov
sub
out
jl
imul
fimull
sbb
fadd
pop
push
mov
xor
scas
mul
in
repz
jns
jle
xchg
sbb
rolb
pop
sub
xchg
jmp
jno
xlat
jle
arpl
inc
inc
mov
mov
les
mov
repz
add
fstpl
xchg
cltd
cmp
cmp
xor
cmp
inc
shl
testl
lods
fmuls
in
cwtl
sub
xor
or
jns
or
aaa
sub
xchg
mov
je
lea
in
jb
jns
repz
push
inc
mov
mov
test
jle
sbb
fisttpll
ja
push
cmp
jae
stc
aas
pop
mov
pushf
out
test
mov
cmp
xlat
xor
mov
sbb
mov
int
mov
dec
loop
jns
mov
pop
pusha
leave
loop
dec
rolb
dec
or
pop
sub
mov
push
or
xor
add
mov
frstor
mov
icebp
shll
iret
pop
push
fidivl
sbb
pop
ds
sub
cmc
in
and
push
negb
sahf
inc
or
insb
frstor
js
push
cmpsb
stc
lock
or
lret
mov
bound
mov
pusha
call
rcrb
call
xchg
daa
pusha
pop
in
ficoml
or
xchg
mov
clc
fidivl
adc
or
movsl
pop
mov
lcall
mov
pop
js
addr16
imul
push
pop
or
mov
pop
mov
insb
out
outsb
add
int
test
fsts
xchg
xchg
iret
or
push
imul
xchg
and
outsb
loope
nop
cld
cs
xchg
loopne
pop
into
xchg
test
adc
jl
imul
fcoms
push
xchg
je
dec
or
lea
jns
jns
or
jne
xorl
cmp
mov
xor
out
sbb
movsl
cmovp
loope
in
adc
xor
testb
push
jmp
xorl
add
adc
jmp
jbe
loope
pop
scas
jae
stos
cmpsb
xchg
cmovp
jle
fcompl
jne
jp
aaa
mov
aad
daa
mov
stos
lds
mov
lods
xchg
int
jbe
and
pop
dec
cmpsb
lock
outsl
dec
jl
cmp
jp
push
sub
mov
sbb
mov
and
or
lds
xchg
outsl
mov
movsl
sbb
aaa
cmp
cmp
lock
stc
fs
cmp
sbb
cmp
pop
inc
jg
fldcw
je
ret
inc
push
jmp
movsl
repnz
dec
adc
movsb
adcl
jo
pop
movsl
mov
mov
jg
mov
push
sbb
je
arpl
lea
hlt
adc
movsl
lods
cmpsb
mov
std
mov
cmp
lcall
mov
out
cmp
ja
fimull
sbb
call
mov
or
push
mov
sbb
sub
f2xm1
mov
inc
mov
cmc
add
movsl
pop
fistpl
add
popa
fisubl
lods
dec
sbb
jne,pt
call
xchg
pop
sarb
lds
mov
push
filds
incl
push
icebp
cltd
adc
iret
inc
ja
mov
fisttpl
inc
ret
adc
outsb
cmp
rcrl
movsb
sbb
ja
sub
dec
inc
jnp
xchg
lret
push
lods
push
int
mov
out
test
ds
cltd
les
mov
sub
ret
daa
repnz
pop
cmp
movsb
loopne
pop
cmp
adc
add
ljmp
test
inc
mov
xchg
pop
inc
fstp
push
mov
movsl
cltd
pop
add
mov
or
adc
ss
fstps
cmp
mov
movsb
adc
gs
sbb
jl
stos
mov
hlt
outsl
mov
cld
xchg
lods
sbb
cwtl
dec
xor
mov
dec
or
sub
les
test
mov
sub
stos
jb
stos
out
scas
clc
or
and
mov
mov
xlat
lea
adc
dec
mov
push
cmc
test
mov
xchg
fildl
jp
std
jne
dec
je
sbb
aam
mov
fldcw
pop
pop
rorb
dec
loope
mov
xlat
xlat
aam
push
mov
xor
decb
xchg
sub
jne
jns
int
test
add
jle
rcrl
test
jge
push
cmp
lds
or
outsl
push
repnz
xor
fcoms
push
push
sub
mov
jg
in
addr16
sub
push
in
pop
mov
ss
loopne
sahf
rolb
and
bound
lods
push
aam
psubsb
mov
lock
fwait
cmp
inc
outsl
addl
scas
movsb
ror
pop
cmpsl
decl
jle
aad
and
imul
sbb
lahf
out
xchg
cmp
nop
mov
mov
dec
jne
xor
sub
ds
les
arpl
adc
jg
into
jno
aas
pop
add
push
mulb
aam
xchg
ret
dec
xchg
fadd
sub
push
push
xchg
scas
into
scas
pop
das
pop
xor
out
outsb
dec
and
or
cmpsb
enter
inc
mov
sahf
es
out
bound
or
xchg
jmp
add
dec
pop
push
mov
inc
and
or
xchg
sbb
xor
in
or
lods
mov
clc
cmpb
adc
ret
mov
pop
jo
adc
or
dec
int
mov
ja
xchg
pop
dec
and
retw
mov
pop
ret
or
cmp
and
jns
cli
rolb
mov
cmpsb
jmp
ss
flds
repnz
pop
push
sbb
mov
stc
scas
add
jecxz
fisttps
adc
pop
add
jo
xchg
rorb
lcall
ret
hlt
or
loope
pop
sub
sahf
sbb
adc
add
repz
push
pop
movsl
mov
pushw
js
jns
shrl
push
adc
pop
es
inc
and
jg
xchg
movsl
fistpl
push
push
pop
movsl
daa
xlat
je
js
stc
xchg
jp
xor
fidivrl
mov
js
xorl
push
popf
fcoml
icebp
inc
repnz
mov
stc
pop
sbb
jge
mov
es
aaa
das
xchg
minps
cmp
out
dec
mov
repz
ficoml
mov
ljmp
test
leave
push
push
sub
pop
xor
movsl
cmp
pop
sub
cmp
mov
aad
adc
mov
dec
outsl
sbb
mov
mov
mov
xor
in
inc
cld
subl
rcll
mov
mov
pop
ds
repz
xchg
push
int
stos
andb
mov
aas
pop
push
jno
jl
or
dec
popa
pop
xchg
test
fmulp
outsb
loope
mov
repz
add
adc
push
pop
out
mov
pushf
jge
xchg
insl
xchg
stc
je
sti
or
fcoml
movl
dec
jbe
mov
jns
dec
pushf
scas
sbbl
and
or
lods
jae
xorl
int
xchg
push
arpl
jmp
movsl
dec
jne
lock
fisubl
push
dec
jb
mov
jg
hlt
sbb
sbb
imul
add
sub
pop
jmp
jb
cmpsl
pop
stos
pop
int3
jle
loopne
inc
dec
out
ja
out
test
dec
fwait
pop
stos
in
cmp
ljmp
xor
mov
push
lahf
push
ss
lret
sbb
sub
inc
add
mov
fnstenv
mov
mov
loope
jb
andb
outsl
call
rcll
cwtl
shll
imul
mov
in
fiadds
in
rcrl
nop
mov
inc
out
out
and
xchg
out
in
aam
fnstsw
cwtl
or
or
notb
adc
fs
mov
xchg
pop
push
push
test
xchg
imul
leave
jmp
js
push
push
add
xchg
xor
push
mov
fwait
push
stos
notl
pop
push
stos
mov
dec
sbb
and
sub
addl
fistps
mov
push
add
fnstcw
outsb
ss
aam
mov
add
popa
adc
test
gs
enter
fimull
hlt
lock
mov
lods
sub
push
fsubr
xor
xlat
fs
push
fnstsw
sub
jle
fwait
sti
add
das
cmp
jg
das
mov
cmp
cli
jns
mov
xor
lcall
stos
sahf
int3
push
sbb
clc
lret
pop
jb
repz
scas
idivb
cmp
les
sbb
push
jae
push
fstpt
cmpsl
mov
jecxz
adc
mov
pusha
cmp
jle
negb
loopne
jg
push
int3
pop
pop
pop
lods
dec
push
jae
xor
cmp
mov
sbb
and
test
stos
popa
inc
hlt
bound
hlt
sub
push
fldl
and
sub
js
add
lods
or
aam
mov
cmp
cld
pop
pushf
and
ljmp
idiv
dec
cld
scas
sub
rclb
mov
stos
icebp
daa
addr16
sub
loope
cmp
mov
sbb
mov
scas
les
adc
sbb
xorb
clc
lods
lods
xchg
sbb
sbb
push
jmp
mov
es
push
xor
pop
mov
jbe
adc
jg
jb
mov
popa
add
mov
mov
outsb
lds
xor
push
and
push
adcb
xchg
repz
shrl
insl
add
xchg
sbb
lods
insb
mov
cmc
xorb
int
pop
mov
loop
fsubrs
xchg
sbb
dec
fsubl
call
or
mov
sub
or
hlt
xor
jle
sti
pop
nop
aas
nop
pushf
fisubs
aaa
cmp
add
in
pop
pop
mov
adc
out
out
xchg
xchg
jo
les
lret
fdiv
or
push
cmp
mov
sti
cmp
xchg
out
rclb
xor
pop
cmp
inc
cmovs
outsl
ret
shr
aaa
mov
sub
jl
fildll
lods
sub
push
cld
sub
jle
iret
mov
aas
into
sbb
lret
push
inc
pushl
push
dec
push
fnsave
dec
pop
arpl
clc
mov
xchg
nop
cld
lahf
jne
in
out
mov
dec
ss
jle
jecxz
mov
add
enter
daa
test
mov
js
jecxz
out
and
es
or
sti
leave
xor
lods
pop
and
xor
das
push
xor
jo
mov
mov
jb
je
jnp
sub
inc
nop
xor
js
or
xor
xor
dec
dec
mov
cmp
inc
iret
int3
adc
nop
sbb
push
rcrb
sbb
fsts
sbb
and
adc
js
mov
push
dec
inc
mov
out
es
or
iret
xor
fimuls
dec
daa
mov
mov
loopne
push
add
mov
addr16
dec
out
pop
mov
mov
repz
inc
cmp
scas
nop
dec
lret
sbb
repnz
pop
fldl
mov
inc
cwtl
push
or
bsr
jno
fs
outsl
cmp
sbb
xor
arpl
jle
push
adc
sti
xorl
inc
icebp
sbb
sbb
or
push
ret
adc
inc
or
push
push
js
xchg
xor
xchg
out
jl
fiadds
sbbb
inc
outsb
mov
lret
repz
out
push
inc
mov
pop
iret
pop
xchg
shll
fs
jp
sub
int3
jb
mov
mov
stos
sub
and
adc
cld
ja
popf
lahf
ljmp
mov
in
inc
jne
stc
in
leave
mov
mov
repz
clc
sbbb
jb
test
cmp
and
imul
push
sbb
movsl
pusha
test
jnp
pop
mov
sub
push
adc
test
mull
mov
sbb
in
push
sbbb
push
mov
in
xchg
dec
sbb
stos
lods
or
inc
mov
mov
pusha
jge
adcl
scas
daa
loope
lock
and
cmpl
orl
xor
jmp
dec
es
or
cmc
pop
shll
div
pop
ja
xchg
stos
pop
pop
push
cmp
in
add
lods
fdivrs
or
jp
scas
data16
jmp
aam
push
in
lcall
jbe
arpl
pusha
mov
sbb
sbb
mov
enter
sarl
scas
scas
pop
and
pop
mov
inc
clc
addr16
shl
loopne
rolb
push
lcall
inc
pop
js
mov
out
push
mov
adc
push
xor
inc
pop
dec
aam
outsl
or
dec
cmp
mov
sbb
icebp
ljmp
pushl
cmpsl
and
cmovns
scas
pusha
sti
into
fdivl
xlat
push
shll
cmp
ror
mov
add
cmp
jno
pop
jge
sub
mov
cmpsb
cs
push
adc
push
inc
and
lret
mov
pushf
push
into
mov
imul
mov
loope
popf
jne
std
cmpl
mov
pop
shl
mov
dec
test
push
cmp
shrl
jae
insl
dec
shlb
call
xor
or
lock
sub
xchg
in
imul
sbb
in
fucomi
xchg
push
mov
mov
orb
xchg
outsb
dec
roll
fucom
fwait
pop
add
cli
mov
sub
mov
jl,pn
dec
inc
rcrb
idivl
pop
iret
push
pop
pop
jns
stc
inc
sbb
push
fwait
divl
mov
movsl
lods
imul
scas
stos
in
inc
xchg
lcall
lcall
pop
pop
cmp
pop
sti
iret
jnp
out
fdivrp
dec
mov
jnp
cmpsb
mov
sahf
push
data16
xchg
hlt
mov
cwtl
xchg
push
sbb
hlt
ret
jb
insb
cmpb
cli
lahf
xor
outsb
cli
testb
jns
xchg
xchg
in
popf
jns
cwtl
push
mov
ja
xchg
xor
rcrb
movsl
test
jo
std
push
cmp
add
sub
xchg
jecxz
int
cmp
add
call
dec
or
jmp
stos
pop
push
cmp
mov
pop
sub
dec
fisubl
pop
movsl
int3
pop
pop
jecxz
push
mov
push
sub
sbb
cltd
adc
add
and
fiaddl
cmc
push
push
jae
and
sbb
pop
inc
adc
pop
mov
or
and
daa
shl
faddl
add
cmp
fsubl
leave
mov
cmpsl
sbb
popf
jno
pop
jno
jo
das
inc
dec
cmp
mov
adc
add
xchg
cwtl
and
adc
fwait
inc
adc
adc
pop
cmp
arpl
les
cmp
pushf
jg
mov
fstpl
cltd
fldl
jnp,pt
fisubrs
les
and
pop
jg
sbb
pushf
adc
sub
or
mov
ss
addr16
pop
cmp
clc
sbb
test
je
pop
sarb
aad
das
int3
int
xor
out
cmpsl
lcall
icebp
or
shrl
fimuls
dec
xor
test
dec
cmp
mov
fwait
stos
xchg
out
ficoml
ficoml
repz
dec
mov
ficoml
inc
shlb
decl
rcll
stos
mov
in
pop
notb
popa
jge
pop
mov
adc
fisttps
stos
fnstcw
mov
mov
lret
pop
ja
jae
sbb
in
lcall
movb
dec
inc
ret
sbb
lret
mov
xor
jmp
or
pop
fsubr
es
lahf
xor
adc
outsl
and
jecxz
fisttps
in
icebp
xor
nop
push
cld
loopne
lods
stos
xor
push
xchg
test
loopne
xchg
xor
fs
fsubp
incl
std
mov
xchg
inc
xor
mov
jg
xchg
and
dec
sahf
pop
jne
rorb
push
dec
lods
push
jb
sbb
pop
and
mov
add
dec
out
xchg
hlt
dec
gs
popa
jp
mov
out
mov
dec
mov
xchg
and
insb
ljmp
js
xchg
loope
orb
mov
jno
cmp
rorb
xchg
mov
and
sub
and
stc
sahf
jl,pt
sbb
imul
test
or
int3
inc
ret
nop
cmp
sbb
jo
mov
dec
push
aas
push
push
clc
jle
sbb
dec
pop
ss
and
xor
jmp
and
push
outsb
xor
mov
xchg
outsb
lcall
mov
loop
roll
std
adc
inc
fs
ljmp
mov
adc
xchg
adc
and
pop
nop
sub
dec
add
outsb
leave
sar
gs
push
xchg
pop
mov
xchg
sbb
pop
sarl
clc
dec
sbb
movsl
mov
mov
dec
insl
pop
cld
jecxz
cmpsb
mov
repnz
roll
movsb
pop
lcall
testl
into
mov
in
outsb
cs
icebp
xchg
data16
and
or
in
add
test
xchg
loope
inc
cmp
xchg
xor
and
test
dec
jge
add
outsb
fbld
icebp
jno
add
shlb
les
inc
sti
aas
push
and
fnstsw
shr
adc
inc
fbld
lods
cmpsl
push
sub
or
aam
clc
jle
pop
mov
js
das
loopne
xchg
ss
adc
xchg
jbe
inc
pop
sahf
sbb
test
outsb
mov
adc
dec
pop
adc
cmp
sub
test
adc
sarl
sbb
mov
mov
mov
xchg
mov
out
xlat
pop
inc
int3
pushf
adc
hlt
xchg
cmc
lods
xor
jo
in
mov
decb
pop
sub
insl
in
xchg
and
out
popf
lea
ficoms
xchg
inc
adc
lcall
push
push
xor
or
ja
xor
or
mov
push
cltd
mov
aaa
dec
loope
outsl
and
cmp
inc
sbb
lock
jl
cmp
xor
je
xchg
fisttpl
push
adc
js
cltd
cltd
je
js
enter
ret
add
std
jp
pusha
notl
mov
rclb
bound
addr16
sub
push
and
dec
cmp
mov
sti
loop
push
dec
lahf
fistpll
rcrb
xchg
cmp
push
test
iret
mov
outsb
fstpt
pop
jmp
mov
adc
clc
dec
insl
ret
in
les
jmp
sub
in
sarl
and
std
ja
ja
or
out
ret
cwtl
ljmp
xor
dec
and
adc
leave
sub
xchg
repnz
mov
add
dec
mov
imul
cmp
ljmp
jns
cltd
sub
push
das
cmp
lock
bound
fwait
xchg
dec
mov
orb
sbb
setb
cwtl
repz
repnz
rorl
sub
out
in
icebp
jle
mov
add
fwait
loope
or
ja
xor
sbb
dec
pop
cwtl
xchg
dec
jl
push
mov
je
imul
mov
bound
or
mov
clc
loopne
lret
repz
pop
mov
xor
iret
inc
movsl
shl
repnz
xlat
pushf
into
addr16
mov
mov
pop
pushf
cmp
sahf
push
ret
jb
insl
int3
out
pop
or
aad
sub
jno
lret
push
inc
lods
or
jb
mov
sbb
mov
mov
imul
scas
mov
arpl
and
jnp
inc
repnz
mov
push
pop
test
jge
leave
out
sub
sub
cmpsb
outsb
xor
lds
in
test
sbb
int
inc
pop
jo
popa
cs
lret
pop
shll
loope
mov
scas
sbb
dec
add
cli
int
jne
xor
rorl
xor
inc
or
aam
xchg
xor
adc
insb
push
push
imul
push
pop
jns
xlat
lods
out
jg
mov
fcmovu
add
inc
pop
aas
xchg
add
push
out
adc
add
mov
sub
test
sub
test
rcr
adc
or
jp
ja
cltd
loope
je
pop
sbb
shl
fwait
ds
or
cmp
sbb
xor
and
aad
xor
dec
xchg
lahf
js
out
sahf
pop
pop
jl
push
mov
sub
pop
xchg
rcr
test
ret
fwait
dec
loopne
push
push
int3
cmc
or
ds
insl
mov
pushf
xor
mov
inc
nop
addr16
pop
enter
out
int
xchg
mov
mov
test
xor
mov
xlat
loope
mov
inc
pop
test
rolb
popa
fisttps
das
jmp
test
mov
shlb
shlb
push
xlat
flds
mov
pmullw
insb
push
cli
shr
rol
add
xor
daa
stc
dec
sub
in
mov
lea
sbb
sub
push
cmp
pop
mov
pop
sub
dec
jge
adc
xor
sbb
stos
dec
and
push
test
pop
xchg
cs
test
push
mov
es
pop
and
dec
sbbb
mov
adc
pop
dec
jp
idivl
inc
add
pop
adc
jae
dec
loope
push
sbb
sti
lret
outsl
xor
cmp
pop
mov
aam
cmp
lds
or
jne,pn
xor
jo
mov
lods
aad
outsb
bnd
push
frndint
cmpsb
or
sbb
add
mov
enter
scas
push
xchg
movl
add
cmp
std
mov
in
or
inc
adc
sub
push
faddl
int
and
dec
jl,pn
lret
int
mov
mov
bnd
jge
adc
sub
sahf
push
or
into
or
das
xchg
fsts
repnz
ret
push
in
cmpsb
pop
fwait
pop
leave
xor
loop
daa
out
repz
lods
and
inc
push
mov
les
and
cmp
je
push
pop
cwtl
adc
and
insl
mov
jbe
bound
mov
cs
out
push
fldenv
inc
inc
les
sub
adc
stos
pop
orl
jecxz
inc
mov
pushf
fwait
push
dec
pop
fmuls
ss
lret
sbb
aad
aas
mov
cli
clc
or
insb
xor
sub
dec
fisubs
mov
test
fdivrl
movsb
pop
xor
jno
pop
fwait
jg
inc
or
sti
icebp
cmp
rol
mov
movsl
lahf
adc
xor
lahf
push
jg
and
add
adc
xchg
inc
pop
aad
lods
ja
insb
ds
gs
cltd
jb
mov
mov
lea
jne
bound
sahf
ja
pop
stos
mov
lods
ss
sti
sbb
add
cmp
fimull
sub
loop
mov
xorb
out
repnz
pop
pop
pop
rorb
pop
scas
pop
es
push
inc
jmp
out
nop
mov
cmp
and
sbb
pop
or
cmp
cmpsl
test
ret
jae
popa
pminsw
adc
mov
cmp
pop
sub
call
imul
xchg
insl
xor
or
insb
enter
jns
inc
pop
mov
cs
lcall
hlt
jle
cs
pop
xlat
in
cmpsb
call
sbb
sti
in
mov
push
lock
test
sub
js
fisubs
into
jge
rclb
imul
pop
xor
mul
or
add
in
idivb
cltd
sbb
pop
and
push
dec
or
ret
arpl
push
push
inc
xchg
xchg
popa
mov
or
sub
push
mov
outsb
xor
rcll
and
jecxz
adc
adc
shll
or
and
arpl
jecxz
xor
jp
mov
mov
and
adc
or
hlt
push
stos
dec
or
xchg
sbb
pop
mov
inc
jl
inc
push
cmpsb
loop
mov
cld
push
sub
jl
loopne
or
cmpsb
push
movsl
imulb
mov
mov
mov
scas
clc
into
mov
mov
arpl
pop
pop
loopne
mov
jne
dec
hlt
loope
cwtl
inc
xchg
fxch
rclb
jb
cmp
push
pop
dec
push
xor
dec
mov
lock
sbb
lcall
sbb
movsl
aaa
mov
jle
loope
in
rcrb
xchg
push
adc
mov
in
repnz
dec
mov
xor
cltd
out
cltd
ljmp
jae
cltd
sub
adc
mov
mov
aaa
ja
jb
into
jl,pn
in
ja
jno
fs
mov
lret
enter
in
insb
push
mov
adc
iret
pop
ds
add
repnz
mov
cli
mov
mull
movsl
in
icebp
push
adc
xchg
cmp
mov
faddl
xchg
int3
hlt
or
cltd
xchg
dec
jns
add
cwtl
dec
mov
and
mov
jae
hlt
fsubs
pop
jne
jmp
test
inc
push
mov
lock
pop
mov
jo
jmp
xchg
or
push
stos
fstpl
mov
jl
dec
xchg
rolb
lods
bound
or
sub
movsl
fldcw
or
add
addr16
push
mov
inc
and
sub
out
inc
inc
push
sarb
idivb
enter
loop
filds
test
cmc
push
add
sbb
mov
popf
mov
push
mov
sub
aam
gs
xchg
mov
mov
sbb
mov
xor
sub
movsl
shrl
jb
mov
aas
pop
pop
jle
mov
jae
mov
aam
mov
pop
mov
popf
rcr
cmp
push
dec
jle
ret
call
pop
adc
ds
roll
mov
mov
lcall
bnd
arpl
xor
and
dec
out
or
lcall
out
and
push
inc
test
adc
mov
loop
adc
imulb
enter
call
cli
and
ficomps
out
test
mov
popf
xchg
pop
fdivs
sbb
scas
stos
dec
pushf
add
mov
scas
xchg
in
insl
jle
popl
jle
insb
xor
fidivs
fnstcw
xor
cli
or
sbb
jne
ss
test
out
mov
movb
mov
jecxz
bound
test
jg
lock
dec
movsl
adc
mov
loop
push
lcall
repz
and
and
cltd
inc
mov
arpl
sub
in
xor
inc
gs
jmp
aas
pop
stc
outsl
in
sbb
aad
add
xor
cwtl
out
outsb
scas
std
cmc
push
int3
xchg
scas
loope
mov
sbb
push
or
aas
cs
imul
sbb
sar
dec
push
bnd
faddp
fcom
mov
js
cltd
pop
push
or
xor
push
fwait
out
fadd
inc
out
scas
xor
add
sbbl
add
mov
roll
xor
push
dec
xchg
and
dec
lds
mov
inc
push
fiadds
sti
xchg
mov
movsl
fninit
push
or
xchg
and
iret
and
jns
and
aas
sub
or
andb
dec
cli
je
adc
jecxz
jne
push
push
cmpsb
nop
cli
xchg
xchg
fmull
fisubrl
mov
jl
and
jbe
inc
stc
call
push
or
pushf
mov
aaa
or
aaa
loopne
das
jg
cwtl
or
inc
out
jle
add
dec
lods
sub
jae
dec
xchg
icebp
rolb
std
inc
pop
lret
loopne
aam
cwtl
dec
aad
inc
sub
pop
mov
cltd
ds
in
cmp
cmpb
xchg
inc
lcall
sbbl
movd
cmpsb
sbb
or
cmpsb
fsubs
movsl
sbb
adc
jo
xor
loopne
xorb
lds
stc
adc
in
xor
shlb
adc
mov
cmp
xchg
add
fdivl
pop
mov
xchg
rcrb
popf
test
inc
xchg
mov
add
or
mov
xor
push
out
jp
sbb
cmpb
or
mov
or
pop
lcall
bound
dec
loop
xor
or
jnp
xchg
out
and
add
addr16
das
popa
pop
mov
js
ret
fldt
pop
and
iret
mov
in
cmp
jns
out
jb
or
push
lret
mov
outsl
insl
xchg
inc
add
sar
outsl
test
pop
push
fidivrs
aam
or
ljmp
sti
jne
ja
sub
imul
fwait
and
mov
add
mov
imull
bound
dec
jle
add
and
test
pop
jne
inc
jnp
sbb
nop
gs
loopne
push
in
jns
ss
sbb
or
test
xchg
mov
stc
filds
mov
pop
dec
push
out
or
xchg
xor
mov
pop
dec
movsl
mov
pop
iret
int
out
lret
pop
fwait
pop
push
mov
pop
adc
xchg
movsl
loope
jecxz
loopne
push
jp
jne
int
aad
pop
dec
insl
loop
addr16
sahf
jp
js
ret
mov
and
lea
push
out
adc
fwait
test
inc
pop
mov
sub
test
dec
out
es
movsb
inc
ret
lods
mov
adc
in
or
jmp
int
mov
cld
cmpsl
sarb
ja
dec
mov
xor
insb
cmpb
xchg
enter
xchg
aaa
xchg
sbb
mov
andb
sti
in
push
jg
mov
into
mov
mov
add
shl
sti
pop
or
mov
jle
ljmp
rorl
mov
mov
fs
pop
les
sub
cs
or
jb
adc
sub
pop
aam
ret
das
mov
xchg
mov
lds
aas
outsb
xorb
pop
popf
mov
lods
or
push
jae
das
ds
push
or
mov
sbb
fsts
cli
dec
mov
or
cld
xor
dec
hlt
mov
in
mov
addr16
cs
loop
inc
lods
adc
idiv
in
sti
cld
repz
mov
inc
mov
mov
add
jno
mov
inc
add
and
arpl
sub
shlb
adc
mov
dec
iret
pop
clc
sti
cmpsl
gs
into
in
jp
iret
lea
adcl
inc
mov
lret
filds
roll
or
lds
dec
dec
das
jmp
push
into
mov
push
imull
idiv
push
xor
imul
fstpt
add
xchg
xor
scas
jb
xor
out
jl
mov
inc
nop
insb
inc
mov
inc
xchg
cli
fstp
jecxz
movsb
jge
adc
pop
cmp
xlat
add
int3
outsb
popf
imul
fwait
cltd
dec
or
je
mov
addr16
push
and
cmp
or
lods
dec
jge
cmp
jmp
andb
jb
iret
sbb
jle
dec
push
and
stos
adc
push
loop
out
mov
icebp
out
jnp
xor
test
dec
in
icebp
incl
mov
aaa
and
pop
adc
outsb
daa
dec
mov
pop
out
fstl
pusha
xchg
adc
dec
out
or
lock
jmp
push
push
enter
nop
fadds
mov
scas
mov
lods
jge
push
movsb
clc
call
movsl
imul
je
int3
or
test
sbb
test
ja
add
les
and
nop
jecxz
je
sbb
push
sub
aaa
cmpsb
fcmovnbe
mov
repz
or
in
lea
decl
xor
mov
inc
mov
adc
sub
notl
dec
adc
lea
xlat
andl
mov
cmpsl
sahf
pop
cpuid
imul
int3
cmpsb
inc
imul
clc
pop
add
jg
dec
mov
in
add
adc
cmpsl
mov
fsubl
push
or
pop
xor
fwait
scas
sbb
add
push
daa
adc
in
cmp
sbb
and
int
je
add
mov
dec
fistl
fwait
xor
mov
add
mov
in
test
cmp
cmpsb
inc
cltd
mov
pop
fxch
cli
cmp
scas
shrb
sbb
out
inc
enter
and
ficoml
mov
test
cmp
test
fnsave
aas
add
add
aas
jge
inc
fs
pop
inc
pop
lret
clc
out
pushf
mov
jb
hlt
outsl
shrl
loopne
push
jge
jecxz
and
gs
pusha
lods
mov
adc
popa
pusha
sarl
fdivrl
packssdw
cld
aam
fs
mov
loope
xchg
mov
mov
adc
push
jge
and
push
fnsave
addr16
andb
cwtl
cmp
pop
dec
mov
mov
cmpsb
xor
test
lret
inc
ret
rcrl
stos
cmp
movsb
add
adc
rorb
jecxz
out
cmpsb
pop
mov
insb
stc
out
repz
xor
push
sbb
inc
jmp
or
in
inc
insl
repz
fnstenv
push
insb
xchg
dec
stc
cwtl
xor
and
cld
add
aad
daa
xor
cmp
and
lcall
iret
jo
rcrl
repnz
push
inc
adc
mov
gs
or
imul
andb
inc
add
mov
mov
fmull
cmp
adc
mov
adc
fs
hlt
mov
stc
fcmovu
xchg
in
jecxz
or
mov
lcall
popf
pop
arpl
xor
orb
jo
dec
in
fnstcw
mov
lcall
iret
leave
movb
fs
fs
adc
jae
je
in
test
push
out
iret
lds
call
sbb
xchg
jno
jb
and
test
jge
cmpsb
xor
repz
sahf
stos
mov
pop
adc
sti
jno
loope
sbb
inc
xor
lods
dec
aad
fbstp
inc
or
pop
xchg
xchg
call
ret
std
mov
movsl
and
es
int3
push
mov
inc
movsl
push
aad
jno
js
outsb
jbe
ficomps
es
mov
shr
js
repz
mov
ljmp
sub
popa
push
repnz
lea
ds
mov
ret
test
dec
sub
mov
pop
int3
adc
popf
mov
jge
in
fldln2
adc
xchg
or
dec
push
pushf
or
pop
mov
inc
jb
rorb
imul
or
pop
push
cmp
repz
sub
cmp
inc
and
adc
shl
es
cmp
adc
push
dec
cwtl
and
jg
bound
sub
sub
lea
jle
and
sbb
push
popf
mov
cmp
fcomip
mov
or
dec
jnp
les
fmull
out
jmp
push
push
inc
scas
negb
movsl
ret
jge
icebp
outsb
dec
mov
cli
ss
andb
mov
sub
jo
sub
ret
ljmp
adc
pushf
add
std
cs
cmc
fstl
fs
pop
xchg
dec
mov
mov
push
cwtl
cli
popl
mov
leave
hlt
push
ja
mov
cltd
test
daa
cmp
ret
mov
push
jge
lahf
xchg
in
xor
inc
cli
jae
je
daa
dec
mov
pop
push
int
roll
xchg
lods
addr16
loopne
scas
sbb
cmp
movsl
or
mov
jno
loopne
in
or
or
or
add
jne
and
insl
sub
enter
into
mov
rcrl
mov
es
imul
mov
pop
sbb
push
or
inc
xchg
adc
jg
fisttpll
dec
lea
outsb
dec
sbb
lahf
shlb
lret
and
mov
mov
sbb
inc
push
fcomps
inc
mov
int3
mov
inc
ss
negl
xchg
lods
pop
inc
or
adc
and
push
mov
xchg
xchg
and
test
sbb
inc
add
mov
mov
xchg
ret
outsb
xor
fists
nop
mov
scas
cmp
stos
push
dec
pop
pop
mov
addr16
inc
pop
call
adc
aas
rclb
and
fimull
add
into
jl
mov
xchg
arpl
mov
test
call
ret
inc
sub
pop
aas
jbe
loop
adc
fs
jae
aaa
mov
insb
lea
roll
test
pop
jae
mov
add
rcrl
lods
std
fstl
inc
and
mov
lds
subb
outsb
lret
pop
xchg
push
mov
out
imul
sbb
jno
or
mov
adc
inc
inc
jb
idiv
or
push
xor
inc
insl
adc
sub
cmp
enter
sar
xchg
scas
dec
jnp
xchg
imul
push
adc
xchg
xor
mov
sahf
pop
adc
sti
int
adc
mov
in
out
push
mov
sbb
outsl
in
lret
or
cmp
std
cs
cli
jbe
scas
int
shl
iret
cmpsl
pop
cmpb
cmp
in
push
push
pop
sbb
sub
xchg
xor
scas
sub
dec
gs
movsb
adc
inc
shrl
mov
and
mov
insb
mov
jo
mov
aaa
push
pop
inc
adc
dec
out
aad
xchg
xor
sbb
adc
sbb
jge
icebp
mov
sub
mov
fisttpll
sbb
addl
movsl
inc
sbb
rcr
gs
push
out
outsb
fdivl
popf
cmp
aas
or
inc
mov
cmc
xchg
jle
fldz
frstor
arpl
shll
add
mov
cmp
jns
mul
or
mov
hlt
ret
push
test
mov
pop
rorl
xchg
loopne
loope
push
cmp
loope
fnstcw
jne
mov
repz
xor
adc
xchg
shll
push
std
es
sbb
push
xor
inc
push
jg
pop
mov
and
cmp
and
mov
pushf
js
xchg
insl
adc
xchg
xor
lods
add
lock
mov
lahf
pop
imul
pop
popf
push
sbb
mov
fsubl
inc
xchg
add
mov
dec
insb
xchg
cmp
xchg
mov
out
push
out
cmovno
ret
push
xor
stos
es
xor
adc
cwtl
scas
mov
sub
shr
sub
gs
fmuls
xor
adc
dec
popf
rcll
jecxz
pop
mov
enter
stc
fcoms
add
fwait
inc
outsb
push
notl
mov
cli
mov
dec
sahf
jns
xor
jecxz
push
jecxz
lahf
arpl
jmp
pop
call
add
pop
div
push
les
pop
imul
scas
lahf
rorb
xchg
inc
movsb
aad
pop
or
add
push
imul
push
jecxz
ja
or
int3
cmc
inc
inc
cmpsl
scas
adc
in
xor
pop
lea
cmp
cmpb
jne
jno
xchg
daa
nop
sahf
sub
lret
mov
inc
int
data16
lret
push
movsl
pop
jo
out
sub
stos
or
mov
mov
out
jmp
aad
push
push
push
inc
fbstp
sbb
sbbl
cld
xlat
addr16
pushf
mov
es
in
in
push
inc
les
aad
lock
hlt
negb
addr16
jmp
cmp
shll
imul
ret
sub
push
aad
pop
cs
sub
call
inc
xor
arpl
lods
lret
into
inc
xchg
test
int
or
cs
xor
pop
loop
mov
sub
testb
mov
or
mov
adc
push
mov
sub
out
insl
push
adc
pop
loope
fldt
jno
inc
push
movsb
repz
icebp
out
pop
sub
push
cs
inc
sub
orl
mov
stc
xchg
mov
test
call
icebp
lret
lret
jns
xor
fwait
rcrb
insl
push
cmp
scas
jae
shrl
cmp
dec
int3
jl
mov
jmp
nop
sbb
push
dec
dec
addr16
out
loope
xor
or
popl
mov
jg
out
lods
jmp
repnz
cs
xor
lea
in
jae
aam
into
shrl
or
dec
jge
xchg
jmp
scas
js
adc
xor
mov
jb
pop
dec
pop
dec
mov
call
in
pop
pusha
xchg
stos
cmpsl
cmp
imul
dec
sbb
lret
testl
cmpsb
dec
mov
xor
xchg
pop
sbb
push
sub
stos
push
roll
clc
popl
mov
sub
jle
mov
aad
loope
and
mov
shr
push
js
or
pop
jnp
push
loop
scas
lds
sti
stos
jae
cld
pop
mov
loop
ljmp
aad
filds
sahf
push
cmpsb
lret
gs
scas
lods
mov
mov
push
cmp
fsubs
divb
enter
ljmp
mov
vmovddup
jnp
std
pop
xchg
adc
scas
mov
xchg
adc
mov
ret
jmp
addr16
imul
cld
insb
pop
ror
cwtl
push
xchg
sub
mov
pushf
mov
imul
push
pop
add
add
mov
in
nop
add
cli
into
and
cmpsb
out
cmp
aam
push
pusha
pop
lds
dec
xchg
outsb
add
arpl
lcall
and
je
adc
stc
into
call
lea
lret
mov
arpl
stc
cmc
pop
pop
cmp
lods
inc
mov
clc
sahf
ret
ror
loope
imul
rolb
pop
push
push
jno
outsb
mov
push
cs
cltd
add
pop
repz
pop
and
xchg
stos
lcall
jle
js
fstpl
inc
inc
jp
mov
rorb
mov
mov
fcompl
inc
rcll
inc
pop
jns
roll
jecxz
mov
xchg
sbb
out
adc
je
and
add
lahf
mov
mov
dec
add
addb
mov
dec
std
aam
aad
jecxz
fisubrs
mov
mov
add
push
push
xchg
rorl
jo
lret
sti
push
int3
daa
lods
xchg
jnp
dec
cltd
fwait
jbe
or
xchg
mov
sbb
mov
mov
mov
mov
adc
dec
add
jo
ret
popf
pop
scas
inc
jge,pn
stos
sub
sub
xchg
sar
mov
int3
in
xchg
bound
test
ficompl
push
jl
xor
dec
jle
lahf
insl
pop
sbb
add
rcrb
and
push
shll
sbb
out
fbstp
insb
in
out
mov
outsl
adc
sub
jecxz
pop
mov
mov
ds
or
fcmovu
daa
std
scas
insb
mov
mov
addl
sub
adc
push
pusha
xchg
pop
lret
inc
fldt
repz
mov
out
imul
jae
mull
popa
lahf
mov
mov
mov
vpaddsw
mov
imul
add
aas
in
icebp
pop
push
iret
cli
mov
inc
ja
jmp
test
pop
lahf
xchg
out
adc
mov
std
andb
inc
sub
dec
repz
sahf
sahf
pop
xor
dec
xchg
mov
xchg
jns
add
std
mov
mov
jmp
sub
test
pop
divb
es
inc
inc
push
adc
dec
into
cmp
pop
shlb
aaa
cmpsb
iret
jb
insl
fldcw
mov
jbe
xlat
inc
mov
sbb
pop
aas
dec
imul
mov
out
daa
inc
rorl
dec
pop
adc
inc
cmp
mov
pushf
filds
loop
sub
push
xchg
pop
push
sbb
push
clc
gs
jmp
push
insb
inc
push
addr16
cld
jns
lret
add
cltd
cmp
or
fiadds
adc
out
aam
inc
inc
sahf
out
inc
sbb
daa
mov
sub
leave
jg
mov
mov
clc
out
rcll
sbb
pop
cmpsl
ret
adc
dec
ret
in
xlat
dec
es
jge
push
add
lods
fwait
enter
pop
pop
test
xchg
mov
jne
add
mov
in
xlat
andl
xchg
jecxz
in
or
test
dec
pop
out
ja
dec
loopne
jge
push
in
mov
sub
pop
mov
gs
mov
sub
adc
clc
push
int
clc
out
insb
jb
stos
or
add
gs
movsb
in
inc
pop
test
inc
shl
test
push
push
data16
mov
in
xchg
or
sahf
ficompl
mov
inc
je
roll
in
out
xchg
pop
mov
inc
in
mov
cmp
in
sbbl
push
xchg
insb
mov
iret
pop
pop
fnstenv
jb
aaa
loop
into
gs
jne
sub
xchg
pushf
ds
jbe
shl
icebp
fstl
jl
mov
pusha
fmuls
sub
dec
xchg
testb
xor
inc
icebp
jbe
push
dec
mov
scas
sarb
sub
fwait
ja
jg
adc
icebp
pop
lea
repz
sbb
pop
hlt
push
rolb
ja
push
repz
xor
lds
sub
cmpsl
js
arpl
xchg
shlb
xchg
in
cmp
cwtl
and
sarl
test
mov
lock
cmp
mov
fwait
add
sbb
nop
push
lret
xchg
in
adc
xor
sar
sub
ficomps
xchg
push
ds
mov
dec
movb
pushf
sbb
test
pop
call
sbb
mov
dec
sbb
pop
je
outsl
and
hlt
or
mov
jmp
and
add
enter
and
mulb
in
imul
lea
arpl
int
jecxz
test
push
xchg
jg
mov
xor
pop
cmp
adc
cmc
add
pop
leave
mov
repz
roll
test
pop
js
xchg
sbb
pop
mov
push
orb
negb
sub
lcall
imul
xchg
fstl
sti
sub
int
das
testb
lcall
jne
pop
mov
sbb
outsb
arpl
stos
stos
xchg
jle
sbb
lahf
inc
and
stos
push
clc
or
inc
lret
std
xlat
add
push
in
cmp
cmpsl
dec
testl
sahf
add
and
pop
aaa
movsb
outsl
or
xchg
cmc
inc
fucomip
jecxz
and
jne
dec
pusha
mov
adc
loope
xor
in
mov
insb
insb
or
mov
scas
pop
mov
aad
and
iret
pop
jnp
mov
sbb
test
mov
sar
mov
inc
shl
mov
pop
ds
out
cmpsl
in
scas
ficoms
loop
mov
mov
jle
lahf
insb
sbb
mov
fcmovb
imul
xchg
pop
fiaddl
shll
cwtl
mov
mov
mov
jp
cmpsl
xor
das
sbb
cmp
or
or
addb
xor
repz
pop
notb
jo
and
loope
dec
test
repnz
shrb
jno
push
xlat
sbb
add
cmp
fldcw
and
push
xor
lods
rolb
jg
fucomi
inc
mov
inc
ljmp
loopne
pop
in
lea
fdivrp
inc
dec
lock
test
das
sub
data16
pop
lds
repnz
and
dec
out
sbb
scas
aad
mov
jg
dec
or
outsl
sbb
cmpsl
or
xlat
mov
xor
imul
sbb
nop
fnstcw
push
clc
dec
inc
stos
push
cmp
rol
and
scas
sub
int3
out
inc
pop
movsl
aad
mov
fistl
sbb
setbe
adc
mov
mov
loopne
les
jno
jbe
data16
out
and
xor
sti
xor
js
icebp
sub
mov
mov
int
popf
adc
and
inc
sbb
jno
xorl
pop
imul
lods
dec
fs
xchg
jae
popf
add
cmpsb
pop
outsb
lock
pop
roll
mov
mov
sbb
lret
scas
dec
and
fildl
xchg
test
loop
pop
leave
lds
es
push
hlt
xor
mov
pop
icebp
les
fisttpl
mov
xlat
ss
lcall
push
xchg
mov
jmp
fistpl
fisubl
pushf
lods
mov
out
mov
xchg
add
in
ss
iret
jp
mov
mov
ret
into
std
mov
sub
in
sbb
cmp
lock
mov
push
clc
xor
fcmovu
scas
mov
xor
adc
pop
inc
or
enter
repnz
ljmp
fbld
iret
sbb
mov
adc
xchg
das
xchg
jb
push
inc
sub
mov
push
and
mov
mov
jg
and
addr16
fsubrs
test
mull
je
xchg
mov
pop
push
outsb
iret
or
clc
xor
mov
mov
outsb
jnp
ret
push
mov
cli
test
jne
push
cmc
mov
jo
aas
pop
xchg
imull
insl
cmc
jb
pop
pop
xchg
fldcw
sub
repnz
mov
jns
mov
lock
mov
add
repnz
test
mov
adc
push
push
lock
xchg
dec
mov
mov
lock
add
ja
xor
dec
mov
outsl
cmp
mov
adc
mov
fdivrl
push
scas
or
inc
mov
jl
mov
xor
sti
lea
in
gs
paddd
pushw
pop
pop
scas
int
adc
sbb
push
jnp
into
stc
int3
fistps
in
mov
decl
imul
lret
xchg
ja
mov
orb
das
add
ja
adc
mov
outsb
in
pusha
rorb
mov
stos
pop
fwait
xor
bound
push
or
and
add
pop
leave
adc
push
int3
add
sahf
mov
cmp
mov
lcall
adc
xchg
out
cmp
cld
lahf
cltd
pusha
inc
stc
mov
scas
adc
test
mov
add
push
inc
adc
inc
xor
movsb
lods
jns
aaa
aaa
icebp
mov
adc
test
aad
pushf
in
aaa
aad
dec
push
jnp
das
jle
shll
mov
jns
cmc
pusha
imul
or
fidivrs
mov
sar
insl
mov
sti
inc
pop
stos
sbb
or
xor
mov
dec
add
sti
sub
lcall
adc
push
es
mov
dec
mov
push
xor
cmp
dec
xchg
and
add
movsb
xor
pop
sarb
or
andl
jmp
cmpsl
lar
and
mov
fucom
dec
push
dec
leave
sbb
fnstsw
inc
cwtl
add
pop
sarl
mov
mov
into
gs
jl
sub
mov
mulb
ljmp
stc
push
xchg
data16
sub
loope
addb
cmp
lcall
lea
jle
scas
stos
arpl
insl
sub
pop
in
ds
jno
aad
push
ja
xchg
push
fs
jg
pusha
adc
stos
ljmp
das
mov
cmpsb
ljmp
add
or
sbb
ja
mov
cmp
mov
push
xchg
imul
mov
cmpsb
movl
jmp
fnstcw
sub
and
and
push
outsb
add
pop
lods
insl
out
lret
aaa
enter
in
inc
in
xor
in
inc
mov
push
addr16
pop
inc
sub
jae
xor
mov
jb
inc
stc
mov
cld
jo
int
push
sub
cmc
ret
sbb
fnstcw
jo
imul
in
add
test
sub
addr16
add
fimull
xlat
sbb
popa
jbe
out
sbbb
inc
xchg
movsl
mov
jle
insl
push
fnstsw
and
mov
pop
sbb
sbb
mov
loope
sbb
lret
mov
adc
test
int
out
int3
cld
jg
imul
popf
or
cmpsl
sbb
sub
lret
movsl
xor
xchg
pop
les
adc
test
bound
fs
xchg
test
outsl
xchg
je
mov
jge
cmp
sub
rol
flds
in
mov
xor
mov
outsb
popf
adc
jns
push
jmp
imul
inc
neg
dec
pop
mov
mov
sbb
jle
outsl
into
sub
mov
call
repnz
mov
outsb
sbb
and
push
outsb
incb
add
scas
inc
data16
sub
cmp
dec
lods
cmp
sti
insl
mov
in
xchg
mov
jb
je
pop
add
mov
mov
orps
repnz
jmp
pop
adc
testl
xchg
inc
stc
jg
adc
push
inc
cld
cvtps2pd
jg
shrl
mov
fimuls
cwtl
imul
mov
aas
lock
arpl
dec
inc
dec
fucomi
in
inc
jg
push
xor
loop
push
aad
es
cmp
loope
cwtl
mov
sbb
add
pop
and
faddp
inc
bound
mov
mov
and
xchg
or
mov
dec
ljmp
pop
dec
cltd
aas
imul
in
mov
dec
mov
scas
add
push
stos
push
hlt
je
jg
adc
test
stc
add
jp
popf
sub
jbe
rcll
shrl
mov
sub
dec
nop
loopne
cs
pop
xor
inc
int3
aas
dec
pop
push
inc
jnp
sbb
jo
movsl
loope
int
notl
es
lods
addr16
in
sahf
in
mov
cld
push
mov
mov
dec
sti
xor
dec
sbbb
xchg
roll
pop
inc
in
fsubr
xchg
out
mov
xor
sub
in
mov
or
lds
fnstsw
sub
push
scas
test
loop
stos
mov
dec
sub
and
ja
stc
push
negl
mov
push
add
aas
jmp
cmpsb
mov
mov
pop
jecxz
xchg
pop
imul
jo
xchg
clc
filds
fadd
fadds
adc
mov
daa
mov
sbbb
xchg
sub
dec
mov
shl
or
orb
divb
cld
imul
mov
jno
je
pushf
mov
dec
mov
shrl
loopne
movl
push
adc
lea
xchg
mov
or
sahf
cmp
aas
movsl
inc
mov
aaa
scas
imul
mov
or
push
aaa
mov
cmp
inc
inc
sbb
arpl
or
lock
jbe
add
dec
and
pushf
pop
jae
inc
nop
in
imul
jnp
arpl
test
pop
imul
adc
sti
out
int3
xchg
push
push
in
adc
xchg
cmp
sbb
cmpsl
and
xor
sti
ja
into
stc
aam
mov
sub
xchg
xor
dec
mov
jecxz
or
mov
outsb
pop
adc
inc
and
jmp
roll
lret
add
sub
cmp
sbb
call
lret
dec
sbb
pop
and
sub
xchg
xor
cmp
in
xchg
ret
test
adc
les
into
cmp
cld
jmp
pop
inc
mov
icebp
ja
mov
out
das
dec
and
out
adc
lea
push
pusha
add
fildl
inc
jl
mov
push
and
cmp
cmc
pop
pop
and
clc
jno
dec
xchg
or
and
sti
bound
iret
sbb
lds
jb
in
test
or
or
mov
and
data16
das
xchg
mov
dec
movsl
push
bound
adc
xchg
aaa
jnp
fildll
mov
pop
sub
xchg
pop
mov
dec
repz
sub
inc
xor
sti
movsl
dec
xor
ja
and
in
mov
mov
pop
xor
jne
sub
imul
xor
inc
shll
jmp
pop
push
xchg
pop
aam
mov
mov
pushf
inc
xchg
inc
jecxz
jecxz
and
hlt
clc
sbb
dec
or
mov
ja
icebp
mov
mov
push
pop
popf
fisubrs
popa
fisttpll
adcb
fnstenv
jp,pn
mov
repz
aad
cli
imul
lea
adc
jns
cmpl
pop
pop
xlat
or
insl
dec
shll
xchg
jg
in
ss
daa
push
mov
xor
dec
call
or
lock
adc
pop
or
or
mov
add
scas
movsl
cmp
jbe
aaa
xor
int
ljmp
xchg
adc
in
cmc
ds
jnp
xorb
or
pop
lock
xor
adcl
mov
jp
ret
into
mov
xchg
sub
add
sub
sbb
ficoms
sub
lock
pop
sti
mov
decb
and
imul
mov
mov
mov
bound
int
adc
rolb
xor
call
sub
cwtl
xor
lret
fwait
push
push
inc
in
cmc
mov
jae
xchg
insl
and
scas
jnp
enter
js
icebp
pop
and
lods
mov
sub
jmp
subl
or
fs
pop
xor
push
mov
and
sbb
outsl
sbb
std
sub
movsl
loope
add
gs
dec
cli
sub
jmp
dec
out
shlb
sbb
or
pop
pop
mov
push
mov
sti
gs
in
sbb
mov
popa
inc
loopne
jle
xor
pop
imul
fucom
das
frstor
data16
mov
push
imul
add
mov
les
mov
lock
xchg
mov
fisttpll
lret
insl
ficoml
movsl
sti
mov
js
and
sub
aaa
xor
dec
and
out
stos
rcrb
lret
insl
cltd
add
or
mov
std
std
sub
daa
jle
mov
insl
jbe
xor
enter
jg
sub
enter
stos
outsw
testl
int3
test
pop
out
lea
sub
roll
fldenv
aaa
cmpsl
sub
popf
icebp
add
stc
jnp
dec
cmpsb
sbb
nop
pop
sub
inc
les
adc
push
pop
shll
arpl
dec
aaa
arpl
fisubl
sbb
aaa
bswap
les
nop
in
pop
adc
jp
test
insl
mov
xchg
mov
leave
test
push
mov
mov
shl
cmp
jno
cmp
jge
or
int
loope
mov
pusha
xor
adc
fsts
ljmp
frstor
lods
icebp
sbb
js
jmp
jg
bound
sub
push
fucomp
jnp
mov
or
inc
lahf
in
jbe
shr
xchg
shrl
add
or
loope
lods
inc
repnz
not
xor
xor
cs
sub
add
out
cmp
fs
jno
rcl
jecxz
xchg
shl
iret
adc
dec
dec
cwtl
arpl
dec
aam
jb
outsl
cmp
repz
xor
insl
cs
gs
add
rclb
movsb
or
mov
jge
dec
xchg
roll
ficoms
pop
adc
mov
dec
insl
pop
decl
push
rcll
cmp
xchg
bound
in
mov
mov
arpl
arpl
shlb
mov
iret
orl
lods
xchg
mov
xchg
idivl
mov
or
jle
in
rol
jecxz
lahf
sti
int3
jl
mov
and
scas
lahf
adc
push
aaa
aaa
std
int
fisubrs
xchg
mov
adc
inc
pop
xor
movsl
fbstp
cmp
das
into
cmp
or
mov
mov
xchg
push
dec
test
insb
cmp
into
mov
es
dec
mov
sbb
jmp
mov
aaa
sarl
mov
jnp
fistps
cmc
inc
xchg
and
sti
fwait
pop
mov
fldt
es
int
jnp
mov
ss
xchg
out
int
int
mov
and
hlt
cli
lret
enter
xchg
push
add
xlat
dec
insl
xchg
lret
stc
sahf
es
daa
enter
mov
inc
shll
clc
mov
push
push
adc
jns
cmp
lcall
fbld
jae
hlt
add
and
out
fs
or
gs
cmpsb
lea
ret
stos
sub
sbbb
push
add
insb
jg
sbb
push
shrl
inc
mov
stos
xchg
xchg
and
sbb
xchg
inc
ficomps
outsl
pop
sub
lock
jp
mov
sbb
and
push
push
js
and
mov
jne
int3
push
cs
lds
xchg
leave
mov
and
sahf
rolb
pop
pop
ds
add
adc
sub
sub
and
jno
rorl
dec
add
push
xchg
sub
into
das
insb
xchg
push
popa
jo
adc
mov
adc
pcmpgtw
inc
mov
sbb
mov
sub
push
fldcw
push
popa
out
outsl
cmp
or
pop
jne
mov
gs
fwait
int
push
jge
jl
cmp
sub
dec
mov
xchg
loope
in
leave
jl
xor
std
xorb
das
adc
out
arpl
add
or
leave
add
imul
insl
dec
in
xchg
psadbw
pop
cld
xchg
add
sbb
sbb
or
fcoml
jge
xchg
mov
xor
loop
lahf
outsl
addr16
and
push
xchg
popl
std
inc
sbb
cli
out
bound
xor
je
pop
aaa
xor
cli
sub
sbb
stos
outsl
sbb
jg
jns
fimull
push
push
cmpsb
sub
xchg
push
gs
push
imul
inc
inc
mov
mov
sahf
jp
sub
scas
ljmp
fstpt
in
cld
ds
ret
sub
mov
loop
xchg
faddl
dec
ficompl
loop
xchg
and
test
inc
dec
xlat
ret
int
cmp
in
adc
or
movsl
sub
push
in
cmp
movsl
inc
inc
addb
mov
icebp
aad
lea
gs
repnz
push
push
jecxz
or
sub
xchg
jmp
push
out
jecxz
add
jno
ret
mov
dec
ficoms
das
lods
fst
jg
arpl
push
adc
push
sbb
mov
adc
push
sub
in
fwait
mov
stos
pop
dec
out
lock
dec
shr
stos
faddl
mov
push
and
or
mov
jbe
mov
test
add
pop
dec
jmp
popa
scas
adc
dec
push
mov
fsubs
aam
mov
inc
mov
pop
cmp
sbb
test
in
outsl
cwtl
dec
enter
rclb
adc
dec
xor
dec
aam
xlat
xchg
icebp
dec
ss
mov
imul
dec
sbb
xchg
pop
aam
sub
lret
jne
mov
add
cmp
inc
sub
mov
xor
mov
leave
xchg
mulb
stos
mov
mov
insb
roll
out
ds
mov
lds
mov
cmp
xacquire
arpl
lret
add
loop
ret
lcall
cwtl
mov
or
adc
sbb
lea
sti
subb
cmp
mov
and
out
pop
mov
jge
push
add
xchg
or
lock
pusha
cmpsl
xor
subb
std
es
xchg
negb
lods
cld
mov
adc
lock
jmp
and
mov
cmp
ret
dec
mov
scas
ljmp
icebp
mov
sub
shlb
lods
test
pop
inc
jne
scas
pop
push
xchg
icebp
pop
in
mov
pop
jne
sbb
mov
rcr
mov
mov
sahf
test
dec
adc
mov
lea
dec
pop
mov
cmc
mov
push
sbb
lea
xor
xlat
pusha
cmp
outsl
movsl
sub
xor
or
cli
lcall
fwait
sub
xchg
psadbw
out
sahf
sarl
push
adc
shl
movsb
and
loopne
mov
cld
movsl
lret
push
pop
pop
mov
pop
addl
in
sar
xchg
shl
mov
popf
push
mov
inc
repz
mov
lods
into
mov
mov
jecxz
in
jns
push
xor
data16
push
mov
mov
sahf
sbb
xchg
mov
xchg
sbb
inc
sub
jb
inc
outsb
mov
lea
push
lahf
or
mul
sub
fidivrs
mov
xchg
repz
jp
push
mov
shrl
mov
out
jmp
mov
xlat
jbe
ret
xchg
sbb
adc
punpckhdq
push
and
fisttps
inc
mov
dec
cmp
lret
mov
and
mov
addl
xchg
sbb
xchg
jmp
scas
and
rcll
and
xchg
rclb
push
mov
popf
pop
jl
pop
in
sub
loope
in
jbe
cmc
inc
jae
jo
mov
movsb
fs
je
jp
or
jp
push
jecxz
icebp
pop
fisubrs
popf
cmp
sahf
xor
push
sbb
jae
add
shl
lds
ficomps
test
cmc
data16
pop
or
cmp
decl
pop
lods
dec
fs
or
or
notl
pop
push
lods
cld
mov
fidivs
loop
push
mov
push
add
das
jge
popf
mov
mov
mov
pop
cmp
or
pop
sub
mov
dec
mov
cli
sbb
cwtl
mov
push
cli
outsl
mov
and
dec
mov
int3
loope
into
mov
mov
mov
or
in
rclb
mov
cli
inc
sub
fisttpll
pop
test
aam
data16
dec
lds
pop
mov
lret
aas
xor
and
push
cmp
data16
and
xchg
jae
cwtl
pop
stos
dec
inc
mov
test
mov
add
rcl
cmc
or
sarb
adcl
mov
mov
outsl
bound
xchg
sub
adc
sbb
std
ljmp
test
idiv
das
je
push
xchg
jb
loope
add
test
test
call
sub
sub
into
into
fisubs
test
mov
dec
lret
shrb
mov
inc
js
in
int
mov
mov
jg
sbb
popl
lahf
adc
lock
cltd
xchg
fs
in
push
ds
repz
mov
dec
stos
sbb
jbe
sub
mov
mov
xor
cmc
leave
jo
daa
sahf
cmp
pusha
f2xm1
dec
push
je
xor
test
shrb
std
subl
and
mov
aas
mov
mov
pop
jmp
and
inc
mov
mov
jg
xchg
lea
fbstp
test
adc
sahf
inc
es
ret
out
mov
int
sahf
inc
pushl
add
movsb
or
sub
lock
mov
mov
insb
jl
inc
ret
sti
ljmp
mov
daa
shrb
push
xor
and
adcl
mov
push
cltd
sahf
add
dec
cmc
int3
das
scas
imul
int
xchg
movsl
mov
push
imul
lock
pop
mov
rcrl
dec
pop
dec
inc
mov
push
lods
test
jecxz
mov
lea
xlat
test
mov
lea
loopne
das
xor
xchg
outsl
adc
dec
xchg
mov
sahf
push
dec
dec
push
xor
in
jp
hlt
cmc
xor
outsl
stos
mov
pusha
gs
out
push
cmpsl
push
bound
xchg
mov
icebp
dec
mov
not
mov
daa
mov
dec
pushf
or
mov
cmp
mov
iret
lcall
add
inc
into
mov
xchg
and
push
jo
js
fwait
jnp
jne
push
mov
mov
cmp
and
push
sahf
pop
popa
leave
in
and
fdivr
push
fsubl
lret
pop
sahf
lods
mov
bndldx
cs
imul
sub
add
in
mov
push
pop
cmp
jnp
jle
dec
mov
lds
stos
pop
cmpsb
mov
sub
jbe
ds
dec
in
mov
daa
xchg
mov
pop
inc
push
lock
ret
mov
outsb
jp
test
push
sahf
mov
sub
rcr
out
cmp
sbb
push
out
inc
adc
mov
loopne
xchg
shlb
into
adcl
in
or
mov
jp
ret
mov
jmp
adc
fs
cmpsb
push
mov
mov
cmpsl
inc
cmpsb
cwtl
push
stos
inc
jecxz
jmp
jp
frndint
ret
lret
sti
dec
hlt
or
add
xchg
adc
jno
dec
sti
lret
sbb
fsts
popf
sub
popf
mov
inc
test
dec
adc
inc
in
loop
int
cld
pop
cltd
and
adc
mov
fists
push
jno
xchg
push
mov
jae
jo
add
jg
in
adc
in
xor
loope
in
xchg
jb
in
fwait
mov
in
ret
mov
xlat
daa
into
mov
inc
cmpsl
dec
mov
xchg
dec
nop
xorb
jo
or
je
push
leave
pushf
adc
ds
cs
mov
xchg
mov
jne
loop
int3
dec
fidivs
push
inc
lds
mov
xchg
js
mov
enter
arpl
lret
mov
pop
add
mov
jae
clc
ja
jbe
add
rcl
mov
push
dec
in
jg
adc
lcall
sbb
pop
mov
mov
test
out
mov
push
xor
cmpsl
pushfw
mov
sarb
inc
mov
xchg
adc
adc
movsl
push
cld
stc
je
cmc
pop
jl
push
mul
mov
xchg
aas
ss
xchg
lock
mov
aad
repz
push
jl
push
aas
test
fidivl
pop
fcmovu
xor
add
int
fsubr
add
fidivrs
ljmp
or
faddl
and
sbb
cltd
push
or
jb
mov
int
insb
into
cld
adc
jl
dec
lods
fbld
or
jmp
fs
push
jbe
outsl
lds
mov
insl
in
bound
dec
pop
inc
movsb
fidivrl
pushf
loop
inc
cs
pop
adc
push
pop
dec
dec
pop
or
add
cmc
clc
andl
movsl
js
fisttps
or
mov
adcb
aaa
scas
mov
push
add
sbb
in
ficompl
xor
loopne
shr
sbb
fimull
mov
pushf
sub
scas
or
andl
outsl
mov
inc
popa
hlt
mov
xchg
jp
int3
push
cmpb
nop
xchg
ds
inc
movsb
pop
dec
pop
repz
or
and
cmc
dec
outsl
inc
xorb
popa
rsqrtps
dec
xor
lods
cmpsl
sti
sbb
into
lock
lret
inc
mov
adc
jp
or
xor
mov
das
inc
ret
xor
sub
pop
dec
scas
test
pop
dec
clc
xchg
push
cmpsb
dec
xchg
push
into
cli
mov
inc
mov
add
pop
sti
xor
das
dec
rcrb
lods
xchg
xchg
dec
popa
sbb
adc
dec
stos
xor
add
cmp
sti
jmp
outsb
jnp
jle
cltd
out
leave
shlb
lock
sti
cmpsb
scas
cmp
cwtl
loopne
mov
sub
repnz
mov
push
cltd
cmpsb
lahf
scas
xchg
inc
cmp
insl
dec
or
jb
mov
stc
jl
aas
icebp
test
inc
dec
ret
push
mov
dec
lock
shrb
stos
in
adc
xchg
cmp
enter
mov
adc
fisubrs
les
push
out
ja
in
mov
jecxz
es
loopne
add
lret
pop
stc
stc
pop
aas
mov
fsubs
xchg
cmp
mov
lret
lods
lock
outsb
or
int
push
xor
test
cmpsb
jl
cld
sar
mov
insb
dec
push
stc
lods
lahf
daa
sbb
pop
cs
pop
stos
push
push
mov
push
mov
dec
inc
xchg
xchg
out
bound
cmpsl
dec
mov
shrb
lods
insl
jge
pop
jg
xchg
mov
and
xchg
cmp
rcr
loopne
dec
mov
inc
pop
or
rcl
cmp
sub
mov
ss
mov
lret
lcall
sub
add
mov
test
push
push
test
push
xchg
xchg
push
rclb
jmp
mov
cwtl
out
jne
jb
xor
aaa
or
inc
cli
xor
lcall
leave
popa
sbb
loopne
cltd
lods
repz
cli
test
das
push
pop
pop
xor
mov
pushf
xor
push
mov
pop
out
mov
and
or
push
lods
jp
xchg
and
rsqrtps
ret
fnstcw
cmp
shlw
cmp
dec
bound
int3
scas
add
xor
aam
lret
cmpsl
lahf
and
cmp
xor
cmp
iret
shlb
sub
lods
xor
inc
or
pop
data16
inc
xor
cmpsl
lret
xlat
sbb
sub
ja
pop
mov
xor
lcall
cmpsb
push
decl
pop
jae
leave
adc
inc
sbb
outsb
imul
cmp
popa
maskmovq
mull
popa
adc
int3
inc
mov
ljmp
loop
push
jle
in
shrb
or
jae
scas
imul
test
out
jmp
adc
pop
sbbb
in
mov
mov
ljmp
inc
or
enter
movsl
xchg
hlt
xorb
or
inc
repnz
pop
loope
push
icebp
das
cli
fwait
repnz
and
loopne
adc
jmp
xor
add
icebp
arpl
notb
or
dec
lds
scas
mov
nop
aad
mov
fldcw
sub
sbb
nop
mov
cmpsb
xchg
lret
push
test
mov
sbb
pop
cwtl
cmp
sbb
cmc
dec
or
cwtl
jae
or
mov
test
aam
xchg
cmc
mov
or
ss
adcb
pushf
sbb
fdivs
mov
jbe
sarb
scas
jns
push
lods
test
inc
jnp
mov
and
push
mov
mov
popf
imul
fimull
fstpt
stos
and
jbe
dec
out
lods
test
lods
pop
xchg
mov
ret
inc
syscall
test
cmp
addr16
lcall
jns
popa
cmp
idivl
lret
std
icebp
dec
adc
adc
mov
out
xchg
test
inc
dec
mov
fsubs
aaa
sbb
and
jmp
es
mov
scas
inc
and
mov
mov
jb
orb
sub
repnz
js
rorl
adc
mov
test
ds
xchg
xchg
pusha
pop
sti
pop
andl
and
inc
mov
dec
sbb
adc
mov
xlat
sti
pushf
pop
fisubl
sar
cmc
loop
xor
scas
cli
dec
std
roll
push
icebp
xchg
in
cmp
sub
lds
jno
and
adc
xchg
out
ret
mov
and
sub
jo
out
sub
scas
int3
mov
dec
push
pop
mov
repz
test
jno
stos
xchg
je
ja
mov
xchg
push
xor
sub
jmp
sarl
leave
xchg
ret
push
or
and
les
inc
ja
mov
sub
xchg
mov
or
xchg
stos
sub
xchg
pop
popa
sarb
sahf
scas
fbld
xor
or
hlt
cltd
add
dec
and
sub
xchg
dec
sbbb
mov
push
mov
and
mov
push
bound
lahf
lea
notb
fwait
mov
push
clc
iret
mov
inc
leave
sub
adc
push
call
dec
jmp
dec
pop
cmc
jg
jbe
aas
inc
cmp
test
stos
ljmp
insb
pop
mov
jno
data16
bnd
outsl
clc
mov
pop
sub
mov
xchg
pop
sbb
divl
cmpsb
pop
sbb
mov
clc
loop,pn
dec
call
xchg
jecxz
orl
loopne
andps
test
sub
addl
hlt
jecxz
out
or
add
pop
fistpll
or
ljmp
adc
movsl
js
mov
fistpll
and
pusha
pushf
iret
mov
rol
orl
and
fwait
pop
lahf
movsb
pop
jnp
aam
js
call
jecxz
popa
rcrl
adc
dec
loop
cmc
je
add
cltd
popf
add
jecxz
sub
add
ret
mov
jecxz
add
add
cmpsl
aad
push
aas
and
aad
arpl
xor
ret
jae
loop
sbb
les
pushf
push
out
movnti
mov
cmp
xchg
stc
lar
sbb
xchg
das
imul
cli
sbb
fldt
add
mov
cwtl
adc
nop
testl
mov
nop
or
jl
jns
mov
push
and
test
jmp
daa
rcrb
orb
mov
add
addr16
mov
push
sub
lahf
ljmp
in
imul
xchg
cmp
xor
rcll
aam
adc
ss
jno
icebp
sub
testb
icebp
aaa
mov
test
scas
adc
movsl
mov
ja
into
test
xchg
xchg
mov
push
jnp
adc
ds
or
sbb
sbb
xchg
add
xchg
or
fadds
icebp
fdivp
out
push
jns
sarb
sub
cmc
ljmp
sbb
and
rcrl
std
outsl
repnz
push
leave
xchg
mov
cmp
int
jne
rclb
mov
sbb
mov
inc
jmp
imul
adc
aas
mov
test
lcall
clc
cmp
adc
imul
test
and
adc
repz
mov
jg
mov
sbb
xchg
push
dec
cmpsb
repz
inc
aas
out
lods
xor
sahf
adc
shll
leave
repnz
ss
pop
scas
lret
cmovne
stc
clc
push
and
adc
cs
push
mov
sbb
push
aam
je
jle
aas
fcompl
push
imul
mov
rcr
dec
push
or
xchg
into
scas
call
shlb
subl
xchg
sbb
or
cmp
jno
cwtl
add
sub
aam
add
test
adc
add
xor
push
jb
jae
adc
jle
xchg
adc
nop
test
inc
adc
adc
mov
movsb
mov
cs
test
dec
lret
addr16
bound
mov
xor
jae
js
test
imul
arpl
fucomip
fimull
fists
add
sub
adc
jge
inc
stos
pushf
inc
push
push
or
in
sbb
mov
mov
loope
out
xorb
add
mov
hlt
pushf
fidivrl
mov
test
out
add
out
scas
or
subl
shll
fsubrl
push
aaa
stos
push
push
jns
into
pop
loop
xor
into
sub
shll
loop
stos
mov
jecxz
sub
pop
inc
xchg
aam
outsl
push
push
and
or
jae
pop
mov
mov
mov
inc
out
cmp
add
cmpsb
inc
cwtl
daa
xor
insl
lahf
adc
pop
scas
fwait
adc
fistpl
inc
inc
push
and
sbb
ja
pop
cmpsb
and
dec
loopne
jmp
outsl
ret
push
test
rcr
mov
mov
orl
sub
repz
xor
repz
push
in
out
fs
mov
jb
xor
sbb
loop
push
and
repz
leave
and
dec
nop
dec
sbb
or
in
ret
xor
movsb
inc
mov
push
jns
adc
iret
xchg
cmpsb
in
cmp
mov
arpl
gs
in
loop
fbstp
loop
js
aaa
jae
ds
cmp
iret
sbb
pop
mov
ficoms
pop
push
aas
shlb
icebp
mov
sbb
xchg
enter
push
and
push
and
push
push
pop
mov
out
jns
inc
mov
and
cwtl
ds
xor
push
jp
xor
dec
xor
inc
adc
lahf
mov
or
adc
pop
xor
mov
add
sbb
out
mov
sub
cmp
pop
fldt
mov
inc
ja
call
xchg
jo
mov
stos
or
and
cmp
add
xlat
xchg
pop
jae
mov
push
out
imul
add
insb
sbb
mov
pop
xor
jns
out
push
add
mov
sti
mov
and
test
sti
rorb
loop
sbb
mov
std
sbb
fadds
decb
es
and
popa
adc
push
push
in
ret
gs
xchg
xchg
pop
repz
mov
jmp
fists
push
outsb
rcll
rolb
mov
pop
mov
mov
scas
mov
outsb
lock
mov
ret
imul
dec
mov
das
fisttpll
sbbl
xor
loop
mov
out
fsubrl
cli
stc
mov
in
sbb
sbb
ds
xchg
inc
mov
pop
fldl2e
sbb
icebp
jns
sub
pop
and
add
je
lods
push
mov
mov
fimuls
adc
lret
sbb
mov
fstl
xor
subb
popf
inc
sbb
cmp
shlb
iret
out
jbe
inc
push
test
xchg
shlb
int
out
pop
loop
popl
ret
fildll
ret
add
and
mov
sub
lcall
lahf
mov
dec
popf
idivb
push
jp
xor
in
std
cmc
movsl
cmp
stos
addb
jae
push
test
arpl
cmpsl
jae
cmp
fstpt
pop
pop
xor
call
push
test
and
jae
imul
sub
xchg
out
push
cmp
or
sbb
xchg
dec
aas
mov
or
fmul
orb
xchg
jge
out
mov
mov
adc
popf
xchg
idivl
repnz
int
jo
inc
iret
inc
fadds
daa
mov
mov
or
imul
xor
dec
call
addr16
out
xchg
jo
inc
xorb
dec
and
push
jmp
addl
push
in
dec
dec
enter
leave
dec
pop
aam
cld
inc
inc
ds
sbb
test
cmp
push
or
imul
jp
pop
stos
fistpl
test
nop
jbe
push
enter
xor
sbb
dec
lea
mov
gs
or
inc
push
mov
in
jb
or
jl
nop
jae
mov
jg
test
xchg
xchg
lds
fdivp
sahf
add
mov
je
and
and
and
xchg
xchg
iret
push
adc
mov
dec
inc
aas
adc
stos
dec
cmc
push
test
sbb
das
push
lds
xchg
out
aaa
adc
es
stos
and
xor
or
jb
inc
xchg
in
cmc
push
lods
mov
scas
cmp
adcl
gs
mov
push
and
and
dec
into
lods
leave
push
push
mov
loopne
fs
xchg
aam
lret
or
mov
mov
daa
mov
push
int
outsl
push
sub
loope
mov
add
xor
sbb
lret
int3
lahf
lahf
out
pushl
sbb
inc
stos
inc
test
enter
jmp
xor
xchg
popf
call
loope
ret
loope
inc
mov
ds
cmp
shlb
repnz
mov
cltd
jbe
icebp
lods
mov
ja
dec
in
xor
sub
mov
mov
sti
push
test
in
xchg
in
clc
mov
mov
mov
cmpsb
jg
and
dec
xor
out
push
shrb
outsb
pop
inc
mov
jbe
test
movsl
mov
es
adc
cmp
or
mov
outsl
imul
pop
mov
out
dec
addl
leave
sbb
ja
imul
pop
mov
cmovl
mov
outsl
mov
pop
xchg
pop
cs
dec
pop
xacquire
adc
xchg
sti
into
pop
xchg
jne
mov
inc
pop
lret
dec
mov
push
inc
pop
movsl
jmp
jl
shrb
dec
insl
out
fwait
cs
or
imul
sbb
rclb
sbb
dec
jne
cmp
stc
insb
in
dec
out
ret
jle
pop
push
out
adc
lret
push
sub
mov
pop
sub
in
push
or
sbb
arpl
xchg
clc
and
and
mov
pop
cli
je
testb
mov
pop
mov
dec
movsb
xlat
inc
cmpsb
gs
xchg
add
pop
addb
push
aam
ja
or
cmpsl
fs
mov
pop
inc
insb
dec
imul
push
dec
adc
dec
adc
sarl
xor
push
and
aas
cmp
jle
mov
jl
dec
clc
xor
shrb
xor
aam
or
pop
sbb
and
roll
loop
pop
pop
xchg
pop
int3
test
xlat
inc
pop
lret
add
iret
psubq
mov
dec
mov
mov
out
jb
push
call
pop
ret
pusha
lds
out
test
add
dec
int
adc
mov
add
test
addr16
popa
hlt
mov
add
xchg
mov
leave
ds
in
or
jb
mov
loop
loope
jle
insl
cs
stos
pop
and
fsubs
shlb
inc
mov
outsb
add
mov
lea
and
divps
in
lahf
imul
inc
lods
lcall
es
xchg
sete
push
push
movsb
sub
xor
loopne
sbb
dec
mov
xor
cmp
filds
push
cmpsb
es
dec
test
aaa
adc
adc
mov
adc
mov
ljmp
mov
scas
mov
push
mov
fs
jl
or
lahf
mov
push
rcr
mov
add
mov
inc
loope
cmpsl
add
notb
dec
add
aaa
add
jmp
xchg
leave
dec
push
lds
ss
subl
fdivrl
fcoml
js
jl
and
or
mov
mov
cmp
dec
ficoml
mov
pop
push
adc
jge
xchg
das
ss
cwtl
popl
aam
fwait
shr
fcmovu
mov
scas
fldenv
lea
popf
push
inc
pop
or
ds
rcr
dec
cmpsl
rcrl
adc
shrb
and
les
push
pop
adc
outsl
daa
dec
mov
inc
jge
inc
adc
adc
sbb
sub
jmp
sbb
pop
push
insl
cli
jae
sahf
sbbl
movsl
push
arpl
in
jae
mov
inc
sti
mov
mov
loopne
lock
mov
ror
call
fs
cwtl
sub
daa
pop
das
pop
mov
pop
jecxz
inc
rcll
imul
aad
lahf
jl
push
or
push
jecxz
mov
clc
inc
pop
mov
out
loopne
lret
das
cli
lret
icebp
ret
movsl
mov
in
andb
mov
push
in
pop
jnp
add
in
test
fwait
stos
in
jb
push
mov
mov
xchg
or
addr16
sbb
test
call
mov
cli
inc
insl
stos
pop
mov
jl
ret
fwait
icebp
xchg
mov
push
mov
cmp
mov
in
mov
inc
lea
clc
xor
aad
mov
addr16
in
shrl
movsb
dec
ret
hlt
sub
loopne
cmpsl
mov
pop
mov
sbb
or
jo
testb
adc
sbb
dec
out
mov
lret
std
inc
xor
mov
mov
cli
adc
jecxz
mov
mov
out
add
xorl
add
push
sub
rorb
and
repz
icebp
or
cmc
arpl
jo
mov
aas
call
insl
xor
clc
mov
or
xchg
and
jae
lcall
out
mulb
jns
push
ret
jg
push
inc
std
adc
mov
xor
xchg
stos
dec
imul
inc
ret
dec
lods
cli
sbb
push
jecxz
inc
ret
out
dec
inc
jge
js
push
lock
ds
ret
mov
push
out
inc
sub
jle
xchg
jg
fidivl
fbstp
and
fwait
jmp
or
les
sub
xchg
fsubs
sbb
scas
jl
das
addr16
mov
out
std
daa
sub
lcall
in
imul
pushw
push
sahf
push
lods
and
inc
inc
lock
jmp
dec
push
inc
push
jno
jb
cltd
out
mov
fwait
add
mov
dec
lods
gs
jge
mov
adcb
push
stc
repz
cltd
adc
rolb
add
push
mov
xlat
push
xchg
adc
adc
cld
jnp
fsts
dec
fcomip
in
jae
jmp
pushf
pop
adc
xchg
es
inc
adc
inc
outsl
adc
xchg
movsb
xor
cmp
ss
adcl
xor
add
movsl
loopne
repz
cmp
mov
jge
push
in
pop
fstpt
test
pushl
and
lret
js
jge
adc
aas
add
in
mov
xor
nop
insb
xchg
dec
sbbb
ret
inc
sbb
sahf
dec
mov
mov
jns
idivb
push
adc
mov
mov
xchg
gs
jmp
mov
rcrl
popa
loope
jmp
mov
std
dec
stos
or
add
cmp
jo
push
ljmp
sub
mov
xchg
adc
decl
xor
das
fildl
loope
cld
lret
jne
mov
jbe
and
out
mov
mov
sub
dec
add
nop
pusha
pop
shlb
push
test
xchg
jae
jl
out
pop
cmp
pop
inc
adc
sbb
lods
dec
and
cmp
insl
jecxz
fwait
int
or
and
ret
add
jecxz
mov
inc
das
pushf
test
out
lahf
mov
loopne
mov
clc
cmpsb
sub
lods
iret
lea
in
push
xchg
jl
fcomps
push
adc
and
lods
dec
xor
jmp
ds
dec
inc
dec
adc
insb
dec
sti
or
cld
cmpsl
dec
je
divl
shlb
inc
mov
mov
push
jno
ja
add
jle
mov
icebp
lock
popf
ljmp
mov
cmp
lret
jbe
sbb
pop
cltd
lock
call
mov
pushf
fdiv
iret
sti
push
out
mov
les
sub
xchg
rorb
aas
cmc
lahf
pop
ror
inc
xchg
lret
xor
pop
add
test
gs
and
push
lcall
sub
stos
cmp
lahf
out
inc
insb
stos
inc
add
lahf
fs
out
sbb
sub
pop
jg
pop
mov
mov
mov
nop
dec
push
or
in
scas
fisttpl
mov
lods
lahf
lea
into
sbb
sub
fstpl
inc
pusha
scas
jnp
insl
fcomps
mov
fwait
sti
lods
jnp
or
fsubp
ljmp
adc
sbb
jo
sbb
roll
repnz
push
testb
shlb
mov
lods
dec
jg
adc
mov
sub
je
aas
clc
push
lret
pop
gs
das
inc
mov
fmuls
xlat
inc
ret
pushl
mov
pop
inc
pop
rcrb
add
test
movl
mov
cmp
sub
inc
jne
out
xor
lods
outsl
cmp
sub
testb
sub
in
mov
cld
sub
rcrl
inc
cmp
sbb
sbb
xchg
lea
pop
sub
les
shll
in
mov
sub
pop
enter
cmp
jb
mov
inc
push
std
pop
cmp
cwtl
and
cmp
cmp
imul
sarb
sbb
sub
push
pop
inc
iret
xor
xchg
cmp
adc
push
cwtl
movsl
fs
lock
sbb
mov
add
ret
jle
clc
adc
movb
andb
ret
lods
stos
inc
jns
push
xchg
mov
lods
add
loopne
adc
inc
ss
sbb
shlb
sbb
cli
loope
test
int3
sub
and
dec
lds
int3
cmc
dec
in
or
shrl
mov
mov
hlt
cmp
lahf
adc
fnstsw
arpl
dec
sarl
mov
xchg
or
fildl
jno
dec
popa
sahf
in
sbb
mov
mov
in
lret
mov
inc
shlb
loop
repnz
mov
scas
in
sahf
shlb
fldenv
pop
pop
xlat
jl
xor
lcall
sub
je
iret
push
pause
push
cmp
jae
mov
das
mov
push
adc
add
sbb
jg
mov
rcll
pop
xchg
cmpsb
out
ffree
in
sub
jb
pop
or
lahf
in
mov
outsl
aas
arpl
jns
lock
into
in
and
xchg
or
pop
cmpsl
subl
add
ljmp
test
mov
add
lods
push
mov
add
test
cmp
mov
adc
rep
fcomip
in
pop
or
jecxz
test
lods
test
inc
pop
dec
flds
es
icebp
cmpsb
and
in
pop
shlb
es
push
notb
push
test
inc
xchg
fstpt
cmp
pusha
mov
add
mov
push
enter
cmp
lret
fisubrl
rcrl
or
sbb
push
mov
dec
lret
sub
inc
sbb
es
mov
mov
pop
or
mov
dec
in
shl
and
xor
outsb
xor
cmp
int3
xor
test
pop
in
cmp
bound
lret
in
in
sti
xchg
lea
pop
loop
pop
cmc
mov
lcall
ret
imul
mov
cmc
std
pop
sbb
xchg
jo
icebp
jmp
stc
pop
gs
notb
jbe
call
out
iret
aas
std
sub
decb
inc
in
clc
rorb
or
imul
xor
mov
movsb
sub
cmp
add
shl
lods
lret
xor
enter
dec
insb
insl
sbb
sti
add
mov
xor
test
xor
in
jb
xchg
frstor
lods
cltd
lock
lea
push
and
and
dec
ret
sti
call
rcrb
lret
or
loopne
adc
xor
pop
mov
in
xor
fcoms
incb
dec
xlat
pushf
xchg
fs
popf
mov
and
pop
stc
sub
sub
insb
jb
mov
pop
adc
lods
cmc
dec
cs
je
pushf
push
vcmpsd
jns
add
pop
fadds
rcll
or
push
nop
rclb
lcall
fisttpl
ret
and
mov
data16
sbb
call
sbb
repz
outsb
loope
push
loopne
add
and
xchg
test
mov
mov
into
nop
int
sub
or
dec
dec
pop
popa
mov
fmull
mov
mov
mov
add
iret
out
arpl
pop
int
leave
mov
jns
clc
in
in
inc
sahf
fidivs
lahf
repz
xchg
stos
xchg
dec
push
lcall
iret
test
mov
mov
lods
icebp
cmp
and
push
in
inc
mov
loopne
adc
out
fsubrl
bound
xchg
push
or
mov
and
into
inc
pusha
insl
or
or
xor
mov
lods
fcmovbe
or
jb
aaa
mov
call
sahf
mov
mov
rcll
std
push
bound
dec
xchg
or
sub
lods
add
sub
sub
jns
jge
repnz
lea
or
and
sbb
test
add
push
or
jno
in
jg
lods
cli
rep
lahf
shl
push
mulb
push
aaa
and
adc
xchg
outsl
xchg
in
adc
or
jle
pop
fwait
push
mov
aam
fdivrl
inc
sbb
fldenv
sub
dec
data16
and
scas
loop
mov
inc
and
inc
or
imul
xor
jbe
outsl
xlat
ja
icebp
mov
lock
sbb
aad
jnp
mov
sub
mov
sbb
xchg
cmp
shll
xchg
inc
inc
push
cmp
adc
sbb
jp
cmp
popf
popf
bound
xor
ja
xchg
push
sub
loop,pn
xor
add
cmp
lods
pop
sbb
jmp
or
addb
leave
push
push
test
stos
xchg
or
icebp
pop
test
movb
inc
stc
dec
inc
mov
push
sbb
icebp
das
dec
mov
aam
cltd
arpl
ss
mov
dec
cmpb
cmp
pop
std
dec
push
fidivrs
inc
adc
fisubl
dec
xor
mov
sub
add
push
mov
lods
fldt
xchg
fsubrs
imul
or
add
out
xor
fmuls
stos
xchg
push
sbb
mov
lds
sub
insl
jmp
das
daa
into
dec
xor
inc
add
cmpsb
scas
testl
jns
in
sti
stos
adc
insl
push
fimuls
sbb
scas
fidivs
sub
movsl
imul
dec
mov
les
add
push
pop
dec
xor
push
test
sbbl
lret
addb
mov
add
popf
gs
shll
sub
cmp
insb
cltd
dec
jo
shll
movsl
or
cltd
fwait
xchg
add
mov
imul
cli
pop
lret
mov
add
imul
pop
es
bound
or
pop
imul
mov
pushf
clc
pushf
xchg
adc
outsl
aam
sar
dec
and
cmp
addb
mov
sub
push
rsm
and
xor
xchg
dec
adc
dec
and
sbb
test
adc
sub
mov
ret
ljmp
std
sub
cltd
inc
andl
jb
mov
or
sbb
xor
loope
pop
flds
in
xchg
and
push
cli
cmp
jmp
xorl
shll
nop
push
push
sarb
cmc
arpl
outsl
sbb
in
mov
test
sbb
int
mov
stc
ljmp
pushl
test
insl
push
pop
push
inc
loop
jne
lods
mov
jecxz
lock
cmpsl
and
lods
cmp
frstor
les
mov
jge
adc
movsl
fsubr
fisttps
jno
mov
ret
inc
test
insl
cmp
and
cs
or
dec
xchg
scas
mov
mov
sub
shlb
loopne
scas
xchg
mov
cli
cmp
push
push
push
sahf
push
cmp
popf
jae
push
add
rcll
fists
jae
jmp
push
fnsave
lods
pop
outsl
aas
mov
call
dec
std
outsb
mov
test
jge
jge
add
add
push
fwait
inc
daa
pop
mov
xchg
pop
mov
and
inc
sbbb
and
and
fildl
mov
arpl
adc
and
push
adc
mov
jns
stos
push
push
pushw
insb
shll
xor
pushf
sbb
add
mov
loop
rcrl
dec
js
iret
iret
dec
movsl
outsb
jno
fnsave
fcoml
mov
repnz
test
cmp
pop
pop
fcoms
push
in
jns
lds
gs
xor
pop
or
int
icebp
rolb
xor
jno
dec
cs
jae
sarb
add
and
leave
sbb
or
xor
scas
cmpl
inc
pop
mov
addl
rcrl
cmp
xchg
mov
dec
fisubrl
cwtl
sub
mov
aam
add
mov
adc
inc
pushf
sbb
adc
insl
pop
aas
and
inc
or
jb
les
stos
leave
lcall
pop
out
mov
arpl
js
call
inc
sti
xor
bound
mov
jbe
fsts
xchg
mov
insl
icebp
cmpsl
aam
js
ficoml
pop
inc
xchg
inc
pop
pop
mov
inc
push
rclb
data16
dec
movsb
pop
movsb
mov
sub
outsl
push
or
add
hlt
movsl
vunpcklps
cs
dec
mov
or
loop
lcall
arpl
daa
xchg
pushf
xorb
mov
pop
sti
clc
testb
or
mov
fdiv
out
jge
daa
push
mov
mov
test
divl
loope
push
jmp
xchg
scas
iret
cmp
inc
push
int
js
inc
jae
jo
jmp
lcall
mov
push
fmuls
pop
inc
sahf
cs
aas
jae
cmp
xchg
sub
test
jp
fistpll
inc
mov
aad
pop
xor
inc
mov
adc
xor
push
cld
addb
pop
xor
leave
push
pop
lcall
in
dec
pusha
inc
in
shlb
cld
stos
jb
outsb
mov
xor
mov
sub
pop
pop
and
aad
cmpsb
bound
adc
std
xchg
aaa
jne
sbb
dec
outsl
icebp
cmp
inc
sahf
jne
mov
vorps
mov
inc
mov
jmp
push
sub
lock
pop
aas
jnp
xor
ror
push
test
jnp
das
jo
int3
lcall
stos
cmp
fdivp
rcl
lret
stc
insl
sbb
fdivrp
or
cmc
out
stc
repnz
roll
xor
outsl
mov
adcb
dec
sbb
test
outsb
cmc
aaa
xchg
jb
fiaddl
lretw
sbb
and
xchg
push
adc
mov
outsl
scas
pusha
rorl
outsl
outsb
mov
aaa
sub
lock
fsubrl
mov
and
shrb
roll
mov
sbb
mov
addr16
xchg
aad
mov
mov
xchg
iret
dec
dec
lret
sbb
push
xchg
test
xchg
pusha
psubsb
inc
icebp
jb
mov
into
mov
sub
stos
cmp
or
lcall
or
fidivl
mov
cmp
and
jb
rol
cmp
push
add
mov
into
mov
fcomip
push
push
fld
mov
popf
dec
and
mov
or
jnp
test
mov
mov
jne
jp
sbb
cmc
and
mov
repz
sarl
lods
xchg
pushf
movsb
add
xor
cltd
in
cld
cmpsl
aas
push
push
jl
fstl
stc
jle
pushf
push
jnp
pop
test
jmp
stos
repz
repnz
jl
clc
lcall
dec
fistpl
or
ret
sub
xor
js
imull
test
lods
cmp
mov
adc
xor
idiv
xor
add
dec
jo
pop
sarb
movsb
sbbb
sbb
rcrl
ja
clc
fildl
sbb
xorb
xchg
in
jle
into
popa
insl
xor
mov
fists
lahf
xor
mov
push
jge
cs
jno
insl
cmp
sub
or
fxrstor
push
adc
push
or
in
cmp
adc
aaa
mov
sbb
out
jbe
or
xchg
out
in
sub
mov
nop
ja
and
dec
xor
movsl
in
int3
mov
sbb
or
sti
mov
push
inc
xchg
pop
dec
cmp
insl
cwtl
in
iret
xchg
ljmp
imul
push
andnps
iret
stos
mov
xchg
cmc
lods
test
or
dec
and
cmp
jle
leave
fs
fwait
les
push
jns
sbb
lods
or
fcmovnbe
pop
sub
pop
repnz
fdivl
jmp
xor
clc
cmpsb
shll
cmp
out
sarl
negl
arpl
dec
push
dec
mov
jns
dec
fwait
sti
push
push
js
and
cli
sub
dec
neg
repnz
stos
in
mov
aas
outsb
mov
adc
mov
ds
xchg
mov
repz
sub
xor
xor
mov
in
add
scas
sub
mulps
mov
xchg
add
dec
in
add
andl
pop
addr16
roll
xchg
sbb
sub
sti
js
repnz
clc
lds
insw
in
xchg
test
push
loopne
xchg
insl
xorb
lea
inc
lock
push
add
loope
or
dec
movsl
lea
movsb
insb
or
cmp
leave
outsb
xor
fwait
sub
mov
xchg
push
inc
sub
ret
and
xchg
push
jae
cmc
rcll
mov
jae
dec
and
dec
jg
dec
jmp
cmp
xchg
sarl
adc
adc
pop
pop
jp
push
and
nop
sbb
jp
sti
stc
mov
lods
xor
scas
lock
es
mov
iret
adc
es
xchg
or
clc
xchg
xchg
rcl
jb
adc
sub
mov
insb
cltd
sub
mov
sarl
rorb
add
sub
jnp
jne
or
inc
cmp
das
scas
push
loopne
mov
xchg
insl
mov
lods
lret
inc
outsb
cltd
fucom
scas
mov
sbb
icebp
push
sbb
push
rolb
jbe
sub
mov
inc
sub
out
movsb
and
call
je
ja
pop
ret
cmp
mov
push
cli
mov
pop
flds
sahf
fdivrl
jnp
movsb
jl
pop
push
mov
cmp
fdivl
test
adc
add
cltd
mov
add
aas
xchg
ret
dec
add
leave
scas
loop
out
mov
imul
int
ret
sub
int
stc
mov
mov
pop
movsl
xchg
arpl
subl
aas
sub
sub
into
arpl
xor
cmpsl
ret
adc
test
fs
adc
mov
sbb
cmc
pusha
mov
insl
sbb
inc
stos
mov
xchg
mov
cmp
lcall
jb
jg
testb
jp
ret
dec
ret
shlb
cwtl
mov
jnp
cmpb
scas
pmuludq
xor
add
xor
cmp
push
jo
loope
mov
sub
subl
mov
cltd
mov
ja
sti
push
sub
int
mov
pop
mov
ret
xor
test
imul
repz
xor
movsb
test
push
sbb
push
push
mov
inc
out
fsubl
ret
cwtl
leave
mov
rcr
add
or
cmovle
je
fiaddl
jne
btc
mov
jecxz
fwait
jbe
jae
dec
in
mov
jb
ds
shrb
movsb
xchg
mov
mov
inc
mov
xchg
fdiv
sbb
jl
pand
adc
fstpt
gs
mov
icebp
call
push
movsl
add
mov
ja
dec
loopne
mov
jo
arpl
mov
mov
pop
push
mov
mov
les
imul
fwait
inc
cltd
and
add
mov
jl
cmp
push
and
icebp
mov
out
or
in
xchg
mov
scas
xchg
push
mov
pop
and
data16
lret
mov
cmp
and
mov
imul
scas
cwtl
iret
mov
jnp
andb
fwait
into
push
sub
cmpsl
fnstcw
push
inc
daa
jl
call
mov
pop
jg
cs
xor
adc
aas
cmp
int
dec
in
cmp
mov
or
mov
cmp
sbb
inc
adc
ljmp
sub
ljmp
aad
outsl
insl
outsl
add
jns
loopne
dec
mov
jmp
cmc
repz
into
out
ret
mov
cld
xchg
pop
pop
jmp
jecxz
xchg
mov
inc
sub
xlat
adc
lods
out
es
lods
out
scas
adc
push
int
sbb
inc
rolb
mov
mov
pushf
xchg
iret
add
xchg
xor
and
pop
fstps
sub
stos
ja
sbb
xchg
not
dec
into
pop
inc
popl
loope
mov
scas
lea
jle
cmpsl
dec
stos
mov
outsb
add
pop
popf
jae
cltd
push
mov
out
mov
push
das
test
sub
sarb
pop
in
jns
fs
mov
mov
and
push
pop
mov
xor
xchg
dec
dec
xchg
lcall
dec
aam
add
loopne
pusha
mov
jecxz
sbb
rcr
sti
dec
andl
loop
mov
imul
fwait
mov
jno
aaa
xchg
fsubr
xchg
stos
lcall
push
call
add
stc
aad
adc
pusha
cltd
sti
lcall
idiv
adc
cmpsl
cli
inc
pop
and
sbb
xlat
xchg
lds
stc
lods
adc
sar
adc
push
arpl
out
pop
lret
jo
popa
push
and
mov
push
mov
mov
movsl
movsb
leave
xchg
mov
dec
lods
fcmovne
std
in
clc
jmp
test
aaa
push
arpl
enter
push
imul
jns
sbb
and
mov
aas
cmpsl
repnz
stos
loope
cltd
jo
test
popf
inc
adc
or
add
pop
ss
fucomip
sbb
stc
imul
stos
add
adc
xchg
repz
jmp
sbb
clc
je
ror
fdivr
push
xchg
xchg
or
dec
fdivp
aam
lret
enter
mov
push
cmp
push
adc
daa
pop
lahf
push
icebp
lods
push
imul
cmp
push
fs
xor
adc
push
sub
pop
pop
cmc
ja
rcrl
xor
jle
test
pop
es
push
enter
and
cmc
xor
idivb
dec
lret
imul
fwait
negb
sarb
pop
mov
jmp
jle
mov
jnp
addr16
fwait
push
inc
scas
mov
mov
dec
or
imul
test
mov
insb
dec
cwtl
ds
lds
pop
sub
fnstsw
aaa
fcoml
or
insb
gs
push
push
cmpsb
ret
int3
arpl
out
push
mov
jns
mov
or
gs
dec
mov
call
add
fwait
dec
cmp
inc
dec
mov
push
les
push
jno
std
daa
pop
popa
movsl
xlat
stos
stc
int3
inc
loop
ljmp
add
in
rorb
outsl
scas
push
push
andb
xchg
fmull
push
es
and
pop
mov
xchg
addb
in
icebp
pop
inc
out
jae
jl
out
out
pop
jnp
in
pop
jge
in
mov
mov
das
and
mov
add
outsb
in
mov
jno
inc
das
leave
out
mov
lcall
mov
adc
out
cmp
push
and
fistpll
mov
ss
dec
mov
jle
dec
loopne
cmpsl
sub
movsl
mov
dec
push
inc
scas
stos
sbbb
xor
mov
mov
fadds
jge
jge
in
sbb
jg
sahf
out
push
test
mov
cld
jmp
add
xor
xchg
stos
mov
jge
mov
rcrb
jne
sub
pop
pusha
out
jmp
xor
addr16
mov
or
mov
insl
int
aam
cmp
insl
mov
fldl2t
xor
jb
movsl
pop
emms
scas
push
es
clc
add
cwtl
fdecstp
in
push
rclb
mov
mov
dec
imul
insb
sbb
bound
xor
push
push
lret
nop
clc
mov
shr
sub
mov
leave
out
iret
movsl
ret
mov
daa
sbb
xlat
repz
xchg
inc
xchg
dec
xchg
cmpsl
and
xor
adc
mov
jb
jmp
fstpl
sbbb
rcr
sub
cltd
pop
jg
insl
dec
cltd
iret
scas
insb
leave
cli
clc
cmp
adc
mov
arpl
pop
insl
mov
test
mov
adc
mov
scas
jmp
ja
ds
xchg
mov
add
mov
scas
mov
sub
loopne
jae
rolb
and
insl
xchg
enter
andl
jp
xor
sbb
adc
out
fs
pop
add
in
inc
inc
dec
adc
jae
push
cltd
add
insb
adc
cmpsl
inc
loope
inc
pop
pop
bound
jmp
cmp
xchg
add
sarb
adc
mov
pop
mov
mov
jnp
lock
insb
mov
out
pushf
xor
in
mov
or
mov
push
loope
cmc
sbbb
adc
pop
and
sub
es
xor
in
aad
das
and
mov
fs
cwtl
cli
hlt
jp
mov
leave
data16
wbinvd
dec
mov
ret
inc
lret
movsl
fisubrs
xor
data16
mov
pusha
inc
dec
adc
ret
sbb
testb
je
pop
push
int3
mov
rcl
jp
out
imul
xchg
pop
rol
inc
cwtl
or
repz
loop
cmp
sbb
insb
pop
vpsubsw
cmpl
mov
lods
mov
loop
pop
lock
push
mov
arpl
push
sti
popf
pushf
push
sti
pop
imul
int
shll
inc
ret
andb
ret
imul
mov
adc
mov
clc
push
push
clc
out
xor
cmp
lock
stos
scas
fisubl
aam
lock
push
les
in
inc
mov
call
call
mov
sub
jae
lcall
sbb
aas
mov
pop
movsb
pop
mov
push
mov
fistpll
int3
push
test
aaa
aam
sbb
push
fildll
and
sar
xchg
stos
dec
mov
clc
push
jmp
lahf
push
int3
and
imul
mov
mov
pop
sbb
sub
or
push
jne
test
ret
lods
popa
into
lds
and
outsl
add
and
movsl
inc
jns
mov
and
js
int3
and
test
jbe
push
dec
dec
xchg
enter
js
inc
movsb
outsb
jo
popa
sbb
mov
fimuls
xchg
.byte
xchg
and
mov
sbb
mov
mov
jl
test
push
data16
inc
out
inc
cmovo
push
xchg
jecxz
xchg
lahf
push
xchg
adc
ret
inc
test
xor
cwtl
jbe
xchg
xor
sbbl
mov
test
out
sbb
mov
pop
inc
xchg
pop
notl
sub
bound
popf
mov
repz
sti
push
outsl
inc
out
stc
add
mov
dec
cmp
insb
sbb
fdiv
fdivs
fcmovu
adc
insb
xchg
repnz
repnz
enter
mov
sub
in
pop
dec
jg
cltd
test
adc
inc
push
jb
mov
fucom
lahf
repz
jle
dec
xchg
das
lods
in
push
repnz
mov
into
lcall
sub
lds
or
mov
cmpsl
int3
pop
aam
push
or
test
cwtl
cs
or
inc
or
jg
sar
es
rcl
repz
or
fwait
lcall
pusha
and
inc
movsb
mov
and
shrb
inc
cmpb
jo
xchg
xor
rcrb
into
int
inc
das
out
and
xor
out
sbb
test
jne
inc
adc
dec
inc
xor
mov
std
and
adc
loope
xchg
sbb
adc
push
insb
xchg
movsl
jle
mov
xor
test
cwtl
xchg
sub
iret
lcall
mov
adc
js
mov
in
xor
rolb
xor
fildl
movsb
mov
movsb
jo
push
mov
hlt
jl
stc
imul
add
sbb
call
cs
jno
add
push
sar
sbb
cmp
hlt
cmp
xlat
cltd
ss
inc
movsl
leave
jle
or
mov
mov
add
in
jnp
subb
mov
push
mov
out
dec
in
xchg
jno
data16
test
dec
ss
push
mov
add
jg,pt
mov
and
lock
fsubrl
iretw
jbe
xchg
cwtl
cmp
xor
out
in
aaa
je
add
dec
arpl
mov
aas
int
cmp
xchg
popa
loop
xchg
cli
imul
sbb
cmc
fildl
xchg
xchg
imul
out
rcl
repz
out
sti
lock
outsl
mov
xchg
loop
dec
xchg
mov
cmpsb
mov
jmp
ja
jnp
frstor
inc
aad
outsb
outsl
cli
fnstsw
fsubrl
cmp
pop
and
insb
xor
mov
push
into
mov
pop
push
loope
ss
nop
push
or
enter
jo
xchg
enter
or
and
inc
outsl
inc
sub
lret
mov
iret
pop
insb
xchg
pusha
idivb
repz
adc
fldl
ljmp
aas
andb
into
movsb
aas
mov
loop
sub
adc
mov
dec
sti
push
xor
pop
ja
jg
xor
testb
dec
lods
push
mov
outsl
in
mov
sti
frstor
mov
jns
pop
push
hlt
cmp
ja
fsubrs
adc
jno
pushf
pushf
sahf
push
or
mov
pop
mov
loopne
xor
mov
in
cltd
mov
repnz
pushf
push
rorl
in
pushf
push
fdivs
xchg
jbe
jb
pop
mov
sbb
add
inc
in
test
test
xor
ficoml
and
push
fisubl
pop
xchg
push
mov
pop
lock
stos
sbb
mov
xchg
into
subb
ror
std
pop
popf
fiadds
fldt
cli
les
and
inc
xchg
fcomi
fdivs
xchg
movsl
dec
xchg
into
and
pop
push
add
xchg
xchg
push
outsb
xor
fld
jnp
dec
in
or
mov
sbb
adc
push
test
mov
movsl
or
jmp
add
mov
add
clc
mov
fbstp
aas
or
ret
cmp
out
push
push
dec
dec
mov
jbe
idivl
xchg
in
jnp
jne
aaa
cwtl
outsl
mov
lods
sub
sub
or
fs
mov
cli
ds
dec
insb
test
mov
sbb
dec
aad
ss
ret
das
add
cmp
lcall
fidivrs
inc
add
jae
xchg
cmc
push
add
add
call
leave
outsb
sbb
enter
arpl
cltd
push
insb
aam
in
loope
movsb
pop
pusha
fimull
in
imul
sbb
or
push
fwait
pop
aad
ds
dec
mov
popf
fnstcw
leave
jne
arpl
outsl
sarb
fs
and
imul
ja
int
aam
pop
test
popa
dec
inc
sub
ret
mov
jmp
and
sbb
xchg
cmpsb
addr16
repz
push
and
xor
rcrb
sahf
adc
cmc
adc
or
scas
pop
out
lret
cmp
cmp
rolb
ljmp
xorb
scas
push
pop
fwait
sub
daa
jnp
mov
les
push
scas
movsb
cltd
in
xlat
xchg
lret
daa
fucomp
jo
push
repz
xchg
fcoms
leave
sbb
push
por
push
popf
mov
mov
pop
add
adc
sbb
dec
mov
pop
and
pop
and
ss
inc
dec
ja
test
sbb
sbb
jo
lahf
insl
sub
xor
loope
cwtl
subb
adc
or
je
jae
ss
or
xchg
add
rcll
test
inc
es
add
sbb
cmp
xor
das
sub
pusha
repz
add
dec
mov
cmc
mov
std
fs
or
sbbl
in
xor
xchg
dec
insb
or
test
loopne
hlt
imul
jp
mov
mov
sbb
and
aas
daa
add
scas
ja
pop
or
sbb
sbb
jge
and
ret
idivl
jp
jle
xor
pushf
aaa
xchg
nop
je
xor
out
jae
sbb
push
cmp
scas
pushw
in
mov
mov
aas
mov
lods
adc
fwait
iret
aam
pop
arpl
ss
dec
pop
divb
or
popa
or
cwtl
mov
push
fldt
insl
adc
cmp
sub
pop
sub
and
inc
ja
lahf
push
sahf
jp
mov
mov
lds
lahf
ret
pusha
lods
mov
insb
push
outsl
xchg
push
mov
mov
and
inc
sbb
push
jb
xor
sub
xor
xchg
cmp
loop
les
cli
jns
add
sbb
or
push
test
ljmp
stc
inc
push
push
loopne
orl
test
or
loop
mov
push
bound
test
mov
xor
mov
mov
inc
push
leave
mov
cmovb
flds
stc
fisubrl
adc
sbb
nop
out
jne
mov
mov
jo
and
arpl
in
xchg
xchg
jae
enter
mov
stos
xchg
faddl
lds
jmp
mov
mov
repz
pop
int3
subb
push
adc
cmp
dec
stos
lea
lahf
rep
jne
in
pop
popa
dec
leave
lret
or
hlt
push
out
xlat
add
ret
bound
dec
call
icebp
into
cld
mov
call
pushf
cmp
inc
or
pusha
and
test
fsubrs
jge
ret
test
in
mov
pop
or
jecxz
scas
sbbb
test
cmp
mov
lods
imul
dec
hlt
pop
sar
cmp
rolb
adc
test
clc
in
stos
loop
sub
scas
in
push
ja
ja
add
xlat
aad
push
cmp
mov
jnp
adc
sbb
dec
push
andnps
pop
xchg
fisttps
jl
xchg
into
push
pop
jb
shl
movsl
add
fadds
jmp
fcoms
out
movsb
loop
into
pop
pushf
addl
sbb
leave
or
imul
mov
repnz
adc
ret
insb
mov
imul
cmpl
xchg
stc
push
iret
imul
dec
or
mov
mov
stos
cmpsl
mov
in
sbb
aam
push
inc
sub
cltd
cmc
pushf
add
pusha
cld
sub
cltd
outsl
inc
inc
sub
xchg
repz
mov
fidivrl
notl
add
sbb
sub
test
or
jmp
icebp
repz
enter
notb
pop
xor
mov
jg
cltd
push
stc
or
in
pop
das
jne
or
sub
outsl
push
lret
fs
sub
mov
movsl
daa
push
stc
xor
inc
xchg
gs
in
mov
jl
dec
es
call
sbb
or
dec
leave
push
dec
fisubrs
push
push
jb
adc
add
sub
cld
xchg
sbb
fwait
ret
mov
inc
cli
ss
push
imul
jg
lret
dec
in
scas
out
jbe
mov
and
negb
jnp
into
in
testb
push
sbb
and
insb
mov
sbbb
inc
dec
mov
ss
jp
movsb
lds
jno
mov
int
cs
sbb
xor
call
adc
jle
mov
scas
mov
pop
push
out
aam
cmp
popf
sarb
lcall
mov
xchg
or
test
dec
mov
adc
into
icebp
push
sub
pop
fxch
loope
xor
xor
daa
dec
or
das
ja
popa
add
out
sbb
stos
sub
cld
inc
cmp
inc
popa
mov
orb
ss
xchg
cmp
pushf
push
mov
xchg
xchg
sbb
xchg
jae
fsubrl
paddsb
mov
inc
add
pop
inc
mov
jge
cli
imul
cmpsb
xlat
aad
test
clc
add
mov
mov
cmp
mov
daa
jnp
add
pop
in
lods
call
test
xchg
ret
xchg
push
mov
add
push
cli
test
fldcw
call
mov
pushf
jg
dec
clc
cmp
test
inc
sub
out
in
sub
test
sbb
pop
mov
mov
inc
lret
dec
add
xor
adc
mov
inc
lret
sarb
dec
test
add
sbb
cmp
lret
jp
pusha
mov
imul
imul
sarb
rclb
mov
int
addb
push
imul
sub
inc
jmp
inc
les
adc
mov
and
popf
into
lcall
add
aaa
push
xchg
gs
push
sub
cmp
lcall
les
push
xor
outsb
xchg
dec
xchg
cmpsl
fs
lods
ljmp
cld
test
add
mov
jb
add
xchg
outsl
mov
push
sbb
adc
mov
push
sub
orb
test
jo
jmp
push
dec
xlat
pop
fisttpll
icebp
clc
ss
js
jae
xor
or
adc
shlb
cmp
or
jl
jge
call
repz
or
sub
xlat
or
mov
repz
cmp
cld
push
xchg
lret
fisubrs
or
pop
pop
iret
and
lret
rcl
fdivs
dec
xchg
pop
sarb
mov
out
les
ljmp
shlb
cwtl
inc
inc
fimull
mov
movsl
cs
sbb
cmp
cmp
orb
xchg
in
aam
dec
sti
in
ffreep
mov
jne
sahf
loop
mov
jbe
daa
mov
mov
daa
shll
movsb
imul
fistpl
ss
pusha
pop
cmp
mov
nop
push
lret
dec
sbb
sahf
lock
mov
aam
mov
scas
jecxz
test
loope
mov
push
add
std
popf
ss
bound
pop
into
mov
js
lock
les
stos
inc
sbbb
aam
sarb
push
mov
outsl
sbb
insb
cmpb
bnd
std
stc
xor
pop
mov
shll
das
das
ss
push
and
ss
pop
mov
cmp
xlat
lock
push
xlat
pop
out
int3
das
lcall
push
jle
or
sub
into
fldt
mov
push
pop
loop
jno
jne
xchg
adc
mov
movsl
testl
mov
les
cmpsl
push
xchg
leave
ljmp
mov
cmpsb
int3
and
xchg
push
mov
jns
push
pushf
and
lahf
or
mov
or
cmp
popa
rorb
repnz
mov
ret
pop
or
movb
rcrl
repz
xchg
in
mov
std
push
cwtl
xor
jl
addr16
adc
adc
adc
or
xchg
pop
sub
scas
in
lock
push
jb
sbb
icebp
inc
jp
xchg
xchg
aam
clc
and
adc
mov
inc
cwtl
push
mov
mov
jle
mov
add
lret
popa
std
repnz
xor
fs
sbb
sarl
inc
mov
orb
or
mov
aad
adc
call
test
adc
dec
mov
sbb
fadd
pop
jmp
ja
cmp
mov
push
pop
scas
mov
scas
mov
adc
sub
jle
mov
xchg
sbb
jne,pn
dec
inc
sbb
pop
xchg
adc
mov
mov
add
add
jns
xchg
in
cli
inc
push
rcll
ja
push
sub
negb
movsl
mov
push
or
sbb
sbb
or
push
aas
dec
mov
nop
adc
jge
pop
out
pop
jbe
sbb
fwait
and
add
jg
lds
adc
sbb
sbb
xchg
leave
adc
into
ret
push
test
push
dec
xchg
or
jns
out
mov
insl
divl
repz
xor
mov
sbb
repz
mov
inc
sub
or
test
lds
pop
sub
icebp
pop
mov
xacquire
cmc
shll
scas
sub
or
lret
pop
cmp
pop
xchg
sbb
xchg
jns
roll
sbb
mov
in
ss
daa
cltd
lret
xchg
adc
lret
mull
pushf
pop
out
adc
add
cs
fcoml
xchg
clc
dec
cmc
mov
jecxz
and
lock
rcrl
lock
cmp
test
gs
xchg
jae
sub
aam
sahf
mov
sub
scas
mov
lds
ficompl
addl
ss
jae
xchg
fcmovne
loopne
js
dec
dec
das
outsb
dec
dec
mov
sub
pop
dec
push
sbb
and
addr16
push
bswap
jns
mov
mov
cltd
dec
sub
mov
popa
push
jnp
shlb
sub
stos
fwait
xchg
fcomip
or
jecxz
mov
aad
test
sub
icebp
ret
div
leave
mov
mov
lret
lret
test
dec
or
dec
lods
in
pop
not
mov
xor
mov
mov
pop
pop
mov
addr16
leave
je
mov
mov
movd
ror
lahf
mov
or
add
lret
mov
pushl
adc
loope
inc
inc
xlat
bound
and
shl
stos
movsl
xchg
mov
cmc
fcomp
adc
push
add
lret
jb
jnp
leave
negl
stos
sti
test
adc
adc
cltd
bound
movsb
jmp
push
add
insb
in
inc
gs
push
sahf
sti
sbb
jmp
cli
push
cltd
fiadds
and
rol
mov
xchg
sti
jl
push
and
subb
jl
lock
in
les
clc
cli
mov
or
popa
out
cld
inc
push
cli
ret
int
jne
and
addr16
sub
xchg
fstp
orb
jp
ret
pop
loop
ljmp
ret
mov
fs
jae
daa
sbb
jmp
push
lock
inc
add
cwtl
sahf
leave
test
sub
fmul
sbb
pop
push
lds
push
push
ret
cmp
ss
mov
lret
ror
xchg
outsb
scas
imul
arpl
push
les
inc
roll
mov
into
jl
ljmp
push
mov
imul
pushf
adc
push
std
in
in
dec
sbb
ja
mov
inc
mov
jecxz
mov
stos
and
adc
popa
inc
cld
aam
je
xor
mov
insb
aad
arpl
leave
fwait
lods
into
sub
and
std
loope
popf
and
xchg
push
pop
mov
sub
es
mov
inc
subl
insl
iret
adcb
movsl
push
dec
and
stos
inc
or
pop
pop
test
loope
xlat
sub
push
in
lock
mov
mov
inc
push
pop
dec
or
sbb
dec
inc
pushf
movsl
pop
mov
fiadds
fidivrs
imul
push
push
sub
add
cmp
dec
aam
enter
filds
inc
push
mov
scas
test
scas
inc
or
mov
ret
in
dec
fstps
icebp
or
fldenv
lahf
push
jns
jnp
mov
insb
lock
int
dec
and
mov
or
lea
jp
lea
enter
in
xchg
pop
mov
cmc
mov
mov
cmp
stc
js
pushf
mov
pop
mov
lea
and
lahf
sbb
sbb
pop
les
inc
push
mov
inc
add
in
pop
in
cmpsb
or
lea
push
add
lods
adc
add
in
mov
out
mov
xor
scas
xchg
mov
mov
enter
cli
mov
push
icebp
xchg
adc
decl
cld
add
scas
mov
scas
out
inc
cmc
sbb
add
out
lds
aad
xchg
test
xchg
push
xchg
jno
inc
test
mov
movsb
or
jae
daa
inc
aad
test
imul
sbb
and
push
dec
push
iret
jecxz
mov
xchg
xchg
xlat
lock
xor
leave
xchg
xor
mov
jo
cmpsb
cmp
rorl
cwtl
jp
sub
shll
jmp
ljmp
fst
fcmovbe
and
dec
enter
es
enter
sbb
sbb
dec
loope
sahf
cmp
mov
adc
dec
stos
in
mov
mov
mov
test
sbb
mov
jbe
sarl
lock
push
mov
or
inc
out
ds
rorb
mov
or
add
xchg
xor
repnz
imul
xchg
clc
mov
frstor
daa
lods
and
fidivrs
aam
inc
ds
mov
jb
mov
sahf
enter
sti
pop
enter
add
clc
clc
sbbb
dec
push
and
pop
sub
rorb
out
mov
cmp
jae
cwtl
pop
arpl
ja
mov
jbe
push
push
push
stos
xchg
repz
adc
repz
mov
je
pop
inc
jno
in
mov
inc
ret
mov
imul
add
sub
scas
mov
mov
adc
int
shll
arpl
cmpsb
int3
iret
or
and
in
ljmp
popa
addb
andb
cmp
inc
in
sub
aad
mov
lock
rol
push
xor
enter
das
mov
mov
xchg
out
int3
cmp
stos
lds
icebp
pop
sti
stc
outsl
stc
cmp
iret
mov
jne
push
pop
mov
xor
sub
and
xchg
mov
test
mov
loope
and
cmpsl
mov
sbb
adc
leave
inc
shll
jg
mov
cltd
dec
add
ret
dec
mov
sbb
dec
fsubrl
cwtl
mov
fdivrl
inc
mov
xchg
int3
mov
and
scas
adc
push
subb
adc
and
fs
dec
lret
xchg
mov
or
mov
xchg
cli
mov
pop
scas
xchg
xor
call
jge
add
adc
adc
shrl
xchg
pop
xchg
mov
push
pushf
sbb
ret
inc
add
jo
iret
mov
adc
add
cmp
ret
sar
call
jno
jle
jmp
cmp
mov
and
insb
in
inc
pavgw
push
int
aam
lods
mov
test
sub
pop
insl
out
lret
xor
gs
pop
or
mov
fistpll
aaa
inc
push
or
xor
scas
imul
and
out
sub
sbbb
stc
in
scas
shrl
testb
addl
xchg
inc
xchg
insb
aam
pop
xchg
push
in
stos
sub
cltd
das
cmpsl
lcall
xchg
repz
adc
cmp
sti
jno
mov
mov
fs
pop
leave
mov
push
jp
push
lods
dec
dec
adc
nop
adc
clc
mov
cmp
mov
jmp
inc
add
pop
leave
add
mov
shrb
xchg
sar
out
dec
push
push
lea
xchg
jg
das
inc
mov
aas
out
cld
push
cmpsl
cltd
jnp
imul
sbb
xchg
inc
cmpsb
jmp
test
mov
scas
push
clc
inc
pop
cs
dec
cltd
repz
es
pop
fistl
mov
mov
xchg
int3
shrl
jmp
sahf
inc
sub
les
sub
jle
sbbb
dec
sbb
iret
push
mov
add
xor
imul
addb
in
enter
mov
jecxz
inc
cwtl
jbe
or
jne
lcall
mov
and
xor
xor
cmp
xchg
jge
dec
jecxz
dec
insl
pop
adc
imul
imul
sbb
movsb
pop
sarl
push
movsb
mov
popf
fiaddl
ja
test
or
stos
lret
inc
sbb
mov
xchg
popa
mov
sbb
push
xor
fwait
sti
insb
cmp
aas
outsl
sbb
mov
jo
mov
add
dec
or
dec
fdivrl
xchg
xor
ds
hlt
filds
and
sbb
test
xchg
lcall
mov
xchg
pop
push
stos
mov
pop
inc
fsts
out
loop
jmp
call
leave
lcall
add
push
ss
aam
push
mov
loopne
notb
sub
jmp
dec
cmpsl
jp
pop
or
ds
aad
xchg
push
stc
cltd
inc
aaa
inc
hlt
and
ss
pop
xor
xor
xor
inc
pop
pop
fs
sub
add
xchg
sbb
stc
sub
sub
mov
mov
rorl
lea
and
mov
leave
push
aaa
stos
pop
mov
pop
test
jno
pusha
sbb
mov
pushf
jmp
sbb
sbb
add
shrl
fnstenv
sub
push
rorl
xchg
pop
and
xor
sub
fidivl
jp
mov
insl
mov
pop
push
mov
sub
insl
ret
pop
out
jne
mov
cmp
jns
inc
movsb
jnp
fdivrl
jb
ja
and
push
cmp
aam
fisttps
dec
mov
or
mov
sbb
mov
mov
xchg
jae
nop
xchg
sbb
aas
mov
push
cmp
int3
outsb
mov
mov
stc
shll
add
icebp
mov
pusha
xor
add
add
hlt
inc
out
es
lcall
sahf
mov
mov
test
mov
push
dec
lods
inc
mov
xchg
sub
popf
fiaddl
inc
cmp
lcall
loop
push
fstl
mov
fistl
addr16
push
lods
push
xor
cmp
and
int
sub
aas
lds
add
cltd
int3
adc
adc
cmp
mov
sub
sbb
stos
jg
outsb
pop
loope
xlat
sbb
test
shr
in
dec
xor
cmp
push
push
data16
ret
sbb
jecxz
sbb
pop
inc
dec
movsl
cmc
inc
pop
dec
daa
cmp
and
pop
mov
outsl
adc
or
add
sbb
fadd
xchg
xorb
or
roll
xchg
out
sbb
stc
pop
sub
push
addr16
adc
rcrl
jnp
arpl
jb
cmp
or
lahf
out
or
arpl
mov
mov
pop
and
testb
dec
fnsave
add
or
dec
sub
loope
xor
inc
dec
dec
jbe
jp
xchg
xor
clc
loope
stos
pusha
cltd
int3
mov
push
adc
xchg
hlt
mov
lods
scas
jne
mov
mov
or
stc
test
mov
mov
popa
es
lcall
int3
and
cmpsb
push
aaa
enter
repnz
lods
fs
xor
xchg
add
aad
test
icebp
pop
and
lcall
and
pop
jo
push
gs
enter
push
loope
sbb
or
das
fdivr
test
jge
popa
and
mov
jg
inc
xor
push
loop
add
lahf
lahf
lock
and
xor
inc
xor
mov
out
aaa
cmpsl
mov
mov
mov
ljmp
test
jno
mov
mov
inc
ret
xchg
push
inc
mov
xor
shlb
add
xor
nop
ljmp
mov
fsubr
push
mov
cld
in
inc
jns
ret
inc
es
dec
pop
bound
aaa
or
aad
daa
push
int
dec
lock
xor
leave
sar
jle
mov
les
stos
push
out
pop
cmp
popa
mov
imul
and
cmp
repz
ret
xor
mov
push
jmp
pop
jnp
inc
sahf
das
cmc
test
xchg
sub
loope
adc
sbb
push
push
jno
decl
and
stos
fmull
sub
and
cld
fs
popf
dec
iret
imul
out
negl
add
lret
outsb
in
push
pop
xchg
dec
lds
lahf
fcoml
out
lcall
jae
loop
out
not
movsb
cwtl
xor
or
sbb
fsts
or
pop
adc
aas
sbb
adc
jo
push
stos
out
out
push
outsb
pusha
inc
xchg
push
xor
xchg
cmp
jl
popa
pop
pop
mov
out
popf
inc
adc
mov
sahf
sahf
pop
cmpl
dec
add
outsl
mov
push
pusha
and
jmp
push
add
sahf
xchg
cmp
outsl
stc
adc
or
dec
lea
aas
cmp
or
sbb
adc
out
cmp
push
push
cltd
cmp
fcomip
insl
pop
add
out
mov
jno
pushf
sub
sti
lcall
fucomp
test
push
aas
xlat
mov
add
inc
sub
jecxz
cmpsl
mov
or
fcomi
cwtl
mov
xchg
mov
clc
dec
daa
and
mov
push
jle
es
in
adc
jle
fs
mov
clc
pop
mov
xor
sub
lds
scas
test
sarl
popf
inc
leave
imul
push
fnop
jne
and
mov
jne
adcb
mov
and
sahf
adc
lahf
mov
mov
cwtl
lods
inc
mov
mov
mov
mov
pop
lcall
testb
hlt
mov
nop
jo
dec
sbb
notb
inc
add
cmp
inc
dec
cmc
cmp
xchg
in
iret
cmpl
outsl
jno
adc
ds
sub
jmp
fwait
inc
sub
cmpsb
test
mov
paddq
mov
sub
xor
sahf
rcll
sub
pop
cwtl
dec
jne
shlb
outsl
push
scas
leave
loop
loopne
inc
add
jmp
insb
push
mulb
xchg
mov
adc
push
mov
jnp
cmp
push
jecxz
loop
sub
in
and
mov
mov
int3
inc
loopne,pt
lea
lahf
repz
mov
in
fcoml
cmp
mov
sbb
sub
pop
bound
xchg
pop
loopne
mov
dec
and
cmp
stc
cmp
push
jns
shll
xchg
and
test
insl
rcrb
vcvtsi2ss
dec
gs
and
pop
or
push
cmp
sub
mov
pop
ja
add
inc
and
mov
sbb
ja
or
imul
sbb
add
cmp
dec
subb
hlt
adc
sbb
pop
ja
and
addr16
jno
sbb
faddl
shlb
fmull
dec
adc
inc
add
and
xchg
loopne
dec
sbb
aad
and
lea
hlt
sbb
das
cmpsb
lret
or
ljmp
dec
mov
shrl
push
outsl
int
add
xchg
insl
jle
jmp
xchg
sub
lret
add
xchg
in
mov
push
add
adc
mov
add
ret
or
inc
add
insb
das
lock
loopne
leave
in
repnz
hlt
mov
mov
sti
rclb
clc
cmp
out
pop
jno
mov
loope
add
lea
cmp
dec
jbe
ret
fwait
xchg
test
andl
lret
mov
sbb
es
lock
jno
ds
lock
inc
in
lock
lds
xchg
mov
loope
das
int
sbb
jbe
into
mov
cmp
sbb
fstpt
stos
es
mov
cmp
xchg
test
lds
dec
xor
rcll
jb
call
test
or
adcl
lcall
test
adc
xchg
jbe
movsb
fs
ficomps
andps
inc
mov
lock
jbe
sbb
inc
adc
mov
push
dec
push
test
mov
fstpl
pop
push
fwait
pop
sti
out
mov
xlat
lods
mov
mov
pop
lcall
xchg
loopne
icebp
in
cmp
sub
or
inc
inc
ljmp
andl
stc
push
lret
push
imul
mov
jmp
lcall
xchg
in
and
mov
mov
call
push
mov
pop
mov
loope
adc
fisubs
jg
sub
test
std
xchg
test
leave
mov
les
or
xchg
dec
stos
push
jnp
mov
or
sbb
nop
sub
rcrl
pop
jle
mov
jmp
mov
test
pop
shrb
xchg
leave
fidivs
sub
cmp
ficompl
stc
jge
push
gs
xchg
imul
lcall
mov
inc
adc
stos
lds
int3
mov
xor
fwait
xchg
scas
test
xor
mov
mov
fsub
or
pop
push
mov
in
xchg
arpl
push
out
fildll
scas
push
movzbl
push
dec
sbb
sub
imul
imul
pushf
andb
jns
pop
out
or
sub
cld
fbld
add
mov
xchg
push
push
shlb
mov
les
movsb
mov
das
fldl
mov
lcall
iret
lret
in
pushf
xchg
push
aas
cmpsl
and
movsb
pushf
cmp
jo
sbb
mov
dec
jmp
js
ja
pop
pushf
dec
cmp
rorl
inc
sbb
dec
xchg
out
repnz
in
xchg
cld
mov
dec
pushl
push
or
ja
push
fiaddl
pop
mov
int3
pop
ret
ljmp
xor
xor
or
and
and
lods
test
clc
and
notl
fcoms
cmp
mov
repnz
sarb
mov
les
jle
aad
lahf
dec
mov
add
push
insl
pushl
aad
mov
dec
loopne
pop
dec
imul
mov
inc
jecxz
ret
sahf
int
xchg
or
jg
fs
fisubs
jle
cli
push
mov
outsl
xchg
and
loopne
aam
lods
mov
sbb
mov
mov
insb
push
push
push
and
shll
or
clc
cmp
dec
adc
das
mov
cmp
xor
adc
adc
fldcw
outsl
shll
mov
push
dec
les
add
sub
sbb
jmp
jecxz
adc
pop
dec
xchg
add
jge
inc
shl
or
and
aaa
into
mov
mov
mov
roll
pop
je
fidivrs
pop
mov
stos
pop
mov
inc
shlb
iret
shl
add
pop
sahf
xor
xlat
jne
popf
mov
inc
mov
push
outsl
out
es
rolb
adc
repnz
jne
lcall
jo
lret
shlb
xor
nop
mov
lret
xchg
pop
xchg
mov
xchg
add
mov
mov
mov
cmp
pop
lds
insl
std
sub
add
pop
int
stc
mov
lcall
lea
cltd
cmpl
jg
arpl
mov
je
fcmovu
xor
test
sbb
xor
and
sub
adc
xlat
cmp
lret
iret
push
dec
xlat
popa
stos
xor
push
mov
xchg
pop
sti
call
shrl
push
imull
rcrl
adc
cmp
sti
sub
aam
add
jns
loop
popf
in
mov
dec
mov
sbb
das
fisubs
sub
icebp
cmpsl
sbb
mov
in
mov
outsl
mov
xchg
mov
pop
or
sbb
cld
std
std
pop
cwtl
aad
push
out
jnp
stos
sti
mov
lds
mov
insl
lret
jnp
daa
push
push
imul
push
repz
sar
push
popf
xchg
jge
cmc
fcoms
jne
sub
mov
lret
jl
xchg
std
jns
cld
mov
mov
mov
and
ja
inc
repnz
inc
mov
cs
mov
fldcw
test
mov
in
sarb
test
sub
mov
fs
dec
dec
gs
jns
xlat
adc
adc
int
and
je
rolb
mov
movsb
cmp
xchg
scas
fcmovnbe
fwait
jbe
cmp
pop
pop
mov
hlt
xchg
adc
mov
sub
ss
xchg
into
adc
aad
mov
shr
aad
mov
push
push
repz
sbb
mov
pop
ljmp
fidivrl
enter
or
mov
cmp
pop
jg
and
adc
fwait
xchg
les
jns
dec
pusha
daa
jbe
das
cmp
pop
jmp
jo
sbb
dec
push
stos
xchg
adc
adc
and
je
adc
jns
icebp
rclb
cmp
xchg
fmul
sub
movsb
fistps
xchg
cmp
subl
ret
test
jne
mov
movl
rorb
inc
sbb
mov
mov
arpl
or
adcb
add
and
sub
pop
lock
jns
or
inc
lcall
pop
ds
sub
bound
xor
push
pop
movsb
fistps
lock
sahf
add
or
repz
in
lods
and
add
dec
adc
jb
leave
call
das
sub
xchg
inc
xchg
xchg
xor
imul
push
in
xor
jecxz
lock
sub
shl
outsb
shr
sbb
jns
sub
out
sub
adc
mov
jnp
mov
in
dec
dec
ret
repz
loope
and
dec
add
sub
jno
mov
dec
dec
and
cmp
negl
jecxz
add
aaa
incl
test
mov
or
xchg
sub
insb
and
insl
je
pop
inc
adc
lock
pop
sarl
xchg
or
sbb
pop
pop
ja
jne
fsubrl
cmp
jl
into
ret
jnp
add
jae
inc
inc
pop
cmp
dec
or
scas
cli
es
rclb
jno
xchg
push
inc
push
or
jnp
pop
sti
cmp
adc
add
insb
leave
xor
dec
outsl
sub
push
ljmp
push
xorl
push
mov
adc
jae
sub
out
sbb
push
adc
adc
mov
pop
cmc
mov
out
outsl
test
mov
xor
xchg
push
dec
inc
gs
jne
daa
mov
sub
push
mov
jl
dec
mov
inc
pxor
or
in
aad
dec
and
mov
mov
stos
push
xchg
mov
popf
andb
pop
out
in
pop
cmp
in
cmpsb
sbb
ror
cmp
shl
ffree
sbb
xor
mov
dec
push
loope
outsb
xchg
ja
xor
ret
sbb
sbb
fsubs
jmp
mov
mov
push
in
hlt
jb
sbb
outsl
push
xchg
sbb
dec
dec
notb
sub
ficoms
dec
rcrb
xchg
push
in
movsb
adc
iret
xlat
adc
adc
aaa
or
mov
cmp
jp
push
push
stos
or
sbb
out
daa
dec
test
or
out
sub
addr16
jecxz
movsb
cld
push
insb
sub
push
sub
dec
lret
inc
mov
cmp
add
pop
pop
insl
mov
mov
mov
fldl
data16
jecxz
jecxz
lock
cld
ret
arpl
pushf
push
mov
dec
cmc
mov
sub
sbb
ss
cwtl
pusha
jns
pop
add
mov
dec
jb
xor
jae
sub
dec
push
lods
sti
out
or
test
bound
rcr
dec
add
jo
xchg
inc
push
sbbb
gs
les
loope
shlb
mov
pop
mov
imul
fninit
inc
inc
pop
addr16
pop
cmp
cmpsl
sarb
int3
xor
cmp
aam
and
mov
int
fstps
push
cmp
ret
sbb
push
bnd
mov
cmp
cmovbe
inc
pop
xchg
jno
sub
stos
dec
xor
lcall
and
mov
dec
jmp
stos
in
cwtl
mov
sub
leave
jae
sbb
int3
sbb
into
ja
out
xchg
pop
add
jae,pn
or
shlb
out
mov
ss
nop
lds
adc
pop
mov
jmp
lret
pop
cmc
lods
les
or
push
pushf
jp
mov
aaa
mov
cwtl
movb
jne
or
mov
and
repz
gs
sub
mov
jg
cmp
outsb
mov
fmuls
cmp
icebp
loope
ret
enter
shrl
aam
mov
arpl
inc
push
pop
enter
xchg
dec
int
repnz
sub
cmpsl
arpl
cli
test
shlb
pusha
insl
mov
insl
mov
stc
xor
jnp
mov
adc
mov
push
mov
mov
andb
test
enter
push
mov
sbb
cs
aas
jns
aas
mov
lret
scas
xor
jno
and
nop
fxtract
sbbb
dec
xchg
jnp
and
icebp
call
xchg
sbb
ret
enter
and
in
push
push
cld
or
cmp
fisubs
dec
jge
mov
adc
cli
dec
aas
stos
sbb
out
xchg
lods
aam
popf
jae
push
cs
adc
movsb
mov
dec
adc
daa
xlat
mov
pop
fldt
das
mov
scas
and
in
sub
xor
sub
jbe
or
mov
adc
mulb
mov
jbe
cmp
or
fists
jecxz
and
adc
test
add
jp
test
mov
pop
cld
dec
iret
mov
and
das
add
addl
add
stc
out
pop
mov
and
pop
cmpsl
push
popa
test
bound
mov
fnsave
mov
pop
dec
pop
xchg
fadds
jecxz
xchg
cmp
pop
pop
or
mov
cltd
je
sbb
cld
dec
cmp
mov
mov
and
call
push
div
test
ret
rorb
push
mov
scas
jge
loop
inc
pop
inc
mov
dec
mov
inc
mov
mov
lahf
jmp
cmp
push
pop
adc
jp
xchg
add
outsl
fistpl
in
mov
jmp
hlt
and
xor
cltd
ljmp
int3
je
setle
je
testb
mov
sub
sub
jno
int
pop
jnp
sbb
not
inc
dec
dec
cmpb
loop
xchg
out
stos
mov
mov
dec
jl
clc
push
inc
sti
pop
dec
xchg
shr
rolb
fisubrs
or
mov
std
push
fsts
ja
sbb
test
fdivrl
loope
fmul
and
cmc
fidivrs
stc
cmc
xchg
push
mov
outsb
mov
lahf
aad
or
cli
icebp
fwait
xchg
lds
lret
xchg
lds
or
xchg
mov
mov
int
cwtl
call
dec
and
adc
push
icebp
stc
gs
inc
push
sbb
inc
leave
lcall
cmp
add
fwait
mov
sbb
mov
pop
insl
or
dec
sbb
fwait
jbe
add
loopne
or
test
dec
dec
jp
je
push
xchg
fstpt
add
push
jp
test
mov
lret
mov
inc
pop
mov
in
enter
in
push
adc
push
add
stc
xlat
ds
push
xor
je
dec
out
dec
hlt
mov
outsb
pop
scas
gs
mov
sbb
cmp
lods
insl
cmc
int3
enter
stos
into
dec
cli
movsb
icebp
push
hlt
arpl
lods
push
xor
add
popa
in
fisttps
mov
push
leave
xor
daa
xchg
cli
test
adc
pop
ljmp
mov
cmp
decb
movsb
into
xchg
pop
xchg
fidivl
cltd
repnz
push
jbe
pop
inc
or
mov
int3
mov
in
cmpsb
add
pushf
sub
or
and
dec
jmp
and
in
iret
ja
jecxz
addb
adc
repz
out
out
cmp
dec
mov
jno
rolb
ja
xchg
pop
pop
dec
mov
mov
aas
or
xchg
jo
in
mov
push
jle
dec
inc
out
adcb
jmp
mov
xor
pop
lahf
clc
shl
jg
or
imul
inc
pop
orl
sub
jge
push
shlb
outsl
ds
push
and
mov
js
mov
stc
dec
pop
dec
repz
xchg
icebp
push
enter
cmp
add
ret
sbb
mov
and
ljmp
mov
xor
pushf
stc
cmc
icebp
sbb
ja
mov
lds
dec
lahf
sub
lods
testb
lcall
sbb
aas
push
nop
xlat
lock
hlt
movsl
outsb
sahf
les
daa
push
ljmp
dec
or
or
movsl
mov
cmpsl
dec
push
testl
stc
push
jle
int
adc
inc
outsl
jg
push
call
push
fxam
adc
mov
pushf
out
decb
pop
ror
push
mov
or
repz
insl
and
and
push
leave
rcrl
ficoms
xor
fmuls
adc
xchg
divl
pop
nop
or
sub
pop
roll
cmpsb
pop
adc
addl
loopne
cmp
or
mov
in
sub
pusha
hlt
pop
pop
add
push
fs
mov
push
xorl
aam
xor
adc
shl
dec
mov
mov
xchg
pop
jne
gs
out
xlat
pusha
aaa
test
in
pop
pusha
or
mov
jg
fiadds
sbb
jle
and
xchg
xchg
push
stos
lcall
push
adc
pop
fs
push
xchg
mov
push
repz
mov
lea
xor
push
and
jge
sub
ret
loop
add
popf
int3
jle
sub
xlat
pop
and
stos
test
popa
aas
stos
insl
out
stos
cmp
xor
test
push
mov
popf
arpl
mov
mov
and
mov
in
and
ret
fnsave
outsb
push
sub
jb
insl
lret
pusha
dec
sti
les
add
jle
popa
sub
or
push
insb
mov
inc
cltd
mov
jmp
jp
es
mov
dec
xor
in
pop
into
iret
test
aaa
idivb
cmp
and
aas
mov
sar
fstpt
nop
cmp
fistl
loop
decl
mov
loope
sbb
sbb
out
icebp
dec
and
mov
mov
lcall
or
jmp
cmp
std
fstpl
repz
push
xor
ja
test
pop
in
pop
sub
push
imul
pop
daa
aam
les
add
xor
jle
xor
inc
sbb
or
pushf
or
shll
fdiv
inc
push
xor
and
dec
or
xchg
mov
jbe
out
sub
popa
loopne
js
test
leave
movhlps
mov
dec
jae
movsb
lahf
inc
ret
sbb
aas
jnp
mov
les
adc
hlt
repnz
push
adc
stc
cmc
jnp
test
inc
jg
sub
dec
aad
xchg
pushf
jbe
pop
loopne
xor
stc
test
mov
dec
mov
inc
stos
cmp
adc
cltd
or
and
in
stos
pop
sub
pop
cld
dec
popa
sub
inc
xor
aaa
or
xchg
in
aad
popf
sub
rclb
jbe
mov
call
lock
lods
aaa
sub
push
adc
push
sbb
sbb
lods
lret
mov
mov
jl
sub
sbb
pop
mov
dec
in
mov
cmp
cld
sbb
sbb
fcompl
loope
daa
call
aam
testl
jnp
scas
inc
fiadds
outsb
jle
push
sub
int3
dec
jmp
jmp
fcoms
addl
out
xchg
or
jns
scas
pop
cmpsl
test
jle
sti
rorb
cmp
add
xchg
dec
ret
mov
adc
jge
leave
ret
or
sub
in
xchg
mov
dec
xchg
icebp
pop
cmp
add
idivb
xorb
xchg
ss
ret
ret
jns
out
or
push
cltd
arpl
push
jmp
repz
push
lock
jl
push
test
and
rolb
and
fmuls
inc
cmc
push
or
sbb
shrl
insb
jg
or
into
sahf
push
into
aas
stc
popf
pop
in
arpl
stos
add
jae
mov
inc
outsb
mov
push
and
mov
ret
adc
xor
arpl
adc
inc
scas
ds
dec
or
push
xchg
mov
xchg
sbb
adc
cmp
aam
mov
fcmovnu
sarl
idiv
and
adcb
jbe
and
es
xchg
push
add
cmc
fs
ds
in
aas
bound
jecxz
cld
sbb
hlt
xor
cmp
insb
negb
dec
out
mov
in
adc
mov
mov
sbb
lret
pop
iret
and
cmp
push
arpl
dec
enter
lret
std
fnsave
nop
pusha
iret
imulb
and
out
test
out
mov
xor
sbb
dec
or
mov
adc
mov
lock
daa
sub
push
adc
jbe
imulb
mov
push
in
and
cmp
sbb
mov
mov
mov
lret
pop
add
andb
jmp
cmpsb
in
mov
cmp
mov
cmp
mov
icebp
ds
cmp
fisttpll
and
in
lock
imul
mov
iret
mov
push
pop
iret
iret
mov
add
pop
enter
sbb
xchg
push
xor
and
push
aaa
push
ljmp
loop
fmul
stos
insb
mov
insb
insb
gs
gs
xor
pop
lods
sbb
ret
fldcw
sub
dec
adc
adc
clc
out
aaa
lret
cli
daa
fadds
cmpsb
mov
ljmp
shlb
dec
dec
xchg
add
pop
movsl
and
sbb
insl
mov
inc
out
xor
shr
movsl
sub
xchg
lea
mov
jne
fcmovnu
jno
fs
je
int3
cltd
push
cmc
fst
mov
mov
xchg
aad
arpl
cmp
punpcklbw
mov
push
xor
in
pop
cmc
cwtl
add
xor
ret
outsb
pop
xchg
sub
jb
jae
push
jo
movsl
add
mov
sub
popf
outsb
fndisi(8087
dec
in
lods
adc
mov
out
cmpl
out
mov
pop
inc
ret
jl
and
xchg
fnstsw
push
push
push
and
and
clc
mov
push
xor
out
loopne
pop
call
fcomps
es
aam
lret
scas
cli
out
push
push
call
in
fwait
out
xorb
mov
cwtl
xchg
push
xchg
inc
mov
cld
xchg
adcb
in
jge
orl
push
daa
lret
cmp
mov
jl
adc
sbb
mov
xchg
push
enter
mov
movsb
pop
mov
repz
movsl
or
les
pop
mov
cs
fcoms
outsb
sarl
inc
xchg
popa
lea
jnp
std
adc
inc
roll
xor
sub
lret
inc
jl
adc
pop
scas
test
or
das
orb
pusha
loopne
pop
pop
fmull
dec
insl
jecxz
pushf
sti
mov
popf
mov
out
jne
sub
add
add
cmp
lahf
out
mov
mov
movsl
adc
cmp
fwait
lret
push
cld
test
loopne
cmp
xchg
scas
lds
cmp
pushf
jg
in
out
jae
or
and
mov
xor
push
push
jl
dec
mov
push
sbb
push
fnstcw
imul
inc
jge
loopne
cmp
push
sarl
inc
out
shr
loope
jns
lahf
outsb
addb
shrb
dec
out
jl
mov
stos
mov
jmp
aam
loope
dec
mov
jb
fbstp
jbe
xchg
sbb
and
cld
push
jno
cmc
cmp
sti
sbb
subl
stos
mov
imul
stos
dec
jp
mov
xchg
sbb
push
fidivrl
adc
jge
mov
testb
int3
ret
sbb
sbb
aam
test
fldl
mov
xchg
cmp
pop
sbb
push
lret
add
in
lcall
insl
js
les
add
or
lahf
test
insb
sarl
pop
inc
out
sbb
mov
jns
arpl
scas
ja
clc
cmpb
arpl
lret
dec
pop
xor
fwait
std
orb
sar
mov
fisttpl
in
mov
enter
sbb
mov
jbe
sbb
nop
add
push
pop
jnp
js
cli
movsl
pushf
stos
inc
push
jg
inc
mov
mov
in
orl
jg
inc
loopne
jne
jbe
insb
jno
inc
or
push
pop
scas
cmp
push
lock
cs
inc
mov
clc
mov
xor
cltd
inc
sbb
jns
cmpsb
aad
cmp
pop
lea
out
xor
add
iret
popa
faddl
iret
dec
fwait
mov
dec
dec
push
dec
sbb
enter
and
in
dec
adc
xor
dec
aas
mov
fs
xchg
inc
aaa
xor
jb
orb
push
repnz
js
jecxz
or
pop
sbb
aas
mov
cmp
movsl
sbb
adc
push
repnz
sbb
sahf
mov
add
xchg
mov
push
sub
subb
lods
push
dec
lds
aad
stos
jl
insb
mov
je
js
das
cmp
mov
fmuls
daa
mov
push
cltd
sbb
insb
fsubrs
xor
adc
sbb
sbb
xchg
inc
aas
fbld
xchg
xor
push
sbb
jne
test
hlt
mov
xchg
inc
mov
and
add
pop
mov
lods
ret
flds
decl
or
js
xor
pcmpeqb
pop
mov
mov
pop
jl
push
or
cmp
cltd
repnz
push
imul
sub
test
mov
ljmp
fucomp
aas
cmp
xchg
mov
subl
cmpsb
cmp
add
cli
push
and
loopne
in
ror
es
jl
bound
jp
divl
ja
xchg
adc
lock
ljmp
adc
roll
jne
movsb
adc
dec
mov
scas
add
adc
inc
xlat
dec
ret
adc
fistl
sub
xchg
sub
ret
aas
cli
inc
ret
clc
pop
mov
ret
pop
pushf
lods
icebp
xor
fsub
ja
sbbl
aam
sub
push
xor
pop
xor
or
insb
xor
inc
jbe
addr16
jnp
jg
add
lahf
add
movb
repnz
mov
js
mov
sub
enter
ljmp
xchg
or
gs
outsb
push
shlb
mov
or
stc
insl
in
call
cli
pop
sbb
or
inc
gs
push
dec
sbb
cmp
add
fxch
test
adc
mov
arpl
jno
movsl
sub
jbe
push
fldenv
push
pop
jns
das
call
das
lahf
int
sahf
rcrb
xchg
push
xchg
loopne
ja
mov
fs
jmp
pushl
add
add
in
cmpsl
rolb
and
mov
les
sub
fstpl
bound
insb
hlt
pop
notl
int3
sti
cmp
pop
lods
std
jmp
orb
mov
adcb
push
icebp
addr16
pop
cltd
mov
mov
inc
pop
add
mov
scas
fs
push
fistpl
mov
imul
pop
out
imul
push
out
ror
inc
add
jo
js
add
xor
jns
inc
inc
insb
test
mov
sbb
jmp
loopne
aaa
or
jecxz
fchs
mov
sub
mov
xor
test
jl
iret
push
pop
sbb
daa
adc
dec
sbb
sahf
and
add
hlt
movsl
ss
adc
lods
stos
scas
dec
jo
jl
ds
popa
arpl
and
rclb
fsts
ret
mov
das
add
sub
idivl
pop
or
push
repnz
add
push
cld
or
mulb
ss
cli
mov
addr16
push
mov
movsl
dec
mov
cmc
ret
jle
mov
cmp
ss
lcall
jmp
jmp
jl
adc
inc
cmp
inc
mov
pop
lods
outsl
mov
xchg
std
xchg
add
dec
xor
inc
pop
jne
sub
jge
leave
lock
int3
cmp
and
xchg
hlt
push
in
inc
xchg
jo
aam
adc
ljmp
leave
dec
stc
xchg
out
sub
xchg
mov
sbb
loope
xchg
outsl
xchg
push
pop
ret
inc
or
jnp
std
xor
sbb
mov
dec
or
les
movsl
xor
mov
sbb
call
enter
push
jle
xlat
sub
bound
outsb
cmp
pop
push
testl
outsb
out
mov
adc
xchg
testl
int
pop
lods
sarl
jg
mov
fistpl
adc
mov
and
push
fstpl
xchg
lock
adc
cld
shl
jne
sti
mov
dec
jb
cmp
lds
inc
test
dec
shrb
push
push
addr16
xorl
dec
mov
lods
fsubl
mov
push
loope
int
fwait
loopne
pop
push
gs
mov
push
out
mov
sub
dec
or
add
insl
fadds
dec
in
aam
inc
mov
clc
movsb
mov
inc
jae
mov
xchg
jne
mov
sbb
and
push
cmpsb
in
push
push
inc
and
andb
out
sbb
dec
sbb
add
insl
and
pop
std
mov
jmp
mov
add
xor
sbb
or
cmpsl
mov
or
rolb
push
enter
daa
add
int3
cmpsl
inc
inc
mov
test
jo
punpcklbw
pusha
clc
in
push
push
mov
ja
mov
xor
daa
sbb
dec
push
cmp
cmp
out
ds
push
push
mov
or
add
dec
lods
jb
or
arpl
mov
adc
push
push
xorb
add
cmp
mov
jb
fdivs
clc
hlt
and
xchg
js
mov
and
fisubs
lret
loopne
ret
int
dec
push
fstps
cli
jmp
es
mov
fistl
les
dec
sbb
xchg
push
outsb
jmp
inc
adc
in
cwtl
mov
xchg
out
sti
repnz
orb
dec
fnstcw
mov
xlat
stos
xchg
xlat
mov
repz
mov
std
popa
js
std
dec
xor
sub
rcrb
cli
mov
inc
rcr
std
movsl
pusha
call
sbb
jecxz
outsl
inc
xor
lods
inc
push
xlat
pop
in
out
in
repnz
faddl
lahf
xchg
xchg
adc
and
popa
fiadds
inc
cmp
push
jne
cmpsb
and
mov
pop
pop
mov
sbb
pusha
int3
and
das
xchg
sub
xor
rorl
nop
dec
or
xor
or
jmp
sub
lock
in
jbe
or
imulb
and
andb
lods
push
pop
and
sub
push
add
push
ljmp
imul
rclb
mov
inc
mov
xor
sbb
xchg
jg
add
xchg
int
add
pop
mov
push
and
test
and
cwtl
test
std
int3
aam
mov
xor
hlt
xor
sbb
scas
cmp
pop
cmpsl
lahf
test
shl
or
fcoml
pusha
push
imul
in
xor
pusha
inc
jmp
add
mov
cmc
dec
stos
sub
loope
insb
pop
cmc
xor
jo
sbb
adc
mov
cmpsb
or
jmp
test
ret
lcall
or
or
iret
imul
sub
mov
sbb
or
jmp
cmp
and
lock
out
pop
fcmove
ret
adc
sbb
arpl
add
jg
outsl
fstp
test
xchg
add
push
daa
rcl
call
xor
fwait
and
dec
xchg
nop
sti
ss
mov
sub
cli
push
nop
add
je
loope
lret
in
ret
pushf
xor
out
xchg
mov
popa
push
jae
outsb
xchg
fimuls
xchg
mov
movsl
ja
cmp
jae
addr16
repnz
cmp
lret
pushl
push
sbb
sbb
ret
mov
jno
adc
push
and
mov
sbb
daa
int3
xchg
push
xor
pusha
and
mov
inc
icebp
pop
mov
pop
and
add
push
mov
pop
sbb
add
in
cli
lahf
sti
xlat
out
inc
mov
lret
add
xchg
mov
mov
or
loope
pop
fidivl
das
inc
pop
pop
dec
mov
ret
xchg
frstor
jo
mov
xor
es
push
arpl
sbb
nop
in
push
and
mov
sub
lcall
and
fs
shlb
cmp
mov
or
or
stos
mov
ss
or
jp
sbb
fmull
xlat
arpl
push
cltd
pop
mov
aaa
int3
out
cld
push
movsl
pop
sti
xchg
sbb
cmp
push
in
or
dec
xor
xor
jns
push
pop
outsl
test
jg
enter
in
outsb
hlt
push
in
cmp
in
fsts
out
pop
cmpb
imul
sti
mov
jb
shll
out
mov
mov
sbb
pop
push
jmp
data16
pop
jbe
pop
shll
mov
loopne
push
in
xchg
inc
loopne
cmp
mov
stos
mov
push
inc
int3
sbb
arpl
out
mov
int3
and
lock
push
adc
sti
jge
in
and
int3
lea
lock
lea
arpl
pop
divl
xorl
mov
xchg
bound
and
repz
scas
lea
enter
mov
shrb
jp
cltd
cmp
xorb
jp
enter
test
inc
icebp
out
sub
stos
cmpsl
fwait
ljmp
xchg
nop
pop
push
jo
xchg
add
jge
xor
lahf
sub
mov
add
cmc
jae
aad
sti
iret
lods
mov
hlt
leave
cmpsb
imul
adc
add
xor
push
ffreep
cmp
jmp
xchg
repz
xchg
xchg
mov
call
add
aam
xchg
push
outsl
rcrl
das
xlat
jmp
into
lcall
test
cmp
in
jbe
aas
aad
sbbl
imul
add
mov
and
fwait
arpl
gs
iret
mov
popf
adc
push
push
fcmovnb
push
or
mov
aam
push
push
sbb
call
ret
shl
pop
xor
in
inc
mov
mov
dec
jns
push
jnp
jnp
bound
jne
add
pop
add
adc
orl
xor
scas
jno
bound
mov
jle
inc
call
mov
jae
sub
inc
js
out
and
push
sub
out
call
and
jmp
inc
mov
out
sub
movsl
fnsave
push
mov
jge
leave
pusha
fidivl
xchg
fwait
and
movsb
xchg
mov
and
out
pop
cmp
jae
outsl
and
push
and
sbb
xchg
mov
lods
adc
dec
add
fidivrs
lcall
fidivrl
push
inc
push
sbb
and
loope
mov
outsb
lret
sar
push
cld
dec
ret
cwtl
jecxz
sub
mov
pop
jbe
lds
adc
fmuls
mov
dec
outsb
push
xor
mov
pop
push
jb
out
testb
jecxz
aam
inc
lret
mov
push
mov
mov
pushf
nop
shll
inc
xor
shl
loope
out
cmp
lock
test
or
jne
cmpsl
imul
jns
mov
pop
fcomip
sbb
popa
ret
iret
pop
sub
mov
mov
sub
stos
movsb
out
jmp
adc
adc
sbb
or
add
sbb
pop
arpl
test
inc
ficoml
in
pop
lret
sbb
sti
jne
sbb
lock
sbb
ds
or
cld
xor
jno
jo
pop
jo
pop
cwtl
push
sarl
pop
int3
shlb
mov
test
and
pop
inc
ficoml
jo
push
xor
mov
sbb
xchg
cli
pop
jg
cwtl
arpl
pushf
jns
jbe
cmc
mov
lods
push
pop
stos
xchg
das
aad
or
xchg
movsl
mov
int
xchg
push
sbb
sti
sub
adc
add
out
xor
fwait
cmp
push
je
adcb
inc
push
out
sbb
fwait
roll
cmp
imul
sbb
mov
sbb
cmp
or
mov
inc
scas
iret
add
std
mov
add
enter
fcompl
add
pop
push
dec
addr16
mov
jg
fxch
aam
and
rcl
neg
movsl
lock
push
into
into
and
cs
sub
icebp
pop
cmp
inc
dec
jecxz
lea
pop
push
xor
rcll
mov
inc
mov
dec
xchg
lret
cmp
loopne
mov
pop
inc
shll
mov
jo
mov
fwait
lds
daa
push
sub
or
loope
shrl
pop
rcrb
lcall
or
ljmp
cmp
lods
lock
ja
jns
adc
mov
sbb
sbb
fcoml
pop
lods
cld
cmp
add
mov
push
test
inc
push
movsl
adc
mov
outsl
mov
cmc
xor
bound
inc
lret
lock
lods
cmp
or
inc
jp
rcrb
cwtl
and
test
dec
xor
jno
jno
add
pop
lods
pop
ljmp
jmp
ret
loope
fld
mov
push
enter
add
xchg
sub
cld
jno
enter
cmp
ret
das
sti
stos
jl
cmpsl
mov
cmpsl
pop
lea
popa
dec
lods
sbb
push
mov
pop
lcall
fcmovu
jecxz
cld
xlat
mov
cmp
stos
xchg
adc
or
or
cmp
clc
push
insl
mov
pop
adc
mov
xchg
mov
leave
and
push
cwtl
out
out
dec
lods
sbb
iret
mov
fcoml
mov
sarb
push
iret
dec
jmp
mov
push
sub
push
stc
or
js
xchg
mov
push
xchg
push
pop
dec
push
test
clc
aas
lea
push
or
arpl
out
xchg
in
imul
call
add
dec
cmc
sub
adcb
inc
popa
out
adc
pop
out
loope
push
ja
and
ja
xor
std
mov
mov
mov
xchg
mov
es
jbe
repnz
push
dec
mov
jecxz
xchg
shlb
cli
data16
dec
adc
cmp
pop
shll
dec
xor
jno
loope
mov
addr16
push
in
imul
adc
cld
imul
or
fs
ljmp
cmp
out
or
add
adc
dec
jecxz
inc
and
sub
loop
pusha
xor
or
mov
lods
dec
xor
enter
and
ffreep
xchg
stos
sub
int
add
js
push
mov
pop
clc
insl
repnz
lret
and
mov
xor
push
insl
sbb
cmp
dec
cltd
pop
imul
addl
clc
add
in
std
mov
sbb
out
hlt
pop
inc
inc
jae
adc
shlb
pop
push
dec
and
rolb
imull
inc
clc
out
call
jbe
dec
xlat
jp
fcomps
sub
dec
out
mov
adc
pop
inc
push
lea
push
inc
add
into
mov
adc
pop
xor
mov
sbb
lea
mov
or
xchg
cmp
pop
mov
or
mov
loop
push
movsl
daa
inc
iret
ja
test
inc
cmp
add
popf
mov
jbe
jp
xchg
jle
les
add
and
imul
sbb
int3
pop
lahf
outsb
into
adc
mov
movsl
shl
dec
movsl
mov
loop
arpl
mov
mov
pushf
pop
nop
leave
pusha
repz
shrb
mov
sub
inc
movsb
int3
dec
in
fwait
fwait
mov
das
jno
dec
loope
mov
call
cmc
mov
xor
or
pop
in
in
mov
sub
sarl
clc
sti
sub
ret
add
inc
loop
les
adc
das
cmp
and
bound
scas
and
mov
decl
adc
cmpsb
mov
lahf
jmp
inc
lods
jnp
xor
cmpsl
das
mov
mov
fisubrl
push
jge
jmp
aaa
gs
sub
js
lahf
mov
xchg
or
aas
and
into
out
xor
scas
scas
add
fnstsw
test
add
push
xchg
int3
cs
popf
popa
imul
ja
iret
dec
fsave
xchg
dec
pop
mov
mov
scas
sbb
cs
cmpsb
call
hlt
loopne
or
push
xor
loopne
jo
jae
dec
outsb
clc
clc
or
dec
cmp
and
inc
fwait
dec
cmp
add
mov
rclb
imul
test
mov
dec
repz
mov
outsb
xchg
pop
scas
ljmp
inc
cmpl
fwait
insb
push
dec
out
test
dec
popf
gs
xor
mov
arpl
pop
nop
pop
mov
dec
inc
push
mov
loopne
or
sub
data16
ja
cmpsb
inc
mov
sbb
jns
in
int3
bnd
sub
cmpsl
sarb
push
filds
sub
push
pusha
xlat
jae
mov
pop
sbb
lods
cmp
ret
stos
outsl
inc
fs
rcrb
adc
adc
xchg
out
mov
cmp
out
xlat
mov
imul
push
imul
lret
cmp
ret
jo
cmc
push
pushf
js
mov
js
push
jge
xchg
dec
aas
xor
and
cmovo
das
sub
push
je
sbb
ret
cmp
jge
jl
cmp
stc
push
lahf
xchg
int3
or
pop
xchg
jecxz
insl
push
push
enter
data16
dec
leave
mov
jge
inc
sub
push
xchg
push
ret
push
push
mov
jo
daa
and
fstl
xchg
stos
mov
push
push
call
dec
cld
mov
iret
das
aad
jp
sub
std
dec
into
cli
aas
repnz
pusha
sahf
sub
push
pop
sub
mov
out
sbb
fs
dec
or
das
jno
xchg
movsb
push
fadds
pop
in
mov
adc
ds
das
and
pusha
imul
jbe
jge
test
idivb
pushf
jae
mov
stos
test
mov
or
push
pop
popl
mov
ret
gs
dec
lods
in
push
rcll
mov
out
add
mov
push
fstl
je
push
sbb
insl
mov
mov
xchg
gs
test
jae
and
outsb
fnstcw
xchg
rcrb
mov
int
push
outsl
pop
js
sub
mov
and
fisubs
sbb
add
push
ss
test
inc
ret
sub
lds
jbe,pt
mov
lock
repz
push
lret
mov
cmpsb
mov
push
fiadds
mov
jb
cli
negl
xchg
add
imul
pop
data16
repnz
fimull
mov
jp
mov
or
xor
gs
jnp
fdiv
or
xor
xor
and
add
and
jnp
in
ja
popa
push
xchg
jne
movsb
and
push
out
dec
mov
xchg
push
dec
jns
sub
push
ret
add
inc
arpl
dec
outsl
jno
cmc
loop
stos
push
xchg
movsb
pop
js
push
cmp
mov
or
push
cmp
popf
lahf
dec
movsb
sub
lds
mov
and
outsl
pop
test
dec
or
lahf
loope
cmpb
in
pop
pop
or
cli
mov
fcoms
loopne
and
jecxz
adc
movsb
pop
stc
stc
add
pop
xor
inc
xor
dec
mov
aaa
movsb
fwait
xor
push
pop
lds
icebp
incb
fadds
mov
lcall
and
mov
mov
aad
adc
pusha
xchg
lock
dec
pop
shl
out
and
iret
rclb
aam
push
je
jl
cmc
hlt
sub
gs
adc
dec
and
add
xlat
pop
jecxz
lock
mov
jp
adc
jae
jnp
cli
les
dec
test
mov
inc
sbb
xlat
jo
push
cmpsl
inc
pop
fadd
cltd
pusha
add
push
push
mov
jbe
jecxz
call
daa
loopne
mov
inc
mov
addr16
arpl
pushf
in
subl
loope
push
lods
lods
cmp
popf
xor
scas
xchg
xchg
js
lock
ss
xlat
cmpsl
cmp
out
mov
pop
arpl
aas
add
repz
leave
fcompl
das
mov
sarb
pop
dec
mov
std
lret
ljmp
mov
in
loop
fimull
ret
in
fimuls
sbb
dec
in
mov
rclb
rolb
shll
sub
jnp
movsl
es
push
cltd
jbe
jnp
lea
pushf
out
adcb
sbb
outsl
or
jno
jecxz
cmp
hlt
dec
mov
push
xchg
add
sub
or
jns
pop
data16
out
call
icebp
mov
test
mov
lods
add
add
or
lods
fdivs
cmpb
sbb
sub
and
or
mov
mov
xchg
dec
push
sub
inc
sbb
push
inc
ss
mov
lcall
or
xchg
xchg
push
in
jno
cld
iret
mov
dec
xchg
pop
faddl
cwtl
arpl
dec
cmc
gs
mov
adc
es
out
loop
mov
adc
mov
mov
movsb
mov
or
das
push
inc
adc
add
inc
jmp
lods
pop
fmull
xchg
dec
cmp
push
leavew
pop
mov
jp
enter
xchg
jnp
int
in
cmc
nop
mov
in
sar
les
lds
mov
fsubrl
sub
pusha
adc
rcrb
lea
mov
pop
test
mov
out
xor
sbb
movsl
lods
sbb
xor
sarl
jbe
scas
sbb
inc
into
push
popf
mov
mov
outsb
add
cmpsl
adc
mov
scas
aaa
push
rolb
shl
ja
push
mov
and
add
mov
ljmp
xchg
test
dec
testl
leave
sub
and
sbb
pop
enter
frstor
je
outsl
add
mov
xor
test
xchg
fists
add
test
jae
inc
jbe
test
jp
inc
push
sbb
mov
xor
outsl
mov
push
movsl
and
rcrb
icebp
and
or
mov
or
push
xchg
scas
jge
cmp
jae
adc
adc
sub
xor
lahf
lods
adc
push
repnz
cmp
arpl
cmp
xchg
out
cli
mov
xor
add
pop
push
push
xor
adc
repnz
movsb
cmpsl
mov
mov
inc
and
popf
jle
decl
and
ret
mov
mov
or
sbb
cmpsb
and
pop
cli
jl
sub
ffree
iret
out
cwtl
mov
jb
sti
loopne
or
es
push
ffree
sbbb
ret
pop
mov
rorl
cmp
sub
lods
sbb
js
fstpt
cwtl
mov
push
pop
incl
fs
jns
stc
mov
movsb
je
mov
insl
mov
insb
daa
pop
or
cld
idivb
add
cmc
and
push
je
sbb
sbb
das
je
dec
or
idiv
inc
adc
sub
jnp
test
stos
daa
ljmp
aam
jle
out
lret
setp
cmpsl
add
je
dec
nop
dec
pusha
mov
lcall
les
sub
xor
cmp
xchg
inc
bound
and
lret
into
pop
lock
pop
jae
fndisi(8087
push
add
and
int
inc
mov
in
mov
dec
push
ds
mov
imul
mov
js
icebp
sbbb
sub
aam
pop
ret
int
inc
out
mov
mov
adc
ss
jmp
nop
dec
lret
or
inc
test
out
xor
outsb
fsubr
sbb
jp
dec
cmpsl
mov
in
sbb
stos
cmpsb
push
jbe
movsl
sbb
fnsave
xlat
mov
cmp
jle
test
or
cmp
mov
pop
cs
push
sahf
lret
cli
shld
add
sub
dec
xor
sbb
cltd
jno
cmp
sbbb
loopne
dec
or
xchg
cmp
test
bnd
mov
aaa
arpl
jnp
inc
xor
dec
mov
ret
or
cmp
xchg
aad
imul
mov
mov
test
scas
mov
out
decb
int
cmc
and
shrb
xchg
mov
andb
mov
pop
stos
insl
xor
sbb
mov
sub
pop
dec
mov
push
mov
dec
adc
mov
jbe
add
enter
mov
or
push
sub
insl
pop
movl
fsubrl
jbe
scas
es
loopne
add
push
iret
jmp
sbb
rorl
imul
lea
sub
adc
jmp
loop
movsl
pop
dec
pop
adc
fnstenv
pop
and
daa
cld
les
pop
and
xor
inc
frstor
adc
std
scas
lcall
mov
bound
imul
cmpsl
fcomip
dec
adc
ljmp
and
mov
ss
leavew
incb
push
push
pop
adc
addr16
jne
pop
ret
hlt
adc
push
jle
pop
dec
or
mov
dec
cmp
add
push
cltd
hlt
mov
pop
mov
nop
les
inc
mov
shrl
push
stos
xchg
push
cmc
test
jecxz
mov
lds
stos
in
xor
in
test
dec
test
dec
mov
std
mov
sbb
push
mov
mov
or
ficoml
rorb
movsl
jge
push
movsl
push
mov
testb
xchg
iret
xor
cmpsl
addb
jp
sub
cwtl
jns
mov
jge
mul
ja
xchg
mov
ja
ja
movsb
sbb
dec
rol
mov
or
dec
lods
call
mov
popf
or
sub
test
test
inc
jne
sar
cld
popf
xor
into
mov
sbb
cmp
rol
in
xchg
outsb
leave
mov
cmp
dec
sbb
xchg
incl
pop
pop
hlt
out
xor
insl
je
jns
cmp
mov
fdivl
xor
shrb
inc
je
jns
addr16
sbb
adc
sbb
jge
cmpsl
aam
xchg
les
push
stc
and
scas
cld
and
out
enter
xchg
aam
mov
mov
loopne
popf
das
enter
inc
mov
push
call
xchg
stos
cmc
adcl
in
jle
test
in
stc
cmp
les
rcrl
adc
add
xor
inc
xor
add
and
sub
adc
lock
andl
shlb
arpl
pop
pop
movsl
jg
xor
sub
pop
add
cmp
sti
sarl
ljmp
scas
cmpsl
call
sbb
xchg
cwtl
daa
mov
xor
popa
pushf
push
loopne
lock
aad
inc
mov
sahf
aad
test
lahf
out
and
mov
dec
cmp
pop
cmpsb
jge
cwtl
aam
push
insb
add
dec
insb
pop
pop
cltd
sbb
loop
mov
cmp
jo
ret
xchg
addr16
xchg
fbld
int3
push
adc
test
jno
or
cmp
shll
add
js
inc
xor
xchg
inc
jae
fsubr
jg
imul
lret
inc
dec
enter
test
sahf
adc
in
add
scas
stc
fdivrl
cmp
lods
sub
mov
test
cmc
mov
aaa
loopne
push
or
pop
inc
popf
pop
mov
xchg
xchg
rcll
repnz
fidivl
lods
lods
roll
push
xchg
ja
cmp
xor
inc
fucomi
andl
fdivrp
mov
mov
sbb
pop
iret
cmpsb
rcrl
mov
xchg
jo
jb
sbb
xchg
testb
dec
jno
sbb
mov
adc
outsl
rcrb
mov
call
push
jne
and
xor
into
cmp
mov
aam
and
pop
decb
and
inc
lods
mov
and
stc
inc
mov
sub
add
aam
pop
cmp
bound
push
inc
aam
gs
inc
insl
mov
add
push
push
add
fidivrl
push
mov
pop
gs
xorl
mov
insb
and
nop
or
in
les
rclb
adc
sahf
jns
and
add
stos
xor
imul
cs
mov
aad
outsl
push
push
cmp
mov
jge
sbb
cmc
and
test
js
call
sub
fdivl
out
mov
rorb
rcll
sbb
ss
fs
das
gs
lcall
xchg
and
jbe,pn
fwait
lret
mov
outsb
jb
xchg
add
jecxz
xchg
stc
and
aas
or
pop
ret
lret
xor
das
repnz
mov
mov
insb
cmp
dec
les
cmp
mov
test
and
xor
int
nop
mov
jecxz
mov
sub
filds
pop
jae
push
pop
xor
adc
fdivrl
pop
imul
or
or
das
sub
mov
insl
and
arpl
cmpb
pop
jecxz
xchg
mov
jbe
push
push
xchg
push
fdivr
lds
out
in
xor
push
fidivrl
pusha
lods
jae
addr16
jg
and
sbb
lea
les
popf
rcr
adc
jae,pt
fistpll
test
dec
pusha
out
idivl
pop
cmc
jl
sub
repnz
loopne
cmp
das
inc
aad
push
stos
das
divl
mov
jp
and
scas
xchg
outsl
testb
xor
jns
pushf
mov
mov
pop
cmp
in
dec
or
addr16
scas
sbb
adc
inc
add
fucomi
xchg
test
and
mov
dec
dec
push
add
sbbl
lock
filds
mov
rorl
mov
inc
test
dec
pop
push
sub
lcall
scas
out
into
outsl
loope
pushf
js
cmp
lcall
std
fistpl
jle
das
jle
je
mov
adcl
sar
xor
adc
xorb
decb
push
into
dec
popf
into
inc
sbb
jmp
fnstcw
pop
xchg
dec
push
cmc
adc
cltd
mov
imul
repz
mov
in
fs
ja
inc
in
leave
pop
mov
mov
push
sbb
int3
cmpsl
jg
adc
stos
pop
iret
pusha
adc
fsqrt
pop
shlb
or
mov
jns
adc
shl
aad
ja
add
cmp
call
push
add
push
mov
xor
adc
xor
cmp
testl
addr16
pop
mov
add
lea
fst
in
pusha
jp
pop
insl
cs
pop
jne
add
out
xor
ss
push
ss
lret
jmp
sbb
jmp
push
adc
out
mov
xchg
mov
or
add
and
or
lret
sti
lea
jecxz
lods
jne
aas
sub
lods
jo
and
add
pop
cmc
shrl
dec
add
cmp
cmp
stc
movsl
jecxz
je
jnp
test
inc
into
jns,pn
adc
cld
pushf
inc
xor
mov
and
mov
xor
xchg
and
mov
push
out
movsb
movsb
adc
pop
out
dec
xor
lods
sbb
add
cmpsb
sti
stos
add
test
bound
xchg
sbb
jae
mov
mov
in
xchg
xchg
cld
sub
dec
jae
cmp
lods
xchg
push
jl
mov
imul
inc
and
mov
out
mov
adc
popa
inc
lock
dec
imul
outsb
cltd
and
inc
outsb
xchg
mov
xlat
ret
adc
and
test
fldenv
add
jb
push
das
and
mov
loope
divl
mov
mov
jbe
shlb
mov
lahf
dec
ljmp
sbbl
inc
jmp
cld
sbb
dec
jp
lret
stos
mov
roll
adc
std
aad
fdivp
fsubrl
lock
adc
aam
mov
adc
dec
addr16
and
outsb
negb
xor
pop
cmc
mov
add
pop
cld
add
test
hlt
add
das
lods
shll
adc
lods
enter
outsl
mov
insl
mov
arpl
sub
nop
into
enter
mov
lret
cmpsl
addb
hlt
daa
inc
or
push
lds
jecxz
pop
mov
cmp
mov
fdivl
push
repz
add
ljmp
fcomps
cmp
and
insb
push
cwtl
mov
sbb
arpl
test
add
les
icebp
popa
xchg
lods
imul
pop
in
adc
mov
push
push
fldt
dec
xlat
or
push
out
sub
sarl
out
jne
and
adc
cmpsl
push
and
repnz
mov
scas
sbb
rol
aaa
mov
ja
les
dec
pop
xlat
mov
cmc
adc
lods
sbbb
or
shl
ja
and
pop
lods
fmuls
out
add
jmp
push
jae
xlat
addr16
mov
push
dec
in
sbb
mov
add
movsl
fcoml
loope
repz
dec
adcl
jmp
push
sbb
pop
push
push
outsb
xlat
aaa
dec
out
cld
sub
roll
dec
popa
sub
mov
and
popa
jg
icebp
mov
xlat
mov
inc
fldt
mov
push
xor
jecxz
sbb
inc
inc
sbb
push
pop
scas
lret
pop
loop
or
mov
add
test
mov
and
cmp
adc
inc
inc
arpl
pop
jg
jmp
xor
xchg
in
mov
fidivl
mov
lahf
push
xor
test
xchg
fisubrl
shlb
int3
movsl
mov
cmpsb
mov
xor
cmp
in
pushf
scas
subl
or
xlat
loop
nop
in
or
xor
push
inc
outsb
cmp
sbb
ss
popa
jle
pop
xlat
repnz
gs
lods
outsb
fs
stos
mov
mov
adc
aaa
push
sub
add
cltd
push
or
out
icebp
into
lahf
cli
dec
inc
cs
sar
in
shll
adcb
in
loope
jbe
data16
scas
xlat
popa
push
popf
pop
push
inc
fs
out
test
into
lock
rclb
sahf
ja
popa
fadd
pop
mov
in
and
outsb
test
je
push
mov
and
adc
jo
cmp
lods
shlw
popf
adc
mov
xlat
inc
dec
gs
jg
das
jno
add
mov
and
insl
cmp
mov
aad
jns
cmp
sub
into
insl
bswap
push
or
out
mov
hlt
mov
pop
mov
sub
xchg
add
pop
pop
push
mov
or
mov
mov
jmp
add
test
or
sbbl
call
mov
cwtl
cmp
cmp
mov
in
pop
iret
push
jae
pop
push
jbe
ficompl
aam
cmc
test
push
and
mov
mov
data16
imul
adc
inc
push
adc
and
and
and
xchg
aas
or
push
sbb
lret
mov
pop
pop
out
fidivs
fcmovnb
int3
xchg
stc
pop
std
cmp
push
fmul
mov
cmp
cmp
xchg
cmp
xlat
cld
add
dec
das
push
pushf
data16
dec
rolb
jbe
lods
jnp
xor
imul
call
ret
dec
sbbl
jmp
daa
jecxz
fwait
push
loope
sub
lahf
pop
movhps
inc
add
adcb
push
mov
mov
cmp
stos
inc
xchg
lea
or
jge
daa
int
stos
pop
addr16
pop
fistpl
mov
mov
jmp
out
lret
nop
in
fs
addb
cwtl
pop
call
icebp
jmp
lods
mov
pop
aad
mov
pop
sbb
int
cmpsb
and
xchg
nop
xor
fcoml
loope
mov
shr
add
hlt
out
pushf
rclb
rcrb
pop
xlat
cmp
lret
mov
add
loop
sub
fnstsw
popf
shlb
jno
mov
js
hlt
sbb
add
ds
dec
lock
icebp
test
adc
dec
push
add
inc
popf
jns
and
loope
ss
mov
mov
imul
leave
inc
fmul
cs
jle
orb
movsb
inc
inc
dec
or
fnstsw
inc
in
dec
jo
outsb
sub
cmp
dec
cmp
icebp
mov
mov
js
jbe
insl
push
cmp
arpl
pop
inc
xchg
jbe
cmp
lds
enter
push
fdivrs
pop
mov
push
mov
pop
andb
or
sub
add
xchg
sarb
fcmovu
loop
push
and
xor
and
sub
in
or
sbb
into
repz
push
mov
das
cmpxchg
in
pop
adc
push
sub
xlat
jbe
cltd
imul
das
int
bound
cmp
in
ja
inc
xchg
mov
jne
loop
push
inc
fs
xchg
jbe
fstl
dec
mov
js
pop
test
nop
pushf
jecxz
out
sbb
mov
leave
or
int3
and
mull
adc
or
jo
mov
in
dec
mov
aad
mov
test
orl
or
enter
add
jb
loope
fidivl
push
testb
lret
jl
pop
sbb
in
and
pusha
out
adc
xor
enter
push
xchg
cmpsb
push
pop
daa
test
mov
pusha
sbb
push
lea
push
lret
adc
push
lods
dec
pop
add
push
cltd
call
pop
lea
xchg
pusha
inc
mov
stos
push
jle
ret
cmp
out
ret
push
jg
add
aaa
jns
imul
push
push
stos
push
pop
fists
xlat
fmulp
loopne
xor
loope
cmp
add
les
cmpsb
test
push
adc
mov
cmpsl
ret
inc
add
jnp
and
loope
and
mov
cltd
push
repnz
fs
fs
mul
and
jno
outsl
jo
ret
dec
sub
inc
iret
dec
cmp
ljmp
sub
push
fsubrl
ret
fwait
inc
shl
jb
push
xchg
mov
inc
jecxz
mov
push
outsb
pop
cld
imul
sahf
mov
dec
push
cli
std
and
mul
fstpl
ror
imul
xor
fisubrl
aam
sbb
mov
mov
push
cli
adc
mov
data16
imul
imul
addr16
xchg
cli
cmp
daa
sarb
mov
sti
jns
lea
jne
dec
fiaddl
les
jecxz
fmuls
jne
xchg
loopne
loop
popa
adc
movsb
das
cs
pop
mov
aaa
inc
je
inc
pop
push
xor
lods
fs
inc
aad
into
test
lods
mov
stos
ja
insb
jb
pop
stos
fwait
pop
lock
mov
or
std
daa
data16
mov
push
mov
ljmp
pop
popf
fcompl
popf
jle
sahf
call
pop
f2xm1
sub
pushf
cltd
jb
in
push
fs
jge
ds
stos
push
push
xor
aas
and
test
imul
dec
pop
mov
cmpsb
jo
in
cmp
cmp
mov
xchg
xlat
xchg
stos
xchg
inc
scas
push
xchg
mov
addr16
subb
cli
test
aam
cmp
xchg
lock
mov
movsl
jle
mov
data16
arpl
imul
jbe
repz
sbb
sub
mov
scas
mov
mov
jmp
add
insl
or
inc
sbb
sub
jecxz
push
loop
adc
mov
mov
jg
pop
sub
xor
mov
imul
clc
dec
sbb
lea
ljmp
pusha
jnp
je
add
hlt
sub
aaa
pop
xor
aad
push
fnstcw
out
rcrb
ljmp
xchg
mov
loope
bound
xor
pop
mov
sub
push
outsb
mov
dec
outsb
sti
pop
fmuls
scas
xchg
adcb
into
popa
xor
jl
and
test
jge
pusha
adc
cld
outsl
push
out
not
aas
push
dec
sbb
dec
nop
sbb
ficomps
lds
lock
les
sbbl
lock
into
repnz
push
mov
ret
mov
test
out
roll
push
cmpsl
ret
mov
mov
insl
push
xor
xor
jne
or
mov
sub
aad
in
mov
nop
cwtl
pop
mov
lea
add
mov
lds
mov
sti
push
push
fldl2t
pop
jb
inc
adc
inc
pop
cmp
xchg
mov
mov
inc
dec
add
addr16
lea
push
mov
dec
imul
mov
dec
mov
inc
jae
out
or
pop
cmpsl
and
sbb
inc
popa
mov
movb
adc
in
movsb
or
add
ljmp
jbe
lahf
sub
xor
data16
add
xor
push
adc
enter
je
jb
loope
clc
inc
pop
js
lods
jns
gs
in
xor
insb
inc
arpl
mov
jecxz
aas
sbb
aad
sub
rorb
adc
sbb
push
aaa
popf
push
sub
jbe
xchg
mov
or
sub
aam
pop
lahf
or
mov
dec
mov
and
push
xchg
jo
rorl
push
rclb
xor
dec
mov
dec
dec
mov
jl
add
lds
test
in
mov
push
push
or
loopne
cli
jne
pop
into
in
lret
cmp
in
or
push
adc
mov
popf
jne
inc
lods
stc
fcmovu
jle
push
iret
xor
lcall
es
cmp
mov
pushw
jns
add
mov
mov
add
ficoms
nop
add
dec
sub
jne
pop
in
inc
mov
adc
out
add
out
and
mov
jp
add
dec
jo
loopne
cmpsl
jp
test
fdiv
lcall
push
fnstcw
inc
push
dec
jecxz
mov
adc
jae
ret
int
mov
inc
mulb
inc
dec
add
mov
sbb
cld
cmpsb
cwtl
mov
adc
or
cmpsb
sbb
mov
push
imul
mov
out
adc
stos
imul
pop
pop
cli
pop
insb
add
out
test
jns
mov
pusha
pop
dec
sarl
es
lahf
fcmovnbe
add
ror
xchg
adc
aad
repnz
aaa
push
cmp
popa
and
addr16
fistps
orl
inc
xor
inc
push
mov
pop
xchg
dec
cmp
xchg
andb
pop
and
or
ret
jl
rorb
and
ret
xor
cmc
and
lahf
in
cwtl
dec
outsb
lds
jnp
mov
lock
sub
xor
adc
sub
mov
xor
scas
dec
pop
mov
lods
dec
rcrb
xor
add
dec
xchg
shlb
rclb
loopne
cmc
ss
inc
cmp
mov
mov
sub
sub
int3
and
adc
xor
sub
and
test
aas
sbb
lcall
outsl
push
aam
roll
xchg
sti
pop
test
cmpsl
test
xchg
cmp
jnp
inc
sbb
mov
mov
jbe
into
pop
mov
fadds
cmp
inc
jne
pop
in
stos
mov
adc
jp
rclb
notl
pushf
adcl
push
addr16
push
dec
clc
in
insb
xchg
fs
fildl
in
scas
mov
fsubrl
les
jmp
shlb
xchg
dec
sbb
aam
int3
fistpl
sbb
bound
outsl
mov
mov
popf
push
imul
inc
pop
and
jae
jb
jecxz
or
dec
jb
sti
xchg
push
or
fsubrl
ficompl
int
jecxz
pop
cmp
cld
add
pop
cmp
mov
lahf
or
sbb
aad
push
cmp
xor
ja
adc
lret
push
lock
xor
dec
cmp
push
hlt
and
cmp
test
adc
pop
mov
sub
jl
stc
sub
jnp
fsts
mov
int3
dec
icebp
or
add
sbb
ret
test
cli
cld
fwait
mov
and
popf
shll
ret
clc
xchg
mov
jbe
out
sub
mov
aam
fstl
div
lret
push
push
lret
fwait
stc
rcr
sbb
adc
jecxz
inc
popa
mov
push
fadds
add
or
xor
fwait
and
sub
mov
inc
sub
mov
dec
out
pushf
push
mov
fs
out
int3
imul
cmp
and
pop
mov
xchg
jge
repnz
cmc
mov
lods
sub
fcompl
int
shll
cmpsl
pop
iret
dec
sub
mov
ja
jbe
jp
sub
cmp
dec
push
int
lods
ret
in
pusha
xchg
fsub
mov
das
add
xchg
in
inc
movsl
sub
jmp
in
push
decb
loop
mov
lods
sub
dec
popf
je
or
cmp
push
pop
xor
sbb
nop
cmp
fsub
inc
push
or
sub
sub
pop
inc
lds
mov
mov
ret
lret
sahf
aas
int3
loop
je
test
dec
pop
loop
lods
mov
xchg
jl
mov
inc
or
xor
ret
cmp
and
push
aad
sarl
adc
adc
insb
iret
or
adc
fsubs
xchg
inc
jnp
xchg
movsb
movsb
aas
mov
js
xchg
popf
sti
mov
iret
daa
add
inc
lret
dec
shl
add
dec
xor
mov
xchg
xcrypt-cfb
cmpsl
cmpsb
fnstsw
jb
pop
nop
stos
and
js
lahf
in
int3
int
sub
mov
ljmp
dec
adc
and
pop
dec
pop
pop
popf
add
and
cmp
add
mov
dec
cltd
push
dec
or
mov
push
xchg
cmp
push
ret
sbb
and
lods
sbb
dec
mov
lea
push
std
es
mov
out
movsb
iret
scas
push
imul
xor
stos
jge
test
add
jns
or
jg
leave
addb
int
pop
imul
les
add
xchg
jae
or
jp
push
xchg
ljmp
adc
sbb
clc
rep
xor
mov
out
insl
jo
push
sbb
pushf
jns
and
fdivrs
xchg
inc
sub
cmp
scas
lret
push
aam
test
mov
loop
xorb
repnz
fiadds
call
insb
push
cld
xor
inc
xor
inc
push
lcall
nop
decl
ss
mov
xor
mov
jno
mov
cmp
pop
cmp
jp
fisubs
jle
idivl
in
or
inc
add
mov
and
lods
xchg
lods
pmaxsw
or
inc
in
ss
inc
faddl
jae
adc
lods
fs
lods
mov
xchg
xchg
lods
dec
mov
popf
push
mov
ret
enter
mov
xchg
inc
push
mov
xorl
push
shl
xchg
jmp
jbe
jo
cmc
aas
aam
cmp
ljmp
scas
in
mov
test
push
and
loope
sub
das
fstl
mov
jecxz
stos
inc
push
mov
xchg
insl
out
xchg
add
sub
imul
fs
repnz
nopl
or
mov
mov
fistpl
or
and
pushf
push
cld
fstpl
inc
or
pop
rolb
xchg
bound
je
mov
lock
mov
and
aam
bound
xchg
out
cmp
xor
push
notb
pop
adc
loop
adc
sbb
cld
or
cwtl
test
fcomps
sarl
cmp
loop
xor
xorb
mov
xchg
jnp
sbb
cs
jns
stos
jno
sahf
ja
popf
xchg
sbb
mov
pop
scas
stc
push
pop
push
mov
icebp
gs
test
cmp
push
jmp
fs
mov
jne
test
push
or
xor
or
jle
push
lahf
in
adc
fs
loope
and
loop
out
push
cmp
scas
shlb
inc
daa
js
das
mov
aad
fidivrs
test
aad
lods
adc
mov
jmp
insl
dec
push
bound
movb
xchg
imul
mov
into
outsl
mov
or
rorb
fstl
adc
push
sbb
xchg
stc
cmc
mov
fistl
rcrb
and
fsubl
lret
push
popf
sti
imul
jo
loopne
shl
insb
pop
jl
test
gs
imul
popa
push
sbb
repz
mov
iret
mov
jecxz
inc
sub
gs
daa
and
mov
roll
sub
sub
and
dec
adc
jmp
out
stos
hlt
adc
ja
pop
into
jle
xor
jne
lock
add
scas
mov
cltd
fnsave
push
jmp
mov
out
ljmp
add
and
cbtw
xor
xchg
into
cltd
add
mov
test
data16
movsb
pop
pop
mov
jl
mov
imul
dec
dec
add
add
ffree
insb
inc
or
adc
int3
or
add
jge
cmp
mov
iret
inc
les
rolb
xor
ficoms
push
inc
cwtl
es
in
leave
cmp
mov
sahf
jnp
pop
cltd
xchg
std
fstps
or
fistl
pop
mov
mov
cli
dec
mov
sbb
adc
mov
xor
adc
ret
mov
dec
jmp
xor
loope
fisubl
cld
js
test
pop
or
in
lods
nop
cwtl
mov
xchg
mov
test
sbb
roll
cmp
cmc
jno
inc
and
adc
dec
dec
mov
clc
push
fnstcw
xor
xchg
cmpsb
pusha
std
inc
inc
movl
fimuls
add
in
pushf
fisttpll
xor
sbb
push
dec
sti
mov
mov
loopne
in
enter
mov
std
mov
ret
dec
rcl
cmp
pop
fisubrl
arpl
in
and
ret
jle
xchg
sub
inc
mov
mov
daa
sbb
pop
xlat
sbb
hlt
jne
sbb
mov
push
into
xchg
cli
xchg
lea
cmp
lods
adc
ror
push
pop
movsb
gs
sbb
or
cltd
and
cmpsl
sbb
jns
fdivs
push
mov
jmp
ljmp
xlat
inc
dec
inc
adc
iret
xchg
popf
push
inc
shrl
sbb
call
js
arpl
shll
outsl
cmp
jmp
cld
movups
js
adc
mov
lods
lcall
push
mov
scas
cld
mov
jmp
cli
scas
jge
cwtl
divl
fwait
mov
adc
push
bound
repnz
mov
insb
xorb
pop
iret
das
ficoms
lea
bswap
and
and
in
jne
aaa
push
cmc
sub
jecxz
pop
xchg
sbb
dec
test
out
inc
mov
xchg
jle
xor
or
ss
inc
popa
ljmp
mul
mov
and
jmp
imul
arpl
xchg
adc
xchg
js
push
mov
pop
xchg
mov
sbbb
repnz
push
inc
push
int3
xlat
sti
aam
outsl
fnstsw
lods
js
bound
dec
push
lods
jo
daa
push
lret
or
fisttps
cwtl
mov
sbb
aam
pop
mov
fwait
jecxz
leave
in
or
mov
out
loopne
and
mov
aad
fidivl
add
push
jp
or
dec
mov
arpl
bound
lret
push
sbb
ds
shlb
push
js
das
stc
pop
test
mov
mov
or
subl
xchg
in
mov
ja
into
fsubrs
fs
fiaddl
mov
cmpsb
jne
xchg
xor
jno,pn
or
sbb
pop
mov
sbb
xor
daa
test
fildl
adc
xor
icebp
outsb
add
fwait
shll
dec
add
test
lcall
or
les
imul
mov
xchg
cltd
pop
cmp
cmp
xchg
out
push
je
xor
fsubrp
mov
je
imulb
and
stc
cmp
xchg
les
or
dec
jge
adc
mov
cmp
xor
sub
push
aad
jns
nop
or
jmp
mov
dec
popa
inc
sub
jge
mov
mov
push
mov
push
mov
xor
ss
fmul
xchg
and
mov
mov
dec
jae
outsb
mov
push
or
and
mov
dec
mov
arpl
data16
jne
xchg
lret
repz
inc
dec
mov
cltd
mov
push
out
mov
fptan
loope
enter
adc
jp
mov
filds
sub
rcr
mov
in
filds
cmp
movsl
sbb
mov
sbb
lds
movsl
inc
mov
test
push
ljmp
leave
dec
sti
add
mov
sub
out
in
add
push
pop
popf
and
mov
xor
lea
test
andl
and
lods
dec
inc
fs
push
adc
fcompl
adc
sbb
gs
sbb
xor
out
stc
mov
in
inc
pop
and
loop
add
mov
test
cld
and
lret
jmp
push
jno
lea
push
jg
fbstp
xchg
pushf
aam
ja
lods
ljmp
push
lea
mov
jno
xchg
push
push
cld
or
dec
js
arpl
addl
mov
imul
flds
pop
ds
andl
xchg
cmp
stc
int
imul
pi2fd
push
adc
in
dec
pop
jne
xor
mov
sub
mov
shll
int
hlt
ret
in
mov
shlb
insb
mov
pushf
into
fwait
mov
out
xchg
ret
push
or
divb
mov
les
popa
dec
inc
das
rcll
int3
or
test
mov
or
fwait
jge
sub
mov
or
push
push
insb
lret
inc
sbb
imull
mov
cmp
js
in
adc
popa
sbb
sbb
and
cmp
push
add
fiadds
ljmp
pop
fcompl
dec
xchg
mov
add
mov
inc
rcl
jmp
popa
xchg
imul
inc
jecxz
rcrl
jge
test
inc
icebp
notb
adc
inc
mov
in
dec
je
test
aam
insb
fsubl
push
lods
xchg
push
aad
sub
out
adc
mov
clc
add
dec
mov
or
out
out
sarb
daa
mov
xchg
pop
mov
test
jecxz
pop
lods
cmp
jg
mov
lret
jmp
and
stos
std
test
negl
cmp
sub
xchg
insl
js
or
push
pop
cmp
mov
jo
sub
mov
fmull
cmp
pop
fcoml
and
xchg
mov
std
dec
mov
fists
gs
mov
icebp
scas
sarl
pop
repnz
mov
xchg
jmp
imul
jl
mov
adc
idivb
jbe
pushf
push
nop
dec
call
inc
mull
fidivrl
fldl2t
sub
ss
pop
cmp
cmpsb
rolb
shll
mov
nop
inc
shll
les
mov
jl
fs
xchg
pop
and
jle
sbb
push
jmp
cmp
xchg
inc
sahf
popf
pusha
cmpsl
mov
dec
lahf
xor
cmp
sbb
insl
ljmp
test
sbb
orl
in
fcoms
adc
mov
dec
xor
adc
enter
xchg
push
inc
xor
add
and
lock
loopne
inc
fsubr
jno
xchg
mov
out
nop
inc
pusha
out
sub
sbb
mov
cs
jp
adc
insb
int
cli
adc
in
mov
fdivl
inc
loopne
jo
shrb
cmp
mov
push
mov
out
mov
and
leave
fcmovnu
repnz
add
xchg
rorb
test
notl
add
sub
ret
xorb
mov
cli
orl
xchg
cmp
call
or
popa
pushf
sbb
xor
shlb
cli
subb
lcall
jl
sbb
mov
loopew
clc
push
adcb
insb
push
mov
and
mov
jl
add
into
jl
xchg
mov
mov
and
push
lcall
cs
in
je
pop
dec
test
cltd
aaa
mov
ds
and
mov
fsubrs
das
int
popa
pop
pop
lock
jbe
and
jno
jge
xor
or
or
cli
sub
or
or
nop
mov
jnp
pop
push
movsl
pushf
jecxz
and
out
lahf
xchg
popa
mov
mov
ret
or
xchg
adc
in
imul
xlat
jge
sbb
adc
sub
add
and
repnz
jo
mov
decb
and
rolb
les
aaa
test
aad
sbb
mov
dec
mov
jecxz
dec
je
xor
decb
insl
sbb
arpl
mov
add
dec
movsl
xor
pushf
jecxz
mov
inc
mov
loope
outsl
adc
and
fdivs
aad
inc
dec
pop
sbb
pop
xor
jne
and
sbb
testl
mov
faddl
incb
mov
movsl
and
sti
push
jmp
int
push
aaa
jae
imul
xchg
fsts
xor
adc
pop
push
xchg
dec
inc
sub
sbb
pmullw
call
pop
and
xchg
lret
jecxz
jae
ret
iret
stos
repz
inc
dec
pop
notl
mov
pop
es
cmpb
push
in
test
test
mov
pop
and
out
mov
fsts
dec
iret
cmp
xchg
incb
sbb
adc
cmc
add
or
inc
add
sbb
fsubl
inc
jg
jl
clc
addr16
mov
dec
ljmp
fwait
mov
int
pop
pop
shrb
stos
popa
leave
cmp
mov
pop
jp
or
popf
scas
cmp
mov
lods
mov
jg
into
leave
test
mov
push
mov
daa
push
pop
repz
ficomps
cli
inc
pusha
pop
add
aaa
jecxz
outsl
enter
loope
bound
stos
stos
decb
and
push
testl
mov
xor
lahf
sahf
fimull
dec
fwait
sub
pop
std
push
xchg
add
fisttps
jp
int3
xchg
cmp
mov
lcall
sub
mov
mov
mov
or
push
push
je
call
pop
nop
dec
jne
sbb
arpl
imul
inc
ret
add
dec
mov
jle
jns
sbb
cmp
sbbl
xor
cwtl
ret
out
inc
lods
fstpt
fdivl
cmp
push
movsl
cmp
sub
stos
std
sub
cmp
pushf
stc
sahf
call
ds
scas
adc
int3
es
mov
pop
sbb
or
mov
add
insl
lock
push
popf
push
imul
jle
mov
and
inc
or
mov
insl
pop
cmpsb
ret
fistpl
and
mov
adc
mov
popa
mov
sub
xlat
lock
stos
cltd
dec
jns
js
rol
js
inc
int3
xor
mov
dec
mov
adc
inc
stos
ljmp
mov
pop
test
out
in
in
jg
sahf
jbe
mov
icebp
xor
sbb
into
cmpsl
sub
repz
dec
lods
or
add
add
xchg
jo
fists
mov
pusha
int3
cmp
jmp
push
imul
push
es
shr
xchg
movsl
jo
rcll
fstl
sub
cmp
cmp
repnz
xchg
add
adc
mov
aaa
mov
and
pop
pop
xchg
mov
mov
in
test
ret
mov
ds
movsl
outsb
cltd
cmp
pop
mov
js
add
dec
test
sbb
addb
cmp
jmp
test
mov
ficoml
mov
bound
and
pop
je
nop
ja
push
negl
jb
lret
lods
add
pop
sub
sbb
stc
or
xor
int
andl
inc
push
xchg
std
cwtl
imul
lcall
dec
xlat
sti
aas
cmc
out
fnstenv
aas
cmp
out
sub
std
or
mov
sahf
hlt
inc
sbb
int3
inc
or
int
cli
dec
xchg
jecxz
jl
inc
sahf
pop
cmp
rolb
outsb
in
sahf
je
add
fadd
sbb
dec
jnp
es
mov
mov
jne
movsl
test
fstps
pop
jno
push
pop
fmuls
push
sub
repz
dec
and
ds
mov
arpl
int
lahf
leave
mov
cmpsl
lahf
mov
mov
cmp
xchg
pop
std
rcrl
mov
in
arpl
xchg
jp
lea
or
fs
loope
sub
enter
adc
aam
mov
adc
mov
icebp
mov
lock
xor
je
aam
mov
es
mov
jecxz
pop
cmp
lods
scas
scas
fbstp
jmp
mov
scas
orb
into
jmp
loop
test
ja
jns
cld
jne
divb
pop
cs
or
push
or
xor
push
loop
mov
jle
rcl
nop
addr16
pop
jae
cmp
mov
loope
mov
mov
std
aam
mov
lcall
scas
mov
xchg
mov
or
xlat
in
dec
mov
dec
xor
dec
push
jo
or
and
jns
nop
fwait
push
add
subl
push
pop
rorl
lahf
mov
hlt
inc
mov
add
adc
pop
leave
push
aas
and
into
dec
and
jl
mov
je
push
jo
scas
xor
and
adc
popl
std
or
fidivl
inc
fisubrs
data16
cli
cmp
stc
mov
adc
scas
int3
mov
mov
fcoml
and
lea
scas
shll
mov
scas
sbb
in
cmp
in
and
test
and
mov
add
loop
dec
cmp
cmp
add
add
jecxz
fisubs
mov
movb
ret
or
test
pushf
sbbb
sbb
mov
cmp
jle
call
divb
notb
scas
lods
sbb
scas
andb
push
jns
inc
out
lods
sbb
ljmp
sbb
daa
pop
jge
xlat
xor
fcoml
arpl
jle
jnp
pusha
es
pop
adc
sbb
push
pop
in
pop
shr
lcall
sub
es
popf
pop
and
mov
sahf
and
js
jp
insb
popa
ja
push
pop
leave
cli
icebp
pop
push
inc
push
mov
mov
inc
jae
push
or
jo
fucom
adc
icebp
xlat
cmp
mov
or
cltd
shrl
push
lret
dec
push
jl
inc
sub
mov
test
mov
js
adc
out
hlt
cmp
or
call
sbb
je
mov
shll
shlb
inc
popf
call
in
jne
cmpl
test
push
shrb
stos
dec
and
cmpsb
mov
lcall
movb
xchg
test
loope
shlb
ret
push
test
ret
jp
xor
ret
in
lret
test
popf
imul
int
mulb
xor
testb
outsb
xor
addl
xchg
in
mov
insb
stc
mov
mov
xor
je
sub
sbb
testl
sbb
das
cli
sbb
push
cld
or
aas
pop
push
push
ret
sarb
cmc
xchg
adc
fcompl
in
dec
push
out
and
mov
push
inc
xchg
adc
negb
gs
sbb
mov
xlat
adc
xchg
jg
ficoml
jg
or
mov
lods
rorb
mov
or
loopne
add
pop
adc
cmpb
in
inc
shrl
fdivl
sbb
gs
or
fdiv
in
cmp
add
jae
and
jg
dec
add
sti
pop
scas
in
cmp
mov
lahf
sbb
pop
jl
inc
pop
adc
rorb
push
cmp
and
cli
pushf
sub
fs
and
or
or
mov
jb
jmp
in
xor
test
adc
sahf
xchg
imul
sub
popa
adc
mov
or
or
jmp
aad
pop
cwtl
or
cld
inc
or
fwait
pusha
mov
js
mov
mov
and
push
add
xor
lret
in
shll
fwait
or
mov
fsubr
addr16
adc
arpl
jb
sbb
dec
js
cwtl
xchg
cld
pop
push
inc
or
test
xchg
cmc
icebp
cwtl
leave
sbb
mov
popa
mov
cwtl
jbe
lock
push
inc
mov
mov
cmp
inc
push
and
repnz
jnp
mov
jae
jmp
inc
mov
lea
xchg
inc
mov
gs
test
stos
and
adc
insl
mov
rcll
xchg
xor
add
sbb
pop
cmpsl
shl
pop
mov
sub
stos
pop
out
dec
jae
xorl
in
lods
cltd
into
mov
mov
stc
mov
cmp
cmp
and
push
dec
call
add
fsubs
in
cmp
lds
aam
frstor
sbb
add
xorl
adcb
insl
or
cmp
loop
pop
sbb
add
push
ljmp
mov
inc
xor
nop
pop
pop
inc
mov
insl
dec
loop
cs
loope
xlat
pop
push
inc
inc
push
cmp
push
stc
pop
in
repnz
mov
jp
sub
out
hlt
sbb
sahf
push
inc
push
imul
mov
or
or
lods
jns
leave
jg
stos
ds
push
fdivrs
sbb
jg
xor
inc
ss
jp
or
inc
push
in
out
std
push
rol
add
test
add
ret
adc
aaa
adc
jae
jb
stos
sbb
shlb
inc
xor
scas
imul
inc
jno
int3
outsb
mov
shld
add
out
cmp
cli
pop
jae
jns
mov
aaa
sbb
ss
sbb
hlt
inc
cmp
xchg
arpl
push
lahf
ds
mov
mov
icebp
fisubs
fwait
dec
fldt
mov
imul
dec
pushf
cld
fcoml
pushl
mov
push
dec
dec
cli
adc
fadd
push
icebp
arpl
std
or
fisubrl
bound
imul
insb
sub
aam
pop
xchg
bound
daa
adc
leave
jnp
add
xchg
push
mov
movsl
mov
fdivrl
std
lahf
cmc
xor
push
scas
jecxz
in
pop
jae
xchg
cld
sbb
lds
cld
call
mov
push
popf
jns
and
out
sbb
mov
leave
push
push
adc
out
mov
push
js
cmp
lock
lds
sbb
mov
mov
xor
add
arpl
mov
mov
xchg
fidivrs
xchg
mov
mov
xchg
imul
or
inc
mov
jbe
imul
sbb
mov
cmpsb
shrd
xor
jecxz
jl
sbb
jo
push
aaa
test
outsb
ljmp
or
or
ss
or
loopne
jge
lods
pop
lods
fdivrp
pop
bound
push
gs
int3
sub
icebp
lds
jb
xchg
xchg
xor
xor
mov
bound
sbb
and
mov
pop
std
das
nop
jg
outsb
adc
pop
mov
jnp
in
adc
sub
movsb
clc
aaa
jo
shlb
pop
dec
sub
stos
sbbl
adc
and
sub
push
xchg
lods
inc
data16
add
push
les
out
test
push
mov
xor
jae
mov
iret
outsl
mov
imul
dec
mov
les
jp
lds
icebp
fmul
data16
divb
shrb
cmp
es
inc
mov
jmp
lahf
adcl
jg
mov
test
loopne
push
sarb
mov
and
gs
imull
sarl
test
or
mov
jl
push
adc
jle
cltd
xlat
lahf
pop
and
sub
add
lcall
sbb
loope
xchg
push
adc
divl
repz
dec
mov
mov
je
enter
pusha
xor
sub
adc
pop
ljmp
xchg
dec
testl
out
push
sub
orl
rol
pop
stos
int3
jp
cli
xor
enter
sub
out
shrl
mov
pop
subl
xorb
leave
push
int3
dec
movl
mov
shlb
cltd
dec
and
xchg
fldenv
add
jno
jno
push
pop
jns
push
add
loope
insb
lret
loope
das
aas
add
sbb
jb
sub
dec
das
fcomp
imull
and
inc
mov
and
sbb
ret
js
or
push
repnz
lods
push
add
sbb
lods
and
or
jns
xchg
iret
dec
dec
lret
and
outsl
xchg
out
stos
xlat
add
scas
std
dec
pop
mov
xchg
pop
shrb
cmp
mov
imulb
xlat
cli
int
mov
cli
aad
adc
xor
in
or
andl
sbb
repnz
jbe
pop
negb
lahf
ds
adc
add
xchg
adc
fs
repz
lds
insb
cli
jo
xlat
test
mov
sbb
pusha
sbb
rolb
adcl
mov
repnz
mov
or
push
jmp
adc
mov
test
adc
pop
icebp
jne
pop
pop
sub
mov
mov
rolb
ss
sbb
stos
push
mov
insl
jno
jecxz
and
or
sub
lahf
or
push
mov
mov
add
lcall
add
ja,pt
xlat
outsb
sbb
mov
mov
jae
mov
push
add
jle,pn
loop
shrl
lea
repz
xor
inc
aad
adc
ret
lret
hlt
push
inc
sub
and
sbb
outsb
inc
ret
cli
xlat
das
shll
dec
lea
int3
enter
fistpll
std
cltd
add
fisubrs
xor
testb
imul
mov
fldcw
add
lret
push
jp
jmp
adcb
sbbl
sub
dec
dec
out
and
mov
fisubs
sahf
jbe
cmpsb
cmpps
mov
pop
rcll
fcmovu
mov
jmp
aam
push
mov
mov
push
icebp
fldl
add
mov
lahf
push
iret
outsl
movsl
sahf
pop
test
sub
popa
rcrb
sub
or
inc
and
lret
ljmp
cmp
outsb
hlt
sub
xor
dec
add
sti
test
sbb
jne
lods
leave
cmp
push
movsb
push
insb
xchg
ss
test
fistl
ret
xor
clc
fildll
jecxz
jne
jp
sub
cli
icebp
cltd
cmpsl
jp
lcall
in
enter
decl
sub
insl
fiaddl
mov
push
and
das
inc
outsl
and
shlb
out
imul
nop
leave
into
aaa
mov
or
sbb
jp
lea
nop
addr16
xchg
inc
lods
js
outsb
mov
mov
lods
fdivl
pop
mov
xchg
sbb
repz
into
fucomi
xchg
or
movsb
lock
inc
sahf
xor
andl
out
mov
mov
inc
adc
add
xchg
sub
faddp
cmpsl
es
pop
pop
shl
leave
jbe
das
loope
jg
and
or
repz
popa
rclb
lea
push
mov
pop
jne
jbe
dec
cmp
add
ror
ja
sub
add
and
mov
and
in
sub
jmp
movsl
jo
pop
add
arpl
adc
push
sub
mov
pusha
sbb
movsl
push
shlb
mov
mov
jb
push
icebp
pusha
mov
pop
negl
rorl
xor
inc
scas
adc
add
mov
in
out
lret
sbb
mov
adc
cmc
jnp
sahf
rcrb
pop
loopne
cmp
enter
xchg
mov
cmp
lret
pop
rorl
cmpsb
mov
push
inc
add
sahf
and
dec
xor
lock
and
sbb
sub
pop
sbb
mov
popf
movsl
add
push
adc
hlt
aam
loope
push
outsb
add
jl
jns
call
aad
lret
pop
leave
lods
inc
notl
iret
xchg
ret
lock
pop
inc
inc
sbb
cmp
push
mov
mov
in
push
lret
into
sti
push
mov
ret
fstpl
das
lcall
dec
in
fdivrs
shl
dec
sub
push
jle
jecxz
mov
cmpl
add
xchg
in
xchg
sbb
aad
icebp
jae
push
hlt
ror
pushf
lods
pop
jecxz
jae
out
aas
jo
sti
pop
and
xlat
mov
inc
xchg
sub
adc
dec
lea
inc
faddl
scas
outsl
xor
mov
fs
daa
and
or
xchg
xorb
jno
pop
cmp
fidivrs
add
pop
mov
push
push
xor
adc
nop
jg
sbb
pushl
and
dec
pop
cmp
or
mov
xor
inc
das
and
or
or
fs
pop
mov
mov
lea
movsl
ret
out
xchg
gs
mov
inc
call
stos
jae
mov
loopw
enter
xlat
stc
push
sbb
in
jae
push
jg
or
out
or
adc
inc
adcb
xor
ljmp
js
dec
cmpsl
xor
pop
adcl
or
xchg
scas
jle
dec
call
cmc
movl
out
cli
push
push
push
sti
cmc
pop
jb
fnstsw
or
pop
call
add
adc
dec
mov
test
inc
adc
mov
ror
push
push
or
xchg
in
and
cmc
subl
mov
iret
std
cmc
lcall
inc
jbe
xchg
xchg
push
sub
adc
mov
ret
jne
gs
jl
outsl
notl
inc
inc
sbbl
mov
out
mov
pop
pusha
inc
mov
roll
mov
add
fdivrs
pop
ds
mov
ja
jne
clc
inc
out
xchg
mov
push
lahf
in
scas
dec
mov
daa
dec
inc
stc
add
dec
psrld
and
mov
movsb
adc
adc
jl
scas
jl
jmp
push
shl
dec
lcall
push
std
sub
mov
jge
or
sub
das
pushf
dec
add
push
add
push
and
pop
dec
dec
cltd
popa
fldl
pop
cli
cmp
add
or
inc
jl
jge
fldl
add
pop
push
imul
cmp
add
fsubl
cmp
adc
adc
push
dec
push
sub
ljmp
sbb
clc
lock
fcomi
jl
mov
lods
xchg
or
lds
adc
mov
nop
mov
mov
movsl
lods
fidivs
fwait
mov
xlat
cmp
in
mov
cmp
insb
lret
mov
rol
mov
sub
aaa
pop
jecxz
out
push
mov
mov
jns
push
lods
aam
mov
dec
scas
daa
lahf
in
jecxz
cltd
sarb
cmp
inc
sbb
mov
jecxz
clc
std
cltd
pop
dec
test
hlt
dec
popf
sbb
jl
pop
jl
insl
jo
mov
adcl
push
xor
xor
sbb
mov
dec
sarb
aam
and
sbb
rclb
outsb
add
add
mov
lcall
jmp
and
sbb
leave
jb
stc
sbbb
jbe
scas
fisttpll
add
mov
adc
pop
push
jns
lock
lods
test
push
cld
sbb
add
mov
aam
call
out
mov
dec
inc
sbb
test
mov
dec
mov
call
ficompl
test
subl
int
pop
les
testl
lea
idivb
lods
pop
icebp
mov
loope
mov
cmpsl
fdivl
ss
jp
mov
xrelease
jecxz
sahf
fxtract
jb
lret
xchg
xchg
cmp
in
xchg
jmp
push
mov
push
out
lret
out
sbb
pop
sbb
sbb
xchg
jb
xchg
negl
sbb
andb
fnstcw
adc
push
xchg
cltd
or
add
pop
adc
xchg
push
hlt
sbb
pop
negb
xor
pusha
and
xchg
and
push
inc
sti
jno
aam
mov
daa
inc
lods
mov
pop
sub
sbb
xlat
testl
std
testl
mov
mov
movsl
sbb
stc
out
lcall
insb
pop
clc
cmc
bound
in
xor
or
add
inc
pushf
inc
sub
sahf
xchg
add
mov
push
lea
dec
and
imul
movsb
das
sub
test
scas
jge
adc
xor
outsl
test
mov
inc
lods
xor
cld
cmpsl
rcrb
push
mov
cmp
scas
test
push
add
mov
les
jo
mov
push
fnsave
setg
int
mov
mov
out
jo
cmpsb
loope
sub
test
mov
mov
pop
loope
mov
pop
xchg
dec
aas
fwait
jle
jno
test
or
in
mov
sub
imul
inc
flds
es
repnz
jmp
fstl
mov
sub
sbb
xchg
jno
mov
adc
hlt
cvtps2pd
or
imul
or
cmpsl
pushw
leave
jmp
call
outsb
xor
mov
rorb
aam
mov
gs
jne
mov
cmp
mov
add
lock
fs
pop
xlat
rcl
icebp
int3
or
pop
insl
xchg
orl
fldt
jmp
sub
pop
sbb
bound
add
je
cmp
push
sub
lret
push
jmp
mov
neg
mov
xor
addl
shlb
pop
imul
mov
and
shll
jae
push
mov
inc
xchg
popa
clc
xchg
inc
aaa
xchg
notb
mov
lret
fdivrs
shlb
shrd
and
sub
notl
xlat
rcrl
cmpsl
add
cmp
jb
imul
xchg
inc
xlat
mov
out
outsb
mov
mul
cmc
pop
mov
roll
stos
mov
xchg
in
fs
xchg
pop
sbb
test
fcomps
scas
pop
mov
insl
cld
aad
shr
ret
xchg
sbb
or
xchg
dec
cmp
push
scas
xchg
cmc
adc
scas
jmp
pop
je,pt
adc
push
cmp
mov
cmp
or
nop
mov
test
test
xor
xor
xchg
aad
insb
arpl
pop
push
xchg
movl
dec
push
jo
lret
ret
cmpsb
xchg
mov
ud0
fwait
mov
mov
mov
sub
daa
nop
xor
sbb
dec
sbb
pop
or
test
cmp
dec
cli
fadds
lahf
xlat
xor
dec
dec
mov
or
push
sbb
out
ds
ret
orl
cmp
add
push
out
arpl
roll
sub
add
jo
stos
and
sbb
jns
mov
mov
mov
xor
insb
popf
mov
jnp
dec
jge
lea
mov
insb
sbb
iret
mov
xor
addr16
shrb
popa
inc
pop
insb
sbb
aaa
sbb
push
or
movl
cmc
fdivrl
loope
shl
mov
sub
je,pn
dec
xor
xchg
test
or
jle
sub
hlt
cmp
in
cwtl
fldenv
repnz
jnp
jbe
popf
test
mov
mov
adc
sub
mov
dec
jb
mov
ss
int
and
lods
jecxz
add
or
cmpsb
test
and
xor
ret
jb
loop
ja
scas
pusha
mov
mov
push
retw
in
pop
ja
movsb
ss
adc
mov
sahf
insb
addb
push
lock
clc
sti
std
fmulp
cmc
fadds
fsts
push
dec
add
mov
rcrl
sub
pusha
lods
jmp
les
push
divl
in
int
push
pop
orb
adc
mulb
in
icebp
in
xor
pop
std
ret
cmp
stos
sub
adc
loop
dec
popf
out
pop
addr16
and
dec
push
shld
or
pop
lods
xor
and
cmp
enter
push
outsl
mov
xchg
ret
pop
mov
mov
sbb
jae
lock
aad
jb
ficompl
pusha
xlat
cmp
and
mov
xlat
aad
nop
push
repnz
or
test
in
ja
mov
pusha
xchg
decb
add
subb
or
push
mov
stos
hlt
ret
xchg
jae
sbb
mov
fsubrp
pushf
sub
arpl
and
scas
sbb
repnz
jae
xchg
adc
mov
add
and
dec
xchg
lahf
lret
mov
adc
inc
repz
inc
leave
popa
jne
push
pop
push
mov
lock
fcmove
add
cmp
push
push
popl
xchg
arpl
dec
jle
add
ret
cltd
mov
mov
pop
dec
pusha
pop
sti
mull
divl
push
imul
popl
push
popf
mov
out
gs
sub
mov
push
inc
xlat
out
sti
push
xor
pop
inc
inc
fsubrs
orb
push
lods
cmpl
push
dec
rcr
outsl
dec
add
push
inc
mov
rcrl
scas
outsl
inc
and
mov
add
sub
lock
pop
stos
inc
pop
test
xor
test
xlat
adc
mov
mov
mov
stos
pop
and
mov
lahf
mov
in
repz
add
xchg
jno
pop
adcb
jno,pt
sub
sbb
shl
mov
mov
lcall
icebp
arpl
mov
sbb
lahf
sub
daa
mov
sub
fisubs
pop
jae
mov
mov
cmp
mov
clc
push
das
ljmp
insb
sbb
std
out
js
pop
test
stc
add
adc
dec
popf
ret
or
push
mov
popa
mov
stc
es
and
push
xor
imul
cltd
pop
xchg
cmpsb
or
faddl
mov
out
mov
shll
nop
cwtl
sub
push
or
mov
or
push
out
mov
movb
jbe
lods
sub
xrelease
cltd
add
push
in
inc
and
sub
or
sub
ret
push
sub
pop
xor
out
and
fcmovnu
mov
and
xchg
scas
pop
inc
enter
inc
jno
int3
into
jne
pop
aad
enter
adc
mov
adc
call
in
pop
or
mov
mov
add
pop
mov
and
test
into
and
out
xorb
das
xor
popf
sbbb
movsl
repnz
iret
xlat
or
push
cmp
pusha
mov
lahf
pusha
pavgw
dec
leave
push
rorl
dec
mov
and
lock
pop
ja
dec
ret
mov
mov
dec
and
stc
xchg
js
xchg
mov
xor
xchg
mov
jg
stos
fwait
or
jne
ss
stc
sub
inc
mov
mov
data16
rcrb
mov
or
out
xchg
push
lcall
ret
fcoml
insb
adc
sbb
inc
in
mov
adc
outsl
enter
push
roll
mov
xchg
sbb
bound
insl
scas
dec
sub
pop
push
ja
or
rcrl
sbb
mov
insb
test
push
je
in
mov
and
sahf
inc
push
sbbl
sbb
sbb
add
aas
xchg
rcrb
addr16
lds
pushf
cmp
add
sbb
push
adc
pop
enter
add
sub
out
sahf
mov
loop
repnz
mov
adc
cli
xor
mulb
xor
or
das
push
pusha
ljmp
fcomps
cmpsl
into
adc
addr16
xor
mov
xor
cmpsb
testb
sbb
dec
xchg
jnp
or
fisttps
sub
jecxz
aad
sub
call
pop
test
mov
push
cmc
cmp
add
dec
jl
xchg
sbb
scas
xchg
push
pop
push
inc
loope
adc
xor
cwtl
mov
call
pop
mov
jg
mov
xor
add
cmpsl
push
mov
xor
sti
into
jno
out
jns
out
lods
push
mov
mov
ss
jmp
or
lcall
ret
int
pop
jle
js
pop
mov
fisubrl
nop
daa
ja
mov
sarl
xchg
shl
adc
sub
adc
mov
pop
aam
cmc
clc
dec
insl
jmp
hlt
sub
jmp
inc
int3
push
inc
fdiv
leave
leave
fld
pop
push
push
cmp
or
xor
sti
mov
jnp
out
dec
xchg
je
mov
test
call
mov
repz
movups
in
or
jbe
fdivs
jae
mov
ds
sub
mov
daa
arpl
cmpsb
dec
mov
sub
cmp
pushf
outsb
xchg
inc
sub
cltd
adc
ret
or
retw
sbb
mov
inc
gs
mov
movsl
in
cs
out
js
call
sbb
stos
pop
push
or
xchg
jmp
mov
xor
aad
rcrb
int
movsb
idivb
shlb
jbe
mov
fisubl
les
cmc
sbb
fimuls
imul
or
adc
pop
xchg
outsb
call
int3
inc
cld
mov
fsubl
in
outsl
and
cwtl
cmp
fldt
add
out
cmp
pop
movsl
and
pop
sbb
rcrl
lret
in
scas
mov
inc
cmp
sti
loope
mov
push
addr16
mov
and
int
jecxz
fcompl
int3
or
xchg
cmc
ret
daa
aad
xchg
xor
test
pusha
push
loop
xchg
jmp
aad
push
leave
mov
pop
push
stos
adc
sub
push
cmpb
and
inc
xchg
into
insb
repz
add
jecxz
and
std
dec
cltd
sbb
fsubrs
jbe
pop
pop
xlat
mov
or
je
adc
adc
mov
xchg
scas
jmp
syscall
sbb
addr16
stos
subl
aad
jle
lods
jl
outsb
mov
jmp
inc
inc
sbb
push
mov
iret
stos
mov
dec
mov
nop
cmp
jnp
pop
dec
adc
push
mov
or
mov
pop
ljmp
mov
addr16
cmp
jge
pop
mov
pop
call
dec
scas
mov
ja
xchg
mov
aam
jae
pop
sub
mov
stc
out
cli
mov
jb
hlt
xor
push
shrb
inc
xor
mov
adcb
push
pop
xchg
mov
hlt
sub
jnp
add
dec
mov
adc
rclb
xchg
and
adc
lahf
popf
sub
jmp
shlb
lds
adc
mov
jne
outsb
icebp
daa
lods
das
aaa
test
adc
lcall
aad
nop
adc
stos
inc
fisttpl
in
and
sbb
jecxz
je
pushf
cmp
cli
xchg
out
test
loopne
rclb
push
push
push
iret
imul
sbb
in
das
xor
cmp
mov
pop
inc
adc
sar
sti
cmpsl
adc
sarl
sti
push
cs
mov
xor
mov
sbb
jecxz
cmpsl
xchg
adc
ficoms
test
inc
lret
or
sbb
les
nopl
iret
mov
push
mov
cmpsb
inc
addr16
inc
jg
fisubrl
test
jbe
jmp
push
adc
lds
ljmp
sub
jnp
in
shlb
inc
push
dec
adc
subb
cmpsb
sbb
gs
rolb
push
lock
xchg
rorl
pop
scas
cmp
lret
out
mov
jo
imul
imul
adc
fistpl
mov
inc
add
cmp
mov
add
leave
inc
stos
movsl
test
sti
sub
mov
aam
ret
jns
insb
out
push
and
jae
dec
mov
pop
shl
xor
mov
push
push
sbb
mov
pop
out
jmp
bound
xor
es
repnz
test
nop
into
leave
aam
and
mov
test
pop
sub
int3
shll
jg
mov
lds
add
xchg
mov
insl
fisttps
jl
sbb
js
mov
xor
and
aas
sub
jle
add
lahf
lods
dec
mov
sub
mov
cmp
fisubl
test
fwait
push
mov
ret
and
jb
xchg
inc
in
out
xor
adc
mov
dec
mov
xor
push
dec
lea
jl
inc
mov
mov
lods
sti
jne
shll
fbld
cmp
arpl
cmp
sub
fists
push
out
adc
and
lods
icebp
adc
xchg
inc
xor
cmp
andb
repnz
adc
std
mov
jb
std
lahf
cmp
mov
cmpsl
adcl
cmpsb
or
cmp
xchg
add
xchg
dec
inc
int
cmp
test
xchg
stos
adc
ds
adc
int3
cmp
sbbb
jb
mov
inc
sub
cmc
pop
test
fildl
stc
mov
pop
mov
push
sti
or
mov
js
pusha
pop
inc
jmp
out
or
test
punpcklbw
pop
cltd
mov
sub
ss
jbe
push
fcmovnu
push
mov
es
lods
lea
add
dec
inc
adc
icebp
stos
sub
push
scas
push
movsl
xor
es
shlb
in
icebp
add
aas
dec
in
notb
fisubrl
enter
or
mov
cmc
inc
push
mov
scas
lods
out
hlt
daa
daa
test
lock
in
inc
jmp
ret
testb
push
cmp
jbe
rcll
stos
fdivrl
les
pop
test
in
mov
cmc
sbb
mov
mov
sbb
mov
mov
enter
and
dec
out
jns
adc
inc
sbb
sbb
jae
shll
adc
inc
jns
dec
jo
lds
bound
popa
mov
out
je
fstpl
ds
js
scas
jmp
je
adc
shrl
ljmp
mov
and
push
jnp
and
xchg
push
rcr
mov
cltd
mov
push
out
mulb
cmp
inc
adc
std
dec
dec
jae
push
inc
jo
rorl
add
cs
dec
and
cmp
jo
outsb
adc
fmull
jp
or
out
mov
mov
adc
cld
mov
and
mov
adcl
xor
sub
dec
es
jo
das
jg
or
repnz
add
sub
or
fs
jmp
int3
rorb
cmp
sbb
fldenv
loop
jp
int3
shl
cld
or
insb
jnp
dec
jge
mov
roll
push
push
loopne
sti
fidivl
scas
std
mov
sbb
ds
sub
popf
or
pop
xchg
es
movsb
nop
movsb
inc
in
aas
ds
pushf
mov
aaa
xor
jg
pushf
test
mov
loop
xchg
fsubrl
pushf
daa
mov
mov
js
loope
add
sti
gs
pop
test
xchg
or
adc
pop
mov
in
dec
mov
out
std
mov
cli
push
dec
daa
mov
mov
jo
or
fwait
pop
stos
outsb
cmp
enter
les
sbb
test
xor
mov
jbe
jmp
mov
mov
pop
repz
or
insl
or
jae
cmp
mov
leave
rclb
sub
push
aam
jno
xor
hlt
xor
and
xor
nop
loopne
inc
shll
xchg
xor
dec
mov
mov
negb
sbb
bound
adc
gs
in
sbb
mov
fdiv
or
xor
dec
outsl
sahf
in
or
inc
mov
out
cmp
jns
adc
loop
rcrb
dec
int3
mov
stc
or
and
or
and
in
lret
xchg
or
clc
pop
jo
xor
pop
in
inc
fs
pop
movsb
mov
adc
cmpsl
call
and
test
movsb
jmp
fcoml
rcrl
mov
inc
scas
call
add
rcl
fsubl
les
sub
clc
and
dec
leave
jb
inc
add
mov
jp
mov
jl
sub
or
loopne
leave
inc
dec
loop
mov
test
sub
outsb
lds
mov
lahf
push
pop
push
fs
push
push
or
add
mov
scas
sbb
xor
inc
pop
jns
push
mov
jg
scas
xchg
xchg
out
pop
mov
ds
fstps
cmp
xchg
pop
jb
mov
sub
aam
clc
addr16
and
ret
cwtl
sub
repnz
mov
cmc
cli
and
sub
pop
cmp
xchg
push
faddl
inc
sub
add
sbb
mov
mov
or
ds
test
xor
outsl
out
xchg
inc
mov
outsb
and
imul
sbb
cld
adc
xchg
into
dec
add
lret
aas
mov
lods
lds
pop
ds
fwait
test
sti
mov
mov
xlat
xchg
ret
pop
jns
icebp
ret
orb
mov
xchg
add
mov
mov
mov
and
jecxz
mov
sub
and
fwait
test
sub
pop
jb
sahf
push
ret
mov
shll
popa
popf
and
scas
fidivrs
xlat
jb
mov
xchg
sub
test
ss
orb
pop
aad
std
cmp
fsts
flds
xor
pop
jbe
andb
push
xchg
aas
mov
sub
fldenv
movsl
xor
pusha
adc
aaa
mov
mulb
pop
lret
dec
insb
jb
inc
paddusb
repnz
cs
arpl
jo
cli
lcall
adc
bnd
jb
or
loope,pn
adcb
lds
cmpsl
jl
mov
mov
push
ja
or
fcmovbe
je
mov
cmpb
add
into
aad
xor
mov
popa
push
popf
out
negb
enter
mov
or
adc
mov
jge
and
xorl
subl
jb
inc
imul
ljmp
iret
sub
or
pop
subl
jmp
jae
jecxz
je
repz
push
test
arpl
in
sbb
outsb
movntq
popf
cltd
mov
in
pop
jge
rorl
daa
js
dec
add
insb
shl
je
xchg
push
rclb
rclb
sub
jns
dec
fs
push
cmp
pop
jo
xchg
clc
add
and
ret
cs
mov
and
movsb
mulb
test
mov
call
cld
sbb
hlt
fimull
lret
mov
pop
add
jp
xchg
test
mov
shll
sub
xchg
rcrb
iret
sub
sarb
rcrl
aaa
mov
mov
push
xor
std
icebp
mov
cmp
test
cmp
pop
xchg
jnp
fnsave
pop
leave
push
mov
outsb
dec
adc
xor
xchg
lret
jecxz
mov
jecxz
sub
cmp
mov
aam
divb
pop
mov
pop
movsl
nop
mov
cmpsl
scas
or
cmp
jo
cli
mov
fwait
add
push
je
rcrl
int3
add
dec
pusha
fisubrl
int3
faddp
hlt
rcll
lods
repnz
adc
sbbb
pop
and
mov
sbb
mov
bound
or
pop
lea
pop
mov
adc
cmp
pushf
xor
and
mov
rclb
fsubrl
.byte
out
.byte
and
test
mov
and
rolb
insl
stc
in
outsl
jg
cmpl
jbe
jnp
loope
adcl
das
jns
aam
xor
sub
minps
adc
sub
pop
in
jl
jo
sarb
pop
cmp
jge
scas
jp
clc
sbb
dec
loopne
xchg
sahf
mov
mov
shll
shl
fnstenv
cmpsb
dec
jl
mov
fldcw
mov
jmp
lods
sub
sti
or
fstps
dec
iret
pusha
das
loopne
scas
xor
lahf
cmp
push
dec
out
frndint
cmp
aaa
dec
pop
int
xor
push
mov
push
push
push
xchg
inc
xchg
add
leave
jle
cltd
nop
aaa
stos
aad
jno
xor
add
sbb
jge
inc
push
cmp
adc
shrb
xchg
or
pop
sub
scas
xchg
sub
dec
xorl
xor
push
cmp
and
dec
jmp
loope
mov
and
fisttpl
dec
lret
movsl
xchg
jge
fsubrs
call
mov
jbe
inc
mull
adc
push
das
test
outsb
and
cmp
outsb
mov
imul
into
fs
cltd
mov
push
add
fisubrs
jne
mov
fucomp
loop
mov
push
push
in
iret
sbb
fs
or
pop
jp
arpl
and
add
dec
mov
test
clc
pop
mov
insb
mov
sbb
nop
rorb
mov
xor
mov
jmp
cli
orb
loop
rcrb
inc
pop
push
mov
mov
outsb
aad
xchg
xor
xchg
xor
push
cmp
sub
mov
stos
sarl
pop
pop
mov
int3
loope
shll
les
push
mov
pop
push
sub
mov
xchg
push
sub
sbb
jo
into
lret
jb
cmpsb
outsb
in
cmpb
or
jno
add
mov
jns
sbb
fcoms
sbb
inc
cmpsl
sbb
lds
mov
xchg
in
out
scas
xchg
cmc
inc
scas
cmp
or
int3
in
push
push
inc
dec
adc
cmp
lock
outsb
jno
leave
mov
sbb
xor
jbe
mov
pop
sarb
jno
mov
enter
lret
int3
xchg
sub
mov
mov
andb
sbb
in
pop
icebp
movl
xor
loop
xor
ror
cwtl
mov
cmp
push
cltd
mov
push
push
leave
gs
subb
add
lret
jl
push
mov
xor
in
and
fdivrl
adc
xchg
xchg
pop
xlat
cmpsl
int3
in
enter
push
mov
outsb
cmc
ss
fdivl
pop
bound
fistpl
and
test
rolb
mov
stos
inc
movsb
lcall
jl
xchg
pop
push
xchg
dec
adc
cmp
into
dec
inc
dec
bound
push
cs
or
and
and
add
pop
mov
pushf
ficoms
adc
jb
push
mov
mov
aaa
inc
xchg
ret
dec
clc
xchg
iret
mov
test
adc
inc
test
jle
pusha
mov
xchg
cmp
push
sbb
cmc
and
outsb
cli
push
inc
aad
imul
adc
adc
cld
sub
xor
dec
loopne
sbb
rol
inc
jp
outsb
xchg
dec
loop
push
mov
jecxz
sar
push
mov
and
mov
jae
aad
sbb
mov
icebp
xchg
jle
mov
xchg
ds
popf
ror
sbb
fildl
imul
add
jno
ss
xor
jecxz
jns
mov
xchg
leave
sahf
sbb
xchg
in
das
jp
cmp
jnp
pop
push
jnp
clc
mov
out
mov
rcll
aam
cmp
les
fcmovbe
xchg
fwait
xor
dec
xchg
sbb
push
dec
or
enter
out
test
addb
jne
jg
push
mov
cmp
cwtl
sti
push
imul
mov
andl
test
xchg
sub
pop
testl
mov
and
pop
sbb
aam
pop
mov
lods
xor
test
fmuls
cmp
inc
lcall
pop
fisubl
xchg
movsb
xchg
sbb
mov
shlb
xlat
dec
clc
imul
hlt
xchg
inc
adc
in
dec
xchg
test
test
jbe,pt
movsl
inc
sbb
ds
aaa
testb
sub
add
cmp
loopne
in
mov
and
bound
das
inc
ror
push
add
cmpsl
mov
jp
sti
and
jp
in
test
mov
ret
push
or
in
mov
or
cltd
xlat
sbb
call
call
mov
pusha
mov
xchg
mov
push
xor
stos
inc
vsqrtps
in
fisubl
sub
js
xor
lret
mov
movsl
mov
xor
cmp
pop
inc
jne
and
in
test
lret
lahf
mov
adc
add
jae
xlat
scas
movsl
pusha
aaa
inc
iret
jns
imul
std
lea
adc
outsb
test
lods
ja
hlt
mov
add
fcom
push
inc
scas
push
xor
inc
test
adc
icebp
sub
pusha
adc
inc
out
ret
adc
lret
jecxz
push
jae
aam
add
leave
aad
cmc
jb
xor
add
mov
push
push
xor
add
frstor
filds
lods
xor
daa
sbb
jp
out
xor
and
in
imul
push
int3
enter
das
pop
xlat
fstpt
push
push
jge
cmp
lock
loopne
sbb
or
movsb
or
js
out
xchg
push
inc
test
dec
xor
jl
pop
jne
mov
dec
xorb
push
int3
mov
lods
cmpsl
orb
mov
movl
cmc
stmxcsr
inc
push
mov
pop
inc
gs
adcl
iret
inc
sbb
shlb
push
jne
js
sub
scas
sub
in
fwait
and
cmpl
push
int3
ret
inc
mov
out
xlat
pop
pop
inc
fidivs
xchg
jge
add
mov
add
xchg
xor
cltd
jp
popa
hlt
lret
lock
add
data16
jmp
sbb
sub
testb
dec
icebp
sbb
loopne
addr16
lods
cmpsb
sub
xchg
in
pop
stos
loopne
lock
mov
insl
adc
jmp
jo
aas
push
adc
enter
loop
mov
xor
pop
jle
mov
pop
nop
mov
aad
mov
je
and
aam
out
ds
xor
jns
adc
adc
inc
mov
imulb
xchg
jb
idivl
movsb
enter
mov
arpl
push
or
dec
jo
lahf
int
aad
sbb
shrl
fcompl
daa
and
xor
ja
sub
mov
cld
fcompl
icebp
add
push
pushf
ret
jns
mov
lds
ja
repz
pop
mov
push
clc
jmp
clc
xchg
add
xchg
test
stc
call
jae
add
imul
push
rcrb
jne
mov
jecxz
enter
adc
loope
xorps
pusha
mov
std
or
insl
push
jae
shl
stos
cmp
inc
mov
repnz
imul
jno
push
addr16
sbb
fwait
inc
xchg
add
pop
outsb
sbb
add
mov
sub
stos
cmp
xlat
mov
push
push
sub
ret
mov
mov
push
aaa
dec
or
adc
scas
jnp
mov
fcomps
movsb
pop
test
call
iret
sbb
popa
hlt
lods
cmp
ja
cmp
add
cmc
pop
ret
in
mov
xlat
jno
in
loop
icebp
mov
jl
sbb
add
jne
addb
mov
and
stc
xor
mov
mov
popf
testb
mov
mov
and
mov
pop
push
adc
or
out
sub
cmpsl
rorl
xchg
sbb
scas
and
push
int
push
pop
lahf
jne
add
lods
dec
adc
xor
aam
icebp
mov
jmp
jb
dec
xchg
sbbb
xor
lcall
push
cmpsl
dec
push
mov
add
sub
sub
aas
sbb
pusha
xchg
and
or
ja
push
fs
cld
xchg
jmp
pop
jo
stos
sub
js
sbb
aad
xchg
ss
jae
loope
movl
dec
mov
or
and
or
test
mov
adc
sbb
jp
mov
out
jge
inc
sub
xor
mov
cmp
inc
add
inc
xor
mov
jae
sub
shlb
push
mov
aad
mov
and
imul
adc
inc
push
notl
cli
jl
add
mov
hlt
incb
inc
nop
jl
iret
cmpb
pusha
mov
add
pop
movsl
pop
adc
adc
mov
push
cmp
std
iret
mov
int3
xor
and
add
in
iret
inc
xchg
in
or
mov
in
in
out
sub
adc
pop
jp
sbb
xchg
das
xchg
xor
daa
cmp
and
lret
push
out
or
lods
xlat
outsb
lock
push
fisubs
dec
test
mov
fs
push
mov
or
data16
mov
pop
mov
out
add
loop
cmp
jne
insb
mov
sub
xchg
aas
mov
scas
int3
mov
mov
lahf
mov
mov
movsb
pusha
jl
sub
fnsave
adc
ss
fwait
ds
push
in
add
inc
sub
mov
xchg
fcompl
inc
loopne
mov
add
push
add
mov
shll
jno
rorb
out
cmp
sub
push
cmp
mov
std
jecxz
ret
loop
cmpb
outsb
mov
lcall
imul
das
cld
lret
arpl
ret
aaa
and
outsb
jge
mov
insb
mov
jno
pop
jns
inc
pop
jmp
popa
push
lcall
mov
mov
xchg
jne
js
adc
aad
jge
push
mov
jne
fbld
push
inc
jecxz
mov
test
dec
sbb
int3
jmp
rcrb
sbb
daa
push
and
lds
call
sub
fwait
jp
imul
mov
xchg
psadbw
push
pop
pop
cld
outsl
aaa
xchg
pop
adc
jmp
bound
stos
lock
cmp
lods
call
bound
mov
push
jb
mov
mov
mov
xor
mov
adc
pop
mov
call
xor
cld
stos
xchg
cmp
addr16
push
push
mov
adc
push
or
cmc
mov
mov
les
mov
ds
push
push
mov
xchg
loopne
cld
in
push
and
icebp
lods
push
cmp
push
repnz
mov
shll
xchg
jg
mov
leave
push
pop
test
pop
or
jno
dec
iret
lret
sub
fsubrp
mov
sti
dec
adc
fistps
fwait
loopne
test
int3
or
pop
ja
dec
or
xchg
sub
add
fwait
movsl
mov
pop
mov
xchg
inc
shlb
sti
cmp
mov
xlat
out
test
mov
and
and
inc
push
js
pop
in
dec
iret
out
repnz
cmp
insl
add
pop
les
pop
scas
sarl
out
xor
out
popf
inc
lds
sti
scas
mov
or
ret
test
cltd
fwait
mov
xchg
push
push
jo
inc
mov
stos
enter
and
adc
cmp
inc
shl
dec
jecxz
mov
inc
fs
leave
mov
mov
cmpsl
mov
stos
es
jmp
int3
daa
jl
mov
adc
and
pop
or
xor
rcrl
scas
xchg
mov
out
xchg
cmp
jge
pop
pusha
inc
insb
cld
out
push
out
movsl
call
out
push
sub
sub
sbb
mov
pop
dec
mov
stos
adc
and
scas
mov
xchg
ss
imul
push
mov
jge
sub
inc
adc
mov
ret
push
mov
orb
mov
cmp
xor
flds
mov
gs
add
sbb
in
push
jbe,pn
insl
fcomps
aad
mov
mov
dec
jne
jmp
outsl
loope
loope
xchg
cmp
jae
cmp
xlat
ret
xchg
sbb
dec
jae
jl
cmp
out
jg
test
enter
into
int3
add
in
repnz
and
push
jns
sub
push
test
andb
jns
xchg
cltd
sub
add
mov
mov
imul
fidivs
insb
addr16
pop
push
pop
dec
sub
fimull
loopne
or
repnz
lods
test
add
sti
cltd
subl
int
incb
mov
pop
aam
repnz
mov
dec
dec
sub
pop
popf
mov
fnstsw
mov
out
pop
mov
fadds
push
cmp
in
push
mov
iret
inc
push
push
ljmp
fs
fdivrl
jl
into
popa
out
call
fwait
sahf
jle
js
icebp
les
jge
sbb
push
dec
lock
push
and
popa
add
sbb
jecxz
push
and
pop
add
aam
rcrl
adcl
adc
iret
in
cmp
movsl
lds
scas
out
pop
cmp
mov
or
or
std
jno
mov
subb
jecxz
mov
pop
push
out
dec
sub
mov
jb
imul
out
sub
sahf
dec
popa
mov
pusha
push
and
ja
enter
fwait
push
dec
pop
mov
mov
inc
add
cmp
rcl
dec
sarl
pop
in
jns
iret
aas
mov
xor
xchg
jmp
jle
jnp
repz
push
aam
mov
or
lahf
test
out
aas
sbb
jae
mov
ds
fucomip
inc
inc
sbbl
adc
mov
sub
cmpsb
daa
es
lcall
ffree
jmp
std
fnsave
xlat
mov
dec
cmc
jb
mov
push
jmp
pop
add
nop
jg
les
dec
mov
lods
nop
lods
in
test
insb
jmp
roll
test
loopne
sbb
sub
sahf
xchg
and
mov
fwait
gs
or
roll
and
xlat
push
or
pop
call
int
ja
xor
push
and
clc
into
push
adc
xor
adc
adcl
dec
les
pop
sub
data16
cs
imul
jmp
push
or
mov
xchg
jb
movsb
jnp
das
imul
and
pop
inc
mov
fs
push
ds
clc
dec
pop
sub
sub
imul
popa
mov
pop
mov
out
sub
mov
leave
fwait
mov
xor
fst
sub
js
inc
lock
ds
adc
pop
add
aad
test
and
lds
or
loop
mov
in
stos
dec
sub
fldl
adc
popf
jno
sbb
dec
int
std
inc
daa
outsb
jo
mov
ds
aad
pop
sbb
add
nop
mulb
dec
or
jg
fdivrl
cmpsb
ja
mov
les
sub
jg
xchg
push
andl
in
adc
pushf
in
mov
push
mov
sub
mov
dec
mov
mov
sbb
xchg
lock
jp
sub
hlt
mov
jmp
in
mov
or
xchg
mov
sbb
std
inc
aaa
and
jnp
addl
icebp
fcmovb
fisubrl
mov
in
adc
loopne
sub
and
leave
pop
aaa
mov
xor
adc
sub
daa
add
cmp
mov
mov
xor
sbb
aas
sub
push
imul
stos
jne
lea
jo
xchg
or
dec
push
adc
add
lods
inc
jmp
mov
xor
sub
popw
nop
loope
xlat
mov
call
int
jae
ret
iret
sbb
sbb
int
out
fidivs
lds
mov
mov
mov
out
into
ja
popf
in
js
call
pop
xlat
dec
negl
push
aam
shlb
out
loop
dec
sarl
mov
nop
ret
xchg
xor
jno
cmp
mov
int
push
negl
leave
out
push
je
jno
ds
dec
scas
mov
add
xchg
aad
test
adc
push
lret
inc
xor
mov
ficompl
and
insb
movb
mov
xchg
jmp
cmpsb
lahf
push
jno
push
or
out
sub
arpl
in
xor
mov
repnz
loope
mov
mov
ljmp
sbb
xchg
sub
xor
fmuls
mov
cmpb
pop
out
xor
rorb
mov
add
cmpsl
inc
push
xor
bound
add
mov
data16
jnp
adc
sbbb
movsl
sbb
mov
mov
push
inc
fsts
adc
lock
cmp
sahf
jle
imul
xor
mov
std
jg
or
push
or
mov
push
push
cld
lds
and
pop
addb
fxch
mov
andl
aad
ja
pop
dec
cld
sbb
lock
push
adc
xor
xchg
add
inc
dec
inc
push
sbb
lret
mov
xchg
pop
xor
cmp
adc
jno
outsb
dec
mov
push
aas
loop
jl
add
lret
test
inc
pop
pop
test
fsubs
sub
jae
mov
add
movb
xor
or
call
jmp
jp
inc
outsb
mov
push
icebp
cmp
add
push
xchg
xorb
adc
cmc
lret
test
and
adc
sbb
outsl
fs
pop
cmp
add
subw
mov
iret
je
bnd
push
out
push
js
jne
pop
repz
lods
mov
stc
cmp
jl
cld
es
das
dec
add
scas
inc
filds
imull
push
mov
dec
xchg
pop
mov
push
cmp
jg
mov
cmp
xchg
xchg
cmp
cmp
inc
aad
lods
jnp
push
aas
repnz
add
jno
ss
dec
cmp
dec
mov
adc
push
xchg
aad
sahf
lds
xchg
call
mov
pop
ss
movsb
cltd
aaa
push
mov
bound
or
out
mov
fcompl
lods
daa
push
fmull
pop
mov
or
ret
adc
mov
icebp
adc
rcrb
add
stc
popf
ds
xchg
pop
push
pop
sti
mov
or
insb
cmp
dec
rorb
jno
push
adc
lods
stos
loope
jb
gs
lret
hlt
repz
adc
jbe
adc
fcmovbe
add
push
fsub
inc
out
lcall
sub
adc
aam
out
call
pop
mov
xchg
adc
test
or
adc
lcall
jo
je
and
sub
loopne
out
in
and
insl
cmc
adc
bound
mov
dec
aad
into
jns
xchg
inc
or
push
popf
xchg
mov
xchg
lret
enter
les
and
xchg
xchg
adc
add
ret
and
cmp
jno
mov
addb
stos
push
aas
int3
or
xchg
adc
xchg
inc
pushf
push
clc
scas
lret
pop
cmp
pushf
in
xchg
negl
jle
notb
adc
push
add
rorl
stos
ficoml
or
mov
mov
dec
insl
xor
inc
mov
scas
int3
jbe
aaa
push
xor
inc
cmc
mulb
lret
nop
shll
lods
lahf
mov
call
sahf
or
xchg
add
dec
fisubs
xlat
setle
jne
adc
adc
jg
ljmp
pusha
addr16
jns
dec
inc
daa
and
mov
aas
fnstsw
test
jmp
loopne
aam
pop
cli
sbb
dec
lods
pop
adc
inc
fdivs
dec
xchg
pop
mov
pop
test
lcall
enter
lret
movzbl
insl
inc
int3
movsl
shll
mov
sub
fwait
leave
lret
cmp
xor
ds
adc
xor
test
xor
cmc
cmpsl
and
add
mov
jo
xor
ficoml
jl
orb
ret
test
int
or
fwait
jno
mov
shrb
cwtl
push
sahf
mov
in
and
push
je
push
popf
ficompl
int
mov
xchg
hlt
mov
pop
in
push
add
inc
out
stc
jecxz
fistl
fmuls
cs
jbe
and
test
jge
roll
dec
mov
and
push
in
shrd
lahf
or
fucomp
adc
imul
push
clc
mov
stc
adc
outsb
jl
fcoms
enter
xor
out
inc
jno
cs
cwtl
outsl
jmp
or
inc
lea
mul
adc
mov
test
and
mov
mov
idivl
cmp
aas
jne
sub
add
mov
cmp
pop
push
mov
mov
pushf
mov
mov
cli
adc
pop
pop
adc
push
outsl
push
mov
sahf
push
cmpb
js
imul
stos
icebp
es
pop
stos
sub
lods
js
mov
mov
cmpsl
out
into
dec
cli
gs
dec
icebp
xor
ret
pop
mov
cmp
or
pusha
inc
es
mov
sti
push
push
arpl
lret
pop
xor
fldt
fbld
add
push
scas
add
gs
sahf
jne
pop
mov
sbbb
movsb
ja
cmp
outsb
or
push
sbb
scas
insl
mov
push
jne
js
mov
movsl
or
stos
add
xchg
clc
mov
jns
inc
mov
imul
jg
fisttpl
test
xor
sbb
andl
mov
hlt
pop
pop
iret
and
or
lds
mov
sti
xchg
mov
sub
icebp
mov
pop
pop
outsl
andb
loop
imul
xor
add
pop
jmp
or
xor
stos
ret
pop
imul
mov
popa
push
movsl
outsl
and
pop
mov
xchg
xor
sti
mov
aas
jg
sbb
sarb
or
add
ret
mov
adc
mov
inc
sub
add
push
sbbl
lods
mov
push
cmp
push
inc
xchg
lods
movlps
jecxz
cmp
lods
arpl
jmp
mov
or
fists
mov
shlb
pushl
arpl
xchg
fisubrl
movsb
outsl
xor
je
and
fwait
adc
xor
or
jbe
adc
sbb
push
clc
sbb
mov
scas
mov
adc
out
aaa
xchg
xor
sub
sar
mov
pop
rclb
loopne
pop
gs
int
imul
mov
int
push
call
nop
shll
mov
jnp
jnp
adc
mov
xchg
sub
adc
int3
pop
add
movsl
aad
bound
pusha
dec
mov
ret
ret
or
or
es
lds
push
test
adc
cmpsb
jo
xor
mov
adc
mov
adc
or
stc
cwtl
xor
mov
sbb
arpl
mov
out
mov
movsl
push
call
insl
ficoms
sahf
pushf
popf
cmp
push
sub
or
push
sub
cmp
inc
sti
lods
xor
sub
imul
popf
lds
pop
out
push
clc
xchg
call
jg
xor
xchg
insl
jp
and
lret
xchg
mov
testl
add
sahf
rcrb
ds
les
dec
imul
daa
pusha
std
fldl
adc
sbb
dec
notl
inc
mov
lods
std
pop
mov
jnp
cmp
roll
or
cmpsl
add
mov
jecxz
outsb
adc
clc
sub
cs
and
mov
jae
add
and
ljmp
bound
lods
inc
jl
and
mov
les
pop
push
decl
fs
test
stc
mov
add
and
into
andb
mov
inc
pusha
jnp
sub
loopne
sti
lods
cmp
inc
aam
orl
add
xchg
jmp
movsl
pop
cmp
fs
outsl
mov
add
aam
or
or
and
lods
test
xchg
jnp
add
outsl
mov
jle
js
push
out
push
mov
or
imul
mov
pop
sub
nop
xor
fcmovne
add
inc
fiaddl
pop
cmp
outsl
jnp
test
lods
xchg
mov
lock
mov
adcl
and
pop
sbb
stos
dec
cmpsl
clc
xchg
lcall
xor
repz
sub
test
cmpsb
stc
lods
mov
cmp
mov
scas
aad
mov
inc
or
pop
inc
sbb
test
pop
mov
ljmp
sbb
sbb
xchg
lahf
xchg
inc
pop
add
mov
test
lret
cmc
push
jl
gs
sahf
inc
push
or
mov
and
push
lds
sbb
jmp
lods
inc
ret
ja
sbb
sahf
and
push
xlat
pop
out
or
sub
ds
loop
fisubrl
js
insb
lret
movsb
rcll
ds
xor
imulb
cmpsb
cwtl
outsb
repz
lcall
jle
xor
dec
xchg
and
out
lds
pop
push
mov
jle
sub
call
popa
ret
mov
insb
jmp
sub
stos
test
xor
out
jns
add
xchg
jl
jns
enter
stc
sub
cli
jb
dec
and
mov
mov
out
push
push
mov
mov
mov
push
or
mov
jmp
addb
inc
fwait
rcl
jae
push
or
test
mov
and
test
jae
and
or
gs
sbb
lea
xor
ret
push
idivb
push
mov
dec
jl
js
lock
leave
mov
fisttps
jno
roll
das
xchg
out
mov
aas
int3
mulb
push
cwtl
stc
imul
aad
jno
xchg
cli
xor
lods
aas
jo
in
rcrl
mov
jo
outsl
sub
jb
scas
xchg
dec
pop
jl
or
cmp
jmp
lea
sbb
sarl
jle
fcmovu
adc
lock
lcall
imul
sarl
out
add
lods
cmp
jae
mov
orl
cmp
xchg
mov
push
sar
sub
ret
adc
in
xor
lds
fchs
xchg
mov
push
ficoms
and
sarl
inc
dec
mov
and
ja
jg
mov
jo
xorl
test
cs
jnp
pop
xor
dec
in
and
dec
lcall
out
stos
xor
sbb
movl
mov
mov
mov
int
adc
xchg
int3
pushl
mov
loop
lds
cmc
pop
lock
add
ljmp
add
roll
sub
insb
cli
xor
arpl
or
scas
daa
pushf
pop
cmp
sti
cli
cltd
jns
insl
shrb
scas
jo
mov
orl
fstpt
pushf
mov
mov
mov
int3
mov
test
fidivl
cld
lods
jl
sbb
sarb
lods
dec
push
enter
and
push
or
inc
das
into
add
xchg
mov
pushf
and
jne
out
in
xorl
jecxz
into
pushf
pop
add
cli
arpl
pop
mov
out
fwait
lret
rorb
adc
insl
jns
cmp
mov
pop
cmc
and
mov
adc
adc
sub
add
aaa
and
in
rolb
fdiv
jbe
mov
dec
repnz
mov
lods
push
xchg
cmp
subb
xchg
aam
push
dec
or
adc
mov
push
cmp
adc
xchg
sub
pop
and
test
xchg
enter
popa
call
sbb
aad
cmpl
into
or
cltd
xorb
in
sub
pop
pop
mov
jo
push
icebp
or
mov
popf
push
adc
add
jp
push
xor
sub
cs
cmp
jle
push
dec
mov
je
sub
add
xor
push
ja
sub
jecxz
fprem1
cs
push
into
aad
pusha
push
and
lods
or
push
lock
ss
jns
inc
call
shll
and
mov
sbb
and
adc
push
cld
sbb
pop
dec
popf
pop
jecxz
jmp
mov
dec
mov
sbb
stos
jb
inc
ltr
in
jb
popf
push
xor
cmp
in
nop
mov
lods
xlat
or
cltd
aad
jbe
lods
add
xchg
mov
mov
sub
test
xor
ja
sub
testl
and
out
dec
jno
adc
sub
in
jp
flds
mov
std
in
ja
outsl
fnstsw
rorb
ror
sub
sti
dec
cli
or
fcmove
testb
dec
cmpb
setne
dec
movsb
sub
arpl
in
push
or
nop
add
call
lcall
je
sbb
or
cld
fdivl
mov
add
loop
mov
adc
mov
andl
add
rol
nop
shlb
sub
or
ss
or
sub
cmp
adc
xor
cwtl
dec
jb
mov
lods
mov
movsl
leave
clc
or
movsb
insl
mov
dec
add
pop
into
adc
jp
pop
test
cmpl
jns
ror
movsl
mov
mov
mov
lahf
jle
adc
mov
outsb
dec
mov
dec
ds
andb
fwait
mov
jae
push
in
pop
mov
std
in
test
sbb
nop
fdivl
ret
fistl
shrb
imul
lret
fcoms
xchg
xchg
sbb
jg
jne
lcall
sbb
push
js
mov
inc
dec
cmp
jae
dec
or
mov
sbb
leave
mov
fwait
xor
xchg
mov
imull
in
cli
daa
into
cmpsl
dec
inc
sbb
mov
std
add
in
inc
test
sbb
mov
or
xchg
mov
cmc
mov
push
stc
and
xchg
mov
inc
inc
jecxz
insb
pop
cwtl
inc
pop
xor
dec
out
mov
addr16
or
arpl
mov
pop
scas
outsb
or
mov
or
xchg
sbb
mov
xor
test
jp
enter
aad
scas
bound
imul
sub
lret
outsl
leave
pop
mov
pop
aas
rorb
imul
mov
cmp
bnd
or
sahf
or
add
scas
push
cmpsb
rorb
fiaddl
popf
movsb
xor
in
jle
and
int3
jg
mov
jb
fsubrp
sbb
xor
sahf
movsl
dec
or
les
int3
fisubrs
sbb
mov
cmp
sti
cvtps2pi
cmc
ret
orl
jb
inc
adc
jnp
push
xchg
daa
jmp
arpl
out
or
icebp
jns
popl
ja
scas
sub
pop
xchg
lea
jecxz
ss
movsb
ja
cmp
inc
inc
pop
jbe
mov
mov
test
jne
dec
inc
fwait
hlt
jp
mov
xchg
lods
dec
mov
loop
cmc
rcrl
mov
mov
in
jno
mov
inc
enter
push
mov
testb
lods
jno
movsl
shrb
hlt
loop
fs
add
and
in
ss
and
push
fbld
pop
inc
sub
jb
push
enter
sbb
icebp
jae
fwait
cmpb
dec
xchg
pop
ja
xlat
mov
mov
rcrl
shlb
in
adcb
pcmpeqw
xchg
into
or
inc
sbb
pop
mov
add
push
sahf
xor
fcomip
jmp
js
xchg
test
jo
call
stos
mov
mov
cmp
jns
jo
js
outsb
inc
pop
cli
out
cmpsl
ja
out
fistl
cmp
mov
cli
dec
idivl
adc
dec
adc
lahf
lock
cli
movsb
push
insl
inc
inc
mov
lahf
cmp
decb
adc
sbb
lret
sub
mov
and
inc
sarl
cmp
cwtl
cmp
pop
xchg
inc
lret
aaa
add
pop
and
out
fisttps
jno
and
push
es
cltd
adc
fistps
outsb
jle
les
and
sub
dec
and
adc
pop
lcall
and
fwait
out
xor
cmp
jmp
or
sub
sub
inc
outsl
sub
pop
out
jecxz
in
push
mov
shrb
lods
aad
cli
mov
jmp
into
lret
lcall
jp
rcll
push
add
rolb
mov
mov
push
aaa
xchg
icebp
cmp
push
js
xchg
stos
lock
xchg
lcall
ds
sbb
pop
sub
cmp
or
push
test
nop
inc
insb
andps
pop
xchg
je
insw
adc
loop
ret
subl
movsb
data16
jmp
test
pcmpeqw
and
or
adc
rol
mov
dec
inc
aas
jae
cmp
dec
clc
mov
sbb
loopne
push
mov
push
jns
mov
fidivl
mov
das
adc
dec
outsb
mov
mov
sbbl
xchg
aam
imul
pop
test
test
xchg
ljmp
shl
sbb
mov
mov
movsb
repz
dec
ret
xchg
lea
cmp
and
fcoml
dec
popf
sub
sub
push
fstp
daa
in
jmp
dec
mov
pop
push
mov
fstps
add
dec
or
sbb
call
or
movsl
mov
popa
test
xor
je
pop
xchg
sti
cltd
xor
pop
dec
push
ss
and
fstl
scas
icebp
jns
add
adc
enter
pushf
stos
leave
and
jbe
dec
popa
xor
push
cmp
and
bound
push
cmp
dec
lcall
push
and
push
sti
lods
jnp
mov
sbb
jnp
into
xchg
pusha
je
cmp
pop
or
or
jbe
add
mov
jnp
jecxz
in
inc
jg
cs
ds
sub
jge
pop
mov
xchg
scas
cmp
sarb
ret
das
cmp
mov
mov
movsb
xchg
repz
fs
shl
and
scas
in
jg
jge
jp
insb
ljmp
sub
jbe
adc
sub
test
ficoml
or
cmp
scas
gs
mov
fcomps
jmp
or
mov
cmpsb
iret
ds
fs
enter
aad
jmp
and
xor
in
shlb
mov
and
push
jecxz
fdivs
fidivs
je
fstpt
pop
mov
shrl
xchg
fstpt
pop
cltd
xchg
hlt
adc
dec
xor
xor
mov
sbb
imul
push
ljmp
jns
mov
push
jmp
cmp
popf
inc
push
or
jg
push
nop
xchg
mov
in
jecxz
repz
adc
dec
fwait
stos
sarl
sub
mov
push
jl
shlb
jle
stos
je
push
adc
pop
cli
xor
jp
xchg
loopne
xor
inc
aaa
or
mov
pop
cli
repz
dec
in
movsb
jle
loop
ljmp
jne
shlb
sub
add
int
and
cmp
lds
cli
jmp
add
aaa
jbe
iret
jae
xchg
dec
or
jg
into
jb
cltd
rorl
push
push
test
test
inc
adcl
xchg
nop
lods
aas
and
cmp
xorb
sbb
cmpsb
xor
aam
dec
ret
and
loope
sbb
out
or
and
je
push
in
pop
jns
mov
add
lcall
orb
iret
out
movsl
mov
push
cmp
test
test
daa
aad
lods
jle
out
shl
xchg
bound
std
sbb
mov
pop
aas
pop
in
hlt
and
xor
shlb
test
cmp
or
cmp
push
adc
addr16
ja
adc
stos
insl
cli
scas
sub
push
sbb
or
popa
adcl
test
push
das
imul
add
jge
sbb
xchg
dec
aas
rolb
das
sahf
push
ljmp
bound
das
cmp
clc
xchg
out
stos
lods
mov
push
dec
mov
push
pop
pop
jge
sbb
cmc
dec
daa
mov
mov
arpl
insl
jne
nop
pop
mov
inc
inc
sub
push
cmp
jae
mov
filds
movsl
aam
mov
dec
jne
stc
add
aaa
or
push
push
push
ret
out
das
xchg
mov
test
pop
lds
or
and
sbb
loop
cli
pop
xor
stos
push
insl
sub
cmp
add
cmp
pop
lds
jbe
push
out
xchg
nop
int
loope
ffree
push
cmp
loop
je
jge
xor
scas
lea
inc
cli
mov
xchg
icebp
rcrb
push
push
xchg
rcrl
mov
jge
lea
lcall
adc
addb
out
pop
daa
xchg
and
mov
push
push
add
lret
mov
cmp
add
mov
push
mov
icebp
xchg
mov
xor
pop
and
cli
out
mov
inc
arpl
inc
push
cmpsb
inc
pop
push
xchg
data16
push
xchg
pop
sub
imul
add
je
icebp
enter
mov
test
dec
or
daa
andl
out
aaa
mov
mov
push
test
dec
push
add
pop
jg
push
push
popa
sub
or
jbe
adc
loope
cmp
outsb
push
and
sar
ror
ret
or
mov
mov
xchg
push
add
jbe
inc
push
data16
pop
cltd
cmp
sbb
sbb
xor
adc
and
sub
mov
cmp
jg
std
imul
inc
xor
popa
cmp
inc
xor
adc
mov
jp
pop
imul
inc
scas
lret
sub
jg
and
pop
pusha
cmp
leave
enter
and
pop
cld
mov
mov
pop
pop
cmp
test
push
bound
mov
mov
xchg
fwait
cmpsl
sbb
xchg
mov
dec
loop
das
fdivrl
sub
xor
pop
cwtl
cltd
pop
xchg
adc
pop
cmp
stos
adc
push
jno
cs
dec
or
cmp
mov
cmpsl
std
int
dec
bound
pop
cmp
xchg
rcl
and
adc
and
dec
push
imul
jl
mov
fdivrs
push
or
ljmp
mov
int
gs
dec
sub
pushl
ret
mov
clc
stos
outsl
mov
fldt
dec
xchg
mov
mov
add
cli
frstor
jecxz
pop
dec
lcall
gs
aad
adc
sub
iret
ror
scas
cltd
test
dec
pushf
in
jae
mov
adc
dec
cmp
aas
dec
pop
out
bound
pop
test
adc
push
leave
dec
out
jge
imul
ret
inc
mov
jo
xor
mov
sbb
out
pushf
push
mov
jl
fwait
out
inc
loope
inc
xor
add
dec
jb
and
add
shrl
in
xor
cmp
movsb
and
push
into
xchg
repnz
fcomps
mov
stc
mov
ret
mov
lock
xor
push
adc
mov
inc
inc
push
outsl
mov
aas
mov
lcall
sub
adc
cmc
ds
xor
sub
or
jg
loop
jbe
mov
sahf
mov
in
jno
sbb
add
dec
sbbb
inc
jle
inc
jg
rcrb
or
imul
inc
lcall
aad
lods
rcr
or
or
ja
or
add
sbb
xchg
leave
xor
outsl
push
rolb
jge
orb
pop
and
test
sub
and
in
test
popf
in
jp
adcl
sbb
sbb
xor
test
mov
xor
add
inc
push
rorb
clc
pop
stos
push
fdivr
pop
push
mulb
fidivl
adcb
or
pop
sbb
cmp
lcall
adc
push
jp
ficoms
lods
mov
jnp
xchg
mov
das
mov
scas
dec
push
aas
mov
test
loopne
movb
dec
outsl
mov
mov
test
outsl
cltd
xchg
adc
xlat
lahf
cmp
adc
jp
aaa
insb
js
fs
adc
mov
pop
xor
sbb
shll
out
fld
pop
out
push
push
push
push
mov
sub
in
adc
jb
lods
adc
mov
clc
adc
mov
popa
loopne
xor
cmp
push
and
xor
xlat
sub
lock
xorb
mov
sub
mov
sbb
inc
les
cltd
inc
int3
dec
cmc
in
or
outsb
mov
andl
sub
xor
and
loope
cmp
mov
jp
pushf
fwait
jmp
lods
mov
rcr
cs
and
cmpsb
clc
enter
jae
xor
cmp
and
scas
add
inc
mov
mov
push
adc
xchg
cld
xchg
mov
mov
inc
cs
lahf
cmp
and
mov
push
pop
in
xor
inc
mov
cli
pop
js
dec
mov
sub
or
xchg
bound
test
aas
cld
cmp
les
xchg
repz
and
mov
addr16
lods
sub
push
js
dec
push
mov
pop
into
sub
xor
push
or
pop
in
jmp
scas
jmp
dec
dec
fcmovne
jno
je
adc
and
or
test
adc
outsb
dec
int
adc
or
push
out
mov
cmc
push
lea
push
inc
dec
dec
outsb
movsb
sbb
jmp
mov
cmp
and
jg
clc
lods
mov
lret
push
arpl
inc
push
int3
lock
adc
scas
sarb
mov
adc
xchg
aas
scas
jmp
daa
mov
add
mov
out
test
divb
push
sub
rolb
test
in
js
mov
movsl
test
int
add
adc
and
xor
stos
jl
mov
call
dec
pop
sub
shll
mov
gs
mov
xchg
leave
fsubl
inc
mov
xor
out
out
xchg
les
mov
outsb
fs
test
test
out
scas
adc
cmpl
daa
cmp
mov
dec
mov
push
hlt
sahf
inc
push
xlat
push
mov
iret
sarb
subb
push
mov
sbb
out
xor
fdivl
je
fwait
es
lods
pop
push
sub
push
cmp
cmp
fildll
aad
in
pop
cmc
sub
out
outsb
mov
and
ret
add
xor
int
loop
imul
jo
and
add
loope
js
lcall
subb
or
jl
mov
jl
inc
mov
fildl
push
pop
pop
out
imul
cld
inc
repz
pop
movsl
jnp
sbb
jecxz
stc
jmp
fsubr
inc
ror
mov
lds
dec
and
ret
pop
insb
in
dec
int3
inc
out
cmpsb
mov
push
adc
pop
dec
dec
dec
pop
stos
pop
rcrl
sub
push
hlt
das
inc
xchg
into
xchg
lea
ja
mov
into
push
sbb
jno
inc
mov
xor
insb
mov
aam
and
cmp
or
mov
jle
orb
mov
adc
cmp
in
adc
js
rolb
push
out
outsl
fistl
loope
mov
inc
scas
mov
fs
pop
shrb
aad
jbe
loopne
movsb
into
ljmp
mov
add
push
and
movsb
imul
enter
sti
iret
repz
jle
setge
dec
mov
cmc
jnp
pop
movsb
int
popa
sub
xchg
cwtl
dec
sub
sub
pop
mov
pop
add
xorb
std
andb
arpl
mov
sahf
gs
aaa
mov
int
mul
fldenv
mov
pushf
pop
arpl
cmp
psubd
cli
or
mov
inc
xchg
push
ds
orl
test
mov
xchg
mov
pop
imul
sub
js
adc
insl
jmp
fs
add
sub
fcompl
sub
rdtsc
loopne
cmp
cmc
xchg
or
mov
das
aaa
push
xchg
pop
popa
pop
adc
jns
ret
cmpsl
bound
movsb
mov
push
xchg
xlat
cltd
inc
fbstp
push
push
xor
jge
pusha
sub
jecxz
mov
fistps
lock
push
data16
cmp
addr16
and
jp
lret
rcrl
in
xchg
es
xchg
sar
jbe
sbb
or
movsb
lods
push
pop
jno
pusha
jecxz
test
xchg
out
sub
push
faddl
xor
cwtl
imulb
shl
decb
test
pop
jecxz
imul
into
or
int
lcall
imul
push
std
mov
dec
cvtps2pi
jle
in
lahf
xor
lods
popa
mov
pop
mov
ds
mov
js
lea
std
inc
push
mov
xchg
dec
sbb
jno
cmp
push
pop
xchg
outsl
pop
pop
nop
xchg
stos
addb
or
push
mov
cwtl
popa
mov
xchg
xor
or
push
dec
cltd
xor
xor
or
inc
call
or
jge
je
add
xchg
sub
sbb
loop
mov
jne
sub
add
push
pop
sbb
pushf
dec
jbe
xchg
lods
fmull
pop
sub
das
pop
pop
pusha
ficoms
mov
jnp
mov
icebp
xchg
and
dec
xchg
push
bnd
mov
add
push
xchg
cmp
out
adc
outsl
cmc
xchg
jg
inc
mov
ja
dec
das
cmp
mov
and
orb
adc
inc
push
mov
xchg
fld
mov
popf
xchg
and
sahf
sar
das
mov
leave
xchg
sbb
lret
mov
xor
adc
push
cmp
push
leave
pushf
push
call
in
sbb
jle
cmp
dec
sbb
push
jl
fstpt
out
fists
popf
cwtl
icebp
int3
xor
test
and
pop
je
cli
rcr
mov
push
jns
dec
lea
mov
push
push
aad
cs
fdivl
cwtl
xchg
push
js
into
imul
add
jl
dec
push
int
adc
inc
test
hlt
loop
cmp
jb
in
jae
sbb
jge
dec
mov
jne
xor
in
and
mov
xchg
mov
movsl
add
aas
push
stc
jbe
xor
add
mov
out
roll
adc
mov
push
add
rorb
dec
fstps
sbb
jl
push
clc
in
xchg
sbb
scas
movsl
sbb
xor
js
fidivrl
mov
sub
pop
cwtl
jecxz
cmp
ret
push
sub
fwait
sbb
xor
adc
out
stos
mov
fwait
out
pop
and
lods
shlb
xchg
pop
xor
sbb
in
xor
nop
push
jb
call
jge
mov
clc
clc
rorb
mov
mov
fisttps
inc
sub
ret
or
gs
and
adc
sbb
cmp
fs
out
andb
xor
and
mov
fistpl
push
fcmove
mov
sbb
scas
lock
fistps
call
sub
xor
adc
xchg
mov
dec
mov
into
cmp
stos
stc
fnstenv
test
adc
push
adc
pop
shlb
int3
inc
ljmp
jno
lds
sub
out
jle
ret
popf
mov
insb
and
sbb
sub
pop
faddl
xchg
mov
lds
ror
dec
ret
sahf
int
jl
add
add
rclb
lock
xchg
sbb
bound
jo
mov
movsb
mov
sbb
loopne
mov
xchg
push
push
cli
js
mov
mov
jl
push
sbb
imul
notb
addl
jle
pusha
cmp
or
mov
out
out
and
mov
mov
icebp
sub
int3
inc
mov
dec
sar
ds
jne
fmuls
lret
mov
sub
cltd
jmp
sbb
push
xor
leave
dec
xor
fs
xchg
lods
jp
hlt
js
jecxz
insl
sub
mov
jbe
loope
xchg
int
in
xor
jmp
jbe
loop
mov
dec
bound
jp
iret
das
sub
ljmp
rcl
sub
push
and
popf
or
popf
mov
mov
out
and
mov
lcall
xor
jae
loope
push
fbstp
pop
lock
fwait
mov
push
xchg
fisubs
stos
xor
pop
push
mov
cwtl
addr16
mov
or
pop
aam
test
sbb
aaa
xor
andb
xor
xchg
cmp
xchg
fnstcw
dec
lods
sbb
mov
cwtl
sub
xor
fwait
or
push
ljmp
xor
stos
jbe
test
dec
push
cmp
push
std
add
fisubrl
js
sub
dec
fnstsw
loop
mov
dec
mov
adc
jmp
out
lock
imul
adc
ljmp
scas
nop
push
xchg
mov
fwait
adc
jo
push
ret
mov
fnstsw
ret
jo
and
jle
mov
jns
stos
outsl
sbb
daa
jns
mov
gs
xchg
fcomps
movsl
lds
dec
cmp
mov
mov
mov
pop
inc
aam
xlat
jge
mov
jle
mov
jno
push
out
cmpsb
testl
xchg
mov
je
jmp
bound
dec
loop
test
pop
and
jg
je
bound
sbb
fs
lock
and
test
sbb
xchg
das
and
mov
cmp
mov
pop
inc
sti
ffree
xchg
xor
cmp
lret
lods
iret
sub
add
js
cmpsl
stos
ljmp
fs
jmp
cmc
dec
sbb
adc
and
insl
das
lds
and
inc
xor
out
fmull
and
push
loopne
rorl
and
das
in
jnp
stc
jp
xor
adc
cltd
push
gs
jnp
fbld
div
popf
shr
notl
sahf
mov
dec
xchg
push
mov
lahf
daa
cmpsl
ret
repnz
aas
push
rolb
dec
int
xor
inc
jmp
xor
push
push
sub
in
test
loopne
xchg
mov
or
inc
fs
adcb
pusha
inc
jbe
xchg
aad
xlat
shr
pop
addr16
frstor
cli
xchg
or
xor
mov
cmpsl
nop
adc
mov
xor
push
out
pop
aad
orl
leave
mov
mov
shll
dec
mov
test
inc
popf
repnz
adc
sti
js
sub
js
mov
pmaxub
mov
pop
insl
lods
cmp
shll
add
xor
cmp
rcrl
inc
lcall
popa
stos
test
pop
mov
cmp
cld
mov
xor
xchg
sahf
add
mov
int3
mov
cmpsl
les
push
das
inc
into
and
cwtl
dec
pop
out
push
cmpl
xchg
sub
jb
stc
popf
addr16
lods
repnz
lds
lods
adc
lahf
mov
mov
fneni(8087
fisubrl
nop
sub
ret
test
call
pop
xchg
pop
shrb
insl
and
pop
pop
or
outsb
push
js
jl
push
adc
test
insb
add
mov
jns
xor
fisubrs
adc
inc
xor
scas
mov
or
and
out
add
repnz
shlb
repnz
cmpsl
mov
je
inc
xchg
ja
and
dec
sbbb
loopne
in
push
rolb
cmpsb
jge
pop
adc
lahf
fdivs
cli
sub
pusha
sbb
ja
out
jne
sub
and
call
push
fdivr
imul
popf
test
test
aam
fcoml
pop
pop
cmp
xchg
loop
clc
fstl
incb
out
sarl
dec
es
jns
push
jle
dec
fstpt
cmp
bound
test
xor
pop
push
ja
pop
add
xor
scas
imul
xor
mov
mov
pop
or
insl
stos
sbbb
lock
orl
imull
push
pop
jno
xor
xchg
cwtl
in
jp
dec
in
idivb
adc
lret
xor
jl
mov
icebp
mov
jbe
pop
fnsave
and
andl
stos
xlat
lret
cmp
push
movsl
flds
mov
das
mov
pop
or
adc
dec
pop
inc
and
sti
cld
pop
push
mov
ds
insl
fucomp
in
mov
imul
pop
pushf
xor
pushf
sub
aam
rolb
cwtl
adc
pop
add
lds
xchg
adc
adc
aad
push
mov
inc
adc
jae
push
dec
iret
gs
jb
adc
lahf
cmpsb
lret
addb
lret
mov
std
call
andb
xor
push
inc
sub
cs
lcall
stos
push
outsb
ret
cmp
sahf
jo
inc
mov
popa
xchg
and
and
fidivs
loop
movsb
jae
movsb
ret
sbb
mov
jb
xchg
in
shlb
dec
shl
mov
xchg
mov
aaa
fisttps
dec
pop
cmp
ljmp
sbb
scas
jb
mov
outsl
in
popf
mov
mov
mov
clc
mov
cmp
mov
inc
sub
int
jmp
dec
shrl
nop
fs
imul
cmpsl
lods
int
jmp
pop
sti
sti
pop
fs
icebp
mov
pop
clc
stc
jle
or
jmp
jns
jne
inc
dec
or
fistl
cld
and
push
ret
shll
ds
rcrl
xor
imul
inc
jae
add
push
mov
mov
ret
jno
out
call
dec
pop
push
les
adc
mov
xor
push
pop
add
sbb
pop
sti
fistl
push
loopne
mov
pop
pop
testb
stos
jo
push
add
aaa
in
pusha
xor
mov
lods
out
or
repz
sub
aad
sub
and
je
ret
and
cmc
lcall
gs
adc
in
fcmovnbe
sub
adc
and
push
dec
in
daa
fnstenv
and
cs
movsb
ss
int3
lds
popa
inc
ja
pop
sub
cmp
pop
sahf
pop
mov
add
rclb
cli
mov
pop
jo
mov
jno
sub
push
and
test
mov
imul
lods
clc
sub
lock
jge
fwait
aaa
jp
xchg
inc
sub
jl
dec
sub
sub
std
push
push
jno
cwtl
and
js
cmp
int3
into
inc
or
sbb
dec
mov
xor
in
fwait
pop
sbb
add
test
xchg
lods
fnstenv
mov
pop
mov
aas
or
nop
dec
push
add
aad
push
es
rorl
addb
fucomp
pop
lahf
fwait
repnz
lods
inc
cs
cmp
xor
mov
add
ret
xchg
sbb
and
add
test
push
jmp
xor
icebp
mov
mov
outsl
pop
jge
and
pusha
idivb
pop
pop
cmp
ret
mov
jge
xchg
mov
sub
sti
and
pop
inc
xor
and
sbb
loop
dec
inc
cmpsb
cld
insb
xor
rol
mov
push
je
jns
push
pop
push
jle
sbb
or
ja
adc
arpl
jo
lods
aad
mov
sbb
add
test
in
xor
mov
popa
fsts
mov
ror
sub
stc
loope
pop
in
nop
cwtl
xchg
arpl
in
adc
push
in
jle
in
or
xchg
xorb
push
outsl
orl
popa
xchg
jg
je
push
push
mov
lock
mov
cwtl
pop
loope
enter
fld1
push
lret
stc
sbb
adc
jb
cmp
jg
mov
cmp
dec
push
test
mov
xchg
testl
ja
ret
lock
and
jnp
sub
push
in
mov
sub
sub
add
sbb
jno
add
fists
add
aas
adc
sub
jecxz
push
mov
add
fldl
sub
dec
adc
push
pop
mov
daa
push
or
ss
in
pop
xor
stos
fiadds
icebp
js
xchg
mov
pop
or
and
jne
xchg
int
xor
push
dec
jbe
mov
popf
sub
rol
mov
int
in
in
jecxz
shll
lea
mov
mov
jae
fadd
sbb
jmp
test
inc
inc
pop
sbb
mov
in
jg
pop
push
repnz
xchg
test
xchg
ds
mov
cmp
cmc
sub
mov
jg
into
stc
xor
cmp
scas
je
rolb
and
jge
or
or
add
mov
and
shll
xchg
jl
setle
dec
adc
xchg
in
roll
mov
add
mov
jnp
dec
lods
shrb
and
imul
mov
xchg
in
lret
rol
pushf
shrb
and
ljmp
scas
cmp
int
xor
data16
jo
in
mov
pop
out
adc
fimull
mov
jge
lods
ss
sahf
nop
aas
ret
pop
test
and
jp
dec
notl
out
and
xchg
outsb
mov
xor
dec
jge
rcll
fsubrl
test
aam
je
dec
cmp
adc
movsb
mov
daa
mov
jmp
add
push
movsl
xor
leave
idiv
imull
test
mov
jg
sub
rol
test
test
fidivrs
mov
jge
rcrb
sbb
imul
das
xchg
orl
jle
out
xchg
rorb
lahf
push
ds
mov
gs
outsl
and
xor
outsl
mov
and
pmaddwd
cld
adc
testb
dec
sbb
jb
aad
js
shrb
jno
fiaddl
pop
repz
cmpsl
lret
daa
jmp
lods
jne
pop
lods
pusha
in
ds
dec
jmp
imul
sarb
pop
adc
fsubr
xchg
std
add
cld
mov
push
in
or
jae
std
je
arpl
xchg
adc
jns
push
inc
les
call
lock
leave
clc
stc
aaa
cmp
shll
mov
sbb
inc
es
adc
jecxz
mov
into
lock
mov
xlat
inc
pushf
sbb
aad
addb
lea
xor
pop
xchg
rcll
fidivrs
xor
xchg
push
dec
cmp
lods
pop
push
fsub
xchg
pushf
push
or
iret
cwtl
aam
xchg
dec
insb
inc
sub
sti
loopne
pop
pop
or
and
arpl
sub
rcrb
mov
and
ret
jae
enter
add
mov
stc
fcomp
ljmp
ds
push
jns
sub
sti
test
icebp
pop
jecxz
lock
and
or
pop
scas
fsts
jne
dec
aas
add
sbbl
inc
and
cwtl
fisubl
and
pop
xor
in
mov
andb
or
push
dec
negl
dec
pop
std
xlat
xchg
dec
mull
xchg
dec
sub
adc
mov
pop
jno
mov
xchg
cmp
sbb
and
or
stc
mov
aam
fcomp
je
ret
inc
ud2
outsb
push
fwait
pusha
movb
repz
mov
fwait
stos
jge
roll
mov
add
or
inc
repnz
mov
jnp
fadd
je
xchg
sbbl
dec
popa
inc
push
or
or
test
sbb
pop
aam
xchg
rcr
cli
inc
sbb
adc
mov
scas
inc
es
push
and
push
or
or
jmp
lods
mov
je
pop
call
stos
xor
movsl
mov
mov
sbb
mov
push
xabort
dec
and
add
dec
test
jno
mov
pop
ret
cmp
int
add
mov
lods
push
mov
push
stc
xor
in
xchg
sbb
jg
clc
lds
in
negb
es
mov
dec
mov
mov
fldcw
add
or
adc
popa
lods
clc
cmpsb
pop
nop
orb
ljmp
ja
int
das
sbb
inc
lret
mov
mov
cmp
insl
cmp
mov
clc
cwtl
scas
add
movsl
cmp
pusha
and
pusha
cmp
out
out
cmp
or
mov
sub
icebp
mov
jecxz
cld
call
push
sbb
add
and
jge
test
cli
nop
sbb
dec
ds
sbb
lret
inc
aam
adc
repz
das
data16
or
std
jl
rcrl
inc
aad
xor
cs
jecxz
pusha
jbe
xor
mov
lock
cmp
push
ja
mov
sti
int
into
push
loop
sbb
cmp
notl
rorl
xor
jbe
and
test
jns
sbb
aaa
pop
xchg
sub
lret
dec
cmp
hlt
les
add
dec
jg
rcrb
loope
ss
imul
ljmp
inc
ret
stc
xor
mov
icebp
enter
faddl
outsl
jp
in
cwtl
leave
jg
push
leave
incb
pop
test
test
out
mov
dec
and
pop
call
mov
shll
dec
mov
mov
mov
dec
fisttpl
push
loopne
xor
and
aas
mov
push
pop
in
loop
test
loop
push
push
dec
pop
push
out
lea
pop
adc
xchg
mov
jnp
dec
dec
push
iret
and
jle
scas
inc
adc
popf
loope
pop
in
sub
rcr
push
cwtl
test
dec
loopne
call
xchg
xchg
or
enter
pusha
mov
cmp
fcomps
mov
in
push
jb
sbb
or
mov
arpl
sahf
inc
xorb
ror
xchg
test
inc
loope
jbe
jg
pop
testl
jno
in
fsts
xchg
fidivrs
adc
jmp
fsubrs
inc
stos
mov
mov
adc
es
inc
aaa
sbb
xor
lret
data16
jno
mov
stc
pop
sbb
sar
into
cli
jno
mov
outsb
dec
lods
adc
lea
pop
sub
mov
and
lds
mov
fisubrl
and
je
bnd
fs
xor
mov
lcall
imul
push
sbbl
fwait
into
bound
or
adc
dec
inc
mov
mov
push
dec
and
mov
or
sub
push
mov
enter
jmp
mov
call
jb
ss
fs
sbb
mov
dec
mov
cmpsb
mov
add
test
insb
add
stc
lock
push
inc
and
add
jnp
mov
and
fcompl
inc
aam
lds
cmp
xor
adc
icebp
mov
lcall
push
push
ljmp
pop
leave
fiadds
push
in
add
lods
dec
mov
and
cmp
jno
cld
sub
xchg
movsb
ds
call
cmp
push
xchg
imul
inc
push
fnsave
rcll
fsubl
xchg
mov
lods
adc
xor
sbb
add
shll
jnp
mov
gs
jb
leave
sbb
lock
bound
ss
loopne
push
out
aad
jle
pop
mov
pop
push
or
mov
adc
pop
lea
or
xor
outsb
cmc
or
psubd
loope
leave
addl
stc
clc
mov
mov
jmp
.byte
add
or
or
add
add
add
addb
addb
add
mov
add
xor
add
pusha
add
addb
add
loopne
add
dec
add
orb
add
jo
add
add
add
add
add
cwtl
add
addb
add
mov
add
enter
add
add
add
add
loopne
add
clc
add
addb
add
adc
add
sub
add
add
push
add
add
add
add
pop
add
xorb
add
add
mov
add
mov
add
add
add
add
add
xorb
add
add
cmpb
add
add
cmpb
add
add
add
add
xor
adcb
add
dec
add
adcb
add
pusha
add
adcb
add
add
add
add
add
add
nop
add
addb
add
test
add
rolb
add
add
fadds
addb
add
jg
add
lock
orb
add
or
or
xchg
add
add
add
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
loopne
add
clc
add
or
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
add
add
or
add
pop
add
xor
add
dec
pop
add
add
add
and
add
jg
add
js
add
nop
pop
add
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fadds
add
add
add
call
add
add
add
clc
pop
add
add
add
or
add
add
add
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
push
add
add
add
js
add
add
add
mov
add
add
add
cwtl
or
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fmuls
add
add
add
call
add
add
add
clc
or
add
add
add
add
or
add
add
add
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
push
add
add
add
js
add
add
add
mov
add
add
add
cwtl
or
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fmuls
add
add
add
call
add
add
add
clc
or
add
add
add
add
or
add
add
add
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
push
add
add
add
js
add
add
add
mov
add
add
add
cwtl
or
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fmuls
add
add
add
call
add
add
add
clc
or
add
add
add
add
add
add
add
adc
xor
add
shlb
xor
add
adc
add
add
dec
data16
mov
add
inc
cmp
add
add
mov
add
sarb
adc
pop
add
add
inc
adc
pop
add
add
add
add
inc
adc
pop
add
add
inc
adc
pop
add
add
add
add
inc
adc
pop
add
add
dec
adc
pop
add
add
adc
in
add
clc
insl
adc
mov
add
add
add
add
add
add
jo
add
add
dec
adc
call
add
add
add
add
dec
adc
sub
add
pusha
jp
add
add
add
adc
sub
add
fcomps
add
add
call
add
add
pop
adc
cwtl
add
add
adc
jp
add
fcomps
add
add
add
add
add
adc
scas
or
add
pop
adc
mov
add
mov
add
add
adc
mov
add
adc
add
add
add
pop
adc
mov
add
push
add
add
add
add
jno
add
add
pusha
jb
add
add
add
add
add
adc
inc
add
add
je
add
add
sarb
add
add
jbe
add
add
add
add
add
jp
add
add
clc
adc
adc
add
test
adc
adc
add
add
add
add
add
adc
and
add
clc
dec
adc
adc
add
cmp
add
add
or
push
add
pop
add
add
inc
add
add
add
inc
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
loopne
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fldl
add
add
add
fldl
add
add
add
fst
add
add
add
fst
add
add
add
fmuls
mov
mov
mov
fisttpll
mov
fdivr
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
mov
mov
fdiv
mov
mov
mov
fdivr
mov
sbb
jnp
jnp
jo
fdivr
sti
sti
sti
sti
lock
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
addb
mov
mov
mov
mov
fdivr
mov
orb
or
sti
sti
or
jnp
jnp
fdivr
sti
sti
sti
sti
sti
orb
pop
orb
pop
sbb
mov
mov
mov
fdivr
mov
orb
mov
mov
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
mov
fdivr
mov
sbb
incl
incl
jg
incl
incl
js
mov
js
mov
clc
mov
mov
fldl
fstp
fisttpll
fstp
fisttpll
fstp
fisttpll
fstp
fstp
mov
fstp
mov
fstp
mov
fstp
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sub
add
and
add
or
add
add
add
add
add
faddl
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
clc
mov
mov
mov
lock
add
decl
clc
incl
add
add
clc
decl
clc
ja
ja
lock
add
mov
lock
clc
xchg
xchg
mov
decl
clc
xchg
mov
add
jnp
decl
clc
xchg
mov
jnp
jnp
decl
clc
xchg
mov
jnp
jnp
decl
clc
xchg
xchg
jnp
jnp
clc
decl
clc
ja
ja
jnp
jnp
decl
clc
incl
jnp
jnp
clc
mov
mov
mov
jnp
jnp
add
add
add
add
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
cmpb
add
mov
cmpb
add
mov
xorb
add
mov
cmpb
add
mov
cmpb
add
mov
cmpb
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
addb
mov
add
js
or
mov
or
mov
or
mov
or
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
js
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
push
add
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jae
jne
arpl
push
add
and
arpl
and
popa
data16
gs
push
add
and
imul
pop
pop
dec
dec
pop
push
push
dec
dec
push
push
inc
push
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
dec
dec
inc
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
push
push
inc
inc
dec
inc
push
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
push
push
dec
push
inc
push
push
pop
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
imul
pop
pop
push
inc
push
dec
push
push
inc
inc
pop
inc
dec
dec
sub
jl
and
imul
pop
pop
push
inc
push
inc
pop
inc
dec
push
sub
fs
dec
dec
xor
or
inc
push
inc
inc
inc
and
and
or
popa
insl
popa
and
fs
jo
sub
xor
sub
imul
dec
dec
xor
or
arpl
and
insb
arpl
pop
popa
data16
gs
jb
and
and
and
and
and
and
das
and
popa
outsb
fs
jb
and
insl
jo
outsb
outsb
je
or
imul
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
jo
add
add
add
add
add
mov
add
pop
add
ja
jo
or
sti
sti
sti
pop
jo
add
ja
add
jo
mov
jo
add
ja
add
sti
sti
sti
sti
sti
lock
add
add
add
add
mov
mov
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
or
movswl
mov
add
sysret
or
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
pop
ja
pop
add
add
add
add
mov
mov
add
add
lock
sti
sti
sti
sti
lock
mov
mov
add
sti
sti
sti
sti
movswl
add
add
cld
pop
push
pop
jmp
add
rolb
add
add
add
add
add
add
add
jo
add
add
add
add
clc
addb
stc
addb
inc
pop
jmp
ud0
clc
aas
incl
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
incl
add
push
add
add
decl
incl
lock
decl
lock
out
popl
add
push
out
popl
add
push
decl
decl
incl
push
add
add
incl
add
incl
add
push
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
pop
add
addb
add
pop
add
cmpb
add
incl
add
add
add
add
adc
add
add
sub
add
add
add
add
rorb
addb
add
add
add
add
add
add
add
add
jo
mov
pop
fisttpll
or
mov
dec
add
add
add
add
add
add
add
and
or
incl
push
cmp
add
add
add
add
add
push
add
add
sub
or
mov
outsb
add
add
incl
add
add
add
push
add
add
loopne
pop
add
add
add
incl
jg
add
add
sub
add
add
add
add
add
add
add
add
add
or
inc
add
incl
push
xor
testb
add
add
add
addb
push
add
add
dec
add
add
incl
add
add
add
push
add
add
cmc
add
adc
or
incl
add
add
add
add
add
push
add
add
or
xor
jne
dec
add
incl
fisttpll
dec
dec
cmp
jmp
jae
sub
add
add
add
inc
add
incl
add
add
add
add
add
add
inc
add
add
jmp
add
add
add
add
add
add
add
add
adc
inc
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
dec
add
incl
add
add
add
add
add
add
dec
add
add
ljmp
add
add
add
add
add
add
add
adc
dec
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
pop
add
incl
add
add
add
add
add
add
pop
add
add
dec
add
incl
add
add
add
add
add
pop
add
adc
dec
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
imul
add
add
incl
add
add
add
add
add
add
imul
dec
add
incl
add
add
add
add
add
add
add
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
pop
add
push
add
add
popl
xor
jbe
dec
add
incl
add
add
add
or
add
add
add
add
add
incl
xor
jle
pop
add
add
or
add
add
add
add
add
incl
lea
push
sub
push
mov
add
add
add
push
add
add
cltd
add
xor
or
popa
add
incl
pop
dec
dec
cmp
add
add
add
add
add
incl
gs
push
push
aam
cmp
add
add
add
andb
push
add
add
xlat
add
daa
add
pop
add
incl
add
add
add
add
add
add
or
adc
pusha
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
pop
add
push
add
add
or
xchg
xchg
imul
incl
push
add
add
add
add
add
add
add
add
incl
push
jne
mov
add
add
add
add
add
push
add
add
inc
add
add
incl
add
add
add
push
add
add
adc
cmpsb
add
add
incl
push
inc
bound
addr16
add
add
or
add
add
add
add
add
incl
push
jne
add
add
or
add
add
add
mov
cmp
or
push
add
incl
push
dec
mov
xor
add
add
add
add
add
add
add
add
add
add
add
lret
pop
jne
notl
add
add
add
add
add
rolb
add
push
add
incl
add
add
add
add
add
mov
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
add
add
incl
addr16
notl
add
add
add
add
add
into
add
add
push
add
incl
add
add
add
add
add
int3
add
adc
push
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
push
xor
jle
pop
add
add
add
add
add
add
add
add
incl
push
std
dec
jo
cmp
add
add
andb
push
add
add
roll
xchg
add
add
inc
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
incl
push
dec
dec
outsb
jg
add
add
add
add
push
add
add
roll
cmpsl
add
add
push
add
incl
add
add
add
push
add
add
cltd
add
add
incl
cwtl
push
bound
jne
notl
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
push
int
or
mov
inc
push
ds
jne
jp
jge
add
add
add
add
add
add
add
add
add
incl
push
sti
insl
mov
push
add
add
add
add
add
add
add
or
incl
cwtl
push
bound
dec
mov
sub
cmp
add
subl
add
add
add
add
add
stc
add
add
pop
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
add
add
incl
insl
sub
add
sub
add
add
add
rorb
addb
add
add
add
add
mov
add
add
bound
cmp
add
or
mov
dec
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
adc
daa
add
jmp
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
incl
pop
sub
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
rorb
addb
add
add
add
add
loopne
insl
add
add
add
sub
bound
or
testl
add
add
add
add
add
add
push
add
add
push
add
cmp
adc
incl
imul
push
sub
add
sub
adcb
add
or
daa
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
push
add
outsl
add
jb
add
jae
xor
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
or
addb
add
push
add
add
add
add
add
add
mov
incl
add
add
add
adc
push
add
add
pop
add
add
add
add
incl
add
add
add
push
add
add
or
or
in
sbb
push
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
aas
add
aaa
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
rorb
addb
add
add
add
add
add
add
add
add
mov
incl
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
push
add
add
push
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
les
rolb
add
add
add
add
add
add
arpl
push
fisttpl
jo
or
testl
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
incl
push
pop
dec
sbb
push
sbb
add
add
add
pop
add
add
add
add
incl
imul
push
add
add
add
add
add
incl
push
out
jbe
jbe
incl
add
add
add
push
add
add
add
add
add
incl
bound
std
dec
jo
sbb
add
add
add
add
add
incl
push
jne
notl
incl
add
add
add
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
mov
or
repnz
incl
add
add
add
push
add
add
add
mov
or
repz
incl
add
add
add
add
or
addb
add
add
add
add
repz
add
add
add
add
add
add
adc
push
add
add
add
pop
add
add
incl
add
add
add
add
sub
push
add
jmp
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
incl
add
add
sgdtl
add
add
dec
add
add
cmc
add
incl
add
add
add
add
or
addb
add
or
add
add
and
out
add
add
add
or
mov
dec
add
add
mov
add
add
add
add
incl
add
add
mov
add
add
add
add
incl
add
add
add
inc
add
add
push
add
add
add
lods
sub
add
sub
add
add
add
adc
pop
add
incl
imul
sub
add
add
push
add
add
pop
add
add
add
add
add
incl
jp
add
add
sub
add
add
add
add
add
add
add
add
incl
push
sub
add
sub
add
add
add
int3
add
add
add
incl
push
sub
add
sub
add
add
add
add
add
add
add
add
add
add
incl
pop
add
add
sub
add
add
add
add
add
adc
add
incl
insl
add
add
sub
add
rorb
addb
add
push
add
add
add
add
add
add
pop
add
gs
add
or
mov
dec
add
add
add
add
add
add
add
or
incl
gs
jo
outsb
arpl
xchg
pop
add
incl
add
add
or
push
add
add
mov
add
incl
add
add
add
push
add
add
pop
add
rolb
or
stc
add
incl
add
add
add
add
or
add
add
incl
add
add
add
push
add
add
push
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
addb
xorb
add
adc
add
add
add
add
add
add
push
xchg
cltd
mov
push
pop
or
inc
add
add
add
popa
add
add
jo
add
add
push
add
add
add
push
ds
mov
push
pop
or
inc
add
add
add
popa
add
add
add
outsb
add
add
add
add
add
add
dec
add
mov
or
inc
add
add
add
add
add
add
add
dec
add
mov
or
inc
add
add
add
add
add
add
add
dec
add
cwtl
or
push
add
add
push
add
add
add
or
add
add
dec
add
cwtl
or
push
add
add
inc
add
ja
outsb
add
add
add
add
push
pop
arpl
pop
or
inc
add
add
add
add
adc
add
add
mov
add
add
push
andb
inc
add
add
push
xchg
cltd
push
pop
mov
or
inc
add
add
add
outsl
add
add
add
add
andb
dec
add
add
push
ds
push
pop
mov
or
inc
add
add
add
outsb
add
add
add
andb
push
add
add
dec
add
pop
mov
or
push
add
imul
sub
push
add
bound
add
add
or
add
dec
add
pop
mov
or
push
add
bound
das
add
outsb
add
add
add
add
or
add
dec
add
mov
add
add
andb
inc
add
add
dec
add
mov
add
add
add
add
add
add
add
add
cs
insl
mov
mov
or
inc
add
add
add
add
add
add
add
fcoms
push
fs
mov
add
add
je
jb
insb
add
add
add
add
add
add
bound
stos
mov
push
fs
mov
push
pop
add
addb
add
add
add
outsb
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
addb
adc
add
add
movsl
sub
add
add
add
sub
add
add
adc
add
addb
lds
add
addb
add
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
std
clc
push
jg
jmp
aas
pushl
incb
add
cld
add
incb
add
lcall
pushl
aas
adc
sbb
cld
cmp
cmp
call
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
xor
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
pop
incl
add
incl
add
incl
add
incl
add
insl
addb
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
cld
add
cld
add
clc
add
clc
add
lock
lock
jmp
add
jmp
add
inc
add
incl
add
decl
add
clc
add
clc
add
clc
pop
clc
jg
clc
jg
clc
jg
clc
jg
cld
incl
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
addb
pop
add
add
add
add
add
sbb
add
adc
add
incb
incb
incb
incb
incb
incl
incl
pop
incl
pop
incb
pop
dec
push
pop
inc
push
pop
inc
push
add
rcrb
inc
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
shlb
jg
jo
inc
clc
add
sar
inc
inc
dec
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
pop
addb
add
add
test
add
leave
dec
add
test
dec
add
or
add
rolb
add
cmp
add
addb
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
addl
pop
incl
add
incl
add
add
add
add
add
add
add
add
add
xor
add
add
adc
and
add
add
mov
add
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
jl
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
clc
mov
mov
clc
clc
dec
mov
push
js
jp
mov
jo
add
js
jp
mov
mov
pusha
xchg
incl
mov
mov
xchg
add
add
mov
mov
mov
faddl
lock
mov
mov
clc
addb
add
add
orb
xchg
incl
invd
jp
or
or
add
add
jp
or
or
js
mov
mov
str
jp
mov
mov
clc
add
jo
push
or
addb
xchg
str
lock
or
or
or
jo
or
or
js
mov
mov
orb
mov
mov
mov
str
or
addb
xchg
add
incl
add
or
or
or
incl
or
or
js
mov
loopne
add
add
add
mov
clc
cmp
push
mov
addb
xchg
xchg
add
add
mov
mov
xchg
incl
mov
mov
mov
ret
mov
add
js
jp
stos
stos
stos
stos
clc
mov
push
js
jp
stos
stos
stos
stos
clc
jp
stos
stos
stos
stos
clc
cmp
mov
ja
mov
mov
ja
mov
ja
ja
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
ja
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
mov
mov
mov
ja
mov
mov
ja
push
vpmacssdql
xchg
mov
jg
xchg
mov
jg
and
mov
mov
clc
mov
clc
mov
clc
mov
clc
inc
jp
mov
jp
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
add
mov
jp
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
push
mov
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
cmpb
mov
mov
clc
jp
mov
mov
add
xchg
jp
ja
js
clc
aam
jnp
mov
jnp
ja
js
mov
mov
js
mov
ja
js
xchg
js
xchg
mov
js
xchg
mov
js
add
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
ja
mov
mov
ja
mov
mov
ja
mov
clc
clc
clc
clc
clc
jno
mov
jp
mov
mov
jp
mov
mov
loopne
mov
clc
jp
mov
jp
mov
mov
jp
decl
jp
mov
jp
or
mov
jp
or
xchg
ja
clc
sbb
mov
jp
add
mov
jp
add
xchg
ja
clc
dec
jp
mov
jp
add
or
mov
add
or
ja
mov
nop
jp
mov
jp
mov
mov
mov
mov
jp
xchg
mov
xchg
jp
mov
jp
add
or
mov
add
or
ja
clc
clc
loop
mov
clc
jp
add
mov
jp
add
xchg
ja
clc
popf
jp
mov
jp
or
mov
jp
or
xchg
ja
clc
jo
mov
clc
jp
mov
jp
mov
mov
jp
mov
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
loopne
ja
ja
ja
ja
ja
ja
mov
ja
ja
mov
ja
ja
mov
ja
ja
mov
les
enter
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
incl
pop
sub
add
sub
add
add
add
add
mov
add
add
add
xor
fs
incl
add
add
add
push
add
add
mov
push
add
add
add
add
incl
pop
add
add
add
add
add
add
incl
insl
add
add
add
add
add
incl
push
sub
add
sub
add
sub
add
or
add
or
add
add
add
add
add
push
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
daa
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ud0
incl
ud0
incl
add
lock
incl
lock
push
lock
str
incl
decl
decl
lock
lock
incl
push
push
push
str
incl
decl
ud0
add
lock
incl
push
push
str
incl
decl
ud0
add
lock
incl
push
push
push
str
incl
decl
decl
lock
lock
incl
lock
push
lock
str
incl
ud0
incl
add
lock
add
add
add
add
add
add
add
add
add
add
add
faddl
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
add
decl
clc
xchg
ja
addb
add
mov
lock
clc
xchg
ja
addb
add
mov
add
clc
xchg
ja
addb
add
mov
add
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
incl
clc
xchg
js
addb
add
mov
push
clc
xchg
ja
addb
add
mov
clc
xchg
ja
addb
add
mov
mov
add
add
add
add
add
add
add
dec
pop
pop
cmp
add
or
testb
sub
sub
add
add
add
add
gs
push
add
push
add
dec
sub
push
or
dec
push
add
add
add
sub
or
xchg
pop
or
push
sbb
add
or
push
bound
sti
jl
jle
dec
das
add
jbe
fs
dec
add
or
lds
xchg
test
lea
insb
xchg
pop
xor
xor
pop
or
xor
add
push
mov
xchg
addr16
test
xchg
out
mov
add
add
gs
test
testb
add
pop
add
add
arpl
pop
and
add
dec
pop
pop
xchg
push
add
or
push
pop
cmp
push
fisttpll
pop
xor
add
decl
add
pop
lret
jp
jp
arpl
pop
and
add
mov
pop
daa
pop
or
loopne
aad
push
bound
pop
add
or
loopne
aad
das
push
test
push
bound
pop
dec
sbb
xor
add
push
test
cs
test
lea
xor
add
pop
sub
jp
pop
cli
push
sbb
jge
in
xor
lea
xor
mov
lea
pop
test
push
pop
pop
bound
int
pop
dec
add
and
sti
jl
jle
insb
mov
cwtl
repnz
stos
mov
jns
xchg
jbe
adc
clc
jbe
pop
test
add
dec
add
and
xchg
dec
or
inc
push
sbbb
sub
lcall
stos
mov
push
fs
add
sbb
or
bound
test
jl
jle
insb
mov
cwtl
or
push
bound
add
dec
add
and
xchg
dec
or
std
nop
stos
mov
jns
xchg
add
adc
sub
jl
jle
dec
mov
bound
push
imul
pop
add
xchg
dec
and
xor
add
jp
pop
fimuls
xchg
dec
and
and
add
pop
test
cli
push
and
and
add
xor
addr16
orb
add
dec
and
and
add
pop
test
jb
add
add
or
loopne
aad
sti
mov
push
cltd
push
jns
daa
pusha
add
or
loopne
aad
cltd
push
ljmp
pusha
add
add
add
or
pop
xchg
test
xchg
dec
cmp
maxps
xor
add
gs
jle
xor
mov
xor
add
mov
cli
push
test
lea
testb
das
es
arpl
js
xor
add
jbe
jbe
js
jbe
lcall
loope
add
pop
add
gs
stc
pop
and
and
add
dec
mov
mov
fs
dec
or
sbbl
iret
jle
mov
dec
mov
pop
add
pop
add
gs
stc
pop
and
and
add
dec
mov
dec
or
loopne
cmp
pop
das
ljmpw
testb
repnz
iret
jle
mov
dec
mov
pop
add
sbb
sub
pop
and
and
add
dec
mov
mov
fs
dec
mulb
push
pop
jne
dec
add
dec
pop
xchg
test
sbb
sbb
sub
pop
and
and
add
dec
mov
dec
mulb
push
pop
jne
dec
add
dec
pop
xchg
test
sbb
or
testl
je
jo
add
pop
add
mov
xchg
gs
add
dec
jo
add
adc
sbb
testl
sub
add
add
dec
dec
hlt
xchg
test
gs
add
sbb
and
mov
gs
add
dec
sub
add
add
dec
dec
hlt
xchg
test
gs
pop
add
sbb
and
mov
gs
or
dec
and
dec
test
pop
es
xor
mov
nop
jmp
dec
or
xchg
add
adc
sbb
testl
sub
add
xor
xchg
test
gs
add
sbb
and
mov
gs
add
dec
arpl
gs
add
sbb
and
mov
gs
add
dec
in
pop
mov
add
mulb
xchg
cmp
add
sbb
and
mov
gs
add
dec
daa
lea
pop
cmp
add
sbb
add
add
add
sbb
pop
jne
xor
pop
and
and
add
dec
mov
rcll
jne
dec
add
dec
or
xchg
out
mov
xor
add
bound
push
and
and
xor
and
add
push
loopne
dec
test
lea
loopne
aad
push
bound
pop
and
and
add
push
cmp
pop
sbb
testb
stos
mov
add
xor
stc
pop
and
and
add
stos
mov
fnstsw
xor
add
dec
sub
gs
test
testb
push
dec
and
and
add
jbe
push
push
addb
adc
loopne
aad
and
xchg
and
and
add
push
cmp
pop
das
push
pop
dec
push
out
jbe
pop
add
push
add
mov
jbe
pop
repnz
loope
or
loopne
aad
sbb
pop
and
and
xor
stc
pop
and
and
add
dec
mov
addr16
xor
lea
xor
add
push
pop
pop
push
and
and
add
add
dec
insb
js
dec
xchg
gs
das
add
xchg
out
mov
push
add
verw
push
pop
pop
push
and
and
add
rcll
jne
push
stos
dec
fisttpll
push
add
push
pop
pop
push
and
and
add
rcll
jne
xchg
fisttpll
or
pop
push
and
and
add
sarl
repnz
loope
add
adc
aad
push
mov
ds
out
jp
pop
and
and
add
dec
mov
mov
add
add
sbb
pop
jne
xor
pop
and
and
add
dec
mov
rcll
jne
dec
add
dec
or
xchg
out
mov
xor
add
mov
push
sub
pop
and
and
add
dec
mov
mov
fs
dec
test
push
mulb
pop
jbe
fisttpl
int
pop
dec
add
adc
aad
push
mov
ds
out
jp
pop
and
and
add
dec
mov
mov
add
mov
push
sub
pop
and
and
add
dec
mov
dec
test
push
mulb
pop
jbe
fisttpl
int
pop
dec
add
pop
add
add
maxps
xchg
add
or
and
add
push
or
xchg
test
stc
pop
popa
mov
xor
add
add
xchg
out
mov
add
or
loopne
aad
lds
testb
fistpll
gs
arpl
xor
scas
nop
testb
fistpll
add
add
add
gs
add
or
and
nop
scas
nop
testb
std
andb
adc
add
add
add
popa
mov
jge
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
sbb
mov
test
pop
adc
adc
inc
push
mov
pop
pusha
inc
and
notb
or
lret
jg
out
outsb
adc
adc
sbb
adc
cmp
and
clc
pusha
sub
aad
xor
add
push
push
pop
pop
dec
mov
mov
or
mov
sub
inc
dec
fadds
xacquire
sbb
mov
imul
inc
dec
ret
xchg
icebp
mov
lock
int3
mov
add
push
lret
lock
jno
stc
push
jnp
aaa
fwait
cli
jmp
mov
push
xor
sub
push
lds
lahf
not
lock
cmc
and
out
xor
js
add
jl
sbb
loopne
mov
and
jmp
test
sub
pusha
lahf
jmp
xlat
insb
les
call
pop
xlat
clc
pop
cmpsb
add
sti
jge
sti
in
fwait
push
lret
inc
movsb
in
jno
iret
sbbb
mov
test
mov
xchg
push
lock
test
sti
xchg
mov
js
mov
cmpsb
lret
out
test
icebp
ja
or
push
sub
in
push
or
xchg
jno
mov
push
inc
xchg
je
and
loope
je
push
inc
mov
dec
lods
das
in
out
cmp
jmp
mov
js
pop
or
cld
pop
pop
lret
and
shl
inc
pop
out
inc
fs
inc
ds
insl
push
mov
xchg
stc
stos
xor
xchg
push
mov
mov
gs
push
jge
push
jbe
lret
idivl
sti
outsb
mov
mov
lahf
sar
push
mov
out
pop
add
jmp
xor
sbbb
int3
mov
mov
mov
fsubr
push
es
cmp
inc
pusha
rclb
out
xchg
imul
cmovo
dec
mov
sbb
cmp
sub
add
sti
xchg
popf
sti
sbb
sarb
daa
push
mov
jmp
lods
cmp
lret
sbb
pop
push
loop
js
sahf
cmp
mov
mov
push
dec
adc
gs
bound
pop
mov
sbb
push
leave
aad
adc
ret
loope
das
xor
mov
push
in
push
sbb
dec
test
stos
outsl
repnz
xchg
mov
jmp
xchg
pushf
adc
icebp
jge
push
push
xor
lds
shll
mov
push
ljmp
ljmp
addl
add
aam
mov
dec
enter
js
ret
mov
sub
push
cli
pop
add
aas
xchg
add
movhps
push
sub
repz
or
adc
pop
js
gs
movsb
outsl
sub
xchg
adc
sbb
push
add
dec
xchg
push
imul
out
cmp
xchg
xchg
mov
inc
lea
repz
hlt
mov
dec
ljmp
scas
jge
push
mov
push
dec
imul
jnp
pop
and
cmpsb
mov
pop
pop
mov
ret
xchg
mov
jo
add
fwait
adc
sahf
add
mov
xor
nop
xchg
sbb
les
aaa
aaa
and
mov
sbb
loop
arpl
add
je
jns
cld
idivb
stc
lock
sbb
aam
call
push
add
mov
sbb
lcall
popa
pushf
inc
std
pusha
test
testb
leave
mov
pusha
lret
ficoml
shlb
test
mov
clc
imul
jo
cmpsb
cmp
repz
cmp
loop
jns
add
xchg
cmp
divl
jg
dec
xor
add
push
sub
mov
loopew
xchg
std
mov
fwait
jg
cmpsl
cwtl
cs
add
jnp
mov
mov
in
std
fcoml
movsl
sahf
pop
cld
mov
push
jbe
push
xchg
in
pushf
or
jmp
sub
icebp
dec
push
repz
fucomip
leave
pop
cltd
pop
mov
pop
jge
cmp
fisttpl
and
outsl
push
lods
jae
cmp
push
enter
xchg
mov
xor
xor
pop
hlt
icebp
fidivs
push
outsl
scas
dec
fnstcw
sbb
and
lods
xlat
cmc
fadd
dec
pop
jne
pop
xchg
call
adc
add
mov
loopne
sbb
lcall
push
inc
push
cli
jne
pushf
subl
aas
insl
mov
jne
icebp
out
mov
in
in
jecxz
xor
fldt
sti
or
es
popa
insl
jne
aam
and
mov
out
inc
mov
lods
xchg
jp
ret
jle,pn
negb
and
stos
pusha
mov
loope
sub
movsl
or
jno
cmc
xchg
or
out
mov
in
mov
adc
xchg
iret
cs
push
arpl
sub
outsl
push
lock
ficompl
jae
push
fistpl
push
fistpl
xchg
xchg
adc
fcmovb
lea
sub
enter
std
std
adc
test
mov
pop
add
gs
cmp
into
jnp
inc
repnz
or
outsl
add
and
stos
insb
and
in
inc
lods
leave
gs
das
mov
in
stos
add
fld
outsb
cmp
test
adc
cwtl
aad
xor
or
aas
outsb
push
xchg
lods
jp
mull
cmp
jmp
pop
leave
xor
fnstsw
out
xor
sbb
mov
add
mov
mov
aaa
js
sub
lea
jb
xlat
or
mov
mov
icebp
inc
cmpsb
fistpll
jp
or
adc
sahf
lods
inc
test
jl
aam
sbb
repnz
aas
sbb
loopne
popf
test
movsb
aaa
sbb
adc
rolb
loop
xchg
das
loop
dec
mov
enter
into
mull
int3
xchg
jle
dec
push
cmc
pop
mov
fnsave
leave
ret
mov
xchg
ret
ret
stos
and
push
popa
in
ljmp
lea
inc
ret
xchg
pop
fs
dec
push
pop
jmp
add
stc
pop
cwtl
jmp
into
cmpsb
aam
in
mov
and
adc
repnz
stos
mov
xchg
xchg
pop
out
xor
pop
dec
pop
mov
mov
push
cmp
mov
pushf
add
or
or
add
push
dec
out
pop
adc
movsl
dec
mov
jecxz
inc
mov
sbb
mov
into
cmp
inc
sti
inc
into
push
pusha
loope
mov
imul
mov
out
int
inc
fs
outsb
dec
xlat
lea
sbb
stos
sub
cs
fdivrl
pop
adc
test
ret
xchg
outsb
jmp
repnz
gs
lcall
ss
xlat
dec
int
mov
lret
in
loopne
mov
ja
repnz
mov
pop
inc
xor
sub
jb
jnp
cmp
and
sub
and
push
mov
mov
inc
xchg
insb
outsl
inc
dec
fs
mov
aaa
lods
add
mov
pop
sbb
icebp
testl
jle
pop
push
jnp
mov
scas
push
inc
jb
pushf
fisubs
sub
in
inc
fstpl
xchg
jle
clc
data16
xor
fld
and
push
inc
push
inc
pop
imul
dec
pusha
or
gs
ljmp
mov
pop
aam
fidivl
mov
add
dec
enter
ret
inc
xchg
sbb
jp
loopne
xchg
cmp
or
hlt
dec
leave
push
int3
test
sbb
dec
movsb
loope,pt
adc
shrl
xor
mov
xchg
fscale
pop
mov
mov
call
xchg
hlt
xor
fisttpl
imul
into
mov
adc
or
stos
dec
mov
aaa
pop
cs
fsubl
fsubrs
push
cltd
ljmp
add
leave
mov
repnz
in
cmp
push
adc
xchg
xor
jns
stos
mull
jmp
stos
jno
jb
test
or
pop
fsts
mov
xor
xchg
push
mov
xor
mov
cs
insl
in
inc
sub
cltd
ret
loop
push
sbb
shrb
outsb
jecxz
add
mov
mov
daa
adc
cmp
test
shll
fs
into
iret
push
std
sbbl
xchg
pop
icebp
mov
inc
dec
iret
stos
sbb
xor
repz
mov
mov
aad
sub
rorl
mov
fcomps
cmc
fwait
into
outsb
dec
inc
lds
sti
mov
cmp
fdivr
mov
je
leave
inc
out
push
inc
mov
testl
cltd
sbb
inc
jmp
iret
out
adc
inc
mov
jge
mov
push
icebp
mov
daa
and
lock
mov
repz
lahf
imul
pop
jb
arpl
test
inc
or
filds
and
mov
sti
orl
push
sub
sti
adc
xchg
jno
popa
dec
xchg
cmc
pusha
lret
jmp
dec
negl
cmp
stos
ret
jp
xorl
adc
cwtl
cli
insb
pop
jbe
mov
lods
aam
xchg
aad
jle
mov
pushf
into
and
pop
in
jbe
ja
pop
aas
xchg
xor
mov
ja
sahf
dec
or
popa
and
sub
testb
dec
rcll
call
lahf
scas
hlt
jo
cmp
jmp
pop
jns
ret
sbb
sub
das
add
adc
inc
mov
pop
push
divb
add
mov
pop
cwtl
sub
sub
ja
mov
repz
adc
repnz
inc
adc
sbb
shrb
data16
jmp
jg
mov
call
cli
push
pop
aad
orb
xchg
xor
addl
xchg
movsb
pop
repnz
mov
shll
in
lcall
test
leave
jge
hlt
xchg
ljmp
xor
cmp
jbe
cwtl
in
cmp
cltd
jne
and
inc
aas
adc
jge
int
mov
mov
lods
nop
pop
repnz
sbb
mov
jg
add
int
lcall
mov
sub
mov
shrl
xchg
out
call
cs
scas
bound
xor
cld
mov
add
or
dec
mov
out
insl
inc
stos
int3
add
or
mov
in
test
cmc
jecxz
mov
adc
lret
cmp
enter
dec
and
mov
pop
je
cmpsb
cmpsl
test
jbe
aas
addb
mov
or
dec
ret
jno
fisttpll
gs
dec
mov
shr
inc
pop
mov
adc
dec
fsts
insb
ss
jle
mov
aaa
cli
inc
and
sbb
out
sub
mov
adcl
jae
xor
mov
push
ret
sti
ja
jp
outsl
xchg
xchg
pop
xor
hlt
nop
push
xchg
adc
adc
iret
sub
cmp
push
mov
jg
into
push
in
cmp
incl
or
cmpb
inc
add
push
daa
sbb
mov
shrl
jmp
push
xchg
jns
orb
xor
lahf
push
mov
push
test
mov
dec
mov
test
ss
enter
sub
jg
inc
inc
dec
pop
push
sub
out
lock
and
cmc
in
iret
in
test
fbstp
dec
jbe
pop
cmp
movsb
fwait
push
adc
inc
dec
outsl
lds
scas
cwtl
jns
jae
or
or
testl
push
fs
stos
addr16
mov
xor
in
sbb
cmpsl
stc
sarl
notb
lods
adc
scas
leave
in
mov
xchg
mov
mov
pop
popl
and
push
pusha
sbb
in
lcall
jmp
push
sub
and
clc
icebp
loop
insb
push
movsb
sahf
xlat
dec
data16
jmp
mov
push
ja
dec
ss
daa
dec
aas
xchg
ret
cld
jne
and
aaa
adc
mov
ljmp
in
imul
lcall
lea
push
mov
or
xchg
xor
mov
inc
ds
or
popa
xor
or
mov
dec
dec
lds
sbb
lds
jnp
pop
adc
cmpl
sti
or
arpl
sbb
sub
xchg
adc
jns
psllw
int
pushf
in
loopne
loop
popa
loopne
sbb
jg
xor
or
out
xchg
scas
add
cwtl
popf
sbb
xchg
in
adc
sub
loope
xor
fildll
test
adc
jae
idivl
adc
movsl
push
or
and
xor
dec
fwait
ja
in
loope
jne
hlt
jmp
mov
cltd
xchg
ds
mov
stos
push
mov
cwtl
pop
int3
mov
lcall
or
ljmp
pop
xchg
pop
cmp
lcall
pop
or
or
sub
adc
add
cmp
add
test
sar
js
mov
mov
out
xor
and
daa
push
lret
mov
loop
xor
stc
in
sub
dec
xchg
or
std
mov
xchg
ljmp
push
jmp
sbb
jl
nop
mulb
sbb
adc
sub
jge
jnp
jl
jo
sbb
ret
dec
out
mov
rorl
or
sbb
dec
pop
mov
xchg
inc
mov
mov
sbb
shrb
xchg
stos
data16
in
push
inc
imul
sub
bound
cmpsb
js
icebp
hlt
xlat
and
shll
cmc
rolb
xor
pop
and
push
test
mov
adcl
inc
enter
xchg
or
hlt
push
pop
push
push
arpl
shlb
ftst
outsb
mov
pushf
pusha
iret
lods
jnp
jne
loope
mov
jnp
int
cmp
dec
dec
adc
pop
ss
and
add
js
mov
ds
scas
xlat
mov
inc
dec
leave
or
aam
cmp
mov
push
pop
add
or
mov
int3
gs
fs
push
cmp
cmpsl
and
xchg
jg
js
cmpsb
or
fidivs
mov
sbb
push
fsubr
adc
pop
out
inc
pop
roll
sarb
sbb
fildll
dec
push
jno
out
roll
out
push
push
arpl
lods
adc
ds
add
das
sahf
lea
inc
xchg
xchg
int
xchg
or
or
lds
arpl
pusha
dec
fnstcw
dec
test
repnz
pusha
mov
mov
fwait
jle
push
fdivrs
xchg
add
fmul
popl
movsl
dec
jno
push
mov
es
loopne
inc
lcall
leave
jae
and
mov
mov
loopne
fsubp
ret
mov
popa
xchg
idivl
hlt
lods
and
sub
mov
sbb
mov
cltd
enter
sbb
movsb
jo
and
ds
daa
mov
cld
sbb
fs
loopne
shl
inc
mov
mov
cmp
lods
dec
ret
mov
xchg
bound
mov
scas
orl
pop
push
mov
push
mov
and
test
pusha
addr16
loop,pt
push
jno
push
inc
lea
or
cmp
xor
and
mov
xchg
adc
xchg
lea
daa
push
xchg
hlt
push
repz
fstpl
int3
fidivl
adc
jb
push
lock
mov
pop
scas
ljmp
and
inc
xchg
into
pop
outsl
xchg
sub
lret
int3
call
xor
addb
mov
and
stc
ficompl
push
push
aam
jae
aas
and
ljmp
adcb
sbb
lahf
push
lds
xor
adc
das
xchg
dec
mov
lret
ficoml
inc
fwait
and
adc
les
rol
shll
daa
and
jecxz
es
mov
mov
dec
gs
stc
mov
inc
push
pop
mov
push
mov
lods
adc
push
out
es
dec
mov
add
push
std
push
mov
push
sub
rcrb
mov
add
pop
jns
mov
push
inc
enter
lds
lret
cmp
mov
adc
hlt
cwtl
add
mov
mov
mov
fs
adc
cmc
mov
arpl
push
out
out
dec
cmp
outsl
cmp
and
mov
sub
stos
mov
or
xchg
repz
push
sbb
addr16
mov
pusha
sub
inc
mov
lret
add
insb
cmpsl
loope
mov
mov
inc
iret
inc
adc
pop
mov
imul
or
push
sbb
inc
in
sbb
pop
xor
test
stos
mov
sub
cmpsl
scas
add
jmp
sti
hlt
cli
mov
sti
sub
jle
je
jne
int
rorb
dec
dec
xor
push
cwtl
xchg
inc
xchg
add
and
jae
cmp
pop
push
cli
sarl
add
add
popa
cmp
push
outsb
test
mov
or
xchg
or
lods
loopne
adc
mov
test
xor
outsl
push
push
out
xchg
push
aam
inc
outsl
xchg
test
inc
jmp
cli
lods
dec
adc
pushf
notl
out
pop
addr16
lahf
leave
andb
aaa
sbb
cmc
dec
call
pop
and
jle
enter
xor
repz
mov
arpl
ds
dec
mov
push
adc
pushaw
repnz
xchg
mov
movsb
pop
inc
or
aad
scas
mov
mov
cmp
dec
cwtl
xchg
mov
ss
cmpsl
and
push
pop
je
mov
mov
pop
sahf
jge
jge,pn
setne
stc
jno
pop
lea
in
mov
and
std
lret
sub
sbb
loope
xor
xorb
hlt
add
imul
insb
sbb
in
mov
out
push
xchg
mov
rol
push
call
bound
mov
lea
cmp
push
popf
daa
arpl
ja
je
imul
enter
inc
insb
pop
lcall
sbb
mov
push
iret
popf
or
ds
cmpl
std
arpl
repnz
cmp
bnd
and
mov
push
call
sbb
jmp
adc
jg
outsl
mov
addr16
mov
into
outsl
mov
movq
cli
nop
cli
data16
into
dec
mov
xor
test
push
dec
in
mov
dec
jbe
fstl
dec
dec
cmp
mov
mov
sbb
lret
int3
leave
scas
or
scas
push
push
lea
sar
xchg
push
sbb
test
cmp
dec
bound
mov
jo
and
les
or
push
inc
push
jmp
div
and
mov
jb
ss
adc
adc
mov
call
ss
or
or
pushf
jne
push
pop
rclb
add
jmp
mov
rcrb
xlat
mov
icebp
lock
pavgw
xchg
scas
shrb
inc
cs
jbe
xor
aaa
dec
xor
sbb
xchg
cli
inc
leave
push
sti
mov
xor
adc
movsl
pop
inc
xchg
mov
orl
loope
bound
sbb
dec
pop
or
cs
mov
mov
cld
xor
push
dec
push
inc
in
stos
lods
cs
rcll
loope
iret
insl
icebp
cltd
sub
xchg
das
sbb
mov
cmp
into
add
stos
sti
push
xchg
adc
adc
stc
sub
hlt
mov
jmp
mov
dec
repz
cld
cmpl
movsl
rcrl
xor
fildl
push
insb
cmp
jecxz
add
mov
push
test
in
push
dec
sub
mov
add
sbb
sub
pop
mov
les
push
or
add
xchg
xchg
mov
popf
repz
pop
lock
sahf
xor
jnp
cmc
int
xor
shll
fucomi
insb
jae
jle
adc
fldcw
cmp
push
imul
add
sub
int3
cmp
cltd
pop
enter
mov
enter
lret
jb
cmc
adcb
ds
daa
cmp
rcl
or
ficoml
daa
cmp
fstpt
and
pop
dec
fimuls
xchg
ficoms
jmp
sub
in
addl
and
push
jmp
aad
xchg
xorb
cli
stos
pop
mov
movsl
add
cmp
add
stc
test
dec
xchg
hlt
xlat
mov
mulb
stos
movsb
icebp
ss
ss
mov
mov
sti
mov
cmp
out
fidivl
fdivrl
xchg
add
test
inc
cwtl
mov
popa
fnstcw
imul
iret
je
gs
sub
aad
insl
hlt
jecxz
sub
or
adcl
pusha
setl
int
sahf
mov
add
dec
sbb
repnz
mov
xchg
adc
shrb
aam
jp,pt
popa
test
inc
cmpsl
aad
sbb
mov
in
mov
std
shr
jmp
xor
test
sbb
cmpsb
enter
enter
scas
dec
aas
test
jno
pop
pop
push
mov
cmp
decl
test
loope
loop
cmp
dec
or
rcrb
cltd
jmp
sahf
inc
sbb
mov
mov
mov
cmp
lea
insl
clc
cld
adc
push
xor
nop
mov
cmp
stos
pushf
iret
sub
addr16
sub
ds
dec
sub
bound
daa
fdivl
mov
add
jge
sbb
or
mov
ret
mov
insl
jns
mov
shrb
mov
inc
mov
fmuls
or
push
loopne
sub
fwait
xor
roll
sbb
jmp
dec
mov
movsl
or
and
xor
pop
ja
xchg
cwtl
pop
cmpsb
sbb
push
jecxz
cmp
data16
jl
and
inc
js
mov
and
pop
and
mov
sbb
add
jl
clc
push
sub
pop
jp
mov
xchg
addr16
aas
xchg
mov
pop
pop
lock
xchg
pop
cld
pop
scas
sub
fidivrl
in
dec
dec
add
and
or
mov
mov
stos
incb
ror
pop
test
ljmp
push
rolb
inc
addr16
jp
repnz
int
lds
lock
push
fimuls
jbe
jle
lret
xchg
inc
sar
jmp
add
adc
cmp
pop
push
je
bound
cmp
divl
ror
arpl
xor
cmpl
mov
les
adc
movsb
mov
jle
popf
sbb
arpl
mov
sbb
and
sbb
sbb
pop
mov
or
ljmp
sub
pop
subb
xchg
in
inc
add
dec
popa
fcmovnbe
pop
in
lods
pop
es
cmpsb
dec
addb
pushf
or
cmp
adc
jg
flds
es
xor
sbb
dec
cmc
fxch
ljmp
nop
ljmp
inc
into
dec
test
leave
loop
lods
inc
dec
or
jmp
mov
gs
push
xor
push
fwait
cltd
out
dec
jge
xlat
sarb
hlt
xor
sbbb
rolb
test
sbb
adc
cld
dec
add
add
mov
pop
mov
pop
sbb
adc
mov
test
xor
imull
xor
outsl
push
call
ret
loop
scas
pop
out
icebp
push
pop
mov
mov
rcll
dec
js
sarb
sbb
stc
adc
push
mov
adc
stc
cld
mov
movsb
jnp
push
jle
pop
nop
mov
xchg
mov
jl
outsl
mov
daa
xchg
popa
stc
xchg
xor
dec
pushl
pop
js
or
mov
das
add
add
push
add
jno
push
xchg
divb
cmpb
sub
test
add
mov
mov
jl
push
lods
repnz
lods
loop
pop
push
dec
ret
lret
out
pop
jle
loope
jg
cmpsl
or
adc
out
or
mov
push
add
leave
sbb
pcmpgtw
scas
ficoml
mov
jp
and
repnz
mov
xor
xchg
fidivrs
push
addb
jg
sbb
fistps
xor
dec
mov
cwtl
xor
aaa
sbb
dec
popf
cli
popa
pop
xchg
push
int
andl
sahf
enter
loope
sti
jo
jge
mov
std
jae
sbb
mov
sti
xchg
sub
lds
cltd
and
xor
jb
int
push
xlat
sub
jne
lahf
mov
push
jg
aam
add
imul
mov
and
or
cmp
scas
dec
inc
ljmp
cmp
mov
leave
outsb
push
pop
mov
insb
cmc
es
call
push
sub
and
dec
enter
mov
test
mov
sub
mov
mov
xchg
inc
push
int3
jb
push
pop
lods
repnz
movsb
ficomps
imul
lock
dec
or
loope
enter
or
out
scas
notl
jg
arpl
push
jnp
jl
adc
pcmpgtd
icebp
popf
fs
adc
xor
shll
ret
mov
scas
outsl
sbb
nop
sahf
sub
test
test
add
rorb
scas
lcall
fildl
ja
cmp
or
jae
dec
xor
mov
or
push
mov
mov
popfw
aas
call
dec
mov
test
jno
call
mov
leave
xchg
adc
and
or
push
sbb
pop
push
sarl
inc
push
jp
mov
inc
adc
ret
cmpsl
iret
fldl
lahf
mov
dec
loope
push
sbb
dec
test
xor
je
in
xlat
xor
movsb
pop
insl
stos
push
and
movsl
push
pop
inc
lret
push
mov
mov
inc
fsubrp
repz
xchg
orps
mov
dec
inc
add
out
jae
pop
push
mov
scas
sub
mov
in
loope
pop
pop
mov
test
je
iret
inc
mov
lret
jb
andb
pop
stc
scas
adc
rcll
mov
cmp
cmp
and
into
jnp
cmpsb
mov
into
cmp
test
mov
mov
fdivl
jno
pop
jo
jg
pop
mov
or
call
jge
add
fs
inc
sbb
sbb
popf
das
jae
jmp
outsl
sbb
sbb
loope
mov
adc
jmp
popf
aas
push
sub
push
pop
cwtl
jbe
jae
push
inc
data16
nop
lahf
inc
inc
xlat
icebp
and
push
adc
imul
in
sbb
pop
je
gs
push
adc
int
ja
iret
adc
mov
sbb
push
in
in
les
xchg
sub
pop
push
mov
jmp
mov
push
scas
mov
inc
mov
sarl
in
out
clc
xchg
cld
mov
mov
sub
cld
outsb
bound
popf
pop
stos
lods
jl
xor
jmp
sbb
mov
std
inc
daa
dec
push
sahf
sbb
add
pop
ja
in
xchg
shll
adc
adc
xchg
xorb
stos
cmpsl
std
jle
sub
sbb
cmpsl
js
jp
push
push
cmp
lock
outsl
pop
ret
dec
or
mov
pop
movsl
xor
iret
and
test
out
dec
pop
mov
out
xor
pop
hlt
xchg
mov
mov
sub
push
fildll
dec
fsubr
bound
cmp
mov
in
xchg
fistpl
push
insl
sbb
sub
add
or
or
repz
sbb
mov
aam
cmpsl
pop
lret
ret
dec
adc
imul
inc
fistps
sbb
xor
das
ss
test
fwait
stos
mov
fwait
add
int
dec
rcrl
xchg
add
mov
adc
xor
pushf
fisubl
push
cmpsb
and
aaa
sub
cli
dec
nop
mov
insl
std
jmp
cmp
andl
test
xchg
xchg
adc
inc
pushf
inc
cmp
shl
lock
mov
cwtl
xchg
insl
inc
xchg
pop
aaa
mov
and
int
push
jne
icebp
sbbb
gs
imul
mov
sbb
in
push
mov
xchg
jbe
mov
mov
adc
push
jne
mov
push
add
pop
ucomiss
mov
mov
push
xchg
outsb
orb
push
xchg
and
push
stc
jnp
loopne
ljmp
leave
in
imul
cmp
out
call
dec
cwtl
test
or
push
xchg
fiaddl
jge
xchg
push
adc
mul
or
xchg
mov
cmp
fiadds
gs
lret
popa
sbb
mov
jl
in
dec
mov
test
sbb
sub
jl
mov
cmc
ljmp
int
das
mov
adc
cmp
xchg
adc
xchg
les
inc
loopne
sub
mov
jae
mov
inc
cmpsl
fsubrp
cmp
dec
mov
mov
mov
mov
shll
xchg
cmp
stc
loope
push
les
dec
pop
ucomiss
and
movl
mov
adc
cmpsl
adc
pop
pop
sahf
add
ficoml
test
cmc
jmp
call
fwait
inc
jle
fcmovnu
cwtl
in
idivb
in
fbld
sti
inc
out
jge
xor
lret
cmpsb
and
mov
das
sub
adc
jae
cmpsl
ljmp
and
cmp
stos
fstpl
fstpl
lret
test
dec
mov
mov
popa
push
lahf
jno
xchg
sti
or
fwait
add
jecxz
aad
cs
mov
stos
int3
mov
sub
aaa
pusha
jo
pop
les
cltd
ret
push
push
cltd
mov
mov
testb
sti
scas
pop
mov
repz
jl
data16
lods
or
mov
sbb
push
leave
mov
sub
mov
or
data16
cmp
stos
out
inc
pop
push
mov
push
jno
push
call
xor
rorl
cld
nop
loopne
int
int3
mov
rcpps
cwtl
or
inc
adc
out
mov
xor
out
cmpb
fwait
mov
cmp
aad
xor
add
mov
not
and
outsl
mov
inc
sub
scas
xchg
push
insl
jnp
cltd
jle
stos
push
mov
roll
insl
xor
into
push
mov
xchg
lret
push
les
roll
add
cli
pop
cmp
cmpl
sub
jo
jo
rcrb
fdivrs
mov
sahf
mov
pushf
das
jb
enter
in
fdivs
inc
sub
jp
fldlg2
mov
bound
sub
and
popf
ds
insl
arpl
pushf
loopne
dec
sbb
pop
dec
out
fs
or
cli
push
xchg
mov
pop
mov
sbb
or
push
jge
mov
jg
stos
mov
xchg
pop
jb
sub
lea
out
add
les
repz
mov
adc
inc
xchg
clc
adc
cmp
jl
jbe
test
loop
cmpb
fdiv
inc
pop
pop
pop
push
movsb
std
jo
push
push
push
sub
fstps
push
arpl
or
xchg
int3
loop
enter
cmp
loop
pushf
and
mov
jp
in
xor
dec
sub
inc
jae
adc
mov
mov
cmp
enter
imul
cmp
mov
mov
scas
xor
lods
fstl
push
jae
sub
mov
and
arpl
xor
fnstsw
jne
fdivrs
push
and
jmp
roll
pop
xchg
xchg
pop
test
lcall
adcb
das
or
int
shr
fsubl
jg
in
jle
push
sub
pusha
pusha
push
in
repnz
xchg
jb
pop
fsubs
or
inc
jbe
jbe
loope
les
test
jle
fwait
test
and
test
cmp
mov
sub
add
ret
repnz
aad
sub
lcall
dec
outsl
or
or
arpl
jl
insb
mov
mov
clc
enter
mov
pop
or
xor
call
pop
test
xchg
or
jge
adc
int3
or
mov
out
pop
subb
ret
push
xchg
push
outsl
addl
lret
dec
enter
xchg
test
imul
push
lods
adcb
pop
xchg
js
loope
sbb
sub
cmpsl
and
nop
in
mov
inc
push
sbb
add
js
or
lcall
fs
in
sbb
enterw
sbb
pop
in
jnp
loopne
shll
mov
scas
dec
pop
shlb
jg
jo
dec
mov
arpl
jb
fdivp
lret
pop
andb
mov
sub
in
add
sub
sbb
aad
ficoml
imul
mov
scas
sub
jae
shr
fadd
repnz
lods
in
in
insb
ja
loop
lds
xchg
or
lahf
inc
movsl
ss
jo
ja
repz
ljmp
push
push
xor
pop
sub
jmp
sbb
pop
ljmp
adc
leave
pop
dec
pusha
ret
and
sub
stos
mov
inc
lahf
cmpsb
xchg
sub
movsb
mov
xchg
in
sahf
cmovge
dec
ljmp
adc
or
fdivr
aam
test
fwait
adc
cwtl
dec
lret
mov
enter
cmp
and
cmp
mov
xorl
insb
xchg
mov
mov
push
stos
mov
xor
les
and
testl
push
jecxz
dec
call
or
lea
lods
jmp
clc
lods
rorb
xchg
sub
inc
daa
dec
loopne
lret
icebp
test
xchg
push
mov
jl
hlt
je
and
lret
jle
inc
pop
jbe
cmc
mov
out
pop
push
popf
lock
xor
jmp
repnz
mov
and
out
pop
fiaddl
inc
lods
aam
mov
add
mov
cmp
mov
divl
sti
pop
rol
mov
xor
daa
daa
cld
mov
mov
pop
mov
ret
das
or
loop
stos
call
jnp
pushf
inc
roll
and
xor
cs
xchg
jle
mov
dec
xchg
mov
shlb
xorl
movsl
je
push
je
gs
and
or
jne
adc
ljmp
dec
mov
shll
int3
std
scas
stos
push
push
xchg
scas
lahf
jae
aaa
and
mov
mov
pop
sbb
cwtl
sub
add
and
mov
adc
hlt
sub
mov
cwtl
push
dec
pop
shlb
sbb
jge
je
xor
jo
inc
cld
push
push
add
mov
pop
dec
and
jecxz
lds
pop
sbb
hlt
lret
jae
lret
xchg
jne
mov
fwait
pop
mov
rcr
call
cld
pop
adc
imul
fnstsw
and
dec
movsl
jno
sbb
mov
jno
xchg
dec
mov
push
dec
jno
int
lret
test
imul
dec
outsb
scas
sub
adc
xor
xor
inc
xor
add
add
arpl
pushf
adc
int
pushf
inc
cmpsl
cmpsl
jp
sub
inc
pop
push
cmpsl
inc
stos
loopne
pop
sbb
mov
push
jns
addr16
aaa
mov
adc
jne
mov
in
and
gs
jbe
in
adc
xchg
pushf
mov
mov
add
inc
stos
gs
ljmp
or
and
dec
stos
filds
mov
hlt
js
push
dec
mov
jg
insb
fidivs
mov
mov
stos
jne
sub
icebp
xchg
jp
push
shl
cmp
and
test
push
test
sbb
in
inc
dec
pop
cmp
mov
rcrb
out
sub
int
jecxz
mov
xchg
and
mov
sahf
inc
leave
inc
into
jnp
ds
ret
aas
cmpl
cmp
popf
inc
cmp
dec
or
data16
lret
mov
stc
aad
stos
inc
cmpsb
xlat
cld
xchg
jns
jbe
jge
mov
add
daa
mov
and
inc
mov
xchg
xor
mov
xchg
push
dec
in
shl
inc
leave
and
jbe
call
inc
loop
and
adc
cmp
mov
leave
cwtl
mov
add
jns
loope
pop
rolb
sbb
fists
into
je
int
dec
xlat
add
jmp
add
xchg
mov
sub
add
adc
sub
scas
xor
xchg
jmp
pop
add
clc
imul
dec
cltd
lret
lods
cmpsb
insb
testb
xchg
xchg
rcl
call
aad
lret
mov
das
jne
mov
cmc
dec
and
adc
cs
ret
dec
in
loope
in
imul
fdiv
leave
pop
cmp
inc
dec
imul
push
cs
psraw
xchg
adc
or
and
cmp
repz
dec
fsub
xchg
cmc
add
dec
fstpt
leave
adc
jmp
icebp
sbb
pop
dec
jmp
movsl
xlat
vshufps
aaa
stc
sahf
sub
push
sub
inc
arpl
sbb
in
or
xchg
insl
mov
or
push
add
sti
cmp
jecxz
sahf
out
xchg
ret
int3
mov
xor
mov
mov
call
cmp
sub
jmp
adc
sahf
adc
insb
push
pop
jno
out
mov
dec
out
cwtl
adc
mov
repz
out
jmp
roll
jae
aaa
cli
clc
adc
cwtl
mov
lcall
add
push
push
fidivl
inc
cwtl
xor
inc
popa
insl
mov
imul
in
push
lds
das
imul
pop
sbbl
lods
negl
and
nop
das
lds
leave
loope
test
outsb
je
adc
shlb
dec
rcr
lea
xor
inc
mov
lcall
test
pop
mov
daa
or
imul
fwait
lods
and
push
cs
fisttpl
aaa
jge
cs
add
fisubs
insl
pushf
movsb
inc
ja
cli
call
mov
add
mov
jbe
lds
push
pop
push
dec
idiv
cmp
shlb
iret
pushf
push
mov
popf
inc
sub
ret
add
and
orb
aad
outsb
and
imul
cmp
add
cli
inc
lock
adc
imull
adc
aad
repz
add
xchg
jge
lahf
pop
shll
pop
int
ja
push
add
add
hlt
add
sub
ret
scas
inc
dec
sub
adc
inc
and
inc
add
dec
in
cwtl
pop
into
mov
shll
mov
test
icebp
and
mov
mov
addr16
test
xor
pop
sbb
xchg
xchg
mov
sahf
out
or
les
jle
cli
stos
xchg
stos
loop
loope
jns
cmc
adc
adc
inc
pop
test
jno
inc
jnp
xchg
sbb
jno
aas
shll
sbb
mov
pop
in
addr16
and
dec
das
push
xlat
push
andb
inc
data16
cli
mov
inc
jb
cld
jnp
push
fbstp
mov
dec
imul
je
icebp
fisubrs
mov
in
aas
xor
gs
adc
scas
popa
scas
and
push
movsl
xor
lahf
cmpb
pop
pop
enter
cmpl
hlt
xor
push
push
int
push
sbb
push
sbb
sub
shlb
dec
push
jecxz
scas
mov
jle
sub
inc
sub
inc
dec
cmp
loope
jne
dec
sbb
das
xchg
jno
push
sub
xchg
int
jnp
lods
in
ljmp
push
testb
xor
push
pusha
daa
sub
gs
lahf
daa
push
lods
js
sbb
fistps
xchg
or
jo
jnp
lods
aad
lds
cmp
shrb
aas
test
into
dec
mov
xchg
lret
jne
mov
loope
scas
into
cmp
es
push
imul
fldcw
in
jp
or
aad
lret
cmp
cmp
push
adc
ljmp
jle
ds
jnp
lods
bound
jg
daa
inc
es
cmp
pusha
mov
inc
dec
jne
jns
dec
add
inc
pop
xor
imul
ret
ret
jae
push
mov
inc
jo
mov
cwtl
inc
jge
push
mov
js
xchg
in
adc
lret
mov
add
push
push
notb
push
dec
stos
lret
ss
mov
xchg
sbb
push
lea
leave
lahf
push
stos
or
xor
es
dec
mov
cltd
aad
mov
stos
add
fisubs
popf
loope
in
add
jo
roll
adc
sarl
adc
aaa
xchg
rorl
xchg
jg
popa
mov
push
xchg
xlat
rolb
fdivl
nop
pop
in
inc
in
loopne
mov
test
or
lcall
xchg
push
dec
cmp
xchg
jg
jb
sbb
popa
test
pop
pop
push
and
fstpt
sub
stc
ret
jg
xor
sub
adc
iret
mov
out
or
lods
popa
aad
mov
push
es
shrl
jae
add
loop
pop
and
sti
fucom
xor
add
outsb
pop
daa
sbb
jmp
xchg
stos
je
adc
inc
test
bound
daa
sub
or
jl
scas
cli
push
push
and
inc
das
add
mov
lods
mov
and
pop
mov
jle
cltd
call
add
inc
rclb
xchg
sub
cwtl
cltd
mov
pop
mov
adc
out
jb
arpl
cmp
pmulhuw
adc
sbb
and
popf
pop
mov
adc
test
arpl
mov
bound
test
sub
into
inc
mov
aam
mov
imul
in
pop
inc
ret
push
cmp
lock
bndldx
push
and
jnp
outsb
add
movsb
js
xor
push
add
pop
cmp
adc
jno
mov
in
mov
and
insl
mov
xlat
adc
adc
xchg
xchg
in
dec
mov
out
xor
cmp
sahf
es
push
jnp
sbb
jae
sub
rcll
adc
push
mov
adc
sbb
sub
data16
sti
cltd
push
dec
adc
and
fcoml
test
xchg
jmp
lods
mov
das
cs
cmp
adc
aam
sub
imull
push
ds
aam
sbb
sbb
into
fcomip
iret
int3
push
xchg
mov
dec
pusha
and
je
nop
pop
mov
daa
inc
jl
inc
pushf
cwtl
xor
dec
fdivr
stc
adc
jmp
pop
mov
mov
mov
loopne
mov
loopne
ret
ljmp
addr16
jo
push
or
jno
in
adc
test
and
leave
push
push
pusha
pop
out
push
js
or
mov
enter
xor
hlt
lock
fisttpl
outsl
shll
lret
xchg
js
sub
jbe
ja
in
aad
popa
jmp
and
push
cwtl
fistps
fwait
mov
push
and
lea
xor
and
jp
inc
insl
popf
shrb
pop
mov
and
je
sahf
push
stc
mov
decb
leave
mov
xor
outsl
push
ja
ret
xchg
out
loope
mov
enter
loop
mov
mov
outsl
les
inc
push
jp
in
push
insl
push
shll
xchg
and
iret
and
gs
in
xor
push
xor
subb
jge
int3
sub
sub
sub
or
loopne
movsl
jnp
rcll
in
test
push
lock
add
int3
dec
std
or
nop
sbb
mov
icebp
pop
mov
mov
mov
sbb
or
mov
pop
aam
ja
sub
push
enter
jg
push
mov
mov
xchg
fmul
push
and
xor
push
mov
xchg
test
sub
cwtl
xor
lds
push
rorl
pop
aaa
cwtl
orb
data16
fimuls
gs
xor
jle
dec
jbe
cmpsb
mov
int
gs
jg
aad
sbb
push
and
sarl
mov
and
pop
out
or
push
loop
bound
cmpsl
decb
and
test
je
pop
rorb
jne
js
lods
fcmovnb
cwtl
ja
xchg
scas
inc
pop
mov
iret
inc
cmpsl
roll
and
clc
xchg
fs
cmp
mov
adc
test
scas
out
add
dec
xchg
faddl
pop
stos
add
jb
and
pusha
mov
aaa
sahf
cld
mov
dec
sbb
xor
leave
cmp
inc
popa
and
mov
cs
loopne
int3
or
data16
leave
movsb
jnp
dec
mov
cmpsl
adc
sub
jns
cmpsb
in
add
int
mov
jp
jl
int
xor
add
fisttpl
jae
loop
addr16
dec
jg
cmc
mov
lods
loop
mov
jge
out
mov
mov
sub
aas
mov
sub
ja
daa
sahf
shrl
dec
es
loop
jne
xchg
mov
or
xchg
inc
mov
inc
sti
mov
dec
ficomps
mov
mov
stos
leave
inc
loopne
sub
dec
rcrl
fucomp
pop
pop
xchg
add
jge
add
sbb
push
imul
cli
sub
add
stos
and
lods
inc
inc
xchg
jp
push
dec
loopne
xchg
mov
add
push
xor
cmp
es
icebp
imul
jl
pop
decl
out
loop
mov
sbb
jg
xlat
repnz
and
mov
clc
dec
mov
mov
mov
mov
mov
mov
das
fnstcw
sub
mov
nop
cmpsb
jae
or
lods
and
mov
push
jmp
jno
push
out
lret
mov
inc
scas
ja
push
or
xchg
roll
cmp
pop
data16
adc
fucom
lods
js
ljmp
mov
mov
inc
push
mov
fcomps
aad
xlat
sbb
pop
out
xchg
lock
lahf
jmp
mov
add
pop
stc
mov
lcall
addr16
shlb
mov
jmp
mov
or
jo
insb
add
mov
or
add
mov
std
jns
push
outsl
dec
jge
pop
mov
add
shrb
loope
mov
inc
mov
fidivrl
popl
lret
push
pop
repnz
xchg
out
rcrl
jecxz
push
aad
jmp
jae
popa
add
xor
mov
divb
sub
dec
fwait
bnd
fnstsw
inc
fstl
mov
mov
lock
add
mov
out
addr16
jl
jecxz
inc
loope
insl
popf
stc
repz
mov
lds
rcrb
lahf
jle
repz
subb
loop
rolb
mov
mov
out
fsubl
ja
mov
imul
lods
scas
repnz
or
sti
dec
mov
daa
push
push
lods
dec
mov
testl
jle
sub
jmp
and
stos
push
rcll
insb
push
pcmpeqw
notb
pop
lahf
sbb
fwait
in
push
xchg
test
into
jmp
sti
iret
das
jbe
cltd
hlt
xchg
shll
clc
popf
popf
aam
cli
jo
add
fdivrs
push
push
dec
pusha
add
arpl
jmp
imul
xchg
push
pushf
add
outsb
jb
je
mov
jmp
cmp
inc
fldl
push
jl
je
call
adc
mov
fistpl
loopne
or
push
fdivr
jae
outsl
sub
cmpsl
xor
inc
jb
pop
jne
fwait
adcb
sahf
cld
and
lahf
out
mov
sbb
jno
xor
jmp
cmp
test
imul
movlps
push
in
fs
add
sub
lea
xchg
inc
push
in
shrb
mov
adc
iret
movsb
popa
mov
xchg
jns
imul
lahf
xor
cmp
mov
xchg
popf
sbb
lret
data16
lods
fwait
loope
mov
notl
mov
repnz
dec
push
jp
mov
jno
es
in
stc
ret
mov
mov
lret
jb
xchg
popf
loop
leave
ret
jp
mov
daa
ds
les
xchg
fstpl
mov
push
jbe
mov
adc
push
cmp
and
mov
sub
xchg
add
repnz
cmp
pop
xchg
cmp
mov
xor
loop
clc
stos
cmp
jns
pop
cmp
mov
arpl
idivl
ja
out
mov
mov
mov
iret
pop
ret
jnp
out
dec
push
mov
push
out
mov
sub
push
les
cmc
inc
pushf
sbb
push
push
push
jbe
fisttps
and
lret
fsubs
fstps
outsb
clc
loopne
sarl
and
in
xchg
mov
xchg
dec
xchg
pop
and
mov
or
jns
arpl
add
dec
repnz
jl
sar
addr16
cmp
dec
and
loope
imul
sbb
lods
ja
bound
or
cmp
hlt
in
subb
test
fidivl
cmp
sbb
aaa
cmp
mov
lret
test
push
xor
les
cwtl
inc
sub
js
vmulss
jp
pop
and
push
inc
jg
fstpl
xor
adc
mov
cmc
adc
out
jl
adc
test
jl
int3
pop
jb
div
lods
and
aam
push
test
mov
jle
mov
sub
and
imul
aaa
insl
movsl
aam
jbe
pop
ret
adc
cmp
shr
push
insb
or
test
out
mov
xchg
or
stos
jno
aas
arpl
pusha
pop
icebp
hlt
mov
int
imul
int3
ss
xchg
dec
cs
iret
jl
push
iret
push
in
movsl
adc
jno
mov
cmp
inc
leave
sahf
call
movsb
inc
cmpsb
fidivl
dec
mov
adc
out
add
inc
bound
mov
movsb
movsl
inc
shlb
mov
int3
lds
je
mov
mov
dec
popf
mov
adcl
mov
stos
scas
faddl
pop
popf
scas
arpl
mov
test
aam
data16
inc
add
cmc
jle
push
xchg
adc
sahf
pop
jnp
jbe
cmp
call
lahf
mov
iret
aas
and
enter
xorb
loope
add
adc
int
std
mov
jmp
mov
insl
xlat
push
jmp
fbstp
jae
or
mov
cmp
sub
jns
adc
mov
dec
pop
mov
jg
shrl
loope
popf
push
push
push
icebp
push
jl
add
xchg
mov
cltd
add
jg
arpl
hlt
jge
cwtl
cmpb
hlt
nop
pusha
lock
fstps
lahf
in
fsubr
adc
leave
loopne
sub
sub
cltd
clc
mov
jns
pop
dec
pusha
sub
add
mov
mov
inc
pop
xchg
mov
lods
insl
push
push
jmp
mov
jne
insl
jbe
loop
cmpsl
cmpsl
out
xchg
enter
sub
mov
fwait
add
xor
mov
scas
push
js
mov
mov
ds
inc
test
out
aam
and
leave
not
xchg
pusha
mov
fcmove
lcall
scas
scas
pop
cmp
pop
roll
jb
jne
roll
mov
lcall
cmpsb
inc
sub
dec
sbb
push
nop
mov
nop
jne
push
xorl
xor
pop
mov
loope
dec
fidivl
jp
out
adc
addr16
lods
mov
jb
xor
add
daa
aaa
or
mov
enter
lock
cmp
push
in
nop
inc
out
scas
imul
mov
jmp
inc
mov
push
sbb
repz
icebp
jbe
lret
fs
call
cmp
mov
cld
sbb
mov
loope
loopne
ficoml
sahf
stc
or
and
aas
lea
jnp
sub
scas
pushf
shrl
xlat
sub
ja
rorb
xchg
dec
scas
out
cwtl
ljmp
inc
cmp
sahf
test
stos
push
ret
cltd
sub
dec
sub
push
and
stos
test
mov
shll
and
ja
imul
xor
rcll
imul
xchg
dec
imul
fdivl
pusha
arpl
xchg
inc
adc
sti
scas
lea
push
jle
add
das
dec
call
push
mov
jae
dec
mov
add
xchg
mov
xor
cs
xchg
sahf
cltd
cmp
insb
cli
lods
jmp
mov
or
mov
aam
subl
nop
and
addl
mov
sbb
adc
jmp
xchg
call
xchg
pop
sahf
pop
push
fadds
test
jns
adc
pop
push
mov
inc
mov
mov
xchg
lods
mov
and
addr16
inc
in
das
out
fs
xor
mov
push
push
popa
out
and
data16
xchg
xor
test
mov
leave
std
shrb
sub
add
movsb
pop
mov
pushf
arpl
or
jnp
push
dec
shr
lock
adc
xchg
push
fsubl
aaa
negl
xor
adc
xchg
fmul
out
xchg
bound
popa
xor
test
addr16
add
cld
sub
xorb
or
out
xchg
aas
das
adc
sbb
lcall
or
jp
mov
mov
xor
mov
std
fwait
aas
jp
mov
repnz
push
hlt
sub
pop
jmp
cwtl
mov
cmp
xlat
cmp
dec
out
shlb
add
lods
sbb
xor
ljmp
imul
inc
mov
mov
xchg
sub
pop
xchg
and
sbb
cmp
lret
xlat
out
leave
and
jns
push
mov
fdivl
cmp
xor
fwait
or
dec
je
jns
jmp
wrmsr
dec
repnz
outsl
in
rcll
bound
mov
cmc
sub
mov
push
pop
cwtl
pop
shll
xchg
push
repnz
das
xchg
ja
stos
cmpsb
mov
pop
cmp
addr16
pop
mov
and
xchg
sbb
orl
adc
sbb
cmp
les
dec
jno
adc
cmpsb
or
lea
dec
stos
cmp
nop
test
add
push
jle
jb
dec
jae
hlt
add
mov
sub
fs
push
mov
outsl
loop
out
fcompl
lock
incb
inc
aam
inc
or
insl
cs
mov
mov
or
cmc
xchg
or
popa
lahf
cmovo
xchg
ficoms
icebp
push
jle
inc
ss
jb
add
jg
fistl
sbbl
mov
sbb
add
pop
in
xchg
xor
ljmp
xor
xchg
test
xor
pop
bound
add
xor
jl
movsl
lock
push
data16
les
fmull
inc
aam
imul
into
mov
add
mov
mov
popa
xor
xor
daa
lock
push
cmpb
pop
popf
sbb
push
lods
inc
jb
dec
shlb
cmc
daa
jl
nop
jbe
or
leave
test
push
adc
inc
into
mov
jno
sbb
repnz
push
adc
adc
testl
shrb
mulb
outsl
mov
xchg
into
out
fsubrl
adcl
jbe
cmc
mov
pop
iret
push
lahf
es
mov
sbb
or
aas
lea
mov
push
adc
xor
movsb
outsb
push
jbe
leave
push
mov
scas
adc
addr16
popf
sbb
xlat
test
inc
test
loope
and
je
arpl
outsl
mov
push
push
mov
adc
shrl
daa
cmp
sub
jmp
sub
fstpt
mov
mov
scas
cld
pop
sbb
mov
fdivl
adcl
mov
out
outsb
mov
adc
push
xor
sub
shll
xchg
std
sub
dec
sub
movsb
enter
and
imul
ret
mov
xchg
push
dec
xchg
stos
insl
xor
iret
push
cs
adc
sbb
sbb
and
mov
std
dec
xchg
jno
adc
push
mov
jns
mov
je
dec
inc
and
pop
hlt
out
mov
or
ljmp
sub
and
inc
dec
adc
pop
dec
xlat
inc
pop
push
xor
or
push
mov
jp
popf
pusha
fadd
and
out
fsubs
xor
stc
mov
push
dec
and
jnp
inc
add
js
jmp
jno
jae
xlat
test
adc
rclb
xchg
sbb
sub
outsb
xchg
xor
pop
mov
negl
inc
lcall
scas
rcr
dec
fcomps
dec
aam
jb
inc
pop
sahf
ja
lret
popa
sti
mov
xchg
or
push
cmp
pop
and
mov
push
add
fbld
pushl
adc
sub
mov
pop
pushf
xor
decb
bound
clc
ja
icebp
pop
and
pop
push
stos
pop
out
pop
and
les
es
push
xchg
cld
inc
jo
and
mov
in
fbstp
iret
xor
leave
jnp
mov
cs
cmp
insb
jmp
daa
dec
pushf
pop
mov
xchg
and
add
sub
add
or
or
mov
ljmp
push
test
sahf
cmp
pusha
sahf
lret
push
mov
movsl
pop
mov
pop
inc
sub
jl
stos
adc
mov
xlat
adc
aam
inc
mov
out
ljmp
sbb
loop
lods
add
sbb
rclb
lds
or
sti
scas
jno
mov
cmp
cmp
jecxz
mov
ss
xor
push
repz
add
testl
test
ja
sbb
stos
cltd
pop
xchg
jge
rorb
rcrl
popa
stos
mov
push
sti
cmpsl
jns
imul
xlat
lods
mov
lods
xchg
lea
leave
aas
pop
test
mov
sti
das
cmp
sbb
testb
xchg
mov
pop
ret
add
push
jo
aad
mov
xor
dec
lock
mov
and
les
sbb
push
sahf
lret
scas
mov
iret
sub
arpl
inc
adc
jmp
clc
sbb
mov
fucomp
cmp
cmp
push
push
loop
sub
mov
lea
push
in
mov
adc
pop
or
push
lods
sbb
insl
add
mov
jg
mov
xor
mov
out
aam
sbb
jp
adc
push
ljmp
frstor
mull
dec
scas
mov
sbb
pop
jge
inc
xor
leave
pop
aad
jne
iret
jbe
mov
push
or
popa
sbb
repnz
adc
ja
push
jmp
mov
adc
add
dec
test
fmuls
imul
lea
insb
clc
mov
int
std
into
adc
mov
jne
loop
xchg
lea
jp
cmp
das
aad
inc
mov
push
cmp
or
std
mov
sub
stos
mov
mov
inc
mov
stos
jmp
mov
push
push
mul
fstpl
cmpsb
add
push
cmpsb
push
subb
push
es
ret
xorb
jbe
adc
lret
cli
arpl
ja
dec
fstpt
and
into
sbb
and
and
or
data16
inc
bound
pop
pushf
int
xor
repz
xlat
in
mov
and
cmp
jne
sahf
in
popf
cli
jno
xchg
shld
outsb
add
jnp
inc
outsl
cmp
in
and
es
pop
adc
test
out
push
lock
xchg
je
insl
sbb
xlat
outsl
pop
cwtl
sbb
or
insb
inc
or
mov
rolb
shrl
test
lds
dec
xor
sbb
mov
fwait
sahf
xor
movsl
bound
sahf
ds
jns
cmp
stos
jbe
shll
bound
aam
cmp
jp
and
lds
jb
lds
mov
icebp
fisttpl
pop
xchg
add
sub
adc
negb
das
out
addr16
cmpsb
cs
mov
fcmovne
fwait
int3
add
pop
loope
mov
cmp
test
sub
dec
jns
xchg
jne
pusha
xchg
push
sbbb
cmp
push
push
adc
cmp
mov
sti
test
insl
add
push
cltd
movsb
rolb
inc
loopne
mov
rcrl
int3
sahf
dec
xchg
mov
jecxz
mov
adc
sahf
insl
into
inc
push
mov
inc
std
clc
pop
lret
push
lods
xchg
mov
in
scas
cmp
xor
and
cmp
lods
nop
lods
mov
cmp
arpl
jp
out
outsb
jecxz
stc
sbb
in
dec
jb
sub
in
cmp
mov
sub
mov
sub
enter
pop
aam
out
in
bnd
nop
aad
add
jbe
enter
adc
inc
cmp
cmp
adc
mov
jo
jl
ret
mov
mov
mov
jp
fists
dec
push
aam
aad
sbb
lds
clc
pushf
jo
sub
inc
mov
aas
push
xor
fdivr
leave
loope
aas
mov
dec
pop
mov
ficompl
adc
mov
push
push
lret
iret
jp
lret
pop
sub
cmp
popf
test
js
fwait
imul
popa
push
outsb
cvtps2pd
mov
sahf
cmp
mov
test
pop
mov
cwtl
scas
insl
fcomps
jno,pn
xchg
outsb
push
idiv
fiaddl
pop
scas
xchg
rcll
ficoms
ja
inc
and
stc
sbb
bound
jns
shrd
ss
addl
xchg
inc
add
cmc
faddl
jge
mov
push
sbb
pop
pop
jmp
jmp
cs
adc
pop
mov
or
pop
sti
scas
inc
mov
lret
out
xchg
xlat
mov
sbb
out
stc
mov
mov
mov
mov
ds
mov
mov
jle
add
sbb
adc
cs
add
mov
fwait
in
adc
fs
das
or
sahf
int
std
inc
mov
sbb
sub
aam
xor
cltd
into
sbb
imul
dec
into
shr
xchg
pop
push
stos
jae
stos
xchg
mov
mov
mov
push
lahf
decb
pusha
call
enter
cmp
add
rorb
pop
push
cmp
or
pusha
loopne
jnp
mov
sub
sbb
pusha
and
mov
lea
and
adc
mov
addb
sahf
mov
aas
je
jo
mov
repnz
loope
inc
adc
imul
popf
lock
jle
mov
lret
jb
mov
mov
shrb
mov
mov
das
and
mov
inc
aad
push
ret
xchg
cmpsl
adc
call
cmp
mov
and
jne
push
adc
add
lret
mov
mov
fld
and
adc
push
out
mov
aad
ss
or
cmp
nop
insb
sbb
subb
mov
lods
adc
inc
mov
mov
sbb
push
mov
pop
test
in
es
cmp
push
fildl
cmp
shlb
icebp
add
xchg
fucomi
imul
xlat
cmp
mov
lahf
mov
jecxz
or
sbb
lea
hlt
mov
popa
adc
shll
sub
pusha
sub
fadds
dec
imul
push
mov
push
inc
rcr
cmp
lahf
aam
insb
leave
xrelease
hlt
pop
push
jnp
adc
mov
push
mov
shrb
std
mov
xlat
sub
cmp
push
outsl
mov
push
mov
iret
mov
pop
jge
inc
inc
gs
mov
lcall
mull
pop
sub
cli
push
add
inc
test
jbe
xchg
mov
sub
xor
cmp
xchg
arpl
push
sbb
and
and
jne
test
and
sbb
add
in
cltd
test
in
cwtl
cmpsb
jmp
and
or
stos
leave
and
jle
mov
push
inc
adc
mov
jne
stos
xor
inc
mov
decb
inc
out
lock
or
sbb
and
push
mov
jle
mov
adc
ss
pop
adc
popf
inc
addr16
clc
and
mov
ja
xchg
jns
jne
mov
fs
jmp
out
push
mov
sbb
jno
cmp
fisubrs
repnz
insl
cld
shll
inc
xlat
fiaddl
mov
lahf
into
pusha
mov
test
jae
add
jecxz
xchg
divl
jb
mov
dec
sbb
loope
test
stos
stos
out
xlat
aad
mov
push
mov
jle
sbb
adc
inc
push
jmp
push
xlat
pusha
or
jle
push
inc
int
adc
mov
lea
loop
enter
xor
das
shr
fiaddl
std
cmp
dec
ret
test
mov
pop
dec
sahf
daa
je
push
arpl
dec
jmp
stos
push
aad
adc
pop
adc
xor
out
lret
int
inc
enter
nop
daa
dec
pop
xchg
pop
in
ds
push
pop
leavew
mov
lods
insb
mov
scas
mov
cld
je
xchg
xchg
repz
mov
or
xchg
jl
pop
adc
push
and
out
icebp
xchg
add
jecxz
lods
aas
jle
aad
nop
mov
outsb
shlb
pusha
xchg
and
mov
pop
icebp
push
in
and
sub
sahf
rclb
or
dec
push
jnp
adc
mov
xchg
or
push
repz
dec
dec
xchg
sub
stos
mov
lods
jne
cmc
pop
clc
mov
outsb
test
cmp
imul
rorb
inc
mov
push
leave
mov
or
adc
ss
mov
lret
sub
mov
jnp
cmp
jmp
pusha
stos
push
mov
xor
js
or
int
mov
and
pop
outsl
push
clc
sub
mov
lods
jnp
mov
mov
dec
popf
jmp
mov
shll
jl
popa
inc
xchg
daa
mov
xor
test
aas
iret
gs
mov
adc
ja
les
loopne
shll
adc
imul
stc
bound
xor
cmp
jns
pop
jle
lods
mov
sub
sbb
pop
sbb
add
scas
mov
stos
mov
and
mov
and
in
push
mov
xchg
dec
test
sahf
outsl
sub
repnz
outsb
push
pop
cmp
pop
inc
mov
sbb
sbb
fdivr
mov
popf
cs
fidivl
push
jge
pop
mov
ja
out
pop
jle
out
cmp
sub
pop
aaa
push
inc
mov
jp
out
add
ret
popa
mov
dec
mov
enter
cmovge
imul
std
push
mov
mov
mov
fwait
and
adc
outsl
stc
mov
push
inc
ffreep
xchg
dec
dec
mov
out
fstpt
mov
xchg
lret
xor
test
addl
cmp
ret
xor
lcall
xchg
subl
in
or
test
jo
cli
daa
sub
jnp
inc
out
leave
push
push
xchg
mov
fstpt
pop
ds
ljmp
pop
clc
xor
test
pop
aad
fwait
popa
fwait
xor
por
jnp
add
testl
lret
gs
push
inc
repnz
popa
xchg
cld
jge
and
xor
mov
je
daa
cmp
or
loope
lret
xor
in
addr16
dec
jge
mov
repnz
jb
mov
jl
int3
and
pop
daa
sbb
jg
mov
mov
adc
sbb
test
popf
out
arpl
pop
aad
sbb
loopne
in
in
and
inc
enter
arpl
or
mov
rolb
mov
pop
xor
in
pop
cld
lods
mov
insb
fwait
or
call
incb
jae
push
mov
add
lret
fdivrl
gs
cmp
and
repz
nop
or
push
mov
add
push
mov
push
push
sahf
lret
push
out
dec
pop
rcl
cmpsl
and
int3
xor
pop
sbb
sbbb
and
ffree
mov
or
int
mov
les
test
cmpl
popf
lahf
cmp
pushf
stc
pop
mov
jne
incb
lock
push
and
xchg
push
mov
xor
jns
xchg
call
repz
gs
or
dec
xlat
push
fisubrl
dec
jb
mov
mov
push
sbb
clc
cli
cmp
in
push
popa
cmc
cmp
mov
out
and
mov
dec
frstor
dec
fidivrl
sub
js
sbb
out
out
push
sub
jae
inc
and
mov
lods
adc
sahf
sub
mov
mov
sbb
sti
mov
push
stos
fbstp
add
or
out
and
ret
add
je
xchg
loopne
mov
cmc
dec
sbb
fnstsw
or
adc
adc
xchg
sub
dec
pop
pusha
and
adc
nop
fdivrl
mov
add
insl
fcmovne
xlat
lock
neg
xor
xchg
inc
repz
lock
or
lods
jnp
decl
jns
div
mov
leave
dec
and
stc
pop
jle
sbb
bnd
add
call
pop
mov
inc
and
fwait
xchg
or
xor
aas
leave
lock
aad
or
aas
xor
cwtl
jl
push
cmpsb
mov
mov
adc
dec
or
mov
testb
gs
cmp
cmp
or
jle
hlt
seta
sbb
pop
adc
icebp
int3
movsb
add
xor
cmp
mov
push
lea
cmp
adc
lret
add
adc
arpl
out
fistps
pushf
push
lahf
inc
jl
nop
scas
xchg
movsl
test
or
out
mov
jne
push
sub
lods
sbb
add
sbb
cmp
sbb
movl
jmp
add
cmp
aam
push
add
xor
or
fsts
push
adc
iret
outsl
std
xor
test
sbb
cmp
shll
jae
dec
loop
dec
xor
and
shrb
cld
xchg
inc
cmovg
add
call
or
sahf
mov
sub
fabs
movsl
jp
andb
cs
mov
inc
xchg
inc
lret
xlat
mov
sar
insb
pop
cmp
jne
cltd
out
cmp
addb
lcall
adc
out
push
mov
pushf
or
jne
hlt
mov
dec
dec
div
pop
arpl
sub
stos
jecxz
arpl
pop
or
jne
cmpsl
mulb
and
adc
jb
cmp
cltd
sbb
pop
mov
cli
ret
xchg
sbb
rclb
std
ljmp
lea
dec
clc
sbb
fmuls
sbb
pop
sub
adc
addr16
mov
out
stos
sub
inc
push
iret
ss
mov
fwait
insl
in
fsubl
adc
fcoms
xchg
insw
lods
fs
pop
imul
sub
subl
add
add
sbb
xor
movlps
nopl
js
shrb
pop
mov
filds
hlt
cmp
jno
ds
cmp
push
in
mov
and
js
xor
xlat
pusha
or
add
lret
outsl
imul
sub
loope
inc
and
dec
sbb
and
and
adc
or
bound
pop
push
push
mov
out
repz
ss
sub
sub
mov
stos
cmp
loope
xor
jg
sarl
out
fiadds
mov
data16
std
notl
out
movsb
mov
jne
fwait
pop
adc
mov
push
add
push
lods
jge
mov
and
insb
dec
test
daa
or
cmp
rorb
fs
add
jg
push
mov
mul
mov
and
icebp
add
fldz
jae
subl
xchg
cld
inc
or
outsl
lret
push
lea
xchg
xchg
mov
ret
or
int3
popf
cld
xchg
imul
xor
adc
movsb
lret
fstps
mov
fxch
inc
jmp
clc
jmp
pop
sub
or
sbb
cmp
int
sub
pop
aaa
mov
cmp
xchg
aas
lods
inc
push
jns
adc
add
mov
nop
enter
lea
fsubrs
inc
pop
dec
mov
fistpl
and
cs
imul
jnp
cwtl
fstps
aas
in
add
sub
and
jbe
cmpsb
into
notl
or
cli
aad
adc
xchg
sar
cs
sarb
std
dec
pop
les
or
es
aam
cmp
mov
faddl
cmc
imul
out
popa
dec
popf
lods
popl
jmp
jb
sbb
push
adc
je
fs
pop
dec
push
mov
out
adc
mov
cmp
push
jb
mov
and
xor
adc
push
pop
jo
pop
popa
xchg
dec
mov
ja
mov
imul
xor
lret
inc
xlat
lock
and
aad
not
test
xchg
sbb
rolb
jg
in
outsl
into
jae
sub
nop
data16
xorb
sbb
pop
mov
sti
jbe
decl
test
xchg
aad
jno
pop
ja
or
mov
jae
inc
sahf
movsb
mov
dec
int
fs
enter
sahf
jb
es
int
mov
mull
cli
xorl
aad
xchg
test
dec
jge
and
ss
push
push
xor
mov
or
inc
test
mov
adc
cmp
es
jle
xor
xchg
xor
fdiv
adc
sub
sbb
xchg
jp
das
mov
xchg
cmpsb
shrb
xchg
push
push
leave
lea
inc
jecxz
pop
mov
xchg
inc
and
loope
insb
into
cwtl
and
adc
cmc
adc
loope
cmpsl
leave
ja
jne
js
mov
sahf
mov
hlt
adc
insb
out
sarb
ss
jl
adc
push
mov
movsl
add
and
jo
jo
hlt
int
mov
pop
adc
pop
pop
xor
cltd
jmp
pop
mov
add
jp
inc
mov
es
mov
lcall
jae
jp
mov
stos
lods
push
mov
lea
inc
enter
sti
mov
or
test
jo
mov
out
loop
aam
dec
lods
divb
hlt
adc
cwtl
xchg
mov
test
dec
fcmovnbe
mov
imul
out
gs
in
sbb
add
push
js
jo
stos
xchg
mov
fsubrl
daa
xor
or
out
loope
xchg
out
call
mov
dec
clc
hlt
pop
sub
sub
outsb
imul
mov
xor
nop
das
pop
pop
bound
inc
jbe
mov
add
insl
insb
or
jo
mov
jg
pushf
loope
outsl
fxam
test
adc
xchg
ss
sti
nop
sbb
aam
adc
rorl
aaa
jp
pop
xchg
fcomp
pop
mov
lds
or
mov
fwait
aad
stos
xchg
mov
mov
cmp
daa
mov
jae
repnz
rol
divl
fnstenv
add
inc
xchg
outsb
dec
out
sti
adc
push
add
pop
insl
or
or
cs
sub
mov
xchg
aaa
sub
mov
cmc
push
mov
xchg
scas
jecxz
fwait
pop
icebp
pop
pop
dec
adc
push
add
mov
xor
mov
jne
add
inc
clc
pop
cmp
or
mov
adc
cmp
cmp
stos
xor
iret
loopne
es
xchg
mov
inc
mov
rol
loope
lcall
inc
xor
cmp
sub
xchg
call
addl
dec
stos
dec
rcrb
in
jp
push
inc
push
lret
sarl
in
push
inc
test
jo
jbe
inc
and
inc
orl
xchg
inc
loope
xlat
ss
repz
in
cld
or
into
dec
imul
fs
call
repz
mov
das
dec
ss
aad
loop
xor
inc
mov
mov
or
nop
or
jmp
jno
sub
rcr
lahf
enter
adc
mov
cmp
arpl
adc
shlb
mov
or
rorl
dec
mov
movsl
push
movsl
lret
call
cmp
scas
push
and
and
ljmp
emms
sbb
dec
pop
inc
push
outsb
test
inc
out
mov
into
push
sarl
ja
stos
ljmp
clc
lods
cwtl
and
call
mov
dec
cmp
mov
sbb
xor
add
jb
push
icebp
dec
inc
mov
xchg
fsubrs
dec
pushf
jl
or
mov
mov
xor
pop
xor
aaa
cmpsl
cmpsl
sbb
imul
mov
xor
mov
popf
ret
pop
jbe
jl
lea
sbbl
enter
data16
mov
add
mov
arpl
cld
sub
and
call
mov
aas
movsb
call
xlat
xor
add
dec
stos
sahf
lret
sbb
adc
xchg
sti
add
and
loope
lret
ret
inc
xchg
es
mov
sbb
push
pop
inc
addr16
xor
in
adc
inc
inc
add
in
xchg
fsubr
push
imul
inc
lcall
fcmovb
add
sub
inc
mov
or
int
in
cs
loopne
js
pop
adc
jl
pusha
mov
outsl
aaa
aas
leave
mov
cmp
sarb
mov
xlat
mov
out
les
push
sub
stos
aad
clc
fldt
scas
push
inc
clc
add
je
or
mov
cmp
pop
ret
test
xchg
lea
xlat
in
es
hlt
jp
pop
push
lods
sti
test
mov
sbb
push
inc
mov
push
push
inc
xor
cs
push
cmc
mov
hlt
das
call
jle
sub
xchg
inc
loopne
dec
mov
adc
dec
pop
lock
inc
jne
cmp
pop
stos
pop
icebp
push
repz
dec
or
bound
push
sub
loop
std
mov
push
lahf
add
adc
shll
int
jg
inc
out
inc
and
xchg
lods
mov
rolb
lock
sub
adc
xorb
pop
cmp
or
dec
in
lahf
add
roll
inc
pop
adc
flds
aas
jmp
sbb
mov
fistl
xchg
rclb
in
pop
out
cmc
sbb
cmp
in
rcll
lahf
stos
jae
pop
push
add
flds
outsl
nop
sbb
mov
lret
dec
lret
fistpll
lcall
test
ret
lea
cltd
pop
jl
jo
cmp
jecxz
je
lods
test
fwait
dec
dec
xchg
xlat
pop
push
popa
data16
or
push
imul
hlt
hlt
clc
cs
lret
ds
nop
lock
movsb
push
jle
mov
repz
mov
sbb
insl
pop
lea
pop
sub
sarl
add
xor
mov
cmpsl
inc
shrb
add
and
dec
test
scas
mov
iret
add
xor
push
fdivr
mov
jge
dec
imul
pop
jnp
test
dec
jg
jbe
test
in
mov
lret
push
mov
xchg
pop
push
popa
outsl
ds
and
std
mov
es
and
xor
test
push
lcall
mov
jecxz
dec
and
xchg
push
mov
inc
and
filds
cmp
jl
and
sub
lods
sub
jns
addr16
outsb
mov
jb
add
cmp
push
int3
shr
pop
sub
les
cmp
popa
lret
and
jno
push
lret
out
inc
mov
and
dec
aaa
push
sub
ljmp
icebp
cmpsb
jbe
repz
cs
lret
xchg
push
xchg
pop
mov
jp
pop
into
mov
ds
cmpl
push
and
js
jbe
mov
sbb
test
frstor
leave
addb
nop
in
fucomi
mov
nop
enter
popa
lcall
pop
adc
scas
sti
fistl
rdtsc
mov
sub
lahf
xor
mov
scas
adc
sub
xchg
or
aas
push
jl
cmp
lea
inc
dec
ljmp
fndisi(8087
decl
xchg
pop
jae
mov
adc
cmc
jmp
test
cmp
shlb
fcomps
inc
daa
add
cmpb
dec
jmp
sahf
sub
fwait
push
push
jae
aas
jno
stos
jge
out
push
scas
push
xchg
ret
imul
shlb
shrl
out
enter
jo
cltd
repnz
data16
mov
sbb
pop
fstl
lods
fmull
xor
inc
mov
cmp
movsb
cmp
repnz
jb
xchg
clc
jae
loopne
sub
outsb
pop
dec
repz
mov
out
xlat
dec
lds
inc
mov
aam
lahf
mov
or
cmp
bound
incl
xchg
push
jle
negl
mov
test
push
lahf
jnp
sbb
lock
push
aam
jae
out
add
and
insl
lods
and
xor
popa
shl
inc
sub
dec
sar
mov
mov
mov
jle
add
adc
push
insl
xchg
sahf
or
lods
xorb
mov
aam
cmpsb
mov
or
repz
xchg
mov
cmpsl
xchg
lods
fidivrs
in
mov
xor
xlat
clc
lcall
or
out
out
rcll
add
ljmp
push
ja
or
xchg
jmp
jne
fidivrs
rcrl
lods
mov
hlt
fists
in
loope
mov
imul
dec
push
imul
cld
dec
in
imulb
rcr
popf
or
clc
jp
push
pop
and
push
xor
pushf
fwait
insl
adc
and
add
mov
jae
ret
ss
sub
shll
jne
sub
stos
lcall
orl
xor
shl
add
lods
inc
mov
sub
jl
sbb
adc
xor
gs
out
in
out
pushf
mov
or
push
xchg
lods
cmpsl
dec
pop
sahf
js
aaa
push
mov
inc
pmullw
loope
or
shlb
push
lods
push
mov
xor
mov
xorb
cmp
cmp
jmp
inc
fbstp
xchg
lock
sub
mov
sbb
xor
mov
sub
cltd
sahf
cmp
mov
std
sbb
js
xor
insl
mov
outsb
mov
adc
pop
hlt
out
ja
shlb
and
or
cmp
dec
sbb
push
jnp
fs
xchg
mov
fabs
cmp
decl
pop
jb
adc
mov
mov
cmpsb
jae
sbb
and
mov
cmpsl
dec
mov
mov
mov
dec
dec
push
es
pop
dec
mov
pop
inc
mov
gs
ss
test
clc
or
adc
sbb
xlat
jne
mov
or
mov
pop
push
inc
pop
in
push
stc
pop
not
lods
jp
pop
push
cld
adc
fidivs
stos
scas
cmp
xor
scas
xchg
adc
clc
push
inc
test
sti
out
mov
loop
shr
test
mov
jno
push
scas
cmp
stos
pop
xchg
arpl
repnz
shrb
rorb
and
call
adc
or
xor
insl
test
popa
jecxz
jnp
add
and
rclb
daa
cltd
ret
dec
jbe
and
out
shl
test
loop
dec
lock
aaa
add
and
inc
fisubrs
out
cmpsl
jl
xor
pop
jae
dec
jge
xor
pop
lods
jle
out
cltd
mov
xchg
mov
loopne
mov
aaa
jnp
or
mov
xor
scas
mov
out
jae
adc
leave
jl
xor
fisubrl
pop
es
insl
jecxz
ffreep
std
push
sub
mov
pop
incb
scas
mov
outsl
cltd
xor
scas
mov
xor
mov
pop
loop
and
sti
inc
stos
pop
sti
dec
and
dec
movsb
and
mov
mov
aaa
sbb
xchg
jnp
dec
xchg
aad
int3
inc
scas
stc
std
cmp
xchg
xchg
pusha
xor
lret
pusha
lods
movsb
mov
adc
inc
pop
pop
arpl
clc
and
cmpsl
fstl
adc
add
xchg
sbb
cmc
jp
or
ljmp
xchg
sbb
fwait
mov
mov
subl
dec
pop
lods
ljmp
sahf
inc
movsb
cltd
outsl
insb
lods
lret
mov
es
icebp
or
sbb
inc
jmp
fstps
fsubl
xchg
sarb
push
mov
jbe
adc
mov
jle
in
test
loope
jecxz
adc
call
icebp
jnp
arpl
jecxz
adc
mov
es
movsb
cmp
aad
push
dec
cmp
insl
pop
icebp
es
jle
nop
mov
fs
cwtl
outsl
out
in
sub
sub
std
adc
loopne
out
dec
stos
mov
pop
movsl
test
cmp
fsts
or
jo
out
xchg
add
jb
xorl
lret
sub
mov
nop
push
pop
add
pop
pop
inc
jbe
push
cmp
in
or
lea
repnz
shrb
call
test
or
dec
cwtl
int
movsl
std
leave
add
lea
nop
cmp
mov
hlt
push
and
repz
insb
jle
jbe
stos
jmp
nop
dec
fcoml
sbb
push
push
leave
or
sahf
mov
shll
bound
fidivs
and
idivb
leave
movsb
dec
sbb
scas
pop
enter
mov
dec
xor
inc
cmpsb
mov
cmp
ret
cmp
mov
les
int
xchg
in
cltd
rcll
stos
lock
popf
sub
ret
jmp
mov
js
jp
push
idivb
mov
mov
dec
in
mov
xchg
loop
icebp
cmc
adc
sar
mov
clc
jno
mov
fisubrs
xchg
and
push
scas
lahf
and
adc
or
and
mov
dec
lods
punpckhbw
mov
outsl
cld
xchg
ss
mov
sbb
mov
and
sub
pop
clc
mov
cmp
jae
insl
push
jmp
daa
mov
sbb
push
mov
je
fcmovne
cmc
inc
or
and
insl
ret
jnp
dec
mov
fs
jmp
stos
subb
add
mov
cmp
jp
add
push
sub
stos
inc
mov
movaps
sbb
lret
adc
sub
or
ljmp
mov
lret
mov
sub
add
js
xor
add
int3
std
push
xchg
cmp
lret
daa
sbb
pushf
cltd
movsl
push
mov
sub
leave
cmp
sbb
dec
lods
xchg
inc
mov
adcl
popf
outsl
into
stos
mov
fstpt
sbb
rclb
stos
ss
das
add
mov
je
pop
out
nop
fcmovbe
into
lea
add
and
dec
outsb
mov
adc
dec
xchg
cli
sbb
sub
push
adc
scas
int
scas
xlat
push
add
and
aaa
data16
adc
rorb
dec
mov
pop
mov
frstor
lods
lret
pop
sti
insb
subl
jmp
mov
sahf
jle
mov
aam
shll
lods
push
fisubl
mov
out
push
sbb
push
pop
pop
loope
dec
xor
mov
stc
shlb
xchg
push
cmp
imul
inc
jmp
stos
jge
mov
addr16
or
lock
sub
mov
das
inc
inc
mov
daa
subl
mov
adc
ja
loopne
fs
mov
mov
sub
mov
rorb
fucomi
push
mov
lods
mov
sahf
adc
push
dec
cli
add
lock
mov
lahf
cltd
dec
js
stc
inc
cmp
out
into
imul
sub
jne
leave
sub
out
imul
lahf
mov
test
mov
pop
negl
jecxz
mov
pop
or
adc
test
xchg
sbb
jae
push
jmp
sahf
data16
out
xchg
lea
xchg
or
enter
sahf
sahf
sbb
sahf
imul
xor
cli
fnstenv
ss
sbb
mov
stc
lods
xor
push
mov
jmp
mov
sahf
mov
pop
inc
fsubl
in
mov
add
pop
popf
pop
cmp
xor
jecxz
xor
in
sub
pusha
pop
imul
sub
adc
out
push
xor
xor
imul
faddl
dec
or
or
int3
pop
repz
fdivs
xlat
rcr
out
movsb
subb
int3
mov
inc
int3
sub
repz
fdivrs
iret
push
adc
dec
mov
push
ror
shll
popa
cld
orb
cmp
jo
mov
push
xor
rcrb
lods
pop
or
repnz
inc
cmp
add
scas
cltd
inc
push
bound
sahf
lods
xlat
imul
pop
mov
push
cli
inc
rol
push
pushf
or
iret
mov
in
lods
sub
icebp
inc
je
xor
fstps
shlb
inc
jnp
adc
mov
push
lods
sbbl
xchg
adc
fimull
jp
push
js
jle
lds
daa
pop
fidivl
xor
dec
gs
faddp
lea
stos
jns
scas
scas
pop
mov
mov
aad
mov
xchg
push
sub
repz
push
pop
jmp
ja
adc
sub
add
sub
ja
in
or
movsb
add
jp
adc
cmp
dec
clc
xchg
lock
cmc
mov
aas
in
scas
aas
or
or
jne
push
cmp
or
mov
adcb
xlat
mulb
es
mov
inc
sbb
sbb
out
mov
pushw
loope
fldenv
sbb
movsb
inc
push
es
or
imul
dec
jns
ds
jb
aas
fsubrl
push
shlb
dec
idiv
xor
lret
rcrb
mov
pop
imull
jp
ljmp
mov
int
adc
mov
jno
in
fdivrl
scas
sbb
insb
cli
mull
in
xor
jno
popa
call
lds
lds
lret
pop
daa
je
dec
lret
or
aad
dec
jecxz
jnp
lds
outsl
push
push
or
cltd
es
mov
shl
mov
ds
add
cs
imul
cmpsl
call
shlb
rorl
hlt
lock
or
mov
cmp
add
pop
mov
jns
jp
fbld
enter
imul
out
popa
jns
and
sbb
fwait
les
or
push
int3
mov
test
add
cli
sub
add
nop
mov
inc
pop
pop
sahf
and
push
lea
stos
and
push
xchg
jns
scas
inc
popf
cmpsb
movsl
imul
fs
adc
subb
xor
push
push
ss
mov
cwtl
adc
outsb
cmp
int3
test
mov
movsb
pop
mov
xchg
sarl
mov
lds
xor
and
sbb
shll
stos
and
movsl
ror
push
pop
lret
jg
pop
jno
inc
jb
out
sub
cmpsb
das
jge
sbb
mov
mov
ljmp
or
test
mov
paddd
cs
fldenv
pusha
pop
push
aaa
mov
mov
push
pop
inc
cmpsl
iret
xor
push
fcoms
jg
dec
hlt
lcall
xchg
add
cmp
and
cmp
and
popa
xlat
or
add
jecxz
cmpsl
jae
sub
xchg
cmp
dec
mov
push
mul
test
dec
test
xor
orb
negl
repz
pop
dec
inc
test
cmpsb
jb
in
jae
clc
push
and
or
stc
jl
mov
ss
test
jge
ret
cs
cltd
sub
ja
and
xchg
orb
xchg
aas
dec
outsl
jno
push
aad
mov
push
inc
fmull
xor
test
cmpsl
pushf
popf
sub
and
rol
sub
fcoms
inc
out
cld
mov
or
enter
jecxz
add
arpl
js
mov
loop
notl
jne
xchg
dec
ljmp
fs
dec
add
mov
shll
jg
push
in
fwait
jl
jle
xchg
js
adc
inc
fisubs
scas
add
ret
push
rorb
push
js
add
fstpl
jmp
push
les
mov
sub
add
rorl
test
popf
inc
inc
sbb
fistl
cmp
pop
jnp
outsb
cs
aaa
and
jb
and
repnz
repnz
mov
mov
enter
lock
add
sbb
ljmp
sub
movsl
ret
push
xchg
je
imul
inc
jmp
and
mov
inc
jbe
in
xchg
fisubrl
dec
mov
scas
in
ret
mov
negb
outsb
sub
push
pop
sbb
add
rcrb
push
das
jp
addr16
negb
mov
push
mov
fs
add
out
clc
sub
imul
lock
loop
cli
stc
mov
adc
pop
aad
mov
mov
and
pop
jecxz
dec
xor
shr
jns
loopne
fs
cmp
push
sbb
add
or
dec
cmp
aas
xchg
das
sub
pop
inc
imul
dec
movsl
adc
pushf
jb
sub
sbbb
fwait
roll
loop
jge
fs
mov
xor
mov
add
mov
adc
inc
pushf
jg
nop
sub
shrl
pop
cld
hlt
mov
cmp
inc
out
iret
jnp
pushl
lahf
jmp
mov
cltd
scas
arpl
mov
jns
loopne
repnz
ss
rcll
mov
dec
inc
movsl
or
or
lods
dec
in
or
cmp
xchg
xor
loopne
sbb
pusha
mov
ret
repnz
jae
jnp
mov
mov
mulw
test
adc
mov
lret
std
cmc
jno
bound
ja
je
adc
pusha
pop
cmpsb
addr16
xor
loopne
pop
and
shll
test
adc
xchg
adc
aaa
jne
ja
insl
sbb
mov
push
hlt
insl
addr16
mov
mov
sbb
push
rol
bound
fsubrl
outsb
push
mov
sub
out
add
pop
mov
cmp
scas
bound
rorb
cli
cmp
sub
emms
adc
jge,pt
mov
add
ljmp
mov
ret
dec
inc
cmp
mov
or
fwait
fwait
adc
fstps
das
mov
sbb
xor
fwait
lret
cmc
dec
pop
dec
and
rcrl
jle
xor
rolb
sbb
jp
ds
ja
in
jmp
jg
out
lret
pop
loop
xchg
xor
daa
in
dec
pop
jns
aam
xchg
sub
push
les
insb
loop
cmp
inc
push
and
lods
sub
adc
adc
adc
out
add
xchg
rcrl
es
call
je
sbb
rcrl
push
fiadds
outsb
dec
outsl
pop
pop
mov
xorl
adc
nop
imul
xchg
scas
out
or
xchg
mov
mov
mov
in
push
cmp
mov
lahf
outsl
scas
push
aas
push
mov
and
jbe
arpl
das
xchg
imul
mov
je
les
scas
mov
sbb
imul
fsubr
pop
add
sbb
out
adc
js
dec
push
cmp
lcall
fiaddl
ds
add
jge
out
les
mov
jo
mov
cltd
xchg
ljmp
js
xor
lds
sbb
sbb
xor
mov
stos
dec
mov
or
jecxz
std
pop
xchg
push
int
filds
cmp
imull
and
xchg
cmp
inc
xor
fisttps
dec
or
inc
pop
or
movsb
sub
js
mov
and
sti
inc
loope
push
or
and
arpl
inc
jmp
mov
xor
fiaddl
out
and
xchg
lods
inc
int
or
add
xchg
xchg
call
add
js
test
add
out
pop
mov
mov
xchg
push
fscale
repnz
fldenv
mov
fcmove
insl
cmp
inc
outsl
push
nop
mov
fdivrl
lock
jmp
xor
xchg
sbb
pop
lret
dec
pop
sbb
gs
jbe
mov
dec
push
out
inc
or
inc
or
cmp
inc
arpl
stos
cs
xchg
orl
jmp
mov
push
push
cmp
stc
lcall
and
outsb
sbb
pop
xor
int3
cmp
sub
enter
int
jbe
and
lcall
loop
ret
rcrl
cmp
xchg
flds
sahf
or
push
mov
or
mov
pop
ds
outsl
ja
pop
hlt
inc
call
jno
sub
shrl
sbb
std
and
int3
jg
sub
loopne
cmc
aaa
subb
arpl
stc
push
mov
ljmp
xchg
or
out
xchg
jmp
sbb
fldt
jg
mov
in
addr16
mov
or
pop
in
stc
ss
mov
or
sub
aam
pop
mov
sbb
push
lea
arpl
lret
mov
sub
cmp
sti
sbb
ss
dec
jno
clc
adc
scas
sub
lret
push
test
mov
push
outsb
push
pcmpgtb
leave
and
cmc
iret
xchg
dec
pop
xchg
sub
jge
pop
ss
push
mov
lahf
lods
sahf
sti
and
movsl
lcall
xchg
xor
cmp
sub
pop
cli
jb
cmpsl
movsb
push
outsl
xor
xchg
mov
dec
adc
std
and
fsubr
adc
mov
dec
notb
mov
loop
xor
out
and
and
scas
xor
xor
sti
andl
insl
sub
or
add
cs
ret
sahf
adc
jne
ret
push
fsubs
gs
pop
das
jno
inc
pop
add
or
je
xchg
rcrl
ljmp
add
xchg
or
push
dec
fsts
lock
cltd
cmp
push
mov
ja
test
bound
cltd
lret
push
push
out
and
jge
test
fsubrp
jmp
lods
push
sbb
mov
and
fisubl
cmc
nop
enter
sbb
scas
xchg
push
inc
dec
imul
add
test
fstps
fimull
pop
xchg
jo
inc
dec
mov
int3
dec
sbb
mov
and
insl
stos
or
push
lods
or
dec
mov
stc
dec
or
cli
test
stos
fwait
stos
leave
pop
inc
cmp
lea
adc
jle
adc
push
pop
je
cmp
pop
popf
pop
movsb
xor
inc
shrb
test
cmc
adc
cmp
outsb
in
out
fs
lods
dec
inc
xchg
and
nop
ljmp
dec
shrb
mov
adc
fwait
aaa
mov
add
xor
xchg
stos
inc
cmp
je
cmp
mov
test
or
or
push
aad
mov
jmp
nop
sti
.byte
add
.byte
add
add
fwait
iret
in
dec
add
add
inc
add
add
add
add
add
add
add
sub
adc
xor
adc
inc
add
and
movb
arpl
add
push
add
push
add
add
add
add
inc
dec
inc
int3
in
mov
cli
cs
push
jne
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
mov
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
mov
pop
call
test
or
add
addl
jle
sub
sub
pop
push
pop
add
push
call
hlt
sbb
fidivrs
pop
pop
mov
xor
pushl
mov
pop
xor
movswl
add
mov
xor
push
mov
pop
mov
jae
je
jnp
sub
mov
dec
jne
jo
or
jmp
dec
dec
outsl
jl
jmp
andl
add
jne
nop
jnp
icebp
push
inc
sub
scas
dec
fsub
inc
jae
fstp
stc
dec
mov
fildl
jno
cli
movsb
mov
pop
inc
mov
stc
movsb
pop
mov
clc
stos
fsubl
cld
dec
mov
in
dec
sub
inc
or
mov
lret
mov
pop
fildl
add
es
jle
or
or
add
movsl
pushf
ret
mov
aad
out
je
pop
push
mov
mov
pop
dec
mov
push
mov
sahf
cltd
add
xor
lret
cmp
inc
or
pop
mul
ret
loope
dec
mov
add
mov
repz
cld
dec
mov
je
leave
inc
push
test
adc
out
cltd
bound
jl
sbb
dec
mov
out
outsl
imul
pop
shl
push
rorl
mov
mov
lea
scas
dec
adc
nop
test
lds
stc
clc
lret
pop
sub
rolb
push
pop
cmp
int
jo
lret
mov
xchg
divl
iret
iret
mov
test
clc
clc
in
mov
xor
jp
sub
mov
xor
clc
clc
lret
ja
mov
pop
lahf
push
mov
and
pop
mov
clc
clc
mov
jns
mov
xchg
push
sbb
dec
addb
sbbl
and
inc
bound
sub
jg
aas
pop
sbb
test
fisubl
dec
fists
push
rclb
clc
clc
cld
aas
imul
sub
insl
lret
clc
test
adc
dec
int3
adc
clc
xor
stc
clc
lret
jecxz
xchg
into
mov
inc
sbb
ja
inc
dec
jno
inc
je
dec
vpmadcswd
and
xchg
imul
inc
dec
xor
out
cs
in
xchg
add
bound
outsb
je
push
inc
add
iret
sbb
popf
inc
mov
fidivrs
pop
inc
dec
cltd
mov
ret
push
xlat
fiadds
add
cltd
test
daa
aaa
cmp
stos
jmp
test
cli
mov
stos
mov
add
in
imul
and
cld
popf
shlb
test
xchg
lock
push
stos
test
push
mov
xor
jmp
imul
mov
push
jo
cmpl
test
mov
bound
xor
mov
lcall
test
pusha
xchg
mov
scas
mov
xchg
xchg
pop
mov
fsubrl
dec
fildll
and
mov
pop
mov
jle
nop
inc
ret
xor
fdivl
ss
push
xchg
fdivl
in
dec
xor
jecxz
xchg
fdivl
and
mov
fs
jae
fdivl
sahf
add
sub
aaa
mov
jle
loope
out
sahf
fdivl
sahf
fdivrl
push
fidivs
xchg
sahf
fsubrl
movsl
xlat
shll
sahf
fdivl
sahf
fdivl
adc
adc
fdivl
sahf
push
mov
adc
fdivl
sahf
sti
imul
loopne
pop
adc
fsubl
sub
test
sahf
cmpsl
enter
mov
sahf
cmpsl
push
lea
sub
loope
fdivl
mov
fadd
pop
pop
sub
loope
fdivl
and
mov
pop
in
mov
mov
ret
mov
mov
sahf
sub
mov
adc
fdivl
stc
xchg
fdivl
int
in
mov
jnp
mov
movups
sbb
sti
and
cmp
sub
sub
fstl
sub
adc
fmull
mov
sub
sahf
sub
adc
jp
push
sahf
fdivl
lahf
loop
mov
adc
fadd
pop
pop
sub
ficoml
lods
f2xm1
popf
loopne
adc
add
imul
arpl
push
loope
insb
sahf
push
cwtl
aam
mov
push
loope
adc
fdivl
mov
test
popa
xchg
mov
push
mov
outsl
mov
push
cli
fidivrl
push
stos
lret
sti
ret
test
push
mov
in
cli
fidivrl
push
stos
lret
pop
mov
js
test
push
adc
mov
push
and
or
mov
mov
mov
push
cli
fidivrl
push
stos
lret
xor
fstps
in
sub
adc
fdivl
xor
mov
push
cli
fidivrl
push
stos
lret
pusha
loop
push
dec
gs
fdivl
xor
mov
push
cli
fidivrl
push
stos
lret
lahf
ret
mov
movsl
ljmp
aam
test
loop
xchg
fdivl
mov
push
and
or
mov
mov
mov
dec
loope
ja
jb
or
lahf
ret
mov
movsl
ljmp
stc
dec
xor
xchg
sti
inc
sahf
rorl
testb
or
mov
ljmp
jnp
or
dec
and
add
cld
iret
int
divb
dec
mov
mov
sahf
fdivl
sahf
fdiv
andb
mov
and
jle
call
inc
ret
mov
sti
mov
mov
sahf
pushf
mov
inc
cmp
lock
sti
mov
pop
push
movb
nop
loopne
adc
loopne
adc
test
adc
jnp
adc
push
lret
inc
sub
xchg
fdivl
mov
mov
adc
stos
mov
push
cli
cmp
daa
cmp
leave
andl
adc
sti
add
out
fimull
out
fcompl
loope
sbb
and
xor
inc
in
xor
shll
movsb
inc
and
push
sti
add
adc
xor
mov
adc
fdivl
sahf
fdivl
sahf
fdivl
xor
mov
push
fdivl
sahf
faddl
sahf
fdivl
test
mov
sahf
fdivl
sahf
fdivl
adc
test
push
divb
or
cli
push
push
fxam
hlt
jecxz
shl
popa
add
int
sahf
sbb
add
mov
and
adc
cmp
sub
cmpsl
jno
xor
mov
mov
shll
xor
adc
into
sbb
clc
xchg
jns
inc
sub
shll
aaa
les
aaa
sbbl
sub
insb
cmpsb
cs
jne
cmc
lahf
popf
mov
dec
jp
inc
lret
repz
and
outsl
cmpsl
sbb
fistpll
pop
dec
jbe
out
loop
xor
xor
push
jb
sub
inc
jg
mov
jmp
out
xor
xchg
sub
insb
out
sbb
shrb
scas
pop
dec
fwait
fnstcw
in
aam
pop
add
addr16
rcl
out
cmp
call
cmp
xor
jnp
push
testb
add
sub
mov
enter
cld
scas
test
fnsave
test
in
movsb
cmp
fdivs
addr16
cs
leave
push
movsl
jg
int3
cmc
jg
das
xor
adc
repz
fucomp
adc
mov
outsb
jbe
fcom
adc
shrl
mov
dec
insb
in
add
fnstcw
fs
cmpb
xchg
bound
test
adc
jae
out
in
push
jnp
cs
xor
loopew
mov
mov
add
jae
cmc
jnp
fdivp
jnp
push
lea
xorl
jnp
or
mov
lds
mov
int3
test
cmpsb
mov
hlt
out
in
sbb
std
das
sbb
cmp
mov
fcomps
cmpsb
jmp
mov
or
sbb
stc
insl
decb
mov
mov
fdivl
xor
jle
pop
bound
stos
mov
lds
adc
sbb
mov
push
sbbb
pop
mov
fisubl
push
rol
add
mov
jge
in
jp
or
add
sub
sbb
sub
imul
push
dec
lds
jmp
sub
add
jecxz
in
lea
mov
jl
out
jno
aam
les
inc
inc
sub
mov
pop
ss
add
cwtl
ljmp
jecxz
cli
adc
adc
in
cmp
into
rolb
stos
rcl
add
pop
mov
lea
popa
decl
nop
pop
out
movsb
sahf
inc
stos
lods
repnz
cmp
ds
push
xor
xchg
mov
fildl
jmp
add
and
add
add
add
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
pushf
sbb
adc
test
push
adc
mov
adc
pusha
push
adc
mov
push
adc
leave
sbb
adc
rcrl
adc
loopne
adc
sbbb
add
sbb
adc
stc
sbb
adc
add
adc
cwtl
push
adc
adc
adc
mov
add
add
push
adc
sub
adc
mov
adc
ss
adc
mov
add
add
adc
rcrb
add
jae
jo
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
outsb
jae
outsl
outsl
insb
cs
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
outsb
imul
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
adc
add
add
fistps
adc
add
add
add
add
add
push
adc
add
add
add
adc
add
add
or
add
add
adc
add
add
sub
adc
add
add
inc
pop
adc
add
add
mov
add
add
adc
add
add
popw
adc
add
add
jns
adc
add
add
mov
adc
add
add
mov
add
add
add
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
add
imul
push
gs
popa
jb
add
add
je
jne
dec
outsb
jne
add
push
gs
popa
jo
outsl
fs
add
outsb
push
jb
outsb
je
jb
add
add
addr16
jo
outsb
dec
gs
js
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
gs
outsb
imul
add
add
popa
addr16
imul
add
add
je
jb
gs
outsl
outsb
outsb
arpl
add
inc
gs
popa
jbe
inc
imul
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lock
shr
mov
add
add
add
pop
mov
mov
cmp
mov
pop
pop
adc
imul
cmp
cli
or
xchg
in
loop
outsb
scas
imul
stos
pop
push
xor
dec
inc
adc
in
add
test
mov
pop
jl
xor
iret
mov
inc
or
cmp
and
mov
cltd
addl
lds
and
leave
dec
xchg
inc
test
jne
shrb
jo
cmp
mov
sahf
out
mov
pop
lss
add
mov
repz
fwait
loope
jge
mov
mov
in
adc
data16
mov
ljmp
and
add
push
outsl
stos
ss
jecxz
mov
adc
pop
icebp
sub
rorl
dec
push
mov
xor
or
shl
dec
aam
fwait
out
pop
iret
xor
fs
xchg
mov
cmp
xchg
pushf
inc
add
inc
xchg
data16
scas
push
imulb
mov
insb
xchg
sub
xchg
mov
daa
push
jne
pop
jnp
cwtl
pop
cwtl
mov
addl
imul
cmp
les
iret
ljmp
mov
sbb
icebp
pop
std
pusha
aam
aaa
jae
movsb
and
sub
ss
sbb
das
add
xor
inc
xchg
fdiv
lahf
ljmp
jmp
mov
jne
add
xchg
xchg
xlat
outsl
test
cmp
stos
mov
fdivp
mov
sbb
fistl
xchg
pop
xchg
push
cli
and
shr
jecxz
push
sti
sbb
dec
jle
or
loope
or
imul
das
pushf
loope
mov
iret
add
adc
outsb
jl
push
push
movsl
cltd
add
adc
or
outsl
cmp
std
sbb
xlat
dec
gs
leave
mov
sbbb
push
mov
mov
aaa
cmp
lahf
mov
dec
cwtl
cmp
xchg
or
clc
in
xchg
sahf
mov
mov
data16
test
orl
pusha
fiadds
or
dec
out
cld
sub
icebp
jo
lret
rorl
jecxz
hlt
or
adc
into
lds
push
rclb
push
adc
jp
ljmp
addl
adc
adc
fmul
sub
and
rorb
cmp
jnp
push
ds
jge
pop
inc
mov
mov
in
repnz
pop
test
jo
test
dec
fbld
mov
aam
outsb
loope
les
pop
cmp
mov
in
orb
fldenv
leave
or
sti
or
ja
je
cli
xor
push
sbb
mov
jge
dec
jbe
stos
pop
cltd
test
adcl
jg
mov
mov
sub
daa
shl
shll
xchg
stc
jns
push
fldcw
fiadds
inc
cmp
icebp
dec
xlat
shr
test
lahf
mov
cmp
rclb
ret
xchg
mov
mov
std
call
les
adc
mov
cmp
xor
test
xchg
dec
inc
mov
dec
imul
cmp
shl
clc
push
dec
outsl
aaa
mov
fcoms
test
adc
and
out
inc
stos
fsubp
fimuls
popa
pop
jp
pop
mov
movsb
je,pt
scas
stc
shlb
adc
mov
shl
decb
outsl
dec
jbe
jo
sub
xor
xor
and
mov
sub
xorb
dec
aaa
ret
jne
insl
lods
jge
fnsave
dec
loopne
dec
fsubs
mov
lock
dec
inc
and
repnz
imul
dec
adc
loope
push
lods
mov
lea
xor
mov
out
leave
push
mov
nop
mov
jmp
mov
out
jmp
cmp
pop
lret
xchg
add
adc
loope
mov
mov
iret
aad
fwait
push
int
pop
pop
es
loope
roll
add
in
sar
sbb
cmp
jnp
mov
push
mov
or
fsts
mov
int3
adc
je
movsb
fdiv
loope
pop
add
jle
push
xchg
mov
fs
lea
mov
lock
std
mov
adc
lret
cltd
scas
jmp
and
xchg
stos
aam
inc
ss
lods
add
or
jo
repz
jne
shrl
xchg
mov
jno
inc
popf
ds
inc
fisubrl
inc
lahf
aas
mov
inc
adc
pushf
and
jmp
repz
sbb
popl
and
jl
ret
inc
pop
je
outsl
dec
icebp
hlt
push
mov
dec
je
out
or
jb
shrl
mov
inc
das
mov
fstps
sarb
mov
or
xlat
push
dec
sub
push
mov
xchg
push
xor
repnz
scas
gs
jae
icebp
hlt
mov
sarb
je
rep
inc
mov
es
cs
les
or
push
ror
fcmove
pop
push
lret
mov
gs
xchg
or
idivb
fstl
aas
pop
pop
xrelease
std
call
cmpl
sub
lret
pop
push
xor
int
add
les
int
push
out
pop
jns
out
mov
sub
push
sub
jb
addr16
in
out
sbb
sub
dec
add
push
cmp
xchg
mov
cmp
ror
cmp
adc
sbb
sbb
cltd
push
out
inc
cld
neg
adc
je
imul
adc
jno
or
scas
push
jno
outsl
cs
pop
push
dec
lods
cli
inc
mov
loop
faddl
ret
jbe
jnp
pop
inc
jecxz
repnz
mov
cmp
loop
pop
or
int3
enter
nop
popa
data16
dec
aad
add
push
dec
sahf
mov
fisttpl
daa
dec
lods
mov
call
orb
add
pop
xor
into
push
xchg
ss
and
data16
jmp
xchg
movsl
lds
push
mov
and
cld
pop
xor
pop
in
mov
fists
cmp
cmp
roll
xchg
jnp
xor
leave
inc
loope
or
pop
xor
pop
mov
adc
jg
or
cmp
shll
int
inc
hlt
leave
sbb
pop
cmpsb
jo
fwait
sahf
imul
lret
dec
fsts
mov
dec
cmp
mov
cmp
and
aam
mov
loopne
popa
pop
lock
xchg
push
mov
clc
dec
js
mov
jecxz
dec
pop
cld
mov
cmp
outsl
mull
mov
sti
repz
or
mov
xlat
mov
fwait
arpl
cmp
and
adc
dec
test
lock
adc
push
mov
sub
gs
mov
cli
test
jae
xor
fiaddl
xor
cmp
dec
mov
pop
cli
pop
bswap
sub
ret
ds
shlb
mov
push
out
cmpsl
test
pop
ljmp
jae
rcrb
pop
xor
insb
pop
fisttpll
test
outsl
push
add
out
aad
lods
mov
repz
enter
push
inc
jb
sbb
pop
lea
nop
pushf
mov
sti
cmp
xchg
cld
popf
pop
jmp
mov
dec
pop
lret
shrb
inc
jmp
pop
mov
sbb
test
cmc
sbb
out
mov
and
ljmp
call
dec
xlat
xchg
movsl
xlat
cmp
cmp
sbb
das
repz
pusha
fs
inc
xor
daa
adcb
adc
sub
ds
xchg
pop
ds
push
in
and
mov
shll
and
mov
cmp
pop
xchg
andl
sbb
addr16
cli
ja
int3
lahf
lret
outsb
jmp
outsl
or
mov
push
cmp
sbb
sarl
xlat
pusha
daa
popf
push
add
mov
pop
inc
fs
cmp
adc
out
enter
shr
dec
adc
imul
push
pop
lcall
adc
into
sbb
mov
clc
in
mov
inc
sti
jne
inc
inc
mov
sub
inc
fistpl
xchg
sub
ljmp
mov
mov
fisubrs
jg
pop
lds
pop
xor
inc
mov
mov
fbstp
pusha
dec
call
push
jle
xor
inc
ss
bnd
cmp
lds
stos
daa
je
cmpsb
ss
arpl
cmp
jl
lcall
pop
ja
arpl
xor
add
addb
mov
pop
mov
xchg
leave
or
adcb
es
sahf
inc
arpl
add
fnsave
sbb
test
cmpsb
rcl
mov
sbb
scas
pop
lds
pop
cmp
dec
stos
mov
jl
mov
xchg
dec
jne
dec
mov
adc
addl
push
movsl
lret
fadds
xor
shl
jne
pop
fcoms
stc
cwtl
bound
out
push
enter
add
sbb
loope
jmp
jne
sub
mov
sub
fchs
xchg
push
inc
dec
cmp
inc
rcrb
add
adc
sub
loop
loop
inc
sub
inc
jo
sub
pushf
movsb
xchg
dec
dec
push
js
lcall
lcall
hlt
dec
mov
clc
push
clc
lds
sub
xchg
cmc
out
sub
out
xchg
or
adc
cmp
pop
xor
mov
fldl
sub
mov
push
into
and
je
pop
ret
xchg
pop
in
sti
xchg
or
daa
orl
jl
mov
ljmp
push
pop
inc
dec
mov
xor
lcall
pop
add
dec
and
add
or
xchg
push
aaa
std
mov
jae
leave
push
rcl
jo
and
mov
xor
mov
loope
dec
std
mov
sub
xchg
clc
xor
ficomps
shr
fidivrs
or
inc
lahf
insl
in
call
pop
daa
pop
push
sti
and
ljmp
int3
ss
scas
inc
push
dec
mov
icebp
out
sbb
call
dec
mov
jmp
pop
push
icebp
adc
insl
add
push
scas
call
xchg
and
call
cmp
mov
movsl
push
loope
cmpsb
imul
inc
xchg
inc
pop
hlt
push
loope
cmp
and
into
das
jmp
fistpll
adc
imul
lahf
or
add
out
fadds
cltd
inc
inc
mov
pop
and
ljmp
lahf
cmp
pop
call
adc
fwait
or
cmpsl
pop
push
add
sub
adc
dec
or
stos
add
out
pushl
data16
mov
lahf
lds
ret
jns
vmwrite
sbb
xchg
bound
inc
add
stos
scas
mov
aam
sbb
sub
fwait
sub
mov
pop
outsl
sbb
call
jns
loope
push
add
out
pop
test
xchg
lret
mov
nop
test
push
pop
push
xor
cmp
mov
pop
mov
pop
pop
xchg
std
cmp
adc
xchg
mov
push
in
cmpsl
jmp
sbb
psubsb
cmp
testb
icebp
push
sbbb
mov
inc
into
rorb
pop
sarb
cmpsl
jg
jbe
pop
push
in
loope
scas
or
dec
shl
jmp
push
out
mov
mov
nop
fwait
push
add
mov
jecxz
xchg
mov
mov
sub
or
dec
mov
add
test
mov
adc
cmp
mov
inc
jmp
cmp
js
jmp
jmp
lret
imul
cmp
fs
popa
cmp
das
and
pop
add
enter
arpl
jge
jbe
sub
cmp
mov
out
cmp
mov
push
mov
pop
shrl
out
popf
js
fsubrs
and
add
in
mov
or
test
sbb
loop
xor
mov
fsts
lods
xchg
jnp
or
int
lds
mov
in
test
mov
and
repz
hlt
push
push
mov
push
movl
jle
loop
or
scas
inc
mov
mov
sbb
adc
cli
xor
imul
jl
lcall
adc
xlat
popa
dec
rep
jmp
cmp
mov
pop
std
inc
jmp
dec
xor
inc
call
jo
into
ret
shrl
fisubrs
adc
loope
in
test
dec
js
mov
rol
or
inc
add
cmp
cmpsb
xor
leave
push
pop
popf
ret
mov
xchg
inc
sti
mov
mov
jmp
xchg
and
push
add
sbb
movntq
sub
pop
push
push
movzbl
in
jge
stos
jl
pop
pop
test
adc
loope
push
outsl
shr
push
ljmp
popf
sahf
leave
leave
mov
std
jnp
or
pop
sahf
jns
cmp
sub
imul
mov
mov
stc
sbb
xor
lea
incb
aaa
and
ficompl
pop
dec
xor
out
push
xor
lods
jb
shlb
cli
ja
inc
scas
cmc
add
xchg
es
out
mov
fnstsw
inc
add
or
je
push
mov
add
push
sbb
add
mov
jne
lds
xor
mov
test
adc
sbb
push
adc
and
xchg
fstpl
xor
or
cmpsb
xchg
cmpsb
incb
loop
rcll
out
mov
jmp
pop
fidivrl
fisttpl
cli
push
jmp
cmp
ljmp
into
mov
mov
shlb
mov
push
add
lods
pusha
es
cwtl
cmp
std
push
les
cmpsl
repz
mov
rol
dec
imul
sub
cmp
pop
adc
xor
repz
js
testl
push
neg
ret
xchg
ljmp
mov
add
addr16
sub
fcomi
push
and
add
fwait
imul
cltd
mov
sahf
or
data16
aaa
sbb
adc
push
aad
sbb
adc
mov
insb
std
mov
shlb
xor
idivb
sub
loopne
add
negb
pushf
push
lds
loope
dec
aaa
sbb
scas
jmp
adc
call
xchg
test
inc
adc
fcmovb
and
inc
and
cmp
push
pop
pop
push
sar
fwait
cmpsl
lods
xchg
clc
sub
push
call
mov
in
clc
ret
xor
mov
fdivs
pop
add
adc
push
imul
loopne
push
adc
testl
dec
or
push
pop
sbb
std
ljmp
push
sahf
hlt
xchg
loopne
fisubrs
xchg
daa
sub
iret
mov
xchg
stc
jg
je
dec
pop
loopne
mov
imul
jnp
jle
mov
call
aad
addr16
and
xlat
mov
rcrl
xor
outsb
mov
jp
out
adc
pusha
and
orl
movsl
mov
sub
dec
xchg
cmpsb
cmp
lock
inc
outsb
std
loop
xor
sub
mov
add
xchg
fistps
mov
out
movsl
add
dec
dec
popf
inc
push
lcall
dec
ret
fiadds
push
and
mov
bswap
push
in
xor
fldt
cs
sti
sub
imul
popf
je
scas
out
cmpsb
lods
lahf
add
mov
jge
xchg
dec
and
aad
xchg
cmp
push
xlat
xchg
sbb
shll
in
int3
sub
hlt
inc
jle
dec
dec
hlt
dec
inc
mov
rep
ret
stos
xchg
in
add
dec
dec
loope
out
pusha
mov
jno
cltd
mov
lds
mov
lock
cmpl
and
push
cwtl
dec
addb
adc
xor
int3
cmp
cmc
add
xchg
xchg
mov
add
aaa
dec
adc
add
add
aam
push
inc
lods
mov
mov
xor
add
outsb
pushf
ret
jae
clc
pop
mov
scas
pop
lret
popa
cmp
outsl
cltd
pop
clc
mov
xchg
cwtl
xchg
shlb
sbb
je
xor
das
xchg
add
cmp
lcall
cmp
mov
sbb
mov
test
aas
xchg
loopne
popl
sbb
out
adc
gs
pop
pop
add
stos
pop
adc
aad
xor
lea
xor
dec
xchg
jno
or
es
xor
loopne
dec
xor
jae
mov
xchg
jo
xor
pop
iret
sub
cmc
out
jle
loope
ds
or
in
jae
push
imul
dec
sbb
sahf
ret
aas
cmp
test
pop
jb
mov
add
addr16
mov
inc
cmp
popa
nop
cwtl
cmp
add
fidivs
push
out
and
add
fcomi
fimull
ljmp
jno
out
pop
fiaddl
or
mov
xor
adcb
mov
lods
das
inc
icebp
add
mov
or
aas
les
mov
jmp
arpl
in
cli
or
repz
cmp
jnp
dec
push
inc
aaa
or
pop
sarb
xchg
mov
in
int
hlt
mov
rol
imul
xor
loop
cmp
inc
push
dec
outsb
test
pusha
ljmp
add
cld
cld
adc
pop
cmc
adc
ret
jle
lcall
or
popa
sub
loop
ss
shll
inc
rcl
daa
add
test
lods
lods
outsb
dec
loop
pop
or
mov
or
and
inc
daa
add
sub
cmp
les
push
fcoml
jae
inc
cwtl
insb
nop
mov
xchg
sub
cmp
push
push
lcall
xorl
ret
push
pop
add
js
xor
hlt
push
mov
adc
rolb
xor
pop
imul
arpl
sar
push
iret
imull
test
cld
sbb
repz
imul
cmp
or
xor
jp
mov
notb
sbb
cmpb
sbb
insl
mov
dec
aad
roll
pushf
mov
xchg
shll
ja
sub
mov
xchg
adc
stos
push
rcrl
stos
push
rolb
mov
scas
arpl
inc
aas
sbb
mov
pop
xchg
xchg
outsb
and
je
sarb
jl
out
sub
mov
dec
push
mov
push
lahf
inc
mov
mov
lds
mov
jmp
add
mov
mov
adc
mov
sub
sbb
test
cmpsl
push
addr16
aad
jge
jno
adc
sarb
outsb
inc
lock
or
std
and
jg
mov
repnz
lahf
xor
mov
cmp
addr16
and
dec
xor
xor
xor
loope
push
cli
ds
pop
push
inc
adc
dec
leave
sbb
enter
aad
add
in
adc
shlb
or
jnp
lods
add
pop
rol
call
pop
adc
mov
pop
test
int
xlat
sub
popf
cmp
fdivrl
stc
fstpt
loop
mov
pop
jecxz
sub
sbb
pop
cmp
les
mov
fimuls
fs
cmp
fsubs
jns
std
int3
fsubrl
add
lea
xchg
in
pop
xchg
fwait
jbe
outsb
int
push
push
data16
mov
std
lret
in
out
stos
xchg
push
or
jae
inc
filds
mov
jl
lods
rorb
xor
xchg
add
loopne
push
pop
sub
dec
push
push
inc
sbb
sbb
mov
jo
sub
sub
test
dec
adc
pop
add
jge
dec
mov
rcll
and
insb
lock
js
lods
inc
pop
inc
dec
push
scas
mov
psadbw
pop
add
push
aad
dec
gs
hlt
rolb
shlb
cmp
test
xchg
pop
lret
cs
nop
imul
cltd
dec
aaa
mov
imul
mov
rol
pushf
daa
ds
sub
arpl
xchg
icebp
out
push
hlt
sub
jle
repz
cs
ret
addr16
data16
push
in
dec
lret
and
stos
sbb
jno
lret
jb
push
fistl
xchg
mov
hlt
fiaddl
push
in
xchg
int3
jne
push
pop
xchg
dec
mov
mov
jl
fcomi
test
lretw
push
xor
dec
ljmp
cmpl
repnz
xchg
pop
je
mov
movsb
xor
add
mov
sbb
push
pop
rcrl
cltd
lea
dec
sub
mov
mov
rcrb
test
in
int
adc
mov
jl
cmp
in
and
mov
and
pop
lods
sub
mov
xor
dec
test
icebp
mov
mov
jg
fs
inc
out
pop
xchg
push
sahf
xchg
cmp
mov
jnp
cld
pop
dec
dec
push
dec
or
sbb
mov
stc
pavgw
and
iret
popf
xchg
loop
sbb
aam
test
repz
pop
das
xor
lods
inc
sbb
pop
mov
or
shlb
arpl
stc
mov
loope
adc
pop
les
dec
insl
xor
pop
dec
xchg
adc
sbb
repnz
sbb
pop
push
mov
ja
insl
sub
or
leave
xor
dec
test
lea
shll
add
lahf
pop
jecxz
jo
pop
rolb
in
adc
jmp
jns
mov
je
xor
and
push
imul
sahf
lods
push
lcall
or
sti
notb
lret
jp
ret
jg
cwtl
aad
sbb
cmp
push
stos
sub
pop
jae
push
gs
arpl
mov
mov
mov
pushf
inc
ficomps
sbbl
mov
mov
rcr
jb
pop
in
pop
cs
mov
out
jl
sub
dec
push
mov
cmc
addr16
cmc
enter
inc
out
loope
dec
out
xor
repnz
repz
ds
jmp
les
xor
inc
xorb
push
adcl
movsl
adc
dec
fincstp
and
ljmp
jae
repnz
shrb
jecxz
push
mov
das
or
add
js
jl
adc
jbe
xchg
sub
cmp
pop
xor
inc
jno
gs
inc
lods
aas
jne
or
add
ljmp
repnz
pop
pop
aad
cwtl
push
sbb
arpl
cltd
or
out
int3
jnp
jecxz
loop,pn
mov
shrd
lcall
sar
lods
xchg
loop
stos
nop
rcl
fwait
sbb
and
jnp
addr16
cli
adc
into
je
inc
xchg
inc
sbb
jg
aam
push
adc
xchg
jmp
sti
xor
mov
insl
sahf
outsl
push
pusha
fwait
push
mov
setae
dec
xlat
lds
lcall
mov
sub
es
dec
pop
filds
fwait
nop
xchg
cmc
idiv
int
cmp
flds
icebp
mov
lods
or
add
cmc
lock
lea
int3
fcomps
into
aam
movl
jne
lcall
inc
dec
or
hlt
movsl
push
in
push
outsl
movsb
into
mov
pop
cmp
jmp
movsl
pop
mov
xor
pushf
sahf
movsb
repz
inc
jae
pop
push
nop
sub
push
bound
push
test
mov
mov
cmpsl
jle
ja
out
inc
push
scas
in
adc
int3
mov
push
jbe
movsl
mov
sbb
inc
xchg
aad
push
jmp
and
mov
pop
adc
shll
sbb
xor
sarb
inc
in
mov
sbb
data16
pause
push
fcomps
and
push
sub
mov
out
jge
xchg
push
addb
inc
push
scas
mov
clc
xchg
push
jbe
aam
xchg
cmp
sbb
nop
mov
nop
in
xor
std
jne
and
bound
pop
cwtl
das
jbe
pushf
adc
and
xorb
out
pop
das
xlat
sbb
lahf
cmp
lret
flds
out
movsl
push
pop
pop
movsl
inc
fmuls
in
aam
sub
cmp
push
and
popf
mov
mov
lret
repz
daa
rclb
jecxz
daa
lea
sahf
mov
cmp
adc
pop
dec
lret
pop
fnstsw
inc
dec
clc
dec
sti
int
xchg
mov
or
int3
cmp
dec
mov
jo
imulb
insb
xchg
ja
in
lahf
inc
pushf
push
jg
sub
inc
jo
jbe
into
or
cld
dec
add
pusha
sahf
xor
aad
xor
pop
pushf
aas
out
clc
sbb
stos
push
gs
fistps
ss
pusha
in
fmulp
sbb
sub
jne
sub
fldln2
jo
fcmove
mov
and
fbstp
adc
mov
and
jecxz
jno
mov
sahf
sub
dec
es
sbb
sbb
mov
dec
lret
inc
add
popf
clc
cmp
xor
shr
mov
jp
enter
imul
pop
std
cs
cwtl
pop
jno
mov
popf
pop
cmp
push
nop
shll
jbe
jns
or
pop
mov
xor
xchg
insl
in
pushf
mov
mov
jp
test
jo
mov
cmp
out
cmpb
in
les
lret
lods
subb
shll
mul
cmp
test
xchg
stos
or
dec
jl
mov
push
mov
xchg
in
cwtl
mov
adc
push
push
ret
jo
inc
es
xchg
mov
repz
adc
xchg
enter
int
jbe
cltd
jnp
pextrw
aaa
negl
add
xor
decl
orps
cmp
roll
jno
and
xchg
insb
xchg
xchg
out
mov
push
inc
rorb
inc
pop
call
pop
mov
loopne
jns
fldcw
push
in
push
sub
scas
outsb
std
cmp
xchg
sbbb
cmp
push
aas
enter
pop
xchg
push
fnstsw
cmc
and
rol
pop
cltd
mov
cld
mov
mov
xor
aad
lcall
mov
bound
xor
aad
test
hlt
cmpsl
not
nop
jae
inc
in
sub
push
test
fbstp
dec
cmp
int
jl
push
in
testb
pop
jnp
ret
test
adc
and
jo
lcall
addl
loop
or
hlt
out
push
dec
cmp
in
sub
out
cmp
repz
out
and
outsl
dec
enter
shll
pop
test
lods
into
cmp
jns
stc
je
repnz
mov
cmp
mov
push
mov
sbb
pop
pop
mov
xchg
mov
inc
fdivrl
push
sub
es
pop
mov
js
fidivs
daa
inc
mov
idivb
xchg
xor
stc
hlt
fucomp
mov
add
popa
lret
imul
pop
add
and
xor
dec
xchg
cmp
aaa
cmpsb
jl
cltd
cmp
or
adc
in
inc
mov
in
notl
mov
fmuls
mov
inc
dec
popf
inc
outsb
rcrl
call
mov
data16
or
lods
in
push
adc
out
push
loop
or
mov
pop
clc
iret
sub
js
mov
mov
sbb
wbinvd
jae
cli
sti
mov
nop
jbe
insb
pop
inc
imul
mov
decb
inc
mov
or
dec
es
xchg
fimuls
jg
jle
push
push
loop
popa
pop
movsb
sbb
cld
shl
iret
mulb
scas
mov
dec
mov
add
jmp
and
lea
ret
bound
cmp
pop
mov
xchg
push
mov
or
pop
pop
arpl
xchg
out
sbbl
insb
lods
iret
mov
ljmp
mov
ror
mov
xchg
loope
pop
mov
in
jl
push
and
subb
xor
pop
jno
pop
push
test
cmp
or
xor
mov
and
mov
sub
fisttpll
add
dec
pop
mov
sar
jle
or
jne
arpl
sub
neg
jle
cmpsl
jnp
js
or
pop
dec
cmpsb
mov
pop
adc
out
or
cmpl
testl
shrb
mov
and
or
or
lret
repz
test
inc
pushf
pop
xchg
les
out
dec
aad
sti
lahf
mov
arpl
dec
jg
je
mov
xchg
mov
push
out
mov
jns
xchg
add
inc
stos
dec
mov
mov
jb
pop
ja
xor
daa
inc
leave
push
jbe
iret
testl
inc
sbb
rol
out
jp
stc
bound
out
repnz
cmp
add
int
bound
jne
adc
je
xor
xchg
dec
mov
xor
cld
or
mov
repnz
add
fiaddl
mov
mov
xchg
aaa
mov
loopne
lods
rclb
adc
imul
les
jecxz
dec
mov
mov
gs
je
scas
loopne
movsb
pop
add
cmpsl
add
aam
js
imul
push
xchg
nop
ja
jo
jg
test
push
jmp
mov
and
loope
aas
sarl
shr
lahf
fistpl
pop
jne
cmp
int
mov
dec
sbb
jl
mov
jb
sbb
mov
mov
sbb
or
ljmp
ja
sbb
imul
cli
stc
das
or
jge
stos
adc
insb
sub
sub
icebp
repz
mov
mov
and
mov
push
push
iret
inc
cmp
fimull
dec
xchg
ss
push
mov
imul
mov
or
scas
jp
div
pop
pusha
gs
iret
sub
or
jo
fwait
and
mov
xor
cmp
outsb
inc
fmull
call
dec
push
lret
inc
lret
scas
jle
ja
movsb
sbb
outsl
insb
loope
clc
mov
arpl
loop
arpl
dec
mov
scas
sarl
mov
jns
ret
push
mov
add
decb
cmp
mov
sub
fcom
scas
or
and
and
jns
push
pop
mov
fstpl
cli
sbb
sahf
xchg
push
call
cmpsl
sti
xchg
and
movsl
int
and
sub
add
push
ljmp
out
push
inc
lret
scas
and
stos
jb
rcrb
mov
or
dec
or
out
and
cmp
fwait
repnz
outsb
arpl
dec
sbb
or
movsb
das
jmp
jae
push
inc
testb
mov
and
sbb
js
lret
fisubs
add
and
ficompl
push
add
add
movsb
incl
pop
in
je
or
pusha
sbb
ss
adc
frstor
add
sti
xor
shl
dec
push
shll
push
cld
push
xor
add
xorb
push
ret
push
sbb
arpl
mov
aaa
scas
int3
aam
or
enter
xchg
mov
and
pop
inc
in
mov
in
adc
sbb
inc
push
and
xor
mov
and
decb
jnp
repz
or
adc
or
stc
cmp
pop
pop
adc
je
mov
or
jmp
cltd
sub
mov
cmc
int3
test
sub
adc
call
xchg
ja
das
mov
xchg
ret
or
add
fwait
int
gs
test
push
xchg
sub
add
loope
iret
inc
ljmp
xor
jno
xorl
ljmp
ret
shll
xchg
enter
test
stos
dec
xor
psubusb
mov
mov
xor
mov
aaa
icebp
movsl
sub
nop
enter
insb
jmp
test
dec
dec
addr16
pop
iret
fnstsw
dec
leave
mov
ja
imul
xchg
std
add
lcall
inc
fnstsw
ljmp
inc
ds
pop
pop
jne
adc
or
out
pop
mov
not
adc
adc
push
push
push
or
in
fisttpll
mov
test
and
fidivl
imul
shrb
xchg
adc
xchg
cmpb
cld
sub
fistps
jecxz
push
xchg
push
mov
mov
out
cwtl
mov
mov
pop
pop
inc
in
mov
scas
pop
hlt
cld
cmp
jl
cmp
mov
pop
loopne
inc
lods
cmc
mov
insb
mov
nop
dec
add
jns
dec
lcall
fcmovbe
lcall
and
push
pop
scas
nop
stc
ss
sbb
scas
mov
lret
jmp
icebp
shl
push
in
add
ret
rcl
shrb
addr16
lret
sub
sbb
mov
in
sbb
push
andb
jge
ljmp
pop
rcl
fstpl
ja
enter
push
das
movsb
cltd
mov
mov
inc
sub
add
mov
jge
imul
jne
out
cmp
xor
into
or
test
icebp
and
dec
rorl
std
cmp
shrl
gs
dec
shlb
xchg
jo
in
inc
inc
popa
xchg
lock
dec
fadds
cmp
sahf
cltd
jecxz
out
rcl
jge
xor
push
insb
cmp
mov
enter
dec
or
add
and
and
dec
inc
repnz
cli
sub
cmp
mov
pop
test
scas
and
pop
insb
jl
sub
sub
data16
nop
dec
cmp
in
and
lret
dec
aad
xchg
dec
out
test
cli
xlat
out
jg
xor
pop
invd
in
mov
mov
mov
jae
sbb
sub
jecxz
lret
lods
and
cmp
rcrb
xor
adc
rol
js
imul
pop
aaa
les
add
out
fucomp
ja
dec
push
js
hlt
mov
lahf
mov
sub
ret
repnz
dec
xor
outsl
clc
jns
xor
ja
jns
jle
push
es
adc
and
push
neg
outsl
add
in
cmp
jb
out
cmpsb
lods
imul
or
in
pop
cwtl
pop
sbb
inc
jno
pop
mov
dec
jmp
mov
mov
repnz
cli
jg
sub
fdivr
mov
mov
loopne
xor
jmp
or
test
mov
fadds
test
or
popf
mov
aad
fstl
mov
mov
cmp
movsb
bound
cmp
jmp
lods
sbb
or
repz
dec
push
sub
loopne
scas
lds
jmp
sub
jne
or
scas
and
addb
dec
pop
test
inc
aad
cmpl
rclb
and
in
fcomp
ret
push
add
ret
test
xor
mov
cltd
push
imul
mov
ja
mov
xchg
in
and
aaa
or
loope
out
int3
jmp
cmp
popa
push
test
das
inc
push
movsb
jl
mov
loopne
arpl
stos
les
lcall
or
xor
mov
fstps
pusha
dec
divb
xor
jbe
push
std
lcall
push
gs
xor
push
sbb
gs
movsb
jp
mov
mov
adc
cld
loopne
lock
sub
fnstcw
mov
xor
push
dec
mulb
imul
decb
mov
sub
js
mov
outsl
add
push
sub
divb
outsb
test
xlat
xchg
lods
jne
cmpsl
sub
sub
add
ljmp
stos
out
jae
push
stos
mov
popa
aad
cmp
ss
dec
inc
cld
hlt
dec
fiadds
sbb
mov
ficoms
push
test
ljmp
or
pop
inc
mov
and
pop
or
push
inc
popa
fsubs
fsubrs
enter
movsb
push
pop
fcomps
fstpt
adc
mov
cmp
xchg
mov
outsl
in
dec
sarb
lds
arpl
xchg
gs
push
cwtl
movq
dec
mov
lods
out
mov
fstp
sub
inc
pusha
inc
push
clc
out
and
adc
sub
push
test
dec
cmpl
sub
cmp
xor
fdivrl
xlat
xchg
lea
mov
pop
hlt
sub
mov
popa
fs
shr
ss
cmp
stos
push
out
dec
mov
jbe
enter
cmp
mov
adc
mov
mov
clc
fdivrl
or
mov
or
pop
gs
imul
or
mov
xor
ror
cmp
es
mov
or
or
lret
dec
inc
hlt
aad
jmp
add
mov
add
mov
adc
lods
les
sbb
push
out
adc
pop
adc
push
nop
repz
test
rorb
mov
clc
in
cmpsl
pop
sub
daa
adc
mov
sub
fs
fcmovu
xor
mov
xor
pop
bound
adc
mov
jno
jbe
sub
das
mov
sahf
outsl
das
jne
cmp
ds
orl
add
je
sub
aas
xchg
dec
out
pushf
sub
push
repnz
push
xchg
sahf
jge
imul
mov
dec
in
xchg
xchg
cwtl
mov
sahf
mov
mov
and
mov
add
push
in
js
xor
adc
jg
popf
push
push
imul
ja
mov
inc
and
fisttpll
std
lods
adc
jns
fildll
fdivrs
icebp
scas
pop
lock
mov
aad
pop
mov
mov
lock
push
lea
stos
rorl
data16
inc
push
repz
mov
out
sahf
in
out
std
daa
jle
gs
imul
mov
pop
jne
xor
mov
in
addl
data16
enter
mov
std
sbb
push
inc
inc
cmp
mov
and
iret
jns
bound
rorb
jnp
inc
add
fiadds
push
ja
add
or
jb
mov
jmp
out
and
loop
popa
mov
leave
into
xor
or
addl
lahf
inc
inc
xor
cltd
inc
and
sub
push
inc
nop
sub
out
push
lret
ss
xor
clc
xor
push
repz
fdivl
xor
pop
push
ret
pop
sarl
aaa
cmp
in
pop
pop
jnp
mov
add
gs
and
dec
pop
arpl
scas
icebp
icebp
mov
push
in
cltd
add
lahf
push
arpl
or
addb
push
push
pop
xchg
mov
mov
or
adc
pop
jb
cmp
add
xorl
clc
hlt
or
in
aaa
cmovs
rcll
mov
sbb
pop
push
sbb
cltd
jmp
aam
push
push
pop
xchg
lcall
movsb
into
and
dec
push
imul
push
lcall
pop
notl
repnz
mov
pop
lret
xchg
test
sub
or
mov
std
pop
ljmp
es
lcall
out
dec
push
rolb
icebp
gs
or
ficoms
jmp
or
pop
test
adc
sub
jns
wbinvd
inc
daa
inc
ficoml
mov
pop
mov
cmpsl
js
ja
lock
mov
addr16
dec
dec
into
xchg
cs
and
icebp
push
mov
arpl
fiadds
pop
inc
loopne
aaa
jmp
shrl
push
push
jp
clc
iret
pushf
mov
dec
enter
outsb
inc
insb
xchg
cld
shlb
loop
sub
sbb
enter
mov
dec
cmc
ss
inc
ret
mov
ljmp
fcompl
fstps
pop
mov
dec
xor
mov
fistpl
add
leave
mov
aaa
push
cltd
cmp
pop
push
jbe
mov
sbb
sti
adc
icebp
psrld
in
scas
and
jle
xor
jae
and
fdiv
fs
and
imul
das
jge
ret
cld
inc
push
sbb
fdivl
cmpsb
movb
push
daa
mov
ja
dec
in
aam
sbb
cli
test
jno
inc
pop
mov
add
pop
imulb
xchg
mov
xchg
rcll
fistpl
mov
in
mov
or
mov
jl
loop,pn
call
xchg
and
xchg
xchg
adc
fstp
das
fmuls
test
scas
insl
sub
enter
push
cmp
mov
lea
mov
cwtl
test
adc
fucomi
sti
ljmp
xchg
xor
jo
lods
out
std
pusha
ljmp
mov
lret
mov
and
int3
aam
lret
sub
mov
cmp
cmp
fisttps
outsl
and
lock
lock
and
pop
jne
daa
push
bound
add
sbb
or
fsubrl
fbld
in
inc
push
aaa
inc
jg
and
into
push
push
pop
add
inc
outsl
mov
xchg
pop
sub
jg
jne
out
in
ds
stc
pop
inc
mov
add
xchg
mov
scas
outsl
lds
jno
push
lds
sub
ja
gs
mov
rcl
sysexit
mov
shll
sub
or
sbb
pop
lods
hlt
mov
jp
jle
lea
repz
and
repz
jl
xchg
fidivs
or
xor
loop
push
loop
jno
jae
jp
mov
daa
cs
int
sti
adc
sti
add
pop
out
sub
sub
jl
or
jns
jae
nop
insl
mov
stos
movsl
mov
dec
test
ret
mov
gs
lods
stc
fistps
jo
inc
sbb
xor
jg
into
dec
inc
lods
dec
sub
out
ljmp
sub
lcall
rorl
enter
scas
mov
out
inc
pop
stos
xlat
in
xchg
lret
inc
mov
ss
pop
mov
out
sub
mov
xor
orl
mov
fisubrl
lock
jmp
xor
lds
mov
mov
insb
incb
scas
mov
scas
out
test
cld
ja
push
int3
dec
int
leave
lret
out
cmpsl
add
jbe
mov
mov
mov
fs
mov
add
dec
imul
mov
movsl
dec
dec
mov
dec
hlt
mov
stos
bound
inc
cld
cmp
aas
mov
lods
out
nop
and
shlb
lahf
iret
fidivrs
out
inc
clc
pop
dec
hlt
dec
and
jecxz
push
push
mov
adc
mov
ret
lahf
repz
loope
sbb
sbb
mov
outsl
repz
inc
out
nop
aad
ret
sub
cmp
inc
ret
mov
mov
mov
lods
aaa
jae
ja
dec
daa
sbb
dec
into
and
imul
inc
data16
xchg
jp
inc
in
pop
xor
andb
sbb
mov
or
sbb
sbb
jg
pop
clc
xchg
or
and
scas
loop
jmp
push
lock
movsb
push
inc
cmp
fcmovu
repz
mov
sbb
and
sbb
or
mov
inc
lret
cltd
shr
adc
mov
push
jle
shll
fs
adc
imull
cmp
lret
imul
pop
inc
iret
cmp
lahf
cmp
push
adc
sbb
fcmove
iret
adc
aam
iret
sti
inc
notb
addr16
cli
fisttps
int3
incb
fwait
jmp
pusha
pop
fwait
out
jecxz
mov
inc
pop
push
pop
dec
add
into
push
lahf
mov
cmp
add
and
fidivl
mov
sarl
dec
test
push
out
xchg
je
inc
sub
outsl
adc
negl
outsl
push
call
push
jne
and
ss
mov
inc
cmp
ds
push
jne
xchg
dec
pop
cltd
cmp
inc
xchg
in
and
dec
mov
sbb
decl
std
or
jmp
pop
mov
jne
cmp
outsb
stos
sti
xor
lcall
scas
dec
jb
cli
mov
add
lret
add
or
inc
sub
pusha
push
add
add
mov
cmpsl
xor
leave
mov
mov
test
jle
or
push
fsubrl
push
leave
ss
es
out
repz
fldcw
dec
lea
scas
mov
jns
icebp
aam
popf
dec
and
inc
insl
sbb
pusha
cmp
push
test
mov
pop
or
idivb
push
pop
xor
jns
mov
lock
testb
cmp
xchg
call
and
stos
loopne
pop
ret
cwtl
adc
push
shll
adcl
loop
pop
cmp
sbb
fistpl
xchg
dec
scas
in
xchg
add
lods
jne
cmp
and
fs
pop
and
and
add
mov
dec
mov
icebp
shlb
call
jecxz
hlt
shl
add
fdivr
push
xchg
nop
mov
sti
sub
fidivrl
xor
js
mov
xchg
and
lcall
xchg
xchg
push
test
out
js
xchg
rclb
lock
imul
or
test
xchg
jle
mov
dec
jo
xor
out
inc
test
stc
cmc
and
test
imul
hlt
addr16
std
xor
insl
aad
outsl
clc
mov
or
xchg
jge
cmp
inc
push
and
test
mov
pop
mov
dec
push
fisttpll
push
push
xor
outsl
push
sub
filds
xchg
fists
das
enter
das
iret
pushf
mov
and
pop
add
jmp
aam
test
repnz
mov
repz
jmp
and
fildl
dec
iret
hlt
jnp
xchg
fs
hlt
xchg
lahf
cmpsl
je
aaa
mov
inc
test
call
addl
sbb
adc
xchg
jmp
sub
push
ja
ret
inc
in
mov
aad
test
jle
mov
inc
sarb
imul
xor
mov
jnp
stos
test
or
cli
xchg
mov
mov
lock
bound
jl
iret
sub
pop
fwait
rcll
push
out
xchg
mov
out
arpl
shll
fldcw
scas
ljmp
lret
xchg
inc
inc
add
mov
jl
scas
loope
jbe
icebp
scas
xor
imul
loope
enter
and
xor
push
test
shll
cli
and
subl
mov
mov
xor
outsl
pop
insb
add
fdivs
notl
aam
pusha
cs
sar
outsb
bound
repnz
mov
lods
pop
dec
and
cli
imul
cmpsl
enter
pushf
mov
mov
notb
aad
movsb
sahf
jb
adc
lods
je
inc
loope
dec
aad
testb
das
idivb
or
std
cmpsl
and
pop
or
dec
cmpsl
sub
add
ja
cmp
pop
divb
cmp
mov
fsubs
test
nop
pop
or
outsb
js
popf
rorl
inc
lods
stos
push
push
sbb
xchg
cmp
test
cltd
mov
dec
or
lock
xchg
cmpsb
sbb
sub
sub
pop
sub
cld
enter
in
xor
popf
mov
imul
fsubs
shlb
cli
out
int3
mov
cmc
fimull
pop
ret
inc
pop
mov
pop
mov
sti
adc
mov
icebp
out
push
stc
dec
test
xchg
test
sub
pop
mov
jnp
enter
push
gs
mov
js
dec
xchg
inc
fxam
inc
loop
or
jo
popa
fmull
outsb
adc
mov
and
out
int3
push
xchg
pop
pop
cmp
adc
lcall
xor
push
out
ficoml
int3
or
dec
not
mov
addb
bound
xchg
add
popf
fisubrs
outsb
pop
cwtl
bound
fs
inc
sbb
jecxz
shll
repz
add
pminub
dec
mov
jae
add
cmp
aaa
jnp
cmp
in
test
mov
sbb
and
adc
int3
jge
ljmp
and
pop
rclb
add
test
fcoml
push
rep
adc
shll
cmpsl
lods
loop
mov
mov
jns
inc
clc
mov
jno
loopne
xchg
dec
fs
mov
bound
lock
push
jl
cmp
xor
ss
cwtl
out
push
mov
add
inc
sbb
vaddss
scas
mov
add
rcll
sub
mov
inc
test
outsl
sbb
push
ljmp
cmp
lea
mov
jle
ret
aaa
fcmovne
test
xor
sub
push
pop
or
mov
add
fs
aad
pop
insl
lock
in
sub
dec
mov
mov
xor
insb
lods
jb
lret
int3
inc
rolb
out
sbb
rol
rol
rcr
popf
and
movl
lock
test
es
outsl
inc
pushf
jne
inc
push
fisubrl
cmc
inc
mov
sub
xor
lret
xor
jne
add
xor
enter
cmpsb
xchg
insl
out
jmp
pop
jecxz
xlat
mov
cmp
jo
mov
shrb
psrlq
in
fmul
lods
test
sahf
jno
and
xlat
jns
push
dec
stos
mov
or
out
sub
mov
fsubrl
nop
arpl
mov
push
mov
cmp
data16
insb
mov
stc
clc
fstl
ds
xchg
sbb
addl
sub
cs
cltd
jb
loopne
nop
mov
jge
dec
mov
mov
out
aad
mov
and
cmp
or
les
gs
stos
ljmp
and
jns
jbe
lock
test
mov
xchg
jle
pop
add
pop
inc
fistpl
fcom
pop
mov
cmp
sbb
xor
sub
xorl
stc
mov
incl
mov
mov
fwait
lock
leave
into
nop
and
daa
es
mov
lret
xor
out
adc
mov
push
xor
pop
lret
cmc
xchg
jne
pusha
shll
push
pusha
lret
pop
cmp
pop
sbbl
jnp
mov
mov
sub
xchg
fcmove
pop
cmp
jb
mov
jae
jge
and
aaa
cmp
cwtl
add
mov
jns
in
mov
or
cli
test
jp
cmp
mov
fimuls
cld
lahf
xchg
dec
jg
mov
sub
push
ja
test
orb
je
sbb
lcall
in
cmp
lret
xchg
addr16
in
cli
add
cmp
jecxz
inc
and
lcall
ds
mov
jae
fsubrs
insb
pop
popf
paddusb
sub
icebp
jl
add
add
mov
jo
inc
push
jl
jne
sub
add
jo
cs
mov
lods
sti
jns
jge
aaa
sub
xchg
je
sub
lock
loopne
cwtl
call
das
or
in
jmp
cmp
xchg
jbe
js
mov
jmp
fnstenv
ja
jno
jl
adc
into
fwait
mov
fists
fidivl
cmp
in
push
xchg
cltd
test
mov
fadd
mov
cli
inc
movsb
icebp
scas
pop
mov
jle
mov
cmp
push
xchg
cmc
mov
add
cmp
dec
pop
cltd
pusha
cltd
faddl
imul
adc
mov
aam
cmp
push
push
in
lods
sbb
xchg
mov
arpl
lods
ds
ja
into
in
push
mov
lock
xchg
cmp
fucomp
pusha
pop
mov
roll
mov
and
sarb
aas
fmull
xchg
and
xchg
out
in
loop
popf
inc
ror
jo
fmuls
lahf
push
jmp
std
mov
dec
test
into
sub
insb
mov
cmp
stos
cmp
imul
ljmp
lods
fisubrs
test
and
push
jae
mov
fwait
out
cli
loop
dec
xchg
mov
jecxz
insl
and
push
test
sbb
inc
imull
addr16
jp
inc
arpl
int3
sbb
int3
fsts
sti
pop
lea
loop
loope
and
js
xchg
inc
push
mov
or
loop
push
lret
pop
ljmp
sbb
adc
sahf
and
mov
inc
cs
jge
mov
dec
adc
and
add
and
into
pop
jge
shrl
mov
lea
decl
push
fbld
movb
jo
push
in
mov
xchg
xchg
push
loopne
sub
push
sbb
add
bound
movsb
iret
lock
xor
ja
ja
or
mov
imul
mov
and
out
mov
mov
push
shll
add
add
pop
fwait
xchg
xchg
adc
mov
hlt
les
stos
sarl
sbb
jecxz
xchg
mov
mov
jmp
jae
add
aas
push
mov
pop
cmp
shrl
idivb
aas
mov
lret
cmp
cmp
xchg
in
mov
rcrb
fcomp
inc
sbb
scas
pop
xor
jo
scas
xor
movsl
cltd
movl
stos
adc
and
mov
adc
or
movsl
mov
or
iret
sbb
out
xchg
xor
js
lods
cmc
cmpb
fcmovnb
enter
sti
pop
sbb
mov
jge
mov
cmpsl
xor
mov
xchg
sbb
call
inc
shll
es
aad
cmp
jle
jne
cmp
mov
jne
les
dec
or
out
inc
insl
ds
imul
ror
jmp
xchg
pushf
xchg
lahf
sub
test
ljmp
out
call
inc
ret
mov
mov
and
mov
cmp
cmp
xchg
push
inc
add
inc
cmp
in
decl
pop
lret
adc
rol
js
and
sbb
stos
pushf
test
xchg
push
push
inc
rcll
test
xchg
mov
mov
xchg
cmc
xor
mov
or
add
adc
add
mov
and
popa
aam
je
aas
les
test
push
mov
mov
repnz
in
pop
pop
sub
xor
icebp
out
inc
push
and
dec
mov
push
xlat
xor
repz
outsb
in
rolb
iret
ss
and
lods
jbe
in
xor
sbb
scas
lcall
cs
mov
ret
pop
mov
jb
push
in
add
nop
jmp
test
and
adc
test
jmp
jbe
jbe
fsubrs
sbb
adc
sub
jp
idivl
movswl
add
call
lock
cmp
mov
rolb
lret
loop
inc
test
push
stos
daa
es
daa
out
fcomps
xchg
sbbb
mov
push
cmp
imul
lcall
lock
jle
xor
add
ljmp
sbb
sub
push
or
mov
sbb
xchg
decb
mov
iret
add
sub
dec
ret
int3
les
cmpsl
sub
xchg
jl
adcb
fs
mov
arpl
xchg
sub
cmp
jle
mov
test
daa
mov
dec
add
fstpt
sbb
pop
mov
inc
add
push
div
xchg
rol
dec
or
add
lock
js
test
xlat
cmp
or
pop
pusha
test
sbb
and
loopne
xchg
in
gs
stos
mov
imul
je
push
aaa
test
mov
repnz
xchg
xlat
icebp
sbb
mov
mov
mov
popa
and
sub
ret
scas
aad
pop
push
cmp
testb
cmp
jecxz
lds
mov
cmp
call
mov
push
iret
push
outsl
lock
sub
xor
adc
xchg
pop
jae
repnz
sbb
enter
xchg
clc
sbb
jns
out
and
inc
xlat
cmpsb
andl
jbe
mov
repz
mov
sub
pushf
dec
cmpsb
loop
pop
mov
mov
or
roll
or
push
or
cwtl
jmp
fs
test
lcall
mov
mov
call
cli
ret
sbb
loop
lret
imul
aad
aas
mov
mov
and
aaa
mov
sti
mov
push
ret
pop
lcall
ja
fldcw
pusha
pop
xor
in
ret
flds
arpl
cltd
xor
push
movlps
jle
inc
into
sbb
cmpsl
ret
fadd
dec
fstpl
imul
mov
cmp
and
mov
lock
push
mov
inc
add
xchg
push
and
adc
push
dec
je
lods
int3
std
and
dec
outsb
idiv
loope
mov
fld
fstp
mov
dec
sbb
lret
jne
xor
mov
hlt
orl
pop
addr16
push
stos
sub
shlb
ss
into
push
icebp
test
lahf
lahf
xchg
lock
mov
dec
xchg
ds
mov
shlb
inc
cli
aad
inc
cmp
mov
and
jle
pop
cmc
repz
mov
out
xor
sbb
sbb
divb
jle
and
pop
sub
out
test
fisttps
adc
adc
int
cmp
push
inc
inc
jno
jo
out
int3
cmpsb
xor
jo
outsb
lret
mov
ja
pop
rcrl
add
aas
lea
rorl
aas
popf
test
pop
lea
fdivs
sub
pushf
jp
filds
add
mov
cmc
push
push
cli
daa
jmp
and
jecxz
jb
outsl
dec
cmp
inc
aas
cmp
cmp
enter
mov
inc
or
fwait
xchg
add
adc
mov
inc
adc
mov
xchg
mov
imul
je
mov
xchg
stos
in
lret
subps
xchg
js
mov
push
or
cmpsb
movsl
dec
aaa
mov
push
loope
push
xchg
jb,pt
push
pop
xorb
adc
imul
xchg
leave
mov
and
sub
stos
cmp
out
push
pop
pop
arpl
cli
or
pushf
repz
je
jge
jo
lock
shrb
scas
test
lret
shll
jle
cmp
mov
pop
pop
and
adc
sahf
mov
in
inc
movsb
mov
sti
cli
inc
loopne
and
loopne
push
mov
cmp
xchg
adc
pushf
jbe
xchg
frstor
mov
das
pop
int3
jae
out
xchg
frstor
xor
cli
ret
lret
cmp
mov
addl
adc
push
stos
dec
xchg
shl
idivl
fs
imulb
mov
pop
call
jecxz
xchg
scas
cmp
loop
leave
adc
pop
testb
push
stc
mov
cmc
test
jb
mov
faddl
fidivs
loopne
lret
xchg
std
jns
add
mov
loop
ds
and
cmp
pushl
fcomi
dec
test
fstpt
lods
call
cmp
inc
xchg
pop
mov
test
lahf
test
lret
cmpb
add
stos
inc
pusha
jo
arpl
push
cmp
cli
xor
xlat
mov
or
inc
mov
jo
lds
mov
jae
adc
pop
sbb
or
mov
lret
mov
xchg
mov
fisubl
pop
mov
lret
sti
ret
lahf
daa
mov
repz
and
sub
fidivl
push
cmpsb
lret
and
jge
pop
sub
adc
xchg
and
lret
inc
movsl
lea
daa
movsb
and
addr16
cmpl
mov
lods
cmpsb
jno
mov
hlt
je
adc
test
fcompl
dec
arpl
fadds
lock
mov
mov
and
add
mov
xchg
jo
and
xlat
std
dec
fsubrs
xchg
pop
int
adc
push
mov
mov
sub
ss
sbbb
popf
sti
cmp
fildll
movaps
mov
xchg
test
sub
xchg
outsb
mov
xchg
push
scas
test
push
pop
icebp
bound
and
pop
dec
inc
or
jmp
inc
adc
inc
dec
dec
lcall
js
xchg
enter
push
mov
sub
vaddsd
test
inc
stos
pop
cmpsb
inc
adc
orb
dec
fists
push
xlat
shlb
lods
push
enter
or
hlt
je
je
nop
push
add
dec
mov
ret
sbb
sbb
hlt
std
test
cs
jo
movsl
or
push
and
xor
mov
mov
sub
mov
or
sbb
xchg
sbb
cmp
icebp
jmp
dec
test
xchg
dec
cmp
fiadds
xchg
fucom
clc
int
pop
push
and
sbb
push
jg
adc
cmp
add
mov
insb
call
loop
push
addb
out
or
dec
add
fildll
sbb
stc
dec
negl
in
cmp
lret
add
test
dec
test
out
mov
mov
jg
pop
mov
arpl
push
sbb
push
jge
jle
jne
inc
mov
loopne
and
stos
sub
movsl
loop
nop
fcomi
jg
aad
mov
dec
fwait
dec
mov
repz
xchg
mov
xor
lock
push
sub
pop
sbb
iret
inc
arpl
sbb
fwait
push
xor
cmp
adc
dec
pop
lds
stos
mov
jno
or
nop
mov
ds
lds
pop
dec
dec
aad
out
std
jp
jmp
ds
sbb
int
ss
lock
filds
loopne
ds
xchg
stos
ss
pop
xlat
jb
scas
adc
jbe
cltd
bound
inc
cltd
push
or
dec
xlat
dec
push
mov
inc
hlt
jle
cmpsb
sahf
fmull
xchg
iret
subl
dec
and
mov
push
daa
push
pop
xchg
cmc
cli
dec
ds
xor
outsb
movsl
mov
and
mov
mov
ret
inc
scas
je
movups
sbb
pop
add
jmp
and
lcall
push
jg
adc
xchg
jp
ss
cltd
and
mov
ja
or
xor
mov
mov
or
mov
das
sbb
arpl
push
in
mov
sub
jg
int3
add
lcall
addb
stos
sub
xlat
jbe
xor
andl
test
inc
std
inc
je
xor
fsub
mov
adc
ss
repz
test
rcll
push
mov
push
arpl
rcrl
mov
mov
orl
stos
mov
ljmp
xor
push
mov
stos
daa
pop
leave
scas
and
xchg
ljmp
inc
xor
dec
mov
dec
decl
jno
jl
sbb
mov
push
dec
pop
out
sbb
dec
mov
dec
test
paddw
pop
shl
stos
xor
xchg
pop
mov
cmpsb
inc
cmc
adc
or
sti
popl
hlt
dec
imul
jno
push
and
sub
outsl
inc
les
inc
sbb
popa
dec
mov
fsubr
into
push
pop
mov
cld
add
cmpsb
loopne
call
sbb
cmp
mov
push
pop
ljmp
and
push
test
adc
inc
mov
push
out
push
jns
jecxz
add
push
and
mov
mov
ljmp
aam
add
fadds
dec
mov
mov
jg
push
rcrb
cmc
in
dec
clc
jns
sub
xchg
add
jecxz,pn
popf
mov
lret
sahf
push
repnz
jo
ret
xchg
popa
adc
pop
jle
sub
pop
mov
stos
xor
lods
push
xchg
leave
imul
adc
shll
das
xor
xor
sub
pop
pop
ret
stc
jecxz
fwait
add
subb
ret
out
jl
stc
add
je
mov
aaa
xor
pop
xchg
sub
mov
sub
dec
adcb
mov
fdivrl
fs
ficompl
xor
out
insl
roll
popf
not
adc
push
outsb
xchg
inc
inc
int
sbb
adc
cld
fdivr
dec
dec
inc
sub
sub
in
cwtl
aam
outsb
jg
sbb
mov
cwtl
enter
les
xchg
negb
mov
jl
imul
push
sub
or
jo
aaa
fsubr
frstor
sub
push
rcll
inc
movl
nop
pop
mov
jb
sub
sub
in
cmpb
cld
cmp
cld
pop
testl
sbb
movsb
xor
mov
xchg
movsl
mov
leave
pop
inc
out
rclb
xor
js
dec
cmpsl
in
ror
in
pusha
lods
loop
cmp
stos
cmp
dec
mov
fists
inc
inc
test
mov
test
iret
dec
mov
or
xor
ret
mov
pop
sbb
pop
lods
hlt
jno
daa
bound
test
xchg
popa
xchg
test
mov
mov
push
mov
popf
mov
jp
ror
inc
inc
insl
cmpl
aaa
repnz
push
dec
iret
and
mov
rorb
xor
into
test
mov
cwtl
pop
xor
push
pop
fists
daa
mov
xor
mov
mov
in
add
test
lods
imul
dec
add
ljmp
das
mov
in
sub
fwait
inc
push
pop
es
lock
or
jmp
pop
movsb
cmp
fidivrs
cwtl
mov
std
call
ss
repnz
clc
dec
fs
stos
pop
out
cmp
movsl
orb
mov
lret
mov
xor
repnz
frstor
pop
mov
cmp
add
cmp
idivb
jge
mov
inc
jge
rclb
std
stc
jge
push
leave
in
pop
popf
or
movsb
pop
cmpsb
mov
add
inc
mov
pop
inc
mov
andl
sub
cli
scas
rcr
dec
mov
test
push
fnstenv
movsl
mov
mov
test
pop
loop
push
cmpsl
mov
add
sarl
pop
mov
repnz
stc
stos
xchg
inc
aas
sahf
push
loop
test
mov
mov
fistps
ss
fiaddl
je
iret
in
test
movsl
inc
loope
xor
out
fisttpl
and
pushf
call
imul
sbb
fnsave
add
sub
sbb
pop
and
stos
cmp
lret
repnz
inc
and
test
stos
js
xchg
in
push
out
xor
and
jo
or
sbb
jp
pop
daa
das
jecxz
cmpsl
mov
mov
sub
sbb
mov
pop
das
aaa
jnp
dec
lods
ljmp
add
mov
movsb
mov
mov
xor
sub
pop
jg
and
lcall
popa
mov
mov
std
cmp
pusha
ror
adc
out
loop
cmpsb
je
cs
scas
sahf
cs
xor
std
ficompl
gs
push
mov
out
lods
sub
movb
pop
jle
fs
std
sub
cmp
inc
sub
push
out
cmp
mov
fwait
and
and
fbld
fnsave
xchg
push
cmp
in
cmp
add
divb
addr16
sub
ja
lret
jmp
xchg
filds
cmp
lret
pop
sahf
ja
mov
push
inc
adc
pop
mov
or
and
jecxz
adc
inc
dec
xchg
push
mov
daa
loopne
mov
adc
xorl
push
outsl
cmp
push
loop
add
or
xchg
dec
insb
jle
xchg
int
fisubs
fs
insb
or
jb
mov
cs
and
gs
or
inc
addr16
push
fsubl
jmp
repz
test
fwait
cmc
iret
lods
stos
stos
iret
inc
xchg
call
cld
adc
pop
out
add
xor
out
adc
out
icebp
clc
adc
loopne
mov
pop
sub
jle
mov
dec
jne
mov
or
enter
repz
aad
inc
push
cmpsl
stc
aaa
cwtl
push
and
sub
add
mov
push
dec
cmpl
pop
inc
out
bound
shlb
xchg
push
out
in
jo
mov
lea
stos
add
pop
sub
call
xchg
cmp
jmp
and
or
push
adcl
lret
in
bound
sub
jmp
shl
mov
add
stc
jp
dec
into
das
sbb
or
notl
or
out
mov
sbb
sbbl
mov
and
sub
lods
in
and
push
popa
int
sahf
test
iret
orb
test
aam
adc
out
dec
mov
xchg
cmpsb
inc
pop
push
into
or
sub
adc
icebp
and
out
test
pop
pop
movsb
clc
dec
pop
push
or
xor
cmp
je
pop
push
daa
jb
lods
sbbl
pop
xchg
mov
lcall
lcall
xchg
and
or
push
pop
repz
pop
push
aam
push
jmp
or
xor
std
mov
and
daa
mov
pop
mov
xchg
pop
loopne
sbbb
imul
pop
fdivrs
imul
mov
idivl
nop
ficoml
aam
pop
cmp
test
sbb
fdivrs
and
ljmpw
movsl
in
sub
mov
test
xlat
cwtl
sub
mov
inc
insl
shrb
test
xchg
fstl
gs
and
out
mov
add
mov
xor
inc
xor
mov
cmp
xchg
mov
jp
mov
repz
mov
scas
jo
fcmovbe
xchg
jb
sbb
aam
fwait
adc
inc
mov
xchg
mov
push
dec
fistpll
aad
mov
ljmp
sub
inc
je
push
aaa
imul
jge
pop
lret
xchg
jmp
dec
mov
lret
das
lock
in
mov
adc
lahf
pop
and
mov
sbb
aam
pop
mov
pop
jns,pn
lock
mov
and
mov
or
sub
add
pusha
loope
inc
inc
sahf
mov
pop
adc
cli
fbstp
xor
mov
sbb
dec
mov
nop
addl
das
or
and
jmp
jmp
int
jne
mov
lock
in
mov
shr
mov
sbb
shll
inc
pop
jmp
pop
jns
outsb
fadds
pushf
pop
dec
inc
add
loope
imul
std
dec
inc
and
push
push
es
sub
ljmp
jne
mov
leave
ja
adc
popa
loop
ja
push
pop
stc
loope
dec
or
stos
mov
fsubl
mov
jne
or
mov
jo
sahf
mull
xchg
iret
out
jnp
adc
pop
jnp
push
cwtl
cmp
mov
cld
push
lock
and
inc
cmpb
subb
scas
test
jp
xor
stos
lret
xchg
or
repnz
xor
sbb
sbb
mov
in
cmp
dec
insb
out
inc
add
loope
mov
clc
popa
cwtl
add
in
xchg
jmp
out
out
jmp
sbb
in
test
mov
into
jae
pop
outsl
int3
mov
out
fidivrs
mov
cmp
test
or
xchg
insl
mov
ss
aad
ja
xor
or
popf
dec
add
dec
hlt
push
inc
aad
ds
sbb
rcrb
or
aam
loopne
cmp
dec
jo
push
imul
call
icebp
aas
mov
popl
cmpsl
addr16
push
push
out
pop
enter
sub
bound
adc
pop
lret
sbb
sahf
cmpsl
sbb
mov
fld
aaa
leave
loopne
inc
jmp
popa
and
lea
jbe
adc
push
xchg
scas
and
aaa
sub
sub
std
mov
or
aaa
sub
and
into
ss
clc
lock
rclb
add
or
mov
popa
andl
sbb
mov
sub
lahf
jb
jbe
mov
adc
push
cmpsl
xchg
sahf
sbb
mov
pop
jle
test
fimull
pusha
data16
adc
inc
iret
sub
jb
lock
inc
lock
mov
cmp
loop
les
xchg
pop
in
sub
aas
dec
cmc
repnz
jge
xor
xchg
cmp
mov
xor
shrb
pop
push
push
lret
out
in
pusha
mov
add
sub
jae
out
out
lret
jnp
mov
sbb
out
jnp
aad
xor
mov
ss
dec
pop
sahf
xor
aad
dec
gs
inc
or
jmp
pop
lods
add
repnz
add
jp
scas
imul
test
mov
xchg
push
mov
fsubrs
mov
mov
adc
scas
lock
add
and
pop
jb
and
fsts
jb
loop
mov
inc
adc
inc
daa
xchg
cmp
call
adc
lcall
repnz
ret
and
cmp
or
cmp
dec
mov
arpl
cmp
adc
mov
cmc
rorb
in
jno
jb
or
sbb
and
push
fnsave
adc
popf
jmp
dec
sub
hlt
dec
pop
jno
dec
inc
mov
dec
and
ljmp
addr16
xorb
mov
notl
rcr
jns
scas
int3
xlat
mov
fisttps
sub
popa
sub
fnstsw
dec
int
pop
out
inc
xchg
out
scas
shl
add
jge
jb
loope
into
mov
sbb
ret
enter
xlat
mov
cld
scas
cltd
and
arpl
push
jo
movsl
jge
js
inc
jmp
ret
jns
cltd
pop
in
insb
outsb
cmp
inc
jo
fdiv
or
add
in
cmp
cmc
fidivs
jo
das
push
adc
mov
cmp
fldt
rolb
mov
int3
dec
jmp
lods
lock
xchg
pop
push
imul
lock
lret
xchg
jbe
adc
lea
fprem1
sbb
cmp
mov
sub
sub
pop
mov
inc
dec
pop
into
dec
clc
inc
sbb
and
das
test
push
je
inc
add
test
xchg
sbb
fldenv
dec
fldenv
shll
add
in
inc
jp
mov
les
repz
xchg
stc
jno
out
jge
xor
addb
fwait
and
int3
mov
gs
ret
fnstsw
hlt
or
rcl
cmp
sbb
aaa
xchg
mov
int3
mov
mov
or
xor
fsubl
adc
mov
popa
push
jae
push
mov
sub
mov
pop
cs
sbb
repnz
adc
scas
std
pop
push
sets
cmp
iret
xor
leave
mov
cmp
sub
lock
sahf
xor
test
test
ja
lahf
movsb
cli
or
outsb
arpl
into
clc
std
or
jb
fisubl
xor
icebp
xchg
jb
sarl
ljmp
jl
ljmp
inc
test
sbb
sub
mov
xor
sbb
lock
mov
cmp
lock
inc
outsb
push
push
in
stos
fcomps
push
adcb
pop
fwait
rcrl
push
ja
xchg
out
fidivrl
and
sub
push
aaa
aad
rclw
xchg
jnp
push
cmp
ret
pop
sbb
lret
icebp
jle
push
sbb
xor
dec
repz
loop
xor
xchg
out
mov
dec
lret
iret
mov
ja
shrl
int
pop
popa
xchg
or
aad
sbb
insl
adc
cmp
mov
dec
mov
mov
pushf
pop
stos
scas
insl
sub
sbb
push
out
dec
cmp
sbb
add
in
xchg
mov
aam
fcmove
jg
xor
insb
popa
sti
xor
icebp
cwtl
int3
ret
xchg
jns
add
in
test
inc
mov
adc
pop
clc
sbb
jb
rclb
lcall
push
and
nop
lock
xlat
or
add
fnsetpm(287
pop
lods
addl
rcr
in
cmp
pop
nop
pop
cmc
in
sub
stos
int3
push
aam
sbb
jl,pt
ficoms
dec
scas
les
aam
popf
add
repnz
in
fld
idivb
adc
pop
adc
call
js
hlt
xor
repnz
cmp
jp
inc
in
jae
sahf
mov
adc
test
fiaddl
aam
rcrl
mov
xchg
inc
xchg
gs
int
or
sbb
jno
pop
dec
aas
mov
or
xchg
add
dec
sub
out
mov
call
jne
cltd
dec
xchg
roll
shll
and
jl
push
lods
push
mov
or
mull
dec
push
in
movsl
daa
das
pop
shrl
inc
cmp
test
lcall
in
sub
sahf
sbb
lahf
jmp
call
xchg
rcrl
xor
test
es
jo
push
outsb
push
hlt
and
add
scas
dec
xchg
lea
mov
ss
xor
in
pusha
clc
pusha
sub
sub
nop
pop
das
out
xor
inc
xchg
dec
xchg
out
sahf
pushf
dec
lea
stos
adc
xor
jnp
ss
je
stos
xchg
repz
repz
nop
or
or
pushf
leave
out
sub
fadds
pushf
repnz
dec
outsb
cmpb
scas
ficompl
int
xchg
sbb
or
mov
mov
je
jbe
jl
xchg
or
movsb
mov
jb
dec
xor
and
bound
pop
imulb
stos
push
adc
popf
dec
add
sub
xchg
stc
rorb
enter
xchg
jl
ljmp
sarl
inc
sub
mov
and
mov
inc
push
dec
or
pop
pusha
push
bound
in
sub
sbb
lea
mov
pushf
pop
mov
imul
cmp
xchg
sbb
cltd
pop
dec
cmp
or
xor
mov
jo
nop
int
int3
pop
push
push
mov
cmp
adcl
dec
mov
xchg
call
std
in
in
mov
test
outsl
int3
arpl
add
dec
xchg
cwtl
movsb
cmp
fiaddl
mov
pop
test
sbb
and
daa
jno
pop
mov
mov
fists
jmp
mov
shrl
cmpsb
cmp
add
mov
cmpsb
call
and
inc
popa
or
mov
popa
mov
scas
push
dec
sbb
sbb
pop
mov
rcll
xor
jle
imul
mov
xchg
jl
xchg
jns
pop
mov
or
arpl
ffree
push
mulb
ret
mov
mov
cmc
push
jmp
out
push
ljmp
dec
mov
add
aaa
xor
gs
dec
fsubp
pop
jle
cwtl
lret
push
stos
imul
mov
adc
pop
gs
test
outsl
lahf
out
std
repz
xor
pop
jg
popf
jno
popf
inc
scas
mov
or
pop
sbb
lcall
test
roll
pop
cmpl
mulb
loopne
ret
lea
test
je
sti
lock
inc
aaa
stos
mov
jno
push
jno
cmp
mov
out
ljmp
mov
sub
repnz
push
enter
jns
jl
pushf
leave
adc
cmpsl
dec
xchg
mov
lret
lods
mov
in
lret
jle
ret
enter
dec
gs
sub
in
mov
sbb
xor
adc
int3
aad
cli
test
insl
xchg
and
stos
rclb
mov
and
mov
cmc
mov
adc
lret
dec
jecxz
shll
scas
xchg
fisttpll
add
push
sub
jg
sub
fisubrs
xchg
sub
sti
aaa
ret
sbb
dec
ds
shrl
enter
xor
add
in
clc
mov
and
inc
inc
fdivrs
pop
sahf
mov
pop
cld
mov
outsl
pop
add
cmpsb
pop
push
push
loopne
pop
xchg
inc
sar
sbb
jb
push
loope
hlt
fcomip
add
sub
jmp
mov
mov
mov
mov
add
dec
hlt
mov
bound
push
xor
cld
scas
push
adc
fadd
popf
stc
adc
jg
sti
sbb
lea
cwtl
xchg
push
cmp
idiv
std
jmp
and
push
fadds
arpl
push
sub
adc
gs
notb
pop
rclb
adc
dec
push
ret
mov
cmp
dec
outsb
das
push
xor
push
es
xor
mov
cwtl
js
mov
inc
popa
sub
xor
ss
sbb
test
mov
mov
mov
scas
ficoms
lock
sar
into
push
lcall
xor
addl
jle
xor
jmp
inc
outsl
lods
scas
pop
jb
addr16
enter
ljmp
jg
and
cli
cli
inc
loope
sbb
sahf
xchg
js
nop
scas
test
xchg
fs
jg
xchg
sbb
scas
push
sub
movsb
xlat
or
cli
adc
stos
cmp
clc
ret
adc
in
clc
fistpl
shlb
vmovupd
cld
dec
mov
pop
mov
mov
push
add
ret
cli
jg
popa
and
ja
out
ljmp
in
xchg
adc
xor
clc
push
in
cmp
sub
mov
adc
jns
cmp
and
imul
icebp
push
or
lret
rol
lds
idivl
stos
xchg
sbb
ret
pop
dec
push
mov
add
pusha
xchg
sub
and
sbb
jp
test
xchg
pop
lds
test
adc
and
in
xor
xchg
adcl
repz
popa
insb
pop
into
lods
mov
cmp
push
shll
xchg
dec
aam
adc
lods
mov
pusha
pop
push
test
into
or
ljmp
ljmp
fnsave
cmc
mov
xchg
popf
push
inc
insb
fidivl
leave
lcall
dec
aam
sar
mov
fwait
loopne
cmp
cmp
es
add
and
jge
out
es
mov
mov
lahf
sub
aad
xchg
lcall
mov
jg
inc
jecxz
jb
adc
pusha
sub
mov
loope
and
dec
sbb
in
mov
push
pop
sti
clc
cwtl
sbb
fnstsw
sbb
pop
cmp
inc
iret
push
dec
aaa
fiaddl
in
das
mov
fcmovnb
adc
imul
addb
sub
sub
mov
ret
lcall
ljmp
mov
ret
cmp
or
adc
mov
mov
loop
or
add
pop
pop
lea
add
jecxz
test
mov
cmc
adc
push
cmp
scas
test
scas
mov
pop
push
mov
push
jbe
into
insb
push
popw
gs
loopne
mov
test
ja
sbb
sahf
ficoml
jb
test
inc
daa
cwtl
jb
inc
int3
or
and
aas
mov
call
clc
fs
lea
cmp
xchg
jmp
mov
imul
sbb
subl
adc
aaa
or
mov
inc
adc
aad
bound
out
rcll
cmp
shrb
clc
pop
dec
fmull
fdivrl
mov
jmp
mov
add
ficoml
sub
outsb
jno
clc
pusha
arpl
int3
hlt
mov
cmp
shl
rcrb
pop
inc
xacquire
dec
jne
scas
dec
pushf
cmpsl
cmp
pop
cli
xchg
mov
popa
cmp
iret
popf
lods
push
lds
mov
pushf
xchg
cmp
outsb
push
sbb
call
test
add
cmp
cld
outsl
sbb
outsb
into
lret
or
inc
lretw
lea
movsb
scas
pop
mov
aad
scas
mov
xor
jl
jp
xor
and
xchg
mov
push
imul
xchg
ret
ficompl
stos
imul
cmpsl
jo
aaa
shr
and
cmp
mov
jbe
or
lret
out
pop
xchg
mov
mov
push
lods
sub
std
enter
mov
addb
fdivp
mov
dec
les
sbb
and
jl
inc
out
loope
adc
mov
push
arpl
xchg
sbb
xlat
iret
mov
outsb
mov
push
popf
scas
je
pop
xorl
stc
or
mov
pop
xchg
pop
xchg
lcall
in
and
fiadds
inc
pop
clc
std
fs
mov
inc
inc
dec
ss
jecxz
int3
xchg
clc
adc
sub
push
aad
sbb
adc
mov
adc
pop
cmpsl
xor
mov
test
jp
mov
lock
or
add
iret
pop
xchg
mov
hlt
mov
imul
fisubl
sbb
cmpsl
jbe
jmp
jbe
dec
push
mov
daa
sub
aaa
daa
cmc
mov
test
ret
jo
lods
fstps
rcrl
mov
mov
test
adcl
add
mov
adc
sbb
pop
jge
rcll
sbb
loop
out
stos
fwait
jp
xlat
sarb
push
aaa
jp
test
jae
outsb
mov
jnp
ffreep
xchg
cmp
lds
imul
loope
pop
sub
je
jo
mov
je
inc
dec
pop
lods
mov
fdivp
xor
std
mov
cmc
sbb
jne
sbb
mov
xor
xor
loope
and
jae
sti
arpl
stos
push
mov
adc
fs
out
test
cmp
inc
in
jmp
mov
sbb
pop
dec
ljmp
testl
jge
jno
outsb
and
add
repz
cltd
mov
setge
add
jne
push
fs
mov
inc
int
cwtl
dec
add
stos
sbb
dec
and
jno
add
jp
stos
aad
or
add
cmp
shrl
ss
pop
test
ljmp
cmp
cmp
sahf
xchg
negl
sarl
sub
sbbb
and
mov
add
icebp
adc
pop
popa
jle
lret
loop
cwtl
test
insl
sub
push
cltd
push
mov
mov
mov
mov
fcom
je
cwtl
fdivl
stc
mov
mov
inc
mov
sbb
enter
sub
mov
popa
hlt
xchg
jno
xchg
add
mov
scas
xor
mov
fistpl
loope
insl
dec
pop
mov
xchg
inc
shl
pushf
inc
movsl
fdivrl
cmpl
and
les
sub
mov
add
sub
mov
push
xchg
aas
xchg
adc
or
mov
adc
jns
hlt
adc
stos
pop
and
add
jecxz
jns
sub
mov
add
stos
jo
jmp
sub
rcrl
dec
das
in
popa
inc
test
cmp
jo
roll
arpl
xchg
push
fnstsw
fbld
cltd
pop
int
mov
call
gs
cmp
jno
aad
sub
jae
imul
mov
pop
mov
test
out
cmp
ljmp
in
je
sbb
cmpsb
xchg
scas
pop
pop
xchg
lahf
inc
cmp
pop
repnz
add
sbb
jne
jo
and
and
cmp
sbb
sarb
xchg
mov
lea
mov
pop
lret
jge
inc
jb
mov
jnp
xor
movsl
out
and
mov
xchg
xchg
mov
inc
pop
das
aam
add
mov
arpl
lahf
outsb
das
andl
mov
sub
mov
lock
mov
shr
or
add
enter
cmp
aas
cmp
sbb
test
test
mov
push
lods
js
cmc
cmpsl
aad
mov
movups
and
fs
mov
stos
cmp
xchg
mov
jge
shld
aas
or
lcall
shlb
in
xor
dec
pop
inc
sbb
and
scas
xchg
adc
mov
data16
xchg
lcall
mov
test
and
push
lock
mov
pop
adc
rclb
cmpsl
or
xor
mov
mov
push
ss
adc
inc
int
dec
hlt
jp
mov
sbb
les
xchg
sub
shl
fwait
lea
push
pop
adc
xchg
push
adc
orl
ljmp
dec
pop
and
mov
addr16
mov
mov
or
add
jg
jo
cmpsb
push
push
dec
or
mov
sub
rorl
and
mov
adc
arpl
mov
adc
jae
test
add
dec
mov
lret
bound
pop
add
cmp
fmull
inc
ret
clc
pushf
in
insl
test
pushf
mov
fs
repnz
pusha
push
arpl
fcompl
push
adc
test
sub
jl
inc
in
int
sub
pop
ret
dec
das
add
add
adc
dec
aam
mov
bound
adc
inc
pop
cld
fidivrl
lods
stos
sub
mov
adc
cmc
ss
push
gs
xchg
xor
mov
loop
mov
insb
cltd
sub
or
push
outsl
popa
outsb
mov
push
jg
in
movsb
arpl
shrl
fdivrs
mov
lea
loop
jge
je
shr
pop
sub
and
divl
shl
or
ljmp
mov
imul
aas
movl
enter
jmp
xor
inc
xchg
ja
in
test
mov
or
idivl
pcmpeqb
stos
out
dec
out
jg
insl
adc
into
iret
adc
call
out
dec
scas
ljmp
mov
daa
lock
xchg
add
loope
mov
dec
inc
fs
jbe
push
or
subb
and
mov
addl
inc
int
adc
out
mov
lea
daa
inc
sbb
call
aaa
push
cmp
push
mulb
rcrb
cmp
mov
xchg
std
fildll
jg
pop
inc
sub
jne
int
scas
jl
push
inc
add
mov
ds
jbe
into
push
push
push
mov
cmp
in
fsqrt
out
or
rcll
push
lcall
sbb
sub
jl
and
gs
jo
ljmpw
les
and
sbb
cmp
sbbl
sarb
fucomi
add
les
xlat
and
scas
inc
inc
das
in
pop
and
aaa
cmp
add
test
gs
ficompl
adc
out
mov
leave
cmc
add
sbb
pop
jecxz
stc
insl
inc
or
dec
push
cmc
clc
dec
out
int3
jbe
or
insb
jmp
jecxz
push
loope
xchg
mov
in
cmpsl
test
xor
xor
enter
test
push
lret
ds
jmp
int3
jl
xchg
in
inc
int3
mov
lcall
dec
and
lahf
ja
dec
mov
ret
fsubrs
add
cli
scas
ss
push
xor
push
sub
dec
push
fsub
out
cmp
pop
or
push
lods
xchg
das
jb,pt
js
pop
push
je
and
xchg
gs
out
movsb
jno
sub
xchg
cmovl
xchg
jmp
sbb
cmp
punpckhbw
cmpsb
int3
xor
pop
movsb
push
mov
in
jg
popf
mov
xor
mov
push
enter
jp
cmp
fldenv
sbb
shlb
push
and
inc
mov
nop
xchg
adc
jae
fldenv
aaa
dec
push
insb
pop
pop
insb
xor
sbb
inc
xchg
jmp
mov
out
cwtl
insb
incl
xchg
ja
mov
gs
out
fsubrl
lret
push
pop
xor
sub
cwtl
fldcw
daa
jnp
add
add
arpl
pop
xchg
outsl
pop
mov
mov
lahf
push
push
jno
rcl
pop
mov
adc
inc
sbb
sub
ds
in
push
cmp
es
fcmovnu
enter
pusha
adc
push
mov
and
pop
out
jae
xchg
jno
xlat
dec
pop
in
ds
xor
inc
jp
xor
sub
js
pop
xchg
pop
mov
aam
xchg
xlat
sahf
imul
cwtl
jg
fisttpll
sbb
leave
dec
xchg
lcall
jecxz
push
enter
push
rorl
sub
test
add
mov
dec
insb
das
inc
gs
popl
adc
rcrb
sbb
pop
cmp
xchg
lea
sbb
test
mov
and
in
adc
jg
icebp
mov
push
jl
insl
aas
xchg
not
dec
cwtl
lret
xor
pop
lds
fstpt
lahf
sbb
inc
push
adc
adc
das
xor
cli
mov
mov
aad
lods
add
pop
add
movsl
stos
push
xchg
sub
sub
fsubrp
imul
jl
sub
pop
push
sarb
hlt
push
scas
pop
push
jo
mov
sbb
sbb
rolb
loope
cli
pop
xlat
pusha
imul
sbb
in
cmc
mov
and
inc
stos
outsl
pop
popf
ror
pushf
push
jecxz
sbb
pop
inc
out
shrb
inc
and
adc
sub
std
gs
lods
sbb
gs
xchg
push
stos
dec
mov
mov
fndisi(8087
fwait
inc
lcall
testl
mov
pop
pusha
pop
dec
cmp
mov
loop
and
jecxz
pop
pop
iret
jo
mov
push
sahf
aaa
addl
mov
jle
push
lock
into
mov
mov
push
xor
sub
adc
loope
cmp
imul
js
push
aam
unpckhps
mov
in
sbb
lcall
mov
dec
mov
sub
xor
sub
sbb
mov
call
scas
nop
inc
insl
add
iret
loopne
jo
lahf
jbe
ljmp
outsb
jbe
jecxz
mov
mov
push
outsl
xchg
adc
cli
inc
pusha
or
mov
jge
add
pop
sti
aas
inc
push
mov
push
add
imul
xor
bound
pop
inc
mov
cli
mov
sbb
lea
mov
xor
ds
lret
cmp
out
insl
sbb
inc
fstpl
add
mov
movsl
outsl
push
insb
mov
stos
jp
jg
repnz
call
inc
es
arpl
aad
aas
pop
sub
das
jecxz
out
scas
mov
mov
mov
sub
les
scas
lock
xchg
in
iret
loop
stos
lcall
std
mov
xchg
subb
ss
clc
out
xchg
das
dec
sbb
pop
mov
xchg
cmc
arpl
jp
scas
rorb
pop
testb
pop
jl
mov
dec
xor
dec
push
sarb
jle
jo
push
out
les
sub
in
inc
sub
ljmp
push
or
les
push
push
ret
pop
pop
cmp
icebp
push
xchg
inc
sub
testb
sub
sbb
in
push
pushf
xor
insl
stc
xchg
iret
mov
scas
pop
cmp
dec
xchg
mov
pop
cwtl
xchg
scas
jp
mov
aaa
ljmp
cmp
or
jae
leave
cmp
into
jl
dec
adc
jmp
add
mov
outsl
add
insl
adc
xchg
stos
xchg
in
sahf
aas
mul
push
out
mov
pop
sub
sbb
inc
mov
test
pushf
sbb
icebp
cmp
testb
xor
push
std
lret
loope
inc
push
adc
ss
xchg
data16
cmc
sbb
stc
sub
js
dec
dec
out
scas
rcl
jbe
jno
add
adc
hlt
mov
and
add
mov
inc
pushfw
aaa
xlat
in
addr16
sarl
mov
fstl
adc
sbb
mov
sbbb
jmp
repz
adc
pushf
push
mov
lahf
lds
out
cs
add
jmp
mov
decl
push
inc
mov
out
sbb
mov
cmp
mov
xchg
or
das
adc
or
fisttpll
cmpsb
frstor
pop
fs
push
cmc
sbb
adc
mov
pusha
push
cmpsb
mov
push
inc
repnz
pop
dec
push
sti
sbb
mov
xchg
add
jmp
cmc
add
push
and
and
or
jno
test
dec
test
xchg
lods
cld
add
sahf
arpl
les
xor
fisubrl
xchg
pop
pushf
sub
xor
rorb
mov
jno
in
aas
add
mov
les
dec
xchg
cwtl
jns
sbbb
imul
xor
test
inc
insl
lret
push
or
sbb
mov
mov
imul
mov
xchg
aaa
jae
in
xor
lods
sub
in
xor
or
sbb
jmp
std
lahf
add
mov
push
add
lock
les
push
adc
or
cltd
lret
fstl
dec
pop
pop
mov
push
dec
jp
mov
adc
pop
dec
enter
lret
add
mov
outsl
and
into
test
repnz
daa
cmp
mov
push
push
push
aam
imul
adc
ret
hlt
fcmovnbe
out
cmp
xlat
aad
sbb
andb
sub
stc
xchg
push
stos
and
out
loope
imul
imul
bnd
orl
mov
xchg
data16
fsubs
jmp
cltd
mov
xor
jb
insb
cmp
movsl
xor
push
lock
mov
xor
jb
dec
or
insl
je
jo
bound
iret
xchg
jns
sahf
movsb
or
cld
pop
aas
adc
cmp
gs
xchg
inc
jne
or
fwait
addl
pushf
xchg
dec
outsl
push
in
pop
dec
mov
aas
mov
mov
test
xor
adc
push
lods
jle
pop
int3
xor
inc
dec
inc
sub
fstl
jl
pop
sti
lret
imul
mov
mov
ficoml
cmp
xchg
sub
jnp
clc
rcrl
pop
shr
mov
scas
xor
sti
xchg
push
insl
sbb
mov
test
xor
js
push
add
jl
mov
ljmp
add
cmp
popa
das
cltd
or
inc
fsubrp
pop
in
xchg
out
fisubl
xchg
loope
add
push
clc
loopne
das
dec
lea
mov
ret
call
push
ja
stc
xor
inc
in
out
insl
negl
cmp
js
inc
mov
mov
pop
mov
cmpsl
rolb
std
insb
js
and
arpl
out
fidivrl
fistps
sbb
pop
inc
cli
push
pusha
andb
arpl
and
aaa
testl
mov
aas
xchg
jb
dec
cs
push
cmp
xchg
loopne
jo
inc
sub
push
sbb
dec
mov
out
or
xorb
jl
decb
adc
push
xor
lret
stos
enter
xchg
and
popa
je
lret
jmp
insl
repz
ret
mov
iret
xchg
mov
dec
mov
mov
cwtl
sub
leave
jo
cmpsb
movl
out
outsl
push
xchg
in
and
rcrl
aam
repnz
out
jp
and
outsb
test
fs
and
fiadds
movsl
outsl
cld
aas
movb
test
sub
pop
and
sbb
inc
dec
push
or
mov
adc
ret
stc
cmp
xchg
insl
add
leave
add
sub
ds
insb
out
add
add
sbb
jmp
mov
insb
enter
pop
pop
out
jo
jns
into
push
push
into
or
ljmp
repnz
arpl
add
inc
push
cmp
or
push
xlat
sbb
clc
bound
mov
jle
xchg
sti
inc
or
cmpsb
leave
mov
stos
push
fdivrs
pop
cmp
xchg
repnz
or
insl
mov
ret
clc
divb
inc
dec
mov
mov
xor
in
arpl
xor
jae
ret
sti
mov
test
rcl
scas
push
cmp
lods
cli
mov
movsl
lret
mov
adc
mov
clc
jne
jno
data16
rcr
and
cmp
je
push
cwtl
das
jp
jmp
mov
repz
sbb
jb
int
or
adc
adc
xor
addr16
loopne
sbb
adc
repz
aad
sub
jl
lret
push
popa
push
fldcw
into
pop
icebp
adc
cltd
ljmp
xchg
stos
xor
sti
in
and
sbb
fisubrl
or
pop
insl
ret
add
cli
or
xchg
pop
pusha
mov
into
xchg
xor
pop
mov
aas
xchg
dec
stos
dec
jp
and
push
sahf
shrb
out
pop
pop
and
adc
push
repnz
int3
sbb
andl
rcll
jnp
add
mov
mov
cmp
out
addb
cmp
ds
iret
icebp
movsb
cmc
jle
stos
inc
push
mov
or
lahf
pop
insb
sbb
in
je
addr16
out
pusha
sub
mov
xchg
push
sub
fists
adc
dec
test
sbb
adc
mov
aaa
jmp
mov
mov
mov
inc
aas
loope
sub
mov
scas
pop
jns
repnz
jg
or
jae
scas
and
push
divl
dec
movsl
inc
xchg
sub
jge
outsb
insb
inc
das
sbb
sub
mov
jb
pop
in
fdivrl
ljmp
inc
xchg
pop
mov
jg
inc
nop
std
loope
jns
mov
xchg
mov
mov
lods
insl
in
lcall
push
lcall
repnz
and
add
scas
mov
rcrb
stos
outsb
lahf
cmp
jge
xorl
testl
ret
push
imul
fldcw
idivb
in
in
mov
mov
inc
pop
in
data16
pushf
imul
rcr
lret
xchg
orb
xchg
cld
adc
xchg
adcb
mov
jmp
push
cmp
xor
push
pusha
lret
inc
mov
arpl
xchg
pop
mov
arpl
shrl
jmp
xchg
xchg
xchg
xor
nop
test
pop
fcmovnbe
dec
inc
mov
jge
mov
xchg
mov
mov
sbb
pop
insl
loopnew
ss
mov
enter
mov
bound
gs
pop
dec
xchg
nopl
and
scas
xor
testb
fiaddl
xor
xor
cmp
stos
js
repnz
dec
cltd
jg
sbb
testl
addr16
adc
or
dec
cmc
adc
push
test
stos
mov
test
mov
sbb
in
shl
je
xchg
push
fcoml
cmp
mov
pop
inc
push
orl
xchg
frstor
add
fstps
mov
aaa
push
iret
orl
adc
xchg
test
jge
lods
ja
fwait
jle
cmp
movsb
mov
popa
gs
push
mov
adc
das
scas
mov
stc
dec
mov
push
sahf
jo
fwait
sbb
sub
mov
add
stos
jl
nop
hlt
out
add
test
iret
lods
lds
mov
adc
xchg
shlb
stos
add
pop
not
clc
jge
popf
aad
sbbl
rorb
push
push
fs
fcmovb
mov
out
push
and
push
pushf
jecxz
jnp
ret
and
xchg
popa
mov
cmp
cmpb
inc
cmpb
sti
sub
pop
dec
adc
cmc
lock
xchg
dec
push
jmp
sbb
adc
push
je
lret
stos
jl
pop
pop
loope
sbb
jns
xlat
push
in
jae
mov
mov
inc
or
lds
xchg
sbb
out
adc
ss
leave
or
sbb
xchg
enter
lods
stos
or
mov
cmp
jp
xchg
push
add
jne
sub
jmp
outsb
jne
mov
sub
mov
sarl
lea
pop
xchg
stos
xor
lea
push
cli
mov
int3
xchg
xchg
inc
sahf
out
imul
xchg
xor
or
cmp
test
test
pop
jno
ss
ja
sbb
inc
add
and
js
sbb
popa
iret
sub
lock
shl
pop
test
mov
jns
mov
inc
or
lea
cmp
inc
push
cmp
popf
call
mov
cwtl
inc
jl
fistl
lock
or
mov
fisubrl
cmpsb
clc
scas
add
jg
and
sub
lret
or
lock
pop
jge
jmp
cli
scas
test
push
sub
xor
adc
sub
jne
lcall
sub
xor
ljmp
dec
mov
jmp
cmpsl
cmpsl
sub
xor
enter
mov
push
dec
lods
outsl
mov
and
rolb
mov
repnz
sarb
and
xor
dec
mov
xchg
add
jae
jne
push
mov
iret
in
out
push
rolb
ja
cli
mov
or
push
mov
bound
cli
push
push
mov
cs
nop
cli
std
mov
js
loop
fmull
cmc
sti
mov
mov
or
pop
in
xorl
out
lret
adc
daa
loopne
scas
add
mov
das
lds
mov
daa
ret
stos
xchg
sarb
xchg
cmp
arpl
hlt
imul
into
decl
andb
scas
jns
adcb
movsb
xor
idivb
xchg
in
mov
xchg
sbb
scas
leave
inc
icebp
loopne
push
fsubp
test
pop
dec
fwait
mov
fistps
mov
sub
test
negb
out
out
scas
jne
das
decl
mov
or
or
lret
aaa
adc
pop
lret
mov
ret
xor
rcrb
and
mov
nopl
lahf
mov
stos
ljmp
pop
mov
mov
cmp
sbb
dec
loope
in
fs
movsl
inc
push
lods
mov
fidivs
ret
xchg
test
mov
lds
js
dec
pushf
rcrb
std
mov
outsb
movsb
mov
gs
mov
fildll
pop
jl
and
or
ror
das
cmp
mov
mov
or
fmulp
dec
into
pop
fdivr
ret
adc
and
lods
dec
test
fcoml
or
rorl
stc
cmpsb
adc
dec
inc
pop
or
cld
cmp
adc
pop
mov
stos
add
mov
add
pop
xor
push
xlat
mov
cli
cs
enter
sub
es
mov
jecxz
out
bound
bound
pop
pop
cld
fnstenv
push
push
lahf
ljmp
add
sbbl
dec
leave
orb
mov
popa
lods
mov
shrl
pop
in
and
das
in
jb
mull
ret
xor
dec
pcmpeqw
pusha
movsl
in
mov
mov
test
xchg
addr16
rcrl
xchg
and
cmp
and
insb
cmp
add
fidivs
mov
les
sbb
in
fsubl
push
mov
jge
jno
loope
or
push
jo
push
pushf
mov
dec
in
xchg
jmp
mov
or
fdivrs
push
adc
jne
jge
loop
movsb
ret
dec
sti
adc
cmp
adc
xchg
push
dec
enter
bound
mov
cmp
cmp
shll
sbb
scas
dec
add
adc
add
adc
pop
or
xchg
jne
pop
orl
bound
adc
in
and
repz
dec
xchg
je
gs
stos
xor
xlat
sub
insl
ret
mov
out
movsl
pusha
packuswb
sub
in
xchg
fyl2x
orb
out
mov
aad
and
mov
sahf
jb
jmp
lret
xchg
mov
and
sbb
out
testb
adc
xor
loope
fildll
lods
push
cmp
gs
dec
dec
les
hlt
jbe
icebp
add
mov
pop
mov
mov
lods
sbb
call
outsb
xchg
dec
lods
lret
scas
lcall
jmp
push
ja
lea
ds
icebp
in
push
sbb
xor
push
push
es
rcl
int
sbb
std
repnz
xor
popa
cmp
outsb
xor
dec
mov
and
mov
hlt
rcll
cmp
inc
fs
cmc
loopne
enter
out
cmp
push
lret
outsl
and
cs
mov
pusha
mov
orb
mov
lock
in
daa
push
fwait
cmc
push
xchg
xchg
mov
or
mov
aaa
fimull
test
inc
jge
jne
stos
push
add
andl
leave
or
jb
add
sbb
or
lcall
adc
daa
xor
lods
loopne
xchg
pushf
into
add
cmp
int
insb
mov
inc
pop
outsb
aad
cmp
push
push
es
add
jp
enter
sub
xor
mov
pop
mov
xor
in
ss
aam
js
inc
nop
scas
call
xor
mov
xor
mov
ja
test
dec
jle
mov
pop
sub
leave
cwtl
jg
pushf
or
pop
sbb
shrb
shlb
lcall
push
push
lret
jnp
pop
xlat
bound
jnp
aad
test
dec
fsubp
aas
mov
popa
jne
jns
add
mov
cmp
add
pusha
pop
push
mov
xchg
jle
shlb
pop
lods
cs
push
daa
imul
jo
into
cmpsb
sbb
int3
lret
lods
sbb
fdivs
push
mov
add
setp
inc
jns
fdivrl
imul
cmp
call
addr16
sbb
out
xlat
push
cmp
dec
sahf
lock
rclb
jmp
mov
pushf
jnp
mov
dec
mov
subl
push
aas
cmp
clc
push
testb
out
xchg
aad
and
into
mov
xor
inc
out
lea
stos
pop
adc
mov
in
inc
xchg
adc
incb
or
push
ret
push
cli
jle
inc
mov
mov
cmp
mov
stos
jno
outsl
iret
sub
jns
adc
hlt
push
pop
pusha
jbe
stos
push
out
push
dec
loopne
cmc
dec
int3
mov
outsl
out
in
add
mov
hlt
cmp
insl
adc
sbb
test
int
add
sbb
mov
sub
lods
cmp
fistl
inc
and
dec
fstpt
fstpt
cmpsl
inc
cmpsb
mov
js
fisttps
mov
inc
jle
inc
pop
adc
test
and
addr16
popa
mov
aad
and
mov
sbbb
xchg
adc
clc
sbb
andb
xchg
mov
clc
rorl
push
push
push
aad
cs
movsl
nop
lret
push
in
movsl
ds
test
cmpsl
addr16
stos
add
cmp
push
out
aas
fbld
es
bound
push
iret
add
lret
cmpsl
add
into
fisubs
dec
loope
push
inc
mov
aad
lds
cmp
outsb
dec
and
dec
xchg
lods
fistpll
pop
mov
lods
jle
outsb
ds
imulb
in
pop
xchg
lds
ret
xchg
movsb
mov
daa
pop
mov
divb
cmpsl
sbb
xchg
fldenv
mov
or
pop
insb
sub
xor
rcrb
mov
push
sub
xlat
adc
jecxz
adc
stos
jle
sub
popa
dec
or
js
mov
mov
lds
or
sbb
mov
scas
dec
push
std
inc
mull
cmpsb
insl
xchg
add
and
inc
mov
xor
jp
xchg
lods
xor
xlat
or
mov
push
fstpl
add
clc
xorb
shrl
dec
pop
xchg
iret
movsl
insl
repz
in
in
mov
sub
mov
cmpsb
xchg
inc
dec
js
addl
cwtl
xor
fmuls
ja
push
repz
inc
out
fnstcw
cmp
pop
xchg
and
adc
andl
test
dec
dec
push
push
push
loope
push
push
and
mov
cmpsl
mov
mov
enter
out
das
xchg
mov
push
ljmp
movsb
and
mov
dec
imul
pop
cld
aas
cmp
out
cmp
mov
cs
xor
js
and
and
in
andps
push
dec
push
xchg
insb
les
sbb
repnz
jmp
call
mov
pop
popa
movsl
adc
pushf
xor
in
jno
ja
mov
jo
in
xor
js
dec
ret
adc
cmc
sub
mov
and
ds
sub
sbb
movsl
mov
mov
pop
adc
scas
rorl
jno
mov
and
jg
or
ss
aad
call
add
inc
jg
sahf
lret
mov
aaa
rcll
cmc
loopne
rcll
sarb
mov
popa
pushf
or
adc
mov
dec
adc
sub
ds
jle
aas
mov
imul
loop
das
mov
mov
jb
movsb
add
cmp
adc
arpl
loopne
cmp
arpl
icebp
gs
pop
pusha
sbb
shll
mov
push
and
inc
lahf
jg
rsqrtps
push
mov
repnz
cmpsl
push
out
out
xor
and
ja
fs
sbb
movsb
in
jg
ret
cmp
adc
sbb
add
adc
mov
movsl
sbb
mov
jg
mov
imul
jne
rclb
xor
adc
out
jg
sbb
arpl
and
xchg
push
sub
loop
push
or
icebp
mov
mov
sub
mov
pushf
das
ljmp
mov
cmp
and
pop
out
sub
cmpsb
popa
cld
sub
jmp
lret
cltd
iret
je
xchg
cmp
xchg
test
jmp
adc
getsec
push
cmp
repnz
sahf
pop
addr16
data16
lea
inc
and
or
test
fsub
leave
mov
ror
jl
arpl
test
lock
ret
leave
fnstsw
lock
jns
inc
pop
stos
bound
sub
xchg
dec
sbb
lods
lods
lods
push
xor
jnp
cmp
or
int3
and
ret
rolb
cmp
pushf
adc
test
cmpsb
mov
popf
mov
adc
jae
mov
mov
inc
fnstcw
es
mov
sub
mov
push
sbb
les
add
repnz
mov
and
into
cmp
psubsw
mov
movsl
popf
adc
pop
jne
jnp
inc
and
addr16
mov
clc
xor
and
jl
loope
mov
das
pop
std
scas
fwait
es
lods
adc
xor
iret
js
xchg
pop
xor
push
shll
xchg
cmpsb
ljmp
dec
xor
add
arpl
add
repnz
icebp
jno
cwtl
sub
pop
mov
mov
xor
sbb
inc
xchg
mov
xchg
mov
imul
out
jne
mulb
hlt
inc
loope
std
xor
notl
insb
push
fwait
push
inc
insl
push
fldl
mov
lods
push
and
sti
es
in
xchg
mov
inc
jmp
or
mov
and
add
add
xchg
adc
push
sub
lock
scas
or
push
fnstenv
jle
sub
test
cltd
and
rcr
cwtl
mov
dec
add
xor
shrb
rolb
jno
push
in
mov
push
and
inc
in
cmpsl
mov
es
sub
and
cwtl
fs
das
insl
mov
mov
mov
add
inc
mov
mov
stos
dec
adc
in
push
mov
ret
or
pop
dec
jns
stc
pop
into
inc
add
pextrw
cmp
push
cmp
in
into
push
xchg
xor
dec
cs
gs
mov
mov
xor
outsb
mov
xchg
pop
out
mov
jl,pn
xor
iret
mov
mov
jmp
inc
sysexit
aas
shr
cmpsb
push
aaa
ljmp
aam
cmp
inc
aas
xor
fistl
insl
and
pusha
cmp
xchg
lcall
fldt
pop
pop
js
jb
inc
and
xchg
dec
int3
outsb
test
aam
pushf
gs
dec
jl
xchg
or
add
in
mov
movsb
into
mov
fildll
dec
mov
fistps
fs
mov
insl
leave
in
inc
sub
mov
jnp
adc
pop
jno
or
rorl
adc
sub
cmp
push
nop
pop
dec
xchg
pop
cwtl
test
cmpb
orb
xor
cmpsb
cwtl
push
pop
dec
pop
jg
mov
lds
addr16
cltd
add
or
sub
jo
xor
xchg
into
jbe
mov
das
ret
outsb
add
jg
xor
jns
jo
push
es
mov
test
mov
aas
je
lds
mov
nop
je
scas
dec
lods
pop
pop
out
inc
fisubs
out
mov
mov
jnp
popf
dec
add
xchg
add
cmp
and
imul
lret
js
into
xchg
gs
jp
and
adc
andl
movsl
in
push
sarl
fistpl
fmull
movsl
mov
xchg
in
test
xor
mov
into
test
enter
mov
lock
dec
cwtl
inc
pop
add
out
add
xor
jns
cmc
cmpsb
es
dec
loopne
pop
scas
sub
pop
cmp
mov
lods
movsl
iret
push
mov
xchg
fcmove
cmc
ficoml
sub
pop
cwtl
leave
sbb
shr
push
sbb
dec
int3
cld
fimull
and
fstp
adc
loop
xchg
xchg
jp
xor
mov
add
xor
cmp
pop
dec
sub
shl
and
xchg
ss
addr16
mov
repnz
mov
jp
sahf
inc
lods
jg
inc
fisubs
int
dec
fdivs
lea
rcll
push
notb
rcrl
jp
ret
jmp
ret
repz
popa
andl
push
lods
fsubl
and
mov
cli
repz
scas
les
lcall
add
mov
icebp
mov
je
ficompl
cmpsl
movsb
jns
xor
jmp
mov
rorb
jo
movsl
mov
loop
mov
xlat
nop
push
cmpsb
push
and
xchg
mov
mov
inc
xchg
in
sub
imul
std
inc
fsubrs
sbbl
mov
cmpsb
cmp
inc
inc
rclb
popf
inc
mov
shrb
cli
xor
mov
pushf
xchg
jae
fistps
faddl
stos
fmull
fwait
push
cmp
sbb
cmp
cmp
pop
dec
xor
fidivrl
push
dec
in
cli
mov
repz
pop
and
pop
add
pop
xchg
mov
into
inc
cmpsl
xor
cltd
outsl
call
mov
jne
outsl
aam
sub
push
pop
push
ret
push
xor
push
stos
out
dec
and
das
mov
jmp
push
movsb
jle
jg
mov
mov
imul
roll
lods
stos
jno
test
adc
sub
pop
or
pop
int
rcrl
outsb
fnstenv
sbb
or
out
jnp
out
inc
daa
cmp
sbb
or
iret
stos
sbb
and
mov
ljmp
mov
jmp
cmp
inc
jno
scas
pushf
xlat
sti
sub
fcmovu
test
in
mov
and
inc
das
call
jno
mov
dec
jb
outsl
or
mov
pop
adc
cmpsl
or
fstl
mov
mov
fimull
insl
scas
fdivp
pop
in
fsubs
and
jnp
mov
push
bound
cltd
xchg
icebp
mov
test
jnp
nop
jno
xor
sbb
cmp
inc
cli
aas
fwait
mov
xchg
jmp
adcb
stos
pop
jnp
or
cmp
pop
test
gs
arpl
stos
sbb
aaa
pusha
daa
pushf
notb
test
test
mov
inc
int
cmp
push
xor
scas
mov
dec
mov
cmp
xchg
outsl
sbb
out
or
icebp
and
in
mov
stos
dec
call
mov
xor
insb
cwtl
and
ds
lret
jae
pop
mov
adc
rcll
pop
orl
insb
jnp
sub
jo
dec
out
cwtl
sbb
shr
sbb
dec
test
rorl
jle
pop
ret
pcmpeqb
sub
cmc
or
nop
push
push
cwtl
gs
lods
fwait
xchg
jns
or
and
test
cs
scas
rclb
inc
daa
mov
addr16
xor
mov
inc
enter
dec
rol
or
in
adc
push
out
mov
fcomip
out
aad
arpl
hlt
mov
mov
mov
outsl
test
iret
and
xchg
xor
icebp
adc
sub
fs
cmp
cmp
xor
mov
aad
and
ja
fdivl
mov
fildl
fdivrl
stos
pop
stos
mov
cwtl
test
cltd
je
cld
sbb
fiadds
mov
push
jb
jl
sti
fildll
ljmp
inc
fdivr
sbb
sahf
xchg
and
cmp
rcrl
jg
jecxz
mov
pop
jecxz
stc
push
sbb
and
pop
sub
movsb
lret
cmp
repz
jae
lods
in
sub
mov
push
xchg
and
shll
and
mov
and
xlat
lods
xchg
cmc
jmp
pop
jne
mov
cmp
or
and
push
jne
fwait
jnp
pushf
out
sub
pop
cmp
icebp
aad
mov
pusha
mov
jle
scas
lcall
xchg
iret
dec
sbb
inc
xchg
pop
xchg
push
fs
sbb
dec
out
or
adc
icebp
pusha
cmp
lahf
aad
in
data16
sub
pop
in
shl
xor
push
mov
pop
gs
lret
aas
mov
adc
mov
out
inc
jae
sub
adc
mov
rcrb
pushf
xchg
xor
call
dec
stos
mov
dec
fcoml
cmc
pop
jge
xlat
push
in
cltd
test
mov
dec
mov
fwait
xchg
jecxz
ss
fucomp
jle
mov
lret
rdmsr
out
roll
and
das
push
sbb
mov
xor
add
insb
call
aad
xchg
xor
scas
cmp
test
repz
jnp
in
push
bound
cmp
mov
dec
mov
ljmp
jnp
xchg
inc
aam
mov
pop
out
inc
mov
sbb
sbb
and
loop
lahf
gs
dec
cmp
xchg
push
cmp
mov
pop
dec
in
inc
int
pop
mov
inc
in
lret
and
in
cmp
push
pusha
js
jmp
ret
out
and
andl
xlat
cmp
adc
cmpsb
push
cs
sub
adc
shl
addr16
xor
rorl
cld
dec
lock
int
hlt
insb
and
xor
dec
sbb
dec
cltd
push
lock
fsubrl
push
inc
aaa
mov
lds
push
imulb
gs
lea
adc
repz
cwtl
jl
neg
jmp
iret
push
cwtl
dec
xor
sub
dec
aaa
fwait
pop
sub
xchg
fs
or
pop
cli
pushf
sub
lea
inc
fnstsw
scas
jmp
or
push
cmp
xchg
lods
lds
pop
inc
std
lods
mov
mov
pop
add
mov
repz
sarl
jns
jge
cmp
lret
int3
rclb
jmp
sub
jecxz
lods
mov
fwait
outsb
dec
iret
xchg
or
lcall
mov
mov
pop
inc
inc
movups
push
call
and
mov
lret
ret
in
les
stc
add
pusha
pop
iret
jo
js
enter
add
dec
dec
mov
mov
mov
inc
or
pop
fcmovu
popa
dec
repnz
and
in
shll
imul
les
inc
shrb
jae
pop
adc
aaa
out
mov
scas
aaa
es
pop
andl
aad
or
pop
pushf
cmp
inc
out
inc
fcompl
lahf
mov
daa
cld
push
mov
push
bound
push
lds
jge
scas
lret
sbb
shl
fcomi
sarl
out
dec
inc
pushl
push
cmpsb
inc
mov
ret
sbb
adc
pop
lds
inc
frstor
pop
push
fwait
inc
jge
and
insb
dec
cld
aam
sub
lret
xchg
outsb
fistpl
dec
jecxz
pop
je
cmp
or
xchg
add
unpckhps
subb
loopne
xor
cmc
inc
push
lret
lods
aam
in
cmp
arpl
push
je
mov
pop
jb
xor
inc
divb
xor
test
mov
pusha
imul
imul
out
inc
je
and
insl
mov
ljmp
movsl
daa
sub
mov
insl
xor
std
fists
lahf
lea
jl
adc
jne
sub
sub
adc
jnp,pt
out
js
incl
adc
pop
das
je
sbb
std
jle
and
jae
int
insb
cs
shr
pop
dec
xor
xchg
sbb
pop
push
out
sbb
dec
sub
mov
adc
push
leave
int
xchg
adc
in
std
xor
test
inc
ljmp
mov
xchg
xor
mov
out
movsb
ficoml
dec
cltd
cmp
shl
adc
sbb
adc
xor
imul
mov
sub
jne
into
fidivs
sbb
nop
inc
das
pop
and
stc
repz
out
xorb
xchg
cmp
mov
fisubrl
mov
or
shll
enter
ret
les
push
mov
mov
mov
pusha
push
push
xor
mov
fcoml
inc
jmp
mov
xor
jns
sbb
mull
gs
pop
add
push
bnd
lret
jp
fistpl
xchg
or
loop
jae
arpl
add
dec
in
popf
int
movsb
xchg
outsl
jge
pusha
scas
sub
add
dec
rorl
jnp
sbb
ja
add
in
call
insb
outsl
pop
sbb
pop
jae
add
inc
cs
lods
negl
push
dec
adc
push
scas
adc
test
out
dec
adc
int
iret
out
xor
imul
push
push
scas
loope
push
scas
and
sub
push
call
es
arpl
test
in
das
push
mov
inc
out
mov
push
cmp
pushfw
mov
out
mov
xor
mov
iret
hlt
loop
jmp
xchg
in
andl
addb
aad
inc
movsl
pop
repz
arpl
push
push
cmp
pop
movsl
repz
imul
jbe
lods
cld
filds
lea
push
jmp
lahf
ret
adc
pop
or
xor
adc
stc
mov
test
lods
cwtl
xchg
dec
and
cmp
adc
popa
sbb
xlat
sub
dec
out
xchg
xchg
hlt
loop
fsubrs
shr
mov
mov
dec
fistpl
aas
ss
mov
cltd
aaa
sub
or
mov
stc
sub
xchg
pmulhuw
std
ret
loopne
shl
fistps
lret
adc
cmpl
and
sti
lea
push
mov
stc
imulb
xor
or
outsb
sbb
sub
adc
or
adc
repnz
jbe
subl
test
mov
loope
cmpsb
ss
mov
vmwrite
test
int3
mov
cmpsb
jge
into
inc
push
imul
fldl
rcr
mov
fisubrl
nop
add
adc
cmp
jge
cmp
push
add
cltd
and
aas
fmull
scas
loop
and
push
inc
adc
pushf
adc
sahf
mov
xchg
pop
and
loopne
xor
xchg
mov
lods
push
add
push
sub
pop
xor
push
push
shlb
jo
popf
aam
push
xchg
and
dec
pop
dec
push
sbb
shlb
stos
sbb
cltd
push
rcl
add
fwait
les
pop
cmp
bound
mov
fistl
xor
or
xor
or
ljmp
mov
ss
in
js
es
in
out
inc
enter
ljmp
inc
test
lock
aas
fdivp
jp
xchg
pop
clc
pop
push
add
lret
sbb
jp
pop
jno
iret
dec
and
imul
std
mov
aam
jl
mov
pop
sbb
aaa
inc
sahf
push
or
pop
jl
insl
xchg
cmc
fs
mov
loop
xor
push
adc
cmp
xchg
pop
icebp
jl
bound
pop
xchg
xor
in
jne
fiadds
enter
stos
and
xor
sti
lret
scas
mov
push
xchg
shr
paddsw
mov
movsl
in
fcomps
sti
decb
mov
push
adc
or
and
lds
add
xor
fnsave
or
sub
movsl
dec
sbb
bnd
add
cmp
jns
in
dec
dec
mov
mov
pop
in
push
lea
cmp
leave
pop
add
pop
sti
cmc
cwtl
adc
sbb
adc
push
rcr
push
pop
rcrl
leave
xor
push
sub
sub
xor
loopne
fstl
lahf
divl
pusha
cltd
mov
push
mov
mov
scas
shlb
inc
and
adc
testl
push
pop
dec
push
mov
jnp
mov
mov
xor
xchg
das
xchg
outsb
arpl
fidivrs
xchg
jnp
addb
aaa
fwait
sub
sub
sub
dec
jle
stos
jnp
pop
jmp
inc
test
mov
es
jo
fcmovb
sbb
adc
jmp
cs
into
out
adc
outsb
dec
repz
mov
std
pop
mov
inc
push
adc
frstor
cli
call
fdivl
xchg
fcmovne
dec
mov
sub
cld
ret
push
jl
outsb
jnp
jnp
orl
adc
add
std
shl
inc
or
adc
lahf
int
push
push
and
sub
xchg
dec
iret
push
lods
fs
push
mov
popf
dec
lret
daa
dec
adc
push
test
inc
jp
push
insl
fsubs
jno
push
fsub
scas
xchg
cmp
mov
inc
pop
xchg
orl
negl
sub
arpl
cs
enter
cwtl
push
cmp
test
stos
and
out
cmpsl
dec
test
and
dec
rcr
shrl
xlat
cmpsl
cli
fnstsw
fstpt
dec
imulb
ja
cmc
adc
xchg
pop
jne
shr
fstpl
push
cmpb
sahf
push
inc
sbb
testb
sub
jns
xchg
mov
pop
insb
shr
jnp
imul
mov
jp
andb
jae
out
jl
je
mov
add
cmp
sub
push
jnp
enter
call
psadbw
inc
jp
push
bound
mov
add
stos
rclb
es
add
sub
jle
xor
cli
cmp
lret
and
lds
popf
push
sbb
xor
xlat
ja
push
sub
pop
mov
mov
xchg
xchg
cmc
jle
sub
xchg
jp
push
iret
dec
mov
test
jle
popa
ret
ret
pop
mov
shrb
add
cmpsl
out
xchg
push
mov
adc
ds
dec
pop
sbb
fs
imul
scas
lods
sub
cmp
xor
lods
cmp
and
js
dec
cmp
repz
aad
ja
mov
or
hlt
xor
push
sarb
negl
xchg
fsubr
pop
mov
jo
sub
lcall
out
ja
mov
pop
push
mov
xchg
hlt
cld
fsubl
xchg
sbb
jmp
lods
aaa
dec
add
xor
test
adc
or
enter
sub
pop
outsl
and
jge
mulb
adc
movsb
shrb
dec
push
test
pop
mov
daa
cwtl
dec
mov
into
adc
jno
jne
xchg
mov
adc
adc
ja
mov
xor
add
repz
push
adcb
mov
inc
cwtl
nopl
in
cmp
ja
cld
mov
push
ljmp
inc
mov
cld
fnstenv
sub
mov
fwait
and
xchg
mov
test
inc
mov
jmp
mov
in
out
fcmovu
icebp
dec
loopne
or
mov
xchg
adc
adc
push
inc
xchg
mov
and
in
mov
xchg
into
outsb
out
adc
mov
ljmp
jl
popf
mov
xchg
and
mov
mov
sub
cmp
fsub
mov
iret
mov
pop
pop
int
aam
mov
filds
xchg
xor
mov
lock
stos
inc
jecxz
add
xchg
in
sahf
jp
icebp
xor
test
enter
pop
jp
fisubs
fimuls
and
out
fwait
shll
bound
ss
mov
aam
mov
insb
sbb
xchg
in
mov
push
iret
test
data16
sub
dec
xor
dec
or
mov
mov
sbb
mov
sub
test
inc
or
out
add
faddp
std
add
aam
inc
jae
repz
aam
mov
adc
imul
mov
jbe
lods
add
cltd
mov
lcall
jl
xor
rorl
inc
inc
xlat
jo
xchg
imul
push
or
push
out
dec
cli
push
arpl
xor
xchg
mov
cmp
aaa
add
into
add
js
shl
test
cltd
cld
orl
mov
mov
loopne
in
in
cmp
movsb
sbb
jns
pop
mov
jmp
xchg
test
sbb
mov
aad
stc
mov
cmp
pop
xchg
push
cmp
xor
xchg
mov
xchg
cmpsl
les
push
nop
stos
add
fnstenv
lds
mov
push
or
fwait
and
sub
and
add
popa
loope
adc
aad
xor
fwait
dec
mov
lret
lock
aam
mov
push
cmp
insl
ffreep
notb
fs
ljmp
out
sub
into
mov
rclb
in
or
pushf
lret
push
std
lahf
lods
or
push
or
inc
jb
cmp
ljmp
loopne
dec
lcall
frstor
fwait
icebp
stos
leave
fwait
popf
xchg
or
insb
mov
jae
ljmp
rcr
aas
or
cmpsl
shll
cld
sub
and
mov
stos
and
ja
mov
mov
adc
loope
scas
ret
adc
nop
std
sbb
and
js
push
fwait
mov
xchg
ret
cmc
fnstsw
sti
andb
cs
xchg
loope
cmp
and
or
push
xor
mov
and
lahf
or
xor
hlt
jne
dec
cwtl
sahf
out
mov
mov
or
movsl
mov
in
sub
out
or
xor
les
push
out
sub
pop
push
mov
add
sti
fldenv
pusha
sar
enter
mov
dec
les
sbb
aaa
cmp
das
push
int
pop
or
movsb
dec
mov
icebp
cmp
jg
sbb
inc
scas
out
inc
sti
fcompl
pop
ljmp
out
mov
stc
inc
jg
sub
sahf
or
push
mov
add
add
push
add
push
mov
push
fwait
xchg
adc
popf
lock
and
cmp
fsubrp
push
xchg
insb
js
scas
mov
loop
loopne
mov
clc
adc
les
pop
jmp
mov
inc
push
dec
mov
xor
mov
jnp
cmc
stos
jns
adcl
dec
cmp
push
lock
xchg
xchg
cmpsl
or
ficompl
negl
cld
inc
fucom
mov
ffree
pushf
inc
jne
or
mov
sub
push
hlt
push
cmp
pop
lds
int3
pop
mov
xchg
enter
fwait
in
fmuls
inc
jae
dec
inc
cmp
xlat
dec
dec
pop
enter
aad
jmp
fwait
add
std
mov
add
je
daa
or
and
in
outsb
pop
push
sbb
sbb
mov
rcrb
les
add
jge
sbb
icebp
mov
dec
jge
popfw
push
nop
fs
shll
imul
stc
sbb
aad
scas
movsl
pop
mov
pusha
and
xor
cli
jne
out
loop
mov
xchg
sti
daa
shl
int3
xchg
xchg
idivl
lret
xchg
push
jne
pop
dec
fldl
xor
xlat
imul
shlb
add
dec
popf
into
or
daa
hlt
sahf
xchg
cli
rcl
je
mov
and
pop
pop
dec
push
cmp
rolb
pop
add
shrb
xchg
add
xor
and
push
pop
mov
push
jp
xchg
sub
xor
mov
inc
ret
cmpsl
jge
pushf
sbb
push
xchg
popf
mov
mov
mov
movsb
push
inc
in
int3
jno
mov
jne
nop
sub
jg
enter
lcall
xchg
rcrb
ja
mov
or
fisubl
dec
inc
out
xchg
dec
insl
lahf
xchg
adc
sub
arpl
loope
es
xchg
xchg
leave
add
push
inc
xor
fdivrs
lret
jns
movsb
sbb
xor
loop
jcxz
ljmp
mov
and
lods
xor
into
testl
clc
daa
jp
cmp
xchg
xor
add
pop
lods
adc
dec
sbb
andb
rcl
lds
mov
mov
sub
insl
add
hlt
ret
sub
push
cmc
cmc
scas
or
jmp
jo
lret
mov
adc
test
or
mov
mov
dec
fwait
mov
loope
xchg
shll
pop
or
mov
inc
fstpl
imul
dec
stc
jo
cmp
xorb
cld
fsubrs
fs
inc
lods
add
addr16
push
push
popf
xchg
sbbb
inc
xchg
mov
jae
dec
pop
imul
lods
mov
ficomps
popa
dec
pop
add
aad
sahf
fidivs
mov
aam
insb
cmp
arpl
hlt
fwait
xchg
xlat
popf
out
jnp
sub
fisttps
pop
or
ror
mov
fs
outsb
adc
stc
shl
push
dec
inc
scas
sub
gs
pop
push
fwait
mov
test
fstl
sti
mov
cmpsb
xchg
pop
fldenv
sub
sbb
pop
std
xlat
sbb
mov
repnz
sub
cmp
mov
mov
jl
rolb
add
mov
lret
xlat
add
add
or
xchg
dec
xor
jae
inc
sub
hlt
fisubrs
add
xchg
push
jne
std
push
xor
out
aaa
int3
iret
dec
das
xlat
push
repnz
ret
out
push
movq
push
lea
fs
jae
and
mov
test
loope
pusha
jge
fldenv
mov
rcrl
ds
movsb
fiadds
outsl
add
cmp
pop
out
or
ret
negl
jle
test
pop
cmpsb
insb
loop
cli
test
scas
movsb
stc
std
repz
and
pop
push
dec
pop
fistps
and
fadds
or
stos
sub
out
jle
pushf
loopne
arpl
inc
inc
pop
mov
push
jb
cwtl
sub
icebp
and
inc
mov
cli
push
stos
mov
jnp
jo
cmpb
lret
scas
mov
aad
pop
inc
pop
mov
leave
rclb
ficomps
clc
pusha
cmp
pushf
cs
xor
es
fisttpl
inc
xchg
rcr
leave
jmp
loope
mov
dec
push
shlb
scas
mov
cmp
xor
dec
xchg
es
dec
test
mov
insl
stc
dec
and
or
pop
iret
mov
fistps
repz
pop
les
xor
js
ljmp
xchg
mov
push
xchg
loop
loope
pop
xchg
rcll
pop
inc
jns
lds
lret
mov
icebp
out
push
jns
push
pop
inc
add
leave
and
fwait
xchg
xchg
sub
fwait
lret
dec
leave
mov
push
cli
rep
out
pop
movntps
mov
lods
pop
sti
pop
jmp
loopne
add
scas
frstor
cmp
lret
loope
push
mov
jle
dec
lret
popf
sub
lcall
enter
xchg
mov
pop
outsl
mov
lcall
fcompl
rep
cmove
adc
mov
loopne
addr16
mov
xor
loope
xchg
mov
cmp
sbb
mov
inc
test
dec
sub
mov
sbb
cmp
fisubl
push
add
inc
xchg
pop
shlb
mov
jnp
adc
jns
mov
mov
arpl
push
inc
lret
mov
mov
push
fwait
push
dec
mov
and
clc
mov
in
shr
jmp
repnz
jbe
push
jmp
addb
jae
test
and
mov
test
sub
pop
fucomi
adc
mov
psubusw
cmp
mov
loop
dec
dec
lods
sbb
enter
jge
dec
cld
aaa
dec
adc
aaa
inc
pop
mov
jg
sbb
cmp
mov
imul
lret
addr16
lods
pop
jnp
sub
mov
jecxz
or
cltd
pop
or
js
mov
data16
or
fmuls
inc
sbb
xor
push
hlt
fdivl
loope
ret
insl
aad
jne
push
mov
xchg
xorl
mov
nop
pop
push
or
pop
sbb
xchg
xor
dec
imul
jp
mov
mov
sub
fsubl
pop
jo
mov
push
mov
mov
add
pop
xor
ret
jo
adc
cli
out
int
ret
test
movsw
jb,pt
add
daa
add
fisttps
std
add
xor
inc
aas
inc
jo
icebp
sub
ret
adc
mov
lea
mov
orb
adc
sbb
iret
xor
test
cmp
in
jmp
mov
mov
bnd
ret
push
leave
push
jg
mov
sub
sub
roll
cli
adc
sbb
call
out
jo
add
outsb
xchg
pop
movsb
xchg
jl
xor
lods
mov
push
es
push
jae
in
inc
dec
push
jno
mov
fcomps
sbb
jnp
inc
pop
sti
in
jmp
xchg
jg
lret
int
ljmp
orb
xor
in
add
and
call
xchg
loope
in
outsb
cmp
adc
dec
fs
cld
test
repnz
daa
js
enter
ja
loopne
mov
sbb
bound
das
insl
sub
adc
ss
lods
ds
dec
fstps
cmp
arpl
mov
push
mov
insl
leave
fldt
out
cmpsb
fdivrl
stos
fldcw
popa
adc
xchg
xor
lods
adc
mov
sub
punpcklbw
jo
or
inc
mov
fdivrl
xchg
addr16
inc
push
clc
aam
cmpsb
pop
cmp
mov
loope
aad
pusha
sti
out
jae
daa
loop
dec
jge
icebp
ljmp
icebp
sbb
rorb
xchg
push
int
stc
or
ficompl
rcll
adc
ret
push
shrl
ss
sbb
movsb
mov
movsl
lret
dec
in
mov
push
and
jo
dec
mov
loopne
mov
jp
mov
inc
lcall
dec
hlt
add
dec
xchg
js
xor
rorl
iret
int3
aaa
mov
and
or
adc
inc
jbe
or
mov
cmp
cmp
ss
iret
scas
jecxz
push
adc
fwait
mov
mov
movsb
scas
mul
clc
dec
sub
xor
fld
ljmp
jae
out
into
xchg
cmc
fwait
mov
aam
add
mov
loopne
pop
in
xor
and
test
xchg
pop
mov
outsl
cmp
hlt
int3
loopne
mov
pop
gs
fists
enter
xchg
std
shr
xchg
shlb
jmp
and
sbb
or
fsubrl
xor
mov
nop
ret
adc
mov
mov
jnp
push
pusha
in
cld
cmp
cmpsb
jb
push
gs
sub
aad
iret
leave
cmp
mov
adc
negb
inc
test
mov
les
ret
mov
sahf
lods
dec
fldenv
cs
cld
jne
dec
cld
rol
data16
into
jae
push
jge
and
cmp
sti
test
jg
sbb
dec
mov
inc
mov
out
enter
mov
stc
pop
and
inc
lcall
popa
rcr
scas
push
sbb
mov
push
lcall
sbb
and
out
inc
push
in
inc
mov
repz
and
dec
push
sub
push
leave
outsl
bswap
mov
push
pop
arpl
and
inc
add
xchg
sahf
in
roll
mov
xchg
outsb
dec
les
sbb
inc
loope
push
xchg
mov
icebp
je
pop
adc
loope
cmp
or
stos
imul
push
lods
int
pop
ljmp
aas
or
cmpsb
mov
add
shll
leave
inc
fimull
push
fwait
stos
je
fstpt
or
das
bswap
cmc
inc
cmp
std
mov
ja
fs
pusha
std
or
data16
inc
add
aaa
jmp
lret
push
mov
cmp
cmp
testb
div
fldl
popf
push
mov
movsl
pop
inc
push
or
fmuls
sub
jecxz
xchg
and
loop
iret
jge
pushf
es
push
cwtl
outsb
enter
pop
inc
inc
aas
cld
inc
movsl
out
test
sub
cmp
mov
aam
or
push
and
mov
push
mov
cmp
and
jecxz
xor
addb
jnp
or
pop
pop
ficomps
jmp
ja
mov
lahf
mov
imul
ss
fucomi
imul
loope
iret
aaa
in
aad
cmp
enter
gs
std
movl
pop
xlat
insl
lahf
loopne
popa
xlat
ja
icebp
mov
pusha
lods
sub
int
jb
dec
sarl
jno
fwait
mov
mov
imul
movsb
fstps
sbb
cld
lds
and
sti
aaa
shll
outsb
sbb
aaa
dec
or
jns
jg
in
call
movb
pop
mov
flds
sbb
mov
arpl
popf
sub
xorl
loop
aas
pop
add
pop
push
jmp
adc
fcomi
mov
pusha
push
jg
aaa
push
andb
ds
cmpsl
leave
pusha
es
adc
cmc
sbbl
mov
outsl
jae
pusha
arpl
and
in
ds
jg
mov
aaa
mov
push
jg
push
cmp
jge
pop
xchg
and
jl
sarb
jl
arpl
daa
mov
and
inc
insl
sti
mov
sbb
shrl
push
mov
mov
sbb
mov
pop
inc
cmp
scas
jo
push
and
enter
cmovno
popa
mov
es
stos
pop
inc
pop
xchg
call
mov
ljmp
dec
jge
lods
rcrl
xor
rcrb
sbb
test
outsl
daa
push
into
mov
xchg
out
je
and
icebp
scas
in
push
icebp
cmp
pop
outsb
or
cmp
fwait
add
outsl
push
sub
adc
pop
pop
inc
lea
sbb
adc
push
add
pop
decb
push
fdivrl
sbb
hlt
mov
in
jns
inc
sub
mov
xchg
js
dec
push
jbe
sub
lret
cmp
push
cmc
add
es
push
adc
mov
or
jno
in
xor
mul
add
arpl
xor
lret
jl
sbb
add
clc
clc
mov
cmp
dec
out
cmp
push
roll
or
iret
mov
pushf
fldt
hlt
jo
push
pop
and
push
push
pop
lret
pop
mov
jne
lret
ds
jle
mov
lret
dec
ja
and
or
dec
cmpsb
xchg
mov
mov
cltd
das
cli
stos
sbb
pop
sub
outsb
inc
mov
adc
jl
jne
lods
or
push
lcall
cmp
jmp
mov
aaa
push
aaa
insb
dec
daa
cs
lds
movsl
lret
mov
inc
xchg
daa
inc
flds
movsb
mov
jg
popa
push
pop
dec
or
sbb
dec
in
push
push
out
dec
xchg
mov
addb
xchg
call
add
mov
call
adc
jp
sbb
pop
in
das
insl
cmp
or
lock
or
fisubl
jb
aas
dec
jle
enter
mov
xchg
fisubl
sub
sub
icebp
sbb
xor
inc
mov
pop
and
inc
push
aam
jg
lock
icebp
js
xor
cmp
lret
push
and
mov
sub
popf
in
dec
sti
outsl
std
sarb
rclb
stos
mov
xchg
cwtl
mov
or
push
jno
aam
lcall
lds
mov
or
pop
decb
xchg
cwtl
loopnew
mov
xchg
pop
jns
test
stc
fstps
jecxz
jb
in
pop
mov
jne
cmp
testb
fiaddl
int3
orl
imulb
lcall
inc
jecxz
cwtl
and
sarl
sbb
mov
rcll
addb
push
lahf
or
pop
dec
pop
xor
and
es
pop
push
mov
pop
rol
cltd
lods
inc
jnp
adc
mov
std
sub
out
pop
cli
mov
push
aad
call
xchg
insb
inc
jae
xchg
lods
adc
inc
aam
leave
push
sub
cmp
push
movsl
les
mov
jmp
cmp
push
into
push
and
xchg
je
mov
jp
adc
ret
repnz
in
sub
sub
and
cmp
int
call
sbb
inc
jnp
sbb
mov
cmpsl
out
push
lret
sbb
fimuls
xchg
cwtl
pop
mov
mov
add
lret
mov
dec
cmp
xor
rcrl
push
jne
pop
push
nop
ds
mov
clc
orl
cmp
jl
dec
cmc
aas
jge
xor
mov
push
or
pop
sub
jg
aaa
xchg
sbb
mov
cmpsb
adc
cmpsb
in
xor
dec
in
xchg
mov
xchg
shll
mov
dec
mov
call
xchg
test
hlt
es
xchg
mov
negb
std
mov
dec
mov
scas
fsubrl
iret
aam
scas
outsb
dec
les
leave
xor
arpl
adc
inc
shrl
shrl
sbb
out
or
dec
cmc
xchg
bound
sbb
mov
jnp
les
insb
jle
cltd
mov
mov
cwtl
mov
testb
fsubs
adc
or
ljmp
and
cmp
or
push
jg
push
int
icebp
iret
add
out
lock
dec
push
adc
xchg
and
lods
sti
jmp
test
and
fwait
mov
fwait
mov
and
gs
xchg
jle
mov
mov
scas
jmp
mov
mov
sbb
jb
popa
je
das
xchg
inc
and
je
inc
roll
lret
iret
adc
out
mov
cmp
clc
nop
jecxz
sub
cmp
loop
movsl
cld
dec
sub
addr16
and
fidivrs
test
push
mov
sbb
enter
lods
lea
adc
repnz
js
or
jno
leave
mov
pop
ljmp
stc
add
xchg
jmp
loop
and
dec
jecxz
pop
into
xchg
imul
cmpsb
in
imul
repz
mov
loopne
add
ficompl
gs
outsl
shld
idiv
jbe
cmpsl
dec
cmp
and
mov
cmp
jae
fnstsw
mov
orb
push
adc
xchg
rorb
fs
cmp
icebp
jmp
idivl
test
adc
das
ss
pop
call
rorl
imul
in
xchg
orl
cmp
lahf
popa
push
nop
dec
pop
popa
scas
adc
dec
mov
pop
jns
adc
push
add
movlps
sbb
aaa
mov
cwtl
int
pop
jns
repz
bound
cmp
jmp
and
dec
push
mov
sub
in
cmc
fimull
mov
rcll
pop
xchg
xchg
cmp
fistl
mov
cltd
add
jmp
mov
fwait
add
push
adc
lea
jmp
sub
fidivrl
mov
data16
mov
lcall
aas
push
dec
jb
mov
jnp
pop
lock
aam
ret
lcall
and
mov
mov
fsubrl
or
aad
pop
in
das
push
fwait
xor
subl
fwait
sti
dec
xor
in
repnz
jp
aad
movsb
push
and
hlt
in
int
dec
push
in
hlt
nop
js
add
push
mov
gs
leave
loopne
adc
mov
jne
pop
and
push
movsb
cs
jbe
mov
pop
movsl
mov
lret
cmpsb
fwait
dec
cwtl
xor
mov
lods
xor
mov
add
mov
mov
inc
jmp
push
push
sbb
mov
xchg
push
add
mov
pop
cmp
pop
jge
mov
mov
cmp
pop
cmp
mov
sub
mov
inc
mov
jmp
scas
test
add
sub
dec
sbb
jmp
arpl
out
xchg
scas
psubw
add
sbb
aam
cmp
xlat
cmpsb
push
adc
fimull
mov
popa
loope
xor
mov
jnp
imul
stos
pusha
sbb
jle
sub
xchg
sti
sahf
js
dec
dec
mov
hlt
push
stos
in
aaa
cmp
mov
in
lods
mov
jl
in
mov
lods
push
cmc
daa
mov
repz
aam
stos
and
es
insb
or
lcall
out
jo
inc
dec
scas
jecxz
inc
fwait
insb
fidivl
push
dec
ret
push
pop
je
shr
or
out
lret
add
shrb
jecxz
adc
icebp
rcll
pop
shll
cld
dec
rcrl
mov
dec
sub
jge
pop
pusha
in
adc
jecxz
hlt
popf
aam
shrl
push
lret
cli
jmp
push
cmp
sub
mov
push
pusha
mov
add
jecxz
mov
xchg
lret
cmpsl
idiv
inc
mov
clc
and
push
and
gs
ficomps
fs
inc
jmp
inc
pop
xor
dec
rclb
cmp
pop
xor
test
out
dec
movsb
pop
loope
push
int3
add
mov
les
ret
out
out
loope
popa
rorl
jns
popf
push
lds
aaa
cmp
insb
sub
mov
fdivs
pusha
xchg
aas
xor
xchg
xor
dec
push
out
cmp
xchg
fwait
lcall
into
add
fstpl
mov
push
scas
cs
mov
les
jecxz
lcall
mov
fxch
push
sarl
clc
in
popa
pop
jl
push
jecxz
sar
arpl
xor
pop
mov
dec
cmpsl
mov
test
test
xor
sbb
sti
mov
cmc
out
sbb
push
sbb
repz
jo
int
mov
mov
mov
mov
dec
push
stos
mov
push
pop
daa
inc
sub
lea
cmp
mov
in
push
iret
inc
sbb
add
stos
cmp
xchg
xor
testb
inc
xchg
aam
shll
dec
sti
icebp
cmpsl
or
leave
mov
int3
sbb
xlat
sbb
xchg
add
cmp
push
jo
mov
xor
sub
mov
sub
es
clc
das
rclb
aas
adc
mov
test
cmp
xchg
adc
sbb
faddl
or
xor
cli
mov
sbb
push
add
cmp
ss
add
adc
int3
jnp
push
hlt
jge
mov
aad
out
jbe
and
lock
mov
push
sub
sbb
fldl
jno
fdiv
push
test
loope
into
jle
dec
stc
enter
out
iret
cltd
bnd
mov
fisttpll
inc
test
mov
push
test
and
sub
sti
data16
xchg
aam
test
cmpsb
push
mov
popf
stos
mov
cs
out
ds
sarl
fs
cmc
test
add
or
dec
stc
sahf
adc
subl
xor
adc
nop
jno
sub
cmp
stos
pop
inc
outsl
and
in
insb
mov
cltd
lods
pop
clc
dec
lret
in
fimull
fisubl
pop
ja
cmpsb
cmc
mov
mov
das
adc
xlat
loop
push
fstpl
inc
inc
stos
sub
jo
sub
dec
test
pop
or
pop
ds
xor
cmc
add
repnz
or
mov
gs
fsubl
incl
mov
lahf
or
pop
ret
jmp
jecxz
fisttpll
mov
inc
cltd
int3
mov
dec
push
test
lds
lds
daa
fisubs
xchg
ret
mov
dec
cli
movl
add
rcll
xchg
shrl
int3
ljmp
push
test
jnp
adc
mov
in
pop
repz
int3
xchg
cmpsl
fldt
pop
fldcw
mov
xchg
out
xchg
ficomps
mov
cmpsb
push
inc
sbb
jmp
lock
add
aad
push
jo
mov
fdivrl
sbb
cmpsl
sub
dec
imul
xor
jae
mov
mov
sbb
scas
xchg
int3
jmp
add
dec
testl
in
repz
adc
fimuls
insb
fisubl
push
fldt
pop
add
movsl
out
into
jae
notb
fsub
ret
mov
shlb
scas
mov
fiadds
mov
pop
pusha
jp
mov
ljmp
insl
xchg
dec
cwtl
or
mov
fwait
inc
ljmp
push
sbb
pop
das
imull
and
mov
ret
adc
leave
fld
inc
ret
dec
mov
xchg
fadds
mov
out
int
pop
stos
mov
cmp
mov
or
mov
push
jbe
cmp
pop
add
sub
imul
js
jno
pop
and
aam
push
dec
sub
mov
insl
mov
shl
or
cmpl
notb
and
lock
cmp
cmp
repz
push
out
dec
inc
fucomp
and
jmp
pop
pusha
stc
dec
iret
lret
push
loop
or
mov
push
lret
enter
or
push
popf
dec
push
add
sahf
push
outsl
sub
test
out
fidivl
enter
dec
out
xchg
push
jmp
lret
xchg
cmpsb
mov
mov
insl
push
mov
add
inc
xchg
xor
insl
aam
imul
stos
cltd
jnp
cwtl
stos
or
daa
gs
sbb
loop
add
add
adc
jns
mov
push
and
pop
pop
dec
hlt
fsubs
idivb
xchg
mov
rcrw
shlb
sbb
outsb
in
ret
mov
repnz
jnp
icebp
dec
or
pusha
mov
cmp
js
sbb
leave
adc
addr16
bound
and
add
jne
and
pop
andl
fimuls
push
lea
push
add
cli
mov
fstpl
scas
fmul
cmc
fists
out
adc
xor
dec
inc
das
fwait
testb
pop
imul
mov
sbb
mov
xchg
dec
cld
or
cmp
or
insl
and
fisttpll
mov
jae
inc
adc
in
test
mov
fsubrs
scas
sub
xor
cmp
adc
mov
inc
push
les
icebp
loope
ds
inc
fcoml
lcall
arpl
or
mov
gs
rcrb
in
je
das
das
push
xchg
add
mov
xchg
mov
fcomip
cmpsl
push
or
ja
int3
add
sub
mov
icebp
jg
push
sub
decl
jno
pop
movsb
pminub
ja
es
inc
jnp
repnz
das
adc
and
xor
add
int3
clc
outsb
test
dec
fcmovnu
pop
repz
adc
out
movsl
int
push
sub
cmp
push
fisttpl
mov
mov
lret
imul
sbb
rcrl
scas
mov
cmp
mov
dec
ror
aam
pushf
mov
xor
addr16
adc
hlt
neg
test
int3
sbb
movsl
in
dec
mov
ficompl
and
imul
jl
and
xor
adc
pop
inc
push
jmp
inc
in
test
mov
movsl
or
or
stos
jmp
xlat
push
pop
mov
xchg
xchg
mov
and
mov
push
or
pushf
fsubl
loop
mov
and
pop
sub
mulb
cmp
cld
jg
movsl
leave
fisttpl
sbb
add
sub
iret
insb
add
or
fsts
test
aas
out
dec
mov
lock
xor
jns
das
dec
mov
sub
jmp
icebp
call
sbb
mov
mov
dec
inc
fs
testl
pop
sti
and
lret
mov
and
popf
mov
or
mov
cmp
push
test
popf
jo
xchg
call
adc
mov
xchg
adc
pop
ljmp
rclb
dec
add
in
push
jg
mov
aad
lods
dec
fsts
adc
sub
sbb
test
lret
pop
int3
or
mov
icebp
jge
mov
loop
jae
mov
xor
ret
ljmp
push
es
mov
pushf
popa
pop
ljmp
and
test
insl
inc
mov
xlat
push
loopne
dec
enter
push
add
adc
testb
or
ror
mov
in
mov
int3
in
test
leave
out
inc
cmpsl
lods
pop
jnp
sub
cltd
dec
xor
fisttpl
dec
pop
scas
jb
jno
test
mov
shlb
repz
movsb
mov
outsl
and
adc
or
mov
cmpsl
mov
sub
jle
xor
sbb
lock
mov
ds
fnstsw
xor
in
in
push
cwtl
movsl
dec
pop
scas
enter
xchg
stos
push
xchg
fmuls
cmp
jns
testl
adc
jge
dec
test
movsb
push
shr
lcall
jecxz
sbb
and
fsts
cmp
pop
inc
clc
or
mov
icebp
xchg
dec
mov
and
sbb
sti
ljmp
dec
cmp
pop
mov
xchg
xor
jl
leave
and
popa
jbe
pop
mov
push
jmp
inc
pop
or
sbb
mov
jns
fs
dec
sub
pushw
pushf
cmp
insb
mov
insl
jl
pop
xor
stc
jp
lret
pop
mov
out
in
cltd
je
dec
push
sbb
xchg
sbb
shrl
xlat
push
mov
jle
xchg
xor
mov
loope
pop
xlat
jns
shrb
xor
fs
mov
pop
stos
dec
or
mov
mov
dec
sub
sub
mov
and
mov
inc
mov
dec
pop
cmpsl
mov
pop
test
outsb
int3
adc
mov
sti
les
xor
orps
test
fistpl
iret
nop
and
pop
rolb
cmpsb
in
mov
cmp
fldl
xchg
or
leave
pushf
testl
iret
cmp
test
lret
call
mov
lahf
lahf
mov
jmp
xorl
jp
dec
sub
lahf
leave
sub
ret
xor
dec
jg
mov
mov
scas
inc
xchg
inc
sub
adc
push
in
in
mov
nop
cltd
outsl
aad
inc
inc
xor
ret
fs
adc
xchg
loop
aad
shr
mov
scas
out
ror
push
int
subb
std
ret
lcall
lock
mov
enter
enter
dec
xcrypt-ofb
cmpsl
outsb
call
xchg
mov
cmc
pop
xlat
testb
sbb
int3
popa
mov
xchg
mov
fcmovnbe
adc
imul
sbb
addl
xchg
push
lcall
fcomip
mov
rcl
out
sti
xchg
jge
cmp
scas
push
mov
dec
pop
jp
ret
out
and
std
xchg
jno
inc
sub
lods
pop
pop
fistpll
repnz
lret
dec
push
ljmp
loopne
gs
push
push
bound
mov
pop
mov
pop
add
enter
inc
clc
mov
cwtl
xlat
push
test
mov
ror
dec
xchg
adc
mov
stc
sub
sbb
adc
lret
in
sbb
cmpsb
xor
ja
lret
sbb
add
add
in
out
dec
mov
out
scas
sub
fs
js
adc
adc
test
mov
stos
loopne
lods
or
and
stc
out
adc
jbe
scas
mov
inc
mov
mov
jp
push
ss
sbb
orl
adc
jg
mov
jns
mov
fsincos
dec
call
xor
fildll
imulb
sarl
je
xorb
cmp
pop
dec
and
mov
sub
out
loop
push
dec
leave
das
stos
in
test
or
arpl
jne
icebp
or
fdivrp
push
lahf
test
bound
and
nop
inc
test
pop
adc
js
out
daa
fidivrl
dec
pop
sub
roll
add
or
xchg
pop
pop
les
ret
mov
mulb
imull
xchg
adc
hlt
fistl
xchg
sbb
add
add
popa
xlat
int3
add
sti
mov
jge
rorb
lds
mov
filds
scas
jl
pop
cmpsl
or
daa
lods
adc
test
lret
jnp
lcall
cltd
pop
movsl
sarl
test
repz
xchg
stos
sub
push
sub
pop
and
jb
in
inc
push
mov
mov
xchg
inc
aaa
test
arpl
gs
or
mov
icebp
aas
dec
lahf
insl
pop
daa
movsb
leave
into
sbb
cwtl
sarl
int3
dec
mov
andl
dec
mov
mov
ja
lds
xorl
adc
pop
outsb
mov
das
lock
outsl
xchg
jno
loop
push
mov
shr
xlat
notb
movsl
lahf
jo
nop
ljmp
neg
test
add
xorb
pop
dec
pop
enter
sti
xchg
lods
jns
or
jmp
gs
lods
dec
shlb
mov
inc
shlb
sahf
lret
jl
leave
xchg
jg
shr
test
fdiv
jne
cmc
xor
inc
sbb
iret
repz
daa
pop
in
sbb
sub
push
cmpb
mov
adcb
ret
pop
jnp
adc
aad
cmp
pop
add
fwait
jbe
in
mov
lock
push
stos
cld
adc
out
lret
movsl
pop
sahf
testb
cs
fisubrl
mov
inc
sub
loop
mov
sbb
mov
sbb
dec
mov
adc
aas
xchg
sub
shlb
cltd
test
xchg
mov
adc
mov
je
loop
imul
sub
jecxz
mov
stos
xchg
cmp
jne
inc
jg
or
es
cmpsb
inc
hlt
insb
lahf
adcb
xchg
cwtl
cli
leave
or
ret
movsb
jns
mov
aad
cmpsb
insb
cmp
mov
sub
mov
outsl
sub
add
push
xor
mov
and
push
mov
outsl
loopne
mov
test
inc
push
push
pop
xchg
int
cmp
push
jg
popa
pusha
push
sbb
shlb
add
mov
mov
jl
aam
stos
xchg
jp
pop
cli
sbb
push
xor
mov
in
xchg
scas
push
jl
xrelease
xchg
push
or
xchg
or
mov
leave
aas
cli
jno
jl
cmp
fwait
stos
adc
xor
cmp
enter
fcmovb
push
mov
add
jns
fwait
dec
addr16
icebp
test
jecxz
mov
jp
jecxz
sub
add
xor
bound
jo
add
fidivl
stc
stc
ret
out
sub
loop
mov
sub
cmp
dec
lock
or
orb
add
or
fs
aam
inc
cmp
ljmp
repz
adc
scas
or
pop
dec
out
dec
dec
es
mov
adc
daa
arpl
mov
or
lahf
mov
fsubp
inc
cmc
stos
xor
xchg
inc
jge
iret
add
fwait
pop
cmpsl
pop
mov
xchg
mov
dec
and
stc
mov
test
or
icebp
inc
push
loopne
add
jae
orl
xchg
pusha
repnz
lods
andb
sbb
lds
mov
adc
or
cli
mov
and
inc
stos
sbb
pop
adc
xor
nop
dec
and
mov
imul
adc
mov
cli
mov
xor
sub
jg
adc
addr16
adc
in
fsubrs
insb
fmul
orb
mov
fsts
decl
push
into
bound
movsl
inc
or
adc
xor
popf
mov
iret
mov
or
sbb
jge
repz
lock
adc
mov
adc
call
and
mov
and
fiadds
mov
and
push
sub
mov
insl
cmpsl
popf
je
pop
icebp
or
ffree
jae
add
jle
mov
out
sub
and
mov
imul
out
cs
mov
popa
pusha
cmc
jp
pop
addb
ret
mov
xchg
mov
loopne
mov
jb
dec
pusha
mov
or
pop
iret
add
lods
dec
sbb
push
movsb
cmp
pop
push
call
dec
sub
data16
mov
orl
movsl
mov
repz
in
push
push
sbb
adc
cmc
pop
lret
sbb
loop
out
int
pop
iret
shrb
cmc
sbb
sbb
mov
adc
dec
ret
andb
mov
xchg
inc
push
xchg
pop
inc
mov
lea
jno
mov
mov
dec
in
std
into
or
pop
int
arpl
sub
xchg
inc
mov
mov
stos
xchg
mov
xorb
pop
push
loop
call
mov
xlat
test
sbb
pop
pop
xlat
pop
and
in
sarl
int3
inc
jne
push
aam
out
dec
xchg
mov
movsb
push
roll
aaa
mov
lea
mov
mov
pushf
les
fisubrl
and
pop
mov
mov
fidivl
add
fadd
je
or
pop
mov
adc
lods
addl
pop
xor
int3
arpl
in
xor
mov
pop
add
jge
out
ljmp
add
dec
sub
jbe
xchg
imul
ret
dec
test
js
dec
xor
mov
pop
mov
nop
daa
out
adc
aaa
mov
sub
arpl
mov
test
jge
test
push
push
xchg
sub
aam
hlt
loop
js
rclb
daa
or
pop
mov
jecxz
cmpsb
clc
jo
js
outsb
and
push
cmp
daa
mov
jg
inc
scas
inc
jbe
mov
aad
inc
outsl
inc
push
mov
das
push
cmpsb
xchg
xor
cmp
mul
ret
mov
sub
in
push
gs
mul
pop
jp
pop
pop
outsl
outsb
lret
pop
xchg
into
inc
jl
inc
dec
lock
popf
insl
xchg
imul
lock
std
mov
mov
xor
xchg
xor
cltd
cmp
push
mov
push
das
pop
adc
pop
mov
pusha
out
outsl
push
adc
dec
xlat
add
push
and
jge
orb
rcr
jp
mov
dec
in
mov
sub
or
jno
shll
outsl
pop
rclb
push
adc
scas
mov
imul
pop
cmp
sahf
jne
xor
pushf
mov
cli
icebp
push
aas
popa
cmp
push
lock
and
data16
dec
subl
mov
ljmp
lods
xchg
push
sar
inc
adc
xchg
test
pop
add
nop
inc
adc
int3
lcall
mov
cwtl
push
pop
cli
push
je
pushf
fwait
scas
iret
xchg
lcall
notl
jmp
mov
mov
jo
ficomps
stos
push
sbb
cld
xor
pop
jmp
adc
xor
adc
or
data16
xchg
sbb
popa
dec
nop
lock
adc
out
scas
insl
dec
jnp
or
fdivp
enter
jo
shlb
scas
int
leave
aaa
sbb
mov
sbb
hlt
push
movsb
mov
xchg
inc
sub
mov
mov
inc
or
adc
fisttps
adc
negb
js
pushf
mov
mov
add
pop
pop
fiaddl
movsb
push
call
movsb
lods
cmp
xlat
mov
leave
push
push
pop
mov
cmpsb
out
clc
pop
ds
rcr
shlb
test
pop
or
mov
sub
call
mov
cmpsl
xbegin
mov
sub
jae
push
cmp
cmp
mov
int3
xor
inc
rorb
mov
les
in
dec
mov
mov
movsb
outsl
daa
sti
lahf
sbb
mov
sbb
in
outsl
sub
cmp
jle
pop
pop
arpl
ffree
sbb
hlt
ret
and
adc
dec
das
out
pop
cmc
cmp
es
and
push
xor
lahf
pop
sub
mov
xchg
std
sbb
add
and
rorl
sub
lods
jmp
pushf
pop
pop
sub
lds
jb
lret
popf
sbb
lods
sbb
cmp
ret
xor
test
rclb
lds
mov
into
scas
loop
cwtl
sbbl
pop
jmp
es
jne
fistpll
fadds
cmp
mov
and
bound
movsl
test
outsl
cmp
and
mov
jb
cmp
stos
add
lods
add
pop
mov
ja
inc
mov
sti
cmc
sti
sub
push
pop
jbe
push
stos
xor
scas
mov
addr16
enter
das
dec
inc
jg
enter
imul
xchg
repz
cmc
mov
xchg
test
sub
test
xchg
jl
sub
popa
pop
push
shll
and
out
das
cmp
movsb
mov
sbb
xchg
adc
jmp
dec
es
mov
inc
jmp
pop
cs
ja
iret
ret
and
inc
aaa
adc
mov
adc
xchg
xor
xor
stc
out
push
and
push
fbstp
stc
dec
mov
xchg
or
push
pop
mov
pop
stos
bound
pop
inc
lret
inc
mov
xchg
bound
xor
inc
mov
xor
xchg
les
lds
movsl
cli
push
cmp
popf
dec
popa
scas
xchg
imul
movsb
lods
jmp
mov
xchg
pop
cld
jne
cmp
mov
jecxz
jecxz
scas
or
sub
test
mov
jge
hlt
dec
fistpll
pushf
mov
pushf
or
cmp
sbb
stc
cmpl
cmpsl
push
sti
das
stos
lcall
repnz
pop
pop
mov
lock
sarb
xchg
cmp
jae
shlb
lcall
aaa
call
inc
ret
fdivrl
sub
mov
mov
out
pop
je
out
sbb
pop
cwtl
dec
movsb
mov
adc
int
xor
nop
pop
lret
rorl
push
push
sbb
pop
sbb
pop
add
xchg
mov
lods
stos
fwait
jae
jbe
push
imul
jmp
adc
push
arpl
lock
stc
in
imul
data16
out
cmp
imul
sarb
or
jns
push
jno
pop
mov
jnp
outsb
sub
aaa
mov
scas
popa
lahf
lock
mov
add
jg
add
adc
loope
push
popf
inc
push
mov
inc
iretw
cld
or
mov
dec
imulb
lds
fsubrp
push
test
push
jmp
imul
and
aad
js
std
sub
or
lcall
lahf
pop
pop
jmp
loopne
pop
jo
in
jle
mov
add
xor
sub
xlat
outsl
outsl
xor
mov
cmp
jno
xor
or
into
dec
lds
enter
mov
in
jnp
lea
les
mov
ret
and
fld
outsl
pop
shrl
push
sahf
mov
outsl
fadds
inc
inc
push
cwtl
mov
ds
jmp
sti
and
jmp
xchg
cld
daa
out
rcll
clc
pop
sub
mov
dec
rorb
xor
imul
xchg
inc
sbb
cmc
dec
lahf
sbb
xor
mov
ret
sarb
push
mov
lock
aaa
add
sti
test
add
mov
jl
fidivl
sub
or
js
int
dec
daa
jbe
sbb
pop
and
scas
mov
mov
cmpsl
loopne
and
xor
aaa
les
je
xchg
xchg
ss
daa
dec
out
inc
cmc
jno
push
sbb
test
cmp
or
rcll
repnz
gs
popf
push
or
inc
call
jp
mov
lahf
and
xchg
adc
add
lahf
popf
in
stc
shlb
repz
adc
adc
aas
ror
scas
int
lock
cmp
pop
pop
cmc
mov
lcall
je
outsl
bswap
iret
pusha
push
jnp
jnp
jne
jae
sbb
dec
je
add
push
imul
pop
pop
mov
cwtl
mov
sbb
nop
stos
subb
imul
aam
cmp
aas
adc
sbb
stos
ss
and
outsb
dec
cmp
push
add
sub
xchg
lahf
mov
fwait
jecxz
movsl
jne
jno
cmp
xchg
repnz
pop
ss
movsl
xor
mov
mov
cltd
jecxz
sti
mov
mov
iret
push
sarl
lds
add
sub
sub
test
stos
movsl
rorb
push
movsb
lret
lcall
push
sbb
aaa
data16
or
mov
cmp
loopne
jo
ds
or
stos
sbb
push
dec
fistpl
jbe
test
jbe
call
inc
jne
push
sbb
inc
lahf
fists
jecxz
cmpsb
jg
and
aas
adc
pop
sub
pop
cmp
orb
call
jmp
dec
inc
mov
cmpb
jp
mov
mov
cmp
sbbb
dec
daa
mov
clc
jno
pop
mov
repnz
dec
push
lret
cmpsb
pop
mov
inc
mov
xchg
hlt
adc
push
mov
pusha
enter
push
fiaddl
xor
mov
scas
push
std
mov
push
pop
out
xorb
aad
out
lret
mov
into
xchg
les
je
mov
dec
mov
push
orl
jns
iret
shlb
call
mov
xor
dec
arpl
shl
xchg
inc
ss
popf
pop
inc
call
sub
mov
repz
div
cwtl
jle
push
lea
or
in
je
lods
or
push
sbb
cld
xor
adc
fidivs
dec
and
out
xor
maskmovq
imull
lods
mov
xchg
in
or
fyl2xp1
fstpt
lds
ret
enter
pop
aam
js
cmpsl
add
sbb
lret
fisubs
jmp
cmp
sub
scas
int
sub
adc
sbb
cmp
mov
dec
aam
or
stos
shlb
mov
inc
inc
fs
dec
into
sub
incb
pop
ret
aas
xchg
out
shll
leave
leave
pusha
inc
adc
mov
popf
jge
nop
or
and
mov
lahf
cwtl
in
inc
sub
sub
out
mov
inc
jno
mov
cmp
or
sbb
stos
clc
mov
push
push
add
jno
daa
and
and
xchg
cmpsl
sub
xor
in
scas
mov
rcrl
dec
jnp
cmp
add
adc
dec
mov
jb
ss
orl
add
pop
dec
popl
stos
jmp
jl
aad
xchg
mov
push
mov
and
lods
mov
or
push
mov
sub
pushf
pop
addr16
lcall
adc
xor
sbb
outsb
mov
arpl
cmpsl
jns
nop
dec
stos
test
movsb
loop
sarb
aad
dec
mov
dec
rcrl
arpl
inc
xchg
and
arpl
jno
popa
or
fsts
decb
int
insl
fadds
xor
mov
lcall
les
adc
sbb
fs
movsl
xchg
mov
icebp
out
in
es
cmpsb
sbb
mov
mov
stos
pop
xor
mov
xchg
inc
pop
sub
test
lds
jae
xor
in
lcall
adc
sbb
inc
mov
xor
loopne
mov
mov
popf
rcl
rdmsr
stc
adc
aad
pop
fcomi
xchg
test
pop
shll
in
xor
jge
gs
fsts
pushf
loop
stos
popa
push
dec
out
mov
movsl
mov
vpmullw
jp
mov
out
stos
insb
cmp
rcl
xchg
inc
cmp
aas
loope
leave
inc
stc
sub
sbb
addr16
inc
mov
lret
mov
in
cmp
dec
and
adc
mov
dec
gs
cwtl
sub
movsl
lods
or
clc
test
xor
inc
data16
adc
ficoms
sbb
and
aas
mov
aas
imul
xor
into
mov
jo
push
push
push
or
mov
mov
stos
pusha
jae
mov
hlt
sub
cmp
and
lods
imul
dec
xchg
add
clc
popa
loop
cmp
cmp
or
or
dec
ja
dec
scas
out
xor
ja
mov
mov
xchg
movsl
inc
dec
je
test
mov
lcall
into
jmp
cmp
or
test
add
inc
mov
xchg
jno
clc
lea
adc
scas
xchg
out
sbb
mul
test
lcall
fcmovnb
and
cmpsl
scas
mov
dec
mov
shr
mov
push
cmp
pop
shll
mov
clc
aad
push
sub
sbb
push
adc
adc
nop
pop
xchg
dec
lods
jae
mov
testb
or
adc
fwait
dec
or
push
sarb
mov
test
icebp
aad
xchg
push
dec
mov
or
icebp
movsb
jno
lods
lods
jle
pop
cmp
mov
mov
and
mov
insl
mov
add
mov
js
jecxz
repnz
dec
or
jmp
sti
lds
fidivrl
in
pop
pop
in
cltd
in
stos
xchg
jb
shrb
adc
add
mov
pop
xchg
push
push
xor
bound
ja
xor
popf
sub
dec
mov
fistpl
lcall
imul
fwait
dec
mov
idivb
scas
movsl
popa
arpl
mov
lcall
or
pusha
lret
fnstcw
loop
ret
stos
out
out
aad
aas
jb
idivl
push
mov
mov
inc
push
hlt
repnz
lea
mov
mov
and
sbb
sbb
pop
pop
stos
mov
out
jb
inc
xor
jmp
add
mov
xor
lret
push
out
inc
iret
push
and
std
bound
push
xchg
das
mov
mov
inc
shrb
or
pinsrw
jecxz
xchg
ret
stos
adc
inc
jb
call
pusha
cwtl
out
jecxz
adc
inc
decb
dec
cmp
repnz
fmull
decb
inc
test
cmp
mov
int
xchg
mov
in
dec
sub
pop
mov
movsl
xchg
test
outsl
cmp
adcl
movsl
push
sbb
xorb
mov
pop
lods
or
mov
mov
mov
fdivl
dec
test
leave
insb
push
and
cmp
jne
test
fisubs
xlat
mov
xchg
stos
pop
in
movq
sub
inc
je
andl
pop
inc
add
outsl
or
xchg
popa
mov
mov
aad
mov
int
mov
dec
xchg
mov
rolb
pop
pusha
repnz
mov
jno
jp
adcl
insl
or
daa
sarl
shll
xchg
add
mov
in
jp
xchg
int
or
add
bound
jg
adc
repz
and
add
or
pushf
jmp
mov
add
in
stos
inc
push
mov
xchg
xchg
scas
test
jns
pop
gs
lods
sbb
xchg
xlat
or
sub
fadds
mov
push
cmp
mov
and
inc
fbld
imul
xor
mov
adc
lret
dec
and
movb
out
movsl
out
push
adc
jb
jp
fists
mov
jno
dec
mov
aam
push
jl
out
jmp
mov
inc
outsb
dec
rep
sbb
push
stos
jo
push
repnz
loope
cs
gs
add
or
jmp
or
cmp
pushl
test
xchg
jmp
adc
test
adc
mov
pop
push
aad
dec
mov
xor
xchg
lods
or
xchg
mov
lea
lea
int
and
in
dec
loopne
inc
int
popf
add
cmp
lock
test
cmp
push
loope
fcmove
shlb
add
jne
dec
cmp
mov
adc
jb
jle
xor
pop
jns
xor
inc
add
dec
movsb
push
pop
gs
loopne
xor
add
mov
inc
std
mov
dec
es
jge
pop
iret
js
mov
push
cs
dec
inc
adc
and
xchg
roll
in
fsubl
jg
out
push
and
gs
mov
jmp
scas
ss
adc
sub
mov
pop
out
sahf
dec
pop
dec
fisttps
out
sti
leave
fidivl
les
push
bound
dec
push
shlb
aaa
fs
push
inc
jo
call
repnz
pop
dec
movsb
jecxz
mov
cmp
call
jp
sub
dec
add
xor
lret
lds
dec
xor
cltd
inc
or
mov
pop
ficompl
mov
lods
in
xchg
notl
jo
dec
dec
pop
out
loop
ss
jb
push
dec
pop
les
push
sarl
stos
daa
in
mov
xchg
mov
cwtl
pop
jbe
mov
push
xchg
and
bound
sahf
bound
mov
movsl
je
sahf
aad
lcall
push
sbb
jne
test
clc
test
or
inc
rclb
outsb
into
scas
jae
addr16
xchg
push
mov
push
cmp
sti
add
sbb
pop
mov
cmp
shlb
push
mov
fldl
aas
fisttps
jecxz
inc
dec
push
jecxz
xlat
jns
adc
add
push
sub
leave
imul
mov
jp
vandps
es
mov
loope
fldpi
dec
sub
hlt
cmp
and
iret
decb
pop
push
std
out
pop
xchg
inc
xlat
ret
dec
mov
xchg
add
ja
filds
sub
jle
or
aaa
mov
decb
jo
shrb
cs
popf
out
sbb
ja
in
shrl
cwtl
lds
jecxz
cli
orl
sarl
shl
push
jecxz
or
mov
mov
add
jne
pop
inc
aas
dec
jae
sub
mov
rol
jl
jbe
pop
xor
scas
in
addr16
insb
movsl
insb
cmpsl
popf
scas
je
inc
shl
mov
pop
imul
xorl
fistps
dec
jns
negl
mov
insl
or
dec
outsl
mov
jnp
or
popa
scas
ljmp
insb
mov
in
dec
lcall
mov
cmpsb
pushf
sub
cmp
scas
and
nop
push
xor
or
sbb
pop
arpl
aas
loop
bound
mov
scas
jnp
in
jg
roll
das
clc
jo
aaa
test
sub
add
adc
mov
dec
mov
iret
xchg
inc
lret
adc
mov
xor
jnp
loop
lds
jp
sbb
mov
dec
insl
push
add
lret
dec
rsqrtps
jl
mov
rcll
cmpsb
pop
cmp
sub
iret
es
xchg
inc
scas
cld
daa
sahf
dec
xor
aad
xor
xchg
imul
xchg
dec
sarl
cmpsl
mov
dec
cmc
js
dec
adc
sti
inc
test
mov
push
xor
pop
sub
rcll
out
inc
out
mov
lds
lcall
or
lahf
and
mov
sub
sub
test
mov
mov
add
xchg
pop
fadds
fwait
inc
mov
aaa
sub
sub
mov
aad
mov
stos
dec
hlt
shrl
fstl
push
es
xchg
mov
push
jp
nop
inc
aad
lcall
cmp
dec
push
lcall
pop
pop
addr16
mov
or
es
insl
cs
shll
sub
sub
test
scas
aam
dec
push
test
push
xor
icebp
cli
das
xor
lds
xchg
mov
sbb
cmp
pop
push
dec
fnsave
or
push
lods
leave
or
faddl
outsl
imul
fs
fistpl
pop
jne
lahf
cmova
cmovp
cs
or
cmp
ljmp
rclb
push
insb
movsl
nop
or
in
add
cmp
popa
mov
pop
inc
adc
cmp
dec
adc
lock
xchg
xchg
mov
data16
adc
mov
push
inc
xchg
pop
ds
xchg
sbb
or
mov
clc
sub
in
fcoml
pushf
aad
imul
jbe
test
inc
out
sub
leave
rcr
xchg
enter
pop
xor
mov
mov
jmp
aad
or
push
mov
loopne
mov
ja
jle
dec
sbb
fwait
inc
pushf
ss
pop
aas
pop
cmp
arpl
loope
adc
mov
mov
add
neg
das
jp
jno
stos
jb
test
repz
ja
adc
insl
cs
fisubrl
sub
imul
or
cwtl
hlt
inc
adc
hlt
les
test
mov
dec
add
mov
cmp
cmp
xchg
and
xchg
mov
xchg
push
imulb
and
pop
hlt
dec
and
jmp
imull
out
push
xor
shll
xchg
or
pop
stos
mov
cmp
dec
ret
cmp
dec
mov
leave
mov
mov
sbb
xchg
and
into
push
push
rcll
in
call
mov
sbb
lret
stc
mov
sub
push
or
pop
das
push
enter
xor
fisttpl
fisttpll
dec
loop
mov
imul
int
pushf
sbb
scas
aas
insl
mov
sub
xor
arpl
mov
pop
out
cltd
fimull
xchg
mov
leave
or
jno
cmp
xor
jle
pop
cmpsb
mov
jbe
gs
adc
int3
nop
push
ja
andb
adc
test
mov
jl
cmp
sbb
fcomps
lock
es
ficoms
sub
cld
fmuls
lock
das
lock
out
or
dec
aad
lret
inc
flds
pop
sbb
fcoml
dec
mov
xchg
in
inc
imul
and
aad
mov
dec
je
xchg
outsl
addr16
cmp
enter
aam
stc
rol
push
into
aaa
add
shr
rclb
dec
loopne
mov
jge
xor
adc
daa
test
cmp
aas
jl
xchg
push
inc
pushf
call
testl
cmp
mov
add
fwait
mov
nop
dec
pop
inc
inc
outsb
call
cli
mov
xchg
mov
dec
xlat
call
arpl
mov
mov
dec
ljmp
dec
mov
in
imul
mov
inc
call
fisubrl
pop
jg
mov
pusha
repnz
insb
mov
popf
rolb
jecxz
push
inc
dec
cmp
out
shrb
hlt
movsb
push
mov
out
shll
jp
cmc
mov
xchg
jae
jmp
sbb
clc
gs
sbb
push
out
imul
hlt
adc
dec
push
jns
jecxz
fsubl
adc
ljmp
movsb
imul
mov
sbb
mov
je
inc
push
mov
lea
add
fdiv
sub
sub
sarb
pop
in
pusha
das
push
cs
das
xor
or
sub
jecxz
mov
shlb
cmc
add
xchg
pushf
cmp
mov
mov
dec
cmp
jnp
or
or
dec
call
mov
movsb
jno,pn
sbbb
imul
add
sub
fstpl
inc
jns
add
cmpsl
fstpl
xchg
out
pop
incb
xchg
lds
sub
fidivl
lret
mov
repz
ret
dec
roll
adc
test
cltd
push
insl
pusha
inc
jno
xchg
pop
sub
out
inc
add
pop
mov
pop
mov
jo
fucom
enter
inc
xor
leave
insl
ffreep
xchg
sbb
outsb
jge
inc
lds
insl
addr16
xchg
mov
ret
jne
cmpsl
fcoms
test
lds
hlt
addr16
aas
add
adcb
jmp
mov
faddl
jecxz
push
lret
popa
cmc
outsb
inc
fistpll
out
bound
xchg
test
cmc
test
sbb
xchg
jns
sbb
jp
sti
jp
test
and
nop
dec
arpl
popf
imulb
icebp
jbe
xor
insl
mov
cld
sarb
leave
sbb
loopne
push
rcll
pop
xor
imul
aas
bound
faddl
sbb
out
les
test
mov
mov
mov
xchg
pop
dec
dec
jo
dec
and
and
mov
sbb
stos
pop
daa
test
fsubs
fstp
pop
mov
aas
mov
add
shl
or
repnz
pop
dec
jb
imul
add
repz
stos
fcompl
stos
or
mov
aad
mov
sti
sbb
es
insb
adc
out
mov
jge
nop
sbb
mov
fnstenv
adc
loop
push
sahf
rcrl
sub
push
mov
xor
imul
leave
xor
ja
or
lcall
hlt
cli
gs
mov
jecxz
xorb
sbb
sbbl
loope
add
inc
test
jb
lds
sbb
or
cmp
inc
pusha
adc
and
inc
add
jo
addl
addr16
test
xchg
fmul
stos
mov
mov
and
push
popf
hlt
jae
test
push
push
mov
push
sar
in
dec
out
and
xchg
xorb
cwtl
jmp
push
jmp
not
es
lds
or
ja
pushf
mov
mov
xor
dec
xor
push
mov
mov
xchg
loopne
xor
and
mov
mov
cmp
adcb
movsl
aad
jo
adc
lds
mov
mov
xchg
mov
inc
add
jge
or
loope
xor
mov
into
cmp
outsb
test
pop
addr16
daa
mov
pop
mov
popl
mov
insl
into
xchg
jp
xor
jmp
pop
inc
push
lret
out
cli
and
mov
popa
jmp
imul
adc
and
mov
cmc
push
fcmovnbe
mov
sbb
into
and
mov
aas
mov
cld
jmp
insl
movsl
mov
aad
or
idivl
outsl
mov
stos
jno
out
adc
movsb
jle
or
or
inc
sub
pop
xchg
test
nop
lds
cmp
xor
mov
xchg
adc
cmp
dec
lods
in
ja
or
pushf
sbb
xlat
divb
pop
pop
jmp
bound
sbb
sbb
cmpsl
or
inc
gs
mov
movsl
repz
sub
jne
add
mov
cwtl
daa
xchg
out
repnz
mov
pop
lds
push
adc
lods
xor
pop
jge
arpl
bnd
cmc
js
ja
loop
xor
pushf
js
loop
shll
mov
ret
jmp
sub
pop
jmp
xchg
cmpsl
sub
xor
imul
dec
ljmp
dec
outsb
mov
movsl
push
add
outsb
addr16
mov
rclb
sar
jg
idivb
mov
loope
pop
jge
sbb
js
fxch
stc
fiadds
repnz
add
adc
daa
js
cltd
cwtl
popf
mov
ljmp
mov
xor
jb
push
sar
jle
mov
loope
or
adc
hlt
lret
sahf
xchg
mov
imulb
pop
add
jl
mov
in
stos
mov
and
ret
test
push
xchg
dec
mov
adc
inc
outsl
rclb
rorl
add
sar
mov
inc
clc
sbb
jbe
sarl
inc
sub
insl
mov
jg
jl
mov
out
mov
xchg
mov
jnp
clc
stc
mov
pop
test
pusha
adc
clc
xchg
cs
rclb
fidivs
inc
jle
mov
roll
mov
lock
adc
or
mov
adc
lea
outsb
rorb
push
jnp
les
and
pop
sbbb
cltd
mov
lea
pop
cmp
jp
mov
sbb
push
add
inc
sub
mov
decb
scas
sahf
in
mov
pop
ja
mov
push
out
fisubs
jnp
mov
in
sbb
test
and
and
push
adc
add
sub
add
call
dec
in
ds
fadds
aam
mov
push
dec
lahf
ljmp
stos
cwtl
adc
fnstcw
aam
imul
inc
pop
cmp
outsl
outsb
test
das
sahf
dec
fmuls
std
xchg
movsl
movsb
sahf
frstor
imulb
add
aad
sub
pop
add
addr16
sub
push
ds
dec
xchg
std
pop
inc
jg
jbe
add
push
ss
and
cld
rcl
mov
jmp
jl
cmc
mov
pop
xor
in
std
jl
les
jge
sahf
sbb
add
fnsave
xchg
lods
add
test
sbb
int3
movaps
cs
loopne
int
das
push
mov
push
sarl
sti
das
fwait
adc
test
xchg
and
or
sub
xor
mov
push
stos
loope
mov
aam
call
stos
std
mov
repnz
mov
jmp
xor
xchg
les
mov
pop
push
dec
inc
int3
xlat
push
mov
inc
adc
fxtract
push
popa
xor
and
fistpl
ret
sub
sub
push
daa
pushf
xchg
mov
add
fistl
xor
pusha
sbb
sbb
test
cld
push
mov
adcl
cmp
xorb
lock
mov
jnp
rcll
adc
cmp
pop
aam
adc
sub
ficoml
sbb
dec
es
cmpsl
stos
jmp
adc
sub
pop
jmp
sti
and
test
imul
jl
aaa
rorl
stos
xor
int3
fidivs
or
add
decb
stos
cmp
mov
ss
jecxz
inc
dec
mov
idivl
push
iret
cmp
lods
pop
bnd
mov
mov
push
and
push
in
mov
enter
adc
rol
add
pop
dec
in
xchg
repz
jge
pusha
sarb
dec
fldcw
mov
sahf
mov
pop
sub
sub
jne
cmp
inc
rcrl
es
sbb
push
mov
int3
sub
mov
xchg
pop
ljmp
jo
or
inc
outsb
sub
in
fnstsw
cs
sbb
pop
inc
inc
xor
or
movb
loope
jae
rcrb
arpl
ret
shlb
outsl
sti
mov
testl
insb
push
lds
fbstp
in
in
mov
mov
cmp
jns
ficomps
push
cmp
scas
test
mov
push
mov
fwait
mov
subl
cmp
ficoms
inc
cmpsb
mov
out
push
sbb
out
push
xchg
adc
in
jne
and
push
mov
sbbl
hlt
lcall
or
push
sub
js
popa
adc
mov
add
jmp
add
push
rolb
xor
test
cld
dec
and
cs
mov
xchg
jmp
test
sub
sub
out
cmpsl
jecxz
or
mov
adcb
out
cmp
adc
mov
pop
lds
jns
jbe
imul
and
xor
sbb
popf
push
out
pop
mov
and
and
in
mov
rcll
das
out
sub
sub
inc
les
xor
int
or
fistpll
mov
xchg
leave
jle
cmpsb
pop
ja
push
dec
dec
add
scas
adc
sbb
or
std
and
insl
icebp
iret
jns
int3
sbb
fwait
push
sub
or
ja
lods
inc
fisubrs
js
or
mov
pop
mov
je
rcrl
divl
daa
out
dec
jp
cmpsb
iret
jp
sub
and
or
loopne
leave
stos
add
divb
adc
leave
outsl
cli
sbb
ljmp
and
mov
xor
cmp
pop
push
xor
inc
js
and
std
push
mov
adc
add
test
inc
test
xchg
push
add
adc
ds
dec
dec
mov
jecxz
test
mov
or
jp
xor
xchg
mov
gs
add
test
push
mov
or
notl
mov
mov
jl
push
push
lods
push
into
int3
jmp
fidivs
mov
inc
adc
mov
das
in
or
jge
push
fcmovnb
divb
adc
movsb
lea
jns
dec
or
push
jb
scas
mov
iret
lcall
xor
pop
das
sub
inc
sahf
cmp
int
stos
mov
jp
mov
call
ja
sub
inc
mov
and
fcomps
xor
jp
cltd
mov
inc
sub
fsubrp
adc
dec
int3
data16
xchg
sub
popa
push
jb
mov
subb
fbld
cmp
sbb
push
int3
push
pushl
push
das
sub
sbb
scas
outsl
jg
jmp
push
pop
xor
lahf
fninit
mov
mov
pop
lcall
popa
in
push
divl
xchg
push
xchg
dec
adc
dec
or
mov
mov
leave
insb
inc
movsl
mov
push
pop
lds
in
aas
mov
ficomps
mov
rorb
imull
cmp
xor
inc
adc
mov
push
movsl
add
inc
call
bound
jge
loop
mov
and
sub
into
out
push
jns
cmp
daa
jl
popf
cmp
je
int3
fdivrl
xor
sub
jae
or
sub
cmp
fistps
dec
dec
data16
loopne
push
pop
jnp
pop
or
inc
insl
adc
fimuls
shl
loop
ror
jno
push
pop
adc
imul
mov
mov
je
icebp
adcl
lahf
push
testl
and
push
xchg
mov
rep
dec
fidivs
out
pop
nop
inc
adc
adc
jbe
stos
cmp
mov
sbb
and
test
xlat
fmull
dec
jno
add
push
push
xor
jne
insl
sahf
cmp
out
enter
jns
jg
mov
mov
repz
andb
dec
daa
repz
push
and
shll
incb
rcrl
lds
pop
dec
xchg
mov
or
mov
cmp
add
les
add
pop
ret
cmp
push
dec
push
pop
sbb
call
dec
insb
and
stos
stos
push
adc
xchg
push
test
sub
jmp
ss
adcb
lret
sbb
rcl
sbb
sub
mov
fsubl
fwait
mov
shrl
pop
push
jae
sub
pusha
data16
cmp
movsb
daa
lods
xor
lock
ljmp
js
cmp
rcll
std
nop
mov
int
in
cmpsl
mov
xor
negl
sub
push
int3
xchg
mov
negb
add
push
popf
sub
sahf
in
pop
fldl
sbb
push
mov
add
sahf
xchg
mov
mov
ret
push
push
lret
in
lret
adc
jge
dec
cmp
cmp
and
gs
push
icebp
add
push
cmp
jno
scas
jb
outsl
pop
cs
outsb
jne
sbb
into
scas
out
and
fnstsw
jae
xchg
push
lods
lret
fs
xor
incb
push
mov
inc
loop
test
sbb
mov
pop
push
xchg
sarl
xchg
mov
adc
mov
inc
nop
out
mov
push
jmp
xchg
mov
sub
fdiv
pop
push
inc
aam
mov
and
js
test
push
imul
in
jg
sbbb
add
fildl
or
inc
addr16
adcb
outsl
in
or
pusha
or
lds
cmovae
imul
push
push
popf
sbb
out
fdivl
mov
xchg
jmp
mov
add
add
mov
jns
pop
xor
sbb
xor
fsubrl
jo
fs
cs
cmp
loop
jp
cmpsl
cmpsb
xchg
fsubs
cmp
outsb
gs
not
push
out
inc
cwtl
adc
cmp
xchg
push
xor
nop
jge
or
mov
test
test
and
mov
enter
int3
pop
stos
js
jecxz
cmpsb
clc
pop
inc
pop
push
jmp
je
in
int
add
dec
mov
add
nop
adc
lret
adc
mov
movsl
jne
push
lods
mov
rcll
push
and
aad
push
test
push
inc
daa
mov
hlt
mov
xchg
lock
jno
xchg
jnp
mov
adc
ret
adc
sbb
testl
rdmsr
insw
loop
movsb
inc
das
pop
pop
fisubs
push
mov
psubb
mov
stos
shr
cmpl
xchg
mov
test
mov
dec
inc
in
clc
movl
mov
jo
add
insb
mov
cmp
xor
mov
mov
jbe
out
sti
mov
pop
aad
mov
mov
sbb
ret
les
test
ret
popa
xor
es
je
lock
test
jp
pop
stos
dec
pushf
mov
outsb
mov
fidivrl
xchg
out
lds
push
sahf
xor
push
test
test
enter
lods
sbb
fdivrs
call
imul
push
addb
ss
add
sub
mov
xchg
push
bound
adc
lcall
inc
xor
pop
clc
addr16
xchg
lcall
fnsave
mov
in
pop
jmp
cld
xchg
pop
push
dec
aad
inc
cwtl
dec
dec
sbb
xchg
push
mov
mov
aad
adc
popf
jnp
pushw
aaa
sbbb
dec
sub
and
xlat
xor
adc
imulb
sbb
cmp
mov
scas
popa
cmp
mov
incl
pop
repnz
dec
jp
pop
enter
icebp
add
stos
addl
stos
and
aas
sbb
adc
int3
mov
lcall
sarb
cmp
imul
mull
mov
sti
jbe
mov
xchg
stos
sti
enter
clc
data16
and
sarb
adc
xor
xor
cmpl
mov
jmp
rcll
cmpsl
in
sub
stos
sub
clc
adc
clc
dec
addl
loop
pop
dec
xor
sub
adc
fs
aaa
inc
setns
inc
xlat
cltd
into
push
xor
inc
mov
or
fsubrl
insb
scas
sbb
dec
xchg
adc
sub
outsb
mov
sub
dec
in
sub
gs
cltd
jge
hlt
add
lcall
mov
stos
ja
sub
das
xchg
pop
mov
jecxz
repz
int3
sti
add
mov
test
xchg
adc
push
leave
xchg
js
shrb
mov
jge
rcll
mov
jb
xlat
test
add
mov
pop
jbe
out
jno
xchg
inc
shll
mov
dec
jge
add
stos
sub
mov
and
jno
add
out
inc
adc
outsb
mov
jmp
loope
repnz
sub
mov
pop
in
insb
fnstenv
lds
jbe
adc
cmp
mov
and
push
cld
cmp
push
pop
loop
adc
fnsetpm(287
out
jl
imul
ret
mov
pop
pop
test
jl
into
loop
jge
outsl
push
mov
hlt
fcompl
les
addr16
adc
stos
or
std
xor
jl
cmp
jmp
lods
loopne
push
test
scas
mov
add
adc
dec
in
bound
jb
es
test
shr
mov
lds
inc
leave
ds
in
inc
mov
inc
in
les
lods
int3
popa
push
mov
jo
jo
loope
out
aam
mov
xor
lret
add
jne
mov
adc
or
fbstp
sub
addr16
stc
lods
xchg
and
cmp
pop
mov
mov
ror
mov
and
mov
lahf
mov
js
out
test
fnstsw
imul
mov
fstps
pop
out
push
push
add
shlb
push
add
ljmp
inc
lock
jns
loopne
pusha
pop
mov
and
leave
add
inc
rolb
inc
mov
or
cli
add
cmc
lds
movsb
in
mov
jb
jmp
add
mov
movsb
push
dec
rcrb
xchg
inc
pop
and
or
ret
mov
arpl
sti
xorb
movsl
lods
dec
aam
rorl
ljmp
js
push
clc
bnd
fistpll
add
fsub
sbb
imul
adc
shlb
mov
mov
aad
cmpsl
outsb
pop
je
dec
jp
push
jmp
or
push
orb
pop
mov
aas
cmp
loopne
out
lcall
mov
push
call
inc
lcall
shr
js
negl
std
mov
outsb
push
shll
pop
xor
movsb
in
jecxz
mov
std
sub
cmp
jo
popa
leave
push
xchg
mov
dec
lcall
test
in
sahf
scas
aas
sbb
js
xor
inc
sub
cmp
pop
cmp
dec
js
or
or
jne
bound
mov
xchg
push
test
mull
subb
lods
mov
pop
ret
or
add
cmc
jb
mov
push
pop
addl
scas
jmp
shlb
subl
out
sbb
dec
sahf
loopne
lock
jle
mov
stos
push
fldt
cmp
dec
xchg
fcoml
sbb
or
cmp
mov
sbb
pop
shl
rorl
lods
in
int3
in
and
jl
clts
in
cld
or
repnz
xchg
shlb
lcall
push
gs
adc
cmp
loop
xor
je
pop
pop
in
mov
adc
je
inc
dec
inc
add
adc
in
push
fistpl
push
pop
cmpps
sub
dec
fisttpll
xchg
push
inc
inc
repz
inc
fisttpl
push
jle
push
mov
leave
inc
xchg
stos
sti
into
pop
out
mov
dec
or
sub
adc
mov
fwait
std
pop
pop
cmp
das
add
pop
inc
pop
dec
xor
sbb
cmp
xchg
std
and
push
shrb
mov
xor
cmc
push
mov
xor
mov
inc
je
mov
shr
xorb
mov
adc
cmpsb
cmp
mov
cmp
testb
sbb
scas
cmp
or
fadds
push
push
mov
adc
sub
dec
pop
lcall
push
xchg
ret
add
cmp
sub
leave
fcoms
cli
push
test
aas
jbe
xorl
ljmp
add
imul
xor
mov
sub
push
mov
sbb
lret
adc
mov
push
jb
cmc
push
bound
pop
ret
push
jl
ss
fstl
mov
push
in
fs
xchg
test
inc
sbbb
xor
ret
mov
dec
add
push
andb
pop
push
arpl
xchg
or
lcall
outsl
sub
pop
jne
in
pusha
xchg
cmc
les
cmp
addb
mov
xor
pop
arpl
and
jne
add
cld
mov
mov
repz
out
lret
inc
add
fwait
je
lods
inc
sbb
pop
push
stc
xchg
mov
fwait
stos
or
add
and
mov
mov
mov
jl
jne
nop
sbbl
push
dec
jge
outsl
aad
das
das
mov
add
aam
scas
call
push
pusha
and
sub
push
jmp
add
xor
dec
mov
xor
push
out
cld
jne
lahf
gs
or
jae
sub
imul
fnstcw
pop
inc
or
fldcw
jge
daa
and
imul
sbb
mov
inc
test
std
nopl
push
sbb
inc
int
push
fwait
js
setno
xor
sub
shr
popa
sti
and
aas
mov
imul
call
cltd
enter
jle
inc
je
rcrb
lcall
nop
jns
movsl
dec
add
imul
fcmovb
dec
mov
pop
sub
jo
out
xor
and
and
into
jp
je
cli
dec
jecxz
shll
cmp
les
mov
jnp
rclb
and
test
nop
aad
xchg
xchg
movsb
sub
mov
and
std
cltd
orl
mov
and
or
push
dec
mov
push
add
repz
lea
test
sub
mov
pop
xchg
sti
in
dec
cmp
xor
xor
ss
lds
lods
mov
mov
mov
fwait
push
or
dec
lods
adc
ret
xchg
xchg
sub
mov
mov
lock
pop
inc
in
push
cmp
rolb
lds
adc
push
add
leave
mov
pop
pop
inc
addr16
fstpt
js
xchg
mov
jmp
xchg
bound
add
je
loope
push
jp
jp
or
xor
adc
imul
sti
push
dec
mov
cld
loopne
popf
lea
dec
inc
repz
mov
push
mov
dec
jecxz
jmp
cmpsl
das
in
fxam
pop
loope
sbb
int3
inc
push
shlb
xor
inc
push
xchg
fsubp
mov
mov
or
cli
jae
mov
and
popa
inc
fildll
hlt
mov
shrl
and
mov
push
xor
sub
mov
jnp
jno
jo
insl
push
repnz
loopne
mov
push
lea
mov
xor
lret
adc
jae
loop
inc
lea
mov
push
push
leave
pop
mov
lea
in
push
inc
fldcw
mov
adc
rcrl
adc
loope
add
nop
das
movsb
popf
jmp
xchg
jb
mov
stos
or
xor
rcll
mov
xor
insl
fisubl
jl
mov
sub
xchg
imul
mov
or
cld
sub
mov
adc
xchg
mov
aas
out
clc
aad
or
push
jp
xorb
adc
dec
pushf
jecxz
rorl
jecxz
xchg
fsts
add
sbb
mov
jmp
insb
loop
or
dec
mov
or
dec
xor
cld
pusha
mov
pusha
jmp
jno
push
dec
mov
fwait
cmpsl
shrl
cmp
out
cwtl
aam
aaa
pop
insl
add
fcompl
call
push
repz
test
mov
repz
jp
pop
cs
icebp
clc
jmp
and
aam
rcll
imul
loope
xchg
sbbl
jb
pop
push
dec
loop
mov
andl
pusha
int
iret
dec
xor
xorb
and
jno
adc
sbb
call
test
js
xor
and
dec
or
test
in
push
dec
clc
std
jg
xor
mov
add
sub
enter
ficomps
pop
mov
jno
cs
stos
bswap
or
pop
stc
and
push
inc
or
loopne
sbbb
jge
dec
xchg
xor
sub
cmc
mov
in
lret
shlb
lock
mov
mov
push
lcall
adc
xor
movsb
repz
mov
pop
inc
adc
pop
daa
arpl
and
sub
sub
stos
psadbw
cwtl
jb
xlat
lret
stos
mov
inc
push
pop
dec
cmp
sub
pop
icebp
add
in
shlb
xchg
es
mov
lcall
sahf
and
add
and
ds
subb
cmp
xchg
sub
sbb
sub
dec
shr
adc
int3
sub
loope
fadd
sahf
nopl
adc
les
pop
lahf
inc
mov
enter
sbb
cmp
mov
pop
aad
sbb
iret
les
push
dec
outsb
mov
lods
testb
popf
mov
sub
les
out
repz
xchg
and
sub
push
dec
shll
lods
push
in
pusha
ret
cld
fwait
push
mov
inc
jp
ja
push
fldcw
xlat
jns
cld
addb
xor
pop
in
inc
xlat
enter
test
mov
sahf
stc
push
jle
fistpl
shlb
and
das
ret
fld
in
pop
mov
pop
fsubp
adc
ret
pop
mov
dec
lahf
out
cld
and
mov
xor
pop
dec
clc
rorb
lock
cmp
pop
mov
pop
enter
vhaddps
repnz
rorb
ljmp
pop
into
in
aad
jne
repnz
sbb
in
mov
cmp
cwtl
mov
dec
test
test
pop
adc
push
test
mov
dec
jge
push
or
addr16
push
push
xchg
hlt
arpl
idivb
sbb
mov
in
stos
fnsave
loope
mov
sub
xchg
sahf
jb
push
sbb
mov
pop
xor
cs
jg
cmpsl
fisubs
or
jno
add
ljmp
ficomps
cmp
cmp
data16
jp
aas
lds
ret
mov
aad
jmp
fisubrl
int3
sub
lcall
add
call
divl
cmp
mov
cmc
cli
jmp
test
fbstp
ljmp
ret
jmp
lret
outsl
push
rcll
daa
xchg
in
pop
dec
into
dec
test
daa
cmp
out
mov
push
test
insb
std
inc
pop
nop
mov
xor
pushf
sub
lds
adc
jecxz
cmp
stc
scas
and
fldcw
mov
mov
adc
in
dec
and
mov
adc
mov
lods
lcall
adc
pop
sub
into
jae
pop
sub
dec
sub
jmp
dec
mov
mov
push
push
jne
iret
mov
mov
or
rcl
test
dec
mov
push
jno
push
adc
push
and
push
or
push
das
enter
ja
add
adc
mov
inc
sbb
xchg
out
jo
or
rcll
pop
cs
pop
test
push
xchg
sub
xchg
cmpsl
pop
mov
rclb
jmp
xchg
fisubl
shlb
or
enter
dec
mov
ljmp
ret
pop
add
inc
push
js
sbb
pop
cli
push
loopne
pop
and
sahf
cmp
mov
jb
cltd
sarl
std
mov
rorb
aam
cld
cltd
mov
lods
fiaddl
lea
adc
sub
fists
push
fldenv
in
mov
fimuls
ss
mov
cmpsl
add
popf
jo
sbb
mov
and
push
mov
jmp
push
dec
and
sahf
cmp
mov
lods
sbb
out
lock
sbb
ja
sahf
iret
lret
xor
icebp
mov
or
or
inc
aaa
les
pop
je
or
ds
in
lret
jmp
shrb
mov
in
out
xchg
push
aad
add
repz
stos
jo
jmp
in
push
mov
pushf
xchg
dec
dec
xchg
hlt
enter
addr16
inc
jecxz
pop
scas
lea
andnps
fwait
xor
jne
adc
mov
mov
inc
adc
cmp
insb
inc
push
shlb
aam
fstl
pop
add
repz
sbb
cmp
vpaddb
inc
int3
push
cmp
lret
mov
push
fs
xchg
and
mov
mov
mov
ja
insl
push
mov
cmpsl
inc
loopne
gs
sub
cmpxchg
push
xchg
out
ret
dec
bound
adc
int3
or
fbstp
imul
pop
ret
sti
cli
je
outsb
aam
pusha
sbb
outsb
cs
icebp
xor
bound
xor
popa
pop
pop
jge
psraw
pusha
or
iret
xchg
sub
push
or
testl
outsl
lcall
dec
mov
cmc
lock
push
cmpsl
push
or
insl
pop
cwtl
push
mov
add
divb
sub
xchg
ja
mov
mov
lret
cmpsb
cmp
dec
lods
xorl
ficoms
lret
pop
pop
popa
rcr
fucomip
sub
fs
daa
mov
xor
dec
cmpsb
and
pop
repnz
jg
sahf
xchg
sub
pop
pop
add
cs
cltd
cmp
pop
pop
jnp
lcall
ret
call
lahf
inc
inc
inc
fs
cmp
pushf
es
xchg
inc
and
data16
cmpsb
in
push
popa
hlt
push
sahf
data16
movsb
push
ljmp
adc
out
js
push
inc
shlb
imulb
inc
jbe
ss
ja
lods
pop
popa
out
outsb
adc
sub
pop
mov
test
mov
in
out
fbld
mov
notb
fwait
push
push
xor
and
ret
rolb
mov
push
mov
jae
or
hlt
ljmp
xor
enter
pop
mov
int3
mov
inc
cmp
stos
jle
outsb
out
push
cmp
xchg
xchg
cmc
jl
mov
lods
imul
jbe
ret
call
in
ret
and
in
xchg
sub
orb
hlt
insb
dec
or
add
arpl
xchg
hlt
fwait
ret
sahf
aad
pop
cltd
adc
sbb
rcll
xorb
add
ret
cld
stos
pop
mov
push
fwait
xchg
sbb
scas
push
and
cmp
mov
addr16
mov
fmuls
scas
sbb
pop
mov
sub
cmpb
clc
sarl
enter
mov
add
or
pop
xchg
jnp
and
rorl
imul
or
cmp
or
cld
or
das
cmp
mov
fwait
inc
sbb
mov
push
mov
or
and
jg
lret
jae
sbb
int
mov
popa
notl
pop
pop
mov
and
ljmp
iret
loopne
mov
xchg
jle
xor
push
push
pop
pusha
inc
inc
idivl
push
nop
aam
mov
jmp
ljmp
dec
popa
xchg
pop
ffreep
loop
mov
lea
inc
pop
xor
pop
je
push
leave
mov
sub
orb
enter
cmp
mov
cs
insl
or
jp
outsb
push
cs
dec
and
sbb
into
xorl
xchg
adc
icebp
clc
pop
fidivl
mov
push
mov
jns
aam
mov
movsl
cld
sbb
shll
mov
stc
mov
ja
ds
cmpsl
movsb
lea
jge
sub
or
pop
cmc
ret
cmpsl
jl
movsl
pop
inc
push
xchg
jp
jmp
mov
lods
pusha
mul
jo
and
hlt
adc
outsb
xchg
sub
clc
arpl
dec
fdivs
in
fs
inc
ror
imul
sub
inc
repnz
push
sbb
repz
cmp
dec
jp
jo
stos
mov
inc
and
mulb
jge
add
xor
cmp
xchg
adc
lods
lods
jae
pop
or
jg
call
rcll
decb
lahf
inc
adc
jg
ljmp
lret
push
in
gs
xor
shlb
js
das
lea
xchg
cmp
xlat
mov
testl
rclb
push
cmpsb
xchg
inc
je
adc
fdivr
and
out
pop
sbb
fildl
call
fsts
push
push
jg
and
in
sub
fwait
xor
outsl
xchg
loop
sahf
mov
xchg
pop
in
jb
xchg
rolb
lret
add
pushf
rorl
outsb
lret
add
out
clc
and
xor
test
aad
fisttpl
cmp
mov
mov
data16
in
repz
imul
std
repz
lock
fdivrs
nop
lret
jl
xor
push
fists
adc
outsb
daa
push
mov
dec
mov
mov
imul
sub
stc
dec
cmp
clc
xor
push
mov
fimuls
ss
out
jle
hlt
int3
test
mov
mov
lret
adc
subb
cmpsl
jo
mov
dec
xchg
or
mov
dec
pop
jg
dec
pop
push
popa
pop
mov
in
mov
hlt
push
inc
adc
mov
add
lock
sbb
cmp
or
test
cmc
pop
mov
leave
lods
sbb
jp
pop
leave
jge
cld
enter
daa
data16
mov
sub
and
sbb
sbb
sbb
js
jne
dec
test
ror
mov
jg
dec
stc
mov
jae
arpl
sar
call
sbb
sbb
enter
call
sub
ret
jo
fwait
mov
rcll
cmp
mov
dec
fdivrs
mov
push
push
ja
adc
in
daa
xchg
outsl
es
pop
test
in
push
gs
xor
mov
push
imul
cmp
xlat
stos
hlt
test
fstpl
push
mov
test
cmp
add
out
loope
repnz
xor
inc
loopne
aad
insb
sub
out
aad
push
sub
xchg
test
das
pop
cltd
inc
jns
ss
into
push
jecxz
out
test
mov
add
inc
adc
add
cmp
push
pop
xchg
or
fmuls
add
mov
xor
test
inc
arpl
scas
pop
test
and
dec
or
clc
fidivl
out
lcall
xchg
xchg
in
fwait
sti
subb
dec
gs
xchg
mov
xchg
or
fists
fwait
xchg
mov
adc
mov
int
xor
push
shrl
mov
shl
cltd
inc
pop
or
movsl
xchg
aam
adc
xlat
mov
jl
sar
nop
jae
xchg
js
inc
push
inc
test
sub
loopne
movsl
cmpsl
mov
into
ja
xor
icebp
mov
shll
xor
aam
cmc
xor
pop
or
jecxz
dec
xchg
jle
or
mov
push
fsubl
jns
movsb
rcrb
mov
jl
rcr
and
and
push
jge
daa
cmpl
add
mov
into
mov
sub
push
std
mov
cmp
aam
mov
sbbb
or
mov
rorb
scas
negb
stc
test
rcrl
rorl
mov
cmpsl
mov
pop
mov
enter
mov
fmuls
mov
sti
stos
clc
out
sbb
popa
rcrl
rorb
sub
sub
cmc
fisttpll
das
xor
add
or
inc
adc
mov
jbe
repnz
lock
or
pusha
idivl
or
push
pop
jb
subps
xor
test
std
push
cmp
daa
and
cli
pop
jnp
sti
rcl
sbb
or
mov
pusha
or
fmuls
inc
ror
add
rcrl
popa
loop
pop
leave
pop
lahf
into
mov
inc
enter
xchg
hlt
ret
aaa
cmpsb
imulb
fs
add
bound
int3
popf
rolb
fnsave
pop
out
or
fdivp
and
aas
xchg
mov
inc
fwait
lret
lods
xchg
cmp
aas
lcall
jno
arpl
or
in
pop
jle
or
xchg
int
pop
icebp
fucom
sub
mov
and
aam
push
gs
mov
jbe
or
insb
test
mov
fsubl
shl
stc
xchg
sti
loopne
lods
clc
jl
aaa
out
cmpl
xchg
adc
fisubs
push
roll
or
mov
adc
lock
mov
outsl
xchg
je
sbb
ss
pop
repz
imul
adcb
xchg
pop
sbb
inc
sub
jge
aam
insl
xchg
push
and
push
adc
and
dec
pop
or
xchg
push
lcall
mov
cmpsl
push
pop
jmp
xor
fisttpll
jge
pop
xchg
pop
sub
subb
xchg
and
and
popf
test
add
push
orl
sub
lods
arpl
jns
dec
cmpsb
flds
cwtl
rcr
xlat
call
jno
cmp
xchg
aad
cld
mov
scas
sub
gs
jl
out
popf
xchg
adc
mov
mov
hlt
gs
push
ljmp
adc
pop
sub
xchg
mov
push
dec
adc
lahf
nop
or
push
xlat
push
mov
pop
ljmp
mov
loopne
xor
lods
aas
sub
cmp
adc
jne
arpl
pusha
cmpsl
lret
clc
int
dec
inc
pop
int3
paddq
mov
mov
call
mov
les
ja
or
mov
push
mov
mov
jb
pop
lret
xchg
sub
pop
lret
sub
jnp
mov
mov
fxch
jmp
or
and
fsts
test
arpl
shr
ss
out
mov
loope
mov
std
mov
and
jne
jg
loopne
push
mov
cmpb
or
mov
cwtl
out
pushw
leave
scas
es
xor
dec
mov
stc
mov
mov
adc
push
addl
js
movsb
xchg
jecxz
jb
dec
scas
outsb
into
iret
push
adc
sub
lds
adc
add
repz
in
fldt
add
filds
mov
jbe
adcl
mov
icebp
sti
adc
imul
lcall
adc
add
sahf
and
outsb
mov
inc
jb
rcr
xchg
enter
les
adc
mov
clc
jmp
sbb
push
sub
aam
pop
pop
push
mov
scas
jecxz
in
jo
push
jno
mull
push
incl
icebp
inc
das
mov
jge
stos
push
clc
xchg
xchg
pop
lock
in
mov
sbb
aas
test
xchg
mov
mov
rclb
sub
test
jmp
js
pop
pop
lret
repz
xlat
test
push
inc
rol
cmc
or
pop
add
sub
mov
sarb
sub
mov
loope
fucomip
jge
push
jmp
shl
jecxz
push
das
pop
daa
lcall
bound
arpl
out
push
test
jle
movsl
lds
ret
imul
or
add
mov
sub
test
jb
cmp
out
js
adc
loopne
repz
call
adc
rorl
test
test
xor
dec
setg
sbb
xchg
das
push
decl
xor
test
les
jmp
lock
cli
cwtl
sbbl
jb
jp
jae
add
pop
mov
and
and
jbe
jo
sahf
add
jae
fcoms
and
std
add
xchg
push
jg
mov
and
enter
mov
lock
rcl
stos
hlt
jg
xchg
and
add
mov
mov
test
test
mov
not
in
es
ss
push
dec
and
pop
mov
xor
mov
mov
mov
fsubrs
mov
subl
cmp
lock
pusha
mov
inc
imulb
add
stos
scas
in
pop
stc
loop
cmp
shll
xor
jg
and
xchg
push
ret
sbb
aas
push
inc
pop
out
fiadds
cld
inc
fistpl
dec
lahf
mov
mov
jmp
pop
aad
and
pusha
andl
imul
and
pop
loope
cli
sub
push
or
data16
and
jnp
bound
pop
cmp
mov
or
and
fldl2t
es
insb
es
cmpsl
lods
nop
das
jae
cmp
inc
lock
cmp
mov
std
lret
outsl
mov
jl
cpuid
movsl
xor
lea
adc
ss
gs
pop
sti
lret
or
adc
jmp
in
arpl
shll
mov
gs
ds
roll
fcomps
negl
adc
fiadds
call
pushf
fwait
outsl
pop
dec
shll
test
aad
test
loopne
jns
dec
dec
mov
sub
js
lods
adc
jp
add
adc
sbb
mov
fimuls
data16
mov
fimull
data16
and
stc
pop
je
test
mov
mulb
xchg
jecxz
jns
cwtl
jle
mov
bound
sbb
cmpsb
pop
movsl
andb
out
xor
pop
addb
jo
mov
inc
push
or
pop
lcall
andl
addb
iret
sub
loop
jns
push
popa
scas
js
enter
add
dec
xor
adc
adc
mov
into
cli
ret
out
sub
sti
and
push
jae
scas
xor
mov
fcmove
cmp
fcomip
mov
dec
xor
nop
fiadds
int
addr16
jle
shl
xor
mov
mov
jge
pop
jmp
je
add
pop
xor
test
xchg
sbb
lcall
lret
fdivrs
arpl
mov
xor
fldl
out
mov
scas
jno
xchg
cmc
add
jp
mov
ss
sbb
jno
xor
mov
xor
pop
add
dec
jb
xchg
test
mov
fsubs
testl
shr
or
add
mov
movsb
and
xor
mov
fdivrl
or
jo
xchg
mov
add
xchg
outsl
mov
lea
adc
adc
gs
testl
flds
in
inc
dec
popa
ret
aaa
sbb
adc
xor
sub
jecxz
lret
ljmp
lods
shll
fbstp
pop
jle
lcall
push
xchg
es
push
repz
pop
nop
aaa
pop
cmc
mov
xchg
sub
xor
outsb
mov
repz
fs
mov
lahf
idivb
mov
add
inc
mov
xor
aas
sub
jle
cmpl
sbb
lret
das
lahf
cmpsb
jg
add
pop
outsl
jp
mov
outsb
pop
loop
cli
mov
mov
fwait
cmp
adc
mov
xchg
ljmp
mov
sub
int
out
push
stos
loopne
pop
aad
ret
or
mov
jnp
out
pop
out
pushf
mov
pusha
lret
arpl
dec
movsb
cli
int
int3
xchg
and
in
shll
frstor
add
push
loope
jae
sbbb
outsb
sub
dec
loop
mov
aam
cmpsl
paddd
testl
cmc
dec
into
jo
push
in
jae
push
dec
sub
cli
les
add
loopne
sub
mov
ljmp
adc
arpl
lcall
aaa
mov
and
fidivl
lods
in
mov
mov
mov
call
jl
mov
and
xor
add
adc
in
icebp
loope
sub
mov
popf
pop
jb
sub
sbb
push
mov
sub
xchg
iret
popa
jo
mov
sbb
xchg
mov
pop
push
aas
fidivrs
fucomip
or
mov
mov
popa
sub
outsb
repnz
daa
addr16
popa
test
adc
out
iret
hlt
adc
das
cmp
daa
sti
xchg
mov
int
adc
sahf
cmpsb
lret
aam
fprem
sub
add
fs
mov
xchg
cmp
push
sub
and
dec
pop
inc
mov
je
arpl
test
xchg
xchg
icebp
and
ja
jp
call
jno
sub
sub
xor
shlb
das
cltd
fnstenv
mov
fcoms
cmp
jp
xor
popf
cmp
vpcmpgtw
fcoml
push
cmpb
mov
mov
push
sbb
push
push
adc
mov
dec
fs
test
lret
inc
mov
lock
pop
and
pop
jo
pop
sub
cmp
int
roll
mov
dec
inc
adc
jge
add
sub
push
test
mov
jecxz
adc
mov
pop
mov
mov
mov
ret
test
or
or
cmp
int3
inc
insl
or
push
shlb
pop
sti
stos
into
loop
rclb
mov
repnz
inc
xor
and
mov
push
lds
jb
stos
les
fstpt
fiaddl
mov
pushf
push
into
push
cmc
pop
outsb
mov
sub
sbb
je
adc
fisttps
test
sub
adc
fwait
pop
sub
or
scas
mov
pop
mov
test
cli
bound
pusha
out
sbb
imul
pop
fwait
lahf
dec
int
cld
add
mov
dec
addr16
dec
mov
test
mov
pop
jne
ret
arpl
mov
jmp
jne
loopne
lahf
rol
mov
cmp
das
dec
movsb
mov
push
test
cmp
jp
adc
xchg
adc
or
inc
or
cmpsb
xchg
and
jmp
popf
enter
ret
ss
daa
mov
adc
rcrb
pop
pusha
xchg
inc
mov
mov
repz
aam
xchg
pop
add
outsb
cmp
mov
pop
push
sub
cld
out
push
nop
fsubs
mov
and
mov
stos
push
lds
xor
movsb
cwtl
test
or
push
mov
adc
loope
std
in
repnz
fldenv
mov
cmp
fisubs
test
push
ljmp
pop
lea
xchg
and
add
xchg
in
pusha
movsb
xchg
xchg
bound
ja
and
fnstsw
jle
mov
ss
arpl
arpl
dec
bound
ret
fmulp
popf
imul
mov
scas
push
and
rcrl
nop
or
nop
test
jl
push
mov
lahf
repnz
addl
dec
xor
push
aad
add
gs
mov
sarl
xchg
cld
addb
dec
inc
stos
inc
es
imul
mov
lds
or
fwait
test
cmp
lock
pop
aaa
mov
aas
mov
mov
sbb
pusha
pop
call
rcrl
or
add
out
xchg
in
fildl
jg
sbb
push
and
dec
push
and
xchg
mov
fxch
fsqrt
loop
cmpsl
adc
sub
icebp
icebp
add
lods
imul
fsubl
std
daa
xchg
push
imul
cli
cmp
mov
imul
dec
xor
clc
std
xchg
xor
dec
add
jno
popa
pop
xchg
out
and
and
xlat
xlat
mov
dec
popf
arpl
pusha
mov
aas
test
arpl
push
push
inc
icebp
jnp
outsb
jecxz
roll
and
add
fldenv
or
lds
cld
cs
out
mov
dec
push
mov
or
mov
lods
leave
xlat
icebp
sahf
sbb
fcmovb
sbb
lds
mov
adc
jecxz
push
jbe
enter
xchg
adc
lret
movsb
stos
mov
in
dec
lds
fcoml
shrb
icebp
push
arpl
pop
pop
and
movsl
mov
mov
lea
ljmp
fdivl
push
and
dec
dec
inc
hlt
leave
lahf
push
jnp
sub
mov
xchg
and
mov
movsl
push
out
lcall
xchg
dec
cwtl
push
mov
call
aam
test
cmp
stc
mov
mov
lcall
adcb
xchg
mov
out
int3
adc
out
fs
push
dec
add
cmpsl
fstpt
and
inc
andb
or
pop
movsl
stos
mov
cmp
dec
and
out
lds
imul
mov
fwait
insb
rsqrtps
fcom
jp
add
aam
xlat
stos
push
enter
xor
inc
xchg
fs
push
or
mov
and
add
sbb
sub
xchg
sub
jno
and
jbe
call
dec
push
sbb
outsl
push
mov
xor
out
popa
mov
testb
loope
in
cmp
int3
jecxz
int3
pop
loop
mov
add
inc
inc
test
popa
test
add
adc
imul
lds
pushf
ret
or
out
ds
gs
and
jns
mov
das
and
repz
mov
jnp
jb
or
fistpll
icebp
cli
jnp
test
mov
or
in
sbb
dec
mov
inc
pushf
movb
xchg
imul
out
add
ficoml
lret
aaa
push
dec
cmpsb
sbb
xchg
push
inc
mov
xchg
smsw
dec
jmp
movsl
mov
cmp
shl
pop
inc
movsl
dec
sbb
or
add
inc
ljmp
pop
scas
push
les
jg
dec
add
imul
out
rolb
test
cmp
cmc
inc
or
inc
lea
jp
pop
enter
push
mov
mov
clc
mov
rcrl
mov
mov
fwait
je
sahf
pop
jne
cli
pop
adc
cmp
inc
mov
adc
jg
fwait
jo
ds
mov
lcall
or
xchg
loop
pop
xchg
pusha
lcall
out
jl
aas
fs
mov
decl
jecxz
push
push
imul
cltd
cmp
push
lods
test
mov
pop
push
jp
andl
movsb
stos
lock
pop
cmp
jmp
aam
loopne
mov
out
movsb
dec
inc
and
adc
out
imul
jnp
jae
and
inc
lcall
add
mov
pop
mov
out
sub
push
cld
stos
inc
inc
int3
jge
clc
xchg
adc
jmp
popf
decb
push
jne
repnz
outsl
pop
lock
adc
arpl
adc
cwtl
mov
leave
dec
out
scas
fwait
scas
sahf
insb
lahf
out
pushw
sbb
add
sub
sahf
lret
mov
scas
lcall
or
push
sub
cmc
ret
popa
int3
mov
iret
xchg
xchg
aam
add
push
push
addr16
je
dec
ret
sbb
pop
cwtl
pop
cs
cmp
or
xchg
js
sti
mov
lahf
jbe
incl
cmpsl
mov
cmpsb
sbb
cmc
xchg
xchg
inc
lret
enter
adc
mov
xor
lret
cmpsl
mov
int3
adc
jb
in
xchg
xchg
stos
icebp
mov
push
adc
sbb
movsb
jecxz
jle
sub
ret
cmp
mov
mov
jne
mov
adc
sub
insl
hlt
xchg
fpatan
xchg
cmpl
jmp
aam
enter
ss
movsb
ret
and
cwtl
xor
bound
jne
mov
inc
mov
dec
push
aaa
roll
pop
pop
into
fistl
lods
stos
call
imul
xor
cmpsb
rol
pop
lahf
in
ljmp
jp
mov
pop
mov
push
je
test
pusha
es
movsl
insl
pop
fildll
roll
push
fdivl
cmp
and
dec
sbb
fs
add
mov
jecxz
add
xchg
jg
fadds
dec
mov
insb
out
jmp
mov
clc
or
or
rcrb
xchg
das
push
and
xchg
and
cmp
testb
sahf
mov
adc
jge
in
pop
xor
sarl
popf
adc
in
daa
cmp
fs
out
pop
xor
inc
xchg
sbb
test
mov
cmpsb
std
adc
push
mov
xchg
dec
or
das
adc
mov
dec
add
idivb
rcrl
jns
cmp
lahf
mov
pop
imul
inc
push
jp
imul
stos
mov
roll
inc
ds
dec
scas
xor
cwtl
mov
scas
das
and
sub
orl
cmp
push
push
fwait
dec
dec
push
pop
es
test
out
adc
xchg
notl
inc
fstl
push
popa
mov
sahf
and
jne
cmc
idivl
outsb
fildl
inc
sbb
fbstp
and
ret
pop
nop
les
ret
pop
lds
xorl
scas
and
jo
movsb
mov
push
cli
pop
and
push
inc
imul
dec
jne
mov
and
cld
les
lcall
int3
mov
test
jecxz
test
mov
sar
mov
add
aad
jns
aad
cwtl
cli
repz
scas
or
dec
iret
ds
mov
jo
xor
icebp
xlat
out
sub
dec
dec
mov
push
test
lock
ret
sbb
add
popf
jo
xchg
mov
cld
and
inc
cltd
add
mov
inc
shlb
mull
stc
pop
aad
lock
adc
sbb
inc
add
pop
fs
daa
insb
loop
jnp
push
sbbl
pop
jne
sub
in
sbb
inc
je
pop
mull
cmp
push
adc
and
pop
cs
pusha
jecxz
push
sahf
pop
jbe
pop
shlb
jmp
call
adc
sub
add
xor
in
sbb
inc
jg
aas
shlb
push
cmp
imul
in
or
lea
cmp
add
dec
stos
jae
push
loop
roll
repz
daa
lret
mov
xlat
pop
push
add
cmc
or
aas
subl
addr16
inc
lcall
test
sbb
hlt
movsb
mov
xchg
lahf
push
aaa
cli
mov
mov
or
shr
dec
jecxz
cmp
xchg
cwtl
in
cmpsl
mov
xchg
cmp
mov
xor
jl
inc
das
mov
or
jg
mov
jne
dec
sbb
mov
mov
stc
shlb
repnz
dec
leave
clc
cltd
and
mov
movsl
lahf
decb
add
lods
js
xchg
loopne
cmpb
cli
push
mov
and
xlat
adc
and
inc
es
xchg
add
adc
enter
fisttpl
sub
lds
pop
sub
lea
mov
pop
cs
fs
lods
adc
mov
inc
and
mov
pop
inc
sahf
push
sub
decb
mov
cwtl
stos
sub
or
out
fdivs
mov
pop
pusha
int3
stos
scas
push
mov
jo
xor
imul
inc
lret
push
fidivs
mov
fwait
je
enter
out
fisubs
loopne
repnz
cmp
rorb
imul
daa
cmp
jl
ja
cmp
hlt
sub
xchg
xorb
sub
fs
in
fs
inc
sub
inc
cmp
adc
lcall
xchg
je
scas
adcb
lods
cltd
and
js
les
cwtl
pop
sbb
or
fwait
ljmp
or
and
daa
xchg
test
shr
lcall
mov
sub
push
jecxz
fs
in
adc
dec
mov
fsubrs
call
clc
fstpt
stos
es
mov
loope
aaa
sub
out
xor
das
jbe
scas
jle
fildll
add
stos
pop
xchg
push
push
adc
or
sub
mov
push
jecxz
pop
xchg
lahf
fisttpll
divl
mov
ljmp
out
aas
loop
inc
andl
or
fbld
idivb
mov
in
cmp
push
fcom
push
lods
int
adc
sub
shll
pop
push
jmp
xchg
jmp
xchg
mov
ds
pop
js
inc
fimuls
xor
scas
inc
add
sti
sbb
std
das
ja
and
test
mov
cmpsl
dec
mov
test
fcomip
pop
dec
ds
mov
xorl
add
jne
sbb
repnz
xor
mov
adc
push
inc
xchg
push
nop
sar
neg
mov
inc
jae
xor
test
and
testb
xor
lret
pop
pop
ret
mov
cmp
push
push
jae
cmpsl
orl
push
mulb
sarb
ret
ret
mov
fsub
jecxz
les
mov
pusha
and
mov
add
les
and
sahf
pop
jle
or
in
mov
sub
orl
mov
inc
or
cmp
stc
icebp
mov
xor
sti
sbb
decb
cmpl
ret
and
fldl
mov
cmp
rcll
lcall
lock
sbb
stos
mov
ljmp
inc
pop
push
push
decl
push
into
imul
sarb
dec
fidivl
fs
pop
pop
lret
or
aam
jae
mov
mov
push
jns
jbe
or
cmp
fisubl
pop
mov
or
sub
rcr
xchg
push
stos
shl
xchg
sub
xor
mov
pop
jnp
mov
pop
popf
xchg
push
dec
loop
xchg
lods
out
mov
lret
test
jmp
cmp
or
mov
aas
ficompl
add
imul
in
add
mov
xlat
push
mov
jl
cmpsb
mov
stos
movsb
pop
aad
xor
popf
mov
in
mov
add
jns
mov
icebp
and
inc
mov
rol
scas
repnz
in
aam
inc
outsb
adc
adc
pop
into
pop
mov
sarl
sub
repnz
icebp
jnp
or
jnp
jg
ret
dec
sahf
imul
mov
fs
jns
inc
xor
sub
sarl
fdivrs
mov
in
loopne
xchg
xor
xchg
imul
lods
sub
sarb
push
mov
leave
cwtl
jns
sbb
addr16
repz
mov
jno
lahf
out
mov
divb
mov
jg
mov
dec
out
add
pop
sbb
cltd
xor
andl
les
pushf
mov
or
jb
mov
enter
xorl
popl
std
xchg
daa
cwtl
jl
dec
stos
fstl
fisubl
sub
fidivl
mov
mov
shll
sbb
dec
int3
mov
jbe
cwtl
sbb
xchg
rcrb
rcrb
jle
add
lret
into
push
inc
dec
push
bound
jno
imul
cld
cltd
dec
leave
mov
je
sub
mull
xlat
adc
push
pop
scas
push
aaa
xchg
test
shlb
add
pop
mov
subl
jp
les
int
filds
inc
and
testl
jle
lods
imul
jmp
jns
icebp
mov
pop
push
in
imul
bound
rcrb
in
cmp
rclb
xlat
mul
data16
jp
aas
dec
dec
into
fcomps
movsl
cltd
popf
pop
or
add
aaa
or
jle
pop
cltd
pop
fs
in
dec
das
push
jnp
add
arpl
sub
push
movsl
aaa
dec
outsl
jle
rorl
ljmp
loop
mov
jb
or
push
mov
cmp
jecxz
cwtl
imul
jb
stos
lods
aad
fstp
xor
ficoms
sbb
jp
pop
fildl
test
int3
push
imul
xchg
les
adc
dec
sub
mov
mov
lahf
stos
inc
mov
sub
sar
in
ds
mov
loopne
push
lock
scas
xchg
mov
sbb
mov
hlt
push
pop
cmp
sub
cltd
fs
sub
movsb
ficoml
clc
add
fisubl
sbb
movntps
fists
mov
push
pop
cmpsb
jmp
mov
and
xchg
aaa
mov
into
mov
orb
clc
mov
sti
ficompl
fdivs
daa
gs
sub
inc
jmp
out
mov
mov
je
out
andb
inc
sub
adc
push
dec
cld
jne
pop
test
xor
es
call
test
filds
push
out
sub
outsl
or
and
cld
js
sarb
test
scas
fisttpl
out
les
or
push
test
sub
aam
outsb
out
bound
cmp
xor
inc
enter
pop
fucom
ja
sbb
ss
adc
mov
jbe
lds
outsl
fsubrl
loop
stos
push
pop
test
test
into
into
outsb
addr16
jb
jno
mov
inc
pop
int3
jp
stos
loope
sahf
stos
add
xchg
cwtl
add
andb
repz
loopne
pop
jae
test
inc
fwait
add
pop
mov
aaa
mov
xor
aaa
pop
call
jle
xorb
ja
ja
pop
push
lds
in
and
jne
jb
pop
iret
mov
cwtl
jnp
test
or
mov
mov
mov
dec
adc
sub
add
repnz
cli
mov
jns
shlb
popf
test
sti
push
adc
adc
iret
mov
and
sbb
jns
dec
mov
fnsave
out
mov
ljmp
lret
sub
lret
das
cld
adc
xchg
repnz
repnz
dec
rcll
sahf
mov
and
or
in
cli
cli
push
jno
adc
mov
in
das
add
scas
stos
inc
and
push
aas
mov
pushf
pop
and
dec
insl
call
je
mov
cmpsl
push
sarl
test
setb
mov
dec
add
and
sub
jae
xor
in
popf
add
out
movb
adc
push
fisttps
cmp
push
and
xor
and
jno
test
imul
push
push
mov
mov
adc
fmull
scas
fwait
in
dec
mov
push
out
cmp
mov
in
adc
push
popa
testl
inc
pop
sahf
or
mov
jb
aaa
jge
mov
mov
shlb
cld
add
add
outsl
int3
push
je
jae
pop
fsts
sbb
dec
fsubs
adc
and
mov
or
xchg
sbb
add
loop
fldpi
les
fists
jae
mov
enter
push
and
jp
adc
dec
and
enter
add
cmpsb
les
mov
test
push
lret
pop
lahf
fstl
mov
and
aad
aas
dec
into
cld
fcmovu
cmpsb
lcall
cmp
cmp
add
cld
mov
lds
in
addr16
sub
or
xor
xchg
cs
adc
jp
jecxz,pn
xchg
and
repz
lods
cmpsb
movl
sbb
or
push
in
in
cmp
xor
dec
xchg
int3
stos
adc
and
push
btr
push
int3
pushf
jns
inc
aas
dec
jbe
in
or
hlt
icebp
fistpl
scas
jo
sub
jne
dec
cmp
jno
sbb
mov
push
sub
push
and
mov
push
dec
xchg
in
sbb
mov
xor
cs
andb
ljmp
in
loope
scas
add
jae
jno
dec
cmc
flds
in
push
dec
jo
loopne
mov
stos
daa
or
iret
sbb
out
lods
fs
cld
ret
les
outsl
push
scas
jns
cmpsb
mov
add
cmp
fwait
push
sbb
das
pushf
ds
add
pop
insb
push
repz
or
xorl
paddb
mov
mov
in
jmp
mov
lea
ljmp
lret
ss
test
iret
popf
cli
imul
fistpl
xor
out
xchg
push
sub
jle
or
lods
lahf
aaa
and
or
mov
test
adc
push
je
mov
mov
in
test
aas
test
and
pop
add
aad
adc
mov
fistps
add
adc
and
dec
cmpsb
mov
pop
fs
xor
xchg
dec
scas
test
dec
push
and
lcall
xorb
js
push
outsl
jl
mov
jns
lods
mov
and
xchg
mov
dec
and
ljmp
or
mov
repz
xchg
fstpt
add
push
mov
dec
jl
les
adc
sub
es
dec
jl
fsubl
imul
inc
cs
push
sbb
jge
lcall
mov
das
inc
xor
add
xchg
jle
rcl
scas
out
nop
fnstenv
mov
sub
shlb
fldt
into
jmp
jns
cltd
sub
mov
jg
pop
imul
inc
lods
rolb
in
jecxz
pop
bound
mov
out
arpl
sbb
push
ret
aad
stc
add
mov
ret
push
sbb
jmp
sahf
xchg
mov
or
fdivrs
dec
fmuls
mov
out
ret
add
push
icebp
mov
xlat
sub
clc
fst
aam
rcll
ja
fxch
lock
or
stc
mov
ja
out
repz
mov
in
into
js
das
cmpsl
jl
sub
fmull
fisubrl
stos
and
inc
adc
fdivrs
sbb
jp
xor
xor
pop
outsb
jo
fiadds
inc
or
inc
dec
cmpsl
xchg
std
jno
dec
jp
stos
into
out
in
lcall
insb
push
adc
add
repz
lds
mov
sub
dec
mov
add
cld
sub
cli
dec
sub
adc
dec
sarl
mov
cmp
dec
or
or
sub
dec
and
inc
jecxz
pushf
icebp
decl
mov
mov
scas
mov
lods
aaa
mov
movsl
lea
aas
jne
push
xchg
push
mov
adc
pop
adc
stos
or
dec
popf
hlt
adc
cmpsb
data16
inc
xchg
and
cltd
addr16
sub
mov
mov
push
rcl
sti
jns
mov
cmp
in
jecxz
sub
int
xchg
clc
test
out
pop
push
pop
fiadds
lcall
movsb
pop
inc
js
jb
cmpb
mov
push
push
sti
add
inc
loop
sub
ss
cli
dec
cmp
inc
cmp
shrb
push
cli
pop
sti
push
add
stc
sbb
gs
mov
mov
mov
gs
mov
rolb
push
sub
adc
mov
xor
or
or
xchg
jno
insb
xchg
xlat
pop
insl
pop
fisubl
mov
pop
push
jno
or
mov
movsl
dec
inc
lahf
into
out
or
sbb
dec
add
mov
in
fiaddl
neg
stc
addr16
jmp
pop
add
jge
pop
test
cmc
cmp
shrb
pop
out
push
std
shll
mov
xchg
mov
cs
sbb
jno
rcll
insl
out
cmpsl
xor
push
popa
dec
push
sub
mov
mov
addr16
cmp
jne
loope
add
mov
mov
xor
shrl
push
cmpl
in
xchg
push
ds
cmp
mov
fists
leave
sub
dec
xchg
hlt
and
gs
pop
ret
jp
dec
pop
cmc
or
scas
jmp
testl
mov
xchg
lock
std
xlat
movsl
in
cmc
xchg
mov
push
dec
dec
out
xchg
jle
js
dec
int3
test
pop
mov
and
dec
test
jle
cmp
pop
ds
iret
add
push
in
ljmp
inc
inc
jne
mov
jne
into
lea
jo
ficomps
outsl
cmp
push
mov
xor
push
inc
aam
aam
rcll
fcmovbe
aad
xchg
std
xchg
stos
sbb
jg
add
pop
xchg
fmuls
fs
dec
stos
lahf
repnz
cs
movsl
daa
mov
inc
jmp
inc
dec
ljmp
lods
das
stc
leave
aad
fmulp
into
imul
pop
scas
sub
cltd
mov
xchg
insl
mov
lcall
and
mov
push
and
lret
cltd
xlat
pop
loopne
cmp
out
mov
push
repnz
xchg
pop
cwtl
je
and
sbb
ss
adc
mov
xchg
mov
mov
out
lods
in
lcall
aad
cmp
cmp
inc
sbb
or
cmc
shl
test
pop
mov
xchg
dec
inc
in
outsl
flds
loope
das
subl
add
push
icebp
es
lcall
cmpsb
rcr
lret
int3
mov
xor
rorl
sub
mov
movsb
xchg
hlt
lahf
xchg
mov
mov
cmovnp
xchg
push
add
in
xor
js
cmp
out
jecxz
mov
xor
push
jl
loop
int
mov
mov
inc
in
in
in
add
aaa
sbb
cltd
out
aas
fsubrl
jecxz
stc
mov
mov
call
aaa
adc
out
fldl
and
lret
jp
sub
jle
jle
loope
dec
cmpsl
mov
subb
jno
fcmove
adc
icebp
or
and
fisttpl
iret
push
scas
data16
fcomp
ja
push
mov
imul
mov
stos
subb
jnp
xor
pop
cmpsl
push
cmp
push
mov
jnp
push
or
mov
cmp
xor
call
or
pop
inc
mov
addl
test
clc
mov
adc
inc
fildl
or
out
push
sbb
ja
jecxz
imul
sub
mov
js
fiaddl
cwtl
cmp
adc
cwtl
leave
into
icebp
iret
sbb
popa
pusha
push
inc
sbb
inc
fildll
cmpsb
inc
mov
bound
stos
pushf
aad
rcrl
or
sub
push
ror
dec
jp
pop
call
je
xchg
xchg
jmp
adc
pop
out
cmp
repnz
sub
mov
test
sub
sbb
dec
adc
lods
xchg
decb
cld
xor
push
adc
outsl
sub
gs
jmp
cmpsb
dec
fs
gs
mov
push
clc
mov
ss
cmc
subb
shll
repz
in
fprem
lds
inc
jae
xlat
movsl
mov
shr
dec
repnz
cmp
cmp
cmp
mov
movsb
jl
inc
pop
insb
test
jge
iret
out
push
roll
enter
test
leave
jmp
outsl
xchg
jg
mov
xchg
sub
mov
dec
fstps
mov
and
repz
fbld
xlat
lock
xchg
xor
adc
add
mov
inc
and
popf
add
jnp
pop
nop
cmpl
mov
js
dec
mov
pushl
or
cmpsb
mov
ret
lea
or
mov
lds
insb
rcl
lcall
fstl
jae
jge
sub
inc
out
test
mov
xor
lret
aam
and
nop
sbb
lcall
test
dec
mov
imul
xor
cs
test
mov
pop
outsb
ss
jnp
mov
fldcw
mov
shrl
icebp
jle
jle
adc
push
popa
dec
in
popa
test
pushf
lea
sar
push
sub
popa
and
adc
adc
sahf
xchg
inc
mov
jne
inc
mov
jl
ud0
cld
rcl
notl
mulb
add
xchg
pop
outsb
movsl
adc
ret
jo
repnz
jmp
mov
xchg
out
orl
sarl
cs
cwtl
lret
cwtl
xlat
insb
xor
mov
sbb
jle
jnp
lods
xchg
pop
ljmp
mov
cld
and
push
cmp
jnp,pn
mov
xor
or
hlt
mov
lret
sbb
mov
dec
mov
fldenv
sub
push
add
loopne
dec
fldl
or
push
push
shr
push
sub
rorl
jmp
in
inc
repnz
xorb
mov
pop
arpl
pushf
adc
push
imul
xchg
pusha
hlt
pop
xor
jns
add
std
dec
cmp
mov
leave
fdivl
push
out
xchg
stos
and
jg
jae
dec
add
arpl
xor
fstpl
in
in
jge
jecxz
jge
scas
and
aad
fildll
adc
stc
push
mov
xchg
movsb
push
xchg
pop
mov
pop
jge
mov
aas
pop
dec
dec
mov
ljmp
pop
cmp
pop
and
sub
das
movb
je
ds
insl
fidivrl
mov
mov
arpl
lds
scas
scas
pop
push
arpl
cli
cs
in
jge
cmp
loopne
out
shll
andb
jbe
stos
pop
sbb
rclb
xor
test
mov
fildll
mov
arpl
test
loopne
jle
es
add
adc
dec
ds
das
or
dec
leave
in
mov
int
mov
jp
inc
or
fwait
push
lcall
sbb
fmuls
in
dec
sbb
pop
pushf
mov
in
cmp
lahf
or
mov
inc
adc
outsl
mov
xchg
repnz
fldenv
xchg
aas
aaa
je
push
das
es
mov
sub
pop
lret
xchg
sar
inc
pop
xlat
pop
ja
jne
insl
add
mov
fisttpll
mov
mov
mov
mov
mov
in
adcl
push
daa
mov
outsl
jecxz
sbb
ja
pushf
cmc
loope
xchg
mov
or
add
stos
and
sub
jg
mov
in
lcall
cmp
mov
mov
xchg
pop
cltd
adc
mov
clc
adc
inc
out
rclb
cmp
xor
jmp
scas
or
adcl
test
mov
bound
icebp
xor
mov
mov
inc
call
push
mov
lea
mov
push
sahf
jge
lods
ljmp
dec
int
add
rcrb
lods
or
dec
dec
or
call
jecxz
or
fwait
into
xlat
sbb
adcl
dec
pop
imul
pop
sti
push
cmp
jne
mov
lret
lods
scas
adc
cwtl
cmp
fs
fdivrl
insb
js
mov
repnz
out
mov
dec
cmp
or
inc
mov
push
jne
mov
into
xor
fxch
pop
mov
fstps
lahf
lret
inc
mov
adc
sbb
cmpsl
push
loope
xchg
add
push
repz
out
outsb
cld
add
push
pop
loope,pn
adc
mulb
push
xchg
jae
push
mov
adc
mov
mov
enter
mov
gs
sbb
and
jge
jno
adc
das
sbb
xor
push
add
je
fmuls
and
pop
and
push
sbb
aaa
cmp
pop
jb
outsb
jbe
call
repz
data16
jecxz
mov
xchg
fcoml
imul
mov
movsb
aas
adc
out
test
repz
or
inc
or
pop
les
pop
data16
cmpsb
aad
outsl
movsl
into
and
sbb
test
pop
pop
jecxz
int3
push
xor
lret
lock
je
jg
and
mov
daa
scas
rcrl
test
xor
dec
pop
imul
sarl
aaa
jmp
dec
inc
mov
orl
call
mov
sarl
loopne
out
nop
mov
mov
outsb
adc
mov
leave
sub
mov
xchg
out
mov
dec
lret
xchg
mov
dec
das
mov
sbb
icebp
testb
push
ljmp
cltd
inc
fwait
ret
mov
call
les
mov
add
fsubs
icebp
dec
jge
outsl
cmp
divl
fisttpl
push
fcompl
aas
int
sbb
shrb
xchg
pop
pop
adc
mov
mov
cmp
adc
xor
add
andl
xchg
cwtl
loopne
stos
aad
aaa
push
sub
stc
push
ret
mov
lret
xor
nop
jno
mov
push
roll
cwtl
arpl
cmp
and
outsb
sbb
push
loop
sti
dec
das
movsb
in
sub
add
pop
pop
xor
and
lret
dec
out
sbb
out
pop
mov
mov
dec
mov
pop
mov
jl
in
xor
or
mov
push
jmp
lret
shlb
addl
jg
nop
idiv
fsubp
or
sub
push
sbb
mov
add
cld
lcall
pop
pop
adc
jle
push
push
jle
stos
out
std
daa
adc
push
mov
or
loop
xor
mov
shrl
nop
iret
xchg
jle
push
sahf
push
test
fdivl
xchg
scas
int3
js
pop
scas
bnd
xchg
mov
stos
fidivs
bnd
test
xorl
push
cmp
faddl
nop
subl
sub
out
jae
push
push
or
pop
in
mov
ret
gs
mov
jo
sbb
ficoms
cld
test
das
mov
adc
push
or
sub
add
mov
jge
in
adc
vcvtps2dq
data16
shll
loopne
or
xor
pop
mov
insl
cmp
lret
cmpsl
loopne
dec
mov
call
cld
or
or
fdivp
inc
imulb
xchg
push
mov
adc
decl
inc
sub
or
int
xchg
cltd
stc
and
fsubl
cmp
insl
sub
incl
mov
popa
xchg
cld
popf
mov
daa
sbb
rolb
data16
ss
pop
fildll
mov
js
cmp
cmp
mov
adc
movsl
inc
jnp
lods
dec
je
push
cmpsb
or
pop
adc
sbb
push
jmp
add
push
push
adc
outsl
xor
and
push
out
inc
and
jb
faddl
jge
aam
into
add
xlat
sbb
scas
out
pop
and
sbb
bswap
jecxz
jo
je
mov
in
fs
aaa
inc
inc
mov
aam
sub
cmp
xor
mov
mov
pop
mov
movsb
loopne
sbb
mov
inc
bound
shlb
xlat
cmc
idivb
pushf
jns
es
push
into
inc
add
push
jge
and
xor
lcall
mov
pop
dec
mov
add
mov
in
mov
imul
dec
enter
into
dec
jbe
in
sbb
adc
mov
or
pop
xor
frstor
and
pop
fidivrs
iret
div
xchg
and
loop
mov
pop
jae
mov
fistl
shl
dec
clc
jp
lea
fstps
xchg
popf
call
out
push
cmp
fdivs
mov
out
inc
or
and
jge
loopne
cmp
shlb
cmpsl
jne
mov
jbe
iret
sbb
push
dec
imul
dec
adc
movsl
push
scas
les
inc
sub
inc
cmp
mov
push
inc
xchg
lock
pop
popa
pop
ror
icebp
dec
test
jns
pshufw
push
mov
pop
push
cmp
sahf
xor
popf
pop
mov
mov
push
inc
mov
push
push
shlb
mov
rorb
dec
cltd
mov
rorb
cmpsl
mov
pop
test
or
lock
pop
pop
and
nop
div
outsb
insl
in
jb
ret
out
neg
xchg
sbb
test
or
lds
fisttps
and
ret
ss
mov
inc
in
jns
inc
insl
sub
push
push
std
popf
mov
cmp
pop
push
imul
loop
mov
xor
pop
xchg
dec
or
loope
jne
sub
test
pushl
stos
xchg
jae
xchg
sbb
cld
idivb
inc
data16
mov
in
jae
lret
enter
into
cmp
or
mov
addl
jl
scas
ret
add
dec
scas
into
mov
cmpsl
xchg
mov
incb
dec
mov
popa
or
add
rorb
in
sti
test
jl
outsl
scas
pop
jbe
lods
fildl
mov
ds
cmpsl
jecxz
into
into
mov
test
dec
scas
sub
call
push
hlt
stc
pusha
rorl
fisubl
rolb
xchg
adcl
xor
dec
and
out
std
rcrl
xchg
or
xchg
repz
dec
test
movsl
cld
mov
push
sbb
push
jns
ds
sahf
inc
pop
das
cld
fs
pop
xor
push
iret
inc
dec
cwtl
imul
mov
sub
out
mov
xor
int
arpl
sbb
jl
jnp
jne
fmul
or
inc
and
fs
mov
fiaddl
adc
adc
nop
clc
pop
xor
and
push
out
addr16
add
xchg
xchg
xor
dec
sub
ljmp
mov
mov
pusha
xorl
pop
or
pop
rcrb
sbb
jnp
or
mov
leave
sub
sbb
lahf
pop
jno
aad
imul
rorl
push
ds
adc
movsb
jno
push
jbe
jge
pusha
test
faddl
stc
xor
xchg
sub
lods
dec
fdivrp
test
sti
in
mov
mov
testl
cmc
or
ds
or
mov
fbld
scas
xor
fmul
push
pop
mov
movl
cmc
adc
mov
sti
jno
cli
movsb
or
xor
popf
mov
xchg
xchg
insl
pop
sbb
xchg
dec
pusha
xchg
xchg
adc
scas
xorb
add
jno
push
dec
adc
push
fucomi
cli
cwtl
sub
mov
jecxz
or
sub
pop
clc
sbb
inc
fistps
loop
adc
icebp
jns
loop
addr16
push
jb
lea
lret
insb
aas
jge
test
jno
push
adc
std
or
xor
std
ja
and
stc
pop
out
push
lahf
add
xlat
stos
ja
and
mov
fldl
std
sub
jno,pt
sub
out
pop
scas
mov
ljmp
and
clc
test
icebp
adc
pop
jl
in
mov
mov
push
mov
and
jle
data16
adcb
cwtl
in
rcl
pop
push
iret
shrl
mov
jae
mov
movsb
shrb
imul
push
xchg
inc
sub
cmc
icebp
pop
test
xchg
xor
and
inc
fcomps
dec
pusha
scas
adc
test
fcoml
rcrb
push
lods
ljmp
mov
jmp
pop
out
inc
ret
xor
cmpsl
popf
test
xlat
inc
inc
jmp
or
push
in
xchg
fisttpll
in
dec
push
lret
pop
decb
xchg
enter
sbb
push
pop
fmull
aam
or
aad
jno
pop
push
shrb
sub
aad
cli
xchg
lret
or
xor
mov
int
dec
sub
mov
ret
sti
pop
and
in
fistpl
nop
cmp
or
jmp
sub
daa
je
adc
sub
adc
cmp
scas
mov
jl
lcall
mov
add
outsb
in
js
das
lahf
jle
aad
inc
jge
repz
xor
das
adc
mov
mov
ss
hlt
lret
adc
inc
mov
and
mov
cmp
sbb
aas
mov
jle
cmp
ret
pop
out
add
shl
insb
add
dec
lret
cmp
adc
mov
iret
mov
in
imul
es
dec
les
fdivs
arpl
jo
faddl
movsb
sbb
out
stc
subb
int3
js
shr
jmp
lods
cmp
mov
sbb
xchg
push
lods
adc
inc
mov
cmpsb
push
into
jl
pop
adc
xchg
add
shr
xor
jle
dec
call
adc
rclb
idivb
stc
leave
fldcw
aas
adc
cmp
cmp
sub
ficomps
repz
in
push
jp
and
cmp
push
sbb
push
xchg
fs
lahf
shrb
and
cmp
lock
sar
call
push
addr16
arpl
xchg
fdivl
lods
inc
add
pop
out
xchg
sbb
adc
mov
inc
or
not
mov
test
adc
jns
mov
clc
mov
or
fnstenv
cmpsb
jmp
and
inc
fistpl
sub
icebp
jmp
xor
xlat
imul
add
inc
adc
fcoml
jecxz
adc
hlt
loope,pt
rcll
and
mov
dec
ja
fwait
std
mov
sbb
cwtl
scas
sub
xchg
or
in
push
xor
inc
and
movsl
std
dec
data16
sbb
in
mov
clc
cli
push
cmc
lret
pop
cld
mov
jge
fiadds
and
fisubs
and
mov
dec
dec
insb
fadds
shll
pop
cmp
movsb
popl
xchg
dec
int
es
test
in
pop
jno
sahf
or
stos
jo
and
mov
cwtl
and
mov
mov
xor
dec
fwait
pop
lret
les
fwait
cld
adc
push
test
mov
into
cmc
add
push
stos
mov
mov
xchg
scas
ja
dec
daa
ds
inc
cmc
pop
adc
pusha
and
mov
or
add
into
rorl
sub
icebp
cmpsl
test
dec
scas
sahf
fsubrl
movsb
pushfw
repnz
in
ret
inc
cmpsl
aaa
jl
xor
dec
dec
inc
mov
or
xor
add
rcrb
in
inc
sbb
jne
lcall
push
lea
lds
dec
loope
pop
dec
sub
iret
shrb
pop
sti
faddl
jge
in
or
adc
pop
lret
and
mov
and
push
dec
mov
sbb
ds
jne
lods
int3
pop
stos
cmc
mov
mov
sub
inc
add
lds
dec
jae
adc
xor
sbb
cmp
pop
push
jmp
clc
mov
dec
fdivrl
call
fmull
pop
in
insb
insb
stc
pop
sub
pushf
sbb
in
xchg
pushf
adc
fsubs
lret
shlb
xchg
sbb
sbb
sahf
and
jp
out
lods
jl
arpl
pop
popl
dec
cwtl
add
inc
test
xorb
add
cltd
mov
unpckhps
push
cmp
ds
mov
int
sub
push
pop
adc
or
push
aad
xor
xchg
inc
pop
leave
call
cwtl
mov
cmp
shlb
inc
inc
mov
push
lds
pop
pop
dec
and
or
cmp
cmp
xchg
xlat
mov
dec
xlat
mov
mov
jl
add
imul
sub
push
adc
dec
mov
push
mov
aam
cwtl
lods
data16
push
jo
imul
inc
cmp
lahf
enter
jb
dec
push
es
xor
fstl
data16
pop
lock
loop
pop
cmp
or
adcl
sbb
sub
pop
cmpsb
enter
mov
ret
inc
nop
push
aad
call
pop
fdivp
push
xor
cmp
xor
jge
mov
inc
in
or
test
pop
mov
jne
and
and
lods
xchg
loop
cs
addr16
jne
popf
icebp
jno
dec
mov
ja
int3
fwait
inc
addb
test
sbb
call
sub
fiadds
push
cmpsl
dec
xchg
sbbb
arpl
xchg
or
mov
mov
cmp
adc
mov
in
bnd
iret
xor
sbb
and
mov
out
mov
pop
pop
ljmp
xor
mov
hlt
mov
or
and
cmp
in
test
les
adc
testb
dec
sub
lret
cld
push
jb
test
mov
jmp
stos
jp
mov
out
ljmp
jo
xchg
imul
cmpl
sbb
lods
or
mov
pushf
adc
test
xchg
jnp
les
imul
mov
pop
xor
in
iret
add
mov
jne
sub
pusha
in
out
mov
cmp
pop
mov
mov
repnz
push
aad
sarb
mov
and
push
xchg
loop
add
lret
jge
ret
test
and
jbe
xor
mov
xchg
push
adc
mov
aas
pop
inc
clc
outsb
jne
pop
call
call
testl
aad
sbb
cwtl
js
ja
scas
gs
push
cmc
push
dec
adc
cld
jnp
outsl
testb
je
pop
aaa
pop
mov
push
and
leave
rcl
cmpl
pop
pushw
mov
lea
aad
pop
rcrb
dec
jae
mov
cli
xchg
adc
sarl
xor
sub
adc
xchg
push
sub
inc
and
jno
jb
mov
stos
and
jno
out
jns
and
add
test
nop
jge
mov
lods
jmp
sbb
repz
fmulp
lcall
inc
fld
cmp
and
std
mov
fstpl
addb
ficoms
xor
xorb
mov
xchg
pop
in
cmp
imul
sbb
ret
sbb
sbb
add
xchg
and
push
pop
scas
xor
imul
clc
jno
es
out
cmpsl
movsl
jl
sbb
sub
stc
andb
mov
movsb
pop
cmc
pusha
or
gs
rcrl
jnp
xchg
jbe
loop
movsb
cmc
sub
and
nop
xchg
add
jmp
or
faddp
imul
xchg
inc
xor
les
mov
addr16
mull
xor
rcrl
test
xchg
mov
pop
adc
mov
stc
es
pop
rorb
push
sbb
sbb
call
out
jnp
add
add
push
daa
popa
test
jmp
shlb
or
dec
mov
cmp
rol
mov
sub
leave
mov
xor
ret
sub
dec
pop
pop
adc
nop
mov
aaa
jb
enter
fisubrs
test
aad
movsb
pop
push
fcmovne
pop
sbb
xor
scas
inc
imul
cmp
inc
adc
dec
fildll
dec
add
sub
lods
sti
pop
pop
popf
rclb
insl
fistpll
das
xlat
iret
vdivpd
div
pop
pop
mov
imul
cli
in
pushf
and
lea
mov
out
fistpll
hlt
cmp
cmp
cmpsl
lcall
into
or
sub
mov
pop
ja
lahf
xchg
fistl
shll
xchg
ss
sbbl
xor
iret
arpl
insl
js
cli
mov
lahf
mov
inc
cmc
aas
jne
es
mov
imul
mov
stos
inc
ficomps
and
pushf
arpl
fsub
push
sub
dec
jns
mov
mov
or
popf
add
sub
push
idivb
insl
scas
mov
sahf
negl
xor
je
movsl
enter
jp
sbb
scas
ljmp
cmp
aas
movsbl
adc
inc
lahf
xor
or
jae
imul
mov
add
push
nop
sti
cmp
push
aad
int
mov
cmp
ret
mov
xchg
ret
mov
lahf
insb
mov
xchg
xchg
bound
pop
lcall
xor
icebp
in
push
and
pop
push
cmpb
enter
pop
sti
inc
xorl
stos
mov
outsl
push
pop
ljmp
mov
xor
rcll
out
mov
out
imul
push
cmp
sub
loopne
mov
push
ss
add
pop
lret
loopne
adc
sarl
inc
sbb
cmp
lods
outsl
lds
sbb
xorl
cli
dec
push
and
xor
and
fnsave
test
stos
add
outsb
jmp
xor
imul
arpl
mov
dec
push
add
xchg
push
pushf
lods
orb
xchg
cmp
adc
adc
xor
inc
lcall
xor
push
bound
pop
pop
sbb
call
jae
add
add
add
test
mov
xlat
pop
pushf
xchg
push
inc
insb
push
and
sbbl
xchg
fcom
mov
mov
pop
call
xchg
sarl
push
fistps
sub
jae
xor
sbb
outsl
cmp
outsl
rcrl
push
and
lea
mov
xor
ds
jp
mov
fwait
data16
js
lock
jne
jae
leave
xor
xor
call
cmpsb
mov
sub
ja
sarb
push
inc
imul
dec
and
pop
xchg
mov
pop
push
mov
add
cmpsl
mov
xor
or
dec
mov
orb
cwtl
mov
cwtl
daa
push
push
lcall
dec
test
xor
stos
xor
jl
insb
std
inc
jl
mov
cmc
add
in
daa
mov
mov
push
lret
push
mov
inc
dec
or
insb
aam
xor
ss
mov
cmp
int
cmpsb
pmulhw
pop
loop
in
flds
or
pop
mov
dec
in
clc
jb
mov
lea
mov
jne
jle
and
mov
clc
jae
add
push
push
nop
lds
pop
fsts
hlt
mulb
sub
sub
lret
sub
out
adc
shrl
push
ja
inc
rol
test
jl
pop
push
nop
jg
inc
adc
leave
dec
jp
dec
pop
pop
loop
pop
pop
test
push
lcall
xor
sbb
cmpsl
jne
pop
and
jnp
fistpll
lea
icebp
mov
pop
pop
lret
jns
fs
and
or
rcrl
outsl
in
push
xchg
sub
sub
addl
sub
outsl
movsl
jecxz
jecxz
in
and
cmp
and
jecxz
les
mov
xchg
out
jecxz
stc
xchg
nop
orl
loope
vrsqrtps
and
popf
or
dec
sti
xchg
ljmp
loope
jmp
adc
jmp
inc
das
adc
ficomps
push
call
rcrl
and
or
int
mov
xor
and
das
fs
ss
add
push
or
push
insb
add
push
in
clc
adc
xchg
jl
dec
popa
std
xor
jb
push
mov
xor
dec
mov
rcl
js
adc
dec
push
dec
jne
imul
test
xchg
add
or
test
ret
jp
cmpsb
adc
jge
lods
jge
imul
push
lods
pushf
scas
sub
inc
push
aad
in
ja
sbb
test
mov
shrb
je
mov
pop
cltd
repnz
jae
and
iret
popa
jmp
bound
add
add
sahf
insb
push
push
mov
sahf
sbb
push
js
aaa
leave
jb
hlt
adc
pop
mov
push
cmp
mov
ljmp
mov
and
xchg
les
bound
test
bound
sub
lea
pop
xchg
outsb
sub
cmp
lods
fstp
stos
stos
add
jnp
inc
cmp
test
inc
pop
cmp
clc
add
mov
aam
and
xchg
nop
fs
inc
adcl
jecxz
aad
sti
push
sbb
movsb
outsl
or
add
testb
cmp
mov
add
mov
push
imul
aas
inc
add
push
aam
jae
xchg
xor
sub
pop
loop
stos
sbb
je
dec
add
mov
xor
aaa
xchg
rol
int3
popa
aam
add
push
mov
test
stos
lahf
scas
adc
push
sub
out
aam
lcall
add
aaa
mov
sarb
mov
lea
inc
test
pop
outsl
push
push
or
add
cmpl
dec
mulb
or
and
leave
xlat
testl
icebp
dec
pop
mov
fimull
imul
sbb
inc
add
cmp
jg
stos
mov
insl
xchg
add
mov
jp
ret
mov
dec
stos
mov
jae
dec
mov
loop
test
daa
cmp
push
iret
push
loope
bound
jb
sbb
pop
xchg
fcoms
and
pop
rorl
dec
leave
mov
dec
in
repz
loop
out
dec
std
inc
shll
mov
ficoms
adc
pop
mov
lcall
push
add
repz
roll
or
push
bound
sarl
and
std
pop
pop
cmp
mov
dec
cld
and
sbb
fldt
or
mov
pusha
fildl
cs
dec
sbb
out
inc
and
imul
jle
add
or
cmpsb
shrb
jno
movsl
sub
jmp
ljmp
out
push
push
fcmovnbe
sub
iret
xchg
insl
fldcw
cmp
sbb
add
scas
mov
xchg
push
testb
ret
fisttpl
leave
cld
mov
pushf
in
in
lds
sbb
test
xorb
and
inc
imul
inc
pop
sub
jmp
icebp
stos
xor
int
push
pushf
mov
xor
xchg
fists
test
iret
in
cmp
and
dec
fstpl
xor
jle
test
jmp
pop
mov
ret
lret
push
push
sarl
jl
js
xchg
pop
es
jns,pt
cmp
push
pop
dec
pop
sub
fwait
push
add
adc
cmpl
aam
cmp
hlt
jle
add
jecxz
sbb
pusha
xor
adc
icebp
inc
or
push
pop
loope
dec
jbe
jg
movsl
add
dec
aas
call
das
hlt
push
scas
fidivrl
inc
jns
sbb
push
and
int3
add
out
xchg
or
dec
mov
lock
sbb
cs
pop
cmp
xor
or
add
cltd
gs
jle
sbb
fmul
pusha
xor
sbb
inc
dec
fldt
sub
add
xor
push
xor
and
fldt
add
inc
dec
jnp
pushl
adc
cli
rcr
jb
mov
es
cli
in
lods
add
cmp
push
aad
mov
push
mov
and
mov
jns
pop
sub
mov
test
mov
mov
cmp
jp
push
movsb
xor
jno
sub
xor
mov
stos
mov
or
idiv
aam
imul
bound
pop
xchg
pop
mov
pop
in
pop
cmc
xor
or
push
outsb
push
icebp
push
in
popf
fs
cmp
out
xacquire
push
loope
pop
mov
jns
add
mov
in
sbb
adc
xchg
cwtl
push
jg
ds
mov
and
ret
arpl
sahf
int3
mov
mov
sbb
inc
clc
pop
insl
push
loopne
fucomip
mov
lcall
or
push
loop
sub
cmp
stc
jecxz
sbb
jge
ja
dec
xor
out
sbb
pop
inc
mov
sbb
jmp
cld
add
inc
movsl
bound
pop
sub
mov
decl
cli
mov
jae
cli
mov
inc
scas
and
cmpsl
mov
pop
cmp
subb
sub
xchg
adc
mov
fdiv
jno
sbb
pop
pop
mov
mulb
aas
lahf
adcb
dec
jnp
lods
movsb
mov
addr16
or
fs
imul
and
aad
adc
mov
push
push
mov
xchg
das
into
test
div
or
hlt
dec
pusha
lretw
jle
insb
aad
mov
inc
pop
gs
or
cmpsl
mov
xchg
test
sbb
pop
and
ja
sub
or
test
fdivrs
leave
lds
sub
mov
fimuls
pusha
ds
test
cld
adc
jl
test
sbb
push
or
xlat
or
cld
and
mov
sbb
imul
inc
inc
dec
jle
xlat
js
fidivl
jle
xor
mov
adc
inc
loopne
adc
mov
mov
add
xchg
push
aam
push
pop
aaa
push
and
xchg
bound
imul
les
pop
bound
xchg
daa
sbb
aam
push
sahf
dec
or
cltd
xchg
hlt
lock
lret
sbb
test
nopl
pop
imul
inc
daa
pop
scas
sbb
mov
movsl
xor
xchg
andb
or
xor
fiaddl
hlt
push
aam
fstp
mov
pop
ds
mov
rolb
aad
push
loope
add
add
mov
aas
xchg
jg
add
cmp
imul
sbb
inc
sub
cmp
or
pop
les
cmp
xchg
outsb
adc
dec
fwait
imul
pop
jns
enter
xor
movsl
lret
loope
aas
test
inc
mov
in
and
mov
je
or
dec
out
mov
fisubl
jno
adc
and
mov
repz
mov
mov
iret
movaps
mov
push
push
jg
jno
push
out
js
mov
mov
daa
fisttpl
pop
adc
rcll
pop
test
insb
fs
lret
pop
scas
repnz
aad
mov
and
punpckhwd
dec
inc
lret
xor
mov
fimull
or
js
jb
clc
mov
mov
stc
imul
xchg
add
jbe
dec
jle
push
mov
leave
and
inc
in
jl
sbb
sbb
popf
lea
popf
int3
sbb
xchg
xor
rorl
xlat
sub
cli
clc
icebp
dec
xchg
mov
and
sbb
add
mov
sub
push
mov
das
push
and
xchg
adc
adc
jmp
lods
arpl
or
stc
jb
xor
insb
adcl
jle
jg
inc
mov
enter
cmp
fdivrl
cs
data16
int3
fnstsw
jl
icebp
xor
xor
pop
mov
cmp
arpl
jno
std
push
outsb
ds
stos
fmull
mov
mov
mov
and
mov
sbb
sbb
cmp
inc
jle
pop
cmc
mov
sub
mov
movb
and
subl
inc
ljmp
rcrb
rorl
cmp
cmp
adc
test
in
jmp
cmpl
lea
outsl
pusha
stos
cmpsb
jmp
fsubrs
sahf
stos
xchg
fistps
loopne
leave
sti
push
fst
sub
jp
mov
jecxz
mov
dec
sbb
ja
add
mov
fcmovu
sub
cmp
or
mov
in
dec
mov
mov
outsl
stos
xchg
push
mov
and
jnp
dec
pop
push
mov
xlat
fs
or
leave
movups
mov
xchg
pop
addr16
lods
es
xchg
push
push
lods
add
and
mov
mov
inc
mov
or
scas
sub
ud2
cmp
xchg
mov
hlt
aad
inc
adc
test
hlt
mov
pop
subb
loope
add
outsb
lret
mov
in
cmp
fwait
mov
adc
adc
in
mov
dec
adc
les
sub
pop
es
mov
addr16
dec
jg
push
mov
xchg
insl
xor
push
and
or
in
dec
cmp
push
pop
rcrl
xchg
and
mov
mov
in
and
lahf
inc
out
dec
loop
adc
push
outsl
lahf
mov
adc
xorb
and
jae
call
loopne
adc
mov
hlt
cmp
daa
inc
fwait
jmp
incl
inc
imul
or
cmp
rclb
sub
js
scas
lock
test
adc
dec
mov
pusha
sbb
ds
sbb
iret
push
mov
inc
xor
jp
jg
or
adc
dec
loope
jnp
and
sbbl
inc
mov
adc
and
push
jbe
test
pusha
popf
or
mov
aam
pop
jle
adc
inc
inc
lods
jle
or
fistpl
bnd
jg
mov
repz
dec
jno
sbb
dec
sub
mov
out
push
xor
fs
daa
arpl
mov
cmc
out
ficoml
jo
jnp
sbb
in
jno
mov
mov
or
lcall
fmull
fcompl
iret
int
dec
mov
sbb
sbb
sbb
sahf
bound
or
add
test
les
push
add
call
sub
xchg
cmp
cwtl
jge
andb
jnp
xor
arpl
lods
adc
rcll
bound
dec
ss
stos
mov
neg
push
in
pop
mov
hlt
jg
mov
adcl
outsl
shll
dec
or
xchg
cltd
out
lcall
faddl
cli
xor
out
je
cmp
out
adc
xchg
negb
jns
fisubl
movb
fidivl
xor
dec
mov
xchg
xor
sbb
lahf
fadds
in
mov
add
jmp
inc
and
out
or
jecxz
jg
inc
push
lcall
stc
pop
inc
lock
xor
xor
daa
jb
fwait
cmp
andl
and
imul
add
lock
out
adc
shll
stos
xor
or
mov
insl
jg
xlat
xlat
clc
push
jle
rcrb
mov
out
movsb
leave
js
or
dec
lock
pop
out
mov
cmp
push
popa
adc
js
insl
push
fs
mov
pop
aaa
mov
jmp
cwtl
cli
fisttps
mov
cld
ret
mov
mov
sbb
insl
cmpsb
sbb
fmul
into
adc
test
xchg
leave
mov
lock
stos
movsb
adc
lret
jne
sti
mov
xor
pop
int3
fstp
loope
sub
sbb
add
movb
dec
push
or
data16
add
mov
mov
xor
mov
mov
sti
cmp
js
and
xchg
imul
push
push
dec
and
fldcw
not
mov
lcall
sarb
out
pop
rolb
mov
stos
pop
xchg
iret
subl
pop
add
mov
dec
aad
aaa
hlt
arpl
or
dec
daa
ret
arpl
cmpsl
and
mov
cmp
xchg
mov
or
push
cmp
jg
lock
in
sub
int
jnp
in
push
mov
push
xlat
lea
lods
add
inc
cltd
add
int3
pop
in
push
inc
adc
rep
mov
shlb
jno
aas
or
and
pop
cli
mov
shrl
mov
pop
sbb
inc
mov
push
andl
leave
xor
stc
sub
sub
js
dec
pop
fimuls
aas
pop
add
notl
sbb
popa
in
in
sub
cmp
mov
loopne
dec
ds
arpl
hlt
dec
daa
xchg
add
pop
mov
inc
or
jg
adc
dec
nop
sbb
lahf
fisubs
sub
icebp
dec
out
xor
mov
mov
je
testb
int
push
gs
int3
mov
sti
in
movsb
xor
adc
lods
push
cmp
xchg
dec
add
fsubrl
sub
aam
jnp
sti
out
mov
mov
push
push
pop
cmp
dec
cwtl
in
pusha
cmp
xchg
mov
mov
les
mov
sbb
inc
mov
cmp
xchg
add
iret
shrl
xor
pop
divl
scas
aaa
xchg
jp
and
push
js
jbe
lret
sub
aas
cmpsb
or
dec
hlt
and
or
push
les
cltd
scas
testl
int
jae
lock
imul
jbe
dec
xor
loop
les
push
jmp
lret
inc
adc
cmp
das
stc
mov
lret
arpl
test
lret
push
sbb
sbb
and
xor
mov
xchg
xlat
sti
ss
fwait
mull
outsl
dec
sbb
and
aaa
test
mov
addr16
dec
xor
sahf
dec
jno
mov
ucomiss
ja
aam
xchg
cmp
mov
and
xor
add
pop
loop
xlat
in
jl
and
repnz
int3
push
mov
shlb
data16
push
popa
jp
mov
and
stos
loop
lahf
pop
xchg
push
push
adc
arpl
insb
jnp
sub
push
int
xchg
daa
adc
mov
outsb
mov
inc
fidivs
mov
cmp
or
repz
xor
les
sbb
or
shld
dec
in
pop
iret
xchg
fists
call
test
and
xchg
mov
add
std
fistpl
imul
or
adc
ljmp
mov
jne,pt
dec
and
int
xor
mov
out
aaa
jo
mov
sar
mov
push
pop
pop
aam
jns
je
inc
cwtl
push
cmp
test
lds
int3
mov
jo
push
xor
xor
or
push
mov
inc
sbb
jae
jb
adc
and
sub
adc
addl
mov
pop
popf
sbb
insl
adc
test
xchg
ficomps
mov
mov
push
xchg
mov
adcl
sbb
cs
inc
js
mov
jae
and
and
fnstcw
decb
jbe
stc
add
pop
push
mov
mov
fsub
repnz
shrb
dec
mov
add
lea
mov
cmp
pop
push
jbe
xor
or
imul
lock
ljmp
lea
popf
cld
xlat
jae
ljmp
mul
lds
inc
push
inc
xchg
pusha
or
mov
push
mov
in
testb
imul
sbb
mov
push
pushf
xlat
out
inc
lcall
ficomps
out
adc
fidivl
add
fmul
inc
imul
xchg
fcmovnu
bound
dec
xor
inc
pop
dec
jns
cwtl
sbb
enter
adc
add
push
adc
inc
pop
mov
insb
mov
and
mov
stc
shlb
push
lods
inc
cmpsb
cmc
fwait
std
enter
fs
cmpsl
test
loop
inc
mov
pop
leave
ds
jl
mov
xchg
outsb
jb
mov
inc
sarl
stc
xor
lea
fisubs
or
into
push
rcrb
mov
push
pop
int
or
add
mov
or
fistps
dec
imul
mov
clc
or
fwait
lahf
fisubrl
dec
rcr
shlb
add
imul
aam
fdecstp
push
pop
cmpsl
xchg
jns
pop
imul
std
shrb
jle
xor
rcrl
rcll
test
loope
outsb
sti
ja
inc
in
out
push
fsts
or
fsubrp
aas
mov
inc
test
bound
fsubs
mov
or
iret
sbb
cmc
cli
jle
add
enter
pop
call
sub
inc
data16
jb
fisubrl
test
int3
add
sbb
push
add
cwtl
mov
cmpsb
fimuls
pop
cmpb
out
out
lods
inc
adc
lods
sub
scas
sbb
aas
and
arpl
push
xchg
xor
inc
sbb
loopne
inc
imul
mov
jge
cltd
push
out
fwait
inc
les
cmp
test
repnz
inc
and
xor
fimuls
adc
movsb
nop
or
clc
arpl
cmpsl
fisubrs
adc
xor
mov
jns
out
hlt
sahf
inc
jg
mov
cli
xchg
dec
xor
ljmp
xor
mov
xorl
sub
mov
mov
push
mov
sbb
xor
jmp
adc
leave
les
add
leave
adc
and
dec
bnd
push
loope
out
loopne
mov
orb
notl
mov
jb
cmp
xor
popf
stos
xor
incl
mov
xor
scas
cli
mov
xor
dec
test
push
pop
loope
cmp
mov
xor
or
fmull
and
lret
pop
xchg
adc
ret
fldl
fistpll
out
or
cwtl
cmp
and
inc
icebp
mov
enter
das
ja
mov
mov
pop
xchg
incl
arpl
dec
push
int
pushf
mov
bound
or
sub
jmp
das
jge
dec
aad
fistl
pop
or
mov
js
pop
imul
pop
xor
scas
mov
or
fadds
fdivrs
out
cmpsl
push
jmp
dec
test
icebp
dec
add
and
xchg
movsb
jl
pop
adc
pop
addr16
gs
scas
or
or
cwtl
fisubrs
mov
inc
mov
sahf
add
pop
getsec
jmp
loop
cmp
ret
pop
fs
fdivl
xchg
rorw
test
enter
mov
fistpl
xor
jecxz
ffreep
scas
sbb
clc
in
cld
sti
and
sbb
idivl
mov
push
push
push
mov
xor
dec
xchg
add
sbb
int3
dec
outsl
sbb
and
ja
mov
sbb
pop
jg
mov
repz
mov
rorb
xor
xor
xor
dec
hlt
lods
xchg
sbb
mov
sub
and
and
xchg
icebp
dec
cmp
sub
sbb
aam
inc
mov
imul
add
jae
mov
lahf
cli
xchg
in
push
out
ds
ljmp
xor
and
int3
les
mov
adc
scas
mov
es
out
jl
int3
dec
sub
mov
frstor
ja
adc
xchg
or
jl
outsl
jbe
leave
in
inc
into
scas
and
fistps
fadd
xor
or
pop
mov
hlt
and
daa
sbb
add
popf
jns,pt
jl
mov
and
or
fcoms
add
test
mov
in
popf
stc
push
dec
sbb
adc
add
in
xor
push
sbb
dec
in
cmp
sbb
outsb
addr16
xor
mov
jns
movb
jbe
pop
add
lds
les
orl
pop
popa
push
ds
mov
in
inc
dec
shlb
leave
adc
add
loopne
sbb
sbbl
push
daa
sti
push
lret
movsb
jo
pop
cltd
bound
negl
dec
bound
in
and
push
dec
je
jg
xchg
vcmpss
out
jae
jge
fmull
cltd
sub
mov
add
outsl
shl
push
scas
call
ret
movsl
cs
mov
insb
sarl
or
outsl
mov
in
dec
in
xchg
adc
xchg
xchg
lods
into
sub
int3
xchg
pop
cmp
dec
inc
mov
aam
sti
faddl
mov
xchg
xchg
push
int3
pop
out
cmp
ficoml
fs
inc
jge
push
and
repnz
roll
jne
and
mov
je
or
inc
movsb
mov
cmp
insb
ss
jns
loop
frndint
add
add
adc
cltd
popa
push
in
faddl
fsub
pop
shr
mov
lods
push
icebp
adc
push
or
pop
mov
jmp
jge
lahf
scas
test
dec
scas
fwait
loopne
js
mov
imul
push
xlat
dec
sub
or
and
push
lock
int
pop
icebp
rcl
mov
cmp
push
stc
jmp
popa
mov
imul
and
jecxz
out
aad
addr16
push
jns
inc
sbb
imul
imul
shlb
fsubrl
adc
fs
out
scas
push
arpl
sbb
or
test
in
and
mov
xchg
insb
in
ja
add
data16
aaa
cmp
arpl
or
cmp
fiadds
xor
testl
jge
sbb
arpl
dec
push
je
movsb
push
pop
or
jbe
mov
xchg
mov
and
add
adc
outsl
jp
dec
dec
shll
enter
test
in
shrb
int
dec
jecxz
and
jge
outsb
and
jb
inc
dec
push
stos
sub
or
pop
hlt
xchg
popf
psrld
shlb
in
ss
mov
mov
add
hlt
mov
enter
sbb
mov
pop
fnstsw
ficompl
jge
call
dec
dec
fwait
aaa
xchg
mov
mov
clc
aaa
jno
inc
xchg
aam
mov
iret
or
movsl
push
cmpsl
into
rcll
push
repnz
cmpsb
nop
add
adc
jbe
std
scas
xor
aam
hlt
jbe
mov
mov
mov
mov
push
ret
rol
sub
insl
iret
test
mov
fcomi
dec
pop
or
adc
xchg
dec
cmp
jae
ret
sub
jmp
scas
inc
jecxz
leave
xchg
repz
push
outsl
imul
pushf
mov
mov
lds
aas
dec
cmp
aas
and
xchg
clc
push
xchg
inc
mov
lcall
stc
xchg
sbbl
imul
mov
sub
inc
sbb
shlb
and
ljmp
ret
addl
mov
adc
pop
jo
push
sarb
lds
mov
pusha
pop
adc
mov
add
repnz
outsl
ficoml
adc
test
mov
cmc
movsb
ret
mov
scas
push
stos
sahf
mov
and
outsl
test
mov
jp
inc
xchg
mov
loop
lods
mov
and
ja
mov
mov
pop
das
scas
pop
sbb
push
hlt
jb
sbb
fcmovnu
xchg
sbb
jl
mov
sbbl
es
add
mov
pop
rcrb
andb
and
and
sbb
cmp
cmp
ret
fisubs
adc
lods
mov
sub
sbb
iret
es
ds
and
arpl
loope
iret
jmp
jle
mov
nop
into
xchg
addr16
ret
push
push
pop
adc
lods
jns
push
add
and
imul
jle
int
cwtl
jg
xor
jo
lea
std
fldt
mov
mov
pop
rcll
pop
lods
jl
je
aad
movb
jns
std
insb
adc
or
sub
iret
sti
sub
test
sbb
fstpl
fnstcw
ret
xchg
insb
stc
clc
or
lret
mov
xor
mov
scas
or
fxch
rolb
cmpsl
lds
xchg
push
sahf
push
icebp
mov
push
sbb
hlt
call
and
jnp
and
mov
and
or
gs
aad
mov
pop
cmp
xchg
xor
cmp
sub
inc
mov
xor
xor
cmpsb
repz
inc
test
mov
es
ss
xor
mov
enter
jo
mov
jecxz
fwait
adc
xchg
icebp
out
pop
push
cmp
mov
movsl
clc
jmp
ss
or
sub
popl
sbb
out
xor
nop
shll
mov
add
cmp
sbb
rclb
inc
sbb
jnp
in
jl
in
mov
aad
mov
push
loopne
sbb
adc
add
push
cmp
loope
push
cmpsb
jne
dec
adc
dec
dec
push
cli
mov
cli
lret
stos
or
push
mov
call
test
cld
push
jno
pop
into
mov
lock
fwait
add
push
and
lret
mov
fsubrl
xchg
add
es
scas
out
test
test
xor
push
outsb
roll
and
xchg
or
stc
out
shll
cmp
inc
sub
xchg
int3
aaa
and
mov
add
push
popa
fisubl
pop
js
cmp
xlat
mov
icebp
adc
inc
jmp
mov
xlat
int
and
cmp
insb
pop
and
js
test
nop
add
pop
les
fwait
xchg
lods
xor
add
pop
adc
setp
mov
mov
out
inc
adc
div
and
mov
pop
xor
add
movsl
pop
subl
fsts
cmc
jecxz
push
or
mov
bound
in
int
push
fadds
pop
inc
pop
mov
sub
mov
add
jnp
in
cmp
and
into
pop
pushf
ret
loop
add
cmp
jne
sub
lods
xor
movsb
adc
sbb
dec
loopne
jns
adc
jmp
fs
icebp
inc
aas
je
stc
hlt
xchg
sbb
pop
jmp
add
push
inc
xor
xchg
aas
xchg
roll
call
ss
jecxz
ds
jge
out
jp
call
inc
adc
in
jle
aam
ret
mov
mov
out
jecxz
gs
add
cmp
jae
fstps
outsl
mov
and
stos
test
pop
push
push
test
sub
in
jg
dec
addr16
stos
mov
insb
cld
or
lods
icebp
xor
daa
push
sti
xor
xor
or
mov
shrb
in
sbb
in
mov
mov
xchg
pop
mov
xor
xchg
sub
out
adc
add
inc
es
mov
mov
push
xor
pusha
mov
aaa
or
lods
pop
jno
dec
mov
jmp
sub
call
mov
out
push
pop
xchg
insl
lds
je
adc
fcmovne
push
sbbb
cmp
pushw
inc
mov
dec
pop
xor
imul
mov
or
add
or
shr
jbe
lcall
insl
fildl
mov
mov
rcrb
jo
sub
shll
stc
add
sub
push
jle
push
mov
leave
sbb
movsl
nop
xchg
insb
pop
and
sbb
jno
hlt
xchg
cmp
cld
pop
inc
subb
cld
rorl
xor
pop
inc
mov
lock
push
mov
jae
cmp
and
mov
out
icebp
test
mov
mov
jnp
shll
movsb
fsubrs
sti
sub
sar
push
ja
stc
fidivrs
jmp
aam
orl
cli
ja
xchg
mov
dec
insl
insl
dec
es
aam
sbb
data16
mov
mov
jl
jns
js
aaa
push
mov
imul
jbe
fadd
mov
scas
cltd
imul
lret
jl
adc
mov
pop
xchg
inc
loope
dec
push
fucomip
inc
je
out
and
cmc
sbb
lods
js
movb
std
jge
ret
or
adc
xchg
ret
cs
daa
loopne
lock
add
xor
jno
and
dec
int3
test
insl
lcall
rclb
js
pop
pop
xchg
add
jecxz
js
pop
ret
dec
int3
or
push
ljmp
xchg
xor
negb
add
sub
mov
jne
or
leave
enter
cmp
mov
jb
or
mov
cmp
or
cs
mov
cmp
mov
push
insl
push
xor
dec
jecxz
fdivrs
notb
push
inc
call
fbstp
xor
push
imul
adc
stos
lss
pop
aad
dec
dec
je
push
dec
arpl
xchg
xchg
aam
ja
add
adc
sbb
lock
pusha
jns
filds
sbb
fisubrl
test
fwait
mov
lret
popa
inc
js,pn
mov
stos
dec
sbb
mov
fstp
rcrb
xor
mov
jo
adc
xchg
test
mov
xor
clc
sbb
mov
pop
sahf
sti
sub
mov
lcall
dec
or
dec
xlat
ss
lods
cli
movsb
or
lods
sti
jo
push
push
push
push
dec
stos
arpl
mov
sbb
pop
bound
fistpl
or
leave
push
sarl
stos
pushf
add
into
push
aad
push
call
jae
pop
jp
mov
jl
idivb
sahf
rclb
jno
mov
js
and
xor
fildl
ljmp
add
add
daa
aaa
iret
enter
jae
cmp
xchg
cmp
aam
shl
gs
adc
inc
lret
mov
sbb
in
xchg
test
push
push
rclb
jmp
mov
mov
fcom
or
or
lret
inc
sub
out
pop
or
insb
fisttpll
jnp
push
stos
xchg
mov
mov
cli
and
jmp
pop
mov
stos
lock
mov
dec
or
lds
repnz
fcmove
mov
jp
bound
or
cmp
fwait
dec
mov
mov
xchg
rorl
das
loope
cs
jle
jno
repnz
adc
sbb
add
xorb
lods
data16
adc
jmp
inc
pop
sahf
fldln2
lds
andb
adc
outsb
das
or
and
adc
cmp
addb
dec
mov
shlb
das
dec
mov
inc
nop
rclb
and
lahf
mov
aad
mov
repnz
push
imul
xor
andb
orb
or
jmp
xlat
fcoms
lock
inc
mull
nop
mov
outsb
dec
adc
daa
test
add
call
icebp
adc
add
test
jb
int3
push
test
mov
clc
stos
adc
jbe
lods
cmp
pop
inc
lock
pop
dec
mov
cmc
pop
adc
mov
bound
and
call
popf
pop
inc
stos
mov
scas
jp
xchg
stos
xchg
push
stos
fstps
sub
aad
push
pop
mov
fs
push
or
pop
pop
or
mov
fisubs
scas
cltd
mov
jo
clc
outsl
es
mov
int3
jb
sbb
jmp
and
aam
stos
pop
repnz
shll
adc
mov
or
in
mov
loopne
dec
movsl
pop
aad
shrb
cmp
push
int3
xor
cltd
cwtl
stc
push
data16
mov
in
lret
mov
sti
ss
sub
mov
jmp
pop
loope
rorl
sarb
addr16
push
sbb
fsubs
jne
or
repnz
and
sbb
je
cmp
es
pop
dec
pop
fucom
mov
cli
xor
dec
ljmp
cmc
nop
bound
inc
stos
in
shll
jp
xchg
mov
jmp
push
jno
scas
es
mov
insl
add
or
dec
icebp
cmp
jb
adc
push
xor
mov
clc
ret
ljmp
repz
sub
movsl
in
xchg
mov
outsb
add
sbb
push
pop
int
cli
adc
push
imul
and
push
rorb
or
xor
mov
inc
test
jnp
fdivs
jecxz
push
clc
push
je
pop
mov
ret
iret
jne
push
sbb
sbb
inc
je
and
rcll
ret
pop
cmpb
pusha
imul
lret
mov
dec
jbe
aaa
stos
rcll
jg
adc
sub
adc
lds
push
mov
int
sbb
aam
xor
pop
xorl
xchg
inc
adc
inc
and
repnz
and
inc
movsb
mov
jge
data16
je
mov
mov
test
jle
push
dec
sub
or
pop
or
enter
jle
mov
shlb
mov
push
push
lcall
in
push
maxps
pop
add
xor
adc
mov
movsb
movb
popa
sbb
or
dec
dec
jo
mov
sub
xor
pop
enter
xchg
cmp
jne
inc
cmp
shl
push
adc
lock
out
mov
stc
push
lea
aaa
fxsave
sbbl
icebp
dec
mov
push
outsb
jp
mov
and
xchg
xor
mov
insl
imul
addr16
adc
cmp
mov
dec
xor
jle
mov
add
and
adc
mov
push
xchg
lcall
mov
pop
idivb
cmpsl
clc
scas
xchg
xchg
hlt
sbb
dec
shll
int
ljmp
xchg
jmp
dec
push
addr16
xchg
movsl
int
pop
sahf
jge
inc
mov
mov
xchg
mov
dec
mov
pop
xor
scas
leave
adc
sub
outsb
mov
jb
pop
sbb
xchg
mov
rclb
in
jb
jmp
pushf
xor
shr
push
ds
cli
dec
pop
fadds
fiaddl
jae
fidivl
data16
xlat
mov
jmp
clc
into
xchg
adc
arpl
pushw
mov
mov
pop
mov
mov
notl
xlat
add
mov
fwait
into
fsts
in
jne
js
xor
sub
push
jnp
mov
lds
and
scas
pop
inc
add
sub
cld
jl
mov
dec
int
int3
fldt
insl
cmp
inc
xor
mov
cli
stc
push
mov
mov
mov
sub
mov
iret
pushf
mov
lcall
or
inc
in
inc
gs
dec
out
aad
or
mov
movsb
nop
mov
orl
cmp
lahf
dec
popf
xchg
dec
mov
mov
fcmovnu
aam
add
and
inc
pop
stos
mov
cmp
icebp
lock
mov
js
pop
rcl
mov
bnd
fmull
xor
imul
mov
in
and
xor
or
outsl
rcrb
mov
pop
popf
pushf
mov
dec
mov
cmpsl
push
lahf
js
sbb
dec
std
sar
inc
ljmp
cld
lahf
push
xor
in
cmp
sbb
ret
aam
push
int3
mov
sub
xchg
mov
and
dec
pop
std
insl
inc
xchg
into
pusha
jbe
insl
sbbl
mov
pop
inc
test
and
icebp
jae
into
dec
das
lahf
inc
aas
push
push
jl
mov
mov
imul
aaa
call
clc
lahf
dec
sbb
mov
in
jp
mov
xchg
sub
jle
insl
insl
in
xor
movsl
stc
lock
out
jo
popa
ret
aam
sahf
call
mov
mov
in
sub
cmp
push
inc
les
arpl
add
inc
mov
out
jle
pop
ret
fcompl
or
imul
dec
inc
sub
inc
cmp
imul
jecxz
jbe
mov
xchg
fnsave
fbstp
fists
sub
loop
xor
jnp
adc
aaa
popa
inc
or
daa
jp
xor
fisubs
cmc
dec
jnp
mull
je
das
adc
fdivs
jg
aam
jns
lcall
and
xor
dec
cmpsl
addb
std
mov
adc
sti
call
lods
daa
dec
test
pop
cmp
push
je
xor
sbb
sub
adc
scas
mov
sub
lods
push
or
and
sarl
pop
in
lret
and
int3
jmp
shlb
add
je
aad
ret
sub
fdivl
lahf
std
push
add
mov
xchg
cmpsb
and
xor
scas
jl
mov
cli
ds
xchg
mov
adc
jle
dec
adc
cmc
rcl
sub
pop
out
adc
mov
lods
mov
lock
fs
inc
xorb
inc
shrb
and
sub
mov
jge
enter
ss
jne
cltd
and
cmp
jp
fs
add
xlat
stc
jno
mov
ret
in
out
cs
fildl
stos
adc
adc
mov
sub
aas
pop
icebp
mov
in
jne
inc
xor
in
movsl
cmp
sbb
insb
in
loopne
cltd
lea
adc
mov
in
sbb
mov
add
jo
mov
mov
jb
pop
adc
mov
push
pop
addr16
xchg
add
mov
or
imul
xchg
jbe
xchg
or
and
inc
outsb
js
pushf
fucomip
pop
mov
or
jbe
dec
sub
sbbb
lahf
pop
sub
mov
cwtl
loope
mov
cmpsl
xchg
lahf
inc
xchg
pop
xchg
xchg
lret
or
test
test
roll
push
loope
lea
call
data16
aas
rcrl
pop
bound
outsb
mov
loope
ljmp
mov
fiaddl
cmpsb
sub
stos
push
adc
mov
mov
xchg
jge
fisubrs
cmp
addr16
adc
jo
shrl
loop
lret
scas
in
sbb
jmp
jno
cwtl
xor
push
adc
push
mov
idivl
fdivrs
jb
dec
mov
pop
add
dec
das
cltd
or
into
pop
mov
aas
inc
js
les
in
sbb
sub
or
xor
pushf
or
xchg
sbb
sub
setp
mov
inc
sub
popf
das
mov
mov
push
pop
movsb
stos
pop
and
test
subl
push
adc
xchg
test
nop
xlat
mov
cmp
sbb
xchg
mov
adc
sti
fsubs
xor
js
out
in
pop
and
add
inc
fmull
pusha
sahf
fldcw
mov
dec
add
jg
popf
pop
push
adc
aas
imul
xlat
jg
xchg
data16
or
push
jns
pop
cmp
inc
cltd
sbb
bound
pusha
mov
das
jle
stc
sub
xor
and
insw
fwait
movsl
push
push
leave
inc
cmp
pop
sub
dec
mov
mov
aam
out
jne
loopne
xor
fmul
sub
insl
call
out
cli
sbb
out
xor
adc
scas
cmpsl
dec
je
lcall
push
sub
dec
iret
aas
adc
imul
xor
jl
in
mov
inc
push
aas
out
loopne
outsb
pushw
je
out
jmp
clc
mov
cs
filds
out
sbb
sbb
inc
xchg
ljmp
loop
sbb
mov
ljmp
call
push
iret
cmp
out
cmc
loope
jae
movsl
lret
imull
jecxz
loope
test
xchg
sahf
pop
dec
in
call
xor
mov
hlt
icebp
push
orl
orb
mov
lock
push
fdivrs
jnp
or
dec
and
enter
jnp
lret
in
mov
sbb
mov
mov
fmulp
pop
jo
leave
stos
mov
cltd
mov
mov
sub
sar
insb
subl
jae
lea
push
into
pop
jae
and
push
scas
incl
push
and
ret
jl
lret
cmc
sub
mov
jge
sbb
rorl
clc
fcompp
testb
sub
in
mov
lcall
cwtl
rol
push
outsl
push
mov
push
aad
imul
pop
mov
mov
int3
pop
popaw
pop
rcrb
out
dec
icebp
xchg
insb
sub
and
pop
mov
sti
cmpsb
ficompl
dec
jb
adc
jnp
test
out
push
jno
in
mov
sub
and
jmp
pop
pop
cli
xor
dec
or
add
jge
aad
add
jle
xor
std
in
lods
adc
add
sub
pusha
add
sub
idivl
and
push
in
xor
sub
dec
add
add
xchg
das
mov
add
pop
in
jne
or
sub
arpl
repnz
iret
imul
enter
ja
add
addr16
enter
dec
js
rorb
xor
mov
push
stc
inc
cli
out
pop
push
pop
mov
mov
scas
out
std
cmp
cmp
push
lret
lret
sarb
jl
daa
add
xchg
in
and
ret
inc
cmpsb
push
out
out
pop
and
add
maskmovq
mull
inc
xchg
pushf
sbb
cld
xor
sub
mov
in
mov
push
loopne
popa
inc
adcl
pop
loopne
xor
clc
jnp
nop
in
faddl
repnz
xchg
fdivrl
sbb
mov
xor
mov
rcll
out
xchg
test
pop
nop
jmp
mov
inc
sbb
mov
jge
movsb
xchg
mov
mov
pushf
mull
jp
mov
cmp
out
add
dec
mov
gs
xor
jne
push
pop
fcomps
inc
xchg
loopne
pop
sbb
pop
nop
mov
fsubp
lods
dec
in
xchg
js
dec
int3
pop
mov
stos
xchg
fsubrl
xor
icebp
pmullw
repz
addr16
or
pusha
insb
fs
cmpsl
jmp
mov
repz
or
sahf
mov
iret
or
out
cmc
xchg
cmc
lods
push
jle
std
in
push
cli
insl
rorl
xor
pop
inc
lcall
loope
push
imul
cmpsl
insl
shl
cmpsb
mov
cmp
dec
or
or
jg
push
cmc
js
push
cmp
and
add
clc
clc
orb
or
push
bound
mov
cmpsl
adc
mull
pop
test
lea
sahf
int3
in
and
cmp
xchg
xchg
mov
sbb
mov
test
xchg
jl
andb
add
loopne
aad
mov
pushf
add
adc
les
pop
testl
inc
sbb
sbb
pop
insb
clc
push
pop
xchg
mov
adc
mov
jo
dec
push
pop
cmp
iret
daa
ror
push
ds
mov
inc
pop
or
popf
les
mov
imul
cmp
xchg
and
iret
aad
inc
outsl
loop
dec
and
enter
movsl
adc
dec
xor
rorb
sbb
push
lods
pop
push
dec
dec
mov
mov
or
sbb
fidivrs
mov
mov
sub
xor
in
push
jb
cmp
pop
pushf
mov
mov
rcll
push
dec
push
sub
xchg
andl
loop
dec
xchg
or
adc
add
negb
or
xor
jmp
jge
repnz
int
ds
rcrb
xchg
push
rcll
push
or
imul
sub
leave
jl
jnp
adc
repz
jecxz
mov
out
inc
sti
sub
xchg
lahf
and
aas
add
xor
in
in
mov
icebp
test
shl
ss
test
jge
sub
loope
outsl
sub
in
xchg
in
adc
xchg
sub
ljmp
jecxz
cmp
outsl
lret
mov
xchg
xchg
roll
push
jle
jmp
add
adc
in
push
decb
mov
loop
test
movsb
out
hlt
repz
in
add
jnp
sub
out
daa
mov
std
jmp
jns
cltd
imul
cmp
cmpb
imull
insl
call
mov
push
aad
cld
jns
leave
int
jecxz
movsl
aad
cli
movsb
or
out
pop
popa
fs
push
adc
mov
pop
or
divl
push
mov
iret
aam
add
outsl
xor
mov
jecxz
mov
cmpb
pop
sbb
les
jno
add
lods
inc
xchg
outsl
addr16
jnp
ss
outsb
inc
jp
adc
int3
sbb
das
mov
out
mov
mov
pop
insl
clc
dec
dec
xchg
test
mov
ret
mov
nop
push
push
adc
cmp
rorb
cmpsl
aad
inc
pop
cmpsb
xor
mov
mov
jb
or
dec
sub
or
adcb
shlb
lahf
lea
ss
mov
mov
mov
or
sbbl
loope
jne
inc
lods
aas
mov
test
pop
push
jnp
outsb
inc
cmp
cwtl
mov
cwtl
les
lock
sbb
out
loop
enter
sarb
sub
arpl
pop
fdivl
or
int
sub
pop
cmp
arpl
lret
cmp
js
js
add
dec
insb
adc
movsl
cwtl
xor
out
arpl
xchg
sbb
lcall
mov
bound
jl
pop
and
test
insl
push
mov
test
inc
push
mov
shlb
stc
dec
cld
fs
inc
pop
stc
cmp
lods
into
arpl
lock
jae
jmp
mov
mov
shll
add
mov
jge
push
lods
add
adc
mov
mov
repnz
sti
push
shl
sub
mov
mov
push
sub
mov
movsb
loope
jge
xor
mov
mov
sub
into
or
rcll
iret
pushl
pusha
push
add
cmp
mov
aam
sub
movsl
fwait
in
ficoms
jb
xchg
and
outsb
inc
rcr
imul
add
mov
ret
stos
call
dec
push
adc
lret
mov
adc
iret
lret
lock
movsl
fimull
mov
popa
sub
or
mov
inc
add
aad
gs
es
mov
popa
inc
inc
sub
sub
xor
leave
and
cwtl
int3
xchg
add
outsl
mov
jno
adc
push
movd
xor
sub
jno
jmp
sub
test
pushf
cmp
out
stos
xchg
adc
dec
inc
filds
jge
imul
pop
in
outsl
jl
mov
xlat
jnp
sbbb
icebp
leave
mov
data16
pop
in
mov
mov
repnz
sbb
andb
mov
or
jecxz
mov
in
mov
pusha
sbb
mov
mov
mov
insl
mov
jp
inc
call
lea
loope
mov
adc
shrb
mov
shlb
add
lret
add
fcmovu
cltd
jnp
push
adc
sahf
jns
sbb
add
cmp
incb
mov
sahf
xchg
test
inc
icebp
xchg
rcll
jl
popf
jns
jle
jne
repz
add
mov
fstps
pop
cmp
rorl
dec
sub
lret
icebp
in
xchg
mov
aad
jg
int
push
imul
loopne
mov
and
xorb
adc
mov
ret
pop
loope
or
lret
cmp
scas
outsl
add
dec
mov
add
xchg
imul
mov
fwait
push
inc
sbbl
xor
pusha
ss
xchg
fistl
push
lds
push
pop
lret
dec
jb
pop
jg
std
lret
or
xor
into
cmp
popf
test
mov
dec
insb
enter
push
negb
jmp
mov
nop
or
sti
outsb
je
and
imul
js
movsbl
push
js
add
and
fincstp
test
ss
out
cmp
and
icebp
inc
fdivr
add
ljmp
call
adc
dec
adc
push
jmp
add
xor
scas
lods
inc
xlat
ja
xlat
jns
leave
cld
pop
add
pop
add
add
mov
inc
mov
jg
test
pop
xchg
sbb
adc
out
lret
pop
xchg
or
push
jne
xor
sbb
fcomps
in
mov
xor
insb
adc
mov
stc
lods
fs
ljmp
insb
jbe
int
xchg
hlt
aas
cltd
int3
xor
rcll
pop
jo
pop
outsb
imul
int
cld
pop
insb
daa
les
test
mov
aas
or
repnz
fcoms
andl
add
jecxz
xchg
mov
mov
test
sbb
outsl
nop
add
mov
mov
xchg
jmp
je
pushw
enter
sub
dec
movl
fcomi
and
ds
popf
push
std
mov
and
cmpsl
xor
push
xor
xor
add
jns
xchg
pop
push
je
jmp
push
xor
pop
jo
lahf
xor
cltd
dec
pop
lcall
pop
mov
fsts
call
add
push
lock
cmp
mov
out
cs
repz
pop
loope
dec
push
pop
cwtl
clc
dec
xchg
stos
mov
call
fildll
cli
stc
and
add
mov
sarb
int3
adc
mov
hlt
repz
xor
mov
sbb
sub
mov
pop
dec
ret
rol
jns
mov
cmp
push
push
gs
inc
pushf
cwtl
js
loop
push
fcomps
and
xor
cwtl
cmp
dec
in
sbb
pop
xor
jl
jnp
lret
dec
sbb
mov
insb
out
les
dec
mov
test
or
or
aad
pop
out
shll
test
stos
test
rclb
or
mov
bound
and
inc
out
xchg
and
cltd
jb
add
call
or
mov
pop
xchg
xchg
ss
icebp
push
xor
scas
insl
fistpl
mov
cli
and
inc
ror
gs
popf
pop
aam
leave
ss
into
fcompl
mov
adc
mov
push
scas
mov
andb
dec
loopne
dec
jl
outsl
repz
cli
cmp
lret
adc
inc
fisubl
repz
dec
vmread
stos
add
mov
xor
scas
adc
in
mov
lahf
jo
inc
pop
out
mov
pop
xchg
push
mov
dec
mov
mov
pop
fwait
mov
cmp
xchg
jb
std
xor
xchg
add
scas
xchg
pop
adc
out
adc
jb
or
mov
test
popa
lret
ja
jmp
mov
inc
pusha
in
cwtl
adc
lahf
cli
aaa
das
fwait
jnp
push
add
cli
adc
fs
jge
or
push
fmull
pop
pop
dec
test
mov
lret
mov
sub
cmp
sub
jle
mov
or
mov
fwait
repnz
dec
and
lea
dec
shlb
cli
rorl
mov
mov
push
cmp
jnp
repz
fimuls
jo
cli
cmpl
sub
nop
ds
enter
add
in
fimuls
inc
mov
arpl
dec
sbb
xor
jl
enter
sub
xor
js
or
rcl
fdivrl
sbb
jb
and
in
or
push
adc
cmc
xchg
push
cmpsb
pusha
jae
sub
cmp
xor
sahf
out
lock
sub
add
jle
cmpsl
insb
mov
adc
mov
sbbb
pop
inc
addr16
xchg
push
or
push
jmp
or
xchg
cltd
pop
dec
cmpsb
and
shll
add
dec
xchg
adc
jae
movsb
fcoms
incb
xor
mov
fildll
icebp
mov
lds
imul
lea
xor
mov
lahf
push
rolb
xor
sbb
push
stos
insb
mov
push
fwait
dec
xor
clc
xchg
and
bound
mov
and
icebp
inc
cmp
scas
push
addb
pop
fisttpl
jo
cmpsl
or
dec
jns
pop
add
sahf
xor
out
sbb
sti
test
outsb
fidivrs
dec
test
xchg
pop
movsl
push
cmc
sahf
inc
dec
stc
test
mov
popa
mov
popa
ret
pop
lret
popa
adc
shr
push
rcrb
xchg
stos
push
std
out
xchg
out
jbe
sub
add
insb
cld
or
jle
jg
add
jmp
mov
jnp
add
js
sahf
jl
mov
jl
jmp
pop
mov
pslld
adcb
and
mov
xor
sub
sbb
and
push
cmp
sbb
mov
nop
dec
lods
loop
xlat
fs
ss
mov
call
repz
je
cmp
aad
pushf
pusha
push
xlat
add
subb
and
add
jne
dec
cmp
out
mov
sbb
sbb
push
dec
fwait
shrb
and
das
xor
or
inc
out
push
test
dec
shll
pusha
popa
stos
movsl
sbb
mov
jb
js
cs
dec
push
sbb
mov
fimull
xor
rcrb
fldcw
cltd
xor
ljmp
push
orb
frstor
push
and
fcomi
fcmovnu
mov
mov
imul
addb
mov
or
sub
pop
push
push
stc
stos
dec
ds
inc
jb
ja
ljmp
out
stos
scas
sub
std
add
or
es
cli
nop
jge
shrl
add
rdpmc
jecxz
movl
stos
mov
fdiv
sub
xor
lock
pop
rcrb
aaa
inc
sub
push
pop
lock
daa
repz
xchg
in
stos
push
hlt
jg
jecxz
inc
xor
mov
pushw
std
lret
pop
inc
jbe
pop
sti
aas
dec
test
jnp
ds
xchg
pop
dec
sbb
lods
adc
enter
cmp
xor
pusha
sbb
int
daa
mov
mov
arpl
cmp
jno
pusha
push
jae
int
adc
adc
inc
pop
adc
scas
imul
lahf
add
xlat
ret
jmp
clc
jle
nop
lahf
testl
cmp
cld
or
lods
sbb
cli
mov
enter
ret
cmp
jno
mov
and
testb
test
popa
fwait
leave
ljmp
rolb
push
pushf
push
jo
cmp
pusha
push
sbb
push
add
xchg
or
adc
cmc
movsl
mov
stc
ds
or
repz
imul
add
mov
xor
cmp
xchg
inc
movsb
or
push
push
icebp
push
cmp
mov
pushf
or
sti
sub
xchg
scas
inc
enter
sub
data16
push
mov
fldt
fildl
dec
jns
out
push
pop
stos
or
movups
adc
mov
jmp
pop
sub
push
nop
xor
icebp
mov
shr
mov
xor
push
adc
xorl
dec
sahf
imul
in
lock
repz
jbe
pop
insb
movsb
mov
push
mov
lods
test
push
mov
repnz
and
sub
outsl
hlt
xor
jge
and
inc
jbe
inc
push
mov
jp
push
xchg
jns
iret
js
lcall
call
imul
loopne
pop
mov
clc
and
xchg
outsl
ss
leavew
sub
inc
insl
out
pop
cmp
push
cmp
or
mov
hlt
imul
fsubrl
sub
xchg
clc
mov
mov
aam
mov
cmp
mov
pop
inc
jle
mov
stos
fadds
sbb
add
and
shrb
insl
fstpt
pop
xchg
add
cmc
inc
mov
jmp
fists
jmp
mov
out
call
add
stc
cmp
sbb
jnp
pop
cmc
sbbl
xchg
mov
jns
idivb
arpl
fldenv
insl
jmp
xchg
xor
mov
ds
cwtl
dec
or
ds
in
pop
cmp
add
clc
pop
into
js
enter
mov
inc
call
pusha
sbb
pop
jecxz
mov
push
mov
push
push
jg
jecxz
pop
fmull
push
sub
dec
mov
dec
dec
mov
test
incl
jbe
cmc
pop
test
and
imul
and
jl
push
notb
mov
lret
jae
ret
sarl
xor
lret
into
lahf
loop
inc
out
mov
and
enter
imul
dec
mov
cld
popf
push
push
sbb
cmp
and
lea
xor
movsl
mov
mov
mov
sub
insl
mov
and
adc
or
or
pop
out
sarb
in
sarl
sbb
and
pushf
pop
cmpsw
xor
shlb
div
aam
cmpsl
lcall
out
out
ret
pop
adc
push
xchg
mov
in
jnp
cmp
xchg
hlt
sub
adc
and
mov
cwtl
outsl
xor
lods
mov
xchg
gs
sub
mov
inc
jl
hlt
das
popa
int3
sub
xchg
cmp
stos
jns
mov
add
mov
lcall
or
mov
fmuls
sub
and
sub
dec
xchg
out
jecxz
pop
dec
int
push
push
jnp
inc
addr16
jns
mov
test
xchg
jle
int3
ss
std
ja
cmp
imul
add
and
cs
mov
push
das
push
and
inc
xchg
sbb
fwait
js
sub
pop
aaa
jge
loopne
lret
xchg
cmp
ja
dec
shl
inc
pop
adc
sub
sub
jnp
mov
xchg
mov
or
jecxz
sbb
roll
adc
dec
test
jae
sbb
pop
out
movsl
mov
or
mov
mov
add
inc
mov
jno
fwait
mov
movb
xor
in
bound
lock
or
dec
aam
fsubs
sbb
mov
aad
fistl
dec
add
repnz
in
bound
jne
jl
sbb
add
je
clc
fisttps
mov
mov
divb
stos
adc
loope
stc
scas
stc
cmp
fbstp
aas
xchg
bound
movsl
mov
mov
ss
dec
lds
xchg
xor
xchg
cli
mov
mov
sbb
rcrl
out
mov
and
pop
sub
shr
dec
cmp
add
push
xor
orl
jns
or
mov
xchg
fstpl
sbb
scas
outsl
dec
jnp
shr
adc
into
mov
or
jb
roll
xor
xchg
xorb
pop
push
sbb
nop
gs
add
mov
pop
leave
and
les
das
stc
pop
mov
or
fldl2e
push
sbb
into
mov
add
test
icebp
fldl
push
repnz
sbb
leave
stos
addl
pop
aam
ret
out
repz
jnp
xchg
jae
dec
rcrl
test
adc
mov
sar
rcrl
addb
sbb
int3
xchg
jge
clc
xchg
push
in
mov
addl
inc
clc
and
mov
xchg
mov
dec
xchg
inc
loopne
and
mov
cli
sti
outsb
repnz
inc
jecxz
cmc
out
jno
pop
rcl
push
inc
shr
out
jns
push
mov
add
mov
sbb
push
push
sbb
cmp
sub
out
inc
and
dec
mov
or
in
out
ljmp
push
sarl
out
inc
xchg
iret
pop
loopne
fstl
dec
loopne
xor
and
sub
mov
sbb
cmp
ret
iret
pop
dec
pop
loopne
and
lds
cmp
testl
enter
test
addb
cmpsb
cmp
add
insl
pop
xor
sbb
dec
xchg
adc
daa
xor
jmp
lret
mov
mov
cwtl
push
mov
dec
ds
bound
pop
mov
cmpsl
pop
inc
mov
aad
sub
jbe
push
call
rcrb
sbb
imul
pop
mov
icebp
outsb
mov
ljmp
loope
jne
fs
and
cs
ss
jp
insl
jp
or
add
lods
addr16
cmp
add
fildll
jbe
cli
loopne
xchg
and
mov
sbb
int
sbb
pop
mov
jns
sub
cmpsl
aam
mov
adc
sub
int3
xchg
mov
push
pop
mov
sub
add
daa
push
scas
lfs
adc
inc
xchg
pop
xor
xchg
movsb
adc
test
push
jnp
das
subl
rorb
test
outsl
out
orl
push
mov
xor
pop
xchg
sar
jmp
or
or
xchg
daa
ror
pop
divb
push
ret
hlt
jl
test
lock
ret
adc
jp
or
negb
insl
in
jno
mov
out
adcl
mov
cmpsl
gs
hlt
lret
add
mov
or
or
aaa
jae
call
sti
repnz
push
and
pop
movsb
push
cmp
lahf
adc
mov
out
push
lds
push
mov
mov
jo
dec
mov
xor
sub
jl
in
xchg
push
aam
shl
mov
and
add
push
push
push
mov
fsubs
iret
and
test
je
xor
stc
dec
pop
cmp
xchg
pop
inc
mov
sbb
xchg
dec
sub
lret
adc
or
out
cwtl
popa
add
fs
push
mov
jno
inc
outsb
mov
mov
jl
mov
and
push
das
imul
aas
jl
nop
sub
sub
xchg
mov
xor
push
cmp
popa
dec
jp
push
mov
gs
sbb
sar
ljmp
or
xchg
loop
or
jne
iret
mov
das
xchg
and
stc
and
or
bound
lret
mov
mov
test
xchg
lahf
ljmp
imul
in
sahf
imul
xchg
or
andb
scas
leave
call
fs
ret
ds
out
iret
sbb
es
pop
dec
jb
push
push
mov
xor
push
mov
sbb
cmpsl
stos
xlat
fst
loopne
sub
loop
aaa
push
pop
rcll
out
inc
or
add
js
xchg
scas
leave
adc
inc
imul
inc
test
or
fwait
mov
in
in
test
sub
dec
test
cld
std
adc
scas
gs
and
arpl
ret
imul
es
fiadds
cmpsb
imul
xchg
stos
inc
mov
mov
mov
daa
push
fmull
adc
xchg
mov
icebp
lret
jp
jp
mulb
xchg
repz
sar
jmp
dec
jnp
aam
aad
lahf
jmp
push
inc
in
pop
pop
xor
lret
in
xchg
fdivrp
in
pop
mov
push
cltd
mov
mov
insl
cmp
dec
inc
jne
mov
mov
pop
stos
jbe
popf
lods
divl
sub
gs
add
add
jbe
insl
mov
mov
adcb
nop
xchg
mov
out
mov
or
leave
mov
das
lods
adc
xor
jno
adc
jmp
sarb
mov
cli
pop
out
inc
add
fstl
pop
pushf
outsl
addr16
mov
sbb
jno
mov
dec
push
adc
fst
mov
mov
jns
add
mov
out
sbbl
xor
mov
cmp
in
test
mov
cmp
cwtl
das
mov
rcrl
idivb
cs
dec
popa
cmp
loopne
mov
pop
dec
dec
ret
ja
sub
cmp
ljmp
ss
cli
adc
clc
mov
shlb
or
out
or
sub
inc
adc
jno
sub
dec
mov
stos
call
xchg
mov
sub
push
or
aas
sbb
mov
comiss
xor
xchg
jle
xchg
iret
out
movsb
gs
mov
and
iret
add
je
jne
cmpl
push
in
xor
out
pop
por
jecxz
loop
xchg
and
sbb
pop
mov
sub
ja
xor
enter
mov
mov
mov
notl
add
mov
stc
sub
loope
add
rol
jg
pop
push
inc
repnz
push
add
pop
adc
mov
sub
pushf
mov
into
fcoms
int
pop
pop
loope
xor
sub
jg
or
rorl
adc
mov
sub
es
aaa
cmp
inc
xchg
pop
fsubrs
jp
push
into
xor
adc
or
cli
cmp
repz
jbe
cmp
dec
mov
add
ja
xor
cmc
lock
xchg
jo
aad
cmc
dec
xchg
rcrb
fwait
push
lds
jb
xor
imul
fnstenv
ret
sbb
mov
in
jge
pop
test
sub
xchg
mov
sarl
neg
cltd
jnp
sti
add
mov
arpl
sub
dec
cmp
popa
lcall
outsl
push
push
aaa
jge
cmp
push
ja
rcll
push
loop
mov
push
les
mov
repz
rcrl
sbb
les
clc
out
iret
mov
jle
pop
cmp
or
ret
dec
push
test
xchg
pop
jp
mov
les
mov
mov
xor
inc
adc
adc
jb
std
sub
test
enter
mov
inc
cmp
mov
popf
sbb
cmp
movb
mov
jecxz
arpl
fnstsw
movsb
je
lods
xchg
add
rolb
loop
stos
bound
in
mov
jo
mov
push
scas
cmp
fildll
mov
fnstenv
jnp
push
jo
xor
xchg
pop
lods
cld
adc
or
aaa
dec
loopne
insb
mov
adc
es
sub
sub
jp
cmpl
jns
jecxz
in
xchg
xchg
dec
decb
sub
leave
dec
ja
mov
mov
clc
sub
outsl
mov
inc
inc
dec
push
je
jle
iret
xchg
mov
jle
pop
dec
cwtl
cmpsl
add
sub
insb
push
ret
addr16
nop
adc
dec
cwtl
jo
es
mov
scas
pop
int3
in
adc
or
ret
sbb
cmp
leave
push
xchg
mov
push
test
adc
jae
hlt
inc
xor
xchg
xor
jge
fsubr
mov
push
test
iret
inc
aam
add
jge
mov
ds
mov
push
inc
sbb
dec
dec
xor
mov
dec
xlat
popa
mov
xchg
push
push
daa
mov
xorl
push
sub
mov
loope
cli
jne
dec
lcall
sbb
mov
jno
add
or
fs
cld
mov
sbb
popl
sti
gs
addb
cmpsl
loop
jmp
sarl
jp
mov
mov
lret
dec
leave
push
iret
adc
lods
or
iret
mov
enter
sahf
xchg
negl
or
aas
pop
insl
ja
out
mov
cmp
pushf
mov
sbb
pop
pop
pushf
push
das
stc
setg
sub
adc
idivb
cwtl
scas
arpl
inc
cmpsb
pop
stos
push
jns
fistl
mov
mov
pop
xchg
cmp
cmpsl
ljmp
mov
jb
or
sub
loop
pop
movsb
shlb
adc
jge
push
inc
popl
jecxz
mov
lahf
mov
data16
pop
repz
adc
or
hlt
test
push
and
jnp
fisubs
mov
cmp
inc
int3
inc
call
xchg
pop
or
loopne
pop
inc
loopne
jmp
push
aas
mov
cs
pop
adc
push
stos
cmp
pop
popa
or
ds
rclb
test
pop
add
sahf
pop
pop
es
aas
adc
and
jl
inc
pop
int
fstpl
lods
cmp
in
and
mov
xor
mov
dec
xchg
and
lret
je
lcall
sub
add
push
dec
and
push
sub
neg
push
mov
cmp
sbbl
movsb
lds
xchg
imul
aas
punpckhdq
es
sarl
mov
lahf
adc
mov
dec
aam
es
mov
jno
xchg
je
js
andb
and
nop
dec
and
ds
in
shrl
cmp
add
push
sub
jp
dec
andl
movsl
fisubrl
insb
jne
pop
clc
js
push
fisttpll
jns
cmp
subl
fwait
cli
test
arpl
mov
and
jle
sbbb
scas
shrb
fwait
mov
subl
mov
mov
xchg
das
mov
jp
ljmp
xor
into
push
jb
mov
xor
popa
xlat
mov
cs
jnp
add
repnz
and
xchg
pop
cmp
rol
cltd
movl
rcrb
push
add
xchg
nop
fsubl
sub
dec
sti
imul
or
jmp
cwtl
xorl
repnz
imul
scas
cmp
mov
sub
stc
inc
roll
in
jnp
out
cmp
sub
imul
xor
sub
add
outsb
inc
mov
outsb
mov
stos
mov
sub
mov
push
scas
cmp
dec
rcrl
cwtl
fs
into
fldt
test
ret
subb
inc
pop
xor
push
jmp
ret
ss
cmp
mov
movsl
or
mov
or
pop
or
aad
dec
mov
mov
inc
loop
mov
in
stos
iret
push
mov
xor
pop
dec
push
pop
jle
sbb
insl
js
mov
jns
outsb
inc
inc
jp
cmp
xchg
out
lds
pop
add
jle,pt
lods
ficomps
xchg
jb
sub
lods
lods
repnz
add
or
or
test
pop
pushf
fcom
jns
mov
jo
inc
xor
and
lret
iret
inc
inc
std
fcmovu
xchg
js
fucom
out
aaa
shll
sub
xlat
leave
aad
cmp
inc
pop
fs
inc
aaa
cmp
stos
adc
mov
mov
cs
int3
pop
mov
xor
adc
cmp
test
lds
add
mov
fcoml
inc
movsb
cmp
add
insb
xor
xchg
cmpsb
pop
rcll
sub
jmp
pop
push
movsb
adc
push
or
dec
sbb
in
addr16
inc
push
adc
sbb
adc
cs
or
cmpsb
mov
xchg
cld
lret
adc
or
es
and
mov
lock
ja
sub
movsb
cmc
test
mov
xlat
sbb
pop
rolb
mov
xor
xchg
lret
jmp
aaa
mov
insl
sbb
sbbl
sub
out
cmp
push
adc
push
imul
js
pop
push
repz
ss
sbb
jb
mov
or
adc
iret
xor
into
jno
pop
mov
lcall
xor
outsb
pop
sbb
lahf
mov
in
lock
sar
push
mov
je
or
inc
push
adc
push
jge
mov
into
jnp
add
xchg
mov
sbb
cmp
jb
cmpsl
and
sarl
sahf
adc
mov
rclb
adc
push
cmp
adc
cmp
sbb
shrl
adc
mov
lret
jg
hlt
out
leave
push
mov
push
icebp
addb
dec
stos
mov
pop
out
test
xchg
ja
outsb
pop
stc
imul
jg
into
in
sahf
aam
pushf
fwait
add
mov
cld
loop
mov
lds
push
mov
mov
lods
negb
sbb
mov
push
push
lods
pop
ret
xchg
add
mov
lcall
pop
mov
inc
dec
and
sbb
lods
and
lea
xchg
xchg
jg
std
xor
xchg
xchg
lahf
jge
fwait
daa
out
stos
loope
mov
xchg
add
push
decl
sbb
fsubs
xchg
inc
and
adc
add
scas
sbb
push
ja
mov
jmp
jns
fiaddl
mov
xchg
cmp
int
je
lea
out
rorl
jb
std
movsb
sub
out
shl
mov
jno
ljmp
gs
fs
testb
inc
push
adc
cmc
mov
test
scas
pop
xor
sahf
xchg
imul
test
mov
ss
into
mov
jns
das
jo
test
push
int
es
mov
push
int
lahf
jg
pop
dec
aad
test
fsubr
or
add
and
test
add
call
scas
inc
pop
add
add
rcll
popa
jmp
popa
les
fidivrl
loop
jmp
cmc
into
mov
test
or
addb
loopne,pt
lcall
jnp
int
rolb
lods
xchg
mov
inc
mov
jl
sbb
lcall
xor
and
nop
and
and
gs
pushf
loope
es
jge
out
sarb
dec
mov
int
mov
pop
xor
cwtl
xchg
repnz
lahf
adc
aam
sbb
inc
mov
dec
mov
cmp
jns
mov
push
or
mov
call
test
or
fistl
adc
and
pop
sub
adc
aaa
sbb
pop
ret
das
xor
test
sub
fs
jns
cmp
push
aam
jne
pop
jmp
scas
pusha
loopne
mov
out
enter
sbb
iret
jno
sub
cmpsl
in
dec
inc
jl
ret
xchg
pop
inc
mov
lret
adc
adc
push
test
dec
call
ss
add
loopne
inc
int
movsb
push
fsubrs
cltd
mov
scas
in
push
and
jle
das
adc
or
pop
cli
std
or
or
inc
pop
test
mov
ret
jno
enter
push
out
cmp
sbb
mov
fsubs
push
les
mov
imul
ds
out
or
xchg
pop
jnp
xchg
pushf
cmc
loopne
push
loopne
inc
ficoms
add
dec
push
push
xchg
pop
out
lods
or
loope
out
mov
add
ss
mov
fwait
jns
jo
or
aaa
pop
popa
inc
or
fisubrl
and
mov
popl
add
lods
negb
sub
cmpsl
xchg
rorb
and
sbb
mov
test
outsb
std
add
imul
sbb
push
bound
jnp,pt
push
xor
or
in
enter
insb
pop
fbstp
jmp
jle
mov
lret
cmp
stos
push
pusha
xchg
cmp
out
mov
in
xchg
inc
cmpsl
aad
cltd
mov
movsl
pop
or
jo
pop
repz
xchg
std
lahf
insb
jmp
xchg
mov
cltd
and
incb
push
es
mov
sti
xchg
dec
fstl
int
jp
sub
js
int
pop
test
repnz
mov
cmp
pop
inc
jne
push
negl
xor
inc
and
dec
mov
dec
or
jns
sub
hlt
cld
shrb
pop
sahf
jno
dec
adc
mov
lea
push
mov
movsl
sahf
inc
or
repnz
mov
int
je
lret
pop
mov
jg
ss
xor
mov
pushf
popf
mov
adc
mov
movsb
and
cwtl
shrb
out
jns
jae
mov
fisubrs
sarb
dec
jmp
std
mov
pushf
cld
jbe
xchg
sub
jmp
cltd
jne
lcall
mov
fwait
inc
push
arpl
pop
mov
xor
push
push
repnz
add
in
add
jbe
lret
lods
lahf
fisttpl
mov
inc
dec
int
dec
lcall
sbb
loope
jno
sub
add
repnz
imul
mov
bound
pop
sti
cmp
or
sbb
pop
xor
mov
sub
enter
pusha
jl
gs
aam
in
pop
jno
movsl
es
cmp
std
into
fildll
jbe
dec
push
xchg
aas
sub
ds
cli
xor
mov
decb
daa
pushf
pop
scas
faddl
aaa
cmp
add
mov
adc
lock
das
push
addr16
dec
stos
sub
rdpmc
mov
cwtl
mov
mov
pop
mov
pop
enter
pop
jbe
stc
dec
add
in
adc
inc
dec
popf
clc
xor
test
push
inc
adc
jmp
test
addr16
stos
or
push
cltd
sub
loope
mov
push
sub
inc
cmp
lahf
into
pushf
push
xchg
std
push
in
pop
scas
jnp
sbb
leave
mov
push
inc
pop
scas
sub
xchg
dec
push
xchg
frstor
and
insl
jecxz
mov
inc
add
mov
xor
lods
xor
push
movsl
pushf
adc
cmp
subb
cmp
mov
cmpsb
pop
dec
pusha
repnz
mov
ret
arpl
shlb
fcomp
sbb
shll
dec
dec
mov
dec
iret
hlt
stc
xor
mov
sub
and
xchg
cmp
fsubrs
inc
loope
sub
pop
mov
sub
or
jae
jae
test
pop
push
push
mov
testl
outsb
ja
or
push
imul
adc
les
and
xlat
dec
sbb
lret
cmp
mov
lret
jg
sub
int
loop
mov
scas
push
vmread
and
jle
arpl
dec
xor
xlat
adc
enter
push
or
jmp
add
jno
cmp
jb
frstor
jo
rcll
sub
stc
cmp
xor
insl
sarb
mov
out
jmp
pop
fldenv
cmpb
sub
out
mov
jmp
mov
pushw
inc
jle
pop
popa
les
jbe
cmp
inc
les
fisttps
mov
fwait
dec
cwtl
mov
cltd
pop
jne
in
cli
imul
jle
pop
mov
adc
xchg
sbb
add
add
jne
int
dec
cmp
cmp
inc
sub
jo
or
inc
xchg
jae
in
inc
scas
sub
sbb
jle
xlat
or
test
inc
dec
and
dec
jne
and
shll
ds
xchg
imul
and
icebp
jns
xchg
negb
cmc
mov
inc
imul
cmp
outsl
dec
leave
adcb
inc
aaa
pop
adc
test
movsb
std
insl
call
mov
push
mov
or
test
sub
das
cmp
adc
add
cli
je
pop
in
mov
dec
jns
sbb
pop
push
insb
outsb
push
push
dec
lods
mov
imul
mov
scas
push
push
jg
mov
pop
clc
adc
adc
int3
cmpsl
mov
mov
push
jmp
js
cmpsl
cmpsl
mov
test
mov
hlt
daa
aad
sti
ror
shl
jb
mov
mov
dec
mov
and
or
mov
inc
into
mov
sub
inc
stc
test
cs
and
hlt
mov
or
inc
xor
fs
push
xor
mov
push
push
push
in
xchg
jecxz
dec
movsb
jbe
xorb
inc
jbe
inc
enter
fsubrs
jae
lods
rcrl
mov
jnp
pop
clc
add
push
sub
loop
in
xchg
jns
pop
mov
and
in
jmp
xchg
mov
stos
fistl
jno
xchg
sub
pop
daa
xchg
push
int
mov
mov
sahf
inc
insl
and
sub
sarl
add
sub
in
imul
outsl
daa
or
sbb
in
out
inc
lock
insb
cli
adc
push
adc
gs
jg
jae
adc
imul
negb
jnp
jnp
xchg
xchg
std
pop
insb
add
addr16
inc
add
stc
inc
mov
jo
sub
loope
bound
inc
mov
clc
lcall
add
add
sub
roll
shll
pop
xchg
jl
int
repz
push
cmp
jecxz
in
push
and
dec
cmpsb
and
cmc
xor
push
enter
fiadds
in
adc
adc
sub
iret
rcl
addr16
divb
cmp
lods
in
dec
fdiv
lcall
sub
icebp
xchg
stc
mov
sbb
mov
lods
adc
cmp
mov
sbb
testl
rorb
lods
frstor
push
rorl
aad
dec
fstpt
jecxz
loopne
pushf
cld
xor
or
test
pop
sti
call
pushf
mov
mov
jle
mov
mov
pop
insb
pop
inc
out
dec
jmp
scas
sub
push
sub
xor
or
and
outsb
leave
pop
test
repnz
jge
push
mov
add
pop
jbe
cmp
test
in
stos
xchg
sub
push
sbb
or
dec
jecxz
sbb
mov
mov
adc
dec
out
outsb
loopne
hlt
sub
stos
xor
add
xchg
adc
dec
shlb
test
movsl
inc
xchg
out
mov
ds
sbb
pushf
jbe
lock
pop
mov
movsb
icebp
dec
mov
pushf
dec
mov
push
sbbl
jno
add
cmp
das
sub
in
shll
fsubrl
pop
add
cmp
gs
inc
mov
arpl
jae
inc
bound
cmpsl
fistpll
adc
in
or
lret
push
mov
movsl
enter
jecxz
and
sarl
fistpl
sbb
testl
jge
add
jns
fldcw
int
outsl
cmp
xchg
orl
dec
jns
lock
fimull
and
mov
ja
pop
iret
inc
fwait
inc
jle
int3
out
in
pusha
add
xchg
jl
sarb
vcvttpd2dqy
unpckhps
jo
out
lcall
mov
pop
and
mov
inc
jge
xor
dec
insl
clc
xor
push
push
outsb
arpl
ljmp
xor
cld
hlt
mov
ret
stos
lret
inc
loop
bnd
mov
loop
jbe
fcomps
test
insb
dec
push
pop
pop
int3
push
daa
shlb
xchg
add
fs
leave
sti
pmovmskb
loop
orb
gs
lret
xor
cmpsl
jecxz
fimuls
cmc
iret
jecxz
mov
push
int
fdivs
not
std
andl
mov
aaa
dec
jp
ss
and
movsb
sub
repz
ret
sub
jle
call
in
pop
xchg
in
cmp
adc
icebp
out
test
dec
dec
bound
push
jle
xchg
sub
imul
jg
leave
sbb
leave
sub
xchg
ss
pusha
iret
inc
jb
fistpll
mov
test
jo
xchg
push
orl
mull
mov
jecxz
pop
test
sbb
jne
mov
std
xor
add
mov
adc
push
jo
jb
push
xchg
cli
add
rcrb
sti
clc
pop
test
jne
jo
call
lods
xchg
sbb
sub
mov
mov
xchg
movsl
cmpsl
push
inc
ficoml
shll
and
scas
mov
fmull
popa
aaa
leave
mov
stos
stos
adc
jae
in
scas
aaa
pop
std
sbb
movsl
mov
test
push
jb
jo
pop
cmp
repz
test
out
cmp
jmp
push
ficoml
sbb
test
jbe
vmovsd
xor
dec
inc
dec
mov
inc
outsb
fwait
idivl
lods
push
mov
movsb
sbb
pop
cli
out
lea
jecxz
rcrl
sbb
push
xchg
scas
gs
pop
xchg
test
adc
jb
pop
jmp
pop
pusha
enter
adc
dec
jecxz
xor
int
fadds
lretw
lret
scas
mov
cmp
mov
fidivrs
adc
std
mov
fstps
cmc
loopne
std
inc
or
test
test
pop
jne
das
fidivl
insb
mov
fisubrs
subl
mov
sti
scas
fsubp
jecxz
fbstp
fidivl
mov
lcall
pop
jp
mov
pusha
push
test
push
popf
fdivrs
and
lea
pop
repnz
xchg
fsub
popa
pop
mov
sub
cmc
sub
mov
out
inc
mov
mov
lcall
fdivrl
movsl
lret
xor
outsb
push
sub
enter
push
xor
psubd
cmp
jno
jg
inc
sbb
or
cli
das
pop
jbe
jne,pn
sub
inc
mov
push
sub
in
fucom
sub
popf
loope
std
jae
xchg
lea
or
dec
add
lahf
jno
sub
inc
xchg
addr16
cmpsb
mov
repnz
sbb
xchg
lds
stos
enter
mov
push
mov
xchg
lret
ds
mov
in
push
ja
add
loope
repz
fst
js
fcmovb
jl
push
add
scas
out
inc
cli
rorb
sub
xchg
fcmovnb
pop
xchg
mov
loopw
jbe
invd
repnz
fcompl
xor
add
test
jns
or
jbe
in
aad
mov
sub
sbb
lock
movl
push
jno
adc
pop
scas
lahf
mov
mov
es
jb
or
mov
adc
repz
xchg
dec
out
jne
fnsave
fld
mov
fcomps
jbe
test
push
fs
aad
mov
push
xor
test
jnp
xchg
add
push
add
loop
mov
and
xchg
and
fiaddl
or
arpl
jle
cmpsl
mov
pop
roll
mov
int
and
jae
lahf
lret
xchg
add
pop
std
dec
push
push
sti
std
cmc
call
xchg
pop
test
jg
jnp
or
jl
popf
cmp
xchg
movl
mov
call
add
out
dec
add
sahf
lret
pop
dec
insl
push
xchg
cmp
or
sahf
push
mov
dec
fildll
imul
lahf
pop
push
enter
clc
fisttps
xchg
dec
popf
mov
pop
mov
loope
cs
xchg
std
orb
push
pop
push
test
daa
imul
or
int
push
adc
sti
dec
movsb
fs
xchg
movsb
fsubs
inc
push
sbb
sbb
outsl
pop
mov
test
scas
xchg
daa
dec
add
insl
mov
fbstp
xor
sub
out
jnp
roll
and
pop
filds
mov
adcl
cmc
xor
scas
sub
sbb
jnp
loope
cli
mov
push
hlt
mov
mov
sub
mov
ret
test
adc
shr
inc
cmp
pop
addb
sub
inc
inc
loopne
es
fcomip
and
mull
repz
xor
mov
inc
fs
pop
adc
into
popf
rcll
rorl
ljmp
sbb
pop
frstor
es
mov
call
add
cmpb
push
dec
pop
mov
jb
jbe
mov
push
jp
mov
je
inc
in
mov
cmpsl
in
mov
and
cmp
mov
aaa
xchg
rorb
in
xchg
dec
pop
filds
mull
jo
sbb
push
sbb
jo
subl
ja
sarl
inc
cwtl
inc
cmp
int
push
xchg
aaa
es
mov
pop
popa
int
dec
push
imul
mov
inc
jbe
xor
lret
adc
xor
mov
pop
lds
mov
add
call
inc
push
mov
mov
js
jecxz
stos
outsb
es
xor
cmp
test
bound
push
add
and
pop
lahf
arpl
inc
hlt
mov
stos
ss
mov
cli
mov
test
adc
dec
xchg
mov
mov
je
xchg
or
orb
call
stos
aaa
or
lahf
pop
and
test
mov
xlat
pop
into
jbe
insb
mov
mov
mov
cmp
ss
idivb
cmc
cmp
in
sub
xchg
push
stos
loopne
or
movsb
enter
arpl
sub
push
mov
in
mov
push
cmp
fisubl
fsubrp
push
adc
leave
xchg
mov
mov
mov
cmpsb
in
aam
test
jle
je
in
jecxz
mov
add
sub
cmp
cmp
sbb
mov
or
lahf
xchg
push
and
inc
dec
or
int3
push
cmp
sub
ja
inc
pushf
imul
jge
arpl
pop
fists
xor
jae
add
insl
sti
lock
sub
jno
mov
dec
push
mov
addb
dec
xchg
dec
sti
mov
je
loope
pop
pop
mov
or
movsl
out
pop
sbb
push
xchg
xor
test
dec
mov
sbb
or
pop
gs
lret
pop
pop
arpl
pop
inc
and
mov
gs
aad
icebp
mul
mov
xchg
add
sub
jno
int
popa
sub
adc
push
mov
andb
add
int3
lock
xchg
cmp
int3
mov
popf
push
sub
dec
push
xchg
rol
lods
out
inc
adc
inc
call
xorb
shlb
push
fcomps
xchg
add
mov
pop
pop
fmuls
or
adc
xorb
leave
jp
add
decl
out
out
pop
jp
add
pushf
fcompl
pop
jmp
lahf
setae
push
xchg
add
mov
push
sub
test
scas
push
mov
lcall
push
sub
push
lret
push
sbb
sahf
outsb
imul
enter
inc
cmpsl
add
ja
fcoms
xor
and
mov
lods
sub
mov
push
pop
cs
and
cmp
addl
ja
sub
in
or
jno
aas
inc
enter
jecxz
pop
sbb
pop
dec
jl
fsts
dec
cld
mov
mov
mov
pop
mov
dec
out
pop
lods
mov
sub
xchg
sub
testl
imul
pop
and
adcl
lcall
mov
lods
push
pop
cmp
pusha
adc
and
cmc
lds
sub
arpl
mov
into
mov
fwait
cmp
adc
lret
mov
inc
loope
out
mov
jae
inc
add
dec
aam
inc
jbe
icebp
jo
rcll
inc
jnp
insl
mov
dec
xchg
adcl
out
hlt
enter
xchg
inc
stc
cs
mov
faddl
cmp
out
lahf
xor
lods
fsubl
pop
push
push
loope
adc
mov
cmc
and
xor
inc
fs
arpl
addl
fs
pop
iret
xchg
or
mov
inc
rcrl
sbb
adc
jns
lret
fisubs
imul
mov
xchg
jecxz
and
data16
and
nop
and
xor
xor
inc
or
push
xor
dec
jmp
je
dec
or
push
loopne
and
mov
jno
xor
dec
mov
call
ljmp
adc
gs
loope
call
adc
outsl
dec
add
sub
push
sbb
in
mov
enter
sahf
mov
mov
xchg
sbb
sub
fcompl
add
int3
push
roll
das
jle
jp
or
pop
pop
aad
dec
rorl
mov
mov
insl
decl
arpl
adc
ror
pop
into
scas
pop
mov
test
mov
in
dec
sbb
inc
sbb
cmpsl
call
aam
enter
cmp
push
repnz
pop
jl
les
in
fistpll
cmp
adc
pop
icebp
mov
mov
gs
jo
and
lock
shll
pop
out
pop
mov
dec
or
push
xlat
mov
push
cmp
sub
sub
into
jge
fcomi
testl
xchg
xchg
loop
pop
cli
mov
xchg
add
stc
enter
jo
ret
sbb
movsb
xor
mov
push
push
mov
aam
jne
mov
arpl
loop
ja
sub
in
inc
mov
ds
fs
xchg
pop
inc
xor
outsl
and
fidivl
das
adc
push
mov
inc
xor
mov
xchg
cmp
pop
into
xor
xchg
repnz
lret
pusha
cmp
dec
jbe
mov
out
outsb
pushf
icebp
and
es
pop
js
xor
cld
cmp
xchg
mov
fmulp
inc
int
push
sbb
mov
cmp
aam
jg
add
cmpl
sahf
jns
out
je
popf
aaa
rorb
ret
xchg
lcall
and
insb
stc
push
mov
enter
imul
mov
popa
add
adc
pop
push
xchg
and
out
test
and
sbb
cmp
mov
lret
jno
cmp
or
sub
adc
push
inc
cmc
cmp
pop
mov
repz
push
int3
fsubr
pop
pop
mov
jecxz
test
mov
pop
fs
pop
sbb
sub
fwait
popa
mov
movsb
inc
xor
dec
xchg
adc
xchg
mov
push
dec
sbb
repz
mov
pop
insb
pop
test
push
ja
insl
add
inc
push
test
test
xchg
mov
push
stos
repnz
shlb
xor
add
cwtl
mov
sub
fndisi(8087
cmc
lahf
mov
out
ret
xor
lahf
xchg
xor
adc
scas
aas
add
mov
mov
dec
push
cmp
mov
je
stos
sbb
cli
pop
xchg
add
inc
stos
inc
aaa
lcall
and
and
lods
add
scas
mov
fsubrs
jg
ss
fptan
ret
fcomps
add
cmp
mov
and
leave
int3
mov
mov
sbb
loope
imul
sti
xchg
mov
js
ss
jno
mov
je
das
movsl
loop
shr
loope
fisubl
mov
xor
hlt
sbb
or
jp
jbe
adc
jle
mov
cmp
jnp
xlat
push
mov
mov
sbb
shl
orl
jmp
mov
cmpsb
xlat
dec
notb
pushf
sti
mov
jge
test
sbb
ror
int3
jp
xchg
and
sub
pop
jecxz
adc
sub
push
mov
mov
cmp
fiadds
ss
cmpsb
mov
xchg
lret
push
imul
mov
popf
jbe
stc
outsb
pusha
test
outsb
cwtl
pop
cli
xchg
push
arpl
mov
sarl
leave
adc
es
jne
mov
and
pop
fidivs
iret
sub
es
xlat
std
cmp
cltd
lock
cli
insl
push
fidivrl
call
aaa
adc
pop
mov
sbb
sbb
cmp
mov
out
sbb
cmp
fisttps
ret
add
and
dec
adc
or
cmp
jp
lds
ja
or
rclb
loopne
insb
or
xchg
cmp
push
dec
sub
push
cmp
push
xor
adc
adc
inc
jnp
jae
adc
jle
out
xchg
inc
lahf
adc
mov
adc
inc
sub
xchg
in
icebp
sbb
sbb
push
cltd
add
push
fnsave
adc
rolb
cld
pop
jne
mov
jb
push
push
gs
sahf
xchg
scas
mov
mov
loope
add
xchg
mov
cmp
rorl
idivl
loopne
idiv
sbb
insb
call
sbb
iret
xchg
add
jbe
pop
das
fs
sub
testb
xor
lods
int3
mov
pop
scas
mov
or
fistl
ret
adc
aas
or
cwtl
sub
sahf
mov
push
add
and
icebp
loopne
sti
in
insb
xchg
inc
mov
mov
add
push
cmpsb
jnp
mov
push
call
in
adc
cmc
shr
or
push
arpl
xchg
push
pop
dec
out
ja
sbb
rcrl
mov
inc
out
in
es
pop
loopne
or
repnz
ficoms
and
mov
outsb
sub
and
insl
lods
jns
or
pop
int3
in
jge
mov
pop
or
xchg
push
pop
in
ud2
xlat
arpl
cltd
repz
arpl
or
and
jne
and
popf
fwait
jne
fnstenv
insb
inc
and
xchg
add
fstps
push
clc
or
ss
push
add
pushf
lods
in
hlt
or
push
inc
or
sti
loope
mov
ds
dec
jl
in
sbb
adc
add
push
cmpsb
or
test
inc
cmp
addr16
icebp
and
inc
push
dec
adc
push
or
push
sbb
outsl
outsl
mov
repnz
mov
add
outsb
dec
xor
mov
push
nop
sub
out
xor
mov
xorl
in
add
scas
inc
mov
dec
xor
lock
pop
sbb
adc
xor
pop
jb
shr
fs
in
ja
jno
lret
lret
testb
jne
adc
cmpb
fcoml
in
iret
jmp
sbb
xchg
add
xchg
jmp
imul
mov
lret
dec
jp
push
adc
or
sbb
mov
push
push
xchg
xchg
add
repz
jnp
add
sub
daa
and
sub
mov
or
inc
xchg
mov
xor
out
mov
movsb
les
bound
push
ja
or
push
push
out
aas
outsl
jnp
test
push
sub
cmpl
mov
sahf
call
mov
mov
leave
sub
call
aaa
js
or
cltd
or
push
js
idivl
nop
js
loope
push
mov
mov
add
enter
outsb
and
inc
lret
or
pop
pop
pop
push
ljmp
cmc
mov
push
adc
mov
in
out
xchg
jns
xor
mov
loope
addr16
addr16
inc
xchg
shlb
or
ds
scas
sti
pushf
ret
mov
jmp
icebp
jb
lret
xor
mov
push
sbb
int3
jle
cli
lods
dec
and
add
pop
mov
push
and
mov
and
fwait
pop
aas
cmp
rcr
in
cmp
mov
ja
sub
xor
sahf
cld
movsl
ds
pop
sbb
push
xchg
cltd
les
loop
sbb
dec
sbb
int
xlat
xchg
sub
hlt
ficoms
jae
sarb
xor
fnsave
add
cmpl
cmp
dec
jnp
bound
faddl
mov
int
add
pop
sub
out
dec
jae
aad
adc
fwait
xchg
dec
das
lock
sbb
enter
sbb
fsubrp
inc
jl
mov
mov
aad
push
mov
jb
push
lret
scas
xchg
cmp
pop
inc
insb
xchg
daa
sbb
in
jno
out
je
push
jbe
out
movb
les
mov
cmpsl
push
inc
dec
daa
mov
jle
dec
xchg
test
out
test
mov
xchg
hlt
adc
push
sbb
pop
xchg
fldl
jno
cmp
dec
test
jnp
les
mov
movsb
jo
mov
ss
mov
and
pop
xlat
inc
lcall
sbb
insb
dec
adc
ja
xor
cmp
scas
mov
stos
subl
shlb
fimull
sarb
jne
cli
ljmp
jp
pop
lods
sbb
xchg
cmc
dec
outsl
aam
sbbl
out
sbb
dec
test
adcl
jns
and
rol
sti
push
sbb
int3
dec
out
outsl
mov
pushf
add
aad
or
gs
dec
xor
sbb
inc
iret
insl
adc
js
mov
stc
jmp
push
jmp
dec
call
mov
push
test
movsb
out
add
sarb
jb
mov
mov
adc
mov
inc
jmp
cltd
cs
test
adc
and
dec
inc
inc
fistpll
into
and
mov
adc
stc
mov
mov
movsl
in
gs
mov
jae
nop
sarl
ror
jne
inc
jo
les
xchg
sub
movsb
jo
cltd
clc
cmp
pop
mov
sub
es
into
sbb
scas
jns
push
pop
pusha
pop
pop
adc
fsubr
and
fbstp
adc
fs
lahf
aad
in
xor
xchg
clc
repnz
aad
repz
lock
lret
mov
and
mov
inc
in
xor
icebp
sbb
cwtl
cmp
inc
mov
push
add
sbb
mov
andb
popa
sarb
mov
fldcw
mov
in
mov
movsl
mov
dec
mov
xchg
fldenv
sti
ljmp
lcall
sbb
stc
jnp
aaa
or
pop
xchg
pop
mov
mov
aad
mov
in
enter
xor
dec
stos
das
sbb
sub
xchg
shr
imul
scas
mov
outsb
loope
hlt
and
stc
into
imul
movsb
stos
and
adc
sbb
dec
std
add
mov
jecxz
inc
mov
sbb
mov
jmp
sub
pop
pop
test
adc
test
ja
cmc
movsl
aad
adc
pop
outsl
popf
push
xor
and
add
fadds
cmp
insl
dec
dec
jp
xor
push
mov
mov
mov
or
enter
mov
leave
adc
xlat
test
xor
movsl
outsl
jo
test
sbb
xor
xor
pop
enter
mov
push
dec
aam
xchg
hlt
addr16
lea
pusha
cwtl
aad
cli
dec
movsl
pusha
in
pop
jne
icebp
xor
xor
in
xor
mov
dec
sub
leave
fisubrs
or
and
or
jb
xor
ljmp
jae
movl
rcl
push
test
out
lret
daa
arpl
rol
xor
jns
jge
pushf
and
pushf
push
cltd
adc
les
ds
sub
std
or
pushf
jecxz
pop
leave
cmp
inc
or
dec
sub
sub
mov
movsb
xor
and
push
mov
pop
cmc
addr16
xchg
movsb
fdivr
or
xlat
cmc
cmpsl
adc
sbb
jnp
gs
push
inc
sbb
shlb
ret
std
fnsave
adc
jae
pop
cld
xor
sbb
jno
sub
js
in
cmc
loope
xor
insl
jg
les
jecxz
mov
fsubrl
mov
dec
xchg
out
pop
rcrb
xchg
pop
ficoml
pop
jp
pop
ret
movsl
jecxz
mov
fnstenv
icebp
and
ljmp
rorl
push
xchg
jle
and
push
sbb
scas
or
cmpsl
je
fsubs
sti
push
inc
dec
cmpsb
adc
adc
xchg
enter
out
push
jg
mov
add
jo
fsubrl
lods
in
lcall
push
push
and
dec
pop
outsb
enter
sub
jge
arpl
ret
xchg
aas
inc
fsts
fcmovnbe
dec
rcll
cmpsl
inc
imul
in
add
pushf
in
and
in
movsb
loopne
in
pop
lret
adc
mov
jge
cwtl
dec
mov
push
cli
push
shll
mov
pop
sarb
je
mov
jge
dec
pop
jg
or
inc
int
or
aam
cmp
jge
xor
gs
lcall
push
xor
push
outsl
cld
push
sbbb
push
push
sahf
adc
cmp
mov
das
and
inc
mov
data16
jl
popa
xlat
xchg
sahf
pop
jge
push
adc
lods
mov
sbb
nop
mov
push
sub
ja
shl
inc
dec
cmpsl
sbb
push
fs
test
mov
daa
xchg
test
push
jns
mov
outsl
lds
mov
call
dec
lret
dec
push
mov
lock
repnz
jmp
cld
cmp
xchg
mov
cmp
test
mov
into
lock
cmp
lret
lods
mov
push
test
mov
inc
ficoms
dec
int
out
idiv
arpl
push
bound
out
sbb
aas
call
in
outsb
inc
ss
sub
inc
addb
pop
add
outsb
or
and
ja
in
aaa
cmp
outsl
imull
dec
or
je
add
js
mov
mov
pushf
aad
add
adc
add
lock
dec
sahf
ja
sar
fcoms
out
push
rclb
repnz
lea
push
stos
popa
mov
pop
mov
mov
addr16
nop
sub
cwtl
mov
movsb
je
aam
addr16
mov
jg
xor
and
jp
pop
imul
add
jb
jmp
adc
mov
mov
stos
jl
daa
ret
push
push
sahf
jns
add
cmp
jo
cltd
pop
into
sub
inc
jae
out
fistl
dec
push
ret
push
in
and
push
addr16
dec
xor
xor
jmp
rcrb
aas
ror
jecxz
inc
fisubrs
and
dec
add
push
jg
lock
popf
xor
ljmp
rorl
inc
lock
mov
arpl
mov
test
mov
cmp
jp
adcl
push
mov
sub
shll
pop
or
cmp
bound
sbb
xor
pop
ja
dec
sub
jmp
test
or
je
clc
pop
mov
rcrb
or
in
fs
adcl
mov
sbb
add
fcompl
fcoml
repz
adc
dec
js
pop
leave
cmp
sbb
lods
sbb
jnp
push
into
shrb
bound
insl
cmp
mov
pop
sbb
icebp
lret
ret
movaps
leave
fucom
mov
syscall
stos
sub
test
lea
out
xchg
inc
xchg
outsb
popf
sbb
xchg
cli
js
stos
into
cmp
hlt
xor
icebp
sbb
imul
in
mov
xchg
cld
mov
loope
addl
mov
ret
sbb
jg
rcl
icebp
ljmp
aam
fnsave
cli
sbb
popa
js
outsb
aam
xchg
jns
pop
ss
subb
pop
fcoml
adc
fwait
addr16
fwait
add
ljmp
arpl
dec
sub
ja
cmpsl
hlt
push
shrb
into
mov
insb
jle
dec
ret
jmp
fisttpl
xchg
in
es
mov
or
stos
fidivl
mov
loopne
sub
iret
push
add
addr16
xor
inc
daa
and
in
adc
mov
bound
xchg
push
ret
inc
push
pushl
jbe
mov
in
pop
out
das
inc
mov
lods
dec
pop
push
or
sbb
inc
add
xorl
xor
fucomp
rorl
mov
loop
push
dec
gs
movl
js
in
les
sub
jp
cmp
xchg
dec
inc
out
push
pop
push
push
repnz
pop
pop
stos
aas
adc
cmp
mov
inc
mov
sub
mov
jne
push
ret
mov
in
xor
shl
cmp
jecxz
push
pcmpeqd
jno
mov
jle
in
cmp
xor
sub
xchg
xor
repnz
dec
repnz
movsl
jno
push
pop
sarl
stos
dec
stc
mov
xchg
mov
mov
je
imul
cmp
mov
fldl
xchg
inc
sbb
ret
xor
mov
outsb
push
mov
sbb
in
push
jp
inc
popf
nop
loop
pop
test
jne
jp
or
test
push
xchg
push
pusha
cmp
jmp
and
fisttpl
aas
xchg
sub
inc
sbb
xchg
inc
push
ds
xor
mov
int3
sub
sbb
pop
into
fmuls
mov
xchg
or
ja
mov
cli
out
mov
rorl
push
mov
bound
mov
sub
cmpsb
and
sbb
fucomi
lods
lret
mov
arpl
mov
xchg
xchg
inc
sub
fwait
inc
js
mov
sub
dec
push
sub
out
pusha
dec
mov
pusha
sbb
and
mov
outsb
arpl
adc
push
ficompl
xlat
aam
cmp
jmp
clc
mov
mov
aaa
push
ds
popf
adc
push
mov
andl
mov
mov
fwait
pushf
dec
mov
cmpsl
stos
test
jbe
jne
lea
imul
xchg
enter
mov
cmp
test
adc
shlb
test
push
push
outsb
add
dec
ljmp
lcall
mov
pop
enter
cmpb
ja
cltd
sarb
loop
mov
or
jo,pn
mov
stos
pop
jecxz
jnp
stos
sbb
dec
sub
hlt
pushf
repz
mov
dec
xor
fwait
jl
rclb
es
mov
add
sub
pop
and
sbb
mov
fidivrs
clts
mov
mov
mull
repz
jg
popa
push
mov
dec
xor
xor
sbb
xchg
adc
sub
cld
out
mov
cmp
inc
jb
xchg
xchg
push
rorl
sbb
addr16
stos
xorl
jae
nop
inc
xor
push
or
cmpsb
jns
cld
push
divl
xchg
push
or
fimuls
addr16
lahf
mov
inc
jecxz
lcall
imul
cmc
and
sbb
push
call
adc
adc
add
add
mov
mov
ja
arpl
sbb
int
mov
inc
add
popf
pop
ljmp
and
ja
pushf
imul
mov
popf
sti
mov
dec
scas
push
cmp
mov
lods
divl
in
ds
jl
add
pop
cltd
adc
loop
pop
outsb
nop
loop
int
mov
fidivl
call
data16
push
xor
les
sarl
add
pop
inc
inc
stos
ret
scas
pop
ficoml
fs
es
push
pop
cmp
stos
pop
jae
sbb
fildll
enter
stos
fwait
jle
js
and
adc
fidivrl
bound
bound
pop
popf
push
dec
or
mov
mov
lds
mov
mov
dec
lds
andl
mov
mov
push
mov
in
cmpsl
mov
mov
andl
dec
cmp
gs
jl
push
cli
or
jecxz
inc
ret
aad
pushf
cmp
loope
adc
int
pushf
mov
fs
sub
cmc
stos
inc
jns
pop
or
push
jl
lock
popl
mov
mov
arpl
push
out
and
dec
movsl
data16
inc
jl
pop
add
lock
xor
repz
inc
push
pop
adc
fnstenv
hlt
jecxz
jmp
lods
cmp
lcall
and
pop
xchg
mov
mov
inc
in
sbb
pop
mov
dec
mov
mov
xor
out
sarb
push
add
dec
sbb
leave
imul
or
cld
sbb
adc
sti
fists
fs
call
loopne
loope
mov
jmp
cmp
scas
sbbb
mov
cmpsl
jp
mov
repz
jmp
mov
cmp
xchg
loop
push
aas
out
int3
or
pushf
push
or
cmp
dec
and
inc
adc
mov
dec
rcr
mov
fs
shl
dec
or
outsb
jbe
in
shrl
jl
jl
jo
and
pop
mov
hlt
shll
mov
arpl
lock
adc
mov
daa
int
mov
xchg
cltd
jno
ja
inc
push
jge
ds
fldenv
dec
sbbl
cmp
insb
adc
aad
sub
loop
fdivr
in
mulb
fs
add
ficoms
jns
mov
adc
jno
mov
mov
xchg
push
js
repz
add
xchg
cmp
and
scas
mov
fildll
sub
mov
dec
orl
pusha
leave
pop
mov
xor
cmp
and
jg
jnp
mov
xchg
sbbl
jmp
cmpsb
push
and
jb
loop
out
jns
inc
xchg
sbb
repz
rcrb
inc
pop
sub
bnd
arpl
ss
fs
imul
imul
sbb
test
subl
enter
cmpsb
xchg
xchg
mov
dec
bound
sbb
sub
out
push
cmp
sti
add
out
pop
xor
orb
ret
cltd
push
call
cmp
push
je
mov
orw
cmp
scas
addr16
hlt
or
push
mov
push
push
mov
sti
sti
xor
pushf
cmp
fsubr
and
mov
sahf
out
shr
xchg
pop
fs
out
mov
xchg
out
rol
push
and
fisttpll
add
rcll
scas
test
fsubl
sbb
jecxz
sub
decb
outsb
lret
xchg
cmpl
ret
das
imul
inc
mov
mov
pop
xchg
cmp
pop
adc
in
jge
fs
jb,pn
insb
ret
jp
sbbl
xor
fbstp
fidivs
xchg
icebp
jg
sub
dec
sbb
scas
stos
push
add
dec
mov
and
xchg
loop
xchg
js
sub
jo
aaa
int
adc
sbbl
imul
xchg
js
iret
cwtl
andb
add
dec
shlb
xor
pop
mov
ljmp
filds
xchg
popl
ret
aas
and
push
cmp
aaa
dec
scas
push
xor
inc
into
ljmp
loopne
inc
fbstp
clc
out
push
and
mov
push
jmp
stc
fimull
dec
imul
bound
mov
shlb
stos
js
mov
lcall
les
jl
int
lds
scas
outsb
std
cmp
adc
js
mov
cltd
add
and
push
out
pop
inc
insl
aam
movsl
dec
jl
jb
dec
mov
sub
or
aad
push
mov
int
cmp
xor
es
test
in
rcll
or
lcall
lret
jbe
push
ficomps
into
push
cmp
sbb
dec
pop
testb
ret
cli
cmp
push
pop
pop
or
mov
movsl
adc
push
mov
pop
outsb
ss
push
roll
enter
push
xchg
lahf
mov
and
dec
mov
ret
loopne
mov
sub
je
dec
pop
testl
jno
addr16
rcll
xor
xchg
xor
mov
fistpl
inc
fdivrl
push
aam
pusha
testl
mov
jp
jns
lret
push
lock
and
xchg
adc
sbb
les
cmc
pop
cmp
aaa
xor
sbb
out
add
mulb
inc
xor
jg
pop
lds
jecxz
sarb
scas
mov
stos
rcll
mov
das
loopne
mov
push
jb
cmp
icebp
cmp
int3
push
test
add
xchg
in
fucomip
push
in
xchg
mov
gs
sbb
or
xor
jle
pop
xchg
push
cmp
inc
pop
stos
rorl
std
mov
mov
fidivrl
xor
out
sub
xorb
adc
xor
fcompl
mov
fistl
mov
test
aas
stc
aad
test
shrb
out
jbe
mov
loop
mov
push
cwtl
cmp
push
testl
bnd
cmpsl
mov
adcb
iret
push
sarb
pop
inc
sti
pop
or
pop
fs
aad
push
mov
enter
bound
outsb
sub
xor
mov
out
and
inc
mov
xor
dec
sti
out
inc
xorb
lcall
fists
inc
ret
pop
fmuls
dec
jle
mov
out
rep
lods
in
add
add
sbb
sbb
jmp
hlt
adc
fisubl
push
lcall
mov
shlb
je
dec
inc
mov
xor
pop
imul
push
mov
ficomps
cmp
aad
popf
adc
iret
ret
rcr
push
push
and
lods
lret
or
mov
adc
fcomps
inc
cs
scas
and
lea
mov
outsl
pop
push
inc
mov
lock
rclb
pop
test
lcall
inc
cmpsb
jb
popa
mov
into
push
sti
push
lods
push
and
fs
xlat
jp
adc
pop
lods
dec
test
repz
jle
fstl
jno
ljmp
lock
dec
popa
xchg
dec
stos
inc
fsubr
loop
out
in
mov
push
mov
or
pop
xor
cmp
adc
mov
xor
push
xchg
mov
mov
and
pop
dec
mov
sbb
adc
cmp
repnz
js
xlat
outsb
xor
and
lods
xlat
pusha
pop
fistps
mov
push
data16
inc
xchg
sbb
fbld
vpaddw
scas
dec
push
push
insl
fwait
imul
pop
push
loop
jp
add
ljmp
unpcklps
or
ss
loop
xchg
ss
xchg
mov
mov
xor
lret
push
and
mov
nop
sub
adc
mov
stos
mov
pop
mov
stc
dec
ret
mov
adc
sub
mov
les
inc
push
pop
mov
inc
push
sbb
call
add
test
insb
fs
rolb
das
movhps
dec
dec
testl
lret
or
and
xchg
jne
mov
nop
jecxz
pop
mov
xchg
and
sbb
pop
mov
push
addl
bsr
mov
mov
addr16
add
and
sbb
je
inc
jp
inc
out
add
movsb
jno
jge
je
pop
jle
sahf
rol
cmp
fs
loope
or
lret
pushf
sbb
or
call
lret
inc
lcall
mov
dec
int
adc
sub
insl
in
xchg
mov
inc
mov
push
dec
xor
mov
and
sbb
jmp
sub
aam
ret
outsb
test
negl
add
neg
mov
outsl
xorl
push
stc
ret
cmp
sti
push
clc
loopne
adcb
jne
xor
fs
rcrl
enter
mov
sub
mov
in
pop
mov
mov
adc
dec
jb
sahf
add
fucom
inc
movsb
aaa
push
out
enter
cmp
dec
push
enter
inc
xchg
ja
push
das
mov
addr16
mov
lods
sarl
in
and
adc
outsl
nop
pop
inc
sahf
adc
lock
repz
cli
rcrl
mov
sub
xchg
mov
popa
jle
mul
mov
repz
fs
or
cmp
bound
aaa
adc
lea
add
int3
pop
fwait
xlat
pop
pop
inc
outsl
push
inc
scas
xlat
out
ds
or
cmp
jmp
pop
jle
mov
mov
sub
ja
sbb
shll
add
push
aaa
pop
lret
fwait
test
cli
jne
paddw
mov
movsb
fisttps
dec
jnp
xor
int
enter
jge
mov
out
mov
imul
dec
lods
sti
add
adc
ds
arpl
mov
adc
push
add
mov
adc
mov
push
mov
mov
jo
test
insb
mov
int3
fcoms
push
int3
int3
jae
cmp
stc
pop
icebp
push
shlb
push
in
fldenv
mov
xor
add
and
dec
jecxz
mov
test
dec
mov
jnp
shl
sub
arpl
out
mov
adc
inc
leave
jno
xchg
and
or
jg
test
pop
cmpb
ss
dec
sbb
sub
fwait
cmpsb
mov
inc
dec
into
pop
fcompl
popa
lret
add
insl
cmp
jge
lods
cmpps
arpl
clc
push
pop
or
add
mov
jbe
or
mov
aad
mov
call
xchg
mov
lahf
mov
mov
insl
aad
jmp
fisubl
cli
stos
cmpsl
ret
sahf
adc
push
xchg
cli
fmul
fsub
xlat
loope
sbb
out
leave
stos
inc
lods
mov
inc
jl
jb
mov
cmp
aas
add
sbbl
sbb
gs
push
xchg
les
fsubs
mov
push
fcomi
fsts
nop
mov
out
mov
add
adc
cmp
sbb
pop
add
sahf
imul
and
stos
sub
lods
movsl
aam
leave
outsl
xor
jge
add
or
push
jne
js
enter
aaa
mov
cmp
daa
xor
loop
xchg
xor
loope
repz
sbb
out
mov
add
pop
cmp
pop
dec
mov
mov
aas
dec
xchg
test
cwtl
lret
mov
mov
insb
out
jo
cmpsb
push
xchg
aaa
enter
stos
or
mov
cmpsb
xchg
jmp
dec
mov
mov
cmp
push
addr16
out
push
rcr
sbb
xor
push
int
lahf
sub
stos
add
cmp
data16
sahf
inc
adc
pop
test
inc
inc
and
test
in
inc
repnz
xor
cld
and
repz
lret
call
and
adc
leave
in
push
or
xorb
mov
sub
cmp
leave
mov
xor
cwtl
pushf
fdivrp
dec
arpl
icebp
enter
addr16
mov
or
pop
mov
add
lods
negb
jae
test
mov
adc
cmp
push
bound
xor
inc
and
cmc
imul
jg
sbb
addr16
pop
shl
push
cmpsb
nop
or
pop
xor
push
adc
sbb
repz
cmp
sub
enter
inc
sbbl
adc
sub
add
call
arpl
stc
mov
mov
cmpsb
or
out
lods
sub
dec
cltd
arpl
out
push
mov
add
mov
sbb
scas
aad
xchg
fs
arpl
mov
cmc
imul
jo
mov
stos
and
in
aaa
jle
test
lahf
add
das
mov
jmp
cmp
mov
jge
imul
scas
lds
enter
aas
xchg
add
inc
cmp
pop
ret
je
jge
pop
pop
mov
xor
dec
fistps
daa
aad
pop
fwait
or
cld
pop
call
lcall
mov
push
inc
or
push
mov
xchg
fstl
shrl
dec
mov
add
in
sub
dec
jb
add
xor
leave
push
sbb
fdiv
ljmp
mov
arpl
out
into
arpl
xchg
xor
das
faddl
inc
movsl
mov
lock
jnp
mov
mov
shll
outsl
mov
subl
aaa
jns
xchg
dec
cmpsb
icebp
and
push
xor
mov
jg
cs
sbb
lcall
cld
jne
mov
vpinsrw
cmc
push
leave
mov
inc
jecxz
mov
in
sbb
sub
js
daa
int3
jmp
mov
lahf
fs
jbe
and
xlat
lret
pop
jnp
outsb
rorb
lret
lock
shrl
gs
inc
or
push
test
les
push
jns
das
xchg
cmp
jg
adc
cmp
jge
or
xchg
sti
push
dec
gs
fucomip
test
dec
in
cmp
scas
mov
cmp
shr
popa
xor
dec
pop
js
mov
cli
mov
jl
jbe
inc
lcall
mov
mov
and
sbb
rcr
les
xlat
add
lret
in
fadds
xor
jmp
push
je
jg
rorl
subb
negl
imul
fwait
adcb
outsb
xor
xchg
xor
mov
xlat
inc
mov
sbbb
xchg
add
cmp
mov
addr16
push
add
or
sub
xchg
pop
dec
mov
sbb
xchg
sbb
jnp
sbb
mov
pop
fisttps
cmp
xor
push
stc
addr16
outsb
mov
or
fildl
push
mov
rorl
mov
enter
fwait
add
int3
inc
fwait
mov
cmp
data16
aam
mov
jo
mov
aam
inc
loope
jbe
xchg
jl
sbb
dec
fmul
inc
insl
xorb
ret
movsb
sti
pop
ss
movsl
mov
insb
mov
mov
inc
roll
sub
jl
out
outsl
enter
movsb
sbb
loop
stos
arpl
push
pop
push
mov
cmp
stc
push
arpl
push
pop
mov
test
inc
jae
in
in
clc
das
aad
pop
push
mov
pop
push
stos
xchg
pop
clc
adc
inc
and
sub
xchg
push
cmp
jmp
jle
jns
or
add
mov
sub
or
mov
or
push
call
add
mov
setle
sarl
sub
negl
mov
lock
xor
cwtl
xlat
sbb
push
cmp
scas
sbb
dec
jmp
ficoml
orb
xchg
push
das
and
add
jmp
mov
outsb
cmpsb
nop
rcrb
push
adc
mov
pusha
mov
lods
popa
and
loop
hlt
imul
stos
rolb
inc
loop
rorl
sahf
std
jecxz
inc
adc
mov
and
push
stos
shrl
imul
lods
push
sub
ret
inc
mov
out
aaa
pop
and
std
lcall
jo
cld
loope
imul
insl
iret
sub
aad
inc
mov
test
push
and
fdiv
bnd
push
jnp
ja
orl
outsb
enter
mov
cmp
aaa
faddl
mov
cs
loopne
inc
cmp
xchg
mov
add
addr16
nopl
shrb
movl
ret
fldenv
leave
dec
xchg
in
decb
lahf
int
push
jno
pop
adc
repz
sbb
ficomps
push
and
cmp
fs
mov
push
mov
jge
sub
popa
xlat
push
das
sub
test
mov
push
es
nop
mov
addb
and
xchg
insb
addr16
loop
test
xlat
loope
test
jns
out
rcr
sub
aas
xor
xor
mov
mov
mov
jge
push
mov
xor
out
shll
jmp
aas
jl
lret
lods
lea
arpl
fcoml
xor
add
jge,pt
push
rdtsc
xchg
hlt
sub
push
push
movsl
adc
xor
ja
sub
cmp
pop
add
test
loop
xor
jp
in
inc
ss
add
std
dec
outsl
mov
in
mov
mov
ljmp
mov
mov
in
mov
cmp
push
pusha
inc
lock
cltd
shll
addr16
sbb
test
hlt
xor
and
fcomi
lds
addl
push
les
dec
fimuls
lods
out
pop
into
jmp
push
and
xor
xchg
add
sbb
addr16
pop
xchg
fwait
or
idiv
inc
xchg
sbb
in
mov
aas
test
movb
nop
lahf
push
push
add
xchg
out
addb
xchg
pushl
lock
xor
rcl
push
push
into
shll
cmp
mov
repz
and
daa
popf
insl
in
pushf
cmp
repz
xor
popf
inc
leave
stos
cmp
sub
xchg
sub
stc
sbb
stc
inc
imul
shll
idivb
out
dec
push
jne
push
test
lea
or
lods
into
adc
jg
jl
loopne
push
dec
push
rolb
jl
faddl
cli
cmp
and
out
pop
sub
les
fisubl
shll
mov
xchg
std
xor
and
cmp
fwait
test
test
loope
cmp
cmp
push
xchg
hlt
leave
imul
mov
sub
gs
rclb
dec
in
leave
pushf
js
and
sti
or
or
rcl
and
cmp
out
int
sbb
cmp
pusha
pop
mov
or
bnd
mov
xor
enter
std
subl
stos
adc
pop
pop
aam
in
mov
cli
cli
data16
out
dec
decl
rcl
pop
push
movsl
and
mov
sub
adc
inc
push
int
jl
add
imul
rorb
and
sbb
mov
cmc
fiadds
xor
aad
adc
jle
iret
push
adc
dec
mov
fstpl
cmp
popa
iret
dec
aas
sub
xor
dec
shlb
in
sbb
add
cmp
stos
lret
pusha
mov
mov
sbb
cwtl
popf
clc
push
adc
lcall
dec
pop
dec
fdivrs
clc
movsb
jbe
inc
sub
out
or
aaa
dec
mov
fwait
and
mov
mov
cmp
or
test
mov
cs
fsubrl
clc
sbb
lcall
or
sub
and
push
mov
xchg
jmp
inc
xchg
add
add
sbb
push
pop
dec
icebp
mov
ds
dec
gs
fwait
icebp
pop
stos
xchg
or
adc
ja
pusha
lret
xchg
mov
test
and
jnp
mov
rcr
mov
sub
mov
add
loopne
push
aad
or
and
pop
dec
jno
xchg
cmp
rorb
jmp
pop
ret
xchg
lds
mov
or
dec
jecxz
mov
dec
mov
decl
into
mov
subl
bound
pusha
jmp
inc
cli
xor
mov
jne
gs
fcmovnbe
dec
mov
sbb
sub
jecxz
cmp
jle
lods
xchg
cltd
cmp
xchg
and
adc
stos
repnz
imul
cmp
loopne
cmp
push
xlat
jle
add
cwtl
fisubrs
icebp
cwtl
lahf
cmc
lahf
stos
adc
cmc
negl
lods
push
mov
mov
adc
call
xchg
xchg
repz
or
lds
idivb
mov
lret
js
das
add
pop
lret
mov
popf
and
test
in
sbb
fbld
jmp
jnp
popf
and
jp
mov
hlt
cmp
out
fisubrs
out
test
stos
scas
dec
jg
sbb
pop
mov
sahf
mov
jno
mov
jp
lods
cmp
scas
push
adc
mov
fistpll
orl
loop
xlat
and
inc
lods
pop
scas
jb
xchg
or
adc
data16
xchg
jmp
int3
ja
jne
xchg
mov
jl
mov
sti
insl
stos
xorb
dec
cmp
push
mov
sub
jnp
cmpsl
adc
mov
icebp
scas
stos
sub
xchg
fcmove
addl
in
in
sbb
mov
cmpsl
mov
xchg
push
jb
int3
insb
loope
sbbb
dec
mov
popa
test
push
dec
dec
adcl
mov
scas
lock
push
sbb
or
mov
mov
rorl
or
add
adc
imul
add
jp
ret
mov
jmp
lret
in
fimull
dec
daa
xchg
push
xor
jns
adc
pop
dec
inc
sub
lds
jne
repz
sub
fimull
or
into
and
and
lods
jmp
ficoml
xchg
and
stc
mov
mov
int3
movsb
fsts
and
xchg
pop
push
push
pop
js
es
push
or
inc
mov
sbb
out
loope
xor
xor
mov
push
jns
xchg
test
xchg
jl
stc
loopne
lea
mov
cmp
sbb
adc
xchg
adc
je
jne
out
jne
inc
in
loope
jo
mov
shll
pop
fsubs
mov
and
inc
jmp
adc
jb
nop
adc
mov
mov
stos
loope
mov
adc
imul
lea
shrl
push
mov
add
add
call
lds
mov
lds
pop
je
push
lea
dec
cmpb
xchg
mov
cmp
fisubl
sub
xor
cs
mov
loop
jbe
das
mov
loop
jge
adcb
adc
dec
fdivl
mov
lock
and
cmp
mov
mov
or
js
mov
lods
dec
cmp
xchg
iret
into
xchg
fisubs
jmp
mov
popa
dec
bound
jle
cmc
inc
mov
xchg
adc
pop
lret
cld
push
iret
sbb
enter
cli
sub
mov
cs
jmp
test
lcall
xchg
xchg
jns
xchg
fsubs
cmove
adc
jno
sub
xor
scas
sahf
out
or
js
mov
ret
and
xchg
xchg
in
mov
mov
sbbb
loop
shr
add
pop
jecxz
gs
add
adc
cmp
sub
pop
dec
mov
xchg
add
es
adc
fisubs
leave
sbb
out
inc
pop
js
ret
loop
lds
or
sub
sbb
dec
lcall
inc
enter
jl
out
cmp
sub
mov
dec
mov
movsl
cmp
cmp
cld
and
sub
cs
leave
xlat
xchg
hlt
movsb
xlat
test
xchg
cwtl
cmp
add
jl
sub
testb
pavgb
add
cmp
pop
inc
mov
orb
lea
inc
stos
jno
jns
cs
out
push
pop
and
push
rcrl
mov
ss
popa
mov
jmp
add
sub
sub
data16
jbe
leave
inc
sub
xchg
in
mov
inc
testb
jnp
mov
test
sti
jge
mov
les
std
loope
adc
add
pop
xchg
fadds
jae
pushf
loop
and
push
sbb
and
adc
cmpsl
loop
mov
pop
and
je
shlb
frstor
jns
add
shrl
pop
inc
mov
xchg
int
push
or
shrb
ljmp
cld
mov
pusha
pop
stos
sub
daa
das
test
int
and
jns
and
fucom
popf
xorl
dec
insl
in
dec
pop
sarl
mov
repnz
popf
pop
popa
mov
dec
xchg
lahf
fcoml
xchg
sub
mov
in
into
jp
adc
dec
xchg
add
fistpll
mov
outsl
stos
rorl
push
or
data16
cmp
add
cmpsb
pop
cli
jno
or
add
jg
imul
insb
clc
adc
push
aaa
dec
mov
inc
imul
inc
movsb
inc
xchg
lock
jno
data16
lret
fwait
popa
js
mov
enter
push
aad
cmpsl
cmpb
inc
cli
incb
pusha
pop
ja
icebp
add
imul
lahf
push
neg
push
jg
iret
sub
nop
xchg
sbb
sub
out
enter
ja
cmp
jns
mov
push
mov
and
call
test
out
jge
push
loope,pt
push
pop
inc
test
push
xor
mov
jne
bound
push
mov
push
xor
pop
sbb
xchg
dec
fdivrl
pop
push
sar
lods
mov
or
jns
icebp
push
xchg
cmp
dec
pop
dec
in
add
cmp
addl
bound
cmp
push
pop
inc
lret
roll
or
decl
xorb
xchg
inc
ja
push
and
aam
sbb
repz
lods
inc
mov
call
xchg
adc
outsb
aad
adc
xchg
sbb
xor
push
cs
xor
and
sbb
and
fidivrl
insl
mov
test
or
clc
push
jb
dec
fsubl
jmp
outsl
pop
adc
adc
insb
pop
sti
sbb
imull
or
pop
mov
sbb
fmuls
adc
cmc
mov
xor
icebp
outsl
imull
cmp
xlat
insl
repz
sub
scas
cmp
sub
das
inc
pop
xchg
fdivrs
inc
cltd
pop
mov
push
xor
mov
jne
push
or
push
add
sub
and
ret
dec
jl
ja
aam
jbe
xchg
push
gs
push
push
ja,pn
loopne
push
mov
popf
sub
ret
out
out
xor
ret
xchg
addr16
outsb
or
pop
sub
add
shlb
fsubrs
enter
xchg
push
lods
nop
filds
push
add
sahf
sbb
das
imul
dec
mov
rcrb
repz
jmp
xor
test
dec
lods
sbb
xor
push
or
mov
jp
pop
adc
daa
outsl
sub
mov
fdivl
or
push
mov
sub
gs
mov
pop
cwtl
pusha
aas
or
cmc
lcall
rcr
testl
dec
in
lahf
out
pushf
fucomip
pop
dec
or
pop
popa
daa
arpl
incl
imul
push
outsb
fstpt
sub
dec
scas
out
or
or
sub
cmp
shlb
sbb
mov
jo
adc
jmp
sti
aaa
cmp
mov
sub
sbb
pusha
mov
call
push
daa
push
xchg
stos
jns
pop
repz
push
mov
xchg
cmp
push
mov
in
jne
inc
mov
and
fcom
test
clc
clc
dec
push
and
pop
insl
dec
lahf
jno
xor
ret
sar
inc
imul
pop
mov
cld
cmp
cli
mov
cli
cmpsb
call
inc
rcrb
mov
lcall
jne
insl
ret
push
icebp
inc
pushf
inc
in
pop
xor
xor
jmp
mov
sahf
jecxz
icebp
adc
nop
leave
push
divb
dec
sahf
leave
ss
mov
mov
rcl
arpl
add
lahf
jno
sub
insl
xchg
insl
sbb
and
push
mov
adc
add
cmc
cmpsl
xlat
stc
in
push
lds
aas
pop
mov
pusha
pusha
and
pop
push
adc
xor
mov
push
pop
mov
add
cwtl
push
test
mov
out
sar
insl
xchg
fistl
mov
int
sbb
outsl
popa
repnz
xor
hlt
push
sbb
lea
cmpsl
push
pushw
jg
cmp
icebp
jnp
imul
xchg
jbe
adc
push
push
push
shl
and
jecxz
dec
xlat
arpl
xor
hlt
cmc
lods
inc
aas
mov
cmpl
leave
push
shrl
jns
jno
mov
mov
mov
ret
cmp
sub
mov
sbb
lods
gs
je
outsl
xor
cmpsl
repnz
sbb
popf
add
dec
jge
lahf
sub
jmp
scas
mov
mov
and
pop
movsl
gs
dec
cmpsl
repnz
xchg
dec
cmp
lret
cmc
fildl
mov
jo
sub
jle
jl
insb
sbb
cmc
popf
int
orl
xchg
mov
inc
scas
dec
mov
mov
or
insl
hlt
enter
and
test
pop
xor
rolb
ds
sbb
jp
ret
push
into
mov
inc
hlt
lds
sarb
dec
push
mov
mov
jnp
sub
repnz
aam
add
mov
leave
jge
rolb
mov
or
ret
sbb
lea
fwait
mov
out
movl
dec
mov
push
xor
jmp
lea
adc
ja
inc
add
or
inc
sub
in
pop
mov
push
cmp
sti
cmpsb
std
xor
push
insb
test
mov
pop
cmp
add
mov
mov
ret
mov
shll
pop
popa
jecxz
cli
cmp
ljmp
cmp
xchg
pushf
xor
dec
xor
xor
xor
jbe
mov
inc
ja
and
mov
ret
test
cmp
cmp
sbb
push
pop
cld
or
es
dec
jle
iret
xor
xor
mov
sbb
and
push
mov
inc
ja
mov
ljmp
scas
std
cmp
mov
sbb
int
mov
dec
push
scas
ja
dec
mov
lds
aam
push
inc
pop
pop
scas
std
push
lret
xlat
stos
repnz
mov
and
ljmp
ljmp
stos
adc
nop
movsb
mov
push
ja
mov
cwtl
divl
shlb
sbb
add
push
leave
push
fst
push
adc
mov
out
gs
gs
dec
jp
mov
clc
jl
dec
imul
loop
jecxz
test
mov
sub
imul
cmp
mov
mov
cli
in
xorb
sbb
shl
inc
pop
fisttpll
sub
push
mov
and
insl
adc
loope
xor
cs
sbb
xor
loop
popa
or
hlt
push
ret
dec
push
inc
lock
es
lea
test
mov
push
aad
ds
sub
aad
or
or
xor
and
jp
dec
aam
jno
mov
cmpsl
xor
jb
inc
shll
add
cmpsl
imul
mov
es
mov
out
mov
dec
sbb
or
scas
iret
jmp
stos
les
das
push
jmp
or
int3
dec
sub
test
push
mov
push
push
adc
lea
dec
push
pop
aad
push
sbb
dec
outsb
mov
xchg
insb
add
pusha
sarl
jle
rcr
mov
fnstsw
pop
ljmp
adc
fisubs
cmc
gs
imul
movsb
pop
ds
mov
pop
pop
pop
movsb
loop
data16
or
xor
mov
jns
out
gs
mov
in
cltd
icebp
dec
jnp
insb
fldcw
repnz
xchg
cmp
mov
adc
movb
add
enter
orb
nop
imul
jecxz
inc
pop
sub
orb
lods
adc
inc
cmc
fimull
outsb
mov
fsubs
int3
jnp
adc
mov
inc
jo
bound
pop
and
iret
jge
xor
adc
test
movsl
cmpsl
add
adc
mov
sbb
je
pushf
sub
jbe
lods
jp
pop
sbb
mov
mov
int
sbb
hlt
test
xor
sbb
and
aas
call
jb
lds
xchg
or
mov
cmc
incl
dec
pop
out
test
mov
xor
fmull
mov
xor
shlb
pop
add
pop
ret
mov
cwtl
jo
pop
adc
xchg
ds
inc
outsl
shll
outsl
shrl
call
lret
adc
popa
and
lahf
inc
and
popf
xor
add
mov
sbb
lcall
stos
les
inc
mov
pop
sar
push
adc
fcmovbe
push
cltd
or
stc
fsubs
mov
pop
mov
push
popa
and
nop
lods
sub
pop
cltd
andl
testb
shlb
jae
xchg
mov
adc
mov
popa
lea
sti
ret
movsb
gs
int
mov
ret
les
add
cs
dec
pop
mov
pop
jle
lahf
and
inc
sti
jnp
xchg
nop
sbb
data16
imul
and
lahf
scas
stos
repnz
bound
and
sbb
test
lea
mov
outsl
aam
stos
ret
int
jg
scas
inc
and
xor
das
pop
add
mov
mov
xchg
je
dec
mov
movsl
lahf
add
out
inc
inc
xchg
mov
in
fstpt
and
mov
sbb
cmp
fldt
cwtl
mov
pop
xlat
ljmp
cmp
jl
fs
aas
cmc
adc
cmp
cmc
mov
inc
jecxz
popf
xchg
dec
cmp
insl
sub
pusha
mov
cmp
cwtl
ljmp
les
pop
inc
daa
and
mov
nop
decl
fcmovnu
cld
inc
mov
mov
xor
inc
lret
xor
cli
xchg
mov
jnp
xchg
flds
lcall
mov
cs
xor
sub
es
test
push
out
stos
and
or
push
xor
loopne
test
jl
popa
fcmovb
in
pop
enter
add
adc
xchg
pop
jge
sbb
push
adc
sub
push
dec
adc
jmp
push
dec
dec
sbb
dec
xchg
int
xchg
dec
cmp
mov
jle
adc
jae
mov
das
mov
and
cmp
mov
add
sub
mov
mov
jp
push
and
mov
inc
or
and
std
dec
fadds
incl
loop
xor
lret
xchg
sub
in
jb
das
cmp
aaa
call
sbb
es
mov
pop
mov
fistpll
pop
cmp
inc
aas
insl
in
and
jle
lods
dec
adc
test
add
cmp
mov
stos
fisttpll
lea
shl
jae
cmp
aam
mov
sub
clc
cmp
sub
shll
and
pop
xchg
and
ret
shrb
das
dec
mov
shrb
mov
and
arpl
out
mov
and
inc
divl
pop
orl
xor
das
aas
js
sub
nop
movsb
outsl
rorl
mov
xchg
fmull
pop
stos
and
jae
addl
fwait
dec
outsb
fcom
sbb
inc
sarl
adc
js
adc
push
mov
inc
cwtl
push
mov
mov
in
xchg
adc
dec
ja
out
shll
ja
fidivrs
and
fwait
push
les
shll
xchg
push
mov
and
sbb
ret
mov
shrl
cmp
jae
push
adcl
and
and
jmp
xor
outsb
jg
lods
jno
mov
subl
xchg
movsb
out
add
ret
pushw
sub
fwait
sbb
lock
sbb
repnz
enter
inc
lret
mov
sbb
push
sbb
adc
sbb
mov
es
dec
mov
sub
cmp
rcrl
scas
cli
leave
scas
or
pushf
mov
aas
xchg
in
sub
repnz
scas
lods
lods
push
xlat
push
xchg
inc
hlt
adc
scas
push
sti
mov
cmp
sbb
or
lcall
push
mov
dec
mov
es
les
arpl
mov
xchg
dec
fbld
jnp
jg
mov
scas
inc
outsl
dec
mov
inc
or
imul
and
inc
mov
dec
cmp
push
mov
inc
shl
mov
mov
push
scas
fwait
pop
jns
cmp
dec
and
aaa
sub
xor
mov
stos
add
shlb
iret
xlat
add
mov
mov
inc
sbb
repnz
cli
aaa
mov
push
cmp
or
dec
mov
mov
outsl
and
leave
or
add
fnstsw
int3
sbb
xchg
fcoms
and
jle
loope
inc
or
in
and
dec
sub
ffreep
pop
jmp
in
in
aad
out
jo
add
jmp
jno
pushf
xchg
mov
pop
mov
xor
mov
add
stos
rol
ds
lret
fsubs
mov
push
hlt
mov
add
dec
sbb
jp
dec
in
or
xor
mov
sarl
jmp
push
fdivrs
inc
jne
jo
nop
xchg
sub
cmpsl
subl
jmp
or
mov
mov
sub
repnz
cmp
call
pop
cltd
into
pushf
mov
movsl
test
jle
mov
in
or
lock
aam
mov
rcrl
jbe
and
js
or
bound
xor
arpl
xor
pop
ja
add
test
adc
cltd
mov
push
inc
jecxz
pop
lds
mov
lds
hlt
js
gs
outsb
and
pop
jae
lods
lods
cmp
movaps
popa
aaa
shr
stos
jmp
es
mov
dec
xchg
sub
mov
and
ja
cmc
push
pop
fwait
mov
or
push
sub
jge
gs
cmp
faddp
pushf
scas
std
out
bound
cmp
sub
gs
mov
cmp
sub
shl
int
inc
dec
test
jle
sub
dec
and
push
push
pop
sbb
pop
sbb
add
cmc
pop
negb
movsl
xchg
pusha
pushf
xchg
jle
test
les
jmp
sub
stc
jbe
lds
popa
mov
test
imul
xor
mov
xor
pop
or
pop
cltd
dec
dec
repnz
cwtl
mov
sbb
pop
xchg
pop
test
outsb
xchg
js
sbb
imul
mov
scas
mov
ds
jne
inc
loopne
dec
aas
loope
or
dec
dec
inc
cmc
sbbl
popf
fistpl
inc
xchg
test
clc
and
movsl
ja
cmp
out
and
movsl
mov
jmp
faddp
popa
cmpsb
pusha
and
mov
je
pop
shl
lock
aaa
roll
mov
mov
cli
sbb
inc
push
out
test
and
jne
sbb
sub
or
imul
or
mov
or
sbb
adc
mov
xor
xor
mov
dec
daa
xor
and
icebp
sbb
cmp
nop
cmp
addl
push
loope
das
les
fiaddl
inc
jbe
lret
loop
pop
incb
inc
rolb
cld
gs
sub
xor
mov
xchg
out
ret
nop
pop
cmp
es
mov
data16
enter
xor
jo
insl
sbb
inc
jbe
push
xchg
sti
rorb
cmp
cmpl
jle
mov
cmp
add
test
in
sarl
mov
pusha
jge
cwtl
push
mov
cmpl
dec
dec
xor
dec
jmp
cs
mov
ret
hlt
push
xchg
mov
out
xchg
hlt
test
jnp
movsl
sbb
jl
cmpsb
cmp
mov
push
notl
mov
lea
mov
ja
stc
cmp
jecxz
mov
outsb
cmpsb
dec
mov
jge
test
pop
imul
in
imul
xchg
cmpsb
push
inc
into
pop
fiaddl
repz
je
mov
add
pop
out
sbb
or
pop
cltd
jae
mov
mov
dec
or
dec
aaa
mov
jb
stos
xor
mov
sti
pop
rcl
cwtl
arpl
popa
mov
scas
pop
cmp
mov
dec
mov
imulb
lret
lcall
enter
mov
jp
repnz
or
adc
pop
pop
jmp
addl
addr16
aas
les
dec
aaa
shlb
cltd
ljmp
outsb
pop
stc
popa
popa
aaa
into
lock
ficoms
lds
mov
sbb
xchg
rol
inc
ss
xchg
es
sub
movsb
cmpb
pop
mov
xchg
cmc
push
inc
jns
jge
fdiv
mov
outsl
lcall
bound
rorl
or
mov
clc
adc
enter
js
in
psubw
push
fbstp
fiadds
pusha
mov
adc
jl
mov
adc
insb
add
or
mulb
cwtl
addl
dec
jbe
xchg
mov
xor
add
xchg
xor
popf
adc
out
jge
repnz
and
or
shll
jno
push
sarl
mov
mov
mov
idivb
xchg
je
loope
jle
int3
and
dec
mov
mov
mov
sub
jbe
jg
jge
mov
jl
lock
xor
les
adc
lahf
mov
inc
push
testb
popf
mov
test
jecxz
iret
icebp
pop
lret
cmp
inc
add
dec
xlat
bsr
and
addr16
addr16
int
cmp
cs
in
jns
jnp
pushf
jnp
shlb
dec
aam
jo
inc
adc
mov
gs
xchg
les
ljmp
das
clc
sbb
sub
clc
dec
adcl
and
and
outsl
in
ss
pop
sbb
add
push
leave
fcompp
mov
mov
loop
sub
mov
mov
inc
addr16
cltd
cmpsl
pop
call
xchg
and
xor
and
movsb
clts
or
imulb
xchg
aad
xor
sbb
not
push
ljmp
test
pop
cmpsl
or
iret
sub
mov
mov
stos
sahf
es
xchg
out
stos
js
inc
cmp
divl
outsl
xchg
push
push
jle
cmp
ficoml
fisttpll
and
xor
incb
sbb
loop
pop
mov
fists
repnz
ss
fstpl
shlb
mov
jno
mov
shrb
pop
add
shll
mov
inc
sarb
mov
pop
in
sbb
pop
push
jno
push
lds
adc
setge
xchg
jae
and
adc
mov
mov
sbb
in
popf
jnp
jmp
mov
jns
add
dec
jg
mov
clc
cmp
cmpsl
loop
xchg
cmc
mov
sti
ss
in
add
or
cmp
call
imul
or
cmpl
jmp
fistpl
sbb
and
sub
and
fadd
jmp
xchg
das
dec
out
adcb
stos
leave
shl
cwtl
and
xchg
hlt
mov
out
shll
fwait
ss
pop
mov
and
dec
ljmp
fstpt
jmp
adc
jns
push
or
fmuls
cli
push
xchg
sbb
mov
fistpll
out
or
add
push
sub
cmp
repz
add
push
lock
stos
jbe
adcl
sbbb
mov
and
out
xor
mov
jle
pop
jge
sarb
mov
aas
call
push
lahf
mov
add
js
subl
pop
popf
mov
xlat
dec
or
loop
enter
ret
mov
daa
cwtl
das
xchg
jge
pop
imul
leave
imul
enter
cmc
aad
sub
in
in
mov
faddl
jnp
jecxz
popa
pop
xchg
mov
xlat
out
adc
data16
sbb
mov
dec
jo
fcomps
inc
and
and
and
mov
push
pop
or
int3
lods
or
sub
xlat
cmp
sbb
fwait
cmc
jecxz
popf
std
jle
and
dec
lret
dec
rorl
daa
shlb
mov
js
andb
cld
jae
cmp
aad
cmp
xchg
mov
js
add
jno
cmpsl
outsl
xchg
fucomip
jne
popf
inc
aam
aam
inc
adc
jae
stos
sbb
jl
mov
xchg
lahf
dec
jns
test
push
sub
mov
test
pushf
sub
pop
sbb
pop
leave
sarb
movsb
sahf
test
xor
xor
addb
mov
xchg
adc
notb
or
fistps
or
dec
test
bound
outsl
push
jno
inc
mov
test
push
cmp
sub
fstp
cmc
adc
cmp
dec
cmpb
mov
inc
pop
mov
push
lea
mov
dec
mov
lret
cmp
inc
pop
pop
cmpsl
lea
xchg
out
gs
adc
xlat
iret
clc
cmpsb
ret
fstpt
into
dec
dec
inc
mov
adc
insb
dec
xchg
push
fimull
jns
mov
inc
lds
in
out
push
and
ret
and
pop
dec
ss
outsb
mov
pusha
pop
or
inc
into
mov
mov
stos
ffreep
ret
mov
adc
mov
sbb
or
xor
xchg
sahf
loop
ss
mov
fs
pop
pop
push
jbe
xor
mov
mov
push
mov
sbb
cmpsl
mov
mov
ja
stos
sarb
mov
ljmp
push
jne
jne
pop
iret
jae
loopne
js
cmpsb
insl
out
or
jne
cmp
push
sub
mov
pop
inc
push
fcmovu
lcall
je,pt
cmpsb
xor
cmp
ficompl
sbb
cmp
ss
fs
das
pushf
shll
das
add
jge
mov
adc
out
lock
cmp
lods
pop
insb
dec
xchg
and
cmp
sub
adc
insb
arpl
add
outsb
jae
std
xor
adc
je
jnp
leave
jnp
mov
out
sbbb
fs
pop
mov
xchg
lcall
add
mov
call
xor
pop
leave
cmp
mov
inc
mov
arpl
mov
dec
call
addr16
xchg
inc
sub
loope
lds
inc
repz
cmp
orb
mov
add
push
xlat
push
lret
cli
jp
out
nop
in
inc
xorl
pop
sub
xor
lcall
adc
mov
or
repnz
lea
cmp
xchg
push
imul
xchg
icebp
lret
cli
and
mov
jb
test
sub
adc
mov
jle
imul
loopne
fadds
lock
ja
fsubl
stos
clc
filds
gs
sub
dec
imul
xchg
dec
sti
xchg
rclb
dec
add
add
pop
mov
push
add
fisubrl
loopne
pushf
fcmovb
test
jb
and
aas
pop
and
cltd
js
adc
dec
push
and
stos
xchg
shr
cld
sti
or
xor
bound
mov
and
push
gs
lods
mov
xchg
jo
push
mov
sbb
mov
jae
pop
cmpsl
int3
add
add
loope
adc
idivl
xor
or
das
sbb
xchg
add
in
jp
mov
ds
popa
push
sub
inc
in
rcl
mov
or
pause
fld
adc
ss
arpl
mov
fadd
imul
sub
push
repz
xchg
outsb
dec
call
cli
aam
dec
lods
mov
insl
shll
sbb
ret
sarl
add
xchg
jg
mov
push
pop
pop
push
or
stos
add
sbb
fucomip
aaa
aam
or
fcoms
xor
in
mov
out
add
clc
fldenv
test
fistpl
pop
or
mov
push
jb
mov
inc
sub
dec
jne
repz
es
mov
sbb
in
ds
repz
or
and
sti
movsl
aam
xor
dec
aas
xchg
cld
xor
lods
mov
pop
pop
xchg
fdivl
inc
sbbl
cmc
mov
icebp
add
pushl
sub
test
xor
push
stos
repnz
in
mov
push
push
lea
pop
xchg
je
aas
test
int3
out
mov
and
mov
stos
dec
push
into
jp
scas
ds
outsl
clc
xlat
dec
dec
js
stc
xchg
cmpsb
mov
aad
repz
mov
fadds
sti
mov
fadds
popf
bound
push
cmp
shl
pop
adc
add
xchg
fisttpll
bswap
scas
outsl
sbb
or
cmpb
lret
fstpt
jns
sub
or
rorb
dec
push
xor
iret
jbe
mov
jns
inc
movsl
sahf
sarb
sub
adc
xchg
push
std
xorb
cmp
cld
jnp
repz
add
xor
xchg
stc
dec
jbe
adc
pop
inc
shll
loopne
outsb
sbb
mov
leave
and
and
fcmove
stos
jne
and
sbb
adc
inc
jne
shufps
cld
push
out
add
mov
cmc
dec
into
loop
adc
mov
jecxz
aad
push
dec
push
adc
imul
push
cmp
xchg
jne
movsl
lock
mov
pusha
enter
inc
push
mov
add
aaa
xchg
inc
adc
xchg
sbb
in
int
jno
sub
mov
sub
mov
mov
imul
jns
outsl
imul
mov
es
fs
add
dec
inc
and
jb
stos
mov
mov
fidivl
jmp
popf
xchg
fwait
loopne
test
push
pop
pop
lods
pop
sbb
or
mov
lret
fwait
arpl
rcll
outsb
add
jae
dec
mov
dec
add
ret
jne
sub
out
pop
cmp
cld
outsl
sub
repnz
jle
out
sbb
xor
je
lahf
divl
jmp
pushf
mov
mov
dec
mov
icebp
xchg
sub
sbb
add
int3
add
mov
out
dec
jns
adcl
push
adc
push
ljmp
fldt
aam
pop
out
xorl
cwtl
mov
sbb
xchg
jno
lahf
sbb
es
mov
mov
movl
fs
inc
lea
add
pop
aaa
aas
and
push
xchg
jbe
xchg
aaa
fs
mov
jo
inc
mov
or
add
lock
inc
mov
std
imul
into
push
xchg
cmp
sub
mov
aas
outsb
dec
lods
sub
cmp
xchg
pop
popf
or
inc
mov
lret
xchg
jne
lret
mov
sti
xor
mov
or
adc
adc
icebp
mov
lea
dec
fs
ss
outsb
lret
ljmp
js
cld
gs
test
ljmp
sbb
ljmp
outsl
in
xlat
and
push
popf
fucomi
test
into
out
mov
and
sarb
mov
lcall
mov
cmp
xchg
sbb
mov
xchg
mov
adc
aad
sbb
push
scas
movb
pop
lret
aad
adc
aas
je
imul
mov
cmpsl
popa
filds
xchg
test
fstpt
push
jae
gs
cmp
test
outsl
iret
in
mov
adc
ret
adc
mov
pop
iret
sbb
ret
addr16
push
pop
jae
or
adc
lahf
inc
ret
or
mov
cltd
call
addr16
dec
cld
jle
sub
mov
xor
into
mov
mov
sti
add
pusha
ret
xchg
arpl
andb
dec
xor
mov
cltd
cld
std
sahf
in
and
movsl
cmp
adc
repz
inc
popf
movsl
pop
in
ret
lea
aas
cld
jp
pop
imull
dec
or
xchg
lods
shl
add
cli
xchg
add
bound
inc
dec
cmp
mov
add
push
addb
mov
sub
xchg
jmp
imul
out
dec
or
push
pop
mov
jecxz
lcall
sbb
mov
test
pop
aas
in
jae
stos
pop
popa
jecxz
dec
ret
shll
cmpsb
mov
inc
mov
out
leave
imul
sbbl
pusha
pushf
and
push
jecxz
std
sti
sub
faddl
mov
scas
aam
push
pop
mov
adc
sbb
sti
sti
cmpsl
cmp
push
and
fcmovu
push
or
push
test
mov
push
push
mov
mov
ja
add
push
leave
dec
pop
aaa
mov
cmp
flds
fcomps
hlt
mov
ja
adc
add
pop
and
pop
push
out
push
or
mov
dec
xchg
jl
jo
dec
test
cltd
ss
xchg
aas
mov
jo
add
fbld
aad
inc
xor
int
dec
aam
or
push
jbe
fcmovne
mov
and
lahf
push
jnp
mov
rcl
loopne
ret
pop
push
push
rclb
ljmp
and
popf
cmpsb
cmp
insb
imul
test
call
pop
lahf
and
rcll
gs
imul
das
pop
cltd
sbb
fwait
xor
loopne
xor
aaa
ficompl
mov
xlat
addl
pop
fisttps
clc
pop
stc
lcall
andps
dec
mov
adc
shrl
mov
xchg
movsb
addr16
call
mov
aam
les
push
lret
xchg
add
sub
mov
ficoms
loope
mov
gs
ja
cmp
out
jl
pop
cmpsb
dec
sbb
and
xor
inc
sbb
or
loope
imul
push
cmp
xchg
iret
enter
popa
dec
inc
mov
sbbl
dec
enter
inc
jns
jle
jle
pop
cmpsl
jecxz
xor
out
jg
test
loop
mov
das
mov
int
insb
repnz
movsb
mov
stc
adc
shrl
pushf
xchg
push
xor
loop
iret
ror
rcrl
lock
int3
mov
add
cmp
jl
out
js
adcl
shll
scas
testb
push
fcoml
xchg
out
aam
in
sbb
sbb
ljmp
call
or
push
setge
popa
mov
movsb
inc
jae
and
lock
fdivrl
cmp
aas
mov
mov
jle
inc
add
add
push
mov
or
ja
movsl
mov
jp
sbb
ljmp
andl
xchg
or
popa
popa
push
xchg
xchg
fcomi
sub
loope
fs
arpl
pop
incb
push
insl
dec
sub
xor
rol
xchg
dec
xor
shll
pop
mov
push
insl
jno
ljmp
test
xor
cmc
jl
mov
sahf
xchg
cmp
or
mov
fsubrp
inc
mov
sbb
hlt
aad
cld
fadd
cmc
adc
dec
addr16
xor
mov
pop
cmp
adc
cmp
jecxz
out
sbb
bswap
stc
add
xor
pop
loopne
stc
or
loop
in
std
into
mov
ljmp
jecxz
ret
or
ret
bound
xchg
pop
stc
jecxz
or
insb
aam
sbb
mov
add
sbb
dec
aam
lret
mov
sahf
sbb
fsubrl
add
jge
icebp
cmp
sahf
scas
loopne
icebp
adc
mov
rclb
in
bound
push
mov
mov
push
clc
movsb
push
fwait
mov
mov
idivl
push
icebp
ds
cmp
inc
xor
push
cmp
push
pop
mov
lcall
mov
push
dec
mov
sub
inc
xor
xchg
lret
and
faddp
push
push
std
jno
fmull
movsl
xor
pop
imul
push
mov
pop
call
jnp
lods
xchg
mov
hlt
dec
mov
cltd
sbb
inc
push
xchg
push
adc
or
jmp
andb
aas
in
jbe
add
pop
mov
push
lcall
arpl
mov
mov
lds
mov
dec
xor
data16
jne
aad
sbb
nopl
sbb
out
mov
es
sub
add
pop
pop
mov
jne
push
outsl
pop
aas
dec
mov
cmc
sbb
test
shr
mov
sbb
or
mov
stos
cwtl
jecxz
mov
add
sub
jl
sti
addr16
loope
dec
int
adc
inc
dec
mov
sub
faddp
mov
test
lahf
inc
lds
ljmp
addr16
cltd
xchg
cwtl
sti
mov
and
mov
loopne
or
mov
js
mov
in
daa
popa
and
scas
mov
lea
les
jne
stc
mov
sarl
xchg
mov
xchg
mov
mov
push
pop
xchg
bound
dec
jmp
sub
movq
enter
pusha
add
dec
popf
jno
hlt
arpl
adc
jmp
jp
outsl
and
fwait
rolb
xchg
shrb
mov
sub
fsubrl
mov
fnstcw
xchg
xchg
in
inc
xor
mov
cmp
add
fmull
arpl
je
mov
cld
inc
xor
pusha
insb
pop
in
push
push
add
xchg
xchg
int3
fsubs
jne
xchg
ss
sub
push
sub
aaa
cmp
cli
push
aaa
mov
aam
mov
out
scas
lock
iret
dec
add
in
pop
jns
dec
test
filds
mov
jnp
ss
insl
pop
sub
sbb
ret
lahf
fsubrs
push
subl
sbb
mov
and
pop
ret
cmp
insl
pop
shrb
addr16
inc
call
std
mov
pop
fdecstp
lret
sahf
xchg
cmp
aad
hlt
lea
jp
popa
je
sti
jbe
ror
call
pop
cmp
inc
adc
or
incl
push
repnz
loop
mov
mul
fnstenv
push
aas
cmpsb
nop
shrb
cmpl
out
lahf
jno
pop
popa
add
and
cltd
sub
cld
inc
aam
dec
fidivl
dec
outsl
or
jb
dec
jle
dec
push
out
cli
das
xchg
loope
enter
adc
xchg
pop
gs
lods
lcall
sub
sbb
ljmp
mov
pop
and
xchg
pop
add
stos
std
sbbb
arpl
imul
adc
sub
repz
mov
and
and
cwtl
out
jne
inc
push
push
insl
hlt
jo
sub
push
xorb
movsb
in
push
pop
mov
pushf
push
mov
ljmp
rcrl
les
and
shrl
cmc
movsb
or
fdivrl
adc
mov
cmp
hlt
xchg
dec
cmp
mov
sbb
enter
pmaddwd
push
lods
add
push
push
cwtl
xchg
icebp
jle
popa
cli
std
gs
push
addr16
and
jmp
shll
pop
lods
mov
std
loopne
and
in
ljmp
test
shrb
inc
and
mov
push
sub
gs
pop
outsl
mov
ds
ficoms
sbb
faddl
rclb
jno
mov
or
jl
ftst
jo
rcrb
jg
bound
ret
imul
xchg
push
cmpsl
popa
cmpsb
mov
leave
arpl
jecxz
push
pushf
gs
shlb
sti
adc
fadd
xchg
pop
sarb
or
mov
sub
jge
loope
aad
mov
inc
call
pop
fsubrs
cmc
out
andl
rorb
rcll
dec
imul
lret
loop
test
mov
roll
hlt
test
inc
aad
pop
xor
dec
scas
xchg
insb
std
movsb
rclb
in
jle
lods
lahf
xchg
sahf
cmp
mov
std
sbb
je
jl
test
loope
xlat
loopne
sbb
mov
jg
sub
push
pop
dec
cltd
cmc
push
mov
popf
dec
xchg
aaa
sub
inc
jmp
pusha
mov
mov
test
scas
popa
inc
pop
lods
adc
jge
xor
jge
sbb
inc
jge
mov
jmp
inc
mov
fldl
lret
out
mov
shll
addr16
out
dec
lods
dec
push
sbb
rolb
cmp
fwait
cmc
mov
call
outsb
add
imul
fidivl
adc
in
ja
pop
shlb
mov
int3
jmp
inc
stc
or
mov
dec
es
push
xchg
dec
out
jb
rclb
test
fwait
lods
out
je
aaa
mov
mov
xor
mov
dec
lods
mov
jae
cmp
ficomps
sub
insb
lret
sub
add
pop
push
jle
ja
pop
aaa
lea
pushf
in
add
ret
cmpsl
popa
insl
fildl
sbb
pop
cmpsb
loopne
jnp
inc
outsb
mov
sub
aaa
sub
or
jo
and
dec
pop
adc
push
aad
add
push
lcall
cmp
fidivl
inc
out
into
insb
jne
inc
inc
loope
pusha
insl
pop
pop
push
aaa
out
pop
sbb
sti
inc
cs
popf
push
gs
pop
outsl
imul
aas
and
and
pusha
push
stos
js
popa
xchg
fsubr
xor
leave
add
dec
repz
test
mov
aam
leave
mov
ss
jg
inc
sbb
daa
cld
sbb
test
sahf
icebp
sar
divb
sbb
or
mov
jnp
pop
sub
lods
adc
shrl
out
rcll
nop
mov
add
mov
pop
dec
xchg
arpl
dec
mov
les
cmp
xor
mull
cmp
lcall
leave
movntps
addl
int3
and
mov
lret
bound
ret
and
fwait
data16
mov
xchg
repz
xor
lock
inc
in
loope
out
fisubs
jl
jecxz
and
xchg
mov
in
pop
mov
or
stos
or
in
dec
mov
push
fstps
mov
mov
push
lcall
and
inc
fcmovbe
adc
push
mov
loop
push
adc
cmp
fbstp
mov
enter
notl
sub
add
xlat
test
sbb
ds
jp
pop
adc
dec
jl
mov
popl
mov
xchg
inc
adc
dec
add
push
iret
das
xchg
jle
cmpsb
push
loopne
mov
cmpb
rcrl
push
xor
sbb
pop
jl
in
sbb
pusha
outsl
mov
lea
fmuls
jae
sbb
inc
popf
lcall
xchg
lcall
pop
cmpb
pop
aad
pop
sti
mov
aas
push
in
das
push
mov
mov
mov
arpl
lret
incl
xor
inc
dec
xlat
mov
insl
xchg
pop
out
xchg
dec
repz
pop
adc
fwait
jns
inc
fnstenv
push
popa
sub
icebp
shll
pop
dec
push
or
sarl
mov
mov
in
push
dec
lcall
adc
mov
mov
mov
mov
push
shrb
inc
out
hlt
pop
mov
mov
fucomi
shlb
mov
pop
push
in
xor
jae
mov
inc
push
adc
fs
mov
mov
xchg
xor
mov
jb
popa
or
sbb
and
aaa
mov
stos
cmc
dec
aaa
and
pop
call
clc
add
mov
push
pop
xor
jge
call
push
jnp
or
int
mov
mov
shlb
fldcw
add
sbb
mov
cmp
adc
call
js
fbld
pop
push
xor
ds
sbb
test
mov
fdivr
cmp
jge
sarl
adcl
std
xchg
cli
jle
push
jg
or
push
push
cmp
enter
inc
or
js
cmp
add
jmp
cltd
lahf
into
call
shr
movsb
repnz
cmp
xchg
mov
sbb
pushw
pop
cmpsb
jecxz
imul
jno
and
test
pop
xchg
scas
pop
ja
into
dec
jecxz
xchg
mov
xchg
ljmp
push
push
jg
dec
xor
jmp
cmpsb
scas
dec
mov
dec
sub
mov
pop
rorb
movsl
add
push
nop
movl
out
jns
adc
and
and
and
jle
adc
test
xchg
mov
js
sti
or
push
mov
clc
cmpsl
popa
sarb
xor
xchg
jne
cmp
insb
popf
mov
push
dec
add
xor
das
inc
lods
sbbl
fidivs
in
scas
xchg
adc
push
and
shrb
cli
fcmovbe
push
pushf
jp
jle
add
ds
lret
or
sbb
fs
mov
pop
dec
stos
lods
adc
cmpl
loope
mov
add
cwtl
mov
lods
hlt
loopne
into
or
int3
sub
pop
mov
in
or
dec
add
in
jecxz
mov
cli
dec
das
repnz
mov
in
daa
sub
push
mov
mov
jmp
test
rdmsr
test
push
inc
fadds
jbe
es
out
stos
mov
arpl
cmp
inc
pop
inc
cmp
imul
fsubrl
addr16
bnd
inc
jbe
adc
pop
popa
cs
aam
xor
xor
data16
in
inc
jmp
shll
push
cli
or
stos
add
push
dec
je
test
fcomi
mov
push
sbb
or
inc
aam
cltd
jbe
hlt
mov
mov
repz
xlat
xor
dec
add
aas
pusha
lret
mov
imul
adc
inc
aas
imul
test
aas
std
push
popa
adc
cmp
jnp
rcr
ret
cmp
test
icebp
or
arpl
mull
aas
fnstsw
and
xchg
movsl
inc
pop
push
push
sbb
sub
addr16
push
mov
loopne
shl
repnz
int3
lahf
push
lock
jno
inc
mov
mov
test
into
pop
cmp
sub
aas
mov
sub
lods
mov
lret
ss
cmp
enter
pop
add
fs
scas
jnp
mov
jmp
add
movsb
ds
sti
xor
push
jno
jns
adc
js
popa
test
push
xchg
add
xchg
or
in
jbe
push
pushl
call
push
addl
loope
sub
dec
push
int
inc
adc
sub
cs
pusha
pop
mov
dec
pop
mov
repnz
push
pop
inc
cld
ret
lcall
jbe
inc
adc
add
inc
and
pop
mov
mov
loopne
cltd
add
adc
xchg
fstl
mov
push
into
mov
jmp
cli
sub
adc
gs
sarb
pusha
sub
xchg
repz
xlat
mul
lods
ret
loope
cmp
cmp
data16
insl
loop
lea
cli
cld
into
adc
or
pop
ret
mov
out
loop
jmp
cmpsb
ret
in
leave
packuswb
mov
pop
nop
and
push
out
pop
dec
ret
roll
jge
mov
fisttpl
into
mov
pop
icebp
fwait
stos
cmp
and
dec
mov
mov
in
movsl
and
test
add
dec
jbe
push
insl
aad
leave
jo
mov
loopne
xor
sar
testb
ret
dec
test
mov
pusha
add
dec
cmpsl
jnp
loop
outsl
cld
mov
stos
adc
sub
mov
xor
mov
and
lods
lcall
mov
push
sbb
jmp
inc
xor
or
push
mov
xchg
fistl
push
xchg
fisubrs
push
hlt
int
push
je
mov
test
jae
lods
cmp
test
repnz
cli
sbb
data16
sub
mov
aaa
mov
insl
pop
inc
ret
int3
mov
loope
out
test
inc
sub
cld
fisttps
nop
adc
jge
out
data16
push
nop
push
jle
mov
stos
out
sahf
sbb
andb
sub
xchg
push
loop
lods
xacquire
aam
mov
cmpsl
inc
lcall
inc
pusha
pop
sbb
popa
push
sahf
bound
jle
stc
sbb
mov
cmpsb
jbe
and
sbb
sbb
xor
mov
jmp
gs
sub
adc
pop
pop
lods
push
sub
pop
inc
xchg
adc
and
lods
pop
pop
mov
push
divb
bound
sahf
push
fnsave
or
cld
out
dec
fsub
into
das
push
adc
je
imul
push
xchg
fisttps
pxor
mov
ljmp
dec
xchg
lods
incb
inc
push
es
adc
nop
iret
push
jne
insb
xor
ja
out
xchg
mov
add
mov
pop
out
mov
cltd
fnstcw
and
mov
mov
pusha
dec
push
scas
aaa
xor
pop
arpl
adc
in
mov
movsb
add
aas
mov
aam
pusha
jp
stos
mov
or
add
push
xchg
leave
lea
add
mov
pop
inc
dec
jne
fldenv
scas
jne
pusha
jecxz
jmp
pop
hlt
ror
xor
sbb
sub
xor
test
mov
sbb
adc
cmp
sbb
and
cs
clc
push
jo
pushf
cmpsb
cld
pop
inc
out
enter
sbb
add
push
loopne
push
xor
ret
jne
inc
push
ljmp
cmpsb
addr16
add
repnz
leave
jmpw
je
cmp
jnp
cli
mov
inc
inc
orl
ret
sub
or
in
xor
inc
sbb
hlt
mov
lcall
ja
jb
ret
popf
or
and
fisttpl
orl
add
je
mov
rclb
loopne
call
xchg
stos
lea
dec
rol
pushf
clc
lret
aam
mov
jle
xchg
lret
in
pop
mov
jmp
cli
and
mov
jne
jne
test
in
mov
mov
inc
xchg
into
add
hlt
clc
inc
add
dec
adc
and
lea
loopne
jl
idivl
push
pop
iret
icebp
jns
xchg
push
xchg
test
in
push
jg
rorb
pushf
xor
cwtl
gs
ljmp
aad
xor
cmpsb
cmp
js
lret
pop
stos
jnp
jg
mov
add
out
mov
push
mov
cmp
das
outsb
xchg
jns
push
fldl
ss
jmp
mov
pop
mov
sbb
in
shr
cmp
ds
cmp
adc
outsl
cmp
sub
scas
icebp
enter
sub
dec
xor
inc
and
fs
push
mov
sub
xchg
stc
lock
mov
sub
pop
sbbl
pop
movsb
popf
pusha
sub
push
pop
out
cmp
sub
cs
leave
xchg
and
cmp
movsb
pop
add
fcomi
in
mov
gs
rolb
mov
jg
push
jecxz
xchg
rorb
mov
push
stos
cmp
mov
mov
pop
cmpsb
aam
lock
aas
popa
cld
stos
fs
rcrb
jnp
and
in
dec
in
and
push
cmpl
push
add
je
mov
mov
movsb
jmp
jecxz
jo
icebp
dec
jl
insb
sahf
and
mov
loop
mov
xor
sub
mov
dec
mov
ja
data16
stc
imul
stc
movsl
ljmp
dec
xchg
cmp
dec
pop
mov
mov
push
or
stos
jge
sahf
stc
lds
cmc
imul
fiaddl
out
cmpsb
push
mov
or
sbbb
mov
lds
mov
mov
push
jecxz
lods
dec
xchg
jg
nop
pop
movsl
pop
push
enterw
or
inc
adc
ss
cmp
jp
aad
fdiv
sub
sbb
imul
push
sti
add
leave
pop
popf
dec
mov
cmp
shrl
sbb
xor
jge
subl
fwait
cld
data16
clc
enter
aas
imul
adc
push
lods
pop
outsl
out
imul
call
enter
mov
or
loope
fmull
sbb
movsb
inc
ja
sub
mov
scas
ja
sbb
in
dec
into
adc
shll
xchg
sbb
jno
jbe
rolb
xor
test
cmp
iret
mov
out
jle
mov
adc
cmp
scas
cld
test
popf
aas
cmpl
dec
outsb
add
push
ret
xor
mov
jmp
sbb
or
pop
das
dec
cmc
xchg
dec
sbb
lock
ss
cmpl
jne
xchg
sbb
fisttpll
adc
sbb
fcoms
imul
pop
popf
jge
fldcw
addr16
int3
fstps
mov
jno
and
and
int3
pop
sbb
call
stos
bound
lock
fstl
out
arpl
mov
jp
movsl
test
ror
mov
test
daa
dec
data16
adc
and
add
fwait
lahf
pushf
repz
jae
into
or
mov
movsb
xchg
or
inc
aad
mov
mov
aam
inc
popa
inc
mov
mov
movsb
push
fildl
mov
clc
cmpsl
push
ljmp
push
popf
leave
jbe
sbb
lret
mov
push
testl
inc
jl
cmp
aad
sbb
subl
and
mov
mov
movsb
or
call
outsl
fwait
add
aaa
lea
push
push
call
ljmp
pusha
les
imul
cli
mov
ret
add
xchg
fdivl
movb
int3
scas
leave
jnp
popf
lods
cmp
fcomps
popl
push
adc
push
fidivs
cmp
sub
sub
dec
sti
sahf
push
int
inc
pop
shlb
xchg
je
cmpsb
sub
mov
cmp
paddd
icebp
mov
insb
xchg
enter
inc
or
push
testl
dec
hlt
stos
fdivr
sti
or
ja
jo
xor
loopne
lahf
dec
xchg
fnstsw
xor
call
lds
cwtl
pop
loop
and
push
inc
arpl
mov
movsl
lcall
xchg
dec
test
fld
pop
push
rorl
mov
and
std
lcall
jmp
repnz
ja
add
sub
or
fcom
pop
orl
xor
mov
add
add
and
call
aaa
or
leave
insb
loop
cmc
mov
enter
sbb
add
sub
call
mov
add
imulb
add
and
lret
cmp
push
pop
mov
pusha
cmc
mov
sub
add
stc
pop
mov
nop
xchg
mov
outsb
adc
ss
hlt
dec
or
jecxz
jg
fisttpll
iret
loopne
loopne
flds
add
xchg
mov
mov
dec
sbb
leave
xlat
cmp
mov
sbb
xor
cltd
or
adc
and
cmp
cltd
cltd
and
push
dec
in
into
dec
dec
dec
mov
push
imul
push
xchg
sbb
mov
cmp
push
bswap
push
sub
jo
sub
arpl
les
sub
mov
in
jo
sub
mov
xor
outsl
dec
loopne
dec
jo
and
push
xlat
jg
cmpb
jns
in
xchg
sub
scas
scas
push
jbe
mov
fcoml
insl
sahf
rclb
enter
push
cmp
mov
jecxz
pop
pusha
lock
add
sub
cmp
ja
fwait
or
pop
mov
pop
dec
jge
mov
push
xor
stc
ret
xchg
and
inc
mov
daa
jbe
adc
popa
jne
push
je
in
ss
mov
andl
add
das
idivb
push
dec
inc
jns
xor
or
movsb
add
pop
out
jle
sub
dec
lock
add
mov
cmpsl
mov
ds
pop
pop
in
lock
cmp
cmp
cmpb
div
add
loope
mov
jecxz
fs
adc
ror
ret
mov
jne
icebp
out
lret
xor
push
mov
add
pop
fdivs
pop
aaa
jl
sbb
dec
cmc
mov
cmp
out
daa
xor
dec
out
movsl
mov
lea
mov
sub
inc
jle
out
sub
inc
js
xor
popf
or
push
add
pop
std
push
iret
jmp
cmpsb
jmp
add
adc
mov
daa
mov
hlt
pushf
cmp
divb
push
jne
lods
sbb
push
aaa
jne
cmpsb
stc
cmp
mov
jno
xor
xchg
pop
mov
test
jae
out
xchg
jo
cmpsb
outsb
pop
arpl
mov
popa
mull
mov
ljmp
push
push
daa
xchg
xor
pop
dec
repz
fdecstp
subl
out
mov
jbe
les
shrl
mov
es
push
adc
xchg
into
mov
jg
add
icebp
jns
inc
jmp
cmpsl
push
fnstenv
jle
push
mov
sbb
sub
mov
dec
in
in
mov
sbb
out
nop
dec
pop
push
sahf
mov
and
xchg
pop
jmp
xor
cmpsl
int
outsb
xor
sub
sbb
movhps
sub
sbb
idivb
add
sub
sbb
jl
xchg
bound
rol
mov
xchg
fs
aam
insl
lock
addl
in
rorl
dec
int
jle
and
mov
sbb
mov
xor
aad
lret
fcomp
add
neg
pushf
movb
stos
or
push
fcoms
push
sbb
fbstp
arpl
cli
les
and
mov
popf
imul
data16
test
pop
pop
push
adc
mov
xchg
push
js
cmp
sarb
jae
or
adc
or
insb
xchg
test
call
mov
inc
repz
cmpw
mov
mov
xchg
pop
ficoms
enter
mov
iret
ds
sbb
stc
repz
jge
addl
mov
cmp
xor
mov
fdivrp
sbb
add
cmpsb
push
in
jae
inc
scas
fstpt
add
inc
sbb
and
mov
out
pop
push
mov
aad
dec
cmpsl
int
iret
jmp
orl
addr16
sbbl
rcr
and
movsb
in
scas
rorl
fcmovne
adc
sti
out
sar
push
add
cmp
sahf
sbb
insb
loop
shlb
mov
and
mov
or
adc
pop
insb
outsb
ljmp
adc
lods
bound
in
xchg
movsb
les
int
mov
inc
and
mov
pop
add
sbb
das
dec
jp
mov
aas
xor
fadds
push
adc
fmulp
xor
pop
loope
or
je
movsl
or
ja
leave
out
and
sarb
sahf
adc
inc
push
imull
jae
arpl
push
mov
mov
mov
mov
adc
adc
add
jae
imul
rcl
xor
xchg
cmp
xchg
je
or
mov
sub
jae
in
ss
hlt
xor
cmp
lds
push
ret
and
aam
push
repnz
or
call
fists
push
inc
insb
cmp
add
test
dec
call
dec
or
in
aad
dec
and
movsb
push
in
sbb
mov
inc
out
xchg
lods
sysret
mov
mov
xor
push
jbe
inc
outsb
cmp
jae
xchg
cltd
sub
mov
xor
sub
jns
das
cmp
mov
xchg
leave
mov
mov
repnz
inc
stos
lea
xor
pop
dec
and
popa
cmp
jb
jb
mov
sub
scas
inc
iret
or
xchg
inc
stos
adc
dec
fwait
mov
adc
mov
xor
outsl
dec
fwait
mov
lds
icebp
pop
movsb
mov
jl
fadd
inc
sarb
int
outsl
icebp
mov
dec
dec
mov
fcomps
cmp
pop
js
nop
sub
movsb
xchg
dec
rclb
lret
push
jmp
cld
sub
cmpsb
into
leave
les
rcrb
andb
pop
test
mov
jne
push
test
xchg
roll
lock
out
cmp
scas
das
cmpsb
aad
lock
data16
mov
hlt
jge
adc
xor
cwtl
pop
ja
test
mov
dec
mov
xor
test
xchg
lahf
out
pop
cld
movsl
fwait
dec
insl
arpl
cmp
push
stos
gs
jg
outsl
in
mov
add
push
mov
inc
fwait
mov
mov
in
mov
jne
mov
jp
cld
push
xchg
out
xor
add
pop
into
jbe
fcoml
push
cmp
bound
xor
int
mov
movsb
sbb
adc
rcrb
sti
dec
and
mov
inc
jle
ret
inc
jle
ret
sub
pop
push
dec
stos
xor
push
inc
mov
inc
lcall
xlat
pop
push
sahf
aad
mov
push
push
std
inc
fdivl
lcall
popfw
pop
mov
cltd
add
push
fmul
push
xor
ljmp
dec
mov
push
mov
cmpb
lock
call
push
test
mov
mov
xchg
outsb
xor
lods
pop
push
imull
jecxz
mov
shrl
push
mov
leave
sbb
xor
jp
cmpsl
dec
std
imul
popa
xchg
lock
mov
adc
xor
sbb
sbb
xchg
xchg
inc
cs
lds
mov
jo
stos
cmpsl
shrb
out
adc
lds
push
dec
sbb
ret
and
jmp
fdivrs
std
xchg
mov
jnp
pop
push
rcl
inc
jb
shlb
ficoml
xchg
clc
incb
idivb
stos
sbb
push
cmpsb
insl
pop
test
add
negl
cmpsl
std
into
int
push
xor
aas
out
icebp
cmp
movsb
aam
xchg
sub
fistpl
stos
fldl
fs
and
lcall
dec
bound
jmp
test
or
xchg
sbb
push
mov
cmc
push
mov
sub
mov
push
daa
sbb
or
jnp
jnp
push
or
adc
shll
ss
call
rcrl
push
stc
insl
fmulp
inc
dec
xlat
test
sub
mov
fwait
cmpsb
mov
pop
fsubs
mov
adc
outsb
arpl
pusha
jnp
aas
cld
cltd
pop
repnz
pop
mov
int3
jge
sbb
hlt
add
test
inc
movsb
mov
out
sti
dec
je
andb
sti
mov
cmp
mov
hlt
bound
aad
inc
cmpsb
insb
mov
push
cwtl
ret
sar
xlat
push
and
inc
mov
or
fiadds
or
stos
push
enter
cmp
sub
psubsb
xchg
add
sahf
or
mov
cwtl
popf
xor
in
jp
push
rcrb
roll
dec
cwtl
out
xor
lea
lahf
dec
push
call
push
dec
lahf
push
cmp
mov
call
inc
repz
adc
sub
push
mov
dec
test
sahf
rcrl
ljmp
rolb
sarb
adc
add
and
sub
in
fcompl
movsb
es
mov
mov
sub
pop
or
ds
sub
into
cmpsb
lcall
pushf
stc
and
dec
lods
and
movsl
cmp
mov
push
cmpsl
sbb
sbb
sbb
inc
mov
fisubl
jno
mov
in
ja
arpl
mov
pop
cmc
lea
inc
mov
mov
les
mov
xchg
push
movsl
and
jle
aaa
jns
in
jno
scas
cmpsb
mov
adc
pop
ffree
inc
mov
lea
dec
test
vshufpd
outsb
adc
inc
cld
lcall
ret
popa
icebp
int3
inc
jmp
int3
dec
cmp
mov
or
orl
idiv
sbb
std
mov
fs
mov
or
lahf
leave
pusha
fmull
jecxz
jae
xchg
sbb
inc
cmp
scas
mov
push
inc
shl
addr16
sbb
ljmp
mov
mov
jne
jmp
and
dec
cwtl
mov
push
inc
add
xor
cmp
popf
ret
inc
add
cs
test
scas
into
add
push
push
cmpsl
aam
sbb
lret
push
jg
dec
test
aam
arpl
pop
adc
in
movsb
dec
dec
cltd
scas
fists
add
sub
mov
movsb
xchg
mov
push
sub
cs
int
das
sbb
js
fbld
mov
repz
cltd
and
in
div
lock
popf
icebp
popf
push
loop
or
icebp
aam
ror
shl
mov
jnp
sbb
mov
inc
pushw
dec
clc
push
xchg
ss
adc
mov
inc
pushf
in
sbb
cmpsl
sbb
adc
sub
pop
ret
add
sbb
lds
mov
mov
out
je
in
out
jno
pusha
fistps
adc
xlat
je
mov
pusha
pop
xchg
cmpsb
repz
cs
sarb
sbb
out
or
mov
cmpsl
lcall
and
xor
jle
ficoml
mov
out
xor
enter
or
mov
push
insb
push
mov
mov
sub
or
adc
pop
inc
clc
push
popf
movsl
in
mov
cmp
pop
mov
mov
mov
js
hlt
jns
add
mov
mov
dec
cwtl
rcrb
std
outsb
mov
jo
js
cs
out
mov
pop
xchg
inc
ret
inc
insb
mov
xchg
push
sbb
imul
enter
std
add
xchg
sub
aad
popa
inc
push
mov
cs
lds
outsb
dec
add
loope
cmp
xchg
pop
int3
push
pop
es
push
out
lmsw
jae
data16
out
std
addr16
mov
lods
pop
jo
and
lods
dec
sbb
js
xor
scas
fldl
out
add
sub
push
add
insb
aam
mov
push
mov
ret
xchg
cld
fmull
mov
sti
pop
rclb
cmpb
xchg
sub
adc
mov
fcmovu
jp
xchg
pop
dec
xchg
jo
cli
xchg
mov
fs
cmp
jae
jecxz
push
inc
pop
jbe
sub
loop
mov
cli
rorb
jmp
fs
dec
fistl
jmp
jp
loop
das
add
mov
xor
inc
sbb
ss
and
jns
pushl
fistl
lahf
frstpm(287
mov
jmp
xlat
arpl
or
xor
test
pop
sbb
xor
lahf
mov
rcrl
popa
arpl
and
adc
sub
push
bsr
ljmp
inc
cmp
mov
push
test
push
jp
aad
lods
fsubrs
push
popf
test
lcall
insl
xor
in
sub
dec
jge
xchg
add
jp
or
dec
addl
pop
mov
aam
pusha
pop
sbb
out
push
popf
add
or
mov
adc
shl
imul
iret
add
fidivs
fcomps
mov
sbb
sbb
add
scas
inc
aad
pop
insl
adc
cmpl
push
ja
xchg
rol
mov
mov
mov
adc
mov
mov
mov
jbe,pt
aaa
mov
nop
int3
xor
sub
pop
mov
xchg
stos
sbb
inc
outsb
pusha
xor
scas
fnstenv
movsl
push
xchg
loope
add
cmp
push
in
push
test
jge
push
inc
or
mov
sti
shrl
popa
sahf
in
mov
sub
mov
jecxz
inc
lret
movsl
stos
bnd
push
mov
ljmp
pop
jp
loopne
mov
add
outsb
fmull
jae
bnd
xor
dec
mov
push
aad
arpl
mov
arpl
push
pop
mov
jg
cmpsb
mov
andb
movsl
jecxz
jg
push
inc
sub
stos
test
xor
sub
notb
inc
fisttps
sub
imul
shr
clc
xchg
mov
loopne
sbb
push
inc
loop
lock
mov
inc
pop
mov
dec
xor
push
push
movsb
scas
dec
push
jge
adc
loop
adcl
outsb
push
inc
jnp
or
lahf
orb
insl
enter
push
adc
sub
xchg
mov
push
add
inc
ficompl
cmp
cmp
cmp
mov
lahf
data16
jle
mov
ret
xchg
pop
mov
pop
negl
fdivs
sbb
adc
xor
sbb
push
xor
je
ljmp
lock
popa
jge
or
das
cmp
cmp
call
daa
aam
dec
bound
dec
push
pop
sub
and
jmp
xchg
std
loopne
dec
cwtl
in
insl
and
pop
mov
mov
aam
jno
xchg
ss
push
in
jmp
inc
or
cmc
out
scas
loope
int
xchg
add
push
pop
or
ja
loopne
xchg
xchg
jmp
daa
xor
dec
add
insl
sbb
adc
pop
add
push
pop
cltd
push
mov
fcoml
adc
sbb
arpl
inc
jge
xchg
dec
pop
dec
test
int3
in
xor
mov
cmpsb
das
icebp
push
popa
int3
daa
mov
sub
adc
lods
add
cmp
push
sbb
add
out
int
insl
inc
int
mov
cmp
inc
stos
fs
int
mov
mov
loopne
jmp
repnz
scas
movl
xor
and
insb
filds
lock
dec
std
sbb
dec
fistpl
dec
add
fs
sub
lods
push
xor
pop
call
adc
xchg
dec
xchg
mov
adc
enter
imul
xchg
add
cmp
push
outsb
sub
push
jne
and
negb
stos
out
sbb
pop
sarb
ljmp
mov
push
ja
int3
mov
pop
idivb
pop
inc
push
add
push
and
cwtl
testl
xor
pop
mov
jp
and
in
stc
sub
addr16
jne
xchg
shrb
cmp
xor
adc
push
cli
dec
mov
sbb
imul
inc
aam
inc
rcrb
lret
dec
sub
push
xor
int3
push
stos
xchg
mov
ja
scas
ret
loopnew
js
out
cmp
pop
aaa
aam
add
cmp
nop
xchg
bound
fnstenv
mov
xorl
xlat
pop
popf
stos
adc
mov
shrb
dec
fwait
inc
repz
les
inc
clc
or
mov
rcl
jp
scas
cmpsl
xchg
sbb
bswap
inc
push
imul
pop
repz
jno
outsl
out
xchg
xchg
pop
test
jne
in
insb
add
xchg
test
mov
out
iret
sbb
dec
fisubs
dec
mov
in
icebp
data16
mov
adc
xchg
jl
stos
dec
mov
pushf
repnz
cmpb
ja
fidivrs
sub
add
add
jg,pn
jae
jg
aaa
jnp
mov
mov
int
dec
aam
adc
sub
shlb
mov
dec
insb
loopne
jg
daa
adc
xchg
sub
jmp
insl
mov
lock
sbb
stc
movsb
push
movsb
hlt
sub
push
pusha
cmp
sbb
ss
add
inc
aaa
jo
daa
add
pop
ss
lods
cmp
rolb
pop
xchg
hlt
lea
rclb
scas
sbb
loop
adc
int3
add
jge
xchg
jb
test
push
repnz
or
repnz
gs
insb
mov
mov
mov
xchg
idivb
dec
test
xchg
push
int3
arpl
or
sub
loope
cmc
or
xor
xchg
notl
push
popf
into
fldt
mov
pop
call
push
lods
es
jge
cmp
fs
aas
xor
in
popa
or
dec
adcb
cmp
xchg
push
mov
in
push
daa
leave
adc
mov
push
daa
hlt
cltd
loope
dec
loope
add
ret
ficompl
and
stos
push
andb
fs
and
and
sub
jge
xor
push
xchg
xor
loope
xchg
xchg
adc
push
in
das
fcoml
and
mov
xchg
pop
push
ljmp
addr16
sub
mov
cwtl
neg
jmp
cmp
push
xchg
dec
mov
push
jge
cltd
xchg
xchg
lret
ds
fs
mov
push
lcall
call
icebp
jae
sbb
flds
or
movsb
aaa
into
or
sti
xchg
dec
es
or
ficoms
icebp
mov
pop
mov
faddp
sbb
in
jns
push
fidivrs
push
bound
cs
insl
jne
jmp
pop
push
add
add
push
jmp
dec
lea
jge
or
dec
adc
popf
push
inc
ja
dec
adc
inc
pop
test
or
xor
ljmp
lods
icebp
xorb
ja
jns
adc
fisubrs
fdiv
rolb
stc
jl
je
mov
lods
leave
sub
inc
sahf
sub
mov
icebp
jp
call
in
push
fdivrl
push
call
mov
loop
dec
inc
add
xchg
dec
mov
mov
ds
decl
xchg
iret
nop
jo
xor
pop
rol
icebp
imul
jecxz
pop
dec
les
adc
outsb
ret
jp
bound
ljmp
imul
int3
rolb
sub
in
push
jmp
addr16
jecxz
enter
sarl
push
lea
xor
cltd
push
sbb
clc
test
loope
cmpsl
or
cmp
xchg
pop
mov
jbe
adc
loop
stos
jmp
adc
push
daa
adc
rol
and
aas
pop
sbb
ret
sbb
sub
aas
mov
loope
popf
jne
inc
dec
xor
mov
mov
cwtl
lret
incb
xor
pop
jmp
mov
sti
in
pop
sbb
inc
add
add
nop
enter
sub
xor
leave
int
mov
mov
pop
fisubrl
insb
mov
inc
cwtl
test
in
test
shlb
cmc
inc
push
add
mov
push
pop
rorl
stc
repz
mov
mov
cmpsb
stos
sub
in
xchg
addr16
pop
jnp
das
jg
jo
mov
or
pop
hlt
testl
orb
out
add
cmp
jb
sbb
adc
dec
jg
mov
and
stc
nop
xor
imul
shl
jbe
lret
int3
xor
out
add
cmpsl
pop
mov
pop
sar
mov
xchg
clc
lds
pop
pop
cmp
dec
sbb
stc
popf
icebp
call
xchg
in
adc
and
jmp
popf
out
loop
outsl
sbb
push
inc
push
stos
lcall
xlat
fwait
out
lds
sbb
sahf
pop
je
sbb
es
mov
iret
je
push
shlb
mov
mov
aaa
cmp
adc
mov
inc
outsl
add
xchg
shr
lds
dec
mov
cli
les
push
ficomps
lds
mov
sub
inc
pop
pusha
out
jp
fnstenv
dec
jns
lods
jle
mov
mov
arpl
loop
xchg
xchg
nop
es
mov
sub
nop
cltd
dec
cs
xlat
sahf
loope
ficoms
mov
out
cmpps
fwait
sub
insb
scas
mov
and
fdivrl
cs
pop
jbe
scas
inc
adc
mov
pop
adc
insl
xor
ja
rol
push
xchg
les
push
test
nop
cli
je
ret
fildl
gs
sbb
movsl
loopne
or
push
cwtl
cmc
fimull
jnp
jae
out
and
mov
sub
daa
inc
push
loop
mov
sub
out
push
jbe
sarb
imul
rcl
or
xchg
outsb
outsl
lock
mov
sbb
mov
inc
xchg
lds
dec
and
pop
inc
int3
lock
sub
aad
jmp
push
pop
mov
enter
out
mov
dec
sti
scas
inc
movsl
inc
ds
insb
xor
mov
into
and
adc
loop
pop
mov
sbb
pop
xor
js
sbb
je
mov
dec
outsl
ljmp
lods
shll
call
addr16
push
loopne
mov
mov
test
lahf
xchg
in
or
mov
pusha
pop
sbb
add
out
add
rcrl
subl
in
pop
das
jle
repz
mov
mov
stos
jg
inc
fldl
sub
mov
cwtl
cmp
add
outsb
jmp
push
out
jecxz
dec
cmp
insl
adcl
stc
or
mov
pop
jl
fwait
push
cmp
js
in
mov
ret
push
push
or
sub
dec
stc
xchg
mov
inc
lret
mov
or
cmp
push
or
pop
mov
fcoml
and
cs
xlat
mov
inc
add
fstpt
mov
pop
fisubl
pushf
movsb
push
fcmovnu
repz
sub
cmpsb
ret
mov
imul
dec
js
xorb
idiv
push
xchg
sub
popf
sbb
scas
dec
and
xor
inc
push
sbb
test
insb
into
popa
mov
fisttpl
sbb
push
cld
xchg
mov
daa
push
les
and
subb
loopne
inc
out
pop
loopne
mul
pop
inc
cwtl
dec
sub
inc
psubusw
or
dec
pusha
xchg
pop
push
mov
add
push
xor
je
test
test
adc
inc
push
pop
jns
adc
dec
dec
sti
and
test
fldl
cli
sub
les
push
mov
insb
mov
fisubrl
mov
pop
and
pushf
pop
lods
aam
mov
lds
addl
and
inc
add
bound
sbb
push
sarb
lea
adc
ret
dec
sbb
add
jmp
fnstcw
cmpsl
stos
ror
sub
mov
inc
or
daa
fstl
stos
cmp
in
pusha
es
cld
cltd
pop
loopne
jecxz
add
xchg
cs
sub
mov
sti
cs
shll
xchg
je
jg
faddp
jmp
mov
mov
cmp
mov
add
adc
out
jp
shll
in
pop
sbb
push
push
dec
dec
inc
ja
pop
loop
xchg
fisubs
lods
inc
jb
add
jns
insl
rcll
inc
and
xor
scas
xor
adc
pusha
push
sub
sahf
arpl
aam
aaa
nop
fiaddl
in
cmp
jno
xchg
out
dec
das
pusha
xchg
pop
hlt
fcoml
xor
jne
add
mov
nop
mov
sbbb
sub
cmpsl
imul
outsl
cmp
cmpl
jbe
cmp
lret
xlat
clc
les
test
sub
or
ret
lret
imul
jb
sub
andl
push
push
fsubs
loop
or
mov
and
jnp
cmp
jmp
and
roll
mov
in
aam
fmulp
xor
pop
mov
jnp
xor
lret
sarl
ja
shlb
jne
inc
inc
dec
dec
dec
flds
iret
xchg
out
and
mov
mov
iret
cmc
fdivrp
int
push
push
pop
cli
lods
sarb
in
scas
call
sub
add
cmp
lods
nop
dec
imul
inc
inc
movsl
mov
add
sbb
sbb
pop
xchg
pop
push
adc
sbb
dec
sub
xor
lock
ret
sahf
mov
outsb
rorb
jg
adc
mov
fcom
out
add
cmpsb
mov
mov
lahf
lock
outsb
das
sarl
add
les
rorw
inc
jmp
xor
lods
sbb
insl
addr16
sarb
outsb
stos
mov
mov
pop
push
movsl
jp
test
arpl
sarl
mov
arpl
pop
stos
lret
and
je
iret
shl
push
scas
aam
pmullw
pop
inc
mov
cmc
push
fsts
rcr
lea
js
outsb
lea
notl
sahf
xchg
in
adc
mov
in
scas
mov
jb
push
sub
sbb
aad
xchg
adc
add
stos
sub
call
dec
imul
mov
fsubl
lock
cmc
xlat
mov
adc
jp
cmp
xchg
mov
les
jle
mov
movsl
ror
push
jb
mov
mov
push
xchg
pop
mov
add
ljmp
fisttpl
data16
mov
dec
clc
cmp
and
inc
xor
lds
lea
cld
add
testl
aas
mov
lahf
test
mov
lds
jp
xabort
and
movsl
test
push
mov
mov
leave
mov
cld
xorb
shl
fnsave
dec
mov
fdivs
aam
movl
das
data16
pusha
jo
fidivrl
test
sbb
inc
aaa
sbb
incl
mov
ret
arpl
out
sbbb
jnp
int3
xchg
and
hlt
adc
lds
xchg
rcl
push
fcomip
cmp
lds
or
inc
xlat
aaa
in
and
enter
lea
fstpt
jne
jne
insb
xchg
or
nop
push
push
loop
mov
fsin
jmp
aaa
add
lcall
and
or
outsl
mov
jl
add
push
mov
inc
testb
xor
loopne
fcomp
xor
ljmp
in
dec
cmp
iret
push
fistpll
xor
adc
adc
inc
push
mov
stc
dec
xchg
push
fwait
ss
cmp
dec
mov
andl
movsl
and
push
xchg
jmp
jae
popa
mov
sub
jecxz
aad
das
sub
mov
push
cmpsb
lock
negl
sub
push
hlt
dec
sbb
mov
add
cltd
popl
mov
push
adc
mov
and
inc
subb
mov
mov
mov
cltd
adcl
push
xchg
divl
push
cmp
or
cld
mov
shlb
pop
test
lds
pop
xchg
out
adc
call
jo
scas
popl
push
mov
ret
or
cmc
lock
mov
push
mov
bound
ljmp
jns
iret
mov
lcall
cmp
pop
jbe
jbe
push
stos
push
xchg
insb
cmp
sbb
cmp
test
sub
sub
sub
test
notl
mov
mov
lcall
addr16
jno
cld
mov
mov
fdivl
outsb
lods
pop
cmpl
scas
cmpsb
cmp
fdivs
outsl
scas
xchg
inc
sub
sub
mov
and
xor
scas
and
repz
rcrb
mov
pop
xor
loop
loop
xor
clc
inc
mov
xchg
js
das
cmp
lcall
mov
addr16
subb
cmp
std
loopne
sbb
cmp
dec
aad
frstor
cs
or
adc
mov
je
cmp
push
or
jl
mov
mov
scas
shll
clc
sbb
dec
mov
sbbl
adc
cmpsb
ljmp
pop
cmp
test
sbb
sbb
imul
adc
xchg
pop
mov
fmull
dec
push
mov
push
pop
sti
xchg
jmp
std
fnstcw
xchg
sub
fcoms
in
inc
imul
sbb
pop
call
or
and
into
inc
cli
xorl
lea
and
jb
in
cmp
js
xchg
sbb
ficomps
loope
stos
addr16
ret
jae
test
or
inc
mov
add
test
cmp
leave
pusha
xchg
jp
daa
mov
lahf
ret
js
dec
push
dec
pusha
inc
xchg
ss
cmp
pusha
or
pop
adc
xchg
ret
mov
cld
cs
sbb
idiv
fstps
mov
sub
movsb
push
mov
popf
mov
jmp
test
lods
mov
mov
cwtl
adc
sbb
mov
pop
mov
psubsb
adc
jbe
pop
sahf
adc
adc
cmp
mov
inc
sti
mov
fsts
out
lock
rorl
in
mov
in
dec
push
out
faddp
adc
inc
adc
sahf
pop
cmp
fmuls
loopne
fsubr
leave
cmp
xchg
push
inc
and
test
adc
push
push
fwait
mov
or
jg
movsl
xlat
call
loop
pop
add
icebp
rcll
arpl
mov
fsubrl
mov
and
fwait
push
cmpsl
outsb
push
shl
jecxz
stc
aas
aaa
xor
arpl
dec
or
adc
add
nop
test
sub
out
lahf
push
loop
xchg
iret
leave
int
les
iret
xor
dec
mov
push
add
adc
jb
mov
dec
leave
stos
fcoml
stos
push
push
test
hlt
push
adc
sbb
xor
add
and
push
fs
xchg
lods
fnstcw
fmul
pop
or
mov
dec
mov
leave
adc
nop
scas
add
ja
popa
mov
test
cwtl
iret
dec
addb
xchg
out
ret
cmp
xchg
jno
aam
paddq
cwtl
adc
fistpll
sub
fdivl
jl
jl
pushf
rorl
out
sbb
inc
push
lds
aas
mov
imul
shr
push
jl
repz
fnstenv
scas
inc
arpl
mov
cmpb
fdivrs
dec
jae
mov
fcmove
mov
shll
mov
fwait
push
mov
pop
in
adc
std
lahf
push
orl
dec
mov
bound
fldcw
xchg
shlb
xchg
push
outsb
test
fisubrl
iret
xor
shr
and
jne
cmp
jg
mov
xor
lods
jmp
or
mov
in
xor
repz
mov
dec
xor
xlat
in
add
and
in
ss
add
push
jge
shll
insl
mov
sbb
xchg
out
je
inc
pop
xchg
mov
mov
inc
adc
or
sarl
out
imulb
cld
pusha
mov
out
repz
mov
xchg
cld
lods
cmp
es
addr16
dec
addr16
push
addr16
test
mov
call
mov
pop
clc
adc
insl
lods
push
inc
in
sub
out
clc
into
fcmove
outsl
xchg
lahf
stos
fisttps
sbb
fs
test
icebp
in
jnp
xor
es
aam
fwait
cs
iret
xlat
shrb
mov
cli
pop
jno,pn
out
movb
xor
mov
adc
xchg
test
mov
outsb
fnstsw
jp
shll
or
js
inc
test
in
pop
test
cmp
mov
push
xor
dec
jno
imul
repz
arpl
dec
ljmp
adc
daa
in
outsb
mov
and
mov
das
mov
leave
xchg
fldl
lock
adc
and
sbb
xchg
xor
or
cmp
adc
stc
and
mov
xchg
out
cli
ret
mov
bound
pop
enter
dec
dec
push
sbb
dec
fistpll
or
pop
and
push
test
mov
adc
or
mov
mov
std
mov
das
or
sbb
jle
aaa
mov
sub
in
outsl
sub
int
sub
or
sub
cld
sbb
xchg
cmp
scas
and
cmpl
ss
call
add
scas
mov
cld
sub
pop
cmpsl
test
mov
add
jne
mov
scas
pop
stos
mov
sti
xchg
pop
mov
cmpsb
add
jae
add
sub
in
dec
outsl
pop
fisubrl
icebp
lock
fstpl
mov
jmp
cmp
in
push
inc
lcall
inc
out
dec
mov
fcomps
sub
call
xor
push
mov
sahf
adc
shlb
or
scas
fisubs
je
pop
icebp
je
loope
inc
add
sub
inc
call
mov
test
xor
cmp
pop
dec
cwtl
lret
repz
and
sbbl
xor
mov
mov
inc
aad
and
adcl
ret
inc
dec
jecxz
dec
scas
das
push
sbb
mov
pop
repnz
mov
test
repnz
imull
ja
adc
push
xor
ret
or
mov
and
mov
push
out
hlt
sahf
dec
fwait
ljmp
stc
sub
push
jl
outsb
lods
je
imul
and
sbb
dec
fists
push
push
dec
jmp
repnz
jnp
aaa
push
nop
aaa
xor
pop
test
mov
jbe
gs
lods
jp
dec
lahf
add
pop
push
imul
mov
mov
cwtl
mov
sahf
fidivrl
xchg
pop
mov
jnp
xchg
sbb
sub
lock
pop
adc
std
mov
in
sub
je
ds
pop
mov
mov
inc
xchg
xchg
jl
popf
inc
test
fcmovnbe
push
xchg
scas
test
cmp
fisubl
stos
or
mov
push
mov
xchg
jnp
scas
rolb
adc
jge
sbb
repz
subl
mov
ds
jg
ffreep
sahf
and
lcall
xchg
or
dec
ret
sub
jge
inc
pop
mov
iret
mov
stos
cmp
and
daa
mov
cmpb
adc
jo
cmpsb
ljmp
add
orl
sub
jl
sbb
mov
mov
jae
xor
ljmp
mov
fildl
adc
add
xchg
add
xor
mov
sub
jnp
xor
sbb
outsb
je
pop
lods
dec
hlt
fnstenv
inc
dec
push
add
push
pop
cmp
lods
cld
and
stos
out
fsubrs
and
bound
sbb
cmpsl
js
into
movl
outsl
lret
jo
dec
js
daa
cmpsb
cmpsb
into
dec
xchg
dec
push
insb
jno
subb
jp
cmpsl
data16
push
mov
xchg
movsb
fldt
sbb
hlt
aad
mov
stos
orb
cmpsb
cmp
adc
jb
cmp
pop
sub
jnp
xchg
inc
xchg
xor
cli
lcall
jo
loope
and
imul
xor
push
xor
std
pop
ja
sub
mov
inc
mov
mov
jo
and
or
stos
dec
lds
mov
inc
xor
cld
xor
outsl
mov
scas
fistpll
aaa
pop
gs
sbb
movsb
repnz
mov
ljmp
inc
leave
repz
in
hlt
sahf
lea
clc
aad
inc
js
inc
mov
add
cmp
shlb
insb
stos
cld
daa
mov
adc
inc
divl
mov
xchg
mov
cmp
cmpl
scas
or
add
push
sub
xchg
rorb
push
jno
mov
pop
lock
pop
inc
push
loop
shll
or
int
pop
lcall
add
arpl
push
sub
test
fdivl
sbb
xchg
or
mov
push
push
cmp
std
stc
or
ljmp
aas
cmp
lods
adc
popf
adc
xor
add
xchg
in
adcl
sub
leave
fisubrl
sub
lcall
ja
lcall
xor
cmc
cmp
imul
xor
loopne
sti
fucomip
scas
add
mov
lea
dec
cmp
add
out
jnp
bound
fldl2t
cmp
or
sbb
xchg
push
rclb
stos
mov
xlat
movsb
rcll
mov
mov
xor
sub
pinsrw
movb
or
and
mov
mov
mov
mov
hlt
imul
push
popa
rol
adc
daa
repz
mov
mov
fidivrs
mov
and
add
push
je
hlt
pushf
adc
or
xrelease
push
xor
adc
mov
loopne
pop
or
xchg
mov
mov
sbb
rclb
outsl
cmp
add
mov
ret
out
mov
push
stos
pusha
push
or
icebp
lcall
xchg
xchg
imul
jbe
mov
mov
aas
push
lahf
dec
out
or
adc
sbb
adc
loop
arpl
xor
and
outsl
aaa
jmp
push
adc
mov
push
mov
xlat
pop
aad
push
or
or
fidivs
cs
cmp
dec
push
ja
andl
mov
cmp
imul
dec
inc
pop
inc
lods
lods
push
cli
mov
lods
push
jae
add
xor
hlt
cmc
out
ljmp
or
sub
adc
imul
jns
test
insl
inc
sti
cmpsl
das
aad
loopne
icebp
push
cmp
stos
jge
jnp
or
push
fnstcw
xchg
mov
or
ljmp
pushf
mov
in
push
outsl
pushl
mov
sar
push
es
jg
jl
mov
fdivrs
or
sbb
shrd
test
pop
add
daa
out
mov
sub
lret
icebp
fdivrl
test
cli
sbb
xor
dec
ss
ss
div
xor
in
test
cmp
mov
or
hlt
lds
lds
dec
aad
jbe
out
cwtl
push
cmp
out
and
pop
and
mov
jnp
fidivrl
inc
jg
aam
mov
mov
dec
les
xchg
pop
xor
push
cmpsb
popf
adc
add
push
popa
fstl
lds
push
xchg
repz
jbe
jne
rcl
fsubl
xchg
sub
call
push
mov
fdivr
add
rolb
mov
sbb
mov
jne
test
mov
push
sub
mov
and
jp
pop
aad
and
aad
push
cwtl
rclb
shlb
ja
repz
fcomps
lea
mov
push
mov
jge
mov
xor
xchg
repz
mov
adc
popf
fidivs
scas
pop
inc
loop
cmp
testb
xchg
pop
mov
mov
movsb
xchg
shrl
sbb
test
sub
pop
fs
push
loop
push
dec
loopne
js
inc
sub
xchg
lret
repz
ja
dec
sbb
inc
orl
pop
xor
stos
mov
dec
lock
das
outsb
push
in
add
imul
xchg
jnp
sub
movsl
or
add
lods
sub
movsb
arpl
sbb
pop
xchg
in
mov
fcmovne
push
int
add
icebp
mov
mov
adc
mov
adc
xor
xchg
das
and
or
repnz
mov
sahf
sub
pop
mov
out
jp
xor
mull
dec
imull
jnp
gs
sti
adc
stos
push
dec
ret
call
outsb
and
jnp
adc
jb
dec
jg
push
cmp
rcl
push
mov
std
jno
inc
sub
push
leave
cmpb
cmpsl
loope
movsl
movsl
cmp
out
jecxz
jge
dec
dec
rcr
dec
dec
pop
jmp
fstpt
jae
cmp
dec
sbb
cmp
or
cmp
das
dec
adc
bound
mov
insl
nop
hlt
fs
cltd
sti
test
inc
andb
sub
push
jae
cltd
sti
adc
sub
int
pop
xchg
cmp
mov
jb
mov
mov
repnz
mov
test
adc
sar
idivl
rorb
adc
sub
pushf
xor
enter
frstor
sub
lret
out
mov
xchg
jnp
or
shll
inc
daa
push
arpl
add
inc
pop
mov
push
icebp
jge
jle
dec
cmp
cmpsb
stos
xchg
in
cld
mulb
and
mov
std
mov
movsb
fldl
sti
out
push
push
les
aaa
mov
lahf
cmpsb
call
sub
lahf
aas
in
outsl
xor
sbb
lret
mov
push
sbb
je
inc
sahf
and
mov
lods
test
pop
das
cwtl
fmul
push
push
mov
imul
cmpb
pop
and
repz
mov
and
stc
loopne
das
repnz
jns
mov
or
das
test
out
push
and
inc
xchg
sbbb
adc
stc
stos
lret
pop
dec
jp
mov
inc
xor
sbb
test
nop
xor
ja
jb
adc
ds
aas
sbbl
movsl
iret
test
xor
fs
cld
cli
mov
lret
push
out
aam
arpl
inc
movsb
daa
or
insl
jbe
fisubl
lret
es
mov
push
dec
mov
cld
sub
push
pusha
mov
rclb
mov
xor
scas
and
push
leave
or
fsubl
lret
jl
sbb
in
lds
lods
hlt
fisubl
cmp
loope
lods
sar
and
leave
push
or
popf
sbb
ljmp
dec
repz
les
js
ljmp
lods
les
sarb
subl
mov
andl
out
call
ja
mov
fdivs
cs
push
fidivrs
jbe
sub
dec
inc
mov
and
cmp
xorb
fadd
push
xor
pop
mov
jecxz
add
xchg
in
xor
mov
fcompl
mov
adc
cs
cmpsl
scas
nop
adc
mov
test
push
ficoms
gs
inc
dec
cmp
rcl
ret
cmpsb
and
movsl
pop
xchg
mov
cwtl
das
dec
addr16
fldenv
jne
imul
push
scas
xor
call
adc
dec
js
push
jmp
cmp
int3
in
sub
dec
sti
add
out
ja
lea
pop
pop
stc
fists
in
mov
cld
add
cmpsl
adc
dec
xlat
push
push
mov
fisubl
xlat
ja
ja
loopne
sub
jmp
mov
es
mov
jno
test
repz
mov
dec
in
negb
sbb
repz
sbb
cmp
xchg
dec
lods
sbbb
lea
push
dec
cmc
cmp
out
lcall
sub
dec
mov
loopne
push
in
mov
inc
dec
adc
lea
add
xor
pushf
sub
nop
movzwl
and
fcompp
insl
xchg
jb
xchg
es
adc
scas
gs
jb
mov
rcll
test
into
mov
stos
mov
dec
or
adc
mov
rorl
cld
lea
xchg
or
daa
daa
call
add
jne
imul
mov
pop
inc
mov
ss
insb
and
mov
popa
je
mov
mov
fucomip
add
adcb
dec
popa
adc
cltd
sub
add
stc
sub
inc
mov
sub
dec
stos
dec
push
adc
lods
or
pop
jecxz
iret
or
add
ja
std
int
jo
decl
or
and
sub
mov
ds
test
outsb
cli
mov
dec
xorl
rcll
movsl
aam
xorl
cs
xchg
xchg
xor
add
jle
ss
rclb
sbb
popa
mov
and
add
mov
jge
xchg
enter
out
xor
mov
xor
add
sub
jl
adc
mov
xchg
dec
mov
mov
cltd
flds
push
es
pop
xchg
lds
xor
adc
cmp
push
scas
mov
jmp
mov
or
mov
and
scas
adc
sbb
fildl
popa
mov
sub
stos
add
pop
jb
push
cld
nop
add
cmp
ret
mov
and
xor
sub
add
sub
fwait
mov
and
and
xor
in
loopne
test
roll
arpl
jbe
fldcw
mov
and
rcll
jp
fs
xor
enter
jno
and
jae
ja
fildl
and
sub
mov
add
jne
aas
scas
out
pop
imul
in
loopne
inc
cs
sbb
fld
insl
xor
jmp
inc
rcll
inc
mov
jae
aad
hlt
pop
xor
iret
adc
push
push
dec
std
fistpll
push
xchg
lods
cmp
js
pop
add
lods
fsubrs
lods
ss
add
movsb
icebp
inc
push
mov
int
sub
sub
in
in
dec
push
push
cmpsl
xor
xchg
cmc
cmpsb
fdivrl
mov
lahf
sbb
lcall
cltd
std
aas
outsb
lock
pop
push
leave
test
inc
add
lods
mov
aad
fsubrl
or
loopne
mov
repz
mov
dec
test
das
lcall
in
push
sub
fs
sbb
push
sub
bound
test
test
sub
or
pop
jg
stc
jmp
scas
push
sub
adc
clc
xchg
xchg
or
mov
or
cmpb
lock
pop
out
nop
insl
push
dec
cmc
mov
jbe
cmp
push
push
loope
mov
xor
xor
push
shll
push
sub
jnp
push
mov
add
push
ljmp
shrl
pushf
nop
pop
jbe
bound
test
pop
imul
adc
inc
nop
ja
and
jmp
pop
cli
push
aas
sub
pop
sbb
pop
mov
xchg
outsb
and
test
sbb
das
lock
cmp
out
stos
push
leave
fisttps
xchg
mov
nop
xchg
iret
mov
mov
jno
jle
addr16
cmp
pushl
sub
into
stos
adc
es
rcl
xlat
and
inc
sbb
ret
ss
xchg
out
lods
js
adc
stc
negl
push
sub
dec
test
sub
xchg
mov
divb
repnz
mov
inc
sub
adc
cmp
das
gs
push
mov
jne
or
sbb
repnz
mov
orl
in
out
and
dec
repz
jns
sub
inc
push
cmp
out
scas
ss
stc
xchg
sub
jno
push
add
inc
insb
cs
pop
bound
ret
das
ret
ljmp
test
stos
fnstsw
pop
adc
dec
sub
mov
scas
mov
scas
inc
dec
push
cmc
xchg
fxtract
dec
popf
ficoms
std
pop
mov
out
add
fiadds
std
cmc
mov
mov
cwtl
add
hlt
cmp
lea
out
add
pusha
pop
mov
adc
lock
push
movsl
lods
inc
mov
lcall
out
sub
into
popf
inc
push
pop
adc
repnz
inc
and
aas
inc
push
ss
lock
xor
lahf
xchg
je
psraw
imul
xchg
fistpll
negl
ror
repz
gs
mov
lret
sbb
lret
lock
retw
ljmp
pushf
mov
rolb
popa
out
in
push
xchg
push
mov
rcll
ss
ret
cltd
sbb
xchg
shll
mov
outsl
lret
jge
adc
jmp
and
call
push
xchg
out
sahf
insl
push
incb
push
xor
rcrb
push
push
add
inc
jmp
lret
lret
or
out
cmp
inc
sti
sub
js
insb
es
add
sahf
frstor
cmp
pop
cld
rcrb
dec
add
mov
daa
cwtl
leave
shll
cltd
movsb
dec
or
dec
setne
fwait
sbb
nop
inc
aas
int3
loope
xor
mov
jmp
arpl
xchg
sub
jg
or
inc
push
shlb
mov
fsubrs
repz
mov
imul
sub
sub
sub
sbb
xor
pop
inc
adc
fldcw
mov
mull
jne
mov
sbb
pop
adc
adc
lret
clc
mov
mov
jge
ljmp
mov
or
mov
in
aaa
push
add
scas
int
jne
cmp
xor
es
in
mov
ds
addr16
or
xchg
pop
push
push
sbb
inc
fimull
repnz
mov
sete
sti
dec
inc
cmp
outsl
jno
or
jnp
xchg
cltd
into
push
in
movsb
repnz
xor
inc
fbstp
pop
js
fdivl
pop
arpl
cmp
jnp
and
dec
outsl
fs
movsb
nop
inc
adc
push
cwtl
mov
into
mov
or
fistl
stos
xor
jecxz
and
movsb
lods
inc
aad
hlt
loop
mov
pop
das
adc
clc
sub
repz
cltd
lods
data16
inc
dec
xor
and
push
bound
es
pop
sub
cmp
in
cltd
sbb
jbe
push
sub
push
or
pop
jbe
stc
adc
jle
pop
outsb
test
push
inc
ret
aaa
inc
push
add
sub
out
adc
pop
push
mov
sahf
lds
inc
mov
push
jno
ret
pop
insb
push
sbb
cld
fwait
push
pcmpeqb
pop
mov
icebp
sbb
or
xlat
lock
xor
pop
jecxz
mov
mov
xchg
pop
xor
pop
stc
mov
jl
mov
add
lods
push
mov
imul
pop
adc
ret
mov
gs
ret
fnsave
jecxz
jge
ret
sub
mov
xlat
subb
rcrb
je
pop
mov
test
cltd
dec
ror
xor
shrb
call
inc
loope
out
inc
std
sub
arpl
les
or
push
mov
and
js
repnz
jb
sbb
mov
pminsw
decl
adc
mov
mov
fcomps
mov
jbe
fisttpll
stos
imul
sub
aad
sbb
inc
es
fs
mov
lret
jecxz
lahf
movsl
loope
adc
xchg
inc
xor
push
popf
xchg
pop
jl
add
ficomps
jb
mov
loop
icebp
jnp
loopne
bound
xchg
ss
adc
xorl
xor
scas
jl
xor
stos
ja
addr16
xchg
sub
adc
cli
fidivl
ds
in
pop
imull
add
popl
ss
stc
mov
jno
insb
jle
inc
inc
sub
aad
mov
push
adc
dec
jle
lock
xchg
or
jmp
and
movl
jb
in
aaa
xchg
dec
dec
or
les
movsb
push
or
push
popf
and
or
movl
dec
outsl
xor
xor
int
std
dec
scas
ljmp
es
stos
aad
in
and
pop
mov
xor
in
insl
jp
add
pop
and
aaa
pop
das
ljmp
adc
inc
push
or
imul
xchg
cli
loopne
inc
xlat
cmp
inc
out
push
dec
and
mov
roll
roll
not
xchg
pushf
addr16
xor
aas
cmpsl
mov
push
jg
inc
sbb
dec
sub
add
jle
xchg
fs
sbb
adc
ret
cmc
xchg
lret
std
pop
mov
add
and
mov
data16
ljmp
xchg
jl
xchg
jecxz
sarl
imulb
test
mov
xlat
mov
gs
outsl
mov
mov
jns
xor
lret
cli
and
adc
test
ljmp
ljmp
mov
and
or
sub
mov
xchg
mov
pop
call
xchg
arpl
jo
sub
das
pop
call
jp
loop
push
rcl
adcb
js
push
andb
sbb
mulb
inc
mov
and
mov
or
sub
adc
sbb
pop
add
jns
mov
push
shll
jbe
push
or
add
pop
cmp
push
andb
sub
cmpsl
dec
xchg
daa
xor
and
mov
mov
dec
mov
jle
xorb
sub
outsb
faddl
or
sbb
in
stos
mov
pop
aas
sti
jno
mov
push
loope
dec
mov
arpl
xchg
mov
jno
jno
out
or
rolb
or
pop
fbld
loop
test
adc
cmp
jge
scas
popf
lods
jmp
mov
push
shl
aas
or
ja
xor
stos
dec
loope
mov
xchg
icebp
loopne
mov
mov
lahf
int3
xor
mov
das
gs
adc
add
cmp
push
adc
je
sbb
mov
xor
sub
cmpsb
sbb
stos
lock
or
ss
fidivrl
dec
xchg
cwtl
out
movsb
repnz
repnz
inc
cli
push
add
fabs
mov
xlat
stc
jns
daa
nop
pop
fsts
cli
scas
cmp
dec
cmc
arpl
dec
adc
or
sbb
enter
pop
scas
mov
push
addr16
jle
jne
repz
dec
jge
jecxz
push
push
sub
jbe
scas
inc
and
mov
jnp
aaa
repnz
out
pop
mov
push
ds
adc
inc
xchg
lock
mov
push
sub
roll
sub
enter
clc
iret
loop
adc
movsl
dec
xchg
xchg
sti
mov
les
pop
in
andl
push
cld
mov
xlat
jbe
dec
out
or
das
ficompl
les
lahf
test
testb
push
jae
lock
pop
in
jo
mov
xchg
fwait
mov
roll
adc
mov
scas
pop
jae
fcmovb
xor
jns
ds
cli
mov
repnz
rcrb
mov
jns
xchg
shll
sub
adcl
sub
dec
ds
jl
dec
outsl
push
shrl
sti
ljmp
pop
mov
fimull
sub
ret
cmp
jns
cmpsb
aam
lods
push
inc
out
es
lahf
fs
bound
inc
jno
sub
lret
pop
dec
stos
mov
call
adc
stos
inc
jnp
or
add
pushf
insl
lret
test
cli
inc
jo
rol
call
std
pop
stos
testb
sub
lret
xlat
xor
dec
push
aad
les
test
iret
or
sub
jmp
scas
jae
aad
cmp
push
push
sbb
fnstenv
jecxz
cltd
std
jne
int
xor
aad
pop
cmc
es
adc
dec
push
outsl
daa
mov
pop
inc
dec
push
adc
lds
iret
cli
aaa
lods
xchg
and
sub
xor
sahf
pop
mov
cmp
mov
lret
xchg
into
pushf
or
aad
scas
outsl
add
mov
in
cli
mov
jno
pop
push
mov
xor
push
andb
jle
fs
dec
popa
iret
dec
sub
mov
push
popa
inc
out
aas
lea
mov
mov
fcmove
leave
lahf
or
punpcklwd
aas
lods
les
adc
rcll
pop
xchg
nop
dec
or
repnz
mov
xor
inc
sbb
pop
insb
xorb
mov
xchg
cmp
jle
push
push
into
jnp
popl
push
call
pop
es
jmp
call
sahf
inc
push
xchg
imul
icebp
mov
je
into
cmp
xchg
jae
inc
inc
adc
das
lods
or
movsl
sub
inc
cli
rolb
xchg
sbb
ja
cld
ss
faddl
xchg
pop
and
icebp
leave
addr16
cmp
jmp
test
loope
or
shl
jae
enter
loope
repnz
std
pop
subb
sbb
push
fdivs
and
andl
shl
loope
popa
xlat
lods
data16
pop
add
aad
adc
aaa
mov
das
iret
bound
mov
xchg
ds
push
pusha
pop
jne
daa
imul
jge
mov
pop
loope
adc
jb
shrl
sub
movsl
aaa
aas
in
popa
ss
xor
xor
popf
jg
mov
pop
es
cmp
cmpsl
mov
mov
data16
bound
lock
cmp
pop
es
xchg
mov
xchg
adc
or
popa
fisttps
mov
push
lahf
mull
popa
out
xchg
cmp
cltd
sub
add
cld
in
mov
les
and
push
fsubrs
imul
cmp
cld
inc
inc
lea
lock
jno
aas
xorb
mov
rclb
mov
pop
insl
and
xor
mov
and
pop
pushf
leave
adc
data16
add
ficoml
jae
mov
jnp
and
ret
les
inc
icebp
push
xchg
mov
push
enter
pop
jae
fstpl
insl
sbb
outsl
mov
shrb
mov
test
fidivrs
push
mov
daa
xchg
xchg
jo
add
test
push
mov
aas
stos
cmp
push
xchg
in
je
xchg
xchg
and
scas
mov
cmp
aaa
cmp
movsb
test
pop
sbb
fldenv
or
add
xlat
call
or
push
es
xchg
jp
dec
sbb
pop
mov
rorb
mov
cmc
push
or
repz
and
or
jl
pop
push
stos
and
jns
push
js
push
jno
sbb
mov
add
cmp
pop
mov
cmp
pop
mov
xor
or
cltd
ja
sub
sub
iret
or
int
mov
ds
lea
dec
mov
xchg
loop
loopne
sub
call
pop
jl
mov
dec
xor
inc
sbb
sub
cmp
rclb
fmuls
lret
mov
mov
sahf
bound
cmp
mov
fcmovne
lret
push
fldl
cltd
pop
add
push
fsub
mov
repz
xchg
mov
adc
jb
mov
or
leave
xchg
cmp
imul
int
push
xorb
cmpsb
insl
or
inc
or
push
ficomps
jp
imul
imul
mov
fimull
mov
push
lea
or
dec
dec
inc
outsb
mov
sbb
ret
cltd
mov
pop
je
mov
rcr
mov
pop
jle
cmp
test
lods
sub
inc
or
mov
fs
mov
or
inc
xchg
cmp
jl
adc
enter
pop
or
and
lahf
ss
inc
pop
mov
pop
fsubs
jns
mov
sbbl
out
es
mov
sub
push
sub
addr16
mov
xor
mov
cmp
shlb
jg
loope
xchg
mov
and
fidivrl
jne
jmp
pop
in
cli
cs
popf
aaa
dec
pop
aad
inc
outsl
xor
mov
inc
addr16
cmp
les
stos
test
ret
or
popa
testl
out
mov
movsl
adc
lcall
push
jp
out
inc
mov
pop
mov
jno
cwtl
cmp
and
test
fs
insw
shrb
push
and
xor
push
imul
jnp
gs
jmp
adc
cli
and
mov
movsl
loopne
cmpsl
push
jae
inc
lret
clc
dec
and
pushf
lock
xchg
xor
dec
sbb
loopne
mov
shrl
cmp
cmp
ja
cmc
inc
mov
and
mov
fwait
das
mov
test
or
dec
sub
cmpsb
jne
jp
adc
dec
cmp
stc
mov
arpl
repnz
imul
xor
adc
add
sub
in
mov
fdivrl
pop
mov
xor
adc
jnp
mov
xchg
idivb
sahf
in
and
mov
or
rorb
mov
repnz
sbb
or
adc
cli
dec
jge
mov
jp
mov
or
out
dec
imul
out
mov
sbb
push
xor
inc
ret
xor
icebp
clc
mov
pop
and
rol
mov
cld
pop
mov
movsl
adc
fnstenv
sbb
mov
mov
dec
fsubr
test
rcr
loop
rorb
mov
js
je
fs
fdivrs
shrb
inc
cs
movsl
mov
inc
insl
vmaskmovpd
std
push
jle
in
sbb
imul
test
jnp
xchg
loopne
outsb
lock
dec
sub
mov
rcll
mov
inc
jp
inc
xchg
dec
jmp
pusha
lea
mov
push
mov
sbb
and
leave
fmul
aaa
xlat
lahf
push
out
fsubrs
mov
pop
jl
pop
aas
add
into
push
sbb
outsb
cmp
cmpsb
jae
jne
jne
outsb
dec
in
add
dec
xchg
sub
cmp
enter
popa
jnp
daa
aas
gs
stos
fisubrl
lahf
sub
loop
das
jg
adc
mov
test
out
xor
lret
jnp
add
inc
xchg
pop
cmp
sbb
les
imul
hlt
notl
push
shlb
imul
je
repnz
cs
adc
lods
popf
call
bound
push
pop
nop
pop
pop
repnz
stos
sub
jg
jmp
das
movsb
loopne
pop
rdtsc
jp
pop
inc
jp
push
bound
fldt
scas
icebp
or
popa
xlat
xor
mov
cltd
je
or
iret
lret
ficomps
dec
int3
fildl
sbb
xchg
cmpsl
adcb
dec
lea
push
mov
sub
adc
imul
dec
test
aam
iret
sbb
decb
add
cltd
xor
dec
int
enter
push
test
loop
push
js
js
push
in
jmp
mov
dec
enter
pop
test
inc
test
sahf
insl
adc
mov
inc
sbb
test
fcompl
pop
mov
mov
dec
sbb
or
jne
divl
test
jno
call
xchg
dec
mov
mov
mov
jge
incb
pushf
mov
push
jp
and
pushl
mov
or
mov
paddd
adc
mov
cmp
push
xor
es
fwait
add
int3
and
and
and
adc
mov
ds
nop
clc
test
inc
sti
xchg
mov
je
pop
imul
fs
jo
sub
scas
pop
push
cmp
test
jnp
popl
sub
xchg
mov
fdivr
mov
push
push
jae
insl
mov
lret
sbb
sbb
and
jbe
cmc
and
rcrl
loop
fs
mov
cmp
adc
push
sub
negl
xor
push
cmp
mov
push
fimull
stos
jg
int3
or
pop
xchg
dec
mov
lcall
sub
sbb
lock
and
inc
and
mov
jae
pop
adc
sub
stos
jmp
int
mov
sbb
mov
mov
and
addb
imul
cmp
sub
mov
scas
and
xchg
adc
fdecstp
xchg
mov
int
hlt
sti
icebp
cmc
jnp
aam
daa
inc
imul
or
xlat
lea
mov
pop
imul
leave
dec
addr16
or
mov
pop
push
lahf
ret
mov
adc
push
or
cmpsl
xchg
daa
pop
jmp
pushf
add
out
jb
push
cld
adc
add
mov
sbb
mov
in
stc
sarl
js
jno
push
jnp
or
ret
jge
fbld
inc
pop
pop
rcrb
jo
data16
ljmp
xchg
ret
mov
jg
sbb
jmp
outsl
sub
xchg
addl
lock
lea
dec
cmp
movsl
xchg
cltd
pop
mov
outsb
stc
out
int3
pop
test
ss
mov
fdivrl
clc
pop
ja
lcall
xchg
push
cmp
test
lcall
push
cmp
pop
sbb
stc
or
mov
inc
push
jl
inc
add
shl
mov
scas
clc
jge
xchg
ret
pop
sbb
cmpb
and
lcall
sbb
mov
sbb
stc
test
fucomp
movsb
push
sbb
or
push
xor
xchg
mov
ret
jno
sbb
fisttpl
fwait
cmp
xor
les
push
jmp
std
jno
xchg
adc
and
xchg
jae
mov
or
test
sub
pop
inc
mov
pop
pop
add
push
mov
loop
aaa
sub
testl
pop
lods
jmp
inc
xchg
dec
mov
xor
scas
xchg
sub
push
pop
jl
out
scas
mov
repz
subb
or
dec
ja
ja
sbb
pop
dec
int
inc
aas
dec
adc
push
fldt
sub
cmp
repz
dec
adc
adc
jo
inc
cmp
pop
mov
das
jno
and
sbb
ss
xor
xor
shrb
xchg
sub
int3
aas
movsl
sub
or
and
and
repnz
mov
push
nop
lret
inc
push
mov
add
mov
add
je
dec
nop
lods
sbb
insl
jb
ja
in
jmp
in
add
lds
lret
pop
fcomi
push
and
nop
sbb
cmp
aam
stos
jge
sub
aas
lods
iret
test
mov
jns
mov
repnz
hlt
jb
lds
cmp
mov
movsb
lret
nop
sarb
adc
jecxz
mov
lock
movsl
push
cmp
xor
mov
ror
mov
stos
mov
push
cmp
leave
rcrb
fs
mov
movsb
mov
push
mov
test
movsl
clc
pop
imul
dec
xchg
gs
test
lret
insl
pop
loope
loope
jno
cmpsl
push
dec
push
and
cmpsb
inc
adc
enter
xchg
inc
cmp
xor
sahf
inc
xchg
jno
std
in
loopne
sbb
jp
xchg
imul
mov
in
pop
jnp
mov
sub
ror
jnp
lret
sahf
in
push
jno
ds
mulb
fists
leave
movsl
addb
cld
add
clc
push
add
shll
dec
lds
lcall
mov
dec
rolb
inc
mov
in
int3
out
pop
imull
in
inc
jb
jnp
jb
push
xchg
mov
pop
mov
jmp
pop
push
jo
or
sub
pop
push
daa
sahf
dec
dec
cmc
repz
xchg
movsb
into
jne
push
imul
ss
ret
xor
mov
xchg
fsubl
mov
xor
cltd
rcrl
mov
lret
xor
fdivrs
sub
cmp
xchg
sub
xorb
and
and
xchg
sbb
jle
mov
in
les
mov
mov
add
scas
lea
mov
mov
dec
cld
pusha
or
popl
arpl
push
dec
ss
jecxz
popa
rorl
ficoms
scas
dec
and
outsb
dec
mov
mov
jg
les
inc
fs
dec
movb
ffreep
cmp
jns
arpl
scas
cmp
movsl
push
pop
push
enter
clc
xchg
inc
or
mov
xchg
sub
adcb
mov
sub
mov
je
sbb
jle
xor
inc
lods
rorl
jmp
or
inc
add
rcr
jns
fistl
leave
in
cmp
mov
adc
insl
xchg
and
pop
dec
shr
pop
data16
aad
push
lret
push
pushf
pop
loop
mov
adc
add
mov
js
sahf
and
push
imul
testl
xchg
fmuls
insl
jge
mov
cmp
cld
jl
push
fs
pop
mov
cmp
ja
cmc
xchg
push
dec
cmpsl
xor
ds
adc
xchg
das
pop
cmp
lcall
dec
fstpl
mov
lahf
pop
cmp
pusha
push
arpl
mov
imul
mov
dec
dec
arpl
mov
jnp
int
sbb
mov
jg
stc
push
das
and
test
ret
inc
loop
push
fimuls
and
sbb
xchg
jle
lods
xchg
pop
and
pop
rorl
cwtl
rcrb
aad
movsb
xor
mov
rclb
mov
mov
jp
mov
mov
mov
aaa
lock
int3
pop
out
adc
filds
or
pop
push
xchg
push
push
mov
xchg
pop
repnz
lahf
jge
sub
call
mov
pop
rcrl
push
lods
test
cmc
jae
test
mov
ss
dec
lock
add
mov
orb
fsubrs
cltd
jp
or
adc
outsl
enter
push
loope
pop
xlat
adc
jb
daa
lds
test
inc
leave
scas
mov
mov
outsl
popf
test
xchg
mov
mov
iret
lret
jp
mov
mov
dec
pop
mov
mov
mov
sbb
mov
jo
aas
int3
je
inc
xor
lea
test
aaa
and
enter
psubusw
or
cmp
cs
mov
and
dec
arpl
std
mov
xchg
ret
aad
adc
inc
repnz
jne
pop
jl
roll
sahf
jb
add
rcrb
push
in
decl
jne
insb
stos
xchg
enter
popa
mov
sbb
sbb
sahf
negb
sahf
lods
cmp
ljmp
inc
out
ja
ret
aas
add
stos
ret
xor
mov
add
pushf
cmp
sub
jmp
and
rolb
test
adc
pop
or
aam
rcll
js
dec
aas
mov
sti
fcmovnu
int
sbb
scas
sbb
sbb
cmpsl
out
jle
loope
mov
mov
icebp
in
mov
add
cmp
sub
insl
bound
mov
frstor
test
push
rorl
leave
shl
jne
or
stos
push
imulb
imul
and
and
push
cmp
add
loope
jle
cmp
and
jno
jl
addr16
loopne
and
lret
and
lret
sub
jle,pn
pandn
push
and
pop
sbb
popf
shll
cmc
cmp
cmp
push
cmp
inc
aam
sbb
sub
dec
pop
mov
sahf
les
add
xor
fisttpll
and
shl
pop
jo
mov
adc
mov
pop
fxch
jbe
mov
lret
cmp
imul
cmp
ret
mov
jnp
add
lcall
pop
xchg
rorb
loope
lea
inc
in
shll
xor
mov
rcrl
inc
jno
cmp
movsb
rcll
icebp
jnp
and
or
jge
call
pop
or
jp
scas
sar
clc
inc
push
in
mov
mov
sahf
pop
jp
xlat
mov
sub
mov
jmp
push
or
jecxz
mov
pop
sbb
adc
lods
mov
mov
stos
negl
cli
sbb
ficoml
into
jle
outsb
test
fs
xor
sbb
add
xor
mov
jg
test
xor
lcall
xorb
std
and
xchg
cmp
mov
dec
in
shlb
ljmp
pop
jns
lret
cmp
movsl
pushf
fstps
xor
shrb
test
inc
divb
lret
mov
and
sub
pop
mov
outsb
mov
mov
or
leave
mov
xchg
push
jb
ja
int3
scas
adc
jle
movsl
jne
movsl
negl
add
jns
andb
adc
xchg
mov
xor
fbstp
mov
stos
mov
push
fildl
adc
pop
dec
dec
push
mov
stos
or
lret
add
out
xchg
mov
scas
cwtl
mov
push
or
faddl
jp
cmp
sbb
imull
xor
sar
push
ret
andnps
lods
jno
dec
lds
cwtl
loope
jae
in
std
dec
push
gs
sub
mov
jb
icebp
aas
adc
aas
outsb
aas
jnp
fwait
sub
aas
fisttpl
fistl
test
call
xor
push
jne
add
mov
popa
and
dec
repz
scas
cmp
into
or
mov
js
sbb
push
dec
pop
xchg
fidivrl
xchg
popa
sub
cmp
notb
dec
mull
movsl
adc
rolb
movsl
lret
pop
push
and
idivb
mov
fs
and
imul
std
arpl
or
mov
pop
push
add
andb
ljmp
adc
mov
add
lea
mov
mov
pop
sbb
adc
xchg
or
aad
in
pop
lcall
sub
mov
push
pop
push
aad
and
out
in
lods
pop
pop
mov
adc
mov
mov
cmp
adc
popa
or
shlb
notl
popa
add
hlt
xchg
div
mov
pusha
dec
push
mov
cmpsb
inc
int
jl
into
out
add
movaps
add
je
cmpsb
jle
add
xor
and
mov
or
mov
jb
pop
std
push
addl
mov
fbstp
sbb
and
push
ret
fldenv
push
and
add
mov
fisubl
sti
mov
dec
aad
fs
sbb
adc
and
outsl
gs
insb
jle
pop
xchg
enter
dec
hlt
sub
mull
jno
xor
loopne
pop
pop
cmpsb
mov
test
out
xchg
xor
xchg
push
hlt
imul
out
fs
bound
jge
add
test
loopne
lods
mov
push
xchg
out
js
dec
lds
sar
ja
pop
mov
out
addr16
pushf
push
and
xor
jne
mov
mov
jmp
int
fmuls
lea
es
std
sbb
popf
inc
in
in
aaa
lcall
aad
pop
movsl
repz
and
clc
insl
pushf
cmp
pusha
rcr
jbe
rorl
and
jle
lock
fildl
inc
and
shr
jecxz
ror
add
cmc
into
and
xchg
dec
sub
and
popa
es
dec
inc
add
fmull
stos
neg
jmp
xlat
pushf
sbb
push
or
dec
mov
xor
mov
arpl
dec
pop
sbb
jb
decb
cmp
jmp
iret
push
inc
cmpb
repnz
mov
push
scas
jne
ficomps
fs
push
pusha
lcall
lods
pushf
inc
inc
inc
xor
cmp
adc
dec
xor
dec
pop
and
sbb
push
push
shlb
mov
cmp
out
das
cld
pop
loopne
sbbl
pop
imul
xchg
hlt
lods
cmp
mov
sub
test
out
add
and
leave
fnstcw
out
lds
push
mov
xchg
mov
sub
iret
sub
inc
and
jle
fistpl
jb
in
bound
adc
mov
mov
fistps
jl
rorl
movsb
cltd
js
fs
cltd
aam
gs
jns
sarl
pusha
sbb
repnz
hlt
cmp
xchg
outsb
mov
in
jb
mov
cmp
xor
insb
int3
je
push
out
js
mov
sub
inc
cmp
insb
inc
dec
leave
pop
lods
and
aaa
cltd
aam
fwait
add
and
movsb
dec
loop
mov
cmp
pop
outsl
lahf
inc
shrl
xor
and
cmpsl
sar
addr16
clc
int
mov
aas
fldl
push
dec
mov
rcrl
xchg
adc
push
lcall
and
mov
outsb
ds
mov
sub
jl
jnp
jmp
add
sub
cmp
mov
popf
mov
push
inc
je
lret
dec
mov
stos
cli
jne
bound
dec
int3
testb
notl
mov
mov
rcll
sbb
mov
popf
xor
mov
addr16
mov
xor
shl
es
std
adc
ja
out
xchg
in
xor
adc
sbb
sbb
subb
mov
lret
mov
insb
mov
into
pop
jb
subl
in
movsb
arpl
push
rolb
fmull
mov
int3
jne
popa
push
add
cwtl
push
inc
into
out
clc
ret
mov
pop
or
sbb
inc
mov
dec
inc
fisubrl
or
jecxz
xchg
mov
push
mov
popf
xchg
adc
jmp
daa
jns
jl
stos
cmp
popa
das
fbld
push
scas
mov
andl
rorl
mov
lret
xor
cmc
outsl
pop
stc
outsb
pusha
in
push
jbe
and
movsb
cmp
xor
mov
cmp
popa
lea
add
int
into
out
xor
adc
sub
and
aas
jae
daa
mov
mov
adc
cmp
dec
pusha
adc
test
push
stos
or
cmp
sbb
cmp
out
and
xorb
das
mov
inc
push
jmp
cmp
lods
xchg
or
xchg
add
fildl
cmpl
ljmp
mov
fstl
jle
cmpsl
push
pop
jl
js
shll
sbb
ljmp
dec
push
lds
xchg
ret
enter
push
add
xchg
mov
imul
jns
loop
mov
cmp
inc
cmp
popl
dec
sub
into
pop
fistpll
cmpsl
aam
sbb
inc
fldenv
popf
je
fs
out
out
ds
pop
test
in
or
mov
mov
adc
jno
fnstenv
addr16
cmpsl
and
mov
xchg
jno
push
push
les
mov
mov
xorb
push
mov
push
pop
rcr
mov
je
and
jecxz
je
xchg
lock
lret
adc
scas
out
pusha
and
inc
lea
mov
sarl
mov
hlt
jge
pusha
out
sbb
outsl
in
adcl
dec
insl
push
jle
sbb
in
into
popf
or
pusha
mov
mov
push
jno
push
in
xchg
jnp
std
es
cld
jbe
pushf
insb
inc
xor
dec
popf
daa
push
jmp
jbe
jae
std
jbe
fs
mov
nop
in
add
sbb
pop
and
gs
lea
xchg
cmpsb
xchg
jne
push
pop
outsl
xor
fcoml
push
mov
in
xchg
repz
ret
jle
push
loope
sarb
out
xor
out
cltd
mov
mov
mov
repz
mov
mov
jle
xor
adc
add
adc
pop
mov
mov
std
out
repnz
std
jmp
cmp
xor
xor
dec
loop
and
inc
mov
rcll
mov
mov
es
test
mov
and
nop
mov
sub
inc
insb
pop
xchg
pop
sub
ljmp
enter
lods
jo
dec
inc
cmp
lds
imulb
and
jo
decb
aaa
or
test
lock
lods
adc
xor
jp
mov
jl
mov
fnstsw
and
jmp
scas
cltd
pminub
jns
sbb
xchg
dec
add
dec
or
scas
cmp
fscale
pop
add
enter
pop
mov
xor
les
xor
pop
and
dec
fsubr
sbb
pushf
mov
je
pushf
sbb
and
inc
fldcw
xor
adc
or
cmp
or
movsb
adc
scas
adc
xor
out
mov
hlt
cmp
hlt
push
mov
push
insb
mov
pop
pop
and
push
loopne
pop
adc
div
std
inc
enter
xchg
pop
arpl
cmp
adc
jno
lcall
pop
pushf
test
lret
push
sub
jae
or
sahf
data16
mov
jae
adc
mov
icebp
xchg
movsl
xchg
cmpsb
inc
aas
cmp
lods
std
xchg
push
mov
pushf
int
mov
cmpsb
loopew
gs
sub
enter
inc
pushl
popa
push
add
mov
mov
cmp
pop
test
jmp
xor
mov
push
jo
mov
divl
addb
sub
push
or
pop
mov
mov
cltd
fdivrl
in
in
fsubs
dec
stc
stos
jmp
pop
add
pushf
mov
pop
mov
mov
fdivs
cmc
mov
mov
cmp
mov
daa
mov
dec
jbe
xchg
test
js
dec
in
mov
arpl
sub
xor
cmc
mov
aaa
sbb
daa
fldl
jo
cmpsb
sarb
and
mov
sub
cmp
dec
or
jno
mov
ljmp
jecxz
xor
hlt
fcomi
sub
stos
cli
dec
dec
adc
jno
mov
fstpl
push
dec
sahf
ret
leave
and
and
and
imul
test
test
jbe
pop
mov
aam
aas
and
or
out
clc
fnstenv
push
test
inc
mov
loop
dec
rorb
jecxz
pop
in
inc
adc
outsl
xchg
adc
and
out
leave
ljmp
mov
subl
lret
popf
add
add
rolb
dec
int
andl
or
sbb
sbb
pop
cld
insb
pop
scas
ret
lods
sub
in
std
out
or
fstps
jne
mov
out
xchg
scas
negb
xchg
mov
push
adc
test
clc
ficoms
test
push
dec
sbb
imul
jae
jmp
out
int3
pop
shlb
pop
push
aam
inc
repnz
loopne
clc
repnz
pop
and
xlat
fstl
in
int3
cmp
push
sbb
clc
leave
jg
mov
dec
add
lds
nop
or
dec
imull
or
sahf
xor
mov
xlat
loop
fpatan
test
mov
shlb
lods
sub
in
or
mov
and
cli
enter
loop
dec
or
loopne
insb
ja
aas
dec
sub
jb
mov
sahf
xor
cs
xor
xor
idivb
sub
mov
jns
rcll
cmp
outsb
push
or
mov
mov
lods
icebp
jo
stos
out
and
mov
push
inc
jno
mov
sub
loopne
bnd
push
enter
insb
mov
xchg
mov
xor
jns
or
sub
lods
mov
popf
mov
lcall
shrl
out
push
xor
cld
adc
xor
stos
adc
cmpsb
xchg
adc
sbb
mov
mov
push
lea
mov
sbb
inc
xor
out
mov
pop
cmc
sub
loope
inc
adc
jbe
sbb
dec
adc
addr16
scas
fists
ds
mov
sbb
jo
stos
and
pop
rclb
add
in
js
imul
inc
mov
pop
test
push
push
jl
lods
adc
and
mov
loopne
xchg
inc
inc
lcall
mov
push
inc
mov
test
in
sbb
lret
pop
add
jmp
dec
xor
jbe
aam
push
dec
adc
pop
sbbl
or
insl
outsb
ss
sub
dec
sbb
sbb
xchg
scas
inc
dec
push
mov
adc
pushf
or
ss
insb
mov
iret
pusha
and
lcall
and
or
cld
ret
fidivs
out
lret
imul
shll
adcl
test
in
fmuls
fcomps
arpl
ja
xchg
loopne
or
outsl
enter
cmp
inc
repz
or
dec
or
xchg
xor
into
and
push
mov
lods
push
xchg
cs
or
jbe
cmp
mov
rcr
push
into
dec
mov
sub
xlat
mov
mov
arpl
pushf
lods
jg
or
cmpsl
adc
adc
int
pop
repnz
dec
add
jmp
or
aam
loopne
or
jg
divb
push
pop
inc
inc
push
call
call
pop
mov
push
fmulp
xor
sbb
ficoml
orb
pusha
test
dec
fwait
sbb
mov
sbb
push
insl
sbb
sub
daa
mov
stc
dec
shrb
scas
sub
outsb
fisubs
jmp
or
or
jge
daa
xor
repz
cmp
inc
pop
inc
xor
jp
ret
cltd
add
test
cmp
in
lock
cs
aad
mov
loope
testl
mov
insl
xchg
jge
jge
dec
daa
jp
add
mov
inc
fcoms
push
bound
pop
adc
cmp
repz
and
in
sbb
fcmovu
mov
jmp
mov
mov
xchg
je
adc
pusha
sbb
sub
rcll
test
fwait
and
outsl
inc
or
pop
fcompl
inc
xor
lods
jbe
add
sub
cmp
negb
xchg
xor
ret
and
jecxz
pushf
imul
rolb
and
inc
dec
lcall
mov
xchg
sahf
int3
fldl
lret
pop
mov
mov
iret
call
mov
ljmp
mov
push
adc
or
pop
ret
movsb
push
jle
push
insl
sub
in
out
dec
cmpsl
push
popf
adc
ret
aas
sti
sbb
test
push
pop
iret
dec
imul
cmp
cmp
jecxz
dec
loop
mov
inc
lret
daa
mov
orl
cwtl
call
or
rorb
add
pop
aam
jo
pop
fs
mov
dec
les
hlt
mov
lea
imul
leave
incl
movsl
xor
dec
jae
repnz
enter
not
fdivrl
mov
in
mov
sub
test
mov
add
mov
enter
leave
les
mov
lahf
outsb
xor
imul
int
jl
mov
push
sti
iret
push
fimuls
pop
std
into
fisubrs
cs
inc
cmp
and
popf
fstl
fiaddl
lea
and
cmpsl
jg
idivl
or
sbb
fcompl
mov
cmp
add
repz
cmp
xlat
and
dec
xchg
stos
das
and
jp
cmp
repnz
outsb
mov
ret
pop
and
stos
push
xor
test
ljmp
mov
dec
mov
inc
xor
arpl
fisttps
aam
ficomps
adc
adc
fsub
jne
in
lock
mov
mov
mov
jns
jle
movsl
add
dec
mov
out
jp
push
inc
test
mov
add
xchg
dec
xchg
and
xor
xor
ror
add
movsl
mov
inc
xchg
incl
xor
test
movsl
jnp
int
sbb
stc
jle
add
xchg
shlb
sub
xor
es
test
scas
sbb
and
ret
pop
or
sub
popa
dec
add
pop
pop
inc
inc
daa
fidivrs
add
mov
and
daa
adc
xchg
lods
cmp
jno
test
in
inc
bt
scas
adc
and
notl
inc
sbb
arpl
ja
sub
adc
das
stos
push
lea
mov
lods
loope
psllw
inc
mov
in
lods
add
mov
pop
adc
cli
pop
xchg
or
fs
inc
or
mov
or
test
repnz
out
xchg
ja
mov
leave
insb
jbe
test
cmpsl
mov
adc
or
cmpsl
cs
addr16
mov
insl
jmp
inc
out
add
xor
aas
adc
decb
push
jbe
cmp
pop
adc
mov
adc
stos
dec
jg
pop
inc
cltd
jl
data16
add
add
stos
sbb
loopne
fmul
stos
sub
sub
sahf
fldl
mov
sbb
sbb
or
out
xor
and
pushf
push
cwtl
clc
push
adc
or
out
in
ficoms
daa
shlb
fildll
loop
aaa
aad
data16
mov
sbb
cmpsb
push
out
ljmp
mov
loope
ds
jmp
stc
xchg
adc
jne
icebp
sbb
add
daa
fldcw
lret
movsb
inc
or
adc
data16
cmp
mov
jle
shrb
stos
inc
or
push
loop
sub
fxch
mov
mov
nop
pop
cmpb
jae
fdivrs
call
sbb
jp
mov
cltd
mov
mov
sti
popa
mov
jb
les
and
ret
cmp
cmp
and
imul
ss
or
fiadds
fcom
mov
icebp
xchg
in
jmp
jno
mov
sub
popl
push
addb
mov
outsb
xchg
mov
hlt
mov
test
xchg
mov
pusha
inc
inc
and
xchg
or
jnp
pop
mov
xchg
or
mov
mov
pop
push
nop
mov
cmc
push
loopne
mov
dec
mov
outsb
cmc
cmp
call
pop
pop
mull
lea
cmpsb
push
outsl
mov
jle
sbb
scas
dec
mov
adcl
mov
inc
inc
push
int3
loop
mov
stc
outsl
ret
adc
scas
sbb
push
addr16
sarb
fs
jecxz
inc
divb
stos
mov
push
mov
and
or
mov
or
cld
xor
pop
jns
ja
dec
sub
fsub
and
out
lcall
cs
gs
subb
data16
mul
stos
pop
jnp
fadds
push
xchg
mov
xchg
jmp
and
xlat
mov
xchg
pop
pushl
mov
xchg
jl
mov
add
decb
jle
pop
in
out
mov
ljmp
add
lock
movsb
jl
sbb
pop
sahf
xor
adc
mov
pop
mov
push
cmpsb
add
or
out
stos
cwtl
pop
add
mov
inc
mov
dec
jge
add
clc
fsubrs
sahf
inc
or
pop
in
jb
mov
lods
push
sbb
inc
std
or
jne
or
sbb
mov
inc
cmpsl
out
mov
jne
mov
js
sub
and
sub
pop
rcrl
fs
movb
test
iret
push
addr16
sbb
push
dec
stos
mov
imul
shll
jne
push
inc
dec
aas
jo
or
daa
mov
mov
int
in
mov
lret
js
push
xor
jns
mov
jae
out
dec
pushf
sub
movsl
imul
xchg
dec
mov
ss
aas
stos
cli
ret
mov
nop
cli
ljmp
lock
cmp
add
cmp
or
sub
jbe
int
or
mov
push
sahf
jne
xchg
pushf
adc
mov
jge
jbe
inc
jne
push
xor
and
mov
inc
and
xor
ljmp
and
mov
mov
and
add
int
push
jge
xor
push
scas
stos
dec
dec
lahf
xor
jne
push
notb
lods
xchg
mov
dec
pop
jmp
sbb
scas
and
ss
sbb
out
mov
xchg
mov
in
mov
adc
dec
cmp
push
gs
mov
pushf
cwtl
cli
mov
jns
and
movsl
xor
icebp
inc
push
outsb
lret
sub
aad
cmp
sti
mov
loop
lock
xchg
and
and
outsb
daa
and
dec
cli
in
popa
push
fildll
xchg
jnp
sub
std
pop
pop
das
shll
xor
or
stc
daa
inc
pop
cmp
ljmp
mov
int
and
mov
xor
mov
lret
ret
addr16
add
nop
jle
pop
push
ss
or
test
sbb
mov
int3
dec
inc
ja
inc
daa
inc
xor
mov
and
sbb
add
mov
mov
in
js
out
jne
ret
outsl
mov
and
jnp
movsl
sub
es
loopne
push
sbb
jmp
insl
fsubrs
sub
cwtl
movsb
add
xchg
inc
mov
pop
inc
and
lods
clc
xchg
sti
dec
mov
adc
add
jb
iret
notb
add
fmuls
xchg
stc
out
xchg
in
mul
icebp
cmp
pop
test
dec
out
mov
lret
test
lods
cmp
or
pop
adc
xchg
sbb
and
rcrb
iret
andnps
xor
mov
jb
repz
add
addb
cwtl
enter
mov
mov
icebp
ret
pop
xor
xchg
lahf
jg
inc
push
fnsave
test
adc
fmull
pop
bound
jb
call
mov
movsl
pop
jecxz
daa
js
leavew
iret
jnp
pop
outsb
pop
imul
jmp
xor
cmpsb
or
jae
jo
insl
mov
push
cld
int3
mov
mov
push
out
icebp
fs
pop
ljmp
push
cmp
dec
cld
fnop
mov
test
push
add
loopne
sub
test
outsb
and
sar
pusha
bound
pop
xchg
inc
xchg
cmpsb
fdivrs
and
push
stos
pushl
dec
cmp
pop
rcrl
bnd
cmpsb
adcl
add
push
jle
add
mov
les
or
inc
pop
sub
leave
adc
fsubrl
out
sub
add
into
jnp
mov
pop
int3
stos
or
pop
pop
jle
jb
xchg
sbb
clc
ror
xor
xchg
and
push
or
xchg
rcrl
adc
lock
fsts
mov
mov
clc
add
cwtl
into
jae
dec
nopl
mov
pop
and
scas
mov
adc
into
sub
rorb
jmp
popf
xchg
xchg
jae
adc
sbb
pop
les
mov
inc
flds
ret
xor
push
mov
mov
pop
pop
jge
xchg
adc
les
fimuls
mov
cmpsb
incb
cmp
pop
lea
adc
pop
lret
loopne
fldl2e
scas
aad
xchg
notb
pop
sbb
or
mov
cmp
lret
aas
iret
push
stos
jmp
jno
push
cmpsb
fsubs
dec
cmpsl
cmp
push
outsb
je
lock
pop
or
sub
insl
and
mov
jl
mov
stc
xchg
cli
pop
mov
dec
push
stc
xor
sub
mov
inc
es
adc
mov
adc
xor
sub
addr16
fucomi
pop
dec
sbb
push
fsin
adcl
subl
shl
push
cs
sbb
ret
sbb
fimuls
jae
xchg
mov
mov
loop
stos
outsl
push
scas
sarl
in
ret
sub
icebp
inc
and
and
add
jecxz
test
adc
cmp
xor
fisttpll
jmp
lea
mov
pusha
push
scas
les
cwtl
pop
inc
and
jecxz
pop
push
sub
fcmovu
es
xchg
icebp
cmp
jg
dec
repnz
jmp
and
addl
xchg
mov
fbstp
sti
rorb
sbb
sub
push
ret
insb
inc
js
in
push
stos
push
add
and
mov
jmp
pop
jecxz
sbb
add
addb
xchg
rep
pop
pusha
push
fistl
mov
jb
les
ret
gs
sub
aas
inc
sub
enter
gs
xor
adc
mov
push
pop
xor
ud1
les
mov
xchg
add
xchg
lcall
xor
push
sub
jb
adc
test
adc
sbb
add
in
arpl
popf
pop
or
sbb
std
pop
xchg
sahf
ja
outsb
dec
mov
cld
xchg
cmpsb
jl
je
pop
shl
pop
mov
and
xor
mov
aam
test
xchg
sbb
stos
es
ficoms
or
jns
cmp
imul
inc
xchg
lahf
adc
jmp
aaa
sub
mov
jo
adc
jae
fwait
sub
push
shlb
cmp
sahf
divb
int3
ljmp
push
lods
test
mov
dec
pop
repz
pop
orl
mov
sub
subl
hlt
in
pop
mov
adc
mov
push
pop
ficomps
jmp
dec
pop
aam
sub
inc
aaa
out
push
add
arpl
out
out
roll
mov
mov
mov
shll
xor
xchg
test
inc
test
jns
or
lfs
add
pop
push
stos
inc
push
xor
js
or
and
rorb
mov
sbbb
lock
push
ror
lcall
push
push
xor
std
fcmovnbe
out
lock
mov
jns
movsl
push
jecxz
xchg
pushf
mov
movsb
mov
xlat
sbb
jmp
sbb
lds
cmpsl
out
cmp
bound
icebp
adc
inc
in
jo
test
pop
repz
mov
ret
fbld
fbld
arpl
jae
push
sbbb
aaa
pop
jnp
cmc
lds
cwtl
lcall
jecxz
fdivrs
aaa
mov
and
jle
repnz
test
pop
mov
lahf
test
movsl
test
inc
pop
dec
mov
bound
inc
push
fs
add
push
out
pushf
xchg
add
sub
loopne
mov
shrb
loopne
sti
mov
test
xchg
pop
test
cmpsb
jbe
mov
sbb
or
aaa
cmp
mov
incl
jne
fidivrs
notb
jp
inc
lcall
cmp
mov
movsb
lock
adc
dec
pop
pop
jge
in
out
lret
fcoml
xor
pop
xor
xor
inc
push
cmp
inc
sub
mov
pop
inc
in
stc
fsubr
ljmp
xor
nop
test
dec
mov
mov
out
cmp
loopne
popf
loope
sarl
mov
fadds
ret
dec
mov
insb
xlat
adc
test
push
push
cmpsl
push
add
sbb
push
mov
xchg
je
repz
pop
cmp
fxch
pop
fnsave
sub
mul
mov
push
insl
push
fsubr
dec
ds
aas
adc
add
notl
sbb
test
in
pop
jno
fwait
shll
sub
stc
inc
xchg
mov
dec
mov
jae
rclb
subb
and
shl
pop
fldt
cltd
rolb
lcall
out
bound
mov
sub
sub
sbb
pop
and
mov
outsl
mov
enter
scas
fs
mov
cli
and
jno
and
frstor
inc
mov
mov
pop
cmc
loop
jne
orl
and
cld
outsb
mov
shlb
pushf
adc
inc
cmp
test
lret
add
mov
jmp
mov
mov
inc
loope
ret
xrelease
jno
and
negl
int
push
cmp
pop
mov
enter
or
pusha
sbb
std
jns
ljmp
xlat
jnp
xchg
or
jecxz
sub
fnstcw
sub
jmp
std
into
rcr
mov
add
mov
push
mov
xchg
incl
mov
jbe
mov
hlt
dec
adc
lods
cli
mov
push
inc
test
lods
fsub
fs
sub
leave
cmp
xor
movsb
sbb
sub
cmp
hlt
scas
mov
mov
fistpll
insb
dec
sbb
fstpt
aas
sbb
dec
lea
lods
sbb
std
cmp
lods
xor
pop
nop
push
sti
stos
mov
cwtl
loopne
and
scas
stc
jns
ljmp
scas
das
lret
lods
clc
out
jo
mov
cmp
fwait
sub
cmpsl
call
sarb
dec
inc
call
outsb
aaa
gs
cmp
push
dec
pushf
movsl
add
imul
int3
add
fistpll
rorb
adc
push
cli
or
int
stc
sbb
jmp
push
lea
inc
inc
sahf
mov
insb
clc
adc
push
ja
ret
push
push
repz
aam
jo
scas
iret
jle
jae
and
or
mov
enter
mov
movsl
int3
pop
jne
push
or
dec
out
xchg
sbb
push
loope
insb
fildl
pop
push
jne
movsl
cwtl
notb
inc
mov
or
aaa
push
mov
or
jg
or
and
cld
mov
arpl
mov
pop
add
dec
rclb
testl
mov
nop
or
ret
push
in
hlt
push
dec
jp
push
push
in
out
test
jecxz
ss
jecxz
loop
pop
lock
shr
mov
pop
out
jl
ss
lret
jne
xor
adc
mov
mov
add
push
loop
and
nop
addr16
insl
inc
sbb
cs
ja
hlt
in
cmc
repnz
mov
pop
add
adc
mov
jecxz
lods
popa
jp
call
adc
mov
xor
adc
push
push
scas
mov
stos
stos
push
mov
push
cli
mov
inc
mov
lcall
mov
or
cmp
pusha
push
pop
sbb
and
daa
outsl
or
out
mov
xchg
add
sbb
out
add
cmp
call
je
cmpsl
adc
std
mov
mov
rol
sub
mov
scas
inc
sub
jecxz
not
es
mov
sub
pop
pop
fwait
mov
outsb
enter
pop
pop
outsl
mov
cli
adc
push
xor
xchg
out
cmp
arpl
fiaddl
shll
cmp
add
imul
mov
inc
mov
adc
add
jge
inc
fidivrs
pusha
and
sti
mov
aas
push
sbb
ds
dec
hlt
or
pusha
testb
iret
call
lods
insl
or
int3
aaa
mov
cmp
inc
rep
mov
jecxz
mov
and
aam
adcl
mov
scas
sbb
mov
cmpsl
mov
lods
xchg
jl
sub
jnp
les
or
xchg
jge
adc
push
lock
push
xchg
lret
and
mov
jmp
dec
pop
lret
lea
inc
sbb
inc
jmp
push
imul
jle
sub
and
cmpsb
inc
mov
cmpsl
fwait
mov
fnstcw
inc
bound
cs
out
fcmove
and
test
hlt
sbb
out
clc
or
cmp
insb
and
testl
fstpl
negb
in
jbe
pop
push
leave
imul
sarl
sbb
mov
arpl
adc
mov
jmp
shl
jno
push
dec
jmp
stos
add
sub
mov
lods
cmp
fsubrs
sbbb
cld
fstl
pop
lahf
jnp
arpl
dec
push
push
lods
jl
cmp
sub
push
jbe
enter
int3
nop
cs
jmp
adc
mov
jne
pushf
mov
pop
fists
xchg
cmpsb
arpl
xchg
iret
negl
test
cmpsl
mov
cmp
pop
popf
into
test
xchg
cli
xlat
popf
pop
ds
push
jnp
inc
cs
js
addr16
stc
test
cmp
jge
xor
sub
inc
mov
jns
xor
mov
mov
sbbb
insl
pop
fnstenv
test
pop
loop
xchg
lret
fnsave
je
cltd
xchg
mov
test
cmp
and
mov
mov
inc
push
mov
fisubrs
stos
xor
pop
test
or
xchg
cmp
and
add
popa
lret
push
jl
in
adc
mov
inc
pop
cltd
cmp
scas
aaa
jb
add
out
int
in
lods
fldt
bsr
jmp
ja
dec
sbb
ljmp
push
add
int
scas
lret
xchg
jge
push
inc
mov
imul
mov
sub
test
mov
imul
fmuls
inc
mov
pop
sbb
adc
test
loop
call
fdivrl
mov
sbb
or
js
dec
pop
mov
out
dec
outsl
sbb
lahf
test
inc
cli
ja
and
cwtl
cli
mov
mov
sub
jb
jnp
xchg
sub
iret
xlat
cli
or
test
clc
ljmp
out
sti
mov
adc
fstpt
push
test
subb
push
testb
int
sub
loope
idiv
adc
fisttpl
loopne
jb
or
cmp
xor
sub
imul
inc
pop
sbb
pop
cs
push
xor
push
pushf
mov
jp
add
mov
enter
add
mov
icebp
test
stc
add
shlb
aaa
and
lock
jg
lret
sti
mov
sarl
or
pop
aad
pop
xor
dec
xchg
or
lcall
push
mov
and
dec
xchg
int
clc
scas
je
push
pop
scas
sub
lds
mov
xor
leave
jno
push
jmp
cmp
lret
in
ret
filds
sbb
mov
iret
mov
cmc
cmp
popf
sub
out
sti
pop
xchg
outsb
inc
jns
lea
mov
sub
popl
jno
shl
mov
push
clc
movb
roll
shrb
cmp
repnz
jb
outsl
mov
outsb
js
mov
idivb
fsubl
ds
stos
call
cmpsl
add
ljmp
xchg
movsb
sti
aas
cwtl
sbb
bound
pop
mov
adc
mov
sahf
mov
aas
add
sub
cmpsb
mov
push
mov
mov
movups
lcall
cmp
push
fldcw
mov
inc
in
callw
sbb
sbb
dec
pop
cs
push
stc
and
or
sbb
shll
or
adc
mov
cltd
adcl
xchg
fs
fisttpll
lds
test
in
repz
cmp
pop
clc
sti
aam
mov
push
xor
mov
nop
in
dec
adc
dec
int
push
xchg
scas
cld
jae
adc
cmp
and
xor
jnp
jnp
mov
cmc
int
fdivrl
ja
dec
mov
push
inc
sub
mov
popa
mov
lea
movsb
mov
mov
and
enter
test
push
mov
dec
xor
shr
fldt
fwait
clc
pop
out
sub
test
lock
out
sub
cli
lcall
out
hlt
or
jl
enter
push
or
adc
movsb
pop
and
fs
leave
std
mov
pop
popa
ja
movd
in
aaa
sub
bsf
jne
adc
pusha
inc
je
rcr
daa
and
and
cli
shll
cmc
jg
inc
add
int
xchg
fwait
movsl
and
mov
jae
in
int3
cmp
mov
sub
fwait
cmpsb
push
sbb
cbtw
push
xor
inc
in
mov
mov
es
je
and
jns
jo
sbb
push
cs
aad
hlt
inc
cmp
jb
das
mov
and
shrb
mov
push
cmp
push
adc
outsb
push
xchg
sbb
add
fildll
fwait
or
inc
xchg
in
mov
mov
int
pop
fstpt
mov
insl
sub
loope
jg
cli
loope
dec
jbe
push
or
dec
jae
cmp
popf
movsl
jp
jb
cmpl
and
mov
les
pusha
adc
and
mov
int
cmp
lret
stc
dec
cs
mov
mov
xchg
sarb
mov
test
mov
cmp
cs
sti
popa
cmp
add
pop
xchg
add
xor
test
pop
lock
adc
scas
mov
sbb
sub
sbb
arpl
add
xor
fs
push
fildll
dec
push
pop
fsubrs
mov
std
xor
mov
and
mov
or
cli
dec
jns
in
or
rcrl
mov
sti
outsb
icebp
fwait
and
call
out
push
es
in
adc
mov
sbb
push
daa
sbbb
loopne
cmp
and
scas
aam
jo
or
rcrb
or
dec
stos
das
test
push
lret
or
lods
push
nop
and
cmp
pop
push
sti
adc
aad
adc
dec
or
cwtl
mov
jge
lock
jecxz
inc
pop
idivl
jmp
sub
lea
inc
lret
roll
out
dec
push
cmp
cli
sbb
add
call
test
loop
aad
xchg
loop
inc
sub
leave
mov
fsubs
dec
in
fld
je
ljmp
testb
lcall
pop
mov
fcoml
mov
fs
imul
sbb
jb
lahf
int3
mov
jecxz
mov
xchg
fcoms
faddl
mov
hlt
sub
xchg
into
scas
cmp
js
fcomip
jmp
inc
jne
dec
mov
push
adc
ja
jb
clc
mov
fwait
add
data16
dec
dec
iret
or
jmp
pop
fs
push
mov
scas
fistl
xor
fs
sbb
sbb
cmc
fstpt
or
dec
rcll
in
aas
sub
es
or
cmp
stos
mov
in
fwait
cwtl
rep
test
sub
jno
test
bound
clc
leave
inc
mov
mov
mov
sub
mov
loop
in
lcall
test
sbb
call
xor
std
jmp
lods
add
lahf
ret
sub
loop
jns
and
repnz
movb
das
inc
push
add
mov
ficoml
push
mov
rcrb
sub
xchg
cmp
aaa
pop
sub
notb
lods
bound
ljmp
cmp
mov
fildll
sub
loope
mov
sub
ss
in
loope
out
jnp
jg
or
xbegin
cs
mov
mov
js
inc
js
sub
out
mov
shr
icebp
pop
out
inc
je
std
fsubl
dec
insb
inc
cmp
adc
jae
xor
or
mov
in
dec
push
adc
and
lcall
sbb
push
sub
out
mov
inc
mov
or
inc
cs
pop
daa
dec
sub
insl
hlt
jno
or
mov
loope
ss
lods
push
mov
sub
je
mov
or
ljmp
rorb
in
clc
push
add
mov
mov
adcb
int
test
xchg
inc
pop
lock
loopne
movsb
js
xor
std
xor
jmp
stos
xor
pop
cmp
mov
cs
and
jae
and
fiadds
out
cmp
xor
push
out
add
ficoms
cmp
xlat
popa
insl
lahf
pushf
mov
iret
or
add
mov
mov
stc
pop
std
in
movsl
xor
outsl
leave
adc
sbb
into
pushw
int3
pop
pop
jmp
sbb
fldenv
jge
int3
mov
push
in
mov
pop
adc
adc
stos
pop
lods
add
mov
mov
into
jmp
sub
mov
mov
in
ja
fcoml
mov
mov
subl
mov
or
add
leave
iret
adc
ret
aad
jb
movsb
mov
fldl2e
or
adcl
mov
ret
dec
fcomip
jle
shlb
test
gs
into
push
sub
inc
pop
iret
mov
insl
loopne
cwtl
loopne
cmp
sbb
push
adc
jge
loope
xor
out
lret
leave
cmp
push
lods
rcrb
sbb
iret
dec
dec
mov
fucom
and
test
push
jp
mov
pop
xchg
in
sub
and
lcall
mov
mov
dec
repnz
cmp
jmp
fwait
mov
add
xor
add
sbb
dec
lret
lret
xchg
and
push
add
je
pop
push
push
cli
stc
in
push
and
inc
or
aam
fldenv
dec
xchg
xorb
mov
push
icebp
movsl
mov
add
push
sub
sbb
cmp
pushf
shlb
loopne
dec
addr16
insb
mov
popf
adc
test
outsb
fwait
arpl
loope
jp
add
fwait
dec
enter
clc
enter
das
aaa
roll
popa
push
xchg
push
pop
cmc
sub
jmp
shrb
xor
pop
push
jl
cltd
push
xor
and
shll
fldenv
pop
pop
inc
leave
push
fwait
insb
push
loop
fdivrs
dec
fs
lahf
xchg
jnp
xchg
je
jnp
ljmp
and
push
outsb
push
jl
inc
mov
add
stos
nop
mov
fcmovnb
jo
nop
or
adc
pop
push
jl
fs
inc
or
sub
fwait
mov
and
movsb
push
je
and
mov
mov
xor
cli
xor
aas
and
dec
cmp
orl
stos
dec
jmp
cmp
pop
arpl
outsb
pop
cmp
and
data16
test
mov
or
call
fstpl
filds
cmp
inc
jae
insl
pop
ret
les
cmp
push
xchg
imul
ljmp
aas
clc
sub
addl
pop
in
and
xor
ret
dec
mov
fldcw
shlb
test
sub
mov
mov
daa
sbb
lods
xchg
testb
cmp
imul
xor
shlb
or
push
jbe
out
out
pop
jne
pop
ficompl
dec
add
xor
cmpsb
lods
jp
mov
add
popf
fnsave
imul
jg
das
cmp
mov
ficoml
xchg
je
cmc
xor
xchg
xor
ror
js
jl
leave
ficompl
xor
ja
cmp
clc
xchg
aas
mov
mov
add
cmc
mov
in
or
gs
mov
mov
jge
pop
testb
mov
dec
jns
incl
fildll
subb
xchg
ret
pop
mov
nop
rcrl
dec
mov
mov
adc
inc
push
cmp
aam
xor
mov
int3
repnz
adc
add
pushl
and
ss
sub
mov
cpuid
dec
cltd
sbbb
ret
dec
jne
pop
je
mov
cltd
jecxz
js
mov
xor
in
sbb
inc
addr16
imul
inc
sub
pop
inc
rorb
aad
push
push
fdivp
add
or
pop
ja
sbb
or
cmp
cli
xchg
jb
mov
jo
out
fcmovnu
adc
rcr
fsubs
mov
jns
xchg
pop
enter
mov
ja
out
push
sti
sbb
cmp
jecxz
mov
ret
aas
hlt
bound
adcb
push
xchg
fildll
ja
divb
clc
sub
mov
hlt
pop
sbbl
stos
inc
jnp
addl
int
pusha
cltd
sbb
fnsave
adc
mov
bswap
xor
rolb
insl
les
xchg
mov
inc
data16
cld
jecxz
add
mov
add
pop
test
shr
adc
adc
stos
cmp
enter
xor
cmp
jbe
inc
out
or
adcl
pusha
xor
ja
mov
adc
or
cmc
in
xchg
dec
jp
push
jbe
call
jae
mov
fldcw
xchg
fisubs
fistps
std
push
decb
ret
xor
scas
sub
mov
adcl
pop
mov
pushf
decb
ljmp
add
mov
shrb
pop
ja
push
iret
mov
stc
mov
sti
pusha
and
lea
push
xchg
inc
mov
lcall
mov
iret
adc
or
sub
jno
push
cmp
out
movsb
inc
jbe
mov
gs
out
push
out
xchg
aas
in
ja
mov
fwait
testb
push
mov
adc
iret
aaa
sbb
xchg
push
mov
push
repnz
test
cld
cld
cmc
sbb
mov
fisttpl
sbb
enter
fcmovbe
inc
xchg
fidivrl
or
push
imul
int
adc
and
stos
test
stos
mov
jge
inc
fs
sub
add
mov
pop
sub
push
push
hlt
cltd
cmpsw
mov
xchg
xor
lods
popf
mov
enter
mov
mov
mov
push
xchg
mov
arpl
jge
jle
pop
adc
xchg
ja
mov
and
lods
push
xor
push
outsl
dec
cmpsl
outsb
push
int3
xor
cli
cmpsb
mov
mov
pop
dec
pop
clc
inc
int3
enter
test
lret
pop
jo
mov
movsl
dec
scas
loopne
test
pop
jmp
outsb
int3
imul
inc
ret
mov
je
dec
lods
out
testl
pop
push
aam
jle
cmp
pop
push
data16
movsl
and
fnstsw
addr16
std
pop
pop
mov
pop
aam
sbb
jbe
addl
pop
mov
aaa
xor
cmpsl
push
mov
add
movl
cmp
mov
or
sub
fists
addr16
call
and
cmp
div
pop
icebp
and
add
int
fisubs
mov
cs
es
cld
or
pop
loopne
mov
stos
loop,pn
dec
push
mov
dec
fistpll
xchg
sahf
push
mov
and
popa
fnstenv
or
add
lret
inc
jnp
xchg
adc
addl
ljmp
mov
xchg
dec
pop
data16
jl
xchg
js
aad
sub
shll
pop
in
sub
rep
add
mov
cld
je
pop
mov
pop
cmpsb
inc
lods
push
mov
je
aaa
cmpsl
and
clc
xchg
filds
pop
neg
lcall
cwtl
sbb
inc
ror
mov
push
or
pushf
push
xchg
lret
jge
pop
fistps
mov
out
in
pop
cmpsb
jmp
xlat
pop
test
sbbl
fnstenv
loopne
add
arpl
aas
loop
cmp
push
scas
aam
inc
xchg
pusha
and
xor
imul
in
push
jno
cmc
jnp
add
mov
mov
add
iret
call
adc
cmpsl
gs
jge
scas
dec
roll
push
leave
dec
pop
rorb
ret
push
idivb
cmpsb
push
add
repz
mov
dec
lods
dec
and
aaa
add
inc
jo
mov
sbb
lods
xacquire
imul
movsl
jl
mov
push
mov
and
stos
ds
jge
sbb
mov
out
add
and
bound
inc
jge
jnp
cs
int3
push
mov
or
add
or
pop
mov
jae
mov
inc
mov
adc
mov
pushf
rclb
in
xor
dec
pop
mov
jg
push
aaa
stc
into
mov
lock
sti
fnstenv
scas
and
in
lods
in
jne
push
insl
mov
cmp
sbb
fsin
int
cmpsb
xor
or
cs
jmp
pop
jl
xor
push
dec
jg
dec
and
jg
outsb
les
mov
mov
dec
or
popf
stos
xlat
xor
ljmp
dec
cmp
lds
inc
jge
lret
jle
lret
adc
pushf
mov
adc
lret
xor
xor
pushf
jo
subb
cmp
dec
push
xchg
ret
addr16
push
icebp
test
daa
sbb
mov
or
outsl
enter
stos
repz
call
or
in
jmp
sti
mov
cwtl
cwtl
sbb
imul
and
popa
paddw
jb
cmp
pop
lcall
pop
lcall
jp
lcall
mov
push
mov
sub
sbb
sub
inc
in
adc
xchg
jl
pusha
jno
mov
push
dec
mov
push
and
cmp
test
xchg
push
loope
inc
mov
outsb
addl
and
aam
xchg
mov
sbbb
jg
pop
jb
push
aaa
cld
pop
arpl
mov
xchg
or
icebp
add
mov
mov
mov
xor
sbb
push
pushf
mov
lret
mov
rorl
lretw
mov
xor
jbe
imul
test
jp
pop
mov
test
xor
mov
push
aaa
jge
push
fwait
sbb
jle
mov
jne
fs
in
cli
jmp
lret
lahf
sbb
push
adc
jno
pushf
inc
pop
insb
repnz
testb
push
rcrl
jbe
mov
in
jle
dec
push
cmp
pushf
mov
cmpsb
out
pop
bnd
mull
jbe
ja
andl
mov
sbb
lds
shlb
jno
mov
lret
dec
sti
scas
sub
pop
pop
and
add
inc
scas
test
fistpl
xor
sub
jl
adc
mov
cld
lahf
jae
pop
mov
stc
pushl
jecxz
incb
xor
les
mov
popa
sbb
stc
jne
push
push
adc
in
mov
sbb
sbb
aad
movsb
ret
out
cmpsl
mov
mov
movsb
adc
jns
lcall
mov
xor
test
lods
rcrb
movsb
xor
cs
adc
mov
pop
adc
mov
in
dec
roll
movsl
or
push
jle
flds
mov
imul
or
mov
push
cmp
add
mov
pop
xor
or
xlat
cmpsb
cmp
xor
inc
jl
or
fwait
pop
aas
pop
push
enter
or
mov
push
lods
leave
je
lock
pop
mov
std
jnp
add
imul
inc
jne
loope
les
sbb
loop
stc
cmp
jno
pop
repz
pop
pusha
jge
push
jmp
mov
mov
xchg
in
addr16
pushf
adc
movsb
arpl
fistpl
lret
mov
sub
sub
into
imul
arpl
outsl
fimull
or
pop
adc
ret
or
scas
adc
jbe
test
enter
fiaddl
scas
fistpll
or
inc
cmp
and
mov
xchg
in
sub
add
ror
add
adc
cmpsb
outsl
add
xchg
cmpsb
pop
test
lods
movsb
test
lock
sbbl
adcb
imul
mov
jns
frstor
mov
xchg
push
stc
xchg
push
in
jbe
imul
adc
jns
pop
test
sbb
lret
in
and
fistpll
fs
and
pop
mov
cmp
mov
loopne
xchg
pop
fsts
testb
dec
imul
xor
mov
xchg
sti
and
aaa
int
sbb
push
and
adc
cmp
cmp
test
fnstcw
xchg
cmpsb
test
add
jb
cld
sahf
cltd
xchg
inc
mov
pop
mov
repnz
dec
xor
pushf
fisttpll
sbb
adc
mov
mov
fisubl
push
or
jae
dec
dec
fstl
push
mov
adc
enter
add
clc
hlt
cmpsb
pop
adc
adc
mov
js
jb
jmp
mov
iret
jnp
pop
lcall
adc
data16
int
push
loopne
negb
sbb
add
enter
test
dec
add
sub
jp
xlat
dec
pop
mov
imul
jmp
sbb
dec
cmp
cs
arpl
icebp
sti
xchg
adc
xor
mov
jmp
fildll
arpl
pop
insb
pusha
lods
mov
jbe
flds
das
xchg
insb
sti
es
dec
loopne
test
outsl
cmp
insl
imulb
imul
call
jns
pop
mov
inc
adcl
pop
mov
lahf
lods
mov
js
xchg
roll
ljmp
addb
les
into
xchg
cltd
lret
or
ljmp
repz
add
iret
aas
stos
sub
pop
ds
push
jle
sub
ds
jo
mov
pop
add
inc
dec
insb
divb
bound
pop
fucomp
mov
idivb
xchg
dec
lds
mov
cmpl
gs
mov
mov
xchg
fwait
cmp
jno
mov
mov
cmp
jmp
stc
inc
lds
jbe
inc
aas
dec
adc
lea
int3
jbe
icebp
add
jge
outsl
push
outsb
or
cmp
add
shrl
es
mov
sub
bnd
mov
sbb
enter
pop
sbb
sbb
pop
enter
dec
push
sub
cmp
aas
xor
pop
push
cs
mov
add
ss
and
push
push
lods
inc
and
imul
dec
xor
xchg
subl
xor
lret
popa
adc
lock
sbb
jge
jecxz
or
cmp
lock
push
repz
into
xchg
push
mov
push
scas
inc
cmpsl
mov
pop
and
hlt
dec
int
jle
xor
jecxz
adc
jb
adc
data16
inc
push
and
mov
insb
leave
das
leave
mov
imul
test
mov
mov
cwtl
pop
push
pop
cs
cmp
xchg
cmp
scas
ret
scas
enter
int
mov
dec
pop
mov
push
clc
es
mov
adc
jl
jno
ds
addl
ret
insl
mov
test
sti
cld
lds
inc
mov
lods
ret
cmp
mov
into
testl
and
sar
stos
push
xchg
sbb
mov
imul
cmpsl
enter
xchg
mov
jo
stos
mov
push
push
shlb
aam
imul
xchg
les
ja
test
xchg
jo
push
lods
jb
pushl
in
xlat
sub
pushf
xor
push
dec
jae
mov
xchg
xor
dec
inc
cmpsb
cmp
ficompl
cmp
pusha
decl
and
mov
and
int
mov
mov
push
xchg
jl
and
fistl
or
inc
outsl
inc
jg
inc
pop
add
xchg
mov
inc
mov
jae
push
mov
xchg
rcl
dec
add
or
bound
sbb
inc
sub
or
rcll
jg
dec
xchg
lds
outsl
hlt
mov
stos
ss
nop
push
cmp
test
pop
jo
add
cmpsb
test
adc
rcrb
filds
outsl
cmp
push
mov
pop
cli
aaa
mov
sub
adc
cwtl
mov
ljmp
or
adc
nop
mov
cmpsb
xchg
mov
test
xor
daa
sbbl
test
imul
jbe
enter
mov
pop
add
adc
outsb
mov
ja
fbstp
out
push
cltd
mov
out
inc
xchg
push
data16
leave
fcmovne
xchg
lcall
cld
punpckldq
lods
mov
push
or
pop
sub
std
fdivr
in
sbbl
imul
mov
lock
cmpsb
cmc
jns
clc
mov
fmulp
cmp
fnstcw
in
nop
mov
mov
cmc
and
aam
jl
mov
inc
sbb
lret
shr
shlb
mov
cmp
add
leave
xchg
aad
adc
jnp
or
xchg
or
clc
out
xor
push
push
shll
mov
cs
fld1
mov
dec
lods
out
jb
mov
repnz
in
dec
xchg
ljmp
push
cmpsb
ficoms
add
pop
je
sbb
add
scas
pop
lcall
ss
sbb
insb
mov
stc
andl
push
int3
inc
aaa
xor
cli
lock
push
mov
push
lret
inc
and
int
mov
loopne
mov
push
adc
shr
jmp
gs
inc
inc
pushf
pop
rcrl
pop
mov
outsb
sbb
push
or
std
xchg
fists
adc
pusha
lret
or
lods
xchg
sub
fstps
mov
arpl
ret
or
push
lret
hlt
cltd
or
daa
sahf
imul
xchg
dec
andb
inc
lock
pushf
xchg
bound
les
xor
int3
insl
loopne
in
xorl
lcall
mov
cmp
and
inc
adc
adc
adcl
dec
test
inc
pop
pop
pop
js
sbb
add
inc
push
pop
ja
and
rol
repz
out
pop
pop
add
jae
cwtl
and
into
and
jl
aad
pop
xchg
outsl
std
ret
addr16
insl
adc
in
adc
sub
add
sub
repnz
mov
push
int3
shr
repz
mov
dec
add
cld
lock
add
andl
xor
mov
cmp
xor
sbb
sub
mov
push
das
sub
daa
daa
pop
xchg
jae
and
int
lret
aas
out
xchg
pop
aas
or
sahf
call
or
pop
xlat
ds
push
ss
daa
loopne
sahf
icebp
aad
dec
jmp
or
dec
cli
and
xchg
jp
xor
sahf
je
push
mov
sub
cmp
mov
shlb
hlt
ret
mulb
xlat
test
outsl
stc
js
push
icebp
lock
and
fwait
stos
jno
lock
mov
xchg
sbb
dec
dec
rcr
into
in
add
in
scas
test
inc
ja
outsb
loop
adc
inc
adcl
jecxz
mov
and
inc
mov
lret
aaa
add
xchg
cmpsl
add
test
xchg
mov
mov
mov
adc
clc
scas
inc
daa
jmp
push
xchg
out
fcmovne
lahf
test
pop
adcb
fisubrl
mov
in
fisttpll
mov
scas
mov
jmp
sub
sbb
push
push
in
imul
dec
xchg
jns
xchg
shr
jl
imul
pop
stos
cmp
sbb
sub
mov
and
ret
outsb
les
sbb
sbb
inc
xor
lea
add
jnp
mov
sbb
cltd
jnp
pop
xor
jne
and
and
dec
push
adc
adc
cmc
sub
adc
pop
lds
push
pusha
xor
push
int3
cmpb
in
mov
sbb
cld
je
sub
orb
sub
idiv
jle
in
mov
popa
push
cmp
cmp
jp
popa
fxtract
and
push
out
sbb
mov
aad
mov
adc
in
lahf
pop
test
fldenv
xchg
fdivrs
test
shll
mov
jo
sahf
add
cmpsl
dec
sub
fs
shrb
jg
ret
push
xor
or
in
dec
jo
jne
lcall
sbb
adc
and
inc
cmpsl
pop
stc
sub
stos
lods
leave
and
jo
inc
push
cwtl
movsb
lods
jae
jmp
in
es
mov
aad
mov
into
xchg
std
jae
mov
mov
cmc
ror
shlb
and
sub
fimull
aaa
loop
jecxz
or
mov
fildl
xchg
mov
fistps
jle
jo
or
lods
roll
ret
sti
xor
pop
out
add
leave
ja
push
pushf
mov
into
add
push
out
sarb
cwtl
mov
jp
pusha
lods
jno
xchg
jecxz
or
push
loope
sbb
jecxz
js,pt
sub
pop
jl
mov
loopne
add
xor
ljmp
xchg
out
and
test
xor
mov
add
in
aam
hlt
repz
inc
movsl
pop
dec
fimuls
insb
add
push
ret
arpl
xchg
dec
fucomp
test
push
pusha
es
lds
ds
inc
dec
adc
mov
pop
arpl
sub
outsb
or
inc
cmc
in
or
das
xor
push
ljmp
jo
lods
and
loope
xor
pushf
push
repz
aad
add
xor
inc
sub
das
inc
sar
jb
sti
push
arpl
inc
icebp
mov
sub
sub
hlt
insl
call
and
sub
cmpsl
sub
and
scas
cmpsl
mov
xchg
pop
adc
sbb
cld
mov
sub
cmpb
dec
lahf
jne
fldt
mov
orb
push
push
sbb
push
mov
jbe
mov
shlb
xor
aaa
pop
leave
and
rorl
xchg
ret
dec
aad
iret
push
push
pop
lods
add
add
jne
pop
sbb
imul
icebp
push
mov
xchg
das
into
pusha
je
out
stos
out
les
xchg
insb
cmp
jns
lods
dec
in
push
lret
xor
pop
mov
int3
inc
adcl
ret
subb
mov
insb
ficoms
push
or
decl
iret
and
mov
jp
xchg
add
ss
mov
pusha
adc
lahf
int3
mov
in
lcall
xchg
bound
insb
dec
mov
sti
push
rcr
cmp
push
jns
ljmp
push
mov
dec
call
jae
mov
leave
stc
and
xor
adc
daa
movsb
sarl
fdivrl
pop
pop
enter
add
inc
xlat
jbe
mov
lock
and
fcmovu
cmpb
sbb
fs
stos
lds
test
lahf
hlt
xchg
cmp
loop
bnd
and
push
adcb
test
mov
rcll
cmp
xchg
enter
aam
sub
adc
cli
xchg
push
lods
mov
loop
and
lret
xchg
ja
and
sub
lret
in
jno
in
nop
test
jno
stc
mov
leave
movsb
jo
sub
dec
ljmp
xchg
inc
aam
xchg
std
adc
adc
and
pop
lods
ficompl
cwtl
nop
sbb
roll
sub
lds
repz
test
sti
movsl
mov
xchg
leave
arpl
test
lcall
sti
and
lea
dec
movsb
cwtl
sub
sub
xchg
pop
pop
inc
imul
xor
insb
xchg
pop
ds
negl
mov
jmp
push
mov
xchg
addr16
jp
and
cld
mov
adcl
fsub
xchg
inc
mov
aas
fdivr
negb
aaa
int
sti
push
pop
loope
or
movsl
sbb
xchg
addl
lods
popa
xchg
cmpsb
ja
xor
push
xchg
sub
out
mov
mov
dec
add
lret
addr16
je
mov
and
das
cmp
sub
mov
fistps
mov
jl
xchg
sub
insl
or
out
fisubs
jge
lret
push
or
aas
arpl
adc
int3
test
and
andl
repnz
jmp
push
xchg
jns
push
fimuls
xor
dec
push
out
push
dec
hlt
cwtl
dec
cli
jb
add
mov
imul
jle
lret
loope
test
sti
adc
outsb
mov
sub
cli
mov
cs
sbb
jp
shrl
test
jae
aad
test
repz
jp
sub
xchg
popa
push
cmc
mov
aaa
int3
xor
push
adc
in
push
lods
mov
sbb
inc
ret
cmc
loop
xor
fadd
sub
outsb
daa
and
int3
mov
jb
mov
int
pop
and
outsb
adc
xor
iret
rorl
push
sti
shlb
in
mov
cltd
or
xchg
mov
lcall
inc
push
sub
out
out
jl
in
cmc
push
jae
mov
fnstsw
mov
gs
in
inc
sbb
mov
jbe
dec
jge
dec
xchg
aas
daa
mov
inc
mov
jecxz
hlt
fistpll
bound
mov
insl
cmc
imul
add
cmc
sub
lahf
add
fnstcw
jbe
lcall
lds
add
cmp
sbb
inc
mov
push
cli
jae
push
rclb
inc
add
push
out
fdivrl
xlat
jne
add
jne
adcb
cmp
insl
rcll
xor
ret
shrb
push
xchg
enter
fidivs
or
cmp
mov
test
cmp
in
jmp
sub
pop
sub
cmp
sub
test
pop
push
xor
jmp
add
rclb
pop
adc
xchg
mov
cmpsl
xchg
lods
add
popf
mov
lret
aas
mov
stos
test
fmuls
int3
mov
hlt
or
sar
adc
lods
fildl
imul
ret
pop
xor
jbe
ljmp
clc
or
or
pop
cmp
and
jmp
mov
rorl
add
xchg
cmp
push
roll
div
cmp
imul
es
imul
test
cwtl
cmp
mov
add
daa
sbb
outsb
pusha
push
xchg
mov
inc
lods
sbb
pop
fstpl
adc
lret
and
adc
cmpsb
add
int
jno
adc
push
call
adc
subl
mov
sub
xor
mov
sbb
xchg
xchg
clc
insl
dec
push
push
out
repz
popa
jg
mov
ret
and
push
cwtl
or
daa
xchg
flds
repz
lcall
adc
jae
cmc
iret
daa
sbb
repnz
inc
sbb
lahf
movsl
push
out
pop
push
in
inc
aam
xlat
sub
cmp
stc
cltd
xchg
pop
and
pop
jns
shlb
pop
add
dec
xchg
fwait
adc
or
in
pop
imul
imul
cmpsl
gs
adcl
mov
iret
movl
adc
push
adc
dec
inc
mov
jno
adc
test
mov
test
mov
dec
add
xor
stc
pop
lea
cli
enter
packssdw
ljmp
bound
and
push
and
xor
sub
addr16
enter
add
push
clc
inc
dec
ljmp
repnz
push
and
push
xchg
inc
adc
insl
add
loop
rolb
jo
shl
and
inc
sub
dec
in
jp
jge
lock
dec
movsb
add
mov
and
or
xchg
jb
hlt
push
mov
stos
cmp
xchg
notb
cmp
cltd
dec
sti
inc
pusha
outsl
or
repnz
xchg
je
sub
mov
or
rclb
loope
sbb
movsl
add
dec
mov
imul
xchg
pop
nopl
inc
cltd
sub
fisttpll
scas
pop
ja
int3
imul
dec
push
cmp
pop
shrl
ljmp
test
or
pop
cmp
std
sbb
dec
xor
push
stos
outsl
loope
in
mov
data16
sbb
xchg
nop
ffree
xor
fldcw
push
push
cmp
test
jmp
mov
push
repz
add
stos
pop
shlb
hlt
in
adc
dec
or
jns
les
cmp
test
mov
dec
fimull
movsb
adc
sahf
lods
or
mov
mov
push
add
mov
aaa
push
icebp
and
loopne
cmp
xor
out
push
aam
test
ret
pop
insl
dec
lods
push
call
sbbb
enter
hlt
push
lahf
shll
popa
stos
adc
sbb
fmuls
add
adc
into
popf
lcall
je
pop
mov
xchg
fcoms
repnz
fnstenv
fs
jg
dec
mov
ss
sub
sbb
insl
fadd
inc
add
jle
rol
lods
mov
xchg
add
in
out
xor
addr16
cmpsl
ds
outsb
testl
int3
cmp
and
add
jo
lods
pop
inc
int3
enter
adcb
aaa
inc
aad
lods
dec
add
out
or
mov
in
ja
or
fldl
sbb
loopne
clc
loopne
leave
rorl
hlt
inc
bound
or
pop
bound
cmpsb
xchg
dec
loop
mov
xlat
daa
outsl
insl
jnp
clc
aad
jg
cmp
xchg
clc
shll
mov
dec
sub
add
inc
cmp
lock
push
mov
dec
sub
imul
sub
add
dec
imul
adc
in
inc
xchg
mov
jl
lret
out
jnp
popa
sbb
mov
idivl
mov
inc
pusha
or
jno
pop
je
pop
int
add
mov
sti
aam
cmpsb
ljmp
dec
stc
stos
jno
mov
sarb
mov
cs
mov
and
in
xorl
mov
mov
xchg
ss
fisubrl
mov
cmpl
fwait
lahf
mov
xor
cld
or
lds
addr16
cmp
and
or
cs
cmpb
adc
xchg
ret
shrl
push
adc
xor
sahf
ret
inc
push
ja
rcl
push
in
mov
lds
xorb
pop
shll
in
cmpsl
ret
pop
inc
test
movsl
jnp
mov
stos
sbb
push
jo
sbb
cmp
xor
mov
and
jle
inc
bnd
ret
inc
aam
loop
and
push
nop
outsl
gs
inc
fimuls
mov
adc
xchg
push
xor
dec
cld
or
imul
jno
mov
mov
sub
push
pop
pushf
xor
js
cmpsb
sub
pop
dec
xor
dec
jecxz
add
and
adc
sbb
int3
subb
add
sti
xchg
xchg
xor
das
loope
call
lds
xor
pusha
mov
adc
dec
mov
lods
out
mov
mov
cs
cmp
sub
aad
pop
lret
aaa
jno
in
or
or
inc
xchg
adc
push
popf
jmp
mov
pop
mov
stos
cld
xchg
adc
push
jb
lock
sbb
jbe
and
cmp
jbe
fsubl
rorb
in
lea
aaa
jge
andb
jno
xchg
mov
pop
cmpsl
call
adc
ss
push
mulb
xor
cwtl
sub
mov
roll
shlb
xor
adc
imul
and
jge
push
mov
mov
gs
push
mov
aaa
and
fisttpl
sub
sbb
sub
adc
clc
adc
and
imul
add
fldt
fs
inc
pop
jp
push
cld
pop
mov
pop
pop
adc
xchg
test
jo
fbld
aas
stos
aas
je
and
lret
mov
cmp
sbb
imul
xor
mov
mov
xor
sbb
inc
ret
iret
sbb
and
js
mov
aas
sbb
or
push
enter
shlb
cli
dec
inc
cmpb
pop
xor
add
inc
inc
adc
jl
nop
repz
cmp
test
test
lahf
insl
jne
xor
lds
cmp
iret
dec
add
add
lret
std
out
push
xchg
lret
test
xor
inc
out
jbe
lahf
mov
lret
out
mov
iret
test
xchg
add
xchg
jecxz
dec
out
js
and
mov
mov
div
icebp
divl
lock
clc
in
mov
fisttps
sbb
cmovnp
lret
data16
add
shl
shl
scas
int3
push
xlat
popf
xchg
sub
mov
push
dec
mull
addr16
jbe
das
lret
dec
jg
es
jge
pop
or
jmp
shlb
sbb
fs
inc
pop
xor
cmp
shrb
jmp
jecxz
fcmovnb
sbb
loop
testl
jbe
movsl
repnz
andl
fisubs
cmp
or
xor
mov
callw
ficoms
pop
and
and
jne
fwait
iret
add
push
fs
cmp
and
mov
pop
pop
mov
gs
jb
imul
sahf
icebp
jle
loopne
cmc
jle
push
stos
jbe
es
add
leave
cmp
cwtl
call
ss
pushf
mov
mov
adc
mull
inc
fstl
cmp
push
in
mov
inc
adc
clc
xchg
jge
push
movsb
xorl
add
jns
popf
leave
jmp
les
inc
push
mov
in
aaa
pop
cmp
int3
out
xchg
pop
mov
add
jle
add
in
and
arpl
jl,pt
pop
lock
jnp
in
lcall
cmc
xacquire
and
xchg
ret
dec
call
jmp
test
xor
loopne
push
out
dec
inc
fsts
and
jecxz
sbbl
popa
jle
loope
movsl
aad
leave
xchg
in
xchg
push
pop
or
imul
mov
pop
sub
aaa
xor
jae
mov
loopne
xor
lret
sti
iret
mov
jge
push
push
xchg
insl
or
dec
mov
mov
gs
addr16
loopne
push
dec
es
push
xor
sub
adc
push
push
push
vmovups
data16
shrl
pop
mull
fimuls
pop
inc
jl
push
dec
adc
test
aad
fs
xor
or
mov
aas
adc
push
rorb
xchg
push
lea
ret
rcpps
push
rolb
push
iret
dec
lock
mov
clc
call
pop
clc
inc
cmp
daa
aaa
je
or
or
sahf
enter
or
mov
pop
mov
pop
sub
call
adc
dec
bound
subb
push
inc
rolb
enter
add
test
mov
pushf
popa
or
mov
dec
dec
jecxz
mov
push
lcall
push
lahf
jl
jl
lds
cltd
push
call
mov
ss
adc
out
addb
lret
loope
cmc
gs
aam
sub
negb
sbb
cltd
add
push
aas
mov
out
sub
mov
mov
add
xchg
pop
pop
dec
add
pushf
dec
sub
out
or
sub
rcr
les
lock
neg
daa
mov
push
mov
arpl
mov
scas
aaa
testb
xor
mul
cmp
jns
outsb
sti
lret
xor
stc
inc
insl
or
and
cmp
mov
mov
imul
pop
cld
cmc
mov
enter
aad
or
jle
test
or
fsts
xchg
jo
sbb
push
xchg
out
jne
jg
and
fcompl
dec
mov
lods
pop
pop
sti
loop
sbb
cli
cltd
jno
cmpsl
fwait
mov
inc
rolb
je
adc
icebp
sub
test
pop
sar
xor
sbb
imul
sbb
clc
or
imulb
adc
movsl
jge
das
rcrb
mov
xor
or
pusha
out
aam
mov
outsl
bound
xor
nop
push
jae
leave
adc
or
in
ret
insb
fwait
push
mov
jmp
int
mov
stos
imul
push
and
mov
lahf
mov
cli
add
pop
arpl
mov
movsb
cmp
xorl
stos
dec
out
mov
mov
imul
and
shl
aad
dec
lock
xchg
jb
mov
loop
inc
ret
jnp
xchg
mov
xor
push
mov
popf
mov
mov
addr16
addr16
shll
and
push
leave
shl
ret
mov
or
movsl
scas
or
mov
test
rcrb
push
inc
repz
push
dec
mov
test
imul
in
sub
mov
lea
inc
shrl
sub
mov
push
jge
test
pop
mov
fmuls
dec
shll
cli
add
adc
rcll
lret
jns
or
test
fcoml
mov
es
add
dec
std
add
pop
push
push
cmp
xchg
xchg
dec
push
sub
ret
or
out
aam
dec
jge
dec
inc
or
dec
in
enter
out
daa
adc
cltd
sahf
cmc
pop
sahf
jnp
mov
lods
bound
jo
mov
icebp
lret
cmp
add
mov
sbb
push
or
std
daa
movsl
mov
fisttpl
fisubrl
mov
mov
push
mov
dec
fiaddl
jnp
jle
ja
adc
pop
lods
pop
or
mov
imul
insl
sub
jb
sub
jb
xor
dec
pop
and
inc
xchg
icebp
mov
add
outsb
loop
xor
mov
lods
addr16
inc
cmpl
gs
pop
adc
shlb
gs
mov
jle
repnz
mov
jo
or
stc
ret
mov
jle
xor
ja
aaa
dec
inc
push
lahf
fistpl
cltd
mov
add
aad
and
inc
xor
and
or
jno
cmc
add
xchg
insl
outsl
pop
call
pop
dec
push
jp
data16
mov
out
push
xor
fmuls
pushf
sti
fs
aam
ret
js
cmp
cmp
xor
fcoms
cmp
cli
mov
xor
jecxz
out
xor
es
lret
push
arpl
xlat
out
sar
bound
cli
lods
call
mov
jno
xor
sub
mov
dec
fwait
lds
in
cmp
inc
push
push
dec
hlt
sub
addr16
movsb
lds
jbe
cmp
lcall
call
es
adc
cmpsl
push
mov
leave
inc
xor
fcoms
xchg
sbb
js
das
mov
pushf
fs
lret
lfs
ret
mov
pminub
jp
push
lret
idivb
arpl
stos
xchg
and
pop
lahf
xor
dec
call
mov
out
push
es
and
int3
xchg
pop
sbb
push
mov
outsb
fdivl
push
repz
test
mov
in
jp
adc
cmp
xor
cmp
shrl
jge
xchg
adc
stos
sbb
push
pop
in
pop
jne
push
notb
clc
test
bnd
cwtl
mov
adc
cwtl
in
and
xchg
jle
mov
sbb
mov
leave
enter
sbb
loopne
add
out
insl
rclb
rcll
js
loopne
dec
sbb
int3
and
into
aad
mov
out
fstpl
fmul
aaa
xor
push
lcall
sub
sahf
mov
nop
cmp
cmp
xchg
cmpsb
test
jne
scas
and
pop
test
and
pop
daa
lock
dec
sub
push
imul
inc
dec
add
push
jns
insl
or
stos
cli
adcl
in
sub
into
lea
add
mov
imul
into
lret
cmp
mov
and
xchg
xor
and
jl
cmpsl
ror
out
ret
dec
subb
and
cmc
in
fmull
or
pop
xchg
imul
cmp
shrb
pop
int
adc
lcall
cmp
enter
mov
aam
aas
dec
ret
insb
inc
xchg
add
lret
rol
sub
lea
inc
push
outsb
mov
test
imul
dec
jns
xlat
cmpb
jp
clc
lock
pop
cwtl
aad
mov
push
cli
adc
in
and
sti
fwait
mov
enter
add
dec
pop
or
push
sub
xor
mov
js
in
fnstsw
aam
pop
lock
leave
leave
xor
mov
jle
lret
jo
lea
or
cmpsb
dec
jo
xor
ja
arpl
ret
out
xchg
fisubs
mov
push
mov
lcall
enter
cmp
ret
in
popa
mov
dec
dec
sub
adc
cmp
mov
or
or
popa
push
cmc
in
into
call
pop
bound
and
in
mov
stc
pop
aaa
arpl
cltd
maskmovq
imull
and
cmp
outsl
nop
xchg
pop
xchg
or
cmp
imul
sub
push
lahf
lods
push
fisubrl
mov
sbbl
sahf
stos
jmp
pop
mov
pushf
shll
or
mov
or
xchg
xchg
scas
xor
hlt
subl
push
fsubs
or
dec
xchg
add
inc
jns
push
and
sbb
ja
inc
loope
jno
cmc
cmpsb
cmp
cld
push
fldcw
adc
loopne
pop
push
in
xchg
jae
push
pop
xchg
pop
js
add
mov
push
fwait
ror
jp
mov
adc
enter
xor
adc
loopne
shl
sub
sub
mov
xchg
pop
jne
test
std
gs
movsb
jb
pop
ret
scas
jo,pt
mov
inc
push
sub
in
jbe
mov
jmp
fildll
pop
sahf
mov
pop
lock
mov
and
mov
xchg
xchg
sti
iret
sub
fs
les
jbe
inc
add
sub
fdivl
sbb
add
add
mov
mov
jmp
in
xchg
pop
or
out
in
repnz
or
lea
mov
and
cmp
adc
pushl
sub
pop
mov
xor
ljmp
lahf
sarb
push
scas
divl
sub
scas
aad
and
inc
mov
rcrb
cmp
fldt
mov
clc
hlt
adc
push
sti
xlat
loope
enter
cltd
adc
sub
stc
aas
ja
mov
lods
out
adc
test
and
dec
jle
push
lock
arpl
arpl
sub
dec
and
mov
pop
fldenv
jmp
out
not
es
rcll
js
out
nop
aaa
dec
sub
clc
push
repnz
inc
push
inc
rclb
test
lds
or
add
mov
rorb
mov
pop
cld
xor
loop
xchg
dec
push
lock
or
push
xchg
sub
scas
inc
cmp
add
mov
scas
sub
cmc
mov
aad
mov
fmulp
ss
pop
xlat
sub
shrl
test
add
das
lock
inc
mov
out
add
sub
xchg
fidivl
movb
mov
cmp
xchg
mov
call
inc
stos
and
or
or
imul
inc
insb
xchg
out
mov
dec
inc
mov
xor
xor
filds
jae
push
loop
data16
jmp
sbb
lods
push
clc
pushf
std
xor
lret
sub
sbb
dec
cmpsb
sbb
stos
jne
lcall
xor
lods
les
lret
mov
lret
sarb
dec
lcall
aas
stos
dec
adc
sub
mov
add
ret
jo
cs
shlb
jp
xorb
lea
cltd
push
scas
pop
xor
push
xchg
test
mov
neg
jl
xchg
flds
gs
fnsave
mov
add
stos
xchg
sti
test
jg
pop
mov
scas
cmpsl
fidivl
aaa
movsb
fdivrl
xchg
cmp
cmc
lahf
and
add
les
insl
data16
cs
loope
movsb
out
lcall
pop
incb
fwait
sbb
add
outsb
shlb
xchg
stos
test
int
dec
jae
outsb
clc
std
ja
stc
push
int
add
inc
jne
fwait
mov
cs
push
xor
jecxz
push
or
ss
dec
add
lea
cs
mov
insb
mov
test
nop
jl
pop
popa
in
je
loope
mov
pushf
loop
jecxz
pop
xchg
enter
stos
jp
push
movsl
push
testl
out
push
insl
in
mov
cwtl
lea
or
ljmp
xor
pop
jg
ret
push
dec
xchg
scas
mov
rcr
into
push
std
ret
std
xchg
fmull
jno
lea
xor
je
xor
jbe
and
lock
aam
pop
sub
mov
enter
imul
test
xor
lcall
fists
ss
pushf
pop
sti
ficoms
stos
sub
sub
aas
or
pop
pop
cmpsb
pop
dec
cld
leave
push
and
aas
jmp
js
add
mov
mov
pop
pop
lds
cmp
repz
cmc
popa
push
inc
imul
adc
inc
aaa
add
ret
lcall
mov
mov
xor
dec
int
pop
inc
lock
xchg
das
pop
mov
mov
mov
hlt
pop
iret
addb
icebp
fldt
mov
mov
jl
jl
cmpsl
shrl
cmpsl
dec
das
dec
cmp
mov
and
not
pop
scas
push
jp
imul
sarb
filds
test
sti
xchg
shlb
lret
push
mov
mov
call
loopne
mov
xchg
aam
test
outsl
mov
mov
hlt
lcall
jg
test
fwait
aas
sub
pop
popa
mov
add
and
adc
ret
mov
movsl
ja
pop
or
dec
rcl
pop
ljmp
lods
scas
daa
dec
cmp
out
and
cmp
sub
cmp
scas
mov
daa
pop
icebp
insb
pusha
jecxz
and
dec
test
xchg
outsw
insb
mov
fmuls
push
lods
and
mulb
fisubs
cs
adc
sub
jnp
xor
sub
inc
outsl
leave
adc
les
pushf
push
adc
cmpb
icebp
and
lret
sahf
push
jne
fildll
test
outsl
pop
mov
push
test
pop
icebp
mov
testl
ret
or
repnz
cmp
mov
out
sbb
sub
jo
fdivrl
aad
jo
push
pop
fisubs
mov
pusha
ss
mov
push
jns
jecxz
mov
int
arpl
lods
add
xchg
lahf
rcl
call
aas
loope
mov
xor
jl
fldl
popf
bound
mov
mov
lcall
push
sub
negb
mov
in
lea
inc
popa
sub
insl
mov
neg
pop
push
dec
icebp
mov
fwait
add
clc
out
cmp
loopne
testl
xchg
mov
int3
xchg
imul
mov
xchg
inc
jg
ret
imul
aam
in
jo
addr16
push
sti
call
scas
fdivs
bnd
fisttps
mov
dec
jb
jle
mov
pop
callw
in
into
filds
mov
rorb
and
movsb
hlt
xchg
push
pop
jl
outsb
sub
mov
adc
push
iret
mov
xchg
int3
addb
xor
push
push
pop
std
loope
sbb
push
mov
mulb
aad
js
mov
add
cltd
shlb
or
enter
dec
sbb
push
pop
push
std
adc
mov
loop
repz
scas
adc
fdivl
out
aaa
adc
xorl
xor
mov
ret
cmp
xchg
mov
push
and
mov
cmp
jae
push
mov
aad
mul
leave
mov
add
push
or
or
cld
or
sub
out
test
cmp
dec
fisttpl
sbb
push
test
mov
adc
pop
into
mov
ret
cmc
icebp
pop
iret
in
mov
stc
pop
movsl
test
iret
xchg
test
mov
jmp
or
stc
jbe
add
mov
inc
xchg
inc
rcll
or
insl
and
pop
and
jne
pusha
mov
adc
jnp
xchg
cmovs
leave
cwtl
lods
pop
sub
xchg
cmp
pop
mov
mov
lds
lods
xor
pushf
push
xor
push
outsb
scas
sbb
in
lret
add
xchg
sarl
adc
sbb
mov
xor
test
sub
push
inc
pop
imul
adc
aas
xlat
adc
sub
pop
clc
lcall
out
lea
and
call
pop
sbb
dec
mov
pop
mov
inc
xor
jbe
pop
mov
les
pop
pop
aas
or
adc
arpl
xor
dec
imul
rcll
cmc
mov
sahf
data16
insl
xchg
or
jg
pop
arpl
enter
mov
jb
aad
pop
inc
ljmp
push
fstl
daa
sub
mov
fadd
sbb
adc
inc
fwait
sub
xchg
insb
pop
popf
push
or
mov
push
lret
pop
idivl
push
nop
lock
call
jmp
enter
pusha
cmp
cmp
add
add
mov
xor
pop
arpl
lods
sub
insb
push
jno
aas
in
inc
fldenv
xchg
or
pop
and
lds
popa
lahf
pop
add
mov
adc
adc
jmp
daa
fcmovu
repz
imull
xorl
ss
mov
push
lods
sub
adc
popf
add
fistpl
cld
clc
sahf
icebp
lods
sbb
cmp
cmp
add
sahf
popf
pop
cmpl
and
cmp
out
mov
push
cs
cwtl
aad
out
into
dec
icebp
xor
loope
pop
insl
sbb
xchg
and
mov
es
adc
add
cmpsl
xor
movsb
out
push
xchg
mov
push
push
lret
cltd
xchg
sbb
xchg
xchg
jle
inc
jp
and
cmp
hlt
dec
gs
stos
loop
or
daa
jecxz
and
inc
dec
repnz
out
and
and
nop
ret
push
adc
and
adc
fnstcw
ficompl
fnstenv
adc
mov
enter
cli
aas
xchg
je
fwait
push
dec
loopne
and
fsubr
inc
call
add
cmp
in
test
enter
inc
or
mov
dec
std
pop
pop
xchg
out
add
mov
je
mov
movsb
bound
andl
cwtl
leave
hlt
or
rcr
cwtl
mov
shrb
ret
out
jne
xchg
sbb
push
sbb
daa
imul
outsl
dec
inc
mov
jbe
cmc
or
dec
test
fbld
and
out
in
adc
sbb
sbb
jne
cmp
iret
mov
lock
dec
mov
sub
jle
ret
orl
or
sbb
jnp
mov
enter
xchg
sbb
lock
cmp
inc
dec
xor
dec
adc
jnp
fisubl
les
bound
jle
dec
cltd
inc
les
mov
sbb
cmp
popf
mov
inc
sbb
and
je
dec
sub
rolb
ficoml
mov
aam
jbe
jbe
cmpsl
shlb
xchg
enter
add
cmpsl
jle
add
push
or
shlb
paddw
out
vrcpss
dec
mov
dec
ret
arpl
mov
xchg
call
xor
inc
neg
out
mov
aad
les
pop
leave
jae
mov
stc
dec
in
ror
data16
sub
mov
mov
ss
jns
mov
mov
xchg
ss
cmp
hlt
xor
push
sti
lea
mov
std
mov
in
mov
js
sub
in
and
push
fs
scas
add
sub
ljmp
jnp
mov
out
movsb
pop
lret
movsl
mov
dec
or
sbb
daa
ret
pop
dec
mov
es
or
push
insb
pushf
mov
jno
repnz
pop
sbb
jo
xor
out
fbld
in
jp
js
arpl
dec
lahf
push
lcall
xchg
mov
mov
lret
jae
xchg
ljmp
or
or
ja
add
add
sub
xchg
push
mov
push
outsb
stos
lock
les
es
mov
cwtl
repz
sbb
adc
pop
jmp
inc
jne
subb
ret
or
xchg
sarb
inc
xlat
call
xor
ljmp
orl
inc
stc
aad
fsqrt
ds
xor
mov
insb
mov
shll
ljmp
mov
jbe
cmp
and
and
idiv
shl
sbb
bound
inc
or
imul
jne
jae
dec
sub
cmpb
jle
sbb
mov
push
xchg
mov
mov
mov
jae
jp
cs
ror
xchg
gs
mov
mov
lods
adc
jp
dec
sub
jecxz
adc
mov
mov
into
scas
movl
lcall
lahf
xor
inc
mov
jns
mov
cmp
pop
adc
es
lods
xchg
adc
push
push
test
xchg
jmp
pop
imul
out
xor
sbb
adc
and
pop
fsubrs
sbb
sbb
add
hlt
fcoms
jnp
or
fwait
out
add
or
int3
dec
xor
in
add
shll
jnp
movsl
mov
bnd
out
insl
mov
movsl
out
ds
mov
sbb
mov
mov
mov
hlt
or
jbe
popf
mov
pop
or
cli
sbb
cltd
ja
out
stos
inc
cld
jge
jg
mov
ljmp
leave
lock
lahf
std
and
sub
mov
into
mov
mov
pop
fldt
jo
inc
sub
xchg
or
dec
movsb
xlat
xorb
ret
and
repnz
js
add
adc
push
ss
sbbb
aas
out
push
or
add
out
xchg
mov
sarb
push
and
call
xor
adc
pop
mov
push
fcoml
xor
jp
jne
inc
cmp
pop
jo
and
push
add
daa
cmp
push
or
or
sbb
pop
pop
jmp
aaa
cmp
xchg
das
lahf
add
cmp
mov
inc
lcall
ds
movsb
or
lret
ret
cltd
daa
aaa
xor
pop
pop
xor
mov
mov
pop
jle
repz
pusha
push
cs
push
repnz
insb
loope
mov
inc
dec
add
mov
cwtl
loop
lret
test
and
shlb
sbb
pop
fs
or
in
push
pop
pop
stos
mov
and
int3
out
stos
mov
mov
dec
xchg
scas
lret
cmp
dec
push
jmp
das
je
xchg
rcl
add
xor
pusha
mov
insb
test
xchg
inc
rolb
cltd
cs
add
xlat
lret
js
pop
or
jg
add
int3
sub
pusha
pop
fpatan
insl
mov
ret
stos
ds
add
jb
sbb
cwtl
enter
aam
pop
and
shlb
imul
add
inc
xor
jo
jnp
push
xchg
dec
daa
jp
mov
push
movsl
test
jno
pop
jbe
jno
inc
je,pn
test
push
pop
ret
push
add
into
push
mov
popa
hlt
adc
adc
sbb
dec
xchg
popa
lock
adc
in
mov
add
mov
movsl
arpl
sub
mov
loopne
mov
push
loop
and
xchg
push
mov
sub
sbb
sarb
loope
enter
dec
