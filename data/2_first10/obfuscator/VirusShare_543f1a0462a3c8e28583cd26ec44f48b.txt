cmp
cmp
xor
aaa
xor
adc
mov
or
clc
add
bound
push
lahf
push
pusha
sub
scas
daa
jge
cmp
jmp
mov
test
jmp
jmp
jecxz
cld
jecxz
ret
dec
popa
sbb
xchg
xor
inc
cld
rcrl
jnp
jb
mov
push
insb
dec
mov
xchg
and
push
xor
inc
pushf
cld
sbb
shl
add
and
into
imul
mov
scas
adc
sub
inc
and
stos
mov
shlb
in
sub
pop
and
cmp
push
cli
dec
outsb
lret
outsb
scas
subb
scas
int
cmc
test
dec
sub
iret
lret
mov
mov
es
sub
or
jne
dec
fnsave
sarb
enter
cmp
jb
pop
jns
add
lea
or
inc
pusha
out
mov
test
inc
outsb
mov
jne
xor
mov
js
fs
add
mov
inc
into
xor
movb
adc
cmp
xchg
xor
sub
mov
sbb
pop
mov
rcrb
sbb
jno
xchg
push
pop
xor
orb
sbb
push
repnz
dec
les
test
xchg
push
mov
ret
mov
dec
ficompl
mov
cmpsb
lock
push
mov
daa
inc
adc
aam
lock
mov
les
fmull
lret
xchg
jge
xchg
xchg
hlt
push
mov
or
or
je
popa
in
pop
nop
mov
mov
inc
jo
mov
mov
sub
push
enter
cwtl
mov
jne
pop
sti
stos
xchg
out
push
mov
leave
cmp
fs
iret
sub
cwtl
movsb
out
imul
add
add
sbb
cmp
das
cmpsb
mov
mov
test
shlb
pushf
sub
xlat
sub
arpl
sti
lods
push
pop
ja
lock
inc
sub
mov
mov
outsb
lret
or
or
mov
in
lods
scas
sti
aaa
mov
mov
add
out
jae
adc
cmp
lret
push
push
inc
cmp
xchg
ss
stc
bound
push
mov
xor
push
pop
push
adc
xchg
mov
ja
lret
insb
mov
xchg
add
clc
xor
lock
mov
les
les
mov
and
pop
dec
add
out
pop
fdiv
popa
pop
data16
fwait
inc
jmp
les
push
cld
adc
jnp
rep
xlat
jg
mov
mov
add
pop
not
inc
sbb
mov
adc
icebp
xlat
sub
push
mov
mov
cmp
sbb
mov
out
and
lret
clc
inc
jp
lcall
mov
scas
sbb
xchg
paddsw
xor
repz
outsl
sarl
aaa
lock
sbb
push
rorb
imul
push
ljmp
and
push
andb
xchg
adc
or
fistl
fbld
es
xor
enter
or
fs
push
xchg
cmp
sahf
push
sti
inc
scas
popf
dec
lret
adc
push
out
imul
hlt
ficoms
loop
mov
push
pop
jne
mov
pop
dec
pop
jmp
mov
jmp
add
cmpsl
scas
iret
jp
jge
in
xchg
ret
les
lock
div
mov
not
and
mov
xor
pop
notb
aas
sub
or
out
xchg
arpl
movsb
cli
sub
push
jl
adc
dec
dec
arpl
ret
mov
insb
adc
ret
out
push
sub
push
push
xor
cli
mov
or
enter
push
ds
push
jns
aas
arpl
or
loope
pop
lret
aaa
inc
cmpsb
add
adc
ds
and
cmpsb
pop
popa
cmp
sarb
aad
arpl
push
cmc
shrl
inc
ds
sti
fcoms
cmc
and
or
out
out
test
incb
cs
fildl
sar
push
negl
mov
dec
pop
sbb
mov
and
shlb
mov
jge
pusha
popf
pop
and
xchg
push
sub
sbb
adc
ss
addps
adc
aam
fidivrl
imul
push
sti
jmp
sbb
frstor
push
and
add
sub
js
mov
out
push
pop
push
lret
ss
lods
cli
mov
xchg
pop
repnz
push
repnz
xchg
das
jle
fdivr
stos
mov
and
or
bound
jl
adc
sti
adc
enter
and
scas
scas
push
lods
or
cli
xorl
bswap
dec
and
test
loop
sub
ds
xor
call
div
in
fidivs
je
insl
dec
pushf
mov
mov
xor
push
mov
jmp
addr16
mov
cmc
or
mov
sbb
mov
dec
adc
in
jle
push
out
les
into
pop
mov
ret
enter
je
lahf
and
sbb
cmpsb
in
push
mov
xchg
repnz
xchg
jo
das
movsb
lock
pop
andb
add
jbe
lcall
bound
imul
xchg
je
push
dec
stos
or
xchg
mov
pop
push
insb
xchg
cmp
pop
mov
call
fmul
in
push
sub
add
vpsllw
push
pop
jp
jp
aas
stos
push
mov
jns
jle
int3
push
adc
xchg
xor
lcall
sub
rcl
int3
cmp
sbb
dec
push
ja
sbb
and
sbb
inc
lods
in
ret
adcb
push
pop
leave
jl
in
xor
inc
add
sarb
mov
sbb
daa
or
mov
clc
lret
or
lock
jbe
addr16
cmp
mov
hlt
and
adc
and
fstp
std
test
push
ds
jge,pn
sub
jmp
cmp
fisttpll
fsubrl
ss
adc
xor
out
mov
pop
loopne
mov
clc
sub
lret
rol
push
sub
lock
rcll
pop
xchg
stos
rcrb
lock
cld
test
or
fcmovnb
js
int3
push
mov
out
dec
mov
ljmp
mov
jo
in
xchg
mov
adc
jae
fistpll
sub
push
iret
data16
cmc
mov
je
push
into
shll
int3
mov
add
push
pop
nop
enter
adcb
jb
aad
lcall
pusha
rol
in
push
xchg
adc
jle
in
dec
cmp
imul
rcll
shl
dec
scas
dec
xchg
mov
popf
mov
lahf
shlb
shrb
sbb
rcll
fnsave
retw
fimuls
xor
mov
test
leave
out
cld
sbb
xor
lahf
es
mov
fcoml
loop
or
out
add
pop
lods
movsb
imul
nop
add
lods
xor
dec
imul
mov
test
test
int3
je
std
lcall
sub
add
loop
xor
ret
mov
adc
mov
leave
sub
iret
mov
setg
mov
xchg
mov
add
aad
in
xor
push
movsb
decb
push
add
or
or
lds
jo
mov
out
mov
movsb
xor
div
shrl
mov
cld
dec
mov
std
inc
adc
les
jecxz
mov
ret
lods
aam
mov
or
pop
inc
and
jns
mov
std
push
in
or
in
add
push
push
mov
xor
nop
jecxz
xchg
xchg
push
adc
sbb
mov
xorb
std
dec
sbb
in
and
jmp
or
jp
addr16
add
push
popf
lret
jle
das
mov
push
stos
loopne
xchg
mov
xchg
jae
sbb
dec
hlt
ret
xor
or
add
outsl
jmp
add
jg
cmp
pushf
imul
inc
or
mov
pushf
call
out
adc
push
mov
int3
aad
popf
xchg
shl
jo
push
lret
mov
out
jns
fs
inc
mov
pop
jae
lret
mov
sahf
mov
mov
xor
jnp
xor
cmpsb
push
cltd
pusha
repz
push
pop
add
hlt
dec
shlb
or
or
dec
ss
mov
mov
sub
loop
pop
cmp
push
mov
push
jmp
call
jg
pop
nop
jb
push
mov
mov
arpl
insl
sti
jle
and
mov
lcall
pcmpeqd
push
mov
sub
pop
je
push
push
test
addr16
sbb
into
cli
fucomip
cmp
xchg
xchg
aas
mov
outsl
inc
out
pop
es
ror
jl
mov
push
and
push
jb
pop
mov
lea
in
adc
daa
or
mov
inc
imulb
or
push
or
dec
ljmp
sbb
mov
add
arpl
fstl
push
sub
std
outsl
mov
add
or
or
pop
out
push
push
xor
xor
and
cmp
sbbl
lcall
aad
aas
xchg
add
xor
test
enter
shll
mov
nop
aas
mov
enter
aaa
and
cmpsb
adc
lods
movsb
fnsave
lret
push
xor
fs
sbbl
mov
cwtl
sub
add
cld
aam
mov
roll
mov
adc
mov
pop
jbe
inc
cmpl
leave
mov
stc
out
jnp
ret
ss
lcall
pushf
dec
std
adc
popf
int3
xchg
cmpsl
pushf
int3
inc
dec
adc
daa
sub
fmulp
lea
daa
mov
add
fdivp
inc
popa
aad
leave
pop
dec
mov
dec
fdivrs
mov
xchg
divb
mov
mov
adc
push
mov
xchg
adc
jge
into
xchg
jge
fdivl
sbb
or
mov
xor
xor
cmp
dec
push
hlt
cmpsb
inc
repz
sub
xchg
and
cmp
jno
scas
jno
fcmovb
push
and
or
stos
sub
fprem1
repnz
rcl
or
cs
das
mov
out
xor
and
or
pop
xchg
mov
push
daa
mov
scas
mov
jne
push
in
inc
inc
adc
fcoms
push
add
jne
or
and
cmc
adc
cmp
rclb
push
adc
cli
push
sbb
lret
sbb
mov
add
jl
repz
ret
inc
pop
add
jmp
dec
push
adc
int
pop
mov
insb
fldl
push
leave
adc
dec
shlb
sub
lock
rolb
add
push
xor
stos
loop
xchg
fs
sub
add
jo
bound
push
cli
iret
inc
jo,pn
sbb
in
mov
and
pop
bound
ds
cmc
popf
xor
mov
mov
sub
bnd
push
inc
push
mov
inc
cmc
out
xor
inc
ror
push
add
fisttps
mov
mov
cli
les
mov
mov
es
adc
xchg
das
or
shrb
xor
div
dec
jge
mov
loopne
xchg
out
mov
pusha
in
xchg
fistpll
test
insl
cmp
adc
pop
mov
xor
stos
das
xor
insl
fwait
inc
sub
scas
popf
sbb
push
test
pushf
int
rclb
jmp
pusha
adc
ds
pushf
ret
xlat
mov
cwtl
pop
cli
pop
mov
shr
mov
inc
cwtl
pop
jg
sub
add
je
cltd
pop
loope
jnp
mov
dec
jge
or
aas
outsb
cmp
lahf
arpl
adc
xchg
adc
fs
mov
out
push
jmp
adc
jmp
cmc
js
mov
cmc
in
xor
jnp
fldt
shlb
nop
les
negl
add
pushf
rcrl
in
fistps
cmpsb
push
mov
shrb
pop
in
dec
jp
aad
pop
inc
rcrb
cmpb
sbb
xchg
ret
loop
sub
or
cmpsb
and
aaa
inc
cmpsl
adc
sub
cmp
sub
aam
shll
adc
insb
xor
fstpl
into
cmc
sbbb
push
push
int3
push
xchg
out
push
sub
fwait
sub
ss
clc
jo
lea
icebp
mov
insl
aam
addr16
push
not
mov
call
mov
aad
sbb
lds
roll
scas
push
lea
inc
add
add
adc
mov
xchg
cmp
shll
rclb
test
add
dec
ror
dec
lock
jbe
or
xchg
fcoms
dec
cmp
sub
cmp
shrb
insb
lock
les
scas
stos
and
push
sub
ds
jmp
loope
pop
fimull
push
mov
xor
addr16
mov
pop
ficomps
shll
icebp
pop
dec
cs
mov
mov
and
sbb
lret
maxps
push
add
jne
dec
imul
sbb
mov
lods
push
dec
add
or
addr16
inc
gs
shll
sbb
aam
cld
mov
mov
xor
aaa
pop
ret
imul
fistl
leave
sbb
jb
push
jmp
or
addr16
pop
int3
jae
mov
xor
add
popf
adc
push
mov
sub
rcrb
mov
gs
mov
push
int3
cmp
inc
xor
stos
sbb
out
les
cmpsl
pop
mov
ljmp
xor
inc
mov
sbb
add
std
stc
mov
inc
clc
push
add
mov
es
inc
imul
mov
fnstcw
call
inc
xchg
test
push
sbb
icebp
mov
inc
fwait
mov
jmp
addr16
inc
mov
jb
sbb
xor
iret
dec
int
jnp
sbb
dec
add
pop
push
or
loope
jl
inc
cmpl
arpl
or
pop
lret
adc
sub
popf
cmp
adcl
fsubr
push
add
dec
sub
sub
clc
ret
mov
lock
int
jmp
pop
inc
aad
pxor
adc
add
push
ljmp
add
xchg
fs
repnz
add
mov
push
mov
lcall
pop
cmc
mov
xchg
lea
roll
push
mov
pop
xchg
mov
mov
in
mov
and
xor
jmp
out
mov
pop
in
out
aam
xorl
mov
cmpsl
mov
ret
inc
dec
and
pop
ja
fldt
mov
sub
push
or
scas
mov
jno
lahf
rclb
push
pusha
fcoms
mov
ja
pop
js
repnz
fisubs
xor
adc
imull
pop
leave
test
mov
adc
jb
je
negb
test
mov
push
adcl
sbb
xchg
lods
data16
mov
mov
cmp
sbb
cmpsl
dec
mov
or
popf
aaa
jmp
ljmp
jbe
pusha
xor
push
xor
xlat
mov
pop
movsl
sbb
ljmp
mov
cmp
fimuls
incl
fstpt
ffree
and
mov
test
xlat
jge
push
mov
pop
rorl
popa
inc
insb
xor
inc
es
xor
jne
push
inc
das
lds
paddq
sub
dec
mov
cwtl
cmp
inc
cmc
aad
cmp
sub
shl
inc
sarb
daa
les
in
or
adc
mov
in
cmp
pop
aad
or
sti
sbb
mov
stos
xor
into
sub
in
or
cs
cmp
les
inc
push
fs
fwait
adc
lcall
mov
jmp
cwtl
sti
ds
dec
adc
test
cmp
xor
jecxz
add
movsb
adc
mov
lea
andb
loop
ljmp
rorb
push
cmc
inc
pop
sbb
xor
aad
stos
icebp
rcl
jo
dec
xchg
int
xor
pop
dec
call
cmpsb
test
shrl
push
popa
adc
jo
push
jb
xor
in
sahf
adc
aad
cld
pop
pop
pop
in
loope
adc
rolb
fidivl
inc
push
inc
outsl
orb
js
mov
sub
loop
gs
pop
out
ret
or
rcr
out
shrl
vpunpckhbw
push
and
popl
pop
pop
notb
cli
je
cs
add
fistpl
cld
lret
aas
push
jle
les
adc
jl
mov
movsl
icebp
xchg
mov
and
dec
mov
daa
lds
and
in
push
std
clc
rcrl
add
sbb
jl
push
mov
lahf
ljmp
arpl
rorl
jae
hlt
push
xor
mov
cwtl
call
push
enter
popf
into
cmp
sbb
sub
xlat
popf
ljmp
xchg
test
jbe
add
subl
cwtl
push
subb
mov
and
sbb
xchg
push
aaa
shl
push
out
cltd
scas
pop
cld
enter
in
mov
pop
xchg
jb
js
in
pushl
jne
xchg
push
jge
mov
movsl
lds
inc
incl
idiv
dec
fbstp
ret
das
xchg
fdivl
xor
push
mov
mov
das
inc
sbb
repz
dec
mov
sarb
jmp
test
mov
push
sub
mov
inc
in
stos
test
adcl
xchg
or
mov
add
mov
push
ret
fstl
sbb
push
lea
aad
mov
cmp
or
test
dec
inc
lcall
pop
int
adc
aam
mov
inc
icebp
sub
pop
push
xchg
rcl
sbb
icebp
and
mov
js
jnp
push
inc
adc
je
int3
dec
ret
pusha
insb
js
stc
dec
cmpsl
push
jl
inc
dec
jle
into
xor
adc
mov
arpl
les
in
inc
cmpsl
cmp
mov
pop
and
jp
mov
xchg
call
and
mov
inc
or
adc
cmpsb
sahf
push
outsl
or
lods
sub
loop
push
stos
pushf
push
xchg
dec
mov
pop
in
std
cmp
dec
cmpsb
ficompl
cmc
jge
xchg
mov
subb
xchg
or
daa
dec
lahf
xor
cmp
cmp
orb
dec
pop
ja
pop
push
out
inc
xchg
jecxz
out
lret
push
lods
ret
mov
inc
test
adc
mov
push
sub
cmp
lret
ja
pop
pushf
mov
pushf
pop
and
sbb
scas
dec
mov
adc
jnp
jbe
mov
sar
imul
jae
dec
shll
ret
ret
outsl
incb
mov
add
ss
dec
sub
daa
xchg
jmp
outsl
mov
ret
test
mov
dec
lods
mov
js
mov
xor
dec
movsl
sahf
in
cmp
mov
lahf
shlb
xchg
and
dec
mov
sbb
jno
lret
aam
inc
outsl
mov
loopne
sub
sub
sub
sbb
mov
repz
jp
or
popl
test
repz
pop
or
insb
dec
jno
jnp
xchg
or
jl
pop
mov
in
jno
push
inc
in
sbbb
add
icebp
es
orb
jg,pt
push
cwtl
jp
lock
in
push
adc
jns
fwait
mov
mov
movsl
aam
or
pop
jbe
xor
lret
xchg
cld
in
sbb
hlt
inc
push
xlat
add
mov
dec
mov
sbb
mov
mov
data16
xor
xor
xor
cli
dec
mov
imul
adc
dec
loop
subl
insl
push
fsubl
icebp
loopne
es
fidivrl
mov
sarb
sbb
arpl
mov
sub
sbb
mov
dec
fidivrl
dec
loope
testl
je
adc
ret
jl
test
insb
cwtl
movsl
push
ficoms
icebp
mov
dec
fldt
or
rol
popf
jl
sti
repnz
not
xor
mov
std
adc
xor
pop
sub
xchg
cltd
pop
mov
push
popa
push
fmull
sar
sub
ret
and
jle
mov
jl
sub
xor
subb
sub
cltd
add
aad
xlat
adc
pop
shl
aad
push
divb
xchg
aas
jp
hlt
sub
sub
outsb
test
mov
les
and
in
mov
cmp
out
and
ds
popf
pusha
aaa
pinsrw
sbb
inc
aaa
pop
or
push
imul
aad
enter
inc
mov
cmp
push
jle
daa
lret
push
je
and
add
sub
stos
fsubs
je
sbbl
sub
movsl
pop
jmp
sbb
inc
ss
cmp
lret
sub
push
andl
adc
sbb
data16
or
jne
fdivr
mov
dec
fwait
adc
test
push
push
lahf
sahf
bound
add
out
add
addr16
xchg
out
mov
adc
sti
sbb
dec
xor
cmpl
adc
xor
jnp
inc
jle
rolb
mov
mov
fnstcw
mov
out
dec
mov
and
gs
in
jo
jg
lods
lock
add
test
dec
mov
jae
sub
insb
sub
dec
fwait
pop
fs
and
pop
lret
jo
fstps
pop
incb
stc
push
outsl
ja
in
pushf
repnz
leave
mov
pop
outsb
out
out
popa
sbb
jne
fistl
loop
cmpb
hlt
xlat
rolb
or
jb,pn
adc
mov
or
mov
int3
divl
mov
xor
fwait
cmp
add
or
jnp
cmp
lods
mov
fldt
pop
sub
stc
xchg
dec
out
dec
mov
mov
xor
xchg
and
cmp
in
dec
lret
lahf
scas
xlat
sahf
push
sbb
sarb
xchg
mov
cmp
push
push
ljmp
aam
fisttpl
cmpsl
xlat
push
test
mov
jge
fldenv
jb
push
xchg
push
jg
daa
xchg
and
mov
cli
dec
jp
inc
fstpl
pushf
negl
inc
imul
adc
insb
and
push
fcomip
sarb
cli
cli
mov
sbb
mov
add
inc
jne
lods
cmp
cmp
pop
nop
inc
stos
jecxz
xchg
dec
stos
xor
cmp
cmp
xor
cli
cmp
lret
jb
repz
sub
lahf
lahf
mov
lahf
pop
out
fldcw
and
pop
pop
es
mov
shll
pop
or
jo,pt
pusha
mov
repnz
push
cmpsb
or
push
das
loop
ja
dec
arpl
inc
shlb
xor
cmp
outsb
mov
sahf
lret
enter
inc
or
add
pop
out
lret
inc
in
mov
fwait
ret
pop
adc
packsswb
mov
mov
ds
xchg
xor
xor
pop
fnstcw
xlat
cmc
lahf
jl
xchg
insl
add
out
add
cmpsb
xor
aas
fsts
jmp
movsl
adc
lahf
push
mov
or
inc
sub
push
add
jns
cwtl
add
ret
push
stc
test
call
pop
jne
mov
xlat
lods
dec
push
dec
jl
jnp
sub
mov
mov
scas
imul
into
shlb
xor
test
fidivrl
lcall
int
lcall
cmp
sbb
xchg
fcmovb
cmc
xchg
call
add
je
int
inc
sbb
ja
daa
mov
xlat
addr16
push
and
push
lret
mov
lret
push
orb
stos
jbe
daa
sti
movsl
push
push
push
fimull
mov
imul
push
sbb
lods
out
push
je
aam
sub
sub
pop
sbb
inc
scas
jecxz
push
aas
lods
cld
mov
data16
mov
sub
rorb
les
jmp
icebp
lock
mov
stos
mov
or
leave
idivl
mov
dec
add
xchg
mov
les
push
pop
mov
jns
add
imul
cwtl
fisubs
xchg
mov
in
sub
test
imul
call
out
out
movsb
movsb
mov
xor
adc
push
or
hlt
mull
push
jo
movsl
inc
aad
and
cltd
mov
sub
jmp
int
into
mov
subb
sbb
push
jb
cltd
sbb
cmp
int3
push
xor
aas
das
cmp
fstpt
jno
sahf
lret
pop
sub
and
and
imul
cltd
sub
jle
sbb
pop
mov
lock
mov
xchg
shlb
sub
or
fstps
loopne
push
or
fbstp
and
xchg
add
xchg
test
addr16
mov
adc
adcb
xchg
int
mov
enter
jbe
loopne
cmp
cmp
mov
loopne
xchg
xchg
pop
ret
mov
mov
cli
xchg
ror
jbe
xchg
sbb
outsb
adc
and
xchg
dec
test
ss
sbb
das
lods
xchg
and
das
sbb
jb
stc
pop
cmp
leave
add
mov
mov
mov
popl
pop
and
and
pop
or
or
dec
int
jae
shr
iret
inc
out
fs
add
push
pop
or
shl
sub
add
call
push
cmp
push
jl
cmp
cmp
xor
repz
mov
out
test
sbb
loope
stos
add
add
push
dec
dec
cld
test
notl
repnz
sbb
and
or
and
mov
jecxz
scas
and
adc
clc
jbe
int
sbb
outsl
inc
fidivrl
xchg
out
lcall
idiv
mov
cmp
mov
jnp
jns
cmp
adc
push
outsl
pushf
repz
pop
les
inc
cmp
or
push
jno
dec
or
sbb
mov
lods
sarl
pop
pop
movsb
popl
insl
xor
and
out
adc
push
or
xchg
adc
jmp
in
adc
mov
xchg
dec
sub
clc
cmp
lahf
inc
inc
sub
scas
movsb
cmp
jno
jns
out
lcall
mov
dec
pop
push
mov
js
std
popf
ljmp
iret
lret
ljmp
sbb
jmp
push
mov
jl
mov
dec
inc
movsb
add
inc
cmp
pushf
ror
stos
mov
dec
ret
movsl
stos
pop
stc
inc
not
push
xchg
push
mov
cmc
cmp
jo
pop
or
mov
lcall
dec
mov
es
xchg
les
mov
mov
enter
mull
add
adc
dec
lret
test
jmp
cmp
pushf
pop
repnz
inc
aam
dec
inc
ret
cmp
push
je
dec
stos
out
movsb
fisubs
pop
ret
jmp
loopne
in
mov
aam
pushf
jnp
jge
jmp
jp
mov
jmp
loop
out
mov
je
sbb
mov
mov
shr
arpl
insb
mov
mov
inc
dec
xchg
shll
mov
add
push
jnp
cltd
aam
call
lock
cmp
movsb
cmp
insb
notb
dec
cmpsb
adc
mov
cmp
add
lds
icebp
inc
mov
out
rcll
fimull
add
popf
xor
ds
dec
sub
lea
mov
push
push
mov
jnp
jmp
mov
xchg
jno
in
roll
and
mov
les
pusha
lahf
pop
cmp
sbb
out
mov
pop
popa
add
add
mov
inc
iret
and
push
imul
sub
rorb
movsl
addr16
cmpsl
mov
daa
mov
mov
pop
xchg
idivl
fildl
sub
aaa
loope
leave
sbb
lods
inc
sub
stc
cmp
lods
cmpsl
mov
dec
lcall
in
cld
mov
mov
flds
mov
cmp
pop
sub
pop
or
lods
or
bound
pop
fldcw
cmpsb
fisubs
and
xlat
jmp
mov
stos
sbb
cmc
push
and
sbb
fwait
mov
mov
inc
dec
dec
adcb
adc
into
std
imul
lea
test
add
lods
lock
sbb
jp
fsts
sbb
sbb
pop
pop
push
fwait
push
cmpsb
inc
jge
inc
pop
xchg
or
mov
aas
dec
mov
inc
pop
out
lret
ret
sti
push
stc
adcb
sbb
in
pushf
cmpsl
cmp
dec
ja
push
je
scas
ds
dec
mov
mov
mov
dec
add
rcrb
jmp
pushf
in
fimull
sbb
ret
in
test
or
add
pop
loope
mov
cmp
adc
insb
imul
data16
je
and
arpl
dec
add
sbbl
cmp
fistps
add
dec
rcl
add
inc
xchg
push
add
cmp
push
cmp
fmuls
adc
mov
jne
mov
movl
je
fnsave
xchg
lea
out
mov
xchg
dec
sbb
adc
loopne
nop
insb
sub
push
xchg
or
fcompl
mov
mov
dec
out
mov
sbb
movsb
adc
mov
loope
mov
inc
outsb
xor
sub
imul
hlt
cmp
inc
cli
movsb
or
lahf
in
lret
pusha
jmp
dec
pop
dec
ja
mov
aas
test
imulb
push
push
lahf
push
sub
jo
lahf
push
sub
sub
sbb
movsl
xchg
test
shll
sahf
enter
or
sub
cli
sub
xchg
xor
lds
out
fs
insl
pop
sub
bound
push
push
push
jl
xor
orl
sbb
xor
outsb
sti
mov
lahf
xor
push
fdivr
sub
and
jp
aas
out
test
cmp
jl
cs
xorl
lea
mov
rcrb
mov
mov
adcb
insb
add
fbstp
cmpsl
jmp
push
xchg
pop
into
insb
es
xchg
lea
test
or
mov
xchg
push
jge
dec
push
cmp
inc
or
mov
push
aam
jl
stos
test
and
cmpsb
hlt
ret
add
mov
mov
aad
mov
xor
jae
dec
lea
test
out
xor
mov
mov
gs
pop
mov
xor
sub
nop
cmpsb
popa
movsb
nop
outsl
fdivrl
xchg
in
leave
pop
stos
pop
xor
addr16
clc
mov
push
cltd
dec
dec
dec
xor
sub
inc
sbb
push
mov
add
add
sub
jns,pt
arpl
pop
mov
int
cmp
int3
fnstcw
sbb
in
mov
add
into
push
jecxz
mov
pushf
jns
xchg
test
add
mov
push
data16
xor
sub
jne
or
outsl
xchg
mov
cltd
push
pop
xor
add
lahf
sbb
xchg
and
mov
movsl
pop
leave
push
xorb
insl
popl
dec
xor
sub
lds
cs
inc
pop
fs
mov
cmpsl
push
int3
hlt
mov
stos
jmp
aas
popa
insb
or
mov
out
out
xor
movsl
jl
cld
sbb
leave
shlb
hlt
rcll
scas
jl
ret
add
fsubl
subl
xchg
cmp
sbb
fadd
pushf
xor
mov
inc
mov
movsb
mov
mov
in
sbb
dec
arpl
sar
mov
xchg
stos
lds
jle
bound
bound
dec
pop
jns
loop
jbe
adc
mov
add
dec
mov
adc
xchg
mov
loope
addb
gs
js
push
fisttps
test
xor
je
pop
enter
inc
inc
aam
xor
inc
nop
dec
out
dec
mov
adc
popa
lea
movsl
push
repz
mov
dec
sbb
popa
aas
daa
stc
aas
ret
sub
xor
push
mov
mov
jmp
lret
adc
adc
inc
xchg
out
cs
dec
xor
push
push
jbe
lds
pop
cwtl
sub
cli
lret
repz
sbbb
cld
popf
push
rcr
mov
pop
xchg
lds
sub
ss
or
int
pop
sub
jns
push
push
inc
test
mov
nop
push
shrl
imul
ja
xchg
scas
insl
lcall
push
jmp
nop
and
adc
or
xor
inc
and
shll
mov
jo
pop
cmc
add
pop
xchg
lahf
mov
and
in
xlat
repz
cld
adc
je
cs
mov
leave
std
movl
mov
iret
sub
cmp
mov
fwait
or
out
lods
inc
xor
inc
sbb
sub
jbe
and
sbb
imul
add
nop
sub
mov
sub
dec
mov
jbe
or
out
jecxz
push
dec
mov
divl
or
xlat
mov
add
fists
mov
inc
aaa
aam
outsl
gs
outsb
sub
push
xchg
ficoml
sbb
adc
sub
sub
lock
dec
mov
sub
or
subl
sub
out
or
test
cltd
bound
ret
andl
mov
push
mov
scas
les
in
mov
xor
and
and
movsl
out
out
fbstp
out
add
add
xor
sbb
lock
or
rolb
jp
add
mov
xlat
lea
xchg
or
les
mov
sahf
dec
or
jl
mov
and
mov
pop
loopne
orl
adc
mov
sbb
jae
or
test
popa
jnp
pusha
shll
cs
dec
push
xor
clc
outsl
cmp
adc
faddl
jl
cmpsl
popa
mov
orl
enter
mov
or
cmpsl
stc
divb
mov
jne
sub
push
pop
lds
iret
cmpl
sub
data16
and
mov
movsl
test
mov
inc
xor
xlat
and
sbb
xor
push
inc
xchg
adc
mov
mov
and
out
lods
int3
inc
test
popl
pop
dec
mov
cs
rclb
mov
aas
pop
inc
fidivs
mov
insl
testb
mov
in
cmp
sbb
insb
imul
push
mov
sbb
push
nop
mov
xor
nop
or
pop
ss
mov
in
xchg
add
pop
daa
push
add
push
pop
sub
test
loop
push
jle
pop
xchg
stc
sub
dec
push
mov
and
dec
inc
arpl
push
or
loop
dec
jnp
sbb
and
xchg
test
push
sbb
sbb
loope
mov
mov
sbb
or
jo
cmp
push
sub
cwtl
push
aad
lds
or
mov
lret
mov
movsb
cmp
int
rorb
sub
mov
sbb
loop
bound
stc
cmp
xor
outsl
pusha
fucomp
call
aam
push
jno
lea
fistpll
out
dec
dec
loop
xchg
xor
lret
jo
mov
arpl
fisubl
in
push
aam
ss
std
arpl
popf
leave
and
lock
mov
and
rcll
movsl
leave
inc
pop
aad
jp
ljmp
mov
push
in
inc
in
jle
mov
add
jmp
in
adc
jbe
adc
jl
xchg
push
inc
scas
outsb
outsl
sbb
dec
push
inc
call
push
add
cmpsl
aad
lret
and
popf
hlt
aas
jmp
jg
into
pop
pop
leave
cmp
int3
xchg
or
dec
xchg
cmp
mov
outsb
stos
push
jecxz
jg
repnz
lds
mov
negl
push
jecxz
mov
xor
lods
xor
mov
push
xchg
jg
inc
mov
clc
insb
and
jl
push
or
lret
xchg
fisubrs
jbe
test
int
aad
ds
inc
mov
push
dec
or
scas
ss
mul
xchg
clc
iret
pop
pusha
push
es
xor
fiadds
mov
jo
and
mov
pushf
sti
and
imul
sub
adc
rcr
xchg
int
xor
mov
push
decb
push
les
divb
pop
dec
inc
pusha
lret
in
and
xlat
mov
add
xor
push
insb
jge
push
gs
mov
fwait
adc
cmp
push
fisttps
stc
jge
xor
fistpll
fsubs
sbb
out
sbb
test
adc
dec
inc
arpl
sbb
and
test
mov
ret
jne
push
in
stos
dec
ficomps
aaa
repz
cs
test
sub
pop
mov
xor
push
inc
sbbl
call
dec
inc
jg
pop
cmp
test
inc
jo
push
jnp
les
jns
icebp
aam
mov
jl
sub
js
or
lods
mov
adc
xchg
jecxz
mov
cmp
mov
rcrl
sub
stos
out
adc
lret
loopne
hlt
push
pusha
adc
imul
jne
dec
sub
call
mov
sbb
icebp
in
in
push
inc
push
repnz
loopne
clc
push
sbb
mov
dec
mov
mov
xor
outsb
int3
fildl
in
stos
icebp
movsl
test
cmpsb
dec
sbb
xchg
sub
mov
inc
add
xchg
movsl
sub
pop
cs
popl
mov
dec
fsts
incb
cltd
loopne
mov
adc
ds
cs
xor
or
sub
jae
inc
bound
out
dec
in
sub
push
add
rcrl
mov
bound
fnstsw
test
outsl
sbb
or
jg
lret
or
xor
shll
aaa
sbb
out
pop
jle
xor
push
scas
fisubrl
int3
bound
xor
inc
push
mov
in
or
ss
lahf
dec
stos
adc
fiadds
pop
mov
inc
adc
cli
push
idivb
call
ja
shl
jno
or
mov
dec
addr16
inc
inc
sub
cli
out
xor
insl
test
xor
mov
xor
ret
lea
movsl
cs
and
mov
mov
dec
jbe
stos
sbb
mov
sarb
test
inc
inc
inc
mov
out
push
mov
movq
add
popa
cmp
imul
movsb
out
and
mov
push
ss
dec
aad
popf
xor
dec
mov
pop
cmc
mov
mov
push
pop
es
in
fsubrs
cld
lods
mov
sub
dec
push
test
dec
jnp
orb
rorl
push
jge
jne
movsb
jle
enter
pop
xor
push
sti
out
js
fnstenv
xor
pushl
dec
xor
xor
jne
popa
xchg
push
or
in
lea
dec
fnstenv
arpl
outsb
jns
jns
cwtl
and
mov
mov
pushf
jl
and
push
push
cmovs
and
addr16
or
inc
push
add
or
and
dec
push
push
lahf
dec
jle
mov
xor
fyl2x
loope
mov
add
mov
push
ljmp
add
xchg
dec
lds
and
and
pushf
push
jb
js
loop
test
xchg
mov
push
push
les
aas
enter
and
movsb
mov
imul
mov
jle
mov
mov
cli
into
pushf
mov
xlat
mov
cmp
int3
mov
cmp
xchg
push
and
mov
mov
std
dec
inc
mov
das
push
mov
iret
cmp
ret
stos
sub
ljmp
sti
fildl
push
mov
insb
nop
mov
jbe
lcall
or
sub
cmp
xor
cmp
lds
aas
in
mov
or
sbb
jmp
lahf
mov
xor
and
mov
xchg
aam
mov
xor
lahf
or
pop
push
clc
mov
mov
int3
loop
fcomps
pop
es
enter
pop
mov
adc
mov
fcomip
mov
dec
add
and
int
cmpsb
cld
test
push
push
aaa
jecxz
and
add
shll
xchg
adc
addr16
xor
in
out
pop
xlat
or
roll
jns
in
mov
or
daa
hlt
ss
rolb
insl
push
push
jp
fcmovnb
mov
int
dec
cmpsl
cli
movsl
lcall
gs
push
mov
xlat
pop
stc
xchg
xor
out
fisubrl
insb
sbb
jno
cmp
sbb
enter
faddl
ret
push
or
movb
mov
mov
jae
jl
xchg
outsb
pop
jp
jne
cmpl
add
or
jnp
adc
out
rcrb
out
inc
orl
in
cmp
pop
jne
xchg
xor
push
sbb
icebp
jno
mov
cmc
mov
lock
push
mov
xchg
or
imul
and
adc
sub
ja
mov
in
les
sub
int3
call
mov
jae
lds
fdiv
adc
add
repz
ljmp
pop
sbb
sub
cmp
and
ss
dec
cmp
jo
push
loope
scas
sub
orb
loop
pop
outsl
aas
xor
addb
fisubrs
stos
push
dec
fwait
fwait
xlat
gs
daa
mov
or
and
add
je
inc
jno
add
push
test
jb
test
test
and
andb
push
insb
sti
lahf
shl
std
push
mov
lods
sub
shlb
cmpsl
aam
fsubrl
das
inc
mov
push
pop
into
cs
in
or
sti
pop
outsl
andb
dec
cs
sti
push
out
mov
dec
xchg
scas
inc
mov
ret
je
fcomp
ljmp
xchg
cld
jle
or
jae
lcall
test
stos
sbb
sbb
or
sub
test
mov
and
out
jecxz
sbb
int3
ret
sub
ret
mov
jmp
push
pushf
dec
inc
lcall
sbb
movsb
jo
rorl
dec
loopne
in
test
roll
dec
and
aaa
push
push
dec
push
cmpsl
cli
sbb
sbb
cmpb
shr
xchg
xchg
lcall
lea
mov
sbb
callw
push
stc
add
addr16
mov
inc
lcall
sub
cmpsb
xchg
push
push
aaa
xchg
lds
rcrl
push
sbb
mov
loopne
mov
repnz
push
xchg
xor
sbb
scas
dec
insb
xchg
lock
dec
mov
repz
ret
sub
pushf
notl
sub
lock
dec
mov
cmc
push
jmp
mov
fisttpl
cmp
sbbb
push
int
sbb
out
inc
lds
ss
outsb
hlt
jne
xor
and
xor
js
mov
jno
sbb
mov
mov
loopne
and
cmp
dec
popf
shrl
xor
call
xlat
inc
insl
pop
idivl
enter
ljmp
or
pop
dec
movsb
pop
xchg
gs
xor
push
lods
outsl
mov
pop
rclb
or
popf
jmp
sbb
sbb
or
xor
fldcw
pop
jo
outsl
dec
cmp
test
cmp
xchg
and
cmp
lock
cmp
push
aaa
dec
aaa
and
jmp
push
sub
jp
adc
jle
mulb
cmp
pop
fwait
cmp
inc
jno
sbb
andb
lahf
mov
popw
arpl
xor
sti
cwtl
xlat
out
push
into
test
in
jbe
ret
pushf
insb
xchg
or
ret
jp
icebp
adc
add
loop
inc
cmpsb
inc
movsb
and
les
push
xor
add
test
pop
in
pop
ljmp
pop
adc
pop
push
mov
pop
or
xchg
mov
jmp
popf
mov
dec
and
adc
rcr
das
in
aas
pop
outsb
mov
mov
in
nop
mov
sbb
flds
sti
and
test
mov
mov
movsb
ds
stos
xchg
popa
and
adc
xor
mov
jns
xchg
movsl
lret
pop
pop
aaa
iret
mov
int
push
cmc
lret
into
or
movsl
ljmp
mov
or
lret
rorb
add
icebp
pop
cmp
jecxz
sub
push
jl
and
scas
out
add
sub
ficoms
int3
push
int
fnstsw
or
into
mov
dec
adc
mov
incl
sub
lods
loope
pushf
sarb
mov
ja
lahf
in
insl
repz
lods
pop
adc
ja
push
mov
xchg
ljmp
js
fisubs
inc
mov
pusha
sbb
fsubl
out
cmpsl
orl
dec
dec
pop
ss
ret
or
sub
cwtl
xor
inc
and
jne
int3
stos
inc
mov
cmp
test
addr16
jp
fiaddl
inc
std
or
sbb
loopne
fidivs
int3
aam
lret
pop
hlt
cmp
jge
jno
lret
std
mov
lock
mov
pop
popa
or
jmp
inc
mov
mov
push
and
add
inc
inc
out
iret
pop
xlat
mov
add
in
push
jns
xlat
mov
rcrb
push
out
test
adc
jae
stos
movsb
ret
test
andl
loope
mov
mov
stos
insb
shl
jno
mov
rolb
mov
aad
jg
test
dec
jns
jecxz
dec
push
xchg
mov
xlat
push
push
adc
xlat
pop
loope
arpl
jg
xor
mov
sub
les
ljmp
fists
cmc
push
inc
ret
test
movsl
and
lret
and
jge
push
xor
sub
add
test
and
ret
cmp
mov
and
dec
and
fisubs
xchg
jmp
mov
iret
mov
pop
fwait
shll
cli
cmpsl
fnstenv
incl
dec
pop
sbb
pop
mov
adcl
test
xchg
ret
push
negb
sti
adc
in
mov
pop
mov
xor
push
ret
roll
sbb
sub
sub
shlb
les
std
push
jno
ret
bound
fiadds
adc
jbe
mov
fs
stos
rcrl
jge
movsl
insb
ss
cli
hlt
aas
push
loope
loope
cmp
insl
sub
aaa
push
or
in
jno
clc
cmpsb
xchg
inc
xor
sbb
mov
mov
mov
push
add
jae
dec
lret
outsl
xlat
push
fstps
push
cld
sbb
mov
mov
mov
cltd
es
mov
stc
jae
and
add
jne
inc
or
sarb
enter
ja
cmpl
loope
xchg
outsl
push
xchg
xchg
adc
std
icebp
adc
mov
jl
jns
scas
jmp
jns
pop
aaa
pop
mov
xor
ds
mov
dec
out
adc
clc
inc
mov
int3
xor
lret
mov
xchg
inc
ss
xchg
lcall
dec
arpl
xorb
ds
repz
push
mov
xor
sahf
cmp
and
adc
mov
sub
or
mov
imul
and
jg
jg
neg
cld
sahf
test
imul
and
aas
pop
aaa
xor
and
arpl
stos
jb
movsb
adc
mov
mov
bound
xor
stos
cld
filds
neg
inc
jo
cmp
sahf
fldenv
jno
aas
add
jae
xchg
sbb
scas
pop
imul
loope
gs
jmp
scas
arpl
icebp
sbb
movsb
jbe
popf
sub
das
push
in
push
sbb
sbb
test
cmpsb
cmp
fldl
cmp
xchg
or
insb
mov
stos
fbstp
and
sahf
repnz
xorl
outsl
push
sub
nop
and
xor
iret
cwtl
enter
loop
adc
cmp
dec
fs
sti
cmpsb
jmp
cmp
movsb
jle
rorl
mov
and
out
lcall
mov
or
adc
outsl
jno
sub
or
mov
pushf
pusha
mov
and
into
xchg
mov
sahf
or
xchg
je
sar
cld
push
adc
js
movsl
mov
mov
popf
insl
call
mov
adc
pop
cmp
jge
outsl
mov
ret
jns
sub
loop
mov
and
sti
cmc
fcomps
mov
ds
fidivrl
repz
int3
jp
loopne
mov
and
pop
jns
xor
mov
mov
and
fldt
lods
jge
roll
loop
mov
cwtl
mov
mov
xchg
jmp
mov
push
sti
mov
sub
mov
jno
js
adc
or
sbb
out
stc
iret
out
lcall
pusha
push
test
loope
jo
sub
divl
cmpsl
ss
or
fildll
or
jns
es
popa
fs
and
mov
xchg
aad
add
test
mov
xchg
adc
jl
loop
or
add
xor
int
ret
ret
ret
dec
add
fimuls
jl
jl
imul
mov
loop
lret
sbb
outsl
xchg
mov
repnz
bound
fcompl
xchg
add
sbb
ljmp
pop
fwait
cmpsb
js
popa
test
fxch
stos
dec
mov
pop
xchg
jl,pt
jg
sbbb
jecxz
mov
test
fnstenv
lods
xlat
sbb
xlat
push
sub
scas
and
or
mov
jmp
and
xor
cs
arpl
cwtl
adcl
mov
ja
imul
sub
fnstsw
pop
jmp
test
push
mov
lret
sub
jmp
add
loop
int3
out
mov
or
mov
es
stos
sub
sarb
dec
out
ljmp
mov
enter
fsubl
leave
dec
add
jnp
jne
aad
in
jl
fisttps
lahf
push
sub
sbb
dec
mov
or
cs
rcl
je
or
popa
addr16
sub
push
mov
ds
rcrl
add
addl
clc
daa
xchg
call
cmpl
jo
es
mov
xor
cmp
inc
aaa
insb
or
xchg
xor
hlt
pop
fs
xchg
adcl
in
call
insb
scas
xchg
dec
out
jne
fcompl
mov
push
ja
pop
or
cli
mov
add
add
pop
adc
add
inc
inc
std
xchg
add
adc
adc
clc
cmpsb
loope
mov
rolb
mov
mov
in
arpl
mov
jge
xor
dec
std
aas
in
adc
add
xor
daa
cmp
roll
sub
mov
dec
clc
add
adc
add
les
adc
or
and
mov
dec
lret
mov
inc
push
cld
pop
mov
mov
push
mov
mov
ja
clc
jno
mov
xor
push
mov
stos
pushw
fwait
into
fwait
outsb
adc
outsb
pop
jmp
pop
add
cmpsl
lods
dec
aam
cltd
cmpsb
and
mov
cld
mov
inc
loope
push
pop
aad
pop
pop
lea
jg
mov
adc
push
enter
jge
stos
or
dec
mov
or
je
mov
stos
push
xchg
sub
adc
mov
push
sbb
icebp
stc
daa
xor
push
in
loope
add
add
inc
test
jns
insb
cwtl
inc
cmp
xchg
addr16
roll
icebp
lds
mov
lcall
pop
iret
mov
jp
pusha
orb
ret
sbb
repnz
ret
and
idivb
mov
mov
js
insb
lods
cmpsl
movsl
pusha
or
ja
in
dec
mov
loope
mov
ret
je
pop
cmpsl
jbe
adc
les
aad
jl
xchg
fstpl
inc
aaa
jg
push
sub
xchg
gs
lahf
push
popa
mov
jns
adc
daa
mov
scas
and
repnz
or
pop
fnstcw
iret
pop
sub
add
or
jge
loope
faddp
mov
sub
and
loope
mov
cmp
shl
sti
ret
lcall
outsb
daa
or
flds
sub
xorb
inc
sti
dec
push
cmp
pop
leave
fistpll
ss
sbb
cmp
jb
inc
enter
xor
js
jl
pop
inc
ret
mov
dec
test
lret
ret
cmpl
cli
mov
out
out
cmp
and
pushf
xor
lret
hlt
mov
fnstcw
jp
add
push
pop
and
mov
mov
rcrb
or
hlt
adc
cmpsb
adc
testl
mov
mov
push
jge
dec
xchg
out
mov
fstps
fstpt
dec
xor
jge
je
je
movsb
fs
dec
leave
js
xor
fwait
push
add
pop
pop
mov
sub
fucomip
imul
xchg
ds
mov
mov
cmpsb
adc
and
and
xor
insb
or
stc
mov
push
stc
xchg
push
mov
mov
pop
dec
inc
cmpsl
cld
dec
sbbl
push
jle
mov
inc
pop
insb
movsl
pop
jmp
jecxz
inc
imul
clc
inc
lods
cmp
cli
loopne
cmpsl
or
sub
cmp
jge
cld
add
js,pn
push
or
pushf
imul
imul
jg
loopne
sub
sarl
ljmp
in
loopne
pop
add
sub
mov
sbb
pop
xchg
lret
in
adc
das
pop
xor
outsl
fnstcw
pop
imull
or
bound
xor
aaa
inc
addr16
inc
scas
sub
cmp
sub
test
insb
pop
and
cmp
outsb
cmp
test
adc
pop
mov
das
xchg
cli
push
mov
and
xor
mov
mov
mov
fldt
popa
stos
cli
xchg
cltd
dec
hlt
and
and
xor
ja
insb
mov
outsb
int3
movsb
inc
or
test
xchg
adc
xchg
es
scas
push
test
pusha
jl
sub
pop
rcrb
gs
andb
xchg
cmpsb
push
dec
or
push
xor
mov
add
rolb
jmp
aaa
xchg
add
jge
mov
fxtract
and
ds
jg
aaa
test
lods
and
cs
mov
pop
je
push
in
xchg
xchg
imul
enter
ljmp
loopne
cld
movsl
rorb
lret
roll
or
in
stc
and
pop
pop
xlat
inc
outsl
mov
sti
loop
xchg
loop
inc
pop
movsl
inc
repz
jmp
xchg
adc
xchg
mov
in
sbb
out
jo
inc
sbb
sbb
in
xchg
add
dec
sub
jne
mov
lods
mov
je
sub
sbb
out
rcr
sub
add
outsl
lods
mov
jecxz,pt
imul
ljmp
sbb
stos
adc
or
sub
xor
pop
out
lcall
popa
mov
jmp
dec
fistpll
sahf
movsl
pusha
xchg
repz
dec
out
push
mov
mov
push
pop
out
cltd
dec
push
dec
subb
aam
add
inc
or
movb
adc
dec
mov
cmp
and
test
mov
sub
or
add
sub
cwtl
test
or
mov
cwtl
ss
loope
fadd
xchg
es
push
ss
push
aam
xor
cmpsl
negb
movsl
fimull
sub
repnz
cli
lods
ljmp
sahf
fists
subb
sub
mov
ja
aad
test
sub
mov
mov
mov
enter
sub
inc
out
push
dec
mov
add
jnp
jg
sahf
mov
fs
or
xor
ss
sbb
add
adc
roll
sbb
xchg
mov
js
insb
jns
je
lcall
out
xor
testl
dec
je
nop
add
mov
jno
imul
xchg
xchg
shll
jp
cmp
loope
lds
ret
mov
xlat
js
dec
or
lods
mov
add
dec
sub
jl
call
xchg
mov
lds
jne
les
icebp
cwtl
cmp
mov
test
addr16
roll
mov
loopne
adc
cld
jb
outsb
push
cld
call
sbb
cwtl
jno
cmc
dec
mov
lret
pop
ljmp
sti
data16
and
jg
xchg
gs
fsub
fwait
mov
mov
bound
movsl
bound
test
movsb
inc
sub
mov
mov
cmp
test
cmpsl
lret
jmp
xor
mov
cmp
shlb
in
add
scas
notb
into
jne
rcrl
jecxz
xor
pop
dec
dec
enter
and
add
inc
jno
dec
inc
in
mov
push
ret
ja
xor
mov
mov
inc
loopne
imul
dec
mov
andl
pop
fsub
sbb
push
movsb
jb
sahf
jmp
mov
aaa
loope
cwtl
bound
or
loopne
dec
pop
dec
dec
xor
cltd
orb
pusha
push
into
cmp
add
fiadds
adc
push
jge
push
test
cwtl
jae
ss
clc
inc
scas
mov
orb
sbb
je
ret
ficomps
mov
sti
aaa
xlat
popa
pusha
xlat
pusha
test
xor
fimull
addr16
test
stc
icebp
xchg
pop
push
movsl
cmp
loope
cli
xchg
popl
or
cmp
inc
jmp
push
mov
cmp
dec
pop
inc
push
nop
leave
in
dec
dec
lahf
dec
push
scas
les
jne
push
xlat
sub
or
mov
aas
jle
imul
jno
push
pushf
icebp
lea
leave
icebp
test
cltd
dec
pop
lods
mov
insb
cmpsl
insl
imul
icebp
add
pop
mov
jbe
pop
cmpsb
inc
push
inc
add
ds
fwait
push
cmp
mov
pop
lahf
in
mov
pop
jg
mov
add
cmp
push
and
dec
jecxz
loopne
out
in
add
lret
insl
out
dec
mov
out
cmc
mov
mov
cmp
push
mov
ja
add
cwtl
inc
sub
push
jae
inc
shlb
lahf
pusha
adc
mov
stos
inc
rolb
lret
jae
mov
pop
popf
incb
fstps
and
insb
or
test
cmpsl
lcall
out
icebp
loope
das
ljmpw
or
sbb
sarb
adc
cmp
sbb
icebp
jp
loope
sti
hlt
das
xchg
dec
sbb
dec
and
mov
imul
hlt
loopne
xor
lcall
pop
roll
mov
rclb
xorl
adc
ret
ret
pop
ljmp
xlat
xor
jno
cmp
enter
arpl
out
add
or
imul
cwtl
and
cmp
pop
pushf
arpl
sbb
stos
sti
sbb
test
lret
sarb
fiaddl
xchg
xor
test
xchg
jno
or
stos
sub
adc
shrb
xor
ljmp
jns
fmull
icebp
xchg
pop
in
loopne
xchg
or
shlb
push
cmp
stos
cltd
and
orb
mov
ds
xchg
pushf
mov
data16
in
sbb
shl
cmp
mov
int3
push
cwtl
xor
pop
into
xchg
idivl
lea
out
mov
or
xlat
int3
pop
dec
loopne,pt
pop
in
sbb
sub
mov
hlt
out
inc
cmp
cs
and
sti
jge
insb
mov
das
push
xlat
pop
xor
out
xchg
aaa
adc
sbb
aad
jns
or
dec
or
mov
cmp
test
cmp
xchg
push
aaa
into
xor
jbe
mov
shll
sarb
fistpl
add
dec
lock
js
pop
pop
pop
dec
jecxz
inc
adc
test
add
cmp
mov
xor
int3
jl
outsl
cld
inc
mov
pop
call
pop
addb
mov
out
xchg
or
xchg
iret
mov
mov
fsts
push
in
insb
stos
test
jbe
mov
popa
pop
fistpll
mov
xlat
xchg
out
inc
cmp
gs
orl
psubw
scas
pusha
std
int
ds
aam
aam
mov
xchg
jle
mov
imul
pop
add
lea
xor
jnp
cmp
imull
fsub
loope
pop
sahf
sbb
mov
insb
ret
cmp
movsb
lock
cmp
xchg
jmp
js
pushl
mov
cmc
sti
push
mov
and
pusha
jnp
adc
xor
dec
outsl
fs
xchg
daa
xchg
mov
shll
pop
sbbl
or
lock
add
sar
cmp
push
mov
inc
mov
adc
push
inc
xor
mov
pushf
pop
xchg
mov
xchg
inc
shrl
pop
icebp
and
lods
and
sbb
jnp
pop
inc
or
icebp
push
shll
paddd
sub
adc
rcll
rorl
leave
test
and
btr
lea
jge
test
rcrl
cmp
mov
inc
sahf
nop
sbb
pop
or
decl
pop
inc
cmp
add
out
xchg
xor
xchg
jg
sub
inc
call
nop
jo
sbb
push
sti
dec
sub
imul
in
inc
out
cmpsb
push
fwait
xor
andb
inc
iret
sbb
ss
sub
es
test
adc
flds
or
xor
sbb
int3
adc
das
dec
test
divl
cmpsb
pop
or
add
notb
addr16
daa
add
xor
cmpsl
sub
dec
xchg
adc
dec
dec
xor
je
in
pop
dec
shrb
mov
jae
enter
push
movsl
cmc
pop
test
test
push
jp
insl
xor
or
stos
and
cli
mov
xchg
xchg
mov
jmp
rorl
testb
int3
cmp
adc
push
subl
adc
test
int3
inc
add
adc
test
dec
adc
jb
cld
add
ljmp
mov
cmp
push
xor
ds
cmc
cs
movb
negb
add
cmpsb
sbb
cs
xor
push
or
jg
inc
int
pop
jge
in
fists
mov
xchg
pusha
mov
mov
aam
xchg
je
ret
or
mov
inc
fwait
inc
call
popf
dec
push
push
arpl
int
lahf
test
adc
popa
pop
stos
aam
and
mov
data16
icebp
mov
fbstp
jae
xchg
movsl
andl
repnz
add
mov
iret
adc
xor
test
mov
xchg
mov
popf
or
or
cmp
sbb
movsl
cmp
xchg
add
movsb
imul
jle
movsl
jecxz
cmp
sub
out
add
adc
sbb
stc
inc
push
loopne
sti
movsl
cmp
mov
jle,pt
pop
push
shl
xor
or
lahf
cs
xor
mov
dec
xor
aas
insl
xor
inc
sahf
inc
jnp
cld
xor
popf
sbb
mov
mov
bound
lods
and
test
movsl
cld
pushf
cltd
xor
xlat
lahf
mov
insb
xchg
test
push
push
cli
and
xlat
add
mov
enter
aas
cmp
inc
xchg
shrb
cmp
test
fadd
sbb
clc
inc
mov
sbb
out
std
insl
pop
add
and
push
mov
leave
aad
add
or
test
das
cs
lds
push
cmpsb
and
jnp
xchg
in
and
fimuls
xchg
aaa
loope
jno
jmp
or
idiv
loopne
jecxz
int
jnp
mov
xor
or
cmp
pop
pop
pop
es
out
jbe
mov
push
ljmp
xchg
lods
test
in
push
dec
jmp
pop
iret
adc
jns
xchg
subl
cmpsb
adc
cmpsb
std
in
mov
sub
shlb
nop
dec
add
adc
xor
rclb
mov
cmp
mov
lret
add
fsts
fcmovbe
xchg
in
rorl
pop
incb
aam
clc
cltd
add
mov
loopne
xchg
inc
sahf
pop
daa
pop
adc
pop
mov
xchg
inc
dec
movsb
sbb
out
cmpsl
aam
or
pop
stc
pushf
jmp
or
fsubrs
cltd
test
pop
push
jecxz
sti
ja
fs
add
mov
cwtl
push
and
sbb
ret
hlt
rolb
mov
jbe
jno
insb
xchg
xchg
mov
mov
loopne
cmp
loop
in
hlt
sahf
fidivrs
scas
lock
sub
mov
idivl
mov
jbe
pop
fildl
mov
mov
or
mov
adc
jo
sub
dec
push
leave
std
adc
bnd
inc
mov
jne
inc
roll
jp
sub
enter
xchg
hlt
fwait
int3
xor
in
repnz
adc
ja
aam
xor
leave
addr16
mov
pop
add
fnstsw
push
rdmsr
in
cltd
or
xchg
jmp
lcall
cld
pop
adc
shlb
fs
add
jb
push
mov
jle
cmp
shll
ret
imul
xor
adc
sbb
xchg
sbb
inc
fs
jg
mov
fistl
inc
je
cmp
scas
mov
add
test
jge
push
push
fwait
lcall
in
sti
stc
js
je
test
sub
push
call
add
out
push
cmp
xor
subb
push
mov
gs
dec
outsb
int
lcall
pop
pop
sbb
mov
test
notb
mov
fs
fcomps
or
shl
ror
jle
and
insb
mov
andl
daa
ja
mov
adc
je
adc
add
push
into
scas
dec
adcl
sti
mov
call
gs
or
rol
dec
inc
mov
mov
inc
jno
stc
push
push
pop
jae
shrb
lods
stc
mov
int
push
andl
xchg
test
cwtl
inc
mul
push
sbb
xor
das
movsb
cmp
lcall
cmp
gs
mov
lock
and
iret
cmp
jge
sbb
jnp
movsl
push
test
xchg
push
xchg
ror
lods
or
sbbb
xchg
mov
or
pop
sub
mov
pop
mov
scas
inc
lahf
addb
in
gs
cld
das
jb
push
in
lods
cli
pop
mov
out
es
cli
mov
flds
outsl
scas
loop
outsb
xchg
test
sub
clc
jns
or
mov
pop
and
mov
sub
push
add
push
mov
dec
ds
in
jecxz
neg
insb
cli
jae
add
leave
movsb
or
cli
adc
pop
nop
and
push
pop
popa
dec
in
and
in
sarl
sub
mov
dec
jbe
pop
xchg
add
dec
push
js
sub
sub
dec
jb
xor
rorb
lock
insl
outsl
fsubl
sti
sub
mov
cmp
add
xchg
inc
pop
push
dec
ret
mov
xor
fwait
jl
aad
sub
cmpsb
orl
add
push
pop
sbb
xor
xchg
jo
in
pop
and
push
mov
adc
and
and
addl
and
push
cmpl
adc
minps
mov
xchg
adc
in
movsb
push
into
adc
push
out
sub
add
mov
testl
lds
lods
mov
mov
or
adc
in
rol
and
cmp
jne
or
add
inc
arpl
movsl
or
or
inc
fmulp
inc
shl
div
out
xor
nop
jle
out
fisubrs
sub
pop
xlat
jmp
out
stos
int
shrb
dec
dec
je
xchg
stos
outsb
ret
inc
sbb
ljmp
mov
jb
dec
int
mov
pop
in
add
inc
xchg
clc
sahf
sub
test
sbb
sub
mov
mov
cwtl
aas
pop
mov
jbe
xchg
xchg
inc
xorl
xchg
test
and
ret
test
add
out
enter
xor
xchg
mov
outsb
cli
push
iret
movsl
mov
mov
push
pushl
insl
inc
xchg
or
add
xchg
enter
movl
out
sbb
movsl
jl
cmpb
mov
aad
lcall
rcrb
push
das
mov
icebp
add
sbb
int
aaa
push
sub
lds
push
into
sbb
gs
rcr
cmpl
dec
dec
in
clc
pop
ljmp
imul
in
dec
shlb
xchg
push
shlb
test
jnp
push
cld
sbb
mov
in
mov
fdivs
es
divb
and
sbb
push
mov
mov
sbb
into
mov
aaa
inc
std
mov
pop
mov
dec
or
and
jns
pop
faddl
push
push
lods
inc
rclb
test
xchg
loop
sbb
mov
in
xor
pop
sbb
in
mov
mov
sbb
push
pop
ljmp
xor
jae
sub
imul
jmp
les
adc
xorps
cltd
push
gs
cmp
mov
scas
rcr
ja
inc
mov
mov
ljmp
jns
clc
mov
pop
addr16
push
sub
dec
mov
fdivr
and
pop
or
lods
jo
dec
loop
loopne
rcrl
imul
test
mov
add
in
lock
data16
inc
lods
add
inc
mov
sahf
nop
pop
xlat
dec
lods
repz
sub
inc
sarb
mov
inc
imul
js
outsb
shl
inc
lods
pop
cmp
mov
out
cmp
stos
icebp
pop
dec
lods
iret
addl
mov
sahf
mov
data16
push
gs
ja
and
out
dec
xchg
lahf
xor
mov
xor
out
in
js
or
aaa
orl
aam
pop
or
dec
das
movsl
lret
mov
mov
mov
cmpsl
insb
js
xor
xor
jge
stc
js
mov
lds
sub
lahf
sub
popf
xor
std
loope
out
lret
inc
in
sub
sbbl
fcmovbe
sub
add
fcmovbe
or
jge
jmp
test
sbb
aaa
xchg
xorb
fwait
test
addr16
jl
jne
sbb
icebp
adc
and
scas
lods
pusha
nop
adc
lret
cld
pop
dec
enter
lahf
pop
les
push
gs
xchg
in
xchg
loopne
sbb
pop
jg
mov
pop
popa
fldcw
fwait
notl
inc
loope
pop
jle
jno
sbb
pop
dec
inc
mov
loop
aaa
pushl
lods
clc
mov
outsb
divl
xchg
pop
and
cld
sbb
push
mov
cld
jp
xor
mov
int3
and
sub
adcb
or
cmpb
sbb
lds
and
movsb
or
rorl
popa
xchg
out
pushf
clc
popa
add
xor
sub
dec
cmpsb
push
movsl
mov
nop
cmpsl
insb
cs
es
aam
push
test
cmp
mov
loop
pop
lahf
mov
lret
frstor
sub
jmp
pop
fldenv
icebp
icebp
mov
and
pop
mov
or
mov
jbe
xchg
stc
out
bound
and
into
aaa
push
imul
adc
js
mov
xchg
adc
cmc
sbb
pop
cmpl
jae
adc
mov
inc
adc
ja
push
aaa
and
xchg
mov
test
mov
fwait
into
mov
xchg
pushf
fstl
hlt
jmp
mov
loopne
ljmp
xor
jmp
and
ljmp
xchg
sub
sub
xchg
loop
add
sbb
xchg
adc
xor
test
sti
sub
sub
xlat
push
push
dec
mov
sbb
sahf
sub
dec
loopne
stos
in
cmp
adc
inc
dec
insb
adc
push
sbb
sarl
xor
mov
hlt
pusha
mov
inc
mov
lahf
psraw
rcrb
lcall
loopne
or
jg
and
shll
inc
in
jmp
cwtl
xlat
pop
pushf
xchg
lods
xchg
jg
lock
mov
xchg
jo
xchg
dec
jae
ljmp
in
add
pusha
or
sbb
jp
jb
std
sub
popa
jno
push
pop
divb
or
jo
push
nop
rcrl
xor
ljmp
sub
addr16
mov
fcmove
mov
add
ljmp
pop
mov
mov
jg
lock
add
dec
mov
sbb
pop
cmp
sarl
push
in
pop
outsb
sbb
aaa
xchg
xchg
dec
mov
mov
inc
fwait
and
pop
cld
aaa
mov
and
test
sti
divb
pop
xchg
dec
sub
add
and
and
push
movsl
adc
jnp
ds
dec
gs
and
sbb
cmp
fs
test
hlt
insl
imul
sbb
push
daa
cmp
push
adc
jmp
jns
dec
mov
in
imul
xlat
xchg
inc
jbe
out
push
mov
adc
sub
mov
push
lods
lods
or
dec
lea
popf
hlt
addb
xor
aas
mov
pop
mov
out
cmp
movsl
xchg
dec
stos
dec
lds
mov
mov
adc
mov
mov
inc
les
or
lret
cmpsb
mov
out
out
jl
fldenv
jae
adc
aaa
bound
js
xchg
ljmp
push
ja
leave
sahf
jno
fisubs
adc
and
inc
pusha
xor
mov
mov
and
ja
jge
and
pop
mov
hlt
lahf
and
mov
les
testl
data16
fldcw
jp
cmp
pop
fwait
jb
stc
inc
flds
jg
jecxz
fsubl
mov
push
lock
or
push
push
popa
push
or
push
pop
js
jmp
inc
clc
stc
jo
sub
add
xor
ss
sub
sub
cmp
mov
inc
adc
fwait
push
pop
mov
insb
cltd
std
mov
push
sti
daa
psubusb
cmc
sti
ljmp
xchg
lods
popf
add
adc
fdivl
les
push
inc
ret
pop
xchg
cmpb
mov
adc
dec
aas
pop
jg
xor
xor
imul
pop
pop
adc
jbe
xor
dec
loopne
leave
mov
das
ret
mov
stos
das
adc
xchg
or
add
pushf
sbb
mov
mov
bswap
dec
lret
idivl
inc
cmp
mov
mov
jmp
jae
jno
stos
inc
ljmp
mov
repnz
xor
xlat
imul
push
xlat
hlt
pop
sarl
aad
or
das
xchg
jg
clc
out
jg
bound
je
shlb
iret
movsb
dec
dec
jge
add
sub
jb
sahf
addr16
cmpsb
sbb
mov
mov
fidivs
or
sub
pop
dec
jnp
ljmp
test
leave
inc
ss
xlat
cs
jnp
jns
std
push
lret
outsb
movsb
cmp
mov
pushf
aam
inc
fs
mov
incl
clc
pop
jno
popa
sbb
aas
imul
dec
push
jge
jge
adc
xor
in
adc
push
sbb
in
sub
and
ret
scas
mov
mov
xlat
ja
xor
lahf
sbb
xchg
rcrl
ja
testl
fadds
fdivs
add
lock
cwtl
pop
sub
mov
movsb
stos
add
cwtl
pushf
lods
insl
cmove
in
xchg
stos
pop
xor
in
inc
jl
mov
or
lcall
lds
lods
pop
pop
mov
or
add
das
dec
inc
lds
test
lods
stc
jo
out
stc
pop
xchg
imul
mov
dec
int
pop
sbb
and
jp
fwait
add
mov
and
sub
adc
stc
cmp
fnstcw
pop
lods
daa
fwait
adc
cmp
or
dec
mov
sub
inc
add
lahf
cli
mov
aam
dec
test
in
leave
mov
add
push
nop
lods
sub
cmpsb
adc
cmc
int3
das
sbb
dec
or
inc
dec
or
lods
clc
push
stos
dec
lahf
popf
in
insl
sbb
mov
vdivss
jle
cmc
add
mov
flds
pop
fldt
dec
imul
mov
mov
jb
pop
cmp
pop
adc
divb
cld
test
adc
out
and
xchg
lea
mov
inc
fists
shlb
sahf
sar
mov
mov
dec
add
lret
subl
jne
cmp
adc
les
loopne
dec
cmpsl
scas
add
pop
jb
sub
mov
les
rclb
push
jl
insb
dec
or
xor
push
sbb
pop
rorb
fidivrl
sub
in
ja
out
fldcw
fst
es
push
or
inc
mov
das
iret
ja
push
sbb
pop
iret
sbb
jl
jnp
imul
scas
inc
xchg
sub
mov
xor
std
frstor
xor
push
inc
pop
or
or
outsb
jl
xor
jns
out
das
testb
mov
add
nop
push
cmpsl
xchg
fs
sbbl
lret
cld
mov
lret
call
xor
pop
imul
mov
xchg
inc
adc
xlat
or
icebp
sbb
dec
mov
xor
in
popa
push
loope
mov
dec
sub
stos
ret
loop
mov
pop
mov
iret
in
xchg
jo
mov
pop
adc
push
push
dec
std
lcall
xor
mov
fdivr
fstpt
dec
and
xchg
inc
cmc
add
popf
jge
lock
adc
add
sub
mov
test
adc
test
cmpl
push
dec
xor
pop
mov
push
insb
fstl
jl
sahf
cmp
sahf
and
pop
dec
int
ja
or
jne
sbbb
xchg
add
test
insl
popa
pop
mov
or
inc
out
and
and
sub
pop
lahf
test
inc
loop
js
xlat
jp
jge
psubsb
dec
cmp
mov
addr16
addr16
jno
cld
inc
arpl
negb
xchg
mov
cmc
jp
or
mov
hlt
jae
mov
jae
cmp
dec
pop
mov
inc
mov
ss
ja
stos
in
mov
adc
loopne
mov
jae
dec
jne
dec
or
dec
add
add
repz
dec
mov
outsb
jb
repz
out
das
and
sbb
aad
and
icebp
xor
out
mov
imul
sbb
sub
mov
por
test
pop
inc
iret
jg
cmp
fldt
sub
adc
lds
rolb
fwait
mov
inc
push
adc
lods
xchg
sbb
jne
xchg
insb
test
dec
bound
mov
cmp
repz
xchg
insl
xor
inc
jbe
sbb
dec
push
jns
xchg
xchg
inc
negl
add
push
jo
push
in
dec
xchg
cmp
daa
add
mov
lock
xlat
xor
fsubrl
dec
mov
cltd
adc
addb
stos
imul
xchg
sbb
imul
push
mov
push
mov
shlb
or
iret
rolb
lcall
loope
aad
rcrl
xchg
out
test
insl
add
jns
push
cmp
fwait
lret
jne
inc
mov
cmp
out
cmp
into
leave
push
mov
in
add
incb
mov
stc
fdivrl
cmp
push
cmpsl
lock
dec
push
arpl
xor
mov
das
dec
sub
cld
fisubs
lcall
cmc
pusha
rorl
push
js
sub
mov
adc
pop
shll
or
xor
xchg
jnp
incl
stos
repnz
dec
inc
pop
arpl
pop
cld
adc
andb
xadd
cmp
mov
pusha
jo
shl
push
or
push
mov
aas
lock
and
lret
add
and
pushf
call
fs
cli
addr16
push
mov
cmp
mov
clc
adc
nop
and
out
jae
fcom
xchg
or
lret
shlb
xchg
xchg
vminsd
dec
inc
inc
pop
add
nop
shlb
jecxz
testb
xor
xchg
int
sbb
sub
add
test
shr
imul
ret
and
mov
dec
cmpsl
insb
call
or
in
adc
mov
leave
jecxz
add
sar
pcmpeqd
mov
cmp
xchg
jo
cmc
cs
jge
mov
stos
loop
out
scas
cwtl
je
and
pop
jne
adc
fists
popf
int3
movsl
sbb
jp
ret
repz
dec
dec
and
add
jae
jge
xchg
jecxz
push
popa
fidivrl
shlb
aas
gs
out
cmp
push
mov
arpl
mov
mov
stos
jp
cld
sahf
icebp
test
call
imul
add
mov
push
inc
xchg
scas
mov
shl
cmp
movsb
in
pop
movsl
loopne
outsb
in
iret
arpl
cwtl
cltd
sbb
ret
mov
sbb
dec
loop
xchg
scas
push
mov
mov
cmpsl
sbb
jg
fstps
mov
jg
and
test
imul
addb
push
testb
sbb
fwait
dec
out
ja
daa
add
shll
sub
dec
push
fisubl
cltd
xchg
aaa
sbb
xchg
test
adc
ret
rcr
and
inc
cmpb
aaa
adc
dec
xor
mov
inc
popf
add
pop
inc
push
rolb
inc
sub
aas
mov
sub
je
push
jae
imul
popa
mov
cmp
add
cwtl
mov
ret
icebp
jnp
xor
inc
push
fdivrs
fsubl
and
xor
std
es
add
pusha
scas
shrl
lret
int
out
jecxz
inc
call
fucomip
jl
lods
mov
sbb
dec
mov
psadbw
nop
cmp
and
jecxz
addr16
or
xor
xor
aas
pop
lea
pop
fldcw
or
cmpsl
xchg
bound
mov
mov
ret
out
add
or
xor
and
je
sbb
sbb
xor
cmc
iret
std
cmp
out
cmc
fisubrl
sbb
add
push
les
xchg
or
mov
mov
adc
pop
and
pop
loope
sbb
popa
jae
inc
rcl
push
ljmp
mov
lea
xchg
xchg
pop
add
lcall
sbb
add
std
cmp
daa
cmc
cmp
roll
add
and
add
ret
es
jnp
mov
dec
insb
popf
shll
repz
sbb
mov
mov
out
enter
inc
notl
inc
jo
xor
dec
out
test
lods
add
sbbl
out
mov
sbb
push
cli
inc
popa
ds
fldl
adc
pop
dec
bound
shll
adc
and
cli
xor
sarb
imul
pop
les
xor
push
sub
cli
leave
dec
push
or
jg
xor
xlat
pusha
in
add
add
out
or
fisubl
push
mov
xor
je
lds
cmp
enter
call
rcl
cmp
mov
or
dec
enter
pop
lret
push
and
shrb
jmp
ret
cwtl
mov
stos
add
cmp
std
insl
lock
ds
scas
cmpsb
cwtl
mov
dec
andl
pushf
fmuls
inc
and
xchg
sub
movsl
call
scas
enter
dec
rolb
adc
out
movsl
jecxz
movsb
push
add
and
test
push
cs
or
lea
cmpsl
inc
test
dec
repz
and
int3
mov
xor
jo
mov
inc
or
int
pop
cld
loop
mov
xchg
mov
daa
cmp
xchg
aad
adc
sub
jae
aas
jle
movsl
dec
orb
fmulp
and
jb
loop
es
nop
popa
and
ss
dec
ret
inc
fstps
xchg
sti
mov
xor
out
mov
sbb
bound
or
arpl
xchg
lahf
das
jo
ljmp
sub
pop
ja
or
in
leave
and
add
push
das
cmc
inc
fildll
movsl
hlt
pushf
dec
sub
cmpb
mov
fs
pop
cmp
int3
dec
fnsave
test
dec
pushl
daa
cmp
or
iret
push
xchg
dec
out
iretw
call
es
cmpsl
sub
add
adc
jo
icebp
mov
cmp
scas
pop
push
icebp
lahf
mov
aad
dec
xchg
into
mov
cmp
push
lods
push
scas
mov
popf
sub
mov
lea
test
pushf
mov
cmpsl
mov
les
pop
cmp
jno
subl
gs
sbbb
test
and
aas
jbe
dec
xor
lret
adc
leave
aaa
nop
ret
pop
mov
enter
fnstsw
in
fbld
mov
ja
jo
outsb
mov
lahf
pusha
xchg
or
mov
sub
lret
ret
push
jae
and
cmpsb
lds
movsb
icebp
or
mov
inc
mov
icebp
mov
es
dec
aam
insl
icebp
or
std
cmp
cmp
cmpb
mov
arpl
jmp
jle
sub
mov
int
je
push
popa
sahf
imul
jno
outsl
jne
repz
pop
mov
ficoms
jo
stos
test
lock
popf
xabort
sbb
sbb
push
testb
pushf
sub
insb
or
aad
sahf
imul
fbld
cli
and
push
sbb
mov
orl
sbb
mov
sub
shrl
arpl
aam
mov
cmp
pop
xchg
xor
daa
inc
add
ret
push
pop
pop
arpl
or
mov
mov
or
dec
cmp
fwait
rorl
cmp
jge
lea
aas
out
scas
lods
bound
icebp
adc
pop
add
inc
pop
jmp
mov
in
xchg
movsb
pop
jle
dec
pushf
js
mov
loope
out
and
push
pop
int3
push
sti
xchg
aam
lock
jne
lret
inc
div
inc
push
movsl
negl
call
fxch
or
cs
push
sub
pop
push
dec
mov
push
pushf
inc
sub
and
addr16
add
aam
imul
gs
js
sbb
int
xor
mov
out
insl
sub
ret
psubq
dec
in
lock
cli
cmpsl
push
dec
imul
or
mov
pop
jl
enter
pop
aam
and
push
jb
adc
jecxz
ret
cmp
inc
pop
cmpsb
sbb
sarl
jmp
lock
and
in
add
or
pop
sub
inc
or
std
sub
mov
push
sbb
je
pop
shll
xchg
gs
outsl
ja
ja
rolb
push
xchg
push
divb
outsb
aas
cld
mov
iret
out
mov
cmp
adc
dec
pop
push
addr16
and
test
lods
or
jbe
movsl
inc
push
shrl
hlt
imul
scas
adcl
cs
test
lock
rcll
pushf
in
xor
xchg
mov
push
out
cmp
push
cmpsb
cli
lcall
dec
mov
lret
xchg
push
leave
dec
popf
pushf
xchg
jmp
cmp
push
jne
pop
into
sub
mov
pop
les
inc
test
mov
xchg
iret
in
loop
mov
outsl
mov
movsb
ret
pop
gs
mov
fdivs
jnp
cmp
sbbl
fs
stos
jge
dec
or
divl
test
push
cmp
and
xchg
repz
stos
gs
pop
addr16
xorb
xor
mov
mov
adc
inc
dec
fmull
jl
sub
push
mov
popl
dec
imul
mov
mov
lods
cs
pop
int3
and
in
lcall
lcall
and
xor
inc
cli
pop
rolb
and
out
stos
cwtl
inc
inc
pop
or
and
movsl
out
pop
inc
push
xchg
cs
xor
dec
bound
ficomps
aaa
mov
int3
fisttpl
out
dec
rcrl
push
fdiv
test
mov
dec
bound
out
sahf
sub
and
mov
mov
icebp
cmp
mov
ret
and
pop
add
and
divl
mov
test
fwait
loopne
push
sub
cmp
lret
test
sub
jge
mov
fwait
insl
test
push
aas
cmp
xor
ret
test
cwtl
push
xlat
dec
jns
xor
movsb
jge
cmp
cmp
inc
cmp
mov
add
movsl
sub
mov
in
add
push
gs
iret
es
daa
out
out
leave
adc
sbb
xor
je
inc
jge
inc
xchg
lods
imul
pop
aas
mov
cwtl
es
fwait
adc
or
jmp
adc
dec
test
add
push
leave
push
or
ja
dec
xchg
gs
outsb
imul
cmpsl
leave
xchg
clc
mov
or
xchg
cmpl
add
addr16
mov
popa
pop
jae
pop
sbb
and
addr16
das
insl
ret
mov
stc
mov
inc
mov
daa
mov
rolb
jno
loope
cmp
cli
lret
sub
xor
push
test
loop
cmp
imul
add
or
dec
pop
jecxz
sbb
and
out
ss
scas
shrw
dec
cmp
lea
je
out
aad
inc
sbb
add
jp
xchg
insb
push
or
push
lahf
mov
dec
ja
mov
xlat
push
call
xchg
xchg
sub
cmc
push
cli
or
repz
add
sbb
push
ljmp
pushf
inc
aad
push
je
cmp
inc
pop
jle
sub
dec
push
hlt
xlat
stos
push
push
jmp
inc
xchg
dec
shr
daa
dec
inc
mov
xorb
andb
jb
scas
jmp
adc
nop
adc
bound
fistl
cmpsl
cmp
xchg
icebp
cmp
mov
mov
test
notb
xchg
adc
nop
mov
data16
outsb
cmp
mov
adc
stos
cmpsb
jo
ret
leave
inc
or
mov
sti
add
stc
fs
mov
mov
and
mov
jle
leave
jno
js
push
daa
xor
fisubrl
fs
mov
sub
jo
jbe
stos
cwtl
mov
pop
sbb
out
or
ds
movsl
mov
aad
arpl
pop
adc
pop
inc
sbb
lret
xor
lock
aad
push
jnp
repz
inc
xor
dec
aaa
int
mov
or
sbbb
or
cwtl
inc
mov
push
mov
cwtl
repz
gs
out
repz
cld
fiadds
mov
push
shr
pop
out
repnz
fsubr
repz
pop
roll
cmp
or
sahf
je
sbb
out
xor
arpl
data16
inc
and
imul
rcrb
hlt
pop
xchg
fs
lahf
jne
inc
insb
cmp
testb
fs
or
jl
push
push
add
jecxz
sbb
mov
lcall
inc
push
pop
push
bound
cmp
cmp
sub
fmuls
dec
loopne
xchg
add
xor
mov
rorl
push
adc
xlat
jg,pt
loop
sub
cmp
ret
mov
mov
in
jle
mov
int3
hlt
xor
jle
lret
fwait
pusha
mov
sbb
ss
mov
stos
ret
lods
dec
cmc
je
pop
movsl
push
add
and
xchg
ficompl
aas
hlt
dec
lods
cmpsb
push
stos
lock
into
imul
lds
int
sbb
push
adc
pop
mov
mulb
inc
je
add
dec
mov
jbe
xor
in
out
mov
cmpsl
gs
movsb
stos
mov
in
mov
es
or
jne
push
and
cmpb
jmp
enter
int3
jle
rol
pop
in
sub
push
aas
adcb
jo
jl
jecxz
jnp
xchg
popa
jp
out
xlat
mov
sub
add
push
adc
or
jbe
and
and
rcrl
out
shll
pop
cs
test
repz
lret
mov
jmp
mov
std
adc
push
pop
mov
movsb
lods
fwait
and
jle
movsl
addr16
sub
sbb
mov
push
js
mov
ds
jno
and
stos
aas
lcall
mov
push
addr16
push
push
pop
xchg
jge
test
das
out
adc
imul
sbb
cmp
cli
dec
in
cwtl
sub
das
push
outsb
rcl
ret
push
shll
mov
pop
out
aad
fwait
lods
sbb
insl
pop
push
jge
cmp
lahf
and
das
xchg
push
outsb
pop
add
or
shrl
lea
lahf
cmc
int3
add
es
scas
sub
mov
inc
repz
decl
daa
xchg
push
push
addr16
fwait
pop
cmpsl
jecxz
add
add
dec
aas
jmp
or
jmp
dec
sub
add
in
mov
ds
rorl
push
jmp
sub
mov
or
dec
cltd
dec
cmp
xchg
mov
adc
jno
out
popf
pop
xchg
sbbl
or
andb
mov
in
xchg
mov
pop
inc
unpcklps
pop
shrb
jbe
icebp
push
dec
movsl
mov
jb
jne
cmp
mov
adc
adc
pop
push
dec
sub
cmpsb
inc
adc
lds
sub
call
xchg
loop
mov
inc
dec
mov
sub
out
fs
ret
cli
cmp
add
jno
adc
rcrl
inc
sbb
push
push
or
or
push
scas
dec
pop
xor
mov
hlt
adc
cli
nop
rcrl
xchg
jo
shr
or
xlat
mov
push
push
inc
inc
inc
inc
adc
mov
xor
or
mov
xrelease
aam
adc
test
jp
adc
push
imul
repnz
pop
mov
jl
ljmp
pop
icebp
jg
mov
xor
out
dec
or
lock
andb
je
iret
sbb
mov
lods
jg
add
call
rorb
or
mov
lret
loope
push
movb
jae
or
pop
mov
or
mov
pop
fdivrs
fwait
jge
mov
mov
ljmp
lret
fcomip
xorb
jp
jns
push
test
lods
pop
cmp
stos
jne
dec
repz
int
mov
aaa
inc
pop
mov
mov
xchg
movb
je
jle
and
push
mov
inc
cli
mov
pop
ja
xchg
xor
cmp
xchg
ret
scas
stc
xchg
out
mov
mov
pushf
sub
push
cmp
int
xor
or
pushf
sbb
mov
aad
jnp
inc
push
jne
jo
pop
cmp
mov
cmp
bound
xlat
xchg
lods
aaa
push
test
fcompl
shlb
xchg
inc
mov
and
jo
xchg
cmpb
dec
mov
mov
test
adc
sub
out
ret
out
lret
lcall
inc
sub
pop
cltd
jge
scas
out
push
ret
inc
jecxz
out
fists
cltd
jne
dec
and
mov
lcall
test
sbb
cmp
sti
cmp
lock
inc
sub
lods
shlb
imul
add
out
sbb
sahf
mov
int
fucomi
imulb
xor
out
push
fwait
aam
addr16
mov
push
adc
je
jbe
mov
rcr
fimull
mov
loope
mov
cmp
mov
xor
dec
out
out
or
inc
loop
insl
sbb
pop
lds
push
leave
and
dec
xchg
adc
fwait
jp
mov
cld
xchg
repnz
mov
cmp
int
cmp
stc
adc
sub
mov
mov
js
hlt
cmc
xchg
cltd
add
push
faddl
out
hlt
aam
test
mov
jae
pop
sub
das
xchg
scas
cs
mov
push
push
mov
sub
popa
clc
mov
imul
sbb
bound
subb
push
cmp
mov
out
mov
lea
sti
cmc
ja
or
outsl
ret
test
push
adc
imul
mov
fdivrs
sbb
test
outsb
xchg
push
daa
inc
and
add
sub
pop
dec
jbe
ds
xchg
adc
aad
mov
scas
jnp
lods
mov
dec
hlt
sub
jle
fstpl
xor
and
es
or
jne
pop
scas
loope
push
lock
sub
ficomps
jo
fisubrs
lahf
scas
jge
out
jns
jge
mov
sar
inc
cmp
push
xchg
sahf
imul
jnp
add
xchg
mov
lds
pop
adc
jge
and
mov
test
xor
stos
jp
or
xor
ror
and
jp
enter
mov
pop
jle
add
lret
push
std
mov
mov
test
scas
les
cs
sbb
clc
lcall
cmp
xchg
pop
mov
add
inc
out
daa
and
cltd
pop
pop
inc
inc
gs
mov
lret
sti
movsb
rdtsc
mov
sub
push
sub
inc
or
push
pop
aam
and
jno
xchg
test
mov
jg
mov
inc
push
pop
out
mov
aaa
sahf
cmp
jne
ja
pop
lret
mov
xchg
sub
es
das
xchg
loope
jno
xor
cmp
push
movsl
je
jno
stos
daa
call
std
lea
sti
mov
iret
outsb
in
aad
into
jne
dec
and
lock
in
adc
je
into
jb
xor
sub
nop
inc
mov
popa
inc
jp
scas
inc
adc
inc
lret
das
cmc
in
cmp
adc
or
rcrb
xchg
sub
lea
push
add
in
out
dec
cmc
cwtl
push
rolb
in
cmp
mov
push
inc
cmpsl
test
push
jb
rolb
aam
stos
sbb
adc
mov
out
push
pushf
mov
inc
je
mov
mov
inc
dec
mov
rcll
sahf
mov
add
pop
filds
mov
in
inc
call
sub
out
fwait
push
rolb
push
pusha
mov
enter
jns
jmp
xchg
jne
fistl
out
pushf
gs
push
cli
jmp
lea
sub
mov
insl
push
rorl
in
sbb
xchg
dec
jmp
aas
inc
insl
in
cmp
xchg
inc
ret
pop
ljmp
mov
arpl
xchg
rcrb
addr16
and
outsb
lock
and
iret
aas
xchg
outsb
andl
fmuls
faddl
out
push
push
sti
mulb
mov
or
movsl
add
jne
xchg
dec
outsb
notl
jns
in
test
lahf
jae
cmpsb
jge
dec
adc
jecxz
insl
pop
or
test
cli
jns
xor
dec
int3
incl
xchg
jg
xchg
push
push
push
idivb
lcall
pop
push
ja
fidivrl
cli
sarl
xor
adc
or
mov
dec
and
add
movsb
mov
adc
test
pop
call
fisubl
or
fcmovu
rcll
lods
shrb
out
mov
push
xor
loopne
outsl
or
dec
das
neg
test
dec
inc
rcrb
dec
xchg
mov
mov
and
jmp
jmp
sbb
inc
dec
lods
adc
sub
jae
sbb
pop
and
mov
ds
fcmove
and
pop
aam
sbb
ret
aaa
cmp
cli
mov
push
sbb
shl
in
cmpsl
jns
out
movsl
lods
jae
shlb
ds
mov
insb
mov
xor
imul
xchg
jmp
mov
adcb
xchg
ror
arpl
gs
mov
enter
imul
fnstcw
pop
jg
push
sub
add
test
mulb
sbbl
pop
jle
xchg
rclb
mov
mov
jno
push
or
js
outsb
fldcw
enter
stos
fsubs
cmp
sbb
jl
push
ret
shl
sbb
mov
sub
cmp
mov
jmp
stc
pop
xor
jl
cmp
mov
sub
sbb
adc
sbbl
int3
mov
cmp
sbb
mov
xchg
popl
jno
hlt
repz
sub
dec
or
lret
in
inc
lods
aaa
rcrl
push
dec
aad
mov
out
cmpsl
aad
mov
sub
sub
sub
cmpsl
ret
xchg
add
inc
clc
bound
ret
sub
sub
dec
ret
lahf
roll
fcoml
sti
fwait
adc
push
mov
into
stos
test
jno
lret
and
outsb
cwtl
rolb
stos
mov
addr16
rol
fisubrs
jo
fcom
push
mov
call
fcmovnb
push
les
lea
or
js
out
dec
xchg
push
fs
jb
mov
xor
pop
jmp
sub
or
and
ja
hlt
cmp
imul
outsb
inc
cltd
dec
push
test
cmpsb
xor
repnz
jl
sub
add
stos
inc
push
and
fistl
test
and
mov
or
inc
jo
mov
rorl
pop
bound
mov
inc
pop
popw
icebp
cmpb
mov
bound
imul
mov
jno
cmp
xorb
adc
jo
adc
adc
cmp
mov
and
repz
pop
mov
mov
cmp
xor
jae
adc
adc
adc
mov
sbb
xlat
ds
aad
iret
and
and
scas
fs
adc
cmp
xchg
iret
das
pop
popf
push
test
leave
sar
jl
outsl
sbb
pop
mov
das
les
add
adc
ret
mov
enter
xchg
mov
movsl
push
lcall
add
fcompl
add
stc
mov
mov
cmpsb
outsl
mov
xor
lods
inc
jecxz
outsb
test
xor
jl
stos
insl
inc
pop
xor
lea
notb
rolb
je
and
insb
xchg
addr16
hlt
lret
xor
adc
outsl
push
jno
mov
xor
stos
push
xchg
jecxz
push
sub
mov
test
sti
sahf
aad
fisttps
fisubrl
push
ret
pusha
adc
std
cwtl
xchg
dec
sub
sub
insb
cmp
loopne
out
xchg
lcall
xor
ret
cs
gs
repz
pop
idivl
inc
outsb
add
adc
lock
sbb
mov
lock
dec
repnz
add
test
pop
aaa
clc
ljmp
and
scas
scas
xor
sub
jmp
cmp
aam
mov
mov
xchg
insb
and
mov
repz
cmp
dec
outsb
push
loop
sbb
cmp
shl
fcmovne
or
inc
mov
pop
out
mov
cmp
pop
mov
or
repnz
paddusw
push
or
out
fwait
outsb
mov
mov
mov
mov
add
pushf
xor
icebp
mov
dec
cwtl
push
push
mov
mov
in
fsts
mov
mov
imul
out
movsl
adc
les
pop
or
jno
adc
ret
pop
jge
cld
or
dec
push
xchg
call
pop
sbb
mov
jbe
lods
das
movsb
cld
mov
flds
lods
pop
mov
jae
or
jae
outsb
outsl
pop
fsubrs
pop
fcmovne
ds
lahf
dec
gs
sbb
mov
push
aam
lret
pop
into
mov
cmp
mov
add
cmpsb
pop
mov
scas
and
pop
push
xor
popf
cmp
in
loope
nop
lods
arpl
jp
lcall
inc
cmp
xchg
mov
adc
xchg
jle
pop
sub
mov
or
filds
and
rolb
fmul
mov
aas
popf
psrld
lret
les
movsl
jl
lods
adc
adc
sbb
push
dec
inc
mov
or
dec
daa
imul
mov
mov
xor
sbb
mov
mov
mov
xor
sub
jnp
or
mov
jb
test
inc
sarl
repnz
fmuls
imull
jge
add
outsl
clc
lret
mov
call
test
add
cmp
mov
out
dec
not
ret
adc
push
cmp
in
cwtl
jnp
lock
sbb
hlt
arpl
icebp
inc
js
sahf
inc
inc
mov
cwtl
cmpsb
fcmovb
mov
and
mov
mov
cmp
loopne
adc
dec
jnp
mov
nop
fs
mov
shlb
adc
dec
or
mov
or
inc
jnp
icebp
or
ja
mov
ret
fcoml
imulb
cs
lea
jae
lods
mov
pop
orl
lods
imul
jbe
dec
sbb
mov
or
leave
nop
stc
popa
imul
into
loopne
inc
cmc
fsubrl
xchg
outsb
adcb
cmp
add
repz
shll
push
mov
push
stc
mov
jo
jl
sub
inc
addr16
push
add
leave
jmp
push
cmpsb
dec
ljmp
lret
adc
cld
xchg
mov
add
int3
jp
push
push
iret
sbb
aas
cmp
jl
pop
outsb
dec
jmp
xchg
dec
shrb
movsb
sub
xlat
xchg
repnz
std
pop
daa
jbe
loopne
ret
mov
ficoms
adc
gs
push
enter
mov
mov
in
les
push
xor
movsl
dec
push
repz
incl
fisubl
test
adc
inc
sbb
orb
imul
out
jns
aas
out
and
mov
or
sbb
movsl
sbb
aam
scas
out
stc
jge
push
mov
add
fidivrs
scas
adc
stos
stos
icebp
js
mov
mov
lock
test
inc
xchg
ds
loope
mov
mov
call
adc
arpl
rcll
add
adc
mov
vmwrite
fisttpl
inc
movsl
inc
stc
lds
lea
imull
pushl
cmp
add
loopne
add
add
icebp
jl
jns
xchg
sti
into
sbb
cwtl
inc
adc
or
pusha
andl
lea
pop
fstl
lahf
in
jle
insb
jl
cli
push
fldl
cwtl
adc
lock
outsb
into
lcall
or
cmp
sub
test
jbe
test
mov
jo
pusha
insl
fmuls
jnp
inc
xchg
or
lcall
loopne
mov
in
fstpt
testb
add
and
rcll
push
sbb
push
mov
xor
push
roll
push
enter
mov
leave
ja
and
in
mov
cmc
lret
fcompl
inc
ljmp
popa
mov
inc
cmp
loop
outsb
xlat
pop
andb
xchg
push
fwait
xchg
xchg
adc
arpl
jae
cmp
repnz
test
cmp
call
adc
jb
or
lods
jp
divb
lret
xchg
jno
push
sarb
test
je
mov
cs
push
inc
dec
xchg
cmpb
orb
mov
dec
add
and
jmp
jns
xchg
cs
scas
adc
sub
cmp
add
jmp
push
lret
insb
sbbl
ja
enter
adc
dec
jno
xrelease
lea
add
es
loope
mov
dec
sti
xor
inc
jg
sub
cmpsb
pop
cmp
pop
xchg
ja
fcmovu
xor
and
outsl
call
jl
out
jbe
cwtl
sbb
inc
jns
les
add
mov
xchg
fwait
push
lds
jne
sbb
cmp
sub
icebp
lret
jbe
data16
cmp
jp
adc
mov
subl
insl
out
and
pop
mov
jnp
shlb
stos
test
insl
pushf
sub
sarl
imul
std
jnp
push
fcmovb
mov
mov
das
cltd
repz
and
sbb
xor
dec
and
aas
test
loop
cwtl
cld
mov
repz
inc
std
jge
scas
push
scas
or
mov
add
test
cmp
and
mov
and
adc
mov
popf
jge
xor
inc
sbb
xchg
and
xchg
insl
or
shrl
lret
scas
xor
imul
mov
out
ret
mov
xchg
popa
mov
cs
and
cmpsl
xorb
movsl
leave
int
push
sti
xor
or
daa
mov
pop
test
push
jns
pop
cmp
dec
scas
lock
enter
or
cltd
adc
pusha
or
cmpsb
mov
pop
mov
xor
push
xchg
xchg
sti
mov
push
cmp
les
dec
cmp
sub
push
jae
sbb
push
cmpsl
pusha
sti
pop
inc
or
je
ja
insl
imul
mov
mov
stc
bound
push
mov
cmp
repnz
into
xor
out
add
aad
inc
pop
add
sub
pushl
or
scas
imulb
out
inc
mov
cmpsb
das
xchg
int
leave
lret
cmp
mov
pop
mov
mov
das
cmp
lds
ret
push
jge
mov
cmp
jbe
mov
call
loope
lock
jg
inc
xchg
fwait
lds
cmp
cwtl
ljmp
std
daa
mul
cmpsl
dec
sub
pop
sub
add
dec
bnd
sub
ja
or
mov
cmp
add
jnp
and
xor
mov
adc
pushf
test
je
and
xor
out
mov
xchg
mov
adc
mov
adc
pop
cmc
dec
and
mov
sub
mov
push
push
xor
fistl
fidivrl
daa
test
inc
push
xchg
jb
fwait
lea
out
and
cmp
inc
icebp
int3
rcr
xor
xor
cli
test
lcall
push
sbb
fmul
mov
es
xor
aaa
jns
add
lds
dec
or
sub
pop
lcall
mov
mov
jnp
cmp
jmp
lahf
pop
scas
pop
jnp
arpl
cwtl
inc
and
jge
pusha
push
mov
loop
or
faddl
call
fwait
push
movsl
mov
add
xchg
stos
mov
punpckhbw
push
lret
pmuludq
lods
pop
sbb
fsubs
jecxz
adc
xchg
mov
mov
inc
xrelease
sbb
je
jg
mov
repz
jg
in
pop
xchg
inc
pop
subl
add
adc
cld
lods
mov
mov
addr16
jg
insb
sub
mov
sbb
mov
and
jbe
and
aad
adc
push
push
inc
jbe
push
jmp
push
or
xchg
fistpll
mov
xor
xchg
iret
decl
jo
jbe
dec
outsb
and
stc
inc
push
dec
shlb
pop
shll
and
lret
outsb
je
xchg
outsl
cltd
adc
adc
sbb
mov
les
sbb
mov
cmp
push
das
xlat
int
cwtl
xor
mov
call
inc
pop
cmovne
push
int3
mull
into
cmpsb
inc
push
call
add
popl
imul
jnp
repz
pop
and
push
inc
push
subb
push
push
mov
mov
test
sbb
push
and
mov
sub
movsb
xchg
cld
cs
adc
loope
fwait
stos
icebp
and
cli
push
fwait
add
dec
in
mov
ret
adc
mov
fdivr
lds
inc
fwait
rcll
syscall
leave
sti
in
cltd
addr16
push
popf
sbb
je
movl
mov
jo
scas
mov
push
incl
dec
pop
in
push
inc
and
notb
pop
jmp
popf
sub
int3
fnstsw
dec
mov
idivb
sub
mov
mov
add
fnstcw
push
insb
jae
mov
pop
cmp
sahf
inc
mov
mov
enter
sub
inc
or
arpl
in
or
and
aaa
outsl
add
jmp
inc
mov
xchg
repnz
stos
xor
dec
dec
mov
pop
add
mov
shr
in
lcall
or
jg
orb
jle
or
mov
cmp
ja
popa
or
mov
sbb
dec
xorb
je
sbb
sbb
adc
cltd
fs
mov
orb
out
sarb
aas
fidivrl
and
bound
or
sub
dec
lret
mov
pop
cmp
pop
pop
cmp
dec
scas
jge
loopne
jle
sahf
xchg
or
mov
cltd
or
cmp
dec
dec
xchg
aaa
jl
adc
daa
lods
fildl
xchg
aam
pop
or
push
pop
mov
in
jbe
mov
in
out
clc
fs
out
inc
mov
mov
jb
pop
mov
pop
xor
sub
pop
fcmovnb
add
xor
push
movups
gs
repz
mov
push
push
aaa
ret
mov
in
dec
lahf
sbb
lods
clc
cmp
adc
imul
mov
imul
sar
stc
loope
pop
fbld
outsl
scas
fcmovnbe
cmpb
loop
mov
test
clc
add
jecxz
ficomps
cmc
jl
fsub
and
push
nop
mov
call
adc
xchg
push
add
test
cltd
jl
jle
in
loop
push
jge
popa
rolb
jle
cmc
inc
int3
std
sti
repnz
dec
inc
jb
xchg
mov
push
mov
add
jcxz
es
mov
lahf
loopne
into
int3
or
mov
or
das
gs
jnp
inc
sahf
cmpsb
adc
push
or
test
mov
mov
stc
pop
subb
push
lods
popa
in
cmpsl
cmp
mov
lret
movsb
xchg
inc
push
inc
add
mov
pop
xor
cwtl
jg
repz
scas
or
out
fcmovnb
mov
cmp
loopne
jns
pause
pop
int
jbe
mov
insb
and
jg
mov
loopne
shl
mov
test
mov
insl
out
fiaddl
adc
mov
or
sub
fcmove
jge
shlb
mov
das
jecxz
popa
mov
fidivrs
mov
mov
lahf
rcrb
adc
cmc
in
shll
out
rcrb
and
inc
jge
and
cmp
popa
sbb
mov
mov
lods
mov
out
mov
xchg
clc
loopne
jae
lea
addr16
hlt
stos
dec
push
push
addr16
dec
push
sti
inc
cmp
loop
fstl
mov
pop
mov
sub
xchg
push
dec
popf
sub
or
jbe
out
stc
fists
lds
je
clc
add
and
mov
pusha
inc
popf
push
insl
lods
mov
mov
sbb
mov
jge
movsb
jmp
mov
je
cld
or
aad
in
pop
pop
or
insl
in
mov
test
mov
mov
dec
data16
fnsave
cmc
divb
or
es
or
ficoms
cmp
ljmp
sbb
jmp
jns
ret
adc
shrl
outsb
stc
lods
mov
push
inc
or
push
xor
nop
shlb
dec
divb
scas
jno
pushf
mov
je
lcall
cwtl
dec
mov
ror
pop
mov
mov
mov
inc
lret
add
and
xchg
out
cmp
jp
movsb
mov
adcl
test
inc
lret
int3
adc
push
inc
xchg
test
fmul
sahf
inc
fiadds
movsl
mov
hlt
mov
xchg
xor
out
test
scas
fnstcw
in
sub
jae
in
mov
pushf
mov
lods
xor
jns
pop
es
aas
or
dec
mov
int
push
mov
in
and
mov
xor
bound
inc
fs
roll
lret
xchg
xchg
pop
icebp
adc
js
jns
js
sbb
pop
outsb
jae
mov
aaa
movsb
pop
cmp
bound
test
out
fisubrl
cld
out
xor
jg
pop
aam
rep
test
pushf
pop
xchg
std
lret
jg
add
and
dec
in
adc
push
iret
add
sbb
in
aaa
xor
mov
jo
aam
adc
hlt
xchg
rorl
imul
add
xchg
inc
push
add
mov
push
enter
pushf
jp
xor
dec
xchg
xor
loope
outsl
sub
inc
movsl
push
out
xor
and
fdivl
pusha
shrl
arpl
lea
jl
mov
sti
dec
xor
jae
call
dec
leave
out
movsl
xchg
fbstp
cltd
xor
push
xchg
mov
imul
in
xor
montmul
cmpsb
sbbb
test
inc
enter
cmp
or
gs
out
arpl
xchg
popf
cmp
int3
mov
inc
call
jge
sbb
mov
xchg
inc
cmp
shll
push
sub
fadds
jl
es
mov
cmp
dec
sti
mov
or
movsl
mov
jno
orl
jl
xchg
mov
outsb
push
dec
gs
divb
sub
dec
push
mov
mov
cmpl
push
adc
push
inc
sahf
push
xchg
mov
stos
adc
sub
aad
adc
add
adc
push
js,pt
mov
or
ret
pop
out
ret
loope
pop
nop
and
jmp
xchg
jp
pushf
jae
and
and
stos
xor
test
sub
pop
faddl
aas
leave
idivb
jo
xlat
adc
shlb
cmp
outsb
inc
sbb
loop
jns
xchg
je
xchg
dec
adc
fldcw
dec
call
xchg
cltd
and
into
fstpl
out
xchg
lcall
inc
and
gs
mov
loop
insb
mov
js
aas
cmp
sub
into
mov
cwtl
xor
in
cli
popa
cmp
jle
popf
xchg
xchg
xchg
ds
xor
aaa
mov
mov
push
add
cmp
xor
xor
lock
fldcw
sub
mov
aad
xchg
aas
add
ret
or
xchg
sbb
nop
inc
mov
stos
sbb
xchg
iret
xlat
data16
sub
inc
jo
mov
mov
popf
sub
push
das
mov
fwait
jne
adc
mov
pushf
dec
and
sub
lea
mov
jmp
stos
addr16
fsub
cltd
pop
ffreep
cltd
cmpsb
out
fiadds
lea
xchg
enter
jb
mov
jle
or
inc
push
cmp
jge
fstpl
mov
mov
cwtl
fsubrp
add
pop
pop
xor
into
lret
in
or
test
insb
dec
cs
fstps
jo
mov
scas
nop
or
rcrb
pusha
xchg
adc
loopne
fyl2xp1
add
push
push
std
stos
cmc
leave
lds
lods
add
ljmp
fs
popf
sbb
pop
mov
call
push
setle
lret
and
pop
cmc
mov
leave
inc
jno
jg
int
ficoms
data16
lods
push
and
mov
fstpt
pop
loopne
scas
loope
insl
aaa
or
incl
cwtl
jmp
mov
adc
jnp
sar
loop
mov
icebp
inc
mov
push
xchg
adc
std
pop
jae
push
fs
sub
xor
pop
je
jae
filds
andb
jbe
jbe
jmp
outsb
aaa
arpl
or
and
shlb
and
fistps
lock
jecxz
pop
mov
xlat
dec
add
repnz
lret
lcall
imulb
nop
xchg
push
adc
cltd
xchg
push
clc
or
pop
pop
inc
mov
cmpsl
jp
fs
inc
loop
fs
inc
and
sub
xchg
icebp
dec
adc
pop
jg
cmp
jno
insl
mov
push
xor
ret
xor
ret
mov
mov
xchg
adc
jae
out
sbb
or
aaa
insl
stc
sbb
and
cmp
arpl
loopne
iret
mov
in
lods
out
sub
sub
mov
sbb
jbe
pop
jb
daa
in
dec
mov
add
imul
pop
test
mov
cli
cmp
mov
std
repz
and
imul
enter
push
cmp
hlt
test
gs
pop
xor
mov
push
fbstp
cmpb
inc
outsb
mov
out
addr16
jl
sti
adc
sarb
mov
arpl
andl
dec
xchg
cld
lret
inc
call
outsl
xchg
mov
pop
clc
stc
sub
nop
out
adc
fimuls
xor
ficompl
ss
lret
mov
leave
scas
lods
dec
mov
adc
dec
loopne
xchg
mov
insl
push
jo
add
cld
mov
fs
bound
ja
popf
and
xchg
pusha
mov
loopne
loopne
inc
xor
repnz
jmp
lahf
push
mov
and
mov
cmp
rorl
in
xchg
sbb
mull
in
daa
call
xchg
fimull
ret
rcrl
loopne
lods
inc
jge
pusha
cmp
inc
iret
leave
mov
or
mov
aad
cmc
cmc
or
scas
jge
jge
fdivrs
clc
js
mov
in
xchg
jbe
push
push
into
leave
insb
into
lods
cmp
mov
test
adc
inc
add
push
push
test
dec
js
mov
std
jmp
mov
out
xor
mov
lods
sub
xor
shl
or
xor
data16
jno
loopne
xor
out
dec
or
xchg
mov
js
mov
jbe
shl
daa
out
pop
jmp
xor
and
jecxz
sahf
mov
mov
mov
dec
shrl
jbe
aad
leave
jne
push
sub
call
add
push
adc
cmpsb
sbb
test
cmpsl
mov
inc
mov
adc
and
into
or
sbb
sbb
repnz
xchg
out
lret
add
xor
out
lock
lcall
iret
jle
rorb
shrl
cli
xchg
jecxz
and
pop
xchg
inc
insb
aas
fimull
xor
test
cmp
pop
mov
mov
pop
mov
sbb
adc
movb
fldt
jecxz
xor
sti
filds
sarb
lea
pop
pop
imul
lret
mov
outsl
out
out
mulb
out
push
lods
idivl
mov
mov
in
out
xchg
data16
push
cmp
xor
add
dec
movsl
jmp
pop
push
aaa
xor
imul
pushl
loop
sbb
icebp
push
insl
dec
pop
cli
insb
or
pop
ss
and
lret
inc
movsb
pop
test
test
outsl
xchg
xlat
or
or
ficoms
xchg
adc
xor
cwtl
aaa
adc
sbb
mov
mov
fdivr
popa
fcomi
aad
mov
mov
mov
inc
xchg
jle
lret
push
sub
push
inc
out
es
push
inc
pop
mov
sub
insl
inc
or
xchg
call
xor
xor
das
xor
xor
push
add
jle
sti
out
repz
stos
and
sahf
cs
sbb
pushf
pop
jge
rcrb
lods
add
clc
loope
and
add
xchg
mov
xor
xchg
mov
xchg
mov
aas
cmp
sbb
js
push
sti
sti
cmc
mov
insl
mov
ret
jbe
push
xchg
adc
mov
ds
test
sbb
mov
shll
test
cmc
negl
pop
pop
pop
popf
rorb
leave
daa
imul
mov
hlt
pushf
cmp
push
in
pop
cmp
popa
push
adc
inc
mov
dec
sub
cmpsb
mov
int
push
mov
dec
sub
aaa
and
arpl
sub
push
in
xchg
push
and
dec
adc
cmc
inc
cmpps
out
lds
cmp
jmp
add
dec
popaw
es
and
out
in
cs
cmp
fldt
test
adc
xor
pop
in
mov
out
sub
sub
ret
jp
adc
and
push
jmp
lcall
sahf
mov
aad
jp
dec
lock
outsl
xchg
sub
mov
out
cmp
xchg
add
std
xor
jmp
bound
fldenv
std
mov
mov
mov
mov
pushf
jb
dec
xorb
add
jl
or
cmp
xorl
cmp
mov
pop
ror
pop
repnz
mov
lods
jl
mov
and
dec
jp
mov
mov
movsb
fsubrs
add
mov
push
mov
xlat
push
push
and
cld
sbb
cld
mov
inc
mov
and
dec
xchg
or
or
lods
mov
jg,pt
fcmovnu
and
lgs
mov
cmp
outsl
out
insl
jmp
jecxz
push
imul
xchg
dec
rorb
pop
lret
mov
xor
jae
imul
adcb
sbb
and
jecxz
int
mov
fimull
bound
mov
mov
stos
push
cmp
sahf
mov
repnz
add
jl
mov
divl
jo
test
lret
xor
in
mov
mov
or
jp
cmpsb
pop
in
mov
pop
pop
push
mov
inc
dec
jae
sbb
int3
pop
pop
in
testb
imul
in
fucomi
std
stc
lock
pminsw
lods
xor
jl
inc
dec
scas
pop
push
lds
gs
cmc
sub
cmp
or
pop
loop
xchg
pop
pop
scas
shl
lds
pop
adc
xchg
mov
fisubs
jne
inc
and
sub
or
fimull
push
jmp
xchg
cmp
shrb
fiaddl
inc
mov
icebp
push
push
movsb
sub
hlt
add
lcall
ret
adc
gs
or
dec
stc
xor
mov
adc
cmpsl
rcll
je
leave
movsb
push
pop
fstl
popa
repnz
cmp
mov
push
xchg
xorb
pop
ret
pop
int
addr16
aas
in
and
int3
cmp
push
add
and
in
out
sub
clc
mov
cmp
push
xchg
mov
aas
xor
jne
push
pusha
mov
or
or
sub
loop
mov
xchg
jno
inc
inc
imul
mov
xchg
add
scas
jno
mov
pop
sub
inc
loop
mov
mov
imul
jae
ds
scas
jns
jnp
pop
xchg
dec
pop
cwtl
and
push
andl
or
mov
mov
mov
adc
jl
int3
call
xchg
lret
mov
adc
aaa
inc
mov
int
pop
or
pop
daa
pop
fstpt
xchg
adc
sub
mov
out
shlb
fnstenv
ret
sahf
and
fbstp
jp
lahf
jp
adc
xor
sbb
scas
mov
jno
leave
cmc
in
in
xchg
in
leave
add
lcall
mov
push
aam
je
stos
shlb
mov
dec
int
xor
out
xchg
or
push
repnz
bound
push
cmp
inc
jecxz
mov
int3
sub
or
xor
inc
sar
add
sub
fs
sbb
xorl
pop
outsb
mov
mov
mov
push
dec
add
mov
xchg
dec
xor
loope
ja
push
mov
dec
push
lea
jae
cmp
mov
jecxz
loopne
xchg
hlt
arpl
xchg
add
repnz
cs
mov
out
ss
jnp,pt
mov
jo
pusha
enter
rcrl
sbbb
gs
cltd
daa
sub
stos
scas
cs
mov
sbb
arpl
sbb
in
cmpl
mov
lods
popa
dec
test
cs
mov
outsl
lea
and
lret
das
adc
pop
xlat
ds
ja
or
add
lret
mov
or
pusha
add
adc
les
mov
fstp
xorl
roll
into
int3
cmc
mov
lds
into
test
fidivl
push
subb
mov
jmp
ret
or
jns
jo
and
push
repz
inc
cmc
mull
fldt
push
cmc
btc
inc
psubd
jmp
cmc
in
jne
or
mov
repz
popf
out
hlt
pop
sbb
sub
mov
push
and
and
ret
cmpsl
shll
pop
std
xor
jae
cmp
into
ret
dec
mov
addl
and
mov
fiaddl
xor
mov
insl
xchg
dec
sbb
in
movsb
lret
insl
cmp
push
repz
ficoml
cmp
sub
sub
mov
lret
movsb
cs
loop
pop
and
cwtl
lds
aaa
mov
loop
stc
aaa
jp
pop
pop
adc
cmpsb
xchg
and
ja
mov
bound
insl
jg
fwait
mov
push
add
mov
lds
mov
ret
mov
pop
jno
pusha
cmp
rorb
mov
pop
repz
push
and
stos
mov
and
push
add
mov
jno
jne
jmp
stos
jmp
xor
add
repz
lods
outsb
out
push
daa
in
jmp
dec
es
jg
mov
shl
in
push
sbb
mov
sbb
popa
fwait
outsb
movsl
xor
mov
jle
scas
jg
cmp
pop
mov
into
adc
inc
jo
mov
aaa
mov
jecxz
cmp
rorl
adc
jmp
test
popa
mov
jg
or
repnz
dec
sarb
xchg
shlb
sbb
and
jnp
cwtl
adc
pusha
jg
lods
fsubrs
sti
je
jb
cmp
stc
cltd
jnp
je
inc
cli
jbe
scas
in
in
mov
cld
xchg
sub
mov
out
add
ss
shlb
lock
jo
add
cwtl
xor
pop
addr16
jne
mov
das
mov
inc
inc
xor
pusha
fcmovu
test
xor
xchg
lret
inc
decb
sahf
and
cmpsl
cmpsl
sub
lods
cmpsl
std
push
add
push
push
and
repnz
notb
fnsave
mov
sub
or
mov
fsubs
sbb
out
push
repnz
vptestnmw
arpl
pop
cmp
xor
cmpsb
jecxz
push
lds
mov
mov
arpl
scas
xchg
insb
and
mov
cs
or
test
sub
inc
cmp
hlt
sti
push
dec
adc
movsl
or
movsl
and
dec
xor
bound
inc
shll
adc
jecxz
mov
lret
jnp
cmp
aam
and
pop
cmp
lods
test
aas
mov
std
push
cs
jmp
aas
sahf
mov
xor
xchg
pop
scas
push
scas
sbb
testb
insl
pop
push
sub
shlb
fsubr
lret
rcll
cli
leave
out
mov
xchg
xorb
aas
mov
mov
aad
sahf
add
push
scas
jae
push
loop
orl
idivb
pop
mov
das
movsl
mov
xchg
mov
inc
cs
pop
rcr
cmp
fdiv
rolb
and
clc
xlat
outsb
and
cli
xor
popf
rolb
sti
decl
test
rcl
cli
push
mov
add
lret
mov
push
mov
dec
pop
jge
cmp
cmp
adc
inc
cmp
das
int3
sbb
inc
push
iret
es
jbe
orb
sub
adc
lds
xchg
sbb
popf
enter
and
cmc
sbb
xor
cmpsl
or
and
sbb
mov
push
xchg
jp
movsb
mov
loop
xchg
push
sahf
popa
jb
aam
testl
jo
pop
sbb
add
in
mov
icebp
jae
negb
jecxz
xor
ss
cmp
leave
and
sbb
push
in
xchg
add
cmpsb
mov
lcall
in
or
dec
sub
mov
mov
and
aaa
je
sbb
ret
dec
cs
inc
loope
cmp
dec
cmp
dec
inc
mov
mov
je
popf
sub
jp
sub
lods
jo
or
repz
pop
divl
mov
test
xor
inc
loop
or
xchg
imul
pop
out
sub
test
mov
aad
jo
lcall
and
jl
and
cmp
mov
iret
cli
fwait
inc
repz
add
inc
cwtl
ret
sbb
data16
scas
jae
jo
imul
adcl
push
aas
cs
mov
aaa
pop
cmp
inc
xchg
je
xchg
loope
dec
aaa
pop
sbb
adc
mov
bound
adc
xor
push
gs
lds
aam
cltd
fstpl
je
cmp
es
adc
sbb
xor
aam
ret
pop
push
cmp
test
aas
pop
add
stos
mov
cmc
xchg
inc
add
bound
push
xor
aas
pop
xchg
ficoms
shr
cmp
cmpsb
and
or
mov
inc
ds
cmp
pushf
lods
loopne
fimull
jecxz
xchg
pop
scas
fsts
fcomps
das
dec
pop
xchg
xor
test
fdivl
fnstenv
mov
mov
or
bound
ret
popa
fldenv
push
jmp
sbb
lock
loop
mov
out
pop
lret
or
mov
push
int3
add
fstpt
sbb
inc
pop
dec
test
cwtl
or
es
aam
push
cs
out
add
xlat
outsb
dec
ror
std
adc
out
mov
ret
mov
cld
lret
repz
or
pop
or
cli
cmpsb
cli
xor
jae
jp
test
mov
xor
imul
dec
aas
cli
sbb
addr16
add
add
and
sbb
sub
push
shlb
cld
mov
incb
mov
and
rcll
push
mov
xchg
adc
and
xchg
fldenv
mov
push
or
jae
lea
mov
test
insl
js
sbb
cmp
pop
pop
jbe
fcomi
xchg
mov
test
add
sarl
inc
sub
pusha
mov
iret
ds
insb
inc
popa
in
sti
xor
mov
adc
push
xchg
shl
jecxz
lods
cvtps2pd
in
fiadds
pop
xorb
aas
xor
mov
lret
add
or
sbb
lods
xor
mov
lahf
ss
push
mov
std
and
gs
enter
in
mov
sarb
sub
jno
inc
inc
mov
rorb
pop
cmc
xor
push
push
pop
jae
or
cmpsl
sbb
out
mov
push
jns
fcmovne
int3
mov
cs
xor
stos
aad
jg
movsb
pusha
loope
das
adc
int
push
repnz
jge
mov
lods
dec
movb
shll
scas
imul
xlat
call
pop
sub
outsl
cmpsb
ror
out
mov
cmp
dec
and
cli
push
or
inc
and
cmp
sbb
popf
mov
inc
adc
sbb
add
jg
sbb
fcompl
ret
jmp
xchg
push
xlat
adcl
in
cmp
sti
arpl
je
sbb
sbb
xchg
popf
aam
mov
sbb
xor
inc
xor
movb
mov
xlat
add
jns
ds
in
aam
lahf
push
andb
aaa
mov
jecxz
push
xchg
popa
fs
scas
inc
or
cmp
in
xlat
xor
add
sub
pop
mov
aad
and
cli
std
xor
or
in
fwait
xchg
fwait
jecxz
insl
es
stos
mov
jns
inc
xchg
cmp
andl
in
adcb
cmp
scas
push
mov
jmp
dec
inc
jecxz
lds
mov
ficoml
pop
ja
add
pop
xor
jmp
push
daa
popa
jo
pop
ds
jl
dec
fdivrp
push
ja
mov
adc
xchg
add
test
fists
pop
push
mov
fs
inc
aam
sbb
repnz
sbb
pop
cmpsb
lcall
jle
mov
test
fwait
mov
sub
pop
in
push
and
xlat
inc
in
int3
add
jnp
mov
sbb
ds
frstor
cs
fcomps
add
out
cmovbe
imul
mov
or
and
mov
sbb
xor
test
pop
shrb
jecxz
cwtl
adc
xchg
ja
in
jne
es
jp
xchg
jmp
jecxz
outsl
sbb
jns
fnstenv
out
iret
xor
mov
aaa
das
sbb
mov
push
imul
dec
mov
mov
std
xchg
xchg
dec
and
xchg
daa
pusha
test
cmp
mov
leave
and
jge
push
mov
mov
jns
lret
mov
and
std
adc
jp
add
cli
adc
sub
outsb
jl
push
inc
hlt
fildl
ficoml
mov
test
or
mov
push
sub
xchg
add
int
es
or
mov
cld
test
sub
sbb
push
fstpl
jbe
cmpsb
xchg
fwait
in
dec
push
and
scas
mov
js
or
aam
rcrb
ficompl
xchg
pop
aam
cmp
imul
sub
xor
aaa
loopne
es
cmp
in
scas
and
hlt
aad
jmp
and
or
jnp
sbb
faddl
jne
pushf
sub
bound
and
insl
pushf
lcall
iret
pop
cmp
mov
scas
pop
or
insl
xor
adc
dec
lcall
lret
sbb
mov
inc
lea
mov
mov
test
push
shl
fdivr
test
lret
sub
mov
repnz
mov
inc
pop
iret
fsubr
std
xor
adc
scas
ret
or
in
shl
cmc
mov
ret
test
mov
fsts
add
cmc
sbb
nop
lods
pop
shll
repz
imul
cmc
sub
jb
enter
adc
fldenv
xchg
mov
jne
mov
rorl
fwait
test
repnz
idivb
sub
movsl
inc
outsl
stc
pop
mov
push
add
or
rcr
mov
and
mov
mov
sub
bound
pop
aam
mov
sbb
sahf
icebp
fcomp
mov
cmp
inc
scas
cmp
into
cmpsb
dec
jp
inc
mov
fistpll
sub
jne
push
enter
add
stos
dec
lgs
pop
mov
add
ljmp
addr16
aad
testb
ret
push
xor
aas
mov
dec
testl
cmpsl
pop
testb
or
ljmp
fucomip
sti
sarb
pusha
adcl
sti
lods
test
fs
int3
pop
aad
cmp
dec
test
mov
ret
xchg
clc
and
and
js
push
mov
cli
xchg
les
pop
xchg
xchg
mov
test
outsl
test
xor
xor
or
cmp
int3
aaa
adc
mov
adc
dec
lea
jl
mov
rcr
nop
adc
or
cmpsb
mov
cmc
imul
shl
xor
push
adc
mov
adc
cmpsl
sbb
stos
dec
test
jl
pop
xchg
ret
aad
pop
mov
push
cltd
mov
test
rolb
js
mov
aad
aam
xorb
scas
xchg
xchg
or
std
push
push
roll
mov
sub
dec
mov
jb
adc
mov
push
mov
sub
or
jne,pt
cs
inc
sbb
lods
lods
iret
xchg
cwtl
gs
or
pop
into
mov
sbb
les
sub
cltd
testl
pop
push
cmp
cmp
test
fmul
mov
scas
mov
pop
pop
mov
test
cld
outsb
xchg
xchg
sub
jno
jno
popf
xlat
jns
leave
and
dec
rorb
loop
or
add
jbe
out
sti
in
rcll
jnp
xlat
push
dec
aas
sar
mov
jae
aas
ret
pop
sbb
std
movb
mov
mov
shrl
pop
xchg
jle
sbb
mov
pop
fidivrs
dec
or
mov
ljmp
xchg
mov
test
or
fwait
in
call
iret
mov
xchg
cmp
daa
inc
in
sbb
repz
ds
mov
mov
sub
leave
jmp
mov
mov
aaa
or
cmpsl
mov
sbb
mov
sub
mov
mov
std
and
mov
mov
pop
icebp
in
ds
cmp
fsubl
std
add
fsubrs
sub
jmp
ret
in
mov
popf
adc
out
xchg
int3
xor
cmp
push
and
cmp
jbe
in
jge
xor
add
mov
and
rolb
out
test
fstl
push
mov
std
pop
and
out
rep
hlt
push
push
push
adc
imul
ds
pusha
ljmp
dec
dec
lock
sbb
dec
xlat
fdivrl
xchg
mov
incb
xlat
shrb
in
mov
cmp
add
sbb
fwait
push
arpl
test
dec
sbb
push
test
or
das
inc
mov
out
push
fwait
mov
rorb
cmpsb
stos
xor
lahf
lods
xchg
sub
lret
cwtl
xchg
pop
or
pop
into
mov
jno
or
xchg
push
out
je
cmp
adc
sub
outsb
add
int3
cwtl
push
nop
test
cld
fnstsw
mov
int
dec
mov
cmc
rcrb
sbb
cmp
mov
lahf
stos
mov
fcoml
cmpsb
mov
aad
out
xchg
push
daa
popf
add
rorl
lock
shll
mov
jbe
insb
jne
pop
popf
in
pop
outsl
push
dec
and
pop
movsl
popa
and
push
cmp
test
cld
aaa
push
scas
pop
xchg
pop
xor
adc
inc
jb
mov
or
insl
push
and
cmp
or
lods
addr16
push
push
fisubl
fsubs
and
xchg
movsl
cli
xchg
mov
mov
lahf
lret
or
inc
cmp
fnop
mov
out
je
and
test
cmp
fdivs
pop
sbbb
jle
popf
lea
loope
jp
dec
cmovns
cld
stos
xor
cmp
cmp
sbb
xor
push
push
scas
adc
fadds
out
es
icebp
bound
inc
cmp
rcrl
testl
stos
in
dec
xor
xor
sbb
ret
push
pop
movsb
dec
dec
jle
and
sbb
pushf
inc
mov
xor
mov
jp
popf
pushl
xor
pop
mov
adc
sbb
imul
push
adc
sub
out
mov
mov
neg
mov
mov
pop
into
xor
pop
loope
jo
jmp
jae
ljmp
mov
divl
inc
stos
sub
push
outsb
push
in
jp
dec
inc
leave
in
das
popa
insb
pushf
jae
inc
jg
pop
xor
adc
xchg
arpl
std
mov
inc
add
sub
mov
fwait
retw
movsl
xchg
and
popa
cld
sub
rcrb
xchg
jne
mov
xor
sbb
or
xchg
aaa
test
jne
loop
test
jl
in
mov
int
jle
xlat
int
push
fcmovnb
movsb
inc
adc
in
nop
cwtl
push
jae
testb
mov
out
and
inc
loopne
in
fucomi
cli
or
inc
es
repnz
jp
cmpsb
dec
lds
insb
inc
fwait
jl
rclb
cmpsl
fwait
stc
jge
mov
xchg
dec
sbb
out
ljmp
orl
testb
sti
ret
cwtl
jnp
add
mull
push
test
inc
mov
outsb
sbb
into
in
mov
mov
adc
popa
jno
dec
mov
inc
test
dec
bound
out
mov
mov
dec
mov
or
jmp
or
ja
mov
sub
xchg
and
and
xchg
adc
in
mov
lods
cs
cs
pop
mov
jbe
notl
pop
or
jae
ss
pop
xchg
push
cmp
and
sub
sub
mov
aas
fwait
test
out
ja
test
cmpsb
push
push
ljmp
stos
cmp
lret
push
pop
insb
enter
or
dec
rcrl
lods
push
rcrb
mov
int
out
and
xor
dec
mov
push
dec
or
push
xchg
or
mov
push
faddl
mov
mov
cli
and
and
filds
movl
xor
addr16
or
push
and
adc
test
mov
add
pop
pop
or
fnstcw
mov
cmpsl
pop
push
inc
xor
mov
add
jge
jne
dec
mov
jns
sbb
data16
ret
pop
pop
in
and
stos
lds
jno
mov
add
mov
dec
ds
fs
add
shld
mov
mov
enter
ljmp
xchg
lods
test
jno
mov
jae
shlb
pop
mov
push
pop
bound
les
call
or
out
notl
pusha
out
pop
es
mov
jg
or
cli
ficompl
pop
inc
xor
sub
or
ljmp
dec
cmp
adc
sub
cmc
je
fwait
daa
lods
mov
dec
dec
dec
dec
pop
dec
js
inc
ds
mov
call
and
adc
sbb
sub
dec
in
adc
and
jno
bound
aad
sub
scas
arpl
gs
push
add
dec
push
push
daa
movsb
popa
cltd
addr16
jbe
mov
jle
adc
std
sub
and
addb
push
sub
mov
or
cmp
clc
jne
inc
aas
mov
jp
fcomi
sbb
ret
pop
filds
jmp
out
cmp
pop
adc
sti
shlb
int
loope
cmpsl
cmpsl
jns
push
fs
ss
add
stos
mov
sbb
mov
clc
or
cmpsl
pushf
insl
aas
mov
adc
fmull
pop
mov
jge
lds
inc
lret
mov
pushf
mov
or
sbb
std
aam
xchg
xor
ja
adc
jns
dec
bswap
xlat
cli
gs
stos
lods
push
push
pop
xor
mov
popf
add
inc
test
jno
jns
aas
test
cmp
mov
mov
add
push
pop
pushf
jge
adc
imul
mov
jmp
in
dec
jg
mov
inc
sub
out
jmp
dec
stc
daa
jnp
pop
sub
xor
jnp
mov
jecxz
push
pop
arpl
push
lret
pop
lods
out
push
test
shll
inc
rclb
inc
lods
daa
mov
dec
shlb
mov
sub
loope
jmp
cmp
stc
lcall
call
mov
jecxz
mov
or
cmp
es
ja
mov
push
xor
outsb
xchg
cmovb
out
imul
rcl
xor
pop
in
mov
call
or
jle
xchg
or
data16
or
jecxz
xor
sub
pop
out
in
lret
add
jmp
loop
aad
push
xlat
inc
sub
int3
push
stos
jmp
mov
jl
mov
and
scas
jge
cmpsl
stos
lret
jecxz
sti
jl
add
in
stos
shll
scas
icebp
iret
dec
shll
stos
outsl
subl
ja
lahf
add
push
push
les
dec
leave
jbe
pop
and
xchg
lods
mov
insl
dec
pop
or
rclb
sbb
jbe
and
out
mov
jne
mov
loopne
pop
pop
push
push
ret
xor
xchg
call
test
mov
insl
pop
sbb
div
xchg
push
in
icebp
lds
add
inc
cmpsl
add
daa
dec
inc
pop
scas
pushf
lcall
into
fsubp
xchg
xchg
aas
icebp
mov
cltd
inc
lods
scas
pop
out
test
lock
test
fldt
sti
sbb
inc
loopne
or
xchg
and
jmp
stc
into
dec
push
icebp
js
and
push
xchg
enter
or
add
and
xchg
enter
cld
xor
cmp
jl
lods
mov
nop
pop
dec
cs
mov
rol
pop
or
movsb
mov
sub
and
testl
cmpsl
mov
jmp
fcomps
jb
add
sub
xchg
mov
xlat
cltd
dec
xor
and
dec
fisttpll
enter
sub
pop
enter
cmpsb
adc
xor
movsl
jne
sbb
arpl
xor
pusha
lds
adc
aas
xchg
adc
rcrl
xor
lcall
mov
lods
repz
pop
scas
sub
stc
cmpl
sar
dec
cwtl
lret
and
xchg
sub
inc
loopne
sbb
xor
pop
mov
jg
jo
cmp
sub
mov
xchg
cmp
sub
mov
std
mov
insl
pop
mov
in
jae
mov
push
arpl
pop
xor
push
ss
shll
push
pushf
fildl
mov
decl
sbb
ret
xchg
das
cmp
mulb
into
jg
and
inc
std
cltd
mov
mov
or
push
sub
and
ljmp
or
fidivl
and
insl
add
jno
fmul
cmp
mov
lcall
inc
iret
clc
movsl
xchg
loope
pusha
adc
cld
fwait
cli
movsb
sahf
adc
jle
lret
xor
push
pushf
cmpsb
jle
lods
loope
xchg
lret
cwtl
jo
xlat
mov
or
mov
je
pop
sahf
dec
bound
xor
leave
jns
add
mov
lock
add
in
adc
popa
mov
insl
dec
fcmovnb
dec
cmpsl
repz
lock
out
inc
pop
aaa
in
xor
out
inc
adc
xor
xor
cmpsb
and
mov
das
std
lret
push
pop
enter
test
jmp
dec
sub
in
int
fwait
mov
js
pop
dec
imul
mov
sub
push
in
pop
aaa
shll
jbe
lret
sbb
add
jmp
jb
pop
cltd
fldt
jne
faddp
mov
call
andb
and
rdtsc
stos
sbb
sbb
jnp
test
shll
inc
inc
and
insl
iret
ja
or
aas
out
push
in
push
xlat
mov
xor
push
jg,pn
out
ds
xor
call
xchg
xchg
fsubrs
sarb
shlb
xchg
ror
out
test
jo
ret
push
jp
lret
loope
aad
cmp
jne
sbb
jge
iret
in
dec
adc
cmp
cmp
in
insl
mov
jnp
stos
pushf
jo
inc
sarb
insb
xor
push
mov
sbb
lcall
xlat
cmp
imul
pop
and
ljmp
stos
pop
add
jecxz
sub
xor
push
adc
mov
mov
push
insl
inc
mov
and
or
push
fidivrl
pushf
stos
sub
bound
mov
repz
cmc
mov
mov
dec
in
sbb
imul
xchg
subb
ret
sub
neg
nop
fildll
mov
sub
pop
jne
repnz
cmp
lret
xor
sub
xchg
repz
pop
push
cmp
shl
cmpsb
out
cmp
cmp
pop
ja
push
lahf
cmp
loop
mov
add
jo
divb
inc
sub
and
add
stos
in
xor
pop
dec
mov
xchg
nop
movsl
add
int
fs
ja
jge
cmp
dec
push
shrb
ret
fdivp
insb
shrl
es
add
stos
aam
xlat
out
sbb
sbb
and
lret
iret
dec
cmpsb
jne
xorb
sub
fdivrs
les
je
nop
push
sbb
movsb
fwait
and
push
cwtl
pop
je
or
aam
mov
in
int3
mov
idivl
dec
cmc
add
bound
xchg
jl
jae,pn
or
mov
cltd
dec
cli
scas
inc
xor
movsl
and
lcall
sub
test
sti
mov
rcrl
mov
in
cmp
and
aaa
add
pop
pop
pusha
lods
cmc
insl
add
pushf
shll
sub
add
imul
mov
jo
mov
adc
adc
pop
sbb
mov
setne
mov
outsb
sub
dec
push
out
mov
ja
dec
push
adc
mov
push
nop
outsl
or
jno
out
mov
and
test
mov
aas
xchg
lds
sarl
mov
push
loop
pop
stos
iret
jge
mov
xchg
mov
popf
sub
aas
arpl
xchg
jns
lret
dec
xchg
mov
out
adc
jge
jecxz
dec
xchg
mov
jmp
cmp
sub
bound
lret
xor
adc
fcoml
jg
es
sub
or
xchg
jle
push
adc
jmp
cwtl
shl
test
jns
cmp
clc
jb
stc
test
outsl
and
stos
fwait
dec
jmp
lcall
sbb
adcl
gs
test
jae
jo
xor
insl
pop
inc
hlt
xchg
in
pop
rorb
inc
sub
push
push
testb
pop
fidivs
addr16
pop
fcoml
mov
movsb
lods
sti
shrl
push
aad
je
xor
in
ljmp
repnz
push
mov
or
or
cs
pop
jo
shr
mov
xchg
fmuls
ds
mov
add
pop
fistpl
sub
mov
jne
icebp
jo
adc
loop
popa
hlt
fstpl
stos
lret
into
stos
sub
mov
mov
popa
adc
dec
movl
fs
jno
mov
xlat
and
inc
scas
mov
xchg
lods
andb
and
cltd
jmp
cli
loope
loopne
mov
fwait
rcrb
pop
jbe
fidivrs
inc
xchg
pop
mov
imul
stos
pop
je
dec
sbb
sub
nop
push
xchg
fdivl
aam
cs
xchg
cmpsl
out
ja
pop
pop
and
aaa
pextrw
and
xor
mov
daa
mov
xchg
rol
mov
sti
dec
out
jl
mov
jmp
xchg
xor
sub
pop
or
or
xchg
and
sbb
pop
push
daa
pop
jl
mov
sti
and
cltd
lret
das
test
out
out
mov
icebp
add
mov
mov
cmp
mov
mov
and
std
sbb
test
nop
or
mov
sbb
xchg
xor
out
pop
out
shrl
lcall
sub
hlt
les
mov
jp
adc
aam
pop
inc
ss
outsb
imul
mov
shl
mov
mov
subb
aaa
jnp
xchg
int
into
push
loopne
lret
fidivl
dec
add
out
mov
call
idiv
mov
cld
icebp
lahf
dec
or
les
cmp
lods
lea
jne
pop
fst
mov
iret
std
popa
jl
pop
inc
loope
inc
movsl
and
ja
mov
mov
jle
std
mov
xchg
hlt
or
nop
insb
ret
popa
xchg
dec
or
sub
cmp
lret
hlt
jns
aam
aam
mov
jbe
and
xor
push
aaa
jnp
or
outsl
adc
jmp
push
inc
mov
xlat
dec
repz
mov
shrl
lret
pop
push
mov
rcrb
shr
fdivrl
pop
repz
xchg
into
add
out
jae
jp
jae
lret
nop
ret
outsl
push
jmp
ret
bound
inc
ds
in
mov
push
add
or
arpl
sbb
sub
inc
icebp
inc
mov
cmp
mov
sub
mov
andb
mov
mov
bound
testl
sub
das
iret
pop
dec
inc
popf
insb
xor
dec
pusha
sti
mov
push
and
xchg
std
mov
js
testl
incl
bound
sbb
imul
jg
sub
call
adc
jo
out
sar
and
jecxz
pop
pop
jb
sti
add
cmp
shlb
add
in
pop
mov
out
clc
loop
cmp
out
incb
mov
xchg
add
imul
lock
shll
xchg
push
ficoms
xchg
inc
sbb
push
scas
std
or
inc
mov
add
xacquire
popa
xchg
lcall
cmp
ss
cli
push
movsb
aas
push
pop
mov
push
loopne
jg
outsl
shrb
imul
lret
xchg
dec
shll
insl
je
mov
add
cld
rorb
mov
dec
push
sbb
add
xchg
pop
mov
dec
sub
es
and
push
out
test
fldl2e
jg
ds
std
xlat
stos
inc
enter
icebp
add
pop
add
clc
lret
cmp
push
xlat
xchg
cs
sub
or
pop
clc
add
jne
in
pushl
jecxz
loop
arpl
sarl
jmp
movsb
fmuls
cmpsl
mov
into
xchg
popa
pop
push
rolb
fcompl
mov
mov
addr16
fcomps
sahf
movsb
mov
jle
and
outsl
xchg
addr16
cmp
push
outsl
adc
stos
add
jge
dec
xor
scas
fstpl
or
ljmp
in
xchg
in
add
pushf
sub
mov
push
ret
xor
add
xchg
mov
cmp
cmp
les
and
push
pop
popl
dec
xchg
inc
sbb
push
fcomi
fisttpl
mov
leave
fdivr
mov
cld
jae
scas
sub
sar
std
repz
out
push
adc
mov
sbb
adc
outsb
enter
xor
dec
in
xor
xchg
loopne
inc
xchg
mov
ret
lret
je
out
mov
add
repz
jne
jecxz
fiaddl
xchg
jge
ror
fs
test
popa
orb
pop
mov
decb
xchg
roll
xchg
xchg
cmp
mov
mov
pop
leave
into
icebp
sub
scas
insl
push
dec
test
mov
lret
stos
xorl
sbb
insl
fnstcw
xchg
stos
js
dec
sbbb
and
mov
ss
or
push
pop
stc
mov
unpckhps
leave
and
xor
lcall
jb
push
or
ret
or
or
xchg
push
xchg
imul
inc
inc
adc
es
test
les
sub
inc
xchg
cld
repnz
aad
mov
scas
shlb
mov
incb
sub
xor
push
loop
push
add
lahf
xlat
pop
lcall
cli
xorb
repz
int3
jae
fistpll
and
incl
xchg
push
pop
movsl
mov
jl
stos
sbb
frstor
inc
and
in
cmp
mov
ljmp
sarb
in
adc
cli
fisubl
jle
xchg
pop
jno
jb
xchg
jmp
sti
adc
fwait
repz
or
cmp
xchg
scas
lods
ret
fisubrl
mov
popf
mov
push
adc
mov
in
cltd
sti
push
mov
inc
sbb
jle
add
loopne
sarl
sbb
mov
xchg
js
into
test
inc
mov
xor
pusha
dec
ret
addl
iret
pop
pusha
pop
stos
push
test
or
sbb
leave
icebp
rol
sbb
cmp
mov
pop
mov
sub
adc
push
ja
add
mov
movsb
pusha
pop
jg
cs
push
jb
shlb
fs
movsl
cmp
jecxz
xchg
mov
add
pop
xchg
mov
jb
cmc
ss
int
ret
inc
icebp
test
jmp
inc
mov
sbb
stos
add
insb
mov
push
mov
push
and
jns
loope
addr16
arpl
es
inc
sbbl
push
xor
mov
cmp
jge
loope
hlt
es
jmp
lret
sbb
and
jae
add
pushw
test
pop
sub
imul
xchg
movsb
mov
cmc
mov
jbe
pop
pop
data16
cmpsl
inc
xchg
out
xchg
cwtl
push
xchg
xchg
mov
add
arpl
inc
jecxz
mov
pop
cmp
add
jno
cltd
add
sub
pushf
xchg
inc
push
lcall
clc
shlw
mov
addr16
ret
leave
or
xchg
ds
enter
cmpsb
xchg
test
fwait
sahf
sbbl
dec
shr
push
stos
sti
sbbl
loope
and
test
mov
adc
jl
inc
pop
mov
mov
in
jo
and
jnp
inc
dec
in
cmp
fistpll
movsl
test
dec
sbb
jecxz
ret
push
jns
pop
movsl
ss
xchg
stc
stos
and
cmpsl
or
and
sbb
stc
scas
xchg
arpl
mov
ss
pop
sarl
mov
rol
js
mov
add
cmpsb
test
xchg
shr
rcl
cmp
shr
rclb
sbb
ja
dec
adc
ljmp
test
xor
lea
movsl
xor
and
aam
xlat
mov
pop
scas
jno
out
pusha
fwait
popa
pusha
or
push
push
idivb
mov
dec
push
icebp
xor
inc
mov
mov
rcll
mov
push
push
into
xor
sbb
sbb
xchg
mov
dec
pop
sbb
adc
cltd
sarl
sbb
notl
repnz
repz
repz
cmp
mov
stc
xchg
sub
cld
sub
inc
movsb
jp
iret
cmpsl
xchg
int3
call
enter
mov
cmp
lret
push
notb
xlat
arpl
jge
scas
outsl
push
jb
adc
ja
repnz
sub
nop
stos
pop
cmp
mov
cmpsb
pop
pop
and
fsubl
cmp
stc
test
mov
mov
mov
mov
ljmp
rorl
popf
and
lods
dec
mov
gs
xchg
test
mov
leave
fbstp
inc
aas
dec
jnp
hlt
loopne
sbb
test
jmp
lahf
adc
stos
repnz
cltd
push
pop
mov
ljmp
pop
insb
push
pop
jmp
cli
repz
mov
sub
or
out
aad
inc
cld
stc
xlat
outsl
cmp
fwait
ds
or
outsl
mov
mov
pop
mov
mov
mov
lock
fisubrl
push
inc
adc
xor
call
xchg
pop
mov
mov
and
sub
mov
sbb
pop
imul
pop
loopne
aad
adc
inc
xor
sbb
loopne
sub
mov
movsb
sti
aad
fmulp
mov
and
push
jle
sub
pop
inc
sub
xchg
ret
add
jo
mov
cld
mov
sub
dec
in
sub
and
cltd
outsb
or
mov
sti
fstp
mov
aam
repz
sahf
test
mov
das
nop
push
cwtl
or
and
cmpsb
test
mov
lret
add
adc
bound
cmp
test
jmp
mov
cmp
jp
xchg
js
pop
lds
scas
imul
adc
aam
sbb
enter
in
lods
add
addr16
mov
icebp
mov
repnz
rcrl
out
add
ror
xchg
popf
or
aam
bound
test
dec
cmpsb
jmp
jo
jle
pop
aaa
jle
pop
inc
add
sub
dec
lock
rcrl
fimuls
push
jo
push
pushf
addr16
adcb
xchg
or
adc
dec
jne
push
mov
push
adc
add
adc
scas
mov
fsubs
rcrb
and
shll
xchg
clc
mov
jbe
addr16
rol
inc
lock
sbb
pop
fwait
xor
cmc
inc
frstor
in
das
jne
inc
inc
flds
leave
jae
adc
out
push
inc
shrl
scas
dec
std
sbb
cmp
jge
cmp
lock
popa
andb
dec
lods
inc
js
push
fdivl
pop
push
gs
lcall
pop
lods
inc
scas
out
nop
ret
dec
add
pop
cmp
pop
loop
je
fmull
cli
xor
fiadds
imul
loope
xchg
mov
das
cmp
cmp
jl
fwait
and
pop
or
add
push
xchg
inc
lcall
or
js
out
inc
cwtl
pusha
add
push
repz
push
rolb
mov
mov
call
and
xor
negl
push
shll
sub
jae
or
mov
cmp
stos
add
lods
push
pop
adc
fwait
test
rcr
xchg
xlat
push
dec
mov
push
push
pop
in
pop
cmp
push
ret
and
lock
fs
mov
inc
ss
mov
inc
ja
fwait
pop
and
adc
xor
jae
inc
subl
in
pop
outsb
lret
mov
pcmpgtd
dec
int
push
cmp
mov
fwait
xchg
int3
mov
jle
aas
fisubrl
cli
xlat
cmp
sbb
jns
sub
dec
mov
cltd
push
push
cmp
cmpb
jo
add
rorb
jnp
fists
es
xor
f2xm1
mov
xor
xor
stos
mov
push
xor
lock
ljmp
outsb
cltd
js
push
lods
pop
mov
pop
aam
sbb
mov
sbb
fsub
loopne
rcll
jmp
xorb
jne
pop
loope
xchg
leave
cld
call
cmp
pop
jle,pn
je
jg
add
pusha
xor
std
xor
or
scas
idivl
das
fdiv
mov
sbb
mov
mov
rol
mov
pop
add
movl
repnz
cmp
mov
mov
jmp
stos
cmp
scas
ficoms
dec
cmp
gs
stos
clc
mov
stos
mov
fidivrl
mov
add
insl
add
inc
xchg
adc
mov
std
cmp
pop
pop
or
xor
dec
in
cld
inc
jle
repnz
jg
pop
in
adc
aas
call
dec
lcall
jae
mov
mov
clc
xchg
pop
mov
push
fistps
enter
fnstcw
pop
leave
in
cli
movsl
lret
lods
mov
mov
jno
pop
iret
mov
cmp
jnp
ss
mov
outsb
fimuls
jne
xor
mov
xchg
xor
scas
mov
cli
dec
imul
cmpl
push
xchg
mov
sub
leave
sbb
es
sub
push
mov
int
sub
inc
lds
xchg
scas
mov
add
int
xor
sub
inc
lds
jbe
mov
mov
push
jl
sti
js
scas
daa
in
jns
movsb
inc
adc
in
mull
out
pop
adc
andb
adc
pop
test
insl
mov
lret
loope
loop
cmp
lret
outsb
leave
roll
test
dec
nop
push
hlt
popa
mov
and
sarb
xlat
aam
push
mov
ret
jb
jnp
mov
ja
xor
test
push
shlb
dec
add
rcll
cmpsb
dec
movlps
adc
cmpsb
or
es
aam
fwait
dec
lea
filds
outsl
push
jo
das
and
dec
or
adc
pushf
lret
mov
test
fidivrl
xor
add
call
outsl
mov
xor
lahf
xchg
sub
push
jmp
jge
pop
adc
mov
pop
ss
inc
in
lods
adc
mov
or
inc
in
addr16
inc
xor
dec
bound
std
enter
cltd
dec
loope
push
xchg
es
sub
movl
in
jmp
rcll
mov
sahf
mov
mov
add
add
dec
push
loop
mov
and
shl
ja
mov
pop
xor
and
sbb
out
xchg
sbb
leave
shlb
add
lret
adc
xchg
cmpsb
stos
push
cmp
out
movsl
jnp
adc
outsl
or
andl
les
mov
shll
bound
adc
icebp
add
sarb
inc
repz
push
aaa
pop
adc
cltd
les
fsts
push
xor
loop
jmp
mov
inc
rcrl
push
cmpsb
mov
ljmp
sahf
cmc
shrb
push
lret
push
push
int
jo
mov
cmp
call
push
jmp
push
mov
aam
movb
cmovl
decl
cltd
cmp
js
xchg
pop
aad
and
hlt
rol
cmp
sub
ljmp
fiaddl
mov
push
shl
adc
dec
pop
aas
ficoms
xchg
xchg
lods
scas
inc
fcmovb
std
bound
xchg
pop
push
gs
adc
add
cmp
cmp
in
repz
mov
lds
mov
inc
sub
shll
mov
icebp
adc
fistpll
push
sub
xchg
mov
addr16
push
les
out
dec
cltd
bound
int3
orl
std
cmpsb
pop
cmpsb
xor
outsb
push
push
sub
xchg
xor
mov
mov
pop
adc
xor
jmp
pop
or
aam
jns
jno
ret
inc
push
inc
fsubl
adc
cwtl
outsl
push
lods
outsb
inc
icebp
mov
fmull
jmp
pop
xor
mov
adcl
flds
mov
cmp
pop
or
pop
repz
sub
shlb
push
mov
ret
cmp
lea
out
ss
jmp
xchg
and
scas
lods
inc
or
orl
or
cs
test
add
iret
popf
in
in
mov
cmp
dec
insb
mov
sub
adc
dec
adc
push
je
insl
repnz
loope
cmp
mov
fnstsw
cmp
or
sti
data16
adc
xchg
jns
push
int
xchg
adc
daa
stos
and
pusha
pop
shlb
jae
cmp
hlt
mov
mov
sub
mov
loop
enter
pushf
jo
cmp
mov
xor
or
mov
pushf
xor
addb
aad
clc
ss
rol
xor
js
cmpsl
mov
jmp
mov
test
inc
dec
jae
push
aaa
lock
xchg
or
mov
inc
test
push
dec
insb
sub
dec
shl
mov
fisubrl
lahf
or
mov
pop
push
add
mov
sbb
nop
popf
mov
jp
and
sbb
fcmovnbe
cmpsb
add
lahf
mov
cmp
dec
lock
sub
mov
pop
sbb
ss
inc
add
xor
cmp
lcall
xor
addr16
or
mov
js
sub
pop
adc
ret
cmpsb
addr16
jb
sub
mov
stc
pop
pop
movsb
xchg
mov
iret
sub
lock
jno
stos
pop
cmp
mov
mov
mov
repz
cmp
push
pop
cmp
dec
sti
negb
add
lcall
pop
push
inc
mov
xorl
pop
xor
sbb
jns
cmp
repz
and
jno
mov
adc
cmp
add
and
jg
es
xchg
shlb
push
jae
mov
xor
das
push
lods
std
dec
mov
sbb
js
aam
in
shr
mov
sub
cmp
push
and
jmp
adc
xor
jg
dec
mov
rcll
jne
or
subl
push
mov
hlt
mov
out
test
sbb
mov
loopne
mov
cmpsb
lret
xchg
stos
sub
sub
jp
les
xorb
push
arpl
xchg
fisttpll
mov
jecxz
outsl
pop
repz
lods
pop
test
mov
fs
enter
push
jmp
gs
push
addr16
xlat
mov
fidivs
and
mov
push
int
cmp
push
and
daa
jb
xchg
dec
addr16
pop
ret
cmp
mov
xchg
popa
fisubs
imul
pushf
mov
fld
sbb
div
mov
negb
dec
iret
dec
shll
mov
fsubrl
or
push
pop
rcrb
out
out
sti
xchg
xorl
pop
push
adc
mov
and
push
xor
mov
cwtl
sub
aad
mov
cld
sub
sbb
inc
jo
cmpsb
cmc
push
in
aas
repnz
clc
cmp
or
xchg
packuswb
out
push
out
add
icebp
dec
lea
mov
stc
inc
pusha
push
les
sbb
mov
and
ret
mov
mov
loop
gs
movsb
jne
mov
xor
mov
es
push
mov
ror
xor
cmp
inc
popa
inc
je
dec
das
or
shlb
push
aad
mov
xlat
jle
dec
inc
cmpl
mov
repz
push
arpl
sbb
bound
mov
mov
and
lret
aas
push
lcall
lods
or
mov
sub
jnp
cmp
push
push
mov
lea
sbb
aaa
dec
shll
aam
inc
int3
jl
dec
adc
adc
ret
pop
mov
mov
jg
dec
mov
push
or
lcall
nop
xchg
push
das
mov
cs
adc
cmp
sti
pop
mov
xchg
cld
pop
inc
fidivs
adc
popf
adc
jmp
ret
or
lods
ret
addr16
and
mov
push
pusha
dec
js
dec
in
jl
xor
orl
xchg
dec
lahf
leave
inc
jo
cmp
cmpsl
cli
bound
pop
rcrb
cmp
push
mov
mov
ds
sbb
hlt
or
xlat
cmp
mov
jnp
or
cmp
sahf
out
cmp
popa
or
cmp
jmp
inc
ds
jne
push
leave
or
sub
dec
scas
jp
ds
mov
sti
insb
dec
add
test
mov
pop
jp
pop
popa
notl
jb
xchg
inc
and
mov
in
call
jg
add
movsl
add
inc
lea
out
sub
pushf
mov
mov
into
roll
enter
sbb
sbb
dec
inc
loop
pop
push
jle
dec
out
outsb
dec
loopne
into
out
add
out
int
outsl
and
mov
leave
push
dec
jnp
out
test
mov
and
cs
shrl
lret
cmp
and
sbb
xchg
gs
rolb
test
and
rcll
aaa
gs
mov
push
mov
sti
fidivrs
popa
out
cld
loope
ljmp
test
loop
ja
fmuls
call
inc
arpl
cli
shll
mov
cmp
pop
sub
mov
jle
in
mov
fdivl
jmp
lret
add
into
push
test
in
cmpsb
cmp
xor
int
nop
sti
leave
push
mov
pop
shl
jmp
inc
fmul
jl
lcall
add
jg
fimuls
ljmp
popa
jno
sub
mov
ss
or
pop
xchg
mov
das
xchg
pop
in
mov
xlat
out
xor
pop
lret
cmp
add
inc
xor
dec
pusha
inc
jb
and
adc
push
andb
sbb
and
jnp
pop
jne
inc
loope
imul
test
mov
arpl
jb
ret
mov
cltd
xchg
fdivs
or
sbb
push
xor
pop
mov
ja
sbb
sbb
cmp
push
xorl
sbb
xchg
mov
push
sbb
or
ljmp
sub
mov
dec
inc
mov
andb
sbbb
lds
and
js
stos
pop
fs
js
sub
mov
int3
inc
push
insl
inc
subl
add
shrl
xchg
or
mov
cmc
adc
ljmp
adc
mov
arpl
adc
sbb
cmp
sbb
jno
fstpl
and
mov
xchg
into
iret
sub
hlt
xor
das
add
in
bound
out
notl
daa
sbb
push
xchg
adc
sub
leave
leave
jne
mov
ja
inc
lret
rclb
lret
mov
adc
push
add
jmp
inc
sbb
push
or
fistpll
call
fstp
xchg
jnp
sbb
inc
add
mov
xchg
and
ret
movsb
lods
pop
push
add
jmp
pop
stos
popa
test
in
aad
adc
jns
and
cs
mov
mov
arpl
sub
cmpsb
rorb
in
leave
jno
dec
inc
test
lcall
inc
pop
imul
pusha
int3
xor
sub
xchg
cmp
arpl
loopne
cltd
mov
and
jne
xlat
loop
daa
mov
sub
xchg
xor
push
ja
sub
pop
xchg
push
stos
shrb
sbb
outsl
mov
shl
inc
inc
lcall
movsl
pop
xor
outsl
fimull
outsl
dec
scas
outsb
inc
dec
push
sub
add
mov
ss
addb
test
stos
dec
adc
outsl
addr16
imulb
aas
push
aaa
pop
ds
sub
lahf
mov
sbb
mov
sahf
mov
add
fisubl
mov
sub
popf
add
imul
pushf
comiss
icebp
push
push
mov
mov
roll
dec
mov
leave
repz
inc
pop
sub
mov
jmp
clc
testl
std
pop
jp
pop
mov
xchg
and
stos
iret
addr16
lds
pop
int3
repz
lea
add
jns
push
sbb
popf
lret
xchg
inc
aam
and
add
outsb
insl
cmpsl
lcall
pop
jnp
into
cmpsl
mov
daa
aas
add
mov
shr
int
xor
dec
movsb
je
inc
sub
and
loopne
out
rcrl
lea
xchg
push
mov
cld
and
xchg
xor
shrl
xor
out
out
jmp
int
mov
cmp
mov
out
sbbb
inc
mov
jg
xor
add
mov
pop
push
mov
mov
mov
sub
mov
pushf
cwtl
push
xor
in
inc
or
aaa
and
adc
cmp
xchg
cwtl
mov
xchg
mov
lret
push
sub
jl
cli
dec
xor
or
testb
loop
mov
xchg
add
shl
xor
inc
sar
pop
pop
add
outsl
mov
jp
pop
mul
aas
roll
sbb
cmp
and
nop
pop
std
imul
dec
fcmovnbe
lock
imul
in
fstpl
jb
jp
les
outsb
sti
push
in
mov
mov
dec
arpl
fcoms
jmp
cltd
mov
std
prefetch
sarb
xor
sbb
and
xchg
out
push
and
into
int
mov
jmp
mov
jge
mov
stc
mov
rcl
pop
xchg
add
pop
out
xchg
inc
fistpl
neg
sub
jecxz
aas
stc
cmp
xor
icebp
ljmp
mov
xor
xlat
inc
shr
mov
int3
loopne
jge
mov
fisubrl
ds
add
out
fidivs
shll
popl
cmpl
jb
inc
cwtl
lds
jle
mov
mov
add
push
pop
lahf
shrl
test
cvtps2pi
jae
jb
cmp
xchg
pop
mov
inc
mov
into
stc
push
jo
mov
hlt
dec
push
fs
lret
pop
xchg
xor
push
lret
in
and
dec
cmpsl
daa
stos
sbb
sahf
ds
fiaddl
cltd
fidivrl
dec
shrl
hlt
dec
jg
shrl
xchg
out
and
mov
mov
cmc
into
add
stc
cli
xor
xchg
jp
out
ret
sahf
mov
mov
jbe
mov
add
jp
cmp
mov
jnp
mov
rcrl
rorl
test
cmc
xor
lock
outsl
xor
int
xor
xor
cltd
mov
xor
movsl
inc
or
jle
cmp
pop
js
imul
sti
xchg
cmp
sub
cmp
insb
cmp
cltd
rorb
pop
push
jne
lods
add
push
mov
cld
sbb
pop
cmpsb
mov
mov
dec
sbb
sbbb
push
lods
or
add
xor
loope
inc
push
bound
and
addb
hlt
xor
mov
push
scas
jbe
push
or
in
pusha
push
nop
inc
divps
repnz
mov
outsb
imulb
cmp
imul
push
and
fdivs
popa
stos
out
mov
adc
dec
add
daa
sub
push
mov
js
push
mov
movsb
lcall
add
sbb
leave
testb
gs
into
call
imul
hlt
push
xor
mov
mov
cmp
mov
in
inc
inc
or
mov
sti
sub
xor
mov
and
mov
scas
mov
push
leave
add
cmp
in
inc
testb
inc
stc
subb
pop
loop
les
and
mov
lods
add
sub
mov
cmp
inc
or
lods
lcall
nop
jecxz
stos
jmp
add
daa
movb
movl
jne
pusha
jbe
rorb
icebp
add
jle
jno
sahf
xchg
cmpsb
push
ja
adc
rcrl
lea
adc
imul
xor
cs
sub
adc
fcoms
xchg
icebp
xchg
cmpsb
jne
ss
jg
into
xor
inc
adc
lea
hlt
std
in
inc
ret
xchg
nop
add
or
imull
mov
out
and
sub
fsub
icebp
sbb
sbb
cli
cmp
pop
xor
lcall
cs
sbb
xor
add
add
fnstenv
adc
pushf
and
in
imul
pop
mov
jae
dec
neg
fwait
cmpsl
repz
sub
sub
push
lcall
adc
fists
add
popf
mov
sbb
cmp
mov
popf
mov
stos
popa
mov
mov
fwait
mov
mov
sub
and
xchg
into
je
fwait
mov
and
mov
xor
xchg
dec
xchg
out
arpl
int3
mov
sub
jns
ljmp
enter
les
and
std
call
inc
cli
push
jp
mov
mov
gs
mov
push
cs
dec
inc
pop
jne
dec
out
xchg
or
mov
mov
jb
mov
mov
cwtl
or
lds
adc
adc
lret
inc
fisubl
push
pusha
enter
xchg
stos
adc
xchg
insb
loopne
push
test
adc
in
ja
xchg
imul
cmp
add
clc
out
mov
test
xchg
pushf
jb
popf
or
sti
pop
adc
lods
xor
jnp
sahf
mov
push
shrl
jae
adc
addr16
lahf
add
xlat
jle
daa
mov
push
fs
cmp
mov
cmc
js
imul
arpl
cld
push
hlt
sub
aad
push
and
cmp
aam
mulb
or
mov
les
fnstcw
dec
add
and
shlb
fwait
mov
sub
lahf
fmuls
dec
pop
in
jp
cmp
ja
nop
and
mov
cmpsb
xor
dec
adc
pusha
xor
dec
faddl
xlat
xor
ret
bound
sbb
fcompl
mov
lds
inc
mov
xlat
pop
xchg
repz
mov
push
inc
lcall
jp
or
fnsave
lret
pop
jbe
push
or
jge
test
adc
cmp
and
in
jb
xor
mov
pop
add
leave
out
inc
ja
cli
mov
jg
jno
xchg
bound
sahf
xchg
push
pushf
outsl
inc
xchg
data16
push
fcomi
pop
adc
push
outsb
aas
pop
cmp
push
loopne
stc
pop
xchg
pop
mov
incl
testb
sbb
xor
loope
mov
mov
mov
xchg
or
das
int
dec
test
push
jl
inc
adc
cli
xchg
out
movzbl
enter
pop
test
clc
shll
je
icebp
subb
jbe
pop
subb
pop
insb
jge
mov
add
mov
pop
mov
sub
sbb
ljmp
js
mov
mov
pop
rolb
xor
test
imull
sub
nop
cs
cwtl
push
mov
mov
cmp
into
adc
shrb
mov
ljmp
mov
push
or
jae
fdivl
ja
xor
dec
push
and
fwait
mov
ja
mov
outsl
jmp
xlat
out
sti
scas
ret
je
sub
in
push
mov
push
aam
pop
jo
fdivr
xchg
lds
xchg
pop
push
enter
dec
and
pop
xchg
cmc
pusha
inc
lahf
fisubrl
or
cmp
lds
mov
cld
mov
pmaxub
bound
fdivrp
rorl
cmpsb
dec
and
xor
jmp
cltd
out
or
xlat
and
not
mov
push
and
fcompl
mov
je
xchg
and
divl
loope
jg
test
aas
notb
mov
xchg
mov
stos
cmp
sbb
mov
pop
lret
adc
add
lea
dec
addr16
fs
test
iret
sbb
out
adc
jecxz
js
outsl
aaa
inc
adc
data16
pop
test
pop
mov
mov
push
shl
sub
test
dec
loopne
call
dec
pop
and
shrb
test
xlat
cld
sbb
or
push
popa
mov
stc
jne
adc
xor
loope
mov
stc
aas
pop
adc
faddp
push
imul
das
lock
jmp
pop
pop
add
inc
stos
shr
pop
in
je
pop
adc
mov
ret
cli
xchg
mov
adc
lock
inc
or
or
iret
mov
imul
fwait
inc
pusha
jg
mov
mov
ljmp
loopne
push
mov
je
addr16
aam
sub
movsl
lock
or
xor
mov
lock
or
js
inc
jecxz
and
mov
mov
jo
jg
jae
jae
sar
data16
xor
xchg
mov
sbb
cmp
lock
lock
push
push
or
push
test
stos
pusha
fsubrl
push
in
movsb
out
outsb
notb
cvtps2pd
repnz
mov
mov
mov
jle
or
rorb
movlps
rcr
lret
push
test
jne
adc
xchg
popa
pop
push
js
fsubr
fldenv
es
adc
daa
lcall
jno
push
aam
lock
lahf
mov
lods
cmc
aam
ds
pop
ljmp
stos
add
xchg
mov
sbb
imul
out
iret
adc
aaa
push
mov
je
hlt
mov
das
sub
outsl
cli
pop
push
mov
sbb
lret
xchg
loop
fsubs
in
jne
fnstsw
loope
in
adc
testl
cli
push
mov
sub
mov
outsb
cli
addr16
xchg
loope
push
xchg
or
pcmpgtd
xchg
popf
movsb
mov
aad
lods
mov
and
lret
cli
lods
push
ds
pop
movb
or
mov
push
mov
pop
movsl
dec
jge
mov
mov
sahf
dec
xchg
gs
mov
push
repnz
ret
push
adc
cmpb
int3
les
nop
out
fcoml
push
scas
adc
je
xlat
push
fstps
dec
aam
sub
in
mov
fists
std
mov
jg
xchg
pop
aas
popa
jg
imul
shlb
mov
cmp
push
cmp
jmp
pushf
ss
rorl
fistpl
pop
pop
stos
cmp
addr16
xchg
inc
or
push
sub
scas
in
jecxz
adc
sub
xchg
lcall
es
mov
fdiv
pop
in
mov
xchg
or
fs
dec
adc
cmp
xor
nop
cmp
or
jle
cld
xlat
fisubl
push
mov
imul
sti
rcrb
das
fsubl
xorl
sbbl
push
dec
sbb
stos
cmc
and
adc
dec
push
es
stos
xchg
cmpsl
addb
xchg
repz
push
imul
stos
and
mov
sbb
outsb
les
movl
and
test
and
lret
sti
push
mov
icebp
xchg
cmp
push
stos
cs
dec
cmpsl
mov
arpl
outsl
xor
rolb
and
cmp
sub
mov
mov
sbb
mov
outsl
jg
cmp
sbb
sbb
xchg
jge
idivb
in
cwtl
cwtl
arpl
jnp
sbb
push
jnp
call
stos
dec
push
pusha
enter
or
mov
mov
pusha
add
jno
or
or
adc
in
lret
cwtl
jmp
mov
sahf
add
dec
cmp
les
mov
jp
ljmp
adcb
cmp
inc
push
and
les
fidivrl
stos
cwtl
jno
lds
scas
sub
roll
psubd
cmc
lea
out
xchg
and
nop
addb
xor
sbb
test
xor
hlt
movsb
mov
sbb
iret
mov
aam
lea
dec
inc
shlb
mov
sbb
mov
mov
pop
jbe
das
loope
and
pop
lret
loop
adc
push
les
push
sbb
or
dec
mov
in
cmp
aam
lret
sub
loope
loop
dec
mov
xor
sub
divl
mov
sti
roll
push
lods
xor
dec
pcmpeqd
xor
sub
adc
xchg
add
insb
adc
or
pop
loope
xchg
jl
in
dec
and
xor
fwait
sti
inc
cmpsl
xchg
mov
das
dec
imul
add
or
lret
add
stos
negl
out
pop
push
xor
mov
das
mov
ds
stos
lods
inc
mov
lods
and
pop
cld
mov
dec
movsb
in
xchg
pop
add
jo
push
lds
xchg
push
xchg
mov
push
fadd
mov
aam
jl
mov
or
shrl
lcall
pop
or
jp
inc
js
rcll
jecxz
pop
jne
xchg
movl
add
sbb
jmp
aas
cmpsl
sub
movsb
jae
jae
xorl
and
jb
in
aaa
mov
loope
cmp
loop
daa
add
sub
pop
aaa
stc
add
aaa
shlb
daa
mov
dec
push
fsubr
push
es
mov
or
andb
jp
mov
in
add
mov
mov
jl
add
mov
adc
pop
push
frstor
outsb
pusha
shlb
in
fisubrl
mov
or
xchg
sbb
ja
mov
outsb
enter
and
or
test
pop
cmpsl
cmp
inc
pop
dec
sub
adc
lahf
dec
rorl
adc
cmc
in
faddp
mov
in
pop
pop
mulps
and
xchg
ss
incb
aam
and
imul
leave
aad
mov
scas
ret
mov
and
lock
mov
xchg
enter
cmp
lea
out
nop
or
rclb
jle
lret
xchg
sahf
mov
jns
mov
shrb
movsb
add
popf
aam
mov
cmp
lea
xor
jle
or
jb
xor
fisubs
jg
xlat
cmpsl
jmp
and
jae
xchg
mov
cmp
xchg
push
das
outsb
shrl
js
mov
cmp
hlt
jnp
sbb
addr16
lahf
inc
push
sarl
cmpsb
jns
lcall
arpl
fs
ret
cmpsb
cmp
fnstcw
mov
daa
clc
shll
mov
sub
outsl
or
push
mov
xchg
dec
xchg
cmp
les
out
call
or
adc
or
push
pop
pop
jle
push
mov
fs
mov
cli
lahf
mov
jo
mov
sbb
xchg
mov
mov
adc
outsb
mov
jbe
jne
push
cmp
ret
imul
add
dec
fs
lret
cmp
adcl
outsb
lahf
imul
adc
movsb
daa
xor
sbb
je
lods
roll
mov
test
call
lret
xchg
cmp
and
fwait
jp
add
imul
and
rcrb
dec
cmp
or
sbb
stc
xchg
dec
dec
sbb
dec
cmpb
pop
call
jl
or
sbb
dec
dec
sbb
lds
cmp
iret
sti
sub
std
dec
enter
bound
xchg
push
mulb
dec
aaa
xchg
daa
insb
jne
dec
sbb
cmpsl
cmp
pop
call
lods
jo
cmpsl
fdivrs
cmp
mov
mov
repnz
cmp
mov
dec
sbb
les
mov
push
xor
mov
pop
cmp
iret
lods
movsb
je
push
shrb
pop
rdtsc
insb
inc
dec
lcall
scas
imul
cld
aad
shl
push
imul
mov
cwtl
repz
call
mov
test
sbb
clc
clc
inc
loop
cmp
test
cmpsl
adc
sub
notb
ret
fisubl
dec
sub
mov
xor
xorl
testb
adc
pusha
mov
imul
fbld
mov
push
mov
sub
adc
loop
push
call
cwtl
sub
mov
stos
adc
test
jns
ja
leave
push
push
out
jb
rcll
mov
sbb
dec
or
fstps
sub
mov
adc
std
call
jno
ficoms
jne
cmp
dec
das
sub
lea
lret
xor
out
insb
fwait
out
aam
inc
pop
bound
add
arpl
inc
inc
inc
ljmp
loop
mov
dec
inc
add
stos
dec
mov
xchg
sub
into
stos
sbb
mov
adc
xchg
mov
jno
cmp
pop
subl
adc
mov
idivl
jb
pushl
xor
push
dec
pushl
push
dec
ljmp
lahf
sarl
sbb
cli
aam
or
jnp
movsb
scas
aad
ss
xor
cmpsl
std
inc
jns
mov
and
push
mov
add
jmp
lahf
mov
ret
jmp
mov
jno
stos
cmp
jb
cmp
mov
cmpb
lods
aaa
mov
mov
movaps
mov
stos
aam
inc
cmp
pusha
push
sub
lret
and
add
cs
leave
icebp
push
mov
inc
mov
cwtl
testl
out
les
push
gs
xor
jmp
popa
mov
les
jno
xchg
xchg
int
pop
jl
mov
cmc
je
cwtl
sbb
inc
mov
lods
shll
add
mov
ror
insl
mov
lds
xchg
icebp
jnp
adc
subl
xor
pop
dec
mov
xchg
dec
sbb
sub
orb
pusha
mov
push
mov
pop
jecxz
add
lock
mov
loop
cmpsb
scas
imul
shrb
jne
pusha
pusha
adc
ret
lods
jl
add
shll
inc
das
cmpl
xchg
in
and
push
cmp
xchg
popa
repz
cmp
mov
xor
aaa
and
jno
cmc
ljmp
jb
out
inc
mov
mov
mov
in
sahf
jns
adc
sub
dec
push
inc
xor
jno
je
movsb
mov
xchg
dec
test
mov
and
test
mov
sbb
repz
jbe
add
std
int3
inc
stc
xor
push
push
push
add
push
call
imul
pop
mov
mov
jae
xchg
push
inc
ljmp
roll
and
sub
cmp
pop
loope
int
flds
pop
mov
cmpb
sub
je
mov
mov
test
jmp
sbb
js
sbb
cld
test
loop
cli
mov
lea
mov
and
loopne
insl
dec
incl
orl
mov
test
inc
and
adc
or
shr
stos
jp
in
or
cmp
inc
out
repz
xor
push
pop
popl
mov
sub
mov
in
lods
pop
icebp
in
les
std
sub
add
xchg
imul
cs
sbb
add
mov
daa
jl
cwtl
icebp
jmp
xor
and
push
repz
mov
ret
cmpb
add
sub
mov
cld
cmc
test
sbb
inc
or
jg
xlat
pop
add
clc
jge
or
xor
fisttpl
cmp
insl
sti
jmp
lock
sbb
xor
lds
loope
push
dec
push
jl
cwtl
mov
in
ret
out
add
outsb
xchg
jns
rorb
jno
adc
in
mov
and
fiadds
dec
dec
sbb
pop
sbb
sti
xchg
sub
pop
fmuls
aam
sbb
mov
push
cltd
int3
mov
lret
push
jp
add
in
and
ds
mov
inc
pop
fs
int
jb
or
lods
pop
pop
and
leave
test
add
mov
mov
adc
rorb
push
outsl
jo
inc
fldt
rclb
mov
xorb
int3
arpl
imul
lods
pop
xchg
or
jl
xor
mov
leave
in
loop
jecxz
int
push
sub
mov
sbbl
test
pop
pop
sub
idiv
add
roll
push
notl
in
sbb
call
movsl
insl
hlt
shrb
fisttps
movl
fstl
icebp
add
sar
add
testl
lahf
add
push
out
ljmp
xor
cwtl
mov
push
pop
mov
popa
and
imul
insb
or
xchg
mov
mov
cli
ret
bnd
mov
test
pop
add
nop
jmp
out
xor
inc
test
cmpsl
and
daa
mov
aas
imul
pusha
jnp
popl
scas
repz
xor
test
popf
add
cmp
and
stc
sti
lods
dec
leave
call
repnz
fsts
lock
fcomp
scas
sub
pusha
nop
shll
addb
in
fstl
sbb
test
jbe
out
loopne
sub
pushf
sub
push
ja
pcmpeqd
fisubs
scas
push
adc
pop
fiadds
add
es
jle
hlt
cmpsb
out
repnz
pop
add
and
xchg
jbe
cmp
pushf
enter
cltd
xchg
out
mov
xlat
jbe
and
sbb
repnz
je
mov
out
sahf
movsl
sub
icebp
cltd
loope
je
fwait
ret
out
xor
std
iret
xchg
adc
movsl
adc
stos
out
aaa
jmp
cld
cmp
popa
lods
mov
cmp
cmpsb
and
jp
push
pop
push
mov
jle
jg
cmp
andl
mov
ja
add
mov
jbe
aam
vmulsd
jbe
mov
rolb
jns
adc
cmp
and
cmp
inc
xlat
fs
push
out
xor
add
and
or
shll
test
cmp
loope
lcall
das
jns
rol
mov
hlt
mov
push
mov
sub
pop
test
outsb
in
aad
in
enter
cmp
inc
pop
out
aaa
les
adc
jns
outsb
and
cmp
out
aas
push
sbb
inc
add
insl
mov
fistpll
outsl
jmp
push
std
lret
pop
icebp
rorl
mov
add
in
repz
aam
scas
sbb
lea
and
jp
mov
sbb
int3
or
bnd
xorl
test
loopne
divl
fsts
jb
outsl
lret
nop
in
pop
jns
stc
lret
cmp
push
in
xchg
xor
dec
push
sub
mov
sarl
movsl
aas
shll
out
or
lods
pop
sub
sub
add
jle
mov
test
lods
inc
fwait
popa
insl
in
push
add
shlb
sbb
jns
and
inc
movsb
mov
cmp
sbb
jg
fiaddl
gs
mov
in
pop
jmp
pusha
jae
inc
and
or
imul
ret
xchg
sub
push
es
jbe
jmp
lret
lret
int3
mov
cmp
lock
mov
nop
lcall
mov
add
out
test
std
mov
arpl
sbb
add
leave
movsl
ret
adc
aaa
clc
loop
cmpsb
lret
das
xlat
shll
inc
mov
cmc
push
shlb
pusha
and
push
movsb
xchg
sti
pop
jecxz
incb
jne
mov
or
dec
popf
pop
add
pop
xadd
imul
mov
xor
ret
add
sub
pop
mov
lret
pop
dec
mov
xlat
mov
inc
rorl
mov
sbb
jnp
xchg
mov
or
mov
dec
xor
repnz
dec
adc
pop
lret
mov
aaa
mov
jb
leave
pop
lock
ret
jns
fstl
or
sub
pusha
dec
les
cmp
add
pop
js
mov
cmpsl
jp
mov
inc
fistps
jge
movb
push
pop
shlb
xor
stos
xchg
and
hlt
test
pop
sbb
lea
ds
lcall
lret
sbb
or
stc
xor
xchg
xchg
jae
push
cmp
stos
aas
scas
adc
inc
mov
out
negb
jecxz
dec
jmp
mov
ljmp
scas
fstps
jb
inc
ja
out
les
jle
call
data16
mov
or
cmp
arpl
push
and
shrd
das
and
incb
mov
jns
dec
sub
and
or
negl
mov
lcall
xchg
xor
dec
sbb
pushf
cmp
aad
and
outsb
xchg
rcr
mov
jle
pop
mov
mov
cmp
rcll
in
xchg
call
insl
mov
loopne
adc
pop
jns
pop
adc
insl
and
xchg
sahf
pop
dec
inc
jae,pn
sub
push
fwait
sub
add
mov
in
or
hlt
lahf
outsb
or
sti
xchg
stos
pop
pop
adc
lock
add
xchg
insl
mov
inc
cmpsl
adc
lcall
in
mov
pop
popf
dec
or
push
pop
cmc
in
mov
negl
cltd
out
jge
and
mov
add
xchg
mov
mov
xchg
out
jbe
out
pop
scas
mov
mov
dec
jb
ret
arpl
jmp
sub
sub
mov
mov
push
lret
jl
mov
sub
neg
mov
and
mov
aas
inc
fisubl
sarb
mov
sub
lea
mov
jle
es
mov
outsb
sub
sbb
adc
jp
imul
imul
movsl
notb
mov
data16
adc
mov
mov
sub
xor
in
cmp
dec
je
test
insl
jne
inc
or
jl
adc
testl
or
scas
inc
scas
lret
mov
add
jnp
pop
sub
andl
or
add
mov
jbe
ljmp
test
cmpsl
push
movsb
into
sarl
cld
ja
pop
gs
scas
hlt
pusha
and
loope
call
rorl
and
jne
lods
pop
xor
fiaddl
or
xor
lods
movsb
adc
dec
leave
push
int
xchg
dec
fnstenv
mov
hlt
mov
adc
sub
ficompl
test
dec
pop
insb
out
out
ljmp
push
mov
insb
daa
popf
or
jbe
jge
xchg
aad
push
mov
lea
mov
push
fistps
mov
lcall
cmp
movl
loopne
sub
enter
mov
lds
pop
add
xlat
adc
push
xlat
test
xor
sbbb
or
rcl
cmpsb
mull
out
push
dec
shlb
cmpsb
mov
jp
mov
cmpsl
das
lahf
fiadds
jl
cmp
repz
out
in
outsb
mov
sbb
add
in
adc
pop
ror
jnp
push
adc
fs
dec
loop
sbb
mov
mov
dec
pop
cld
and
pushf
adcb
or
cwtl
in
jl
ss
movsl
sub
mov
in
sub
jne
aam
jne
dec
psllw
add
jnp
mov
ffreep
mov
xchg
inc
xor
inc
ljmp
push
enter
hlt
flds
notb
dec
sub
adc
jns
push
mov
imul
dec
stos
rolb
pop
xor
mov
dec
pop
fwait
xor
ret
mov
pop
lods
ss
inc
pop
and
push
xor
mov
adcl
push
fcoms
inc
mov
xchg
lods
push
enter
mov
pop
xchg
in
jg
xchg
dec
inc
cmp
pop
jle
jp
sbbb
ret
arpl
aas
or
cwtl
adc
mov
cmp
sarl
mul
insl
aam
and
rcrl
int
leave
and
mov
test
sbb
insb
movsb
imul
arpl
xor
mov
push
icebp
ret
les
fisttpll
into
test
sbb
mov
cmp
jmp
mov
scas
inc
int
mov
shll
and
sub
or
popf
lods
mov
dec
shr
pop
xor
add
testl
mov
and
jle
imul
dec
insl
and
inc
ds
xorl
dec
adcb
push
outsl
xor
mov
outsl
sahf
dec
jns
outsb
in
push
mov
mov
loopne
add
test
mov
mov
sub
push
mov
pop
xor
test
pop
lret
rolb
mov
in
jns
frstor
mov
push
xchg
enter
fstpt
inc
iret
sbb
xor
mov
repnz
or
xlat
fcmovu
sub
gs
rcl
int3
inc
outsl
mov
pop
ja
mov
lods
lea
xchg
cmpsl
sbb
stos
adcl
addb
cmp
outsl
les
adc
outsl
mov
jmp
out
ja
and
jne
push
add
jp
push
mov
adc
filds
out
dec
movsl
pop
out
pop
test
or
pop
sbb
sbb
pushf
push
mov
push
lcall
mov
cmpsl
rcrb
mov
push
push
icebp
dec
in
xor
jnp
loope
aad
sub
lret
cmpsb
test
adcb
rcll
and
push
push
push
xchg
lods
les
clc
mov
cmp
stos
js
push
popa
mov
sub
notb
into
into
mov
adc
icebp
push
dec
push
lret
xchg
sahf
pop
inc
lea
int3
pop
push
rorb
and
inc
add
and
xchg
int
xor
sbb
lret
orb
adc
imul
jmp
sub
mov
fists
jns
pop
shll
mov
fcoml
lods
lock
arpl
pop
inc
cltd
adc
jl
mov
mov
jl
je
jne
and
lock
testl
dec
gs
aaa
sub
push
cld
lret
or
pop
cs
pop
inc
les
pusha
xchg
scas
cmpsb
cld
shrl
lods
inc
mov
stos
inc
push
and
stos
sbb
xor
cmc
mov
adc
ljmp
mov
cmpsl
loopne
ror
cmp
aaa
int
jns
aam
add
pop
xor
sbb
adc
xchg
xor
push
jo
hlt
sahf
lods
pusha
mov
out
call
add
pop
push
std
and
and
popl
adc
std
in
jns
stc
pop
lret
lock
adc
in
add
dec
sub
mov
lcall
pop
xor
mov
stos
rorb
les
mov
mov
and
outsl
mov
ja
or
ja
lahf
push
lods
cmp
popa
push
inc
push
add
movsb
jae
jns
jp
psrad
pop
push
mov
aaa
xor
clc
jecxz
outsb
xchg
test
pop
mov
clc
xor
lods
cmp
push
mov
fimull
mov
jne
mov
and
mov
and
repnz
dec
cmp
cltd
xchg
and
xor
ret
ds
ss
sbb
cmc
mov
shrb
push
or
mov
pop
out
mov
addl
mov
sub
push
xor
jno
add
sbb
test
into
pop
dec
xchg
sahf
sub
std
xchg
jp
xor
in
fwait
mov
mov
into
out
aam
xor
dec
add
jb
add
mov
in
xchg
adc
jle
insl
in
pop
mull
and
mull
cmpsl
mov
push
cmc
bound
stc
sbb
add
in
loop
out
cmpsl
pop
imul
sbb
push
push
pop
sub
iret
adc
sbb
dec
mov
jns
sbb
xor
decl
ret
out
ss
and
js
pop
sub
mov
les
mov
test
jne
lods
data16
fnsave
pop
or
xorb
fidivrl
jae
cwtl
mov
push
xor
mov
stos
int
push
push
mov
xor
adc
push
sbb
jp
adc
cltd
andl
sub
sub
dec
js
cmc
mov
or
sbb
popf
dec
jle
out
xchg
adc
push
add
sub
mov
dec
mov
sub
clc
ret
jl
mov
in
testl
in
movsl
mov
test
movsl
fcmovb
and
pop
pop
xor
insb
sub
bnd
enter
out
mov
ljmp
bound
pop
aad
shlb
mov
sbb
leave
ja
nop
jne
pop
mov
sbb
ds
adc
inc
icebp
jbe
rolb
adc
sbb
lods
and
adc
mov
mov
dec
xor
cmp
arpl
int3
jg
call
xchg
cmp
inc
xor
inc
sub
pop
pop
dec
cs
push
push
and
mov
and
push
imul
adc
push
lret
divb
xchg
hlt
scas
push
out
xchg
movsb
pop
mov
cltd
pop
pop
in
fidivl
cld
inc
inc
mov
adc
add
lods
jb
xchg
jmp
xorl
adc
xor
pop
addr16
sub
sahf
es
sub
insl
cmpb
and
jae
data16
push
aas
inc
cmp
imul
sub
xchg
scas
xchg
mov
xor
mov
mov
ret
outsl
loope
xchg
sahf
cmpsl
mov
leave
cmp
fbstp
je
call
idiv
mov
jmp
fwait
lods
popa
notb
sub
cs
lret
and
aad
jp
js
test
stc
mov
cmp
pushf
inc
arpl
jno
add
dec
mov
pcmpeqb
pop
inc
xor
fdivr
fsubrl
inc
ret
sbbl
mov
mov
or
and
sti
push
fildl
js
ja
mov
inc
out
cmp
aam
add
or
mov
sbb
dec
xchg
in
xor
repnz
lock
ds
xor
cmpsl
add
out
jl
mov
bound
pop
orb
clc
nop
xchg
mov
push
sbb
xor
cmp
add
mov
clts
aad
loope
inc
es
xchg
dec
jl
movb
cmpsl
add
mov
push
adcb
sbb
dec
sti
mov
ljmp
mov
push
jge
pop
mov
mov
lret
pop
out
mov
mov
add
xchg
sub
fistpl
mov
and
pusha
pop
cmp
pop
pop
popa
and
outsb
test
stos
mov
shrl
sub
add
push
outsb
xchg
gs
and
mov
scas
push
stos
aaa
lret
sbb
xorl
xor
int
in
insl
pop
cmp
adc
jle
mov
add
dec
adc
mov
call
loope
cmp
movsl
daa
and
inc
ret
push
push
cmpsl
and
push
dec
ljmp
push
fildl
mov
hlt
pop
jmp
and
and
sbb
cld
sub
sbb
sub
inc
addr16
jecxz
sub
or
rcrb
test
mul
jns
pop
fs
cmp
stos
call
mov
and
push
xor
stos
lret
xor
sbbl
and
sbb
lcall
add
mov
mov
adc
into
sub
rorb
push
sub
pop
in
jae
jl
imul
rcrb
idivb
mov
popf
inc
cmpsb
cli
push
lds
xor
push
mov
testb
lret
and
or
mov
call
ja
mov
insb
das
xchg
jbe
pop
mov
push
cmp
inc
cmp
jg
dec
push
push
xchg
mov
fs
in
jmp
push
insl
and
cli
movsl
repz
clc
int3
jno
mov
addl
mov
andl
rcl
nop
in
cld
pusha
rclb
xchg
fdivr
sbb
lea
dec
test
add
jnp
mov
adc
addr16
cmpsb
mov
dec
pop
sbb
dec
pop
fs
jb
dec
jl
insb
loope
push
andl
mov
mov
stos
mov
cld
push
xchg
xchg
add
fsubrl
add
jbe
fwait
shll
pop
loop
mov
xor
into
push
jae
cmpsb
lods
loope
test
pop
adc
and
je
push
cmpsl
jl
push
mov
fs
repz
lcall
sbb
adc
sbb
and
sar
shll
stc
mov
inc
xor
dec
divb
rcrl
in
inc
testl
pop
cwtl
test
lods
mov
test
insl
dec
xchg
sbb
pop
xor
je
jle
jnp
es
pop
mov
addr16
sbb
pop
mov
in
adc
sub
adc
pcmpgtw
subl
mov
clc
sub
data16
add
ss
pop
xchg
inc
sbb
pop
xchg
pop
add
fcompl
mov
in
in
adc
dec
push
pop
inc
push
mov
sahf
xchg
or
lret
xor
jecxz
inc
lods
daa
loope
addb
push
mov
sub
inc
aas
stc
jbe
stos
fdivrp
and
push
rclb
inc
jae
addb
adcl
iret
mov
mov
xchg
jmp
cwtl
sahf
lahf
adc
stos
inc
lods
repnz
adc
mov
add
adc
mov
in
jnp
mov
movsb
add
addr16
or
mov
jg
aad
and
xor
or
repz
shlb
fucom
int
adc
das
push
jnp
leave
inc
rcrl
adc
mov
aam
mov
add
dec
sbb
imul
test
dec
add
mov
mov
inc
call
aam
cmc
test
sets
aaa
cld
add
mov
and
xlat
sbb
and
xor
fcmovne
and
mov
add
push
cli
and
xor
and
and
jl
lods
out
test
jae
pop
xor
xchg
inc
insb
fcmovu
jo
nop
sbb
mov
jnp
sbbl
xor
in
outsl
pop
inc
mov
pop
jnp
pop
mov
cmp
cwtl
fsts
call
out
loopne
and
adc
lds
sti
mov
xchg
or
sarl
lret
lret
sti
mov
add
scas
inc
scas
cmpsl
in
mov
mov
jmp
mov
shl
sub
or
sbb
loope
shrb
bound
inc
mov
mov
adc
jb
dec
push
mov
dec
mov
sbb
pop
push
adc
into
cs
xlat
nop
xchg
test
xchg
mov
jmp
fdivrs
test
in
stc
add
loop
inc
inc
mov
push
push
push
jle
aaa
scas
sbb
outsl
sub
xor
test
add
and
sarl
in
mov
int
rcl
sbb
pop
test
icebp
icebp
ljmp
pop
sbb
xlat
push
add
fistps
gs
test
into
sti
sti
cmp
test
mov
pop
jle
mov
pop
cltd
jmp
bound
sub
push
cmp
adcl
fcomi
and
dec
jb
stos
mov
mov
arpl
inc
aad
add
adc
xor
pop
push
pmulhw
ret
dec
popf
jns
sbb
pop
lahf
adc
fadds
push
shll
push
rcll
push
push
outsl
mov
ficomps
cs
in
xchg
ja
aam
daa
sub
and
outsl
mov
jo
sbb
popa
or
mov
dec
pusha
dec
in
stc
mov
cwtl
shrb
daa
adc
loopne
dec
out
or
in
int3
pop
mov
loope
stc
push
fwait
ret
pop
xchg
ljmp
loop
xor
popa
inc
rcr
cmp
push
shlb
test
lret
pop
push
xor
je
mov
daa
test
jecxz
call
popa
pop
and
in
mov
adc
aaa
iret
mov
cmp
cmp
adc
ret
jecxz
mov
fimuls
mov
fcoml
jge
push
xchg
cmp
pop
sbb
push
ljmp
inc
inc
loope
xor
jo
clc
dec
pop
aaa
cmc
and
xlat
mov
or
imul
push
push
push
mov
fs
inc
xchg
les
adc
push
adc
arpl
jns
lahf
jo
stos
cltd
test
adc
cmp
hlt
xor
dec
inc
das
mov
mov
pop
jecxz
outsb
mov
scas
mov
shrb
sbb
sub
ret
sahf
int
je
mov
jns
jmp
xor
cmpsl
mov
jecxz
iret
sti
or
cmc
scas
lods
outsl
aaa
mov
jbe
ret
fmuls
sub
jle
pop
rorb
in
push
xchg
int3
pop
inc
sarb
dec
shl
fucom
push
sarl
mov
repz
fstl
mov
rolb
out
sbb
rcrb
dec
test
mov
ljmp
mov
out
inc
inc
xchg
test
pusha
lock
inc
iret
or
aaa
loope
jns
jnp
cwtl
ficompl
inc
cmpb
leave
ljmp
mov
lret
mov
xor
mov
mov
and
mov
sbb
xor
scas
xor
lea
ret
ljmp
adc
add
lods
pusha
fnstcw
jle
lret
add
lods
add
xchg
pop
mov
adc
cltd
ret
lods
roll
gs
jno
imul
shrb
pop
mov
andb
clc
iret
lds
gs
mov
rclb
test
and
or
mov
push
imul
movsl
inc
in
imul
dec
push
roll
dec
stos
xchg
mov
mov
test
test
xchg
jp
xor
int3
xchg
add
cmpl
adc
cmp
xchg
in
out
ss
sti
das
and
push
movsl
scas
or
ret
xchg
fstpl
lock
dec
fsubp
mov
or
shrl
pop
fwait
in
fistpl
pushf
add
js
cmpsb
mov
shlb
xor
and
arpl
iret
xchg
mov
cli
lods
mov
mov
jo
loope
insb
sti
outsl
je
mov
insb
pop
fstps
imul
addr16
sbb
sub
test
inc
inc
and
lds
lds
add
xchg
divb
stc
mov
xchg
loop
cli
fcomps
scas
mov
and
aaa
roll
mov
mov
inc
les
ds
scas
test
fwait
cmp
or
stos
jle
cmpsb
int3
daa
repnz
adc
das
push
jno
xor
fiaddl
push
sbb
jns
cmp
aad
rclb
mov
int
sbb
cs
inc
xchg
scas
in
ret
ja
dec
stos
mov
xor
test
insb
enter
outsl
add
jl
add
mov
je
popf
and
ret
jmp
leave
ret
xchg
or
das
mov
dec
add
sbb
inc
clc
fisttps
cmp
pop
add
daa
xor
js
in
mov
stc
inc
outsl
popa
arpl
jp
xor
das
outsb
jb
or
pop
add
dec
pop
popa
inc
rep
sbb
sub
or
sbbl
cmp
lcall
and
test
punpckldq
std
inc
rcr
aaa
shll
inc
and
int
scas
sti
xchg
nop
inc
xor
aaa
jmp
shll
loop
push
ret
xchg
mov
sub
stc
incl
xor
cld
mov
aaa
xlat
jae
loop
mov
adc
or
in
sub
imul
and
lock
mov
ds
cmc
jbe
adc
or
out
push
hlt
aam
inc
pusha
pop
cld
cmpsb
mov
rcl
in
pop
stos
cmp
pop
dec
jo
mov
sbb
pop
cmp
outsb
pop
popa
xchg
jmp
mov
in
push
inc
xor
fnstsw
push
pop
jb
icebp
xor
es
xor
push
jle
sbb
repz
out
jp
std
sbb
shl
and
pop
shll
icebp
mov
xlat
push
fisttpl
sub
push
rolb
mov
in
in
movsb
test
sbb
push
sbb
add
idivl
inc
adc
cmp
in
inc
in
mov
hlt
xlat
pop
aam
inc
movsb
xor
mov
push
movsl
std
mov
ret
stos
mov
cmp
mov
arpl
add
jb
repz
cmp
shrl
outsl
imul
retw
cmp
repnz
pop
cs
shr
mov
pop
mov
inc
pop
out
lea
jbe
pop
jmp
dec
sar
cmp
adc
out
push
adc
mov
ss
insl
fsubl
xor
jae
jb
pusha
adc
push
cld
ja
lret
aad
add
out
jg
sti
iret
push
or
jl
bound
push
and
pop
arpl
lcall
and
sbb
ja
push
xchg
stc
outsb
or
mov
icebp
pop
jne
stos
mov
call
cmp
xor
lock
pop
and
pop
xchg
xchg
je
sarl
rcrl
jecxz
mov
jp
mov
mov
int3
mov
addr16
movsl
loopne
xchg
mov
rol
xchg
dec
outsb
mov
inc
mov
cmc
clc
inc
paddusb
push
sub
jl
subl
inc
movsl
in
or
clc
gs
jge
repz
mov
xchg
sub
pop
int3
out
sbb
push
mov
mov
jo
nop
cmc
test
sbb
iret
mov
mov
dec
sub
sahf
mov
rolb
sub
jns
lcall
jb
push
jle
fldl2t
jae
imul
fsubr
xchg
inc
bound
mov
mov
and
pop
int
xchg
jl
xchg
xor
sub
jg
leave
jmp
sub
insl
lcall
test
lret
leave
fistps
xor
dec
stc
lock
aas
test
jne
je
xchg
ja
in
shlb
stos
inc
test
call
sub
daa
imul
ret
leave
dec
mov
out
pop
icebp
xor
dec
jbe
sub
fcomps
xor
cmpl
sbb
and
insb
test
out
out
cmpsl
mov
xor
lds
lock
dec
cmp
mov
xlat
mov
icebp
lods
aas
push
ljmp
adc
mov
mov
xor
ss
inc
mov
cmp
fistps
ss
mov
or
mov
or
outsb
shll
mov
subl
xchg
xchg
imul
out
cmp
push
lret
std
xchg
inc
sub
adc
mov
push
fwait
pop
mul
mov
jle
jo
push
lock
mov
mov
in
mov
and
scas
mov
ret
ret
aaa
arpl
and
mov
stos
and
mov
sub
or
inc
out
lahf
cs
push
fidivs
subl
add
imul
pushf
sahf
in
xlat
and
dec
aas
pop
lock
mov
push
dec
dec
cmp
fisttpll
dec
sbb
int
xlat
stc
lods
pop
rcrl
lcall
xorl
pop
cmp
mov
clc
add
mov
out
sbb
lret
jecxz
xor
pop
idivl
cwtl
mov
mov
stc
push
lcall
punpcklbw
dec
mov
or
jecxz
push
cmp
ds
fcomps
xor
scas
js
inc
dec
adc
mov
xor
scas
dec
daa
xchg
jmp
in
jl
js
ss
int
add
std
cmp
mov
cli
cwtl
aam
and
test
ss
inc
pop
push
dec
add
dec
imul
push
jbe
dec
or
lret
push
mov
push
lea
out
cmp
pop
jb
arpl
scas
adc
push
sub
imul
push
or
push
stos
dec
es
pop
dec
add
sbb
and
sub
pop
sbb
push
into
lods
dec
hlt
pop
test
mov
cmpsl
vorps
clc
outsl
push
es
fbstp
in
jbe
out
mov
add
inc
mov
and
insl
push
pop
add
pop
std
add
je
fwait
dec
lret
push
lret
adc
iret
xor
mov
dec
inc
mov
xchg
outsl
lds
push
scas
shl
push
test
mov
sarb
cmpsl
xchg
lock
enter
or
mov
sbb
push
sahf
and
push
sbb
or
movsb
and
or
addr16
sub
sbb
xchg
pop
inc
outsl
add
or
jle
outsb
jmp
sbb
cmp
lahf
scas
ret
call
ret
cwtl
cmpsl
mov
mov
stos
jp
push
cmp
or
test
adc
inc
xchg
sub
lds
ret
xchg
or
hlt
cmp
push
inc
mov
lcall
hlt
stos
pop
icebp
out
icebp
dec
aad
int3
decb
lock
outsb
pop
sbb
jno
pop
sub
dec
mov
xor
mov
cmp
cmp
lods
pushf
or
int
lahf
cmp
les
leave
inc
push
cmp
fcompl
into
test
dec
jg
clc
adc
or
sbb
arpl
xchg
js
adc
sub
test
sbb
dec
shlb
test
js
lock
cmpsb
mov
mov
iret
pop
dec
int
cmp
data16
sub
or
dec
xchg
enter
mov
in
mov
aam
inc
pop
rcll
jecxz
ret
and
inc
lret
mov
icebp
push
mov
pushf
lcall
test
add
dec
push
dec
cmc
sbb
sbb
and
jge
lock
leave
dec
inc
xchg
outsl
movsb
insb
shrb
out
outsb
ret
out
int
popf
sub
ja
in
pop
jmp
sbb
repnz
or
nop
or
jno
cltd
mov
sub
std
sbb
sub
cmp
lcall
scas
jge
xchg
adc
addr16
cld
cmpsl
pop
rcrb
ja
mov
dec
cmp
mov
pop
xor
xchg
pop
mov
mov
jno
ret
sbb
daa
loopne
cld
xor
bound
cmpsl
lods
lahf
ljmp
jbe
xchg
cs
imul
mov
xor
and
mov
fcmovbe
mov
jb
inc
int3
and
mov
out
mov
mov
notl
and
or
cmc
pushf
mov
adc
xor
mov
push
imul
and
shrb
fsubs
mov
mov
add
jbe
std
inc
inc
js,pt
in
fstps
xchg
rorb
divb
inc
subl
pop
pop
fimull
mov
enter
scas
cmp
mov
int3
sub
lods
sbb
and
ss
add
mov
lret
adc
fdivl
out
test
and
orl
pop
stos
mov
insb
rcrl
jae
jg
iret
jb
insb
lret
push
sub
fidivrl
and
mov
mov
xchg
xchg
xor
dec
test
jmp
fmul
insb
shrl
imul
pop
jnp
push
jmp
xor
fdivrs
es
lods
mov
pop
dec
cmp
mov
imul
pop
push
fdivrs
into
sub
xlat
or
mov
in
popa
ret
data16
sub
fists
pop
sbb
adc
cwtl
xchg
add
into
stos
icebp
lock
fisttpll
fwait
bound
sbb
fcmovnbe
cwtl
stc
cli
sub
sub
imul
insl
xchg
and
rorl
pop
daa
inc
adc
enter
das
adcl
xchg
call
mov
mov
dec
cmpsb
lret
sub
dec
rclb
xchg
sub
notb
dec
scas
fstl
outsl
add
sbb
push
or
outsl
xchg
into
repz
fnstenv
and
loopne
mov
jle
cmpsl
shl
xor
dec
inc
pop
ja
or
dec
mov
fcom
fldcw
dec
push
push
pop
int
maskmovq
testl
jge
jno
fwait
mov
out
out
rcrb
mov
cld
repz
imul
enter
int
fldenv
xlat
jle
adc
or
mov
mov
loop
fimuls
pop
jo
paddw
sahf
xchg
aad
adc
add
das
ret
insl
movl
lcall
mov
sti
sub
rorl
adc
cmp
ss
xchg
mov
xor
js
std
popf
xchg
adc
and
and
lock
in
in
mov
mov
xchg
pop
dec
movsl
mov
mov
outsb
mov
loop
aas
inc
arpl
push
dec
dec
mov
inc
push
and
frstor
adc
pop
jns
mov
sub
adc
aam
sahf
lock
insb
jae
push
in
test
pop
push
pusha
pusha
push
adc
mov
sti
rorl
dec
sbb
fsubs
out
cld
in
pop
insl
pause
push
jnp
push
lret
sbb
dec
pop
scas
dec
jo
pop
add
nop
sti
jno
add
dec
pop
scas
inc
out
in
and
or
lahf
popa
movsl
xor
xchg
pop
inc
jo
in
jno
popa
and
sub
cmp
xor
add
add
sbb
ret
or
dec
jl
or
jle
xchg
adc
xchg
mov
pop
dec
out
sub
inc
or
cld
xchg
lret
mov
mov
push
out
xchg
cmpb
mov
cli
sub
lods
xchg
call
popf
outsb
ds
pop
jne
dec
ljmp
push
std
inc
xchg
divl
mov
fisttps
pop
aam
loop
in
aaa
leave
gs
lds
int3
jp
xchg
insl
fs
inc
pop
add
push
inc
and
cmpsl
scas
pop
cmp
cmc
mov
xor
push
popa
in
fs
xchg
sub
mov
aas
dec
mov
and
shlb
shl
lret
inc
cltd
mov
lea
icebp
mov
popl
movsb
pop
xor
push
and
ja
inc
jb
std
mov
aam
mov
enter
push
ret
lret
xor
xor
mov
push
cld
stos
das
inc
and
pushl
ret
sbb
cwtl
push
arpl
add
jno
cmp
mov
mov
mov
sahf
std
sbbb
enter
mov
out
mov
cmp
mov
pop
dec
pop
push
repz
rcrb
outsl
pop
fcoms
mov
aaa
sbb
out
movsb
jnp
adc
stos
push
rep
mov
shl
iret
dec
cmpsb
sub
xchg
mov
sti
cld
inc
mov
rorl
mov
mov
fs
mov
pop
or
pop
nop
push
ja
adc
repnz
jecxz
mov
lods
leave
dec
movsb
fwait
cmp
test
scas
divb
jbe
repz
addr16
gs
lds
mull
or
popa
ss
ja
fwait
push
or
fimull
and
add
mov
shl
or
jl
call
scas
inc
mov
inc
cmp
xor
fistpl
push
addr16
cmc
mov
pop
scas
push
cmpsb
cmp
sahf
es
xor
jle
inc
pushf
aam
repz
xchg
mov
movsl
mov
mov
out
xchg
dec
aas
hlt
inc
popa
pop
xlat
xor
arpl
mov
pop
xor
xchg
push
xchg
jle
and
push
insb
or
shll
mov
je
lock
out
sbbl
in
push
int
mov
ror
xchg
movsb
jecxz
add
add
sahf
divl
cli
push
rorl
addr16
cmp
je
bound
inc
dec
dec
mov
jne
adc
movb
jnp
push
adcb
xchg
scas
and
pop
mov
es
arpl
jmp
mov
cmpsb
arpl
adc
xchg
sbb
xor
sbb
push
ret
or
jmp
sub
mov
lods
and
loope
addr16
sub
and
or
mov
test
mov
aaa
decb
test
pop
pop
adc
das
cmc
sub
popl
mov
dec
repz
jge
mov
mov
cmpsl
les
add
shl
test
adc
and
std
or
fstpl
cmp
xchg
das
mov
mov
pop
in
xorl
cmc
mov
push
push
add
into
or
jmp
stos
and
push
dec
inc
fstpl
fmul
dec
test
call
push
out
mov
pop
jns
enter
inc
pop
cltd
cmp
and
outsb
testb
mov
call
adc
push
push
or
out
dec
test
movsl
push
add
inc
in
inc
mov
insl
or
fsubl
adc
jmp
in
sub
push
or
jo
add
sarb
and
xchg
aad
iret
lock
ret
in
or
pop
int3
push
addl
mulb
push
sbb
out
loop
sub
adc
xchg
repnz
add
test
rorb
movsb
jnp
aaa
pop
mov
xor
sti
xchg
in
xor
sbb
outsb
pusha
cli
sbb
push
das
mov
repz
cmp
adc
lahf
mov
mull
cs
in
rcrb
scas
test
aas
jb
aad
shrl
pop
mov
mov
mov
imul
or
pop
xchg
sub
and
int
out
or
sti
mov
push
cmp
fs
test
lahf
jbe
loop
pop
cmp
lock
adc
push
inc
stos
into
inc
add
mov
test
in
orb
out
test
imul
xor
test
jmp
push
std
and
mov
popa
xor
int3
push
or
dec
dec
jmp
int3
mov
pop
sbb
imul
shlb
bound
inc
fucomp
stc
dec
sub
negl
icebp
or
int
mov
lods
daa
push
push
leave
negl
jle
dec
inc
add
mov
shlb
or
ret
test
call
mov
jb
pop
testl
into
cmp
push
cmp
inc
xchg
stos
and
daa
ffree
lods
xor
insb
sbb
stc
pop
cmp
fildll
es
loopne
movsl
pop
rol
inc
mov
or
stc
addr16
mov
daa
lahf
xlat
add
fdivr
push
rcl
cld
cltd
out
repnz
cmp
sahf
hlt
mov
dec
lahf
test
mov
and
stos
add
rorb
push
mov
cmp
into
ja
shll
lea
cmp
in
loopne
xchg
arpl
inc
mov
xchg
dec
test
jns
push
aas
cltd
testl
pop
test
int3
xor
mov
mov
adc
gs
or
or
xchg
into
xor
mov
jns
xor
jle
lahf
inc
adc
push
xlat
mov
popa
cli
mov
or
insl
imull
sbb
xchg
jb
mov
popa
xor
arpl
dec
inc
jno
mov
loop
pop
jmp
mov
push
jecxz
and
xor
rorb
stc
dec
push
sbb
push
add
aaa
or
mov
mov
xorb
add
push
push
push
fistps
fwait
or
xor
and
loopne
push
push
xlat
adc
enter
xchg
sub
fcmove
fimull
mov
int
cmp
movsl
dec
cltd
into
push
mov
sbb
mov
add
jns
or
sbb
je
test
andb
mov
inc
dec
inc
sub
call
mov
cmp
scas
test
cmc
sub
int3
xchg
jmp
scas
pop
jmp
sbb
or
mov
insb
ljmp
fsubrs
mov
repnz
mov
int3
xor
jl
roll
mov
adc
pop
add
loopne
inc
in
aam
stos
add
popf
add
das
aad
imul
jp
and
mov
mov
sti
inc
jns
testl
aam
pop
repnz
and
leave
stos
cmp
jmp
arpl
cs
fldl
jns
in
outsb
or
or
jp
nop
jno
or
cmpsb
push
cmp
enter
pushf
adc
sub
sahf
ret
add
or
and
xchg
cmpsl
sbb
iret
les
add
pop
scas
dec
fnstcw
ja
repz
mov
or
imul
test
mov
mov
lods
xchg
push
pop
leave
lods
addb
fsubrs
add
adc
inc
xchg
adc
push
jo
out
cmpsb
lret
dec
in
rcrb
cwtl
adc
add
std
js
xchg
and
fsubrl
and
ja
ret
push
and
push
jecxz
inc
in
cmp
scas
sub
inc
stos
pop
lret
cmpsb
mov
pop
push
mov
xchg
js
push
les
js
arpl
dec
lcall
lret
xor
test
rorl
pop
jo
jb
and
inc
stos
mov
cs
movsl
and
sub
xchg
jg
dec
lea
mov
mov
nop
pop
inc
std
push
jmp
mov
xor
sub
jg
mov
or
imul
or
cmpsl
cmp
insb
sahf
or
mov
jne
stos
mov
scas
push
jne
sub
sbb
fstpl
mov
xor
and
push
xchg
adc
dec
cmc
pop
out
xchg
leave
xorb
add
mov
int3
and
lret
bound
mov
call
sub
mov
fiadds
aaa
jnp
mov
mov
lret
sahf
rcrb
shl
inc
cmc
hlt
iret
sbb
pop
jb
lods
aam
pop
push
cmp
imul
pusha
dec
sub
xchg
fs
fistpll
push
push
inc
lahf
add
and
mov
loope
pop
daa
pop
roll
sub
inc
cmp
std
push
add
cmpsl
jbe
cltd
sbb
fst
jg
stos
mov
int3
and
push
rcrl
jge
add
out
push
je
and
adcl
sbb
push
std
mov
popa
outsb
clc
sub
mov
insl
jle
cmp
inc
lds
sub
inc
xchg
xchg
idivb
out
mov
cli
fistpll
and
hlt
gs
jl
lods
js
fsubr
pop
jne
mov
push
mov
add
fwait
push
jl
push
mov
adc
jp
and
mov
jo
rcrl
mov
jo
xchg
push
je
pop
lret
push
or
pop
das
stos
lahf
inc
pusha
pop
cmp
mov
push
repz
cmpsl
sub
sbb
sub
andb
jecxz
pop
arpl
lds
mov
dec
mov
mov
inc
in
in
lcall
scas
scas
inc
mov
jg
jns
push
loop
push
pop
push
sahf
clc
dec
aam
fwait
in
mov
jl
inc
inc
inc
dec
test
mov
mov
jb
and
nop
push
add
mov
xor
je
and
cwtl
xor
cmp
dec
fs
push
outsl
outsl
mov
dec
sbb
and
jle
inc
inc
pop
cltd
or
out
jl
xchg
inc
cmp
push
cmp
inc
mov
push
lods
insl
dec
push
lea
inc
out
dec
je
ja
testb
xlat
xor
dec
fcmovbe
xor
mov
jp
push
iret
mov
int3
dec
dec
call
shl
mov
andb
inc
lcall
call
sbb
insl
mov
dec
sbb
lds
xchg
imul
out
and
sbb
nop
aam
push
stc
add
or
mov
adc
pop
jle
dec
sub
stc
call
cmp
push
insb
fwait
es
push
test
sbb
cmp
mov
inc
in
xchg
popf
push
decl
test
roll
test
dec
pop
shll
out
adc
dec
xchg
jno
and
sub
call
orb
loop
adc
enter
inc
mov
cmpsb
push
cwtl
pusha
lahf
jno
pushf
sbb
popa
fistpl
ljmp
sub
inc
out
cld
mov
mov
sar
popf
and
push
icebp
xchg
xchg
scas
push
cmpb
xor
add
xorb
mov
dec
sub
jle
jo
mov
lret
scas
insl
loop
jmp
out
ret
dec
js
xchg
sub
pop
mov
int
xchg
lahf
adc
mov
mov
inc
rorb
or
jmp
xlat
js
jge
cmp
lods
push
fnstenv
add
in
jg
cli
fwait
lds
outsb
cmpsb
xchg
jno
and
mov
pop
jle
xor
cmp
add
or
lods
lret
adc
mov
js
scas
or
inc
fldcw
adcb
into
inc
sub
fsubl
je
rcr
lea
cmpb
stos
xor
daa
subl
pop
inc
sqrtps
cmp
sbb
sbb
jecxz
outsl
loop
hlt
in
push
or
or
push
iret
cmc
mov
mov
sahf
dec
hlt
lods
cmp
or
push
push
lock
pop
pop
arpl
adc
ds
clc
pop
push
fisubl
out
mov
pop
push
imul
enter
mov
dec
std
xor
cwtl
mov
add
xchg
pop
cmp
add
cwtl
insl
and
mov
cld
inc
mov
and
add
or
fwait
sub
push
xchg
and
mov
int3
icebp
fldl
adc
imul
lcall
mov
fstps
lahf
pop
repz
outsl
or
int3
fsubrl
mov
rolb
pop
push
popa
push
pop
or
jp
imul
mov
adc
xor
ffree
xor
ficoms
inc
push
cmpsl
add
cmp
mov
clc
pop
pop
in
pop
mov
sub
xchg
icebp
ret
pusha
sbb
xor
dec
jp
das
dec
repz
mov
ret
orl
and
push
xorb
push
jno
and
faddl
xchg
adc
lcall
sub
cmc
jge
sbb
xlat
and
sub
mov
xchg
sbb
mov
out
mov
loopne
aaa
or
mov
data16
out
in
enter
or
xor
lea
jecxz
aaa
cmp
scas
push
and
scas
out
xor
lret
sub
adc
int
push
pop
xorl
fimuls
mov
decl
je
int
mov
add
stos
dec
xor
iret
cld
mov
xor
adc
aaa
jle
cmp
es
xchg
inc
mov
shll
push
and
or
mov
pop
popa
ja
rol
sti
adc
dec
xchg
sub
sub
cli
lock
rorl
stos
cmpsb
mov
xor
inc
mov
in
ja
repz
cli
jnp
cmp
mov
fmull
loope
xchg
push
add
mov
pop
andb
jo
dec
xchg
stos
mov
dec
hlt
stc
adc
or
jbe
mov
inc
dec
pop
call
sahf
add
arpl
sub
mov
lahf
pop
jp
sub
or
fists
push
in
push
adc
loope
push
cmpsl
pop
icebp
xor
mov
icebp
and
in
enter
sbb
xchg
jl
pop
sub
shl
cwtl
cwtl
push
repz
xor
dec
mov
and
out
or
cwtl
in
out
cmp
adc
shrd
sub
and
out
push
popf
aad
cmp
inc
push
push
aas
inc
loopne
iret
adc
clc
in
imul
gs
in
lea
fwait
pop
data16
xlat
mov
or
mov
mov
sub
mov
cmp
icebp
xchg
fisttpll
cmp
push
ljmp
dec
push
and
fisttpll
out
rolb
repz
inc
and
movsb
loope
insb
inc
jno
clc
loopne
and
mov
rclb
divb
pop
out
push
jb
lea
push
stc
and
cmp
mov
mov
add
lods
pop
and
ret
xor
push
xor
hlt
cmpsl
cmpsb
lahf
mov
sarl
pop
add
int
fnstenv
les
inc
repz
push
inc
rcrl
lea
xor
negb
aam
pop
xor
rorl
mov
int3
dec
and
addr16
jno
inc
push
and
movsb
sbb
push
outsl
jb
add
bound
jno
sub
sbbb
cwtl
icebp
push
dec
cmp
mov
push
xchg
not
movsb
in
pop
pop
mov
cmp
push
push
ljmp
push
and
cmpsl
cwtl
mov
aas
movsl
mov
sbbl
lock
jecxz
push
xchg
mov
sbb
add
push
sub
mov
add
idivl
xchg
adc
cwtl
ds
lods
std
and
mov
xor
pop
sub
loop
sahf
int
rcl
repz
cmp
ret
gs
aad
sub
xor
scas
stc
aad
push
or
sbb
imul
mov
packssdw
out
icebp
stos
imul
cmp
xor
mov
mov
insl
int
sub
fs
jae
mov
xor
out
sti
das
mov
int3
sarl
jmp
push
fwait
inc
lea
and
mov
jnp
sbbl
mov
sbb
shrb
scas
fiaddl
mov
mov
cmpb
jae
repz
mov
add
outsl
lcall
pop
add
jl
bnd
push
xor
pop
test
addr16
and
aad
jmp
lods
test
mov
dec
xchg
ficomps
xor
mov
mov
jo
cmp
jns
push
in
cmp
test
xchg
loop
in
and
add
pop
mov
sti
gs
loopne
outsl
push
cli
jge
aam
popa
addr16
iret
fistl
sbb
push
cwtl
adc
gs
into
xchg
adc
sbb
into
push
or
cwtl
and
xlat
mov
push
daa
test
xchg
jl
inc
cmp
sbb
mov
jb
xchg
cmp
xor
push
loopne
xchg
sahf
inc
sar
inc
jbe
fsubrl
inc
sub
enter
out
jne
adc
and
pop
jbe
dec
lods
mov
ja
or
ret
enter
das
jg
pop
subl
or
sar
sub
fldenv
sahf
push
leave
jns
xchg
mov
rcll
ljmp
fnstcw
pop
test
aad
jp
pop
cmp
jmp
add
jnp
dec
test
mov
sbbb
out
xor
cmp
repz
add
repnz
leave
lods
sub
repnz
lods
cmc
fimull
or
out
mov
inc
int3
push
xchg
sub
loop
xchg
stos
loopne
outsb
flds
xchg
test
icebp
idivl
pop
rolb
lret
xchg
mov
lea
hlt
adc
mov
jmp
mov
cmp
xor
jbe
movsb
jnp
aaa
mov
push
pop
mov
insb
negb
adc
stos
sti
jg
and
jp
jae
test
jbe
sub
pop
mov
mov
xchg
add
int3
pop
in
popf
xchg
insl
fcoml
adc
jo
add
daa
jbe
lock
dec
mov
sbb
adc
cmp
sbb
fwait
std
xchg
fucomp
jl
mov
and
sbb
insl
lea
adc
test
push
arpl
popa
ret
jge
into
int
in
movsb
sub
pop
adc
mov
dec
cltd
push
adc
and
cmp
lcall
sbbb
dec
jge
cwtl
ds
pop
pop
xlat
mov
out
insl
xchg
leave
cmp
scas
jp
dec
mov
sub
mov
shrb
mov
aam
push
pop
insl
fsub
xchg
sub
es
mov
mov
lods
and
scas
out
ret
stc
aaa
pushf
imul
jo
xor
out
scas
in
inc
fnsave
mov
xor
insl
push
jge
inc
pop
movsb
and
ret
andl
loop
pop
mov
xor
nop
xor
call
adcb
jae
icebp
mov
push
sbbb
pop
xchg
filds
mov
cwtl
sbb
cmp
dec
cmpsl
out
jnp
xchg
pop
ja
ret
ficomps
dec
lahf
cmp
or
mov
sahf
pushfw
stos
gs
push
pop
sbbl
daa
or
test
inc
fwait
mov
sub
and
mov
loop
arpl
or
cs
test
jp
push
dec
adcb
xchg
lret
cmp
cmpsl
push
push
cli
cmp
sbb
jbe
push
int3
ret
cmp
fisubs
ja
sub
in
mov
ret
xchg
cmp
loope
sub
leave
adc
popf
scas
test
out
push
sub
into
pop
mov
sub
inc
loope
add
xchg
add
mov
lock
ret
push
sbb
push
inc
inc
test
xor
repnz
out
xor
dec
bound
mov
cmpsl
test
mov
mov
pop
jns
test
mov
or
fwait
es
rorb
push
sarl
cmp
bound
mov
imul
arpl
or
ljmp
lods
add
pop
mov
je
adc
mov
mov
test
adc
stos
cmp
jbe
cmp
movsb
adc
mov
pop
int
sub
sbb
sub
xor
inc
hlt
push
sub
rorl
int3
mov
in
add
lods
and
jns
data16
jmp
mov
scas
test
dec
jb
rcrb
test
das
dec
aas
mov
outsb
bnd
mov
out
inc
pop
fdivrl
adc
call
and
add
mov
pop
xchg
and
aas
int3
dec
xchg
add
or
popf
adc
adc
movl
sbb
sbb
or
das
cli
sbb
fisubl
and
or
mov
inc
loop
stos
stc
popf
inc
cwtl
xchg
adc
lret
sub
and
stc
sti
mov
cmpsb
push
xchg
mov
scas
sbb
jnp
iret
loope
mov
push
push
rorl
xchg
add
mov
fsubrl
cs
mov
bound
pop
jo
popf
das
mov
push
sarb
cmpsl
test
dec
scas
jb
fisubl
xchg
jns
int3
mov
mov
pop
adc
push
popf
sbb
ja
sbb
add
jmp
loope
inc
scas
dec
mov
loop
sub
fcompl
les
leave
xlat
jg
adc
out
loopne
daa
sti
rcrl
push
iret
mov
sahf
ret
stos
jne
shl
test
and
sbb
mov
clc
adc
loope
stos
daa
cs
ja
sbb
mov
sub
dec
mov
dec
add
imul
xchg
adc
pop
fdiv
in
mov
jl
jge
movsl
jl
aas
mov
sub
sub
test
loopw
into
and
repz
lock
lds
and
lahf
lods
cs
in
ss
pop
adc
adc
test
in
mov
aas
cmp
jo
dec
sbb
push
orl
xor
repz
dec
xchg
xchg
arpl
inc
dec
fwait
adc
sti
cld
adcl
adc
out
jnp
fcom
xchg
pushf
cmp
mov
pop
sbb
test
lahf
xchg
mov
dec
push
xor
push
gs
pusha
ljmp
cmp
xchg
adc
dec
jno
outsl
int3
add
add
imul
mov
sbb
fists
dec
pop
inc
inc
xchg
push
mov
enter
push
dec
fsubrs
ret
cmpsl
or
aas
cmpb
cld
pop
pop
outsb
lahf
mov
push
imul
into
pop
cmpsl
and
leave
lods
jbe
addr16
mov
xchg
dec
sub
push
xlat
stos
ss
aam
ret
mov
mov
inc
fsubrs
inc
cs
cltd
mov
out
std
shll
fcoms
push
dec
in
xlat
div
ljmp
subb
loopne
data16
pop
cli
pop
jge
insb
pop
stos
xchg
aas
mov
push
in
fsubrs
shl
xlat
ds
or
cmpsb
jl
cmpsb
sub
scas
sbb
add
lret
push
xor
out
xor
lds
mov
testb
lds
xchg
xchg
iret
jns
dec
out
pop
mov
xor
pop
or
in
sub
mov
loop
sarl
push
rcrb
xchg
mov
lods
mov
cwtl
and
sub
cmp
repz
stc
push
or
fldl
mov
rol
or
push
imul
cmp
and
ljmp
movsl
loope
and
or
pop
mov
jle
iret
xor
sbb
aam
data16
lods
pop
mov
js
cmpsl
sbb
insl
ja
mov
sub
stos
jb
sbb
testb
stc
xchg
push
rorl
mov
shll
cmp
data16
pop
into
aas
lret
sub
xchg
xchg
xchg
test
js
data16
stos
in
pop
xchg
mov
imul
sub
imul
or
mov
movsb
cmp
sbb
sbbb
leave
rolb
pop
add
inc
xchg
push
xchg
sbb
stos
mov
mov
sarl
nop
sbb
test
cmp
les
dec
dec
and
ficoml
dec
dec
jns
and
jecxz
out
pushf
lods
cltd
lcall
jo
cltd
mov
cmp
scas
shll
cmp
lcall
nop
aad
lds
setnp
mov
inc
mov
cltd
adc
aas
out
push
outsb
inc
mov
mov
stos
mov
sahf
adc
cmp
mov
adc
cmc
dec
out
sub
jo
insl
pop
int3
test
inc
lea
in
jne
fbld
jmp
andb
sbb
push
add
jb
adc
inc
push
insb
fcmovb
push
mov
add
test
mov
lcall
or
jb
mov
xchg
adc
inc
mov
in
add
add
jecxz
nop
in
mov
pop
les
icebp
push
int
imul
shrb
or
xchg
ss
mov
repnz
ljmp
or
xor
in
popf
sub
loop
mov
sahf
dec
adc
pop
cmp
xchg
sub
jns
lret
popf
leave
and
daa
shrl
mov
jg
or
inc
pop
out
jg
pop
lds
xchg
push
add
sahf
xchg
mov
imul
push
and
into
pop
jae
add
fwait
and
in
imul
je
test
xchg
dec
lods
xlat
scas
mov
fadds
movsl
sub
push
lds
mov
popa
jnp
inc
add
inc
jmp
fsubrp
fisttps
out
popa
cmp
and
fcmovbe
movsb
test
sbb
dec
sbb
sub
xor
rcll
push
fwait
push
popa
add
arpl
push
jl
mull
or
insl
push
cwtl
movb
jo
fs
push
shlb
xlat
pop
data16
xchg
daa
mov
adc
mov
lahf
xlat
xchg
adc
add
push
pop
arpl
shrl
mov
jns
lods
mov
inc
in
sti
out
incl
sbbl
stos
pusha
stos
mov
jg
loope
push
arpl
sbb
mov
dec
adc
cmpsb
clc
outsl
cmp
aad
push
icebp
sbb
pushf
addr16
addb
jle
pop
fucomip
mov
push
mov
inc
jmp
dec
pusha
imul
in
out
inc
stos
sub
dec
mov
and
loopne
push
inc
pop
xor
fxch
cmpsl
enter
lock
xchg
xchg
or
xlat
imul
cmp
and
fmul
aad
out
and
push
fsub
cwtl
push
mov
xchg
popf
xchg
mov
dec
aaa
push
and
pop
andl
dec
jo
loope
mov
xchg
mov
jbe
ss
jle
xchg
add
sbb
stos
nop
hlt
stos
xchg
cltd
lret
inc
scas
and
jle
or
mov
and
pop
jecxz
pushf
out
outsl
inc
jnp
test
mov
pop
jne
in
outsb
and
push
pushf
add
shrl
stc
mov
fiadds
xor
lock
xorl
faddl
je
sub
insb
pop
and
sub
add
lret
push
pop
sub
ljmp
stos
in
pop
xor
sahf
mov
dec
incb
fmull
testl
dec
lcall
adc
inc
out
mov
or
ss
rorl
lret
jb
pop
xor
enter
mov
push
and
out
lahf
icebp
loop
stos
dec
add
mov
inc
ret
push
test
arpl
dec
imul
enter
pop
insl
pop
out
out
fisubrl
out
aam
out
pop
iret
je
add
fnstcw
les
xor
mov
mov
mov
out
andb
gs
sub
dec
sub
cmp
outsb
insb
test
movsl
pop
add
mov
mov
xchg
jecxz
jp
arpl
ss
repz
mov
cltd
adc
repz
shl
sub
pop
xchg
sub
or
inc
adc
mov
push
adc
pop
cmpsb
push
idiv
fwait
xor
lods
movsb
ljmp
scas
test
add
subb
push
ds
mov
dec
adc
jo
subl
imul
jle
sub
mov
arpl
shll
and
push
sarb
push
aaa
cwtl
inc
in
dec
dec
and
enter
movsb
pop
enter
jmp
adc
dec
inc
pop
push
and
ficoml
push
sbb
call
negb
add
jl
jnp
arpl
adc
sbb
aam
movsl
inc
int
adc
mov
pushl
cmp
mov
xor
sbb
aaa
pushl
xchg
aam
ljmp
inc
loopne
or
cmp
aam
imul
and
adc
clc
mov
adc
jno
jno
push
test
popa
subl
es
jmp
push
sbb
clc
bnd
push
aad
hlt
dec
fildll
sub
rorb
push
out
cmpsb
andl
adc
imul
dec
rcrb
cmp
xchg
imul
push
mov
cmp
jne
insb
cld
fiaddl
int3
cmpsl
sub
or
sub
xor
int3
jg
sbb
out
fcomip
std
movb
pop
and
jle
mov
mov
enter
aas
and
aad
or
insb
dec
mov
insl
loop
jp
xchg
or
pop
jbe
and
shlb
loope
or
adc
faddp
aaa
cmpsl
or
shl
lock
scas
add
aas
lret
pop
popf
jecxz
cmp
mov
sub
pop
inc
mov
insl
cmp
or
in
notb
dec
scas
das
adc
fidivl
jg
lcall
fdiv
or
aad
es
sub
xchg
or
xchg
in
adc
jl
lds
push
pusha
lea
les
fcmovbe
lahf
lock
mov
fimuls
mov
xor
dec
outsl
loopne
xlat
and
loopne
scas
pop
fcmovne
mov
push
and
xor
or
inc
mov
arpl
jge
inc
cmpsb
repnz
cld
adc
inc
inc
sub
cmc
and
fbld
jg
push
mov
roll
inc
out
imul
bound
xchg
jo
out
out
test
das
sub
add
into
mov
ja
cmp
enter
fsubrl
sarb
pop
aaa
xor
jg
mov
mov
xchg
cs
sahf
fildl
jle
hlt
sbb
sbb
pop
aam
inc
jmp
bndstx
fistpl
mov
andl
ret
mov
insl
dec
ja
pop
outsl
lret
je
stos
sbb
adc
stc
mov
sahf
nop
jo
pop
cmp
sub
jecxz
lahf
lods
jo
popf
push
ljmp
sbb
jne
inc
loope
insl
enter
jmp
or
pop
notb
ja
sbb
pop
or
cmp
mov
test
add
ja
in
repnz
push
je
test
pop
mov
adc
mov
xchg
push
ljmp
sahf
fucomip
sbb
add
dec
push
sti
pop
push
mov
add
stos
cmp
ss
jno
into
add
leave
icebp
mov
je
cmp
cwtl
repz
es
xor
loop
int
jae
push
mov
and
inc
repz
push
ret
clc
adc
and
imul
add
push
test
jmp
jae
mov
xor
daa
mov
test
mov
inc
pop
ss
push
xlat
enter
sub
xchg
lahf
arpl
sbb
std
int
sub
dec
inc
out
sub
loop
shll
and
cmpsl
cmp
and
jmp
test
dec
mov
outsl
xchg
inc
jno
out
or
lret
xor
ds
inc
cmpsl
fs
js
lcall
sub
in
cmp
lea
adc
sarl
js
popf
loope
xor
int
add
push
and
mov
js
push
pop
dec
pushl
mov
xor
sti
mulb
add
mov
jne
mov
sbb
out
aaa
jo
mov
xchg
dec
dec
and
fsubl
mov
mull
and
mov
mov
mov
xor
mov
seta
jno
lret
repz
inc
inc
fdivrl
test
dec
sbb
stos
mov
gs
mov
arpl
jns
scas
testb
lods
test
and
mov
inc
aas
jp
sbb
mov
inc
xor
ficomps
loopne
ret
ds
sbb
jbe
fsubrl
push
or
inc
test
cmpsb
mov
insb
pop
lcall
and
xor
sbb
mov
mov
fs
fidivl
call
loope
adc
sub
pushf
sub
ss
pop
dec
repnz
testl
adc
or
adc
push
mov
push
xor
adc
shrb
pop
mov
jge
ds
mov
xchg
cmp
sub
dec
arpl
daa
sub
enter
adc
aam
mov
add
outsl
mov
and
cwtl
imull
sub
pushf
cli
sub
xchg
lock
cmc
inc
pop
mov
xor
mov
dec
pop
xchg
sbb
hlt
cld
enter
mov
lock
cmc
loopne
pop
xorl
add
mov
dec
ds
shrl
movb
mov
and
enter
jg
xchg
jl
sbb
icebp
and
mov
sti
push
dec
pop
das
subb
shrl
jecxz
lods
jmp
fidivs
pop
scas
sbb
jne
sub
mov
or
lea
dec
lahf
mov
sbb
jae
cmp
cmp
adc
push
push
hlt
pop
jns
push
cs
mov
xchg
jle
xchg
mov
cmp
push
or
mov
outsb
stos
dec
fs
cmp
rcrl
je
ficompl
sahf
add
pop
cmpsl
xchg
sub
adc
lods
mov
or
lahf
xor
sbb
sbb
leave
pop
pusha
mov
fbstp
test
jns
pop
and
rorl
into
jecxz
mov
sub
je
cmc
cmp
test
fimull
pop
ret
rolb
sub
sbb
repnz
xor
adc
lds
push
rol
ss
negl
xchg
fmulp
cs
idivb
and
frndint
addr16
push
push
add
in
inc
aaa
outsb
arpl
pop
dec
mov
sbb
jmp
sbb
sub
fldl2t
test
adc
ja
add
xchg
or
jecxz
adc
insl
mov
cmp
cwtl
mov
sbb
jne
fimull
push
sub
and
xor
xor
sbb
xchg
insb
jmp
sarl
push
shl
sub
xlat
mulb
mov
cwtl
and
call
mov
in
cmp
jge
daa
pop
and
inc
xchg
jo
cmpb
xor
xchg
or
mov
jl
out
push
jmp
addr16
dec
pop
sbb
xor
mov
xchg
lea
mov
mov
adcb
lahf
sbb
pop
pop
mov
pusha
push
mov
xchg
fs
jge
daa
mov
cmp
fldt
xchg
or
xchg
flds
movsl
fstps
jle
loope
fidivs
jns
add
jmp
xchg
rorl
add
lds
loopne
test
repnz
sarl
mov
mov
jbe
sbb
mov
insl
push
xor
out
jl
add
jae
out
shll
cmc
push
xchg
xchg
test
dec
mov
cld
jle
push
loopne
mov
cltd
add
and
adc
loope
cmp
aam
dec
add
es
push
jmp
mov
mov
add
cmpsl
and
jl
mov
and
and
mov
mov
repnz
adc
cltd
lret
dec
sbb
addb
xor
mov
push
or
aaa
subl
jb
cmpsb
inc
pop
mov
xchg
lret
out
scas
rcrb
fstl
push
pop
mov
inc
xchg
jns
insb
aad
inc
pop
loop
adc
punpcklbw
lock
push
adc
lods
mov
sub
sbb
lret
push
pop
lcall
jmp
xchg
mov
and
mov
imul
xor
or
push
ret
cmp
ficomps
ret
inc
or
mov
pop
insb
loop
dec
and
les
jne
mov
fsubs
mov
cmpsl
stos
jb
popa
loope
and
or
dec
add
out
cmpsl
mov
push
faddl
aad
add
sub
in
leave
mov
inc
lahf
xchg
sbb
or
daa
xchg
popa
add
jno
cmpsl
push
xor
cmp
xchg
stc
stc
cmc
mul
pop
mov
cltd
data16
scas
xchg
adc
pop
sbb
jne
bound
lds
mov
cmp
ja
xchg
mov
std
jmp
pop
cmc
jo
out
xchg
sbb
push
mov
add
popf
subb
negl
inc
dec
in
addr16
or
rorl
sarb
stos
jp
out
pop
shlb
cmp
orl
adcb
add
fadd
cli
sub
ret
or
jle
mov
mov
fildll
xchg
decb
adc
xchg
pusha
sub
lea
jp
mov
ja
fildl
jge
enter
lods
repz
xlat
js
jp
jnp
jmp
jp
add
int
pop
sbb
jmp
adc
imull
and
sbb
int
jge
lret
adc
push
mov
mov
mov
mov
push
sub
fstl
imul
xchg
scas
je
sbb
filds
mov
lahf
sbb
sbb
sti
or
ret
fisttpl
sub
jno
dec
in
test
pop
into
dec
movsl
push
popf
mov
leave
gs
xchg
scas
push
xchg
adc
xorl
movsl
loopne
mov
pop
cwtl
mov
imul
mov
add
lock
push
cld
lods
jae
jae
clc
cmp
imul
daa
data16
jns
je
ja
dec
test
ss
shlb
inc
ret
les
mov
bound
xor
mov
mov
xorb
add
iret
adc
push
imul
jns
imul
pop
popa
xor
mov
mov
daa
cmp
loope
sbb
and
ss
mov
inc
jae
and
xchg
or
xchg
or
sarb
pop
xchg
mov
jae
push
xchg
mov
mov
xor
rcrl
mov
adc
and
insb
or
adc
les
movsl
aam
dec
mulb
idivl
ficoml
std
fbld
in
inc
adc
or
ffreep
xchg
int
inc
das
xor
aas
adcb
mov
les
nop
cmp
cmp
loop
test
and
jno
fnstcw
xor
mov
scas
lret
cwtl
pop
stos
push
sbb
call
or
inc
and
inc
xchg
shl
sub
addr16
cltd
jae
mov
arpl
pusha
mov
ret
in
and
leave
push
lea
fwait
sbb
push
in
push
cmp
data16
push
xchg
push
std
cmp
js
push
jg
leave
loopne
push
in
mov
pop
pop
xchg
add
jmp
fwait
inc
xchg
lret
fstpt
mov
cs
cmp
cltd
push
sbb
xchg
leave
fcoms
pop
js
ljmp
pusha
mov
imul
test
jg
mov
cld
mov
cs
gs
insl
inc
xorb
sbb
and
mov
xchg
mov
cmp
inc
cmpsb
ljmp
rcrl
jne
push
sbb
notb
push
xchg
dec
repnz
ja
xchg
fs
gs
fsts
cmp
inc
cs
subb
cmpsl
add
cld
and
insb
rolb
push
mov
mov
addr16
into
gs
sar
sub
mov
int3
jecxz
sbb
or
cmp
sbb
push
mov
sub
lds
pop
das
shlb
xor
cmp
scas
adc
je
subl
popa
add
jecxz
sbb
movsb
jne
sbbl
mov
sbb
mov
add
sbb
adc
fnstenv
lock
jns
jmp
call
cld
jmp
pop
jp
popf
cmc
jp
mov
or
fildl
insl
je
cmp
jl
cwtl
enter
add
ret
xchg
popf
cmp
mov
sub
cltd
addr16
cmp
lret
mov
into
mov
mov
jle
jns
pop
out
pop
addr16
movsl
sub
mov
mov
arpl
sub
lock
dec
add
push
push
cs
aaa
stos
jle
fbld
lcall
dec
in
inc
cmp
test
mov
jge
pop
xchg
popl
xor
jbe
cmp
lahf
jne
jge
and
push
test
pop
rcl
and
adc
je
push
stc
scas
jb
in
repnz
rcr
into
sub
dec
jmp
imul
xchg
inc
mov
and
icebp
and
cmp
push
jnp
out
lods
stos
sub
in
js
push
outsb
stc
jno
sub
out
push
pop
xchg
push
pop
sub
pusha
push
frstor
and
pop
int
pop
movsb
mov
outsb
je
xchg
bnd
jb
shl
and
mov
inc
jae
jl
test
cmp
xchg
mov
or
sub
popa
icebp
pusha
push
lret
cltd
xor
pop
add
mov
cld
shll
mov
cmp
xor
add
sahf
pop
xlat
movsb
cld
lret
xchg
push
mov
adc
xchg
sub
adc
jne
cmp
iret
in
jecxz
out
out
sbb
inc
sbbl
xchg
sar
jne
aam
es
inc
xor
scas
mov
call
shll
jmp
das
nop
xchg
or
enter
push
icebp
adc
data16
adcb
sbb
repnz
in
stos
push
jge
mov
push
mov
loop
pop
mov
sbb
inc
ret
mov
pushf
and
ds
cli
sbb
dec
sbb
sbb
enter
sbb
movsb
stc
into
ljmp
sbb
jae
notl
arpl
and
pusha
nop
xchg
fcmovu
testb
dec
pop
jns
daa
ds
ljmp
mov
mov
pop
xchg
idiv
test
mov
repnz
hlt
lea
xor
in
mov
ds
std
popa
jns
xor
or
jecxz,pn
decl
xchg
pop
enter
shl
push
cmp
inc
pusha
repnz
int3
mov
cmp
push
sti
xchg
xor
push
xor
repnz
fcomp
out
sbb
mov
dec
test
leave
out
fnclex
nop
rorb
add
bound
mov
push
mov
cltd
std
sarl
jmp
adcl
repnz
enter
dec
xchg
push
negl
enter
imul
mov
add
add
cmpsb
jecxz
cwtl
hlt
adc
push
jo
add
mov
xor
ljmp
ds
or
mov
insb
cmpsl
out
fadd
mov
pushf
mov
sub
test
push
and
fists
cmp
jb
ja
cmpsb
hlt
jb
dec
lds
jmp
add
sub
mov
stc
jp
cmp
or
mov
inc
in
sbb
jecxz
mov
mov
mov
sub
mov
push
cmp
int3
lods
pop
pushl
ret
ja
fldl2e
jg
mov
sbb
jnp
adc
push
lods
mov
mov
ljmp
mov
cmc
jae
pop
sub
adc
or
inc
aad
lea
dec
push
cmp
in
xchg
insl
mov
xlat
mul
sbb
pmaddwd
dec
fnsave
push
rol
mov
xchg
leave
fs
ljmp
mov
add
out
repnz
incb
out
jge
out
cltd
mov
lods
mov
cli
xchg
popa
es
sub
dec
or
int3
or
test
cmpsl
fwait
shlb
repnz
stos
out
orl
jg
mov
fisubl
push
loopne
dec
pop
and
stos
dec
imul
add
push
mov
hlt
jbe
enter
rcrb
dec
or
fwait
xor
popf
add
mov
loope
js
jg
lea
outsb
pop
sarb
mov
subb
cmp
call
add
std
push
pusha
insl
dec
inc
mov
int3
ds
jae
pop
lods
lahf
cli
mov
mov
test
jo
sbb
mov
mov
mov
sbb
in
ljmp
lcall
xchg
xchg
cmp
pop
and
subb
adc
jl
testl
sub
cmp
xlat
xchg
lods
jb
mov
jecxz
mov
addr16
xlat
mov
dec
loop
mov
sub
arpl
stos
test
mov
sahf
pop
cld
sbb
ret
jp
and
repz
push
fidivl
or
xor
mov
cmp
lods
popa
bound
sub
inc
loope
mov
mov
sbb
fwait
js
or
mov
stos
in
mov
stos
mov
xor
inc
pop
out
adc
mov
mov
dec
lahf
into
inc
push
and
push
outsb
lds
jl
sbb
loop
ljmp
in
stos
push
xor
std
push
in
mov
hlt
cld
mov
and
mov
call
pop
jge
jne
lock
lods
out
sub
sub
mov
xor
add
lahf
push
loopne
lods
or
add
pop
jnp
push
adc
ret
hlt
pop
repz
jg
cmp
xchg
sahf
lret
dec
pop
fsubl
das
mov
pop
dec
dec
mov
movsl
dec
fildl
xchg
mov
jne
inc
add
jl
add
pop
ss
aas
hlt
fdivs
loope
cmp
cld
fstps
mov
pop
or
adc
sub
push
pop
popf
lds
orb
cmp
ds
clc
leave
in
xor
mov
push
fidivl
mov
lods
push
xchg
popf
repnz
adc
stc
hlt
push
pop
dec
jns
mov
inc
pop
inc
je
and
fisubs
lret
lods
arpl
data16
mov
xchg
ficompl
test
sub
or
aad
andb
iret
cltd
cmp
jb
sub
and
xchg
mov
sub
out
jp
mov
call
sbb
call
div
add
add
out
outsb
test
and
xchg
push
lds
rorl
mov
inc
and
mov
cmpsl
sbb
out
mov
lock
jb
movsb
inc
cmp
xchg
scas
push
stc
jbe
cmpsb
scas
inc
mov
mov
addr16
les
insl
pop
push
xchg
pop
push
rcrl
movsb
xchg
xor
scas
sub
lret
pop
es
mov
push
mov
or
add
insl
das
hlt
cmp
scas
iret
mov
test
or
lea
or
dec
out
mov
test
or
xchg
outsl
or
je
pop
sub
daa
jmp
sbb
loopne
push
xchg
xchg
jns
cwtl
add
int
daa
pusha
divb
push
out
or
lahf
push
sbb
and
repnz
add
cmpsl
stos
mov
insl
icebp
sbb
jo
ret
sbb
lret
xchg
loopne
mov
in
pop
mov
push
fadds
fnsave
adc
arpl
pop
arpl
movsl
sahf
test
and
push
inc
mov
cmpsl
lahf
mov
ret
sbb
adc
popf
sbb
nop
sub
dec
fstp
aam
push
pop
stc
sarl
pusha
sub
cmp
xchg
sub
jb
sbb
std
mov
insl
add
out
xchg
test
xchg
out
jmp
repz
mov
scas
gs
mov
sub
lock
cmp
sbb
dec
and
add
aam
or
mov
jno
fiaddl
divb
insb
xchg
stos
pop
mov
test
inc
or
cltd
cmc
jnp
push
xor
test
lea
lds
mov
or
xchg
nop
adc
dec
mov
xor
xchg
mov
ret
cmpsl
cmp
test
or
add
in
push
dec
jmp
mov
mov
inc
imul
dec
clc
push
insb
movsl
add
sub
pop
or
scas
inc
test
fcoms
mov
sub
or
loopne
ret
mov
movsl
stos
sbb
iret
add
cmp
jnp
arpl
dec
aas
lods
aam
mov
mov
jmp
sahf
lret
std
mov
xor
sub
push
lods
sbb
inc
cltd
je
mov
mov
ja
fmuls
push
into
add
xor
pop
push
call
adc
jle
mov
mov
add
ret
push
xchg
jno
jb
add
adc
mov
les
push
out
sub
push
fmull
je
in
mov
inc
inc
orl
notrack
pop
jo
jl
push
test
iret
inc
sub
cmp
nop
push
xorl
sub
rorb
and
es
lret
push
push
std
push
inc
into
cmp
aam
dec
movsl
imul
add
mov
dec
test
movsl
repnz
out
adc
subl
imul
mov
mov
jno
inc
hlt
lods
or
jo
daa
and
inc
adc
out
cmpsb
push
pop
jno
inc
ja
xchg
mov
jmp
mov
pop
xchg
imul
js
mov
adcl
mov
dec
add
addb
test
ljmp
in
rcl
jo
push
and
ds
push
cmp
les
mov
adc
inc
sbb
sbb
push
or
cwtl
jg
fwait
cltd
loopne
mov
mov
dec
ja
loope
dec
pop
or
outsb
in
jne
outsl
mov
xchg
dec
push
lods
xchg
sbb
sbb
bound
negl
inc
test
push
pop
ret
test
mov
cli
out
clc
mov
sub
insl
out
xchg
jle
inc
cmp
sub
xorb
prefetch
jno
mov
and
std
inc
aas
pop
pop
or
cmp
dec
aad
and
lods
popa
xchg
sbb
fwait
mov
xor
cltd
xchg
xchg
mov
roll
lock
jo
or
mov
inc
adc
shlb
rcl
dec
xlat
fstpl
sbb
out
out
and
sbb
xchg
mov
repnz
mov
jne
jbe
pusha
mov
adc
mov
outsl
jecxz
rorl
daa
ret
insb
cmp
rclb
imul
pop
insb
add
pop
aam
out
andl
add
push
sub
lds
mov
pop
lcall
ficomps
xchg
xchg
ret
xchg
hlt
lock
int3
test
cmpsb
arpl
jp
xchg
ss
in
mov
push
mov
mov
nop
push
test
mov
cmp
dec
and
push
scas
std
dec
movsb
jb
xchg
xor
test
push
sub
mov
sbb
inc
sahf
aaa
ret
in
mov
pushw
enter
cmpsb
inc
lea
fwait
mov
mov
in
imul
push
fisubrl
jo
jne
lcall
mov
push
xor
aaa
adc
cmpsl
add
fldl
outsl
xchg
icebp
lea
push
and
insl
pop
pop
pop
iret
jne
hlt
mov
sub
xor
mov
jbe
enter
jl
out
outsl
cmc
cltd
clc
imul
repnz
adc
add
xor
mov
xchg
cmp
xchg
jnp
ss
cld
into
cmp
cmp
xor
icebp
mov
mov
mov
lcall
sub
pop
xchg
and
fbstp
aaa
std
mov
fistl
or
fisttpl
cmp
mov
popa
cli
mov
and
adc
cmp
and
xchg
call
or
pushf
gs
fs
jmp
in
xor
ret
or
sbb
xchg
or
and
ja
mov
nop
std
into
sti
mov
push
loopne
frstor
loope
enter
in
or
cmp
pop
sub
xchg
add
subl
rcr
imul
int
jg
testl
out
imul
dec
pop
mov
ds
jo
arpl
cmp
add
jmp
cmpsb
dec
arpl
pop
iret
xor
pusha
inc
leave
adc
dec
lods
xorl
jns
sub
inc
sarb
sbb
pop
cmpsl
push
stos
adc
pop
dec
cmp
or
orl
popf
sbb
sbb
or
sbb
push
push
xor
jp
js
push
and
arpl
mov
mov
adc
adc
and
dec
jb
jno
xor
sbbb
push
or
sbb
or
jbe
xor
jns
adc
mov
insb
mov
loopne
popa
inc
mov
jno
fisttps
jae
repz
bnd
lea
shl
pop
mov
shlb
rcrb
or
cmpsl
inc
sbb
jae
mov
cmpsb
aad
xlat
adc
sbb
test
add
xor
fistpl
bound
jge
test
jno
push
mov
pop
rcrb
inc
xchg
or
js
leave
punpckhbw
fwait
scas
aad
rorl
adc
push
lret
cli
aad
pop
sti
out
push
dec
and
repnz
lea
outsb
jp
rcrl
jl
sbb
pusha
scas
lods
scas
cmc
pop
rcr
mov
stos
ficomps
fstpt
stos
mov
push
pop
xchg
pusha
jne
or
inc
jmp
sub
cs
and
mov
push
lods
xchg
jb
out
adc
pop
cmpsl
add
jnp
cltd
sbb
ret
adc
cli
clc
mov
mov
sbb
es
cltd
cmpsl
sbb
push
inc
xchg
push
enter
jae
call
jge
push
push
sbb
mov
xor
inc
cmp
pop
das
adc
and
leave
loope
sub
jge
clc
test
fisubrs
mov
lods
push
pop
pop
pop
mulb
xor
imul
mov
and
mov
in
lock
dec
pop
sub
stos
mov
stos
mov
je
or
call
lahf
pop
cmp
addl
pop
push
mov
mov
repnz
xor
jg
xchg
call
cmp
push
mov
adc
push
and
sti
mov
movsl
ljmp
bound
add
sub
addr16
xchg
sbb
loopne
jp
mov
xchg
nop
cmpsb
lods
mov
mov
ds
cld
inc
push
or
je
movsl
div
adc
lcall
or
or
or
mov
rcrl
cmp
inc
pusha
mov
pop
add
mov
adc
add
pop
jno
and
mov
jecxz
fisttpll
sbb
xchg
xchg
in
sub
jg
inc
fisttpl
push
fsts
push
cmp
movsb
cltd
test
pop
jae
imul
sub
inc
adc
lret
adc
xor
cmp
mov
scas
icebp
cmpsb
mov
addr16
jne
mov
out
add
popf
stos
decb
mov
dec
jnp
xor
push
ljmp
hlt
test
stos
xorb
sbb
rclb
jle
loope
sbb
inc
cltd
sub
push
adc
out
add
dec
fnstcw
repz
sbb
bound
push
mov
fisttpl
stos
aad
and
outsl
pop
popf
nop
shlb
popa
pop
sarl
and
enter
scas
into
mov
pop
and
les
movsb
insb
loop
movsl
fbstp
bound
into
inc
call
push
insl
hlt
insb
int3
bound
xchg
inc
popa
inc
ror
pop
jecxz
mov
in
and
lock
std
push
or
add
dec
cmp
int3
shlb
xchg
inc
movzbl
and
mov
popa
pop
loop
adc
fadd
add
adc
ret
lcall
and
negl
pop
cmp
push
aad
arpl
adc
dec
cltd
fstl
pop
mov
std
sbb
dec
gs
xor
xor
dec
mov
pop
insb
xchg
dec
pop
es
jmp
adc
nop
mov
test
mov
jle
sbb
cmp
mov
loopne
push
bound
mov
shll
push
xlat
pop
and
fstps
pop
enter
movsl
ds
sub
gs
add
push
pop
xchg
inc
aad
dec
add
mov
aas
bound
and
push
or
icebp
popa
aad
jp
lcall
jnp
xor
ret
fcompl
ja
sbb
leave
push
sub
cmp
in
push
sbb
shrb
mov
jecxz
mov
sti
fcomps
pop
cld
sarb
cmc
pop
cmp
adcl
sub
and
les
xchg
pop
push
or
dec
cmp
test
pushf
mov
mov
sub
jns
divl
fucom
mov
add
mov
mov
push
jp
dec
add
xchg
aaa
xchg
cld
jmp
inc
lods
cli
shl
in
mov
flds
popa
mov
lods
adc
insb
push
je,pt
jmp
sbbl
movsb
fdiv
in
xchg
pop
ja
jmp
jno
movsl
fldcw
cmp
or
test
jo
fidivrl
ljmp
jmp
sbb
lock
rol
mov
fistps
dec
js
movsl
lahf
jg
sub
sarl
adc
icebp
xor
inc
mov
imul
jecxz
cmp
mov
xor
jmp
xchg
fcomp
aam
xor
push
add
xor
and
jmp
dec
cltd
cmp
jno
call
movsl
jmp
rcll
mov
xchg
stos
push
jg
mov
movsl
out
in
cmp
addb
stos
cld
sbb
arpl
cs
dec
sbb
sub
jle
or
test
ret
je
and
mov
repnz
add
lock
arpl
fs
pop
loope
int3
jbe
jmp
and
out
xor
in
sbb
or
push
inc
add
push
or
rcrw
das
data16
push
sub
lret
fprem
or
xlat
int3
call
sbb
add
cld
aaa
fsubrl
bound
cltd
mov
mov
xor
push
mov
inc
stc
pop
icebp
sbb
movsl
mov
inc
cmp
dec
sub
scas
push
xchg
test
pop
jmp
out
cmp
fucomp
stc
mov
int
jb
mov
int
das
dec
lahf
test
jp
adc
out
repnz
adc
aaa
lds
call
lods
in
dec
pop
aas
and
ljmp
push
fisubs
lods
xchg
das
xchg
dec
and
popf
adc
pop
mov
int
sub
xor
stc
subl
xchg
cwtl
cmc
mov
fcomp
shr
ffreep
or
xchg
es
xchg
shr
sbb
mov
hlt
and
xchg
add
xor
stc
test
xor
es
inc
inc
push
add
out
dec
shrl
in
js
jmp
loopne
mov
mov
aam
jne
jns
ror
fnstcw
mov
xchg
adc
xchg
jg
jbe
pop
ss
ror
pop
sahf
dec
loope
popf
divb
cld
ja
scas
test
push
jmp
popf
sbb
pop
inc
push
loop
popa
sub
fwait
lds
nop
aad
or
xchg
cmp
xchg
fdivl
test
inc
add
leave
jne
pusha
fs
icebp
dec
lahf
mov
adc
test
and
repnz
clc
iret
cmp
jecxz
addr16
pop
adc
sub
xor
xor
sub
jg
lock
push
ret
pushl
stc
xchg
xor
dec
and
arpl
mov
xchg
lret
stc
add
inc
or
cltd
out
loop
jnp
and
shll
mov
minps
cli
sarb
xlat
push
sbb
fidivl
sahf
lea
mov
pop
sbb
dec
add
sub
add
add
repnz
sahf
cmpsb
add
test
dec
push
or
inc
rcr
addr16
and
pop
cmp
mov
xchg
xchg
inc
xor
push
inc
mov
shr
arpl
adc
mov
adc
mov
notl
mov
fs
and
out
push
testl
cwtl
cmp
popa
and
lcall
fisttpll
push
inc
dec
or
push
cmp
inc
sub
in
cpuid
dec
sub
push
sbb
and
pop
mov
les
scas
jp
hlt
ror
xor
stos
insb
xchg
lcall
mov
jb
mov
das
cmp
lock
pop
enter
fsubp
or
int
cld
test
push
sub
test
mov
add
xchg
imul
jle
mov
sub
xchg
out
pop
push
insl
jb
inc
in
cmp
les
push
repz
and
mov
sarl
push
lahf
push
adc
xchg
sub
dec
into
adc
push
dec
cmp
add
add
and
aaa
dec
and
sbb
sti
inc
adc
jbe
int
mov
test
add
leave
jbe
js
lods
mov
mov
push
add
sub
daa
fwait
test
inc
inc
lods
pusha
sub
lds
insb
ret
inc
sub
sbb
dec
mov
pop
mov
dec
ficompl
out
xchg
jnp
cmp
loopne
cmc
sub
pop
xchg
es
je
mov
cli
andl
jnp
inc
cmp
sub
rcr
andb
test
fs
mov
movsb
push
int3
mov
mov
sub
stos
cltd
sbb
mov
insl
stos
mov
rcl
lcall
nop
cmp
pop
sub
imul
add
arpl
cli
add
xor
sub
loope
sbb
movsb
insb
lea
mov
stos
call
cmp
mul
jge
fmuls
icebp
pop
cmp
fidivrl
sbb
roll
xor
adc
add
jle
fiadds
dec
xor
orl
jmp
iret
mov
xor
in
jno
aaa
in
scas
in
pop
outsb
mov
ds
adc
jmp
clc
inc
or
das
clc
mov
xchg
out
dec
pop
xchg
mov
subl
dec
test
test
mov
shrb
out
mov
sub
movsb
lock
pop
push
repz
sub
lds
mov
mov
fisubrl
jb
fisubl
mov
pop
pop
inc
int3
lret
incb
push
push
or
stos
in
jno
pop
pop
mov
stc
cltd
imul
mov
imul
test
or
fisubrs
push
pop
add
xor
outsl
stc
push
jnp
fistpll
sbb
xchg
sbb
dec
mov
ds
push
jne
xchg
cltd
in
xor
pop
lcall
cltd
shlb
mov
aas
sbb
push
mov
inc
ss
dec
mov
sbb
sbb
cmp
push
repnz
mov
inc
xchg
adc
aas
sbb
jp
sti
mov
dec
nop
xchg
mov
out
mov
and
in
frstor
rcrl
sbbl
xchg
push
mov
xchg
push
cld
in
iret
test
sub
pop
cmpsl
daa
aam
lock
outsl
je
insb
test
xor
sub
testb
xor
pusha
add
xchg
xchg
cli
cmp
pop
sti
mov
inc
sbb
jo
pop
or
inc
les
xor
adc
pushw
mov
mov
lret
jbe
inc
imul
aam
out
test
movd
movsl
dec
mov
push
pop
jmp
adc
scas
mov
sub
fwait
push
pop
cmp
loope
cwtl
scas
int3
sbb
out
fsubr
pop
jnp
icebp
imul
fisubl
lds
cmc
sub
pop
and
ficoms
lock
jmp
jp
jbe
out
js
repnz
scas
loop
test
hlt
push
lret
aam
pop
out
fwait
cmpsb
jnp
cmp
imul
mov
mov
or
and
ret
es
fsubr
test
clc
mov
xchg
lods
inc
cmp
xchg
mov
into
sti
mov
adc
sbb
or
imul
mov
mov
popa
je
push
and
movsl
jae
inc
push
out
dec
adc
mov
das
popf
cmp
fmull
and
outsl
out
cmp
dec
fcompl
adc
lock
movsb
ss
mov
shrl
push
inc
enter
xor
int3
lods
ret
mov
mov
inc
sahf
das
inc
fstps
xchg
dec
pop
fwait
and
jnp
ljmp
cmp
add
ret
out
jecxz
lods
mov
inc
test
push
cli
imul
scas
fwait
add
loop
faddp
cmpsl
mov
sub
jb
psllq
add
cs
loopne
fs
mov
iret
inc
mov
das
xchg
push
inc
push
into
insl
push
movhps
nop
lcall
mov
mov
jno
je
mov
push
push
aad
fisubs
cmp
add
pop
cmp
mov
fsubp
aad
cltd
push
xor
mov
gs
cmp
test
xor
and
loopne
jmp
mov
pop
push
sbb
mov
push
bound
idiv
jne
and
xor
daa
pushf
mov
mov
sarl
push
jle
adc
mov
bound
mov
mov
or
pop
repz
fnstsw
loopne
repz
push
cmp
add
in
sub
inc
in
js
fimull
jb
test
pop
or
fldl
jnp
aaa
mov
pop
insl
cmpsl
xchg
je
xchg
mov
mov
pop
repnz
xor
popa
cmc
or
lcall
dec
cld
mov
jo
cld
xchg
mov
mov
ret
push
mov
push
inc
lds
and
outsb
cmp
stc
inc
fdivrs
inc
test
mov
jns
jnp
dec
xor
jg
push
fists
xchg
rcrl
cld
popf
mov
cmpsb
je
cmc
fucomi
cmp
imul
in
push
rcr
sub
xor
add
cmp
push
xchg
fs
adc
std
pop
cmp
ret
xor
bound
idiv
cmc
aaa
into
xchg
jmp
and
and
rcr
cmc
mov
daa
and
cli
push
and
loopne
pop
std
data16
pop
imul
jmp
pop
push
sub
push
nop
mov
and
test
push
sub
lods
and
and
push
fwait
int3
pop
aaa
lret
jbe
jns
repz
movsl
xchg
js
cltd
mov
adc
pop
mov
inc
sahf
adc
inc
or
les
data16
mov
sub
and
sbb
mov
rcr
repz
push
push
pushf
pushf
rcrb
popf
sahf
pop
jp
or
into
jge
loope
sbb
ja
sahf
add
pop
leave
mov
pop
mov
ss
rolb
or
cli
lahf
cmpsl
xor
orb
pop
cli
push
cli
cwtl
pop
popf
jnp
xchg
sbb
out
insb
jae
or
mov
jne
cwtl
orb
loopne
xchg
js
and
and
ret
out
jmp
sub
stos
jne
push
mov
inc
lret
adc
pop
sub
scas
cmp
lcall
dec
rorl
fsubl
cmp
push
inc
andnps
call
out
iret
dec
in
dec
adc
dec
ret
cmp
cmp
lds
cmp
adc
mov
inc
imul
pushf
mov
sub
pusha
inc
outsl
das
push
jl
push
dec
call
rcl
xchg
push
pop
mov
je
mov
shll
pop
pop
jae
or
inc
push
fwait
cmp
nop
pop
xchg
and
push
int
mov
jne
in
repz
lea
and
inc
jecxz
je
inc
sub
js
push
test
pop
dec
mov
push
sbb
and
sti
jns
test
icebp
pop
inc
cmp
xchg
mov
mulb
mov
inc
xchg
lret
push
and
mov
adc
lods
subb
dec
rcrl
in
mov
xchg
or
xor
bound
dec
ljmp
mov
adc
popf
sub
and
insl
mov
sub
mov
mov
xchg
push
dec
or
pop
imul
and
adc
loop
dec
fmull
loopne
push
mov
jno
cmp
inc
sbb
pop
loopne
sbb
adc
fwait
addr16
mov
insb
dec
push
xchg
adc
int3
xor
data16
or
gs
inc
push
bound
jbe
lahf
mov
xchg
psrad
jo
shlb
jp
dec
nop
lret
dec
or
mov
fcoms
push
dec
jg
xchg
mov
jbe
outsb
sahf
addr16
in
lret
jae
push
sbb
push
dec
pushf
mov
addr16
call
pop
mov
jb
adc
or
mov
es
push
sub
dec
mov
cmp
ljmp
mov
inc
xchg
jbe
cmc
jbe
mov
call
inc
mov
data16
or
imull
addr16
insb
in
out
jecxz
je
sub
cmc
ljmp
xchg
inc
ss
xchg
cli
cld
xchg
pop
pop
andl
sbb
shll
fcomps
lea
xchg
push
pusha
jle
xchg
fcompl
or
out
and
call
repz
xchg
adc
cli
push
pusha
cltd
add
lret
cwtl
jl
test
or
adc
push
icebp
mov
andb
cmpsb
pop
pop
cli
jle
les
in
loope
cmpsl
and
sub
test
inc
movsb
shrb
and
mov
imul
iret
fnsave
in
push
pusha
xorb
and
repz
jle
lds
std
adc
andl
mov
or
fst
mov
adc
xor
push
push
pusha
stc
mov
int
divl
mov
loope
cmp
loopne
jmp
mov
cmp
xchg
cmpl
cmp
je
or
insb
add
daa
jne
aad
fcmovne
xchg
inc
out
jo
jo
std
cmc
sahf
sbb
repnz
and
mov
mov
xchg
mov
leave
mov
xchg
jg
mov
lds
out
mov
repz
mov
mov
pop
cmc
cmp
adc
jmp
cli
mov
out
jns
xchg
imul
sub
pop
lahf
add
outsb
icebp
outsl
lods
out
push
cwtl
cmp
pop
aaa
and
in
addr16
addr16
imul
sbb
stos
lock
js
lret
icebp
xor
mov
je
scas
push
mov
stos
into
jb
loopne
scas
mov
mov
bound
adc
stos
add
iret
arpl
inc
mov
cmp
fistps
scas
or
or
xor
or
sub
clc
dec
popa
sbb
xor
mov
call
clc
push
imul
outsl
fdivr
xchg
or
pop
lock
data16
xchg
inc
mov
dec
imul
sub
mov
sbb
cmpsl
cltd
mov
int
pop
add
xchg
inc
rolb
das
pop
xchg
loop
xchg
fisttpl
mov
fcmovne
aas
xchg
push
shrb
or
sbb
pop
lds
xor
loopne
pop
xor
scas
mov
insb
mov
xor
xchg
bound
or
and
cmp
lods
mov
movsb
aad
and
repz
shrb
sub
jbe
enter
daa
enter
into
enter
push
int3
cmc
jg
sti
out
adc
adc
push
cmpsl
out
push
cltd
inc
jmp
loop
xor
cld
dec
fsubl
loop
das
and
inc
pop
fmulp
sub
or
stc
xchg
pop
popa
ja
mov
inc
and
xchg
push
mov
rolb
repnz
add
jge
dec
dec
outsl
pop
cmc
jo
dec
stos
cli
ret
es
iret
test
jnp
inc
stc
nop
adc
mov
and
out
cmp
daa
xchg
repz
xchg
or
push
lret
adc
lret
jno
mov
out
aas
sub
cmp
xor
aaa
or
inc
nop
rolb
stos
adc
pop
rcll
pop
or
cld
dec
jg
mov
test
jl
pop
in
mov
daa
mov
repz
ljmp
pop
cmp
les
add
cmpsb
mov
and
dec
xor
lcall
movsl
pop
sbb
pusha
xlat
cmp
pop
out
push
mov
sbb
cltd
fnsave
gs
xor
cli
ss
insl
jmp
mov
jge
movsb
mov
loop
inc
cmp
pop
pop
insb
mov
pop
mov
cmp
mulb
inc
sub
les
loopne
or
or
dec
mov
mov
sbb
scas
pop
add
cmp
xchg
jae
rolb
cs
add
pushf
jbe
arpl
out
mov
jge
inc
sbbb
cmp
xchg
mov
cmpsl
mov
adc
mov
out
xor
adc
test
xchg
in
mov
mov
outsl
ret
scas
mov
sti
inc
arpl
cmp
inc
push
inc
xor
call
push
inc
cmc
dec
fiadds
outsb
inc
shll
and
shlb
push
xor
adc
mov
lret
mov
lods
cwtl
sti
add
rorl
cmc
jbe
aaa
dec
popf
mov
sub
ret
push
in
adc
ljmp
and
addr16
shrl
pop
push
or
out
lds
gs
dec
push
aaa
mov
pop
idivl
pop
ds
jbe
cmp
xchg
pop
sbb
xchg
push
pop
loope
outsl
pop
pop
ds
in
jo
adc
bound
push
sar
cld
mov
mov
daa
lods
xor
mov
leave
rorb
add
pop
push
or
push
fwait
mov
hlt
xor
mov
ret
sub
fisubrl
add
add
setle
jb
mov
sub
shlb
jmp
cltd
call
jbe
cmp
dec
xchg
fiaddl
aas
cmp
adc
fcomps
xor
mov
loop
into
push
sahf
addr16
xchg
mov
inc
mov
lods
popf
stos
outsl
call
pop
lock
add
push
repz
in
sbb
jmp
pop
pop
mov
ss
sbb
loopne
add
insb
mov
or
or
add
ja
push
sub
add
cmp
lcall
xchg
push
movsb
nop
ret
popf
xchg
mov
dec
test
fidivs
daa
loop
popf
or
or
leave
rclb
roll
pop
push
movsl
addr16
sbbb
sub
test
fwait
xchg
mov
addl
add
popa
adc
cli
fadd
lods
andb
aad
int3
xor
lcallw
lret
jecxz
call
mov
adc
sub
ss
push
pop
mov
addb
lea
fbld
int3
inc
or
movsb
and
in
xor
pop
pop
add
push
xchg
lahf
mov
sub
lcall
cmp
into
insl
sub
jmp
mov
cmp
mov
mov
dec
in
stc
data16
mov
daa
lods
rorb
xchg
repz
lods
xor
rorl
es
test
gs
add
mov
and
fldt
sahf
clc
mov
jno
inc
test
ret
and
cld
sbb
cmpsl
adc
sti
xlat
sbb
fsubl
adc
pop
popa
or
fld
or
cli
inc
xchg
inc
and
push
pop
cmp
setb
add
cmp
inc
outsl
cmp
inc
push
inc
or
data16
adc
adc
jp
inc
jg
lods
xor
out
xor
dec
mov
jmp
scas
aas
push
adc
fisttps
fcomps
cli
pop
mov
adc
je
mov
mov
je
xchg
cmp
out
mov
subb
push
aaa
pop
mov
stc
lock
mov
pop
movsl
mov
dec
xchg
das
jl
dec
rol
cltd
xchg
aam
sub
jl
jo
pop
push
cs
or
xlat
mov
into
stc
insb
imul
inc
xor
xor
mov
mov
inc
mov
ror
aad
cwtl
out
loopne
mov
add
inc
nop
mov
adc
pop
std
pop
imul
sbb
sahf
and
jl
ret
or
cwtl
pop
sbb
and
fpatan
and
add
push
mov
dec
cmp
addr16
pop
mov
cmp
sbb
jg
int
lock
fisubl
inc
mov
popa
xor
add
sbb
pop
fdivr
inc
mov
pop
data16
and
xor
mov
loopne
xor
out
adc
pop
push
mov
fiaddl
ss
xchg
fwait
dec
fnstenv
xchg
add
add
sub
xchg
push
mov
str
xor
pop
dec
mov
pop
fnstcw
adc
imul
in
dec
ja
icebp
sbb
jae
lahf
xchg
xor
xchg
lods
or
rorl
mov
fcom
push
fnstsw
int3
js
ret
out
xor
in
mov
sarb
in
fsubs
out
inc
adc
lock
adc
pop
mov
jmp
iret
and
and
push
push
adc
test
mov
loopne,pn
mov
mov
cmpsb
push
sub
mov
mov
inc
fidivl
sub
jnp
mov
xchg
test
inc
pop
mov
bound
call
pop
mov
outsl
pop
sub
sub
in
int
repz
push
push
sarb
cli
test
xchg
cmp
repnz
test
inc
mov
in
mov
jns
nop
jnp
mov
lret
cmp
insb
pop
mov
cmpsl
cmp
imul
push
test
mull
out
xchg
mov
add
pusha
stos
das
loope
sbbb
add
lret
shrb
or
test
and
jae
mov
aam
sbb
imul
push
add
loope
jle
xchg
ds
push
push
popa
push
addr16
push
mov
in
dec
popf
mov
call
insb
push
fstpl
push
dec
sub
jp
sbb
pop
dec
jnp
inc
jmp
cld
xor
dec
nop
xor
xor
repnz
jp
dec
sarb
dec
mov
popf
iret
scas
xchg
or
jmp
outsl
fwait
cmp
cli
in
cmp
scas
xchg
sub
cmp
lcall
aam
fnsave
fwait
fs
dec
add
cmpsl
jno
push
aam
popf
shrb
fwait
cmp
out
cmp
pop
mov
imul
clc
movsb
rcrl
mov
rcrb
jp
inc
inc
inc
dec
outsl
lods
cmpsb
sarb
sub
loop
add
mov
cmp
adc
pop
mov
fistl
cwtl
inc
daa
clc
shlb
in
mov
or
pop
stc
rol
pop
inc
sbb
insb
lea
filds
jns
xchg
dec
sbb
stc
js
insb
fnstsw
sub
addr16
mov
cmp
mov
push
xor
hlt
cmp
ret
iret
mov
leave
mov
int
mov
jp
mov
ss
lret
pop
add
sbb
mov
mov
jb
bound
clc
inc
pushf
mov
mov
xor
xchg
xchg
cwtl
pop
push
cmp
daa
repnz
dec
push
push
adc
ljmp
out
movsb
stos
sbb
ror
xor
adc
cmpsl
fmuls
in
inc
jae
icebp
cltd
mov
xor
imul
mov
mov
push
insb
in
and
inc
js
ret
inc
daa
daa
sbb
movsl
shrb
jl
loopne
mov
and
xorl
jmp
sub
mov
subb
fistpl
rcrl
xchg
je
push
aad
cmpsb
push
clc
xchg
push
inc
pop
stos
push
jl
adc
pop
and
add
in
or
mov
fdivl
loope
push
cmp
sub
leave
pop
enter
pushf
xor
mov
inc
sub
push
inc
inc
inc
sub
dec
iret
lahf
jmp
movsl
adc
mov
popa
adc
fwait
int3
repnz
sti
inc
xor
sahf
xchg
jp
lea
add
sti
loope
jno
leave
fwait
jmp
pop
push
insl
inc
push
pop
bound
lds
dec
mov
pop
addr16
ja
jae
popf
xchg
mov
xor
sub
push
xlat
pop
mov
jecxz
dec
xchg
add
insb
jno
scas
in
dec
loopne
lea
arpl
xor
cli
push
jg
sub
and
aam
inc
push
test
sbb
icebp
mov
sti
dec
or
es
nop
jno
insl
jp
jo
jb
mov
mov
add
fcmove
ja
test
bound
mov
mov
andb
int
sti
cmp
pop
cmpl
sbb
push
xchg
ss
ss
idiv
movsb
bound
lock
div
cmpsb
push
std
ss
add
mov
mov
cli
mov
mov
mov
loop
mov
cmp
add
arpl
jns
out
inc
rcrl
je
pop
sti
loope
mov
mov
push
lret
daa
pop
mov
mov
mov
xor
jne
sub
popa
stos
loop
mov
lret
or
aas
bound
outsb
pop
hlt
cltd
xor
mov
dec
ds
fnsave
mov
xchg
adc
inc
rcll
mov
aaa
repz
sarb
add
pop
jno
das
push
cmp
add
push
or
lods
cmpsl
or
cli
loopne
xor
mov
cmpsb
mov
jno
cltd
fbstp
arpl
mov
pop
adc
push
pop
mov
push
adc
jb
sbb
push
jne
push
and
aaa
mov
test
jo
add
pop
arpl
cmp
jno
mov
adc
mov
divl
out
popa
push
xchg
xchg
out
jge
sahf
lods
xchg
lods
dec
push
dec
dec
inc
ret
cmc
fwait
xor
sti
cmp
popf
sub
jns
sub
adc
mov
stc
push
push
dec
repnz
jbe
lcall
insb
and
pop
mov
in
pop
lcall
das
scas
aas
aas
test
dec
daa
test
inc
lock
push
pushf
ss
jge
xchg
jno
dec
or
push
adc
arpl
fstps
lods
pop
lods
std
pop
mov
les
pop
int
in
or
and
jb
dec
adc
setp
mov
clc
cwtl
xchg
into
lock
adc
out
mov
push
adc
popf
cltd
ret
adc
xlat
stos
stos
adc
mov
cmpb
imul
out
fnstenv
jp
fsubrs
xor
sahf
xor
cli
cmp
addr16
arpl
push
xchg
add
mov
jecxz
xchg
arpl
sub
popa
inc
inc
xchg
cmp
push
push
ret
hlt
pop
arpl
outsb
cli
ja
aas
fldcw
add
das
cmp
jae
and
aam
dec
imul
cmp
jl
les
xor
dec
enter
lock
loop
sub
adc
rclb
or
rcr
sub
cmp
push
stos
cmc
dec
movsl
imul
cmpsb
test
mov
mov
mov
mov
test
sub
test
push
pop
mov
push
jge
scas
movsl
nop
push
and
lcall
or
sbb
fdivs
sub
sbb
bound
push
mov
xchg
mov
scas
cmc
ljmp
lret
or
sbb
int
jg
in
jno
outsb
cmp
shl
ljmp
jne
adc
jnp
jne
xchg
fildll
notl
out
jg
sub
mov
iret
js
adc
push
leave
jns
sub
push
enter
pop
ja
nop
xor
inc
arpl
pop
fisttpl
pushf
cltd
sbb
sahf
dec
adc
ja
imul
sbb
jge
rcr
adc
or
jle
js
cmpsl
dec
sbb
rcl
mov
ret
test
data16
dec
xchg
pop
jmp
jge
adc
jmp
iret
xorb
xchg
mov
les
mov
mov
sub
mov
ja
cmc
mov
dec
mul
insb
and
or
mov
ret
add
ds
lret
xchg
mov
mov
or
lods
jbe
or
daa
and
rorb
cmp
mov
push
mov
or
mov
and
inc
in
jge
popa
push
pop
xchg
cmp
xchg
nop
ds
fldl2e
shlb
gs
lcall
clc
dec
push
mov
fiadds
inc
inc
les
xchg
clc
lds
int
bts
fs
popa
jp
icebp
jecxz
out
rcll
dec
pop
es
mov
test
sarl
cltd
icebp
loop
sbb
cmpl
dec
fistps
ljmp
sbb
jle
jnp
cwtl
imul
enter
fwait
insb
stc
jl
mov
add
outsl
iret
and
dec
ss
mov
push
int
or
pop
push
mov
xchg
sahf
jns
dec
jecxz
clc
dec
repz
xor
sub
neg
mov
mov
and
add
shlb
mov
sbb
icebp
enter
jnp
out
mov
pop
sub
push
xor
sub
adc
push
pop
std
lea
xchg
scas
inc
xlat
or
mov
mov
cwtl
enter
sub
or
push
mov
or
lcall
inc
xorl
inc
in
out
scas
mov
lret
lea
add
movsl
out
clc
movsb
pop
stos
push
xchg
icebp
orl
aad
jnp
je
jecxz
xor
and
ja
sbbl
ret
sbb
lahf
jae
fwait
jg
mov
push
mov
dec
movsb
mov
rcr
lock
and
cwtl
xchg
inc
jnp
cmp
mov
sbb
mov
sub
xlat
rorb
inc
dec
stc
negb
sbb
roll
xchg
call
cmp
lret
sub
or
leave
insl
iret
pop
pushf
sbb
fsubrl
mov
push
pop
jne
in
mov
rclb
mov
mov
mov
mov
iret
inc
neg
xor
inc
mov
cld
jno
pop
jmp
sbb
ljmp
xchg
rcl
or
dec
inc
mov
xor
mov
leave
lock
aam
jmp
pop
pop
dec
push
sbb
mov
outsl
sbbb
popa
cld
sar
enter
pop
cld
sbb
cmp
sub
aad
idiv
cmp
inc
movl
dec
mov
test
dec
hlt
cmc
mov
adc
scas
xchg
ret
ss
mov
gs
popa
lods
pop
dec
hlt
push
js
fs
pop
lcall
das
jne,pt
push
or
stc
sub
and
push
jecxz
lret
inc
imul
insl
cmp
in
cmp
jecxz
mov
das
pop
inc
jns
jecxz
in
lods
sub
adc
pusha
aas
scas
into
dec
xchg
xchg
test
stos
xor
inc
andl
lods
or
push
cmp
es
adc
out
xchg
out
ret
mov
push
cmp
xchg
sub
or
pop
xchg
fwait
repz
arpl
pop
stos
fsubs
xchg
sbb
test
push
xor
sbb
test
arpl
push
adc
jns
xchg
xor
xchg
xchg
ds
pop
sbbl
push
adc
aam
push
loopne
fnstsw
jae
ja
inc
xorb
js
fchs
imul
add
lret
adc
lock
mov
leave
mov
push
call
mov
nop
fsubrl
lea
dec
mov
lods
jbe
or
and
in
dec
pop
push
int3
jl
pop
stc
mov
mov
outsl
inc
fsubr
add
sub
lock
mov
stc
mov
pop
sbb
mov
mov
cmpsl
aad
je
std
out
cmp
inc
decb
mov
cmp
xorb
lock
add
je
test
mov
cmpsb
leave
xor
les
push
ss
jecxz
jns
lods
jmp
sub
xchg
out
jecxz
fwait
cmp
mov
xlat
xlat
jp
push
imul
loope
movsb
lea
xchg
push
ja,pt
xor
adc
stc
inc
sub
cmp
sbb
jno
leave
call
adc
or
push
xor
mov
das
nop
push
incb
out
mov
rorb
cmc
test
dec
shll
ljmp
mov
cmp
call
xorb
test
adc
adc
into
movsl
mov
pop
mov
sti
idivb
mov
in
mov
mov
dec
and
cli
adc
xchg
dec
in
shr
xchg
mov
nop
push
movb
mov
sub
lahf
sar
mov
aas
dec
mov
icebp
mov
mov
scas
inc
and
xor
std
adc
dec
mov
pop
mov
push
fst
xor
add
inc
sub
scas
into
std
xchg
xor
ficompl
lea
pop
xorl
jge
in
std
out
xchg
add
das
mov
and
call
jmp
outsb
je
jb
pop
mov
push
xor
fsubr
jbe
test
jp
add
and
and
jne
lods
sti
fistpl
insl
adc
fsubrs
sub
shlb
push
aam
jecxz
push
push
cmpsb
dec
push
push
dec
inc
mov
mov
imul
mov
or
pop
xor
cld
outsl
outsl
faddl
ficomps
cmp
add
pop
lock
xchg
mov
ljmp
les
je
cmp
mov
scas
push
adc
scas
and
aam
xchg
in
push
insl
mov
push
fidivrl
xlat
and
mov
push
push
subl
movsb
sub
cs
dec
pop
pop
xor
lret
mov
jne
lret
das
and
and
clc
cmc
mov
ficomps
push
rcr
ja
push
movsb
and
and
je
jmp
mov
pop
test
xchg
cld
imul
mov
ficompl
dec
in
out
cmp
loope
lods
out
sub
mov
pop
jnp
sbb
sub
push
repnz
enter
dec
and
jp
je
imul
add
pop
xchg
arpl
bound
mov
mov
popa
cmp
pusha
xchg
fistpll
mov
sub
les
stos
push
repz
xchg
mov
pusha
add
testl
movsb
push
cwtl
jae
inc
adc
les
icebp
or
lcall
iret
pop
and
xchg
mov
jle
inc
in
cmc
add
adc
aaa
dec
xchg
mov
insb
mov
pop
jecxz
push
jns
dec
xchg
out
scas
insl
cli
or
xchg
xor
mov
in
pushf
fucomip
inc
ficompl
outsb
xchg
xchg
rep
das
cmp
popf
xchg
or
dec
adcb
xchg
outsb
lcall
inc
fwait
push
pop
cmpsb
fs
shl
testl
mov
add
repnz
jp
int3
cmpsl
loopne
daa
pusha
pop
mov
lods
popa
mov
adc
add
inc
aad
xchg
xchg
cli
stos
shrl
adc
adc
jo
movsl
or
cmp
dec
orb
mov
add
dec
dec
repnz
push
rcll
fcoms
mov
push
in
imul
inc
movsl
push
jcxz
push
nop
and
in
or
dec
sub
call
sub
push
jp
xchg
inc
or
and
mov
cmp
add
mov
das
test
or
test
stos
cmp
mov
add
popf
sub
cmpsb
scas
in
adc
movsb
add
pop
fwait
mov
mov
cli
mov
ficompl
in
lds
jmp
lods
arpl
aad
mov
pop
xchg
lret
jmp
pop
pop
sub
icebp
nop
xchg
mov
addb
cmp
call
lods
push
xor
and
xchg
scas
sub
cmpsl
mov
inc
movsb
xorb
mov
dec
add
icebp
push
ret
mov
lcall
cmp
or
hlt
push
xchg
testl
sahf
fldcw
outsb
mov
mov
mov
pop
add
loop
xor
mov
popf
dec
aas
add
mov
scas
gs
test
xor
lock
pop
loope
sbb
loopne
mov
arpl
stc
cmp
push
stc
hlt
xchg
je
pmaddwd
cmp
in
adcb
movsl
mul
adc
sbb
add
adc
cmp
mov
lods
xchg
es
pop
mov
xchg
sbb
popf
inc
fyl2xp1
int3
in
stos
jbe
orb
push
les
mov
adc
push
int3
lret
push
sbb
test
cltd
cmpsl
inc
adc
pop
push
ja
mov
mov
and
push
adcb
je
in
mov
insb
xor
cmc
shrb
push
in
test
jge
jmp
dec
cmp
mov
aad
pop
sahf
pop
pop
jmp
sub
pop
pop
imul
mov
hlt
xchg
cmpsb
push
int
ljmp
sbb
les
and
or
out
scas
cmpsl
or
jb
xchg
fdivl
mov
ret
int3
loopne
mov
or
push
adc
pop
pop
loop
cmp
sarl
inc
test
sub
jno
in
inc
out
insb
je
push
ljmp
arpl
xchg
ja
outsl
pop
stos
mov
aaa
rorl
shlb
psubq
int
xchg
mov
shlb
mov
rcl
pop
popf
mov
pop
andb
mov
sbb
je
jns
int
sub
aad
loopne
jbe
mov
add
gs
mov
jge
aad
jle
cli
dec
inc
das
mov
inc
adc
out
lahf
add
out
xor
jnp
sub
loop
jg
ljmp
sub
jge
ret
push
addl
jl
lods
and
rcl
hlt
sub
fsubr
or
in
cmp
inc
xor
xor
pop
outsb
out
das
ss
mov
lcall
ja
sub
cmpsb
cld
out
repz
push
popa
lret
scas
cmp
xor
sub
jne
mov
inc
rcll
add
xor
jecxz
cmpsl
cmp
inc
xlat
pop
movsl
add
aaa
imul
pop
jne
inc
or
dec
mov
faddp
push
jge
push
fsubs
adc
mov
repnz
dec
pop
ficomps
dec
sbb
fbstp
cwtl
dec
mov
je
push
andl
arpl
in
adc
dec
stc
fsubrl
fldcw
lret
cs
rol
pop
jno
sbb
or
inc
ds
mov
push
jno
unpckhps
outsb
aad
cmpsl
cmp
cmc
es
jge
stos
ja
popf
inc
lcall
sub
push
ljmp
pop
lds
and
adcl
dec
jecxz
mov
xchg
add
int
pushf
xor
jb
loopne
pop
and
and
in
and
out
loop
xchg
out
test
cmc
es
jp
imul
lea
push
and
jp
dec
inc
add
dec
or
in
jns
cmp
jecxz
mov
push
hlt
icebp
dec
and
in
adc
cmc
lds
cwtl
adc
daa
stos
pop
fnstenv
fs
shrl
icebp
inc
jae
aas
ja
sub
idivl
lcall
jo
xchg
in
push
enter
push
sbb
test
sub
cli
repz
ss
test
sbb
push
jb
inc
cwtl
outsl
adcl
popf
call
xlat
test
or
or
ljmp
daa
pop
cmp
popa
hlt
mov
pop
js
jge
jns
push
aaa
popa
std
ds
dec
jae
inc
push
not
mov
lret
and
subl
add
push
aam
adc
add
repnz
push
mov
inc
call
pop
shll
pop
out
adc
cmp
enter
fdivrs
xor
pop
test
andl
scas
add
add
jns
sbb
fwait
outsb
push
inc
in
pop
pushf
cltd
push
out
dec
or
test
js
xchg
test
notl
decb
pop
push
fcoml
xchg
jb
sub
aam
mov
in
imul
out
pop
movsl
inc
push
or
adc
mov
mov
pop
push
mov
xlat
mov
out
lds
dec
movsb
mov
inc
xchg
mov
cmpsb
sub
nop
cmpsb
loopne
dec
push
mov
jp
fcomps
add
jecxz
xchg
pop
push
clc
sub
stc
cmpsb
das
pop
repnz
pop
imull
pop
roll
mov
or
dec
mov
ret
xor
sub
stos
fwait
inc
jb
ljmp
popa
push
sbbb
rcrl
or
repz
mov
add
xchg
gs
ds
das
and
xlat
lods
imul
mov
sub
adc
mov
adc
test
pop
sub
inc
shl
xor
xchg
mov
dec
pop
cmp
fadd
sbb
dec
push
xor
fcomp
push
sbb
adc
pop
sub
push
shlb
out
cli
outsl
test
out
and
xor
xor
push
mov
mov
repnz
scas
xchg
pop
sbb
or
mov
mov
sub
inc
jl
xorl
mov
mov
lret
pop
sbb
pop
and
or
jb
inc
repz
adc
xlat
dec
cmp
xor
inc
mov
mov
call
pop
sub
or
sub
or
dec
add
or
mov
in
mov
pop
sub
or
add
mov
and
rorb
repnz
or
mov
movsb
mov
or
nop
add
xchg
popa
cmp
insb
cwtl
mov
mov
mov
out
test
mov
call
push
sahf
loopne
pop
xchg
push
and
stc
clc
push
inc
pop
pop
leave
push
movsl
loopne
nop
push
inc
adc
xor
lret
loope
inc
scas
push
lock
cld
cmp
stc
je
ss
jmp
push
sub
sbb
or
aam
mov
push
adc
pop
hlt
gs
divb
inc
pop
outsb
sbb
mov
cltd
stos
lods
or
movsb
mul
icebp
dec
push
andb
test
pop
lock
movsl
dec
push
out
dec
push
xchg
mov
cmp
push
lock
push
nop
stc
xchg
mov
mov
mov
push
popa
jl
in
pop
rorb
movsb
movsl
mov
sar
mov
movsb
movsb
mov
xchg
mov
fs
fisttps
in
lds
mov
sbb
dec
push
xchg
pop
les
sub
cmp
or
lock
das
jbe
inc
cmpsb
gs
jbe
aaa
jnp
std
push
pop
inc
shrb
test
aam
sbb
push
fs
inc
cwtl
mov
jbe
enter
pop
ljmp
fldl
aas
dec
cmp
ret
enter
js
add
scas
cmpsb
daa
dec
xchg
daa
mov
sbb
jmp
xchg
popa
sahf
addl
sub
mov
into
and
jne
fisubl
xchg
inc
sub
pop
mov
jmp
cli
mov
lods
cli
out
add
push
scas
dec
xor
movsb
and
push
addb
xchg
movsb
es
jge
sbb
mov
sbb
push
inc
mov
int3
repz
js
arpl
int
add
push
jbe
ss
mov
mov
xor
add
cwtl
es
scas
cmp
xor
jge
or
scas
cmp
mov
push
rorb
jge
cmp
lods
mov
jp
shlb
pop
stos
mov
test
repz
lods
in
mov
inc
inc
fstps
inc
stos
push
mov
inc
mov
cmove
cwtl
ret
mov
fldl2e
add
push
inc
or
lods
insb
sbb
test
jp
scas
adc
int
fdivp
je
in
out
iret
sub
jbe
jmp
ljmp
les
mov
cli
std
cli
or
cmp
xor
sbb
lea
or
shlb
xchg
mov
notb
ret
jnp
inc
xor
xor
dec
jl
popa
mov
pop
leave
inc
repnz
ret
lods
and
hlt
mov
pop
enter
mov
xlat
or
push
cmp
pop
negl
sbb
imul
in
leave
xchg
mov
and
cld
pushf
pop
pop
sti
pop
flds
loop
test
push
stos
sub
mov
add
loopne
loopne
lods
imul
add
in
mov
pop
pusha
es
push
aaa
test
addl
sub
pop
jp
jo
sahf
shll
mov
pop
lods
jge
loopne
mov
add
xor
jb
repnz
and
mov
inc
push
or
nop
xchg
mov
or
hlt
lods
rorl
xchg
rclb
jno
xor
or
test
shll
rcrl
jno
loope
das
in
jle
cmp
loop
ja
xchg
cmpsl
cmp
js
xchg
daa
sbb
cld
cmp
test
push
dec
rolb
push
mov
out
test
push
xchg
jo
push
add
daa
jmp
pop
cmc
or
rcrl
mov
mov
or
stos
sbb
sbb
xchg
add
add
and
dec
dec
cwtl
jb
cmp
or
outsb
add
sti
imul
add
cmp
jbe
mov
mov
cld
aaa
jl
pop
in
addr16
ja
or
push
int
repnz
test
jl
mov
testl
sub
jnp
lret
push
jle
push
push
lcall
mov
insl
insl
cmc
mov
repz
jecxz
dec
ret
mov
rcrl
fsub
int
jmp
outsb
mov
lahf
lcall
mov
repz
enter
push
xchg
mov
fldenv
scas
jnp
mov
bound
xor
sbb
test
inc
xor
mov
out
push
fwait
xchg
movsb
daa
fucomip
addl
das
sbb
fstl
fsub
xor
in
push
fs
stos
pop
mov
loopne
flds
ret
mov
outsb
pop
adc
insb
insb
and
mov
ret
mov
xchg
push
mov
adc
pop
ss
dec
inc
das
xchg
jmp
clc
movsl
lock
inc
addl
jg
xchg
insl
jmp
sub
xor
jmp
popa
or
faddp
pop
cli
stos
inc
ret
mov
xor
or
dec
dec
mov
cltd
sub
out
out
into
push
sahf
sub
push
notl
stc
icebp
push
imul
aam
dec
and
pusha
pop
sbb
push
insb
outsb
fbstp
in
into
cmp
cs
cmpxchg8b
pushf
jmp
lods
mov
jge
insb
mov
sub
call
mov
ret
sbb
xorb
sub
push
push
daa
cmc
out
push
cltd
xchg
cmp
inc
stos
pop
outsb
adc
push
xor
mov
fs
mov
dec
lea
push
lcall
fsubrs
push
cmp
cmp
daa
jl
add
js
pusha
cld
sub
out
pop
sahf
outsb
mov
dec
xchg
ret
mov
insl
mov
and
notl
popa
add
outsl
fstl
aaa
clc
mov
cld
mov
frstor
adc
push
xchg
cmp
je
jge
rorl
out
iret
xor
xchg
sub
in
cli
push
inc
cmp
mov
imul
or
add
push
pop
stc
ror
scas
dec
jecxz
xchg
mov
shrl
mov
jmp
pop
pop
loop
push
pop
lahf
mov
popf
cmp
mov
xor
mov
leave
or
ja
xchg
and
pop
sub
iret
sbb
jnp
scas
int3
mov
into
dec
repz
icebp
sbb
dec
dec
xor
sub
add
push
divl
mov
inc
and
insb
sub
data16
es
arpl
and
sub
fcos
or
xchg
popa
je
repz
imul
shl
shll
cmp
add
push
push
loopne
dec
xor
ja
jbe
das
jp
push
scas
xchg
sbb
mov
andl
dec
jle
add
xchg
cwtl
js
push
insb
xor
into
inc
int
dec
sub
lahf
lds
in
aaa
nop
fdivrl
inc
and
add
xchg
jecxz
cs
adc
sub
rclb
in
loope
inc
pop
ss
cltd
lea
mov
pop
nop
cmp
xor
and
test
push
mov
mov
push
mov
pop
addr16
pinsrw
pop
push
pop
js
dec
js
jno
jge
cmpsl
js
imul
mov
ss
in
jmp
leave
pusha
bound
in
sbb
jecxz
xor
sar
fdivs
lock
push
push
dec
xorb
lods
adc
loopne
sbb
mov
adc
outsl
fs
add
xchg
xor
inc
aam
je
inc
mov
mov
push
leave
in
and
adc
mov
insb
std
push
sbb
adc
jg
dec
jg
mov
arpl
inc
ja
pop
mov
leave
push
jp
test
jb
orl
inc
push
fcomps
jecxz
bound
push
adc
subl
push
scas
shl
fmull
lret
sub
cmp
add
pop
insl
dec
ret
loope
sub
push
xlat
gs
mov
nop
mov
pushf
inc
ljmp
out
pop
sub
dec
loopne
dec
push
movl
popa
insl
lods
xor
mov
sbb
sbbl
out
lds
push
in
push
cmp
dec
test
inc
outsl
pop
pushf
dec
in
pop
jns
jnp
sahf
mov
xchg
aam
data16
jl
lds
test
add
sub
jmp
pop
xchg
inc
ljmp
testb
and
add
inc
and
mov
add
push
mov
lods
push
mov
ret
mov
ret
std
cli
inc
fisttps
push
rolb
push
jg
into
cmp
jmp
pushf
and
lods
aas
mov
int
push
loop
ret
mov
pop
mov
in
leave
nop
lret
sbb
scas
jns
insl
inc
fs
mulb
repnz
push
loopne
fstps
mov
add
sahf
in
dec
nop
pop
add
aam
jmp
in
push
dec
or
adc
stos
insb
lods
pop
vpaddb
pop
xchg
pop
negl
movsb
push
cmpsl
jb
push
aaa
push
dec
in
fisttps
lock
out
insl
ja
test
xchg
dec
jo
mov
leave
jbe
jle
push
hlt
or
xor
or
push
jp
test
cmp
ret
pop
jg
xchg
push
push
pop
sub
jne
jge
bound
xor
adc
ss
push
in
jmp
in
sar
stc
xchg
jbe
or
inc
pop
xchg
sti
pop
pop
fildl
les
push
mov
test
insb
jb
hlt
mov
gs
and
into
push
sub
scas
adc
xor
mull
sub
pop
ljmp
testl
xchg
int3
outsl
push
dec
xor
stos
pop
fsubp
orl
pop
inc
push
or
out
dec
mov
in
mov
xchg
sbb
add
addl
adc
in
test
imul
stc
jmp
loop
xor
mov
pop
icebp
arpl
xchg
insl
dec
lods
push
rol
imul
pop
or
or
fidivrs
fstl
lods
xor
hlt
dec
mov
jge
sub
pop
in
dec
ja
mov
xchg
enter
lret
fildl
mov
pop
decl
daa
hlt
xor
jnp
xchg
and
xchg
lds
xor
idivb
aad
jecxz
stos
adc
xor
pop
jl
jo
js
and
call
dec
in
xor
out
dec
scas
mov
popf
jl
in
adc
push
or
es
sub
addr16
sbb
fldenv
insl
inc
fisttpll
xorl
mov
mov
fildl
xor
aas
aas
lcall
pop
mov
stos
cmp
in
imul
test
je
dec
pop
mov
fidivrs
jae
jo
imul
sbb
ds
adc
enter
xor
or
les
cmpsl
daa
clc
xor
add
inc
andl
lahf
test
cmpsl
add
mov
icebp
jmp
xchg
mov
popf
test
fwait
lock
mov
mov
push
lods
in
mov
add
mov
adc
mov
hlt
sub
pop
out
mov
sub
rorl
push
dec
push
arpl
mov
dec
push
xor
stc
xchg
mov
popa
dec
dec
stos
ja
mov
inc
adc
inc
push
xor
cmpsb
cmp
inc
fisttps
xor
xor
lods
and
sub
andl
rcl
ret
in
es
mov
jo
stos
mov
cli
shrl
mov
lods
icebp
aas
in
jp
insl
orl
fwait
shrb
pushf
jb
and
push
fdiv
mov
or
imulb
dec
inc
hlt
and
or
jg
xlat
cs
xchg
repz
mov
mov
mov
jl
cmp
sub
inc
mov
dec
arpl
sahf
xor
add
shr
jmp
push
test
mov
adc
adc
push
bound
clc
add
or
lods
hlt
xor
jmp
adc
inc
out
jg
pop
ja
or
js
aas
push
add
nop
out
mov
or
push
jmp
cmp
fs
push
xchg
mov
in
mov
jns
cwtl
aaa
adc
xor
adcb
cmp
pop
jo
lret
int
cmp
jge
sbb
dec
xchg
out
addb
imul
fistpl
inc
inc
mov
adc
mov
sbb
mov
mov
cmp
in
push
call
cmp
sub
push
mov
bound
in
ss
je
mov
mov
jb
lds
daa
mov
pop
cmp
pop
fidivrs
loope
and
mov
dec
rcrl
out
jo
cltd
pop
xchg
mov
inc
data16
fldcw
cld
sub
lcall
repz
shrb
jg
jbe
mov
in
ja
aad
sub
xor
add
aad
xchg
sbb
lds
mov
out
nop
or
adc
sbb
sbb
add
jb
mov
fistpll
xchg
jne
outsl
push
mov
int
ret
mov
mov
inc
pop
and
dec
ja
mov
mov
push
mov
xor
sub
cmpsb
out
xchg
mov
mov
cld
lcall
cmp
xchg
or
mov
sbb
sahf
pop
mov
or
add
mov
jb
pop
stos
xlat
add
lods
js
and
jle
lods
pop
add
adc
cmpsl
iret
or
inc
xlat
or
cmpsl
adc
outsl
hlt
pop
push
cmp
xor
les
idiv
js
dec
inc
sbb
cli
xor
daa
test
pop
sub
stos
sbb
xor
push
cmp
fsubrp
repz
jl
lret
cmp
mov
push
lcall
push
insb
fs
loop
in
jae
data16
loopne
mov
adc
js
adc
dec
mov
and
mov
add
mov
adc
in
xor
xchg
or
lret
rclb
jne
ret
fs
xchg
aas
aas
push
and
inc
fptan
dec
aad
cmp
aam
pusha
inc
push
stc
adc
into
mov
mov
adc
es
jno
lret
shrb
lahf
sbb
cltd
sub
or
fistps
xchg
iret
cmp
dec
and
shl
xchg
push
orl
inc
mov
ret
dec
add
dec
imul
cmp
push
rorl
inc
movl
jne
mov
imul
or
pop
xchg
repz
jb
dec
push
sub
jmp
push
adc
movb
addr16
xchg
fwait
xor
push
xor
mov
add
mov
and
inc
or
inc
mov
and
add
pop
test
je
scas
pop
dec
inc
add
bswap
movsb
cmp
jno
xor
lret
add
lods
add
repnz
outsl
adc
into
xchg
xor
imul
or
cmp
xor
movsb
in
push
pop
fwait
rcll
cltd
inc
lcall
in
jp
lods
and
pushf
xchg
inc
js
xchg
push
mov
mov
ror
iret
mov
push
nop
insb
aaa
mov
stos
fcomip
jo
and
xor
jns
sub
fdivrp
aam
imul
mov
cmp
out
pop
push
or
push
scas
insl
mov
push
lahf
xchg
mov
ret
dec
outsb
lahf
popa
and
adc
push
mov
mov
mov
sbb
bound
sbb
pop
jmp
xlat
mov
adcl
or
xchg
call
loopne
hlt
fildll
mov
ss
cmp
mulb
inc
nop
fstps
mov
mov
add
mov
fistl
mov
icebp
push
pop
cmpsl
shlb
fildll
imul
xlat
scas
cmp
xor
insl
mov
inc
cmpsb
loopne
rclb
sub
xor
js
iret
addr16
out
gs
aas
sbb
dec
mov
cmpsl
push
ja
mov
xor
addr16
mov
mov
jg
xchg
adc
stc
mov
pop
mov
scas
dec
mov
push
cmp
xorl
test
aaa
icebp
inc
shrd
xchg
loope
test
push
std
ret
sbb
out
xchg
sbb
jno
lea
jnp
std
inc
iret
test
test
mov
inc
cs
dec
mov
jmp
sub
mov
xor
inc
push
testl
add
or
gs
jmp
adc
xchg
xlat
mov
mov
mov
push
xchg
mov
outsl
aaa
int
sbb
xchg
cmp
inc
lret
push
mov
dec
ret
jle
and
pop
xchg
or
dec
dec
cli
adc
jecxz
adc
mov
mov
fwait
data16
into
mov
lea
ds
xor
icebp
adc
mov
push
sahf
dec
pop
movsl
shlb
adc
dec
insl
push
sbb
dec
mov
sub
sbb
pop
xchg
rorl
pop
mov
clc
mov
xor
inc
incl
movsl
push
pop
iret
mov
cs
inc
jp
test
xchg
cltd
pop
cld
scas
data16
in
xor
dec
cmp
dec
xchg
inc
sbb
sub
ret
mov
out
mov
jge
jno
sub
cltd
mov
jge
in
mov
add
shll
xchg
das
std
xchg
icebp
loopne
lock
jle
insl
popfw
sbb
xor
jnp
add
xor
jae
out
or
and
lahf
xchg
or
mov
cmpsb
sbb
push
mov
movsb
nop
adcb
test
js
sahf
push
sbb
adc
push
sbb
sbb
xchg
lret
mov
loop
out
lock
cmp
adc
inc
out
leave
ds
in
pop
jne
mov
shll
jmp
jg
imull
cli
pusha
xor
xor
push
in
adc
jge
cmp
jo
pushf
and
adc
cwtl
sarl
scas
jbe
mov
jmp
xor
iret
xchg
sbb
aaa
push
mov
push
push
xchg
adc
xchg
int3
addl
outsl
ss
mov
inc
jbe
sub
jae
fnstcw
into
shll
and
push
pushf
jo
fnstenv
adc
shrb
test
leave
pop
gs
gs
xchg
xchg
stos
cmp
cmp
jecxz
and
ret
cmp
lahf
stc
jo
and
sub
adc
insl
in
bound
cld
pop
xor
mov
pop
leave
jl
mov
stos
fiaddl
inc
lods
mov
dec
mov
dec
bound
push
cmp
in
jb
pushf
cmovl
int3
dec
xchg
faddl
in
stos
xchg
jmp
add
dec
outsl
popf
jmp
or
std
mov
imul
pop
bound
inc
jae
int3
push
out
sub
lods
pop
xchg
insl
add
nop
xchg
mov
dec
mov
mov
scas
out
gs
sahf
scas
inc
cwtl
xchg
sbb
push
insb
cmpsl
loopne
pop
fcmovbe
lock
jmp
in
xchg
push
cld
mov
hlt
adc
pop
rcll
js
arpl
test
or
mov
test
cmp
int
pusha
add
lret
xchg
fs
in
jge
out
add
les
or
cmpb
adcl
or
or
dec
inc
adc
jb
add
ss
fs
xor
nop
das
jmp
sbb
inc
dec
inc
ss
mov
jo
test
mov
and
cmp
sbb
repnz
mov
loope
push
sarl
cmpl
pop
js
sub
and
xor
or
nop
out
cmpl
pop
dec
lahf
mov
decl
test
cmp
xchg
inc
dec
jmp
ja
sahf
in
lock
stos
pop
pop
js
mov
jle
xchg
repnz
jg
mov
lods
sub
pop
lret
fdivs
or
and
lea
ja
cmp
test
pop
adcb
insb
movsl
int
pusha
out
fs
pop
mov
into
or
push
adc
pop
aas
mov
mov
inc
nop
repz
arpl
subb
outsb
insb
add
or
inc
fwait
add
out
jg
mov
pop
ljmp
lret
sbb
call
mov
js
outsl
fsubrp
bound
aad
jo
sub
push
xchg
sarb
xchg
inc
ljmp
jmp
mov
cmp
lea
lods
cmp
mov
mov
out
cmp
rcrb
insb
arpl
stos
xchg
push
push
push
je
or
inc
scas
xchg
dec
cmc
outsb
inc
pop
xchg
ret
in
pop
fucom
mov
jle
add
lret
rcl
daa
jmp
stos
adc
xchg
scas
adc
sarl
xor
xchg
out
out
push
iret
das
cmp
in
mov
stos
jne
and
lahf
cwtl
mov
mov
or
test
int3
pop
sarl
xor
cmp
cli
out
xchg
js
jns
adc
repz
aam
movsb
shrb
in
and
sub
sti
sbb
testb
jge
fisubs
mov
scas
inc
jns
mov
test
jmp
mov
cmp
leave
mov
adc
movsb
fs
fs
mov
mov
and
ret
das
aaa
xlat
fisubs
stos
pop
shll
stc
xchg
pop
pop
jnp
repz
or
mov
pop
mov
sub
and
stc
ss
or
iret
mov
xchg
or
sub
std
pop
lea
aam
sub
addr16
stos
or
mov
fidivs
inc
imul
mov
pushf
push
mov
aam
mov
inc
add
sahf
fcoml
scas
int
fwait
push
loope
push
sarl
xchg
add
push
ret
rcll
dec
push
mov
sti
outsb
cmp
in
and
jbe
dec
mov
in
or
pop
gs
and
cmpb
scas
loope
int3
cmpl
mov
dec
pop
orb
mov
gs
add
add
sub
cmpsl
fiadds
jl
popa
mov
dec
add
cmc
jae
mov
inc
cmp
jecxz
popa
sub
inc
jmp
sub
es
inc
cmp
or
fs
mov
sub
adc
mov
sub
add
inc
push
mov
cld
es
test
add
andb
fiadds
fidivrl
in
adc
sahf
jmp
lock
movsl
call
fsubs
daa
mov
mov
es
inc
insl
lcall
insb
or
mov
sbb
mov
xchg
dec
out
test
lret
cmp
mov
xor
mull
adc
push
xor
jb,pn
idivl
bnd
shll
int
and
push
ss
sbbl
fwait
xorl
pop
jecxz
add
push
cli
scas
sub
out
jnp
loopne
hlt
jb
inc
das
and
fdivr
inc
fiadds
std
cmpsb
notl
jl
or
loop
mov
imul
cmp
lcall
mov
mov
test
scas
mov
xor
pop
dec
pop
push
dec
repz
inc
xor
pop
sub
dec
fldt
jne
cs
push
je
xor
jae
mov
pop
jae
pop
mov
daa
stos
xchg
mov
stos
cmp
and
sbb
xorl
jb
xchg
into
mov
add
call
push
cmp
mov
rcrl
arpl
addl
pop
mov
adc
shld
rcll
inc
add
inc
adc
call
push
lds
sub
mov
inc
test
sub
jb
cld
and
xchg
aad
dec
dec
add
inc
sbb
dec
add
inc
sbb
repnz
andb
aam
jnp
fidivs
sbb
lods
adc
fstps
mov
mov
mov
lods
popa
jbe
aas
cmp
or
rol
bound
cmp
add
pushf
or
add
dec
jb
xchg
loopne
cmpsb
addl
pop
test
sub
mov
sub
pusha
sub
mov
adc
push
dec
fs
mov
jg
dec
stos
movsb
imul
lods
or
jp
nop
fucompp
sbb
pop
mov
mov
cmpsb
lea
enter
nop
mov
adc
xchg
imul
les
mov
dec
inc
sbb
jo
adc
mov
pusha
leave
inc
mov
mull
imul
imul
repnz
sub
movsb
pushf
xor
scas
mov
and
dec
adc
jmp
lds
and
aam
or
sbb
das
jmp
dec
test
fidivl
test
mov
mov
pop
xchg
aas
pop
cmp
jp
daa
push
mov
add
xchg
out
js
fadds
insb
cs
in
jbe
xchg
jmp
xor
loopne
movsl
and
jle
ss
pop
fisubrl
and
add
andb
stc
adc
pop
in
stos
xor
call
imul
lret
push
bnd
scas
je
xchg
jno
xor
test
call
decl
js
mul
data16
pop
mov
ja
dec
roll
clc
int
leave
mov
jae
adc
arpl
out
add
inc
lret
xchg
movsb
test
adc
and
fstps
mov
mov
fistpl
inc
pop
enter
or
xchg
jae
cltd
mov
mov
jbe
xor
add
jle
nop
sbb
cltd
jo
push
sahf
rcl
cwtl
mov
int
adc
xchg
and
aam
inc
jp
andb
lcall
icebp
gs
mov
in
test
jmp
inc
or
and
push
test
pusha
adc
aam
sbb
xor
fsubrl
cwtl
aas
xchg
or
outsb
pop
repnz
jbe
cmp
das
je
sub
je
loopne
inc
xchg
jmp
cmpb
xchg
in
and
jle
outsb
into
pop
movsl
sbb
lret
into
arpl
sarb
mov
pop
sub
aam
push
adc
lds
lds
sbb
fistpll
dec
pop
rcrb
mov
fbstp
mov
mov
std
lods
mov
dec
cvtdq2ps
jle
inc
lock
jo
ficoms
fimuls
lea
aam
sbb
ficompl
pop
or
cli
push
sahf
mov
sub
push
jno
mov
lahf
ja
sti
mov
fwait
and
rorb
add
and
fsubrl
mov
fdivr
jno
add
inc
fs
add
lahf
jae
std
pop
ret
xor
dec
imul
xchg
fdivrs
push
xchg
xlat
mov
or
rorl
mov
cmc
adc
add
in
mov
mov
sahf
jno
insb
and
lods
ja
xchg
jo
adc
jb
sbb
aad
sub
cmp
lahf
mov
aas
lods
rorb
pop
mov
or
ljmp
xchg
in
scas
pop
sar
cmpsl
cmp
sahf
insb
repnz
mov
jne
or
push
cmp
setle
adc
insl
stos
push
lock
out
out
test
add
iret
mov
ljmp
call
popa
test
cmp
into
lods
test
test
and
adc
cli
push
je
call
mov
stc
push
push
push
stc
jo
and
outsl
iret
mov
imul
jmp
cld
and
sbb
fdivr
adc
js
insl
xchg
add
vprotd
cs
aam
mov
ror
cltd
or
movsb
insb
or
ds
and
pop
fisubrs
adc
lods
jle
testl
movb
push
jne
or
mov
xlat
mov
fsub
inc
inc
xor
jae
loope
jmp
sbb
push
scas
out
iret
sub
jb
push
xchg
jne
push
call
pop
or
arpl
cwtl
inc
sbb
stc
sub
push
out
sarb
int
adc
jns,pt
mov
add
sbb
inc
testb
popa
adc
mov
sub
sub
js
dec
and
fisubrs
test
ret
popf
ljmp
ret
xor
enter
xor
pop
test
iret
ss
es
mov
mov
fdivrs
rol
mov
sub
xor
imul
dec
loope
loope
shlb
bound
push
in
adc
ja
sbbb
in
pop
aaa
ret
inc
test
inc
ljmp
call
or
lds
loopne
movsl
push
dec
das
xor
ret
or
sbb
fdivrs
jmp
mov
fcoms
push
sti
cmpb
fldcw
pop
mov
cwtl
sub
push
xlat
xlat
and
fistpl
mov
insl
sub
imul
dec
or
mov
xlat
adc
ud2
addr16
sbb
cmpl
sbb
pop
enter
dec
fsubs
sub
dec
mov
test
xor
pop
imul
sarl
fsubrp
dec
into
or
loopne
add
or
sub
lock
or
xor
pop
repnz
faddp
in
in
jbe
lea
daa
dec
stc
jbe
popf
jg
mov
adc
and
out
pop
daa
mov
mov
mov
enter
test
stos
jo
test
xor
test
mov
lret
push
out
push
pop
cmpsb
xor
mov
sub
fldcw
adcl
pushf
neg
aad
nop
inc
scas
inc
test
mov
fcomip
cmp
movsl
testl
outsl
cmc
or
frstor
push
enter
pop
or
stos
add
sti
fs
or
int3
lret
sbb
jnp
adc
loope
pusha
dec
mov
lods
mov
decb
cmp
dec
pop
bound
pop
push
mov
shr
push
stos
bound
arpl
push
les
sbb
jne
in
pop
addl
mov
sub
push
xchg
mov
mov
dec
pop
jbe
adc
mov
out
jb
aaa
call
int3
int3
orb
cs
fistps
mov
cmp
mov
push
outsb
push
popf
jecxz
call
pop
enter
xchg
mov
test
push
or
rclb
and
testl
xchg
es
andl
icebp
insl
or
and
xor
mov
sbb
dec
data16
clc
sub
idiv
cs
mov
int
shll
lods
and
xlat
fiadds
add
and
cltd
jmp
and
xchg
jg
push
xchg
dec
push
add
lock
sbb
or
rol
popa
xchg
jle,pt
pop
and
gs
cmp
arpl
in
cs
cmp
xor
int
mov
outsl
xchg
lahf
mov
shll
out
sbb
test
pop
sbb
mov
cmp
jnp
daa
mov
mov
mov
sbb
adc
and
movsl
xor
lods
mov
mov
cmp
aad
push
jbe
xor
lods
push
mov
sub
push
push
push
call
mov
push
call
sub
nop
cmp
mov
cmp
and
mov
mov
lea
cmp
sub
mov
mov
pop
call
inc
cmp
jne
not
and
cmp
sub
xor
call
sub
cmp
cmp
xor
add
inc
xor
call
call
add
mov
xor
cmp
and
and
and
lea
mov
and
cmp
cmp
push
call
neg
sub
mov
mov
cmp
sub
mov
add
xor
call
pusha
add
add
lea
cmp
mov
mov
cmp
cmp
cmp
mov
xor
add
xor
add
not
call
not
mov
mov
sub
add
sub
add
cmp
cmp
add
mov
lea
lea
mov
and
inc
mov
add
cmp
not
add
mov
mov
and
popa
cmp
jne
call
mov
add
mov
mov
lea
pusha
xor
add
and
sub
cmp
lea
and
xor
add
sub
mov
xor
push
call
and
and
mov
mov
lea
mov
cmp
mov
inc
add
mov
sub
sub
popa
mov
add
add
and
pusha
xor
sub
add
lea
and
and
not
add
dec
mov
and
add
popa
add
push
push
push
push
call
pusha
sub
xor
cmp
neg
cmp
cmp
add
xor
and
mov
add
xor
sub
dec
sub
xor
call
xor
add
and
sub
call
sub
cmp
and
xor
lea
xor
add
mov
popa
test
je
mov
mov
mov
lods
test
je
mov
stos
jmp
mov
mov
mov
rep
mov
add
jmp
push
mov
sub
call
pop
lea
push
add
mov
mov
mov
push
push
call
mov
mov
pop
push
mov
add
rep
lea
movzwl
pushl
push
push
call
pushl
pushl
call
push
push
mov
and
push
mov
add
push
jmp
mov
and
xor
sub
not
cmp
sub
add
mov
mov
sub
mov
and
xor
nop
nop
cmp
sub
mov
sub
cmp
cmp
add
dec
cmp
cmp
xor
mov
cmp
xor
dec
xor
xor
mov
xor
cmp
push
mov
pusha
mov
add
push
mov
mov
test
je
test
jne
mov
mov
add
add
mov
add
cmpb
jne
inc
jmp
push
call
mov
lods
test
je
bt
jae
and
jmp
add
add
push
push
push
call
pop
stos
jmp
pop
add
jmp
pop
popa
leave
ret
or
add
and
or
mov
nop
nop
nop
cmp
mov
cmp
xor
mov
add
and
push
mov
pusha
mov
mov
push
mov
add
mov
mov
add
rep
pop
add
dec
jne
popa
leave
ret
sub
mov
dec
mov
cmp
dec
add
mov
dec
and
xor
add
xor
and
cmp
add
cmp
xor
lea
mov
not
mov
mov
push
mov
pusha
mov
mov
add
push
call
push
push
push
call
push
push
push
push
call
test
je
add
cmp
jl
popa
leave
ret
xor
add
add
sub
sub
sub
cmp
sub
sub
cmp
xor
pusha
mov
xor
mov
std
stos
dec
jns
cld
xor
mov
xor
divb
xchg
xor
add
add
add
mov
movzbl
mov
mov
mov
inc
cmp
jne
popa
ret
lea
neg
and
sub
add
mov
xor
sub
sub
cmp
cmp
or
dec
and
sub
sub
cmp
add
mov
push
mov
pusha
mov
and
push
mov
add
pop
mov
movzbl
mov
mov
mov
mov
add
mov
popa
leave
ret
and
xor
xor
sub
xor
cmp
mov
add
xor
mov
xor
and
push
mov
mov
and
xor
push
call
leave
ret
sub
sub
add
cmp
cmp
lea
xor
add
add
lea
xor
xor
and
add
cmp
mov
lea
add
push
mov
pusha
movb
mov
mov
mov
lods
stos
test
je
loop
sub
neg
mov
call
popa
leave
ret
sub
cmp
sub
add
lea
sub
sub
cmp
cmp
cmp
sub
not
or
add
xor
lea
lea
inc
sub
add
xor
not
sub
and
and
xor
sub
sub
sub
xor
cmp
push
call
mov
mov
mov
lods
push
call
stos
loop
ret
add
neg
dec
sub
cmp
and
mov
add
and
cmp
and
or
sub
neg
call
not
cmp
add
add
xor
mov
neg
add
mov
cmp
mov
add
push
pop
mov
ret
rdtsc
cmp
neg
and
sub
lea
cmp
neg
cmp
xor
mov
inc
sub
mov
xor
sub
add
sub
sub
inc
call
cmp
sub
or
mov
mov
cmp
lea
sub
add
sub
cmp
lea
lea
cmp
cmp
not
push
pop
mov
ret
xor
mov
inc
xor
inc
cmp
jne
ret
xor
mov
inc
xor
inc
cmp
jne
ret
lcall
add
roll
mov
roll
jb
inc
add
inc
add
inc
add
inc
add
roll
xchg
roll
cmpsb
roll
stos
roll
scas
roll
xor
inc
add
inc
add
add
add
inc
add
inc
add
add
rolb
sub
inc
add
inc
add
inc
add
inc
add
inc
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
add
add
roll
add
roll
add
add
aam
add
roll
add
aam
add
roll
add
roll
add
rolb
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
pusha
rolb
add
add
jp
add
xchg
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
add
adc
add
add
add
pusha
rolb
add
add
jp
add
xchg
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
add
adc
add
add
add
add
inc
jo
outsb
fs
outsb
jne
add
add
fs
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
inc
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
dec
outsb
jbe
insb
imul
je
add
add
inc
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
jae
push
jne
je
gs
popa
add
add
jb
outsb
push
outsl
inc
insb
imul
add
je
popa
jb
je
outsl
jae
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
roll
add
roll
add
roll
add
aam
add
aam
add
aam
add
aam
add
add
add
add
add
test
add
xchg
aam
add
aam
add
add
add
roll
add
roll
add
roll
add
aam
add
aam
add
aam
add
aam
add
add
add
add
add
test
add
xchg
aam
add
aam
add
add
add
add
outsl
jae
dec
popa
outsb
fs
add
add
insl
jo
jb
inc
imul
add
inc
gs
imul
push
jo
arpl
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
imul
je
add
add
fs
imul
add
add
push
gs
jb
push
inc
add
add
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
outsb
inc
add
aam
add
add
cmp
add
dec
aad
add
add
add
add
aam
add
add
cmp
add
dec
aad
add
add
add
add
add
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
je
imul
outsl
jb
add
add
je
gs
inc
outsl
insb
outsl
jb
