incl
dec
pusha
or
nop
add
dec
add
cmp
roll
add
adc
dec
idiv
outsl
call
and
cmp
cmp
addl
or
or
lcall
or
cmp
push
and
rol
add
rolb
xchg
dec
adc
cmpl
adc
test
orl
das
inc
xor
push
lock
decl
push
fldl
cmp
lcall
loopne
push
jo
adc
sub
add
addb
cmpb
and
imul
sti
adc
loopne
sbb
and
adc
cld
pop
inc
add
and
test
inc
and
ljmp
pusha
add
nop
or
xor
or
or
popa
sti
fbstp
in
add
nop
test
add
mov
es
mov
mov
and
add
dec
daa
add
pop
in
scas
xor
rolb
add
mov
add
add
xchg
in
div
mov
clc
roll
inc
cmp
mov
sti
mov
stos
lcall
insb
add
enter
clc
push
and
fiadds
pop
or
pop
add
push
int3
jnp
out
scas
pop
leave
or
jne
out
add
jb
dec
pop
cmpsl
dec
adc
data16
in
xchg
adc
jo
push
in
aas
ja
enter
add
sbb
pop
jnp
int
rcrl
add
and
out
add
in
xchg
std
jae
push
rcrb
push
sbb
mov
jno
popa
or
sti
push
mov
sbb
jns
adc
sti
sbb
push
lcall
mov
push
addr16
sbb
mov
jle
mov
dec
insl
movsl
in
inc
pcmpeqd
in
lock
and
clc
jecxz
aas
mov
pusha
cmp
loope
and
or
mov
xchg
into
pop
ljmp
cmpsb
loope
sbb
lahf
movsl
jne
push
or
mov
add
and
add
xor
fdivp
jne,pn
mov
jp
cmp
push
andb
adcb
mov
push
in
sarb
add
add
jge
lea
and
enter
ja
sbb
aad
inc
adc
outsb
lds
nop
add
cli
add
out
mov
xor
and
push
fsubp
daa
arpl
pop
push
push
or
cmp
cmp
imul
cmp
cmpsb
mov
pop
into
xchg
jl
cs
pop
imul
imul
add
add
imul
popa
sbb
mov
mov
cmpl
iret
push
mov
outsl
sahf
pop
into
mov
repnz
pushf
cs
add
scas
aad
ret
cmpsl
adc
fnstcw
loopne
mov
push
cmp
push
out
inc
shll
in
dec
and
cld
and
xchg
shr
cmp
fmuls
andl
add
add
inc
pop
aad
call
pop
xchg
stc
pusha
jne
sbb
sbb
repz
or
jge
aaa
xlat
cmp
pop
shr
add
sub
stos
or
cmp
cmp
outsb
cs
or
push
jns
aad
popa
js
ss
adc
jbe
push
pop
notb
add
and
repnz
popa
repz
sub
ss
push
cltd
xchg
lds
sarl
add
sub
push
jae
pop
jns
and
xchg
or
push
xorb
sub
gs
pop
cmp
cmp
fdivp
xor
cmp
daa
add
stos
sub
pusha
cmp
scas
ret
test
std
cmpsl
rorl
add
sub
xor
pop
in
movsl
pop
add
cmp
adc
mov
movsl
sbb
add
in
jbe
sub
and
loopne
sbb
mov
jp
sbb
int
clc
xlat
inc
arpl
xrelease
dec
mov
mov
xchg
cmp
lods
in
dec
shrl
sbb
and
push
lahf
mov
in
sub
xchg
push
sub
mov
dec
es
rcrb
fimuls
pusha
inc
xor
dec
pop
xchg
or
fistps
call
pop
sub
push
rorl
mov
pop
xchg
and
fisubl
xor
pop
fisubrs
imul
jmp
pop
mov
xchg
xchg
cwtl
add
push
mov
cmp
mov
shr
je
pop
mov
cmp
hlt
cmp
add
and
jmp
aad
and
push
aam
push
inc
pop
jo
mov
add
pop
loop
add
mov
divb
jnp
dec
and
in
inc
xchg
inc
incb
sbb
incb
lea
jo
xchg
add
test
inc
icebp
inc
mov
or
inc
adc
add
push
lret
call
xchg
imulb
aas
push
add
pop
out
ret
mov
cmc
pop
hlt
in
or
inc
sub
ljmp
push
or
add
cmp
mov
shll
movsl
jo
or
arpl
push
pop
pop
cmp
lcall
imul
lea
movsb
jmp
popf
jbe
adc
enter
mov
add
les
dec
js
loopne
sbb
xor
stos
jle
mov
orb
addr16
popf
push
pop
fsubrl
mov
roll
int
cwtl
clc
sbb
in
movsl
cmp
mov
cwtl
xor
movsb
leave
notb
ja
das
stos
pop
sti
jo
pop
adc
dec
nop
lcall
sub
add
mov
inc
xor
pop
push
hlt
dec
cli
hlt
imul
sbb
and
mov
jbe
pop
roll
mov
add
sbb
sub
mov
or
es
fnstenv
and
les
jne
in
mov
xchg
in
imul
daa
jne
mov
mov
fldcw
fstpt
xor
cwtl
xchg
popf
lret
and
mov
ret
insb
popa
push
dec
xchg
push
push
inc
inc
fwait
or
imul
gs
mov
inc
int
cmpsl
iret
stc
adc
fwait
mov
arpl
pop
lret
lret
imul
into
dec
lods
push
push
cmp
repnz
inc
adc
sub
push
jno
outsl
push
ss
xor
mov
fwait
dec
repz
ja
pop
stc
sarb
sub
std
mov
data16
mov
fs
sub
not
loop
imul
mov
pop
inc
mov
mov
stos
jp
ret
das
or
add
jge
or
dec
lock
test
mov
sbb
stos
or
out
mov
lret
movl
ss
xor
test
adc
fldcw
lds
mov
pop
out
adc
ret
inc
popl
push
xchg
adc
mov
pusha
mov
arpl
aaa
shl
or
iret
xchg
repz
bound
cmp
adc
sbb
lds
cmp
dec
adc
sbb
sbb
sbb
shlb
and
and
in
jno
pop
adc
shl
div
cmc
cwtl
or
add
sahf
iret
xchg
sarb
push
bswap
and
dec
rclb
icebp
movsl
add
fstl
cmp
icebp
inc
jae
pop
mov
pop
dec
lods
add
fists
pop
mov
inc
stc
stc
pop
adc
mov
jns
pop
xchg
insl
pop
in
sub
sbb
test
in
cltd
add
sbb
mov
add
lds
push
sbb
jmp
sbb
and
dec
lret
dec
mov
aas
repnz
jno
or
and
sbb
mov
movsb
mov
mov
daa
fstp
test
scas
rcr
repnz
adc
cmp
pop
enter
orb
repz
mov
push
fadds
iret
pop
xlat
jbe
cwtl
daa
inc
jbe
mov
push
inc
mov
cs
repz
aaa
cmp
das
icebp
adc
or
adc
sub
or
xorb
in
add
sbb
or
enter
cmp
xchg
mov
ret
lea
scas
ss
test
scas
movsb
mov
inc
stos
push
out
mov
sbb
testb
ret
movl
mov
xor
pushf
jae
mov
mov
xchg
push
dec
mov
push
fwait
test
sub
aas
push
jge
bound
adc
popa
pop
enter
test
orb
mov
sub
adc
out
mov
pop
jae
pop
bound
and
lahf
mov
jge
iret
dec
inc
or
pop
push
mov
fistps
int
or
fistl
hlt
add
add
je
stos
notb
fimuls
mov
leave
js
mov
leave
inc
arpl
xchg
mov
es
mov
jmp
push
das
in
pmaxub
mov
jae
push
and
add
into
ret
or
popf
mov
stos
or
movsl
add
sub
sbb
mov
cmp
cmp
pop
ret
lfs
daa
adc
mov
push
cs
loope
roll
mov
pop
sub
cmp
mov
or
insb
lea
fcmove
mov
mov
arpl
mov
sub
pop
push
call
fsubs
push
cs
xchg
jae
es
mov
dec
loop
add
cmp
imul
aaa
mov
scas
push
jno
js
xlat
add
xchg
mov
sub
push
stos
stos
pushf
fidivrl
mov
push
ja
inc
dec
das
jne
xchg
jns
in
sahf
imul
mov
xchg
imulb
inc
cmp
loopne
sub
mov
add
outsb
test
add
daa
out
pop
leave
fstpl
stos
sub
inc
pushf
xor
cmp
dec
call
sub
or
push
in
stos
je
ja
add
push
repz
aam
or
or
roll
pushf
fsubl
dec
aaa
test
jle
aas
sbb
sbb
into
sbb
mov
orb
cmp
jbe
add
dec
dec
dec
adc
dec
push
mov
scas
add
aad
call
inc
xchg
xchg
lahf
mov
add
mov
add
stos
ja
push
mov
or
ja
call
jmp
sub
shl
add
push
inc
insb
sub
xchg
xorb
sbb
loope
ss
mov
imul
and
inc
fldcw
xlat
insl
fiadds
mov
inc
pop
aaa
leave
inc
in
hlt
mov
pop
dec
aas
adc
lock
imul
aam
sbb
xchg
dec
imul
ret
loope
inc
dec
fisubrl
jne
cmp
jecxz
call
je
test
aam
mov
xchg
adc
rcrl
cmpsl
sbb
jne
adc
lock
js
jnp
test
or
and
jb
jp
xlat
push
inc
mov
fs
cmc
xchg
xor
loope
rcrb
push
out
add
pop
cmp
cmp
sbb
sti
inc
adc
aam
xor
jle
mov
jl
lret
adc
cli
and
jg
rcr
inc
popf
adc
iret
mov
mov
pop
rol
cmpsb
xor
cmpsb
inc
add
in
inc
std
popa
divb
mov
clc
ret
push
lcall
pushf
sbb
leave
aas
ret
sub
insb
or
mov
test
sarl
test
dec
jno
cmp
jg
push
pop
or
test
incb
mov
mov
xchg
mov
mov
add
xchg
adcb
test
lret
aad
mov
push
cld
or
in
xchg
das
andb
mov
jb
movsb
jmp
xlat
inc
mov
and
or
sub
cmpsb
push
mov
add
mov
add
cwtl
add
in
fildl
sbb
and
push
add
decl
lcall
push
lahf
xchg
lret
adc
add
gs
push
mov
movsl
pop
sbb
mov
sarb
mov
pop
fs
sub
idiv
test
and
aam
dec
sbb
and
ljmp
mov
inc
shlb
rclb
xor
mov
scas
loopne
sub
mov
mov
add
adc
add
and
mov
jbe
pop
lock
mov
adc
aaa
lods
push
jo
hlt
sbbb
push
out
pushf
add
in
out
inc
mov
cmp
fidivs
inc
into
jne
dec
and
jmp
shlb
mov
aaa
mov
xor
aam
aad
adc
stos
jo
jecxz
sub
or
push
mov
cmp
add
loop
mov
or
iret
mov
int3
pop
pop
les
ret
jg
add
mov
push
movsl
pop
fistpl
aam
test
ret
hlt
pop
sbb
div
scas
shr
push
xchg
xchg
pop
stc
and
icebp
add
pop
pusha
xchg
ljmp
data16
mov
push
mov
pop
fldcw
lcall
xorb
mov
out
sub
fidivs
imul
fldt
cld
pushf
in
inc
mov
enter
int
push
cmpsb
inc
fsub
inc
inc
jo
loopne
inc
pusha
mov
ret
mov
jbe
std
cli
int
daa
pop
sbb
lcall
push
jmp
mov
aaa
fsubl
in
ror
and
shlb
cli
iret
flds
roll
clc
mov
sbb
or
fbld
addl
xchg
mov
call
cmpsl
cmp
call
dec
fimuls
mov
out
xchg
mov
xchg
and
les
xor
in
push
jnp
mov
or
adc
adc
cmp
xlat
fmull
and
jle
rcll
outsb
xlat
pop
cmp
or
mov
cmc
scas
pop
lock
nop
dec
mov
push
mov
or
std
addl
sbb
jmp
sub
repz
push
dec
pop
mov
and
mov
cmpsl
testb
aam
xor
insb
into
pop
sub
je
subl
sbb
mov
stc
in
pop
test
or
rolb
xor
pop
in
pop
insl
arpl
add
loopne
loope
xor
dec
arpl
xorl
movsl
jmp
stos
mov
cmpsb
sbb
ret
cwtl
ret
dec
cmpsl
gs
add
and
jbe
imul
fs
xlat
stos
aas
mov
dec
sub
or
or
mov
cmpsl
adc
mov
sbb
test
popf
xchg
movl
mov
add
loop
pop
adc
cli
fwait
loopne
pop
mov
add
cwtl
js
stc
dec
clc
lret
jns
out
data16
jno
adcb
xchg
je
dec
das
lahf
push
imul
pop
ret
fstl
dec
xor
push
nop
loopne
movb
add
cmp
scas
push
mov
ja
sbbl
out
fimuls
push
test
aad
outsb
in
addb
movl
inc
pop
cmpl
mov
pop
sti
cmp
inc
insl
adc
cmp
fwait
lock
jg
popa
lds
add
sub
clc
addr16
sti
mov
je
sub
stos
lret
fwait
pop
dec
push
or
xchg
dec
aam
push
adc
lahf
loopne
jl
fcmovne
add
inc
pusha
lcall
inc
adc
movsl
push
loopne
push
aad
push
hlt
dec
es
roll
and
lds
push
pushf
cmp
jbe
fwait
test
or
fldz
push
pop
jbe
jmp
dec
push
or
jns
mov
ds
ds
sub
stos
xchg
insl
lods
inc
sbb
or
orl
int
movsb
in
arpl
and
into
into
rcrl
pusha
xchg
daa
adc
cwtl
test
inc
lahf
das
jbe
adcb
jnp
aaa
pop
mov
sbb
and
cmp
adc
inc
sub
push
repz
loopne
leave
adcb
cmp
loope
mov
shl
sbbb
xor
adc
icebp
out
sbb
inc
fs
xor
add
int3
mov
and
cmp
ds
sbb
xchg
jle
pop
inc
icebp
jecxz
sbb
daa
push
sub
loope
add
scas
mov
rcll
pop
stc
jge,pn
lods
roll
pop
sub
pushf
into
bound
xor
cli
pop
pop
addb
sbb
mov
mov
loopne
pusha
lret
mov
jb
hlt
xchg
lock
push
cmc
aaa
and
jg
sbb
add
jo
movsb
bnd
pop
fdiv
sub
in
loopne
movb
pop
incb
sbb
fwait
dec
push
inc
shrb
arpl
test
jns
incl
mov
pushf
sbb
cld
push
adcb
in
cmp
sbb
cmp
dec
lock
rcll
test
xorb
es
lds
fs
pusha
ret
es
test
test
test
fidivl
outsb
and
push
hlt
scas
fsubs
mov
inc
lock
mov
clc
adc
jb
cmovl
fcomip
leave
mov
pop
inc
cmp
jg
mov
sbb
xlat
sbb
add
jmp
pop
hlt
outsb
xchg
popf
xor
dec
add
and
shlb
mov
jno
or
cmp
int
std
popf
lock
or
cmp
test
dec
sbb
test
mov
cld
mov
or
ss
xchg
iret
xlat
aas
mov
mov
pshufw
mov
and
ljmp
ds
orb
insb
push
add
imul
pop
in
cmp
movl
punpcklwd
adc
pop
fdivs
mov
dec
test
adc
sbb
stos
push
ficompl
stos
mov
or
and
inc
sahf
in
data16
nop
pop
mov
enter
mov
lea
in
int3
enter
pop
aam
sub
dec
push
lods
or
mov
adc
jg
test
ret
adc
repz
sbb
add
mov
adc
inc
push
push
or
aad
fsubs
cmc
cmp
loope
fucomi
sbb
test
inc
cmp
sbb
add
sbb
rcrb
fwait
inc
sbb
repnz
insl
iret
cmp
dec
inc
js
mov
jge
pusha
or
call
imul
xor
cli
push
sbb
lret
andnps
sub
push
in
xchg
mov
cli
xchg
cmp
cld
push
dec
mov
inc
inc
push
pop
pusha
fwait
pop
dec
mov
dec
or
add
cld
cli
mov
sbb
decl
fisttpl
cmpsb
andb
push
test
mov
push
movsb
push
addr16
fwait
or
mov
enter
jne
outsl
testb
or
test
sahf
or
push
push
xor
lret
cmp
sbb
or
mov
mov
jle
pop
sti
mov
ljmp
add
mov
mov
inc
loopne
in
push
xchg
push
test
hlt
hlt
clc
add
sub
pop
xchg
arpl
fisubrl
jae
adc
mov
cmpb
in
xor
mov
fsubrs
insb
scas
cmc
loop
pop
xlat
ret
pop
pop
aaa
shl
mov
cmp
hlt
adc
arpl
cld
call
loopne
test
mov
mov
push
sub
stos
lea
adc
xorb
xlat
out
pop
mov
stos
movb
or
or
adc
lcall
sbb
call
ja
insl
pusha
add
sti
fists
jno
das
add
or
std
jle
loopne
aam
movsb
aaa
mov
in
jl
sarb
mov
es
out
lahf
loope
adc
rcr
imul
xchg
xchg
inc
adc
mov
dec
jbe
mov
repnz
cmc
lcall
mov
and
cmp
fdivr
shl
test
rolb
fisubrs
inc
mov
mov
jecxz
jg
cmp
pop
inc
dec
ret
je
loopne
cwtl
call
adc
fmull
pop
mov
or
and
and
sub
je
add
sub
pushf
pop
fwait
popf
or
pop
repnz
or
cmp
nop
mov
jmp
jo
pop
out
adc
push
jge
jo
ror
and
sbb
cwtl
test
js
icebp
mov
mov
rcr
inc
mov
cwtl
jmp
inc
repnz
push
test
incl
icebp
inc
out
decl
xchg
or
jp
push
mov
add
fwait
sbb
inc
pop
call
sbb
add
mov
les
aas
leave
dec
push
ret
mov
into
rclb
pop
repnz
sub
lds
add
mov
push
test
inc
add
adc
cmpsb
cmp
pop
icebp
sub
pop
shrb
xchg
call
outsl
sub
sub
or
pop
stc
and
sub
dec
clc
das
insb
sub
lea
cld
mov
push
xor
pushf
push
and
mulb
out
jnp
bound
xor
xchg
rorb
jecxz
ret
cwtl
pop
mov
aam
imul
into
gs
pop
mov
stos
push
out
pushf
les
inc
jbe
cmp
push
jnp
inc
xor
pop
sub
loop
or
orb
sahf
fstpt
enter
xor
ficomps
cmc
xchg
pop
cwtl
popf
or
div
xchg
cmp
mov
dec
adc
add
cmp
dec
push
sub
mov
cmp
clc
ret
dec
lds
push
jbe
lret
mov
mov
ret
mov
sbb
jmp
sbb
out
imul
lcall
btc
mov
dec
cmp
push
pop
and
scas
aaa
cmp
divb
cld
into
ret
sbb
cmp
xor
xor
push
cs
outsb
jne
pop
lock
sahf
outsb
mov
mov
xchg
shl
in
cmpb
cmpl
cmc
or
jae
pop
cmpsl
push
mov
mov
in
push
pusha
sbb
sub
lods
loop
xorl
xchg
cmpl
stc
subb
shl
sub
or
dec
xchg
dec
jge
aas
sbb
push
dec
jae
aaa
xchg
inc
out
stos
cs
sbb
push
sbb
sub
inc
outsl
push
mov
xchg
cli
movsb
outsb
pop
add
leave
push
and
cmpsl
out
repnz
adc
push
hlt
lret
pop
insb
cli
sarb
xchg
enter
adc
test
xor
mov
jg
and
imul
insb
inc
sbb
addl
inc
cmp
pop
imul
wrmsr
inc
sbb
call
push
enter
jno
jp
sub
push
adc
or
ret
mov
jmp
pusha
add
pop
mov
mov
incl
adc
push
adc
stos
sarb
push
dec
mov
cli
or
pop
ja
aad
std
sbb
push
into
test
jbe
xchg
ret
xchg
repnz
inc
roll
cmp
shlb
jb
fwait
movb
movsb
scas
jg
dec
stos
xor
jp
push
rcrb
sub
fcmovu
fistpl
or
fadds
dec
cmovbe
mov
lods
mov
outsl
scas
mov
add
sub
or
jo
dec
adc
push
cmp
ret
scas
sbbb
adc
jp
andl
sub
shll
mov
cltd
mov
jns
das
adc
loopne
and
mov
mov
out
loopne
lcall
xchg
dec
cli
pop
ret
cmp
lock
nop
faddl
pusha
add
clc
loopne
inc
test
push
xor
mov
xor
adc
insl
push
testb
xor
add
or
inc
jecxz
pop
push
out
mov
fsubrs
lds
sub
pop
inc
lds
or
fidivrl
decb
repnz
and
xchg
mov
sarl
add
xor
insl
cs
mov
sarb
mov
dec
shl
cltd
adcb
test
leave
adcb
xor
jnp
mov
add
dec
pop
fs
sbb
pop
cld
pop
js
xchg
or
stos
adc
cmp
xorl
fwait
push
roll
inc
add
rorb
dec
pushf
ds
lret
xlat
imulb
ljmp
insb
mov
mov
andl
repnz
add
mov
scas
xchg
rorb
fnstsw
out
clc
dec
fldl
pushf
inc
fcoms
push
sub
in
hlt
aad
popa
jg
js
mov
mov
loopne
andl
insb
out
jp
and
mov
push
into
push
jl
stos
jo
loop
push
sub
mov
adc
or
dec
pop
add
push
sbb
cld
push
dec
ljmp
and
xchg
push
dec
cli
jg
mov
popf
push
into
ret
xchg
cwtl
fistpl
mov
push
xchg
scas
push
or
push
lea
mov
movl
add
adc
inc
loope
xchg
call
sbb
mov
lea
mov
call
mov
data16
pushw
adc
push
fcmovnu
outsb
andl
push
push
jp
repz
fiadds
push
clc
add
dec
das
fiadds
out
aaa
add
call
or
jp
mov
or
inc
aad
aam
adc
lcall
adc
rcl
dec
jg
clc
push
sbbb
call
mov
in
ret
stos
ficomps
lock
idivb
inc
push
aad
imul
aaa
mov
sub
xchg
pop
stos
mov
popa
mov
sub
orb
lods
aam
jl
fisttpll
mov
push
cld
push
inc
sub
dec
or
ds
jl
sti
addr16
ret
add
or
push
cld
scas
ret
in
sahf
sub
hlt
and
xchg
sti
lock
cmp
add
sbb
stos
mov
mov
aaa
adc
inc
loopew
scas
sub
xchg
notb
inc
adc
mov
daa
add
cli
loope
push
sub
mov
or
push
and
ds
shlb
out
push
xorl
sahf
ficompl
clc
outsl
xchg
mov
sub
adc
bound
sbb
push
pop
mov
out
or
add
dec
pusha
jo
clc
lret
mov
mov
data16
xor
inc
js
outsl
das
sub
xor
cli
ret
pop
add
fcomip
push
push
movsb
jbe
rorb
fcoml
dec
adc
insl
js
mov
loope
mov
add
fdivrl
test
ljmp
stc
lcall
lret
testb
fwait
ret
add
fistpll
jno
dec
xor
rorl
dec
jmp
jnp
loope
add
ja
jae
add
sub
cmp
sub
mov
filds
mov
sub
mov
or
std
or
inc
aas
sahf
inc
outsl
jecxz
dec
fcomps
out
xchg
add
popa
xor
adc
mov
arpl
out
sub
ret
cld
mov
out
inc
hlt
incb
out
inc
cs
inc
xchg
cmp
lcall
fistpl
lods
cwtl
je
add
jl
mov
or
xlat
jno
xor
lock
sbb
sbb
push
aad
lock
je
dec
or
out
popf
and
rorl
mov
add
pop
mov
xchg
scas
hlt
in
jle
jecxz
inc
pop
xchg
mov
loopne
ficoml
push
ficoms
pop
cmp
call
jae
cli
test
in
out
lea
xor
push
add
loopne
sbb
arpl
push
jbe
or
imulb
inc
sahf
or
xchg
cmp
sub
das
cld
mulb
xor
mov
lock
test
lret
pop
fwait
incb
inc
int
adc
xchg
dec
xor
push
daa
psraw
inc
movsl
popa
mov
or
sub
mov
ss
nop
mov
rcll
fiadds
insl
cmp
sbb
data16
outsl
mov
mov
pop
mov
stc
sub
mov
scas
fmulp
loop
xchg
mov
jno
lret
movsb
stos
xchg
test
adc
les
lea
sbb
into
lea
loop
mov
jle
test
sbb
and
and
adcl
clc
mov
sbb
and
add
sbb
lock
mulb
jo
push
aam
push
inc
sti
jo
test
test
sub
inc
inc
call
mov
roll
jg
cmp
das
pusha
jbe
mov
js
cli
jbe
push
jb
andl
xchg
ret
decl
stos
push
xorb
sbb
cwtl
icebp
test
inc
cli
push
mov
cs
int3
dec
jl
dec
xchg
icebp
out
les
push
push
add
xchg
xor
push
xor
fistl
add
xchg
mov
in
add
loope
xchg
je
hlt
enter
cli
push
jmp
sub
pop
scas
movsl
movsb
jmp
dec
mov
xchg
clc
movsl
sub
js
hlt
mov
scas
xor
sar
scas
int
int3
enter
lock
lret
pusha
lods
jo
mov
js
add
sub
mov
pop
aas
pop
jg
test
mov
sbb
jge
insb
xchg
add
mov
add
jnp
push
push
push
jo,pt
call
add
pop
test
ret
add
repnz
ljmp
and
out
and
xorl
jge
jno
test
add
mov
mov
add
xor
mov
das
mov
jle
push
ret
shlb
ds
xchg
mov
loopne
pushf
xor
loopne
cmpsb
add
pop
xchg
mov
mov
fyl2x
and
or
addb
mov
mov
or
imul
ret
mov
rol
test
faddl
shll
push
fnstsw
sbb
inc
rolb
adc
outsl
movsl
loopnew
imul
mov
add
fcoml
mov
dec
or
jp
jb
scas
xchg
cmpsb
mov
dec
mov
mov
hlt
insb
das
xchg
dec
insb
mov
std
outsb
cmp
out
push
ss
rolb
outsb
cmp
dec
push
sbb
lds
mov
jl
and
lret
jno
inc
jne
rcrl
test
jo
incb
test
insl
lea
shlb
push
int3
xchg
jnp
aaa
sarb
jo
shll
add
inc
and
insb
jecxz
inc
mov
push
or
sub
and
inc
xchg
and
test
add
dec
into
stos
fisubrs
push
fs
dec
sbb
sbb
xor
int3
loope
loopne
shlb
aam
lcall
mov
mov
add
fadd
les
xor
je
mov
sbb
add
jo
mov
out
mov
cmp
mov
pop
test
cmp
mov
jp
rcrl
push
test
sbb
mov
ret
mov
and
clc
inc
xor
call
mov
pop
sbb
aad
jg
push
dec
aam
ficomps
nop
sbb
fsts
pop
xchg
loope
movb
mov
add
out
test
adc
daa
outsb
dec
imul
xchg
out
sbb
xchg
lret
icebp
push
fsubp
mov
dec
into
and
inc
mov
int3
push
test
add
nop
movsb
ret
ss
call
cs
enter
mov
in
incl
rclb
jnp
fmull
lcall
add
je
mov
aas
adc
adc
jo
push
stos
jno
lds
stos
and
jl
in
or
xchg
or
into
mov
es
push
or
ja
sub
pop
fistps
cmp
push
fdiv
push
clc
cli
decb
cmp
adc
ss
roll
ret
sbb
cwtl
repz
lods
mov
jle
faddl
sub
and
out
add
pop
mov
filds
pop
icebp
xor
js
sbb
jns
dec
aaa
cld
mov
adc
jno
pop
into
xor
xchg
rcrb
test
cld
es
mov
cmp
pop
push
outsb
or
pop
mov
mov
loope
ret
push
or
mov
push
sub
shl
es
xchg
mov
push
fnstsw
sub
arpl
xor
bound
fdecstp
sbb
aam
jne
icebp
js
cmp
mov
cld
or
icebp
in
jmp
xchg
mov
cmp
jecxz
rcrb
rclb
add
out
clc
mov
outsl
imul
adc
ja
cmc
aas
lret
sub
add
jecxz
mov
rcl
cmp
mov
cmpb
sub
sahf
repz
arpl
xor
lcall
sub
test
fcoml
test
icebp
push
je
mov
shl
adc
mov
int
mov
dec
dec
cmp
leave
pusha
sub
jb
sub
add
xor
mov
outsb
cld
inc
push
and
push
or
xor
pop
mov
xor
dec
in
cmp
inc
mov
adc
pusha
pushf
cmpsb
es
add
cmpsb
or
sub
inc
cmp
dec
push
adc
sub
sbb
pop
scas
repnz
test
add
push
mov
ss
mov
xor
mov
data16
outsl
pop
les
xchg
cmpsl
mov
sbb
add
xlat
out
cmpl
inc
push
xchg
xchg
add
inc
shrb
ret
loop
cmpsl
jno
lret
ljmp
mov
xor
inc
lock
pushf
dec
nop
clc
inc
inc
lret
inc
imul
scas
and
mov
in
jecxz
pop
sti
adc
lods
xchg
mov
jnp
xlat
out
in
sbb
fadd
arpl
mov
hlt
lds
lods
mov
sbb
xchg
call
daa
incb
mov
xchg
xlat
cmpsl
cmp
mov
test
inc
aaa
test
jg
fadds
pop
inc
inc
pop
mov
lds
lock
lea
cwtl
rcrl
mov
cs
add
fs
push
das
fcomp
dec
inc
sub
cmp
pushf
adc
xor
push
lods
cmp
stos
test
sbb
add
mov
dec
mov
loop
and
lock
lods
int
loope
daa
in
jnp
pop
adc
push
pop
mov
orl
aam
add
add
mov
jmp
in
je
aam
sbb
stos
push
mov
loopne
and
pushf
jge
pusha
add
sbb
xchg
testb
inc
or
stc
mov
mov
sbbl
movsl
dec
xorl
inc
sub
sbb
sub
scas
or
sbb
xor
xchg
loop
shll
sbb
rcrb
cmp
sahf
mov
dec
in
aaa
mov
shl
das
les
add
std
mov
mov
add
inc
xchg
fwait
stos
push
sbb
push
stc
testb
bound
add
inc
fiadds
rclb
lock
inc
xchg
xlat
shlb
outsl
dec
push
push
push
sahf
add
lea
arpl
inc
add
pusha
mov
xchg
push
dec
imul
stos
les
add
cmp
sbb
inc
add
mov
cld
pop
lret
cmp
inc
mov
mov
arpl
mov
test
aaa
pop
in
mov
mov
adc
and
push
repnz
mov
pop
in
lahf
ds
test
push
jo
add
sub
inc
or
stos
in
xor
mov
jge
xchg
pop
jbe
dec
jno
pop
lods
add
in
insl
ljmp
sqrtps
or
dec
dec
mov
enter
dec
popa
imul
bound
fisttpll
cmp
ss
push
fisubl
mov
mov
dec
stos
xor
jmp
es
shl
sub
adc
xor
push
nop
cmp
enter
xchg
jae
fwait
repz
push
mov
xlat
loopne
fs
nop
cmp
loop
ret
or
imul
cmc
shl
xor
cmp
pop
mov
sbb
or
dec
and
mov
js
sbb
or
insb
and
adc
fnstenv
incw
nop
cmpsl
add
bound
scas
clc
addl
aas
mov
add
push
cmp
pop
je
pop
nop
test
cli
daa
rorl
sub
fisttpll
or
or
shr
cmpsl
addl
fcoml
xlat
or
push
mov
mov
cs
adc
mov
iret
dec
addr16
insl
pop
xorb
mov
scas
popf
mov
pop
cltd
ljmp
fsubp
sub
mov
inc
es
adc
mov
mov
inc
lock
out
add
jp
stos
ret
pusha
movsb
pop
mov
mov
jbe
icebp
jge
xchg
test
mov
pop
cmp
push
sahf
add
xlat
icebp
out
pop
add
and
jl
outsl
and
sub
push
cltd
call
and
das
pop
cmp
insl
stos
nop
or
xor
je
pop
insb
jmp
jp
ficompl
jno
in
aas
out
mov
jo
ja
jl
mov
outsb
sbb
push
pop
scas
mov
mov
sub
fistl
sub
jle
push
push
cmp
andl
push
fs
clc
lds
sub
ffreep
ljmp
pop
movsl
pop
out
in
xchg
ds
mov
add
sbbb
push
dec
scas
cmpl
mov
clc
ret
in
std
pusha
mov
cmp
ja
popa
pop
inc
repz
loopne
rorb
out
lods
rorl
cmp
mov
stc
add
in
xchg
sbb
lahf
mov
out
mov
ret
pusha
lret
aad
xor
lods
int3
lds
jle
push
pop
xchg
in
sub
cmp
add
fdivs
inc
ret
add
lret
aad
push
sti
lcall
xchg
clc
jns
jg
xor
je
cmc
filds
hlt
jo
dec
mov
test
imul
mov
mov
xchg
or
dec
inc
cmp
push
mov
push
pop
inc
xchg
sub
cmp
mov
repnz
ficompl
stos
out
ja
cmp
stos
jno
das
popa
xchg
xor
and
push
adc
sbbl
mov
lahf
movsb
sub
sbb
xchg
mov
pop
stc
adc
add
fdivrl
jg
lret
cmpb
sub
jp
add
mov
negb
iret
lds
ja
sbb
sub
mov
pop
repz
imul
imul
insl
int
sbb
jle
fidivrl
adc
test
test
or
pop
ljmp
pop
mov
jmp
jns
adc
mov
cwtl
ficompl
ret
cmc
add
shr
cwtl
out
mov
cmp
gs
push
dec
sub
mov
fcomp
sub
mov
lret
mov
sub
xchg
pop
pop
pop
std
sahf
mov
jbe
stos
je
push
sarl
aad
loop
or
push
sbb
mov
sub
xchg
dec
xchg
scas
and
inc
mov
mov
jnp
in
mov
push
xor
xor
xchg
push
lock
out
leave
in
daa
sub
xchg
or
out
inc
jmp
ja
push
mov
inc
out
jno
adc
adc
xchg
out
inc
pop
sbb
arpl
push
scas
jno
push
add
mov
adcl
loop
hlt
pop
xlat
inc
xchg
dec
or
cmpsb
and
mov
pop
mov
pop
mov
jl
jp
xchg
js
popa
add
sbb
nop
lahf
je
cmp
sbb
in
test
scas
lock
aam
inc
int
mov
mov
jb
add
jecxz
push
in
pop
xchg
cld
mov
roll
mov
or
sub
inc
rorl
cmpsb
ret
push
dec
gs
sub
dec
stos
loopne
test
or
fcmove
jecxz
sbb
pop
and
sbb
test
sub
xor
inc
das
or
xchg
lods
mov
movsl
pop
or
mov
stos
and
pop
shlb
sbb
pop
xor
push
mov
push
out
sbb
jmp
les
push
lea
sbb
out
jno
inc
mov
mov
push
cmp
xchg
js
lret
and
or
push
adc
nop
mov
push
mov
test
ds
sbb
sbb
pop
je
pop
push
pop
add
sub
or
push
xor
add
inc
cmpsl
pop
testl
hlt
dec
dec
out
shlb
fs
lods
pusha
cltd
pop
sub
je
push
in
fcos
mov
loop
repz
xor
push
adc
push
ret
and
sbb
aaa
push
sbb
pop
mov
lret
push
ja
fnstcw
rorb
popf
je
cmc
rorl
fisubrl
bndldx
push
pop
and
mov
mov
addr16
call
cwtl
pop
sub
jl
jmp
in
int
xor
es
xor
lock
or
inc
sub
sub
clc
cld
loope
mov
dec
sub
inc
loopne
and
pop
mov
dec
xchg
outsb
call
movsb
imulb
jge
bound
mov
jecxz
aaa
pop
in
daa
mov
push
test
and
pop
mov
push
push
xor
jge
push
jo
xchg
cmp
aaa
jge
in
leave
pop
imul
xchg
lea
pop
dec
je
nop
cli
sbb
lea
sahf
or
jnp
sbb
mov
orb
inc
loope
add
ljmp
add
outsl
inc
push
jae
adc
incb
pushf
mov
call
pop
and
into
adc
test
shl
mov
fcmovnbe
push
xchg
loopne
add
arpl
test
mov
mov
xchg
or
or
dec
subb
adcl
pop
insb
lcall
in
movl
in
sbb
jl
xor
push
cmp
dec
mov
jns
sub
adc
jge
js
test
adc
cmp
pop
xor
dec
pop
roll
cltd
pop
cs
and
inc
cwtl
in
jo
fwait
nop
clc
mov
insl
js
stc
xchg
cmpsb
fcoml
fmull
in
sbb
sti
jb
mov
cmp
subl
adc
sbb
and
fstps
pop
cmp
js
fistpl
pusha
repz
lret
sub
add
pop
pop
std
js
shlb
mov
push
inc
inc
pop
jae
push
sbb
aas
dec
pop
push
sub
fsubrl
sbb
daa
enter
outsb
out
jo
pop
sbb
lock
out
push
mov
jl
jge
mov
mov
in
mov
sbb
adc
addr16
pop
mov
std
pop
imul
ret
xchg
cmp
aaa
xchg
daa
sub
dec
dec
push
in
jge
dec
insb
xor
and
push
push
xor
into
ret
jnp
and
push
or
mov
fwait
out
jle
jp
or
popa
das
push
pop
mov
daa
test
cs
sbb
ds
lods
xchg
mov
lahf
mov
stos
jns
cmp
sahf
movhps
sbb
pshufw
shll
sbb
xor
xor
adc
aad
decb
sub
and
add
dec
jge
or
cmp
sub
popf
mov
cli
and
ret
pop
es
dec
push
jp
or
test
jo
arpl
inc
fstl
arpl
inc
lods
cmp
mov
add
add
out
orb
push
int
cmpsl
push
loopne
mov
je
lods
orb
dec
cmp
fisubs
xor
or
sub
sbb
fsubs
movsl
mov
or
xchg
scas
mov
mov
and
push
adc
fwait
test
xchg
faddl
inc
cmp
lock
cs
cmp
jge
adc
pop
arpl
push
cli
jno
mov
and
rcll
push
push
jnp
mov
sahf
aas
int
push
inc
rcrl
pop
mov
xor
fcomp
or
cs
or
and
cltd
sbb
jnp
jae
sub
mov
insb
test
sahf
sub
sub
xchg
adc
loop
and
pop
pop
xlat
add
rcll
je
or
add
xchg
inc
fistps
mov
and
dec
adc
mov
adc
xor
or
dec
js
movsb
dec
jg
data16
push
add
sbbb
ja
sbb
mov
out
pushf
mov
xchg
js
ret
mov
push
push
pop
outsb
push
es
lcall
pop
fsubr
push
int
sub
bound
xor
outsb
push
sub
adc
movsb
jbe
push
sub
cmp
push
push
stos
ficomps
or
mov
iret
and
js
daa
cmp
movsb
adc
sbb
and
mov
aad
imul
jge
pop
xchg
and
frstors
xchg
dec
sbb
outsl
mov
fmulp
pop
scas
push
lock
idivb
xor
adc
lock
xchg
or
mov
push
mov
test
loope
jecxz
jl
into
xchg
mov
push
outsl
jl
inc
and
inc
or
mov
and
and
mov
out
incl
jbe
jbe
rorl
xor
je
es
sbb
outsl
mov
sbb
or
stos
add
xchg
imul
lods
or
cmp
loope
jnp
lock
push
xor
mov
jns
clc
int
test
or
pop
pusha
or
pop
push
stos
aam
pop
addl
mov
loopne
and
cmpsb
xor
cli
dec
jne
loope
xchg
mov
dec
test
mov
mov
xor
xchg
imul
push
mov
push
pop
cli
or
cltd
cmpsb
or
ret
shlb
lret
out
cmp
xor
insl
adc
fildll
inc
jl
rorb
or
in
pop
pusha
sub
ss
mov
inc
push
pop
repz
push
cmpsl
lock
fsubs
fimuls
inc
mov
sub
xchg
roll
inc
out
xor
xor
lds
dec
movsb
out
data16
stos
jl
inc
jge
scas
push
dec
insl
jecxz
pop
aaa
es
adcl
mov
xchg
out
dec
outsl
jbe
sbb
dec
pusha
sub
rcl
inc
mov
sub
xchg
mov
mov
dec
lret
outsb
add
pop
mov
cmc
add
xchg
mov
movl
lea
mov
pop
cmp
iret
push
aad
adc
test
int
adc
cmp
pop
add
adc
add
or
cmp
or
jno
pushl
sti
ficoml
mov
and
jle
sbb
push
sub
pushf
push
std
mov
push
aad
cmp
sub
add
and
rcll
pusha
mov
rol
and
mov
aad
sti
push
cmpsb
adc
jle
test
aam
dec
aam
adc
adc
push
inc
pop
js
loop
sbb
cs
mov
mov
ja
imul
jnp
in
inc
lds
or
xchg
pop
xchg
subl
mov
insb
rolb
xor
add
lcall
jae
cmp
pop
inc
das
daa
mov
rorb
jg
mov
fwait
fwait
cmp
ret
cmc
sub
scas
out
xchg
aad
pop
or
inc
out
or
pop
xor
ljmp
xor
loop
jmp
jmp
cmc
shll
rcl
inc
add
js
popf
push
mov
push
in
ficompl
cld
rcpps
stos
daa
xchg
fwait
mov
popf
icebp
pop
shr
jbe
subl
pop
aad
ljmp
inc
sub
xor
shrb
mov
or
mov
addl
fidivrs
cmc
sbb
push
add
lcall
xchg
mov
cmp
insb
push
cmpsl
imul
pop
les
fstpl
and
dec
add
or
xlat
lahf
sbb
push
loop
push
xchg
outsl
xor
sub
jecxz
xor
mov
pop
mov
test
je
mov
and
add
jbe
cmpsl
jno
push
stc
mov
pop
push
test
adc
in
fsts
push
dec
push
xor
push
repz
push
decl
lock
aaa
xchg
pop
call
mov
nop
out
jg
pop
cmp
sbb
jge
daa
sahf
aad
es
loope,pt
cmp
mov
icebp
mov
lcall
lock
es
cmc
pop
jo
jne
cltd
xchg
jae
in
fldcw
dec
jnp
repz
ffreep
test
int3
xchg
sti
movsl
cmpsl
ret
mov
das
fmuls
enter
jns
aas
cwtl
andb
xor
push
mov
fstpl
jmp
jle
dec
or
cmc
sarb
pop
mov
sbb
lods
or
cmc
pop
jo
cmc
ljmp
jo
inc
shll
mov
and
ret
and
lahf
dec
sbb
mov
data16
mov
inc
fistps
out
cmp
mov
dec
xchg
lods
das
and
shl
outsb
ja
scas
push
lret
jle
daa
lds
jo
push
outsb
mov
dec
inc
mov
ret
ds
xchg
or
pop
decb
sub
inc
mov
and
mov
xor
cmp
dec
cwtl
sub
mov
inc
mov
popa
sbbl
fnstsw
xor
jmp
jb
stos
lea
ds
in
arpl
or
shr
repnz
xlat
mov
hlt
push
or
xchg
push
add
std
adc
and
pop
subl
jbe
push
shrl
jo
cmp
shlb
shlb
xchg
pop
ss
jo
or
mov
inc
lea
lods
cli
cmp
popa
pop
fwait
mov
or
popa
xor
int
pop
loop
xlat
data16
jg
mov
pusha
cmp
pop
xor
push
movsb
int
inc
xchg
push
test
ds
push
sub
mov
adc
je
icebp
cmp
mov
dec
test
jp
pop
jmp
mov
les
jl
in
xchg
ret
mov
jp
test
aam
pop
ja
std
mov
lds
je
sar
or
pop
fmuls
cli
repnz
inc
xchg
dec
test
aas
dec
call
jg
movsl
add
cmpsb
cli
shr
icebp
sbb
inc
lods
adc
pop
out
fldenv
inc
sti
xchg
jle
xor
movsb
add
stos
xlat
orb
iret
enter
add
cmpsb
in
adc
push
add
gs
adc
pop
lahf
ja
adc
fidivrs
daa
ret
xor
cmpsb
movsb
mov
roll
pop
mov
rcrb
mov
cmp
inc
clc
pop
jae
enter
out
imul
push
nop
xchg
std
or
jp
jmp
cwtl
mov
xor
cwtl
or
incl
loope
sti
inc
das
ret
xor
cmp
jns
mov
add
mov
xchg
ja
dec
mov
pop
mov
imul
jp
or
cmc
adc
sub
sub
dec
dec
pop
pop
leave
dec
movsl
pop
xchg
mov
mov
ret
es
lods
nop
pusha
icebp
lcall
rcrb
fdivrp
ficoms
mov
jg
fs
dec
mov
outsl
add
fistpl
jbe
call
pop
inc
mov
arpl
insb
or
cmp
ja
sbb
push
outsb
loop
mov
gs
dec
mov
xchg
std
inc
loopne
pop
loope
xchg
xor
cmp
mov
mov
mulb
sub
pop
jle
or
idiv
adc
hlt
shl
mov
test
pop
stos
hlt
lcall
sbb
lcall
jmp
mov
pop
dec
loop
jb
mov
pop
and
pop
lock
es
das
jge
orb
fidivrs
or
call
aad
mov
enter
push
inc
daa
add
nop
aad
mov
mov
in
jl
cmpl
and
cs
and
add
scas
cmpb
icebp
daa
sarb
jne
add
and
cmp
dec
jnp
pop
xor
jno
jge
push
dec
sbb
mov
sub
pop
data16
pushf
rclb
fs
addb
out
cmp
insb
popa
mov
aad
push
sbb
xor
mov
rolb
inc
adc
dec
jp
scas
push
pop
lds
or
loopne
mov
insb
inc
and
and
push
arpl
fldt
in
cmp
xor
data16
push
arpl
jp
inc
shlb
inc
xor
mov
inc
xchg
push
mov
cmp
lret
loopne
orb
jo
sahf
pushf
add
jnp
push
adc
das
sbb
mov
inc
mov
lahf
pop
cli
outsl
stc
aas
push
lahf
push
shl
adc
iret
test
cmc
mov
cli
rol
loopne
adc
xchg
pop
push
subb
pusha
lods
aam
xchg
mov
test
cmp
mov
lds
pop
mov
add
loopne
push
fadd
adc
rolb
xchg
pop
cmp
fiaddl
loopne
lret
add
adc
push
adc
jo
stos
xlat
inc
mov
ljmp
insl
inc
xlat
cmpsl
pop
push
push
xchg
jnp
jne
sbb
xchg
out
js
data16
mov
push
jno
in
pop
out
ret
cmc
pop
push
jno
add
mov
shl
mov
mov
dec
push
pop
dec
cltd
add
pop
jge
cmp
movsb
jl
int3
jno
dec
sub
dec
ss
sub
inc
mov
push
fnstenv
rcrb
sbb
sbb
jbe
decb
daa
loop
push
mov
arpl
jmp
sub
fidivs
push
inc
and
stos
incl
decl
xchg
push
inc
xlat
repz
push
rolb
mov
sbb
cmp
insl
xor
idiv
test
nop
xchg
push
sahf
push
mov
mov
enter
clc
add
dec
jae
jb
push
scas
rorl
mov
jbe
das
jno
cmpl
xlat
jle
mov
cmpsl
incb
dec
daa
inc
lds
and
cli
mov
test
cmp
xor
aaa
sbbl
adc
jle
and
mov
mov
add
push
sub
subl
adc
call
jo
jl
shr
xor
dec
les
shl
lcall
push
push
loop
xor
pop
sub
not
adc
cltd
aaa
or
lods
jbe
add
mov
jmp
jle
loope
dec
call
xchg
fcomp
aad
int3
add
cli
outsl
jg
loopne
pushf
icebp
movsb
sub
pop
push
pushf
in
inc
arpl
adc
arpl
cmp
test
fistpll
lret
and
add
xchg
int
xor
mov
pushf
jbe
push
xor
add
daa
das
shr
or
jae
mov
pop
xchg
adc
lods
pop
cmp
pop
pop
cwtl
xor
je
or
sub
pop
jno
jle
cwtl
loopne
xlat
pop
cld
dec
cmp
add
out
adc
leave
aas
xchg
ja
push
stos
js
mov
aas
push
lods
int3
inc
fistl
test
jbe
test
push
mov
jge
jg
push
adc
out
loope
mov
sbb
fcompl
jmp
pushf
lahf
xor
or
push
xchg
je
push
add
jp,pn
sbb
aas
ret
mov
mov
inc
imul
add
jo
inc
dec
mov
aaa
sub
ret
aas
add
mov
adc
in
xor
mov
and
and
lods
movsl
add
jne
mov
mov
and
pop
in
sbb
scas
jnp
xor
and
xlat
lret
dec
mov
xor
inc
dec
cmp
dec
aas
incb
mov
je
fs
xor
push
testb
add
out
rorl
hlt
jb
test
mov
imul
gs
push
insb
loope
call
push
push
jg
jbe
push
int3
lods
xchg
subb
xchg
add
mov
add
lock
cmc
adc
movaps
fwait
mov
jp
insb
in
adc
cmpsb
jbe
cmp
mov
and
imul
fcmovbe
mov
pop
cld
jle
data16
pop
xchg
add
push
jg
xor
and
loopne
test
push
stos
std
cli
sbb
aas
pop
push
dec
inc
jecxz
into
test
movsl
xchg
push
mov
push
ficomps
sbb
xchg
sub
jbe
pop
addr16
push
mov
sbb
or
or
adc
ffree
sbb
jmp
jle
mov
sbb
sub
sub
mov
ja
ret
rolb
scas
push
inc
cld
aaa
or
add
out
sub
push
mov
pop
repz
ds
pop
push
aas
call
movsb
xor
addr16
mov
addr16
popf
sub
inc
inc
inc
aaa
add
and
sbb
hlt
lahf
pop
push
jge
into
cmpsl
sbb
adc
push
push
dec
cmpb
incb
and
lcall
mov
ret
xor
hlt
aam
sub
call
sbb
icebp
and
fsub
shl
lret
add
sbb
dec
ret
inc
jnp
xchg
call
popf
imul
ds
mov
inc
and
jo
mov
scas
das
insl
pop
scas
sbb
mov
jg
movb
mov
js
mov
jl
stos
dec
les
aam
ss
mov
scas
mov
xor
sbb
sbb
add
fnstenv
test
cmp
cmpsl
xchg
cbtw
pop
adc
push
or
dec
inc
aad
int3
ret
leave
xor
rorl
mov
ficoml
shlb
imul
mov
loop
sbb
xor
add
popa
xor
sub
shrb
jg
jp
mov
pop
movsb
aam
jne
cmp
dec
inc
sar
or
and
nop
cltd
fcoml
pop
hlt
ret
test
pop
sbb
ret
mov
cld
push
cmpsb
shrb
mov
jo
or
sbb
mov
std
mov
xchg
mov
js
cmp
jae
mov
dec
loope
fisubl
repz
push
or
jge
inc
loopne
lock
into
jmp
mov
cmp
ja
push
adc
jp
and
and
ss
pop
or
fstl
std
sub
mov
xchg
mov
mov
adc
jbe
dec
adc
das
sub
mov
movb
in
cli
jg
lcall
ljmp
cmp
mov
mov
faddp
in
mov
popa
shlb
cmp
cli
inc
ret
or
mov
fimuls
jo
out
mov
or
mov
ss
movsb
mov
adc
pcmpeqb
xchg
pop
ret
xchg
and
out
ss
idiv
xchg
test
mov
enter
mov
cmc
aam
xor
push
cmp
dec
mov
leave
inc
or
ret
and
stc
stos
sub
push
ja
dec
xchg
jb
xor
ds
mov
or
shll
inc
inc
cmc
bound
dec
cltd
pop
push
sti
mov
andb
ss
cwtl
sbb
lds
ds
add
jne
aam
inc
or
shr
insl
dec
push
fisubrs
loopne
mov
inc
or
mov
ret
mov
adc
or
in
dec
mov
je
or
cmp
dec
push
mov
xor
push
out
fmuls
or
sar
rclb
cld
push
sbbl
cmp
insl
and
jp
sbb
mov
xchg
ret
pop
jg
xor
jb
add
dec
push
dec
lea
pop
stos
mov
dec
cmc
sbb
loope
mov
pop
adc
movsb
push
push
test
jne
out
fs
and
lods
pop
clc
andl
or
push
decl
mov
jge
xchg
fldcw
add
mov
inc
movd
push
dec
nop
fs
popa
cld
cli
notb
mov
or
add
stos
aaa
into
dec
add
aad
cld
push
pop
xor
or
iret
or
fs
xchg
cmc
jmp
fcmovbe
mov
jmp
mov
mov
inc
enter
mov
or
add
pop
mov
clc
inc
dec
test
lock
mov
mov
or
push
push
in
lret
dec
iret
mov
push
sbb
insb
not
add
incl
insl
je
push
add
lea
pop
xchg
pop
inc
push
into
lds
hlt
in
cmc
or
lock
hlt
arpl
sbb
das
aaa
sbb
mov
sub
push
call
incl
mov
fucomip
xchg
lret
sbbb
xchg
add
pop
xorb
call
in
mov
not
or
dec
lea
imul
repnz
xor
js
sbb
scas
mov
hlt
mov
decb
addr16
cltd
add
paddw
adc
cmp
test
aam
fs
cmpb
inc
sti
hlt
xchg
loopne
jbe
andl
dec
lcall
popf
xchg
xchg
in
shll
je
sahf
fwait
mov
test
mov
adc
shll
pop
rcrl
xor
test
movsb
dec
push
dec
add
sbbl
mov
in
ficoml
fs
int3
and
out
sbb
hlt
cmc
mov
mov
adc
call
insb
push
cmp
xlat
and
out
push
orb
in
fmull
cld
lds
jno
pop
mov
aad
in
inc
xchg
jp
sarl
dec
cmp
sbb
les
sbbb
sbb
notb
jbe
aaa
and
addl
and
ret
mov
cmp
cwtl
and
dec
daa
mov
mov
jno
add
xor
jmp
movsl
ljmp
ja
cmp
jo
pushf
imul
movsb
xor
popa
xor
mov
mov
or
negl
pop
out
adc
rorl
and
push
cld
xchg
or
jne
cs
movsb
imul
ret
out
call
je
add
add
shlb
adc
add
cmp
jae
mov
filds
mov
push
push
lods
push
mov
dec
jp
in
rorb
jbe
adc
mov
jbe
scas
adc
mov
and
sub
pop
popf
jno
dec
repnz
in
cmpsb
push
pop
xor
pop
sti
push
pusha
xor
sti
mov
movsb
cmp
sub
mov
and
lods
dec
add
repnz
icebp
add
mov
cs
int3
les
sbb
shl
lock
adc
in
mov
xchg
fdivr
or
dec
sbb
sub
bound
out
aam
testl
ret
cmp
jmp
cmp
dec
aam
cltd
pop
push
fs
xor
add
xchg
or
loopne
into
lea
pop
mov
mov
fldcw
jge
enter
js
and
cmp
xor
sbb
in
push
rorl
xchg
mov
outsb
cmp
dec
lds
adc
clc
fsts
stos
lods
pop
ffreep
test
mov
or
push
xchg
adc
mov
loopne
cmp
add
pop
pop
and
je
dec
sbb
pushf
inc
mov
and
pop
mov
inc
dec
sbb
pop
and
mov
mov
jg
lahf
mov
xchg
pusha
cwtl
xchg
xchg
imul
test
mov
pop
test
cmp
stc
xchg
mov
adc
idivl
rcll
vmread
sub
adc
or
shr
push
out
mov
sub
mull
mov
mov
pop
pop
mov
sub
sbb
loope
test
xor
mov
call
out
inc
inc
jge
cs
jecxz
inc
add
jl
lods
sub
and
adc
mov
out
arpl
push
jo
pop
repz
lea
mov
shlb
mov
add
hlt
sbb
sarb
loop
mov
aad
cmp
sbb
cmp
push
adc
jno
idiv
sti
or
inc
mov
outsl
dec
stos
sub
addr16
dec
lahf
ds
ret
in
imul
ss
inc
add
outsl
divb
add
rcrl
jp
adc
dec
and
lds
fs
insb
std
in
movsb
push
jnp
sbb
xor
les
adc
aad
ja
test
sub
inc
mov
sbb
adc
sub
and
je
mov
outsb
mov
stc
outsl
ret
test
bound
shll
xchg
ret
in
add
sbb
inc
seto
jg
mov
cmp
push
inc
ljmp
lock
add
jae
gs
mov
aam
lcall
xor
cmp
mov
je
fstps
push
sub
and
xchg
push
cmp
imul
lds
stos
test
pushf
lock
cmp
ds
push
sub
in
jo
in
mov
ja
add
call
cld
pusha
sub
stc
pusha
xchg
jge
aaa
rclb
loopne
adc
insb
jl
adc
adc
arpl
adc
loopne
xchg
ret
insl
xchg
push
lahf
les
push
cmpsl
scas
sahf
xor
xor
ss
inc
testb
rorb
add
mov
das
mov
int
insl
push
sbb
dec
push
add
std
jmp
stos
or
or
loopne
bound
jae
mov
int3
pop
jp
and
jl
and
xchg
xlat
mov
cmp
add
and
mov
dec
xor
xlat
add
xchg
push
ret
std
lahf
or
lea
sub
cmc
inc
sbb
stos
adc
rcl
dec
lods
add
out
jmp
mov
mov
and
adc
dec
test
jo
mov
mov
push
mov
xor
and
dec
add
xor
lcall
test
daa
mov
mov
jp
push
cmc
xchg
jg
pop
jae
loopne
jge
push
clc
adc
int
inc
call
sbb
push
shlb
repz
sbb
cmp
insl
adcb
xor
ror
add
daa
clc
adc
shlb
inc
bound
xorb
jecxz
cltd
jg
add
sbb
pop
jg
inc
pop
cmovb
mov
jae
aaa
pop
mov
mov
sbb
and
repz
xchg
lock
and
ret
sbb
inc
ss
mov
mov
jecxz
sub
ret
shrb
sbb
or
ss
mov
mov
or
aad
ficompl
xlat
pop
in
fistps
shll
inc
in
cmpb
push
cltd
sbb
and
and
and
push
int
mov
inc
add
les
add
jg
add
jb
xchg
icebp
shll
inc
cmp
and
decl
dec
filds
pop
push
add
nop
jle
xchg
cmp
lret
out
lods
mov
or
jae
and
icebp
repz
adc
mov
scas
jo
mov
ja
adc
pop
arpl
mov
ret
bound
je
out
sbb
cmc
mov
add
add
int
pop
pop
aaa
adc
cmpl
inc
jl
inc
ret
mov
in
jne
dec
push
inc
dec
bound
jae
int3
addl
cs
lock
pusha
mov
aaa
cmp
xchg
and
push
aaa
fstl
push
clc
insl
xchg
xor
mov
imul
add
and
cli
stos
jo
pushf
xor
sub
mov
mov
cli
mov
ret
popa
sbb
les
inc
jnp
mov
cli
imul
xor
js
iret
adc
sub
test
test
push
call
fidivrs
fimull
push
xchg
inc
popa
fstpl
bound
push
pop
pop
sbb
fstp
push
mov
rcrb
data16
cs
add
call
xorl
adc
jecxz
les
and
fsubrs
in
cli
mov
insl
popf
icebp
es
and
jbe
push
sbb
ret
jl
jne
jg
inc
mov
or
mov
inc
shlb
fsts
pop
shlb
out
ss
enter
add
pop
sbb
mov
fisubs
add
push
enter
fadd
movsl
nop
add
xlat
mov
insb
or
leave
mov
out
fistpll
fcomps
jns
mov
call
dec
shlb
pop
je
jnp
mov
lahf
in
push
aad
cmp
inc
cmp
adc
or
test
sbb
push
rcrb
mov
mov
push
push
mov
xchg
rcr
mov
mov
pop
mov
dec
lods
mov
sbb
iret
ljmp
mov
xor
sahf
test
ret
aas
jmp
mov
rcrl
adc
hlt
mov
movsl
adc
lods
ret
inc
add
dec
loop
or
mov
jp
cwtl
pop
cmp
jle
sub
push
iret
repnz
sbb
leave
out
xchg
std
shlb
shrb
mov
sub
push
pop
mov
shrb
mov
fwait
pop
dec
je
js
mov
sbb
iret
add
xchg
pop
jg
mov
repnz
out
insb
dec
mov
test
push
ficompl
icebp
arpl
add
addr16
jb
idiv
inc
push
cmp
jo
dec
stos
adc
add
hlt
xor
cmp
add
jle
pop
mov
xchg
loopne
mov
sahf
in
pop
push
or
es
dec
test
adc
add
insb
mov
test
xchg
daa
cmp
lods
sahf
outsl
cld
enter
mov
xor
inc
outsl
adc
dec
inc
mov
push
imul
cmpl
mov
xchg
and
mov
push
je
inc
lock
dec
or
push
aaa
adc
cli
rol
lock
mov
lcall
mov
mov
lret
inc
aad
shll
jo
xchg
jmp
xchg
clc
notl
jmp
xchg
inc
push
pop
add
sbbb
adc
sbb
adc
clc
pop
add
mov
or
and
icebp
andb
push
or
hlt
xlat
jp
add
sub
xchg
mov
popf
or
mov
sbb
mov
add
sahf
scas
icebp
and
adc
popf
pusha
push
sub
sbb
dec
inc
stos
add
adc
pop
push
enter
out
sahf
dec
decl
ret
stos
xor
daa
std
jno
jo
cmpsb
jmp
data16
xchg
scas
push
sub
mov
repnz
push
fs
pop
sub
mov
mov
cmp
pop
hlt
lods
xchg
test
cmp
push
mov
jp
push
push
nop
movsl
mov
inc
xchg
jg
into
repz
test
xor
push
loop
inc
insb
jb
adcl
fmull
dec
negl
fdivrs
test
mov
xor
call
loopne
call
inc
jmp
or
mov
in
jp
js
sbb
std
or
cli
push
push
dec
shrb
pop
movsb
adc
mov
inc
pop
mov
call
xchg
in
xor
js
ljmp
add
pop
xchg
test
cmp
das
ret
repz
add
loop
mov
test
ja
cmp
repz
add
mov
cwtl
rorb
add
pop
fcomps
ds
repz
movsb
nop
iret
mov
scas
divl
jge
outsb
mov
fsubrl
xor
bound
sbb
sub
dec
aaa
add
das
add
jle
movsl
fists
daa
push
push
xchg
xor
mov
sahf
xchg
je
cld
or
incb
call
mov
sub
int3
aas
mov
cmc
mov
jecxz
mov
mov
mov
inc
aad
and
fst
in
and
stos
inc
and
push
outsl
adc
mov
add
rcll
cmpsl
jnp
cmp
lcall
mov
pop
outsb
enter
cmpsl
mov
aaa
xor
outsb
repnz
pop
daa
ret
add
int3
pop
fistl
movsb
idiv
xchg
and
cmp
incb
adc
xchg
and
cmpsb
subb
jp
add
repz
aam
pop
add
adc
popf
filds
push
jmp
push
inc
push
and
push
sti
cmp
jecxz
inc
loope
lahf
scas
fsubs
lock
aam
inc
pop
cli
ret
aam
mov
xchg
cmp
sbb
rcrl
mov
idiv
push
cmp
jae
aam
mov
pop
xchg
xchg
je
lahf
mov
js
sbb
mov
fwait
int3
push
sbb
addb
cmp
ds
out
jmp
out
sbb
dec
jge
pop
jbe
jp
pop
inc
sbb
js
mov
dec
and
cmp
push
pop
inc
in
cs
es
inc
cmp
dec
sbb
addr16
je
add
scas
pusha
push
mov
sbb
inc
adc
js
push
cld
dec
decl
add
jle
call
inc
pop
push
popf
das
jbe
sub
push
popl
jp
sbb
jb
shll
lret
pop
push
sysenter
add
pop
jo
mov
out
push
inc
ljmp
adc
pushl
jecxz
std
jecxz
mov
gs
sbb
pop
enter
jg
pop
xor
adc
xor
mov
loop
add
movsl
pop
loope
pop
ss
add
arpl
ret
cs
ss
in
adc
shlb
sub
inc
and
rdtsc
cmp
add
test
sub
mov
push
push
mov
out
cmp
cmp
pop
pop
xlat
mov
dec
gs
mov
orb
lcall
stos
mov
rorl
push
jo
test
and
loopne
push
popf
add
aam
and
cli
push
cld
ficoml
scas
push
push
adc
xchg
cmpsb
jnp
pusha
data16
aas
mov
push
rol
pop
jae
aas
push
das
adc
sub
adc
push
into
and
adc
cmpsl
sbb
mov
or
addr16
orl
sbb
xor
lods
in
add
xchg
add
add
aas
and
push
dec
sbb
push
or
sub
pusha
repnz
loop
roll
or
jnp
xchg
pop
xor
mov
shlb
jge
inc
out
add
loop
mov
mov
mov
fdivr
xor
ret
ret
fdivrp
fadd
pushf
inc
sub
loope
movb
ret
sahf
mov
xchg
push
push
cltd
cli
mov
lret
adcb
xor
pop
popf
push
adc
cmp
and
loope
sahf
movsb
mov
mov
sub
add
mov
pop
rcl
dec
sbb
sub
pop
mov
push
cs
clc
into
jmp
mov
mov
mov
pop
sbb
mov
popf
icebp
cmp
rolb
mov
test
cmp
mov
out
push
mov
test
cwtl
in
cltd
or
fisttpll
fisubl
rcll
in
mov
mov
movsl
add
or
inc
in
sbb
jmp
decl
dec
push
sub
scas
cmc
outsl
call
scas
pushf
sub
adc
ja
loop
and
or
pop
mov
stc
ret
and
mov
pop
add
or
lret
add
das
add
add
inc
add
decl
inc
jnp
ja
dec
int
mov
rolb
jo
adc
sbb
call
je
dec
mov
dec
pop
pop
push
xchg
daa
lods
inc
test
and
push
sbb
lret
mov
enter
pusha
repz
sahf
in
pop
aaa
add
and
mov
adc
jg
shrl
or
mov
clc
adc
mov
sbb
aas
xor
je
and
cmc
cli
adc
add
push
push
int3
and
and
in
sub
scas
pushf
fisubrs
decb
add
mov
imul
std
mov
pop
lcall
lods
movsb
or
xor
test
clc
pop
mov
jle
pushf
jno
ficoms
mov
ret
adc
test
cmp
fsubrs
push
call
jp
jp
or
inc
loope
fmull
or
xchg
aas
push
dec
insb
xorl
ljmp
insb
jecxz
lret
inc
cld
mov
lret
pop
push
cmp
jl
add
dec
call
orl
jge
jmp
stos
dec
cmp
gs
pop
lret
adc
out
sbb
jecxz
pop
sbb
lret
push
add
ret
and
mov
scas
mov
jg
stos
and
insb
cmc
dec
xor
pop
or
sub
pop
push
jb
inc
lods
push
lret
out
cs
aaa
pop
mov
jle
adc
mov
ds
xor
jne
cli
fidivs
aad
push
lcall
adc
jecxz
movb
sub
int3
fadd
dec
inc
sbb
lods
jb
aas
sub
cmpsl
popa
dec
sbb
add
lds
push
push
mov
adc
pop
into
enter
push
jl
clc
cli
xchg
lock
mov
xor
sarl
pop
jbe
or
ffreep
add
repz
mov
cmp
mov
lods
adc
xchg
popa
outsb
out
pop
arpl
push
fwait
xchg
mov
pop
push
dec
jecxz
add
and
in
aad
mov
push
cmpsl
and
inc
dec
movsb
js
xor
cld
xor
out
aam
mov
addr16
jge
fimull
cmp
jnp
add
push
imull
jecxz
xchg
mov
pop
in
cmpb
xor
lock
clc
mov
imul
lret
outsb
imul
in
jbe
add
mov
lds
mov
shll
repnz
sahf
mov
add
mov
mov
jp
ret
mov
adc
pop
inc
popa
mov
enter
xor
sbb
push
fcompl
into
ljmp
xchg
in
fdiv
or
arpl
bound
aas
insb
cld
test
dec
aaa
mov
fcmovu
xchg
pop
dec
pop
orl
div
addr16
lods
movsb
or
push
int3
hlt
mov
fs
lds
pop
jb
daa
cmc
dec
lret
jne
xchg
roll
xchg
adc
adc
sub
lret
push
sub
jle
cmp
mov
sub
sbb
pop
cmp
clc
push
sbb
xchg
sub
pop
rolb
xchg
mov
xchg
or
mov
movsb
or
mov
clc
daa
add
cmp
fs
scas
lcall
and
neg
push
sbb
add
mov
or
mov
iret
int3
push
test
cmp
xchg
ds
pop
aas
rolb
or
inc
adc
test
repz
adc
push
add
mov
xchg
jne
add
dec
es
add
aam
arpl
push
ret
movsl
das
cs
lahf
push
xchg
push
lret
test
test
cli
cmpsl
dec
lret
jle
or
jl
jmp
daa
xor
add
addb
rolb
push
loopne
mov
adc
sbb
xchg
or
int3
daa
ljmp
icebp
das
add
inc
add
in
jno
scas
jnp
test
pusha
push
inc
cmp
movsl
and
push
in
mov
xchg
and
adc
lds
mov
cmp
subb
imul
test
inc
xchg
rolb
jnp
jne
decl
rorl
xor
fldl
adc
inc
or
add
xchg
sub
std
scas
sbb
ret
imul
jg
idivb
movsl
jns
loopne
push
sbb
fimull
push
add
or
pushf
mov
testl
pop
leave
xor
fdivs
add
sahf
les
jp
lock
outsb
jo
push
cwtl
jne
mov
mov
adc
loop
js
jp
dec
mov
xor
es
add
scas
mov
jno
leave
rcrl
aad
sub
movsl
push
int
loopne
xor
adc
jbe
inc
lock
cmp
out
sbb
shlb
push
adc
push
scas
icebp
sbb
cmp
cs
jmp
lods
dec
cmpsl
mov
add
inc
dec
sti
inc
sarb
sbb
cmp
mov
fcmovbe
je
out
dec
xchg
bound
jg
cmp
mov
add
js
dec
add
cmp
mov
jnp
mov
jg
adc
mov
jmp
addl
arpl
lods
mov
xchg
mov
add
jle
aaa
icebp
pop
jg
xchg
je
or
adc
xor
aaa
adc
and
mov
je
xchg
test
movsw
sub
mov
jle
mov
js
push
and
pop
mov
mov
mov
jmp
js
in
dec
cmp
add
inc
bound
int3
sbb
stos
dec
ljmp
scas
mov
clc
mov
lock
loopne
pop
mov
mov
in
and
cmp
push
test
or
testb
sbb
pop
cmp
mov
shlb
sbb
sub
sarb
mov
outsl
loop
aas
scas
out
add
insb
loope
mov
pop
repnz
or
cltd
aad
sub
and
cli
and
mov
loop
mov
xor
dec
pushf
jno
cmp
inc
jge
inc
ja
mov
cmp
lock
pop
adcl
xor
incb
mov
rcrb
je
mov
loope
sbb
call
adc
aas
sbb
insl
sub
and
stos
add
mov
clc
imul
add
icebp
xchg
inc
push
sub
lret
push
adc
aam
gs
daa
out
aam
add
jno
add
out
inc
jge
xor
dec
xchg
ret
ficoml
and
push
mov
pop
iret
fidivrl
jg
add
dec
add
mov
adc
data16
xor
subb
pusha
adc
sub
jl
rorl
jbe,pt
insb
js
or
test
test
ret
imul
lds
in
out
or
push
outsl
add
enter
test
pop
lock
ret
rcr
mov
insb
mov
sub
cld
mov
jne
and
push
add
enter
inc
sbb
mov
lahf
mov
jbe
pusha
out
dec
rcrb
sub
or
push
popa
loopne
call
pop
hlt
xchg
sbb
mov
xchg
and
push
inc
mov
mov
inc
jns
sar
movb
mov
cmp
out
out
cmp
mov
mov
mov
pop
loop
jg
pusha
add
sub
xor
xchg
rcrl
sub
and
pop
sbb
add
push
in
mov
test
dec
mov
pop
loopne
sub
std
loopne
rorl
mov
inc
add
in
movsl
pop
adc
cmc
push
shlb
jg
lods
cs
out
cmpsb
rcll
sbb
scas
push
adcl
push
jb
push
js
clc
or
push
pop
shl
bound
mov
in
sub
xchg
mov
daa
pop
notl
scas
loopne
jp
outsb
sbb
push
sbb
cmp
scas
push
push
mov
test
jl
sti
mov
push
mov
clc
sbb
dec
fsubrl
mov
inc
in
scas
mov
pop
pop
mov
xchg
xor
push
test
mov
mov
and
jae
pop
mov
decl
je
and
test
sbb
sbb
daa
sbb
ljmp
inc
test
adc
xlat
and
xor
adcl
shr
xchg
ret
mov
sahf
pop
jmp
cwtl
dec
adc
push
cs
imul
sub
mov
fistps
xor
push
jns
cmpl
mov
push
fildll
adc
cmp
pop
data16
lds
adc
sbb
lea
add
je
or
loope
hlt
cli
fiadds
push
out
lcall
xor
ja
and
jp
scas
cmpb
arpl
out
imul
jo
ljmp
arpl
mov
loop
insl
cmpsl
imul
add
jp
lock
mov
mov
aam
clc
pushf
loop
pushl
add
fisttps
ljmp
pusha
imul
clc
and
insb
repnz
or
jecxz
push
cmp
xor
or
cmpsb
xor
or
xor
add
push
xor
mov
and
enter
dec
insl
hlt
mov
mov
loopne
push
out
in
popa
mov
cld
bound
dec
cmc
sar
mov
mov
pop
and
bound
aam
mov
icebp
or
jmp
add
test
pop
lods
add
pop
in
push
sub
sub
or
push
mov
mov
push
push
sub
xchg
loope
xchg
test
sbbl
cltd
int3
push
sbb
imul
cmp
rclb
sbb
pminub
int3
outsl
rclb
js
dec
push
and
cld
addr16
jne
pushf
out
xchg
imul
cltd
cmp
jbe,pn
xchg
cmp
test
imul
lret
out
add
sarb
popf
sbb
mov
cmp
pop
add
push
inc
and
es
daa
rorb
hlt
and
pop
cld
mov
push
call
xchg
jecxz
jne
jg
pop
jg
push
pop
rclb
add
cmp
pop
test
out
pop
notb
inc
sti
mov
jmp
pop
jns
or
ss
mov
repnz
pop
ss
nopl
es
jnp
hlt
adc
jmp
cwtl
mov
xlat
xor
cmp
mov
pop
jge
sbb
xor
or
ret
movb
add
dec
sub
mov
sbb
sbb
add
mov
vcvtsi2sdl
adcb
sub
lods
mov
loopne
inc
add
mov
add
call
lea
and
xor
or
jo
jmp
jne
add
out
into
cmp
adc
inc
pop
test
movsb
ja
mov
mov
mov
or
push
gs
add
test
shlb
setnp
js
scas
sub
sub
jb
pop
and
or
jge
call
sti
cwtl
mov
ljmp
rcrl
jp
add
adc
arpl
mov
mov
out
xrelease
je
icebp
push
jb
aam
and
dec
ret
add
mov
pop
loope
mov
mull
andl
int
sbb
addr16
enter
mov
jnp
dec
scas
and
stc
inc
insb
inc
pusha
nop
mov
adc
mov
loope
xchg
or
call
movsb
lcall
or
xchg
mov
cld
js
nop
pop
add
jbe
jl
jb
loope
shufps
aaa
das
jge
add
xor
mov
aas
js
loopne
inc
jg
push
mov
or
lea
mov
inc
lea
mov
push
xorl
lods
and
imul
mov
xchg
inc
test
mov
or
pop
mov
ljmp
dec
dec
adc
movsb
mov
fldl
xchg
scas
pop
movsl
xor
push
and
test
cmp
loop
stos
cmpsb
cmpl
sub
cwtl
xchg
sub
popf
push
rcrb
or
inc
out
popf
loopne
cmp
lock
loopne
call
outsb
imul
out
repnz
mov
jno
dec
fs
cli
shl
sbb
test
add
pop
add
lds
shrl
fs
call
jne
xor
pop
loopne
add
and
push
outsb
outsb
ret
je
push
sub
fcmovu
loope
and
add
test
imul
mov
lods
push
xor
in
adc
test
shrb
gs
pop
xchg
rcrl
out
out
ss
call
lahf
cli
cmpl
das
loopne
fnsave
idivl
push
dec
mov
fst
insl
pop
pusha
and
xchg
lcall
negl
sbb
mov
pop
ds
xchg
jecxz
or
push
enter
out
push
mov
inc
ret
dec
pop
cld
stos
aaa
and
pop
je
xchg
jo
jo
adc
mov
dec
cmp
rcrb
push
push
mov
daa
movsl
lret
shrb
and
fs
inc
dec
push
adc
ja
lods
test
adc
ret
test
mov
mov
lcall
adc
dec
adc
repz
ret
xchg
hlt
and
frstor
aaa
sbb
test
cmpsl
xlat
pop
inc
pop
adc
movsb
sbbl
sub
call
jl
cmpsb
outsl
cmp
and
adc
cwtl
cltd
ret
lods
lods
and
outsb
dec
js
fsts
ljmp
cld
push
push
push
jmp
sbb
int
imul
stos
vcvtuqq2psy
push
sbb
add
imul
lock
lret
xlat
je
adc
cmpsb
std
sti
jne
cmp
ds
mov
adc
xchg
and
dec
inc
pop
out
inc
sbb
pop
push
out
cmp
incl
inc
jmp
inc
and
call
and
test
mov
sub
jo
jnp
pop
movsl
arpl
arpl
push
sub
lods
xor
hlt
xor
sbb
cmpsl
aam
xchg
loop
sti
repz
or
icebp
ljmp
addl
dec
das
jo
adc
cmp
dec
and
lock
movsl
cmpsl
inc
mov
xchg
add
ret
xchg
add
arpl
js
sub
and
popa
int
push
rol
dec
inc
bound
add
jae
rcrl
in
xchg
int
inc
ja
inc
push
ret
inc
pop
mov
push
and
push
ss
jne
jo
in
outsl
inc
loope
push
jg
aas
insb
sub
xchg
insl
xor
movsl
mov
addr16
cmp
pusha
fcomps
sbb
adc
xor
mov
sbb
cmc
pop
jp
lods
stos
xchg
mov
test
jno
mov
popf
out
dec
bound
std
inc
mov
cmp
mov
lods
inc
jge
push
std
sub
sbbl
shld
or
mov
inc
addr16
push
add
ja
sub
cmp
mov
push
lea
mov
pop
dec
test
adc
stos
xchg
dec
adcb
adc
repnz
xchg
pop
mov
jmp
fmuls
lock
add
sahf
sbb
in
pop
je
das
jno
dec
and
repnz
jl
out
aad
cli
lea
cmc
pop
sarb
lods
cwtl
fs
or
sbb
addb
add
in
jmp
sbb
out
fdivs
sub
fdivrs
mov
addr16
mov
ret
pushf
jle
inc
sbb
add
pop
loope
xlat
fildl
js
sub
or
notb
xlat
scas
sbbb
dec
sub
scas
sbb
xlat
dec
divb
and
cs
mov
xor
sub
sub
out
rorb
mov
imul
shlb
imul
mov
ljmp
and
mov
cmp
and
xor
imul
jae
in
push
add
inc
into
add
jb
inc
popa
dec
inc
aad
jl
cmp
jnp
subl
cli
xchg
ret
adc
testb
mov
fstpl
adc
cmp
jmp
push
je
aaa
mov
call
lea
jp
mov
add
ljmp
insl
sub
xor
adc
int
push
and
imul
jb
rorl
out
divl
leave
stc
bound
sbb
add
das
cltd
fwait
or
cltd
aas
xor
clc
movsb
ljmp
xlat
mov
flds
cmp
test
arpl
mov
aaa
mov
rcl
mov
mov
push
loopne
insb
add
test
mov
jbe
in
jp
incl
pushf
add
adc
pop
fstpt
test
cmp
ret
or
and
push
mov
mov
cmp
bound
sub
lahf
sub
sub
popa
movl
push
scas
sbb
jmp
or
shrb
lcall
mov
out
pop
ret
arpl
rcrb
loopne
mov
in
mulb
fdivr
subl
lcall
xchg
int3
add
dec
loop
aas
xorb
or
or
scas
add
leave
nop
sub
pop
or
daa
mov
rorb
push
mov
cmp
scas
mov
adc
jp
xchg
push
xor
lret
rcl
pop
push
or
mov
daa
sbb
xor
rolb
ljmp
mov
popa
jecxz
and
das
mov
fstpl
add
jl
shrb
mov
jp
inc
cli
inc
movsl
mul
rorl
sub
add
jo
lret
adc
call
lea
xchg
push
sub
ret
stos
jg
cmp
orb
and
in
andb
daa
sbb
mov
push
sub
outsl
xchg
push
das
jo
or
sarl
pushf
lahf
scas
add
add
sarb
mov
movsb
popa
jmp
sub
shl
add
fadd
das
inc
sbb
bound
xchg
sbb
jl
jno
repnz
std
das
add
inc
push
add
xor
push
mov
inc
cmpsl
adc
rol
sbb
or
push
fwait
das
loopne
adc
cmp
negb
int
pop
pop
mov
xchg
mov
movsb
adc
test
iret
lea
pop
sti
ret
cmp
push
mov
cmp
fbstp
or
push
sub
addl
es
adc
pop
pop
pop
outsb
test
add
mov
cmp
inc
push
mov
pop
int3
lock
adc
inc
imul
dec
cld
cmp
pop
cmp
pop
mov
xchg
enter
inc
iret
dec
mov
addr16
pop
lods
stos
push
push
repz
sub
jbe
or
aad
daa
sub
js
cmp
cmpsl
insl
nop
push
cmp
jge
push
push
inc
lret
jae
dec
lods
js
outsb
jne
sub
xchg
daa
inc
das
dec
hlt
pop
divl
aad
mov
xor
pop
push
adc
jp
or
dec
mov
rorb
mov
sub
jecxz
pop
and
jne
mov
lods
andl
push
jmp
fucomip
push
sub
push
or
sbb
enter
pop
and
adc
pop
loope
clc
and
and
lret
pop
mov
cli
sub
pushf
jge
dec
mov
imul
adc
mov
sbb
aam
cli
sbb
inc
sub
xor
add
aam
out
stc
movsl
sbb
sti
sbb
fsubrl
adc
cmpsb
jnp
xor
cmpl
dec
aas
idiv
inc
in
jo
fildl
dec
sbb
pop
jmp
mov
push
aaa
negl
stc
sbb
adc
bnd
daa
pushf
ljmp
rolb
inc
mov
sub
sbb
cmp
clc
xchg
cld
or
xor
mov
mov
cmpb
ficoms
jp
pop
bound
sbb
add
xchg
das
mov
lcall
mov
and
xor
dec
dec
cmp
add
pop
push
push
inc
xor
inc
mov
mov
les
insl
sbb
clc
or
ret
or
push
fildll
push
rol
add
hlt
cmpb
push
hlt
cmp
add
cmpsb
mov
inc
inc
mov
mov
xor
push
outsb
pop
cmp
pop
int3
pop
jl
add
pop
or
nop
xor
sbb
jne
movsl
mul
push
bound
pop
aaa
outsb
push
fidivrs
xchg
in
outsl
popf
bts
imul
out
mov
jae
lock
mov
inc
mov
jmp
mov
cmp
dec
ja
jge
adc
lcall
dec
mov
imul
mov
aas
mov
jmp
cmp
push
sub
shlb
aad
int3
xor
int3
or
ret
adc
sub
mov
mov
stc
mov
push
loopne
xchg
ljmp
xchg
jo
push
inc
jl
mov
cmpsb
sbb
mov
cmpsb
mov
pmaxsw
daa
sub
jp
ds
jle
test
cmp
pop
mov
cmp
cli
or
sub
ficoml
push
and
andl
shrb
mov
push
ret
std
inc
lods
cmpl
xchg
icebp
rclb
sarl
clc
mov
das
push
enter
lock
add
or
mov
inc
xor
dec
or
mov
lcall
jo
cmp
clc
xchg
jmp
into
mov
iret
jb
pop
cmp
sub
fcoms
in
pop
xchg
jl
mov
ss
mov
int
sete
dec
mov
test
push
xor
dec
and
jg
or
push
fnstsw
enter
pop
push
aaa
pushf
js
inc
pop
mov
fnstsw
cmp
imul
pop
outsb
xor
or
out
cwtl
data16
jmp
dec
cltd
push
or
jne
xchg
jmp
nop
sti
inc
jne
lds
fisubrl
and
push
push
lock
pop
sbb
inc
sub
ror
loop
lret
mov
sub
jne,pn
mov
gs
sbb
dec
cwtl
pop
or
test
in
add
push
xor
shrl
pop
xor
xchg
enter
xor
outsb
jb
shlb
push
scas
push
push
cmp
negb
adc
mov
xor
mov
and
mov
iret
and
mov
fimuls
jo
ret
pop
jne
cmp
les
js
mov
pop
testl
std
mov
mov
xor
cmp
and
rclb
cwtl
add
or
or
das
mov
jecxz
cwtl
mov
sbb
leave
or
cli
jnp
loopne
mov
not
test
rcrb
push
repz
lcall
jecxz
fwait
pusha
push
sub
inc
jp
aas
aas
or
mov
mov
fmull
pop
shlb
dec
lahf
pop
insb
js
push
pop
adc
stos
leave
sbb
scas
push
insb
adc
mov
xor
mov
sbb
in
das
jo
jl
jecxz
subl
sub
mov
mov
mov
pop
or
add
add
testl
xor
loopne
dec
push
mov
cli
insl
mov
aaa
dec
inc
inc
pop
movsb
scas
jb
clc
mov
les
add
adc
mov
sbb
pop
cmp
mov
js
sbb
outsb
aad
sub
add
or
or
sbb
loop
adc
inc
pop
mov
pop
mov
push
add
jle
pop
into
sbb
je
or
push
ss
xchg
jno
adcb
cmp
cwtl
mov
mov
stc
cmpsb
push
mov
adc
mov
shrb
popa
and
jp
add
sbb
push
pusha
js
xchg
push
movsl
cmp
push
or
test
lock
test
mov
adc
pop
cmp
xor
inc
adcl
and
sbb
mov
and
mov
inc
or
xorb
scas
cs
clc
dec
or
push
aas
push
in
adc
scas
cmpl
pop
or
mov
test
jne
or
out
sbb
insb
sbb
imul
sbb
dec
pushf
jae
pop
cmovb
pop
jbe
push
mov
ret
movsb
pop
xchg
std
loop
clc
ret
enter
xlat
push
clc
jg
xor
roll
and
mov
movsb
std
int3
lret
jge
xlat
cmp
in
mov
and
pop
arpl
dec
sbb
jp
mov
push
mov
scas
inc
push
pop
lods
jle
mov
cmpb
test
xor
aaa
clc
xor
push
push
mov
nop
lret
lock
lret
sub
add
sub
cli
cwtl
dec
test
jnp
and
pushf
mov
pop
pop
stos
dec
rolb
sub
mov
sahf
mov
or
inc
pop
loop
add
xor
ljmp
icebp
ss
test
dec
sub
dec
add
push
push
in
xchg
adc
ret
jl,pn
mov
add
addr16
or
push
stc
hlt
mov
xor
ret
div
sbb
enter
add
push
cmp
dec
inc
outsl
cmp
sub
cmp
mov
shrl
lds
push
sbb
insb
lcall
mov
insl
lcall
insb
leave
and
adc
shll
stos
das
in
popa
scas
aam
daa
mov
adc
inc
or
mov
cmc
xor
inc
adcb
jl
adc
ds
sub
lcall
fs
push
cltd
xor
test
repz
sbb
clc
outsb
inc
test
scas
test
pop
incl
lahf
lock
call
cwtl
cmp
mov
test
icebp
adc
or
adc
cmpsb
jg
sub
pushf
insl
test
xor
mov
lock
lds
aam
pop
sub
and
sbbb
sti
sub
lcall
xchg
push
or
repz
sbb
xchg
pop
xor
push
outsl
xchg
dec
mov
cmp
ret
hlt
inc
cmp
adc
outsl
and
add
std
int
cmp
adcl
mov
icebp
mov
iret
loopne
pop
adc
popa
mov
cmc
cmp
or
dec
into
add
mov
inc
mov
and
call
sub
fmul
add
loopne
or
jo
cmp
lcall
andb
cmp
dec
jl
ret
call
xchg
mov
fdivl
or
fildl
ffree
in
xlat
test
mov
out
inc
jmp
jl
rcr
add
ljmp
push
in
cld
push
cmp
bound
sub
fwait
pop
mov
inc
pop
mull
push
hlt
test
cmp
inc
inc
fnstcw
adc
cmpsb
mov
test
inc
enter
mov
mov
push
and
jno
add
jp
mov
rolb
call
cld
incl
lret
mov
xchg
mov
pop
test
and
lods
lcall
mov
insb
roll
in
insb
repnz
inc
fdivs
std
lock
and
dec
pop
subl
mov
addr16
bound
cmp
xchg
daa
stos
add
sub
jg
jb
enter
xchg
inc
mov
push
scas
xor
adc
or
fwait
test
adc
ds
mov
sbb
lahf
cmp
add
xor
dec
cmp
cmp
jbe
mov
mov
or
fwait
decl
adc
pushl
mov
xchg
out
mov
xor
fidivrl
aaa
xchg
outsl
jno
call
lock
mov
cmp
mov
or
and
xor
xor
pop
jnp
call
in
inc
add
shll
loope
xor
dec
rorl
cmp
clc
jmp
push
push
xchg
add
cld
loopne
bnd
repnz
popa
leave
push
test
add
xchg
jne
add
xchg
and
xchg
popa
test
xor
sub
sbb
push
pusha
cmp
mov
xchg
jbe
add
xchg
pop
subl
insb
push
fists
mov
orl
push
jle
mov
push
push
mov
push
repnz
pop
pop
hlt
pop
xor
js
test
push
insl
cmp
inc
inc
and
mov
sbb
fldt
clc
sbb
xor
pop
sbb
in
pop
fiadds
in
movsb
mov
inc
adc
dec
ljmp
push
sahf
imul
mov
addl
pop
scas
movsl
call
mov
clc
cwtl
les
test
ret
int
inc
jle
loope
or
je
inc
push
sbb
sbb
bound
pop
insl
orl
cmp
js
cmp
jle
sub
cmpsl
out
popa
sub
mov
lock
jl
dec
mov
mov
cmpsb
push
mov
dec
cmpsb
sti
popf
cmc
scas
pop
outsb
rcl
loopne
es
fsts
and
aam
leavew
lods
dec
lds
mov
in
aam
loopne
mov
sub
imul
cltd
jb
mov
nop
cwtl
cmp
shl
leave
xor
push
mov
loop
xchg
sub
sbb
cwtl
ret
jo
xchg
xchg
jmp
adcb
ffree
jns
iret
in
or
xor
and
mov
cmpsb
push
mov
sbbl
push
xchg
add
shl
and
dec
xlat
mov
and
daa
or
mov
adc
mov
dec
and
mov
xor
mov
imul
lret
mov
dec
adc
test
mov
fidivl
ret
js
stos
rcr
mov
movsl
shrb
adc
enter
xchg
jp
pop
adc
cmp
pop
and
mov
fcomps
inc
les
pushl
push
rcrb
mov
xchg
sbb
mov
pushf
ja
mov
or
rcll
pop
pop
push
cmpb
xlat
push
sub
stos
sahf
add
push
xchg
pop
push
dec
shrl
fwait
rorb
cmp
ss
js
and
pop
lfs
push
test
inc
cld
test
xor
or
out
xor
iret
inc
push
ja
aad
subl
ret
dec
and
inc
pushf
mov
sbb
xchg
cmp
cmpsl
pushl
push
push
jno
ret
mov
fmull
mov
pop
sbb
inc
mov
call
fwait
ljmp
jne
xor
test
ficomps
add
push
adc
call
add
sti
lcall
and
ret
out
mov
or
repnz
fs
or
or
jne
or
jle
cli
mov
cmp
push
rcrb
sbb
and
scas
mov
mov
imul
cmp
mov
fnsave
mov
divps
popf
scas
leave
jne
mov
push
jmp
inc
mov
xchg
lret
fdivrs
gs
leave
icebp
add
js
mov
out
and
xor
sbb
fwait
daa
lods
fdivrs
adc
movl
inc
cwtl
ficompl
out
push
loop
sub
push
scas
mov
rorl
sarl
roll
es
adc
pop
mov
mov
mov
inc
stc
or
outsb
adc
mov
pusha
adc
jo
jns
mov
addr16
dec
mov
mov
mov
arpl
std
out
fadds
pop
adc
fwait
pusha
cltd
insb
mov
dec
mov
and
decl
cld
sub
ret
jns
ja
xchg
xchg
sahf
push
cli
or
jnp
push
fiaddl
jnp
lods
imul
in
cmp
dec
xlat
mov
aas
adc
sub
sub
jnp
js
sub
clc
pop
or
scas
pop
dec
lock
inc
aas
pop
stc
sarb
mov
ds
mov
or
jnp
cmp
add
lea
and
orb
dec
in
leave
jle
sbb
dec
or
mov
aad
xor
ja
and
dec
inc
fs
mov
loope
loopne
lahf
addr16
test
fmul
sub
push
lret
xchg
inc
fsubrl
fcoml
pop
lock
pop
lods
sbb
imulb
insl
fiadds
decl
jae
movl
int
sbb
inc
ret
loope
push
inc
adcl
cmpsb
ss
jle
cmc
or
dec
icebp
or
shrl
xchg
std
aam
ja,pt
int3
enter
aad
test
mulb
ds
jp
sbb
add
push
push
cmp
sahf
imul
add
rorb
incl
push
fiaddl
push
and
sbb
jp
lods
lret
shlb
xor
pop
adc
dec
fsubrs
ljmp
xor
repnz
enter
cmp
jecxz
and
or
lock
repnz
mov
and
stos
xchg
mov
adc
addr16
and
pop
cld
js
aad
pop
push
pop
in
cmp
pop
in
mov
push
adc
pop
shlb
sbb
mov
jo
aad
test
std
in
dec
mov
push
scas
sbb
or
andl
daa
fstl
test
cmp
adc
js
jp
adc
or
aas
andl
pop
inc
fsubrs
aam
pop
pop
out
cli
test
cmpsb
push
inc
dec
sarl
adc
dec
xor
daa
stos
dec
movsb
in
inc
daa
inc
inc
jo
hlt
adc
add
pop
fs
sbb
test
lods
or
icebp
scas
jo
cltd
push
sbb
cli
insb
test
aam
push
xchg
loope
jge
mov
mov
add
jns
mov
orb
jle
fmuls
jnp
dec
pop
jmp
or
jge
xchg
fdivrs
bnd
aas
aam
imul
cmpsb
adc
ficoml
jne
mov
xchg
xchg
xchg
mov
pop
or
loop
aaa
inc
mov
test
fdivs
mov
pop
ror
push
pushf
push
inc
add
fbld
mov
sbbl
or
in
jle
or
jg
popf
movsb
mov
mov
stos
loopne
leave
std
rcl
sbb
shll
jg
das
out
or
addr16
loop
jle
adc
cli
xchg
mov
ret
adc
xchg
stos
xchg
clc
push
sbb
xor
out
sbb
jo
jnp
jg
bound
hlt
dec
aad
pop
clc
mov
outsl
in
andl
xor
xchg
ds
sbb
clc
jmp
cld
mov
add
adcb
pop
mov
dec
push
and
shll
mov
jbe
movsb
mov
pop
pushf
aam
or
add
sbb
sub
arpl
or
xchg
pop
push
sbb
pop
add
push
add
int
or
mov
pushf
sahf
jp
inc
faddl
cmp
mov
sub
cmpsb
arpl
leave
into
sub
repz
mov
inc
add
lock
mov
push
lods
push
aad
cld
jo
loope
pop
or
out
mov
push
xor
add
xchg
sub
movsb
clc
sbb
outsb
pop
jno
mov
movsl
push
dec
inc
dec
je
dec
push
ja
jbe
sub
inc
or
or
mov
or
icebp
or
adc
data16
test
adc
stos
adc
js
add
xlat
mov
fcomi
push
xor
dec
jmp
inc
clc
push
dec
mov
call
inc
aaa
sub
out
popf
int3
pop
fdivrs
jle
xlat
loop
je
inc
imul
fwait
scas
cli
pusha
and
fisubrl
cmc
pop
das
test
popf
in
inc
jo
call
push
adc
cmp
aam
int
mov
jbe
scas
mov
test
cmpsb
jge
and
test
and
sahf
add
icebp
test
mov
adc
pop
xor
into
gs
nop
test
pusha
sahf
rcrl
ljmp
inc
add
mov
icebp
lock
les
pop
mov
adc
dec
mov
mov
cmp
mov
jb
adc
add
and
cld
adc
dec
xchg
and
rol
add
dec
addr16
jnp
mov
insb
jbe
daa
or
adc
xor
add
add
cli
adc
or
inc
mov
mov
leave
mov
mov
cli
pop
cli
aaa
add
test
pop
enter
icebp
inc
jmp
mov
pop
insb
sarb
mov
sbb
movsb
cmp
lds
fisubl
icebp
cmp
test
or
loope
loopne
popf
jge
mov
push
fimull
or
adc
orl
dec
xor
pop
sub
mov
fucomi
adc
jae
push
or
and
and
aad
std
fsubrs
sar
std
daa
jp
insb
jne
mov
clc
jne
hlt
test
pop
mov
dec
ret
push
fnstenv
sbbl
sar
imul
ret
inc
xchg
mov
cmp
sarb
xor
cmp
adc
cmpsb
mov
jge
jecxz
sub
sbbb
ds
ljmp
aas
mov
or
mov
cli
adc
sbb
rcrb
shl
les
inc
bound
and
push
movb
call
inc
fimuls
push
lret
das
call
insb
and
push
je
outsb
scas
pop
cli
movsb
push
dec
fcmovnu
enter
jl
je
xchg
sbb
daa
adc
or
adc
movd
inc
mov
into
mov
aas
lock
loopne
loopne
cwtl
adc
cmp
lods
mov
cmpb
pop
sarb
mov
lfs
mov
cmpb
lods
lock
mov
outsb
jb
adc
stos
rolb
pop
lods
adc
pop
mov
mov
out
sbb
add
add
fcmovb
in
dec
add
repnz
bound
jecxz
or
or
jo
js
adc
mov
call
add
sbb
mov
sbb
adc
test
mov
jp,pt
leave
test
cld
push
xchg
cmp
pop
push
lods
sbb
push
ret
test
and
js
js
arpl
mov
int3
les
sti
lret
mov
cli
in
stos
lock
je
pusha
dec
les
pop
imull
icebp
lret
pop
out
daa
xchg
jo
cwtl
aaa
insb
sub
adc
cli
in
adc
jbe
sbb
xor
push
inc
sbb
sbb
mov
inc
clc
rcrl
fwait
jo
push
jl
dec
loopne
loop
xor
xor
pop
shl
push
int
jle
dec
jle
popa
pop
xchg
dec
stos
shrl
push
add
lock
lock
je
sahf
pop
xchg
ljmp
inc
push
mov
jae
dec
adc
imul
out
add
xorl
lcall
les
js
push
loopne
roll
sbb
inc
imul
fisttps
lock
jmp
div
mov
mov
and
lcall
push
ret
stos
mov
add
sub
xchg
adc
js
and
mov
ljmp
or
stos
popf
dec
mov
sbb
sub
sbb
dec
cmc
dec
xor
sub
rorb
rclb
ss
cmpsb
icebp
inc
jbe
cmpsb
jecxz
xchg
mov
mov
mov
mov
push
adc
gs
push
andb
jne
dec
pushf
inc
and
jl
ret
xor
xlat
mov
test
xchg
or
xchg
cld
push
push
inc
cmp
lea
fcmovne
add
mov
fistpl
push
sarb
sub
leave
jl
fiaddl
adc
push
enter
or
cmpl
mov
mov
cmc
inc
cmpsl
ds
enter
repz
pushf
int3
pop
or
pavgb
sbb
clc
and
mov
enter
ret
insl
dec
out
rcr
mov
mov
stos
push
rcrb
inc
cmp
popa
data16
aas
inc
add
stos
push
xor
dec
pop
and
pop
push
add
jl
sbb
scas
addl
rclb
bound
mov
rclb
mov
and
aaa
jo
lcall
jle
sbb
or
test
jne
addr16
adc
movsb
orb
push
mov
xor
mov
pop
fmul
dec
js
cmpsl
adc
outsb
mov
mov
loopne
xor
lahf
hlt
inc
add
in
and
hlt
cmp
pop
xor
add
mov
push
in
pop
ret
cmc
cli
cmp
fcmovnb
clc
insl
cwtl
shrb
cmp
push
jge
addb
nop
jg
pop
add
inc
cld
lods
inc
outsl
nop
add
push
std
dec
dec
mov
bound
mov
int3
fiaddl
pop
clc
mov
mov
scas
clc
dec
jmp
xchg
pop
push
movb
in
lds
inc
push
es
inc
popf
andl
push
mov
sub
xchg
pushf
decl
loopne
inc
jno
daa
pop
inc
fadds
movsb
stos
xchg
sbb
andb
push
jo
adcl
outsl
lcall
mov
xchg
xor
add
mov
mov
mov
add
mov
and
cli
xorl
jo
or
popf
and
insl
mov
xor
mov
xchg
movsb
pop
fisttps
sbb
push
sbb
sbb
add
hlt
push
adc
test
lods
push
push
add
cltd
inc
push
mov
popf
test
pop
test
jmp
mov
mov
xor
add
add
jl
sub
ljmp
fldenv
ret
or
dec
sub
inc
jg
xchg
aas
stos
jle
sub
inc
das
fwait
and
mov
inc
and
adc
cmp
aaa
or
sub
lods
sbb
xchg
adc
ret
ljmp
sti
in
orb
xor
rcrl
cmp
mov
and
and
adc
pop
add
mov
mov
jp
dec
xor
fisttpll
push
dec
roll
push
sahf
inc
lcall
or
xchg
lcall
push
loope
sub
jno
push
xchg
out
lret
or
insl
fnstsw
pop
or
xor
les
mov
test
mov
or
add
push
mov
les
xchg
cltd
js
shll
rorb
loopne
dec
add
jae
push
jmp
pop
mov
clc
sbb
int3
icebp
lods
je
cmp
or
push
and
pop
div
cli
dec
call
pop
sub
hlt
jns
call
push
cmp
mov
add
sarb
iret
rolb
sub
jle
rcrb
fmull
out
jns
loope
lock
rorb
push
dec
sbb
or
jne
loop
lcall
jg
mov
inc
push
dec
hlt
push
and
mov
push
sahf
xchg
sbb
add
mov
sub
dec
in
lods
mov
sbb
lock
push
lock
inc
imul
clc
pushl
sbb
mov
nop
push
inc
mov
mov
aaa
addr16
cwtl
push
ret
popa
push
sbb
and
scas
mov
xchg
push
movsb
int3
faddl
cli
cmp
fwait
jecxz
or
insb
mov
aad
mov
sbb
xchg
insb
jnp
pop
sbb
dec
xorl
addl
adc
fwait
test
inc
xor
sbb
cmp
xor
pop
cmpsb
lock
leave
sub
pop
adc
jb
dec
aad
aas
std
xchg
push
mov
jmp
and
flds
mov
mov
push
sub
insb
test
ljmp
jle
nop
sbb
add
sub
mov
jecxz
dec
inc
push
inc
dec
lcall
xchg
lods
xchg
shrl
mov
sub
test
andb
mov
xor
ss
insb
add
cmp
mov
mov
xor
push
incb
ss
sti
das
das
mov
pop
out
pop
or
sub
ds
adcb
pop
mov
mov
adc
jl
or
cmp
lock
inc
pop
cli
add
jmp
add
clc
sbb
test
loopne
push
lahf
jle
xchg
lods
and
gs
sbbb
cmpsl
sbb
xchg
cwtl
jmp
mov
adc
ret
adc
dec
xor
fidivs
adc
mov
add
pop
adc
xor
dec
sub
das
push
fs
pop
dec
jl
aaa
loop
outsl
lods
or
add
pop
or
push
sbbb
ljmp
mov
pushf
mov
stc
ret
pop
lods
add
das
es
loopne
pop
cmc
xor
cwtl
repnz
out
pop
imul
lock
add
loop
mov
xor
mov
pop
pop
xor
stos
or
shrb
or
in
subl
dec
popf
mov
fisttps
daa
or
mov
xchg
es
es
adc
sub
add
sub
shll
inc
dec
mov
jle
clc
and
in
xor
push
jmp
lcall
mov
cmc
add
cld
cmp
clc
pop
dec
mov
gs
push
call
jge
xchg
out
cmp
daa
mov
call
sti
shlb
mov
pushf
sbb
and
cmpb
inc
or
test
push
insb
mov
cmc
add
cmp
mov
mov
scas
stos
pop
loop
or
out
addb
es
xor
xchg
sbb
lcall
icebp
pop
push
xchg
mov
notl
aad
scas
test
ret
aam
mov
imul
cmp
and
or
fwait
add
divl
inc
lds
sbb
pop
mov
enter
sti
inc
pop
out
addr16
cmpsl
into
out
dec
jg
test
add
mov
jno,pt
or
pop
lcall
jmp
jmp
js
jns
addr16
pop
outsb
sub
mov
add
lea
icebp
sub
test
mov
add
lcall
sbb
push
cmp
mov
jl
sub
or
sbb
sti
add
push
add
pushf
cmpsl
and
loopne
movsl
popa
jg
in
or
clc
adc
add
fdivrs
lods
xor
inc
inc
inc
mov
or
add
sbb
cmp
aaa
loopne
lret
push
mov
inc
adc
dec
popa
xchg
subb
and
call
or
lret
and
cmp
mov
leave
push
inc
sbb
jl
xchg
in
cli
repz
lds
inc
pop
dec
xor
nop
jno
divb
std
ror
lea
dec
mov
mov
adc
js
cli
mov
inc
xchg
jbe
push
cmp
aaa
mov
pusha
or
or
mov
or
test
push
popa
sbb
pusha
inc
ret
dec
cmp
test
sbb
int
imul
jecxz
ljmp
data16
mov
push
lea
pop
or
pop
mov
and
outsl
lock
dec
dec
mov
cmp
push
push
or
push
popa
cld
lahf
aas
hlt
sub
add
into
adc
mov
je
ja
in
and
ja
and
lods
add
pop
mov
cmp
lods
sub
or
push
popa
or
orl
cld
outsb
loopne
push
insb
fsubl
filds
push
ljmp
sbb
mov
pop
pop
jle
mov
ja
lods
xor
and
std
rolb
add
ret
jo
rolb
sbbl
and
push
inc
jbe
std
xchg
jle
xor
xchg
jecxz
add
push
fistl
cwtl
pusha
or
cli
push
adc
jnp
cli
sub
enter
test
shlb
jp
rorl
jb
insl
inc
lods
mov
push
popf
roll
sub
push
pop
push
cmp
out
movsl
dec
pop
or
popa
push
push
lret
dec
mov
fwait
imul
xor
orl
ss
les
pop
out
mov
aas
inc
mov
mov
xchg
xor
cmc
loop
mov
js
inc
push
int3
pop
sub
scas
scas
lret
jp
inc
jbe
fsubrs
js
cmp
pusha
lcall
mov
xor
inc
in
mov
cld
int
nop
or
push
mov
mov
mov
dec
andb
add
jne
cmpsb
add
lock
and
mov
jbe
imul
sub
sub
adc
ret
lds
mov
dec
imul
cmp
sar
xchg
outsb
loope
or
mov
scas
repnz
mov
pop
push
sbb
sahf
call
shl
push
pop
cmp
incb
scas
les
test
cmpsb
bound
push
adc
or
jle
pop
imul
pop
mov
mov
andb
add
imul
in
add
inc
or
lds
inc
fwait
dec
or
fsubs
movsl
mov
dec
fsubs
push
adc
das
fidivrl
inc
adc
jp
icebp
es
test
mov
lcall
sbb
fcomip
loopne
cld
cmp
clc
and
rcrl
mov
mov
or
sbb
jb
cwtl
scas
and
push
mov
daa
daa
int
icebp
mov
sbb
xchg
fimull
mov
or
push
or
fdivrl
add
xor
mov
push
outsl
insl
popa
test
sub
lods
jp
je
sbb
add
sub
loopne
test
addr16
mov
dec
jo
fabs
sub
cwtl
test
stc
add
testl
push
mov
outsl
cli
loop
xor
and
xlat
sub
decb
add
adc
shlb
fwait
out
lds
and
outsl
test
adc
decl
sahf
mov
xor
rol
movsb
dec
aam
xchg
aad
cmc
inc
cmp
rol
jl
mov
and
das
shlb
mov
stos
test
or
xchg
icebp
loopne
fwait
sub
adc
pop
and
mov
sub
cmp
push
lock
mov
xchg
add
pusha
xchg
push
jbe
adc
xchg
or
js
or
insb
sub
pop
mov
mov
insb
lock
in
push
call
std
cmc
push
in
in
out
push
es
add
xchg
inc
hlt
scas
xchg
mov
xor
stos
push
mov
or
mov
dec
cmp
inc
cli
outsl
xchg
or
movsb
xchg
jbe
jg
and
jp
lds
push
jo
add
lds
add
inc
std
inc
je
fldcw
pusha
push
push
std
stos
sbb
and
xchg
sahf
repz
into
add
jo
add
jge
jmp
lcall
aam
loopne
testb
adc
out
aaa
push
add
rolb
das
cld
or
mov
pushf
mov
sahf
ja
arpl
call
adcb
movsb
repnz
mov
scas
inc
dec
fbld
adc
mov
int3
jnp
aaa
jl
ret
fiaddl
test
push
shll
jmp
add
jae
cmc
icebp
pop
jo
sbb
lods
adcl
push
adc
and
cmp
pop
inc
add
sahf
xor
out
aad
loopne
sub
cmp
stos
int3
jecxz
loope
xor
pop
and
je
mov
cwtl
and
pushf
popa
mov
and
das
inc
rclb
add
cmp
sti
mov
jb
push
sti
call
int3
adc
bound
icebp
cmp
pop
inc
dec
mov
mov
pop
testb
flds
sbb
shl
sbb
push
aam
mov
inc
jmp
insl
inc
out
cli
and
cwtl
sub
dec
jg
mov
mov
mov
scas
lcall
mov
xor
clc
mull
jge
int
imul
sti
jp
ds
lea
jge
mov
clc
or
push
xlat
push
addl
in
push
and
pop
inc
and
movb
in
mov
sub
pop
jp
cli
cmp
xor
cmp
je
stos
mov
inc
push
pusha
divb
ret
add
daa
or
inc
mov
inc
mov
hlt
and
add
outsb
and
jno
fsts
fdivr
movl
nop
fldenv
shll
jmp
movl
in
jnp
add
loop
cli
pop
sbb
and
push
cmc
mov
sub
jl
sub
dec
mov
lret
lcall
or
or
clc
aam
fisubs
or
pop
inc
add
lcall
je
pop
ss
add
jp
mov
inc
lods
push
rolb
rolb
out
xchg
mov
mov
sti
dec
js
popl
pop
mov
ret
aad
lcall
aam
fcompl
dec
pop
xchg
xchg
les
mov
or
sub
push
mov
adc
xlat
lock
adc
jp
sub
dec
enter
bound
fdivr
adc
add
or
imul
mull
js
mov
pop
icebp
push
sbb
add
inc
pop
mull
jns
movsb
and
or
movsb
cwtl
adc
sub
pop
sub
inc
add
lds
testl
xchg
cmpsl
fstps
call
jle
push
lcall
mov
sub
ret
fadds
std
jo
hlt
leave
hlt
popa
mov
or
andb
add
call
dec
call
test
scas
xchg
setg
mov
out
xor
dec
and
cmova
add
inc
mov
out
add
sbb
fs
sbb
xor
sahf
icebp
jae
outsb
jne
repnz
stos
mov
dec
sub
push
subb
fsubl
add
cmp
push
push
fildl
js
inc
repz
incl
nop
mov
dec
repz
xlat
jnp
in
rcrb
and
inc
xor
push
std
push
push
sub
or
xor
pop
ret
mov
outsl
mov
cmp
or
cld
add
ret
cmp
jne
xchg
sbb
call
dec
xchg
or
dec
mov
mov
adc
cmpsl
hlt
sub
lcall
lods
mov
pop
pop
iret
test
push
scas
je
xchg
sbb
push
jo
jle
cmpsl
ljmp
rorb
mov
xorl
mov
jbe
test
adc
add
inc
or
cmp
sti
mov
fldt
clc
adc
out
sahf
shl
xchg
inc
packssdw
ret
pop
scas
jle
popl
std
mov
scas
sub
lcall
rcr
lds
jp
out
jne
out
dec
adc
mov
add
adc
loop
push
mov
dec
xchg
and
mov
sbb
cmpsl
fimuls
aam
jae
pop
inc
add
rcrl
cltd
push
adc
mov
push
or
test
fbstp
mov
inc
push
dec
mov
or
sub
add
arpl
sub
mul
cmp
lea
adc
jbe
aaa
dec
sub
imul
std
imul
pop
mov
push
clc
push
adc
cmc
lods
dec
stos
test
mov
push
mov
dec
lcall
cmp
push
outsl
mov
dec
sub
js
jo
mov
mov
das
sub
mov
or
and
mov
fyl2x
mov
cmp
xor
js
ds
pop
cmp
in
icebp
dec
ret
jmp
packssdw
push
and
jb
mov
hlt
pop
xchg
cli
adc
mov
mov
adc
pop
cmp
pop
push
dec
lock
ljmp
and
ret
mov
adc
mov
std
mov
add
add
jo
push
or
sbb
or
andl
aad
cmp
push
scas
or
jmp
mov
hlt
das
fsubrs
pop
push
lret
cmp
mov
push
test
sub
jmp
lds
mov
mov
add
aad
adc
shl
sub
lock
push
dec
out
in
cli
xor
and
add
sub
jne
push
out
movsb
aaa
enter
add
rcrl
xchg
jne
mov
ds
inc
xchg
aad
push
out
in
cmpsl
add
cmc
stos
adc
add
sbb
xchg
mov
loope
roll
xchg
rorb
jge
mov
test
cmp
push
cmp
or
lock
adc
add
xchg
adc
lret
mov
pop
sbb
mov
mov
les
push
inc
mov
decl
xor
out
js
orl
pop
sub
in
movsl
arpl
dec
pop
aam
ja
addr16
rcr
das
or
enter
aad
inc
nop
xor
mov
push
cli
aam
inc
movsl
or
ljmp
xor
call
jp
aad
xor
faddl
aad
pop
mov
mov
jo
shrl
aas
ret
scas
push
dec
and
sbb
mov
lcall
push
lea
cltd
add
add
fdivl
repz
movsb
xchg
xchg
rclb
jecxz
mov
inc
dec
or
sbb
outsl
std
fimuls
sbb
dec
ret
cmc
add
dec
push
mov
sbb
in
call
icebp
jo
icebp
cmp
dec
cmp
push
add
push
rcl
xor
test
loop
push
mov
cmp
mov
xor
xlat
scas
sarl
aam
fwait
js
ds
xchg
push
scas
nop
fnstcw
pushf
movsl
jecxz
mov
mov
xchg
jl
xchg
lds
ljmp
nop
orl
pop
lods
ret
pop
subb
mov
movsl
fistl
mov
arpl
and
lock
into
rcll
or
jne
mov
rorb
add
sbb
push
mov
inc
sbbl
or
or
lret
sbb
dec
gs
adc
mov
mov
bound
mov
xor
sbb
adc
fdivp
addr16
scas
cs
mov
cmc
movsl
sbb
ret
lahf
xor
cs
insl
adc
jecxz
xor
dec
jl
and
imul
cmp
cmp
inc
jbe
adc
xchg
xchg
mov
add
inc
mov
fsubs
arpl
iret
test
loopne
mov
push
icebp
jne
xor
mov
in
pop
test
in
or
aas
or
repz
cmc
jecxz
ret
inc
xlat
and
and
icebp
and
cmc
aam
cmp
test
pushf
ljmp
ja
jbe
jae
pop
push
sub
sbb
cld
mov
cmp
sub
call
rorb
ljmp
dec
jae
push
jecxz
ja
mov
mov
push
jns
and
ret
cmc
mov
shr
cwtl
xchg
nop
mov
mov
dec
cld
ret
rclb
jl
add
jno
mov
add
or
cmpsb
push
or
and
roll
test
ja
icebp
shlb
insl
sahf
inc
filds
imul
rcl
rolb
jae
mov
cmpb
lods
test
add
ret
fmuls
pop
rolb
iret
mov
pop
js
lcall
push
mov
int3
cmpsb
inc
andl
sub
sub
and
loopne
and
push
cs
push
add
lret
inc
lock
dec
flds
sbb
inc
and
mov
push
test
mov
push
into
sahf
sbb
dec
aas
or
in
stos
out
or
xor
cmc
adc
mov
inc
mov
jle
pop
sahf
pop
mov
and
mov
adc
xor
sbb
and
add
mov
stc
adc
lds
cmp
pop
je
andl
fstpt
mov
cmp
add
aad
sub
dec
xchg
or
cmp
scas
js
cmpsl
mov
ljmp
push
out
dec
inc
cmpsb
in
dec
mov
out
and
dec
add
lret
or
sub
pushf
lret
cmpsl
scas
and
sbb
xchg
mov
les
inc
js
lcall
outsl
xchg
testl
test
or
push
jae
fisttpl
ret
ds
mov
push
inc
cmp
inc
pop
cmp
dec
xchg
out
jmp
das
adc
push
psubusb
sub
adc
sbb
out
jge
jo
cmpsb
mov
mov
sub
sbb
push
cld
pop
ret
mov
adc
adc
fst
xor
inc
dec
dec
lea
repz
sarb
sbb
pop
jp
inc
push
sbb
mov
jle
xor
rcll
or
or
cmp
pusha
inc
push
out
jl
leave
clc
add
dec
iret
cmpsb
jl
mov
mov
sub
mov
cmp
lea
mov
push
inc
xor
pop
sahf
or
inc
fisubl
mov
jmp
dec
ljmp
test
push
inc
call
or
stos
lret
and
out
add
mov
pop
dec
mov
rorl
mov
jge
adc
pop
jo
dec
xchg
dec
shll
mov
ds
scas
adc
das
fcompl
xor
sbb
jns
xor
js
ret
mov
imul
jne
es
cmp
sub
idivb
sub
xchg
dec
adc
pop
push
data16
jecxz
push
scas
xchg
xor
jmp
lock
xor
sbb
sahf
sub
stos
push
hlt
sbb
mov
std
xlat
movsb
mov
add
cld
and
adc
mov
sbb
xchg
rcrl
lret
jmp
inc
sub
enter
addb
push
call
pop
sub
out
xor
mov
scas
fidivrl
je
dec
pop
bound
pop
pusha
test
inc
ds
ds
xchg
jbe
insb
or
jb
dec
mov
mov
rcr
cmp
insl
adc
rorl
xor
stos
stos
stos
add
xchg
sbb
fs
loope
xchg
ss
lcall
mov
int
push
or
cli
loopne
lock
mov
in
cmp
cld
mov
loope
or
mov
mov
ficompl
aam
sbb
incl
sub
das
test
rorb
dec
pop
out
push
aaa
sub
jbe
adc
jp
lahf
les
cmpsl
push
cmp
pop
das
push
mov
jo
int3
jno
xor
sti
cmp
sbb
mov
dec
inc
dec
cwtl
mov
lcall
dec
jle
lock
ret
add
std
add
pop
jle
aas
mov
inc
push
scas
jo
mov
jbe
outsb
xchg
push
adc
and
out
adc
rcrb
sub
lcall
pop
lret
sbb
subl
shlb
fistpl
fsubs
repz
push
test
shld
and
in
pusha
push
mov
push
mov
addl
xor
pop
xchg
push
jl
jns
pusha
mov
daa
enter
or
movsl
jo
popf
int3
sub
lcall
ss
push
gs
leave
xchg
aas
push
mov
sub
stos
aam
lds
imul
mov
pop
test
lock
cmp
cs
pop
iret
push
cmp
push
aas
and
push
dec
dec
xchg
fiadds
push
lods
mov
adc
mov
pushl
xchg
das
xor
popa
movsb
movsl
add
in
mov
jns
jmp
add
and
add
pop
pop
pop
test
jl
dec
xor
stos
js
nop
add
lock
into
loopne
movsl
pop
inc
std
pop
push
cmpsl
inc
jo
movsb
pop
adc
or
dec
aas
enter
sarl
rolb
pop
stc
inc
in
insl
imul
sub
scas
mov
sbb
outsb
mov
cs
repnz
inc
pop
and
nop
push
add
jecxz
popf
mov
mov
push
jecxz
and
mov
xorb
loope
in
je
and
pop
in
imul
xor
cs
ret
sub
add
xchg
push
cs
sti
mov
out
mov
xchg
mov
add
bound
test
icebp
shlb
add
and
xchg
lea
std
push
int
jl
je
cld
inc
addl
insb
pusha
push
clc
orb
aas
pop
fwait
jo
jge
add
mov
ficomps
fsubrs
pop
outsl
les
dec
inc
inc
cmpsb
push
sub
rorl
cmp
fidivs
xchg
sbb
repz
mov
dec
aam
into
ret
les
mov
mov
push
andl
adc
lods
pop
call
xchg
push
stos
sub
pop
sti
mov
ljmp
mov
div
inc
or
pushf
jl
xchg
fbstp
pusha
add
jo
xorb
ja
aaa
je
sbb
clc
call
rolb
mov
xchg
pop
mov
cmp
push
cmp
int3
js
stos
lock
ds
loopne
ljmp
mov
push
in
mov
fstpt
call
cmp
add
push
mov
es
jl
clc
xor
sti
jno
pusha
inc
push
sti
jo
in
adc
lods
lcall
pop
inc
fwait
lock
adc
mov
rcl
lods
mov
inc
mov
outsl
dec
sarb
adc
xlat
fisttps
jmp
dec
and
add
and
or
jb
in
pop
inc
jg
mov
movsl
jecxz
xor
jle
xchg
pop
repz
mov
cmp
cmp
dec
cmp
js
ljmp
sbb
in
test
mov
das
and
inc
in
pop
xchg
dec
shr
add
adcb
and
das
js
ja
ds
jno
add
ljmp
mov
adc
pushl
inc
popa
cs
inc
daa
dec
in
fldenv
and
inc
mov
adc
lahf
or
xchg
sbb
pop
lahf
stos
mov
push
push
mov
push
sbb
jl
aam
sbbb
sub
out
inc
std
dec
dec
or
sbb
adcb
sbb
sub
xor
fdivr
les
gs
cwtl
mov
out
pop
jl
jno
dec
sbb
sub
data16
jnp
xchg
pop
loope
push
nop
push
xchg
icebp
jg
pop
loop
ss
add
mov
push
sub
or
loopne
test
mov
or
mov
hlt
sbb
xchg
inc
out
sub
rcr
gs
aaa
push
cmp
cmp
popa
movsb
in
mov
cmp
sub
and
in
mov
mov
mov
sub
sub
decl
pop
cmpsb
movaps
cmp
mov
pop
ss
stos
xchg
dec
rcll
lods
xchg
pop
xor
cmc
scas
scas
sarb
xor
and
xchg
sub
pop
mov
and
or
loop
call
sahf
sbb
lock
and
orb
in
push
cld
adc
add
inc
ret
cmovb
mov
sub
test
jo
sub
hlt
cwtl
and
add
inc
in
mov
rolb
push
xchg
or
dec
stc
in
xorl
or
pop
or
aas
dec
jo
in
mov
adc
lods
loopne
and
inc
pop
dec
lea
xchg
jbe
push
test
lods
pop
dec
jno
xchg
jmp
sar
int3
fmull
imul
inc
roll
push
fildl
inc
inc
arpl
add
bound
pusha
add
std
mov
and
mov
sub
lcall
lea
int3
loop
mov
or
jp
mov
call
sbbl
loop
push
arpl
aas
loop
jecxz
icebp
pop
das
ret
jle
sahf
mov
sbb
mov
xchg
sub
push
push
inc
roll
jnp
dec
pusha
adc
loop
adc
cmpsb
sbb
and
sti
sarb
push
fucomp
fdivp
xchg
shlb
je
cmpsl
mov
mov
aas
push
mov
mov
inc
push
rorl
inc
xor
xor
push
ret
aaa
movsl
jp
int
add
pop
repnz
outsb
sub
enter
pop
adc
dec
int
andb
pop
addr16
aas
sub
pusha
dec
mov
xchg
mov
jbe
fwait
cmc
ret
xor
cmp
cmp
push
idivl
add
repnz
testb
pushf
sbb
mov
inc
or
or
data16
mov
push
ja
mov
xchg
adcb
or
jle
jns
and
sbb
out
xorl
roll
mov
jmp
fisubl
xchg
mov
mov
push
jp
add
inc
jno
lock
pusha
mov
fcomp
push
ss
fucomi
sar
scas
or
cwtl
enter
movl
xchg
and
rcrl
or
jp
cmpsl
rorb
out
pop
or
stc
mov
inc
dec
add
adc
mov
push
aas
jnp
push
add
cli
dec
pop
jecxz
jp
fsubs
pop
and
xchg
xchg
fnstsw
and
or
xor
cmp
cli
insb
push
pop
xchg
imul
inc
cli
mov
lret
mov
pop
lods
inc
movsb
filds
jge
xchg
push
and
aaa
call
xchg
jo
jle
shlb
rorl
dec
fcoms
or
dec
sub
sbbb
sbb
lcall
dec
dec
mov
or
jl
lret
sub
add
pop
bound
mov
mov
cs
divl
push
fs
insl
pop
lea
rcr
je
fimull
js
dec
mov
and
aas
mov
mov
shll
mov
lcall
pop
xchg
add
add
in
pop
ud0
mov
mov
jmp
xor
push
lea
dec
sbb
add
hlt
jne
pop
shll
and
call
push
jecxz
jmp
pusha
popa
or
xchg
xchg
pop
xor
fisttps
mov
push
in
testb
adc
test
roll
dec
xchg
les
adc
add
add
xor
outsb
ficoms
lods
xor
add
fwait
jbe
test
adc
cmc
lods
or
out
pop
test
push
adc
add
mov
mov
sub
add
pop
je
and
mov
cmp
nop
jg
movsb
push
adc
xchg
push
lock
aaa
pop
xchg
add
pop
out
and
add
rclb
mov
fwait
bound
out
mov
xor
decb
push
push
mov
mov
mov
or
dec
jmp
je
adc
js
in
scas
pushl
jg
xchg
rcl
repz
subl
in
lcall
sahf
aam
sbb
jp
aas
ljmp
pop
pop
iret
sbb
std
jnp
jb
jnp
push
adc
cmc
add
fcompl
push
js
adc
dec
adc
dec
decl
dec
adc
mov
call
mov
loope
ljmp
mov
test
clc
lahf
aam
in
sbb
rorb
loopne
cmp
testb
push
mov
push
sbb
xchg
dec
and
pop
mov
insb
lock
fwait
fwait
jle
adc
in
loope
incb
mov
lods
pop
xor
fwait
or
sub
loopne
ds
andnps
sbb
fsubrs
jg
xchg
pop
mov
bound
pop
add
pop
insb
cli
into
fcmovnb
shr
xor
repnz
rcrb
adc
clc
test
filds
cmp
push
movl
fisubrs
js
lds
fdivrs
adc
sub
sub
inc
addb
adc
js
nop
scas
add
and
faddl
xchg
mov
lahf
inc
out
add
jge
rorb
insl
icebp
mov
ret
add
mov
arpl
pop
stos
pop
cli
clc
cmp
aaa
testl
add
f2xm1
mov
or
data16
inc
aam
xchg
incb
lock
notb
dec
push
push
cli
push
out
cmp
popf
rolb
mov
cmp
lds
mov
lods
mov
js
push
xchg
bound
call
add
push
xchg
into
pop
addr16
push
xor
loope
push
out
rcll
push
lea
jl
fcmovnbe
lcall
leave
dec
push
xchg
test
rorb
and
xchg
je
sbb
adc
mov
jle
or
cmp
jle
je
xor
mov
in
jnp
mov
push
mov
push
and
faddp
sbb
fsubl
push
fs
shll
insb
imul
scas
xor
fucomi
adc
loopne
mov
lahf
cmp
jl
mov
push
sub
daa
and
pop
mov
push
or
mov
lods
in
idiv
cmpsb
sbb
mov
in
fdivs
add
xor
mov
xchg
jp
sub
and
jmp
and
loope
popa
pusha
outsb
add
push
pop
and
into
ss
mov
nop
xor
flds
das
fdiv
pop
push
das
imul
sarl
push
outsb
push
inc
bound
fildll
fsubs
dec
jecxz
js
push
pop
mov
shll
aam
mov
incl
sbb
add
gs
sub
pop
xor
lods
inc
jl
ret
xor
shlb
xchg
pop
cs
mov
insb
mov
ss
ficompl
outsl
scas
pop
ds
add
add
loopne
jmp
adc
jg
movsb
pop
roll
mov
insb
dec
fisubs
shlb
sbb
push
loopne
aas
mov
sbb
adc
push
insl
mov
mov
dec
std
lea
mov
pop
cmp
in
repz
pop
sbb
pop
pop
and
or
fsubl
xchg
jmp
call
push
sub
incb
lock
mov
movsb
incb
ret
jg
adcl
xchg
test
and
jmp
fnstcw
mov
push
inc
mov
xlat
adc
sbb
and
int
daa
mov
jo
ljmp
sub
add
outsb
testl
lods
pop
jmp
cwtl
adc
icebp
imul
fisubrs
rcrb
leave
jp
orb
inc
out
cld
clc
mov
mov
and
cs
mov
or
ret
pop
enter
and
stos
sbb
jo
jns
fdivrl
mov
test
cwtl
pop
and
mov
jecxz
jg
adc
pusha
js
rcll
dec
and
lods
enter
lcall
add
xchg
pop
jl
pop
aad
imull
popa
mov
rcrl
mov
inc
loopne
leave
jns
mov
and
or
clc
fdivl
das
add
test
mov
cmp
jl
mov
or
nop
filds
ds
or
xchg
mov
inc
mov
and
cli
in
sub
xchg
lahf
ja
js
test
pop
push
fmulp
mov
mov
lds
out
out
mov
ret
push
xor
sahf
sub
adc
inc
iret
push
xor
pop
jne
jmp
insb
mov
fsts
cmp
fmuls
or
ss
scas
jecxz
test
or
je
jae
push
push
push
xchg
jo
xor
ret
push
mov
out
aad
sbb
lock
movsl
ja
pop
dec
stc
inc
lds
inc
dec
push
divl
test
ljmp
or
les
sub
or
lock
mov
shlb
loopne
dec
sbbb
out
data16
frstor
and
cmp
add
mov
sub
and
cmp
test
sub
push
xlat
fdivs
out
inc
add
lods
cli
movsl
hlt
jecxz
mov
dec
xchg
sahf
shlb
sub
xchg
enter
mov
and
int
add
dec
xchg
cmpsb
aam
cmc
xor
mov
jne
dec
xor
rolb
cmpsl
dec
cmp
fsubrl
sub
test
js
sti
mov
add
fwait
cmp
loopne
adc
jbe
pop
xor
push
loopne
jo
sti
bound
insb
jns
pop
ds
add
push
movsb
cmpl
jbe
adc
dec
cltd
jp
mov
sahf
push
mov
push
mov
mov
ret
inc
push
push
pop
lods
icebp
andl
in
dec
lea
adc
dec
sbb
aaa
or
jae
pop
popf
xor
add
and
sahf
fimull
xor
in
xchg
fidivs
pop
mov
push
push
sub
test
fdivp
ss
imul
sbb
cmp
loopne
movsb
and
pop
cmp
call
jge
outsl
push
stos
push
mov
inc
add
push
push
cmpb
popa
mov
push
xchg
add
icebp
push
push
adc
pusha
ret
fnstsw
orb
mov
dec
fwait
sbb
addr16
inc
pushf
pusha
add
sahf
in
rorb
hlt
push
dec
mov
orl
dec
out
nop
stos
mov
lock
add
xor
adc
or
add
and
call
cld
xchg
add
mov
or
dec
or
push
nop
adc
push
shll
sbb
test
jbe
push
xor
movsl
cli
push
pop
add
xchg
nop
nop
leave
or
cs
sub
xor
mov
stos
cmpsb
or
js
mov
enter
xchg
cs
push
mov
aam
adc
mov
in
mov
cmp
sub
cmp
shll
jmp
aas
cmp
test
rolb
pop
jl
scas
add
or
push
jnp
mov
sbb
adc
pop
in
int
insb
or
mov
xchg
add
inc
cwtl
push
sar
jmp
sbb
or
mov
aas
cmp
sub
pushl
ds
jo
mov
daa
ss
rcl
adc
pop
out
push
testb
pop
sbb
jge
xor
sti
jo
mov
in
into
push
jae
push
and
push
pop
stos
xchg
lods
test
push
sbb
outsl
mov
nop
mov
xor
and
pop
xchg
mov
dec
dec
hlt
sub
and
mov
xor
cmp
pushf
xchg
movsb
xchg
add
pop
or
hlt
add
dec
or
data16
outsb
jnp
and
mov
mov
scas
sub
adc
std
test
loopne
js
xor
pusha
jp
cmpsb
outsl
or
push
mov
jg
or
rol
dec
sarl
xor
insb
mov
xchg
loop
lea
stos
push
push
mov
push
ret
push
ret
push
cmp
xchg
and
les
xchg
sub
in
jmp
xchg
adc
dec
push
loope
sahf
shl
in
decl
lock
sub
add
pop
aas
fs
icebp
lea
jg
test
sub
jp
or
inc
hlt
hlt
add
fimuls
push
sbb
shlb
das
test
and
and
and
nop
sub
fcoms
sbb
loop
hlt
inc
insl
and
repnz
ljmp
imul
int
sbb
pop
addr16
ss
data16
popa
mov
jmp
movsl
inc
and
popa
adc
jmp
test
sub
out
in
xchg
test
lods
push
sbb
xlat
outsb
inc
sub
jge
jae,pt
or
mov
inc
addr16
ja
inc
loop
dec
mov
inc
fcoms
cmp
fdiv
jnp
mov
shrb
jo
ficompl
fmuls
rorl
or
or
imul
dec
xchg
pop
dec
mov
pop
and
lods
push
mov
jl
ds
jl
add
and
fsubl
nop
xlat
aam
psubsb
add
das
xor
dec
pop
xchg
adc
dec
popf
adcl
clc
adc
mov
add
aaa
xchg
push
and
mov
mov
mov
adc
out
add
bound
add
jns
inc
mov
enter
push
mov
mov
dec
xor
inc
out
test
add
jmp
add
dec
pusha
mov
in
rorb
or
jmp
mov
mov
out
pop
mov
mov
xor
add
ljmp
or
jnp
jmp
insl
dec
fimull
ss
pop
mov
push
mov
pop
xorb
add
and
mov
andb
xchg
pop
adc
mov
loopne
filds
pop
loop
aam
inc
add
jg
fwait
outsb
jbe
mov
adc
cmp
mov
aad
dec
push
push
outsb
cmp
daa
xor
mov
sbb
mov
xchg
and
repz
aaa
inc
fidivrl
sbb
jecxz
or
pop
sub
mov
incb
add
lods
pop
dec
add
dec
ss
call
data16
loopne
jl
pop
push
mov
adc
xor
cmp
jo
cmpsb
dec
inc
push
jnp
orl
push
jbe
adc
ljmp
push
sbb
ret
lahf
rolb
sar
fwait
aas
mov
jne
cmp
mov
repz
movsl
inc
clc
mov
into
cli
loopne
xlat
cmpsb
ljmp
add
jae
and
loopne
mov
fs
or
sbb
push
xor
push
hlt
aas
test
push
loop
jmp
scas
and
xor
adc
adc
xor
inc
and
xchg
mov
push
pop
and
enter
xchg
push
or
test
or
add
lock
clc
adc
pusha
ja
dec
es
icebp
or
cs
or
mov
scas
lds
negb
hlt
sub
dec
inc
cmpsb
sub
icebp
stos
add
js
rcr
push
mov
jns
sub
lea
adc
xchg
cmp
fcomps
roll
jns
mov
mov
addr16
rorl
inc
outsl
push
push
rcll
sbb
mov
aad
aaa
xchg
in
iret
fcmovnbe
mov
cmp
and
inc
cmp
int
xor
mov
movsb
xchg
lcall
push
add
sbb
xchg
nop
movsl
loope
or
ss
mov
jbe
adc
lcall
clc
loope
mov
dec
push
fnsave
push
in
xorb
dec
sbb
dec
xor
clc
mov
loopne
hlt
pop
ret
and
jge
or
fwait
mov
leave
scas
pop
adc
call
cmc
add
jmp
adc
ljmp
xor
fidivl
out
xor
test
mov
inc
cmp
dec
and
cmp
pop
sbb
bound
jge
mov
push
mov
xor
inc
in
mov
icebp
lret
hlt
mov
dec
mov
mov
lds
cmp
pop
mov
aas
rorl
push
out
stos
mov
inc
xchg
iret
lods
div
cli
test
lds
push
jo
or
jno
inc
movsb
int
pop
inc
and
insb
xchg
sub
sub
daa
fs
ficompl
adc
sbb
sbb
or
push
sub
sbb
fimuls
call
enter
shlb
repnz
xchg
es
imul
mov
cmp
imul
push
mov
adc
jo
xchg
cli
sbb
bound
sti
jo
scas
sub
push
daa
cmpb
push
xor
sbb
mov
out
or
pop
xchg
push
je
and
mov
je
dec
out
js
inc
push
push
clc
cmp
test
sub
and
test
adc
or
ret
addr16
add
lock
mov
cmc
data16
pop
push
dec
xchg
or
daa
jno
mov
iret
add
push
jmp
idivb
inc
mov
mov
sbbl
sub
pop
je
push
cwtl
or
clc
jmp
imul
ret
jbe
lock
loopne
rcrb
imul
dec
inc
push
push
add
in
nop
js
mov
roll
shrb
cmp
jle
inc
inc
or
addr16
or
mov
fwait
mov
ficoml
xor
xor
inc
subb
jp
icebp
push
mov
or
push
cld
lahf
adc
incb
pusha
add
jo
cmpb
scas
pop
divl
mov
cmp
push
xor
repz
pushf
mov
jns
push
cs
adc
cld
fsubrl
negl
inc
push
push
sub
push
mov
test
pop
movl
jl
test
dec
loop
test
mov
insb
inc
add
sub
pushl
insb
lahf
mov
addl
fisubl
test
addl
sub
rolb
subl
push
or
jb
mov
jbe
mov
cld
lds
jecxz
cmpl
outsb
push
and
in
data16
adc
jle
mov
sbb
pop
mov
jecxz
add
adc
cmp
adc
jne
and
add
add
gs
jp
lcall
ds
jne
adcb
cld
and
xchg
adc
xchg
inc
es
cmp
push
push
dec
cltd
shll
aad
push
xor
jns
and
pop
jno
mov
or
mov
and
mov
shl
das
mov
jmp
lret
arpl
fdivr
sbb
cld
scas
or
jmp
lock
mov
and
pop
cmp
or
mov
add
sbb
pop
push
xabort
xor
adc
pop
mov
xchg
jbe
inc
in
jbe
int3
pop
xor
fidivrs
div
into
ret
adc
pop
fwait
mov
sbb
sbb
shll
xor
in
push
pop
mov
mov
les
icebp
xchg
daa
testb
mov
dec
lds
xor
mov
and
fdivr
jmp
je
push
aas
jae
js
mov
xlat
loopne
dec
jnp
inc
test
bound
sub
sbb
shrb
pop
jl
lock
xchg
mov
sub
push
int
mov
sub
dec
out
je
push
les
push
jle
inc
sbb
sbb
ret
in
fldenv
dec
dec
mov
jb
std
adc
ret
mov
dec
rorb
cmp
scas
and
push
mov
loop
sub
ja
fsubs
cmpsb
nop
or
mov
xchg
mov
shr
mov
das
xchg
push
xchg
fnsave
scas
push
xchg
mov
jns
add
adc
cmp
sub
ljmp
mov
push
xor
push
sti
add
lea
jae
cmp
fdivp
xchg
sbb
add
ret
ret
or
inc
jns
int3
cmp
and
dec
mov
sbb
daa
ret
sbb
mov
je,pn
mov
icebp
stos
inc
mov
cld
sbb
lods
mov
jg
xchg
xor
rcrb
pop
xor
fistl
leave
je
xchg
mov
sub
push
das
push
xor
stos
std
test
push
das
mov
fcomp
sub
inc
add
inc
cmp
arpl
lea
loopne
aam
pop
cltd
and
pop
add
mov
insb
inc
add
mov
adc
aas
sbb
mov
pushf
jns
js
test
or
cmp
xor
pop
mov
imul
mov
lods
fprem
aas
mov
in
cmp
mov
cmp
pop
jge
test
ja
adc
sub
arpl
mov
pop
mov
xor
dec
jno
pop
or
inc
and
icebp
mov
fsubs
sub
andl
push
lret
negb
or
inc
xchg
pop
and
pop
rcl
bound
mov
shr
or
add
push
inc
nop
clc
lods
pop
leave
je
movsb
inc
arpl
pop
push
and
dec
jne
pop
out
or
cltd
adc
loop
ss
cmp
fimull
insl
cld
xchg
lret
and
dec
aam
adc
subl
pop
cmp
shl
mov
mov
or
mov
mov
jo
sbb
add
rcrb
in
mov
outsb
add
mov
push
insb
loope
mov
xchg
and
mov
gs
imul
sub
ret
cmp
sub
shl
pusha
iret
mov
ficompl
or
movsb
or
jae
cld
or
push
push
mov
rcl
pop
adc
or
push
sbb
push
cmp
int
icebp
mov
dec
gs
lahf
xchg
mov
ret
mov
scas
xchg
fildl
addl
mov
loop
sbb
sbbb
mov
mov
insl
add
dec
fisubrl
and
js
lods
sub
or
push
inc
jmp
mov
ja
aad
cmpsl
push
sbb
mov
xor
icebp
scas
mov
in
push
fldl
roll
clc
lret
mov
mov
xor
orb
dec
dec
push
call
sarl
nop
add
push
aam
and
push
cmp
fdivrl
mov
clc
jl
xchg
movsl
mov
cwtl
xor
loop
ja
sbb
sbbb
dec
or
pop
ja
sub
enter
enter
push
add
stc
mov
pandn
mul
cmp
or
jns
loopne
mov
lds
cmp
mov
insb
add
adc
pusha
cwtl
lods
outsl
inc
xor
mov
in
xchg
add
jno
repnz
or
cltd
iret
scas
adcb
cld
leave
or
mov
add
adc
into
pushaw
stc
mov
cmpsb
or
push
ljmp
jns
mov
out
mov
sbb
pop
jecxz
shl
fdivr
lahf
lret
lds
xor
inc
cmp
xor
icebp
out
sub
jp
daa
pop
stc
sub
push
mov
xchg
cmpl
or
sub
cmp
push
pop
fwait
cmp
sbb
lods
dec
js
push
cs
xor
and
xlat
pop
aaa
sub
or
sbb
ret
into
inc
push
shrl
mov
je
ss
jecxz
inc
mov
rclb
lods
mov
push
loop
cmp
or
inc
addl
adc
fimull
push
lods
cli
js
or
cli
and
sbb
jno
flds
xchg
das
sub
sti
push
lcall
mov
shrb
sbb
push
clc
adcb
aas
fimuls
adcl
lods
fcmovnb
sbb
jl
push
sbb
add
scas
dec
sub
jmp
insl
mov
call
jp
fisubl
fcoml
add
pop
in
dec
dec
xchg
push
icebp
popa
ficomps
or
push
sbb
mov
cmpb
call
fcmove
aam
mov
fld
or
xchg
ficompl
adc
lahf
push
mov
outsl
imul
shr
jecxz
xchg
stos
push
push
rol
ud0
inc
or
pop
or
ljmp
lods
xor
daa
fwait
add
in
repnz
icebp
cmp
adc
jge
mov
int
cmp
std
cmp
cmp
out
repnz
adc
clc
push
inc
inc
push
add
rclb
mov
ja
mov
mov
add
pop
outsl
jg
loopne
shlb
inc
lret
mov
xchg
int
pusha
dec
ret
stos
fcomps
jbe
call
ss
scas
aad
je
fsub
lock
dec
jnp
adc
push
push
out
jae
scas
xor
les
clc
and
and
xchg
pop
push
test
arpl
testl
fidivrs
and
data16
sub
orl
pop
imul
pop
jo
fiadds
insl
stos
mov
mov
test
test
in
jae
sbb
mov
cmp
sub
inc
push
repz
fdivl
cli
add
jne
pop
lahf
add
mov
loop
in
xchg
add
flds
add
ret
repz
pop
pop
xor
mov
dec
or
lea
xor
andb
cmpb
or
js
imul
les
jecxz
mov
cmp
lock
clc
jecxz
scas
std
orl
xor
fs
int
xor
jb
xchg
push
inc
sub
lret
mov
inc
cmpl
inc
insb
jmp
or
inc
ret
sub
lret
incb
movsl
pop
sub
add
das
out
or
and
mov
imul
in
jbe
mov
les
aas
jns
les
incb
add
jb
aas
jnp
adcb
mov
in
and
popa
push
push
rcrb
adc
push
stos
sbb
fcoml
test
adc
xchg
push
and
aam
aas
cmp
xchg
pop
lock
adc
out
lcall
mov
or
xchg
in
sub
test
dec
pop
dec
or
jno
imul
xchg
and
idiv
mov
or
pop
xlat
fidivs
pop
in
jno
push
push
pop
enter
fsubs
movsl
mov
repz
xor
jne
mov
mov
jg
mov
sbb
inc
mov
xchg
lea
mov
dec
arpl
mov
scas
rorb
lods
dec
mov
and
mov
std
mov
lods
dec
push
pop
mov
mov
inc
jge
cmp
mov
bound
mov
jecxz
mov
mov
and
dec
xor
or
mov
mov
push
mov
adc
insb
or
loopne
jbe
push
aam
mov
inc
xor
and
aad
mov
fwait
jl
fildl
jae
pop
and
insb
ss
add
les
mov
xor
loopne
dec
mov
push
dec
incl
cs
insl
call
add
adc
inc
lods
loop
fldcw
sub
loopne
lea
jg
adc
lcall
ljmp
lcall
mov
inc
into
repnz
adc
mov
add
and
rcll
add
pop
insb
sub
shll
mov
cltd
add
sbb
aas
loopne
sub
loopne
fisttps
mov
jl
mov
rcrb
test
sbb
mov
push
scas
es
aas
ss
aad
xor
dec
dec
jp
and
xor
mov
and
repz
or
mov
fadd
in
mov
jecxz
mov
inc
jmp
sbbl
pop
fdivr
xchg
add
pusha
fstl
shlb
push
add
cmp
ja
cmp
les
jmp
pop
or
inc
jecxz
inc
jg
rol
pop
xor
inc
sbb
xchg
stos
push
call
repnz
clc
call
or
cmp
cmp
inc
call
mov
clc
cmc
and
jno
popa
stos
mov
pop
cltd
push
xchg
ljmp
jl
add
daa
jo
call
aas
call
pop
mov
js
in
iret
outsl
cli
jmp
in
adc
mov
dec
test
data16
xchg
fs
cmp
add
push
inc
sti
clc
rcl
dec
nop
mov
aam
mov
xor
or
and
aaa
jl
andl
jmp
mov
jmp
into
and
mov
nop
mov
sbb
pop
cmp
mov
pop
std
jecxz
pop
dec
ss
add
and
mov
mov
ja
loop
sbb
xchg
mov
sub
sti
pop
push
imul
lret
mov
jp
mov
jne
aam
das
sahf
inc
add
sar
jne
push
aad
jae
and
push
aas
xchg
loopne
xchg
or
mov
out
inc
xor
push
rorb
aad
or
jns
xor
in
sbb
pop
or
popf
xchg
and
xor
or
push
stos
loope
lock
rcrb
js
jb
xchg
ret
dec
mov
das
mov
push
adc
mov
mov
inc
or
insl
mov
pop
inc
aaa
mov
aas
pop
pop
frstor
mov
dec
test
xchg
popl
sbb
sti
js
push
mov
subl
cmpsb
or
mov
rclb
sti
add
mov
jbe
pop
clc
sub
push
mov
leave
pop
clc
out
mov
push
mov
or
fcmovbe
ret
cli
mov
cmp
rclb
lahf
xchg
insb
push
sbb
xchg
loopne
outsl
and
and
scas
mov
lahf
addr16
lea
cld
mov
add
dec
jmp
jo
dec
addb
add
shrl
jle
into
ret
out
add
or
stos
sti
and
outsb
sbb
pusha
xlat
mov
adc
xchg
jae
add
popa
adc
mov
cld
scas
lret
sub
cltd
push
push
xchg
arpl
jg
mov
jae
fs
bound
sahf
movsb
enter
and
repz
cmovo
les
stos
cmp
mov
push
jb
and
push
sub
mov
or
aam
in
fistps
mov
std
loope
mov
out
pop
pop
shl
scas
xchg
and
popf
incb
test
sbb
std
cwtl
loopne
inc
or
sbb
cmpsb
sbb
mov
shr
subl
add
mov
push
pop
fcomi
negb
mov
cmp
pop
iret
add
fidivrs
lret
es
xchg
push
stos
rcr
sub
mov
push
add
jecxz
out
rorl
push
or
sbb
xchg
pop
out
add
ljmp
inc
pop
pop
fcomps
adc
loop
cs
int
lock
decl
imul
xor
push
adcb
test
push
mov
dec
lahf
lock
pop
jle
lret
aam
std
scas
test
push
and
sbb
add
call
xchg
hlt
hlt
add
add
shll
cmp
lods
xor
inc
pop
push
fwait
int3
mov
mov
test
loop
clc
mov
mov
pop
mov
push
xchg
mov
dec
dec
loop
jo
jl
push
je
or
pop
cmp
rcl
cld
jmp
dec
dec
and
inc
cld
popa
xor
test
push
mov
add
mov
xor
mov
mov
push
lods
jbe
mov
mov
sub
or
dec
push
nop
loop
add
push
out
aad
jnp
outsb
cmp
das
sub
adc
rcl
jge
push
hlt
jno
push
insb
and
cmp
fwait
roll
and
mov
pop
mov
or
xchg
or
dec
add
mov
mov
xchg
push
pop
daa
aam
lret
cmp
test
in
mov
aad
std
jg
jle
jb
jb
inc
enter
cwtl
add
sbb
popa
xchg
mov
mov
cmp
sub
mov
sub
mov
enter
ljmp
xchg
mov
leave
mov
inc
in
stos
or
pop
outsb
mov
int3
pop
jecxz
cli
leave
leave
mov
pop
mov
add
cld
add
fadd
sahf
pop
cltd
icebp
mov
add
mov
inc
not
jp
and
mov
test
mov
and
mov
sub
pop
add
pop
loope
and
push
sub
mov
movl
or
or
cmpb
push
push
mov
test
stos
push
cli
sub
cmova
mov
shl
xor
shll
arpl
push
adc
add
das
clc
inc
push
aas
out
repz
or
shrb
jg
dec
sub
inc
add
jmp
jecxz
stos
sub
cmp
out
adc
xchg
mov
pushf
cltd
adc
movsb
jb
lret
enter
sub
sbb
mov
inc
push
pusha
push
xor
aad
fwait
bound
rorb
push
out
pop
push
add
adc
jb
push
imul
lock
jb
lock
and
dec
jo
and
push
xor
mov
cld
sub
cmp
or
aam
add
or
lods
test
lea
inc
pop
ja
ret
inc
or
adc
xor
xorl
adc
lods
lods
rorb
add
sbb
in
adc
mov
cmp
jg
mov
pop
test
idivb
sub
in
sub
les
cmp
add
cmp
sub
into
mov
or
push
xchg
jbe
push
cmp
loopne
dec
fstpt
imul
pop
push
pop
mov
test
push
sbb
sbb
cwtl
mov
mov
mov
cli
aas
jnp
push
add
add
push
and
xchg
sahf
push
jmp
inc
inc
xchg
or
sub
inc
out
movb
push
xchg
int3
int
aas
scas
add
bound
stos
ds
push
adc
xchg
imul
jg
in
fidivl
in
add
or
jb
push
or
mov
jge
dec
rclb
dec
xor
mov
rolb
pop
mull
pop
or
outsl
xchg
cltd
jle
cmp
test
cltd
fsubs
add
xchg
les
mov
adc
daa
jne
mov
cmc
mov
xchg
jne
dec
shlb
push
xchg
inc
dec
loopne
add
jmp
clc
std
lahf
test
sbb
jmp
orb
pushf
sbb
out
inc
push
pushf
hlt
mov
xchg
cmpl
dec
cli
xchg
ret
orl
add
clc
and
ljmp
sub
lock
jne
fisttpll
cmpsl
inc
test
mov
scas
mov
xor
stc
rcrb
or
out
daa
push
and
sbb
push
das
js
mov
mov
outsb
jecxz
cmp
pop
add
xchg
fisttpl
shll
sbb
xchg
mov
pop
mov
sub
add
mov
xor
pusha
loop
mov
ds
aaa
loope
iret
mov
data16
icebp
aam
add
adc
icebp
push
fwait
sarl
in
xchg
sbb
xchg
popa
jo
mov
orb
movsl
call
daa
int3
clc
sub
push
loop
dec
jns
loop
scas
fs
sub
loope
dec
subl
xor
xchg
call
ret
cli
xchg
push
jnp
ja
lods
pop
cwtl
pop
aad
in
popl
sbb
jl
add
fldcw
bound
adc
sub
mov
or
add
movsl
fisubl
fwait
or
or
sahf
sbb
jmp
lret
and
xor
cmp
cli
shll
xor
roll
mov
add
add
sbb
incl
loope
sbb
adc
push
adc
xchg
dec
dec
dec
scas
jno
gs
or
inc
dec
adc
xchg
mov
xchg
xor
cltd
fisubl
jg
fnstsw
pop
add
cmp
push
mov
mov
jecxz
mov
adcb
xor
leave
lcall
mov
sub
je
mov
out
rorb
cmpsb
xchg
adc
sub
sub
pop
orl
std
push
lcall
push
fadd
cmp
jecxz
jp
push
pop
or
mov
pop
dec
push
pop
test
mov
sub
cmp
push
icebp
push
hlt
orl
addr16
lds
sbb
imul
add
cmovo
cmc
sbb
outsl
scas
xchg
add
aam
sbb
rorl
add
mov
xchg
pushf
ss
test
and
jno
loopne
pop
addr16
mov
mov
sti
jae
jne
testl
movsb
or
mov
and
into
movsb
mov
sti
jl
mov
lock
outsl
or
stos
mov
aas
lahf
push
stos
mov
pop
scas
and
out
js
hlt
mov
addr16
push
fiaddl
pusha
dec
lahf
push
pusha
test
scas
and
sub
aad
aas
xchg
bound
inc
xchg
xor
icebp
mov
lret
je
shll
jb
rorb
mov
int3
push
icebp
gs
ret
dec
mov
ror
mov
xchg
pop
xchg
inc
pop
bound
test
call
inc
dec
cmpsb
mov
pop
call
pop
xor
add
push
pushf
mov
cli
ja
sar
stos
push
cmpsb
mov
sahf
test
inc
and
sbb
bound
fistpl
icebp
push
sub
orb
fadd
push
loopne
pop
push
mov
loop
adc
fsubrl
or
or
pop
inc
mov
adc
dec
mov
adc
mov
mov
xchg
out
inc
push
cmp
sub
mov
sub
sbb
add
jbe
and
les
in
int
cmp
mov
mov
ljmp
decl
clc
sbb
inc
cmp
out
xorl
mov
xchg
mov
nopl
mov
imul
push
iret
bnd
out
push
into
test
lcall
pusha
adc
push
das
cmp
jns
iret
sub
out
pusha
mov
insb
jb
xchg
mov
xor
mov
push
xor
mov
ljmp
fadds
cmp
lahf
shl
cs
cmp
sbb
pop
sbb
pop
mov
inc
mov
xor
cwtl
add
pop
pushl
insb
adc
ret
inc
in
hlt
ret
out
pop
pop
or
jno
xchg
inc
xchg
test
out
mov
imull
adc
or
int
xchg
xchg
mov
loop
pop
cmp
pusha
and
call
cmp
bnd
fwait
sti
sub
lock
jle
popa
fsts
sbb
xor
cli
rep
sbb
flds
loopne
aaa
jae
ficoml
clc
mov
test
mov
sbb
lods
mov
inc
divl
fistpl
clc
aad
cwtl
cld
stc
leave
outsb
lods
or
add
cmp
cmp
inc
xor
in
les
rorl
stos
push
aas
rolb
sbb
hlt
cmp
mov
and
or
inc
lds
xor
jno
jo
or
js
cltd
jge
clc
sub
daa
xor
outsl
jecxz
int
ret
mov
rcr
push
add
cmp
daa
xchg
cmpsb
jp
pusha
push
cmp
or
test
lret
mov
rolb
ljmp
loop
test
mov
repnz
inc
cmp
cmpb
fisubrs
xchg
add
sarl
xor
push
fstpl
mov
arpl
fcomps
sub
mov
push
lahf
lods
xor
pop
mov
xor
mov
mov
je
inc
shl
rorb
mov
sub
add
out
adc
add
lock
shll
and
jns
shrb
lds
dec
aam
xchg
mov
mov
ljmp
mov
inc
movsb
dec
sub
gs
mov
adc
pop
popf
push
in
xchg
fldenv
or
push
and
je
fnstenv
or
xchg
and
xchg
sbb
imul
mov
xor
cli
popf
movsl
in
setl
dec
adcl
test
xchg
mov
addr16
in
aam
mov
push
ds
mov
xchg
fwait
mov
lret
xchg
stc
nop
add
insl
lock
mov
iret
arpl
jecxz
push
and
cmc
sub
out
gs
lods
cmpsb
call
in
fdivrs
pop
xlat
cmp
hlt
int3
jae
push
scas
mov
je
cs
pop
pushf
outsl
and
mov
sarb
jge
shrb
ret
cs
push
insb
aam
jae
imul
bound
inc
pop
fwait
push
jbe
pop
scas
dec
mov
xor
stos
mov
sub
jne
push
fidivrs
rolb
pushl
mov
add
inc
mulb
roll
ljmp
in
lock
sbb
xor
and
or
inc
sub
sahf
leave
push
je
or
daa
nop
lock
mov
and
xor
cmp
or
pop
pop
repz
out
cmp
and
inc
add
add
push
rorl
or
addl
data16
sub
testl
mov
jb
jne
mov
mov
jo
mov
inc
insb
or
fadd
xchg
es
pop
push
prefetch
popa
add
outsb
sbb
pushl
mov
jo
add
ljmp
scas
push
dec
xchg
stos
pushw
lock
ret
mov
shl
xorb
loopne
je
std
mov
clc
xchg
dec
mov
lea
js
cmpsb
add
cmp
add
rorb
dec
mov
dec
add
xchg
cmp
dec
es
and
sub
xchg
and
jmp
push
or
xchg
cmp
mov
dec
mov
dec
fisubl
clc
loopne
movsb
or
lea
pop
ljmp
jne
pop
add
ficoms
shll
sub
inc
test
xor
mov
push
outsl
rorl
cmp
test
ds
add
dec
or
ret
mov
sub
negl
xchg
jb
jg
sbbb
mov
mov
sbb
push
and
sub
add
cmp
pop
jne
mov
rorl
or
push
popa
mov
jae
fs
cmpsl
insb
xlat
movb
and
cli
push
dec
pop
lock
repnz
inc
push
repnz
dec
aas
mov
es
sbb
mov
or
pop
test
xchg
mov
mov
out
pop
xor
popf
cwtl
clc
cwtl
fadds
mov
mov
cmp
xchg
movsl
jecxz
jp
push
sub
cld
dec
dec
dec
clc
cmc
jle
loop
mov
rclb
adc
add
loopne
dec
and
push
jge
mov
fs
add
pusha
mov
mov
jno
xor
push
sub
pop
xor
test
js
pushf
adcb
jg
push
cmpxchg
pop
adc
add
lods
in
enter
sti
pop
and
das
mov
popf
loopne
decl
push
leave
inc
xchg
push
xchg
icebp
in
inc
shll
sub
adc
aaa
nop
js
sbb
ret
cwtl
cli
add
js
jae
ret
sub
or
divl
adc
inc
rorb
pop
and
shll
mov
test
cld
add
test
int
fdivl
cld
cli
or
arpl
push
jmp
cmpsl
inc
mov
dec
mov
jnp
pop
sub
xchg
test
xchg
imul
jmp
mov
mov
shl
adc
mov
je
in
popa
out
sbbl
outsb
cmp
and
lock
scas
flds
lea
stos
pop
dec
mov
pop
sub
ja
fs
add
xchg
mov
aas
pop
les
je
mov
in
fsubr
mov
cmp
push
mov
push
cmpb
ficoms
les
push
pop
pop
fcompl
mov
cmpsl
rolb
rol
mov
es
and
mov
loopne
cmpl
mulb
and
dec
das
je
dec
insb
cld
lea
test
je
stc
push
inc
fwait
inc
xor
fwait
adcb
pusha
xchg
push
imul
jle
cmpsl
cld
add
stos
push
inc
or
jg
fdivl
cmp
mull
cmp
or
fdivrl
mov
nop
mov
jns
xchg
jno
or
inc
lcall
pop
lahf
and
cmp
enter
dec
sbb
push
sub
push
popa
add
iret
mov
and
xor
js
mov
jmp
mov
cmp
mov
or
pop
sub
jne
lret
test
mov
cld
sub
mov
xchg
push
popa
cs
loope
mov
mov
clc
mov
xchg
popl
xchg
push
xor
xor
inc
into
dec
clc
inc
sub
test
xchg
mov
idiv
int
hlt
stos
add
lods
lock
lods
dec
loopne
cmpsl
add
mov
out
sbb
mov
jmp
mov
pop
into
movsl
clc
rorb
repz
andb
adc
xchg
jns
cmpb
inc
leave
xor
dec
cwtl
pop
xchg
add
sbb
add
pop
lds
push
push
push
sub
adc
repnz
lods
insb
add
jbe
inc
or
adc
cmp
jp
arpl
xchg
cs
push
lcall
mov
sti
cmc
xorb
enter
inc
and
push
iret
push
xor
mov
push
outsb
les
rorb
xor
push
hlt
sub
adc
pop
icebp
fistpll
pop
and
mov
test
aam
movsb
xor
sbb
imul
fnstenv
arpl
adc
mov
dec
imul
push
orl
std
adcb
sub
imul
scas
js
adc
in
mov
icebp
mov
loope
xchg
scas
add
mov
bound
in
ud0
mov
pop
ret
inc
xchg
dec
insl
mov
das
lock
sbb
mov
push
popf
rolb
inc
mov
sub
and
mov
push
jp
bound
mov
mov
aaa
adc
jns
test
cmp
sub
test
add
or
scas
jge
inc
jge
sahf
dec
inc
shlb
sbb
dec
cld
loop
fidivs
sub
test
push
mov
lcall
fcomip
out
push
or
data16
arpl
inc
icebp
ss
xorb
mov
imul
call
mov
adc
cwtl
pop
or
fdiv
cmp
adc
ljmp
dec
pop
add
je
fldl
lahf
outsb
push
je
push
dec
cmp
mov
adc
mov
add
and
dec
mov
dec
or
mov
push
js
add
shlb
inc
loopne
or
cmc
movsl
jl
and
and
loop
and
sti
jae
pusha
movsl
jg
nop
insl
jg
jmp
push
clc
sub
addr16
jg
movsb
cwtl
decl
sbb
cmp
rcrb
mov
imul
stos
cwtl
fcoml
pop
cmp
enter
stc
in
clc
pop
or
fsubl
push
mov
jp
sbb
pop
and
sbb
xor
cmpsl
push
decl
into
push
push
lea
mov
shlb
cwtl
sar
adc
out
test
ret
mov
sub
xor
mov
hlt
imul
aad
shrl
cltd
sbbl
in
xor
sbb
pop
out
ret
ffree
mov
aas
les
push
xor
jmp
test
sbb
testb
push
cmp
inc
xchg
mov
mov
cmp
sub
inc
jmp
cmp
lock
lock
pop
pushf
push
and
mov
add
mov
dec
and
xchg
ds
lods
mov
pop
rcrl
mov
jl
push
fdivrl
dec
sub
fstps
xor
jg
idiv
scas
gs
sahf
sbb
les
addl
clc
scas
movl
adc
notb
lcall
dec
xchg
cmpl
mov
dec
es
stos
ret
adc
mov
hlt
xchg
sbb
in
icebp
mov
in
add
imul
mov
fsubr
mov
add
stos
adc
adc
aas
xor
test
rorl
loop
adcb
adc
cltd
inc
test
push
hlt
fs
sub
jle
scas
pop
lahf
sub
loop
lock
cmp
or
add
fisubs
loopne
dec
lea
mov
sbb
add
inc
cmpsl
jb
xchg
inc
mov
fldcw
adc
movsb
idivl
sub
cmp
pusha
sbb
xor
ret
xchg
xchg
xor
push
std
insl
xor
mov
cli
mov
dec
cmp
cmp
jmp
push
adc
dec
addr16
xchg
setno
add
and
push
inc
inc
adc
outsb
mov
lods
push
jo
pushf
xchg
loope
pop
xlat
lahf
outsl
in
daa
lock
sub
sub
test
sub
into
ss
adcb
sbb
loopne
fldcw
adc
sarb
jns
movsb
aas
pusha
int3
popf
notl
mov
out
sbb
icebp
jg
sbb
test
test
clc
or
or
adc
dec
popa
cmc
fildl
push
js
lods
dec
lock
lahf
adc
mov
add
mov
inc
or
inc
movsl
mov
je
ss
or
shrb
fcoml
dec
or
inc
mov
sbb
push
sbb
or
mov
sti
loope
pop
aam
pushf
inc
pop
mov
int3
jle
mov
cmp
adc
xchg
or
jbe
lods
add
mov
jnp
inc
mov
push
mov
test
push
sbb
jle
rorb
push
leave
pusha
movl
sahf
inc
enter
scas
sub
xchg
adc
pop
push
pop
lock
push
sbb
sbb
clc
dec
fstpt
sub
mov
mov
js
arpl
pop
addr16
sarb
dec
add
lcall
mov
test
pop
push
sub
add
fidivrl
nop
cld
sub
shlb
jnp
fwait
sub
mov
lcall
mull
fmull
lea
adc
aaa
je
sti
push
cmp
pusha
adc
ja
add
test
jb
mov
pop
repz
rorl
dec
pop
mov
add
lods
adc
mov
or
pop
pop
jl
sar
add
or
outsl
dec
adc
mov
shll
mov
push
test
add
cs
adc
mov
test
xor
ss
ds
push
sbb
fisubrs
mov
xchg
int3
mov
xor
pop
loope
arpl
std
mov
dec
adc
and
arpl
sbb
notb
mov
jb
pushf
push
or
sbb
mov
test
decl
sbb
dec
push
leave
in
loop
sahf
mov
leave
sahf
xchg
mov
mov
subl
pop
mov
cmp
sbb
adc
pop
loopne
fildl
jge
sarl
lock
cs
icebp
pop
sar
sbb
add
mov
adc
add
pop
jmp
cmp
movb
add
movsb
xchg
adc
in
xor
sub
xchg
pushf
dec
push
sub
icebp
jecxz
lock
or
inc
jo
xchg
jge
call
jb
test
inc
sbb
dec
xchg
mov
xor
std
pop
addb
rcrb
dec
fistl
addb
shrl
pop
aaa
inc
add
in
push
jmp
dec
mov
adc
pop
stos
subb
and
mov
xor
call
les
daa
fdivl
les
xchg
in
sub
aaa
sbb
bound
and
jo
pop
mov
sub
and
out
jne
fucomip
add
xchg
es
push
lods
dec
aaa
xor
lret
or
fwait
and
push
mulps
je
mov
aam
pop
lds
lret
lea
cli
jg
dec
lahf
jmp
sti
nop
int3
lret
xchg
inc
add
pop
cmp
lock
inc
movsb
enter
stos
loope
aaa
mov
adc
and
or
add
test
or
lock
push
dec
cld
jnp
jmp
cmp
repnz
mov
cwtl
cli
mov
cmp
andl
xchg
push
in
aad
cltd
mov
clc
mov
mov
mov
mov
mov
stos
sahf
test
lock
clc
rcrb
inc
in
or
roll
fwait
je
popf
into
test
add
cmp
call
dec
stos
and
loopne
mov
mov
mov
jle
mov
fistl
outsl
icebp
movsb
mov
repnz
push
push
cmpsb
xor
clc
dec
or
fwait
jle
xor
or
ss
or
in
push
xchg
or
fadds
test
sbb
add
jb
mov
cli
scas
aas
cmp
inc
inc
xchg
fwait
sbb
lret
xor
shll
imul
jg
xchg
sbb
push
push
enter
aad
sub
popa
sub
add
xor
push
mov
mov
mov
and
and
rclb
inc
ljmp
fs
sbb
add
pop
mov
pop
dec
das
js
push
outsl
aam
cmp
mov
call
sub
xchg
or
iret
mov
or
cmp
aad
push
stos
dec
and
pushf
add
mov
cli
push
jl
mov
negb
cwtl
test
cmpb
adc
sub
stos
pop
mov
cltd
jo
call
cli
mov
dec
decl
or
and
mov
mov
sbb
ljmp
mov
aas
sbb
decl
or
ret
loop
cli
pop
or
addr16
imul
jmp
pop
outsb
jle
mov
movl
mov
or
cmp
stos
pop
sub
std
aad
mov
pop
xchg
xor
loop
pop
add
jo
lret
sbb
fsub
mov
inc
cmpl
push
call
ja
mov
dec
icebp
pop
pop
clc
stos
jno
inc
mov
lods
xchg
sbb
push
cmp
adc
je
jmp
push
loopne
loopne
ds
pop
mov
sbb
or
lret
hlt
loop
sub
in
mov
gs
adc
pop
push
out
push
std
sbb
push
ds
cmpl
lds
or
jmp
xchg
cmpl
sbb
hlt
pop
inc
pop
test
cmc
lods
sarb
scas
mov
ficomps
push
dec
lock
nop
xchg
out
xor
lock
xchg
add
lods
loop
out
dec
sub
jge
andb
dec
mov
add
enter
pop
xchg
jle
and
jp
insb
cld
rol
popf
sbbb
inc
jmp
clc
lods
xor
and
mov
into
cmc
nop
ror
sbb
mov
sbb
mov
and
movsb
adc
xor
imul
dec
dec
inc
adc
add
mov
fisttps
mov
loopne
adc
clc
cmp
mov
popf
push
dec
jne
fistpll
notl
and
or
jae
and
mov
pop
adc
data16
ljmp
mov
nop
mov
jl
test
jecxz
rolb
nop
jns
lret
icebp
xchg
test
mov
psraw
xchg
imul
push
sbb
pop
or
pop
xchg
mov
push
les
or
les
hlt
push
dec
std
xor
xchg
or
movsb
xchg
lods
mov
subb
jle
int3
cmp
jb
xor
test
aam
pusha
jno
lcall
rcl
cltd
xor
xor
mov
pop
fdivr
test
push
jno
add
xchg
lock
inc
test
mov
pop
add
sub
lahf
fcmovne
push
mov
lods
cmc
mov
xor
push
sub
cmpl
inc
pop
subb
cwtl
mov
cmpsb
jmp
cmc
xchg
inc
scas
cmpsl
or
mov
rcrl
ret
outsb
dec
pop
aam
shr
test
jl
sbb
es
mov
xchg
dec
adcl
xor
mov
xchg
sahf
aaa
rcr
sahf
aam
outsl
insb
movsb
scas
pop
int
lret
into
nop
add
in
ficomps
mov
inc
pop
idiv
cwtl
loopne
lea
pop
add
sti
and
cmp
jbe
insb
insb
xor
dec
icebp
mov
xchg
es
push
cmp
push
cli
mov
mov
scas
es
push
mov
cmpl
mov
ret
inc
or
aas
add
add
mov
call
inc
addb
lret
into
push
popa
es
outsl
inc
pop
loopne
and
cltd
pop
sub
ss
adc
out
scas
mov
rcll
cltd
or
pop
shll
test
je
and
push
test
ret
scas
cmp
sub
or
or
xchg
jl
cmp
or
xchg
lret
outsl
pusha
fcomi
loope
shr
sbb
and
cld
xchg
xchg
xor
cmp
push
cmp
imul
xchg
xchg
sub
mov
ficoms
dec
push
inc
mov
aam
test
and
ss
add
add
pop
dec
adc
sbb
xchg
dec
insl
shr
pop
lods
jp
mov
lret
ds
push
enter
mov
xor
xchg
xchg
int3
push
inc
jne
add
and
dec
xor
or
mul
scas
or
mov
sub
pop
stos
dec
and
enter
cmc
sbb
pusha
jns
push
xor
or
xchg
xchg
icebp
xchg
mov
and
cli
es
jge
lea
mov
out
xor
cmp
insb
shr
push
loope
bound
pop
jns
scas
fstpt
mov
fiadds
insw
das
sub
shl
push
pop
xor
jge
cmp
je
adc
xchg
cmpsb
xlat
les
lcall
add
jp
mov
xchg
lret
pushf
fstps
mov
and
sub
mov
push
lret
sti
jl
scas
mov
jb
sub
ret
pop
lahf
popa
lcall
push
sbb
cmpsl
jo
pop
call
psllq
out
push
dec
pusha
jnp
mov
inc
xchg
push
inc
sbb
xor
jbe
mull
es
sbb
insb
jecxz
lcall
frstor
pop
dec
fcmovbe
push
sbb
sub
sub
or
in
adc
jb
mov
adc
pop
inc
ljmp
ficoms
test
or
loope
jno
xlat
jne
xchg
xor
shr
cmpsb
inc
into
imul
cmp
jnp
jmp
sub
push
movsl
inc
pop
roll
cmc
clc
sbb
mov
loop
lods
adc
js
xchg
test
aas
fimull
and
add
mov
aad
add
xor
add
incl
mov
inc
inc
dec
pop
popa
inc
frstor
cmp
or
addb
lods
and
jmp
cmpb
insl
adc
in
or
arpl
add
adcl
rcr
pop
add
daa
jo
and
adc
in
adc
dec
cmp
push
push
cmp
push
fcomps
xor
and
push
jne
mov
xor
jnp
push
test
inc
and
mov
lds
inc
mov
lret
dec
xchg
mov
mov
or
mov
stos
js
mov
xchg
shlb
push
mov
clc
cmpl
jge
call
mov
inc
lret
dec
aas
push
or
lods
out
mov
clc
repnz
in
pop
leave
sbb
pop
adc
movsl
fsubs
inc
cmp
and
xchg
xchg
movsl
outsb
out
xor
imul
jmp
and
jg
adc
pusha
mov
sbb
jmp
int
jmp
add
jmp
mov
testb
sub
jle
or
outsb
loopne
ss
xchg
push
adc
ds
and
dec
fs
mov
int3
shlb
cld
lret
js
jb
xor
push
adc
jo
hlt
rcll
dec
orb
repnz
shll
add
aam
in
and
adc
inc
xor
sbb
fnstsw
insb
add
or
je
sbb
inc
sub
mov
inc
sbb
sbb
ret
mov
adc
data16
add
pop
push
and
test
ja
sub
dec
cmpsb
test
pop
pop
dec
push
outsb
pop
jae
mov
adc
outsb
fst
mov
mov
movsb
push
push
insb
in
xchg
lds
lret
mov
ror
jp
add
call
mov
nop
stos
add
xor
aaa
cmp
xor
adc
pop
mov
pop
jmp
cmpsb
in
lea
xchg
inc
dec
shlb
testl
pop
outsb
sbb
adc
xchg
call
xchg
decb
fnstenv
add
sbb
sti
mov
fmuls
jl
ds
aam
bound
adc
adc
sbb
call
ret
or
mov
stos
mov
mov
nop
daa
mov
xor
xor
lock
dec
js
jp
popf
enter
sbb
hlt
sub
push
ret
je
lods
popf
pop
shlb
sbb
out
dec
mov
inc
add
repnz
mov
pusha
loopne
stos
pop
int3
lods
pop
mov
pop
cmpsb
ds
sbb
inc
cmp
je
pop
ret
call
jno
pusha
inc
lcall
mov
push
push
dec
cmc
loopne
pop
cli
clc
in
pop
mov
movsb
xchg
jle
inc
outsl
mov
and
mov
mov
and
imul
mov
hlt
cmp
movsb
mov
and
call
mov
mov
scas
inc
ss
jb
and
div
mov
daa
add
dec
cwtl
mov
inc
inc
add
pop
pop
adcb
pusha
push
pop
stos
loopne
je
mov
fs
inc
push
std
mov
mov
add
rcrl
sub
int
add
add
add
sbb
ja
pop
mov
inc
cmp
adc
popf
bound
xor
repnz
mov
in
add
mov
add
and
outsl
loope
mov
mov
mov
mov
jmp
loop
sahf
out
add
or
fisttpll
ja
hlt
shlb
lret
and
sbbb
mov
xchg
lods
outsb
int3
mov
lods
cs
stos
jge
pop
cmpb
adc
outsl
dec
push
mov
lock
ss
xlat
pop
aam
popa
jbe
sbb
mov
cmp
cwtl
mov
movsl
loop
rclb
jmp
or
sub
mov
mov
mov
incl
cwtl
sub
orb
shrl
stc
dec
test
shlb
andl
lahf
decl
popa
mov
mov
inc
aas
movsb
dec
mov
pop
mov
or
mov
jno
or
mov
jg
xor
dec
or
pop
jp
clc
icebp
jbe
xor
xchg
fiadds
enter
in
jp,pt
xlat
mov
mov
pusha
test
push
lea
push
int
mov
mov
push
cmp
scas
loopne
fidivl
pop
push
lret
cltd
ret
in
dec
push
decb
mov
sub
add
movsl
xor
loope
mov
orb
sbb
sbb
data16
xor
sbb
jbe
pop
push
sbbl
cmpsb
pusha
add
inc
je
pop
xchg
pop
addr16
popa
lds
and
gs
incl
jp
pop
sbb
jg
stos
nop
shll
or
inc
mov
add
push
mov
dec
lock
cmp
push
stos
inc
pop
dec
addr16
outsl
xorb
mov
incl
sahf
xor
stos
push
loop
pushf
mov
pop
ljmp
js
fcoms
mov
and
xchg
rolb
sbb
fs
movsb
loop
sbb
jnp
and
and
aad
sub
adcb
fidivrl
xor
cwtl
inc
jne
jg
mov
popa
push
add
inc
jae
sbb
push
or
mov
mov
mov
sub
jb
bound
sbb
cmpl
push
les
movsb
or
mov
dec
sbb
inc
sbb
inc
jae
clc
mov
out
and
sbbl
adc
and
les
loopne
xlat
iret
inc
cmpsl
adc
out
add
push
jmp
jmp
loope
scas
fistpll
mov
jno
or
rorb
push
sub
clc
insb
mov
ja
ret
jg
insl
sbb
loop
jecxz
or
icebp
mov
sbb
mov
xor
mov
es
inc
mov
lea
lods
push
inc
imul
lock
stos
scas
nop
lahf
or
lock
inc
push
repz
out
jp
dec
jmp
into
mov
push
insl
ficoml
xlat
inc
mov
shl
je
xor
mov
adc
add
ds
xchg
int
mov
popa
aad
lds
adc
mov
add
mov
xchg
mov
push
sbb
bnd
lcall
jno
xor
sarb
or
add
inc
clc
incl
fsubr
insl
xor
adc
push
or
enter
push
icebp
push
push
mov
lock
es
add
mov
and
add
ja
mov
movb
lods
insb
std
xor
jnp
scas
js
aam
jno
dec
push
sbb
cmp
cli
mov
push
out
mov
xor
pusha
gs
mov
sbb
cmp
fdivrs
or
jnp
mov
enter
decl
sub
jp
insl
dec
loope
popf
mov
adc
imul
cli
dec
xchg
xchg
cli
jg
or
test
cmp
adc
incl
or
push
das
sbb
dec
and
scas
push
pop
mov
loop
ss
loop
loope
ds
dec
das
out
sub
mov
mov
fstl
push
fisubrl
pop
and
mov
clc
out
add
jno
movsb
xchg
mov
adc
mov
jbe
dec
aas
mov
jbe
or
push
pop
adc
jbe
add
sti
jbe
xchg
mov
xchg
mov
push
icebp
insl
add
mov
stos
sbb
sarb
std
and
movsb
insb
test
fwait
xchg
inc
mov
cmp
jp
pop
test
cmp
je
xor
icebp
ss
jl
push
out
mov
add
adc
sub
jl
dec
jne
mov
sub
scas
sub
mov
cwtl
pop
mov
addr16
cwtl
icebp
and
mov
subb
or
aas
and
add
aas
fst
dec
imul
stos
movsb
xchg
xchg
sub
pop
test
or
lock
sub
pop
sbb
or
in
in
sub
sbb
nop
mov
nopl
sar
inc
inc
stos
or
xchg
sbb
ja
sub
add
mov
jl
fadd
jae
or
jbe
xor
lds
sbbl
sbb
ds
mov
cmp
out
cmp
xor
scas
xchg
daa
cmp
and
adc
push
pop
ja
jnp
pop
aad
cmp
not
cmp
call
divl
fcmovnu
insb
push
push
aad
inc
sahf
icebp
push
call
lahf
inc
xchg
cmp
loop
jl
xor
cmp
mull
sbb
enter
es
jmp
xchg
sub
mov
push
clc
dec
leave
xor
jnp
cmp
jl
jmp
jbe
xor
pop
adc
jmp
pusha
divb
loopne
add
push
pop
fnstcw
xchg
adc
xchg
add
in
mov
xchg
hlt
mov
xlat
mov
repnz
dec
test
shl
iret
cmp
adc
mov
negb
add
cld
dec
mov
adc
adc
mov
shrb
and
xchg
aaa
add
mov
inc
mov
cmp
das
stos
mov
cli
and
bound
sub
dec
test
sub
mov
sbb
ljmp
xchg
or
xor
aas
mov
loop
outsb
es
xchg
je
outsb
icebp
mov
sarb
lcall
xor
shll
push
lahf
add
pop
pushf
pushf
mov
adc
jmp
sahf
sub
cmp
jne
popf
mov
inc
popl
shrl
rcrb
es
mov
enter
sti
ja
loopne
adc
addr16
loop
push
inc
popa
pop
sub
lds
out
movsl
sub
push
pop
lcall
add
cli
scas
sbb
lcall
enter
and
cmc
outsl
call
out
daa
xchg
inc
enter
mov
std
pop
ljmp
popa
mov
sub
outsb
pop
movl
jo
fld
jbe
add
inc
sar
sti
and
sbb
jp
jo
inc
call
pop
ljmp
clc
nop
push
push
incl
cs
fnsave
cmp
pop
icebp
xlat
sub
sub
gs
lock
xchg
and
out
push
dec
fstp
ds
and
sbb
ret
pop
cltd
add
inc
std
and
sub
imul
fdivrl
jo
adc
cmp
adcb
push
cwtl
lock
fadds
arpl
add
aam
or
hlt
adc
sub
jno
mov
pop
mov
loop
mov
mov
popa
test
dec
cmp
jmp
ja
dec
xchg
inc
cmpsb
cmp
cwtl
stos
in
xor
aas
pusha
rcll
pop
inc
or
pop
push
inc
lret
in
mov
mov
or
sbb
lahf
push
imul
stc
add
add
cli
xchg
aas
sub
adc
and
mov
add
andb
loopne
xchg
pop
sbb
clc
sub
out
fwait
in
mov
pop
adc
rorb
sahf
fxch
stos
xor
loope
and
imulb
cmp
adc
in
mov
mov
xchg
pop
sarb
push
popa
stos
in
out
inc
in
xchg
sarl
dec
pop
es
jo
push
pop
test
jbe
lock
jmp
pop
out
mov
sbb
dec
dec
or
in
int
xchg
pop
or
push
out
push
or
jo
xor
imul
mov
pop
std
push
mov
lcall
xor
das
fcmovne
xchg
jl
sbb
fnstenv
adc
sbb
leave
xor
or
out
or
ficoms
xchg
stos
push
push
mov
or
subl
sbb
pop
jle
cmpb
mov
inc
ret
test
insb
and
jbe
movsb
pop
jo
aad
arpl
lahf
popa
jne
cmp
inc
and
les
test
add
lea
inc
pushf
fimull
std
add
es
pop
adc
bound
push
imul
int
insb
cld
pop
inc
lret
pop
mov
pop
or
aad
fists
mov
adc
test
sub
lret
lahf
mov
adc
dec
aas
push
rol
inc
lcall
jb
nop
ret
push
lds
add
aam
aad
xor
and
dec
out
mov
ss
pusha
fldcw
add
mov
movsb
test
jge
rorl
loope
dec
add
xor
hlt
mov
sbb
sahf
mov
push
inc
cmpsb
rcll
ljmp
cmc
push
pop
loop
cli
push
inc
mov
test
or
cmp
out
cli
outsl
xor
push
cmpb
and
fcomps
inc
sbb
in
xor
sarl
cmp
mov
mov
push
in
or
add
inc
les
xchg
in
fcmovne
pop
and
push
mov
cs
lret
ds
arpl
pop
dec
mov
cmp
jno
rcrb
mov
fdivrs
push
lahf
add
aaa
xor
add
std
push
and
mov
cmp
inc
cmpsb
xchg
add
and
xchg
or
cld
jp
roll
xlat
cmpsl
cmp
lods
adc
icebp
and
inc
roll
pop
jns
cmp
pop
hlt
ficoms
loope
xchg
scas
ja
pop
pop
rclb
jp
inc
xor
sub
bound
sub
je
loop
mov
fsubrs
mov
aaa
push
insb
and
or
add
push
movsl
xchg
xchg
clc
nop
or
in
cmpsl
sub
popa
add
lea
cmp
popa
mov
cmpsl
cs
popa
fcompl
ljmp
clc
daa
js
unpckhps
lds
loopne
or
or
fcompl
data16
lds
dec
mov
ljmp
sarl
fsub
int3
add
int
cmpl
pop
mov
aad
sub
aaa
jl
subb
pop
cs
mov
ret
lods
pushf
jbe
cmp
out
pusha
pop
in
jne
xor
mov
cmp
gs
std
lock
lock
cmc
pop
add
cmp
sbb
or
jecxz
shl
mov
jb
cmp
cmp
test
or
jle
lock
jle
mov
outsl
xchg
imul
mov
loopne
mov
jge
loopne
jmp
ds
and
inc
lods
mov
jecxz,pt
fsts
adc
into
and
std
test
push
pop
pop
adc
inc
aas
add
call
insb
sti
cmp
inc
cmpl
jg
ljmp
jge
lods
popf
and
lock
pop
dec
mov
decl
sbb
sub
jne
lods
push
mov
xor
push
aaa
mov
mov
dec
outsl
jmp
ficoml
addb
cld
mov
push
aaa
adc
adc
xor
icebp
pusha
dec
loope
jge
outsl
test
call
jb
fnstenv
pop
push
push
xchg
ffree
in
adc
jb
leave
lret
enter
std
jno
or
dec
mov
dec
stos
pop
int3
data16
inc
fimuls
cmp
lock
mov
stos
or
pop
or
aaa
fbstp
in
notl
or
mov
scas
rcrl
fadds
pop
cmpsl
inc
mov
inc
jnp
ss
cmp
mov
mov
push
roll
or
stos
rcrb
std
xor
push
jge
mov
mov
js
cmc
out
push
rcll
mov
push
daa
into
jb
popa
orb
and
adc
negb
popf
sahf
jnp
xor
loopne
inc
fsubrl
xchg
imul
mov
mov
adc
clc
das
cmp
or
pushf
mov
in
mov
mov
pushf
je
mov
push
mov
lods
loopne
insb
mov
adc
xlat
sub
or
inc
jae
es
add
inc
mov
aaa
addb
arpl
add
cld
inc
lahf
cwtl
sahf
inc
xchg
ret
leave
pop
data16
xchg
jp
jb
pop
sbb
int
sub
mov
dec
and
push
jnp
data16
adc
and
jg
cs
lret
lock
push
in
jle
jbe
push
ja
test
pop
inc
andl
inc
ss
in
and
test
stos
in
scas
fisubrs
lret
push
lods
mov
call
mov
fnsave
or
jbe
pop
inc
mov
cmpsb
rol
push
cld
dec
das
or
cmp
add
dec
out
clc
add
jmp
mov
rorb
jle
jl
or
push
out
addr16
xor
dec
push
sub
inc
xchg
cs
or
cs
inc
gs
add
mov
jae
iret
into
js
mov
in
xlat
sbb
mov
int3
dec
test
pop
clc
xchg
popa
cmp
mov
inc
test
daa
mov
test
cmpsl
inc
pop
cmp
fstpl
xchg
sti
pop
add
adc
cmp
rcr
sbb
cld
pop
xor
xchg
jnp
rorl
sbb
aas
test
mov
pop
aaa
cmp
jp
aas
ljmp
cmp
das
rcl
cmp
sahf
insl
xchg
or
lock
or
mov
xchg
add
shlb
jg
dec
jp
aad
dec
ret
sbb
inc
lahf
lock
cwtl
popa
iret
nop
outsl
fadd
adc
add
imul
push
pop
aam
or
lret
mov
add
mov
or
out
cmp
mov
mov
push
mov
push
bound
std
sbb
pop
xchg
pop
mov
push
pusha
cmc
jbe
dec
or
mov
dec
cmpsb
jle,pn
test
packssdw
sarl
mov
adc
cld
out
sbb
or
cmp
sub
inc
icebp
mov
rcll
rcl
aas
xor
and
inc
jge
mov
test
sub
xchg
pop
cs
sub
dec
sbb
xlat
stc
scas
ljmp
mov
cmc
frstor
jecxz
mov
ss
test
sbb
loop
imul
mov
sbb
add
ljmp
mov
es
jge
pusha
mov
lock
shll
pop
pop
jb
cmp
xchg
scas
jo
push
std
rcll
dec
aaa
std
hlt
fmull
fildl
mull
xor
sbb
mov
ret
and
in
shr
mov
sub
jge
js
push
mov
mov
sub
pop
loopne
shrb
clc
sbb
nop
cmp
jno
mov
jnp
imul
js
fistps
jno
cmc
sub
cmp
mov
pop
add
mov
pop
aam
dec
push
lock
mov
mov
mov
push
push
mov
cli
mov
clc
or
nop
adc
pop
loop
rol
inc
xlat
xlat
pushf
dec
test
call
mov
lods
adc
adc
clc
pop
pop
sub
nop
lods
shll
cli
aas
mov
lock
stos
lahf
dec
lds
sub
stos
mov
dec
pop
xchg
pushf
fiadds
rcll
xor
pop
cld
inc
testl
inc
mov
mov
sbb
adc
mov
mov
ret
test
aas
loop
dec
and
add
xor
dec
cmp
mov
inc
mov
pop
fcoml
mov
sub
inc
iret
mov
lock
loopne
fmuls
xor
add
add
test
cmpsb
out
shl
ret
cltd
xchg
mov
outsb
push
mov
inc
jmp
xchg
push
mov
and
dec
test
inc
loopne
pop
je
xor
dec
pop
mov
push
mov
inc
sbb
add
das
hlt
dec
sub
add
sub
sub
or
ret
jnp,pn
mov
das
stos
cmp
out
cmc
or
push
push
jecxz
sub
lret
dec
in
add
xchg
add
xlat
or
mov
in
pop
stos
push
sub
mov
dec
jle
dec
add
mulb
and
or
or
in
mov
stos
adc
pushf
call
imul
jbe
sub
jne
call
inc
cmp
outsb
jbe
xor
and
jl
rclb
mov
daa
mov
cs
ljmp
pushf
hlt
add
mov
and
mov
out
outsb
inc
pop
das
test
icebp
jb
mov
pmuludq
movsb
jmp
cwtl
arpl
mov
ds
aaa
lods
xorl
sbb
push
popf
insl
popf
mov
out
add
and
inc
scas
mov
mov
outsl
out
shl
push
jle
cmp
jmp
mov
clc
pop
mov
hlt
push
loope
cwtl
sub
in
cmp
fsubrs
je
das
mov
mov
pop
dec
and
icebp
fstpt
push
push
insl
sbb
cld
icebp
movsl
movsb
imul
sub
js
push
mov
dec
cmovno
test
vpxor
int
jbe
jo
mov
sbb
fidivs
mov
xor
test
sbb
andb
push
int
pop
push
ret
mov
mov
dec
gs
or
push
xchg
jbe
pop
cli
sub
aas
pop
fistpl
mov
imul
pushf
xchg
pop
xchg
cmp
pop
pop
sbb
data16
inc
mov
loop
dec
add
test
cmp
or
outsl
pushl
ret
ds
fnstcw
cmp
les
xor
insb
add
fstps
mov
mov
sbb
rcrl
das
decb
das
arpl
sbbb
pusha
inc
or
xor
fnsave
aad
mov
daa
cmp
mov
scas
loop
mov
push
test
sbb
mov
jbe
mov
or
daa
cmpsl
je
je
out
cmpsb
or
and
das
or
lds
push
in
sahf
pushf
pop
sbb
enter
mov
aad
adc
jns
xor
rol
dec
aaa
push
add
mov
sub
shrb
add
adc
sub
lock
push
jecxz
push
cmp
xchg
rcll
sub
xor
mov
scas
filds
jle
adc
cmp
push
push
xchg
sahf
inc
mov
in
xor
jl
ret
cmpsb
sbb
sbb
dec
lcall
sbb
insb
sarb
cmp
cmp
xchg
sub
test
push
add
inc
mov
add
mov
bound
cltd
push
mov
or
push
mov
or
stos
push
pushf
mov
jl
repnz
sbb
cld
pop
pop
aaa
pushf
repnz
cmpsb
push
inc
sbb
pop
loop
inc
dec
inc
and
call
je
lret
xchg
shr
and
movb
cmc
sbb
add
test
push
lock
or
pop
cmpb
das
push
pop
mov
test
incl
inc
sbb
add
aam
mov
in
push
mov
inc
add
jp
jo
cmp
insl
mov
xor
push
lahf
jmp
outsl
push
lods
dec
dec
adc
cmp
push
sbb
push
sbb
inc
outsl
sub
lret
faddp
xchg
test
sbb
ret
jp
jno
fbld
dec
leave
rolb
cld
sbb
pop
std
jno
out
inc
xchg
insb
call
jno
push
ljmp
scas
add
lret
sarb
adc
sbb
movsb
lcall
andb
idivl
push
aas
jge
mov
and
jge
xor
lods
call
push
shrl
dec
mov
subl
add
push
xor
add
aas
dec
addr16
pop
mov
push
ljmp
or
adc
adc
jne
add
imul
insl
pop
add
test
test
push
dec
xor
jecxz
cmp
test
pop
in
ja
sub
push
sbb
in
mov
cmc
lret
imul
fmul
add
inc
and
push
push
loope
xchg
lods
popf
test
inc
loope
loope
cmc
sub
mov
mov
push
mov
or
add
xor
mov
dec
lret
mov
adc
insb
test
fdivrs
test
repnz
insb
inc
mov
jecxz
pop
adc
cmpb
mov
addr16
lret
inc
or
add
loop
mov
xorb
cli
sbb
mov
dec
shlb
lret
pop
mov
pusha
clc
add
in
outsb
dec
xchg
mov
adc
fwait
sarb
push
subl
sub
sbb
scas
push
cld
add
jb
dec
mov
shlb
arpl
scas
inc
cmp
mov
je
xchg
fcompl
fcomip
outsb
cmp
mov
ss
call
mov
jo
adc
inc
add
aaa
ret
or
jge
push
adc
mov
or
cld
fadds
xor
mov
xor
xchg
xchg
inc
cwtl
jp
nop
in
cmp
daa
jmp
fcompl
lret
lods
inc
jl
and
pop
notb
mull
mov
dec
mov
inc
sbb
pop
pop
mov
arpl
mov
dec
xor
outsb
inc
xor
mov
test
pop
dec
and
out
cwtl
int
jb
lods
inc
or
icebp
ret
dec
dec
jg
in
sub
sbb
adc
test
pop
mov
mov
cmpsb
insl
sbb
ficompl
clc
mov
push
jnp
mov
dec
adc
or
or
pop
cmp
jg
es
xlat
jo
pop
dec
fcmove
xor
and
in
push
outsl
mov
or
ljmp
sahf
orb
pushf
pop
adc
dec
xchg
nop
dec
mov
cld
filds
in
inc
lret
adc
aas
inc
aad
dec
nop
xchg
call
in
and
xchg
cld
sbb
iret
push
and
je
adc
add
repnz
les
clc
adc
rolb
mov
push
clc
pushf
mov
pop
mov
mov
jnp
outsb
aaa
stos
loope
jns
or
orl
mov
adc
fucom
xchg
or
jnp
cmc
adc
outsb
data16
jnp
stos
ljmp
or
xor
call
jmp
call
mov
sub
dec
mov
call
jmp
sti
mov
fdivs
loopne
jge
lret
repz
lcall
movsb
sub
movl
push
and
arpl
mov
paddw
adc
add
push
sbb
or
loopne
inc
push
out
orb
scas
pusha
xlat
out
out
int3
sub
loopne,pn
xchg
jno
rolb
sti
decb
js
mov
mov
sbb
jb
jns
push
push
mov
mov
rcr
aam
xchg
add
aaa
bound
add
pusha
dec
xor
push
cmp
hlt
in
or
test
jecxz
push
jmp
pop
adc
out
and
jl
jle
pop
shlb
inc
push
sbb
pop
in
cld
mov
in
sbb
mov
mov
add
lea
movsb
add
in
test
xchg
rol
test
sbb
push
or
cmp
fisubrs
stc
pop
inc
adc
jne
dec
sbb
sahf
clc
jne
push
out
jg
loopne
insl
push
cld
mov
and
xlat
sahf
es
imul
hlt
sarb
or
pop
pop
imul
cmp
inc
notb
int
pop
jo
push
les
sbb
jmp
mov
enter
outsl
sub
or
jge
fnstenv
pusha
xor
enter
cmp
add
jbe
mov
fs
or
sbbb
fcoms
push
push
cwtl
fs
gs
cmpb
or
cs
lock
xor
jl
mov
popf
mov
pop
les
dec
roll
insb
sbb
daa
ja
jmp
xor
mov
mov
push
loopne
xchg
jmp
push
mov
mov
or
adc
add
loop
dec
aaa
jl
mov
es
cltd
mov
or
add
xlat
inc
setg
adc
dec
test
lock
loopne
pop
in
mov
jmp
mov
mov
jne
pop
push
mov
aad
pop
jp
mov
cmovb
jle
inc
jnp
sahf
cmpb
cmp
loope
popf
dec
mov
xchg
fsubrl
stc
dec
aam
xor
lock
or
or
bound
popf
or
in
popa
lahf
int3
lock
ffreep
outsl
int3
add
test
add
repz
mov
pop
lock
icebp
movsl
je
cmp
push
sarl
pop
es
and
mov
aas
sbb
push
add
inc
add
add
and
jne
loop
repz
rclb
ss
idivl
mov
bound
out
push
outsb
pop
leave
daa
adc
mov
push
inc
jno
mov
dec
minps
int3
call
mov
lock
clc
pop
ljmp
mov
pop
sub
pop
popf
into
jb
clc
stos
add
push
fcomp
or
fsubs
roll
and
ljmp
jecxz
rorb
lock
sbb
ljmp
xchg
lock
popa
add
inc
cmpsl
test
push
inc
das
lret
test
fistpll
dec
inc
fwait
rcr
sub
mov
xchg
cmpb
mov
or
xchg
cmp
in
push
mov
mov
or
aam
ss
xchg
push
ret
jp
dec
mov
xchg
fildll
movsl
mov
dec
xor
lret
pop
mov
cld
call
sub
cmpsl
call
cli
rcll
ljmp
sub
mov
lods
pop
sbb
and
dec
imul
xor
lods
js
sbb
arpl
jp
add
push
test
stc
data16
jle
shld
lret
inc
fs
push
push
jg
add
fs
dec
xchg
mov
cmp
push
pusha
push
or
mov
icebp
add
push
call
pop
test
stos
lahf
jnp
mov
mov
xchg
jo
in
mov
or
pop
sub
cmpsb
xchg
js
xchg
jg
div
push
cli
mov
incl
inc
aaa
push
in
or
inc
cld
stos
stos
mov
push
popa
jecxz
test
fstpl
jns
ret
or
mov
sub
add
aam
loope
shlb
mov
add
add
sbb
aaa
jmp
jo
jae
cmp
mov
mov
das
jbe
in
js
call
or
pop
cmpsb
arpl
sbb
cmp
add
jo
call
outsb
push
adc
jbe
shrl
ja
cmp
in
xor
arpl
imul
lock
decb
inc
xchg
adc
mov
mov
jmp
adc
fs
jecxz
add
mov
dec
std
or
pop
push
push
cmp
and
adc
fistpll
pop
lret
adc
ret
rolb
xor
imul
fwait
xchg
pop
nop
xlat
xchg
or
mov
cld
das
mov
dec
push
pop
repnz
mov
xchg
push
add
mov
ds
xorl
push
push
int
ljmp
incb
dec
fimull
mov
jecxz
iret
mov
dec
push
xor
xchg
push
mov
mov
repz
loopne
std
sbb
js
xor
fdivrs
push
cwtl
adc
daa
test
insl
loopne
test
jae
mov
xorl
arpl
cmp
mov
rolb
sarl
mov
loop
jne
ret
pop
lret
fisttps
sbb
out
popf
leave
lods
loop
cld
in
movsl
cltd
std
adc
ret
push
xor
fisubrl
mov
xor
int
add
push
add
push
adc
dec
outsl
push
aad
fistps
pusha
xor
mov
jne
pop
xchg
or
rcrl
popf
sbb
test
xor
loopne
roll
decl
jecxz
push
mov
add
dec
cli
or
inc
rol
add
jo
icebp
push
faddp
add
lods
lcall
push
and
push
sub
push
inc
cmp
add
pop
push
cmpsl
loop
rolb
cmpl
dec
out
les
fcomps
clc
mov
out
cmp
jle
push
adc
out
rcr
jge
ret
jbe
push
js
stos
int3
arpl
dec
ja
adc
adc
popa
push
sarb
and
ficoms
xchg
aaa
cmp
cmc
into
add
cmp
cs
push
push
inc
aas
xchg
xchg
dec
mov
add
jo
mov
sbb
lods
or
push
cmp
stos
ss
cmp
inc
add
jo
leave
push
fdivl
flds
dec
push
daa
pop
outsb
loop
sbb
push
aaa
xor
xchg
rorl
ds
mov
and
movsb
cmp
scas
inc
test
inc
inc
xchg
push
jl
scas
adc
popf
mov
shlb
les
push
call
lock
or
mov
cmc
xchg
test
jae
lcall
inc
fmulp
push
sbb
pop
shll
and
and
xor
sbb
rcrl
or
pusha
adc
addr16
cld
das
hlt
inc
bound
in
sbb
dec
in
rcrl
or
adc
mov
mov
add
xchg
je
cmp
scas
ljmp
and
xor
pop
jl
popf
fs
mov
std
ret
lea
pusha
add
fcmovnb
lret
pop
fidivl
sbb
xlat
stos
mov
xchg
xchg
push
cmp
push
das
and
inc
sub
dec
cmp
stos
mov
mov
add
mov
je
and
xchg
fisubrs
call
rcl
mov
or
je
daa
pop
popf
dec
movsl
mov
mov
addl
sbb
lds
test
jnp
sbb
mov
aaa
nop
push
and
clc
std
sub
add
repz
jo
pop
ret
repz
add
jae
xor
cli
imul
mov
loopne
xchg
shlb
incl
jbe
rcrl
ds
mov
or
mov
pop
outsb
inc
insb
inc
xor
dec
adc
lea
pop
push
pushf
inc
dec
es
stos
push
pop
loopne
inc
push
shl
adcb
xchg
jne
mov
adc
jne
or
jnp
or
leave
das
cli
dec
mov
popa
sbb
fistl
push
fadds
arpl
mov
int
mov
lods
fcomps
fisttpll
lret
and
mov
xchg
adc
incl
repz
cwtl
mov
mov
jmp
pop
sbb
flds
sub
pop
inc
xor
out
mov
jae
aaa
stc
fnstcw
jne
cld
jge
jg
stos
push
push
xor
mov
adc
mov
xor
push
ret
mov
sbbb
sbb
mov
inc
lods
fwait
add
cmp
mov
or
mov
test
jecxz
sbb
sahf
incb
sub
add
jg
sub
and
cmp
or
sbb
mov
dec
lods
fiadds
push
inc
loopne
insb
cmpsl
sarb
cmpb
pop
lea
ret
dec
loopne
jp
mov
jge
sub
inc
icebp
sbb
rcrl
lcall
jb
dec
mov
roll
cmc
cmp
sub
rclb
mov
inc
ja
test
and
rorl
dec
push
popl
add
mov
pusha
sbb
add
movsb
ljmp
push
addb
mov
aaa
jle
jnp
cs
fxch
jb
out
pop
sub
ficoml
cmp
and
cmpsb
pop
orb
xchg
in
and
mov
adc
clc
out
jbe
sub
mov
dec
shrb
add
fsubl
push
sbb
push
xor
hlt
add
outsb
pop
push
mov
nop
jge
sti
and
sub
pushf
repnz
and
leave
and
or
std
andl
addb
ret
xchg
ljmp
add
or
or
lods
and
sbbb
push
scas
hlt
pop
imul
test
jle
add
pop
fildl
out
test
xchg
lea
lods
sub
and
jg
mov
push
js
insl
pop
lods
pop
jl
daa
leave
sbb
aas
andl
clc
lods
jecxz
mov
enter
push
call
adc
aad
hlt
pop
mov
cmp
mov
push
testl
xor
in
fs
pop
adc
fcoms
outsl
popa
and
dec
out
cli
ret
scas
add
loopne
adc
sub
pop
sbb
lds
nop
and
jmp
test
mov
sahf
cmc
adc
mov
mov
jo
mov
push
mov
add
and
inc
inc
cltd
std
jg
cld
std
pop
pop
insb
sbb
adc
rcr
push
in
movb
outsb
mov
movsb
fdecstp
test
shll
xchg
adc
jb
cmp
shl
dec
cmc
enter
xchg
aad
mov
loopne
xor
or
jg
mov
and
cwtl
arpl
dec
mov
jbe
adc
fisubl
mov
push
mov
faddp
or
out
lds
pusha
sub
inc
sahf
xor
pusha
jno
dec
pop
cmp
xor
mov
rcr
dec
js
add
cmp
js
jno
sbb
pushf
xchg
or
aad
lods
push
adc
loopne
xchg
dec
cld
mov
inc
cwtl
jp
inc
sbb
mov
es
popa
jecxz
cmp
inc
and
sub
push
fsubrs
es
xchg
cmp
enter
sbb
mov
pop
pop
jo
ss
adc
push
or
rclb
sub
inc
nop
dec
mov
outsb
rorl
adc
mul
testb
mov
call
push
ja
push
stos
test
and
orb
pop
push
shlb
mov
ljmp
outsb
pop
ficoms
rcrb
adc
shll
ret
loop
mov
aas
xor
popa
aad
dec
mov
cmp
popa
jp
lods
xor
dec
addb
fdivrs
push
jae
fcmovnu
subb
mov
sub
sbb
push
cmp
cmp
addr16
mov
mov
inc
push
add
mov
push
add
ss
push
inc
mov
inc
movsl
lods
push
lods
mov
fucomip
inc
jne
mov
addr16
insb
sub
dec
out
add
loopne
mov
pop
leave
stc
mov
mov
in
rcrb
or
data16
js
push
popa
or
xchg
movsl
jns
xor
jb
or
add
sub
pop
xor
cmp
mov
adc
out
mov
ffreep
scas
int3
pop
xchg
lcall
dec
mov
push
movsl
sub
fs
inc
pop
pusha
push
sbb
lcall
cli
mov
or
dec
mov
out
and
mov
fs
sub
cmp
inc
push
loop
loopne
wrmsr
mull
mov
jmp
stos
mov
mov
sbb
gs
lds
or
out
jnp
enter
jl
push
mov
inc
mov
int
in
dec
test
mov
or
jbe
scas
aam
leave
aas
fst
or
add
cli
pop
loopne
js
cmpsb
mov
cmpsb
das
xor
xor
imul
daa
inc
inc
and
push
pop
setl
pushl
pop
cmp
sbb
pop
sub
inc
jnp
jb
xor
orb
iret
rcll
xchg
and
popa
cmc
mov
add
call
pop
mov
or
dec
add
sbb
leave
pop
stos
dec
cmp
call
or
add
cli
aaa
rclb
out
inc
mov
and
cmp
clc
pop
mov
or
icebp
inc
pop
add
insb
das
sbb
add
sbb
in
jle
pop
jge
mov
and
dec
js
pop
or
pop
sub
and
add
je
dec
fmull
push
dec
rcll
push
les
mov
jns
data16
xor
jne
add
loope
adc
sbb
pop
insb
mov
hlt
jmp
inc
mov
mov
inc
xchg
jbe
filds
sbb
sub
cmp
lock
mov
sbb
and
aas
loope
lea
add
test
loope
add
mov
js
sahf
mov
insl
cmp
pop
push
push
data16
or
fwait
xchg
add
jmp
insl
lods
cmp
imul
push
or
aam
or
rolb
sbbl
js
popl
mov
or
out
rcr
cwtl
mov
in
sbb
pop
in
cmp
aad
mov
cli
and
mov
ja
int3
data16
add
inc
stos
and
in
or
int
sbb
inc
sub
rclb
roll
iret
jge
out
pop
adc
xchg
loopne
popf
test
and
jp
and
dec
out
push
stos
mov
cs
add
xchg
js
add
xchg
jmp
rol
aad
mov
imul
adc
dec
shlb
push
mov
or
lock
shlb
lahf
add
outsl
mov
aas
fcomps
sarl
xchg
adc
out
popa
pop
pop
cld
decl
inc
pop
in
test
and
shrb
outsb
movsb
add
sbb
dec
hlt
add
inc
shlb
jmp
sub
lods
test
int3
sti
test
pop
mov
mov
sbb
shll
push
mov
jp
jg
fs
test
loope
xchg
std
mov
mov
mov
ret
push
dec
sub
mov
and
mov
add
lret
xor
adcb
mov
jl
call
push
push
push
mov
gs
pop
ljmp
mov
mov
fisubl
insb
lea
cli
movsl
cmp
mov
mov
fiadds
stc
pop
inc
push
sbbl
stos
sub
jle
ljmp
inc
lcall
adc
sub
inc
mov
mov
sahf
ret
mov
popa
xchg
xchg
sbb
call
in
mov
lahf
orb
pop
dec
jle
in
loop
mov
sub
test
cs
sub
jb
in
sub
lock
push
shl
stc
iret
test
je
call
jecxz
dec
into
cli
icebp
sbb
in
scas
inc
push
dec
cmp
call
add
sub
jmp
clc
mov
pop
add
or
cltd
out
inc
or
and
pop
mov
outsb
inc
jmp
ret
cmpsb
in
mov
jge
add
sbb
xor
push
and
lds
rclb
pusha
loope
cmp
aaa
loopne
stos
loopne
fisubrs
add
cld
mov
aaa
xchg
or
mov
pop
mov
push
lret
jle
or
push
pmaxsw
adc
shlb
int3
jns
or
cld
inc
mov
sub
int3
adc
jecxz
ret
ss
loope
or
mov
adc
movsb
ja
movsb
loope
xor
arpl
scas
xchg
outsl
in
lea
sbb
or
inc
stos
cs
pop
loopne
aas
jno
call
call
mov
mov
aas
scas
cmp
mull
stos
sub
jl
mov
inc
xor
add
in
xlat
or
push
pop
test
xchg
cmp
popf
cmp
xor
jo
jle
mov
xchg
aas
addr16
and
hlt
sub
lret
sbb
ds
jle
enter
fs
adc
sbb
pusha
cmpsb
rcrb
jg
repnz
push
shlb
addl
jns
add
cmp
pop
dec
inc
aad
add
fimuls
or
ljmp
cmp
add
mov
or
push
cmp
xchg
or
or
in
or
push
rcl
and
out
push
cmp
rcrl
rolb
mov
mov
loopne
xor
insl
aas
dec
scas
cs
sub
ret
test
movsb
push
lds
xchg
mov
inc
and
ret
fimuls
mov
mov
fcmove
fisubl
dec
cmp
push
iret
pop
ljmp
lea
jl
inc
cmpb
repnz
mov
inc
push
stos
das
or
xor
pop
inc
push
sub
int
movsb
movsb
aam
mov
bound
icebp
cltd
dec
push
ss
jecxz
call
add
cld
pop
aaa
sbb
mov
push
xor
add
lret
cmpsb
adc
dec
mov
push
sub
mov
ja
arpl
js
push
daa
sub
in
int
jle
adc
pusha
or
sbb
fildll
outsl
add
sbbb
push
push
pop
clc
push
or
sbb
mov
adc
mov
daa
in
clc
hlt
lock
mov
push
xchg
inc
test
out
inc
push
pop
cld
mov
or
adc
inc
push
push
adc
inc
jmp
fbstp
mov
sub
cmovne
aas
mov
sub
rolb
push
jnp
in
push
sbb
adc
or
mov
lock
mov
adc
mov
jo
jmp
mov
dec
ret
adc
hlt
pop
sub
pusha
sub
mov
and
lea
cmpsb
mov
imul
xchg
mov
mov
in
icebp
push
mov
xchg
sbb
jbe
add
ds
mov
shrl
les
popa
hlt
sbb
or
xchg
xchg
and
inc
icebp
dec
push
mov
repnz
lret
pop
popf
inc
jecxz
loopne
movb
pushl
cmp
adc
icebp
pop
sbbb
mov
dec
loopne
lea
bound
out
pushf
pusha
mov
jnp
jl
xchg
stc
mov
jbe
push
mov
test
push
and
repnz
push
data16
ds
lods
dec
aaa
push
push
mov
add
das
pop
test
sub
outsl
mov
sarb
imul
pop
lock
stos
ss
test
repnz
adc
loop
movsb
hlt
push
testl
fwait
ret
push
ss
lods
add
lret
jno
cwtl
js
popa
sbb
ss
inc
sub
rorb
out
or
aam
mov
into
xchg
push
push
daa
rorb
popf
mov
inc
inc
daa
pop
adcl
jle
add
ret
ds
push
xchg
ss
push
mov
inc
insb
je
cmp
je
and
xor
xor
xchg
into
lea
enter
sbb
cld
xchg
sub
add
jae
jo
cmc
adc
shrl
sahf
add
mov
mov
scas
or
lea
cmpsb
and
dec
sahf
push
es
scas
pop
mov
xchg
push
pop
insb
xchg
pop
jl
insb
stc
pushl
adc
and
rorb
sbb
test
fdivr
mov
or
or
mov
sub
in
lods
and
inc
cltd
loope
sub
call
jge
fidivl
pop
aaa
pusha
icebp
mov
push
ret
add
decl
add
xchg
mov
cmpb
jg
inc
add
fstpt
mov
mov
adc
aas
push
sbb
ljmp
xor
insl
and
out
xchg
or
int3
pop
adc
xor
or
pmulhuw
js
mov
dec
mov
cs
lret
dec
pop
stos
cmpsl
cwtl
ret
aam
inc
ret
iret
testl
mov
bound
sub
cmc
xlat
xor
inc
adc
jl
dec
pop
xchg
inc
or
push
or
cld
pop
out
out
loop
ret
sbb
xchg
sub
inc
sub
insb
mov
lock
aaa
rclb
or
sbb
add
fdivrl
testl
push
test
jb
or
clc
cmp
in
add
mov
mov
or
test
subl
data16
cmpsb
data16
pushf
lcall
sbb
jp
out
or
adc
into
push
notl
inc
ss
lcall
mov
fcomps
ja
pushf
dec
notl
loop
sbb
loopne
ret
dec
cwtl
push
shrl
mov
lcall
jmp
and
test
ds
cmovp
sbb
lcall
or
into
movsb
xor
jp
dec
ljmp
sub
cli
arpl
pop
and
sub
push
and
mov
decl
jo
mov
mov
clc
scas
pop
ja
adc
dec
push
in
cmpsl
lcall
insb
lock
pop
and
sub
pusha
cmp
bound
cmp
movb
adc
push
pop
jo
fcompl
in
and
clc
shlb
add
mov
xchg
mov
paddq
mov
cli
enter
nop
jmp
push
call
fldcw
mov
or
sar
or
mov
hlt
les
cmp
test
or
repz
mov
stos
roll
mov
pop
xor
or
stos
dec
call
mov
je
pop
push
dec
jg
add
mov
sub
dec
call
addr16
jb
stos
adc
pop
pushf
out
leave
rorb
jbe
xor
std
ficomps
daa
inc
cmpsl
outsb
js
jno
sbb
nop
pop
mov
sub
sbb
lret
mov
push
icebp
loopne
jge
and
mov
xchg
test
jmp
fdivr
push
cli
inc
xchg
aaa
test
or
cmpsl
sub
andl
ret
push
orl
and
mov
icebp
adcb
and
push
and
xchg
jle
inc
inc
filds
jge
pop
sarb
lret
popa
or
mov
movsb
xor
mov
add
mov
add
punpcklbw
pusha
xor
out
ja
push
fsubs
pop
loop
addb
sub
pop
inc
data16
cli
sub
clc
in
lods
and
popa
mov
mov
mov
leave
xor
inc
mov
push
test
call
pop
in
cmpsb
lock
dec
push
mov
xchg
add
dec
lods
aam
ret
loope
xchg
test
and
into
sub
shrl
loope
iret
sbb
clc
xor
push
out
stos
inc
pop
dec
add
in
sti
test
pusha
mov
push
xorl
pushf
test
test
pushf
push
jb
add
aaa
outsb
mov
sbb
adc
mov
in
inc
rolb
inc
sbb
test
aas
sub
sub
mov
xchg
ljmp
jp
push
mov
sub
mov
xchg
and
jl
pop
fidivrs
mov
sbb
push
dec
popf
rclb
pmuludq
jo
mov
into
test
leave
and
call
dec
mov
mov
xchg
lock
cld
mov
mov
enter
dec
xchg
mov
loopne
push
andb
add
xchg
xchg
movsb
shlb
inc
loope
lcall
sub
clc
loopne
add
pop
popf
mov
aad
mov
call
cmpsl
fisubs
and
push
push
cmp
adc
xchg
movsl
ret
test
jmp
push
mov
mov
cmp
fisubrs
roll
or
adc
push
jmp
out
xor
or
sbb
or
inc
loopne
push
mov
les
js
mov
mov
pop
adc
fsubs
sub
mov
add
adc
inc
leave
call
push
shl
xchg
testb
outsb
addr16
jmp
test
push
xor
push
cli
adc
lcall
jne
pusha
loope
lock
push
and
hlt
push
fnstsw
add
mov
or
aaa
mov
imul
in
mov
cmp
enter
pop
lods
push
inc
js
mov
or
pop
sbb
inc
jae
stos
push
iret
mov
ds
mov
add
add
hlt
ret
das
mov
pop
pop
push
mov
jp
add
scas
jo
imul
and
in
mov
or
sbb
lods
lea
es
jo
cli
dec
psrad
fcompl
mov
ret
sbb
cmp
test
fcomps
or
enter
or
sbb
ss
sarb
scas
loop
call
jnp
xor
lock
sub
inc
pushl
xor
movsl
and
pop
mov
or
inc
pop
fldz
aaa
mov
daa
in
jecxz
adc
pop
loop
push
jmp
adc
popf
std
cmc
adc
fwait
jle
jmp
sahf
sub
jge
jge
js
push
pusha
pop
ret
lcall
mov
aad
loop
mov
push
jnp
add
cmp
das
adc
leave
add
pop
or
cltd
dec
mov
loopne
cli
shlb
xor
icebp
and
lret
ss
movsb
hlt
push
adcl
fcmovbe
rol
daa
out
cmp
and
out
popa
xchg
ds
xchg
add
lods
xchg
jmp
mov
and
cmp
push
cmc
cli
inc
jl
outsb
push
aam
mov
ljmp
aas
push
xchg
cli
fisttps
lods
jp
cmp
int
xor
lods
cmc
popl
mov
push
scas
shl
jbe
xchg
xchg
jge
add
bound
test
ss
loopne
mov
out
pop
popa
daa
dec
rcl
aad
sub
pop
mov
mov
call
mov
cmp
add
cltd
inc
inc
mov
or
sbb
inc
jecxz
push
test
ds
adc
dec
and
inc
roll
ds
sbb
test
pop
sbb
fcomip
inc
sub
dec
lea
popl
into
push
rcll
loope
sbb
lahf
cmp
inc
insb
lahf
cmpsl
ds
dec
add
jne
jg
add
push
aaa
addl
rcrb
jge
pop
mov
mov
loopne
adc
mov
mov
mov
cmp
insl
andl
js
and
mov
test
cmpsb
fisubrl
cwtl
or
xchg
mov
pop
sbb
jae
jle
fcoms
dec
add
dec
mov
push
xchg
jecxz
repnz
andl
adc
xor
orb
pop
push
mov
das
xor
outsl
sub
loop
adc
push
ljmp
jo
cmpsb
adc
push
mov
ljmp
inc
sti
lods
or
fsubrs
jne
stos
pop
inc
cmp
sbb
nop
xorl
adc
in
jbe
cmp
pop
dec
rorl
mov
push
mov
pop
dec
int3
xor
mov
push
cwtl
stos
lods
je
popf
xor
scas
cmp
adc
add
insl
sub
out
out
insb
mov
lea
into
incb
pop
push
xchg
nop
add
pop
add
sahf
add
pop
js
sysenter
lea
pop
loop
cmpsl
xor
data16
les
pop
mov
lds
scas
fsub
push
mov
outsl
aam
dec
imul
sub
fldlg2
mov
push
mov
popa
mov
outsb
jbe
sub
aas
pop
jge
cmpsb
adc
push
aaa
daa
xor
clc
js
ljmp
test
les
add
shl
out
cld
fbld
ret
mov
std
sub
sbb
add
ret
cs
sub
inc
adc
push
popl
loope
ljmp
jg
test
push
xchg
fwait
inc
and
addb
fs
push
mov
push
sub
or
repz
xor
adcb
mov
xor
xchg
jp
stos
mov
dec
add
test
add
pop
test
test
out
out
rcrb
sub
ret
scas
sub
sbb
or
pop
pop
cmp
iret
sbb
xlat
repnz
mov
or
cmp
rcrb
mov
xor
adc
roll
fstl
in
lret
je
das
or
clc
pop
or
jl
xchg
mov
mov
adc
xlat
rcrb
sub
insl
sub
jae
add
jne
xor
cmp
push
lds
pop
sub
in
cld
in
xchg
or
mov
rorb
sbb
xor
mov
gs
ret
or
and
xor
iret
pop
mov
xorb
addr16
dec
mov
lods
adc
inc
daa
jp
fistpl
sub
cmp
xor
jmp
xor
ss
pop
inc
ljmp
ds
popa
dec
shrl
std
fwait
nop
out
loope
mov
je
ret
xchg
xchg
out
add
xlat
sbbb
int3
mov
cmp
imul
call
xor
or
xor
imul
mov
sbb
shlb
mov
and
inc
xchg
mov
inc
cmc
xlat
out
xchg
mov
imul
or
or
mul
sub
and
ret
gs
jo
or
pop
inc
push
push
dec
dec
js
pop
stos
sub
and
cmp
adc
clc
jb
repz
notb
mov
test
pusha
adc
ja
jae
push
xchg
cmpsl
mov
cmp
adc
hlt
and
jg
push
fistpl
or
out
jo
in
addr16
int
clc
add
shll
mov
test
sbb
xchg
imul
mov
add
adc
pusha
lods
mov
movb
iret
sarb
std
xchg
pop
dec
pop
insb
bound
notb
xor
clc
mov
rcll
or
ret
cmp
decl
pop
je
push
or
sti
ljmp
xchg
xchg
imul
jae
jle
and
sbb
mov
xchg
pop
ret
sub
aam
jns
add
add
andb
mov
or
daa
and
and
add
aam
xchg
jbe
mov
clc
nop
test
sub
aam
xor
test
and
or
sbb
jo
adc
jb
xchg
pushl
and
push
or
pop
shrb
rcl
push
and
popf
dec
push
add
push
std
pop
bound
addr16
jno
loop
loope
adc
in
loope
fsubrs
movb
cmp
and
subl
cmpsb
adc
in
lds
jp
scas
sarl
jp
out
mov
out
sub
add
or
call
push
or
repnz
imul
mov
push
cmp
xchg
insl
sub
pop
lret
jp
loope
mov
les
test
loope
pusha
or
fdiv
shll
push
lock
dec
sub
stos
cmpsb
sbb
ret
jmp
mov
sub
pop
pop
adc
dec
jne
and
stos
enter
clc
test
adc
pop
xchg
fdiv
add
push
inc
pop
jo
jmp
test
dec
enter
add
mov
or
mov
cli
popa
push
and
or
in
sub
lods
mov
test
out
cmp
cmp
pop
cli
shll
xchg
js
dec
fildl
xor
mov
mov
add
or
cmp
clc
stos
leave
jge
add
sbb
scas
in
imul
lock
aam
jle
or
cli
int3
call
les
mov
xchg
mov
or
dec
cmp
push
pushf
outsl
repnz
mov
pop
xchg
dec
pop
xchg
push
sub
scas
adc
lcall
cmpsb
rolb
add
push
test
and
mov
or
xchg
clc
dec
jbe
in
jno
and
adc
xchg
and
repnz
insl
fisubs
js
insl
jmp
add
pop
cld
cmp
fdivrl
je
leave
in
mov
pop
add
enter
cmp
imul
mov
pop
dec
or
push
dec
inc
ja
sbb
pop
scas
lret
popa
adc
aad
lcallw
popa
xchg
rcrl
jecxz
std
sub
mov
or
cs
loop
fcmovb
and
pop
add
add
cpuid
pop
adc
jae
mov
test
pop
sahf
les
or
inc
inc
dec
sbb
pop
push
cmp
add
dec
lods
iret
ss
or
sub
xchg
jne
aad
sbb
xchg
sub
test
mov
popa
je
loope
pop
clc
sbb
fmull
dec
aaa
push
jo
push
and
add
out
xchg
fsubrs
das
dec
pop
popf
lods
ss
imul
xor
test
push
sahf
fiaddl
pop
add
sbb
insb
pop
dec
cmpsl
out
add
sub
mov
je
cmp
xchg
pop
add
rolb
xor
push
adc
int3
cli
call
adc
mov
jl
jle
rolb
sbb
push
das
leave
sub
andb
adc
insb
cmp
xchg
cmpsl
pop
or
and
aas
pop
lock
inc
dec
pop
xchg
test
push
imul
into
lcall
jle
out
and
mov
adc
cmp
or
push
push
fldcw
adc
mov
xor
fwait
mov
mov
aam
cmp
jl
inc
notb
je
xor
into
lods
sub
bound
pop
push
push
pop
sbb
aad
aas
leave
pop
inc
mov
daa
jno
adc
rolb
dec
outsl
subl
push
clc
dec
in
mov
mov
inc
pop
hlt
pop
scas
inc
cmp
in
mov
arpl
xchg
insl
shll
addr16
xchg
movsb
cmp
cltd
les
lea
xchg
pop
mov
rclb
adc
lea
sarb
loopne
js
or
aam
fisubs
adc
fcmovnbe
push
ds
pushf
jb
mov
jl
ljmp
adcb
push
mov
adc
shlb
push
mov
loope
test
shl
stos
dec
add
and
adc
xchg
aam
add
adc
cmp
rorl
xchg
cmp
cmp
dec
int3
push
cltd
mov
jecxz
adc
cwtl
das
pop
sbbl
mov
imul
mov
mov
loope
repnz
adc
in
mov
shl
call
xchg
xor
sbb
mov
in
push
ss
ret
sbb
add
dec
lods
or
inc
decb
cmp
cmp
outsl
outsl
stos
stos
cli
fsubs
cwtl
xchg
adc
das
jle
js
stos
bound
xchg
testb
sub
mov
loop
subl
mov
and
ds
jl
das
mov
out
inc
dec
pop
loope
or
xor
dec
xchg
loopne
test
add
in
in
dec
or
in
add
es
je
outsb
testb
and
les
mov
inc
jae
sub
fimuls
repz
aas
mov
jg
shlb
jmp
lds
xor
fimull
rol
and
cltd
pop
cmp
mov
adc
xlat
and
push
fmull
add
ja
lock
aaa
adc
imul
mov
xlat
sbb
in
clc
lret
pop
jb
inc
push
adcb
mov
push
and
pop
pop
enter
test
adc
cmp
rcrb
rcr
cmp
int
pop
push
pop
mov
adc
mov
mov
pop
cmpsb
push
pop
ret
cmp
or
mov
adc
jo
mov
jmp
aad
popa
iret
rcll
mov
jmp
or
or
or
std
cld
sub
js
jg
inc
out
or
xchg
popa
loope
adc
test
dec
sbb
dec
clc
sub
rol
mov
mov
mov
xor
push
pop
jns
cld
cmp
inc
leave
adc
lahf
loop
sti
cmp
cmpsb
pop
lret
dec
add
push
sub
test
fsubl
xchg
lock
mov
push
shlb
daa
pop
sub
xlat
loop
nop
push
lcall
pop
and
mov
popa
loop
push
or
aam
cmp
mov
xchg
pop
clc
jae
movb
loope
pop
jmp
push
adc
add
in
and
xlat
addr16
add
mov
enter
pop
cld
and
sahf
lods
cmp
iret
adc
pop
sub
cmp
inc
nop
jno,pt
xchg
mov
mov
and
xor
pop
cld
xchg
and
clc
mov
mov
mov
jno
add
mov
aam
test
std
xchg
add
or
sbb
sbb
mov
loop
and
and
pop
xlat
or
out
test
addb
cmc
inc
xchg
je
imul
shlb
lcall
ja
xor
in
xor
inc
dec
xchg
xor
pop
aaa
adc
rol
mov
mov
mov
jb
or
fstps
loopne
push
imul
xor
mov
hlt
adc
insb
int3
jp
fs
pop
push
and
imul
sbb
dec
flds
imul
and
inc
jmp
pusha
adc
aas
sbb
add
andb
movsl
lods
adc
cmpsl
sub
mov
shlb
lods
in
xorl
add
and
cmp
mov
add
push
pop
adc
pop
xchg
adc
shlb
movsb
xor
dec
pusha
test
xchg
data16
mov
sbb
sub
ss
push
out
call
fwait
hlt
js
ret
bswap
jl
sbb
rcrb
cmc
cmp
leave
push
adc
sub
xor
ficompl
push
push
mov
or
fldenv
inc
es
push
xchg
loope
in
sub
add
push
mov
pop
sub
push
enter
jp
and
repnz
push
push
lcall
or
or
and
or
mov
test
xchg
repz
push
mov
test
lods
pop
pop
push
clc
and
fmull
mov
in
pop
mov
iret
fs
and
jmp
fsubl
arpl
push
mov
clc
rcr
and
dec
test
fmull
psllw
lea
add
push
mov
dec
jmp
pop
add
rorl
hlt
lods
push
std
add
mov
dec
xchg
pop
inc
mov
testb
repz
mov
repz
mov
lahf
adc
mov
cld
sahf
scas
xchg
xor
sub
stos
mov
jne
popa
inc
stos
mov
inc
jl
movsb
sarl
sarb
mov
mov
xor
insb
inc
divl
mov
or
sbb
stos
xchg
shr
les
xor
aaa
fcomps
sti
cmp
inc
andb
xor
dec
call
mov
mov
jnp
jle
cli
call
dec
lods
icebp
test
arpl
xlat
rol
push
popf
and
jo
mov
mov
push
popf
ss
mov
lock
xor
push
push
stc
and
sub
fs
dec
lock
pushf
xor
repnz
adc
push
jge
cmp
push
mov
loopne
imul
insb
inc
or
in
sub
loopne
mov
jno
stos
jle
data16
mov
rcrb
jne
dec
inc
mov
adc
xchg
negl
inc
jmp
not
aam
push
pop
add
ret
fiaddl
push
dec
ret
jae
out
in
mov
testl
jge
test
pop
jae
les
xchg
pop
mov
lret
and
test
sub
push
lds
pop
ljmp
out
and
test
dec
mov
sub
jp
xor
out
mov
in
nop
subb
shlb
shll
pop
pop
outsb
mov
cmp
sbb
and
cld
in
subl
dec
incl
or
xchg
adc
loopne
data16
std
push
rorb
mov
lods
push
lea
push
jo
fldl
imul
or
pop
ja
adc
loop
js
xor
jecxz
rclb
mov
cld
cmp
jnp
sti
jns
xor
into
or
add
stos
jecxz
out
loopne
mov
cmp
subl
in
lea
stos
inc
insl
xor
nopl
jb,pt
and
inc
js
pushf
call
push
adc
loopne
ret
or
cmp
jne
jle
jge
cwtl
adc
jne
pop
decl
jne
push
xchg
sar
inc
loop
sbb
in
mov
loopne
add
inc
sub
pusha
mov
push
pop
jecxz
dec
nop
sub
in
and
dec
push
add
add
enter
pop
mov
leave
daa
loopne
sbb
dec
cmp
mov
std
insl
jmp
push
mov
daa
mov
icebp
add
mov
jo
add
sub
out
mov
mov
ret
test
sbb
push
lds
mov
mulb
add
sbb
inc
push
addl
mov
push
mov
pushl
sub
movsl
inc
loop
mov
idivb
sub
lret
mov
sbb
sbb
jp
lret
dec
cvtpi2ps
push
stos
int3
sub
fmull
lret
jbe
pushf
icebp
in
xor
sti
lret
push
popa
scas
inc
test
call
push
dec
and
aam
pop
fcoml
negb
or
push
lret
sbb
sub
xorb
insb
enter
jmp
pop
add
lods
insb
adc
inc
sbb
add
nop
sub
inc
add
and
xchg
fbstp
mov
sub
outsl
hlt
and
add
or
loopne
mov
add
cld
pusha
notl
push
pop
stos
and
mov
xchg
mov
cs
adc
jne
jl
sbb
xchg
jl
outsb
mov
ja
ja
cld
inc
ret
pop
pop
dec
ds
sub
in
and
test
lea
imul
mov
pop
push
in
ljmp
mov
mov
sbb
add
nop
das
imul
xlat
sti
je
xor
loopne
notb
inc
dec
insb
add
out
cmpsb
mov
lret
add
arpl
popa
push
scas
or
push
les
jecxz
xchg
inc
mov
mov
call
dec
or
xchg
lcall
xchg
ljmp
movsb
add
add
add
xor
and
lcall
mov
outsb
faddp
and
and
push
and
inc
es
xchg
jl
pop
ds
sbb
and
insb
dec
xchg
inc
mov
lea
out
clc
dec
rcr
mov
scas
test
je
pop
fs
popa
mov
cmp
and
or
or
lds
rcll
jmp
push
iret
cmp
mov
pop
jne
rcll
mov
pop
lret
es
popf
and
and
into
in
insb
sub
dec
rorb
add
sbb
clc
xchg
aam
loopne
xor
xchg
packsswb
cld
mov
adc
dec
jp
mov
leave
mov
mov
pop
js
push
sub
aas
ds
xor
insb
push
xor
cmp
int
or
hlt
pop
cmp
push
mov
add
ljmp
mov
inc
xor
out
sbb
add
cmp
out
sbb
cld
push
jmp
fdivrs
pop
cmp
adc
js
sbb
cmp
lods
cli
aaa
sbb
mov
and
rcl
arpl
nop
out
movsb
and
mov
jb
fcmovb
jno
mov
lds
or
push
push
add
lock
ret
and
pop
xlat
inc
push
or
arpl
inc
add
ljmp
subl
sub
inc
xor
add
mov
pusha
jmp
push
sub
ja
nop
jae
sub
shrl
outsl
and
loopne
sbb
jg
les
mov
enter
pop
ret
movl
dec
pop
sub
in
addl
push
js
mov
scas
mov
rclb
or
es
les
mov
push
jp
cmpsl
mov
pop
rcr
pusha
dec
enter
fs
pop
pop
sbb
jmp
in
popa
arpl
xchg
clc
xor
shll
ficoml
test
sub
mov
cmpsb
sbb
dec
jle
mov
sbb
pusha
rclb
fisubl
jae
mov
sbb
test
ss
aam
subb
jp
ret
mov
add
pop
shr
mov
push
pop
mov
xchg
dec
add
mov
test
arpl
mov
mov
cld
movsl
push
stos
outsl
push
mov
das
shlb
adc
aad
mov
lock
or
mov
jne
xchg
bound
arpl
sbb
sarl
dec
popf
aam
jae
push
cmp
push
jp
xor
int
pop
cmc
sbb
adc
loop
mov
aam
sarb
cmp
testl
pop
mov
sub
neg
and
or
into
sbb
adc
sub
pop
fucompp
cli
pop
mov
je
add
jno
lea
add
pop
sub
jg
xchg
jb
ds
out
xorl
shll
or
mov
add
inc
std
cmp
xchg
outsb
sbb
xchg
pop
cmp
dec
ss
mov
sub
mov
cli
imul
repz
add
xchg
xor
sub
pop
jecxz
fwait
xchg
or
adc
or
mov
or
bound
shrl
imul
push
std
lcall
in
call
or
jecxz
rcll
jle
sbb
sbb
push
push
out
rol
shrb
mov
pop
cmp
push
mov
lahf
ret
sub
insl
fwait
ja
pop
xchg
cmp
lock
fldl
add
mov
jae
xor
push
fmuls
mov
add
popf
add
std
je
adc
mov
cwtl
js
jne
push
scas
add
inc
mov
add
and
xlat
repnz
stos
loop
push
sub
fimull
cld
sub
inc
fsubs
gs
hlt
clc
add
fs
sti
cmpsb
lock
lret
mov
dec
lods
arpl
aad
pop
aam
jl
mov
xchg
sub
ja
lock
fs
mov
push
cmc
lock
movsl
jae
sub
push
xor
mov
jp
sub
add
aam
xchg
in
or
sub
sub
push
bnd
sub
cmc
mov
aam
out
pop
test
addr16
lods
pushf
fsubrs
les
mov
xchg
fsubrs
pop
scas
dec
es
pop
es
popf
add
cmc
loopne
clc
rcl
pop
mov
roll
out
pop
comiss
test
std
cmpsb
xchg
lcall
or
fldcw
add
sub
xchg
outsb
les
jnp
mov
notl
mov
orl
push
sqrtps
push
outsb
lock
mov
add
test
add
mov
cs
adc
cmpsb
ja
push
dec
mov
jg
push
cmp
mov
mov
jae
in
inc
adc
les
cld
add
sbb
inc
push
into
mov
push
inc
rol
or
fwait
add
cli
das
je
mov
in
cmp
sbb
adc
sar
push
repnz
inc
pop
adc
adcl
dec
stos
or
inc
insb
clc
test
aas
add
or
mov
cmp
jecxz
cmc
push
rcrb
roll
aaa
int
int
cmp
call
out
or
mov
xchg
adc
push
adc
std
and
jmp
and
jbe
mov
pop
mov
mov
push
dec
mov
call
lds
insl
out
or
inc
adc
and
cmc
mov
mov
jne
lock
mov
sbb
mov
das
sbb
cmp
in
int
lods
add
sbbl
lea
roll
fmuls
xlat
aad
dec
popa
jl
in
xor
sbb
sbb
rcrb
in
cld
fsubs
orl
sbb
cmp
jbe
fucomp
jnp
add
gs
into
nop
stos
jle
cmp
jge
int3
nopl
cltd
cmp
ja
pop
fs
push
and
fdivrl
dec
mov
jne
loope
adc
bound
jecxz
mov
ja
add
push
jmp
and
jg
dec
fcmovnbe
xorl
mov
cmp
iret
cmpsl
push
push
cld
dec
hlt
mov
push
adc
dec
shlb
xor
pop
xchg
adc
es
push
ficoml
je
insb
data16
xor
orl
mov
mov
movsb
lods
adc
ljmp
lret
and
loopne
inc
aas
sbb
outsl
stc
mov
push
int3
lock
scas
rcll
xor
jge
add
fistpl
xlat
sbb
push
mov
or
test
mov
es
stos
cmp
orb
mov
pushf
mov
mov
sub
sbb
scas
jns
pop
shrb
mov
mov
lds
pop
lock
sbb
mov
movsl
push
pop
mov
push
ds
sbb
int
add
adc
popa
sbb
orl
pop
inc
mov
sbb
in
mov
xchg
dec
pop
add
je
and
inc
ret
addb
aas
mov
bound
inc
or
or
cmp
or
push
push
jp
iret
mov
push
mov
lcall
je
dec
fcompl
push
lea
jno
xor
aas
in
int3
notl
mov
ret
sbb
pop
les
push
sti
lea
sahf
test
jno
roll
incb
scas
push
pop
cmpsl
aad
es
arpl
jb
jns
add
dec
mov
js
ja
dec
pop
push
sbb
loope
int3
insb
out
pop
loopne
or
add
inc
inc
push
loopne
jmp
pushf
sbb
or
cli
mov
jb
sub
pop
out
mov
cli
mov
add
adc
sub
in
push
push
push
scas
cmp
push
sbb
cmp
or
xor
xchg
stos
jne
mov
xchg
dec
mov
inc
cs
mov
sbb
jne
dec
mov
xor
js
movsb
hlt
add
inc
adc
jge
add
cmp
dec
jl
sbb
mov
bound
je
pusha
daa
or
data16
insl
jnp
dec
jae
out
push
in
fs
jl
shld
clc
cmpsl
inc
mov
test
sub
sbbb
xchg
lahf
mov
cmpsb
cmc
jne
rorb
sub
jmp
pushf
mov
lock
xchg
cmp
outsl
and
pusha
or
ficoms
jg
int3
inc
loope
aam
shll
mov
mov
mov
and
push
stos
out
dec
sub
or
sahf
cs
mov
sti
rolb
ljmp
ss
lods
ljmp
sti
push
loop
sbb
cs
mov
lret
shl
fsubs
or
dec
sbb
sbb
xor
or
mov
mov
scas
xor
and
xchg
les
in
mov
test
retw
loope
lods
sbb
fwait
js
cltd
lcall
ds
fisttpl
fs
cmp
imul
daa
mov
or
out
pop
mov
push
je
outsb
adc
adc
jno
rcrb
xor
sub
fwait
sub
sbb
jmp
dec
adc
fcmovnbe
adc
lahf
pop
jo
es
adc
inc
es
sub
mov
and
mov
insb
je
sbb
scas
cmp
inc
jne
cmp
int3
xchg
cli
lock
mov
mov
mov
call
aaa
mov
xchg
je
xorl
cmp
jo
adc
cwtl
mov
into
add
es
sar
insl
loop
push
jno
pop
popa
ss
daa
fwait
or
lods
and
and
aam
rorl
pop
cmp
cmc
xor
das
icebp
push
stc
shll
jl
inc
pop
xchg
leave
or
out
xchg
push
pop
pop
inc
xchg
xchg
xchg
in
push
loop
push
sbbb
les
add
sub
add
scas
adc
inc
dec
pusha
mov
std
out
sub
jae
mov
mov
test
mov
aam
test
inc
dec
inc
bound
cli
sbb
jo
adc
and
push
iret
mov
insl
in
repnz
adc
jmp
iret
ds
mov
mov
xchg
mov
cld
dec
ds
enter
or
imul
test
add
add
dec
mov
aad
mov
inc
js
xchg
js
or
cs
sbb
push
pop
cmpsb
cmp
test
add
popa
push
test
and
push
icebp
aas
ljmp
mov
cmp
lods
cmp
dec
xor
adc
mov
insb
add
pop
mov
and
lahf
rcl
xor
cs
xchg
jg,pn
pop
out
mov
push
and
ja
mov
dec
or
nop
sbb
xchg
sahf
cmp
jge
or
xchg
mov
adc
pusha
and
and
fs
addb
cmpsb
sbb
cmp
inc
inc
popa
add
push
dec
testl
in
ret
cmpsl
andl
jg
out
add
jg
xorb
xchg
mov
mov
and
das
ret
test
cltd
and
out
mov
xchg
xlat
push
lods
adc
mov
roll
add
cmp
imul
les
scas
into
mov
call
inc
mov
push
les
imul
lcall
cmpsb
roll
xchg
jle
xchg
mov
push
kmovw
lret
mov
cmp
jno
dec
add
pop
push
push
mov
sti
sub
aas
adc
sbb
jne
jecxz
dec
jnp
xor
bswap
rol
mov
jl
jnp
rolb
or
pop
aam
jle
hlt
in
aas
xor
add
mov
mov
mov
jge
loopne
call
sbb
sti
pop
ds
iret
dec
cld
scas
xor
pusha
je
mov
insb
aaa
jmp
cmpsb
popa
xlat
sub
out
push
inc
andnps
leave
jg
js
addr16
incl
push
push
xchg
cmp
push
sub
mov
xchg
dec
dec
push
in
ffreep
test
addr16
pop
fnsave
pop
xor
aaa
gs
das
int
cwtl
bound
fcompl
cld
jbe
in
fidivrs
dec
pop
scas
stos
shll
adc
enter
push
in
ja
sbb
cs
sbb
ljmp
mov
or
mov
adcb
and
inc
pop
sbb
sbb
adc
scas
xor
movsl
lock
xor
ss
mov
mov
jno
mov
mov
rorl
mov
push
test
sarb
ss
sbb
inc
add
shll
push
mov
mov
pop
and
outsl
cmp
mov
xor
loope
lods
or
xchg
sahf
add
jle
stos
mov
lret
test
add
rcrl
adc
cld
add
icebp
out
xchg
hlt
mov
bound
cli
insb
cmp
xor
dec
mov
and
pusha
xlat
mov
jecxz
clc
pop
jae
shrb
popa
roll
mov
jno
pop
sti
cli
enter
push
cmp
jg
aas
nop
and
ffreep
add
ret
orps
outsb
sti
mov
sbb
popa
or
cwtl
loop
and
arpl
arpl
xchg
inc
xor
pop
adc
xchg
mov
js
aas
gs
scas
xchg
xchg
je
mov
outsb
sbb
scas
dec
sub
je
xor
adc
hlt
mov
jae
xor
adc
stos
popa
ret
sbb
insl
cld
outsl
mov
sbb
pop
add
mov
repnz
pop
push
add
das
jne
rcl
in
je
xchg
pop
fisubrl
hlt
hlt
insb
loope
in
adc
sarl
mov
into
add
sets
mov
ss
or
mov
hlt
pop
out
mov
ljmp
mov
mov
inc
jae
int
mov
push
in
gs
stos
ljmp
jg
testl
pop
cmp
addr16
mov
ficomps
test
cmp
mov
ret
cli
loope
xlat
mov
cmp
sti
iret
inc
ret
pop
fldenv
int
cmp
sbbb
mov
incb
sub
test
divb
inc
out
sub
ljmp
sarb
and
push
push
movsl
xchg
jg
lods
pop
fwait
jecxz
sub
enter
clc
clc
icebp
fcomps
sbb
push
sub
sbb
mov
loope
pushf
std
sahf
cwtl
or
inc
ret
dec
in
stc
add
maxps
in
cltd
in
test
out
out
jno,pn
add
pop
subl
add
xlat
dec
cltd
adc
pop
mov
sub
outsb
in
shlb
icebp
and
mov
mov
or
push
sub
push
xchg
inc
inc
sbb
test
rcrl
sub
aaa
xchg
adc
lahf
testl
and
cltd
add
popa
sub
jnp
sbb
adc
mov
in
push
jne
jecxz
rorl
push
adc
cmc
xchg
mov
xchg
or
jecxz
sbb
imul
and
adc
fisttps
btr
mov
cmpl
enter
andb
nop
cld
jmp
cli
push
aaa
push
push
mov
add
cli
pop
pop
mov
loopne
int
mov
pop
in
jg
sbb
adc
pusha
gs
das
fnstsw
sbb
xchg
pop
xchg
pop
push
adc
mov
cmp
sub
mov
inc
push
std
imul
ss
adc
xor
sbb
subps
sub
dec
pop
adc
add
inc
or
adc
inc
arpl
adc
movsb
add
sarl
push
jl
sub
cmp
cmp
cmp
sti
mov
int
sbbb
xor
or
dec
jg
xor
push
test
push
fwait
adc
jbe
push
fildl
sub
and
sahf
ret
test
cld
adc
test
out
es
add
enter
adc
cmpsb
out
inc
shlb
in
insb
jl
pop
sub
test
in
pop
imul
insl
pop
pop
shlb
pop
movsl
xchg
xor
dec
push
rclb
push
std
mov
add
ret
inc
fnstenv
roll
shll
ret
xlat
adc
ret
dec
add
sub
pop
and
movd
xor
and
sub
enter
or
cmp
jl
nop
lret
add
fadds
jae
jae
sarb
ja
sub
cmpsb
data16
sub
mov
mov
imul
xchg
sbb
push
or
insb
cmp
hlt
and
icebp
aad
mov
les
mov
sbb
inc
cmp
mov
dec
loop
xchg
outsb
es
push
add
cltd
xchg
xchg
mov
stos
ud1
dec
lods
adc
lock
ja
push
scas
push
lock
aaa
aas
loopne
pop
movsb
add
pop
and
scas
sub
fwait
push
lods
pop
sti
mov
sub
or
cmp
and
movsb
cmp
cld
nop
adc
idivb
jl
xor
push
sarl
mov
jne
xchg
and
sbb
insb
add
jb
xchg
dec
std
pop
scas
jmp
testb
ja
popf
leave
test
xor
js
inc
sti
mov
mov
jl
fisubs
aad
lea
mov
mov
jecxz
or
jle
adc
mov
out
and
add
jnp
sub
mov
loop
rorb
aam
ret
fists
imul
in
pop
out
dec
pop
je
arpl
out
xchg
push
adc
imul
pop
lods
dec
aad
dec
dec
inc
cmp
pop
imul
mov
or
jbe
incb
nop
adc
inc
xchg
negb
pop
dec
pop
in
adc
xchg
push
dec
and
dec
add
sub
mov
push
or
movsb
jp
mov
mov
and
push
mov
cmp
sbb
pop
movsl
cmc
jp
ss
test
pop
push
jbe
movsl
or
mov
push
cli
in
roll
adc
sbb
inc
stos
pop
cli
mov
nop
stos
jo
movsb
daa
adc
and
cmp
into
clc
jno
dec
mov
pop
dec
cmp
inc
and
mov
ret
movsb
pusha
cmpsl
adc
sbb
sbb
imul
or
jmp
xor
into
inc
push
cmp
fmul
pusha
in
test
xlat
sub
rcr
int
lea
mov
push
jmp
popa
inc
pop
cmp
jl
jle
sbb
test
mov
jp
dec
xor
add
pop
xchg
sbb
jecxz
cmp
call
scas
cmc
jae
xchg
xchg
test
movl
or
push
jae
xchg
pop
imul
cmp
push
daa
mov
xlat
out
fidivl
xchg
stos
adc
popa
sub
jo
ret
orl
dec
mov
addr16
push
mov
adc
adc
dec
sub
sarb
popa
add
inc
lock
push
add
ja
push
adc
xor
pop
push
inc
cmp
sahf
add
push
jp
ret
test
pop
scas
ret
and
movsl
xchg
enter
sub
lret
aam
sbb
imulb
push
ss
xchg
add
shlb
lock
movsb
rcrl
cmpsb
sbb
icebp
fiadds
movsl
xchg
movsl
movsl
lds
jl
loopne
xchg
pop
dec
xchg
ja
sbb
insl
cmp
sti
mov
in
shlb
clc
mov
andnps
ja
inc
aaa
xchg
and
faddp
add
dec
sub
fucomip
mov
xor
jns
adc
shlb
out
arpl
in
lret
add
mov
lods
dec
xchg
pop
sub
pop
pop
je
pop
sti
cs
into
jno
cwtl
pop
xorl
in
mov
cmp
push
and
shll
inc
mov
fldt
imul
adc
mov
dec
jge
stos
mov
or
xlat
mov
adc
addr16
leave
jns
add
adc
adc
sti
rcrb
fwait
dec
repz
pop
movsb
loope
call
fildl
pop
jo
pushf
xor
out
mov
test
stos
aaa
mov
jecxz
xchg
xor
dec
sub
fucom
dec
cmp
decl
cmp
int
stc
test
pop
pop
dec
pop
push
imul
pop
sub
pop
jne
and
imul
pop
test
sti
jne
js
bound
or
pop
loopne
cmp
mov
dec
das
cld
adc
stos
pusha
add
xor
push
inc
mov
jne
add
sbb
movsl
xchg
cmp
imul
lahf
mov
adcb
sbb
inc
cmp
loop
pop
jge
xor
imull
mov
pop
and
dec
add
scas
aam
aam
ljmp
dec
mov
inc
scas
dec
cwtl
pop
not
stc
and
push
inc
push
loopne
sahf
ds
dec
cmp
cmp
rcrl
inc
dec
aaa
pop
add
clc
lret
adcb
mov
pop
out
mov
jnp
xchg
arpl
xor
pop
and
sbb
enter
jecxz
lret
or
jno
pushf
test
inc
xchg
pop
movsb
in
repnz
scas
addl
sbb
and
mov
scas
sbb
cmp
pop
hlt
push
xchg
mov
add
inc
insb
push
mov
test
mov
mov
mov
lret
nop
mov
cmpsb
pop
and
xchg
inc
inc
add
test
outsb
call
xchg
and
jae
or
scas
cmpsl
cld
mov
mov
or
jo
fistpl
mov
sbb
sbb
adc
jbe
es
inc
in
test
jecxz
lcall
push
or
jne
xor
lock
mov
adc
scas
ret
mov
into
xor
ljmp
push
add
loop
mov
push
inc
cmpsb
shrb
mov
into
jp
adc
gs
adc
mov
fildll
inc
fucomp
mov
aas
add
cltd
dec
mov
scas
movsb
jbe
cld
mov
clc
movsl
dec
dec
mov
out
jns
test
enter
call
clc
xchg
mov
shrl
mov
lds
fcoml
loope
nop
cmp
test
jbe
addb
pop
mov
hlt
bound
mov
fadd
call
push
xor
mov
push
mov
xchg
pop
mov
sbb
pop
dec
cmpsl
in
lods
imul
jb
lret
ret
sbb
xor
inc
and
out
push
ja
and
and
or
stos
in
lea
or
inc
pop
jnp
jo
dec
jno
test
ret
inc
insb
scas
jno
inc
pop
sub
dec
cmc
orl
enter
or
adc
ja
and
jns
das
outsb
dec
fwait
es
lock
shl
xor
sbb
cmp
add
sub
enter
mov
dec
int
pusha
mov
jl
std
cmc
add
stc
jle
hlt
pop
push
xchg
aas
mov
fdivl
add
les
ss
dec
push
pop
adcl
push
mov
rolb
fimull
sub
shl
adc
pop
js
push
rcr
jl
push
or
dec
inc
push
pushf
sbb
mov
test
mov
nop
ret
clc
jno
pop
push
inc
and
sar
aad
int3
mov
test
aaa
jmp
pop
ds
sub
lea
sub
cmpsl
jae
fildll
dec
mov
push
hlt
jnp
es
jmp
sub
call
push
pop
cwtl
aas
add
xor
pop
lods
jle
adcb
adc
or
pcmpgtd
repz
jp
jg
sbbl
mov
pop
inc
pop
loopne
loop
xor
das
push
test
add
cwtl
movsb
out
sub
mov
ret
repnz
and
data16
nop
sub
xchg
sub
xchg
cli
push
xor
rol
sti
jae
out
inc
xor
movsb
in
icebp
xlat
mov
xlat
cmpb
dec
ja
inc
fwait
sub
add
xchg
mov
enter
and
mov
popf
jle
adc
inc
fistl
stos
push
dec
jbe
push
dec
jp
or
ja
imull
ja
jecxz
adc
call
push
js
mov
cmp
adcl
rorb
mov
or
je
in
repnz
cmc
addr16
mov
or
dec
add
xor
test
mov
imul
aam
mov
iret
jp
lock
xchg
xor
daa
or
push
xor
push
movsb
subb
testb
stos
lcall
mov
mov
gs
fistpl
in
mov
orb
adcb
outsb
mov
adc
out
rol
and
and
jle
loop
inc
dec
ljmp
jp
jno
sarl
mov
pop
mov
jo
xchg
cmp
dec
stos
out
ds
mov
in
push
and
sbb
sar
jo,pt
insb
mov
in
mov
sbb
ret
add
add
pop
adc
int3
das
sub
imul
les
rolb
fcom
aad
inc
push
add
loope
mov
fldt
test
sahf
addr16
add
pusha
add
jl
jl
mov
xor
xor
jno
out
or
rcr
test
dec
insb
int
cmp
psubb
sub
mov
cli
pop
pushf
jnp
scas
dec
cmp
mov
adc
dec
lods
frstor
addr16
jnp
and
xlat
sub
sti
out
clc
xchg
push
sbb
paddsw
jle
ja
leave
pushf
data16
push
pop
js
mov
clc
lods
xor
mov
mov
jge
add
or
lock
sbb
pop
dec
add
ja
in
mov
lods
jl
test
ret
push
aam
sahf
popf
cmpsb
add
mov
stc
dec
cmp
push
jl
aaa
aas
push
jecxz
sbb
xchg
add
enter
push
sarb
pop
bound
jb
pop
bound
in
mov
push
dec
clc
pop
mov
fimull
adc
add
dec
aad
sub
sbbl
push
leave
push
into
clc
fisubrs
adc
int
and
bound
scas
sbb
jno
cwtl
sub
mov
pop
xor
inc
jp
fldenv
inc
adc
lods
push
sub
outsb
jle
clc
push
test
in
aam
cld
push
mov
sahf
sub
mov
push
lret
add
or
sub
pushf
inc
daa
out
cmpb
rol
pusha
add
mov
dec
pop
jge
push
pop
or
test
out
rolb
imull
mov
ljmp
clc
mov
xchg
rcr
and
jo
jno
xchg
sub
rcrb
dec
pop
test
test
mov
jbe
mov
out
movsb
push
or
cmpsl
push
and
leave
lahf
sahf
fwait
sahf
sbb
xor
jne
faddl
std
test
das
insb
pop
xchg
adc
pop
pop
sbb
inc
or
lock
or
xor
sti
sbb
icebp
int
inc
push
push
mov
pop
test
je
pop
mov
in
cmp
push
mov
and
rcll
lret
rorl
std
shll
std
sub
inc
inc
mov
cmp
jp
inc
les
lods
loop
xchg
xor
aam
sub
push
int3
xorb
or
out
add
and
sbb
into
fwait
mov
add
js
push
inc
shlb
mov
xchg
and
sub
add
mov
mov
add
lock
into
cmpsb
int3
ljmp
call
or
push
fnsave
cmp
add
xor
movsb
xor
adc
pop
in
cli
dec
in
fnsave
fs
cli
xchg
xchg
cmp
jo
lcall
rclb
rolb
testl
shlb
pop
pop
ret
fsubp
stos
daa
sar
push
lahf
pop
lock
les
stos
mov
aas
pop
subl
test
or
cmc
pop
fbld
fimull
rcrb
out
mov
sub
jb
push
mov
repnz
insb
jae
lahf
jo
add
push
gs
adc
aam
leave
push
orb
mov
dec
and
ja
push
sbb
push
add
aas
out
stos
pop
shlb
pop
ljmp
inc
jo
jae
in
shlb
incb
mov
loopne
pop
orb
mov
aam
jecxz
dec
fmull
mov
and
pop
mov
pushl
lret
icebp
push
je
mov
push
movsb
test
imul
mull
mov
mov
cld
xor
icebp
cli
mov
mov
loopne
pop
aas
outsb
mov
cmp
mov
jg
int3
into
enter
in
mov
loopne
sub
sbbl
jns
stos
mov
push
pusha
mov
inc
sbb
mov
mov
jl
add
shlb
push
pop
mov
fcmovu
jmp
scas
rol
xor
stos
push
mov
cli
pusha
add
dec
adc
sbb
push
inc
mov
loop
enter
jge
adc
loope
sub
js
xlat
movsb
adc
clc
sysret
in
add
loop
rclb
into
imul
add
adc
sahf
aam
aas
ss
push
and
push
hlt
pusha
lret
jg
roll
imul
clc
and
add
add
cld
push
cmp
icebp
test
rcl
ja
dec
in
and
dec
std
jns
lds
push
test
leave
inc
jmp
or
mov
mov
std
push
dec
jne
mov
repnz
sahf
or
popa
std
jl
add
lods
lods
sbb
fisubrl
ljmp
sub
in
and
xor
pop
rorb
or
mov
xchg
in
or
push
sub
pop
nop
or
inc
inc
imul
add
adc
sbb
mov
enter
repz
lods
and
mov
pushf
jb
push
popa
jmp
mov
stos
nop
mov
mov
loop
add
js
movl
cmp
je
aad
imul
cmp
outsl
ret
jno
hlt
lea
pushl
addl
sbbb
jnp
sub
push
jg
dec
adc
cli
jb
fst
mov
js
daa
or
push
dec
push
sti
or
add
or
das
jno
aas
jbe
mov
stc
scas
dec
std
jae
push
inc
add
or
jno
ficomps
jnp
jnp
mov
jae
add
shrb
jp
jmp
ss
aam
push
sbb
add
adc
xor
in
sub
in
pop
stos
mov
pop
xor
jno
dec
push
notl
not
scas
test
sbb
mov
imul
sub
lock
xchg
lock
repnz
imul
pop
stos
push
or
bswap
in
xchg
fiadds
dec
movb
repnz
fiaddl
loopne
pop
mov
sbb
clc
xor
jl
cmp
jl
dec
push
mov
dec
pop
sbb
mov
xor
pop
inc
jnp
mulb
test
mov
popl
jo
push
ret
repz
ret
ret
mov
mov
lods
shrl
pop
imul
popf
dec
xor
adcl
mov
push
pop
aas
mov
out
sarl
fdivrs
rclb
cld
push
mov
arpl
inc
cmp
xor
mov
ret
shlb
pop
cs
pop
stos
mov
inc
push
daa
sub
lods
add
insb
mov
mov
xchg
movsb
mov
subb
mov
ficoml
ret
cmp
xchg
pop
sbbb
dec
stos
xchg
dec
les
repnz
inc
popa
std
push
int3
xor
sarl
ss
push
adc
cli
or
js
xchg
mov
adc
xchg
cld
xor
push
adc
hlt
xchg
cli
mov
pandn
sahf
pusha
fnstcw
pop
cwtl
inc
shll
into
ljmp
rol
pushf
dec
scas
pop
movsb
ucomiss
in
sub
mov
jnp
mov
popl
outsb
sbb
test
icebp
icebp
in
in
test
xchg
dec
movsb
insl
sbbl
arpl
stos
movsl
xchg
shl
loopne
push
incl
decl
cmpsl
push
xorl
sub
inc
jb
or
imull
cmp
mov
je
ret
mov
dec
ficomps
mov
and
fwait
lock
xchg
test
leave
pop
pop
jns
lock
cmpsl
pop
dec
mov
leave
and
and
jle
lret
ret
add
repz
inc
stos
add
sbbl
loop
and
jo
ret
xor
call
and
pop
imul
in
sub
cmpsl
and
mov
inc
add
pop
outsl
mov
sbb
lods
adc
int3
fsubs
aaa
push
dec
in
movsb
mov
cli
xchg
out
stos
xchg
cmp
push
hlt
jle
add
dec
xchg
mov
add
pushf
movsb
test
mov
je
sti
arpl
cmp
sahf
mov
cmp
jae
mov
cmp
pop
dec
mov
ret
mov
push
and
xor
jle
js
add
mov
loope
es
inc
inc
dec
mov
test
nop
mov
mov
popf
push
out
mov
xchg
dec
xchg
or
push
fsubrp
loopne
dec
inc
es
int3
decl
das
in
xchg
repnz
dec
push
faddl
mov
adc
mov
iret
push
js
movsb
push
scas
push
test
fistpl
rcrb
cmp
dec
pusha
inc
xor
mov
mov
fnstenv
xchg
xchg
incl
pop
es
xchg
lods
es
cmpsb
sub
mov
push
cs
iret
xor
rclb
mov
push
xchg
mov
mov
add
aas
cmp
inc
icebp
aaa
sbb
xchg
in
cmpsb
sahf
lods
pop
fcmovb
inc
cmp
xchg
aam
inc
mov
lds
lahf
dec
pushf
xchg
mov
mov
std
ljmp
idivl
add
or
jbe
push
xor
adc
add
xor
jge
adc
and
pop
inc
sub
mov
fs
out
push
cld
mov
or
in
test
aas
and
pop
add
rclb
jo
or
jmp
fisubs
shl
rorl
getsec
lock
and
testb
mov
or
xchg
or
sub
sub
mov
scas
loop
in
mov
fsubl
scas
lds
sar
adc
pop
jo
mov
test
mov
mov
push
mov
scas
std
push
lds
lock
sub
fstl
cmp
push
sahf
fidivrs
mov
jb
lret
mov
mov
cmp
movsb
lds
mov
mov
add
sbb
push
cmp
adc
call
imulb
or
or
xor
dec
xchg
popa
xlat
jecxz
cmp
mov
add
mov
or
out
dec
adcb
aad
jmp
mov
sub
jne
test
cmpsl
cmpsb
out
add
mov
orb
enter
ja
repz
js
ja
jo
ret
cmpsb
and
rolb
fwait
js
add
outsb
pop
icebp
pop
pop
ja
fisubrs
mov
fs
loope
lret
jg
cmp
fcoms
mov
push
fwait
pop
push
testb
rorb
or
push
adc
test
jo
into
loopne
inc
add
arpl
xchg
jle
aam
and
aaa
mov
sbb
daa
mov
add
lods
scas
das
or
cmpsb
jae
dec
xchg
pop
adc
movsl
frstor
imul
cmp
inc
xor
push
jo
pop
and
ds
dec
or
push
aas
and
jp
xor
inc
xor
pop
daa
insb
cmpb
mov
addl
cwtl
xchg
or
pop
cmc
cmpsb
jno
cmpsb
dec
sub
in
lds
add
pcmpeqb
mov
or
or
jbe
adc
xchg
pop
pop
testl
andb
xchg
cmp
rolb
mov
in
in
push
cmp
dec
add
in
sub
test
test
or
cwtl
pop
push
ljmp
and
stos
jmp
ret
xorb
jl
lods
dec
lock
add
and
mov
xor
xor
clc
inc
insl
jle
xor
dec
push
mov
adc
dec
pop
lahf
inc
fistps
icebp
sbb
sti
movb
xorl
scas
and
daa
push
mov
mov
aas
test
addr16
aam
push
add
dec
insl
and
or
icebp
jnp
popf
test
ljmp
int3
jb
pop
subb
dec
hlt
inc
mov
je
sahf
mov
jmp
xor
add
xor
testb
xchg
xchg
push
inc
dec
dec
mov
in
lahf
adc
cmc
dec
or
and
in
mov
pop
sbb
lock
add
jmp
es
inc
clc
aaa
push
mov
stos
sub
fstpt
or
mov
in
rolb
fildl
mov
aad
idivb
or
mov
mov
add
jmp
mov
xor
fs
out
jo
lock
add
lret
xchg
push
gs
push
push
mov
test
movsl
scas
push
or
shrl
fistps
aaa
push
cld
cmpb
mulb
fsubrs
pop
jp,pn
and
cli
data16
shlb
mov
sarb
add
in
outsb
cmpl
push
inc
cld
inc
mov
aas
and
sub
lret
fisttps
mov
clc
shrl
pop
push
xchg
cmp
mov
arpl
ds
and
push
xlat
lcall
lods
popa
xchg
pop
shrb
push
push
pusha
jmp
mov
lods
fnstcw
pop
loop
loopne
stc
aas
iret
or
jb
jns
push
subb
rorb
into
pop
inc
cmp
mov
xchg
lcall
loope
mov
inc
out
inc
ret
and
ljmp
mov
sub
rorb
sbb
push
push
or
xor
mov
inc
cmpsl
ds
lret
sarb
mov
dec
and
xor
ficompl
mov
out
testl
adc
ja
add
push
fsubr
sbb
push
push
mov
gs
inc
enter
mov
aam
cmp
hlt
xor
inc
inc
pop
add
int3
mov
rorl
nop
cmp
cmpsb
loope
out
and
mov
add
sub
push
and
lret
fldl
loope
leave
cmp
mov
fidivrl
es
add
fsubrp
dec
fiadds
ret
hlt
cli
aas
mov
jns
xor
stos
repnz
push
mov
xor
pop
push
js
mov
out
dec
pop
jns
insl
jecxz
add
sub
dec
movsb
pop
jg
in
push
test
cmp
movsb
dec
test
add
jl
mov
mov
fnstcw
xchg
push
mov
pusha
add
or
sub
cmp
test
dec
gs
fmuls
mov
outsl
pop
and
sarb
jae
das
add
lods
push
mov
adc
in
sub
ffree
repnz
fsubrl
outsl
inc
in
xchg
mov
dec
xchg
xchg
out
mov
scas
pop
and
fsubs
dec
in
loopne
mov
loopne
add
dec
add
lret
in
arpl
loope
daa
sbb
sub
es
fwait
inc
mov
sbb
movsb
in
or
cmp
test
dec
or
pop
xchg
das
les
lea
xor
lret
cmc
and
mov
sub
inc
sbb
insb
test
add
and
add
sbb
push
mov
mov
adc
jo
and
push
pop
or
push
punpcklbw
mov
xchg
or
push
nop
mov
xchg
xchg
inc
ret
test
leave
or
imul
cli
repnz
lcall
mov
sub
test
pop
adc
mov
cmpsb
popa
repz
testl
int
jle
pop
rorb
mov
push
mov
aam
test
adc
mov
mov
lods
sub
mov
aam
mov
pusha
cld
js
mov
out
or
add
cli
add
sub
aas
mov
sbb
xor
sbb
jecxz
mov
xchg
jle
push
xchg
xor
lahf
add
add
js
push
inc
pop
movsb
mov
ljmp
roll
in
pop
fcmovbe
push
incl
xchg
lea
pop
mov
jg
movsb
mov
addr16
ljmp
clc
add
mov
jle
clc
inc
insl
push
fstpt
sub
scas
dec
sbb
pop
nop
inc
add
roll
bound
xor
xor
adc
push
cmp
mov
dec
aad
or
cmc
clc
xchg
add
mov
inc
sbb
adc
adc
lds
add
in
stos
stos
adc
sbb
cmp
mov
int3
cmp
jmp
das
data16
adc
jp
cld
xchg
ljmp
mov
mov
ss
mov
std
pop
jno
stos
ficoms
or
or
and
or
pop
push
repnz
fs
fucomp
inc
mov
mov
jg
xchg
mov
sub
into
ljmp
sub
inc
adc
push
in
popf
push
or
ss
push
rcrl
adc
lcall
lret
lahf
jmp
jno
push
mov
jl
pusha
iret
pop
or
jbe
add
jle
out
adc
clc
xchg
sbb
repnz
adc
in
arpl
shlb
adc
jb
or
push
aaa
xorl
jbe
xchg
mov
mov
adc
xchg
mov
insb
imul
dec
and
mov
in
imul
aam
loopne
or
pop
ja
ja
in
shrl
push
js
in
mov
xchg
lea
add
adc
cmp
outsb
sbb
bound
push
pushf
xchg
mov
jno
sbb
sub
add
jo
lcall
mov
pop
jne
xor
andb
push
jmp
sub
pop
jns
mov
sbb
subl
add
mov
push
dec
inc
or
loopne
pop
pop
dec
xchg
and
mov
bound
popa
cmp
sbb
sar
pop
je
std
pop
je
inc
dec
xchg
ljmp
fmull
enter
xchg
inc
lock
hlt
fs
push
insb
sbb
pop
stos
or
std
sbb
aas
add
out
pop
xor
inc
adc
adc
cmp
or
sti
test
aad
push
ja
fdivrl
mov
xchg
jecxz
push
mov
ds
les
mov
add
clc
lahf
xor
jge
fnsave
cmpsl
nop
mov
movsb
fwait
mov
addb
aam
sbb
cld
mov
test
outsb
xchg
imul
fbld
cmp
les
arpl
mov
adc
and
mov
push
sub
mov
pushf
movsb
loop
pop
clc
pop
jne
mov
mov
sub
fdiv
test
and
dec
testl
inc
inc
sbb
aas
pop
adc
adc
std
adc
lds
hlt
jecxz
sbb
lahf
xchg
dec
into
test
imull
push
inc
inc
cmc
and
out
add
gs
les
out
add
dec
popf
and
mov
arpl
cmpb
add
mov
cli
inc
or
mov
inc
sub
ror
add
adc
in
rcr
jo
fcmovnbe
add
pusha
mov
pusha
or
pop
or
jg,pn
ja
push
data16
rcr
fisubrl
pop
cmp
inc
push
inc
mov
xchg
and
std
add
or
int3
inc
cmp
das
xor
add
adc
lock
hlt
adc
or
adc
mov
sarb
cmpsb
mov
pop
addb
outsb
enter
dec
push
or
das
and
push
jle
cmp
cmp
pop
loopne
pushf
xchg
mov
push
ret
mov
int
jbe
ret
inc
add
jge
in
repnz
imul
jp
pop
mov
cmp
loopne
movb
dec
add
fwait
in
sbb
and
xorb
mov
ffree
test
dec
dec
fadds
inc
int
mov
or
jo
or
inc
add
adc
pop
ljmp
outsb
outsb
loope
out
cmp
push
cmpsl
lahf
cs
pusha
add
mov
js
sub
ljmp
cmp
test
mov
push
loope
insb
decl
xchg
xchg
cmp
jnp
rorl
mov
lds
push
add
test
aam
mov
sub
inc
fnstsw
and
push
aam
mov
daa
mov
cmpsl
xchg
shlb
adc
jb
xchg
fcom
cmc
push
rclb
pop
movsl
push
or
jle
pop
or
cs
lcall
xchg
and
mov
jp
js
icebp
jo
fs
hlt
sbb
clc
cli
cmpsb
push
cld
fwait
icebp
jbe
test
je
ss
addl
subb
mov
pop
jo
jo
jb
mov
pop
cmp
mov
lret
dec
mov
shrb
pop
aaa
add
jmp
fisubrl
ficoms
nop
xor
in
addb
out
lock
and
mov
sub
scas
mov
mov
je
push
adc
push
jae
mov
pop
mov
add
dec
xor
out
mov
or
test
out
mov
mov
xchg
jo
dec
das
cmp
xchg
loope
je
push
fcomps
ret
jbe
mov
loopne
push
cmpxchg
lret
mov
push
scas
daa
sub
es
jl
adc
faddl
jo
imul
push
push
mov
push
jmp
add
mov
pop
pop
inc
shlb
jp
outsl
jg
cmp
push
inc
cmp
std
mov
fisttpll
xorb
andb
jmp
in
xchg
jg
mov
pusha
loopne
xor
pop
lods
push
fldl
aad
xor
clc
daa
cmp
push
and
pusha
sub
aad
divb
int3
js
mov
subb
pop
aam
push
jb
into
jmp
inc
fwait
sbb
cmp
jne
inc
nopl
rcr
call
pop
das
xchg
xchg
das
cld
and
adc
cmp
jne
mov
cld
or
inc
and
jle
cmpsl
jbe
mov
and
mov
mov
shrl
cmpsl
lea
pop
cwtl
push
les
lock
loop
jne
and
dec
pop
add
shl
incl
movsw
add
add
loope
push
sbb
mov
adc
adc
stos
out
je
push
loope
mov
jp
decl
mov
mov
jge
addb
test
repnz
setle
lock
and
or
mov
jns
imul
leave
add
mov
inc
lret
push
sub
sub
add
or
stos
lods
repnz
adc
pusha
ljmp
sbb
or
aaa
jecxz
insb
xlat
iret
cmp
mov
jle
push
pop
and
or
divb
mov
xor
cmc
movsb
adc
icebp
in
xor
cmp
or
xor
shr
or
push
shll
and
ds
sbb
test
inc
pushf
adc
addb
ret
lahf
add
and
inc
or
jle
sub
cmp
cmp
hlt
das
push
cli
xor
add
push
fidivl
cltd
pop
inc
test
and
in
mov
shrl
aad
les
sbbl
xchg
jge
cmp
jmp
rclb
aam
add
pop
dec
gs
test
or
push
adc
cmp
js
rclb
fisttps
test
mov
mov
ja
insb
aas
test
testb
xlat
mov
cmp
push
dec
or
jbe
and
sub
cmpb
int3
or
test
sub
cltd
clc
ss
xchg
or
imul
sbb
mov
pop
inc
pop
and
cs
dec
mov
fcompl
mov
mov
mov
push
push
les
aaa
or
loopne
scas
into
or
popf
lods
mov
ret
cmpl
sahf
sub
mov
push
out
sub
push
out
sub
xor
add
or
pop
dec
or
into
orb
add
adc
lds
push
pop
and
mov
daa
iret
sbb
mov
push
in
std
test
mov
pop
add
mov
jl
jecxz
popa
xor
pusha
mov
jbe
ja
pusha
xorb
dec
mov
jecxz
xor
mov
dec
adc
xor
or
sub
outsb
add
aam
dec
and
cs
pop
rcrb
inc
popa
pushf
add
cs
xlat
test
push
cli
fstp
bound
nop
pop
cmc
rcl
dec
adc
or
push
ljmp
in
mov
mov
mov
lcall
cmpsl
mov
sub
push
inc
sub
push
push
arpl
and
sbb
in
add
sub
shrl
rorb
jae
je
fwait
scas
mov
call
orb
jle
std
mov
push
dec
jo
and
mov
sub
clc
out
ret
mov
jge
imul
or
mov
stos
addb
divb
in
pop
roll
insb
das
es
js
in
pop
outsb
out
pusha
mov
jnp
sbb
mov
insb
ljmp
test
aad
icebp
xchg
add
enter
add
aaa
mov
mov
inc
out
dec
add
add
mov
dec
ret
jp
pop
scas
or
sbb
add
xor
leave
ret
xorb
mov
xor
rcrl
push
cld
xchg
add
mov
or
cmc
stos
call
dec
in
testl
mov
rol
pop
dec
jbe
xchg
sbb
outsb
repz
test
sahf
subl
jge
jecxz
add
push
lds
xchg
call
aam
xor
test
aaa
pop
add
outsl
cli
sub
sbbb
cwtl
add
jl
cwtl
inc
loop
addr16
test
sub
aam
clc
shrl
cli
jbe
rclb
fstps
sub
jge
add
dec
dec
cmp
inc
ss
fildl
pop
add
decb
fcmovnbe
stc
std
mov
and
mov
mov
lock
aas
bound
ror
sub
cmc
lcall
inc
inc
add
xchg
xchg
sub
sub
xchg
mov
insb
add
lahf
add
sbb
pop
sarl
loop
js
out
xchg
cmc
push
movsb
dec
pusha
mov
and
lret
rorb
inc
lret
sub
or
daa
add
add
jle
inc
inc
stc
sbb
mov
pop
shll
popf
push
mov
fcomip
jecxz
xor
leave
sub
cwtl
aam
inc
push
fwait
sub
addr16
iret
shlb
pop
mov
jge
pop
adc
xchg
lret
mov
and
add
sar
movsb
sbb
sub
lock
mov
incb
inc
dec
and
mov
sub
jge
adc
lea
or
addr16
dec
movsb
add
fdivrl
or
or
mov
add
test
inc
cmc
cmp
jle
pushf
sbb
cmp
fnsave
sub
rclb
inc
repz
aaa
cmovbe
mov
push
push
sbb
jge
jge
icebp
or
fistl
test
inc
jnp
ss
add
dec
mov
add
push
imul
hlt
xchg
fs
pop
lods
fs
and
jp
ret
and
shlb
pop
pop
add
inc
mov
cltd
popa
jno
stc
or
test
and
jo
je
sti
call
sub
inc
push
sti
mov
jge
sub
pop
cwtl
cmp
and
xchg
aam
jo
jl
addb
mov
dec
push
and
lcall
xor
jae
cwtl
sbb
ds
test
rclb
or
add
leave
sub
push
cmc
and
sbb
ja
mov
mov
lock
pushf
stos
sbb
std
je
jb
sbb
pop
rorb
add
jge
adc
cmc
idivl
xor
cmc
sub
loop
or
jp
mov
xchg
mov
aam
lret
test
sub
fistpl
mov
rcll
inc
and
jl
adc
and
push
scas
dec
pushf
cmpsb
frstor
mov
xchg
arpl
cs
mov
lahf
call
inc
jnp
push
pop
jp
inc
shlb
lcall
xchg
push
lret
outsl
and
jae
es
bound
push
inc
sub
sub
xchg
loope
add
xchg
and
mov
imul
adc
inc
and
cmpsl
mov
xadd
push
test
add
rolb
sbb
incl
mov
adc
mov
dec
fisubrl
lock
and
lret
or
scas
loope
dec
movsl
mulb
or
sbb
clc
call
jecxz
cld
inc
clc
faddl
mov
add
hlt
ficompl
fs
int3
shll
sbb
or
or
jno
popa
push
test
movsl
iret
inc
cmp
fldcw
sbb
push
mov
call
into
push
and
ret
cmp
mov
mov
arpl
and
inc
push
int
push
repnz
sarl
cmp
add
lock
mov
xor
mov
rcr
aad
sbb
inc
mov
inc
call
inc
jnp
pushl
ret
inc
ja
out
ss
repnz
push
inc
fsubrl
jecxz
and
aam
lret
add
pop
hlt
ja
push
inc
mov
add
mov
xchg
push
sbb
out
mov
xchg
loop
addr16
and
inc
ss
add
inc
orl
sub
adc
add
jmp
mov
jmp
stos
jmp
xor
jecxz
or
jg
and
mov
inc
mov
cmpsb
addb
out
fisubrl
push
movsb
add
pop
je
sbb
lcall
lock
fsin
pop
add
push
cmp
sbb
push
mov
mov
sub
aaa
cmp
inc
je
xchg
sub
cmpb
push
insb
push
fsubl
cmp
and
xor
xchg
fbstp
out
jle
pop
xchg
or
pop
test
outsb
sbb
shl
sub
loop
popf
js
and
ja
mov
and
outsb
mov
push
mov
pop
add
push
or
sbb
sbb
mov
je
cmpsl
roll
adc
loopne
mov
mov
loop
jbe
js
fbld
es
jb
test
daa
inc
pusha
test
xor
add
icebp
or
inc
xor
jns
and
jg
pushf
mov
lcall
pusha
sti
jmp
jg
mov
fwait
sbb
pop
inc
lret
rorl
push
leave
lods
mov
insl
jl
clc
adcl
jbe
test
sub
into
daa
cld
rolb
shlb
bound
push
int3
mov
mov
test
loopne
insb
repz
push
movsb
xchg
jl
pop
enter
sub
pop
mov
push
pop
xor
sub
fistpl
cld
mov
gs
in
xchg
mov
iret
mov
sbb
pop
xchg
mov
sbb
andl
cli
or
xchg
xor
cmp
pop
pusha
adc
push
or
cwtl
add
movsb
and
rcll
and
mov
adc
jne
clc
ret
add
inc
outsb
xchg
adc
bound
inc
push
lock
dec
and
jecxz
dec
daa
pusha
mov
and
je
lock
or
aaa
in
call
pop
jl
daa
inc
clc
mov
clc
cld
pop
sti
xchg
and
sbb
sub
pop
mov
pop
out
jnp
and
popa
and
test
aaa
movsl
jg
jp
dec
fcoml
jg
clc
cltd
out
jecxz
leave
adcb
fisttps
inc
aaa
xchg
mov
or
lods
sbb
insb
xorb
insb
xor
fwait
mov
nop
xor
mov
pop
inc
dec
loope
mov
mov
roll
mov
sbb
mov
dec
or
push
lods
dec
sarl
or
fisubrl
cmpsb
sub
repnz
xchg
add
xchg
bound
es
ficompl
stos
lret
push
pop
and
fcmovb
bts
aam
and
sbbl
pop
and
add
dec
push
js
dec
mov
or
fisttpl
mov
data16
addps
mov
mov
ret
mov
inc
arpl
test
push
in
jg
inc
in
mov
call
imul
push
jp
cld
out
icebp
cmp
test
cmp
shl
add
inc
aam
add
dec
xchg
mov
dec
ret
dec
je,pn
add
es
out
mov
xchg
loope
sbb
movsb
push
add
rcl
aas
xchg
test
inc
dec
cwtl
sbbl
test
push
sub
mov
push
cmc
add
lea
xchg
hlt
push
lock
out
arpl
push
mov
mov
pop
gs
jmp
cmpl
es
call
or
mov
je
push
cmp
mov
jmp
gs
dec
mov
shlb
rorb
pop
imul
test
imul
mov
add
imul
pop
or
icebp
idiv
lods
cmc
arpl
in
xorl
jo
sub
movsb
pushf
fsubrs
pop
mov
jnp
or
pop
jno
rorb
movsb
xor
xchg
mov
ja
add
mov
adc
sbb
movsb
ja
cli
push
jmp
bound
sti
mov
sub
test
gs
pop
outsl
dec
add
cmc
xlat
and
xor
cmp
add
dec
mov
jno
cwtl
outsb
sahf
add
jl
shll
and
xor
je
xor
dec
and
jge
push
dec
dec
mov
and
aas
pop
stc
pusha
jo
cli
jge
stos
aaa
pop
xchg
xchg
lret
xor
nop
push
dec
jg
cmp
jg
sbb
jl
ret
fisubrl
mov
or
or
push
jne
mov
or
or
icebp
xchg
pusha
jecxz
stos
add
inc
cmc
inc
or
dec
dec
and
mov
push
sub
in
add
hlt
addl
mov
outsl
out
pop
pop
push
fstps
popa
subl
mov
aad
mov
lret
test
sub
popf
pop
push
and
pop
lea
imul
imul
lods
or
lsl
pop
add
cwtl
aaa
sbb
mov
aam
lea
push
fisttps
push
fisubrs
jb
mul
xorl
adc
insl
cmp
or
jg
or
mov
out
out
fiaddl
in
inc
sbb
imul
jmp
lods
mov
rolb
push
loopne
lcall
add
pop
sub
pop
movsl
hlt
add
xor
mov
imul
pop
mov
adc
cwtl
outsb
lcall
sbb
jecxz
pushl
scas
add
dec
fcoml
mov
mov
ljmp
cmp
dec
or
or
xchg
ror
cs
push
repnz
int3
loop
push
es
ficoml
xor
cmp
ret
or
or
fmuls
leave
in
add
xchg
xor
push
xchg
lret
dec
adc
sbbl
sbb
sbb
and
divl
jno
push
jmp
bound
sub
roll
in
mov
shll
sub
and
test
jb
cmp
test
cmp
int
dec
adcb
xchg
adc
push
dec
cmc
push
dec
inc
cmp
scas
push
int3
dec
fs
cmp
and
les
sbb
push
add
incl
xor
xchg
outsb
insl
ljmp
incl
mov
push
add
stc
mov
mov
xchg
or
sbb
cmpsb
add
sub
inc
ss
or
cmp
dec
movsb
mov
dec
push
xchg
push
mov
pop
xor
jecxz
and
jno
psllw
mov
add
cltd
out
loopne
addr16
mov
mov
aaa
in
jmp
adc
xlat
inc
in
outsl
add
dec
cmp
in
dec
mov
add
or
ljmp
ror
pop
xor
jge
pop
or
inc
andb
jae
out
pusha
inc
es
pop
mov
add
in
shlb
sbb
cmp
clc
sub
mov
mov
cmp
adc
roll
stos
cmp
lahf
mov
repnz
popf
and
int3
stos
push
insb
call
sbb
mov
add
jmp
shlb
andl
sbb
and
xchg
and
shrb
cwtl
rol
test
and
sbb
inc
rcrl
inc
hlt
add
imul
xor
cmp
pop
orl
inc
push
stc
ret
stos
dec
mov
rcrl
push
cs
rcl
mov
push
pusha
repnz
adcb
jmp
sbb
lock
mov
dec
rorl
call
mov
shrl
mov
inc
pop
pop
or
add
cmc
imul
jae
mov
arpl
mov
lcall
dec
push
xor
fildll
fidivrl
sbb
push
aaa
popa
imul
sub
cmpsl
xchg
insb
mov
das
outsb
xchg
mov
push
movsl
pop
xor
data16
mov
in
mov
fwait
ret
pop
mov
dec
mov
jp
cld
adc
lcall
fisubs
pop
sti
push
ds
orl
pop
adc
jecxz
xchg
shrb
or
in
dec
push
out
jno
pop
je
xor
lea
and
jmp
xchg
insl
xchg
sub
pop
testl
in
and
sbb
jg
xchg
and
inc
dec
or
je
sub
dec
shrb
pop
mov
in
test
sub
les
xor
add
dec
cmp
rclb
je
sub
xcrypt-ctr
cmpsl
fistpl
cmp
push
xor
cmc
loope
push
mov
xor
pop
and
icebp
sub
pusha
sbb
test
mov
sub
pop
int
push
mov
cmc
adc
pop
xor
pop
pop
pop
sbb
push
imulb
adc
and
lahf
mov
jne
inc
repnz
mov
pop
sti
loopne
addr16
xchg
cmp
loope
jl
test
sarl
inc
jmp
and
cmpsl
addl
mov
popf
pop
out
loop
sbb
mov
add
or
pop
scas
in
std
add
xchg
fnsave
sbb
nop
fwait
ja
ds
adc
aad
jecxz
icebp
mov
popa
nop
aad
xor
mov
lds
inc
dec
lock
pop
std
nop
addb
and
in
dec
xor
mov
xor
in
mov
test
sarb
fnsave
fldl
mov
imul
adc
testl
faddp
stc
mov
cltd
inc
loopne
add
and
fmull
loop
popf
pop
push
adc
dec
xor
into
fwait
lcall
push
shll
sahf
rcrb
or
xchg
and
cmp
add
loope
subb
dec
mov
dec
cmp
pusha
scas
rcrl
hlt
enter
pop
outsl
jge
adcl
adc
leave
adc
jle
add
pop
call
push
sbb
hlt
loopne
sbb
jns
cmp
mov
dec
mov
push
adc
dec
or
scas
icebp
mov
test
in
dec
add
aas
addr16
loopne
add
sbbl
mov
and
rorb
mov
shll
add
pusha
xor
mov
gs
push
and
jno
mov
and
test
cmp
mov
xchg
xor
sbb
mov
into
jmp
ret
jge
mov
or
xor
push
push
jecxz
pop
dec
jg
mov
push
lahf
arpl
lahf
inc
rcl
int
mov
popa
ret
mov
xchg
test
aaa
sub
andb
addr16
and
or
cmp
mov
inc
mov
mov
jnp
repz
pop
fnstsw
daa
pushf
aaa
jle
sbb
jg
or
inc
sub
stc
adc
fstpl
cwtl
sub
stc
pushl
mov
and
jo
push
int
dec
out
and
pop
push
mov
inc
add
imul
fildll
ljmp
dec
in
mov
or
push
repz
mov
jns
mov
fcomi
mov
sahf
sbb
stos
mov
xchg
aad
lock
subb
mov
sahf
movsb
ja
loope
ret
ret
adc
jno
dec
jae
pop
lods
or
xchg
sbbb
les
repnz
jmp
aas
fs
loopne
mov
jnp
cmpsb
aas
xor
nop
mov
mov
or
mov
pop
cltd
mov
dec
xchg
jo
cmp
sarb
dec
sub
fld
inc
sbb
sbb
sbb
pusha
cs
scas
sub
xchg
mov
sbb
loop
daa
sbb
data16
cs
xchg
push
out
xor
push
outsl
push
jle
fucomip
into
add
sub
sbb
or
mov
xchg
jbe
jl
fs
and
inc
sbb
rcll
sbb
test
xchg
add
push
fcmovnb
test
fs
fildll
pop
dec
fwait
xor
dec
test
inc
aas
adcb
insl
mov
shl
flds
and
mov
loopne
loop
jge
faddl
sub
jo
or
cmpsb
xor
rorl
cmpsb
pop
mov
repnz
arpl
in
test
leave
mov
rorb
mov
arpl
push
stos
shlb
hlt
push
ret
fwait
cwtl
int3
stc
aaa
call
add
dec
rorl
sti
sub
xor
sbb
lods
mov
push
pop
icebp
sbb
mov
clc
add
icebp
or
mov
into
mov
sbb
adc
jo
xorl
cmc
pop
dec
test
clc
int3
pushf
xor
fnstenv
aas
sahf
cmc
out
imul
fdivrp
jno
and
insl
ja
insl
dec
outsl
repz
push
roll
psrld
mov
vcmpss
xchg
or
push
inc
inc
cmp
adc
fsubl
pop
ficomps
jmp
mov
fcomps
pop
adc
shrb
xor
dec
mov
sbb
sbb
mov
jnp
adc
adc
lahf
aam
jge
inc
fisubs
add
jle
stc
adc
int3
add
cld
push
xor
daa
filds
lds
sbb
mov
jle
and
je
js
inc
mov
sbbl
pop
dec
inc
hlt
push
push
dec
cwtl
filds
sbb
stos
test
jp
adc
or
sbb
les
mov
dec
xor
and
loope
iret
cli
pop
fsts
sarb
mov
adc
mov
aaa
mov
lods
shll
test
sbb
adc
and
sub
xchg
loopne
jle
rol
lods
daa
cmp
push
mov
dec
pop
push
aam
out
push
movsl
jle
sub
aas
mov
or
lock
cmp
fcoms
shrb
mov
or
pop
jns
lea
sbb
adc
sarb
inc
pop
xor
mov
cli
cmp
dec
test
cmc
mov
sub
mov
xchg
push
lcall
nop
sub
loope
cmp
xor
and
rorl
mov
inc
ja
lods
push
inc
stos
push
cld
les
loop
mov
and
dec
or
cmp
xchg
pusha
add
push
in
and
out
and
push
add
std
add
gs
xlat
cltd
les
push
push
pop
shlb
push
hlt
mov
add
cmpsl
xchg
mov
adc
sbb
out
xor
pushf
fimull
sbb
xchg
or
pop
and
fildl
pop
jno
mov
cwtl
and
jg
or
xchg
pop
shr
scas
fstps
leave
rol
gs
fistpll
sbb
sbb
push
sub
sbb
and
clc
insb
loopne
adc
loopne
rdtsc
sub
inc
fdivrl
call
jo
sbb
test
or
pop
mov
ret
xchg
lcall
daa
mov
data16
rolb
mov
subb
jmp
or
inc
imulb
call
xor
jmp
or
popf
mov
subb
xchg
ret
sbb
jns
stos
cmc
or
popa
and
xor
iret
popa
pop
mov
ret
andb
push
mov
shlb
lret
pop
out
mov
icebp
jg,pt
loopne
dec
xchg
xchg
sbbb
pop
inc
adc
sbb
or
lds
lret
frstor
icebp
sarl
cwtl
or
adc
stos
cmp
pusha
ret
ja
push
imul
cmp
ret
bt
rorl
push
add
sti
pop
or
lock
js
dec
adc
pushf
add
int
pop
decl
cltd
push
adc
inc
outsb
jne
push
lret
pop
mov
roll
ret
std
pusha
mov
lock
mov
sbb
mov
lcall
aad
filds
xchg
adc
out
dec
cmpsb
mov
imul
jbe
xchg
imul
mov
test
into
mov
jmp
mov
jp
add
outsb
mov
pop
pop
sbb
cwtl
aad
ss
loop
dec
and
sbb
mov
mov
ficompl
cmpps
add
jne
cwtl
sahf
mov
sti
push
test
xchg
js
fildl
scas
inc
jnp
jmp
fmuls
sub
mov
divb
jmp
xchg
loopne
outsl
pop
loop
movsb
mov
sbb
xchg
mov
je
cmp
push
imull
mov
ds
lock
xor
in
jb
mov
ss
adc
pop
lock
pop
mov
pop
in
ss
loopne
fldl
xchg
outsb
popa
andb
jecxz
cs
push
xor
icebp
push
push
mov
popa
dec
mov
add
imul
inc
inc
loop
push
incl
orb
in
adc
jb
jl
cli
cld
stos
arpl
ds
mov
insl
xor
shl
adc
shlb
ds
xor
push
mov
movsl
sbb
mov
ret
adc
mov
das
push
push
add
sbb
mov
enter
push
xorb
es
push
push
stos
lods
jb
repnz
cld
enter
dec
data16
cmpsl
mov
hlt
pusha
mov
pop
out
call
aaa
inc
add
jg
loopne
fcompl
les
ja
jp
incb
or
push
jl
xor
inc
push
loopne
ret
icebp
ficompl
add
dec
pop
push
clc
push
mov
shll
jne
push
out
mov
sti
or
xchg
jo
stc
out
push
test
std
aad
and
add
push
inc
cmp
sub
sbb
ret
adc
sbb
rcrl
pop
pop
fistl
ret
aad
int3
mov
jp
movsb
data16
mov
jnp
lods
add
pop
dec
mov
rclb
sbb
inc
add
pop
cld
pop
or
sbb
lods
and
inc
jne
inc
outsl
leave
adc
or
das
int
xchg
and
and
lds
cmp
and
push
mov
sarb
fdivrl
movl
inc
inc
dec
jnp
xor
dec
or
lret
cmc
pusha
xchg
jbe
add
test
mov
pop
mov
dec
and
add
sbb
add
pop
loopne
es
push
add
inc
or
push
pop
add
push
inc
cmp
std
fildll
clc
shld
add
push
xchg
in
addr16
movsl
mov
adc
sub
out
and
cmpsl
ds
adc
jp
test
call
loop
clc
in
push
lods
inc
dec
inc
adc
jo
sarb
loop
mov
test
mov
inc
clc
sub
sbb
mov
or
push
pop
ret
sbb
mov
jb
pusha
subl
ds
icebp
sub
jbe
int
push
adc
fmull
mov
xchg
adc
pop
sbb
xchg
adc
add
jo
mov
fwait
xor
mov
das
mov
or
pop
xor
add
and
sub
loopne
jo
mov
sub
fidivrl
icebp
mov
shlb
fisttpll
movsl
scas
sbb
cmp
dec
sbb
pop
fbstp
lret
pop
pop
mov
movsl
jle
mov
lret
jns
in
pop
decb
out
mov
dec
loopne
pop
push
jl
jb
outsb
or
mov
jno
mov
jp
jbe
hlt
shrb
cmpsb
jbe
mov
mov
jno
pop
dec
and
iret
mov
cmp
mov
mov
lock
enter
int
test
xchg
rcll
jmp
sbb
push
lret
pop
and
add
scas
daa
cmpsl
mov
xchg
mov
jle
push
das
clc
pusha
add
test
pop
add
mov
or
test
dec
sub
decb
insb
icebp
sub
push
add
mov
test
fiadds
dec
pop
add
sbb
std
shl
cmp
adc
movsl
adc
pop
addr16
add
js
loopne
pop
inc
sub
loope
mov
div
jo
mov
into
call
cltd
or
hlt
xlat
xor
cmp
repz
and
aad
fidivrl
lahf
adc
sbb
push
repnz
aad
mov
scas
ja
or
cmp
dec
or
and
jno
dec
and
mov
hlt
inc
loop
sti
test
xchg
stc
ja
add
and
inc
add
dec
push
jbe
loopne
and
mov
enter
lea
sbb
inc
adc
adc
mov
cmpsb
or
js
cmp
lds
mov
push
sub
pop
inc
cwtl
xor
test
jp
mov
cmc
shr
gs
out
inc
mov
and
repnz
hlt
xchg
loopne
fsubrs
sub
inc
js
imul
pop
ljmp
icebp
inc
push
jecxz
out
push
xor
add
dec
push
or
pop
push
push
loopne
sbb
dec
mov
imul
int
push
or
mov
mov
cli
outsb
xor
lea
scas
jo
out
add
cmp
mov
inc
ret
sub
insb
je
cmpsl
adc
mov
pop
push
push
imul
xchg
mov
sahf
movsl
imul
push
jbe
or
les
and
push
xchg
dec
ss
push
mov
gs
pop
dec
cmp
fldenv
and
popa
daa
mov
clc
cmp
mov
xlat
xchg
sub
mov
ljmp
mov
mov
adc
icebp
add
movb
mov
xchg
mov
mov
push
jle
lods
scas
pop
flds
inc
mov
int
cwtl
mov
fwait
ret
sub
inc
subb
sbb
cli
push
ss
out
sub
pop
stc
aas
outsl
ret
inc
sub
arpl
daa
test
mov
je
movsl
lock
leave
ds
nop
dec
test
jns
mov
sub
mov
cli
insb
mov
repz
pop
andb
xchg
loopne
clc
sbb
ljmp
sahf
push
cmp
cmp
mov
pushl
mov
and
stos
add
in
ljmp
jecxz
mov
sbb
xorb
dec
test
push
push
idivl
add
sub
inc
rcrb
sti
mov
shrb
js
or
popa
lock
je
notb
int3
or
pop
add
test
xlat
fisubs
fmull
pop
outsl
xor
outsb
mov
pop
mov
test
and
dec
fcmovbe
movsb
mov
lods
dec
repnz
jl
and
inc
out
sbb
movsb
ljmp
loopne
and
adc
sbb
icebp
ss
jle
roll
fstps
lret
pop
ljmp
shr
mov
or
cmp
cmpsb
push
mov
pop
test
inc
lcall
xchg
ja
adc
dec
push
mov
cltd
jg
daa
push
addl
adc
mov
and
incb
aas
cli
ss
in
push
xor
call
pop
enter
dec
insl
inc
loopne
mov
fidivrs
in
sub
das
aam
lock
jp
sbb
stos
mov
shrb
push
push
outsl
lods
cld
push
fs
sti
daa
inc
fsubrs
mov
mov
enter
xorl
ret
xor
dec
sbb
inc
insl
push
dec
enter
sub
les
sbb
sbb
movsb
dec
dec
dec
fsubrl
out
in
clc
mov
imul
test
movsb
iret
lock
mov
sub
aas
sarb
pop
push
jo
fwait
mov
call
or
mov
mov
push
sahf
pop
sbbb
arpl
push
pop
xchg
or
dec
nop
push
xchg
xchg
mov
fisubs
dec
out
push
iret
movsb
fcomps
jnp
push
enter
inc
orb
cmp
pop
sub
rcrb
adc
lahf
mov
mov
mov
pop
xchg
jg
jg
sub
or
bound
icebp
movl
or
mov
scas
push
scas
jle
sbb
out
ss
bound
add
mov
dec
mov
and
pop
xchg
sbb
add
mov
pop
mov
aam
mov
loop
movsb
call
cmp
or
ss
das
push
int
mov
mov
inc
adcl
pop
fsubs
add
xchg
out
jmp
xor
repnz
movsb
jo
inc
jnp
dec
or
int
add
sub
push
lods
sbb
xchg
and
rol
std
adc
aas
push
imul
int3
or
pop
lahf
cld
cmp
int
ja
fwait
or
shll
scas
dec
dec
dec
ret
sub
dec
scas
fwait
out
mov
cwtl
mov
inc
push
repz
inc
and
into
push
in
mov
dec
inc
clc
jl
aam
add
mov
lods
stos
vmovntps
dec
movsb
cld
bound
push
dec
mov
roll
js
addl
ljmp
test
sti
hlt
imul
out
test
mov
pushf
jae
rolb
int
or
adc
cld
or
ds
push
mov
dec
hlt
adc
xor
test
xor
mov
insb
mov
outsl
pop
mov
add
xchg
stos
adc
shl
jge
aas
fiaddl
mov
mov
sarl
inc
lret
test
sahf
in
add
mov
std
xchg
sub
mov
mov
js
mov
pop
xor
adc
nop
idivl
and
movsl
rorb
sbb
shl
add
cld
dec
push
xor
imul
icebp
sub
rcrl
sub
xor
shll
insb
push
popf
out
mov
fs
mov
jp
sarb
out
and
and
lds
imul
lea
xchg
cmpsl
add
lods
clc
add
scas
lret
sbbb
xchg
dec
test
adc
jle
mov
add
rorl
ljmp
sar
push
lret
jecxz
in
add
rcl
enter
dec
lods
xlat
mov
test
ss
stos
nop
pop
popa
sahf
push
push
add
xchg
test
push
cld
negb
jmp
adc
fisttpl
out
add
mov
mov
clc
mov
dec
dec
push
addb
lods
ds
cmp
aam
int
xchg
les
sbb
push
outsb
mov
dec
inc
sbb
das
cmpl
stos
mov
imul
cli
jg
in
xchg
sbb
xor
inc
push
and
sub
and
rolb
clc
gs
mov
dec
mov
notl
loop
mov
mov
in
rorb
add
clc
rolb
jo
int3
or
popl
push
stc
icebp
incl
cmp
push
inc
jle
mov
and
jmp
add
mov
push
xchg
insl
lods
inc
push
pop
add
fcomps
pop
repz
testb
inc
mov
cli
mov
xor
leave
fcomps
insb
sub
adc
daa
insl
clc
cld
push
insl
and
loop
rcr
inc
daa
mov
shrb
aam
sbb
mov
dec
cmp
push
lods
add
xor
fstpt
sbb
mov
ss
test
movsl
lods
or
cmp
fs
call
cmpsb
or
ds
add
shr
or
xor
pusha
js,pt
movsb
aaa
adc
cwtl
and
jg
loope
adc
mov
enter
inc
popa
mov
xchg
lock
mov
push
clc
sub
jecxz,pn
add
sub
or
xchg
bound
jp
and
fidivs
imul
inc
lret
scas
pop
mov
adc
xchg
cmp
mov
xchg
loopne
pop
or
fnstenv
std
cmp
ficompl
xchg
je
addb
in
mov
add
in
hlt
sbb
stos
addr16
pushf
iret
mov
inc
stos
pop
mov
pop
adc
push
or
sbb
fbstp
js
add
xchg
sbbb
xor
out
ret
int3
cltd
add
ds
cld
inc
shlb
inc
into
push
ja
lea
stos
jns
cmp
add
mov
cmp
xchg
testb
adc
movsb
arpl
ret
test
sbb
lds
inc
ja
or
or
sub
addr16
add
enter
dec
xchg
fstl
add
adc
xlat
xchg
fmuls
pop
inc
jae
xchg
fdivrs
clc
loopne
mov
inc
arpl
iret
and
or
jno
sub
fiaddl
test
scas
push
mov
mov
or
dec
inc
sub
dec
push
loop
xor
outsl
aaa
mov
cli
and
cli
orb
sbb
pop
aas
jp
xor
decb
jmp
add
push
cltd
add
adc
shl
xor
mov
lods
or
push
fistl
and
shr
inc
mov
mov
or
stos
in
inc
nop
pop
sub
arpl
scas
in
mov
push
test
and
sub
pop
mov
and
add
add
dec
test
sbb
imulb
pusha
shl
aam
and
mov
or
ror
and
push
add
dec
push
adc
ret
iret
mov
out
jno
je
or
lret
imul
test
call
sub
cmp
cmp
jge
inc
and
sub
dec
cmp
push
mov
jecxz,pn
lock
in
loop
dec
pop
push
mov
or
je
pop
push
loopne
sbbl
adcb
test
roll
inc
pop
push
ja
mov
repnz
fimull
pop
ret
mov
inc
in
pop
lds
rolb
cmp
cld
call
inc
dec
add
adc
jo
daa
mov
fbstp
xchg
mov
sub
inc
stc
roll
movsb
mov
push
icebp
daa
xlat
cmpb
xor
push
inc
add
roll
add
cld
add
into
mov
loopne
popa
and
pop
adc
lahf
cmp
inc
popa
stos
and
outsb
es
push
adc
scas
lock
clc
cmpsb
mov
dec
sbb
popa
dec
pop
mov
inc
mov
stc
test
aas
inc
rorl
dec
shl
mov
mov
mov
push
test
fcomps
or
fimull
jo
mov
ret
xchg
pop
adc
popf
mov
mov
xchg
lcall
jo
add
out
sbb
jns
jge
test
ficoms
sub
in
lret
aam
push
test
stos
lret
inc
fiadds
pop
stos
pop
jle
or
jo
add
sbb
or
ret
in
movsb
out
outsl
push
or
faddl
xchg
adc
mov
push
decl
mov
cmp
push
repnz
negb
pusha
frstor
mov
dec
xchg
mov
inc
mov
dec
xchg
bound
push
filds
inc
pop
add
inc
push
and
xchg
jnp
and
js
stos
in
stos
shlb
adc
sbb
in
sbb
jp
cld
xchg
mov
dec
inc
jo
and
mov
dec
cmp
cli
lahf
pop
pusha
jl
sar
fidivl
shll
lds
inc
aaa
push
cld
or
addb
mov
arpl
icebp
aad
into
mov
outsl
ljmp
insb
jno
xor
fcoml
ret
cmp
lock
cwtl
pop
xchg
inc
std
add
and
and
pop
fwait
lods
js
jle
or
push
inc
dec
fidivs
add
inc
mov
pop
adc
in
inc
pop
in
xor
call
jo
add
sbb
cltd
ret
pop
adc
jmp
jp
sub
sbb
xor
mov
push
lret
push
cld
cmpb
aaa
adc
out
mov
lahf
sahf
pop
adc
into
jns
mov
ljmp
or
or
ja
les
xor
das
xchg
hlt
enter
mov
cmpb
call
loop
ret
push
push
inc
mov
lret
push
mov
jo
xor
jle
dec
into
pop
xchg
sub
or
xchg
cs
dec
insb
mov
inc
add
sbb
ljmp
mov
add
dec
testl
or
cmp
sbb
xchg
push
xchg
loope
movsb
dec
je
in
xor
or
mov
pop
inc
add
mov
sbb
adc
or
lahf
lock
fstpl
push
icebp
xchg
lock
ret
mov
push
enter
call
xchg
ljmp
push
fsubl
mov
pop
std
fcomi
jne
push
push
lea
jecxz
and
jmp
jle
in
cmp
push
es
stos
xchg
lock
cmp
xchg
ss
xchg
les
shlb
push
movsb
scas
mov
rcll
shll
sti
mov
add
mov
out
inc
add
xchg
pop
and
and
inc
sub
push
fdivs
movsl
inc
mov
loop
aam
ret
mov
rol
out
jp
push
movsb
mov
jle
rcll
stc
idivb
and
call
cmp
bound
lret
call
mov
xor
test
fsubl
jo
idivb
mov
jp
add
fisttpll
test
mov
adc
mov
rcr
push
das
call
mov
cs
clc
cmpsb
sbb
push
adc
cli
mov
push
or
mov
mov
xor
inc
inc
dec
adc
pusha
cmp
loop
out
or
aam
movsl
pop
inc
call
push
insb
shll
stos
outsl
test
xchg
mov
in
fisubrl
xor
cmc
mov
leave
push
nop
and
xchg
fwait
pushf
adc
and
push
loop
pop
sarb
mov
mov
push
push
enter
and
loope
cli
dec
nop
add
cmp
push
outsl
daa
addr16
lock
or
rcrl
push
fisttpl
stos
lds
sahf
hlt
psubb
or
xchg
mov
mov
add
aam
movsb
push
jl
pop
pop
dec
fs
cltd
arpl
inc
pop
pop
xor
adc
vpunpckhdq
mov
sbb
aaa
push
push
lret
mov
push
add
scas
cmp
out
pop
les
cmp
jl
ret
add
mov
dec
push
mov
int3
push
fnstsw
adc
mov
cli
and
inc
xor
dec
push
push
sbbb
ret
mov
loope
mov
dec
xlat
ljmp
ret
and
ret
shr
incl
lea
inc
movsl
lea
pusha
popf
cmpsl
shrl
adcl
xor
loop
aam
pop
and
push
mov
ss
xor
jnp
jnp
xchg
jg
xor
jmp
mov
push
nop
addr16
rol
push
loopne
or
xchg
sbbl
dec
icebp
leave
lahf
mov
push
clc
sbbl
sarb
roll
or
lcall
aad
addr16
jmp
push
stos
inc
pusha
sbb
arpl
add
js
add
push
ds
sbb
orb
jmp
xchg
repz
cmpsb
and
roll
stos
add
lea
in
sub
lock
fs
stos
outsl
inc
sbb
sbb
add
mov
lods
aas
cli
mov
inc
mov
adc
inc
mov
mov
jge
aad
inc
sahf
adc
je
xlat
ds
fsubl
jne
aas
lret
inc
mov
mov
jp
loope
data16
or
dec
add
test
cwtl
adc
inc
xor
push
das
inc
ljmp
andb
hlt
sbb
xchg
jo
push
inc
clc
push
xor
sahf
and
mov
push
and
es
rolb
jbe
sbb
and
jecxz
lods
pop
mov
por
cmovle
lret
push
and
jbe
imul
push
aaa
test
fidivrl
xchg
fimuls
arpl
idiv
ljmp
gs
lret
inc
or
movb
decl
scas
and
addr16
adc
shlb
add
shrb
mov
jo
cmp
test
enter
mov
fldt
insl
clc
cmpsb
or
mov
inc
cld
xchg
fdivp
inc
lds
cmp
hlt
dec
push
mov
push
pusha
sbbb
add
cmp
stc
mov
pop
shrb
frstor
aas
loope
mov
out
ffree
mov
lea
mov
xchg
or
add
clc
xor
sbb
clc
adc
push
incb
push
mov
inc
in
xor
add
fmull
inc
stc
loope
mov
and
loop
pusha
stc
xchg
fcomp
lods
mov
pusha
rcl
push
aas
cld
cmp
fdivr
fdivrp
movsb
cmp
je
xlat
ror
mov
inc
in
jnp
dec
mov
xchg
icebp
xchg
mov
cmp
mov
je
mov
aaa
loopne
pop
xor
rcll
mov
iret
js
jb
es
scas
fidivrs
pop
or
pop
aas
adc
fisttpll
dec
mov
stos
mov
movsb
cmp
pop
movsb
push
xchg
jo
mov
ljmp
ret
repz
or
jo
pop
lods
inc
sbb
out
adc
test
in
and
in
cli
mov
sbb
push
xchg
dec
in
mov
scas
mov
mov
cltd
in
xchg
std
dec
loop
dec
mov
decl
mov
inc
mov
in
push
scas
mov
ds
decb
fcoml
cmpb
add
jmp
fdivrs
pop
pop
icebp
push
inc
dec
push
pop
das
into
imul
dec
scas
inc
pop
dec
cmp
rolb
popf
and
fsubr
rolb
shlb
stc
push
aam
jle
and
sarb
popf
mov
leave
push
mov
lock
in
or
sbb
fdivrl
push
sbb
dec
adc
sbb
aaa
aaa
shl
cmp
mov
lret
icebp
sub
movsb
outsb
jl
adc
pop
cld
cmp
ds
das
mov
repz
call
or
lock
cmp
or
out
inc
popa
mov
jbe
xchg
dec
lods
shl
add
insb
lods
pusha
inc
bound
jnp
fisttpl
cli
daa
mov
test
mov
popa
call
jge
xchg
jge
mov
jne
and
dec
push
jb
rolb
pop
ljmp
fwait
push
mov
fcoms
sub
je
pop
inc
jb
pop
loope
and
pop
jle
inc
inc
push
bswap
sbb
mov
pushf
repz
hlt
enter
jae
insl
xor
pusha
dec
cld
test
cmp
push
xchg
mov
pop
test
mov
mov
imul
adcb
push
xor
mov
push
xor
cmpsl
jl
mov
dec
jbe
cld
mov
inc
fsubl
adc
cmp
lock
push
loopne
lcall
in
test
push
adc
or
iret
jecxz
add
mov
push
pop
or
inc
test
mov
movl
xchg
int3
pop
dec
nop
push
je
lods
stc
adc
or
cld
cmc
xchg
or
fildl
dec
pop
jo
add
push
mov
jae
cmp
xlat
gs
outsb
or
push
cmp
and
insl
mov
mov
mov
outsb
adc
sub
lea
jb
adc
mov
mov
outsb
or
loope
and
add
lahf
roll
dec
inc
pop
adc
xchg
pusha
shrl
outsl
je
cmp
pop
pmullw
mov
and
push
adc
add
out
lds
fidivs
sbb
lahf
dec
adc
push
xor
sbb
lock
popf
aam
xor
push
insb
subb
pop
cmp
call
mov
inc
aaa
push
daa
sub
rcll
es
cmp
inc
sbb
movsl
adc
cmp
mov
or
adc
lea
mov
xorl
add
mov
adc
pop
mov
sub
imul
mov
sub
adc
dec
mov
adc
daa
dec
call
jo
test
cmp
sarb
icebp
dec
andl
push
jp
and
mov
jbe
pminsw
lds
ret
mov
shrb
jmp
popf
sub
mov
adc
or
mov
cli
sub
sahf
xor
mov
cmc
out
es
enter
pop
testl
out
sarw
daa
dec
cmp
cli
lcall
push
in
les
pop
jp
cmp
sbbl
cmpsb
es
repnz
inc
pusha
aas
or
pusha
out
imul
lcall
jbe
ds
mov
aam
out
mov
scas
jg
pop
dec
es
sub
vcvtpd2psx
add
inc
hlt
mov
add
cmp
push
sahf
scas
dec
mov
dec
loope
push
lea
mov
add
pop
shrb
mov
pushf
inc
loopne
push
xchg
adc
add
mov
hlt
add
pop
push
add
add
popa
pop
lock
or
push
cmp
stc
fsub
aaa
lret
ret
cmp
adc
test
je
or
xchg
shll
icebp
inc
and
fstpl
jl
mov
dec
and
pop
cmpsb
inc
shlb
cmp
pop
adc
sbb
sbb
push
add
sarb
vpaddd
mov
fldt
push
loop
push
pop
adc
push
js
pop
push
call
mov
sub
ljmp
xorl
inc
ret
aad
fs
loope
inc
enter
or
cmpsl
push
ret
pusha
test
loope
xor
in
stc
mov
fmuls
stos
add
lea
and
xchg
ss
adc
imul
cmp
adc
daa
mov
dec
loopne
sub
xor
mov
rcrb
or
push
pop
dec
out
rcll
or
dec
cs
xchg
add
nop
adc
jne
jno
pop
and
push
add
xchg
rcrl
pushf
test
add
pop
jmp
cmpl
jmp
and
mov
cwtl
ret
daa
jp
lock
jo
sub
cmp
insl
jae
js
jle
insl
into
test
aas
adc
and
adc
pop
cmp
out
repnz
sbb
movl
jne
fstl
pop
sub
cmpb
sub
arpl
psubusb
movsl
cmp
aas
dec
imul
enter
push
sub
add
and
push
les
loope
test
sbb
enter
loop
xchg
cli
sbb
mov
test
cwtl
mov
ret
enter
jnp
mov
lret
jbe
adc
sbb
lock
xchg
lock
les
add
pop
adc
or
xor
mov
cmpsl
adcb
lret
mov
sub
cmp
adcb
add
andb
popa
xor
dec
dec
pop
loop
add
enter
add
hlt
mov
jle
or
or
leave
dec
adc
pop
sbb
insb
shr
stos
or
xorb
sbb
inc
bound
mov
add
push
inc
loopne
iret
movsb
xchg
or
mov
cmp
mov
das
adc
daa
loop
jle
sbb
push
cli
test
mov
movsb
imul
repz
dec
or
mov
mov
je
movsb
push
cld
push
in
aam
cmp
ret
sub
adc
mov
loope
add
xor
inc
jo
cmp
call
push
lcall
adc
mov
cmpsb
jmp
mov
adc
jle
test
jecxz
sub
loope
mov
je
sbb
mov
jnp
mov
mov
xor
dec
call
cmp
fists
iret
xor
xor
popa
loopne
adc
rolb
xor
aam
jecxz,pn
adc
daa
mov
xchg
xor
mov
pop
sbb
jns
xor
inc
cs
jg
addr16
mov
in
je
mov
dec
aam
inc
inc
popf
ds
inc
filds
cmpsb
loopne
aad
dec
push
nop
mov
movsb
xchg
and
xor
jns
cmp
xor
mov
shl
adc
loope
movsb
xor
out
lds
ret
adc
stos
dec
fcomps
cmp
pusha
add
mov
aaa
xchg
jp
loope
sbb
pop
ret
push
dec
pop
mov
nop
cmpb
scas
sub
sub
mov
cmpsl
subb
iret
loop
sbb
push
arpl
andl
divb
push
sbb
clc
fsubr
subb
cmp
mov
ds
lret
dec
mov
lock
xor
pusha
push
add
xchg
sub
inc
dec
or
das
and
adc
xchg
test
shrl
aaa
mov
fs
or
ds
sahf
imul
sub
add
shl
lods
not
test
add
sbb
mov
adc
fisttps
push
xchg
mov
cwtl
add
pop
jnp
loopne
movsb
lret
loopne
pop
je
jge
adcb
xchg
cwtl
movl
cld
sarl
pop
sbb
jns
dec
mov
test
pop
and
sub
hlt
loopne
inc
addr16
mov
jns
orl
rcrb
idivl
mov
lea
xor
test
add
sub
into
sub
rorb
fs
repz
mov
dec
add
mov
jmp
aaa
daa
in
cmp
cmpsb
push
pusha
jo
sub
bound
adc
hlt
aam
sarb
popa
daa
push
mov
jl
movsl
xor
add
lock
and
or
test
sbb
adc
jnp
and
ljmp
jecxz
jle
mov
push
cmp
mov
dec
push
mov
mov
test
sbb
inc
xlat
es
pushf
lods
arpl
adcl
xchg
addr16
and
jl
cmp
pop
mov
or
dec
popf
and
daa
or
testl
inc
imul
jmp
fiadds
dec
sub
stos
sbb
enter
xor
mov
mov
xlat
lahf
sub
iret
pop
cmp
stos
xchg
std
loop
in
push
ljmp
sbb
shlb
std
ret
je
aam
inc
jecxz
cmp
and
push
add
mov
cmp
stc
pop
and
jp
subl
pop
mov
pop
jle
arpl
js
enter
mov
dec
addr16
rep
in
sub
lock
xchg
mov
adc
mov
push
add
in
inc
adc
mov
pusha
push
dec
jg
push
dec
dec
mov
mov
mov
mov
jp
xlat
jno
dec
pop
decl
mov
jnp
mov
jo
cmp
add
outsl
cmp
in
xchg
scas
sbb
in
inc
mov
pop
shr
hlt
in
sub
dec
dec
pand
lret
pop
in
adc
cs
dec
jmp
sub
into
icebp
sub
iret
jb
xchg
add
mov
cmp
std
fdivrs
jl
push
call
mov
or
jbe
sar
xor
fs
mov
les
mov
pop
cltd
xchg
jle
cmpsl
lahf
and
pop
imul
mov
jp
daa
scas
scas
int
shl
cmc
and
sar
pop
mov
xchg
push
adc
mov
fcomip
push
ret
sub
aas
push
insl
arpl
cld
pop
adc
sar
xchg
cmp
push
pop
pop
or
fs
add
jb
lret
std
mov
inc
daa
cmp
hlt
mov
popa
xchg
out
cld
cmpb
hlt
jl
and
push
push
hlt
lods
adc
pop
nop
cmp
leave
movsb
dec
outsb
xor
sub
fidivs
sbb
jp
or
insb
pop
shll
or
outsb
and
add
call
test
clc
out
and
xor
rcll
pusha
arpl
cmp
mov
sbbb
sbb
and
mov
jnp
mov
and
dec
add
scas
nop
mov
or
inc
sbb
mov
aas
movsb
in
scas
mov
negl
aas
iret
mov
popa
ret
mov
add
mov
add
jp
fs
sub
mov
mov
mov
invd
ret
jp
std
aad
inc
cmp
adc
push
xchg
add
inc
sbb
xor
add
sub
sub
test
bound
jo
or
insb
mov
je
std
push
jp
mov
cmc
adc
or
xchg
fbld
inc
cmp
sbb
pop
fidivs
pop
push
das
cmp
int3
inc
and
lock
xchg
dec
mov
pop
pop
mov
xlat
lock
dec
bound
xchg
push
push
adc
xor
jno
int3
lahf
and
insb
add
gs
loop
adc
adc
outsb
jo
push
push
subb
add
and
lcall
add
out
and
inc
jle
test
or
add
and
cmp
mov
fisubl
dec
jne
jns
cmp
mov
in
pop
enter
loopne
or
insl
loop
push
fisubs
popf
hlt
inc
mov
leave
into
outsl
lods
inc
mov
jns
mov
fisubrl
loopne
xchg
jp
add
adc
jge
or
add
push
pop
aas
icebp
add
sub
lcall
sub
add
push
xchg
rcrb
ret
fimull
fdecstp
push
cmpsb
push
dec
stos
mov
sub
and
mov
dec
lods
pusha
adc
jl
lahf
pop
pop
jecxz
mov
enter
movsl
ds
pop
jl
mov
adc
clc
add
sbb
movsl
mov
pop
and
xchg
jl
fiadds
and
pop
pop
cmp
stos
ss
popl
mov
mov
adc
inc
out
xchg
inc
fidivs
xor
aaa
andl
sub
add
adc
fwait
or
jle
addl
inc
mov
mov
xor
or
test
adc
outsb
insb
dec
jp
xor
cmp
repz
cmp
cmp
and
jnp
cmpsl
fldenv
pop
orb
xchg
inc
cld
jg
shr
fidivs
or
repnz
sbb
pop
pop
aad
mov
push
movsb
mov
adcb
inc
mov
iret
xchg
cmovno
xchg
pop
mov
add
or
fwait
sbb
push
test
hlt
inc
mov
lods
jno
inc
insb
mov
inc
adc
cld
and
enter
mov
cmp
cli
stos
mov
loop
push
test
lock
add
inc
mov
imul
pop
ss
repz
testb
lock
jnp
pop
xchg
dec
mov
sarb
lock
mov
mov
or
popa
or
lcall
gs
mov
mov
push
jo
int
xor
movb
cs
adc
sub
es
fsts
push
pop
rolb
push
xchg
pusha
xor
jno
std
xchg
push
dec
sbb
fucomi
xor
inc
lods
icebp
cs
test
mov
cmp
fwait
add
movups
jg
mov
and
shll
jnp
dec
pop
mov
popa
pop
mov
inc
or
mov
xor
or
xchg
inc
ss
adc
sbb
sbb
cwtl
cmpsb
xchg
inc
sbb
vpmuludq
loopne
adc
jo
andb
xchg
pop
mov
out
jecxz
add
and
sbb
mov
push
arpl
or
pop
dec
push
in
subb
call
pop
lock
mov
jg
sbb
enter
loop
push
dec
in
loop
aaa
shlb
fsubr
and
inc
repnz
lods
dec
inc
repz
rclb
jp
imul
pop
jns
cld
push
mov
pushf
jno
shrl
and
sub
or
inc
cmpsb
mov
aad
jbe
in
bound
or
adc
add
mov
push
adc
mov
dec
shlb
sbb
sbb
lods
push
loope
sbb
in
mov
das
repz
cli
loopne
cmp
or
std
ljmp
callw
xchg
cmc
popa
into
fucomp
ja
push
movsl
lods
push
push
faddl
dec
rclb
jb
repz
mov
push
leave
mov
cmp
test
mov
insl
xchg
test
outsb
push
scas
cmp
and
bound
mov
clc
push
ret
out
mov
mov
in
popa
jp
lret
int3
add
jg
ret
js
imul
into
cld
pop
fs
adc
shl
push
adc
push
pop
adc
adcl
aam
xchg
js
cmpsl
sbb
mov
loope
lea
lock
add
push
cmpsl
ds
aas
pop
dec
jb
jecxz
cmp
aas
cmp
mov
hlt
mov
mov
aaa
xor
jge
mov
mov
sahf
push
pushf
xor
clc
std
scas
jle
mov
mov
sbb
pop
and
icebp
pop
ja
mov
call
xchg
rorb
insl
test
sahf
push
inc
mov
les
sar
adc
mov
adcb
shr
fwait
sar
dec
pop
in
cmp
mov
stos
add
fwait
shr
mov
ja
mov
lds
jle
outsb
sub
mov
dec
or
js
into
insl
mov
rcrl
addl
icebp
xlat
out
inc
jmp
dec
and
fisubrl
paddusb
incb
or
cld
cmp
or
scas
in
pusha
jnp
insl
pop
pop
idiv
dec
push
push
xchg
jmp
jo
sub
fidivl
mov
imul
dec
jb
loopne
std
gs
sub
mov
stos
sub
or
repnz
in
pop
pop
cli
fimuls
inc
sbb
push
fcmove
push
or
mov
cmpsb
pushf
ss
jecxz
lods
adc
sbb
xchg
hlt
sub
mov
dec
pop
jecxz
scas
mov
cmpsl
pop
jle
imul
hlt
in
es
and
pop
loop
xchg
ss
dec
pusha
mov
gs
lret
cmpb
mov
pop
jp
mov
subl
mov
dec
aad
arpl
pusha
inc
pop
push
and
stos
dec
cwtl
push
test
jo
clc
arpl
push
fsubr
sbb
fs
mov
push
adc
rclb
stos
sbb
dec
rclb
jmp
adc
dec
cwtl
divb
inc
loop
cmpsb
clc
pop
testl
stos
int3
add
ss
dec
pop
test
es
xor
sbb
cli
mov
inc
and
ret
push
pop
and
or
loopne
mov
push
pop
lods
cli
hlt
xor
pushw
mov
pop
or
aaa
mov
or
dec
imul
ror
shr
cmp
sub
xchg
sub
out
andb
inc
pop
or
shlb
ja
and
push
mov
add
add
outsl
xlat
jbe
ljmp
imul
push
rcrb
fisttpl
cmpsb
lahf
incl
and
loopne
nop
jne
mov
pop
aas
loope
adc
push
adc
push
mov
bound
aad
mov
dec
push
push
mov
or
call
cmc
andl
push
mov
jl
popa
cmpb
push
rolb
inc
pop
sbb
inc
adc
testb
inc
aad
pusha
dec
insl
leave
push
mov
outsb
aam
shlb
push
push
popa
dec
shlb
out
shrb
lahf
sar
clc
loope
push
push
mov
jmp
shl
xchg
in
add
enter
lods
xor
fbstp
pop
ret
or
mov
insb
sbb
clc
and
rorb
stos
popl
sbb
pop
subb
lock
and
adc
and
outsl
or
adc
add
push
dec
sub
dec
fwait
popa
add
xor
xchg
sbb
xor
and
sbb
sarb
cmovg
sbb
mov
pop
push
roll
xchg
dec
es
and
adc
dec
movsl
push
mov
mov
loop
mov
mov
das
cmp
sub
or
mov
dec
mov
outsl
hlt
lds
add
dec
rorb
sahf
movsl
or
mov
mov
in
xor
pop
cmp
dec
out
mov
movsb
insl
out
mov
mov
mov
cli
dec
mov
in
rcr
jmp
jmp
pop
ret
sarl
aam
xchg
call
sbb
and
dec
cs
inc
push
shrl
loope
lds
mov
dec
cmpsb
test
add
push
clc
and
and
pop
daa
lcall
lods
dec
test
pusha
int3
cmpsl
mov
loop
sub
nop
jp
shll
cs
jge
and
mov
or
scas
add
ss
std
and
out
add
mov
mov
lahf
mov
fidivrl
into
addr16
dec
inc
push
lret
lea
pop
or
fbstp
cmp
shll
call
xchg
mov
dec
or
mov
pop
push
dec
js
add
cmp
add
ljmp
sub
out
add
popf
and
mov
test
mov
decl
dec
mov
loope
out
adc
dec
xchg
add
fwait
inc
mov
jb
push
xor
mov
sub
jl
add
and
cli
cltd
pop
pop
push
clc
add
jl
aad
cmpsl
cs
jle
pop
sbbl
scas
sub
sub
scas
mov
lret
add
or
add
loopne
cmp
ja
shrb
push
inc
nop
inc
stos
movsb
inc
push
jbe
popf
lea
xchg
jp
and
push
pusha
aas
ss
jecxz
mov
inc
ret
push
xchg
aas
repnz
or
push
leave
scas
sbb
inc
adc
push
es
cs
jmp
add
mov
enter
shlb
imul
or
mov
cli
or
cltd
xor
inc
pusha
pop
mov
adc
pop
push
cld
pop
add
popl
aas
adc
dec
insb
aaa
sbb
jge
insl
test
call
push
sbb
mov
lds
lcall
addr16
fisttps
dec
jo
xchg
and
ss
bound
sbb
and
adc
pop
inc
push
push
add
push
pop
mov
js,pn
test
fbstp
scas
push
xor
cmp
add
adc
pop
lods
dec
in
xorl
xchg
sbb
movsb
jnp
jo
jns
push
cmp
adc
ljmp
xchg
fdivs
push
setne
das
lret
sub
mov
dec
pop
pop
pop
testb
roll
inc
mov
cmp
dec
push
ret
sahf
rol
xchg
mov
loop
push
call
sub
rorb
fdivl
ljmp
cltd
mov
sbb
adc
pop
fcoms
mov
je
mov
stos
popf
arpl
std
xchg
jbe
mov
sbb
xchg
das
mov
aam
call
push
aaa
xchg
scas
ret
leave
insl
jbe
dec
out
and
sbb
cmp
test
xlat
pop
call
dec
ss
cmp
xor
jl
adc
sbb
push
xchg
je
sub
mov
insb
movsb
out
std
add
cwtl
in
pop
adc
push
ljmp
sub
push
mov
pusha
or
lods
pop
xorl
sbb
fmull
test
sub
add
inc
add
inc
int
sbb
icebp
ljmp
push
lock
jecxz
sbb
xadd
fcoms
xchg
jo
dec
push
movb
dec
xchg
mov
rcr
mov
inc
lods
push
sbb
and
xchg
clc
add
sbb
jl
out
jne
push
mov
push
or
push
jne
adc
inc
sbb
sbb
pusha
pop
sub
mov
mov
add
test
rolb
call
outsb
ja
push
mov
push
cmp
push
clc
add
fwait
add
sub
sub
cmp
inc
pop
idivb
push
adc
xor
daa
shll
pop
pop
insl
cmp
add
pop
or
push
xor
push
ret
pushf
aam
lret
dec
or
dec
outsl
fisubl
xor
stos
sub
pop
cmpsb
addl
sub
pop
out
xor
lock
cwtl
pushf
test
test
pop
mov
out
xor
test
mov
mov
or
fcoml
mov
lret
mov
mov
aad
mov
lock
in
addb
out
clc
subl
cmp
mov
xchg
adc
call
in
cwtl
enter
add
shll
xchg
in
test
push
pop
imulb
xor
cld
jmp
ret
andb
xchg
fiadds
iret
lret
add
cwtl
mov
jge
fs
lods
je
sbb
add
pop
adc
mov
aas
mov
mov
test
les
ds
in
jne
mov
out
add
fisubrl
jno
xor
sub
sar
jle
stos
jne
scas
inc
mov
cmc
shrb
cli
test
or
adc
cmp
jo
inc
xor
aad
in
push
fs
lods
pusha
dec
jecxz
shrb
push
pop
mov
lcall
cmp
mov
or
aas
rol
mov
fcomip
mov
mov
rorb
xchg
movb
rclb
jle
cmpsl
or
es
push
dec
pop
add
ret
daa
mov
cmp
sub
and
sbb
dec
mov
addr16
xor
aam
roll
jmp
inc
cmp
rorb
stc
dec
xor
inc
scas
pop
xlat
xchg
lds
out
or
lret
inc
sbb
rorl
inc
jle
popf
push
fld
test
xchg
push
mov
push
cmp
nop
out
dec
in
lds
orb
lock
or
push
je
xchg
repz
enter
and
test
loopne
push
hlt
imul
scas
repnz
lret
cmp
pop
daa
lcall
mov
lock
or
pop
jns
mov
pushf
mov
lds
fsts
mov
and
or
insl
sbb
xchg
icebp
cwtl
lods
add
xor
aam
js
loopne
mov
movsb
mov
or
and
or
push
orl
inc
pushf
das
je
push
mov
mov
push
jg
or
add
inc
fistl
leave
cmc
fwait
mov
adc
mov
ret
frstor
cmp
add
cs
adc
std
push
sbb
repz
jmp
fs
inc
and
jbe
fsubp
mov
or
test
pushf
scas
arpl
xchg
xor
je
stos
push
pop
mov
popa
leave
das
sub
push
lods
add
imul
xorl
push
scas
push
adcb
lds
mulb
add
daa
lcall
inc
sbb
mov
pop
push
or
pop
push
mov
rorl
in
add
pusha
jo
jle
ja
test
pop
sbb
xlat
dec
or
cmp
push
in
jmp
cmc
push
aad
lods
fnstcw
fsubrs
int
mov
pop
push
add
dec
shr
adcl
mov
jmp
xchg
mov
add
arpl
bound
mov
jno
and
lret
ljmp
pop
dec
adc
ficoms
push
imul
ds
sub
mov
jns
pop
movsb
push
pop
jae
or
push
xchg
jge
arpl
xchg
cmp
add
fs
addl
sbb
sti
shr
adc
add
out
out
lcall
and
jno
test
or
dec
out
daa
mov
adc
mov
push
popa
pop
ret
jmp
ljmp
push
data16
and
adc
mov
popa
xor
add
lods
cmp
stc
enter
xor
or
xor
rorl
mov
movsb
and
mov
shr
mov
pusha
inc
cld
aad
push
or
xor
and
aam
dec
pushf
jmp
jecxz
test
push
sbbb
scas
shll
mov
ss
hlt
test
mov
mov
sarb
stc
xchg
cmc
mov
or
xchg
add
mov
push
and
cmc
xchg
mov
imul
push
inc
icebp
sahf
lret
or
mov
jmp
stos
jne
rcll
fwait
inc
stos
loopne
push
jle
dec
test
clc
ss
stos
ret
jne
sti
add
pop
insb
jno
inc
add
sbb
repz
adc
daa
dec
add
pop
xorl
icebp
cmp
outsb
sbb
push
xchg
stos
jmp
mov
and
pop
test
sub
fdiv
pop
int
push
sub
xchg
and
popa
xor
lods
and
mov
push
pop
das
jp
jge
jle
fcoms
addr16
in
inc
stos
aaa
pcmpeqd
cli
dec
loop
ss
xchg
scas
add
mov
test
in
mov
stos
mov
xor
push
sub
add
stos
adc
sbb
xchg
or
jecxz
or
js
int3
cmp
cltd
mov
mov
jno
cwtl
scas
popa
std
pop
xchg
jne
inc
enter
rorb
inc
stos
fwait
bound
pop
fdivrp
dec
aam
push
pop
xor
fistpl
and
cmpsl
cmp
cmp
mov
in
xchg
push
sbb
dec
inc
mov
xor
inc
shll
adc
cld
aam
pusha
test
cmp
clc
mov
or
mov
lahf
mov
cmp
lea
or
movsb
pop
lret
push
cmc
int3
sbb
mov
insl
pop
sahf
xchg
fistpll
adc
out
sbbl
mov
inc
jecxz
ljmp
dec
ret
and
dec
xorl
nop
xor
dec
lret
cmpsb
push
popf
jecxz
push
stos
das
ds
push
addr16
adcl
pop
aad
mov
outsl
das
mov
lret
mov
rorb
sbb
in
push
or
sub
mov
stos
fdivrl
push
jecxz
jnp
push
mov
or
in
clc
jg
stos
imul
add
dec
push
mov
and
sub
jecxz
std
imul
xchg
dec
push
je
outsl
jecxz
inc
stos
jl
push
xchg
lock
aam
jns
es
sub
and
shrl
out
xchg
add
mov
icebp
xor
inc
je
cmp
rolb
mov
icebp
adc
std
sbb
inc
xor
push
jl
xor
sub
pop
pop
xchg
nop
outsb
js
mov
or
cmp
iret
lods
add
inc
imul
mov
jge
xchg
jbe
mov
pop
fsts
or
add
xchg
xlat
cli
js
lahf
mov
scas
into
mov
jl
repz
sbb
rorl
jl
pushw
cld
clc
lea
pop
sub
cwtl
sbb
cmpsb
or
push
mov
mov
addl
rorb
and
cmp
mov
inc
jmp
dec
jnp
lods
dec
push
fld
sbb
mov
jnp
or
nop
xchg
lea
cmc
or
mov
sarl
cmp
daa
call
cltd
cld
push
adcb
lock
addb
into
or
aam
ljmp
dec
mov
sti
cwtl
in
cmp
mov
das
leave
leave
mov
sbb
imul
pushf
jecxz
or
push
and
inc
popa
stc
inc
mov
pop
push
jl
mov
aad
add
and
arpl
mov
daa
adc
and
sbb
mov
xor
or
roll
nop
sar
outsl
sub
aas
shrb
add
sub
mov
shll
in
sbb
or
dec
sbb
pop
sub
cwtl
mov
sbb
xchg
movsl
mov
mov
mov
or
mov
cmp
pop
bound
xor
addb
and
in
fwait
adc
pop
jmp
testl
nop
fidivrs
and
or
leave
dec
subl
xchg
pop
jno
dec
lahf
cld
adc
dec
lods
and
sbb
sub
mov
test
pop
xchg
mov
addr16
mov
add
les
mov
or
ret
xchg
jbe
add
aas
jmp
fadd
in
shll
mov
push
cmpsb
jge
dec
inc
popa
loop
jecxz
shlb
rol
inc
xchg
idiv
xlat
mov
inc
mov
addr16
push
cmp
outsb
rcll
mov
out
cmp
inc
sbbl
fbld
mov
adc
clc
jo
lods
mov
ret
dec
push
pop
hlt
pop
mov
in
jo
into
and
ss
push
icebp
pusha
lock
ret
stc
jns
loopne
into
mov
lods
xchg
rorl
jo
fisttpl
pop
pop
add
pop
mov
pop
mov
pop
stos
insl
or
jo
xor
mov
jl
push
sbbl
rorl
outsl
inc
mov
das
mov
inc
movsl
aad
cmp
or
or
bound
mov
jp
and
jge
xor
fsubrs
jb
xchg
stos
jno
push
adc
sbb
and
mov
rcr
add
ret
xchg
scas
dec
cmp
add
or
push
cmpsl
mov
out
adc
jbe
xchg
jnp
in
or
mov
cmp
adc
inc
cmc
decb
fistps
sbb
sbb
andl
xor
push
gs
rolb
push
pushf
mov
cwtl
cmp
push
xchg
sbbb
add
out
cmp
imul
imul
sub
jno
or
int
inc
int3
adc
cs
cmp
test
sub
cmpsl
add
iret
es
mov
dec
pop
loope
test
es
sbb
adcb
cmp
push
cld
mov
leave
js
jg
mov
std
fs
pop
sbb
imul
in
xlat
xchg
push
push
les
sti
loopne
inc
add
pop
inc
or
xchg
rorl
das
mov
adc
mov
mov
xor
add
aam
ret
mov
inc
test
xchg
jo
add
dec
and
push
xchg
test
fcoml
add
add
sbb
mov
das
ljmp
js
ja
xchg
dec
add
add
pop
roll
xor
clc
or
mov
or
fs
sbb
ret
inc
lods
and
push
rorb
loope
xchg
inc
sbb
dec
in
adc
cli
hlt
rcll
add
shl
xor
jp
mov
jecxz
popf
fidivrl
xor
lods
or
mov
fs
shl
aam
sar
mov
sbb
bound
mov
cmp
jns
mov
mov
js
pop
mov
loopne
clc
push
fdivr
sub
into
mov
adc
nop
test
jno
inc
or
mov
cmp
fxrstor
stc
push
call
and
push
mov
andl
xor
add
ret
repnz
imul
sub
sbb
inc
push
mov
cli
cli
dec
xor
add
rcrb
mov
push
mov
adc
xor
test
jo
inc
push
and
ret
jbe
stos
fdivp
add
sti
xchg
pop
sbb
sbb
adc
sub
cwtl
sarl
cmpsb
movsb
and
mov
or
ds
add
mov
cltd
or
jbe
mov
xor
inc
cmpsb
jmp
in
add
jg
xor
insl
sub
sub
hlt
xchg
xchg
push
jo
loopne
cmp
jle
mov
dec
mov
fwait
adc
ss
data16
cmp
cmc
out
adc
adc
cmp
push
clc
es
inc
adc
dec
cwtl
fwait
and
adc
jb
orb
sbb
inc
lcall
popa
xchg
dec
inc
ret
dec
adc
sbb
mov
leave
std
mov
repnz
sbb
adc
xor
fadds
or
decb
mov
lods
push
mov
orb
or
mov
in
xor
and
jp
mov
adc
pop
add
dec
cmp
or
add
scas
pusha
mov
lahf
repnz
sti
fs
inc
mov
shlb
push
sbb
mov
clc
dec
xabort
cmp
jecxz
les
shll
dec
mov
xchg
insl
jne
mov
gs
mov
mov
mov
insl
inc
add
mov
push
mov
xor
pop
jne
sub
cwtl
sahf
jmp
fstpt
aam
xor
pop
ss
and
mov
loopne
push
orb
add
or
adc
mov
mov
int
adc
test
repz
mov
mov
xor
out
jae
fisttps
lahf
mov
cmp
dec
mov
fbld
pushf
aam
nop
loopne
mov
or
lods
or
and
or
push
push
insb
add
mov
cmp
and
pop
lea
dec
into
mov
mov
mov
fdivr
pop
push
test
loop
ljmp
fld
jle
sub
scas
mov
sbb
movsb
jmp
out
adc
bound
out
mov
sub
mov
cmpsb
cmc
xchg
out
sbb
aaa
and
pop
loope
xchg
and
test
pushl
cli
into
sbb
mov
popf
ror
dec
pop
fsubrl
outsb
sub
dec
push
add
cli
sub
cmp
sub
or
and
add
mov
or
sbb
push
xor
mov
or
adc
pop
xor
cmp
cmp
leave
test
enter
pop
test
jnp
js
mov
movsb
xchg
stos
jbe
xor
push
or
jge
lock
loope
call
jp
sub
lods
jmp
test
scas
js
idivb
orb
int3
roll
xor
loope
pop
jb
push
inc
out
dec
push
fimull
in
xor
mov
xor
jb
fdiv
insb
mov
into
cld
out
dec
rclb
mov
or
loope
cmpsb
imul
mov
lods
into
mov
push
lock
xchg
add
inc
cmpsl
pop
iret
clc
fsubl
mov
mov
and
cwtl
xchg
xchg
mov
mov
decb
push
pop
clc
sub
xchg
addr16
cmp
in
add
popa
adc
jo
add
jno
or
pop
cmpsb
inc
adc
add
push
cld
jnp
pop
mov
add
mov
test
popf
cmp
inc
push
arpl
xchg
sub
push
ja
or
push
or
inc
jg
and
and
nop
cmc
dec
jmp
aam
and
and
add
jb
sbb
push
push
ret
mov
loope
push
xchg
in
sub
aad
mov
sub
mov
imul
inc
nop
shrb
insl
ret
ret
pop
dec
pop
js
cmpb
sbb
std
test
push
cwtl
sub
jl
jecxz
mov
lea
jns
cmp
fildll
ljmp
mov
and
dec
hlt
icebp
outsl
js
jae
mov
or
jl
adc
add
in
dec
cmp
xor
shl
les
inc
jbe
mov
leave
shr
roll
clc
sbb
push
mov
pop
cld
inc
xchg
sbb
sbb
mov
mov
repz
dec
lret
lds
outsb
cld
push
int
or
ss
pop
jecxz
sbb
xlat
cld
mov
xchg
ds
dec
push
sub
push
jbe
dec
std
shl
ljmp
push
xchg
test
outsb
or
cmp
sbb
fbstp
and
xor
add
movsl
dec
push
ds
cmp
ret
add
imul
add
mov
test
mov
in
or
fisubrl
das
loopne
aam
and
fdivrs
ds
or
xchg
jae
adc
sub
add
fdivrp
or
jl
adc
lods
xor
out
cli
dec
adc
inc
cli
mov
shl
mov
imul
out
mov
lds
test
stos
into
jmp
add
mov
jl
loopne
aas
hlt
ret
and
js
sbb
xor
sbb
adc
xchg
stos
mov
enter
xor
sub
stc
dec
mov
jnp
sub
cmp
mov
aad
dec
inc
lret
or
sub
pusha
std
push
insl
shrb
mov
pop
pop
adc
push
dec
pop
inc
in
adc
xor
divb
sub
dec
mov
mov
pop
cmp
in
sbb
sbb
std
xchg
fistl
repnz
jle
add
pop
stos
cmp
sbbb
mov
fistpll
xchg
adc
ret
test
cli
push
jl
lock
iret
jno
mov
ret
or
push
sbb
std
out
xchg
xor
loope
sub
and
clc
cmp
jecxz
cmp
clc
les
mov
push
mov
pop
ja
adcb
rclb
lcall
jle
pop
add
mov
pop
cmp
divb
push
dec
add
push
test
mov
loopne
mov
bound
fidivrl
lret
push
lods
scas
addb
inc
adc
or
mov
and
sarb
add
mov
cmp
mov
inc
dec
dec
les
sub
icebp
test
adc
int
jge
push
and
lret
bound
mov
aad
ror
rcrl
cmp
push
add
shll
sahf
jo
sbb
lea
xchg
sub
pop
clc
lock
mov
imul
cmc
shlb
cs
push
and
mov
push
or
sbb
sbb
mov
pop
mov
test
mov
or
mov
fisubl
dec
jo
loope
mov
aam
data16
inc
adc
pop
push
rolb
pop
mov
outsl
jo
pop
shrl
lcall
lcall
pop
dec
sbb
shlb
lock
mov
insb
dec
inc
xorps
fistl
mov
push
addl
dec
sub
mov
pop
dec
dec
sbb
mov
aas
inc
cli
pop
scas
dec
mov
es
add
gs
mov
mov
pusha
pop
jo
lock
push
sbb
adc
jbe
xchg
dec
mov
sub
mov
in
adc
aam
pop
sub
adc
push
pushf
jecxz
push
add
pop
faddl
int
adc
dec
rorb
lret
dec
insb
xchg
loop
xor
and
mov
inc
mov
lcall
idivb
xchg
sub
and
lock
cli
sti
pop
jp
push
sar
dec
fdivrl
add
scas
cli
ret
rclb
js
inc
sbb
lcall
adc
pusha
test
inc
xlat
push
out
lret
push
add
into
lods
call
test
xor
pop
mov
imul
andl
int
push
add
push
add
inc
push
cmp
mov
jle
lods
sub
dec
inc
or
test
les
enter
subb
pop
sbb
dec
push
pop
std
cwtl
aam
push
cmc
push
cld
sbb
push
mov
outsl
mov
xor
pop
sbb
dec
and
ret
lcall
aaa
insb
fisubrl
sahf
jb
ret
jo
loope
lea
mov
cmpsl
out
mov
mov
jle
mov
cld
lea
fstpt
aas
andl
xchg
inc
push
lahf
stos
js
xchg
and
xchg
outsb
add
loopne
add
es
jo
adc
rorl
xchg
push
pop
xor
dec
mov
jb
jbe
jne
pop
movsl
frstpm(287
add
pop
clc
jo
loop
in
fmul
in
inc
cmp
fsubrs
scas
add
push
xor
jle
aas
dec
push
push
decl
cwtl
pop
mov
dec
aaa
outsl
add
inc
rcrl
insb
push
aas
movl
imul
insb
test
ret
dec
pushw
jg
cmp
fidivrs
pop
sarl
jmp
ljmp
jle
das
inc
inc
das
std
push
xchg
pusha
pushf
jnp
jl
sub
loopne
stc
add
mov
xchg
push
fisubl
nop
lds
add
jo
mov
xchg
jbe
xorb
test
xchg
shr
push
pop
push
fisubs
cmpb
mov
push
cmc
add
ss
shrb
scas
mov
add
arpl
clc
ds
and
cmp
inc
xchg
inc
andb
or
pusha
cmpsb
loope
aad
push
mov
ljmp
pop
cmpsl
lock
imul
adc
insl
add
popa
iret
nop
mov
mov
mov
shll
das
dec
pop
outsl
cli
mov
popf
pop
movsb
call
mov
cmpsb
les
jb
rcrl
jns
aam
mov
lcall
enter
push
enter
repnz
imul
xor
js
comiss
xor
sub
nop
xor
js
sbb
mov
or
and
push
xlat
lods
jmp
loopne
jno
jle
lret
jl
fisttps
xchg
adc
xchg
cmp
jle
push
pop
jl
or
lret
or
sub
scas
adc
es
es
inc
push
xchg
mov
pop
sbb
loopne
push
mov
ss
jecxz
in
push
push
dec
movsb
mov
mov
jne
xor
mov
loopne
ljmp
mov
imul
js
push
jne
outsl
xchg
mov
into
es
pop
test
bswap
xchg
call
lret
xchg
lock
les
pushl
push
cli
insb
pop
icebp
pop
adcl
imul
mov
or
loope
out
xchg
add
sbb
inc
lock
repz
pusha
mov
mov
stos
ss
dec
into
dec
je
push
cmp
dec
mov
pusha
sahf
test
cmc
into
das
or
mov
or
fsubrs
xchg
jne
sbb
cmp
pop
pop
mov
inc
adc
xchg
sbb
ljmp
xor
das
loop
pop
data16
jmp
out
xlat
add
ljmp
xchg
push
mov
pusha
fsubrs
lea
jae
mov
or
loope
and
cmc
je
push
push
dec
or
mov
mov
mov
push
mov
jb
cli
js
pop
and
movsl
add
inc
fists
lahf
inc
mov
dec
cli
pop
stos
mov
xor
insl
xor
lret
push
std
mov
or
and
adc
add
call
push
lds
sub
xor
dec
aam
test
fisubl
xchg
lret
add
or
loopne
test
push
cmp
mov
or
aas
arpl
ficomps
insl
mov
repz
imul
aaa
push
cmp
mov
and
inc
test
or
int3
je
inc
sub
aad
lret
inc
pop
pop
into
jmp
and
rclb
shr
push
cmp
outsl
jl
out
icebp
and
inc
add
lock
fchs
or
dec
shrb
insb
mov
sub
ss
rorl
push
or
mov
sub
hlt
nop
mov
and
mov
mov
int
or
add
jle
jg
jp
xchg
js
mov
inc
jns
ret
inc
popa
loop
xchg
or
mov
pushf
sarl
xor
jo
dec
xchg
sub
mov
addl
js
aas
ds
mov
stos
dec
xor
lret
psubsw
add
movsb
xor
jg
nop
adc
fnstcw
clc
mov
inc
sbb
mov
adc
xchg
jb
inc
aas
jl
jecxz
mov
push
push
movsl
rcrl
shrb
push
and
jne
mov
clc
sub
push
mov
jbe
pop
xchg
or
sar
loope
loopne
addr16
adc
or
mov
sub
mov
pusha
xor
jg
sub
sub
cmpsb
sbb
xchg
int3
out
lods
lret
dec
inc
cmp
mov
cmp
inc
inc
mull
repnz
mov
inc
lret
sub
divl
pop
add
lock
add
jno
call
lahf
xchg
and
lock
mov
ljmpw
jb
mov
mov
ljmp
push
popf
mov
and
xchg
pop
out
shlb
mov
arpl
adc
mov
lock
lods
push
test
leave
jno
sbb
and
jp
sti
push
dec
dec
adc
pop
fwait
or
outsb
inc
in
xchg
mov
mov
sbb
subw
adc
or
clc
clc
mov
sbb
and
mov
dec
adc
imul
pop
test
mov
clc
stos
rclb
clc
mov
imul
dec
in
into
jo
sub
loopne
lds
mov
clc
add
xchg
sbb
cmp
dec
fwait
sub
lret
push
cmp
sahf
dec
mov
add
adc
inc
push
out
lock
mov
cli
and
lahf
mov
jge
lretw
jb
nop
imul
lock
push
int3
pop
or
test
jae
outsl
xor
add
bound
daa
inc
push
push
aas
sbb
nop
pop
ret
or
das
sar
test
jl
jne
sbb
mov
pop
push
and
pop
lret
mov
lret
pop
call
loop
lret
call
test
outsb
les
sub
mov
addb
push
ret
popa
pop
add
push
cmpsl
faddl
fldl
or
shl
cmpsb
or
or
loopne
ja
or
notb
dec
pop
add
enter
pop
mov
shrl
les
cmc
loop
ret
sbb
int3
push
xchg
or
loop
lea
push
or
xorb
mov
sarl
repz
cmpsb
cmc
add
cli
xchg
popa
aas
jmp
hlt
xor
fcompl
or
add
stos
pop
mov
pop
add
in
movb
jl
daa
outsb
sub
mov
sub
ret
jno
cwtl
mov
fstps
je
push
xchg
jno
jbe
ja
xlat
es
popa
mov
sahf
shrb
lea
out
add
mov
ja
dec
idiv
test
int3
orb
out
cmp
loopne
cwtl
cmpsl
sub
fcoms
xor
jo
mov
repz
mov
xor
fwait
shl
pop
cmp
fisttpl
pusha
or
sub
idivl
pop
push
jo
dec
aam
adc
mov
insl
xor
in
aaa
mov
shrb
push
test
push
pop
adc
mov
fst
inc
scas
leave
sbb
fst
aas
and
mov
sbb
mov
push
pusha
add
nop
and
adc
lock
push
xor
mov
icebp
or
mov
lock
or
cmp
pop
mov
xchg
add
pushf
fsubp
ret
push
mov
mov
cwtl
lods
cmpsl
push
add
clc
push
ss
xchg
mov
les
or
stos
clc
pop
ss
mov
shrb
pusha
aam
stos
and
cmp
sti
dec
sub
lret
dec
lock
rolb
xchg
pop
inc
repz
cmp
inc
loope
int
adc
cmc
lds
loop
push
test
outsb
rorb
sahf
fdivs
pop
fnop
insb
xorb
daa
add
arpl
fs
lds
push
pop
and
xchg
icebp
jmp
adc
test
ficompl
mov
es
push
sub
rcl
in
mov
dec
gs
es
pop
jo
imul
xchg
lea
cmovb
lcall
inc
test
out
adc
mov
sub
js
push
xchg
bound
mov
and
xchg
sbb
sbb
add
jae
aaa
jle
jle
dec
gs
xlat
pop
mov
out
push
xchg
daa
clc
test
adc
sbb
mov
in
scas
add
fcmovb
push
dec
mov
fistpll
dec
test
clc
dec
negl
jp
jmp
xlat
mov
dec
insl
mov
mov
stos
or
jg
or
xchg
cmpsb
add
repnz
jo
sub
pop
xlat
cmp
sti
lahf
mov
adc
insl
mov
pusha
not
pop
lock
iret
or
js
insb
or
adc
mov
mov
adc
mov
es
call
and
inc
add
xchg
in
cmp
arpl
repz
and
mov
sbb
popf
add
fwait
pop
repnz
pmaddwd
adc
mov
mov
and
add
cmp
push
ja
jo
mov
or
lret
and
pusha
pusha
mov
adc
jnp
xor
popa
sbb
jae
push
roll
lahf
test
or
lods
aam
in
fdivrs
into
pop
adc
mov
dec
mov
jle
jnp
insb
andb
inc
pop
jb
test
popa
icebp
cmc
stos
mov
pop
push
inc
ljmp
loop
xor
hlt
adc
pop
inc
pop
loopne
mov
lret
loopne
vphaddbw
sub
cwtl
pop
push
add
mov
fs
inc
aam
test
xlat
mov
xchg
aam
rcrb
aam
lret
sub
loope
sti
lods
andb
jae
outsb
in
cwtl
stos
mov
cld
stos
rolb
lock
mov
mov
mov
dec
jmp
fcmovnb
push
inc
push
cld
mov
xchg
lret
rorl
jne
xchg
or
shrb
mov
mov
or
sbb
gs
lcall
jne
pop
outsb
jo
fsts
cmc
cli
repz
xchg
add
stc
jae
shll
inc
negl
dec
jno
inc
aaa
scas
lock
xchg
lcall
adc
loop
hlt
push
adcb
in
and
pop
mov
mov
loopne
inc
add
xchg
jle
pop
cmc
movsl
dec
mov
fdivrs
sub
dec
mov
jp
stc
cmp
lods
test
imul
pop
jnp
jp
or
adc
push
loope
clc
bound
aas
out
popa
ret
push
jg
or
push
ret
aam
pop
mov
jp
scas
lock
mov
fiaddl
dec
cmpsl
mov
pop
loop
mov
clc
adc
adc
push
cmp
adc
sbb
jp
loopne
mov
add
and
mov
mov
mov
cmovg
dec
mov
jge
inc
jnp
pop
inc
sub
jno
ss
pop
push
je
jo
pop
fs
push
jl
and
filds
sti
mov
jecxz
sbb
adcb
cmp
pop
mov
les
xchg
ljmp
jecxz
insb
loopne
lds
mov
push
stos
pop
cmpsl
xchg
js
es
pop
mov
addr16
aad
mov
ss
inc
mov
scas
add
dec
cltd
jne
dec
cmpsb
xor
pushf
cmpsb
movsl
aam
lods
test
outsl
inc
push
lock
mov
add
imul
or
dec
ret
sub
in
outsl
loop
enter
js
fnstcw
cwtl
dec
push
dec
cmp
cld
xchg
push
jecxz
pusha
mov
push
xor
dec
popa
pop
out
shrl
sub
mov
mov
daa
xorl
cmp
aad
mov
out
sbb
jo
fsubl
ss
xor
push
subb
ja
and
loopne
or
cmp
ret
scas
and
out
fidivl
jecxz
and
mov
add
or
mov
jl
loopne
mov
popf
and
xor
rcrl
sbbb
xor
mov
movsb
xchg
pop
imul
cmpsb
leave
es
mov
jo
loopne
push
cmpsl
inc
mov
scas
xchg
fs
dec
leave
testl
sarb
shll
mov
sbb
mov
fidivs
dec
inc
mov
xchg
mov
adc
aas
mov
jnp
shl
aad
and
fisubs
and
mov
adc
ret
jmp
fsubrs
xchg
adc
dec
les
pop
jo
cmpsl
cmp
xlat
fiaddl
sub
pop
sub
add
jae
outsb
in
subb
jo
xchg
add
pop
sub
and
lret
adc
testb
aaa
les
add
lea
push
dec
int3
pop
push
sahf
adc
lcall
ret
int
cmp
dec
or
lret
add
loope
or
push
mov
js
shll
out
loope
jmp
aad
insb
pushf
pusha
or
in
jp
cmp
cmc
pop
sbb
es
test
push
push
scas
inc
inc
pop
fidivrs
cld
pushf
jns
shlb
test
pop
mov
xor
icebp
xorb
and
in
lock
add
int
mov
add
mov
mov
xchg
inc
mov
and
cwtl
sbb
cmpsb
push
and
jmp
add
icebp
dec
mov
movsb
adc
mov
ret
nop
pop
add
adc
in
shl
in
and
jg
pop
daa
test
call
mov
and
or
cmp
xor
movsb
in
mov
iret
jbe
jl
lock
push
cli
mov
sti
sbb
jno
adcl
adc
cli
lods
push
jbe
cmp
push
mov
pop
lock
pop
sbb
push
adc
sbb
mov
pop
push
inc
push
dec
mov
adc
add
or
pop
dec
aad
aam
jle
repz
jmp
testl
or
mov
jb
and
scas
adc
pop
outsl
or
mov
jae
mov
sub
dec
push
push
ds
loopne
jge
dec
popa
xlat
push
lret
jp
inc
pop
sahf
or
inc
or
dec
cli
jg
cmp
test
dec
je
jo
das
sarl
in
pop
push
xchg
adc
out
shll
or
data16
mov
je
xor
push
add
mov
mov
xor
inc
xlat
lock
push
fs
jp
adc
cmp
stos
sbb
test
push
mov
xchg
test
and
xchg
pop
fisttps
mov
sub
mov
ljmp
dec
pop
pop
std
sub
jle
shrb
inc
xlat
push
mov
xor
pop
push
js
adc
sarl
push
stc
mov
ret
cmpsl
inc
adc
mov
hlt
pop
push
je
outsb
stc
pusha
pop
mov
cmc
out
push
fwait
inc
sub
icebp
aad
cwtl
push
fwait
je
aad
movsb
iret
mov
push
or
xchg
punpcklbw
mov
test
inc
out
lea
lods
es
inc
into
lods
add
pop
push
push
popf
fdivr
inc
outsl
inc
cwtl
or
cmovge
sbb
xor
push
sub
pop
outsl
test
es
daa
or
fistps
sahf
jle
jbe
addb
or
and
loopne
mov
and
mov
test
push
cld
push
jg
ds
cmpsb
test
xchg
imul
add
mov
cmpl
out
pop
test
gs
rcrb
into
cmp
testb
cmp
and
cmpsl
lea
cmp
mov
push
shlb
lock
jne
fs
xor
pop
sub
xor
lods
mov
adc
xor
ret
xchg
bound
rcll
or
scas
nop
daa
movsl
inc
or
hlt
in
fimull
fbstp
xor
xchg
push
dec
stos
je
in
push
fcmovb
add
push
test
mov
xchg
scas
mov
mov
and
push
fst
repnz
scas
or
addr16
lock
jp
movsl
out
pop
pop
or
je,pt
in
in
push
fcmovnb
jl
push
lea
fiaddl
clc
dec
js
mov
mov
sbb
xor
jl
sti
or
jae
aas
lods
pop
fisttps
add
cmp
push
xor
dec
jp
xchg
adc
mov
sbb
mov
adc
pop
jbe
jb
sbb
cmp
or
mov
add
jno
es
pop
les
jecxz
and
sub
ret
mov
add
or
ret
add
push
pop
add
mov
sarl
pushf
or
jp
lcall
adcb
push
outsb
pop
pusha
enter
dec
sbb
jb
mov
inc
out
sbb
push
movsl
push
jo
rol
and
adc
gs
adc
cmp
bound
dec
dec
jo
mov
jg
inc
fistpl
mov
push
jb
xchg
mov
test
xlat
sbb
dec
call
jp
push
or
scas
ss
ret
mov
add
loopne
fists
outsl
pop
dec
bound
arpl
mov
xor
lret
js
dec
fsubrl
std
sbb
add
fidivrl
mov
loopne
or
sub
jle
into
lahf
push
push
adc
mov
lcall
lret
jnp
lea
fs
add
inc
sub
and
mov
adc
inc
fisubs
xchg
pop
daa
or
xor
xor
fmull
mov
aam
test
fbld
outsb
inc
rolb
xor
mov
inc
cmc
cltd
mov
loopne
repnz
jb
clc
ficomps
js
jmp
or
addb
sbb
dec
in
inc
add
sbb
adc
xor
add
push
loop
notb
test
sub
mov
or
aas
mov
adc
movsb
xchg
loope
xor
insl
and
clc
pop
adc
jo
fbstp
pop
rorb
cmp
out
scas
cmpsb
outsb
add
fs
pop
push
mov
fisttpll
insl
add
sahf
mov
loop
and
in
xchg
and
into
inc
dec
cmp
in
adc
dec
sub
rcr
cs
mov
pop
cmc
cmpsl
sub
dec
push
dec
inc
imul
aad
dec
push
test
jo
mov
mov
or
cmpsb
int3
inc
test
and
push
aaa
les
neg
test
sub
es
cs
or
hlt
test
adc
mov
ds
and
add
lea
adcb
es
sub
pop
push
add
jl
or
and
sub
mov
dec
ljmp
push
je
mov
adc
lods
shrb
jae
pop
aad
addb
fistpll
lcall
adc
cmpsb
pop
es
push
sahf
das
sbb
cmpsb
int
cld
sbb
sbb
cmpsl
mov
cs
pop
sub
lcall
les
aam
fimuls
xchg
insl
xchg
stos
shrb
dec
cli
xor
daa
cld
inc
mov
daa
mov
inc
jns
mov
mov
stc
jl
jno
shlb
mov
fcoml
ljmp
mov
hlt
out
shlb
test
enter
shlb
int
push
aad
test
mov
push
cli
stos
clc
adc
jl
push
and
and
xor
insb
or
add
or
dec
dec
bound
push
adc
pop
stos
cmp
add
in
dec
inc
clc
rclb
mov
push
cmp
xor
popa
push
add
lcall
add
or
stc
xor
cmp
hlt
nop
out
pop
mov
mov
mov
cmp
js
sti
aam
mov
mov
dec
pop
xlat
xor
loope
sub
and
clc
push
xchg
or
sbb
mov
mov
repz
call
mov
or
mov
xorl
jg
cmp
mov
add
add
inc
stc
out
shlb
hlt
dec
pop
mov
sbb
aad
fbld
in
mov
leave
pop
push
cs
lret
es
fistl
pop
mov
fistl
icebp
push
enter
loopne
or
inc
xchg
push
inc
inc
insl
cli
push
mov
lret
pop
sbb
add
idiv
sub
push
cmp
and
stos
push
xchg
add
jl
scas
cli
aam
pusha
in
imul
xor
test
xorb
leave
mov
outsl
mov
addr16
mov
xlat
ret
and
and
xchg
fiadds
pop
dec
fistl
jle
inc
jmp
adc
cmp
push
in
jns
clc
out
add
es
xor
cmpb
xchg
add
nop
and
dec
cli
mov
mov
gs
sbbl
or
test
insb
sbb
test
out
add
testb
pop
sub
add
outsb
insb
add
cli
mov
sub
jmp
or
inc
push
clc
cmp
inc
or
jp
loop
cmp
push
xchg
cmpsb
mov
jle
movsb
jbe
in
push
lods
cmp
imul
push
mov
cmpsb
pop
out
lea
aaa
and
jmp
call
add
push
cwtl
dec
sub
push
fstpl
mov
mov
out
cmpsb
inc
shrb
sete
adc
roll
mov
inc
repnz
xor
in
pop
jle
ss
adc
ljmp
pop
mov
fstps
adc
add
pusha
repz
pusha
pop
test
mov
clc
inc
fucomi
cmp
cwtl
push
lods
pop
in
shlb
pop
andl
addr16
xor
or
add
mov
fbstp
mov
lret
fdiv
dec
out
cld
xchg
lret
mov
pushw
push
sarb
cmp
inc
fistl
push
aaa
mov
loop
lahf
mov
adc
adc
clc
pop
dec
js
cmp
in
arpl
or
pop
pop
add
mov
sbbb
or
or
dec
fistpll
aam
es
sbb
cld
clc
cmpsb
adcl
push
xchg
xchg
mov
ret
mov
es
push
xor
jb
pop
inc
jmp
add
in
inc
adc
add
pop
loop
add
loopne
dec
xchg
cmp
cmpsb
ljmp
js
in
xlat
rcrb
push
push
shll
dec
mov
and
ficompl
dec
xlat
clc
bound
imulb
test
mov
xor
mov
xchg
orb
and
xchg
sub
sbb
or
mov
in
clc
dec
jbe
push
xchg
lret
fdivrl
or
sub
add
mov
out
fisubs
push
das
inc
inc
mov
xor
xchg
scas
cmc
xchg
shlb
push
lcall
and
pop
cli
jne
scas
jns
jle
lods
popf
and
adc
xchg
sbb
insl
fidivl
lods
sub
lcall
mov
out
dec
mov
sub
out
scas
lea
paddd
pop
pop
cmp
sbb
mov
sub
popf
dec
xor
rcll
dec
call
aad
fdivrs
out
mov
xor
mov
push
jp
push
cli
icebp
hlt
dec
or
les
arpl
or
adc
les
adc
add
inc
or
jbe
push
pop
push
cltd
jecxz
mov
dec
cmp
call
push
add
out
sti
add
mov
pop
pop
and
adc
jne
shrb
jae
push
out
mov
lahf
orb
sbbb
push
test
ds
dec
jg
addr16
shlb
dec
xchg
cmpsb
jmp
sub
test
push
mov
test
gs
ret
adc
insb
push
cmpsl
dec
int
fcmovb
lsl
es
inc
ret
push
les
cmp
loopne
adcb
or
scas
dec
insb
fcmovu
mov
subb
rorb
movsl
xor
das
xor
jne
pop
hlt
addr16
cld
push
xlat
je
cmp
mov
mov
dec
and
stc
pop
insl
test
jl
sbb
in
arpl
mov
and
pop
inc
mull
adc
addr16
mov
loope
cs
lds
or
dec
les
xchg
sub
push
iret
sub
pop
push
icebp
mov
and
scas
sub
push
xchg
xchg
fs
push
sub
add
hlt
into
or
jp
pop
sub
nop
std
pop
fisttps
inc
hlt
or
arpl
add
mov
mov
jle
mov
mov
jnp
sub
sahf
push
in
push
psubsb
cwtl
cmp
fcmovb
sub
adc
mov
cli
ja
mov
pop
add
lahf
insb
lret
add
imul
shlb
xor
lock
xlat
pushl
adc
aam
mov
add
push
inc
pop
xchg
ret
mov
mov
js
sti
mov
cmp
aas
subl
dec
cwtl
cmp
ja
rcrb
sub
mov
pop
hlt
xor
cs
sbb
pop
jmp
or
push
pop
xchg
jmp
hlt
call
pop
nop
mov
stos
js
jecxz
push
inc
mov
lret
or
lds
pop
movsl
and
xchg
mov
cmp
push
and
cmp
xorb
mov
rorl
fcomip
mov
test
scas
add
cmp
mov
xor
pushf
cli
rcl
xor
mov
lea
inc
subl
pop
call
and
xor
mov
mov
movsb
sbb
dec
inc
xchg
ret
mov
mov
pushf
mov
add
fsubl
outsb
test
and
jl
addb
das
cltd
sbb
pusha
test
nop
jl
mov
hlt
mov
or
stc
mov
cld
add
leave
movsl
cmp
cmc
rorl
call
push
jns
out
out
clc
pop
rcrb
dec
stos
addb
ljmp
mov
mov
or
pop
test
xor
pusha
in
sbb
popa
xor
shrl
push
sbb
dec
push
fdivl
xor
mul
xchg
scas
mov
fmuls
adc
mov
xor
xor
sbbl
int
std
shrl
jle
jo
daa
loopne
xor
enter
push
sbb
ljmp
add
outsl
cmp
mov
lcall
cmpsb
jg
stos
push
or
pushf
scas
test
ret
test
es
pop
jno
jmp
jecxz
ret
inc
or
add
and
cmpsb
jle
fidivs
pop
xlat
inc
lods
xchg
adc
arpl
add
push
push
pop
lahf
pusha
iret
mov
cmp
into
call
call
push
repz
pop
fisubrs
mov
movl
outsl
ja
push
jl
or
fisttps
xor
mov
pop
inc
cld
xchg
ds
pop
aad
in
js
jns
pop
or
fdivl
mov
rcl
cld
inc
sub
rcl
mov
jge
rcl
pop
push
mov
out
rol
enter
cltd
add
jl
sbb
pop
sbb
add
cmpl
popa
mov
mov
cmc
adc
add
icebp
xor
lcall
lock
clc
ret
imul
xchg
xor
sub
adc
cmc
mov
sahf
lret
cmp
jno
data16
push
shll
push
movsl
pop
cmp
cmp
xorb
lret
xchg
xchg
sbb
mov
outsb
add
fsub
add
add
repnz
cld
js
je
clc
add
mov
cmc
jmp
in
out
gs
je
js
or
int3
cmp
sarb
mov
rol
pop
cmp
adc
inc
loop
test
dec
pop
sub
icebp
shll
mov
mov
mov
ss
sbb
test
fimuls
mov
dec
je
mov
sbb
mov
imul
adc
aad
cli
mov
xchg
jae
test
stos
sub
jle
fcomp
setp
add
je
mov
add
lret
or
add
lret
dec
inc
insb
xchg
or
loopne
stc
jge
push
jg
fisubrs
orb
je
jle
xchg
lcall
lea
in
jno
fisttps
mov
sbb
cmp
in
in
adc
mov
sub
xor
lock
loope
daa
icebp
cltd
push
cmc
mov
das
lret
push
add
cmpsl
je
ja
je
fwait
mov
sub
dec
orb
scas
ss
and
sub
jecxz
cmpsb
pop
popl
cmpsl
inc
mov
mov
lret
jo
les
cld
ss
imul
mov
loop
push
movsl
xchg
adc
lock
gs
adc
lcall
and
jo
lods
aad
lds
sbb
lods
lcall
sbb
inc
aaa
lahf
push
vpsrad
out
clc
int
and
sbb
cwtl
xchg
fcomp
mov
jno
jle
test
das
jge
js
loope
inc
jg
movsb
and
mov
and
lods
out
inc
adc
xor
add
sbb
mov
shrb
popa
xchg
ret
out
xchg
lock
ja
out
sub
pop
mov
mov
loopne
push
pushf
aaa
push
xor
cmp
fisttps
ljmp
adcl
test
push
shr
xlat
in
aas
cmp
roll
out
mov
pop
sbb
bound
fadd
and
bound
loopne
jbe
loop
lcall
and
pop
movsl
adc
mov
adc
cld
mov
sti
pop
rcl
lea
mov
push
push
pop
sbb
fstl
out
xor
pop
inc
xchg
shrl
add
addb
xchg
js
mov
aam
fiaddl
lea
ss
add
adc
idivl
cmp
test
jg
xor
aad
adc
aam
flds
inc
mov
push
push
inc
imul
hlt
push
int3
sti
cmpsl
in
sbb
lock
add
push
push
push
adc
jl
adc
in
dec
pop
cs
inc
outsl
movsb
sub
rcrl
das
push
sub
mov
popa
lret
ljmp
mov
mov
insb
inc
gs
movsl
mov
xchg
fdivl
inc
inc
ljmp
or
or
addr16
jne
push
mov
ror
jb
aaa
and
jg
mov
out
mov
sub
pop
shr
int3
sub
pop
jmp
in
push
cmp
jge
sub
mov
loope
xchg
jns
xchg
xchg
pop
jle
cmp
shl
push
mov
ret
push
jnp
jne
mov
cli
les
add
xchg
push
les
test
lahf
clc
leave
fsin
loopne
fsubl
mov
mov
scas
movb
dec
mov
sbb
test
and
cmp
pop
xor
rorl
add
movsl
adc
push
jecxz
jo
dec
clc
out
fs
add
mov
pop
pop
jbe
sahf
add
mov
and
out
pushf
or
das
jl
pop
sarb
loope
inc
adc
repz
push
mov
xchg
lret
loope
ja
jecxz
pop
ret
pop
add
xlat
mov
nop
imul
popf
lcall
push
addr16
outsb
jp
addl
aas
jmp
or
cmp
clc
add
clc
jecxz
js
sub
scas
mov
popf
popa
and
xchg
adc
sbb
out
push
ss
mov
call
bound
es
xor
sbb
sub
cmpsb
ret
push
cmp
pop
jbe
mov
sbbb
cmc
ds
and
cmp
add
aam
test
je
pusha
jne
xchg
out
orl
xor
clc
or
int3
mov
mov
push
sbb
mov
pop
add
mov
fcoml
cmp
add
mov
les
aam
outsb
sub
adc
inc
pop
nop
setle
pop
dec
mov
sbb
addr16
clc
cmp
fdivl
jle
sub
test
adc
fimuls
jle
out
push
jae
addl
sub
xor
mov
ljmp
ret
adc
js
out
subb
cmp
xor
bound
aam
adc
imul
pop
mov
lds
dec
std
aaa
and
sub
or
cmp
aas
outsb
adc
xor
aas
imul
in
aas
pop
ret
mov
hlt
stc
sbb
mov
out
dec
pop
ffree
loop
lock
lods
cs
xchg
jle
xchg
push
stos
dec
sub
inc
lret
sub
add
stos
mov
jno
lods
int
and
push
and
mov
mov
push
push
in
dec
jecxz
rolb
jg
dec
dec
mov
dec
xor
in
js
add
ja
add
pop
jmp
lock
mov
fiadds
cld
rcrb
rclb
xor
fldt
inc
lcall
arpl
je
xchg
movsl
call
add
popl
sahf
hlt
add
push
fdivrs
mov
pusha
add
loope
and
int
cli
mov
dec
stos
scas
cmp
add
sbb
adc
notb
sub
stos
mov
pop
inc
pop
mov
mov
icebp
subb
pop
rclb
scas
movsl
jmp
sbb
pop
and
lret
inc
cmp
out
cld
mov
inc
leave
fst
mov
movsb
cmpsb
ret
loop
adc
scas
insb
fildl
dec
imul
push
jno
add
in
push
les
scas
dec
xor
sbb
jno
pop
mov
mov
mov
into
push
or
jns
mov
in
test
xchg
cmpb
add
out
or
ud2
aaa
lds
aam
test
inc
mov
sub
inc
cli
loope
sub
fldl
or
mov
cmp
stos
clc
push
mov
shrb
dec
inc
inc
rcll
mov
dec
jb
jle
loop
stos
movsb
or
cmp
fwait
loope
ss
icebp
pop
ljmp
insb
mov
es
into
mov
dec
inc
into
sub
sub
cmpsb
in
into
cmp
into
inc
xor
mov
mov
push
loope
jecxz
fdiv
and
xchg
sahf
loope
aad
and
inc
push
xlat
test
inc
mov
mov
fwait
hlt
incl
scas
dec
das
js
jne
add
push
aaa
push
shll
ljmp
ud0
lret
cli
shlb
push
testl
arpl
aas
sub
xor
add
arpl
out
scas
fldcw
repnz
lahf
mov
jnp
lea
sbb
mov
es
push
cmp
mov
lods
xor
out
cmpsl
mov
push
push
xor
pushl
inc
cmp
sahf
mov
std
or
add
lret
clc
outsl
and
adc
fsubrl
cmp
dec
push
icebp
push
jo
sub
imul
iret
xchg
cwtl
add
push
cmp
lods
sbb
mov
xor
mov
cmpsb
fwait
mov
cli
out
or
push
mov
xchg
sbb
in
mov
inc
and
aam
cli
fisttpl
mov
and
int
sub
add
push
adc
add
sbb
fdivs
fdiv
cli
or
or
add
incb
roll
cs
inc
xchg
adc
insl
adc
cmp
mov
aad
fcmovne
and
or
push
push
mov
outsb
mov
out
pop
enter
push
jbe
test
idiv
xchg
jmp
in
ret
lock
loope
popa
mov
push
out
es
int3
cmp
sbb
pop
adc
and
jl
inc
loope
mov
test
sbb
sbb
aad
mov
mov
addr16
add
hlt
and
fisubl
mov
xchg
or
sbb
xchg
pop
test
and
hlt
sbb
lea
in
cmp
pop
sub
enter
fwait
jb
or
pushf
xchg
lahf
adc
test
movsl
fstps
push
lahf
call
add
xchg
out
bound
push
lea
sbb
std
push
pop
ljmp
aas
arpl
push
ret
pop
mov
mov
push
subb
notl
pop
aas
in
xor
scas
enter
push
add
outsb
sahf
push
push
dec
loopne
sti
cld
pop
loopne
sub
arpl
mov
sahf
inc
fdivrl
notb
loope
divl
ss
jno
std
jle
inc
in
adc
add
in
dec
mov
cmpsb
dec
fstps
add
lods
sbb
mov
bound
lret
ret
cmp
mov
sub
sbb
rolb
cmp
and
cs
mov
mov
pop
out
enter
mov
and
pop
daa
adc
xchg
mov
push
or
loope
sti
push
push
aad
stc
mov
pop
rolb
in
cmp
lahf
push
aad
xlat
jno
ret
mov
push
mov
mov
mov
fstpl
cmp
jne
fyl2xp1
adc
aad
addr16
cmpsb
cmpsb
adc
push
enter
mov
mov
push
mov
pop
fdivr
and
fwait
and
loopne
lock
lods
scas
jecxz
pop
loopne
add
test
cmp
mov
fcmovne
nop
dec
dec
mov
xor
faddp
mov
lods
cwtl
loope
int3
mov
pop
pop
jbe
mov
sbb
mov
adc
dec
jo
insb
ja
or
pop
cmpsl
fstpt
sub
add
pop
fistps
daa
dec
sub
xchg
push
push
in
sahf
lret
cli
mov
gs
xor
and
in
mov
iret
mov
scas
or
dec
push
push
in
jmp
xor
int
add
shl
lcall
mov
dec
push
inc
pop
jp
inc
je
call
cmp
sbb
pop
lods
mov
and
fsts
push
vphaddubd
pop
jecxz
addr16
mov
aam
rolb
adc
pushf
xlat
in
jecxz
xchg
mov
adc
inc
and
pop
jo
add
insl
mov
js
sbb
add
jmp
pop
xchg
xlat
sub
mov
aad
ljmp
push
pop
je
and
or
pop
bound
push
xor
pop
mov
std
pop
xchg
call
pop
push
sahf
mov
es
fwait
lock
add
push
aad
pop
loopne
popf
pop
mov
rolb
out
mov
or
push
shrb
adc
mov
loop
xchg
out
lds
outsb
fistl
xor
daa
movsb
neg
xchg
mov
mov
sub
bound
rolb
into
mov
fisubrl
cli
insb
cs
pop
andl
push
cmpsl
enter
fidivrl
dec
cld
lods
roll
adc
xor
fs
nop
mov
xor
mov
adc
pop
sub
mov
aad
stos
xchg
cmp
shrl
outsb
incl
or
dec
je
arpl
cmp
mov
mov
ret
push
leave
push
or
pop
pop
bound
mov
arpl
mov
sbb
lea
push
xor
daa
jl
movsl
shll
adcb
sub
jne
push
popa
add
sti
mov
stos
psrld
cs
nop
lds
push
fadds
negl
lret
push
inc
or
imulb
inc
mov
mov
add
mov
pusha
add
daa
orb
xchg
dec
hlt
push
push
ja
push
or
pop
or
adc
packsswb
lahf
dec
and
adc
push
imul
and
dec
mov
outsb
cwtl
arpl
and
mov
xor
pop
sbb
loop
rolb
pop
mov
or
imul
pop
jb
imul
jnp
sub
loop
sarl
add
hlt
adc
sub
test
pop
mov
insl
mov
cmc
in
mov
imulb
dec
imul
xchg
and
jp
pop
cmp
aas
sub
scas
sti
mov
jb
imul
call
push
cld
xor
in
cld
or
dec
es
outsl
mov
shll
es
rolb
test
pop
push
mov
mov
inc
sub
jg
es
rolb
mov
or
xchg
sub
add
mov
cs
jb
popa
fucom
jnp
movsl
mov
mov
sbb
arpl
or
aad
lea
inc
js
push
and
inc
cmp
loope
sahf
cmp
data16
and
fistpll
jge
movsl
aam
lock
fstp
insb
andl
mov
test
add
add
cltd
pop
fstpl
and
fwait
mov
cld
add
adc
push
jecxz
mov
sahf
inc
mov
lock
mov
push
pusha
sub
data16
or
mov
cmp
adc
ljmp
jmp
fisubs
pusha
sbb
or
outsb
push
xchg
fstpt
adc
mov
test
sbb
mov
xor
mov
lahf
aam
jmp
lret
cli
add
pop
pop
xchg
insb
testb
fmuls
test
add
push
push
xchg
js
or
pop
cmp
mov
adc
lock
sbb
push
out
fsubrp
int
push
mov
cld
and
mov
and
ja
pop
imul
and
add
ds
popa
insb
jmp
lahf
push
cmp
ljmp
rorb
add
xchg
mov
xor
ds
sahf
gs
mov
imul
cltd
sub
jmp
dec
dec
scas
scas
outsb
stc
pop
add
icebp
mov
stos
xchg
sbb
adc
std
inc
lods
mov
scas
mov
rcrb
or
mov
push
decb
xor
lods
push
insl
lods
int3
sub
or
dec
cmpsb
leave
push
push
lcall
call
out
into
nop
mov
push
sub
cld
dec
push
inc
jg
xchg
adc
or
decl
mov
mov
popf
outsb
mov
cmp
arpl
cmp
dec
stos
imul
cmp
and
mov
inc
je
jecxz
sub
imul
jg
mov
inc
sub
movsl
mov
jecxz
movsb
push
adc
addr16
xchg
or
push
cmp
popf
push
adc
jle
inc
push
scas
call
les
rcrl
mov
lahf
mov
ljmp
jae
mov
movsb
adc
fnsave
push
add
mov
arpl
test
pushf
les
cli
and
sbb
es
cmp
inc
jo
push
sahf
mov
cli
ja
daa
xor
inc
adc
test
cs
push
xor
add
test
push
shrb
push
movb
dec
xchg
je
push
or
or
hlt
jno
jp
clc
xor
call
pop
jb
icebp
push
jo
sub
test
xchg
xor
enter
inc
pop
loopne
rol
in
mov
imul
ret
jns
jge
imul
popl
sbb
arpl
mov
pop
or
mov
scas
sub
inc
mov
adc
push
call
sahf
int3
test
cmp
inc
pop
push
dec
imul
xchg
xchg
cmp
repnz
ret
xchg
movsl
mov
sti
or
xchg
mov
sti
mov
mov
aam
mov
dec
jp
jge
jmp
push
xchg
inc
pop
aad
push
add
mov
imul
xchg
mov
pop
pop
jge
pop
ss
mov
mov
cmp
xchg
xchg
cli
inc
mov
and
rol
xchg
or
fwait
mov
xor
outsb
mov
scas
sbbl
in
jge
fmuls
lods
jp
dec
xchg
nop
aad
cmp
or
jno
jecxz
adc
loopne
ss
test
lcall
xlat
and
mov
test
imul
psubusw
outsb
addr16
cwtl
jb
test
iret
iret
lds
pop
mov
jecxz
stc
int
jo
call
in
jmp
dec
and
mov
adc
rol
movsb
ret
mov
lret
fnstsw
lds
jge
scas
mov
xor
cmp
addb
or
inc
adc
cmc
ss
call
xchg
cmp
iret
sbb
je
dec
aas
inc
lds
jo
dec
xchg
pop
data16
sbb
pop
ja
cltd
sub
lahf
push
ljmp
push
js
sbb
gs
mov
sub
dec
es
xor
add
xchg
push
clc
xor
nop
inc
mov
push
xor
mov
mov
pushf
push
sahf
jbe
insb
jo
sbb
sar
xor
adc
sbb
test
pop
clc
pusha
pop
pusha
pop
pop
adc
adc
idivl
sbb
loopne
jg
mov
adc
cs
sbb
cli
fcoml
aad
inc
out
negb
cmc
pop
in
add
andb
pop
mov
lahf
pop
lcall
cmpb
jp
les
test
shlb
rorl
cmpsb
pop
or
mov
mov
fists
xor
cwtl
mov
test
dec
push
inc
das
pop
cli
push
hlt
fidivs
rclb
adc
insl
aas
add
jp
xor
inc
arpl
jbe
imul
cmc
mov
js
adc
rcl
rcr
pop
jecxz
dec
test
inc
and
movsl
loopne
enter
aaa
in
les
pop
stos
jne
pop
psadbw
shrl
idivl
imul
roll
movsb
and
les
xor
mov
in
sbb
sub
mov
ret
pop
ret
stos
pop
out
mov
fdiv
decb
and
subb
adc
out
lea
jbe
cltd
adc
and
aam
and
dec
sbb
xorb
popf
adc
cmp
fdivrs
mov
add
mov
dec
stos
pop
xor
adc
fildll
repz
pop
mov
test
mov
subl
jno
add
clc
dec
sbb
imulb
fdivl
bound
orl
cmp
adc
sub
mov
dec
and
xchg
push
xchg
cld
sub
inc
lret
jge
test
and
aam
add
push
push
sbb
stos
imul
jge
adc
mov
or
addb
jns
ss
jno
sbb
lods
scas
cs
nop
jp
push
mov
lds
push
outsl
xchg
mov
push
jp
jae
mov
fiadds
movsb
sub
push
sar
jge
jecxz
add
lods
je
jle,pt
sar
xlat
pop
sbb
shrl
dec
insl
pop
sbb
popa
mov
dec
xchg
out
scas
incl
or
cwtl
pop
aas
roll
repz
mov
add
dec
jbe
imul
cmpb
mov
mov
clc
orb
push
loope
repz
cwtl
nop
add
sub
pop
loop
hlt
jmp
jb
lea
clc
or
js
scas
dec
cmp
cmp
sahf
inc
test
mov
push
adc
stc
ret
dec
aaa
mov
ret
fs
push
sub
add
popa
push
imul
cld
xor
iret
pop
lock
jle
add
sbb
aad
hlt
lcall
scas
add
mov
fldt
add
inc
dec
stos
sarl
mov
adc
aas
les
or
aaa
call
rclb
adc
or
andl
jge
lret
cwtl
push
arpl
test
xchg
mov
mov
pop
push
std
xchg
movups
push
pop
movsb
xchg
ja
inc
imull
test
les
movsl
ja
sbbl
or
mov
push
fptan
pop
cmp
mov
mov
cwtl
movsl
xchg
push
shll
faddp
stc
ret
aad
dec
divb
lret
pop
sbb
add
lock
inc
mov
push
jno
mov
test
in
ret
les
hlt
mov
cmp
jo
insl
push
mov
xor
rclb
mov
loopne
cmp
and
test
mov
xchg
xlat
xchg
sbb
aas
sub
outsb
mov
xor
orb
test
jo
je
cmp
lahf
enter
mov
addl
mov
or
mov
xchg
jp
aam
mov
push
ljmp
lock
enter
loope
out
xchg
sbb
cmp
lods
cmc
mov
add
loopne
jp
push
test
ljmp
sub
jb
adc
mov
jmp
aas
dec
popa
mov
loope
inc
jl
insb
shrl
mov
lahf
imul
mul
mov
xchg
cltd
and
pusha
pop
cld
sarb
pop
sbb
mov
scas
sti
lds
nop
adc
jmp
loop
fcomps
jl
daa
add
cmp
addb
clc
pop
pop
fsubrl
test
pushl
xchg
push
sub
leave
lcall
inc
sub
or
leave
ficompl
mov
jbe
mov
push
cmpsl
push
cmpsl
cmp
push
sbb
jo
jp
lret
sbb
sbb
jne
jecxz
push
scas
inc
fs
cs
xchg
pusha
clc
sbb
jmp
add
push
out
pop
std
mov
xchg
clc
arpl
ret
and
mov
push
sar
cwtl
sub
mov
cmp
and
and
bound
adc
sbb
enter
push
or
lock
jge
leave
ficoml
fdivr
mov
push
sbbb
stos
das
icebp
or
or
je
adc
push
sbb
repnz
es
js
loop
sbb
mov
cmp
fmuls
ret
push
les
test
lods
mov
shlb
dec
test
fdiv
cmc
mov
lcall
push
or
xor
xor
ret
pop
imul
add
aam
rorl
mov
sub
add
idivl
push
in
enter
adc
add
add
daa
pop
pop
call
inc
xor
mov
push
pop
mov
lret
subb
sarl
cmpb
fwait
shrl
shrl
decb
xor
dec
mov
sti
sub
call
push
lret
sahf
adc
in
add
aam
mov
add
adc
movsb
xor
aas
loope
push
shlb
adc
and
jae
ljmp
cmp
and
xchg
fnstsw
icebp
mov
rclb
scas
xchg
dec
sar
add
aas
idivb
xchg
scas
add
adcb
push
lods
in
repz
dec
mov
mov
lock
xchg
pop
xchg
fistpll
movsb
add
rolb
scas
pop
xor
push
cmp
add
mov
xor
psubsb
out
mov
inc
xor
pop
or
fwait
pop
addb
sub
ds
or
int3
insl
or
mov
testb
mov
push
adc
adc
sub
out
and
imul
outsl
mov
xchg
scas
jp
or
ja
adc
out
sbb
and
repnz
mov
and
adc
pop
xor
jl
lea
or
jb
test
add
sbb
pop
add
ljmp
or
pusha
push
fsubrl
movsb
scas
jae
and
sub
loopne
lahf
xor
lods
fidivrs
dec
pusha
aam
mov
pop
or
jp
aas
xor
pop
cltd
jl
push
fwait
mov
xor
call
mov
roll
dec
incl
movsl
sbb
repz
cli
pop
sbb
push
adc
outsl
lret
int3
pusha
xchg
out
clc
xchg
push
xor
sbb
inc
pusha
jbe
std
leave
rclb
dec
add
int
fsubrs
xchg
pop
loop
dec
pavgb
push
cli
cwtl
jne
movsb
mov
gs
add
sub
negb
pop
pop
push
test
adc
movsb
iret
aad
dec
iret
pop
loope
imul
inc
xor
loopne
pop
fwait
xor
jo
lock
icebp
imul
lret
cmp
xchg
cmpsl
fnstsw
popa
cli
mov
inc
pop
nop
aaa
mov
push
cmp
push
roll
loopne
sbb
mov
cs
mov
cmp
push
loop
push
xor
out
lock
or
outsl
ficomps
push
ret
cmp
pop
movb
adc
push
popf
mov
pop
test
notb
add
ret
rorb
mov
pop
inc
fadd
ret
dec
cld
sbb
add
stos
mov
bound
mov
stos
or
inc
dec
mov
mov
jp
dec
mov
mov
outsl
mov
incb
sbb
rclb
add
loop
inc
cld
jle
pop
lea
pop
sbb
push
fs
pusha
sbb
dec
push
xor
push
inc
loope
adc
sub
fisubrs
pop
cmc
cmp
lcall
cmp
sub
les
xchg
movsl
add
dec
jo
lods
andl
loope
push
pop
jle
push
mov
jg
jmp
jno
pop
fstps
jp
dec
loop
push
pop
or
push
lret
xchg
push
xlat
push
aas
dec
lret
hlt
mov
imulb
call
and
lret
mov
or
out
cltd
inc
cld
ja
test
decb
adcl
mov
jecxz
mov
test
jle
pop
xchg
pop
push
insb
std
test
movsl
ss
inc
and
sub
jmp
andl
aaa
rorb
adc
jns
fprem
into
pop
jno
mov
repnz
xchg
pop
cmpsb
lock
clc
js
push
xchg
cmpsl
and
cmp
mov
fsin
adc
inc
cmp
pop
or
loope
jle
mov
cld
add
push
test
aam
fildll
fistpl
stos
movsb
mov
pop
mov
lods
fimuls
ss
fists
adc
call
push
rol
ljmp
mov
xchg
cmp
sub
pop
les
nop
ret
mov
test
and
cltd
xchg
rorb
clc
push
mov
shl
in
push
cmp
and
ret
sbb
adc
ficompl
sub
ficoml
icebp
cld
fwait
jae
lock
cmp
sbb
push
sub
cli
loopne
sub
cmp
mov
fiadds
adc
stos
repnz
jnp
add
sub
inc
jmp
fwait
jbe
jge
pusha
jl
fsubs
xchg
jnp
cmpsl
add
pop
into
subl
in
cmp
ret
xor
sbb
push
loopne
nop
inc
push
pop
pop
cmp
inc
push
lcall
or
mov
mov
cmpsl
mov
mov
jns
xor
aaa
sbb
adc
cmpsb
lds
mov
dec
cmp
out
je
leave
sbb
popf
pop
and
stos
mov
and
mov
ret
cmpl
outsb
nop
sub
pop
xchg
push
xor
movb
test
xor
testl
pop
les
out
testb
cmpsb
mov
xchg
or
cmp
or
cmp
test
lods
es
sub
mov
mov
add
ret
stos
pop
jmp
jge
incb
cmp
adc
dec
fcoms
out
sbb
add
mov
add
test
or
mov
adc
pop
inc
xor
pop
add
mov
clc
add
lods
xchg
movsl
test
lret
mov
and
mov
stos
add
xor
sbb
cs
call
out
jnp
imul
push
js
int3
xor
or
ljmp
pextrw
xchg
adc
mov
outsl
nop
subb
ljmp
pop
popf
adc
enter
jmp
or
fcompl
outsb
sbb
lcall
repz
daa
and
push
fs
pop
sbb
pop
jae
loope
fimull
cmpsb
push
les
xchg
fucom
pop
push
or
push
stc
iret
xor
das
js
stc
insl
sub
jb
daa
pop
aam
mov
faddl
mov
push
ja
inc
orb
mov
jg
faddl
es
es
sbb
push
dec
repz
inc
inc
add
scas
test
sub
pop
pop
aaa
leave
sbb
cs
jp
push
add
add
sbb
sub
or
pop
dec
cli
jecxz
fcompp
mov
add
inc
test
lods
test
sub
lret
cwtl
mulb
push
or
aas
push
sbb
xor
nop
lahf
aam
imul
sarl
add
dec
js
jne
movsb
into
insb
and
push
pop
push
mov
adc
xchg
jae
std
dec
xor
in
cmpb
push
dec
mov
adc
mov
fcom
cmpsb
or
sbb
push
xchg
sbb
cmc
inc
rolb
ret
push
jecxz
loope
out
daa
mov
adc
pop
xchg
pop
in
rolb
pusha
pop
sahf
sarb
push
mov
jmp
mov
scas
test
mov
push
pushf
inc
sub
or
sbb
cli
pop
std
inc
ret
sub
jmp
pop
jne
shll
inc
nop
inc
sub
stc
sub
inc
and
enter
std
pushf
pop
test
dec
adc
cmp
sbb
test
int3
mov
cmpsb
jb
add
or
lretw
adc
cltd
inc
popf
fidivs
call
sub
pop
pop
out
jmp
mov
lea
fsubrl
adc
out
aam
daa
pop
leave
add
push
fwait
insl
fcomps
xchg
sbb
fwait
add
fldl
push
icebp
add
lret
call
mov
enter
and
push
push
sbb
out
movsb
imul
inc
inc
sub
pop
inc
push
fadds
mov
andl
pop
outsb
stos
es
add
aaa
mov
cmp
push
pusha
call
rcl
out
jae
cmp
xchg
enter
mov
out
fwait
adc
cmpsl
loope
add
ret
mov
imul
dec
jne
cmp
enter
or
fidivrl
adc
sub
add
mov
or
neg
scas
outsb
jecxz
jne
mov
clc
shlb
add
adcl
sub
push
and
push
add
pop
les
mov
add
ret
outsl
jge
jb
lds
pop
mov
in
add
sar
add
out
push
sub
out
inc
adc
loope
rcrl
dec
cld
xchg
in
sbb
pop
sub
loopne
stos
cmp
push
sub
push
insb
jp
push
imul
xchg
rcrb
ret
and
cmp
pop
sbb
mov
out
pop
pop
xor
mov
ja
xor
jecxz
incl
or
scas
out
jmp
xchg
nop
in
add
pusha
dec
repnz
arpl
adc
pop
push
dec
outsl
lret
sub
fstpl
or
pop
int
data16
sbb
add
inc
xchg
ss
enter
das
out
js
cs
bound
fsubl
or
repz
xor
cmp
and
out
mov
movsl
movl
movsl
xor
adc
cmp
push
pop
or
and
ret
cld
mov
cmp
and
add
insb
push
dec
cld
adc
sub
aaa
pop
imul
sub
pop
or
roll
lcall
cmp
mov
push
hlt
cmp
cmc
adc
and
frstor
mov
stos
push
sar
add
add
rorb
pop
mov
xor
mov
adc
pop
and
dec
push
sbb
sbb
jp
mov
and
pop
int3
mov
sub
cmp
cmovb
je
js
mov
push
fcoml
mov
cmpsl
fwait
aam
mov
mov
loope
jecxz
mov
sbb
mov
dec
adc
or
or
stos
mov
xchg
dec
add
xlat
arpl
pop
mov
rcl
dec
fldenv
mov
push
sbb
sbbb
in
inc
or
addb
cs
push
imul
jge
test
or
icebp
jecxz
cmp
dec
add
mov
movsl
cmc
add
les
jecxz
add
dec
push
xor
testb
sahf
scas
sti
rcrb
xchg
rcrb
pop
push
mov
mov
filds
in
dec
andb
rol
or
push
jae
add
sub
repz
divb
out
mov
ja
das
push
mulb
scas
add
ret
ds
popa
and
or
rcrl
jnp
cli
pop
sahf
ret
mov
pop
push
lea
inc
jae
sbb
ss
inc
and
rorl
pop
jp
cmp
add
or
and
jecxz
imul
inc
mov
andb
jmp
push
popa
fistl
or
shll
xchg
xorb
xchg
rclb
cmp
sub
dec
push
fadds
in
adc
adc
add
jp
mov
outsl
ret
jb
pop
inc
xor
inc
pop
and
inc
xlat
xor
cmc
or
mov
jns
std
movsb
and
mov
sub
dec
mov
adc
and
jbe
push
push
mov
adc
insl
outsl
push
or
pop
dec
inc
mov
sub
dec
add
dec
lds
addb
and
or
xchg
xor
sub
out
push
popa
rcll
inc
mov
test
arpl
or
and
push
ret
adcb
push
fs
aad
enter
mov
add
inc
inc
arpl
addb
cmp
jmp
scas
inc
sub
jne
pop
cmp
adc
fwait
or
subps
mov
nop
and
test
sbb
dec
lcall
pop
sub
mov
and
and
inc
insl
cwtl
sbb
push
lock
pop
inc
imul
mov
sub
dec
neg
xchg
xchg
dec
fwait
movb
jge
sahf
fstl
dec
jl
int
shll
popf
and
movsb
sbb
popa
test
out
arpl
pop
jg
pop
sbb
mov
loop
sarl
loope
scas
stos
cmpsl
push
imul
mov
jp
mov
pop
mov
rolb
pop
or
cmpsb
mov
je
clc
rcl
mov
mov
xor
cmp
fnstenv
daa
addl
push
js
push
xchg
mov
and
lret
fnstcw
mov
sub
das
dec
popa
cli
sbb
add
adc
mov
les
adc
cmpsl
mov
push
or
mov
inc
pop
nop
push
mov
cmc
inc
or
mov
cmc
dec
sbb
roll
push
mov
shl
pop
sub
addl
fsubrs
xchg
movsl
inc
lock
les
pop
sbb
push
pop
test
cli
jecxz
shrb
cmp
jbe
jl
jo
cmpb
jmp
push
lret
pop
xor
lea
xor
icebp
cld
mov
or
cmp
ret
push
ror
jge
ljmp
ljmp
mov
sbbl
pop
jle
fbld
add
sti
stos
cld
sbb
inc
mov
sti
pop
bound
sbb
jno
jno
lret
movsl
xor
jns
daa
addr16
les
lea
push
sub
xchg
mov
cld
inc
jmp
jge
add
xchg
cmp
or
sub
iret
cmp
jbe
pop
add
and
out
mov
jno
daa
shrb
cmp
dec
lods
inc
inc
adc
sbb
xor
lds
cli
xor
outsl
jae
push
test
sbb
nop
daa
push
mov
mov
pop
scas
loope
sbb
fsubrp
imul
cmp
dec
pop
jo
imul
pushw
add
into
divl
xor
or
jecxz
dec
pushf
cmp
adc
mov
jmp
adc
aad
call
scas
test
fdiv
dec
sbb
pushf
pop
and
mov
mov
add
fldcw
pop
or
shlb
cmp
mov
mov
mov
inc
push
sbbb
jecxz
stc
pusha
cli
xchg
sub
fistps
aad
in
filds
xor
push
lea
outsb
jbe
test
xor
jne
dec
inc
movsl
jmp
test
jle
add
inc
cmp
push
popa
lock
shlb
dec
push
sbbl
stos
jno
push
outsb
or
xchg
fnsave
sbb
pusha
add
arpl
lock
and
loop
push
dec
sbb
jnp
pop
int
xchg
inc
shlb
pop
lock
mov
shlb
lods
test
jge
and
dec
adc
add
in
fidivrl
dec
cvtpi2ps
sbb
cmpsl
cltd
cmpsb
mov
scas
inc
xlat
loopne
mov
shr
mov
push
dec
js
adc
or
hlt
xchg
in
cli
call
repz
xchg
test
lock
add
or
inc
or
arpl
stos
pop
test
jg
jl
mov
xchg
fldl
push
pop
sbb
or
pop
jns
pop
sti
aaa
adc
movsl
cmp
out
cmp
dec
js
mov
shlb
addl
xchg
or
lcall
fadds
lahf
mov
xchg
dec
mov
loope
stc
xor
mov
mov
dec
loopne
jo
ljmp
adc
pusha
fmuls
or
rclb
adc
fstl
and
movsl
fwait
xorb
data16
cmpsl
lret
push
repz
cmp
aad
out
ja
xchg
or
ret
sbb
add
inc
add
js
sbb
out
lret
cli
mov
pop
inc
lock
scas
adc
test
mov
shll
stos
mov
aas
fisubrs
mov
fstpl
jg
mov
push
andb
sub
stos
mov
inc
dec
or
xor
stos
mov
pop
mov
std
je
fst
push
pop
ljmp
add
lock
dec
sbb
xchg
cld
ds
xlat
jae
mov
outsb
shrb
cmpb
cmc
mov
xor
add
xor
int3
daa
in
jmp
sbb
in
sti
mov
jge
inc
xchg
mov
je
loopne
clc
arpl
dec
inc
gs
adc
adc
icebp
push
pop
dec
dec
jne
push
fcomps
adc
xchg
push
jbe
stos
leave
aam
push
jbe
jae
call
or
jle
sbb
push
add
loopne
fnstcw
in
movsb
sub
mov
loopne
ds
mov
sbb
fistpl
in
xchg
mov
lahf
mov
pop
scas
cmovl
cmp
call
cmp
clc
pop
mov
test
pop
adc
sti
mov
leave
cli
xor
adc
pop
das
int3
and
fcomps
adc
or
cmp
je
dec
jl
add
shr
push
and
aas
jne
imul
cs
sub
jp
add
jp
jecxz
mov
cmp
jg
or
xor
mov
mov
sbb
popa
dec
je
add
xlat
lods
mov
pop
cmp
xor
rorl
outsl
push
pushf
test
jg
std
or
or
pop
pop
or
jecxz
clc
ret
jo
jno
sbb
cmpsb
shlb
call
mov
fisubl
lret
xchg
push
inc
lret
adc
lret
inc
clc
mov
repnz
adc
stos
push
sub
in
mov
mov
call
push
in
xchg
enter
cld
mov
ljmp
push
loopne
andb
adc
xor
out
jge
mov
adc
mov
mov
stos
pcmpgtw
add
lea
cmpsl
pop
loop
xor
scas
loopne
test
call
int
sbb
jbe
or
sbb
pop
jl
sahf
into
pop
and
lock
push
dec
adc
adc
pushl
pop
sbb
lahf
ljmp
pop
nop
jecxz
shrb
xchg
jle
inc
xor
mov
or
push
inc
xchg
popl
les
scas
fbld
mov
cli
dec
fdiv
adc
push
ret
decb
inc
enter
or
dec
adc
push
pop
mov
loop
test
and
mov
add
fstl
jl
mov
std
or
sub
push
or
push
mov
std
xor
jle
aaa
or
shrl
cld
rclb
xor
xlat
xchg
adc
ret
mov
lea
rolb
xor
or
in
sbb
insb
mov
loopne
add
push
or
jg
clc
mov
sub
or
push
das
fdivrs
inc
add
cmp
in
cmc
pop
hlt
xchg
decl
inc
pop
mov
dec
jecxz
insl
enter
sysenter
test
jmp
sub
int
jnp
jno
or
out
or
push
aas
jle
xchg
fcomps
pop
cmp
add
jnp
sub
dec
js
adc
xchg
lods
inc
loopne
pop
call
dec
int3
test
xor
insb
add
rclb
shlb
inc
aas
push
rolb
jecxz
xchg
dec
fst
and
cmpsl
inc
lcall
mov
das
arpl
mov
or
repz
rorb
push
mov
sbb
xchg
inc
scas
push
js
andl
push
push
and
push
les
jae
xor
jecxz
push
lea
dec
and
jl
rclb
mov
test
add
adc
xchg
inc
pusha
cmp
clc
cli
inc
sub
mov
jle
xchg
lock
outsb
cmp
incl
roll
pop
cmp
sbb
jbe
aam
dec
addb
pop
arpl
test
jb
mov
or
cmp
cmp
mov
mov
cmpsl
loope
dec
clc
push
push
push
cli
imul
fcomps
out
sub
adc
sbb
cli
inc
ljmp
mov
jg
sahf
add
stos
mov
cmpsb
add
sbb
mov
jae
clc
xor
sbb
adcl
push
inc
out
pop
out
mov
mov
popf
outsb
leave
push
inc
xchg
out
mov
mov
push
cmp
inc
pop
cld
in
test
xchg
add
das
das
mov
stos
jno
dec
mov
cmp
int
cmp
mov
scas
push
xchg
test
dec
divb
dec
dec
outsb
adc
adc
xor
dec
ret
mov
xor
cmp
adcl
stos
int3
es
decl
in
cmp
push
aad
and
push
data16
shlb
scas
ret
cmp
add
jnp
push
xlat
add
fisttps
pop
xchg
inc
pop
scas
loope
jbe
xchg
mov
pusha
push
and
add
push
mov
loop
mov
cmp
mov
sahf
xor
aas
pusha
dec
testb
loop
push
sbb
pop
cld
adc
jecxz
clc
cmpsb
dec
sbb
hlt
pop
mov
xchg
jge
inc
iret
jg
cmc
cmpsl
pusha
or
dec
add
lret
adc
and
js
lods
xchg
push
mov
push
xor
sarb
in
inc
inc
lds
ret
test
add
pop
push
dec
inc
xor
fs
cld
mov
add
testl
in
xor
ret
push
push
cli
mov
sbb
cli
jns
daa
add
and
fnstenv
mov
adc
sbb
movsb
mov
mov
fsubp
rol
pop
dec
cld
repnz
popa
dec
fwait
ljmp
mov
ljmp
cli
jle
out
and
and
rcrl
loope
movsb
add
mov
xor
aam
add
fs
test
andl
and
mov
cs
pop
shlb
inc
sub
add
popf
in
icebp
lock
add
mov
or
or
mov
bound
nop
fld
pop
or
sub
dec
loopne
aas
jb
jl
js
dec
fldl
and
bound
pop
push
fs
and
and
adc
xchg
hlt
arpl
fisubs
sub
mov
adc
ret
mov
hlt
jb
ss
mov
lods
pop
jecxz
cmp
stc
dec
jl
fucom
out
gs
aas
add
rcll
rcr
xchg
lock
jmp
mov
aaa
mov
xor
test
inc
push
dec
mov
dec
jnp
rcrb
push
movsb
mov
icebp
cmp
jecxz
push
pop
dec
imul
sbb
outsb
sbb
mov
mov
dec
mov
mov
cwtl
mov
iret
sbbb
shlb
repz
sub
das
pusha
jecxz
scas
ret
mov
hlt
sbb
sub
mov
mov
lcall
sbb
loop
push
sarl
jge
sar
loopne
pop
out
hlt
les
out
or
shl
sub
sub
shl
call
sbb
sub
jb
fs
out
test
in
mov
enter
mov
pop
popa
lahf
ficoms
cs
std
outsb
pop
addr16
call
dec
xchg
les
iret
mov
sub
rol
push
mov
and
jne
imul
incl
push
daa
into
ffreep
xlat
rcrl
icebp
inc
clc
loopne
outsl
addr16
add
fptan
jle
mov
loopne
cli
sub
xchg
ficomps
rcr
imull
aaa
lods
and
sbb
leave
je
xchg
sbb
pop
rcrb
xchg
mov
xor
xchg
jl
lar
out
arpl
shr
cld
test
mov
cmp
and
pop
mov
ja
stc
nopl
repnz
push
lcall
mov
cmp
pop
lret
fdivl
push
cld
movb
stos
imull
push
lret
mov
pop
cmp
cmp
inc
push
jle
jbe
lahf
mov
ds
sub
xchg
sti
inc
shlb
mov
pop
ss
repnz
scas
in
repz
and
ss
inc
sub
test
lods
hlt
jecxz
aaa
cmp
inc
inc
popa
ljmp
fs
pop
inc
pop
frstor
loopne
es
xchg
popa
aam
loop
fmull
and
xor
test
or
jmp
loopne
add
repnz
mov
jl
fcmovbe
jo
lds
cmpsb
lcall
js
sbb
into
xlat
pop
in
jp
jecxz
adc
orl
frstor
outsb
pop
das
test
lock
lds
and
and
stos
ret
inc
shl
xor
movsb
fidivrl
out
in
sbb
push
iret
scas
jbe
inc
mov
jbe
mov
lea
fimull
cmc
jmp
enter
in
ret
or
add
mov
dec
pop
enter
xor
ficoms
sbb
sbb
pop
outsl
je
je
les
add
inc
movsb
outsl
lds
daa
pop
adc
loop
orl
xchg
xchg
push
push
stc
push
imul
add
cli
sbbb
sub
pop
stos
add
sub
sbb
pusha
sub
adc
push
push
pop
push
std
push
lret
push
lods
xchg
mov
ret
sub
mov
push
hlt
popf
push
lea
ret
movsb
dec
dec
in
adc
pop
lock
sub
mov
in
jns
mov
adc
push
clc
shrb
sub
nop
and
jbe
je
sbb
inc
lret
pusha
filds
lods
ret
rorb
mov
xor
jg
push
jecxz
ret
dec
jge,pn
adc
pushf
xor
adcb
and
out
inc
repz
cmc
add
ss
fnstcw
or
repz
mov
jl
mov
cmp
mov
cmpsl
stos
fadds
test
pusha
je
sbb
add
sbb
mov
in
clc
cmpsl
das
lcall
push
pop
movsb
cld
mov
je
repz
ret
dec
fs
add
mov
push
stos
sbb
loope
add
jo
cmp
cltd
test
pop
push
sbb
ret
cld
fists
push
stos
fstl
subl
sub
pop
call
or
in
lods
data16
loop
cmpsl
inc
and
or
push
inc
jmp
test
push
sbb
mov
pop
pop
lods
and
inc
or
cmpb
push
movsb
mov
or
mov
add
enter
cmp
lea
addb
jp
or
jg
push
cmpsl
add
ljmp
loope
movsb
sub
inc
ret
jns
lcall
add
jo
mov
mov
push
shll
mov
or
hlt
fwait
lock
push
add
xchg
insl
aam
or
pop
mov
aas
pop
je
faddp
outsb
jo
shl
loop
jg
dec
clc
add
and
mov
xchg
push
movsl
mov
pop
push
sub
sbb
cmpsl
add
loopne
loopne
inc
sub
xchg
mov
or
and
inc
mov
bound
lcall
movsl
add
jecxz
xchg
sub
xor
push
nop
mov
mov
fsubs
dec
adc
je
xor
push
mov
cmc
loopne
shr
flds
cmp
cmpsb
ljmp
jns
lahf
dec
loop
sub
push
xchg
push
lcall
mov
ljmp
loop
je
push
orl
insb
test
bound
or
adc
jns
in
fsubl
fwait
push
lds
ja
jg
sbb
inc
cmp
add
and
test
pmaddwd
adc
dec
repnz
test
popa
xchg
or
adc
sub
mov
mov
lea
adc
sub
mov
jne
cld
sbb
ret
mov
shrb
pop
adc
negl
push
call
rclb
ss
cmp
in
incl
mov
aas
adc
hlt
add
pop
mov
not
sbb
repnz
sub
lods
mov
sahf
lods
movq
and
inc
xchg
mov
movsb
data16
and
fwait
jb
or
dec
inc
hlt
inc
push
xchg
pop
ss
xor
mov
and
mov
imul
ret
push
push
pop
push
jmp
aaa
addb
pushf
clc
out
add
test
add
cmpsb
jg
pop
jb
xor
in
filds
mov
jmp
mov
imul
outsl
addl
pop
mov
and
in
into
cmpsl
push
mov
mov
aaa
mov
inc
out
clc
pop
rcr
or
pusha
jb
rorl
or
fldt
nop
cmpl
mov
mov
pushf
mov
adc
sub
jmp
mov
push
push
adc
ficoms
push
aas
jmp
jl
and
std
int3
cmpsb
pop
jbe
mov
xchg
jnp
pop
fwait
cli
popl
rorb
in
or
ffreep
testb
push
pop
push
cld
mov
test
add
repz
bound
out
jne
loopne
sub
push
lahf
shl
cli
mov
das
in
lds
andl
and
add
dec
nop
pop
popa
lds
sti
add
jae
sbb
inc
sti
data16
cmpsl
adc
negl
fbstp
int
movsb
pop
pusha
push
arpl
inc
fwait
jno
je
adc
mov
aaa
and
int
dec
adc
sbb
cmc
mov
rorb
sub
pusha
and
fstl
data16
or
sbb
inc
lret
sbb
in
cmpsl
or
add
add
aad
cli
mov
out
jo
mov
aas
aaa
lock
into
and
shl
mov
push
fidivs
jne
and
and
test
mov
and
xchg
in
add
fwait
movsl
jnp
js
sub
data16
out
mov
stos
jno
mov
xor
push
push
jle
popf
mov
rcrb
sbb
imul
mov
pushf
jmp
mov
aas
sub
sub
push
daa
ss
push
adc
jb
fwait
pushf
int3
add
inc
pop
js
cmp
pusha
into
mov
rcrb
mov
add
aam
stos
xchg
xor
loopne
jbe
push
sbb
mov
mov
xchg
push
loop
lods
or
pusha
sub
dec
or
mov
mov
insl
push
out
data16
xorb
or
push
fistps
and
mov
push
popa
xchg
outsb
clc
and
test
xchg
adc
sub
aas
dec
ljmp
xor
out
lock
clc
lods
mov
outsl
jg
jmp
cld
in
mov
rorl
clc
js
push
xchg
outsb
xchg
sbb
jp
dec
cmp
pop
adc
les
popa
mov
or
jp
mov
rorb
movsl
je
mov
stos
sbb
mov
loopne
xchg
cs
loope
lret
jbe
dec
mov
dec
fistpl
nop
je
js
push
into
jmp
and
testb
js
inc
adc
inc
jbe
mov
rcr
andb
lock
push
es
mov
or
mov
adc
popf
adc
jg
out
daa
mov
inc
xchg
add
pop
adc
mov
lock
xor
and
rcll
insb
mov
ds
sar
enter
les
ljmp
lock
mov
lea
inc
and
lods
xor
mov
cld
pop
lods
or
loope
pushf
xor
fstpt
cmp
imul
sahf
stos
loop
loopne
rcll
sbb
mov
lcall
pop
mov
sub
dec
jg
push
push
insl
adc
inc
bswap
repz
jns
adc
push
js
cmp
imul
daa
lock
bndldx
inc
lahf
push
add
cs
icebp
leave
test
mov
in
push
adc
sbb
inc
dec
clc
mov
mov
sbb
jns
aaa
addr16
subl
mov
jnp
daa
pop
outsl
icebp
mov
jp
mov
sbb
mov
test
pop
loopne
sub
xchg
clc
lods
stc
and
or
sbb
xor
sub
out
add
in
sbb
dec
xchg
inc
push
int
adc
pop
cld
es
adc
add
in
mov
les
rolb
out
addl
test
xor
std
sub
mov
and
mov
mov
sub
jg
push
loope
addb
into
cmpsl
fdivl
stos
mov
sub
scas
icebp
aaa
fisubs
mov
or
push
mov
add
jb
xchg
mov
test
hlt
add
mov
inc
je
jp
loop
pop
push
pop
cmp
clc
outsb
outsb
cmc
adc
inc
mov
lds
lret
shr
xor
mov
cltd
jns
cmpl
mov
add
loope
mov
mov
jle
int
push
cwtl
lods
scas
icebp
mov
fwait
push
stos
push
xor
in
dec
insb
xlat
jo
popf
loop
insb
sbb
ret
lock
pop
add
les
add
clc
push
popa
lods
imul
inc
repnz
sub
push
sub
shlb
stc
ret
rol
movsb
and
orl
test
pop
add
adc
jae
sbb
mov
fmuls
fildl
aas
loop
test
add
fwait
leave
and
xor
rorb
mov
and
mov
cmp
stos
cmp
push
sub
inc
adc
inc
jmp
lea
and
loopne
inc
js
mov
decl
sar
xor
out
jl
inc
sub
mov
lods
daa
and
aas
pop
hlt
cs
repnz
xor
je
fstl
push
xchg
fnstcw
fst
andb
fisubs
add
scas
xor
vpshlq
mov
daa
es
sub
or
mov
xchg
mov
lret
hlt
test
ss
jbe
fdivrl
ret
cmp
sarl
sub
add
cs
mov
sbb
aaa
jle
mov
inc
xorl
pop
adc
in
jo
jne
and
add
les
call
mov
mov
xor
xor
lock
rcrb
xchg
les
rcl
fidivl
and
jo
imul
push
sti
and
pop
imul
lret
pop
ret
dec
inc
mov
es
movsl
aad
push
jne
jl
movsb
lods
cmp
lods
insb
mov
mov
enter
lds
ds
jmp
mov
in
sub
inc
mov
in
mov
push
dec
pusha
outsb
sbb
stos
fwait
mov
sbb
arpl
mov
inc
jecxz
dec
inc
ds
and
jmp
push
aas
jmp
adc
and
xor
pop
push
in
mov
shrl
mov
out
jecxz
lcall
mov
jl
or
mov
mov
ljmp
inc
cmp
mov
lock
adc
cltd
pop
rorb
into
fmul
or
push
pop
lea
ja
sbb
cmp
sbb
loopne
mov
fisttpl
inc
pop
lock
push
inc
insl
rcrb
sbb
mov
push
lock
outsb
popa
scas
ljmp
cs
cmc
mov
mov
fcoml
push
mov
push
adc
and
rorl
mov
fcmove
inc
daa
bound
ret
add
sub
dec
pushf
packsswb
pop
pop
add
mov
mov
mov
sub
nop
inc
movsl
clc
shll
daa
cld
or
mov
aaa
lea
sub
xor
out
je
jae
nop
add
jp
mov
movsb
nop
call
dec
sbb
bswap
mov
mov
js
enter
std
add
adc
mov
dec
jge
fcomps
cli
or
cli
je
dec
mov
sbb
mov
dec
ja
and
lret
js
loope
xchg
mov
jnp
test
les
push
jp
mov
and
fbstp
in
adc
mov
or
pop
xor
fwait
push
mov
call
repnz
mov
pop
int
pusha
fisubrl
pop
sahf
mov
je
pop
ret
mov
add
mov
jg
shl
stos
daa
adcl
mov
pop
xchg
jno
and
jnp
ljmp
dec
sar
int
and
and
sub
aad
xchg
in
add
js
aaa
sti
dec
inc
ja
add
xchg
out
xorw
fidivs
stc
cmpsl
dec
jo
into
movb
mov
insl
gs
clc
loopne
out
mov
cltd
jns
cli
and
or
cli
push
fstl
lret
ljmp
xor
imul
add
mov
pop
jmp
fmull
sub
xor
mov
mov
jge
jno
xchg
outsb
push
iret
mov
scas
dec
jmp
xchg
roll
loope
xor
loope
jne
xor
cli
add
push
push
pop
shlb
add
ja
sti
sbb
jge
mov
push
pushl
cld
jo
xchg
ss
ss
ret
mov
cmp
cmp
ficompl
lock
jb
int3
add
dec
ljmp
test
std
sbb
mov
insb
in
in
mov
inc
in
ja
push
mov
mov
mov
or
out
cmc
into
jno
pushl
add
cmpsl
aam
arpl
push
mov
xchg
test
jecxz
aad
add
iret
sbb
sub
ja
shl
lds
and
dec
mov
jle
cmp
dec
pop
push
dec
mov
xor
cmc
stos
bound
ror
xlat
jmp
dec
test
lcall
lea
dec
xchg
pop
jp
push
jecxz
dec
leave
inc
pop
sbb
arpl
bound
in
movsb
in
or
fdivrs
sbb
fnstenv
mov
or
adc
ret
mov
lret
dec
mov
decl
mov
push
push
fs
mov
stos
ss
scas
movsl
jne
mov
push
push
mov
cmp
add
test
and
lcall
gs
std
rorb
iret
loopne
jge
mov
and
inc
xchg
fnstcw
jp
dec
lock
std
pop
mov
addr16
insb
adc
inc
mov
je
adc
mov
or
add
sbb
addl
jmp
add
cmp
or
xchg
nop
or
cmp
test
mov
pop
jo
mov
stos
aas
int3
daa
scas
inc
mov
gs
ja
movsl
inc
sbb
fisubs
xchg
rolb
mov
bound
nop
out
popf
mov
shlb
ljmp
les
sub
cmp
loopne
aam
outsl
cmp
jle
mov
out
mov
fimull
jl
mov
cmc
fsub
mov
cmp
jecxz
fmulp
cmp
aam
xchg
ret
pop
xor
std
mov
leave
sub
add
pop
lock
xchg
mov
nop
xchg
pusha
add
mov
pop
and
jo
xor
jecxz
out
jo
sub
mov
cmp
pop
cmpl
insl
mov
das
add
js
xchg
out
add
mov
jns
cs
int3
int
add
rclb
sbb
push
ret
sbb
and
inc
shll
scas
scas
scas
pop
adc
and
lret
call
mov
aad
and
aaa
clc
mov
lcall
in
push
enter
sbb
cmp
leave
inc
adc
sbb
adc
cmp
add
call
xchg
scas
out
jmp
or
add
sysenter
shrb
lcall
pop
xchg
aad
mov
xchg
cltd
xchg
push
and
test
cmc
sbb
mov
mov
cli
push
jge
xor
mov
lret
loope
aam
xor
cmp
mov
lock
daa
mov
lcall
mov
lret
out
mov
jae
xchg
movsb
dec
adc
or
mull
lret
mov
cld
sbb
cmpsl
sbb
and
dec
cmp
pop
cld
jg
fstp
dec
js
push
out
aas
xor
xor
xchg
xor
out
dec
in
cmp
cmpsb
xchg
icebp
push
and
push
pop
add
cmpsl
icebp
push
xor
outsl
push
or
add
mov
addl
pop
xchg
sbb
popa
in
add
lcall
das
jl
insb
lret
seto
jno
std
lea
push
outsl
add
inc
sbb
in
push
push
inc
lds
outsb
mov
push
je
jns
jp
xor
xchg
jecxz
or
sbb
ss
or
push
push
lcall
xchg
shr
daa
loop
cmc
lahf
addr16
push
ss
movsl
cwtl
push
shll
xor
pushf
insl
movsl
adcb
sti
push
adc
icebp
fidivs
pop
cmpsb
mov
or
aaa
cmp
dec
loope
cli
ljmp
pusha
loopne
mov
in
mov
fmull
icebp
nop
dec
add
sbb
rcrb
cs
xchg
fnop
loope
or
lods
ret
mov
fdiv
ret
add
sbb
incl
imul
sub
daa
jo
pop
loopne
cli
outsl
hlt
adc
push
jne
cmp
out
js
dec
push
ljmp
popf
inc
ret
movsl
jo
aaa
dec
es
cld
mov
and
popa
cmp
int
lds
add
testb
pop
out
imul
lret
sarl
sub
xchg
adc
icebp
jmp
imul
lret
movsb
bound
mov
stos
push
inc
and
rcrb
xor
mov
loopne
or
sbb
das
cmp
and
cmpsb
and
pop
ret
loope
push
jno
call
mov
inc
pop
cmp
loopne
outsl
mov
inc
xchg
mov
jne,pn
sbb
xor
cmp
outsl
inc
jecxz
fmul
dec
aas
out
jne
lahf
xchg
and
incb
adc
pop
add
idivl
test
clc
shlb
push
std
in
xor
rcrl
sbb
dec
aas
add
or
jo
xchg
repz
repnz
jno
cmpsl
xchg
lods
sub
in
add
aam
loop
push
cmp
jae
clc
test
scas
add
cmp
repnz
clc
in
sbb
dec
mov
mov
jmp
imul
aam
stos
das
xor
dec
gs
xor
sar
fdiv
push
ficompl
arpl
jb
sbb
sbb
iret
rcrl
jae
dec
xor
insb
lods
shrb
sub
push
jo
scas
add
add
je
popf
mov
and
push
lret
dec
test
mov
mov
xchg
call
inc
call
mov
test
dec
xchg
enter
mov
xor
inc
sti
inc
loope
and
fnsave
data16
popl
mov
in
addl
xor
pushf
loop
rolb
push
ffreep
inc
out
mov
mov
ja
stos
enter
sub
out
lock
push
rol
push
loopne
jae
adcb
loope
lcall
test
and
and
sbb
int3
and
xchg
mov
pop
ja
lods
jbe
dec
popl
roll
inc
mov
ljmp
mov
ds
in
sti
sar
xchg
in
jbe
iret
xchg
jo
add
sbb
mov
in
mov
popf
and
xor
cld
repnz
out
xor
in
lea
inc
add
shlb
inc
cmpsl
cmp
fisubrl
mov
dec
sarb
cmc
or
lret
sbb
and
sub
jmp
inc
mov
xchg
cmp
dec
je
inc
loop
mov
cwtl
and
jecxz
pop
je
inc
dec
loop
adc
js
jnp
or
or
test
pusha
inc
add
mov
add
mov
push
mov
xor
pop
popa
push
hlt
dec
cmpb
add
sub
sbb
and
push
sub
scas
xchg
lock
sti
add
and
popf
lahf
test
dec
fbld
jecxz
xchg
jge
lea
sub
adc
jecxz
mov
pop
ds
jge
out
in
stos
sbb
mov
inc
xlat
sbb
insl
fwait
icebp
xor
orl
je
cmpl
fwait
clc
xor
push
jle
push
adc
xor
addr16
mov
mov
pop
aad
cmp
sbb
insb
xchg
adc
or
add
fisttps
xchg
sbb
pushf
lods
dec
sbb
cmc
or
adc
fwait
scas
adc
add
mov
adc
or
sbb
or
mov
add
sti
roll
pop
adc
jp
imul
jge
mov
cmp
xor
or
xchg
shr
add
jle
sahf
or
es
inc
and
mov
jecxz
inc
jp
push
fwait
cmc
sub
cmc
mov
insl
in
lods
xor
loope
mov
ret
ret
aad
mov
and
lret
aas
sub
incl
sbbl
sbb
scas
push
or
ffreep
and
add
mov
dec
hlt
xor
jne
movb
loop
add
fwait
dec
test
mov
xor
mov
cmp
inc
inc
ret
push
mov
or
mov
lret
sub
dec
pop
mov
pop
fwait
push
shlb
jmp
add
insl
lret
dec
sbb
xchg
add
test
aaa
leave
clc
push
xor
ljmp
jne
clc
test
jecxz
shrl
fiadds
std
add
out
or
test
lret
xchg
mov
cld
cmpsl
cmp
insb
fcomps
mov
pop
jae
scas
aam
jne
fstl
inc
inc
inc
mov
xor
and
jecxz
jno
and
or
loope
addl
hlt
call
add
add
xor
mov
movsb
jmp
rcl
xchg
shl
lret
addr16
stc
jmp
into
and
decl
add
xor
loopne
jo
arpl
cmp
pop
sub
fcoms
jb
sbb
outsl
mov
cmp
pop
fwait
or
push
cmp
push
popa
fadd
jg
hlt
or
jecxz
ds
in
dec
cmpsl
test
add
rorb
push
jo
add
add
or
xchg
je
cmpsb
xor
clc
dec
add
jae
fnstsw
jl
aas
aas
adc
je
mov
jmp
add
jnp
aaa
xchg
in
stos
push
push
je
clc
jmp
mov
int
mov
dec
push
lea
out
sti
cmp
push
in
pop
inc
jmp
and
sbbb
es
out
and
or
sbb
daa
repnz
mov
jge
out
roll
or
or
jmp
or
std
sbb
pop
jge
mov
out
add
inc
out
add
dec
mov
inc
pushf
imul
dec
push
je
push
push
jae
and
push
mov
adc
stos
adc
sbbb
ja
cld
bound
jge
xor
add
movsb
add
dec
stos
cwtl
cmp
jmp
sbb
jnp,pn
icebp
loopne
cmc
cmp
dec
pop
xor
push
roll
add
xor
xchg
jg
pop
inc
sbb
mov
pop
add
in
and
xor
sti
notb
mov
out
rcll
scas
mov
sbb
rcl
mov
repz
les
adc
adc
pusha
mov
cmp
cs
adcb
pop
mov
add
mov
or
cltd
sub
dec
movsb
or
push
or
fcoms
jbe
ss
icebp
into
or
jnp
xor
add
mov
cld
idivl
ret
cmpsb
faddl
stc
outsb
rol
jmp
mov
sub
mov
mov
lods
sbb
xorb
inc
jmp
inc
dec
fwait
inc
cmp
mov
mov
insl
mov
not
or
xor
scas
add
lock
mov
ljmp
jle
add
xor
xlat
lret
mov
dec
pushf
pop
lret
sti
shll
sar
pop
dec
bound
pop
dec
pop
mov
jo
shrl
mov
sti
out
test
and
stos
dec
fcomps
and
push
pushf
imul
shlb
or
mov
xchg
sub
dec
fmul
and
lods
xor
and
mov
stos
jbe
ret
sbb
push
int
mov
rcrb
dec
imul
push
ret
sbb
pushf
xor
fimull
jg
dec
orl
xchg
add
hlt
xchg
mov
and
cmp
arpl
jg
jne
loopne
in
inc
sahf
mov
xor
idivl
dec
leave
pop
in
aas
bound
lahf
push
das
fldl
outsb
push
mov
rorl
cmpsb
jne
pop
pop
addb
test
jno
mov
mov
iret
popf
add
nop
mov
sub
imul
imul
sub
xchg
ret
lods
mov
lea
xchg
in
jmp
inc
fucomi
cmp
add
add
xorl
shll
icebp
and
call
pusha
pop
loope
add
xchg
xorw
adc
lret
sahf
fwait
xchg
testb
movlhps
mov
iret
add
push
push
pop
jno
xchg
mov
mov
mov
cmpsl
fdiv
fisttpl
push
cmp
jbe
into
sub
out
jp
xchg
lock
iret
lcall
cwtl
mov
jmp
push
push
mov
add
adc
rolb
sub
mov
daa
lahf
add
dec
push
cmp
xchg
clc
cmpsb
add
mov
sahf
sub
mov
call
pusha
jns
pop
or
lock
js
in
inc
dec
add
pop
loope
inc
pop
xor
mov
mov
cmc
push
cld
jne
adc
jne
inc
fldcw
bnd
stos
mov
xchg
xchg
push
pop
pusha
and
lock
icebp
fidivrl
mov
jne
push
mov
test
shll
jae
push
add
xor
rolb
or
xlat
mov
add
dec
sub
mov
sub
lahf
add
jge
cmpb
push
idivb
addb
ja
lds
push
js
mov
sarl
clc
cmc
lret
in
jmp
pop
hlt
sbb
pop
cli
push
nop
pop
mov
outsb
jnp
cld
and
mov
pop
xchg
or
and
into
inc
popf
inc
inc
loope
jb
aad
pop
aad
fs
fwait
ja
movsb
add
xor
push
dec
es
mov
outsb
test
mov
dec
sarb
inc
or
xchg
sbb
or
aad
rorl
mov
loop
adc
cmp
andb
add
jg
mov
repz
or
sub
pop
pavgw
jmp
shl
mov
add
lahf
in
rclb
pop
xchg
outsb
aam
inc
out
or
or
jge
inc
sbb
mull
pop
jo
repnz
cmpsb
iret
mov
or
mov
fistpl
cwtl
dec
test
test
jbe
dec
js
sub
out
out
int3
loopne
adc
loope
and
sub
sub
and
or
mov
jmp
outsl
test
clc
bnd
cltd
call
xlat
inc
xor
push
aaa
xor
lret
add
mov
mov
stc
aaa
cld
int3
add
outsl
sahf
sbb
or
lock
outsl
mov
std
notb
xchg
mov
clc
test
daa
mov
lods
sbb
pushl
push
jge
cld
imul
inc
dec
jecxz
inc
cmp
orb
and
xor
xchg
add
pop
sbb
sub
dec
xchg
loop
add
out
imul
into
lods
pop
rcr
dec
mov
insl
daa
lea
xor
push
fucom
mov
stos
arpl
lock
sbb
mov
sti
addb
adc
mov
ljmp
loop
mov
sub
loopne
sbbb
aaa
fcmovne
push
hlt
ja
ret
sbb
call
ret
xchg
pop
mov
mov
clc
sub
lods
fcmovnb
dec
into
sub
sbb
adc
ret
cli
insb
std
push
jb
push
in
pushl
cld
mov
mov
pushf
jecxz
mov
jo
test
mov
int3
jnp
ret
outsb
pop
dec
faddl
into
sbb
mov
mov
rorl
ja
inc
cmp
testl
push
ss
shl
pop
pop
cmp
sub
jp
sub
xorl
jl
addr16
ret
sub
jge
mov
dec
sbb
sbbl
pop
cmp
out
outsb
sub
test
push
or
enter
repnz
mov
cmp
aas
bound
cmpsb
xchg
mov
imul
mov
stos
fs
sub
js
mov
insl
adc
inc
lods
push
dec
stos
rcrl
jo
add
sahf
imul
movsb
pop
pop
adcb
sbb
fwait
clc
xor
call
lahf
sbb
cs
lock
inc
cmpsl
lahf
mov
fistps
mov
aam
movb
or
cmp
pop
mov
aad
aas
cmpsb
pop
clc
inc
shll
test
dec
dec
sti
insb
or
xchg
jecxz
test
scas
cmpps
mov
cmp
clc
test
jae
mov
jmp
pop
mov
rorb
fnstsw
adc
out
mov
push
lods
and
or
shlb
xor
add
fisubrs
inc
ret
inc
loope
inc
adc
fmull
js
test
sti
mov
cmp
push
xor
mov
mov
adc
jmp
lock
xor
leave
stos
mov
or
xchg
daa
dec
xchg
ds
cld
xchg
sub
lea
cmpl
jbe
popa
outsl
mov
mov
push
loopne
push
adc
flds
push
jae
cmp
and
das
sbb
or
add
test
ljmp
pop
arpl
stos
out
push
dec
fs
sbb
enter
pop
sbb
and
clc
movl
in
push
xchg
rcrl
test
sti
arpl
clc
sub
lds
mov
jecxz
push
push
sub
cmp
inc
aad
mov
mov
adc
or
leave
cwtl
cmp
das
mov
lods
mov
addl
outsb
or
or
scas
decl
pop
cmp
jg
rorb
and
sub
mov
jo
sbb
repnz
xchg
shl
dec
les
js
push
jecxz
addl
pop
jb
or
cld
adc
mov
loope
loop
sub
enter
add
sub
push
insl
scas
mov
dec
adc
dec
inc
mov
add
ljmp
and
pop
add
pop
rcrb
add
xchg
mov
cld
or
sub
and
in
ja
jo
add
and
stc
jne
mov
dec
mov
jbe
pop
test
mov
insb
aas
dec
mov
and
imul
shlb
incl
mov
mov
xor
jbe
pop
ret
cmpsl
int3
adc
sbb
lods
pop
dec
adc
pop
jns
or
mov
das
int3
jo
rorb
mov
adc
arpl
push
xchg
inc
mov
mov
add
xchg
or
daa
je
xchg
in
jmp
sti
aad
clc
jne
leave
cld
cmp
pop
xor
loop
lcall
cmpl
sbb
mov
pop
sarl
lods
rolb
cmpb
data16
sub
xchg
stc
cmpsl
mov
inc
mov
mov
mov
pop
or
mov
js
inc
sub
jb
ret
sub
loope
ret
pop
sub
sbb
mov
xor
xor
pop
jb
ret
mov
push
add
lcall
cmpsb
icebp
xchg
jno
and
cmc
sbb
mov
cmp
leave
jmp
xchg
and
sub
cli
xchg
aam
cmp
mov
and
pslld
or
sub
dec
pop
sbb
pop
push
sbbb
arpl
aaa
cld
loopne
mov
aam
xor
mov
xchg
pop
aad
fildll
jecxz
xchg
punpcklbw
sbb
sbb
loop
adc
ljmp
mov
idiv
sbb
fimull
pop
push
push
xchg
loop
mov
lret
ret
xor
ds
mov
arpl
or
xor
lock
icebp
bound
mov
mov
fimuls
sbb
dec
js
lcall
scas
push
pop
pop
call
adc
push
sbb
in
cmc
aad
imul
push
addl
xorl
push
inc
stc
sarb
or
xchg
and
test
pop
mov
ficompl
lock
sarb
adcl
push
addl
out
insl
mov
js
and
aam
cs
call
pop
or
mov
pop
mov
cmp
pusha
stos
jns
aaa
and
adc
xchg
fildll
fsubrl
popa
mov
iret
jae
cmpsl
into
scas
mov
into
loope
fimull
xlat
mov
add
rcrb
shrl
insb
rcl
jp
loopne
inc
lea
or
jne
jno
leave
and
je
das
push
ljmp
xchg
sub
add
jb
push
pop
jge
stos
mov
pushl
adc
sub
and
sbb
imul
repz
push
or
jl
add
mov
mov
mov
xor
insb
popf
and
fnstsw
dec
repnz
outsb
inc
cltd
mov
lock
cld
push
jbe
push
ja
adc
cltd
loopne
js
ret
add
pop
lock
movzbl
push
fst
or
mov
outsb
lods
sbb
mov
in
dec
xlat
or
insl
adc
pop
push
adc
xchg
sbb
add
and
rcr
ret
adc
decb
cmc
test
repz
cmp
add
or
lock
outsl
pop
fmull
pop
jp
rolb
jl
adc
or
and
lds
push
inc
push
dec
adc
ret
mov
pop
stc
dec
loop
int
jne
fisubs
push
cmp
hlt
and
cwtl
and
jo
les
inc
sbb
xor
loopne
cmp
xchg
add
les
sbb
add
shl
push
andb
xchg
xchg
icebp
pop
aam
jg
xchg
jecxz
or
fistpll
lret
jmp
or
jl
int3
xor
fcomip
jns
inc
xor
add
mov
mov
dec
xchg
loop
sub
icebp
inc
adc
and
cld
mov
andl
std
or
pop
into
inc
jge
mov
wbinvd
clc
inc
movsb
popa
pop
dec
call
and
out
ds
mov
dec
add
adc
test
mov
dec
daa
inc
xor
mov
jns
aam
subl
inc
and
sub
dec
insb
dec
ret
add
sub
lds
mov
xor
dec
clc
sub
xchg
out
inc
pop
aas
aam
mov
sbb
aas
scas
je
rorb
shl
adc
jo
mov
lahf
push
push
notb
pop
jmp
jns
mov
fdivrs
stos
inc
bound
pop
jge
imul
fimull
push
inc
sub
mov
std
movsb
hlt
lret
lret
je
push
push
jo
mov
mov
mov
sahf
sbb
int3
in
sbb
fstpl
lret
pop
test
or
push
mov
les
aad
shr
pop
add
jbe
dec
jg
mov
fmull
xor
jnp
mov
and
xchg
sbb
cmp
insl
ss
mov
movsb
mov
cmp
addr16
loop
mov
cmp
xor
clc
add
sbb
out
test
jl
jbe
lcall
cmpsl
repz
cmpsb
pushl
cmc
shlb
mov
or
ss
movsl
or
sbb
sbb
arpl
hlt
jnp
sbb
scas
xchg
fmull
xor
int
jg
mov
mov
add
adc
testl
cmp
sbb
sbb
push
or
push
xor
call
daa
fnsave
pop
push
inc
jecxz
mov
outsl
cli
jb
imul
mov
mov
xchg
ljmp
aam
xor
inc
add
es
fsts
push
mov
pusha
or
mov
inc
hlt
fcmove
aam
jg
xorl
adc
dec
inc
fimull
cmp
jmp
fcomp
mov
and
or
jecxz
mov
js
push
mov
sub
sub
test
sub
or
sbb
add
xor
cs
pop
xchg
pop
or
pop
add
decl
pop
xchg
scas
call
add
jmp
jb
adc
cmp
sbb
enter
mov
call
add
out
mov
incl
int
call
sbb
mov
cltd
add
ret
stos
and
adc
repnz
mov
cltd
imul
sub
into
and
ret
push
fbstp
stos
movsl
loop
and
pop
js
push
subb
cmc
mov
mov
ss
aaa
sub
mov
addb
add
jmp
test
mov
xor
or
jg
fdivrs
inc
mov
aad
pop
dec
cmp
xor
ffree
cmpsb
ja
add
negb
xchg
pop
inc
in
std
sbb
inc
or
inc
xor
pushf
cmc
pop
adcb
pop
mov
mov
xchg
add
pop
and
iret
fwait
lcall
movsb
mov
sahf
push
nop
into
int3
sbb
xlat
bound
lds
mov
insl
or
push
xchg
cmpsb
aas
mov
or
imul
xchg
pop
sahf
mov
in
sub
mov
dec
ss
mov
out
dec
pushf
jo
pop
fwait
jne
inc
xor
or
cmp
negb
jo
xchg
mov
add
movsb
or
adc
loop
cmp
movb
je
ret
xor
xchg
popf
push
sub
addb
adc
or
shlb
in
jno
adc
dec
push
cmpsl
into
popf
adc
cmp
incb
fldcw
cmp
daa
lret
adc
les
mov
adc
sub
cld
sbb
ret
fidivrs
mov
mov
push
lea
inc
push
and
pusha
or
mov
subb
jo
aas
add
xchg
scas
rcrl
es
test
pop
or
out
and
push
jecxz
cmp
and
xor
pop
mov
test
lahf
push
sbb
loopne
loope
mov
ficompl
dec
pushw
lret
xchg
gs
dec
cli
xchg
sbb
das
clc
gs
xacquire
dec
outsb
pop
and
lahf
mov
notl
mov
add
push
test
ret
pop
dec
push
add
push
sti
push
mov
repnz
or
pop
jge
insl
cmp
enter
mov
icebp
std
out
mov
ss
sub
lds
sbb
add
add
pop
jg
dec
mov
mov
je
mov
aam
fwait
push
xor
xorb
inc
dec
sbbb
adc
loope
loopne
and
push
jl
push
hlt
jg
addr16
les
inc
xchg
dec
xor
icebp
lock
movsb
adc
shll
sbb
icebp
stos
sbb
inc
inc
add
les
inc
fwait
adc
aaa
xor
stos
mov
and
mov
stc
push
fisubrs
lods
popa
lods
dec
jno
push
pop
add
pop
clc
sahf
or
or
in
xorl
jbe
out
mov
outsb
xchg
pushf
inc
xchg
pop
ror
insl
call
pop
and
dec
add
and
lret
mov
aaa
pop
jmp
dec
and
or
mov
nop
lret
ret
push
enter
fildl
std
sti
int3
dec
jo
in
call
adc
fiadds
push
xor
sub
adc
mov
or
loop
shlb
inc
pop
jnp
icebp
addl
cs
adc
movsb
cmovns
inc
sbb
es
xchg
pop
loopne
pushf
xor
cmp
mov
das
roll
mov
mov
dec
decl
fs
mov
inc
cmp
xor
int
lcall
jae
and
lea
xlat
lret
mov
cli
imulb
das
loopne
lock
out
xchg
push
fmull
mov
pop
test
mov
push
iret
test
mov
addb
xor
xchg
loop
int
inc
cli
or
cmpsl
sub
sbb
out
xchg
pop
push
or
movsl
mov
push
push
movsb
in
out
dec
hlt
loope
cli
adc
inc
jo
jecxz
xchg
mov
jg
pop
movl
mov
rcll
idivl
inc
fcoms
iret
or
int
xchg
cmpl
enter
jne
mov
push
loop
dec
cli
iret
sbbb
loopne
add
jp
adc
mov
ret
mov
jo
sub
cli
push
ss
mov
iret
mov
mov
popf
aas
clc
mov
test
inc
and
mov
pop
pop
add
dec
inc
xlat
push
fisttps
add
cmp
imul
dec
les
push
sbb
jecxz
movsb
pop
adc
jp
ret
and
cmp
dec
push
ficoml
retw
xor
or
push
in
loope
scas
hlt
xor
xlat
dec
xchg
adc
mov
cs
fistl
cmpsl
dec
int
xchg
in
add
fmuls
pop
push
subb
push
outsb
lahf
orb
jp
pop
dec
hlt
xor
cmp
jb
cltd
je
into
inc
lea
les
sbb
leave
adc
jmp
adc
shrb
enter
add
jno
in
sbb
inc
idiv
cmc
aaa
mov
adc
cmp
add
arpl
sub
rcl
addb
ffree
push
ljmp
loope
mov
push
xorl
pop
jge
lahf
xorb
or
xor
pop
xchg
mov
or
cmp
aas
sub
adcl
pushf
mov
push
jp
pop
mov
je
sbb
adc
xchg
hlt
sbb
adc
out
repnz
add
sbbl
cmp
mov
stos
xchg
cwtl
pushf
pop
sbb
loope
addl
fstl
andb
outsb
or
sub
test
cmc
xchg
cli
mov
xor
push
jle
dec
mov
jmp
outsb
mov
mov
or
daa
sbb
jecxz
mov
clc
and
cmpsb
add
and
add
dec
mov
and
fldt
add
rcrl
clc
push
loope
loopne
mov
scas
scas
jae
movsb
push
dec
inc
xchg
mov
pop
addb
cmp
popf
adc
jae
inc
sub
dec
sub
loope
push
ret
cs
movsl
add
aam
pusha
call
outsb
out
mov
xchg
cmp
mov
icebp
dec
mov
xor
pop
jo
cmp
add
es
lcall
int3
push
sbb
mov
jp
adc
adc
leave
cmovb
std
sbb
sarb
xor
pop
push
lds
cmp
jo
das
lock
add
imul
push
test
js
xchg
inc
fcompl
sbb
imul
dec
adc
insb
mov
roll
add
nop
push
pop
icebp
jl
xchg
xor
pushl
mov
jecxz
and
pop
repnz
sbb
push
add
lahf
bound
sub
mov
xor
push
dec
pop
aas
out
jle
cli
sub
scas
pop
xor
out
lods
mov
hlt
fidivrs
cmc
arpl
icebp
lock
xchg
out
push
mov
jns
inc
dec
pop
mov
leave
inc
lock
rcrl
adc
cmc
jecxz
popa
sub
jge
mov
outsb
add
into
jb
fisttpl
cmp
sbb
rclb
inc
jo
jbe
aaa
aam
push
mov
shrl
test
mov
shr
aam
mov
movsl
js
cmpsl
xor
pop
add
rcl
into
jnp
jmp
inc
or
pop
push
dec
iret
cmp
pop
loope
movsl
lea
jl
jns
mov
mov
xor
push
in
and
ljmp
test
hlt
adc
stos
mov
push
enter
xchg
pop
jg
ficomps
out
lock
pop
loop
jp
mov
fsts
insl
push
outsb
loopne
sub
adcb
mov
cmpsb
mov
stos
mov
xor
dec
add
xor
adc
neg
cld
aam
cmp
pop
pop
scas
fs
repz
sub
push
pusha
insb
adc
and
fnstcw
mov
mov
inc
sbb
enter
outsb
outsl
dec
mov
mov
je
inc
outsb
push
enter
sbb
push
pushf
lock
sbbb
push
jo
popa
popf
push
outsl
mov
pusha
or
pusha
sub
jle
mov
xchg
jbe
pop
and
ret
mov
jecxz
sbb
repnz
jae
cmp
int
aad
push
push
sti
mov
test
cmp
pusha
fadds
je
adc
pop
jge
fs
cld
adc
sbb
lea
mov
add
dec
adc
add
xchg
out
mov
dec
cmc
push
lcall
hlt
je
in
adc
add
xor
xor
imul
cld
movsl
test
pop
mov
mov
shlb
scas
xchg
mov
ss
fldt
test
or
jb
jae
jge
add
adc
inc
int3
mov
push
popf
add
xor
mov
out
shlb
jmp
jno
dec
lods
sti
or
pop
out
jecxz
add
and
aas
sbb
xor
mov
fidivrs
push
bound
xor
xchg
mov
add
inc
xlat
nop
jp
push
push
lock
adc
icebp
fadd
sub
std
cwtl
pop
in
sbb
hlt
clc
shlb
aas
xchg
lods
outsb
mov
loopne
add
push
xchg
arpl
test
mov
dec
cmp
mov
push
xchg
pop
sub
movsb
mov
test
dec
adc
sub
adc
jo
push
jnp
daa
aaa
xchg
shl
loop
push
jo
push
cmp
mov
inc
sar
nop
iret
rcrb
sbb
lcall
insl
push
into
mov
mov
sbb
shr
adc
cmpsb
xchg
mov
shlb
mov
lcall
sub
shll
rorb
cld
push
add
in
in
lock
adc
cmp
dec
xchg
clc
loopne
adcl
lock
andl
adc
push
add
insl
aaa
add
ds
nop
and
dec
adc
aas
mov
push
clc
std
jmp
cmpb
fs
mov
add
ret
sub
pop
xchg
sti
js
xor
mov
mov
adcl
call
imul
sub
addb
mov
loop
sbb
loopne
nop
mov
icebp
lock
adc
dec
mov
inc
movsl
loop
adc
pop
mov
cmp
divl
out
dec
xchg
push
mov
xlat
mov
and
aam
addb
in
adc
test
mov
pop
faddl
push
js
or
push
mov
sub
sbb
ljmp
int
sbb
jmp
cmp
scas
mov
cmc
ljmp
shr
das
push
and
add
test
sbb
push
lds
inc
lahf
scas
cmp
xchg
ret
es
fcoms
jne
mov
or
mov
sub
cli
das
jne
dec
xchg
push
mov
testl
push
scas
or
ror
mov
or
push
std
mov
push
cmc
cs
inc
stos
scas
fneni(8087
out
hlt
icebp
cmp
dec
add
or
sarb
mov
dec
push
pop
mov
outsb
lods
pop
sbb
pop
ljmp
mov
fistpll
xor
daa
rclb
mov
xchg
fdivs
adc
inc
lret
or
push
mov
loopne
adc
iret
jge
insb
loopne
leave
push
js
mov
cmp
or
mov
sub
out
test
scas
mov
sub
inc
out
adc
and
cmp
xchg
rcrl
jno
jb
cmp
inc
and
mov
mov
push
incl
cmpsb
loopne
js
jl
mov
icebp
pop
push
mov
in
jo
sbb
rcrb
push
enter
movsl
sub
dec
pop
stos
les
lods
movsb
xor
insl
daa
lods
pop
popw
jmp
enter
pop
das
cmp
jns
cld
or
push
push
mov
lret
sbb
jne
movsl
dec
jbe
push
shrl
test
jne
jmp
xchg
fimull
rolb
test
aaa
call
jo
lds
hlt
nop
js
out
xchg
fcomip
mov
fsubr
or
scas
pop
rcrl
into
xchg
fistpl
orl
scas
andb
movl
and
mov
popf
mov
aaa
xchg
pop
scas
mov
aam
sbbb
in
xor
or
cmp
fsubr
add
xchg
icebp
nop
jp
sub
dec
loope
idivb
or
lods
cwtl
push
cmp
pop
shr
shll
mov
jmp
dec
jg
push
mov
test
cmp
into
mov
aam
cli
lcall
daa
loope
pop
xor
xor
add
xchg
flds
call
adc
int3
inc
mov
jne
cli
sub
xchg
jge
mov
pop
lcall
dec
pop
insb
mov
sbb
jnp
jmp
rolb
mov
push
inc
ret
dec
loope
pop
xor
lahf
inc
dec
pop
shl
xor
push
cli
imul
addb
pop
push
jb
test
mov
cmp
dec
mov
lea
fldenv
aad
mov
mov
xor
cli
inc
mov
fdivrs
push
and
jp
lcall
pop
test
cmp
mov
xchg
mov
insb
mov
aaa
cld
dec
add
sub
rolb
orl
add
and
in
inc
mov
xor
aas
dec
aas
pop
lcall
popf
psadbw
addl
push
sbb
loop
lcall
insb
mov
or
mov
mov
lods
cmp
lcall
push
push
xchg
data16
fisubrs
dec
inc
lds
sub
std
clc
inc
mov
test
pushl
mov
sbbb
pop
insl
inc
mov
add
jge
loopne
xchg
hlt
jmp
adc
inc
sub
in
imul
jno
pop
repz
popf
addl
adc
outsb
int
dec
data16
dec
mov
inc
push
sbb
and
add
or
mov
mov
out
cmpsl
cmp
sti
push
add
push
inc
mull
popf
mov
data16
sub
sub
test
and
clc
mov
mov
aam
inc
out
add
clc
insb
sahf
icebp
push
push
popa
cmc
push
ret
xor
mov
jns
jo
mov
sbb
sbb
lods
jae
int3
push
aad
mov
fwait
cwtl
pop
push
stos
pop
loope
or
adc
fisubs
rorl
shrl
in
pop
orb
arpl
pop
pop
sub
pop
dec
inc
fistpl
add
sbb
out
fbstp
xor
je
pop
sub
dec
lods
aam
imul
rorb
inc
adc
cwtl
enter
popa
sbb
sub
sbb
das
sbb
addr16
mov
icebp
push
xorb
mov
mov
and
inc
test
mov
out
inc
pop
pop
sbb
mov
je
mov
dec
add
mov
insl
and
sbb
lret
lret
jb
inc
sbb
adc
pop
popw
and
add
out
push
add
ds
stc
pop
andb
add
enter
mov
cmp
popf
mov
addb
pushf
leave
jno
fisttpll
mov
dec
and
and
add
mov
adc
sub
int3
adc
inc
lcall
rorb
dec
add
int3
or
mov
or
and
int3
insl
cwtl
dec
mov
into
mov
cmpsb
mov
rolb
xor
les
ss
adc
cmp
loop
cltd
and
fiaddl
or
sahf
or
fs
jp
rorb
cmpsb
in
out
cld
xchg
ss
dec
xchg
lock
mov
in
call
cltd
xchg
or
stos
jge
into
mov
pop
stos
pop
jle
daa
aam
es
cmc
push
test
hlt
shrl
fidivrs
pop
ret
add
pop
rcrl
sti
in
jmp
push
sarl
lfs
xor
andb
imulb
popa
or
adc
cwtl
fcompl
orb
dec
loopne
lods
daa
mov
dec
loope
mov
jbe
clc
icebp
push
and
xchg
movb
nop
add
lea
test
push
dec
cmp
mov
loope
inc
jmp
addr16
repnz
or
shrb
push
js
add
adc
test
inc
in
inc
ja
shl
ja
pop
or
and
pop
push
mov
insb
sub
fildl
lret
mov
shl
xchg
xchg
leave
in
dec
sbbb
lods
scas
fdivrs
lret
lcall
insb
or
adc
orl
dec
mov
imul
add
sub
pop
push
cmp
push
int
push
out
fcoms
add
lret
decl
loope
and
adc
js
loop
or
inc
dec
pop
jp
mov
mov
cmp
mov
dec
outsl
dec
fwait
stc
mov
mov
mov
dec
inc
mov
fcomi
loope
push
mov
ret
add
aam
dec
mull
lock
popa
fcomp
jl
xor
mov
push
inc
mov
xor
pusha
mov
ficompl
and
xchg
lods
les
cmpsb
cli
cmp
cmp
lock
xchg
aam
adc
mov
and
sbb
std
ljmp
inc
or
mov
arpl
sbb
jmp
xchg
rorb
sub
jmp
decb
les
lock
sub
js,pt
std
cmp
out
push
rol
rorb
in
test
sbbb
xchg
or
mov
fwait
xor
sub
ss
mov
fadd
iret
mov
pop
push
insl
inc
adc
push
inc
loopne
xchg
cmpsl
jb
push
lock
loop
jp
mov
lods
cmpsb
hlt
or
sub
cld
pop
and
xchg
cld
in
jle
push
jl
cltd
les
das
push
xchg
lahf
dec
mov
inc
pop
pop
mov
cmpsb
les
jbe
adc
push
mov
fisttpll
mov
xchg
pop
xchg
nop
pop
icebp
test
mov
xor
jmp
xchg
vcvtsi2ssl
stos
xchg
lea
jp
subb
das
mov
add
adc
and
daa
mov
inc
incl
rolb
mov
jmp
fidivs
mov
adc
xchg
test
dec
xchg
dec
ret
pop
mov
mov
loopne
push
out
mov
outsl
divb
lcall
inc
pop
xchg
inc
add
mov
sbb
mov
sub
test
xor
std
dec
sbb
mov
movsb
pop
add
xor
mov
push
jnp
dec
in
rorb
mov
shlb
sub
arpl
cli
cmpsb
or
mov
pusha
push
sarl
cmp
push
shlb
faddl
pop
bound
es
idivl
pop
and
cmp
adc
in
push
outsl
xor
mov
cmpb
or
or
push
ret
fs
hlt
sub
pop
es
inc
loopne
jg
push
gs
hlt
ljmp
call
mov
xor
or
test
pop
push
test
or
jo
test
lods
mov
mov
mov
loop
jne
push
or
jbe
mov
daa
sub
sbb
loopne
mov
enter
xchg
repz
aad
adc
popa
scas
fcomps
pushf
sbb
stos
sbb
jl
std
aaa
adc
cmp
and
or
dec
xor
outsb
mov
dec
outsl
push
push
imul
movsb
adc
scas
ds
xchg
pop
cmpsl
stc
or
sahf
mov
stc
inc
add
mov
mov
sbb
push
popf
loope
add
aaa
mov
test
pop
push
int3
push
aaa
andb
mov
jl
push
adc
mov
pop
lret
std
mov
fisubrs
lods
leave
aas
push
mov
add
imulb
es
dec
clc
fldt
ss
inc
mov
fs
insb
xchg
fisttpll
es
int3
jno
push
mov
stc
lds
cmp
add
punpckhbw
dec
adc
add
rcr
iret
push
jle
loope
adc
std
sbb
mov
or
mov
jl
and
push
gs
int3
rolb
js
aaa
jl
test
mov
xor
xor
or
movsb
out
je
inc
xor
xchg
add
or
les
fs
mov
or
scas
adc
inc
or
inc
or
cmpsb
add
dec
outsb
cmp
mov
sbbl
dec
jle
cmp
xor
xchg
sub
outsl
inc
push
jmp
add
push
cvtps2pd
divb
mov
dec
cmp
call
lcall
inc
mov
cmp
test
call
lret
adc
sub
pop
aas
imul
mov
mov
xchg
jge
pop
mov
fnsave
sbb
ljmp
imul
jnp
pop
mov
pop
outsl
lods
cltd
jecxz
xchg
mov
mov
test
cli
jp
add
and
out
test
nop
mov
loope
and
cmp
push
sahf
and
push
or
mov
out
aam
xchg
shlb
out
push
in
jnp
mov
dec
call
xor
mov
jge
cmp
in
in
and
ja
jo
ds
movsb
in
cmc
data16
cld
jb
add
test
pop
cmpsb
fisubl
or
jle
aam
cmp
jmp
bound
enter
add
loope
movsl
push
aam
mov
test
ljmp
daa
inc
in
push
lret
icebp
add
dec
xchg
je
inc
xor
mov
add
xchg
and
add
in
movsb
push
cmc
pand
addl
jge
xor
or
cwtl
aas
rclb
ret
test
push
jl
and
pop
stos
icebp
stc
jns
lds
fbstp
popl
jge
xor
xor
push
lock
nop
inc
push
inc
cmp
push
fildll
ror
sbb
orb
stos
push
adcb
out
repz
jb
mov
adc
pop
mov
jnp
mov
movsb
jp
daa
or
dec
je
push
call
pop
fiaddl
testb
stos
cwtl
sbb
jp
sbb
xchg
and
mov
pop
rorl
andb
push
ret
push
cmc
inc
mov
fidivs
bound
jnp
and
jo
jp
scas
inc
or
fcoml
loopne
inc
fidivl
mov
jle
test
les
sub
adc
int
add
mov
dec
out
add
roll
pop
inc
cmc
sbb
sub
pusha
fstl
pop
insl
sub
mov
fisttpl
aas
test
loope
xorb
jbe
cmpsl
pop
rcrl
sub
and
jns
inc
push
xlat
sub
mov
push
sti
mov
xchg
adc
inc
test
push
js
xchg
outsl
outsl
dec
maxps
ret
ljmp
fst
aad
cld
adc
arpl
pop
dec
popf
add
or
pusha
jecxz
xlat
inc
push
and
xchg
add
mov
sub
in
add
les
pop
sbb
adc
cld
pop
rorb
test
jbe
xchg
nop
push
sub
mov
adc
cmp
js
or
or
cmpsl
mov
popf
cli
or
jg
and
jbe
ljmp
test
pop
jecxz
cmp
push
scas
xorl
add
push
cmp
jle
std
pushw
and
jne
and
cs
jb
dec
ficompl
cwtl
js
sbb
rclb
push
ss
out
dec
sbbl
mov
cmp
call
aam
mov
inc
jns
xor
shr
clc
ja
push
cmp
pop
push
add
imul
fsubr
push
pop
je
mov
jmp
or
fcmove
mov
pop
insb
dec
leave
push
mov
cmpl
mov
dec
and
push
daa
mov
pop
movb
int
mov
pop
and
je
sar
cmp
idivl
and
out
jmp
sbb
fcomps
push
jo
xchg
lea
xchg
imul
sbb
inc
rol
xchg
arpl
pop
fs
scas
jb
adc
cli
inc
inc
shlb
adc
aas
or
into
insb
mov
inc
mov
sub
clc
iret
mov
push
jmp
lds
mov
and
adc
dec
popa
sarl
pop
inc
js
outsb
ret
jbe
fistpl
or
aas
mov
dec
outsl
cli
add
insb
sbb
outsl
pop
lret
inc
sahf
fimuls
loop
aam
and
fldl
add
pop
and
sbbb
mov
loopne
ficoms
mov
rolb
icebp
sbb
int3
repnz
xor
jnp
loop
cwtl
xchg
into
and
xor
or
movb
daa
mov
mov
insb
or
xor
push
jne
test
loope
add
jae
jle
inc
arpl
fwait
sub
ret
and
dec
add
adc
fwait
pop
pop
add
inc
rolb
push
arpl
outsl
cli
pop
adc
ljmp
mov
sub
push
mov
lds
mov
dec
icebp
mov
aad
jge
repz
push
movsl
jp
call
push
scas
cmp
cli
nop
mov
mov
sbb
sbb
ret
inc
dec
push
test
pop
xchg
aas
fidivrl
xor
mov
mov
adc
sbb
mov
test
pop
inc
cltd
jmp
fcoms
cmp
pop
cmp
ret
and
cmc
xor
push
adc
mov
jecxz
je
jnp
cli
dec
sbb
xor
out
mov
mov
decb
adc
adc
js
jbe
cltd
inc
inc
dec
cmp
or
dec
adc
sbb
xchg
into
cmpsb
adc
rcrb
and
or
ja
ss
lcall
dec
mov
pop
mov
cmc
inc
xchg
fstl
pushf
mov
dec
data16
and
mov
mov
fwait
sbb
and
test
mov
adc
push
mov
gs
add
sbb
hlt
mov
and
lods
sbb
mov
push
pop
mov
cmp
insb
push
popa
aaa
push
cwtl
enter
hlt
adc
pop
add
loopne
jo
repnz
adc
loope
rcll
movsb
aas
repnz
cld
mov
inc
rorb
jmp
sub
iret
nop
sarb
cmp
enter
inc
push
subl
jo
ror
sbb
in
inc
pop
pop
mov
mov
bound
adc
fwait
pushf
test
outsl
jnp
mov
test
pop
push
xchg
and
sahf
dec
mov
loopne
pop
outsb
mov
ret
gs
aad
subl
icebp
push
mov
mov
movsb
add
xor
adc
jl
cmc
xor
push
cmc
push
push
pop
scas
lahf
into
mov
pop
insl
addl
jmp
mulb
loope
sbb
in
sub
mov
scas
test
fadd
nop
jp
ret
lcall
add
mov
cmpsb
loope
ret
push
jg
nop
lock
or
jp
icebp
imul
add
push
sbb
je
ljmp
lcall
into
mov
in
xor
inc
pop
addr16
arpl
xor
lret
out
sti
xchg
xor
adc
out
pop
loopne
movsb
pop
dec
pop
mov
into
cmp
xlat
xorl
mov
mov
jnp
sbb
cmp
leave
data16
adc
pop
adc
clc
ret
adc
pusha
in
xchg
mov
jb
jnp
movsb
dec
adc
lea
divb
sahf
push
mov
fiaddl
bound
mov
and
cmp
push
and
inc
jl
adc
daa
xchg
push
xor
and
rolb
or
lcall
or
xchg
jo
cmp
in
cmp
jns
fcmovnu
fnsave
mov
je
add
mov
dec
bound
jmp
pop
and
sbb
daa
jl
int
push
xor
add
mov
mov
jne
jb
xlat
mov
shrl
pop
into
dec
jg
test
adc
or
popf
jecxz
aam
cmp
sub
adc
sub
lods
sub
pop
fnstsw
add
mov
lahf
inc
cwtl
pop
mov
aam
and
mov
test
movsl
dec
jbe
aaa
mov
lahf
cld
cmpsb
fucomip
mov
adc
into
pop
dec
in
bound
out
cmpb
pop
jl
shrb
pop
repnz
das
subl
test
mov
adc
out
push
jbe
aad
scas
cmp
adc
out
jg
xor
daa
movsl
imul
pop
in
xor
jae
sub
cmpb
push
out
inc
xchg
xor
test
adc
adc
adc
mov
sahf
test
add
test
jmp
push
and
shlb
dec
lods
clc
outsb
sub
sar
loopne
cmp
jle
cmpsl
sub
inc
xor
test
pop
or
add
inc
or
pop
xchg
adc
push
mov
push
and
insb
dec
rcr
sub
arpl
out
and
push
and
cltd
dec
jne
ljmp
mov
pop
pusha
rcr
push
mov
inc
jp
data16
add
or
in
cld
ret
add
lock
lock
lldt
sbb
push
pop
mov
and
push
jnp
jne
sbb
inc
mov
popa
loope
roll
mov
jne
mov
mov
push
adc
inc
mov
pushf
push
xor
test
adc
in
push
inc
jbe
cltd
mov
imul
adc
cmc
jae
js
add
mov
cmp
jmp
sarl
or
es
inc
test
and
rolb
mov
lods
paddb
cmpsb
adc
mov
cli
pop
stos
ja
dec
mov
pop
fnsave
inc
dec
lea
js
push
cmp
cmp
and
sarb
adc
lock
jg
dec
pop
ret
test
pushf
add
mov
add
inc
mov
xchg
cmp
cmp
cs
hlt
and
pop
and
mov
fdivl
push
mov
cmp
inc
pop
adc
outsb
in
cmp
dec
mov
pop
adc
fcompl
andb
sbb
dec
mov
pop
lods
dec
clc
orl
push
mov
aaa
inc
dec
lods
push
outsl
and
and
icebp
cmp
dec
scas
inc
dec
xchg
imul
xchg
mov
insl
xor
xlat
inc
mov
jp
xchg
sbb
adc
call
adc
xchg
xor
decl
mov
xor
add
imul
adc
data16
cmp
add
fisubrl
or
xchg
inc
dec
pop
rorl
push
xor
ret
xchg
loopne
add
popf
sbb
pop
sbb
lock
and
sbb
es
add
xlat
push
cmp
in
cld
pop
mov
fcomps
pop
push
mov
cmovs
js,pn
maxps
xchg
pop
sub
clc
jmp
mov
data16
pop
xchg
pop
ja
or
fiadds
pop
adc
pop
push
pusha
jno
leave
sbb
shll
pop
add
sbb
mov
xchg
cmp
test
and
daa
jl
adc
mov
lahf
stc
xor
push
cltd
pop
mov
adc
inc
sbb
add
outsb
fldenv
fs
lcall
bound
jmp
mov
jl
loopne
jle
push
cmpsb
decl
jo
jge
es
ljmp
inc
sar
and
fwait
xchg
out
inc
inc
or
ljmp
adcl
outsb
jb
mov
sarb
aam
mov
and
xor
push
sub
mov
sbb
xchg
mov
cmpsl
dec
sub
xchg
icebp
in
outsl
lods
cmp
cmc
js
cwtl
stos
je
ja
sub
adc
ret
fnsave
inc
inc
rcr
ljmp
jecxz
jno
xor
jmp
in
adc
lock
loop
sti
stos
xchg
and
xlat
cld
pusha
sbb
push
dec
sbb
lock
cs
shl
or
dec
cwtl
adc
lea
cmp
fs
rclb
pop
or
inc
mov
pushf
add
xchg
dec
push
dec
je
adc
mov
pop
loope
data16
loopne
cld
lea
data16
inc
adc
test
fdivrl
jno
add
fistl
push
jg
inc
jb
mov
clc
dec
cmp
and
lods
lcall
clc
icebp
dec
push
push
dec
int3
pop
adc
inc
into
inc
es
add
pusha
bound
addl
add
dec
push
mov
pop
sub
dec
and
fisttps
aam
cmp
scas
push
loopne
je
jb
cli
aam
test
jge
jno
test
pop
scas
add
rolb
sub
insb
das
orb
rolb
add
sub
jg
dec
add
xor
inc
cmp
pop
addl
ret
incl
cltd
sbb
xor
pop
add
shrb
and
outsl
push
mov
cmp
aas
mov
cmp
clc
insb
cld
ss
sbb
popf
xchg
outsl
outsb
mov
out
imul
cld
test
jbe
test
es
sbb
jmp
inc
mull
mov
mov
or
push
nop
push
scas
imul
mov
xchg
sub
inc
dec
jge
stc
mov
mov
pop
pop
push
mov
jns
push
outsb
pop
pop
add
pop
sbb
out
hlt
in
cmp
mov
pop
lret
inc
or
lods
push
sbb
fdivs
rolb
in
in
adc
fimuls
outsl
jb
xchg
popl
nop
and
loopne
out
and
mov
sbb
out
out
out
shl
pop
sub
insb
inc
cli
out
int
or
pusha
mov
cmp
pop
test
mov
in
imul
push
sub
mov
loope
sub
sbbl
cmpsl
aam
sbb
or
roll
stos
pusha
cmc
jbe
adc
push
lahf
sub
mov
and
push
xchg
pop
mov
cmc
add
mov
sbb
testl
sub
adc
test
xor
cmp
jae
sbb
inc
out
rcrb
subl
and
not
pusha
xchg
pop
sub
inc
push
dec
popa
popa
ret
mov
or
fstpl
cld
adc
pop
push
cmc
je
add
dec
add
pop
sub
sub
push
mov
mov
mov
mov
lret
push
shrb
mov
sbb
add
jno
aaa
xchg
inc
and
xor
adc
mov
test
or
pop
scas
dec
stc
or
sbb
mov
push
cld
inc
lea
inc
nop
popf
mov
and
pop
adc
add
jl
adc
mov
sbb
in
sbb
mov
js,pt
pop
cmpsl
dec
xchg
cmpsb
inc
sarb
and
sbbl
mov
jl
or
mov
and
or
inc
loop
xor
lahf
mov
mov
shl
push
xorb
jns
dec
push
cmpsb
repz
mov
inc
and
sbb
lret
hlt
into
pop
xchg
mov
insb
cld
aam
push
ror
mov
cli
popa
cmp
xor
mov
pop
aam
ficomps
sbb
js
orb
int3
push
jecxz,pt
push
lock
jb
sub
jle
pushf
push
and
lea
sbb
add
push
inc
rclb
aam
andb
pop
shrb
pop
push
add
xlat
inc
or
add
lods
fildll
or
mov
jae
dec
or
fisubs
ljmp
xor
repz
inc
jbe
pusha
scas
stos
or
fiaddl
xchg
in
icebp
push
mov
sbb
or
adc
jp
mov
xor
lret
or
inc
lds
pushf
xchg
arpl
movsb
sahf
sbb
sbb
sub
aam
cmp
inc
test
adc
add
fidivl
pop
cmp
cld
mov
call
pop
jae
and
mov
or
js
push
xchg
flds
inc
fisubl
or
call
daa
pushf
or
mov
dec
push
idivl
bound
clc
lar
cmp
stos
outsb
push
in
xor
mov
call
xor
add
xor
cmc
jg
stos
xchg
sbb
rcr
arpl
ja
rclb
push
fnstsw
jbe
mov
or
insb
cmp
repnz
test
xchg
mov
xor
mov
test
adc
sbb
in
roll
push
lret
xlat
test
or
out
cmpsl
loope
imul
pop
cmp
or
push
inc
ret
ljmp
mov
dec
jo
mov
shll
mov
aas
cmp
mov
and
aam
jmp
imul
push
arpl
fidivs
cwtl
mov
add
ss
dec
scas
fidivrs
mov
loope
pop
testb
dec
mov
cmpsl
outsb
lock
test
out
push
pop
inc
idivl
inc
or
mov
push
pop
lret
ljmp
and
mov
push
popf
or
cs
sbb
cmpb
ret
mov
adc
cld
mov
in
gs
mov
in
jle
ret
popa
push
jle
and
int
mov
mov
and
and
insb
and
xchg
std
lea
fndisi(8087
dec
lret
mov
ret
fcom
jo
mov
pop
into
adc
das
pusha
jge
adc
fcoms
pusha
mov
scas
cli
clc
mov
mov
insl
movsl
xor
xorb
or
jmp
insb
fnsave
add
adc
adc
es
push
mov
push
mov
or
jg
sub
js
out
enter
shl
dec
loopne
in
mov
imul
es
sub
movsl
mov
mov
mov
hlt
push
lret
les
repz
and
mov
rcl
lcall
jecxz
cs
adc
mov
arpl
movsl
or
sub
dec
and
jge
lretw
push
mov
negb
out
movsb
js
sub
in
or
push
icebp
or
push
imul
xor
xor
orb
fnop
and
pop
pop
jo
insb
push
arpl
aas
pop
and
sbb
add
jno
adc
sub
movsl
rcr
jmp
fstpt
outsb
adc
pop
cli
mov
inc
out
push
cmp
add
idivl
aaa
aam
nop
mov
add
jns
into
add
daa
aad
sub
cmp
ss
jmp
out
and
xchg
pop
test
lds
je
ror
jl
or
cmp
mov
in
lcall
cs
aam
push
sbb
rorb
sub
rol
sub
push
mov
int
fisubl
clc
pusha
nop
icebp
push
cli
and
jl
fwait
mov
jo
mov
or
scas
inc
testl
or
clc
testb
lcall
add
add
mov
dec
lea
cmp
adc
add
or
add
rol
js
push
dec
inc
cmp
sbb
jg
sbb
mov
xchg
test
pop
shll
jb
lock
xchg
lea
outsl
test
hlt
or
lret
sbb
mov
or
and
cli
inc
dec
js
sbb
pop
push
rclb
inc
loopne
adc
pop
imul
jp
adc
xchg
subl
cli
das
mov
push
mov
loopne
mov
xchg
in
in
xor
or
hlt
das
insb
inc
pop
sti
fsubrs
nop
das
js
shll
fimull
lods
fsubrs
jbe
mov
jnp
or
and
or
cmp
dec
stc
mov
fisttps
jge
daa
jecxz
lods
inc
sbb
mov
inc
push
inc
inc
dec
in
ds
std
mov
push
sub
or
outsl
add
and
andb
mov
mov
call
pop
mov
fisubs
sahf
push
xor
into
jle
lret
jb
xor
ror
xchg
lods
adc
data16
push
lea
loope
adc
xchg
call
ljmp
clc
mov
add
add
bound
push
mov
or
ljmp
lea
les
adc
out
jnp
xchg
outsb
outsb
mov
add
push
mov
aaa
mov
arpl
sbb
je
add
arpl
aad
cmp
ljmp
shl
dec
movl
fldt
shr
test
jle
jne
shlb
icebp
icebp
or
mov
xor
andb
xor
mov
addb
shl
sbbl
or
mov
sbb
sub
mov
pop
movsb
mov
xchg
addr16
mov
fs
out
arpl
mov
mov
pop
dec
and
xor
add
mov
insl
das
cli
and
sub
mov
lahf
jmp
leave
jo
mov
push
incb
jne
mov
in
mov
dec
dec
adc
cli
fiaddl
imul
sahf
repz
push
add
fsubs
cltd
xlat
adc
ret
ds
decb
icebp
push
pmuludq
in
mov
push
stos
cmpxchg
mov
push
in
nop
add
pushf
scas
popa
add
xor
or
pop
clc
push
mov
dec
jl
jbe
es
test
ret
jno
jg
movsb
addr16
lret
rorl
inc
lcall
sub
cli
adc
imul
inc
test
ret
test
pop
jp
gs
sub
inc
push
xchg
loope
xor
lock
xchg
outsb
xor
inc
orb
hlt
mov
xchg
fcomp
mov
loop
xchg
inc
cmp
cs
mov
out
lahf
sub
or
and
adc
loope
adc
or
popf
inc
dec
mov
lods
cltd
sbb
call
orl
out
mov
sbbl
xor
add
xchg
pop
mov
add
or
jo
loopne
test
sbb
pop
mov
roll
dec
mov
mov
xor
mov
pop
sub
aad
rdmsr
adc
sbb
jbe
xchg
mov
fcoms
int
jp
mov
sahf
rorb
dec
pop
or
adc
das
lds
add
push
jbe
loopne
mov
and
pop
xor
pop
loop
lods
movsb
cli
push
sbb
ret
inc
xchg
ficoms
jecxz
leave
test
lods
jle
jbe
lahf
popa
loopne
lahf
notb
mov
jnp
cmp
ret
rorb
std
jne
dec
push
stos
xor
sbbl
pop
adc
xor
pop
xor
xchg
add
popf
flds
xchg
incb
inc
loop
jno
or
add
mov
cmp
addr16
das
xor
jo
inc
sub
mov
jge
mov
add
test
popa
std
or
push
imul
and
pop
pop
or
add
nop
xchg
mov
xor
jo
add
repnz
dec
mov
ja
jo
cmp
cld
jp
loopne
scas
ss
push
adc
jle
inc
lds
pushf
sub
and
or
lock
mov
cmp
ficoml
push
mov
sahf
decl
inc
notl
jl
xchg
cld
mulb
call
mov
push
jg
and
sbb
hlt
pushl
imul
or
movsb
dec
adc
mov
mov
xchg
ret
je
or
or
xor
cwtl
clc
pusha
add
scas
mov
sti
idivl
sub
ret
pop
popf
jmp
mov
pop
lods
cmp
lret
in
dec
cmpb
lfs
push
cmp
popa
addr16
lods
bound
outsb
stos
js
or
cld
sbb
in
xlat
jo
xchg
cld
xchg
pop
adc
ljmp
sahf
fnstenv
leave
dec
movsb
data16
add
fisubrl
pop
or
sbb
insb
jmp
and
pop
test
push
push
pop
sbb
out
lds
lret
in
cmpsl
outsl
sbbb
add
shrb
sahf
and
cmc
addl
mov
fsubl
loopne
push
es
loopne
sbb
cmp
mov
gs
jl
in
js
adc
pushl
cld
jge
xorb
ljmp
jge
push
pop
je
test
jecxz
pop
stc
test
jp
adc
out
das
inc
inc
jmp
jns
inc
add
add
pop
fadds
popf
and
cmpsb
pop
pop
add
mov
push
bound
repz
mov
pop
dec
fcomps
loop
sub
jb
ret
pop
or
ret
pusha
lock
scas
cmp
mov
inc
xor
inc
cmp
test
andb
or
lcall
inc
clc
pusha
or
loope
aad
movsb
adc
jnp
gs
ss
dec
pop
fbld
jno
icebp
test
jmp
cld
inc
or
ret
mov
int
sub
stos
insb
pop
push
cmp
aam
es
push
push
mov
subl
std
dec
inc
clc
les
loopne
loop
es
enter
and
outsl
scas
ja
push
xor
inc
mov
loopne
dec
pop
mov
add
insl
sbb
repnz
adc
push
xor
inc
insb
push
xor
leave
clc
stos
sub
pop
cmp
push
pop
andps
icebp
sub
rolb
int3
lcall
mov
and
sub
aam
lods
xchg
sub
test
dec
pop
cld
jae
lods
mov
ret
popa
pop
inc
mov
ljmp
sbb
inc
pop
test
mov
adcb
ds
sarb
aad
pop
ficompl
stos
or
arpl
scas
sahf
sbb
stos
fiadds
ds
mov
mov
ficompl
rol
xchg
inc
or
lret
mov
add
xor
jnp
mov
push
faddl
and
or
dec
jecxz
mov
pushf
mov
add
fcom
add
mov
mov
push
out
clc
add
call
sub
sti
or
xchg
les
andl
and
mov
mov
inc
mov
cmp
inc
lcall
fidivs
test
dec
adc
sub
sahf
mov
push
int3
mov
sbb
outsb
sar
andb
sub
push
test
sub
and
pop
mov
xchg
add
xchg
or
out
or
rcrl
jp
xchg
incb
adc
mov
push
test
outsl
add
mov
push
nop
aaa
pop
add
push
dec
inc
mov
mov
add
dec
lret
cmp
jl
ja
lods
lahf
push
cmp
lcall
enter
or
mov
mov
mov
movsb
incb
mov
mov
pushf
imulb
and
mov
cmp
dec
add
movsl
or
fdivrp
pop
rolb
ljmp
sahf
sbb
lock
rorb
mov
or
xchg
pop
pusha
ficoml
pop
js
shrb
rcrl
pop
jge
es
cmp
arpl
aas
add
add
xor
scas
aam
add
xor
pop
adc
pop
sub
or
call
mov
cmp
and
cmp
inc
pop
test
pop
ss
fildll
mov
push
loopne
mov
jbe
fcmovb
sbb
or
pusha
jbe
dec
loop
push
mov
mov
iret
clc
dec
je
xchg
inc
jb
sub
push
shll
xchg
xchg
push
sbb
repnz
mov
push
call
in
or
fcomps
int3
push
lods
inc
sbb
sub
mov
or
shrb
int
sbb
cmc
incb
jle
jae
sarb
insb
mov
mov
pushf
ljmp
in
push
daa
cmpsl
xor
inc
decl
clc
lock
jle
dec
push
insb
jecxz
rcll
sub
sub
mov
push
sub
mov
push
mov
nop
fimull
jl
jnp
or
pop
and
addb
js
test
clc
lods
add
dec
mov
mov
leave
sbb
jg
xchg
mov
cmpsb
push
fdivp
dec
inc
fbstp
rcl
out
xor
pop
dec
push
aam
mov
mov
fdiv
out
jp
cmpsb
orb
inc
aam
mov
les
into
mov
aaa
lods
lret
adc
cmpsl
mov
fistps
cld
scas
sub
scas
ret
mov
mov
jg
lret
dec
test
je
push
cmpsb
and
mov
add
xor
cmp
ret
dec
inc
cmpsl
scas
cld
and
rclb
mov
push
adc
movsb
scas
ss
or
rcll
cmp
loope
int
pop
jo
mov
sbb
jle
push
pop
pop
fcoms
lea
ljmp
push
push
mov
xchg
cmp
dec
int3
pop
xchg
fdivrl
mov
addr16
addb
sbbb
jnp
addl
push
roll
push
test
fcoms
mov
cwtl
xchg
les
inc
mov
test
add
mov
push
xchg
js
fstpt
push
cmp
jns
aas
xor
mov
or
ljmp
dec
mov
cmpl
jmp
and
loop
arpl
jl
mov
xor
test
sub
hlt
int3
stc
mov
push
xchg
push
loopne
xchg
mov
xchg
xor
push
sub
rcrl
push
dec
push
fimull
or
add
js
repnz
sarb
jl
xchg
gs
das
cmc
cmp
jg
mov
or
xchg
gs
inc
aaa
add
cmpsl
xor
jbe
int
fimull
popa
je
xor
mov
lret
test
call
shrb
xchg
mov
daa
jp
mov
sub
push
lcall
lds
lock
add
test
test
cmpsl
hlt
or
mov
mov
mov
gs
jno
push
loopne
push
pshufw
aas
sbbl
jmp
xor
lcallw
insb
test
jle
loopne
inc
ljmp
xor
jmp
mov
adcl
loop
push
cmp
scas
mov
inc
push
leave
xchg
mov
jge
mov
data16
lock
or
mov
jnp
ret
mov
dec
roll
and
arpl
fsubs
stos
in
in
or
jns
js
cmp
aaa
jecxz
lock
int
jle
adc
sbb
lock
enter
xchg
dec
dec
xor
mov
xlat
divps
hlt
stos
outsb
xchg
pop
call
mov
dec
les
push
pop
test
sbb
out
mov
out
mov
xchg
mov
shrb
pop
pushf
mov
rcl
push
movsl
int3
test
cs
imul
aam
or
mov
push
in
adc
fnstenv
test
or
cltd
dec
and
adc
sbb
push
leave
jle
scas
or
mov
inc
das
push
scas
vshufpd
icebp
in
pop
jb
dec
and
sbb
mov
fcmovnbe
sub
rcrl
jne
mov
cld
shlb
cli
push
leave
mov
cmpsb
push
jnp
rcrl
pop
pop
sbb
fdivp
sub
and
ret
or
mov
lcall
inc
push
cmp
push
xor
or
or
and
stos
sub
pop
mov
pushf
adc
inc
mov
nop
mov
in
mov
push
mov
pop
inc
mov
enter
ja
outsb
inc
fsubl
and
andb
mov
mov
test
int
adc
xchg
lea
sbb
fstps
dec
and
lds
aam
jle
rcll
imul
clc
insl
add
es
and
adc
or
rcll
int
mov
mov
or
lret
and
pop
and
jle
xchg
scas
sub
mov
ret
dec
mov
inc
mov
pop
push
lcall
add
xchg
jo
iret
cmpsb
aad
int
jo
mov
cmp
fisubl
xchg
add
test
or
and
mov
call
fs
ror
mov
sbb
xchg
cwtl
insb
add
pusha
mov
lcall
jge
bswap
sub
loop
hlt
shrb
test
and
fdivl
push
les
pushf
add
add
or
lahf
rorb
xchg
xor
pusha
inc
pop
in
dec
xchg
add
rorl
push
jge
jo
popa
xor
add
dec
push
sarl
dec
add
movsl
movb
cmpb
scas
ret
addb
mov
repnz
adc
hlt
fwait
out
mov
inc
or
loop
test
movsb
dec
in
xchg
popa
std
arpl
movsb
mov
loopne
xchg
push
lods
das
add
push
mov
inc
adc
jmp
or
mov
int3
push
loopne
loope
dec
add
lcall
loope
rcll
xor
rcrl
loope
cli
pop
lcall
into
movsb
es
je
mov
add
jecxz
and
leave
sub
ret
and
or
arpl
popf
push
stc
mov
test
mov
pop
xchg
mov
outsb
hlt
cs
pop
lds
adc
rcrb
ficoml
cmp
test
cmpsb
rcrb
add
cmpsl
cmpl
xchg
adc
jno
lea
mov
rcrl
xchg
repz
aaa
add
popf
std
pop
sbb
mov
pop
outsb
lods
movsl
xchg
jle
sar
movsb
jl
rolb
filds
out
loopne
inc
mov
cmp
inc
cmp
movsl
aam
scas
pop
iret
adc
into
push
fldl
movsl
movsb
cmc
pop
out
add
mov
add
out
mov
adc
ds
jl
data16
inc
insl
mov
sub
xlat
cmc
inc
out
popf
mov
or
adc
xchg
push
sbb
pop
ljmp
clc
sbb
movsb
add
lods
mov
push
test
sbb
test
jo
push
pushl
roll
xlat
cmp
pop
and
xor
jne
fmuls
xor
sub
xlat
pop
pop
adc
pop
jo
xchg
enter
loop
aas
and
fmuls
sub
inc
sbb
mov
or
cmp
xchg
ds
in
xchg
pop
arpl
faddl
sub
repz
ret
clc
jae
pusha
movsl
es
daa
fsubs
mov
xor
rol
iret
xor
test
fdiv
out
scas
mov
mov
cld
call
add
adc
loope
mov
add
test
pop
dec
and
jo
out
xor
ret
dec
push
add
add
xchg
or
or
fdivs
loopne
aaa
jae
add
out
stos
mov
mov
xchg
xchg
xor
cwtl
lret
dec
pop
in
test
loop
int3
fstps
mov
mov
mov
or
add
pop
mov
xor
dec
popa
lds
mov
and
out
roll
sub
sub
push
jl
jp
pop
cmp
add
xor
xor
sbb
xor
jnp
call
dec
lods
jbe
in
mov
sti
jmp
mov
mov
rcr
pop
cld
xor
fidivrs
out
loope
push
pop
das
cmp
test
push
subl
dec
inc
loopne
push
clc
out
xor
cmpsl
push
loopne
lea
sub
and
pop
mov
cmc
in
dec
push
cli
and
inc
mov
test
imul
js
pusha
out
xor
cwtl
jo
jecxz
xchg
mov
data16
add
and
cmp
xchg
mov
pusha
xlat
lods
int3
add
sbb
imul
dec
push
daa
insl
push
sbb
xor
lret
pop
and
or
mov
rclb
stc
test
inc
out
js
mov
cmpsl
add
dec
jmp
add
addl
sbb
mov
pop
ret
or
jle
in
pushf
jnp
xor
inc
add
push
sub
push
mov
in
jp
outsb
lock
adc
test
cmp
ljmp
xor
testl
fsubrs
imul
ds
jmp
add
xor
inc
add
xor
das
loop
aad
dec
push
cmpsl
mov
xchg
mov
rclb
fbld
xchg
mov
aaa
mov
icebp
stc
xor
decb
shll
roll
icebp
mov
mov
loope
mov
pop
sbb
das
sbbb
adc
or
or
cmp
cmp
xlat
mov
ljmp
xchg
in
adc
inc
call
faddl
lret
push
xchg
pushf
xor
loop
xor
mov
and
movsl
add
jne
imul
ret
fs
and
dec
jae
sub
pop
sub
lret
push
rorb
mov
mov
cmp
sub
andl
std
inc
es
mov
int
dec
stos
mov
mov
push
scas
push
adc
adc
add
lock
lret
lahf
sbb
arpl
pop
cmpsl
mov
mov
faddp
enter
repnz
pop
dec
add
dec
push
pop
cmp
and
stc
pop
jle
adcb
mov
mov
sahf
lock
pop
lock
mov
sub
push
aam
adc
int
xchg
enter
xchg
pop
sub
cld
inc
xor
inc
cmc
je
in
jle
fiaddl
ds
jns
lcall
daa
sbb
sbb
inc
gs
scas
push
ss
cmc
pop
jno
sub
push
out
jmp
arpl
dec
push
jns
fdivs
inc
mov
sub
fisubrl
dec
imul
sbb
iret
jb
das
je
hlt
jo
cmp
mov
fcmovu
inc
mov
xor
push
mov
std
jo
lahf
add
push
push
mov
scas
out
sbb
loope
jp
mov
adc
pop
lods
cmp
lret
mov
sbb
mov
movsb
adc
mov
mov
inc
sarb
cltd
ljmp
dec
mov
inc
mov
jno
cwtl
xor
or
xchg
xor
and
xor
adc
test
ja
or
and
sar
lock
and
cmpsl
adc
sub
xor
xchg
mov
cmp
gs
loopne
dec
xchg
dec
inc
fisttpll
inc
push
pushf
or
decb
sub
ret
in
sub
push
xlat
clc
outsb
scas
stc
push
cmp
adc
or
gs
xchg
and
mov
icebp
cmpl
cmc
gs
call
mov
add
insb
xchg
mov
sbb
cmpsl
loop
push
mov
aaa
add
movsl
dec
push
mov
or
js
jbe
lock
scas
and
popf
pushf
xchg
inc
aas
mov
mov
pop
int3
mov
loop
aam
jl
xchg
inc
imul
cmc
pop
lret
sbb
and
or
mov
cs
adc
xchg
repz
push
adc
into
aam
pop
mov
fstpl
iret
add
fidivs
ret
and
push
enter
in
mov
or
inc
add
push
jnp
jae
mov
dec
mov
mov
pop
lock
movsl
clc
fucomp
fcomps
and
mov
cmp
inc
fistpll
xchg
jno
xchg
jo
pop
test
outsb
mov
or
push
pop
popf
pop
push
mov
mov
sub
cs
incb
add
xchg
cmc
cmpsb
outsb
cmp
pop
jp
and
hlt
mov
jns
inc
sar
mov
mov
push
or
sbb
cmp
mov
mov
mov
dec
pop
call
sbb
add
jecxz
js
add
loope
sbb
in
xchg
xor
ljmp
sbbl
outsl
pushf
lret
xor
mov
mov
das
inc
mov
jo
pop
push
popa
mov
pop
mov
jmp
mov
jne
clts
mov
aas
mov
stc
mov
ja
mov
cmp
lock
jmp
sbb
loope
xchg
into
subb
xor
or
push
jecxz
loop
movsb
pop
ret
cmpsl
jb
inc
movsl
mov
data16
movsl
js
loop
sarb
lds
xchg
das
test
adc
and
outsb
out
xor
pusha
ret
xchg
pop
jp
test
pushf
clc
adc
jmp
in
cmp
scas
or
or
jmp
scas
xor
jmp
daa
ds
inc
lods
mov
cwtl
add
cmp
test
sub
popa
fdivl
push
fs
mov
cmpsb
mov
cmpsb
mov
adc
out
int3
daa
adc
das
push
test
int
and
or
in
dec
cs
test
stos
loop
scas
pop
icebp
pop
lea
cmp
add
push
lret
sarl
pop
cmp
jbe
in
mov
sbb
adc
test
cmpb
sbb
and
movsl
incl
aad
dec
add
or
shll
in
mov
dec
out
pop
pop
jbe
bound
inc
adc
or
into
bound
and
mov
fimuls
mov
hlt
shl
test
ss
xchg
cmp
jp
sub
jmp
mov
push
adc
dec
repz
mov
jmp
pop
stos
rcrl
fists
dec
xlat
sbb
call
inc
in
pop
pusha
aaa
shlb
loop
add
add
std
lahf
in
sbb
xchg
imul
jne
and
or
push
pop
js
push
push
sub
iret
xor
adc
popf
push
pusha
jno
and
jno
cvtps2pi
add
mov
nop
stos
jno
cmp
fiaddl
in
adc
enter
cwtl
add
add
mov
fstp
inc
cmp
pop
leave
in
mov
mov
mov
jo
ljmp
lock
mov
enter
inc
scas
cmc
test
sub
int
pushf
cmpsb
or
test
std
aaa
test
cmp
sbb
shrb
ror
mov
and
add
movsl
arpl
lock
sub
xor
xor
test
loope
pop
cmp
sbb
aad
cwtl
ds
shrb
dec
xor
testl
int
out
fildl
mov
cwtl
inc
mov
std
and
outsl
cli
jecxz
pop
mov
lock
cli
loop
iret
fidivl
xor
push
dec
push
cmp
jne
adc
dec
hlt
icebp
push
call
xchg
add
dec
inc
mov
call
push
daa
xchg
ljmp
xor
fwait
lcall
inc
ja
pop
lea
mov
jmp
jb
lea
mov
sbb
rorb
dec
mov
push
sti
hlt
lret
mov
cmp
imul
jmp
fnsave
aad
jnp
cmc
arpl
xchg
das
cwtl
push
pop
pop
jbe
push
test
push
test
fiadds
add
cmpsb
mov
lock
stc
ja
shlb
dec
cmpsb
sbb
dec
leave
push
clc
out
mov
adc
loopne
dec
je
mov
mov
loopne
sbb
inc
shrl
sahf
sub
popa
sub
dec
test
andb
stos
add
mov
andb
ret
and
inc
mov
imul
mov
test
in
rol
ret
les
out
rcrl
int
add
enter
and
pop
jns
cmpsb
daa
int3
jne
mov
out
roll
jo
int3
lock
cmp
movsl
xor
push
js
loop
push
inc
movsl
xchg
inc
rolb
inc
mov
and
dec
cmc
adc
mov
sbb
roll
dec
lock
cmp
mov
cmp
adc
lods
fs
jno
dec
pop
sahf
jp
mov
shlb
inc
inc
xchg
adcl
aad
mov
packssdw
cmpsl
divb
ret
iret
shlb
packsswb
dec
mov
inc
insl
jne
mov
mov
stos
fwait
repz
mov
rol
inc
ja
imul
das
mov
sbb
loope
inc
lods
sub
dec
lds
movsl
mov
mov
dec
sbb
pop
jge
xlat
mov
gs
sub
stos
lds
loope
push
mov
cmc
in
mov
adc
jae
push
mov
les
push
rcll
out
cwtl
mov
xchg
scas
pop
rolb
push
les
mov
iret
dec
push
pop
push
xchg
aam
lcall
add
test
push
lahf
mov
dec
inc
fsts
enter
lock
flds
sahf
andb
cmpsl
out
rorl
sub
mov
test
mov
push
jecxz
fiaddl
lcall
sbb
jl
lods
push
mov
cmp
mov
test
sub
repnz
adc
out
push
mov
add
sarl
sbb
lods
mov
loope
ss
pop
mov
scas
xchg
bnd
add
xor
adcb
aad
pop
mov
mov
sbb
push
inc
mov
lret
aaa
sub
and
mov
shl
mov
pop
das
xchg
nop
push
das
icebp
je
xchg
sbb
add
pop
dec
aam
add
xchg
ja
lahf
and
movsb
call
jmp
mov
adc
testl
jne
pop
push
dec
rorb
shll
out
fistl
cmp
xor
stos
test
cli
sub
add
xchg
xor
jl
push
or
cmp
stos
add
sbb
xchg
mov
xlat
jo
inc
cmp
xchg
sub
xor
jecxz
cld
lea
sbb
fidivl
ret
ja
mov
sti
add
push
test
jp
dec
or
push
dec
mov
in
cmpsb
adc
mov
jno
shl
pop
lock
jg
mov
cmp
xchg
or
pop
xor
rclb
int3
sub
test
addr16
dec
pusha
ficoml
in
je
clc
test
mov
sbb
pop
push
clc
push
dec
pop
pop
sub
cmc
cmp
int
jnp
push
sbb
push
addl
lahf
arpl
cmpsb
aam
pop
daa
mov
push
arpl
out
addb
pop
mov
cld
nop
pop
fcmovnb
or
and
push
xchg
faddl
adc
rorb
orb
es
fdivl
int3
nop
pop
xchg
loope
out
stos
out
inc
js
inc
mov
pop
or
imul
add
xor
test
mov
mov
test
adc
push
xorb
jg
rorb
xchg
pop
inc
out
fwait
push
sahf
xchg
add
fldcw
fs
mov
addb
adc
mov
or
mov
mov
cli
cvtps2pd
shrd
hlt
fnstsw
lcall
aad
out
clc
mov
or
dec
jo
dec
nop
jno
mov
mov
push
sbb
xchg
fists
loopne
or
cmp
and
decl
fs
xchg
sahf
cli
imul
mov
bnd
lret
idivl
xchg
pusha
ror
rclb
sbb
sahf
loop
sbb
add
inc
lret
xchg
lds
lcall
sahf
sarl
sbb
jmp
mov
pushf
xor
mov
adc
ret
fwait
dec
cld
loopne
or
inc
xchg
ds
sbbb
push
mov
hlt
mov
xor
pop
outsl
mov
xchg
push
je
add
dec
out
int
add
js
cmp
js
add
and
test
inc
mov
movsl
scas
mov
movsl
mov
cmp
pop
outsb
jo
scas
dec
rolb
adc
div
sbb
push
jg
add
test
sarl
sbb
mov
das
fsub
inc
add
fcomps
insb
mov
push
cmpsb
mov
sbb
jle
add
imul
icebp
jp
or
insl
sbb
movsb
fisubs
testb
cmc
fs
loope
inc
sarl
std
mov
sbb
rorb
cs
int3
mov
mov
fidivrl
out
jbe
popf
lret
mov
mov
or
cs
mov
lock
pop
jno
adc
mov
and
jmp
sub
adc
lret
popf
mov
push
sub
cmc
inc
in
lock
xchg
mov
testb
mov
fwait
jge
xlat
add
or
rorb
mov
jo
sbb
in
int
xor
mov
push
xlat
subb
sbbb
inc
inc
xchg
aaa
push
mov
sbb
mov
clc
add
or
dec
push
mov
ret
pushf
cmc
loop
dec
sub
pop
out
pop
test
cld
or
inc
repnz
sub
call
push
movsb
bound
or
mov
adc
daa
mov
les
mov
add
ds
inc
cmp
sbbl
xor
js
faddl
sbb
mov
clc
aad
adc
adc
hlt
xchg
mov
ret
mov
xor
insl
adc
nop
fildl
adc
push
call
test
jle
sbb
mov
or
push
lock
mov
cld
les
sub
aas
into
and
test
and
add
mov
pop
loopne
mov
mulb
push
mov
jno
cmp
inc
ffreep
repnz
lea
fsubr
inc
xchg
out
jno
lods
xchg
xchg
orl
cmp
mov
push
roll
and
push
pop
je
add
shrb
mov
int
mov
pop
sti
xor
add
cmc
lret
scas
sbb
outsb
fsubs
ficoms
es
leave
and
scas
dec
cld
sbb
jp
or
adc
xchg
cld
clc
pop
pop
xchg
std
mov
js
dec
sub
repz
retw
int
mov
aas
sar
and
mov
pushf
call
lock
lret
inc
jae
dec
push
pop
je
sbb
aaa
mov
xor
cld
iret
ret
daa
or
sub
test
push
lahf
pop
cli
or
dec
stos
sbb
xchg
mov
jp
sbb
subb
in
push
sahf
mov
pop
in
xor
cltd
mov
sahf
ljmp
cld
pop
lcall
cmc
pop
sbb
fidivs
push
hlt
xchg
or
inc
dec
aad
sbb
bound
clc
push
mov
lock
cld
filds
cld
adc
mov
ds
rolb
jp
sub
mov
mov
pushf
mov
mov
test
rol
nop
xor
sub
mov
add
inc
iret
push
push
mov
fcmovbe
add
pop
idivb
inc
iret
aaa
je
ret
inc
cmp
incl
xchg
loop
add
sbb
mov
adc
aad
lock
push
mov
rol
cmp
shl
mov
scas
fisttpll
xchg
fucomip
aas
in
mov
data16
popa
pop
add
fcomp
sub
inc
loopne
loope
inc
xor
mov
nop
cmp
int
inc
sub
xor
inc
daa
push
cmp
es
sbb
call
jp
sbb
mul
jecxz
jmp
mov
stos
cmpxchg
lods
pop
xor
inc
inc
pushl
or
sbb
mov
pop
add
arpl
cmc
mov
jbe
cli
sub
ss
mov
xchg
ret
push
test
into
sub
cs
aaa
ljmp
aas
sbb
aam
repz
scas
adc
add
cmp
hlt
test
jge
push
pop
sub
or
pusha
jb
enter
dec
xor
call
mov
sub
mov
or
push
jmp
push
push
int
or
lahf
pop
jnp
and
mov
xor
aam
leave
adc
ds
jle
ret
xchg
sub
xor
push
out
xchg
out
loop
sbb
sbb
lods
push
mov
push
xchg
xchg
popa
dec
push
arpl
mov
push
stc
sub
pushl
loope
mov
sahf
adc
xor
aam
cs
mov
stos
xchg
mov
enter
out
testb
rolb
mov
daa
pop
cmp
out
lahf
inc
push
jne
mov
mov
lret
loop
adc
xchg
cmpsb
push
jne
mov
and
js
clc
ret
adc
cmp
lds
mov
idivb
jo
sysenter
ljmp
mov
es
xor
fidivrs
and
pop
shrb
movsl
push
lods
add
pop
mov
mov
or
push
cmp
xor
imul
xchg
xchg
test
fucomp
aad
scas
aas
push
in
fiaddl
push
andl
rcrl
inc
dec
cld
dec
shl
xchg
cmp
jle
pop
call
jmp
test
mov
jp
xchg
add
jnp
test
xchg
dec
filds
or
daa
push
out
fwait
lea
ss
fdivl
cmp
fimull
mov
jbe
ret
xchg
loopne
fnsave
in
call
push
mov
in
mov
dec
jge
test
sar
add
and
adc
push
push
add
sbb
fbstp
sbb
inc
sbb
dec
shr
test
int
jle
mov
test
clc
clc
add
pop
cmp
push
add
xor
aam
jo
and
fwait
push
mov
cld
add
xor
stos
scas
push
xchg
mov
enter
fmull
pop
adc
outsb
imul
fcoms
ljmp
std
mov
hlt
fwait
shll
ljmp
fdivrs
mov
insl
lock
push
std
aaa
and
mov
inc
cmp
mov
xor
mov
icebp
int3
push
stos
xchg
hlt
or
in
jge
xchg
mov
or
or
popl
or
sub
and
inc
addr16
jbe
sbb
mov
popa
mov
loop
gs
js
mov
mov
test
mov
cmpl
xchg
jmp
cmp
aas
nop
mov
aas
sbb
mov
pushf
xor
shlb
pusha
xchg
push
push
scas
adc
loopne
jg
dec
pop
inc
push
xchg
mov
icebp
xchg
stc
rolb
add
sahf
or
cs
xchg
loope
sub
ja
cmp
mov
movsb
hlt
rclb
ljmp
mov
dec
mov
push
or
push
jg
dec
pop
pop
adc
mov
jle
aas
hlt
in
jmp
mov
and
pop
push
dec
mov
lahf
pmaxsw
sbb
xchg
push
xor
add
out
cmpsl
xor
xor
push
testb
std
mov
out
ret
aam
jmp
push
jnp
pop
fadd
vaddss
enter
xorl
xor
xchg
or
cmpsl
and
add
shr
jb
cs
push
loopne
enter
mov
loope
test
sub
test
mov
mov
adc
xchg
cmp
cld
sub
outsb
insb
cli
rorb
pop
jne
mov
divb
flds
imul
in
mov
xchg
push
jb
movsl
or
mov
adcb
sub
into
in
sbb
add
cmp
xorl
or
jo
daa
cli
xchg
into
jb
das
add
xor
outsl
fcoml
cmp
imul
and
pusha
ds
add
mov
push
aas
xchg
loopne
inc
inc
sbb
pop
jne
mov
sbbl
push
pop
sbb
xchg
out
jle
clc
and
dec
rcll
add
mov
invd
bound
push
sbb
pop
fisttps
xchg
pop
inc
int
stos
outsb
movb
inc
jne
sbb
push
sbb
lods
fildll
lret
loope
inc
adc
inc
xchg
cli
je
pop
and
cmp
push
shll
repz
loopne
ror
sarb
sbb
xchg
adc
cs
pop
fwait
jmp
dec
dec
inc
fistpll
clc
push
xor
push
mov
ret
dec
add
enter
addr16
dec
out
loope
mov
or
or
pop
sub
xchg
add
std
sub
negb
pop
jbe
les
sub
and
movsl
stos
test
jg
bound
gs
fiaddl
pusha
rcrl
mov
jp
xchg
mov
andb
push
mov
or
and
add
ljmp
lcall
xchg
add
ljmp
stos
and
pop
cmpb
xchg
jecxz
jb
push
pop
push
sar
orl
or
sbb
xchg
shlb
incl
gs
mov
xor
inc
mov
xchg
push
sub
push
pop
pop
rclb
xchg
sbb
jg
test
dec
fldenv
dec
or
push
fistpll
ret
add
rclb
mov
cmp
cmpsl
jg
dec
xchg
out
fdivs
lret
and
fcomp
int3
adc
incl
ss
shr
mov
scas
scas
xchg
xor
adc
sbb
enter
loope
lods
movsb
and
pop
push
ds
mov
clc
movsl
jg
mov
adc
cwtl
cs
fmulp
aas
inc
jecxz
sahf
mov
pusha
outsb
mov
add
add
xor
cmp
push
lret
dec
lods
and
push
pop
pop
roll
aaa
scas
push
or
shlb
sahf
xchg
push
dec
fsubp
inc
xchg
jge
cmp
cmpsb
add
rol
xchg
mov
adc
sti
fisttps
aam
inc
lret
pop
es
push
das
inc
pop
or
scas
mov
nop
insb
test
inc
jl
iret
stos
scas
xor
loope
or
mov
adc
pop
cmp
push
bound
mov
mov
lret
jle
lret
addr16
rcrb
adc
jp
mov
xchg
inc
fadd
and
lcall
sbb
cwtl
jmp
shlb
mov
fwait
ret
and
es
jecxz
sbb
or
or
cmpsb
inc
pushf
mov
int3
dec
test
inc
inc
mov
dec
sbb
cmp
clc
dec
sbb
push
jle
lahf
ljmp
bound
cmpsl
sub
sbb
xor
cmp
push
xchg
cmp
pop
inc
push
xchg
imul
push
pop
std
arpl
subb
lock
test
pmullw
or
xchg
rcrb
and
or
pop
mov
mov
popf
xor
jge
push
scas
popf
shlb
outsl
clc
and
nop
inc
pop
dec
pop
fmull
xor
dec
loope
aad
std
test
stos
popa
mov
mov
mov
notb
pop
icebp
jmp
mov
pushf
pop
and
insl
cld
fwait
clc
xchg
fiadds
clc
adc
jmp
call
fcoms
bound
push
pop
rcrb
xchg
sub
sub
add
sar
or
repnz
jg
sub
cmp
push
shr
or
sub
sub
or
rclb
sub
fs
pop
cmp
xchg
stos
dec
sbb
jno
outsl
cmp
je
or
jo
adc
and
xchg
iret
dec
cmp
xchg
mov
adc
jg
loop
lcall
int3
jo
and
push
sbb
lahf
mov
mov
sub
rcll
pushf
imul
add
jecxz
cmp
dec
adc
xor
lcall
ljmp
inc
and
stos
or
pop
cld
pop
test
xchg
in
ljmp
decl
mov
xchg
sbb
jge
incl
sbb
mov
sbb
hlt
jae
scas
jg
lods
xor
lods
in
sbbb
sbb
int3
sbb
cld
sub
fcoml
mov
mov
jl
push
inc
mov
and
push
lock
ja
push
or
insb
ljmp
dec
push
lea
insb
aaa
ret
sub
add
pop
and
sbb
jne
fidivrl
and
aaa
or
aam
jg
cmpsb
loopne
addl
int3
xchg
mov
lock
mov
ss
mov
pop
out
sub
mov
adc
decb
test
sbb
cltd
out
insb
ljmp
push
mov
orb
push
call
cld
xchg
xor
imull
sub
pop
cmp
mov
pop
lods
call
push
xchg
les
movsb
ss
rolb
jbe
iret
sub
jecxz
imul
scas
mov
out
fs
cld
pusha
cld
aas
fistl
pusha
inc
repz
mov
scas
aad
cmp
mov
rol
mov
sbb
orb
push
push
insl
hlt
in
xor
scas
ret
aas
out
cmp
fs
xchg
add
outsl
adc
jo
or
stos
fdiv
fs
jl
push
ret
into
inc
clc
xchg
enter
or
jae
pop
add
adc
pop
imul
jp
jmp
outsb
lahf
lret
inc
inc
mov
jmp
ja
rcl
adc
or
or
and
dec
xor
scas
dec
adcb
sbb
aas
mov
xor
shl
adc
push
sub
sub
adc
mov
popa
stos
jnp
lahf
push
clc
and
add
ljmp
in
mov
mov
fmuls
aad
push
test
adc
add
mov
push
stos
push
lods
or
das
pop
fstl
dec
mov
fldl
int3
push
and
loopne
mov
push
pop
inc
out
sbb
and
sbb
sbb
fcomp
pop
rolb
fdivl
sub
cltd
rorb
data16
mov
adcl
cs
push
popa
fisubs
std
icebp
loopne
fld1
pop
inc
xchg
loopne
mov
pusha
adc
cld
push
mov
cmp
mov
inc
and
in
test
cltd
push
andb
and
aam
xlat
push
loope
out
push
loopne
push
cmp
push
test
mov
pop
int
aaa
lds
mov
jl
mov
cli
ret
insb
lock
sar
push
pop
xchg
andl
mov
add
fldcw
ficomps
stos
jp
mov
lods
test
and
fadds
mov
fsubs
add
enter
cmp
divb
or
aad
sti
pushf
out
call
jg
inc
push
rcrb
sub
cmpsb
add
cmp
in
pop
xchg
outsb
sbb
pop
ret
push
mov
add
jbe
lods
mov
es
push
xchg
mov
mov
cmp
jae
dec
pop
loop
dec
mov
decl
fs
mov
int
and
jmp
das
jg
mov
cmp
dec
sahf
ud0
mov
out
cmp
scas
icebp
pop
mov
data16
mov
mov
mov
clc
cmpsl
or
mov
push
jne
shlb
out
mov
add
mov
cmpsl
push
adc
dec
adc
pop
or
int
fisttps
jo
inc
jbe
mov
adc
push
js
push
cmp
imul
sbb
movb
xchg
sbb
add
ja
pop
dec
mov
push
push
mov
in
jmp
push
cmpsl
inc
nop
out
ret
out
mov
hlt
jbe
push
sub
call
ret
sbbl
mov
les
cmp
ljmp
lods
jge
cs
sub
dec
nop
mov
pop
test
pusha
mov
pop
fnstenv
insb
and
and
and
cli
lea
dec
pusha
dec
xor
pop
pop
push
sbb
lods
push
mov
sahf
bound
and
pop
xchg
fidivs
lods
pop
sub
mov
adc
sbb
mov
cli
imul
sbb
ja
mov
dec
std
pop
cltd
rclb
xor
scas
mov
sarb
xor
imul
jno
daa
sub
in
or
mov
jmp
push
pop
aad
pusha
sahf
mov
and
loop
jae
es
imul
nop
adc
cmp
sbb
ret
sbb
dec
inc
popf
push
dec
dec
cld
push
scas
sub
nop
cmpsl
into
js
cmp
dec
fwait
stc
call
pop
mov
push
lret
adc
daa
mov
push
or
mov
rolb
fsubrl
lods
inc
call
movsb
inc
xor
pop
cli
movsl
fidivl
fildll
jecxz
ret
out
jo
sub
ficompl
shlb
mov
repnz
xor
cmp
into
pusha
jg
shll
fcomi
sbb
jo
and
or
xor
cmpsb
mov
fsubrs
loopne
cmp
idivb
jns
fwait
pop
in
insb
clc
mov
mov
mov
icebp
mov
push
jp
add
call
xor
sahf
sub
lods
orb
fs
shrb
inc
sub
lcall
imul
gs
and
aad
or
pushf
xchg
mov
xlat
loop
add
cs
or
lods
pop
lods
pop
sarb
cmp
ss
les
pop
movsb
push
adc
loope
loopne
mov
add
pop
loopne
rorl
adc
jecxz
scas
repz
icebp
das
add
filds
cmp
or
nop
lahf
fld
das
loopne
sub
loope
sub
dec
mov
sbbb
icebp
mov
mov
and
mov
dec
scas
lret
cmp
xchg
sub
rorb
decl
repnz
dec
es
in
test
aad
mov
inc
jnp
inc
push
cmc
or
ror
dec
cli
in
jbe
cli
rolb
dec
imul
push
rclb
xor
nop
aam
lcall
repnz
and
inc
xchg
and
jl
mov
cwtl
aam
loopne
insb
sbbb
js
into
cwtl
adc
push
mov
pop
xchg
dec
and
pop
and
imul
std
add
cs
addb
mov
mov
jnp
push
xchg
pop
ja
js
js
push
jns
cmp
in
and
xor
jp
das
push
jne
repz
sub
or
popa
cmpsl
push
jge
test
bound
sub
rclb
ljmp
and
sbb
pop
mov
scas
std
or
sub
pop
xor
iret
fstpt
lret
mov
mov
test
fcmovne
cmc
movsl
inc
out
mov
mov
inc
ljmp
adc
je
rorb
mov
jb
loop
or
mov
xor
rolb
out
jle
test
push
sbb
clc
push
in
sbb
or
scas
push
cmp
cmp
dec
movsl
incl
fdivr
xchg
icebp
das
pushf
and
hlt
lea
sub
jb
jecxz
mov
pop
loopne
pop
adc
and
and
sbb
inc
mov
push
xor
xchg
popf
inc
sbb
stos
mov
cltd
or
mov
jle
pop
and
dec
cmp
imul
adc
xchg
jp
mov
pushf
push
jg
not
kmovb
mov
pop
scas
aam
mov
fisubl
aaa
pop
in
lcall
xchg
daa
dec
adc
dec
cli
sahf
lods
lods
add
or
and
dec
repnz
inc
adc
and
fwait
fwait
adc
mull
fwait
clc
das
dec
dec
add
pop
sbb
cmp
sub
push
test
pop
mov
sbb
xchg
mov
test
loopne
cmp
jg
das
sbb
ss
loop
fimull
push
dec
adc
jo
popa
mov
scas
icebp
jle
push
rcrl
adc
arpl
aad
mov
cmc
popf
ds
add
mov
inc
sub
aaa
mov
and
adc
inc
or
lock
inc
sbb
jo
and
fdivs
sub
adc
les
clc
mov
mov
jo
or
js
in
mov
push
loope
mov
or
cmp
mov
shl
divb
pop
call
push
fdivl
add
sbb
xor
or
das
inc
clc
incl
jle
adc
rcll
xor
and
out
inc
sbb
in
or
add
pop
sbb
push
call
lods
sahf
push
setns
loop
add
repz
out
test
rclb
sub
mov
sub
out
or
cwtl
adc
call
jle
xchg
jo
add
push
add
sbb
lods
mov
jne
or
adc
xor
sbbl
xchg
xchg
inc
sbb
jae
outsb
divl
ret
cmp
stc
fisttpl
adc
test
dec
out
adc
mov
imul
inc
or
lcall
cmc
bound
pop
jg
lcall
daa
mov
add
pop
push
cmp
filds
cmp
addr16
inc
fadds
shlb
loopew
ret
xor
pop
mov
push
dec
gs
push
dec
lea
popf
pop
jge
mov
pop
stos
ret
xorl
cmpsb
add
adc
leave
mov
fsub
pop
or
xor
mov
or
sub
xchg
mov
add
xchg
es
adc
adc
into
shll
jle
out
cli
icebp
idiv
push
and
inc
push
jmp
les
mov
ret
subb
add
cli
addl
xchg
clc
xchg
xchg
adc
int3
mov
mov
or
imul
fdiv
outsb
fs
fisubrs
jmp
shlb
inc
and
jg
mov
inc
mov
mov
loopne
loopne
test
mov
bound
lods
adc
test
lock
out
test
pop
je
cmp
into
push
pop
and
in
ss
push
xchg
or
jmp
in
orb
add
loopne
mov
jns
sbb
into
fwait
pop
test
sbb
adc
and
mov
pop
sbb
xchg
xchg
and
jmp
jecxz
push
pop
push
jo
or
xchg
fdivrs
lcall
sbb
mov
cmp
cld
test
cmp
out
lcall
mov
mov
fsts
dec
outsl
mov
xlat
lret
mulb
add
lds
sbb
lcall
mov
mov
cld
sub
pushf
aad
pusha
ss
out
cmp
fld
mov
inc
xor
add
neg
cli
call
sub
jne
or
icebp
mov
sahf
add
cmp
movsb
jo
sub
fsqrt
and
mov
mov
insb
jae
mov
or
push
or
jge
adc
xchg
add
pop
je
pop
in
dec
fadds
aaa
and
xor
mov
pop
sbb
push
sbb
ror
lods
adc
pop
ljmp
push
mov
mov
shl
mov
dec
xor
adc
jbe
push
jb
inc
popf
sub
daa
shll
xor
pop
xchg
stos
test
cmp
inc
pop
scas
push
sub
scas
or
pop
dec
inc
jmp
or
push
cmpsb
sbb
dec
xor
xchg
mov
xchg
add
test
cmp
xor
pop
inc
cld
jno
loopne
jo
lret
inc
cli
incl
scas
and
inc
sbb
mov
sarb
rcrl
packsswb
sub
movsb
in
dec
push
push
sub
jge
inc
insb
mov
and
in
dec
icebp
push
pop
mov
bound
sub
ret
and
and
je
mov
sbb
es
inc
imull
pop
orb
adc
scas
and
add
add
pop
sahf
adc
jl
cmp
lahf
and
dec
loope
push
test
sti
add
pop
inc
inc
cld
jg
int3
adc
pusha
nop
mov
inc
dec
das
push
jle
dec
adc
mov
rcrl
xor
fistpll
mov
xchg
mov
movsl
rol
ljmp
call
iret
testl
mov
dec
aaa
testb
movsl
xor
sub
jp
pop
cmc
mov
xor
xchg
mov
lods
xchg
cli
mov
mov
adc
and
cwtl
adc
call
fucom
loopne
pop
lods
mov
jne
xchg
jne
mov
insb
add
pusha
test
pop
loopne
outsl
xor
and
push
call
movsb
jge
cmpb
inc
inc
add
or
lods
xchg
sub
mov
pop
dec
xor
stc
js
dec
push
pop
and
mov
fwait
adc
aam
and
mov
dec
inc
icebp
xor
or
inc
scas
and
loope
clc
inc
movsb
and
in
cmc
xchg
in
popa
pop
ficoml
and
out
les
inc
xor
mov
add
pop
ja
add
mov
or
xchg
out
stos
iret
insl
pop
and
jecxz
outsl
in
mov
or
decb
jnp
xchg
push
aad
addl
sarb
pop
jne
lcall
mov
adc
xchg
or
push
ljmp
or
dec
xor
add
pushf
movb
test
leave
inc
cmp
push
mov
lret
push
repz
add
sbb
test
and
nop
push
insl
xor
xchg
call
sub
pop
adc
push
fsubrs
push
leave
adc
je
cmp
mov
push
js
pop
nop
cs
loope
outsl
mov
iret
addb
cmp
vmwrite
into
jl
push
sbb
stos
cmpsb
outsl
popa
jl
sti
in
fs
leave
pop
dec
adc
lea
clc
mov
adc
jnp
or
imul
jg
hlt
outsb
popf
xchg
ret
test
fidivl
fs
loop
adc
sahf
aas
mov
fimull
fcmovb
inc
imul
inc
cmpsl
out
pushf
xor
adc
mov
mov
nop
push
inc
xchg
adc
or
push
inc
ljmp
aam
xchg
pop
fdiv
adc
pop
out
insb
fwait
cmp
mov
inc
xor
or
lret
shl
arpl
adc
jno
test
mov
scas
cmpsb
and
nop
mov
sub
lcall
sub
clc
fiaddl
xadd
mov
mov
xor
mov
jl
jo
mov
mov
sub
push
or
lret
sub
movups
mov
mov
sbb
jmp
rcr
adc
mov
xchg
filds
jns,pn
out
xor
incb
cwtl
push
clc
jo
dec
shll
nop
inc
adc
inc
xor
push
icebp
ror
shr
roll
lock
dec
cli
pushf
mov
or
or
lods
lods
addb
or
cmpsl
mov
shl
cli
adc
jp
add
pop
imul
ret
scas
arpl
inc
add
aas
or
test
pop
sbb
push
ret
stos
jmp
daa
sub
add
pop
inc
stc
mov
mov
jl
shll
jae
cltd
je
out
test
imul
sub
sub
jmp
sub
xor
ficomps
cmp
loope
pop
push
sti
movsl
lock
xor
stos
mov
pop
add
out
or
push
rcll
add
std
mov
lcall
incl
and
mov
hlt
mov
dec
push
call
pop
imul
out
popa
sbb
mov
outsb
dec
mov
cld
ror
fisttps
mov
dec
add
aam
adc
loopne
adc
mov
mov
sbb
incl
pusha
xor
rcl
jb
jno
pop
orl
push
or
enter
add
test
sbb
sub
aaa
aaa
je
mov
xchg
hlt
outsl
das
inc
push
cli
daa
push
adc
imul
lods
fiaddl
add
add
aam
movb
out
or
imul
vmovaps
adc
subl
ljmp
mov
int
aaa
push
add
lcall
daa
lahf
jno
xor
sub
mov
adc
push
int
js
pop
stos
faddl
jno
enter
cmpsb
jl
shrb
or
mov
push
mov
scas
jo
enter
nop
cli
je
inc
cmp
movsb
push
mov
cmp
imul
or
mov
dec
and
add
sub
pop
into
test
adc
adc
sbb
ljmp
cmc
mul
call
push
and
in
andl
dec
pushf
adc
push
xor
dec
fs
or
cwtl
adc
mov
pop
outsb
adc
sbb
xor
js
pop
push
bound
icebp
bound
xor
daa
adc
sub
inc
jb
mov
or
push
stos
test
mov
int
cld
test
out
insb
sbb
pop
sbb
mov
nop
in
shlb
add
push
sub
js
fwait
mov
jg
clc
inc
cmc
add
jg
fmul
fcmove
or
push
mov
in
pop
xchg
jb
scas
stos
fistps
mov
repz
push
aad
adcb
mov
mov
loope
sbb
jmp
ret
xchg
ret
scas
mov
mov
les
adc
sbbl
movsl
pop
in
mov
cmp
cli
cli
rolb
jmp
mov
mov
outsl
pop
movsb
dec
xchg
sbb
mov
shl
push
and
int3
push
cmc
jbe
mov
inc
pop
xor
inc
nop
mov
adc
icebp
mov
sar
mov
mov
push
jnp
outsb
inc
jle
mov
iret
out
inc
jb
sbb
add
mov
test
pushf
dec
mov
push
cmp
test
or
mov
add
lret
cli
adcb
call
inc
sbb
add
es
aad
lods
push
rcrb
negb
loope
inc
jno
call
add
pop
or
shrb
or
std
push
cmpsb
push
add
push
or
incl
jmp
in
aaa
sbb
test
test
cltd
pop
fisttpll
xor
inc
repnz
jno
sbb
push
cli
cmp
xchg
lods
imul
or
scas
add
std
lret
push
call
sbb
rolb
subb
rolb
mov
icebp
xchg
clc
into
or
pop
lcall
xor
outsb
clc
fcmovne
jnp
sub
ficoml
roll
shlb
add
lcall
or
ds
pop
rolb
dec
inc
lret
je
insl
nop
pop
push
cld
cmp
stos
sbb
movsb
jmp
inc
pusha
cltd
lea
mov
adc
dec
inc
inc
ds
imul
push
loope
faddp
or
jae
aas
sub
mov
xchg
push
xor
push
pusha
lcall
gs
lret
add
inc
sbb
orb
and
std
push
stos
int
fisubrs
stos
sub
jmp
dec
mov
dec
lock
aam
in
add
push
sub
mov
loopne
sbb
aas
ds
stos
jge
stos
test
fsubrs
push
dec
je
sub
xchg
jl
add
push
ret
rorb
push
mov
pop
mov
hlt
adc
test
loop
add
cltd
jno
jno
sbb
cmpb
outsb
loope
in
es
adc
lret
lods
clc
call
mov
xor
cmp
jbe
test
jbe
inc
cmp
push
out
adcb
pop
std
xchg
add
xor
push
clc
mov
and
xor
repnz
ljmp
jl
lahf
xor
je
add
mov
lcall
jmp
test
leave
add
repz
mov
adc
push
push
xor
adc
sub
ret
pop
mov
pop
sti
jecxz
movsl
adc
sahf
pop
scas
mov
std
ret
mov
and
clc
ja
mov
cltd
inc
scas
pop
inc
xchg
pop
push
cmp
xor
popf
cmp
push
mov
push
xchg
popa
mov
or
mov
dec
loop
ret
sbb
outsl
xor
mov
cltd
addl
lcall
idivb
aas
ret
cwtl
shll
or
mov
loope
fwait
and
sbb
adc
cs
out
dec
notl
outsb
xchg
push
test
pop
push
hlt
ret
xchg
add
shrb
nop
dec
movl
popf
daa
mov
mov
add
sub
outsb
lock
lock
jmp
loop,pn
dec
inc
test
leave
pop
fs
mov
fsubr
fistl
add
sbb
stc
cmpsb
dec
mov
pusha
mov
ljmp
sub
jae
fimull
add
loop
insb
mov
in
lods
push
cltd
dec
sbb
or
push
mov
mov
fcmovbe
inc
lods
xor
inc
fistps
cmpsb
shrl
cmp
movsl
lods
loop
adc
mov
ja
loop
stos
sub
and
cmp
mov
mov
jo
jmp
fdivrs
mov
fstps
inc
pop
or
js
js
mov
mov
stos
mov
mov
or
or
ret
daa
mov
pop
jbe
stos
inc
outsl
jnp
push
dec
mov
int
loope
dec
cmp
push
les
sbb
fcoms
xchg
sub
inc
int3
or
sub
clc
scas
daa
insb
xor
arpl
xchg
js
gs
sti
pop
fiadds
subl
mov
cwtl
push
sub
nop
lock
iret
mov
insb
jo
cmp
in
mov
and
lret
mov
dec
adc
lret
js
repz
pop
push
adc
shll
push
fstpt
aas
clc
mov
scas
pop
sti
jns
pop
in
xchg
push
xchg
mov
jmp
fsubl
sbb
adc
sarb
xchg
test
nop
insb
mov
adc
pop
fdivs
push
mov
sar
jae
push
daa
jno
pop
mov
or
loopne
icebp
mov
mov
mov
xor
popf
enter
aas
adc
sub
sub
je
mov
cmp
in
mov
mov
sbb
es
ficoms
sub
mov
or
imul
or
sub
sub
aaa
or
sti
jne
xchg
jb
mov
mov
mov
sbb
xchg
js
mulb
stos
add
sbb
mov
pop
adc
sub
enter
mov
jo
fs
xchg
testb
lods
incl
or
pop
dec
adc
js
mov
movzwl
xchg
jae
push
fs
add
or
movsb
xor
sub
mov
into
mov
pusha
imul
insl
test
aam
jno
jp
pop
fnstcw
dec
in
addr16
scas
cwtl
add
les
adc
sub
pop
add
test
and
addr16
and
sar
pushf
push
jge
mov
and
inc
mov
adc
push
cwtl
mov
push
adc
fwait
aam
xorb
xchg
lock
inc
loopne
shlb
idivb
jle
lcall
repnz
add
adc
std
pop
lock
subb
cmp
int
xlat
notb
bound
dec
js
mov
loope
or
fdivs
and
nopl
pop
push
jnp
push
xchg
push
jb
outsl
inc
outsl
add
lea
insl
mov
clc
or
in
mov
mov
xor
push
add
pusha
adc
push
and
fnstenv
push
clc
pop
push
clc
mov
lahf
loop
fwait
movsl
stos
xchg
mov
mov
mov
dec
ds
sub
std
insb
or
sub
add
mov
in
sti
aad
pop
lahf
jo
and
mov
inc
mov
add
jns
push
add
or
popf
imul
inc
and
or
push
daa
adc
sti
es
rcr
cmp
adc
ja
lock
adc
sbb
mov
jns
and
pop
cltd
cmp
into
cli
jmp
push
inc
or
sarb
adc
mov
push
mov
lods
jnp
push
mov
in
ret
xor
pop
cs
pop
push
inc
jo
cmpl
scas
loopne
popa
cmpsl
imul
pop
lods
pop
test
or
adc
and
sbb
lret
mov
pop
sub
inc
push
inc
mov
xchg
xor
lds
sarl
outsb
xor
clc
addb
dec
mov
and
daa
insb
mov
negb
rcrb
cli
lcall
or
sti
fimull
mov
ljmp
stc
xchg
lret
pop
fadds
arpl
sub
push
or
push
adc
imul
hlt
xor
loope
stos
or
mov
clc
je
int
adc
sbb
add
or
mov
cmp
mull
mov
cmpsb
pop
mov
xlat
call
sbb
xchg
sbb
sti
popa
mov
jl
sbb
cwtl
mov
inc
cld
dec
cmc
lcall
push
or
inc
push
jl
sbb
mov
pop
dec
push
loopne
das
sub
fstl
sbb
push
out
push
and
mov
xorl
aas
test
mov
pop
mov
xorl
cmpsb
adcb
pop
sbb
hlt
test
inc
adc
pusha
mov
xchg
loopne
insb
orl
sub
mov
imul
cmpl
wrmsr
sub
jns
fyl2xp1
cmp
sbb
shll
push
bound
jecxz
xchg
imul
push
xlat
jbe
mov
add
std
js
cmpsl
inc
push
sbb
sbb
sub
mov
inc
dec
out
popa
adc
adc
in
mov
ficompl
mov
cld
jo
add
pop
mov
mov
mov
sbb
pop
adc
mov
pop
push
popa
nop
jle
arpl
sub
out
mov
sub
pushf
dec
nop
sub
rclb
mov
mov
jno
dec
adc
jle
aad
add
leave
jge
stos
push
call
in
sbb
in
cmpsl
jb
sub
outsb
dec
push
cmp
jle
cmp
shr
rclb
xchg
dec
rcll
cmp
loope
lds
mov
fnsave
out
pop
test
lods
mov
or
pop
pop
add
xor
stc
sbb
or
and
rcrl
jl
push
inc
jbe
iret
jne
cmp
xchg
push
jmp
pop
cmp
out
mov
adc
sar
push
add
mov
xchg
xchg
or
nop
dec
adc
cmp
push
dec
cmp
loope
je
cmp
loopne
cmp
jne
xor
inc
dec
pop
stos
xor
ret
sbb
aas
pop
sub
imul
out
lret
ret
icebp
inc
sub
rorb
mov
or
jb
jp
mov
dec
aam
movsb
xchg
bound
iret
or
cmp
adc
arpl
mov
lock
out
mov
inc
pop
shl
cmc
jecxz
jle
push
add
arpl
push
imul
movsl
je
mov
inc
mov
jmp
in
rcll
dec
pushf
arpl
data16
loope
xchg
std
fs
inc
rorb
jle
adc
jge
adc
or
gs
mov
inc
jmp
aaa
inc
xchg
mov
fldt
pop
cmp
inc
std
pop
mov
xchg
int
ficoms
movsb
push
or
mov
mov
and
lods
sbbb
insl
pushf
sub
test
stos
xchg
idiv
cmp
mov
lahf
xchg
xor
add
out
add
movsb
inc
sahf
in
mov
mov
imul
mov
jns
shrb
aas
push
repnz
hlt
orl
es
jns
imul
nop
rep
pop
rcl
add
sbb
lahf
in
push
dec
push
arpl
ljmp
mov
push
mov
or
outsb
aad
das
mov
jne
test
xchg
outsb
inc
stos
xor
push
shrb
scas
pop
inc
inc
imul
mov
mov
xor
add
jne
fs
xorl
push
mov
jecxz
inc
dec
ss
lea
les
cmp
movsb
jecxz
xchg
sub
les
jecxz
popl
mov
and
cmp
rolb
xchg
mov
add
rcll
pop
mov
shll
mov
mov
pop
lods
adc
mov
rcll
xchg
pop
mov
int
adc
out
inc
mov
add
pop
adc
sbb
xchg
pop
sbb
push
jmp
mov
ret
movsb
sub
inc
insl
repnz
jp
ds
das
cmp
mov
movsl
out
aad
loope
cmp
pop
cmp
call
xchg
xchg
mov
in
scas
and
loop
pop
jmp
inc
aam
xchg
and
and
pusha
loopne
mov
dec
dec
mov
subl
pop
xor
inc
aaa
cmpsl
scas
cli
ret
jb
sbb
outsl
and
inc
pop
lcall
aam
pop
fdivr
fs
push
pop
inc
cmp
or
inc
jae
aad
dec
add
jbe
aad
xchg
loopne
mov
mov
std
repnz
push
adc
rcrb
sub
xor
sbb
mov
pop
or
lock
lret
les
outsb
sub
push
int3
inc
lcall
roll
jnp
add
mov
pushf
xor
dec
xchg
jbe
inc
sysenter
ss
adc
mov
push
push
arpl
clc
mov
jl
inc
scas
jp
or
mov
mov
push
clc
dec
mov
xchg
sbb
scas
outsl
pop
inc
fs
mov
xor
popf
popa
pop
inc
js
rcrl
cmp
pusha
loop
xchg
or
mov
add
mov
int
xchg
add
cvtpi2ps
push
dec
shl
cmp
and
dec
cmp
xchg
sbb
inc
jge
jo
pop
iret
aas
gs
orb
shlb
inc
dec
cmp
push
stc
cld
ja
ret
sbb
adc
sti
sub
push
adc
jbe
mov
adc
add
test
sub
fmull
and
shlb
xchg
adc
push
lret
js
inc
hlt
outsl
push
mov
pusha
cmp
jmp
sahf
inc
push
mov
cmp
mov
das
xchg
sbb
mov
sub
mov
int3
mov
mov
cli
sti
jbe
mov
pop
out
pusha
loope
adc
outsl
mov
mov
mov
aas
nop
popa
jo
popa
inc
dec
cmp
mov
ja
mov
cwtl
je
loope
adc
or
xchg
or
mov
and
movsb
pop
cmpsb
push
sub
ss
mov
push
mov
push
sbb
pop
into
icebp
jp
sbb
push
inc
repnz
pop
dec
and
paddsb
mov
jns
cmp
rdpmc
mov
mov
jns
sub
and
add
xchg
jns
xchg
sbb
cltd
mov
cli
es
xlat
lock
outsl
xchg
jle
test
inc
push
rcll
push
mov
add
repz
andb
sub
cmpl
sbb
jle
add
scas
movsb
jb
cmp
pop
xor
lea
lea
gs
pop
or
int3
roll
cld
fsubrl
pop
xchg
fstps
push
cli
fcomps
mov
or
cmp
jge
ja
xor
xorl
lret
mov
sbb
mov
or
adc
mov
cmpb
xor
js
xlat
ret
adc
icebp
fsub
inc
aam
out
mov
lahf
movsb
lret
mov
mov
push
add
in
mov
inc
xchg
push
fldenv
call
test
popf
adc
leave
rcrb
jg
mov
cmpsl
scas
push
mov
push
loopne
aad
xchg
ja
shl
sbb
sbb
mov
jl
adc
js
mov
fucomp
adc
mov
les
push
push
jbe
push
inc
jne
fcmovb
repnz
lea
cli
jmp
jge
inc
stos
xchg
cmp
xchg
add
repnz
add
xchg
cs
jb
mov
or
or
repz
jmp
das
call
lahf
es
icebp
jecxz
enter
lock
and
loop
inc
xchg
or
hlt
mov
sbb
sub
or
push
add
sbb
or
fildl
sbb
bnd
pop
push
inc
dec
imul
mov
js
nop
les
icebp
das
ja
enter
outsb
lret
insb
pop
push
xor
es
out
fsubs
dec
je
or
icebp
pop
js
sarl
int3
xor
dec
stos
sub
inc
lods
push
icebp
sbb
jae
ret
add
call
add
aam
lcall
out
cli
jmp
add
fmulp
or
repz
fnstsw
or
out
pop
arpl
stc
jo
seto
mov
jle
sbb
mov
sub
xchg
inc
movsb
jo
insb
pop
cmc
mov
cmp
in
das
adc
pop
icebp
daa
in
and
jno
inc
psubw
mov
inc
mov
push
adc
movsb
dec
add
fdivp
adcb
and
mov
cmp
push
sub
pushl
mov
fwait
dec
sub
aas
movsb
jne
xchg
xlat
sub
fs
test
out
push
pushf
adc
sbb
and
xor
in
mov
movsl
or
lock
pop
xor
or
sbb
cmp
icebp
mov
sbb
bound
stos
lcall
or
mov
adc
adc
rcrb
add
int
not
xchg
push
insb
outsl
pop
push
cmpsb
xchg
out
pop
inc
cmpsl
sub
ret
mov
pop
outsb
cs
mov
xor
cli
push
scas
and
cmp
or
push
jno
add
call
std
cmpsl
in
pusha
mov
push
loopne
push
in
jno
add
cmpb
subl
push
cmovo
subl
sbb
xchg
movsl
sub
lret
xor
jp
sbb
adc
pop
pop
fsubl
out
pop
in
imul
sub
repnz
sbb
push
insb
adcb
jmp
jl
xchg
mov
fcoml
stos
cmp
dec
inc
dec
movsl
or
jmp
mov
jg
inc
gs
jecxz
xchg
jg
rolb
movsb
adc
std
lods
cmp
cmc
jno
adc
inc
aas
hlt
je
push
in
pop
iret
aam
and
push
mov
sbb
pop
lods
test
xchg
and
insl
add
stos
lcall
mov
inc
leave
mov
mov
and
sub
push
add
mov
and
popa
cmp
aad
cmpsl
sti
cmp
mov
mov
fs
jne
mov
das
test
ds
test
mov
inc
das
adcb
in
hlt
stc
js
push
add
add
xor
negl
lods
cmpsl
xlat
pop
call
cli
rol
push
and
loope
test
lret
mov
inc
ret
cmpsb
out
mov
xchg
testb
ljmp
adcb
push
mov
ret
in
pushl
hlt
clc
cmpsl
adc
outsb
add
out
dec
push
add
out
mov
push
pop
outsb
push
cwtl
jp
imul
or
jecxz
add
sbb
fiaddl
fs
or
mov
cmp
adc
jmp
aam
cmpsb
pop
or
mov
sbb
insl
xchg
dec
aaa
sub
outsb
stos
das
adc
pop
jmp
inc
movsb
xchg
lods
dec
lock
hlt
xchg
outsb
xor
jns
stos
repz
xchg
mov
pushf
pop
dec
std
test
inc
lret
mov
and
inc
jae
mov
jb
push
mov
xchg
ret
and
or
cmp
add
js
lds
adc
lds
push
clc
test
sbb
pop
adc
lahf
pop
ret
jle
int3
jns
jle
inc
ret
loop
rcrl
adc
mov
xchg
pop
xchg
cwtl
push
sbb
xchg
add
xlat
mov
push
gs
stc
pushf
or
mov
mov
dec
or
outsb
cmp
cld
add
mov
lahf
out
movsl
call
cwtl
outsb
mov
dec
out
sub
jge
mov
and
fwait
shlb
jmp
adc
inc
adc
add
pop
movsl
and
push
or
adc
sbb
adcl
shrl
mov
addl
sbb
rol
xchg
in
nop
hlt
das
lea
sbb
jnp
test
or
jp
mov
inc
ja
mov
mov
into
xlat
inc
mov
push
outsb
hlt
sub
data16
pop
dec
jo
mov
out
addb
icebp
lods
jecxz
dec
dec
xchg
or
and
sbb
pop
push
pop
and
add
lock
mov
mov
pop
mov
test
jne
adc
cmp
jo
mov
in
push
mov
mov
adc
and
stos
mov
lods
cli
dec
pusha
ss
sbb
incb
scas
xlat
clc
adc
js
leave
mov
loope
pop
inc
jle
out
mov
inc
adcl
imul
and
xchg
mov
addr16
sbb
ret
or
ljmp
push
test
jge,pt
clc
pop
xor
sbb
clc
add
cmp
add
mov
movsb
orb
orb
ret
sub
pop
clc
sahf
and
lret
push
cwtl
adc
mov
cld
mov
ret
cltd
ret
sbb
fldenv
cld
outsl
sbb
test
cmpsb
arpl
jg
push
loop
xor
mov
mov
or
lods
mov
xor
cwtl
pop
lock
jmp
scas
out
adc
and
lds
sub
lds
mov
in
ja
cmp
shrb
es
fsubrs
inc
shlb
add
dec
push
xchg
pop
out
incb
xchg
push
mov
inc
cltd
mov
inc
xlat
or
cli
je
mov
ror
nop
mov
ret
dec
mov
daa
or
cmpsb
inc
add
js
ret
cmp
hlt
subl
test
mov
les
and
push
movsl
cmpsb
jo
test
popa
xor
pop
std
pop
add
movsl
outsl
adc
test
pushf
mov
push
push
add
pop
sbb
adcl
and
mov
movsb
mov
dec
dec
dec
sbb
test
mov
orb
jne
movsb
mov
rorl
cmp
mov
cmpsb
cmp
cli
popa
jg
sub
mov
add
dec
mov
mov
shlb
imul
cmp
xor
xchg
shlb
or
clc
adc
fildl
stos
enter
pop
adc
inc
aaa
xorl
call
mov
cmp
jo
adc
and
pop
test
stos
push
lret
js
sub
incb
add
insb
sbb
jo
mov
sti
sub
push
divl
inc
dec
xchg
add
fisttpl
inc
push
fs
pop
data16
lods
push
or
push
pop
popf
xor
js
sub
add
test
out
jae
pop
insb
inc
jl
lock
adc
push
bound
add
lods
test
hlt
jae
mov
test
mov
xor
int3
or
adc
sub
or
add
mov
bound
test
dec
clc
push
pop
cmp
js
std
lods
shl
flds
into
lods
mov
fbld
stc
pop
call
pop
push
rol
xor
jl
gs
call
or
jge
ret
jb
xor
jno
or
outsl
adc
dec
mov
adc
sbb
xlat
pop
mov
xor
inc
imul
out
lret
push
ss
fstpl
shrd
xor
pop
int3
dec
push
mov
push
mov
fisubl
inc
mov
scas
cmpsb
out
push
andb
ljmp
push
andb
inc
pop
xchg
jle
test
les
mov
mov
pusha
sbb
inc
push
lods
out
mov
push
mov
insb
ljmp
sub
loopne
push
je
icebp
jle
jns
loope
lret
mov
lods
sbb
divb
sarb
sbb
test
decb
inc
cmpsl
jp
cmp
pop
pushf
jo
js
or
lea
lahf
decl
popl
or
aaa
in
bound
mov
and
mov
popa
sbbb
jcxz
gs
xchg
andl
dec
aam
push
fcompl
popa
mov
add
aas
jl
mov
imul
cmp
dec
mov
jbe
push
mov
add
adc
adc
fs
in
jbe
sub
adc
pop
pop
push
negl
lods
scas
ds
adc
inc
pop
inc
sub
js
pop
loop,pt
pop
mov
nop
movsb
or
mov
and
push
xchg
ret
popf
notl
cmp
cltd
call
clc
mov
loope
outsb
cwtl
xchg
mov
or
movsl
push
pop
loope
lock
xchg
inc
ljmp
pop
or
icebp
loope
mov
pushl
jge
pop
cmp
and
ljmp
or
xor
or
das
push
out
rolb
jmp
iret
push
ja
repz
fs
pand
add
repnz
sahf
inc
lahf
jnp
clc
pop
pop
test
fldl
dec
add
or
jge
pop
adc
xchg
ss
test
jecxz
test
xor
inc
daa
adc
iret
sbb
mov
pop
ljmp
dec
pop
cmp
adc
cld
jne
sbb
mov
xchg
adc
or
pop
mov
jno
test
push
adc
out
fidivrl
aaa
cli
int
sbb
clc
pop
imul
mov
test
push
mov
ljmp
push
jne
and
mov
lret
loopne
inc
test
fxtract
push
test
or
out
icebp
test
cmp
pop
stc
cmp
or
iret
leave
or
aaa
add
je
and
hlt
lock
loope
aam
sbb
movsb
jmp
cli
scas
cli
fsubrl
cltd
add
imul
cs
add
movsb
pop
lock
mov
mov
sbb
lcall
ret
jb
pop
popa
sub
adc
pushf
push
mov
mov
mov
in
inc
orb
mov
add
and
clc
or
mov
movsb
pop
cmp
pop
icebp
add
adc
test
idivb
andps
loopne
sub
push
push
lock
dec
pop
lret
jl
ljmp
and
shlb
cld
cld
push
lods
push
fnstcw
sbb
cmp
ljmp
ret
push
lock
loop
jo
jno
aas
jb
cmp
fisttpll
mov
pop
je
adcb
push
ljmp
imul
fwait
into
jmp
ss
mov
push
xchg
xor
rol
inc
negb
or
cmpsl
xchg
lock
ret
jl
rclb
jbe
jbe
outsb
clc
push
mov
xor
and
mov
cli
cwtl
or
mov
sar
cmp
add
call
aas
jo
dec
push
cwtl
cmp
cmp
push
roll
push
ljmp
push
xchg
mov
push
jle
jbe
dec
mov
adc
test
add
jg
popa
dec
mov
sub
add
push
test
adc
xorb
andb
subl
pusha
sarl
jmp
lods
rorl
add
mov
or
scas
xor
imull
mov
sub
out
mov
sub
in
rcrl
ljmp
jecxz
pop
push
jmp
lock
mov
adc
loopne
dec
cmp
and
pop
mov
cwtl
aaa
shll
jp
mov
mov
inc
push
push
mov
mov
cmp
das
hlt
add
hlt
fidivl
scas
scas
mov
inc
aam
aas
and
add
sbb
jle
jge
arpl
xchg
pop
or
das
cmp
mov
sahf
and
xor
jge
cltd
mov
ret
push
pop
xchg
xchg
xchg
push
sti
fstl
sub
jecxz
loop
aam
mov
les
mov
add
cwtl
fs
mov
sbb
push
pop
fmull
xchg
cli
inc
inc
xchg
data16
stos
add
rol
cmp
inc
cmp
push
in
fnstcw
jp
xor
pop
arpl
stos
test
push
rcll
jmp
pop
fmull
roll
jmp
dec
push
dec
xor
dec
adc
jle
bound
es
sbb
mov
insl
inc
sbb
ljmp
insl
xor
xor
scas
cmp
call
cmp
stos
push
inc
add
data16
rorl
aam
adc
les
sti
test
mov
bound
add
loopne
inc
jns
imul
scas
jmp
add
imul
aam
scas
xchg
cs
ljmp
orl
add
and
fistpl
or
pop
pop
pop
sub
pop
mov
fwait
movsl
cwtl
add
xlat
cwtl
dec
adc
ja
cli
xchg
loope
sbb
mov
je
cmp
test
fmuls
dec
jb
inc
fcmovb
mov
loopne
test
xor
inc
shl
inc
out
lret
cmpsb
mov
call
imul
inc
mov
lea
movsl
clc
mov
push
add
scas
dec
sbb
inc
daa
or
mov
inc
mov
push
xacquire
adc
mov
cmpsb
push
subb
orb
dec
cmc
mov
add
sbb
mov
dec
add
ret
mov
pop
test
mov
adc
jmp
imul
insl
jl
jbe
jo
xchg
inc
frstor
mov
arpl
into
stos
icebp
or
subl
sub
jle
aam
xor
adc
or
loopne
push
lcall
xor
or
ss
fwait
test
cmc
pop
aam
pop
mov
dec
jns
pop
in
test
daa
or
inc
and
pop
addl
add
das
lea
pop
or
int3
test
test
test
outsl
dec
mov
add
inc
es
pop
mov
pop
ss
or
frstor
mov
jge
outsb
imul
notb
daa
subb
add
lahf
mov
mov
push
and
cmpsb
addr16
sub
popa
sub
ja
jle
imul
lcall
icebp
push
hlt
or
sub
adcl
ret
mov
dec
fstp
sbb
pop
or
loope
shl
sbb
outsl
sub
arpl
ffree
and
xchg
inc
sub
push
rcrl
cmpl
ret
mov
in
cmc
sub
push
or
lods
call
jae
test
mov
xor
repnz
ret
add
aam
outsl
push
mov
xchg
jo
push
ret
xor
sbb
dec
lods
mov
xor
mov
add
cmpsl
rolb
gs
dec
outsb
out
push
sbb
dec
cmp
or
mov
dec
addr16
xchg
addl
xor
sbb
lret
pushf
jl
bound
mov
shrl
pop
or
mov
ja
pop
dec
arpl
shlb
lret
sbb
push
jle
out
xchg
outsb
inc
in
int3
pop
cmp
push
das
lret
inc
sub
neg
loope
push
stc
in
adc
out
cli
stc
popl
or
add
and
adc
xor
mov
inc
dec
fs
cmc
or
test
sub
incb
loope
pop
mov
jmp
pop
push
pop
push
or
loope
out
in
aam
cmp
sahf
push
sbbl
pop
inc
pop
cli
in
lret
movsl
stc
test
adc
sub
dec
out
test
repz
cs
adc
mov
cld
add
test
dec
xor
les
js
ss
jno
xor
sub
and
xchg
icebp
mov
stos
addr16
fs
loopne
pop
fiadds
add
inc
adc
inc
xor
fcoml
xchg
pop
dec
shll
popf
inc
and
les
mov
mov
fsubs
and
ret
xchg
ret
add
mov
pop
ret
shrl
popa
add
aas
jne
inc
js
addr16
adc
pop
rolb
or
mov
push
mov
push
inc
pusha
sub
adc
arpl
ds
adc
jo
icebp
lret
mov
pop
std
add
addr16
ss
mov
popf
push
inc
lcall
push
push
insb
mov
xchg
xor
mov
ret
dec
pop
xor
enter
adc
inc
push
xor
scas
lea
dec
pusha
add
ret
mov
loope
fldt
inc
xchg
out
dec
adc
loope
push
nop
jmp
adc
scas
jno
adc
push
mov
jmp
ret
add
nop
icebp
cmc
adcb
mov
sahf
mov
jne
in
out
adc
sub
sub
jo
bound
arpl
dec
add
xchg
dec
mov
in
xchg
inc
sbb
xchg
or
add
cmp
ds
subb
inc
push
shlb
je
mov
push
inc
shlb
push
popf
cs
imul
add
adc
or
gs
int
stos
int3
jo
and
push
jecxz
add
ja
pop
ljmp
in
add
cmovs
add
fnstsw
xchg
test
sti
and
inc
in
mov
cmpsb
ret
xor
dec
lea
xchg
sub
and
test
vphaddubd
out
test
movsl
add
xchg
ja
lahf
sub
nop
push
sub
inc
sub
push
push
pop
lea
add
test
push
mov
enter
setno
push
push
mov
and
mov
aad
cltd
test
inc
push
test
dec
jbe
stos
add
fstp
push
mov
stos
out
js
lock
test
ss
std
es
push
jle
or
das
and
scas
lods
adc
xchg
clc
push
sti
adc
sbb
cs
or
jnp
xchg
or
insl
add
or
lods
ret
xor
pop
xor
je
mov
in
and
insl
sbb
popl
daa
aas
pop
and
add
xor
and
pmaxsw
add
mov
aad
neg
cmpsl
cltd
call
enter
jo
outsb
dec
add
adcl
js
add
pop
stos
adc
inc
out
stos
arpl
into
inc
mov
and
cmpsb
sub
jnp
ss
sub
push
test
mov
add
mov
jp
mov
pop
ffreep
dec
push
mov
pushf
scas
das
cltd
fdivr
add
aam
cmp
dec
movsl
frstor
mov
aad
lock
xor
rclb
sti
push
popa
das
fcoms
push
push
dec
mov
clc
push
das
sbb
fwait
cwtl
fs
mov
fwait
hlt
sbb
test
lock
das
popf
xor
lea
lea
inc
adc
mov
ja
sub
cmp
in
xor
sbb
int3
mov
mov
push
andb
imul
les
ja
cmpb
pop
mov
mov
cmc
adc
lock
inc
sbb
mov
ja
mov
add
jno
mov
mov
mov
jle
lret
sub
jle
test
shrl
clc
jecxz
sbb
sub
dec
sbb
dec
mov
cmp
stos
sub
ss
jne
shlb
mov
xchg
cmp
call
jl
shll
adc
and
cmp
pop
rorl
sbb
fsubl
lahf
pop
aad
mov
cld
lret
push
mov
adc
or
adcl
adc
sbb
xchg
jg
and
je
ror
stos
mov
int3
push
push
test
bswap
fistps
mov
push
mov
push
pop
cmc
ret
or
mov
loopne
and
outsl
cmp
lock
push
pop
fnstcw
pop
fdivrs
cmp
cltd
sbb
fnstcw
or
fst
inc
xchg
lods
rolb
call
xor
jnp
mov
sbb
xor
pop
addb
mov
cmp
adc
fiadds
pushl
pop
jno
imul
sub
sbb
movsb
test
jle
sub
insb
jle
pushf
add
adc
and
adcb
mov
in
int3
add
pop
and
sub
test
fmuls
jl
mov
adc
cmp
lcall
dec
repnz
inc
inc
push
mov
mov
arpl
jmp
push
cmc
or
lock
mov
sub
dec
ss
xchg
rcr
mov
sub
xchg
scas
jp
ds
mov
push
xor
lahf
sbb
lcall
jecxz
sbb
icebp
pop
xchg
ficoml
call
xor
sbb
xchg
lcall
les
dec
mov
push
lock
sbb
call
inc
xor
rorb
faddp
outsl
roll
jne
nop
loope
cli
popf
inc
or
or
int
out
pop
js
sahf
ret
cli
jmp
movsb
loope
inc
push
jle
mov
bswap
and
sub
push
push
out
add
out
bound
push
fs
insb
push
push
addl
popa
ficoms
loope
push
fcoms
pusha
outsl
lock
and
add
ret
xchg
gs
mov
test
jle
addr16
loop
addr16
inc
stos
fnstcw
add
data16
mov
sbb
movsb
stc
sbb
lods
cmp
pop
clc
fs
fxch
jne
mov
scas
popa
loopne
call
cwtl
sub
out
inc
arpl
jo
lcall
sbb
inc
add
mov
or
sbb
insb
aas
push
adc
jle
mov
inc
pop
fcoml
dec
je
lods
xchg
mov
xor
test
inc
mov
cld
repnz
mov
sbb
lock
fistpll
inc
sub
adc
in
inc
movsl
popa
pop
dec
mov
pop
mov
jle
pusha
or
inc
mov
fists
cmpsl
jnp
push
jle
push
scas
push
mov
shl
nop
inc
dec
or
sbb
stos
mov
adc
pushl
push
xor
lds
pop
and
setp
pop
push
les
fidivs
pop
mov
xor
push
xor
push
adc
sbbb
mov
ret
pop
add
js
clc
mov
push
ret
lea
xor
jae
cs
pop
xchg
push
sub
loop
cmp
fsubrs
push
cmc
sub
mov
dec
outsb
lods
and
cmp
ret
sahf
ret
inc
fld
je
or
mov
mov
add
dec
sbb
je
or
xchg
into
add
inc
cmp
hlt
daa
sub
cmp
adc
mov
scas
xor
icebp
or
push
sbb
fiaddl
inc
mov
mov
or
mov
rcll
outsb
aad
cmpsb
and
pusha
cmpsl
dec
testb
inc
adc
xchg
mov
scas
test
sub
xor
loopne
inc
add
pop
cmpsl
add
pop
mov
rclb
je
dec
sub
push
add
mov
and
mov
stos
sbb
bound
nop
clc
imul
mov
push
aad
cmp
loop
push
mov
cmpl
sub
dec
dec
rorl
mov
in
ja
call
pop
ljmp
push
jp
movsl
mov
pop
insb
adc
and
mov
in
sbb
mov
hlt
lret
aaa
or
rcl
mov
aam
xor
sarl
paddsb
adc
or
js
cmp
cmp
je
mov
clc
dec
mov
adc
mov
jge
inc
xor
rcrl
lret
mov
subb
or
inc
push
jbe
jl
stos
fmuls
adcb
xchg
mov
or
mov
mov
push
outsl
packssdw
mov
shlb
cmp
xor
adc
and
inc
adc
hlt
cmp
cmpl
mov
stos
icebp
sbb
fdivrl
insb
ret
mov
lahf
sbb
xor
sbb
and
fidivl
stc
inc
cld
lea
cmp
stos
cmp
sub
dec
jmp
ljmp
adc
imul
jmp
push
mov
add
repnz
inc
out
jb
mov
mov
es
out
lcall
jb
sub
in
push
mov
add
xorb
rorl
push
aad
push
fistpll
bound
data16
jno
inc
shll
mov
jg
adc
mov
test
jno
lcall
lock
jmp
push
mov
cld
cmpsl
aam
adc
push
push
xchg
inc
in
pusha
pop
lret
dec
and
roll
mov
ss
test
iret
repz
cld
test
out
mov
push
int
imul
stos
mov
sbb
jmp
cmp
jl
icebp
pop
pop
jb
nop
sarl
rclb
imul
adc
and
testb
call
lret
xchg
or
push
loop
or
jnp
pop
lock
or
sbb
fidivs
xor
or
test
imul
fs
add
adc
aaa
or
jle
jbe
mov
xchg
xchg
jne
sub
ljmp
push
pop
scas
dec
inc
mov
xchg
lods
js
repz
pushf
jnp
lret
push
wbinvd
aam
cmp
leave
add
mov
clc
repnz
lcall
mov
sub
mov
sbb
and
push
imul
sahf
and
lds
pushf
cmpb
mov
adc
pushf
push
sub
cmp
inc
sbb
test
xchg
push
push
xor
inc
ds
rol
lcall
sub
cmp
sub
dec
aas
adc
test
das
data16
xchg
ljmp
je
fdivrp
pop
adc
insb
leave
mov
inc
out
add
dec
dec
dec
lds
clc
fwait
lock
aas
jp
es
or
mov
int3
mov
ret
lods
push
int3
out
push
jl
dec
pop
scas
les
push
jo
sbb
or
adc
push
loopne
loopne
inc
pop
push
xor
adc
rol
shlb
sar
inc
push
add
dec
jmp
stos
jecxz
rclb
pop
sarl
hlt
insb
gs
jns
mov
daa
and
cmp
fcoml
scas
inc
pusha
xor
push
fdivs
and
clc
add
add
ljmp
cmc
adc
push
cmp
mov
in
test
subl
or
rcrl
mov
ffreep
js
out
clc
adc
xchg
rclb
and
mov
adcb
adc
in
fimuls
dec
add
pop
jl
xchg
mov
nop
sbb
sbb
aam
rcr
jge
mov
xchg
fs
or
orl
lahf
inc
push
cmpsb
push
add
inc
std
outsl
inc
stos
cli
cmp
into
adc
cli
scas
mov
add
lahf
sbb
fsubs
sahf
or
adc
xor
into
mov
fadds
inc
aad
sahf
cmpb
sub
pop
pop
fnstsw
inc
incl
lock
push
mov
ljmp
pop
cmp
pop
test
push
int3
ss
stos
mov
mov
mov
fwait
jne
mov
lods
mov
pop
sbb
testb
pop
jge
sub
loope
cwtl
loope
jae
lret
js
cvttps2pi
mov
fmuls
insl
lds
cs
cld
or
in
xchg
jecxz
pop
xchg
dec
clc
or
idivl
incl
push
jb
inc
data16
inc
mov
push
mov
sarb
lcall
mov
or
inc
loop
mov
fbld
icebp
xor
movsl
pop
jle
scas
inc
subb
sub
pop
addb
or
inc
repnz
push
imul
xchg
js
insl
dec
jno
mov
sbb
stos
push
sbb
call
and
gs
adc
iret
cmp
loope
xorb
jle
dec
pop
add
int
je
sub
call
inc
scas
in
pop
mov
inc
cmp
mov
in
cmp
adc
add
sub
jae
ljmp
or
sub
ljmp
sbb
push
mov
mov
cmovo
pop
push
inc
jl
inc
addr16
jbe
dec
aaa
js
clc
fdivr
sbb
push
sub
xor
xchg
sbb
jle
idiv
sbb
pop
pop
es
fdivl
shlb
xchg
cld
push
xor
ss
fisubs
sahf
scas
dec
ljmp
sbb
sub
or
nop
decb
xlat
xchg
push
push
add
lods
clc
andl
push
xchg
fiadds
or
sbb
addl
je
jge
in
mov
mov
fisubl
push
ja
inc
hlt
aam
pop
leave
jbe
adc
add
and
pop
nop
add
jo
cmc
dec
popf
jns
ljmp
xchg
sub
shlb
repnz
add
das
pop
mov
into
mov
adc
push
inc
or
or
adc
int3
pop
push
addr16
es
push
or
jle
mov
or
sbb
mov
inc
sbb
es
in
push
mov
dec
cwtl
mov
mov
mov
jge
loop
xchg
stos
add
xor
out
sbb
mov
jle
stc
inc
or
push
loope
jo
call
xorl
xchg
jecxz
addl
pushf
movsb
and
add
xor
jg
rcr
popf
sub
outsb
mov
leave
je
inc
hlt
mov
add
not
push
out
jl
and
mov
jbe
sub
cmp
ret
jbe
pop
idivl
andl
sub
cmpsl
xchg
fidivs
dec
jnp
adc
add
insb
cmpsb
push
fwait
mov
cmp
push
out
loope
or
les
enter
sub
and
js
sbb
clc
rol
pop
inc
das
shlb
mov
cmpsb
divl
jg
lock
fisttpl
icebp
jbe
ror
xor
cmp
or
and
int
sbb
mov
aam
adc
push
cmp
lcall
cmpl
pop
jge
or
lcall
mov
pop
call
jno
mov
fs
or
inc
inc
mov
mov
mov
or
pop
icebp
movsb
sub
jbe
add
cmpsl
mov
pop
push
rclb
shrb
add
js
pusha
dec
mov
arpl
mov
xchg
mov
in
adc
rcr
sub
cld
js
pop
cwtl
jmp
mov
addl
adc
fmull
es
ret
lret
aad
inc
mov
fdivl
dec
cwtl
nop
lcall
dec
cmpsl
inc
mov
cwtl
pop
stos
sbb
mov
stos
jle
dec
jg
adc
inc
xchg
inc
adc
sub
mov
lret
xor
mov
dec
lods
movb
movsb
push
xor
loopne
add
shlb
inc
and
movsb
stos
inc
jno
mov
cmp
ss
lahf
jb
lret
or
xchg
leave
subl
test
enter
sub
xor
imul
fldt
or
mov
xor
ljmp
dec
dec
fcmovnbe
push
xchg
clc
cmp
or
xor
xchg
js
test
jp
mov
int
loopne
popa
mov
xor
push
mov
data16
push
lods
add
prefetchwt1
stos
add
imul
mov
sbb
loope
xor
clc
inc
adc
aad
scas
xor
cmp
std
mov
addb
add
addr16
push
movsb
lods
pop
push
insb
or
mov
or
or
fstpt
fstl
pop
mov
pmaddwd
pop
push
dec
push
cld
or
addr16
xchg
cli
call
jl
in
test
aas
add
dec
jle
sub
sahf
pusha
jae
leave
dec
sbbb
outsl
push
or
push
adc
aam
mov
std
add
sub
adc
dec
cmp
mov
jmp
push
lcall
lds
or
push
mov
push
and
push
outsl
loope
aam
xor
jne
test
cmpsl
xor
sub
xlat
sub
rolb
or
jo
xor
les
rcll
mov
push
scas
xor
xor
test
or
js
or
inc
fs
push
inc
jmp
fs
xchg
xor
mov
fwait
sbb
sbb
in
mov
out
or
insl
dec
test
int
adc
rorb
pop
fnsave
cwtl
sarb
loop
xor
sub
cmpsl
pop
fstps
cvtdq2ps
jmp
aas
cmpsb
add
cli
dec
or
push
sahf
clc
dec
or
inc
xchg
sub
and
add
lods
mov
inc
fisttpll
mov
cmc
add
cmp
inc
imull
leave
push
inc
sbb
repnz
cmp
ljmp
sub
das
jb
aam
sbb
and
movsb
arpl
mov
lock
adc
popf
fsub
cmpsl
testb
sub
xorb
inc
hlt
adc
push
adc
and
inc
fldcw
movsl
addb
test
sbb
bound
addr16
fs
ss
ljmp
and
imul
push
dec
icebp
int3
lods
mov
pusha
push
dec
rcll
sbb
pushf
sub
test
cld
fldenv
dec
hlt
push
mov
call
fildll
data16
mov
mov
orl
js
lea
das
push
inc
sbb
addb
lret
icebp
pushl
push
or
rcrl
add
pop
dec
in
cwtl
inc
iret
push
sbb
scas
cmc
mov
jmp
add
mov
fsubp
imul
or
add
adc
clc
xor
mov
and
lahf
or
pop
loopne
mov
inc
push
or
inc
sarb
sbb
push
adcb
cmpl
lea
xor
fildl
add
in
mov
pop
push
jo
inc
dec
std
or
test
jg
sub
outsb
inc
inc
ljmp
lahf
lock
lahf
push
xchg
repnz
sbb
movsb
and
enter
mov
sub
hlt
and
fsub
mov
iret
je
jge
lods
pop
in
dec
cmp
icebp
std
add
call
or
gs
fwait
push
lock
rcrl
inc
ret
fadds
inc
daa
mov
cmp
rcrb
jbe
jmp
sbb
loopne
push
jno
xchg
std
mov
jg
std
lds
push
push
sbb
sbb
add
push
jmp
cmp
cmp
sbb
out
ja
adc
fiadds
call
xchg
dec
or
xchg
cmp
xchg
or
bound
rcl
adc
cmp
cmp
incl
rcll
pusha
mov
sbb
xorb
movsb
enter
lods
or
mov
orl
xchg
imul
ds
clc
stc
inc
push
pop
insl
push
pop
mov
cmp
orb
xchg
or
inc
sar
jo
pop
fwait
sbbb
pop
sahf
adc
cmp
icebp
das
mov
lea
jbe
and
dec
and
jmp
lret
stos
pop
mov
test
mov
pop
and
aas
xchg
cs
notl
adc
inc
ja
daa
or
xchg
and
adc
mov
and
mov
psrad
stos
fiaddl
inc
mov
pop
out
scas
push
pop
mov
cmp
push
and
jmp
filds
dec
int
dec
push
jmp
pop
fimull
mov
jg
inc
test
dec
add
cmp
test
rorb
adc
out
pop
push
fistl
push
mov
inc
std
lahf
sbb
xchg
scas
ds
imul
bound
jg
mov
add
jp
mov
test
es
cmc
sbb
cmpsl
movb
xchg
xchg
inc
jne
fwait
or
jbe
adcb
arpl
mov
and
repz
scas
pop
fbstp
pop
mov
sub
cwtl
dec
lcall
inc
inc
clc
cmp
jnp
inc
xor
test
push
dec
dec
push
out
out
jno
pop
and
inc
push
pop
jo
dec
lret
inc
clc
sbb
lret
ljmp
push
adc
out
rcll
fwait
and
stos
pop
clc
lcall
out
push
sub
fs
mov
sub
push
inc
andb
mov
and
std
xchg
push
push
int
push
adc
pop
or
push
call
popa
icebp
jmp
add
es
inc
sub
imul
fcomp
dec
pushf
mov
dec
cmp
cwtl
xlat
adc
test
subl
out
xchg
in
or
pop
inc
js
and
loope
rorb
test
adcl
shlb
or
loop
sti
mov
fildl
mov
cmp
jno
es
sbb
cmp
push
lret
pusha
and
add
inc
push
inc
es
cmp
jl
pop
xchg
fstpl
fildll
push
leave
and
ret
or
insb
cli
xor
adc
lock
mov
cltd
subl
push
cs
mov
jl
fists
sbb
cwtl
xchg
mov
mov
xchg
adc
adc
sub
fwait
mov
fadds
jle
and
jge
shrb
adc
aas
fs
xor
add
xchg
push
cmc
pop
and
out
cwtl
add
pusha
mov
mov
inc
andb
lahf
mov
sbbb
pop
out
scas
xor
jo
dec
notl
into
test
pop
xor
pop
pop
or
ror
stos
jmp
xor
jns
mov
orl
mov
fnstenv
adc
loope
add
jns
imul
add
mov
mov
loope
add
xchg
out
xorl
sbb
pop
cld
orb
add
lods
loop
nop
xor
lods
push
and
in
mov
fcomip
add
dec
and
mov
lret
hlt
sub
addr16
xchg
jl
mov
xor
xlat
jns
clc
test
mov
xor
pop
jmp
xchg
inc
pusha
imul
sbb
jmp
popf
jp
jbe
and
outsb
or
test
sub
jp
fiadds
shl
scas
jb
push
bound
in
push
jl
js
adc
pushf
fs
jl
or
mov
lret
clc
xor
pop
bound
dec
in
mov
and
clc
jge
nop
mov
test
or
outsb
cli
dec
add
int3
hlt
test
mov
arpl
mov
mov
cmp
fbstp
jb
dec
cmp
faddl
adc
data16
cmpsb
ds
imul
fwait
dec
cmpsb
movsb
leave
scas
nop
cmpsl
or
adc
and
aam
inc
xlat
jno
jbe
sbb
in
pop
pushf
mov
ss
sbb
enter
xor
push
mov
leave
pop
cltd
cli
fstpl
inc
xor
xchg
jle
add
rolb
ss
push
lea
clc
sbb
cmp
add
mov
and
push
inc
push
pop
outsb
xchg
cs
mov
push
sbb
pop
mov
mov
stc
add
loopne
icebp
ljmp
lock
mov
jae
jp
dec
pop
adc
mov
adc
pop
decb
and
data16
and
cmp
pusha
dec
mov
or
loop
test
push
stc
dec
jp
push
inc
lods
lret
addb
outsb
pop
rolb
or
loop
enter
add
loope
push
stos
inc
cli
or
pop
add
cmc
or
leave
or
sarb
out
imull
jg
xchg
jmp
adc
sub
ss
cs
cmp
dec
push
fnstenv
hlt
sbb
dec
ljmp
in
mov
jne
inc
xor
cmp
mov
scas
and
gs
leave
pop
pop
sbb
mov
sub
das
outsl
ja
cmp
fndisi(8087
jle
js
repz
add
cmc
sub
loop
outsb
rcll
and
sbb
jg
jns
test
push
jno
ficoml
cltd
icebp
hlt
xor
call
ljmp
clc
popa
jno
mov
icebp
mov
js
or
sahf
sahf
in
mov
xchg
mov
mov
outsb
and
cmp
add
pusha
out
and
jecxz
mov
aaa
jle
xchg
fmul
daa
mov
aam
mov
mov
xchg
decl
mov
inc
mov
ds
mov
sti
add
js
jg
inc
adcb
push
aas
fs
sub
fwait
stos
aas
sbb
or
dec
pop
xchg
sbb
jno
int
mov
and
jns
mov
je
jne
fcomi
into
jbe
popf
dec
fdivl
dec
add
mov
sub
xor
mov
scas
mov
xchg
cld
mov
xchg
dec
sbb
xchg
sub
inc
out
and
mov
pushf
test
ja
xchg
test
jecxz
loopne
xor
xor
jno
pop
movsl
dec
jae
scas
lcall
lcall
jbe
push
cmp
ret
add
movsb
loopne
ficomps
lods
lret
lds
loopne
mov
call
dec
jbe
inc
pushf
movsb
pop
and
in
fbld
mov
andb
cmp
add
mov
je
popa
ficoml
lock
dec
push
repnz
xchg
pop
in
jg
fdivs
and
push
sbb
or
mov
or
or
and
xor
sub
fs
out
icebp
mov
mov
add
sbb
out
sbb
les
lea
jo
jle
leave
dec
arpl
xor
mov
mov
je
movsb
cmp
cwtl
test
add
inc
cmp
cmp
add
adc
sarb
or
sbb
or
cmpb
std
fsubrl
loope
rcr
sti
test
mov
dec
fsub
arpl
jno
notb
mov
dec
or
dec
jge
int
into
mov
lock
sbbb
jp
pop
int3
adc
jo
push
fidivl
je
mov
lods
mov
pop
cs
arpl
ret
bound
ja
cli
jo
xorl
int
add
push
pop
inc
jns
je
roll
add
and
iret
lods
js
lret
cwtl
push
jle
lds
cs
in
nop
subl
jg
hlt
jle
xor
inc
inc
mov
icebp
fs
mov
jp
push
int3
cmp
insb
xor
xor
cmp
add
popa
xorl
into
rorl
add
inc
les
push
movsb
pushl
call
mov
stos
loop
cmp
cwtl
fiaddl
lock
and
push
cmp
pop
xor
add
or
arpl
ds
sbb
call
outsb
dec
call
das
adc
cmp
sbb
scas
and
add
lahf
and
push
fxsave
inc
mov
adc
push
outsb
fsubs
sahf
sub
shl
or
rcrl
pop
pop
mov
test
hlt
mov
aas
rclb
and
sahf
out
jp
inc
and
mov
pop
insb
stc
lea
mov
or
jno
fprem1
data16
clc
push
xchg
and
mov
insb
add
push
sbb
pop
or
icebp
adc
push
cmp
mov
in
or
aad
fldt
inc
ja
jmp
lock
fistl
pop
push
sub
cld
insl
and
pop
addb
mov
jmp
or
orl
adc
adc
push
or
pop
jnp
or
std
cmp
ss
out
test
ret
fadds
or
add
jle
and
iret
loop
gs
jl
repz
roll
shlb
xor
dec
pusha
scas
xor
cmp
sbb
cli
add
xor
aaa
dec
pop
pop
add
shlb
pop
loop
int3
aam
repz
mov
cmp
and
test
jle
or
push
cmp
push
insb
and
inc
sbb
mov
add
sub
daa
push
mov
mov
mov
andb
cmpsb
std
jmp
mov
sahf
and
ret
push
bound
leave
pushf
push
cs
je
addr16
push
xor
lahf
js
test
stos
cmp
inc
cli
scas
in
out
push
jo
in
inc
fiadds
sbb
jmp
js
mov
push
dec
sbb
pop
inc
stos
mov
mov
xchg
insb
add
mov
ret
shll
mov
aam
loop
cmp
bound
push
cmpb
fxch
push
jl
icebp
pop
jp
lock
xor
mov
adc
aad
in
sbb
clc
movsl
push
cmp
gs
test
adc
mov
shll
out
pop
add
mov
add
xchg
je
xor
in
lods
sbb
pop
ret
mov
imul
pushf
adc
out
push
popf
inc
push
ret
cld
and
je
and
sbb
mov
pop
clc
les
lock
sub
cltd
and
add
dec
and
fst
lods
adc
jne
jnp
jne
popl
enter
adc
fiadds
ret
xor
shrl
mov
add
mov
ficoms
adc
xor
std
mov
jbe
xor
cmp
shlb
scas
fsubl
sub
mov
adc
sar
les
aam
xchg
inc
sbb
jg
jp
sbb
sbbl
fnsave
push
imul
pop
pop
mov
das
in
sub
fs
sbb
addl
movsl
nop
pop
mov
ss
inc
insl
and
jae
and
out
sbb
rcrl
fstpl
jno
lods
xor
mov
mov
mov
fbld
outsb
outsl
push
cmp
or
adc
push
les
lret
xchg
mov
add
bound
sub
push
xor
push
mov
mov
jg
lahf
dec
and
mov
rcrl
subl
scas
adc
pop
and
sub
pop
lea
sub
xchg
stos
cmc
cmp
rclb
test
mov
sub
pop
shll
adc
lock
rcrl
ud1
sbb
imul
dec
dec
das
rorl
or
fists
stos
mov
test
xchg
and
push
rcrl
mul
add
xchg
les
je
mov
movups
mov
sbb
and
out
call
add
xchg
movsb
add
imul
xor
mov
mov
mov
test
fisubl
cld
mov
adc
ret
push
ja
mov
add
pop
mov
inc
jg
fbstp
xchg
insb
test
push
add
imul
je
mov
movsb
and
push
or
je
sbb
in
fistpl
scas
scas
xor
aam
fadds
and
lcall
test
mov
mov
loop
mov
jge
fnstsw
fstpt
mov
or
xor
cmp
outsl
popa
adc
pusha
sub
xor
popa
pop
push
dec
subb
bound
inc
inc
push
clc
das
push
dec
outsb
xchg
jo
cmp
xor
rcll
xchg
lret
addb
sbb
dec
add
in
adc
add
xlat
add
sub
das
push
dec
pop
enter
xor
or
mov
fwait
rorl
shrb
jne
or
or
push
faddl
stos
test
stc
in
add
scas
lods
mov
cmp
sub
jae
or
xchg
sbb
pop
inc
mov
loopne
add
or
mov
sub
pop
push
pop
das
mov
adc
jle
mov
out
ljmp
inc
lahf
imul
xlat
rclb
jmp
int
and
imul
dec
mov
pushl
xchg
inc
mov
mov
xlat
mov
adc
push
enter
lret
xor
sub
and
ss
mov
repnz
add
dec
sub
xchg
repz
cmp
jecxz
mov
mov
or
xchg
repz
mov
out
sub
test
sub
add
pop
jle
dec
mov
pop
and
or
mov
xlat
push
mov
jbe
sbb
int3
sbb
pop
pop
dec
xor
cmp
xor
xor
xchg
jg
mov
add
dec
out
or
xchg
test
sbb
mov
imul
push
mov
cmpsl
or
insl
mov
out
xor
mov
mov
fdivl
into
sbb
mov
pop
lock
or
outsl
ljmp
pop
pop
stos
mov
cld
iret
push
int
or
aaa
test
lock
xor
jnp
mov
add
push
decl
push
push
mov
mov
dec
xchg
ss
std
cmc
gs
ds
rcl
sub
jge
mov
or
sbb
or
pushf
outsl
push
mov
jb
add
pop
pop
cmc
in
cs
push
sub
and
dec
or
adc
mov
ret
adc
test
sub
shlb
out
mov
cmp
fisttps
jns
jle
inc
pop
lea
pop
push
clc
xor
mov
adc
sbb
fcomps
fldcw
adc
xchg
mov
ficomps
cli
fadds
sbb
inc
cmp
adc
insb
xor
loop
pop
dec
adcb
push
lea
daa
mov
outsl
mov
adc
movsb
mov
dec
xchg
xor
or
jl
repnz
cmp
cmp
daa
xchg
or
shrb
mov
lcall
loopne
sbb
cmpsb
sbb
test
arpl
jne
jno
jno
loope
adc
sbb
or
lds
mov
add
outsb
push
cltd
stos
inc
imull
inc
and
out
inc
sub
lret
dec
mov
ret
addl
in
add
xchg
jno
stc
add
loope
hlt
sbb
adc
mov
dec
mov
loope
mov
adc
insb
xor
pusha
mov
cmpsb
sahf
sbb
cli
ret
and
cli
jge
cld
xor
fdiv
and
sbb
daa
popa
fcoms
xchg
pushw
into
mov
repz
xor
inc
leave
outsb
imul
repz
sbb
ja
mov
fcompl
push
inc
cmp
pop
les
dec
repnz
or
cmp
xor
inc
jbe
loope
es
nop
fnclex
dec
dec
aaa
inc
push
loope
jo
mov
fidivs
clc
sbb
mov
dec
push
pop
jae
sbb
sahf
inc
xchg
xchg
add
inc
inc
inc
push
shll
xor
mov
or
push
add
mov
movsl
mov
adc
xor
adc
or
jmp
mov
movb
aad
cmc
mov
dec
jae
jbe
push
jl
jp
lret
and
lea
movsb
inc
sbb
js
js
jo
jne
push
jl
add
popa
pop
xor
and
cmpsl
mov
lret
mov
ljmp
es
cmpsb
icebp
xchg
repnz
stos
xchg
mov
mov
adc
inc
clc
mov
push
sbb
mov
pop
xor
aaa
inc
mov
and
mov
shll
adc
shlb
ljmp
adc
or
adc
outsl
je
shrb
orb
jl
test
jp
cmp
add
stc
push
jl
xor
js
pusha
inc
mov
add
mov
pop
push
push
xchg
loope
pop
and
incl
xor
xchg
insl
out
push
mov
mov
ds
stos
and
dec
call
sub
pop
rcrl
jle
das
dec
mov
inc
pop
sbb
fidivrl
mov
popa
popf
adc
movsl
inc
or
jg
xor
pop
out
push
xor
insb
mov
push
adc
cld
ljmp
mov
and
outsb
sti
dec
scas
test
sub
mov
xor
lret
rol
scas
cltd
jns
mov
insl
cmp
inc
sub
inc
jp
push
loop
call
outsb
mov
repz
pop
xchg
sub
jbe
or
adc
fwait
jg
jno
pop
hlt
sub
loope
and
mov
inc
lret
loope
lock
rorb
repnz
notl
xlat
repz
cmp
sbb
jb
je
ja
arpl
add
inc
dec
pop
xchg
xor
xchg
test
das
mov
push
leave
jl
inc
andb
hlt
add
xchg
pop
adc
push
into
mov
aam
inc
xchg
aam
orb
gs
jp
dec
cmp
imul
or
push
gs
rol
lret
mov
mov
jns
std
jmp
test
xchg
scas
shlb
jnp
jae
mov
loopne
jbe
or
mov
test
sarb
mov
mov
or
mov
dec
ljmp
mov
adc
aas
outsb
insb
jl
cwtl
lea
push
imul
sbb
daa
or
add
xchg
inc
cmc
mov
arpl
test
push
out
movsl
fildl
mov
mov
mov
je
sbb
sub
xor
addr16
in
push
mov
movsl
push
movsl
pushf
mov
xor
imul
mov
dec
popa
or
test
imul
xchg
xchg
insb
inc
cmp
sub
adc
mov
cmp
or
gs
stos
push
mov
and
fidivrs
shll
jbe
xor
dec
pusha
sti
scas
or
call
sub
mov
lcall
std
or
mov
xchg
outsl
xor
rol
push
cs
jg
mov
push
push
imul
sbb
mov
aam
daa
mov
stos
aas
adc
xor
push
mov
insb
movsl
xchg
test
jmp
and
push
insb
shlb
push
inc
rorl
or
nop
or
sbb
cs
mov
lea
add
add
inc
addr16
aas
scas
lock
sbbb
pop
call
movsl
jnp
jne
and
adc
lcall
ret
pop
and
xor
fmull
jmp
pop
stos
and
push
pusha
dec
out
movl
dec
lock
and
xchg
sub
push
xchg
jp
jo
mov
cli
adc
je
stos
insl
fistps
popa
test
cmc
and
scas
aaa
sub
pop
and
xchg
sub
cmp
pop
jns
mov
nop
insb
cltd
push
sbb
icebp
xchg
ret
jg
loope
or
pop
mov
xchg
adcb
push
sub
adc
lcall
add
push
push
pop
cwtl
mov
jmp
mov
add
push
insb
push
int3
imul
jne
sbb
dec
push
into
inc
test
aas
enter
out
pop
add
pop
push
jp
js
and
jle
add
lret
xchg
mov
icebp
sbb
fcmovb
mov
test
sti
ss
and
rol
ret
sbb
cwtl
cltd
mov
mov
pop
dec
aad
popa
sub
inc
sbb
pop
arpl
mov
in
inc
imul
and
hlt
pop
and
xchg
or
in
push
rorb
sti
out
adc
pop
xchg
xor
mov
inc
rorl
cmp
lock
bound
inc
push
mov
mov
aad
mov
jmp
push
ud1
pop
arpl
stos
data16
dec
jle
add
fisubl
int
jp
pop
adc
mov
and
pusha
cvttps2pi
fcoml
add
dec
pop
sub
inc
cld
inc
cmp
xorl
shrd
insb
and
mull
jae
push
inc
test
add
fildl
mov
ret
mov
mov
stos
stos
dec
mov
icebp
add
and
pop
sbb
aam
movb
jne
cli
cmp
dec
outsb
inc
out
test
ret
sub
loop
js
push
lods
sbb
jge
dec
orl
mov
pop
pusha
push
ljmp
fcoms
rorb
mov
scas
dec
sbb
nop
lea
push
push
xchg
dec
or
js
subl
ret
inc
dec
dec
out
aaa
fs
push
filds
sbb
mov
xor
mov
jbe
push
add
mov
std
xchg
adc
jo
test
push
push
outsl
bound
push
xchg
mov
pop
sarb
and
scas
iret
adc
cwtl
push
lea
and
xlat
popa
cmc
xor
in
sub
fwait
lcall
js
inc
in
lret
mov
push
sbb
mov
adc
dec
cmp
sub
cmp
jmp
lea
jmp
push
lods
push
andl
cmp
add
outsb
rclb
inc
int
xchg
sub
test
jo
lret
push
bound
lea
dec
mov
sub
imul
pop
pop
xchg
dec
adc
addr16
cli
xchg
out
ds
mov
sbbl
ss
mov
lock
sbb
pop
imul
andb
andb
jl
sub
mov
icebp
cmp
inc
push
aaa
or
outsb
cmpsb
pop
clc
inc
cmp
push
jp
pop
leave
fwait
cmp
jno
sbb
test
pop
bound
jle
fidivl
sbb
fstl
inc
lds
sub
fdiv
xchg
std
sub
cmp
mov
iret
pushf
jmp
loopne
cmpsb
addl
adc
mov
and
and
roll
add
jle
xor
je
push
sub
pop
test
adc
repnz
pinsrw
ret
fildll
test
xchg
mov
leave
jp
push
pop
cmp
push
lret
test
sub
aad
inc
sbb
cmp
in
xchg
dec
add
in
popl
xchg
and
test
pop
movsb
xchg
cmp
adcl
and
or
mov
or
push
jbe
sub
repz
daa
jo
inc
mov
pop
xor
inc
loop
shr
xor
sub
xor
aam
mov
sbb
add
mov
mov
adc
in
pop
pusha
xor
push
clc
sbbl
lods
jle
inc
cli
arpl
sub
out
adc
xchg
pop
sub
mov
add
lret
fistpl
aad
mov
xor
ret
sub
xchg
jmp
xor
ss
mov
cmpsb
sti
mov
loope
imul
cltd
push
repnz
sbb
imul
jg
jmp
faddl
fstpl
insb
jne
dec
movsl
or
xor
scas
pop
push
les
mov
js
inc
jl
pop
mov
xchg
inc
jae
fsubrs
jno
aam
mov
lods
mov
test
and
loop
imul
pop
dec
insb
icebp
xor
ret
sbbl
add
incl
decl
ror
lds
dec
repnz
mov
push
scas
shl
lcall
arpl
mov
sbb
or
inc
in
xor
loopne
fmull
mov
push
sub
jp
or
movsl
pop
fistpl
jle
xchg
jp
pop
adc
jecxz
sahf
mov
mov
rcrl
jp
aas
outsb
inc
lret
out
cs
mov
xchg
push
dec
jbe
insl
call
mov
cmp
inc
fmuls
insl
push
cmp
push
push
or
js
out
mov
mov
ljmp
add
daa
rcrb
jno
or
xchg
and
pop
outsb
mov
mov
jbe
sti
adc
inc
clc
sub
pusha
dec
xor
ret
dec
pop
aas
sarb
cmp
or
out
mov
sahf
pop
sarl
fidivs
push
jb
fnsave
adc
xor
mov
icebp
adc
ljmp
roll
mov
inc
jmp
dec
lock
movsb
pop
cmp
cmp
sub
out
jg
xor
and
dec
sbb
add
decl
ficoms
xorb
push
and
addl
cwtl
lea
pop
sbb
insb
xchg
pop
aam
jl
mov
sub
mov
pop
lds
pop
push
inc
imul
xchg
lods
mov
aas
mov
push
mov
lret
cmp
fildll
push
dec
daa
incb
mov
aas
popa
je
inc
adc
popa
fisubl
adc
inc
xor
adc
rcrb
test
add
dec
adc
cmc
ljmp
call
cmpsl
add
aas
popf
jmp
nop
push
out
dec
js
mov
push
fisubrl
aaa
dec
mov
mov
pop
inc
jp
lea
nop
mov
mov
dec
mov
aaa
test
inc
pop
dec
mov
pop
fcoml
add
stos
call
jg
imul
pusha
movsb
lcall
fwait
sub
sub
xchg
dec
daa
mov
aas
xorl
loop
adc
add
das
shl
iret
sub
inc
fdivrs
sbb
shll
fnstenv
mov
jge
cmp
sub
add
add
rcl
fidivrl
pop
or
mov
test
and
insl
leave
lock
clc
sub
dec
in
ret
dec
shlb
aam
sub
test
nop
lods
in
aaa
mov
imulb
inc
push
mov
pop
jge
dec
pop
dec
lock
lcall
outsl
aad
incl
cmp
push
stos
test
mov
add
mov
je
hlt
xchg
sbb
roll
add
inc
jbe
fisubrs
add
jp
repz
arpl
insb
clc
call
pusha
fadds
call
pop
inc
cs
cli
sbb
cmp
inc
add
push
and
mov
dec
movsl
mov
dec
data16
sarb
std
or
mov
lcall
and
loop
ror
push
lock
xor
cld
cmp
mov
fs
adc
push
cmc
pop
sbb
pop
fdivrl
js
mov
mov
adc
roll
je
jmp
in
sahf
cli
push
hlt
mov
mov
lods
fldcw
fmul
xor
add
push
mov
xchg
cld
adc
or
adc
lods
fs
ja
push
push
push
cmp
dec
jbe
and
cmp
repnz
pop
inc
or
push
mov
cli
or
lock
add
aas
shlb
movl
add
mov
pop
pop
rcl
or
and
fisubs
mov
cmc
mov
mov
jmp
xchg
fmulp
push
mov
ror
push
adc
pusha
jl
jo
jb
mov
dec
mov
dec
or
mov
sbb
mov
xchg
cltd
and
push
lods
pop
sbb
mov
aas
mov
icebp
mov
sbb
dec
or
push
cwtl
mov
cmpsb
mov
ds
or
fimull
pop
xchg
lods
jns,pt
lock
xor
add
jp
je
paddb
repnz
lds
rclb
inc
push
jmp
jbe
icebp
mov
out
sbb
rcrl
mov
dec
mov
push
stos
add
mov
pop
hlt
dec
mov
jno
rcll
scas
ret
jmp
loope
ds
xchg
inc
aas
and
cmc
test
jmp
or
ljmp
inc
mov
jbe
inc
dec
xor
xor
or
mov
sub
adc
or
or
xchg
or
push
and
ja
subl
cs
pusha
fisubrl
push
das
mov
fistps
inc
js
inc
jo
mov
outsb
lods
cmp
popf
xchg
mov
cmpb
scas
out
inc
and
push
jbe
negb
dec
or
ret
xor
test
adcb
inc
inc
loop
das
and
pop
pusha
sbb
rcl
sahf
std
stos
xchg
and
mov
lret
push
dec
or
lcall
sbb
test
sub
xorl
std
lods
push
push
repnz
inc
loopne
adc
or
call
subl
mov
jecxz
or
lds
fstps
aaa
push
sub
pusha
aam
inc
cmp
dec
imul
lret
ljmp
cmp
ret
cli
xor
xchg
and
jecxz
js
mov
rcrl
jle
push
sbb
addr16
inc
test
push
mov
and
inc
vpmaxub
dec
cmp
mov
rcrl
int3
cmp
sub
adc
out
mov
xor
adc
inc
repnz
xor
mov
mov
test
xlat
es
add
aas
loopne
pop
adc
adc
inc
lcall
outsb
jbe
andb
adc
ljmp
ds
fs
mov
or
bound
or
icebp
add
daa
lds
fsubrs
in
adc
xor
scas
sbb
xchg
cmp
sahf
iret
bswap
loopne
imul
jl
fistpl
je
inc
insb
pop
jmp
push
decl
xor
dec
inc
scas
pop
inc
lret
pmaxsw
cmp
ret
mov
gs
and
cmc
call
js
data16
imul
pop
aam
fsubs
xchg
pop
stos
sub
fs
fwait
loop
push
push
sti
loopne
loop
push
push
lcall
orb
sub
and
cmc
decl
idiv
pop
sbb
adc
shrb
add
aam
jle
jnp
sbb
shlb
adc
lahf
clc
dec
push
inc
adc
push
pop
movb
xor
ret
or
cmp
push
sbb
push
insl
push
daa
inc
jns
xor
or
lret
jl
aam
mov
jle
or
adc
repz
inc
or
sbb
mov
loop
fs
jg
cmpsb
ds
fbld
mov
pop
push
mov
fwait
aas
push
mov
shrl
mov
aas
and
add
and
int
add
addl
icebp
inc
insb
js
push
push
mov
sbb
mov
in
xorb
push
and
or
adc
and
das
ds
pop
mov
inc
xchg
decl
cli
iret
mov
xchg
and
jmp
xor
jnp
pop
loope
jl
cwtl
stos
loop
jo
sub
adcb
mov
jl
xchg
and
fimull
int3
nop
cwtl
or
dec
sub
scas
dec
lods
or
repz
js
pop
dec
mov
jo
add
aad
jg
mov
pop
or
pushl
loop
lods
push
mov
jb
call
pop
sbbb
in
loope
push
mov
mov
jae
mov
mov
xchg
es
adc
adc
mov
out
pusha
fisttpl
and
or
cmc
aad
das
and
repnz
lret
pop
push
xchg
lahf
js
orl
dec
dec
rorl
dec
mov
or
dec
or
inc
call
push
leave
adc
std
mov
cmp
xor
insb
xchg
or
fadd
lahf
pushf
js
gs
xchg
fnstenv
adc
sub
fs
aaa
jg
mov
xchg
add
xchg
add
testb
test
std
sbb
adc
adc
cmp
push
cmpsb
andb
or
push
jbe
popf
mov
insb
stos
cli
pop
jp
and
adc
sub
pusha
ja
pop
aam
xchg
add
jo
dec
jg
cmp
sub
adc
lods
fcmovne
mov
add
movsb
shrb
ljmp
push
enter
jbe
jmp
push
push
sbb
xchg
mov
sub
and
add
insl
ljmp
jmp
mov
lock
and
fists
cmpsb
iret
mov
pop
add
and
inc
sahf
loopne
shr
or
imul
xlat
cmp
js
inc
out
jne
shl
and
jge
xor
sub
sub
adc
incl
mov
in
daa
dec
jl
sbb
lahf
jbe
sti
sbb
mov
test
in
xor
ret
jns
cmp
jge
stos
xor
xchg
cli
cmp
sub
lock
xchg
cmpl
icebp
lea
xchg
push
xor
fs
outsb
lea
xchg
push
xor
dec
mov
rcrb
orb
inc
fbstp
pusha
inc
ffree
jge
jle
jae
xor
insb
mov
cltd
add
push
adc
gs
mov
xchg
inc
mov
jp
roll
repnz
popa
adc
imul
sub
jnp
adc
or
nop
scas
mov
les
aas
mov
inc
es
add
adcb
xchg
xor
lcall
loopne
dec
and
sub
inc
mov
out
jo
inc
xor
movsb
mov
jecxz
out
mov
inc
popa
mov
dec
incl
iret
call
aas
push
movb
je
xor
les
mov
stos
mov
mov
mov
clc
push
lock
dec
dec
xchg
or
inc
scas
cltd
shlb
cs
arpl
bound
and
roll
sub
add
xchg
sbb
jg
fcmovb
adc
pop
mov
mov
out
neg
fimull
or
mov
ret
xchg
mov
ret
push
test
lcall
scas
in
outsl
std
cli
mov
out
out
dec
dec
mov
clc
icebp
je
subl
pusha
sbb
dec
mov
push
and
cmpb
loop
faddl
mov
sub
ret
push
adc
push
lcall
fs
lahf
sbb
bound
les
popw
stos
out
xor
stos
in
ret
lret
pop
insb
add
lret
data16
mov
xor
cmpsb
popa
and
add
jb
push
je
fdiv
cmpsb
inc
movsl
mov
sub
addb
lds
stc
inc
push
push
cmp
les
sbb
js
mov
loop
mov
or
xchg
xchg
into
les
dec
sub
jmp
push
lcall
xlat
adcb
push
mov
push
rcll
and
xor
sub
mov
shrb
adc
fisubrl
mov
push
mov
daa
je
pusha
sbb
mov
push
pop
test
jl
daa
pusha
js
adc
dec
rorb
scas
mov
sbb
or
or
inc
jle
mov
test
ss
cmc
lahf
leave
push
icebp
cs
aad
in
imul
dec
fcomi
or
push
or
aam
xlat
fstpt
push
fdivs
or
jne
mov
rolb
clc
ret
xchg
pop
mov
outsb
or
popa
cltd
sti
js
push
sbb
pop
jecxz
in
push
jb
dec
sbb
push
pop
shrb
lret
sar
cs
jbe
test
jnp
rolb
pushf
mov
iret
pop
xchg
pop
pop
push
push
push
in
add
cmp
pop
add
lods
scas
and
mov
hlt
pop
call
jp
inc
mov
fdivs
fs
xchg
lods
repz
mov
sub
pop
or
into
push
clc
test
mov
mov
int
lock
in
adc
jnp
lods
stc
jno
xchg
mov
cld
cmp
nop
js
in
inc
fdivrl
loop
movsl
pop
pop
lods
addr16
pop
mov
outsl
and
hlt
add
icebp
add
sarl
cmp
lock
pop
or
out
xor
jl
adc
or
push
outsl
ret
clc
jg
sbb
cmc
xor
dec
sub
add
mov
in
dec
add
adc
mov
hlt
mov
pop
push
ljmp
jo
mov
rol
mov
into
push
pop
cwtl
xor
sar
mov
sub
dec
push
ss
mov
out
aad
lods
pop
and
dec
jg
rcrb
das
cmpb
sbb
lods
cmp
mov
mov
mov
push
ja
lea
xchg
push
mov
jo
sbbl
cld
or
rol
sbb
movsb
mov
imul
out
sbb
dec
mov
adc
push
inc
sbbl
and
loopne
push
das
fadds
popf
cli
or
lret
clc
popf
mov
outsl
imul
mov
call
sub
pop
cli
add
push
pop
fsubrp
ljmp
rolb
or
in
cwtl
inc
inc
sbb
sahf
testl
xor
sbb
jge
xchg
pop
les
out
dec
add
sbb
lea
adcb
inc
dec
add
push
arpl
scas
iret
push
inc
dec
jo
cmpsl
xor
mov
divl
push
mov
push
jge
mov
adc
adc
in
push
push
js
jg
inc
cmp
out
mov
add
mov
add
call
in
lds
add
and
add
push
pop
loop
push
loop
push
mov
idivl
je
jne
xlat
cmp
into
fsubrl
sarb
pusha
insl
and
mov
aam
clc
out
clc
mov
pusha
sub
inc
sub
test
push
out
mov
push
aaa
mov
adc
scas
scas
jo
sbb
add
addr16
lock
mov
int
mov
mov
mov
sbbb
xor
lcall
sub
sub
dec
sub
jb
mov
and
dec
shr
in
mov
adc
and
loopne
ds
cs
add
jg
push
outsl
aam
xor
mov
pusha
sbb
inc
or
fildll
push
loop
loopne
sub
or
xchg
push
vpmacsdd
mov
adc
cmc
bound
or
rolb
push
dec
sbb
lret
sbb
jbe
jecxz
mov
xor
mov
in
xchg
pop
pop
inc
cmp
inc
mov
push
cli
push
push
notb
leave
arpl
inc
les
fldenv
pop
or
out
pop
sub
nop
mov
inc
mov
cmpsb
mov
mov
test
or
cmp
xor
xor
mov
je
or
test
shlb
mov
fbstp
fcoms
inc
xchg
test
dec
or
push
shll
pop
add
enter
adc
jle
mull
mov
dec
dec
fdivs
push
stos
xor
mov
cmp
jmp
out
testl
push
jge
xor
inc
hlt
jmp
test
mov
shlb
popa
vcmpsd
popa
loope
testb
xlat
pop
out
mov
pushf
sub
pop
sub
add
jae
fs
push
mulb
aam
stos
mov
pop
jmp
sub
movsb
loop
es
lds
nop
mov
and
xor
inc
dec
mov
mov
aas
addr16
dec
test
push
dec
sub
sub
xor
sub
icebp
mov
lods
xchg
add
mov
add
and
adc
sti
sub
subb
outsl
sbb
sbb
imul
adc
js
insl
test
test
rcr
xchg
pop
sbb
decl
rolb
mov
mov
pop
rolb
adc
and
sti
add
mov
jo
idivb
mov
aas
inc
xor
outsb
mov
push
cmc
insl
iret
mov
xchg
shl
fcoms
call
outsb
ret
hlt
adc
push
jno
mov
sbb
inc
test
add
sub
mov
and
adc
add
loope
cmp
int3
add
or
clc
out
xchg
mov
mov
jne
loope
call
cltd
inc
enter
push
dec
xor
pusha
mov
cli
sbb
in
test
or
mov
vmread
push
or
pop
rolb
push
xor
sbb
adc
sub
dec
push
test
loope
repz
dec
and
clc
sbb
lods
mov
lock
jbe
sbb
add
sub
mov
dec
mov
or
testb
lods
adc
dec
testb
xorb
je
in
and
mov
dec
stos
sbb
sbb
sub
dec
mov
sub
mov
in
fsts
push
arpl
xchg
adc
cmpsl
xor
dec
loop
je
sbbb
push
push
xchg
ret
mov
add
loop
xchg
mov
jg
cmp
test
or
xchg
adc
adc
aam
add
mov
jp
mov
bound
mov
je
ret
inc
shl
mov
mov
fdivrs
test
push
inc
les
enter
in
in
ljmp
out
enter
roll
insb
cmpsb
insl
pop
dec
push
jae
les
push
insl
xor
test
imul
sub
gs
es
outsb
fists
mov
jg
mov
xchg
xchg
push
pop
lock
pop
cmp
mov
or
dec
mov
mulb
and
xchg
add
adc
sub
fsubrl
adcb
or
xor
jp
cmp
mov
int
pop
push
loope
add
sarb
dec
inc
fsubrs
xor
adc
add
add
cmp
jne
add
in
pop
pushf
ret
loopne
clc
inc
push
js
lcall
mov
push
mov
stc
shrl
shl
cmp
mov
movsl
js
xor
xchg
push
in
and
xor
arpl
mov
mov
pop
push
jne
xor
push
icebp
jl
les
push
nop
xchg
sbb
push
test
daa
cmpsb
add
adc
pop
pop
sbb
pushl
or
leave
add
popa
and
push
jle
dec
sti
add
sub
mov
and
ja
ja
aaa
sti
mov
into
sbb
push
idivb
mov
or
inc
mov
adc
or
and
pop
loop
lock
sbb
mov
cmp
lea
repnz
pushf
xor
push
rolb
mov
and
insl
pop
or
mov
cmpb
inc
rclb
mov
fbstp
xchg
js
ss
rolb
xchg
test
movsl
aad
pop
icebp
leave
adc
dec
push
and
lcall
mov
cmp
es
pushf
cwtl
push
es
jmp
outsl
adc
fnstenv
loope
or
stos
inc
mov
cmc
sub
add
inc
js
xor
push
adc
cmpsb
shrb
cmp
fmuls
add
aad
roll
xor
and
andl
xchg
sti
lahf
push
pop
push
orl
rcl
rcl
adc
cmp
xor
sub
mov
adc
push
mov
sbb
cmp
test
pop
shlb
adc
sarl
fwait
mov
rcrb
cmp
jecxz
lret
push
cmp
dec
jno
shlb
out
les
lock
in
cmp
in
movsl
data16
add
sub
bound
pop
pop
or
pop
push
loopne
je
xor
std
ret
adc
ror
jno
inc
call
xchg
fildll
sbb
adc
sub
xlat
sub
add
mov
jae
sub
add
or
or
sub
stos
dec
inc
bound
mov
add
aaa
dec
ret
inc
test
ljmp
or
push
push
push
or
xchg
and
rcll
jb
loopne
cld
test
pop
dec
pop
fnstsw
pop
stc
push
adc
insb
push
pop
shll
fcoms
ss
xchg
xlat
out
jb
adc
xor
les
inc
mov
push
mov
push
daa
lcall
cmp
enter
push
dec
pop
loope
cli
imul
imul
and
pusha
xchg
jle
mov
in
mov
jl
mov
or
popf
lcall
mov
mov
call
stos
call
ret
mov
outsb
shlb
icebp
mov
inc
jecxz
mov
fldenv
fdivrs
xor
sahf
cmp
push
mov
sahf
xchg
mov
divb
arpl
push
data16
adc
ds
or
inc
mov
dec
mov
mov
mov
jl
cld
inc
sbb
aad
jns
adc
xor
inc
pusha
mov
xor
adc
dec
out
in
xchg
movsb
or
rcr
cld
adc
mov
mov
andl
mov
js
mov
or
adc
inc
add
orb
pop
ja
icebp
and
aam
jp
xchg
loope
inc
lds
sub
insb
sbb
call
mov
dec
push
dec
xlat
mov
outsb
and
add
lcall
aaa
xor
or
inc
and
shrl
pop
add
pop
mov
jmp
xchg
call
call
mov
lods
add
js
mov
xchg
enter
jl
pop
mov
je
aad
cltd
out
jmp
mov
ret
test
mov
data16
push
pop
adc
cli
pop
mov
ret
push
sarb
xor
add
xor
or
pop
lods
jne
arpl
and
sbb
xchg
das
adc
jle
push
inc
mov
mov
int3
out
into
xor
lods
mov
push
mov
fwait
orb
xchg
insb
or
inc
cmpsl
xor
mov
push
jg
jmp
rcrb
cmp
negb
jno
dec
test
mov
sti
nop
lcall
ja
jg
sbb
cmp
or
xchg
dec
popa
gs
sbb
and
insb
adc
pop
les
xor
jl
mov
imul
test
out
add
and
push
add
add
fsub
sbb
push
jl
pop
cli
scas
icebp
js
divl
push
dec
std
cwtl
jmp
or
mov
je
sub
hlt
addr16
mov
lret
fdivrs
test
incl
in
inc
sahf
les
jp
dec
adc
pop
dec
icebp
subb
les
outsl
out
test
ljmp
mov
jbe
hlt
aas
xchg
call
mov
jl
and
xor
pop
in
jo
cmp
jo
inc
and
out
mov
in
push
fwait
and
mov
pop
or
xlat
dec
mov
push
fs
push
dec
adc
pop
fisubrs
lahf
jle
movups
mov
aam
push
push
shrb
clc
iret
and
dec
enter
scas
ret
or
sti
xchg
push
cwtl
xchg
inc
inc
insb
or
cmc
inc
div
sbb
xor
jmp
cmpsb
fidivrl
mov
hlt
cmpsb
in
xor
stos
push
adc
test
sbb
and
cs
into
jo
mov
push
lds
mov
jo
jecxz
dec
cwtl
xchg
mov
testb
pop
mov
loop,pn
movsb
sub
push
and
orl
pop
aas
and
mov
add
js
or
rcll
cltd
adc
mulb
shlb
fs
leave
push
pop
dec
ss
xorl
mov
in
in
sub
jge
fs
or
sbb
aaa
adc
pop
pop
mov
mov
cwtl
or
jb
je
negb
jge
jae
icebp
adc
xor
add
aam
ljmp
loope
data16
and
jne
sub
inc
sbb
sub
enter
imulb
addr16
inc
adcb
fwait
or
mov
clc
inc
cs
insb
js
orl
pop
fdivl
shrb
dec
test
jmp
mov
ljmp
in
ljmp
cmpsb
mov
cmp
data16
test
or
xor
mov
mov
out
adc
pop
mov
sarl
jecxz,pn
or
and
pusha
cmp
or
jbe
and
push
mov
shl
ficomps
mov
inc
bound
addl
push
mov
jl
arpl
or
ds
mov
mov
add
pop
cmp
sub
call
dec
int3
mov
pop
fldl
arpl
loop
fstps
xor
scas
cmp
mov
cltd
pop
inc
mov
fistl
pop
testl
inc
mov
push
es
inc
add
cmp
test
aaa
mov
xchg
add
jecxz
fmull
push
sub
gs
loop
push
mov
movl
mov
addl
add
loope
daa
mov
sarb
cmp
out
mov
xor
xlat
lea
mov
push
add
lret
cmp
push
mov
lods
fwait
les
sbbb
lcall
into
jp
out
sysret
or
enter
das
push
les
jno
mov
mov
fmull
ds
scas
clc
or
and
lods
jbe
stos
sub
or
inc
dec
mov
sbb
rolb
les
es
cmpsb
jecxz
dec
mov
lock
inc
adc
fdivrl
mov
pop
shl
dec
push
sbb
mov
mov
jo
cmpsb
or
das
mov
fcmovb
xchg
or
xor
or
xchg
push
mov
test
scas
popa
dec
mov
add
add
sti
push
pop
add
mov
nop
pop
or
pop
inc
xor
jge
sbb
arpl
add
adcl
adc
mov
or
push
ljmp
insb
xchg
pop
stos
xor
cmp
ds
lock
sub
rcr
sbb
dec
mov
and
inc
aad
mov
mov
adc
mov
jl
pop
call
aam
and
jge
shrb
pop
lock
mov
mov
mov
pop
sub
add
mov
add
test
lock
loopne
cltd
jge
aam
mov
popf
loop
cmp
add
mov
mov
xchg
mov
dec
xchg
jp
xor
sbb
dec
in
ljmp
xor
cli
push
push
je
xchg
add
mov
xchg
sbbb
mov
call
aas
and
jne
cmp
jp
gs
push
add
into
mov
into
xchg
adc
in
addl
stos
cs
lea
xor
mov
xor
mov
in
les
fidivrs
es
loop
push
je
inc
rcr
fiaddl
xchg
adc
inc
sub
inc
add
pop
sbb
xor
and
testb
push
cmp
inc
xor
clc
outsb
mov
jne
push
xchg
push
fdiv
or
loop
and
pop
pop
rol
lea
xchg
dec
and
inc
je
mov
jl
dec
aas
add
rolb
sub
jge
pop
sub
lret
shr
lock
add
xorb
add
jp
jge
dec
mov
rolb
das
sbb
out
mov
or
lock
mov
cmp
shll
adc
gs
out
aam
push
or
cs
xchg
push
inc
adc
lock
sub
fistps
mov
jo
ds
xchg
mov
shlb
mov
fisubs
push
and
push
push
adc
cmp
adc
inc
data16
lods
sahf
fisttps
mov
xor
mov
fidivrl
gs
out
push
jge
sbb
es
dec
popf
add
imul
xchg
xchg
jnp
pusha
arpl
or
divb
dec
out
push
xchg
hlt
repz
cmp
sbb
rolb
hlt
dec
lret
sti
dec
pop
sahf
into
and
jno
ret
test
repz
jge
ss
push
fwait
ljmp
jno
inc
js
adc
mov
mov
cmp
out
and
inc
aas
pusha
fcmovne
roll
sbb
cmpb
insb
sbb
pop
fs
push
ljmp
mov
movsl
negb
movl
loopne
out
mov
pop
push
popf
sub
or
mov
sbb
add
mov
movl
or
sarl
xchg
ret
outsb
add
hlt
mov
pop
popf
leave
push
mov
push
das
test
ds
pop
inc
dec
and
aad
pusha
ljmp
cwtl
pop
push
xor
loopne
jge
ja
mov
or
sarl
xchg
and
arpl
inc
jmp
fwait
jge
out
adc
arpl
xor
cmp
dec
push
mov
lcall
or
sbb
lahf
xor
movsl
sbb
inc
sbb
add
mov
movsb
mov
lods
xchg
push
dec
lahf
popf
std
call
movsl
scas
fnstcw
jge
xchg
test
mov
test
pop
mov
js
and
insl
pusha
xchg
xchg
pop
push
mov
sub
pop
lret
std
xchg
mov
mov
pop
xchg
fadds
sbb
xchg
add
push
aad
aaa
fmuls
push
cmp
jo
repz
loop
repnz
xchg
xor
pop
inc
mov
addl
inc
lods
insb
jle
subl
xor
adc
gs
push
clc
fwait
cmpsb
and
sbb
xchg
and
aaa
add
mov
jo
mov
insl
push
mov
cli
stos
lds
sbb
adc
jecxz
xor
aad
int
xor
hlt
mov
mov
or
and
ss
pop
inc
imul
xlat
add
test
or
cmpsb
and
loopne
test
sarl
xchg
push
pop
sbb
leave
adc
loope
inc
adc
ret
xlat
out
mov
das
pop
inc
and
icebp
int
inc
pop
bound
cli
pushf
adc
sub
test
mov
rcll
cmp
push
insb
lock
jo
xrelease
add
xor
mov
sub
pop
mov
jg
mov
or
xor
das
sbb
pop
ss
mov
inc
roll
dec
cmp
mov
scas
jb
xor
stos
in
fiaddl
outsl
jp
and
mov
dec
push
pop
int3
mov
and
add
dec
ss
loope
push
push
mov
je
imull
shlb
pop
lods
pop
xchg
movsb
push
aam
cmc
lds
js
test
arpl
stos
mov
lcall
faddl
outsl
pop
and
pop
std
fs
sub
sub
sub
push
xchg
aam
and
jne
std
jbe
xor
fst
rcrl
pop
xor
sti
adc
inc
test
lods
xchg
dec
call
jmp
xchg
stc
clc
adcb
adc
pop
xor
fistps
xchg
mov
sbb
xchg
fnstcw
in
dec
out
xor
ret
pushf
jne
lea
pop
sbb
andb
outsl
jg
js
lods
adc
push
repz
subb
cmpsb
add
movsl
ljmp
mov
dec
adc
or
lcall
in
imul
and
js
mov
push
pusha
cmp
mov
push
jle
iret
lcall
xchg
rcrb
repz
inc
outsl
jle
clc
and
mov
pop
sbb
out
add
sbb
insl
shrb
outsl
adc
fdivrl
add
notb
daa
add
in
fimull
in
add
cmpsl
and
gs
xchg
scas
je
daa
in
xorl
xor
incb
fcomi
ljmp
out
popa
loopne
jne
call
pop
xorl
aam
test
scas
hlt
adc
out
mov
cmp
push
aas
cld
push
jo
jge
je
mov
aas
pop
rorb
movsb
adc
adc
cmp
dec
adc
xorb
push
push
clc
test
nop
lret
stos
lahf
and
subb
mov
push
dec
rolb
icebp
stos
jl
dec
mov
fwait
call
leave
gs
or
addb
lods
dec
loop
jae
mov
pop
push
cli
cmp
mov
in
xchg
bound
je
test
lods
hlt
jmp
adc
movsl
jo
sarb
loop
dec
mov
mov
jp
jae
jnp
aas
adc
push
sbb
mov
mov
xor
dec
fisttpll
adc
or
jl
inc
xchg
or
ljmp
rorb
pop
mov
pop
rcl
cmp
jnp
mov
idiv
jp
sub
adc
orb
shll
sub
adc
mov
scas
repz
ds
sub
push
inc
jnp
sub
pop
cld
xchg
insl
loope
cmp
imul
mov
fnsave
push
pushf
push
fiadds
and
addb
aam
test
xchg
out
push
cmpsb
xchg
inc
out
adc
addr16
and
lods
stos
into
mov
test
mov
push
bound
unpckhps
dec
pop
ret
dec
inc
rcll
cmp
push
insb
shrl
hlt
ret
mov
jb
mov
mov
mov
clc
dec
insl
mov
rorl
orl
and
adc
test
sbb
js
dec
arpl
mov
insb
sti
mov
cmp
fwait
test
cmpb
or
add
cmpsb
pop
imul
fisubrs
sbb
insb
dec
mov
or
sbb
arpl
or
pop
push
fists
add
inc
xchg
pop
adcl
push
popa
sbb
xchg
mov
mov
mov
arpl
repnz
xchg
xorb
mov
or
sbb
in
fbld
adc
stos
jmp
sub
jecxz
and
push
jnp
cmp
xor
cld
fistl
xchg
fwait
les
sar
cld
lahf
inc
popf
inc
sub
ss
add
test
pusha
xor
cld
push
int
shrl
icebp
clc
and
mov
mov
xor
cmpb
adc
cmpsl
shll
test
add
mov
mov
pop
mov
cs
mov
cmp
inc
rol
bswap
insb
aam
or
pop
lahf
lea
jp
and
call
in
push
lock
xor
lock
jg
jmp
mov
mov
mov
mov
scas
xor
and
test
mov
and
into
pop
mov
mov
add
xor
out
dec
test
add
fs
out
and
or
and
dec
inc
adc
inc
test
outsl
dec
or
loopne
in
cwtl
ror
jp
jge
cmp
lcall
dec
jno
mov
mov
popa
nop
add
pop
mov
mov
dec
loop
aam
neg
xor
sbb
cmp
sbb
daa
mov
aas
push
cmc
in
adc
add
cmpsb
loope
out
and
or
icebp
rcl
xor
mov
fst
jae
bound
movsb
das
mov
jecxz
je
mov
lods
jle
and
sti
xchg
adcl
sbb
pop
mov
aam
mov
ret
fbstp
dec
lea
stos
mov
push
fimuls
scas
mov
or
fwait
packssdw
cmc
daa
or
xlat
adc
mov
adc
mov
xchg
out
daa
or
scas
hlt
inc
test
cmp
stos
adc
aaa
jle
sbb
inc
mov
movsl
sbb
shlb
push
sub
imul
movb
mov
xchg
jg
je
jmp
lret
xor
scas
push
push
shrb
loopne
inc
jle
test
incl
data16
ja
js
mov
outsb
incl
jne
scas
fsubrp
or
push
test
call
dec
sbb
pop
fmull
xlat
ljmp
mov
mov
dec
jns
les
xchg
inc
cmpsb
jo
xchg
aas
mov
inc
mov
shlb
in
dec
cmc
mov
push
cmpl
push
push
loopne
sub
adc
push
mov
test
push
or
cli
cmp
mov
js
sub
loop
inc
inc
adcl
sub
ljmp
fwait
inc
jne
mov
cld
setle
int
clc
push
lods
mov
mov
fmuls
xlat
stos
mov
lods
or
cs
mov
sbb
mov
sarb
je
jle
lret
fcmovu
mov
lcall
rcr
in
sbb
sti
orl
les
xchg
and
leave
sbbb
add
or
pop
in
sbb
mov
jle
xor
pop
decb
std
daa
cmc
cli
jns
stos
ret
mov
fmuls
mov
mov
aas
cltd
pusha
arpl
mov
mov
push
test
push
mov
loop
push
shrb
xor
movsb
pop
jg
pop
or
mov
sbb
and
or
loop
push
sub
sub
inc
clc
movsl
movsb
in
dec
pop
jle
and
add
mov
inc
push
mov
popa
lds
push
cs
aas
hlt
inc
mov
cmp
rcrl
ret
xchg
clc
pop
jnp
dec
daa
je
add
hlt
popa
test
inc
mov
pop
fsubrs
pop
stc
push
in
inc
int3
in
pop
cmpsb
pusha
jnp
push
insb
inc
sub
add
add
and
ljmp
ret
fcomps
inc
push
adc
icebp
into
pop
xchg
mov
xchg
push
out
adc
loop
insb
lcall
pop
scas
push
nop
ljmp
mov
outsb
lcall
adc
and
out
mov
cmp
jne
cmp
shrb
out
out
push
orps
out
push
adc
dec
adc
sub
clc
xchg
or
mov
lret
pusha
fs
test
xchg
xor
mov
pusha
xchg
mov
hlt
lcall
push
aad
jge
sbb
out
ja
movsb
popa
add
pop
inc
jo
inc
shll
sbb
cld
cs
jae
sub
jae
lea
js
and
mov
cmc
mov
sub
fs
mov
bound
dec
adc
adc
pop
mov
mov
xchg
jle
cmp
in
icebp
sbb
jo
pop
pop
data16
xchg
adc
clc
fcomp
sar
xor
stos
mov
cs
and
cmp
loop
push
scas
test
adc
out
add
dec
jne
lret
add
imul
or
fwait
sbbl
mov
add
pop
icebp
and
int
inc
xchg
sub
ret
negb
enter
add
repnz
testb
cld
push
sbb
inc
hlt
dec
call
push
jbe
mov
testb
push
lcall
jle
mov
jge
push
fidivrs
adc
xor
ss
xchg
inc
pop
mov
into
xchg
cmc
or
mov
outsl
mov
cmp
icebp
add
rcll
call
lds
push
mov
jnp
sub
and
inc
incl
dec
ljmp
stc
inc
xchg
inc
loop
aas
sub
je
pop
adc
dec
cmpsl
and
push
aas
divb
sub
das
cs
lock
xorb
insb
and
scas
add
push
movsb
mov
negl
xchg
insb
push
mov
mov
int3
dec
cmp
and
out
stos
scas
test
jno
jbe
int
adcb
or
scas
cmp
mov
jle
dec
cmpsl
adc
adc
jp
lahf
mov
test
stos
fdivrp
inc
fsubs
filds
cmp
lret
jp
pop
fcomp
xchg
or
jle
pusha
test
les
js
jl
into
inc
xchg
mov
outsl
jg
es
jne
or
add
jge
jecxz
in
add
inc
js
icebp
add
call
dec
sti
adc
inc
push
clc
mov
mov
test
lcall
cwtl
adc
jb
lret
push
mov
test
or
cli
adc
mov
arpl
dec
mov
sarb
rcrl
inc
subl
mov
ljmp
mov
hlt
aas
aam
inc
pop
add
in
aam
loope
mov
sbb
adc
nop
lret
outsl
and
stos
ja
pop
iret
lods
mov
sbb
or
jno
ss
daa
insl
sbb
or
outsl
jns
and
sbb
push
mov
lcall
call
inc
xor
int
cld
rcl
mov
popl
or
cmp
aas
push
fidivs
shlb
bound
or
add
and
jnp
sbb
call
loope
andl
xor
dec
mov
jo
lock
int3
sub
push
pop
mov
mov
movsb
cmpb
adc
inc
sub
mov
aad
shrb
in
pop
inc
ljmp
out
std
lods
test
data16
lret
lahf
clc
fcmovb
xsha256
cmpsb
push
xchg
dec
and
cmp
push
mov
dec
pop
push
loopne
inc
mov
xor
test
push
fcomi
inc
rorb
fs
out
ror
iret
jg
out
ljmp
push
pop
out
mov
mov
ljmp
mov
add
mov
or
repnz
dec
push
mov
mov
retw
mov
add
ljmp
cmovl
push
testb
push
cmp
loope
lock
nop
push
stos
mov
shrl
inc
imul
add
les
adc
adc
addl
ss
ds
mov
push
movsb
mov
iret
dec
in
sbb
xchg
sub
adc
xchg
out
mov
mov
pop
cmp
lahf
dec
push
fcoml
out
mov
insb
push
cmp
sbb
pusha
pop
adc
call
andb
shlb
jo
pusha
outsl
xchg
mov
mov
and
mov
jecxz
xorb
or
test
push
mov
or
cld
and
js
inc
lock
test
xorl
movsb
dec
and
jmp
out
cmp
aas
decl
add
mov
clc
push
rorl
fwait
inc
push
sbb
jmp
ret
mov
ljmp
add
shlb
subb
pop
sub
or
fstl
loop
hlt
cwtl
mov
decl
dec
insb
ret
add
int
aad
mov
sub
inc
sub
pop
sbb
push
hlt
sub
xchg
and
or
xor
fdivrp
out
sbb
test
mov
rcr
inc
cld
mov
mov
test
std
push
push
aam
sbb
sub
outsb
stc
adc
mov
mov
stc
imul
loope
pop
xor
or
xchg
gs
sbb
and
lret
or
pushf
or
mov
stos
cs
or
ss
sub
adc
jle
movl
rcr
mov
xchg
mov
leave
orb
and
test
mov
or
les
mov
mov
rcl
adc
cmpsb
sbb
insl
xchg
pop
test
push
in
xchg
push
jle
fs
js
loope
or
test
andl
mov
ficoml
andb
in
cmp
adc
fidivrs
mov
call
push
jb
xor
lret
popa
add
fistl
push
ljmp
and
aam
pushf
dec
push
loop
mov
mov
xchg
bound
lcall
add
jg
dec
cwtl
cmp
iret
fwait
xchg
or
sbb
cmp
mov
cs
cmp
or
or
testb
jbe
das
pop
mov
mov
aam
xor
std
xchg
repz
jl
js
adc
add
dec
mov
in
sahf
sbb
aaa
cmp
push
and
cmp
movsl
fadd
testl
jnp
cmc
test
mov
scas
xlat
inc
cld
pushf
loope
pop
ss
jno
add
sbb
push
adc
movsb
sub
push
dec
mov
pop
shrb
push
cmpsl
xchg
loopne
ret
rclb
sbb
push
adc
add
sbb
jl
lea
cs
icebp
popf
adc
pop
insb
sbb
mov
pop
xor
dec
pop
mov
mov
mov
lea
pop
or
cli
insb
repz
fdivr
andnps
movsl
push
inc
insb
push
out
push
push
sub
ss
insl
mov
sub
cmp
mov
insb
jns
mov
mov
and
mov
pop
jecxz
jp
inc
out
cwtl
and
aaa
sub
ds
test
das
push
hlt
nop
inc
fcom
inc
xchg
clc
outsl
adc
lcall
or
push
push
loop
ss
add
dec
sub
into
jbe
bound
adc
jbe
inc
je
std
hlt
aam
xorb
or
sub
das
pop
jo
sarb
jecxz
xor
add
push
fwait
cmp
iret
fdiv
xor
lods
pop
push
add
and
hlt
xchg
pop
mov
mov
inc
dec
push
xchg
repnz
and
add
sti
or
adc
dec
sbb
push
and
push
inc
aaa
mov
dec
leave
mov
fnstcw
aad
loope
mov
inc
into
mov
and
mov
add
jne
flds
mov
or
ljmp
enter
in
push
adc
ljmp
fwait
out
cli
mov
movb
cld
je
cwtl
lds
pusha
adc
push
pop
cmovl
cmpsb
xchg
jecxz
stc
mov
cmc
push
hlt
shrb
ret
ds
push
mov
les
jbe
popa
sarl
adc
outsl
jo
adc
lret
sbb
scas
mov
insb
jb
xchg
pop
pop
in
sbb
mov
stos
pop
jl
pop
adc
jb
dec
loop
dec
call
adc
jmp
push
inc
inc
fsubrl
repnz
inc
mov
inc
out
jne
lock
negb
and
leave
or
cmp
push
push
xchg
pop
ljmp
sub
movsl
push
sti
lock
add
ds
and
jo
iret
sahf
lcall
cmp
cmpsb
sbb
or
mov
inc
mov
scas
add
push
js
and
loopne
data16
xor
or
dec
adc
enter
pop
mov
int
es
rcrl
add
jg
ds
add
push
sub
loop
xor
adc
ds
xchg
and
pop
adc
loop
imull
cmpsb
pushf
sbbl
mov
sub
mov
adc
popa
aas
jb
lods
or
push
rclb
push
test
mov
or
xor
dec
adc
push
cwtl
fwait
dec
cmpsl
out
popa
fdivl
xor
test
jne
push
ss
cmc
inc
lds
and
cmc
adc
mov
div
mov
adc
add
jp
fcomi
enter
mov
mov
fdivrp
mov
inc
sbb
mov
sarb
jb
ret
stc
cld
sbb
call
and
or
xor
jb
add
popf
xor
imul
out
roll
pop
sbb
cmp
loope
js
pop
test
add
sbb
add
clc
xchg
out
xor
dec
and
movb
mov
jl
dec
dec
adc
adc
dec
mov
lahf
rorl
xor
jp
test
jnp
adc
mov
sub
cmp
rolb
adc
in
test
add
and
xor
mov
pop
std
andb
pop
xor
cmpsb
add
xchg
xor
push
or
test
data16
or
push
sub
repnz
ss
call
mov
cmc
rcl
mov
inc
pop
xchg
mov
pop
out
icebp
push
in
lret
pop
sub
xlat
pop
mov
xor
and
icebp
test
add
sub
bound
jge
cli
sbb
add
test
xorl
mov
loope
stc
ficoml
loopne
inc
cmp
inc
lahf
push
add
cmp
dec
sbb
or
mov
mov
popa
add
popa
mov
negl
push
insb
pusha
pop
test
mov
shll
cs
test
mov
into
inc
xorb
push
sbb
pop
pop
jge
lcall
inc
jge
and
inc
sbb
xchg
das
fsubs
dec
mov
std
add
shlb
cmp
or
sbb
ret
in
les
adcl
std
mov
test
cmpsl
and
das
mov
stos
daa
push
push
outsl
or
cmp
ljmp
leave
sub
add
adc
lea
mov
adc
or
pusha
dec
xor
addr16
push
sbb
ljmp
sbbb
pop
in
call
insl
sbb
mov
push
xor
sbb
jp
ret
add
push
dec
sbb
inc
out
scas
xchg
ret
aaa
sbb
add
fcoms
icebp
test
sub
iret
into
in
outsb
das
mov
mov
inc
bswap
push
fwait
inc
decl
cli
into
in
mov
push
aam
ss
mov
push
pop
xorl
add
adc
lcall
insl
repnz
inc
js
xor
or
mov
xchg
mov
je
out
or
loope
inc
cwtl
aam
dec
inc
test
lcall
roll
enter
mov
pop
loope
push
fisttpl
adc
add
push
es
jp
sub
andl
lret
jo
xor
cmp
mov
jo
pop
loop
data16
or
mov
xchg
test
int3
sahf
rcrl
fwait
test
dec
adc
dec
shrb
mov
lahf
mov
sbb
movsl
xchg
jg
sbb
mov
xchg
mov
mov
repz
lods
jo
ret
fsub
mov
sbb
shlb
mov
rolb
pop
xor
inc
addl
lock
inc
mov
cmpsb
cmc
into
test
pop
xlat
subb
roll
cmp
mov
mov
clc
sbb
cmp
inc
lcall
dec
and
je
lea
and
sbb
xor
ret
or
fnstcw
cmp
aas
es
and
inc
jb
enter
icebp
push
add
and
std
and
icebp
andl
fiaddl
fsubs
pop
ljmp
dec
insb
clc
or
cli
lods
mov
jo
movl
imul
adc
mov
sbb
test
mov
sbb
hlt
xlat
nop
loope
mov
mov
in
loope
aad
push
lcall
sub
hlt
adc
roll
pop
cld
xchg
add
lea
rcrb
jne
push
sub
sbb
loopne
adc
rcrb
jl
sub
add
mov
insb
or
lds
pop
jg
pushf
dec
sbb
out
xchg
lret
xor
int
addr16
aas
mov
mov
loope
pusha
cmove
faddl
stos
and
jg
les
dec
inc
push
mov
and
loopne
xchg
mov
inc
jbe
insl
fisttpl
inc
adc
leave
test
pop
or
push
xor
mov
or
mov
sbb
ljmp
lret
call
inc
es
pop
mov
cli
or
shrb
rcrl
das
rorb
inc
jb
dec
hlt
mov
in
jo
rcrl
scas
inc
push
lock
push
add
add
push
sub
jge
cmp
jge
ljmp
lret
add
ret
or
mov
arpl
push
loop
mov
mov
xchg
and
xor
test
inc
push
int3
and
dec
inc
shl
mov
mov
ficomps
ss
add
push
add
out
inc
push
jnp
sbb
jp
sub
push
cmp
rol
movsb
pushf
add
rorb
jno
stos
pop
leave
ret
ret
adc
mov
or
sahf
and
sub
fsubl
and
or
lret
jmp
xor
or
inc
push
lcall
cmc
out
outsl
imul
aam
cld
push
jo
jge
xor
mov
lds
add
xor
test
loop
iret
xor
lea
or
repz
arpl
lret
mov
or
adc
movsb
sub
lea
pop
insb
aas
cmp
enter
push
xor
inc
sbbl
out
into
adc
push
xchg
hlt
mov
aad
shlb
cmp
push
nop
push
push
popa
rcrl
adc
test
xchg
adc
mov
aam
xchg
sub
mov
rol
dec
xor
std
jmp
xchg
ss
mov
insb
shll
adc
div
fstpt
hlt
xchg
rcrb
repz
xor
rolb
inc
clc
mov
aas
imul
xlat
inc
pop
daa
pop
popf
sub
out
out
pop
lock
push
outsl
in
pop
arpl
dec
movsb
shlb
daa
and
pop
add
in
in
sub
mov
test
add
add
fwait
or
lret
jno
push
cmpsb
lock
add
push
daa
push
hlt
mov
inc
and
int
in
mov
inc
dec
filds
movsb
sbb
inc
jl
jmp
cmp
mov
or
or
push
sbb
test
icebp
and
push
or
in
clc
dec
insb
sbb
into
push
pushf
mov
pop
pop
pop
mov
daa
inc
pop
sar
mov
lret
xorb
jp
jg
inc
inc
inc
in
int
cmc
outsl
pop
cmp
insl
cwtl
push
enter
or
adc
loop
mov
adc
jo
lock
inc
sub
rorb
mov
sarb
fcoml
ret
shrl
inc
inc
xchg
es
ss
test
mov
stc
inc
and
mov
jne
movsb
movsb
loopne
and
xchg
push
ret
dec
and
ret
or
mov
pushf
fmuls
add
sub
lea
and
ja
jns
lods
lahf
jp
repz
hlt
push
ljmp
pop
cmp
add
xchg
in
jae
iret
sub
leave
inc
lahf
ret
adc
pop
mov
repz
push
out
fcomp
jno
inc
cmp
rolb
sarb
sbbb
dec
ljmp
test
add
add
sbbl
pusha
jo
je
test
inc
jg
repz
pusha
inc
mov
mov
jmp
mov
jg
jne
sub
popa
cmpb
xchg
test
int3
inc
mov
loope
xor
pusha
insl
adc
mov
adc
dec
incl
lods
lock
jo
psubusb
sbb
movsl
cltd
add
not
pop
jmp
stc
negl
cmp
lcall
sub
jne
push
inc
sub
mov
push
cld
push
sbb
xor
xchg
sbb
adc
xchg
pop
push
push
das
cmpsb
vmovsd
or
add
or
inc
sub
xor
rclb
jne
add
mov
imul
pop
or
es
inc
pop
xchg
add
cmp
bound
mov
sbb
pop
jne
fdivrs
lahf
jns
add
or
pop
insl
mov
call
xchg
jae
fdivl
call
mov
sub
test
je
psrlq
inc
push
test
inc
leave
and
movsb
pusha
mov
movl
outsl
inc
and
jmp
cmp
rcr
mov
stos
testb
arpl
fimuls
loopne
ficoms
popa
and
inc
lea
imul
mov
xchg
inc
mov
shrb
jo
cli
sub
sti
popa
inc
sbb
pop
lcall
jb
clc
adc
mov
adc
mov
test
mov
xor
jge
scas
bound
test
jo
pusha
pusha
loop
mov
movsb
call
pop
fdivs
rolb
or
ret
jbe
movsb
imul
mov
sub
mov
in
or
lea
fwait
and
lods
pusha
rcll
movsb
mov
add
cmove
popf
pop
cmpsl
or
lock
mov
sub
roll
insl
or
and
aam
rcrb
mov
roll
xor
xchg
xchg
movsb
lock
psubb
jbe
push
sub
sub
push
rcll
mov
imulb
sbb
push
mov
into
and
jnp
aam
and
nop
or
mov
sarl
mov
adc
dec
cld
pushw
mov
iret
orb
in
dec
xor
inc
call
subb
mov
mov
out
out
andb
loopne
lahf
xor
js,pn
or
les
in
jmp
ljmp
push
inc
popa
xchg
fnsave
test
adc
sbb
lock
dec
std
int
aas
test
jbe
pop
xor
psrad
xchg
ss
out
insl
push
test
arpl
fcompl
fs
adc
cmc
mov
out
sbb
and
push
insb
test
cld
push
mov
ror
stc
or
or
sbb
sbb
pop
ss
leave
cmp
xor
pop
xor
cmpsl
push
adc
pop
push
lcall
pushf
cs
test
or
and
gs
cmpsl
xchg
rol
pop
iret
cli
cmpl
push
sbb
inc
sti
mov
push
loopne
fwait
lret
inc
jmp
push
nop
inc
lahf
fcomp
lock
and
imul
mov
rol
jge
sbb
jecxz
jne
add
fnsave
or
int3
sub
pop
inc
mov
out
fistl
scas
jbe
aas
or
adc
jnp
pop
adc
or
pop
into
fs
mov
daa
jo
add
jo
bound
in
pop
in
aam
movsb
dec
mov
adc
cmpsb
dec
xchg
mov
dec
stos
andb
mov
lds
lea
push
sbb
xor
mov
mov
sub
jl
jp
pop
mov
shlb
ror
ret
fimull
mov
ficomps
loop
mov
loop
mov
xchg
sub
outsl
cli
in
inc
and
shlb
jle
and
dec
and
pop
sbb
or
out
push
out
add
xor
fadd
rorl
push
add
dec
loopne
fwait
sbb
cmp
jns
sub
aam
and
adc
clc
add
popf
push
iret
dec
mov
cmp
testl
and
stos
fcoms
cmp
inc
pop
push
ja
shrb
push
scas
call
clc
loopne
enter
ret
jb
repnz
or
dec
mov
xorb
cmc
lock
push
andl
add
xchg
clc
popa
cmp
pusha
inc
pop
in
dec
daa
xor
movsb
cs
xchg
jle
mov
ss
hlt
mov
adc
lods
mov
movsb
mov
rcrb
clc
add
mov
mov
xchg
clc
pop
jnp
fisttpll
repz
ret
cli
add
jb
and
adc
fwait
decb
sbbb
mov
push
xor
filds
jns
les
dec
adc
jno
cmp
stos
mov
or
inc
pop
or
shrl
sub
sub
fsubl
or
out
addr16
push
or
repz
push
jnp
add
dec
aas
add
push
sbb
mov
popa
cld
repnz
dec
jne
push
pop
mov
sti
popf
inc
inc
ret
jo
sub
or
outsl
test
push
mov
and
mov
lret
add
cmp
daa
dec
xchg
fmul
xchg
mov
les
clc
movsb
lds
mov
hlt
pop
cmpb
lods
xor
clc
dec
pop
xchg
pop
add
pop
sub
pop
dec
mov
dec
out
sub
lea
stos
add
add
jecxz
lahf
shl
or
cmp
add
rcrl
jle
pop
call
xchg
out
scas
mov
insb
mov
loop
call
mov
push
jmp
and
ret
icebp
aas
rorl
jb
xor
repz
jle
outsl
ljmp
pop
xchg
pop
addl
dec
sub
mov
and
xor
inc
fstl
mov
aaa
in
cmpsb
lahf
mov
lock
or
bound
mov
pop
stc
les
sbb
pop
insb
aam
lds
es
sbb
jp
lret
inc
xor
push
cmpsl
add
pop
add
sahf
mov
add
push
lret
pop
mov
mov
lcall
hlt
or
mov
mov
arpl
xchg
xorl
out
dec
inc
lock
out
mov
add
ret
ret
add
cmpsl
cwtl
dec
ljmp
fwait
sub
out
dec
call
jo
push
adc
add
mov
mov
rorb
add
cld
movl
add
mov
mov
xchg
add
sub
test
jnp
cmpsb
sub
fcomip
jle
push
hlt
dec
cmp
jns
add
push
pminsw
dec
sbb
xor
js
mov
adc
mov
mov
cmp
mov
mov
jp
jle
push
divb
push
mov
xchg
insb
jne
aam
sub
sbb
stos
shr
daa
js
or
cmc
sarb
dec
pop
dec
sbb
cmpsl
icebp
sbb
test
loope
push
arpl
jbe
mov
cmp
sarb
xchg
pop
loop
or
sbb
pop
sbb
loope
xchg
insb
pop
xchg
xchg
movsl
mov
test
sahf
push
lds
add
sbb
setge
mov
pushf
enter
jp
aas
repz
inc
xchg
mov
push
daa
lret
mov
fadds
rol
jnp
push
pop
and
jb
or
push
cmc
insl
or
dec
cltd
inc
icebp
shr
imul
add
cmp
nop
cli
cwtl
imulb
pop
fwait
cmp
push
insl
xchg
inc
loopne
mov
adc
arpl
jnp
mov
rcll
xor
cmc
push
inc
test
fadds
roll
mov
stos
fbstp
add
out
inc
or
xchg
push
je
fildll
sub
push
and
das
pop
fcmovnb
dec
gs
add
push
iret
ss
xchg
add
xchg
pop
test
sarl
gs
inc
hlt
adc
mov
push
and
inc
movl
pop
enter
stc
pop
adc
mov
scas
sbb
cltd
shr
sub
lock
fdivrs
stos
fnclex
mov
lahf
mov
push
sbb
mov
jl
push
ret
repnz
fimuls
incl
repz
setb
or
orb
stos
xor
jl
mov
xchg
cltd
outsb
dec
test
movsb
out
xchg
dec
push
rorl
roll
loope
jp
mov
inc
rcrl
orb
push
ds
sahf
ret
lahf
jno
add
push
and
scas
mov
inc
push
xor
rcrl
loope
sub
sti
cmp
mov
push
das
adc
ret
out
xlat
mov
jb
ja
andl
movsb
and
cli
sarb
das
dec
jnp
sar
je
rorl
dec
pop
ss
inc
bound
int
dec
iret
inc
adc
test
movb
sbb
movsb
int3
adc
insb
ljmp
les
add
sti
xor
dec
mov
scas
pop
loopne
dec
imul
jne
and
xor
rcrb
cmp
sbb
and
lock
pushf
dec
pop
add
jmp
cmp
add
adc
push
push
add
pop
pop
bound
bound
xchg
pusha
fld
mov
subl
jl
lret
mov
mov
pop
loop
pop
cltd
mov
xor
or
in
or
int
pop
add
sbb
adc
inc
push
in
lret
add
mov
and
dec
jp
inc
or
imul
out
mov
fsubl
jnp
insl
clc
mov
inc
mov
es
sub
int3
pop
cmp
push
loop
mov
sub
mov
in
push
adc
pop
adc
ds
mov
xchg
fistpll
or
cmp
sub
xchg
out
cmc
lret
stc
pop
outsl
bound
pusha
adc
decl
pop
push
jecxz
pop
cmp
daa
out
int3
movsl
lahf
lcall
scas
adc
or
push
pop
mov
mov
push
cs
sbb
push
push
inc
cwtl
and
cwtl
add
and
xor
sarl
ficomps
mov
push
push
pusha
arpl
mov
and
or
cmc
sub
clc
jge
enter
cmp
push
push
popf
sub
ret
popa
inc
mov
push
sbb
jb
loope
lods
fimull
pusha
xor
pop
pop
out
adc
das
insb
imul
xchg
hlt
clc
inc
pop
std
jp
mov
aad
sbb
inc
or
ja
popf
xor
sbb
mov
out
leave
adc
adc
loope
push
push
iret
arpl
sub
in
push
mov
aas
pop
push
insl
pop
clc
xor
js
in
cs
addl
push
ss
jo
jo
iret
push
pusha
call
mov
sub
aaa
stos
je
inc
pushl
loope
jae
cmp
sbb
fadd
mov
mov
push
loope
dec
jmp
fistps
rolb
adc
rolb
push
lds
xor
mov
shr
clc
loope
imul
imul
les
or
or
push
or
cmpsb
dec
xchg
test
icebp
pop
pop
mov
jnp
aam
shrl
add
repz
push
les
sbbl
mov
push
push
mov
jo
js
adc
test
lea
adc
add
rclb
cmpsb
mov
pop
cmp
fisubrl
jmp
shl
add
scas
xchg
popa
or
xchg
lret
and
sbb
inc
scas
lock
jge
xchg
xchg
jle
xchg
imul
daa
sub
hlt
inc
arpl
add
out
fimuls
test
inc
pop
mov
mov
movsb
xchg
aas
lret
sahf
lds
mov
xchg
test
mov
test
in
or
shlb
shlb
jno
adc
lock
out
sub
add
sbbl
push
cmc
hlt
fsubr
dec
aas
sub
pop
and
dec
mov
add
push
das
cmpsl
dec
roll
and
js
xchg
xor
test
js
mov
shlb
mov
inc
mov
arpl
dec
pop
fneni(8087
sub
cmpsl
sbbl
sub
add
dec
fsubs
xchg
xchg
pop
ss
out
add
push
add
test
pop
add
sub
incb
lret
or
cmpsb
insl
sbb
orb
xchg
jecxz
push
pop
adc
or
add
sub
pushl
xor
pop
rcll
call
loopne
cmc
ret
cmpl
pop
mov
inc
shr
and
xor
push
sub
add
pop
inc
mov
cli
and
js
in
ds
mov
dec
cmp
and
or
inc
mov
add
push
inc
inc
pop
push
jle
int
jo
cwtl
in
pusha
lea
fdivs
incl
scas
ds
pop
push
xchg
push
pop
cmpl
jo
in
mov
repz
adc
andb
into
hlt
mov
dec
fsubrl
sbb
adc
dec
inc
mov
out
mov
out
mov
daa
pop
xor
cmp
cld
testl
aam
pop
xor
add
jge
cs
dec
inc
movsl
or
into
cltd
xor
adcl
rcrl
bound
push
scas
sbb
or
jle
lret
dec
insb
outsb
cwtl
jecxz
shll
ljmp
ljmp
add
mov
sub
mov
jbe
xchg
jb
aaa
into
pop
cmp
mov
adc
pushl
xchg
js
sbb
sbb
jo
push
addl
xchg
jae
inc
cwtl
ficompl
xchg
jl
and
mov
into
cmpsb
icebp
iret
shl
push
push
pusha
loope
int
cli
push
push
jle
mov
adcl
add
push
and
mov
daa
sbb
jg
leave
mov
es
icebp
add
mov
bound
push
jl
pop
mov
mov
xor
into
loopne
xchg
pop
dec
xchg
shlb
jno
incb
cmp
pop
dec
movsb
jge
xor
push
int
sbb
xchg
bound
fbld
or
cmp
fnop
in
bound
call
sbb
filds
xor
cli
add
scas
notb
clc
fdivrs
sti
mov
sub
ds
sbb
push
cmpsl
dec
rcl
ret
inc
adc
aad
dec
adc
fstpl
aad
fsubs
std
adc
jae
sbb
addr16
jp
mov
mov
or
rclb
pop
in
adc
loopne
lret
pop
clc
cli
mov
lahf
ret
xor
lock
or
dec
mov
pause
lcall
sbb
lret
aaa
lret
fs
mov
lcall
xchg
pop
pop
mov
dec
mov
adc
pop
ds
sub
jo
or
inc
test
sarb
sti
cmp
shlb
jecxz
int
push
pop
add
addl
sbb
jl
mov
test
or
jp
scas
popf
add
stos
cmp
pop
ret
insb
lmsw
adc
and
faddl
dec
cmp
pop
push
dec
es
arpl
js
insb
leave
xchg
test
add
jp
sub
sbb
es
std
jmp
lret
inc
push
ljmp
mov
test
inc
sbb
sub
cmp
push
rcl
mov
dec
rcll
jbe
jb
dec
arpl
ss
xchg
push
cld
xchg
mov
fisttps
movsb
push
popa
stos
popa
fiaddl
jecxz
push
and
leave
mov
sub
cmp
outsb
cwtl
jo
and
fldenv
fmuls
incb
jo
js
dec
ret
into
sub
cmpsb
pop
int3
nop
pop
mov
sbb
xor
out
inc
shlb
roll
es
int3
jle
mov
orb
mov
test
cmp
cmp
hlt
add
jno
pop
cwtl
mov
sbb
fadds
lods
jg
mov
lret
loopne
inc
push
movsl
pop
pop
lea
xchg
test
adc
test
xor
jp
imul
xor
shlb
xchg
sub
lds
jne
loopne
pop
ds
dec
adc
adc
jne
lea
shr
pop
pop
es
or
pop
lods
pop
aaa
pop
add
inc
xchg
add
leave
adc
rcrl
ss
add
mov
add
pop
jecxz
dec
add
clc
pop
adc
in
out
loopne
rol
test
xor
cmp
insl
pushf
inc
push
add
mov
xlat
push
pop
dec
test
lret
or
jecxz
lret
pop
hlt
inc
sti
or
aad
jns
sub
xchg
movsl
out
flds
icebp
xor
mov
adc
push
jl
adc
or
inc
cld
in
loope
cld
sbb
xor
pushf
sahf
stos
xor
and
mov
or
loope
jp
mov
jl
andb
lea
pop
es
in
cpuid
add
dec
and
xor
nop
iret
push
mov
cmp
jo
aaa
cltd
pop
xor
pop
push
pop
adc
rcl
dec
mov
loopne
mov
xor
jp
push
nop
cmpl
outsb
inc
in
xor
and
fisubl
push
mov
sub
push
hlt
and
cld
sub
and
inc
leave
cmpsb
aam
pop
lods
fisubrl
hlt
int3
mov
add
mov
adc
adc
lea
adc
jo
mov
test
das
xor
fdivr
imul
and
jp
pop
add
sbb
cmc
mov
and
test
sub
mov
movsb
and
pop
jns
out
pop
movsl
imul
mov
ret
lods
push
dec
sbb
loop
inc
notb
push
popa
xor
call
or
icebp
aam
cmpsl
mov
add
pop
jns
lea
fidivrl
lock
inc
or
andb
mov
adcl
cmpsb
push
dec
mov
mov
out
push
mov
dec
jne
push
pop
mov
and
pop
adc
loope
mov
dec
mov
inc
arpl
loop
sbb
cmp
rorl
ljmp
mov
test
cmpsb
inc
ficompl
js
sti
not
loope
ret
addr16
mov
mov
xor
add
ja
adc
hlt
lds
into
insb
stc
adc
call
lcall
mov
incl
ds
sub
popl
insb
mov
int
outsl
xor
jecxz
sbb
xorl
mov
call
shr
in
push
or
xor
loopne
leave
sbb
movsl
mov
and
int3
xorl
in
fdivs
popf
mov
mov
lock
sbb
inc
and
je
cmpl
pop
sub
jbe
in
aas
mov
mov
gs
pusha
lods
rol
stos
xchg
cs
test
scas
ret
adc
ja
outsb
lahf
popf
xchg
pop
data16
outsl
mov
cli
push
dec
test
pusha
loop
and
sbb
cmp
inc
loopne
lret
jecxz
jle
xor
hlt
add
sbbb
sub
rcl
movl
lret
lock
ds
je
and
xlat
xor
test
push
clc
mov
data16
adc
clc
out
push
adc
test
mov
int
daa
jo
mov
sahf
adc
xor
xchg
pop
push
loop
mov
popf
testb
add
lods
pop
fstpl
inc
imul
jmp
push
imul
test
or
inc
jecxz
cltd
into
push
sbb
arpl
cld
or
xchg
push
dec
cmp
adc
push
stos
sub
mov
mov
inc
pop
imul
pop
mov
cmpsb
js
push
mull
fldlg2
js
mov
ja
jmp
mov
scas
mov
dec
mov
loope
adc
adc
dec
cmc
lret
cltd
loop
pop
orb
enter
cmp
inc
or
inc
adc
testl
push
jp
lret
lahf
cmc
movsb
int
outsb
xchg
push
sub
sub
int
sbb
repz
jnp
sti
jo
inc
hlt
pop
jp
in
icebp
imul
add
pop
xor
test
cld
in
mov
xchg
pop
jg
push
mov
roll
inc
adc
xor
cmpsb
jbe
mov
in
mov
jp
rcl
and
ret
add
cld
fcoms
adc
aad
shr
xor
cmp
sub
jae
into
gs
jmp
push
lcall
cmp
insl
pop
push
ljmp
or
repnz
cmc
nop
in
dec
cmp
das
iret
pop
xchg
or
jl
push
in
push
sub
stos
pop
mov
ret
and
jl
mov
imul
daa
xlat
sub
je
xorl
jno
cmp
fildl
into
jnp
shlb
adc
ljmp
cmc
inc
push
mov
incl
jbe
fstpt
arpl
imul
cli
sahf
sbb
daa
repnz
insb
sbb
mov
mov
fstp
or
loop
js
add
jno
jmp
pop
aaa
stos
ret
cld
sbb
xchg
xor
mov
sub
mov
call
xlat
mov
loop
lret
and
ret
aad
add
lahf
ja
inc
lret
je
xor
stos
dec
shrb
mov
les
out
sbb
imul
movsl
push
add
add
and
xor
fwait
xchg
cli
add
and
xor
gs
test
sbb
icebp
mov
cmp
and
push
ja
xchg
push
jmp
js
daa
cmp
hlt
add
xchg
js
loopne
test
out
cmp
scas
inc
pop
xor
dec
je
inc
enter
cmpb
sarb
inc
mov
mov
stos
inc
mov
daa
sub
jnp
sahf
lock
jb
and
into
int3
loope
jmp
dec
or
fcmovnu
add
cli
add
sub
shll
pop
mov
movsl
out
sahf
push
mov
adc
mov
cmpsb
sbb
push
loop
inc
in
jns
add
pop
stc
iret
test
scas
popa
ss
adc
inc
jp
jmp
mov
mov
jp
push
jno
inc
cmp
mov
shlb
and
and
pop
popa
insl
xchg
rorl
incb
cmp
pop
cmp
push
arpl
sahf
mov
js
inc
stos
lods
addb
push
push
rcll
daa
shll
fwait
mov
popa
adc
ljmp
mov
subb
and
rol
shll
decl
fimuls
test
fwait
xchg
cmp
insl
mov
lock
dec
mov
cmp
push
jo
data16
cmp
push
or
and
out
jg
mov
loop
dec
negb
mov
jmp
repnz
push
fnsave
enter
inc
adc
test
scas
sbb
mov
push
xor
mov
fwait
rcll
jge
outsl
cld
pop
sti
xchg
pop
call
stos
ja
in
fxsave
mov
jge
mov
pop
sbb
pop
add
jne
and
xlat
add
je
mov
dec
out
lock
add
push
xor
fists
lea
icebp
cmc
cltd
test
loopne
mov
jae
cmp
fs
add
popa
push
lret
das
xor
stc
inc
push
inc
shrl
and
je
or
icebp
dec
ret
fimull
push
clc
movsl
dec
mov
push
clc
scas
out
xchg
sbb
into
inc
push
push
jbe,pt
mov
push
pusha
and
lock
xchg
lods
add
sub
pop
cmp
push
inc
aas
addb
add
mov
inc
notl
test
mov
cld
je
repnz
inc
cli
test
xor
aas
mov
ror
das
adc
fwait
push
pop
cmp
fiaddl
enter
inc
sbb
roll
mov
ljmp
repz
mov
cmp
mov
dec
sub
nop
jmp
repz
cli
cmp
addr16
movsb
xchg
dec
pusha
push
pop
pop
dec
lret
add
add
or
mov
xor
push
test
jl
push
inc
mov
and
fs
or
popa
je
shl
inc
xchg
pop
add
mov
sbb
inc
lret
insb
push
xchg
movsb
ss
mov
jecxz
ret
xchg
cmpsb
test
mov
ret
and
push
lcall
adc
xor
mov
call
loopne
and
and
or
sahf
push
jg
clc
lock
mov
insl
cld
mov
faddl
dec
push
das
decb
adc
pushf
lret
hlt
out
sti
scas
push
mov
ja
sbb
pop
jl
and
cmp
in
jns
sub
jmp
sub
mov
and
sub
pop
and
iret
hlt
sti
js
fstpt
pop
xchg
pop
and
fmull
dec
jmp
int
shll
sub
jp
sbb
rcr
mov
into
cmc
push
dec
add
mov
ljmp
mov
sub
inc
xchg
mov
push
sahf
xchg
adc
outsb
inc
loopne
xorb
or
subb
adc
scas
push
jle
andb
dec
add
stos
outsl
adc
nopl
rolb
popf
cmp
popa
cmp
mov
sbbb
sub
shr
ja
aam
pop
inc
sub
jns
fdivl
orb
dec
das
adc
dec
cmp
das
lret
dec
sbbl
inc
jno
stc
push
pop
js
shl
or
pop
mov
or
sar
cmpsb
cmovb
sbb
aam
xchg
add
test
stos
cmp
shl
pop
adc
pusha
mov
insl
inc
movsb
insl
rcr
arpl
lds
ret
mov
addb
lods
jmp
scas
sbb
jo
mov
cmc
jb
imull
sub
jl
cmp
add
push
or
jae
test
lahf
fsubrp
sbb
add
test
add
push
int
das
jo
aaa
xchg
add
int3
orb
loop
mul
popa
inc
cmc
ds
or
inc
notb
lock
lea
and
dec
ss
les
dec
fidivrl
add
sbbb
adc
and
push
cli
xchg
sub
mov
outsb
inc
and
shll
push
jle
test
loop
xlat
mov
in
dec
or
add
iret
add
sub
or
pusha
jp
add
sbb
xor
dec
cli
push
sahf
stos
and
xor
aad
dec
call
mov
test
dec
addr16
negb
inc
adc
adc
shlb
push
ret
inc
cmp
andl
int3
lock
ljmp
push
sbb
fisttpll
jg
pop
test
cli
lds
push
das
in
int3
push
out
jp
out
push
jecxz
xor
pop
repnz
pop
jmp
inc
cld
stos
nop
inc
or
int
xchg
pusha
bound
inc
cmp
pusha
mov
adc
xor
outsl
push
jmp
mov
push
loopne
rclb
sbbb
sbb
mov
stos
lods
cld
adc
mov
sbb
xor
jl
sbb
dec
xor
sub
ljmp
std
dec
pop
sub
insl
add
dec
xchg
aad
or
clc
mov
pop
cmpsb
mov
movups
mov
add
mov
cmp
or
jno
sbb
adc
aam
ljmp
add
addl
mov
clc
jg
jb
push
jle
adc
bound
xor
add
jl
push
jle
pop
imul
inc
inc
notb
pusha
cmp
out
push
push
shlb
lret
or
push
dec
rcrb
cmp
enter
es
xlat
dec
lret
sbb
add
pop
add
aad
dec
sarl
shl
daa
xchg
lods
push
cmp
hlt
movsb
and
subb
mov
mov
adc
sahf
push
mov
adc
ret
aam
loop
call
cmp
je
loopne
mov
mov
orl
cmpb
or
cmp
adc
test
rorb
inc
adc
pushf
push
call
cwtl
mov
inc
add
rcl
jecxz
imul
cmp
lock
cmp
cmpb
adc
sbb
jge
gs
mov
icebp
sbb
iret
ret
repnz
inc
cmp
or
fcoml
sar
movsb
pop
mov
pop
lds
and
cmp
adc
add
pop
xchg
push
jmp
stos
rcrl
ljmp
lds
or
stos
pushf
mov
repz
add
imul
loopne
mov
xchg
mov
clc
out
push
inc
pushf
adc
addr16
mov
add
inc
jg
jb
push
pop
cmp
out
mov
mov
push
cmp
mov
sub
test
pop
and
ret
fldenv
sbb
mov
dec
repnz
mov
inc
ret
arpl
xchg
lret
ljmp
mov
cld
mov
dec
mov
repz
fdivrs
add
mov
and
adc
sbb
mov
dec
inc
bound
sub
shlb
divl
jp
lret
and
mov
jb
popa
or
inc
test
test
fmull
clc
xor
movsb
insb
cmp
pop
sbb
hlt
xchg
cmc
lds
mov
rorb
aam
xor
cld
dec
push
sub
push
push
js
in
sub
pop
inc
adc
inc
mov
sbb
movsb
push
xor
and
mov
cwtl
jbe
stos
fadds
jl
pop
loop
gs
mov
cmpsb
jmp
rol
jle
sarl
insb
arpl
outsl
mov
dec
nop
add
lock
sbb
dec
and
cli
pop
mov
movsb
xor
adc
mov
inc
cmp
lret
cmc
mov
out
andl
test
inc
ret
jne
sbb
sbb
mov
mov
cmp
jo
hlt
hlt
add
ljmp
movsb
pop
pop
ds
add
ss
xchg
imul
mov
mov
mov
pop
mov
push
rcl
shl
inc
clc
mov
rcl
testb
mov
add
and
mov
jle
idiv
push
nop
lds
outsl
cltd
inc
pop
push
mov
in
sub
out
mov
xchg
pop
pop
stos
mov
pop
rclb
push
incb
push
int3
scas
inc
fdiv
and
loop
lcall
outsl
pop
mov
imul
and
sbb
lahf
dec
sub
push
fdiv
cmp
inc
mov
jmp
xor
and
mov
clc
mov
mov
int3
mov
mov
mov
sbb
push
fnstenv
mov
xchg
out
pop
pop
adc
sti
add
cmc
int3
ss
movsb
outsl
push
bound
mov
mov
in
or
fs
push
loope
arpl
call
adc
lock
add
pusha
sbb
or
pop
sbb
push
rclb
sub
addb
xchg
mov
ret
insb
add
lds
outsb
xor
push
xchg
inc
lahf
mov
pop
enter
sarl
ret
rolb
add
ret
mov
dec
out
lcall
fsubs
sub
dec
mov
movsl
and
loopne
gs
lds
daa
xlat
roll
sub
pop
push
dec
or
out
xlat
fisubl
or
or
movb
push
lds
jge
or
dec
nop
jg
pop
cmc
movsl
roll
push
and
xlat
dec
ljmp
dec
rolb
loopne
and
and
mov
mov
pop
cmp
inc
enter
or
je
test
xor
mov
inc
xorb
andb
mov
pushl
jmp
mov
dec
test
add
mov
ret
mov
out
cli
les
jo
call
cmp
lret
inc
mov
mov
int
aad
or
hlt
lock
or
rorb
lcall
mov
roll
les
nop
mov
movsl
pop
nop
dec
sbb
ja
pop
js
lcall
das
jle
or
inc
in
mov
jmp
sbb
mov
cmp
cmp
push
call
addr16
loop
mov
mov
mov
push
sub
aaa
loopne
cmp
loopne
pop
in
mov
push
bound
pop
dec
stos
xlat
mov
jb
insb
in
cmp
cli
rcrb
xor
mov
pop
cmp
mov
test
cmpsl
pushl
xchg
stc
nop
sbb
test
push
or
pop
fdivs
rorl
enter
pushf
pop
fisubs
inc
add
in
xchg
pop
push
or
jo
lods
xchg
lret
hlt
or
je
aad
mov
xadd
outsb
inc
mov
rclb
add
cmpsl
inc
std
cs
pop
jae
push
pop
sub
jl
or
dec
fistpll
pop
cwtl
jecxz
xchg
mov
mov
push
dec
roll
clc
mov
push
lea
mov
int
push
rcrb
fs
push
adc
pop
call
aad
js
adc
imul
cltd
push
mov
insb
lds
cmp
sti
or
jmp
jbe
xchg
add
clc
xor
aam
inc
xchg
clc
mov
xor
lods
loop
mov
cwtl
xchg
jmp
aas
mov
outsb
and
xchg
out
pop
in
ljmp
mov
aas
fsubs
outsl
add
pop
test
mov
xchg
xchg
sub
cmpsl
andl
lods
cmpl
sbb
data16
jno
and
dec
cltd
adc
inc
shlb
dec
push
mov
ficoms
movsl
adc
inc
int3
je
mov
test
or
rorb
and
mov
pop
sbb
mov
outsb
es
jb
rorl
call
lods
std
add
mov
mov
insb
xchg
mov
lret
xor
aam
xchg
fwait
jno
pop
or
inc
nop
fwait
or
xchg
out
jmp
xor
fisubl
jg
cmp
jb
cld
adc
xor
ljmp
xor
xlat
call
jae
scas
inc
push
repnz
popl
adc
fdivr
add
cltd
pop
aad
xor
gs
push
es
hlt
cmpl
push
out
cli
mov
das
into
inc
jnp
add
inc
fsubrs
jo
lods
pop
out
inc
cld
jecxz
scas
mov
xor
jb
add
mov
loope
in
mov
js
pushf
push
xorl
sbb
insl
mov
xchg
mov
dec
xchg
lahf
add
ds
enter
sbbb
rcrb
cmp
xchg
mov
mov
or
or
incb
lahf
add
rcl
jl
popa
js
sbb
adc
xchg
push
push
test
mov
jl
add
sub
mov
push
xchg
lods
fadd
and
dec
jp
pusha
or
aad
cmc
outsb
jmp
sub
sbb
es
mov
fistpl
jmp
dec
outsb
or
xorb
inc
rcr
test
movsb
ror
fstpl
inc
cmc
call
cs
mov
push
xchg
and
pop
lock
lahf
jmp
jo
std
rcll
and
inc
shrb
aam
pop
sub
mov
jne
or
add
repnz
in
jae
inc
fidivrs
scas
pop
fcoms
sbb
mov
shrb
pop
fucompp
std
bound
lcall
cmp
pop
xchg
loopne
loope
pop
dec
pop
call
xor
mov
dec
and
or
fisttpll
or
mov
mov
insl
push
jns
cwtl
lcall
mov
push
or
or
in
cmp
xor
push
and
ud2
cmp
ret
je
mov
or
scas
pop
and
outsb
into
jge
mov
lods
sahf
push
sub
mov
inc
fucomi
sub
sbb
push
dec
mov
dec
inc
ret
pop
int3
int
add
mov
jae
dec
rcrb
xor
int
into
imul
das
push
ret
stos
ja
or
adc
sbb
stos
jle
add
push
and
hlt
add
int3
add
rorl
scas
rol
inc
add
jae
shrl
or
adc
inc
mov
pop
pop
sub
adc
inc
mov
dec
sbb
cmpsl
into
adc
dec
fidivrl
push
movsl
shl
bound
jp
imul
push
inc
les
inc
push
sbb
inc
out
mov
in
lds
jge
jmp
pop
sti
pop
sbb
inc
mov
or
xchg
shlb
loopne
es
and
xor
mov
pop
loopne
sbb
nop
or
pop
xchg
add
lea
sub
ljmp
push
cmp
cs
addr16
sbb
mov
enter
mov
add
mov
es
push
mov
lahf
cmp
outsb
sti
rcrb
inc
push
subl
out
mov
das
imul
xchg
mov
sub
pop
mov
and
es
sar
mov
sbbb
or
outsl
fsub
or
pop
push
int
movsb
mov
repz
push
imul
inc
pop
loopne
pop
neg
movl
adc
jecxz
inc
pop
mov
aas
mov
and
sub
pop
adc
add
mov
jo
xchg
inc
jmp
mov
call
sbb
jb
adc
shll
rorb
movb
stc
and
stos
xchg
ds
fbstp
inc
inc
ds
orl
dec
sbb
xchg
or
pusha
or
add
sbb
imul
and
push
push
leave
add
loop
sub
adcb
jo
fildll
bound
jmp
inc
ret
push
cltd
xchg
in
xchg
or
or
aaa
mov
cwtl
stos
mul
repnz
out
push
sbb
shl
sbb
xor
and
xchg
xchg
ljmp
mov
inc
mov
xchg
xor
jecxz
stos
jp
add
dec
push
xlat
lea
lock
mov
shll
mov
jecxz
push
fmull
divl
xchg
arpl
or
mov
or
or
mov
shll
mov
ja
add
dec
adc
popa
stos
ret
shlb
dec
jl
sbb
or
sbb
jl
add
inc
mov
les
jbe
cs
cmp
mov
or
dec
cmp
stos
inc
in
mov
test
pop
popa
cmpsb
aad
stc
in
cmpl
out
lds
lock
shl
gs
or
push
aaa
push
dec
push
xor
sub
in
adc
xchg
jns
xchg
push
or
inc
dec
loopne
inc
insl
les
inc
add
ja
ficompl
rcll
addl
cmp
or
sub
inc
cmp
test
add
jo
xchg
mov
in
adc
and
push
pop
js
add
sbb
int
out
popf
fadds
push
mov
inc
ret
or
pop
movsbl
pop
jge
sub
lock
insb
ss
loope
repnz
sbb
mov
dec
mov
inc
and
push
call
fists
or
dec
cmpsb
lret
sbb
sbbl
cld
hlt
and
aaa
adc
or
push
cmpsb
push
jg
sahf
lea
add
cmp
cs
push
cmp
and
mov
fimull
xor
mov
xchg
mov
lcall
mov
lds
mov
add
mov
push
sbb
mov
mov
roll
cmp
test
push
mov
iret
push
add
ljmp
bound
in
or
mov
jle
push
out
and
imul
call
shl
sarb
imul
mov
xchg
gs
mov
xchg
les
daa
inc
cli
lcall
hlt
mov
cmp
aas
mov
lods
sti
bound
mov
cmp
ja
mov
adc
cmp
xchg
adc
push
adc
movsl
xorl
xor
std
subb
clc
inc
scas
push
loopne
dec
rorl
add
or
adc
lds
xchg
test
inc
xor
sbb
cmp
movsl
mov
jo
dec
inc
xchg
leave
mov
movsb
push
sbb
xor
or
je
cmp
lret
bound
lock
movb
jno
outsl
call
negb
add
cmpsb
imul
mov
sub
call
jo
in
jmp
xchg
sarl
jmp
add
push
jl
insb
inc
adc
inc
sub
loope
pop
push
int
jno
cmc
dec
scas
dec
dec
ja
es
dec
pop
cmp
adc
mov
xor
inc
cmp
imul
cmp
ljmp
dec
clc
push
push
clc
pop
mov
mov
fidivl
lret
mov
pop
sbb
xchg
orl
rclb
inc
aas
cmc
outsl
and
jno
fsubrp
insl
inc
sahf
ljmp
xor
mov
repnz
in
leave
mov
push
lea
xor
iret
sar
push
and
xchg
xor
adc
js
and
cs
and
insb
sub
and
call
push
xor
adc
lcall
push
xor
cmp
shll
cmpsb
lret
push
add
arpl
pop
mov
adc
lahf
xchg
out
scas
inc
mov
jne
jbe
ret
xor
outsl
sub
jb
jecxz
aad
imul
adc
daa
xchg
cmp
nop
push
js
inc
mov
shrb
lds
inc
sbb
adc
fdivrp
pop
dec
or
ss
cmpsl
cmp
insl
aad
push
call
cmpsb
test
or
dec
lods
test
pop
stos
inc
mov
xor
mov
sti
movsl
mov
push
or
mov
adc
into
aas
insl
rclb
jle
aaa
inc
js
pop
pop
mov
insl
pop
ljmp
dec
mov
xor
add
sub
mov
test
xchg
xchg
mov
aam
leave
or
and
push
jne
test
shrl
mov
adc
pop
nop
push
xchg
rolb
lret
jl
aad
les
pop
sub
mov
add
std
loopne
imul
and
pop
sti
xchg
xchg
ds
nop
sub
push
mov
jmp
in
stc
rcl
add
or
pop
or
cmp
andb
fincstp
pop
cmp
push
lds
cli
xchg
filds
fcomi
pop
push
mov
lahf
xchg
in
xchg
xchg
xchg
in
sub
loopne
jp
mov
dec
les
arpl
and
je
xor
mov
rolb
lret
pop
out
add
mov
push
sbb
jbe
mov
adc
xchg
test
pop
std
es
xor
into
outsb
test
sub
leave
adc
sti
jg
aad
add
push
cli
or
outsb
sub
inc
dec
push
sbb
mov
in
push
mov
dec
sbb
loope
ret
addl
xor
nop
je
dec
jge
ljmp
mov
loope
out
mov
ret
out
shrl
xchg
rclb
mov
aaa
loop
xchg
cmpsb
inc
sarb
mov
fwait
pop
test
inc
mov
imul
sub
stc
sti
lods
clc
aas
sbb
xor
stos
andl
pop
mov
out
jmpw
inc
push
push
sbb
dec
pop
jns
testl
aaa
xchg
cltd
add
add
hlt
mov
jmp
dec
xchg
xchg
xor
xor
addr16
outsl
push
inc
and
sbb
jbe
push
insb
loope
or
pop
sarl
adc
in
inc
adc
in
mov
subl
fwait
mov
lcall
mov
cmp
roll
loopne
inc
imul
mov
push
cmpsl
cmp
mov
xchg
shrb
cmc
lds
sbb
stos
scas
inc
xor
lods
cmp
dec
in
out
ljmp
out
cmp
sbb
jle
or
frstor
stos
ds
jecxz
stos
xor
jnp
clc
push
andb
push
lea
divl
and
sub
lret
rolb
mov
pushf
ljmp
lret
adc
mov
in
mov
sub
pop
xchg
test
loope
push
adc
imul
cmpsb
js
popa
dec
push
popa
in
inc
fdivr
push
inc
insl
or
sarl
xchg
inc
pop
mov
sbb
fisubrs
xor
icebp
xchg
int3
clc
adc
and
call
je
mov
seta
into
daa
adc
pop
outsb
push
mov
push
imul
sub
stc
cwtl
call
test
dec
fsubr
test
mov
push
mov
inc
jle
push
lahf
mov
dec
das
mov
adc
pop
loopne
xor
fwait
or
cmpsb
mov
jno
aad
das
lods
daa
mov
fbld
out
rcrl
mov
pop
popf
dec
adcl
cmc
xor
loopne
in
mov
inc
rorb
scas
imul
rclb
mov
icebp
cmp
fcom
or
mov
cmp
in
icebp
loopne
sbb
test
in
jnp
rcrb
les
inc
popl
insb
mov
addb
hlt
call
in
ret
inc
sub
push
pushf
and
cmpsb
pusha
imul
xor
jge
and
in
mov
push
sarb
cmp
sub
mov
ret
hlt
cwtl
mov
out
ret
or
dec
mov
adc
pushf
sub
add
push
jae
fwait
jmp
ja
out
sub
fdiv
faddl
dec
sbb
lcall
adc
std
clc
movsb
cmp
das
xorb
and
push
lahf
sub
adc
inc
and
adc
xlat
cs
jmp
sahf
repnz
pusha
mov
test
xchg
push
fnsave
shrl
sbb
xchg
pop
sahf
in
pop
mov
shl
and
dec
cs
mov
mov
aam
xchg
imul
lds
decb
dec
test
rorl
popa
sub
outsl
inc
outsl
sbb
pop
gs
mov
adc
push
dec
shrb
sti
shl
inc
mov
sub
outsl
dec
andl
movsl
cmp
push
ljmp
push
hlt
fisubrl
jecxz
insl
test
mov
xor
fs
imul
xor
test
lock
sub
or
movsb
cmp
test
je
or
cld
mov
aaa
cs
push
xor
movd
mov
inc
adc
mov
das
pop
pop
cmp
and
add
push
lret
push
mov
pop
pop
shrb
enter
pop
jmp
xchg
xor
xor
js
cmpsl
sti
mov
lret
inc
or
int3
cmp
sti
mov
fucomip
jne
ljmp
cmp
add
fidivl
add
cwtl
xlat
add
lea
push
mov
lock
xchg
add
inc
mov
mov
pop
xchg
inc
cmc
clc
xchg
int
dec
lods
das
xor
insl
nop
jb
sbb
mov
dec
and
leave
mov
pop
mov
pusha
pop
icebp
arpl
scas
cli
inc
mov
rolb
int
bound
ja
lods
lock
lret
jle
add
xor
les
pop
pop
or
push
pop
cmp
dec
sbb
lret
iret
cmp
dec
pop
inc
icebp
cmp
sub
xor
xchg
pop
test
xchg
mov
add
decl
sbb
in
movsb
repnz
pop
pop
or
popf
sbb
jne
xchg
dec
out
movsb
testl
daa
cmp
stos
test
jae
mov
push
test
mov
aad
aaa
jle
push
test
mov
inc
loopne
xchg
stos
xor
pop
std
dec
lds
pop
into
repz
pop
pop
or
inc
in
arpl
pop
shl
es
jecxz
cwtl
add
push
jb
xor
cmp
mov
aam
cmp
mov
add
add
insl
pop
adc
ss
cmp
jecxz
int
test
add
ss
ljmp
add
mov
xor
inc
xchg
xor
mov
insb
jle
imull
push
jecxz
lahf
pop
cmp
enter
sbb
mov
les
jnp
movsb
lahf
push
xchg
xor
scas
mov
mov
jle
addr16
mov
inc
push
mov
cmp
ret
mov
lods
dec
mov
push
cmpsb
xchg
pop
icebp
xor
xchg
inc
pop
nop
mov
mov
and
popf
lods
jmp
push
insb
sub
adc
fdivrs
lods
shlb
xchg
nop
pop
or
cwtl
mov
mov
sub
not
and
mov
xlat
inc
sbb
rcrl
scas
pop
test
ret
mov
xor
stos
shr
leave
mov
clc
jmp
push
mov
jmp
lcall
out
sbb
xor
test
ljmp
addr16
inc
dec
sub
lahf
aad
mov
add
icebp
cmp
icebp
loopne
push
mov
push
jmp
dec
and
rcrb
adc
hlt
push
and
push
xor
mov
inc
js
push
test
pop
xor
movsb
mov
fucomp
add
insl
lcall
mov
xor
adc
cmp
cli
dec
mov
sarb
jb
pop
jmp
push
cmp
sub
push
mov
jne
lcall
shr
sbb
scas
iret
gs
xor
jecxz
sbb
inc
mov
mov
push
into
cmp
adcb
lret
mov
lcall
mov
jecxz
cmp
test
scas
idiv
pop
pop
sub
stc
lea
pop
stos
and
fisubrl
sbb
test
push
jbe
test
mov
sti
mov
adc
add
je
and
push
mov
xchg
sub
xor
pop
cmp
mov
push
stos
aam
popa
shll
or
or
nop
cmp
mov
std
fiaddl
lods
scas
sbb
sub
mov
sbb
clc
mov
adc
dec
add
mov
aad
pop
pop
jo
mov
jmp
nop
push
and
mov
in
dec
test
or
cmp
inc
nop
jae
lock
or
xchg
clc
test
cmpsl
or
ja
jp
jmp
mov
mov
xor
dec
and
mov
lods
sbb
clc
mov
jl
sbb
mov
aam
push
add
push
jmp
in
dec
xor
pop
call
sti
loop
pop
je
adc
adc
adc
jnp
sbb
js
xchg
and
push
xchg
adc
mov
mov
negb
andl
push
mov
sbb
cli
add
imul
jmp
mov
fsubs
push
or
xor
pop
test
jno
lcall
call
add
jo
adc
jns
pop
das
lock
shrl
mov
xor
push
cli
pop
arpl
inc
ja
cmp
add
out
mov
pop
movsl
jnp,pn
or
stc
mov
hlt
and
aam
js
mov
or
or
scas
daa
mov
lcall
push
addr16
cwtl
sbb
aaa
pop
test
test
int
mov
cmp
fbld
push
adc
inc
mov
dec
scas
add
add
pop
mov
rolb
iret
jge
sub
addl
loope
out
xchg
push
cmp
pop
es
mov
lods
ss
addr16
imul
arpl
es
clc
push
cmp
je
dec
inc
mov
test
push
shll
add
sub
hlt
imul
hlt
mov
xchg
pop
xlat
dec
enter
lods
or
mov
or
xchg
addr16
push
push
mov
popf
adc
inc
sbb
mov
mov
ret
popf
mov
adc
clc
add
or
jl
push
fwait
pop
add
cltd
insb
mov
bound
dec
and
mov
adc
push
inc
std
sub
out
xlat
outsb
aam
xchg
ror
and
lock
imul
jp
push
jne
add
add
ret
mov
jne
sti
mov
lock
hlt
cltd
mul
test
jmp
lahf
cld
pop
mov
pop
dec
xchg
inc
mov
aas
dec
dec
mov
movsb
dec
dec
xchg
ljmp
xchg
xchg
adc
rorl
cmpsl
adc
dec
outsl
adc
faddp
stos
andl
daa
notb
movsl
adc
xlat
or
cwtl
jmp
xor
mov
test
sbb
jne
leave
mov
jmp
add
push
sub
in
and
pusha
mov
cmpsl
jp
test
jns
sub
adc
mov
into
cmp
addr16
pusha
mov
inc
cmp
sbb
lock
icebp
and
pop
cld
mov
xor
inc
test
shll
xchg
push
push
sbb
inc
je
jmp
loop
dec
mov
ljmp
sarb
ret
cmp
pop
dec
pop
add
aam
add
xchg
dec
inc
mov
int
jmp
das
dec
add
nop
out
fs
js
inc
les
mov
fisubrl
cmp
lret
fs
cs
push
sub
and
out
and
add
repnz
mov
mov
jge
cmp
mov
scas
call
sub
repz
dec
cwtl
stos
pop
jno
cmp
sub
xor
sub
cmp
adc
mov
sahf
pop
pop
jl
out
es
es
xlat
aaa
fidivl
lds
inc
addr16
push
or
aam
pop
push
dec
push
or
push
and
shlw
in
mov
jno
push
sub
stos
mov
and
inc
jne
shl
sbb
push
and
dec
inc
jp
and
test
or
repz
jne
adc
stc
xor
or
sbb
movsb
jne
jo
loop
pop
jbe
sub
mov
sbb
leave
shl
jbe
in
mov
cli
nop
enter
pop
lret
cs
loopne
mov
and
int
mov
pop
add
inc
xchg
loop
push
ret
dec
out
mov
rorb
stos
xchg
insl
push
push
mov
sbb
addr16
pop
sbb
dec
in
movsl
fmuls
sbb
jecxz
adc
mov
aaa
jmp
out
push
jmp
ror
sbb
cwtl
push
sarl
jns
sbb
xchg
and
in
jbe
pop
inc
sbb
dec
add
cmp
and
jae
add
loopne
or
movsb
jae
mov
call
push
stc
int3
mov
sbb
cltd
clc
js
xchg
mov
mov
insl
mov
cmc
in
cs
or
adc
mov
pop
xchg
sbb
xor
add
shrl
push
mov
and
and
movsl
lock
cmp
and
cmp
lea
mov
pop
lock
sbb
add
push
push
xchg
xchg
clc
mov
scas
fmull
scas
mov
jmp
dec
mov
mov
xchg
cmp
pusha
jg,pt
mov
inc
mov
jp
mov
test
xchg
jecxz
out
scas
in
inc
rclb
add
dec
imul
inc
je
add
cmp
jbe
mov
or
inc
sbb
adc
inc
int3
dec
icebp
and
clc
shll
or
xchg
mov
cmp
push
jb
icebp
xor
pop
das
push
push
ss
add
lcall
xor
push
jb
cmpsl
sbb
pop
fisubrl
cwtl
adc
cmovle
adcb
sub
aam
scas
sub
xchg
stos
dec
shlb
xchg
sub
les
push
lahf
aad
add
rcrb
aad
lea
int3
push
mov
push
adc
out
stos
out
int
dec
movsl
js
mov
sub
mov
adc
out
sarl
pop
lret
xchg
fisubl
jne
xor
adc
lret
pop
push
jmp
lahf
scas
pop
dec
or
popa
xor
jle
inc
test
inc
xor
in
les
push
cmp
sub
push
mov
and
fildl
sbb
cmpsl
and
xchg
jle
and
bound
push
in
jo
cmp
cwtl
dec
add
dec
sarb
jno
pop
cmpsl
dec
mov
ja
setge
popa
lret
test
in
sub
pop
movsl
or
lcall
sbb
aad
push
rclb
shll
or
xor
pop
popf
push
jg
fwait
sbb
xchg
pushf
add
aaa
push
pusha
push
loop
lods
outsb
xchg
in
fsubrl
dec
mov
mov
inc
rorl
add
jg
push
aad
pop
pop
bnd
mov
rolb
add
adc
cld
push
sbb
add
test
pop
movsl
roll
or
mov
dec
adc
popa
push
sub
sbb
js
insb
sbb
or
xchg
lea
scas
subb
dec
arpl
nop
inc
lcall
imul
sub
jno
mov
dec
mov
cmpsb
mov
pusha
mov
push
and
iret
mov
pop
fisttpll
inc
ret
and
mov
and
test
pop
shr
xchg
sub
in
shl
cmp
push
test
xchg
lcall
out
or
scas
pop
ljmp
sub
pop
xor
jnp
subb
loope
pop
jnp
xchg
ret
xor
dec
loop
aas
insl
adc
push
or
adcl
cmpsb
push
add
push
aam
sub
xchg
inc
jmp
mov
mov
popa
dec
dec
xchg
mov
pop
sub
popf
lahf
xchg
jbe
sub
aam
dec
je
sbb
push
xlat
mov
or
sahf
cmp
dec
fistl
shrb
add
pop
out
rcrb
push
leave
add
lods
mov
loope
xchg
loope
addr16
cmpsb
rcl
xchg
ret
or
das
xor
jge
xchg
jg
mov
sub
pushf
mov
fbstp
in
add
inc
dec
dec
sbb
push
adcl
jae
lcall
add
adc
loope
mov
addr16
ffreep
imul
loop
add
inc
repz
nop
push
cmp
jle
and
jmp
push
push
mov
and
jecxz
mov
pushf
dec
cltd
pop
loopne
add
xorl
push
sbb
inc
xchg
and
sbb
test
push
cmp
and
push
loope
cmp
jmp
mov
lret
je
insb
aad
cltd
shrb
jp
adc
aaa
push
sub
je
or
jg
dec
test
jp
adc
outsb
sub
xchg
push
movsl
adc
inc
or
sub
mov
aad
cmp
out
lret
mov
gs
lods
jno
jg
mov
and
mov
mov
jge,pt
pop
arpl
jne
and
xchg
mov
push
jo
subb
lahf
clc
add
push
data16
pusha
adc
fildl
and
in
mov
mov
maxps
loop
lods
push
cmp
ljmp
or
loop
xchg
loope
dec
ret
js
push
rorb
scas
cmp
inc
add
mov
or
adc
shlb
cmp
stc
loop
in
outsb
lods
scas
jne
push
sbb
fwait
mov
sbb
ljmp
insb
out
aam
jo
lock
dec
xabort
add
jbe
inc
inc
mov
mov
jge
add
lock
mov
xchg
mov
ret
les
shrl
and
test
adc
xchg
inc
inc
sub
mov
xchg
ret
push
in
das
lock
and
sub
out
inc
mov
ljmp
xor
push
cmp
out
fwait
lods
sbb
mov
cmpsb
jl
push
int
es
mov
and
lock
outsb
pop
xchg
out
adc
jp
xor
test
stos
les
ret
aad
filds
sahf
gs
popf
mov
jbe
leave
aas
push
or
dec
mov
out
and
fs
and
imul
xchg
jne
gs
mov
jae
enter
mov
dec
push
in
sub
jl
in
push
rolb
and
add
clc
jg
ds
add
and
or
sbb
imul
nop
xchg
test
pop
push
jge
mov
or
repnz
and
movl
in
or
inc
push
js
push
out
rorb
out
clc
aaa
mov
loop
lret
add
xor
loopne
scas
mov
ds
jecxz
cwtl
or
add
rolb
push
stc
movb
adc
jp
jle
cwtl
repnz
xor
or
inc
jmp
lcall
jmp
mov
add
cmp
jl
pop
xor
daa
lahf
out
movsb
mov
aam
xchg
hlt
mov
in
loop
inc
sbb
leave
adcb
pop
orl
jns
dec
je
push
sub
jl
es
into
mov
rcrl
stos
cli
sahf
pop
fistpll
std
fadd
push
shl
lods
or
cmp
jo
shrb
pop
adcb
dec
les
ds
cmp
and
loop
or
pop
inc
or
cld
std
sub
std
sti
cmp
push
cwtl
nop
mov
movsb
sti
mov
je
movsl
mov
aam
sub
push
inc
mov
xchg
or
sbbb
loop
pop
lock
push
lds
aam
or
inc
or
in
outsb
cmp
or
or
xchg
movb
sub
incb
lcall
fnsave
and
and
pop
mov
out
cmp
xchg
call
in
push
out
flds
mov
sbb
int
mov
push
mov
sub
shrl
lret
inc
inc
and
lcall
and
or
and
adc
shr
ljmp
push
sti
pop
jmp
shrb
mov
test
xchg
and
sbb
mov
jo
repz
cld
sub
push
push
push
insb
and
pop
fcoml
push
inc
in
adc
and
popa
aad
cmc
or
mov
addr16
xchg
xchg
test
rclb
sub
mov
push
mov
or
sti
and
adcb
mov
fs
icebp
push
out
pop
or
mov
pop
xchg
cmp
mov
or
xor
les
xor
clc
imul
clc
scas
sbbl
push
stc
test
ja
adc
add
dec
xchg
jne
subb
cwtl
push
mov
mov
fisubs
fidivrs
fists
imul
sbb
test
pop
sub
push
cwtl
push
sub
addb
imul
movsl
pop
mov
jns
cmp
pop
ret
sti
lret
add
push
jl
mov
mov
repz
xor
or
es
xor
jnp
mov
rcr
bound
mov
xchg
outsb
cmpsb
mov
mov
lret
inc
adc
mov
stos
sbb
xchg
imul
push
repnz
sub
xor
test
add
stos
pop
data16
jns
pushf
scas
pop
jae
mov
jmp
add
ja
cmp
push
ret
cmovb
fcmovbe
mov
shlb
and
scas
and
es
lods
imul
adc
rorb
pop
cmp
in
or
pop
in
sbb
xor
push
jecxz
fxch
bound
push
arpl
xchg
inc
call
inc
xchg
fnstcw
mov
or
inc
jbe
push
adc
push
and
aas
lock
out
mov
push
sub
stos
dec
pop
mov
jp
mov
sar
pop
loope
rorl
clc
std
loop
inc
mov
sub
rcr
fsubp
adc
lds
jle
dec
or
insl
js
sub
mov
out
mov
imul
jp
or
mov
inc
xor
sbb
out
xchg
sahf
mov
or
cmp
jo
sbb
or
mov
mov
jecxz
inc
outsl
mov
cmc
jo
sbb
cmp
sbb
js
test
subl
arpl
aas
inc
arpl
push
sub
cmc
xlat
mov
filds
xchg
jl
xlat
fdiv
xlat
hlt
scas
adc
scas
insb
stos
xorb
add
jp
loope
or
mov
mov
movsb
shl
jne
cmp
ss
bound
stos
push
lock
push
and
dec
jl
sub
loopne
dec
aaa
inc
insl
push
pop
repnz
inc
adc
cs
js
mov
inc
pop
fistpll
fdivl
mov
clc
mov
mov
cmp
xchg
sbb
aas
cwtl
movsb
sub
mov
test
adc
jl
push
loope
les
mov
ret
push
dec
or
test
iret
popf
ret
mov
add
mov
adc
lock
shl
mov
add
fistl
adc
repnz
or
sarb
test
hlt
and
in
mov
pop
dec
ret
outsl
dec
call
aaa
cmp
aas
mov
push
add
in
jnp
popa
push
mov
mov
or
inc
js
shlb
jae
lods
cs
ss
aam
mov
and
adc
pop
pusha
cmpsl
jg
aad
and
pop
hlt
js
cmp
and
pushf
xlat
push
push
sahf
icebp
jae
fdiv
dec
mov
mov
add
movsb
std
mov
sbb
xorl
sbb
sub
xor
ss
fstpl
mov
dec
xor
lods
pop
push
cmp
pop
fadd
out
adc
mov
adc
mov
pusha
push
jg
jmp
mov
cmp
arpl
add
loope
cmp
andb
leave
mov
xchg
xor
fdivp
adc
sub
popa
ss
jno
call
nop
shl
xchg
jecxz
mov
dec
jl
mov
inc
cli
fcomp
add
das
push
aad
push
cld
xor
inc
aad
sbb
cmp
mov
inc
fimull
movsb
mov
decb
scas
stos
dec
fs
pop
shrl
jg
daa
movsl
and
pop
jno
test
je
mov
cmp
daa
js
loop
push
clc
inc
pop
pusha
or
push
pop
rorb
in
ds
sbb
lods
mov
enter
fisubrs
clc
out
mov
push
xor
inc
fsubrl
mov
pop
inc
xchg
dec
xor
xchg
mov
pop
adc
movsl
jb
arpl
cmpsl
cli
xor
xor
xchg
test
sbb
pop
orb
scas
mov
sti
mov
loopne
adc
push
stc
sub
cltd
clc
adc
aaa
jae
div
jne
and
mov
aad
into
jbe
xor
jnp
pop
dec
arpl
out
cmp
jg
cmp
fdivs
inc
cli
pushf
shll
sti
in
xchg
ret
addr16
push
outsl
sbb
sbb
inc
mov
fimull
push
lcall
sbb
dec
fwait
leave
inc
mov
jmp
push
push
mull
or
pop
cmc
adc
cmp
cmp
mov
insb
or
insb
sub
xor
push
and
push
add
pushf
ret
dec
into
mov
je
dec
std
add
pop
pop
das
xor
mov
cmc
inc
scas
xchg
stos
in
fisubrs
cmp
movsb
push
jmp
mov
sbb
adc
insb
sbb
or
cli
dec
cli
or
mov
outsb
xor
cli
push
test
lcall
jb
cmp
xor
and
jp
xor
or
in
jo
mov
push
sub
mov
sbb
jge
call
mov
push
int3
aam
dec
decl
and
imul
popa
jl
xor
cmp
scas
test
jo
or
push
testb
push
mov
in
mov
lcall
add
cmpl
int3
jbe
nop
pushl
or
mov
dec
add
and
xchg
in
cmp
repnz
dec
pusha
mov
cmp
xchg
dec
imul
idivb
jbe
inc
xchg
subb
dec
sbb
sbb
jecxz
fisubrs
cmc
dec
push
cmp
call
cwtl
mov
sahf
popf
sbb
sbb
add
pusha
lock
mov
outsl
cmpsb
jo
sub
fdivr
mov
push
jo
add
mov
sbb
and
sbb
dec
xchg
loopne
pop
cmp
or
xor
arpl
add
push
pop
test
sub
sub
dec
push
insl
je
popf
fimull
lock
dec
movntps
ficoml
push
lea
iret
sbb
ljmp
aam
pop
sub
jg
sub
push
adc
scas
adc
popa
cli
cmp
sbb
ss
cmpsb
dec
je
xchg
or
in
ljmp
push
push
movlps
jb
mov
xchg
gs
pop
cs
xchg
mov
add
adc
in
pop
les
fnsave
jmp
jo
mov
dec
in
scas
add
xchg
jle
shl
xor
push
js
mov
mov
dec
cmpsb
aaa
ljmp
pop
lret
mov
lret
int
test
clc
inc
inc
dec
pop
xor
test
adc
movsl
mov
inc
jge
push
into
jecxz
int
addr16
inc
adc
int
and
push
cli
and
arpl
xchg
popa
push
fisubs
xor
lds
mov
xor
lahf
lock
fadds
pop
ret
out
pop
bound
mov
sti
outsb
sbb
js
and
nop
sbb
rcrb
push
and
push
shl
loope
mov
popf
loopne
push
jbe
xor
push
push
les
std
loope
push
xchg
cmp
jg
xor
mov
in
test
mov
repz
inc
in
jg
inc
std
push
xchg
xchg
sub
jl
sbb
outsl
mov
shrb
repz
call
popf
xchg
nop
pop
sbb
test
mov
test
pop
test
xchg
shlb
ror
xchg
cmpsl
xor
stos
jbe
mov
jl
bound
mov
lret
or
addr16
ret
loop
ficompl
add
push
mov
scas
pop
aad
push
leave
mov
sbb
or
mov
sbb
xchg
scas
sub
movsl
cmc
in
les
or
inc
in
lahf
cmp
or
cs
sbb
inc
das
test
or
add
nop
testl
jle
addb
std
sbb
xchg
aam
prefetch
ja
jnp
or
and
dec
adc
hlt
sbb
or
lock
mov
orb
js
or
or
ljmp
push
cmp
pop
loope
pop
sahf
push
into
aaa
outsb
hlt
push
cmp
dec
push
int3
loopne
fwait
shll
inc
xor
push
shl
push
sub
and
mov
imul
jmp
lret
nop
scas
popa
mov
mov
inc
dec
dec
icebp
pop
aas
and
mov
push
rol
or
mov
js
mov
outsl
add
notb
mov
push
mov
cmc
mov
sub
int
jmp
cli
mov
cmp
movsb
jle
inc
mov
cmpl
cli
push
mov
dec
loop
jmp
sahf
fwait
mov
cltd
and
add
std
push
test
bound
xchg
pop
push
test
dec
filds
ret
pop
inc
mov
dec
jo
out
fsubrp
dec
fisttps
loopne
pop
fcomi
or
insb
stos
jge
mov
jle
clc
lods
and
add
pop
or
repz
enter
add
sbb
cmp
nop
outsl
mov
roll
dec
add
sbb
popa
sub
or
outsl
jnp
mov
lock
movb
mov
add
rolb
fisttpll
sar
test
mov
mov
sbb
inc
cmp
push
inc
ret
rol
pop
sbb
jp
or
fs
lock
subb
arpl
push
sub
or
clc
stc
ss
mov
pop
loop
rclb
mov
pop
pop
mov
jecxz
out
push
sbb
roll
imul
lret
sbb
jno
mov
mov
push
jle
pop
xchg
and
cmp
int3
mov
into
cli
add
imul
push
ret
or
pop
add
scas
subl
icebp
inc
rcrl
sub
pop
movsl
cmp
xor
and
cld
fldl
rcrl
lret
pusha
orl
les
setne
adc
push
data16
xchg
pushl
test
sub
adc
adc
ret
out
dec
xor
std
and
or
hlt
sub
aam
mov
jge
xchg
and
mov
daa
clts
push
jge
adc
dec
clc
outsl
enter
lcall
stc
pusha
je
aaa
or
jge
imul
sbb
bound
repnz
daa
aad
push
fs
leave
inc
and
xchg
aam
dec
inc
and
insl
rcrl
sub
insb
push
loop
adc
fmull
cli
shl
or
or
push
iret
sub
inc
dec
or
insl
push
xchg
scas
push
sbb
fcoml
inc
das
ss
scas
mov
sbb
pop
pusha
mov
addl
inc
push
sarl
fldenv
loope
cmp
jl
adc
leave
popa
data16
pop
call
fsubl
push
cmp
pop
test
pop
adc
mov
in
cmp
xlat
in
xchg
dec
shlb
adc
push
ss
mov
mov
add
ffree
or
inc
andl
xchg
inc
ljmp
movsl
outsb
pusha
or
sub
mov
mull
sbb
inc
ret
sub
xor
xor
dec
mov
inc
dec
pop
xchg
pusha
mov
add
xor
xlat
dec
mov
sbb
rcl
cld
push
or
mov
xchg
sahf
add
xor
stos
das
sbb
ret
into
push
adc
andb
movups
pop
cmp
ja
push
pop
xor
mov
sti
lret
sub
cmp
jo
fimuls
inc
popa
gs
push
ljmp
pop
pusha
xlat
rorl
xchg
or
mov
fisubs
sbb
icebp
mov
sbb
mov
aaa
adc
push
movhps
xlat
repz
and
sbb
fdivrs
push
and
mov
orl
sub
adc
or
jp
test
imul
push
shrl
sti
insl
xchg
add
adc
lret
push
adc
jbe
mov
sub
jl
add
repz
adc
sub
mov
push
cmp
mov
out
or
lds
push
inc
push
cmp
or
pop
push
movb
lea
mov
push
xchg
insb
adc
leave
xchg
ret
xor
ror
jnp
sarb
or
inc
enter
iret
push
sbb
in
jp
mov
scas
sti
sub
insl
les
lea
sbb
sbb
std
roll
ljmp
fdivrp
push
ret
or
jecxz
adc
roll
adc
fabs
movsl
lock
xchg
lds
and
loope
xlat
repz
ljmp
loop
inc
mov
imul
es
mov
xchg
dec
cmp
ljmp
fldl
cld
popl
test
push
hlt
sti
jb
sbb
adc
jne
xor
mov
jge
fisubrs
and
sub
repnz
pop
subb
repz
adc
cmp
pusha
mov
call
les
icebp
adc
sub
clc
push
jp
push
mov
out
aaa
adcl
decl
pop
test
adc
pop
xchg
decl
push
fldt
lods
jg
push
jno
lret
or
or
push
jo
out
jne
push
pop
pop
xchg
xor
ficomps
insl
mov
iret
and
sti
rol
jno
insb
jbe
nop
xchg
or
push
push
xchg
or
aaa
movups
pop
fwait
inc
loope
mov
lea
pusha
into
xor
outsb
es
cltd
negl
pushf
push
rclb
jno
pop
cmp
prefetch
or
xchg
mov
andb
fistl
sub
aas
insb
fstpt
fidivs
adc
adc
or
test
jne
sub
lds
hlt
rorl
sbb
inc
das
pop
xchg
stos
mov
cli
stos
pop
orl
mov
enter
cltd
popa
lcall
jno
sbb
fsubrp
test
inc
lret
add
cmpsl
loope
or
jno
push
jle
add
xchg
icebp
call
jo
mov
dec
mov
mov
in
or
inc
inc
mov
add
mov
mov
lahf
jno
jle
xor
mov
mov
cld
lahf
mov
xchg
cmp
mov
lods
sbb
lock
inc
adc
jmp
ret
lods
jp
adc
stos
lods
mov
push
add
pop
push
loop
addl
hlt
data16
push
pop
jecxz
clc
xchg
push
inc
fistpl
sarb
xchg
negb
and
push
jnp
cli
xor
stos
xor
inc
sbb
bound
xorl
sub
sbb
mov
xor
push
jmp
cmp
test
in
loopne
dec
push
add
sub
hlt
lret
mov
adc
rcrb
clc
scas
sti
and
mov
inc
jp
dec
cmp
and
cmp
and
dec
mov
cmp
adc
outsb
add
adc
ds
dec
mov
lcall
push
lods
cmpsb
shrb
imul
adcb
cli
ficoms
xchg
cmp
std
sbb
incl
rclb
in
into
loope
fisttps
mov
outsb
push
mov
ffreep
add
dec
inc
pop
jns
sbb
pop
gs
lret
jbe
pop
rcll
icebp
loope
cld
cltd
insb
and
or
imul
outsb
sbb
sub
push
inc
lock
and
sbb
mov
rcr
adc
adc
bound
sti
fdivrs
test
jg
mov
sub
pop
mov
mov
xchg
jp
aas
cmp
ret
xchg
nop
daa
shlb
mov
jge
je
cli
xchg
ret
sub
fs
and
jmp
dec
lods
pop
xchg
xor
jg
stos
push
arpl
scas
fwait
gs
adc
out
adcb
inc
cmp
dec
adc
aas
sub
dec
pop
add
dec
jns
icebp
adc
cmp
pop
mov
icebp
jge
sub
pop
cmp
or
pop
cmpsl
ss
pusha
imul
dec
mov
inc
lds
and
hlt
adc
mov
mov
inc
arpl
xchg
rorl
dec
cmp
and
ss
or
mov
dec
arpl
js
movsl
mov
paddsw
push
sbb
andb
adc
dec
dec
mov
adc
insb
jl
sub
inc
add
repnz
pop
xchg
movsb
hlt
mov
jecxz
pop
sahf
shll
sarb
sbb
mov
jle
mov
jmp
test
nop
outsb
dec
dec
add
cmp
insb
mov
mov
clc
aad
fwait
xor
popa
jge
mov
adc
std
add
pop
cmp
adc
pop
adc
cmc
cmp
test
sbb
cli
popa
call
mov
mov
lock
movsl
xchg
das
out
or
inc
sti
test
das
arpl
pusha
test
repz
mov
cltd
add
shll
cmpsl
xchg
push
ret
sub
scas
lods
jno
arpl
into
add
loop
imul
insb
or
insl
shrb
cltd
mov
pop
sub
fsts
add
jecxz
dec
jne
dec
aas
lock
enter
lahf
testb
pop
mulb
cmp
jae
scas
gs
mov
das
mov
xor
push
in
dec
cmp
mov
add
adc
arpl
inc
rcrl
jg
cmp
rclb
dec
xchg
sub
mov
push
jae
dec
mov
jmp
pop
inc
scas
and
fwait
xor
icebp
and
in
xlat
pop
adcb
push
xlat
adc
pop
inc
pop
or
insb
rorl
imul
pop
fdiv
aam
repnz
sbb
mov
testb
xchg
outsb
lcall
mov
mov
orb
gs
shlb
daa
xor
mov
ljmp
fldt
cmpsb
jbe
sbb
mov
ss
fsubl
push
outsb
and
sbb
inc
mov
hlt
int
in
xchg
loop
into
xchg
jb
sti
pop
xchg
mov
sub
fdivp
in
mov
les
adc
xchg
clc
orl
lock
mov
xchg
loopne
pop
or
inc
xor
xor
cmp
rolb
roll
jns
push
fs
xchg
das
inc
notb
cld
stos
sub
mov
dec
mull
or
cmc
mov
xchg
shlb
decb
rcl
rolb
sub
rclb
jo
add
dec
int
std
or
imul
loop
mov
add
js
jb
pop
cmc
mov
jp
das
mov
mov
xchg
or
scas
negb
pop
fsubs
adc
mov
cld
ljmp
and
aad
bound
sbb
jnp
xor
jb
sub
jmp
jo
sub
sbb
mov
aaa
xlat
repz
inc
fs
ret
push
dec
xchg
movsl
lret
ss
fidivrl
dec
and
add
ret
sti
test
int3
leave
outsl
mov
flds
stos
add
cmp
xchg
push
push
sbb
xchg
jne
mov
jmp
mov
loopne
outsl
fwait
in
sbb
add
add
arpl
mov
cmc
or
das
movsb
or
sti
stc
mov
xchg
and
inc
lea
aaa
loope
imul
inc
test
add
xchg
push
or
pushf
pop
fcmovnb
pop
xchg
cmp
loopne
or
orl
hlt
fwait
inc
jmp
xchg
mov
lahf
push
outsb
and
mov
sub
dec
mov
sar
sti
push
cli
adcb
mov
loopne
sbb
push
mov
mov
movups
mov
or
cmp
jae
lcall
cwtl
test
pop
add
pop
in
shll
adc
rolb
jl
std
dec
and
add
sub
pop
fs
stos
or
or
gs
or
cmp
or
adc
jge
into
jb
jge
jg
mov
inc
sub
repnz
icebp
adc
sub
and
push
and
and
dec
lahf
lods
lahf
add
add
icebp
adc
loopne
aaa
sub
jp
dec
cmp
es
pop
cmp
xchg
call
cs
leave
xchg
rorb
inc
mov
les
mov
adc
aas
dec
cmp
call
orb
cltd
or
mov
xor
test
or
fmull
cmp
sub
loope
lahf
xor
or
add
or
or
ljmp
rcll
cld
sub
decl
xchg
dec
jmp
test
aas
sahf
push
popf
or
cmp
jg
es
xchg
and
fimuls
xchg
jmp
pop
mov
cs
pop
ljmp
pop
push
ret
pusha
add
lea
mov
add
and
cld
mov
xor
sbb
add
mov
push
das
inc
ljmp
ret
xor
xor
ja
scas
clc
sub
add
nop
push
outsl
loope
inc
or
rcr
movsb
sub
lods
push
js
sub
lods
scas
sbbl
push
xor
ljmp
or
add
imul
cs
pop
imul
test
cld
lods
mov
and
ds
cmp
fistps
cmp
js
fucomp
xor
push
imul
dec
inc
psllw
sub
or
mov
gs
sbb
decb
test
pop
inc
add
or
adc
mov
loopne
adc
and
push
xchg
cmp
jg
push
jle
sbb
xchg
inc
cmp
jg
cmp
or
cmp
negb
mov
ljmp
xor
xchg
movsb
cmp
lods
dec
add
xor
faddl
arpl
cs
loopne
add
jle
mov
icebp
or
xchg
jp
push
in
sub
push
mov
inc
add
sbb
mov
loopne
js
out
pop
rolb
lret
stos
addb
aad
popf
es
xchg
loop
outsb
jb
les
loop
push
xor
adc
add
call
pop
mov
clc
xchg
and
sbb
add
movsb
sbb
test
pop
leave
rolb
stos
fldt
test
leave
mov
fsubrl
push
jnp
orb
jle
fidivrl
hlt
pushf
test
test
les
shlb
jge
and
fnstsw
push
push
xor
or
adc
adc
xchg
sub
mov
rcrb
int3
inc
dec
xor
adc
popf
fisttpl
out
mov
fimull
or
jecxz
call
shlb
lahf
lret
mov
popa
cmp
sub
jecxz
in
inc
pop
add
cmp
fmull
push
pop
outsb
and
popa
inc
mov
bound
cmp
mov
inc
loop
pop
fwait
or
mov
and
jno
fcmovnu
or
cld
add
dec
test
addb
push
pop
lcall
xchg
or
ret
cmpsb
jecxz
push
fstpl
add
pop
push
cmp
pop
pop
out
ret
or
jne
sub
call
cmp
clc
adc
push
jp
jecxz
call
pop
sbbl
mov
aam
int3
push
call
xchg
dec
adc
cmpsb
cmp
sbb
or
sub
add
ljmp
test
in
clc
ret
push
daa
mov
sub
mov
fisttpll
repz
push
test
mov
outsl
call
xchg
xchg
loopne,pt
outsb
xor
mov
mov
mov
daa
imul
call
shrl
jnp
cld
add
scas
addb
lahf
incb
aam
or
adc
adc
add
pop
xchg
adc
or
les
adc
or
and
xor
fdivs
xor
pushf
inc
mov
or
out
add
sub
mov
or
pop
cltd
lods
scas
jbe
imul
mov
sub
add
dec
js
sbb
push
mov
inc
outsb
aas
pop
repz
cmp
pop
adc
mov
sbb
mov
test
push
pop
cmc
pop
gs
pop
aad
mov
lds
fisttps
imul
outsb
cmp
jns
add
pop
inc
xor
dec
mov
xchg
aaa
cli
jae
lretw
loop
mov
stos
add
in
adc
insb
divb
xlat
shl
xor
push
loop
adc
nop
add
fsub
add
in
mov
push
inc
mov
jle
fsubl
xor
in
enter
adc
add
inc
loop
xor
inc
sbb
and
loope
pop
push
cmp
xor
sub
in
stc
ss
mov
aas
ss
stos
fisubl
jle
call
adc
jo
scas
popf
pushf
scas
rcll
aam
or
push
lahf
xchg
sar
dec
and
mov
jne
loopne
ret
mov
hlt
adc
ja
lods
jmp
in
xlat
mov
sub
movsl
mov
or
or
in
push
push
add
cmp
xor
fsubrl
in
or
or
jo
mov
mov
or
aaa
sub
push
jno
ss
mov
ret
ds
frndint
sahf
or
loope
push
xchg
rcrb
cmp
jo
xor
push
scas
dec
add
icebp
and
or
inc
adc
adc
sbb
jnp
and
push
sub
loopne
add
lock
hlt
hlt
js
mov
or
add
jle
pop
ficomps
ljmp
cltd
lock
jg
dec
mov
or
xchg
fs
js
ret
mov
push
mov
cs
mov
mov
cmpsl
push
dec
jecxz
sahf
xor
fs
out
es
push
imull
jno
jbe
mov
pop
mov
and
pusha
push
add
in
leave
pop
lock
imul
popa
dec
jl
mov
iret
hlt
push
xor
mov
adc
adc
sub
es
nop
ds
loop
sbb
mov
pop
in
outsb
cmp
decl
mov
daa
dec
push
leave
out
js
fimull
lcall
hlt
scas
addr16
mov
in
je
arpl
in
mov
push
and
ret
jo
lret
inc
pop
jns
sbb
sub
das
or
jmp
push
add
mov
jle
mov
xchg
mov
pop
mov
dec
mov
pop
pop
adc
into
add
shr
jo
or
push
fdivrl
pop
rcl
sbbb
cmpsb
sub
js
sbb
psubb
jmp
jl
scas
daa
loop
pop
mov
lock
cwtl
jb
fistpl
cmp
push
mov
sbb
enter
cmp
jno
mov
pop
or
pop
push
scas
dec
lock
push
jae
icebp
and
mov
shrl
push
or
sub
fwait
push
and
jb
xchg
rolb
push
lock
xor
adc
jl
mov
loop
mov
loop
iret
add
fsub
ret
xchg
iret
pop
inc
inc
sti
xchg
mov
repnz
mov
mov
sbb
add
and
and
xor
test
and
lods
jmp
xor
dec
push
aas
sbb
jb
sub
out
and
add
stos
mov
add
mov
adcl
dec
daa
dec
xor
adcl
pusha
test
icebp
scas
pop
inc
jp
outsb
sbb
mov
stc
test
shll
lret
jbe
jns
mov
xor
xchg
push
dec
inc
inc
js
cli
adc
insl
enter
push
and
jp
mov
cmp
cli
pop
in
xchg
xchg
jbe
add
adc
pop
cltd
push
mov
sub
mov
ret
stos
aad
out
idivb
mov
xor
add
inc
push
cmp
xchg
inc
and
jp
andb
add
mov
mov
mov
dec
enter
hlt
jae
adc
inc
inc
xchg
push
fcoml
rorb
mov
and
push
pushf
nop
or
add
inc
int3
arpl
cli
scas
mov
pusha
pusha
add
push
add
push
fdivrl
pop
jg
mov
pop
insl
inc
xorl
cwtl
out
fs
mov
lcall
sub
push
rolb
js
test
or
mov
jb
data16
xchg
hlt
lods
lods
mov
loop
das
jno
inc
xor
adc
movsb
cmp
popa
repz
jl
mov
div
pop
mov
and
sahf
add
cwtl
and
fisubrs
rorb
clc
scas
outsb
es
loop
and
mov
and
or
loopne
sbb
cmpsl
ja
and
iret
jg
cmp
pop
push
daa
addb
adc
sbb
adc
jns
mov
ss
test
cmp
fwait
int
sub
add
movsl
or
xor
ret
sbb
dec
cmpb
inc
pop
in
sbb
shl
inc
xchg
inc
daa
mov
pop
mov
mov
push
pusha
add
pop
cmp
cmc
cltd
xchg
jge
xor
cmc
mov
in
mov
popf
mov
icebp
sub
xlat
jge
dec
lods
mov
dec
test
push
lock
fsubl
orb
aad
repz
aaa
enter
xor
jp
clc
mull
sbb
mov
lahf
sbb
push
jne
mov
cltd
pushf
ficomps
add
sbbb
or
loopne
push
enter
mov
push
cs
adc
push
sub
and
faddl
xchg
test
adcl
lret
push
sub
cld
fistpl
ss
sub
getsec
mov
test
pop
mov
mov
jbe
ljmp
fsubs
jne
pusha
dec
in
push
or
ljmp
mov
mov
sarl
xchg
push
jmp
add
out
daa
sub
and
mov
loope
orb
inc
inc
mov
pop
xchg
fimull
dec
lret
and
ficoms
inc
push
pop
dec
and
sti
outsb
std
add
xchg
inc
xor
movsl
rcrb
lea
cmp
or
xor
pop
test
cmp
data16
mov
inc
std
pop
stc
xor
xchg
pop
mov
push
mov
sub
inc
movsb
jle
loope
adc
inc
and
or
xchg
add
fwait
or
aad
enter
f2xm1
lock
mov
int3
bound
jo
rolb
sbb
jo
or
add
repz
fld
rcll
or
push
jp
in
mov
imul
outsb
or
call
leave
sbb
xchg
dec
mov
xchg
icebp
roll
ffreep
mov
test
movsb
ja
jb
loope
sti
jmp
sbb
or
scas
add
loope
dec
aad
imul
dec
es
out
pushf
inc
mov
lock
es
sub
in
es
sub
push
and
cmovno
test
pop
and
push
mov
sub
nop
mov
dec
ret
and
andb
fadds
rolb
into
adc
lcall
mov
cmpsl
add
hlt
loopne
in
cmpsl
mov
mov
or
icebp
outsb
xchg
dec
jno
call
dec
mov
sbb
pop
inc
es
push
mov
ja
adc
insb
pop
pop
fcomip
lods
dec
and
ret
aad
xchg
push
cs
cli
call
mov
test
add
aad
sbb
push
add
pop
adc
sub
xchg
xchg
lret
aaa
movsb
inc
sbb
nop
movsb
ja
clc
lds
in
cmp
stc
loope
dec
or
stos
push
enter
roll
mov
sbb
nop
cmc
jns
adcl
push
je
cmp
xchg
push
cltd
inc
jno
pop
scas
fisubs
cwtl
mov
mov
inc
mov
or
mov
mov
fdiv
dec
xchg
mov
xchg
xchg
movsl
push
pop
sbb
jb
sub
idivb
rclb
cmp
aam
mov
aam
xchg
lods
push
jle
pop
add
pop
and
lods
shr
add
insb
xor
incl
sbb
dec
enter
push
jns
push
xchg
incb
sub
hlt
cmpsl
mov
xchg
iret
jbe
jnp
aam
ja
sahf
sub
out
lret
loope
xchg
ret
sub
aam
jg
mov
or
mov
aas
jne
loope
arpl
mov
push
xor
xchg
and
or
loop
jg
pop
jae,pn
pushf
xchg
enter
aaa
jnp
and
dec
cwtl
shlb
cld
adc
fisubrs
sbb
je
mov
fcompl
out
loop
bound
add
sub
mov
ljmp
sti
add
pop
mov
inc
nop
jmp
jnp
jno
dec
popa
sbb
push
dec
jmp
cmp
jnp
lcall
sub
pusha
pop
xor
popa
sub
pop
or
pusha
andb
and
sub
btl
mov
fbstp
gs
cltd
shlb
gs
shll
adc
sar
cmp
xor
lcall
push
out
imul
movsb
shl
cmp
inc
inc
sub
ja
xor
iret
daa
xchg
inc
test
movl
jp
mov
cld
lcall
cmp
sub
xchg
xchg
cmp
sbb
sti
mov
aas
sbb
pop
push
pop
or
or
insl
ljmp
mov
lods
ret
cmc
call
inc
ret
cmpsl
sub
push
sbb
xor
push
aas
movsb
aaa
hlt
dec
hlt
sbb
jo
push
cmp
out
rcrb
int
mov
or
push
movsl
jbe
sbb
je
adc
outsl
out
std
in
add
andb
sub
hlt
xor
pop
mov
mov
push
lods
push
pop
bound
or
add
js
int3
loope
mov
and
cmp
test
cmp
negl
or
insl
clc
push
les
loop
xor
roll
xchg
jne
add
jge
mov
adc
mov
push
jmp
cmpb
or
inc
fs
push
pop
mov
in
call
jo
pop
arpl
mov
lahf
inc
xchg
jo
fsubr
mov
cli
adc
pop
cmp
add
jmp
or
sbb
loop
popa
inc
gs
mov
aaa
mov
addr16
cmpsb
pop
adc
mov
push
mov
sbb
mov
mov
ljmp
xchg
mov
idivl
popf
inc
xor
cmpsb
xor
loope
mov
push
outsb
add
int
ret
shlb
push
cli
sarl
clc
pop
mov
loopne
pop
hlt
loopne
jmp
in
sbbb
fstpl
je
pop
pmaxsw
shrb
movl
stos
jb
fs
sub
mov
jb
mov
jp,pt
xchg
dec
je
jl
fsubrl
aam
iret
addb
inc
fadds
clc
xchg
out
dec
ds
mov
xchg
in
mov
push
inc
rcr
jnp
adc
aas
mov
shll
setp
xchg
les
mov
stc
adcl
jecxz
add
cwtl
cli
add
cmp
mov
or
sub
push
jmp
ret
cmc
jecxz
push
push
cmc
das
test
sbb
jo
pop
test
xchg
xor
loopne
rep
dec
stos
pop
cmp
stos
movsb
xchg
imul
lea
popa
sbb
int3
sbb
sbb
sti
adc
js
cmp
lock
aad
int3
int
stos
ret
push
daa
pop
push
movsb
popa
xor
inc
cli
dec
testb
push
adc
addr16
or
int
mov
rcrb
inc
scas
in
test
test
test
jl
sbb
inc
push
jo
hlt
dec
shrb
sbbl
fsubrl
insb
sbbl
mov
or
xor
pop
sbb
test
es
pusha
or
aad
inc
les
or
add
add
cmp
out
out
jne
add
scas
mov
or
cmp
pop
neg
inc
cmp
repz
adc
ret
mov
add
cmp
fsubrs
into
outsl
dec
test
js
or
lret
sub
mov
push
sbb
jo
and
sarb
ror
rorb
addl
push
fnsave
and
add
mov
je
shrb
nop
mov
cld
sub
mov
int3
and
mov
push
es
xor
pop
push
lcall
adc
mov
ljmp
adc
ret
mov
mov
imul
and
aas
xor
pop
out
push
adc
cmp
mov
mov
ret
jecxz
mov
subl
dec
jnp
cmp
push
shll
xchg
ja
repz
or
movsb
movsb
inc
mov
or
decb
lret
jo
test
jb
dec
int
add
xchg
xchg
rcl
and
or
fwait
cli
mov
push
pop
pop
xlat
inc
push
bound
adcl
inc
mov
inc
mov
movsl
mov
push
xchg
clc
out
lcall
xchg
sub
cmp
xchg
inc
sub
repz
mov
inc
imul
xchg
fiadds
add
or
mov
xor
inc
or
sbb
pop
push
mov
cld
push
dec
cmc
and
or
jnp
inc
pop
je
pop
mov
ret
add
mov
ja
cmp
mov
fnsave
push
sbb
sub
and
stc
movsb
das
shrl
inc
andl
int3
into
mov
leave
push
or
dec
jne
ljmp
jbe
or
ds
data16
add
cmpsb
fidivs
ror
dec
sub
outsl
clc
cmpsb
movsb
rol
mov
sahf
mov
pop
pop
pop
sub
sahf
push
jbe
andb
imul
adc
mov
jo
rol
loope
es
sub
mov
fsubs
dec
mov
cmovnp
sbb
out
push
sbb
in
das
ss
das
lods
cs
in
sub
aam
inc
jmp
jb
xor
mov
jns
fistpll
popa
or
add
xor
mov
xor
arpl
shrl
cwtl
push
into
out
testb
test
push
xlat
mov
rcr
push
sbb
xor
add
loope
sbb
push
std
add
call
adc
loopne
sub
enter
or
xor
movsb
add
lods
lock
push
cld
clc
cmp
shl
jbe
sarl
rcrb
stos
sbb
das
insb
or
sbb
and
lcall
jle
in
pop
icebp
sarb
shlb
and
inc
adc
stc
out
std
push
and
add
mov
call
data16
cmp
addb
scas
or
add
adc
push
push
ljmp
fstpl
icebp
push
or
pushf
cmp
sub
adc
ret
bound
xchg
push
ljmp
dec
call
js
ljmp
insl
rcll
sub
mov
fnsave
shlb
add
xchg
dec
or
push
xchg
jo
add
and
adc
loope
or
mov
cs
adc
sub
punpckhwd
cmc
es
push
xor
pushf
adc
inc
xor
add
mov
mov
xor
fisubs
pop
pop
jge
aad
inc
sub
jo
hlt
add
or
ret
flds
shl
inc
add
xchg
scas
mov
lea
dec
test
loopne
inc
arpl
pop
sti
or
shll
rcrl
mov
inc
xchg
clc
fs
pop
add
mov
adc
mov
or
and
xor
jle
mov
and
pop
inc
pop
jo
daa
sbb
push
sbb
mov
sub
testl
add
int
mov
out
rorl
cltd
inc
pop
out
jbe
mov
mov
ljmp
push
inc
fdivs
mov
leave
shlb
leave
add
ret
add
lcall
or
jmp
pusha
xor
mov
fs
push
dec
cmp
mov
xchg
add
push
std
cmpsl
or
mov
mov
pop
ret
shl
and
test
insb
xor
in
ficoms
data16
call
test
mov
cmp
adc
mov
cmp
lret
mov
and
in
dec
jecxz
lret
add
cmp
sbb
out
mov
jge
pop
test
adc
insl
lods
fsubs
mov
mov
aam
adc
loopne
mov
je
dec
add
test
or
out
loopne
sarl
fldl
lds
xor
icebp
aad
dec
daa
add
rcr
nop
jnp
xchg
les
sbb
andb
jmp
ret
pop
fmulp
fwait
in
rcl
pop
shrl
pop
xor
sub
mov
test
adc
addl
add
enter
dec
std
test
addr16
and
xchg
xchg
adc
add
mov
xchg
xor
lods
inc
jecxz
sbbb
gs
push
imul
push
pop
pop
std
ljmp
fdivl
add
das
loopne
add
xchg
and
or
js
lods
push
rclb
push
hlt
clc
xor
add
or
ret
mov
movsb
add
mov
inc
inc
test
call
sbb
pop
mov
pop
mov
jge
fbld
push
add
ficompl
movsl
fisttpll
out
xor
pushf
pushf
fs
mov
in
cmp
js
sbb
shll
pop
js
mov
push
adc
fimuls
inc
aas
aaa
jg
dec
loope
lock
mov
pop
jo
lds
jne
cltd
test
sbbb
or
inc
ret
push
testb
jg
pop
pushf
mov
mov
sbb
mov
es
cli
lods
mov
xchg
clc
push
out
add
cmp
and
js
daa
add
push
push
and
scas
and
cmp
mov
loop
jne
adc
ds
sub
cmpsl
xorl
sub
imul
aas
testb
cmp
fdivr
decl
lock
div
cld
mov
aam
fcom
data16
lcall
loopne
add
inc
cwtl
inc
and
hlt
lock
push
and
mov
mov
sbb
cmpb
icebp
dec
inc
cmpsl
aaa
idivl
ljmp
call
fs
shrb
aad
inc
and
xlat
movsb
pop
ret
and
in
outsb
pusha
push
or
adc
push
fisttps
jmp
or
loopne
loop
fnstcw
insb
js
dec
xchg
mov
add
inc
cmpsb
imul
out
insl
test
sbb
out
mov
pop
xor
sub
push
movsl
outsl
and
mov
or
adc
insl
mov
jle
pop
push
das
push
push
lcall
xor
and
jl
sahf
add
fidivl
xor
add
add
pusha
pop
addr16
repz
sti
lret
cmpsl
std
addr16
sti
pop
rol
outsl
in
push
stos
adc
xchg
ljmp
sbb
dec
jbe
movsl
cmp
cmc
int
and
mov
mov
aam
dec
inc
jno
cld
daa
sub
je
mov
ja
cmp
adc
push
ds
push
lods
lods
add
insl
push
dec
xchg
xchg
xor
jae
pop
sbb
test
push
movsb
lods
mov
roll
lret
add
sti
fcmovbe
sub
fisubl
mov
pop
push
xchg
mov
cmpsl
dec
nop
scas
adc
movsb
dec
dec
xor
dec
in
rcll
or
add
imul
bound
or
loope
lock
and
push
mov
test
jne
cli
and
jb
xlat
popf
jno
mulb
call
adc
mov
sub
hlt
xor
mov
sbb
sbbl
push
push
adc
push
cltd
fsubrl
pushfw
xlat
and
iret
movsl
cmp
stc
ljmp
cmpl
pushf
andl
call
call
xor
mov
lods
sahf
push
xor
sbb
lock
and
movsl
cmovo
mov
inc
loopne
lock
loope
loop
mov
arpl
roll
sub
out
add
cli
mov
popa
push
test
xor
push
inc
or
push
mov
arpl
fdivl
sbb
ret
push
cmpsl
jecxz
fisubrs
push
xor
and
mov
xchg
scas
pusha
insl
fisttpll
xor
lret
adc
add
mov
dec
int
hlt
loopne
sti
or
imul
mov
mov
jl
jnp
mov
rol
clc
mov
test
add
and
mov
add
xor
push
scas
aam
mov
jl
pop
dec
push
jae
lock
mov
rcr
scas
push
ret
icebp
pop
mov
cltd
filds
mov
sbb
xorl
test
in
cmp
js
or
adcb
xchg
paddusw
add
lea
jb
std
mov
rcrb
pop
mov
in
aad
stos
jp
popa
cwtl
cmpl
arpl
jge
or
sti
lea
aam
rol
add
xor
imul
mov
adc
cmp
jno
xlat
pushf
pop
fmuls
add
pop
int
sbb
jno
jae
pop
pop
and
mov
rorb
cmp
and
outsl
sub
ja
jp
push
jg
fldl
rcrb
or
pop
xor
xchg
imul
xchg
cmp
mov
dec
sbb
test
das
jno
je
mov
hlt
inc
sahf
push
mov
jbe
stos
dec
loop
xchg
js
pop
xchg
xchg
xchg
inc
inc
mov
je
jb,pn
mov
out
push
or
or
dec
rcll
add
fwait
mov
in
ja
je
push
and
sbb
cmp
sbb
dec
stos
mov
outsb
lcall
bound
and
inc
sbb
cmpsl
rdtsc
adc
pushf
or
pop
movsl
imul
cmp
sub
cmp
mov
test
rolb
add
cs
sbb
rorl
adc
pop
insl
adc
push
loop
jmp
xlat
pop
pop
cmp
pop
or
insb
inc
roll
dec
add
shll
mov
cwtl
mov
shl
push
mov
mov
addr16
mov
testb
aad
int
in
movsb
test
dec
test
and
loope,pn
ret
jmp
mov
hlt
outsb
add
dec
xchg
cmp
jbe
xor
add
xchg
hlt
imul
pushf
ret
or
call
fadd
cmp
int3
test
ret
inc
mov
movsb
xlat
rcl
push
jno
cmp
loop
cmp
inc
sub
pop
cli
ljmp
out
mov
inc
adc
lahf
fdivp
std
sbb
lret
sti
adc
pop
xchg
aaa
and
push
and
into
jle
inc
scas
lret
add
movsl
test
cmp
mov
or
xor
dec
xchg
ret
mov
adc
loope
shl
mov
cmp
cmp
push
nop
mov
xlat
and
maskmovq
xchg
mov
push
mov
mov
xchg
notl
push
imul
sbb
mov
mov
imul
aaa
int
mov
test
dec
shlb
pop
sbb
add
sub
pop
fstps
mov
lods
mov
fdivp
sbb
mov
fmuls
mov
in
lds
paddb
push
out
xor
mov
bound
xlat
ret
xlat
enter
jl
loopne
icebp
mov
jbe
sub
adc
jge
out
inc
push
xchg
pop
adc
pop
push
aaa
sbb
subl
test
inc
xor
add
or
sarl
fwait
cmc
fimull
push
mov
sbb
xchg
pop
sti
sbb
sub
icebp
mov
mov
xchg
add
dec
test
stos
adc
ret
or
fimuls
cs
mov
or
jb
das
ss
clc
ret
sti
add
dec
push
add
adc
inc
push
scas
add
fistpl
sbb
mov
mov
sbb
mov
hlt
loopne
js
push
iret
add
mov
mov
jg
jns
or
push
inc
xor
mov
insl
lahf
mov
pop
je
insb
jnp
jg
in
mov
cmpsb
xchg
sbb
cmp
push
or
sarb
and
mov
lods
jle
add
test
test
daa
or
jo
aam
cs
jl
imul
sub
or
jp
push
jnp
push
xchg
mov
icebp
push
subb
vpor
sbb
jae
jecxz
cmc
dec
mov
jmp
fmull
shrb
int
popa
clc
out
and
pop
call
push
sub
icebp
mov
sbb
jg
sbb
mov
addl
pusha
ffree
dec
inc
add
sbb
pop
icebp
xor
iret
adc
hlt
sub
or
jmp
ljmp
push
cmp
dec
scas
vpavgw
pop
in
pusha
or
imul
addl
xchg
aad
pop
inc
mov
mov
lock
ds
lahf
mov
xchg
rcrl
or
push
and
adc
and
mov
insb
mov
pop
cmp
pusha
sti
xor
clc
loope
fcomps
out
pop
shlb
mov
pop
cld
daa
andb
xlat
lret
es
cwtl
sub
pusha
mov
cmp
mov
adc
jg
add
cmp
xchg
popf
dec
orl
cmpsb
mov
adc
sbb
cmp
js
test
mov
mov
mov
xchg
shr
inc
xor
jge
dec
sbb
pop
pop
xchg
push
mov
into
jbe
lds
sub
and
dec
test
sub
sbb
adc
or
fnstsw
pusha
mov
gs
xlat
es
aas
or
inc
out
stos
inc
nop
insl
mov
into
or
mov
aam
push
fstps
lods
inc
sub
fs
pop
ret
mov
mov
out
dec
aaa
xchg
dec
cli
push
inc
pop
ret
sbb
ret
push
jmp
enter
pop
aas
mov
push
js
mov
jle
nop
test
pop
test
scas
shl
jp,pt
repz
cld
outsl
mov
rol
add
jg
outsl
fwait
sub
mov
xorl
sub
aas
mov
xchg
lea
pusha
xchg
bound
mov
jp,pn
or
cld
addb
sub
es
mov
mov
iret
cmpsb
or
movsl
mov
or
cmpsl
iret
dec
add
loopne
xchg
adc
add
or
push
push
inc
in
loopne
test
dec
and
js
mov
lret
pop
pop
hlt
push
mov
test
dec
test
fdivs
mov
insb
xor
mov
fcoms
test
movsl
or
mov
push
jp
sub
testl
inc
xorl
jecxz
les
push
push
int3
andb
data16
jg
sub
mulb
pop
pop
mov
dec
xor
adc
xchg
jle
movsb
enter
mov
mov
stos
cmp
icebp
fistpl
mulb
and
or
lods
mov
imulb
stos
inc
jo
or
mov
xchg
dec
adc
and
mov
aad
cli
out
shrb
cmp
xlat
aaa
jl
int3
and
push
lds
cli
push
test
push
fidivl
out
xor
mov
sti
sbb
fs
dec
lea
int3
pop
adc
push
cmp
dec
dec
movsl
xor
loopne
loopne
or
loop
inc
add
push
push
push
cmp
xchg
mov
out
ret
lahf
sub
mov
and
ud1
jecxz
cmp
scas
pop
shl
fwait
jp
push
cs
cmpsb
fcomps
push
push
push
xchg
jg
mov
pop
shlb
mov
jp
push
inc
xor
jne
orl
pushf
fdiv
iret
divb
mov
pop
outsl
popl
mov
fimull
cmp
popa
and
test
loopne
incl
fsin
dec
mov
aas
xchg
pop
mov
sbb
xchg
xor
or
sub
out
hlt
add
add
mov
cmc
mov
call
mov
cmp
cwtl
sbb
pop
cmp
jno
shrb
cmp
cmp
pop
lea
mov
xchg
roll
mov
lcall
mov
mov
or
sahf
push
scas
push
xchg
cmp
push
jl
cld
jbe
pushl
dec
or
jl
icebp
iret
jmp
pushf
xor
cltd
gs
rolb
inc
movsl
add
jnp
sarb
cmc
test
iret
mov
sub
cmpsb
and
test
inc
bound
inc
aad
dec
mov
mov
push
adc
sbb
cli
mov
mov
incl
aaa
add
xor
test
lock
xor
or
xchg
push
jo
pop
jne
stos
lret
insb
sbb
dec
xchg
cltd
stos
pop
mov
das
add
pushf
data16
lahf
loope
adc
rorb
mov
xchg
insl
std
repz
out
adc
jge
je
dec
ss
push
jge
in
and
push
and
in
clc
lock
cld
inc
jmp
jbe
call
aaa
cld
repz
in
push
xchg
push
or
mov
std
or
cwtl
aaa
testl
fstps
aas
xchg
push
fstpl
mov
cmp
stos
mov
enter
jb
cmp
mov
out
jle
xchg
mov
or
pop
jg
aam
inc
or
ror
mov
inc
rcl
mov
mov
ds
or
pop
push
ret
xor
outsb
jae
cmp
arpl
mov
mov
pushf
shrb
pop
cld
lock
loopne
and
adc
rolb
add
sahf
push
jmp
popf
mov
in
push
sbb
mov
push
leave
mov
or
das
daa
push
out
push
adc
mov
xchg
dec
and
mov
sbb
inc
in
xor
jle
mov
jne
fcompl
mov
mov
lret
pop
or
out
jo
in
mov
fcompl
popa
out
lea
sub
clc
inc
cmp
es
js
mov
pop
adc
push
test
jmp
in
push
call
xchg
push
loop
stos
inc
or
push
xchg
inc
insl
dec
jp
fs
pop
sti
or
mov
mov
or
fs
jmp
loop
inc
imul
adc
add
sub
push
adc
cli
lret
cmp
cmp
fldt
dec
push
test
dec
loop
push
push
int3
and
cmc
rol
mov
sbb
jnp
inc
xchg
movsl
in
adcl
pop
movsb
add
repnz
into
mov
sub
in
mov
dec
clc
and
xor
add
mov
mov
outsb
lcall
mov
push
mov
adc
dec
js
fcomps
ljmp
or
cmp
sbb
xchg
lret
cld
repnz
add
xchg
imul
xor
dec
inc
in
sbb
repnz
pop
adc
ds
lods
in
pop
addb
and
xchg
xchg
pushf
sbb
das
or
jae
popa
or
xchg
xchg
sbb
adc
push
cmpsl
aas
xor
pop
dec
sbb
aaa
mov
jge
pusha
jne
mov
dec
enter
sarb
push
and
mov
fiadds
add
rcl
add
push
pop
fdiv
sub
mov
and
xlat
push
xchg
xor
xchg
hlt
dec
movsb
adc
test
test
leave
xor
sub
push
cmp
or
cmp
outsl
stos
dec
pushf
or
sub
pushl
mov
cmpsl
mov
imul
sbb
aaa
adc
sbb
adc
add
nop
push
xor
mov
push
inc
ja
sbb
mov
jecxz
add
xor
cmpsb
scas
or
outsl
cld
lahf
js
adc
shr
push
std
xor
cmp
lcall
add
pop
jo
mov
adc
jle
fistpll
es
scas
mov
jp
mov
les
adc
decb
mov
sub
push
add
push
mov
bound
gs
data16
inc
jnp
cmp
test
imul
sti
mov
mov
push
add
add
xor
xchg
xchg
sbbb
test
sub
jg
decl
fildl
and
xorb
mov
pusha
fs
fstpt
movsb
push
mov
sahf
lock
ja
rorb
ret
test
xchg
xor
jmp
or
decl
out
pop
sub
out
mov
push
jno
imul
or
cmc
sbb
imul
out
aaa
lds
jmp
cld
add
or
pop
lahf
push
dec
and
sub
mov
inc
je
jle
mov
mov
adc
mov
sar
cwtl
mov
rclb
cpuid
mov
ja
push
loope
shlb
mul
xchg
gs
mov
push
jge
sub
loopne
or
fisttps
adc
adc
jg
or
notb
fistl
xor
daa
sub
movl
pusha
imul
dec
inc
es
shll
push
sub
inc
inc
iret
pop
or
mov
jp
sbb
mov
hlt
adcb
push
lret
lods
scas
mov
shrb
adc
ss
or
push
pop
cmpsl
pop
subb
andb
notb
xor
push
call
cld
mov
outsb
popa
out
add
and
pop
mov
adcb
add
xchg
sub
insl
jl
loopne
movsl
and
mov
xchg
add
scas
lock
xor
inc
std
std
cld
loopne
psraw
ficomps
test
mov
mov
rclb
push
mov
mov
mov
sahf
jno
pop
stos
cmp
bound
push
clc
insb
push
lock
xor
movsb
push
decl
dec
push
adc
pop
push
sbb
rcrl
fldt
aam
add
out
in
xchg
fstpl
lods
sarb
cmc
push
xor
fs
and
inc
push
xchg
xchg
xchg
sub
mov
in
xchg
cmp
inc
pusha
jns
aam
js
loope,pn
mulb
mov
addr16
je
inc
mov
add
dec
fidivl
loope
fsts
inc
clc
sub
out
pop
and
insl
push
jecxz
jmp
testb
xchg
jo
xor
rol
mov
jnp
loopne
add
ja
mov
nop
mov
in
dec
fsubr
dec
int
in
movsb
add
jno
xchg
cmp
inc
pop
and
popa
inc
sahf
shlb
jno
inc
loopne
hlt
cmpsb
jnp
mov
xor
pop
mov
mov
fstps
and
pop
icebp
pop
leave
jmp
xchg
xchg
xchg
lock
adc
cmp
insl
mov
and
rolb
aad
pusha
shlb
pop
push
pop
cmp
cmp
jnp
jle
call
ficompl
lret
and
xor
dec
fmuls
or
pop
mov
es
jle
stos
mov
xchg
ds
and
and
js
mov
mov
mov
sub
jecxz
das
clc
sbb
test
cmp
das
std
shlb
cld
pop
dec
inc
add
adc
sub
in
int
inc
test
pop
shl
cmp
decb
fs
pop
lret
rcl
loopne
rcll
jmp
pop
les
xchg
test
mov
sbb
xor
pusha
xchg
lock
xchg
jp
adc
pop
push
xchg
push
cmp
loop
mov
decl
test
pop
bound
inc
jle
ljmp
cmp
pusha
std
jg
xor
test
stos
fisttps
and
cmp
jbe
fdivs
cli
pop
jge
push
dec
fadds
xchg
push
adcl
cmp
aam
push
call
out
add
or
aas
cld
adc
out
xchg
call
push
inc
push
pop
mov
int
xor
xor
jno
jg
xor
inc
and
lret
and
insl
lods
psubb
adc
mov
xchg
fsubp
popa
xchg
mov
les
sarl
adc
int3
test
cmc
cmp
call
gs
call
cmpsb
fdivl
mov
add
out
xchg
and
int3
add
jnp
xchg
fidivrs
cmc
lret
xor
ljmp
dec
mov
mov
dec
pop
or
sahf
jnp
lahf
cmp
lods
jmp
daa
fcmovnb
lea
push
push
sbb
les
adc
mov
int
fwait
ss
mov
je
jne
loopne
jl
in
scas
call
pop
aam
jne
loopne
cmp
dec
sub
mov
xchg
mov
xchg
cwtl
cmp
fidivl
cld
loop
lahf
movsb
and
fistps
push
xchg
test
testb
pop
xor
add
out
inc
cmp
lret
cltd
xchg
xchg
addb
push
mov
sbb
lds
in
mov
push
xchg
call
and
push
cmp
adc
dec
mov
dec
or
sbb
test
test
mov
stc
push
dec
out
cli
xchg
jle
ret
loopne
aas
sbb
mov
adc
cltd
ret
loopne
cmpsl
daa
sub
xor
outsb
jge
ds
movsl
ds
loop
sub
mov
rol
sub
shl
mov
jge
and
pushf
call
jp
pop
push
xorb
inc
loope
ret
rol
or
hlt
xor
ljmp
xchg
iret
std
and
ret
std
mov
pop
dec
xlat
or
sahf
int3
xchg
in
divb
and
sbbl
stc
daa
mov
outsl
lahf
in
stos
push
loop
hlt
mov
js
jg
popf
mov
pop
add
gs
sbb
popf
loopne
adc
mov
and
clc
inc
jecxz
test
or
and
cmp
pop
movsb
sub
and
add
cmpsl
xlat
dec
jns
hlt
aam
sbb
std
mov
sbbl
mov
push
adc
pop
ret
lahf
jecxz
lret
mov
cmpsl
fcoml
dec
mov
popf
in
push
pop
decb
fdivrl
mov
or
enter
fimull
fsubrs
dec
pusha
mov
inc
or
icebp
fwait
jb
or
call
cmp
and
sub
aam
add
fildll
gs
or
adc
lock
xchg
mov
addr16
push
mov
inc
or
stc
jbe
or
mov
out
adc
or
arpl
test
mov
adcl
push
rorb
fwait
mov
lret
fstps
pop
aas
pop
pop
scas
sbb
test
pop
loop
push
mov
xlat
arpl
inc
int
add
xor
mov
test
test
and
imul
mov
movsb
inc
dec
mov
cmp
js
or
outsl
imul
sarl
andb
movsb
mov
adc
inc
sub
aam
cmpsb
es
das
test
adc
mov
sub
sbbb
shl
int3
jo
jmp
and
mov
lock
sub
xchg
xlat
int
push
aam
jmp
xor
mov
rcrb
addr16
inc
inc
mov
ret
and
mov
push
xchg
das
fwait
mov
or
sub
and
add
sti
sbb
das
inc
cmp
push
rcrb
cmp
dec
ljmp
sbb
js
arpl
aaa
shll
add
hlt
or
scas
js
int
jo
nop
pop
sub
fwait
push
in
mov
cmp
in
lock
xchg
jne
lods
push
xchg
mov
mov
ljmp
and
lahf
mov
xor
jns
xor
xor
jo
add
cmp
and
clc
mov
mov
mov
add
pushw
add
je
mov
xor
sbb
push
jle
xor
jge
gs
aad
fdivrs
cli
imul
clc
xor
push
pop
pop
loopne
test
inc
inc
adc
xorl
inc
sarl
repnz
inc
push
pop
mov
test
inc
ret
cmpsl
cmpsb
or
sahf
dec
test
inc
inc
ficompl
incb
js
inc
dec
sub
movsl
and
jl
or
or
aad
ljmp
add
or
and
or
mov
mov
lea
rolb
lret
xor
and
adc
xchg
mov
loop
dec
push
mov
jno
push
pop
dec
js
mov
inc
adc
test
jae
ja
add
sarb
call
pop
mov
sbbl
xchg
push
mov
repz
mov
popf
push
lods
dec
loope
ret
mov
xor
rol
aam
cli
loopne
dec
fnstcw
jae
or
dec
pop
cmp
cmp
jecxz
or
out
scas
ljmp
jbe
enter
add
dec
xchg
lea
mov
data16
stc
ljmp
jno
fldenv
xchg
incl
jle
xchg
sbb
fwait
hlt
das
or
shl
clc
fisttps
mov
dec
js
adc
jmp
je
jne
and
adc
les
xlat
int3
out
stc
loopne
push
mov
or
and
sbb
aad
pop
insb
xchg
push
mov
cs
xor
jnp
push
ss
scas
sub
and
je
inc
cld
pusha
mov
adc
adc
add
or
test
daa
cwtl
jmp
inc
cmp
xchg
imulb
jp
insl
ret
jne
sub
imul
pop
mov
and
in
pop
shl
ljmp
sbb
adcb
ret
push
rorb
mull
cmp
and
fwait
je
outsl
fwait
aad
sbb
insb
mov
jmp
fsubs
cmpsl
mov
mov
add
out
adcb
ljmp
jb
shrl
scas
cmp
push
cmp
les
pop
movsl
fnstsw
or
mov
adc
shr
int
adc
xchg
cmc
loope
andb
jl
push
addb
push
add
cmc
lcall
xchg
adc
cmp
ret
jge
xor
loop
nop
outsl
xorl
inc
fcomps
test
outsb
xor
or
mov
nop
lcall
mov
mov
push
pop
sbb
adc
mov
jb
movswl
in
cmpl
mov
incl
mov
dec
arpl
push
cmp
push
clc
pushf
push
cmp
pusha
cmpsl
push
mov
and
ret
dec
out
leave
fdivrs
fucomp
sahf
inc
or
mov
aaa
pop
sbb
lahf
inc
das
sahf
mov
es
test
pop
fsub
cmp
cs
inc
inc
cwtl
imull
mov
dec
jae
push
rorb
lcall
cwtl
xor
jne
das
or
sub
imul
test
sahf
adc
movsb
adc
or
mov
cld
and
push
sub
enter
aad
ds
shlb
lea
js
mov
push
pop
fcmovb
pop
cltd
das
inc
jl
xchg
inc
call
dec
push
or
or
imul
sti
jmp
jbe
adc
data16
lret
lods
add
and
jo
push
sarb
popf
lcall
pcmpeqb
stos
mov
rcrl
cs
sti
shll
or
sbb
inc
mov
add
sahf
mov
test
xchg
rcll
mov
jno
pop
xchg
jb
popf
mov
jl
ja
mov
jecxz
mov
push
or
gs
aaa
fadds
mov
push
and
jo
fwait
inc
outsb
mov
insl
out
fwait
js
sub
jp
jmp
call
mov
xchg
sbb
into
insb
sbb
insw
mov
or
mov
mov
movsl
mov
jae
aas
popf
push
cmp
pop
imul
std
jmp
lcall
iret
pop
pop
lock
imul
int3
mov
cmc
js
ret
add
jne
stos
adcb
ss
icebp
pop
jle
aas
sahf
call
xor
outsl
js
sarb
leave
lcall
test
adc
push
dec
andb
jg
sarb
inc
adc
mov
push
bound
shll
xor
lcall
mov
push
sub
test
lds
mov
mov
push
lods
in
call
insb
out
pop
mov
push
aas
clc
mov
mov
push
js
and
dec
xchg
dec
call
das
ror
pusha
jnp
rclb
inc
cmp
test
gs
sub
mov
or
xor
popa
cmp
ljmp
push
pop
pop
adc
cmp
mov
push
stc
outsb
xor
inc
sbb
dec
adc
mov
sahf
addr16
pop
adc
enter
pusha
xchg
push
sbb
loope
dec
aas
mov
add
addr16
aam
pusha
mov
sbb
xchg
arpl
dec
ja
mov
mov
scas
inc
jne
lcall
push
gs
mov
dec
loopne
stc
je
add
pop
rcrb
inc
les
sbbb
jmp
cmpsl
push
or
arpl
outsb
fnstsw
add
fnstenv
dec
add
es
jecxz
xchg
push
rolb
orl
xor
in
rcll
sarb
scas
add
shrb
inc
mov
cmp
cli
test
inc
jne
dec
pop
adc
sahf
or
mov
jae
pop
shll
adc
sarb
sub
push
adc
sub
je
ljmp
xor
jl
sti
sbb
jne
mov
cmovle
sbb
adc
aaa
mov
sarl
std
clc
nop
cwtl
outsl
mov
dec
and
fnsave
cwtl
subl
popa
and
je
cmpl
js
inc
pop
push
arpl
inc
mov
cmc
aas
aaa
pop
rorl
lea
data16
mov
lret
jb
push
rcll
pop
or
ja
jle
call
adc
mov
adc
into
mov
or
cld
add
pop
mov
mov
xor
in
mov
loopne
sub
cmpsb
adc
out
jle
clc
sahf
leave
and
test
movsl
mov
xchg
or
cli
ret
stos
push
push
cltd
clc
jno
jbe
sbbl
xlat
rcrb
or
adc
test
lods
rolb
mov
aam
incl
inc
sub
lcall
jne
lret
arpl
sbb
dec
push
push
jmp
lock
push
pusha
in
mov
push
std
mov
adcl
mov
adc
mov
loop
or
push
xorl
inc
movsb
daa
sbbb
mov
lea
testb
ja
sahf
dec
mov
add
and
les
repnz
repz
or
lcall
lret
jne
stos
sub
add
lods
clc
add
sub
fisubrl
xchg
sbb
push
xor
push
arpl
jp
push
mov
das
sbb
aas
sub
loopne
jmp
jl
pop
push
bound
cmp
mov
fdivl
push
push
push
leave
call
stos
sbb
mov
sarl
stos
mov
xor
outsb
sbb
push
and
out
ds
call
cli
sbb
hlt
sbb
leave
dec
cmp
sbb
les
and
lea
repz
inc
and
xlat
dec
lods
dec
jecxz
xchg
mov
jmp
adc
fsubl
mov
jmp
add
orb
sbb
test
sbb
in
and
xor
icebp
ret
je
dec
jl
lds
rcrl
or
jle
xchg
popa
mov
pop
data16
mov
add
rolb
add
pop
not
call
lock
or
fcomps
std
add
xorb
mov
fucomip
sub
pop
add
jg
sbb
mov
insb
aaa
xchg
enter
loopne
sbb
push
pop
add
mov
rcr
push
mov
jo
lahf
lds
aas
fsubrs
movsb
cmpsl
and
sub
adc
jp
hlt
shlb
call
mulb
xor
push
mov
push
inc
clc
rcll
rcl
ja
leave
pop
jo
cmpb
push
jge
inc
push
jbe
inc
pop
aam
adc
pop
mov
cmp
insb
inc
pop
pop
jg
nop
pop
sub
lcall
push
loopne
hlt
cmp
and
test
fxtract
scas
not
sbb
cwtl
push
cmp
mov
vsubss
dec
dec
cmp
cmp
les
mov
fwait
push
cmp
gs
add
lcall
pop
leave
fisubrs
incl
in
mov
jbe
scas
pmulhw
fsubs
adc
and
xchg
mov
jl
mov
cld
insl
dec
pop
dec
bound
cmc
pop
cld
call
popf
cmp
fdivrs
aaa
xchg
jp
adc
js
sbb
push
pop
loopne
lahf
mov
rorl
adc
fwait
in
scas
jp
icebp
adc
daa
orb
inc
orb
aaa
xor
inc
xchg
or
movsb
push
movsb
pop
in
adc
js
aas
cmpsb
xlat
push
mov
or
jg
dec
lahf
dec
ds
repnz
movsb
inc
add
mov
shrl
mov
and
call
sub
rorl
push
adc
xor
sbb
dec
popw
scas
mov
mov
jle
clc
adcb
cmp
in
icebp
sub
dec
jb
mov
add
sbb
sub
popf
push
inc
push
cmpsb
push
mov
jbe
dec
ret
enter
fdivrs
mov
push
aas
popa
lock
out
dec
jbe
stos
jo
xor
or
or
scas
cld
das
and
or
fistpll
mov
xor
je
aas
jge
fimull
aad
dec
cmp
repz
and
cld
ret
fidivs
inc
addr16
icebp
rorl
xor
fisttpll
movsl
mov
sbb
jle
int
and
repnz
mov
out
ljmp
inc
push
xchg
mov
mov
in
subb
sub
les
push
pop
pop
in
cmp
xor
jle
pop
repz
lods
movsb
xor
cmp
leave
dec
cld
imul
or
lret
fisubrl
js
mov
fs
rcr
adc
bound
fucomip
jle
jo
dec
pop
fwait
inc
push
mov
add
xchg
jnp
sub
das
jg
int
inc
add
jl
sarl
inc
sarb
nop
xchg
mov
movsl
pop
fsubrp
mov
sub
dec
mov
popf
outsb
cmp
scas
dec
jmp
jns
push
push
cmp
mov
adc
repz
aas
cs
in
jmp
shl
rclb
pushf
adc
push
rcl
call
ret
test
fbld
cwtl
and
sub
inc
cmp
icebp
pop
cmpsl
test
adc
pusha
pop
scas
pop
mov
mov
stos
jno
cli
movsl
rorl
or
pop
mov
adcb
test
push
ret
rcll
mov
sub
pusha
loope
xor
inc
or
sahf
test
fldcw
xor
popf
aam
lret
ret
add
es
gs
push
push
adc
sub
push
call
xacquire
ret
decl
mov
adc
jg
cld
scas
dec
insb
pop
rolb
jno
or
popf
sub
mov
xchg
jo
xor
cwtl
sub
fnstsw
mov
cmpl
sbb
dec
or
andl
test
push
nop
test
mov
scas
call
fwait
call
dec
popa
or
std
loop
mov
out
lock
push
sub
add
mov
inc
mov
pusha
fwait
adcb
jp
mov
loope
movsl
jg
hlt
push
mov
rcr
icebp
jecxz
lcall
sbb
sbb
adc
push
repz
push
cmp
mov
jbe
jle
gs
inc
push
or
gs
test
dec
xchg
mov
jo
xchg
xor
adc
inc
pop
adc
mov
adc
rcrb
mov
sbb
adc
cmpsb
les
out
push
push
inc
rorl
mov
adc
dec
std
bound
jo
addb
outsb
adc
into
lds
std
icebp
cmc
cmp
sub
add
icebp
add
int
icebp
aas
cld
mov
inc
and
pushf
push
dec
aas
adc
shll
fcom
fidivs
adc
es
push
bound
sbb
xchg
shlb
or
pop
pushf
test
add
cmpl
or
sbb
nop
or
bound
xchg
push
rclb
scas
and
imul
ret
aad
push
fldl
hlt
xchg
pushf
xchg
pop
cmpl
xchg
pop
or
sahf
sub
loopne
into
sub
or
push
std
es
les
pop
jmp
sbb
stos
pop
dec
adc
aam
sub
out
mov
int
jmp
add
out
sbb
push
push
xchg
and
out
inc
and
sar
or
movsb
push
xor
ss
stc
test
test
out
loope
aas
or
bound
push
adc
add
jmp
mov
nop
test
cld
dec
test
jg
add
mov
mov
scas
xor
sub
lds
pop
xchg
push
push
iret
and
pop
pushf
pop
test
sbb
test
insl
xchg
pop
dec
enter
fwait
sub
movsl
cmp
cmp
xor
mov
into
out
shll
or
clc
mov
jbe
mov
inc
mov
ret
inc
sub
adc
popl
push
mov
clc
fwait
lock
dec
rcrl
pop
xor
or
xchg
cld
hlt
ds
xor
fdiv
add
sub
mov
mov
mov
hlt
ret
inc
push
lcall
push
jo
out
add
push
pop
ljmp
lods
cmc
cmc
cltd
rcll
jns
pop
inc
pop
pop
mov
jg
jno
or
test
ss
jg
sahf
add
rclb
pop
ret
dec
dec
push
and
gs
cmp
push
lahf
dec
inc
xor
dec
cmp
outsb
xorb
enter
hlt
ss
jns
push
lods
addb
push
std
inc
pusha
sbb
arpl
or
pusha
dec
xor
mov
lcall
sar
and
lock
and
mov
imul
dec
lea
addb
ja
mov
sub
icebp
repnz
xor
or
ret
lea
loopne
ret
pop
jle
dec
cmp
decb
mov
pop
decl
sbb
cmc
outsl
daa
data16
les
push
lock
push
cmp
pop
shll
in
and
addb
sahf
rolb
das
cli
cmpsb
das
ficoml
sub
roll
aad
cmc
xchg
roll
aaa
xchg
pop
in
cmpsb
pop
add
inc
movsl
sbb
arpl
inc
lods
fistpll
es
sarl
mov
dec
xchg
pushf
add
call
push
cli
push
add
pop
fisubl
xchg
cmp
pop
out
es
push
jle
xor
and
mov
insb
mov
cmpsl
fs
cs
mov
adc
call
and
jne
fadd
mov
shlb
scas
sub
sbb
loop
mov
cltd
dec
out
push
aad
inc
xchg
adcl
fidivrl
in
ljmp
mov
imul
add
jmp
dec
call
push
fimull
xor
mov
mov
hlt
fs
sbb
dec
mov
lods
pop
sarb
subl
popa
notb
lea
push
xchg
fimull
jle
mov
aad
xor
inc
pop
add
mov
mul
movsb
mov
test
add
or
xchg
and
or
in
and
cmpsl
mov
lret
cwtl
scas
add
sbbb
ret
mov
or
or
aaa
sar
xchg
push
mov
daa
or
push
or
inc
mov
cmp
cmp
fwait
jne
pop
scas
xor
sub
pop
jle
and
ret
push
mov
adc
push
mov
inc
rolb
and
mov
sbb
shrb
mov
lock
sbb
cmc
scas
xorb
or
jne
mov
pop
lcall
mov
cli
sbb
rcrb
jp,pn
int3
mov
call
sub
inc
daa
lret
mov
ror
adc
into
cld
xchg
daa
aam
es
cmp
gs
add
sub
fwait
cld
add
push
fisttpl
repnz
in
xlat
cmp
lds
cmpsl
or
pop
hlt
mov
xchg
push
movsb
sbb
mov
rclb
fwait
outsb
xchg
insl
je
mov
mov
cli
loop
and
or
dec
add
or
mov
cmp
enter
das
lahf
dec
push
outsb
lret
xchg
sbb
je
test
dec
xor
mov
push
cwtl
fs
push
inc
rorb
lea
jae
std
into
lods
negl
pop
adcb
lahf
add
sub
xor
icebp
adc
jb
fistl
xchg
pusha
enter
stos
dec
xchg
push
sbb
mov
aad
rclb
and
int
push
inc
sub
xchg
xchg
fs
add
dec
movsb
mov
sub
pop
inc
or
mov
sti
test
pop
fs
sbb
jae
mov
adc
insb
xor
fs
mov
sbb
stos
cltd
or
fildll
out
add
fwait
xor
add
push
sbb
sbb
dec
inc
cmp
cmpl
je
mov
jp
jmp
push
test
lock
mov
aaa
xor
push
and
outsl
je
xchg
ss
leave
jp
aad
or
mov
insb
into
popa
and
mov
clc
rorl
scas
add
xchg
push
inc
or
cmpsb
out
xchg
les
add
adc
in
xchg
or
push
mov
adc
sahf
add
mov
push
lret
test
xlat
xor
inc
cmpsl
loopne
add
sub
stos
shl
pop
roll
testl
outsl
xor
cmc
movsb
jbe
hlt
test
insl
mov
xchg
rcl
sub
cmp
cld
imul
pop
or
mov
or
pushf
xlat
lds
popf
mov
or
fmuls
in
scas
jl
das
fidivrs
fs
or
or
mov
movsl
mov
je
pop
xorb
adc
pop
rorb
and
mov
fwait
mov
nop
adc
or
xchg
push
adc
add
rclb
das
push
jb
addl
or
cmpsb
dec
or
rorl
mov
sbb
adc
dec
sub
cmp
adc
adc
cld
pop
movsl
in
lcall
jg
inc
and
add
pop
cmp
ljmp
shll
push
and
enter
xor
dec
xchg
fwait
and
mov
notb
out
jo
std
xlat
add
addr16
sbbl
dec
or
adc
loope
or
and
outsl
pop
std
enter
pop
insl
movsl
sbb
mov
push
inc
xor
cmp
jbe
pop
pop
add
scas
mov
push
addr16
imul
call
lahf
sub
inc
inc
pop
mov
xor
int
xchg
hlt
fisttpl
aas
or
test
lcall
sub
loop
xchg
data16
xchg
outsl
push
pusha
push
mov
jae
cwtl
movsb
aaa
fistl
mov
and
adc
insl
cli
mov
mov
lea
subl
ret
add
sbb
outsl
pop
pop
loope
cwtl
jmp
dec
mov
push
and
mov
lahf
add
je
loopne
cmp
aad
and
dec
pop
pop
popa
inc
pop
gs
jnp
ja
mov
push
inc
inc
adc
jnp
insb
mov
ror
dec
pop
dec
negl
loop
aas
scas
ja
push
adc
mov
cmp
inc
and
or
fbld
push
jo
fcoms
in
das
mov
or
lret
imul
or
mov
inc
sub
mov
sbb
in
or
aas
outsb
mov
je
rorb
das
jmp
adc
lret
sbb
shl
ret
xchg
hlt
mov
insl
je
adc
fwait
movsb
mov
fucomip
rorb
inc
add
mov
cmp
nop
rorb
ljmp
sbb
add
jg
movsb
adc
adc
xchg
pop
push
js
das
jle
addb
nop
pop
dec
xchg
mov
loop
mov
iret
scas
pushf
inc
mov
or
pop
sbb
mov
add
dec
sbb
enter
jmp
movsl
inc
cmp
push
jne
jno
lret
push
adc
mov
jns
insl
shll
ret
mov
arpl
dec
push
call
inc
hlt
inc
mov
cmp
xor
stos
mov
sub
sbbb
push
pop
addb
movsl
in
imul
adc
testl
or
dec
push
jp
mov
xor
movsl
in
fisttps
adc
mov
es
lods
xor
dec
std
sbb
mov
test
or
jl
orb
andb
adc
xchg
gs
pop
pusha
int
fldenv
push
mov
in
inc
psubsb
inc
shll
in
sub
sub
sbb
or
mov
sub
and
adc
popf
nop
and
push
xor
inc
inc
jmp
sbb
testb
xchg
into
sahf
out
lds
push
pop
or
fsubrp
dec
rdtsc
icebp
out
jno
shlb
jg
xchg
inc
cmp
dec
loope
mov
sub
dec
psraw
loop
push
out
jmp
or
xchg
mov
in
cmp
adc
bound
mov
jmp
xchg
loope
or
cld
int3
sbb
inc
push
pop
pop
inc
es
dec
cmp
daa
adc
xchg
mov
scas
mov
or
mov
cmpsl
xor
sbb
inc
jmp
push
xchg
ja,pt
lods
in
lods
addr16
clc
mov
xchg
sub
xchg
iret
sbb
cmc
lds
nop
arpl
push
testl
and
add
adc
and
stos
pop
adc
shll
push
adc
daa
and
jecxz
fnstenv
mov
movsl
sar
rorb
lock
and
imul
es
push
call
in
mov
add
test
mov
or
sbb
adc
xchg
arpl
dec
test
push
or
fmull
push
push
mov
or
jle
mov
mov
push
xor
cmp
pushf
add
xor
pop
or
dec
and
or
out
mov
add
jb
call
cmp
test
add
pushfw
sbb
xchg
push
xor
je
and
out
mov
jo
insb
xchg
jnp
lahf
mov
into
mov
data16
push
and
push
or
mov
test
dec
movsb
rorl
dec
aaa
mov
call
push
sahf
jbe
pop
inc
xor
mov
and
xchg
lods
cmp
cli
mov
insb
roll
pushf
pop
jae
xchg
pop
outsb
pop
jle
xchg
dec
dec
ja
add
add
xchg
adc
ret
cmpsb
inc
sbb
pop
jmp
xchg
jne
push
pop
xchg
sbb
jg
lods
pop
aas
test
jae
imul
cmovns
loopne
mov
dec
push
popa
sbb
sub
std
dec
loope
pop
loope
push
adc
mov
sbb
scas
and
aas
mov
mov
xor
imul
orb
icebp
xchg
xchg
adc
dec
ret
mov
sti
pushf
adc
inc
sbb
xor
andl
mov
das
push
push
mov
sbb
pop
inc
movsb
jg
mov
mov
sub
in
xchg
enter
dec
cmp
inc
and
lods
lea
cld
imul
repz
sbb
enter
aam
mov
adc
ja
and
xor
jae
add
inc
or
xchg
pop
mov
mov
xlat
aam
cmp
jl
popf
sub
outsb
mov
orl
lock
mov
push
mov
js
fadds
and
aas
nop
dec
sub
jecxz
mov
stc
push
cmc
inc
scas
push
aaa
popf
cmp
cmp
bound
pop
fistpll
xor
jg
mov
js
aaa
or
ss
test
jp
in
adcb
dec
shrb
push
pop
xor
call
jo
lods
push
rorl
out
inc
insl
jne
mov
loopne
or
mov
sub
push
jo
adc
or
icebp
cmpsl
cld
mov
in
pop
ficompl
jge
dec
inc
xchg
outsl
dec
rolb
add
cmp
or
jb
sub
in
or
push
sbb
jecxz,pn
or
or
nop
add
arpl
xor
cmpsl
cltd
jo
ja
mov
ret
mov
in
jp
jns
shlb
lcall
shrl
adc
outsb
cmp
popa
cmpsl
adc
je
shll
xor
stos
sarl
daa
sbb
rcrb
sub
xchg
int
sbb
loop
cltd
inc
cmpsb
mov
adc
jns
hlt
shll
mov
outsl
popf
jnp
rcrb
mov
jmp
mov
xor
scas
dec
pop
sbb
mov
mov
stc
call
or
pusha
cmp
lret
mov
inc
xor
lock
pop
movl
mov
stos
sub
jmp
pusha
pop
adcl
pop
add
push
imul
jmp
adc
jnp
clc
mov
pushf
int
pop
push
dec
cli
xchg
jecxz
xbegin
xchg
wrmsr
cs
cmpb
dec
ret
sbb
iret
adc
xchg
test
rcl
loop
incl
xchg
dec
dec
fldcw
or
and
faddp
jge
iret
xor
enter
adc
push
cld
and
pop
fisttps
xchg
pop
lahf
cmp
hlt
adc
add
fdivrs
mov
dec
jl
mov
inc
adc
inc
adc
mov
rorl
mov
mov
push
xchg
xor
jle
and
add
jnp
jmp
mov
pop
test
dec
inc
outsb
mov
add
cmc
dec
xor
dec
add
mov
fildl
pusha
sbb
mov
or
shll
sub
mov
adc
dec
ds
shr
subl
jno
mov
sub
xchg
inc
jnp
adc
xlat
jae
roll
add
dec
test
nop
push
fcomi
mov
add
pop
inc
jmp
adc
sub
dec
lds
add
xchg
loope
mov
sub
fldl
fcompl
inc
add
jo
nop
outsl
stc
mov
add
aad
loop
repnz
cmp
in
adc
in
xorb
jmp
fldl
and
dec
aad
out
sub
pop
popf
es
sbb
pop
rcll
adc
addr16
sbb
ja
mov
gs
fiadds
cmp
aaa
or
jp
ljmp
cmpsb
mov
and
out
inc
inc
sbb
test
or
mov
cmp
pusha
adc
jbe
xchg
adc
sub
lea
adc
pop
sub
xor
xchg
outsl
inc
sahf
repz
and
pusha
inc
loop
inc
fmull
xor
fldt
add
xchg
push
fbstp
xor
jecxz
mov
or
push
cmp
fmull
sahf
cmp
outsl
pop
and
out
adc
jno,pn
scas
jp
outsl
sbb
ret
push
inc
pusha
pop
test
out
or
in
repz
xor
jbe
outsl
add
sub
lods
mov
sbb
dec
xchg
or
fwait
jl
inc
ds
mov
jg
cmp
and
fst
cld
jbe
inc
popa
insb
test
into
lds
adc
sbb
xor
cmpsl
cltd
or
mov
mov
push
add
or
addr16
sbb
and
movsb
pop
jp
test
dec
push
inc
icebp
dec
and
lcall
add
leave
pop
pop
sub
cmp
xor
cld
xor
lods
or
lea
mov
shrb
jp
adc
aas
fidivrl
lods
xor
add
inc
pop
push
rcrl
and
std
xchg
sub
push
daa
fcoms
sbb
add
loope
adc
into
push
adcl
mov
cli
lahf
push
inc
pop
adc
es
push
mov
jl
outsb
dec
pusha
sbb
loope
cmp
xchg
mov
cmpsb
mov
fcmovnbe
xchg
dec
and
subb
movl
adc
dec
test
fisubrl
cmp
sub
cs
ss
add
lods
leave
or
pop
pop
xchg
xor
pop
movsb
adc
inc
and
xchg
bound
pop
add
sbb
fwait
mov
stos
fstpl
xor
popf
sbbl
repz
arpl
jle
mov
or
cmp
stos
mov
cmpsb
pop
pop
jecxz
mov
xor
jecxz
daa
xchg
cmp
jl
xchg
call
test
xchg
int
sbbb
xchg
rcrl
push
les
je
push
loop
xor
push
jge
pop
pop
xlat
sbb
mov
sbb
mov
loop
loope
push
inc
leave
out
mov
or
icebp
mov
test
mov
fdivr
ror
test
adc
test
dec
cmp
push
lea
leave
fisubl
ss
push
mov
pop
sbb
add
xchg
dec
push
mov
cmp
push
jl
dec
cmp
adc
std
add
jecxz
pop
aam
mov
sub
sbb
jne
xor
pop
lret
into
push
pop
fldt
ja
add
roll
mov
cwtl
jle
or
dec
cwtl
mov
ds
sbb
sub
shr
or
push
and
sahf
push
ja
insl
pop
add
sbb
clc
fwait
orb
xlat
lret
cltd
pop
jo
xchg
xor
int
pushf
push
jecxz
adc
out
jne
inc
or
daa
push
dec
out
inc
cmpsl
sbb
jns
adc
subb
sbb
mov
fcmovnbe
jp
cltd
jg
ds
pop
xchg
daa
icebp
add
jno
inc
outsb
insl
mov
push
jg
ret
jl
stos
xchg
push
fmull
sbb
pusha
outsb
mov
lock
xorb
gs
icebp
push
cli
add
js
cmp
adc
inc
aad
jno
dec
cli
push
or
ljmp
sub
jecxz
push
inc
sahf
fdivs
rcr
mov
mov
repz
pop
rorb
pop
sahf
pushf
or
daa
aad
loope
or
lret
pop
and
mov
leave
imul
add
icebp
loopne
sub
sub
inc
push
cmp
aam
lock
rcrb
add
jg
mov
addr16
out
adc
add
stc
adc
loopne
pop
lahf
sub
imul
rcll
push
scas
dec
leave
clc
adc
cwtl
in
and
jp
lret
push
pop
xor
mov
xchg
cmc
push
mov
das
sub
mov
jo
test
mov
pop
out
dec
sbb
xor
xor
and
jmp
out
je
cmp
stc
andl
test
push
inc
jp
pop
filds
mov
cmp
xor
test
mov
shrb
dec
imul
cmpsl
faddl
mov
test
cmc
xor
xchg
ja
cmp
mov
cmpb
icebp
loopne
add
mov
pop
jae
fisttps
subb
or
mov
outsb
sbb
roll
pop
push
out
movsb
xchg
movsb
ja
popa
fcoml
mov
dec
jnp
aam
cmp
pushl
into
es
adc
int3
test
popa
lcall
add
mov
sarl
les
js
fildl
sbb
xchg
jge
lea
push
ss
mov
loope
xchg
jle
mov
add
mulb
stc
shlb
xor
jg
cs
popa
push
mov
aam
cmp
out
lods
and
outsl
mov
sub
shll
je
in
lea
mov
out
push
popl
rorl
xchg
and
incl
cs
adc
or
fsubl
adc
loopne
lret
out
push
cmpsl
and
rclb
les
sbb
cli
pop
loopne
push
sub
dec
sti
mov
fistl
pop
dec
aaa
imul
enter
xor
push
pop
lds
sysenter
add
hlt
popf
lcall
and
mulb
and
push
mov
mov
rorb
mov
std
xchg
jo
and
pop
ljmp
push
lcall
pop
lock
lds
psrlq
push
pop
lcall
aad
test
clc
in
fidivs
inc
sbb
aas
ljmp
and
jo
clc
and
inc
adc
sub
inc
je
mov
jne
int
cs
rclb
push
data16
xchg
xchg
test
cltd
sti
push
add
lret
mov
nop
add
pop
push
movsl
or
es
xchg
leave
mov
sub
call
dec
fsubrs
jb
mov
test
mov
pop
mov
inc
sbb
nop
xchg
std
and
push
sub
shrb
jmp
cmpsb
add
fwait
or
and
dec
popa
push
or
repz
enter
ret
shlb
icebp
or
and
mov
xor
pushf
pop
mov
ret
and
cmc
push
xchg
sub
sbb
cmpsl
movsb
pop
xor
inc
ret
clc
push
cwtl
test
push
push
cmpsb
ja
and
or
aad
ds
negl
fsubrs
fbstp
jge
dec
add
test
or
pop
cmpsl
lock
pop
stc
in
sbb
xchg
test
or
aaa
push
movsb
mov
loopne
mov
rol
push
inc
cmpsb
rcll
fbld
cld
or
xor
sbb
cmp
mov
pop
lods
and
pop
std
movsl
cmp
divb
leave
addb
jle
punpckhdq
out
decb
lock
pop
cmp
test
mov
jecxz
cld
adc
push
sub
push
mov
or
aam
int3
xor
aaa
shrd
mov
sub
adc
and
mov
push
cmp
sti
and
push
mov
cmp
cmpl
push
ljmp
dec
or
add
sub
adc
shl
aaa
cmp
scas
mov
push
mov
mov
dec
out
inc
mov
addl
mov
lds
icebp
sbb
inc
jmp
fbld
loop
cmpsb
dec
aad
add
or
rolb
orl
hlt
cmpsl
mov
std
test
pop
mov
mov
pop
inc
jo
leave
sub
insl
or
insb
adc
adc
out
loop
scas
mov
es
xchg
pop
xchg
cmp
cli
aaa
and
dec
rcr
in
call
add
add
jle
mov
js
insl
inc
adc
addr16
pop
lods
sub
daa
mov
test
mov
iret
sbb
test
add
sbb
add
call
shlb
jno
fnstcw
cld
insb
out
fdivl
rcrb
imul
ret
mov
dec
pop
shr
mov
xchg
aam
fbld
jnp
stos
loopne
xor
mov
and
push
fstp
movsb
in
es
add
ljmp
xor
and
outsl
aam
add
std
sbb
nop
ret
in
mov
and
mov
nop
stos
pusha
loopne
mov
gs
adc
dec
sbb
outsb
mov
sti
sub
xor
sub
inc
cmpl
mov
aaa
push
xchg
mov
add
adc
dec
and
lods
enter
cmp
pop
pop
sbb
mov
repnz
pop
jecxz
bound
inc
adc
mov
mov
lcall
pop
push
cmpsl
popa
sub
adc
rorw
adc
push
add
fildll
shrl
stc
adc
pushf
in
and
data16
jbe
les
pop
outsl
add
mov
cld
xchg
test
add
mov
xchg
add
pushf
xchg
mov
push
loope
out
mov
int3
icebp
ret
adc
jge
mov
push
mov
push
mov
pop
int3
cld
aad
add
cli
xor
or
xchg
outsb
push
mov
xor
outsl
xlat
xchg
cmpsl
test
push
xor
cmc
and
test
adcb
adc
mov
sbb
sbb
inc
fistl
sub
std
sub
add
int3
inc
mov
rorb
je
outsl
lret
fwait
mov
jo
rclb
out
and
push
and
cmc
outsb
push
lahf
inc
xchg
add
xor
inc
rcrb
ljmp
hlt
jo
or
in
inc
jno,pt
cld
dec
mov
xchg
sub
repnz
pop
stc
push
aaa
xor
mov
pusha
cwtl
call
outsb
enter
pop
inc
push
clc
inc
bnd
loope
negb
cmp
rolb
nop
jbe
dec
lahf
mov
inc
mov
jg
insb
cmp
insl
insb
adc
sub
rcr
fstpt
out
fistpl
stos
leave
test
mov
jl
cmpb
pusha
jg
mov
push
sub
inc
dec
aaa
mov
xchg
repnz
sbb
inc
mov
jmp
xor
mov
aas
xchg
add
sbb
pop
inc
mov
addl
or
out
mov
jo
mov
stos
jge
push
push
imul
loopne
aaa
pushf
enter
out
or
mov
test
hlt
sbb
inc
ret
xor
cmpsl
test
movsl
sti
pusha
sahf
hlt
or
mov
inc
ja
cs
lcall
or
push
daa
ffree
es
xchg
out
sbb
inc
mov
jle
shlb
cmp
adcb
mov
pop
ss
mov
lock
cli
adc
cmp
inc
cli
loopne
lds
call
push
addb
xchg
or
adc
and
pusha
jge
push
inc
out
jg
int3
pop
inc
insl
ficoml
rolb
push
mov
cmp
aam
sbb
xchg
lock
inc
fistl
jp
mov
mov
mov
lock
frstor
imul
xor
movsb
or
mov
push
or
xchg
fs
aas
test
pusha
dec
xor
jl
addb
aad
inc
nop
jb
mov
rolb
imul
xor
pop
aas
cmc
mov
mov
test
sub
shr
jg
mov
inc
not
add
cltd
ljmp
scas
test
jge
popf
out
incb
jmp
loope
mov
mov
cmp
push
dec
in
rorb
dec
lds
sub
jne
push
shl
incl
mov
add
or
nop
dec
out
sbb
inc
inc
and
adc
fimuls
xchg
shl
fimuls
rcr
js
push
cmp
inc
scas
xchg
cld
icebp
movsb
jmp
xchg
int
sub
xchg
push
mov
jp
add
mov
push
sbb
test
subl
dec
adc
xchg
add
pop
ss
inc
lcall
and
test
lret
mov
in
stos
mov
insb
mov
ud0
aas
adc
lcall
fidivs
mov
sti
xchg
mov
lock
ja
inc
insb
aas
mov
inc
and
and
clc
sub
hlt
push
dec
jg
mov
or
sbb
in
pusha
pop
cmp
jo
dec
cmpsb
mov
daa
imul
adc
xor
dec
mov
xor
jbe
shlb
call
hlt
movsb
xor
sbb
mov
adc
pop
dec
jno
filds
ss
or
jnp
xlat
test
icebp
aad
push
sub
rcrl
xor
mov
and
or
es
pop
push
jb
cmc
stc
ret
add
enter
movl
pusha
sub
ljmp
sub
cltd
pop
push
cs
add
inc
in
loop
movsb
mul
add
cld
mov
sub
and
addr16
mov
je
cs
call
inc
out
imul
imul
pop
pop
test
icebp
inc
pop
fisttps
int
les
sbb
sub
dec
inc
rcrb
cmpsb
lods
jne
add
xchg
imul
iret
clc
sbb
xchg
gs
cltd
mov
pop
xor
arpl
ljmp
loope
sub
inc
or
mov
dec
inc
mov
jmp
lods
jns
mov
fiaddl
rcr
bound
jb
pop
mov
cmp
fsub
cltd
test
scas
cmp
add
loop
mov
mov
inc
fstpl
fdiv
aaa
jmp
sbb
ljmp
repnz
scas
aam
pop
push
push
je
adc
test
orl
inc
push
xor
jp
or
enter
int
mov
pop
lock
inc
pop
nop
push
lods
lock
jp
lods
sub
sbb
pop
out
jbe
cmpsb
sub
into
test
popa
add
fdivrs
push
cmp
jle
jb
and
nop
add
movb
sarl
adc
and
addb
push
mov
inc
incl
orb
sub
pusha
and
fsubs
pop
mov
imulb
and
popa
mov
fdivrs
mov
jns
mov
or
push
pop
sub
add
cmp
int
inc
loopne
iret
pop
dec
in
aam
sub
orb
js
sub
lret
sarl
rcrb
push
subb
lcall
fdivl
pop
dec
mov
inc
xchg
sbb
and
mov
jae
clc
or
lock
mov
sbb
pop
scas
mov
mov
dec
cld
into
enter
pusha
ss
leave
dec
test
insl
mov
xor
inc
inc
incl
cmp
mov
fs
push
sub
cmpsl
mov
rolb
mov
inc
ficoml
bound
clc
cmp
dec
lcall
out
fs
jo
xchg
int
loopne
inc
mov
inc
aaa
adc
pusha
push
je
push
jbe
xchg
lock
xor
sar
aas
je
test
jg
and
mov
dec
push
xchg
sub
pop
popf
stos
sbb
out
call
dec
in
push
gs
dec
test
xor
sbb
icebp
arpl
std
mov
xchg
movsl
aad
sarl
in
or
ret
mov
dec
push
rorb
ror
nop
xchg
daa
cmp
ljmp
mov
icebp
dec
push
push
cmp
test
lahf
push
outsl
testb
mov
inc
outsl
mov
and
jmp
push
push
push
pop
cli
fwait
test
and
leave
mov
mov
cmp
xchg
push
andb
adc
mov
aas
sub
mul
fdivr
cmp
inc
xchg
sbbb
mov
loopne
icebp
lret
aad
sub
ja
fadd
cld
ds
mov
mov
sub
dec
lcall
or
sub
adc
sub
adc
sub
xchg
aam
pop
fcoms
push
aas
aas
or
adc
xor
dec
std
bound
mov
push
enter
xor
or
lods
cmp
pop
test
data16
loopne
add
cmp
push
dec
sbb
insl
mov
dec
call
out
mov
jecxz
loop
dec
cmp
jge
call
xor
inc
mov
push
inc
mov
mov
ret
sub
dec
inc
nop
mov
jmp
inc
push
test
cmpsl
test
ret
push
je
push
fstl
jle
popa
ss
adc
cmc
dec
out
test
and
inc
lahf
test
daa
arpl
push
add
fstl
cltd
into
and
dec
and
mov
add
loope
jae
ds
cmpsl
fcoms
sub
out
scas
xlat
enter
jno
mov
pop
ljmp
sbb
inc
rorl
test
test
xor
mov
push
std
cmpsl
inc
push
dec
idivl
mov
sbbb
jl
push
cwtl
leave
fimull
or
loop
dec
addps
je
test
xchg
xchg
jae
dec
adc
fbstp
inc
lock
add
jo,pt
mov
cltd
lds
inc
adc
and
add
jns
movsl
pop
enter
rcrl
test
movb
fisubl
lcall
jecxz
xor
push
jae
mov
jno
negb
cld
jle
bound
in
outsb
insb
sti
fs
das
jb
sub
sub
push
push
sbbb
popf
mov
jmp
rcrb
jl
imul
add
sub
ja
push
dec
xlat
stos
popa
mov
mov
inc
lahf
sbb
push
dec
mov
mov
arpl
push
dec
adc
lret
xchg
mov
xor
or
and
lods
cli
cltd
xchg
test
xchg
adc
outsb
lock
mov
sbb
stos
jb
jns
rclb
sarl
dec
or
movsb
push
test
arpl
xor
mov
pop
lods
insl
inc
test
jge
stos
out
add
fbld
in
jnp
orb
and
xlat
jo
fwait
push
push
shlb
sbb
shlb
cmpsl
test
xor
clc
call
cmp
and
jl
ja
xchg
mov
jl
or
iret
pop
cmp
clc
cmp
cmc
iret
push
mov
or
scas
or
and
outsl
cmp
mov
xor
pmaxsw
sarb
clc
cmc
push
sub
mov
cmp
mov
and
js
loop
and
mov
push
loop
cli
fs
or
adc
xchg
xor
popf
insl
jbe
sbb
and
popa
add
fmul
imul
sub
jp
adc
lahf
push
mov
sub
sbb
lds
lret
mov
and
xor
push
cld
cwtl
je
and
xchg
popa
push
push
cli
aaa
cwtl
rorb
sti
jecxz
pop
push
add
pop
pop
sbb
mov
push
fadd
mov
fldcw
mov
sarl
lock
cmp
or
into
ret
and
push
cmp
pop
add
add
leave
push
adcl
insb
arpl
enter
insb
jae
mov
pusha
popf
inc
push
adc
popf
cmpsb
icebp
or
lock
mov
jns
mov
inc
into
movsb
cli
xchg
push
pusha
or
adc
pop
fbld
int
out
mov
addr16
subl
dec
push
dec
loope
ss
mov
es
sub
xchg
push
cmp
mov
loop
and
lods
lcall
fidivl
xlat
ljmp
push
push
shrl
mov
lea
repz
xor
and
cs
jne
sbb
pop
stc
daa
jb
xlat
mov
pop
inc
add
pop
daa
mov
pop
jmp
or
cwtl
ficoml
shll
and
fiaddl
push
xchg
xor
xor
shrb
mov
icebp
push
xor
or
loopne
leave
into
sbb
cmpsb
insl
rolb
inc
mov
sbb
add
ret
inc
mov
inc
push
in
push
xor
mov
mov
mov
cmp
ds
arpl
and
sbb
call
jge
or
daa
xchg
lahf
es
out
xchg
pushw
js
sub
dec
dec
mov
xchg
pop
cmpps
cli
mov
icebp
push
jmp
roll
shrb
sub
lock
mov
mov
cmp
jle
loop
stos
test
pop
cmp
les
jo
aam
jle
repnz
clc
cmpb
lcall
loop
es
ficomps
pusha
insb
lret
shrl
sub
inc
pop
jge
or
or
pop
mov
and
lea
jp
addr16
fwait
rcrl
popa
jo
inc
sbb
es
jl
inc
add
int
mov
arpl
dec
pop
xor
inc
sbb
inc
mov
xor
int
and
mov
mov
adc
mov
xor
js
mov
lahf
aaa
add
sbb
mov
pusha
pushf
fmull
subl
lods
or
inc
inc
cld
dec
push
mov
sub
pop
movsb
fisttpll
les
aaa
mov
mov
adcl
sub
int3
jecxz
call
and
cwtl
mov
inc
and
into
outsb
mov
fimuls
xchg
jno
aam
mov
pop
and
fdiv
mov
pop
sub
mov
jmp
out
sbb
daa
sub
cmp
inc
pusha
int3
imul
scas
cmp
lret
inc
mov
cmp
cmp
popa
mov
ret
mov
popf
inc
jmp
and
mov
inc
pop
iret
aas
mov
xlat
inc
inc
mov
insb
pop
cld
in
push
sti
xor
gs
jp
sbb
es
fisttps
dec
popl
enter
outsl
hlt
mov
daa
add
sub
xchg
pop
ds
aad
hlt
insl
pop
dec
cltd
outsl
xor
lcall
xchg
movsb
jbe
lds
jmp
andb
or
jae
loope
inc
jns
cmovo
or
fadds
mov
stos
lock
sub
mov
lods
xchg
lret
mov
mov
cmc
aaa
cmp
in
push
test
rol
cmpsl
or
aas
sahf
shlb
sbbb
lods
pop
leave
pause
lahf
add
jb
mov
cmpsl
bound
adc
and
pop
cmpsl
ret
lods
je
mov
adc
or
ja
xlat
adc
xlat
sbb
adc
hlt
xchg
and
mov
popf
jle
xchg
daa
sbb
lret
fidivrl
dec
cmp
xor
insb
pop
mov
cmp
sti
cwtl
loopne
mov
fists
cwtl
lods
es
cmp
cltd
popa
push
addr16
sbb
and
pop
or
stos
xor
mov
add
jnp
test
lods
pushf
pop
fisttpll
out
mov
and
out
or
sbbb
arpl
mov
imul
pop
movsl
cs
aad
pushf
or
insb
sbb
dec
push
mov
mov
add
mov
pop
push
push
loop
mov
add
sub
xchg
mov
dec
lds
or
pop
stc
mov
js
and
scas
pop
rorb
mov
jecxz
mov
outsl
shl
or
jge
mov
add
jl
or
or
push
popf
or
stc
loopne
mov
popa
jb
mov
jg
jb
call
push
add
cmp
std
jp
loope
xchg
xchg
add
adc
cmpb
push
push
pop
sub
dec
rcll
cli
push
imul
xchg
xchg
cmc
cmpb
sarb
fs
and
cltd
icebp
pushf
lret
arpl
test
inc
sub
icebp
loopne
and
pop
test
negb
sbb
add
fwait
jge
add
popa
push
sub
sub
out
add
mov
pop
cmpl
xor
js
sub
pop
jecxz
and
cmp
rolb
aad
xor
inc
addr16
repz
clc
vprotq
sub
inc
xor
sti
ret
pop
xchg
cs
mov
mov
push
icebp
subl
xor
cmpsb
push
js
dec
fwait
stos
pop
loop
adc
xlat
cmp
sbb
xor
mov
pop
pop
jl
clc
xchg
inc
inc
sub
cmpxchg
pop
aad
ret
pop
les
sarb
insl
mov
pop
lods
mov
int
int3
leave
aad
fidivrs
xor
cmp
enter
mov
pop
mov
mov
add
mov
mov
mov
mov
stos
js
xor
push
and
sbb
or
push
xchg
push
adc
or
insb
mov
ss
pusha
add
push
sbb
mov
aam
imul
mov
xorb
and
and
scas
push
lret
mov
pushf
into
mov
and
mov
pop
xor
jmp
nop
dec
fwait
cmpl
push
jns,pt
js
in
orl
ffreep
mov
mov
mov
sub
push
xorb
and
or
test
jne
mov
loope
cmpsb
mov
mov
test
dec
aad
fdivrl
sbb
sbb
dec
rorb
daa
pop
fisttpl
mov
ret
mov
ret
push
jno
mov
add
das
add
push
iret
aas
push
inc
jns
flds
out
mov
mov
pop
in
lahf
mov
and
loop
jge
push
push
push
cmp
dec
cmpsl
cld
or
xor
xlat
mov
fadds
std
xchg
fs
add
pop
add
fs
xchg
push
push
or
test
add
ljmp
pop
pushf
stos
jne
loopne
and
lcall
adc
xchg
sub
shl
test
in
loop
fwait
adc
jae
cwtl
dec
mov
test
orb
push
fs
mov
cmp
imul
lret
lods
xor
xor
dec
and
mov
mov
es
jp
inc
inc
add
and
iret
xor
psllw
dec
inc
mov
ret
stos
test
push
jno
and
xor
lret
nop
cltd
outsb
call
clc
cmp
mov
ficoms
ljmp
int3
bound
iret
loopne
rclb
aaa
xchg
test
test
jbe
mov
data16
loop
lcall
sub
inc
inc
mov
mov
ret
out
adc
pop
in
test
cmp
pusha
mov
sbb
xchg
cmp
stos
inc
and
movsl
dec
subb
les
out
xor
cs
aaa
sub
mov
pusha
fsubl
mov
and
push
adc
dec
cld
adc
inc
mov
fstpl
cmpsl
addr16
push
lret
cmc
mov
or
andb
fmull
mov
subb
push
ss
or
pushf
lods
lret
sbb
call
inc
testb
xchg
inc
pop
mov
mov
ds
xor
scas
out
xor
mov
nop
test
outsb
add
shll
sbb
xchg
xor
lcall
imul
push
dec
test
jp
push
sbb
lds
lret
push
push
sbb
mov
sbb
pop
loopne
pop
jl
movl
rcl
shr
cmp
or
test
les
pop
lea
adc
cmp
xor
push
cmp
pop
loope
shr
rclb
mov
cmp
lcall
adc
xor
add
mov
dec
orl
jecxz
loop
fwait
lea
mov
enter
jg
mov
lret
adc
mov
cld
sub
or
rcll
js
or
fwait
mov
xor
into
leave
jge
idivl
jecxz
or
lock
adc
cld
pop
cmp
out
add
pop
add
loopne
cmpb
pop
aad
mov
arpl
sbb
xor
inc
and
in
pop
mov
jno
xor
push
dec
mov
adc
xchg
js
lock
lss
roll
scas
lock
in
movb
call
ljmp
adc
addb
xchg
pop
xor
bound
out
jle
popf
jnp
dec
movsl
mov
insl
in
loope
icebp
cli
lcall
cmp
lea
inc
mov
inc
dec
out
xchg
iret
sbb
pandn
mov
je
in
hlt
lods
or
jb
in
mov
cmp
mov
addl
push
jb
jbe
rol
add
fdivs
orl
jle
je
outsb
inc
jnp
xchg
or
ret
jno
cld
add
push
movsl
cltd
or
inc
ret
sub
push
popf
js
fwait
call
inc
add
mov
adc
jmp
xchg
or
in
inc
sbb
fwait
test
pop
cmp
pop
movl
adc
mov
adc
adc
imul
inc
je
lods
or
jno
mov
add
ss
sub
push
and
or
sbb
or
scas
cmp
ljmp
mov
lods
daa
sbb
add
mov
cltd
test
mov
pop
xchg
imul
inc
dec
fadd
stos
lcall
dec
mov
jo
rcl
mov
nop
out
out
lret
add
roll
pop
je
add
loop
sbb
mov
and
pop
or
leave
pop
fiadds
sub
movsb
repnz
aad
mov
mov
push
jno
xor
adc
add
sub
mov
and
xchg
test
jg
jne
icebp
xchg
cs
adc
ss
pushf
loop
sub
aad
push
push
and
daa
loope
xor
inc
jb
arpl
and
in
aam
pop
jo
push
lods
cmp
push
inc
shrb
scas
cmpsl
add
dec
adc
cmpsb
ficoml
scas
mov
cmp
xchg
imul
lcall
cltd
fwait
loop
pop
nop
add
dec
xchg
fnstsw
aam
xchg
cmpb
test
push
push
iret
push
sbb
cltd
loopne
mov
lods
test
ret
adc
push
fsubl
negl
or
cmp
ret
xor
add
sbb
xorl
xchg
mov
rolb
js
mov
hlt
push
adc
jmp
ret
and
aam
push
jbe
jb
dec
aam
out
out
push
adc
std
sarl
and
dec
scas
sub
lods
arpl
push
jge
add
sbb
test
lds
pop
loop
popa
sub
test
sub
mov
das
int3
imul
insl
xchg
pop
xor
nop
push
pop
sbb
inc
movsl
adc
sbb
cmpsl
sbb
icebp
cwtl
icebp
mov
and
sub
loop
fs
mov
cmp
jno
or
test
mov
push
push
mov
rorl
mov
stos
or
xchg
je
jo
data16
inc
rol
xchg
js
mov
mov
add
cmp
fwait
ret
fwait
and
shll
pop
scas
lock
mov
mov
xor
jl
pop
or
mov
test
stos
imul
ret
sbbb
adc
lock
mov
ja
dec
pop
xchg
movsb
adc
and
push
aas
dec
xchg
lock
lret
nop
mov
push
ficompl
rcrb
dec
push
xor
cmp
push
and
xor
xor
pop
fimull
shrl
dec
and
js
loop
cmp
sub
fsubs
aad
loopne
jae
fwait
xchg
mov
daa
out
repnz
pop
jecxz
push
test
shlb
decb
out
in
sahf
dec
xor
cmp
ret
cmp
xlat
mov
test
fimull
cmp
push
jg
je
jo
andps
cmp
call
dec
xlat
xorb
repnz
sbb
xchg
jge
xchg
inc
sti
mov
jae
xchg
leave
mov
jno
shlb
add
sbb
inc
pop
lret
shlb
inc
xor
jp
or
sub
pop
and
push
jne
push
shlb
mov
pop
and
push
movsl
pop
adc
pop
daa
cs
push
rcrl
jmp
pop
push
mov
adc
or
inc
or
negl
frstor
cmp
jnp
inc
xchg
dec
loope
popa
xchg
popf
hlt
pop
xchg
arpl
inc
ljmp
mov
sbb
fstpl
xor
sbb
test
in
adc
dec
fadds
fsin
ja
aam
jbe
push
jne
or
sub
dec
xchg
sub
ret
gs
cli
push
loope
mov
or
aas
push
fimull
test
imul
ja
addr16
lahf
mov
ljmp
rcrl
fistpll
and
cmp
mov
xor
daa
es
mov
pop
ds
adc
inc
in
sbb
push
mov
cmpsb
out
out
call
movl
adc
bound
andl
stos
roll
xor
cmp
testb
sub
cmp
jb
leave
das
call
xor
sub
jns
add
xchg
das
aad
xorb
clc
dec
mov
int
cmc
movsb
loope
jge
adc
nop
sub
dec
shrb
cmp
into
mov
mov
out
jnp
xchg
mov
xchg
cltd
nop
addl
test
push
sub
aam
lcall
and
movsl
pop
je
or
or
adc
sub
add
add
dec
imul
cmp
add
sbb
pop
fistpl
adc
sarl
or
xor
adc
pop
fists
aas
out
and
fildl
cmp
and
out
das
push
push
add
mov
mov
in
cld
jmp
inc
sub
or
cmp
push
or
daa
add
je
std
adc
int
pop
mov
ss
mov
push
out
add
shlb
pavgw
ret
enter
aam
loope
shll
or
and
mov
arpl
pop
pand
aad
imul
bound
imul
popf
fsts
cmp
mov
mov
adc
mov
sbb
cmpb
incb
ja
mov
xchg
adcb
test
mov
inc
mov
dec
ret
dec
sbb
ds
push
xchg
add
fidivrl
das
mov
fcmovnbe
sub
dec
jp
sti
push
ss
push
cmp
jg
fimull
nop
imulb
in
cli
jl
ds
xchg
jnp
pop
mov
fwait
mov
mov
or
lock
xor
cmp
inc
dec
cmc
out
mov
mov
xchg
cmpsb
adc
sub
sub
mov
sub
sbb
mov
cmp
xor
js
aam
pop
movd
pusha
addr16
cmp
pusha
mov
add
pop
or
adc
xor
insb
jmp
jbe
jmp
xor
xchg
lea
lods
mov
push
cs
push
outsb
outsb
adc
popa
xchg
push
push
inc
pop
jecxz
xor
dec
and
dec
mov
pushl
xchg
mov
mov
cmp
push
gs
cmp
add
aad
dec
sub
pop
xor
insl
out
pop
iret
in
loope
mov
icebp
cmp
and
sub
adc
daa
lahf
mov
loope
lock
test
xor
jns
int
mov
mov
sbb
je
or
and
gs
mov
mov
lcall
add
lret
and
jp
sbb
and
bswap
push
hlt
bound
or
div
pop
dec
push
popf
xchg
andl
mov
cs
lcall
mov
les
and
add
in
mov
push
outsb
je
cmp
test
dec
roll
and
test
xor
sub
pop
and
sbbl
inc
mov
mov
rclb
test
cmc
arpl
roll
add
pop
push
dec
cmpl
adcb
sahf
xor
aam
mov
subb
add
and
cmp
das
js
jae
stc
hlt
faddl
push
bound
in
and
and
xchg
lds
cmp
scas
or
arpl
adc
rcl
dec
pop
add
and
and
jecxz
cmp
ret
aaa
adc
scas
mov
mov
daa
pop
repz
scas
test
adc
test
cmpl
pop
shlb
pop
pop
xlat
inc
mov
pop
cli
loop
xchg
mov
pop
nop
enter
or
ja
mov
inc
push
ss
pop
mov
xchg
mov
mov
sbb
mov
in
pop
add
test
xchg
pusha
xchg
and
xorps
pop
scas
lock
mov
inc
dec
mov
aam
pop
fdivrs
or
je
shl
not
jle
push
rcrl
aaa
stos
addr16
je
jmp
xchg
rolb
inc
int
mov
sub
sbb
jle
data16
xchg
sbb
sbb
movsl
ss
pop
xor
or
dec
out
xchg
clc
js
ds
push
cmp
mov
mov
pop
arpl
popa
mov
or
pop
push
lock
into
stc
test
mov
mov
sub
in
push
popf
cs
mov
sbb
dec
insb
jb
mov
shr
lahf
int
xchg
sbb
flds
repnz
mov
icebp
pop
test
inc
mov
pushw
lcall
xor
push
mov
hlt
jno
rcl
mov
xchg
aam
mov
push
cmp
mov
and
clc
mov
adc
popf
sbb
rcll
pop
fwait
sarb
rol
jns
xchg
push
aaa
out
sbb
imul
outsl
fdivr
push
cld
cmp
xchg
add
shlb
loop
cmp
int3
and
mov
sbb
and
or
add
in
pushf
out
or
push
test
dec
or
sbb
fidivl
fiaddl
mov
and
adc
incb
push
or
stos
filds
dec
mov
ja
jg
pop
pop
mov
stos
mov
aam
lds
addl
sbb
div
int3
sahf
mov
movsb
dec
call
imul
dec
mov
sahf
xor
fildll
inc
mov
sub
push
inc
dec
jns
dec
daa
dec
cmpsb
adc
lahf
je
mov
sbb
aaa
lock
rolb
add
dec
std
outsl
scas
xchg
cmpsb
mov
inc
sbb
or
scas
das
inc
cmp
mov
mov
lss
add
xchg
pop
inc
cmp
rolb
adc
aas
std
adc
js
cmc
pusha
or
lea
dec
movsb
into
nop
sub
push
or
cmc
pop
pop
repnz
jb
lret
xchg
loope
loop
icebp
pop
and
insb
sub
loopne
in
mov
sub
dec
outsb
jp
cli
iret
add
js
cmp
rcr
mov
test
test
call
jge
int
cvtdq2ps
and
jno
add
dec
sbb
cmc
enter
xor
stos
xchg
inc
aam
daa
dec
mov
and
add
push
xorb
xchg
jg
aas
pop
dec
mov
jbe
dec
pop
dec
xor
xchg
adc
push
mov
xlat
shll
data16
stos
inc
xchg
lahf
pop
jge
sub
mov
pusha
pop
xor
outsl
xor
cmpb
hlt
rcll
mov
es
lods
lock
mov
test
ja
inc
std
leave
dec
decl
cld
fadds
fnstcw
cmp
or
test
cltd
into
cwtl
fdivrl
frstor
jmp
loop
cmc
int3
xchg
ss
enter
add
incb
cmp
pop
outsl
or
inc
insb
add
sbb
scas
or
inc
mov
adc
push
push
inc
add
cld
xchg
dec
ret
lock
mov
sahf
dec
fcompl
in
je
push
loopne
imul
insl
dec
dec
pop
ljmp
pushf
out
or
xor
ds
sbb
les
push
xor
pop
pop
inc
ret
add
lret
lcall
call
mov
rorl
pop
ficompl
mov
cwtl
xchg
jp
bound
shll
psubusb
mov
popf
inc
daa
sbb
adc
cmp
xchg
push
pop
roll
loopne
sub
aam
xchg
mov
adc
push
hlt
sub
sbb
or
les
inc
jmp
mov
or
xor
pop
jg
pushf
pop
and
cmpsb
pop
mov
gs
cmc
gs
mov
cmp
dec
lods
dec
sbb
xor
sahf
dec
push
jge
stos
insl
sahf
xor
movsl
mov
adc
rcrb
cs
mov
out
jle
lods
jo
sbb
pop
add
pop
js
push
clc
dec
xchg
orb
mov
adc
loope
data16
dec
popa
clc
sarb
or
push
fdivs
sub
testb
mov
clc
or
adc
or
stc
js
pusha
push
push
add
mov
adc
fsubrl
adc
mov
xchg
fiadds
add
or
in
push
cmpsl
outsb
dec
scas
cmc
in
mov
jb
dec
lea
loop
dec
clc
or
mov
pop
insb
fsubrs
xchg
addr16
sub
sbb
inc
clc
in
xchg
mov
sbb
inc
int
lret
loope
pop
dec
mov
xor
add
sub
cmp
mov
inc
sbb
rorl
mov
or
jbe
sub
scas
push
movsb
int
mov
das
cmp
add
sub
jl
cmpsl
fldenv
cmc
mov
sarl
sub
aas
mov
push
and
mov
xor
ficomps
clc
lret
popa
bound
add
filds
inc
sub
ljmp
scas
add
decl
xchg
fidivl
sti
add
xchg
ret
or
shll
popa
shlb
or
mov
push
cmc
sbb
mov
adc
cwtl
jmp
call
or
and
push
adc
push
sbb
sbb
dec
push
pop
inc
ret
loope
sahf
mov
lods
dec
insl
push
lcall
rclb
or
push
lcall
mov
xchg
xchg
push
push
cli
mov
dec
sti
sahf
leave
mov
xor
mov
add
ds
lds
pop
ljmp
push
jb
xor
movl
insl
das
cmc
mov
imul
push
sbb
lods
xchg
inc
cmpsl
push
add
jnp
sbb
addl
cmp
cli
mov
add
add
xchg
mov
jp
add
ffreep
mov
dec
mov
inc
stos
or
xlat
das
pop
not
out
loope
push
test
xlat
into
and
loop
arpl
dec
push
out
daa
das
sub
adc
sbb
lock
enter
cmp
mov
ljmp
call
jne
push
in
sub
jge
sbb
cmc
dec
js
test
inc
or
enter
inc
aad
xchg
js
das
hlt
mov
jp
mov
or
or
jnp
popa
call
jo
dec
popa
out
xchg
jmp
fldl
out
xor
sub
js
pop
div
stos
and
xor
stos
icebp
imul
mov
fldcw
sub
test
mov
mov
call
sbb
lock
test
xchg
push
fnstsw
rcll
adc
lods
adc
xchg
cs
ds
sbb
push
mov
mov
add
mov
addb
mov
xchg
jl
cld
adcb
push
and
and
test
out
sub
sbbl
imul
stos
mov
and
add
adcb
jl
js
lahf
int
lds
cmpb
shl
mov
test
out
add
test
sub
inc
adcl
call
sub
sub
pop
mov
addb
clc
mov
mov
sbb
inc
mov
data16
pop
jo
and
add
push
loopne
in
shl
outsl
cltd
in
stos
lds
fisttps
cmc
ret
shrb
adc
jns
cli
aad
fs
cmp
insb
adc
add
push
lret
pop
lock
cli
jo
popa
push
stos
pop
cmp
sbb
push
aaa
xchg
pop
cmpsl
nop
fwait
add
push
repz
pop
add
cmpsl
decw
push
in
dec
addr16
mov
lcall
adc
ret
inc
stos
lret
pushf
test
test
and
imul
sub
mov
xchg
lock
scas
xchg
inc
jecxz
in
xor
das
sub
iret
outsl
cmpsb
add
movsb
or
sbb
cmp
in
ds
ds
lahf
idivl
add
sbb
sub
aam
gs
mov
cld
hlt
push
ret
test
outsb
pop
fs
sbb
jns
or
inc
hlt
ret
cmpsb
mov
scas
cmp
push
add
pop
cmp
movsl
dec
pop
jo
sbb
js
pop
test
aad
insl
sub
mov
and
or
stos
leave
insb
subl
data16
sub
sub
add
clc
xchg
mov
sbb
or
xor
and
xchg
jo
mov
mov
or
mov
dec
ret
add
mov
lahf
loopne
jns
popa
fadd
xchg
add
push
push
pop
xor
aas
out
repz
mov
stc
lods
scas
push
pop
add
mov
in
pop
mov
sub
adc
push
mov
and
mov
or
data16
scas
or
xor
sub
xchg
or
cmp
clc
lahf
pop
mov
jmp
pop
aad
arpl
adc
cmp
nop
mov
popf
cmp
sbb
pop
out
out
enter
aam
fs
push
push
mov
fcmove
xor
push
cmp
aad
adc
dec
cmp
test
adc
pop
fwait
mov
sbbb
inc
test
mov
adc
mov
push
aas
adc
push
outsl
test
cld
mov
sbbl
mov
push
inc
stos
push
decl
jno
jecxz
ds
adc
push
icebp
mov
rol
inc
mov
push
inc
loopne
popa
ret
dec
or
or
lret
jp
cmpsb
mov
adc
jl
pop
adc
mull
mov
movsl
and
push
sbb
or
adc
xor
inc
das
adc
or
mov
sar
testb
pop
cs
loope
or
cmp
or
jge
adc
sahf
lds
dec
push
lret
pop
jp
stos
and
in
cmp
and
push
add
sub
clc
cmp
and
ret
shl
lcall
inc
or
xchg
cmp
or
xor
cmc
cli
or
and
rorb
dec
pop
nop
dec
fs
pop
jb
mov
add
test
sub
call
pop
je
lret
int
or
cwtl
jbe
jp
fsts
add
push
pop
dec
push
lahf
mov
mov
xchg
stc
fwait
lret
add
jge
rolb
movsl
lock
jbe
or
sbb
xchg
ljmp
push
or
out
sbb
movl
bound
inc
push
mov
jg
mov
or
sub
jbe
mov
jnp
push
lcall
cs
jb
mov
clc
mov
jns
or
pop
enter
cmpsl
mov
add
call
ret
mov
ss
or
fs
cmp
add
and
insl
sub
adc
pop
pushl
xchg
push
cli
sti
jmp
dec
xchg
inc
mov
dec
cmp
jnp
enter
pop
arpl
or
xor
mov
decb
inc
lahf
jl
jle
fs
pop
jo
adc
cmp
push
orps
rcr
ficoml
push
mov
rcrl
imul
aaa
xor
push
push
movsb
push
shll
xor
test
push
das
scas
adc
push
data16
pop
rorl
mov
mov
sub
inc
jae
pop
and
fsubrs
inc
gs
ret
dec
js
or
cli
js
cmp
jge
sub
loop
hlt
cmp
xor
dec
xchg
loope
or
aad
mov
pop
lock
fimuls
xchg
xor
push
call
xor
test
lret
std
mov
movsb
aas
jle
xchg
sbb
lcall
xor
mov
ret
stos
add
cmp
cli
adc
dec
xlat
fidivrs
outsb
orb
call
sbb
cli
or
push
sahf
aaa
add
or
xchg
nop
mov
adc
jecxz
test
arpl
or
incl
push
mov
aas
hlt
rcl
sub
push
rorb
sarb
pop
xchg
mov
hlt
lock
pop
add
adcb
sub
shrb
dec
lcall
and
push
mov
push
mov
aas
outsb
jp
push
push
and
aam
cmp
ljmp
add
mov
mov
mov
adc
push
aaa
add
std
mov
popf
dec
and
mov
xor
mov
hlt
xchg
ljmp
push
xchg
mov
movsb
loope
inc
mov
aas
xchg
mov
and
insb
inc
cmp
out
addb
ljmp
xor
lock
sbb
push
xlat
add
push
cmpsb
into
mov
xorb
mov
mov
jno
push
dec
inc
into
test
dec
mov
popa
and
cltd
sbb
in
cmp
fs
sbbb
push
push
pop
push
mov
mov
loopne
sahf
stos
cmpsb
xchg
cmp
aam
lahf
xor
fwait
cld
and
cld
je
inc
clc
neg
cmpb
test
bound
fstps
arpl
js
ret
lahf
lods
shrl
mov
hlt
dec
mov
mov
rorb
or
mov
add
lock
adc
pushf
jns
add
pop
push
pusha
cmp
xchg
push
or
cmpsl
or
mov
fsubrl
push
or
dec
add
cmp
mov
pop
mov
cmp
inc
sbb
les
inc
xor
cmpsl
adc
push
mov
mov
hlt
pop
or
ret
jle
arpl
or
ret
shlb
lds
mov
xor
out
pop
test
xor
fsubrp
or
lahf
lds
loope
fidivrs
add
cmp
mov
mov
pop
les
psllw
mov
jl
add
hlt
or
or
in
or
insb
hlt
jecxz
dec
or
inc
pusha
shrb
movsb
sahf
jecxz
push
clc
xor
enter
fcmovu
dec
mov
test
movsb
lcall
inc
in
sbb
push
jg
jnp
cmp
add
inc
mov
cmpsl
pop
and
dec
cltd
pop
mov
dec
pop
pushf
sub
loope
cmp
jns
subb
cli
cmpsb
push
imul
sar
lea
adc
out
fbld
jo
insb
add
sub
cmp
es
enter
pop
sar
dec
inc
inc
sti
dec
inc
mov
dec
sahf
clc
jne
shl
inc
aad
je
pusha
and
mov
and
mov
scas
fs
outsl
lret
jae
sbb
sub
sbb
add
mov
lea
cld
push
mov
imul
cmc
sbb
scas
push
add
push
pop
les
lods
enter
sbb
jmp
daa
popa
loop
out
decl
enter
aas
pop
stos
lret
pop
pop
pop
jo
mov
pushf
xchg
arpl
push
int3
mov
shlb
push
pop
inc
mov
call
sarb
ds
insb
loop
ret
jg
mov
pop
pop
cld
cs
and
js
nop
pusha
mov
movsb
inc
jns
mov
fidivs
das
mov
rcrl
imul
sub
mov
inc
cwtl
inc
mov
pop
jmp
aam
and
test
and
popf
inc
push
mov
pop
clc
and
or
mov
inc
movsl
scas
or
pop
pop
pop
sbb
pop
cli
inc
dec
mov
sbb
shlb
or
dec
push
fistpll
and
pop
pop
inc
push
jp
lods
out
cmpl
jmp
add
popa
push
lock
adc
cwtl
xor
shll
pop
mov
clc
mov
dec
sbb
jl
cltd
push
int3
into
js
jns
repz
mov
imul
lea
sahf
mov
push
add
fwait
adcl
push
fwait
mov
jbe
adc
adcl
cld
sbb
ljmp
mov
push
pop
lock
pop
sbb
cli
imul
jmp
mov
or
fnsave
fdivrs
push
stc
int
imul
mov
xchg
mov
cmpsl
pop
std
sub
insl
cld
add
mov
sub
xor
insl
ret
sub
testb
mov
leave
adc
into
pop
sub
and
xor
pop
les
cltd
mov
add
inc
pop
lods
and
fstl
mov
and
imul
or
js
fucomi
das
mov
ret
and
push
jae
mov
inc
scas
aas
dec
iret
mov
idivb
xor
icebp
popf
out
lcall
and
aam
mov
cmpsb
jo
lret
adcl
jnp
loope
out
mov
lock
in
rorl
inc
adc
cmpsb
inc
jmp
adc
mov
push
cmpsb
nop
call
push
mov
popa
push
jg
push
xchg
xor
and
lods
into
stos
xchg
cld
mov
sbb
mov
and
aam
sub
jno
xor
idiv
test
pop
push
pop
cs
enter
in
mov
imul
mov
mov
mov
aad
push
in
add
or
push
xchg
push
inc
adc
scas
cmp
sbb
dec
sbb
xchg
push
sub
or
mov
mov
sbb
xor
dec
mull
sahf
pop
clc
in
clc
lods
push
mov
dec
incl
xchg
sbb
imul
dec
hlt
xor
sbbb
es
and
mov
push
sbbb
or
sbbb
mov
stos
mov
shrb
mov
fwait
insb
xor
pop
dec
mov
push
movups
adc
inc
inc
cmp
mov
lods
inc
andl
aam
sbb
cmovo
arpl
push
les
divb
movsb
push
add
jp
int
adc
and
xchg
f2xm1
mov
pop
mov
aad
adc
lcall
mov
adc
mov
xor
mov
frstor
daa
sahf
push
mov
mov
cwtl
push
and
dec
fldl
sbb
dec
rorl
inc
xor
mov
div
nop
sbbb
imul
fwait
les
dec
xor
loop
pop
cld
mov
and
sbb
aaa
and
aam
or
cmp
push
add
or
mov
xchg
dec
adc
dec
and
jnp
ret
add
xchg
loop
fcomps
test
mov
enter
push
jno
inc
scas
add
je
icebp
das
mov
jnp
test
aam
mov
pop
les
sub
sub
adc
inc
movb
js
addr16
loop
pop
daa
rcl
xorl
push
cmp
push
test
pusha
shll
add
adc
sbb
imul
jp
imul
xor
jne
lret
fmuls
call
outsb
cmp
push
jo
inc
cmp
cmpsb
mov
pushf
pop
and
mov
mov
pusha
outsb
sbb
fiadds
jno
mov
outsl
cs
pcmpeqb
loope
outsl
sbb
xchg
shll
icebp
js
cmp
iret
xorb
adc
pop
mov
cmp
stos
sbb
add
lahf
loopne
xchg
mov
test
leave
icebp
sti
jp
xor
scas
add
or
adc
lock
sub
rcll
inc
cli
testb
add
xor
sbb
pushl
popf
test
fistpll
out
insl
sub
add
cld
or
mov
mov
ljmp
inc
cmpsb
leave
pop
loopne
add
sarb
loopne
int
mov
out
or
dec
stos
jge
push
inc
xchg
push
pop
dec
dec
mov
xchg
notb
push
xchg
test
lret
adc
nop
je
test
pop
xor
xor
xlat
jecxz
out
and
clc
and
add
bound
pop
jp
xor
inc
pop
lahf
lsl
mov
adc
bound
adc
dec
outsl
stos
inc
nop
inc
ficoml
mov
lock
push
jae
add
mov
nop
add
sub
jmp
push
mov
scas
iret
ss
xchg
and
push
aam
pop
call
xchg
cmp
es
cli
or
aas
addb
aad
test
filds
scas
xchg
leave
int3
sbb
cmp
insl
shl
adc
sbb
cli
add
into
fisubl
rcll
adc
xorb
fmulp
stc
cmp
xor
dec
fmull
lret
jge
orb
movsb
adc
sbb
aas
cmc
push
pop
inc
sahf
ljmp
adcb
inc
scas
aas
repz
sbb
mov
enter
mov
mov
pushf
sarl
outsl
repnz
push
add
sahf
scas
push
or
mull
push
pop
mov
addl
lds
jo
jne
bound
push
enter
stos
push
adc
pop
xchg
cs
and
mov
jg
inc
loope
add
and
sarb
nop
loopne
insl
push
stos
data16
pusha
xor
fwait
jge
out
movsl
sub
adc
in
mov
push
in
lcall
ljmp
fs
ret
sub
inc
fists
inc
push
xchg
sub
out
jg
mov
or
test
rorb
ja
push
cmp
rclb
add
inc
cmpsl
push
pop
lds
xor
mov
scas
andl
jae
cld
cmpl
rcrb
fwait
mov
and
mov
aad
sub
pop
mov
sbb
and
or
and
hlt
into
push
fbld
adc
fidivrl
aam
sbb
xchg
and
clc
imul
jbe
sub
icebp
cmp
in
jmp
pop
cmpsb
mov
clc
pop
dec
stc
jl
outsb
sub
mov
xor
ret
inc
xchg
das
mov
or
jb
loop
mov
mov
daa
loope
pop
cmp
sub
lahf
inc
out
std
lds
ljmp
sub
lods
into
pop
pusha
push
and
jnp
mov
push
or
repnz
gs
fsubp
push
mov
out
sbb
ss
pop
je
data16
pop
and
mov
sub
cmp
inc
les
ret
xchg
popf
or
sarl
push
out
sar
and
ljmp
insb
mov
pop
loope
cmp
or
xor
fwait
jne
sti
loop
xor
pop
jno
inc
and
xor
decl
test
pushf
mov
imull
pop
movsl
push
mov
ret
and
jb
repz
push
push
xor
shlb
mov
and
stos
icebp
cmp
pop
cmp
mov
jns
inc
sbbb
out
insl
xor
lds
mov
std
loop
inc
mov
jns
lret
cmpsl
call
or
stos
xor
daa
mov
pushf
cs
rolb
and
jg
insb
fstps
adc
in
or
out
mov
inc
xchg
cmpsl
in
add
fmull
mov
movsl
popa
lods
pop
jge
xor
mov
mov
lods
add
or
dec
inc
pop
addl
jne
jl
in
xchg
sahf
mov
and
fdivrs
inc
dec
clc
jb
add
jne
aad
pop
or
int
test
xor
sar
sarl
sub
and
and
shl
fs
repnz
scas
dec
mov
cwtl
pushf
or
test
addr16
push
test
cli
in
pop
fidivs
pop
mov
mov
sbb
xchg
sbb
sbb
outsb
imul
lock
sbb
lds
cld
sbb
push
jp
pop
push
mov
mov
andb
jo
jge
jp
inc
xor
sub
sbbl
mov
in
stos
sbb
loop
or
mov
mov
add
test
jnp
sbb
adc
pop
jp
sub
cmpl
jg
inc
pop
add
imul
test
and
test
nop
aad
nop
arpl
sub
xchg
cwtl
inc
mov
insl
imul
push
adc
adc
popa
xchg
dec
cwtl
push
cltd
add
pop
out
jo
or
mov
lock
mov
insl
push
pop
xchg
je
ja
inc
pop
adc
cld
pop
popf
cmpsl
jb
mov
xor
addb
inc
mov
xor
jecxz
adc
xor
cmp
arpl
and
jnp
jo
pop
cmp
pop
xchg
dec
arpl
mov
xchg
xchg
add
pop
lahf
fadds
jl
jnp
push
out
mov
hlt
fnstsw
xor
dec
push
push
xchg
leave
or
push
sub
add
and
aam
or
fstpl
or
fstpt
in
jge
fsubrp
adc
and
dec
movsb
mov
push
xor
dec
inc
adc
mov
add
ljmp
lea
sbb
aaa
fadds
cld
int3
xor
or
push
pop
lock
loope
insb
sbb
insl
mov
xor
or
lods
test
ret
cmp
mov
add
and
inc
fwait
push
adc
stos
mov
sti
jp
mov
mov
cmpsl
imul
mov
sbb
mov
cmp
pop
ljmp
insl
daa
in
loop
mov
pusha
daa
inc
mov
sahf
add
jnp
mov
push
xchg
ret
mov
scas
lock
sarl
push
sbb
repnz
mov
sub
adc
in
and
test
xor
mov
lret
mov
lret
hlt
or
push
or
cld
js
lcall
inc
imul
and
adc
adc
outsl
aaa
inc
mov
ds
cmp
mov
mov
mov
add
in
add
mov
inc
out
adc
push
roll
lret
pop
int3
xchg
addb
add
inc
dec
daa
sbb
sbb
loop
xor
scas
jae
cwtl
inc
fcomi
dec
ljmp
lahf
mov
int
sbb
sahf
add
outsb
daa
test
mov
std
cli
das
adc
xor
adc
pop
loope
mov
fdivs
rcrl
std
testl
and
insb
inc
jmp
mov
popa
xlat
mov
lret
aad
and
adc
popa
imul
mov
and
dec
lea
jge
stos
adc
movsl
arpl
ret
xchg
mov
xor
cwtl
xor
push
sbb
inc
aas
daa
mov
popf
add
sub
add
and
xor
xor
push
and
repz
js
mov
adc
or
xor
pop
mov
inc
les
pusha
push
mov
insl
dec
daa
mov
sub
mov
shrb
leave
mov
xchg
xchg
testb
cmp
ret
jge
mov
das
lods
mov
xchg
cmp
xor
or
jo
insb
cltd
cs
adc
cmp
jg
movsb
push
jle
mov
or
jns
xor
jne
lret
xchg
pop
sub
add
mov
add
jg
jne
cmp
cmp
mov
mov
test
les
shll
inc
adc
mov
xchg
inc
mov
and
ss
mov
inc
fidivs
in
pop
mov
jno
mov
lods
sub
int3
fs
and
mov
sub
leave
scas
xor
cli
or
ds
and
inc
std
into
sub
jmp
sysenter
adc
and
outsb
push
xor
mov
shlb
sar
push
rol
sub
es
rol
in
cmpsl
orb
sbbl
xchg
cltd
mov
fstpl
nop
ja
mov
imul
xchg
sub
sub
sub
dec
ret
lea
in
icebp
xchg
jle
rorl
in
mov
addl
push
js
sub
jmp
dec
jecxz
dec
push
mov
mov
mov
in
fbld
rcrb
pop
inc
fldt
xlat
rcl
pop
sub
jle
arpl
insl
bound
out
cld
test
cmp
jecxz
push
jle
xor
pusha
fwait
loopne
hlt
jmp
inc
test
lcall
call
xchg
lret
stos
mov
out
ret
add
sub
lea
adc
lds
sbb
rolb
dec
lea
mov
xor
jnp
mov
inc
dec
lods
sarl
clc
mov
pop
ds
test
dec
nop
jge
xorl
imul
faddl
das
sub
jg
jne
repz
std
cwtl
leave
dec
dec
inc
or
or
xchg
inc
jne
rolb
out
mov
rolb
das
add
add
jae
mov
imul
aas
pop
es
mov
stos
sbb
roll
adc
adc
movsb
cmp
loope
sub
rcl
arpl
mov
or
out
jbe
test
ss
cmp
mov
flds
jns
or
add
mov
mov
ret
cmp
dec
addr16
shlb
loopne
test
call
push
jnp
scas
sbb
mov
arpl
or
cli
push
jle
out
mov
mov
in
inc
popa
inc
push
ret
cmpb
pop
scas
idivl
aas
pop
pusha
mov
sub
push
test
pop
sbb
push
add
mov
add
movsl
test
mov
stc
push
add
in
or
sbbl
dec
gs
xor
sub
addr16
insl
add
nop
test
pushf
xor
shll
lea
movsb
sub
or
stc
ja
pushf
mov
and
test
fnsave
xchg
dec
out
in
mov
push
aad
lret
rcr
sbb
sbb
dec
mov
aad
push
xchg
dec
push
sbb
jo
pop
mov
add
push
ds
test
mov
je
and
lods
xor
xor
jge
and
mov
or
or
sub
adc
dec
mov
add
adc
or
dec
xchg
hlt
out
sub
ds
aam
or
out
out
sub
loop
mov
and
sub
mov
sub
mov
inc
lea
sub
repnz
mov
idivb
mov
push
inc
pop
dec
ret
iret
les
syscall
and
lods
xlat
out
test
pop
sbb
testl
xchg
pop
push
test
inc
mov
pop
or
adc
popa
stos
mov
push
ja
cmpsb
add
lock
ja
mov
imul
lea
repnz
movsb
mov
hlt
loopne
loope
mov
xchg
movsb
loop
pusha
aad
lcall
jg
add
inc
push
jle
aad
mov
call
mov
add
addr16
or
je
ret
xchg
imul
mov
sub
adc
pop
dec
loope
daa
cmc
loop
out
shll
test
adc
fdivr
mov
test
jp
fnstcw
pop
pop
or
adc
cli
movsb
iret
out
test
xlat
addl
and
dec
pop
xor
ret
outsb
cmp
imul
add
pusha
test
hlt
add
cmp
inc
ret
pop
pop
in
shrb
or
fldl
push
xor
jnp
sbb
or
jnp
dec
lea
jmp
fiaddl
jg
loopne
mov
les
arpl
pop
sbb
scas
imul
je
push
addr16
mov
xchg
jp
lods
clc
enter
stc
and
jne
cmp
andl
shll
xchg
fs
fwait
cltd
pop
movsb
xor
mov
mov
lss
mov
jae
jo
jb
test
rcrl
xchg
mov
test
adc
andb
enter
popa
push
loope
adc
push
pushf
add
enter
add
ficompl
mov
rcll
xchg
pop
push
test
je
cmpsb
shl
mov
sub
adc
mov
jno
sub
sub
lea
icebp
lods
insb
gs
fisubrl
jg
mov
cmp
ret
xor
insb
bound
and
mov
mov
cmp
test
add
test
push
sarb
and
jns
adc
test
stos
sbb
pop
cmp
xchg
rclb
das
dec
inc
scas
cmp
loopne
or
popf
push
fdivrs
sbb
cltd
adc
lock
inc
bound
add
movsb
fwait
aad
test
cli
mov
imul
pop
jno
lea
lds
xchg
std
mov
pop
mov
pop
scas
adc
jnp
lds
and
add
sub
xchg
out
inc
dec
insl
hlt
icebp
insl
call
mov
scas
mov
xchg
cmpsl
push
xchg
ds
pusha
sub
test
ret
pop
call
mov
or
push
and
xor
stc
pop
mov
js
mov
sub
test
loopne
cmpsl
jmp
mov
mov
inc
mov
loope
xchg
clc
push
loope
stos
mov
mov
xchg
xlat
add
loope
push
pop
sbb
push
jge
sahf
mov
jno
iret
shll
sub
nop
push
loop
lahf
adc
jl
xlat
xor
push
jge
lock
ljmp
inc
add
jne
or
push
mov
dec
mov
xor
add
ljmp
scas
xchg
xor
das
mov
in
testl
mov
pop
outsb
or
mov
rolb
out
adc
pop
pop
cmp
mov
lods
inc
lahf
dec
push
sbbl
inc
sub
ret
sub
fcmovb
dec
push
add
dec
int3
loopne
jo
call
or
aas
addr16
popa
adc
sub
lea
mov
mov
daa
les
cmp
xchg
mov
aas
xchg
sbb
shlb
das
pop
jmp
mov
jecxz
ret
sub
jge
mov
or
adc
in
jo
test
loopne
lods
arpl
jae
xor
cmp
pop
jmp
push
jg
and
mov
orl
cmp
adc
xor
mov
mov
repz
push
icebp
push
inc
push
jl
sarb
cmp
movsl
sub
cmp
cmp
jns
seto
push
or
adc
mov
pushf
jle
loopne
mov
mov
ficoml
sbb
adc
andb
lods
or
adc
xchg
ret
mov
mov
out
test
outsb
scas
shrb
arpl
xor
jmp
ret
je
test
push
mov
addr16
mov
fisubs
sub
incb
clc
andb
cmp
adc
or
in
push
xchg
pop
je
mov
daa
mov
addl
dec
movsl
rcl
out
enter
shll
pop
insl
xor
lret
mov
mov
cmp
inc
adc
pushf
test
xchg
test
les
mov
mov
jecxz
xor
ja
rcr
insl
mov
mov
cltd
adc
lods
roll
in
out
pop
xor
mov
jnp
xor
xor
jp
nop
pop
lahf
lea
push
inc
sub
add
loop
fidivrs
dec
sbb
dec
ja
daa
addr16
cmp
imul
push
push
inc
add
xor
pop
xchg
roll
and
js
divl
dec
std
dec
sahf
in
push
js
pop
mov
stos
je
dec
iret
push
mov
mov
add
mov
jnp
sub
sub
jmp
cmp
xor
jns
cli
jl
test
jo
rclb
aad
add
test
jb
or
pop
jbe
popf
inc
test
sub
cld
ficomps
pop
and
and
mov
stos
inc
or
pop
inc
cmp
out
in
mov
dec
inc
push
mov
xchg
std
sbb
xchg
sub
sbb
and
and
cmp
or
movsb
ss
ds
mov
jecxz
jl
and
popa
in
call
mov
and
pop
mov
jnp
xor
sub
fwait
xor
shll
cmp
or
dec
popa
mov
scas
ja
rcl
mov
adc
mov
outsl
jb
pop
fucomi
mov
mov
test
shr
les
sub
mov
popa
xor
cli
orl
inc
sbb
scas
fimull
jno
sarl
sbb
cmpsl
sub
and
sub
fwait
jg
lahf
rclb
mov
and
xchg
cmpsb
rorb
imul
jbe
ret
daa
test
in
add
cmc
mov
jmp
fstps
inc
pushf
inc
shlb
call
xchg
loope
scas
cs
in
ret
push
popa
pop
js
aad
aad
cs
mov
pop
cmp
and
fs
ss
aaa
push
fwait
out
pop
mov
test
jle
test
vmovmskps
xor
ljmp
add
xor
cwtl
sub
gs
out
loopne
pop
push
pop
push
fnstcw
pop
add
push
or
shll
cmp
fwait
push
pop
cmp
jmp
xchg
xor
jno
xor
or
inc
roll
adc
sarb
pop
test
lea
mov
jp
and
xlat
scas
stos
ljmp
aad
xor
hlt
insb
leave
mov
mov
add
xor
or
mov
sbb
js
push
movsl
popa
and
lds
pop
push
pop
jp
adc
inc
mov
pop
sbb
rcrb
fldl
sub
mov
hlt
add
bound
or
cwtl
stos
bound
dec
int3
or
mov
bound
loop
mov
repz
hlt
fldcw
cli
cmp
outsb
or
cmp
lock
and
cmp
insl
pop
paddusb
pop
cmp
test
js
xchg
sub
data16
movsl
pop
adc
inc
cmp
add
dec
or
pusha
pop
aad
xor
push
test
das
jle
and
pop
je
pop
ljmp
bound
loopne
add
popa
push
cmp
dec
dec
fisubl
adc
mov
push
xor
sti
jno
ds
inc
lods
inc
inc
jae
xor
lods
movntq
cmpsl
pop
or
clc
sbb
inc
jmp
adc
jo
inc
or
mov
popa
push
fsubrs
out
rolb
loope
push
xlat
sbb
dec
cmp
enter
dec
test
push
xor
gs
or
fsubl
lret
loopne
ja
or
sub
sarb
mov
adc
out
and
mov
push
pop
inc
sbb
ret
add
mov
aaa
dec
loope
lods
sbb
mov
sbb
add
jne
ljmp
xchg
xor
jg
push
dec
jge
ret
dec
ja
je
push
inc
cltd
adc
ljmp
push
pop
sarb
and
sbb
outsb
int
in
pop
test
inc
or
jp
push
dec
mov
repz
dec
push
or
and
dec
rorl
push
adc
ret
sti
adc
das
inc
cmp
lret
loopne
cmp
imul
aad
jg
inc
ja
mov
call
cwtl
mov
mov
insb
sbb
mov
movsb
daa
pop
mov
and
mov
cmpl
aam
xchg
scas
outsl
ds
fstpl
dec
pop
pop
test
mov
pop
clc
insb
addb
mov
loopne
lock
push
loop
adc
sbb
mov
or
mov
push
iret
mov
sub
lcall
cli
ret
test
nop
iret
xchg
cs
into
ds
push
jl
lea
jb
cmpsb
pop
aad
or
or
pop
enter
sub
psubd
dec
shrl
mov
and
call
pop
cmp
in
mov
add
mov
hlt
push
sarl
mov
sbbb
es
pop
movsb
fcomi
xor
pop
xchg
sub
stc
jne,pt
push
pop
dec
mov
add
js
nop
push
sbb
arpl
stc
adc
test
xchg
test
adc
jo
test
or
lock
in
lods
daa
sbb
test
stos
mov
dec
cmp
aaa
mov
cmpsb
xchg
lret
subl
xor
fldcw
pop
jmp
adc
jl
push
je
call
popl
mov
adcb
cmp
dec
lret
pop
out
andb
dec
jnp
leave
jbe
in
in
mov
or
es
cmc
sbb
das
pop
mov
and
test
push
lcall
outsb
pop
mov
xchg
test
dec
add
fcmove
mov
jp
ja
les
add
jbe
movsb
or
xor
lahf
or
dec
or
call
adc
sarb
sbb
dec
add
pop
push
or
in
pop
cld
addl
and
in
lret
mov
stos
pop
jo
pop
jbe
test
pop
sbb
bound
mov
adc
or
hlt
mov
outsl
push
sbb
sub
adc
push
xchg
and
clc
add
mov
sub
imul
jecxz
fucomip
pop
adcb
mov
fcomps
lret
add
leave
scas
fisubs
push
and
and
leave
lret
ja
push
js
cltd
sub
lahf
imul
cld
xchg
mov
les
cltd
adc
into
fisubrl
imul
shll
or
xchg
add
sbb
jp
scas
add
std
mov
push
adc
aad
das
inc
inc
xlat
cmp
jle
xchg
cs
repnz
sub
jbe
push
bound
repz
mov
cs
cld
jp
jp
inc
pop
cmp
or
add
shld
rorl
ljmp
ja
and
hlt
pusha
jnp
add
xchg
sbb
pop
aas
sub
push
cs
stos
and
mov
adc
sub
xor
ret
rolb
adc
push
dec
jecxz
test
sub
jmp
pushf
adc
sbb
popf
inc
test
adc
imul
sbb
mov
ja
cmpsb
mov
insl
or
add
inc
outsb
iret
lahf
movsb
fidivs
pop
ljmp
andb
pop
cmp
call
and
repz
lock
std
ret
es
and
cmp
or
pop
je
sbb
push
rcl
xchg
or
ljmp
adc
push
movsb
mov
rcrl
aaa
sbb
insb
imull
cmc
lods
jge
mov
mov
sbb
and
sub
or
sub
repnz
sbb
jl
ss
out
movsl
add
shll
pop
aas
movsb
les
fcom
jae
sbb
sbb
fistl
push
jo
ret
inc
inc
jmp
fmuls
mov
xchg
bound
xchg
rolb
lcall
gs
push
adc
or
push
sarl
imul
sub
fs
iret
imul
fwait
inc
sbb
and
jg
push
add
popa
js
dec
outsb
mov
cmpsl
call
cmpsl
iret
ret
mov
or
repnz
cmp
or
adc
fwait
cmc
test
scas
test
push
mov
insb
pop
sub
dec
push
fistpll
mov
sti
dec
shlb
movsb
repnz
inc
lahf
add
xchg
cmp
rorl
in
pusha
fcoml
jno
sbb
inc
jp
xchg
mov
sub
cmpsb
lods
rorl
imul
aam
xor
mov
test
mov
xor
push
fdivrs
cmpsb
std
addr16
and
lret
pop
pushf
and
inc
les
sub
loopne
pop
icebp
pop
repz
loopne
xchg
out
xchg
xchg
ljmp
scas
cmp
addr16
jb
cmp
mov
push
cmp
testl
pop
push
cli
mov
in
and
aas
jo
adc
lea
xor
xor
mov
fisubl
int
add
shll
lock
cltd
cmp
and
mov
bound
in
aas
aas
mov
mov
push
and
xlat
testl
jle
in
fwait
add
adcb
mov
lods
xchg
push
cmp
mov
dec
jl
inc
jecxz
jmp
ja
cmc
mov
push
sbb
inc
pop
insl
outsl
xor
outsl
mov
bound
out
sbb
xor
clc
push
addr16
lret
dec
adc
push
cmpsl
into
push
enter
xchg
and
hlt
push
cld
mov
pop
sbbb
outsb
adc
xor
mov
mov
and
sbb
or
pusha
push
fadds
xchg
jo
xchg
out
adc
xor
or
add
add
push
push
shlb
pop
sar
inc
aaa
adc
lods
sub
in
mov
fcom
ret
jns
jle
inc
dec
xor
pop
imul
inc
roll
cmc
xchg
adc
lock
sub
cltd
and
pop
pusha
out
loopne
test
ljmp
fwait
aam
inc
inc
sti
cmp
mov
loopne
popa
es
mov
mov
icebp
inc
stos
push
mov
mov
xlat
pusha
lods
xchg
push
pop
adc
jbe
andb
cwtl
push
push
mov
paddw
xor
pushf
lcall
mov
or
imulb
cmp
sahf
das
nop
call
lret
out
push
add
loopne
cli
add
fs
pop
lea
mov
cmp
jl
inc
mov
xchg
and
pop
insb
jp
aam
lret
aad
xchg
into
dec
lods
data16
xchg
outsb
mov
pop
jno
insb
mov
iret
out
jmp
cmp
in
jmp
mov
pop
fistpll
int
sahf
test
daa
lods
dec
adc
inc
js
add
shrl
call
xlat
decb
pusha
test
lahf
adc
push
add
ljmp
and
dec
push
push
pop
imul
les
std
dec
cmp
cmp
lea
add
fsubrs
ret
or
dec
pushf
test
shll
movsl
filds
daa
xchg
inc
mov
test
pop
xor
or
lds
in
bound
repz
inc
mov
repz
xchg
add
loopne
xlat
jmp
jp
mov
inc
sub
cmp
mov
stos
adc
lds
mov
push
push
lock
sub
add
scas
icebp
sahf
mov
call
notb
and
xchg
movsb
out
lods
lret
lock
pop
in
pop
mov
xor
in
mov
inc
lods
hlt
and
dec
cmp
ficoms
ficomps
add
lock
mov
jle,pn
bound
push
pop
ret
movups
and
negb
js
ljmp
mov
out
or
cmc
pusha
dec
xchg
loopne
fld
xchg
jb
mov
stos
or
ja
mov
mov
or
jle
andb
xchg
xor
or
jle
push
mov
sti
mov
fcomip
call
les
push
clc
jbe
fucomip
pop
push
mov
ret
xchg
inc
sub
or
add
in
or
mov
ret
pop
shll
add
stc
mov
or
jecxz
in
push
mov
cs
lock
cmp
adc
fucomi
repnz
mov
aam
ret
pop
dec
insl
ret
push
mov
cmp
pop
pop
stos
cli
push
dec
dec
sar
dec
dec
and
jmp
jno
rclb
enter
fs
add
addr16
push
js
leave
ret
cs
movsl
test
inc
clc
out
pushl
add
mov
dec
test
add
add
std
mov
shll
push
cmp
stos
rcl
or
and
add
je
xor
mov
jecxz
mov
adc
aam
loopne
out
outsb
sahf
in
imul
mov
shl
dec
cmp
push
push
xor
or
imulb
add
inc
clc
pop
sub
push
mov
mov
cltd
fnstcw
and
cmp
shlb
leave
push
or
ret
fsubrs
aas
jns
jg
inc
aam
mov
inc
dec
in
cmp
mov
jg
and
add
sub
fbstp
int
mov
psadbw
lods
mov
andb
xorl
cwtl
inc
nop
mov
inc
addl
dec
cmp
mov
cmp
aaa
mov
rol
test
pop
call
cli
cmc
add
sbb
out
imul
imul
jo
mov
cld
lds
sbb
sub
jae
xchg
mov
jbe
lods
and
aad
test
add
inc
sub
sub
hlt
push
fdivrl
hlt
or
pop
aaa
push
dec
xchg
mov
inc
inc
and
data16
cmovle
rcrl
nop
divl
out
cmpsb
mov
bound
adc
pop
out
clc
stos
pop
add
in
or
pop
mov
xchg
mov
inc
or
mov
or
xchg
fidivl
jb
in
sub
in
inc
push
or
fadds
insl
pop
push
xor
xchg
jle
or
mov
push
icebp
aaa
xchg
dec
faddl
xchg
add
ret
les
clc
test
xor
pop
xorl
das
nop
movsb
mov
stc
dec
in
jg
dec
pop
push
mov
aaa
dec
dec
xor
inc
and
ss
xchg
bndldx
xchg
dec
incb
add
lcall
xchg
sti
add
cltd
jmp
xrelease
mov
and
iret
pop
dec
rorb
xor
sub
cli
jno
or
sub
mov
xchg
add
aaa
loopne
dec
mov
repnz
es
jo
mov
xchg
js
mov
xor
add
rorl
stos
and
jl
imul
inc
dec
mov
das
mov
lahf
mov
or
fimuls
jge
addl
dec
sbb
or
adc
adc
rorl
rcr
bound
xchg
cmc
lock
jp
dec
pop
add
xor
push
push
xchg
push
nop
push
std
pop
pop
mov
in
jo
test
or
sbb
add
das
adc
mov
push
add
sub
push
dec
gs
out
and
movsb
mov
bound
lret
data16
mov
pop
add
pop
cwtl
test
dec
mov
mov
and
jne
lret
cwtl
adc
leave
and
outsl
loop
enter
cmp
pop
sbbl
fwait
and
cmpsb
aaa
sub
or
pop
ficomps
mov
mov
data16
pushf
cmp
inc
xor
pushf
fwait
jno
jnp
out
cmp
mov
and
adc
mov
subb
push
sbb
aam
sbb
iret
mov
jne
push
les
jne
stos
loop
fstp
divb
stc
xchg
push
insb
gs
movsl
int
inc
test
add
subb
testl
push
in
push
xchg
sbb
fiaddl
jbe
lcall
xchg
fldl
movl
push
fs
stos
mov
and
cmp
push
mov
jnp
and
into
cmp
out
clc
pop
sub
sub
cmp
movsb
push
xchg
jl
cwtl
adc
add
push
mov
fcmovb
out
cli
xchg
sbb
scas
sahf
jg
jmp
out
sahf
dec
out
ljmp
orl
aam
pusha
mov
ret
adc
call
shlb
test
ds
adc
sbb
in
or
or
popl
rcrb
jmp
mov
mul
negl
add
xchg
add
fsubl
and
aad
adc
es
jo
push
jl
and
pop
rcl
dec
inc
fmull
adc
clc
mov
lahf
inc
lret
or
out
mov
fwait
xor
lret
adc
mov
cltd
jp
mov
popf
and
or
fdivs
nop
mov
mov
push
call
sarl
loopne
inc
jae
pop
dec
sub
inc
sub
pop
hlt
es
arpl
fnsave
daa
mov
pop
int3
xchg
fwait
nop
jmp
jb
xor
popf
jle
adc
outsb
or
sbb
mov
and
mov
push
sti
daa
mov
insb
inc
fs
inc
or
mov
aas
jns
mov
stos
arpl
rol
mov
fcmovne
movlhps
inc
push
mov
xchg
stos
loope
inc
push
aam
orl
movb
arpl
adc
insb
ss
ucomiss
push
addb
cli
mov
jp
lds
cmp
scas
jp
sbb
scas
cld
div
test
xchg
and
jle
ds
imul
push
xchg
dec
or
sbb
mov
stos
jl
out
add
clc
loop
jnp
push
fdivr
xchg
js
js
stos
mov
shrb
jns
dec
in
push
decl
adc
xor
or
jl
clc
xchg
and
push
jno
mov
dec
pop
pushf
mov
jmp
or
sub
pop
pop
jg
sub
ds
insb
shll
ljmp
popa
add
inc
xor
push
adc
sub
inc
sbb
ss
xor
mov
jg
adc
and
loopne
and
fmull
sbb
nop
aas
mov
pavgb
enter
pop
cmp
stc
adc
jecxz
shrb
xorb
xchg
mov
sbbb
or
and
adc
and
mov
sbb
aas
js
push
je
lods
xchg
fnstcw
cli
into
fisubl
in
push
xor
and
or
push
pop
push
das
mov
pushf
outsb
pop
inc
jp
ret
sahf
inc
cmp
repz
sar
loopne
cmp
imul
test
daa
or
adc
add
or
or
stc
in
js
cmp
dec
adc
inc
xchg
mov
repnz
ror
mov
sar
fwait
je
cs
rolb
mov
adcb
mov
push
mov
jo
pop
inc
andl
adc
loope
stos
add
out
outsb
add
inc
mov
sub
adc
movsl
ss
testb
fistps
lds
or
jmp
dec
hlt
iret
pop
push
mov
dec
mov
pop
addr16
or
scas
jmp
mov
mov
inc
clc
xchg
inc
jg
inc
mov
cs
mov
mov
adc
or
xlat
dec
adc
mov
cmp
adc
xchg
dec
iret
loopne
inc
ret
insl
add
push
mov
out
inc
test
std
mov
leave
js
push
imul
push
xchg
xchg
lret
jne
mov
mov
addb
xchg
or
cmp
out
jmp
jmp
int3
add
or
hlt
lea
fcomip
xchg
test
add
cmpb
and
mov
sbb
into
pop
js
dec
call
lock
sbb
pop
adc
cmpsb
cwtl
cmp
addr16
ss
ja
imul
sbb
lret
or
loopne
dec
jmp
inc
decl
or
insb
mov
push
push
cmp
and
test
ss
lea
imul
ret
popf
pop
outsb
or
mov
push
push
adc
fstps
mov
and
ss
push
lahf
cmp
dec
mov
dec
arpl
nop
insl
push
pop
cmp
orl
xor
push
shrl
mov
stos
pop
in
test
insl
stos
ret
mov
dec
jae
fisubl
and
inc
inc
and
jmp
loopne
dec
sbb
or
cli
ja
rorl
xlat
xchg
les
mov
or
push
test
or
mov
sub
inc
jnp
mov
mov
inc
aad
outsb
clc
sub
icebp
test
call
push
imull
jp
inc
mov
mov
ds
mov
fbstp
jne
sub
in
jbe
dec
rcrl
cs
daa
jns
dec
ret
or
cmp
leave
mov
aaa
push
cmpsb
push
sbb
xchg
stos
or
ljmp
leave
fisttps
aaa
cmp
inc
dec
xor
adc
inc
test
and
shr
popf
test
mov
jp
sahf
mov
push
rcr
addl
add
cmp
shlb
andl
and
push
xor
cld
movsl
lods
xchg
fisubl
in
test
aad
clc
jnp
cwtl
jg
and
pop
mov
pop
fiaddl
lcall
negl
enter
mov
movsb
jmp
in
test
adc
add
cs
xor
and
fsts
scas
xor
push
ret
fists
dec
jg
fdivrp
cs
mov
xchg
fadds
inc
push
mov
sbb
mov
inc
clc
loop
popa
jne
cmp
xor
mov
dec
xlat
out
sbb
jge
mov
popl
mov
sbb
dec
sbb
pop
setge
push
lock
and
lods
in
push
push
pop
lds
xor
call
iret
fs
rcr
ret
or
mov
mov
push
mov
ljmp
push
inc
into
test
stos
ljmp
mov
mov
xlat
testl
les
jnp
jb
mov
inc
add
enter
fwait
sub
or
movsb
stos
jl
into
mov
lret
jo
les
out
ret
jmp
in
add
mov
sbb
les
cmp
add
pop
xchg
mov
adc
inc
sub
add
mov
xor
or
mov
ret
jno
or
subb
clc
xlat
into
das
sub
stos
xlat
ss
xchg
sub
cmpl
sarl
call
sub
testb
push
ret
popa
mov
arpl
adc
bound
lret
mov
ret
int3
stc
mov
mov
and
push
pusha
add
test
pop
push
shll
pusha
scas
lods
add
pop
push
imul
push
insl
xor
mov
out
or
push
adc
or
or
pop
pop
mov
mov
loop
pusha
imul
in
xchg
dec
inc
stos
push
inc
lea
pop
cmp
pop
in
inc
or
xor
cs
jno
aam
push
add
or
or
outsl
mov
imul
sub
inc
mov
popl
lods
fwait
mov
jle
xor
dec
subb
xor
jmp
pushf
movsb
sub
mov
test
imul
and
orl
adc
mov
jne
fstpt
arpl
cmp
test
out
xor
ret
sbb
ret
imul
or
mov
push
rorb
fwait
mov
bound
inc
loop
mov
repz
pop
mov
push
inc
cmp
mov
loop
jmp
jae
lcall
jbe
and
mov
mov
cmp
push
in
hlt
rorb
jle
test
jae
pop
rcr
push
xchg
cmc
cmpsl
cmpsb
lods
lret
mov
xchg
sarb
mov
push
cmp
pop
aad
add
jge
mov
or
inc
test
xchg
repz
lds
out
jnp
loope
repnz
dec
insb
clc
cwtl
mov
js
sbbb
fwait
sarb
xor
mov
fs
lods
xchg
hlt
loopne
mov
push
mov
add
js
clc
fwait
push
pushf
or
or
outsb
sub
std
mov
mov
jecxz
stos
cmc
shlb
sub
pusha
loop
mov
jmp
insb
sub
sarl
scas
mov
pop
jl
dec
adc
or
data16
sbb
cwtl
push
aam
xlat
pop
cli
sbb
mov
jnp
push
lcall
stos
jmp
nop
add
andb
decb
cmp
inc
mov
jbe
jbe
ja
or
imul
add
sbb
lds
icebp
daa
dec
push
lea
ljmp
outsb
push
mov
mov
mov
ja
test
clc
faddl
lcall
inc
mov
cmp
cwtl
mov
call
insb
ror
je
sbb
jl
test
lcall
leave
orl
mov
stos
cld
xorl
and
ret
out
jns
dec
jg
aas
xor
push
xchg
add
xor
jmp
ja
iret
sub
repnz
mov
inc
push
mov
sbb
jmp
jno
mov
leave
adc
dec
loop
jmp
sub
stos
xlat
mov
and
hlt
popf
adc
aas
push
pop
add
pop
push
xchg
mull
jbe
and
push
adc
fnsave
inc
inc
pop
add
xorb
pop
xor
aaa
pop
pop
loop
push
shll
out
movb
add
xor
pop
inc
pop
sbb
dec
jge
mov
hlt
mov
push
and
lahf
cwtl
roll
repz
adc
add
andb
popf
addb
movsb
aaa
fimuls
cwtl
mov
and
pushl
dec
andl
fdivr
daa
mov
sub
sub
cwtl
popa
repz
and
ret
js
pop
jg
in
ss
xlat
xchg
mulb
mov
add
dec
shlb
js
pop
or
sbb
aaa
and
pushf
data16
das
mov
hlt
mov
dec
fldl
out
gs
in
cs
out
mov
or
add
mov
push
test
call
jbe
out
mov
loop
iret
push
sbb
pop
mov
mov
sbb
scas
sbb
adc
sahf
ret
and
cmp
xlat
stc
or
mov
mov
outsb
inc
stos
js
mov
mov
jo
fcmovnu
jb
aad
rsqrtps
jne
mov
jnp
inc
cmp
push
test
xorl
push
xor
out
mov
or
dec
mov
in
sub
pop
jne
xchg
or
imul
fwait
test
jo
push
loope
cmp
lcall
and
jge
add
fildl
sarl
aaa
or
ret
sub
jg
int
adc
int3
mov
push
test
testb
pop
xchg
adc
sbb
xchg
mov
incb
push
dec
mov
add
hlt
sub
jmp
pusha
clc
dec
das
add
rcll
sbbb
jo
add
or
sub
and
shr
dec
in
and
fcomip
loop
and
jno
loopne
xchg
xchg
jl
icebp
push
and
sbb
mov
mov
adc
mov
pusha
imul
xor
call
nop
jp
mov
sub
or
inc
inc
inc
fmull
inc
add
enter
pop
or
inc
sbb
imul
js
adc
lds
ljmp
mov
sbb
inc
adc
xchg
adc
add
or
not
leave
mov
rcrb
sar
dec
pop
or
sarb
cmp
mov
xchg
add
pop
loope
xchg
dec
bound
mov
adc
jmp
sub
push
adc
lret
sbbb
clc
push
jbe
sbb
in
insl
mov
inc
pop
gs
js
cs
arpl
ss
mov
mov
popa
fists
and
shlb
in
cwtl
inc
sbb
sahf
jo
aaa
jnp
int
addl
xchg
sbb
popa
cmp
or
imul
add
in
xor
xor
incl
mov
sbb
hlt
scas
lahf
add
and
pushf
stos
ss
mov
addb
cmp
jmp
jl
push
inc
lea
shrl
push
fdivs
lret
clc
xor
outsl
mov
add
pop
hlt
addb
lea
not
mov
loope
inc
leave
js
loop
cld
ss
sahf
orl
adc
xchg
push
hlt
or
sbb
nop
jo
xor
cmpb
mov
xorl
sbbb
dec
clc
push
test
subb
inc
icebp
test
mov
mov
outsb
cmp
scas
sub
cmc
xchg
pop
cs
in
sbb
pop
adc
scas
js
js
xor
pusha
repnz
sbb
ret
lcall
or
ss
mov
pop
jo
iret
cmpsl
xchg
add
addr16
mov
loop
pushf
jne
push
es
aaa
rcll
outsl
movsl
push
mov
aam
cld
les
in
sub
sub
mov
add
push
fstps
pop
cmpsl
mov
cmp
loopne
lock
les
inc
dec
sar
inc
es
sub
clc
repz
sub
shlb
outsb
sbb
mov
lods
inc
out
mov
or
insl
inc
xchg
jb
adc
cs
mov
pop
dec
push
push
xchg
inc
subb
call
clc
mov
nop
sub
pop
lock
push
adc
jbe
ret
mov
mov
xchg
lock
push
rcl
lds
add
lret
cli
js
int3
popf
test
call
dec
aas
fdiv
and
sub
pop
jg
push
ds
push
repnz
mov
clc
fwait
cmpsb
xor
repnz
xor
or
pop
mov
xor
hlt
dec
mov
push
sbb
cs
sbb
jno
sbb
pop
subl
movsl
rcrl
aam
and
push
add
and
mov
push
shrl
cmpsb
inc
dec
and
add
inc
pushf
jl
test
pushf
lea
out
and
ret
push
scas
pop
mov
mov
mov
int
or
nop
scas
push
pop
sub
adc
xorb
in
add
adc
repnz
push
pushf
dec
or
pop
sub
mov
mov
into
lret
out
jecxz
add
push
stos
adc
test
andl
xor
mov
mov
xor
call
inc
clc
mov
fistpl
mov
int
push
bound
add
mov
rcrl
ss
rol
enter
mov
aad
into
sbb
ss
sar
push
icebp
enter
xor
clc
sbb
loop
in
xor
aad
fistps
xchg
sub
popa
shr
push
and
stos
lods
xor
pusha
adc
push
dec
push
mov
push
cltd
jl
hlt
test
xlat
loop
repnz
clc
pop
stos
lea
shrb
pop
leave
dec
add
cmp
push
cld
xchg
mov
ret
sbb
fmul
or
push
es
push
mov
lea
sub
add
cmpl
or
jns
cs
jmp
rcll
sbb
lcall
cmp
in
push
mov
or
sbb
ret
imul
sarb
cmp
les
xlat
push
mov
push
sbb
mov
gs
stos
aam
imul
loope
pop
loopne
pushf
cmp
pop
sub
sbb
mov
insl
dec
rol
das
sbb
sbb
cs
daa
pusha
clc
cli
adc
nop
sahf
push
jg,pt
xchg
cmc
outsb
rcr
fwait
outsb
mov
dec
xchg
ss
test
into
sahf
mov
clc
sahf
push
pushf
orl
icebp
cwtl
test
cmpsl
loopne
xchg
add
sarl
push
loope
sbb
gs
sbb
rcr
aaa
js
popa
faddl
mov
clc
push
dec
and
sbb
test
into
jae
sbb
ficompl
rcrl
inc
lock
jmp
xchg
mov
or
xchg
orb
mov
mov
rclb
fsts
xor
dec
lahf
fimuls
shl
scas
lahf
jo
jb
xlat
adc
pop
dec
shlb
dec
loopne
rorb
or
adcl
pop
rolb
push
mov
or
push
and
shll
jae
sbb
mov
rorl
adc
add
ss
into
cld
fstpl
xor
mov
in
fs
rolb
popa
jno
icebp
popf
mov
cmp
shll
mov
lods
mov
stos
mov
mov
dec
fnstenv
gs
stos
push
shlb
in
adc
sub
xorl
in
insl
mov
cwtl
hlt
mov
xchg
es
or
lret
cs
cs
cmp
mov
push
js
mov
jp
adc
mov
adc
vmread
shlb
add
into
xor
jl
dec
push
inc
imul
jl
cli
gs
stos
pop
mov
movb
or
lods
shlb
xchg
adc
shlb
inc
ds
add
outsb
push
clc
std
push
mov
push
dec
cmp
lea
lahf
or
add
shrb
cmp
add
pusha
or
inc
lret
out
ret
add
jp
cmp
incl
sub
sub
into
pop
push
fisubl
icebp
test
dec
test
push
jbe
jp
cmp
jecxz
aas
ljmp
xor
test
imul
xchg
orb
orl
adc
inc
mov
dec
adc
subb
push
adc
fistpl
ret
insl
or
ss
cmpb
dec
iret
cmp
sbb
jge
push
inc
movsl
fisubrs
mov
sbb
fldl
lret
out
sub
aam
mov
scas
sbb
mov
sub
orb
rcrb
fcoml
dec
adcb
add
lock
add
gs
aad
lods
adc
adcl
lahf
mov
push
xor
mov
jae
test
ss
shll
sti
mov
lea
or
mov
push
sahf
cs
fdivr
test
dec
jge
push
call
sub
inc
sti
sub
pop
fimuls
fwait
cmp
mov
cs
add
inc
mov
jecxz
pop
and
add
jl
inc
ret
xchg
add
lods
mov
movsb
call
scas
popa
push
rcrb
jno
loop
ret
sbb
xor
cs
loop
xor
push
out
dec
ljmp
rol
push
push
gs
inc
shll
shll
mov
dec
adc
xor
jne
mov
mov
dec
sbb
sub
inc
mov
loope
mov
aad
jno
je
cld
or
fcomps
enter
decb
push
leave
mov
dec
sub
lret
lods
mov
and
xchg
and
cli
push
push
out
call
push
ss
fmull
push
push
inc
mov
mov
into
pusha
pop
dec
mov
daa
xor
push
adc
hlt
jmp
mov
testb
pusha
roll
ficoms
mov
cld
fcoms
cli
outsl
lds
roll
enter
pop
and
jle
or
scas
and
rorl
push
mov
xchg
xor
pop
ja
push
inc
jle
jmp
dec
mov
xchg
mov
mov
inc
xor
stos
or
pop
int
out
cmp
test
adc
xor
push
fimuls
jae
xchg
inc
mov
jmp
dec
loopne
es
inc
dec
adc
stos
cmpsl
pop
cli
xchg
enter
jle
mov
cs
rcr
imul
mov
sub
ficoml
xchg
add
adc
iret
mov
cld
fistpll
imul
cmp
fimuls
xor
inc
notl
sub
push
mov
mov
cmpsl
sub
loop
pop
rcrb
loopne
ljmp
enter
stos
cmp
fsubrl
add
sub
add
lret
and
dec
dec
bound
movsb
pop
or
pop
fidivl
jg
inc
pop
popa
inc
pmuludq
mov
mov
es
outsb
lock
incb
pop
dec
mov
mov
test
fistpl
adc
cmp
and
mov
and
test
or
orl
aam
add
gs
popa
pushf
add
and
adc
jmp
outsl
push
mov
and
mov
cld
push
aad
lret
jbe
xorb
mov
and
xor
out
mov
hlt
hlt
fnstenv
loopne
cmp
add
push
dec
or
inc
xchg
rorl
mov
inc
pop
pop
jno
add
sbb
fcomi
int3
popa
mov
fwait
add
lret
cs
pop
popl
dec
jbe
push
divb
adc
out
jp
or
mov
rorl
jg,pn
fiadds
mov
mov
nop
sbb
aas
jbe
xchg
seto
sub
int3
mov
mov
clc
dec
dec
mov
dec
push
out
movsl
mov
xchg
roll
xor
pop
mov
nop
out
mov
add
outsb
cli
scas
mov
dec
nop
push
dec
xor
add
adc
xchg
adcl
stos
or
rclb
and
enter
pusha
xchg
loop
dec
cmp
fiadds
pop
popf
sub
jbe
int3
fidivl
aam
inc
adc
in
cli
pop
stc
pusha
or
and
movsl
lea
sub
jg
in
ror
cli
mov
mov
aam
mov
das
in
test
mov
cltd
or
cmpsb
push
jmp
cwtl
xor
sbb
inc
push
mov
mov
cld
jmp
add
push
icebp
int
xchg
inc
ret
add
push
push
add
mov
cs
fdivrl
push
imul
or
imul
pop
push
sbb
pop
xor
pushf
in
mov
mov
or
or
adcb
cmpsb
pop
push
mov
xor
int
cmp
xchg
clc
les
jl
jge
or
rcrb
test
data16
mov
es
inc
add
fdivrs
pop
fcompl
sbb
pop
or
mov
sub
inc
cld
inc
dec
cmpl
ja
push
and
ret
cmpsb
xchg
add
inc
cmp
xor
enter
jnp
inc
das
jle
subb
sbb
push
add
aam
pop
lea
outsl
mov
pop
ss
mov
pusha
sbb
sbb
or
lock
mov
enter
add
loopne
fs
xchg
jl
lea
cli
fwait
mov
lods
inc
add
in
dec
xchg
ficomps
jmp
dec
fimull
pushf
mov
xchg
fldcw
mov
mov
dec
mov
adc
fistps
shl
or
mov
mov
mov
ret
mov
enter
pop
push
lcall
dec
dec
stos
push
push
cmp
add
in
inc
or
mov
or
fdivrs
add
incl
inc
enter
adc
adc
loopne
loopne,pn
inc
es
mov
dec
gs
mov
jmp
inc
sbb
push
sbb
sbb
cmp
mov
and
incl
cmp
mov
dec
inc
jnp
pop
xor
cli
loop
mov
lods
pop
sbb
push
sarl
cs
aaa
nop
xchg
add
loope
dec
mov
and
jmp
and
and
pop
fldl
mov
add
pusha
out
sbb
shll
jb
sub
js
les
push
arpl
lret
cmpsb
subb
ret
pop
imul
xchg
popf
sbb
lahf
rcrb
xor
shll
enter
sub
testb
xchg
inc
adc
inc
in
sub
mov
cmp
test
movzbl
jecxz
mov
stos
and
mov
push
push
lods
pop
loope
hlt
repnz
or
xor
jnp
and
sub
pop
mov
fnstcw
dec
or
sub
mov
pop
js
mov
jmp
adc
xor
jbe
insb
xchg
sbbl
pop
mov
call
sbb
xlat
xchg
add
clc
fists
inc
sbb
mov
dec
pusha
fadds
cmp
mov
push
popf
sti
in
notl
call
testl
mov
adc
xchg
or
cld
insl
or
sub
lret
push
imul
xor
lds
pop
cmp
add
mov
cs
jl
insl
jbe
sbb
xor
ja
lea
int3
dec
gs
pop
inc
xchg
loope
xor
xchg
lahf
xchg
aaa
rorl
and
mov
push
pop
jg
pop
adc
outsl
inc
or
inc
jae
push
or
fdivrl
and
add
call
das
insb
jecxz
fldcw
fidivrs
pop
dec
dec
pusha
loop
and
shll
pop
popa
sbb
mov
insb
popf
pop
bound
add
push
xchg
dec
stos
scas
out
rcrb
faddl
lods
push
sahf
cmp
outsb
shl
xor
mov
imul
mov
lock
xlat
pop
mov
lahf
or
into
cmp
fldl
xchg
adc
jno
adc
cmp
clc
rorb
and
xor
sbb
add
jl
lds
leave
fmull
inc
sbb
fmull
inc
inc
mov
mov
mov
adc
or
sub
lods
lea
xchg
std
arpl
mov
in
xchg
fildl
lcall
sbbb
stos
rorb
add
stos
shl
push
pop
or
push
push
mov
cmpsl
push
pop
mov
jmp
shrb
out
rol
movsb
aas
xchg
js
movsl
cmp
gs
mov
outsb
fcmovnu
xor
push
jb
sub
insb
mov
sub
jne
decb
ja
xor
scas
adcb
sub
in
insb
aaa
jmp
nop
mov
push
adc
std
outsb
pop
lock
and
inc
jno
and
decb
inc
rclb
in
push
sbb
jbe
xor
mov
adc
cmp
subl
out
jmp
stos
mov
adc
pop
sbb
es
sarl
mov
xor
pop
jb
pop
jo
cmpsb
sbb
std
fldt
mov
test
into
mov
imul
jo
outsl
clc
movsb
lahf
mov
int
and
pushf
in
inc
mov
add
sub
jo
push
mov
rcrb
cmp
jno
cmp
bnd
jp
push
push
cmpsl
bound
stos
sahf
xor
cs
andl
movzbl
lea
dec
xchg
sub
pushf
mov
fdivrs
shlb
push
mov
adc
lret
mov
adc
out
push
inc
mov
xlat
sbb
test
lods
xchg
or
shll
cbtw
sbb
xor
push
cmp
fwait
inc
leave
dec
addl
jmp
or
lea
and
dec
in
adcl
sbb
test
xchg
je
outsl
into
jno
int
cmpsl
shrl
ds
loopne
add
ljmp
fwait
and
jo
pushl
pop
push
call
outsb
loope
test
sbb
mov
jecxz
push
cmp
cs
add
test
pop
outsl
push
sbb
ret
imul
mov
xchg
sub
push
adc
leave
jo
dec
lods
stos
add
xchg
lods
mov
jg
aad
adc
or
add
test
sub
icebp
loopne
adc
out
movsb
jp
jmp
cmpsl
mov
adc
fidivrs
cmp
roll
xor
push
add
pop
inc
push
sub
outsl
adc
fs
sti
divl
cli
sbb
cmp
add
add
xchg
fcmovu
push
jo
adc
push
sub
and
mov
or
sub
leave
inc
add
dec
ret
adc
pusha
xchg
test
cwtl
repnz
or
dec
pop
cld
test
je
sub
js
mov
testb
jne
shrl
xor
out
cmpsb
lahf
cwtl
cmp
iret
test
nop
shll
cld
adc
xchg
ror
fmull
xchg
jg
jo
sub
shll
fstps
cltd
test
bound
jmp
aaa
xor
pop
fstp
sbbb
inc
mov
fidivl
lock
mov
mov
ss
xchg
lret
pop
.byte
incl
dec
pusha
or
nop
add
dec
add
cmp
roll
add
adc
dec
idiv
outsl
call
and
cmp
cmp
addl
or
or
lcall
or
cmp
push
and
rol
add
rolb
xchg
dec
adc
cmpl
adc
test
orl
das
inc
xor
push
lock
decl
push
fldl
cmp
lcall
loopne
push
jo
adc
sub
add
addb
cmpb
and
imul
sti
adc
loopne
sbb
and
adc
cld
pop
inc
add
and
test
inc
and
ljmp
pusha
add
nop
or
xor
or
or
popa
sti
fbstp
in
add
nop
test
add
mov
es
mov
mov
and
add
dec
daa
add
pop
in
scas
xor
rolb
add
mov
add
add
xchg
in
div
mov
clc
roll
inc
cmp
mov
sti
mov
stos
lcall
insb
add
enter
clc
push
and
fiadds
pop
or
pop
add
push
int3
jnp
out
scas
pop
leave
or
jne
out
add
jb
dec
pop
cmpsl
dec
adc
data16
in
xchg
adc
jo
push
in
aas
ja
enter
add
sbb
pop
jnp
int
rcrl
add
and
out
add
in
xchg
std
jae
push
rcrb
push
sbb
mov
jno
popa
or
sti
push
mov
sbb
jns
adc
sti
sbb
push
lcall
mov
push
addr16
sbb
mov
jle
mov
dec
insl
movsl
in
inc
pcmpeqd
in
lock
and
clc
jecxz
aas
mov
pusha
cmp
loope
and
or
mov
xchg
into
pop
ljmp
cmpsb
loope
sbb
lahf
movsl
jne
push
or
mov
add
and
add
xor
fdivp
jne,pn
mov
jp
cmp
push
andb
adcb
mov
push
in
sarb
add
add
jge
lea
and
enter
ja
sbb
aad
inc
adc
outsb
lds
nop
add
cli
add
out
mov
xor
and
push
fsubp
daa
arpl
pop
push
push
or
cmp
cmp
imul
cmp
cmpsb
mov
pop
into
xchg
jl
cs
pop
imul
imul
add
add
imul
popa
sbb
mov
mov
cmpl
iret
push
mov
outsl
sahf
pop
into
mov
repnz
pushf
cs
add
scas
aad
ret
cmpsl
adc
fnstcw
loopne
mov
push
cmp
push
out
inc
shll
in
dec
and
cld
and
xchg
shr
cmp
fmuls
andl
add
add
inc
pop
aad
call
pop
xchg
stc
pusha
jne
sbb
sbb
repz
or
jge
aaa
xlat
cmp
pop
shr
add
sub
stos
or
cmp
cmp
outsb
cs
or
push
jns
aad
popa
js
ss
adc
jbe
push
pop
notb
add
and
repnz
popa
repz
sub
ss
push
cltd
xchg
lds
sarl
add
sub
push
jae
pop
jns
and
xchg
or
push
xorb
sub
gs
pop
cmp
cmp
fdivp
xor
cmp
daa
add
stos
sub
pusha
cmp
scas
ret
test
std
cmpsl
rorl
add
sub
xor
pop
in
movsl
pop
add
cmp
adc
mov
movsl
sbb
add
in
jbe
sub
and
loopne
sbb
mov
jp
sbb
int
clc
xlat
inc
arpl
xrelease
dec
mov
mov
xchg
cmp
lods
in
dec
shrl
sbb
and
push
lahf
mov
in
sub
xchg
push
sub
mov
dec
es
rcrb
fimuls
pusha
inc
xor
dec
pop
xchg
or
fistps
call
pop
sub
push
rorl
mov
pop
xchg
and
fisubl
xor
pop
fisubrs
imul
jmp
pop
mov
xchg
xchg
cwtl
add
push
mov
cmp
mov
shr
je
pop
mov
cmp
hlt
cmp
add
and
jmp
aad
and
push
aam
push
inc
pop
jo
mov
add
pop
loop
add
mov
divb
jnp
dec
and
in
inc
xchg
inc
incb
sbb
incb
lea
jo
xchg
add
test
inc
icebp
inc
mov
or
inc
adc
add
push
lret
call
xchg
imulb
aas
push
add
pop
out
ret
mov
cmc
pop
hlt
in
or
inc
sub
ljmp
push
or
add
cmp
mov
shll
movsl
jo
or
arpl
push
pop
pop
cmp
lcall
imul
lea
movsb
jmp
popf
jbe
adc
enter
mov
add
les
dec
js
loopne
sbb
xor
stos
jle
mov
orb
addr16
popf
push
pop
fsubrl
mov
roll
int
cwtl
clc
sbb
in
movsl
cmp
mov
cwtl
xor
movsb
leave
notb
ja
das
stos
pop
sti
jo
pop
adc
dec
nop
lcall
sub
add
mov
inc
xor
pop
push
hlt
dec
cli
hlt
imul
sbb
and
mov
jbe
pop
roll
mov
add
sbb
sub
mov
or
es
fnstenv
and
les
jne
in
mov
xchg
in
imul
daa
jne
mov
mov
fldcw
fstpt
xor
cwtl
xchg
popf
lret
and
mov
ret
insb
popa
push
dec
xchg
push
push
inc
inc
fwait
or
imul
gs
mov
inc
int
cmpsl
iret
stc
adc
fwait
mov
arpl
pop
lret
lret
imul
into
dec
lods
push
push
cmp
repnz
inc
adc
sub
push
jno
outsl
push
ss
xor
mov
fwait
dec
repz
ja
pop
stc
sarb
sub
std
mov
data16
mov
fs
sub
not
loop
imul
mov
pop
inc
mov
mov
stos
jp
ret
das
or
add
jge
or
dec
lock
test
mov
sbb
stos
or
out
mov
lret
movl
ss
xor
test
adc
fldcw
lds
mov
pop
out
adc
ret
inc
popl
push
xchg
adc
mov
pusha
mov
arpl
aaa
shl
or
iret
xchg
repz
bound
cmp
adc
sbb
lds
cmp
dec
adc
sbb
sbb
sbb
shlb
and
and
in
jno
pop
adc
shl
div
cmc
cwtl
or
add
sahf
iret
xchg
sarb
push
bswap
and
dec
rclb
icebp
movsl
add
fstl
cmp
icebp
inc
jae
pop
mov
pop
dec
lods
add
fists
pop
mov
inc
stc
stc
pop
adc
mov
jns
pop
xchg
insl
pop
in
sub
sbb
test
in
cltd
add
sbb
mov
add
lds
push
sbb
jmp
sbb
and
dec
lret
dec
mov
aas
repnz
jno
or
and
sbb
mov
movsb
mov
mov
daa
fstp
test
scas
rcr
repnz
adc
cmp
pop
enter
orb
repz
mov
push
fadds
iret
pop
xlat
jbe
cwtl
daa
inc
jbe
mov
push
inc
mov
cs
repz
aaa
cmp
das
icebp
adc
or
adc
sub
or
xorb
in
add
sbb
or
enter
cmp
xchg
mov
ret
lea
scas
ss
test
scas
movsb
mov
inc
stos
push
out
mov
sbb
testb
ret
movl
mov
xor
pushf
jae
mov
mov
xchg
push
dec
mov
push
fwait
test
sub
aas
push
jge
bound
adc
popa
pop
enter
test
orb
mov
sub
adc
out
mov
pop
jae
pop
bound
and
lahf
mov
jge
iret
dec
inc
or
pop
push
mov
fistps
int
or
fistl
hlt
add
add
je
stos
notb
fimuls
mov
leave
js
mov
leave
inc
arpl
xchg
mov
es
mov
jmp
push
das
in
pmaxub
mov
jae
push
and
add
into
ret
or
popf
mov
stos
or
movsl
add
sub
sbb
mov
cmp
cmp
pop
ret
lfs
daa
adc
mov
push
cs
loope
roll
mov
pop
sub
cmp
mov
or
insb
lea
fcmove
mov
mov
arpl
mov
sub
pop
push
call
fsubs
push
cs
xchg
jae
es
mov
dec
loop
add
cmp
imul
aaa
mov
scas
push
jno
js
xlat
add
xchg
mov
sub
push
stos
stos
pushf
fidivrl
mov
push
ja
inc
dec
das
jne
xchg
jns
in
sahf
imul
mov
xchg
imulb
inc
cmp
loopne
sub
mov
add
outsb
test
add
daa
out
pop
leave
fstpl
stos
sub
inc
pushf
xor
cmp
dec
call
sub
or
push
in
stos
je
ja
add
push
repz
aam
or
or
roll
pushf
fsubl
dec
aaa
test
jle
aas
sbb
sbb
into
sbb
mov
orb
cmp
jbe
add
dec
dec
dec
adc
dec
push
mov
scas
add
aad
call
inc
xchg
xchg
lahf
mov
add
mov
add
stos
ja
push
mov
or
ja
call
jmp
sub
shl
add
push
inc
insb
sub
xchg
xorb
sbb
loope
ss
mov
imul
and
inc
fldcw
xlat
insl
fiadds
mov
inc
pop
aaa
leave
inc
in
hlt
mov
pop
dec
aas
adc
lock
imul
aam
sbb
xchg
dec
imul
ret
loope
inc
dec
fisubrl
jne
cmp
jecxz
call
je
test
aam
mov
xchg
adc
rcrl
cmpsl
sbb
jne
adc
lock
js
jnp
test
or
and
jb
jp
xlat
push
inc
mov
fs
cmc
xchg
xor
loope
rcrb
push
out
add
pop
cmp
cmp
sbb
sti
inc
adc
aam
xor
jle
mov
jl
lret
adc
cli
and
jg
rcr
inc
popf
adc
iret
mov
mov
pop
rol
cmpsb
xor
cmpsb
inc
add
in
inc
std
popa
divb
mov
clc
ret
push
lcall
pushf
sbb
leave
aas
ret
sub
insb
or
mov
test
sarl
test
dec
jno
cmp
jg
push
pop
or
test
incb
mov
mov
xchg
mov
mov
add
xchg
adcb
test
lret
aad
mov
push
cld
or
in
xchg
das
andb
mov
jb
movsb
jmp
xlat
inc
mov
and
or
sub
cmpsb
push
mov
add
mov
add
cwtl
add
in
fildl
sbb
and
push
add
decl
lcall
push
lahf
xchg
lret
adc
add
gs
push
mov
movsl
pop
sbb
mov
sarb
mov
pop
fs
sub
idiv
test
and
aam
dec
sbb
and
ljmp
mov
inc
shlb
rclb
xor
mov
scas
loopne
sub
mov
mov
add
adc
add
and
mov
jbe
pop
lock
mov
adc
aaa
lods
push
jo
hlt
sbbb
push
out
pushf
add
in
out
inc
mov
cmp
fidivs
inc
into
jne
dec
and
jmp
shlb
mov
aaa
mov
xor
aam
aad
adc
stos
jo
jecxz
sub
or
push
mov
cmp
add
loop
mov
or
iret
mov
int3
pop
pop
les
ret
jg
add
mov
push
movsl
pop
fistpl
aam
test
ret
hlt
pop
sbb
div
scas
shr
push
xchg
xchg
pop
stc
and
icebp
add
pop
pusha
xchg
ljmp
data16
mov
push
mov
pop
fldcw
lcall
xorb
mov
out
sub
fidivs
imul
fldt
cld
pushf
in
inc
mov
enter
int
push
cmpsb
inc
fsub
inc
inc
jo
loopne
inc
pusha
mov
ret
mov
jbe
std
cli
int
daa
pop
sbb
lcall
push
jmp
mov
aaa
fsubl
in
ror
and
shlb
cli
iret
flds
roll
clc
mov
sbb
or
fbld
addl
xchg
mov
call
cmpsl
cmp
call
dec
fimuls
mov
out
xchg
mov
xchg
and
les
xor
in
push
jnp
mov
or
adc
adc
cmp
xlat
fmull
and
jle
rcll
outsb
xlat
pop
cmp
or
mov
cmc
scas
pop
lock
nop
dec
mov
push
mov
or
std
addl
sbb
jmp
sub
repz
push
dec
pop
mov
and
mov
cmpsl
testb
aam
xor
insb
into
pop
sub
je
subl
sbb
mov
stc
in
pop
test
or
rolb
xor
pop
in
pop
insl
arpl
add
loopne
loope
xor
dec
arpl
xorl
movsl
jmp
stos
mov
cmpsb
sbb
ret
cwtl
ret
dec
cmpsl
gs
add
and
jbe
imul
fs
xlat
stos
aas
mov
dec
sub
or
or
mov
cmpsl
adc
mov
sbb
test
popf
xchg
movl
mov
add
loop
pop
adc
cli
fwait
loopne
pop
mov
add
cwtl
js
stc
dec
clc
lret
jns
out
data16
jno
adcb
xchg
je
dec
das
lahf
push
imul
pop
ret
fstl
dec
xor
push
nop
loopne
movb
add
cmp
scas
push
mov
ja
sbbl
out
fimuls
push
test
aad
outsb
in
addb
movl
inc
pop
cmpl
mov
pop
sti
cmp
inc
insl
adc
cmp
fwait
lock
jg
popa
lds
add
sub
clc
addr16
sti
mov
je
sub
stos
lret
fwait
pop
dec
push
or
xchg
dec
aam
push
adc
lahf
loopne
jl
fcmovne
add
inc
pusha
lcall
inc
adc
movsl
push
loopne
push
aad
push
hlt
dec
es
roll
and
lds
push
pushf
cmp
jbe
fwait
test
or
fldz
push
pop
jbe
jmp
dec
push
or
jns
mov
ds
ds
sub
stos
xchg
insl
lods
inc
sbb
or
orl
int
movsb
in
arpl
and
into
into
rcrl
pusha
xchg
daa
adc
cwtl
test
inc
lahf
das
jbe
adcb
jnp
aaa
pop
mov
sbb
and
cmp
adc
inc
sub
push
repz
loopne
leave
adcb
cmp
loope
mov
shl
sbbb
xor
adc
icebp
out
sbb
inc
fs
xor
add
int3
mov
and
cmp
ds
sbb
xchg
jle
pop
inc
icebp
jecxz
sbb
daa
push
sub
loope
add
scas
mov
rcll
pop
stc
jge,pn
lods
roll
pop
sub
pushf
into
bound
xor
cli
pop
pop
addb
sbb
mov
mov
loopne
pusha
lret
mov
jb
hlt
xchg
lock
push
cmc
aaa
and
jg
sbb
add
jo
movsb
bnd
pop
fdiv
sub
in
loopne
movb
pop
incb
sbb
fwait
dec
push
inc
shrb
arpl
test
jns
incl
mov
pushf
sbb
cld
push
adcb
in
cmp
sbb
cmp
dec
lock
rcll
test
xorb
es
lds
fs
pusha
ret
es
test
test
test
fidivl
outsb
and
push
hlt
scas
fsubs
mov
inc
lock
mov
clc
adc
jb
cmovl
fcomip
leave
mov
pop
inc
cmp
jg
mov
sbb
xlat
sbb
add
jmp
pop
hlt
outsb
xchg
popf
xor
dec
add
and
shlb
mov
jno
or
cmp
int
std
popf
lock
or
cmp
test
dec
sbb
test
mov
cld
mov
or
ss
xchg
iret
xlat
aas
mov
mov
pshufw
mov
and
ljmp
ds
orb
insb
push
add
imul
pop
in
cmp
movl
punpcklwd
adc
pop
fdivs
mov
dec
test
adc
sbb
stos
push
ficompl
stos
mov
or
and
inc
sahf
in
data16
nop
pop
mov
enter
mov
lea
in
int3
enter
pop
aam
sub
dec
push
lods
or
mov
adc
jg
test
ret
adc
repz
sbb
add
mov
adc
inc
push
push
or
aad
fsubs
cmc
cmp
loope
fucomi
sbb
test
inc
cmp
sbb
add
sbb
rcrb
fwait
inc
sbb
repnz
insl
iret
cmp
dec
inc
js
mov
jge
pusha
or
call
imul
xor
cli
push
sbb
lret
andnps
sub
push
in
xchg
mov
cli
xchg
cmp
cld
push
dec
mov
inc
inc
push
pop
pusha
fwait
pop
dec
mov
dec
or
add
cld
cli
mov
sbb
decl
fisttpl
cmpsb
andb
push
test
mov
push
movsb
push
addr16
fwait
or
mov
enter
jne
outsl
testb
or
test
sahf
or
push
push
xor
lret
cmp
sbb
or
mov
mov
jle
pop
sti
mov
ljmp
add
mov
mov
inc
loopne
in
push
xchg
push
test
hlt
hlt
clc
add
sub
pop
xchg
arpl
fisubrl
jae
adc
mov
cmpb
in
xor
mov
fsubrs
insb
scas
cmc
loop
pop
xlat
ret
pop
pop
aaa
shl
mov
cmp
hlt
adc
arpl
cld
call
loopne
test
mov
mov
push
sub
stos
lea
adc
xorb
xlat
out
pop
mov
stos
movb
or
or
adc
lcall
sbb
call
ja
insl
pusha
add
sti
fists
jno
das
add
or
std
jle
loopne
aam
movsb
aaa
mov
in
jl
sarb
mov
es
out
lahf
loope
adc
rcr
imul
xchg
xchg
inc
adc
mov
dec
jbe
mov
repnz
cmc
lcall
mov
and
cmp
fdivr
shl
test
rolb
fisubrs
inc
mov
mov
jecxz
jg
cmp
pop
inc
dec
ret
je
loopne
cwtl
call
adc
fmull
pop
mov
or
and
and
sub
je
add
sub
pushf
pop
fwait
popf
or
pop
repnz
or
cmp
nop
mov
jmp
jo
pop
out
adc
push
jge
jo
ror
and
sbb
cwtl
test
js
icebp
mov
mov
rcr
inc
mov
cwtl
jmp
inc
repnz
push
test
incl
icebp
inc
out
decl
xchg
or
jp
push
mov
add
fwait
sbb
inc
pop
call
sbb
add
mov
les
aas
leave
dec
push
ret
mov
into
rclb
pop
repnz
sub
lds
add
mov
push
test
inc
add
adc
cmpsb
cmp
pop
icebp
sub
pop
shrb
xchg
call
outsl
sub
sub
or
pop
stc
and
sub
dec
clc
das
insb
sub
lea
cld
mov
push
xor
pushf
push
and
mulb
out
jnp
bound
xor
xchg
rorb
jecxz
ret
cwtl
pop
mov
aam
imul
into
gs
pop
mov
stos
push
out
pushf
les
inc
jbe
cmp
push
jnp
inc
xor
pop
sub
loop
or
orb
sahf
fstpt
enter
xor
ficomps
cmc
xchg
pop
cwtl
popf
or
div
xchg
cmp
mov
dec
adc
add
cmp
dec
push
sub
mov
cmp
clc
ret
dec
lds
push
jbe
lret
mov
mov
ret
mov
sbb
jmp
sbb
out
imul
lcall
btc
mov
dec
cmp
push
pop
and
scas
aaa
cmp
divb
cld
into
ret
sbb
cmp
xor
xor
push
cs
outsb
jne
pop
lock
sahf
outsb
mov
mov
xchg
shl
in
cmpb
cmpl
cmc
or
jae
pop
cmpsl
push
mov
mov
in
push
pusha
sbb
sub
lods
loop
xorl
xchg
cmpl
stc
subb
shl
sub
or
dec
xchg
dec
jge
aas
sbb
push
dec
jae
aaa
xchg
inc
out
stos
cs
sbb
push
sbb
sub
inc
outsl
push
mov
xchg
cli
movsb
outsb
pop
add
leave
push
and
cmpsl
out
repnz
adc
push
hlt
lret
pop
insb
cli
sarb
xchg
enter
adc
test
xor
mov
jg
and
imul
insb
inc
sbb
addl
inc
cmp
pop
imul
wrmsr
inc
sbb
call
push
enter
jno
jp
sub
push
adc
or
ret
mov
jmp
pusha
add
pop
mov
mov
incl
adc
push
adc
stos
sarb
push
dec
mov
cli
or
pop
ja
aad
std
sbb
push
into
test
jbe
xchg
ret
xchg
repnz
inc
roll
cmp
shlb
jb
fwait
movb
movsb
scas
jg
dec
stos
xor
jp
push
rcrb
sub
fcmovu
fistpl
or
fadds
dec
cmovbe
mov
lods
mov
outsl
scas
mov
add
sub
or
jo
dec
adc
push
cmp
ret
scas
sbbb
adc
jp
andl
sub
shll
mov
cltd
mov
jns
das
adc
loopne
and
mov
mov
out
loopne
lcall
xchg
dec
cli
pop
ret
cmp
lock
nop
faddl
pusha
add
clc
loopne
inc
test
push
xor
mov
xor
adc
insl
push
testb
xor
add
or
inc
jecxz
pop
push
out
mov
fsubrs
lds
sub
pop
inc
lds
or
fidivrl
decb
repnz
and
xchg
mov
sarl
add
xor
insl
cs
mov
sarb
mov
dec
shl
cltd
adcb
test
leave
adcb
xor
jnp
mov
add
dec
pop
fs
sbb
pop
cld
pop
js
xchg
or
stos
adc
cmp
xorl
fwait
push
roll
inc
add
rorb
dec
pushf
ds
lret
xlat
imulb
ljmp
insb
mov
mov
andl
repnz
add
mov
scas
xchg
rorb
fnstsw
out
clc
dec
fldl
pushf
inc
fcoms
push
sub
in
hlt
aad
popa
jg
js
mov
mov
loopne
andl
insb
out
jp
and
mov
push
into
push
jl
stos
jo
loop
push
sub
mov
adc
or
dec
pop
add
push
sbb
cld
push
dec
ljmp
and
xchg
push
dec
cli
jg
mov
popf
push
into
ret
xchg
cwtl
fistpl
mov
push
xchg
scas
push
or
push
lea
mov
movl
add
adc
inc
loope
xchg
call
sbb
mov
lea
mov
call
mov
data16
pushw
adc
push
fcmovnu
outsb
andl
push
push
jp
repz
fiadds
push
clc
add
dec
das
fiadds
out
aaa
add
call
or
jp
mov
or
inc
aad
aam
adc
lcall
adc
rcl
dec
jg
clc
push
sbbb
call
mov
in
ret
stos
ficomps
lock
idivb
inc
push
aad
imul
aaa
mov
sub
xchg
pop
stos
mov
popa
mov
sub
orb
lods
aam
jl
fisttpll
mov
push
cld
push
inc
sub
dec
or
ds
jl
sti
addr16
ret
add
or
push
cld
scas
ret
in
sahf
sub
hlt
and
xchg
sti
lock
cmp
add
sbb
stos
mov
mov
aaa
adc
inc
loopew
scas
sub
xchg
notb
inc
adc
mov
daa
add
cli
loope
push
sub
mov
or
push
and
ds
shlb
out
push
xorl
sahf
ficompl
clc
outsl
xchg
mov
sub
adc
bound
sbb
push
pop
mov
out
or
add
dec
pusha
jo
clc
lret
mov
mov
data16
xor
inc
js
outsl
das
sub
xor
cli
ret
pop
add
fcomip
push
push
movsb
jbe
rorb
fcoml
dec
adc
insl
js
mov
loope
mov
add
fdivrl
test
ljmp
stc
lcall
lret
testb
fwait
ret
add
fistpll
jno
dec
xor
rorl
dec
jmp
jnp
loope
add
ja
jae
add
sub
cmp
sub
mov
filds
mov
sub
mov
or
std
or
inc
aas
sahf
inc
outsl
jecxz
dec
fcomps
out
xchg
add
popa
xor
adc
mov
arpl
out
sub
ret
cld
mov
out
inc
hlt
incb
out
inc
cs
inc
xchg
cmp
lcall
fistpl
lods
cwtl
je
add
jl
mov
or
xlat
jno
xor
lock
sbb
sbb
push
aad
lock
je
dec
or
out
popf
and
rorl
mov
add
pop
mov
xchg
scas
hlt
in
jle
jecxz
inc
pop
xchg
mov
loopne
ficoml
push
ficoms
pop
cmp
call
jae
cli
test
in
out
lea
xor
push
add
loopne
sbb
arpl
push
jbe
or
imulb
inc
sahf
or
xchg
cmp
sub
das
cld
mulb
xor
mov
lock
test
lret
pop
fwait
incb
inc
int
adc
xchg
dec
xor
push
daa
psraw
inc
movsl
popa
mov
or
sub
mov
ss
nop
mov
rcll
fiadds
insl
cmp
sbb
data16
outsl
mov
mov
pop
mov
stc
sub
mov
scas
fmulp
loop
xchg
mov
jno
lret
movsb
stos
xchg
test
adc
les
lea
sbb
into
lea
loop
mov
jle
test
sbb
and
and
adcl
clc
mov
sbb
and
add
sbb
lock
mulb
jo
push
aam
push
inc
sti
jo
test
test
sub
inc
inc
call
mov
roll
jg
cmp
das
pusha
jbe
mov
js
cli
jbe
push
jb
andl
xchg
ret
decl
stos
push
xorb
sbb
cwtl
icebp
test
inc
cli
push
mov
cs
int3
dec
jl
dec
xchg
icebp
out
les
push
push
add
xchg
xor
push
xor
fistl
add
xchg
mov
in
add
loope
xchg
je
hlt
enter
cli
push
jmp
sub
pop
scas
movsl
movsb
jmp
dec
mov
xchg
clc
movsl
sub
js
hlt
mov
scas
xor
sar
scas
int
int3
enter
lock
lret
pusha
lods
jo
mov
js
add
sub
mov
pop
aas
pop
jg
test
mov
sbb
jge
insb
xchg
add
mov
add
jnp
push
push
push
jo,pt
call
add
pop
test
ret
add
repnz
ljmp
and
out
and
xorl
jge
jno
test
add
mov
mov
add
xor
mov
das
mov
jle
push
ret
shlb
ds
xchg
mov
loopne
pushf
xor
loopne
cmpsb
add
pop
xchg
mov
mov
fyl2x
and
or
addb
mov
mov
or
imul
ret
mov
rol
test
faddl
shll
push
fnstsw
sbb
inc
rolb
adc
outsl
movsl
loopnew
imul
mov
add
fcoml
mov
dec
or
jp
jb
scas
xchg
cmpsb
mov
dec
mov
mov
hlt
insb
das
xchg
dec
insb
mov
std
outsb
cmp
out
push
ss
rolb
outsb
cmp
dec
push
sbb
lds
mov
jl
and
lret
jno
inc
jne
rcrl
test
jo
incb
test
insl
lea
shlb
push
int3
xchg
jnp
aaa
sarb
jo
shll
add
inc
and
insb
jecxz
inc
mov
push
or
sub
and
inc
xchg
and
test
add
dec
into
stos
fisubrs
push
fs
dec
sbb
sbb
xor
int3
loope
loopne
shlb
aam
lcall
mov
mov
add
fadd
les
xor
je
mov
sbb
add
jo
mov
out
mov
cmp
mov
pop
test
cmp
mov
jp
rcrl
push
test
sbb
mov
ret
mov
and
clc
inc
xor
call
mov
pop
sbb
aad
jg
push
dec
aam
ficomps
nop
sbb
fsts
pop
xchg
loope
movb
mov
add
out
test
adc
daa
outsb
dec
imul
xchg
out
sbb
xchg
lret
icebp
push
fsubp
mov
dec
into
and
inc
mov
int3
push
test
add
nop
movsb
ret
ss
call
cs
enter
mov
in
incl
rclb
jnp
fmull
lcall
add
je
mov
aas
adc
adc
jo
push
stos
jno
lds
stos
and
jl
in
or
xchg
or
into
mov
es
push
or
ja
sub
pop
fistps
cmp
push
fdiv
push
clc
cli
decb
cmp
adc
ss
roll
ret
sbb
cwtl
repz
lods
mov
jle
faddl
sub
and
out
add
pop
mov
filds
pop
icebp
xor
js
sbb
jns
dec
aaa
cld
mov
adc
jno
pop
into
xor
xchg
rcrb
test
cld
es
mov
cmp
pop
push
outsb
or
pop
mov
mov
loope
ret
push
or
mov
push
sub
shl
es
xchg
mov
push
fnstsw
sub
arpl
xor
bound
fdecstp
sbb
aam
jne
icebp
js
cmp
mov
cld
or
icebp
in
jmp
xchg
mov
cmp
jecxz
rcrb
rclb
add
out
clc
mov
outsl
imul
adc
ja
cmc
aas
lret
sub
add
jecxz
mov
rcl
cmp
mov
cmpb
sub
sahf
repz
arpl
xor
lcall
sub
test
fcoml
test
icebp
push
je
mov
shl
adc
mov
int
mov
dec
dec
cmp
leave
pusha
sub
jb
sub
add
xor
mov
outsb
cld
inc
push
and
push
or
xor
pop
mov
xor
dec
in
cmp
inc
mov
adc
pusha
pushf
cmpsb
es
add
cmpsb
or
sub
inc
cmp
dec
push
adc
sub
sbb
pop
scas
repnz
test
add
push
mov
ss
mov
xor
mov
data16
outsl
pop
les
xchg
cmpsl
mov
sbb
add
xlat
out
cmpl
inc
push
xchg
xchg
add
inc
shrb
ret
loop
cmpsl
jno
lret
ljmp
mov
xor
inc
lock
pushf
dec
nop
clc
inc
inc
lret
inc
imul
scas
and
mov
in
jecxz
pop
sti
adc
lods
xchg
mov
jnp
xlat
out
in
sbb
fadd
arpl
mov
hlt
lds
lods
mov
sbb
xchg
call
daa
incb
mov
xchg
xlat
cmpsl
cmp
mov
test
inc
aaa
test
jg
fadds
pop
inc
inc
pop
mov
lds
lock
lea
cwtl
rcrl
mov
cs
add
fs
push
das
fcomp
dec
inc
sub
cmp
pushf
adc
xor
push
lods
cmp
stos
test
sbb
add
mov
dec
mov
loop
and
lock
lods
int
loope
daa
in
jnp
pop
adc
push
pop
mov
orl
aam
add
add
mov
jmp
in
je
aam
sbb
stos
push
mov
loopne
and
pushf
jge
pusha
add
sbb
xchg
testb
inc
or
stc
mov
mov
sbbl
movsl
dec
xorl
inc
sub
sbb
sub
scas
or
sbb
xor
xchg
loop
shll
sbb
rcrb
cmp
sahf
mov
dec
in
aaa
mov
shl
das
les
add
std
mov
mov
add
inc
xchg
fwait
stos
push
sbb
push
stc
testb
bound
add
inc
fiadds
rclb
lock
inc
xchg
xlat
shlb
outsl
dec
push
push
push
sahf
add
lea
arpl
inc
add
pusha
mov
xchg
push
dec
imul
stos
les
add
cmp
sbb
inc
add
mov
cld
pop
lret
cmp
inc
mov
mov
arpl
mov
test
aaa
pop
in
mov
mov
adc
and
push
repnz
mov
pop
in
lahf
ds
test
push
jo
add
sub
inc
or
stos
in
xor
mov
jge
xchg
pop
jbe
dec
jno
pop
lods
add
in
insl
ljmp
sqrtps
or
dec
dec
mov
enter
dec
popa
imul
bound
fisttpll
cmp
ss
push
fisubl
mov
mov
dec
stos
xor
jmp
es
shl
sub
adc
xor
push
nop
cmp
enter
xchg
jae
fwait
repz
push
mov
xlat
loopne
fs
nop
cmp
loop
ret
or
imul
cmc
shl
xor
cmp
pop
mov
sbb
or
dec
and
mov
js
sbb
or
insb
and
adc
fnstenv
incw
nop
cmpsl
add
bound
scas
clc
addl
aas
mov
add
push
cmp
pop
je
pop
nop
test
cli
daa
rorl
sub
fisttpll
or
or
shr
cmpsl
addl
fcoml
xlat
or
push
mov
mov
cs
adc
mov
iret
dec
addr16
insl
pop
xorb
mov
scas
popf
mov
pop
cltd
ljmp
fsubp
sub
mov
inc
es
adc
mov
mov
inc
lock
out
add
jp
stos
ret
pusha
movsb
pop
mov
mov
jbe
icebp
jge
xchg
test
mov
pop
cmp
push
sahf
add
xlat
icebp
out
pop
add
and
jl
outsl
and
sub
push
cltd
call
and
das
pop
cmp
insl
stos
nop
or
xor
je
pop
insb
jmp
jp
ficompl
jno
in
aas
out
mov
jo
ja
jl
mov
outsb
sbb
push
pop
scas
mov
mov
sub
fistl
sub
jle
push
push
cmp
andl
push
fs
clc
lds
sub
ffreep
ljmp
pop
movsl
pop
out
in
xchg
ds
mov
add
sbbb
push
dec
scas
cmpl
mov
clc
ret
in
std
pusha
mov
cmp
ja
popa
pop
inc
repz
loopne
rorb
out
lods
rorl
cmp
mov
stc
add
in
xchg
sbb
lahf
mov
out
mov
ret
pusha
lret
aad
xor
lods
int3
lds
jle
push
pop
xchg
in
sub
cmp
add
fdivs
inc
ret
add
lret
aad
push
sti
lcall
xchg
clc
jns
jg
xor
je
cmc
filds
hlt
jo
dec
mov
test
imul
mov
mov
xchg
or
dec
inc
cmp
push
mov
push
pop
inc
xchg
sub
cmp
mov
repnz
ficompl
stos
out
ja
cmp
stos
jno
das
popa
xchg
xor
and
push
adc
sbbl
mov
lahf
movsb
sub
sbb
xchg
mov
pop
stc
adc
add
fdivrl
jg
lret
cmpb
sub
jp
add
mov
negb
iret
lds
ja
sbb
sub
mov
pop
repz
imul
imul
insl
int
sbb
jle
fidivrl
adc
test
test
or
pop
ljmp
pop
mov
jmp
jns
adc
mov
cwtl
ficompl
ret
cmc
add
shr
cwtl
out
mov
cmp
gs
push
dec
sub
mov
fcomp
sub
mov
lret
mov
sub
xchg
pop
pop
pop
std
sahf
mov
jbe
stos
je
push
sarl
aad
loop
or
push
sbb
mov
sub
xchg
dec
xchg
scas
and
inc
mov
mov
jnp
in
mov
push
xor
xor
xchg
push
lock
out
leave
in
daa
sub
xchg
or
out
inc
jmp
ja
push
mov
inc
out
jno
adc
adc
xchg
out
inc
pop
sbb
arpl
push
scas
jno
push
add
mov
adcl
loop
hlt
pop
xlat
inc
xchg
dec
or
cmpsb
and
mov
pop
mov
pop
mov
jl
jp
xchg
js
popa
add
sbb
nop
lahf
je
cmp
sbb
in
test
scas
lock
aam
inc
int
mov
mov
jb
add
jecxz
push
in
pop
xchg
cld
mov
roll
mov
or
sub
inc
rorl
cmpsb
ret
push
dec
gs
sub
dec
stos
loopne
test
or
fcmove
jecxz
sbb
pop
and
sbb
test
sub
xor
inc
das
or
xchg
lods
mov
movsl
pop
or
mov
stos
and
pop
shlb
sbb
pop
xor
push
mov
push
out
sbb
jmp
les
push
lea
sbb
out
jno
inc
mov
mov
push
cmp
xchg
js
lret
and
or
push
adc
nop
mov
push
mov
test
ds
sbb
sbb
pop
je
pop
push
pop
add
sub
or
push
xor
add
inc
cmpsl
pop
testl
hlt
dec
dec
out
shlb
fs
lods
pusha
cltd
pop
sub
je
push
in
fcos
mov
loop
repz
xor
push
adc
push
ret
and
sbb
aaa
push
sbb
pop
mov
lret
push
ja
fnstcw
rorb
popf
je
cmc
rorl
fisubrl
bndldx
push
pop
and
mov
mov
addr16
call
cwtl
pop
sub
jl
jmp
in
int
xor
es
xor
lock
or
inc
sub
sub
clc
cld
loope
mov
dec
sub
inc
loopne
and
pop
mov
dec
xchg
outsb
call
movsb
imulb
jge
bound
mov
jecxz
aaa
pop
in
daa
mov
push
test
and
pop
mov
push
push
xor
jge
push
jo
xchg
cmp
aaa
jge
in
leave
pop
imul
xchg
lea
pop
dec
je
nop
cli
sbb
lea
sahf
or
jnp
sbb
mov
orb
inc
loope
add
ljmp
add
outsl
inc
push
jae
adc
incb
pushf
mov
call
pop
and
into
adc
test
shl
mov
fcmovnbe
push
xchg
loopne
add
arpl
test
mov
mov
xchg
or
or
dec
subb
adcl
pop
insb
lcall
in
movl
in
sbb
jl
xor
push
cmp
dec
mov
jns
sub
adc
jge
js
test
adc
cmp
pop
xor
dec
pop
roll
cltd
pop
cs
and
inc
cwtl
in
jo
fwait
nop
clc
mov
insl
js
stc
xchg
cmpsb
fcoml
fmull
in
sbb
sti
jb
mov
cmp
subl
adc
sbb
and
fstps
pop
cmp
js
fistpl
pusha
repz
lret
sub
add
pop
pop
std
js
shlb
mov
push
inc
inc
pop
jae
push
sbb
aas
dec
pop
push
sub
fsubrl
sbb
daa
enter
outsb
out
jo
pop
sbb
lock
out
push
mov
jl
jge
mov
mov
in
mov
sbb
adc
addr16
pop
mov
std
pop
imul
ret
xchg
cmp
aaa
xchg
daa
sub
dec
dec
push
in
jge
dec
insb
xor
and
push
push
xor
into
ret
jnp
and
push
or
mov
fwait
out
jle
jp
or
popa
das
push
pop
mov
daa
test
cs
sbb
ds
lods
xchg
mov
lahf
mov
stos
jns
cmp
sahf
movhps
sbb
pshufw
shll
sbb
xor
xor
adc
aad
decb
sub
and
add
dec
jge
or
cmp
sub
popf
mov
cli
and
ret
pop
es
dec
push
jp
or
test
jo
arpl
inc
fstl
arpl
inc
lods
cmp
mov
add
add
out
orb
push
int
cmpsl
push
loopne
mov
je
lods
orb
dec
cmp
fisubs
xor
or
sub
sbb
fsubs
movsl
mov
or
xchg
scas
mov
mov
and
push
adc
fwait
test
xchg
faddl
inc
cmp
lock
cs
cmp
jge
adc
pop
arpl
push
cli
jno
mov
and
rcll
push
push
jnp
mov
sahf
aas
int
push
inc
rcrl
pop
mov
xor
fcomp
or
cs
or
and
cltd
sbb
jnp
jae
sub
mov
insb
test
sahf
sub
sub
xchg
adc
loop
and
pop
pop
xlat
add
rcll
je
or
add
xchg
inc
fistps
mov
and
dec
adc
mov
adc
xor
or
dec
js
movsb
dec
jg
data16
push
add
sbbb
ja
sbb
mov
out
pushf
mov
xchg
js
ret
mov
push
push
pop
outsb
push
es
lcall
pop
fsubr
push
int
sub
bound
xor
outsb
push
sub
adc
movsb
jbe
push
sub
cmp
push
push
stos
ficomps
or
mov
iret
and
js
daa
cmp
movsb
adc
sbb
and
mov
aad
imul
jge
pop
xchg
and
frstors
xchg
dec
sbb
outsl
mov
fmulp
pop
scas
push
lock
idivb
xor
adc
lock
xchg
or
mov
push
mov
test
loope
jecxz
jl
into
xchg
mov
push
outsl
jl
inc
and
inc
or
mov
and
and
mov
out
incl
jbe
jbe
rorl
xor
je
es
sbb
outsl
mov
sbb
or
stos
add
xchg
imul
lods
or
cmp
loope
jnp
lock
push
xor
mov
jns
clc
int
test
or
pop
pusha
or
pop
push
stos
aam
pop
addl
mov
loopne
and
cmpsb
xor
cli
dec
jne
loope
xchg
mov
dec
test
mov
mov
xor
xchg
imul
push
mov
push
pop
cli
or
cltd
cmpsb
or
ret
shlb
lret
out
cmp
xor
insl
adc
fildll
inc
jl
rorb
or
in
pop
pusha
sub
ss
mov
inc
push
pop
repz
push
cmpsl
lock
fsubs
fimuls
inc
mov
sub
xchg
roll
inc
out
xor
xor
lds
dec
movsb
out
data16
stos
jl
inc
jge
scas
push
dec
insl
jecxz
pop
aaa
es
adcl
mov
xchg
out
dec
outsl
jbe
sbb
dec
pusha
sub
rcl
inc
mov
sub
xchg
mov
mov
dec
lret
outsb
add
pop
mov
cmc
add
xchg
mov
movl
lea
mov
pop
cmp
iret
push
aad
adc
test
int
adc
cmp
pop
add
adc
add
or
cmp
or
jno
pushl
sti
ficoml
mov
and
jle
sbb
push
sub
pushf
push
std
mov
push
aad
cmp
sub
add
and
rcll
pusha
mov
rol
and
mov
aad
sti
push
cmpsb
adc
jle
test
aam
dec
aam
adc
adc
push
inc
pop
js
loop
sbb
cs
mov
mov
ja
imul
jnp
in
inc
lds
or
xchg
pop
xchg
subl
mov
insb
rolb
xor
add
lcall
jae
cmp
pop
inc
das
daa
mov
rorb
jg
mov
fwait
fwait
cmp
ret
cmc
sub
scas
out
xchg
aad
pop
or
inc
out
or
pop
xor
ljmp
xor
loop
jmp
jmp
cmc
shll
rcl
inc
add
js
popf
push
mov
push
in
ficompl
cld
rcpps
stos
daa
xchg
fwait
mov
popf
icebp
pop
shr
jbe
subl
pop
aad
ljmp
inc
sub
xor
shrb
mov
or
mov
addl
fidivrs
cmc
sbb
push
add
lcall
xchg
mov
cmp
insb
push
cmpsl
imul
pop
les
fstpl
and
dec
add
or
xlat
lahf
sbb
push
loop
push
xchg
outsl
xor
sub
jecxz
xor
mov
pop
mov
test
je
mov
and
add
jbe
cmpsl
jno
push
stc
mov
pop
push
test
adc
in
fsts
push
dec
push
xor
push
repz
push
decl
lock
aaa
xchg
pop
call
mov
nop
out
jg
pop
cmp
sbb
jge
daa
sahf
aad
es
loope,pt
cmp
mov
icebp
mov
lcall
lock
es
cmc
pop
jo
jne
cltd
xchg
jae
in
fldcw
dec
jnp
repz
ffreep
test
int3
xchg
sti
movsl
cmpsl
ret
mov
das
fmuls
enter
jns
aas
cwtl
andb
xor
push
mov
fstpl
jmp
jle
dec
or
cmc
sarb
pop
mov
sbb
lods
or
cmc
pop
jo
cmc
ljmp
jo
inc
shll
mov
and
ret
and
lahf
dec
sbb
mov
data16
mov
inc
fistps
out
cmp
mov
dec
xchg
lods
das
and
shl
outsb
ja
scas
push
lret
jle
daa
lds
jo
push
outsb
mov
dec
inc
mov
ret
ds
xchg
or
pop
decb
sub
inc
mov
and
mov
xor
cmp
dec
cwtl
sub
mov
inc
mov
popa
sbbl
fnstsw
xor
jmp
jb
stos
lea
ds
in
arpl
or
shr
repnz
xlat
mov
hlt
push
or
xchg
push
add
std
adc
and
pop
subl
jbe
push
shrl
jo
cmp
shlb
shlb
xchg
pop
ss
jo
or
mov
inc
lea
lods
cli
cmp
popa
pop
fwait
mov
or
popa
xor
int
pop
loop
xlat
data16
jg
mov
pusha
cmp
pop
xor
push
movsb
int
inc
xchg
push
test
ds
push
sub
mov
adc
je
icebp
cmp
mov
dec
test
jp
pop
jmp
mov
les
jl
in
xchg
ret
mov
jp
test
aam
pop
ja
std
mov
lds
je
sar
or
pop
fmuls
cli
repnz
inc
xchg
dec
test
aas
dec
call
jg
movsl
add
cmpsb
cli
shr
icebp
sbb
inc
lods
adc
pop
out
fldenv
inc
sti
xchg
jle
xor
movsb
add
stos
xlat
orb
iret
enter
add
cmpsb
in
adc
push
add
gs
adc
pop
lahf
ja
adc
fidivrs
daa
ret
xor
cmpsb
movsb
mov
roll
pop
mov
rcrb
mov
cmp
inc
clc
pop
jae
enter
out
imul
push
nop
xchg
std
or
jp
jmp
cwtl
mov
xor
cwtl
or
incl
loope
sti
inc
das
ret
xor
cmp
jns
mov
add
mov
xchg
ja
dec
mov
pop
mov
imul
jp
or
cmc
adc
sub
sub
dec
dec
pop
pop
leave
dec
movsl
pop
xchg
mov
mov
ret
es
lods
nop
pusha
icebp
lcall
rcrb
fdivrp
ficoms
mov
jg
fs
dec
mov
outsl
add
fistpl
jbe
call
pop
inc
mov
arpl
insb
or
cmp
ja
sbb
push
outsb
loop
mov
gs
dec
mov
xchg
std
inc
loopne
pop
loope
xchg
xor
cmp
mov
mov
mulb
sub
pop
jle
or
idiv
adc
hlt
shl
mov
test
pop
stos
hlt
lcall
sbb
lcall
jmp
mov
pop
dec
loop
jb
mov
pop
and
pop
lock
es
das
jge
orb
fidivrs
or
call
aad
mov
enter
push
inc
daa
add
nop
aad
mov
mov
in
jl
cmpl
and
cs
and
add
scas
cmpb
icebp
daa
sarb
jne
add
and
cmp
dec
jnp
pop
xor
jno
jge
push
dec
sbb
mov
sub
pop
data16
pushf
rclb
fs
addb
out
cmp
insb
popa
mov
aad
push
sbb
xor
mov
rolb
inc
adc
dec
jp
scas
push
pop
lds
or
loopne
mov
insb
inc
and
and
push
arpl
fldt
in
cmp
xor
data16
push
arpl
jp
inc
shlb
inc
xor
mov
inc
xchg
push
mov
cmp
lret
loopne
orb
jo
sahf
pushf
add
jnp
push
adc
das
sbb
mov
inc
mov
lahf
pop
cli
outsl
stc
aas
push
lahf
push
shl
adc
iret
test
cmc
mov
cli
rol
loopne
adc
xchg
pop
push
subb
pusha
lods
aam
xchg
mov
test
cmp
mov
lds
pop
mov
add
loopne
push
fadd
adc
rolb
xchg
pop
cmp
fiaddl
loopne
lret
add
adc
push
adc
jo
stos
xlat
inc
mov
ljmp
insl
inc
xlat
cmpsl
pop
push
push
xchg
jnp
jne
sbb
xchg
out
js
data16
mov
push
jno
in
pop
out
ret
cmc
pop
push
jno
add
mov
shl
mov
mov
dec
push
pop
dec
cltd
add
pop
jge
cmp
movsb
jl
int3
jno
dec
sub
dec
ss
sub
inc
mov
push
fnstenv
rcrb
sbb
sbb
jbe
decb
daa
loop
push
mov
arpl
jmp
sub
fidivs
push
inc
and
stos
incl
decl
xchg
push
inc
xlat
repz
push
rolb
mov
sbb
cmp
insl
xor
idiv
test
nop
xchg
push
sahf
push
mov
mov
enter
clc
add
dec
jae
jb
push
scas
rorl
mov
jbe
das
jno
cmpl
xlat
jle
mov
cmpsl
incb
dec
daa
inc
lds
and
cli
mov
test
cmp
xor
aaa
sbbl
adc
jle
and
mov
mov
add
push
sub
subl
adc
call
jo
jl
shr
xor
dec
les
shl
lcall
push
push
loop
xor
pop
sub
not
adc
cltd
aaa
or
lods
jbe
add
mov
jmp
jle
loope
dec
call
xchg
fcomp
aad
int3
add
cli
outsl
jg
loopne
pushf
icebp
movsb
sub
pop
push
pushf
in
inc
arpl
adc
arpl
cmp
test
fistpll
lret
and
add
xchg
int
xor
mov
pushf
jbe
push
xor
add
daa
das
shr
or
jae
mov
pop
xchg
adc
lods
pop
cmp
pop
pop
cwtl
xor
je
or
sub
pop
jno
jle
cwtl
loopne
xlat
pop
cld
dec
cmp
add
out
adc
leave
aas
xchg
ja
push
stos
js
mov
aas
push
lods
int3
inc
fistl
test
jbe
test
push
mov
jge
jg
push
adc
out
loope
mov
sbb
fcompl
jmp
pushf
lahf
xor
or
push
xchg
je
push
add
jp,pn
sbb
aas
ret
mov
mov
inc
imul
add
jo
inc
dec
mov
aaa
sub
ret
aas
add
mov
adc
in
xor
mov
and
and
lods
movsl
add
jne
mov
mov
and
pop
in
sbb
scas
jnp
xor
and
xlat
lret
dec
mov
xor
inc
dec
cmp
dec
aas
incb
mov
je
fs
xor
push
testb
add
out
rorl
hlt
jb
test
mov
imul
gs
push
insb
loope
call
push
push
jg
jbe
push
int3
lods
xchg
subb
xchg
add
mov
add
lock
cmc
adc
movaps
fwait
mov
jp
insb
in
adc
cmpsb
jbe
cmp
mov
and
imul
fcmovbe
mov
pop
cld
jle
data16
pop
xchg
add
push
jg
xor
and
loopne
test
push
stos
std
cli
sbb
aas
pop
push
dec
inc
jecxz
into
test
movsl
xchg
push
mov
push
ficomps
sbb
xchg
sub
jbe
pop
addr16
push
mov
sbb
or
or
adc
ffree
sbb
jmp
jle
mov
sbb
sub
sub
mov
ja
ret
rolb
scas
push
inc
cld
aaa
or
add
out
sub
push
mov
pop
repz
ds
pop
push
aas
call
movsb
xor
addr16
mov
addr16
popf
sub
inc
inc
inc
aaa
add
and
sbb
hlt
lahf
pop
push
jge
into
cmpsl
sbb
adc
push
push
dec
cmpb
incb
and
lcall
mov
ret
xor
hlt
aam
sub
call
sbb
icebp
and
fsub
shl
lret
add
sbb
dec
ret
inc
jnp
xchg
call
popf
imul
ds
mov
inc
and
jo
mov
scas
das
insl
pop
scas
sbb
mov
jg
movb
mov
js
mov
jl
stos
dec
les
aam
ss
mov
scas
mov
xor
sbb
sbb
add
fnstenv
test
cmp
cmpsl
xchg
cbtw
pop
adc
push
or
dec
inc
aad
int3
ret
leave
xor
rorl
mov
ficoml
shlb
imul
mov
loop
sbb
xor
add
popa
xor
sub
shrb
jg
jp
mov
pop
movsb
aam
jne
cmp
dec
inc
sar
or
and
nop
cltd
fcoml
pop
hlt
ret
test
pop
sbb
ret
mov
cld
push
cmpsb
shrb
mov
jo
or
sbb
mov
std
mov
xchg
mov
js
cmp
jae
mov
dec
loope
fisubl
repz
push
or
jge
inc
loopne
lock
into
jmp
mov
cmp
ja
push
adc
jp
and
and
ss
pop
or
fstl
std
sub
mov
xchg
mov
mov
adc
jbe
dec
adc
das
sub
mov
movb
in
cli
jg
lcall
ljmp
cmp
mov
mov
faddp
in
mov
popa
shlb
cmp
cli
inc
ret
or
mov
fimuls
jo
out
mov
or
mov
ss
movsb
mov
adc
pcmpeqb
xchg
pop
ret
xchg
and
out
ss
idiv
xchg
test
mov
enter
mov
cmc
aam
xor
push
cmp
dec
mov
leave
inc
or
ret
and
stc
stos
sub
push
ja
dec
xchg
jb
xor
ds
mov
or
shll
inc
inc
cmc
bound
dec
cltd
pop
push
sti
mov
andb
ss
cwtl
sbb
lds
ds
add
jne
aam
inc
or
shr
insl
dec
push
fisubrs
loopne
mov
inc
or
mov
ret
mov
adc
or
in
dec
mov
je
or
cmp
dec
push
mov
xor
push
out
fmuls
or
sar
rclb
cld
push
sbbl
cmp
insl
and
jp
sbb
mov
xchg
ret
pop
jg
xor
jb
add
dec
push
dec
lea
pop
stos
mov
dec
cmc
sbb
loope
mov
pop
adc
movsb
push
push
test
jne
out
fs
and
lods
pop
clc
andl
or
push
decl
mov
jge
xchg
fldcw
add
mov
inc
movd
push
dec
nop
fs
popa
cld
cli
notb
mov
or
add
stos
aaa
into
dec
add
aad
cld
push
pop
xor
or
iret
or
fs
xchg
cmc
jmp
fcmovbe
mov
jmp
mov
mov
inc
enter
mov
or
add
pop
mov
clc
inc
dec
test
lock
mov
mov
or
push
push
in
lret
dec
iret
mov
push
sbb
insb
not
add
incl
insl
je
push
add
lea
pop
xchg
pop
inc
push
into
lds
hlt
in
cmc
or
lock
hlt
arpl
sbb
das
aaa
sbb
mov
sub
push
call
incl
mov
fucomip
xchg
lret
sbbb
xchg
add
pop
xorb
call
in
mov
not
or
dec
lea
imul
repnz
xor
js
sbb
scas
mov
hlt
mov
decb
addr16
cltd
add
paddw
adc
cmp
test
aam
fs
cmpb
inc
sti
hlt
xchg
loopne
jbe
andl
dec
lcall
popf
xchg
xchg
in
shll
je
sahf
fwait
mov
test
mov
adc
shll
pop
rcrl
xor
test
movsb
dec
push
dec
add
sbbl
mov
in
ficoml
fs
int3
and
out
sbb
hlt
cmc
mov
mov
adc
call
insb
push
cmp
xlat
and
out
push
orb
in
fmull
cld
lds
jno
pop
mov
aad
in
inc
xchg
jp
sarl
dec
cmp
sbb
les
sbbb
sbb
notb
jbe
aaa
and
addl
and
ret
mov
cmp
cwtl
and
dec
daa
mov
mov
jno
add
xor
jmp
movsl
ljmp
ja
cmp
jo
pushf
imul
movsb
xor
popa
xor
mov
mov
or
negl
pop
out
adc
rorl
and
push
cld
xchg
or
jne
cs
movsb
imul
ret
out
call
je
add
add
shlb
adc
add
cmp
jae
mov
filds
mov
push
push
lods
push
mov
dec
jp
in
rorb
jbe
adc
mov
jbe
scas
adc
mov
and
sub
pop
popf
jno
dec
repnz
in
cmpsb
push
pop
xor
pop
sti
push
pusha
xor
sti
mov
movsb
cmp
sub
mov
and
lods
dec
add
repnz
icebp
add
mov
cs
int3
les
sbb
shl
lock
adc
in
mov
xchg
fdivr
or
dec
sbb
sub
bound
out
aam
testl
ret
cmp
jmp
cmp
dec
aam
cltd
pop
push
fs
xor
add
xchg
or
loopne
into
lea
pop
mov
mov
fldcw
jge
enter
js
and
cmp
xor
sbb
in
push
rorl
xchg
mov
outsb
cmp
dec
lds
adc
clc
fsts
stos
lods
pop
ffreep
test
mov
or
push
xchg
adc
mov
loopne
cmp
add
pop
pop
and
je
dec
sbb
pushf
inc
mov
and
pop
mov
inc
dec
sbb
pop
and
mov
mov
jg
lahf
mov
xchg
pusha
cwtl
xchg
xchg
imul
test
mov
pop
test
cmp
stc
xchg
mov
adc
idivl
rcll
vmread
sub
adc
or
shr
push
out
mov
sub
mull
mov
mov
pop
pop
mov
sub
sbb
loope
test
xor
mov
call
out
inc
inc
jge
cs
jecxz
inc
add
jl
lods
sub
and
adc
mov
out
arpl
push
jo
pop
repz
lea
mov
shlb
mov
add
hlt
sbb
sarb
loop
mov
aad
cmp
sbb
cmp
push
adc
jno
idiv
sti
or
inc
mov
outsl
dec
stos
sub
addr16
dec
lahf
ds
ret
in
imul
ss
inc
add
outsl
divb
add
rcrl
jp
adc
dec
and
lds
fs
insb
std
in
movsb
push
jnp
sbb
xor
les
adc
aad
ja
test
sub
inc
mov
sbb
adc
sub
and
je
mov
outsb
mov
stc
outsl
ret
test
bound
shll
xchg
ret
in
add
sbb
inc
seto
jg
mov
cmp
push
inc
ljmp
lock
add
jae
gs
mov
aam
lcall
xor
cmp
mov
je
fstps
push
sub
and
xchg
push
cmp
imul
lds
stos
test
pushf
lock
cmp
ds
push
sub
in
jo
in
mov
ja
add
call
cld
pusha
sub
stc
pusha
xchg
jge
aaa
rclb
loopne
adc
insb
jl
adc
adc
arpl
adc
loopne
xchg
ret
insl
xchg
push
lahf
les
push
cmpsl
scas
sahf
xor
xor
ss
inc
testb
rorb
add
mov
das
mov
int
insl
push
sbb
dec
push
add
std
jmp
stos
or
or
loopne
bound
jae
mov
int3
pop
jp
and
jl
and
xchg
xlat
mov
cmp
add
and
mov
dec
xor
xlat
add
xchg
push
ret
std
lahf
or
lea
sub
cmc
inc
sbb
stos
adc
rcl
dec
lods
add
out
jmp
mov
mov
and
adc
dec
test
jo
mov
mov
push
mov
xor
and
dec
add
xor
lcall
test
daa
mov
mov
jp
push
cmc
xchg
jg
pop
jae
loopne
jge
push
clc
adc
int
inc
call
sbb
push
shlb
repz
sbb
cmp
insl
adcb
xor
ror
add
daa
clc
adc
shlb
inc
bound
xorb
jecxz
cltd
jg
add
sbb
pop
jg
inc
pop
cmovb
mov
jae
aaa
pop
mov
mov
sbb
and
repz
xchg
lock
and
ret
sbb
inc
ss
mov
mov
jecxz
sub
ret
shrb
sbb
or
ss
mov
mov
or
aad
ficompl
xlat
pop
in
fistps
shll
inc
in
cmpb
push
cltd
sbb
and
and
and
push
int
mov
inc
add
les
add
jg
add
jb
xchg
icebp
shll
inc
cmp
and
decl
dec
filds
pop
push
add
nop
jle
xchg
cmp
lret
out
lods
mov
or
jae
and
icebp
repz
adc
mov
scas
jo
mov
ja
adc
pop
arpl
mov
ret
bound
je
out
sbb
cmc
mov
add
add
int
pop
pop
aaa
adc
cmpl
inc
jl
inc
ret
mov
in
jne
dec
push
inc
dec
bound
jae
int3
addl
cs
lock
pusha
mov
aaa
cmp
xchg
and
push
aaa
fstl
push
clc
insl
xchg
xor
mov
imul
add
and
cli
stos
jo
pushf
xor
sub
mov
mov
cli
mov
ret
popa
sbb
les
inc
jnp
mov
cli
imul
xor
js
iret
adc
sub
test
test
push
call
fidivrs
fimull
push
xchg
inc
popa
fstpl
bound
push
pop
pop
sbb
fstp
push
mov
rcrb
data16
cs
add
call
xorl
adc
jecxz
les
and
fsubrs
in
cli
mov
insl
popf
icebp
es
and
jbe
push
sbb
ret
jl
jne
jg
inc
mov
or
mov
inc
shlb
fsts
pop
shlb
out
ss
enter
add
pop
sbb
mov
fisubs
add
push
enter
fadd
movsl
nop
add
xlat
mov
insb
or
leave
mov
out
fistpll
fcomps
jns
mov
call
dec
shlb
pop
je
jnp
mov
lahf
in
push
aad
cmp
inc
cmp
adc
or
test
sbb
push
rcrb
mov
mov
push
push
mov
xchg
rcr
mov
mov
pop
mov
dec
lods
mov
sbb
iret
ljmp
mov
xor
sahf
test
ret
aas
jmp
mov
rcrl
adc
hlt
mov
movsl
adc
lods
ret
inc
add
dec
loop
or
mov
jp
cwtl
pop
cmp
jle
sub
push
iret
repnz
sbb
leave
out
xchg
std
shlb
shrb
mov
sub
push
pop
mov
shrb
mov
fwait
pop
dec
je
js
mov
sbb
iret
add
xchg
pop
jg
mov
repnz
out
insb
dec
mov
test
push
ficompl
icebp
arpl
add
addr16
jb
idiv
inc
push
cmp
jo
dec
stos
adc
add
hlt
xor
cmp
add
jle
pop
mov
xchg
loopne
mov
sahf
in
pop
push
or
es
dec
test
adc
add
insb
mov
test
xchg
daa
cmp
lods
sahf
outsl
cld
enter
mov
xor
inc
outsl
adc
dec
inc
mov
push
imul
cmpl
mov
xchg
and
mov
push
je
inc
lock
dec
or
push
aaa
adc
cli
rol
lock
mov
lcall
mov
mov
lret
inc
aad
shll
jo
xchg
jmp
xchg
clc
notl
jmp
xchg
inc
push
pop
add
sbbb
adc
sbb
adc
clc
pop
add
mov
or
and
icebp
andb
push
or
hlt
xlat
jp
add
sub
xchg
mov
popf
or
mov
sbb
mov
add
sahf
scas
icebp
and
adc
popf
pusha
push
sub
sbb
dec
inc
stos
add
adc
pop
push
enter
out
sahf
dec
decl
ret
stos
xor
daa
std
jno
jo
cmpsb
jmp
data16
xchg
scas
push
sub
mov
repnz
push
fs
pop
sub
mov
mov
cmp
pop
hlt
lods
xchg
test
cmp
push
mov
jp
push
push
nop
movsl
mov
inc
xchg
jg
into
repz
test
xor
push
loop
inc
insb
jb
adcl
fmull
dec
negl
fdivrs
test
mov
xor
call
loopne
call
inc
jmp
or
mov
in
jp
js
sbb
std
or
cli
push
push
dec
shrb
pop
movsb
adc
mov
inc
pop
mov
call
xchg
in
xor
js
ljmp
add
pop
xchg
test
cmp
das
ret
repz
add
loop
mov
test
ja
cmp
repz
add
mov
cwtl
rorb
add
pop
fcomps
ds
repz
movsb
nop
iret
mov
scas
divl
jge
outsb
mov
fsubrl
xor
bound
sbb
sub
dec
aaa
add
das
add
jle
movsl
fists
daa
push
push
xchg
xor
mov
sahf
xchg
je
cld
or
incb
call
mov
sub
int3
aas
mov
cmc
mov
jecxz
mov
mov
mov
inc
aad
and
fst
in
and
stos
inc
and
push
outsl
adc
mov
add
rcll
cmpsl
jnp
cmp
lcall
mov
pop
outsb
enter
cmpsl
mov
aaa
xor
outsb
repnz
pop
daa
ret
add
int3
pop
fistl
movsb
idiv
xchg
and
cmp
incb
adc
xchg
and
cmpsb
subb
jp
add
repz
aam
pop
add
adc
popf
filds
push
jmp
push
inc
push
and
push
sti
cmp
jecxz
inc
loope
lahf
scas
fsubs
lock
aam
inc
pop
cli
ret
aam
mov
xchg
cmp
sbb
rcrl
mov
idiv
push
cmp
jae
aam
mov
pop
xchg
xchg
je
lahf
mov
js
sbb
mov
fwait
int3
push
sbb
addb
cmp
ds
out
jmp
out
sbb
dec
jge
pop
jbe
jp
pop
inc
sbb
js
mov
dec
and
cmp
push
pop
inc
in
cs
es
inc
cmp
dec
sbb
addr16
je
add
scas
pusha
push
mov
sbb
inc
adc
js
push
cld
dec
decl
add
jle
call
inc
pop
push
popf
das
jbe
sub
push
popl
jp
sbb
jb
shll
lret
pop
push
sysenter
add
pop
jo
mov
out
push
inc
ljmp
adc
pushl
jecxz
std
jecxz
mov
gs
sbb
pop
enter
jg
pop
xor
adc
xor
mov
loop
add
movsl
pop
loope
pop
ss
add
arpl
ret
cs
ss
in
adc
shlb
sub
inc
and
rdtsc
cmp
add
test
sub
mov
push
push
mov
out
cmp
cmp
pop
pop
xlat
mov
dec
gs
mov
orb
lcall
stos
mov
rorl
push
jo
test
and
loopne
push
popf
add
aam
and
cli
push
cld
ficoml
scas
push
push
adc
xchg
cmpsb
jnp
pusha
data16
aas
mov
push
rol
pop
jae
aas
push
das
adc
sub
adc
push
into
and
adc
cmpsl
sbb
mov
or
addr16
orl
sbb
xor
lods
in
add
xchg
add
add
aas
and
push
dec
sbb
push
or
sub
pusha
repnz
loop
roll
or
jnp
xchg
pop
xor
mov
shlb
jge
inc
out
add
loop
mov
mov
mov
fdivr
xor
ret
ret
fdivrp
fadd
pushf
inc
sub
loope
movb
ret
sahf
mov
xchg
push
push
cltd
cli
mov
lret
adcb
xor
pop
popf
push
adc
cmp
and
loope
sahf
movsb
mov
mov
sub
add
mov
pop
rcl
dec
sbb
sub
pop
mov
push
cs
clc
into
jmp
mov
mov
mov
pop
sbb
mov
popf
icebp
cmp
rolb
mov
test
cmp
mov
out
push
mov
test
cwtl
in
cltd
or
fisttpll
fisubl
rcll
in
mov
mov
movsl
add
or
inc
in
sbb
jmp
decl
dec
push
sub
scas
cmc
outsl
call
scas
pushf
sub
adc
ja
loop
and
or
pop
mov
stc
ret
and
mov
pop
add
or
lret
add
das
add
add
inc
add
decl
inc
jnp
ja
dec
int
mov
rolb
jo
adc
sbb
call
je
dec
mov
dec
pop
pop
push
xchg
daa
lods
inc
test
and
push
sbb
lret
mov
enter
pusha
repz
sahf
in
pop
aaa
add
and
mov
adc
jg
shrl
or
mov
clc
adc
mov
sbb
aas
xor
je
and
cmc
cli
adc
add
push
push
int3
and
and
in
sub
scas
pushf
fisubrs
decb
add
mov
imul
std
mov
pop
lcall
lods
movsb
or
xor
test
clc
pop
mov
jle
pushf
jno
ficoms
mov
ret
adc
test
cmp
fsubrs
push
call
jp
jp
or
inc
loope
fmull
or
xchg
aas
push
dec
insb
xorl
ljmp
insb
jecxz
lret
inc
cld
mov
lret
pop
push
cmp
jl
add
dec
call
orl
jge
jmp
stos
dec
cmp
gs
pop
lret
adc
out
sbb
jecxz
pop
sbb
lret
push
add
ret
and
mov
scas
mov
jg
stos
and
insb
cmc
dec
xor
pop
or
sub
pop
push
jb
inc
lods
push
lret
out
cs
aaa
pop
mov
jle
adc
mov
ds
xor
jne
cli
fidivs
aad
push
lcall
adc
jecxz
movb
sub
int3
fadd
dec
inc
sbb
lods
jb
aas
sub
cmpsl
popa
dec
sbb
add
lds
push
push
mov
adc
pop
into
enter
push
jl
clc
cli
xchg
lock
mov
xor
sarl
pop
jbe
or
ffreep
add
repz
mov
cmp
mov
lods
adc
xchg
popa
outsb
out
pop
arpl
push
fwait
xchg
mov
pop
push
dec
jecxz
add
and
in
aad
mov
push
cmpsl
and
inc
dec
movsb
js
xor
cld
xor
out
aam
mov
addr16
jge
fimull
cmp
jnp
add
push
imull
jecxz
xchg
mov
pop
in
cmpb
xor
lock
clc
mov
imul
lret
outsb
imul
in
jbe
add
mov
lds
mov
shll
repnz
sahf
mov
add
mov
mov
jp
ret
mov
adc
pop
inc
popa
mov
enter
xor
sbb
push
fcompl
into
ljmp
xchg
in
fdiv
or
arpl
bound
aas
insb
cld
test
dec
aaa
mov
fcmovu
xchg
pop
dec
pop
orl
div
addr16
lods
movsb
or
push
int3
hlt
mov
fs
lds
pop
jb
daa
cmc
dec
lret
jne
xchg
roll
xchg
adc
adc
sub
lret
push
sub
jle
cmp
mov
sub
sbb
pop
cmp
clc
push
sbb
xchg
sub
pop
rolb
xchg
mov
xchg
or
mov
movsb
or
mov
clc
daa
add
cmp
fs
scas
lcall
and
neg
push
sbb
add
mov
or
mov
iret
int3
push
test
cmp
xchg
ds
pop
aas
rolb
or
inc
adc
test
repz
adc
push
add
mov
xchg
jne
add
dec
es
add
aam
arpl
push
ret
movsl
das
cs
lahf
push
xchg
push
lret
test
test
cli
cmpsl
dec
lret
jle
or
jl
jmp
daa
xor
add
addb
rolb
push
loopne
mov
adc
sbb
xchg
or
int3
daa
ljmp
icebp
das
add
inc
add
in
jno
scas
jnp
test
pusha
push
inc
cmp
movsl
and
push
in
mov
xchg
and
adc
lds
mov
cmp
subb
imul
test
inc
xchg
rolb
jnp
jne
decl
rorl
xor
fldl
adc
inc
or
add
xchg
sub
std
scas
sbb
ret
imul
jg
idivb
movsl
jns
loopne
push
sbb
fimull
push
add
or
pushf
mov
testl
pop
leave
xor
fdivs
add
sahf
les
jp
lock
outsb
jo
push
cwtl
jne
mov
mov
adc
loop
js
jp
dec
mov
xor
es
add
scas
mov
jno
leave
rcrl
aad
sub
movsl
push
int
loopne
xor
adc
jbe
inc
lock
cmp
out
sbb
shlb
push
adc
push
scas
icebp
sbb
cmp
cs
jmp
lods
dec
cmpsl
mov
add
inc
dec
sti
inc
sarb
sbb
cmp
mov
fcmovbe
je
out
dec
xchg
bound
jg
cmp
mov
add
js
dec
add
cmp
mov
jnp
mov
jg
adc
mov
jmp
addl
arpl
lods
mov
xchg
mov
add
jle
aaa
icebp
pop
jg
xchg
je
or
adc
xor
aaa
adc
and
mov
je
xchg
test
movsw
sub
mov
jle
mov
js
push
and
pop
mov
mov
mov
jmp
js
in
dec
cmp
add
inc
bound
int3
sbb
stos
dec
ljmp
scas
mov
clc
mov
lock
loopne
pop
mov
mov
in
and
cmp
push
test
or
testb
sbb
pop
cmp
mov
shlb
sbb
sub
sarb
mov
outsl
loop
aas
scas
out
add
insb
loope
mov
pop
repnz
or
cltd
aad
sub
and
cli
and
mov
loop
mov
xor
dec
pushf
jno
cmp
inc
jge
inc
ja
mov
cmp
lock
pop
adcl
xor
incb
mov
rcrb
je
mov
loope
sbb
call
adc
aas
sbb
insl
sub
and
stos
add
mov
clc
imul
add
icebp
xchg
inc
push
sub
lret
push
adc
aam
gs
daa
out
aam
add
jno
add
out
inc
jge
xor
dec
xchg
ret
ficoml
and
push
mov
pop
iret
fidivrl
jg
add
dec
add
mov
adc
data16
xor
subb
pusha
adc
sub
jl
rorl
jbe,pt
insb
js
or
test
test
ret
imul
lds
in
out
or
push
outsl
add
enter
test
pop
lock
ret
rcr
mov
insb
mov
sub
cld
mov
jne
and
push
add
enter
inc
sbb
mov
lahf
mov
jbe
pusha
out
dec
rcrb
sub
or
push
popa
loopne
call
pop
hlt
xchg
sbb
mov
xchg
and
push
inc
mov
mov
inc
jns
sar
movb
mov
cmp
out
out
cmp
mov
mov
mov
pop
loop
jg
pusha
add
sub
xor
xchg
rcrl
sub
and
pop
sbb
add
push
in
mov
test
dec
mov
pop
loopne
sub
std
loopne
rorl
mov
inc
add
in
movsl
pop
adc
cmc
push
shlb
jg
lods
cs
out
cmpsb
rcll
sbb
scas
push
adcl
push
jb
push
js
clc
or
push
pop
shl
bound
mov
in
sub
xchg
mov
daa
pop
notl
scas
loopne
jp
outsb
sbb
push
sbb
cmp
scas
push
push
mov
test
jl
sti
mov
push
mov
clc
sbb
dec
fsubrl
mov
inc
in
scas
mov
pop
pop
mov
xchg
xor
push
test
mov
mov
and
jae
pop
mov
decl
je
and
test
sbb
sbb
daa
sbb
ljmp
inc
test
adc
xlat
and
xor
adcl
shr
xchg
ret
mov
sahf
pop
jmp
cwtl
dec
adc
push
cs
imul
sub
mov
fistps
xor
push
jns
cmpl
mov
push
fildll
adc
cmp
pop
data16
lds
adc
sbb
lea
add
je
or
loope
hlt
cli
fiadds
push
out
lcall
xor
ja
and
jp
scas
cmpb
arpl
out
imul
jo
ljmp
arpl
mov
loop
insl
cmpsl
imul
add
jp
lock
mov
mov
aam
clc
pushf
loop
pushl
add
fisttps
ljmp
pusha
imul
clc
and
insb
repnz
or
jecxz
push
cmp
xor
or
cmpsb
xor
or
xor
add
push
xor
mov
and
enter
dec
insl
hlt
mov
mov
loopne
push
out
in
popa
mov
cld
bound
dec
cmc
sar
mov
mov
pop
and
bound
aam
mov
icebp
or
jmp
add
test
pop
lods
add
pop
in
push
sub
sub
or
push
mov
mov
push
push
sub
xchg
loope
xchg
test
sbbl
cltd
int3
push
sbb
imul
cmp
rclb
sbb
pminub
int3
outsl
rclb
js
dec
push
and
cld
addr16
jne
pushf
out
xchg
imul
cltd
cmp
jbe,pn
xchg
cmp
test
imul
lret
out
add
sarb
popf
sbb
mov
cmp
pop
add
push
inc
and
es
daa
rorb
hlt
and
pop
cld
mov
push
call
xchg
jecxz
jne
jg
pop
jg
push
pop
rclb
add
cmp
pop
test
out
pop
notb
inc
sti
mov
jmp
pop
jns
or
ss
mov
repnz
pop
ss
nopl
es
jnp
hlt
adc
jmp
cwtl
mov
xlat
xor
cmp
mov
pop
jge
sbb
xor
or
ret
movb
add
dec
sub
mov
sbb
sbb
add
mov
vcvtsi2sdl
adcb
sub
lods
mov
loopne
inc
add
mov
add
call
lea
and
xor
or
jo
jmp
jne
add
out
into
cmp
adc
inc
pop
test
movsb
ja
mov
mov
mov
or
push
gs
add
test
shlb
setnp
js
scas
sub
sub
jb
pop
and
or
jge
call
sti
cwtl
mov
ljmp
rcrl
jp
add
adc
arpl
mov
mov
out
xrelease
je
icebp
push
jb
aam
and
dec
ret
add
mov
pop
loope
mov
mull
andl
int
sbb
addr16
enter
mov
jnp
dec
scas
and
stc
inc
insb
inc
pusha
nop
mov
adc
mov
loope
xchg
or
call
movsb
lcall
or
xchg
mov
cld
js
nop
pop
add
jbe
jl
jb
loope
shufps
aaa
das
jge
add
xor
mov
aas
js
loopne
inc
jg
push
mov
or
lea
mov
inc
lea
mov
push
xorl
lods
and
imul
mov
xchg
inc
test
mov
or
pop
mov
ljmp
dec
dec
adc
movsb
mov
fldl
xchg
scas
pop
movsl
xor
push
and
test
cmp
loop
stos
cmpsb
cmpl
sub
cwtl
xchg
sub
popf
push
rcrb
or
inc
out
popf
loopne
cmp
lock
loopne
call
outsb
imul
out
repnz
mov
jno
dec
fs
cli
shl
sbb
test
add
pop
add
lds
shrl
fs
call
jne
xor
pop
loopne
add
and
push
outsb
outsb
ret
je
push
sub
fcmovu
loope
and
add
test
imul
mov
lods
push
xor
in
adc
test
shrb
gs
pop
xchg
rcrl
out
out
ss
call
lahf
cli
cmpl
das
loopne
fnsave
idivl
push
dec
mov
fst
insl
pop
pusha
and
xchg
lcall
negl
sbb
mov
pop
ds
xchg
jecxz
or
push
enter
out
push
mov
inc
ret
dec
pop
cld
stos
aaa
and
pop
je
xchg
jo
jo
adc
mov
dec
cmp
rcrb
push
push
mov
daa
movsl
lret
shrb
and
fs
inc
dec
push
adc
ja
lods
test
adc
ret
test
mov
mov
lcall
adc
dec
adc
repz
ret
xchg
hlt
and
frstor
aaa
sbb
test
cmpsl
xlat
pop
inc
pop
adc
movsb
sbbl
sub
call
jl
cmpsb
outsl
cmp
and
adc
cwtl
cltd
ret
lods
lods
and
outsb
dec
js
fsts
ljmp
cld
push
push
push
jmp
sbb
int
imul
stos
vcvtuqq2psy
push
sbb
add
imul
lock
lret
xlat
je
adc
cmpsb
std
sti
jne
cmp
ds
mov
adc
xchg
and
dec
inc
pop
out
inc
sbb
pop
push
out
cmp
incl
inc
jmp
inc
and
call
and
test
mov
sub
jo
jnp
pop
movsl
arpl
arpl
push
sub
lods
xor
hlt
xor
sbb
cmpsl
aam
xchg
loop
sti
repz
or
icebp
ljmp
addl
dec
das
jo
adc
cmp
dec
and
lock
movsl
cmpsl
inc
mov
xchg
add
ret
xchg
add
arpl
js
sub
and
popa
int
push
rol
dec
inc
bound
add
jae
rcrl
in
xchg
int
inc
ja
inc
push
ret
inc
pop
mov
push
and
push
ss
jne
jo
in
outsl
inc
loope
push
jg
aas
insb
sub
xchg
insl
xor
movsl
mov
addr16
cmp
pusha
fcomps
sbb
adc
xor
mov
sbb
cmc
pop
jp
lods
stos
xchg
mov
test
jno
mov
popf
out
dec
bound
std
inc
mov
cmp
mov
lods
inc
jge
push
std
sub
sbbl
shld
or
mov
inc
addr16
push
add
ja
sub
cmp
mov
push
lea
mov
pop
dec
test
adc
stos
xchg
dec
adcb
adc
repnz
xchg
pop
mov
jmp
fmuls
lock
add
sahf
sbb
in
pop
je
das
jno
dec
and
repnz
jl
out
aad
cli
lea
cmc
pop
sarb
lods
cwtl
fs
or
sbb
addb
add
in
jmp
sbb
out
fdivs
sub
fdivrs
mov
addr16
mov
ret
pushf
jle
inc
sbb
add
pop
loope
xlat
fildl
js
sub
or
notb
xlat
scas
sbbb
dec
sub
scas
sbb
xlat
dec
divb
and
cs
mov
xor
sub
sub
out
rorb
mov
imul
shlb
imul
mov
ljmp
and
mov
cmp
and
xor
imul
jae
in
push
add
inc
into
add
jb
inc
popa
dec
inc
aad
jl
cmp
jnp
subl
cli
xchg
ret
adc
testb
mov
fstpl
adc
cmp
jmp
push
je
aaa
mov
call
lea
jp
mov
add
ljmp
insl
sub
xor
adc
int
push
and
imul
jb
rorl
out
divl
leave
stc
bound
sbb
add
das
cltd
fwait
or
cltd
aas
xor
clc
movsb
ljmp
xlat
mov
flds
cmp
test
arpl
mov
aaa
mov
rcl
mov
mov
push
loopne
insb
add
test
mov
jbe
in
jp
incl
pushf
add
adc
pop
fstpt
test
cmp
ret
or
and
push
mov
mov
cmp
bound
sub
lahf
sub
sub
popa
movl
push
scas
sbb
jmp
or
shrb
lcall
mov
out
pop
ret
arpl
rcrb
loopne
mov
in
mulb
fdivr
subl
lcall
xchg
int3
add
dec
loop
aas
xorb
or
or
scas
add
leave
nop
sub
pop
or
daa
mov
rorb
push
mov
cmp
scas
mov
adc
jp
xchg
push
xor
lret
rcl
pop
push
or
mov
daa
sbb
xor
rolb
ljmp
mov
popa
jecxz
and
das
mov
fstpl
add
jl
shrb
mov
jp
inc
cli
inc
movsl
mul
rorl
sub
add
jo
lret
adc
call
lea
xchg
push
sub
ret
stos
jg
cmp
orb
and
in
andb
daa
sbb
mov
push
sub
outsl
xchg
push
das
jo
or
sarl
pushf
lahf
scas
add
add
sarb
mov
movsb
popa
jmp
sub
shl
add
fadd
das
inc
sbb
bound
xchg
sbb
jl
jno
repnz
std
das
add
inc
push
add
xor
push
mov
inc
cmpsl
adc
rol
sbb
or
push
fwait
das
loopne
adc
cmp
negb
int
pop
pop
mov
xchg
mov
movsb
adc
test
iret
lea
pop
sti
ret
cmp
push
mov
cmp
fbstp
or
push
sub
addl
es
adc
pop
pop
pop
outsb
test
add
mov
cmp
inc
push
mov
pop
int3
lock
adc
inc
imul
dec
cld
cmp
pop
cmp
pop
mov
xchg
enter
inc
iret
dec
mov
addr16
pop
lods
stos
push
push
repz
sub
jbe
or
aad
daa
sub
js
cmp
cmpsl
insl
nop
push
cmp
jge
push
push
inc
lret
jae
dec
lods
js
outsb
jne
sub
xchg
daa
inc
das
dec
hlt
pop
divl
aad
mov
xor
pop
push
adc
jp
or
dec
mov
rorb
mov
sub
jecxz
pop
and
jne
mov
lods
andl
push
jmp
fucomip
push
sub
push
or
sbb
enter
pop
and
adc
pop
loope
clc
and
and
lret
pop
mov
cli
sub
pushf
jge
dec
mov
imul
adc
mov
sbb
aam
cli
sbb
inc
sub
xor
add
aam
out
stc
movsl
sbb
sti
sbb
fsubrl
adc
cmpsb
jnp
xor
cmpl
dec
aas
idiv
inc
in
jo
fildl
dec
sbb
pop
jmp
mov
push
aaa
negl
stc
sbb
adc
bnd
daa
pushf
ljmp
rolb
inc
mov
sub
sbb
cmp
clc
xchg
cld
or
xor
mov
mov
cmpb
ficoms
jp
pop
bound
sbb
add
xchg
das
mov
lcall
mov
and
xor
dec
dec
cmp
add
pop
push
push
inc
xor
inc
mov
mov
les
insl
sbb
clc
or
ret
or
push
fildll
push
rol
add
hlt
cmpb
push
hlt
cmp
add
cmpsb
mov
inc
inc
mov
mov
xor
push
outsb
pop
cmp
pop
int3
pop
jl
add
pop
or
nop
xor
sbb
jne
movsl
mul
push
bound
pop
aaa
outsb
push
fidivrs
xchg
in
outsl
popf
bts
imul
out
mov
jae
lock
mov
inc
mov
jmp
mov
cmp
dec
ja
jge
adc
lcall
dec
mov
imul
mov
aas
mov
jmp
cmp
push
sub
shlb
aad
int3
xor
int3
or
ret
adc
sub
mov
mov
stc
mov
push
loopne
xchg
ljmp
xchg
jo
push
inc
jl
mov
cmpsb
sbb
mov
cmpsb
mov
pmaxsw
daa
sub
jp
ds
jle
test
cmp
pop
mov
cmp
cli
or
sub
ficoml
push
and
andl
shrb
mov
push
ret
std
inc
lods
cmpl
xchg
icebp
rclb
sarl
clc
mov
das
push
enter
lock
add
or
mov
inc
xor
dec
or
mov
lcall
jo
cmp
clc
xchg
jmp
into
mov
iret
jb
pop
cmp
sub
fcoms
in
pop
xchg
jl
mov
ss
mov
int
sete
dec
mov
test
push
xor
dec
and
jg
or
push
fnstsw
enter
pop
push
aaa
pushf
js
inc
pop
mov
fnstsw
cmp
imul
pop
outsb
xor
or
out
cwtl
data16
jmp
dec
cltd
push
or
jne
xchg
jmp
nop
sti
inc
jne
lds
fisubrl
and
push
push
lock
pop
sbb
inc
sub
ror
loop
lret
mov
sub
jne,pn
mov
gs
sbb
dec
cwtl
pop
or
test
in
add
push
xor
shrl
pop
xor
xchg
enter
xor
outsb
jb
shlb
push
scas
push
push
cmp
negb
adc
mov
xor
mov
and
mov
iret
and
mov
fimuls
jo
ret
pop
jne
cmp
les
js
mov
pop
testl
std
mov
mov
xor
cmp
and
rclb
cwtl
add
or
or
das
mov
jecxz
cwtl
mov
sbb
leave
or
cli
jnp
loopne
mov
not
test
rcrb
push
repz
lcall
jecxz
fwait
pusha
push
sub
inc
jp
aas
aas
or
mov
mov
fmull
pop
shlb
dec
lahf
pop
insb
js
push
pop
adc
stos
leave
sbb
scas
push
insb
adc
mov
xor
mov
sbb
in
das
jo
jl
jecxz
subl
sub
mov
mov
mov
pop
or
add
add
testl
xor
loopne
dec
push
mov
cli
insl
mov
aaa
dec
inc
inc
pop
movsb
scas
jb
clc
mov
les
add
adc
mov
sbb
pop
cmp
mov
js
sbb
outsb
aad
sub
add
or
or
sbb
loop
adc
inc
pop
mov
pop
mov
push
add
jle
pop
into
sbb
je
or
push
ss
xchg
jno
adcb
cmp
cwtl
mov
mov
stc
cmpsb
push
mov
adc
mov
shrb
popa
and
jp
add
sbb
push
pusha
js
xchg
push
movsl
cmp
push
or
test
lock
test
mov
adc
pop
cmp
xor
inc
adcl
and
sbb
mov
and
mov
inc
or
xorb
scas
cs
clc
dec
or
push
aas
push
in
adc
scas
cmpl
pop
or
mov
test
jne
or
out
sbb
insb
sbb
imul
sbb
dec
pushf
jae
pop
cmovb
pop
jbe
push
mov
ret
movsb
pop
xchg
std
loop
clc
ret
enter
xlat
push
clc
jg
xor
roll
and
mov
movsb
std
int3
lret
jge
xlat
cmp
in
mov
and
pop
arpl
dec
sbb
jp
mov
push
mov
scas
inc
push
pop
lods
jle
mov
cmpb
test
xor
aaa
clc
xor
push
push
mov
nop
lret
lock
lret
sub
add
sub
cli
cwtl
dec
test
jnp
and
pushf
mov
pop
pop
stos
dec
rolb
sub
mov
sahf
mov
or
inc
pop
loop
add
xor
ljmp
icebp
ss
test
dec
sub
dec
add
push
push
in
xchg
adc
ret
jl,pn
mov
add
addr16
or
push
stc
hlt
mov
xor
ret
div
sbb
enter
add
push
cmp
dec
inc
outsl
cmp
sub
cmp
mov
shrl
lds
push
sbb
insb
lcall
mov
insl
lcall
insb
leave
and
adc
shll
stos
das
in
popa
scas
aam
daa
mov
adc
inc
or
mov
cmc
xor
inc
adcb
jl
adc
ds
sub
lcall
fs
push
cltd
xor
test
repz
sbb
clc
outsb
inc
test
scas
test
pop
incl
lahf
lock
call
cwtl
cmp
mov
test
icebp
adc
or
adc
cmpsb
jg
sub
pushf
insl
test
xor
mov
lock
lds
aam
pop
sub
and
sbbb
sti
sub
lcall
xchg
push
or
repz
sbb
xchg
pop
xor
push
outsl
xchg
dec
mov
cmp
ret
hlt
inc
cmp
adc
outsl
and
add
std
int
cmp
adcl
mov
icebp
mov
iret
loopne
pop
adc
popa
mov
cmc
cmp
or
dec
into
add
mov
inc
mov
and
call
sub
fmul
add
loopne
or
jo
cmp
lcall
andb
cmp
dec
jl
ret
call
xchg
mov
fdivl
or
fildl
ffree
in
xlat
test
mov
out
inc
jmp
jl
rcr
add
ljmp
push
in
cld
push
cmp
bound
sub
fwait
pop
mov
inc
pop
mull
push
hlt
test
cmp
inc
inc
fnstcw
adc
cmpsb
mov
test
inc
enter
mov
mov
push
and
jno
add
jp
mov
rolb
call
cld
incl
lret
mov
xchg
mov
pop
test
and
lods
lcall
mov
insb
roll
in
insb
repnz
inc
fdivs
std
lock
and
dec
pop
subl
mov
addr16
bound
cmp
xchg
daa
stos
add
sub
jg
jb
enter
xchg
inc
mov
push
scas
xor
adc
or
fwait
test
adc
ds
mov
sbb
lahf
cmp
add
xor
dec
cmp
cmp
jbe
mov
mov
or
fwait
decl
adc
pushl
mov
xchg
out
mov
xor
fidivrl
aaa
xchg
outsl
jno
call
lock
mov
cmp
mov
or
and
xor
xor
pop
jnp
call
in
inc
add
shll
loope
xor
dec
rorl
cmp
clc
jmp
push
push
xchg
add
cld
loopne
bnd
repnz
popa
leave
push
test
add
xchg
jne
add
xchg
and
xchg
popa
test
xor
sub
sbb
push
pusha
cmp
mov
xchg
jbe
add
xchg
pop
subl
insb
push
fists
mov
orl
push
jle
mov
push
push
mov
push
repnz
pop
pop
hlt
pop
xor
js
test
push
insl
cmp
inc
inc
and
mov
sbb
fldt
clc
sbb
xor
pop
sbb
in
pop
fiadds
in
movsb
mov
inc
adc
dec
ljmp
push
sahf
imul
mov
addl
pop
scas
movsl
call
mov
clc
cwtl
les
test
ret
int
inc
jle
loope
or
je
inc
push
sbb
sbb
bound
pop
insl
orl
cmp
js
cmp
jle
sub
cmpsl
out
popa
sub
mov
lock
jl
dec
mov
mov
cmpsb
push
mov
dec
cmpsb
sti
popf
cmc
scas
pop
outsb
rcl
loopne
es
fsts
and
aam
leavew
lods
dec
lds
mov
in
aam
loopne
mov
sub
imul
cltd
jb
mov
nop
cwtl
cmp
shl
leave
xor
push
mov
loop
xchg
sub
sbb
cwtl
ret
jo
xchg
xchg
jmp
adcb
ffree
jns
iret
in
or
xor
and
mov
cmpsb
push
mov
sbbl
push
xchg
add
shl
and
dec
xlat
mov
and
daa
or
mov
adc
mov
dec
and
mov
xor
mov
imul
lret
mov
dec
adc
test
mov
fidivl
ret
js
stos
rcr
mov
movsl
shrb
adc
enter
xchg
jp
pop
adc
cmp
pop
and
mov
fcomps
inc
les
pushl
push
rcrb
mov
xchg
sbb
mov
pushf
ja
mov
or
rcll
pop
pop
push
cmpb
xlat
push
sub
stos
sahf
add
push
xchg
pop
push
dec
shrl
fwait
rorb
cmp
ss
js
and
pop
lfs
push
test
inc
cld
test
xor
or
out
xor
iret
inc
push
ja
aad
subl
ret
dec
and
inc
pushf
mov
sbb
xchg
cmp
cmpsl
pushl
push
push
jno
ret
mov
fmull
mov
pop
sbb
inc
mov
call
fwait
ljmp
jne
xor
test
ficomps
add
push
adc
call
add
sti
lcall
and
ret
out
mov
or
repnz
fs
or
or
jne
or
jle
cli
mov
cmp
push
rcrb
sbb
and
scas
mov
mov
imul
cmp
mov
fnsave
mov
divps
popf
scas
leave
jne
mov
push
jmp
inc
mov
xchg
lret
fdivrs
gs
leave
icebp
add
js
mov
out
and
xor
sbb
fwait
daa
lods
fdivrs
adc
movl
inc
cwtl
ficompl
out
push
loop
sub
push
scas
mov
rorl
sarl
roll
es
adc
pop
mov
mov
mov
inc
stc
or
outsb
adc
mov
pusha
adc
jo
jns
mov
addr16
dec
mov
mov
mov
arpl
std
out
fadds
pop
adc
fwait
pusha
cltd
insb
mov
dec
mov
and
decl
cld
sub
ret
jns
ja
xchg
xchg
sahf
push
cli
or
jnp
push
fiaddl
jnp
lods
imul
in
cmp
dec
xlat
mov
aas
adc
sub
sub
jnp
js
sub
clc
pop
or
scas
pop
dec
lock
inc
aas
pop
stc
sarb
mov
ds
mov
or
jnp
cmp
add
lea
and
orb
dec
in
leave
jle
sbb
dec
or
mov
aad
xor
ja
and
dec
inc
fs
mov
loope
loopne
lahf
addr16
test
fmul
sub
push
lret
xchg
inc
fsubrl
fcoml
pop
lock
pop
lods
sbb
imulb
insl
fiadds
decl
jae
movl
int
sbb
inc
ret
loope
push
inc
adcl
cmpsb
ss
jle
cmc
or
dec
icebp
or
shrl
xchg
std
aam
ja,pt
int3
enter
aad
test
mulb
ds
jp
sbb
add
push
push
cmp
sahf
imul
add
rorb
incl
push
fiaddl
push
and
sbb
jp
lods
lret
shlb
xor
pop
adc
dec
fsubrs
ljmp
xor
repnz
enter
cmp
jecxz
and
or
lock
repnz
mov
and
stos
xchg
mov
adc
addr16
and
pop
cld
js
aad
pop
push
pop
in
cmp
pop
in
mov
push
adc
pop
shlb
sbb
mov
jo
aad
test
std
in
dec
mov
push
scas
sbb
or
andl
daa
fstl
test
cmp
adc
js
jp
adc
or
aas
andl
pop
inc
fsubrs
aam
pop
pop
out
cli
test
cmpsb
push
inc
dec
sarl
adc
dec
xor
daa
stos
dec
movsb
in
inc
daa
inc
inc
jo
hlt
adc
add
pop
fs
sbb
test
lods
or
icebp
scas
jo
cltd
push
sbb
cli
insb
test
aam
push
xchg
loope
jge
mov
mov
add
jns
mov
orb
jle
fmuls
jnp
dec
pop
jmp
or
jge
xchg
fdivrs
bnd
aas
aam
imul
cmpsb
adc
ficoml
jne
mov
xchg
xchg
xchg
mov
pop
or
loop
aaa
inc
mov
test
fdivs
mov
pop
ror
push
pushf
push
inc
add
fbld
mov
sbbl
or
in
jle
or
jg
popf
movsb
mov
mov
stos
loopne
leave
std
rcl
sbb
shll
jg
das
out
or
addr16
loop
jle
adc
cli
xchg
mov
ret
adc
xchg
stos
xchg
clc
push
sbb
xor
out
sbb
jo
jnp
jg
bound
hlt
dec
aad
pop
clc
mov
outsl
in
andl
xor
xchg
ds
sbb
clc
jmp
cld
mov
add
adcb
pop
mov
dec
push
and
shll
mov
jbe
movsb
mov
pop
pushf
aam
or
add
sbb
sub
arpl
or
xchg
pop
push
sbb
pop
add
push
add
int
or
mov
pushf
sahf
jp
inc
faddl
cmp
mov
sub
cmpsb
arpl
leave
into
sub
repz
mov
inc
add
lock
mov
push
lods
push
aad
cld
jo
loope
pop
or
out
mov
push
xor
add
xchg
sub
movsb
clc
sbb
outsb
pop
jno
mov
movsl
push
dec
inc
dec
je
dec
push
ja
jbe
sub
inc
or
or
mov
or
icebp
or
adc
data16
test
adc
stos
adc
js
add
xlat
mov
fcomi
push
xor
dec
jmp
inc
clc
push
dec
mov
call
inc
aaa
sub
out
popf
int3
pop
fdivrs
jle
xlat
loop
je
inc
imul
fwait
scas
cli
pusha
and
fisubrl
cmc
pop
das
test
popf
in
inc
jo
call
push
adc
cmp
aam
int
mov
jbe
scas
mov
test
cmpsb
jge
and
test
and
sahf
add
icebp
test
mov
adc
pop
xor
into
gs
nop
test
pusha
sahf
rcrl
ljmp
inc
add
mov
icebp
lock
les
pop
mov
adc
dec
mov
mov
cmp
mov
jb
adc
add
and
cld
adc
dec
xchg
and
rol
add
dec
addr16
jnp
mov
insb
jbe
daa
or
adc
xor
add
add
cli
adc
or
inc
mov
mov
leave
mov
mov
cli
pop
cli
aaa
add
test
pop
enter
icebp
inc
jmp
mov
pop
insb
sarb
mov
sbb
movsb
cmp
lds
fisubl
icebp
cmp
test
or
loope
loopne
popf
jge
mov
push
fimull
or
adc
orl
dec
xor
pop
sub
mov
fucomi
adc
jae
push
or
and
and
aad
std
fsubrs
sar
std
daa
jp
insb
jne
mov
clc
jne
hlt
test
pop
mov
dec
ret
push
fnstenv
sbbl
sar
imul
ret
inc
xchg
mov
cmp
sarb
xor
cmp
adc
cmpsb
mov
jge
jecxz
sub
sbbb
ds
ljmp
aas
mov
or
mov
cli
adc
sbb
rcrb
shl
les
inc
bound
and
push
movb
call
inc
fimuls
push
lret
das
call
insb
and
push
je
outsb
scas
pop
cli
movsb
push
dec
fcmovnu
enter
jl
je
xchg
sbb
daa
adc
or
adc
movd
inc
mov
into
mov
aas
lock
loopne
loopne
cwtl
adc
cmp
lods
mov
cmpb
pop
sarb
mov
lfs
mov
cmpb
lods
lock
mov
outsb
jb
adc
stos
rolb
pop
lods
adc
pop
mov
mov
out
sbb
add
add
fcmovb
in
dec
add
repnz
bound
jecxz
or
or
jo
js
adc
mov
call
add
sbb
mov
sbb
adc
test
mov
jp,pt
leave
test
cld
push
xchg
cmp
pop
push
lods
sbb
push
ret
test
and
js
js
arpl
mov
int3
les
sti
lret
mov
cli
in
stos
lock
je
pusha
dec
les
pop
imull
icebp
lret
pop
out
daa
xchg
jo
cwtl
aaa
insb
sub
adc
cli
in
adc
jbe
sbb
xor
push
inc
sbb
sbb
mov
inc
clc
rcrl
fwait
jo
push
jl
dec
loopne
loop
xor
xor
pop
shl
push
int
jle
dec
jle
popa
pop
xchg
dec
stos
shrl
push
add
lock
lock
je
sahf
pop
xchg
ljmp
inc
push
mov
jae
dec
adc
imul
out
add
xorl
lcall
les
js
push
loopne
roll
sbb
inc
imul
fisttps
lock
jmp
div
mov
mov
and
lcall
push
ret
stos
mov
add
sub
xchg
adc
js
and
mov
ljmp
or
stos
popf
dec
mov
sbb
sub
sbb
dec
cmc
dec
xor
sub
rorb
rclb
ss
cmpsb
icebp
inc
jbe
cmpsb
jecxz
xchg
mov
mov
mov
mov
push
adc
gs
push
andb
jne
dec
pushf
inc
and
jl
ret
xor
xlat
mov
test
xchg
or
xchg
cld
push
push
inc
cmp
lea
fcmovne
add
mov
fistpl
push
sarb
sub
leave
jl
fiaddl
adc
push
enter
or
cmpl
mov
mov
cmc
inc
cmpsl
ds
enter
repz
pushf
int3
pop
or
pavgb
sbb
clc
and
mov
enter
ret
insl
dec
out
rcr
mov
mov
stos
push
rcrb
inc
cmp
popa
data16
aas
inc
add
stos
push
xor
dec
pop
and
pop
push
add
jl
sbb
scas
addl
rclb
bound
mov
rclb
mov
and
aaa
jo
lcall
jle
sbb
or
test
jne
addr16
adc
movsb
orb
push
mov
xor
mov
pop
fmul
dec
js
cmpsl
adc
outsb
mov
mov
loopne
xor
lahf
hlt
inc
add
in
and
hlt
cmp
pop
xor
add
mov
push
in
pop
ret
cmc
cli
cmp
fcmovnb
clc
insl
cwtl
shrb
cmp
push
jge
addb
nop
jg
pop
add
inc
cld
lods
inc
outsl
nop
add
push
std
dec
dec
mov
bound
mov
int3
fiaddl
pop
clc
mov
mov
scas
clc
dec
jmp
xchg
pop
push
movb
in
lds
inc
push
es
inc
popf
andl
push
mov
sub
xchg
pushf
decl
loopne
inc
jno
daa
pop
inc
fadds
movsb
stos
xchg
sbb
andb
push
jo
adcl
outsl
lcall
mov
xchg
xor
add
mov
mov
mov
add
mov
and
cli
xorl
jo
or
popf
and
insl
mov
xor
mov
xchg
movsb
pop
fisttps
sbb
push
sbb
sbb
add
hlt
push
adc
test
lods
push
push
add
cltd
inc
push
mov
popf
test
pop
test
jmp
mov
mov
xor
add
add
jl
sub
ljmp
fldenv
ret
or
dec
sub
inc
jg
xchg
aas
stos
jle
sub
inc
das
fwait
and
mov
inc
and
adc
cmp
aaa
or
sub
lods
sbb
xchg
adc
ret
ljmp
sti
in
orb
xor
rcrl
cmp
mov
and
and
adc
pop
add
mov
mov
jp
dec
xor
fisttpll
push
dec
roll
push
sahf
inc
lcall
or
xchg
lcall
push
loope
sub
jno
push
xchg
out
lret
or
insl
fnstsw
pop
or
xor
les
mov
test
mov
or
add
push
mov
les
xchg
cltd
js
shll
rorb
loopne
dec
add
jae
push
jmp
pop
mov
clc
sbb
int3
icebp
lods
je
cmp
or
push
and
pop
div
cli
dec
call
pop
sub
hlt
jns
call
push
cmp
mov
add
sarb
iret
rolb
sub
jle
rcrb
fmull
out
jns
loope
lock
rorb
push
dec
sbb
or
jne
loop
lcall
jg
mov
inc
push
dec
hlt
push
and
mov
push
sahf
xchg
sbb
add
mov
sub
dec
in
lods
mov
sbb
lock
push
lock
inc
imul
clc
pushl
sbb
mov
nop
push
inc
mov
mov
aaa
addr16
cwtl
push
ret
popa
push
sbb
and
scas
mov
xchg
push
movsb
int3
faddl
cli
cmp
fwait
jecxz
or
insb
mov
aad
mov
sbb
xchg
insb
jnp
pop
sbb
dec
xorl
addl
adc
fwait
test
inc
xor
sbb
cmp
xor
pop
cmpsb
lock
leave
sub
pop
adc
jb
dec
aad
aas
std
xchg
push
mov
jmp
and
flds
mov
mov
push
sub
insb
test
ljmp
jle
nop
sbb
add
sub
mov
jecxz
dec
inc
push
inc
dec
lcall
xchg
lods
xchg
shrl
mov
sub
test
andb
mov
xor
ss
insb
add
cmp
mov
mov
xor
push
incb
ss
sti
das
das
mov
pop
out
pop
or
sub
ds
adcb
pop
mov
mov
adc
jl
or
cmp
lock
inc
pop
cli
add
jmp
add
clc
sbb
test
loopne
push
lahf
jle
xchg
lods
and
gs
sbbb
cmpsl
sbb
xchg
cwtl
jmp
mov
adc
ret
adc
dec
xor
fidivs
adc
mov
add
pop
adc
xor
dec
sub
das
push
fs
pop
dec
jl
aaa
loop
outsl
lods
or
add
pop
or
push
sbbb
ljmp
mov
pushf
mov
stc
ret
pop
lods
add
das
es
loopne
pop
cmc
xor
cwtl
repnz
out
pop
imul
lock
add
loop
mov
xor
mov
pop
pop
xor
stos
or
shrb
or
in
subl
dec
popf
mov
fisttps
daa
or
mov
xchg
es
es
adc
sub
add
sub
shll
inc
dec
mov
jle
clc
and
in
xor
push
jmp
lcall
mov
cmc
add
cld
cmp
clc
pop
dec
mov
gs
push
call
jge
xchg
out
cmp
daa
mov
call
sti
shlb
mov
pushf
sbb
and
cmpb
inc
or
test
push
insb
mov
cmc
add
cmp
mov
mov
scas
stos
pop
loop
or
out
addb
es
xor
xchg
sbb
lcall
icebp
pop
push
xchg
mov
notl
aad
scas
test
ret
aam
mov
imul
cmp
and
or
fwait
add
divl
inc
lds
sbb
pop
mov
enter
sti
inc
pop
out
addr16
cmpsl
into
out
dec
jg
test
add
mov
jno,pt
or
pop
lcall
jmp
jmp
js
jns
addr16
pop
outsb
sub
mov
add
lea
icebp
sub
test
mov
add
lcall
sbb
push
cmp
mov
jl
sub
or
sbb
sti
add
push
add
pushf
cmpsl
and
loopne
movsl
popa
jg
in
or
clc
adc
add
fdivrs
lods
xor
inc
inc
inc
mov
or
add
sbb
cmp
aaa
loopne
lret
push
mov
inc
adc
dec
popa
xchg
subb
and
call
or
lret
and
cmp
mov
leave
push
inc
sbb
jl
xchg
in
cli
repz
lds
inc
pop
dec
xor
nop
jno
divb
std
ror
lea
dec
mov
mov
adc
js
cli
mov
inc
xchg
jbe
push
cmp
aaa
mov
pusha
or
or
mov
or
test
push
popa
sbb
pusha
inc
ret
dec
cmp
test
sbb
int
imul
jecxz
ljmp
data16
mov
push
lea
pop
or
pop
mov
and
outsl
lock
dec
dec
mov
cmp
push
push
or
push
popa
cld
lahf
aas
hlt
sub
add
into
adc
mov
je
ja
in
and
ja
and
lods
add
pop
mov
cmp
lods
sub
or
push
popa
or
orl
cld
outsb
loopne
push
insb
fsubl
filds
push
ljmp
sbb
mov
pop
pop
jle
mov
ja
lods
xor
and
std
rolb
add
ret
jo
rolb
sbbl
and
push
inc
jbe
std
xchg
jle
xor
xchg
jecxz
add
push
fistl
cwtl
pusha
or
cli
push
adc
jnp
cli
sub
enter
test
shlb
jp
rorl
jb
insl
inc
lods
mov
push
popf
roll
sub
push
pop
push
cmp
out
movsl
dec
pop
or
popa
push
push
lret
dec
mov
fwait
imul
xor
orl
ss
les
pop
out
mov
aas
inc
mov
mov
xchg
xor
cmc
loop
mov
js
inc
push
int3
pop
sub
scas
scas
lret
jp
inc
jbe
fsubrs
js
cmp
pusha
lcall
mov
xor
inc
in
mov
cld
int
nop
or
push
mov
mov
mov
dec
andb
add
jne
cmpsb
add
lock
and
mov
jbe
imul
sub
sub
adc
ret
lds
mov
dec
imul
cmp
sar
xchg
outsb
loope
or
mov
scas
repnz
mov
pop
push
sbb
sahf
call
shl
push
pop
cmp
incb
scas
les
test
cmpsb
bound
push
adc
or
jle
pop
imul
pop
mov
mov
andb
add
imul
in
add
inc
or
lds
inc
fwait
dec
or
fsubs
movsl
mov
dec
fsubs
push
adc
das
fidivrl
inc
adc
jp
icebp
es
test
mov
lcall
sbb
fcomip
loopne
cld
cmp
clc
and
rcrl
mov
mov
or
sbb
jb
cwtl
scas
and
push
mov
daa
daa
int
icebp
mov
sbb
xchg
fimull
mov
or
push
or
fdivrl
add
xor
mov
push
outsl
insl
popa
test
sub
lods
jp
je
sbb
add
sub
loopne
test
addr16
mov
dec
jo
fabs
sub
cwtl
test
stc
add
testl
push
mov
outsl
cli
loop
xor
and
xlat
sub
decb
add
adc
shlb
fwait
out
lds
and
outsl
test
adc
decl
sahf
mov
xor
rol
movsb
dec
aam
xchg
aad
cmc
inc
cmp
rol
jl
mov
and
das
shlb
mov
stos
test
or
xchg
icebp
loopne
fwait
sub
adc
pop
and
mov
sub
cmp
push
lock
mov
xchg
add
pusha
xchg
push
jbe
adc
xchg
or
js
or
insb
sub
pop
mov
mov
insb
lock
in
push
call
std
cmc
push
in
in
out
push
es
add
xchg
inc
hlt
scas
xchg
mov
xor
stos
push
mov
or
mov
dec
cmp
inc
cli
outsl
xchg
or
movsb
xchg
jbe
jg
and
jp
lds
push
jo
add
lds
add
inc
std
inc
je
fldcw
pusha
push
push
std
stos
sbb
and
xchg
sahf
repz
into
add
jo
add
jge
jmp
lcall
aam
loopne
testb
adc
out
aaa
push
add
rolb
das
cld
or
mov
pushf
mov
sahf
ja
arpl
call
adcb
movsb
repnz
mov
scas
inc
dec
fbld
adc
mov
int3
jnp
aaa
jl
ret
fiaddl
test
push
shll
jmp
add
jae
cmc
icebp
pop
jo
sbb
lods
adcl
push
adc
and
cmp
pop
inc
add
sahf
xor
out
aad
loopne
sub
cmp
stos
int3
jecxz
loope
xor
pop
and
je
mov
cwtl
and
pushf
popa
mov
and
das
inc
rclb
add
cmp
sti
mov
jb
push
sti
call
int3
adc
bound
icebp
cmp
pop
inc
dec
mov
mov
pop
testb
flds
sbb
shl
sbb
push
aam
mov
inc
jmp
insl
inc
out
cli
and
cwtl
sub
dec
jg
mov
mov
mov
scas
lcall
mov
xor
clc
mull
jge
int
imul
sti
jp
ds
lea
jge
mov
clc
or
push
xlat
push
addl
in
push
and
pop
inc
and
movb
in
mov
sub
pop
jp
cli
cmp
xor
cmp
je
stos
mov
inc
push
pusha
divb
ret
add
daa
or
inc
mov
inc
mov
hlt
and
add
outsb
and
jno
fsts
fdivr
movl
nop
fldenv
shll
jmp
movl
in
jnp
add
loop
cli
pop
sbb
and
push
cmc
mov
sub
jl
sub
dec
mov
lret
lcall
or
or
clc
aam
fisubs
or
pop
inc
add
lcall
je
pop
ss
add
jp
mov
inc
lods
push
rolb
rolb
out
xchg
mov
mov
sti
dec
js
popl
pop
mov
ret
aad
lcall
aam
fcompl
dec
pop
xchg
xchg
les
mov
or
sub
push
mov
adc
xlat
lock
adc
jp
sub
dec
enter
bound
fdivr
adc
add
or
imul
mull
js
mov
pop
icebp
push
sbb
add
inc
pop
mull
jns
movsb
and
or
movsb
cwtl
adc
sub
pop
sub
inc
add
lds
testl
xchg
cmpsl
fstps
call
jle
push
lcall
mov
sub
ret
fadds
std
jo
hlt
leave
hlt
popa
mov
or
andb
add
call
dec
call
test
scas
xchg
setg
mov
out
xor
dec
and
cmova
add
inc
mov
out
add
sbb
fs
sbb
xor
sahf
icebp
jae
outsb
jne
repnz
stos
mov
dec
sub
push
subb
fsubl
add
cmp
push
push
fildl
js
inc
repz
incl
nop
mov
dec
repz
xlat
jnp
in
rcrb
and
inc
xor
push
std
push
push
sub
or
xor
pop
ret
mov
outsl
mov
cmp
or
cld
add
ret
cmp
jne
xchg
sbb
call
dec
xchg
or
dec
mov
mov
adc
cmpsl
hlt
sub
lcall
lods
mov
pop
pop
iret
test
push
scas
je
xchg
sbb
push
jo
jle
cmpsl
ljmp
rorb
mov
xorl
mov
jbe
test
adc
add
inc
or
cmp
sti
mov
fldt
clc
adc
out
sahf
shl
xchg
inc
packssdw
ret
pop
scas
jle
popl
std
mov
scas
sub
lcall
rcr
lds
jp
out
jne
out
dec
adc
mov
add
adc
loop
push
mov
dec
xchg
and
mov
sbb
cmpsl
fimuls
aam
jae
pop
inc
add
rcrl
cltd
push
adc
mov
push
or
test
fbstp
mov
inc
push
dec
mov
or
sub
add
arpl
sub
mul
cmp
lea
adc
jbe
aaa
dec
sub
imul
std
imul
pop
mov
push
clc
push
adc
cmc
lods
dec
stos
test
mov
push
mov
dec
lcall
cmp
push
outsl
mov
dec
sub
js
jo
mov
mov
das
sub
mov
or
and
mov
fyl2x
mov
cmp
xor
js
ds
pop
cmp
in
icebp
dec
ret
jmp
packssdw
push
and
jb
mov
hlt
pop
xchg
cli
adc
mov
mov
adc
pop
cmp
pop
push
dec
lock
ljmp
and
ret
mov
adc
mov
std
mov
add
add
jo
push
or
sbb
or
andl
aad
cmp
push
scas
or
jmp
mov
hlt
das
fsubrs
pop
push
lret
cmp
mov
push
test
sub
jmp
lds
mov
mov
add
aad
adc
shl
sub
lock
push
dec
out
in
cli
xor
and
add
sub
jne
push
out
movsb
aaa
enter
add
rcrl
xchg
jne
mov
ds
inc
xchg
aad
push
out
in
cmpsl
add
cmc
stos
adc
add
sbb
xchg
mov
loope
roll
xchg
rorb
jge
mov
test
cmp
push
cmp
or
lock
adc
add
xchg
adc
lret
mov
pop
sbb
mov
mov
les
push
inc
mov
decl
xor
out
js
orl
pop
sub
in
movsl
arpl
dec
pop
aam
ja
addr16
rcr
das
or
enter
aad
inc
nop
xor
mov
push
cli
aam
inc
movsl
or
ljmp
xor
call
jp
aad
xor
faddl
aad
pop
mov
mov
jo
shrl
aas
ret
scas
push
dec
and
sbb
mov
lcall
push
lea
cltd
add
add
fdivl
repz
movsb
xchg
xchg
rclb
jecxz
mov
inc
dec
or
sbb
outsl
std
fimuls
sbb
dec
ret
cmc
add
dec
push
mov
sbb
in
call
icebp
jo
icebp
cmp
dec
cmp
push
add
push
rcl
xor
test
loop
push
mov
cmp
mov
xor
xlat
scas
sarl
aam
fwait
js
ds
xchg
push
scas
nop
fnstcw
pushf
movsl
jecxz
mov
mov
xchg
jl
xchg
lds
ljmp
nop
orl
pop
lods
ret
pop
subb
mov
movsl
fistl
mov
arpl
and
lock
into
rcll
or
jne
mov
rorb
add
sbb
push
mov
inc
sbbl
or
or
lret
sbb
dec
gs
adc
mov
mov
bound
mov
xor
sbb
adc
fdivp
addr16
scas
cs
mov
cmc
movsl
sbb
ret
lahf
xor
cs
insl
adc
jecxz
xor
dec
jl
and
imul
cmp
cmp
inc
jbe
adc
xchg
xchg
mov
add
inc
mov
fsubs
arpl
iret
test
loopne
mov
push
icebp
jne
xor
mov
in
pop
test
in
or
aas
or
repz
cmc
jecxz
ret
inc
xlat
and
and
icebp
and
cmc
aam
cmp
test
pushf
ljmp
ja
jbe
jae
pop
push
sub
sbb
cld
mov
cmp
sub
call
rorb
ljmp
dec
jae
push
jecxz
ja
mov
mov
push
jns
and
ret
cmc
mov
shr
cwtl
xchg
nop
mov
mov
dec
cld
ret
rclb
jl
add
jno
mov
add
or
cmpsb
push
or
and
roll
test
ja
icebp
shlb
insl
sahf
inc
filds
imul
rcl
rolb
jae
mov
cmpb
lods
test
add
ret
fmuls
pop
rolb
iret
mov
pop
js
lcall
push
mov
int3
cmpsb
inc
andl
sub
sub
and
loopne
and
push
cs
push
add
lret
inc
lock
dec
flds
sbb
inc
and
mov
push
test
mov
push
into
sahf
sbb
dec
aas
or
in
stos
out
or
xor
cmc
adc
mov
inc
mov
jle
pop
sahf
pop
mov
and
mov
adc
xor
sbb
and
add
mov
stc
adc
lds
cmp
pop
je
andl
fstpt
mov
cmp
add
aad
sub
dec
xchg
or
cmp
scas
js
cmpsl
mov
ljmp
push
out
dec
inc
cmpsb
in
dec
mov
out
and
dec
add
lret
or
sub
pushf
lret
cmpsl
scas
and
sbb
xchg
mov
les
inc
js
lcall
outsl
xchg
testl
test
or
push
jae
fisttpl
ret
ds
mov
push
inc
cmp
inc
pop
cmp
dec
xchg
out
jmp
das
adc
push
psubusb
sub
adc
sbb
out
jge
jo
cmpsb
mov
mov
sub
sbb
push
cld
pop
ret
mov
adc
adc
fst
xor
inc
dec
dec
lea
repz
sarb
sbb
pop
jp
inc
push
sbb
mov
jle
xor
rcll
or
or
cmp
pusha
inc
push
out
jl
leave
clc
add
dec
iret
cmpsb
jl
mov
mov
sub
mov
cmp
lea
mov
push
inc
xor
pop
sahf
or
inc
fisubl
mov
jmp
dec
ljmp
test
push
inc
call
or
stos
lret
and
out
add
mov
pop
dec
mov
rorl
mov
jge
adc
pop
jo
dec
xchg
dec
shll
mov
ds
scas
adc
das
fcompl
xor
sbb
jns
xor
js
ret
mov
imul
jne
es
cmp
sub
idivb
sub
xchg
dec
adc
pop
push
data16
jecxz
push
scas
xchg
xor
jmp
lock
xor
sbb
sahf
sub
stos
push
hlt
sbb
mov
std
xlat
movsb
mov
add
cld
and
adc
mov
sbb
xchg
rcrl
lret
jmp
inc
sub
enter
addb
push
call
pop
sub
out
xor
mov
scas
fidivrl
je
dec
pop
bound
pop
pusha
test
inc
ds
ds
xchg
jbe
insb
or
jb
dec
mov
mov
rcr
cmp
insl
adc
rorl
xor
stos
stos
stos
add
xchg
sbb
fs
loope
xchg
ss
lcall
mov
int
push
or
cli
loopne
lock
mov
in
cmp
cld
mov
loope
or
mov
mov
ficompl
aam
sbb
incl
sub
das
test
rorb
dec
pop
out
push
aaa
sub
jbe
adc
jp
lahf
les
cmpsl
push
cmp
pop
das
push
mov
jo
int3
jno
xor
sti
cmp
sbb
mov
dec
inc
dec
cwtl
mov
lcall
dec
jle
lock
ret
add
std
add
pop
jle
aas
mov
inc
push
scas
jo
mov
jbe
outsb
xchg
push
adc
and
out
adc
rcrb
sub
lcall
pop
lret
sbb
subl
shlb
fistpl
fsubs
repz
push
test
shld
and
in
pusha
push
mov
push
mov
addl
xor
pop
xchg
push
jl
jns
pusha
mov
daa
enter
or
movsl
jo
popf
int3
sub
lcall
ss
push
gs
leave
xchg
aas
push
mov
sub
stos
aam
lds
imul
mov
pop
test
lock
cmp
cs
pop
iret
push
cmp
push
aas
and
push
dec
dec
xchg
fiadds
push
lods
mov
adc
mov
pushl
xchg
das
xor
popa
movsb
movsl
add
in
mov
jns
jmp
add
and
add
pop
pop
pop
test
jl
dec
xor
stos
js
nop
add
lock
into
loopne
movsl
pop
inc
std
pop
push
cmpsl
inc
jo
movsb
pop
adc
or
dec
aas
enter
sarl
rolb
pop
stc
inc
in
insl
imul
sub
scas
mov
sbb
outsb
mov
cs
repnz
inc
pop
and
nop
push
add
jecxz
popf
mov
mov
push
jecxz
and
mov
xorb
loope
in
je
and
pop
in
imul
xor
cs
ret
sub
add
xchg
push
cs
sti
mov
out
mov
xchg
mov
add
bound
test
icebp
shlb
add
and
xchg
lea
std
push
int
jl
je
cld
inc
addl
insb
pusha
push
clc
orb
aas
pop
fwait
jo
jge
add
mov
ficomps
fsubrs
pop
outsl
les
dec
inc
inc
cmpsb
push
sub
rorl
cmp
fidivs
xchg
sbb
repz
mov
dec
aam
into
ret
les
mov
mov
push
andl
adc
lods
pop
call
xchg
push
stos
sub
pop
sti
mov
ljmp
mov
div
inc
or
pushf
jl
xchg
fbstp
pusha
add
jo
xorb
ja
aaa
je
sbb
clc
call
rolb
mov
xchg
pop
mov
cmp
push
cmp
int3
js
stos
lock
ds
loopne
ljmp
mov
push
in
mov
fstpt
call
cmp
add
push
mov
es
jl
clc
xor
sti
jno
pusha
inc
push
sti
jo
in
adc
lods
lcall
pop
inc
fwait
lock
adc
mov
rcl
lods
mov
inc
mov
outsl
dec
sarb
adc
xlat
fisttps
jmp
dec
and
add
and
or
jb
in
pop
inc
jg
mov
movsl
jecxz
xor
jle
xchg
pop
repz
mov
cmp
cmp
dec
cmp
js
ljmp
sbb
in
test
mov
das
and
inc
in
pop
xchg
dec
shr
add
adcb
and
das
js
ja
ds
jno
add
ljmp
mov
adc
pushl
inc
popa
cs
inc
daa
dec
in
fldenv
and
inc
mov
adc
lahf
or
xchg
sbb
pop
lahf
stos
mov
push
push
mov
push
sbb
jl
aam
sbbb
sub
out
inc
std
dec
dec
or
sbb
adcb
sbb
sub
xor
fdivr
les
gs
cwtl
mov
out
pop
jl
jno
dec
sbb
sub
data16
jnp
xchg
pop
loope
push
nop
push
xchg
icebp
jg
pop
loop
ss
add
mov
push
sub
or
loopne
test
mov
or
mov
hlt
sbb
xchg
inc
out
sub
rcr
gs
aaa
push
cmp
cmp
popa
movsb
in
mov
cmp
sub
and
in
mov
mov
mov
sub
sub
decl
pop
cmpsb
movaps
cmp
mov
pop
ss
stos
xchg
dec
rcll
lods
xchg
pop
xor
cmc
scas
scas
sarb
xor
and
xchg
sub
pop
mov
and
or
loop
call
sahf
sbb
lock
and
orb
in
push
cld
adc
add
inc
ret
cmovb
mov
sub
test
jo
sub
hlt
cwtl
and
add
inc
in
mov
rolb
push
xchg
or
dec
stc
in
xorl
or
pop
or
aas
dec
jo
in
mov
adc
lods
loopne
and
inc
pop
dec
lea
xchg
jbe
push
test
lods
pop
dec
jno
xchg
jmp
sar
int3
fmull
imul
inc
roll
push
fildl
inc
inc
arpl
add
bound
pusha
add
std
mov
and
mov
sub
lcall
lea
int3
loop
mov
or
jp
mov
call
sbbl
loop
push
arpl
aas
loop
jecxz
icebp
pop
das
ret
jle
sahf
mov
sbb
mov
xchg
sub
push
push
inc
roll
jnp
dec
pusha
adc
loop
adc
cmpsb
sbb
and
sti
sarb
push
fucomp
fdivp
xchg
shlb
je
cmpsl
mov
mov
aas
push
mov
mov
inc
push
rorl
inc
xor
xor
push
ret
aaa
movsl
jp
int
add
pop
repnz
outsb
sub
enter
pop
adc
dec
int
andb
pop
addr16
aas
sub
pusha
dec
mov
xchg
mov
jbe
fwait
cmc
ret
xor
cmp
cmp
push
idivl
add
repnz
testb
pushf
sbb
mov
inc
or
or
data16
mov
push
ja
mov
xchg
adcb
or
jle
jns
and
sbb
out
xorl
roll
mov
jmp
fisubl
xchg
mov
mov
push
jp
add
inc
jno
lock
pusha
mov
fcomp
push
ss
fucomi
sar
scas
or
cwtl
enter
movl
xchg
and
rcrl
or
jp
cmpsl
rorb
out
pop
or
stc
mov
inc
dec
add
adc
mov
push
aas
jnp
push
add
cli
dec
pop
jecxz
jp
fsubs
pop
and
xchg
xchg
fnstsw
and
or
xor
cmp
cli
insb
push
pop
xchg
imul
inc
cli
mov
lret
mov
pop
lods
inc
movsb
filds
jge
xchg
push
and
aaa
call
xchg
jo
jle
shlb
rorl
dec
fcoms
or
dec
sub
sbbb
sbb
lcall
dec
dec
mov
or
jl
lret
sub
add
pop
bound
mov
mov
cs
divl
push
fs
insl
pop
lea
rcr
je
fimull
js
dec
mov
and
aas
mov
mov
shll
mov
lcall
pop
xchg
add
add
in
pop
ud0
mov
mov
jmp
xor
push
lea
dec
sbb
add
hlt
jne
pop
shll
and
call
push
jecxz
jmp
pusha
popa
or
xchg
xchg
pop
xor
fisttps
mov
push
in
testb
adc
test
roll
dec
xchg
les
adc
add
add
xor
outsb
ficoms
lods
xor
add
fwait
jbe
test
adc
cmc
lods
or
out
pop
test
push
adc
add
mov
mov
sub
add
pop
je
and
mov
cmp
nop
jg
movsb
push
adc
xchg
push
lock
aaa
pop
xchg
add
pop
out
and
add
rclb
mov
fwait
bound
out
mov
xor
decb
push
push
mov
mov
mov
or
dec
jmp
je
adc
js
in
scas
pushl
jg
xchg
rcl
repz
subl
in
lcall
sahf
aam
sbb
jp
aas
ljmp
pop
pop
iret
sbb
std
jnp
jb
jnp
push
adc
cmc
add
fcompl
push
js
adc
dec
adc
dec
decl
dec
adc
mov
call
mov
loope
ljmp
mov
test
clc
lahf
aam
in
sbb
rorb
loopne
cmp
testb
push
mov
push
sbb
xchg
dec
and
pop
mov
insb
lock
fwait
fwait
jle
adc
in
loope
incb
mov
lods
pop
xor
fwait
or
sub
loopne
ds
andnps
sbb
fsubrs
jg
xchg
pop
mov
bound
pop
add
pop
insb
cli
into
fcmovnb
shr
xor
repnz
rcrb
adc
clc
test
filds
cmp
push
movl
fisubrs
js
lds
fdivrs
adc
sub
sub
inc
addb
adc
js
nop
scas
add
and
faddl
xchg
mov
lahf
inc
out
add
jge
rorb
insl
icebp
mov
ret
add
mov
arpl
pop
stos
pop
cli
clc
cmp
aaa
testl
add
f2xm1
mov
or
data16
inc
aam
xchg
incb
lock
notb
dec
push
push
cli
push
out
cmp
popf
rolb
mov
cmp
lds
mov
lods
mov
js
push
xchg
bound
call
add
push
xchg
into
pop
addr16
push
xor
loope
push
out
rcll
push
lea
jl
fcmovnbe
lcall
leave
dec
push
xchg
test
rorb
and
xchg
je
sbb
adc
mov
jle
or
cmp
jle
je
xor
mov
in
jnp
mov
push
mov
push
and
faddp
sbb
fsubl
push
fs
shll
insb
imul
scas
xor
fucomi
adc
loopne
mov
lahf
cmp
jl
mov
push
sub
daa
and
pop
mov
push
or
mov
lods
in
idiv
cmpsb
sbb
mov
in
fdivs
add
xor
mov
xchg
jp
sub
and
jmp
and
loope
popa
pusha
outsb
add
push
pop
and
into
ss
mov
nop
xor
flds
das
fdiv
pop
push
das
imul
sarl
push
outsb
push
inc
bound
fildll
fsubs
dec
jecxz
js
push
pop
mov
shll
aam
mov
incl
sbb
add
gs
sub
pop
xor
lods
inc
jl
ret
xor
shlb
xchg
pop
cs
mov
insb
mov
ss
ficompl
outsl
scas
pop
ds
add
add
loopne
jmp
adc
jg
movsb
pop
roll
mov
insb
dec
fisubs
shlb
sbb
push
loopne
aas
mov
sbb
adc
push
insl
mov
mov
dec
std
lea
mov
pop
cmp
in
repz
pop
sbb
pop
pop
and
or
fsubl
xchg
jmp
call
push
sub
incb
lock
mov
movsb
incb
ret
jg
adcl
xchg
test
and
jmp
fnstcw
mov
push
inc
mov
xlat
adc
sbb
and
int
daa
mov
jo
ljmp
sub
add
outsb
testl
lods
pop
jmp
cwtl
adc
icebp
imul
fisubrs
rcrb
leave
jp
orb
inc
out
cld
clc
mov
mov
and
cs
mov
or
ret
pop
enter
and
stos
sbb
jo
jns
fdivrl
mov
test
cwtl
pop
and
mov
jecxz
jg
adc
pusha
js
rcll
dec
and
lods
enter
lcall
add
xchg
pop
jl
pop
aad
imull
popa
mov
rcrl
mov
inc
loopne
leave
jns
mov
and
or
clc
fdivl
das
add
test
mov
cmp
jl
mov
or
nop
filds
ds
or
xchg
mov
inc
mov
and
cli
in
sub
xchg
lahf
ja
js
test
pop
push
fmulp
mov
mov
lds
out
out
mov
ret
push
xor
sahf
sub
adc
inc
iret
push
xor
pop
jne
jmp
insb
mov
fsts
cmp
fmuls
or
ss
scas
jecxz
test
or
je
jae
push
push
push
xchg
jo
xor
ret
push
mov
out
aad
sbb
lock
movsl
ja
pop
dec
stc
inc
lds
inc
dec
push
divl
test
ljmp
or
les
sub
or
lock
mov
shlb
loopne
dec
sbbb
out
data16
frstor
and
cmp
add
mov
sub
and
cmp
test
sub
push
xlat
fdivs
out
inc
add
lods
cli
movsl
hlt
jecxz
mov
dec
xchg
sahf
shlb
sub
xchg
enter
mov
and
int
add
dec
xchg
cmpsb
aam
cmc
xor
mov
jne
dec
xor
rolb
cmpsl
dec
cmp
fsubrl
sub
test
js
sti
mov
add
fwait
cmp
loopne
adc
jbe
pop
xor
push
loopne
jo
sti
bound
insb
jns
pop
ds
add
push
movsb
cmpl
jbe
adc
dec
cltd
jp
mov
sahf
push
mov
push
mov
mov
ret
inc
push
push
pop
lods
icebp
andl
in
dec
lea
adc
dec
sbb
aaa
or
jae
pop
popf
xor
add
and
sahf
fimull
xor
in
xchg
fidivs
pop
mov
push
push
sub
test
fdivp
ss
imul
sbb
cmp
loopne
movsb
and
pop
cmp
call
jge
outsl
push
stos
push
mov
inc
add
push
push
cmpb
popa
mov
push
xchg
add
icebp
push
push
adc
pusha
ret
fnstsw
orb
mov
dec
fwait
sbb
addr16
inc
pushf
pusha
add
sahf
in
rorb
hlt
push
dec
mov
orl
dec
out
nop
stos
mov
lock
add
xor
adc
or
add
and
call
cld
xchg
add
mov
or
dec
or
push
nop
adc
push
shll
sbb
test
jbe
push
xor
movsl
cli
push
pop
add
xchg
nop
nop
leave
or
cs
sub
xor
mov
stos
cmpsb
or
js
mov
enter
xchg
cs
push
mov
aam
adc
mov
in
mov
cmp
sub
cmp
shll
jmp
aas
cmp
test
rolb
pop
jl
scas
add
or
push
jnp
mov
sbb
adc
pop
in
int
insb
or
mov
xchg
add
inc
cwtl
push
sar
jmp
sbb
or
mov
aas
cmp
sub
pushl
ds
jo
mov
daa
ss
rcl
adc
pop
out
push
testb
pop
sbb
jge
xor
sti
jo
mov
in
into
push
jae
push
and
push
pop
stos
xchg
lods
test
push
sbb
outsl
mov
nop
mov
xor
and
pop
xchg
mov
dec
dec
hlt
sub
and
mov
xor
cmp
pushf
xchg
movsb
xchg
add
pop
or
hlt
add
dec
or
data16
outsb
jnp
and
mov
mov
scas
sub
adc
std
test
loopne
js
xor
pusha
jp
cmpsb
outsl
or
push
mov
jg
or
rol
dec
sarl
xor
insb
mov
xchg
loop
lea
stos
push
push
mov
push
ret
push
ret
push
cmp
xchg
and
les
xchg
sub
in
jmp
xchg
adc
dec
push
loope
sahf
shl
in
decl
lock
sub
add
pop
aas
fs
icebp
lea
jg
test
sub
jp
or
inc
hlt
hlt
add
fimuls
push
sbb
shlb
das
test
and
and
and
nop
sub
fcoms
sbb
loop
hlt
inc
insl
and
repnz
ljmp
imul
int
sbb
pop
addr16
ss
data16
popa
mov
jmp
movsl
inc
and
popa
adc
jmp
test
sub
out
in
xchg
test
lods
push
sbb
xlat
outsb
inc
sub
jge
jae,pt
or
mov
inc
addr16
ja
inc
loop
dec
mov
inc
fcoms
cmp
fdiv
jnp
mov
shrb
jo
ficompl
fmuls
rorl
or
or
imul
dec
xchg
pop
dec
mov
pop
and
lods
push
mov
jl
ds
jl
add
and
fsubl
nop
xlat
aam
psubsb
add
das
xor
dec
pop
xchg
adc
dec
popf
adcl
clc
adc
mov
add
aaa
xchg
push
and
mov
mov
mov
adc
out
add
bound
add
jns
inc
mov
enter
push
mov
mov
dec
xor
inc
out
test
add
jmp
add
dec
pusha
mov
in
rorb
or
jmp
mov
mov
out
pop
mov
mov
xor
add
ljmp
or
jnp
jmp
insl
dec
fimull
ss
pop
mov
push
mov
pop
xorb
add
and
mov
andb
xchg
pop
adc
mov
loopne
filds
pop
loop
aam
inc
add
jg
fwait
outsb
jbe
mov
adc
cmp
mov
aad
dec
push
push
outsb
cmp
daa
xor
mov
sbb
mov
xchg
and
repz
aaa
inc
fidivrl
sbb
jecxz
or
pop
sub
mov
incb
add
lods
pop
dec
add
dec
ss
call
data16
loopne
jl
pop
push
mov
adc
xor
cmp
jo
cmpsb
dec
inc
push
jnp
orl
push
jbe
adc
ljmp
push
sbb
ret
lahf
rolb
sar
fwait
aas
mov
jne
cmp
mov
repz
movsl
inc
clc
mov
into
cli
loopne
xlat
cmpsb
ljmp
add
jae
and
loopne
mov
fs
or
sbb
push
xor
push
hlt
aas
test
push
loop
jmp
scas
and
xor
adc
adc
xor
inc
and
xchg
mov
push
pop
and
enter
xchg
push
or
test
or
add
lock
clc
adc
pusha
ja
dec
es
icebp
or
cs
or
mov
scas
lds
negb
hlt
sub
dec
inc
cmpsb
sub
icebp
stos
add
js
rcr
push
mov
jns
sub
lea
adc
xchg
cmp
fcomps
roll
jns
mov
mov
addr16
rorl
inc
outsl
push
push
rcll
sbb
mov
aad
aaa
xchg
in
iret
fcmovnbe
mov
cmp
and
inc
cmp
int
xor
mov
movsb
xchg
lcall
push
add
sbb
xchg
nop
movsl
loope
or
ss
mov
jbe
adc
lcall
clc
loope
mov
dec
push
fnsave
push
in
xorb
dec
sbb
dec
xor
clc
mov
loopne
hlt
pop
ret
and
jge
or
fwait
mov
leave
scas
pop
adc
call
cmc
add
jmp
adc
ljmp
xor
fidivl
out
xor
test
mov
inc
cmp
dec
and
cmp
pop
sbb
bound
jge
mov
push
mov
xor
inc
in
mov
icebp
lret
hlt
mov
dec
mov
mov
lds
cmp
pop
mov
aas
rorl
push
out
stos
mov
inc
xchg
iret
lods
div
cli
test
lds
push
jo
or
jno
inc
movsb
int
pop
inc
and
insb
xchg
sub
sub
daa
fs
ficompl
adc
sbb
sbb
or
push
sub
sbb
fimuls
call
enter
shlb
repnz
xchg
es
imul
mov
cmp
imul
push
mov
adc
jo
xchg
cli
sbb
bound
sti
jo
scas
sub
push
daa
cmpb
push
xor
sbb
mov
out
or
pop
xchg
push
je
and
mov
je
dec
out
js
inc
push
push
clc
cmp
test
sub
and
test
adc
or
ret
addr16
add
lock
mov
cmc
data16
pop
push
dec
xchg
or
daa
jno
mov
iret
add
push
jmp
idivb
inc
mov
mov
sbbl
sub
pop
je
push
cwtl
or
clc
jmp
imul
ret
jbe
lock
loopne
rcrb
imul
dec
inc
push
push
add
in
nop
js
mov
roll
shrb
cmp
jle
inc
inc
or
addr16
or
mov
fwait
mov
ficoml
xor
xor
inc
subb
jp
icebp
push
mov
or
push
cld
lahf
adc
incb
pusha
add
jo
cmpb
scas
pop
divl
mov
cmp
push
xor
repz
pushf
mov
jns
push
cs
adc
cld
fsubrl
negl
inc
push
push
sub
push
mov
test
pop
movl
jl
test
dec
loop
test
mov
insb
inc
add
sub
pushl
insb
lahf
mov
addl
fisubl
test
addl
sub
rolb
subl
push
or
jb
mov
jbe
mov
cld
lds
jecxz
cmpl
outsb
push
and
in
data16
adc
jle
mov
sbb
pop
mov
jecxz
add
adc
cmp
adc
jne
and
add
add
gs
jp
lcall
ds
jne
adcb
cld
and
xchg
adc
xchg
inc
es
cmp
push
push
dec
cltd
shll
aad
push
xor
jns
and
pop
jno
mov
or
mov
and
mov
shl
das
mov
jmp
lret
arpl
fdivr
sbb
cld
scas
or
jmp
lock
mov
and
pop
cmp
or
mov
add
sbb
pop
push
xabort
xor
adc
pop
mov
xchg
jbe
inc
in
jbe
int3
pop
xor
fidivrs
div
into
ret
adc
pop
fwait
mov
sbb
sbb
shll
xor
in
push
pop
mov
mov
les
icebp
xchg
daa
testb
mov
dec
lds
xor
mov
and
fdivr
jmp
je
push
aas
jae
js
mov
xlat
loopne
dec
jnp
inc
test
bound
sub
sbb
shrb
pop
jl
lock
xchg
mov
sub
push
int
mov
sub
dec
out
je
push
les
push
jle
inc
sbb
sbb
ret
in
fldenv
dec
dec
mov
jb
std
adc
ret
mov
dec
rorb
cmp
scas
and
push
mov
loop
sub
ja
fsubs
cmpsb
nop
or
mov
xchg
mov
shr
mov
das
xchg
push
xchg
fnsave
scas
push
xchg
mov
jns
add
adc
cmp
sub
ljmp
mov
push
xor
push
sti
add
lea
jae
cmp
fdivp
xchg
sbb
add
ret
ret
or
inc
jns
int3
cmp
and
dec
mov
sbb
daa
ret
sbb
mov
je,pn
mov
icebp
stos
inc
mov
cld
sbb
lods
mov
jg
xchg
xor
rcrb
pop
xor
fistl
leave
je
xchg
mov
sub
push
das
push
xor
stos
std
test
push
das
mov
fcomp
sub
inc
add
inc
cmp
arpl
lea
loopne
aam
pop
cltd
and
pop
add
mov
insb
inc
add
mov
adc
aas
sbb
mov
pushf
jns
js
test
or
cmp
xor
pop
mov
imul
mov
lods
fprem
aas
mov
in
cmp
mov
cmp
pop
jge
test
ja
adc
sub
arpl
mov
pop
mov
xor
dec
jno
pop
or
inc
and
icebp
mov
fsubs
sub
andl
push
lret
negb
or
inc
xchg
pop
and
pop
rcl
bound
mov
shr
or
add
push
inc
nop
clc
lods
pop
leave
je
movsb
inc
arpl
pop
push
and
dec
jne
pop
out
or
cltd
adc
loop
ss
cmp
fimull
insl
cld
xchg
lret
and
dec
aam
adc
subl
pop
cmp
shl
mov
mov
or
mov
mov
jo
sbb
add
rcrb
in
mov
outsb
add
mov
push
insb
loope
mov
xchg
and
mov
gs
imul
sub
ret
cmp
sub
shl
pusha
iret
mov
ficompl
or
movsb
or
jae
cld
or
push
push
mov
rcl
pop
adc
or
push
sbb
push
cmp
int
icebp
mov
dec
gs
lahf
xchg
mov
ret
mov
scas
xchg
fildl
addl
mov
loop
sbb
sbbb
mov
mov
insl
add
dec
fisubrl
and
js
lods
sub
or
push
inc
jmp
mov
ja
aad
cmpsl
push
sbb
mov
xor
icebp
scas
mov
in
push
fldl
roll
clc
lret
mov
mov
xor
orb
dec
dec
push
call
sarl
nop
add
push
aam
and
push
cmp
fdivrl
mov
clc
jl
xchg
movsl
mov
cwtl
xor
loop
ja
sbb
sbbb
dec
or
pop
ja
sub
enter
enter
push
add
stc
mov
pandn
mul
cmp
or
jns
loopne
mov
lds
cmp
mov
insb
add
adc
pusha
cwtl
lods
outsl
inc
xor
mov
in
xchg
add
jno
repnz
or
cltd
iret
scas
adcb
cld
leave
or
mov
add
adc
into
pushaw
stc
mov
cmpsb
or
push
ljmp
jns
mov
out
mov
sbb
pop
jecxz
shl
fdivr
lahf
lret
lds
xor
inc
cmp
xor
icebp
out
sub
jp
daa
pop
stc
sub
push
mov
xchg
cmpl
or
sub
cmp
push
pop
fwait
cmp
sbb
lods
dec
js
push
cs
xor
and
xlat
pop
aaa
sub
or
sbb
ret
into
inc
push
shrl
mov
je
ss
jecxz
inc
mov
rclb
lods
mov
push
loop
cmp
or
inc
addl
adc
fimull
push
lods
cli
js
or
cli
and
sbb
jno
flds
xchg
das
sub
sti
push
lcall
mov
shrb
sbb
push
clc
adcb
aas
fimuls
adcl
lods
fcmovnb
sbb
jl
push
sbb
add
scas
dec
sub
jmp
insl
mov
call
jp
fisubl
fcoml
add
pop
in
dec
dec
xchg
push
icebp
popa
ficomps
or
push
sbb
mov
cmpb
call
fcmove
aam
mov
fld
or
xchg
ficompl
adc
lahf
push
mov
outsl
imul
shr
jecxz
xchg
stos
push
push
rol
ud0
inc
or
pop
or
ljmp
lods
xor
daa
fwait
add
in
repnz
icebp
cmp
adc
jge
mov
int
cmp
std
cmp
cmp
out
repnz
adc
clc
push
inc
inc
push
add
rclb
mov
ja
mov
mov
add
pop
outsl
jg
loopne
shlb
inc
lret
mov
xchg
int
pusha
dec
ret
stos
fcomps
jbe
call
ss
scas
aad
je
fsub
lock
dec
jnp
adc
push
push
out
jae
scas
xor
les
clc
and
and
xchg
pop
push
test
arpl
testl
fidivrs
and
data16
sub
orl
pop
imul
pop
jo
fiadds
insl
stos
mov
mov
test
test
in
jae
sbb
mov
cmp
sub
inc
push
repz
fdivl
cli
add
jne
pop
lahf
add
mov
loop
in
xchg
add
flds
add
ret
repz
pop
pop
xor
mov
dec
or
lea
xor
andb
cmpb
or
js
imul
les
jecxz
mov
cmp
lock
clc
jecxz
scas
std
orl
xor
fs
int
xor
jb
xchg
push
inc
sub
lret
mov
inc
cmpl
inc
insb
jmp
or
inc
ret
sub
lret
incb
movsl
pop
sub
add
das
out
or
and
mov
imul
in
jbe
mov
les
aas
jns
les
incb
add
jb
aas
jnp
adcb
mov
in
and
popa
push
push
rcrb
adc
push
stos
sbb
fcoml
test
adc
xchg
push
and
aam
aas
cmp
xchg
pop
lock
adc
out
lcall
mov
or
xchg
in
sub
test
dec
pop
dec
or
jno
imul
xchg
and
idiv
mov
or
pop
xlat
fidivs
pop
in
jno
push
push
pop
enter
fsubs
movsl
mov
repz
xor
jne
mov
mov
jg
mov
sbb
inc
mov
xchg
lea
mov
dec
arpl
mov
scas
rorb
lods
dec
mov
and
mov
std
mov
lods
dec
push
pop
mov
mov
inc
jge
cmp
mov
bound
mov
jecxz
mov
mov
and
dec
xor
or
mov
mov
push
mov
adc
insb
or
loopne
jbe
push
aam
mov
inc
xor
and
aad
mov
fwait
jl
fildl
jae
pop
and
insb
ss
add
les
mov
xor
loopne
dec
mov
push
dec
incl
cs
insl
call
add
adc
inc
lods
loop
fldcw
sub
loopne
lea
jg
adc
lcall
ljmp
lcall
mov
inc
into
repnz
adc
mov
add
and
rcll
add
pop
insb
sub
shll
mov
cltd
add
sbb
aas
loopne
sub
loopne
fisttps
mov
jl
mov
rcrb
test
sbb
mov
push
scas
es
aas
ss
aad
xor
dec
dec
jp
and
xor
mov
and
repz
or
mov
fadd
in
mov
jecxz
mov
inc
jmp
sbbl
pop
fdivr
xchg
add
pusha
fstl
shlb
push
add
cmp
ja
cmp
les
jmp
pop
or
inc
jecxz
inc
jg
rol
pop
xor
inc
sbb
xchg
stos
push
call
repnz
clc
call
or
cmp
cmp
inc
call
mov
clc
cmc
and
jno
popa
stos
mov
pop
cltd
push
xchg
ljmp
jl
add
daa
jo
call
aas
call
pop
mov
js
in
iret
outsl
cli
jmp
in
adc
mov
dec
test
data16
xchg
fs
cmp
add
push
inc
sti
clc
rcl
dec
nop
mov
aam
mov
xor
or
and
aaa
jl
andl
jmp
mov
jmp
into
and
mov
nop
mov
sbb
pop
cmp
mov
pop
std
jecxz
pop
dec
ss
add
and
mov
mov
ja
loop
sbb
xchg
mov
sub
sti
pop
push
imul
lret
mov
jp
mov
jne
aam
das
sahf
inc
add
sar
jne
push
aad
jae
and
push
aas
xchg
loopne
xchg
or
mov
out
inc
xor
push
rorb
aad
or
jns
xor
in
sbb
pop
or
popf
xchg
and
xor
or
push
stos
loope
lock
rcrb
js
jb
xchg
ret
dec
mov
das
mov
push
adc
mov
mov
inc
or
insl
mov
pop
inc
aaa
mov
aas
pop
pop
frstor
mov
dec
test
xchg
popl
sbb
sti
js
push
mov
subl
cmpsb
or
mov
rclb
sti
add
mov
jbe
pop
clc
sub
push
mov
leave
pop
clc
out
mov
push
mov
or
fcmovbe
ret
cli
mov
cmp
rclb
lahf
xchg
insb
push
sbb
xchg
loopne
outsl
and
and
scas
mov
lahf
addr16
lea
cld
mov
add
dec
jmp
jo
dec
addb
add
shrl
jle
into
ret
out
add
or
stos
sti
and
outsb
sbb
pusha
xlat
mov
adc
xchg
jae
add
popa
adc
mov
cld
scas
lret
sub
cltd
push
push
xchg
arpl
jg
mov
jae
fs
bound
sahf
movsb
enter
and
repz
cmovo
les
stos
cmp
mov
push
jb
and
push
sub
mov
or
aam
in
fistps
mov
std
loope
mov
out
pop
pop
shl
scas
xchg
and
popf
incb
test
sbb
std
cwtl
loopne
inc
or
sbb
cmpsb
sbb
mov
shr
subl
add
mov
push
pop
fcomi
negb
mov
cmp
pop
iret
add
fidivrs
lret
es
xchg
push
stos
rcr
sub
mov
push
add
jecxz
out
rorl
push
or
sbb
xchg
pop
out
add
ljmp
inc
pop
pop
fcomps
adc
loop
cs
int
lock
decl
imul
xor
push
adcb
test
push
mov
dec
lahf
lock
pop
jle
lret
aam
std
scas
test
push
and
sbb
add
call
xchg
hlt
hlt
add
add
shll
cmp
lods
xor
inc
pop
push
fwait
int3
mov
mov
test
loop
clc
mov
mov
pop
mov
push
xchg
mov
dec
dec
loop
jo
jl
push
je
or
pop
cmp
rcl
cld
jmp
dec
dec
and
inc
cld
popa
xor
test
push
mov
add
mov
xor
mov
mov
push
lods
jbe
mov
mov
sub
or
dec
push
nop
loop
add
push
out
aad
jnp
outsb
cmp
das
sub
adc
rcl
jge
push
hlt
jno
push
insb
and
cmp
fwait
roll
and
mov
pop
mov
or
xchg
or
dec
add
mov
mov
xchg
push
pop
daa
aam
lret
cmp
test
in
mov
aad
std
jg
jle
jb
jb
inc
enter
cwtl
add
sbb
popa
xchg
mov
mov
cmp
sub
mov
sub
mov
enter
ljmp
xchg
mov
leave
mov
inc
in
stos
or
pop
outsb
mov
int3
pop
jecxz
cli
leave
leave
mov
pop
mov
add
cld
add
fadd
sahf
pop
cltd
icebp
mov
add
mov
inc
not
jp
and
mov
test
mov
and
mov
sub
pop
add
pop
loope
and
push
sub
mov
movl
or
or
cmpb
push
push
mov
test
stos
push
cli
sub
cmova
mov
shl
xor
shll
arpl
push
adc
add
das
clc
inc
push
aas
out
repz
or
shrb
jg
dec
sub
inc
add
jmp
jecxz
stos
sub
cmp
out
adc
xchg
mov
pushf
cltd
adc
movsb
jb
lret
enter
sub
sbb
mov
inc
push
pusha
push
xor
aad
fwait
bound
rorb
push
out
pop
push
add
adc
jb
push
imul
lock
jb
lock
and
dec
jo
and
push
xor
mov
cld
sub
cmp
or
aam
add
or
lods
test
lea
inc
pop
ja
ret
inc
or
adc
xor
xorl
adc
lods
lods
rorb
add
sbb
in
adc
mov
cmp
jg
mov
pop
test
idivb
sub
in
sub
les
cmp
add
cmp
sub
into
mov
or
push
xchg
jbe
push
cmp
loopne
dec
fstpt
imul
pop
push
pop
mov
test
push
sbb
sbb
cwtl
mov
mov
mov
cli
aas
jnp
push
add
add
push
and
xchg
sahf
push
jmp
inc
inc
xchg
or
sub
inc
out
movb
push
xchg
int3
int
aas
scas
add
bound
stos
ds
push
adc
xchg
imul
jg
in
fidivl
in
add
or
jb
push
or
mov
jge
dec
rclb
dec
xor
mov
rolb
pop
mull
pop
or
outsl
xchg
cltd
jle
cmp
test
cltd
fsubs
add
xchg
les
mov
adc
daa
jne
mov
cmc
mov
xchg
jne
dec
shlb
push
xchg
inc
dec
loopne
add
jmp
clc
std
lahf
test
sbb
jmp
orb
pushf
sbb
out
inc
push
pushf
hlt
mov
xchg
cmpl
dec
cli
xchg
ret
orl
add
clc
and
ljmp
sub
lock
jne
fisttpll
cmpsl
inc
test
mov
scas
mov
xor
stc
rcrb
or
out
daa
push
and
sbb
push
das
js
mov
mov
outsb
jecxz
cmp
pop
add
xchg
fisttpl
shll
sbb
xchg
mov
pop
mov
sub
add
mov
xor
pusha
loop
mov
ds
aaa
loope
iret
mov
data16
icebp
aam
add
adc
icebp
push
fwait
sarl
in
xchg
sbb
xchg
popa
jo
mov
orb
movsl
call
daa
int3
clc
sub
push
loop
dec
jns
loop
scas
fs
sub
loope
dec
subl
xor
xchg
call
ret
cli
xchg
push
jnp
ja
lods
pop
cwtl
pop
aad
in
popl
sbb
jl
add
fldcw
bound
adc
sub
mov
or
add
movsl
fisubl
fwait
or
or
sahf
sbb
jmp
lret
and
xor
cmp
cli
shll
xor
roll
mov
add
add
sbb
incl
loope
sbb
adc
push
adc
xchg
dec
dec
dec
scas
jno
gs
or
inc
dec
adc
xchg
mov
xchg
xor
cltd
fisubl
jg
fnstsw
pop
add
cmp
push
mov
mov
jecxz
mov
adcb
xor
leave
lcall
mov
sub
je
mov
out
rorb
cmpsb
xchg
adc
sub
sub
pop
orl
std
push
lcall
push
fadd
cmp
jecxz
jp
push
pop
or
mov
pop
dec
push
pop
test
mov
sub
cmp
push
icebp
push
hlt
orl
addr16
lds
sbb
imul
add
cmovo
cmc
sbb
outsl
scas
xchg
add
aam
sbb
rorl
add
mov
xchg
pushf
ss
test
and
jno
loopne
pop
addr16
mov
mov
sti
jae
jne
testl
movsb
or
mov
and
into
movsb
mov
sti
jl
mov
lock
outsl
or
stos
mov
aas
lahf
push
stos
mov
pop
scas
and
out
js
hlt
mov
addr16
push
fiaddl
pusha
dec
lahf
push
pusha
test
scas
and
sub
aad
aas
xchg
bound
inc
xchg
xor
icebp
mov
lret
je
shll
jb
rorb
mov
int3
push
icebp
gs
ret
dec
mov
ror
mov
xchg
pop
xchg
inc
pop
bound
test
call
inc
dec
cmpsb
mov
pop
call
pop
xor
add
push
pushf
mov
cli
ja
sar
stos
push
cmpsb
mov
sahf
test
inc
and
sbb
bound
fistpl
icebp
push
sub
orb
fadd
push
loopne
pop
push
mov
loop
adc
fsubrl
or
or
pop
inc
mov
adc
dec
mov
adc
mov
mov
xchg
out
inc
push
cmp
sub
mov
sub
sbb
add
jbe
and
les
in
int
cmp
mov
mov
ljmp
decl
clc
sbb
inc
cmp
out
xorl
mov
xchg
mov
nopl
mov
imul
push
iret
bnd
out
push
into
test
lcall
pusha
adc
push
das
cmp
jns
iret
sub
out
pusha
mov
insb
jb
xchg
mov
xor
mov
push
xor
mov
ljmp
fadds
cmp
lahf
shl
cs
cmp
sbb
pop
sbb
pop
mov
inc
mov
xor
cwtl
add
pop
pushl
insb
adc
ret
inc
in
hlt
ret
out
pop
pop
or
jno
xchg
inc
xchg
test
out
mov
imull
adc
or
int
xchg
xchg
mov
loop
pop
cmp
pusha
and
call
cmp
bnd
fwait
sti
sub
lock
jle
popa
fsts
sbb
xor
cli
rep
sbb
flds
loopne
aaa
jae
ficoml
clc
mov
test
mov
sbb
lods
mov
inc
divl
fistpl
clc
aad
cwtl
cld
stc
leave
outsb
lods
or
add
cmp
cmp
inc
xor
in
les
rorl
stos
push
aas
rolb
sbb
hlt
cmp
mov
and
or
inc
lds
xor
jno
jo
or
js
cltd
jge
clc
sub
daa
xor
outsl
jecxz
int
ret
mov
rcr
push
add
cmp
daa
xchg
cmpsb
jp
pusha
push
cmp
or
test
lret
mov
rolb
ljmp
loop
test
mov
repnz
inc
cmp
cmpb
fisubrs
xchg
add
sarl
xor
push
fstpl
mov
arpl
fcomps
sub
mov
push
lahf
lods
xor
pop
mov
xor
mov
mov
je
inc
shl
rorb
mov
sub
add
out
adc
add
lock
shll
and
jns
shrb
lds
dec
aam
xchg
mov
mov
ljmp
mov
inc
movsb
dec
sub
gs
mov
adc
pop
popf
push
in
xchg
fldenv
or
push
and
je
fnstenv
or
xchg
and
xchg
sbb
imul
mov
xor
cli
popf
movsl
in
setl
dec
adcl
test
xchg
mov
addr16
in
aam
mov
push
ds
mov
xchg
fwait
mov
lret
xchg
stc
nop
add
insl
lock
mov
iret
arpl
jecxz
push
and
cmc
sub
out
gs
lods
cmpsb
call
in
fdivrs
pop
xlat
cmp
hlt
int3
jae
push
scas
mov
je
cs
pop
pushf
outsl
and
mov
sarb
jge
shrb
ret
cs
push
insb
aam
jae
imul
bound
inc
pop
fwait
push
jbe
pop
scas
dec
mov
xor
stos
mov
sub
jne
push
fidivrs
rolb
pushl
mov
add
inc
mulb
roll
ljmp
in
lock
sbb
xor
and
or
inc
sub
sahf
leave
push
je
or
daa
nop
lock
mov
and
xor
cmp
or
pop
pop
repz
out
cmp
and
inc
add
add
push
rorl
or
addl
data16
sub
testl
mov
jb
jne
mov
mov
jo
mov
inc
insb
or
fadd
xchg
es
pop
push
prefetch
popa
add
outsb
sbb
pushl
mov
jo
add
ljmp
scas
push
dec
xchg
stos
pushw
lock
ret
mov
shl
xorb
loopne
je
std
mov
clc
xchg
dec
mov
lea
js
cmpsb
add
cmp
add
rorb
dec
mov
dec
add
xchg
cmp
dec
es
and
sub
xchg
and
jmp
push
or
xchg
cmp
mov
dec
mov
dec
fisubl
clc
loopne
movsb
or
lea
pop
ljmp
jne
pop
add
ficoms
shll
sub
inc
test
xor
mov
push
outsl
rorl
cmp
test
ds
add
dec
or
ret
mov
sub
negl
xchg
jb
jg
sbbb
mov
mov
sbb
push
and
sub
add
cmp
pop
jne
mov
rorl
or
push
popa
mov
jae
fs
cmpsl
insb
xlat
movb
and
cli
push
dec
pop
lock
repnz
inc
push
repnz
dec
aas
mov
es
sbb
mov
or
pop
test
xchg
mov
mov
out
pop
xor
popf
cwtl
clc
cwtl
fadds
mov
mov
cmp
xchg
movsl
jecxz
jp
push
sub
cld
dec
dec
dec
clc
cmc
jle
loop
mov
rclb
adc
add
loopne
dec
and
push
jge
mov
fs
add
pusha
mov
mov
jno
xor
push
sub
pop
xor
test
js
pushf
adcb
jg
push
cmpxchg
pop
adc
add
lods
in
enter
sti
pop
and
das
mov
popf
loopne
decl
push
leave
inc
xchg
push
xchg
icebp
in
inc
shll
sub
adc
aaa
nop
js
sbb
ret
cwtl
cli
add
js
jae
ret
sub
or
divl
adc
inc
rorb
pop
and
shll
mov
test
cld
add
test
int
fdivl
cld
cli
or
arpl
push
jmp
cmpsl
inc
mov
dec
mov
jnp
pop
sub
xchg
test
xchg
imul
jmp
mov
mov
shl
adc
mov
je
in
popa
out
sbbl
outsb
cmp
and
lock
scas
flds
lea
stos
pop
dec
mov
pop
sub
ja
fs
add
xchg
mov
aas
pop
les
je
mov
in
fsubr
mov
cmp
push
mov
push
cmpb
ficoms
les
push
pop
pop
fcompl
mov
cmpsl
rolb
rol
mov
es
and
mov
loopne
cmpl
mulb
and
dec
das
je
dec
insb
cld
lea
test
je
stc
push
inc
fwait
inc
xor
fwait
adcb
pusha
xchg
push
imul
jle
cmpsl
cld
add
stos
push
inc
or
jg
fdivl
cmp
mull
cmp
or
fdivrl
mov
nop
mov
jns
xchg
jno
or
inc
lcall
pop
lahf
and
cmp
enter
dec
sbb
push
sub
push
popa
add
iret
mov
and
xor
js
mov
jmp
mov
cmp
mov
or
pop
sub
jne
lret
test
mov
cld
sub
mov
xchg
push
popa
cs
loope
mov
mov
clc
mov
xchg
popl
xchg
push
xor
xor
inc
into
dec
clc
inc
sub
test
xchg
mov
idiv
int
hlt
stos
add
lods
lock
lods
dec
loopne
cmpsl
add
mov
out
sbb
mov
jmp
mov
pop
into
movsl
clc
rorb
repz
andb
adc
xchg
jns
cmpb
inc
leave
xor
dec
cwtl
pop
xchg
add
sbb
add
pop
lds
push
push
push
sub
adc
repnz
lods
insb
add
jbe
inc
or
adc
cmp
jp
arpl
xchg
cs
push
lcall
mov
sti
cmc
xorb
enter
inc
and
push
iret
push
xor
mov
push
outsb
les
rorb
xor
push
hlt
sub
adc
pop
icebp
fistpll
pop
and
mov
test
aam
movsb
xor
sbb
imul
fnstenv
arpl
adc
mov
dec
imul
push
orl
std
adcb
sub
imul
scas
js
adc
in
mov
icebp
mov
loope
xchg
scas
add
mov
bound
in
ud0
mov
pop
ret
inc
xchg
dec
insl
mov
das
lock
sbb
mov
push
popf
rolb
inc
mov
sub
and
mov
push
jp
bound
mov
mov
aaa
adc
jns
test
cmp
sub
test
add
or
scas
jge
inc
jge
sahf
dec
inc
shlb
sbb
dec
cld
loop
fidivs
sub
test
push
mov
lcall
fcomip
out
push
or
data16
arpl
inc
icebp
ss
xorb
mov
imul
call
mov
adc
cwtl
pop
or
fdiv
cmp
adc
ljmp
dec
pop
add
je
fldl
lahf
outsb
push
je
push
dec
cmp
mov
adc
mov
add
and
dec
mov
dec
or
mov
push
js
add
shlb
inc
loopne
or
cmc
movsl
jl
and
and
loop
and
sti
jae
pusha
movsl
jg
nop
insl
jg
jmp
push
clc
sub
addr16
jg
movsb
cwtl
decl
sbb
cmp
rcrb
mov
imul
stos
cwtl
fcoml
pop
cmp
enter
stc
in
clc
pop
or
fsubl
push
mov
jp
sbb
pop
and
sbb
xor
cmpsl
push
decl
into
push
push
lea
mov
shlb
cwtl
sar
adc
out
test
ret
mov
sub
xor
mov
hlt
imul
aad
shrl
cltd
sbbl
in
xor
sbb
pop
out
ret
ffree
mov
aas
les
push
xor
jmp
test
sbb
testb
push
cmp
inc
xchg
mov
mov
cmp
sub
inc
jmp
cmp
lock
lock
pop
pushf
push
and
mov
add
mov
dec
and
xchg
ds
lods
mov
pop
rcrl
mov
jl
push
fdivrl
dec
sub
fstps
xor
jg
idiv
scas
gs
sahf
sbb
les
addl
clc
scas
movl
adc
notb
lcall
dec
xchg
cmpl
mov
dec
es
stos
ret
adc
mov
hlt
xchg
sbb
in
icebp
mov
in
add
imul
mov
fsubr
mov
add
stos
adc
adc
aas
xor
test
rorl
loop
adcb
adc
cltd
inc
test
push
hlt
fs
sub
jle
scas
pop
lahf
sub
loop
lock
cmp
or
add
fisubs
loopne
dec
lea
mov
sbb
add
inc
cmpsl
jb
xchg
inc
mov
fldcw
adc
movsb
idivl
sub
cmp
pusha
sbb
xor
ret
xchg
xchg
xor
push
std
insl
xor
mov
cli
mov
dec
cmp
cmp
jmp
push
adc
dec
addr16
xchg
setno
add
and
push
inc
inc
adc
outsb
mov
lods
push
jo
pushf
xchg
loope
pop
xlat
lahf
outsl
in
daa
lock
sub
sub
test
sub
into
ss
adcb
sbb
loopne
fldcw
adc
sarb
jns
movsb
aas
pusha
int3
popf
notl
mov
out
sbb
icebp
jg
sbb
test
test
clc
or
or
adc
dec
popa
cmc
fildl
push
js
lods
dec
lock
lahf
adc
mov
add
mov
inc
or
inc
movsl
mov
je
ss
or
shrb
fcoml
dec
or
inc
mov
sbb
push
sbb
or
mov
sti
loope
pop
aam
pushf
inc
pop
mov
int3
jle
mov
cmp
adc
xchg
or
jbe
lods
add
mov
jnp
inc
mov
push
mov
test
push
sbb
jle
rorb
push
leave
pusha
movl
sahf
inc
enter
scas
sub
xchg
adc
pop
push
pop
lock
push
sbb
sbb
clc
dec
fstpt
sub
mov
mov
js
arpl
pop
addr16
sarb
dec
add
lcall
mov
test
pop
push
sub
add
fidivrl
nop
cld
sub
shlb
jnp
fwait
sub
mov
lcall
mull
fmull
lea
adc
aaa
je
sti
push
cmp
pusha
adc
ja
add
test
jb
mov
pop
repz
rorl
dec
pop
mov
add
lods
adc
mov
or
pop
pop
jl
sar
add
or
outsl
dec
adc
mov
shll
mov
push
test
add
cs
adc
mov
test
xor
ss
ds
push
sbb
fisubrs
mov
xchg
int3
mov
xor
pop
loope
arpl
std
mov
dec
adc
and
arpl
sbb
notb
mov
jb
pushf
push
or
sbb
mov
test
decl
sbb
dec
push
leave
in
loop
sahf
mov
leave
sahf
xchg
mov
mov
subl
pop
mov
cmp
sbb
adc
pop
loopne
fildl
jge
sarl
lock
cs
icebp
pop
sar
sbb
add
mov
adc
add
pop
jmp
cmp
movb
add
movsb
xchg
adc
in
xor
sub
xchg
pushf
dec
push
sub
icebp
jecxz
lock
or
inc
jo
xchg
jge
call
jb
test
inc
sbb
dec
xchg
mov
xor
std
pop
addb
rcrb
dec
fistl
addb
shrl
pop
aaa
inc
add
in
push
jmp
dec
mov
adc
pop
stos
subb
and
mov
xor
call
les
daa
fdivl
les
xchg
in
sub
aaa
sbb
bound
and
jo
pop
mov
sub
and
out
jne
fucomip
add
xchg
es
push
lods
dec
aaa
xor
lret
or
fwait
and
push
mulps
je
mov
aam
pop
lds
lret
lea
cli
jg
dec
lahf
jmp
sti
nop
int3
lret
xchg
inc
add
pop
cmp
lock
inc
movsb
enter
stos
loope
aaa
mov
adc
and
or
add
test
or
lock
push
dec
cld
jnp
jmp
cmp
repnz
mov
cwtl
cli
mov
cmp
andl
xchg
push
in
aad
cltd
mov
clc
mov
mov
mov
mov
mov
stos
sahf
test
lock
clc
rcrb
inc
in
or
roll
fwait
je
popf
into
test
add
cmp
call
dec
stos
and
loopne
mov
mov
mov
jle
mov
fistl
outsl
icebp
movsb
mov
repnz
push
push
cmpsb
xor
clc
dec
or
fwait
jle
xor
or
ss
or
in
push
xchg
or
fadds
test
sbb
add
jb
mov
cli
scas
aas
cmp
inc
inc
xchg
fwait
sbb
lret
xor
shll
imul
jg
xchg
sbb
push
push
enter
aad
sub
popa
sub
add
xor
push
mov
mov
mov
and
and
rclb
inc
ljmp
fs
sbb
add
pop
mov
pop
dec
das
js
push
outsl
aam
cmp
mov
call
sub
xchg
or
iret
mov
or
cmp
aad
push
stos
dec
and
pushf
add
mov
cli
push
jl
mov
negb
cwtl
test
cmpb
adc
sub
stos
pop
mov
cltd
jo
call
cli
mov
dec
decl
or
and
mov
mov
sbb
ljmp
mov
aas
sbb
decl
or
ret
loop
cli
pop
or
addr16
imul
jmp
pop
outsb
jle
mov
movl
mov
or
cmp
stos
pop
sub
std
aad
mov
pop
xchg
xor
loop
pop
add
jo
lret
sbb
fsub
mov
inc
cmpl
push
call
ja
mov
dec
icebp
pop
pop
clc
stos
jno
inc
mov
lods
xchg
sbb
push
cmp
adc
je
jmp
push
loopne
loopne
ds
pop
mov
sbb
or
lret
hlt
loop
sub
in
mov
gs
adc
pop
push
out
push
std
sbb
push
ds
cmpl
lds
or
jmp
xchg
cmpl
sbb
hlt
pop
inc
pop
test
cmc
lods
sarb
scas
mov
ficomps
push
dec
lock
nop
xchg
out
xor
lock
xchg
add
lods
loop
out
dec
sub
jge
andb
dec
mov
add
enter
pop
xchg
jle
and
jp
insb
cld
rol
popf
sbbb
inc
jmp
clc
lods
xor
and
mov
into
cmc
nop
ror
sbb
mov
sbb
mov
and
movsb
adc
xor
imul
dec
dec
inc
adc
add
mov
fisttps
mov
loopne
adc
clc
cmp
mov
popf
push
dec
jne
fistpll
notl
and
or
jae
and
mov
pop
adc
data16
ljmp
mov
nop
mov
jl
test
jecxz
rolb
nop
jns
lret
icebp
xchg
test
mov
psraw
xchg
imul
push
sbb
pop
or
pop
xchg
mov
push
les
or
les
hlt
push
dec
std
xor
xchg
or
movsb
xchg
lods
mov
subb
jle
int3
cmp
jb
xor
test
aam
pusha
jno
lcall
rcl
cltd
xor
xor
mov
pop
fdivr
test
push
jno
add
xchg
lock
inc
test
mov
pop
add
sub
lahf
fcmovne
push
mov
lods
cmc
mov
xor
push
sub
cmpl
inc
pop
subb
cwtl
mov
cmpsb
jmp
cmc
xchg
inc
scas
cmpsl
or
mov
rcrl
ret
outsb
dec
pop
aam
shr
test
jl
sbb
es
mov
xchg
dec
adcl
xor
mov
xchg
sahf
aaa
rcr
sahf
aam
outsl
insb
movsb
scas
pop
int
lret
into
nop
add
in
ficomps
mov
inc
pop
idiv
cwtl
loopne
lea
pop
add
sti
and
cmp
jbe
insb
insb
xor
dec
icebp
mov
xchg
es
push
cmp
push
cli
mov
mov
scas
es
push
mov
cmpl
mov
ret
inc
or
aas
add
add
mov
call
inc
addb
lret
into
push
popa
es
outsl
inc
pop
loopne
and
cltd
pop
sub
ss
adc
out
scas
mov
rcll
cltd
or
pop
shll
test
je
and
push
test
ret
scas
cmp
sub
or
or
xchg
jl
cmp
or
xchg
lret
outsl
pusha
fcomi
loope
shr
sbb
and
cld
xchg
xchg
xor
cmp
push
cmp
imul
xchg
xchg
sub
mov
ficoms
dec
push
inc
mov
aam
test
and
ss
add
add
pop
dec
adc
sbb
xchg
dec
insl
shr
pop
lods
jp
mov
lret
ds
push
enter
mov
xor
xchg
xchg
int3
push
inc
jne
add
and
dec
xor
or
mul
scas
or
mov
sub
pop
stos
dec
and
enter
cmc
sbb
pusha
jns
push
xor
or
xchg
xchg
icebp
xchg
mov
and
cli
es
jge
lea
mov
out
xor
cmp
insb
shr
push
loope
bound
pop
jns
scas
fstpt
mov
fiadds
insw
das
sub
shl
push
pop
xor
jge
cmp
je
adc
xchg
cmpsb
xlat
les
lcall
add
jp
mov
xchg
lret
pushf
fstps
mov
and
sub
mov
push
lret
sti
jl
scas
mov
jb
sub
ret
pop
lahf
popa
lcall
push
sbb
cmpsl
jo
pop
call
psllq
out
push
dec
pusha
jnp
mov
inc
xchg
push
inc
sbb
xor
jbe
mull
es
sbb
insb
jecxz
lcall
frstor
pop
dec
fcmovbe
push
sbb
sub
sub
or
in
adc
jb
mov
adc
pop
inc
ljmp
ficoms
test
or
loope
jno
xlat
jne
xchg
xor
shr
cmpsb
inc
into
imul
cmp
jnp
jmp
sub
push
movsl
inc
pop
roll
cmc
clc
sbb
mov
loop
lods
adc
js
xchg
test
aas
fimull
and
add
mov
aad
add
xor
add
incl
mov
inc
inc
dec
pop
popa
inc
frstor
cmp
or
addb
lods
and
jmp
cmpb
insl
adc
in
or
arpl
add
adcl
rcr
pop
add
daa
jo
and
adc
in
adc
dec
cmp
push
push
cmp
push
fcomps
xor
and
push
jne
mov
xor
jnp
push
test
inc
and
mov
lds
inc
mov
lret
dec
xchg
mov
mov
or
mov
stos
js
mov
xchg
shlb
push
mov
clc
cmpl
jge
call
mov
inc
lret
dec
aas
push
or
lods
out
mov
clc
repnz
in
pop
leave
sbb
pop
adc
movsl
fsubs
inc
cmp
and
xchg
xchg
movsl
outsb
out
xor
imul
jmp
and
jg
adc
pusha
mov
sbb
jmp
int
jmp
add
jmp
mov
testb
sub
jle
or
outsb
loopne
ss
xchg
push
adc
ds
and
dec
fs
mov
int3
shlb
cld
lret
js
jb
xor
push
adc
jo
hlt
rcll
dec
orb
repnz
shll
add
aam
in
and
adc
inc
xor
sbb
fnstsw
insb
add
or
je
sbb
inc
sub
mov
inc
sbb
sbb
ret
mov
adc
data16
add
pop
push
and
test
ja
sub
dec
cmpsb
test
pop
pop
dec
push
outsb
pop
jae
mov
adc
outsb
fst
mov
mov
movsb
push
push
insb
in
xchg
lds
lret
mov
ror
jp
add
call
mov
nop
stos
add
xor
aaa
cmp
xor
adc
pop
mov
pop
jmp
cmpsb
in
lea
xchg
inc
dec
shlb
testl
pop
outsb
sbb
adc
xchg
call
xchg
decb
fnstenv
add
sbb
sti
mov
fmuls
jl
ds
aam
bound
adc
adc
sbb
call
ret
or
mov
stos
mov
mov
nop
daa
mov
xor
xor
lock
dec
js
jp
popf
enter
sbb
hlt
sub
push
ret
je
lods
popf
pop
shlb
sbb
out
dec
mov
inc
add
repnz
mov
pusha
loopne
stos
pop
int3
lods
pop
mov
pop
cmpsb
ds
sbb
inc
cmp
je
pop
ret
call
jno
pusha
inc
lcall
mov
push
push
dec
cmc
loopne
pop
cli
clc
in
pop
mov
movsb
xchg
jle
inc
outsl
mov
and
mov
mov
and
imul
mov
hlt
cmp
movsb
mov
and
call
mov
mov
scas
inc
ss
jb
and
div
mov
daa
add
dec
cwtl
mov
inc
inc
add
pop
pop
adcb
pusha
push
pop
stos
loopne
je
mov
fs
inc
push
std
mov
mov
add
rcrl
sub
int
add
add
add
sbb
ja
pop
mov
inc
cmp
adc
popf
bound
xor
repnz
mov
in
add
mov
add
and
outsl
loope
mov
mov
mov
mov
jmp
loop
sahf
out
add
or
fisttpll
ja
hlt
shlb
lret
and
sbbb
mov
xchg
lods
outsb
int3
mov
lods
cs
stos
jge
pop
cmpb
adc
outsl
dec
push
mov
lock
ss
xlat
pop
aam
popa
jbe
sbb
mov
cmp
cwtl
mov
movsl
loop
rclb
jmp
or
sub
mov
mov
mov
incl
cwtl
sub
orb
shrl
stc
dec
test
shlb
andl
lahf
decl
popa
mov
mov
inc
aas
movsb
dec
mov
pop
mov
or
mov
jno
or
mov
jg
xor
dec
or
pop
jp
clc
icebp
jbe
xor
xchg
fiadds
enter
in
jp,pt
xlat
mov
mov
pusha
test
push
lea
push
int
mov
mov
push
cmp
scas
loopne
fidivl
pop
push
lret
cltd
ret
in
dec
push
decb
mov
sub
add
movsl
xor
loope
mov
orb
sbb
sbb
data16
xor
sbb
jbe
pop
push
sbbl
cmpsb
pusha
add
inc
je
pop
xchg
pop
addr16
popa
lds
and
gs
incl
jp
pop
sbb
jg
stos
nop
shll
or
inc
mov
add
push
mov
dec
lock
cmp
push
stos
inc
pop
dec
addr16
outsl
xorb
mov
incl
sahf
xor
stos
push
loop
pushf
mov
pop
ljmp
js
fcoms
mov
and
xchg
rolb
sbb
fs
movsb
loop
sbb
jnp
and
and
aad
sub
adcb
fidivrl
xor
cwtl
inc
jne
jg
mov
popa
push
add
inc
jae
sbb
push
or
mov
mov
mov
sub
jb
bound
sbb
cmpl
push
les
movsb
or
mov
dec
sbb
inc
sbb
inc
jae
clc
mov
out
and
sbbl
adc
and
les
loopne
xlat
iret
inc
cmpsl
adc
out
add
push
jmp
jmp
loope
scas
fistpll
mov
jno
or
rorb
push
sub
clc
insb
mov
ja
ret
jg
insl
sbb
loop
jecxz
or
icebp
mov
sbb
mov
xor
mov
es
inc
mov
lea
lods
push
inc
imul
lock
stos
scas
nop
lahf
or
lock
inc
push
repz
out
jp
dec
jmp
into
mov
push
insl
ficoml
xlat
inc
mov
shl
je
xor
mov
adc
add
ds
xchg
int
mov
popa
aad
lds
adc
mov
add
mov
xchg
mov
push
sbb
bnd
lcall
jno
xor
sarb
or
add
inc
clc
incl
fsubr
insl
xor
adc
push
or
enter
push
icebp
push
push
mov
lock
es
add
mov
and
add
ja
mov
movb
lods
insb
std
xor
jnp
scas
js
aam
jno
dec
push
sbb
cmp
cli
mov
push
out
mov
xor
pusha
gs
mov
sbb
cmp
fdivrs
or
jnp
mov
enter
decl
sub
jp
insl
dec
loope
popf
mov
adc
imul
cli
dec
xchg
xchg
cli
jg
or
test
cmp
adc
incl
or
push
das
sbb
dec
and
scas
push
pop
mov
loop
ss
loop
loope
ds
dec
das
out
sub
mov
mov
fstl
push
fisubrl
pop
and
mov
clc
out
add
jno
movsb
xchg
mov
adc
mov
jbe
dec
aas
mov
jbe
or
push
pop
adc
jbe
add
sti
jbe
xchg
mov
xchg
mov
push
icebp
insl
add
mov
stos
sbb
sarb
std
and
movsb
insb
test
fwait
xchg
inc
mov
cmp
jp
pop
test
cmp
je
xor
icebp
ss
jl
push
out
mov
add
adc
sub
jl
dec
jne
mov
sub
scas
sub
mov
cwtl
pop
mov
addr16
cwtl
icebp
and
mov
subb
or
aas
and
add
aas
fst
dec
imul
stos
movsb
xchg
xchg
sub
pop
test
or
lock
sub
pop
sbb
or
in
in
sub
sbb
nop
mov
nopl
sar
inc
inc
stos
or
xchg
sbb
ja
sub
add
mov
jl
fadd
jae
or
jbe
xor
lds
sbbl
sbb
ds
mov
cmp
out
cmp
xor
scas
xchg
daa
cmp
and
adc
push
pop
ja
jnp
pop
aad
cmp
not
cmp
call
divl
fcmovnu
insb
push
push
aad
inc
sahf
icebp
push
call
lahf
inc
xchg
cmp
loop
jl
xor
cmp
mull
sbb
enter
es
jmp
xchg
sub
mov
push
clc
dec
leave
xor
jnp
cmp
jl
jmp
jbe
xor
pop
adc
jmp
pusha
divb
loopne
add
push
pop
fnstcw
xchg
adc
xchg
add
in
mov
xchg
hlt
mov
xlat
mov
repnz
dec
test
shl
iret
cmp
adc
mov
negb
add
cld
dec
mov
adc
adc
mov
shrb
and
xchg
aaa
add
mov
inc
mov
cmp
das
stos
mov
cli
and
bound
sub
dec
test
sub
mov
sbb
ljmp
xchg
or
xor
aas
mov
loop
outsb
es
xchg
je
outsb
icebp
mov
sarb
lcall
xor
shll
push
lahf
add
pop
pushf
pushf
mov
adc
jmp
sahf
sub
cmp
jne
popf
mov
inc
popl
shrl
rcrb
es
mov
enter
sti
ja
loopne
adc
addr16
loop
push
inc
popa
pop
sub
lds
out
movsl
sub
push
pop
lcall
add
cli
scas
sbb
lcall
enter
and
cmc
outsl
call
out
daa
xchg
inc
enter
mov
std
pop
ljmp
popa
mov
sub
outsb
pop
movl
jo
fld
jbe
add
inc
sar
sti
and
sbb
jp
jo
inc
call
pop
ljmp
clc
nop
push
push
incl
cs
fnsave
cmp
pop
icebp
xlat
sub
sub
gs
lock
xchg
and
out
push
dec
fstp
ds
and
sbb
ret
pop
cltd
add
inc
std
and
sub
imul
fdivrl
jo
adc
cmp
adcb
push
cwtl
lock
fadds
arpl
add
aam
or
hlt
adc
sub
jno
mov
pop
mov
loop
mov
mov
popa
test
dec
cmp
jmp
ja
dec
xchg
inc
cmpsb
cmp
cwtl
stos
in
xor
aas
pusha
rcll
pop
inc
or
pop
push
inc
lret
in
mov
mov
or
sbb
lahf
push
imul
stc
add
add
cli
xchg
aas
sub
adc
and
mov
add
andb
loopne
xchg
pop
sbb
clc
sub
out
fwait
in
mov
pop
adc
rorb
sahf
fxch
stos
xor
loope
and
imulb
cmp
adc
in
mov
mov
xchg
pop
sarb
push
popa
stos
in
out
inc
in
xchg
sarl
dec
pop
es
jo
push
pop
test
jbe
lock
jmp
pop
out
mov
sbb
dec
dec
or
in
int
xchg
pop
or
push
out
push
or
jo
xor
imul
mov
pop
std
push
mov
lcall
xor
das
fcmovne
xchg
jl
sbb
fnstenv
adc
sbb
leave
xor
or
out
or
ficoms
xchg
stos
push
push
mov
or
subl
sbb
pop
jle
cmpb
mov
inc
ret
test
insb
and
jbe
movsb
pop
jo
aad
arpl
lahf
popa
jne
cmp
inc
and
les
test
add
lea
inc
pushf
fimull
std
add
es
pop
adc
bound
push
imul
int
insb
cld
pop
inc
lret
pop
mov
pop
or
aad
fists
mov
adc
test
sub
lret
lahf
mov
adc
dec
aas
push
rol
inc
lcall
jb
nop
ret
push
lds
add
aam
aad
xor
and
dec
out
mov
ss
pusha
fldcw
add
mov
movsb
test
jge
rorl
loope
dec
add
xor
hlt
mov
sbb
sahf
mov
push
inc
cmpsb
rcll
ljmp
cmc
push
pop
loop
cli
push
inc
mov
test
or
cmp
out
cli
outsl
xor
push
cmpb
and
fcomps
inc
sbb
in
xor
sarl
cmp
mov
mov
push
in
or
add
inc
les
xchg
in
fcmovne
pop
and
push
mov
cs
lret
ds
arpl
pop
dec
mov
cmp
jno
rcrb
mov
fdivrs
push
lahf
add
aaa
xor
add
std
push
and
mov
cmp
inc
cmpsb
xchg
add
and
xchg
or
cld
jp
roll
xlat
cmpsl
cmp
lods
adc
icebp
and
inc
roll
pop
jns
cmp
pop
hlt
ficoms
loope
xchg
scas
ja
pop
pop
rclb
jp
inc
xor
sub
bound
sub
je
loop
mov
fsubrs
mov
aaa
push
insb
and
or
add
push
movsl
xchg
xchg
clc
nop
or
in
cmpsl
sub
popa
add
lea
cmp
popa
mov
cmpsl
cs
popa
fcompl
ljmp
clc
daa
js
unpckhps
lds
loopne
or
or
fcompl
data16
lds
dec
mov
ljmp
sarl
fsub
int3
add
int
cmpl
pop
mov
aad
sub
aaa
jl
subb
pop
cs
mov
ret
lods
pushf
jbe
cmp
out
pusha
pop
in
jne
xor
mov
cmp
gs
std
lock
lock
cmc
pop
add
cmp
sbb
or
jecxz
shl
mov
jb
cmp
cmp
test
or
jle
lock
jle
mov
outsl
xchg
imul
mov
loopne
mov
jge
loopne
jmp
ds
and
inc
lods
mov
jecxz,pt
fsts
adc
into
and
std
test
push
pop
pop
adc
inc
aas
add
call
insb
sti
cmp
inc
cmpl
jg
ljmp
jge
lods
popf
and
lock
pop
dec
mov
decl
sbb
sub
jne
lods
push
mov
xor
push
aaa
mov
mov
dec
outsl
jmp
ficoml
addb
cld
mov
push
aaa
adc
adc
xor
icebp
pusha
dec
loope
jge
outsl
test
call
jb
fnstenv
pop
push
push
xchg
ffree
in
adc
jb
leave
lret
enter
std
jno
or
dec
mov
dec
stos
pop
int3
data16
inc
fimuls
cmp
lock
mov
stos
or
pop
or
aaa
fbstp
in
notl
or
mov
scas
rcrl
fadds
pop
cmpsl
inc
mov
inc
jnp
ss
cmp
mov
mov
push
roll
or
stos
rcrb
std
xor
push
jge
mov
mov
js
cmc
out
push
rcll
mov
push
daa
into
jb
popa
orb
and
adc
negb
popf
sahf
jnp
xor
loopne
inc
fsubrl
xchg
imul
mov
mov
adc
clc
das
cmp
or
pushf
mov
in
mov
mov
pushf
je
mov
push
mov
lods
loopne
insb
mov
adc
xlat
sub
or
inc
jae
es
add
inc
mov
aaa
addb
arpl
add
cld
inc
lahf
cwtl
sahf
inc
xchg
ret
leave
pop
data16
xchg
jp
jb
pop
sbb
int
sub
mov
dec
and
push
jnp
data16
adc
and
jg
cs
lret
lock
push
in
jle
jbe
push
ja
test
pop
inc
andl
inc
ss
in
and
test
stos
in
scas
fisubrs
lret
push
lods
mov
call
mov
fnsave
or
jbe
pop
inc
mov
cmpsb
rol
push
cld
dec
das
or
cmp
add
dec
out
clc
add
jmp
mov
rorb
jle
jl
or
push
out
addr16
xor
dec
push
sub
inc
xchg
cs
or
cs
inc
gs
add
mov
jae
iret
into
js
mov
in
xlat
sbb
mov
int3
dec
test
pop
clc
xchg
popa
cmp
mov
inc
test
daa
mov
test
cmpsl
inc
pop
cmp
fstpl
xchg
sti
pop
add
adc
cmp
rcr
sbb
cld
pop
xor
xchg
jnp
rorl
sbb
aas
test
mov
pop
aaa
cmp
jp
aas
ljmp
cmp
das
rcl
cmp
sahf
insl
xchg
or
lock
or
mov
xchg
add
shlb
jg
dec
jp
aad
dec
ret
sbb
inc
lahf
lock
cwtl
popa
iret
nop
outsl
fadd
adc
add
imul
push
pop
aam
or
lret
mov
add
mov
or
out
cmp
mov
mov
push
mov
push
bound
std
sbb
pop
xchg
pop
mov
push
pusha
cmc
jbe
dec
or
mov
dec
cmpsb
jle,pn
test
packssdw
sarl
mov
adc
cld
out
sbb
or
cmp
sub
inc
icebp
mov
rcll
rcl
aas
xor
and
inc
jge
mov
test
sub
xchg
pop
cs
sub
dec
sbb
xlat
stc
scas
ljmp
mov
cmc
frstor
jecxz
mov
ss
test
sbb
loop
imul
mov
sbb
add
ljmp
mov
es
jge
pusha
mov
lock
shll
pop
pop
jb
cmp
xchg
scas
jo
push
std
rcll
dec
aaa
std
hlt
fmull
fildl
mull
xor
sbb
mov
ret
and
in
shr
mov
sub
jge
js
push
mov
mov
sub
pop
loopne
shrb
clc
sbb
nop
cmp
jno
mov
jnp
imul
js
fistps
jno
cmc
sub
cmp
mov
pop
add
mov
pop
aam
dec
push
lock
mov
mov
mov
push
push
mov
cli
mov
clc
or
nop
adc
pop
loop
rol
inc
xlat
xlat
pushf
dec
test
call
mov
lods
adc
adc
clc
pop
pop
sub
nop
lods
shll
cli
aas
mov
lock
stos
lahf
dec
lds
sub
stos
mov
dec
pop
xchg
pushf
fiadds
rcll
xor
pop
cld
inc
testl
inc
mov
mov
sbb
adc
mov
mov
ret
test
aas
loop
dec
and
add
xor
dec
cmp
mov
inc
mov
pop
fcoml
mov
sub
inc
iret
mov
lock
loopne
fmuls
xor
add
add
test
cmpsb
out
shl
ret
cltd
xchg
mov
outsb
push
mov
inc
jmp
xchg
push
mov
and
dec
test
inc
loopne
pop
je
xor
dec
pop
mov
push
mov
inc
sbb
add
das
hlt
dec
sub
add
sub
sub
or
ret
jnp,pn
mov
das
stos
cmp
out
cmc
or
push
push
jecxz
sub
lret
dec
in
add
xchg
add
xlat
or
mov
in
pop
stos
push
sub
mov
dec
jle
dec
add
mulb
and
or
or
in
mov
stos
adc
pushf
call
imul
jbe
sub
jne
call
inc
cmp
outsb
jbe
xor
and
jl
rclb
mov
daa
mov
cs
ljmp
pushf
hlt
add
mov
and
mov
out
outsb
inc
pop
das
test
icebp
jb
mov
pmuludq
movsb
jmp
cwtl
arpl
mov
ds
aaa
lods
xorl
sbb
push
popf
insl
popf
mov
out
add
and
inc
scas
mov
mov
outsl
out
shl
push
jle
cmp
jmp
mov
clc
pop
mov
hlt
push
loope
cwtl
sub
in
cmp
fsubrs
je
das
mov
mov
pop
dec
and
icebp
fstpt
push
push
insl
sbb
cld
icebp
movsl
movsb
imul
sub
js
push
mov
dec
cmovno
test
vpxor
int
jbe
jo
mov
sbb
fidivs
mov
xor
test
sbb
andb
push
int
pop
push
ret
mov
mov
dec
gs
or
push
xchg
jbe
pop
cli
sub
aas
pop
fistpl
mov
imul
pushf
xchg
pop
xchg
cmp
pop
pop
sbb
data16
inc
mov
loop
dec
add
test
cmp
or
outsl
pushl
ret
ds
fnstcw
cmp
les
xor
insb
add
fstps
mov
mov
sbb
rcrl
das
decb
das
arpl
sbbb
pusha
inc
or
xor
fnsave
aad
mov
daa
cmp
mov
scas
loop
mov
push
test
sbb
mov
jbe
mov
or
daa
cmpsl
je
je
out
cmpsb
or
and
das
or
lds
push
in
sahf
pushf
pop
sbb
enter
mov
aad
adc
jns
xor
rol
dec
aaa
push
add
mov
sub
shrb
add
adc
sub
lock
push
jecxz
push
cmp
xchg
rcll
sub
xor
mov
scas
filds
jle
adc
cmp
push
push
xchg
sahf
inc
mov
in
xor
jl
ret
cmpsb
sbb
sbb
dec
lcall
sbb
insb
sarb
cmp
cmp
xchg
sub
test
push
add
inc
mov
add
mov
bound
cltd
push
mov
or
push
mov
or
stos
push
pushf
mov
jl
repnz
sbb
cld
pop
pop
aaa
pushf
repnz
cmpsb
push
inc
sbb
pop
loop
inc
dec
inc
and
call
je
lret
xchg
shr
and
movb
cmc
sbb
add
test
push
lock
or
pop
cmpb
das
push
pop
mov
test
incl
inc
sbb
add
aam
mov
in
push
mov
inc
add
jp
jo
cmp
insl
mov
xor
push
lahf
jmp
outsl
push
lods
dec
dec
adc
cmp
push
sbb
push
sbb
inc
outsl
sub
lret
faddp
xchg
test
sbb
ret
jp
jno
fbld
dec
leave
rolb
cld
sbb
pop
std
jno
out
inc
xchg
insb
call
jno
push
ljmp
scas
add
lret
sarb
adc
sbb
movsb
lcall
andb
idivl
push
aas
jge
mov
and
jge
xor
lods
call
push
shrl
dec
mov
subl
add
push
xor
add
aas
dec
addr16
pop
mov
push
ljmp
or
adc
adc
jne
add
imul
insl
pop
add
test
test
push
dec
xor
jecxz
cmp
test
pop
in
ja
sub
push
sbb
in
mov
cmc
lret
imul
fmul
add
inc
and
push
push
loope
xchg
lods
popf
test
inc
loope
loope
cmc
sub
mov
mov
push
mov
or
add
xor
mov
dec
lret
mov
adc
insb
test
fdivrs
test
repnz
insb
inc
mov
jecxz
pop
adc
cmpb
mov
addr16
lret
inc
or
add
loop
mov
xorb
cli
sbb
mov
dec
shlb
lret
pop
mov
pusha
clc
add
in
outsb
dec
xchg
mov
adc
fwait
sarb
push
subl
sub
sbb
scas
push
cld
add
jb
dec
mov
shlb
arpl
scas
inc
cmp
mov
je
xchg
fcompl
fcomip
outsb
cmp
mov
ss
call
mov
jo
adc
inc
add
aaa
ret
or
jge
push
adc
mov
or
cld
fadds
xor
mov
xor
xchg
xchg
inc
cwtl
jp
nop
in
cmp
daa
jmp
fcompl
lret
lods
inc
jl
and
pop
notb
mull
mov
dec
mov
inc
sbb
pop
pop
mov
arpl
mov
dec
xor
outsb
inc
xor
mov
test
pop
dec
and
out
cwtl
int
jb
lods
inc
or
icebp
ret
dec
dec
jg
in
sub
sbb
adc
test
pop
mov
mov
cmpsb
insl
sbb
ficompl
clc
mov
push
jnp
mov
dec
adc
or
or
pop
cmp
jg
es
xlat
jo
pop
dec
fcmove
xor
and
in
push
outsl
mov
or
ljmp
sahf
orb
pushf
pop
adc
dec
xchg
nop
dec
mov
cld
filds
in
inc
lret
adc
aas
inc
aad
dec
nop
xchg
call
in
and
xchg
cld
sbb
iret
push
and
je
adc
add
repnz
les
clc
adc
rolb
mov
push
clc
pushf
mov
pop
mov
mov
jnp
outsb
aaa
stos
loope
jns
or
orl
mov
adc
fucom
xchg
or
jnp
cmc
adc
outsb
data16
jnp
stos
ljmp
or
xor
call
jmp
call
mov
sub
dec
mov
call
jmp
sti
mov
fdivs
loopne
jge
lret
repz
lcall
movsb
sub
movl
push
and
arpl
mov
paddw
adc
add
push
sbb
or
loopne
inc
push
out
orb
scas
pusha
xlat
out
out
int3
sub
loopne,pn
xchg
jno
rolb
sti
decb
js
mov
mov
sbb
jb
jns
push
push
mov
mov
rcr
aam
xchg
add
aaa
bound
add
pusha
dec
xor
push
cmp
hlt
in
or
test
jecxz
push
jmp
pop
adc
out
and
jl
jle
pop
shlb
inc
push
sbb
pop
in
cld
mov
in
sbb
mov
mov
add
lea
movsb
add
in
test
xchg
rol
test
sbb
push
or
cmp
fisubrs
stc
pop
inc
adc
jne
dec
sbb
sahf
clc
jne
push
out
jg
loopne
insl
push
cld
mov
and
xlat
sahf
es
imul
hlt
sarb
or
pop
pop
imul
cmp
inc
notb
int
pop
jo
push
les
sbb
jmp
mov
enter
outsl
sub
or
jge
fnstenv
pusha
xor
enter
cmp
add
jbe
mov
fs
or
sbbb
fcoms
push
push
cwtl
fs
gs
cmpb
or
cs
lock
xor
jl
mov
popf
mov
pop
les
dec
roll
insb
sbb
daa
ja
jmp
xor
mov
mov
push
loopne
xchg
jmp
push
mov
mov
or
adc
add
loop
dec
aaa
jl
mov
es
cltd
mov
or
add
xlat
inc
setg
adc
dec
test
lock
loopne
pop
in
mov
jmp
mov
mov
jne
pop
push
mov
aad
pop
jp
mov
cmovb
jle
inc
jnp
sahf
cmpb
cmp
loope
popf
dec
mov
xchg
fsubrl
stc
dec
aam
xor
lock
or
or
bound
popf
or
in
popa
lahf
int3
lock
ffreep
outsl
int3
add
test
add
repz
mov
pop
lock
icebp
movsl
je
cmp
push
sarl
pop
es
and
mov
aas
sbb
push
add
inc
add
add
and
jne
loop
repz
rclb
ss
idivl
mov
bound
out
push
outsb
pop
leave
daa
adc
mov
push
inc
jno
mov
dec
minps
int3
call
mov
lock
clc
pop
ljmp
mov
pop
sub
pop
popf
into
jb
clc
stos
add
push
fcomp
or
fsubs
roll
and
ljmp
jecxz
rorb
lock
sbb
ljmp
xchg
lock
popa
add
inc
cmpsl
test
push
inc
das
lret
test
fistpll
dec
inc
fwait
rcr
sub
mov
xchg
cmpb
mov
or
xchg
cmp
in
push
mov
mov
or
aam
ss
xchg
push
ret
jp
dec
mov
xchg
fildll
movsl
mov
dec
xor
lret
pop
mov
cld
call
sub
cmpsl
call
cli
rcll
ljmp
sub
mov
lods
pop
sbb
and
dec
imul
xor
lods
js
sbb
arpl
jp
add
push
test
stc
data16
jle
shld
lret
inc
fs
push
push
jg
add
fs
dec
xchg
mov
cmp
push
pusha
push
or
mov
icebp
add
push
call
pop
test
stos
lahf
jnp
mov
mov
xchg
jo
in
mov
or
pop
sub
cmpsb
xchg
js
xchg
jg
div
push
cli
mov
incl
inc
aaa
push
in
or
inc
cld
stos
stos
mov
push
popa
jecxz
test
fstpl
jns
ret
or
mov
sub
add
aam
loope
shlb
mov
add
add
sbb
aaa
jmp
jo
jae
cmp
mov
mov
das
jbe
in
js
call
or
pop
cmpsb
arpl
sbb
cmp
add
jo
call
outsb
push
adc
jbe
shrl
ja
cmp
in
xor
arpl
imul
lock
decb
inc
xchg
adc
mov
mov
jmp
adc
fs
jecxz
add
mov
dec
std
or
pop
push
push
cmp
and
adc
fistpll
pop
lret
adc
ret
rolb
xor
imul
fwait
xchg
pop
nop
xlat
xchg
or
mov
cld
das
mov
dec
push
pop
repnz
mov
xchg
push
add
mov
ds
xorl
push
push
int
ljmp
incb
dec
fimull
mov
jecxz
iret
mov
dec
push
xor
xchg
push
mov
mov
repz
loopne
std
sbb
js
xor
fdivrs
push
cwtl
adc
daa
test
insl
loopne
test
jae
mov
xorl
arpl
cmp
mov
rolb
sarl
mov
loop
jne
ret
pop
lret
fisttps
sbb
out
popf
leave
lods
loop
cld
in
movsl
cltd
std
adc
ret
push
xor
fisubrl
mov
xor
int
add
push
add
push
adc
dec
outsl
push
aad
fistps
pusha
xor
mov
jne
pop
xchg
or
rcrl
popf
sbb
test
xor
loopne
roll
decl
jecxz
push
mov
add
dec
cli
or
inc
rol
add
jo
icebp
push
faddp
add
lods
lcall
push
and
push
sub
push
inc
cmp
add
pop
push
cmpsl
loop
rolb
cmpl
dec
out
les
fcomps
clc
mov
out
cmp
jle
push
adc
out
rcr
jge
ret
jbe
push
js
stos
int3
arpl
dec
ja
adc
adc
popa
push
sarb
and
ficoms
xchg
aaa
cmp
cmc
into
add
cmp
cs
push
push
inc
aas
xchg
xchg
dec
mov
add
jo
mov
sbb
lods
or
push
cmp
stos
ss
cmp
inc
add
jo
leave
push
fdivl
flds
dec
push
daa
pop
outsb
loop
sbb
push
aaa
xor
xchg
rorl
ds
mov
and
movsb
cmp
scas
inc
test
inc
inc
xchg
push
jl
scas
adc
popf
mov
shlb
les
push
call
lock
or
mov
cmc
xchg
test
jae
lcall
inc
fmulp
push
sbb
pop
shll
and
and
xor
sbb
rcrl
or
pusha
adc
addr16
cld
das
hlt
inc
bound
in
sbb
dec
in
rcrl
or
adc
mov
mov
add
xchg
je
cmp
scas
ljmp
and
xor
pop
jl
popf
fs
mov
std
ret
lea
pusha
add
fcmovnb
lret
pop
fidivl
sbb
xlat
stos
mov
xchg
xchg
push
cmp
push
das
and
inc
sub
dec
cmp
stos
mov
mov
add
mov
je
and
xchg
fisubrs
call
rcl
mov
or
je
daa
pop
popf
dec
movsl
mov
mov
addl
sbb
lds
test
jnp
sbb
mov
aaa
nop
push
and
clc
std
sub
add
repz
jo
pop
ret
repz
add
jae
xor
cli
imul
mov
loopne
xchg
shlb
incl
jbe
rcrl
ds
mov
or
mov
pop
outsb
inc
insb
inc
xor
dec
adc
lea
pop
push
pushf
inc
dec
es
stos
push
pop
loopne
inc
push
shl
adcb
xchg
jne
mov
adc
jne
or
jnp
or
leave
das
cli
dec
mov
popa
sbb
fistl
push
fadds
arpl
mov
int
mov
lods
fcomps
fisttpll
lret
and
mov
xchg
adc
incl
repz
cwtl
mov
mov
jmp
pop
sbb
flds
sub
pop
inc
xor
out
mov
jae
aaa
stc
fnstcw
jne
cld
jge
jg
stos
push
push
xor
mov
adc
mov
xor
push
ret
mov
sbbb
sbb
mov
inc
lods
fwait
add
cmp
mov
or
mov
test
jecxz
sbb
sahf
incb
sub
add
jg
sub
and
cmp
or
sbb
mov
dec
lods
fiadds
push
inc
loopne
insb
cmpsl
sarb
cmpb
pop
lea
ret
dec
loopne
jp
mov
jge
sub
inc
icebp
sbb
rcrl
lcall
jb
dec
mov
roll
cmc
cmp
sub
rclb
mov
inc
ja
test
and
rorl
dec
push
popl
add
mov
pusha
sbb
add
movsb
ljmp
push
addb
mov
aaa
jle
jnp
cs
fxch
jb
out
pop
sub
ficoml
cmp
and
cmpsb
pop
orb
xchg
in
and
mov
adc
clc
out
jbe
sub
mov
dec
shrb
add
fsubl
push
sbb
push
xor
hlt
add
outsb
pop
push
mov
nop
jge
sti
and
sub
pushf
repnz
and
leave
and
or
std
andl
addb
ret
xchg
ljmp
add
or
or
lods
and
sbbb
push
scas
hlt
pop
imul
test
jle
add
pop
fildl
out
test
xchg
lea
lods
sub
and
jg
mov
push
js
insl
pop
lods
pop
jl
daa
leave
sbb
aas
andl
clc
lods
jecxz
mov
enter
push
call
adc
aad
hlt
pop
mov
cmp
mov
push
testl
xor
in
fs
pop
adc
fcoms
outsl
popa
and
dec
out
cli
ret
scas
add
loopne
adc
sub
pop
sbb
lds
nop
and
jmp
test
mov
sahf
cmc
adc
mov
mov
jo
mov
push
mov
add
and
inc
inc
cltd
std
jg
cld
std
pop
pop
insb
sbb
adc
rcr
push
in
movb
outsb
mov
movsb
fdecstp
test
shll
xchg
adc
jb
cmp
shl
dec
cmc
enter
xchg
aad
mov
loopne
xor
or
jg
mov
and
cwtl
arpl
dec
mov
jbe
adc
fisubl
mov
push
mov
faddp
or
out
lds
pusha
sub
inc
sahf
xor
pusha
jno
dec
pop
cmp
xor
mov
rcr
dec
js
add
cmp
js
jno
sbb
pushf
xchg
or
aad
lods
push
adc
loopne
xchg
dec
cld
mov
inc
cwtl
jp
inc
sbb
mov
es
popa
jecxz
cmp
inc
and
sub
push
fsubrs
es
xchg
cmp
enter
sbb
mov
pop
pop
jo
ss
adc
push
or
rclb
sub
inc
nop
dec
mov
outsb
rorl
adc
mul
testb
mov
call
push
ja
push
stos
test
and
orb
pop
push
shlb
mov
ljmp
outsb
pop
ficoms
rcrb
adc
shll
ret
loop
mov
aas
xor
popa
aad
dec
mov
cmp
popa
jp
lods
xor
dec
addb
fdivrs
push
jae
fcmovnu
subb
mov
sub
sbb
push
cmp
cmp
addr16
mov
mov
inc
push
add
mov
push
add
ss
push
inc
mov
inc
movsl
lods
push
lods
mov
fucomip
inc
jne
mov
addr16
insb
sub
dec
out
add
loopne
mov
pop
leave
stc
mov
mov
in
rcrb
or
data16
js
push
popa
or
xchg
movsl
jns
xor
jb
or
add
sub
pop
xor
cmp
mov
adc
out
mov
ffreep
scas
int3
pop
xchg
lcall
dec
mov
push
movsl
sub
fs
inc
pop
pusha
push
sbb
lcall
cli
mov
or
dec
mov
out
and
mov
fs
sub
cmp
inc
push
loop
loopne
wrmsr
mull
mov
jmp
stos
mov
mov
sbb
gs
lds
or
out
jnp
enter
jl
push
mov
inc
mov
int
in
dec
test
mov
or
jbe
scas
aam
leave
aas
fst
or
add
cli
pop
loopne
js
cmpsb
mov
cmpsb
das
xor
xor
imul
daa
inc
inc
and
push
pop
setl
pushl
pop
cmp
sbb
pop
sub
inc
jnp
jb
xor
orb
iret
rcll
xchg
and
popa
cmc
mov
add
call
pop
mov
or
dec
add
sbb
leave
pop
stos
dec
cmp
call
or
add
cli
aaa
rclb
out
inc
mov
and
cmp
clc
pop
mov
or
icebp
inc
pop
add
insb
das
sbb
add
sbb
in
jle
pop
jge
mov
and
dec
js
pop
or
pop
sub
and
add
je
dec
fmull
push
dec
rcll
push
les
mov
jns
data16
xor
jne
add
loope
adc
sbb
pop
insb
mov
hlt
jmp
inc
mov
mov
inc
xchg
jbe
filds
sbb
sub
cmp
lock
mov
sbb
and
aas
loope
lea
add
test
loope
add
mov
js
sahf
mov
insl
cmp
pop
push
push
data16
or
fwait
xchg
add
jmp
insl
lods
cmp
imul
push
or
aam
or
rolb
sbbl
js
popl
mov
or
out
rcr
cwtl
mov
in
sbb
pop
in
cmp
aad
mov
cli
and
mov
ja
int3
data16
add
inc
stos
and
in
or
int
sbb
inc
sub
rclb
roll
iret
jge
out
pop
adc
xchg
loopne
popf
test
and
jp
and
dec
out
push
stos
mov
cs
add
xchg
js
add
xchg
jmp
rol
aad
mov
imul
adc
dec
shlb
push
mov
or
lock
shlb
lahf
add
outsl
mov
aas
fcomps
sarl
xchg
adc
out
popa
pop
pop
cld
decl
inc
pop
in
test
and
shrb
outsb
movsb
add
sbb
dec
hlt
add
inc
shlb
jmp
sub
lods
test
int3
sti
test
pop
mov
mov
sbb
shll
push
mov
jp
jg
fs
test
loope
xchg
std
mov
mov
mov
ret
push
dec
sub
mov
and
mov
add
lret
xor
adcb
mov
jl
call
push
push
push
mov
gs
pop
ljmp
mov
mov
fisubl
insb
lea
cli
movsl
cmp
mov
mov
fiadds
stc
pop
inc
push
sbbl
stos
sub
jle
ljmp
inc
lcall
adc
sub
inc
mov
mov
sahf
ret
mov
popa
xchg
xchg
sbb
call
in
mov
lahf
orb
pop
dec
jle
in
loop
mov
sub
test
cs
sub
jb
in
sub
lock
push
shl
stc
iret
test
je
call
jecxz
dec
into
cli
icebp
sbb
in
scas
inc
push
dec
cmp
call
add
sub
jmp
clc
mov
pop
add
or
cltd
out
inc
or
and
pop
mov
outsb
inc
jmp
ret
cmpsb
in
mov
jge
add
sbb
xor
push
and
lds
rclb
pusha
loope
cmp
aaa
loopne
stos
loopne
fisubrs
add
cld
mov
aaa
xchg
or
mov
pop
mov
push
lret
jle
or
push
pmaxsw
adc
shlb
int3
jns
or
cld
inc
mov
sub
int3
adc
jecxz
ret
ss
loope
or
mov
adc
movsb
ja
movsb
loope
xor
arpl
scas
xchg
outsl
in
lea
sbb
or
inc
stos
cs
pop
loopne
aas
jno
call
call
mov
mov
aas
scas
cmp
mull
stos
sub
jl
mov
inc
xor
add
in
xlat
or
push
pop
test
xchg
cmp
popf
cmp
xor
jo
jle
mov
xchg
aas
addr16
and
hlt
sub
lret
sbb
ds
jle
enter
fs
adc
sbb
pusha
cmpsb
rcrb
jg
repnz
push
shlb
addl
jns
add
cmp
pop
dec
inc
aad
add
fimuls
or
ljmp
cmp
add
mov
or
push
cmp
xchg
or
or
in
or
push
rcl
and
out
push
cmp
rcrl
rolb
mov
mov
loopne
xor
insl
aas
dec
scas
cs
sub
ret
test
movsb
push
lds
xchg
mov
inc
and
ret
fimuls
mov
mov
fcmove
fisubl
dec
cmp
push
iret
pop
ljmp
lea
jl
inc
cmpb
repnz
mov
inc
push
stos
das
or
xor
pop
inc
push
sub
int
movsb
movsb
aam
mov
bound
icebp
cltd
dec
push
ss
jecxz
call
add
cld
pop
aaa
sbb
mov
push
xor
add
lret
cmpsb
adc
dec
mov
push
sub
mov
ja
arpl
js
push
daa
sub
in
int
jle
adc
pusha
or
sbb
fildll
outsl
add
sbbb
push
push
pop
clc
push
or
sbb
mov
adc
mov
daa
in
clc
hlt
lock
mov
push
xchg
inc
test
out
inc
push
pop
cld
mov
or
adc
inc
push
push
adc
inc
jmp
fbstp
mov
sub
cmovne
aas
mov
sub
rolb
push
jnp
in
push
sbb
adc
or
mov
lock
mov
adc
mov
jo
jmp
mov
dec
ret
adc
hlt
pop
sub
pusha
sub
mov
and
lea
cmpsb
mov
imul
xchg
mov
mov
in
icebp
push
mov
xchg
sbb
jbe
add
ds
mov
shrl
les
popa
hlt
sbb
or
xchg
xchg
and
inc
icebp
dec
push
mov
repnz
lret
pop
popf
inc
jecxz
loopne
movb
pushl
cmp
adc
icebp
pop
sbbb
mov
dec
loopne
lea
bound
out
pushf
pusha
mov
jnp
jl
xchg
stc
mov
jbe
push
mov
test
push
and
repnz
push
data16
ds
lods
dec
aaa
push
push
mov
add
das
pop
test
sub
outsl
mov
sarb
imul
pop
lock
stos
ss
test
repnz
adc
loop
movsb
hlt
push
testl
fwait
ret
push
ss
lods
add
lret
jno
cwtl
js
popa
sbb
ss
inc
sub
rorb
out
or
aam
mov
into
xchg
push
push
daa
rorb
popf
mov
inc
inc
daa
pop
adcl
jle
add
ret
ds
push
xchg
ss
push
mov
inc
insb
je
cmp
je
and
xor
xor
xchg
into
lea
enter
sbb
cld
xchg
sub
add
jae
jo
cmc
adc
shrl
sahf
add
mov
mov
scas
or
lea
cmpsb
and
dec
sahf
push
es
scas
pop
mov
xchg
push
pop
insb
xchg
pop
jl
insb
stc
pushl
adc
and
rorb
sbb
test
fdivr
mov
or
or
mov
sub
in
lods
and
inc
cltd
loope
sub
call
jge
fidivl
pop
aaa
pusha
icebp
mov
push
ret
add
decl
add
xchg
mov
cmpb
jg
inc
add
fstpt
mov
mov
adc
aas
push
sbb
ljmp
xor
insl
and
out
xchg
or
int3
pop
adc
xor
or
pmulhuw
js
mov
dec
mov
cs
lret
dec
pop
stos
cmpsl
cwtl
ret
aam
inc
ret
iret
testl
mov
bound
sub
cmc
xlat
xor
inc
adc
jl
dec
pop
xchg
inc
or
push
or
cld
pop
out
out
loop
ret
sbb
xchg
sub
inc
sub
insb
mov
lock
aaa
rclb
or
sbb
add
fdivrl
testl
push
test
jb
or
clc
cmp
in
add
mov
mov
or
test
subl
data16
cmpsb
data16
pushf
lcall
sbb
jp
out
or
adc
into
push
notl
inc
ss
lcall
mov
fcomps
ja
pushf
dec
notl
loop
sbb
loopne
ret
dec
cwtl
push
shrl
mov
lcall
jmp
and
test
ds
cmovp
sbb
lcall
or
into
movsb
xor
jp
dec
ljmp
sub
cli
arpl
pop
and
sub
push
and
mov
decl
jo
mov
mov
clc
scas
pop
ja
adc
dec
push
in
cmpsl
lcall
insb
lock
pop
and
sub
pusha
cmp
bound
cmp
movb
adc
push
pop
jo
fcompl
in
and
clc
shlb
add
mov
xchg
mov
paddq
mov
cli
enter
nop
jmp
push
call
fldcw
mov
or
sar
or
mov
hlt
les
cmp
test
or
repz
mov
stos
roll
mov
pop
xor
or
stos
dec
call
mov
je
pop
push
dec
jg
add
mov
sub
dec
call
addr16
jb
stos
adc
pop
pushf
out
leave
rorb
jbe
xor
std
ficomps
daa
inc
cmpsl
outsb
js
jno
sbb
nop
pop
mov
sub
sbb
lret
mov
push
icebp
loopne
jge
and
mov
xchg
test
jmp
fdivr
push
cli
inc
xchg
aaa
test
or
cmpsl
sub
andl
ret
push
orl
and
mov
icebp
adcb
and
push
and
xchg
jle
inc
inc
filds
jge
pop
sarb
lret
popa
or
mov
movsb
xor
mov
add
mov
add
punpcklbw
pusha
xor
out
ja
push
fsubs
pop
loop
addb
sub
pop
inc
data16
cli
sub
clc
in
lods
and
popa
mov
mov
mov
leave
xor
inc
mov
push
test
call
pop
in
cmpsb
lock
dec
push
mov
xchg
add
dec
lods
aam
ret
loope
xchg
test
and
into
sub
shrl
loope
iret
sbb
clc
xor
push
out
stos
inc
pop
dec
add
in
sti
test
pusha
mov
push
xorl
pushf
test
test
pushf
push
jb
add
aaa
outsb
mov
sbb
adc
mov
in
inc
rolb
inc
sbb
test
aas
sub
sub
mov
xchg
ljmp
jp
push
mov
sub
mov
xchg
and
jl
pop
fidivrs
mov
sbb
push
dec
popf
rclb
pmuludq
jo
mov
into
test
leave
and
call
dec
mov
mov
xchg
lock
cld
mov
mov
enter
dec
xchg
mov
loopne
push
andb
add
xchg
xchg
movsb
shlb
inc
loope
lcall
sub
clc
loopne
add
pop
popf
mov
aad
mov
call
cmpsl
fisubs
and
push
push
cmp
adc
xchg
movsl
ret
test
jmp
push
mov
mov
cmp
fisubrs
roll
or
adc
push
jmp
out
xor
or
sbb
or
inc
loopne
push
mov
les
js
mov
mov
pop
adc
fsubs
sub
mov
add
adc
inc
leave
call
push
shl
xchg
testb
outsb
addr16
jmp
test
push
xor
push
cli
adc
lcall
jne
pusha
loope
lock
push
and
hlt
push
fnstsw
add
mov
or
aaa
mov
imul
in
mov
cmp
enter
pop
lods
push
inc
js
mov
or
pop
sbb
inc
jae
stos
push
iret
mov
ds
mov
add
add
hlt
ret
das
mov
pop
pop
push
mov
jp
add
scas
jo
imul
and
in
mov
or
sbb
lods
lea
es
jo
cli
dec
psrad
fcompl
mov
ret
sbb
cmp
test
fcomps
or
enter
or
sbb
ss
sarb
scas
loop
call
jnp
xor
lock
sub
inc
pushl
xor
movsl
and
pop
mov
or
inc
pop
fldz
aaa
mov
daa
in
jecxz
adc
pop
loop
push
jmp
adc
popf
std
cmc
adc
fwait
jle
jmp
sahf
sub
jge
jge
js
push
pusha
pop
ret
lcall
mov
aad
loop
mov
push
jnp
add
cmp
das
adc
leave
add
pop
or
cltd
dec
mov
loopne
cli
shlb
xor
icebp
and
lret
ss
movsb
hlt
push
adcl
fcmovbe
rol
daa
out
cmp
and
out
popa
xchg
ds
xchg
add
lods
xchg
jmp
mov
and
cmp
push
cmc
cli
inc
jl
outsb
push
aam
mov
ljmp
aas
push
xchg
cli
fisttps
lods
jp
cmp
int
xor
lods
cmc
popl
mov
push
scas
shl
jbe
xchg
xchg
jge
add
bound
test
ss
loopne
mov
out
pop
popa
daa
dec
rcl
aad
sub
pop
mov
mov
call
mov
cmp
add
cltd
inc
inc
mov
or
sbb
inc
jecxz
push
test
ds
adc
dec
and
inc
roll
ds
sbb
test
pop
sbb
fcomip
inc
sub
dec
lea
popl
into
push
rcll
loope
sbb
lahf
cmp
inc
insb
lahf
cmpsl
ds
dec
add
jne
jg
add
push
aaa
addl
rcrb
jge
pop
mov
mov
loopne
adc
mov
mov
mov
cmp
insl
andl
js
and
mov
test
cmpsb
fisubrl
cwtl
or
xchg
mov
pop
sbb
jae
jle
fcoms
dec
add
dec
mov
push
xchg
jecxz
repnz
andl
adc
xor
orb
pop
push
mov
das
xor
outsl
sub
loop
adc
push
ljmp
jo
cmpsb
adc
push
mov
ljmp
inc
sti
lods
or
fsubrs
jne
stos
pop
inc
cmp
sbb
nop
xorl
adc
in
jbe
cmp
pop
dec
rorl
mov
push
mov
pop
dec
int3
xor
mov
push
cwtl
stos
lods
je
popf
xor
scas
cmp
adc
add
insl
sub
out
out
insb
mov
lea
into
incb
pop
push
xchg
nop
add
pop
add
sahf
add
pop
js
sysenter
lea
pop
loop
cmpsl
xor
data16
les
pop
mov
lds
scas
fsub
push
mov
outsl
aam
dec
imul
sub
fldlg2
mov
push
mov
popa
mov
outsb
jbe
sub
aas
pop
jge
cmpsb
adc
push
aaa
daa
xor
clc
js
ljmp
test
les
add
shl
out
cld
fbld
ret
mov
std
sub
sbb
add
ret
cs
sub
inc
adc
push
popl
loope
ljmp
jg
test
push
xchg
fwait
inc
and
addb
fs
push
mov
push
sub
or
repz
xor
adcb
mov
xor
xchg
jp
stos
mov
dec
add
test
add
pop
test
test
out
out
rcrb
sub
ret
scas
sub
sbb
or
pop
pop
cmp
iret
sbb
xlat
repnz
mov
or
cmp
rcrb
mov
xor
adc
roll
fstl
in
lret
je
das
or
clc
pop
or
jl
xchg
mov
mov
adc
xlat
rcrb
sub
insl
sub
jae
add
jne
xor
cmp
push
lds
pop
sub
in
cld
in
xchg
or
mov
rorb
sbb
xor
mov
gs
ret
or
and
xor
iret
pop
mov
xorb
addr16
dec
mov
lods
adc
inc
daa
jp
fistpl
sub
cmp
xor
jmp
xor
ss
pop
inc
ljmp
ds
popa
dec
shrl
std
fwait
nop
out
loope
mov
je
ret
xchg
xchg
out
add
xlat
sbbb
int3
mov
cmp
imul
call
xor
or
xor
imul
mov
sbb
shlb
mov
and
inc
xchg
mov
inc
cmc
xlat
out
xchg
mov
imul
or
or
mul
sub
and
ret
gs
jo
or
pop
inc
push
push
dec
dec
js
pop
stos
sub
and
cmp
adc
clc
jb
repz
notb
mov
test
pusha
adc
ja
jae
push
xchg
cmpsl
mov
cmp
adc
hlt
and
jg
push
fistpl
or
out
jo
in
addr16
int
clc
add
shll
mov
test
sbb
xchg
imul
mov
add
adc
pusha
lods
mov
movb
iret
sarb
std
xchg
pop
dec
pop
insb
bound
notb
xor
clc
mov
rcll
or
ret
cmp
decl
pop
je
push
or
sti
ljmp
xchg
xchg
imul
jae
jle
and
sbb
mov
xchg
pop
ret
sub
aam
jns
add
add
andb
mov
or
daa
and
and
add
aam
xchg
jbe
mov
clc
nop
test
sub
aam
xor
test
and
or
sbb
jo
adc
jb
xchg
pushl
and
push
or
pop
shrb
rcl
push
and
popf
dec
push
add
push
std
pop
bound
addr16
jno
loop
loope
adc
in
loope
fsubrs
movb
cmp
and
subl
cmpsb
adc
in
lds
jp
scas
sarl
jp
out
mov
out
sub
add
or
call
push
or
repnz
imul
mov
push
cmp
xchg
insl
sub
pop
lret
jp
loope
mov
les
test
loope
pusha
or
fdiv
shll
push
lock
dec
sub
stos
cmpsb
sbb
ret
jmp
mov
sub
pop
pop
adc
dec
jne
and
stos
enter
clc
test
adc
pop
xchg
fdiv
add
push
inc
pop
jo
jmp
test
dec
enter
add
mov
or
mov
cli
popa
push
and
or
in
sub
lods
mov
test
out
cmp
cmp
pop
cli
shll
xchg
js
dec
fildl
xor
mov
mov
add
or
cmp
clc
stos
leave
jge
add
sbb
scas
in
imul
lock
aam
jle
or
cli
int3
call
les
mov
xchg
mov
or
dec
cmp
push
pushf
outsl
repnz
mov
pop
xchg
dec
pop
xchg
push
sub
scas
adc
lcall
cmpsb
rolb
add
push
test
and
mov
or
xchg
clc
dec
jbe
in
jno
and
adc
xchg
and
repnz
insl
fisubs
js
insl
jmp
add
pop
cld
cmp
fdivrl
je
leave
in
mov
pop
add
enter
cmp
imul
mov
pop
dec
or
push
dec
inc
ja
sbb
pop
scas
lret
popa
adc
aad
lcallw
popa
xchg
rcrl
jecxz
std
sub
mov
or
cs
loop
fcmovb
and
pop
add
add
cpuid
pop
adc
jae
mov
test
pop
sahf
les
or
inc
inc
dec
sbb
pop
push
cmp
add
dec
lods
iret
ss
or
sub
xchg
jne
aad
sbb
xchg
sub
test
mov
popa
je
loope
pop
clc
sbb
fmull
dec
aaa
push
jo
push
and
add
out
xchg
fsubrs
das
dec
pop
popf
lods
ss
imul
xor
test
push
sahf
fiaddl
pop
add
sbb
insb
pop
dec
cmpsl
out
add
sub
mov
je
cmp
xchg
pop
add
rolb
xor
push
adc
int3
cli
call
adc
mov
jl
jle
rolb
sbb
push
das
leave
sub
andb
adc
insb
cmp
xchg
cmpsl
pop
or
and
aas
pop
lock
inc
dec
pop
xchg
test
push
imul
into
lcall
jle
out
and
mov
adc
cmp
or
push
push
fldcw
adc
mov
xor
fwait
mov
mov
aam
cmp
jl
inc
notb
je
xor
into
lods
sub
bound
pop
push
push
pop
sbb
aad
aas
leave
pop
inc
mov
daa
jno
adc
rolb
dec
outsl
subl
push
clc
dec
in
mov
mov
inc
pop
hlt
pop
scas
inc
cmp
in
mov
arpl
xchg
insl
shll
addr16
xchg
movsb
cmp
cltd
les
lea
xchg
pop
mov
rclb
adc
lea
sarb
loopne
js
or
aam
fisubs
adc
fcmovnbe
push
ds
pushf
jb
mov
jl
ljmp
adcb
push
mov
adc
shlb
push
mov
loope
test
shl
stos
dec
add
and
adc
xchg
aam
add
adc
cmp
rorl
xchg
cmp
cmp
dec
int3
push
cltd
mov
jecxz
adc
cwtl
das
pop
sbbl
mov
imul
mov
mov
loope
repnz
adc
in
mov
shl
call
xchg
xor
sbb
mov
in
push
ss
ret
sbb
add
dec
lods
or
inc
decb
cmp
cmp
outsl
outsl
stos
stos
cli
fsubs
cwtl
xchg
adc
das
jle
js
stos
bound
xchg
testb
sub
mov
loop
subl
mov
and
ds
jl
das
mov
out
inc
dec
pop
loope
or
xor
dec
xchg
loopne
test
add
in
in
dec
or
in
add
es
je
outsb
testb
and
les
mov
inc
jae
sub
fimuls
repz
aas
mov
jg
shlb
jmp
lds
xor
fimull
rol
and
cltd
pop
cmp
mov
adc
xlat
and
push
fmull
add
ja
lock
aaa
adc
imul
mov
xlat
sbb
in
clc
lret
pop
jb
inc
push
adcb
mov
push
and
pop
pop
enter
test
adc
cmp
rcrb
rcr
cmp
int
pop
push
pop
mov
adc
mov
mov
pop
cmpsb
push
pop
ret
cmp
or
mov
adc
jo
mov
jmp
aad
popa
iret
rcll
mov
jmp
or
or
or
std
cld
sub
js
jg
inc
out
or
xchg
popa
loope
adc
test
dec
sbb
dec
clc
sub
rol
mov
mov
mov
xor
push
pop
jns
cld
cmp
inc
leave
adc
lahf
loop
sti
cmp
cmpsb
pop
lret
dec
add
push
sub
test
fsubl
xchg
lock
mov
push
shlb
daa
pop
sub
xlat
loop
nop
push
lcall
pop
and
mov
popa
loop
push
or
aam
cmp
mov
xchg
pop
clc
jae
movb
loope
pop
jmp
push
adc
add
in
and
xlat
addr16
add
mov
enter
pop
cld
and
sahf
lods
cmp
iret
adc
pop
sub
cmp
inc
nop
jno,pt
xchg
mov
mov
and
xor
pop
cld
xchg
and
clc
mov
mov
mov
jno
add
mov
aam
test
std
xchg
add
or
sbb
sbb
mov
loop
and
and
pop
xlat
or
out
test
addb
cmc
inc
xchg
je
imul
shlb
lcall
ja
xor
in
xor
inc
dec
xchg
xor
pop
aaa
adc
rol
mov
mov
mov
jb
or
fstps
loopne
push
imul
xor
mov
hlt
adc
insb
int3
jp
fs
pop
push
and
imul
sbb
dec
flds
imul
and
inc
jmp
pusha
adc
aas
sbb
add
andb
movsl
lods
adc
cmpsl
sub
mov
shlb
lods
in
xorl
add
and
cmp
mov
add
push
pop
adc
pop
xchg
adc
shlb
movsb
xor
dec
pusha
test
xchg
data16
mov
sbb
sub
ss
push
out
call
fwait
hlt
js
ret
bswap
jl
sbb
rcrb
cmc
cmp
leave
push
adc
sub
xor
ficompl
push
push
mov
or
fldenv
inc
es
push
xchg
loope
in
sub
add
push
mov
pop
sub
push
enter
jp
and
repnz
push
push
lcall
or
or
and
or
mov
test
xchg
repz
push
mov
test
lods
pop
pop
push
clc
and
fmull
mov
in
pop
mov
iret
fs
and
jmp
fsubl
arpl
push
mov
clc
rcr
and
dec
test
fmull
psllw
lea
add
push
mov
dec
jmp
pop
add
rorl
hlt
lods
push
std
add
mov
dec
xchg
pop
inc
mov
testb
repz
mov
repz
mov
lahf
adc
mov
cld
sahf
scas
xchg
xor
sub
stos
mov
jne
popa
inc
stos
mov
inc
jl
movsb
sarl
sarb
mov
mov
xor
insb
inc
divl
mov
or
sbb
stos
xchg
shr
les
xor
aaa
fcomps
sti
cmp
inc
andb
xor
dec
call
mov
mov
jnp
jle
cli
call
dec
lods
icebp
test
arpl
xlat
rol
push
popf
and
jo
mov
mov
push
popf
ss
mov
lock
xor
push
push
stc
and
sub
fs
dec
lock
pushf
xor
repnz
adc
push
jge
cmp
push
mov
loopne
imul
insb
inc
or
in
sub
loopne
mov
jno
stos
jle
data16
mov
rcrb
jne
dec
inc
mov
adc
xchg
negl
inc
jmp
not
aam
push
pop
add
ret
fiaddl
push
dec
ret
jae
out
in
mov
testl
jge
test
pop
jae
les
xchg
pop
mov
lret
and
test
sub
push
lds
pop
ljmp
out
and
test
dec
mov
sub
jp
xor
out
mov
in
nop
subb
shlb
shll
pop
pop
outsb
mov
cmp
sbb
and
cld
in
subl
dec
incl
or
xchg
adc
loopne
data16
std
push
rorb
mov
lods
push
lea
push
jo
fldl
imul
or
pop
ja
adc
loop
js
xor
jecxz
rclb
mov
cld
cmp
jnp
sti
jns
xor
into
or
add
stos
jecxz
out
loopne
mov
cmp
subl
in
lea
stos
inc
insl
xor
nopl
jb,pt
and
inc
js
pushf
call
push
adc
loopne
ret
or
cmp
jne
jle
jge
cwtl
adc
jne
pop
decl
jne
push
xchg
sar
inc
loop
sbb
in
mov
loopne
add
inc
sub
pusha
mov
push
pop
jecxz
dec
nop
sub
in
and
dec
push
add
add
enter
pop
mov
leave
daa
loopne
sbb
dec
cmp
mov
std
insl
jmp
push
mov
daa
mov
icebp
add
mov
jo
add
sub
out
mov
mov
ret
test
sbb
push
lds
mov
mulb
add
sbb
inc
push
addl
mov
push
mov
pushl
sub
movsl
inc
loop
mov
idivb
sub
lret
mov
sbb
sbb
jp
lret
dec
cvtpi2ps
push
stos
int3
sub
fmull
lret
jbe
pushf
icebp
in
xor
sti
lret
push
popa
scas
inc
test
call
push
dec
and
aam
pop
fcoml
negb
or
push
lret
sbb
sub
xorb
insb
enter
jmp
pop
add
lods
insb
adc
inc
sbb
add
nop
sub
inc
add
and
xchg
fbstp
mov
sub
outsl
hlt
and
add
or
loopne
mov
add
cld
pusha
notl
push
pop
stos
and
mov
xchg
mov
cs
adc
jne
jl
sbb
xchg
jl
outsb
mov
ja
ja
cld
inc
ret
pop
pop
dec
ds
sub
in
and
test
lea
imul
mov
pop
push
in
ljmp
mov
mov
sbb
add
nop
das
imul
xlat
sti
je
xor
loopne
notb
inc
dec
insb
add
out
cmpsb
mov
lret
add
arpl
popa
push
scas
or
push
les
jecxz
xchg
inc
mov
mov
call
dec
or
xchg
lcall
xchg
ljmp
movsb
add
add
add
xor
and
lcall
mov
outsb
faddp
and
and
push
and
inc
es
xchg
jl
pop
ds
sbb
and
insb
dec
xchg
inc
mov
lea
out
clc
dec
rcr
mov
scas
test
je
pop
fs
popa
mov
cmp
and
or
or
lds
rcll
jmp
push
iret
cmp
mov
pop
jne
rcll
mov
pop
lret
es
popf
and
and
into
in
insb
sub
dec
rorb
add
sbb
clc
xchg
aam
loopne
xor
xchg
packsswb
cld
mov
adc
dec
jp
mov
leave
mov
mov
pop
js
push
sub
aas
ds
xor
insb
push
xor
cmp
int
or
hlt
pop
cmp
push
mov
add
ljmp
mov
inc
xor
out
sbb
add
cmp
out
sbb
cld
push
jmp
fdivrs
pop
cmp
adc
js
sbb
cmp
lods
cli
aaa
sbb
mov
and
rcl
arpl
nop
out
movsb
and
mov
jb
fcmovb
jno
mov
lds
or
push
push
add
lock
ret
and
pop
xlat
inc
push
or
arpl
inc
add
ljmp
subl
sub
inc
xor
add
mov
pusha
jmp
push
sub
ja
nop
jae
sub
shrl
outsl
and
loopne
sbb
jg
les
mov
enter
pop
ret
movl
dec
pop
sub
in
addl
push
js
mov
scas
mov
rclb
or
es
les
mov
push
jp
cmpsl
mov
pop
rcr
pusha
dec
enter
fs
pop
pop
sbb
jmp
in
popa
arpl
xchg
clc
xor
shll
ficoml
test
sub
mov
cmpsb
sbb
dec
jle
mov
sbb
pusha
rclb
fisubl
jae
mov
sbb
test
ss
aam
subb
jp
ret
mov
add
pop
shr
mov
push
pop
mov
xchg
dec
add
mov
test
arpl
mov
mov
cld
movsl
push
stos
outsl
push
mov
das
shlb
adc
aad
mov
lock
or
mov
jne
xchg
bound
arpl
sbb
sarl
dec
popf
aam
jae
push
cmp
push
jp
xor
int
pop
cmc
sbb
adc
loop
mov
aam
sarb
cmp
testl
pop
mov
sub
neg
and
or
into
sbb
adc
sub
pop
fucompp
cli
pop
mov
je
add
jno
lea
add
pop
sub
jg
xchg
jb
ds
out
xorl
shll
or
mov
add
inc
std
cmp
xchg
outsb
sbb
xchg
pop
cmp
dec
ss
mov
sub
mov
cli
imul
repz
add
xchg
xor
sub
pop
jecxz
fwait
xchg
or
adc
or
mov
or
bound
shrl
imul
push
std
lcall
in
call
or
jecxz
rcll
jle
sbb
sbb
push
push
out
rol
shrb
mov
pop
cmp
push
mov
lahf
ret
sub
insl
fwait
ja
pop
xchg
cmp
lock
fldl
add
mov
jae
xor
push
fmuls
mov
add
popf
add
std
je
adc
mov
cwtl
js
jne
push
scas
add
inc
mov
add
and
xlat
repnz
stos
loop
push
sub
fimull
cld
sub
inc
fsubs
gs
hlt
clc
add
fs
sti
cmpsb
lock
lret
mov
dec
lods
arpl
aad
pop
aam
jl
mov
xchg
sub
ja
lock
fs
mov
push
cmc
lock
movsl
jae
sub
push
xor
mov
jp
sub
add
aam
xchg
in
or
sub
sub
push
bnd
sub
cmc
mov
aam
out
pop
test
addr16
lods
pushf
fsubrs
les
mov
xchg
fsubrs
pop
scas
dec
es
pop
es
popf
add
cmc
loopne
clc
rcl
pop
mov
roll
out
pop
comiss
test
std
cmpsb
xchg
lcall
or
fldcw
add
sub
xchg
outsb
les
jnp
mov
notl
mov
orl
push
sqrtps
push
outsb
lock
mov
add
test
add
mov
cs
adc
cmpsb
ja
push
dec
mov
jg
push
cmp
mov
mov
jae
in
inc
adc
les
cld
add
sbb
inc
push
into
mov
push
inc
rol
or
fwait
add
cli
das
je
mov
in
cmp
sbb
adc
sar
push
repnz
inc
pop
adc
adcl
dec
stos
or
inc
insb
clc
test
aas
add
or
mov
cmp
jecxz
cmc
push
rcrb
roll
aaa
int
int
cmp
call
out
or
mov
xchg
adc
push
adc
std
and
jmp
and
jbe
mov
pop
mov
mov
push
dec
mov
call
lds
insl
out
or
inc
adc
and
cmc
mov
mov
jne
lock
mov
sbb
mov
das
sbb
cmp
in
int
lods
add
sbbl
lea
roll
fmuls
xlat
aad
dec
popa
jl
in
xor
sbb
sbb
rcrb
in
cld
fsubs
orl
sbb
cmp
jbe
fucomp
jnp
add
gs
into
nop
stos
jle
cmp
jge
int3
nopl
cltd
cmp
ja
pop
fs
push
and
fdivrl
dec
mov
jne
loope
adc
bound
jecxz
mov
ja
add
push
jmp
and
jg
dec
fcmovnbe
xorl
mov
cmp
iret
cmpsl
push
push
cld
dec
hlt
mov
push
adc
dec
shlb
xor
pop
xchg
adc
es
push
ficoml
je
insb
data16
xor
orl
mov
mov
movsb
lods
adc
ljmp
lret
and
loopne
inc
aas
sbb
outsl
stc
mov
push
int3
lock
scas
rcll
xor
jge
add
fistpl
xlat
sbb
push
mov
or
test
mov
es
stos
cmp
orb
mov
pushf
mov
mov
sub
sbb
scas
jns
pop
shrb
mov
mov
lds
pop
lock
sbb
mov
movsl
push
pop
mov
push
ds
sbb
int
add
adc
popa
sbb
orl
pop
inc
mov
sbb
in
mov
xchg
dec
pop
add
je
and
inc
ret
addb
aas
mov
bound
inc
or
or
cmp
or
push
push
jp
iret
mov
push
mov
lcall
je
dec
fcompl
push
lea
jno
xor
aas
in
int3
notl
mov
ret
sbb
pop
les
push
sti
lea
sahf
test
jno
roll
incb
scas
push
pop
cmpsl
aad
es
arpl
jb
jns
add
dec
mov
js
ja
dec
pop
push
sbb
loope
int3
insb
out
pop
loopne
or
add
inc
inc
push
loopne
jmp
pushf
sbb
or
cli
mov
jb
sub
pop
out
mov
cli
mov
add
adc
sub
in
push
push
push
scas
cmp
push
sbb
cmp
or
xor
xchg
stos
jne
mov
xchg
dec
mov
inc
cs
mov
sbb
jne
dec
mov
xor
js
movsb
hlt
add
inc
adc
jge
add
cmp
dec
jl
sbb
mov
bound
je
pusha
daa
or
data16
insl
jnp
dec
jae
out
push
in
fs
jl
shld
clc
cmpsl
inc
mov
test
sub
sbbb
xchg
lahf
mov
cmpsb
cmc
jne
rorb
sub
jmp
pushf
mov
lock
xchg
cmp
outsl
and
pusha
or
ficoms
jg
int3
inc
loope
aam
shll
mov
mov
mov
and
push
stos
out
dec
sub
or
sahf
cs
mov
sti
rolb
ljmp
ss
lods
ljmp
sti
push
loop
sbb
cs
mov
lret
shl
fsubs
or
dec
sbb
sbb
xor
or
mov
mov
scas
xor
and
xchg
les
in
mov
test
retw
loope
lods
sbb
fwait
js
cltd
lcall
ds
fisttpl
fs
cmp
imul
daa
mov
or
out
pop
mov
push
je
outsb
adc
adc
jno
rcrb
xor
sub
fwait
sub
sbb
jmp
dec
adc
fcmovnbe
adc
lahf
pop
jo
es
adc
inc
es
sub
mov
and
mov
insb
je
sbb
scas
cmp
inc
jne
cmp
int3
xchg
cli
lock
mov
mov
mov
call
aaa
mov
xchg
je
xorl
cmp
jo
adc
cwtl
mov
into
add
es
sar
insl
loop
push
jno
pop
popa
ss
daa
fwait
or
lods
and
and
aam
rorl
pop
cmp
cmc
xor
das
icebp
push
stc
shll
jl
inc
pop
xchg
leave
or
out
xchg
push
pop
pop
inc
xchg
xchg
xchg
in
push
loop
push
sbbb
les
add
sub
add
scas
adc
inc
dec
pusha
mov
std
out
sub
jae
mov
mov
test
mov
aam
test
inc
dec
inc
bound
cli
sbb
jo
adc
and
push
iret
mov
insl
in
repnz
adc
jmp
iret
ds
mov
mov
xchg
mov
cld
dec
ds
enter
or
imul
test
add
add
dec
mov
aad
mov
inc
js
xchg
js
or
cs
sbb
push
pop
cmpsb
cmp
test
add
popa
push
test
and
push
icebp
aas
ljmp
mov
cmp
lods
cmp
dec
xor
adc
mov
insb
add
pop
mov
and
lahf
rcl
xor
cs
xchg
jg,pn
pop
out
mov
push
and
ja
mov
dec
or
nop
sbb
xchg
sahf
cmp
jge
or
xchg
mov
adc
pusha
and
and
fs
addb
cmpsb
sbb
cmp
inc
inc
popa
add
push
dec
testl
in
ret
cmpsl
andl
jg
out
add
jg
xorb
xchg
mov
mov
and
das
ret
test
cltd
and
out
mov
xchg
xlat
push
lods
adc
mov
roll
add
cmp
imul
les
scas
into
mov
call
inc
mov
push
les
imul
lcall
cmpsb
roll
xchg
jle
xchg
mov
push
kmovw
lret
mov
cmp
jno
dec
add
pop
push
push
mov
sti
sub
aas
adc
sbb
jne
jecxz
dec
jnp
xor
bswap
rol
mov
jl
jnp
rolb
or
pop
aam
jle
hlt
in
aas
xor
add
mov
mov
mov
jge
loopne
call
sbb
sti
pop
ds
iret
dec
cld
scas
xor
pusha
je
mov
insb
aaa
jmp
cmpsb
popa
xlat
sub
out
push
inc
andnps
leave
jg
js
addr16
incl
push
push
xchg
cmp
push
sub
mov
xchg
dec
dec
push
in
ffreep
test
addr16
pop
fnsave
pop
xor
aaa
gs
das
int
cwtl
bound
fcompl
cld
jbe
in
fidivrs
dec
pop
scas
stos
shll
adc
enter
push
in
ja
sbb
cs
sbb
ljmp
mov
or
mov
adcb
and
inc
pop
sbb
sbb
adc
scas
xor
movsl
lock
xor
ss
mov
mov
jno
mov
mov
rorl
mov
push
test
sarb
ss
sbb
inc
add
shll
push
mov
mov
pop
and
outsl
cmp
mov
xor
loope
lods
or
xchg
sahf
add
jle
stos
mov
lret
test
add
rcrl
adc
cld
add
icebp
out
xchg
hlt
mov
bound
cli
insb
cmp
xor
dec
mov
and
pusha
xlat
mov
jecxz
clc
pop
jae
shrb
popa
roll
mov
jno
pop
sti
cli
enter
push
cmp
jg
aas
nop
and
ffreep
add
ret
orps
outsb
sti
mov
sbb
popa
or
cwtl
loop
and
arpl
arpl
xchg
inc
xor
pop
adc
xchg
mov
js
aas
gs
scas
xchg
xchg
je
mov
outsb
sbb
scas
dec
sub
je
xor
adc
hlt
mov
jae
xor
adc
stos
popa
ret
sbb
insl
cld
outsl
mov
sbb
pop
add
mov
repnz
pop
push
add
das
jne
rcl
in
je
xchg
pop
fisubrl
hlt
hlt
insb
loope
in
adc
sarl
mov
into
add
sets
mov
ss
or
mov
hlt
pop
out
mov
ljmp
mov
mov
inc
jae
int
mov
push
in
gs
stos
ljmp
jg
testl
pop
cmp
addr16
mov
ficomps
test
cmp
mov
ret
cli
loope
xlat
mov
cmp
sti
iret
inc
ret
pop
fldenv
int
cmp
sbbb
mov
incb
sub
test
divb
inc
out
sub
ljmp
sarb
and
push
push
movsl
xchg
jg
lods
pop
fwait
jecxz
sub
enter
clc
clc
icebp
fcomps
sbb
push
sub
sbb
mov
loope
pushf
std
sahf
cwtl
or
inc
ret
dec
in
stc
add
maxps
in
cltd
in
test
out
out
jno,pn
add
pop
subl
add
xlat
dec
cltd
adc
pop
mov
sub
outsb
in
shlb
icebp
and
mov
mov
or
push
sub
push
xchg
inc
inc
sbb
test
rcrl
sub
aaa
xchg
adc
lahf
testl
and
cltd
add
popa
sub
jnp
sbb
adc
mov
in
push
jne
jecxz
rorl
push
adc
cmc
xchg
mov
xchg
or
jecxz
sbb
imul
and
adc
fisttps
btr
mov
cmpl
enter
andb
nop
cld
jmp
cli
push
aaa
push
push
mov
add
cli
pop
pop
mov
loopne
int
mov
pop
in
jg
sbb
adc
pusha
gs
das
fnstsw
sbb
xchg
pop
xchg
pop
push
adc
mov
cmp
sub
mov
inc
push
std
imul
ss
adc
xor
sbb
subps
sub
dec
pop
adc
add
inc
or
adc
inc
arpl
adc
movsb
add
sarl
push
jl
sub
cmp
cmp
cmp
sti
mov
int
sbbb
xor
or
dec
jg
xor
push
test
push
fwait
adc
jbe
push
fildl
sub
and
sahf
ret
test
cld
adc
test
out
es
add
enter
adc
cmpsb
out
inc
shlb
in
insb
jl
pop
sub
test
in
pop
imul
insl
pop
pop
shlb
pop
movsl
xchg
xor
dec
push
rclb
push
std
mov
add
ret
inc
fnstenv
roll
shll
ret
xlat
adc
ret
dec
add
sub
pop
and
movd
xor
and
sub
enter
or
cmp
jl
nop
lret
add
fadds
jae
jae
sarb
ja
sub
cmpsb
data16
sub
mov
mov
imul
xchg
sbb
push
or
insb
cmp
hlt
and
icebp
aad
mov
les
mov
sbb
inc
cmp
mov
dec
loop
xchg
outsb
es
push
add
cltd
xchg
xchg
mov
stos
ud1
dec
lods
adc
lock
ja
push
scas
push
lock
aaa
aas
loopne
pop
movsb
add
pop
and
scas
sub
fwait
push
lods
pop
sti
mov
sub
or
cmp
and
movsb
cmp
cld
nop
adc
idivb
jl
xor
push
sarl
mov
jne
xchg
and
sbb
insb
add
jb
xchg
dec
std
pop
scas
jmp
testb
ja
popf
leave
test
xor
js
inc
sti
mov
mov
jl
fisubs
aad
lea
mov
mov
jecxz
or
jle
adc
mov
out
and
add
jnp
sub
mov
loop
rorb
aam
ret
fists
imul
in
pop
out
dec
pop
je
arpl
out
xchg
push
adc
imul
pop
lods
dec
aad
dec
dec
inc
cmp
pop
imul
mov
or
jbe
incb
nop
adc
inc
xchg
negb
pop
dec
pop
in
adc
xchg
push
dec
and
dec
add
sub
mov
push
or
movsb
jp
mov
mov
and
push
mov
cmp
sbb
pop
movsl
cmc
jp
ss
test
pop
push
jbe
movsl
or
mov
push
cli
in
roll
adc
sbb
inc
stos
pop
cli
mov
nop
stos
jo
movsb
daa
adc
and
cmp
into
clc
jno
dec
mov
pop
dec
cmp
inc
and
mov
ret
movsb
pusha
cmpsl
adc
sbb
sbb
imul
or
jmp
xor
into
inc
push
cmp
fmul
pusha
in
test
xlat
sub
rcr
int
lea
mov
push
jmp
popa
inc
pop
cmp
jl
jle
sbb
test
mov
jp
dec
xor
add
pop
xchg
sbb
jecxz
cmp
call
scas
cmc
jae
xchg
xchg
test
movl
or
push
jae
xchg
pop
imul
cmp
push
daa
mov
xlat
out
fidivl
xchg
stos
adc
popa
sub
jo
ret
orl
dec
mov
addr16
push
mov
adc
adc
dec
sub
sarb
popa
add
inc
lock
push
add
ja
push
adc
xor
pop
push
inc
cmp
sahf
add
push
jp
ret
test
pop
scas
ret
and
movsl
xchg
enter
sub
lret
aam
sbb
imulb
push
ss
xchg
add
shlb
lock
movsb
rcrl
cmpsb
sbb
icebp
fiadds
movsl
xchg
movsl
movsl
lds
jl
loopne
xchg
pop
dec
xchg
ja
sbb
insl
cmp
sti
mov
in
shlb
clc
mov
andnps
ja
inc
aaa
xchg
and
faddp
add
dec
sub
fucomip
mov
xor
jns
adc
shlb
out
arpl
in
lret
add
mov
lods
dec
xchg
pop
sub
pop
pop
je
pop
sti
cs
into
jno
cwtl
pop
xorl
in
mov
cmp
push
and
shll
inc
mov
fldt
imul
adc
mov
dec
jge
stos
mov
or
xlat
mov
adc
addr16
leave
jns
add
adc
adc
sti
rcrb
fwait
dec
repz
pop
movsb
loope
call
fildl
pop
jo
pushf
xor
out
mov
test
stos
aaa
mov
jecxz
xchg
xor
dec
sub
fucom
dec
cmp
decl
cmp
int
stc
test
pop
pop
dec
pop
push
imul
pop
sub
pop
jne
and
imul
pop
test
sti
jne
js
bound
or
pop
loopne
cmp
mov
dec
das
cld
adc
stos
pusha
add
xor
push
inc
mov
jne
add
sbb
movsl
xchg
cmp
imul
lahf
mov
adcb
sbb
inc
cmp
loop
pop
jge
xor
imull
mov
pop
and
dec
add
scas
aam
aam
ljmp
dec
mov
inc
scas
dec
cwtl
pop
not
stc
and
push
inc
push
loopne
sahf
ds
dec
cmp
cmp
rcrl
inc
dec
aaa
pop
add
clc
lret
adcb
mov
pop
out
mov
jnp
xchg
arpl
xor
pop
and
sbb
enter
jecxz
lret
or
jno
pushf
test
inc
xchg
pop
movsb
in
repnz
scas
addl
sbb
and
mov
scas
sbb
cmp
pop
hlt
push
xchg
mov
add
inc
insb
push
mov
test
mov
mov
mov
lret
nop
mov
cmpsb
pop
and
xchg
inc
inc
add
test
outsb
call
xchg
and
jae
or
scas
cmpsl
cld
mov
mov
or
jo
fistpl
mov
sbb
sbb
adc
jbe
es
inc
in
test
jecxz
lcall
push
or
jne
xor
lock
mov
adc
scas
ret
mov
into
xor
ljmp
push
add
loop
mov
push
inc
cmpsb
shrb
mov
into
jp
adc
gs
adc
mov
fildll
inc
fucomp
mov
aas
add
cltd
dec
mov
scas
movsb
jbe
cld
mov
clc
movsl
dec
dec
mov
out
jns
test
enter
call
clc
xchg
mov
shrl
mov
lds
fcoml
loope
nop
cmp
test
jbe
addb
pop
mov
hlt
bound
mov
fadd
call
push
xor
mov
push
mov
xchg
pop
mov
sbb
pop
dec
cmpsl
in
lods
imul
jb
lret
ret
sbb
xor
inc
and
out
push
ja
and
and
or
stos
in
lea
or
inc
pop
jnp
jo
dec
jno
test
ret
inc
insb
scas
jno
inc
pop
sub
dec
cmc
orl
enter
or
adc
ja
and
jns
das
outsb
dec
fwait
es
lock
shl
xor
sbb
cmp
add
sub
enter
mov
dec
int
pusha
mov
jl
std
cmc
add
stc
jle
hlt
pop
push
xchg
aas
mov
fdivl
add
les
ss
dec
push
pop
adcl
push
mov
rolb
fimull
sub
shl
adc
pop
js
push
rcr
jl
push
or
dec
inc
push
pushf
sbb
mov
test
mov
nop
ret
clc
jno
pop
push
inc
and
sar
aad
int3
mov
test
aaa
jmp
pop
ds
sub
lea
sub
cmpsl
jae
fildll
dec
mov
push
hlt
jnp
es
jmp
sub
call
push
pop
cwtl
aas
add
xor
pop
lods
jle
adcb
adc
or
pcmpgtd
repz
jp
jg
sbbl
mov
pop
inc
pop
loopne
loop
xor
das
push
test
add
cwtl
movsb
out
sub
mov
ret
repnz
and
data16
nop
sub
xchg
sub
xchg
cli
push
xor
rol
sti
jae
out
inc
xor
movsb
in
icebp
xlat
mov
xlat
cmpb
dec
ja
inc
fwait
sub
add
xchg
mov
enter
and
mov
popf
jle
adc
inc
fistl
stos
push
dec
jbe
push
dec
jp
or
ja
imull
ja
jecxz
adc
call
push
js
mov
cmp
adcl
rorb
mov
or
je
in
repnz
cmc
addr16
mov
or
dec
add
xor
test
mov
imul
aam
mov
iret
jp
lock
xchg
xor
daa
or
push
xor
push
movsb
subb
testb
stos
lcall
mov
mov
gs
fistpl
in
mov
orb
adcb
outsb
mov
adc
out
rol
and
and
jle
loop
inc
dec
ljmp
jp
jno
sarl
mov
pop
mov
jo
xchg
cmp
dec
stos
out
ds
mov
in
push
and
sbb
sar
jo,pt
insb
mov
in
mov
sbb
ret
add
add
pop
adc
int3
das
sub
imul
les
rolb
fcom
aad
inc
push
add
loope
mov
fldt
test
sahf
addr16
add
pusha
add
jl
jl
mov
xor
xor
jno
out
or
rcr
test
dec
insb
int
cmp
psubb
sub
mov
cli
pop
pushf
jnp
scas
dec
cmp
mov
adc
dec
lods
frstor
addr16
jnp
and
xlat
sub
sti
out
clc
xchg
push
sbb
paddsw
jle
ja
leave
pushf
data16
push
pop
js
mov
clc
lods
xor
mov
mov
jge
add
or
lock
sbb
pop
dec
add
ja
in
mov
lods
jl
test
ret
push
aam
sahf
popf
cmpsb
add
mov
stc
dec
cmp
push
jl
aaa
aas
push
jecxz
sbb
xchg
add
enter
push
sarb
pop
bound
jb
pop
bound
in
mov
push
dec
clc
pop
mov
fimull
adc
add
dec
aad
sub
sbbl
push
leave
push
into
clc
fisubrs
adc
int
and
bound
scas
sbb
jno
cwtl
sub
mov
pop
xor
inc
jp
fldenv
inc
adc
lods
push
sub
outsb
jle
clc
push
test
in
aam
cld
push
mov
sahf
sub
mov
push
lret
add
or
sub
pushf
inc
daa
out
cmpb
rol
pusha
add
mov
dec
pop
jge
push
pop
or
test
out
rolb
imull
mov
ljmp
clc
mov
xchg
rcr
and
jo
jno
xchg
sub
rcrb
dec
pop
test
test
mov
jbe
mov
out
movsb
push
or
cmpsl
push
and
leave
lahf
sahf
fwait
sahf
sbb
xor
jne
faddl
std
test
das
insb
pop
xchg
adc
pop
pop
sbb
inc
or
lock
or
xor
sti
sbb
icebp
int
inc
push
push
mov
pop
test
je
pop
mov
in
cmp
push
mov
and
rcll
lret
rorl
std
shll
std
sub
inc
inc
mov
cmp
jp
inc
les
lods
loop
xchg
xor
aam
sub
push
int3
xorb
or
out
add
and
sbb
into
fwait
mov
add
js
push
inc
shlb
mov
xchg
and
sub
add
mov
mov
add
lock
into
cmpsb
int3
ljmp
call
or
push
fnsave
cmp
add
xor
movsb
xor
adc
pop
in
cli
dec
in
fnsave
fs
cli
xchg
xchg
cmp
jo
lcall
rclb
rolb
testl
shlb
pop
pop
ret
fsubp
stos
daa
sar
push
lahf
pop
lock
les
stos
mov
aas
pop
subl
test
or
cmc
pop
fbld
fimull
rcrb
out
mov
sub
jb
push
mov
repnz
insb
jae
lahf
jo
add
push
gs
adc
aam
leave
push
orb
mov
dec
and
ja
push
sbb
push
add
aas
out
stos
pop
shlb
pop
ljmp
inc
jo
jae
in
shlb
incb
mov
loopne
pop
orb
mov
aam
jecxz
dec
fmull
mov
and
pop
mov
pushl
lret
icebp
push
je
mov
push
movsb
test
imul
mull
mov
mov
cld
xor
icebp
cli
mov
mov
loopne
pop
aas
outsb
mov
cmp
mov
jg
int3
into
enter
in
mov
loopne
sub
sbbl
jns
stos
mov
push
pusha
mov
inc
sbb
mov
mov
jl
add
shlb
push
pop
mov
fcmovu
jmp
scas
rol
xor
stos
push
mov
cli
pusha
add
dec
adc
sbb
push
inc
mov
loop
enter
jge
adc
loope
sub
js
xlat
movsb
adc
clc
sysret
in
add
loop
rclb
into
imul
add
adc
sahf
aam
aas
ss
push
and
push
hlt
pusha
lret
jg
roll
imul
clc
and
add
add
cld
push
cmp
icebp
test
rcl
ja
dec
in
and
dec
std
jns
lds
push
test
leave
inc
jmp
or
mov
mov
std
push
dec
jne
mov
repnz
sahf
or
popa
std
jl
add
lods
lods
sbb
fisubrl
ljmp
sub
in
and
xor
pop
rorb
or
mov
xchg
in
or
push
sub
pop
nop
or
inc
inc
imul
add
adc
sbb
mov
enter
repz
lods
and
mov
pushf
jb
push
popa
jmp
mov
stos
nop
mov
mov
loop
add
js
movl
cmp
je
aad
imul
cmp
outsl
ret
jno
hlt
lea
pushl
addl
sbbb
jnp
sub
push
jg
dec
adc
cli
jb
fst
mov
js
daa
or
push
dec
push
sti
or
add
or
das
jno
aas
jbe
mov
stc
scas
dec
std
jae
push
inc
add
or
jno
ficomps
jnp
jnp
mov
jae
add
shrb
jp
jmp
ss
aam
push
sbb
add
adc
xor
in
sub
in
pop
stos
mov
pop
xor
jno
dec
push
notl
not
scas
test
sbb
mov
imul
sub
lock
xchg
lock
repnz
imul
pop
stos
push
or
bswap
in
xchg
fiadds
dec
movb
repnz
fiaddl
loopne
pop
mov
sbb
clc
xor
jl
cmp
jl
dec
push
mov
dec
pop
sbb
mov
xor
pop
inc
jnp
mulb
test
mov
popl
jo
push
ret
repz
ret
ret
mov
mov
lods
shrl
pop
imul
popf
dec
xor
adcl
mov
push
pop
aas
mov
out
sarl
fdivrs
rclb
cld
push
mov
arpl
inc
cmp
xor
mov
ret
shlb
pop
cs
pop
stos
mov
inc
push
daa
sub
lods
add
insb
mov
mov
xchg
movsb
mov
subb
mov
ficoml
ret
cmp
xchg
pop
sbbb
dec
stos
xchg
dec
les
repnz
inc
popa
std
push
int3
xor
sarl
ss
push
adc
cli
or
js
xchg
mov
adc
xchg
cld
xor
push
adc
hlt
xchg
cli
mov
pandn
sahf
pusha
fnstcw
pop
cwtl
inc
shll
into
ljmp
rol
pushf
dec
scas
pop
movsb
ucomiss
in
sub
mov
jnp
mov
popl
outsb
sbb
test
icebp
icebp
in
in
test
xchg
dec
movsb
insl
sbbl
arpl
stos
movsl
xchg
shl
loopne
push
incl
decl
cmpsl
push
xorl
sub
inc
jb
or
imull
cmp
mov
je
ret
mov
dec
ficomps
mov
and
fwait
lock
xchg
test
leave
pop
pop
jns
lock
cmpsl
pop
dec
mov
leave
and
and
jle
lret
ret
add
repz
inc
stos
add
sbbl
loop
and
jo
ret
xor
call
and
pop
imul
in
sub
cmpsl
and
mov
inc
add
pop
outsl
mov
sbb
lods
adc
int3
fsubs
aaa
push
dec
in
movsb
mov
cli
xchg
out
stos
xchg
cmp
push
hlt
jle
add
dec
xchg
mov
add
pushf
movsb
test
mov
je
sti
arpl
cmp
sahf
mov
cmp
jae
mov
cmp
pop
dec
mov
ret
mov
push
and
xor
jle
js
add
mov
loope
es
inc
inc
dec
mov
test
nop
mov
mov
popf
push
out
mov
xchg
dec
xchg
or
push
fsubrp
loopne
dec
inc
es
int3
decl
das
in
xchg
repnz
dec
push
faddl
mov
adc
mov
iret
push
js
movsb
push
scas
push
test
fistpl
rcrb
cmp
dec
pusha
inc
xor
mov
mov
fnstenv
xchg
xchg
incl
pop
es
xchg
lods
es
cmpsb
sub
mov
push
cs
iret
xor
rclb
mov
push
xchg
mov
mov
add
aas
cmp
inc
icebp
aaa
sbb
xchg
in
cmpsb
sahf
lods
pop
fcmovb
inc
cmp
xchg
aam
inc
mov
lds
lahf
dec
pushf
xchg
mov
mov
std
ljmp
idivl
add
or
jbe
push
xor
adc
add
xor
jge
adc
and
pop
inc
sub
mov
fs
out
push
cld
mov
or
in
test
aas
and
pop
add
rclb
jo
or
jmp
fisubs
shl
rorl
getsec
lock
and
testb
mov
or
xchg
or
sub
sub
mov
scas
loop
in
mov
fsubl
scas
lds
sar
adc
pop
jo
mov
test
mov
mov
push
mov
scas
std
push
lds
lock
sub
fstl
cmp
push
sahf
fidivrs
mov
jb
lret
mov
mov
cmp
movsb
lds
mov
mov
add
sbb
push
cmp
adc
call
imulb
or
or
xor
dec
xchg
popa
xlat
jecxz
cmp
mov
add
mov
or
out
dec
adcb
aad
jmp
mov
sub
jne
test
cmpsl
cmpsb
out
add
mov
orb
enter
ja
repz
js
ja
jo
ret
cmpsb
and
rolb
fwait
js
add
outsb
pop
icebp
pop
pop
ja
fisubrs
mov
fs
loope
lret
jg
cmp
fcoms
mov
push
fwait
pop
push
testb
rorb
or
push
adc
test
jo
into
loopne
inc
add
arpl
xchg
jle
aam
and
aaa
mov
sbb
daa
mov
add
lods
scas
das
or
cmpsb
jae
dec
xchg
pop
adc
movsl
frstor
imul
cmp
inc
xor
push
jo
pop
and
ds
dec
or
push
aas
and
jp
xor
inc
xor
pop
daa
insb
cmpb
mov
addl
cwtl
xchg
or
pop
cmc
cmpsb
jno
cmpsb
dec
sub
in
lds
add
pcmpeqb
mov
or
or
jbe
adc
xchg
pop
pop
testl
andb
xchg
cmp
rolb
mov
in
in
push
cmp
dec
add
in
sub
test
test
or
cwtl
pop
push
ljmp
and
stos
jmp
ret
xorb
jl
lods
dec
lock
add
and
mov
xor
xor
clc
inc
insl
jle
xor
dec
push
mov
adc
dec
pop
lahf
inc
fistps
icebp
sbb
sti
movb
xorl
scas
and
daa
push
mov
mov
aas
test
addr16
aam
push
add
dec
insl
and
or
icebp
jnp
popf
test
ljmp
int3
jb
pop
subb
dec
hlt
inc
mov
je
sahf
mov
jmp
xor
add
xor
testb
xchg
xchg
push
inc
dec
dec
mov
in
lahf
adc
cmc
dec
or
and
in
mov
pop
sbb
lock
add
jmp
es
inc
clc
aaa
push
mov
stos
sub
fstpt
or
mov
in
rolb
fildl
mov
aad
idivb
or
mov
mov
add
jmp
mov
xor
fs
out
jo
lock
add
lret
xchg
push
gs
push
push
mov
test
movsl
scas
push
or
shrl
fistps
aaa
push
cld
cmpb
mulb
fsubrs
pop
jp,pn
and
cli
data16
shlb
mov
sarb
add
in
outsb
cmpl
push
inc
cld
inc
mov
aas
and
sub
lret
fisttps
mov
clc
shrl
pop
push
xchg
cmp
mov
arpl
ds
and
push
xlat
lcall
lods
popa
xchg
pop
shrb
push
push
pusha
jmp
mov
lods
fnstcw
pop
loop
loopne
stc
aas
iret
or
jb
jns
push
subb
rorb
into
pop
inc
cmp
mov
xchg
lcall
loope
mov
inc
out
inc
ret
and
ljmp
mov
sub
rorb
sbb
push
push
or
xor
mov
inc
cmpsl
ds
lret
sarb
mov
dec
and
xor
ficompl
mov
out
testl
adc
ja
add
push
fsubr
sbb
push
push
mov
gs
inc
enter
mov
aam
cmp
hlt
xor
inc
inc
pop
add
int3
mov
rorl
nop
cmp
cmpsb
loope
out
and
mov
add
sub
push
and
lret
fldl
loope
leave
cmp
mov
fidivrl
es
add
fsubrp
dec
fiadds
ret
hlt
cli
aas
mov
jns
xor
stos
repnz
push
mov
xor
pop
push
js
mov
out
dec
pop
jns
insl
jecxz
add
sub
dec
movsb
pop
jg
in
push
test
cmp
movsb
dec
test
add
jl
mov
mov
fnstcw
xchg
push
mov
pusha
add
or
sub
cmp
test
dec
gs
fmuls
mov
outsl
pop
and
sarb
jae
das
add
lods
push
mov
adc
in
sub
ffree
repnz
fsubrl
outsl
inc
in
xchg
mov
dec
xchg
xchg
out
mov
scas
pop
and
fsubs
dec
in
loopne
mov
loopne
add
dec
add
lret
in
arpl
loope
daa
sbb
sub
es
fwait
inc
mov
sbb
movsb
in
or
cmp
test
dec
or
pop
xchg
das
les
lea
xor
lret
cmc
and
mov
sub
inc
sbb
insb
test
add
and
add
sbb
push
mov
mov
adc
jo
and
push
pop
or
push
punpcklbw
mov
xchg
or
push
nop
mov
xchg
xchg
inc
ret
test
leave
or
imul
cli
repnz
lcall
mov
sub
test
pop
adc
mov
cmpsb
popa
repz
testl
int
jle
pop
rorb
mov
push
mov
aam
test
adc
mov
mov
lods
sub
mov
aam
mov
pusha
cld
js
mov
out
or
add
cli
add
sub
aas
mov
sbb
xor
sbb
jecxz
mov
xchg
jle
push
xchg
xor
lahf
add
add
js
push
inc
pop
movsb
mov
ljmp
roll
in
pop
fcmovbe
push
incl
xchg
lea
pop
mov
jg
movsb
mov
addr16
ljmp
clc
add
mov
jle
clc
inc
insl
push
fstpt
sub
scas
dec
sbb
pop
nop
inc
add
roll
bound
xor
xor
adc
push
cmp
mov
dec
aad
or
cmc
clc
xchg
add
mov
inc
sbb
adc
adc
lds
add
in
stos
stos
adc
sbb
cmp
mov
int3
cmp
jmp
das
data16
adc
jp
cld
xchg
ljmp
mov
mov
ss
mov
std
pop
jno
stos
ficoms
or
or
and
or
pop
push
repnz
fs
fucomp
inc
mov
mov
jg
xchg
mov
sub
into
ljmp
sub
inc
adc
push
in
popf
push
or
ss
push
rcrl
adc
lcall
lret
lahf
jmp
jno
push
mov
jl
pusha
iret
pop
or
jbe
add
jle
out
adc
clc
xchg
sbb
repnz
adc
in
arpl
shlb
adc
jb
or
push
aaa
xorl
jbe
xchg
mov
mov
adc
xchg
mov
insb
imul
dec
and
mov
in
imul
aam
loopne
or
pop
ja
ja
in
shrl
push
js
in
mov
xchg
lea
add
adc
cmp
outsb
sbb
bound
push
pushf
xchg
mov
jno
sbb
sub
add
jo
lcall
mov
pop
jne
xor
andb
push
jmp
sub
pop
jns
mov
sbb
subl
add
mov
push
dec
inc
or
loopne
pop
pop
dec
xchg
and
mov
bound
popa
cmp
sbb
sar
pop
je
std
pop
je
inc
dec
xchg
ljmp
fmull
enter
xchg
inc
lock
hlt
fs
push
insb
sbb
pop
stos
or
std
sbb
aas
add
out
pop
xor
inc
adc
adc
cmp
or
sti
test
aad
push
ja
fdivrl
mov
xchg
jecxz
push
mov
ds
les
mov
add
clc
lahf
xor
jge
fnsave
cmpsl
nop
mov
movsb
fwait
mov
addb
aam
sbb
cld
mov
test
outsb
xchg
imul
fbld
cmp
les
arpl
mov
adc
and
mov
push
sub
mov
pushf
movsb
loop
pop
clc
pop
jne
mov
mov
sub
fdiv
test
and
dec
testl
inc
inc
sbb
aas
pop
adc
adc
std
adc
lds
hlt
jecxz
sbb
lahf
xchg
dec
into
test
imull
push
inc
inc
cmc
and
out
add
gs
les
out
add
dec
popf
and
mov
arpl
cmpb
add
mov
cli
inc
or
mov
inc
sub
ror
add
adc
in
rcr
jo
fcmovnbe
add
pusha
mov
pusha
or
pop
or
jg,pn
ja
push
data16
rcr
fisubrl
pop
cmp
inc
push
inc
mov
xchg
and
std
add
or
int3
inc
cmp
das
xor
add
adc
lock
hlt
adc
or
adc
mov
sarb
cmpsb
mov
pop
addb
outsb
enter
dec
push
or
das
and
push
jle
cmp
cmp
pop
loopne
pushf
xchg
mov
push
ret
mov
int
jbe
ret
inc
add
jge
in
repnz
imul
jp
pop
mov
cmp
loopne
movb
dec
add
fwait
in
sbb
and
xorb
mov
ffree
test
dec
dec
fadds
inc
int
mov
or
jo
or
inc
add
adc
pop
ljmp
outsb
outsb
loope
out
cmp
push
cmpsl
lahf
cs
pusha
add
mov
js
sub
ljmp
cmp
test
mov
push
loope
insb
decl
xchg
xchg
cmp
jnp
rorl
mov
lds
push
add
test
aam
mov
sub
inc
fnstsw
and
push
aam
mov
daa
mov
cmpsl
xchg
shlb
adc
jb
xchg
fcom
cmc
push
rclb
pop
movsl
push
or
jle
pop
or
cs
lcall
xchg
and
mov
jp
js
icebp
jo
fs
hlt
sbb
clc
cli
cmpsb
push
cld
fwait
icebp
jbe
test
je
ss
addl
subb
mov
pop
jo
jo
jb
mov
pop
cmp
mov
lret
dec
mov
shrb
pop
aaa
add
jmp
fisubrl
ficoms
nop
xor
in
addb
out
lock
and
mov
sub
scas
mov
mov
je
push
adc
push
jae
mov
pop
mov
add
dec
xor
out
mov
or
test
out
mov
mov
xchg
jo
dec
das
cmp
xchg
loope
je
push
fcomps
ret
jbe
mov
loopne
push
cmpxchg
lret
mov
push
scas
daa
sub
es
jl
adc
faddl
jo
imul
push
push
mov
push
jmp
add
mov
pop
pop
inc
shlb
jp
outsl
jg
cmp
push
inc
cmp
std
mov
fisttpll
xorb
andb
jmp
in
xchg
jg
mov
pusha
loopne
xor
pop
lods
push
fldl
aad
xor
clc
daa
cmp
push
and
pusha
sub
aad
divb
int3
js
mov
subb
pop
aam
push
jb
into
jmp
inc
fwait
sbb
cmp
jne
inc
nopl
rcr
call
pop
das
xchg
xchg
das
cld
and
adc
cmp
jne
mov
cld
or
inc
and
jle
cmpsl
jbe
mov
and
mov
mov
shrl
cmpsl
lea
pop
cwtl
push
les
lock
loop
jne
and
dec
pop
add
shl
incl
movsw
add
add
loope
push
sbb
mov
adc
adc
stos
out
je
push
loope
mov
jp
decl
mov
mov
jge
addb
test
repnz
setle
lock
and
or
mov
jns
imul
leave
add
mov
inc
lret
push
sub
sub
add
or
stos
lods
repnz
adc
pusha
ljmp
sbb
or
aaa
jecxz
insb
xlat
iret
cmp
mov
jle
push
pop
and
or
divb
mov
xor
cmc
movsb
adc
icebp
in
xor
cmp
or
xor
shr
or
push
shll
and
ds
sbb
test
inc
pushf
adc
addb
ret
lahf
add
and
inc
or
jle
sub
cmp
cmp
hlt
das
push
cli
xor
add
push
fidivl
cltd
pop
inc
test
and
in
mov
shrl
aad
les
sbbl
xchg
jge
cmp
jmp
rclb
aam
add
pop
dec
gs
test
or
push
adc
cmp
js
rclb
fisttps
test
mov
mov
ja
insb
aas
test
testb
xlat
mov
cmp
push
dec
or
jbe
and
sub
cmpb
int3
or
test
sub
cltd
clc
ss
xchg
or
imul
sbb
mov
pop
inc
pop
and
cs
dec
mov
fcompl
mov
mov
mov
push
push
les
aaa
or
loopne
scas
into
or
popf
lods
mov
ret
cmpl
sahf
sub
mov
push
out
sub
push
out
sub
xor
add
or
pop
dec
or
into
orb
add
adc
lds
push
pop
and
mov
daa
iret
sbb
mov
push
in
std
test
mov
pop
add
mov
jl
jecxz
popa
xor
pusha
mov
jbe
ja
pusha
xorb
dec
mov
jecxz
xor
mov
dec
adc
xor
or
sub
outsb
add
aam
dec
and
cs
pop
rcrb
inc
popa
pushf
add
cs
xlat
test
push
cli
fstp
bound
nop
pop
cmc
rcl
dec
adc
or
push
ljmp
in
mov
mov
mov
lcall
cmpsl
mov
sub
push
inc
sub
push
push
arpl
and
sbb
in
add
sub
shrl
rorb
jae
je
fwait
scas
mov
call
orb
jle
std
mov
push
dec
jo
and
mov
sub
clc
out
ret
mov
jge
imul
or
mov
stos
addb
divb
in
pop
roll
insb
das
es
js
in
pop
outsb
out
pusha
mov
jnp
sbb
mov
insb
ljmp
test
aad
icebp
xchg
add
enter
add
aaa
mov
mov
inc
out
dec
add
add
mov
dec
ret
jp
pop
scas
or
sbb
add
xor
leave
ret
xorb
mov
xor
rcrl
push
cld
xchg
add
mov
or
cmc
stos
call
dec
in
testl
mov
rol
pop
dec
jbe
xchg
sbb
outsb
repz
test
sahf
subl
jge
jecxz
add
push
lds
xchg
call
aam
xor
test
aaa
pop
add
outsl
cli
sub
sbbb
cwtl
add
jl
cwtl
inc
loop
addr16
test
sub
aam
clc
shrl
cli
jbe
rclb
fstps
sub
jge
add
dec
dec
cmp
inc
ss
fildl
pop
add
decb
fcmovnbe
stc
std
mov
and
mov
mov
lock
aas
bound
ror
sub
cmc
lcall
inc
inc
add
xchg
xchg
sub
sub
xchg
mov
insb
add
lahf
add
sbb
pop
sarl
loop
js
out
xchg
cmc
push
movsb
dec
pusha
mov
and
lret
rorb
inc
lret
sub
or
daa
add
add
jle
inc
inc
stc
sbb
mov
pop
shll
popf
push
mov
fcomip
jecxz
xor
leave
sub
cwtl
aam
inc
push
fwait
sub
addr16
iret
shlb
pop
mov
jge
pop
adc
xchg
lret
mov
and
add
sar
movsb
sbb
sub
lock
mov
incb
inc
dec
and
mov
sub
jge
adc
lea
or
addr16
dec
movsb
add
fdivrl
or
or
mov
add
test
inc
cmc
cmp
jle
pushf
sbb
cmp
fnsave
sub
rclb
inc
repz
aaa
cmovbe
mov
push
push
sbb
jge
jge
icebp
or
fistl
test
inc
jnp
ss
add
dec
mov
add
push
imul
hlt
xchg
fs
pop
lods
fs
and
jp
ret
and
shlb
pop
pop
add
inc
mov
cltd
popa
jno
stc
or
test
and
jo
je
sti
call
sub
inc
push
sti
mov
jge
sub
pop
cwtl
cmp
and
xchg
aam
jo
jl
addb
mov
dec
push
and
lcall
xor
jae
cwtl
sbb
ds
test
rclb
or
add
leave
sub
push
cmc
and
sbb
ja
mov
mov
lock
pushf
stos
sbb
std
je
jb
sbb
pop
rorb
add
jge
adc
cmc
idivl
xor
cmc
sub
loop
or
jp
mov
xchg
mov
aam
lret
test
sub
fistpl
mov
rcll
inc
and
jl
adc
and
push
scas
dec
pushf
cmpsb
frstor
mov
xchg
arpl
cs
mov
lahf
call
inc
jnp
push
pop
jp
inc
shlb
lcall
xchg
push
lret
outsl
and
jae
es
bound
push
inc
sub
sub
xchg
loope
add
xchg
and
mov
imul
adc
inc
and
cmpsl
mov
xadd
push
test
add
rolb
sbb
incl
mov
adc
mov
dec
fisubrl
lock
and
lret
or
scas
loope
dec
movsl
mulb
or
sbb
clc
call
jecxz
cld
inc
clc
faddl
mov
add
hlt
ficompl
fs
int3
shll
sbb
or
or
jno
popa
push
test
movsl
iret
inc
cmp
fldcw
sbb
push
mov
call
into
push
and
ret
cmp
mov
mov
arpl
and
inc
push
int
push
repnz
sarl
cmp
add
lock
mov
xor
mov
rcr
aad
sbb
inc
mov
inc
call
inc
jnp
pushl
ret
inc
ja
out
ss
repnz
push
inc
fsubrl
jecxz
and
aam
lret
add
pop
hlt
ja
push
inc
mov
add
mov
xchg
push
sbb
out
mov
xchg
loop
addr16
and
inc
ss
add
inc
orl
sub
adc
add
jmp
mov
jmp
stos
jmp
xor
jecxz
or
jg
and
mov
inc
mov
cmpsb
addb
out
fisubrl
push
movsb
add
pop
je
sbb
lcall
lock
fsin
pop
add
push
cmp
sbb
push
mov
mov
sub
aaa
cmp
inc
je
xchg
sub
cmpb
push
insb
push
fsubl
cmp
and
xor
xchg
fbstp
out
jle
pop
xchg
or
pop
test
outsb
sbb
shl
sub
loop
popf
js
and
ja
mov
and
outsb
mov
push
mov
pop
add
push
or
sbb
sbb
mov
je
cmpsl
roll
adc
loopne
mov
mov
loop
jbe
js
fbld
es
jb
test
daa
inc
pusha
test
xor
add
icebp
or
inc
xor
jns
and
jg
pushf
mov
lcall
pusha
sti
jmp
jg
mov
fwait
sbb
pop
inc
lret
rorl
push
leave
lods
mov
insl
jl
clc
adcl
jbe
test
sub
into
daa
cld
rolb
shlb
bound
push
int3
mov
mov
test
loopne
insb
repz
push
movsb
xchg
jl
pop
enter
sub
pop
mov
push
pop
xor
sub
fistpl
cld
mov
gs
in
xchg
mov
iret
mov
sbb
pop
xchg
mov
sbb
andl
cli
or
xchg
xor
cmp
pop
pusha
adc
push
or
cwtl
add
movsb
and
rcll
and
mov
adc
jne
clc
ret
add
inc
outsb
xchg
adc
bound
inc
push
lock
dec
and
jecxz
dec
daa
pusha
mov
and
je
lock
or
aaa
in
call
pop
jl
daa
inc
clc
mov
clc
cld
pop
sti
xchg
and
sbb
sub
pop
mov
pop
out
jnp
and
popa
and
test
aaa
movsl
jg
jp
dec
fcoml
jg
clc
cltd
out
jecxz
leave
adcb
fisttps
inc
aaa
xchg
mov
or
lods
sbb
insb
xorb
insb
xor
fwait
mov
nop
xor
mov
pop
inc
dec
loope
mov
mov
roll
mov
sbb
mov
dec
or
push
lods
dec
sarl
or
fisubrl
cmpsb
sub
repnz
xchg
add
xchg
bound
es
ficompl
stos
lret
push
pop
and
fcmovb
bts
aam
and
sbbl
pop
and
add
dec
push
js
dec
mov
or
fisttpl
mov
data16
addps
mov
mov
ret
mov
inc
arpl
test
push
in
jg
inc
in
mov
call
imul
push
jp
cld
out
icebp
cmp
test
cmp
shl
add
inc
aam
add
dec
xchg
mov
dec
ret
dec
je,pn
add
es
out
mov
xchg
loope
sbb
movsb
push
add
rcl
aas
xchg
test
inc
dec
cwtl
sbbl
test
push
sub
mov
push
cmc
add
lea
xchg
hlt
push
lock
out
arpl
push
mov
mov
pop
gs
jmp
cmpl
es
call
or
mov
je
push
cmp
mov
jmp
gs
dec
mov
shlb
rorb
pop
imul
test
imul
mov
add
imul
pop
or
icebp
idiv
lods
cmc
arpl
in
xorl
jo
sub
movsb
pushf
fsubrs
pop
mov
jnp
or
pop
jno
rorb
movsb
xor
xchg
mov
ja
add
mov
adc
sbb
movsb
ja
cli
push
jmp
bound
sti
mov
sub
test
gs
pop
outsl
dec
add
cmc
xlat
and
xor
cmp
add
dec
mov
jno
cwtl
outsb
sahf
add
jl
shll
and
xor
je
xor
dec
and
jge
push
dec
dec
mov
and
aas
pop
stc
pusha
jo
cli
jge
stos
aaa
pop
xchg
xchg
lret
xor
nop
push
dec
jg
cmp
jg
sbb
jl
ret
fisubrl
mov
or
or
push
jne
mov
or
or
icebp
xchg
pusha
jecxz
stos
add
inc
cmc
inc
or
dec
dec
and
mov
push
sub
in
add
hlt
addl
mov
outsl
out
pop
pop
push
fstps
popa
subl
mov
aad
mov
lret
test
sub
popf
pop
push
and
pop
lea
imul
imul
lods
or
lsl
pop
add
cwtl
aaa
sbb
mov
aam
lea
push
fisttps
push
fisubrs
jb
mul
xorl
adc
insl
cmp
or
jg
or
mov
out
out
fiaddl
in
inc
sbb
imul
jmp
lods
mov
rolb
push
loopne
lcall
add
pop
sub
pop
movsl
hlt
add
xor
mov
imul
pop
mov
adc
cwtl
outsb
lcall
sbb
jecxz
pushl
scas
add
dec
fcoml
mov
mov
ljmp
cmp
dec
or
or
xchg
ror
cs
push
repnz
int3
loop
push
es
ficoml
xor
cmp
ret
or
or
fmuls
leave
in
add
xchg
xor
push
xchg
lret
dec
adc
sbbl
sbb
sbb
and
divl
jno
push
jmp
bound
sub
roll
in
mov
shll
sub
and
test
jb
cmp
test
cmp
int
dec
adcb
xchg
adc
push
dec
cmc
push
dec
inc
cmp
scas
push
int3
dec
fs
cmp
and
les
sbb
push
add
incl
xor
xchg
outsb
insl
ljmp
incl
mov
push
add
stc
mov
mov
xchg
or
sbb
cmpsb
add
sub
inc
ss
or
cmp
dec
movsb
mov
dec
push
xchg
push
mov
pop
xor
jecxz
and
jno
psllw
mov
add
cltd
out
loopne
addr16
mov
mov
aaa
in
jmp
adc
xlat
inc
in
outsl
add
dec
cmp
in
dec
mov
add
or
ljmp
ror
pop
xor
jge
pop
or
inc
andb
jae
out
pusha
inc
es
pop
mov
add
in
shlb
sbb
cmp
clc
sub
mov
mov
cmp
adc
roll
stos
cmp
lahf
mov
repnz
popf
and
int3
stos
push
insb
call
sbb
mov
add
jmp
shlb
andl
sbb
and
xchg
and
shrb
cwtl
rol
test
and
sbb
inc
rcrl
inc
hlt
add
imul
xor
cmp
pop
orl
inc
push
stc
ret
stos
dec
mov
rcrl
push
cs
rcl
mov
push
pusha
repnz
adcb
jmp
sbb
lock
mov
dec
rorl
call
mov
shrl
mov
inc
pop
pop
or
add
cmc
imul
jae
mov
arpl
mov
lcall
dec
push
xor
fildll
fidivrl
sbb
push
aaa
popa
imul
sub
cmpsl
xchg
insb
mov
das
outsb
xchg
mov
push
movsl
pop
xor
data16
mov
in
mov
fwait
ret
pop
mov
dec
mov
jp
cld
adc
lcall
fisubs
pop
sti
push
ds
orl
pop
adc
jecxz
xchg
shrb
or
in
dec
push
out
jno
pop
je
xor
lea
and
jmp
xchg
insl
xchg
sub
pop
testl
in
and
sbb
jg
xchg
and
inc
dec
or
je
sub
dec
shrb
pop
mov
in
test
sub
les
xor
add
dec
cmp
rclb
je
sub
xcrypt-ctr
cmpsl
fistpl
cmp
push
xor
cmc
loope
push
mov
xor
pop
and
icebp
sub
pusha
sbb
test
mov
sub
pop
int
push
mov
cmc
adc
pop
xor
pop
pop
pop
sbb
push
imulb
adc
and
lahf
mov
jne
inc
repnz
mov
pop
sti
loopne
addr16
xchg
cmp
loope
jl
test
sarl
inc
jmp
and
cmpsl
addl
mov
popf
pop
out
loop
sbb
mov
add
or
pop
scas
in
std
add
xchg
fnsave
sbb
nop
fwait
ja
ds
adc
aad
jecxz
icebp
mov
popa
nop
aad
xor
mov
lds
inc
dec
lock
pop
std
nop
addb
and
in
dec
xor
mov
xor
in
mov
test
sarb
fnsave
fldl
mov
imul
adc
testl
faddp
stc
mov
cltd
inc
loopne
add
and
fmull
loop
popf
pop
push
adc
dec
xor
into
fwait
lcall
push
shll
sahf
rcrb
or
xchg
and
cmp
add
loope
subb
dec
mov
dec
cmp
pusha
scas
rcrl
hlt
enter
pop
outsl
jge
adcl
adc
leave
adc
jle
add
pop
call
push
sbb
hlt
loopne
sbb
jns
cmp
mov
dec
mov
push
adc
dec
or
scas
icebp
mov
test
in
dec
add
aas
addr16
loopne
add
sbbl
mov
and
rorb
mov
shll
add
pusha
xor
mov
gs
push
and
jno
mov
and
test
cmp
mov
xchg
xor
sbb
mov
into
jmp
ret
jge
mov
or
xor
push
push
jecxz
pop
dec
jg
mov
push
lahf
arpl
lahf
inc
rcl
int
mov
popa
ret
mov
xchg
test
aaa
sub
andb
addr16
and
or
cmp
mov
inc
mov
mov
jnp
repz
pop
fnstsw
daa
pushf
aaa
jle
sbb
jg
or
inc
sub
stc
adc
fstpl
cwtl
sub
stc
pushl
mov
and
jo
push
int
dec
out
and
pop
push
mov
inc
add
imul
fildll
ljmp
dec
in
mov
or
push
repz
mov
jns
mov
fcomi
mov
sahf
sbb
stos
mov
xchg
aad
lock
subb
mov
sahf
movsb
ja
loope
ret
ret
adc
jno
dec
jae
pop
lods
or
xchg
sbbb
les
repnz
jmp
aas
fs
loopne
mov
jnp
cmpsb
aas
xor
nop
mov
mov
or
mov
pop
cltd
mov
dec
xchg
jo
cmp
sarb
dec
sub
fld
inc
sbb
sbb
sbb
pusha
cs
scas
sub
xchg
mov
sbb
loop
daa
sbb
data16
cs
xchg
push
out
xor
push
outsl
push
jle
fucomip
into
add
sub
sbb
or
mov
xchg
jbe
jl
fs
and
inc
sbb
rcll
sbb
test
xchg
add
push
fcmovnb
test
fs
fildll
pop
dec
fwait
xor
dec
test
inc
aas
adcb
insl
mov
shl
flds
and
mov
loopne
loop
jge
faddl
sub
jo
or
cmpsb
xor
rorl
cmpsb
pop
mov
repnz
arpl
in
test
leave
mov
rorb
mov
arpl
push
stos
shlb
hlt
push
ret
fwait
cwtl
int3
stc
aaa
call
add
dec
rorl
sti
sub
xor
sbb
lods
mov
push
pop
icebp
sbb
mov
clc
add
icebp
or
mov
into
mov
sbb
adc
jo
xorl
cmc
pop
dec
test
clc
int3
pushf
xor
fnstenv
aas
sahf
cmc
out
imul
fdivrp
jno
and
insl
ja
insl
dec
outsl
repz
push
roll
psrld
mov
vcmpss
xchg
or
push
inc
inc
cmp
adc
fsubl
pop
ficomps
jmp
mov
fcomps
pop
adc
shrb
xor
dec
mov
sbb
sbb
mov
jnp
adc
adc
lahf
aam
jge
inc
fisubs
add
jle
stc
adc
int3
add
cld
push
xor
daa
filds
lds
sbb
mov
jle
and
je
js
inc
mov
sbbl
pop
dec
inc
hlt
push
push
dec
cwtl
filds
sbb
stos
test
jp
adc
or
sbb
les
mov
dec
xor
and
loope
iret
cli
pop
fsts
sarb
mov
adc
mov
aaa
mov
lods
shll
test
sbb
adc
and
sub
xchg
loopne
jle
rol
lods
daa
cmp
push
mov
dec
pop
push
aam
out
push
movsl
jle
sub
aas
mov
or
lock
cmp
fcoms
shrb
mov
or
pop
jns
lea
sbb
adc
sarb
inc
pop
xor
mov
cli
cmp
dec
test
cmc
mov
sub
mov
xchg
push
lcall
nop
sub
loope
cmp
xor
and
rorl
mov
inc
ja
lods
push
inc
stos
push
cld
les
loop
mov
and
dec
or
cmp
xchg
pusha
add
push
in
and
out
and
push
add
std
add
gs
xlat
cltd
les
push
push
pop
shlb
push
hlt
mov
add
cmpsl
xchg
mov
adc
sbb
out
xor
pushf
fimull
sbb
xchg
or
pop
and
fildl
pop
jno
mov
cwtl
and
jg
or
xchg
pop
shr
scas
fstps
leave
rol
gs
fistpll
sbb
sbb
push
sub
sbb
and
clc
insb
loopne
adc
loopne
rdtsc
sub
inc
fdivrl
call
jo
sbb
test
or
pop
mov
ret
xchg
lcall
daa
mov
data16
rolb
mov
subb
jmp
or
inc
imulb
call
xor
jmp
or
popf
mov
subb
xchg
ret
sbb
jns
stos
cmc
or
popa
and
xor
iret
popa
pop
mov
ret
andb
push
mov
shlb
lret
pop
out
mov
icebp
jg,pt
loopne
dec
xchg
xchg
sbbb
pop
inc
adc
sbb
or
lds
lret
frstor
icebp
sarl
cwtl
or
adc
stos
cmp
pusha
ret
ja
push
imul
cmp
ret
bt
rorl
push
add
sti
pop
or
lock
js
dec
adc
pushf
add
int
pop
decl
cltd
push
adc
inc
outsb
jne
push
lret
pop
mov
roll
ret
std
pusha
mov
lock
mov
sbb
mov
lcall
aad
filds
xchg
adc
out
dec
cmpsb
mov
imul
jbe
xchg
imul
mov
test
into
mov
jmp
mov
jp
add
outsb
mov
pop
pop
sbb
cwtl
aad
ss
loop
dec
and
sbb
mov
mov
ficompl
cmpps
add
jne
cwtl
sahf
mov
sti
push
test
xchg
js
fildl
scas
inc
jnp
jmp
fmuls
sub
mov
divb
jmp
xchg
loopne
outsl
pop
loop
movsb
mov
sbb
xchg
mov
je
cmp
push
imull
mov
ds
lock
xor
in
jb
mov
ss
adc
pop
lock
pop
mov
pop
in
ss
loopne
fldl
xchg
outsb
popa
andb
jecxz
cs
push
xor
icebp
push
push
mov
popa
dec
mov
add
imul
inc
inc
loop
push
incl
orb
in
adc
jb
jl
cli
cld
stos
arpl
ds
mov
insl
xor
shl
adc
shlb
ds
xor
push
mov
movsl
sbb
mov
ret
adc
mov
das
push
push
add
sbb
mov
enter
push
xorb
es
push
push
stos
lods
jb
repnz
cld
enter
dec
data16
cmpsl
mov
hlt
pusha
mov
pop
out
call
aaa
inc
add
jg
loopne
fcompl
les
ja
jp
incb
or
push
jl
xor
inc
push
loopne
ret
icebp
ficompl
add
dec
pop
push
clc
push
mov
shll
jne
push
out
mov
sti
or
xchg
jo
stc
out
push
test
std
aad
and
add
push
inc
cmp
sub
sbb
ret
adc
sbb
rcrl
pop
pop
fistl
ret
aad
int3
mov
jp
movsb
data16
mov
jnp
lods
add
pop
dec
mov
rclb
sbb
inc
add
pop
cld
pop
or
sbb
lods
and
inc
jne
inc
outsl
leave
adc
or
das
int
xchg
and
and
lds
cmp
and
push
mov
sarb
fdivrl
movl
inc
inc
dec
jnp
xor
dec
or
lret
cmc
pusha
xchg
jbe
add
test
mov
pop
mov
dec
and
add
sbb
add
pop
loopne
es
push
add
inc
or
push
pop
add
push
inc
cmp
std
fildll
clc
shld
add
push
xchg
in
addr16
movsl
mov
adc
sub
out
and
cmpsl
ds
adc
jp
test
call
loop
clc
in
push
lods
inc
dec
inc
adc
jo
sarb
loop
mov
test
mov
inc
clc
sub
sbb
mov
or
push
pop
ret
sbb
mov
jb
pusha
subl
ds
icebp
sub
jbe
int
push
adc
fmull
mov
xchg
adc
pop
sbb
xchg
adc
add
jo
mov
fwait
xor
mov
das
mov
or
pop
xor
add
and
sub
loopne
jo
mov
sub
fidivrl
icebp
mov
shlb
fisttpll
movsl
scas
sbb
cmp
dec
sbb
pop
fbstp
lret
pop
pop
mov
movsl
jle
mov
lret
jns
in
pop
decb
out
mov
dec
loopne
pop
push
jl
jb
outsb
or
mov
jno
mov
jp
jbe
hlt
shrb
cmpsb
jbe
mov
mov
jno
pop
dec
and
iret
mov
cmp
mov
mov
lock
enter
int
test
xchg
rcll
jmp
sbb
push
lret
pop
and
add
scas
daa
cmpsl
mov
xchg
mov
jle
push
das
clc
pusha
add
test
pop
add
mov
or
test
dec
sub
decb
insb
icebp
sub
push
add
mov
test
fiadds
dec
pop
add
sbb
std
shl
cmp
adc
movsl
adc
pop
addr16
add
js
loopne
pop
inc
sub
loope
mov
div
jo
mov
into
call
cltd
or
hlt
xlat
xor
cmp
repz
and
aad
fidivrl
lahf
adc
sbb
push
repnz
aad
mov
scas
ja
or
cmp
dec
or
and
jno
dec
and
mov
hlt
inc
loop
sti
test
xchg
stc
ja
add
and
inc
add
dec
push
jbe
loopne
and
mov
enter
lea
sbb
inc
adc
adc
mov
cmpsb
or
js
cmp
lds
mov
push
sub
pop
inc
cwtl
xor
test
jp
mov
cmc
shr
gs
out
inc
mov
and
repnz
hlt
xchg
loopne
fsubrs
sub
inc
js
imul
pop
ljmp
icebp
inc
push
jecxz
out
push
xor
add
dec
push
or
pop
push
push
loopne
sbb
dec
mov
imul
int
push
or
mov
mov
cli
outsb
xor
lea
scas
jo
out
add
cmp
mov
inc
ret
sub
insb
je
cmpsl
adc
mov
pop
push
push
imul
xchg
mov
sahf
movsl
imul
push
jbe
or
les
and
push
xchg
dec
ss
push
mov
gs
pop
dec
cmp
fldenv
and
popa
daa
mov
clc
cmp
mov
xlat
xchg
sub
mov
ljmp
mov
mov
adc
icebp
add
movb
mov
xchg
mov
mov
push
jle
lods
scas
pop
flds
inc
mov
int
cwtl
mov
fwait
ret
sub
inc
subb
sbb
cli
push
ss
out
sub
pop
stc
aas
outsl
ret
inc
sub
arpl
daa
test
mov
je
movsl
lock
leave
ds
nop
dec
test
jns
mov
sub
mov
cli
insb
mov
repz
pop
andb
xchg
loopne
clc
sbb
ljmp
sahf
push
cmp
cmp
mov
pushl
mov
and
stos
add
in
ljmp
jecxz
mov
sbb
xorb
dec
test
push
push
idivl
add
sub
inc
rcrb
sti
mov
shrb
js
or
popa
lock
je
notb
int3
or
pop
add
test
xlat
fisubs
fmull
pop
outsl
xor
outsb
mov
pop
mov
test
and
dec
fcmovbe
movsb
mov
lods
dec
repnz
jl
and
inc
out
sbb
movsb
ljmp
loopne
and
adc
sbb
icebp
ss
jle
roll
fstps
lret
pop
ljmp
shr
mov
or
cmp
cmpsb
push
mov
pop
test
inc
lcall
xchg
ja
adc
dec
push
mov
cltd
jg
daa
push
addl
adc
mov
and
incb
aas
cli
ss
in
push
xor
call
pop
enter
dec
insl
inc
loopne
mov
fidivrs
in
sub
das
aam
lock
jp
sbb
stos
mov
shrb
push
push
outsl
lods
cld
push
fs
sti
daa
inc
fsubrs
mov
mov
enter
xorl
ret
xor
dec
sbb
inc
insl
push
dec
enter
sub
les
sbb
sbb
movsb
dec
dec
dec
fsubrl
out
in
clc
mov
imul
test
movsb
iret
lock
mov
sub
aas
sarb
pop
push
jo
fwait
mov
call
or
mov
mov
push
sahf
pop
sbbb
arpl
push
pop
xchg
or
dec
nop
push
xchg
xchg
mov
fisubs
dec
out
push
iret
movsb
fcomps
jnp
push
enter
inc
orb
cmp
pop
sub
rcrb
adc
lahf
mov
mov
mov
pop
xchg
jg
jg
sub
or
bound
icebp
movl
or
mov
scas
push
scas
jle
sbb
out
ss
bound
add
mov
dec
mov
and
pop
xchg
sbb
add
mov
pop
mov
aam
mov
loop
movsb
call
cmp
or
ss
das
push
int
mov
mov
inc
adcl
pop
fsubs
add
xchg
out
jmp
xor
repnz
movsb
jo
inc
jnp
dec
or
int
add
sub
push
lods
sbb
xchg
and
rol
std
adc
aas
push
imul
int3
or
pop
lahf
cld
cmp
int
ja
fwait
or
shll
scas
dec
dec
dec
ret
sub
dec
scas
fwait
out
mov
cwtl
mov
inc
push
repz
inc
and
into
push
in
mov
dec
inc
clc
jl
aam
add
mov
lods
stos
vmovntps
dec
movsb
cld
bound
push
dec
mov
roll
js
addl
ljmp
test
sti
hlt
imul
out
test
mov
pushf
jae
rolb
int
or
adc
cld
or
ds
push
mov
dec
hlt
adc
xor
test
xor
mov
insb
mov
outsl
pop
mov
add
xchg
stos
adc
shl
jge
aas
fiaddl
mov
mov
sarl
inc
lret
test
sahf
in
add
mov
std
xchg
sub
mov
mov
js
mov
pop
xor
adc
nop
idivl
and
movsl
rorb
sbb
shl
add
cld
dec
push
xor
imul
icebp
sub
rcrl
sub
xor
shll
insb
push
popf
out
mov
fs
mov
jp
sarb
out
and
and
lds
imul
lea
xchg
cmpsl
add
lods
clc
add
scas
lret
sbbb
xchg
dec
test
adc
jle
mov
add
rorl
ljmp
sar
push
lret
jecxz
in
add
rcl
enter
dec
lods
xlat
mov
test
ss
stos
nop
pop
popa
sahf
push
push
add
xchg
test
push
cld
negb
jmp
adc
fisttpl
out
add
mov
mov
clc
mov
dec
dec
push
addb
lods
ds
cmp
aam
int
xchg
les
sbb
push
outsb
mov
dec
inc
sbb
das
cmpl
stos
mov
imul
cli
jg
in
xchg
sbb
xor
inc
push
and
sub
and
rolb
clc
gs
mov
dec
mov
notl
loop
mov
mov
in
rorb
add
clc
rolb
jo
int3
or
popl
push
stc
icebp
incl
cmp
push
inc
jle
mov
and
jmp
add
mov
push
xchg
insl
lods
inc
push
pop
add
fcomps
pop
repz
testb
inc
mov
cli
mov
xor
leave
fcomps
insb
sub
adc
daa
insl
clc
cld
push
insl
and
loop
rcr
inc
daa
mov
shrb
aam
sbb
mov
dec
cmp
push
lods
add
xor
fstpt
sbb
mov
ss
test
movsl
lods
or
cmp
fs
call
cmpsb
or
ds
add
shr
or
xor
pusha
js,pt
movsb
aaa
adc
cwtl
and
jg
loope
adc
mov
enter
inc
popa
mov
xchg
lock
mov
push
clc
sub
jecxz,pn
add
sub
or
xchg
bound
jp
and
fidivs
imul
inc
lret
scas
pop
mov
adc
xchg
cmp
mov
xchg
loopne
pop
or
fnstenv
std
cmp
ficompl
xchg
je
addb
in
mov
add
in
hlt
sbb
stos
addr16
pushf
iret
mov
inc
stos
pop
mov
pop
adc
push
or
sbb
fbstp
js
add
xchg
sbbb
xor
out
ret
int3
cltd
add
ds
cld
inc
shlb
inc
into
push
ja
lea
stos
jns
cmp
add
mov
cmp
xchg
testb
adc
movsb
arpl
ret
test
sbb
lds
inc
ja
or
or
sub
addr16
add
enter
dec
xchg
fstl
add
adc
xlat
xchg
fmuls
pop
inc
jae
xchg
fdivrs
clc
loopne
mov
inc
arpl
iret
and
or
jno
sub
fiaddl
test
scas
push
mov
mov
or
dec
inc
sub
dec
push
loop
xor
outsl
aaa
mov
cli
and
cli
orb
sbb
pop
aas
jp
xor
decb
jmp
add
push
cltd
add
adc
shl
xor
mov
lods
or
push
fistl
and
shr
inc
mov
mov
or
stos
in
inc
nop
pop
sub
arpl
scas
in
mov
push
test
and
sub
pop
mov
and
add
add
dec
test
sbb
imulb
pusha
shl
aam
and
mov
or
ror
and
push
add
dec
push
adc
ret
iret
mov
out
jno
je
or
lret
imul
test
call
sub
cmp
cmp
jge
inc
and
sub
dec
cmp
push
mov
jecxz,pn
lock
in
loop
dec
pop
push
mov
or
je
pop
push
loopne
sbbl
adcb
test
roll
inc
pop
push
ja
mov
repnz
fimull
pop
ret
mov
inc
in
pop
lds
rolb
cmp
cld
call
inc
dec
add
adc
jo
daa
mov
fbstp
xchg
mov
sub
inc
stc
roll
movsb
mov
push
icebp
daa
xlat
cmpb
xor
push
inc
add
roll
add
cld
add
into
mov
loopne
popa
and
pop
adc
lahf
cmp
inc
popa
stos
and
outsb
es
push
adc
scas
lock
clc
cmpsb
mov
dec
sbb
popa
dec
pop
mov
inc
mov
stc
test
aas
inc
rorl
dec
shl
mov
mov
mov
push
test
fcomps
or
fimull
jo
mov
ret
xchg
pop
adc
popf
mov
mov
xchg
lcall
jo
add
out
sbb
jns
jge
test
ficoms
sub
in
lret
aam
push
test
stos
lret
inc
fiadds
pop
stos
pop
jle
or
jo
add
sbb
or
ret
in
movsb
out
outsl
push
or
faddl
xchg
adc
mov
push
decl
mov
cmp
push
repnz
negb
pusha
frstor
mov
dec
xchg
mov
inc
mov
dec
xchg
bound
push
filds
inc
pop
add
inc
push
and
xchg
jnp
and
js
stos
in
stos
shlb
adc
sbb
in
sbb
jp
cld
xchg
mov
dec
inc
jo
and
mov
dec
cmp
cli
lahf
pop
pusha
jl
sar
fidivl
shll
lds
inc
aaa
push
cld
or
addb
mov
arpl
icebp
aad
into
mov
outsl
ljmp
insb
jno
xor
fcoml
ret
cmp
lock
cwtl
pop
xchg
inc
std
add
and
and
pop
fwait
lods
js
jle
or
push
inc
dec
fidivs
add
inc
mov
pop
adc
in
inc
pop
in
xor
call
jo
add
sbb
cltd
ret
pop
adc
jmp
jp
sub
sbb
xor
mov
push
lret
push
cld
cmpb
aaa
adc
out
mov
lahf
sahf
pop
adc
into
jns
mov
ljmp
or
or
ja
les
xor
das
xchg
hlt
enter
mov
cmpb
call
loop
ret
push
push
inc
mov
lret
push
mov
jo
xor
jle
dec
into
pop
xchg
sub
or
xchg
cs
dec
insb
mov
inc
add
sbb
ljmp
mov
add
dec
testl
or
cmp
sbb
xchg
push
xchg
loope
movsb
dec
je
in
xor
or
mov
pop
inc
add
mov
sbb
adc
or
lahf
lock
fstpl
push
icebp
xchg
lock
ret
mov
push
enter
call
xchg
ljmp
push
fsubl
mov
pop
std
fcomi
jne
push
push
lea
jecxz
and
jmp
jle
in
cmp
push
es
stos
xchg
lock
cmp
xchg
ss
xchg
les
shlb
push
movsb
scas
mov
rcll
shll
sti
mov
add
mov
out
inc
add
xchg
pop
and
and
inc
sub
push
fdivs
movsl
inc
mov
loop
aam
ret
mov
rol
out
jp
push
movsb
mov
jle
rcll
stc
idivb
and
call
cmp
bound
lret
call
mov
xor
test
fsubl
jo
idivb
mov
jp
add
fisttpll
test
mov
adc
mov
rcr
push
das
call
mov
cs
clc
cmpsb
sbb
push
adc
cli
mov
push
or
mov
mov
xor
inc
inc
dec
adc
pusha
cmp
loop
out
or
aam
movsl
pop
inc
call
push
insb
shll
stos
outsl
test
xchg
mov
in
fisubrl
xor
cmc
mov
leave
push
nop
and
xchg
fwait
pushf
adc
and
push
loop
pop
sarb
mov
mov
push
push
enter
and
loope
cli
dec
nop
add
cmp
push
outsl
daa
addr16
lock
or
rcrl
push
fisttpl
stos
lds
sahf
hlt
psubb
or
xchg
mov
mov
add
aam
movsb
push
jl
pop
pop
dec
fs
cltd
arpl
inc
pop
pop
xor
adc
vpunpckhdq
mov
sbb
aaa
push
push
lret
mov
push
add
scas
cmp
out
pop
les
cmp
jl
ret
add
mov
dec
push
mov
int3
push
fnstsw
adc
mov
cli
and
inc
xor
dec
push
push
sbbb
ret
mov
loope
mov
dec
xlat
ljmp
ret
and
ret
shr
incl
lea
inc
movsl
lea
pusha
popf
cmpsl
shrl
adcl
xor
loop
aam
pop
and
push
mov
ss
xor
jnp
jnp
xchg
jg
xor
jmp
mov
push
nop
addr16
rol
push
loopne
or
xchg
sbbl
dec
icebp
leave
lahf
mov
push
clc
sbbl
sarb
roll
or
lcall
aad
addr16
jmp
push
stos
inc
pusha
sbb
arpl
add
js
add
push
ds
sbb
orb
jmp
xchg
repz
cmpsb
and
roll
stos
add
lea
in
sub
lock
fs
stos
outsl
inc
sbb
sbb
add
mov
lods
aas
cli
mov
inc
mov
adc
inc
mov
mov
jge
aad
inc
sahf
adc
je
xlat
ds
fsubl
jne
aas
lret
inc
mov
mov
jp
loope
data16
or
dec
add
test
cwtl
adc
inc
xor
push
das
inc
ljmp
andb
hlt
sbb
xchg
jo
push
inc
clc
push
xor
sahf
and
mov
push
and
es
rolb
jbe
sbb
and
jecxz
lods
pop
mov
por
cmovle
lret
push
and
jbe
imul
push
aaa
test
fidivrl
xchg
fimuls
arpl
idiv
ljmp
gs
lret
inc
or
movb
decl
scas
and
addr16
adc
shlb
add
shrb
mov
jo
cmp
test
enter
mov
fldt
insl
clc
cmpsb
or
mov
inc
cld
xchg
fdivp
inc
lds
cmp
hlt
dec
push
mov
push
pusha
sbbb
add
cmp
stc
mov
pop
shrb
frstor
aas
loope
mov
out
ffree
mov
lea
mov
xchg
or
add
clc
xor
sbb
clc
adc
push
incb
push
mov
inc
in
xor
add
fmull
inc
stc
loope
mov
and
loop
pusha
stc
xchg
fcomp
lods
mov
pusha
rcl
push
aas
cld
cmp
fdivr
fdivrp
movsb
cmp
je
xlat
ror
mov
inc
in
jnp
dec
mov
xchg
icebp
xchg
mov
cmp
mov
je
mov
aaa
loopne
pop
xor
rcll
mov
iret
js
jb
es
scas
fidivrs
pop
or
pop
aas
adc
fisttpll
dec
mov
stos
mov
movsb
cmp
pop
movsb
push
xchg
jo
mov
ljmp
ret
repz
or
jo
pop
lods
inc
sbb
out
adc
test
in
and
in
cli
mov
sbb
push
xchg
dec
in
mov
scas
mov
mov
cltd
in
xchg
std
dec
loop
dec
mov
decl
mov
inc
mov
in
push
scas
mov
ds
decb
fcoml
cmpb
add
jmp
fdivrs
pop
pop
icebp
push
inc
dec
push
pop
das
into
imul
dec
scas
inc
pop
dec
cmp
rolb
popf
and
fsubr
rolb
shlb
stc
push
aam
jle
and
sarb
popf
mov
leave
push
mov
lock
in
or
sbb
fdivrl
push
sbb
dec
adc
sbb
aaa
aaa
shl
cmp
mov
lret
icebp
sub
movsb
outsb
jl
adc
pop
cld
cmp
ds
das
mov
repz
call
or
lock
cmp
or
out
inc
popa
mov
jbe
xchg
dec
lods
shl
add
insb
lods
pusha
inc
bound
jnp
fisttpl
cli
daa
mov
test
mov
popa
call
jge
xchg
jge
mov
jne
and
dec
push
jb
rolb
pop
ljmp
fwait
push
mov
fcoms
sub
je
pop
inc
jb
pop
loope
and
pop
jle
inc
inc
push
bswap
sbb
mov
pushf
repz
hlt
enter
jae
insl
xor
pusha
dec
cld
test
cmp
push
xchg
mov
pop
test
mov
mov
imul
adcb
push
xor
mov
push
xor
cmpsl
jl
mov
dec
jbe
cld
mov
inc
fsubl
adc
cmp
lock
push
loopne
lcall
in
test
push
adc
or
iret
jecxz
add
mov
push
pop
or
inc
test
mov
movl
xchg
int3
pop
dec
nop
push
je
lods
stc
adc
or
cld
cmc
xchg
or
fildl
dec
pop
jo
add
push
mov
jae
cmp
xlat
gs
outsb
or
push
cmp
and
insl
mov
mov
mov
outsb
adc
sub
lea
jb
adc
mov
mov
outsb
or
loope
and
add
lahf
roll
dec
inc
pop
adc
xchg
pusha
shrl
outsl
je
cmp
pop
pmullw
mov
and
push
adc
add
out
lds
fidivs
sbb
lahf
dec
adc
push
xor
sbb
lock
popf
aam
xor
push
insb
subb
pop
cmp
call
mov
inc
aaa
push
daa
sub
rcll
es
cmp
inc
sbb
movsl
adc
cmp
mov
or
adc
lea
mov
xorl
add
mov
adc
pop
mov
sub
imul
mov
sub
adc
dec
mov
adc
daa
dec
call
jo
test
cmp
sarb
icebp
dec
andl
push
jp
and
mov
jbe
pminsw
lds
ret
mov
shrb
jmp
popf
sub
mov
adc
or
mov
cli
sub
sahf
xor
mov
cmc
out
es
enter
pop
testl
out
sarw
daa
dec
cmp
cli
lcall
push
in
les
pop
jp
cmp
sbbl
cmpsb
es
repnz
inc
pusha
aas
or
pusha
out
imul
lcall
jbe
ds
mov
aam
out
mov
scas
jg
pop
dec
es
sub
vcvtpd2psx
add
inc
hlt
mov
add
cmp
push
sahf
scas
dec
mov
dec
loope
push
lea
mov
add
pop
shrb
mov
pushf
inc
loopne
push
xchg
adc
add
mov
hlt
add
pop
push
add
add
popa
pop
lock
or
push
cmp
stc
fsub
aaa
lret
ret
cmp
adc
test
je
or
xchg
shll
icebp
inc
and
fstpl
jl
mov
dec
and
pop
cmpsb
inc
shlb
cmp
pop
adc
sbb
sbb
push
add
sarb
vpaddd
mov
fldt
push
loop
push
pop
adc
push
js
pop
push
call
mov
sub
ljmp
xorl
inc
ret
aad
fs
loope
inc
enter
or
cmpsl
push
ret
pusha
test
loope
xor
in
stc
mov
fmuls
stos
add
lea
and
xchg
ss
adc
imul
cmp
adc
daa
mov
dec
loopne
sub
xor
mov
rcrb
or
push
pop
dec
out
rcll
or
dec
cs
xchg
add
nop
adc
jne
jno
pop
and
push
add
xchg
rcrl
pushf
test
add
pop
jmp
cmpl
jmp
and
mov
cwtl
ret
daa
jp
lock
jo
sub
cmp
insl
jae
js
jle
insl
into
test
aas
adc
and
adc
pop
cmp
out
repnz
sbb
movl
jne
fstl
pop
sub
cmpb
sub
arpl
psubusb
movsl
cmp
aas
dec
imul
enter
push
sub
add
and
push
les
loope
test
sbb
enter
loop
xchg
cli
sbb
mov
test
cwtl
mov
ret
enter
jnp
mov
lret
jbe
adc
sbb
lock
xchg
lock
les
add
pop
adc
or
xor
mov
cmpsl
adcb
lret
mov
sub
cmp
adcb
add
andb
popa
xor
dec
dec
pop
loop
add
enter
add
hlt
mov
jle
or
or
leave
dec
adc
pop
sbb
insb
shr
stos
or
xorb
sbb
inc
bound
mov
add
push
inc
loopne
iret
movsb
xchg
or
mov
cmp
mov
das
adc
daa
loop
jle
sbb
push
cli
test
mov
movsb
imul
repz
dec
or
mov
mov
je
movsb
push
cld
push
in
aam
cmp
ret
sub
adc
mov
loope
add
xor
inc
jo
cmp
call
push
lcall
adc
mov
cmpsb
jmp
mov
adc
jle
test
jecxz
sub
loope
mov
je
sbb
mov
jnp
mov
mov
xor
dec
call
cmp
fists
iret
xor
xor
popa
loopne
adc
rolb
xor
aam
jecxz,pn
adc
daa
mov
xchg
xor
mov
pop
sbb
jns
xor
inc
cs
jg
addr16
mov
in
je
mov
dec
aam
inc
inc
popf
ds
inc
filds
cmpsb
loopne
aad
dec
push
nop
mov
movsb
xchg
and
xor
jns
cmp
xor
mov
shl
adc
loope
movsb
xor
out
lds
ret
adc
stos
dec
fcomps
cmp
pusha
add
mov
aaa
xchg
jp
loope
sbb
pop
ret
push
dec
pop
mov
nop
cmpb
scas
sub
sub
mov
cmpsl
subb
iret
loop
sbb
push
arpl
andl
divb
push
sbb
clc
fsubr
subb
cmp
mov
ds
lret
dec
mov
lock
xor
pusha
push
add
xchg
sub
inc
dec
or
das
and
adc
xchg
test
shrl
aaa
mov
fs
or
ds
sahf
imul
sub
add
shl
lods
not
test
add
sbb
mov
adc
fisttps
push
xchg
mov
cwtl
add
pop
jnp
loopne
movsb
lret
loopne
pop
je
jge
adcb
xchg
cwtl
movl
cld
sarl
pop
sbb
jns
dec
mov
test
pop
and
sub
hlt
loopne
inc
addr16
mov
jns
orl
rcrb
idivl
mov
lea
xor
test
add
sub
into
sub
rorb
fs
repz
mov
dec
add
mov
jmp
aaa
daa
in
cmp
cmpsb
push
pusha
jo
sub
bound
adc
hlt
aam
sarb
popa
daa
push
mov
jl
movsl
xor
add
lock
and
or
test
sbb
adc
jnp
and
ljmp
jecxz
jle
mov
push
cmp
mov
dec
push
mov
mov
test
sbb
inc
xlat
es
pushf
lods
arpl
adcl
xchg
addr16
and
jl
cmp
pop
mov
or
dec
popf
and
daa
or
testl
inc
imul
jmp
fiadds
dec
sub
stos
sbb
enter
xor
mov
mov
xlat
lahf
sub
iret
pop
cmp
stos
xchg
std
loop
in
push
ljmp
sbb
shlb
std
ret
je
aam
inc
jecxz
cmp
and
push
add
mov
cmp
stc
pop
and
jp
subl
pop
mov
pop
jle
arpl
js
enter
mov
dec
addr16
rep
in
sub
lock
xchg
mov
adc
mov
push
add
in
inc
adc
mov
pusha
push
dec
jg
push
dec
dec
mov
mov
mov
mov
jp
xlat
jno
dec
pop
decl
mov
jnp
mov
jo
cmp
add
outsl
cmp
in
xchg
scas
sbb
in
inc
mov
pop
shr
hlt
in
sub
dec
dec
pand
lret
pop
in
adc
cs
dec
jmp
sub
into
icebp
sub
iret
jb
xchg
add
mov
cmp
std
fdivrs
jl
push
call
mov
or
jbe
sar
xor
fs
mov
les
mov
pop
cltd
xchg
jle
cmpsl
lahf
and
pop
imul
mov
jp
daa
scas
scas
int
shl
cmc
and
sar
pop
mov
xchg
push
adc
mov
fcomip
push
ret
sub
aas
push
insl
arpl
cld
pop
adc
sar
xchg
cmp
push
pop
pop
or
fs
add
jb
lret
std
mov
inc
daa
cmp
hlt
mov
popa
xchg
out
cld
cmpb
hlt
jl
and
push
push
hlt
lods
adc
pop
nop
cmp
leave
movsb
dec
outsb
xor
sub
fidivs
sbb
jp
or
insb
pop
shll
or
outsb
and
add
call
test
clc
out
and
xor
rcll
pusha
arpl
cmp
mov
sbbb
sbb
and
mov
jnp
mov
and
dec
add
scas
nop
mov
or
inc
sbb
mov
aas
movsb
in
scas
mov
negl
aas
iret
mov
popa
ret
mov
add
mov
add
jp
fs
sub
mov
mov
mov
invd
ret
jp
std
aad
inc
cmp
adc
push
xchg
add
inc
sbb
xor
add
sub
sub
test
bound
jo
or
insb
mov
je
std
push
jp
mov
cmc
adc
or
xchg
fbld
inc
cmp
sbb
pop
fidivs
pop
push
das
cmp
int3
inc
and
lock
xchg
dec
mov
pop
pop
mov
xlat
lock
dec
bound
xchg
push
push
adc
xor
jno
int3
lahf
and
insb
add
gs
loop
adc
adc
outsb
jo
push
push
subb
add
and
lcall
add
out
and
inc
jle
test
or
add
and
cmp
mov
fisubl
dec
jne
jns
cmp
mov
in
pop
enter
loopne
or
insl
loop
push
fisubs
popf
hlt
inc
mov
leave
into
outsl
lods
inc
mov
jns
mov
fisubrl
loopne
xchg
jp
add
adc
jge
or
add
push
pop
aas
icebp
add
sub
lcall
sub
add
push
xchg
rcrb
ret
fimull
fdecstp
push
cmpsb
push
dec
stos
mov
sub
and
mov
dec
lods
pusha
adc
jl
lahf
pop
pop
jecxz
mov
enter
movsl
ds
pop
jl
mov
adc
clc
add
sbb
movsl
mov
pop
and
xchg
jl
fiadds
and
pop
pop
cmp
stos
ss
popl
mov
mov
adc
inc
out
xchg
inc
fidivs
xor
aaa
andl
sub
add
adc
fwait
or
jle
addl
inc
mov
mov
xor
or
test
adc
outsb
insb
dec
jp
xor
cmp
repz
cmp
cmp
and
jnp
cmpsl
fldenv
pop
orb
xchg
inc
cld
jg
shr
fidivs
or
repnz
sbb
pop
pop
aad
mov
push
movsb
mov
adcb
inc
mov
iret
xchg
cmovno
xchg
pop
mov
add
or
fwait
sbb
push
test
hlt
inc
mov
lods
jno
inc
insb
mov
inc
adc
cld
and
enter
mov
cmp
cli
stos
mov
loop
push
test
lock
add
inc
mov
imul
pop
ss
repz
testb
lock
jnp
pop
xchg
dec
mov
sarb
lock
mov
mov
or
popa
or
lcall
gs
mov
mov
push
jo
int
xor
movb
cs
adc
sub
es
fsts
push
pop
rolb
push
xchg
pusha
xor
jno
std
xchg
push
dec
sbb
fucomi
xor
inc
lods
icebp
cs
test
mov
cmp
fwait
add
movups
jg
mov
and
shll
jnp
dec
pop
mov
popa
pop
mov
inc
or
mov
xor
or
xchg
inc
ss
adc
sbb
sbb
cwtl
cmpsb
xchg
inc
sbb
vpmuludq
loopne
adc
jo
andb
xchg
pop
mov
out
jecxz
add
and
sbb
mov
push
arpl
or
pop
dec
push
in
subb
call
pop
lock
mov
jg
sbb
enter
loop
push
dec
in
loop
aaa
shlb
fsubr
and
inc
repnz
lods
dec
inc
repz
rclb
jp
imul
pop
jns
cld
push
mov
pushf
jno
shrl
and
sub
or
inc
cmpsb
mov
aad
jbe
in
bound
or
adc
add
mov
push
adc
mov
dec
shlb
sbb
sbb
lods
push
loope
sbb
in
mov
das
repz
cli
loopne
cmp
or
std
ljmp
callw
xchg
cmc
popa
into
fucomp
ja
push
movsl
lods
push
push
faddl
dec
rclb
jb
repz
mov
push
leave
mov
cmp
test
mov
insl
xchg
test
outsb
push
scas
cmp
and
bound
mov
clc
push
ret
out
mov
mov
in
popa
jp
lret
int3
add
jg
ret
js
imul
into
cld
pop
fs
adc
shl
push
adc
push
pop
adc
adcl
aam
xchg
js
cmpsl
sbb
mov
loope
lea
lock
add
push
cmpsl
ds
aas
pop
dec
jb
jecxz
cmp
aas
cmp
mov
hlt
mov
mov
aaa
xor
jge
mov
mov
sahf
push
pushf
xor
clc
std
scas
jle
mov
mov
sbb
pop
and
icebp
pop
ja
mov
call
xchg
rorb
insl
test
sahf
push
inc
mov
les
sar
adc
mov
adcb
shr
fwait
sar
dec
pop
in
cmp
mov
stos
add
fwait
shr
mov
ja
mov
lds
jle
outsb
sub
mov
dec
or
js
into
insl
mov
rcrl
addl
icebp
xlat
out
inc
jmp
dec
and
fisubrl
paddusb
incb
or
cld
cmp
or
scas
in
pusha
jnp
insl
pop
pop
idiv
dec
push
push
xchg
jmp
jo
sub
fidivl
mov
imul
dec
jb
loopne
std
gs
sub
mov
stos
sub
or
repnz
in
pop
pop
cli
fimuls
inc
sbb
push
fcmove
push
or
mov
cmpsb
pushf
ss
jecxz
lods
adc
sbb
xchg
hlt
sub
mov
dec
pop
jecxz
scas
mov
cmpsl
pop
jle
imul
hlt
in
es
and
pop
loop
xchg
ss
dec
pusha
mov
gs
lret
cmpb
mov
pop
jp
mov
subl
mov
dec
aad
arpl
pusha
inc
pop
push
and
stos
dec
cwtl
push
test
jo
clc
arpl
push
fsubr
sbb
fs
mov
push
adc
rclb
stos
sbb
dec
rclb
jmp
adc
dec
cwtl
divb
inc
loop
cmpsb
clc
pop
testl
stos
int3
add
ss
dec
pop
test
es
xor
sbb
cli
mov
inc
and
ret
push
pop
and
or
loopne
mov
push
pop
lods
cli
hlt
xor
pushw
mov
pop
or
aaa
mov
or
dec
imul
ror
shr
cmp
sub
xchg
sub
out
andb
inc
pop
or
shlb
ja
and
push
mov
add
add
outsl
xlat
jbe
ljmp
imul
push
rcrb
fisttpl
cmpsb
lahf
incl
and
loopne
nop
jne
mov
pop
aas
loope
adc
push
adc
push
mov
bound
aad
mov
dec
push
push
mov
or
call
cmc
andl
push
mov
jl
popa
cmpb
push
rolb
inc
pop
sbb
inc
adc
testb
inc
aad
pusha
dec
insl
leave
push
mov
outsb
aam
shlb
push
push
popa
dec
shlb
out
shrb
lahf
sar
clc
loope
push
push
mov
jmp
shl
xchg
in
add
enter
lods
xor
fbstp
pop
ret
or
mov
insb
sbb
clc
and
rorb
stos
popl
sbb
pop
subb
lock
and
adc
and
outsl
or
adc
add
push
dec
sub
dec
fwait
popa
add
xor
xchg
sbb
xor
and
sbb
sarb
cmovg
sbb
mov
pop
push
roll
xchg
dec
es
and
adc
dec
movsl
push
mov
mov
loop
mov
mov
das
cmp
sub
or
mov
dec
mov
outsl
hlt
lds
add
dec
rorb
sahf
movsl
or
mov
mov
in
xor
pop
cmp
dec
out
mov
movsb
insl
out
mov
mov
mov
cli
dec
mov
in
rcr
jmp
jmp
pop
ret
sarl
aam
xchg
call
sbb
and
dec
cs
inc
push
shrl
loope
lds
mov
dec
cmpsb
test
add
push
clc
and
and
pop
daa
lcall
lods
dec
test
pusha
int3
cmpsl
mov
loop
sub
nop
jp
shll
cs
jge
and
mov
or
scas
add
ss
std
and
out
add
mov
mov
lahf
mov
fidivrl
into
addr16
dec
inc
push
lret
lea
pop
or
fbstp
cmp
shll
call
xchg
mov
dec
or
mov
pop
push
dec
js
add
cmp
add
ljmp
sub
out
add
popf
and
mov
test
mov
decl
dec
mov
loope
out
adc
dec
xchg
add
fwait
inc
mov
jb
push
xor
mov
sub
jl
add
and
cli
cltd
pop
pop
push
clc
add
jl
aad
cmpsl
cs
jle
pop
sbbl
scas
sub
sub
scas
mov
lret
add
or
add
loopne
cmp
ja
shrb
push
inc
nop
inc
stos
movsb
inc
push
jbe
popf
lea
xchg
jp
and
push
pusha
aas
ss
jecxz
mov
inc
ret
push
xchg
aas
repnz
or
push
leave
scas
sbb
inc
adc
push
es
cs
jmp
add
mov
enter
shlb
imul
or
mov
cli
or
cltd
xor
inc
pusha
pop
mov
adc
pop
push
cld
pop
add
popl
aas
adc
dec
insb
aaa
sbb
jge
insl
test
call
push
sbb
mov
lds
lcall
addr16
fisttps
dec
jo
xchg
and
ss
bound
sbb
and
adc
pop
inc
push
push
add
push
pop
mov
js,pn
test
fbstp
scas
push
xor
cmp
add
adc
pop
lods
dec
in
xorl
xchg
sbb
movsb
jnp
jo
jns
push
cmp
adc
ljmp
xchg
fdivs
push
setne
das
lret
sub
mov
dec
pop
pop
pop
testb
roll
inc
mov
cmp
dec
push
ret
sahf
rol
xchg
mov
loop
push
call
sub
rorb
fdivl
ljmp
cltd
mov
sbb
adc
pop
fcoms
mov
je
mov
stos
popf
arpl
std
xchg
jbe
mov
sbb
xchg
das
mov
aam
call
push
aaa
xchg
scas
ret
leave
insl
jbe
dec
out
and
sbb
cmp
test
xlat
pop
call
dec
ss
cmp
xor
jl
adc
sbb
push
xchg
je
sub
mov
insb
movsb
out
std
add
cwtl
in
pop
adc
push
ljmp
sub
push
mov
pusha
or
lods
pop
xorl
sbb
fmull
test
sub
add
inc
add
inc
int
sbb
icebp
ljmp
push
lock
jecxz
sbb
xadd
fcoms
xchg
jo
dec
push
movb
dec
xchg
mov
rcr
mov
inc
lods
push
sbb
and
xchg
clc
add
sbb
jl
out
jne
push
mov
push
or
push
jne
adc
inc
sbb
sbb
pusha
pop
sub
mov
mov
add
test
rolb
call
outsb
ja
push
mov
push
cmp
push
clc
add
fwait
add
sub
sub
cmp
inc
pop
idivb
push
adc
xor
daa
shll
pop
pop
insl
cmp
add
pop
or
push
xor
push
ret
pushf
aam
lret
dec
or
dec
outsl
fisubl
xor
stos
sub
pop
cmpsb
addl
sub
pop
out
xor
lock
cwtl
pushf
test
test
pop
mov
out
xor
test
mov
mov
or
fcoml
mov
lret
mov
mov
aad
mov
lock
in
addb
out
clc
subl
cmp
mov
xchg
adc
call
in
cwtl
enter
add
shll
xchg
in
test
push
pop
imulb
xor
cld
jmp
ret
andb
xchg
fiadds
iret
lret
add
cwtl
mov
jge
fs
lods
je
sbb
add
pop
adc
mov
aas
mov
mov
test
les
ds
in
jne
mov
out
add
fisubrl
jno
xor
sub
sar
jle
stos
jne
scas
inc
mov
cmc
shrb
cli
test
or
adc
cmp
jo
inc
xor
aad
in
push
fs
lods
pusha
dec
jecxz
shrb
push
pop
mov
lcall
cmp
mov
or
aas
rol
mov
fcomip
mov
mov
rorb
xchg
movb
rclb
jle
cmpsl
or
es
push
dec
pop
add
ret
daa
mov
cmp
sub
and
sbb
dec
mov
addr16
xor
aam
roll
jmp
inc
cmp
rorb
stc
dec
xor
inc
scas
pop
xlat
xchg
lds
out
or
lret
inc
sbb
rorl
inc
jle
popf
push
fld
test
xchg
push
mov
push
cmp
nop
out
dec
in
lds
orb
lock
or
push
je
xchg
repz
enter
and
test
loopne
push
hlt
imul
scas
repnz
lret
cmp
pop
daa
lcall
mov
lock
or
pop
jns
mov
pushf
mov
lds
fsts
mov
and
or
insl
sbb
xchg
icebp
cwtl
lods
add
xor
aam
js
loopne
mov
movsb
mov
or
and
or
push
orl
inc
pushf
das
je
push
mov
mov
push
jg
or
add
inc
fistl
leave
cmc
fwait
mov
adc
mov
ret
frstor
cmp
add
cs
adc
std
push
sbb
repz
jmp
fs
inc
and
jbe
fsubp
mov
or
test
pushf
scas
arpl
xchg
xor
je
stos
push
pop
mov
popa
leave
das
sub
push
lods
add
imul
xorl
push
scas
push
adcb
lds
mulb
add
daa
lcall
inc
sbb
mov
pop
push
or
pop
push
mov
rorl
in
add
pusha
jo
jle
ja
test
pop
sbb
xlat
dec
or
cmp
push
in
jmp
cmc
push
aad
lods
fnstcw
fsubrs
int
mov
pop
push
add
dec
shr
adcl
mov
jmp
xchg
mov
add
arpl
bound
mov
jno
and
lret
ljmp
pop
dec
adc
ficoms
push
imul
ds
sub
mov
jns
pop
movsb
push
pop
jae
or
push
xchg
jge
arpl
xchg
cmp
add
fs
addl
sbb
sti
shr
adc
add
out
out
lcall
and
jno
test
or
dec
out
daa
mov
adc
mov
push
popa
pop
ret
jmp
ljmp
push
data16
and
adc
mov
popa
xor
add
lods
cmp
stc
enter
xor
or
xor
rorl
mov
movsb
and
mov
shr
mov
pusha
inc
cld
aad
push
or
xor
and
aam
dec
pushf
jmp
jecxz
test
push
sbbb
scas
shll
mov
ss
hlt
test
mov
mov
sarb
stc
xchg
cmc
mov
or
xchg
add
mov
push
and
cmc
xchg
mov
imul
push
inc
icebp
sahf
lret
or
mov
jmp
stos
jne
rcll
fwait
inc
stos
loopne
push
jle
dec
test
clc
ss
stos
ret
jne
sti
add
pop
insb
jno
inc
add
sbb
repz
adc
daa
dec
add
pop
xorl
icebp
cmp
outsb
sbb
push
xchg
stos
jmp
mov
and
pop
test
sub
fdiv
pop
int
push
sub
xchg
and
popa
xor
lods
and
mov
push
pop
das
jp
jge
jle
fcoms
addr16
in
inc
stos
aaa
pcmpeqd
cli
dec
loop
ss
xchg
scas
add
mov
test
in
mov
stos
mov
xor
push
sub
add
stos
adc
sbb
xchg
or
jecxz
or
js
int3
cmp
cltd
mov
mov
jno
cwtl
scas
popa
std
pop
xchg
jne
inc
enter
rorb
inc
stos
fwait
bound
pop
fdivrp
dec
aam
push
pop
xor
fistpl
and
cmpsl
cmp
cmp
mov
in
xchg
push
sbb
dec
inc
mov
xor
inc
shll
adc
cld
aam
pusha
test
cmp
clc
mov
or
mov
lahf
mov
cmp
lea
or
movsb
pop
lret
push
cmc
int3
sbb
mov
insl
pop
sahf
xchg
fistpll
adc
out
sbbl
mov
inc
jecxz
ljmp
dec
ret
and
dec
xorl
nop
xor
dec
lret
cmpsb
push
popf
jecxz
push
stos
das
ds
push
addr16
adcl
pop
aad
mov
outsl
das
mov
lret
mov
rorb
sbb
in
push
or
sub
mov
stos
fdivrl
push
jecxz
jnp
push
mov
or
in
clc
jg
stos
imul
add
dec
push
mov
and
sub
jecxz
std
imul
xchg
dec
push
je
outsl
jecxz
inc
stos
jl
push
xchg
lock
aam
jns
es
sub
and
shrl
out
xchg
add
mov
icebp
xor
inc
je
cmp
rolb
mov
icebp
adc
std
sbb
inc
xor
push
jl
xor
sub
pop
pop
xchg
nop
outsb
js
mov
or
cmp
iret
lods
add
inc
imul
mov
jge
xchg
jbe
mov
pop
fsts
or
add
xchg
xlat
cli
js
lahf
mov
scas
into
mov
jl
repz
sbb
rorl
jl
pushw
cld
clc
lea
pop
sub
cwtl
sbb
cmpsb
or
push
mov
mov
addl
rorb
and
cmp
mov
inc
jmp
dec
jnp
lods
dec
push
fld
sbb
mov
jnp
or
nop
xchg
lea
cmc
or
mov
sarl
cmp
daa
call
cltd
cld
push
adcb
lock
addb
into
or
aam
ljmp
dec
mov
sti
cwtl
in
cmp
mov
das
leave
leave
mov
sbb
imul
pushf
jecxz
or
push
and
inc
popa
stc
inc
mov
pop
push
jl
mov
aad
add
and
arpl
mov
daa
adc
and
sbb
mov
xor
or
roll
nop
sar
outsl
sub
aas
shrb
add
sub
mov
shll
in
sbb
or
dec
sbb
pop
sub
cwtl
mov
sbb
xchg
movsl
mov
mov
mov
or
mov
cmp
pop
bound
xor
addb
and
in
fwait
adc
pop
jmp
testl
nop
fidivrs
and
or
leave
dec
subl
xchg
pop
jno
dec
lahf
cld
adc
dec
lods
and
sbb
sub
mov
test
pop
xchg
mov
addr16
mov
add
les
mov
or
ret
xchg
jbe
add
aas
jmp
fadd
in
shll
mov
push
cmpsb
jge
dec
inc
popa
loop
jecxz
shlb
rol
inc
xchg
idiv
xlat
mov
inc
mov
addr16
push
cmp
outsb
rcll
mov
out
cmp
inc
sbbl
fbld
mov
adc
clc
jo
lods
mov
ret
dec
push
pop
hlt
pop
mov
in
jo
into
and
ss
push
icebp
pusha
lock
ret
stc
jns
loopne
into
mov
lods
xchg
rorl
jo
fisttpl
pop
pop
add
pop
mov
pop
mov
pop
stos
insl
or
jo
xor
mov
jl
push
sbbl
rorl
outsl
inc
mov
das
mov
inc
movsl
aad
cmp
or
or
bound
mov
jp
and
jge
xor
fsubrs
jb
xchg
stos
jno
push
adc
sbb
and
mov
rcr
add
ret
xchg
scas
dec
cmp
add
or
push
cmpsl
mov
out
adc
jbe
xchg
jnp
in
or
mov
cmp
adc
inc
cmc
decb
fistps
sbb
sbb
andl
xor
push
gs
rolb
push
pushf
mov
cwtl
cmp
push
xchg
sbbb
add
out
cmp
imul
imul
sub
jno
or
int
inc
int3
adc
cs
cmp
test
sub
cmpsl
add
iret
es
mov
dec
pop
loope
test
es
sbb
adcb
cmp
push
cld
mov
leave
js
jg
mov
std
fs
pop
sbb
imul
in
xlat
xchg
push
push
les
sti
loopne
inc
add
pop
inc
or
xchg
rorl
das
mov
adc
mov
mov
xor
add
aam
ret
mov
inc
test
xchg
jo
add
dec
and
push
xchg
test
fcoml
add
add
sbb
mov
das
ljmp
js
ja
xchg
dec
add
add
pop
roll
xor
clc
or
mov
or
fs
sbb
ret
inc
lods
and
push
rorb
loope
xchg
inc
sbb
dec
in
adc
cli
hlt
rcll
add
shl
xor
jp
mov
jecxz
popf
fidivrl
xor
lods
or
mov
fs
shl
aam
sar
mov
sbb
bound
mov
cmp
jns
mov
mov
js
pop
mov
loopne
clc
push
fdivr
sub
into
mov
adc
nop
test
jno
inc
or
mov
cmp
fxrstor
stc
push
call
and
push
mov
andl
xor
add
ret
repnz
imul
sub
sbb
inc
push
mov
cli
cli
dec
xor
add
rcrb
mov
push
mov
adc
xor
test
jo
inc
push
and
ret
jbe
stos
fdivp
add
sti
xchg
pop
sbb
sbb
adc
sub
cwtl
sarl
cmpsb
movsb
and
mov
or
ds
add
mov
cltd
or
jbe
mov
xor
inc
cmpsb
jmp
in
add
jg
xor
insl
sub
sub
hlt
xchg
xchg
push
jo
loopne
cmp
jle
mov
dec
mov
fwait
adc
ss
data16
cmp
cmc
out
adc
adc
cmp
push
clc
es
inc
adc
dec
cwtl
fwait
and
adc
jb
orb
sbb
inc
lcall
popa
xchg
dec
inc
ret
dec
adc
sbb
mov
leave
std
mov
repnz
sbb
adc
xor
fadds
or
decb
mov
lods
push
mov
orb
or
mov
in
xor
and
jp
mov
adc
pop
add
dec
cmp
or
add
scas
pusha
mov
lahf
repnz
sti
fs
inc
mov
shlb
push
sbb
mov
clc
dec
xabort
cmp
jecxz
les
shll
dec
mov
xchg
insl
jne
mov
gs
mov
mov
mov
insl
inc
add
mov
push
mov
xor
pop
jne
sub
cwtl
sahf
jmp
fstpt
aam
xor
pop
ss
and
mov
loopne
push
orb
add
or
adc
mov
mov
int
adc
test
repz
mov
mov
xor
out
jae
fisttps
lahf
mov
cmp
dec
mov
fbld
pushf
aam
nop
loopne
mov
or
lods
or
and
or
push
push
insb
add
mov
cmp
and
pop
lea
dec
into
mov
mov
mov
fdivr
pop
push
test
loop
ljmp
fld
jle
sub
scas
mov
sbb
movsb
jmp
out
adc
bound
out
mov
sub
mov
cmpsb
cmc
xchg
out
sbb
aaa
and
pop
loope
xchg
and
test
pushl
cli
into
sbb
mov
popf
ror
dec
pop
fsubrl
outsb
sub
dec
push
add
cli
sub
cmp
sub
or
and
add
mov
or
sbb
push
xor
mov
or
adc
pop
xor
cmp
cmp
leave
test
enter
pop
test
jnp
js
mov
movsb
xchg
stos
jbe
xor
push
or
jge
lock
loope
call
jp
sub
lods
jmp
test
scas
js
idivb
orb
int3
roll
xor
loope
pop
jb
push
inc
out
dec
push
fimull
in
xor
mov
xor
jb
fdiv
insb
mov
into
cld
out
dec
rclb
mov
or
loope
cmpsb
imul
mov
lods
into
mov
push
lock
xchg
add
inc
cmpsl
pop
iret
clc
fsubl
mov
mov
and
cwtl
xchg
xchg
mov
mov
decb
push
pop
clc
sub
xchg
addr16
cmp
in
add
popa
adc
jo
add
jno
or
pop
cmpsb
inc
adc
add
push
cld
jnp
pop
mov
add
mov
test
popf
cmp
inc
push
arpl
xchg
sub
push
ja
or
push
or
inc
jg
and
and
nop
cmc
dec
jmp
aam
and
and
add
jb
sbb
push
push
ret
mov
loope
push
xchg
in
sub
aad
mov
sub
mov
imul
inc
nop
shrb
insl
ret
ret
pop
dec
pop
js
cmpb
sbb
std
test
push
cwtl
sub
jl
jecxz
mov
lea
jns
cmp
fildll
ljmp
mov
and
dec
hlt
icebp
outsl
js
jae
mov
or
jl
adc
add
in
dec
cmp
xor
shl
les
inc
jbe
mov
leave
shr
roll
clc
sbb
push
mov
pop
cld
inc
xchg
sbb
sbb
mov
mov
repz
dec
lret
lds
outsb
cld
push
int
or
ss
pop
jecxz
sbb
xlat
cld
mov
xchg
ds
dec
push
sub
push
jbe
dec
std
shl
ljmp
push
xchg
test
outsb
or
cmp
sbb
fbstp
and
xor
add
movsl
dec
push
ds
cmp
ret
add
imul
add
mov
test
mov
in
or
fisubrl
das
loopne
aam
and
fdivrs
ds
or
xchg
jae
adc
sub
add
fdivrp
or
jl
adc
lods
xor
out
cli
dec
adc
inc
cli
mov
shl
mov
imul
out
mov
lds
test
stos
into
jmp
add
mov
jl
loopne
aas
hlt
ret
and
js
sbb
xor
sbb
adc
xchg
stos
mov
enter
xor
sub
stc
dec
mov
jnp
sub
cmp
mov
aad
dec
inc
lret
or
sub
pusha
std
push
insl
shrb
mov
pop
pop
adc
push
dec
pop
inc
in
adc
xor
divb
sub
dec
mov
mov
pop
cmp
in
sbb
sbb
std
xchg
fistl
repnz
jle
add
pop
stos
cmp
sbbb
mov
fistpll
xchg
adc
ret
test
cli
push
jl
lock
iret
jno
mov
ret
or
push
sbb
std
out
xchg
xor
loope
sub
and
clc
cmp
jecxz
cmp
clc
les
mov
push
mov
pop
ja
adcb
rclb
lcall
jle
pop
add
mov
pop
cmp
divb
push
dec
add
push
test
mov
loopne
mov
bound
fidivrl
lret
push
lods
scas
addb
inc
adc
or
mov
and
sarb
add
mov
cmp
mov
inc
dec
dec
les
sub
icebp
test
adc
int
jge
push
and
lret
bound
mov
aad
ror
rcrl
cmp
push
add
shll
sahf
jo
sbb
lea
xchg
sub
pop
clc
lock
mov
imul
cmc
shlb
cs
push
and
mov
push
or
sbb
sbb
mov
pop
mov
test
mov
or
mov
fisubl
dec
jo
loope
mov
aam
data16
inc
adc
pop
push
rolb
pop
mov
outsl
jo
pop
shrl
lcall
lcall
pop
dec
sbb
shlb
lock
mov
insb
dec
inc
xorps
fistl
mov
push
addl
dec
sub
mov
pop
dec
dec
sbb
mov
aas
inc
cli
pop
scas
dec
mov
es
add
gs
mov
mov
pusha
pop
jo
lock
push
sbb
adc
jbe
xchg
dec
mov
sub
mov
in
adc
aam
pop
sub
adc
push
pushf
jecxz
push
add
pop
faddl
int
adc
dec
rorb
lret
dec
insb
xchg
loop
xor
and
mov
inc
mov
lcall
idivb
xchg
sub
and
lock
cli
sti
pop
jp
push
sar
dec
fdivrl
add
scas
cli
ret
rclb
js
inc
sbb
lcall
adc
pusha
test
inc
xlat
push
out
lret
push
add
into
lods
call
test
xor
pop
mov
imul
andl
int
push
add
push
add
inc
push
cmp
mov
jle
lods
sub
dec
inc
or
test
les
enter
subb
pop
sbb
dec
push
pop
std
cwtl
aam
push
cmc
push
cld
sbb
push
mov
outsl
mov
xor
pop
sbb
dec
and
ret
lcall
aaa
insb
fisubrl
sahf
jb
ret
jo
loope
lea
mov
cmpsl
out
mov
mov
jle
mov
cld
lea
fstpt
aas
andl
xchg
inc
push
lahf
stos
js
xchg
and
xchg
outsb
add
loopne
add
es
jo
adc
rorl
xchg
push
pop
xor
dec
mov
jb
jbe
jne
pop
movsl
frstpm(287
add
pop
clc
jo
loop
in
fmul
in
inc
cmp
fsubrs
scas
add
push
xor
jle
aas
dec
push
push
decl
cwtl
pop
mov
dec
aaa
outsl
add
inc
rcrl
insb
push
aas
movl
imul
insb
test
ret
dec
pushw
jg
cmp
fidivrs
pop
sarl
jmp
ljmp
jle
das
inc
inc
das
std
push
xchg
pusha
pushf
jnp
jl
sub
loopne
stc
add
mov
xchg
push
fisubl
nop
lds
add
jo
mov
xchg
jbe
xorb
test
xchg
shr
push
pop
push
fisubs
cmpb
mov
push
cmc
add
ss
shrb
scas
mov
add
arpl
clc
ds
and
cmp
inc
xchg
inc
andb
or
pusha
cmpsb
loope
aad
push
mov
ljmp
pop
cmpsl
lock
imul
adc
insl
add
popa
iret
nop
mov
mov
mov
shll
das
dec
pop
outsl
cli
mov
popf
pop
movsb
call
mov
cmpsb
les
jb
rcrl
jns
aam
mov
lcall
enter
push
enter
repnz
imul
xor
js
comiss
xor
sub
nop
xor
js
sbb
mov
or
and
push
xlat
lods
jmp
loopne
jno
jle
lret
jl
fisttps
xchg
adc
xchg
cmp
jle
push
pop
jl
or
lret
or
sub
scas
adc
es
es
inc
push
xchg
mov
pop
sbb
loopne
push
mov
ss
jecxz
in
push
push
dec
movsb
mov
mov
jne
xor
mov
loopne
ljmp
mov
imul
js
push
jne
outsl
xchg
mov
into
es
pop
test
bswap
xchg
call
lret
xchg
lock
les
pushl
push
cli
insb
pop
icebp
pop
adcl
imul
mov
or
loope
out
xchg
add
sbb
inc
lock
repz
pusha
mov
mov
stos
ss
dec
into
dec
je
push
cmp
dec
mov
pusha
sahf
test
cmc
into
das
or
mov
or
fsubrs
xchg
jne
sbb
cmp
pop
pop
mov
inc
adc
xchg
sbb
ljmp
xor
das
loop
pop
data16
jmp
out
xlat
add
ljmp
xchg
push
mov
pusha
fsubrs
lea
jae
mov
or
loope
and
cmc
je
push
push
dec
or
mov
mov
mov
push
mov
jb
cli
js
pop
and
movsl
add
inc
fists
lahf
inc
mov
dec
cli
pop
stos
mov
xor
insl
xor
lret
push
std
mov
or
and
adc
add
call
push
lds
sub
xor
dec
aam
test
fisubl
xchg
lret
add
or
loopne
test
push
cmp
mov
or
aas
arpl
ficomps
insl
mov
repz
imul
aaa
push
cmp
mov
and
inc
test
or
int3
je
inc
sub
aad
lret
inc
pop
pop
into
jmp
and
rclb
shr
push
cmp
outsl
jl
out
icebp
and
inc
add
lock
fchs
or
dec
shrb
insb
mov
sub
ss
rorl
push
or
mov
sub
hlt
nop
mov
and
mov
mov
int
or
add
jle
jg
jp
xchg
js
mov
inc
jns
ret
inc
popa
loop
xchg
or
mov
pushf
sarl
xor
jo
dec
xchg
sub
mov
addl
js
aas
ds
mov
stos
dec
xor
lret
psubsw
add
movsb
xor
jg
nop
adc
fnstcw
clc
mov
inc
sbb
mov
adc
xchg
jb
inc
aas
jl
jecxz
mov
push
push
movsl
rcrl
shrb
push
and
jne
mov
clc
sub
push
mov
jbe
pop
xchg
or
sar
loope
loopne
addr16
adc
or
mov
sub
mov
pusha
xor
jg
sub
sub
cmpsb
sbb
xchg
int3
out
lods
lret
dec
inc
cmp
mov
cmp
inc
inc
mull
repnz
mov
inc
lret
sub
divl
pop
add
lock
add
jno
call
lahf
xchg
and
lock
mov
ljmpw
jb
mov
mov
ljmp
push
popf
mov
and
xchg
pop
out
shlb
mov
arpl
adc
mov
lock
lods
push
test
leave
jno
sbb
and
jp
sti
push
dec
dec
adc
pop
fwait
or
outsb
inc
in
xchg
mov
mov
sbb
subw
adc
or
clc
clc
mov
sbb
and
mov
dec
adc
imul
pop
test
mov
clc
stos
rclb
clc
mov
imul
dec
in
into
jo
sub
loopne
lds
mov
clc
add
xchg
sbb
cmp
dec
fwait
sub
lret
push
cmp
sahf
dec
mov
add
adc
inc
push
out
lock
mov
cli
and
lahf
mov
jge
lretw
jb
nop
imul
lock
push
int3
pop
or
test
jae
outsl
xor
add
bound
daa
inc
push
push
aas
sbb
nop
pop
ret
or
das
sar
test
jl
jne
sbb
mov
pop
push
and
pop
lret
mov
lret
pop
call
loop
lret
call
test
outsb
les
sub
mov
addb
push
ret
popa
pop
add
push
cmpsl
faddl
fldl
or
shl
cmpsb
or
or
loopne
ja
or
notb
dec
pop
add
enter
pop
mov
shrl
les
cmc
loop
ret
sbb
int3
push
xchg
or
loop
lea
push
or
xorb
mov
sarl
repz
cmpsb
cmc
add
cli
xchg
popa
aas
jmp
hlt
xor
fcompl
or
add
stos
pop
mov
pop
add
in
movb
jl
daa
outsb
sub
mov
sub
ret
jno
cwtl
mov
fstps
je
push
xchg
jno
jbe
ja
xlat
es
popa
mov
sahf
shrb
lea
out
add
mov
ja
dec
idiv
test
int3
orb
out
cmp
loopne
cwtl
cmpsl
sub
fcoms
xor
jo
mov
repz
mov
xor
fwait
shl
pop
cmp
fisttpl
pusha
or
sub
idivl
pop
push
jo
dec
aam
adc
mov
insl
xor
in
aaa
mov
shrb
push
test
push
pop
adc
mov
fst
inc
scas
leave
sbb
fst
aas
and
mov
sbb
mov
push
pusha
add
nop
and
adc
lock
push
xor
mov
icebp
or
mov
lock
or
cmp
pop
mov
xchg
add
pushf
fsubp
ret
push
mov
mov
cwtl
lods
cmpsl
push
add
clc
push
ss
xchg
mov
les
or
stos
clc
pop
ss
mov
shrb
pusha
aam
stos
and
cmp
sti
dec
sub
lret
dec
lock
rolb
xchg
pop
inc
repz
cmp
inc
loope
int
adc
cmc
lds
loop
push
test
outsb
rorb
sahf
fdivs
pop
fnop
insb
xorb
daa
add
arpl
fs
lds
push
pop
and
xchg
icebp
jmp
adc
test
ficompl
mov
es
push
sub
rcl
in
mov
dec
gs
es
pop
jo
imul
xchg
lea
cmovb
lcall
inc
test
out
adc
mov
sub
js
push
xchg
bound
mov
and
xchg
sbb
sbb
add
jae
aaa
jle
jle
dec
gs
xlat
pop
mov
out
push
xchg
daa
clc
test
adc
sbb
mov
in
scas
add
fcmovb
push
dec
mov
fistpll
dec
test
clc
dec
negl
jp
jmp
xlat
mov
dec
insl
mov
mov
stos
or
jg
or
xchg
cmpsb
add
repnz
jo
sub
pop
xlat
cmp
sti
lahf
mov
adc
insl
mov
pusha
not
pop
lock
iret
or
js
insb
or
adc
mov
mov
adc
mov
es
call
and
inc
add
xchg
in
cmp
arpl
repz
and
mov
sbb
popf
add
fwait
pop
repnz
pmaddwd
adc
mov
mov
and
add
cmp
push
ja
jo
mov
or
lret
and
pusha
pusha
mov
adc
jnp
xor
popa
sbb
jae
push
roll
lahf
test
or
lods
aam
in
fdivrs
into
pop
adc
mov
dec
mov
jle
jnp
insb
andb
inc
pop
jb
test
popa
icebp
cmc
stos
mov
pop
push
inc
ljmp
loop
xor
hlt
adc
pop
inc
pop
loopne
mov
lret
loopne
vphaddbw
sub
cwtl
pop
push
add
mov
fs
inc
aam
test
xlat
mov
xchg
aam
rcrb
aam
lret
sub
loope
sti
lods
andb
jae
outsb
in
cwtl
stos
mov
cld
stos
rolb
lock
mov
mov
mov
dec
jmp
fcmovnb
push
inc
push
cld
mov
xchg
lret
rorl
jne
xchg
or
shrb
mov
mov
or
sbb
gs
lcall
jne
pop
outsb
jo
fsts
cmc
cli
repz
xchg
add
stc
jae
shll
inc
negl
dec
jno
inc
aaa
scas
lock
xchg
lcall
adc
loop
hlt
push
adcb
in
and
pop
mov
mov
loopne
inc
add
xchg
jle
pop
cmc
movsl
dec
mov
fdivrs
sub
dec
mov
jp
stc
cmp
lods
test
imul
pop
jnp
jp
or
adc
push
loope
clc
bound
aas
out
popa
ret
push
jg
or
push
ret
aam
pop
mov
jp
scas
lock
mov
fiaddl
dec
cmpsl
mov
pop
loop
mov
clc
adc
adc
push
cmp
adc
sbb
jp
loopne
mov
add
and
mov
mov
mov
cmovg
dec
mov
jge
inc
jnp
pop
inc
sub
jno
ss
pop
push
je
jo
pop
fs
push
jl
and
filds
sti
mov
jecxz
sbb
adcb
cmp
pop
mov
les
xchg
ljmp
jecxz
insb
loopne
lds
mov
push
stos
pop
cmpsl
xchg
js
es
pop
mov
addr16
aad
mov
ss
inc
mov
scas
add
dec
cltd
jne
dec
cmpsb
xor
pushf
cmpsb
movsl
aam
lods
test
outsl
inc
push
lock
mov
add
imul
or
dec
ret
sub
in
outsl
loop
enter
js
fnstcw
cwtl
dec
push
dec
cmp
cld
xchg
push
jecxz
pusha
mov
push
xor
dec
popa
pop
out
shrl
sub
mov
mov
daa
xorl
cmp
aad
mov
out
sbb
jo
fsubl
ss
xor
push
subb
ja
and
loopne
or
cmp
ret
scas
and
out
fidivl
jecxz
and
mov
add
or
mov
jl
loopne
mov
popf
and
xor
rcrl
sbbb
xor
mov
movsb
xchg
pop
imul
cmpsb
leave
es
mov
jo
loopne
push
cmpsl
inc
mov
scas
xchg
fs
dec
leave
testl
sarb
shll
mov
sbb
mov
fidivs
dec
inc
mov
xchg
mov
adc
aas
mov
jnp
shl
aad
and
fisubs
and
mov
adc
ret
jmp
fsubrs
xchg
adc
dec
les
pop
jo
cmpsl
cmp
xlat
fiaddl
sub
pop
sub
add
jae
outsb
in
subb
jo
xchg
add
pop
sub
and
lret
adc
testb
aaa
les
add
lea
push
dec
int3
pop
push
sahf
adc
lcall
ret
int
cmp
dec
or
lret
add
loope
or
push
mov
js
shll
out
loope
jmp
aad
insb
pushf
pusha
or
in
jp
cmp
cmc
pop
sbb
es
test
push
push
scas
inc
inc
pop
fidivrs
cld
pushf
jns
shlb
test
pop
mov
xor
icebp
xorb
and
in
lock
add
int
mov
add
mov
mov
xchg
inc
mov
and
cwtl
sbb
cmpsb
push
and
jmp
add
icebp
dec
mov
movsb
adc
mov
ret
nop
pop
add
adc
in
shl
in
and
jg
pop
daa
test
call
mov
and
or
cmp
xor
movsb
in
mov
iret
jbe
jl
lock
push
cli
mov
sti
sbb
jno
adcl
adc
cli
lods
push
jbe
cmp
push
mov
pop
lock
pop
sbb
push
adc
sbb
mov
pop
push
inc
push
dec
mov
adc
add
or
pop
dec
aad
aam
jle
repz
jmp
testl
or
mov
jb
and
scas
adc
pop
outsl
or
mov
jae
mov
sub
dec
push
push
ds
loopne
jge
dec
popa
xlat
push
lret
jp
inc
pop
sahf
or
inc
or
dec
cli
jg
cmp
test
dec
je
jo
das
sarl
in
pop
push
xchg
adc
out
shll
or
data16
mov
je
xor
push
add
mov
mov
xor
inc
xlat
lock
push
fs
jp
adc
cmp
stos
sbb
test
push
mov
xchg
test
and
xchg
pop
fisttps
mov
sub
mov
ljmp
dec
pop
pop
std
sub
jle
shrb
inc
xlat
push
mov
xor
pop
push
js
adc
sarl
push
stc
mov
ret
cmpsl
inc
adc
mov
hlt
pop
push
je
outsb
stc
pusha
pop
mov
cmc
out
push
fwait
inc
sub
icebp
aad
cwtl
push
fwait
je
aad
movsb
iret
mov
push
or
xchg
punpcklbw
mov
test
inc
out
lea
lods
es
inc
into
lods
add
pop
push
push
popf
fdivr
inc
outsl
inc
cwtl
or
cmovge
sbb
xor
push
sub
pop
outsl
test
es
daa
or
fistps
sahf
jle
jbe
addb
or
and
loopne
mov
and
mov
test
push
cld
push
jg
ds
cmpsb
test
xchg
imul
add
mov
cmpl
out
pop
test
gs
rcrb
into
cmp
testb
cmp
and
cmpsl
lea
cmp
mov
push
shlb
lock
jne
fs
xor
pop
sub
xor
lods
mov
adc
xor
ret
xchg
bound
rcll
or
scas
nop
daa
movsl
inc
or
hlt
in
fimull
fbstp
xor
xchg
push
dec
stos
je
in
push
fcmovb
add
push
test
mov
xchg
scas
mov
mov
and
push
fst
repnz
scas
or
addr16
lock
jp
movsl
out
pop
pop
or
je,pt
in
in
push
fcmovnb
jl
push
lea
fiaddl
clc
dec
js
mov
mov
sbb
xor
jl
sti
or
jae
aas
lods
pop
fisttps
add
cmp
push
xor
dec
jp
xchg
adc
mov
sbb
mov
adc
pop
jbe
jb
sbb
cmp
or
mov
add
jno
es
pop
les
jecxz
and
sub
ret
mov
add
or
ret
add
push
pop
add
mov
sarl
pushf
or
jp
lcall
adcb
push
outsb
pop
pusha
enter
dec
sbb
jb
mov
inc
out
sbb
push
movsl
push
jo
rol
and
adc
gs
adc
cmp
bound
dec
dec
jo
mov
jg
inc
fistpl
mov
push
jb
xchg
mov
test
xlat
sbb
dec
call
jp
push
or
scas
ss
ret
mov
add
loopne
fists
outsl
pop
dec
bound
arpl
mov
xor
lret
js
dec
fsubrl
std
sbb
add
fidivrl
mov
loopne
or
sub
jle
into
lahf
push
push
adc
mov
lcall
lret
jnp
lea
fs
add
inc
sub
and
mov
adc
inc
fisubs
xchg
pop
daa
or
xor
xor
fmull
mov
aam
test
fbld
outsb
inc
rolb
xor
mov
inc
cmc
cltd
mov
loopne
repnz
jb
clc
ficomps
js
jmp
or
addb
sbb
dec
in
inc
add
sbb
adc
xor
add
push
loop
notb
test
sub
mov
or
aas
mov
adc
movsb
xchg
loope
xor
insl
and
clc
pop
adc
jo
fbstp
pop
rorb
cmp
out
scas
cmpsb
outsb
add
fs
pop
push
mov
fisttpll
insl
add
sahf
mov
loop
and
in
xchg
and
into
inc
dec
cmp
in
adc
dec
sub
rcr
cs
mov
pop
cmc
cmpsl
sub
dec
push
dec
inc
imul
aad
dec
push
test
jo
mov
mov
or
cmpsb
int3
inc
test
and
push
aaa
les
neg
test
sub
es
cs
or
hlt
test
adc
mov
ds
and
add
lea
adcb
es
sub
pop
push
add
jl
or
and
sub
mov
dec
ljmp
push
je
mov
adc
lods
shrb
jae
pop
aad
addb
fistpll
lcall
adc
cmpsb
pop
es
push
sahf
das
sbb
cmpsb
int
cld
sbb
sbb
cmpsl
mov
cs
pop
sub
lcall
les
aam
fimuls
xchg
insl
xchg
stos
shrb
dec
cli
xor
daa
cld
inc
mov
daa
mov
inc
jns
mov
mov
stc
jl
jno
shlb
mov
fcoml
ljmp
mov
hlt
out
shlb
test
enter
shlb
int
push
aad
test
mov
push
cli
stos
clc
adc
jl
push
and
and
xor
insb
or
add
or
dec
dec
bound
push
adc
pop
stos
cmp
add
in
dec
inc
clc
rclb
mov
push
cmp
xor
popa
push
add
lcall
add
or
stc
xor
cmp
hlt
nop
out
pop
mov
mov
mov
cmp
js
sti
aam
mov
mov
dec
pop
xlat
xor
loope
sub
and
clc
push
xchg
or
sbb
mov
mov
repz
call
mov
or
mov
xorl
jg
cmp
mov
add
add
inc
stc
out
shlb
hlt
dec
pop
mov
sbb
aad
fbld
in
mov
leave
pop
push
cs
lret
es
fistl
pop
mov
fistl
icebp
push
enter
loopne
or
inc
xchg
push
inc
inc
insl
cli
push
mov
lret
pop
sbb
add
idiv
sub
push
cmp
and
stos
push
xchg
add
jl
scas
cli
aam
pusha
in
imul
xor
test
xorb
leave
mov
outsl
mov
addr16
mov
xlat
ret
and
and
xchg
fiadds
pop
dec
fistl
jle
inc
jmp
adc
cmp
push
in
jns
clc
out
add
es
xor
cmpb
xchg
add
nop
and
dec
cli
mov
mov
gs
sbbl
or
test
insb
sbb
test
out
add
testb
pop
sub
add
outsb
insb
add
cli
mov
sub
jmp
or
inc
push
clc
cmp
inc
or
jp
loop
cmp
push
xchg
cmpsb
mov
jle
movsb
jbe
in
push
lods
cmp
imul
push
mov
cmpsb
pop
out
lea
aaa
and
jmp
call
add
push
cwtl
dec
sub
push
fstpl
mov
mov
out
cmpsb
inc
shrb
sete
adc
roll
mov
inc
repnz
xor
in
pop
jle
ss
adc
ljmp
pop
mov
fstps
adc
add
pusha
repz
pusha
pop
test
mov
clc
inc
fucomi
cmp
cwtl
push
lods
pop
in
shlb
pop
andl
addr16
xor
or
add
mov
fbstp
mov
lret
fdiv
dec
out
cld
xchg
lret
mov
pushw
push
sarb
cmp
inc
fistl
push
aaa
mov
loop
lahf
mov
adc
adc
clc
pop
dec
js
cmp
in
arpl
or
pop
pop
add
mov
sbbb
or
or
dec
fistpll
aam
es
sbb
cld
clc
cmpsb
adcl
push
xchg
xchg
mov
ret
mov
es
push
xor
jb
pop
inc
jmp
add
in
inc
adc
add
pop
loop
add
loopne
dec
xchg
cmp
cmpsb
ljmp
js
in
xlat
rcrb
push
push
shll
dec
mov
and
ficompl
dec
xlat
clc
bound
imulb
test
mov
xor
mov
xchg
orb
and
xchg
sub
sbb
or
mov
in
clc
dec
jbe
push
xchg
lret
fdivrl
or
sub
add
mov
out
fisubs
push
das
inc
inc
mov
xor
xchg
scas
cmc
xchg
shlb
push
lcall
and
pop
cli
jne
scas
jns
jle
lods
popf
and
adc
xchg
sbb
insl
fidivl
lods
sub
lcall
mov
out
dec
mov
sub
out
scas
lea
paddd
pop
pop
cmp
sbb
mov
sub
popf
dec
xor
rcll
dec
call
aad
fdivrs
out
mov
xor
mov
push
jp
push
cli
icebp
hlt
dec
or
les
arpl
or
adc
les
adc
add
inc
or
jbe
push
pop
push
cltd
jecxz
mov
dec
cmp
call
push
add
out
sti
add
mov
pop
pop
and
adc
jne
shrb
jae
push
out
mov
lahf
orb
sbbb
push
test
ds
dec
jg
addr16
shlb
dec
xchg
cmpsb
jmp
sub
test
push
mov
test
gs
ret
adc
insb
push
cmpsl
dec
int
fcmovb
lsl
es
inc
ret
push
les
cmp
loopne
adcb
or
scas
dec
insb
fcmovu
mov
subb
rorb
movsl
xor
das
xor
jne
pop
hlt
addr16
cld
push
xlat
je
cmp
mov
mov
dec
and
stc
pop
insl
test
jl
sbb
in
arpl
mov
and
pop
inc
mull
adc
addr16
mov
loope
cs
lds
or
dec
les
xchg
sub
push
iret
sub
pop
push
icebp
mov
and
scas
sub
push
xchg
xchg
fs
push
sub
add
hlt
into
or
jp
pop
sub
nop
std
pop
fisttps
inc
hlt
or
arpl
add
mov
mov
jle
mov
mov
jnp
sub
sahf
push
in
push
psubsb
cwtl
cmp
fcmovb
sub
adc
mov
cli
ja
mov
pop
add
lahf
insb
lret
add
imul
shlb
xor
lock
xlat
pushl
adc
aam
mov
add
push
inc
pop
xchg
ret
mov
mov
js
sti
mov
cmp
aas
subl
dec
cwtl
cmp
ja
rcrb
sub
mov
pop
hlt
xor
cs
sbb
pop
jmp
or
push
pop
xchg
jmp
hlt
call
pop
nop
mov
stos
js
jecxz
push
inc
mov
lret
or
lds
pop
movsl
and
xchg
mov
cmp
push
and
cmp
xorb
mov
rorl
fcomip
mov
test
scas
add
cmp
mov
xor
pushf
cli
rcl
xor
mov
lea
inc
subl
pop
call
and
xor
mov
mov
movsb
sbb
dec
inc
xchg
ret
mov
mov
pushf
mov
add
fsubl
outsb
test
and
jl
addb
das
cltd
sbb
pusha
test
nop
jl
mov
hlt
mov
or
stc
mov
cld
add
leave
movsl
cmp
cmc
rorl
call
push
jns
out
out
clc
pop
rcrb
dec
stos
addb
ljmp
mov
mov
or
pop
test
xor
pusha
in
sbb
popa
xor
shrl
push
sbb
dec
push
fdivl
xor
mul
xchg
scas
mov
fmuls
adc
mov
xor
xor
sbbl
int
std
shrl
jle
jo
daa
loopne
xor
enter
push
sbb
ljmp
add
outsl
cmp
mov
lcall
cmpsb
jg
stos
push
or
pushf
scas
test
ret
test
es
pop
jno
jmp
jecxz
ret
inc
or
add
and
cmpsb
jle
fidivs
pop
xlat
inc
lods
xchg
adc
arpl
add
push
push
pop
lahf
pusha
iret
mov
cmp
into
call
call
push
repz
pop
fisubrs
mov
movl
outsl
ja
push
jl
or
fisttps
xor
mov
pop
inc
cld
xchg
ds
pop
aad
in
js
jns
pop
or
fdivl
mov
rcl
cld
inc
sub
rcl
mov
jge
rcl
pop
push
mov
out
rol
enter
cltd
add
jl
sbb
pop
sbb
add
cmpl
popa
mov
mov
cmc
adc
add
icebp
xor
lcall
lock
clc
ret
imul
xchg
xor
sub
adc
cmc
mov
sahf
lret
cmp
jno
data16
push
shll
push
movsl
pop
cmp
cmp
xorb
lret
xchg
xchg
sbb
mov
outsb
add
fsub
add
add
repnz
cld
js
je
clc
add
mov
cmc
jmp
in
out
gs
je
js
or
int3
cmp
sarb
mov
rol
pop
cmp
adc
inc
loop
test
dec
pop
sub
icebp
shll
mov
mov
mov
ss
sbb
test
fimuls
mov
dec
je
mov
sbb
mov
imul
adc
aad
cli
mov
xchg
jae
test
stos
sub
jle
fcomp
setp
add
je
mov
add
lret
or
add
lret
dec
inc
insb
xchg
or
loopne
stc
jge
push
jg
fisubrs
orb
je
jle
xchg
lcall
lea
in
jno
fisttps
mov
sbb
cmp
in
in
adc
mov
sub
xor
lock
loope
daa
icebp
cltd
push
cmc
mov
das
lret
push
add
cmpsl
je
ja
je
fwait
mov
sub
dec
orb
scas
ss
and
sub
jecxz
cmpsb
pop
popl
cmpsl
inc
mov
mov
lret
jo
les
cld
ss
imul
mov
loop
push
movsl
xchg
adc
lock
gs
adc
lcall
and
jo
lods
aad
lds
sbb
lods
lcall
sbb
inc
aaa
lahf
push
vpsrad
out
clc
int
and
sbb
cwtl
xchg
fcomp
mov
jno
jle
test
das
jge
js
loope
inc
jg
movsb
and
mov
and
lods
out
inc
adc
xor
add
sbb
mov
shrb
popa
xchg
ret
out
xchg
lock
ja
out
sub
pop
mov
mov
loopne
push
pushf
aaa
push
xor
cmp
fisttps
ljmp
adcl
test
push
shr
xlat
in
aas
cmp
roll
out
mov
pop
sbb
bound
fadd
and
bound
loopne
jbe
loop
lcall
and
pop
movsl
adc
mov
adc
cld
mov
sti
pop
rcl
lea
mov
push
push
pop
sbb
fstl
out
xor
pop
inc
xchg
shrl
add
addb
xchg
js
mov
aam
fiaddl
lea
ss
add
adc
idivl
cmp
test
jg
xor
aad
adc
aam
flds
inc
mov
push
push
inc
imul
hlt
push
int3
sti
cmpsl
in
sbb
lock
add
push
push
push
adc
jl
adc
in
dec
pop
cs
inc
outsl
movsb
sub
rcrl
das
push
sub
mov
popa
lret
ljmp
mov
mov
insb
inc
gs
movsl
mov
xchg
fdivl
inc
inc
ljmp
or
or
addr16
jne
push
mov
ror
jb
aaa
and
jg
mov
out
mov
sub
pop
shr
int3
sub
pop
jmp
in
push
cmp
jge
sub
mov
loope
xchg
jns
xchg
xchg
pop
jle
cmp
shl
push
mov
ret
push
jnp
jne
mov
cli
les
add
xchg
push
les
test
lahf
clc
leave
fsin
loopne
fsubl
mov
mov
scas
movb
dec
mov
sbb
test
and
cmp
pop
xor
rorl
add
movsl
adc
push
jecxz
jo
dec
clc
out
fs
add
mov
pop
pop
jbe
sahf
add
mov
and
out
pushf
or
das
jl
pop
sarb
loope
inc
adc
repz
push
mov
xchg
lret
loope
ja
jecxz
pop
ret
pop
add
xlat
mov
nop
imul
popf
lcall
push
addr16
outsb
jp
addl
aas
jmp
or
cmp
clc
add
clc
jecxz
js
sub
scas
mov
popf
popa
and
xchg
adc
sbb
out
push
ss
mov
call
bound
es
xor
sbb
sub
cmpsb
ret
push
cmp
pop
jbe
mov
sbbb
cmc
ds
and
cmp
add
aam
test
je
pusha
jne
xchg
out
orl
xor
clc
or
int3
mov
mov
push
sbb
mov
pop
add
mov
fcoml
cmp
add
mov
les
aam
outsb
sub
adc
inc
pop
nop
setle
pop
dec
mov
sbb
addr16
clc
cmp
fdivl
jle
sub
test
adc
fimuls
jle
out
push
jae
addl
sub
xor
mov
ljmp
ret
adc
js
out
subb
cmp
xor
bound
aam
adc
imul
pop
mov
lds
dec
std
aaa
and
sub
or
cmp
aas
outsb
adc
xor
aas
imul
in
aas
pop
ret
mov
hlt
stc
sbb
mov
out
dec
pop
ffree
loop
lock
lods
cs
xchg
jle
xchg
push
stos
dec
sub
inc
lret
sub
add
stos
mov
jno
lods
int
and
push
and
mov
mov
push
push
in
dec
jecxz
rolb
jg
dec
dec
mov
dec
xor
in
js
add
ja
add
pop
jmp
lock
mov
fiadds
cld
rcrb
rclb
xor
fldt
inc
lcall
arpl
je
xchg
movsl
call
add
popl
sahf
hlt
add
push
fdivrs
mov
pusha
add
loope
and
int
cli
mov
dec
stos
scas
cmp
add
sbb
adc
notb
sub
stos
mov
pop
inc
pop
mov
mov
icebp
subb
pop
rclb
scas
movsl
jmp
sbb
pop
and
lret
inc
cmp
out
cld
mov
inc
leave
fst
mov
movsb
cmpsb
ret
loop
adc
scas
insb
fildl
dec
imul
push
jno
add
in
push
les
scas
dec
xor
sbb
jno
pop
mov
mov
mov
into
push
or
jns
mov
in
test
xchg
cmpb
add
out
or
ud2
aaa
lds
aam
test
inc
mov
sub
inc
cli
loope
sub
fldl
or
mov
cmp
stos
clc
push
mov
shrb
dec
inc
inc
rcll
mov
dec
jb
jle
loop
stos
movsb
or
cmp
fwait
loope
ss
icebp
pop
ljmp
insb
mov
es
into
mov
dec
inc
into
sub
sub
cmpsb
in
into
cmp
into
inc
xor
mov
mov
push
loope
jecxz
fdiv
and
xchg
sahf
loope
aad
and
inc
push
xlat
test
inc
mov
mov
fwait
hlt
incl
scas
dec
das
js
jne
add
push
aaa
push
shll
ljmp
ud0
lret
cli
shlb
push
testl
arpl
aas
sub
xor
add
arpl
out
scas
fldcw
repnz
lahf
mov
jnp
lea
sbb
mov
es
push
cmp
mov
lods
xor
out
cmpsl
mov
push
push
xor
pushl
inc
cmp
sahf
mov
std
or
add
lret
clc
outsl
and
adc
fsubrl
cmp
dec
push
icebp
push
jo
sub
imul
iret
xchg
cwtl
add
push
cmp
lods
sbb
mov
xor
mov
cmpsb
fwait
mov
cli
out
or
push
mov
xchg
sbb
in
mov
inc
and
aam
cli
fisttpl
mov
and
int
sub
add
push
adc
add
sbb
fdivs
fdiv
cli
or
or
add
incb
roll
cs
inc
xchg
adc
insl
adc
cmp
mov
aad
fcmovne
and
or
push
push
mov
outsb
mov
out
pop
enter
push
jbe
test
idiv
xchg
jmp
in
ret
lock
loope
popa
mov
push
out
es
int3
cmp
sbb
pop
adc
and
jl
inc
loope
mov
test
sbb
sbb
aad
mov
mov
addr16
add
hlt
and
fisubl
mov
xchg
or
sbb
xchg
pop
test
and
hlt
sbb
lea
in
cmp
pop
sub
enter
fwait
jb
or
pushf
xchg
lahf
adc
test
movsl
fstps
push
lahf
call
add
xchg
out
bound
push
lea
sbb
std
push
pop
ljmp
aas
arpl
push
ret
pop
mov
mov
push
subb
notl
pop
aas
in
xor
scas
enter
push
add
outsb
sahf
push
push
dec
loopne
sti
cld
pop
loopne
sub
arpl
mov
sahf
inc
fdivrl
notb
loope
divl
ss
jno
std
jle
inc
in
adc
add
in
dec
mov
cmpsb
dec
fstps
add
lods
sbb
mov
bound
lret
ret
cmp
mov
sub
sbb
rolb
cmp
and
cs
mov
mov
pop
out
enter
mov
and
pop
daa
adc
xchg
mov
push
or
loope
sti
push
push
aad
stc
mov
pop
rolb
in
cmp
lahf
push
aad
xlat
jno
ret
mov
push
mov
mov
mov
fstpl
cmp
jne
fyl2xp1
adc
aad
addr16
cmpsb
cmpsb
adc
push
enter
mov
mov
push
mov
pop
fdivr
and
fwait
and
loopne
lock
lods
scas
jecxz
pop
loopne
add
test
cmp
mov
fcmovne
nop
dec
dec
mov
xor
faddp
mov
lods
cwtl
loope
int3
mov
pop
pop
jbe
mov
sbb
mov
adc
dec
jo
insb
ja
or
pop
cmpsl
fstpt
sub
add
pop
fistps
daa
dec
sub
xchg
push
push
in
sahf
lret
cli
mov
gs
xor
and
in
mov
iret
mov
scas
or
dec
push
push
in
jmp
xor
int
add
shl
lcall
mov
dec
push
inc
pop
jp
inc
je
call
cmp
sbb
pop
lods
mov
and
fsts
push
vphaddubd
pop
jecxz
addr16
mov
aam
rolb
adc
pushf
xlat
in
jecxz
xchg
mov
adc
inc
and
pop
jo
add
insl
mov
js
sbb
add
jmp
pop
xchg
xlat
sub
mov
aad
ljmp
push
pop
je
and
or
pop
bound
push
xor
pop
mov
std
pop
xchg
call
pop
push
sahf
mov
es
fwait
lock
add
push
aad
pop
loopne
popf
pop
mov
rolb
out
mov
or
push
shrb
adc
mov
loop
xchg
out
lds
outsb
fistl
xor
daa
movsb
neg
xchg
mov
mov
sub
bound
rolb
into
mov
fisubrl
cli
insb
cs
pop
andl
push
cmpsl
enter
fidivrl
dec
cld
lods
roll
adc
xor
fs
nop
mov
xor
mov
adc
pop
sub
mov
aad
stos
xchg
cmp
shrl
outsb
incl
or
dec
je
arpl
cmp
mov
mov
ret
push
leave
push
or
pop
pop
bound
mov
arpl
mov
sbb
lea
push
xor
daa
jl
movsl
shll
adcb
sub
jne
push
popa
add
sti
mov
stos
psrld
cs
nop
lds
push
fadds
negl
lret
push
inc
or
imulb
inc
mov
mov
add
mov
pusha
add
daa
orb
xchg
dec
hlt
push
push
ja
push
or
pop
or
adc
packsswb
lahf
dec
and
adc
push
imul
and
dec
mov
outsb
cwtl
arpl
and
mov
xor
pop
sbb
loop
rolb
pop
mov
or
imul
pop
jb
imul
jnp
sub
loop
sarl
add
hlt
adc
sub
test
pop
mov
insl
mov
cmc
in
mov
imulb
dec
imul
xchg
and
jp
pop
cmp
aas
sub
scas
sti
mov
jb
imul
call
push
cld
xor
in
cld
or
dec
es
outsl
mov
shll
es
rolb
test
pop
push
mov
mov
inc
sub
jg
es
rolb
mov
or
xchg
sub
add
mov
cs
jb
popa
fucom
jnp
movsl
mov
mov
sbb
arpl
or
aad
lea
inc
js
push
and
inc
cmp
loope
sahf
cmp
data16
and
fistpll
jge
movsl
aam
lock
fstp
insb
andl
mov
test
add
add
cltd
pop
fstpl
and
fwait
mov
cld
add
adc
push
jecxz
mov
sahf
inc
mov
lock
mov
push
pusha
sub
data16
or
mov
cmp
adc
ljmp
jmp
fisubs
pusha
sbb
or
outsb
push
xchg
fstpt
adc
mov
test
sbb
mov
xor
mov
lahf
aam
jmp
lret
cli
add
pop
pop
xchg
insb
testb
fmuls
test
add
push
push
xchg
js
or
pop
cmp
mov
adc
lock
sbb
push
out
fsubrp
int
push
mov
cld
and
mov
and
ja
pop
imul
and
add
ds
popa
insb
jmp
lahf
push
cmp
ljmp
rorb
add
xchg
mov
xor
ds
sahf
gs
mov
imul
cltd
sub
jmp
dec
dec
scas
scas
outsb
stc
pop
add
icebp
mov
stos
xchg
sbb
adc
std
inc
lods
mov
scas
mov
rcrb
or
mov
push
decb
xor
lods
push
insl
lods
int3
sub
or
dec
cmpsb
leave
push
push
lcall
call
out
into
nop
mov
push
sub
cld
dec
push
inc
jg
xchg
adc
or
decl
mov
mov
popf
outsb
mov
cmp
arpl
cmp
dec
stos
imul
cmp
and
mov
inc
je
jecxz
sub
imul
jg
mov
inc
sub
movsl
mov
jecxz
movsb
push
adc
addr16
xchg
or
push
cmp
popf
push
adc
jle
inc
push
scas
call
les
rcrl
mov
lahf
mov
ljmp
jae
mov
movsb
adc
fnsave
push
add
mov
arpl
test
pushf
les
cli
and
sbb
es
cmp
inc
jo
push
sahf
mov
cli
ja
daa
xor
inc
adc
test
cs
push
xor
add
test
push
shrb
push
movb
dec
xchg
je
push
or
or
hlt
jno
jp
clc
xor
call
pop
jb
icebp
push
jo
sub
test
xchg
xor
enter
inc
pop
loopne
rol
in
mov
imul
ret
jns
jge
imul
popl
sbb
arpl
mov
pop
or
mov
scas
sub
inc
mov
adc
push
call
sahf
int3
test
cmp
inc
pop
push
dec
imul
xchg
xchg
cmp
repnz
ret
xchg
movsl
mov
sti
or
xchg
mov
sti
mov
mov
aam
mov
dec
jp
jge
jmp
push
xchg
inc
pop
aad
push
add
mov
imul
xchg
mov
pop
pop
jge
pop
ss
mov
mov
cmp
xchg
xchg
cli
inc
mov
and
rol
xchg
or
fwait
mov
xor
outsb
mov
scas
sbbl
in
jge
fmuls
lods
jp
dec
xchg
nop
aad
cmp
or
jno
jecxz
adc
loopne
ss
test
lcall
xlat
and
mov
test
imul
psubusw
outsb
addr16
cwtl
jb
test
iret
iret
lds
pop
mov
jecxz
stc
int
jo
call
in
jmp
dec
and
mov
adc
rol
movsb
ret
mov
lret
fnstsw
lds
jge
scas
mov
xor
cmp
addb
or
inc
adc
cmc
ss
call
xchg
cmp
iret
sbb
je
dec
aas
inc
lds
jo
dec
xchg
pop
data16
sbb
pop
ja
cltd
sub
lahf
push
ljmp
push
js
sbb
gs
mov
sub
dec
es
xor
add
xchg
push
clc
xor
nop
inc
mov
push
xor
mov
mov
pushf
push
sahf
jbe
insb
jo
sbb
sar
xor
adc
sbb
test
pop
clc
pusha
pop
pusha
pop
pop
adc
adc
idivl
sbb
loopne
jg
mov
adc
cs
sbb
cli
fcoml
aad
inc
out
negb
cmc
pop
in
add
andb
pop
mov
lahf
pop
lcall
cmpb
jp
les
test
shlb
rorl
cmpsb
pop
or
mov
mov
fists
xor
cwtl
mov
test
dec
push
inc
das
pop
cli
push
hlt
fidivs
rclb
adc
insl
aas
add
jp
xor
inc
arpl
jbe
imul
cmc
mov
js
adc
rcl
rcr
pop
jecxz
dec
test
inc
and
movsl
loopne
enter
aaa
in
les
pop
stos
jne
pop
psadbw
shrl
idivl
imul
roll
movsb
and
les
xor
mov
in
sbb
sub
mov
ret
pop
ret
stos
pop
out
mov
fdiv
decb
and
subb
adc
out
lea
jbe
cltd
adc
and
aam
and
dec
sbb
xorb
popf
adc
cmp
fdivrs
mov
add
mov
dec
stos
pop
xor
adc
fildll
repz
pop
mov
test
mov
subl
jno
add
clc
dec
sbb
imulb
fdivl
bound
orl
cmp
adc
sub
mov
dec
and
xchg
push
xchg
cld
sub
inc
lret
jge
test
and
aam
add
push
push
sbb
stos
imul
jge
adc
mov
or
addb
jns
ss
jno
sbb
lods
scas
cs
nop
jp
push
mov
lds
push
outsl
xchg
mov
push
jp
jae
mov
fiadds
movsb
sub
push
sar
jge
jecxz
add
lods
je
jle,pt
sar
xlat
pop
sbb
shrl
dec
insl
pop
sbb
popa
mov
dec
xchg
out
scas
incl
or
cwtl
pop
aas
roll
repz
mov
add
dec
jbe
imul
cmpb
mov
mov
clc
orb
push
loope
repz
cwtl
nop
add
sub
pop
loop
hlt
jmp
jb
lea
clc
or
js
scas
dec
cmp
cmp
sahf
inc
test
mov
push
adc
stc
ret
dec
aaa
mov
ret
fs
push
sub
add
popa
push
imul
cld
xor
iret
pop
lock
jle
add
sbb
aad
hlt
lcall
scas
add
mov
fldt
add
inc
dec
stos
sarl
mov
adc
aas
les
or
aaa
call
rclb
adc
or
andl
jge
lret
cwtl
push
arpl
test
xchg
mov
mov
pop
push
std
xchg
movups
push
pop
movsb
xchg
ja
inc
imull
test
les
movsl
ja
sbbl
or
mov
push
fptan
pop
cmp
mov
mov
cwtl
movsl
xchg
push
shll
faddp
stc
ret
aad
dec
divb
lret
pop
sbb
add
lock
inc
mov
push
jno
mov
test
in
ret
les
hlt
mov
cmp
jo
insl
push
mov
xor
rclb
mov
loopne
cmp
and
test
mov
xchg
xlat
xchg
sbb
aas
sub
outsb
mov
xor
orb
test
jo
je
cmp
lahf
enter
mov
addl
mov
or
mov
xchg
jp
aam
mov
push
ljmp
lock
enter
loope
out
xchg
sbb
cmp
lods
cmc
mov
add
loopne
jp
push
test
ljmp
sub
jb
adc
mov
jmp
aas
dec
popa
mov
loope
inc
jl
insb
shrl
mov
lahf
imul
mul
mov
xchg
cltd
and
pusha
pop
cld
sarb
pop
sbb
mov
scas
sti
lds
nop
adc
jmp
loop
fcomps
jl
daa
add
cmp
addb
clc
pop
pop
fsubrl
test
pushl
xchg
push
sub
leave
lcall
inc
sub
or
leave
ficompl
mov
jbe
mov
push
cmpsl
push
cmpsl
cmp
push
sbb
jo
jp
lret
sbb
sbb
jne
jecxz
push
scas
inc
fs
cs
xchg
pusha
clc
sbb
jmp
add
push
out
pop
std
mov
xchg
clc
arpl
ret
and
mov
push
sar
cwtl
sub
mov
cmp
and
and
bound
adc
sbb
enter
push
or
lock
jge
leave
ficoml
fdivr
mov
push
sbbb
stos
das
icebp
or
or
je
adc
push
sbb
repnz
es
js
loop
sbb
mov
cmp
fmuls
ret
push
les
test
lods
mov
shlb
dec
test
fdiv
cmc
mov
lcall
push
or
xor
xor
ret
pop
imul
add
aam
rorl
mov
sub
add
idivl
push
in
enter
adc
add
add
daa
pop
pop
call
inc
xor
mov
push
pop
mov
lret
subb
sarl
cmpb
fwait
shrl
shrl
decb
xor
dec
mov
sti
sub
call
push
lret
sahf
adc
in
add
aam
mov
add
adc
movsb
xor
aas
loope
push
shlb
adc
and
jae
ljmp
cmp
and
xchg
fnstsw
icebp
mov
rclb
scas
xchg
dec
sar
add
aas
idivb
xchg
scas
add
adcb
push
lods
in
repz
dec
mov
mov
lock
xchg
pop
xchg
fistpll
movsb
add
rolb
scas
pop
xor
push
cmp
add
mov
xor
psubsb
out
mov
inc
xor
pop
or
fwait
pop
addb
sub
ds
or
int3
insl
or
mov
testb
mov
push
adc
adc
sub
out
and
imul
outsl
mov
xchg
scas
jp
or
ja
adc
out
sbb
and
repnz
mov
and
adc
pop
xor
jl
lea
or
jb
test
add
sbb
pop
add
ljmp
or
pusha
push
fsubrl
movsb
scas
jae
and
sub
loopne
lahf
xor
lods
fidivrs
dec
pusha
aam
mov
pop
or
jp
aas
xor
pop
cltd
jl
push
fwait
mov
xor
call
mov
roll
dec
incl
movsl
sbb
repz
cli
pop
sbb
push
adc
outsl
lret
int3
pusha
xchg
out
clc
xchg
push
xor
sbb
inc
pusha
jbe
std
leave
rclb
dec
add
int
fsubrs
xchg
pop
loop
dec
pavgb
push
cli
cwtl
jne
movsb
mov
gs
add
sub
negb
pop
pop
push
test
adc
movsb
iret
aad
dec
iret
pop
loope
imul
inc
xor
loopne
pop
fwait
xor
jo
lock
icebp
imul
lret
cmp
xchg
cmpsl
fnstsw
popa
cli
mov
inc
pop
nop
aaa
mov
push
cmp
push
roll
loopne
sbb
mov
cs
mov
cmp
push
loop
push
xor
out
lock
or
outsl
ficomps
push
ret
cmp
pop
movb
adc
push
popf
mov
pop
test
notb
add
ret
rorb
mov
pop
inc
fadd
ret
dec
cld
sbb
add
stos
mov
bound
mov
stos
or
inc
dec
mov
mov
jp
dec
mov
mov
outsl
mov
incb
sbb
rclb
add
loop
inc
cld
jle
pop
lea
pop
sbb
push
fs
pusha
sbb
dec
push
xor
push
inc
loope
adc
sub
fisubrs
pop
cmc
cmp
lcall
cmp
sub
les
xchg
movsl
add
dec
jo
lods
andl
loope
push
pop
jle
push
mov
jg
jmp
jno
pop
fstps
jp
dec
loop
push
pop
or
push
lret
xchg
push
xlat
push
aas
dec
lret
hlt
mov
imulb
call
and
lret
mov
or
out
cltd
inc
cld
ja
test
decb
adcl
mov
jecxz
mov
test
jle
pop
xchg
pop
push
insb
std
test
movsl
ss
inc
and
sub
jmp
andl
aaa
rorb
adc
jns
fprem
into
pop
jno
mov
repnz
xchg
pop
cmpsb
lock
clc
js
push
xchg
cmpsl
and
cmp
mov
fsin
adc
inc
cmp
pop
or
loope
jle
mov
cld
add
push
test
aam
fildll
fistpl
stos
movsb
mov
pop
mov
lods
fimuls
ss
fists
adc
call
push
rol
ljmp
mov
xchg
cmp
sub
pop
les
nop
ret
mov
test
and
cltd
xchg
rorb
clc
push
mov
shl
in
push
cmp
and
ret
sbb
adc
ficompl
sub
ficoml
icebp
cld
fwait
jae
lock
cmp
sbb
push
sub
cli
loopne
sub
cmp
mov
fiadds
adc
stos
repnz
jnp
add
sub
inc
jmp
fwait
jbe
jge
pusha
jl
fsubs
xchg
jnp
cmpsl
add
pop
into
subl
in
cmp
ret
xor
sbb
push
loopne
nop
inc
push
pop
pop
cmp
inc
push
lcall
or
mov
mov
cmpsl
mov
mov
jns
xor
aaa
sbb
adc
cmpsb
lds
mov
dec
cmp
out
je
leave
sbb
popf
pop
and
stos
mov
and
mov
ret
cmpl
outsb
nop
sub
pop
xchg
push
xor
movb
test
xor
testl
pop
les
out
testb
cmpsb
mov
xchg
or
cmp
or
cmp
test
lods
es
sub
mov
mov
add
ret
stos
pop
jmp
jge
incb
cmp
adc
dec
fcoms
out
sbb
add
mov
add
test
or
mov
adc
pop
inc
xor
pop
add
mov
clc
add
lods
xchg
movsl
test
lret
mov
and
mov
stos
add
xor
sbb
cs
call
out
jnp
imul
push
js
int3
xor
or
ljmp
pextrw
xchg
adc
mov
outsl
nop
subb
ljmp
pop
popf
adc
enter
jmp
or
fcompl
outsb
sbb
lcall
repz
daa
and
push
fs
pop
sbb
pop
jae
loope
fimull
cmpsb
push
les
xchg
fucom
pop
push
or
push
stc
iret
xor
das
js
stc
insl
sub
jb
daa
pop
aam
mov
faddl
mov
push
ja
inc
orb
mov
jg
faddl
es
es
sbb
push
dec
repz
inc
inc
add
scas
test
sub
pop
pop
aaa
leave
sbb
cs
jp
push
add
add
sbb
sub
or
pop
dec
cli
jecxz
fcompp
mov
add
inc
test
lods
test
sub
lret
cwtl
mulb
push
or
aas
push
sbb
xor
nop
lahf
aam
imul
sarl
add
dec
js
jne
movsb
into
insb
and
push
pop
push
mov
adc
xchg
jae
std
dec
xor
in
cmpb
push
dec
mov
adc
mov
fcom
cmpsb
or
sbb
push
xchg
sbb
cmc
inc
rolb
ret
push
jecxz
loope
out
daa
mov
adc
pop
xchg
pop
in
rolb
pusha
pop
sahf
sarb
push
mov
jmp
mov
scas
test
mov
push
pushf
inc
sub
or
sbb
cli
pop
std
inc
ret
sub
jmp
pop
jne
shll
inc
nop
inc
sub
stc
sub
inc
and
enter
std
pushf
pop
test
dec
adc
cmp
sbb
test
int3
mov
cmpsb
jb
add
or
lretw
adc
cltd
inc
popf
fidivs
call
sub
pop
pop
out
jmp
mov
lea
fsubrl
adc
out
aam
daa
pop
leave
add
push
fwait
insl
fcomps
xchg
sbb
fwait
add
fldl
push
icebp
add
lret
call
mov
enter
and
push
push
sbb
out
movsb
imul
inc
inc
sub
pop
inc
push
fadds
mov
andl
pop
outsb
stos
es
add
aaa
mov
cmp
push
pusha
call
rcl
out
jae
cmp
xchg
enter
mov
out
fwait
adc
cmpsl
loope
add
ret
mov
imul
dec
jne
cmp
enter
or
fidivrl
adc
sub
add
mov
or
neg
scas
outsb
jecxz
jne
mov
clc
shlb
add
adcl
sub
push
and
push
add
pop
les
mov
add
ret
outsl
jge
jb
lds
pop
mov
in
add
sar
add
out
push
sub
out
inc
adc
loope
rcrl
dec
cld
xchg
in
sbb
pop
sub
loopne
stos
cmp
push
sub
push
insb
jp
push
imul
xchg
rcrb
ret
and
cmp
pop
sbb
mov
out
pop
pop
xor
mov
ja
xor
jecxz
incl
or
scas
out
jmp
xchg
nop
in
add
pusha
dec
repnz
arpl
adc
pop
push
dec
outsl
lret
sub
fstpl
or
pop
int
data16
sbb
add
inc
xchg
ss
enter
das
out
js
cs
bound
fsubl
or
repz
xor
cmp
and
out
mov
movsl
movl
movsl
xor
adc
cmp
push
pop
or
and
ret
cld
mov
cmp
and
add
insb
push
dec
cld
adc
sub
aaa
pop
imul
sub
pop
or
roll
lcall
cmp
mov
push
hlt
cmp
cmc
adc
and
frstor
mov
stos
push
sar
add
add
rorb
pop
mov
xor
mov
adc
pop
and
dec
push
sbb
sbb
jp
mov
and
pop
int3
mov
sub
cmp
cmovb
je
js
mov
push
fcoml
mov
cmpsl
fwait
aam
mov
mov
loope
jecxz
mov
sbb
mov
dec
adc
or
or
stos
mov
xchg
dec
add
xlat
arpl
pop
mov
rcl
dec
fldenv
mov
push
sbb
sbbb
in
inc
or
addb
cs
push
imul
jge
test
or
icebp
jecxz
cmp
dec
add
mov
movsl
cmc
add
les
jecxz
add
dec
push
xor
testb
sahf
scas
sti
rcrb
xchg
rcrb
pop
push
mov
mov
filds
in
dec
andb
rol
or
push
jae
add
sub
repz
divb
out
mov
ja
das
push
mulb
scas
add
ret
ds
popa
and
or
rcrl
jnp
cli
pop
sahf
ret
mov
pop
push
lea
inc
jae
sbb
ss
inc
and
rorl
pop
jp
cmp
add
or
and
jecxz
imul
inc
mov
andb
jmp
push
popa
fistl
or
shll
xchg
xorb
xchg
rclb
cmp
sub
dec
push
fadds
in
adc
adc
add
jp
mov
outsl
ret
jb
pop
inc
xor
inc
pop
and
inc
xlat
xor
cmc
or
mov
jns
std
movsb
and
mov
sub
dec
mov
adc
and
jbe
push
push
mov
adc
insl
outsl
push
or
pop
dec
inc
mov
sub
dec
add
dec
lds
addb
and
or
xchg
xor
sub
out
push
popa
rcll
inc
mov
test
arpl
or
and
push
ret
adcb
push
fs
aad
enter
mov
add
inc
inc
arpl
addb
cmp
jmp
scas
inc
sub
jne
pop
cmp
adc
fwait
or
subps
mov
nop
and
test
sbb
dec
lcall
pop
sub
mov
and
and
inc
insl
cwtl
sbb
push
lock
pop
inc
imul
mov
sub
dec
neg
xchg
xchg
dec
fwait
movb
jge
sahf
fstl
dec
jl
int
shll
popf
and
movsb
sbb
popa
test
out
arpl
pop
jg
pop
sbb
mov
loop
sarl
loope
scas
stos
cmpsl
push
imul
mov
jp
mov
pop
mov
rolb
pop
or
cmpsb
mov
je
clc
rcl
mov
mov
xor
cmp
fnstenv
daa
addl
push
js
push
xchg
mov
and
lret
fnstcw
mov
sub
das
dec
popa
cli
sbb
add
adc
mov
les
adc
cmpsl
mov
push
or
mov
inc
pop
nop
push
mov
cmc
inc
or
mov
cmc
dec
sbb
roll
push
mov
shl
pop
sub
addl
fsubrs
xchg
movsl
inc
lock
les
pop
sbb
push
pop
test
cli
jecxz
shrb
cmp
jbe
jl
jo
cmpb
jmp
push
lret
pop
xor
lea
xor
icebp
cld
mov
or
cmp
ret
push
ror
jge
ljmp
ljmp
mov
sbbl
pop
jle
fbld
add
sti
stos
cld
sbb
inc
mov
sti
pop
bound
sbb
jno
jno
lret
movsl
xor
jns
daa
addr16
les
lea
push
sub
xchg
mov
cld
inc
jmp
jge
add
xchg
cmp
or
sub
iret
cmp
jbe
pop
add
and
out
mov
jno
daa
shrb
cmp
dec
lods
inc
inc
adc
sbb
xor
lds
cli
xor
outsl
jae
push
test
sbb
nop
daa
push
mov
mov
pop
scas
loope
sbb
fsubrp
imul
cmp
dec
pop
jo
imul
pushw
add
into
divl
xor
or
jecxz
dec
pushf
cmp
adc
mov
jmp
adc
aad
call
scas
test
fdiv
dec
sbb
pushf
pop
and
mov
mov
add
fldcw
pop
or
shlb
cmp
mov
mov
mov
inc
push
sbbb
jecxz
stc
pusha
cli
xchg
sub
fistps
aad
in
filds
xor
push
lea
outsb
jbe
test
xor
jne
dec
inc
movsl
jmp
test
jle
add
inc
cmp
push
popa
lock
shlb
dec
push
sbbl
stos
jno
push
outsb
or
xchg
fnsave
sbb
pusha
add
arpl
lock
and
loop
push
dec
sbb
jnp
pop
int
xchg
inc
shlb
pop
lock
mov
shlb
lods
test
jge
and
dec
adc
add
in
fidivrl
dec
cvtpi2ps
sbb
cmpsl
cltd
cmpsb
mov
scas
inc
xlat
loopne
mov
shr
mov
push
dec
js
adc
or
hlt
xchg
in
cli
call
repz
xchg
test
lock
add
or
inc
or
arpl
stos
pop
test
jg
jl
mov
xchg
fldl
push
pop
sbb
or
pop
jns
pop
sti
aaa
adc
movsl
cmp
out
cmp
dec
js
mov
shlb
addl
xchg
or
lcall
fadds
lahf
mov
xchg
dec
mov
loope
stc
xor
mov
mov
dec
loopne
jo
ljmp
adc
pusha
fmuls
or
rclb
adc
fstl
and
movsl
fwait
xorb
data16
cmpsl
lret
push
repz
cmp
aad
out
ja
xchg
or
ret
sbb
add
inc
add
js
sbb
out
lret
cli
mov
pop
inc
lock
scas
adc
test
mov
shll
stos
mov
aas
fisubrs
mov
fstpl
jg
mov
push
andb
sub
stos
mov
inc
dec
or
xor
stos
mov
pop
mov
std
je
fst
push
pop
ljmp
add
lock
dec
sbb
xchg
cld
ds
xlat
jae
mov
outsb
shrb
cmpb
cmc
mov
xor
add
xor
int3
daa
in
jmp
sbb
in
sti
mov
jge
inc
xchg
mov
je
loopne
clc
arpl
dec
inc
gs
adc
adc
icebp
push
pop
dec
dec
jne
push
fcomps
adc
xchg
push
jbe
stos
leave
aam
push
jbe
jae
call
or
jle
sbb
push
add
loopne
fnstcw
in
movsb
sub
mov
loopne
ds
mov
sbb
fistpl
in
xchg
mov
lahf
mov
pop
scas
cmovl
cmp
call
cmp
clc
pop
mov
test
pop
adc
sti
mov
leave
cli
xor
adc
pop
das
int3
and
fcomps
adc
or
cmp
je
dec
jl
add
shr
push
and
aas
jne
imul
cs
sub
jp
add
jp
jecxz
mov
cmp
jg
or
xor
mov
mov
sbb
popa
dec
je
add
xlat
lods
mov
pop
cmp
xor
rorl
outsl
push
pushf
test
jg
std
or
or
pop
pop
or
jecxz
clc
ret
jo
jno
sbb
cmpsb
shlb
call
mov
fisubl
lret
xchg
push
inc
lret
adc
lret
inc
clc
mov
repnz
adc
stos
push
sub
in
mov
mov
call
push
in
xchg
enter
cld
mov
ljmp
push
loopne
andb
adc
xor
out
jge
mov
adc
mov
mov
stos
pcmpgtw
add
lea
cmpsl
pop
loop
xor
scas
loopne
test
call
int
sbb
jbe
or
sbb
pop
jl
sahf
into
pop
and
lock
push
dec
adc
adc
pushl
pop
sbb
lahf
ljmp
pop
nop
jecxz
shrb
xchg
jle
inc
xor
mov
or
push
inc
xchg
popl
les
scas
fbld
mov
cli
dec
fdiv
adc
push
ret
decb
inc
enter
or
dec
adc
push
pop
mov
loop
test
and
mov
add
fstl
jl
mov
std
or
sub
push
or
push
mov
std
xor
jle
aaa
or
shrl
cld
rclb
xor
xlat
xchg
adc
ret
mov
lea
rolb
xor
or
in
sbb
insb
mov
loopne
add
push
or
jg
clc
mov
sub
or
push
das
fdivrs
inc
add
cmp
in
cmc
pop
hlt
xchg
decl
inc
pop
mov
dec
jecxz
insl
enter
sysenter
test
jmp
sub
int
jnp
jno
or
out
or
push
aas
jle
xchg
fcomps
pop
cmp
add
jnp
sub
dec
js
adc
xchg
lods
inc
loopne
pop
call
dec
int3
test
xor
insb
add
rclb
shlb
inc
aas
push
rolb
jecxz
xchg
dec
fst
and
cmpsl
inc
lcall
mov
das
arpl
mov
or
repz
rorb
push
mov
sbb
xchg
inc
scas
push
js
andl
push
push
and
push
les
jae
xor
jecxz
push
lea
dec
and
jl
rclb
mov
test
add
adc
xchg
inc
pusha
cmp
clc
cli
inc
sub
mov
jle
xchg
lock
outsb
cmp
incl
roll
pop
cmp
sbb
jbe
aam
dec
addb
pop
arpl
test
jb
mov
or
cmp
cmp
mov
mov
cmpsl
loope
dec
clc
push
push
push
cli
imul
fcomps
out
sub
adc
sbb
cli
inc
ljmp
mov
jg
sahf
add
stos
mov
cmpsb
add
sbb
mov
jae
clc
xor
sbb
adcl
push
inc
out
pop
out
mov
mov
popf
outsb
leave
push
inc
xchg
out
mov
mov
push
cmp
inc
pop
cld
in
test
xchg
add
das
das
mov
stos
jno
dec
mov
cmp
int
cmp
mov
scas
push
xchg
test
dec
divb
dec
dec
outsb
adc
adc
xor
dec
ret
mov
xor
cmp
adcl
stos
int3
es
decl
in
cmp
push
aad
and
push
data16
shlb
scas
ret
cmp
add
jnp
push
xlat
add
fisttps
pop
xchg
inc
pop
scas
loope
jbe
xchg
mov
pusha
push
and
add
push
mov
loop
mov
cmp
mov
sahf
xor
aas
pusha
dec
testb
loop
push
sbb
pop
cld
adc
jecxz
clc
cmpsb
dec
sbb
hlt
pop
mov
xchg
jge
inc
iret
jg
cmc
cmpsl
pusha
or
dec
add
lret
adc
and
js
lods
xchg
push
mov
push
xor
sarb
in
inc
inc
lds
ret
test
add
pop
push
dec
inc
xor
fs
cld
mov
add
testl
in
xor
ret
push
push
cli
mov
sbb
cli
jns
daa
add
and
fnstenv
mov
adc
sbb
movsb
mov
mov
fsubp
rol
pop
dec
cld
repnz
popa
dec
fwait
ljmp
mov
ljmp
cli
jle
out
and
and
rcrl
loope
movsb
add
mov
xor
aam
add
fs
test
andl
and
mov
cs
pop
shlb
inc
sub
add
popf
in
icebp
lock
add
mov
or
or
mov
bound
nop
fld
pop
or
sub
dec
loopne
aas
jb
jl
js
dec
fldl
and
bound
pop
push
fs
and
and
adc
xchg
hlt
arpl
fisubs
sub
mov
adc
ret
mov
hlt
jb
ss
mov
lods
pop
jecxz
cmp
stc
dec
jl
fucom
out
gs
aas
add
rcll
rcr
xchg
lock
jmp
mov
aaa
mov
xor
test
inc
push
dec
mov
dec
jnp
rcrb
push
movsb
mov
icebp
cmp
jecxz
push
pop
dec
imul
sbb
outsb
sbb
mov
mov
dec
mov
mov
cwtl
mov
iret
sbbb
shlb
repz
sub
das
pusha
jecxz
scas
ret
mov
hlt
sbb
sub
mov
mov
lcall
sbb
loop
push
sarl
jge
sar
loopne
pop
out
hlt
les
out
or
shl
sub
sub
shl
call
sbb
sub
jb
fs
out
test
in
mov
enter
mov
pop
popa
lahf
ficoms
cs
std
outsb
pop
addr16
call
dec
xchg
les
iret
mov
sub
rol
push
mov
and
jne
imul
incl
push
daa
into
ffreep
xlat
rcrl
icebp
inc
clc
loopne
outsl
addr16
add
fptan
jle
mov
loopne
cli
sub
xchg
ficomps
rcr
imull
aaa
lods
and
sbb
leave
je
xchg
sbb
pop
rcrb
xchg
mov
xor
xchg
jl
lar
out
arpl
shr
cld
test
mov
cmp
and
pop
mov
ja
stc
nopl
repnz
push
lcall
mov
cmp
pop
lret
fdivl
push
cld
movb
stos
imull
push
lret
mov
pop
cmp
cmp
inc
push
jle
jbe
lahf
mov
ds
sub
xchg
sti
inc
shlb
mov
pop
ss
repnz
scas
in
repz
and
ss
inc
sub
test
lods
hlt
jecxz
aaa
cmp
inc
inc
popa
ljmp
fs
pop
inc
pop
frstor
loopne
es
xchg
popa
aam
loop
fmull
and
xor
test
or
jmp
loopne
add
repnz
mov
jl
fcmovbe
jo
lds
cmpsb
lcall
js
sbb
into
xlat
pop
in
jp
jecxz
adc
orl
frstor
outsb
pop
das
test
lock
lds
and
and
stos
ret
inc
shl
xor
movsb
fidivrl
out
in
sbb
push
iret
scas
jbe
inc
mov
jbe
mov
lea
fimull
cmc
jmp
enter
in
ret
or
add
mov
dec
pop
enter
xor
ficoms
sbb
sbb
pop
outsl
je
je
les
add
inc
movsb
outsl
lds
daa
pop
adc
loop
orl
xchg
xchg
push
push
stc
push
imul
add
cli
sbbb
sub
pop
stos
add
sub
sbb
pusha
sub
adc
push
push
pop
push
std
push
lret
push
lods
xchg
mov
ret
sub
mov
push
hlt
popf
push
lea
ret
movsb
dec
dec
in
adc
pop
lock
sub
mov
in
jns
mov
adc
push
clc
shrb
sub
nop
and
jbe
je
sbb
inc
lret
pusha
filds
lods
ret
rorb
mov
xor
jg
push
jecxz
ret
dec
jge,pn
adc
pushf
xor
adcb
and
out
inc
repz
cmc
add
ss
fnstcw
or
repz
mov
jl
mov
cmp
mov
cmpsl
stos
fadds
test
pusha
je
sbb
add
sbb
mov
in
clc
cmpsl
das
lcall
push
pop
movsb
cld
mov
je
repz
ret
dec
fs
add
mov
push
stos
sbb
loope
add
jo
cmp
cltd
test
pop
push
sbb
ret
cld
fists
push
stos
fstl
subl
sub
pop
call
or
in
lods
data16
loop
cmpsl
inc
and
or
push
inc
jmp
test
push
sbb
mov
pop
pop
lods
and
inc
or
cmpb
push
movsb
mov
or
mov
add
enter
cmp
lea
addb
jp
or
jg
push
cmpsl
add
ljmp
loope
movsb
sub
inc
ret
jns
lcall
add
jo
mov
mov
push
shll
mov
or
hlt
fwait
lock
push
add
xchg
insl
aam
or
pop
mov
aas
pop
je
faddp
outsb
jo
shl
loop
jg
dec
clc
add
and
mov
xchg
push
movsl
mov
pop
push
sub
sbb
cmpsl
add
loopne
loopne
inc
sub
xchg
mov
or
and
inc
mov
bound
lcall
movsl
add
jecxz
xchg
sub
xor
push
nop
mov
mov
fsubs
dec
adc
je
xor
push
mov
cmc
loopne
shr
flds
cmp
cmpsb
ljmp
jns
lahf
dec
loop
sub
push
xchg
push
lcall
mov
ljmp
loop
je
push
orl
insb
test
bound
or
adc
jns
in
fsubl
fwait
push
lds
ja
jg
sbb
inc
cmp
add
and
test
pmaddwd
adc
dec
repnz
test
popa
xchg
or
adc
sub
mov
mov
lea
adc
sub
mov
jne
cld
sbb
ret
mov
shrb
pop
adc
negl
push
call
rclb
ss
cmp
in
incl
mov
aas
adc
hlt
add
pop
mov
not
sbb
repnz
sub
lods
mov
sahf
lods
movq
and
inc
xchg
mov
movsb
data16
and
fwait
jb
or
dec
inc
hlt
inc
push
xchg
pop
ss
xor
mov
and
mov
imul
ret
push
push
pop
push
jmp
aaa
addb
pushf
clc
out
add
test
add
cmpsb
jg
pop
jb
xor
in
filds
mov
jmp
mov
imul
outsl
addl
pop
mov
and
in
into
cmpsl
push
mov
mov
aaa
mov
inc
out
clc
pop
rcr
or
pusha
jb
rorl
or
fldt
nop
cmpl
mov
mov
pushf
mov
adc
sub
jmp
mov
push
push
adc
ficoms
push
aas
jmp
jl
and
std
int3
cmpsb
pop
jbe
mov
xchg
jnp
pop
fwait
cli
popl
rorb
in
or
ffreep
testb
push
pop
push
cld
mov
test
add
repz
bound
out
jne
loopne
sub
push
lahf
shl
cli
mov
das
in
lds
andl
and
add
dec
nop
pop
popa
lds
sti
add
jae
sbb
inc
sti
data16
cmpsl
adc
negl
fbstp
int
movsb
pop
pusha
push
arpl
inc
fwait
jno
je
adc
mov
aaa
and
int
dec
adc
sbb
cmc
mov
rorb
sub
pusha
and
fstl
data16
or
sbb
inc
lret
sbb
in
cmpsl
or
add
add
aad
cli
mov
out
jo
mov
aas
aaa
lock
into
and
shl
mov
push
fidivs
jne
and
and
test
mov
and
xchg
in
add
fwait
movsl
jnp
js
sub
data16
out
mov
stos
jno
mov
xor
push
push
jle
popf
mov
rcrb
sbb
imul
mov
pushf
jmp
mov
aas
sub
sub
push
daa
ss
push
adc
jb
fwait
pushf
int3
add
inc
pop
js
cmp
pusha
into
mov
rcrb
mov
add
aam
stos
xchg
xor
loopne
jbe
push
sbb
mov
mov
xchg
push
loop
lods
or
pusha
sub
dec
or
mov
mov
insl
push
out
data16
xorb
or
push
fistps
and
mov
push
popa
xchg
outsb
clc
and
test
xchg
adc
sub
aas
dec
ljmp
xor
out
lock
clc
lods
mov
outsl
jg
jmp
cld
in
mov
rorl
clc
js
push
xchg
outsb
xchg
sbb
jp
dec
cmp
pop
adc
les
popa
mov
or
jp
mov
rorb
movsl
je
mov
stos
sbb
mov
loopne
xchg
cs
loope
lret
jbe
dec
mov
dec
fistpl
nop
je
js
push
into
jmp
and
testb
js
inc
adc
inc
jbe
mov
rcr
andb
lock
push
es
mov
or
mov
adc
popf
adc
jg
out
daa
mov
inc
xchg
add
pop
adc
mov
lock
xor
and
rcll
insb
mov
ds
sar
enter
les
ljmp
lock
mov
lea
inc
and
lods
xor
mov
cld
pop
lods
or
loope
pushf
xor
fstpt
cmp
imul
sahf
stos
loop
loopne
rcll
sbb
mov
lcall
pop
mov
sub
dec
jg
push
push
insl
adc
inc
bswap
repz
jns
adc
push
js
cmp
imul
daa
lock
bndldx
inc
lahf
push
add
cs
icebp
leave
test
mov
in
push
adc
sbb
inc
dec
clc
mov
mov
sbb
jns
aaa
addr16
subl
mov
jnp
daa
pop
outsl
icebp
mov
jp
mov
sbb
mov
test
pop
loopne
sub
xchg
clc
lods
stc
and
or
sbb
xor
sub
out
add
in
sbb
dec
xchg
inc
push
int
adc
pop
cld
es
adc
add
in
mov
les
rolb
out
addl
test
xor
std
sub
mov
and
mov
mov
sub
jg
push
loope
addb
into
cmpsl
fdivl
stos
mov
sub
scas
icebp
aaa
fisubs
mov
or
push
mov
add
jb
xchg
mov
test
hlt
add
mov
inc
je
jp
loop
pop
push
pop
cmp
clc
outsb
outsb
cmc
adc
inc
mov
lds
lret
shr
xor
mov
cltd
jns
cmpl
mov
add
loope
mov
mov
jle
int
push
cwtl
lods
scas
icebp
mov
fwait
push
stos
push
xor
in
dec
insb
xlat
jo
popf
loop
insb
sbb
ret
lock
pop
add
les
add
clc
push
popa
lods
imul
inc
repnz
sub
push
sub
shlb
stc
ret
rol
movsb
and
orl
test
pop
add
adc
jae
sbb
mov
fmuls
fildl
aas
loop
test
add
fwait
leave
and
xor
rorb
mov
and
mov
cmp
stos
cmp
push
sub
inc
adc
inc
jmp
lea
and
loopne
inc
js
mov
decl
sar
xor
out
jl
inc
sub
mov
lods
daa
and
aas
pop
hlt
cs
repnz
xor
je
fstl
push
xchg
fnstcw
fst
andb
fisubs
add
scas
xor
vpshlq
mov
daa
es
sub
or
mov
xchg
mov
lret
hlt
test
ss
jbe
fdivrl
ret
cmp
sarl
sub
add
cs
mov
sbb
aaa
jle
mov
inc
xorl
pop
adc
in
jo
jne
and
add
les
call
mov
mov
xor
xor
lock
rcrb
xchg
les
rcl
fidivl
and
jo
imul
push
sti
and
pop
imul
lret
pop
ret
dec
inc
mov
es
movsl
aad
push
jne
jl
movsb
lods
cmp
lods
insb
mov
mov
enter
lds
ds
jmp
mov
in
sub
inc
mov
in
mov
push
dec
pusha
outsb
sbb
stos
fwait
mov
sbb
arpl
mov
inc
jecxz
dec
inc
ds
and
jmp
push
aas
jmp
adc
and
xor
pop
push
in
mov
shrl
mov
out
jecxz
lcall
mov
jl
or
mov
mov
ljmp
inc
cmp
mov
lock
adc
cltd
pop
rorb
into
fmul
or
push
pop
lea
ja
sbb
cmp
sbb
loopne
mov
fisttpl
inc
pop
lock
push
inc
insl
rcrb
sbb
mov
push
lock
outsb
popa
scas
ljmp
cs
cmc
mov
mov
fcoml
push
mov
push
adc
and
rorl
mov
fcmove
inc
daa
bound
ret
add
sub
dec
pushf
packsswb
pop
pop
add
mov
mov
mov
sub
nop
inc
movsl
clc
shll
daa
cld
or
mov
aaa
lea
sub
xor
out
je
jae
nop
add
jp
mov
movsb
nop
call
dec
sbb
bswap
mov
mov
js
enter
std
add
adc
mov
dec
jge
fcomps
cli
or
cli
je
dec
mov
sbb
mov
dec
ja
and
lret
js
loope
xchg
mov
jnp
test
les
push
jp
mov
and
fbstp
in
adc
mov
or
pop
xor
fwait
push
mov
call
repnz
mov
pop
int
pusha
fisubrl
pop
sahf
mov
je
pop
ret
mov
add
mov
jg
shl
stos
daa
adcl
mov
pop
xchg
jno
and
jnp
ljmp
dec
sar
int
and
and
sub
aad
xchg
in
add
js
aaa
sti
dec
inc
ja
add
xchg
out
xorw
fidivs
stc
cmpsl
dec
jo
into
movb
mov
insl
gs
clc
loopne
out
mov
cltd
jns
cli
and
or
cli
push
fstl
lret
ljmp
xor
imul
add
mov
pop
jmp
fmull
sub
xor
mov
mov
jge
jno
xchg
outsb
push
iret
mov
scas
dec
jmp
xchg
roll
loope
xor
loope
jne
xor
cli
add
push
push
pop
shlb
add
ja
sti
sbb
jge
mov
push
pushl
cld
jo
xchg
ss
ss
ret
mov
cmp
cmp
ficompl
lock
jb
int3
add
dec
ljmp
test
std
sbb
mov
insb
in
in
mov
inc
in
ja
push
mov
mov
mov
or
out
cmc
into
jno
pushl
add
cmpsl
aam
arpl
push
mov
xchg
test
jecxz
aad
add
iret
sbb
sub
ja
shl
lds
and
dec
mov
jle
cmp
dec
pop
push
dec
mov
xor
cmc
stos
bound
ror
xlat
jmp
dec
test
lcall
lea
dec
xchg
pop
jp
push
jecxz
dec
leave
inc
pop
sbb
arpl
bound
in
movsb
in
or
fdivrs
sbb
fnstenv
mov
or
adc
ret
mov
lret
dec
mov
decl
mov
push
push
fs
mov
stos
ss
scas
movsl
jne
mov
push
push
mov
cmp
add
test
and
lcall
gs
std
rorb
iret
loopne
jge
mov
and
inc
xchg
fnstcw
jp
dec
lock
std
pop
mov
addr16
insb
adc
inc
mov
je
adc
mov
or
add
sbb
addl
jmp
add
cmp
or
xchg
nop
or
cmp
test
mov
pop
jo
mov
stos
aas
int3
daa
scas
inc
mov
gs
ja
movsl
inc
sbb
fisubs
xchg
rolb
mov
bound
nop
out
popf
mov
shlb
ljmp
les
sub
cmp
loopne
aam
outsl
cmp
jle
mov
out
mov
fimull
jl
mov
cmc
fsub
mov
cmp
jecxz
fmulp
cmp
aam
xchg
ret
pop
xor
std
mov
leave
sub
add
pop
lock
xchg
mov
nop
xchg
pusha
add
mov
pop
and
jo
xor
jecxz
out
jo
sub
mov
cmp
pop
cmpl
insl
mov
das
add
js
xchg
out
add
mov
jns
cs
int3
int
add
rclb
sbb
push
ret
sbb
and
inc
shll
scas
scas
scas
pop
adc
and
lret
call
mov
aad
and
aaa
clc
mov
lcall
in
push
enter
sbb
cmp
leave
inc
adc
sbb
adc
cmp
add
call
xchg
scas
out
jmp
or
add
sysenter
shrb
lcall
pop
xchg
aad
mov
xchg
cltd
xchg
push
and
test
cmc
sbb
mov
mov
cli
push
jge
xor
mov
lret
loope
aam
xor
cmp
mov
lock
daa
mov
lcall
mov
lret
out
mov
jae
xchg
movsb
dec
adc
or
mull
lret
mov
cld
sbb
cmpsl
sbb
and
dec
cmp
pop
cld
jg
fstp
dec
js
push
out
aas
xor
xor
xchg
xor
out
dec
in
cmp
cmpsb
xchg
icebp
push
and
push
pop
add
cmpsl
icebp
push
xor
outsl
push
or
add
mov
addl
pop
xchg
sbb
popa
in
add
lcall
das
jl
insb
lret
seto
jno
std
lea
push
outsl
add
inc
sbb
in
push
push
inc
lds
outsb
mov
push
je
jns
jp
xor
xchg
jecxz
or
sbb
ss
or
push
push
lcall
xchg
shr
daa
loop
cmc
lahf
addr16
push
ss
movsl
cwtl
push
shll
xor
pushf
insl
movsl
adcb
sti
push
adc
icebp
fidivs
pop
cmpsb
mov
or
aaa
cmp
dec
loope
cli
ljmp
pusha
loopne
mov
in
mov
fmull
icebp
nop
dec
add
sbb
rcrb
cs
xchg
fnop
loope
or
lods
ret
mov
fdiv
ret
add
sbb
incl
imul
sub
daa
jo
pop
loopne
cli
outsl
hlt
adc
push
jne
cmp
out
js
dec
push
ljmp
popf
inc
ret
movsl
jo
aaa
dec
es
cld
mov
and
popa
cmp
int
lds
add
testb
pop
out
imul
lret
sarl
sub
xchg
adc
icebp
jmp
imul
lret
movsb
bound
mov
stos
push
inc
and
rcrb
xor
mov
loopne
or
sbb
das
cmp
and
cmpsb
and
pop
ret
loope
push
jno
call
mov
inc
pop
cmp
loopne
outsl
mov
inc
xchg
mov
jne,pn
sbb
xor
cmp
outsl
inc
jecxz
fmul
dec
aas
out
jne
lahf
xchg
and
incb
adc
pop
add
idivl
test
clc
shlb
push
std
in
xor
rcrl
sbb
dec
aas
add
or
jo
xchg
repz
repnz
jno
cmpsl
xchg
lods
sub
in
add
aam
loop
push
cmp
jae
clc
test
scas
add
cmp
repnz
clc
in
sbb
dec
mov
mov
jmp
imul
aam
stos
das
xor
dec
gs
xor
sar
fdiv
push
ficompl
arpl
jb
sbb
sbb
iret
rcrl
jae
dec
xor
insb
lods
shrb
sub
push
jo
scas
add
add
je
popf
mov
and
push
lret
dec
test
mov
mov
xchg
call
inc
call
mov
test
dec
xchg
enter
mov
xor
inc
sti
inc
loope
and
fnsave
data16
popl
mov
in
addl
xor
pushf
loop
rolb
push
ffreep
inc
out
mov
mov
ja
stos
enter
sub
out
lock
push
rol
push
loopne
jae
adcb
loope
lcall
test
and
and
sbb
int3
and
xchg
mov
pop
ja
lods
jbe
dec
popl
roll
inc
mov
ljmp
mov
ds
in
sti
sar
xchg
in
jbe
iret
xchg
jo
add
sbb
mov
in
mov
popf
and
xor
cld
repnz
out
xor
in
lea
inc
add
shlb
inc
cmpsl
cmp
fisubrl
mov
dec
sarb
cmc
or
lret
sbb
and
sub
jmp
inc
mov
xchg
cmp
dec
je
inc
loop
mov
cwtl
and
jecxz
pop
je
inc
dec
loop
adc
js
jnp
or
or
test
pusha
inc
add
mov
add
mov
push
mov
xor
pop
popa
push
hlt
dec
cmpb
add
sub
sbb
and
push
sub
scas
xchg
lock
sti
add
and
popf
lahf
test
dec
fbld
jecxz
xchg
jge
lea
sub
adc
jecxz
mov
pop
ds
jge
out
in
stos
sbb
mov
inc
xlat
sbb
insl
fwait
icebp
xor
orl
je
cmpl
fwait
clc
xor
push
jle
push
adc
xor
addr16
mov
mov
pop
aad
cmp
sbb
insb
xchg
adc
or
add
fisttps
xchg
sbb
pushf
lods
dec
sbb
cmc
or
adc
fwait
scas
adc
add
mov
adc
or
sbb
or
mov
add
sti
roll
pop
adc
jp
imul
jge
mov
cmp
xor
or
xchg
shr
add
jle
sahf
or
es
inc
and
mov
jecxz
inc
jp
push
fwait
cmc
sub
cmc
mov
insl
in
lods
xor
loope
mov
ret
ret
aad
mov
and
lret
aas
sub
incl
sbbl
sbb
scas
push
or
ffreep
and
add
mov
dec
hlt
xor
jne
movb
loop
add
fwait
dec
test
mov
xor
mov
cmp
inc
inc
ret
push
mov
or
mov
lret
sub
dec
pop
mov
pop
fwait
push
shlb
jmp
add
insl
lret
dec
sbb
xchg
add
test
aaa
leave
clc
push
xor
ljmp
jne
clc
test
jecxz
shrl
fiadds
std
add
out
or
test
lret
xchg
mov
cld
cmpsl
cmp
insb
fcomps
mov
pop
jae
scas
aam
jne
fstl
inc
inc
inc
mov
xor
and
jecxz
jno
and
or
loope
addl
hlt
call
add
add
xor
mov
movsb
jmp
rcl
xchg
shl
lret
addr16
stc
jmp
into
and
decl
add
xor
loopne
jo
arpl
cmp
pop
sub
fcoms
jb
sbb
outsl
mov
cmp
pop
fwait
or
push
cmp
push
popa
fadd
jg
hlt
or
jecxz
ds
in
dec
cmpsl
test
add
rorb
push
jo
add
add
or
xchg
je
cmpsb
xor
clc
dec
add
jae
fnstsw
jl
aas
aas
adc
je
mov
jmp
add
jnp
aaa
xchg
in
stos
push
push
je
clc
jmp
mov
int
mov
dec
push
lea
out
sti
cmp
push
in
pop
inc
jmp
and
sbbb
es
out
and
or
sbb
daa
repnz
mov
jge
out
roll
or
or
jmp
or
std
sbb
pop
jge
mov
out
add
inc
out
add
dec
mov
inc
pushf
imul
dec
push
je
push
push
jae
and
push
mov
adc
stos
adc
sbbb
ja
cld
bound
jge
xor
add
movsb
add
dec
stos
cwtl
cmp
jmp
sbb
jnp,pn
icebp
loopne
cmc
cmp
dec
pop
xor
push
roll
add
xor
xchg
jg
pop
inc
sbb
mov
pop
add
in
and
xor
sti
notb
mov
out
rcll
scas
mov
sbb
rcl
mov
repz
les
adc
adc
pusha
mov
cmp
cs
adcb
pop
mov
add
mov
or
cltd
sub
dec
movsb
or
push
or
fcoms
jbe
ss
icebp
into
or
jnp
xor
add
mov
cld
idivl
ret
cmpsb
faddl
stc
outsb
rol
jmp
mov
sub
mov
mov
lods
sbb
xorb
inc
jmp
inc
dec
fwait
inc
cmp
mov
mov
insl
mov
not
or
xor
scas
add
lock
mov
ljmp
jle
add
xor
xlat
lret
mov
dec
pushf
pop
lret
sti
shll
sar
pop
dec
bound
pop
dec
pop
mov
jo
shrl
mov
sti
out
test
and
stos
dec
fcomps
and
push
pushf
imul
shlb
or
mov
xchg
sub
dec
fmul
and
lods
xor
and
mov
stos
jbe
ret
sbb
push
int
mov
rcrb
dec
imul
push
ret
sbb
pushf
xor
fimull
jg
dec
orl
xchg
add
hlt
xchg
mov
and
cmp
arpl
jg
jne
loopne
in
inc
sahf
mov
xor
idivl
dec
leave
pop
in
aas
bound
lahf
push
das
fldl
outsb
push
mov
rorl
cmpsb
jne
pop
pop
addb
test
jno
mov
mov
iret
popf
add
nop
mov
sub
imul
imul
sub
xchg
ret
lods
mov
lea
xchg
in
jmp
inc
fucomi
cmp
add
add
xorl
shll
icebp
and
call
pusha
pop
loope
add
xchg
xorw
adc
lret
sahf
fwait
xchg
testb
movlhps
mov
iret
add
push
push
pop
jno
xchg
mov
mov
mov
cmpsl
fdiv
fisttpl
push
cmp
jbe
into
sub
out
jp
xchg
lock
iret
lcall
cwtl
mov
jmp
push
push
mov
add
adc
rolb
sub
mov
daa
lahf
add
dec
push
cmp
xchg
clc
cmpsb
add
mov
sahf
sub
mov
call
pusha
jns
pop
or
lock
js
in
inc
dec
add
pop
loope
inc
pop
xor
mov
mov
cmc
push
cld
jne
adc
jne
inc
fldcw
bnd
stos
mov
xchg
xchg
push
pop
pusha
and
lock
icebp
fidivrl
mov
jne
push
mov
test
shll
jae
push
add
xor
rolb
or
xlat
mov
add
dec
sub
mov
sub
lahf
add
jge
cmpb
push
idivb
addb
ja
lds
push
js
mov
sarl
clc
cmc
lret
in
jmp
pop
hlt
sbb
pop
cli
push
nop
pop
mov
outsb
jnp
cld
and
mov
pop
xchg
or
and
into
inc
popf
inc
inc
loope
jb
aad
pop
aad
fs
fwait
ja
movsb
add
xor
push
dec
es
mov
outsb
test
mov
dec
sarb
inc
or
xchg
sbb
or
aad
rorl
mov
loop
adc
cmp
andb
add
jg
mov
repz
or
sub
pop
pavgw
jmp
shl
mov
add
lahf
in
rclb
pop
xchg
outsb
aam
inc
out
or
or
jge
inc
sbb
mull
pop
jo
repnz
cmpsb
iret
mov
or
mov
fistpl
cwtl
dec
test
test
jbe
dec
js
sub
out
out
int3
loopne
adc
loope
and
sub
sub
and
or
mov
jmp
outsl
test
clc
bnd
cltd
call
xlat
inc
xor
push
aaa
xor
lret
add
mov
mov
stc
aaa
cld
int3
add
outsl
sahf
sbb
or
lock
outsl
mov
std
notb
xchg
mov
clc
test
daa
mov
lods
sbb
pushl
push
jge
cld
imul
inc
dec
jecxz
inc
cmp
orb
and
xor
xchg
add
pop
sbb
sub
dec
xchg
loop
add
out
imul
into
lods
pop
rcr
dec
mov
insl
daa
lea
xor
push
fucom
mov
stos
arpl
lock
sbb
mov
sti
addb
adc
mov
ljmp
loop
mov
sub
loopne
sbbb
aaa
fcmovne
push
hlt
ja
ret
sbb
call
ret
xchg
pop
mov
mov
clc
sub
lods
fcmovnb
dec
into
sub
sbb
adc
ret
cli
insb
std
push
jb
push
in
pushl
cld
mov
mov
pushf
jecxz
mov
jo
test
mov
int3
jnp
ret
outsb
pop
dec
faddl
into
sbb
mov
mov
rorl
ja
inc
cmp
testl
push
ss
shl
pop
pop
cmp
sub
jp
sub
xorl
jl
addr16
ret
sub
jge
mov
dec
sbb
sbbl
pop
cmp
out
outsb
sub
test
push
or
enter
repnz
mov
cmp
aas
bound
cmpsb
xchg
mov
imul
mov
stos
fs
sub
js
mov
insl
adc
inc
lods
push
dec
stos
rcrl
jo
add
sahf
imul
movsb
pop
pop
adcb
sbb
fwait
clc
xor
call
lahf
sbb
cs
lock
inc
cmpsl
lahf
mov
fistps
mov
aam
movb
or
cmp
pop
mov
aad
aas
cmpsb
pop
clc
inc
shll
test
dec
dec
sti
insb
or
xchg
jecxz
test
scas
cmpps
mov
cmp
clc
test
jae
mov
jmp
pop
mov
rorb
fnstsw
adc
out
mov
push
lods
and
or
shlb
xor
add
fisubrs
inc
ret
inc
loope
inc
adc
fmull
js
test
sti
mov
cmp
push
xor
mov
mov
adc
jmp
lock
xor
leave
stos
mov
or
xchg
daa
dec
xchg
ds
cld
xchg
sub
lea
cmpl
jbe
popa
outsl
mov
mov
push
loopne
push
adc
flds
push
jae
cmp
and
das
sbb
or
add
test
ljmp
pop
arpl
stos
out
push
dec
fs
sbb
enter
pop
sbb
and
clc
movl
in
push
xchg
rcrl
test
sti
arpl
clc
sub
lds
mov
jecxz
push
push
sub
cmp
inc
aad
mov
mov
adc
or
leave
cwtl
cmp
das
mov
lods
mov
addl
outsb
or
or
scas
decl
pop
cmp
jg
rorb
and
sub
mov
jo
sbb
repnz
xchg
shl
dec
les
js
push
jecxz
addl
pop
jb
or
cld
adc
mov
loope
loop
sub
enter
add
sub
push
insl
scas
mov
dec
adc
dec
inc
mov
add
ljmp
and
pop
add
pop
rcrb
add
xchg
mov
cld
or
sub
and
in
ja
jo
add
and
stc
jne
mov
dec
mov
jbe
pop
test
mov
insb
aas
dec
mov
and
imul
shlb
incl
mov
mov
xor
jbe
pop
ret
cmpsl
int3
adc
sbb
lods
pop
dec
adc
pop
jns
or
mov
das
int3
jo
rorb
mov
adc
arpl
push
xchg
inc
mov
mov
add
xchg
or
daa
je
xchg
in
jmp
sti
aad
clc
jne
leave
cld
cmp
pop
xor
loop
lcall
cmpl
sbb
mov
pop
sarl
lods
rolb
cmpb
data16
sub
xchg
stc
cmpsl
mov
inc
mov
mov
mov
pop
or
mov
js
inc
sub
jb
ret
sub
loope
ret
pop
sub
sbb
mov
xor
xor
pop
jb
ret
mov
push
add
lcall
cmpsb
icebp
xchg
jno
and
cmc
sbb
mov
cmp
leave
jmp
xchg
and
sub
cli
xchg
aam
cmp
mov
and
pslld
or
sub
dec
pop
sbb
pop
push
sbbb
arpl
aaa
cld
loopne
mov
aam
xor
mov
xchg
pop
aad
fildll
jecxz
xchg
punpcklbw
sbb
sbb
loop
adc
ljmp
mov
idiv
sbb
fimull
pop
push
push
xchg
loop
mov
lret
ret
xor
ds
mov
arpl
or
xor
lock
icebp
bound
mov
mov
fimuls
sbb
dec
js
lcall
scas
push
pop
pop
call
adc
push
sbb
in
cmc
aad
imul
push
addl
xorl
push
inc
stc
sarb
or
xchg
and
test
pop
mov
ficompl
lock
sarb
adcl
push
addl
out
insl
mov
js
and
aam
cs
call
pop
or
mov
pop
mov
cmp
pusha
stos
jns
aaa
and
adc
xchg
fildll
fsubrl
popa
mov
iret
jae
cmpsl
into
scas
mov
into
loope
fimull
xlat
mov
add
rcrb
shrl
insb
rcl
jp
loopne
inc
lea
or
jne
jno
leave
and
je
das
push
ljmp
xchg
sub
add
jb
push
pop
jge
stos
mov
pushl
adc
sub
and
sbb
imul
repz
push
or
jl
add
mov
mov
mov
xor
insb
popf
and
fnstsw
dec
repnz
outsb
inc
cltd
mov
lock
cld
push
jbe
push
ja
adc
cltd
loopne
js
ret
add
pop
lock
movzbl
push
fst
or
mov
outsb
lods
sbb
mov
in
dec
xlat
or
insl
adc
pop
push
adc
xchg
sbb
add
and
rcr
ret
adc
decb
cmc
test
repz
cmp
add
or
lock
outsl
pop
fmull
pop
jp
rolb
jl
adc
or
and
lds
push
inc
push
dec
adc
ret
mov
pop
stc
dec
loop
int
jne
fisubs
push
cmp
hlt
and
cwtl
and
jo
les
inc
sbb
xor
loopne
cmp
xchg
add
les
sbb
add
shl
push
andb
xchg
xchg
icebp
pop
aam
jg
xchg
jecxz
or
fistpll
lret
jmp
or
jl
int3
xor
fcomip
jns
inc
xor
add
mov
mov
dec
xchg
loop
sub
icebp
inc
adc
and
cld
mov
andl
std
or
pop
into
inc
jge
mov
wbinvd
clc
inc
movsb
popa
pop
dec
call
and
out
ds
mov
dec
add
adc
test
mov
dec
daa
inc
xor
mov
jns
aam
subl
inc
and
sub
dec
insb
dec
ret
add
sub
lds
mov
xor
dec
clc
sub
xchg
out
inc
pop
aas
aam
mov
sbb
aas
scas
je
rorb
shl
adc
jo
mov
lahf
push
push
notb
pop
jmp
jns
mov
fdivrs
stos
inc
bound
pop
jge
imul
fimull
push
inc
sub
mov
std
movsb
hlt
lret
lret
je
push
push
jo
mov
mov
mov
sahf
sbb
int3
in
sbb
fstpl
lret
pop
test
or
push
mov
les
aad
shr
pop
add
jbe
dec
jg
mov
fmull
xor
jnp
mov
and
xchg
sbb
cmp
insl
ss
mov
movsb
mov
cmp
addr16
loop
mov
cmp
xor
clc
add
sbb
out
test
jl
jbe
lcall
cmpsl
repz
cmpsb
pushl
cmc
shlb
mov
or
ss
movsl
or
sbb
sbb
arpl
hlt
jnp
sbb
scas
xchg
fmull
xor
int
jg
mov
mov
add
adc
testl
cmp
sbb
sbb
push
or
push
xor
call
daa
fnsave
pop
push
inc
jecxz
mov
outsl
cli
jb
imul
mov
mov
xchg
ljmp
aam
xor
inc
add
es
fsts
push
mov
pusha
or
mov
inc
hlt
fcmove
aam
jg
xorl
adc
dec
inc
fimull
cmp
jmp
fcomp
mov
and
or
jecxz
mov
js
push
mov
sub
sub
test
sub
or
sbb
add
xor
cs
pop
xchg
pop
or
pop
add
decl
pop
xchg
scas
call
add
jmp
jb
adc
cmp
sbb
enter
mov
call
add
out
mov
incl
int
call
sbb
mov
cltd
add
ret
stos
and
adc
repnz
mov
cltd
imul
sub
into
and
ret
push
fbstp
stos
movsl
loop
and
pop
js
push
subb
cmc
mov
mov
ss
aaa
sub
mov
addb
add
jmp
test
mov
xor
or
jg
fdivrs
inc
mov
aad
pop
dec
cmp
xor
ffree
cmpsb
ja
add
negb
xchg
pop
inc
in
std
sbb
inc
or
inc
xor
pushf
cmc
pop
adcb
pop
mov
mov
xchg
add
pop
and
iret
fwait
lcall
movsb
mov
sahf
push
nop
into
int3
sbb
xlat
bound
lds
mov
insl
or
push
xchg
cmpsb
aas
mov
or
imul
xchg
pop
sahf
mov
in
sub
mov
dec
ss
mov
out
dec
pushf
jo
pop
fwait
jne
inc
xor
or
cmp
negb
jo
xchg
mov
add
movsb
or
adc
loop
cmp
movb
je
ret
xor
xchg
popf
push
sub
addb
adc
or
shlb
in
jno
adc
dec
push
cmpsl
into
popf
adc
cmp
incb
fldcw
cmp
daa
lret
adc
les
mov
adc
sub
cld
sbb
ret
fidivrs
mov
mov
push
lea
inc
push
and
pusha
or
mov
subb
jo
aas
add
xchg
scas
rcrl
es
test
pop
or
out
and
push
jecxz
cmp
and
xor
pop
mov
test
lahf
push
sbb
loopne
loope
mov
ficompl
dec
pushw
lret
xchg
gs
dec
cli
xchg
sbb
das
clc
gs
xacquire
dec
outsb
pop
and
lahf
mov
notl
mov
add
push
test
ret
pop
dec
push
add
push
sti
push
mov
repnz
or
pop
jge
insl
cmp
enter
mov
icebp
std
out
mov
ss
sub
lds
sbb
add
add
pop
jg
dec
mov
mov
je
mov
aam
fwait
push
xor
xorb
inc
dec
sbbb
adc
loope
loopne
and
push
jl
push
hlt
jg
addr16
les
inc
xchg
dec
xor
icebp
lock
movsb
adc
shll
sbb
icebp
stos
sbb
inc
inc
add
les
inc
fwait
adc
aaa
xor
stos
mov
and
mov
stc
push
fisubrs
lods
popa
lods
dec
jno
push
pop
add
pop
clc
sahf
or
or
in
xorl
jbe
out
mov
outsb
xchg
pushf
inc
xchg
pop
ror
insl
call
pop
and
dec
add
and
lret
mov
aaa
pop
jmp
dec
and
or
mov
nop
lret
ret
push
enter
fildl
std
sti
int3
dec
jo
in
call
adc
fiadds
push
xor
sub
adc
mov
or
loop
shlb
inc
pop
jnp
icebp
addl
cs
adc
movsb
cmovns
inc
sbb
es
xchg
pop
loopne
pushf
xor
cmp
mov
das
roll
mov
mov
dec
decl
fs
mov
inc
cmp
xor
int
lcall
jae
and
lea
xlat
lret
mov
cli
imulb
das
loopne
lock
out
xchg
push
fmull
mov
pop
test
mov
push
iret
test
mov
addb
xor
xchg
loop
int
inc
cli
or
cmpsl
sub
sbb
out
xchg
pop
push
or
movsl
mov
push
push
movsb
in
out
dec
hlt
loope
cli
adc
inc
jo
jecxz
xchg
mov
jg
pop
movl
mov
rcll
idivl
inc
fcoms
iret
or
int
xchg
cmpl
enter
jne
mov
push
loop
dec
cli
iret
sbbb
loopne
add
jp
adc
mov
ret
mov
jo
sub
cli
push
ss
mov
iret
mov
mov
popf
aas
clc
mov
test
inc
and
mov
pop
pop
add
dec
inc
xlat
push
fisttps
add
cmp
imul
dec
les
push
sbb
jecxz
movsb
pop
adc
jp
ret
and
cmp
dec
push
ficoml
retw
xor
or
push
in
loope
scas
hlt
xor
xlat
dec
xchg
adc
mov
cs
fistl
cmpsl
dec
int
xchg
in
add
fmuls
pop
push
subb
push
outsb
lahf
orb
jp
pop
dec
hlt
xor
cmp
jb
cltd
je
into
inc
lea
les
sbb
leave
adc
jmp
adc
shrb
enter
add
jno
in
sbb
inc
idiv
cmc
aaa
mov
adc
cmp
add
arpl
sub
rcl
addb
ffree
push
ljmp
loope
mov
push
xorl
pop
jge
lahf
xorb
or
xor
pop
xchg
mov
or
cmp
aas
sub
adcl
pushf
mov
push
jp
pop
mov
je
sbb
adc
xchg
hlt
sbb
adc
out
repnz
add
sbbl
cmp
mov
stos
xchg
cwtl
pushf
pop
sbb
loope
addl
fstl
andb
outsb
or
sub
test
cmc
xchg
cli
mov
xor
push
jle
dec
mov
jmp
outsb
mov
mov
or
daa
sbb
jecxz
mov
clc
and
cmpsb
add
and
add
dec
mov
and
fldt
add
rcrl
clc
push
loope
loopne
mov
scas
scas
jae
movsb
push
dec
inc
xchg
mov
pop
addb
cmp
popf
adc
jae
inc
sub
dec
sub
loope
push
ret
cs
movsl
add
aam
pusha
call
outsb
out
mov
xchg
cmp
mov
icebp
dec
mov
xor
pop
jo
cmp
add
es
lcall
int3
push
sbb
mov
jp
adc
adc
leave
cmovb
std
sbb
sarb
xor
pop
push
lds
cmp
jo
das
lock
add
imul
push
test
js
xchg
inc
fcompl
sbb
imul
dec
adc
insb
mov
roll
add
nop
push
pop
icebp
jl
xchg
xor
pushl
mov
jecxz
and
pop
repnz
sbb
push
add
lahf
bound
sub
mov
xor
push
dec
pop
aas
out
jle
cli
sub
scas
pop
xor
out
lods
mov
hlt
fidivrs
cmc
arpl
icebp
lock
xchg
out
push
mov
jns
inc
dec
pop
mov
leave
inc
lock
rcrl
adc
cmc
jecxz
popa
sub
jge
mov
outsb
add
into
jb
fisttpl
cmp
sbb
rclb
inc
jo
jbe
aaa
aam
push
mov
shrl
test
mov
shr
aam
mov
movsl
js
cmpsl
xor
pop
add
rcl
into
jnp
jmp
inc
or
pop
push
dec
iret
cmp
pop
loope
movsl
lea
jl
jns
mov
mov
xor
push
in
and
ljmp
test
hlt
adc
stos
mov
push
enter
xchg
pop
jg
ficomps
out
lock
pop
loop
jp
mov
fsts
insl
push
outsb
loopne
sub
adcb
mov
cmpsb
mov
stos
mov
xor
dec
add
xor
adc
neg
cld
aam
cmp
pop
pop
scas
fs
repz
sub
push
pusha
insb
adc
and
fnstcw
mov
mov
inc
sbb
enter
outsb
outsl
dec
mov
mov
je
inc
outsb
push
enter
sbb
push
pushf
lock
sbbb
push
jo
popa
popf
push
outsl
mov
pusha
or
pusha
sub
jle
mov
xchg
jbe
pop
and
ret
mov
jecxz
sbb
repnz
jae
cmp
int
aad
push
push
sti
mov
test
cmp
pusha
fadds
je
adc
pop
jge
fs
cld
adc
sbb
lea
mov
add
dec
adc
add
xchg
out
mov
dec
cmc
push
lcall
hlt
je
in
adc
add
xor
xor
imul
cld
movsl
test
pop
mov
mov
shlb
scas
xchg
mov
ss
fldt
test
or
jb
jae
jge
add
adc
inc
int3
mov
push
popf
add
xor
mov
out
shlb
jmp
jno
dec
lods
sti
or
pop
out
jecxz
add
and
aas
sbb
xor
mov
fidivrs
push
bound
xor
xchg
mov
add
inc
xlat
nop
jp
push
push
lock
adc
icebp
fadd
sub
std
cwtl
pop
in
sbb
hlt
clc
shlb
aas
xchg
lods
outsb
mov
loopne
add
push
xchg
arpl
test
mov
dec
cmp
mov
push
xchg
pop
sub
movsb
mov
test
dec
adc
sub
adc
jo
push
jnp
daa
aaa
xchg
shl
loop
push
jo
push
cmp
mov
inc
sar
nop
iret
rcrb
sbb
lcall
insl
push
into
mov
mov
sbb
shr
adc
cmpsb
xchg
mov
shlb
mov
lcall
sub
shll
rorb
cld
push
add
in
in
lock
adc
cmp
dec
xchg
clc
loopne
adcl
lock
andl
adc
push
add
insl
aaa
add
ds
nop
and
dec
adc
aas
mov
push
clc
std
jmp
cmpb
fs
mov
add
ret
sub
pop
xchg
sti
js
xor
mov
mov
adcl
call
imul
sub
addb
mov
loop
sbb
loopne
nop
mov
icebp
lock
adc
dec
mov
inc
movsl
loop
adc
pop
mov
cmp
divl
out
dec
xchg
push
mov
xlat
mov
and
aam
addb
in
adc
test
mov
pop
faddl
push
js
or
push
mov
sub
sbb
ljmp
int
sbb
jmp
cmp
scas
mov
cmc
ljmp
shr
das
push
and
add
test
sbb
push
lds
inc
lahf
scas
cmp
xchg
ret
es
fcoms
jne
mov
or
mov
sub
cli
das
jne
dec
xchg
push
mov
testl
push
scas
or
ror
mov
or
push
std
mov
push
cmc
cs
inc
stos
scas
fneni(8087
out
hlt
icebp
cmp
dec
add
or
sarb
mov
dec
push
pop
mov
outsb
lods
pop
sbb
pop
ljmp
mov
fistpll
xor
daa
rclb
mov
xchg
fdivs
adc
inc
lret
or
push
mov
loopne
adc
iret
jge
insb
loopne
leave
push
js
mov
cmp
or
mov
sub
out
test
scas
mov
sub
inc
out
adc
and
cmp
xchg
rcrl
jno
jb
cmp
inc
and
mov
mov
push
incl
cmpsb
loopne
js
jl
mov
icebp
pop
push
mov
in
jo
sbb
rcrb
push
enter
movsl
sub
dec
pop
stos
les
lods
movsb
xor
insl
daa
lods
pop
popw
jmp
enter
pop
das
cmp
jns
cld
or
push
push
mov
lret
sbb
jne
movsl
dec
jbe
push
shrl
test
jne
jmp
xchg
fimull
rolb
test
aaa
call
jo
lds
hlt
nop
js
out
xchg
fcomip
mov
fsubr
or
scas
pop
rcrl
into
xchg
fistpl
orl
scas
andb
movl
and
mov
popf
mov
aaa
xchg
pop
scas
mov
aam
sbbb
in
xor
or
cmp
fsubr
add
xchg
icebp
nop
jp
sub
dec
loope
idivb
or
lods
cwtl
push
cmp
pop
shr
shll
mov
jmp
dec
jg
push
mov
test
cmp
into
mov
aam
cli
lcall
daa
loope
pop
xor
xor
add
xchg
flds
call
adc
int3
inc
mov
jne
cli
sub
xchg
jge
mov
pop
lcall
dec
pop
insb
mov
sbb
jnp
jmp
rolb
mov
push
inc
ret
dec
loope
pop
xor
lahf
inc
dec
pop
shl
xor
push
cli
imul
addb
pop
push
jb
test
mov
cmp
dec
mov
lea
fldenv
aad
mov
mov
xor
cli
inc
mov
fdivrs
push
and
jp
lcall
pop
test
cmp
mov
xchg
mov
insb
mov
aaa
cld
dec
add
sub
rolb
orl
add
and
in
inc
mov
xor
aas
dec
aas
pop
lcall
popf
psadbw
addl
push
sbb
loop
lcall
insb
mov
or
mov
mov
lods
cmp
lcall
push
push
xchg
data16
fisubrs
dec
inc
lds
sub
std
clc
inc
mov
test
pushl
mov
sbbb
pop
insl
inc
mov
add
jge
loopne
xchg
hlt
jmp
adc
inc
sub
in
imul
jno
pop
repz
popf
addl
adc
outsb
int
dec
data16
dec
mov
inc
push
sbb
and
add
or
mov
mov
out
cmpsl
cmp
sti
push
add
push
inc
mull
popf
mov
data16
sub
sub
test
and
clc
mov
mov
aam
inc
out
add
clc
insb
sahf
icebp
push
push
popa
cmc
push
ret
xor
mov
jns
jo
mov
sbb
sbb
lods
jae
int3
push
aad
mov
fwait
cwtl
pop
push
stos
pop
loope
or
adc
fisubs
rorl
shrl
in
pop
orb
arpl
pop
pop
sub
pop
dec
inc
fistpl
add
sbb
out
fbstp
xor
je
pop
sub
dec
lods
aam
imul
rorb
inc
adc
cwtl
enter
popa
sbb
sub
sbb
das
sbb
addr16
mov
icebp
push
xorb
mov
mov
and
inc
test
mov
out
inc
pop
pop
sbb
mov
je
mov
dec
add
mov
insl
and
sbb
lret
lret
jb
inc
sbb
adc
pop
popw
and
add
out
push
add
ds
stc
pop
andb
add
enter
mov
cmp
popf
mov
addb
pushf
leave
jno
fisttpll
mov
dec
and
and
add
mov
adc
sub
int3
adc
inc
lcall
rorb
dec
add
int3
or
mov
or
and
int3
insl
cwtl
dec
mov
into
mov
cmpsb
mov
rolb
xor
les
ss
adc
cmp
loop
cltd
and
fiaddl
or
sahf
or
fs
jp
rorb
cmpsb
in
out
cld
xchg
ss
dec
xchg
lock
mov
in
call
cltd
xchg
or
stos
jge
into
mov
pop
stos
pop
jle
daa
aam
es
cmc
push
test
hlt
shrl
fidivrs
pop
ret
add
pop
rcrl
sti
in
jmp
push
sarl
lfs
xor
andb
imulb
popa
or
adc
cwtl
fcompl
orb
dec
loopne
lods
daa
mov
dec
loope
mov
jbe
clc
icebp
push
and
xchg
movb
nop
add
lea
test
push
dec
cmp
mov
loope
inc
jmp
addr16
repnz
or
shrb
push
js
add
adc
test
inc
in
inc
ja
shl
ja
pop
or
and
pop
push
mov
insb
sub
fildl
lret
mov
shl
xchg
xchg
leave
in
dec
sbbb
lods
scas
fdivrs
lret
lcall
insb
or
adc
orl
dec
mov
imul
add
sub
pop
push
cmp
push
int
push
out
fcoms
add
lret
decl
loope
and
adc
js
loop
or
inc
dec
pop
jp
mov
mov
cmp
mov
dec
outsl
dec
fwait
stc
mov
mov
mov
dec
inc
mov
fcomi
loope
push
mov
ret
add
aam
dec
mull
lock
popa
fcomp
jl
xor
mov
push
inc
mov
xor
pusha
mov
ficompl
and
xchg
lods
les
cmpsb
cli
cmp
cmp
lock
xchg
aam
adc
mov
and
sbb
std
ljmp
inc
or
mov
arpl
sbb
jmp
xchg
rorb
sub
jmp
decb
les
lock
sub
js,pt
std
cmp
out
push
rol
rorb
in
test
sbbb
xchg
or
mov
fwait
xor
sub
ss
mov
fadd
iret
mov
pop
push
insl
inc
adc
push
inc
loopne
xchg
cmpsl
jb
push
lock
loop
jp
mov
lods
cmpsb
hlt
or
sub
cld
pop
and
xchg
cld
in
jle
push
jl
cltd
les
das
push
xchg
lahf
dec
mov
inc
pop
pop
mov
cmpsb
les
jbe
adc
push
mov
fisttpll
mov
xchg
pop
xchg
nop
pop
icebp
test
mov
xor
jmp
xchg
vcvtsi2ssl
stos
xchg
lea
jp
subb
das
mov
add
adc
and
daa
mov
inc
incl
rolb
mov
jmp
fidivs
mov
adc
xchg
test
dec
xchg
dec
ret
pop
mov
mov
loopne
push
out
mov
outsl
divb
lcall
inc
pop
xchg
inc
add
mov
sbb
mov
sub
test
xor
std
dec
sbb
mov
movsb
pop
add
xor
mov
push
jnp
dec
in
rorb
mov
shlb
sub
arpl
cli
cmpsb
or
mov
pusha
push
sarl
cmp
push
shlb
faddl
pop
bound
es
idivl
pop
and
cmp
adc
in
push
outsl
xor
mov
cmpb
or
or
push
ret
fs
hlt
sub
pop
es
inc
loopne
jg
push
gs
hlt
ljmp
call
mov
xor
or
test
pop
push
test
or
jo
test
lods
mov
mov
mov
loop
jne
push
or
jbe
mov
daa
sub
sbb
loopne
mov
enter
xchg
repz
aad
adc
popa
scas
fcomps
pushf
sbb
stos
sbb
jl
std
aaa
adc
cmp
and
or
dec
xor
outsb
mov
dec
outsl
push
push
imul
movsb
adc
scas
ds
xchg
pop
cmpsl
stc
or
sahf
mov
stc
inc
add
mov
mov
sbb
push
popf
loope
add
aaa
mov
test
pop
push
int3
push
aaa
andb
mov
jl
push
adc
mov
pop
lret
std
mov
fisubrs
lods
leave
aas
push
mov
add
imulb
es
dec
clc
fldt
ss
inc
mov
fs
insb
xchg
fisttpll
es
int3
jno
push
mov
stc
lds
cmp
add
punpckhbw
dec
adc
add
rcr
iret
push
jle
loope
adc
std
sbb
mov
or
mov
jl
and
push
gs
int3
rolb
js
aaa
jl
test
mov
xor
xor
or
movsb
out
je
inc
xor
xchg
add
or
les
fs
mov
or
scas
adc
inc
or
inc
or
cmpsb
add
dec
outsb
cmp
mov
sbbl
dec
jle
cmp
xor
xchg
sub
outsl
inc
push
jmp
add
push
cvtps2pd
divb
mov
dec
cmp
call
lcall
inc
mov
cmp
test
call
lret
adc
sub
pop
aas
imul
mov
mov
xchg
jge
pop
mov
fnsave
sbb
ljmp
imul
jnp
pop
mov
pop
outsl
lods
cltd
jecxz
xchg
mov
mov
test
cli
jp
add
and
out
test
nop
mov
loope
and
cmp
push
sahf
and
push
or
mov
out
aam
xchg
shlb
out
push
in
jnp
mov
dec
call
xor
mov
jge
cmp
in
in
and
ja
jo
ds
movsb
in
cmc
data16
cld
jb
add
test
pop
cmpsb
fisubl
or
jle
aam
cmp
jmp
bound
enter
add
loope
movsl
push
aam
mov
test
ljmp
daa
inc
in
push
lret
icebp
add
dec
xchg
je
inc
xor
mov
add
xchg
and
add
in
movsb
push
cmc
pand
addl
jge
xor
or
cwtl
aas
rclb
ret
test
push
jl
and
pop
stos
icebp
stc
jns
lds
fbstp
popl
jge
xor
xor
push
lock
nop
inc
push
inc
cmp
push
fildll
ror
sbb
orb
stos
push
adcb
out
repz
jb
mov
adc
pop
mov
jnp
mov
movsb
jp
daa
or
dec
je
push
call
pop
fiaddl
testb
stos
cwtl
sbb
jp
sbb
xchg
and
mov
pop
rorl
andb
push
ret
push
cmc
inc
mov
fidivs
bound
jnp
and
jo
jp
scas
inc
or
fcoml
loopne
inc
fidivl
mov
jle
test
les
sub
adc
int
add
mov
dec
out
add
roll
pop
inc
cmc
sbb
sub
pusha
fstl
pop
insl
sub
mov
fisttpl
aas
test
loope
xorb
jbe
cmpsl
pop
rcrl
sub
and
jns
inc
push
xlat
sub
mov
push
sti
mov
xchg
adc
inc
test
push
js
xchg
outsl
outsl
dec
maxps
ret
ljmp
fst
aad
cld
adc
arpl
pop
dec
popf
add
or
pusha
jecxz
xlat
inc
push
and
xchg
add
mov
sub
in
add
les
pop
sbb
adc
cld
pop
rorb
test
jbe
xchg
nop
push
sub
mov
adc
cmp
js
or
or
cmpsl
mov
popf
cli
or
jg
and
jbe
ljmp
test
pop
jecxz
cmp
push
scas
xorl
add
push
cmp
jle
std
pushw
and
jne
and
cs
jb
dec
ficompl
cwtl
js
sbb
rclb
push
ss
out
dec
sbbl
mov
cmp
call
aam
mov
inc
jns
xor
shr
clc
ja
push
cmp
pop
push
add
imul
fsubr
push
pop
je
mov
jmp
or
fcmove
mov
pop
insb
dec
leave
push
mov
cmpl
mov
dec
and
push
daa
mov
pop
movb
int
mov
pop
and
je
sar
cmp
idivl
and
out
jmp
sbb
fcomps
push
jo
xchg
lea
xchg
imul
sbb
inc
rol
xchg
arpl
pop
fs
scas
jb
adc
cli
inc
inc
shlb
adc
aas
or
into
insb
mov
inc
mov
sub
clc
iret
mov
push
jmp
lds
mov
and
adc
dec
popa
sarl
pop
inc
js
outsb
ret
jbe
fistpl
or
aas
mov
dec
outsl
cli
add
insb
sbb
outsl
pop
lret
inc
sahf
fimuls
loop
aam
and
fldl
add
pop
and
sbbb
mov
loopne
ficoms
mov
rolb
icebp
sbb
int3
repnz
xor
jnp
loop
cwtl
xchg
into
and
xor
or
movb
daa
mov
mov
insb
or
xor
push
jne
test
loope
add
jae
jle
inc
arpl
fwait
sub
ret
and
dec
add
adc
fwait
pop
pop
add
inc
rolb
push
arpl
outsl
cli
pop
adc
ljmp
mov
sub
push
mov
lds
mov
dec
icebp
mov
aad
jge
repz
push
movsl
jp
call
push
scas
cmp
cli
nop
mov
mov
sbb
sbb
ret
inc
dec
push
test
pop
xchg
aas
fidivrl
xor
mov
mov
adc
sbb
mov
test
pop
inc
cltd
jmp
fcoms
cmp
pop
cmp
ret
and
cmc
xor
push
adc
mov
jecxz
je
jnp
cli
dec
sbb
xor
out
mov
mov
decb
adc
adc
js
jbe
cltd
inc
inc
dec
cmp
or
dec
adc
sbb
xchg
into
cmpsb
adc
rcrb
and
or
ja
ss
lcall
dec
mov
pop
mov
cmc
inc
xchg
fstl
pushf
mov
dec
data16
and
mov
mov
fwait
sbb
and
test
mov
adc
push
mov
gs
add
sbb
hlt
mov
and
lods
sbb
mov
push
pop
mov
cmp
insb
push
popa
aaa
push
cwtl
enter
hlt
adc
pop
add
loopne
jo
repnz
adc
loope
rcll
movsb
aas
repnz
cld
mov
inc
rorb
jmp
sub
iret
nop
sarb
cmp
enter
inc
push
subl
jo
ror
sbb
in
inc
pop
pop
mov
mov
bound
adc
fwait
pushf
test
outsl
jnp
mov
test
pop
push
xchg
and
sahf
dec
mov
loopne
pop
outsb
mov
ret
gs
aad
subl
icebp
push
mov
mov
movsb
add
xor
adc
jl
cmc
xor
push
cmc
push
push
pop
scas
lahf
into
mov
pop
insl
addl
jmp
mulb
loope
sbb
in
sub
mov
scas
test
fadd
nop
jp
ret
lcall
add
mov
cmpsb
loope
ret
push
jg
nop
lock
or
jp
icebp
imul
add
push
sbb
je
ljmp
lcall
into
mov
in
xor
inc
pop
addr16
arpl
xor
lret
out
sti
xchg
xor
adc
out
pop
loopne
movsb
pop
dec
pop
mov
into
cmp
xlat
xorl
mov
mov
jnp
sbb
cmp
leave
data16
adc
pop
adc
clc
ret
adc
pusha
in
xchg
mov
jb
jnp
movsb
dec
adc
lea
divb
sahf
push
mov
fiaddl
bound
mov
and
cmp
push
and
inc
jl
adc
daa
xchg
push
xor
and
rolb
or
lcall
or
xchg
jo
cmp
in
cmp
jns
fcmovnu
fnsave
mov
je
add
mov
dec
bound
jmp
pop
and
sbb
daa
jl
int
push
xor
add
mov
mov
jne
jb
xlat
mov
shrl
pop
into
dec
jg
test
adc
or
popf
jecxz
aam
cmp
sub
adc
sub
lods
sub
pop
fnstsw
add
mov
lahf
inc
cwtl
pop
mov
aam
and
mov
test
movsl
dec
jbe
aaa
mov
lahf
cld
cmpsb
fucomip
mov
adc
into
pop
dec
in
bound
out
cmpb
pop
jl
shrb
pop
repnz
das
subl
test
mov
adc
out
push
jbe
aad
scas
cmp
adc
out
jg
xor
daa
movsl
imul
pop
in
xor
jae
sub
cmpb
push
out
inc
xchg
xor
test
adc
adc
adc
mov
sahf
test
add
test
jmp
push
and
shlb
dec
lods
clc
outsb
sub
sar
loopne
cmp
jle
cmpsl
sub
inc
xor
test
pop
or
add
inc
or
pop
xchg
adc
push
mov
push
and
insb
dec
rcr
sub
arpl
out
and
push
and
cltd
dec
jne
ljmp
mov
pop
pusha
rcr
push
mov
inc
jp
data16
add
or
in
cld
ret
add
lock
lock
lldt
sbb
push
pop
mov
and
push
jnp
jne
sbb
inc
mov
popa
loope
roll
mov
jne
mov
mov
push
adc
inc
mov
pushf
push
xor
test
adc
in
push
inc
jbe
cltd
mov
imul
adc
cmc
jae
js
add
mov
cmp
jmp
sarl
or
es
inc
test
and
rolb
mov
lods
paddb
cmpsb
adc
mov
cli
pop
stos
ja
dec
mov
pop
fnsave
inc
dec
lea
js
push
cmp
cmp
and
sarb
adc
lock
jg
dec
pop
ret
test
pushf
add
mov
add
inc
mov
xchg
cmp
cmp
cs
hlt
and
pop
and
mov
fdivl
push
mov
cmp
inc
pop
adc
outsb
in
cmp
dec
mov
pop
adc
fcompl
andb
sbb
dec
mov
pop
lods
dec
clc
orl
push
mov
aaa
inc
dec
lods
push
outsl
and
and
icebp
cmp
dec
scas
inc
dec
xchg
imul
xchg
mov
insl
xor
xlat
inc
mov
jp
xchg
sbb
adc
call
adc
xchg
xor
decl
mov
xor
add
imul
adc
data16
cmp
add
fisubrl
or
xchg
inc
dec
pop
rorl
push
xor
ret
xchg
loopne
add
popf
sbb
pop
sbb
lock
and
sbb
es
add
xlat
push
cmp
in
cld
pop
mov
fcomps
pop
push
mov
cmovs
js,pn
maxps
xchg
pop
sub
clc
jmp
mov
data16
pop
xchg
pop
ja
or
fiadds
pop
adc
pop
push
pusha
jno
leave
sbb
shll
pop
add
sbb
mov
xchg
cmp
test
and
daa
jl
adc
mov
lahf
stc
xor
push
cltd
pop
mov
adc
inc
sbb
add
outsb
fldenv
fs
lcall
bound
jmp
mov
jl
loopne
jle
push
cmpsb
decl
jo
jge
es
ljmp
inc
sar
and
fwait
xchg
out
inc
inc
or
ljmp
adcl
outsb
jb
mov
sarb
aam
mov
and
xor
push
sub
mov
sbb
xchg
mov
cmpsl
dec
sub
xchg
icebp
in
outsl
lods
cmp
cmc
js
cwtl
stos
je
ja
sub
adc
ret
fnsave
inc
inc
rcr
ljmp
jecxz
jno
xor
jmp
in
adc
lock
loop
sti
stos
xchg
and
xlat
cld
pusha
sbb
push
dec
sbb
lock
cs
shl
or
dec
cwtl
adc
lea
cmp
fs
rclb
pop
or
inc
mov
pushf
add
xchg
dec
push
dec
je
adc
mov
pop
loope
data16
loopne
cld
lea
data16
inc
adc
test
fdivrl
jno
add
fistl
push
jg
inc
jb
mov
clc
dec
cmp
and
lods
lcall
clc
icebp
dec
push
push
dec
int3
pop
adc
inc
into
inc
es
add
pusha
bound
addl
add
dec
push
mov
pop
sub
dec
and
fisttps
aam
cmp
scas
push
loopne
je
jb
cli
aam
test
jge
jno
test
pop
scas
add
rolb
sub
insb
das
orb
rolb
add
sub
jg
dec
add
xor
inc
cmp
pop
addl
ret
incl
cltd
sbb
xor
pop
add
shrb
and
outsl
push
mov
cmp
aas
mov
cmp
clc
insb
cld
ss
sbb
popf
xchg
outsl
outsb
mov
out
imul
cld
test
jbe
test
es
sbb
jmp
inc
mull
mov
mov
or
push
nop
push
scas
imul
mov
xchg
sub
inc
dec
jge
stc
mov
mov
pop
pop
push
mov
jns
push
outsb
pop
pop
add
pop
sbb
out
hlt
in
cmp
mov
pop
lret
inc
or
lods
push
sbb
fdivs
rolb
in
in
adc
fimuls
outsl
jb
xchg
popl
nop
and
loopne
out
and
mov
sbb
out
out
out
shl
pop
sub
insb
inc
cli
out
int
or
pusha
mov
cmp
pop
test
mov
in
imul
push
sub
mov
loope
sub
sbbl
cmpsl
aam
sbb
or
roll
stos
pusha
cmc
jbe
adc
push
lahf
sub
mov
and
push
xchg
pop
mov
cmc
add
mov
sbb
testl
sub
adc
test
xor
cmp
jae
sbb
inc
out
rcrb
subl
and
not
pusha
xchg
pop
sub
inc
push
dec
popa
popa
ret
mov
or
fstpl
cld
adc
pop
push
cmc
je
add
dec
add
pop
sub
sub
push
mov
mov
mov
mov
lret
push
shrb
mov
sbb
add
jno
aaa
xchg
inc
and
xor
adc
mov
test
or
pop
scas
dec
stc
or
sbb
mov
push
cld
inc
lea
inc
nop
popf
mov
and
pop
adc
add
jl
adc
mov
sbb
in
sbb
mov
js,pt
pop
cmpsl
dec
xchg
cmpsb
inc
sarb
and
sbbl
mov
jl
or
mov
and
or
inc
loop
xor
lahf
mov
mov
shl
push
xorb
jns
dec
push
cmpsb
repz
mov
inc
and
sbb
lret
hlt
into
pop
xchg
mov
insb
cld
aam
push
ror
mov
cli
popa
cmp
xor
mov
pop
aam
ficomps
sbb
js
orb
int3
push
jecxz,pt
push
lock
jb
sub
jle
pushf
push
and
lea
sbb
add
push
inc
rclb
aam
andb
pop
shrb
pop
push
add
xlat
inc
or
add
lods
fildll
or
mov
jae
dec
or
fisubs
ljmp
xor
repz
inc
jbe
pusha
scas
stos
or
fiaddl
xchg
in
icebp
push
mov
sbb
or
adc
jp
mov
xor
lret
or
inc
lds
pushf
xchg
arpl
movsb
sahf
sbb
sbb
sub
aam
cmp
inc
test
adc
add
fidivl
pop
cmp
cld
mov
call
pop
jae
and
mov
or
js
push
xchg
flds
inc
fisubl
or
call
daa
pushf
or
mov
dec
push
idivl
bound
clc
lar
cmp
stos
outsb
push
in
xor
mov
call
xor
add
xor
cmc
jg
stos
xchg
sbb
rcr
arpl
ja
rclb
push
fnstsw
jbe
mov
or
insb
cmp
repnz
test
xchg
mov
xor
mov
test
adc
sbb
in
roll
push
lret
xlat
test
or
out
cmpsl
loope
imul
pop
cmp
or
push
inc
ret
ljmp
mov
dec
jo
mov
shll
mov
aas
cmp
mov
and
aam
jmp
imul
push
arpl
fidivs
cwtl
mov
add
ss
dec
scas
fidivrs
mov
loope
pop
testb
dec
mov
cmpsl
outsb
lock
test
out
push
pop
inc
idivl
inc
or
mov
push
pop
lret
ljmp
and
mov
push
popf
or
cs
sbb
cmpb
ret
mov
adc
cld
mov
in
gs
mov
in
jle
ret
popa
push
jle
and
int
mov
mov
and
and
insb
and
xchg
std
lea
fndisi(8087
dec
lret
mov
ret
fcom
jo
mov
pop
into
adc
das
pusha
jge
adc
fcoms
pusha
mov
scas
cli
clc
mov
mov
insl
movsl
xor
xorb
or
jmp
insb
fnsave
add
adc
adc
es
push
mov
push
mov
or
jg
sub
js
out
enter
shl
dec
loopne
in
mov
imul
es
sub
movsl
mov
mov
mov
hlt
push
lret
les
repz
and
mov
rcl
lcall
jecxz
cs
adc
mov
arpl
movsl
or
sub
dec
and
jge
lretw
push
mov
negb
out
movsb
js
sub
in
or
push
icebp
or
push
imul
xor
xor
orb
fnop
and
pop
pop
jo
insb
push
arpl
aas
pop
and
sbb
add
jno
adc
sub
movsl
rcr
jmp
fstpt
outsb
adc
pop
cli
mov
inc
out
push
cmp
add
idivl
aaa
aam
nop
mov
add
jns
into
add
daa
aad
sub
cmp
ss
jmp
out
and
xchg
pop
test
lds
je
ror
jl
or
cmp
mov
in
lcall
cs
aam
push
sbb
rorb
sub
rol
sub
push
mov
int
fisubl
clc
pusha
nop
icebp
push
cli
and
jl
fwait
mov
jo
mov
or
scas
inc
testl
or
clc
testb
lcall
add
add
mov
dec
lea
cmp
adc
add
or
add
rol
js
push
dec
inc
cmp
sbb
jg
sbb
mov
xchg
test
pop
shll
jb
lock
xchg
lea
outsl
test
hlt
or
lret
sbb
mov
or
and
cli
inc
dec
js
sbb
pop
push
rclb
inc
loopne
adc
pop
imul
jp
adc
xchg
subl
cli
das
mov
push
mov
loopne
mov
xchg
in
in
xor
or
hlt
das
insb
inc
pop
sti
fsubrs
nop
das
js
shll
fimull
lods
fsubrs
jbe
mov
jnp
or
and
or
cmp
dec
stc
mov
fisttps
jge
daa
jecxz
lods
inc
sbb
mov
inc
push
inc
inc
dec
in
ds
std
mov
push
sub
or
outsl
add
and
andb
mov
mov
call
pop
mov
fisubs
sahf
push
xor
into
jle
lret
jb
xor
ror
xchg
lods
adc
data16
push
lea
loope
adc
xchg
call
ljmp
clc
mov
add
add
bound
push
mov
or
ljmp
lea
les
adc
out
jnp
xchg
outsb
outsb
mov
add
push
mov
aaa
mov
arpl
sbb
je
add
arpl
aad
cmp
ljmp
shl
dec
movl
fldt
shr
test
jle
jne
shlb
icebp
icebp
or
mov
xor
andb
xor
mov
addb
shl
sbbl
or
mov
sbb
sub
mov
pop
movsb
mov
xchg
addr16
mov
fs
out
arpl
mov
mov
pop
dec
and
xor
add
mov
insl
das
cli
and
sub
mov
lahf
jmp
leave
jo
mov
push
incb
jne
mov
in
mov
dec
dec
adc
cli
fiaddl
imul
sahf
repz
push
add
fsubs
cltd
xlat
adc
ret
ds
decb
icebp
push
pmuludq
in
mov
push
stos
cmpxchg
mov
push
in
nop
add
pushf
scas
popa
add
xor
or
pop
clc
push
mov
dec
jl
jbe
es
test
ret
jno
jg
movsb
addr16
lret
rorl
inc
lcall
sub
cli
adc
imul
inc
test
ret
test
pop
jp
gs
sub
inc
push
xchg
loope
xor
lock
xchg
outsb
xor
inc
orb
hlt
mov
xchg
fcomp
mov
loop
xchg
inc
cmp
cs
mov
out
lahf
sub
or
and
adc
loope
adc
or
popf
inc
dec
mov
lods
cltd
sbb
call
orl
out
mov
sbbl
xor
add
xchg
pop
mov
add
or
jo
loopne
test
sbb
pop
mov
roll
dec
mov
mov
xor
mov
pop
sub
aad
rdmsr
adc
sbb
jbe
xchg
mov
fcoms
int
jp
mov
sahf
rorb
dec
pop
or
adc
das
lds
add
push
jbe
loopne
mov
and
pop
xor
pop
loop
lods
movsb
cli
push
sbb
ret
inc
xchg
ficoms
jecxz
leave
test
lods
jle
jbe
lahf
popa
loopne
lahf
notb
mov
jnp
cmp
ret
rorb
std
jne
dec
push
stos
xor
sbbl
pop
adc
xor
pop
xor
xchg
add
popf
flds
xchg
incb
inc
loop
jno
or
add
mov
cmp
addr16
das
xor
jo
inc
sub
mov
jge
mov
add
test
popa
std
or
push
imul
and
pop
pop
or
add
nop
xchg
mov
xor
jo
add
repnz
dec
mov
ja
jo
cmp
cld
jp
loopne
scas
ss
push
adc
jle
inc
lds
pushf
sub
and
or
lock
mov
cmp
ficoml
push
mov
sahf
decl
inc
notl
jl
xchg
cld
mulb
call
mov
push
jg
and
sbb
hlt
pushl
imul
or
movsb
dec
adc
mov
mov
xchg
ret
je
or
or
xor
cwtl
clc
pusha
add
scas
mov
sti
idivl
sub
ret
pop
popf
jmp
mov
pop
lods
cmp
lret
in
dec
cmpb
lfs
push
cmp
popa
addr16
lods
bound
outsb
stos
js
or
cld
sbb
in
xlat
jo
xchg
cld
xchg
pop
adc
ljmp
sahf
fnstenv
leave
dec
movsb
data16
add
fisubrl
pop
or
sbb
insb
jmp
and
pop
test
push
push
pop
sbb
out
lds
lret
in
cmpsl
outsl
sbbb
add
shrb
sahf
and
cmc
addl
mov
fsubl
loopne
push
es
loopne
sbb
cmp
mov
gs
jl
in
js
adc
pushl
cld
jge
xorb
ljmp
jge
push
pop
je
test
jecxz
pop
stc
test
jp
adc
out
das
inc
inc
jmp
jns
inc
add
add
pop
fadds
popf
and
cmpsb
pop
pop
add
mov
push
bound
repz
mov
pop
dec
fcomps
loop
sub
jb
ret
pop
or
ret
pusha
lock
scas
cmp
mov
inc
xor
inc
cmp
test
andb
or
lcall
inc
clc
pusha
or
loope
aad
movsb
adc
jnp
gs
ss
dec
pop
fbld
jno
icebp
test
jmp
cld
inc
or
ret
mov
int
sub
stos
insb
pop
push
cmp
aam
es
push
push
mov
subl
std
dec
inc
clc
les
loopne
loop
es
enter
and
outsl
scas
ja
push
xor
inc
mov
loopne
dec
pop
mov
add
insl
sbb
repnz
adc
push
xor
inc
insb
push
xor
leave
clc
stos
sub
pop
cmp
push
pop
andps
icebp
sub
rolb
int3
lcall
mov
and
sub
aam
lods
xchg
sub
test
dec
pop
cld
jae
lods
mov
ret
popa
pop
inc
mov
ljmp
sbb
inc
pop
test
mov
adcb
ds
sarb
aad
pop
ficompl
stos
or
arpl
scas
sahf
sbb
stos
fiadds
ds
mov
mov
ficompl
rol
xchg
inc
or
lret
mov
add
xor
jnp
mov
push
faddl
and
or
dec
jecxz
mov
pushf
mov
add
fcom
add
mov
mov
push
out
clc
add
call
sub
sti
or
xchg
les
andl
and
mov
mov
inc
mov
cmp
inc
lcall
fidivs
test
dec
adc
sub
sahf
mov
push
int3
mov
sbb
outsb
sar
andb
sub
push
test
sub
and
pop
mov
xchg
add
xchg
or
out
or
rcrl
jp
xchg
incb
adc
mov
push
test
outsl
add
mov
push
nop
aaa
pop
add
push
dec
inc
mov
mov
add
dec
lret
cmp
jl
ja
lods
lahf
push
cmp
lcall
enter
or
mov
mov
mov
movsb
incb
mov
mov
pushf
imulb
and
mov
cmp
dec
add
movsl
or
fdivrp
pop
rolb
ljmp
sahf
sbb
lock
rorb
mov
or
xchg
pop
pusha
ficoml
pop
js
shrb
rcrl
pop
jge
es
cmp
arpl
aas
add
add
xor
scas
aam
add
xor
pop
adc
pop
sub
or
call
mov
cmp
and
cmp
inc
pop
test
pop
ss
fildll
mov
push
loopne
mov
jbe
fcmovb
sbb
or
pusha
jbe
dec
loop
push
mov
mov
iret
clc
dec
je
xchg
inc
jb
sub
push
shll
xchg
xchg
push
sbb
repnz
mov
push
call
in
or
fcomps
int3
push
lods
inc
sbb
sub
mov
or
shrb
int
sbb
cmc
incb
jle
jae
sarb
insb
mov
mov
pushf
ljmp
in
push
daa
cmpsl
xor
inc
decl
clc
lock
jle
dec
push
insb
jecxz
rcll
sub
sub
mov
push
sub
mov
push
mov
nop
fimull
jl
jnp
or
pop
and
addb
js
test
clc
lods
add
dec
mov
mov
leave
sbb
jg
xchg
mov
cmpsb
push
fdivp
dec
inc
fbstp
rcl
out
xor
pop
dec
push
aam
mov
mov
fdiv
out
jp
cmpsb
orb
inc
aam
mov
les
into
mov
aaa
lods
lret
adc
cmpsl
mov
fistps
cld
scas
sub
scas
ret
mov
mov
jg
lret
dec
test
je
push
cmpsb
and
mov
add
xor
cmp
ret
dec
inc
cmpsl
scas
cld
and
rclb
mov
push
adc
movsb
scas
ss
or
rcll
cmp
loope
int
pop
jo
mov
sbb
jle
push
pop
pop
fcoms
lea
ljmp
push
push
mov
xchg
cmp
dec
int3
pop
xchg
fdivrl
mov
addr16
addb
sbbb
jnp
addl
push
roll
push
test
fcoms
mov
cwtl
xchg
les
inc
mov
test
add
mov
push
xchg
js
fstpt
push
cmp
jns
aas
xor
mov
or
ljmp
dec
mov
cmpl
jmp
and
loop
arpl
jl
mov
xor
test
sub
hlt
int3
stc
mov
push
xchg
push
loopne
xchg
mov
xchg
xor
push
sub
rcrl
push
dec
push
fimull
or
add
js
repnz
sarb
jl
xchg
gs
das
cmc
cmp
jg
mov
or
xchg
gs
inc
aaa
add
cmpsl
xor
jbe
int
fimull
popa
je
xor
mov
lret
test
call
shrb
xchg
mov
daa
jp
mov
sub
push
lcall
lds
lock
add
test
test
cmpsl
hlt
or
mov
mov
mov
gs
jno
push
loopne
push
pshufw
aas
sbbl
jmp
xor
lcallw
insb
test
jle
loopne
inc
ljmp
xor
jmp
mov
adcl
loop
push
cmp
scas
mov
inc
push
leave
xchg
mov
jge
mov
data16
lock
or
mov
jnp
ret
mov
dec
roll
and
arpl
fsubs
stos
in
in
or
jns
js
cmp
aaa
jecxz
lock
int
jle
adc
sbb
lock
enter
xchg
dec
dec
xor
mov
xlat
divps
hlt
stos
outsb
xchg
pop
call
mov
dec
les
push
pop
test
sbb
out
mov
out
mov
xchg
mov
shrb
pop
pushf
mov
rcl
push
movsl
int3
test
cs
imul
aam
or
mov
push
in
adc
fnstenv
test
or
cltd
dec
and
adc
sbb
push
leave
jle
scas
or
mov
inc
das
push
scas
vshufpd
icebp
in
pop
jb
dec
and
sbb
mov
fcmovnbe
sub
rcrl
jne
mov
cld
shlb
cli
push
leave
mov
cmpsb
push
jnp
rcrl
pop
pop
sbb
fdivp
sub
and
ret
or
mov
lcall
inc
push
cmp
push
xor
or
or
and
stos
sub
pop
mov
pushf
adc
inc
mov
nop
mov
in
mov
push
mov
pop
inc
mov
enter
ja
outsb
inc
fsubl
and
andb
mov
mov
test
int
adc
xchg
lea
sbb
fstps
dec
and
lds
aam
jle
rcll
imul
clc
insl
add
es
and
adc
or
rcll
int
mov
mov
or
lret
and
pop
and
jle
xchg
scas
sub
mov
ret
dec
mov
inc
mov
pop
push
lcall
add
xchg
jo
iret
cmpsb
aad
int
jo
mov
cmp
fisubl
xchg
add
test
or
and
mov
call
fs
ror
mov
sbb
xchg
cwtl
insb
add
pusha
mov
lcall
jge
bswap
sub
loop
hlt
shrb
test
and
fdivl
push
les
pushf
add
add
or
lahf
rorb
xchg
xor
pusha
inc
pop
in
dec
xchg
add
rorl
push
jge
jo
popa
xor
add
dec
push
sarl
dec
add
movsl
movb
cmpb
scas
ret
addb
mov
repnz
adc
hlt
fwait
out
mov
inc
or
loop
test
movsb
dec
in
xchg
popa
std
arpl
movsb
mov
loopne
xchg
push
lods
das
add
push
mov
inc
adc
jmp
or
mov
int3
push
loopne
loope
dec
add
lcall
loope
rcll
xor
rcrl
loope
cli
pop
lcall
into
movsb
es
je
mov
add
jecxz
and
leave
sub
ret
and
or
arpl
popf
push
stc
mov
test
mov
pop
xchg
mov
outsb
hlt
cs
pop
lds
adc
rcrb
ficoml
cmp
test
cmpsb
rcrb
add
cmpsl
cmpl
xchg
adc
jno
lea
mov
rcrl
xchg
repz
aaa
add
popf
std
pop
sbb
mov
pop
outsb
lods
movsl
xchg
jle
sar
movsb
jl
rolb
filds
out
loopne
inc
mov
cmp
inc
cmp
movsl
aam
scas
pop
iret
adc
into
push
fldl
movsl
movsb
cmc
pop
out
add
mov
add
out
mov
adc
ds
jl
data16
inc
insl
mov
sub
xlat
cmc
inc
out
popf
mov
or
adc
xchg
push
sbb
pop
ljmp
clc
sbb
movsb
add
lods
mov
push
test
sbb
test
jo
push
pushl
roll
xlat
cmp
pop
and
xor
jne
fmuls
xor
sub
xlat
pop
pop
adc
pop
jo
xchg
enter
loop
aas
and
fmuls
sub
inc
sbb
mov
or
cmp
xchg
ds
in
xchg
pop
arpl
faddl
sub
repz
ret
clc
jae
pusha
movsl
es
daa
fsubs
mov
xor
rol
iret
xor
test
fdiv
out
scas
mov
mov
cld
call
add
adc
loope
mov
add
test
pop
dec
and
jo
out
xor
ret
dec
push
add
add
xchg
or
or
fdivs
loopne
aaa
jae
add
out
stos
mov
mov
xchg
xchg
xor
cwtl
lret
dec
pop
in
test
loop
int3
fstps
mov
mov
mov
or
add
pop
mov
xor
dec
popa
lds
mov
and
out
roll
sub
sub
push
jl
jp
pop
cmp
add
xor
xor
sbb
xor
jnp
call
dec
lods
jbe
in
mov
sti
jmp
mov
mov
rcr
pop
cld
xor
fidivrs
out
loope
push
pop
das
cmp
test
push
subl
dec
inc
loopne
push
clc
out
xor
cmpsl
push
loopne
lea
sub
and
pop
mov
cmc
in
dec
push
cli
and
inc
mov
test
imul
js
pusha
out
xor
cwtl
jo
jecxz
xchg
mov
data16
add
and
cmp
xchg
mov
pusha
xlat
lods
int3
add
sbb
imul
dec
push
daa
insl
push
sbb
xor
lret
pop
and
or
mov
rclb
stc
test
inc
out
js
mov
cmpsl
add
dec
jmp
add
addl
sbb
mov
pop
ret
or
jle
in
pushf
jnp
xor
inc
add
push
sub
push
mov
in
jp
outsb
lock
adc
test
cmp
ljmp
xor
testl
fsubrs
imul
ds
jmp
add
xor
inc
add
xor
das
loop
aad
dec
push
cmpsl
mov
xchg
mov
rclb
fbld
xchg
mov
aaa
mov
icebp
stc
xor
decb
shll
roll
icebp
mov
mov
loope
mov
pop
sbb
das
sbbb
adc
or
or
cmp
cmp
xlat
mov
ljmp
xchg
in
adc
inc
call
faddl
lret
push
xchg
pushf
xor
loop
xor
mov
and
movsl
add
jne
imul
ret
fs
and
dec
jae
sub
pop
sub
lret
push
rorb
mov
mov
cmp
sub
andl
std
inc
es
mov
int
dec
stos
mov
mov
push
scas
push
adc
adc
add
lock
lret
lahf
sbb
arpl
pop
cmpsl
mov
mov
faddp
enter
repnz
pop
dec
add
dec
push
pop
cmp
and
stc
pop
jle
adcb
mov
mov
sahf
lock
pop
lock
mov
sub
push
aam
adc
int
xchg
enter
xchg
pop
sub
cld
inc
xor
inc
cmc
je
in
jle
fiaddl
ds
jns
lcall
daa
sbb
sbb
inc
gs
scas
push
ss
cmc
pop
jno
sub
push
out
jmp
arpl
dec
push
jns
fdivs
inc
mov
sub
fisubrl
dec
imul
sbb
iret
jb
das
je
hlt
jo
cmp
mov
fcmovu
inc
mov
xor
push
mov
std
jo
lahf
add
push
push
mov
scas
out
sbb
loope
jp
mov
adc
pop
lods
cmp
lret
mov
sbb
mov
movsb
adc
mov
mov
inc
sarb
cltd
ljmp
dec
mov
inc
mov
jno
cwtl
xor
or
xchg
xor
and
xor
adc
test
ja
or
and
sar
lock
and
cmpsl
adc
sub
xor
xchg
mov
cmp
gs
loopne
dec
xchg
dec
inc
fisttpll
inc
push
pushf
or
decb
sub
ret
in
sub
push
xlat
clc
outsb
scas
stc
push
cmp
adc
or
gs
xchg
and
mov
icebp
cmpl
cmc
gs
call
mov
add
insb
xchg
mov
sbb
cmpsl
loop
push
mov
aaa
add
movsl
dec
push
mov
or
js
jbe
lock
scas
and
popf
pushf
xchg
inc
aas
mov
mov
pop
int3
mov
loop
aam
jl
xchg
inc
imul
cmc
pop
lret
sbb
and
or
mov
cs
adc
xchg
repz
push
adc
into
aam
pop
mov
fstpl
iret
add
fidivs
ret
and
push
enter
in
mov
or
inc
add
push
jnp
jae
mov
dec
mov
mov
pop
lock
movsl
clc
fucomp
fcomps
and
mov
cmp
inc
fistpll
xchg
jno
xchg
jo
pop
test
outsb
mov
or
push
pop
popf
pop
push
mov
mov
sub
cs
incb
add
xchg
cmc
cmpsb
outsb
cmp
pop
jp
and
hlt
mov
jns
inc
sar
mov
mov
push
or
sbb
cmp
mov
mov
mov
dec
pop
call
sbb
add
jecxz
js
add
loope
sbb
in
xchg
xor
ljmp
sbbl
outsl
pushf
lret
xor
mov
mov
das
inc
mov
jo
pop
push
popa
mov
pop
mov
jmp
mov
jne
clts
mov
aas
mov
stc
mov
ja
mov
cmp
lock
jmp
sbb
loope
xchg
into
subb
xor
or
push
jecxz
loop
movsb
pop
ret
cmpsl
jb
inc
movsl
mov
data16
movsl
js
loop
sarb
lds
xchg
das
test
adc
and
outsb
out
xor
pusha
ret
xchg
pop
jp
test
pushf
clc
adc
jmp
in
cmp
scas
or
or
jmp
scas
xor
jmp
daa
ds
inc
lods
mov
cwtl
add
cmp
test
sub
popa
fdivl
push
fs
mov
cmpsb
mov
cmpsb
mov
adc
out
int3
daa
adc
das
push
test
int
and
or
in
dec
cs
test
stos
loop
scas
pop
icebp
pop
lea
cmp
add
push
lret
sarl
pop
cmp
jbe
in
mov
sbb
adc
test
cmpb
sbb
and
movsl
incl
aad
dec
add
or
shll
in
mov
dec
out
pop
pop
jbe
bound
inc
adc
or
into
bound
and
mov
fimuls
mov
hlt
shl
test
ss
xchg
cmp
jp
sub
jmp
mov
push
adc
dec
repz
mov
jmp
pop
stos
rcrl
fists
dec
xlat
sbb
call
inc
in
pop
pusha
aaa
shlb
loop
add
add
std
lahf
in
sbb
xchg
imul
jne
and
or
push
pop
js
push
push
sub
iret
xor
adc
popf
push
pusha
jno
and
jno
cvtps2pi
add
mov
nop
stos
jno
cmp
fiaddl
in
adc
enter
cwtl
add
add
mov
fstp
inc
cmp
pop
leave
in
mov
mov
mov
jo
ljmp
lock
mov
enter
inc
scas
cmc
test
sub
int
pushf
cmpsb
or
test
std
aaa
test
cmp
sbb
shrb
ror
mov
and
add
movsl
arpl
lock
sub
xor
xor
test
loope
pop
cmp
sbb
aad
cwtl
ds
shrb
dec
xor
testl
int
out
fildl
mov
cwtl
inc
mov
std
and
outsl
cli
jecxz
pop
mov
lock
cli
loop
iret
fidivl
xor
push
dec
push
cmp
jne
adc
dec
hlt
icebp
push
call
xchg
add
dec
inc
mov
call
push
daa
xchg
ljmp
xor
fwait
lcall
inc
ja
pop
lea
mov
jmp
jb
lea
mov
sbb
rorb
dec
mov
push
sti
hlt
lret
mov
cmp
imul
jmp
fnsave
aad
jnp
cmc
arpl
xchg
das
cwtl
push
pop
pop
jbe
push
test
push
test
fiadds
add
cmpsb
mov
lock
stc
ja
shlb
dec
cmpsb
sbb
dec
leave
push
clc
out
mov
adc
loopne
dec
je
mov
mov
loopne
sbb
inc
shrl
sahf
sub
popa
sub
dec
test
andb
stos
add
mov
andb
ret
and
inc
mov
imul
mov
test
in
rol
ret
les
out
rcrl
int
add
enter
and
pop
jns
cmpsb
daa
int3
jne
mov
out
roll
jo
int3
lock
cmp
movsl
xor
push
js
loop
push
inc
movsl
xchg
inc
rolb
inc
mov
and
dec
cmc
adc
mov
sbb
roll
dec
lock
cmp
mov
cmp
adc
lods
fs
jno
dec
pop
sahf
jp
mov
shlb
inc
inc
xchg
adcl
aad
mov
packssdw
cmpsl
divb
ret
iret
shlb
packsswb
dec
mov
inc
insl
jne
mov
mov
stos
fwait
repz
mov
rol
inc
ja
imul
das
mov
sbb
loope
inc
lods
sub
dec
lds
movsl
mov
mov
dec
sbb
pop
jge
xlat
mov
gs
sub
stos
lds
loope
push
mov
cmc
in
mov
adc
jae
push
mov
les
push
rcll
out
cwtl
mov
xchg
scas
pop
rolb
push
les
mov
iret
dec
push
pop
push
xchg
aam
lcall
add
test
push
lahf
mov
dec
inc
fsts
enter
lock
flds
sahf
andb
cmpsl
out
rorl
sub
mov
test
mov
push
jecxz
fiaddl
lcall
sbb
jl
lods
push
mov
cmp
mov
test
sub
repnz
adc
out
push
mov
add
sarl
sbb
lods
mov
loope
ss
pop
mov
scas
xchg
bnd
add
xor
adcb
aad
pop
mov
mov
sbb
push
inc
mov
lret
aaa
sub
and
mov
shl
mov
pop
das
xchg
nop
push
das
icebp
je
xchg
sbb
add
pop
dec
aam
add
xchg
ja
lahf
and
movsb
call
jmp
mov
adc
testl
jne
pop
push
dec
rorb
shll
out
fistl
cmp
xor
stos
test
cli
sub
add
xchg
xor
jl
push
or
cmp
stos
add
sbb
xchg
mov
xlat
jo
inc
cmp
xchg
sub
xor
jecxz
cld
lea
sbb
fidivl
ret
ja
mov
sti
add
push
test
jp
dec
or
push
dec
mov
in
cmpsb
adc
mov
jno
shl
pop
lock
jg
mov
cmp
xchg
or
pop
xor
rclb
int3
sub
test
addr16
dec
pusha
ficoml
in
je
clc
test
mov
sbb
pop
push
clc
push
dec
pop
pop
sub
cmc
cmp
int
jnp
push
sbb
push
addl
lahf
arpl
cmpsb
aam
pop
daa
mov
push
arpl
out
addb
pop
mov
cld
nop
pop
fcmovnb
or
and
push
xchg
faddl
adc
rorb
orb
es
fdivl
int3
nop
pop
xchg
loope
out
stos
out
inc
js
inc
mov
pop
or
imul
add
xor
test
mov
mov
test
adc
push
xorb
jg
rorb
xchg
pop
inc
out
fwait
push
sahf
xchg
add
fldcw
fs
mov
addb
adc
mov
or
mov
mov
cli
cvtps2pd
shrd
hlt
fnstsw
lcall
aad
out
clc
mov
or
dec
jo
dec
nop
jno
mov
mov
push
sbb
xchg
fists
loopne
or
cmp
and
decl
fs
xchg
sahf
cli
imul
mov
bnd
lret
idivl
xchg
pusha
ror
rclb
sbb
sahf
loop
sbb
add
inc
lret
xchg
lds
lcall
sahf
sarl
sbb
jmp
mov
pushf
xor
mov
adc
ret
fwait
dec
cld
loopne
or
inc
xchg
ds
sbbb
push
mov
hlt
mov
xor
pop
outsl
mov
xchg
push
je
add
dec
out
int
add
js
cmp
js
add
and
test
inc
mov
movsl
scas
mov
movsl
mov
cmp
pop
outsb
jo
scas
dec
rolb
adc
div
sbb
push
jg
add
test
sarl
sbb
mov
das
fsub
inc
add
fcomps
insb
mov
push
cmpsb
mov
sbb
jle
add
imul
icebp
jp
or
insl
sbb
movsb
fisubs
testb
cmc
fs
loope
inc
sarl
std
mov
sbb
rorb
cs
int3
mov
mov
fidivrl
out
jbe
popf
lret
mov
mov
or
cs
mov
lock
pop
jno
adc
mov
and
jmp
sub
adc
lret
popf
mov
push
sub
cmc
inc
in
lock
xchg
mov
testb
mov
fwait
jge
xlat
add
or
rorb
mov
jo
sbb
in
int
xor
mov
push
xlat
subb
sbbb
inc
inc
xchg
aaa
push
mov
sbb
mov
clc
add
or
dec
push
mov
ret
pushf
cmc
loop
dec
sub
pop
out
pop
test
cld
or
inc
repnz
sub
call
push
movsb
bound
or
mov
adc
daa
mov
les
mov
add
ds
inc
cmp
sbbl
xor
js
faddl
sbb
mov
clc
aad
adc
adc
hlt
xchg
mov
ret
mov
xor
insl
adc
nop
fildl
adc
push
call
test
jle
sbb
mov
or
push
lock
mov
cld
les
sub
aas
into
and
test
and
add
mov
pop
loopne
mov
mulb
push
mov
jno
cmp
inc
ffreep
repnz
lea
fsubr
inc
xchg
out
jno
lods
xchg
xchg
orl
cmp
mov
push
roll
and
push
pop
je
add
shrb
mov
int
mov
pop
sti
xor
add
cmc
lret
scas
sbb
outsb
fsubs
ficoms
es
leave
and
scas
dec
cld
sbb
jp
or
adc
xchg
cld
clc
pop
pop
xchg
std
mov
js
dec
sub
repz
retw
int
mov
aas
sar
and
mov
pushf
call
lock
lret
inc
jae
dec
push
pop
je
sbb
aaa
mov
xor
cld
iret
ret
daa
or
sub
test
push
lahf
pop
cli
or
dec
stos
sbb
xchg
mov
jp
sbb
subb
in
push
sahf
mov
pop
in
xor
cltd
mov
sahf
ljmp
cld
pop
lcall
cmc
pop
sbb
fidivs
push
hlt
xchg
or
inc
dec
aad
sbb
bound
clc
push
mov
lock
cld
filds
cld
adc
mov
ds
rolb
jp
sub
mov
mov
pushf
mov
mov
test
rol
nop
xor
sub
mov
add
inc
iret
push
push
mov
fcmovbe
add
pop
idivb
inc
iret
aaa
je
ret
inc
cmp
incl
xchg
loop
add
sbb
mov
adc
aad
lock
push
mov
rol
cmp
shl
mov
scas
fisttpll
xchg
fucomip
aas
in
mov
data16
popa
pop
add
fcomp
sub
inc
loopne
loope
inc
xor
mov
nop
cmp
int
inc
sub
xor
inc
daa
push
cmp
es
sbb
call
jp
sbb
mul
jecxz
jmp
mov
stos
cmpxchg
lods
pop
xor
inc
inc
pushl
or
sbb
mov
pop
add
arpl
cmc
mov
jbe
cli
sub
ss
mov
xchg
ret
push
test
into
sub
cs
aaa
ljmp
aas
sbb
aam
repz
scas
adc
add
cmp
hlt
test
jge
push
pop
sub
or
pusha
jb
enter
dec
xor
call
mov
sub
mov
or
push
jmp
push
push
int
or
lahf
pop
jnp
and
mov
xor
aam
leave
adc
ds
jle
ret
xchg
sub
xor
push
out
xchg
out
loop
sbb
sbb
lods
push
mov
push
xchg
xchg
popa
dec
push
arpl
mov
push
stc
sub
pushl
loope
mov
sahf
adc
xor
aam
cs
mov
stos
xchg
mov
enter
out
testb
rolb
mov
daa
pop
cmp
out
lahf
inc
push
jne
mov
mov
lret
loop
adc
xchg
cmpsb
push
jne
mov
and
js
clc
ret
adc
cmp
lds
mov
idivb
jo
sysenter
ljmp
mov
es
xor
fidivrs
and
pop
shrb
movsl
push
lods
add
pop
mov
mov
or
push
cmp
xor
imul
xchg
xchg
test
fucomp
aad
scas
aas
push
in
fiaddl
push
andl
rcrl
inc
dec
cld
dec
shl
xchg
cmp
jle
pop
call
jmp
test
mov
jp
xchg
add
jnp
test
xchg
dec
filds
or
daa
push
out
fwait
lea
ss
fdivl
cmp
fimull
mov
jbe
ret
xchg
loopne
fnsave
in
call
push
mov
in
mov
dec
jge
test
sar
add
and
adc
push
push
add
sbb
fbstp
sbb
inc
sbb
dec
shr
test
int
jle
mov
test
clc
clc
add
pop
cmp
push
add
xor
aam
jo
and
fwait
push
mov
cld
add
xor
stos
scas
push
xchg
mov
enter
fmull
pop
adc
outsb
imul
fcoms
ljmp
std
mov
hlt
fwait
shll
ljmp
fdivrs
mov
insl
lock
push
std
aaa
and
mov
inc
cmp
mov
xor
mov
icebp
int3
push
stos
xchg
hlt
or
in
jge
xchg
mov
or
or
popl
or
sub
and
inc
addr16
jbe
sbb
mov
popa
mov
loop
gs
js
mov
mov
test
mov
cmpl
xchg
jmp
cmp
aas
nop
mov
aas
sbb
mov
pushf
xor
shlb
pusha
xchg
push
push
scas
adc
loopne
jg
dec
pop
inc
push
xchg
mov
icebp
xchg
stc
rolb
add
sahf
or
cs
xchg
loope
sub
ja
cmp
mov
movsb
hlt
rclb
ljmp
mov
dec
mov
push
or
push
jg
dec
pop
pop
adc
mov
jle
aas
hlt
in
jmp
mov
and
pop
push
dec
mov
lahf
pmaxsw
sbb
xchg
push
xor
add
out
cmpsl
xor
xor
push
testb
std
mov
out
ret
aam
jmp
push
jnp
pop
fadd
vaddss
enter
xorl
xor
xchg
or
cmpsl
and
add
shr
jb
cs
push
loopne
enter
mov
loope
test
sub
test
mov
mov
adc
xchg
cmp
cld
sub
outsb
insb
cli
rorb
pop
jne
mov
divb
flds
imul
in
mov
xchg
push
jb
movsl
or
mov
adcb
sub
into
in
sbb
add
cmp
xorl
or
jo
daa
cli
xchg
into
jb
das
add
xor
outsl
fcoml
cmp
imul
and
pusha
ds
add
mov
push
aas
xchg
loopne
inc
inc
sbb
pop
jne
mov
sbbl
push
pop
sbb
xchg
out
jle
clc
and
dec
rcll
add
mov
invd
bound
push
sbb
pop
fisttps
xchg
pop
inc
int
stos
outsb
movb
inc
jne
sbb
push
sbb
lods
fildll
lret
loope
inc
adc
inc
xchg
cli
je
pop
and
cmp
push
shll
repz
loopne
ror
sarb
sbb
xchg
adc
cs
pop
fwait
jmp
dec
dec
inc
fistpll
clc
push
xor
push
mov
ret
dec
add
enter
addr16
dec
out
loope
mov
or
or
pop
sub
xchg
add
std
sub
negb
pop
jbe
les
sub
and
movsl
stos
test
jg
bound
gs
fiaddl
pusha
rcrl
mov
jp
xchg
mov
andb
push
mov
or
and
add
ljmp
lcall
xchg
add
ljmp
stos
and
pop
cmpb
xchg
jecxz
jb
push
pop
push
sar
orl
or
sbb
xchg
shlb
incl
gs
mov
xor
inc
mov
xchg
push
sub
push
pop
pop
rclb
xchg
sbb
jg
test
dec
fldenv
dec
or
push
fistpll
ret
add
rclb
mov
cmp
cmpsl
jg
dec
xchg
out
fdivs
lret
and
fcomp
int3
adc
incl
ss
shr
mov
scas
scas
xchg
xor
adc
sbb
enter
loope
lods
movsb
and
pop
push
ds
mov
clc
movsl
jg
mov
adc
cwtl
cs
fmulp
aas
inc
jecxz
sahf
mov
pusha
outsb
mov
add
add
xor
cmp
push
lret
dec
lods
and
push
pop
pop
roll
aaa
scas
push
or
shlb
sahf
xchg
push
dec
fsubp
inc
xchg
jge
cmp
cmpsb
add
rol
xchg
mov
adc
sti
fisttps
aam
inc
lret
pop
es
push
das
inc
pop
or
scas
mov
nop
insb
test
inc
jl
iret
stos
scas
xor
loope
or
mov
adc
pop
cmp
push
bound
mov
mov
lret
jle
lret
addr16
rcrb
adc
jp
mov
xchg
inc
fadd
and
lcall
sbb
cwtl
jmp
shlb
mov
fwait
ret
and
es
jecxz
sbb
or
or
cmpsb
inc
pushf
mov
int3
dec
test
inc
inc
mov
dec
sbb
cmp
clc
dec
sbb
push
jle
lahf
ljmp
bound
cmpsl
sub
sbb
xor
cmp
push
xchg
cmp
pop
inc
push
xchg
imul
push
pop
std
arpl
subb
lock
test
pmullw
or
xchg
rcrb
and
or
pop
mov
mov
popf
xor
jge
push
scas
popf
shlb
outsl
clc
and
nop
inc
pop
dec
pop
fmull
xor
dec
loope
aad
std
test
stos
popa
mov
mov
mov
notb
pop
icebp
jmp
mov
pushf
pop
and
insl
cld
fwait
clc
xchg
fiadds
clc
adc
jmp
call
fcoms
bound
push
pop
rcrb
xchg
sub
sub
add
sar
or
repnz
jg
sub
cmp
push
shr
or
sub
sub
or
rclb
sub
fs
pop
cmp
xchg
stos
dec
sbb
jno
outsl
cmp
je
or
jo
adc
and
xchg
iret
dec
cmp
xchg
mov
adc
jg
loop
lcall
int3
jo
and
push
sbb
lahf
mov
mov
sub
rcll
pushf
imul
add
jecxz
cmp
dec
adc
xor
lcall
ljmp
inc
and
stos
or
pop
cld
pop
test
xchg
in
ljmp
decl
mov
xchg
sbb
jge
incl
sbb
mov
sbb
hlt
jae
scas
jg
lods
xor
lods
in
sbbb
sbb
int3
sbb
cld
sub
fcoml
mov
mov
jl
push
inc
mov
and
push
lock
ja
push
or
insb
ljmp
dec
push
lea
insb
aaa
ret
sub
add
pop
and
sbb
jne
fidivrl
and
aaa
or
aam
jg
cmpsb
loopne
addl
int3
xchg
mov
lock
mov
ss
mov
pop
out
sub
mov
adc
decb
test
sbb
cltd
out
insb
ljmp
push
mov
orb
push
call
cld
xchg
xor
imull
sub
pop
cmp
mov
pop
lods
call
push
xchg
les
movsb
ss
rolb
jbe
iret
sub
jecxz
imul
scas
mov
out
fs
cld
pusha
cld
aas
fistl
pusha
inc
repz
mov
scas
aad
cmp
mov
rol
mov
sbb
orb
push
push
insl
hlt
in
xor
scas
ret
aas
out
cmp
fs
xchg
add
outsl
adc
jo
or
stos
fdiv
fs
jl
push
ret
into
inc
clc
xchg
enter
or
jae
pop
add
adc
pop
imul
jp
jmp
outsb
lahf
lret
inc
inc
mov
jmp
ja
rcl
adc
or
or
and
dec
xor
scas
dec
adcb
sbb
aas
mov
xor
shl
adc
push
sub
sub
adc
mov
popa
stos
jnp
lahf
push
clc
and
add
ljmp
in
mov
mov
fmuls
aad
push
test
adc
add
mov
push
stos
push
lods
or
das
pop
fstl
dec
mov
fldl
int3
push
and
loopne
mov
push
pop
inc
out
sbb
and
sbb
sbb
fcomp
pop
rolb
fdivl
sub
cltd
rorb
data16
mov
adcl
cs
push
popa
fisubs
std
icebp
loopne
fld1
pop
inc
xchg
loopne
mov
pusha
adc
cld
push
mov
cmp
mov
inc
and
in
test
cltd
push
andb
and
aam
xlat
push
loope
out
push
loopne
push
cmp
push
test
mov
pop
int
aaa
lds
mov
jl
mov
cli
ret
insb
lock
sar
push
pop
xchg
andl
mov
add
fldcw
ficomps
stos
jp
mov
lods
test
and
fadds
mov
fsubs
add
enter
cmp
divb
or
aad
sti
pushf
out
call
jg
inc
push
rcrb
sub
cmpsb
add
cmp
in
pop
xchg
outsb
sbb
pop
ret
push
mov
add
jbe
lods
mov
es
push
xchg
mov
mov
cmp
jae
dec
pop
loop
dec
mov
decl
fs
mov
int
and
jmp
das
jg
mov
cmp
dec
sahf
ud0
mov
out
cmp
scas
icebp
pop
mov
data16
mov
mov
mov
clc
cmpsl
or
mov
push
jne
shlb
out
mov
add
mov
cmpsl
push
adc
dec
adc
pop
or
int
fisttps
jo
inc
jbe
mov
adc
push
js
push
cmp
imul
sbb
movb
xchg
sbb
add
ja
pop
dec
mov
push
push
mov
in
jmp
push
cmpsl
inc
nop
out
ret
out
mov
hlt
jbe
push
sub
call
ret
sbbl
mov
les
cmp
ljmp
lods
jge
cs
sub
dec
nop
mov
pop
test
pusha
mov
pop
fnstenv
insb
and
and
and
cli
lea
dec
pusha
dec
xor
pop
pop
push
sbb
lods
push
mov
sahf
bound
and
pop
xchg
fidivs
lods
pop
sub
mov
adc
sbb
mov
cli
imul
sbb
ja
mov
dec
std
pop
cltd
rclb
xor
scas
mov
sarb
xor
imul
jno
daa
sub
in
or
mov
jmp
push
pop
aad
pusha
sahf
mov
and
loop
jae
es
imul
nop
adc
cmp
sbb
ret
sbb
dec
inc
popf
push
dec
dec
cld
push
scas
sub
nop
cmpsl
into
js
cmp
dec
fwait
stc
call
pop
mov
push
lret
adc
daa
mov
push
or
mov
rolb
fsubrl
lods
inc
call
movsb
inc
xor
pop
cli
movsl
fidivl
fildll
jecxz
ret
out
jo
sub
ficompl
shlb
mov
repnz
xor
cmp
into
pusha
jg
shll
fcomi
sbb
jo
and
or
xor
cmpsb
mov
fsubrs
loopne
cmp
idivb
jns
fwait
pop
in
insb
clc
mov
mov
mov
icebp
mov
push
jp
add
call
xor
sahf
sub
lods
orb
fs
shrb
inc
sub
lcall
imul
gs
and
aad
or
pushf
xchg
mov
xlat
loop
add
cs
or
lods
pop
lods
pop
sarb
cmp
ss
les
pop
movsb
push
adc
loope
loopne
mov
add
pop
loopne
rorl
adc
jecxz
scas
repz
icebp
das
add
filds
cmp
or
nop
lahf
fld
das
loopne
sub
loope
sub
dec
mov
sbbb
icebp
mov
mov
and
mov
dec
scas
lret
cmp
xchg
sub
rorb
decl
repnz
dec
es
in
test
aad
mov
inc
jnp
inc
push
cmc
or
ror
dec
cli
in
jbe
cli
rolb
dec
imul
push
rclb
xor
nop
aam
lcall
repnz
and
inc
xchg
and
jl
mov
cwtl
aam
loopne
insb
sbbb
js
into
cwtl
adc
push
mov
pop
xchg
dec
and
pop
and
imul
std
add
cs
addb
mov
mov
jnp
push
xchg
pop
ja
js
js
push
jns
cmp
in
and
xor
jp
das
push
jne
repz
sub
or
popa
cmpsl
push
jge
test
bound
sub
rclb
ljmp
and
sbb
pop
mov
scas
std
or
sub
pop
xor
iret
fstpt
lret
mov
mov
test
fcmovne
cmc
movsl
inc
out
mov
mov
inc
ljmp
adc
je
rorb
mov
jb
loop
or
mov
xor
rolb
out
jle
test
push
sbb
clc
push
in
sbb
or
scas
push
cmp
cmp
dec
movsl
incl
fdivr
xchg
icebp
das
pushf
and
hlt
lea
sub
jb
jecxz
mov
pop
loopne
pop
adc
and
and
sbb
inc
mov
push
xor
xchg
popf
inc
sbb
stos
mov
cltd
or
mov
jle
pop
and
dec
cmp
imul
adc
xchg
jp
mov
pushf
push
jg
not
kmovb
mov
pop
scas
aam
mov
fisubl
aaa
pop
in
lcall
xchg
daa
dec
adc
dec
cli
sahf
lods
lods
add
or
and
dec
repnz
inc
adc
and
fwait
fwait
adc
mull
fwait
clc
das
dec
dec
add
pop
sbb
cmp
sub
push
test
pop
mov
sbb
xchg
mov
test
loopne
cmp
jg
das
sbb
ss
loop
fimull
push
dec
adc
jo
popa
mov
scas
icebp
jle
push
rcrl
adc
arpl
aad
mov
cmc
popf
ds
add
mov
inc
sub
aaa
mov
and
adc
inc
or
lock
inc
sbb
jo
and
fdivs
sub
adc
les
clc
mov
mov
jo
or
js
in
mov
push
loope
mov
or
cmp
mov
shl
divb
pop
call
push
fdivl
add
sbb
xor
or
das
inc
clc
incl
jle
adc
rcll
xor
and
out
inc
sbb
in
or
add
pop
sbb
push
call
lods
sahf
push
setns
loop
add
repz
out
test
rclb
sub
mov
sub
out
or
cwtl
adc
call
jle
xchg
jo
add
push
add
sbb
lods
mov
jne
or
adc
xor
sbbl
xchg
xchg
inc
sbb
jae
outsb
divl
ret
cmp
stc
fisttpl
adc
test
dec
out
adc
mov
imul
inc
or
lcall
cmc
bound
pop
jg
lcall
daa
mov
add
pop
push
cmp
filds
cmp
addr16
inc
fadds
shlb
loopew
ret
xor
pop
mov
push
dec
gs
push
dec
lea
popf
pop
jge
mov
pop
stos
ret
xorl
cmpsb
add
adc
leave
mov
fsub
pop
or
xor
mov
or
sub
xchg
mov
add
xchg
es
adc
adc
into
shll
jle
out
cli
icebp
idiv
push
and
inc
push
jmp
les
mov
ret
subb
add
cli
addl
xchg
clc
xchg
xchg
adc
int3
mov
mov
or
imul
fdiv
outsb
fs
fisubrs
jmp
shlb
inc
and
jg
mov
inc
mov
mov
loopne
loopne
test
mov
bound
lods
adc
test
lock
out
test
pop
je
cmp
into
push
pop
and
in
ss
push
xchg
or
jmp
in
orb
add
loopne
mov
jns
sbb
into
fwait
pop
test
sbb
adc
and
mov
pop
sbb
xchg
xchg
and
jmp
jecxz
push
pop
push
jo
or
xchg
fdivrs
lcall
sbb
mov
cmp
cld
test
cmp
out
lcall
mov
mov
fsts
dec
outsl
mov
xlat
lret
mulb
add
lds
sbb
lcall
mov
mov
cld
sub
pushf
aad
pusha
ss
out
cmp
fld
mov
inc
xor
add
neg
cli
call
sub
jne
or
icebp
mov
sahf
add
cmp
movsb
jo
sub
fsqrt
and
mov
mov
insb
jae
mov
or
push
or
jge
adc
xchg
add
pop
je
pop
in
dec
fadds
aaa
and
xor
mov
pop
sbb
push
sbb
ror
lods
adc
pop
ljmp
push
mov
mov
shl
mov
dec
xor
adc
jbe
push
jb
inc
popf
sub
daa
shll
xor
pop
xchg
stos
test
cmp
inc
pop
scas
push
sub
scas
or
pop
dec
inc
jmp
or
push
cmpsb
sbb
dec
xor
xchg
mov
xchg
add
test
cmp
xor
pop
inc
cld
jno
loopne
jo
lret
inc
cli
incl
scas
and
inc
sbb
mov
sarb
rcrl
packsswb
sub
movsb
in
dec
push
push
sub
jge
inc
insb
mov
and
in
dec
icebp
push
pop
mov
bound
sub
ret
and
and
je
mov
sbb
es
inc
imull
pop
orb
adc
scas
and
add
add
pop
sahf
adc
jl
cmp
lahf
and
dec
loope
push
test
sti
add
pop
inc
inc
cld
jg
int3
adc
pusha
nop
mov
inc
dec
das
push
jle
dec
adc
mov
rcrl
xor
fistpll
mov
xchg
mov
movsl
rol
ljmp
call
iret
testl
mov
dec
aaa
testb
movsl
xor
sub
jp
pop
cmc
mov
xor
xchg
mov
lods
xchg
cli
mov
mov
adc
and
cwtl
adc
call
fucom
loopne
pop
lods
mov
jne
xchg
jne
mov
insb
add
pusha
test
pop
loopne
outsl
xor
and
push
call
movsb
jge
cmpb
inc
inc
add
or
lods
xchg
sub
mov
pop
dec
xor
stc
js
dec
push
pop
and
mov
fwait
adc
aam
and
mov
dec
inc
icebp
xor
or
inc
scas
and
loope
clc
inc
movsb
and
in
cmc
xchg
in
popa
pop
ficoml
and
out
les
inc
xor
mov
add
pop
ja
add
mov
or
xchg
out
stos
iret
insl
pop
and
jecxz
outsl
in
mov
or
decb
jnp
xchg
push
aad
addl
sarb
pop
jne
lcall
mov
adc
xchg
or
push
ljmp
or
dec
xor
add
pushf
movb
test
leave
inc
cmp
push
mov
lret
push
repz
add
sbb
test
and
nop
push
insl
xor
xchg
call
sub
pop
adc
push
fsubrs
push
leave
adc
je
cmp
mov
push
js
pop
nop
cs
loope
outsl
mov
iret
addb
cmp
vmwrite
into
jl
push
sbb
stos
cmpsb
outsl
popa
jl
sti
in
fs
leave
pop
dec
adc
lea
clc
mov
adc
jnp
or
imul
jg
hlt
outsb
popf
xchg
ret
test
fidivl
fs
loop
adc
sahf
aas
mov
fimull
fcmovb
inc
imul
inc
cmpsl
out
pushf
xor
adc
mov
mov
nop
push
inc
xchg
adc
or
push
inc
ljmp
aam
xchg
pop
fdiv
adc
pop
out
insb
fwait
cmp
mov
inc
xor
or
lret
shl
arpl
adc
jno
test
mov
scas
cmpsb
and
nop
mov
sub
lcall
sub
clc
fiaddl
xadd
mov
mov
xor
mov
jl
jo
mov
mov
sub
push
or
lret
sub
movups
mov
mov
sbb
jmp
rcr
adc
mov
xchg
filds
jns,pn
out
xor
incb
cwtl
push
clc
jo
dec
shll
nop
inc
adc
inc
xor
push
icebp
ror
shr
roll
lock
dec
cli
pushf
mov
or
or
lods
lods
addb
or
cmpsl
mov
shl
cli
adc
jp
add
pop
imul
ret
scas
arpl
inc
add
aas
or
test
pop
sbb
push
ret
stos
jmp
daa
sub
add
pop
inc
stc
mov
mov
jl
shll
jae
cltd
je
out
test
imul
sub
sub
jmp
sub
xor
ficomps
cmp
loope
pop
push
sti
movsl
lock
xor
stos
mov
pop
add
out
or
push
rcll
add
std
mov
lcall
incl
and
mov
hlt
mov
dec
push
call
pop
imul
out
popa
sbb
mov
outsb
dec
mov
cld
ror
fisttps
mov
dec
add
aam
adc
loopne
adc
mov
mov
sbb
incl
pusha
xor
rcl
jb
jno
pop
orl
push
or
enter
add
test
sbb
sub
aaa
aaa
je
mov
xchg
hlt
outsl
das
inc
push
cli
daa
push
adc
imul
lods
fiaddl
add
add
aam
movb
out
or
imul
vmovaps
adc
subl
ljmp
mov
int
aaa
push
add
lcall
daa
lahf
jno
xor
sub
mov
adc
push
int
js
pop
stos
faddl
jno
enter
cmpsb
jl
shrb
or
mov
push
mov
scas
jo
enter
nop
cli
je
inc
cmp
movsb
push
mov
cmp
imul
or
mov
dec
and
add
sub
pop
into
test
adc
adc
sbb
ljmp
cmc
mul
call
push
and
in
andl
dec
pushf
adc
push
xor
dec
fs
or
cwtl
adc
mov
pop
outsb
adc
sbb
xor
js
pop
push
bound
icebp
bound
xor
daa
adc
sub
inc
jb
mov
or
push
stos
test
mov
int
cld
test
out
insb
sbb
pop
sbb
mov
nop
in
shlb
add
push
sub
js
fwait
mov
jg
clc
inc
cmc
add
jg
fmul
fcmove
or
push
mov
in
pop
xchg
jb
scas
stos
fistps
mov
repz
push
aad
adcb
mov
mov
loope
sbb
jmp
ret
xchg
ret
scas
mov
mov
les
adc
sbbl
movsl
pop
in
mov
cmp
cli
cli
rolb
jmp
mov
mov
outsl
pop
movsb
dec
xchg
sbb
mov
shl
push
and
int3
push
cmc
jbe
mov
inc
pop
xor
inc
nop
mov
adc
icebp
mov
sar
mov
mov
push
jnp
outsb
inc
jle
mov
iret
out
inc
jb
sbb
add
mov
test
pushf
dec
mov
push
cmp
test
or
mov
add
lret
cli
adcb
call
inc
sbb
add
es
aad
lods
push
rcrb
negb
loope
inc
jno
call
add
pop
or
shrb
or
std
push
cmpsb
push
add
push
or
incl
jmp
in
aaa
sbb
test
test
cltd
pop
fisttpll
xor
inc
repnz
jno
sbb
push
cli
cmp
xchg
lods
imul
or
scas
add
std
lret
push
call
sbb
rolb
subb
rolb
mov
icebp
xchg
clc
into
or
pop
lcall
xor
outsb
clc
fcmovne
jnp
sub
ficoml
roll
shlb
add
lcall
or
ds
pop
rolb
dec
inc
lret
je
insl
nop
pop
push
cld
cmp
stos
sbb
movsb
jmp
inc
pusha
cltd
lea
mov
adc
dec
inc
inc
ds
imul
push
loope
faddp
or
jae
aas
sub
mov
xchg
push
xor
push
pusha
lcall
gs
lret
add
inc
sbb
orb
and
std
push
stos
int
fisubrs
stos
sub
jmp
dec
mov
dec
lock
aam
in
add
push
sub
mov
loopne
sbb
aas
ds
stos
jge
stos
test
fsubrs
push
dec
je
sub
xchg
jl
add
push
ret
rorb
push
mov
pop
mov
hlt
adc
test
loop
add
cltd
jno
jno
sbb
cmpb
outsb
loope
in
es
adc
lret
lods
clc
call
mov
xor
cmp
jbe
test
jbe
inc
cmp
push
out
adcb
pop
std
xchg
add
xor
push
clc
mov
and
xor
repnz
ljmp
jl
lahf
xor
je
add
mov
lcall
jmp
test
leave
add
repz
mov
adc
push
push
xor
adc
sub
ret
pop
mov
pop
sti
jecxz
movsl
adc
sahf
pop
scas
mov
std
ret
mov
and
clc
ja
mov
cltd
inc
scas
pop
inc
xchg
pop
push
cmp
xor
popf
cmp
push
mov
push
xchg
popa
mov
or
mov
dec
loop
ret
sbb
outsl
xor
mov
cltd
addl
lcall
idivb
aas
ret
cwtl
shll
or
mov
loope
fwait
and
sbb
adc
cs
out
dec
notl
outsb
xchg
push
test
pop
push
hlt
ret
xchg
add
shrb
nop
dec
movl
popf
daa
mov
mov
add
sub
outsb
lock
lock
jmp
loop,pn
dec
inc
test
leave
pop
fs
mov
fsubr
fistl
add
sbb
stc
cmpsb
dec
mov
pusha
mov
ljmp
sub
jae
fimull
add
loop
insb
mov
in
lods
push
cltd
dec
sbb
or
push
mov
mov
fcmovbe
inc
lods
xor
inc
fistps
cmpsb
shrl
cmp
movsl
lods
loop
adc
mov
ja
loop
stos
sub
and
cmp
mov
mov
jo
jmp
fdivrs
mov
fstps
inc
pop
or
js
js
mov
mov
stos
mov
mov
or
or
ret
daa
mov
pop
jbe
stos
inc
outsl
jnp
push
dec
mov
int
loope
dec
cmp
push
les
sbb
fcoms
xchg
sub
inc
int3
or
sub
clc
scas
daa
insb
xor
arpl
xchg
js
gs
sti
pop
fiadds
subl
mov
cwtl
push
sub
nop
lock
iret
mov
insb
jo
cmp
in
mov
and
lret
mov
dec
adc
lret
js
repz
pop
push
adc
shll
push
fstpt
aas
clc
mov
scas
pop
sti
jns
pop
in
xchg
push
xchg
mov
jmp
fsubl
sbb
adc
sarb
xchg
test
nop
insb
mov
adc
pop
fdivs
push
mov
sar
jae
push
daa
jno
pop
mov
or
loopne
icebp
mov
mov
mov
xor
popf
enter
aas
adc
sub
sub
je
mov
cmp
in
mov
mov
sbb
es
ficoms
sub
mov
or
imul
or
sub
sub
aaa
or
sti
jne
xchg
jb
mov
mov
mov
sbb
xchg
js
mulb
stos
add
sbb
mov
pop
adc
sub
enter
mov
jo
fs
xchg
testb
lods
incl
or
pop
dec
adc
js
mov
movzwl
xchg
jae
push
fs
add
or
movsb
xor
sub
mov
into
mov
pusha
imul
insl
test
aam
jno
jp
pop
fnstcw
dec
in
addr16
scas
cwtl
add
les
adc
sub
pop
add
test
and
addr16
and
sar
pushf
push
jge
mov
and
inc
mov
adc
push
cwtl
mov
push
adc
fwait
aam
xorb
xchg
lock
inc
loopne
shlb
idivb
jle
lcall
repnz
add
adc
std
pop
lock
subb
cmp
int
xlat
notb
bound
dec
js
mov
loope
or
fdivs
and
nopl
pop
push
jnp
push
xchg
push
jb
outsl
inc
outsl
add
lea
insl
mov
clc
or
in
mov
mov
xor
push
add
pusha
adc
push
and
fnstenv
push
clc
pop
push
clc
mov
lahf
loop
fwait
movsl
stos
xchg
mov
mov
mov
dec
ds
sub
std
insb
or
sub
add
mov
in
sti
aad
pop
lahf
jo
and
mov
inc
mov
add
jns
push
add
or
popf
imul
inc
and
or
push
daa
adc
sti
es
rcr
cmp
adc
ja
lock
adc
sbb
mov
jns
and
pop
cltd
cmp
into
cli
jmp
push
inc
or
sarb
adc
mov
push
mov
lods
jnp
push
mov
in
ret
xor
pop
cs
pop
push
inc
jo
cmpl
scas
loopne
popa
cmpsl
imul
pop
lods
pop
test
or
adc
and
sbb
lret
mov
pop
sub
inc
push
inc
mov
xchg
xor
lds
sarl
outsb
xor
clc
addb
dec
mov
and
daa
insb
mov
negb
rcrb
cli
lcall
or
sti
fimull
mov
ljmp
stc
xchg
lret
pop
fadds
arpl
sub
push
or
push
adc
imul
hlt
xor
loope
stos
or
mov
clc
je
int
adc
sbb
add
or
mov
cmp
mull
mov
cmpsb
pop
mov
xlat
call
sbb
xchg
sbb
sti
popa
mov
jl
sbb
cwtl
mov
inc
cld
dec
cmc
lcall
push
or
inc
push
jl
sbb
mov
pop
dec
push
loopne
das
sub
fstl
sbb
push
out
push
and
mov
xorl
aas
test
mov
pop
mov
xorl
cmpsb
adcb
pop
sbb
hlt
test
inc
adc
pusha
mov
xchg
loopne
insb
orl
sub
mov
imul
cmpl
wrmsr
sub
jns
fyl2xp1
cmp
sbb
shll
push
bound
jecxz
xchg
imul
push
xlat
jbe
mov
add
std
js
cmpsl
inc
push
sbb
sbb
sub
mov
inc
dec
out
popa
adc
adc
in
mov
ficompl
mov
cld
jo
add
pop
mov
mov
mov
sbb
pop
adc
mov
pop
push
popa
nop
jle
arpl
sub
out
mov
sub
pushf
dec
nop
sub
rclb
mov
mov
jno
dec
adc
jle
aad
add
leave
jge
stos
push
call
in
sbb
in
cmpsl
jb
sub
outsb
dec
push
cmp
jle
cmp
shr
rclb
xchg
dec
rcll
cmp
loope
lds
mov
fnsave
out
pop
test
lods
mov
or
pop
pop
add
xor
stc
sbb
or
and
rcrl
jl
push
inc
jbe
iret
jne
cmp
xchg
push
jmp
pop
cmp
out
mov
adc
sar
push
add
mov
xchg
xchg
or
nop
dec
adc
cmp
push
dec
cmp
loope
je
cmp
loopne
cmp
jne
xor
inc
dec
pop
stos
xor
ret
sbb
aas
pop
sub
imul
out
lret
ret
icebp
inc
sub
rorb
mov
or
jb
jp
mov
dec
aam
movsb
xchg
bound
iret
or
cmp
adc
arpl
mov
lock
out
mov
inc
pop
shl
cmc
jecxz
jle
push
add
arpl
push
imul
movsl
je
mov
inc
mov
jmp
in
rcll
dec
pushf
arpl
data16
loope
xchg
std
fs
inc
rorb
jle
adc
jge
adc
or
gs
mov
inc
jmp
aaa
inc
xchg
mov
fldt
pop
cmp
inc
std
pop
mov
xchg
int
ficoms
movsb
push
or
mov
mov
and
lods
sbbb
insl
pushf
sub
test
stos
xchg
idiv
cmp
mov
lahf
xchg
xor
add
out
add
movsb
inc
sahf
in
mov
mov
imul
mov
jns
shrb
aas
push
repnz
hlt
orl
es
jns
imul
nop
rep
pop
rcl
add
sbb
lahf
in
push
dec
push
arpl
ljmp
mov
push
mov
or
outsb
aad
das
mov
jne
test
xchg
outsb
inc
stos
xor
push
shrb
scas
pop
inc
inc
imul
mov
mov
xor
add
jne
fs
xorl
push
mov
jecxz
inc
dec
ss
lea
les
cmp
movsb
jecxz
xchg
sub
les
jecxz
popl
mov
and
cmp
rolb
xchg
mov
add
rcll
pop
mov
shll
mov
mov
pop
lods
adc
mov
rcll
xchg
pop
mov
int
adc
out
inc
mov
add
pop
adc
sbb
xchg
pop
sbb
push
jmp
mov
ret
movsb
sub
inc
insl
repnz
jp
ds
das
cmp
mov
movsl
out
aad
loope
cmp
pop
cmp
call
xchg
xchg
mov
in
scas
and
loop
pop
jmp
inc
aam
xchg
and
and
pusha
loopne
mov
dec
dec
mov
subl
pop
xor
inc
aaa
cmpsl
scas
cli
ret
jb
sbb
outsl
and
inc
pop
lcall
aam
pop
fdivr
fs
push
pop
inc
cmp
or
inc
jae
aad
dec
add
jbe
aad
xchg
loopne
mov
mov
std
repnz
push
adc
rcrb
sub
xor
sbb
mov
pop
or
lock
lret
les
outsb
sub
push
int3
inc
lcall
roll
jnp
add
mov
pushf
xor
dec
xchg
jbe
inc
sysenter
ss
adc
mov
push
push
arpl
clc
mov
jl
inc
scas
jp
or
mov
mov
push
clc
dec
mov
xchg
sbb
scas
outsl
pop
inc
fs
mov
xor
popf
popa
pop
inc
js
rcrl
cmp
pusha
loop
xchg
or
mov
add
mov
int
xchg
add
cvtpi2ps
push
dec
shl
cmp
and
dec
cmp
xchg
sbb
inc
jge
jo
pop
iret
aas
gs
orb
shlb
inc
dec
cmp
push
stc
cld
ja
ret
sbb
adc
sti
sub
push
adc
jbe
mov
adc
add
test
sub
fmull
and
shlb
xchg
adc
push
lret
js
inc
hlt
outsl
push
mov
pusha
cmp
jmp
sahf
inc
push
mov
cmp
mov
das
xchg
sbb
mov
sub
mov
int3
mov
mov
cli
sti
jbe
mov
pop
out
pusha
loope
adc
outsl
mov
mov
mov
aas
nop
popa
jo
popa
inc
dec
cmp
mov
ja
mov
cwtl
je
loope
adc
or
xchg
or
mov
and
movsb
pop
cmpsb
push
sub
ss
mov
push
mov
push
sbb
pop
into
icebp
jp
sbb
push
inc
repnz
pop
dec
and
paddsb
mov
jns
cmp
rdpmc
mov
mov
jns
sub
and
add
xchg
jns
xchg
sbb
cltd
mov
cli
es
xlat
lock
outsl
xchg
jle
test
inc
push
rcll
push
mov
add
repz
andb
sub
cmpl
sbb
jle
add
scas
movsb
jb
cmp
pop
xor
lea
lea
gs
pop
or
int3
roll
cld
fsubrl
pop
xchg
fstps
push
cli
fcomps
mov
or
cmp
jge
ja
xor
xorl
lret
mov
sbb
mov
or
adc
mov
cmpb
xor
js
xlat
ret
adc
icebp
fsub
inc
aam
out
mov
lahf
movsb
lret
mov
mov
push
add
in
mov
inc
xchg
push
fldenv
call
test
popf
adc
leave
rcrb
jg
mov
cmpsl
scas
push
mov
push
loopne
aad
xchg
ja
shl
sbb
sbb
mov
jl
adc
js
mov
fucomp
adc
mov
les
push
push
jbe
push
inc
jne
fcmovb
repnz
lea
cli
jmp
jge
inc
stos
xchg
cmp
xchg
add
repnz
add
xchg
cs
jb
mov
or
or
repz
jmp
das
call
lahf
es
icebp
jecxz
enter
lock
and
loop
inc
xchg
or
hlt
mov
sbb
sub
or
push
add
sbb
or
fildl
sbb
bnd
pop
push
inc
dec
imul
mov
js
nop
les
icebp
das
ja
enter
outsb
lret
insb
pop
push
xor
es
out
fsubs
dec
je
or
icebp
pop
js
sarl
int3
xor
dec
stos
sub
inc
lods
push
icebp
sbb
jae
ret
add
call
add
aam
lcall
out
cli
jmp
add
fmulp
or
repz
fnstsw
or
out
pop
arpl
stc
jo
seto
mov
jle
sbb
mov
sub
xchg
inc
movsb
jo
insb
pop
cmc
mov
cmp
in
das
adc
pop
icebp
daa
in
and
jno
inc
psubw
mov
inc
mov
push
adc
movsb
dec
add
fdivp
adcb
and
mov
cmp
push
sub
pushl
mov
fwait
dec
sub
aas
movsb
jne
xchg
xlat
sub
fs
test
out
push
pushf
adc
sbb
and
xor
in
mov
movsl
or
lock
pop
xor
or
sbb
cmp
icebp
mov
sbb
bound
stos
lcall
or
mov
adc
adc
rcrb
add
int
not
xchg
push
insb
outsl
pop
push
cmpsb
xchg
out
pop
inc
cmpsl
sub
ret
mov
pop
outsb
cs
mov
xor
cli
push
scas
and
cmp
or
push
jno
add
call
std
cmpsl
in
pusha
mov
push
loopne
push
in
jno
add
cmpb
subl
push
cmovo
subl
sbb
xchg
movsl
sub
lret
xor
jp
sbb
adc
pop
pop
fsubl
out
pop
in
imul
sub
repnz
sbb
push
insb
adcb
jmp
jl
xchg
mov
fcoml
stos
cmp
dec
inc
dec
movsl
or
jmp
mov
jg
inc
gs
jecxz
xchg
jg
rolb
movsb
adc
std
lods
cmp
cmc
jno
adc
inc
aas
hlt
je
push
in
pop
iret
aam
and
push
mov
sbb
pop
lods
test
xchg
and
insl
add
stos
lcall
mov
inc
leave
mov
mov
and
sub
push
add
mov
and
popa
cmp
aad
cmpsl
sti
cmp
mov
mov
fs
jne
mov
das
test
ds
test
mov
inc
das
adcb
in
hlt
stc
js
push
add
add
xor
negl
lods
cmpsl
xlat
pop
call
cli
rol
push
and
loope
test
lret
mov
inc
ret
cmpsb
out
mov
xchg
testb
ljmp
adcb
push
mov
ret
in
pushl
hlt
clc
cmpsl
adc
outsb
add
out
dec
push
add
out
mov
push
pop
outsb
push
cwtl
jp
imul
or
jecxz
add
sbb
fiaddl
fs
or
mov
cmp
adc
jmp
aam
cmpsb
pop
or
mov
sbb
insl
xchg
dec
aaa
sub
outsb
stos
das
adc
pop
jmp
inc
movsb
xchg
lods
dec
lock
hlt
xchg
outsb
xor
jns
stos
repz
xchg
mov
pushf
pop
dec
std
test
inc
lret
mov
and
inc
jae
mov
jb
push
mov
xchg
ret
and
or
cmp
add
js
lds
adc
lds
push
clc
test
sbb
pop
adc
lahf
pop
ret
jle
int3
jns
jle
inc
ret
loop
rcrl
adc
mov
xchg
pop
xchg
cwtl
push
sbb
xchg
add
xlat
mov
push
gs
stc
pushf
or
mov
mov
dec
or
outsb
cmp
cld
add
mov
lahf
out
movsl
call
cwtl
outsb
mov
dec
out
sub
jge
mov
and
fwait
shlb
jmp
adc
inc
adc
add
pop
movsl
and
push
or
adc
sbb
adcl
shrl
mov
addl
sbb
rol
xchg
in
nop
hlt
das
lea
sbb
jnp
test
or
jp
mov
inc
ja
mov
mov
into
xlat
inc
mov
push
outsb
hlt
sub
data16
pop
dec
jo
mov
out
addb
icebp
lods
jecxz
dec
dec
xchg
or
and
sbb
pop
push
pop
and
add
lock
mov
mov
pop
mov
test
jne
adc
cmp
jo
mov
in
push
mov
mov
adc
and
stos
mov
lods
cli
dec
pusha
ss
sbb
incb
scas
xlat
clc
adc
js
leave
mov
loope
pop
inc
jle
out
mov
inc
adcl
imul
and
xchg
mov
addr16
sbb
ret
or
ljmp
push
test
jge,pt
clc
pop
xor
sbb
clc
add
cmp
add
mov
movsb
orb
orb
ret
sub
pop
clc
sahf
and
lret
push
cwtl
adc
mov
cld
mov
ret
cltd
ret
sbb
fldenv
cld
outsl
sbb
test
cmpsb
arpl
jg
push
loop
xor
mov
mov
or
lods
mov
xor
cwtl
pop
lock
jmp
scas
out
adc
and
lds
sub
lds
mov
in
ja
cmp
shrb
es
fsubrs
inc
shlb
add
dec
push
xchg
pop
out
incb
xchg
push
mov
inc
cltd
mov
inc
xlat
or
cli
je
mov
ror
nop
mov
ret
dec
mov
daa
or
cmpsb
inc
add
js
ret
cmp
hlt
subl
test
mov
les
and
push
movsl
cmpsb
jo
test
popa
xor
pop
std
pop
add
movsl
outsl
adc
test
pushf
mov
push
push
add
pop
sbb
adcl
and
mov
movsb
mov
dec
dec
dec
sbb
test
mov
orb
jne
movsb
mov
rorl
cmp
mov
cmpsb
cmp
cli
popa
jg
sub
mov
add
dec
mov
mov
shlb
imul
cmp
xor
xchg
shlb
or
clc
adc
fildl
stos
enter
pop
adc
inc
aaa
xorl
call
mov
cmp
jo
adc
and
pop
test
stos
push
lret
js
sub
incb
add
insb
sbb
jo
mov
sti
sub
push
divl
inc
dec
xchg
add
fisttpl
inc
push
fs
pop
data16
lods
push
or
push
pop
popf
xor
js
sub
add
test
out
jae
pop
insb
inc
jl
lock
adc
push
bound
add
lods
test
hlt
jae
mov
test
mov
xor
int3
or
adc
sub
or
add
mov
bound
test
dec
clc
push
pop
cmp
js
std
lods
shl
flds
into
lods
mov
fbld
stc
pop
call
pop
push
rol
xor
jl
gs
call
or
jge
ret
jb
xor
jno
or
outsl
adc
dec
mov
adc
sbb
xlat
pop
mov
xor
inc
imul
out
lret
push
ss
fstpl
shrd
xor
pop
int3
dec
push
mov
push
mov
fisubl
inc
mov
scas
cmpsb
out
push
andb
ljmp
push
andb
inc
pop
xchg
jle
test
les
mov
mov
pusha
sbb
inc
push
lods
out
mov
push
mov
insb
ljmp
sub
loopne
push
je
icebp
jle
jns
loope
lret
mov
lods
sbb
divb
sarb
sbb
test
decb
inc
cmpsl
jp
cmp
pop
pushf
jo
js
or
lea
lahf
decl
popl
or
aaa
in
bound
mov
and
mov
popa
sbbb
jcxz
gs
xchg
andl
dec
aam
push
fcompl
popa
mov
add
aas
jl
mov
imul
cmp
dec
mov
jbe
push
mov
add
adc
adc
fs
in
jbe
sub
adc
pop
pop
push
negl
lods
scas
ds
adc
inc
pop
inc
sub
js
pop
loop,pt
pop
mov
nop
movsb
or
mov
and
push
xchg
ret
popf
notl
cmp
cltd
call
clc
mov
loope
outsb
cwtl
xchg
mov
or
movsl
push
pop
loope
lock
xchg
inc
ljmp
pop
or
icebp
loope
mov
pushl
jge
pop
cmp
and
ljmp
or
xor
or
das
push
out
rolb
jmp
iret
push
ja
repz
fs
pand
add
repnz
sahf
inc
lahf
jnp
clc
pop
pop
test
fldl
dec
add
or
jge
pop
adc
xchg
ss
test
jecxz
test
xor
inc
daa
adc
iret
sbb
mov
pop
ljmp
dec
pop
cmp
adc
cld
jne
sbb
mov
xchg
adc
or
pop
mov
jno
test
push
adc
out
fidivrl
aaa
cli
int
sbb
clc
pop
imul
mov
test
push
mov
ljmp
push
jne
and
mov
lret
loopne
inc
test
fxtract
push
test
or
out
icebp
test
cmp
pop
stc
cmp
or
iret
leave
or
aaa
add
je
and
hlt
lock
loope
aam
sbb
movsb
jmp
cli
scas
cli
fsubrl
cltd
add
imul
cs
add
movsb
pop
lock
mov
mov
sbb
lcall
ret
jb
pop
popa
sub
adc
pushf
push
mov
mov
mov
in
inc
orb
mov
add
and
clc
or
mov
movsb
pop
cmp
pop
icebp
add
adc
test
idivb
andps
loopne
sub
push
push
lock
dec
pop
lret
jl
ljmp
and
shlb
cld
cld
push
lods
push
fnstcw
sbb
cmp
ljmp
ret
push
lock
loop
jo
jno
aas
jb
cmp
fisttpll
mov
pop
je
adcb
push
ljmp
imul
fwait
into
jmp
ss
mov
push
xchg
xor
rol
inc
negb
or
cmpsl
xchg
lock
ret
jl
rclb
jbe
jbe
outsb
clc
push
mov
xor
and
mov
cli
cwtl
or
mov
sar
cmp
add
call
aas
jo
dec
push
cwtl
cmp
cmp
push
roll
push
ljmp
push
xchg
mov
push
jle
jbe
dec
mov
adc
test
add
jg
popa
dec
mov
sub
add
push
test
adc
xorb
andb
subl
pusha
sarl
jmp
lods
rorl
add
mov
or
scas
xor
imull
mov
sub
out
mov
sub
in
rcrl
ljmp
jecxz
pop
push
jmp
lock
mov
adc
loopne
dec
cmp
and
pop
mov
cwtl
aaa
shll
jp
mov
mov
inc
push
push
mov
mov
cmp
das
hlt
add
hlt
fidivl
scas
scas
mov
inc
aam
aas
and
add
sbb
jle
jge
arpl
xchg
pop
or
das
cmp
mov
sahf
and
xor
jge
cltd
mov
ret
push
pop
xchg
xchg
xchg
push
sti
fstl
sub
jecxz
loop
aam
mov
les
mov
add
cwtl
fs
mov
sbb
push
pop
fmull
xchg
cli
inc
inc
xchg
data16
stos
add
rol
cmp
inc
cmp
push
in
fnstcw
jp
xor
pop
arpl
stos
test
push
rcll
jmp
pop
fmull
roll
jmp
dec
push
dec
xor
dec
adc
jle
bound
es
sbb
mov
insl
inc
sbb
ljmp
insl
xor
xor
scas
cmp
call
cmp
stos
push
inc
add
data16
rorl
aam
adc
les
sti
test
mov
bound
add
loopne
inc
jns
imul
scas
jmp
add
imul
aam
scas
xchg
cs
ljmp
orl
add
and
fistpl
or
pop
pop
pop
sub
pop
mov
fwait
movsl
cwtl
add
xlat
cwtl
dec
adc
ja
cli
xchg
loope
sbb
mov
je
cmp
test
fmuls
dec
jb
inc
fcmovb
mov
loopne
test
xor
inc
shl
inc
out
lret
cmpsb
mov
call
imul
inc
mov
lea
movsl
clc
mov
push
add
scas
dec
sbb
inc
daa
or
mov
inc
mov
push
xacquire
adc
mov
cmpsb
push
subb
orb
dec
cmc
mov
add
sbb
mov
dec
add
ret
mov
pop
test
mov
adc
jmp
imul
insl
jl
jbe
jo
xchg
inc
frstor
mov
arpl
into
stos
icebp
or
subl
sub
jle
aam
xor
adc
or
loopne
push
lcall
xor
or
ss
fwait
test
cmc
pop
aam
pop
mov
dec
jns
pop
in
test
daa
or
inc
and
pop
addl
add
das
lea
pop
or
int3
test
test
test
outsl
dec
mov
add
inc
es
pop
mov
pop
ss
or
frstor
mov
jge
outsb
imul
notb
daa
subb
add
lahf
mov
mov
push
and
cmpsb
addr16
sub
popa
sub
ja
jle
imul
lcall
icebp
push
hlt
or
sub
adcl
ret
mov
dec
fstp
sbb
pop
or
loope
shl
sbb
outsl
sub
arpl
ffree
and
xchg
inc
sub
push
rcrl
cmpl
ret
mov
in
cmc
sub
push
or
lods
call
jae
test
mov
xor
repnz
ret
add
aam
outsl
push
mov
xchg
jo
push
ret
xor
sbb
dec
lods
mov
xor
mov
add
cmpsl
rolb
gs
dec
outsb
out
push
sbb
dec
cmp
or
mov
dec
addr16
xchg
addl
xor
sbb
lret
pushf
jl
bound
mov
shrl
pop
or
mov
ja
pop
dec
arpl
shlb
lret
sbb
push
jle
out
xchg
outsb
inc
in
int3
pop
cmp
push
das
lret
inc
sub
neg
loope
push
stc
in
adc
out
cli
stc
popl
or
add
and
adc
xor
mov
inc
dec
fs
cmc
or
test
sub
incb
loope
pop
mov
jmp
pop
push
pop
push
or
loope
out
in
aam
cmp
sahf
push
sbbl
pop
inc
pop
cli
in
lret
movsl
stc
test
adc
sub
dec
out
test
repz
cs
adc
mov
cld
add
test
dec
xor
les
js
ss
jno
xor
sub
and
xchg
icebp
mov
stos
addr16
fs
loopne
pop
fiadds
add
inc
adc
inc
xor
fcoml
xchg
pop
dec
shll
popf
inc
and
les
mov
mov
fsubs
and
ret
xchg
ret
add
mov
pop
ret
shrl
popa
add
aas
jne
inc
js
addr16
adc
pop
rolb
or
mov
push
mov
push
inc
pusha
sub
adc
arpl
ds
adc
jo
icebp
lret
mov
pop
std
add
addr16
ss
mov
popf
push
inc
lcall
push
push
insb
mov
xchg
xor
mov
ret
dec
pop
xor
enter
adc
inc
push
xor
scas
lea
dec
pusha
add
ret
mov
loope
fldt
inc
xchg
out
dec
adc
loope
push
nop
jmp
adc
scas
jno
adc
push
mov
jmp
ret
add
nop
icebp
cmc
adcb
mov
sahf
mov
jne
in
out
adc
sub
sub
jo
bound
arpl
dec
add
xchg
dec
mov
in
xchg
inc
sbb
xchg
or
add
cmp
ds
subb
inc
push
shlb
je
mov
push
inc
shlb
push
popf
cs
imul
add
adc
or
gs
int
stos
int3
jo
and
push
jecxz
add
ja
pop
ljmp
in
add
cmovs
add
fnstsw
xchg
test
sti
and
inc
in
mov
cmpsb
ret
xor
dec
lea
xchg
sub
and
test
vphaddubd
out
test
movsl
add
xchg
ja
lahf
sub
nop
push
sub
inc
sub
push
push
pop
lea
add
test
push
mov
enter
setno
push
push
mov
and
mov
aad
cltd
test
inc
push
test
dec
jbe
stos
add
fstp
push
mov
stos
out
js
lock
test
ss
std
es
push
jle
or
das
and
scas
lods
adc
xchg
clc
push
sti
adc
sbb
cs
or
jnp
xchg
or
insl
add
or
lods
ret
xor
pop
xor
je
mov
in
and
insl
sbb
popl
daa
aas
pop
and
add
xor
and
pmaxsw
add
mov
aad
neg
cmpsl
cltd
call
enter
jo
outsb
dec
add
adcl
js
add
pop
stos
adc
inc
out
stos
arpl
into
inc
mov
and
cmpsb
sub
jnp
ss
sub
push
test
mov
add
mov
jp
mov
pop
ffreep
dec
push
mov
pushf
scas
das
cltd
fdivr
add
aam
cmp
dec
movsl
frstor
mov
aad
lock
xor
rclb
sti
push
popa
das
fcoms
push
push
dec
mov
clc
push
das
sbb
fwait
cwtl
fs
mov
fwait
hlt
sbb
test
lock
das
popf
xor
lea
lea
inc
adc
mov
ja
sub
cmp
in
xor
sbb
int3
mov
mov
push
andb
imul
les
ja
cmpb
pop
mov
mov
cmc
adc
lock
inc
sbb
mov
ja
mov
add
jno
mov
mov
mov
jle
lret
sub
jle
test
shrl
clc
jecxz
sbb
sub
dec
sbb
dec
mov
cmp
stos
sub
ss
jne
shlb
mov
xchg
cmp
call
jl
shll
adc
and
cmp
pop
rorl
sbb
fsubl
lahf
pop
aad
mov
cld
lret
push
mov
adc
or
adcl
adc
sbb
xchg
jg
and
je
ror
stos
mov
int3
push
push
test
bswap
fistps
mov
push
mov
push
pop
cmc
ret
or
mov
loopne
and
outsl
cmp
lock
push
pop
fnstcw
pop
fdivrs
cmp
cltd
sbb
fnstcw
or
fst
inc
xchg
lods
rolb
call
xor
jnp
mov
sbb
xor
pop
addb
mov
cmp
adc
fiadds
pushl
pop
jno
imul
sub
sbb
movsb
test
jle
sub
insb
jle
pushf
add
adc
and
adcb
mov
in
int3
add
pop
and
sub
test
fmuls
jl
mov
adc
cmp
lcall
dec
repnz
inc
inc
push
mov
mov
arpl
jmp
push
cmc
or
lock
mov
sub
dec
ss
xchg
rcr
mov
sub
xchg
scas
jp
ds
mov
push
xor
lahf
sbb
lcall
jecxz
sbb
icebp
pop
xchg
ficoml
call
xor
sbb
xchg
lcall
les
dec
mov
push
lock
sbb
call
inc
xor
rorb
faddp
outsl
roll
jne
nop
loope
cli
popf
inc
or
or
int
out
pop
js
sahf
ret
cli
jmp
movsb
loope
inc
push
jle
mov
bswap
and
sub
push
push
out
add
out
bound
push
fs
insb
push
push
addl
popa
ficoms
loope
push
fcoms
pusha
outsl
lock
and
add
ret
xchg
gs
mov
test
jle
addr16
loop
addr16
inc
stos
fnstcw
add
data16
mov
sbb
movsb
stc
sbb
lods
cmp
pop
clc
fs
fxch
jne
mov
scas
popa
loopne
call
cwtl
sub
out
inc
arpl
jo
lcall
sbb
inc
add
mov
or
sbb
insb
aas
push
adc
jle
mov
inc
pop
fcoml
dec
je
lods
xchg
mov
xor
test
inc
mov
cld
repnz
mov
sbb
lock
fistpll
inc
sub
adc
in
inc
movsl
popa
pop
dec
mov
pop
mov
jle
pusha
or
inc
mov
fists
cmpsl
jnp
push
jle
push
scas
push
mov
shl
nop
inc
dec
or
sbb
stos
mov
adc
pushl
push
xor
lds
pop
and
setp
pop
push
les
fidivs
pop
mov
xor
push
xor
push
adc
sbbb
mov
ret
pop
add
js
clc
mov
push
ret
lea
xor
jae
cs
pop
xchg
push
sub
loop
cmp
fsubrs
push
cmc
sub
mov
dec
outsb
lods
and
cmp
ret
sahf
ret
inc
fld
je
or
mov
mov
add
dec
sbb
je
or
xchg
into
add
inc
cmp
hlt
daa
sub
cmp
adc
mov
scas
xor
icebp
or
push
sbb
fiaddl
inc
mov
mov
or
mov
rcll
outsb
aad
cmpsb
and
pusha
cmpsl
dec
testb
inc
adc
xchg
mov
scas
test
sub
xor
loopne
inc
add
pop
cmpsl
add
pop
mov
rclb
je
dec
sub
push
add
mov
and
mov
stos
sbb
bound
nop
clc
imul
mov
push
aad
cmp
loop
push
mov
cmpl
sub
dec
dec
rorl
mov
in
ja
call
pop
ljmp
push
jp
movsl
mov
pop
insb
adc
and
mov
in
sbb
mov
hlt
lret
aaa
or
rcl
mov
aam
xor
sarl
paddsb
adc
or
js
cmp
cmp
je
mov
clc
dec
mov
adc
mov
jge
inc
xor
rcrl
lret
mov
subb
or
inc
push
jbe
jl
stos
fmuls
adcb
xchg
mov
or
mov
mov
push
outsl
packssdw
mov
shlb
cmp
xor
adc
and
inc
adc
hlt
cmp
cmpl
mov
stos
icebp
sbb
fdivrl
insb
ret
mov
lahf
sbb
xor
sbb
and
fidivl
stc
inc
cld
lea
cmp
stos
cmp
sub
dec
jmp
ljmp
adc
imul
jmp
push
mov
add
repnz
inc
out
jb
mov
mov
es
out
lcall
jb
sub
in
push
mov
add
xorb
rorl
push
aad
push
fistpll
bound
data16
jno
inc
shll
mov
jg
adc
mov
test
jno
lcall
lock
jmp
push
mov
cld
cmpsl
aam
adc
push
push
xchg
inc
in
pusha
pop
lret
dec
and
roll
mov
ss
test
iret
repz
cld
test
out
mov
push
int
imul
stos
mov
sbb
jmp
cmp
jl
icebp
pop
pop
jb
nop
sarl
rclb
imul
adc
and
testb
call
lret
xchg
or
push
loop
or
jnp
pop
lock
or
sbb
fidivs
xor
or
test
imul
fs
add
adc
aaa
or
jle
jbe
mov
xchg
xchg
jne
sub
ljmp
push
pop
scas
dec
inc
mov
xchg
lods
js
repz
pushf
jnp
lret
push
wbinvd
aam
cmp
leave
add
mov
clc
repnz
lcall
mov
sub
mov
sbb
and
push
imul
sahf
and
lds
pushf
cmpb
mov
adc
pushf
push
sub
cmp
inc
sbb
test
xchg
push
push
xor
inc
ds
rol
lcall
sub
cmp
sub
dec
aas
adc
test
das
data16
xchg
ljmp
je
fdivrp
pop
adc
insb
leave
mov
inc
out
add
dec
dec
dec
lds
clc
fwait
lock
aas
jp
es
or
mov
int3
mov
ret
lods
push
int3
out
push
jl
dec
pop
scas
les
push
jo
sbb
or
adc
push
loopne
loopne
inc
pop
push
xor
adc
rol
shlb
sar
inc
push
add
dec
jmp
stos
jecxz
rclb
pop
sarl
hlt
insb
gs
jns
mov
daa
and
cmp
fcoml
scas
inc
pusha
xor
push
fdivs
and
clc
add
add
ljmp
cmc
adc
push
cmp
mov
in
test
subl
or
rcrl
mov
ffreep
js
out
clc
adc
xchg
rclb
and
mov
adcb
adc
in
fimuls
dec
add
pop
jl
xchg
mov
nop
sbb
sbb
aam
rcr
jge
mov
xchg
fs
or
orl
lahf
inc
push
cmpsb
push
add
inc
std
outsl
inc
stos
cli
cmp
into
adc
cli
scas
mov
add
lahf
sbb
fsubs
sahf
or
adc
xor
into
mov
fadds
inc
aad
sahf
cmpb
sub
pop
pop
fnstsw
inc
incl
lock
push
mov
ljmp
pop
cmp
pop
test
push
int3
ss
stos
mov
mov
mov
fwait
jne
mov
lods
mov
pop
sbb
testb
pop
jge
sub
loope
cwtl
loope
jae
lret
js
cvttps2pi
mov
fmuls
insl
lds
cs
cld
or
in
xchg
jecxz
pop
xchg
dec
clc
or
idivl
incl
push
jb
inc
data16
inc
mov
push
mov
sarb
lcall
mov
or
inc
loop
mov
fbld
icebp
xor
movsl
pop
jle
scas
inc
subb
sub
pop
addb
or
inc
repnz
push
imul
xchg
js
insl
dec
jno
mov
sbb
stos
push
sbb
call
and
gs
adc
iret
cmp
loope
xorb
jle
dec
pop
add
int
je
sub
call
inc
scas
in
pop
mov
inc
cmp
mov
in
cmp
adc
add
sub
jae
ljmp
or
sub
ljmp
sbb
push
mov
mov
cmovo
pop
push
inc
jl
inc
addr16
jbe
dec
aaa
js
clc
fdivr
sbb
push
sub
xor
xchg
sbb
jle
idiv
sbb
pop
pop
es
fdivl
shlb
xchg
cld
push
xor
ss
fisubs
sahf
scas
dec
ljmp
sbb
sub
or
nop
decb
xlat
xchg
push
push
add
lods
clc
andl
push
xchg
fiadds
or
sbb
addl
je
jge
in
mov
mov
fisubl
push
ja
inc
hlt
aam
pop
leave
jbe
adc
add
and
pop
nop
add
jo
cmc
dec
popf
jns
ljmp
xchg
sub
shlb
repnz
add
das
pop
mov
into
mov
adc
push
inc
or
or
adc
int3
pop
push
addr16
es
push
or
jle
mov
or
sbb
mov
inc
sbb
es
in
push
mov
dec
cwtl
mov
mov
mov
jge
loop
xchg
stos
add
xor
out
sbb
mov
jle
stc
inc
or
push
loope
jo
call
xorl
xchg
jecxz
addl
pushf
movsb
and
add
xor
jg
rcr
popf
sub
outsb
mov
leave
je
inc
hlt
mov
add
not
push
out
jl
and
mov
jbe
sub
cmp
ret
jbe
pop
idivl
andl
sub
cmpsl
xchg
fidivs
dec
jnp
adc
add
insb
cmpsb
push
fwait
mov
cmp
push
out
loope
or
les
enter
sub
and
js
sbb
clc
rol
pop
inc
das
shlb
mov
cmpsb
divl
jg
lock
fisttpl
icebp
jbe
ror
xor
cmp
or
and
int
sbb
mov
aam
adc
push
cmp
lcall
cmpl
pop
jge
or
lcall
mov
pop
call
jno
mov
fs
or
inc
inc
mov
mov
mov
or
pop
icebp
movsb
sub
jbe
add
cmpsl
mov
pop
push
rclb
shrb
add
js
pusha
dec
mov
arpl
mov
xchg
mov
in
adc
rcr
sub
cld
js
pop
cwtl
jmp
mov
addl
adc
fmull
es
ret
lret
aad
inc
mov
fdivl
dec
cwtl
nop
lcall
dec
cmpsl
inc
mov
cwtl
pop
stos
sbb
mov
stos
jle
dec
jg
adc
inc
xchg
inc
adc
sub
mov
lret
xor
mov
dec
lods
movb
movsb
push
xor
loopne
add
shlb
inc
and
movsb
stos
inc
jno
mov
cmp
ss
lahf
jb
lret
or
xchg
leave
subl
test
enter
sub
xor
imul
fldt
or
mov
xor
ljmp
dec
dec
fcmovnbe
push
xchg
clc
cmp
or
xor
xchg
js
test
jp
mov
int
loopne
popa
mov
xor
push
mov
data16
push
lods
add
prefetchwt1
stos
add
imul
mov
sbb
loope
xor
clc
inc
adc
aad
scas
xor
cmp
std
mov
addb
add
addr16
push
movsb
lods
pop
push
insb
or
mov
or
or
fstpt
fstl
pop
mov
pmaddwd
pop
push
dec
push
cld
or
addr16
xchg
cli
call
jl
in
test
aas
add
dec
jle
sub
sahf
pusha
jae
leave
dec
sbbb
outsl
push
or
push
adc
aam
mov
std
add
sub
adc
dec
cmp
mov
jmp
push
lcall
lds
or
push
mov
push
and
push
outsl
loope
aam
xor
jne
test
cmpsl
xor
sub
xlat
sub
rolb
or
jo
xor
les
rcll
mov
push
scas
xor
xor
test
or
js
or
inc
fs
push
inc
jmp
fs
xchg
xor
mov
fwait
sbb
sbb
in
mov
out
or
insl
dec
test
int
adc
rorb
pop
fnsave
cwtl
sarb
loop
xor
sub
cmpsl
pop
fstps
cvtdq2ps
jmp
aas
cmpsb
add
cli
dec
or
push
sahf
clc
dec
or
inc
xchg
sub
and
add
lods
mov
inc
fisttpll
mov
cmc
add
cmp
inc
imull
leave
push
inc
sbb
repnz
cmp
ljmp
sub
das
jb
aam
sbb
and
movsb
arpl
mov
lock
adc
popf
fsub
cmpsl
testb
sub
xorb
inc
hlt
adc
push
adc
and
inc
fldcw
movsl
addb
test
sbb
bound
addr16
fs
ss
ljmp
and
imul
push
dec
icebp
int3
lods
mov
pusha
push
dec
rcll
sbb
pushf
sub
test
cld
fldenv
dec
hlt
push
mov
call
fildll
data16
mov
mov
orl
js
lea
das
push
inc
sbb
addb
lret
icebp
pushl
push
or
rcrl
add
pop
dec
in
cwtl
inc
iret
push
sbb
scas
cmc
mov
jmp
add
mov
fsubp
imul
or
add
adc
clc
xor
mov
and
lahf
or
pop
loopne
mov
inc
push
or
inc
sarb
sbb
push
adcb
cmpl
lea
xor
fildl
add
in
mov
pop
push
jo
inc
dec
std
or
test
jg
sub
outsb
inc
inc
ljmp
lahf
lock
lahf
push
xchg
repnz
sbb
movsb
and
enter
mov
sub
hlt
and
fsub
mov
iret
je
jge
lods
pop
in
dec
cmp
icebp
std
add
call
or
gs
fwait
push
lock
rcrl
inc
ret
fadds
inc
daa
mov
cmp
rcrb
jbe
jmp
sbb
loopne
push
jno
xchg
std
mov
jg
std
lds
push
push
sbb
sbb
add
push
jmp
cmp
cmp
sbb
out
ja
adc
fiadds
call
xchg
dec
or
xchg
cmp
xchg
or
bound
rcl
adc
cmp
cmp
incl
rcll
pusha
mov
sbb
xorb
movsb
enter
lods
or
mov
orl
xchg
imul
ds
clc
stc
inc
push
pop
insl
push
pop
mov
cmp
orb
xchg
or
inc
sar
jo
pop
fwait
sbbb
pop
sahf
adc
cmp
icebp
das
mov
lea
jbe
and
dec
and
jmp
lret
stos
pop
mov
test
mov
pop
and
aas
xchg
cs
notl
adc
inc
ja
daa
or
xchg
and
adc
mov
and
mov
psrad
stos
fiaddl
inc
mov
pop
out
scas
push
pop
mov
cmp
push
and
jmp
filds
dec
int
dec
push
jmp
pop
fimull
mov
jg
inc
test
dec
add
cmp
test
rorb
adc
out
pop
push
fistl
push
mov
inc
std
lahf
sbb
xchg
scas
ds
imul
bound
jg
mov
add
jp
mov
test
es
cmc
sbb
cmpsl
movb
xchg
xchg
inc
jne
fwait
or
jbe
adcb
arpl
mov
and
repz
scas
pop
fbstp
pop
mov
sub
cwtl
dec
lcall
inc
inc
clc
cmp
jnp
inc
xor
test
push
dec
dec
push
out
out
jno
pop
and
inc
push
pop
jo
dec
lret
inc
clc
sbb
lret
ljmp
push
adc
out
rcll
fwait
and
stos
pop
clc
lcall
out
push
sub
fs
mov
sub
push
inc
andb
mov
and
std
xchg
push
push
int
push
adc
pop
or
push
call
popa
icebp
jmp
add
es
inc
sub
imul
fcomp
dec
pushf
mov
dec
cmp
cwtl
xlat
adc
test
subl
out
xchg
in
or
pop
inc
js
and
loope
rorb
test
adcl
shlb
or
loop
sti
mov
fildl
mov
cmp
jno
es
sbb
cmp
push
lret
pusha
and
add
inc
push
inc
es
cmp
jl
pop
xchg
fstpl
fildll
push
leave
and
ret
or
insb
cli
xor
adc
lock
mov
cltd
subl
push
cs
mov
jl
fists
sbb
cwtl
xchg
mov
mov
xchg
adc
adc
sub
fwait
mov
fadds
jle
and
jge
shrb
adc
aas
fs
xor
add
xchg
push
cmc
pop
and
out
cwtl
add
pusha
mov
mov
inc
andb
lahf
mov
sbbb
pop
out
scas
xor
jo
dec
notl
into
test
pop
xor
pop
pop
or
ror
stos
jmp
xor
jns
mov
orl
mov
fnstenv
adc
loope
add
jns
imul
add
mov
mov
loope
add
xchg
out
xorl
sbb
pop
cld
orb
add
lods
loop
nop
xor
lods
push
and
in
mov
fcomip
add
dec
and
mov
lret
hlt
sub
addr16
xchg
jl
mov
xor
xlat
jns
clc
test
mov
xor
pop
jmp
xchg
inc
pusha
imul
sbb
jmp
popf
jp
jbe
and
outsb
or
test
sub
jp
fiadds
shl
scas
jb
push
bound
in
push
jl
js
adc
pushf
fs
jl
or
mov
lret
clc
xor
pop
bound
dec
in
mov
and
clc
jge
nop
mov
test
or
outsb
cli
dec
add
int3
hlt
test
mov
arpl
mov
mov
cmp
fbstp
jb
dec
cmp
faddl
adc
data16
cmpsb
ds
imul
fwait
dec
cmpsb
movsb
leave
scas
nop
cmpsl
or
adc
and
aam
inc
xlat
jno
jbe
sbb
in
pop
pushf
mov
ss
sbb
enter
xor
push
mov
leave
pop
cltd
cli
fstpl
inc
xor
xchg
jle
add
rolb
ss
push
lea
clc
sbb
cmp
add
mov
and
push
inc
push
pop
outsb
xchg
cs
mov
push
sbb
pop
mov
mov
stc
add
loopne
icebp
ljmp
lock
mov
jae
jp
dec
pop
adc
mov
adc
pop
decb
and
data16
and
cmp
pusha
dec
mov
or
loop
test
push
stc
dec
jp
push
inc
lods
lret
addb
outsb
pop
rolb
or
loop
enter
add
loope
push
stos
inc
cli
or
pop
add
cmc
or
leave
or
sarb
out
imull
jg
xchg
jmp
adc
sub
ss
cs
cmp
dec
push
fnstenv
hlt
sbb
dec
ljmp
in
mov
jne
inc
xor
cmp
mov
scas
and
gs
leave
pop
pop
sbb
mov
sub
das
outsl
ja
cmp
fndisi(8087
jle
js
repz
add
cmc
sub
loop
outsb
rcll
and
sbb
jg
jns
test
push
jno
ficoml
cltd
icebp
hlt
xor
call
ljmp
clc
popa
jno
mov
icebp
mov
js
or
sahf
sahf
in
mov
xchg
mov
mov
outsb
and
cmp
add
pusha
out
and
jecxz
mov
aaa
jle
xchg
fmul
daa
mov
aam
mov
mov
xchg
decl
mov
inc
mov
ds
mov
sti
add
js
jg
inc
adcb
push
aas
fs
sub
fwait
stos
aas
sbb
or
dec
pop
xchg
sbb
jno
int
mov
and
jns
mov
je
jne
fcomi
into
jbe
popf
dec
fdivl
dec
add
mov
sub
xor
mov
scas
mov
xchg
cld
mov
xchg
dec
sbb
xchg
sub
inc
out
and
mov
pushf
test
ja
xchg
test
jecxz
loopne
xor
xor
jno
pop
movsl
dec
jae
scas
lcall
lcall
jbe
push
cmp
ret
add
movsb
loopne
ficomps
lods
lret
lds
loopne
mov
call
dec
jbe
inc
pushf
movsb
pop
and
in
fbld
mov
andb
cmp
add
mov
je
popa
ficoml
lock
dec
push
repnz
xchg
pop
in
jg
fdivs
and
push
sbb
or
mov
or
or
and
xor
sub
fs
out
icebp
mov
mov
add
sbb
out
sbb
les
lea
jo
jle
leave
dec
arpl
xor
mov
mov
je
movsb
cmp
cwtl
test
add
inc
cmp
cmp
add
adc
sarb
or
sbb
or
cmpb
std
fsubrl
loope
rcr
sti
test
mov
dec
fsub
arpl
jno
notb
mov
dec
or
dec
jge
int
into
mov
lock
sbbb
jp
pop
int3
adc
jo
push
fidivl
je
mov
lods
mov
pop
cs
arpl
ret
bound
ja
cli
jo
xorl
int
add
push
pop
inc
jns
je
roll
add
and
iret
lods
js
lret
cwtl
push
jle
lds
cs
in
nop
subl
jg
hlt
jle
xor
inc
inc
mov
icebp
fs
mov
jp
push
int3
cmp
insb
xor
xor
cmp
add
popa
xorl
into
rorl
add
inc
les
push
movsb
pushl
call
mov
stos
loop
cmp
cwtl
fiaddl
lock
and
push
cmp
pop
xor
add
or
arpl
ds
sbb
call
outsb
dec
call
das
adc
cmp
sbb
scas
and
add
lahf
and
push
fxsave
inc
mov
adc
push
outsb
fsubs
sahf
sub
shl
or
rcrl
pop
pop
mov
test
hlt
mov
aas
rclb
and
sahf
out
jp
inc
and
mov
pop
insb
stc
lea
mov
or
jno
fprem1
data16
clc
push
xchg
and
mov
insb
add
push
sbb
pop
or
icebp
adc
push
cmp
mov
in
or
aad
fldt
inc
ja
jmp
lock
fistl
pop
push
sub
cld
insl
and
pop
addb
mov
jmp
or
orl
adc
adc
push
or
pop
jnp
or
std
cmp
ss
out
test
ret
fadds
or
add
jle
and
iret
loop
gs
jl
repz
roll
shlb
xor
dec
pusha
scas
xor
cmp
sbb
cli
add
xor
aaa
dec
pop
pop
add
shlb
pop
loop
int3
aam
repz
mov
cmp
and
test
jle
or
push
cmp
push
insb
and
inc
sbb
mov
add
sub
daa
push
mov
mov
mov
andb
cmpsb
std
jmp
mov
sahf
and
ret
push
bound
leave
pushf
push
cs
je
addr16
push
xor
lahf
js
test
stos
cmp
inc
cli
scas
in
out
push
jo
in
inc
fiadds
sbb
jmp
js
mov
push
dec
sbb
pop
inc
stos
mov
mov
xchg
insb
add
mov
ret
shll
mov
aam
loop
cmp
bound
push
cmpb
fxch
push
jl
icebp
pop
jp
lock
xor
mov
adc
aad
in
sbb
clc
movsl
push
cmp
gs
test
adc
mov
shll
out
pop
add
mov
add
xchg
je
xor
in
lods
sbb
pop
ret
mov
imul
pushf
adc
out
push
popf
inc
push
ret
cld
and
je
and
sbb
mov
pop
clc
les
lock
sub
cltd
and
add
dec
and
fst
lods
adc
jne
jnp
jne
popl
enter
adc
fiadds
ret
xor
shrl
mov
add
mov
ficoms
adc
xor
std
mov
jbe
xor
cmp
shlb
scas
fsubl
sub
mov
adc
sar
les
aam
xchg
inc
sbb
jg
jp
sbb
sbbl
fnsave
push
imul
pop
pop
mov
das
in
sub
fs
sbb
addl
movsl
nop
pop
mov
ss
inc
insl
and
jae
and
out
sbb
rcrl
fstpl
jno
lods
xor
mov
mov
mov
fbld
outsb
outsl
push
cmp
or
adc
push
les
lret
xchg
mov
add
bound
sub
push
xor
push
mov
mov
jg
lahf
dec
and
mov
rcrl
subl
scas
adc
pop
and
sub
pop
lea
sub
xchg
stos
cmc
cmp
rclb
test
mov
sub
pop
shll
adc
lock
rcrl
ud1
sbb
imul
dec
dec
das
rorl
or
fists
stos
mov
test
xchg
and
push
rcrl
mul
add
xchg
les
je
mov
movups
mov
sbb
and
out
call
add
xchg
movsb
add
imul
xor
mov
mov
mov
test
fisubl
cld
mov
adc
ret
push
ja
mov
add
pop
mov
inc
jg
fbstp
xchg
insb
test
push
add
imul
je
mov
movsb
and
push
or
je
sbb
in
fistpl
scas
scas
xor
aam
fadds
and
lcall
test
mov
mov
loop
mov
jge
fnstsw
fstpt
mov
or
xor
cmp
outsl
popa
adc
pusha
sub
xor
popa
pop
push
dec
subb
bound
inc
inc
push
clc
das
push
dec
outsb
xchg
jo
cmp
xor
rcll
xchg
lret
addb
sbb
dec
add
in
adc
add
xlat
add
sub
das
push
dec
pop
enter
xor
or
mov
fwait
rorl
shrb
jne
or
or
push
faddl
stos
test
stc
in
add
scas
lods
mov
cmp
sub
jae
or
xchg
sbb
pop
inc
mov
loopne
add
or
mov
sub
pop
push
pop
das
mov
adc
jle
mov
out
ljmp
inc
lahf
imul
xlat
rclb
jmp
int
and
imul
dec
mov
pushl
xchg
inc
mov
mov
xlat
mov
adc
push
enter
lret
xor
sub
and
ss
mov
repnz
add
dec
sub
xchg
repz
cmp
jecxz
mov
mov
or
xchg
repz
mov
out
sub
test
sub
add
pop
jle
dec
mov
pop
and
or
mov
xlat
push
mov
jbe
sbb
int3
sbb
pop
pop
dec
xor
cmp
xor
xor
xchg
jg
mov
add
dec
out
or
xchg
test
sbb
mov
imul
push
mov
cmpsl
or
insl
mov
out
xor
mov
mov
fdivl
into
sbb
mov
pop
lock
or
outsl
ljmp
pop
pop
stos
mov
cld
iret
push
int
or
aaa
test
lock
xor
jnp
mov
add
push
decl
push
push
mov
mov
dec
xchg
ss
std
cmc
gs
ds
rcl
sub
jge
mov
or
sbb
or
pushf
outsl
push
mov
jb
add
pop
pop
cmc
in
cs
push
sub
and
dec
or
adc
mov
ret
adc
test
sub
shlb
out
mov
cmp
fisttps
jns
jle
inc
pop
lea
pop
push
clc
xor
mov
adc
sbb
fcomps
fldcw
adc
xchg
mov
ficomps
cli
fadds
sbb
inc
cmp
adc
insb
xor
loop
pop
dec
adcb
push
lea
daa
mov
outsl
mov
adc
movsb
mov
dec
xchg
xor
or
jl
repnz
cmp
cmp
daa
xchg
or
shrb
mov
lcall
loopne
sbb
cmpsb
sbb
test
arpl
jne
jno
jno
loope
adc
sbb
or
lds
mov
add
outsb
push
cltd
stos
inc
imull
inc
and
out
inc
sub
lret
dec
mov
ret
addl
in
add
xchg
jno
stc
add
loope
hlt
sbb
adc
mov
dec
mov
loope
mov
adc
insb
xor
pusha
mov
cmpsb
sahf
sbb
cli
ret
and
cli
jge
cld
xor
fdiv
and
sbb
daa
popa
fcoms
xchg
pushw
into
mov
repz
xor
inc
leave
outsb
imul
repz
sbb
ja
mov
fcompl
push
inc
cmp
pop
les
dec
repnz
or
cmp
xor
inc
jbe
loope
es
nop
fnclex
dec
dec
aaa
inc
push
loope
jo
mov
fidivs
clc
sbb
mov
dec
push
pop
jae
sbb
sahf
inc
xchg
xchg
add
inc
inc
inc
push
shll
xor
mov
or
push
add
mov
movsl
mov
adc
xor
adc
or
jmp
mov
movb
aad
cmc
mov
dec
jae
jbe
push
jl
jp
lret
and
lea
movsb
inc
sbb
js
js
jo
jne
push
jl
add
popa
pop
xor
and
cmpsl
mov
lret
mov
ljmp
es
cmpsb
icebp
xchg
repnz
stos
xchg
mov
mov
adc
inc
clc
mov
push
sbb
mov
pop
xor
aaa
inc
mov
and
mov
shll
adc
shlb
ljmp
adc
or
adc
outsl
je
shrb
orb
jl
test
jp
cmp
add
stc
push
jl
xor
js
pusha
inc
mov
add
mov
pop
push
push
xchg
loope
pop
and
incl
xor
xchg
insl
out
push
mov
mov
ds
stos
and
dec
call
sub
pop
rcrl
jle
das
dec
mov
inc
pop
sbb
fidivrl
mov
popa
popf
adc
movsl
inc
or
jg
xor
pop
out
push
xor
insb
mov
push
adc
cld
ljmp
mov
and
outsb
sti
dec
scas
test
sub
mov
xor
lret
rol
scas
cltd
jns
mov
insl
cmp
inc
sub
inc
jp
push
loop
call
outsb
mov
repz
pop
xchg
sub
jbe
or
adc
fwait
jg
jno
pop
hlt
sub
loope
and
mov
inc
lret
loope
lock
rorb
repnz
notl
xlat
repz
cmp
sbb
jb
je
ja
arpl
add
inc
dec
pop
xchg
xor
xchg
test
das
mov
push
leave
jl
inc
andb
hlt
add
xchg
pop
adc
push
into
mov
aam
inc
xchg
aam
orb
gs
jp
dec
cmp
imul
or
push
gs
rol
lret
mov
mov
jns
std
jmp
test
xchg
scas
shlb
jnp
jae
mov
loopne
jbe
or
mov
test
sarb
mov
mov
or
mov
dec
ljmp
mov
adc
aas
outsb
insb
jl
cwtl
lea
push
imul
sbb
daa
or
add
xchg
inc
cmc
mov
arpl
test
push
out
movsl
fildl
mov
mov
mov
je
sbb
sub
xor
addr16
in
push
mov
movsl
push
movsl
pushf
mov
xor
imul
mov
dec
popa
or
test
imul
xchg
xchg
insb
inc
cmp
sub
adc
mov
cmp
or
gs
stos
push
mov
and
fidivrs
shll
jbe
xor
dec
pusha
sti
scas
or
call
sub
mov
lcall
std
or
mov
xchg
outsl
xor
rol
push
cs
jg
mov
push
push
imul
sbb
mov
aam
daa
mov
stos
aas
adc
xor
push
mov
insb
movsl
xchg
test
jmp
and
push
insb
shlb
push
inc
rorl
or
nop
or
sbb
cs
mov
lea
add
add
inc
addr16
aas
scas
lock
sbbb
pop
call
movsl
jnp
jne
and
adc
lcall
ret
pop
and
xor
fmull
jmp
pop
stos
and
push
pusha
dec
out
movl
dec
lock
and
xchg
sub
push
xchg
jp
jo
mov
cli
adc
je
stos
insl
fistps
popa
test
cmc
and
scas
aaa
sub
pop
and
xchg
sub
cmp
pop
jns
mov
nop
insb
cltd
push
sbb
icebp
xchg
ret
jg
loope
or
pop
mov
xchg
adcb
push
sub
adc
lcall
add
push
push
pop
cwtl
mov
jmp
mov
add
push
insb
push
int3
imul
jne
sbb
dec
push
into
inc
test
aas
enter
out
pop
add
pop
push
jp
js
and
jle
add
lret
xchg
mov
icebp
sbb
fcmovb
mov
test
sti
ss
and
rol
ret
sbb
cwtl
cltd
mov
mov
pop
dec
aad
popa
sub
inc
sbb
pop
arpl
mov
in
inc
imul
and
hlt
pop
and
xchg
or
in
push
rorb
sti
out
adc
pop
xchg
xor
mov
inc
rorl
cmp
lock
bound
inc
push
mov
mov
aad
mov
jmp
push
ud1
pop
arpl
stos
data16
dec
jle
add
fisubl
int
jp
pop
adc
mov
and
pusha
cvttps2pi
fcoml
add
dec
pop
sub
inc
cld
inc
cmp
xorl
shrd
insb
and
mull
jae
push
inc
test
add
fildl
mov
ret
mov
mov
stos
stos
dec
mov
icebp
add
and
pop
sbb
aam
movb
jne
cli
cmp
dec
outsb
inc
out
test
ret
sub
loop
js
push
lods
sbb
jge
dec
orl
mov
pop
pusha
push
ljmp
fcoms
rorb
mov
scas
dec
sbb
nop
lea
push
push
xchg
dec
or
js
subl
ret
inc
dec
dec
out
aaa
fs
push
filds
sbb
mov
xor
mov
jbe
push
add
mov
std
xchg
adc
jo
test
push
push
outsl
bound
push
xchg
mov
pop
sarb
and
scas
iret
adc
cwtl
push
lea
and
xlat
popa
cmc
xor
in
sub
fwait
lcall
js
inc
in
lret
mov
push
sbb
mov
adc
dec
cmp
sub
cmp
jmp
lea
jmp
push
lods
push
andl
cmp
add
outsb
rclb
inc
int
xchg
sub
test
jo
lret
push
bound
lea
dec
mov
sub
imul
pop
pop
xchg
dec
adc
addr16
cli
xchg
out
ds
mov
sbbl
ss
mov
lock
sbb
pop
imul
andb
andb
jl
sub
mov
icebp
cmp
inc
push
aaa
or
outsb
cmpsb
pop
clc
inc
cmp
push
jp
pop
leave
fwait
cmp
jno
sbb
test
pop
bound
jle
fidivl
sbb
fstl
inc
lds
sub
fdiv
xchg
std
sub
cmp
mov
iret
pushf
jmp
loopne
cmpsb
addl
adc
mov
and
and
roll
add
jle
xor
je
push
sub
pop
test
adc
repnz
pinsrw
ret
fildll
test
xchg
mov
leave
jp
push
pop
cmp
push
lret
test
sub
aad
inc
sbb
cmp
in
xchg
dec
add
in
popl
xchg
and
test
pop
movsb
xchg
cmp
adcl
and
or
mov
or
push
jbe
sub
repz
daa
jo
inc
mov
pop
xor
inc
loop
shr
xor
sub
xor
aam
mov
sbb
add
mov
mov
adc
in
pop
pusha
xor
push
clc
sbbl
lods
jle
inc
cli
arpl
sub
out
adc
xchg
pop
sub
mov
add
lret
fistpl
aad
mov
xor
ret
sub
xchg
jmp
xor
ss
mov
cmpsb
sti
mov
loope
imul
cltd
push
repnz
sbb
imul
jg
jmp
faddl
fstpl
insb
jne
dec
movsl
or
xor
scas
pop
push
les
mov
js
inc
jl
pop
mov
xchg
inc
jae
fsubrs
jno
aam
mov
lods
mov
test
and
loop
imul
pop
dec
insb
icebp
xor
ret
sbbl
add
incl
decl
ror
lds
dec
repnz
mov
push
scas
shl
lcall
arpl
mov
sbb
or
inc
in
xor
loopne
fmull
mov
push
sub
jp
or
movsl
pop
fistpl
jle
xchg
jp
pop
adc
jecxz
sahf
mov
mov
rcrl
jp
aas
outsb
inc
lret
out
cs
mov
xchg
push
dec
jbe
insl
call
mov
cmp
inc
fmuls
insl
push
cmp
push
push
or
js
out
mov
mov
ljmp
add
daa
rcrb
jno
or
xchg
and
pop
outsb
mov
mov
jbe
sti
adc
inc
clc
sub
pusha
dec
xor
ret
dec
pop
aas
sarb
cmp
or
out
mov
sahf
pop
sarl
fidivs
push
jb
fnsave
adc
xor
mov
icebp
adc
ljmp
roll
mov
inc
jmp
dec
lock
movsb
pop
cmp
cmp
sub
out
jg
xor
and
dec
sbb
add
decl
ficoms
xorb
push
and
addl
cwtl
lea
pop
sbb
insb
xchg
pop
aam
jl
mov
sub
mov
pop
lds
pop
push
inc
imul
xchg
lods
mov
aas
mov
push
mov
lret
cmp
fildll
push
dec
daa
incb
mov
aas
popa
je
inc
adc
popa
fisubl
adc
inc
xor
adc
rcrb
test
add
dec
adc
cmc
ljmp
call
cmpsl
add
aas
popf
jmp
nop
push
out
dec
js
mov
push
fisubrl
aaa
dec
mov
mov
pop
inc
jp
lea
nop
mov
mov
dec
mov
aaa
test
inc
pop
dec
mov
pop
fcoml
add
stos
call
jg
imul
pusha
movsb
lcall
fwait
sub
sub
xchg
dec
daa
mov
aas
xorl
loop
adc
add
das
shl
iret
sub
inc
fdivrs
sbb
shll
fnstenv
mov
jge
cmp
sub
add
add
rcl
fidivrl
pop
or
mov
test
and
insl
leave
lock
clc
sub
dec
in
ret
dec
shlb
aam
sub
test
nop
lods
in
aaa
mov
imulb
inc
push
mov
pop
jge
dec
pop
dec
lock
lcall
outsl
aad
incl
cmp
push
stos
test
mov
add
mov
je
hlt
xchg
sbb
roll
add
inc
jbe
fisubrs
add
jp
repz
arpl
insb
clc
call
pusha
fadds
call
pop
inc
cs
cli
sbb
cmp
inc
add
push
and
mov
dec
movsl
mov
dec
data16
sarb
std
or
mov
lcall
and
loop
ror
push
lock
xor
cld
cmp
mov
fs
adc
push
cmc
pop
sbb
pop
fdivrl
js
mov
mov
adc
roll
je
jmp
in
sahf
cli
push
hlt
mov
mov
lods
fldcw
fmul
xor
add
push
mov
xchg
cld
adc
or
adc
lods
fs
ja
push
push
push
cmp
dec
jbe
and
cmp
repnz
pop
inc
or
push
mov
cli
or
lock
add
aas
shlb
movl
add
mov
pop
pop
rcl
or
and
fisubs
mov
cmc
mov
mov
jmp
xchg
fmulp
push
mov
ror
push
adc
pusha
jl
jo
jb
mov
dec
mov
dec
or
mov
sbb
mov
xchg
cltd
and
push
lods
pop
sbb
mov
aas
mov
icebp
mov
sbb
dec
or
push
cwtl
mov
cmpsb
mov
ds
or
fimull
pop
xchg
lods
jns,pt
lock
xor
add
jp
je
paddb
repnz
lds
rclb
inc
push
jmp
jbe
icebp
mov
out
sbb
rcrl
mov
dec
mov
push
stos
add
mov
pop
hlt
dec
mov
jno
rcll
scas
ret
jmp
loope
ds
xchg
inc
aas
and
cmc
test
jmp
or
ljmp
inc
mov
jbe
inc
dec
xor
xor
or
mov
sub
adc
or
or
xchg
or
push
and
ja
subl
cs
pusha
fisubrl
push
das
mov
fistps
inc
js
inc
jo
mov
outsb
lods
cmp
popf
xchg
mov
cmpb
scas
out
inc
and
push
jbe
negb
dec
or
ret
xor
test
adcb
inc
inc
loop
das
and
pop
pusha
sbb
rcl
sahf
std
stos
xchg
and
mov
lret
push
dec
or
lcall
sbb
test
sub
xorl
std
lods
push
push
repnz
inc
loopne
adc
or
call
subl
mov
jecxz
or
lds
fstps
aaa
push
sub
pusha
aam
inc
cmp
dec
imul
lret
ljmp
cmp
ret
cli
xor
xchg
and
jecxz
js
mov
rcrl
jle
push
sbb
addr16
inc
test
push
mov
and
inc
vpmaxub
dec
cmp
mov
rcrl
int3
cmp
sub
adc
out
mov
xor
adc
inc
repnz
xor
mov
mov
test
xlat
es
add
aas
loopne
pop
adc
adc
inc
lcall
outsb
jbe
andb
adc
ljmp
ds
fs
mov
or
bound
or
icebp
add
daa
lds
fsubrs
in
adc
xor
scas
sbb
xchg
cmp
sahf
iret
bswap
loopne
imul
jl
fistpl
je
inc
insb
pop
jmp
push
decl
xor
dec
inc
scas
pop
inc
lret
pmaxsw
cmp
ret
mov
gs
and
cmc
call
js
data16
imul
pop
aam
fsubs
xchg
pop
stos
sub
fs
fwait
loop
push
push
sti
loopne
loop
push
push
lcall
orb
sub
and
cmc
decl
idiv
pop
sbb
adc
shrb
add
aam
jle
jnp
sbb
shlb
adc
lahf
clc
dec
push
inc
adc
push
pop
movb
xor
ret
or
cmp
push
sbb
push
insl
push
daa
inc
jns
xor
or
lret
jl
aam
mov
jle
or
adc
repz
inc
or
sbb
mov
loop
fs
jg
cmpsb
ds
fbld
mov
pop
push
mov
fwait
aas
push
mov
shrl
mov
aas
and
add
and
int
add
addl
icebp
inc
insb
js
push
push
mov
sbb
mov
in
xorb
push
and
or
adc
and
das
ds
pop
mov
inc
xchg
decl
cli
iret
mov
xchg
and
jmp
xor
jnp
pop
loope
jl
cwtl
stos
loop
jo
sub
adcb
mov
jl
xchg
and
fimull
int3
nop
cwtl
or
dec
sub
scas
dec
lods
or
repz
js
pop
dec
mov
jo
add
aad
jg
mov
pop
or
pushl
loop
lods
push
mov
jb
call
pop
sbbb
in
loope
push
mov
mov
jae
mov
mov
xchg
es
adc
adc
mov
out
pusha
fisttpl
and
or
cmc
aad
das
and
repnz
lret
pop
push
xchg
lahf
js
orl
dec
dec
rorl
dec
mov
or
dec
or
inc
call
push
leave
adc
std
mov
cmp
xor
insb
xchg
or
fadd
lahf
pushf
js
gs
xchg
fnstenv
adc
sub
fs
aaa
jg
mov
xchg
add
xchg
add
testb
test
std
sbb
adc
adc
cmp
push
cmpsb
andb
or
push
jbe
popf
mov
insb
stos
cli
pop
jp
and
adc
sub
pusha
ja
pop
aam
xchg
add
jo
dec
jg
cmp
sub
adc
lods
fcmovne
mov
add
movsb
shrb
ljmp
push
enter
jbe
jmp
push
push
sbb
xchg
mov
sub
and
add
insl
ljmp
jmp
mov
lock
and
fists
cmpsb
iret
mov
pop
add
and
inc
sahf
loopne
shr
or
imul
xlat
cmp
js
inc
out
jne
shl
and
jge
xor
sub
sub
adc
incl
mov
in
daa
dec
jl
sbb
lahf
jbe
sti
sbb
mov
test
in
xor
ret
jns
cmp
jge
stos
xor
xchg
cli
cmp
sub
lock
xchg
cmpl
icebp
lea
xchg
push
xor
fs
outsb
lea
xchg
push
xor
dec
mov
rcrb
orb
inc
fbstp
pusha
inc
ffree
jge
jle
jae
xor
insb
mov
cltd
add
push
adc
gs
mov
xchg
inc
mov
jp
roll
repnz
popa
adc
imul
sub
jnp
adc
or
nop
scas
mov
les
aas
mov
inc
es
add
adcb
xchg
xor
lcall
loopne
dec
and
sub
inc
mov
out
jo
inc
xor
movsb
mov
jecxz
out
mov
inc
popa
mov
dec
incl
iret
call
aas
push
movb
je
xor
les
mov
stos
mov
mov
mov
clc
push
lock
dec
dec
xchg
or
inc
scas
cltd
shlb
cs
arpl
bound
and
roll
sub
add
xchg
sbb
jg
fcmovb
adc
pop
mov
mov
out
neg
fimull
or
mov
ret
xchg
mov
ret
push
test
lcall
scas
in
outsl
std
cli
mov
out
out
dec
dec
mov
clc
icebp
je
subl
pusha
sbb
dec
mov
push
and
cmpb
loop
faddl
mov
sub
ret
push
adc
push
lcall
fs
lahf
sbb
bound
les
popw
stos
out
xor
stos
in
ret
lret
pop
insb
add
lret
data16
mov
xor
cmpsb
popa
and
add
jb
push
je
fdiv
cmpsb
inc
movsl
mov
sub
addb
lds
stc
inc
push
push
cmp
les
sbb
js
mov
loop
mov
or
xchg
xchg
into
les
dec
sub
jmp
push
lcall
xlat
adcb
push
mov
push
rcll
and
xor
sub
mov
shrb
adc
fisubrl
mov
push
mov
daa
je
pusha
sbb
mov
push
pop
test
jl
daa
pusha
js
adc
dec
rorb
scas
mov
sbb
or
or
inc
jle
mov
test
ss
cmc
lahf
leave
push
icebp
cs
aad
in
imul
dec
fcomi
or
push
or
aam
xlat
fstpt
push
fdivs
or
jne
mov
rolb
clc
ret
xchg
pop
mov
outsb
or
popa
cltd
sti
js
push
sbb
pop
jecxz
in
push
jb
dec
sbb
push
pop
shrb
lret
sar
cs
jbe
test
jnp
rolb
pushf
mov
iret
pop
xchg
pop
pop
push
push
push
in
add
cmp
pop
add
lods
scas
and
mov
hlt
pop
call
jp
inc
mov
fdivs
fs
xchg
lods
repz
mov
sub
pop
or
into
push
clc
test
mov
mov
int
lock
in
adc
jnp
lods
stc
jno
xchg
mov
cld
cmp
nop
js
in
inc
fdivrl
loop
movsl
pop
pop
lods
addr16
pop
mov
outsl
and
hlt
add
icebp
add
sarl
cmp
lock
pop
or
out
xor
jl
adc
or
push
outsl
ret
clc
jg
sbb
cmc
xor
dec
sub
add
mov
in
dec
add
adc
mov
hlt
mov
pop
push
ljmp
jo
mov
rol
mov
into
push
pop
cwtl
xor
sar
mov
sub
dec
push
ss
mov
out
aad
lods
pop
and
dec
jg
rcrb
das
cmpb
sbb
lods
cmp
mov
mov
mov
push
ja
lea
xchg
push
mov
jo
sbbl
cld
or
rol
sbb
movsb
mov
imul
out
sbb
dec
mov
adc
push
inc
sbbl
and
loopne
push
das
fadds
popf
cli
or
lret
clc
popf
mov
outsl
imul
mov
call
sub
pop
cli
add
push
pop
fsubrp
ljmp
rolb
or
in
cwtl
inc
inc
sbb
sahf
testl
xor
sbb
jge
xchg
pop
les
out
dec
add
sbb
lea
adcb
inc
dec
add
push
arpl
scas
iret
push
inc
dec
jo
cmpsl
xor
mov
divl
push
mov
push
jge
mov
adc
adc
in
push
push
js
jg
inc
cmp
out
mov
add
mov
add
call
in
lds
add
and
add
push
pop
loop
push
loop
push
mov
idivl
je
jne
xlat
cmp
into
fsubrl
sarb
pusha
insl
and
mov
aam
clc
out
clc
mov
pusha
sub
inc
sub
test
push
out
mov
push
aaa
mov
adc
scas
scas
jo
sbb
add
addr16
lock
mov
int
mov
mov
mov
sbbb
xor
lcall
sub
sub
dec
sub
jb
mov
and
dec
shr
in
mov
adc
and
loopne
ds
cs
add
jg
push
outsl
aam
xor
mov
pusha
sbb
inc
or
fildll
push
loop
loopne
sub
or
xchg
push
vpmacsdd
mov
adc
cmc
bound
or
rolb
push
dec
sbb
lret
sbb
jbe
jecxz
mov
xor
mov
in
xchg
pop
pop
inc
cmp
inc
mov
push
cli
push
push
notb
leave
arpl
inc
les
fldenv
pop
or
out
pop
sub
nop
mov
inc
mov
cmpsb
mov
mov
test
or
cmp
xor
xor
mov
je
or
test
shlb
mov
fbstp
fcoms
inc
xchg
test
dec
or
push
shll
pop
add
enter
adc
jle
mull
mov
dec
dec
fdivs
push
stos
xor
mov
cmp
jmp
out
testl
push
jge
xor
inc
hlt
jmp
test
mov
shlb
popa
vcmpsd
popa
loope
testb
xlat
pop
out
mov
pushf
sub
pop
sub
add
jae
fs
push
mulb
aam
stos
mov
pop
jmp
sub
movsb
loop
es
lds
nop
mov
and
xor
inc
dec
mov
mov
aas
addr16
dec
test
push
dec
sub
sub
xor
sub
icebp
mov
lods
xchg
add
mov
add
and
adc
sti
sub
subb
outsl
sbb
sbb
imul
adc
js
insl
test
test
rcr
xchg
pop
sbb
decl
rolb
mov
mov
pop
rolb
adc
and
sti
add
mov
jo
idivb
mov
aas
inc
xor
outsb
mov
push
cmc
insl
iret
mov
xchg
shl
fcoms
call
outsb
ret
hlt
adc
push
jno
mov
sbb
inc
test
add
sub
mov
and
adc
add
loope
cmp
int3
add
or
clc
out
xchg
mov
mov
jne
loope
call
cltd
inc
enter
push
dec
xor
pusha
mov
cli
sbb
in
test
or
mov
vmread
push
or
pop
rolb
push
xor
sbb
adc
sub
dec
push
test
loope
repz
dec
and
clc
sbb
lods
mov
lock
jbe
sbb
add
sub
mov
dec
mov
or
testb
lods
adc
dec
testb
xorb
je
in
and
mov
dec
stos
sbb
sbb
sub
dec
mov
sub
mov
in
fsts
push
arpl
xchg
adc
cmpsl
xor
dec
loop
je
sbbb
push
push
xchg
ret
mov
add
loop
xchg
mov
jg
cmp
test
or
xchg
adc
adc
aam
add
mov
jp
mov
bound
mov
je
ret
inc
shl
mov
mov
fdivrs
test
push
inc
les
enter
in
in
ljmp
out
enter
roll
insb
cmpsb
insl
pop
dec
push
jae
les
push
insl
xor
test
imul
sub
gs
es
outsb
fists
mov
jg
mov
xchg
xchg
push
pop
lock
pop
cmp
mov
or
dec
mov
mulb
and
xchg
add
adc
sub
fsubrl
adcb
or
xor
jp
cmp
mov
int
pop
push
loope
add
sarb
dec
inc
fsubrs
xor
adc
add
add
cmp
jne
add
in
pop
pushf
ret
loopne
clc
inc
push
js
lcall
mov
push
mov
stc
shrl
shl
cmp
mov
movsl
js
xor
xchg
push
in
and
xor
arpl
mov
mov
pop
push
jne
xor
push
icebp
jl
les
push
nop
xchg
sbb
push
test
daa
cmpsb
add
adc
pop
pop
sbb
pushl
or
leave
add
popa
and
push
jle
dec
sti
add
sub
mov
and
ja
ja
aaa
sti
mov
into
sbb
push
idivb
mov
or
inc
mov
adc
or
and
pop
loop
lock
sbb
mov
cmp
lea
repnz
pushf
xor
push
rolb
mov
and
insl
pop
or
mov
cmpb
inc
rclb
mov
fbstp
xchg
js
ss
rolb
xchg
test
movsl
aad
pop
icebp
leave
adc
dec
push
and
lcall
mov
cmp
es
pushf
cwtl
push
es
jmp
outsl
adc
fnstenv
loope
or
stos
inc
mov
cmc
sub
add
inc
js
xor
push
adc
cmpsb
shrb
cmp
fmuls
add
aad
roll
xor
and
andl
xchg
sti
lahf
push
pop
push
orl
rcl
rcl
adc
cmp
xor
sub
mov
adc
push
mov
sbb
cmp
test
pop
shlb
adc
sarl
fwait
mov
rcrb
cmp
jecxz
lret
push
cmp
dec
jno
shlb
out
les
lock
in
cmp
in
movsl
data16
add
sub
bound
pop
pop
or
pop
push
loopne
je
xor
std
ret
adc
ror
jno
inc
call
xchg
fildll
sbb
adc
sub
xlat
sub
add
mov
jae
sub
add
or
or
sub
stos
dec
inc
bound
mov
add
aaa
dec
ret
inc
test
ljmp
or
push
push
push
or
xchg
and
rcll
jb
loopne
cld
test
pop
dec
pop
fnstsw
pop
stc
push
adc
insb
push
pop
shll
fcoms
ss
xchg
xlat
out
jb
adc
xor
les
inc
mov
push
mov
push
daa
lcall
cmp
enter
push
dec
pop
loope
cli
imul
imul
and
pusha
xchg
jle
mov
in
mov
jl
mov
or
popf
lcall
mov
mov
call
stos
call
ret
mov
outsb
shlb
icebp
mov
inc
jecxz
mov
fldenv
fdivrs
xor
sahf
cmp
push
mov
sahf
xchg
mov
divb
arpl
push
data16
adc
ds
or
inc
mov
dec
mov
mov
mov
jl
cld
inc
sbb
aad
jns
adc
xor
inc
pusha
mov
xor
adc
dec
out
in
xchg
movsb
or
rcr
cld
adc
mov
mov
andl
mov
js
mov
or
adc
inc
add
orb
pop
ja
icebp
and
aam
jp
xchg
loope
inc
lds
sub
insb
sbb
call
mov
dec
push
dec
xlat
mov
outsb
and
add
lcall
aaa
xor
or
inc
and
shrl
pop
add
pop
mov
jmp
xchg
call
call
mov
lods
add
js
mov
xchg
enter
jl
pop
mov
je
aad
cltd
out
jmp
mov
ret
test
mov
data16
push
pop
adc
cli
pop
mov
ret
push
sarb
xor
add
xor
or
pop
lods
jne
arpl
and
sbb
xchg
das
adc
jle
push
inc
mov
mov
int3
out
into
xor
lods
mov
push
mov
fwait
orb
xchg
insb
or
inc
cmpsl
xor
mov
push
jg
jmp
rcrb
cmp
negb
jno
dec
test
mov
sti
nop
lcall
ja
jg
sbb
cmp
or
xchg
dec
popa
gs
sbb
and
insb
adc
pop
les
xor
jl
mov
imul
test
out
add
and
push
add
add
fsub
sbb
push
jl
pop
cli
scas
icebp
js
divl
push
dec
std
cwtl
jmp
or
mov
je
sub
hlt
addr16
mov
lret
fdivrs
test
incl
in
inc
sahf
les
jp
dec
adc
pop
dec
icebp
subb
les
outsl
out
test
ljmp
mov
jbe
hlt
aas
xchg
call
mov
jl
and
xor
pop
in
jo
cmp
jo
inc
and
out
mov
in
push
fwait
and
mov
pop
or
xlat
dec
mov
push
fs
push
dec
adc
pop
fisubrs
lahf
jle
movups
mov
aam
push
push
shrb
clc
iret
and
dec
enter
scas
ret
or
sti
xchg
push
cwtl
xchg
inc
inc
insb
or
cmc
inc
div
sbb
xor
jmp
cmpsb
fidivrl
mov
hlt
cmpsb
in
xor
stos
push
adc
test
sbb
and
cs
into
jo
mov
push
lds
mov
jo
jecxz
dec
cwtl
xchg
mov
testb
pop
mov
loop,pn
movsb
sub
push
and
orl
pop
aas
and
mov
add
js
or
rcll
cltd
adc
mulb
shlb
fs
leave
push
pop
dec
ss
xorl
mov
in
in
sub
jge
fs
or
sbb
aaa
adc
pop
pop
mov
mov
cwtl
or
jb
je
negb
jge
jae
icebp
adc
xor
add
aam
ljmp
loope
data16
and
jne
sub
inc
sbb
sub
enter
imulb
addr16
inc
adcb
fwait
or
mov
clc
inc
cs
insb
js
orl
pop
fdivl
shrb
dec
test
jmp
mov
ljmp
in
ljmp
cmpsb
mov
cmp
data16
test
or
xor
mov
mov
out
adc
pop
mov
sarl
jecxz,pn
or
and
pusha
cmp
or
jbe
and
push
mov
shl
ficomps
mov
inc
bound
addl
push
mov
jl
arpl
or
ds
mov
mov
add
pop
cmp
sub
call
dec
int3
mov
pop
fldl
arpl
loop
fstps
xor
scas
cmp
mov
cltd
pop
inc
mov
fistl
pop
testl
inc
mov
push
es
inc
add
cmp
test
aaa
mov
xchg
add
jecxz
fmull
push
sub
gs
loop
push
mov
movl
mov
addl
add
loope
daa
mov
sarb
cmp
out
mov
xor
xlat
lea
mov
push
add
lret
cmp
push
mov
lods
fwait
les
sbbb
lcall
into
jp
out
sysret
or
enter
das
push
les
jno
mov
mov
fmull
ds
scas
clc
or
and
lods
jbe
stos
sub
or
inc
dec
mov
sbb
rolb
les
es
cmpsb
jecxz
dec
mov
lock
inc
adc
fdivrl
mov
pop
shl
dec
push
sbb
mov
mov
jo
cmpsb
or
das
mov
fcmovb
xchg
or
xor
or
xchg
push
mov
test
scas
popa
dec
mov
add
add
sti
push
pop
add
mov
nop
pop
or
pop
inc
xor
jge
sbb
arpl
add
adcl
adc
mov
or
push
ljmp
insb
xchg
pop
stos
xor
cmp
ds
lock
sub
rcr
sbb
dec
mov
and
inc
aad
mov
mov
adc
mov
jl
pop
call
aam
and
jge
shrb
pop
lock
mov
mov
mov
pop
sub
add
mov
add
test
lock
loopne
cltd
jge
aam
mov
popf
loop
cmp
add
mov
mov
xchg
mov
dec
xchg
jp
xor
sbb
dec
in
ljmp
xor
cli
push
push
je
xchg
add
mov
xchg
sbbb
mov
call
aas
and
jne
cmp
jp
gs
push
add
into
mov
into
xchg
adc
in
addl
stos
cs
lea
xor
mov
xor
mov
in
les
fidivrs
es
loop
push
je
inc
rcr
fiaddl
xchg
adc
inc
sub
inc
add
pop
sbb
xor
and
testb
push
cmp
inc
xor
clc
outsb
mov
jne
push
xchg
push
fdiv
or
loop
and
pop
pop
rol
lea
xchg
dec
and
inc
je
mov
jl
dec
aas
add
rolb
sub
jge
pop
sub
lret
shr
lock
add
xorb
add
jp
jge
dec
mov
rolb
das
sbb
out
mov
or
lock
mov
cmp
shll
adc
gs
out
aam
push
or
cs
xchg
push
inc
adc
lock
sub
fistps
mov
jo
ds
xchg
mov
shlb
mov
fisubs
push
and
push
push
adc
cmp
adc
inc
data16
lods
sahf
fisttps
mov
xor
mov
fidivrl
gs
out
push
jge
sbb
es
dec
popf
add
imul
xchg
xchg
jnp
pusha
arpl
or
divb
dec
out
push
xchg
hlt
repz
cmp
sbb
rolb
hlt
dec
lret
sti
dec
pop
sahf
into
and
jno
ret
test
repz
jge
ss
push
fwait
ljmp
jno
inc
js
adc
mov
mov
cmp
out
and
inc
aas
pusha
fcmovne
roll
sbb
cmpb
insb
sbb
pop
fs
push
ljmp
mov
movsl
negb
movl
loopne
out
mov
pop
push
popf
sub
or
mov
sbb
add
mov
movl
or
sarl
xchg
ret
outsb
add
hlt
mov
pop
popf
leave
push
mov
push
das
test
ds
pop
inc
dec
and
aad
pusha
ljmp
cwtl
pop
push
xor
loopne
jge
ja
mov
or
sarl
xchg
and
arpl
inc
jmp
fwait
jge
out
adc
arpl
xor
cmp
dec
push
mov
lcall
or
sbb
lahf
xor
movsl
sbb
inc
sbb
add
mov
movsb
mov
lods
xchg
push
dec
lahf
popf
std
call
movsl
scas
fnstcw
jge
xchg
test
mov
test
pop
mov
js
and
insl
pusha
xchg
xchg
pop
push
mov
sub
pop
lret
std
xchg
mov
mov
pop
xchg
fadds
sbb
xchg
add
push
aad
aaa
fmuls
push
cmp
jo
repz
loop
repnz
xchg
xor
pop
inc
mov
addl
inc
lods
insb
jle
subl
xor
adc
gs
push
clc
fwait
cmpsb
and
sbb
xchg
and
aaa
add
mov
jo
mov
insl
push
mov
cli
stos
lds
sbb
adc
jecxz
xor
aad
int
xor
hlt
mov
mov
or
and
ss
pop
inc
imul
xlat
add
test
or
cmpsb
and
loopne
test
sarl
xchg
push
pop
sbb
leave
adc
loope
inc
adc
ret
xlat
out
mov
das
pop
inc
and
icebp
int
inc
pop
bound
cli
pushf
adc
sub
test
mov
rcll
cmp
push
insb
lock
jo
xrelease
add
xor
mov
sub
pop
mov
jg
mov
or
xor
das
sbb
pop
ss
mov
inc
roll
dec
cmp
mov
scas
jb
xor
stos
in
fiaddl
outsl
jp
and
mov
dec
push
pop
int3
mov
and
add
dec
ss
loope
push
push
mov
je
imull
shlb
pop
lods
pop
xchg
movsb
push
aam
cmc
lds
js
test
arpl
stos
mov
lcall
faddl
outsl
pop
and
pop
std
fs
sub
sub
sub
push
xchg
aam
and
jne
std
jbe
xor
fst
rcrl
pop
xor
sti
adc
inc
test
lods
xchg
dec
call
jmp
xchg
stc
clc
adcb
adc
pop
xor
fistps
xchg
mov
sbb
xchg
fnstcw
in
dec
out
xor
ret
pushf
jne
lea
pop
sbb
andb
outsl
jg
js
lods
adc
push
repz
subb
cmpsb
add
movsl
ljmp
mov
dec
adc
or
lcall
in
imul
and
js
mov
push
pusha
cmp
mov
push
jle
iret
lcall
xchg
rcrb
repz
inc
outsl
jle
clc
and
mov
pop
sbb
out
add
sbb
insl
shrb
outsl
adc
fdivrl
add
notb
daa
add
in
fimull
in
add
cmpsl
and
gs
xchg
scas
je
daa
in
xorl
xor
incb
fcomi
ljmp
out
popa
loopne
jne
call
pop
xorl
aam
test
scas
hlt
adc
out
mov
cmp
push
aas
cld
push
jo
jge
je
mov
aas
pop
rorb
movsb
adc
adc
cmp
dec
adc
xorb
push
push
clc
test
nop
lret
stos
lahf
and
subb
mov
push
dec
rolb
icebp
stos
jl
dec
mov
fwait
call
leave
gs
or
addb
lods
dec
loop
jae
mov
pop
push
cli
cmp
mov
in
xchg
bound
je
test
lods
hlt
jmp
adc
movsl
jo
sarb
loop
dec
mov
mov
jp
jae
jnp
aas
adc
push
sbb
mov
mov
xor
dec
fisttpll
adc
or
jl
inc
xchg
or
ljmp
rorb
pop
mov
pop
rcl
cmp
jnp
mov
idiv
jp
sub
adc
orb
shll
sub
adc
mov
scas
repz
ds
sub
push
inc
jnp
sub
pop
cld
xchg
insl
loope
cmp
imul
mov
fnsave
push
pushf
push
fiadds
and
addb
aam
test
xchg
out
push
cmpsb
xchg
inc
out
adc
addr16
and
lods
stos
into
mov
test
mov
push
bound
unpckhps
dec
pop
ret
dec
inc
rcll
cmp
push
insb
shrl
hlt
ret
mov
jb
mov
mov
mov
clc
dec
insl
mov
rorl
orl
and
adc
test
sbb
js
dec
arpl
mov
insb
sti
mov
cmp
fwait
test
cmpb
or
add
cmpsb
pop
imul
fisubrs
sbb
insb
dec
mov
or
sbb
arpl
or
pop
push
fists
add
inc
xchg
pop
adcl
push
popa
sbb
xchg
mov
mov
mov
arpl
repnz
xchg
xorb
mov
or
sbb
in
fbld
adc
stos
jmp
sub
jecxz
and
push
jnp
cmp
xor
cld
fistl
xchg
fwait
les
sar
cld
lahf
inc
popf
inc
sub
ss
add
test
pusha
xor
cld
push
int
shrl
icebp
clc
and
mov
mov
xor
cmpb
adc
cmpsl
shll
test
add
mov
mov
pop
mov
cs
mov
cmp
inc
rol
bswap
insb
aam
or
pop
lahf
lea
jp
and
call
in
push
lock
xor
lock
jg
jmp
mov
mov
mov
mov
scas
xor
and
test
mov
and
into
pop
mov
mov
add
xor
out
dec
test
add
fs
out
and
or
and
dec
inc
adc
inc
test
outsl
dec
or
loopne
in
cwtl
ror
jp
jge
cmp
lcall
dec
jno
mov
mov
popa
nop
add
pop
mov
mov
dec
loop
aam
neg
xor
sbb
cmp
sbb
daa
mov
aas
push
cmc
in
adc
add
cmpsb
loope
out
and
or
icebp
rcl
xor
mov
fst
jae
bound
movsb
das
mov
jecxz
je
mov
lods
jle
and
sti
xchg
adcl
sbb
pop
mov
aam
mov
ret
fbstp
dec
lea
stos
mov
push
fimuls
scas
mov
or
fwait
packssdw
cmc
daa
or
xlat
adc
mov
adc
mov
xchg
out
daa
or
scas
hlt
inc
test
cmp
stos
adc
aaa
jle
sbb
inc
mov
movsl
sbb
shlb
push
sub
imul
movb
mov
xchg
jg
je
jmp
lret
xor
scas
push
push
shrb
loopne
inc
jle
test
incl
data16
ja
js
mov
outsb
incl
jne
scas
fsubrp
or
push
test
call
dec
sbb
pop
fmull
xlat
ljmp
mov
mov
dec
jns
les
xchg
inc
cmpsb
jo
xchg
aas
mov
inc
mov
shlb
in
dec
cmc
mov
push
cmpl
push
push
loopne
sub
adc
push
mov
test
push
or
cli
cmp
mov
js
sub
loop
inc
inc
adcl
sub
ljmp
fwait
inc
jne
mov
cld
setle
int
clc
push
lods
mov
mov
fmuls
xlat
stos
mov
lods
or
cs
mov
sbb
mov
sarb
je
jle
lret
fcmovu
mov
lcall
rcr
in
sbb
sti
orl
les
xchg
and
leave
sbbb
add
or
pop
in
sbb
mov
jle
xor
pop
decb
std
daa
cmc
cli
jns
stos
ret
mov
fmuls
mov
mov
aas
cltd
pusha
arpl
mov
mov
push
test
push
mov
loop
push
shrb
xor
movsb
pop
jg
pop
or
mov
sbb
and
or
loop
push
sub
sub
inc
clc
movsl
movsb
in
dec
pop
jle
and
add
mov
inc
push
mov
popa
lds
push
cs
aas
hlt
inc
mov
cmp
rcrl
ret
xchg
clc
pop
jnp
dec
daa
je
add
hlt
popa
test
inc
mov
pop
fsubrs
pop
stc
push
in
inc
int3
in
pop
cmpsb
pusha
jnp
push
insb
inc
sub
add
add
and
ljmp
ret
fcomps
inc
push
adc
icebp
into
pop
xchg
mov
xchg
push
out
adc
loop
insb
lcall
pop
scas
push
nop
ljmp
mov
outsb
lcall
adc
and
out
mov
cmp
jne
cmp
shrb
out
out
push
orps
out
push
adc
dec
adc
sub
clc
xchg
or
mov
lret
pusha
fs
test
xchg
xor
mov
pusha
xchg
mov
hlt
lcall
push
aad
jge
sbb
out
ja
movsb
popa
add
pop
inc
jo
inc
shll
sbb
cld
cs
jae
sub
jae
lea
js
and
mov
cmc
mov
sub
fs
mov
bound
dec
adc
adc
pop
mov
mov
xchg
jle
cmp
in
icebp
sbb
jo
pop
pop
data16
xchg
adc
clc
fcomp
sar
xor
stos
mov
cs
and
cmp
loop
push
scas
test
adc
out
add
dec
jne
lret
add
imul
or
fwait
sbbl
mov
add
pop
icebp
and
int
inc
xchg
sub
ret
negb
enter
add
repnz
testb
cld
push
sbb
inc
hlt
dec
call
push
jbe
mov
testb
push
lcall
jle
mov
jge
push
fidivrs
adc
xor
ss
xchg
inc
pop
mov
into
xchg
cmc
or
mov
outsl
mov
cmp
icebp
add
rcll
call
lds
push
mov
jnp
sub
and
inc
incl
dec
ljmp
stc
inc
xchg
inc
loop
aas
sub
je
pop
adc
dec
cmpsl
and
push
aas
divb
sub
das
cs
lock
xorb
insb
and
scas
add
push
movsb
mov
negl
xchg
insb
push
mov
mov
int3
dec
cmp
and
out
stos
scas
test
jno
jbe
int
adcb
or
scas
cmp
mov
jle
dec
cmpsl
adc
adc
jp
lahf
mov
test
stos
fdivrp
inc
fsubs
filds
cmp
lret
jp
pop
fcomp
xchg
or
jle
pusha
test
les
js
jl
into
inc
xchg
mov
outsl
jg
es
jne
or
add
jge
jecxz
in
add
inc
js
icebp
add
call
dec
sti
adc
inc
push
clc
mov
mov
test
lcall
cwtl
adc
jb
lret
push
mov
test
or
cli
adc
mov
arpl
dec
mov
sarb
rcrl
inc
subl
mov
ljmp
mov
hlt
aas
aam
inc
pop
add
in
aam
loope
mov
sbb
adc
nop
lret
outsl
and
stos
ja
pop
iret
lods
mov
sbb
or
jno
ss
daa
insl
sbb
or
outsl
jns
and
sbb
push
mov
lcall
call
inc
xor
int
cld
rcl
mov
popl
or
cmp
aas
push
fidivs
shlb
bound
or
add
and
jnp
sbb
call
loope
andl
xor
dec
mov
jo
lock
int3
sub
push
pop
mov
mov
movsb
cmpb
adc
inc
sub
mov
aad
shrb
in
pop
inc
ljmp
out
std
lods
test
data16
lret
lahf
clc
fcmovb
xsha256
cmpsb
push
xchg
dec
and
cmp
push
mov
dec
pop
push
loopne
inc
mov
xor
test
push
fcomi
inc
rorb
fs
out
ror
iret
jg
out
ljmp
push
pop
out
mov
mov
ljmp
mov
add
mov
or
repnz
dec
push
mov
mov
retw
mov
add
ljmp
cmovl
push
testb
push
cmp
loope
lock
nop
push
stos
mov
shrl
inc
imul
add
les
adc
adc
addl
ss
ds
mov
push
movsb
mov
iret
dec
in
sbb
xchg
sub
adc
xchg
out
mov
mov
pop
cmp
lahf
dec
push
fcoml
out
mov
insb
push
cmp
sbb
pusha
pop
adc
call
andb
shlb
jo
pusha
outsl
xchg
mov
mov
and
mov
jecxz
xorb
or
test
push
mov
or
cld
and
js
inc
lock
test
xorl
movsb
dec
and
jmp
out
cmp
aas
decl
add
mov
clc
push
rorl
fwait
inc
push
sbb
jmp
ret
mov
ljmp
add
shlb
subb
pop
sub
or
fstl
loop
hlt
cwtl
mov
decl
dec
insb
ret
add
int
aad
mov
sub
inc
sub
pop
sbb
push
hlt
sub
xchg
and
or
xor
fdivrp
out
sbb
test
mov
rcr
inc
cld
mov
mov
test
std
push
push
aam
sbb
sub
outsb
stc
adc
mov
mov
stc
imul
loope
pop
xor
or
xchg
gs
sbb
and
lret
or
pushf
or
mov
stos
cs
or
ss
sub
adc
jle
movl
rcr
mov
xchg
mov
leave
orb
and
test
mov
or
les
mov
mov
rcl
adc
cmpsb
sbb
insl
xchg
pop
test
push
in
xchg
push
jle
fs
js
loope
or
test
andl
mov
ficoml
andb
in
cmp
adc
fidivrs
mov
call
push
jb
xor
lret
popa
add
fistl
push
ljmp
and
aam
pushf
dec
push
loop
mov
mov
xchg
bound
lcall
add
jg
dec
cwtl
cmp
iret
fwait
xchg
or
sbb
cmp
mov
cs
cmp
or
or
testb
jbe
das
pop
mov
mov
aam
xor
std
xchg
repz
jl
js
adc
add
dec
mov
in
sahf
sbb
aaa
cmp
push
and
cmp
movsl
fadd
testl
jnp
cmc
test
mov
scas
xlat
inc
cld
pushf
loope
pop
ss
jno
add
sbb
push
adc
movsb
sub
push
dec
mov
pop
shrb
push
cmpsl
xchg
loopne
ret
rclb
sbb
push
adc
add
sbb
jl
lea
cs
icebp
popf
adc
pop
insb
sbb
mov
pop
xor
dec
pop
mov
mov
mov
lea
pop
or
cli
insb
repz
fdivr
andnps
movsl
push
inc
insb
push
out
push
push
sub
ss
insl
mov
sub
cmp
mov
insb
jns
mov
mov
and
mov
pop
jecxz
jp
inc
out
cwtl
and
aaa
sub
ds
test
das
push
hlt
nop
inc
fcom
inc
xchg
clc
outsl
adc
lcall
or
push
push
loop
ss
add
dec
sub
into
jbe
bound
adc
jbe
inc
je
std
hlt
aam
xorb
or
sub
das
pop
jo
sarb
jecxz
xor
add
push
fwait
cmp
iret
fdiv
xor
lods
pop
push
add
and
hlt
xchg
pop
mov
mov
inc
dec
push
xchg
repnz
and
add
sti
or
adc
dec
sbb
push
and
push
inc
aaa
mov
dec
leave
mov
fnstcw
aad
loope
mov
inc
into
mov
and
mov
add
jne
flds
mov
or
ljmp
enter
in
push
adc
ljmp
fwait
out
cli
mov
movb
cld
je
cwtl
lds
pusha
adc
push
pop
cmovl
cmpsb
xchg
jecxz
stc
mov
cmc
push
hlt
shrb
ret
ds
push
mov
les
jbe
popa
sarl
adc
outsl
jo
adc
lret
sbb
scas
mov
insb
jb
xchg
pop
pop
in
sbb
mov
stos
pop
jl
pop
adc
jb
dec
loop
dec
call
adc
jmp
push
inc
inc
fsubrl
repnz
inc
mov
inc
out
jne
lock
negb
and
leave
or
cmp
push
push
xchg
pop
ljmp
sub
movsl
push
sti
lock
add
ds
and
jo
iret
sahf
lcall
cmp
cmpsb
sbb
or
mov
inc
mov
scas
add
push
js
and
loopne
data16
xor
or
dec
adc
enter
pop
mov
int
es
rcrl
add
jg
ds
add
push
sub
loop
xor
adc
ds
xchg
and
pop
adc
loop
imull
cmpsb
pushf
sbbl
mov
sub
mov
adc
popa
aas
jb
lods
or
push
rclb
push
test
mov
or
xor
dec
adc
push
cwtl
fwait
dec
cmpsl
out
popa
fdivl
xor
test
jne
push
ss
cmc
inc
lds
and
cmc
adc
mov
div
mov
adc
add
jp
fcomi
enter
mov
mov
fdivrp
mov
inc
sbb
mov
sarb
jb
ret
stc
cld
sbb
call
and
or
xor
jb
add
popf
xor
imul
out
roll
pop
sbb
cmp
loope
js
pop
test
add
sbb
add
clc
xchg
out
xor
dec
and
movb
mov
jl
dec
dec
adc
adc
dec
mov
lahf
rorl
xor
jp
test
jnp
adc
mov
sub
cmp
rolb
adc
in
test
add
and
xor
mov
pop
std
andb
pop
xor
cmpsb
add
xchg
xor
push
or
test
data16
or
push
sub
repnz
ss
call
mov
cmc
rcl
mov
inc
pop
xchg
mov
pop
out
icebp
push
in
lret
pop
sub
xlat
pop
mov
xor
and
icebp
test
add
sub
bound
jge
cli
sbb
add
test
xorl
mov
loope
stc
ficoml
loopne
inc
cmp
inc
lahf
push
add
cmp
dec
sbb
or
mov
mov
popa
add
popa
mov
negl
push
insb
pusha
pop
test
mov
shll
cs
test
mov
into
inc
xorb
push
sbb
pop
pop
jge
lcall
inc
jge
and
inc
sbb
xchg
das
fsubs
dec
mov
std
add
shlb
cmp
or
sbb
ret
in
les
adcl
std
mov
test
cmpsl
and
das
mov
stos
daa
push
push
outsl
or
cmp
ljmp
leave
sub
add
adc
lea
mov
adc
or
pusha
dec
xor
addr16
push
sbb
ljmp
sbbb
pop
in
call
insl
sbb
mov
push
xor
sbb
jp
ret
add
push
dec
sbb
inc
out
scas
xchg
ret
aaa
sbb
add
fcoms
icebp
test
sub
iret
into
in
outsb
das
mov
mov
inc
bswap
push
fwait
inc
decl
cli
into
in
mov
push
aam
ss
mov
push
pop
xorl
add
adc
lcall
insl
repnz
inc
js
xor
or
mov
xchg
mov
je
out
or
loope
inc
cwtl
aam
dec
inc
test
lcall
roll
enter
mov
pop
loope
push
fisttpl
adc
add
push
es
jp
sub
andl
lret
jo
xor
cmp
mov
jo
pop
loop
data16
or
mov
xchg
test
int3
sahf
rcrl
fwait
test
dec
adc
dec
shrb
mov
lahf
mov
sbb
movsl
xchg
jg
sbb
mov
xchg
mov
mov
repz
lods
jo
ret
fsub
mov
sbb
shlb
mov
rolb
pop
xor
inc
addl
lock
inc
mov
cmpsb
cmc
into
test
pop
xlat
subb
roll
cmp
mov
mov
clc
sbb
cmp
inc
lcall
dec
and
je
lea
and
sbb
xor
ret
or
fnstcw
cmp
aas
es
and
inc
jb
enter
icebp
push
add
and
std
and
icebp
andl
fiaddl
fsubs
pop
ljmp
dec
insb
clc
or
cli
lods
mov
jo
movl
imul
adc
mov
sbb
test
mov
sbb
hlt
xlat
nop
loope
mov
mov
in
loope
aad
push
lcall
sub
hlt
adc
roll
pop
cld
xchg
add
lea
rcrb
jne
push
sub
sbb
loopne
adc
rcrb
jl
sub
add
mov
insb
or
lds
pop
jg
pushf
dec
sbb
out
xchg
lret
xor
int
addr16
aas
mov
mov
loope
pusha
cmove
faddl
stos
and
jg
les
dec
inc
push
mov
and
loopne
xchg
mov
inc
jbe
insl
fisttpl
inc
adc
leave
test
pop
or
push
xor
mov
or
mov
sbb
ljmp
lret
call
inc
es
pop
mov
cli
or
shrb
rcrl
das
rorb
inc
jb
dec
hlt
mov
in
jo
rcrl
scas
inc
push
lock
push
add
add
push
sub
jge
cmp
jge
ljmp
lret
add
ret
or
mov
arpl
push
loop
mov
mov
xchg
and
xor
test
inc
push
int3
and
dec
inc
shl
mov
mov
ficomps
ss
add
push
add
out
inc
push
jnp
sbb
jp
sub
push
cmp
rol
movsb
pushf
add
rorb
jno
stos
pop
leave
ret
ret
adc
mov
or
sahf
and
sub
fsubl
and
or
lret
jmp
xor
or
inc
push
lcall
cmc
out
outsl
imul
aam
cld
push
jo
jge
xor
mov
lds
add
xor
test
loop
iret
xor
lea
or
repz
arpl
lret
mov
or
adc
movsb
sub
lea
pop
insb
aas
cmp
enter
push
xor
inc
sbbl
out
into
adc
push
xchg
hlt
mov
aad
shlb
cmp
push
nop
push
push
popa
rcrl
adc
test
xchg
adc
mov
aam
xchg
sub
mov
rol
dec
xor
std
jmp
xchg
ss
mov
insb
shll
adc
div
fstpt
hlt
xchg
rcrb
repz
xor
rolb
inc
clc
mov
aas
imul
xlat
inc
pop
daa
pop
popf
sub
out
out
pop
lock
push
outsl
in
pop
arpl
dec
movsb
shlb
daa
and
pop
add
in
in
sub
mov
test
add
add
fwait
or
lret
jno
push
cmpsb
lock
add
push
daa
push
hlt
mov
inc
and
int
in
mov
inc
dec
filds
movsb
sbb
inc
jl
jmp
cmp
mov
or
or
push
sbb
test
icebp
and
push
or
in
clc
dec
insb
sbb
into
push
pushf
mov
pop
pop
pop
mov
daa
inc
pop
sar
mov
lret
xorb
jp
jg
inc
inc
inc
in
int
cmc
outsl
pop
cmp
insl
cwtl
push
enter
or
adc
loop
mov
adc
jo
lock
inc
sub
rorb
mov
sarb
fcoml
ret
shrl
inc
inc
xchg
es
ss
test
mov
stc
inc
and
mov
jne
movsb
movsb
loopne
and
xchg
push
ret
dec
and
ret
or
mov
pushf
fmuls
add
sub
lea
and
ja
jns
lods
lahf
jp
repz
hlt
push
ljmp
pop
cmp
add
xchg
in
jae
iret
sub
leave
inc
lahf
ret
adc
pop
mov
repz
push
out
fcomp
jno
inc
cmp
rolb
sarb
sbbb
dec
ljmp
test
add
add
sbbl
pusha
jo
je
test
inc
jg
repz
pusha
inc
mov
mov
jmp
mov
jg
jne
sub
popa
cmpb
xchg
test
int3
inc
mov
loope
xor
pusha
insl
adc
mov
adc
dec
incl
lods
lock
jo
psubusb
sbb
movsl
cltd
add
not
pop
jmp
stc
negl
cmp
lcall
sub
jne
push
inc
sub
mov
push
cld
push
sbb
xor
xchg
sbb
adc
xchg
pop
push
push
das
cmpsb
vmovsd
or
add
or
inc
sub
xor
rclb
jne
add
mov
imul
pop
or
es
inc
pop
xchg
add
cmp
bound
mov
sbb
pop
jne
fdivrs
lahf
jns
add
or
pop
insl
mov
call
xchg
jae
fdivl
call
mov
sub
test
je
psrlq
inc
push
test
inc
leave
and
movsb
pusha
mov
movl
outsl
inc
and
jmp
cmp
rcr
mov
stos
testb
arpl
fimuls
loopne
ficoms
popa
and
inc
lea
imul
mov
xchg
inc
mov
shrb
jo
cli
sub
sti
popa
inc
sbb
pop
lcall
jb
clc
adc
mov
adc
mov
test
mov
xor
jge
scas
bound
test
jo
pusha
pusha
loop
mov
movsb
call
pop
fdivs
rolb
or
ret
jbe
movsb
imul
mov
sub
mov
in
or
lea
fwait
and
lods
pusha
rcll
movsb
mov
add
cmove
popf
pop
cmpsl
or
lock
mov
sub
roll
insl
or
and
aam
rcrb
mov
roll
xor
xchg
xchg
movsb
lock
psubb
jbe
push
sub
sub
push
rcll
mov
imulb
sbb
push
mov
into
and
jnp
aam
and
nop
or
mov
sarl
mov
adc
dec
cld
pushw
mov
iret
orb
in
dec
xor
inc
call
subb
mov
mov
out
out
andb
loopne
lahf
xor
js,pn
or
les
in
jmp
ljmp
push
inc
popa
xchg
fnsave
test
adc
sbb
lock
dec
std
int
aas
test
jbe
pop
xor
psrad
xchg
ss
out
insl
push
test
arpl
fcompl
fs
adc
cmc
mov
out
sbb
and
push
insb
test
cld
push
mov
ror
stc
or
or
sbb
sbb
pop
ss
leave
cmp
xor
pop
xor
cmpsl
push
adc
pop
push
lcall
pushf
cs
test
or
and
gs
cmpsl
xchg
rol
pop
iret
cli
cmpl
push
sbb
inc
sti
mov
push
loopne
fwait
lret
inc
jmp
push
nop
inc
lahf
fcomp
lock
and
imul
mov
rol
jge
sbb
jecxz
jne
add
fnsave
or
int3
sub
pop
inc
mov
out
fistl
scas
jbe
aas
or
adc
jnp
pop
adc
or
pop
into
fs
mov
daa
jo
add
jo
bound
in
pop
in
aam
movsb
dec
mov
adc
cmpsb
dec
xchg
mov
dec
stos
andb
mov
lds
lea
push
sbb
xor
mov
mov
sub
jl
jp
pop
mov
shlb
ror
ret
fimull
mov
ficomps
loop
mov
loop
mov
xchg
sub
outsl
cli
in
inc
and
shlb
jle
and
dec
and
pop
sbb
or
out
push
out
add
xor
fadd
rorl
push
add
dec
loopne
fwait
sbb
cmp
jns
sub
aam
and
adc
clc
add
popf
push
iret
dec
mov
cmp
testl
and
stos
fcoms
cmp
inc
pop
push
ja
shrb
push
scas
call
clc
loopne
enter
ret
jb
repnz
or
dec
mov
xorb
cmc
lock
push
andl
add
xchg
clc
popa
cmp
pusha
inc
pop
in
dec
daa
xor
movsb
cs
xchg
jle
mov
ss
hlt
mov
adc
lods
mov
movsb
mov
rcrb
clc
add
mov
mov
xchg
clc
pop
jnp
fisttpll
repz
ret
cli
add
jb
and
adc
fwait
decb
sbbb
mov
push
xor
filds
jns
les
dec
adc
jno
cmp
stos
mov
or
inc
pop
or
shrl
sub
sub
fsubl
or
out
addr16
push
or
repz
push
jnp
add
dec
aas
add
push
sbb
mov
popa
cld
repnz
dec
jne
push
pop
mov
sti
popf
inc
inc
ret
jo
sub
or
outsl
test
push
mov
and
mov
lret
add
cmp
daa
dec
xchg
fmul
xchg
mov
les
clc
movsb
lds
mov
hlt
pop
cmpb
lods
xor
clc
dec
pop
xchg
pop
add
pop
sub
pop
dec
mov
dec
out
sub
lea
stos
add
add
jecxz
lahf
shl
or
cmp
add
rcrl
jle
pop
call
xchg
out
scas
mov
insb
mov
loop
call
mov
push
jmp
and
ret
icebp
aas
rorl
jb
xor
repz
jle
outsl
ljmp
pop
xchg
pop
addl
dec
sub
mov
and
xor
inc
fstl
mov
aaa
in
cmpsb
lahf
mov
lock
or
bound
mov
pop
stc
les
sbb
pop
insb
aam
lds
es
sbb
jp
lret
inc
xor
push
cmpsl
add
pop
add
sahf
mov
add
push
lret
pop
mov
mov
lcall
hlt
or
mov
mov
arpl
xchg
xorl
out
dec
inc
lock
out
mov
add
ret
ret
add
cmpsl
cwtl
dec
ljmp
fwait
sub
out
dec
call
jo
push
adc
add
mov
mov
rorb
add
cld
movl
add
mov
mov
xchg
add
sub
test
jnp
cmpsb
sub
fcomip
jle
push
hlt
dec
cmp
jns
add
push
pminsw
dec
sbb
xor
js
mov
adc
mov
mov
cmp
mov
mov
jp
jle
push
divb
push
mov
xchg
insb
jne
aam
sub
sbb
stos
shr
daa
js
or
cmc
sarb
dec
pop
dec
sbb
cmpsl
icebp
sbb
test
loope
push
arpl
jbe
mov
cmp
sarb
xchg
pop
loop
or
sbb
pop
sbb
loope
xchg
insb
pop
xchg
xchg
movsl
mov
test
sahf
push
lds
add
sbb
setge
mov
pushf
enter
jp
aas
repz
inc
xchg
mov
push
daa
lret
mov
fadds
rol
jnp
push
pop
and
jb
or
push
cmc
insl
or
dec
cltd
inc
icebp
shr
imul
add
cmp
nop
cli
cwtl
imulb
pop
fwait
cmp
push
insl
xchg
inc
loopne
mov
adc
arpl
jnp
mov
rcll
xor
cmc
push
inc
test
fadds
roll
mov
stos
fbstp
add
out
inc
or
xchg
push
je
fildll
sub
push
and
das
pop
fcmovnb
dec
gs
add
push
iret
ss
xchg
add
xchg
pop
test
sarl
gs
inc
hlt
adc
mov
push
and
inc
movl
pop
enter
stc
pop
adc
mov
scas
sbb
cltd
shr
sub
lock
fdivrs
stos
fnclex
mov
lahf
mov
push
sbb
mov
jl
push
ret
repnz
fimuls
incl
repz
setb
or
orb
stos
xor
jl
mov
xchg
cltd
outsb
dec
test
movsb
out
xchg
dec
push
rorl
roll
loope
jp
mov
inc
rcrl
orb
push
ds
sahf
ret
lahf
jno
add
push
and
scas
mov
inc
push
xor
rcrl
loope
sub
sti
cmp
mov
push
das
adc
ret
out
xlat
mov
jb
ja
andl
movsb
and
cli
sarb
das
dec
jnp
sar
je
rorl
dec
pop
ss
inc
bound
int
dec
iret
inc
adc
test
movb
sbb
movsb
int3
adc
insb
ljmp
les
add
sti
xor
dec
mov
scas
pop
loopne
dec
imul
jne
and
xor
rcrb
cmp
sbb
and
lock
pushf
dec
pop
add
jmp
cmp
add
adc
push
push
add
pop
pop
bound
bound
xchg
pusha
fld
mov
subl
jl
lret
mov
mov
pop
loop
pop
cltd
mov
xor
or
in
or
int
pop
add
sbb
adc
inc
push
in
lret
add
mov
and
dec
jp
inc
or
imul
out
mov
fsubl
jnp
insl
clc
mov
inc
mov
es
sub
int3
pop
cmp
push
loop
mov
sub
mov
in
push
adc
pop
adc
ds
mov
xchg
fistpll
or
cmp
sub
xchg
out
cmc
lret
stc
pop
outsl
bound
pusha
adc
decl
pop
push
jecxz
pop
cmp
daa
out
int3
movsl
lahf
lcall
scas
adc
or
push
pop
mov
mov
push
cs
sbb
push
push
inc
cwtl
and
cwtl
add
and
xor
sarl
ficomps
mov
push
push
pusha
arpl
mov
and
or
cmc
sub
clc
jge
enter
cmp
push
push
popf
sub
ret
popa
inc
mov
push
sbb
jb
loope
lods
fimull
pusha
xor
pop
pop
out
adc
das
insb
imul
xchg
hlt
clc
inc
pop
std
jp
mov
aad
sbb
inc
or
ja
popf
xor
sbb
mov
out
leave
adc
adc
loope
push
push
iret
arpl
sub
in
push
mov
aas
pop
push
insl
pop
clc
xor
js
in
cs
addl
push
ss
jo
jo
iret
push
pusha
call
mov
sub
aaa
stos
je
inc
pushl
loope
jae
cmp
sbb
fadd
mov
mov
push
loope
dec
jmp
fistps
rolb
adc
rolb
push
lds
xor
mov
shr
clc
loope
imul
imul
les
or
or
push
or
cmpsb
dec
xchg
test
icebp
pop
pop
mov
jnp
aam
shrl
add
repz
push
les
sbbl
mov
push
push
mov
jo
js
adc
test
lea
adc
add
rclb
cmpsb
mov
pop
cmp
fisubrl
jmp
shl
add
scas
xchg
popa
or
xchg
lret
and
sbb
inc
scas
lock
jge
xchg
xchg
jle
xchg
imul
daa
sub
hlt
inc
arpl
add
out
fimuls
test
inc
pop
mov
mov
movsb
xchg
aas
lret
sahf
lds
mov
xchg
test
mov
test
in
or
shlb
shlb
jno
adc
lock
out
sub
add
sbbl
push
cmc
hlt
fsubr
dec
aas
sub
pop
and
dec
mov
add
push
das
cmpsl
dec
roll
and
js
xchg
xor
test
js
mov
shlb
mov
inc
mov
arpl
dec
pop
fneni(8087
sub
cmpsl
sbbl
sub
add
dec
fsubs
xchg
xchg
pop
ss
out
add
push
add
test
pop
add
sub
incb
lret
or
cmpsb
insl
sbb
orb
xchg
jecxz
push
pop
adc
or
add
sub
pushl
xor
pop
rcll
call
loopne
cmc
ret
cmpl
pop
mov
inc
shr
and
xor
push
sub
add
pop
inc
mov
cli
and
js
in
ds
mov
dec
cmp
and
or
inc
mov
add
push
inc
inc
pop
push
jle
int
jo
cwtl
in
pusha
lea
fdivs
incl
scas
ds
pop
push
xchg
push
pop
cmpl
jo
in
mov
repz
adc
andb
into
hlt
mov
dec
fsubrl
sbb
adc
dec
inc
mov
out
mov
out
mov
daa
pop
xor
cmp
cld
testl
aam
pop
xor
add
jge
cs
dec
inc
movsl
or
into
cltd
xor
adcl
rcrl
bound
push
scas
sbb
or
jle
lret
dec
insb
outsb
cwtl
jecxz
shll
ljmp
ljmp
add
mov
sub
mov
jbe
xchg
jb
aaa
into
pop
cmp
mov
adc
pushl
xchg
js
sbb
sbb
jo
push
addl
xchg
jae
inc
cwtl
ficompl
xchg
jl
and
mov
into
cmpsb
icebp
iret
shl
push
push
pusha
loope
int
cli
push
push
jle
mov
adcl
add
push
and
mov
daa
sbb
jg
leave
mov
es
icebp
add
mov
bound
push
jl
pop
mov
mov
xor
into
loopne
xchg
pop
dec
xchg
shlb
jno
incb
cmp
pop
dec
movsb
jge
xor
push
int
sbb
xchg
bound
fbld
or
cmp
fnop
in
bound
call
sbb
filds
xor
cli
add
scas
notb
clc
fdivrs
sti
mov
sub
ds
sbb
push
cmpsl
dec
rcl
ret
inc
adc
aad
dec
adc
fstpl
aad
fsubs
std
adc
jae
sbb
addr16
jp
mov
mov
or
rclb
pop
in
adc
loopne
lret
pop
clc
cli
mov
lahf
ret
xor
lock
or
dec
mov
pause
lcall
sbb
lret
aaa
lret
fs
mov
lcall
xchg
pop
pop
mov
dec
mov
adc
pop
ds
sub
jo
or
inc
test
sarb
sti
cmp
shlb
jecxz
int
push
pop
add
addl
sbb
jl
mov
test
or
jp
scas
popf
add
stos
cmp
pop
ret
insb
lmsw
adc
and
faddl
dec
cmp
pop
push
dec
es
arpl
js
insb
leave
xchg
test
add
jp
sub
sbb
es
std
jmp
lret
inc
push
ljmp
mov
test
inc
sbb
sub
cmp
push
rcl
mov
dec
rcll
jbe
jb
dec
arpl
ss
xchg
push
cld
xchg
mov
fisttps
movsb
push
popa
stos
popa
fiaddl
jecxz
push
and
leave
mov
sub
cmp
outsb
cwtl
jo
and
fldenv
fmuls
incb
jo
js
dec
ret
into
sub
cmpsb
pop
int3
nop
pop
mov
sbb
xor
out
inc
shlb
roll
es
int3
jle
mov
orb
mov
test
cmp
cmp
hlt
add
jno
pop
cwtl
mov
sbb
fadds
lods
jg
mov
lret
loopne
inc
push
movsl
pop
pop
lea
xchg
test
adc
test
xor
jp
imul
xor
shlb
xchg
sub
lds
jne
loopne
pop
ds
dec
adc
adc
jne
lea
shr
pop
pop
es
or
pop
lods
pop
aaa
pop
add
inc
xchg
add
leave
adc
rcrl
ss
add
mov
add
pop
jecxz
dec
add
clc
pop
adc
in
out
loopne
rol
test
xor
cmp
insl
pushf
inc
push
add
mov
xlat
push
pop
dec
test
lret
or
jecxz
lret
pop
hlt
inc
sti
or
aad
jns
sub
xchg
movsl
out
flds
icebp
xor
mov
adc
push
jl
adc
or
inc
cld
in
loope
cld
sbb
xor
pushf
sahf
stos
xor
and
mov
or
loope
jp
mov
jl
andb
lea
pop
es
in
cpuid
add
dec
and
xor
nop
iret
push
mov
cmp
jo
aaa
cltd
pop
xor
pop
push
pop
adc
rcl
dec
mov
loopne
mov
xor
jp
push
nop
cmpl
outsb
inc
in
xor
and
fisubl
push
mov
sub
push
hlt
and
cld
sub
and
inc
leave
cmpsb
aam
pop
lods
fisubrl
hlt
int3
mov
add
mov
adc
adc
lea
adc
jo
mov
test
das
xor
fdivr
imul
and
jp
pop
add
sbb
cmc
mov
and
test
sub
mov
movsb
and
pop
jns
out
pop
movsl
imul
mov
ret
lods
push
dec
sbb
loop
inc
notb
push
popa
xor
call
or
icebp
aam
cmpsl
mov
add
pop
jns
lea
fidivrl
lock
inc
or
andb
mov
adcl
cmpsb
push
dec
mov
mov
out
push
mov
dec
jne
push
pop
mov
and
pop
adc
loope
mov
dec
mov
inc
arpl
loop
sbb
cmp
rorl
ljmp
mov
test
cmpsb
inc
ficompl
js
sti
not
loope
ret
addr16
mov
mov
xor
add
ja
adc
hlt
lds
into
insb
stc
adc
call
lcall
mov
incl
ds
sub
popl
insb
mov
int
outsl
xor
jecxz
sbb
xorl
mov
call
shr
in
push
or
xor
loopne
leave
sbb
movsl
mov
and
int3
xorl
in
fdivs
popf
mov
mov
lock
sbb
inc
and
je
cmpl
pop
sub
jbe
in
aas
mov
mov
gs
pusha
lods
rol
stos
xchg
cs
test
scas
ret
adc
ja
outsb
lahf
popf
xchg
pop
data16
outsl
mov
cli
push
dec
test
pusha
loop
and
sbb
cmp
inc
loopne
lret
jecxz
jle
xor
hlt
add
sbbb
sub
rcl
movl
lret
lock
ds
je
and
xlat
xor
test
push
clc
mov
data16
adc
clc
out
push
adc
test
mov
int
daa
jo
mov
sahf
adc
xor
xchg
pop
push
loop
mov
popf
testb
add
lods
pop
fstpl
inc
imul
jmp
push
imul
test
or
inc
jecxz
cltd
into
push
sbb
arpl
cld
or
xchg
push
dec
cmp
adc
push
stos
sub
mov
mov
inc
pop
imul
pop
mov
cmpsb
js
push
mull
fldlg2
js
mov
ja
jmp
mov
scas
mov
dec
mov
loope
adc
adc
dec
cmc
lret
cltd
loop
pop
orb
enter
cmp
inc
or
inc
adc
testl
push
jp
lret
lahf
cmc
movsb
int
outsb
xchg
push
sub
sub
int
sbb
repz
jnp
sti
jo
inc
hlt
pop
jp
in
icebp
imul
add
pop
xor
test
cld
in
mov
xchg
pop
jg
push
mov
roll
inc
adc
xor
cmpsb
jbe
mov
in
mov
jp
rcl
and
ret
add
cld
fcoms
adc
aad
shr
xor
cmp
sub
jae
into
gs
jmp
push
lcall
cmp
insl
pop
push
ljmp
or
repnz
cmc
nop
in
dec
cmp
das
iret
pop
xchg
or
jl
push
in
push
sub
stos
pop
mov
ret
and
jl
mov
imul
daa
xlat
sub
je
xorl
jno
cmp
fildl
into
jnp
shlb
adc
ljmp
cmc
inc
push
mov
incl
jbe
fstpt
arpl
imul
cli
sahf
sbb
daa
repnz
insb
sbb
mov
mov
fstp
or
loop
js
add
jno
jmp
pop
aaa
stos
ret
cld
sbb
xchg
xor
mov
sub
mov
call
xlat
mov
loop
lret
and
ret
aad
add
lahf
ja
inc
lret
je
xor
stos
dec
shrb
mov
les
out
sbb
imul
movsl
push
add
add
and
xor
fwait
xchg
cli
add
and
xor
gs
test
sbb
icebp
mov
cmp
and
push
ja
xchg
push
jmp
js
daa
cmp
hlt
add
xchg
js
loopne
test
out
cmp
scas
inc
pop
xor
dec
je
inc
enter
cmpb
sarb
inc
mov
mov
stos
inc
mov
daa
sub
jnp
sahf
lock
jb
and
into
int3
loope
jmp
dec
or
fcmovnu
add
cli
add
sub
shll
pop
mov
movsl
out
sahf
push
mov
adc
mov
cmpsb
sbb
push
loop
inc
in
jns
add
pop
stc
iret
test
scas
popa
ss
adc
inc
jp
jmp
mov
mov
jp
push
jno
inc
cmp
mov
shlb
and
and
pop
popa
insl
xchg
rorl
incb
cmp
pop
cmp
push
arpl
sahf
mov
js
inc
stos
lods
addb
push
push
rcll
daa
shll
fwait
mov
popa
adc
ljmp
mov
subb
and
rol
shll
decl
fimuls
test
fwait
xchg
cmp
insl
mov
lock
dec
mov
cmp
push
jo
data16
cmp
push
or
and
out
jg
mov
loop
dec
negb
mov
jmp
repnz
push
fnsave
enter
inc
adc
test
scas
sbb
mov
push
xor
mov
fwait
rcll
jge
outsl
cld
pop
sti
xchg
pop
call
stos
ja
in
fxsave
mov
jge
mov
pop
sbb
pop
add
jne
and
xlat
add
je
mov
dec
out
lock
add
push
xor
fists
lea
icebp
cmc
cltd
test
loopne
mov
jae
cmp
fs
add
popa
push
lret
das
xor
stc
inc
push
inc
shrl
and
je
or
icebp
dec
ret
fimull
push
clc
movsl
dec
mov
push
clc
scas
out
xchg
sbb
into
inc
push
push
jbe,pt
mov
push
pusha
and
lock
xchg
lods
add
sub
pop
cmp
push
inc
aas
addb
add
mov
inc
notl
test
mov
cld
je
repnz
inc
cli
test
xor
aas
mov
ror
das
adc
fwait
push
pop
cmp
fiaddl
enter
inc
sbb
roll
mov
ljmp
repz
mov
cmp
mov
dec
sub
nop
jmp
repz
cli
cmp
addr16
movsb
xchg
dec
pusha
push
pop
pop
dec
lret
add
add
or
mov
xor
push
test
jl
push
inc
mov
and
fs
or
popa
je
shl
inc
xchg
pop
add
mov
sbb
inc
lret
insb
push
xchg
movsb
ss
mov
jecxz
ret
xchg
cmpsb
test
mov
ret
and
push
lcall
adc
xor
mov
call
loopne
and
and
or
sahf
push
jg
clc
lock
mov
insl
cld
mov
faddl
dec
push
das
decb
adc
pushf
lret
hlt
out
sti
scas
push
mov
ja
sbb
pop
jl
and
cmp
in
jns
sub
jmp
sub
mov
and
sub
pop
and
iret
hlt
sti
js
fstpt
pop
xchg
pop
and
fmull
dec
jmp
int
shll
sub
jp
sbb
rcr
mov
into
cmc
push
dec
add
mov
ljmp
mov
sub
inc
xchg
mov
push
sahf
xchg
adc
outsb
inc
loopne
xorb
or
subb
adc
scas
push
jle
andb
dec
add
stos
outsl
adc
nopl
rolb
popf
cmp
popa
cmp
mov
sbbb
sub
shr
ja
aam
pop
inc
sub
jns
fdivl
orb
dec
das
adc
dec
cmp
das
lret
dec
sbbl
inc
jno
stc
push
pop
js
shl
or
pop
mov
or
sar
cmpsb
cmovb
sbb
aam
xchg
add
test
stos
cmp
shl
pop
adc
pusha
mov
insl
inc
movsb
insl
rcr
arpl
lds
ret
mov
addb
lods
jmp
scas
sbb
jo
mov
cmc
jb
imull
sub
jl
cmp
add
push
or
jae
test
lahf
fsubrp
sbb
add
test
add
push
int
das
jo
aaa
xchg
add
int3
orb
loop
mul
popa
inc
cmc
ds
or
inc
notb
lock
lea
and
dec
ss
les
dec
fidivrl
add
sbbb
adc
and
push
cli
xchg
sub
mov
outsb
inc
and
shll
push
jle
test
loop
xlat
mov
in
dec
or
add
iret
add
sub
or
pusha
jp
add
sbb
xor
dec
cli
push
sahf
stos
and
xor
aad
dec
call
mov
test
dec
addr16
negb
inc
adc
adc
shlb
push
ret
inc
cmp
andl
int3
lock
ljmp
push
sbb
fisttpll
jg
pop
test
cli
lds
push
das
in
int3
push
out
jp
out
push
jecxz
xor
pop
repnz
pop
jmp
inc
cld
stos
nop
inc
or
int
xchg
pusha
bound
inc
cmp
pusha
mov
adc
xor
outsl
push
jmp
mov
push
loopne
rclb
sbbb
sbb
mov
stos
lods
cld
adc
mov
sbb
xor
jl
sbb
dec
xor
sub
ljmp
std
dec
pop
sub
insl
add
dec
xchg
aad
or
clc
mov
pop
cmpsb
mov
movups
mov
add
mov
cmp
or
jno
sbb
adc
aam
ljmp
add
addl
mov
clc
jg
jb
push
jle
adc
bound
xor
add
jl
push
jle
pop
imul
inc
inc
notb
pusha
cmp
out
push
push
shlb
lret
or
push
dec
rcrb
cmp
enter
es
xlat
dec
lret
sbb
add
pop
add
aad
dec
sarl
shl
daa
xchg
lods
push
cmp
hlt
movsb
and
subb
mov
mov
adc
sahf
push
mov
adc
ret
aam
loop
call
cmp
je
loopne
mov
mov
orl
cmpb
or
cmp
adc
test
rorb
inc
adc
pushf
push
call
cwtl
mov
inc
add
rcl
jecxz
imul
cmp
lock
cmp
cmpb
adc
sbb
jge
gs
mov
icebp
sbb
iret
ret
repnz
inc
cmp
or
fcoml
sar
movsb
pop
mov
pop
lds
and
cmp
adc
add
pop
xchg
push
jmp
stos
rcrl
ljmp
lds
or
stos
pushf
mov
repz
add
imul
loopne
mov
xchg
mov
clc
out
push
inc
pushf
adc
addr16
mov
add
inc
jg
jb
push
pop
cmp
out
mov
mov
push
cmp
mov
sub
test
pop
and
ret
fldenv
sbb
mov
dec
repnz
mov
inc
ret
arpl
xchg
lret
ljmp
mov
cld
mov
dec
mov
repz
fdivrs
add
mov
and
adc
sbb
mov
dec
inc
bound
sub
shlb
divl
jp
lret
and
mov
jb
popa
or
inc
test
test
fmull
clc
xor
movsb
insb
cmp
pop
sbb
hlt
xchg
cmc
lds
mov
rorb
aam
xor
cld
dec
push
sub
push
push
js
in
sub
pop
inc
adc
inc
mov
sbb
movsb
push
xor
and
mov
cwtl
jbe
stos
fadds
jl
pop
loop
gs
mov
cmpsb
jmp
rol
jle
sarl
insb
arpl
outsl
mov
dec
nop
add
lock
sbb
dec
and
cli
pop
mov
movsb
xor
adc
mov
inc
cmp
lret
cmc
mov
out
andl
test
inc
ret
jne
sbb
sbb
mov
mov
cmp
jo
hlt
hlt
add
ljmp
movsb
pop
pop
ds
add
ss
xchg
imul
mov
mov
mov
pop
mov
push
rcl
shl
inc
clc
mov
rcl
testb
mov
add
and
mov
jle
idiv
push
nop
lds
outsl
cltd
inc
pop
push
mov
in
sub
out
mov
xchg
pop
pop
stos
mov
pop
rclb
push
incb
push
int3
scas
inc
fdiv
and
loop
lcall
outsl
pop
mov
imul
and
sbb
lahf
dec
sub
push
fdiv
cmp
inc
mov
jmp
xor
and
mov
clc
mov
mov
int3
mov
mov
mov
sbb
push
fnstenv
mov
xchg
out
pop
pop
adc
sti
add
cmc
int3
ss
movsb
outsl
push
bound
mov
mov
in
or
fs
push
loope
arpl
call
adc
lock
add
pusha
sbb
or
pop
sbb
push
rclb
sub
addb
xchg
mov
ret
insb
add
lds
outsb
xor
push
xchg
inc
lahf
mov
pop
enter
sarl
ret
rolb
add
ret
mov
dec
out
lcall
fsubs
sub
dec
mov
movsl
and
loopne
gs
lds
daa
xlat
roll
sub
pop
push
dec
or
out
xlat
fisubl
or
or
movb
push
lds
jge
or
dec
nop
jg
pop
cmc
movsl
roll
push
and
xlat
dec
ljmp
dec
rolb
loopne
and
and
mov
mov
pop
cmp
inc
enter
or
je
test
xor
mov
inc
xorb
andb
mov
pushl
jmp
mov
dec
test
add
mov
ret
mov
out
cli
les
jo
call
cmp
lret
inc
mov
mov
int
aad
or
hlt
lock
or
rorb
lcall
mov
roll
les
nop
mov
movsl
pop
nop
dec
sbb
ja
pop
js
lcall
das
jle
or
inc
in
mov
jmp
sbb
mov
cmp
cmp
push
call
addr16
loop
mov
mov
mov
push
sub
aaa
loopne
cmp
loopne
pop
in
mov
push
bound
pop
dec
stos
xlat
mov
jb
insb
in
cmp
cli
rcrb
xor
mov
pop
cmp
mov
test
cmpsl
pushl
xchg
stc
nop
sbb
test
push
or
pop
fdivs
rorl
enter
pushf
pop
fisubs
inc
add
in
xchg
pop
push
or
jo
lods
xchg
lret
hlt
or
je
aad
mov
xadd
outsb
inc
mov
rclb
add
cmpsl
inc
std
cs
pop
jae
push
pop
sub
jl
or
dec
fistpll
pop
cwtl
jecxz
xchg
mov
mov
push
dec
roll
clc
mov
push
lea
mov
int
push
rcrb
fs
push
adc
pop
call
aad
js
adc
imul
cltd
push
mov
insb
lds
cmp
sti
or
jmp
jbe
xchg
add
clc
xor
aam
inc
xchg
clc
mov
xor
lods
loop
mov
cwtl
xchg
jmp
aas
mov
outsb
and
xchg
out
pop
in
ljmp
mov
aas
fsubs
outsl
add
pop
test
mov
xchg
xchg
sub
cmpsl
andl
lods
cmpl
sbb
data16
jno
and
dec
cltd
adc
inc
shlb
dec
push
mov
ficoms
movsl
adc
inc
int3
je
mov
test
or
rorb
and
mov
pop
sbb
mov
outsb
es
jb
rorl
call
lods
std
add
mov
mov
insb
xchg
mov
lret
xor
aam
xchg
fwait
jno
pop
or
inc
nop
fwait
or
xchg
out
jmp
xor
fisubl
jg
cmp
jb
cld
adc
xor
ljmp
xor
xlat
call
jae
scas
inc
push
repnz
popl
adc
fdivr
add
cltd
pop
aad
xor
gs
push
es
hlt
cmpl
push
out
cli
mov
das
into
inc
jnp
add
inc
fsubrs
jo
lods
pop
out
inc
cld
jecxz
scas
mov
xor
jb
add
mov
loope
in
mov
js
pushf
push
xorl
sbb
insl
mov
xchg
mov
dec
xchg
lahf
add
ds
enter
sbbb
rcrb
cmp
xchg
mov
mov
or
or
incb
lahf
add
rcl
jl
popa
js
sbb
adc
xchg
push
push
test
mov
jl
add
sub
mov
push
xchg
lods
fadd
and
dec
jp
pusha
or
aad
cmc
outsb
jmp
sub
sbb
es
mov
fistpl
jmp
dec
outsb
or
xorb
inc
rcr
test
movsb
ror
fstpl
inc
cmc
call
cs
mov
push
xchg
and
pop
lock
lahf
jmp
jo
std
rcll
and
inc
shrb
aam
pop
sub
mov
jne
or
add
repnz
in
jae
inc
fidivrs
scas
pop
fcoms
sbb
mov
shrb
pop
fucompp
std
bound
lcall
cmp
pop
xchg
loopne
loope
pop
dec
pop
call
xor
mov
dec
and
or
fisttpll
or
mov
mov
insl
push
jns
cwtl
lcall
mov
push
or
or
in
cmp
xor
push
and
ud2
cmp
ret
je
mov
or
scas
pop
and
outsb
into
jge
mov
lods
sahf
push
sub
mov
inc
fucomi
sub
sbb
push
dec
mov
dec
inc
ret
pop
int3
int
add
mov
jae
dec
rcrb
xor
int
into
imul
das
push
ret
stos
ja
or
adc
sbb
stos
jle
add
push
and
hlt
add
int3
add
rorl
scas
rol
inc
add
jae
shrl
or
adc
inc
mov
pop
pop
sub
adc
inc
mov
dec
sbb
cmpsl
into
adc
dec
fidivrl
push
movsl
shl
bound
jp
imul
push
inc
les
inc
push
sbb
inc
out
mov
in
lds
jge
jmp
pop
sti
pop
sbb
inc
mov
or
xchg
shlb
loopne
es
and
xor
mov
pop
loopne
sbb
nop
or
pop
xchg
add
lea
sub
ljmp
push
cmp
cs
addr16
sbb
mov
enter
mov
add
mov
es
push
mov
lahf
cmp
outsb
sti
rcrb
inc
push
subl
out
mov
das
imul
xchg
mov
sub
pop
mov
and
es
sar
mov
sbbb
or
outsl
fsub
or
pop
push
int
movsb
mov
repz
push
imul
inc
pop
loopne
pop
neg
movl
adc
jecxz
inc
pop
mov
aas
mov
and
sub
pop
adc
add
mov
jo
xchg
inc
jmp
mov
call
sbb
jb
adc
shll
rorb
movb
stc
and
stos
xchg
ds
fbstp
inc
inc
ds
orl
dec
sbb
xchg
or
pusha
or
add
sbb
imul
and
push
push
leave
add
loop
sub
adcb
jo
fildll
bound
jmp
inc
ret
push
cltd
xchg
in
xchg
or
or
aaa
mov
cwtl
stos
mul
repnz
out
push
sbb
shl
sbb
xor
and
xchg
xchg
ljmp
mov
inc
mov
xchg
xor
jecxz
stos
jp
add
dec
push
xlat
lea
lock
mov
shll
mov
jecxz
push
fmull
divl
xchg
arpl
or
mov
or
or
mov
shll
mov
ja
add
dec
adc
popa
stos
ret
shlb
dec
jl
sbb
or
sbb
jl
add
inc
mov
les
jbe
cs
cmp
mov
or
dec
cmp
stos
inc
in
mov
test
pop
popa
cmpsb
aad
stc
in
cmpl
out
lds
lock
shl
gs
or
push
aaa
push
dec
push
xor
sub
in
adc
xchg
jns
xchg
push
or
inc
dec
loopne
inc
insl
les
inc
add
ja
ficompl
rcll
addl
cmp
or
sub
inc
cmp
test
add
jo
xchg
mov
in
adc
and
push
pop
js
add
sbb
int
out
popf
fadds
push
mov
inc
ret
or
pop
movsbl
pop
jge
sub
lock
insb
ss
loope
repnz
sbb
mov
dec
mov
inc
and
push
call
fists
or
dec
cmpsb
lret
sbb
sbbl
cld
hlt
and
aaa
adc
or
push
cmpsb
push
jg
sahf
lea
add
cmp
cs
push
cmp
and
mov
fimull
xor
mov
xchg
mov
lcall
mov
lds
mov
add
mov
push
sbb
mov
mov
roll
cmp
test
push
mov
iret
push
add
ljmp
bound
in
or
mov
jle
push
out
and
imul
call
shl
sarb
imul
mov
xchg
gs
mov
xchg
les
daa
inc
cli
lcall
hlt
mov
cmp
aas
mov
lods
sti
bound
mov
cmp
ja
mov
adc
cmp
xchg
adc
push
adc
movsl
xorl
xor
std
subb
clc
inc
scas
push
loopne
dec
rorl
add
or
adc
lds
xchg
test
inc
xor
sbb
cmp
movsl
mov
jo
dec
inc
xchg
leave
mov
movsb
push
sbb
xor
or
je
cmp
lret
bound
lock
movb
jno
outsl
call
negb
add
cmpsb
imul
mov
sub
call
jo
in
jmp
xchg
sarl
jmp
add
push
jl
insb
inc
adc
inc
sub
loope
pop
push
int
jno
cmc
dec
scas
dec
dec
ja
es
dec
pop
cmp
adc
mov
xor
inc
cmp
imul
cmp
ljmp
dec
clc
push
push
clc
pop
mov
mov
fidivl
lret
mov
pop
sbb
xchg
orl
rclb
inc
aas
cmc
outsl
and
jno
fsubrp
insl
inc
sahf
ljmp
xor
mov
repnz
in
leave
mov
push
lea
xor
iret
sar
push
and
xchg
xor
adc
js
and
cs
and
insb
sub
and
call
push
xor
adc
lcall
push
xor
cmp
shll
cmpsb
lret
push
add
arpl
pop
mov
adc
lahf
xchg
out
scas
inc
mov
jne
jbe
ret
xor
outsl
sub
jb
jecxz
aad
imul
adc
daa
xchg
cmp
nop
push
js
inc
mov
shrb
lds
inc
sbb
adc
fdivrp
pop
dec
or
ss
cmpsl
cmp
insl
aad
push
call
cmpsb
test
or
dec
lods
test
pop
stos
inc
mov
xor
mov
sti
movsl
mov
push
or
mov
adc
into
aas
insl
rclb
jle
aaa
inc
js
pop
pop
mov
insl
pop
ljmp
dec
mov
xor
add
sub
mov
test
xchg
xchg
mov
aam
leave
or
and
push
jne
test
shrl
mov
adc
pop
nop
push
xchg
rolb
lret
jl
aad
les
pop
sub
mov
add
std
loopne
imul
and
pop
sti
xchg
xchg
ds
nop
sub
push
mov
jmp
in
stc
rcl
add
or
pop
or
cmp
andb
fincstp
pop
cmp
push
lds
cli
xchg
filds
fcomi
pop
push
mov
lahf
xchg
in
xchg
xchg
xchg
in
sub
loopne
jp
mov
dec
les
arpl
and
je
xor
mov
rolb
lret
pop
out
add
mov
push
sbb
jbe
mov
adc
xchg
test
pop
std
es
xor
into
outsb
test
sub
leave
adc
sti
jg
aad
add
push
cli
or
outsb
sub
inc
dec
push
sbb
mov
in
push
mov
dec
sbb
loope
ret
addl
xor
nop
je
dec
jge
ljmp
mov
loope
out
mov
ret
out
shrl
xchg
rclb
mov
aaa
loop
xchg
cmpsb
inc
sarb
mov
fwait
pop
test
inc
mov
imul
sub
stc
sti
lods
clc
aas
sbb
xor
stos
andl
pop
mov
out
jmpw
inc
push
push
sbb
dec
pop
jns
testl
aaa
xchg
cltd
add
add
hlt
mov
jmp
dec
xchg
xchg
xor
xor
addr16
outsl
push
inc
and
sbb
jbe
push
insb
loope
or
pop
sarl
adc
in
inc
adc
in
mov
subl
fwait
mov
lcall
mov
cmp
roll
loopne
inc
imul
mov
push
cmpsl
cmp
mov
xchg
shrb
cmc
lds
sbb
stos
scas
inc
xor
lods
cmp
dec
in
out
ljmp
out
cmp
sbb
jle
or
frstor
stos
ds
jecxz
stos
xor
jnp
clc
push
andb
push
lea
divl
and
sub
lret
rolb
mov
pushf
ljmp
lret
adc
mov
in
mov
sub
pop
xchg
test
loope
push
adc
imul
cmpsb
js
popa
dec
push
popa
in
inc
fdivr
push
inc
insl
or
sarl
xchg
inc
pop
mov
sbb
fisubrs
xor
icebp
xchg
int3
clc
adc
and
call
je
mov
seta
into
daa
adc
pop
outsb
push
mov
push
imul
sub
stc
cwtl
call
test
dec
fsubr
test
mov
push
mov
inc
jle
push
lahf
mov
dec
das
mov
adc
pop
loopne
xor
fwait
or
cmpsb
mov
jno
aad
das
lods
daa
mov
fbld
out
rcrl
mov
pop
popf
dec
adcl
cmc
xor
loopne
in
mov
inc
rorb
scas
imul
rclb
mov
icebp
cmp
fcom
or
mov
cmp
in
icebp
loopne
sbb
test
in
jnp
rcrb
les
inc
popl
insb
mov
addb
hlt
call
in
ret
inc
sub
push
pushf
and
cmpsb
pusha
imul
xor
jge
and
in
mov
push
sarb
cmp
sub
mov
ret
hlt
cwtl
mov
out
ret
or
dec
mov
adc
pushf
sub
add
push
jae
fwait
jmp
ja
out
sub
fdiv
faddl
dec
sbb
lcall
adc
std
clc
movsb
cmp
das
xorb
and
push
lahf
sub
adc
inc
and
adc
xlat
cs
jmp
sahf
repnz
pusha
mov
test
xchg
push
fnsave
shrl
sbb
xchg
pop
sahf
in
pop
mov
shl
and
dec
cs
mov
mov
aam
xchg
imul
lds
decb
dec
test
rorl
popa
sub
outsl
inc
outsl
sbb
pop
gs
mov
adc
push
dec
shrb
sti
shl
inc
mov
sub
outsl
dec
andl
movsl
cmp
push
ljmp
push
hlt
fisubrl
jecxz
insl
test
mov
xor
fs
imul
xor
test
lock
sub
or
movsb
cmp
test
je
or
cld
mov
aaa
cs
push
xor
movd
mov
inc
adc
mov
das
pop
pop
cmp
and
add
push
lret
push
mov
pop
pop
shrb
enter
pop
jmp
xchg
xor
xor
js
cmpsl
sti
mov
lret
inc
or
int3
cmp
sti
mov
fucomip
jne
ljmp
cmp
add
fidivl
add
cwtl
xlat
add
lea
push
mov
lock
xchg
add
inc
mov
mov
pop
xchg
inc
cmc
clc
xchg
int
dec
lods
das
xor
insl
nop
jb
sbb
mov
dec
and
leave
mov
pop
mov
pusha
pop
icebp
arpl
scas
cli
inc
mov
rolb
int
bound
ja
lods
lock
lret
jle
add
xor
les
pop
pop
or
push
pop
cmp
dec
sbb
lret
iret
cmp
dec
pop
inc
icebp
cmp
sub
xor
xchg
pop
test
xchg
mov
add
decl
sbb
in
movsb
repnz
pop
pop
or
popf
sbb
jne
xchg
dec
out
movsb
testl
daa
cmp
stos
test
jae
mov
push
test
mov
aad
aaa
jle
push
test
mov
inc
loopne
xchg
stos
xor
pop
std
dec
lds
pop
into
repz
pop
pop
or
inc
in
arpl
pop
shl
es
jecxz
cwtl
add
push
jb
xor
cmp
mov
aam
cmp
mov
add
add
insl
pop
adc
ss
cmp
jecxz
int
test
add
ss
ljmp
add
mov
xor
inc
xchg
xor
mov
insb
jle
imull
push
jecxz
lahf
pop
cmp
enter
sbb
mov
les
jnp
movsb
lahf
push
xchg
xor
scas
mov
mov
jle
addr16
mov
inc
push
mov
cmp
ret
mov
lods
dec
mov
push
cmpsb
xchg
pop
icebp
xor
xchg
inc
pop
nop
mov
mov
and
popf
lods
jmp
push
insb
sub
adc
fdivrs
lods
shlb
xchg
nop
pop
or
cwtl
mov
mov
sub
not
and
mov
xlat
inc
sbb
rcrl
scas
pop
test
ret
mov
xor
stos
shr
leave
mov
clc
jmp
push
mov
jmp
lcall
out
sbb
xor
test
ljmp
addr16
inc
dec
sub
lahf
aad
mov
add
icebp
cmp
icebp
loopne
push
mov
push
jmp
dec
and
rcrb
adc
hlt
push
and
push
xor
mov
inc
js
push
test
pop
xor
movsb
mov
fucomp
add
insl
lcall
mov
xor
adc
cmp
cli
dec
mov
sarb
jb
pop
jmp
push
cmp
sub
push
mov
jne
lcall
shr
sbb
scas
iret
gs
xor
jecxz
sbb
inc
mov
mov
push
into
cmp
adcb
lret
mov
lcall
mov
jecxz
cmp
test
scas
idiv
pop
pop
sub
stc
lea
pop
stos
and
fisubrl
sbb
test
push
jbe
test
mov
sti
mov
adc
add
je
and
push
mov
xchg
sub
xor
pop
cmp
mov
push
stos
aam
popa
shll
or
or
nop
cmp
mov
std
fiaddl
lods
scas
sbb
sub
mov
sbb
clc
mov
adc
dec
add
mov
aad
pop
pop
jo
mov
jmp
nop
push
and
mov
in
dec
test
or
cmp
inc
nop
jae
lock
or
xchg
clc
test
cmpsl
or
ja
jp
jmp
mov
mov
xor
dec
and
mov
lods
sbb
clc
mov
jl
sbb
mov
aam
push
add
push
jmp
in
dec
xor
pop
call
sti
loop
pop
je
adc
adc
adc
jnp
sbb
js
xchg
and
push
xchg
adc
mov
mov
negb
andl
push
mov
sbb
cli
add
imul
jmp
mov
fsubs
push
or
xor
pop
test
jno
lcall
call
add
jo
adc
jns
pop
das
lock
shrl
mov
xor
push
cli
pop
arpl
inc
ja
cmp
add
out
mov
pop
movsl
jnp,pn
or
stc
mov
hlt
and
aam
js
mov
or
or
scas
daa
mov
lcall
push
addr16
cwtl
sbb
aaa
pop
test
test
int
mov
cmp
fbld
push
adc
inc
mov
dec
scas
add
add
pop
mov
rolb
iret
jge
sub
addl
loope
out
xchg
push
cmp
pop
es
mov
lods
ss
addr16
imul
arpl
es
clc
push
cmp
je
dec
inc
mov
test
push
shll
add
sub
hlt
imul
hlt
mov
xchg
pop
xlat
dec
enter
lods
or
mov
or
xchg
addr16
push
push
mov
popf
adc
inc
sbb
mov
mov
ret
popf
mov
adc
clc
add
or
jl
push
fwait
pop
add
cltd
insb
mov
bound
dec
and
mov
adc
push
inc
std
sub
out
xlat
outsb
aam
xchg
ror
and
lock
imul
jp
push
jne
add
add
ret
mov
jne
sti
mov
lock
hlt
cltd
mul
test
jmp
lahf
cld
pop
mov
pop
dec
xchg
inc
mov
aas
dec
dec
mov
movsb
dec
dec
xchg
ljmp
xchg
xchg
adc
rorl
cmpsl
adc
dec
outsl
adc
faddp
stos
andl
daa
notb
movsl
adc
xlat
or
cwtl
jmp
xor
mov
test
sbb
jne
leave
mov
jmp
add
push
sub
in
and
pusha
mov
cmpsl
jp
test
jns
sub
adc
mov
into
cmp
addr16
pusha
mov
inc
cmp
sbb
lock
icebp
and
pop
cld
mov
xor
inc
test
shll
xchg
push
push
sbb
inc
je
jmp
loop
dec
mov
ljmp
sarb
ret
cmp
pop
dec
pop
add
aam
add
xchg
dec
inc
mov
int
jmp
das
dec
add
nop
out
fs
js
inc
les
mov
fisubrl
cmp
lret
fs
cs
push
sub
and
out
and
add
repnz
mov
mov
jge
cmp
mov
scas
call
sub
repz
dec
cwtl
stos
pop
jno
cmp
sub
xor
sub
cmp
adc
mov
sahf
pop
pop
jl
out
es
es
xlat
aaa
fidivl
lds
inc
addr16
push
or
aam
pop
push
dec
push
or
push
and
shlw
in
mov
jno
push
sub
stos
mov
and
inc
jne
shl
sbb
push
and
dec
inc
jp
and
test
or
repz
jne
adc
stc
xor
or
sbb
movsb
jne
jo
loop
pop
jbe
sub
mov
sbb
leave
shl
jbe
in
mov
cli
nop
enter
pop
lret
cs
loopne
mov
and
int
mov
pop
add
inc
xchg
loop
push
ret
dec
out
mov
rorb
stos
xchg
insl
push
push
mov
sbb
addr16
pop
sbb
dec
in
movsl
fmuls
sbb
jecxz
adc
mov
aaa
jmp
out
push
jmp
ror
sbb
cwtl
push
sarl
jns
sbb
xchg
and
in
jbe
pop
inc
sbb
dec
add
cmp
and
jae
add
loopne
or
movsb
jae
mov
call
push
stc
int3
mov
sbb
cltd
clc
js
xchg
mov
mov
insl
mov
cmc
in
cs
or
adc
mov
pop
xchg
sbb
xor
add
shrl
push
mov
and
and
movsl
lock
cmp
and
cmp
lea
mov
pop
lock
sbb
add
push
push
xchg
xchg
clc
mov
scas
fmull
scas
mov
jmp
dec
mov
mov
xchg
cmp
pusha
jg,pt
mov
inc
mov
jp
mov
test
xchg
jecxz
out
scas
in
inc
rclb
add
dec
imul
inc
je
add
cmp
jbe
mov
or
inc
sbb
adc
inc
int3
dec
icebp
and
clc
shll
or
xchg
mov
cmp
push
jb
icebp
xor
pop
das
push
push
ss
add
lcall
xor
push
jb
cmpsl
sbb
pop
fisubrl
cwtl
adc
cmovle
adcb
sub
aam
scas
sub
xchg
stos
dec
shlb
xchg
sub
les
push
lahf
aad
add
rcrb
aad
lea
int3
push
mov
push
adc
out
stos
out
int
dec
movsl
js
mov
sub
mov
adc
out
sarl
pop
lret
xchg
fisubl
jne
xor
adc
lret
pop
push
jmp
lahf
scas
pop
dec
or
popa
xor
jle
inc
test
inc
xor
in
les
push
cmp
sub
push
mov
and
fildl
sbb
cmpsl
and
xchg
jle
and
bound
push
in
jo
cmp
cwtl
dec
add
dec
sarb
jno
pop
cmpsl
dec
mov
ja
setge
popa
lret
test
in
sub
pop
movsl
or
lcall
sbb
aad
push
rclb
shll
or
xor
pop
popf
push
jg
fwait
sbb
xchg
pushf
add
aaa
push
pusha
push
loop
lods
outsb
xchg
in
fsubrl
dec
mov
mov
inc
rorl
add
jg
push
aad
pop
pop
bnd
mov
rolb
add
adc
cld
push
sbb
add
test
pop
movsl
roll
or
mov
dec
adc
popa
push
sub
sbb
js
insb
sbb
or
xchg
lea
scas
subb
dec
arpl
nop
inc
lcall
imul
sub
jno
mov
dec
mov
cmpsb
mov
pusha
mov
push
and
iret
mov
pop
fisttpll
inc
ret
and
mov
and
test
pop
shr
xchg
sub
in
shl
cmp
push
test
xchg
lcall
out
or
scas
pop
ljmp
sub
pop
xor
jnp
subb
loope
pop
jnp
xchg
ret
xor
dec
loop
aas
insl
adc
push
or
adcl
cmpsb
push
add
push
aam
sub
xchg
inc
jmp
mov
mov
popa
dec
dec
xchg
mov
pop
sub
popf
lahf
xchg
jbe
sub
aam
dec
je
sbb
push
xlat
mov
or
sahf
cmp
dec
fistl
shrb
add
pop
out
rcrb
push
leave
add
lods
mov
loope
xchg
loope
addr16
cmpsb
rcl
xchg
ret
or
das
xor
jge
xchg
jg
mov
sub
pushf
mov
fbstp
in
add
inc
dec
dec
sbb
push
adcl
jae
lcall
add
adc
loope
mov
addr16
ffreep
imul
loop
add
inc
repz
nop
push
cmp
jle
and
jmp
push
push
mov
and
jecxz
mov
pushf
dec
cltd
pop
loopne
add
xorl
push
sbb
inc
xchg
and
sbb
test
push
cmp
and
push
loope
cmp
jmp
mov
lret
je
insb
aad
cltd
shrb
jp
adc
aaa
push
sub
je
or
jg
dec
test
jp
adc
outsb
sub
xchg
push
movsl
adc
inc
or
sub
mov
aad
cmp
out
lret
mov
gs
lods
jno
jg
mov
and
mov
mov
jge,pt
pop
arpl
jne
and
xchg
mov
push
jo
subb
lahf
clc
add
push
data16
pusha
adc
fildl
and
in
mov
mov
maxps
loop
lods
push
cmp
ljmp
or
loop
xchg
loope
dec
ret
js
push
rorb
scas
cmp
inc
add
mov
or
adc
shlb
cmp
stc
loop
in
outsb
lods
scas
jne
push
sbb
fwait
mov
sbb
ljmp
insb
out
aam
jo
lock
dec
xabort
add
jbe
inc
inc
mov
mov
jge
add
lock
mov
xchg
mov
ret
les
shrl
and
test
adc
xchg
inc
inc
sub
mov
xchg
ret
push
in
das
lock
and
sub
out
inc
mov
ljmp
xor
push
cmp
out
fwait
lods
sbb
mov
cmpsb
jl
push
int
es
mov
and
lock
outsb
pop
xchg
out
adc
jp
xor
test
stos
les
ret
aad
filds
sahf
gs
popf
mov
jbe
leave
aas
push
or
dec
mov
out
and
fs
and
imul
xchg
jne
gs
mov
jae
enter
mov
dec
push
in
sub
jl
in
push
rolb
and
add
clc
jg
ds
add
and
or
sbb
imul
nop
xchg
test
pop
push
jge
mov
or
repnz
and
movl
in
or
inc
push
js
push
out
rorb
out
clc
aaa
mov
loop
lret
add
xor
loopne
scas
mov
ds
jecxz
cwtl
or
add
rolb
push
stc
movb
adc
jp
jle
cwtl
repnz
xor
or
inc
jmp
lcall
jmp
mov
add
cmp
jl
pop
xor
daa
lahf
out
movsb
mov
aam
xchg
hlt
mov
in
loop
inc
sbb
leave
adcb
pop
orl
jns
dec
je
push
sub
jl
es
into
mov
rcrl
stos
cli
sahf
pop
fistpll
std
fadd
push
shl
lods
or
cmp
jo
shrb
pop
adcb
dec
les
ds
cmp
and
loop
or
pop
inc
or
cld
std
sub
std
sti
cmp
push
cwtl
nop
mov
movsb
sti
mov
je
movsl
mov
aam
sub
push
inc
mov
xchg
or
sbbb
loop
pop
lock
push
lds
aam
or
inc
or
in
outsb
cmp
or
or
xchg
movb
sub
incb
lcall
fnsave
and
and
pop
mov
out
cmp
xchg
call
in
push
out
flds
mov
sbb
int
mov
push
mov
sub
shrl
lret
inc
inc
and
lcall
and
or
and
adc
shr
ljmp
push
sti
pop
jmp
shrb
mov
test
xchg
and
sbb
mov
jo
repz
cld
sub
push
push
push
insb
and
pop
fcoml
push
inc
in
adc
and
popa
aad
cmc
or
mov
addr16
xchg
xchg
test
rclb
sub
mov
push
mov
or
sti
and
adcb
mov
fs
icebp
push
out
pop
or
mov
pop
xchg
cmp
mov
or
xor
les
xor
clc
imul
clc
scas
sbbl
push
stc
test
ja
adc
add
dec
xchg
jne
subb
cwtl
push
mov
mov
fisubs
fidivrs
fists
imul
sbb
test
pop
sub
push
cwtl
push
sub
addb
imul
movsl
pop
mov
jns
cmp
pop
ret
sti
lret
add
push
jl
mov
mov
repz
xor
or
es
xor
jnp
mov
rcr
bound
mov
xchg
outsb
cmpsb
mov
mov
lret
inc
adc
mov
stos
sbb
xchg
imul
push
repnz
sub
xor
test
add
stos
pop
data16
jns
pushf
scas
pop
jae
mov
jmp
add
ja
cmp
push
ret
cmovb
fcmovbe
mov
shlb
and
scas
and
es
lods
imul
adc
rorb
pop
cmp
in
or
pop
in
sbb
xor
push
jecxz
fxch
bound
push
arpl
xchg
inc
call
inc
xchg
fnstcw
mov
or
inc
jbe
push
adc
push
and
aas
lock
out
mov
push
sub
stos
dec
pop
mov
jp
mov
sar
pop
loope
rorl
clc
std
loop
inc
mov
sub
rcr
fsubp
adc
lds
jle
dec
or
insl
js
sub
mov
out
mov
imul
jp
or
mov
inc
xor
sbb
out
xchg
sahf
mov
or
cmp
jo
sbb
or
mov
mov
jecxz
inc
outsl
mov
cmc
jo
sbb
cmp
sbb
js
test
subl
arpl
aas
inc
arpl
push
sub
cmc
xlat
mov
filds
xchg
jl
xlat
fdiv
xlat
hlt
scas
adc
scas
insb
stos
xorb
add
jp
loope
or
mov
mov
movsb
shl
jne
cmp
ss
bound
stos
push
lock
push
and
dec
jl
sub
loopne
dec
aaa
inc
insl
push
pop
repnz
inc
adc
cs
js
mov
inc
pop
fistpll
fdivl
mov
clc
mov
mov
cmp
xchg
sbb
aas
cwtl
movsb
sub
mov
test
adc
jl
push
loope
les
mov
ret
push
dec
or
test
iret
popf
ret
mov
add
mov
adc
lock
shl
mov
add
fistl
adc
repnz
or
sarb
test
hlt
and
in
mov
pop
dec
ret
outsl
dec
call
aaa
cmp
aas
mov
push
add
in
jnp
popa
push
mov
mov
or
inc
js
shlb
jae
lods
cs
ss
aam
mov
and
adc
pop
pusha
cmpsl
jg
aad
and
pop
hlt
js
cmp
and
pushf
xlat
push
push
sahf
icebp
jae
fdiv
dec
mov
mov
add
movsb
std
mov
sbb
xorl
sbb
sub
xor
ss
fstpl
mov
dec
xor
lods
pop
push
cmp
pop
fadd
out
adc
mov
adc
mov
pusha
push
jg
jmp
mov
cmp
arpl
add
loope
cmp
andb
leave
mov
xchg
xor
fdivp
adc
sub
popa
ss
jno
call
nop
shl
xchg
jecxz
mov
dec
jl
mov
inc
cli
fcomp
add
das
push
aad
push
cld
xor
inc
aad
sbb
cmp
mov
inc
fimull
movsb
mov
decb
scas
stos
dec
fs
pop
shrl
jg
daa
movsl
and
pop
jno
test
je
mov
cmp
daa
js
loop
push
clc
inc
pop
pusha
or
push
pop
rorb
in
ds
sbb
lods
mov
enter
fisubrs
clc
out
mov
push
xor
inc
fsubrl
mov
pop
inc
xchg
dec
xor
xchg
mov
pop
adc
movsl
jb
arpl
cmpsl
cli
xor
xor
xchg
test
sbb
pop
orb
scas
mov
sti
mov
loopne
adc
push
stc
sub
cltd
clc
adc
aaa
jae
div
jne
and
mov
aad
into
jbe
xor
jnp
pop
dec
arpl
out
cmp
jg
cmp
fdivs
inc
cli
pushf
shll
sti
in
xchg
ret
addr16
push
outsl
sbb
sbb
inc
mov
fimull
push
lcall
sbb
dec
fwait
leave
inc
mov
jmp
push
push
mull
or
pop
cmc
adc
cmp
cmp
mov
insb
or
insb
sub
xor
push
and
push
add
pushf
ret
dec
into
mov
je
dec
std
add
pop
pop
das
xor
mov
cmc
inc
scas
xchg
stos
in
fisubrs
cmp
movsb
push
jmp
mov
sbb
adc
insb
sbb
or
cli
dec
cli
or
mov
outsb
xor
cli
push
test
lcall
jb
cmp
xor
and
jp
xor
or
in
jo
mov
push
sub
mov
sbb
jge
call
mov
push
int3
aam
dec
decl
and
imul
popa
jl
xor
cmp
scas
test
jo
or
push
testb
push
mov
in
mov
lcall
add
cmpl
int3
jbe
nop
pushl
or
mov
dec
add
and
xchg
in
cmp
repnz
dec
pusha
mov
cmp
xchg
dec
imul
idivb
jbe
inc
xchg
subb
dec
sbb
sbb
jecxz
fisubrs
cmc
dec
push
cmp
call
cwtl
mov
sahf
popf
sbb
sbb
add
pusha
lock
mov
outsl
cmpsb
jo
sub
fdivr
mov
push
jo
add
mov
sbb
and
sbb
dec
xchg
loopne
pop
cmp
or
xor
arpl
add
push
pop
test
sub
sub
dec
push
insl
je
popf
fimull
lock
dec
movntps
ficoml
push
lea
iret
sbb
ljmp
aam
pop
sub
jg
sub
push
adc
scas
adc
popa
cli
cmp
sbb
ss
cmpsb
dec
je
xchg
or
in
ljmp
push
push
movlps
jb
mov
xchg
gs
pop
cs
xchg
mov
add
adc
in
pop
les
fnsave
jmp
jo
mov
dec
in
scas
add
xchg
jle
shl
xor
push
js
mov
mov
dec
cmpsb
aaa
ljmp
pop
lret
mov
lret
int
test
clc
inc
inc
dec
pop
xor
test
adc
movsl
mov
inc
jge
push
into
jecxz
int
addr16
inc
adc
int
and
push
cli
and
arpl
xchg
popa
push
fisubs
xor
lds
mov
xor
lahf
lock
fadds
pop
ret
out
pop
bound
mov
sti
outsb
sbb
js
and
nop
sbb
rcrb
push
and
push
shl
loope
mov
popf
loopne
push
jbe
xor
push
push
les
std
loope
push
xchg
cmp
jg
xor
mov
in
test
mov
repz
inc
in
jg
inc
std
push
xchg
xchg
sub
jl
sbb
outsl
mov
shrb
repz
call
popf
xchg
nop
pop
sbb
test
mov
test
pop
test
xchg
shlb
ror
xchg
cmpsl
xor
stos
jbe
mov
jl
bound
mov
lret
or
addr16
ret
loop
ficompl
add
push
mov
scas
pop
aad
push
leave
mov
sbb
or
mov
sbb
xchg
scas
sub
movsl
cmc
in
les
or
inc
in
lahf
cmp
or
cs
sbb
inc
das
test
or
add
nop
testl
jle
addb
std
sbb
xchg
aam
prefetch
ja
jnp
or
and
dec
adc
hlt
sbb
or
lock
mov
orb
js
or
or
ljmp
push
cmp
pop
loope
pop
sahf
push
into
aaa
outsb
hlt
push
cmp
dec
push
int3
loopne
fwait
shll
inc
xor
push
shl
push
sub
and
mov
imul
jmp
lret
nop
scas
popa
mov
mov
inc
dec
dec
icebp
pop
aas
and
mov
push
rol
or
mov
js
mov
outsl
add
notb
mov
push
mov
cmc
mov
sub
int
jmp
cli
mov
cmp
movsb
jle
inc
mov
cmpl
cli
push
mov
dec
loop
jmp
sahf
fwait
mov
cltd
and
add
std
push
test
bound
xchg
pop
push
test
dec
filds
ret
pop
inc
mov
dec
jo
out
fsubrp
dec
fisttps
loopne
pop
fcomi
or
insb
stos
jge
mov
jle
clc
lods
and
add
pop
or
repz
enter
add
sbb
cmp
nop
outsl
mov
roll
dec
add
sbb
popa
sub
or
outsl
jnp
mov
lock
movb
mov
add
rolb
fisttpll
sar
test
mov
mov
sbb
inc
cmp
push
inc
ret
rol
pop
sbb
jp
or
fs
lock
subb
arpl
push
sub
or
clc
stc
ss
mov
pop
loop
rclb
mov
pop
pop
mov
jecxz
out
push
sbb
roll
imul
lret
sbb
jno
mov
mov
push
jle
pop
xchg
and
cmp
int3
mov
into
cli
add
imul
push
ret
or
pop
add
scas
subl
icebp
inc
rcrl
sub
pop
movsl
cmp
xor
and
cld
fldl
rcrl
lret
pusha
orl
les
setne
adc
push
data16
xchg
pushl
test
sub
adc
adc
ret
out
dec
xor
std
and
or
hlt
sub
aam
mov
jge
xchg
and
mov
daa
clts
push
jge
adc
dec
clc
outsl
enter
lcall
stc
pusha
je
aaa
or
jge
imul
sbb
bound
repnz
daa
aad
push
fs
leave
inc
and
xchg
aam
dec
inc
and
insl
rcrl
sub
insb
push
loop
adc
fmull
cli
shl
or
or
push
iret
sub
inc
dec
or
insl
push
xchg
scas
push
sbb
fcoml
inc
das
ss
scas
mov
sbb
pop
pusha
mov
addl
inc
push
sarl
fldenv
loope
cmp
jl
adc
leave
popa
data16
pop
call
fsubl
push
cmp
pop
test
pop
adc
mov
in
cmp
xlat
in
xchg
dec
shlb
adc
push
ss
mov
mov
add
ffree
or
inc
andl
xchg
inc
ljmp
movsl
outsb
pusha
or
sub
mov
mull
sbb
inc
ret
sub
xor
xor
dec
mov
inc
dec
pop
xchg
pusha
mov
add
xor
xlat
dec
mov
sbb
rcl
cld
push
or
mov
xchg
sahf
add
xor
stos
das
sbb
ret
into
push
adc
andb
movups
pop
cmp
ja
push
pop
xor
mov
sti
lret
sub
cmp
jo
fimuls
inc
popa
gs
push
ljmp
pop
pusha
xlat
rorl
xchg
or
mov
fisubs
sbb
icebp
mov
sbb
mov
aaa
adc
push
movhps
xlat
repz
and
sbb
fdivrs
push
and
mov
orl
sub
adc
or
jp
test
imul
push
shrl
sti
insl
xchg
add
adc
lret
push
adc
jbe
mov
sub
jl
add
repz
adc
sub
mov
push
cmp
mov
out
or
lds
push
inc
push
cmp
or
pop
push
movb
lea
mov
push
xchg
insb
adc
leave
xchg
ret
xor
ror
jnp
sarb
or
inc
enter
iret
push
sbb
in
jp
mov
scas
sti
sub
insl
les
lea
sbb
sbb
std
roll
ljmp
fdivrp
push
ret
or
jecxz
adc
roll
adc
fabs
movsl
lock
xchg
lds
and
loope
xlat
repz
ljmp
loop
inc
mov
imul
es
mov
xchg
dec
cmp
ljmp
fldl
cld
popl
test
push
hlt
sti
jb
sbb
adc
jne
xor
mov
jge
fisubrs
and
sub
repnz
pop
subb
repz
adc
cmp
pusha
mov
call
les
icebp
adc
sub
clc
push
jp
push
mov
out
aaa
adcl
decl
pop
test
adc
pop
xchg
decl
push
fldt
lods
jg
push
jno
lret
or
or
push
jo
out
jne
push
pop
pop
xchg
xor
ficomps
insl
mov
iret
and
sti
rol
jno
insb
jbe
nop
xchg
or
push
push
xchg
or
aaa
movups
pop
fwait
inc
loope
mov
lea
pusha
into
xor
outsb
es
cltd
negl
pushf
push
rclb
jno
pop
cmp
prefetch
or
xchg
mov
andb
fistl
sub
aas
insb
fstpt
fidivs
adc
adc
or
test
jne
sub
lds
hlt
rorl
sbb
inc
das
pop
xchg
stos
mov
cli
stos
pop
orl
mov
enter
cltd
popa
lcall
jno
sbb
fsubrp
test
inc
lret
add
cmpsl
loope
or
jno
push
jle
add
xchg
icebp
call
jo
mov
dec
mov
mov
in
or
inc
inc
mov
add
mov
mov
lahf
jno
jle
xor
mov
mov
cld
lahf
mov
xchg
cmp
mov
lods
sbb
lock
inc
adc
jmp
ret
lods
jp
adc
stos
lods
mov
push
add
pop
push
loop
addl
hlt
data16
push
pop
jecxz
clc
xchg
push
inc
fistpl
sarb
xchg
negb
and
push
jnp
cli
xor
stos
xor
inc
sbb
bound
xorl
sub
sbb
mov
xor
push
jmp
cmp
test
in
loopne
dec
push
add
sub
hlt
lret
mov
adc
rcrb
clc
scas
sti
and
mov
inc
jp
dec
cmp
and
cmp
and
dec
mov
cmp
adc
outsb
add
adc
ds
dec
mov
lcall
push
lods
cmpsb
shrb
imul
adcb
cli
ficoms
xchg
cmp
std
sbb
incl
rclb
in
into
loope
fisttps
mov
outsb
push
mov
ffreep
add
dec
inc
pop
jns
sbb
pop
gs
lret
jbe
pop
rcll
icebp
loope
cld
cltd
insb
and
or
imul
outsb
sbb
sub
push
inc
lock
and
sbb
mov
rcr
adc
adc
bound
sti
fdivrs
test
jg
mov
sub
pop
mov
mov
xchg
jp
aas
cmp
ret
xchg
nop
daa
shlb
mov
jge
je
cli
xchg
ret
sub
fs
and
jmp
dec
lods
pop
xchg
xor
jg
stos
push
arpl
scas
fwait
gs
adc
out
adcb
inc
cmp
dec
adc
aas
sub
dec
pop
add
dec
jns
icebp
adc
cmp
pop
mov
icebp
jge
sub
pop
cmp
or
pop
cmpsl
ss
pusha
imul
dec
mov
inc
lds
and
hlt
adc
mov
mov
inc
arpl
xchg
rorl
dec
cmp
and
ss
or
mov
dec
arpl
js
movsl
mov
paddsw
push
sbb
andb
adc
dec
dec
mov
adc
insb
jl
sub
inc
add
repnz
pop
xchg
movsb
hlt
mov
jecxz
pop
sahf
shll
sarb
sbb
mov
jle
mov
jmp
test
nop
outsb
dec
dec
add
cmp
insb
mov
mov
clc
aad
fwait
xor
popa
jge
mov
adc
std
add
pop
cmp
adc
pop
adc
cmc
cmp
test
sbb
cli
popa
call
mov
mov
lock
movsl
xchg
das
out
or
inc
sti
test
das
arpl
pusha
test
repz
mov
cltd
add
shll
cmpsl
xchg
push
ret
sub
scas
lods
jno
arpl
into
add
loop
imul
insb
or
insl
shrb
cltd
mov
pop
sub
fsts
add
jecxz
dec
jne
dec
aas
lock
enter
lahf
testb
pop
mulb
cmp
jae
scas
gs
mov
das
mov
xor
push
in
dec
cmp
mov
add
adc
arpl
inc
rcrl
jg
cmp
rclb
dec
xchg
sub
mov
push
jae
dec
mov
jmp
pop
inc
scas
and
fwait
xor
icebp
and
in
xlat
pop
adcb
push
xlat
adc
pop
inc
pop
or
insb
rorl
imul
pop
fdiv
aam
repnz
sbb
mov
testb
xchg
outsb
lcall
mov
mov
orb
gs
shlb
daa
xor
mov
ljmp
fldt
cmpsb
jbe
sbb
mov
ss
fsubl
push
outsb
and
sbb
inc
mov
hlt
int
in
xchg
loop
into
xchg
jb
sti
pop
xchg
mov
sub
fdivp
in
mov
les
adc
xchg
clc
orl
lock
mov
xchg
loopne
pop
or
inc
xor
xor
cmp
rolb
roll
jns
push
fs
xchg
das
inc
notb
cld
stos
sub
mov
dec
mull
or
cmc
mov
xchg
shlb
decb
rcl
rolb
sub
rclb
jo
add
dec
int
std
or
imul
loop
mov
add
js
jb
pop
cmc
mov
jp
das
mov
mov
xchg
or
scas
negb
pop
fsubs
adc
mov
cld
ljmp
and
aad
bound
sbb
jnp
xor
jb
sub
jmp
jo
sub
sbb
mov
aaa
xlat
repz
inc
fs
ret
push
dec
xchg
movsl
lret
ss
fidivrl
dec
and
add
ret
sti
test
int3
leave
outsl
mov
flds
stos
add
cmp
xchg
push
push
sbb
xchg
jne
mov
jmp
mov
loopne
outsl
fwait
in
sbb
add
add
arpl
mov
cmc
or
das
movsb
or
sti
stc
mov
xchg
and
inc
lea
aaa
loope
imul
inc
test
add
xchg
push
or
pushf
pop
fcmovnb
pop
xchg
cmp
loopne
or
orl
hlt
fwait
inc
jmp
xchg
mov
lahf
push
outsb
and
mov
sub
dec
mov
sar
sti
push
cli
adcb
mov
loopne
sbb
push
mov
mov
movups
mov
or
cmp
jae
lcall
cwtl
test
pop
add
pop
in
shll
adc
rolb
jl
std
dec
and
add
sub
pop
fs
stos
or
or
gs
or
cmp
or
adc
jge
into
jb
jge
jg
mov
inc
sub
repnz
icebp
adc
sub
and
push
and
and
dec
lahf
lods
lahf
add
add
icebp
adc
loopne
aaa
sub
jp
dec
cmp
es
pop
cmp
xchg
call
cs
leave
xchg
rorb
inc
mov
les
mov
adc
aas
dec
cmp
call
orb
cltd
or
mov
xor
test
or
fmull
cmp
sub
loope
lahf
xor
or
add
or
or
ljmp
rcll
cld
sub
decl
xchg
dec
jmp
test
aas
sahf
push
popf
or
cmp
jg
es
xchg
and
fimuls
xchg
jmp
pop
mov
cs
pop
ljmp
pop
push
ret
pusha
add
lea
mov
add
and
cld
mov
xor
sbb
add
mov
push
das
inc
ljmp
ret
xor
xor
ja
scas
clc
sub
add
nop
push
outsl
loope
inc
or
rcr
movsb
sub
lods
push
js
sub
lods
scas
sbbl
push
xor
ljmp
or
add
imul
cs
pop
imul
test
cld
lods
mov
and
ds
cmp
fistps
cmp
js
fucomp
xor
push
imul
dec
inc
psllw
sub
or
mov
gs
sbb
decb
test
pop
inc
add
or
adc
mov
loopne
adc
and
push
xchg
cmp
jg
push
jle
sbb
xchg
inc
cmp
jg
cmp
or
cmp
negb
mov
ljmp
xor
xchg
movsb
cmp
lods
dec
add
xor
faddl
arpl
cs
loopne
add
jle
mov
icebp
or
xchg
jp
push
in
sub
push
mov
inc
add
sbb
mov
loopne
js
out
pop
rolb
lret
stos
addb
aad
popf
es
xchg
loop
outsb
jb
les
loop
push
xor
adc
add
call
pop
mov
clc
xchg
and
sbb
add
movsb
sbb
test
pop
leave
rolb
stos
fldt
test
leave
mov
fsubrl
push
jnp
orb
jle
fidivrl
hlt
pushf
test
test
les
shlb
jge
and
fnstsw
push
push
xor
or
adc
adc
xchg
sub
mov
rcrb
int3
inc
dec
xor
adc
popf
fisttpl
out
mov
fimull
or
jecxz
call
shlb
lahf
lret
mov
popa
cmp
sub
jecxz
in
inc
pop
add
cmp
fmull
push
pop
outsb
and
popa
inc
mov
bound
cmp
mov
inc
loop
pop
fwait
or
mov
and
jno
fcmovnu
or
cld
add
dec
test
addb
push
pop
lcall
xchg
or
ret
cmpsb
jecxz
push
fstpl
add
pop
push
cmp
pop
pop
out
ret
or
jne
sub
call
cmp
clc
adc
push
jp
jecxz
call
pop
sbbl
mov
aam
int3
push
call
xchg
dec
adc
cmpsb
cmp
sbb
or
sub
add
ljmp
test
in
clc
ret
push
daa
mov
sub
mov
fisttpll
repz
push
test
mov
outsl
call
xchg
xchg
loopne,pt
outsb
xor
mov
mov
mov
daa
imul
call
shrl
jnp
cld
add
scas
addb
lahf
incb
aam
or
adc
adc
add
pop
xchg
adc
or
les
adc
or
and
xor
fdivs
xor
pushf
inc
mov
or
out
add
sub
mov
or
pop
cltd
lods
scas
jbe
imul
mov
sub
add
dec
js
sbb
push
mov
inc
outsb
aas
pop
repz
cmp
pop
adc
mov
sbb
mov
test
push
pop
cmc
pop
gs
pop
aad
mov
lds
fisttps
imul
outsb
cmp
jns
add
pop
inc
xor
dec
mov
xchg
aaa
cli
jae
lretw
loop
mov
stos
add
in
adc
insb
divb
xlat
shl
xor
push
loop
adc
nop
add
fsub
add
in
mov
push
inc
mov
jle
fsubl
xor
in
enter
adc
add
inc
loop
xor
inc
sbb
and
loope
pop
push
cmp
xor
sub
in
stc
ss
mov
aas
ss
stos
fisubl
jle
call
adc
jo
scas
popf
pushf
scas
rcll
aam
or
push
lahf
xchg
sar
dec
and
mov
jne
loopne
ret
mov
hlt
adc
ja
lods
jmp
in
xlat
mov
sub
movsl
mov
or
or
in
push
push
add
cmp
xor
fsubrl
in
or
or
jo
mov
mov
or
aaa
sub
push
jno
ss
mov
ret
ds
frndint
sahf
or
loope
push
xchg
rcrb
cmp
jo
xor
push
scas
dec
add
icebp
and
or
inc
adc
adc
sbb
jnp
and
push
sub
loopne
add
lock
hlt
hlt
js
mov
or
add
jle
pop
ficomps
ljmp
cltd
lock
jg
dec
mov
or
xchg
fs
js
ret
mov
push
mov
cs
mov
mov
cmpsl
push
dec
jecxz
sahf
xor
fs
out
es
push
imull
jno
jbe
mov
pop
mov
and
pusha
push
add
in
leave
pop
lock
imul
popa
dec
jl
mov
iret
hlt
push
xor
mov
adc
adc
sub
es
nop
ds
loop
sbb
mov
pop
in
outsb
cmp
decl
mov
daa
dec
push
leave
out
js
fimull
lcall
hlt
scas
addr16
mov
in
je
arpl
in
mov
push
and
ret
jo
lret
inc
pop
jns
sbb
sub
das
or
jmp
push
add
mov
jle
mov
xchg
mov
pop
mov
dec
mov
pop
pop
adc
into
add
shr
jo
or
push
fdivrl
pop
rcl
sbbb
cmpsb
sub
js
sbb
psubb
jmp
jl
scas
daa
loop
pop
mov
lock
cwtl
jb
fistpl
cmp
push
mov
sbb
enter
cmp
jno
mov
pop
or
pop
push
scas
dec
lock
push
jae
icebp
and
mov
shrl
push
or
sub
fwait
push
and
jb
xchg
rolb
push
lock
xor
adc
jl
mov
loop
mov
loop
iret
add
fsub
ret
xchg
iret
pop
inc
inc
sti
xchg
mov
repnz
mov
mov
sbb
add
and
and
xor
test
and
lods
jmp
xor
dec
push
aas
sbb
jb
sub
out
and
add
stos
mov
add
mov
adcl
dec
daa
dec
xor
adcl
pusha
test
icebp
scas
pop
inc
jp
outsb
sbb
mov
stc
test
shll
lret
jbe
jns
mov
xor
xchg
push
dec
inc
inc
js
cli
adc
insl
enter
push
and
jp
mov
cmp
cli
pop
in
xchg
xchg
jbe
add
adc
pop
cltd
push
mov
sub
mov
ret
stos
aad
out
idivb
mov
xor
add
inc
push
cmp
xchg
inc
and
jp
andb
add
mov
mov
mov
dec
enter
hlt
jae
adc
inc
inc
xchg
push
fcoml
rorb
mov
and
push
pushf
nop
or
add
inc
int3
arpl
cli
scas
mov
pusha
pusha
add
push
add
push
fdivrl
pop
jg
mov
pop
insl
inc
xorl
cwtl
out
fs
mov
lcall
sub
push
rolb
js
test
or
mov
jb
data16
xchg
hlt
lods
lods
mov
loop
das
jno
inc
xor
adc
movsb
cmp
popa
repz
jl
mov
div
pop
mov
and
sahf
add
cwtl
and
fisubrs
rorb
clc
scas
outsb
es
loop
and
mov
and
or
loopne
sbb
cmpsl
ja
and
iret
jg
cmp
pop
push
daa
addb
adc
sbb
adc
jns
mov
ss
test
cmp
fwait
int
sub
add
movsl
or
xor
ret
sbb
dec
cmpb
inc
pop
in
sbb
shl
inc
xchg
inc
daa
mov
pop
mov
mov
push
pusha
add
pop
cmp
cmc
cltd
xchg
jge
xor
cmc
mov
in
mov
popf
mov
icebp
sub
xlat
jge
dec
lods
mov
dec
test
push
lock
fsubl
orb
aad
repz
aaa
enter
xor
jp
clc
mull
sbb
mov
lahf
sbb
push
jne
mov
cltd
pushf
ficomps
add
sbbb
or
loopne
push
enter
mov
push
cs
adc
push
sub
and
faddl
xchg
test
adcl
lret
push
sub
cld
fistpl
ss
sub
getsec
mov
test
pop
mov
mov
jbe
ljmp
fsubs
jne
pusha
dec
in
push
or
ljmp
mov
mov
sarl
xchg
push
jmp
add
out
daa
sub
and
mov
loope
orb
inc
inc
mov
pop
xchg
fimull
dec
lret
and
ficoms
inc
push
pop
dec
and
sti
outsb
std
add
xchg
inc
xor
movsl
rcrb
lea
cmp
or
xor
pop
test
cmp
data16
mov
inc
std
pop
stc
xor
xchg
pop
mov
push
mov
sub
inc
movsb
jle
loope
adc
inc
and
or
xchg
add
fwait
or
aad
enter
f2xm1
lock
mov
int3
bound
jo
rolb
sbb
jo
or
add
repz
fld
rcll
or
push
jp
in
mov
imul
outsb
or
call
leave
sbb
xchg
dec
mov
xchg
icebp
roll
ffreep
mov
test
movsb
ja
jb
loope
sti
jmp
sbb
or
scas
add
loope
dec
aad
imul
dec
es
out
pushf
inc
mov
lock
es
sub
in
es
sub
push
and
cmovno
test
pop
and
push
mov
sub
nop
mov
dec
ret
and
andb
fadds
rolb
into
adc
lcall
mov
cmpsl
add
hlt
loopne
in
cmpsl
mov
mov
or
icebp
outsb
xchg
dec
jno
call
dec
mov
sbb
pop
inc
es
push
mov
ja
adc
insb
pop
pop
fcomip
lods
dec
and
ret
aad
xchg
push
cs
cli
call
mov
test
add
aad
sbb
push
add
pop
adc
sub
xchg
xchg
lret
aaa
movsb
inc
sbb
nop
movsb
ja
clc
lds
in
cmp
stc
loope
dec
or
stos
push
enter
roll
mov
sbb
nop
cmc
jns
adcl
push
je
cmp
xchg
push
cltd
inc
jno
pop
scas
fisubs
cwtl
mov
mov
inc
mov
or
mov
mov
fdiv
dec
xchg
mov
xchg
xchg
movsl
push
pop
sbb
jb
sub
idivb
rclb
cmp
aam
mov
aam
xchg
lods
push
jle
pop
add
pop
and
lods
shr
add
insb
xor
incl
sbb
dec
enter
push
jns
push
xchg
incb
sub
hlt
cmpsl
mov
xchg
iret
jbe
jnp
aam
ja
sahf
sub
out
lret
loope
xchg
ret
sub
aam
jg
mov
or
mov
aas
jne
loope
arpl
mov
push
xor
xchg
and
or
loop
jg
pop
jae,pn
pushf
xchg
enter
aaa
jnp
and
dec
cwtl
shlb
cld
adc
fisubrs
sbb
je
mov
fcompl
out
loop
bound
add
sub
mov
ljmp
sti
add
pop
mov
inc
nop
jmp
jnp
jno
dec
popa
sbb
push
dec
jmp
cmp
jnp
lcall
sub
pusha
pop
xor
popa
sub
pop
or
pusha
andb
and
sub
btl
mov
fbstp
gs
cltd
shlb
gs
shll
adc
sar
cmp
xor
lcall
push
out
imul
movsb
shl
cmp
inc
inc
sub
ja
xor
iret
daa
xchg
inc
test
movl
jp
mov
cld
lcall
cmp
sub
xchg
xchg
cmp
sbb
sti
mov
aas
sbb
pop
push
pop
or
or
insl
ljmp
mov
lods
ret
cmc
call
inc
ret
cmpsl
sub
push
sbb
xor
push
aas
movsb
aaa
hlt
dec
hlt
sbb
jo
push
cmp
out
rcrb
int
mov
or
push
movsl
jbe
sbb
je
adc
outsl
out
std
in
add
andb
sub
hlt
xor
pop
mov
mov
push
lods
push
pop
bound
or
add
js
int3
loope
mov
and
cmp
test
cmp
negl
or
insl
clc
push
les
loop
xor
roll
xchg
jne
add
jge
mov
adc
mov
push
jmp
cmpb
or
inc
fs
push
pop
mov
in
call
jo
pop
arpl
mov
lahf
inc
xchg
jo
fsubr
mov
cli
adc
pop
cmp
add
jmp
or
sbb
loop
popa
inc
gs
mov
aaa
mov
addr16
cmpsb
pop
adc
mov
push
mov
sbb
mov
mov
ljmp
xchg
mov
idivl
popf
inc
xor
cmpsb
xor
loope
mov
push
outsb
add
int
ret
shlb
push
cli
sarl
clc
pop
mov
loopne
pop
hlt
loopne
jmp
in
sbbb
fstpl
je
pop
pmaxsw
shrb
movl
stos
jb
fs
sub
mov
jb
mov
jp,pt
xchg
dec
je
jl
fsubrl
aam
iret
addb
inc
fadds
clc
xchg
out
dec
ds
mov
xchg
in
mov
push
inc
rcr
jnp
adc
aas
mov
shll
setp
xchg
les
mov
stc
adcl
jecxz
add
cwtl
cli
add
cmp
mov
or
sub
push
jmp
ret
cmc
jecxz
push
push
cmc
das
test
sbb
jo
pop
test
xchg
xor
loopne
rep
dec
stos
pop
cmp
stos
movsb
xchg
imul
lea
popa
sbb
int3
sbb
sbb
sti
adc
js
cmp
lock
aad
int3
int
stos
ret
push
daa
pop
push
movsb
popa
xor
inc
cli
dec
testb
push
adc
addr16
or
int
mov
rcrb
inc
scas
in
test
test
test
jl
sbb
inc
push
jo
hlt
dec
shrb
sbbl
fsubrl
insb
sbbl
mov
or
xor
pop
sbb
test
es
pusha
or
aad
inc
les
or
add
add
cmp
out
out
jne
add
scas
mov
or
cmp
pop
neg
inc
cmp
repz
adc
ret
mov
add
cmp
fsubrs
into
outsl
dec
test
js
or
lret
sub
mov
push
sbb
jo
and
sarb
ror
rorb
addl
push
fnsave
and
add
mov
je
shrb
nop
mov
cld
sub
mov
int3
and
mov
push
es
xor
pop
push
lcall
adc
mov
ljmp
adc
ret
mov
mov
imul
and
aas
xor
pop
out
push
adc
cmp
mov
mov
ret
jecxz
mov
subl
dec
jnp
cmp
push
shll
xchg
ja
repz
or
movsb
movsb
inc
mov
or
decb
lret
jo
test
jb
dec
int
add
xchg
xchg
rcl
and
or
fwait
cli
mov
push
pop
pop
xlat
inc
push
bound
adcl
inc
mov
inc
mov
movsl
mov
push
xchg
clc
out
lcall
xchg
sub
cmp
xchg
inc
sub
repz
mov
inc
imul
xchg
fiadds
add
or
mov
xor
inc
or
sbb
pop
push
mov
cld
push
dec
cmc
and
or
jnp
inc
pop
je
pop
mov
ret
add
mov
ja
cmp
mov
fnsave
push
sbb
sub
and
stc
movsb
das
shrl
inc
andl
int3
into
mov
leave
push
or
dec
jne
ljmp
jbe
or
ds
data16
add
cmpsb
fidivs
ror
dec
sub
outsl
clc
cmpsb
movsb
rol
mov
sahf
mov
pop
pop
pop
sub
sahf
push
jbe
andb
imul
adc
mov
jo
rol
loope
es
sub
mov
fsubs
dec
mov
cmovnp
sbb
out
push
sbb
in
das
ss
das
lods
cs
in
sub
aam
inc
jmp
jb
xor
mov
jns
fistpll
popa
or
add
xor
mov
xor
arpl
shrl
cwtl
push
into
out
testb
test
push
xlat
mov
rcr
push
sbb
xor
add
loope
sbb
push
std
add
call
adc
loopne
sub
enter
or
xor
movsb
add
lods
lock
push
cld
clc
cmp
shl
jbe
sarl
rcrb
stos
sbb
das
insb
or
sbb
and
lcall
jle
in
pop
icebp
sarb
shlb
and
inc
adc
stc
out
std
push
and
add
mov
call
data16
cmp
addb
scas
or
add
adc
push
push
ljmp
fstpl
icebp
push
or
pushf
cmp
sub
adc
ret
bound
xchg
push
ljmp
dec
call
js
ljmp
insl
rcll
sub
mov
fnsave
shlb
add
xchg
dec
or
push
xchg
jo
add
and
adc
loope
or
mov
cs
adc
sub
punpckhwd
cmc
es
push
xor
pushf
adc
inc
xor
add
mov
mov
xor
fisubs
pop
pop
jge
aad
inc
sub
jo
hlt
add
or
ret
flds
shl
inc
add
xchg
scas
mov
lea
dec
test
loopne
inc
arpl
pop
sti
or
shll
rcrl
mov
inc
xchg
clc
fs
pop
add
mov
adc
mov
or
and
xor
jle
mov
and
pop
inc
pop
jo
daa
sbb
push
sbb
mov
sub
testl
add
int
mov
out
rorl
cltd
inc
pop
out
jbe
mov
mov
ljmp
push
inc
fdivs
mov
leave
shlb
leave
add
ret
add
lcall
or
jmp
pusha
xor
mov
fs
push
dec
cmp
mov
xchg
add
push
std
cmpsl
or
mov
mov
pop
ret
shl
and
test
insb
xor
in
ficoms
data16
call
test
mov
cmp
adc
mov
cmp
lret
mov
and
in
dec
jecxz
lret
add
cmp
sbb
out
mov
jge
pop
test
adc
insl
lods
fsubs
mov
mov
aam
adc
loopne
mov
je
dec
add
test
or
out
loopne
sarl
fldl
lds
xor
icebp
aad
dec
daa
add
rcr
nop
jnp
xchg
les
sbb
andb
jmp
ret
pop
fmulp
fwait
in
rcl
pop
shrl
pop
xor
sub
mov
test
adc
addl
add
enter
dec
std
test
addr16
and
xchg
xchg
adc
add
mov
xchg
xor
lods
inc
jecxz
sbbb
gs
push
imul
push
pop
pop
std
ljmp
fdivl
add
das
loopne
add
xchg
and
or
js
lods
push
rclb
push
hlt
clc
xor
add
or
ret
mov
movsb
add
mov
inc
inc
test
call
sbb
pop
mov
pop
mov
jge
fbld
push
add
ficompl
movsl
fisttpll
out
xor
pushf
pushf
fs
mov
in
cmp
js
sbb
shll
pop
js
mov
push
adc
fimuls
inc
aas
aaa
jg
dec
loope
lock
mov
pop
jo
lds
jne
cltd
test
sbbb
or
inc
ret
push
testb
jg
pop
pushf
mov
mov
sbb
mov
es
cli
lods
mov
xchg
clc
push
out
add
cmp
and
js
daa
add
push
push
and
scas
and
cmp
mov
loop
jne
adc
ds
sub
cmpsl
xorl
sub
imul
aas
testb
cmp
fdivr
decl
lock
div
cld
mov
aam
fcom
data16
lcall
loopne
add
inc
cwtl
inc
and
hlt
lock
push
and
mov
mov
sbb
cmpb
icebp
dec
inc
cmpsl
aaa
idivl
ljmp
call
fs
shrb
aad
inc
and
xlat
movsb
pop
ret
and
in
outsb
pusha
push
or
adc
push
fisttps
jmp
or
loopne
loop
fnstcw
insb
js
dec
xchg
mov
add
inc
cmpsb
imul
out
insl
test
sbb
out
mov
pop
xor
sub
push
movsl
outsl
and
mov
or
adc
insl
mov
jle
pop
push
das
push
push
lcall
xor
and
jl
sahf
add
fidivl
xor
add
add
pusha
pop
addr16
repz
sti
lret
cmpsl
std
addr16
sti
pop
rol
outsl
in
push
stos
adc
xchg
ljmp
sbb
dec
jbe
movsl
cmp
cmc
int
and
mov
mov
aam
dec
inc
jno
cld
daa
sub
je
mov
ja
cmp
adc
push
ds
push
lods
lods
add
insl
push
dec
xchg
xchg
xor
jae
pop
sbb
test
push
movsb
lods
mov
roll
lret
add
sti
fcmovbe
sub
fisubl
mov
pop
push
xchg
mov
cmpsl
dec
nop
scas
adc
movsb
dec
dec
xor
dec
in
rcll
or
add
imul
bound
or
loope
lock
and
push
mov
test
jne
cli
and
jb
xlat
popf
jno
mulb
call
adc
mov
sub
hlt
xor
mov
sbb
sbbl
push
push
adc
push
cltd
fsubrl
pushfw
xlat
and
iret
movsl
cmp
stc
ljmp
cmpl
pushf
andl
call
call
xor
mov
lods
sahf
push
xor
sbb
lock
and
movsl
cmovo
mov
inc
loopne
lock
loope
loop
mov
arpl
roll
sub
out
add
cli
mov
popa
push
test
xor
push
inc
or
push
mov
arpl
fdivl
sbb
ret
push
cmpsl
jecxz
fisubrs
push
xor
and
mov
xchg
scas
pusha
insl
fisttpll
xor
lret
adc
add
mov
dec
int
hlt
loopne
sti
or
imul
mov
mov
jl
jnp
mov
rol
clc
mov
test
add
and
mov
add
xor
push
scas
aam
mov
jl
pop
dec
push
jae
lock
mov
rcr
scas
push
ret
icebp
pop
mov
cltd
filds
mov
sbb
xorl
test
in
cmp
js
or
adcb
xchg
paddusw
add
lea
jb
std
mov
rcrb
pop
mov
in
aad
stos
jp
popa
cwtl
cmpl
arpl
jge
or
sti
lea
aam
rol
add
xor
imul
mov
adc
cmp
jno
xlat
pushf
pop
fmuls
add
pop
int
sbb
jno
jae
pop
pop
and
mov
rorb
cmp
and
outsl
sub
ja
jp
push
jg
fldl
rcrb
or
pop
xor
xchg
imul
xchg
cmp
mov
dec
sbb
test
das
jno
je
mov
hlt
inc
sahf
push
mov
jbe
stos
dec
loop
xchg
js
pop
xchg
xchg
xchg
inc
inc
mov
je
jb,pn
mov
out
push
or
or
dec
rcll
add
fwait
mov
in
ja
je
push
and
sbb
cmp
sbb
dec
stos
mov
outsb
lcall
bound
and
inc
sbb
cmpsl
rdtsc
adc
pushf
or
pop
movsl
imul
cmp
sub
cmp
mov
test
rolb
add
cs
sbb
rorl
adc
pop
insl
adc
push
loop
jmp
xlat
pop
pop
cmp
pop
or
insb
inc
roll
dec
add
shll
mov
cwtl
mov
shl
push
mov
mov
addr16
mov
testb
aad
int
in
movsb
test
dec
test
and
loope,pn
ret
jmp
mov
hlt
outsb
add
dec
xchg
cmp
jbe
xor
add
xchg
hlt
imul
pushf
ret
or
call
fadd
cmp
int3
test
ret
inc
mov
movsb
xlat
rcl
push
jno
cmp
loop
cmp
inc
sub
pop
cli
ljmp
out
mov
inc
adc
lahf
fdivp
std
sbb
lret
sti
adc
pop
xchg
aaa
and
push
and
into
jle
inc
scas
lret
add
movsl
test
cmp
mov
or
xor
dec
xchg
ret
mov
adc
loope
shl
mov
cmp
cmp
push
nop
mov
xlat
and
maskmovq
xchg
mov
push
mov
mov
xchg
notl
push
imul
sbb
mov
mov
imul
aaa
int
mov
test
dec
shlb
pop
sbb
add
sub
pop
fstps
mov
lods
mov
fdivp
sbb
mov
fmuls
mov
in
lds
paddb
push
out
xor
mov
bound
xlat
ret
xlat
enter
jl
loopne
icebp
mov
jbe
sub
adc
jge
out
inc
push
xchg
pop
adc
pop
push
aaa
sbb
subl
test
inc
xor
add
or
sarl
fwait
cmc
fimull
push
mov
sbb
xchg
pop
sti
sbb
sub
icebp
mov
mov
xchg
add
dec
test
stos
adc
ret
or
fimuls
cs
mov
or
jb
das
ss
clc
ret
sti
add
dec
push
add
adc
inc
push
scas
add
fistpl
sbb
mov
mov
sbb
mov
hlt
loopne
js
push
iret
add
mov
mov
jg
jns
or
push
inc
xor
mov
insl
lahf
mov
pop
je
insb
jnp
jg
in
mov
cmpsb
xchg
sbb
cmp
push
or
sarb
and
mov
lods
jle
add
test
test
daa
or
jo
aam
cs
jl
imul
sub
or
jp
push
jnp
push
xchg
mov
icebp
push
subb
vpor
sbb
jae
jecxz
cmc
dec
mov
jmp
fmull
shrb
int
popa
clc
out
and
pop
call
push
sub
icebp
mov
sbb
jg
sbb
mov
addl
pusha
ffree
dec
inc
add
sbb
pop
icebp
xor
iret
adc
hlt
sub
or
jmp
ljmp
push
cmp
dec
scas
vpavgw
pop
in
pusha
or
imul
addl
xchg
aad
pop
inc
mov
mov
lock
ds
lahf
mov
xchg
rcrl
or
push
and
adc
and
mov
insb
mov
pop
cmp
pusha
sti
xor
clc
loope
fcomps
out
pop
shlb
mov
pop
cld
daa
andb
xlat
lret
es
cwtl
sub
pusha
mov
cmp
mov
adc
jg
add
cmp
xchg
popf
dec
orl
cmpsb
mov
adc
sbb
cmp
js
test
mov
mov
mov
xchg
shr
inc
xor
jge
dec
sbb
pop
pop
xchg
push
mov
into
jbe
lds
sub
and
dec
test
sub
sbb
adc
or
fnstsw
pusha
mov
gs
xlat
es
aas
or
inc
out
stos
inc
nop
insl
mov
into
or
mov
aam
push
fstps
lods
inc
sub
fs
pop
ret
mov
mov
out
dec
aaa
xchg
dec
cli
push
inc
pop
ret
sbb
ret
push
jmp
enter
pop
aas
mov
push
js
mov
jle
nop
test
pop
test
scas
shl
jp,pt
repz
cld
outsl
mov
rol
add
jg
outsl
fwait
sub
mov
xorl
sub
aas
mov
xchg
lea
pusha
xchg
bound
mov
jp,pn
or
cld
addb
sub
es
mov
mov
iret
cmpsb
or
movsl
mov
or
cmpsl
iret
dec
add
loopne
xchg
adc
add
or
push
push
inc
in
loopne
test
dec
and
js
mov
lret
pop
pop
hlt
push
mov
test
dec
test
fdivs
mov
insb
xor
mov
fcoms
test
movsl
or
mov
push
jp
sub
testl
inc
xorl
jecxz
les
push
push
int3
andb
data16
jg
sub
mulb
pop
pop
mov
dec
xor
adc
xchg
jle
movsb
enter
mov
mov
stos
cmp
icebp
fistpl
mulb
and
or
lods
mov
imulb
stos
inc
jo
or
mov
xchg
dec
adc
and
mov
aad
cli
out
shrb
cmp
xlat
aaa
jl
int3
and
push
lds
cli
push
test
push
fidivl
out
xor
mov
sti
sbb
fs
dec
lea
int3
pop
adc
push
cmp
dec
dec
movsl
xor
loopne
loopne
or
loop
inc
add
push
push
push
cmp
xchg
mov
out
ret
lahf
sub
mov
and
ud1
jecxz
cmp
scas
pop
shl
fwait
jp
push
cs
cmpsb
fcomps
push
push
push
xchg
jg
mov
pop
shlb
mov
jp
push
inc
xor
jne
orl
pushf
fdiv
iret
divb
mov
pop
outsl
popl
mov
fimull
cmp
popa
and
test
loopne
incl
fsin
dec
mov
aas
xchg
pop
mov
sbb
xchg
xor
or
sub
out
hlt
add
add
mov
cmc
mov
call
mov
cmp
cwtl
sbb
pop
cmp
jno
shrb
cmp
cmp
pop
lea
mov
xchg
roll
mov
lcall
mov
mov
or
sahf
push
scas
push
xchg
cmp
push
jl
cld
jbe
pushl
dec
or
jl
icebp
iret
jmp
pushf
xor
cltd
gs
rolb
inc
movsl
add
jnp
sarb
cmc
test
iret
mov
sub
cmpsb
and
test
inc
bound
inc
aad
dec
mov
mov
push
adc
sbb
cli
mov
mov
incl
aaa
add
xor
test
lock
xor
or
xchg
push
jo
pop
jne
stos
lret
insb
sbb
dec
xchg
cltd
stos
pop
mov
das
add
pushf
data16
lahf
loope
adc
rorb
mov
xchg
insl
std
repz
out
adc
jge
je
dec
ss
push
jge
in
and
push
and
in
clc
lock
cld
inc
jmp
jbe
call
aaa
cld
repz
in
push
xchg
push
or
mov
std
or
cwtl
aaa
testl
fstps
aas
xchg
push
fstpl
mov
cmp
stos
mov
enter
jb
cmp
mov
out
jle
xchg
mov
or
pop
jg
aam
inc
or
ror
mov
inc
rcl
mov
mov
ds
or
pop
push
ret
xor
outsb
jae
cmp
arpl
mov
mov
pushf
shrb
pop
cld
lock
loopne
and
adc
rolb
add
sahf
push
jmp
popf
mov
in
push
sbb
mov
push
leave
mov
or
das
daa
push
out
push
adc
mov
xchg
dec
and
mov
sbb
inc
in
xor
jle
mov
jne
fcompl
mov
mov
lret
pop
or
out
jo
in
mov
fcompl
popa
out
lea
sub
clc
inc
cmp
es
js
mov
pop
adc
push
test
jmp
in
push
call
xchg
push
loop
stos
inc
or
push
xchg
inc
insl
dec
jp
fs
pop
sti
or
mov
mov
or
fs
jmp
loop
inc
imul
adc
add
sub
push
adc
cli
lret
cmp
cmp
fldt
dec
push
test
dec
loop
push
push
int3
and
cmc
rol
mov
sbb
jnp
inc
xchg
movsl
in
adcl
pop
movsb
add
repnz
into
mov
sub
in
mov
dec
clc
and
xor
add
mov
mov
outsb
lcall
mov
push
mov
adc
dec
js
fcomps
ljmp
or
cmp
sbb
xchg
lret
cld
repnz
add
xchg
imul
xor
dec
inc
in
sbb
repnz
pop
adc
ds
lods
in
pop
addb
and
xchg
xchg
pushf
sbb
das
or
jae
popa
or
xchg
xchg
sbb
adc
push
cmpsl
aas
xor
pop
dec
sbb
aaa
mov
jge
pusha
jne
mov
dec
enter
sarb
push
and
mov
fiadds
add
rcl
add
push
pop
fdiv
sub
mov
and
xlat
push
xchg
xor
xchg
hlt
dec
movsb
adc
test
test
leave
xor
sub
push
cmp
or
cmp
outsl
stos
dec
pushf
or
sub
pushl
mov
cmpsl
mov
imul
sbb
aaa
adc
sbb
adc
add
nop
push
xor
mov
push
inc
ja
sbb
mov
jecxz
add
xor
cmpsb
scas
or
outsl
cld
lahf
js
adc
shr
push
std
xor
cmp
lcall
add
pop
jo
mov
adc
jle
fistpll
es
scas
mov
jp
mov
les
adc
decb
mov
sub
push
add
push
mov
bound
gs
data16
inc
jnp
cmp
test
imul
sti
mov
mov
push
add
add
xor
xchg
xchg
sbbb
test
sub
jg
decl
fildl
and
xorb
mov
pusha
fs
fstpt
movsb
push
mov
sahf
lock
ja
rorb
ret
test
xchg
xor
jmp
or
decl
out
pop
sub
out
mov
push
jno
imul
or
cmc
sbb
imul
out
aaa
lds
jmp
cld
add
or
pop
lahf
push
dec
and
sub
mov
inc
je
jle
mov
mov
adc
mov
sar
cwtl
mov
rclb
cpuid
mov
ja
push
loope
shlb
mul
xchg
gs
mov
push
jge
sub
loopne
or
fisttps
adc
adc
jg
or
notb
fistl
xor
daa
sub
movl
pusha
imul
dec
inc
es
shll
push
sub
inc
inc
iret
pop
or
mov
jp
sbb
mov
hlt
adcb
push
lret
lods
scas
mov
shrb
adc
ss
or
push
pop
cmpsl
pop
subb
andb
notb
xor
push
call
cld
mov
outsb
popa
out
add
and
pop
mov
adcb
add
xchg
sub
insl
jl
loopne
movsl
and
mov
xchg
add
scas
lock
xor
inc
std
std
cld
loopne
psraw
ficomps
test
mov
mov
rclb
push
mov
mov
mov
sahf
jno
pop
stos
cmp
bound
push
clc
insb
push
lock
xor
movsb
push
decl
dec
push
adc
pop
push
sbb
rcrl
fldt
aam
add
out
in
xchg
fstpl
lods
sarb
cmc
push
xor
fs
and
inc
push
xchg
xchg
xchg
sub
mov
in
xchg
cmp
inc
pusha
jns
aam
js
loope,pn
mulb
mov
addr16
je
inc
mov
add
dec
fidivl
loope
fsts
inc
clc
sub
out
pop
and
insl
push
jecxz
jmp
testb
xchg
jo
xor
rol
mov
jnp
loopne
add
ja
mov
nop
mov
in
dec
fsubr
dec
int
in
movsb
add
jno
xchg
cmp
inc
pop
and
popa
inc
sahf
shlb
jno
inc
loopne
hlt
cmpsb
jnp
mov
xor
pop
mov
mov
fstps
and
pop
icebp
pop
leave
jmp
xchg
xchg
xchg
lock
adc
cmp
insl
mov
and
rolb
aad
pusha
shlb
pop
push
pop
cmp
cmp
jnp
jle
call
ficompl
lret
and
xor
dec
fmuls
or
pop
mov
es
jle
stos
mov
xchg
ds
and
and
js
mov
mov
mov
sub
jecxz
das
clc
sbb
test
cmp
das
std
shlb
cld
pop
dec
inc
add
adc
sub
in
int
inc
test
pop
shl
cmp
decb
fs
pop
lret
rcl
loopne
rcll
jmp
pop
les
xchg
test
mov
sbb
xor
pusha
xchg
lock
xchg
jp
adc
pop
push
xchg
push
cmp
loop
mov
decl
test
pop
bound
inc
jle
ljmp
cmp
pusha
std
jg
xor
test
stos
fisttps
and
cmp
jbe
fdivs
cli
pop
jge
push
dec
fadds
xchg
push
adcl
cmp
aam
push
call
out
add
or
aas
cld
adc
out
xchg
call
push
inc
push
pop
mov
int
xor
xor
jno
jg
xor
inc
and
lret
and
insl
lods
psubb
adc
mov
xchg
fsubp
popa
xchg
mov
les
sarl
adc
int3
test
cmc
cmp
call
gs
call
cmpsb
fdivl
mov
add
out
xchg
and
int3
add
jnp
xchg
fidivrs
cmc
lret
xor
ljmp
dec
mov
mov
dec
pop
or
sahf
jnp
lahf
cmp
lods
jmp
daa
fcmovnb
lea
push
push
sbb
les
adc
mov
int
fwait
ss
mov
je
jne
loopne
jl
in
scas
call
pop
aam
jne
loopne
cmp
dec
sub
mov
xchg
mov
xchg
cwtl
cmp
fidivl
cld
loop
lahf
movsb
and
fistps
push
xchg
test
testb
pop
xor
add
out
inc
cmp
lret
cltd
xchg
xchg
addb
push
mov
sbb
lds
in
mov
push
xchg
call
and
push
cmp
adc
dec
mov
dec
or
sbb
test
test
mov
stc
push
dec
out
cli
xchg
jle
ret
loopne
aas
sbb
mov
adc
cltd
ret
loopne
cmpsl
daa
sub
xor
outsb
jge
ds
movsl
ds
loop
sub
mov
rol
sub
shl
mov
jge
and
pushf
call
jp
pop
push
xorb
inc
loope
ret
rol
or
hlt
xor
ljmp
xchg
iret
std
and
ret
std
mov
pop
dec
xlat
or
sahf
int3
xchg
in
divb
and
sbbl
stc
daa
mov
outsl
lahf
in
stos
push
loop
hlt
mov
js
jg
popf
mov
pop
add
gs
sbb
popf
loopne
adc
mov
and
clc
inc
jecxz
test
or
and
cmp
pop
movsb
sub
and
add
cmpsl
xlat
dec
jns
hlt
aam
sbb
std
mov
sbbl
mov
push
adc
pop
ret
lahf
jecxz
lret
mov
cmpsl
fcoml
dec
mov
popf
in
push
pop
decb
fdivrl
mov
or
enter
fimull
fsubrs
dec
pusha
mov
inc
or
icebp
fwait
jb
or
call
cmp
and
sub
aam
add
fildll
gs
or
adc
lock
xchg
mov
addr16
push
mov
inc
or
stc
jbe
or
mov
out
adc
or
arpl
test
mov
adcl
push
rorb
fwait
mov
lret
fstps
pop
aas
pop
pop
scas
sbb
test
pop
loop
push
mov
xlat
arpl
inc
int
add
xor
mov
test
test
and
imul
mov
movsb
inc
dec
mov
cmp
js
or
outsl
imul
sarl
andb
movsb
mov
adc
inc
sub
aam
cmpsb
es
das
test
adc
mov
sub
sbbb
shl
int3
jo
jmp
and
mov
lock
sub
xchg
xlat
int
push
aam
jmp
xor
mov
rcrb
addr16
inc
inc
mov
ret
and
mov
push
xchg
das
fwait
mov
or
sub
and
add
sti
sbb
das
inc
cmp
push
rcrb
cmp
dec
ljmp
sbb
js
arpl
aaa
shll
add
hlt
or
scas
js
int
jo
nop
pop
sub
fwait
push
in
mov
cmp
in
lock
xchg
jne
lods
push
xchg
mov
mov
ljmp
and
lahf
mov
xor
jns
xor
xor
jo
add
cmp
and
clc
mov
mov
mov
add
pushw
add
je
mov
xor
sbb
push
jle
xor
jge
gs
aad
fdivrs
cli
imul
clc
xor
push
pop
pop
loopne
test
inc
inc
adc
xorl
inc
sarl
repnz
inc
push
pop
mov
test
inc
ret
cmpsl
cmpsb
or
sahf
dec
test
inc
inc
ficompl
incb
js
inc
dec
sub
movsl
and
jl
or
or
aad
ljmp
add
or
and
or
mov
mov
lea
rolb
lret
xor
and
adc
xchg
mov
loop
dec
push
mov
jno
push
pop
dec
js
mov
inc
adc
test
jae
ja
add
sarb
call
pop
mov
sbbl
xchg
push
mov
repz
mov
popf
push
lods
dec
loope
ret
mov
xor
rol
aam
cli
loopne
dec
fnstcw
jae
or
dec
pop
cmp
cmp
jecxz
or
out
scas
ljmp
jbe
enter
add
dec
xchg
lea
mov
data16
stc
ljmp
jno
fldenv
xchg
incl
jle
xchg
sbb
fwait
hlt
das
or
shl
clc
fisttps
mov
dec
js
adc
jmp
je
jne
and
adc
les
xlat
int3
out
stc
loopne
push
mov
or
and
sbb
aad
pop
insb
xchg
push
mov
cs
xor
jnp
push
ss
scas
sub
and
je
inc
cld
pusha
mov
adc
adc
add
or
test
daa
cwtl
jmp
inc
cmp
xchg
imulb
jp
insl
ret
jne
sub
imul
pop
mov
and
in
pop
shl
ljmp
sbb
adcb
ret
push
rorb
mull
cmp
and
fwait
je
outsl
fwait
aad
sbb
insb
mov
jmp
fsubs
cmpsl
mov
mov
add
out
adcb
ljmp
jb
shrl
scas
cmp
push
cmp
les
pop
movsl
fnstsw
or
mov
adc
shr
int
adc
xchg
cmc
loope
andb
jl
push
addb
push
add
cmc
lcall
xchg
adc
cmp
ret
jge
xor
loop
nop
outsl
xorl
inc
fcomps
test
outsb
xor
or
mov
nop
lcall
mov
mov
push
pop
sbb
adc
mov
jb
movswl
in
cmpl
mov
incl
mov
dec
arpl
push
cmp
push
clc
pushf
push
cmp
pusha
cmpsl
push
mov
and
ret
dec
out
leave
fdivrs
fucomp
sahf
inc
or
mov
aaa
pop
sbb
lahf
inc
das
sahf
mov
es
test
pop
fsub
cmp
cs
inc
inc
cwtl
imull
mov
dec
jae
push
rorb
lcall
cwtl
xor
jne
das
or
sub
imul
test
sahf
adc
movsb
adc
or
mov
cld
and
push
sub
enter
aad
ds
shlb
lea
js
mov
push
pop
fcmovb
pop
cltd
das
inc
jl
xchg
inc
call
dec
push
or
or
imul
sti
jmp
jbe
adc
data16
lret
lods
add
and
jo
push
sarb
popf
lcall
pcmpeqb
stos
mov
rcrl
cs
sti
shll
or
sbb
inc
mov
add
sahf
mov
test
xchg
rcll
mov
jno
pop
xchg
jb
popf
mov
jl
ja
mov
jecxz
mov
push
or
gs
aaa
fadds
mov
push
and
jo
fwait
inc
outsb
mov
insl
out
fwait
js
sub
jp
jmp
call
mov
xchg
sbb
into
insb
sbb
insw
mov
or
mov
mov
movsl
mov
jae
aas
popf
push
cmp
pop
imul
std
jmp
lcall
iret
pop
pop
lock
imul
int3
mov
cmc
js
ret
add
jne
stos
adcb
ss
icebp
pop
jle
aas
sahf
call
xor
outsl
js
sarb
leave
lcall
test
adc
push
dec
andb
jg
sarb
inc
adc
mov
push
bound
shll
xor
lcall
mov
push
sub
test
lds
mov
mov
push
lods
in
call
insb
out
pop
mov
push
aas
clc
mov
mov
push
js
and
dec
xchg
dec
call
das
ror
pusha
jnp
rclb
inc
cmp
test
gs
sub
mov
or
xor
popa
cmp
ljmp
push
pop
pop
adc
cmp
mov
push
stc
outsb
xor
inc
sbb
dec
adc
mov
sahf
addr16
pop
adc
enter
pusha
xchg
push
sbb
loope
dec
aas
mov
add
addr16
aam
pusha
mov
sbb
xchg
arpl
dec
ja
mov
mov
scas
inc
jne
lcall
push
gs
mov
dec
loopne
stc
je
add
pop
rcrb
inc
les
sbbb
jmp
cmpsl
push
or
arpl
outsb
fnstsw
add
fnstenv
dec
add
es
jecxz
xchg
push
rolb
orl
xor
in
rcll
sarb
scas
add
shrb
inc
mov
cmp
cli
test
inc
jne
dec
pop
adc
sahf
or
mov
jae
pop
shll
adc
sarb
sub
push
adc
sub
je
ljmp
xor
jl
sti
sbb
jne
mov
cmovle
sbb
adc
aaa
mov
sarl
std
clc
nop
cwtl
outsl
mov
dec
and
fnsave
cwtl
subl
popa
and
je
cmpl
js
inc
pop
push
arpl
inc
mov
cmc
aas
aaa
pop
rorl
lea
data16
mov
lret
jb
push
rcll
pop
or
ja
jle
call
adc
mov
adc
into
mov
or
cld
add
pop
mov
mov
xor
in
mov
loopne
sub
cmpsb
adc
out
jle
clc
sahf
leave
and
test
movsl
mov
xchg
or
cli
ret
stos
push
push
cltd
clc
jno
jbe
sbbl
xlat
rcrb
or
adc
test
lods
rolb
mov
aam
incl
inc
sub
lcall
jne
lret
arpl
sbb
dec
push
push
jmp
lock
push
pusha
in
mov
push
std
mov
adcl
mov
adc
mov
loop
or
push
xorl
inc
movsb
daa
sbbb
mov
lea
testb
ja
sahf
dec
mov
add
and
les
repnz
repz
or
lcall
lret
jne
stos
sub
add
lods
clc
add
sub
fisubrl
xchg
sbb
push
xor
push
arpl
jp
push
mov
das
sbb
aas
sub
loopne
jmp
jl
pop
push
bound
cmp
mov
fdivl
push
push
push
leave
call
stos
sbb
mov
sarl
stos
mov
xor
outsb
sbb
push
and
out
ds
call
cli
sbb
hlt
sbb
leave
dec
cmp
sbb
les
and
lea
repz
inc
and
xlat
dec
lods
dec
jecxz
xchg
mov
jmp
adc
fsubl
mov
jmp
add
orb
sbb
test
sbb
in
and
xor
icebp
ret
je
dec
jl
lds
rcrl
or
jle
xchg
popa
mov
pop
data16
mov
add
rolb
add
pop
not
call
lock
or
fcomps
std
add
xorb
mov
fucomip
sub
pop
add
jg
sbb
mov
insb
aaa
xchg
enter
loopne
sbb
push
pop
add
mov
rcr
push
mov
jo
lahf
lds
aas
fsubrs
movsb
cmpsl
and
sub
adc
jp
hlt
shlb
call
mulb
xor
push
mov
push
inc
clc
rcll
rcl
ja
leave
pop
jo
cmpb
push
jge
inc
push
jbe
inc
pop
aam
adc
pop
mov
cmp
insb
inc
pop
pop
jg
nop
pop
sub
lcall
push
loopne
hlt
cmp
and
test
fxtract
scas
not
sbb
cwtl
push
cmp
mov
vsubss
dec
dec
cmp
cmp
les
mov
fwait
push
cmp
gs
add
lcall
pop
leave
fisubrs
incl
in
mov
jbe
scas
pmulhw
fsubs
adc
and
xchg
mov
jl
mov
cld
insl
dec
pop
dec
bound
cmc
pop
cld
call
popf
cmp
fdivrs
aaa
xchg
jp
adc
js
sbb
push
pop
loopne
lahf
mov
rorl
adc
fwait
in
scas
jp
icebp
adc
daa
orb
inc
orb
aaa
xor
inc
xchg
or
movsb
push
movsb
pop
in
adc
js
aas
cmpsb
xlat
push
mov
or
jg
dec
lahf
dec
ds
repnz
movsb
inc
add
mov
shrl
mov
and
call
sub
rorl
push
adc
xor
sbb
dec
popw
scas
mov
mov
jle
clc
adcb
cmp
in
icebp
sub
dec
jb
mov
add
sbb
sub
popf
push
inc
push
cmpsb
push
mov
jbe
dec
ret
enter
fdivrs
mov
push
aas
popa
lock
out
dec
jbe
stos
jo
xor
or
or
scas
cld
das
and
or
fistpll
mov
xor
je
aas
jge
fimull
aad
dec
cmp
repz
and
cld
ret
fidivs
inc
addr16
icebp
rorl
xor
fisttpll
movsl
mov
sbb
jle
int
and
repnz
mov
out
ljmp
inc
push
xchg
mov
mov
in
subb
sub
les
push
pop
pop
in
cmp
xor
jle
pop
repz
lods
movsb
xor
cmp
leave
dec
cld
imul
or
lret
fisubrl
js
mov
fs
rcr
adc
bound
fucomip
jle
jo
dec
pop
fwait
inc
push
mov
add
xchg
jnp
sub
das
jg
int
inc
add
jl
sarl
inc
sarb
nop
xchg
mov
movsl
pop
fsubrp
mov
sub
dec
mov
popf
outsb
cmp
scas
dec
jmp
jns
push
push
cmp
mov
adc
repz
aas
cs
in
jmp
shl
rclb
pushf
adc
push
rcl
call
ret
test
fbld
cwtl
and
sub
inc
cmp
icebp
pop
cmpsl
test
adc
pusha
pop
scas
pop
mov
mov
stos
jno
cli
movsl
rorl
or
pop
mov
adcb
test
push
ret
rcll
mov
sub
pusha
loope
xor
inc
or
sahf
test
fldcw
xor
popf
aam
lret
ret
add
es
gs
push
push
adc
sub
push
call
xacquire
ret
decl
mov
adc
jg
cld
scas
dec
insb
pop
rolb
jno
or
popf
sub
mov
xchg
jo
xor
cwtl
sub
fnstsw
mov
cmpl
sbb
dec
or
andl
test
push
nop
test
mov
scas
call
fwait
call
dec
popa
or
std
loop
mov
out
lock
push
sub
add
mov
inc
mov
pusha
fwait
adcb
jp
mov
loope
movsl
jg
hlt
push
mov
rcr
icebp
jecxz
lcall
sbb
sbb
adc
push
repz
push
cmp
mov
jbe
jle
gs
inc
push
or
gs
test
dec
xchg
mov
jo
xchg
xor
adc
inc
pop
adc
mov
adc
rcrb
mov
sbb
adc
cmpsb
les
out
push
push
inc
rorl
mov
adc
dec
std
bound
jo
addb
outsb
adc
into
lds
std
icebp
cmc
cmp
sub
add
icebp
add
int
icebp
aas
cld
mov
inc
and
pushf
push
dec
aas
adc
shll
fcom
fidivs
adc
es
push
bound
sbb
xchg
shlb
or
pop
pushf
test
add
cmpl
or
sbb
nop
or
bound
xchg
push
rclb
scas
and
imul
ret
aad
push
fldl
hlt
xchg
pushf
xchg
pop
cmpl
xchg
pop
or
sahf
sub
loopne
into
sub
or
push
std
es
les
pop
jmp
sbb
stos
pop
dec
adc
aam
sub
out
mov
int
jmp
add
out
sbb
push
push
xchg
and
out
inc
and
sar
or
movsb
push
xor
ss
stc
test
test
out
loope
aas
or
bound
push
adc
add
jmp
mov
nop
test
cld
dec
test
jg
add
mov
mov
scas
xor
sub
lds
pop
xchg
push
push
iret
and
pop
pushf
pop
test
sbb
test
insl
xchg
pop
dec
enter
fwait
sub
movsl
cmp
cmp
xor
mov
into
out
shll
or
clc
mov
jbe
mov
inc
mov
ret
inc
sub
adc
popl
push
mov
clc
fwait
lock
dec
rcrl
pop
xor
or
xchg
cld
hlt
ds
xor
fdiv
add
sub
mov
mov
mov
hlt
ret
inc
push
lcall
push
jo
out
add
push
pop
ljmp
lods
cmc
cmc
cltd
rcll
jns
pop
inc
pop
pop
mov
jg
jno
or
test
ss
jg
sahf
add
rclb
pop
ret
dec
dec
push
and
gs
cmp
push
lahf
dec
inc
xor
dec
cmp
outsb
xorb
enter
hlt
ss
jns
push
lods
addb
push
std
inc
pusha
sbb
arpl
or
pusha
dec
xor
mov
lcall
sar
and
lock
and
mov
imul
dec
lea
addb
ja
mov
sub
icebp
repnz
xor
or
ret
lea
loopne
ret
pop
jle
dec
cmp
decb
mov
pop
decl
sbb
cmc
outsl
daa
data16
les
push
lock
push
cmp
pop
shll
in
and
addb
sahf
rolb
das
cli
cmpsb
das
ficoml
sub
roll
aad
cmc
xchg
roll
aaa
xchg
pop
in
cmpsb
pop
add
inc
movsl
sbb
arpl
inc
lods
fistpll
es
sarl
mov
dec
xchg
pushf
add
call
push
cli
push
add
pop
fisubl
xchg
cmp
pop
out
es
push
jle
xor
and
mov
insb
mov
cmpsl
fs
cs
mov
adc
call
and
jne
fadd
mov
shlb
scas
sub
sbb
loop
mov
cltd
dec
out
push
aad
inc
xchg
adcl
fidivrl
in
ljmp
mov
imul
add
jmp
dec
call
push
fimull
xor
mov
mov
hlt
fs
sbb
dec
mov
lods
pop
sarb
subl
popa
notb
lea
push
xchg
fimull
jle
mov
aad
xor
inc
pop
add
mov
mul
movsb
mov
test
add
or
xchg
and
or
in
and
cmpsl
mov
lret
cwtl
scas
add
sbbb
ret
mov
or
or
aaa
sar
xchg
push
mov
daa
or
push
or
inc
mov
cmp
cmp
fwait
jne
pop
scas
xor
sub
pop
jle
and
ret
push
mov
adc
push
mov
inc
rolb
and
mov
sbb
shrb
mov
lock
sbb
cmc
scas
xorb
or
jne
mov
pop
lcall
mov
cli
sbb
rcrb
jp,pn
int3
mov
call
sub
inc
daa
lret
mov
ror
adc
into
cld
xchg
daa
aam
es
cmp
gs
add
sub
fwait
cld
add
push
fisttpl
repnz
in
xlat
cmp
lds
cmpsl
or
pop
hlt
mov
xchg
push
movsb
sbb
mov
rclb
fwait
outsb
xchg
insl
je
mov
mov
cli
loop
and
or
dec
add
or
mov
cmp
enter
das
lahf
dec
push
outsb
lret
xchg
sbb
je
test
dec
xor
mov
push
cwtl
fs
push
inc
rorb
lea
jae
std
into
lods
negl
pop
adcb
lahf
add
sub
xor
icebp
adc
jb
fistl
xchg
pusha
enter
stos
dec
xchg
push
sbb
mov
aad
rclb
and
int
push
inc
sub
xchg
xchg
fs
add
dec
movsb
mov
sub
pop
inc
or
mov
sti
test
pop
fs
sbb
jae
mov
adc
insb
xor
fs
mov
sbb
stos
cltd
or
fildll
out
add
fwait
xor
add
push
sbb
sbb
dec
inc
cmp
cmpl
je
mov
jp
jmp
push
test
lock
mov
aaa
xor
push
and
outsl
je
xchg
ss
leave
jp
aad
or
mov
insb
into
popa
and
mov
clc
rorl
scas
add
xchg
push
inc
or
cmpsb
out
xchg
les
add
adc
in
xchg
or
push
mov
adc
sahf
add
mov
push
lret
test
xlat
xor
inc
cmpsl
loopne
add
sub
stos
shl
pop
roll
testl
outsl
xor
cmc
movsb
jbe
hlt
test
insl
mov
xchg
rcl
sub
cmp
cld
imul
pop
or
mov
or
pushf
xlat
lds
popf
mov
or
fmuls
in
scas
jl
das
fidivrs
fs
or
or
mov
movsl
mov
je
pop
xorb
adc
pop
rorb
and
mov
fwait
mov
nop
adc
or
xchg
push
adc
add
rclb
das
push
jb
addl
or
cmpsb
dec
or
rorl
mov
sbb
adc
dec
sub
cmp
adc
adc
cld
pop
movsl
in
lcall
jg
inc
and
add
pop
cmp
ljmp
shll
push
and
enter
xor
dec
xchg
fwait
and
mov
notb
out
jo
std
xlat
add
addr16
sbbl
dec
or
adc
loope
or
and
outsl
pop
std
enter
pop
insl
movsl
sbb
mov
push
inc
xor
cmp
jbe
pop
pop
add
scas
mov
push
addr16
imul
call
lahf
sub
inc
inc
pop
mov
xor
int
xchg
hlt
fisttpl
aas
or
test
lcall
sub
loop
xchg
data16
xchg
outsl
push
pusha
push
mov
jae
cwtl
movsb
aaa
fistl
mov
and
adc
insl
cli
mov
mov
lea
subl
ret
add
sbb
outsl
pop
pop
loope
cwtl
jmp
dec
mov
push
and
mov
lahf
add
je
loopne
cmp
aad
and
dec
pop
pop
popa
inc
pop
gs
jnp
ja
mov
push
inc
inc
adc
jnp
insb
mov
ror
dec
pop
dec
negl
loop
aas
scas
ja
push
adc
mov
cmp
inc
and
or
fbld
push
jo
fcoms
in
das
mov
or
lret
imul
or
mov
inc
sub
mov
sbb
in
or
aas
outsb
mov
je
rorb
das
jmp
adc
lret
sbb
shl
ret
xchg
hlt
mov
insl
je
adc
fwait
movsb
mov
fucomip
rorb
inc
add
mov
cmp
nop
rorb
ljmp
sbb
add
jg
movsb
adc
adc
xchg
pop
push
js
das
jle
addb
nop
pop
dec
xchg
mov
loop
mov
iret
scas
pushf
inc
mov
or
pop
sbb
mov
add
dec
sbb
enter
jmp
movsl
inc
cmp
push
jne
jno
lret
push
adc
mov
jns
insl
shll
ret
mov
arpl
dec
push
call
inc
hlt
inc
mov
cmp
xor
stos
mov
sub
sbbb
push
pop
addb
movsl
in
imul
adc
testl
or
dec
push
jp
mov
xor
movsl
in
fisttps
adc
mov
es
lods
xor
dec
std
sbb
mov
test
or
jl
orb
andb
adc
xchg
gs
pop
pusha
int
fldenv
push
mov
in
inc
psubsb
inc
shll
in
sub
sub
sbb
or
mov
sub
and
adc
popf
nop
and
push
xor
inc
inc
jmp
sbb
testb
xchg
into
sahf
out
lds
push
pop
or
fsubrp
dec
rdtsc
icebp
out
jno
shlb
jg
xchg
inc
cmp
dec
loope
mov
sub
dec
psraw
loop
push
out
jmp
or
xchg
mov
in
cmp
adc
bound
mov
jmp
xchg
loope
or
cld
int3
sbb
inc
push
pop
pop
inc
es
dec
cmp
daa
adc
xchg
mov
scas
mov
or
mov
cmpsl
xor
sbb
inc
jmp
push
xchg
ja,pt
lods
in
lods
addr16
clc
mov
xchg
sub
xchg
iret
sbb
cmc
lds
nop
arpl
push
testl
and
add
adc
and
stos
pop
adc
shll
push
adc
daa
and
jecxz
fnstenv
mov
movsl
sar
rorb
lock
and
imul
es
push
call
in
mov
add
test
mov
or
sbb
adc
xchg
arpl
dec
test
push
or
fmull
push
push
mov
or
jle
mov
mov
push
xor
cmp
pushf
add
xor
pop
or
dec
and
or
out
mov
add
jb
call
cmp
test
add
pushfw
sbb
xchg
push
xor
je
and
out
mov
jo
insb
xchg
jnp
lahf
mov
into
mov
data16
push
and
push
or
mov
test
dec
movsb
rorl
dec
aaa
mov
call
push
sahf
jbe
pop
inc
xor
mov
and
xchg
lods
cmp
cli
mov
insb
roll
pushf
pop
jae
xchg
pop
outsb
pop
jle
xchg
dec
dec
ja
add
add
xchg
adc
ret
cmpsb
inc
sbb
pop
jmp
xchg
jne
push
pop
xchg
sbb
jg
lods
pop
aas
test
jae
imul
cmovns
loopne
mov
dec
push
popa
sbb
sub
std
dec
loope
pop
loope
push
adc
mov
sbb
scas
and
aas
mov
mov
xor
imul
orb
icebp
xchg
xchg
adc
dec
ret
mov
sti
pushf
adc
inc
sbb
xor
andl
mov
das
push
push
mov
sbb
pop
inc
movsb
jg
mov
mov
sub
in
xchg
enter
dec
cmp
inc
and
lods
lea
cld
imul
repz
sbb
enter
aam
mov
adc
ja
and
xor
jae
add
inc
or
xchg
pop
mov
mov
xlat
aam
cmp
jl
popf
sub
outsb
mov
orl
lock
mov
push
mov
js
fadds
and
aas
nop
dec
sub
jecxz
mov
stc
push
cmc
inc
scas
push
aaa
popf
cmp
cmp
bound
pop
fistpll
xor
jg
mov
js
aaa
or
ss
test
jp
in
adcb
dec
shrb
push
pop
xor
call
jo
lods
push
rorl
out
inc
insl
jne
mov
loopne
or
mov
sub
push
jo
adc
or
icebp
cmpsl
cld
mov
in
pop
ficompl
jge
dec
inc
xchg
outsl
dec
rolb
add
cmp
or
jb
sub
in
or
push
sbb
jecxz,pn
or
or
nop
add
arpl
xor
cmpsl
cltd
jo
ja
mov
ret
mov
in
jp
jns
shlb
lcall
shrl
adc
outsb
cmp
popa
cmpsl
adc
je
shll
xor
stos
sarl
daa
sbb
rcrb
sub
xchg
int
sbb
loop
cltd
inc
cmpsb
mov
adc
jns
hlt
shll
mov
outsl
popf
jnp
rcrb
mov
jmp
mov
xor
scas
dec
pop
sbb
mov
mov
stc
call
or
pusha
cmp
lret
mov
inc
xor
lock
pop
movl
mov
stos
sub
jmp
pusha
pop
adcl
pop
add
push
imul
jmp
adc
jnp
clc
mov
pushf
int
pop
push
dec
cli
xchg
jecxz
xbegin
xchg
wrmsr
cs
cmpb
dec
ret
sbb
iret
adc
xchg
test
rcl
loop
incl
xchg
dec
dec
fldcw
or
and
faddp
jge
iret
xor
enter
adc
push
cld
and
pop
fisttps
xchg
pop
lahf
cmp
hlt
adc
add
fdivrs
mov
dec
jl
mov
inc
adc
inc
adc
mov
rorl
mov
mov
push
xchg
xor
jle
and
add
jnp
jmp
mov
pop
test
dec
inc
outsb
mov
add
cmc
dec
xor
dec
add
mov
fildl
pusha
sbb
mov
or
shll
sub
mov
adc
dec
ds
shr
subl
jno
mov
sub
xchg
inc
jnp
adc
xlat
jae
roll
add
dec
test
nop
push
fcomi
mov
add
pop
inc
jmp
adc
sub
dec
lds
add
xchg
loope
mov
sub
fldl
fcompl
inc
add
jo
nop
outsl
stc
mov
add
aad
loop
repnz
cmp
in
adc
in
xorb
jmp
fldl
and
dec
aad
out
sub
pop
popf
es
sbb
pop
rcll
adc
addr16
sbb
ja
mov
gs
fiadds
cmp
aaa
or
jp
ljmp
cmpsb
mov
and
out
inc
inc
sbb
test
or
mov
cmp
pusha
adc
jbe
xchg
adc
sub
lea
adc
pop
sub
xor
xchg
outsl
inc
sahf
repz
and
pusha
inc
loop
inc
fmull
xor
fldt
add
xchg
push
fbstp
xor
jecxz
mov
or
push
cmp
fmull
sahf
cmp
outsl
pop
and
out
adc
jno,pn
scas
jp
outsl
sbb
ret
push
inc
pusha
pop
test
out
or
in
repz
xor
jbe
outsl
add
sub
lods
mov
sbb
dec
xchg
or
fwait
jl
inc
ds
mov
jg
cmp
and
fst
cld
jbe
inc
popa
insb
test
into
lds
adc
sbb
xor
cmpsl
cltd
or
mov
mov
push
add
or
addr16
sbb
and
movsb
pop
jp
test
dec
push
inc
icebp
dec
and
lcall
add
leave
pop
pop
sub
cmp
xor
cld
xor
lods
or
lea
mov
shrb
jp
adc
aas
fidivrl
lods
xor
add
inc
pop
push
rcrl
and
std
xchg
sub
push
daa
fcoms
sbb
add
loope
adc
into
push
adcl
mov
cli
lahf
push
inc
pop
adc
es
push
mov
jl
outsb
dec
pusha
sbb
loope
cmp
xchg
mov
cmpsb
mov
fcmovnbe
xchg
dec
and
subb
movl
adc
dec
test
fisubrl
cmp
sub
cs
ss
add
lods
leave
or
pop
pop
xchg
xor
pop
movsb
adc
inc
and
xchg
bound
pop
add
sbb
fwait
mov
stos
fstpl
xor
popf
sbbl
repz
arpl
jle
mov
or
cmp
stos
mov
cmpsb
pop
pop
jecxz
mov
xor
jecxz
daa
xchg
cmp
jl
xchg
call
test
xchg
int
sbbb
xchg
rcrl
push
les
je
push
loop
xor
push
jge
pop
pop
xlat
sbb
mov
sbb
mov
loop
loope
push
inc
leave
out
mov
or
icebp
mov
test
mov
fdivr
ror
test
adc
test
dec
cmp
push
lea
leave
fisubl
ss
push
mov
pop
sbb
add
xchg
dec
push
mov
cmp
push
jl
dec
cmp
adc
std
add
jecxz
pop
aam
mov
sub
sbb
jne
xor
pop
lret
into
push
pop
fldt
ja
add
roll
mov
cwtl
jle
or
dec
cwtl
mov
ds
sbb
sub
shr
or
push
and
sahf
push
ja
insl
pop
add
sbb
clc
fwait
orb
xlat
lret
cltd
pop
jo
xchg
xor
int
pushf
push
jecxz
adc
out
jne
inc
or
daa
push
dec
out
inc
cmpsl
sbb
jns
adc
subb
sbb
mov
fcmovnbe
jp
cltd
jg
ds
pop
xchg
daa
icebp
add
jno
inc
outsb
insl
mov
push
jg
ret
jl
stos
xchg
push
fmull
sbb
pusha
outsb
mov
lock
xorb
gs
icebp
push
cli
add
js
cmp
adc
inc
aad
jno
dec
cli
push
or
ljmp
sub
jecxz
push
inc
sahf
fdivs
rcr
mov
mov
repz
pop
rorb
pop
sahf
pushf
or
daa
aad
loope
or
lret
pop
and
mov
leave
imul
add
icebp
loopne
sub
sub
inc
push
cmp
aam
lock
rcrb
add
jg
mov
addr16
out
adc
add
stc
adc
loopne
pop
lahf
sub
imul
rcll
push
scas
dec
leave
clc
adc
cwtl
in
and
jp
lret
push
pop
xor
mov
xchg
cmc
push
mov
das
sub
mov
jo
test
mov
pop
out
dec
sbb
xor
xor
and
jmp
out
je
cmp
stc
andl
test
push
inc
jp
pop
filds
mov
cmp
xor
test
mov
shrb
dec
imul
cmpsl
faddl
mov
test
cmc
xor
xchg
ja
cmp
mov
cmpb
icebp
loopne
add
mov
pop
jae
fisttps
subb
or
mov
outsb
sbb
roll
pop
push
out
movsb
xchg
movsb
ja
popa
fcoml
mov
dec
jnp
aam
cmp
pushl
into
es
adc
int3
test
popa
lcall
add
mov
sarl
les
js
fildl
sbb
xchg
jge
lea
push
ss
mov
loope
xchg
jle
mov
add
mulb
stc
shlb
xor
jg
cs
popa
push
mov
aam
cmp
out
lods
and
outsl
mov
sub
shll
je
in
lea
mov
out
push
popl
rorl
xchg
and
incl
cs
adc
or
fsubl
adc
loopne
lret
out
push
cmpsl
and
rclb
les
sbb
cli
pop
loopne
push
sub
dec
sti
mov
fistl
pop
dec
aaa
imul
enter
xor
push
pop
lds
sysenter
add
hlt
popf
lcall
and
mulb
and
push
mov
mov
rorb
mov
std
xchg
jo
and
pop
ljmp
push
lcall
pop
lock
lds
psrlq
push
pop
lcall
aad
test
clc
in
fidivs
inc
sbb
aas
ljmp
and
jo
clc
and
inc
adc
sub
inc
je
mov
jne
int
cs
rclb
push
data16
xchg
xchg
test
cltd
sti
push
add
lret
mov
nop
add
pop
push
movsl
or
es
xchg
leave
mov
sub
call
dec
fsubrs
jb
mov
test
mov
pop
mov
inc
sbb
nop
xchg
std
and
push
sub
shrb
jmp
cmpsb
add
fwait
or
and
dec
popa
push
or
repz
enter
ret
shlb
icebp
or
and
mov
xor
pushf
pop
mov
ret
and
cmc
push
xchg
sub
sbb
cmpsl
movsb
pop
xor
inc
ret
clc
push
cwtl
test
push
push
cmpsb
ja
and
or
aad
ds
negl
fsubrs
fbstp
jge
dec
add
test
or
pop
cmpsl
lock
pop
stc
in
sbb
xchg
test
or
aaa
push
movsb
mov
loopne
mov
rol
push
inc
cmpsb
rcll
fbld
cld
or
xor
sbb
cmp
mov
pop
lods
and
pop
std
movsl
cmp
divb
leave
addb
jle
punpckhdq
out
decb
lock
pop
cmp
test
mov
jecxz
cld
adc
push
sub
push
mov
or
aam
int3
xor
aaa
shrd
mov
sub
adc
and
mov
push
cmp
sti
and
push
mov
cmp
cmpl
push
ljmp
dec
or
add
sub
adc
shl
aaa
cmp
scas
mov
push
mov
mov
dec
out
inc
mov
addl
mov
lds
icebp
sbb
inc
jmp
fbld
loop
cmpsb
dec
aad
add
or
rolb
orl
hlt
cmpsl
mov
std
test
pop
mov
mov
pop
inc
jo
leave
sub
insl
or
insb
adc
adc
out
loop
scas
mov
es
xchg
pop
xchg
cmp
cli
aaa
and
dec
rcr
in
call
add
add
jle
mov
js
insl
inc
adc
addr16
pop
lods
sub
daa
mov
test
mov
iret
sbb
test
add
sbb
add
call
shlb
jno
fnstcw
cld
insb
out
fdivl
rcrb
imul
ret
mov
dec
pop
shr
mov
xchg
aam
fbld
jnp
stos
loopne
xor
mov
and
push
fstp
movsb
in
es
add
ljmp
xor
and
outsl
aam
add
std
sbb
nop
ret
in
mov
and
mov
nop
stos
pusha
loopne
mov
gs
adc
dec
sbb
outsb
mov
sti
sub
xor
sub
inc
cmpl
mov
aaa
push
xchg
mov
add
adc
dec
and
lods
enter
cmp
pop
pop
sbb
mov
repnz
pop
jecxz
bound
inc
adc
mov
mov
lcall
pop
push
cmpsl
popa
sub
adc
rorw
adc
push
add
fildll
shrl
stc
adc
pushf
in
and
data16
jbe
les
pop
outsl
add
mov
cld
xchg
test
add
mov
xchg
add
pushf
xchg
mov
push
loope
out
mov
int3
icebp
ret
adc
jge
mov
push
mov
push
mov
pop
int3
cld
aad
add
cli
xor
or
xchg
outsb
push
mov
xor
outsl
xlat
xchg
cmpsl
test
push
xor
cmc
and
test
adcb
adc
mov
sbb
sbb
inc
fistl
sub
std
sub
add
int3
inc
mov
rorb
je
outsl
lret
fwait
mov
jo
rclb
out
and
push
and
cmc
outsb
push
lahf
inc
xchg
add
xor
inc
rcrb
ljmp
hlt
jo
or
in
inc
jno,pt
cld
dec
mov
xchg
sub
repnz
pop
stc
push
aaa
xor
mov
pusha
cwtl
call
outsb
enter
pop
inc
push
clc
inc
bnd
loope
negb
cmp
rolb
nop
jbe
dec
lahf
mov
inc
mov
jg
insb
cmp
insl
insb
adc
sub
rcr
fstpt
out
fistpl
stos
leave
test
mov
jl
cmpb
pusha
jg
mov
push
sub
inc
dec
aaa
mov
xchg
repnz
sbb
inc
mov
jmp
xor
mov
aas
xchg
add
sbb
pop
inc
mov
addl
or
out
mov
jo
mov
stos
jge
push
push
imul
loopne
aaa
pushf
enter
out
or
mov
test
hlt
sbb
inc
ret
xor
cmpsl
test
movsl
sti
pusha
sahf
hlt
or
mov
inc
ja
cs
lcall
or
push
daa
ffree
es
xchg
out
sbb
inc
mov
jle
shlb
cmp
adcb
mov
pop
ss
mov
lock
cli
adc
cmp
inc
cli
loopne
lds
call
push
addb
xchg
or
adc
and
pusha
jge
push
inc
out
jg
int3
pop
inc
insl
ficoml
rolb
push
mov
cmp
aam
sbb
xchg
lock
inc
fistl
jp
mov
mov
mov
lock
frstor
imul
xor
movsb
or
mov
push
or
xchg
fs
aas
test
pusha
dec
xor
jl
addb
aad
inc
nop
jb
mov
rolb
imul
xor
pop
aas
cmc
mov
mov
test
sub
shr
jg
mov
inc
not
add
cltd
ljmp
scas
test
jge
popf
out
incb
jmp
loope
mov
mov
cmp
push
dec
in
rorb
dec
lds
sub
jne
push
shl
incl
mov
add
or
nop
dec
out
sbb
inc
inc
and
adc
fimuls
xchg
shl
fimuls
rcr
js
push
cmp
inc
scas
xchg
cld
icebp
movsb
jmp
xchg
int
sub
xchg
push
mov
jp
add
mov
push
sbb
test
subl
dec
adc
xchg
add
pop
ss
inc
lcall
and
test
lret
mov
in
stos
mov
insb
mov
ud0
aas
adc
lcall
fidivs
mov
sti
xchg
mov
lock
ja
inc
insb
aas
mov
inc
and
and
clc
sub
hlt
push
dec
jg
mov
or
sbb
in
pusha
pop
cmp
jo
dec
cmpsb
mov
daa
imul
adc
xor
dec
mov
xor
jbe
shlb
call
hlt
movsb
xor
sbb
mov
adc
pop
dec
jno
filds
ss
or
jnp
xlat
test
icebp
aad
push
sub
rcrl
xor
mov
and
or
es
pop
push
jb
cmc
stc
ret
add
enter
movl
pusha
sub
ljmp
sub
cltd
pop
push
cs
add
inc
in
loop
movsb
mul
add
cld
mov
sub
and
addr16
mov
je
cs
call
inc
out
imul
imul
pop
pop
test
icebp
inc
pop
fisttps
int
les
sbb
sub
dec
inc
rcrb
cmpsb
lods
jne
add
xchg
imul
iret
clc
sbb
xchg
gs
cltd
mov
pop
xor
arpl
ljmp
loope
sub
inc
or
mov
dec
inc
mov
jmp
lods
jns
mov
fiaddl
rcr
bound
jb
pop
mov
cmp
fsub
cltd
test
scas
cmp
add
loop
mov
mov
inc
fstpl
fdiv
aaa
jmp
sbb
ljmp
repnz
scas
aam
pop
push
push
je
adc
test
orl
inc
push
xor
jp
or
enter
int
mov
pop
lock
inc
pop
nop
push
lods
lock
jp
lods
sub
sbb
pop
out
jbe
cmpsb
sub
into
test
popa
add
fdivrs
push
cmp
jle
jb
and
nop
add
movb
sarl
adc
and
addb
push
mov
inc
incl
orb
sub
pusha
and
fsubs
pop
mov
imulb
and
popa
mov
fdivrs
mov
jns
mov
or
push
pop
sub
add
cmp
int
inc
loopne
iret
pop
dec
in
aam
sub
orb
js
sub
lret
sarl
rcrb
push
subb
lcall
fdivl
pop
dec
mov
inc
xchg
sbb
and
mov
jae
clc
or
lock
mov
sbb
pop
scas
mov
mov
dec
cld
into
enter
pusha
ss
leave
dec
test
insl
mov
xor
inc
inc
incl
cmp
mov
fs
push
sub
cmpsl
mov
rolb
mov
inc
ficoml
bound
clc
cmp
dec
lcall
out
fs
jo
xchg
int
loopne
inc
mov
inc
aaa
adc
pusha
push
je
push
jbe
xchg
lock
xor
sar
aas
je
test
jg
and
mov
dec
push
xchg
sub
pop
popf
stos
sbb
out
call
dec
in
push
gs
dec
test
xor
sbb
icebp
arpl
std
mov
xchg
movsl
aad
sarl
in
or
ret
mov
dec
push
rorb
ror
nop
xchg
daa
cmp
ljmp
mov
icebp
dec
push
push
cmp
test
lahf
push
outsl
testb
mov
inc
outsl
mov
and
jmp
push
push
push
pop
cli
fwait
test
and
leave
mov
mov
cmp
xchg
push
andb
adc
mov
aas
sub
mul
fdivr
cmp
inc
xchg
sbbb
mov
loopne
icebp
lret
aad
sub
ja
fadd
cld
ds
mov
mov
sub
dec
lcall
or
sub
adc
sub
adc
sub
xchg
aam
pop
fcoms
push
aas
aas
or
adc
xor
dec
std
bound
mov
push
enter
xor
or
lods
cmp
pop
test
data16
loopne
add
cmp
push
dec
sbb
insl
mov
dec
call
out
mov
jecxz
loop
dec
cmp
jge
call
xor
inc
mov
push
inc
mov
mov
ret
sub
dec
inc
nop
mov
jmp
inc
push
test
cmpsl
test
ret
push
je
push
fstl
jle
popa
ss
adc
cmc
dec
out
test
and
inc
lahf
test
daa
arpl
push
add
fstl
cltd
into
and
dec
and
mov
add
loope
jae
ds
cmpsl
fcoms
sub
out
scas
xlat
enter
jno
mov
pop
ljmp
sbb
inc
rorl
test
test
xor
mov
push
std
cmpsl
inc
push
dec
idivl
mov
sbbb
jl
push
cwtl
leave
fimull
or
loop
dec
addps
je
test
xchg
xchg
jae
dec
adc
fbstp
inc
lock
add
jo,pt
mov
cltd
lds
inc
adc
and
add
jns
movsl
pop
enter
rcrl
test
movb
fisubl
lcall
jecxz
xor
push
jae
mov
jno
negb
cld
jle
bound
in
outsb
insb
sti
fs
das
jb
sub
sub
push
push
sbbb
popf
mov
jmp
rcrb
jl
imul
add
sub
ja
push
dec
xlat
stos
popa
mov
mov
inc
lahf
sbb
push
dec
mov
mov
arpl
push
dec
adc
lret
xchg
mov
xor
or
and
lods
cli
cltd
xchg
test
xchg
adc
outsb
lock
mov
sbb
stos
jb
jns
rclb
sarl
dec
or
movsb
push
test
arpl
xor
mov
pop
lods
insl
inc
test
jge
stos
out
add
fbld
in
jnp
orb
and
xlat
jo
fwait
push
push
shlb
sbb
shlb
cmpsl
test
xor
clc
call
cmp
and
jl
ja
xchg
mov
jl
or
iret
pop
cmp
clc
cmp
cmc
iret
push
mov
or
scas
or
and
outsl
cmp
mov
xor
pmaxsw
sarb
clc
cmc
push
sub
mov
cmp
mov
and
js
loop
and
mov
push
loop
cli
fs
or
adc
xchg
xor
popf
insl
jbe
sbb
and
popa
add
fmul
imul
sub
jp
adc
lahf
push
mov
sub
sbb
lds
lret
mov
and
xor
push
cld
cwtl
je
and
xchg
popa
push
push
cli
aaa
cwtl
rorb
sti
jecxz
pop
push
add
pop
pop
sbb
mov
push
fadd
mov
fldcw
mov
sarl
lock
cmp
or
into
ret
and
push
cmp
pop
add
add
leave
push
adcl
insb
arpl
enter
insb
jae
mov
pusha
popf
inc
push
adc
popf
cmpsb
icebp
or
lock
mov
jns
mov
inc
into
movsb
cli
xchg
push
pusha
or
adc
pop
fbld
int
out
mov
addr16
subl
dec
push
dec
loope
ss
mov
es
sub
xchg
push
cmp
mov
loop
and
lods
lcall
fidivl
xlat
ljmp
push
push
shrl
mov
lea
repz
xor
and
cs
jne
sbb
pop
stc
daa
jb
xlat
mov
pop
inc
add
pop
daa
mov
pop
jmp
or
cwtl
ficoml
shll
and
fiaddl
push
xchg
xor
xor
shrb
mov
icebp
push
xor
or
loopne
leave
into
sbb
cmpsb
insl
rolb
inc
mov
sbb
add
ret
inc
mov
inc
push
in
push
xor
mov
mov
mov
cmp
ds
arpl
and
sbb
call
jge
or
daa
xchg
lahf
es
out
xchg
pushw
js
sub
dec
dec
mov
xchg
pop
cmpps
cli
mov
icebp
push
jmp
roll
shrb
sub
lock
mov
mov
cmp
jle
loop
stos
test
pop
cmp
les
jo
aam
jle
repnz
clc
cmpb
lcall
loop
es
ficomps
pusha
insb
lret
shrl
sub
inc
pop
jge
or
or
pop
mov
and
lea
jp
addr16
fwait
rcrl
popa
jo
inc
sbb
es
jl
inc
add
int
mov
arpl
dec
pop
xor
inc
sbb
inc
mov
xor
int
and
mov
mov
adc
mov
xor
js
mov
lahf
aaa
add
sbb
mov
pusha
pushf
fmull
subl
lods
or
inc
inc
cld
dec
push
mov
sub
pop
movsb
fisttpll
les
aaa
mov
mov
adcl
sub
int3
jecxz
call
and
cwtl
mov
inc
and
into
outsb
mov
fimuls
xchg
jno
aam
mov
pop
and
fdiv
mov
pop
sub
mov
jmp
out
sbb
daa
sub
cmp
inc
pusha
int3
imul
scas
cmp
lret
inc
mov
cmp
cmp
popa
mov
ret
mov
popf
inc
jmp
and
mov
inc
pop
iret
aas
mov
xlat
inc
inc
mov
insb
pop
cld
in
push
sti
xor
gs
jp
sbb
es
fisttps
dec
popl
enter
outsl
hlt
mov
daa
add
sub
xchg
pop
ds
aad
hlt
insl
pop
dec
cltd
outsl
xor
lcall
xchg
movsb
jbe
lds
jmp
andb
or
jae
loope
inc
jns
cmovo
or
fadds
mov
stos
lock
sub
mov
lods
xchg
lret
mov
mov
cmc
aaa
cmp
in
push
test
rol
cmpsl
or
aas
sahf
shlb
sbbb
lods
pop
leave
pause
lahf
add
jb
mov
cmpsl
bound
adc
and
pop
cmpsl
ret
lods
je
mov
adc
or
ja
xlat
adc
xlat
sbb
adc
hlt
xchg
and
mov
popf
jle
xchg
daa
sbb
lret
fidivrl
dec
cmp
xor
insb
pop
mov
cmp
sti
cwtl
loopne
mov
fists
cwtl
lods
es
cmp
cltd
popa
push
addr16
sbb
and
pop
or
stos
xor
mov
add
jnp
test
lods
pushf
pop
fisttpll
out
mov
and
out
or
sbbb
arpl
mov
imul
pop
movsl
cs
aad
pushf
or
insb
sbb
dec
push
mov
mov
add
mov
pop
push
push
loop
mov
add
sub
xchg
mov
dec
lds
or
pop
stc
mov
js
and
scas
pop
rorb
mov
jecxz
mov
outsl
shl
or
jge
mov
add
jl
or
or
push
popf
or
stc
loopne
mov
popa
jb
mov
jg
jb
call
push
add
cmp
std
jp
loope
xchg
xchg
add
adc
cmpb
push
push
pop
sub
dec
rcll
cli
push
imul
xchg
xchg
cmc
cmpb
sarb
fs
and
cltd
icebp
pushf
lret
arpl
test
inc
sub
icebp
loopne
and
pop
test
negb
sbb
add
fwait
jge
add
popa
push
sub
sub
out
add
mov
pop
cmpl
xor
js
sub
pop
jecxz
and
cmp
rolb
aad
xor
inc
addr16
repz
clc
vprotq
sub
inc
xor
sti
ret
pop
xchg
cs
mov
mov
push
icebp
subl
xor
cmpsb
push
js
dec
fwait
stos
pop
loop
adc
xlat
cmp
sbb
xor
mov
pop
pop
jl
clc
xchg
inc
inc
sub
cmpxchg
pop
aad
ret
pop
les
sarb
insl
mov
pop
lods
mov
int
int3
leave
aad
fidivrs
xor
cmp
enter
mov
pop
mov
mov
add
mov
mov
mov
mov
stos
js
xor
push
and
sbb
or
push
xchg
push
adc
or
insb
mov
ss
pusha
add
push
sbb
mov
aam
imul
mov
xorb
and
and
scas
push
lret
mov
pushf
into
mov
and
mov
pop
xor
jmp
nop
dec
fwait
cmpl
push
jns,pt
js
in
orl
ffreep
mov
mov
mov
sub
push
xorb
and
or
test
jne
mov
loope
cmpsb
mov
mov
test
dec
aad
fdivrl
sbb
sbb
dec
rorb
daa
pop
fisttpl
mov
ret
mov
ret
push
jno
mov
add
das
add
push
iret
aas
push
inc
jns
flds
out
mov
mov
pop
in
lahf
mov
and
loop
jge
push
push
push
cmp
dec
cmpsl
cld
or
xor
xlat
mov
fadds
std
xchg
fs
add
pop
add
fs
xchg
push
push
or
test
add
ljmp
pop
pushf
stos
jne
loopne
and
lcall
adc
xchg
sub
shl
test
in
loop
fwait
adc
jae
cwtl
dec
mov
test
orb
push
fs
mov
cmp
imul
lret
lods
xor
xor
dec
and
mov
mov
es
jp
inc
inc
add
and
iret
xor
psllw
dec
inc
mov
ret
stos
test
push
jno
and
xor
lret
nop
cltd
outsb
call
clc
cmp
mov
ficoms
ljmp
int3
bound
iret
loopne
rclb
aaa
xchg
test
test
jbe
mov
data16
loop
lcall
sub
inc
inc
mov
mov
ret
out
adc
pop
in
test
cmp
pusha
mov
sbb
xchg
cmp
stos
inc
and
movsl
dec
subb
les
out
xor
cs
aaa
sub
mov
pusha
fsubl
mov
and
push
adc
dec
cld
adc
inc
mov
fstpl
cmpsl
addr16
push
lret
cmc
mov
or
andb
fmull
mov
subb
push
ss
or
pushf
lods
lret
sbb
call
inc
testb
xchg
inc
pop
mov
mov
ds
xor
scas
out
xor
mov
nop
test
outsb
add
shll
sbb
xchg
xor
lcall
imul
push
dec
test
jp
push
sbb
lds
lret
push
push
sbb
mov
sbb
pop
loopne
pop
jl
movl
rcl
shr
cmp
or
test
les
pop
lea
adc
cmp
xor
push
cmp
pop
loope
shr
rclb
mov
cmp
lcall
adc
xor
add
mov
dec
orl
jecxz
loop
fwait
lea
mov
enter
jg
mov
lret
adc
mov
cld
sub
or
rcll
js
or
fwait
mov
xor
into
leave
jge
idivl
jecxz
or
lock
adc
cld
pop
cmp
out
add
pop
add
loopne
cmpb
pop
aad
mov
arpl
sbb
xor
inc
and
in
pop
mov
jno
xor
push
dec
mov
adc
xchg
js
lock
lss
roll
scas
lock
in
movb
call
ljmp
adc
addb
xchg
pop
xor
bound
out
jle
popf
jnp
dec
movsl
mov
insl
in
loope
icebp
cli
lcall
cmp
lea
inc
mov
inc
dec
out
xchg
iret
sbb
pandn
mov
je
in
hlt
lods
or
jb
in
mov
cmp
mov
addl
push
jb
jbe
rol
add
fdivs
orl
jle
je
outsb
inc
jnp
xchg
or
ret
jno
cld
add
push
movsl
cltd
or
inc
ret
sub
push
popf
js
fwait
call
inc
add
mov
adc
jmp
xchg
or
in
inc
sbb
fwait
test
pop
cmp
pop
movl
adc
mov
adc
adc
imul
inc
je
lods
or
jno
mov
add
ss
sub
push
and
or
sbb
or
scas
cmp
ljmp
mov
lods
daa
sbb
add
mov
cltd
test
mov
pop
xchg
imul
inc
dec
fadd
stos
lcall
dec
mov
jo
rcl
mov
nop
out
out
lret
add
roll
pop
je
add
loop
sbb
mov
and
pop
or
leave
pop
fiadds
sub
movsb
repnz
aad
mov
mov
push
jno
xor
adc
add
sub
mov
and
xchg
test
jg
jne
icebp
xchg
cs
adc
ss
pushf
loop
sub
aad
push
push
and
daa
loope
xor
inc
jb
arpl
and
in
aam
pop
jo
push
lods
cmp
push
inc
shrb
scas
cmpsl
add
dec
adc
cmpsb
ficoml
scas
mov
cmp
xchg
imul
lcall
cltd
fwait
loop
pop
nop
add
dec
xchg
fnstsw
aam
xchg
cmpb
test
push
push
iret
push
sbb
cltd
loopne
mov
lods
test
ret
adc
push
fsubl
negl
or
cmp
ret
xor
add
sbb
xorl
xchg
mov
rolb
js
mov
hlt
push
adc
jmp
ret
and
aam
push
jbe
jb
dec
aam
out
out
push
adc
std
sarl
and
dec
scas
sub
lods
arpl
push
jge
add
sbb
test
lds
pop
loop
popa
sub
test
sub
mov
das
int3
imul
insl
xchg
pop
xor
nop
push
pop
sbb
inc
movsl
adc
sbb
cmpsl
sbb
icebp
cwtl
icebp
mov
and
sub
loop
fs
mov
cmp
jno
or
test
mov
push
push
mov
rorl
mov
stos
or
xchg
je
jo
data16
inc
rol
xchg
js
mov
mov
add
cmp
fwait
ret
fwait
and
shll
pop
scas
lock
mov
mov
xor
jl
pop
or
mov
test
stos
imul
ret
sbbb
adc
lock
mov
ja
dec
pop
xchg
movsb
adc
and
push
aas
dec
xchg
lock
lret
nop
mov
push
ficompl
rcrb
dec
push
xor
cmp
push
and
xor
xor
pop
fimull
shrl
dec
and
js
loop
cmp
sub
fsubs
aad
loopne
jae
fwait
xchg
mov
daa
out
repnz
pop
jecxz
push
test
shlb
decb
out
in
sahf
dec
xor
cmp
ret
cmp
xlat
mov
test
fimull
cmp
push
jg
je
jo
andps
cmp
call
dec
xlat
xorb
repnz
sbb
xchg
jge
xchg
inc
sti
mov
jae
xchg
leave
mov
jno
shlb
add
sbb
inc
pop
lret
shlb
inc
xor
jp
or
sub
pop
and
push
jne
push
shlb
mov
pop
and
push
movsl
pop
adc
pop
daa
cs
push
rcrl
jmp
pop
push
mov
adc
or
inc
or
negl
frstor
cmp
jnp
inc
xchg
dec
loope
popa
xchg
popf
hlt
pop
xchg
arpl
inc
ljmp
mov
sbb
fstpl
xor
sbb
test
in
adc
dec
fadds
fsin
ja
aam
jbe
push
jne
or
sub
dec
xchg
sub
ret
gs
cli
push
loope
mov
or
aas
push
fimull
test
imul
ja
addr16
lahf
mov
ljmp
rcrl
fistpll
and
cmp
mov
xor
daa
es
mov
pop
ds
adc
inc
in
sbb
push
mov
cmpsb
out
out
call
movl
adc
bound
andl
stos
roll
xor
cmp
testb
sub
cmp
jb
leave
das
call
xor
sub
jns
add
xchg
das
aad
xorb
clc
dec
mov
int
cmc
movsb
loope
jge
adc
nop
sub
dec
shrb
cmp
into
mov
mov
out
jnp
xchg
mov
xchg
cltd
nop
addl
test
push
sub
aam
lcall
and
movsl
pop
je
or
or
adc
sub
add
add
dec
imul
cmp
add
sbb
pop
fistpl
adc
sarl
or
xor
adc
pop
fists
aas
out
and
fildl
cmp
and
out
das
push
push
add
mov
mov
in
cld
jmp
inc
sub
or
cmp
push
or
daa
add
je
std
adc
int
pop
mov
ss
mov
push
out
add
shlb
pavgw
ret
enter
aam
loope
shll
or
and
mov
arpl
pop
pand
aad
imul
bound
imul
popf
fsts
cmp
mov
mov
adc
mov
sbb
cmpb
incb
ja
mov
xchg
adcb
test
mov
inc
mov
dec
ret
dec
sbb
ds
push
xchg
add
fidivrl
das
mov
fcmovnbe
sub
dec
jp
sti
push
ss
push
cmp
jg
fimull
nop
imulb
in
cli
jl
ds
xchg
jnp
pop
mov
fwait
mov
mov
or
lock
xor
cmp
inc
dec
cmc
out
mov
mov
xchg
cmpsb
adc
sub
sub
mov
sub
sbb
mov
cmp
xor
js
aam
pop
movd
pusha
addr16
cmp
pusha
mov
add
pop
or
adc
xor
insb
jmp
jbe
jmp
xor
xchg
lea
lods
mov
push
cs
push
outsb
outsb
adc
popa
xchg
push
push
inc
pop
jecxz
xor
dec
and
dec
mov
pushl
xchg
mov
mov
cmp
push
gs
cmp
add
aad
dec
sub
pop
xor
insl
out
pop
iret
in
loope
mov
icebp
cmp
and
sub
adc
daa
lahf
mov
loope
lock
test
xor
jns
int
mov
mov
sbb
je
or
and
gs
mov
mov
lcall
add
lret
and
jp
sbb
and
bswap
push
hlt
bound
or
div
pop
dec
push
popf
xchg
andl
mov
cs
lcall
mov
les
and
add
in
mov
push
outsb
je
cmp
test
dec
roll
and
test
xor
sub
pop
and
sbbl
inc
mov
mov
rclb
test
cmc
arpl
roll
add
pop
push
dec
cmpl
adcb
sahf
xor
aam
mov
subb
add
and
cmp
das
js
jae
stc
hlt
faddl
push
bound
in
and
and
xchg
lds
cmp
scas
or
arpl
adc
rcl
dec
pop
add
and
and
jecxz
cmp
ret
aaa
adc
scas
mov
mov
daa
pop
repz
scas
test
adc
test
cmpl
pop
shlb
pop
pop
xlat
inc
mov
pop
cli
loop
xchg
mov
pop
nop
enter
or
ja
mov
inc
push
ss
pop
mov
xchg
mov
mov
sbb
mov
in
pop
add
test
xchg
pusha
xchg
and
xorps
pop
scas
lock
mov
inc
dec
mov
aam
pop
fdivrs
or
je
shl
not
jle
push
rcrl
aaa
stos
addr16
je
jmp
xchg
rolb
inc
int
mov
sub
sbb
jle
data16
xchg
sbb
sbb
movsl
ss
pop
xor
or
dec
out
xchg
clc
js
ds
push
cmp
mov
mov
pop
arpl
popa
mov
or
pop
push
lock
into
stc
test
mov
mov
sub
in
push
popf
cs
mov
sbb
dec
insb
jb
mov
shr
lahf
int
xchg
sbb
flds
repnz
mov
icebp
pop
test
inc
mov
pushw
lcall
xor
push
mov
hlt
jno
rcl
mov
xchg
aam
mov
push
cmp
mov
and
clc
mov
adc
popf
sbb
rcll
pop
fwait
sarb
rol
jns
xchg
push
aaa
out
sbb
imul
outsl
fdivr
push
cld
cmp
xchg
add
shlb
loop
cmp
int3
and
mov
sbb
and
or
add
in
pushf
out
or
push
test
dec
or
sbb
fidivl
fiaddl
mov
and
adc
incb
push
or
stos
filds
dec
mov
ja
jg
pop
pop
mov
stos
mov
aam
lds
addl
sbb
div
int3
sahf
mov
movsb
dec
call
imul
dec
mov
sahf
xor
fildll
inc
mov
sub
push
inc
dec
jns
dec
daa
dec
cmpsb
adc
lahf
je
mov
sbb
aaa
lock
rolb
add
dec
std
outsl
scas
xchg
cmpsb
mov
inc
sbb
or
scas
das
inc
cmp
mov
mov
lss
add
xchg
pop
inc
cmp
rolb
adc
aas
std
adc
js
cmc
pusha
or
lea
dec
movsb
into
nop
sub
push
or
cmc
pop
pop
repnz
jb
lret
xchg
loope
loop
icebp
pop
and
insb
sub
loopne
in
mov
sub
dec
outsb
jp
cli
iret
add
js
cmp
rcr
mov
test
test
call
jge
int
cvtdq2ps
and
jno
add
dec
sbb
cmc
enter
xor
stos
xchg
inc
aam
daa
dec
mov
and
add
push
xorb
xchg
jg
aas
pop
dec
mov
jbe
dec
pop
dec
xor
xchg
adc
push
mov
xlat
shll
data16
stos
inc
xchg
lahf
pop
jge
sub
mov
pusha
pop
xor
outsl
xor
cmpb
hlt
rcll
mov
es
lods
lock
mov
test
ja
inc
std
leave
dec
decl
cld
fadds
fnstcw
cmp
or
test
cltd
into
cwtl
fdivrl
frstor
jmp
loop
cmc
int3
xchg
ss
enter
add
incb
cmp
pop
outsl
or
inc
insb
add
sbb
scas
or
inc
mov
adc
push
push
inc
add
cld
xchg
dec
ret
lock
mov
sahf
dec
fcompl
in
je
push
loopne
imul
insl
dec
dec
pop
ljmp
pushf
out
or
xor
ds
sbb
les
push
xor
pop
pop
inc
ret
add
lret
lcall
call
mov
rorl
pop
ficompl
mov
cwtl
xchg
jp
bound
shll
psubusb
mov
popf
inc
daa
sbb
adc
cmp
xchg
push
pop
roll
loopne
sub
aam
xchg
mov
adc
push
hlt
sub
sbb
or
les
inc
jmp
mov
or
xor
pop
jg
pushf
pop
and
cmpsb
pop
mov
gs
cmc
gs
mov
cmp
dec
lods
dec
sbb
xor
sahf
dec
push
jge
stos
insl
sahf
xor
movsl
mov
adc
rcrb
cs
mov
out
jle
lods
jo
sbb
pop
add
pop
js
push
clc
dec
xchg
orb
mov
adc
loope
data16
dec
popa
clc
sarb
or
push
fdivs
sub
testb
mov
clc
or
adc
or
stc
js
pusha
push
push
add
mov
adc
fsubrl
adc
mov
xchg
fiadds
add
or
in
push
cmpsl
outsb
dec
scas
cmc
in
mov
jb
dec
lea
loop
dec
clc
or
mov
pop
insb
fsubrs
xchg
addr16
sub
sbb
inc
clc
in
xchg
mov
sbb
inc
int
lret
loope
pop
dec
mov
xor
add
sub
cmp
mov
inc
sbb
rorl
mov
or
jbe
sub
scas
push
movsb
int
mov
das
cmp
add
sub
jl
cmpsl
fldenv
cmc
mov
sarl
sub
aas
mov
push
and
mov
xor
ficomps
clc
lret
popa
bound
add
filds
inc
sub
ljmp
scas
add
decl
xchg
fidivl
sti
add
xchg
ret
or
shll
popa
shlb
or
mov
push
cmc
sbb
mov
adc
cwtl
jmp
call
or
and
push
adc
push
sbb
sbb
dec
push
pop
inc
ret
loope
sahf
mov
lods
dec
insl
push
lcall
rclb
or
push
lcall
mov
xchg
xchg
push
push
cli
mov
dec
sti
sahf
leave
mov
xor
mov
add
ds
lds
pop
ljmp
push
jb
xor
movl
insl
das
cmc
mov
imul
push
sbb
lods
xchg
inc
cmpsl
push
add
jnp
sbb
addl
cmp
cli
mov
add
add
xchg
mov
jp
add
ffreep
mov
dec
mov
inc
stos
or
xlat
das
pop
not
out
loope
push
test
xlat
into
and
loop
arpl
dec
push
out
daa
das
sub
adc
sbb
lock
enter
cmp
mov
ljmp
call
jne
push
in
sub
jge
sbb
cmc
dec
js
test
inc
or
enter
inc
aad
xchg
js
das
hlt
mov
jp
mov
or
or
jnp
popa
call
jo
dec
popa
out
xchg
jmp
fldl
out
xor
sub
js
pop
div
stos
and
xor
stos
icebp
imul
mov
fldcw
sub
test
mov
mov
call
sbb
lock
test
xchg
push
fnstsw
rcll
adc
lods
adc
xchg
cs
ds
sbb
push
mov
mov
add
mov
addb
mov
xchg
jl
cld
adcb
push
and
and
test
out
sub
sbbl
imul
stos
mov
and
add
adcb
jl
js
lahf
int
lds
cmpb
shl
mov
test
out
add
test
sub
inc
adcl
call
sub
sub
pop
mov
addb
clc
mov
mov
sbb
inc
mov
data16
pop
jo
and
add
push
loopne
in
shl
outsl
cltd
in
stos
lds
fisttps
cmc
ret
shrb
adc
jns
cli
aad
fs
cmp
insb
adc
add
push
lret
pop
lock
cli
jo
popa
push
stos
pop
cmp
sbb
push
aaa
xchg
pop
cmpsl
nop
fwait
add
push
repz
pop
add
cmpsl
decw
push
in
dec
addr16
mov
lcall
adc
ret
inc
stos
lret
pushf
test
test
and
imul
sub
mov
xchg
lock
scas
xchg
inc
jecxz
in
xor
das
sub
iret
outsl
cmpsb
add
movsb
or
sbb
cmp
in
ds
ds
lahf
idivl
add
sbb
sub
aam
gs
mov
cld
hlt
push
ret
test
outsb
pop
fs
sbb
jns
or
inc
hlt
ret
cmpsb
mov
scas
cmp
push
add
pop
cmp
movsl
dec
pop
jo
sbb
js
pop
test
aad
insl
sub
mov
and
or
stos
leave
insb
subl
data16
sub
sub
add
clc
xchg
mov
sbb
or
xor
and
xchg
jo
mov
mov
or
mov
dec
ret
add
mov
lahf
loopne
jns
popa
fadd
xchg
add
push
push
pop
xor
aas
out
repz
mov
stc
lods
scas
push
pop
add
mov
in
pop
mov
sub
adc
push
mov
and
mov
or
data16
scas
or
xor
sub
xchg
or
cmp
clc
lahf
pop
mov
jmp
pop
aad
arpl
adc
cmp
nop
mov
popf
cmp
sbb
pop
out
out
enter
aam
fs
push
push
mov
fcmove
xor
push
cmp
aad
adc
dec
cmp
test
adc
pop
fwait
mov
sbbb
inc
test
mov
adc
mov
push
aas
adc
push
outsl
test
cld
mov
sbbl
mov
push
inc
stos
push
decl
jno
jecxz
ds
adc
push
icebp
mov
rol
inc
mov
push
inc
loopne
popa
ret
dec
or
or
lret
jp
cmpsb
mov
adc
jl
pop
adc
mull
mov
movsl
and
push
sbb
or
adc
xor
inc
das
adc
or
mov
sar
testb
pop
cs
loope
or
cmp
or
jge
adc
sahf
lds
dec
push
lret
pop
jp
stos
and
in
cmp
and
push
add
sub
clc
cmp
and
ret
shl
lcall
inc
or
xchg
cmp
or
xor
cmc
cli
or
and
rorb
dec
pop
nop
dec
fs
pop
jb
mov
add
test
sub
call
pop
je
lret
int
or
cwtl
jbe
jp
fsts
add
push
pop
dec
push
lahf
mov
mov
xchg
stc
fwait
lret
add
jge
rolb
movsl
lock
jbe
or
sbb
xchg
ljmp
push
or
out
sbb
movl
bound
inc
push
mov
jg
mov
or
sub
jbe
mov
jnp
push
lcall
cs
jb
mov
clc
mov
jns
or
pop
enter
cmpsl
mov
add
call
ret
mov
ss
or
fs
cmp
add
and
insl
sub
adc
pop
pushl
xchg
push
cli
sti
jmp
dec
xchg
inc
mov
dec
cmp
jnp
enter
pop
arpl
or
xor
mov
decb
inc
lahf
jl
jle
fs
pop
jo
adc
cmp
push
orps
rcr
ficoml
push
mov
rcrl
imul
aaa
xor
push
push
movsb
push
shll
xor
test
push
das
scas
adc
push
data16
pop
rorl
mov
mov
sub
inc
jae
pop
and
fsubrs
inc
gs
ret
dec
js
or
cli
js
cmp
jge
sub
loop
hlt
cmp
xor
dec
xchg
loope
or
aad
mov
pop
lock
fimuls
xchg
xor
push
call
xor
test
lret
std
mov
movsb
aas
jle
xchg
sbb
lcall
xor
mov
ret
stos
add
cmp
cli
adc
dec
xlat
fidivrs
outsb
orb
call
sbb
cli
or
push
sahf
aaa
add
or
xchg
nop
mov
adc
jecxz
test
arpl
or
incl
push
mov
aas
hlt
rcl
sub
push
rorb
sarb
pop
xchg
mov
hlt
lock
pop
add
adcb
sub
shrb
dec
lcall
and
push
mov
push
mov
aas
outsb
jp
push
push
and
aam
cmp
ljmp
add
mov
mov
mov
adc
push
aaa
add
std
mov
popf
dec
and
mov
xor
mov
hlt
xchg
ljmp
push
xchg
mov
movsb
loope
inc
mov
aas
xchg
mov
and
insb
inc
cmp
out
addb
ljmp
xor
lock
sbb
push
xlat
add
push
cmpsb
into
mov
xorb
mov
mov
jno
push
dec
inc
into
test
dec
mov
popa
and
cltd
sbb
in
cmp
fs
sbbb
push
push
pop
push
mov
mov
loopne
sahf
stos
cmpsb
xchg
cmp
aam
lahf
xor
fwait
cld
and
cld
je
inc
clc
neg
cmpb
test
bound
fstps
arpl
js
ret
lahf
lods
shrl
mov
hlt
dec
mov
mov
rorb
or
mov
add
lock
adc
pushf
jns
add
pop
push
pusha
cmp
xchg
push
or
cmpsl
or
mov
fsubrl
push
or
dec
add
cmp
mov
pop
mov
cmp
inc
sbb
les
inc
xor
cmpsl
adc
push
mov
mov
hlt
pop
or
ret
jle
arpl
or
ret
shlb
lds
mov
xor
out
pop
test
xor
fsubrp
or
lahf
lds
loope
fidivrs
add
cmp
mov
mov
pop
les
psllw
mov
jl
add
hlt
or
or
in
or
insb
hlt
jecxz
dec
or
inc
pusha
shrb
movsb
sahf
jecxz
push
clc
xor
enter
fcmovu
dec
mov
test
movsb
lcall
inc
in
sbb
push
jg
jnp
cmp
add
inc
mov
cmpsl
pop
and
dec
cltd
pop
mov
dec
pop
pushf
sub
loope
cmp
jns
subb
cli
cmpsb
push
imul
sar
lea
adc
out
fbld
jo
insb
add
sub
cmp
es
enter
pop
sar
dec
inc
inc
sti
dec
inc
mov
dec
sahf
clc
jne
shl
inc
aad
je
pusha
and
mov
and
mov
scas
fs
outsl
lret
jae
sbb
sub
sbb
add
mov
lea
cld
push
mov
imul
cmc
sbb
scas
push
add
push
pop
les
lods
enter
sbb
jmp
daa
popa
loop
out
decl
enter
aas
pop
stos
lret
pop
pop
pop
jo
mov
pushf
xchg
arpl
push
int3
mov
shlb
push
pop
inc
mov
call
sarb
ds
insb
loop
ret
jg
mov
pop
pop
cld
cs
and
js
nop
pusha
mov
movsb
inc
jns
mov
fidivs
das
mov
rcrl
imul
sub
mov
inc
cwtl
inc
mov
pop
jmp
aam
and
test
and
popf
inc
push
mov
pop
clc
and
or
mov
inc
movsl
scas
or
pop
pop
pop
sbb
pop
cli
inc
dec
mov
sbb
shlb
or
dec
push
fistpll
and
pop
pop
inc
push
jp
lods
out
cmpl
jmp
add
popa
push
lock
adc
cwtl
xor
shll
pop
mov
clc
mov
dec
sbb
jl
cltd
push
int3
into
js
jns
repz
mov
imul
lea
sahf
mov
push
add
fwait
adcl
push
fwait
mov
jbe
adc
adcl
cld
sbb
ljmp
mov
push
pop
lock
pop
sbb
cli
imul
jmp
mov
or
fnsave
fdivrs
push
stc
int
imul
mov
xchg
mov
cmpsl
pop
std
sub
insl
cld
add
mov
sub
xor
insl
ret
sub
testb
mov
leave
adc
into
pop
sub
and
xor
pop
les
cltd
mov
add
inc
pop
lods
and
fstl
mov
and
imul
or
js
fucomi
das
mov
ret
and
push
jae
mov
inc
scas
aas
dec
iret
mov
idivb
xor
icebp
popf
out
lcall
and
aam
mov
cmpsb
jo
lret
adcl
jnp
loope
out
mov
lock
in
rorl
inc
adc
cmpsb
inc
jmp
adc
mov
push
cmpsb
nop
call
push
mov
popa
push
jg
push
xchg
xor
and
lods
into
stos
xchg
cld
mov
sbb
mov
and
aam
sub
jno
xor
idiv
test
pop
push
pop
cs
enter
in
mov
imul
mov
mov
mov
aad
push
in
add
or
push
xchg
push
inc
adc
scas
cmp
sbb
dec
sbb
xchg
push
sub
or
mov
mov
sbb
xor
dec
mull
sahf
pop
clc
in
clc
lods
push
mov
dec
incl
xchg
sbb
imul
dec
hlt
xor
sbbb
es
and
mov
push
sbbb
or
sbbb
mov
stos
mov
shrb
mov
fwait
insb
xor
pop
dec
mov
push
movups
adc
inc
inc
cmp
mov
lods
inc
andl
aam
sbb
cmovo
arpl
push
les
divb
movsb
push
add
jp
int
adc
and
xchg
f2xm1
mov
pop
mov
aad
adc
lcall
mov
adc
mov
xor
mov
frstor
daa
sahf
push
mov
mov
cwtl
push
and
dec
fldl
sbb
dec
rorl
inc
xor
mov
div
nop
sbbb
imul
fwait
les
dec
xor
loop
pop
cld
mov
and
sbb
aaa
and
aam
or
cmp
push
add
or
mov
xchg
dec
adc
dec
and
jnp
ret
add
xchg
loop
fcomps
test
mov
enter
push
jno
inc
scas
add
je
icebp
das
mov
jnp
test
aam
mov
pop
les
sub
sub
adc
inc
movb
js
addr16
loop
pop
daa
rcl
xorl
push
cmp
push
test
pusha
shll
add
adc
sbb
imul
jp
imul
xor
jne
lret
fmuls
call
outsb
cmp
push
jo
inc
cmp
cmpsb
mov
pushf
pop
and
mov
mov
pusha
outsb
sbb
fiadds
jno
mov
outsl
cs
pcmpeqb
loope
outsl
sbb
xchg
shll
icebp
js
cmp
iret
xorb
adc
pop
mov
cmp
stos
sbb
add
lahf
loopne
xchg
mov
test
leave
icebp
sti
jp
xor
scas
add
or
adc
lock
sub
rcll
inc
cli
testb
add
xor
sbb
pushl
popf
test
fistpll
out
insl
sub
add
cld
or
mov
mov
ljmp
inc
cmpsb
leave
pop
loopne
add
sarb
loopne
int
mov
out
or
dec
stos
jge
push
inc
xchg
push
pop
dec
dec
mov
xchg
notb
push
xchg
test
lret
adc
nop
je
test
pop
xor
xor
xlat
jecxz
out
and
clc
and
add
bound
pop
jp
xor
inc
pop
lahf
lsl
mov
adc
bound
adc
dec
outsl
stos
inc
nop
inc
ficoml
mov
lock
push
jae
add
mov
nop
add
sub
jmp
push
mov
scas
iret
ss
xchg
and
push
aam
pop
call
xchg
cmp
es
cli
or
aas
addb
aad
test
filds
scas
xchg
leave
int3
sbb
cmp
insl
shl
adc
sbb
cli
add
into
fisubl
rcll
adc
xorb
fmulp
stc
cmp
xor
dec
fmull
lret
jge
orb
movsb
adc
sbb
aas
cmc
push
pop
inc
sahf
ljmp
adcb
inc
scas
aas
repz
sbb
mov
enter
mov
mov
pushf
sarl
outsl
repnz
push
add
sahf
scas
push
or
mull
push
pop
mov
addl
lds
jo
jne
bound
push
enter
stos
push
adc
pop
xchg
cs
and
mov
jg
inc
loope
add
and
sarb
nop
loopne
insl
push
stos
data16
pusha
xor
fwait
jge
out
movsl
sub
adc
in
mov
push
in
lcall
ljmp
fs
ret
sub
inc
fists
inc
push
xchg
sub
out
jg
mov
or
test
rorb
ja
push
cmp
rclb
add
inc
cmpsl
push
pop
lds
xor
mov
scas
andl
jae
cld
cmpl
rcrb
fwait
mov
and
mov
aad
sub
pop
mov
sbb
and
or
and
hlt
into
push
fbld
adc
fidivrl
aam
sbb
xchg
and
clc
imul
jbe
sub
icebp
cmp
in
jmp
pop
cmpsb
mov
clc
pop
dec
stc
jl
outsb
sub
mov
xor
ret
inc
xchg
das
mov
or
jb
loop
mov
mov
daa
loope
pop
cmp
sub
lahf
inc
out
std
lds
ljmp
sub
lods
into
pop
pusha
push
and
jnp
mov
push
or
repnz
gs
fsubp
push
mov
out
sbb
ss
pop
je
data16
pop
and
mov
sub
cmp
inc
les
ret
xchg
popf
or
sarl
push
out
sar
and
ljmp
insb
mov
pop
loope
cmp
or
xor
fwait
jne
sti
loop
xor
pop
jno
inc
and
xor
decl
test
pushf
mov
imull
pop
movsl
push
mov
ret
and
jb
repz
push
push
xor
shlb
mov
and
stos
icebp
cmp
pop
cmp
mov
jns
inc
sbbb
out
insl
xor
lds
mov
std
loop
inc
mov
jns
lret
cmpsl
call
or
stos
xor
daa
mov
pushf
cs
rolb
and
jg
insb
fstps
adc
in
or
out
mov
inc
xchg
cmpsl
in
add
fmull
mov
movsl
popa
lods
pop
jge
xor
mov
mov
lods
add
or
dec
inc
pop
addl
jne
jl
in
xchg
sahf
mov
and
fdivrs
inc
dec
clc
jb
add
jne
aad
pop
or
int
test
xor
sar
sarl
sub
and
and
shl
fs
repnz
scas
dec
mov
cwtl
pushf
or
test
addr16
push
test
cli
in
pop
fidivs
pop
mov
mov
sbb
xchg
sbb
sbb
outsb
imul
lock
sbb
lds
cld
sbb
push
jp
pop
push
mov
mov
andb
jo
jge
jp
inc
xor
sub
sbbl
mov
in
stos
sbb
loop
or
mov
mov
add
test
jnp
sbb
adc
pop
jp
sub
cmpl
jg
inc
pop
add
imul
test
and
test
nop
aad
nop
arpl
sub
xchg
cwtl
inc
mov
insl
imul
push
adc
adc
popa
xchg
dec
cwtl
push
cltd
add
pop
out
jo
or
mov
lock
mov
insl
push
pop
xchg
je
ja
inc
pop
adc
cld
pop
popf
cmpsl
jb
mov
xor
addb
inc
mov
xor
jecxz
adc
xor
cmp
arpl
and
jnp
jo
pop
cmp
pop
xchg
dec
arpl
mov
xchg
xchg
add
pop
lahf
fadds
jl
jnp
push
out
mov
hlt
fnstsw
xor
dec
push
push
xchg
leave
or
push
sub
add
and
aam
or
fstpl
or
fstpt
in
jge
fsubrp
adc
and
dec
movsb
mov
push
xor
dec
inc
adc
mov
add
ljmp
lea
sbb
aaa
fadds
cld
int3
xor
or
push
pop
lock
loope
insb
sbb
insl
mov
xor
or
lods
test
ret
cmp
mov
add
and
inc
fwait
push
adc
stos
mov
sti
jp
mov
mov
cmpsl
imul
mov
sbb
mov
cmp
pop
ljmp
insl
daa
in
loop
mov
pusha
daa
inc
mov
sahf
add
jnp
mov
push
xchg
ret
mov
scas
lock
sarl
push
sbb
repnz
mov
sub
adc
in
and
test
xor
mov
lret
mov
lret
hlt
or
push
or
cld
js
lcall
inc
imul
and
adc
adc
outsl
aaa
inc
mov
ds
cmp
mov
mov
mov
add
in
add
mov
inc
out
adc
push
roll
lret
pop
int3
xchg
addb
add
inc
dec
daa
sbb
sbb
loop
xor
scas
jae
cwtl
inc
fcomi
dec
ljmp
lahf
mov
int
sbb
sahf
add
outsb
daa
test
mov
std
cli
das
adc
xor
adc
pop
loope
mov
fdivs
rcrl
std
testl
and
insb
inc
jmp
mov
popa
xlat
mov
lret
aad
and
adc
popa
imul
mov
and
dec
lea
jge
stos
adc
movsl
arpl
ret
xchg
mov
xor
cwtl
xor
push
sbb
inc
aas
daa
mov
popf
add
sub
add
and
xor
xor
push
and
repz
js
mov
adc
or
xor
pop
mov
inc
les
pusha
push
mov
insl
dec
daa
mov
sub
mov
shrb
leave
mov
xchg
xchg
testb
cmp
ret
jge
mov
das
lods
mov
xchg
cmp
xor
or
jo
insb
cltd
cs
adc
cmp
jg
movsb
push
jle
mov
or
jns
xor
jne
lret
xchg
pop
sub
add
mov
add
jg
jne
cmp
cmp
mov
mov
test
les
shll
inc
adc
mov
xchg
inc
mov
and
ss
mov
inc
fidivs
in
pop
mov
jno
mov
lods
sub
int3
fs
and
mov
sub
leave
scas
xor
cli
or
ds
and
inc
std
into
sub
jmp
sysenter
adc
and
outsb
push
xor
mov
shlb
sar
push
rol
sub
es
rol
in
cmpsl
orb
sbbl
xchg
cltd
mov
fstpl
nop
ja
mov
imul
xchg
sub
sub
sub
dec
ret
lea
in
icebp
xchg
jle
rorl
in
mov
addl
push
js
sub
jmp
dec
jecxz
dec
push
mov
mov
mov
in
fbld
rcrb
pop
inc
fldt
xlat
rcl
pop
sub
jle
arpl
insl
bound
out
cld
test
cmp
jecxz
push
jle
xor
pusha
fwait
loopne
hlt
jmp
inc
test
lcall
call
xchg
lret
stos
mov
out
ret
add
sub
lea
adc
lds
sbb
rolb
dec
lea
mov
xor
jnp
mov
inc
dec
lods
sarl
clc
mov
pop
ds
test
dec
nop
jge
xorl
imul
faddl
das
sub
jg
jne
repz
std
cwtl
leave
dec
dec
inc
or
or
xchg
inc
jne
rolb
out
mov
rolb
das
add
add
jae
mov
imul
aas
pop
es
mov
stos
sbb
roll
adc
adc
movsb
cmp
loope
sub
rcl
arpl
mov
or
out
jbe
test
ss
cmp
mov
flds
jns
or
add
mov
mov
ret
cmp
dec
addr16
shlb
loopne
test
call
push
jnp
scas
sbb
mov
arpl
or
cli
push
jle
out
mov
mov
in
inc
popa
inc
push
ret
cmpb
pop
scas
idivl
aas
pop
pusha
mov
sub
push
test
pop
sbb
push
add
mov
add
movsl
test
mov
stc
push
add
in
or
sbbl
dec
gs
xor
sub
addr16
insl
add
nop
test
pushf
xor
shll
lea
movsb
sub
or
stc
ja
pushf
mov
and
test
fnsave
xchg
dec
out
in
mov
push
aad
lret
rcr
sbb
sbb
dec
mov
aad
push
xchg
dec
push
sbb
jo
pop
mov
add
push
ds
test
mov
je
and
lods
xor
xor
jge
and
mov
or
or
sub
adc
dec
mov
add
adc
or
dec
xchg
hlt
out
sub
ds
aam
or
out
out
sub
loop
mov
and
sub
mov
sub
mov
inc
lea
sub
repnz
mov
idivb
mov
push
inc
pop
dec
ret
iret
les
syscall
and
lods
xlat
out
test
pop
sbb
testl
xchg
pop
push
test
inc
mov
pop
or
adc
popa
stos
mov
push
ja
cmpsb
add
lock
ja
mov
imul
lea
repnz
movsb
mov
hlt
loopne
loope
mov
xchg
movsb
loop
pusha
aad
lcall
jg
add
inc
push
jle
aad
mov
call
mov
add
addr16
or
je
ret
xchg
imul
mov
sub
adc
pop
dec
loope
daa
cmc
loop
out
shll
test
adc
fdivr
mov
test
jp
fnstcw
pop
pop
or
adc
cli
movsb
iret
out
test
xlat
addl
and
dec
pop
xor
ret
outsb
cmp
imul
add
pusha
test
hlt
add
cmp
inc
ret
pop
pop
in
shrb
or
fldl
push
xor
jnp
sbb
or
jnp
dec
lea
jmp
fiaddl
jg
loopne
mov
les
arpl
pop
sbb
scas
imul
je
push
addr16
mov
xchg
jp
lods
clc
enter
stc
and
jne
cmp
andl
shll
xchg
fs
fwait
cltd
pop
movsb
xor
mov
mov
lss
mov
jae
jo
jb
test
rcrl
xchg
mov
test
adc
andb
enter
popa
push
loope
adc
push
pushf
add
enter
add
ficompl
mov
rcll
xchg
pop
push
test
je
cmpsb
shl
mov
sub
adc
mov
jno
sub
sub
lea
icebp
lods
insb
gs
fisubrl
jg
mov
cmp
ret
xor
insb
bound
and
mov
mov
cmp
test
add
test
push
sarb
and
jns
adc
test
stos
sbb
pop
cmp
xchg
rclb
das
dec
inc
scas
cmp
loopne
or
popf
push
fdivrs
sbb
cltd
adc
lock
inc
bound
add
movsb
fwait
aad
test
cli
mov
imul
pop
jno
lea
lds
xchg
std
mov
pop
mov
pop
scas
adc
jnp
lds
and
add
sub
xchg
out
inc
dec
insl
hlt
icebp
insl
call
mov
scas
mov
xchg
cmpsl
push
xchg
ds
pusha
sub
test
ret
pop
call
mov
or
push
and
xor
stc
pop
mov
js
mov
sub
test
loopne
cmpsl
jmp
mov
mov
inc
mov
loope
xchg
clc
push
loope
stos
mov
mov
xchg
xlat
add
loope
push
pop
sbb
push
jge
sahf
mov
jno
iret
shll
sub
nop
push
loop
lahf
adc
jl
xlat
xor
push
jge
lock
ljmp
inc
add
jne
or
push
mov
dec
mov
xor
add
ljmp
scas
xchg
xor
das
mov
in
testl
mov
pop
outsb
or
mov
rolb
out
adc
pop
pop
cmp
mov
lods
inc
lahf
dec
push
sbbl
inc
sub
ret
sub
fcmovb
dec
push
add
dec
int3
loopne
jo
call
or
aas
addr16
popa
adc
sub
lea
mov
mov
daa
les
cmp
xchg
mov
aas
xchg
sbb
shlb
das
pop
jmp
mov
jecxz
ret
sub
jge
mov
or
adc
in
jo
test
loopne
lods
arpl
jae
xor
cmp
pop
jmp
push
jg
and
mov
orl
cmp
adc
xor
mov
mov
repz
push
icebp
push
inc
push
jl
sarb
cmp
movsl
sub
cmp
cmp
jns
seto
push
or
adc
mov
pushf
jle
loopne
mov
mov
ficoml
sbb
adc
andb
lods
or
adc
xchg
ret
mov
mov
out
test
outsb
scas
shrb
arpl
xor
jmp
ret
je
test
push
mov
addr16
mov
fisubs
sub
incb
clc
andb
cmp
adc
or
in
push
xchg
pop
je
mov
daa
mov
addl
dec
movsl
rcl
out
enter
shll
pop
insl
xor
lret
mov
mov
cmp
inc
adc
pushf
test
xchg
test
les
mov
mov
jecxz
xor
ja
rcr
insl
mov
mov
cltd
adc
lods
roll
in
out
pop
xor
mov
jnp
xor
xor
jp
nop
pop
lahf
lea
push
inc
sub
add
loop
fidivrs
dec
sbb
dec
ja
daa
addr16
cmp
imul
push
push
inc
add
xor
pop
xchg
roll
and
js
divl
dec
std
dec
sahf
in
push
js
pop
mov
stos
je
dec
iret
push
mov
mov
add
mov
jnp
sub
sub
jmp
cmp
xor
jns
cli
jl
test
jo
rclb
aad
add
test
jb
or
pop
jbe
popf
inc
test
sub
cld
ficomps
pop
and
and
mov
stos
inc
or
pop
inc
cmp
out
in
mov
dec
inc
push
mov
xchg
std
sbb
xchg
sub
sbb
and
and
cmp
or
movsb
ss
ds
mov
jecxz
jl
and
popa
in
call
mov
and
pop
mov
jnp
xor
sub
fwait
xor
shll
cmp
or
dec
popa
mov
scas
ja
rcl
mov
adc
mov
outsl
jb
pop
fucomi
mov
mov
test
shr
les
sub
mov
popa
xor
cli
orl
inc
sbb
scas
fimull
jno
sarl
sbb
cmpsl
sub
and
sub
fwait
jg
lahf
rclb
mov
and
xchg
cmpsb
rorb
imul
jbe
ret
daa
test
in
add
cmc
mov
jmp
fstps
inc
pushf
inc
shlb
call
xchg
loope
scas
cs
in
ret
push
popa
pop
js
aad
aad
cs
mov
pop
cmp
and
fs
ss
aaa
push
fwait
out
pop
mov
test
jle
test
vmovmskps
xor
ljmp
add
xor
cwtl
sub
gs
out
loopne
pop
push
pop
push
fnstcw
pop
add
push
or
shll
cmp
fwait
push
pop
cmp
jmp
xchg
xor
jno
xor
or
inc
roll
adc
sarb
pop
test
lea
mov
jp
and
xlat
scas
stos
ljmp
aad
xor
hlt
insb
leave
mov
mov
add
xor
or
mov
sbb
js
push
movsl
popa
and
lds
pop
push
pop
jp
adc
inc
mov
pop
sbb
rcrb
fldl
sub
mov
hlt
add
bound
or
cwtl
stos
bound
dec
int3
or
mov
bound
loop
mov
repz
hlt
fldcw
cli
cmp
outsb
or
cmp
lock
and
cmp
insl
pop
paddusb
pop
cmp
test
js
xchg
sub
data16
movsl
pop
adc
inc
cmp
add
dec
or
pusha
pop
aad
xor
push
test
das
jle
and
pop
je
pop
ljmp
bound
loopne
add
popa
push
cmp
dec
dec
fisubl
adc
mov
push
xor
sti
jno
ds
inc
lods
inc
inc
jae
xor
lods
movntq
cmpsl
pop
or
clc
sbb
inc
jmp
adc
jo
inc
or
mov
popa
push
fsubrs
out
rolb
loope
push
xlat
sbb
dec
cmp
enter
dec
test
push
xor
gs
or
fsubl
lret
loopne
ja
or
sub
sarb
mov
adc
out
and
mov
push
pop
inc
sbb
ret
add
mov
aaa
dec
loope
lods
sbb
mov
sbb
add
jne
ljmp
xchg
xor
jg
push
dec
jge
ret
dec
ja
je
push
inc
cltd
adc
ljmp
push
pop
sarb
and
sbb
outsb
int
in
pop
test
inc
or
jp
push
dec
mov
repz
dec
push
or
and
dec
rorl
push
adc
ret
sti
adc
das
inc
cmp
lret
loopne
cmp
imul
aad
jg
inc
ja
mov
call
cwtl
mov
mov
insb
sbb
mov
movsb
daa
pop
mov
and
mov
cmpl
aam
xchg
scas
outsl
ds
fstpl
dec
pop
pop
test
mov
pop
clc
insb
addb
mov
loopne
lock
push
loop
adc
sbb
mov
or
mov
push
iret
mov
sub
lcall
cli
ret
test
nop
iret
xchg
cs
into
ds
push
jl
lea
jb
cmpsb
pop
aad
or
or
pop
enter
sub
psubd
dec
shrl
mov
and
call
pop
cmp
in
mov
add
mov
hlt
push
sarl
mov
sbbb
es
pop
movsb
fcomi
xor
pop
xchg
sub
stc
jne,pt
push
pop
dec
mov
add
js
nop
push
sbb
arpl
stc
adc
test
xchg
test
adc
jo
test
or
lock
in
lods
daa
sbb
test
stos
mov
dec
cmp
aaa
mov
cmpsb
xchg
lret
subl
xor
fldcw
pop
jmp
adc
jl
push
je
call
popl
mov
adcb
cmp
dec
lret
pop
out
andb
dec
jnp
leave
jbe
in
in
mov
or
es
cmc
sbb
das
pop
mov
and
test
push
lcall
outsb
pop
mov
xchg
test
dec
add
fcmove
mov
jp
ja
les
add
jbe
movsb
or
xor
lahf
or
dec
or
call
adc
sarb
sbb
dec
add
pop
push
or
in
pop
cld
addl
and
in
lret
mov
stos
pop
jo
pop
jbe
test
pop
sbb
bound
mov
adc
or
hlt
mov
outsl
push
sbb
sub
adc
push
xchg
and
clc
add
mov
sub
imul
jecxz
fucomip
pop
adcb
mov
fcomps
lret
add
leave
scas
fisubs
push
and
and
leave
lret
ja
push
js
cltd
sub
lahf
imul
cld
xchg
mov
les
cltd
adc
into
fisubrl
imul
shll
or
xchg
add
sbb
jp
scas
add
std
mov
push
adc
aad
das
inc
inc
xlat
cmp
jle
xchg
cs
repnz
sub
jbe
push
bound
repz
mov
cs
cld
jp
jp
inc
pop
cmp
or
add
shld
rorl
ljmp
ja
and
hlt
pusha
jnp
add
xchg
sbb
pop
aas
sub
push
cs
stos
and
mov
adc
sub
xor
ret
rolb
adc
push
dec
jecxz
test
sub
jmp
pushf
adc
sbb
popf
inc
test
adc
imul
sbb
mov
ja
cmpsb
mov
insl
or
add
inc
outsb
iret
lahf
movsb
fidivs
pop
ljmp
andb
pop
cmp
call
and
repz
lock
std
ret
es
and
cmp
or
pop
je
sbb
push
rcl
xchg
or
ljmp
adc
push
movsb
mov
rcrl
aaa
sbb
insb
imull
cmc
lods
jge
mov
mov
sbb
and
sub
or
sub
repnz
sbb
jl
ss
out
movsl
add
shll
pop
aas
movsb
les
fcom
jae
sbb
sbb
fistl
push
jo
ret
inc
inc
jmp
fmuls
mov
xchg
bound
xchg
rolb
lcall
gs
push
adc
or
push
sarl
imul
sub
fs
iret
imul
fwait
inc
sbb
and
jg
push
add
popa
js
dec
outsb
mov
cmpsl
call
cmpsl
iret
ret
mov
or
repnz
cmp
or
adc
fwait
cmc
test
scas
test
push
mov
insb
pop
sub
dec
push
fistpll
mov
sti
dec
shlb
movsb
repnz
inc
lahf
add
xchg
cmp
rorl
in
pusha
fcoml
jno
sbb
inc
jp
xchg
mov
sub
cmpsb
lods
rorl
imul
aam
xor
mov
test
mov
xor
push
fdivrs
cmpsb
std
addr16
and
lret
pop
pushf
and
inc
les
sub
loopne
pop
icebp
pop
repz
loopne
xchg
out
xchg
xchg
ljmp
scas
cmp
addr16
jb
cmp
mov
push
cmp
testl
pop
push
cli
mov
in
and
aas
jo
adc
lea
xor
xor
mov
fisubl
int
add
shll
lock
cltd
cmp
and
mov
bound
in
aas
aas
mov
mov
push
and
xlat
testl
jle
in
fwait
add
adcb
mov
lods
xchg
push
cmp
mov
dec
jl
inc
jecxz
jmp
ja
cmc
mov
push
sbb
inc
pop
insl
outsl
xor
outsl
mov
bound
out
sbb
xor
clc
push
addr16
lret
dec
adc
push
cmpsl
into
push
enter
xchg
and
hlt
push
cld
mov
pop
sbbb
outsb
adc
xor
mov
mov
and
sbb
or
pusha
push
fadds
xchg
jo
xchg
out
adc
xor
or
add
add
push
push
shlb
pop
sar
inc
aaa
adc
lods
sub
in
mov
fcom
ret
jns
jle
inc
dec
xor
pop
imul
inc
roll
cmc
xchg
adc
lock
sub
cltd
and
pop
pusha
out
loopne
test
ljmp
fwait
aam
inc
inc
sti
cmp
mov
loopne
popa
es
mov
mov
icebp
inc
stos
push
mov
mov
xlat
pusha
lods
xchg
push
pop
adc
jbe
andb
cwtl
push
push
mov
paddw
xor
pushf
lcall
mov
or
imulb
cmp
sahf
das
nop
call
lret
out
push
add
loopne
cli
add
fs
pop
lea
mov
cmp
jl
inc
mov
xchg
and
pop
insb
jp
aam
lret
aad
xchg
into
dec
lods
data16
xchg
outsb
mov
pop
jno
insb
mov
iret
out
jmp
cmp
in
jmp
mov
pop
fistpll
int
sahf
test
daa
lods
dec
adc
inc
js
add
shrl
call
xlat
decb
pusha
test
lahf
adc
push
add
ljmp
and
dec
push
push
pop
imul
les
std
dec
cmp
cmp
lea
add
fsubrs
ret
or
dec
pushf
test
shll
movsl
filds
daa
xchg
inc
mov
test
pop
xor
or
lds
in
bound
repz
inc
mov
repz
xchg
add
loopne
xlat
jmp
jp
mov
inc
sub
cmp
mov
stos
adc
lds
mov
push
push
lock
sub
add
scas
icebp
sahf
mov
call
notb
and
xchg
movsb
out
lods
lret
lock
pop
in
pop
mov
xor
in
mov
inc
lods
hlt
and
dec
cmp
ficoms
ficomps
add
lock
mov
jle,pn
bound
push
pop
ret
movups
and
negb
js
ljmp
mov
out
or
cmc
pusha
dec
xchg
loopne
fld
xchg
jb
mov
stos
or
ja
mov
mov
or
jle
andb
xchg
xor
or
jle
push
mov
sti
mov
fcomip
call
les
push
clc
jbe
fucomip
pop
push
mov
ret
xchg
inc
sub
or
add
in
or
mov
ret
pop
shll
add
stc
mov
or
jecxz
in
push
mov
cs
lock
cmp
adc
fucomi
repnz
mov
aam
ret
pop
dec
insl
ret
push
mov
cmp
pop
pop
stos
cli
push
dec
dec
sar
dec
dec
and
jmp
jno
rclb
enter
fs
add
addr16
push
js
leave
ret
cs
movsl
test
inc
clc
out
pushl
add
mov
dec
test
add
add
std
mov
shll
push
cmp
stos
rcl
or
and
add
je
xor
mov
jecxz
mov
adc
aam
loopne
out
outsb
sahf
in
imul
mov
shl
dec
cmp
push
push
xor
or
imulb
add
inc
clc
pop
sub
push
mov
mov
cltd
fnstcw
and
cmp
shlb
leave
push
or
ret
fsubrs
aas
jns
jg
inc
aam
mov
inc
dec
in
cmp
mov
jg
and
add
sub
fbstp
int
mov
psadbw
lods
mov
andb
xorl
cwtl
inc
nop
mov
inc
addl
dec
cmp
mov
cmp
aaa
mov
rol
test
pop
call
cli
cmc
add
sbb
out
imul
imul
jo
mov
cld
lds
sbb
sub
jae
xchg
mov
jbe
lods
and
aad
test
add
inc
sub
sub
hlt
push
fdivrl
hlt
or
pop
aaa
push
dec
xchg
mov
inc
inc
and
data16
cmovle
rcrl
nop
divl
out
cmpsb
mov
bound
adc
pop
out
clc
stos
pop
add
in
or
pop
mov
xchg
mov
inc
or
mov
or
xchg
fidivl
jb
in
sub
in
inc
push
or
fadds
insl
pop
push
xor
xchg
jle
or
mov
push
icebp
aaa
xchg
dec
faddl
xchg
add
ret
les
clc
test
xor
pop
xorl
das
nop
movsb
mov
stc
dec
in
jg
dec
pop
push
mov
aaa
dec
dec
xor
inc
and
ss
xchg
bndldx
xchg
dec
incb
add
lcall
xchg
sti
add
cltd
jmp
xrelease
mov
and
iret
pop
dec
rorb
xor
sub
cli
jno
or
sub
mov
xchg
add
aaa
loopne
dec
mov
repnz
es
jo
mov
xchg
js
mov
xor
add
rorl
stos
and
jl
imul
inc
dec
mov
das
mov
lahf
mov
or
fimuls
jge
addl
dec
sbb
or
adc
adc
rorl
rcr
bound
xchg
cmc
lock
jp
dec
pop
add
xor
push
push
xchg
push
nop
push
std
pop
pop
mov
in
jo
test
or
sbb
add
das
adc
mov
push
add
sub
push
dec
gs
out
and
movsb
mov
bound
lret
data16
mov
pop
add
pop
cwtl
test
dec
mov
mov
and
jne
lret
cwtl
adc
leave
and
outsl
loop
enter
cmp
pop
sbbl
fwait
and
cmpsb
aaa
sub
or
pop
ficomps
mov
mov
data16
pushf
cmp
inc
xor
pushf
fwait
jno
jnp
out
cmp
mov
and
adc
mov
subb
push
sbb
aam
sbb
iret
mov
jne
push
les
jne
stos
loop
fstp
divb
stc
xchg
push
insb
gs
movsl
int
inc
test
add
subb
testl
push
in
push
xchg
sbb
fiaddl
jbe
lcall
xchg
fldl
movl
push
fs
stos
mov
and
cmp
push
mov
jnp
and
into
cmp
out
clc
pop
sub
sub
cmp
movsb
push
xchg
jl
cwtl
adc
add
push
mov
fcmovb
out
cli
xchg
sbb
scas
sahf
jg
jmp
out
sahf
dec
out
ljmp
orl
aam
pusha
mov
ret
adc
call
shlb
test
ds
adc
sbb
in
or
or
popl
rcrb
jmp
mov
mul
negl
add
xchg
add
fsubl
and
aad
adc
es
jo
push
jl
and
pop
rcl
dec
inc
fmull
adc
clc
mov
lahf
inc
lret
or
out
mov
fwait
xor
lret
adc
mov
cltd
jp
mov
popf
and
or
fdivs
nop
mov
mov
push
call
sarl
loopne
inc
jae
pop
dec
sub
inc
sub
pop
hlt
es
arpl
fnsave
daa
mov
pop
int3
xchg
fwait
nop
jmp
jb
xor
popf
jle
adc
outsb
or
sbb
mov
and
mov
push
sti
daa
mov
insb
inc
fs
inc
or
mov
aas
jns
mov
stos
arpl
rol
mov
fcmovne
movlhps
inc
push
mov
xchg
stos
loope
inc
push
aam
orl
movb
arpl
adc
insb
ss
ucomiss
push
addb
cli
mov
jp
lds
cmp
scas
jp
sbb
scas
cld
div
test
xchg
and
jle
ds
imul
push
xchg
dec
or
sbb
mov
stos
jl
out
add
clc
loop
jnp
push
fdivr
xchg
js
js
stos
mov
shrb
jns
dec
in
push
decl
adc
xor
or
jl
clc
xchg
and
push
jno
mov
dec
pop
pushf
mov
jmp
or
sub
pop
pop
jg
sub
ds
insb
shll
ljmp
popa
add
inc
xor
push
adc
sub
inc
sbb
ss
xor
mov
jg
adc
and
loopne
and
fmull
sbb
nop
aas
mov
pavgb
enter
pop
cmp
stc
adc
jecxz
shrb
xorb
xchg
mov
sbbb
or
and
adc
and
mov
sbb
aas
js
push
je
lods
xchg
fnstcw
cli
into
fisubl
in
push
xor
and
or
push
pop
push
das
mov
pushf
outsb
pop
inc
jp
ret
sahf
inc
cmp
repz
sar
loopne
cmp
imul
test
daa
or
adc
add
or
or
stc
in
js
cmp
dec
adc
inc
xchg
mov
repnz
ror
mov
sar
fwait
je
cs
rolb
mov
adcb
mov
push
mov
jo
pop
inc
andl
adc
loope
stos
add
out
outsb
add
inc
mov
sub
adc
movsl
ss
testb
fistps
lds
or
jmp
dec
hlt
iret
pop
push
mov
dec
mov
pop
addr16
or
scas
jmp
mov
mov
inc
clc
xchg
inc
jg
inc
mov
cs
mov
mov
adc
or
xlat
dec
adc
mov
cmp
adc
xchg
dec
iret
loopne
inc
ret
insl
add
push
mov
out
inc
test
std
mov
leave
js
push
imul
push
xchg
xchg
lret
jne
mov
mov
addb
xchg
or
cmp
out
jmp
jmp
int3
add
or
hlt
lea
fcomip
xchg
test
add
cmpb
and
mov
sbb
into
pop
js
dec
call
lock
sbb
pop
adc
cmpsb
cwtl
cmp
addr16
ss
ja
imul
sbb
lret
or
loopne
dec
jmp
inc
decl
or
insb
mov
push
push
cmp
and
test
ss
lea
imul
ret
popf
pop
outsb
or
mov
push
push
adc
fstps
mov
and
ss
push
lahf
cmp
dec
mov
dec
arpl
nop
insl
push
pop
cmp
orl
xor
push
shrl
mov
stos
pop
in
test
insl
stos
ret
mov
dec
jae
fisubl
and
inc
inc
and
jmp
loopne
dec
sbb
or
cli
ja
rorl
xlat
xchg
les
mov
or
push
test
or
mov
sub
inc
jnp
mov
mov
inc
aad
outsb
clc
sub
icebp
test
call
push
imull
jp
inc
mov
mov
ds
mov
fbstp
jne
sub
in
jbe
dec
rcrl
cs
daa
jns
dec
ret
or
cmp
leave
mov
aaa
push
cmpsb
push
sbb
xchg
stos
or
ljmp
leave
fisttps
aaa
cmp
inc
dec
xor
adc
inc
test
and
shr
popf
test
mov
jp
sahf
mov
push
rcr
addl
add
cmp
shlb
andl
and
push
xor
cld
movsl
lods
xchg
fisubl
in
test
aad
clc
jnp
cwtl
jg
and
pop
mov
pop
fiaddl
lcall
negl
enter
mov
movsb
jmp
in
test
adc
add
cs
xor
and
fsts
scas
xor
push
ret
fists
dec
jg
fdivrp
cs
mov
xchg
fadds
inc
push
mov
sbb
mov
inc
clc
loop
popa
jne
cmp
xor
mov
dec
xlat
out
sbb
jge
mov
popl
mov
sbb
dec
sbb
pop
setge
push
lock
and
lods
in
push
push
pop
lds
xor
call
iret
fs
rcr
ret
or
mov
mov
push
mov
ljmp
push
inc
into
test
stos
ljmp
mov
mov
xlat
testl
les
jnp
jb
mov
inc
add
enter
fwait
sub
or
movsb
stos
jl
into
mov
lret
jo
les
out
ret
jmp
in
add
mov
sbb
les
cmp
add
pop
xchg
mov
adc
inc
sub
add
mov
xor
or
mov
ret
jno
or
subb
clc
xlat
into
das
sub
stos
xlat
ss
xchg
sub
cmpl
sarl
call
sub
testb
push
ret
popa
mov
arpl
adc
bound
lret
mov
ret
int3
stc
mov
mov
and
push
pusha
add
test
pop
push
shll
pusha
scas
lods
add
pop
push
imul
push
insl
xor
mov
out
or
push
adc
or
or
pop
pop
mov
mov
loop
pusha
imul
in
xchg
dec
inc
stos
push
inc
lea
pop
cmp
pop
in
inc
or
xor
cs
jno
aam
push
add
or
or
outsl
mov
imul
sub
inc
mov
popl
lods
fwait
mov
jle
xor
dec
subb
xor
jmp
pushf
movsb
sub
mov
test
imul
and
orl
adc
mov
jne
fstpt
arpl
cmp
test
out
xor
ret
sbb
ret
imul
or
mov
push
rorb
fwait
mov
bound
inc
loop
mov
repz
pop
mov
push
inc
cmp
mov
loop
jmp
jae
lcall
jbe
and
mov
mov
cmp
push
in
hlt
rorb
jle
test
jae
pop
rcr
push
xchg
cmc
cmpsl
cmpsb
lods
lret
mov
xchg
sarb
mov
push
cmp
pop
aad
add
jge
mov
or
inc
test
xchg
repz
lds
out
jnp
loope
repnz
dec
insb
clc
cwtl
mov
js
sbbb
fwait
sarb
xor
mov
fs
lods
xchg
hlt
loopne
mov
push
mov
add
js
clc
fwait
push
pushf
or
or
outsb
sub
std
mov
mov
jecxz
stos
cmc
shlb
sub
pusha
loop
mov
jmp
insb
sub
sarl
scas
mov
pop
jl
dec
adc
or
data16
sbb
cwtl
push
aam
xlat
pop
cli
sbb
mov
jnp
push
lcall
stos
jmp
nop
add
andb
decb
cmp
inc
mov
jbe
jbe
ja
or
imul
add
sbb
lds
icebp
daa
dec
push
lea
ljmp
outsb
push
mov
mov
mov
ja
test
clc
faddl
lcall
inc
mov
cmp
cwtl
mov
call
insb
ror
je
sbb
jl
test
lcall
leave
orl
mov
stos
cld
xorl
and
ret
out
jns
dec
jg
aas
xor
push
xchg
add
xor
jmp
ja
iret
sub
repnz
mov
inc
push
mov
sbb
jmp
jno
mov
leave
adc
dec
loop
jmp
sub
stos
xlat
mov
and
hlt
popf
adc
aas
push
pop
add
pop
push
xchg
mull
jbe
and
push
adc
fnsave
inc
inc
pop
add
xorb
pop
xor
aaa
pop
pop
loop
push
shll
out
movb
add
xor
pop
inc
pop
sbb
dec
jge
mov
hlt
mov
push
and
lahf
cwtl
roll
repz
adc
add
andb
popf
addb
movsb
aaa
fimuls
cwtl
mov
and
pushl
dec
andl
fdivr
daa
mov
sub
sub
cwtl
popa
repz
and
ret
js
pop
jg
in
ss
xlat
xchg
mulb
mov
add
dec
shlb
js
pop
or
sbb
aaa
and
pushf
data16
das
mov
hlt
mov
dec
fldl
out
gs
in
cs
out
mov
or
add
mov
push
test
call
jbe
out
mov
loop
iret
push
sbb
pop
mov
mov
sbb
scas
sbb
adc
sahf
ret
and
cmp
xlat
stc
or
mov
mov
outsb
inc
stos
js
mov
mov
jo
fcmovnu
jb
aad
rsqrtps
jne
mov
jnp
inc
cmp
push
test
xorl
push
xor
out
mov
or
dec
mov
in
sub
pop
jne
xchg
or
imul
fwait
test
jo
push
loope
cmp
lcall
and
jge
add
fildl
sarl
aaa
or
ret
sub
jg
int
adc
int3
mov
push
test
testb
pop
xchg
adc
sbb
xchg
mov
incb
push
dec
mov
add
hlt
sub
jmp
pusha
clc
dec
das
add
rcll
sbbb
jo
add
or
sub
and
shr
dec
in
and
fcomip
loop
and
jno
loopne
xchg
xchg
jl
icebp
push
and
sbb
mov
mov
adc
mov
pusha
imul
xor
call
nop
jp
mov
sub
or
inc
inc
inc
fmull
inc
add
enter
pop
or
inc
sbb
imul
js
adc
lds
ljmp
mov
sbb
inc
adc
xchg
adc
add
or
not
leave
mov
rcrb
sar
dec
pop
or
sarb
cmp
mov
xchg
add
pop
loope
xchg
dec
bound
mov
adc
jmp
sub
push
adc
lret
sbbb
clc
push
jbe
sbb
in
insl
mov
inc
pop
gs
js
cs
arpl
ss
mov
mov
popa
fists
and
shlb
in
cwtl
inc
sbb
sahf
jo
aaa
jnp
int
addl
xchg
sbb
popa
cmp
or
imul
add
in
xor
xor
incl
mov
sbb
hlt
scas
lahf
add
and
pushf
stos
ss
mov
addb
cmp
jmp
jl
push
inc
lea
shrl
push
fdivs
lret
clc
xor
outsl
mov
add
pop
hlt
addb
lea
not
mov
loope
inc
leave
js
loop
cld
ss
sahf
orl
adc
xchg
push
hlt
or
sbb
nop
jo
xor
cmpb
mov
xorl
sbbb
dec
clc
push
test
subb
inc
icebp
test
mov
mov
outsb
cmp
scas
sub
cmc
xchg
pop
cs
in
sbb
pop
adc
scas
js
js
xor
pusha
repnz
sbb
ret
lcall
or
ss
mov
pop
jo
iret
cmpsl
xchg
add
addr16
mov
loop
pushf
jne
push
es
aaa
rcll
outsl
movsl
push
mov
aam
cld
les
in
sub
sub
mov
add
push
fstps
pop
cmpsl
mov
cmp
loopne
lock
les
inc
dec
sar
inc
es
sub
clc
repz
sub
shlb
outsb
sbb
mov
lods
inc
out
mov
or
insl
inc
xchg
jb
adc
cs
mov
pop
dec
push
push
xchg
inc
subb
call
clc
mov
nop
sub
pop
lock
push
adc
jbe
ret
mov
mov
xchg
lock
push
rcl
lds
add
lret
cli
js
int3
popf
test
call
dec
aas
fdiv
and
sub
pop
jg
push
ds
push
repnz
mov
clc
fwait
cmpsb
xor
repnz
xor
or
pop
mov
xor
hlt
dec
mov
push
sbb
cs
sbb
jno
sbb
pop
subl
movsl
rcrl
aam
and
push
add
and
mov
push
shrl
cmpsb
inc
dec
and
add
inc
pushf
jl
test
pushf
lea
out
and
ret
push
scas
pop
mov
mov
mov
int
or
nop
scas
push
pop
sub
adc
xorb
in
add
adc
repnz
push
pushf
dec
or
pop
sub
mov
mov
into
lret
out
jecxz
add
push
stos
adc
test
andl
xor
mov
mov
xor
call
inc
clc
mov
fistpl
mov
int
push
bound
add
mov
rcrl
ss
rol
enter
mov
aad
into
sbb
ss
sar
push
icebp
enter
xor
clc
sbb
loop
in
xor
aad
fistps
xchg
sub
popa
shr
push
and
stos
lods
xor
pusha
adc
push
dec
push
mov
push
cltd
jl
hlt
test
xlat
loop
repnz
clc
pop
stos
lea
shrb
pop
leave
dec
add
cmp
push
cld
xchg
mov
ret
sbb
fmul
or
push
es
push
mov
lea
sub
add
cmpl
or
jns
cs
jmp
rcll
sbb
lcall
cmp
in
push
mov
or
sbb
ret
imul
sarb
cmp
les
xlat
push
mov
push
sbb
mov
gs
stos
aam
imul
loope
pop
loopne
pushf
cmp
pop
sub
sbb
mov
insl
dec
rol
das
sbb
sbb
cs
daa
pusha
clc
cli
adc
nop
sahf
push
jg,pt
xchg
cmc
outsb
rcr
fwait
outsb
mov
dec
xchg
ss
test
into
sahf
mov
clc
sahf
push
pushf
orl
icebp
cwtl
test
cmpsl
loopne
xchg
add
sarl
push
loope
sbb
gs
sbb
rcr
aaa
js
popa
faddl
mov
clc
push
dec
and
sbb
test
into
jae
sbb
ficompl
rcrl
inc
lock
jmp
xchg
mov
or
xchg
orb
mov
mov
rclb
fsts
xor
dec
lahf
fimuls
shl
scas
lahf
jo
jb
xlat
adc
pop
dec
shlb
dec
loopne
rorb
or
adcl
pop
rolb
push
mov
or
push
and
shll
jae
sbb
mov
rorl
adc
add
ss
into
cld
fstpl
xor
mov
in
fs
rolb
popa
jno
icebp
popf
mov
cmp
shll
mov
lods
mov
stos
mov
mov
dec
fnstenv
gs
stos
push
shlb
in
adc
sub
xorl
in
insl
mov
cwtl
hlt
mov
xchg
es
or
lret
cs
cs
cmp
mov
push
js
mov
jp
adc
mov
adc
vmread
shlb
add
into
xor
jl
dec
push
inc
imul
jl
cli
gs
stos
pop
mov
movb
or
lods
shlb
xchg
adc
shlb
inc
ds
add
outsb
push
clc
std
push
mov
push
dec
cmp
lea
lahf
or
add
shrb
cmp
add
pusha
or
inc
lret
out
ret
add
jp
cmp
incl
sub
sub
into
pop
push
fisubl
icebp
test
dec
test
push
jbe
jp
cmp
jecxz
aas
ljmp
xor
test
imul
xchg
orb
orl
adc
inc
mov
dec
adc
subb
push
adc
fistpl
ret
insl
or
ss
cmpb
dec
iret
cmp
sbb
jge
push
inc
movsl
fisubrs
mov
sbb
fldl
lret
out
sub
aam
mov
scas
sbb
mov
sub
orb
rcrb
fcoml
dec
adcb
add
lock
add
gs
aad
lods
adc
adcl
lahf
mov
push
xor
mov
jae
test
ss
shll
sti
mov
lea
or
mov
push
sahf
cs
fdivr
test
dec
jge
push
call
sub
inc
sti
sub
pop
fimuls
fwait
cmp
mov
cs
add
inc
mov
jecxz
pop
and
add
jl
inc
ret
xchg
add
lods
mov
movsb
call
scas
popa
push
rcrb
jno
loop
ret
sbb
xor
cs
loop
xor
push
out
dec
ljmp
rol
push
push
gs
inc
shll
shll
mov
dec
adc
xor
jne
mov
mov
dec
sbb
sub
inc
mov
loope
mov
aad
jno
je
cld
or
fcomps
enter
decb
push
leave
mov
dec
sub
lret
lods
mov
and
xchg
and
cli
push
push
out
call
push
ss
fmull
push
push
inc
mov
mov
into
pusha
pop
dec
mov
daa
xor
push
adc
hlt
jmp
mov
testb
pusha
roll
ficoms
mov
cld
fcoms
cli
outsl
lds
roll
enter
pop
and
jle
or
scas
and
rorl
push
mov
xchg
xor
pop
ja
push
inc
jle
jmp
dec
mov
xchg
mov
mov
inc
xor
stos
or
pop
int
out
cmp
test
adc
xor
push
fimuls
jae
xchg
inc
mov
jmp
dec
loopne
es
inc
dec
adc
stos
cmpsl
pop
cli
xchg
enter
jle
mov
cs
rcr
imul
mov
sub
ficoml
xchg
add
adc
iret
mov
cld
fistpll
imul
cmp
fimuls
xor
inc
notl
sub
push
mov
mov
cmpsl
sub
loop
pop
rcrb
loopne
ljmp
enter
stos
cmp
fsubrl
add
sub
add
lret
and
dec
dec
bound
movsb
pop
or
pop
fidivl
jg
inc
pop
popa
inc
pmuludq
mov
mov
es
outsb
lock
incb
pop
dec
mov
mov
test
fistpl
adc
cmp
and
mov
and
test
or
orl
aam
add
gs
popa
pushf
add
and
adc
jmp
outsl
push
mov
and
mov
cld
push
aad
lret
jbe
xorb
mov
and
xor
out
mov
hlt
hlt
fnstenv
loopne
cmp
add
push
dec
or
inc
xchg
rorl
mov
inc
pop
pop
jno
add
sbb
fcomi
int3
popa
mov
fwait
add
lret
cs
pop
popl
dec
jbe
push
divb
adc
out
jp
or
mov
rorl
jg,pn
fiadds
mov
mov
nop
sbb
aas
jbe
xchg
seto
sub
int3
mov
mov
clc
dec
dec
mov
dec
push
out
movsl
mov
xchg
roll
xor
pop
mov
nop
out
mov
add
outsb
cli
scas
mov
dec
nop
push
dec
xor
add
adc
xchg
adcl
stos
or
rclb
and
enter
pusha
xchg
loop
dec
cmp
fiadds
pop
popf
sub
jbe
int3
fidivl
aam
inc
adc
in
cli
pop
stc
pusha
or
and
movsl
lea
sub
jg
in
ror
cli
mov
mov
aam
mov
das
in
test
mov
cltd
or
cmpsb
push
jmp
cwtl
xor
sbb
inc
push
mov
mov
cld
jmp
add
push
icebp
int
xchg
inc
ret
add
push
push
add
mov
cs
fdivrl
push
imul
or
imul
pop
push
sbb
pop
xor
pushf
in
mov
mov
or
or
adcb
cmpsb
pop
push
mov
xor
int
cmp
xchg
clc
les
jl
jge
or
rcrb
test
data16
mov
es
inc
add
fdivrs
pop
fcompl
sbb
pop
or
mov
sub
inc
cld
inc
dec
cmpl
ja
push
and
ret
cmpsb
xchg
add
inc
cmp
xor
enter
jnp
inc
das
jle
subb
sbb
push
add
aam
pop
lea
outsl
mov
pop
ss
mov
pusha
sbb
sbb
or
lock
mov
enter
add
loopne
fs
xchg
jl
lea
cli
fwait
mov
lods
inc
add
in
dec
xchg
ficomps
jmp
dec
fimull
pushf
mov
xchg
fldcw
mov
mov
dec
mov
adc
fistps
shl
or
mov
mov
mov
ret
mov
enter
pop
push
lcall
dec
dec
stos
push
push
cmp
add
in
inc
or
mov
or
fdivrs
add
incl
inc
enter
adc
adc
loopne
loopne,pn
inc
es
mov
dec
gs
mov
jmp
inc
sbb
push
sbb
sbb
cmp
mov
and
incl
cmp
mov
dec
inc
jnp
pop
xor
cli
loop
mov
lods
pop
sbb
push
sarl
cs
aaa
nop
xchg
add
loope
dec
mov
and
jmp
and
and
pop
fldl
mov
add
pusha
out
sbb
shll
jb
sub
js
les
push
arpl
lret
cmpsb
subb
ret
pop
imul
xchg
popf
sbb
lahf
rcrb
xor
shll
enter
sub
testb
xchg
inc
adc
inc
in
sub
mov
cmp
test
movzbl
jecxz
mov
stos
and
mov
push
push
lods
pop
loope
hlt
repnz
or
xor
jnp
and
sub
pop
mov
fnstcw
dec
or
sub
mov
pop
js
mov
jmp
adc
xor
jbe
insb
xchg
sbbl
pop
mov
call
sbb
xlat
xchg
add
clc
fists
inc
sbb
mov
dec
pusha
fadds
cmp
mov
push
popf
sti
in
notl
call
testl
mov
adc
xchg
or
cld
insl
or
sub
lret
push
imul
xor
lds
pop
cmp
add
mov
cs
jl
insl
jbe
sbb
xor
ja
lea
int3
dec
gs
pop
inc
xchg
loope
xor
xchg
lahf
xchg
aaa
rorl
and
mov
push
pop
jg
pop
adc
outsl
inc
or
inc
jae
push
or
fdivrl
and
add
call
das
insb
jecxz
fldcw
fidivrs
pop
dec
dec
pusha
loop
and
shll
pop
popa
sbb
mov
insb
popf
pop
bound
add
push
xchg
dec
stos
scas
out
rcrb
faddl
lods
push
sahf
cmp
outsb
shl
xor
mov
imul
mov
lock
xlat
pop
mov
lahf
or
into
cmp
fldl
xchg
adc
jno
adc
cmp
clc
rorb
and
xor
sbb
add
jl
lds
leave
fmull
inc
sbb
fmull
inc
inc
mov
mov
mov
adc
or
sub
lods
lea
xchg
std
arpl
mov
in
xchg
fildl
lcall
sbbb
stos
rorb
add
stos
shl
push
pop
or
push
push
mov
cmpsl
push
pop
mov
jmp
shrb
out
rol
movsb
aas
xchg
js
movsl
cmp
gs
mov
outsb
fcmovnu
xor
push
jb
sub
insb
mov
sub
jne
decb
ja
xor
scas
adcb
sub
in
insb
aaa
jmp
nop
mov
push
adc
std
outsb
pop
lock
and
inc
jno
and
decb
inc
rclb
in
push
sbb
jbe
xor
mov
adc
cmp
subl
out
jmp
stos
mov
adc
pop
sbb
es
sarl
mov
xor
pop
jb
pop
jo
cmpsb
sbb
std
fldt
mov
test
into
mov
imul
jo
outsl
clc
movsb
lahf
mov
int
and
pushf
in
inc
mov
add
sub
jo
push
mov
rcrb
cmp
jno
cmp
bnd
jp
push
push
cmpsl
bound
stos
sahf
xor
cs
andl
movzbl
lea
dec
xchg
sub
pushf
mov
fdivrs
shlb
push
mov
adc
lret
mov
adc
out
push
inc
mov
xlat
sbb
test
lods
xchg
or
shll
cbtw
sbb
xor
push
cmp
fwait
inc
leave
dec
addl
jmp
or
lea
and
dec
in
adcl
sbb
test
xchg
je
outsl
into
jno
int
cmpsl
shrl
ds
loopne
add
ljmp
fwait
and
jo
pushl
pop
push
call
outsb
loope
test
sbb
mov
jecxz
push
cmp
cs
add
test
pop
outsl
push
sbb
ret
imul
mov
xchg
sub
push
adc
leave
jo
dec
lods
stos
add
xchg
lods
mov
jg
aad
adc
or
add
test
sub
icebp
loopne
adc
out
movsb
jp
jmp
cmpsl
mov
adc
fidivrs
cmp
roll
xor
push
add
pop
inc
push
sub
outsl
adc
fs
sti
divl
cli
sbb
cmp
add
add
xchg
fcmovu
push
jo
adc
push
sub
and
mov
or
sub
leave
inc
add
dec
ret
adc
pusha
xchg
test
cwtl
repnz
or
dec
pop
cld
test
je
sub
js
mov
testb
jne
shrl
xor
out
cmpsb
lahf
cwtl
cmp
iret
test
nop
shll
cld
adc
xchg
ror
fmull
xchg
jg
jo
sub
shll
fstps
cltd
test
bound
jmp
aaa
xor
pop
fstp
sbbb
inc
mov
fidivl
lock
mov
mov
ss
xchg
lret
pop
add
inc
daa
cmp
mov
mov
out
push
xchg
cmp
push
mov
adc
sbb
jmp
pop
xchg
lods
pop
cli
adc
push
sbbb
cltd
sarl
add
xorb
add
rcrl
xchg
and
movsb
icebp
mov
lds
xchg
neg
push
in
pop
sub
inc
lcall
add
add
scas
lods
orl
imul
ret
pop
mov
arpl
jb
push
jmp
and
int
lods
sub
xor
int
cmc
pop
xchg
or
add
jle,pn
fimuls
aaa
movsb
add
int3
jns
xor
adcb
loopne
cwtl
ret
push
mov
dec
in
mov
pushl
mov
ret
sarl
xchg
subb
mov
insl
test
loopne
sub
insb
outsb
clc
test
push
lea
cli
add
pop
lret
mov
test
out
mov
xchg
fcompl
jle
mov
ja
jmp
push
jne
push
cmp
inc
fs
cmc
seto
or
call
mov
rorb
movsb
add
dec
or
and
dec
push
mov
subl
pop
xor
out
ss
rcr
and
sbb
pushf
sbb
pop
xor
fmull
cmp
and
inc
add
mov
adc
cwtl
clc
lock
les
xor
test
pop
pop
xchg
mov
sub
or
adc
or
in
or
cmp
aas
bound
aam
jp
cmp
movb
addr16
pop
flds
xor
cmp
loopne
aaa
rorl
pushf
cmp
imul
rclb
sub
xchg
sub
add
lcall
out
pop
dec
in
mov
mov
pushl
xor
std
adc
clc
xor
sub
dec
test
test
dec
push
hlt
scas
xchg
hlt
icebp
pop
sbb
jl
inc
adc
or
inc
rcll
icebp
test
mov
hlt
add
mov
cwtl
cmp
and
stos
mov
sbb
cmp
push
cmp
outsb
repnz
and
jp
xchg
jecxz
xchg
popa
in
notl
xor
movsb
inc
mov
pop
loop
xchg
mov
cli
push
jp
adc
hlt
stos
sbb
adc
sbb
mov
or
stc
mov
jno
movsb
pop
or
shll
test
fidivrl
fidivs
int3
in
sub
xchg
lods
scas
ljmp
je
inc
lods
jg
mov
test
jns
or
or
iret
and
jmp
ret
and
or
adc
mov
rorb
dec
sub
lahf
dec
mov
outsl
cmpsl
int
jge
ss
mov
les
adc
mov
loopne
aas
mov
and
adc
out
sub
lock
pop
int3
mov
push
jb
jp
fcoml
inc
jle
sbb
fdivrs
dec
xor
dec
add
inc
sub
adc
lods
and
mov
or
pop
push
imul
jo
sub
push
or
lea
lret
cmpsl
andb
jle
xchg
ret
and
fimull
loope
es
add
sub
lret
pop
dec
es
inc
xor
arpl
loop,pn
and
cmp
jbe
fsubrs
mov
loop
insb
iret
testb
push
push
mov
xchg
inc
inc
aas
add
shl
xlat
xchg
sub
xor
sbb
jbe
subb
xchg
mov
mov
xchg
fidivrl
js
shl
add
add
push
jle
aas
dec
dec
in
loope
sbb
das
and
xor
lea
mov
scas
popa
add
stc
pop
call
in
jecxz
movsl
mov
push
cmp
mov
push
mov
lock
and
ret
lods
orl
jno
push
jg
dec
adc
pop
dec
push
fdivs
adc
mov
into
mov
pop
les
dec
dec
pop
or
jg
lcall
daa
mov
rcrb
sahf
add
xchg
ss
jp
pop
stos
mov
and
das
sbb
sahf
dec
shl
dec
and
inc
mov
out
lock
xchg
pop
rcrl
cmpsl
notl
lods
jne
stos
test
jle
pop
mov
pop
rcrb
mov
notl
add
add
add
mov
rorb
cmp
mov
ljmp
cld
mov
sbb
adc
or
hlt
inc
addl
cmp
xchg
push
mov
sbb
dec
mov
xchg
adc
cmp
mov
sbb
cmp
sbb
stos
xor
sahf
or
lock
xchg
loope
scas
and
jbe
or
addr16
mov
test
add
lds
cs
and
sbb
or
insl
sbb
rcrb
lret
push
and
imul
or
mov
fldlg2
mov
dec
aas
adc
dec
jbe
xchg
mov
sub
mov
xor
xor
sub
sbb
inc
jo
es
cmp
or
jle
fidivl
xchg
aaa
es
mov
push
icebp
out
inc
add
push
and
inc
mov
inc
scas
xlat
add
ret
push
test
sub
cmp
mov
and
inc
lock
mov
mov
les
mov
lock
pop
mov
jmp
loope
rorl
push
shlb
cmp
punpckhwd
into
cli
add
xor
std
pushf
dec
mov
dec
insw
mov
mov
lea
or
mov
pop
test
push
pusha
sti
push
lahf
mov
dec
dec
sbb
sbb
push
or
mov
pop
inc
mov
movsl
sbb
pop
mov
fbld
in
pop
jae
hlt
lea
nop
lret
in
cmp
adc
or
loop
sti
push
xor
shl
dec
xor
call
jg
dec
sbb
jecxz
mov
jl
add
jmp
cmp
enter
movsb
es
movb
std
cmp
mov
fistpl
xchg
shlb
cmpsb
test
aam
ret
ds
les
loopne
dec
sbb
ljmp
shrl
movl
pmaxsw
sbb
popl
lods
mov
sbb
mov
cmp
mov
fidivs
sub
mov
inc
xchg
xchg
cli
or
insb
mov
sbbl
mov
aas
inc
add
in
mov
int
mov
push
icebp
add
fs
les
xchg
or
enter
shlb
lock
roll
test
ja
or
test
in
or
ljmp
fs
lcall
xor
sub
out
lret
pop
mov
shlb
or
jp
je
xchg
fldcw
cmp
out
daa
or
add
rcl
xor
scas
pop
lcall
test
ret
jmp
jge
les
imul
out
sti
aaa
popf
and
mov
mov
and
cld
push
jns
outsb
scas
into
fstl
cmp
inc
fsubs
int
push
pusha
divb
mov
aas
cwtl
xlat
mov
movsl
into
mov
push
pushf
mov
mov
js
mov
mov
add
sbb
xchg
js
int3
add
bound
pop
inc
shlb
dec
ljmp
add
out
ja
mov
xchg
fdivs
or
pop
or
shrb
sahf
jge
dec
jo
lds
push
std
nop
adc
mov
push
nop
mov
and
inc
aad
xchg
mov
jnp
shlb
shl
es
fsubrl
je
out
sub
push
sbb
fisttpl
call
cld
mov
mov
mov
arpl
fs
ljmp
filds
push
in
push
pop
stc
fisubrs
lret
je
pop
inc
mov
jecxz
imul
addl
xor
loopne
add
mov
push
bound
and
mov
jno
sahf
dec
and
push
xchg
pop
push
ljmp
lods
je
cld
loop
sbb
andl
jne
sub
xorb
rol
cmpsb
push
jmp
fsubrl
jbe
js
or
mov
jo
jg
pop
or
xor
pop
pop
shl
out
jmp
sbbb
or
fsubrl
xchg
fwait
es
mov
fstpl
mov
dec
jp
repnz
cmp
pop
or
decb
jbe
pop
cmpsb
inc
xchg
push
jl
aad
pop
cmp
orl
mov
mov
out
in
and
jle
sahf
sbb
lods
insb
sub
jnp
pop
jo
adc
scas
mov
aaa
pop
pushf
test
pop
add
mov
sbb
jl
inc
jnp
mov
mov
std
mov
cwtl
mov
jno
push
nop
mov
adc
lock
cmp
sbb
xlat
call
pushf
sub
add
sbb
jl
xchg
xchg
call
xchg
fs
or
loop
inc
insl
cmpsb
xchg
stos
js
dec
stos
jo
call
push
push
pop
mov
xor
adc
mov
push
or
aam
or
mov
mov
jno
cmp
mov
cs
jmp
test
out
test
js
shr
add
push
pusha
hlt
dec
push
inc
pop
test
xchg
inc
inc
sbb
rcr
fmuls
int
loop
sbb
clc
lahf
int3
pop
mov
movl
xchg
daa
test
shlb
popa
and
cmpsb
mov
dec
xchg
pop
int
pop
and
pop
lock
mov
ljmp
shlb
ljmp
subb
leave
inc
stos
lods
and
jp
add
xchg
cmp
andb
loop
xchg
clc
jbe
pop
xor
and
lods
stos
scas
sti
mov
adcb
cli
sub
scas
les
cmc
inc
rclb
mov
or
test
jmp
push
leave
add
ret
pop
mov
adc
fistl
cli
js
cmc
stc
outsl
lret
dec
orl
cmpsl
mov
jnp
mov
ret
repnz
pop
les
loopne
mov
xchg
data16
push
es
sbb
push
test
mov
and
add
add
push
dec
popa
xchg
rolb
das
push
push
movsb
lret
add
cmp
xorb
mov
pop
in
test
or
mov
clc
inc
and
adc
pop
inc
bound
dec
repz
insl
dec
stos
test
stc
or
cs
in
movsb
inc
push
stos
cmp
pop
lea
adc
loop
stos
shrb
int3
jg
popa
mov
xor
mov
jnp
sar
arpl
shl
stc
hlt
pop
jo
adc
add
inc
add
aaa
mov
fidivrl
outsb
into
sbb
sti
xchg
inc
jmp
adc
add
mov
dec
dec
mov
out
cmp
test
sub
adc
aam
ljmp
in
sbb
fildl
cmpsl
pop
arpl
dec
sbb
fwait
dec
xor
in
cld
sbb
clc
dec
mov
dec
pop
push
dec
lods
shlb
push
or
pusha
mov
inc
xchg
les
mov
adc
adc
leave
std
dec
aaa
pop
xchg
mov
test
add
loopne
int3
mov
shr
jl
sub
push
negl
loop
outsb
xor
push
push
add
xchg
adc
mov
jg
or
out
or
mov
xor
nop
or
aas
lock
or
movsl
and
xchg
rclb
and
or
lock
rcll
std
xlat
testb
add
or
pop
or
add
cmc
mov
cwtl
add
or
add
xchg
lea
add
xchg
and
xor
xor
out
fildll
cltd
xchg
movb
int
jp
pop
ret
pop
pop
adc
push
xor
mov
ljmp
fsubs
das
in
mov
sti
mov
stos
ficompl
cli
mov
test
nop
insb
jnp
mov
cmpsb
sbb
and
popf
sbbl
sbb
mov
rol
xor
dec
adc
push
rcll
xor
cmc
rol
fnstsw
push
lahf
adc
pop
mov
pop
in
les
push
decl
outsb
addl
std
jge
movsl
rolb
xor
mov
sahf
fdivs
mov
cmp
test
adc
lahf
loop
cmp
or
add
inc
inc
mov
push
mov
nop
add
cmc
sbb
pop
cmpsb
jno
dec
mov
push
jnp
cmp
add
mov
lea
js
mov
mov
add
lahf
bound
popa
arpl
in
sbb
loopne
cltd
jne
bound
and
xor
push
push
scas
inc
ret
push
sbb
lea
and
push
cli
xchg
lods
popa
fidivrl
outsb
dec
and
lcall
dec
add
bnd
mov
std
sbb
pop
jo
mov
mov
mov
push
adcb
aas
clc
xor
rorb
sub
adc
pop
dec
cwtl
popa
add
jae
xor
es
cmp
xor
popa
insb
fs
jnp
hlt
into
jecxz
mov
inc
cltd
test
je
cs
xchg
mov
flds
les
or
sub
pop
and
mov
insl
clc
mov
stc
inc
pop
hlt
mov
add
adc
stos
xchg
ljmp
lea
aam
test
adc
or
sarl
cmc
xor
mov
lock
pop
ljmp
push
orl
push
idiv
xor
or
mov
jmp
push
mov
xchg
adcb
adc
mov
mov
sub
gs
outsl
aad
inc
ljmp
fistpll
xor
cmp
mov
push
nop
int3
lahf
in
dec
test
mov
mov
je
or
mov
add
mov
cltd
sbb
push
addr16
fisttpll
push
mov
or
iret
popl
push
xlat
pop
clc
movsl
outsl
icebp
jmp
sbb
shrl
pop
add
sbb
push
xor
stos
ss
pop
sbb
push
cmc
lods
mov
add
ret
adcb
mov
lds
push
push
or
movsb
js
lahf
sbb
add
dec
sbb
clc
loop
in
rcll
popa
and
out
cltd
mov
pop
insl
lcall
xchg
cmc
jl
push
ja
test
add
aas
jbe
inc
imul
test
shl
scas
jo
dec
call
arpl
dec
or
pop
imul
test
inc
push
add
rclb
cwtl
mov
mov
inc
popf
cltd
cli
dec
cwtl
loopne
imul
cmp
dec
bound
pop
adc
cmp
popf
sahf
mov
shlb
push
cs
sub
loope
cmp
add
je
xchg
sti
pop
setnp
jecxz
int3
pop
ficompl
test
and
xor
add
adc
mov
pop
dec
pop
loope
and
xor
shrl
sahf
loope
dec
mov
aad
sbb
fcoms
repnz
pop
js
test
stos
sub
subl
pusha
mov
inc
push
push
sub
push
jge
call
jo
scas
sarb
out
cmc
add
push
aaa
iret
int
sbb
popa
add
inc
mov
cmc
mov
popa
fmuls
aas
fsubrl
pop
in
cmpb
mov
pushf
push
lret
insl
or
sbb
push
xchg
xchg
xchg
inc
mov
loop
cld
jge
enter
mov
sbb
pop
jnp
push
inc
and
push
pushf
adc
and
mov
sbb
jo
subb
scas
rolb
jl
jo
mov
lret
popl
cs
lock
imul
rclb
and
fs
push
push
jge
test
add
outsb
jg
and
inc
addl
push
push
jp
cmp
shlb
mov
rcr
ja
cs
xchg
sbb
out
xor
js
test
aaa
js
add
insl
jge
add
mov
movsb
push
lock
scas
jmp
mov
test
mov
rclb
jno
mov
adc
movsb
les
mov
xor
jb
aad
insb
push
adc
sbbb
mov
mov
leave
mov
mov
xchg
lock
mov
sbb
push
push
scas
add
cmp
xor
adcb
ja
sti
inc
and
in
inc
lcall
mov
inc
flds
push
outsl
cltd
xor
add
jl
or
mov
outsb
mov
inc
pop
sbb
cmpb
mov
pop
push
xchg
icebp
sub
or
and
pusha
mov
pop
in
out
nop
sbb
add
and
fisttpl
cld
inc
or
popa
xchg
stos
mov
xor
fiaddl
stc
xor
xor
fidivrl
punpckldq
stos
stos
lock
inc
and
mov
lea
sbb
adc
shrb
ret
add
jmp
inc
movsl
test
or
xor
fwait
inc
jb
mov
cmp
js
jl
sbb
jo
mov
sarb
rolb
or
lods
mov
lea
xchg
and
jg
lcall
in
pop
or
mov
xor
ljmp
ss
cmpsl
adcl
jle
xor
add
mov
or
popa
hlt
add
test
xlat
movl
das
jo
mov
test
ljmp
out
add
and
xor
jp
lea
mov
push
insb
xor
into
push
xchg
dec
pop
or
dec
sbb
jno
add
and
sub
pop
lods
cli
out
cmc
xor
inc
cld
dec
cmp
sahf
add
push
or
test
and
cltd
lret
testb
sub
fs
mov
inc
outsl
and
test
pop
std
cs
cmpb
and
pop
movb
pop
ret
xchg
pop
mov
and
stos
fidivrs
sbb
loopne
fisubs
pop
push
push
cmp
or
add
jecxz
fadds
jl
adc
or
or
shl
movsb
push
dec
hlt
insl
repnz
scas
mov
fs
and
out
imul
adc
cwtl
loopne
stos
xchg
outsl
add
or
cmp
lock
xchg
int3
fs
or
lods
and
jle
xchg
cli
hlt
rolb
sub
pop
adc
pop
pop
pop
pushf
push
daa
push
push
and
hlt
subb
xor
clc
sbb
or
hlt
shl
pushf
adc
sbb
pusha
or
push
add
insl
or
pop
adc
mov
in
and
pop
add
rcl
pop
xchg
inc
pushl
xor
push
outsb
and
inc
jns
or
call
mov
cwtl
adc
rolb
inc
cltd
add
cmpsb
scas
sarb
xor
outsl
or
into
jl
jo
adc
pop
push
push
sbb
test
adc
ret
push
add
sar
in
xchg
or
mov
mov
and
js
pop
jmp
sub
repnz
xchg
mov
fsubrs
push
fdivs
pop
xchg
mov
fs
outsl
loopne
aam
insl
les
sbb
add
movsb
movsb
mov
imul
push
mov
mov
nop
cld
push
rorl
pusha
push
nop
dec
iret
mov
mov
adc
mov
xor
mov
cltd
incb
or
xrelease
sbb
das
std
add
imul
mov
addl
push
sub
add
inc
inc
or
jno
or
sub
lret
add
test
mov
or
bound
aam
sarb
enter
ds
add
mov
popf
pop
aas
jo
int3
dec
out
cli
lea
loopne
mov
jmp
jmp
fwait
inc
leave
aas
inc
cwtl
or
push
daa
movsb
arpl
dec
or
aam
push
flds
cmp
lcall
pop
mov
push
push
lret
or
mov
xor
adc
and
outsb
mov
dec
mov
jbe
push
xor
pop
add
add
or
lock
adc
nop
ljmp
out
jmp
scas
hlt
andl
adc
test
in
jno
ja
sub
push
inc
sahf
sub
sub
arpl
js
pusha
daa
push
and
pop
mov
dec
cld
pop
mov
into
xchg
outsb
out
cmp
adc
sbb
cmp
js
adc
sarl
pushf
clc
xor
aas
adc
es
stc
mov
loope
jo
inc
lock
xchg
cmc
clc
popa
mov
xchg
sbbb
fmull
andb
or
loopne
ret
movntps
mov
inc
mov
xor
mov
add
pop
fcom
or
shll
jne
sahf
push
rclb
in
addr16
xchg
rcll
dec
xchg
aas
movsb
aam
fsubrs
ud0
jge
popa
lret
jmp
or
hlt
xlat
js
out
dec
hlt
into
bnd
mov
aad
sbb
cmp
and
push
std
jle
icebp
inc
cld
call
cmp
push
or
mov
test
mov
pop
divl
sbb
add
push
adc
es
inc
add
dec
popl
test
icebp
sbb
sub
insb
loop
test
mov
push
fisubl
aaa
and
xor
mov
loop
rcrl
push
sbb
or
add
aas
pop
gs
fs
les
jne
add
mov
pop
pop
inc
pop
inc
jmp
aad
pop
adcb
or
insl
adc
movsl
jmp
insb
cmp
icebp
lods
sub
mov
lahf
push
int3
add
dec
stos
fcompl
add
je
fcomps
loope
mov
xor
cs
lods
icebp
test
lock
jp
mov
and
adc
rclb
jb
adcl
lock
jle
daa
jo
xor
adc
and
daa
imul
xchg
hlt
cmpsl
sbb
and
shrl
jl
icebp
lods
ret
int
xlat
xorb
subb
sbb
rcll
push
mov
pop
inc
mov
lods
shlb
incb
jmp
ljmp
dec
push
or
push
sbbl
adc
cmp
fwait
and
push
in
test
dec
stc
out
mov
ret
adc
inc
cwtl
pop
hlt
daa
jp
mov
push
mov
ret
int3
loop
xor
cwtl
pusha
insl
out
pop
pop
jo
into
imul
shlb
mov
daa
and
pusha
icebp
jecxz
loopne
add
push
ja
cmp
mov
stc
addr16
out
add
orb
inc
cli
push
dec
mov
out
mov
jbe
inc
jl
and
push
ljmp
subl
daa
mov
lock
out
loopne
push
push
adc
push
push
gs
push
stos
mov
xchg
lods
mov
shll
add
xchg
xchg
jle
mov
push
xor
sbb
push
lea
je
movsb
lock
and
ret
outsb
fisttpll
bnd
cmpsl
jmp
into
mov
mov
fildl
icebp
inc
or
mov
adc
inc
out
test
out
push
insb
std
test
jae
add
nop
out
test
sub
jl
push
or
jl
lcall
insl
popl
cmp
std
dec
jnp
adc
sarl
sbb
mov
or
sahf
cli
and
aaa
in
inc
jno
jae
scas
rolb
outsb
pop
mov
xchg
adc
loop
inc
push
inc
push
mov
lea
xchg
lcall
stos
inc
jo
or
jp
inc
ficomps
lock
cmp
insl
rcr
loop
ja
push
xchg
sub
shrl
cmovb
ss
sub
repz
mov
movsl
mov
loop
mov
fsubrl
cmp
insb
pop
arpl
js
sub
subl
les
ljmp
jo
sti
enter
pop
mov
cs
jp
sub
pop
mov
push
push
orl
inc
sbb
inc
popa
daa
cld
jnp
fisttpll
call
pushf
xchg
mov
sahf
js
clc
stc
jne
outsb
push
inc
push
testb
outsb
arpl
test
mov
mov
ret
leave
dec
sub
jl
insl
cwtl
les
xlat
pop
adc
scas
jae
mov
cmp
or
cld
cmp
sub
loop
out
xor
pusha
inc
mov
es
cli
ret
jno
cli
cmp
xor
loop
jnp
sub
pusha
or
xor
push
jl
stos
inc
in
lcall
dec
sub
das
pop
popl
push
in
inc
fmul
mov
shr
adc
mov
add
xchg
sub
bound
stos
push
mov
daa
xor
pushf
out
shrl
ret
push
jno
mov
adc
adc
mov
fstp
push
sub
pop
sbb
mov
mov
push
hlt
adc
jl
push
scas
ret
pop
sub
insb
cli
aaa
sub
aam
mov
mov
mov
movhps
int
sub
xor
mov
pop
mov
fmull
sti
imul
shlb
enter
xor
scas
cli
sub
dec
cwtl
arpl
sub
mov
lea
aaa
je
nop
jp
sbb
insb
imul
ss
inc
das
pop
mov
jno
rcll
idivb
adc
push
daa
add
cmpsb
mov
out
jg
jg
jp
out
call
jno
mov
add
xchg
cmpb
sub
and
sbb
shlb
add
scas
lea
leave
popa
iret
test
sbb
mov
mov
jmp
sbb
dec
add
icebp
test
cmpsl
sub
hlt
sbb
jae
or
incl
rorb
mov
rcl
movl
psraw
mov
mov
movsb
ljmp
popa
sub
and
mov
cmp
push
xor
sub
fs
shll
imul
arpl
sub
xor
icebp
outsb
leave
ret
das
jle
xchg
cmp
shlb
sub
xchg
xchg
push
xor
sbb
cmc
hlt
or
cmp
or
sahf
xorb
xchg
mov
fdiv
dec
test
jnp
mov
mov
ret
lcall
xchg
sub
popf
lods
push
mov
cld
mov
dec
icebp
xchg
pop
jmp
repz
pop
movb
add
subb
pushf
pop
mulb
pop
lods
or
jg
aam
jo
inc
mov
push
out
sub
cltd
push
sbb
add
lock
arpl
lret
inc
push
fisubs
repnz
bnd
addr16
mov
loopne
add
and
pop
push
dec
mov
stc
jo
xchg
movsb
inc
sbb
cli
call
incl
pusha
cld
ret
jno
arpl
add
je
fmuls
out
push
xchg
mov
cmp
inc
cli
ja
movhps
in
adc
test
ljmp
rclb
push
pop
cwtl
cmpsb
rolb
iret
addl
mov
fwait
sub
cltd
sub
repnz
jg
dec
jo
rol
js
fbld
add
enter
ss
int
dec
ja
add
test
dec
cli
or
pop
arpl
sbb
lahf
jo
mov
fcmovb
mov
add
out
mov
xchg
and
adc
dec
pushf
push
jg
mov
cmc
cmp
jp
mov
outsl
dec
sub
out
push
pop
push
outsb
fiaddl
adc
lret
cmc
pop
ds
sub
outsl
adc
sbb
rcl
push
inc
or
xchg
add
push
sahf
or
fadd
fldcw
pop
rclb
inc
and
or
xchg
adc
sub
xchg
push
pop
repnz
inc
sarb
aam
aam
fwait
adc
hlt
adc
stos
sub
inc
pop
lea
or
cld
inc
mov
xchg
sub
push
jbe
dec
int3
push
out
dec
cli
or
lea
mov
aam
cltd
cmp
jp,pt
mov
sub
orl
xchg
subl
bound
sbb
pop
rorb
pop
data16
mov
cmpsb
sub
jecxz
xchg
test
push
lcall
into
mov
push
inc
ret
es
or
add
std
xlat
pusha
xchg
scas
jecxz
es
inc
pop
pop
aam
sbb
dec
in
in
or
mov
push
push
and
insb
pop
inc
xor
pushl
out
xor
orl
insl
mov
cmpsb
in
pop
ja
pop
jo
mov
mov
add
jo
mov
cmpsl
scas
aam
mov
xchg
sub
scas
call
push
leave
inc
loopne
push
sti
rcr
and
stos
aas
jmp
and
jmp
mov
jns
cwtl
ret
mov
jge
xlat
movl
mov
sbb
or
xchg
dec
jl
stc
lea
test
jmp
xchg
xor
mov
ret
and
movsb
mov
cmp
push
and
mov
aam
xor
fwait
ret
test
push
or
movsb
sub
fisubrs
sahf
repz
cld
pop
pop
daa
cmp
push
fwait
pop
lock
aam
adc
pop
mov
fists
add
mov
lret
xor
call
sbb
lods
adc
mov
fwait
inc
inc
loop
pop
pop
add
adc
push
and
mov
ret
jne
add
pop
outsb
cmpsb
enter
lea
aam
pop
xchg
add
sbb
iret
xor
aam
xor
bound
adc
fidivs
ja
loop
or
ror
cmpsb
xor
rclb
fisubs
repz
push
push
js
push
ret
cmp
mov
test
xchg
stos
ljmp
inc
or
sar
inc
cmp
pop
xchg
mov
jo
sub
cmp
dec
enter
jl
cs
pshufw
mov
clc
leave
cli
nop
jnp
les
fdivs
ret
fmuls
call
add
dec
repz
mov
cwtl
adc
xor
jmp
loopne
lret
sub
loopne
cmp
mov
in
and
test
mov
loope
pop
cmc
push
scas
js
loopne
push
or
xchg
mov
push
cli
scas
xor
mov
movsl
sarb
adc
xlat
scas
aaa
popa
subl
std
int
push
sbb
sub
xchg
test
movsb
test
and
or
call
in
adc
jne
jmp
lahf
aad
or
push
subb
loope
lahf
cmpl
mov
xor
scas
mov
dec
jbe
sbb
clc
cmp
inc
dec
jno
dec
xor
ret
scas
pop
adc
xchg
idiv
sbb
idivb
es
in
push
add
mov
add
pop
adc
outsw
add
inc
mov
pop
and
or
sbb
dec
js
int
add
mov
pop
test
mov
subl
scas
leave
insl
mov
inc
nop
mov
das
push
jbe
sbb
inc
punpckhwd
adc
cwtl
push
push
sub
pop
adc
popf
cld
decl
push
dec
popa
pop
roll
rorl
dec
cmc
arpl
cmp
mov
dec
jnp
hlt
lock
cld
aaa
cld
add
test
inc
sbb
pop
test
lea
sar
insb
fcoms
add
push
pushl
cmpsb
fdivrs
pop
es
pop
std
add
ljmp
dec
mov
pop
or
pandn
sub
lcall
dec
sub
pushf
lods
ficoms
mov
pop
scas
enter
hlt
xor
pushf
push
mov
xor
pushf
or
sbb
xor
mov
xchg
shlb
and
mov
xorb
dec
loopne
inc
or
add
insb
rclb
clc
jg
iret
ret
add
cltd
leave
fisubl
push
std
push
js
loope
inc
cmp
add
sub
sbb
cmpsb
jmp
sar
inc
das
jmp
push
imul
jmp
stos
ds
jbe
jno
sbbl
cmp
pop
adc
or
rclb
push
andb
aas
sub
push
xlat
lret
pushf
cltd
sub
mov
xlat
mov
jecxz
test
pushf
pushf
dec
add
dec
cwtl
insb
dec
in
les
push
adc
imul
mov
sbb
shrb
roll
pop
adc
mov
xlat
iret
xor
and
mov
lcall
push
xorb
lret
cs
inc
pop
out
iret
or
lods
and
add
xchg
xor
mov
inc
rcl
sub
rclb
cmp
pop
and
xchg
pop
add
xor
or
jbe
dec
loope
sub
repnz
les
aad
or
outsb
outsl
cmp
fs
push
xchg
daa
fdivs
pusha
dec
arpl
dec
xchg
das
sub
mov
lea
pop
push
lods
and
addr16
das
repnz
xchg
lods
dec
loop
jmp
aaa
inc
ret
aad
or
into
adc
xor
leave
insl
insb
inc
dec
dec
cmp
pop
sub
scas
jae
clc
out
xor
adc
fs
pop
pop
cld
xchg
push
imul
lahf
fidivs
loopne
jle
leave
mov
icebp
rol
dec
stos
orb
mov
mov
cmp
push
mov
or
push
stos
jae
ja
jmp
sub
mov
mov
push
cmc
insb
nop
cwtl
clc
cmpsl
mov
and
add
pop
jo
adc
add
fnstsw
cmp
mov
cmc
pop
cmc
pushl
mov
leave
mov
mov
push
das
jl
fistpll
adc
and
sbb
sbb
adc
pop
and
aas
and
imul
and
loopne
push
pop
mov
fucomi
mov
xchg
xchg
jmp
jbe
push
lret
cmp
dec
sub
xor
or
pop
je
test
push
jp
mov
je,pn
or
dec
add
hlt
test
sti
xchg
fcomp
cld
sbb
xchg
or
out
faddl
jl
cmpsb
push
or
adc
movsl
xlat
nop
cmp
mov
ret
clc
call
cltd
mov
mov
ds
fwait
jmp
lods
mov
jg
xchg
inc
sbb
inc
jp
gs
fisubrl
dec
in
mov
aas
scas
inc
out
and
ljmp
std
fldt
call
stos
jnp
ja
stc
push
push
xchg
popa
inc
shr
jmp
scas
mov
loop
sbb
repnz
add
xchg
xorl
and
outsl
mov
aad
sarb
je
and
push
mov
ficomps
stc
popf
stc
loopne
cmp
jl
mov
adc
les
decl
out
sub
jg
xchg
lods
filds
or
and
pop
jp
hlt
push
lea
add
loop
push
push
add
dec
add
pusha
nop
inc
adc
dec
gs
rcll
por
push
mov
mov
mov
decb
nop
add
adc
imul
faddl
out
scas
loopne
fcomps
or
inc
shll
les
fimull
scas
mov
ljmp
sbbl
mov
sbb
inc
ds
sub
ret
mov
and
and
mov
add
jnp
sub
lods
mov
aam
push
dec
js
test
lahf
or
cli
rcrl
lahf
push
fdivrs
data16
cmp
push
push
push
out
subb
stos
cmpsb
stos
cmp
inc
outsl
xchg
jle
std
imul
xlat
pop
fwait
add
es
xlat
mov
inc
sub
daa
push
cltd
xchg
or
mov
lock
and
loop
mov
cltd
push
addb
adc
or
add
loopne
enter
into
dec
push
je
cmp
adc
mov
or
mov
bound
fiadds
mov
call
cmp
cltd
xor
ret
fsubrl
mov
enter
out
and
sti
aam
push
aaa
jp
mov
leave
inc
push
pop
push
mulps
test
mov
cmp
jb
adc
jl
and
sub
mov
ja
pushf
int
in
out
xor
fidivrs
push
or
cmp
sub
into
ja
and
cli
adc
sub
out
movb
jb
jo
insb
pop
mov
xchg
fnclex
fists
les
std
pop
push
push
mov
jle
push
cwtl
insl
inc
leave
xchg
in
cmpsb
mov
sbb
cld
ret
sahf
lea
or
loope
jns
call
inc
gs
push
mov
pop
xchg
cmpsb
in
ja
dec
loop
mov
and
jne
hlt
inc
cmp
mov
lods
nop
cmp
pop
notl
pusha
loopne
iret
mov
xchg
sub
dec
push
xor
imul
push
push
add
and
orb
cmpsl
sbb
mov
xor
add
push
loope
inc
sar
sub
loop
jmp
adc
dec
es
jp
outsb
jne
add
push
ret
sahf
pop
push
xlat
pop
js
cld
push
xor
add
test
in
sub
incb
xlat
dec
or
xor
pushf
mov
aad
lods
mov
or
push
cmp
pop
or
mov
lret
pusha
jle
test
mov
test
adcb
fcomps
out
fmuls
scas
push
pop
pop
mov
dec
push
mov
add
test
xchg
ret
mov
pop
xor
sbbl
jne
pusha
and
pop
into
xchg
mov
push
sbbl
add
xor
loop
mov
add
jbe
fsubr
jle
clc
mov
movsl
loopne
jb
mov
repz
psrad
jp
cmp
shr
mov
jge
mov
adc
jge
imul
out
mov
adc
adc
push
and
into
das
call
pop
shr
add
mov
xor
cmp
mov
mov
sub
fstpl
jmp
xchg
mov
xchg
dec
mov
imul
aam
lods
out
jl
mov
push
fildl
adc
subb
mov
xor
je
fidivrs
pop
jl
add
jae
mov
inc
mov
cld
int3
push
outsb
push
dec
nop
fmuls
pop
aaa
in
and
adc
inc
nop
aam
dec
ret
cli
add
lock
sub
cmpsl
lock
inc
fwait
es
lahf
sub
jecxz
pop
sub
ja
inc
test
cmp
inc
fmull
clc
pop
mov
xchg
dec
cli
dec
into
insl
push
xchg
ret
daa
sbb
adc
repz
push
mov
aas
loopne
movb
pop
inc
jle
sub
inc
pop
aad
push
clc
mov
add
pushl
and
pop
sbb
xor
mov
aad
adc
nop
mov
pop
loope
in
mov
les
adcl
in
xor
dec
lea
sub
dec
rcrb
and
leave
bound
jo
cmp
cmp
sbb
xchg
xchg
xchg
repnz
push
rcll
fidivrs
fwait
cli
movsb
xor
add
pop
dec
fidivl
inc
inc
cmp
movzbl
insl
shl
shlb
lock
enter
cmp
mov
rorb
lret
hlt
shl
lock
sti
shl
rcl
aaa
add
in
jge
sbb
out
jl
inc
sbb
pop
std
test
test
aam
cmp
stos
ja
fdivs
sbb
push
fstl
dec
mov
mov
inc
adc
popf
dec
cmp
cmpb
xchg
outsb
hlt
push
jmp
ss
test
cmc
mov
sbb
roll
xchg
repnz
xchg
fisubrl
imul
fiadds
add
je
cmpsb
mov
push
mov
push
hlt
cmp
push
pop
leave
or
inc
lods
ja
clc
mov
bound
inc
push
dec
mov
je
xlat
jp
pusha
inc
je
mov
cmpsl
pop
add
pop
sub
and
leave
xlat
xor
mov
pop
gs
pop
xor
into
xchg
cld
popf
pusha
jp
jge
mov
lock
jb
cmp
dec
enter
mov
lret
shr
mov
rorl
ret
inc
ror
fs
lock
test
inc
dec
dec
add
popa
outsl
dec
mov
or
push
lock
pop
dec
fldl
cmp
cmpb
sub
pusha
ret
xor
sub
sbb
scas
inc
xor
xor
fcmove
fs
adc
clc
mov
cld
xlat
or
sbb
ret
mov
add
test
sbb
push
mov
fabs
pusha
sub
test
jo
xor
out
std
push
add
inc
ret
test
mov
sub
pop
fadd
lods
scas
shrb
mov
sub
sarb
xchg
sbb
enter
or
rcll
ror
adc
mov
pusha
das
je
jl
orl
ret
xchg
pop
add
lock
inc
or
jecxz
pop
add
jle
shlb
out
popf
jge
movsb
pop
or
loopne
je
loope
push
sub
inc
add
adc
mov
push
inc
fnsave
insb
das
lods
sbb
scas
ret
je
mov
cltd
leave
ret
addb
mov
es
je
jge
cmpb
fdivrl
hlt
sbb
adc
cmp
xor
ja
insl
cmp
enter
inc
mov
mov
push
and
adc
iret
ffreep
aas
repnz
mov
add
js
mov
call
inc
push
mov
mov
add
mov
cs
and
hlt
jle
sbb
add
lock
int
andb
jecxz
test
inc
enter
or
into
or
xchg
stc
inc
xor
fs
loopne
sahf
mov
pop
in
arpl
das
mov
js
mov
fwait
pusha
push
or
xchg
xchg
adc
in
sub
adc
add
add
push
or
mov
aam
sarb
lret
fiadds
test
or
jno
nop
faddl
fcoms
dec
sarb
push
xor
mov
or
or
xchg
test
cmc
andl
jl
test
jmp
mov
test
dec
dec
adc
daa
mov
xchg
mov
and
cmp
ret
dec
jae
dec
add
or
jmp
push
popf
cmpb
sbb
aam
mov
mov
and
jmp
mov
sub
cmp
sub
cld
xor
ds
or
xchg
sub
lcall
daa
fldl
add
add
mov
aad
loopne
lods
sub
movsl
insb
insb
or
das
cmp
daa
in
imul
push
pop
cmp
push
xchg
adc
sahf
cmpsb
test
push
cmpsb
mov
ja
into
test
fdivrl
jmp
mov
or
ret
inc
call
sarb
and
out
and
cmp
pop
mov
add
aas
test
repz
cmpb
add
ror
and
rorl
mov
jne
test
xorb
and
push
inc
std
dec
inc
and
mov
mov
pop
mov
pop
pushf
adc
ret
xor
fimuls
in
fcmovnbe
push
les
shl
sbbl
dec
mov
adc
lods
hlt
jo
ss
mov
jle
adc
fcmovu
mov
ja
cmc
sub
jmp
push
fwait
pop
sbb
aam
or
xchg
sarb
mov
or
stc
cmc
mov
daa
enter
add
mov
inc
sub
add
mov
adc
ja
je
in
data16
cmpsl
push
popf
sub
in
test
mov
outsb
fidivs
mov
jb
popa
jb
aam
mov
cmp
sbb
sbb
scas
fcompl
imulb
out
out
adc
jl
mov
fcomps
in
sbb
cmp
pop
int3
fwait
mov
into
nop
pop
pop
sub
mov
mov
jnp
shl
icebp
sarl
jle
inc
rcll
les
jle
addr16
add
push
clc
jge
or
loopne
jp
mov
ljmp
pop
cs
in
or
cwtl
cmp
pop
dec
add
movsl
lock
int
push
jbe
inc
pop
and
fld
lret
faddl
inc
popf
pop
test
xor
sbbb
mov
push
adc
mov
xor
pushf
add
pop
jmp
xchg
pop
xlat
or
imul
out
cmp
xor
cltd
push
mov
subb
cmp
lea
loopne
iret
in
adc
cmp
sub
out
jle
jb
stos
icebp
mov
jmp
inc
cmp
repnz
test
pop
in
mov
std
sbb
ds
scas
pop
xorl
mov
push
pushf
add
push
xchg
adc
jb
or
enter
xor
dec
outsl
insl
les
call
xor
pusha
inc
xchg
inc
mov
jmp
mov
out
test
in
mov
add
fsubs
mov
movsl
sub
mov
add
cld
push
mov
mov
scas
push
inc
inc
and
sbb
or
aaa
lcall
movl
aam
test
cmp
sub
pop
lea
push
or
mov
pop
jns
xor
daa
les
mov
inc
mov
in
dec
sbb
adc
mov
pop
dec
push
pop
mov
enter
adc
lock
xchg
test
into
push
cmp
aam
js
cmp
pushf
jmp
pop
aam
arpl
pop
mov
cmpsl
mov
push
add
in
jae
sub
outsb
cmp
cltd
pusha
sbb
mov
push
daa
add
cmp
incb
lods
jl
cs
sub
inc
cmc
xor
jo
mov
push
xor
pop
movsb
or
pop
cmp
jp
lea
dec
addr16
push
push
and
xorb
sbb
movsl
xchg
inc
nop
dec
enter
into
jecxz
pop
aam
jecxz
cwtl
xchg
js
adc
pop
push
dec
out
scas
out
sbb
adc
pop
jmp
andb
cli
popa
or
add
fucomp
xorb
push
jbe
sbb
scas
mov
insl
gs
cmp
inc
daa
pop
jmp
lret
jp
sti
insl
mov
in
sub
pop
out
push
push
mov
pusha
jno
add
cmp
or
ljmp
fidivs
sbb
subl
mov
lahf
pop
test
ds
cmp
lea
adc
movsl
popf
test
popa
xchg
cmc
fiaddl
push
push
pushf
dec
xchg
jo
pop
aas
int
insl
xchg
sbb
sarb
pop
cli
fildll
das
xor
leave
sar
shlb
fnsave
aam
or
dec
sbb
and
daa
push
sbb
inc
pop
sbb
data16
mov
xchg
cs
adc
fisttpl
mov
pusha
addps
test
add
rorb
pop
or
cmp
es
ljmp
push
mov
sahf
lcall
ljmp
pop
push
sub
andb
mov
xchg
mov
and
in
mov
push
xor
dec
xor
cmpsl
pop
nopl
cmp
jbe
xchg
iret
mov
add
push
mov
pop
es
fucomip
push
cmp
loopne
dec
ss
sbbb
aad
std
adc
sub
mov
sarl
sahf
add
mov
sub
or
or
test
enter
jne
js
cmp
push
int3
and
out
sahf
fs
add
mov
lods
rcl
lret
add
popa
push
pop
pop
mov
ficoml
cld
dec
popf
pop
pop
fmuls
mov
daa
out
pop
add
add
test
jno
or
sub
fcmovnu
clc
sub
out
push
xchg
push
add
push
loopne
mov
mov
aaa
inc
sbb
pop
fmul
inc
sub
jnp
push
or
mov
lret
mov
frstor
add
sub
adc
je
popa
jge
dec
lods
add
add
xchg
mov
je
mov
jno
mov
std
dec
sub
aad
cltd
inc
inc
insb
incl
mov
lods
fisttpl
sbbb
cmp
aaa
out
cmpsl
orl
mov
add
popf
jne
popa
mov
or
or
or
lahf
push
test
imul
sub
xchg
lods
cmpsb
mov
enter
syscall
add
mov
ss
inc
imul
or
xchg
insl
pop
ficoml
sbb
inc
sbb
inc
xchg
sbb
fimull
imul
inc
adc
stc
jo
int
mov
dec
mov
movsb
push
aam
sti
shl
lods
pop
xchg
scas
push
fadds
mov
jae
jp
ficompl
sbb
add
ficompl
adc
js
dec
sbb
xor
dec
and
xchg
cld
or
loope
add
enter
in
xlat
adc
or
test
push
iret
js
fnstcw
dec
mov
push
inc
cld
mov
xor
jne
or
or
sar
leave
adc
pop
out
dec
adc
adc
aad
push
lea
mov
xor
stos
mov
testb
or
ret
test
push
mov
mov
pop
cmp
sbb
nop
push
cmp
lahf
cs
mov
adcl
mov
inc
push
insb
xor
adc
and
and
rclb
subl
cmp
jmp
xchg
rcrb
arpl
push
shlb
mov
xchg
mov
sub
xor
negb
and
jmp
pop
sub
xchg
daa
adc
push
inc
popa
and
or
ss
inc
and
imul
je
mov
lahf
dec
lahf
inc
add
movsl
sub
jle
or
and
lret
scas
fists
cmc
add
popa
ss
jmp
push
icebp
or
push
adc
push
fwait
ret
sti
fildl
adc
dec
fdiv
addb
jecxz
pop
out
sub
sub
jge
mov
adc
iret
sbbb
outsl
jae
lahf
or
cmp
and
jp
sbb
popa
push
xor
das
cltd
mov
mov
mov
jmp
sbb
sar
push
test
test
cmp
lahf
xor
int3
stos
jo
test
das
jb
rcr
and
adc
cmp
mov
std
out
mov
xor
es
cmp
pop
lds
jmp
out
cmp
les
sub
out
push
mov
mov
jnp
stos
pop
and
or
push
stos
gs
pop
mov
fisttpl
out
movsl
insl
popa
test
jno
adc
hlt
fdivs
mov
dec
test
int
cmp
push
sub
jp
xchg
lock
push
cmpsl
cmc
mov
add
lods
ficompl
rcrb
pop
adc
mov
inc
push
pusha
xlat
in
xchg
rorl
movsl
minps
inc
mov
adc
leave
daa
xchg
out
pop
jp
inc
push
int3
shrb
shl
adc
sub
rcr
push
lock
and
mov
mov
jno
and
es
mov
ljmp
push
fidivs
xor
gs
js
or
ljmp
and
xor
pop
lahf
addb
push
ljmp
movsb
push
rorl
movsb
inc
mov
int3
sbb
movsb
ret
xor
inc
push
cmc
xor
and
sbb
pop
mov
cmp
incl
psubb
xor
jno
dec
dec
mov
mov
sub
jl
and
jg
sub
mov
cmp
jecxz
aad
clc
orl
jp
test
pop
dec
dec
inc
lods
arpl
fadds
enter
adc
insl
xchg
and
ljmp
pushf
pop
jno
les
hlt
sbb
mov
sub
out
incl
movsb
ds
das
dec
cmp
rcrb
push
push
clc
xchg
imul
jg
out
enter
dec
scas
into
mov
inc
xchg
outsb
jge
loope
mov
repz
ud2
cld
or
mov
and
push
jle
add
je
add
cmp
in
jo
push
rolb
adc
sub
aad
clc
das
dec
mov
hlt
xor
push
xor
push
xchg
push
add
push
divl
xorb
ficoms
jo
mov
dec
shl
call
mov
or
sub
mov
aam
divl
fldcw
repz
dec
xchg
clc
mov
pop
ss
jno
leave
jno
mov
pop
test
cli
hlt
cltd
fsubrp
mov
and
sbb
test
dec
out
fwait
xchg
mov
and
push
xchg
rorl
or
aas
or
addr16
push
insb
loope
repnz
xchg
mov
ja
and
rolb
lock
jno
inc
js
movb
xchg
movsb
xchg
jl
fisubrs
or
or
mov
adcl
jno
xchg
add
xlat
mov
push
and
dec
es
xchg
lock
push
xor
in
icebp
jmp
stos
faddl
movsb
mov
add
xchg
add
pop
psubd
movsb
jp
pop
push
scas
cmp
add
aam
mov
stos
pop
jno
pop
orl
jne
leave
arpl
aam
iret
mov
insl
rcrl
int3
lock
cmp
rcrb
sahf
dec
data16
ja
jo
mov
push
push
mov
add
mov
adc
jle
pop
jecxz
jge
xlat
std
and
gs
enter
std
adc
sub
pushf
jae
and
pop
sbb
and
fistpll
push
mov
ja
inc
lods
sbb
inc
mov
cmp
rorb
mov
je
les
insb
push
push
mov
jp
push
sub
ficoms
aas
rorb
inc
lock
pop
clc
std
cmpsb
dec
fisttps
jns
mov
xchg
dec
pushw
xchg
or
sub
pop
popa
xor
mov
jns
sbb
adc
loope
add
loop
movsl
cld
sub
jns
pop
cmp
jp
insb
sti
xor
leave
dec
negb
inc
je
pop
out
jmp
jp
pop
pop
ja
pop
mov
jecxz
shlb
lret
adc
cmp
mov
push
add
xchg
cmp
pop
fmuls
imul
leave
inc
push
inc
lods
sbb
outsl
out
leave
loope
dec
fdivrs
pop
pop
in
add
jo
aam
jl
aaa
in
test
std
cmp
xor
gs
and
cmpsl
aam
jne
jo
sbb
add
test
sub
test
shll
bound
xor
ljmp
cmp
stc
roll
testb
lcall
xchg
pop
mov
addr16
orb
adc
sti
xchg
stos
mov
or
cld
sbbb
xlat
imul
dec
push
sahf
xlat
loope
jl
push
xchg
xor
cmp
xor
rcrb
mov
cmp
pop
jo
int3
sbb
jmp
add
iret
stos
lods
les
inc
or
add
dec
popf
mov
cmpsb
call
negb
adc
and
sbb
insb
jb
pop
clc
pop
icebp
sbb
push
push
ja
mov
roll
aam
dec
das
lock
pop
call
lock
lods
fbld
push
je
into
xchg
scas
or
adc
jno
fdivs
add
mov
sahf
sbb
add
push
mov
add
data16
rcl
ficompl
jg
in
or
inc
pop
dec
andb
pop
add
sbb
adc
les
in
push
rcr
inc
xchg
xor
mov
and
inc
adc
cmpsl
and
mov
jmp
push
leave
andb
mov
mov
loop
inc
pusha
loop
fidivs
cltd
fsubrl
or
in
push
nop
outsl
sub
sbb
xor
imul
sbb
pop
fimuls
or
ret
scas
mov
xlat
mov
adc
cmp
dec
sbb
nop
push
push
inc
outsb
adc
sbb
dec
in
push
cmp
or
fcoms
mov
xor
add
jp
sbb
cmp
mov
push
fisubrl
rolb
fcomi
mov
inc
mov
movsl
imul
shrb
mov
pop
adc
xchg
lods
push
das
in
repz
add
test
sub
sbb
into
jl
dec
lea
push
js
mov
bound
lods
outsl
jnp
add
push
pop
jb
push
pop
add
push
call
adc
cmp
fistpll
test
clc
sub
pop
jg
mov
pusha
addb
and
aam
in
cmpsl
adc
subl
ror
in
int
or
xor
push
xchg
sarb
inc
sbb
movsl
lock
add
repz
jp
adc
cmpsl
sbb
push
mov
push
repnz
shlb
or
mov
push
mov
cmp
push
fidivl
sbb
dec
mov
jle
push
cld
jo
stos
inc
or
xchg
aas
jmp
rorb
addr16
pop
or
inc
outsb
add
fsubs
inc
push
in
add
cmpb
sub
xor
fiadds
fstpt
lret
inc
gs
bts
flds
push
out
sub
jo
push
loopne
mov
pop
lock
jmp
sbb
or
fs
data16
push
fdivr
and
iret
xor
repz
aas
call
int
sbb
aas
xor
sti
outsb
fdivs
sbb
sub
icebp
jecxz
out
sbb
subl
pop
rclb
test
jmp
mov
clc
jge
sahf
push
mov
xor
pop
jo
or
shll
ficomps
inc
popa
cwtl
and
sub
in
adc
outsb
pusha
push
cmc
cld
packssdw
xchg
cs
int3
sub
mov
leave
iret
push
mov
pop
xor
push
push
lock
inc
out
and
push
clc
fidivrl
dec
adc
xchg
int3
leave
add
mov
inc
repz
andl
movsb
push
hlt
aam
aad
mov
adc
loopne
pushf
xor
mov
push
and
fstpl
shld
sbb
sbb
push
mov
bound
pusha
cmp
pusha
daa
add
jle
hlt
dec
cmpsb
add
or
inc
out
xor
loope
push
testb
lock
repz
mov
bound
adc
fcoml
stos
pop
dec
fidivrs
cmp
pop
mov
sbb
xchg
aad
mov
imul
sub
push
jmp
inc
fwait
add
mov
dec
push
push
and
call
xor
and
jnp
inc
fwait
jmp
loope
add
add
dec
scas
into
addl
ret
xchg
notb
xchg
push
out
jecxz
jl
sbbb
adc
sbb
hlt
pop
aad
lret
and
stos
test
loope
push
fcoms
fildl
fimull
decl
dec
clc
es
insl
sbb
enter
xor
sti
cmp
lahf
ficompl
adc
xchg
sbb
pusha
enter
sub
js
adc
pop
ss
insb
popa
lahf
in
jo
push
cld
insl
mov
push
pushl
or
mov
jg
mov
add
inc
loop
add
cli
addr16
cmpsb
push
out
repz
fwait
lcall
pushf
loope
mov
inc
sub
shlb
or
adc
dec
lcall
fld
mov
push
sub
cltd
adc
loopne
xchg
outsl
in
sub
inc
add
loopne
sti
mov
jge
ss
sbb
test
mov
mov
fs
cmc
and
pop
call
pusha
mov
ret
fbstp
loopne
lods
jo
lret
addr16
pop
push
jnp
jecxz
imul
jns
and
das
push
inc
fs
call
pop
sbb
jge
shlb
or
or
sub
nop
pop
mov
xor
in
mov
mov
in
xlat
cmpsb
push
rclb
mov
add
inc
loopne
imulb
testb
lret
or
pushf
cli
pop
cmp
or
outsb
dec
sub
sub
aam
cmp
and
xchg
lret
call
xchg
dec
mov
cmp
inc
mov
popl
lods
imul
push
dec
sbb
rolb
mov
leave
shlw
push
fadd
daa
data16
aas
xchg
xor
mov
mov
mov
pop
mov
loop,pt
fisubrs
test
add
push
sbb
adc
hlt
les
jg
cmp
dec
inc
call
addb
and
aad
fdivs
pop
ja
cmpsb
vmread
scas
adc
fiaddl
lahf
push
test
jmp
roll
int3
push
add
push
roll
jb
dec
in
int
pop
call
out
arpl
dec
lret
filds
sbb
lds
pop
and
in
or
xchg
js
push
pop
rcll
test
pop
inc
das
adc
lock
sub
rcll
clc
fisttpl
dec
dec
push
dec
mov
in
lods
in
or
gs
mov
stos
push
xchg
mov
push
rcr
lcall
push
mov
sub
or
push
mov
fdivrl
cli
test
lret
test
inc
ret
fs
pop
adc
int3
inc
lods
dec
jge
or
std
inc
stos
mov
mov
orl
fisubrl
adc
or
stos
adc
xor
pop
repnz
fisttps
xchg
xchg
push
rorb
inc
enter
ror
mov
sbb
data16
aam
mov
lods
add
enter
das
add
push
dec
clc
call
sub
jle
cs
or
and
mov
pop
lea
mov
add
out
mov
adc
cmp
cmp
push
add
lea
mov
sub
lock
fs
mov
lcall
lret
clc
mov
xchg
cs
and
into
test
inc
insl
add
mov
enter
dec
push
fadd
or
mov
jne
enter
sti
das
xchg
add
mov
stos
pop
lods
push
sub
add
mov
lock
jbe
lods
cli
cltd
adc
add
dec
dec
cmc
and
scas
shl
cmc
mov
push
xchg
jle
js
jl
xchg
mov
adc
or
orb
aam
and
lahf
rol
pop
into
test
xchg
and
in
sub
cmp
dec
sbb
cmp
outsl
aas
adc
push
jp
es
sub
outsb
adc
mov
mov
sub
fldt
outsb
shll
cmp
std
add
jae
fisttps
pusha
xor
sbb
rcrb
sbb
dec
js
inc
outsl
xchg
fistps
fildl
and
mov
adc
leave
cli
xchg
movsl
hlt
or
pop
xor
pop
sahf
xor
cmp
fcoms
push
push
mov
incb
push
pop
jmp
mov
js
pop
lock
fiadds
test
sub
or
mov
and
pop
imul
ljmp
mov
cmp
cmc
inc
fistps
xchg
mov
jp
call
cmp
adc
les
outsl
hlt
sub
icebp
data16
cld
xor
cs
pop
fisttps
call
cwtl
push
fistl
loopne
je
movsl
test
out
test
inc
and
add
mov
push
push
adc
pop
push
scas
insl
xchg
in
lds
lods
inc
mov
jp
xchg
imul
xchg
pop
mov
push
cmp
std
xchg
mov
mov
rorb
jle
ljmp
dec
pushf
mov
add
cmp
imul
push
test
test
push
cmp
clc
pop
push
sub
or
push
push
dec
fmuls
adc
xchg
push
dec
add
in
dec
cli
xchg
push
shrl
dec
mov
popf
push
mov
xchg
sub
sbb
push
sub
loopne
mov
sub
inc
pop
xlat
or
push
repnz
in
das
sub
and
or
ss
lahf
hlt
jg
push
nop
inc
or
cltd
shl
inc
adc
popa
push
arpl
scas
dec
sub
or
in
push
mov
sbb
in
or
sub
jge
stos
mov
inc
push
cmp
add
sbb
flds
fldt
fadds
cmp
cltd
leave
and
popf
add
mov
insb
aam
xor
aas
cmp
loop
xchg
add
dec
out
outsb
sbb
mov
pop
data16
inc
push
xor
imul
scas
mov
adc
outsl
popa
adc
repnz
push
mov
cmp
adc
jge
mov
shll
insl
in
ror
out
hlt
sub
mov
xor
loopne
test
stos
sbb
popl
loopne
jmp
xchg
out
stc
lods
jnp
in
mov
mov
scas
lcall
xchg
lret
mov
jno
xchg
mov
decl
lods
mov
and
fs
pusha
pop
mov
push
inc
mov
andb
push
push
xchg
insl
mov
mov
and
mov
push
popa
dec
mov
loope
subl
mov
and
ja
adc
inc
nop
aas
sbb
movsl
mov
outsb
mov
push
xor
fsubrs
test
mov
adc
mov
sti
cwtl
in
pop
mov
lret
xchg
cli
and
pop
ss
repnz
mov
push
cmp
jmp
and
pop
cld
or
jg
sub
and
test
cwtl
loope
dec
or
fwait
std
dec
icebp
rolb
or
add
rcll
stos
clc
dec
mov
xor
dec
xchg
push
ret
push
clc
or
sbb
mov
ret
or
jbe
add
pop
xor
ja
subl
mov
in
addr16
mov
jg
adc
fdiv
mov
loopne
push
mov
adc
push
pusha
je
lock
aas
add
loopne
rorb
shll
mov
xchg
cmp
cmp
xchg
dec
fisubs
mov
hlt
dec
mov
daa
and
push
push
mov
push
xchg
inc
mov
xchg
mov
jl
pop
leave
mov
movsb
xchg
in
sbb
mov
shl
cli
jl
jecxz
mov
fadds
fs
addr16
sbb
pop
stos
xor
scas
stos
jbe
or
adc
push
pop
insl
test
inc
stos
je
loopne
mov
std
std
test
jbe
shlb
mov
adcl
sqrtps
inc
mov
jecxz
sbbl
and
sub
outsl
mov
adc
pop
mov
pop
pop
cmpsl
inc
data16
mov
movsb
or
jbe
jg
jecxz
pusha
inc
data16
pushf
in
enter
push
cltd
or
mov
aas
cld
sahf
cmc
into
xchg
and
lods
imul
or
add
clc
inc
or
push
or
xor
inc
xor
mov
loop
dec
jg
mov
stc
mov
xor
pusha
and
fwait
sub
sbbb
cmp
inc
push
push
mov
pop
or
cmp
movb
and
pushf
insb
cmpsb
mov
inc
dec
mov
dec
ljmp
shrb
sahf
lss
xchg
xlat
repnz
xadd
or
ret
cmc
lods
xor
jnp
loop
jnp
push
sub
xchg
test
ljmp
pop
dec
mov
fdivr
mov
dec
add
sub
dec
stos
mov
ss
push
testl
testb
mov
mov
cmc
inc
pop
fisubrl
xor
cmp
push
cwtl
pop
push
scas
adc
pop
decb
outsb
cmp
push
add
sub
dec
add
inc
dec
xor
jnp
add
mov
add
leave
ret
cmp
sub
fildll
and
adc
rolb
mov
inc
lods
jae
int
xlat
jns
push
movb
outsl
push
mov
lcall
xor
aaa
imul
dec
dec
push
cmp
inc
lret
enter
imull
inc
push
mov
add
dec
jp
cs
out
sti
inc
loop
sub
push
lea
push
lea
push
sbb
mov
cmpl
push
add
jbe
mov
ret
arpl
inc
pop
gs
cld
push
push
sbb
mov
pop
jl
leave
ret
mov
add
adc
test
inc
mov
sti
mov
jnp
xor
ficomps
iret
inc
sbb
imulb
dec
in
sub
inc
dec
mov
hlt
mov
push
stc
mov
movl
aaa
aaa
push
cld
roll
xchg
mov
jne
sahf
inc
dec
fcmovbe
fisubrl
outsl
insl
js
mov
into
inc
mov
inc
pop
sahf
mov
mov
xor
clc
sub
mov
nop
cli
push
xor
je
out
jbe
jl
lock
jbe
clc
mov
test
add
out
push
hlt
xor
addb
js
dec
aaa
inc
xor
subl
jne
ljmp
ret
mov
push
testl
add
inc
jbe
adc
inc
push
inc
push
gs
js
push
iret
mov
loop
jns
inc
dec
or
dec
mov
pop
adc
fdivrl
out
jno
jnp
testl
cmp
inc
imul
inc
aaa
push
dec
pop
mov
push
ljmp
hlt
xor
push
insb
and
xor
dec
mov
fists
js
inc
mov
push
je
sub
repnz
xchg
mov
in
mov
push
dec
ss
sub
loop
mov
push
jbe
and
or
decb
pusha
xor
mov
stc
cmp
in
mov
cmp
test
jnp
stc
cmp
ds
push
out
arpl
jg
pop
push
add
pusha
test
sbb
ja
add
dec
mov
pop
jmp
dec
addr16
xor
cli
sarl
push
mov
jo
je
inc
dec
add
mov
pop
repz
cmp
ja
cld
cld
aas
lcall
cmp
call
dec
shrb
clc
push
and
xor
mov
push
sub
dec
mov
inc
or
push
mov
ds
rolb
loope
test
xlat
sbb
mov
push
mov
inc
jle
mov
lods
sub
inc
fistl
sub
js
dec
scas
xor
dec
nop
out
push
fiaddl
inc
sbb
fdivs
sub
inc
mov
loopne
icebp
sbbb
hlt
adc
pop
lock
das
adc
clc
or
dec
jmp
roll
outsb
xor
pop
sbb
mov
cmp
enter
jns
cwtl
jae
cld
shr
outsb
inc
clc
xor
jl
sbb
rclb
fmuls
push
inc
push
aaa
xchg
jbe
lods
out
pop
or
inc
xor
loope
mov
dec
mov
js
dec
inc
add
cmpsl
dec
cli
rorl
or
outsl
lret
idivl
inc
jns
inc
push
push
mov
dec
aam
imul
insl
dec
jae
outsl
push
arpl
nop
dec
mov
inc
adc
mov
inc
sbb
lock
push
xor
xor
nop
dec
rcrl
sahf
sarl
pusha
push
pushf
dec
rorb
and
dec
push
imul
test
js
stos
jns
jne
jnp
push
xor
jb
pop
push
repnz
jnp
mov
sub
js
dec
xor
outsb
fcoms
bound
call
pop
dec
mov
push
cmp
cmp
cwtl
clc
xor
repz
into
clc
in
push
sti
mov
bound
call
out
dec
push
pop
push
xor
jmp
pop
lods
jle
incb
push
arpl
jp
mov
pop
or
hlt
xor
ljmp
or
stc
pusha
scas
out
ljmp
push
push
dec
jecxz
and
ds
mov
add
rorl
rolb
inc
push
xor
loope
rep
test
mov
jno
mov
jecxz
dec
adc
dec
dec
push
mov
dec
int
je
rorl
lret
mov
inc
push
jbe
cmc
loope
outsb
ret
adc
arpl
cmp
inc
jns
inc
jle
pop
jns
or
inc
clc
add
add
inc
mov
xor
jl
sbb
mov
xor
ss
in
pop
sti
mov
repz
jb
jno
inc
mov
lock
mov
out
xor
push
jne
mov
addb
je
pop
mov
cmpsb
jecxz
pop
and
inc
and
aaa
inc
cwtl
aam
clc
adc
push
outsb
jne
shl
xor
pop
push
fisubrs
lock
lret
orps
pop
xor
dec
inc
es
push
fdecstp
push
testb
jl
roll
and
inc
int
sti
pop
adc
push
iret
pop
notl
jo
cmpsb
call
pusha
adc
xor
test
mov
adc
xchg
xchg
dec
inc
inc
inc
fbstp
inc
jle
xor
dec
lods
jmp
push
jno
lods
cmp
aad
movsl
sbb
pop
pop
shlb
fs
insl
enter
jne
int3
inc
push
push
push
stc
aad
inc
inc
inc
add
add
cld
add
cmp
ret
push
dec
push
jbe
pop
das
sbb
loopne
mov
or
lods
mov
push
mov
inc
sbb
jnp
pop
jge
push
rolb
push
enter
dec
and
test
andl
mov
iret
pop
ss
and
xor
faddl
dec
add
mov
inc
inc
stos
loopne
xchg
pop
inc
dec
fidivrl
mov
hlt
mov
push
dec
dec
xor
sbb
or
bound
aaa
insl
xor
fidivrl
pop
adcb
data16
enter
mov
push
out
inc
push
jl
xor
inc
push
mov
pop
push
push
add
daa
mov
push
pusha
stc
cmp
lock
pop
scas
push
inc
pusha
inc
sbb
push
jo
pop
and
cmp
and
jg
insl
pop
clc
jae
add
ss
push
mov
mov
mov
add
push
or
shrb
gs
imul
push
sub
out
lret
dec
mov
mov
cmpb
shrl
cli
jp
xor
or
gs
jno
push
pop
jne
popa
arpl
mov
dec
push
sarl
pop
movsb
int3
jns
xorl
push
jno
cld
push
inc
call
lods
ret
stos
aam
data16
pop
insl
push
push
dec
mov
sbb
pop
fdivl
outsl
inc
dec
por
adc
loopne
call
sbb
into
in
dec
loope
jae
or
inc
push
dec
lock
mov
call
mov
xchg
dec
cmp
inc
outsb
xor
daa
pop
xchg
shll
pushf
outsl
in
adc
mov
inc
add
je
imul
add
test
xor
cs
jne
imul
dec
adc
outsl
push
pop
inc
pop
add
inc
mov
popa
xchg
add
gs
pop
or
lock
push
jne
push
add
incb
dec
loop
inc
movsl
mov
movsl
push
popf
sbb
push
arpl
or
pop
sar
mov
dec
pop
push
sub
push
insl
pop
sub
xor
test
call
dec
aaa
cmp
sub
mov
or
jmp
addr16
mov
aas
inc
adc
mov
aaa
iret
ret
sbb
cmp
pusha
xchg
xchg
inc
lahf
dec
cmp
inc
or
mov
pop
inc
push
cli
negl
mov
jecxz
out
imul
repnz
push
icebp
pop
jmp
push
fs
push
in
mov
pop
inc
inc
fdivs
pop
or
lret
lods
pusha
inc
loopne
icebp
push
stos
cmp
push
test
cmp
pop
push
add
mov
out
push
inc
push
sbb
dec
inc
movsl
sub
loope
xor
inc
pop
outsl
push
rol
dec
inc
js
jmp
inc
js
outsl
lods
clc
xor
xor
inc
xor
dec
stc
into
xchg
cmp
sarb
cmp
fldcw
insl
dec
push
mov
clc
push
sbb
sub
loopne
test
adc
jns
push
inc
xorb
fiaddl
mov
mov
xor
sbb
sbb
sub
push
cmp
jmp
dec
cmp
xor
or
imul
push
xor
mov
jo
push
inc
push
xchg
rorl
pop
daa
sbb
mov
lea
sbb
inc
ficomps
insb
outsb
bound
push
dec
nop
adc
lret
fldt
insl
lock
cmp
adc
push
jmp
int3
in
push
cmp
xor
insb
fmuls
push
dec
out
sbbl
sbb
jbe
test
stc
mov
push
gs
les
shlb
dec
push
in
jo
inc
cltd
or
punpcklwd
inc
test
fdiv
xor
imul
add
xor
bound
jle
jecxz
add
mov
push
push
jno
inc
pop
and
sbb
mov
dec
lahf
jmp
ljmp
clc
dec
sub
fimull
jae
imul
rolb
push
insb
lret
lret
mov
inc
add
push
xor
lock
lock
push
cwtl
in
push
mov
add
ret
pop
movsb
push
jae
xor
push
fisubs
mov
fimull
mov
iret
pop
cmp
or
push
gs
xor
or
js
gs
jbe
bound
clc
aaa
fidivs
rcrw
xchg
into
inc
imul
movsb
dec
les
adc
add
inc
dec
xor
jae
mov
stos
mov
js
pop
enter
into
stos
in
sub
adc
cmp
adc
jo
inc
dec
xchg
mov
pop
rcll
adc
ja
pcmpgtb
test
clc
ds
dec
inc
dec
es
pop
in
push
xor
sbb
aas
jns
dec
popa
xor
cmpsb
or
mov
push
add
jbe
mov
dec
dec
jno
sub
fsub
xlat
leave
test
sub
push
aas
dec
and
test
add
cmpsb
xchg
pop
jae
push
pusha
fdivrl
es
ds
pop
lret
mov
movl
xor
in
psllw
dec
call
inc
outsb
xor
test
mov
aad
dec
add
es
inc
arpl
push
inc
xor
ror
idiv
pop
loopne
add
xchg
xor
imul
enter
in
inc
pop
andb
push
add
add
into
cmp
push
cmpl
inc
imul
jmp
stos
je
imul
inc
inc
mov
dec
xor
sbb
fs
imul
out
xchg
dec
xor
ret
mov
add
pop
and
je
data16
pop
xor
scas
pop
add
test
js
push
outsb
divb
push
cmp
rcr
cmp
ret
scas
je
js
mulb
insl
push
es
inc
dec
pop
adc
pop
fsubrl
pop
or
into
xchg
dec
or
loopne
inc
mov
ret
fdivs
xor
xor
pushf
dec
fs
orl
push
dec
orb
xchg
sbb
xor
push
into
je
fs
in
sub
push
sub
fistps
or
call
in
xor
fnstenv
or
sar
mov
lret
std
andl
gs
inc
imul
je
sub
mov
mov
ss
insl
out
insb
clc
cmp
jne
add
movsl
or
sbb
add
xor
arpl
inc
or
dec
xor
inc
adc
addr16
push
out
icebp
in
decb
cli
fcmovb
sbb
cmp
daa
adc
stos
out
inc
push
scas
lods
icebp
push
pusha
dec
add
andb
push
or
scas
outsb
stos
ret
add
dec
insl
movsl
pop
in
les
ds
imul
mov
jne
dec
dec
shl
pop
push
inc
cmp
lds
cmp
mul
clc
adc
mov
xor
adc
insb
inc
popa
sub
dec
int3
ljmp
sub
xor
push
jb
inc
xchg
mov
popa
jns
les
lods
dec
out
pop
pop
inc
inc
ret
imul
or
dec
test
xor
cs
lods
out
inc
and
fstpt
and
inc
xchg
push
dec
inc
ljmp
jns
cwtl
push
dec
dec
jbe
cmp
clc
cmc
sbb
push
arpl
cmc
loope
lods
fbld
imul
inc
mov
outsb
aaa
loopne
imul
pop
sbb
sub
addr16
adc
insl
push
or
mov
xchg
fs
aam
addr16
repnz
je
je
stos
daa
out
push
repz
adc
rorl
push
or
lret
xor
inc
daa
or
loopne
into
shrb
push
insl
push
in
push
dec
jmp
sub
stos
and
inc
inc
std
les
ret
push
int
lea
xor
in
xor
inc
clc
xchg
inc
loopne
rcrl
js
fs
imul
movsb
shlb
arpl
loopne
out
jg
push
mov
bound
clc
leave
add
jmp
jno
mov
dec
cltd
popf
loope
inc
dec
test
sbb
dec
leave
ljmp
mov
lcall
pop
dec
dec
push
fldenv
push
or
dec
rorb
clc
push
dec
xor
push
push
iret
cld
nop
inc
or
les
rclb
xchg
mov
lret
pop
adc
lea
repz
push
rcrl
and
call
mov
imul
mov
mov
push
fnsave
jbe
aam
push
add
jo
enter
push
push
loop
jne
fwait
jns
pop
dec
push
jo
push
fildll
inc
loopne
and
repnz
inc
xlat
fadds
inc
mov
mov
xchg
aas
nop
shr
dec
push
xchg
pop
inc
adc
push
sbb
mov
lods
mov
add
popl
rclb
push
sbb
dec
adc
xor
cld
into
popf
nop
outsb
or
push
and
dec
addr16
push
stos
and
loope
addr16
xchg
mov
dec
aad
add
je
orb
popa
xchg
imul
inc
inc
push
ret
jne
out
inc
pop
dec
push
sbb
and
cld
out
imul
inc
fyl2x
fidivl
push
add
call
push
pop
outsl
mov
xor
push
insb
popa
inc
inc
fistpl
insl
stos
hlt
stos
dec
enter
inc
and
push
js
mov
push
inc
push
dec
inc
das
stos
hlt
cmp
and
mov
mov
fs
xor
push
jmp
mov
jo
push
jbe
lahf
insl
lock
push
clc
ss
clc
push
inc
mov
imul
sub
repnz
stc
xorl
inc
insl
mov
adc
push
mov
adc
inc
in
ljmp
das
lret
cmpsl
scas
les
leave
xchg
cmp
push
dec
xor
addl
or
dec
cmp
leave
leave
sbb
testl
rorb
xor
inc
notb
call
bound
mov
ret
je
icebp
xchg
adc
repnz
push
push
test
mov
pop
outsl
imul
pop
push
fdivs
push
inc
pop
fcomps
xchg
out
inc
decb
push
xorb
push
adc
push
dec
push
dec
sub
insb
pusha
push
insl
sub
xor
movsb
dec
sbb
fdivrs
imul
sbb
mov
sbb
xor
ja
dec
xchg
test
inc
mov
ficompl
repnz
push
pop
push
inc
ss
jae
push
lock
or
enter
pushl
xor
add
push
pop
ja,pn
xor
ss
jo
dec
jo
or
push
fisubrl
mov
clc
repnz
cmpsb
rcll
adc
sub
stos
repnz
xor
jle
es
mov
in
inc
pop
add
repnz
pop
movsb
ds
cmp
xorb
adc
mov
cmpsb
jns
ljmp
ds
je
push
outsb
lahf
dec
push
xor
dec
lods
push
ret
insl
jo
mov
rorl
lock
mov
mov
inc
push
push
popa
jnp
sub
movb
push
mov
sbb
jns
push
dec
inc
dec
je
lods
andb
in
xchg
int3
js
test
imul
jb
int
pop
cli
xorb
push
sub
push
lret
cmpsl
jmp
shlb
shrl
pusha
movsb
push
push
lret
sbb
inc
loopne
adc
popa
push
xchg
push
jno
jo
xchg
fs
xor
inc
xor
jbe
sbb
dec
scas
movb
or
add
shll
into
fcomps
dec
cmp
shlb
add
leave
push
std
out
and
xchg
jge
push
push
inc
dec
pop
mov
pusha
mov
xor
lret
pop
call
jp
mov
cmpsb
cmp
in
pop
and
push
mov
inc
fcomps
mov
test
dec
push
lahf
testl
cmp
addr16
addl
and
dec
hlt
gs
in
sbb
push
cltd
inc
sub
xlat
and
cmp
dec
push
or
das
mov
rorb
addr16
les
lret
xor
jnp
lods
lcall
cwtl
out
shr
bound
into
adc
cmp
push
ror
inc
clc
sbb
dec
bnd
gs
dec
ret
xorb
push
insl
fisubrs
fldcw
into
loop
fwait
jecxz
cld
adc
inc
and
fstpt
push
stos
fmuls
inc
imul
dec
push
imul
xor
fidivrs
xor
jl
inc
jne
into
aaa
outsb
pop
call
mov
inc
push
rclb
inc
rolb
out
addr16
jbe
dec
dec
push
les
xor
add
ret
inc
js
inc
jbe
outsb
mov
push
lret
cli
fdivs
or
jns
sbb
or
data16
ja
rol
mov
inc
dec
sub
fs
jo
ret
js
out
sbbb
xor
push
insl
cmp
and
dec
je
daa
jbe
add
mov
push
stos
sub
dec
sarb
add
loope
push
ljmp
jae
fists
sbb
push
shrb
push
inc
in
movsb
pusha
cmp
mov
loopne
in
je
fcomps
dec
call
xchg
push
push
adc
clc
sbb
dec
inc
fadd
push
paddd
lea
add
and
pop
in
negl
dec
mov
mov
jns
xchg
call
mov
sub
inc
sbb
ror
scas
mov
enter
rclb
jp
pop
dec
inc
xor
outsb
mov
in
stos
sarb
jp
add
inc
xchg
sbb
jecxz
jle
ja
je
test
dec
inc
mov
sub
addr16
dec
jb
cmpsl
js
and
inc
push
outsb
imul
push
add
adc
add
popa
jo
outsl
test
mov
cmp
jo
dec
lea
test
ds
pop
xor
jo
sbb
clc
iret
enter
inc
roll
jns
inc
ret
xor
mov
cmp
mov
push
out
or
jmp
outsb
push
cs
pop
push
inc
fimull
movsl
jge
xor
ljmp
jp
das
push
jo
cmp
rcll
sub
inc
pop
je
dec
insb
push
inc
popa
dec
ret
lds
pop
jne
jmp
pop
xor
dec
inc
call
jno
push
cmp
in
adc
jnp
push
aaa
add
ss
pusha
inc
lock
aad
imul
fadds
push
out
jae
jns
inc
test
adc
sub
lret
and
into
ret
push
js
in
mov
pop
sub
add
sti
inc
dec
xor
gs
lea
outsl
jo
lret
cmp
ss
inc
cmp
orb
xor
mov
jg
jo
mov
imul
imul
stos
sbb
iret
xchg
jb
dec
xor
mov
push
ss
mov
xor
jle
adc
dec
outsb
out
sbb
lea
push
insb
push
outsl
cmp
dec
push
cmp
dec
pop
dec
mov
push
insb
push
lret
mov
push
pop
jp
arpl
dec
push
and
or
bound
dec
outsb
cwtl
test
push
sbb
push
push
or
ret
push
sar
xor
mov
adcl
addr16
fistl
clc
popa
jae
inc
test
pop
and
push
add
ja
push
outsl
ret
push
sub
push
mov
and
inc
jmp
add
call
and
xchg
push
add
aaa
xor
lcall
push
imul
movsb
and
xor
dec
pop
pusha
insb
popa
out
mov
or
inc
and
addr16
inc
insb
xchg
adc
test
out
popa
and
lret
scas
dec
dec
adcb
call
push
arpl
mov
je
jbe
jns
push
popl
adc
mov
xchg
loop
xor
dec
dec
ljmp
lret
jo
push
gs
lock
lea
push
idivb
divl
bound
push
fdivrl
cmpsb
call
movsb
sti
add
pop
and
lcall
ss
push
outsl
dec
push
pop
ss
dec
call
fsubrs
inc
bound
mov
lea
enter
or
cmpsb
push
push
and
inc
jae
inc
mov
or
dec
inc
popa
fsubs
imul
sub
and
testb
rorl
shrl
data16
inc
rorl
movsl
dec
sbb
movsl
popa
outsb
ss
test
and
mov
shr
inc
and
adc
mov
jb
xchg
dec
mov
jmp
imul
push
aam
cmc
ret
jg
push
sbb
divb
lea
ret
loop
addr16
dec
pop
mov
inc
jae
fsubp
dec
or
fwait
push
jno
push
dec
push
arpl
paddq
mov
sub
ret
outsl
xchg
push
dec
xchg
inc
loopne
lock
xor
outsb
inc
inc
push
push
stos
adc
insl
out
out
stos
or
mov
clc
repz
or
pusha
int3
daa
dec
mov
inc
push
push
pop
push
imul
ljmp
inc
inc
adc
inc
dec
js
mov
loopne
dec
xchg
es
push
js
loopne
std
sub
inc
aam
sbb
data16
scas
ret
dec
jo
aam
jb
sbb
sub
ja
jb
mov
dec
shrb
into
movsb
lret
jg
push
dec
sub
dec
or
push
pop
inc
imul
xlat
loopne
add
lahf
mov
aas
leave
xor
pop
pop
jno
shlb
cmp
ret
gs
xchg
or
fstps
sub
adc
dec
mov
mov
or
sbb
inc
inc
dec
or
dec
cmp
ret
call
insb
ljmp
inc
in
dec
adc
inc
rol
or
add
or
or
popa
adc
push
aaa
pusha
or
outsb
xor
std
mov
mov
je
or
jecxz
dec
je
push
mov
xchg
push
xchg
mov
jns
pushf
lods
push
rcll
push
lret
adc
jo
push
inc
sbb
jg
lods
data16
ret
push
insl
jbe
hlt
rcll
movsb
stc
subb
dec
fsubs
ficoms
inc
sarb
rcrb
fdivl
popa
ret
iret
push
xorb
jb
insb
ljmp
sub
test
aaa
imul
jae
call
jne
addr16
mov
ret
orl
stos
push
dec
sbb
mov
enter
in
xlat
cmp
push
repz
push
and
outsb
inc
roll
sbb
data16
push
pop
or
push
xchg
push
loop
jb
push
jg
cld
stos
ljmp
dec
push
pusha
bound
pop
es
inc
ret
add
xchg
inc
aas
sarl
adc
les
push
je
add
mov
push
adc
mov
add
xor
shll
mov
flds
or
in
or
iret
es
push
push
outsl
jmp
stc
orb
popa
pushl
add
test
push
ret
inc
lock
arpl
xor
enter
cmp
outsl
xor
add
fcomps
sarb
or
inc
adc
or
cmc
and
outsb
cmp
add
mov
cwtl
enter
push
incb
dec
ds
out
cmp
cmp
jle
add
ja
xchg
cmp
jae
scas
mov
test
xor
lock
push
pop
sub
lods
xor
in
push
cmp
clc
mov
js
xor
xor
mov
ja
inc
add
mov
sbb
es
add
mov
rcl
cld
pop
lock
cmp
dec
jo
cld
pushl
clc
dec
std
jp
jae
sbb
jge
inc
mov
adc
out
das
inc
push
dec
ja
mov
daa
sbb
dec
mov
sub
inc
cld
xchg
cmp
pop
sub
push
xor
rorb
inc
pop
pop
fmuls
inc
push
push
sub
push
dec
mov
clc
jmp
push
inc
mov
add
and
inc
lea
xor
dec
adc
adc
and
sub
add
testl
adc
imul
pop
add
incl
dec
andb
dec
jb
add
adc
imul
and
mov
mov
arpl
test
adc
mov
bound
pop
popf
add
mov
add
sti
call
push
xlat
add
mov
add
sahf
xor
sub
push
xlat
sbb
imul
mov
sub
dec
outsl
je,pt
inc
dec
add
or
push
xchg
aam
imul
repz
pop
add
mov
and
js
stos
arpl
fs
add
daa
inc
add
mov
xor
pop
jbe
pop
xor
cmp
orl
xchg
and
orb
sarl
mov
xchg
std
or
loopne
fidivs
test
inc
sbb
mov
mov
sub
out
pusha
dec
andl
and
adc
ret
sub
add
insw
add
fidivrl
rcr
das
pushf
insb
daa
cmpsb
test
inc
gs
es
dec
push
mov
loope
inc
jge
dec
sahf
or
andl
inc
or
xor
pop
outsl
xlat
test
mov
stos
xchg
mov
mov
xchg
xchg
dec
cmp
jo
subb
fiaddl
rcrl
jae
xchg
adc
cmp
push
enter
das
daa
add
add
mov
mov
jg
jp
and
pop
dec
mov
inc
roll
dec
cmc
clc
inc
and
inc
aam
pop
push
jae
jne
out
pop
add
ds
rcr
inc
push
mov
mov
scas
add
add
ret
add
and
xchg
xor
push
xor
dec
xchg
outsl
add
fdivl
push
push
and
ret
adc
or
inc
cmpb
push
xor
outsb
pop
adcb
mov
dec
xchg
jno
sbb
mov
leave
ret
gs
ds
loop
lock
push
push
in
cwtl
jl
andb
mov
mov
dec
add
mov
mov
aaa
mov
int
mov
insb
test
das
mov
adc
sub
add
inc
lcall
adc
je
nop
cmp
xchg
inc
addr16
inc
cld
ljmp
lds
sarl
loop
cmp
cwtl
inc
filds
add
jg
scas
pusha
stos
sbb
js
data16
mov
popf
dec
in
nop
pop
mov
adc
or
into
jge
fisttpl
out
push
ljmp
sbb
xor
decl
loope
jne
mov
gs
and
jp
fdivrs
pushl
int
jo
sahf
dec
std
mov
adc
std
fmull
cmpb
push
add
push
xchg
mov
leave
ja
aas
mov
pushl
aad
push
mov
adc
sub
jno
ljmp
xor
pop
or
push
rolb
jmp
dec
push
sub
add
jmp
adc
out
xchg
mov
std
bound
add
and
roll
cwtl
test
push
lcall
enter
xorl
mov
jp
cmpsl
aas
jns
bound
shlb
jnp
sbb
dec
outsl
aaa
sbb
popa
push
std
xchg
es
mov
lea
mov
mov
pop
jmp
jns
mov
es
aas
xlat
je
cli
test
adc
jo
out
mov
cmp
mov
inc
sbb
or
lcall
cltd
mov
adc
sub
xchg
cmp
pushf
cmpsl
dec
cld
stos
stc
jg
pop
icebp
push
outsb
pop
push
adc
fmull
cmc
mov
push
mov
decl
les
pop
lahf
dec
cli
test
out
shlb
outsl
push
mov
jbe
decl
xchg
lods
inc
stos
enter
pop
and
subl
xchg
inc
negb
cmp
mov
jg
call
sub
loopne
sti
test
adc
jno
mov
cmp
jg
out
out
adc
insb
aad
clc
pop
sbb
lods
dec
sub
ljmp
mov
lcall
cmp
mov
dec
lods
pop
or
pop
cmp
cmp
cwtl
or
fistpll
mov
push
leave
mov
pop
inc
pop
xchg
popa
mov
lcall
mov
push
fimull
aaa
mov
das
lcall
push
jl
cmpl
insl
stc
insl
sbb
fwait
call
sub
sbb
xchg
sub
pop
test
fwait
mov
sub
cmp
imul
jmp
imul
mov
pop
xchg
lcall
mov
dec
mov
hlt
ja
je
pop
int
movl
xor
mull
je
jp
popf
aas
mov
jl
mov
jp
out
mov
mov
mov
das
aam
sarl
aad
pop
clc
cmpsb
push
add
sbb
mov
xor
into
test
dec
pop
xchg
rcll
xchg
lcall
or
je
es
inc
testb
ror
testl
ljmp
cmp
dec
push
lahf
xor
cmp
cli
or
jp
mov
add
aaa
pushf
decl
loopne
mull
xor
pop
mov
jle
sahf
ss
mov
aas
test
shlb
hlt
mov
outsl
clc
sub
inc
pop
mov
mov
and
mov
loopne
pop
fwait
test
inc
test
int
in
testl
mov
lods
cmpsb
mov
scas
mov
jbe
das
cltd
cmp
pop
sub
jmp
outsl
cltd
push
in
lcall
push
jo
mov
or
pop
push
cld
jmp
adc
cmpl
inc
in
add
dec
mov
pop
iret
cmp
mov
in
sub
lret
dec
std
stos
cmp
push
jg
call
mov
dec
sti
imul
popf
fiaddl
out
fcomps
lea
jl
mov
sub
xchg
dec
push
adc
and
push
idiv
push
aas
pop
es
mov
inc
mov
and
jns
xlat
test
jnp
add
pop
icebp
mov
or
and
ret
fistpll
aas
mov
enter
sbb
cmp
stos
xor
jnp
xchg
loopne
jl
push
mov
inc
movsl
cmpsb
pop
dec
ficomps
dec
and
test
movsb
dec
add
cmp
mov
push
pop
stc
dec
xchg
sbb
sti
xchg
aas
and
and
jb
cmc
cld
dec
call
or
ljmp
cmp
lods
push
dec
aas
call
adc
out
mov
std
ss
inc
mov
int
and
jg
ljmp
clc
jae
jbe
add
aas
jl
jg
ret
ds
adc
nop
fmul
sti
sbb
push
incb
jo
sub
les
hlt
xchg
mov
fucomip
push
bnd
xorb
jmp
ret
and
cmp
mov
call
stos
orb
movsl
jbe
negl
pop
and
or
and
mov
daa
enter
xchg
dec
mov
out
pop
push
or
and
jno
push
xchg
cmpsb
sub
and
inc
outsl
icebp
inc
jmp
sbb
and
cmp
jmp
imul
pop
subb
fiaddl
cld
ja
dec
aam
jo
into
data16
pop
sub
roll
imul
enter
sbb
fimull
lods
cmpsl
sti
or
jbe
mov
iret
push
sbb
adc
inc
xchg
sbb
setnp
les
cmp
aas
sarb
ret
and
push
and
pop
or
pop
call
cmp
test
mulb
push
sbb
xlat
and
test
xchg
fmuls
jg
out
sti
mov
aaa
pushf
jae
push
xchg
cmp
add
loope
stc
data16
fcomps
movsl
es
dec
sbb
addl
ret
sbbl
or
les
std
mov
in
loop
mov
movsl
push
jmp
lahf
popa
fisttps
test
xor
adc
mov
pop
fimull
les
jmp
mov
cmp
sbb
jg
sbb
repnz
push
lret
arpl
push
xchg
dec
mov
add
fdivl
sbb
ljmp
fstps
sub
or
daa
fmull
sar
mov
push
jle
ss
cmp
loopne
pop
pop
pop
pop
sub
mov
add
cld
mov
aam
lea
sub
lret
xlat
outsb
sbb
stc
das
sbb
popa
push
mov
enter
sbb
adc
xlat
mov
into
or
out
insl
push
jg
pop
loopne
subl
shrb
mov
cltd
ss
repnz
push
jae
lcall
repz
mov
mov
mov
sbb
cld
sbb
lahf
ret
dec
cli
aaa
scas
iret
lret
push
sub
icebp
or
outsb
mov
jbe
ss
cmpsb
push
or
adc
jg
scas
jle
cmpsb
pop
mov
pop
sbb
int
aaa
mov
pop
jle
ret
pop
ljmp
jp
loope
push
dec
in
jo
mov
jge
jmp
dec
das
xor
popa
je
inc
xchg
ljmp
push
cmpsb
in
mov
punpcklwd
test
sub
rcrl
pop
stos
cmpsb
test
cmp
mov
sti
xchg
cmp
fwait
outsb
sti
sbb
mov
aad
push
push
aas
les
test
pop
cmc
mov
sbb
out
or
data16
lods
stos
push
sbb
add
mov
or
sarl
cld
inc
icebp
push
cmpsl
testb
push
push
data16
int
in
pop
push
add
loop
fbstp
add
adc
add
cltd
or
or
iret
ljmp
ficoml
lock
mov
pop
dec
test
cld
pop
cmpsb
rcr
imul
xchg
sbb
pop
loopne
jge
add
xchg
mov
enter
outsl
push
loop
in
iret
in
mov
cli
stos
mov
int
int
mov
cmpsb
lods
add
in
mov
inc
or
cmp
xor
shrl
sbb
les
mov
add
decb
add
nop
and
sbb
cmp
cmpsb
push
add
xchg
insb
cmp
fadd
and
pop
mov
clc
pop
cmp
movsl
jo
xorl
adc
mov
loop
mov
pop
jge
ret
addr16
pop
pop
hlt
pop
lahf
dec
mov
outsb
negl
xor
adc
lret
cld
add
cmpsb
xchg
hlt
icebp
xchg
jno
fsubrs
out
ret
cs
ficoml
imul
arpl
pop
sbb
imul
out
loop
xchg
fldt
incl
and
push
js
mov
pop
xor
hlt
repz
ljmp
out
adc
mov
ds
les
data16
sub
push
cmp
mov
roll
xor
mov
daa
faddl
xchg
add
push
loop
cld
cld
cmpsb
fcmovbe
dec
std
inc
add
call
test
and
sbb
out
mov
push
add
in
pushf
xor
loop
push
stos
push
pop
add
push
inc
mov
sub
icebp
add
push
les
enter
push
js
dec
lock
jmp
sbb
iret
mov
fwait
add
call
cmp
loope
out
dec
sbb
test
inc
rcrl
lock
test
imul
pop
bound
jnp
mov
repz
and
stos
mov
xchg
cmpsb
and
lret
pop
mov
aam
push
fwait
nop
mov
pop
std
xchg
hlt
test
cmpsb
sbb
or
incb
int
jnp
hlt
push
dec
add
mov
aaa
sub
subl
mov
repz
add
jmp
push
lods
jbe
jb
jb
sub
repz
fdivl
ljmp
cs
pop
in
sbb
xorl
out
outsb
addr16
cmpsb
sub
repz
call
pop
sarb
shrb
repnz
push
call
mov
mov
cmpsb
add
jbe
outsb
mov
dec
lock
rcrl
add
sbb
adc
sub
call
pop
jmp
mov
stos
loope
add
test
test
out
mov
test
mov
adc
adc
jg
mov
cwtl
and
pop
mov
mov
push
jns
cmc
pushf
pop
push
incl
loop
adc
das
mov
jge
incl
cld
or
add
or
add
and
sbbl
mov
push
jbe
icebp
stos
lock
cld
xchg
fwait
inc
mov
jb
aam
fwait
xchg
jle
push
add
sbb
or
loop
xchg
leave
cmp
sbb
in
push
push
lock
push
arpl
push
roll
and
cltd
xor
clc
jnp
lret
pushf
addr16
sti
or
inc
fdivrs
jbe
loopne
and
std
repnz
adc
cmpsb
pusha
test
push
or
leave
imul
inc
in
lcall
bound
stos
add
fs
mov
jle
mov
or
scas
daa
mov
lea
xor
cmpsb
cmp
insl
pop
adc
cmpsl
push
lock
jl
jl
dec
in
or
inc
stos
aaa
push
ret
push
je
lahf
incl
mov
pop
pop
cwtl
fidivrs
je
mull
sub
mov
inc
xlat
sbb
jns
sbb
add
shlb
add
mov
jns
sti
cmp
mov
sbb
loop
subb
loop
xor
push
lods
pop
repz
bnd
pop
cltd
inc
testl
into
xchg
xlat
adc
daa
rcrb
mov
mov
xor
call
push
cwtl
mov
add
movsl
sbb
mov
mov
insl
mov
and
push
push
jecxz
mov
or
push
ss
sarl
je
or
shr
push
jbe
orl
imul
push
ljmp
jecxz
lea
pop
ret
in
push
clc
jmp
mov
or
sbb
int3
aam
aas
mulb
sahf
sub
dec
das
mov
fcomps
adc
scas
rolb
leave
insb
hlt
cmp
cmp
cli
mov
push
adc
dec
cmp
push
stos
icebp
repz
push
add
ret
repnz
fcompl
jae
and
fistps
add
mov
ss
jbe
xor
xor
sub
std
fisubs
shrb
fcomip
xorb
inc
in
stos
dec
mov
cmp
ret
js
fdivr
dec
clc
popl
sub
push
leave
mov
xor
xor
and
pop
push
rcrb
adc
xor
cld
jp
mov
call
cmp
sub
shrl
push
out
ror
das
sub
mov
leave
fisttpll
test
div
inc
inc
push
mov
cs
mov
and
jb
seta
inc
push
add
push
movsb
or
cmpsl
pop
mov
inc
pop
stc
cmpsl
pop
out
rcll
jbe
popf
rorl
cmpsl
sub
lcall
jl
test
or
mov
jmp
pop
adc
insb
and
inc
fildll
fcomp
jo
adc
call
mov
and
sub
or
push
decl
popa
cli
ljmp
sbb
inc
lock
xchg
or
mov
cmpsl
test
cwtl
les
adc
inc
push
pusha
cli
decl
and
adc
jo
mov
imul
fldt
test
shr
loop
xbegin
rorb
pusha
sti
fisttps
inc
fwait
scas
loop
pop
cmp
push
cli
outsb
mov
frstor
jg
and
pop
scas
arpl
aas
mov
rcrl
stc
mov
sbb
mov
fstps
xchg
mov
mov
add
mov
test
cmp
jbe
cmpsb
dec
push
or
stos
outsl
mov
shl
pop
lock
lahf
je
outsb
dec
and
or
mov
or
aaa
cli
loope
stos
cmp
mov
bswap
cmp
cld
mov
stc
push
pop
les
je
mov
pop
mov
cmpsl
sub
jecxz
ljmp
loop
lea
in
adc
xchg
jne
pop
test
jae
outsb
sbb
repz
loopne
cmp
push
dec
sub
ret
xchg
stc
cmp
sub
testl
ds
outsl
push
call
ss
pushf
mov
scas
mov
fmull
cmpsl
nop
mov
push
fdivrl
jne
js
push
imul
mov
mov
xchg
xchg
lcall
imul
iret
fwait
scas
icebp
scas
jmp
jo
add
es
mov
icebp
push
clc
ja
cld
ljmp
mov
mov
sub
scas
int3
dec
sbb
stos
pop
js
lock
cmpsb
inc
sub
lret
cmp
add
fiadds
movd
out
xchg
das
jns
out
adc
add
jbe
mov
mov
xchg
sbb
outsb
add
ss
sbb
jle
mov
ljmp
cmp
cmpb
ss
dec
jge
jle
or
data16
xchg
dec
xor
cmp
push
push
xor
mov
mov
cs
stos
jg
jl
lahf
aaa
inc
ljmp
fcoms
push
xbegin
leave
mov
lea
jge
movsl
clc
insl
push
lock
cmp
xchg
pop
jp
cmp
adc
mov
sub
loop
scas
xor
cltd
push
aas
jp
out
enter
inc
push
clc
test
ret
sbb
lock
call
ficompl
in
sbbb
stos
ja
push
push
aad
xchg
loopne
ficoml
push
enter
adc
dec
aaa
cli
ja
enter
aaa
out
mov
mov
inc
lds
xor
xchg
and
nop
inc
negb
scas
mov
int
repz
pop
inc
lret
and
into
pushf
rcr
sbbb
sbb
or
pop
mov
adc
icebp
scas
pop
movsb
or
adc
in
cmp
call
repz
xchg
jl
push
dec
adc
xor
iret
ret
repnz
insl
cmp
orl
mov
test
jo
stos
inc
jo
xlat
pop
jg
scas
icebp
pop
push
out
or
cmp
mov
loop
pop
sbb
repz
cmc
imul
adc
iret
push
addb
xor
clc
sub
sub
mov
aaa
mov
cmp
jle
lock
enter
push
out
or
loop
cwtl
add
flds
repnz
inc
jbe
addr16
mov
shlb
sbb
push
inc
push
pop
adc
stos
xor
movsb
push
lret
les
insl
cmp
insl
adc
pop
cmpsl
pop
enter
loop
aaa
xchg
int
stos
mov
outsb
and
xchg
xchg
pop
jo
stos
icebp
pop
repnz
fwait
and
dec
int3
jnp
in
les
mov
aas
jns
aad
icebp
inc
jecxz
jle
cld
repnz
cmpsb
bound
fucomip
xchg
sbb
pop
sbb
das
mov
push
push
dec
mov
mov
dec
jecxz
mov
sbb
fstpt
scas
jno
lret
mov
push
stos
sbb
push
dec
enter
jle
mov
aad
push
in
daa
fwait
cli
movsb
imul
adc
add
jns
aaa
push
ds
aaa
jne
or
je
arpl
mov
inc
mov
pop
sub
xchg
repnz
dec
hlt
pop
dec
and
sbb
faddl
push
mov
pop
stos
mov
mov
sahf
mov
test
push
jg
outsl
addb
daa
iret
sub
mov
sub
subl
scas
icebp
out
mov
xchg
dec
lock
sti
or
mov
push
jno
inc
into
popa
adc
stc
lret
or
cmp
adc
push
mov
xor
push
jo
adc
cld
cmp
sbb
clc
or
les
mov
jno
xchg
int3
lcall
cld
add
aas
sbb
popf
mov
outsb
push
sub
lds
ja
inc
hlt
fbstp
out
jg
out
pop
add
loop
sub
xchg
dec
cli
test
outsl
pop
je
pop
imul
jle
cpuid
pop
cmpb
pop
cmc
and
nop
mov
ja
addl
cmpsb
addr16
jg
fs
push
sbb
xor
dec
mov
test
data16
fldl
ss
pop
loope
and
loope
enter
pop
mov
insl
lcall
adc
xor
fildl
cmp
and
imul
lcall
mov
clc
popf
cmpsl
sbb
sub
neg
dec
stc
and
mov
adc
iret
mov
fbstp
cmp
cmpsb
sbbb
cltd
mov
aad
nop
fisttps
mov
push
inc
arpl
into
int
decb
mov
les
fadds
cs
dec
xchg
xor
add
sbb
inc
dec
test
dec
lock
icebp
lret
mov
out
test
add
ficoms
mov
mov
xchg
pop
xchg
fisttps
clc
or
mov
sahf
sbb
jns
xchg
cli
inc
bound
mov
jne
stos
das
stos
lods
add
jns
push
cmp
movsl
lcall
lds
push
test
test
add
mov
dec
out
ja
cli
fwait
pop
stos
scas
mov
adcb
or
jg
xor
sbb
jecxz
dec
pop
add
lock
lret
add
sbb
ljmp
pop
push
dec
sbbl
mull
cmpsl
aas
inc
mov
ret
mov
cmp
stc
outsl
das
or
loop
mov
loop
in
jb
insl
jne
hlt
push
incl
dec
adc
test
xchg
jle
pop
and
jbe
fs
or
and
out
cmp
mov
icebp
adc
cmp
jl
cmpsb
cmp
sbb
add
daa
imul
sub
dec
push
add
gs
push
cmp
jae
call
pop
enter
cmpl
push
es
dec
add
xchg
pop
ljmp
jg
xchg
into
addr16
mov
mov
jbe
mov
mov
push
ret
outsb
leave
imul
cmp
pop
out
les
out
in
and
xchg
fdivrs
cmp
ret
scas
jl
dec
jo
add
leave
jg
aas
sbb
call
stos
fidivrs
call
and
adc
jns
setge
sbb
int
stos
into
jl
pop
dec
cmp
sbb
fidivrs
push
call
addr16
and
outsb
mov
xchg
cld
stos
mov
pop
mull
adc
xchg
fistl
jl
fists
xor
fs
dec
mov
sub
nop
cmpsl
adc
jbe
push
mov
add
mov
ficompl
repz
std
les
mov
sbb
out
jl
cmc
repz
and
pushf
rorb
stos
lahf
test
sub
pop
ret
sub
and
test
push
sbbl
pop
mov
sbb
out
jge
sbb
push
outsl
decb
push
jo
mov
jg
or
cmpsb
cmpsb
cmp
and
outsl
aas
sbb
je
jl
dec
jle
sub
fwait
push
loopne
push
xchg
pop
sub
push
pop
and
aas
mov
rcr
push
mov
mov
adc
dec
out
loope
and
add
stos
test
pop
ret
add
mov
add
sbb
sbb
xlat
sti
inc
notl
jle
sbb
adc
outsb
aas
pusha
test
mov
insl
push
stos
push
xchg
fstps
jg
aam
mov
jg
fisubrl
icebp
add
stos
les
loop
dec
jp
scas
push
cmp
cmpsl
jp
sti
xor
clc
aad
sarl
sahf
cmp
cmp
mov
sub
or
and
mov
adc
jbe
test
in
idiv
mov
pop
or
ja
jns
jmp
adc
orb
negl
lcall
enter
insl
push
sbb
aas
cld
shll
sbb
and
mov
sarb
fistps
sub
xor
xlat
outsb
icebp
int
fcompl
sub
cmp
nop
aas
mov
xchg
mov
sub
cs
mov
pusha
xor
mov
lds
mov
test
dec
add
shlb
cmp
shrl
sub
mov
aas
xor
fwait
jle
and
add
add
popl
rcrl
inc
fldcw
pop
orl
les
add
ja
jge
pop
loop
movsb
xlat
inc
add
imul
enter
iret
mov
into
repnz
sub
icebp
idiv
data16
jmp
mov
or
bound
es
out
pop
ljmp
mov
sbb
mov
cmpsb
pop
notb
add
and
push
jno
mov
mov
mov
add
repz
jns
fs
js
pop
jecxz
sub
or
test
je
lahf
pop
pusha
repz
push
imul
sbb
fstl
int3
mov
lock
push
rolb
cmp
pop
jecxz
mov
test
jb
mov
mov
xchg
and
cwtl
push
mov
test
shl
fdivrl
pop
loopne
add
sub
rcll
or
test
lea
mov
cld
repnz
insb
sbb
jp
and
jmp
jge
repnz
sbb
inc
int3
inc
imul
push
ljmp
sbb
xor
sti
push
popf
fiaddl
aas
pop
rcr
cmp
loopne
rcrb
roll
sub
add
out
cli
inc
add
int3
pop
jo
pop
out
cmp
ret
sbb
cmp
push
jmp
hlt
pop
pusha
or
cmpsl
icebp
fistpll
test
or
add
test
or
inc
adc
jle
insb
nop
inc
ffreep
cmpl
jp
stos
xor
stos
add
sahf
lds
lahf
aaa
lds
lods
aaa
loop
cli
dec
clc
mov
pop
pop
enter
lret
je
ljmp
sbb
rclb
pop
jnp
or
mov
loop
jl
mov
and
loopne
cmc
jp
repnz
push
loope
ljmp
or
aaa
test
inc
fildl
jg
scas
js
sub
je
xor
out
mov
dec
clc
adc
int
imul
mov
movl
sahf
adc
adc
daa
pop
jno
inc
int3
hlt
jne
push
and
incl
push
jb
dec
push
idivl
call
sarl
into
push
mov
push
outsb
mov
sar
inc
call
adc
add
push
jbe
pusha
mov
xchg
call
stos
or
rorb
jle
ljmp
or
and
mov
stc
mov
push
xchg
sub
xchg
pop
in
mov
fdivrl
or
xchg
sub
out
cmc
test
xlat
rorb
fdivrl
add
aas
cmp
push
inc
lahf
pop
and
addr16
xchg
add
add
mov
or
loop
lods
cmpb
jge
mov
xlat
mov
pop
cmp
ja
dec
insb
mov
jg
cmp
lcall
subl
repz
movsl
push
pop
aad
sahf
or
loop
push
mov
adc
lret
dec
outsl
inc
jp
leave
insl
sub
sbb
movsb
push
cmp
aaa
rclb
outsb
or
es
icebp
outsl
add
adc
add
adcb
cmp
sbb
fldcw
pop
test
sti
mov
push
or
add
jmp
imul
insb
pop
mov
mov
adcb
mov
push
sbb
push
mov
rclb
xchg
jle
addr16
lock
cmpsl
mov
or
add
aaa
popa
fwait
out
push
jp
pop
in
jo
stc
lahf
outsb
mov
rcrl
aaa
shr
repz
int
loop
mov
aas
leave
jl
les
enter
loopne
xchg
stc
insl
push
jg
jecxz
pop
loope
pop
jmp
repnz
cmc
vpunpcklwd
movsl
inc
jmp
outsb
cmp
stos
cmpsl
or
jns
xchg
or
push
jl
mov
pop
xchg
xchg
fcomi
inc
pop
mov
ss
push
mov
icebp
and
cmpsl
call
je
pop
add
dec
fsqrt
inc
push
dec
in
mov
repz
push
jecxz
loop
sub
jne
or
hlt
mov
inc
outsb
lds
sbb
aad
imul
push
jno
or
lcall
jl
inc
mov
sub
imul
xor
rclb
int
js
xchg
inc
and
ret
dec
lea
fisubrs
add
in
adc
test
mov
ret
test
loopne
dec
add
lods
int
inc
mov
push
xor
out
cmp
int
cmp
dec
push
stos
ljmp
jl
cmpxchg
in
add
andl
icebp
lods
test
scas
aaa
mov
pop
fwait
mov
xlat
xor
xor
add
aas
sbb
loop
in
mov
dec
in
push
pop
outsl
or
call
add
push
add
lods
xchg
js
loope
mov
frstor
mov
xchg
jp
imul
fadds
clc
lcall
and
sub
cli
cmp
jbe
test
cmpsb
cli
imul
lcall
insl
leave
fdivp
add
mov
aad
lea
loope
push
inc
mov
jg
xchg
sarb
xor
add
outsl
fiadds
outsl
push
and
add
movsl
pop
or
mov
adc
push
sahf
rcrb
jmp
shlb
fdivrl
data16
or
int3
inc
mov
test
pop
add
jne
pop
lret
push
and
loop
into
cli
pop
int3
mov
sbb
rcrb
sbb
adc
add
jle
pop
push
rcrl
cli
xchg
jbe
loop
ret
in
loop
nop
out
push
or
pop
loopne
je
bound
mov
in
push
dec
cmp
jecxz
push
pop
popa
pushl
xor
pop
pop
dec
sbb
pop
mov
jg
or
iret
lds
hlt
fldt
pop
aas
sub
test
xor
pop
mov
outsl
cmpsl
sub
or
xchg
pop
or
dec
ret
cmc
mov
push
mov
push
sahf
hlt
loop
lods
push
ss
into
jbe
inc
comiss
add
xor
rorb
mov
or
jle
loope
lret
add
les
push
std
or
cmpsb
and
mov
jle
fwait
cmp
mov
clc
insb
subb
outsl
in
js
mov
dec
icebp
pop
sub
call
jmp
movsb
cmc
or
or
stos
clc
push
insl
pop
or
jmp
jo
lods
shl
adc
sbb
addr16
insl
int
sbb
mov
jl
push
das
stos
mov
push
adc
push
fmull
inc
mov
mov
pop
xor
mov
sbb
int3
jns
push
or
hlt
xchg
popf
add
pop
jbe
mov
mov
or
dec
psllq
push
loop
jmp
outsb
xchg
pop
cmp
insl
je
fisttpl
fstps
pop
add
push
dec
jl
mov
cmpb
imul
inc
sbb
mov
bnd
call
pop
in
test
cmp
mov
sbb
push
iret
or
jmp
mov
cmp
ficoml
push
test
cmpsb
mov
mov
or
ss
scas
push
fwait
sbb
mov
clc
mov
push
aad
test
ljmp
loopne
aad
fwait
popa
mov
mov
xchg
fidivrs
jbe
jmp
fimuls
clc
jo
in
ja
sbb
inc
add
and
test
hlt
xchg
fxch
jae
fldcw
and
je
xchg
push
mov
pop
jae
xor
jae
cmp
lahf
hlt
pushl
push
cmp
push
out
lea
ds
and
sub
jbe
inc
out
addb
iret
sbb
sub
les
pop
push
mov
xor
xchg
in
ljmp
shlb
sub
loope
js
push
std
mov
sarb
addl
pop
clc
das
jbe
stos
inc
cmpsb
mov
pusha
fwait
mov
push
mov
cmp
lods
and
cmp
lahf
lock
roll
repnz
test
push
inc
cli
mov
mov
imul
lea
nop
cmp
aam
stc
adc
lret
daa
lock
into
cmp
insl
sbb
std
or
lret
aaa
into
lea
xorb
mov
adcl
mov
adc
jp
ljmp
push
shlb
iret
arpl
mull
test
push
cmpsl
int3
aad
stos
fiadds
sbb
mov
xlat
lcall
iret
pop
cmp
int3
push
jge
push
jge
and
je
js
mov
shll
mov
push
push
sub
or
mov
cli
jg
mov
stos
ljmp
ret
fstps
shlb
dec
sbb
cltd
imul
mov
loope
dec
mov
sbb
cld
ret
dec
stos
mov
mov
hlt
adc
test
lret
insb
sbb
xor
fwait
das
rolb
lock
adc
loop
sub
mov
mov
jl
xchg
inc
fnstsw
cmp
std
mov
mov
enter
orl
pop
daa
lods
jp
rorb
out
inc
rolb
imul
add
dec
loope
rorl
aam
push
stos
icebp
and
scas
sbbb
mov
ljmp
imul
mov
cmpsb
xor
push
add
jns
in
outsl
jle
xchg
loop
sbbl
jecxz
add
test
push
lods
add
mov
lods
outsl
in
imul
out
cmp
stc
or
mov
in
or
sbbl
fists
sub
mov
loop
lock
scas
js
push
and
std
fdivr
mov
out
rcrl
insb
add
sahf
cmc
dec
inc
popa
ret
aaa
adc
ret
pop
jge
loop
cmp
leave
push
cmpsl
pushf
sbb
push
lcall
movsb
dec
mov
incl
and
push
add
inc
mull
fstps
jg
and
ficompl
mov
jl
cmp
rclb
push
sub
movsb
aas
sbb
aam
dec
and
pop
mov
lret
or
jg
in
std
cmpsb
mov
jg
or
jl
clc
enter
pop
cmp
push
jmp
out
int
add
daa
out
popl
cmp
into
or
int
push
or
xchg
lock
movl
test
inc
mov
inc
add
lret
and
adc
dec
mov
nop
loopne
icebp
or
jp
fwait
les
sub
inc
sbb
test
cmc
pop
mov
sub
cmp
rcl
mov
call
mov
xchg
sbb
xchg
sbb
cld
or
sbb
or
push
push
push
into
cmp
pop
or
test
fs
jbe
add
jo
inc
icebp
cli
push
mov
in
xor
iret
dec
or
cmpb
mov
das
stos
cwtl
add
jle
aad
cmp
xchg
inc
data16
mov
outsl
adc
jo
xchg
pop
es
jle
or
xchg
stos
mov
scas
lret
cs
and
outsl
rorb
das
push
dec
lea
pop
ret
sub
mov
sbb
ret
and
xchg
not
jmp
jp
scas
mov
jne
out
dec
mov
test
cld
aad
mov
dec
movb
xchg
push
mov
cmp
xchg
les
pop
ljmp
or
shrl
scas
out
mov
cmp
xchg
int
repnz
adc
cwtl
mov
scas
stc
aas
data16
sbb
jbe
call
fwait
fs
add
cmp
cmp
cmpsl
adc
test
fiadds
shrb
dec
add
xchg
sbb
mov
imul
out
andl
xor
and
push
scas
fwait
inc
cmp
mov
hlt
das
test
jb
push
xchg
cmp
cmpsb
mov
test
js
adc
in
inc
mov
jb
outsl
sub
jecxz
xchg
inc
int3
cmp
pop
dec
stos
outsl
test
and
dec
dec
mov
insl
sbb
loop
int
cmp
stos
jecxz
pushf
dec
push
lahf
jg
cwtl
sarb
out
ficomps
sub
int
and
in
fwait
fwait
dec
test
jg
push
call
pushf
test
pop
pop
cmc
nop
pop
cmp
cmpsb
imul
dec
jns
pop
icebp
loopne
cmp
cmp
and
dec
xor
xchg
sbb
dec
sub
add
test
mov
and
jnp
xchg
adc
inc
mov
clc
test
dec
mov
or
test
idiv
lds
pop
adc
push
adc
jg
jg
jmp
sbb
nop
mov
mov
cmp
aaa
xor
push
out
xor
pop
outsl
mov
mov
aad
fisttps
inc
arpl
int3
push
inc
jnp
pop
out
outsl
or
add
out
lods
insl
les
or
movsb
ja
test
cmp
test
stos
xchg
pop
loop
sti
das
test
mov
pop
xchg
xlat
lea
adc
insl
shrl
out
mov
jge
lds
pop
adc
aad
testl
mov
pop
mov
test
mov
repz
push
mov
and
pop
cmc
mov
xchg
loopne
cmp
test
sbb
push
scas
sub
decb
lods
xor
cmp
hlt
les
dec
lret
ljmp
loopne
xchg
mov
ret
jno
and
push
in
fsub
dec
jle
pop
scas
dec
hlt
stc
pop
sbb
xor
lahf
pop
test
stc
push
mov
mov
fwait
mov
das
dec
jnp
in
inc
add
push
and
mov
fbld
loope
push
sbb
jnp
dec
cmp
call
arpl
sub
ds
add
repnz
inc
fnstcw
sub
jl
sub
rcrb
sub
cmp
pushl
stos
adc
rcrb
and
push
std
xor
das
and
les
ljmp
cwtl
pop
inc
leave
popf
rcll
scas
mov
push
mov
lods
ss
scas
dec
ljmp
int
les
mov
xor
adc
mov
repz
xchg
push
xchg
mov
repz
dec
sub
inc
cmpsb
inc
or
mov
or
je
sbb
call
cmp
mov
jecxz
test
cld
mov
scas
push
pop
add
add
mov
call
xor
stos
add
lock
dec
shl
jp
arpl
and
jle
cld
iret
add
pop
icebp
inc
or
sahf
das
je
cmp
cmpsb
push
xor
push
test
out
xor
sbb
add
test
ja
push
cwtl
xchg
ret
scas
aam
pop
sbb
hlt
lahf
push
je
xorl
jmp
adc
cmc
outsl
pop
test
jmp
inc
sar
pushf
fiadds
fwait
aas
jo
mov
call
adc
sub
jmp
dec
cmpsb
inc
cmpsl
scas
outsl
add
pop
in
inc
ret
sbb
in
mov
mov
push
lods
iret
daa
mov
inc
sbb
sbb
fwait
repz
xor
test
sahf
mov
adc
scas
movb
jo
ja
fsubrl
xchg
test
mov
lcall
aaa
test
cwtl
jl
mov
cmp
loop
sbb
pop
repz
sub
popa
test
adc
insl
xlat
push
sub
lds
aas
mov
iret
dec
jecxz
sub
aas
sbb
lock
cmpsb
jno
clc
adc
scas
xchg
outsb
jbe
out
in
sub
ljmp
fsubl
lcall
or
lods
dec
cmpsb
fs
jl
hlt
inc
cld
sarl
mov
mov
dec
fucom
inc
addl
mov
lret
sbb
cmpsl
aas
push
sub
es
jbe
repz
cmp
test
cwtl
cld
shll
xor
pop
pop
jne
xor
push
lcall
sub
ljmp
dec
xchg
neg
mov
adc
push
or
insl
xor
cli
ret
xchg
and
mov
push
loop
enter
dec
insb
aam
cmp
je
aas
loope
mov
jl
add
aaa
inc
and
add
and
insb
int
loopne
les
push
jmp
insb
test
pushf
call
adc
mov
mov
iret
push
jmp
pop
pop
movsb
sbb
pop
mov
sbb
jo
ja
mov
push
outsb
rol
add
xchg
dec
sub
das
lret
mov
or
out
fstl
jg
cmp
movsb
cmpsb
shl
mov
adc
jns
fwait
cmpsb
fcmove
mov
mov
fsubrl
jb
mov
icebp
popa
sub
incb
les
dec
outsl
cs
pop
mov
jge
push
lds
and
inc
lret
jg
decl
cmc
xchg
in
test
jg
clc
fwait
or
mov
mov
js
aas
jle
pop
mov
jbe
imul
xchg
and
push
lock
stos
sub
sbb
shll
mov
fildll
loope
cmp
pop
lahf
icebp
outsl
ret
add
mov
push
js
push
cld
movl
mov
loope
pop
aad
clc
arpl
push
push
loopne
cmpsb
mov
notl
fsubp
sbb
test
mov
in
mov
xorb
shll
movb
sub
rorl
sub
jl
push
call
push
lds
mov
jne
cld
mov
dec
jb
cmp
xor
jl
xchg
push
jbe
ljmp
jne
add
push
pop
andl
push
andl
mov
xor
jmp
xchg
pop
enter
cwtl
movsb
cmc
sub
in
push
cmc
orl
jecxz
loopne
mov
jae
insb
lret
aaa
ljmp
or
loopne
mov
cmp
push
sub
xchg
pop
mov
rorb
cmpsb
aas
and
scas
aam
aaa
imull
dec
push
js
loopne
in
movsl
lods
mov
hlt
xlat
inc
jp
fdivrp
xor
mov
add
daa
outsb
xchg
dec
adc
mov
fs
and
es
mov
pop
mov
push
jle
test
cmc
scas
rorl
push
mov
popa
push
inc
xchg
inc
and
cmp
subl
or
pop
imul
lds
loop
inc
push
imul
in
ja
mov
arpl
lods
cld
lock
push
fwait
jp
fnstenv
icebp
xchg
sbb
jmp
adc
cmpsb
pushf
and
mov
sbb
jbe
sbb
mov
mov
nop
les
rolb
sub
jae
sarl
push
sahf
or
xor
out
rclb
jno
and
push
add
xor
repnz
lds
test
jg
jmp
push
adc
ljmp
xor
mov
aad
jecxz
mov
pop
xchg
pushf
mov
sub
scas
mov
testl
sbb
das
ss
jl
mov
loopne
and
xchg
inc
jo
inc
or
xor
xchg
int
arpl
icebp
clc
cmpsl
call
xchg
clc
xchg
cmp
in
sub
cmpsb
inc
fstpl
scas
push
mov
jb
fildll
add
cmp
mov
sub
pop
cmp
mov
lret
pop
cmpsb
inc
mov
into
scas
es
pop
jge
rcrb
test
dec
nop
add
repz
lock
ss
mov
sarl
pop
sbbb
dec
add
mov
xchg
scas
icebp
lea
jo
les
repnz
dec
add
shlb
cmp
orl
cmp
sbb
push
mov
jg
sbb
loop
sbb
jmp
and
push
lret
ret
jbe
mov
shlb
loope
mov
xchg
mov
int3
stos
fsubrs
or
add
pop
dec
ds
and
ds
jge
ret
and
xorl
stos
cli
incb
les
add
in
cmc
pop
scas
add
addr16
xor
dec
add
lea
dec
jecxz
cmpsl
sub
and
aas
add
ljmp
sar
fcompl
imul
or
push
or
aaa
push
sbb
lea
mov
mov
ss
das
add
add
dec
icebp
push
scas
in
adc
les
cmp
insl
outsb
jmp
pop
add
stos
jnp
into
loope
mov
stc
cmp
test
lea
das
lock
outsl
xchg
loopew
pusha
loop
repz
fdivrl
rol
or
outsl
lock
out
dec
or
jle
push
mov
sbb
xor
loop
cmovl
push
sbb
inc
dec
sub
sbb
jge
int3
pop
ss
icebp
rorl
sub
jae
loopne
jmp
mov
lret
or
lock
xor
shl
lods
xchg
sbbl
mov
loop
rol
sbb
or
fwait
xchg
mov
stc
stc
pushf
push
sbb
and
frndint
sar
decl
daa
or
and
add
enter
loop
gs
push
scas
loop
lcall
loopne
cli
insb
pop
or
and
lret
sahf
sub
pop
xchg
test
and
stos
outsb
rcrl
mov
test
ss
xchg
pusha
inc
sarb
out
popa
jg
cmp
dec
gs
outsb
inc
mov
or
sub
ja
pop
jmp
cmp
sbb
test
imul
xor
xor
in
inc
icebp
adc
xchg
les
mov
mov
xchg
adc
pop
push
insl
mov
and
outsb
add
sub
mov
inc
in
mov
pop
fdiv
lods
and
je
pop
loopne
les
mov
xchg
mov
adcl
sbb
loop
mov
cmp
aas
sub
test
les
aas
aam
jbe
nop
or
mov
add
je
or
and
push
push
mov
cld
shl
enter
lock
mov
mov
pop
add
mov
cmp
dec
sbb
out
mov
push
call
mov
adc
icebp
daa
jo
loopne
sub
adcb
das
adc
test
aaa
dec
push
inc
mov
call
mov
dec
out
js
add
loop
lret
sub
xchg
mov
stc
ret
inc
nop
sbb
shll
test
sbb
or
sbb
xor
lret
sub
jg
clc
sbb
add
pop
lcall
xchg
ljmp
leave
test
ja
fnstenv
out
xchg
in
inc
jl
movsl
add
jle
and
jne
je
add
add
insb
pop
push
sahf
mov
mov
les
ds
leave
cmp
mov
pop
and
xchg
in
and
cld
out
stos
xor
mov
xor
mov
stos
mov
mov
push
mov
dec
js
outsl
adc
scas
inc
jge
test
stos
adc
lret
mov
inc
inc
test
clc
lahf
das
cmp
push
xchg
inc
lods
cmp
jnp
rclb
clc
mov
xchg
inc
jecxz
dec
out
jecxz
jecxz
jmp
loop
lahf
insb
pop
mov
mov
aam
pop
xchg
jp
fs
jg
and
xchg
addb
imul
clc
add
imul
test
loope
sub
jb
dec
jbe
arpl
sub
mov
xchg
jecxz
aas
cmp
sub
add
pop
cld
rcr
jno
stc
loopne
mov
dec
jecxz
push
add
sub
bound
mov
jmp
adc
aam
or
movsb
push
in
aas
jbe
mov
arpl
cld
and
push
scas
dec
mov
inc
lods
sub
sub
sub
push
cmpsb
cmc
mov
sahf
aas
mov
pop
in
add
addr16
add
jmp
dec
add
mov
sar
lods
mov
adcb
pop
imul
stc
xchg
mov
cmp
add
or
add
push
mov
mov
mov
add
cld
fcoms
mov
andl
jl
pop
jb
xlat
les
mov
inc
gs
sub
mov
xchg
or
out
or
scas
xor
scas
cmpsb
xor
imul
into
mov
xchg
stos
pop
mov
imul
add
loop
mov
clc
aaa
inc
dec
mov
add
call
aas
cmp
popa
scas
cltd
icebp
outsl
sub
jb
mov
jnp
jno
mov
ret
cmpsl
pop
loopne
sbb
popf
xchg
jno
movsb
dec
dec
jl
test
xchg
int
sbb
out
nop
jbe
push
xchg
aas
lods
cmp
pop
adc
jbe
les
xchg
add
iret
sub
fs
and
sbb
call
enter
test
pop
push
sahf
jecxz
lret
pushf
fistps
cwtl
repz
test
int3
fucomp
pop
stc
dec
jae
popf
mov
imul
test
cld
jo
stos
push
pop
scas
sbb
jl
js
or
lahf
insl
stos
das
repz
sub
ret
inc
repnz
call
mov
push
dec
les
jl
xorb
mov
lret
xchg
and
mov
xlat
cwtl
orl
inc
adc
xchg
sub
cwtl
aad
add
data16
loope
jmp
ss
sub
jbe
xor
push
push
lock
call
negb
outsb
loop
hlt
stc
add
je
cwtl
mov
mov
lahf
and
pop
nop
sub
sarb
push
arpl
pop
add
js
and
popa
jg
mov
sub
xchg
push
aad
ret
dec
lods
cmpsl
cmp
pusha
test
test
push
or
push
push
push
lock
shl
adc
xchg
cmp
sarb
test
mov
in
mov
clc
in
xchg
jg
jno
cmc
cs
dec
das
cmpsb
dec
push
nop
repnz
std
mov
test
rcl
mov
loop
jecxz
outsl
call
push
rolb
push
cmpsb
ja
jo
aad
jg
mov
cmpsb
aas
movsw
popa
adc
cld
xchg
sahf
sbb
iret
mov
lods
test
add
push
jp
push
es
fst
push
xchg
test
out
sbb
sub
jle
add
push
jp
cs
popf
in
mov
mov
incl
aas
mov
ret
js
lods
in
add
dec
sbb
test
pop
repnz
mov
pop
and
sub
xor
mov
pop
push
mov
stc
loop
pusha
push
int
imul
mov
lods
mov
pop
fidivrl
repnz
dec
ret
out
and
cmp
xor
push
sbb
sarb
test
sub
test
stos
hlt
shrb
mov
scas
hlt
cmpsl
inc
or
mov
jmp
pop
push
div
out
jno
or
or
xchg
cli
inc
xlat
mov
fcmovnbe
in
mov
and
mov
dec
daa
sbb
ja
inc
dec
jge
sub
ljmp
aam
cmp
jp,pt
jp
aaa
pop
or
sub
jmp
in
push
fsubl
xor
jp,pt
jmp
push
cmpsl
adc
out
rorb
mov
cwtl
dec
sbb
adc
leave
mov
stos
popl
pop
sar
or
pop
inc
clc
push
rolb
or
scas
push
lea
jg
sub
repz
push
mov
mov
iret
js
fs
lock
jne
ss
cmp
mov
mov
insb
add
test
adc
clc
movsl
add
cld
add
arpl
xor
and
lods
test
sbb
daa
scas
sarb
out
xchg
inc
lret
cltd
mov
inc
addr16
add
aas
and
shrb
cmp
pop
mov
adc
cmp
xor
int
adc
push
and
mov
mov
mov
inc
cmc
mov
repz
pop
test
xlat
clc
fimull
insl
enter
loop
push
jle
shlb
push
lock
fimull
inc
jbe
jnp
out
orb
dec
inc
mov
xchg
lock
cmp
lock
lret
xor
aam
xor
scas
fbstp
jle
mov
fstps
movsb
fs
int
test
cmp
push
push
cmp
das
lock
sub
imul
outsb
fsubrs
lods
repz
mov
fidivs
xchg
jle
add
loop
sub
cmp
inc
jp
pushl
cmp
xor
fbstp
jp
movsl
stos
sbb
mov
loopne
pop
push
jle
lahf
pop
stc
xor
push
iret
jl
mov
push
cmpsb
jno
add
test
arpl
xchg
inc
ret
pushl
leave
lods
xor
lcall
imul
sbb
inc
repnz
and
pmaddwd
sbb
imul
inc
add
lods
mov
lea
sbb
and
xchg
icebp
xor
shrl
mov
fildll
jo
mov
mov
stos
cmp
jp
pop
mov
xor
pop
pop
pusha
push
ret
aas
in
test
out
aaa
pop
cmpsb
lods
mov
rolb
test
jno
ficoml
mov
stos
inc
jg
sbb
dec
sbb
jp
divl
loop
inc
mov
or
clc
sar
negb
cld
je
cmp
fdivrs
movsl
lret
push
faddl
mov
loop
mov
subb
jg
cmc
add
xchg
jg
mov
testl
mov
xor
jg
mov
iret
pop
out
and
mov
sbb
inc
sbb
jo
pop
pop
push
adc
mov
xchg
aam
lds
insb
fucomi
xchg
testl
clc
pop
lock
lods
mov
jecxz
mov
cwtl
cmp
int
push
jecxz
cli
jecxz
adc
stos
push
mov
mov
rcrb
cmpb
les
lret
out
cltd
and
jno
jnp
pop
clc
loopw
js
sbb
pop
push
loopne
or
outsl
les
push
xchg
mov
lds
addl
pop
cmc
mov
popf
dec
cld
cli
inc
mov
shlb
sbb
jae
fst
or
push
jle
sbb
loop
push
push
sbb
std
inc
jne
add
jp
out
into
dec
mov
mov
push
jecxz
pop
orb
push
push
dec
add
add
sarl
inc
movsl
dec
shrl
xor
sub
push
mov
les
aam
dec
shlb
pop
push
outsl
jecxz
add
jbe
roll
ret
cmp
fwait
mov
in
dec
xchg
fildl
mov
loope
fmull
mov
push
jecxz
jecxz
sbb
int3
fstps
sbb
push
lds
sarb
jecxz
push
jecxz
push
inc
je
scas
les
test
and
cmp
mov
push
sbb
xor
mov
in
jo
mov
out
sub
jg
in
mov
aas
loop
int
cmp
loopne
jne
xor
in
sti
insl
lea
add
mov
loop
dec
lar
inc
shl
je
mov
lock
aaa
sub
test
mov
test
xchg
mov
divl
stos
jnp
shrb
xchg
pop
dec
jbe
push
mov
pxor
sub
mov
cmp
inc
jecxz
or
sbb
mov
fildll
scas
cld
mov
popl
iret
cmp
xorb
sbb
and
ja
fstp
dec
clc
stc
jg
mov
dec
cmp
adc
pusha
add
pop
mov
add
cmp
hlt
scas
rorb
enter
sbb
mov
or
in
and
scas
jge
fprem
mov
xchg
cmpsb
pop
cwtl
iret
adc
jmp
mov
cld
ds
outsl
pop
push
adc
loop
cmpb
adc
jl
jno
mov
dec
cmc
lret
lret
adcl
inc
incl
pusha
jle
pusha
xchg
mov
cltd
test
push
jnp
dec
test
fsubp
fildll
sbb
iret
mov
js
xchg
mov
mov
cmpsb
xor
pop
jo
mov
dec
in
ret
cmp
stos
dec
mov
fwait
mov
insl
movsb
mov
and
sbb
add
icebp
add
pop
adc
test
inc
shrb
pop
pusha
jno
dec
aas
std
pop
mov
sbb
push
ja
loope
cld
pop
ds
adc
mov
loop
mov
cmpsb
pop
les
pop
cltd
push
add
sbb
cld
fcoml
icebp
mov
add
mov
cmp
push
pop
add
xchg
adc
inc
cmc
mov
scas
imul
pop
negl
pop
xchg
mov
mov
pop
mov
movsl
cmp
sub
repz
adc
les
jbe
or
movsb
pop
pop
enter
pop
or
xchg
mov
ret
ds
sub
sbb
pop
loop
mov
pusha
inc
sbb
adcb
pop
jo
pop
add
adc
daa
fstpt
jle
cld
les
jp
loope
mov
mov
pop
stc
or
or
pop
cltd
call
push
pop
sbb
mul
pusha
loop
insl
dec
xchg
out
add
sub
mov
push
shll
xor
insb
and
jmp
aas
inc
cli
xchg
addr16
or
push
cmp
add
xor
sbb
and
cmp
and
aaa
or
xor
nop
test
fstpt
jge
or
dec
or
daa
inc
mov
stc
dec
or
pop
inc
rclb
sub
dec
test
fdivs
mov
dec
pop
xlat
pop
loop
cmpsb
ror
adc
cld
mov
sbb
movsl
call
pop
dec
clc
sbb
adc
mov
scas
call
mov
adc
hlt
fimuls
sub
add
mov
call
push
das
push
cmp
push
shlb
les
les
xor
les
ja
cmp
loop
pop
push
cmp
rol
test
xchg
add
and
xor
push
push
xchg
mov
adc
dec
lahf
add
dec
xchg
mov
cmp
mov
mov
pusha
je
mov
pop
xchg
mov
xchg
loop
repnz
lock
push
gs
jg
lcall
pushf
ret
loopne
push
clc
sbb
mov
add
pop
in
adc
sbb
jbe
xchg
inc
dec
loop
jg
lods
cmc
ret
popf
imul
clc
dec
test
push
out
cmp
lahf
mov
shl
les
std
dec
ret
fildll
push
sarl
dec
pop
mov
push
lcall
or
in
fsubr
cmc
xchg
jl
lods
sbb
imul
ja
ds
cmp
sbb
stos
loop
pop
cmp
fwait
lock
push
push
pop
add
js
xchg
or
add
sub
stos
repz
dec
push
outsb
add
add
jno
mov
outsl
or
aaa
inc
int3
cmpsl
push
push
inc
dec
jb
test
dec
std
fscale
test
push
cmp
iret
or
stc
sbb
ret
movsb
push
in
icebp
pop
test
ret
jmp
rolb
fmuls
das
loopne
inc
jb
loop
les
pop
jbe
add
inc
xchg
mov
clc
dec
cld
jns
mov
aam
orb
out
xchg
mov
mov
mov
sbb
out
pop
push
mov
cmp
mov
pop
subl
and
stos
pop
push
lahf
and
jecxz
bound
xchg
ss
jbe
enter
lret
push
loop
mov
pop
push
pushf
mov
adc
jl
jecxz
push
loopne
les
imul
popa
ds
jbe
orl
loop
mov
push
out
cmp
mov
inc
jnp
in
sub
adc
fcmovne
sbb
or
cs
shrb
xchg
in
aaa
stc
push
es
aas
jmp
pop
clc
jecxz
jae
cmp
mov
cmp
popa
das
out
mov
adc
jo
gs
adc
or
xor
jle
xor
dec
jl
into
pushf
enter
shl
dec
stc
or
aaa
je
sbb
js
or
or
fs
pop
not
cld
pop
js
mov
aas
mov
dec
jecxz
sbb
cld
jge
jo
rcrl
jmp
pop
cltd
sub
in
jmp
out
mov
neg
enter
push
adc
mov
js
call
in
xchg
mov
cmp
mov
rcrb
inc
js
pop
ljmp
in
sbb
test
lcall
mov
aam
pop
stos
mov
cld
and
jg
jg
lahf
ljmp
xchg
pop
mov
out
mov
mov
push
push
push
cmp
les
mov
das
push
insb
ret
add
out
ja
int
loop
aaa
mov
sub
out
add
mov
rcrl
mov
xchg
repz
in
mov
mov
es
dec
sbb
add
xor
mov
insb
pushl
ret
in
sub
mov
jg
pop
sub
sub
xor
in
sub
pop
das
lock
ret
jmp
loop
and
lods
orl
les
clc
and
fbstp
pop
imul
add
add
xchg
inc
lahf
lds
in
or
pop
test
fsubl
addr16
orb
out
popa
andb
push
jecxz
test
clc
iret
push
into
outsl
mov
xchg
mov
cmp
push
fsubs
insb
test
push
dec
into
into
sub
movsl
dec
cwtl
sub
dec
mov
dec
sbb
mov
xchg
and
jae
lcall
add
jle
mov
fidivrl
sahf
ja
mov
add
lock
pop
lret
mov
rcll
lds
dec
out
mov
aad
cmpsl
rcrb
lret
outsb
or
icebp
mov
push
push
mov
mov
icebp
aad
sbb
xor
cli
add
or
dec
lahf
xor
push
enter
push
out
hlt
sub
cmp
jne
mov
popf
xor
dec
sbb
stos
xchg
or
cmpsb
cwtl
add
lret
add
icebp
cmp
cld
jbe
in
or
lret
inc
imul
adc
ja
mov
fdivp
shll
mov
mov
loope
lock
xchg
scas
movsl
enter
clc
loope
cltd
test
insb
scas
jb
inc
xor
mov
add
fstl
jge
mov
cmp
inc
ds
push
xchg
lcall
lret
lcall
mov
adc
sbb
add
mov
ljmp
lret
js
cmpsb
outsb
sbb
ljmp
pop
push
or
mov
insb
roll
jmp
aas
sbb
fmulp
hlt
cltd
sbb
xchg
mov
pop
ljmp
sbb
jmp
fbstp
stos
jmp
sbb
push
or
cmp
add
lods
stos
add
sbbb
sub
sysenter
ja
jne
iret
pop
sbb
xchg
adc
mov
shll
jb
ds
repz
xchg
pushf
movsb
fnstsw
out
stc
aas
add
repnz
cmp
cmpsl
or
xchg
pop
jns
mov
jb
mov
dec
pop
cld
add
push
or
stos
cmc
mov
cld
stos
sbb
movsb
aaa
cli
jmp
gs
scas
test
xchg
mov
sbb
add
cmp
jno
cmpsb
inc
jl
adc
pushf
in
outsl
mov
aam
scas
loopne
push
add
imul
icebp
imul
cmp
jo
lods
mov
pop
loopne
mov
adcl
stos
loopne
inc
add
pop
and
add
adc
test
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
xor
inc
mov
adc
inc
js
in
jmp
inc
jne
jb
outsb
je
push
fs
adc
push
rcrb
push
sbb
jo
insb
insb
in
mov
fldt
adc
popa
imul
addr16
bound
arpl
push
push
jb
gs
orl
je
inc
jns
push
outsl
fs
push
push
outsb
adc
js
inc
bound
mov
push
jo
outsl
outsb
lret
xor
or
dec
inc
js
inc
outsb
jbe
cmp
clc
insl
aam
insl
in
je
sbb
inc
push
jae
dec
test
push
jne
jns
push
data16
mov
and
inc
outsl
jne
xchg
push
or
loopne
or
mov
fs
mov
and
arpl
sbb
pop
sti
push
jns
pusha
insl
es
jae
adc
add
je
jo
outsb
into
outsb
inc
gs
mov
xorl
data16
aam
sbb
add
jbe
popa
mov
and
adc
out
push
dec
popa
insl
pop
and
das
data16
dec
jo
scas
push
jecxz
xor
and
inc
push
sub
outsb
xorl
push
lahf
mov
push
outsb
push
out
rorl
out
push
gs
gs
cmp
out
xor
loopne
pop
ss
mov
lods
loop
cld
aam
imul
mov
pop
jns
in
insb
in
cmp
and
jbe
fsubrs
into
js
adc
loop
cmp
data16
mov
push
aaa
cwtl
rcrb
sbb
and
add
add
lock
repnz
sbb
rcll
js
enter
pop
xor
or
jbe
or
sbb
mov
xchg
fwait
add
xchg
adcb
dec
xlat
cmpsb
mov
js
sbb
test
jo
sbb
idiv
scas
sbb
fldcw
lds
test
dec
adc
push
insb
cwtl
xchg
push
cs
js
scas
ja
xor
jnp
dec
add
and
adc
ret
negl
dec
pop
dec
sbb
jb,pn
inc
popa
int
pushf
fmull
push
inc
jae
repz
fdivl
push
xlat
orb
jbe
jle
inc
push
push
pop
xchg
or
dec
and
sub
fisubs
aas
adc
dec
mov
repz
rorl
push
fwait
scas
dec
enter
outsb
jo
xor
xchg
inc
mov
xor
or
lcall
add
sub
incl
add
add
add
add
inc
add
inc
xchg
push
pop
add
adc
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
sub
dec
add
pusha
inc
