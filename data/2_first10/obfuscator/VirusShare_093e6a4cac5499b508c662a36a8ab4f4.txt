in
call
in
add
cmp
sub
imul
sub
add
push
icebp
add
add
add
divl
in
mov
sarl
rolb
adc
in
mov
cld
pop
add
push
imul
sub
cmp
add
mov
scas
jge
cmp
add
mov
cmp
imul
dec
fucomi
insl
sti
adc
shrb
pop
mov
and
aaa
outsl
ljmp
add
imul
add
mov
pop
or
outsl
in
mov
or
sub
cmp
sub
add
js
sbb
shl
mov
insl
das
enter
mov
popa
adc
mov
fildll
adc
add
lret
mul
mov
sbb
sub
add
rcrb
lods
insl
sbb
dec
stc
pop
sbb
add
add
xchg
insl
fistl
nop
clc
sub
sbb
pop
lods
fisttpll
pop
and
add
int
fbstp
rorb
adc
mov
mov
outsl
fwait
add
add
mov
testb
fimuls
mov
ja
mov
mov
adc
or
mov
sub
cmp
pop
jae
and
ret
ret
mov
test
je
fldt
push
test
sbb
cmp
in
lret
mov
xchg
negb
notb
lcall
mov
mov
cmp
mov
sbb
mov
add
paddusw
mov
rclb
adc
mov
sar
ds
bound
sbb
sbb
pushf
movb
pop
sub
mov
mov
add
mov
outsb
sbb
mov
scas
mov
sub
or
fdivl
sub
insl
add
shrb
jnp
sbb
and
mov
push
rcll
jae
out
xchg
pop
cld
test
or
in
mov
aaa
pop
cmpsb
call
cli
or
sbb
cmp
dec
sbb
scas
sub
xchg
xchg
mov
sbb
loope
out
push
push
sbb
mov
cmp
outsb
mov
add
arpl
jne
lock
test
adc
sub
add
mov
lret
mov
in
pop
add
mov
into
pop
adc
test
movsl
mov
xor
mov
pop
mov
imul
or
push
xor
push
fcomp
outsb
add
mov
divb
int3
std
jb
adc
sbb
mov
mov
sbb
sub
ret
cltd
or
add
lock
shr
ljmp
sub
and
pop
or
push
mov
psubb
shl
rcrb
outsb
lea
mov
in
int
cmp
insb
or
ds
and
out
add
fs
cmp
push
or
sahf
mov
mov
push
dec
cmc
or
inc
jmp
or
push
jo
mov
sbb
mov
or
aad
fwait
lcall
mov
push
enter
push
cld
cmp
pop
sahf
fidivl
bndldx
leave
cmp
lcall
and
clc
cs
mov
lock
imul
push
dec
cmp
or
mov
push
jmp
push
mov
or
xchg
sbb
into
jge
mov
cmp
pop
xor
add
inc
clc
lea
sbb
or
sbb
pop
pop
xchg
fnstsw
ret
sbb
sub
pop
mov
scas
push
arpl
sbb
and
lahf
icebp
rclb
int3
rolb
dec
ret
fsubrl
inc
stos
lods
jecxz
icebp
adc
jge
pop
xor
pop
push
shl
cli
push
mov
ret
add
or
cld
and
and
adc
stos
cld
into
in
jb
dec
mov
add
mov
call
in
dec
push
sub
scas
xchg
mov
xor
pushf
sub
add
mov
mov
sbb
popf
or
or
adc
ds
sbb
inc
fistpl
push
rcrl
sbb
imul
and
insl
imul
roll
sbb
mov
dec
mov
xchg
xlat
sbb
sbb
shll
pop
jno
or
or
jmp
adc
sti
sbb
ss
imul
mov
mov
push
mov
add
jecxz
in
into
icebp
sbb
jne
loopne
pop
ret
add
push
adcl
xor
int
pop
scas
mov
push
dec
push
cmpsb
popl
or
sbb
jp
insl
aaa
adc
arpl
mov
jo
repnz
xchg
sbb
dec
and
mov
es
pop
pusha
test
adc
imulb
xlat
sbb
pop
in
adc
add
adc
cmpsb
addb
int
jbe
outsb
test
pop
add
call
stos
xor
dec
aam
mov
arpl
cmp
sbb
sbb
mov
mov
mov
mov
pop
mov
add
cs
mov
push
ficompl
add
pop
addr16
pop
mov
loopne
psrld
subl
mov
mov
in
adc
dec
pop
loope
subl
mov
pop
shll
or
adc
adc
xchg
mov
cli
adc
cld
push
repz
push
mov
push
inc
arpl
popa
cmp
sub
adc
mov
push
shll
mov
aas
jge
jno
and
mov
test
sbb
out
xorl
ficoms
add
repz
repnz
mov
out
add
or
and
lcall
cmp
cmp
lods
push
stc
data16
sbb
pop
jno
fimuls
into
cmp
mov
cmp
lar
mov
push
lcall
adc
inc
mov
movsb
cmp
cmp
mov
loopne
ss
add
cmp
jne
jo
push
test
push
jbe
insl
cmp
adc
push
push
push
push
imul
lock
mov
mov
mov
pop
jnp
push
add
adc
ljmp
mov
and
loope
call
pop
or
or
data16
mov
sbb
pop
xor
mov
adc
jl
add
push
push
imul
repnz
gs
call
and
ja
insl
sarl
aaa
fstpt
jp
push
mov
shll
or
adc
mov
mov
hlt
mov
out
sbb
add
imul
push
sti
ret
clc
sub
stc
out
sub
mov
xor
jae
mov
push
mov
lock
jmp
lea
test
fnstsw
icebp
pop
jo
mov
xor
cwtl
pop
add
mov
stc
sbb
lods
or
jnp
sbb
sbb
adc
adc
shlb
push
push
outsl
jo
adc
dec
ffreep
ret
sbb
add
fcmovnu
mov
mov
xchg
cmp
and
cmp
jmp
xchg
cmp
inc
test
mov
push
jb
pusha
roll
icebp
test
add
jnp
cmp
or
jnp
fstpt
test
jl
push
mov
or
pop
sbb
pop
seto
cmp
pop
xor
dec
dec
inc
hlt
push
shll
mov
lcall
or
mov
paddd
dec
or
aad
xchg
jns
ffree
sub
fdivrs
xchg
stc
or
and
fnstsw
clc
xor
loopne
dec
rclb
ss
add
cmp
or
cmp
or
mov
inc
mov
call
in
arpl
dec
sbb
ret
jg
lock
push
enter
out
xchg
sbb
adc
adc
cmp
mov
pop
cmp
or
test
std
xacquire
add
lods
inc
sbb
pop
rcrb
insl
fsubs
bnd
xor
outsl
xor
ja
and
sbb
cmp
and
imul
sub
rclb
popa
stos
adc
jge
push
enter
test
push
jb
inc
loop
xor
xor
or
fcomps
cmp
push
pop
jl
sbb
adc
pop
fistpl
sub
jns
push
repz
mov
or
mov
dec
cmp
mov
loopne
adc
or
stc
std
fcomps
rolb
enter
mov
mov
jo
xchg
aad
add
pop
mov
sti
loop
add
cmp
iret
inc
imul
mov
dec
mov
mov
push
sbb
push
mov
cmpsb
pop
or
mov
lods
ficompl
sub
cmp
adc
xchg
scas
int3
daa
sub
or
orl
fildl
or
lret
mov
pushf
pushf
mov
mov
sbb
add
mov
or
pop
call
loope
jo
adc
clc
add
fimull
push
jae
int3
push
icebp
adc
push
clc
adc
xchg
popa
add
fdivrs
mov
xor
out
or
push
fimull
or
mov
sbb
or
add
push
mov
push
inc
std
add
or
cmp
and
mov
mov
bound
jo
in
mov
les
icebp
add
insl
mov
movsb
mov
shlb
les
mov
sahf
nop
add
sbb
mov
jle
into
pushw
call
mov
sub
pop
pop
in
aam
sub
adc
mov
or
aas
call
push
push
adc
or
inc
push
andl
push
ret
testb
sbb
mov
xchg
push
loopne
bound
inc
mov
sub
insb
pop
pop
lods
rcrl
pop
push
or
loopne
adc
add
push
cmp
dec
in
popf
cmp
add
shl
adc
sub
or
daa
js
xchg
jge
mov
and
or
in
iret
add
xchg
es
mov
fwait
mov
adc
adc
sti
or
cs
or
pcmpeqb
mov
xor
pop
gs
xchg
dec
dec
push
enter
mov
leave
stos
enter
jno
cltd
dec
cmp
fwait
sub
jo
sub
cmp
pop
stos
jg
mov
icebp
adc
pushf
push
insl
adc
push
xorl
rol
lret
lock
stc
and
inc
jae
push
xchg
or
inc
mov
ret
imul
pavgb
enter
xchg
js
cmp
cmp
push
cvtps2pd
leave
out
add
scas
rcr
cmp
add
dec
push
imul
dec
into
int3
in
or
push
xor
pop
loopne
sbb
in
sarl
cli
jle
shrb
push
inc
out
lcall
mov
or
inc
xchg
pop
mov
or
int
jl,pt
mov
insb
mov
push
shrl
push
inc
add
aas
adc
notb
cmp
into
fbld
pop
push
xor
ss
push
test
dec
sbb
mov
scas
jp
lret
pop
pop
push
cmp
sub
and
push
push
add
lret
das
jg
sbb
xchg
loop
pop
sbb
sbb
and
jb
mov
push
mov
dec
mov
negb
mov
data16
fs
jne
mov
sub
clc
or
sbb
push
xor
ljmp
xor
push
addb
jbe
cmp
mov
shrl
and
add
ret
pop
cltd
mov
or
dec
mov
pop
add
mov
or
mov
stos
jmp
cmc
add
cmp
popa
jg
icebp
pop
jae
loop
jmp
push
inc
dec
adc
mov
or
fiaddl
movsl
or
adc
jo
in
scas
push
adc
push
rcl
xor
clc
push
xor
xor
xor
ss
cli
push
pop
sbb
adc
add
push
and
and
testb
inc
sbb
adc
je
icebp
aaa
icebp
jmp
sbb
mov
push
fisubs
push
pop
into
sub
add
sbb
mov
push
sarb
mov
ret
inc
or
loopne
mov
in
xchg
arpl
test
in
cmp
je
push
dec
leave
filds
push
out
shlb
loopne
sub
test
or
loopne
scas
sbb
imul
jb
test
push
lods
test
add
sub
fistpl
xor
mov
cs
dec
pop
into
sbb
cmp
lret
mov
push
jns
icebp
loopne
lret
addr16
rorl
shrl
pop
movsl
jbe
hlt
cmpsb
sub
adc
add
and
xor
adc
sbb
xchg
or
inc
cltd
adc
mov
bound
dec
and
getsec
mov
lods
lods
push
push
repnz
add
fiadds
mov
movsl
sbb
loopne
js
sahf
add
cmpsl
pop
sbb
lret
push
mov
sbb
ffreep
add
mov
mov
leave
pop
and
adc
jnp
sub
sub
movsl
lret
mov
mov
cmp
adc
or
sbb
jnp
mov
pop
add
add
int
jb
jo
loope
clc
out
adc
fwait
dec
mov
add
aad
or
mov
gs
and
jmp
or
rcrb
push
jle
push
adc
push
roll
filds
or
cmpsl
out
int3
add
push
or
andb
push
cmp
cltd
push
push
xchg
or
je
mulb
push
mov
or
adc
loopne
adc
leave
pop
fwait
sbb
push
pop
jge
push
mov
mov
push
scas
or
into
xor
jl
xchg
add
cmp
cmp
pop
sbb
mov
xor
shll
outsb
out
sub
mov
xor
mov
xlat
rcrb
cmpsb
cmp
add
outsl
sub
cmp
fs
addr16
add
or
mov
jmp
push
pushf
aad
mov
clc
hlt
lret
mov
xlat
aam
aam
div
fldl
jns
dec
nop
inc
xchg
hlt
adcb
mov
xchg
jns
in
sbb
push
sub
icebp
sub
roll
leave
push
dec
pop
arpl
stc
cmp
loop
pop
adc
pop
dec
shrb
or
sub
mov
and
cmp
adc
mov
and
mov
fcmovnbe
mov
insl
loopne
addb
add
add
sbb
jns
sbb
mov
jge
lea
push
jnp
sbb
cltd
or
sub
insl
cmp
mov
mov
sbb
push
mov
add
enter
xchg
cmp
jae
adc
inc
lods
adc
shlb
out
mov
pop
leave
fimuls
loope
inc
cmpsl
and
fistl
mov
mov
and
insb
add
fwait
ljmp
aam
shl
mov
jnp
inc
out
jb
dec
mov
rol
fcomps
sti
imul
dec
or
pop
sbb
decb
sub
mov
bound
mov
add
xor
in
cmp
mov
lret
or
clc
rcrl
mov
inc
sbb
cmp
nop
cmp
and
add
push
ret
sub
sub
roll
loop
push
add
xor
shll
dec
orb
aam
add
adc
or
lock
sbb
call
or
pop
jae
adc
int
pop
xchg
icebp
jo
mov
xchg
dec
or
mov
cli
bound
gs
in
push
mov
sub
cwtl
jle
push
adc
lods
out
ret
add
xor
sub
jbe
lcall
stc
push
add
loopne
mov
jnp
dec
mov
inc
rorb
icebp
ret
sub
in
xchg
xor
ror
add
cmp
into
outsb
jp
addb
pop
cmpsb
pop
or
icebp
inc
sub
rorb
mov
push
jo
add
xor
xchg
jno
xchg
cs
adc
mov
ret
in
xor
inc
xchg
leave
notl
inc
push
imul
int
push
add
loope
cmp
je
pop
xchg
push
stos
icebp
add
jbe
adc
mov
push
in
cwtl
cmp
fdiv
dec
push
stos
orb
test
xor
test
scas
ds
adc
or
jge
imul
inc
mov
in
or
rolb
xor
adc
push
sarl
xor
mov
xchg
popf
push
outsb
test
xor
pop
adc
scas
ret
adc
lea
inc
pop
sub
cmp
ljmp
add
psrlw
xchg
push
stc
mov
outsl
shl
push
mov
or
sbb
jb
pusha
mov
inc
decb
stos
fstp
pushf
movsb
aad
insb
nop
ret
adc
push
ret
icebp
adc
dec
lahf
mov
into
mov
push
subl
adc
dec
pop
sbb
stos
mov
loopne
add
mov
cmpsl
mov
adc
jmp
andl
mov
fdivrs
cli
loopne
sub
inc
ljmp
iret
mov
push
mov
sbb
adc
pusha
pushf
add
pop
pop
inc
leave
repnz
xor
sub
repnz
inc
push
sbb
aaa
jne
pop
adc
pop
cmpsl
dec
sbb
stos
stos
insb
and
add
lahf
and
add
pop
outsb
in
inc
cmp
shrl
sbb
push
sti
mov
js
xor
jno
mov
jno
xor
cli
loope
lods
xor
push
pushf
sub
ja
xor
leave
add
push
sub
lock
push
pop
xchg
andb
mov
add
cltd
push
push
sub
fbstp
pop
call
aaa
push
cmp
rolb
call
adc
lods
stc
sbb
xor
sbb
daa
mov
jb
or
and
adc
sbb
mov
loope
adc
lock
jne
ljmp
xor
mov
sbb
mov
push
repz
push
push
invd
push
sub
decb
roll
test
shr
push
mov
adc
add
jo
into
mov
inc
clc
and
or
pop
mov
xor
and
cmp
dec
dec
std
pop
pop
sub
and
mov
rcll
shl
pusha
clc
xchg
pop
mov
lea
xchg
insb
dec
lods
inc
out
sarl
pop
sub
dec
sbb
movsl
roll
pusha
sbb
insl
inc
add
sub
lcall
jg
adc
shll
in
sbb
in
jne
ljmp
mov
mov
mov
sbb
xor
and
adc
mov
loope
push
or
push
gs
je
mov
aam
dec
and
mov
and
inc
cmp
sbb
sti
lock
push
sbbl
call
push
sbb
testb
stos
push
les
mov
inc
push
add
add
das
aad
sub
add
adc
pop
xor
rolb
cmp
adc
stc
leave
movsb
enter
push
fisubrl
fimull
stc
add
gs
sub
adc
ret
lret
push
dec
mov
mov
xchg
mov
mov
sahf
jne
jae
xchg
jle
into
test
sbb
push
push
or
sar
or
jmp
inc
or
lret
lret
pusha
out
fwait
shlb
pop
ret
test
mov
xor
cwtl
add
dec
loopne
popf
xlat
and
pop
mov
mov
dec
sbb
add
in
xor
and
out
xchg
sub
add
lods
in
xchg
iret
and
mov
roll
jecxz
inc
sub
rcl
aam
popf
xorb
jg
scas
xor
mov
mov
mov
cld
and
pop
xchg
or
sbb
scas
cmp
jmp
lret
in
shr
cmpsl
jnp
inc
and
sub
je
test
mov
sbb
pop
test
jl
aad
pop
push
ret
popf
push
ret
fs
das
mov
mov
nop
loop
adc
push
xchg
mov
add
add
mov
enter
mov
dec
inc
ds
nop
fnstenv
sub
pop
call
stos
aas
insl
sbb
js
enter
lods
and
push
cmp
cmp
push
pushf
shll
jnp
mov
sub
mov
sarl
jp
fldenv
jo
xor
dec
lcall
push
sub
cpuid
or
mov
push
iret
push
dec
pop
stos
sbb
pop
mov
dec
or
inc
mov
sub
fwait
addb
mov
les
push
jg
sbb
dec
mov
jmp
push
add
cmp
imul
fimull
cmpsl
jae
inc
push
add
adc
inc
movsl
cwtl
repnz
jb
sbb
pop
dec
inc
jae
push
or
cmp
imulb
cwtl
push
lret
adc
xchg
cmp
xor
push
add
rorb
popa
cs
push
dec
and
inc
adc
stos
inc
mov
sbb
leave
sahf
int3
adc
push
mov
push
push
push
mov
ss
jp
roll
jl
jg
test
addl
loope
or
inc
mov
popf
mov
pop
jmp
add
dec
and
pop
mov
subl
imul
sbb
sbb
push
sahf
inc
push
repnz
loope
jo
sbb
fcmovbe
setno
add
push
xor
inc
add
lds
sbb
les
mov
enter
sbb
xchg
test
mov
push
jmp
add
mov
adc
divb
cli
les
stos
adc
popf
mov
jl
push
xchg
sub
push
push
stos
add
push
push
mov
add
xchg
xor
xor
xchg
xchg
hlt
inc
jmp
cmp
push
add
mov
add
mov
in
xor
into
rcr
xlat
popf
icebp
aad
lcall
loope
mov
in
lods
leave
into
shlb
data16
decb
mov
adc
mov
enter
push
scas
push
fcoml
sub
std
push
sbb
cmp
jb
mov
mov
outsb
lods
ret
jo
mov
pop
add
inc
shrb
repz
test
pusha
or
mov
mov
divb
outsl
adc
inc
in
or
pop
mov
xor
popa
mov
iret
mov
dec
lock
fs
jmp
adc
mov
shrl
or
pop
pop
pop
pop
xchg
pusha
enter
dec
fnstenv
dec
xor
inc
jle
or
rorb
push
lahf
sub
add
add
fiaddl
xor
xchg
outsb
add
xor
ror
inc
mov
push
or
faddp
cmp
jae
inc
pop
and
jbe
mov
xchg
mov
int
pop
pop
dec
cmp
mov
push
stc
bound
add
adc
repnz
mov
test
mov
push
add
ljmp
cltd
jo
loopne
push
sub
stos
cmp
movsl
adc
js
aaa
lods
not
leave
loop
mov
dec
fmuls
out
imul
pop
push
roll
push
out
sbb
mov
cmp
jl
shll
dec
xor
addb
inc
scas
mov
sub
mov
xchg
and
insb
cmpsl
and
push
cs
sub
orl
push
loopne
imul
push
cmpsl
jo
pop
sub
jns
lahf
push
mov
or
bndstx
mov
pmaxsw
rcrb
in
xor
dec
cvtps2pi
out
mov
dec
and
lods
ret
es
xchg
aam
inc
xchg
in
sub
inc
mov
pop
jns
add
test
out
jmp
rorl
jno
jecxz
inc
jo
or
stos
dec
outsl
jb
mov
sbb
sbb
inc
loopne
lods
enter
fwait
cvtps2pd
xchg
push
sbb
and
rclb
or
addr16
cwtl
lock
sbb
rorl
rclb
dec
idivb
push
gs
or
xlat
or
push
mov
test
inc
mov
xor
pusha
adcb
test
sub
in
cmp
mov
fcoml
shrb
or
rolb
nop
mov
dec
mov
icebp
ret
xchg
rclb
pop
repz
xor
adc
push
push
testl
pop
shl
mov
cs
push
add
fisttpl
add
sub
dec
loope
adc
inc
mov
xor
add
cmpsb
insl
cmp
das
stc
dec
mov
lcall
loopne
adc
and
call
jnp
add
adc
fimuls
rcrb
adc
mov
jbe
addb
popf
push
shll
adc
call
or
add
or
add
sbb
adcl
divb
adc
jne
sbb
push
cmp
stc
sbb
pusha
fisubl
push
rcrl
call
or
enter
ret
mov
ret
sub
or
rclb
loop
xor
push
sbb
xchg
nop
or
iret
adcb
sub
shll
sbb
mov
inc
aam
push
or
sbb
jnp
pop
adc
ficompl
push
popa
shl
stos
add
xlat
xchg
lcall
inc
lods
xor
jmp
mov
movsl
inc
mov
push
loope
jo
mov
mov
inc
es
inc
aaa
push
je
fsubp
je
push
fcmovnu
adc
adc
out
cmp
jo
mov
or
add
ficompl
add
or
adc
lods
mov
jmp
stos
sub
and
lret
push
and
xchg
ror
inc
adc
cmpsb
or
push
or
pop
fcom
dec
adc
add
push
aad
test
pop
mov
rorb
lcall
inc
ret
and
into
fisttpl
jo
and
or
clc
mov
test
scas
mov
stos
sbb
out
inc
push
cmp
into
adc
xor
jno
push
and
ret
nop
push
ret
pop
or
cmp
inc
dec
ds
push
imul
dec
lods
js
pop
lods
subb
push
jno
inc
lock
cmp
jns
mov
stos
mov
sbb
and
sbb
enter
or
inc
arpl
add
adc
test
bound
mov
pop
test
sbb
mov
xchg
adc
push
shlb
das
jbe
or
add
adc
adc
sahf
rol
pop
cmpsb
xor
sti
inc
aaa
loopne
xor
cwtl
xlat
and
testl
sub
es
mov
test
sbb
pop
sarb
add
cmp
sub
push
stos
stc
add
and
in
rcrl
xchg
leave
sub
and
stos
int
mov
and
push
adc
mov
aad
xor
push
or
jmp
cs
movsb
ja
inc
xor
lds
into
push
adc
xlat
arpl
add
dec
mov
shll
push
orb
fs
add
pop
sub
movsb
sbb
int3
je
pop
inc
mov
push
rolb
mov
rcl
adc
pop
fucomip
add
out
or
lock
pop
sbb
mov
jo
push
jb
pop
sbb
adc
or
xor
subl
or
inc
adc
adc
add
mov
add
aad
cmp
cmp
adcb
push
ret
stos
mov
call
push
shrl
cmc
jo
mov
inc
mov
push
mov
push
inc
inc
add
or
or
sarl
shlb
sbb
mov
add
mov
lret
add
xchg
ret
mov
jo
pop
sub
cwtl
addr16
subb
sbb
xchg
or
pop
sub
divb
fisubrl
xorl
mov
fwait
sbb
inc
movsb
or
jl
mov
leave
insb
push
pop
or
rcl
xchg
sbb
imul
das
dec
dec
nop
lsl
mov
cwtl
fsubs
out
or
enter
sbb
hlt
repnz
add
lds
into
loopne
add
push
lods
loopne
cli
xchg
jae
aas
or
add
pop
nop
push
or
ret
loopne
shrl
mov
lock
push
jb
bound
std
popa
icebp
mov
mov
aaa
mov
mov
out
jp
xchg
push
dec
pusha
jne
sbb
lock
mov
pusha
add
xchg
and
mov
sub
addb
adcl
cmp
pop
jne
sbb
jb
adc
cltd
mov
shrl
lds
ljmp
mov
lds
sbb
stc
test
cld
ljmp
push
or
mov
push
insb
addr16
cld
push
iret
adc
inc
ret
sar
xchg
stos
shlb
or
jmp
xchg
sbb
inc
daa
lret
daa
hlt
adc
call
nop
mov
adc
mov
bnd
lret
call
or
mov
daa
xchg
inc
sub
ljmp
into
repnz
jecxz
sbb
push
or
jnp
add
repz
or
and
cmp
push
mov
mov
sub
aas
es
lds
add
sbbl
inc
xorl
cmpl
mov
or
mov
stos
pusha
sbb
out
scas
bound
enter
jo
ret
xchg
add
pop
enter
sbb
add
ret
push
sbb
add
adc
push
push
and
xor
push
test
sbb
or
test
mov
or
in
in
loope
push
sbb
push
test
cmp
and
stos
jnp
push
dec
xor
popa
sbb
inc
sbb
sub
loop
push
ljmp
outsb
lock
stc
or
push
adc
popa
xor
pushf
andl
mov
adc
xor
andb
lock
sarl
mov
rcrb
lods
mov
pusha
add
cmp
or
outsb
pop
push
xor
scas
push
rclb
mov
mov
or
and
and
fcoml
int
stos
lods
jp
inc
inc
loopne
lods
push
call
dec
ja
sbb
loopne
jp
inc
fimull
cmpsl
mov
adc
push
push
xor
sub
xchg
es
cmpsb
push
sbb
and
push
push
scas
mov
icebp
je
in
add
out
dec
pushf
js
and
mov
out
lret
ljmp
cmc
icebp
adc
rcl
sti
or
add
sti
rol
daa
lcall
dec
push
sub
jb
adc
hlt
sub
movsb
in
inc
sbb
add
bound
and
push
adc
ret
or
jo
cltd
push
inc
movsl
jne
mov
mov
cs
dec
or
pop
mov
sbb
rcrl
xor
adc
cli
push
int
sub
rcrb
push
mov
xchg
mov
fcmovne
mov
and
shrb
outsb
pop
in
gs
rorb
adc
push
lcall
inc
mov
js
pusha
xor
enter
stos
notb
add
or
test
mov
nop
jb
in
addl
pop
ss
dec
inc
mov
mov
addr16
xor
xchg
pushf
test
inc
or
xchg
call
mov
push
pop
test
cmp
rorb
xchg
cmp
inc
xchg
jb
ljmp
push
ret
sub
push
push
push
cmp
jb
imul
push
dec
cmc
ljmp
and
imul
mov
add
jmp
sahf
inc
ficoml
sbb
iret
lods
pop
test
xor
or
mov
xor
mov
sub
adc
adc
push
lock
sahf
jge
je
movsl
ja
adc
movsl
enter
test
rcll
into
push
push
int
outsb
sub
jae
jne
imul
sar
cmp
sbb
stos
daa
or
lds
loope
push
leave
arpl
adc
outsb
orb
fs
push
push
adc
dec
mov
dec
pop
jmp
and
sbb
loopne
loopne
sbb
not
xorl
pop
push
outsl
push
inc
lds
ret
push
pop
adc
adc
xor
dec
jnp
ret
in
sbb
roll
js
lcall
or
jg
push
mov
pop
jmp
cld
push
add
mov
push
das
ret
or
cmp
mov
sbb
push
cmpsl
pop
lock
cmp
sbb
sbb
pop
pop
push
cmp
mov
into
and
or
rorb
and
loope
inc
not
mov
push
aad
mov
addb
cmp
or
xlat
jo
add
xchg
mov
inc
mov
icebp
xor
mov
pop
dec
add
and
mov
adc
and
ljmp
rol
or
shll
lods
push
pushw
jne
or
push
or
xchg
adc
pop
mov
dec
dec
add
icebp
jo
inc
aas
cs
sbb
out
mov
lret
out
test
fisttpl
sbb
push
push
sub
cmp
roll
cwtl
push
lret
jge
mov
pop
mov
popa
push
ret
inc
adc
sub
sub
test
xchg
subb
loope
test
dec
aam
or
pop
jne
push
push
fcomip
cmpl
shlb
push
push
lcall
incb
xchg
add
or
or
sbb
xchg
rclb
test
fisubrl
push
inc
inc
jnp
dec
addb
push
pop
subl
pop
outsl
jl
xor
or
push
jo
decl
imul
int
mov
lods
icebp
add
pop
nop
push
mov
xchg
lret
mov
adc
add
cmp
pop
sub
shll
sub
stc
push
out
rcll
or
xlat
push
cmc
shrb
adc
push
adc
mov
jle
pop
leave
push
int3
outsb
arpl
sub
lds
das
add
add
xchg
xchg
test
clc
roll
pop
sub
out
inc
add
mov
cmp
testb
pop
pop
xchg
mov
cwtd
fmull
adc
or
and
or
call
loopne
pop
arpl
adc
or
repnz
lret
test
jb
xor
lock
and
mov
rcl
loope
push
enter
inc
jae
push
push
pop
mov
mov
pop
jnp
sbb
mov
mov
mov
js
and
and
push
test
test
sub
and
push
adc
xor
mov
pop
scas
or
push
and
xchg
inc
add
fisubrs
xorl
mov
xchg
jo
bnd
adc
or
xchg
aad
fxch
push
rcrb
ret
xchg
mov
xor
idivl
stos
pop
pushf
push
insb
adc
or
sbb
pop
cmpb
mov
call
mov
xor
test
rcll
push
dec
sub
push
ret
mov
enter
xor
sub
js
dec
push
xor
inc
xchg
mov
adc
sbbl
insb
lea
pop
push
mov
xchg
ret
inc
and
pop
popf
push
nop
inc
imul
jmp
mov
jecxz
xchg
rolb
js
jnp
xorl
mov
push
inc
addl
inc
jg
fs
adc
and
faddl
sbb
mov
xor
test
xchg
add
cli
ret
or
into
mov
xchg
mov
xchg
push
addb
pop
add
cmp
data16
and
xor
mov
push
jecxz
or
mov
sbb
jno
icebp
dec
stc
int
push
test
enter
andb
inc
mul
mov
xor
add
push
xchg
pop
nop
xchg
or
adc
leave
push
or
and
adc
mov
lds
test
pop
pop
popa
add
cmp
cmp
or
lock
push
leave
adc
push
inc
test
adcb
jb
add
js
add
inc
sub
mov
cmp
clc
push
jmp
cld
mov
pop
rclb
call
cmovl
and
or
enter
dec
popa
rorb
mov
mov
lock
mov
add
add
leave
loopne
test
adc
or
push
inc
ret
stos
leave
xlat
mov
inc
adc
cmp
dec
icebp
fs
xor
or
loop
pop
int
and
int3
cmp
xchg
incb
sbb
shl
sub
push
adc
or
and
arpl
push
aam
negb
orb
sub
mulb
push
cmpsl
cltd
fcomi
jl
or
shr
lcall
xchg
jnp
adc
adc
test
je
fs
rcl
lods
sbb
jecxz
insl
or
clc
loop
push
ja
imul
arpl
push
testb
test
adcl
cmp
or
sub
bound
push
mov
inc
lock
pop
sbb
sbb
xor
out
lahf
jmp
roll
adcb
or
mov
mov
unpckhps
mov
lcall
push
or
out
ret
sbb
sahf
push
stos
sbb
data16
pop
mov
cmpsl
popa
push
sbb
adc
test
jns
adc
stos
cli
idivl
push
push
mov
push
and
std
jmp
xchg
imul
icebp
pop
jmp
scas
push
push
adc
stos
test
mov
sbb
mov
mov
add
rcll
sub
data16
lods
test
rolb
insb
push
xor
lock
stc
push
pop
xchg
pop
inc
movl
leave
add
cmp
outsb
sbb
jne
inc
push
je
mov
shrb
rclb
test
ret
add
xor
xchg
lret
inc
adc
and
test
ret
xchg
push
clc
sahf
rcrb
lret
jge
adc
rorl
sbb
push
xor
imul
data16
mov
popf
ljmp
xchg
mov
repnz
test
xor
mov
sarl
push
sub
adc
lcall
add
mov
xchg
add
xor
mov
js
jne
adc
lods
pop
loope
push
mov
loopne
cmp
shrl
sub
imul
mov
adc
mov
hlt
lret
aad
cmp
pop
jnp
orl
adcb
cmp
mov
and
iret
cli
ror
and
xchg
jmp
popa
ss
nop
aam
pop
add
adc
or
and
ret
dec
push
xor
mov
out
add
push
loope
pop
sahf
push
adc
iret
sbb
fcomps
jp
mov
stos
push
mov
push
jne
adc
push
adc
rolb
pop
sbb
in
lods
add
mov
push
jmp
sbb
xlat
adc
xchg
xor
push
or
leave
das
push
movsb
adcb
bound
inc
js
inc
rolb
adc
add
or
mov
push
add
cli
rol
jns
lret
cmp
les
rorb
jno
mov
jl
repz
cltd
jmp
cmp
inc
sbb
test
adc
iret
das
xor
add
add
jg
pop
cmpsb
sbb
or
cmp
xor
push
adc
mov
test
inc
pop
pusha
aas
sbb
push
iret
pop
call
js
xor
or
or
sub
mov
cltd
pusha
incb
cmc
rolb
roll
adc
sahf
or
jmp
shlb
dec
inc
rolb
js
iret
and
hlt
out
jns
insb
xchg
mov
iret
adc
pop
mov
push
jbe
fsts
add
sub
pop
fldl
into
xor
stos
adc
popa
sub
addb
push
test
xchg
add
inc
jmp
push
mov
lret
cmp
test
int3
cs
addl
call
push
push
fisttpl
enter
stos
sarb
mov
pop
sbb
fstl
mov
sti
adc
push
pushf
sti
loopne
ja
pop
mov
adc
sbb
inc
mov
add
jl
xor
adc
jecxz
push
insl
bound
mov
push
add
stos
xchg
lock
inc
mov
rorl
lds
mov
push
mov
jae
or
sub
cmp
sub
in
shll
mov
test
ret
cwtl
lea
sbb
repnz
test
fisttpll
adc
dec
pop
add
cli
sbb
cmp
xchg
das
mov
pop
adc
imul
adc
frstor
pop
push
adc
cmp
mov
push
testb
or
xor
fs
sbb
sub
push
cmp
dec
xchg
sub
fucomi
stos
add
imulb
cmp
test
movsb
int3
stc
mov
push
dec
ss
scas
pop
mov
clc
pop
push
popf
pop
and
lret
cmp
mov
or
xor
xchg
mov
push
mov
or
xchg
fldenv
orb
adc
enter
ffree
mov
inc
cmc
leave
es
sbbb
divb
xchg
sbbl
mov
or
sbb
cmp
adc
xor
mov
ljmp
scas
pop
mov
dec
cwtl
sbb
push
fcomps
xchg
sbb
sbb
cmp
enter
or
xchg
cmp
lock
cld
or
je
ret
icebp
ret
push
sub
push
lret
mov
adc
inc
cmp
mov
shlb
lret
insl
js
xchg
adc
or
in
push
push
mov
mov
inc
sub
pop
or
xchg
repnz
cli
dec
adc
mov
cmpsl
bound
aaa
sbb
addb
test
js
ss
adc
shr
loopne
xor
jmp
mov
shlb
push
fists
sub
pop
outsl
pop
popa
movsl
cmpsl
push
sub
jns
cli
es
cmp
mov
add
sbb
sarl
mov
jb
testb
aad
mov
add
sbbb
xchg
mov
jecxz
cmp
xor
jmp
notl
push
sbb
dec
sbb
mov
movb
rorb
pop
sar
lock
dec
adc
sbb
add
add
and
fisttps
mov
call
and
sbb
sub
jecxz
adc
xor
add
je
inc
pusha
sbb
shll
cmp
addr16
mov
cmp
inc
inc
mov
add
das
sbb
pusha
xlat
jnp
add
mov
sbb
jle
inc
jae
pop
rorb
mov
add
ret
icebp
sbb
popa
xor
inc
or
into
aad
xchg
adc
andb
int
mov
fmuls
jp
lock
mov
rorb
loop
adc
or
ljmp
jb
cwtl
sbb
f2xm1
rcl
call
sbb
mov
pop
lock
push
xor
adc
xor
jbe
ds
mov
call
into
cmp
rorb
outsb
stc
scas
call
pop
dec
into
cwtl
push
loopne
add
sub
adc
inc
je
repnz
cmpsl
push
or
xor
mov
aas
or
xchg
fs
test
mov
enter
enter
adc
into
shrl
pop
int
push
xchg
push
mov
pop
adc
dec
hlt
test
or
push
jno
adc
lods
sbb
popa
subl
sbb
mov
sub
xchg
cld
rorl
int3
mov
cli
test
mov
subl
add
and
add
loop
push
outsl
pop
outsb
jb
inc
inc
rclb
mov
inc
in
adc
addb
pusha
add
xchg
out
push
xchg
popf
lock
mov
mov
push
scas
push
popa
push
out
movb
xchg
fcoms
dec
mov
ret
cltd
or
pop
mov
cmp
rorl
sbb
add
jp
repz
inc
lea
test
pushf
jmp
int
mov
jb
cmp
mov
jmp
pop
mov
in
mov
mov
push
adc
pop
jmp
mov
mov
or
mov
jo
shl
rolb
inc
mov
cmp
data16
add
movsb
test
pop
sbb
xchg
or
fadd
ja
inc
scas
test
dec
push
call
adc
orl
or
or
ljmp
pop
and
daa
dec
add
roll
cs
je
pop
je
dec
push
es
fcompl
push
cmpsb
shr
daa
loop
daa
mov
popf
orb
sbb
testb
push
popa
push
clc
fdivr
ror
push
dec
mov
inc
les
mov
out
rcrb
dec
jge
and
call
and
icebp
rcll
mov
mov
nop
push
jl
jmp
jb
sbb
shlb
loopne
outsl
movsl
push
jl
jecxz
xchg
push
cmp
cmpb
sbb
or
call
add
inc
pop
into
jbe
int
push
pop
inc
and
mov
add
dec
push
lahf
popa
ret
pop
add
mov
shl
sub
pop
or
test
ret
cmp
push
addl
mov
jmp
stos
pop
xor
xchg
jne
pop
xor
sbb
sahf
or
add
push
subb
sbb
shl
sahf
pop
mov
pusha
xchg
movlps
or
mov
test
cmp
push
pop
nop
movsl
addl
push
lds
add
push
call
es
adcl
adc
cmpsl
dec
pop
cmpsl
dec
cmpsl
cmpsb
sub
and
leave
scas
push
xchg
or
push
xor
sbb
movsl
hlt
popa
fisubl
cmpb
inc
ret
shr
scas
sbb
sub
or
popa
push
test
xor
dec
ljmp
inc
fstpl
xor
enter
add
and
cld
test
push
gs
sbb
push
jmp
dec
adc
cmp
int
add
test
sbb
mov
add
test
pop
test
inc
xor
push
insb
into
inc
stc
nop
push
push
std
jae,pt
lods
sbb
repnz
dec
push
push
cmp
push
out
xlat
or
cli
lret
adc
dec
add
int3
test
xor
clc
sub
mov
cmp
push
mov
call
push
andb
aad
lock
stos
push
push
out
add
inc
stos
inc
xchg
leave
push
sub
pop
inc
or
pop
lods
mov
adc
dec
out
inc
pop
bound
or
add
enter
lret
hlt
jo
frstor
xchg
and
or
rcll
xor
push
and
xor
push
or
dec
fsubrl
or
and
jecxz
or
fiaddl
dec
push
les
sbb
add
mov
add
data16
sub
mov
push
xor
and
les
push
pop
orb
roll
adc
rclb
sbb
mov
add
push
leave
je
aam
fs
cmpsl
xor
stos
adc
xor
dec
rcrl
pushf
xchg
cltd
rol
adc
je
pop
in
shlb
mov
mov
sbb
add
ficomps
add
sti
push
or
adc
lret
xor
fildll
xchg
jmp
push
aad
sbb
push
stos
adc
jns
in
cli
lock
insb
add
in
xor
cwtl
test
scas
xchg
add
push
mov
mov
jl
sbb
xor
or
stos
push
mov
jbe
push
xlat
inc
daa
sub
subb
cmpsb
test
adc
pop
push
test
pop
pop
xchg
and
cmp
add
add
xchg
push
mov
ret
xor
call
cmp
int3
xchg
mov
cs
sub
adc
xchg
rcrb
cmp
push
xor
out
sbb
add
add
xor
je
add
xchg
push
loopne
push
push
add
test
cltd
mov
add
shr
cmc
lods
sahf
jb
push
adc
icebp
addr16
inc
mov
jmp
sbb
push
sub
mov
loope
ljmp
sarl
inc
and
ret
push
sarb
pop
dec
aaa
pop
test
jb
popa
add
adc
rclb
std
int3
push
sub
leave
sbb
xor
imul
shl
ret
inc
lret
dec
ljmp
add
push
adc
pop
loope
add
push
sbb
orl
cmp
sbb
xchg
pop
push
add
jns
inc
jb
pop
mov
out
adc
mov
xchg
mov
adc
dec
or
add
cpuid
sub
out
dec
mov
leave
in
rcrb
or
push
xchg
push
addb
pop
push
rorb
push
inc
pop
fisubrl
adc
mov
adc
push
loop
jb
cmpsb
movd
mov
and
andb
icebp
xor
xchg
pop
push
sbb
paddusb
adc
js
jo
inc
and
call
cmp
xor
push
sbb
cmp
shlb
gs
mov
jp
testl
gs
dec
adc
mov
sbb
mov
mov
jl
call
push
js
mov
inc
add
subl
pop
jl
inc
test
repnz
cmp
mov
push
mov
jb
scas
adc
add
jb
aaa
sub
loopne
call
add
jge
leave
popa
ss
xor
xlat
xchg
cmp
in
inc
and
push
mov
jne
and
add
push
loope
cmp
data16
lods
or
testl
mov
jmp
ret
mov
rcrb
jg
test
mov
add
mov
xchg
ficompl
stos
into
xorb
lds
cmp
shll
outsb
push
cmp
sub
sub
push
push
sub
stos
push
repnz
adc
pop
pop
push
rcll
mov
xchg
filds
roll
enter
push
aam
jne
fdiv
jle
mov
adc
nop
sbb
insb
bound
cmpsb
or
les
xchg
insl
adc
test
test
push
ds
shl
loopne
das
subb
bnd
mov
jmp
rcrl
popa
and
aam
xchg
xor
std
jb
add
adc
call
mov
add
cmp
push
ret
xor
inc
cwtl
pop
mov
test
pop
pop
push
enter
push
loopne
xor
sbb
pop
or
jb
rcrl
clc
adc
rcll
dec
sub
mov
test
mov
mov
maxps
sbb
and
into
mov
stos
repz
movsb
push
lahf
adc
mov
call
sbb
int
fldt
cmp
fs
add
lret
or
test
push
mov
add
scas
inc
mov
lods
dec
add
dec
enter
hlt
cmp
add
inc
xor
push
into
cwtl
pop
jl
pop
jae
lcall
lods
pop
sbb
and
cwtl
leave
fildl
sbb
notb
roll
bound
pushf
and
push
xor
cltd
jmp
stos
int
jp
pop
das
popf
jb
ret
mov
add
jg
dec
call
push
cmp
roll
push
int
or
stos
sub
jp
hlt
sbb
xor
pop
xor
loop
and
testl
push
pop
xchg
adc
sbb
jae
enter
sbb
negb
jb
push
hlt
loopne
mov
stos
adcb
fcmovb
repz
add
sub
xchg
mov
xacquire
sti
sub
sub
inc
pop
push
or
pop
sbb
push
cs
pop
xchg
push
ret
popf
icebp
inc
sub
ficoml
cwtl
or
sub
dec
addb
jmp
pop
xchg
outsl
lcall
lcall
push
ss
aam
and
jle
repnz
cwtl
mov
mov
xor
sbb
jno
lret
push
nop
or
aaa
mov
mov
xor
sub
jbe
xor
mov
pushf
leave
add
fidivl
add
or
mov
adc
js
stos
add
pop
hlt
jb
or
addr16
sbbb
lahf
mov
cmp
and
xor
push
loopne
inc
aad
or
in
aad
mov
lahf
adc
inc
add
xchg
loop
mov
add
ret
add
adc
les
fdivl
pop
stos
pop
dec
pop
dec
mov
lods
ret
cmp
scas
rolb
out
push
lods
enter
dec
bound
mov
add
cli
cmp
shl
dec
or
popf
push
aad
add
pop
adc
sbb
add
and
andb
cmpsl
ret
jne
mov
adc
mov
enter
pop
dec
cmpsl
mov
fdivrl
aad
icebp
testl
xchg
cltd
into
adc
test
sub
push
push
mov
mov
insl
adc
adcb
adc
and
cmp
dec
inc
pshufw
pusha
dec
js
loope
push
sbb
sbb
or
and
push
and
daa
push
and
jg
xchg
shrb
repnz
adc
jbe
pop
xor
scas
add
sbb
pusha
stos
or
in
inc
test
sbb
mov
sbb
loopne
cmc
add
sub
sti
inc
sbb
stos
xor
aaa
xlat
adc
mov
ja
rclb
lret
popl
inc
or
adc
lea
les
repz
test
in
loopne
or
loopne
pop
or
sub
nop
add
inc
cs
jno
mov
addr16
test
adc
xchg
sub
rcrl
lea
popf
stos
push
test
add
leave
aam
or
mov
mov
icebp
xor
or
jmp
andl
fwait
inc
mov
sbb
hlt
jae
ljmp
add
inc
cmp
lea
lret
mov
movsb
popa
or
jne
imul
icebp
add
mov
mov
pop
inc
sbb
lds
je
fsts
pop
jne
add
rcrl
pop
push
js
cmp
stos
push
movsl
sbb
dec
loopne
adc
mov
or
test
jle
shl
mov
pop
sbb
dec
aad
imul
cli
addr16
sub
shrl
cmpsb
inc
aad
mov
mov
push
cld
adc
pop
inc
and
aas
xor
movb
imul
push
out
ja
mov
pusha
and
push
aam
aad
scas
xchg
and
mov
loopne
jnp
imul
test
scas
add
xchg
pop
xor
push
js
pop
adc
xor
adc
push
jo
dec
bound
or
jo
add
rorl
xchg
lcall
xchg
sbb
xor
fidivrl
adc
loopne
jecxz
aas
loopne
addl
call
jb
subl
mov
mov
jne
inc
mov
adc
mov
and
scas
jo
pop
sarl
rol
jo
pop
lcall
and
mov
les
call
xchg
jmp
aad
mov
aam
daa
sbb
pop
add
ja
fbld
inc
pop
mov
call
rcrl
movlps
mov
pusha
adc
pushf
or
inc
jp
subb
add
jl
and
cmp
mov
cld
cli
imul
mov
rcrb
xchg
loop
loopne
neg
ljmp
scas
push
pusha
xor
sbb
jbe
icebp
cmp
mov
adc
mov
push
add
or
sub
fsubs
push
dec
iret
lret
lds
mov
dec
adc
hlt
loop
lea
jl
inc
in
fs
fdivp
push
or
mov
ret
jecxz
inc
cmp
rolb
xchg
aam
movl
cmp
pushf
adc
inc
and
mov
jp
cmc
cmp
jbe
cltd
xor
adc
testl
rorl
push
cmp
stos
stos
loope
clc
jl
test
mov
inc
cwtl
test
jmp
lock
mov
mov
sbb
mov
jge
adc
jmp
mov
push
xchg
push
sub
sub
and
mov
xor
popf
ljmp
jo
cmp
push
jg
daa
mov
or
rorb
or
pop
mov
or
sti
pop
or
xchg
call
enter
add
cmp
sub
mov
hlt
cmp
adc
ja
lret
pushf
loop
ror
mov
push
sbb
shll
jnp
sbb
add
cmp
dec
shl
or
cmp
or
out
enter
mov
lret
in
sbb
lret
inc
jnp
adc
test
mov
sarb
mov
sub
push
sbbl
xor
push
sub
adc
cmpsl
ds
push
sarb
stc
push
push
add
daa
inc
lds
mov
icebp
xor
sbb
lods
loopne
jno
imulb
sbb
enter
dec
rcll
ficoml
xchg
orb
cld
xor
sub
sub
cmp
sub
add
movl
mov
scas
cmp
dec
adc
rcrl
cwtl
adc
fldl
sbb
call
icebp
les
push
loope
std
and
imul
jo
pop
push
add
push
scas
mov
add
dec
adc
into
pop
jmp
add
bound
or
mov
and
rolb
jo
stc
cwtl
xor
andb
loopne
xor
and
sub
les
cmp
aad
adc
pop
sahf
sbb
jg
scas
ret
add
xchg
inc
lahf
xor
and
repz
xchg
jp
push
jns
pop
aam
add
movsl
rcll
popa
lret
sti
add
sbb
loopne
mov
in
adc
imul
inc
adc
push
xchg
cmp
lahf
je
and
inc
dec
repz
les
pop
add
pop
sbb
scas
subl
or
cmp
lret
adc
sub
sbb
inc
lods
sbb
in
push
xchg
ret
pop
les
ficompl
popa
mov
add
lcall
add
adc
push
pop
in
icebp
pop
cli
pop
shlb
pushf
das
xlat
sbb
rorb
aam
scas
adcl
xor
mov
cmp
adc
add
test
push
inc
stos
movsb
mov
add
enter
mov
push
push
outsl
xor
aad
pushf
sti
scas
idivb
dec
jl
sbb
sbb
negl
push
ret
sub
cmp
lahf
pop
inc
imul
mov
cmp
into
inc
pusha
test
push
push
cmp
and
push
dec
repz
test
rorl
mov
fsubp
push
popf
in
xor
and
xor
out
movsl
repnz
movsb
mov
mov
cmp
cmc
xor
roll
filds
mov
sub
push
hlt
mov
adc
mov
or
sbb
mov
sub
inc
repz
push
mov
mov
dec
loopne
ja
popa
and
bound
xor
inc
iret
pop
jb
cmp
jne
dec
adc
fnstenv
test
inc
or
mov
mov
mov
add
in
aam
stos
mov
loop
lods
leave
dec
loopne
cmp
insl
dec
rorl
in
or
loope
inc
mov
mov
sbb
pop
inc
aad
ja
cmp
pop
into
cmp
cmp
and
mov
dec
pusha
and
inc
bound
fiadds
stos
cs
or
push
cmpsb
mov
mov
lret
jg
add
add
jb
inc
adc
sbb
scas
cmp
and
subb
or
adc
pop
or
test
push
pop
mov
movsl
push
adc
mov
pop
xor
xor
test
add
adc
and
lcall
xor
or
stos
sub
xor
stc
or
cmp
stc
dec
sbb
stos
xchg
mov
or
pop
movsb
mov
lret
pop
xor
arpl
adc
cmp
fisttps
movsl
mov
loop
adc
mov
addr16
mov
push
out
push
outsl
test
lcall
adc
sti
sbb
and
repnz
sub
loopne
pop
inc
mov
shr
mov
enter
lea
int
cmc
testb
ss
mov
lret
aad
add
cmc
sbb
cmpsb
or
mov
sbb
and
push
dec
xor
or
xchg
bound
les
rol
arpl
jnp
fwait
ljmp
sbb
mov
or
mov
scas
push
loopne
je
adc
lods
gs
adc
add
pop
inc
sbb
movsl
jp
jmp
stc
or
popf
adcb
add
inc
mov
fsubrl
jge
jne
jb
cmp
lret
or
into
idivl
decb
bound
pop
mov
mov
cmp
insb
inc
add
push
fwait
clc
jmp
cmp
int
push
adc
push
enter
test
inc
lock
idivb
mov
mov
rcl
sbb
rcrb
xor
and
ljmp
rclb
xorb
ret
pop
inc
mov
sub
mov
ja
ds
in
push
jmp
push
in
insb
xor
add
aam
popa
mov
sub
daa
mov
scas
leave
jo
ss
shlb
dec
mov
add
sahf
movsb
mov
cmp
sub
aad
icebp
or
xchg
adc
xchg
push
outsb
mov
add
jb
iret
cmpsl
popa
rolb
add
scas
push
and
xor
add
shrb
js
sub
repz
add
mov
mov
ret
xchg
xchg
jg
cmpsb
mov
mull
lret
adc
or
sbb
ret
addr16
shlb
push
inc
mov
testl
sbb
xor
ret
adc
scas
push
movsl
hlt
stos
sbb
les
push
bound
sub
in
inc
sbbl
mov
pushf
jecxz
test
jnp
dec
sbb
push
into
and
jle
xor
pop
dec
push
pop
mov
adc
or
in
mov
mov
mov
mov
and
push
mov
xor
add
int3
sbb
js
xchg
sub
rclb
pop
mov
sbb
push
adc
icebp
pop
out
adc
push
out
icebp
ss
cmp
test
mov
loope
xchg
roll
andb
push
clc
or
in
and
lods
push
sbb
cmp
mov
lcall
andb
sub
int3
push
nop
or
push
mov
leave
faddl
and
lret
mov
fsubrs
push
push
or
shl
pop
push
and
jmp
mov
cmp
in
ret
dec
push
les
sbb
sbb
or
adc
add
add
popa
rcrb
les
vmread
and
lock
icebp
addl
cltd
and
mov
inc
add
popf
add
push
xor
cmc
sbb
jo
push
js
jb
push
ret
fdivs
xchg
lea
mov
add
push
adc
push
push
and
stos
push
xor
das
xor
rclb
add
outsl
push
test
jmp
scas
cmp
mov
push
push
pusha
push
stos
and
adc
xorb
divb
dec
xor
sub
pop
iret
mov
loope
mov
sbb
mov
lods
push
popa
lea
dec
mov
icebp
rcll
cmp
push
mov
adc
lret
adc
push
data16
mov
add
rcll
pusha
sbb
sub
xor
sbb
pushf
and
loopne
fisubl
fs
leave
add
scas
scas
mov
outsb
push
or
lret
and
repz
pop
inc
sub
loope
sbb
dec
push
icebp
add
cwtl
loopne
nop
sbb
mov
or
cmp
adc
les
and
popf
cmp
test
pop
nop
lock
stos
adc
mov
adc
clc
adcb
dec
xchg
xor
pusha
sbbb
inc
cmpsb
add
push
sub
jp
sbb
adc
dec
das
pop
testl
add
negl
jo
divb
xor
inc
push
and
sbb
cmp
mov
lock
adc
inc
pop
inc
pop
repnz
xchg
xor
mov
jmp
sbb
xchg
sbb
adc
xor
pop
adc
loope
test
push
jge
lahf
vaddsubps
or
arpl
jns
shl
lahf
mov
xor
sbb
mov
aam
mov
loope
sbb
stos
in
sahf
add
adc
cli
xor
scas
add
hlt
push
and
or
pop
mov
stos
and
vpshaq
push
leave
in
test
inc
cwtl
push
mov
or
mov
or
adc
mov
xor
jb
and
movsl
lods
xchg
mov
sub
sub
mov
adcb
jb
mov
test
pop
adc
adc
add
jo
add
jno
and
shl
outsb
test
jns
pop
inc
cmpsb
sbb
or
lea
call
jnp
sbb
mov
ljmp
mov
stc
and
push
orb
and
and
add
roll
outsl
pop
outsl
push
jge
insb
push
loop
rcrl
push
xchg
mov
adc
mov
and
in
sub
add
adc
xchg
push
or
add
lahf
js
test
add
inc
cwtl
push
cld
sbb
xor
inc
adc
xor
fwait
mov
sbbl
inc
movsb
out
test
pop
dec
decb
and
mov
adc
lock
subb
inc
leave
mov
ljmp
pop
adc
ffree
test
sbb
or
inc
rolb
lcall
mov
cmp
mov
mov
adc
jge
sbb
add
pop
or
movsb
shl
pop
pop
mov
sub
lea
xchg
int3
xchg
xor
mov
push
xor
lret
and
or
add
xor
cmpsl
jmp
test
lret
js
xchg
arpl
repz
addr16
sbb
test
int
loop
dec
jmp
subl
hlt
rcrb
adc
adc
or
jnp
in
dec
shlb
pop
and
js
and
inc
sub
fs
dec
pop
mov
orb
or
sub
inc
add
rolb
es
lret
and
mov
mov
lds
xor
mov
mov
pop
add
nop
push
ret
cmp
lock
mov
pop
pusha
push
idivl
inc
inc
ds
and
orl
stos
add
jno
inc
cmpb
and
sbb
mov
and
inc
insb
inc
scas
push
pusha
xor
adc
movsb
push
sub
cmp
mov
pop
addl
xor
mov
add
and
mov
pop
xor
sbb
cmp
push
sub
push
jo
add
sub
push
in
pop
xchg
sbb
sbb
sub
xor
negb
inc
fdivr
je
mov
add
push
push
add
push
or
adc
hlt
inc
push
mov
mov
pop
cmpsb
sti
ror
arpl
add
cmp
jb
add
rolb
xchg
ljmp
stc
sbb
xchg
or
sbb
imul
cli
stos
jbe
add
orl
lret
inc
mov
pushf
inc
hlt
and
addb
ret
out
push
or
in
adc
push
dec
cmp
mov
push
sbb
or
adc
add
push
inc
or
or
in
mov
add
daa
adc
adc
and
xor
sbb
mov
or
add
test
push
stos
enter
es
add
add
outsl
add
mov
jge
add
stc
mov
mov
push
cmp
rorb
lock
add
mov
pop
push
jae
adc
xchg
push
test
sbb
add
adc
inc
mov
push
rolb
or
push
xor
adc
push
shll
adc
icebp
push
jne
push
out
enter
mov
arpl
imul
in
jne
pop
push
lods
adc
mov
cmpsl
push
mov
push
nop
or
dec
push
cmpb
push
inc
lret
data16
fisubl
pop
nop
mov
and
dec
sbb
nop
leave
jnp
push
jmp
pop
add
ljmp
push
clc
mov
mov
daa
xorl
sbb
pusha
sub
push
push
push
popf
decb
push
push
sahf
sub
jo
daa
sub
adc
ret
out
mov
add
subb
add
xchg
lret
lss
add
es
mov
pushf
push
cmp
pop
sbb
rorl
mov
inc
push
cmp
pop
cmpsb
and
mov
jecxz
daa
ss
pop
rorl
idivb
add
push
int
jno
pop
jne
and
into
lods
mov
mov
out
addb
xor
adc
insb
rorb
jo
mov
rorb
jb
lock
adc
cmp
adc
stc
add
roll
sub
inc
into
and
das
cmp
jp
je
or
rorb
xchg
lcall
push
pop
clc
dec
dec
mov
jno
test
cli
leave
add
xor
ret
aad
cltd
or
inc
pop
xorl
push
xor
push
add
pop
push
hlt
add
lock
and
adc
dec
pop
cmpsb
mov
jge
pop
sbb
add
xchg
or
ja
inc
or
dec
jo
addl
mov
jmp
je
push
mov
or
mov
cmp
add
sub
inc
add
orb
lret
lahf
inc
outsb
hlt
cmp
add
cmp
xchg
shll
add
pop
ret
cmp
rclb
out
imul
popa
adc
popf
hlt
adc
or
mov
test
cmp
inc
jmp
pop
dec
adc
or
jg
adc
mov
push
pop
add
loope
daa
mov
or
roll
in
adc
push
jb
lods
imul
pusha
aad
lods
test
pop
push
cmp
add
push
enter
ficoml
in
lcall
leave
rcll
push
add
sbb
xchg
xchg
jl
cwtl
push
je
or
push
fildl
inc
and
es
xor
and
ret
adcl
adcb
aam
jne
jl
xchg
cltd
or
into
inc
outsl
mov
add
mov
push
scas
pop
xor
inc
call
jo
mov
inc
pop
mov
or
lods
cmp
push
sbb
mov
and
pop
scas
xorb
mov
out
jecxz
adc
xor
mov
ljmp
enter
pop
dec
push
out
push
jne
mov
add
cmp
inc
icebp
add
insl
enter
stos
and
adc
adc
loope
shlb
or
or
sub
sbb
or
test
loop
mov
movsl
int
loopne
xor
je
push
rclb
mov
or
fiadds
rcrl
loop
out
push
pop
loope
xorl
push
movsb
sub
sbb
repnz
adc
icebp
out
stos
cmp
adc
shll
push
push
int
fs
xchg
mov
inc
or
js
jmp
dec
jo
pop
jo
jge
aam
cs
rol
rcll
add
repnz
cwtl
pop
inc
imul
push
pushf
mov
into
adc
mov
stos
sub
popa
sbb
dec
jae
lret
leave
mov
lea
pop
adc
movsl
jne
mov
mov
xor
sbb
push
or
dec
cmp
inc
out
jge
or
xchg
add
lea
loopne
add
or
dec
inc
daa
stos
xor
and
inc
mov
pop
lods
xor
xor
xor
fistpll
mov
jae
ret
inc
sub
in
push
or
mov
shlb
jb
adc
dec
rcrb
subb
outsb
mov
push
pop
and
fwait
insb
outsl
mov
and
daa
push
ss
inc
and
mov
leave
mov
add
mov
xor
add
out
ret
adc
pop
mov
xor
repnz
dec
icebp
adc
cmpsl
or
roll
mov
mov
jne
mov
pushf
xchg
sub
rolb
mov
mov
or
imul
adc
loop
jo
test
jne
roll
cli
push
jge
jo
dec
out
add
in
push
fcoms
or
call
add
and
xchg
pushf
jge
adc
sarb
or
push
call
shlb
xchg
sbb
aam
ljmp
cltd
int3
mov
add
ror
ret
es
call
aam
adc
mov
adc
add
ljmp
push
jge
sub
mov
xor
adc
and
pop
and
rcrl
adc
gs
sbb
sbb
sbb
push
push
sbb
mov
in
cwtl
orb
add
or
jo
push
pop
adc
xorb
ret
adc
loopne
push
movsb
pushf
sub
or
int
sbb
cmp
cwtl
adc
xor
jns
aam
test
ds
sub
add
je
add
xchg
sub
aam
mov
movsb
dec
adc
and
add
add
mov
mov
xor
adc
divb
mov
aad
pop
lods
jmp
push
push
sbb
cmp
push
leave
sbbl
jo
push
dec
sbb
cld
mov
pop
les
push
mov
or
jl
imul
out
and
rclb
mov
inc
lock
adc
aaa
cmp
cs
ja
or
in
mov
insb
sbb
jbe
xor
sbb
mov
lds
les
push
outsb
clc
mov
sbb
jno
xorb
xchg
mov
mov
inc
push
mov
sbb
inc
and
subb
mov
in
jge
mov
rolb
movsb
loop
or
xchg
callw
loopne
add
pop
mov
lret
sbb
fwait
inc
and
inc
adc
mov
and
add
add
pop
xor
cltd
dec
movsl
call
add
sub
inc
nop
subb
call
test
sbb
push
es
sub
adc
notb
notl
add
adc
out
sub
add
test
push
xor
push
inc
mov
or
loop
adc
jbe
push
and
icebp
std
dec
jne
add
or
mov
ds
mov
adc
dec
stos
fs
add
out
or
jp
push
movsb
hlt
test
movsb
mov
sub
or
cmp
add
leave
push
scas
test
stos
mov
pusha
sbb
and
mov
add
xor
je
lret
or
dec
and
add
mov
roll
inc
cmp
popa
scas
sub
push
pop
adc
adc
fldt
shrl
mov
outsb
ret
shl
adc
nopl
cmpsb
ljmp
shl
stos
adc
dec
and
push
lret
lret
loope
mov
push
hlt
xor
adc
sbbb
clc
or
and
pop
andb
lcall
mov
sub
adc
icebp
mov
pop
cmp
jne
cwtl
xor
hlt
sub
and
inc
inc
sbb
adc
out
sbb
in
add
es
insb
inc
orl
adc
pop
cmp
mov
rolb
or
add
roll
xchg
ret
scas
mov
cmpsb
xor
sar
out
push
add
xor
test
xor
push
xchg
std
xchg
inc
inc
mov
mov
push
faddp
icebp
mov
fcmovb
inc
mov
inc
add
and
lret
pop
mov
dec
popa
xchg
addl
imul
inc
cltd
add
lock
sbb
mov
mov
mov
fmull
pop
cmp
bound
adc
sti
imull
lock
aam
lock
adc
sub
cmpsb
or
mov
pop
les
push
les
lds
leave
jmp
push
adc
mov
mov
push
dec
adc
or
testb
pop
mov
push
xor
pop
jnp
or
test
mov
push
aad
xor
cmp
jb
rclb
nop
inc
xor
cmpsl
testb
xor
inc
daa
mov
mov
add
push
cmp
arpl
push
add
add
shlb
mov
pop
and
jo
mov
xlat
push
xlat
inc
mov
inc
mov
push
rorb
ret
inc
push
xor
cmp
or
lock
add
ror
mov
arpl
mov
rorl
orl
icebp
or
and
pop
inc
sbbl
pop
adc
xchg
or
or
and
cmp
decb
adc
sbb
leave
cmc
dec
push
sbb
andl
add
bound
loopne
push
mov
sbbl
cmpsl
mov
push
xchg
or
fwait
pop
pop
scas
femms
lahf
insb
or
sub
push
int
pop
sbb
ret
stos
push
jl
push
inc
jl
mov
dec
add
lret
ret
xchg
and
jl
loopne
rcrl
xchg
add
stos
out
les
insl
mov
sahf
and
inc
jae
pop
inc
pop
clc
roll
ss
jo
sbb
xchg
popa
sub
and
sbb
pushf
push
add
push
adc
lahf
loope
sbb
jmp
dec
and
mov
out
cmp
mov
xchg
mov
push
mov
das
xor
in
out
push
sahf
nop
mov
and
fiadds
in
xchg
shl
cmc
sub
loope
xor
adc
adc
pop
mov
ljmp
add
adc
data16
mov
push
ja
sbb
xchg
mov
pop
push
add
push
arpl
xor
roll
sbb
xor
leave
clc
jp
jp
sti
cli
add
dec
mov
es
jmp
mov
or
cmpsb
ret
shrd
add
add
loop
push
push
mov
fwait
in
dec
mov
sbb
sbb
in
push
mov
call
push
in
push
add
xor
in
pop
sub
and
out
and
inc
inc
sar
cli
out
ret
xor
roll
hlt
andb
sti
jo
push
lock
sbb
push
ret
push
mov
mov
ds
mov
jp
dec
lds
add
cmp
xchg
adc
pop
jge
mov
ror
add
xchg
add
cld
rcll
les
inc
das
andb
push
stos
push
stos
mov
mov
sub
pop
jo
push
jb
and
cmpb
test
push
lock
xchg
mov
mov
and
fistpll
push
adc
xchg
pop
xor
inc
addl
cmpsb
popf
popf
or
ret
test
out
add
hlt
mov
mov
pop
dec
aam
dec
imul
out
dec
sbb
push
sub
sub
adc
repz
jae
lret
adcb
cmpsb
mov
aam
loop,pt
loope
call
loop
mov
jp
sub
xor
addr16
test
js
inc
or
in
out
jb
push
pushf
test
push
inc
sub
sbb
pusha
and
imul
or
sahf
mov
xchg
aas
mov
enter
pop
test
mov
cmp
jl
mov
jb
out
push
add
xchg
or
push
mov
dec
sbb
add
test
mov
sti
lods
sbb
rcll
push
mov
sbb
ljmp
add
sbb
jge
cmp
dec
shl
push
test
mov
dec
ror
add
xchg
mov
push
frstor
add
xor
add
subl
addb
int
sbb
call
add
jbe
daa
mov
pop
or
inc
mov
sbb
jo
icebp
call
mov
jb
lods
mov
pop
adc
and
aam
je
into
cwtl
lods
add
ljmp
dec
adc
mov
or
sbb
fiadds
fldcw
loopne
xor
and
cltd
mov
aas
sub
mov
sbb
add
inc
add
inc
clc
lret
shll
cli
and
cld
sub
shl
sub
cmp
pop
out
cmc
push
lret
test
dec
push
or
inc
out
test
mov
int
xchg
mov
stc
add
test
cld
add
jmp
das
pop
xor
ljmp
push
inc
stos
inc
or
sbb
data16
cli
push
xchg
cs
insb
jg
jb
push
sbb
fsubp
add
xor
adc
and
add
sahf
inc
mov
ret
dec
push
xor
fucomi
add
xor
add
mov
shll
cmpsb
adc
push
xor
mov
push
stos
cmc
mov
xor
xchg
or
xchg
rorl
les
xor
lcall
ljmp
pop
adc
add
or
popf
and
sub
sarl
shrl
add
je
jnp
push
add
test
jl
cmpsb
jo
lret
dec
scas
push
adc
jne
inc
and
mov
out
xchg
sub
cmpsl
addl
mov
inc
add
in
popf
jb
stos
add
je
movsl
push
xchg
incb
inc
pop
and
dec
xchg
or
xchg
orl
add
or
pop
adc
loopne
xchg
sub
adc
jl
adc
mov
sbb
ret
cmp
stos
push
cmc
or
sbb
push
popa
sbb
adc
cmpsb
sbb
aaa
lret
cmp
inc
sub
add
xchg
or
or
push
or
xchg
sbb
les
or
ljmp
imul
push
or
aam
xor
and
mov
scas
test
sbb
mov
sub
das
movsb
shrl
sbb
stc
pop
mov
sbb
and
les
repnz
cmc
test
mov
rolb
mov
test
pop
or
cli
adcb
popa
add
push
lock
insb
xor
out
jmp
stos
addr16
or
sbb
mov
push
and
cwtl
push
les
dec
mov
sbb
icebp
rcrb
adc
jmp
fidivs
into
movsl
pusha
mov
rcl
scas
mov
jns
or
call
cs
lret
or
push
repnz
shl
sbb
mov
inc
repnz
sbb
jg
cs
and
lock
test
addl
xor
loopne
dec
inc
adc
loopne
rclb
rolb
xchg
and
aad
lret
dec
inc
pushf
mov
mov
push
push
rol
pop
jo
lods
pusha
daa
mov
pop
in
iret
clc
sbb
lods
push
pop
xor
popf
mov
pop
mov
cli
and
push
jo
les
test
test
or
pop
mov
sbb
sub
inc
adc
sbb
push
or
or
orl
pop
mov
jo
push
loopne
inc
sarl
dec
sbb
fadd
dec
sti
shrl
shrl
adc
cltd
lea
inc
stos
add
mov
imul
add
fcomps
or
add
add
orb
mov
jmp
xchg
dec
xchg
or
push
adc
cmp
hlt
mov
int
xor
dec
or
inc
adc
mov
mov
cmpsb
pop
rolb
insb
push
inc
cmpsl
fldcw
std
or
repnz
rclb
cmp
and
lret
sbb
sub
insb
stos
jo
pop
jp
ret
lds
enter
sbbb
dec
ss
sbb
push
xlat
jnp
add
sarb
inc
adc
xlat
push
outsb
push
jbe
stc
adc
mov
andl
push
pop
push
sbb
inc
mov
mov
inc
movsl
mov
or
in
ds
jne
scas
sub
stos
sub
js
punpckhwd
pop
xor
cmp
xchg
rorl
out
rol
add
sarl
push
cwtl
sti
sub
std
shlb
add
decl
push
push
inc
xor
or
or
or
adc
cli
add
lcall
pop
pop
ficoms
insl
adc
data16
mov
dec
int
sub
xor
loopne
leave
adc
out
pop
test
dec
cmp
pop
mov
or
push
sub
jge
jb
or
sbbb
dec
cmpl
ret
adc
loopne
push
ljmp
sub
es
xchg
stos
jae
bound
lds
mov
and
adc
dec
xchg
lret
and
mov
mov
cmpsl
add
sub
cmp
fstpl
lea
enter
and
adc
xor
icebp
notb
je
push
das
repnz
notb
lret
movsl
adc
xor
cmp
or
sub
xchg
mov
enter
add
ret
or
ret
adc
push
int
add
sbb
out
push
lret
adc
mov
xor
mov
add
in
pop
add
aas
or
jecxz
or
lock
dec
pop
push
cwtl
inc
movsb
and
nop
cltd
push
inc
pop
je
xor
pop
push
daa
xchg
add
xor
sbb
xor
rcrb
push
add
cmp
out
test
sub
cli
push
push
sbb
rcrl
lcall
add
sub
xor
test
scas
lcall
test
lock
adc
bound
gs
adc
sarb
rorl
cmp
inc
shrl
adc
lock
pop
test
mov
push
add
push
sti
xlat
xor
dec
sbbb
push
push
jb
sbb
and
lret
jge
xchg
cmp
aad
ss
sarl
inc
shrb
data16
in
push
js
lret
mov
mov
push
cmp
push
daa
outsl
or
testb
push
pop
rolb
push
roll
add
sbb
or
clc
pop
shll
lret
jo
rcrb
mov
push
sub
pop
cmp
rcrl
cmpsb
cltd
or
pop
cmpsb
shr
sub
mov
mov
inc
lds
jno
sub
cmpsl
adc
mov
pop
and
xchg
push
test
inc
mov
adc
pop
sbb
pop
popa
subb
adc
mov
pop
push
inc
or
nop
enter
and
lock
cmpsb
stos
push
shll
adc
aaa
xchg
rcrl
adcb
sbb
push
mov
rcrb
sbb
xchg
out
movsb
push
cld
scas
pop
in
pop
inc
nop
cmc
adc
lret
jbe
roll
push
fstpt
or
adc
sbb
outsl
leave
adc
js
and
adc
gs
test
add
dec
into
adc
orb
popa
sbb
inc
stos
xchg
cmp
aaa
mov
jne
xchg
xor
ret
in
not
stos
cmpps
outsl
es
ret
sub
sahf
test
inc
sub
je
mov
das
push
inc
test
add
inc
lret
insb
lret
icebp
jno
or
fimull
sbb
fwait
mov
cwtl
stos
fimull
mov
push
inc
stos
or
or
adc
or
stos
inc
sub
or
dec
or
gs
icebp
inc
pusha
ljmp
add
or
lcall
cmp
sub
jno
mov
or
pop
orb
add
xor
aaa
add
into
add
inc
adc
cmp
icebp
and
das
add
sbb
leave
and
in
sbb
lds
add
sbb
cmp
cmpsl
cmpsl
inc
mov
mov
ficomps
test
in
mov
test
sub
xchg
ror
inc
out
xor
xchg
rcl
jnp
or
cmove
sub
mov
xor
mov
mov
jne
in
rcll
and
sbb
push
pushf
mov
push
adc
mov
loopne
leave
add
push
jmp
mov
push
xchg
stc
add
dec
sub
dec
jne
adc
adc
mov
sub
mov
into
push
or
cmp
les
push
sbb
dec
pop
xor
aad
push
jge
push
test
inc
or
mov
lock
pop
add
shl
add
shll
movsl
dec
push
or
push
mov
pop
dec
pop
add
mov
pop
arpl
sub
mov
cmp
ljmp
jge
adc
adc
mov
sbb
push
nop
mov
or
pop
jmp
add
xor
add
imul
addr16
mov
add
test
movsb
xor
int
aad
lcall
jne
push
shl
filds
dec
or
mov
addr16
or
test
gs
and
dec
inc
mov
ja
and
push
pushf
or
dec
mov
pusha
ret
xor
inc
or
jns
lcall
in
and
or
lods
mov
aam
dec
iret
cmpl
ret
popa
and
xchg
in
and
lods
call
ljmp
or
into
jmp
push
or
cmp
mov
loope
sbb
les
lds
sbb
movl
inc
mov
mov
mov
loopne
sub
mov
inc
inc
mov
stos
sbb
mov
or
movsb
or
mov
sub
int
test
adc
inc
or
dec
adc
mov
push
inc
push
jno
push
push
gs
icebp
or
xchg
xor
aas
notb
sub
dec
push
mov
js
adc
movsb
or
lret
or
add
add
pop
pushf
mov
fadd
mov
xlat
pop
xchg
push
test
dec
int
push
jo
jne
mov
mov
push
sub
aam
adc
mov
adc
popf
fs
mov
out
mov
sub
sub
jmp
dec
aas
add
inc
popf
xor
mov
adc
add
mov
lret
adc
inc
add
je
sbb
pop
lock
insb
push
loope
sub
lea
stos
jecxz
jno
inc
smsw
push
shl
imul
outsb
mov
mov
sbbb
call
inc
lock
push
addr16
jl
out
jg
and
push
jl
test
mov
mov
repnz
add
mov
dec
xor
pop
mov
loop
mov
sbb
xor
dec
inc
shll
popf
or
aam
outsl
xchg
inc
xchg
cmpb
mov
xor
cmp
rorb
mov
mov
or
nop
or
aam
jo
aam
sbb
pop
out
push
orl
call
lcall
mov
add
cmp
push
add
mov
rcrb
into
bound
lock
je
daa
sbb
or
out
mov
clc
shrl
loope
jbe
jne
add
cmp
mov
add
mov
mov
push
andps
and
and
adc
in
cli
push
inc
pushf
push
push
mov
movsl
sbb
ds
mov
clc
add
lret
and
and
test
js
fs
or
inc
mov
mov
cmp
push
jb
sbb
cmpsb
into
movsl
xchg
push
lret
push
or
sub
cwtl
mov
sbb
xchg
hlt
lcall
xor
pop
mov
mov
and
add
nop
jmp
mov
pop
push
clc
sbb
fnstcw
or
outsl
inc
out
add
insl
and
push
mov
imul
cmp
dec
lcall
repz
adc
jp
mov
cmp
push
loop
sbb
rcll
les
jge
sub
push
in
sbb
push
pop
sbb
push
add
test
mov
adc
lock
lock
divb
scas
pusha
push
int
loop
pushf
sbb
sbb
cld
stc
pop
push
xor
sub
xchg
dec
mov
mov
or
shll
fucom
ljmp
in
inc
mov
popa
mov
js
imul
mov
sbb
mov
loopne
int
and
xchg
mov
push
insb
loop
ret
pop
std
cmpb
fisttpl
insl
iret
push
ret
mov
shrl
lcall
ret
add
orl
sahf
inc
and
push
leave
xchg
add
mov
mov
mov
push
aam
scas
shlb
cli
andl
add
js
into
js
adc
push
test
mov
lcall
shll
cmp
add
flds
dec
mov
sub
push
adc
and
rorl
push
mov
sub
add
lock
push
cmp
mov
cli
or
jmp
push
and
add
das
roll
add
outsb
testb
jp
es
rorb
adcl
bsf
lods
enter
hlt
jp
mov
add
mov
add
mull
jne
pop
push
add
add
or
mov
adc
push
inc
sbb
lcall
mov
sub
adc
cmp
out
xchg
test
mov
rcl
adc
lcall
sbb
push
adc
push
dec
sub
movsl
ljmp
stos
rcrl
rorl
test
xchg
or
jecxz
sbb
lret
xor
jbe
mov
sub
mov
sbb
test
jo
pop
and
ret
or
pushf
and
pop
and
int3
rolb
pop
xchg
sbb
das
shl
inc
ret
shlb
insb
les
sub
sbb
dec
xor
or
subb
xor
lret
or
insl
push
xchg
push
mov
inc
daa
in
and
lods
jmp
mov
popf
mov
mov
icebp
js
addr16
ret
xor
es
mov
push
sbbb
pop
push
add
loope
in
sub
dec
out
mov
dec
aam
lods
stos
mov
daa
or
xchg
fldt
xor
inc
mov
or
pusha
push
std
xchg
mov
cld
sbb
sub
xchg
stos
shll
push
adc
xchg
enter
pop
fldt
sbb
sbb
sbb
xor
dec
inc
xchg
jge
aaa
mov
stos
pushf
js
pop
inc
imul
add
in
sub
int
add
lds
sbb
pop
insl
imul
adc
add
das
or
cmpsb
mov
mov
test
scas
rcrl
add
mov
sub
adc
call
xchg
sbb
sub
jmp
rcll
ja
sub
or
and
mov
inc
sbb
gs
mov
pop
push
pop
out
dec
jb
call
sbb
cli
mov
out
or
pop
push
jno
adc
pop
fs
icebp
pusha
pushf
add
rdmsr
pop
iret
push
sub
add
test
pop
ret
mov
push
pop
pusha
push
or
adc
pop
cmc
pop
sub
das
lret
sub
mov
stos
sbb
pushf
and
push
or
dec
jmp
push
pop
out
adc
inc
mov
adc
and
sbb
add
test
fwait
cwtl
addl
pop
add
pop
fdiv
lock
lea
lods
or
push
sub
mulb
cs
xchg
lea
cmpsb
in
push
mov
cs
cmp
cmp
mov
pop
mov
leave
push
and
or
ret
lret
jle
and
cs
lock
cmp
add
hlt
xor
fildl
adcl
sbb
ljmp
roll
add
nop
aam
cwtl
icebp
stos
add
xchg
add
xchg
or
adc
cmp
inc
push
aam
fidivs
mov
jne
rcrl
clc
xchg
or
ljmp
subl
scas
bound
dec
adc
add
andb
popa
pop
sbb
jp
add
mov
inc
roll
leave
push
xlat
sub
lcall
inc
sarl
adc
pop
push
pop
adc
mov
or
and
mov
push
scas
xchg
leavew
or
cmp
mov
dec
jle
or
push
cs
jbe
fmull
dec
sub
push
dec
aam
push
stos
mov
movsl
sub
lcall
test
rorb
push
rorb
mov
mov
cltd
cmc
call
lock
into
or
pushf
ljmp
and
inc
and
popf
mov
movb
dec
xchg
nop
cli
sbb
mov
fdiv
xchg
sbb
push
push
mov
cmpsb
jg
adc
icebp
push
aad
push
scas
aaa
scas
jmp
cwtl
enter
cmc
cli
mov
enter
pop
shll
cs
push
mull
lahf
mov
loopne
push
test
mov
stos
aas
cld
dec
pop
test
mov
ret
dec
cmpsl
and
fs
mov
aam
adc
loopne
les
jecxz
inc
pop
cmp
ja
scas
pop
dec
inc
dec
jmp
lcall
sbb
pop
in
push
cmp
xor
movsl
clc
push
or
aam
ss
push
push
add
rcrb
lret
cs
cmp
fst
cmp
inc
lea
aad
loopne
test
xchg
mov
lods
call
add
adc
jp
xchg
sub
setle
testb
xor
pop
dec
shlb
stos
shr
mov
cwtl
add
movsb
sbb
adc
push
adc
psrld
mov
ret
mov
pop
fnstsw
xlat
cmpl
or
or
stos
or
push
inc
insl
sub
inc
sbb
in
cmp
and
mov
mov
mov
popf
loope
nop
sub
loopne
mov
inc
mov
jp
dec
rorl
xorb
add
adc
sbb
push
sub
out
test
sub
les
dec
movsl
jb
mov
sub
addb
sub
pop
mov
inc
mov
mov
sbb
pop
testb
mov
cmp
ret
mov
bound
fwait
xor
adc
paddq
sub
roll
or
push
ret
jp
mov
adc
adc
lds
inc
dec
shr
adc
or
les
repz
adc
mov
insb
sahf
ret
push
orb
add
dec
stos
adc
or
stos
sbb
or
test
in
xchg
push
andb
cmp
add
push
xor
js
push
adc
or
mov
scas
rolb
xor
rclb
mov
mov
sub
cmpsb
je
lahf
inc
lds
mov
mov
or
pop
and
mov
adc
lea
push
jo
push
rorb
insb
xchg
xor
dec
mov
call
jo
subl
and
dec
or
int
push
outsb
ret
mov
test
loopne
popf
cmp
adc
adc
mov
sarb
sub
add
mov
imul
push
dec
and
cmp
xor
xchg
sub
adc
jne
fcompl
sub
jl
addr16
stos
pop
add
dec
enter
stos
pop
xor
cwtl
sbb
addl
inc
dec
rolb
jo
jae
or
cwtl
push
rcr
scas
and
aas
jmp
or
les
and
mov
push
inc
fdivr
lds
inc
js
xchg
sub
dec
andb
adc
movsl
inc
push
adc
mov
das
or
popa
pop
jg
push
add
push
int
das
sub
fs
push
push
in
or
sbb
mov
jae
aam
loope
push
daa
outsl
imulb
sti
bound
mov
loop
inc
scas
data16
cmp
incb
sbb
loop
adc
and
shrb
data16
cmp
pop
setg
mov
xchg
jg
shlb
pop
insb
xor
pop
mov
mov
gs
mov
xchg
nop
push
out
adc
and
shrl
jo
sbb
add
sub
sarl
mov
sbb
sbb
add
call
pop
scas
inc
addr16
mov
sub
clc
and
xorl
in
ljmp
push
mov
int3
xlat
mov
add
xor
mov
aad
jae
popa
test
sarl
pop
je
mov
sbb
rcll
xchg
rorb
push
mov
adc
andb
or
push
movl
rolb
push
cs
lods
divb
shll
stos
enter
sub
jbe
test
cli
xor
sub
mov
das
ljmp
mov
inc
xlat
sti
adc
bound
movsl
push
jge
dec
xor
test
rolb
mov
adc
ret
jmp
push
xchg
or
lea
sbb
mov
lds
aam
mov
addl
jge
into
sbb
xlat
sub
lods
sar
add
mov
push
shrl
ljmp
aaa
jo
shl
fucomip
lret
stos
pop
adc
das
mov
clc
roll
push
rolb
cmp
xchg
aam
push
add
cmc
mov
jnp
sbb
aas
mov
xchg
push
and
push
call
sbb
pop
int
enter
xor
or
adc
test
out
es
xor
dec
out
push
scas
xchg
pop
pushw
sbb
out
lret
push
inc
jmp
not
sbb
popl
xor
insl
test
or
xorl
xchg
xor
sub
dec
pop
jae
loopne
xchg
cltd
das
sbb
popf
stos
fildl
mov
sbb
sbb
sub
fldt
sbb
test
test
mov
pushf
xor
movsb
std
dec
mov
jne
lcall
shl
or
xor
std
mov
shlb
xlat
push
or
leave
out
push
inc
xor
call
pop
fs
rolb
les
test
push
roll
add
or
xchg
roll
add
sbbb
adc
pop
shll
lock
dec
idiv
daa
rolb
inc
pushw
adc
adc
inc
arpl
sub
push
fs
ret
adc
sbb
cmp
adc
sbb
cmp
loope
les
cli
add
popa
mov
add
push
mov
sub
add
leave
mov
mov
lods
fistpll
add
call
mov
aad
and
mov
sbb
jo
roll
daa
das
bnd
lar
out
jp
dec
mov
ret
push
movsl
jne
frstor
shlb
add
cs
or
add
dec
inc
jo
mov
cmpsb
push
cmp
call
add
pushf
or
test
mov
pop
inc
mov
in
jl
sub
dec
rorl
inc
jp
loop
or
sbb
or
or
cmp
sbb
lock
jecxz
add
push
outsl
ret
orl
push
inc
add
mov
xor
call
dec
push
and
dec
xchg
mov
adc
push
and
int3
push
stos
add
or
adc
push
push
cmp
adc
add
inc
add
lahf
or
mov
cmpsl
inc
in
sbb
xchg
xchg
mov
push
cmp
sub
mov
stos
nop
add
aam
fcomps
adc
add
into
push
inc
and
sahf
sbb
and
jbe
mov
inc
cmp
cmp
daa
stos
in
push
hlt
mov
push
fs
or
faddl
push
sbb
cmp
xor
xor
mov
sub
adc
push
sub
jno
pop
jmp
sbb
sbbb
dec
sub
ret
jp
and
call
push
adc
in
inc
movsb
or
call
push
loopne
outsb
xchg
js
push
mov
sub
jnp
add
dec
lds
push
cmp
inc
inc
push
xchg
push
mov
push
popl
inc
js
iret
inc
scas
dec
add
push
add
adc
push
daa
cmp
daa
adc
add
sbb
and
add
sbb
cmp
inc
push
lock
adc
addr16
adc
daa
scas
icebp
inc
das
add
pop
and
mov
mov
clc
loopne
mov
or
cwtl
add
pop
sbb
add
push
push
or
test
push
ret
lods
push
push
push
inc
push
push
rorb
or
inc
add
ret
pop
arpl
mov
repnz
scas
cwtl
add
jns
sbb
inc
leave
sbb
mov
cmp
lock
add
mov
mov
sub
test
and
push
iret
cmpsb
jo
and
push
push
push
jg
jns
and
push
xchg
sbb
adc
sub
and
cmp
fdivs
outsl
iret
xor
bound
adc
jg
sbb
aam
loope
mov
stos
cmpsl
add
push
mov
jb
stos
xor
inc
outsl
push
mov
cmc
adc
xchg
xchg
jecxz
or
mov
fcmovne
in
stos
mov
or
in
xor
stos
sbb
and
ja
pop
add
sub
xchg
push
push
xchg
jecxz
add
jp
loop
xor
out
mov
pop
movsl
mov
inc
and
mov
loope
jo
add
fst
push
jne
push
push
test
xchg
rorl
add
das
inc
mov
xor
jge
mov
sub
and
inc
mov
out
add
mulb
lahf
in
add
or
mov
and
push
add
add
cmp
and
inc
xor
mov
pop
sub
int
sbb
and
push
repz
dec
xor
xchg
add
add
sbbl
ljmp
xchg
mov
aam
pop
pop
or
add
sub
add
bound
xchg
sbb
mov
loope
js
icebp
rorb
or
icebp
push
icebp
clc
lea
mov
xchg
sub
xchg
xlat
sbb
sbb
lock
sbb
lds
or
xchg
data16
or
mov
or
inc
popf
cmp
mov
push
fsub
gs
jb
mov
mov
inc
test
cmp
pop
adc
ss
and
pop
dec
test
jne
mov
pop
jl
xchg
pop
adc
mov
jnp
sbb
inc
lret
lods
adc
push
adcb
sub
cmp
mov
jle
inc
lods
sbbb
pop
clc
add
mov
add
in
or
cmp
lret
inc
icebp
mov
loopne
popf
jle
cmp
push
or
xor
mov
cmp
push
lds
pop
mov
sub
mov
aam
montmul
cmpsb
add
gs
add
jno
aad
aaa
lahf
mov
mov
add
lcall
cmpsb
mov
xchg
xchg
mov
mov
cmp
or
shlb
or
adc
int3
add
or
scas
push
loope
add
sbb
loope
xor
jbe
push
mov
push
sbb
or
sub
dec
push
or
call
adc
jo
dec
mov
test
sarb
aaa
add
mov
int
call
cmp
je
roll
push
shrb
lahf
repnz
adc
pop
xchg
inc
add
mov
aaa
adc
mov
or
in
add
xor
pop
pop
sbb
test
jae
pop
scas
add
stos
loope
mov
testb
jo
xor
loopne
mov
incb
sbb
cmp
sbb
aaa
mov
test
adc
adc
mov
or
mov
and
movsb
imul
sbb
das
pop
add
outsl
push
fimull
push
push
inc
aas
jbe
movsb
add
cmp
sbb
xorb
xchg
dec
mov
fisubrs
lret
bound
inc
add
sbb
mov
cmpsl
mov
adc
adcb
je
aam
mov
nopl
loop
dec
call
div
inc
in
in
mov
sub
push
mov
cmpsb
dec
and
cwtl
pop
adc
loope
push
aaa
adc
lea
and
pop
ret
or
mov
push
loopne
mov
push
leave
adc
adc
les
sub
adc
jp
mov
add
incb
adcb
aad
pop
les
adc
mov
mov
jne
cmpsb
sbb
mov
adc
sbb
dec
add
add
push
push
je
push
push
cmc
cmp
push
push
and
adc
stos
scas
dec
push
xor
dec
dec
test
mov
ret
dec
ljmp
mov
jb
adc
xchg
loopne
mov
and
sbb
add
lock
cmp
cltd
js
add
add
lcall
mov
out
inc
es
adc
inc
enter
mov
shlb
push
sti
push
ret
push
xor
loope
adc
cmp
inc
scas
push
adc
xor
je
mov
inc
push
leave
xchg
out
mov
adc
out
or
add
push
loope
mov
mov
dec
aas
mov
push
test
in
jmp
dec
roll
or
mov
in
or
ljmp
iret
and
xor
add
pushf
or
popa
push
rcrb
sub
adc
stos
dec
cwtl
mov
je
andb
xchg
mov
mov
js
xlat
leave
inc
push
mov
les
and
sbb
enter
fistpl
imul
mov
aam
mov
push
adc
push
inc
push
inc
popa
cmpb
sbb
lcall
bound
sbb
mov
adc
adc
sbb
inc
lret
adc
js
push
sbb
gs
mov
subl
cli
into
bound
lods
lods
sbb
inc
cmove
cmp
lcall
add
aas
jp
addl
mov
adc
xor
jo
ljmp
or
add
pusha
add
mov
nop
push
loope
sub
sbb
out
add
push
and
loope
mov
mov
mov
pop
xchg
scas
add
insb
xor
adc
sub
mov
shl
loope
imul
mov
add
outsb
in
jns
push
sub
cmc
lock
cwtl
or
or
sbb
into
mov
mov
shl
aad
adc
arpl
or
adc
test
jl
sbb
testb
push
add
jo
pusha
rorl
in
dec
rcrl
sub
dec
xchg
push
inc
mulb
inc
adc
mov
lods
stos
add
lret
int3
scas
or
dec
cmp
or
xchg
adc
cli
add
or
jo
sub
xlat
fucomip
into
jecxz
test
or
sub
mov
pop
pusha
push
enter
aad
push
int
mov
xchg
les
mov
or
cmp
mov
loop
push
fcmovnu
cltd
xor
js
lahf
jle
add
lret
add
push
int
stos
pop
scas
loopne
sub
add
ja
shll
mov
mov
pop
and
clc
jae
movsl
nop
sahf
imul
icebp
mov
adc
sub
add
push
iret
mov
jnp
getsec
mov
push
push
cmp
js
cli
push
and
cmc
adc
add
mov
pop
cmc
inc
shrl
and
adcb
mov
lcall
movsl
jp
popf
dec
lahf
xchg
sbb
mov
stos
sbb
shrl
push
pop
sbb
sbbl
mov
push
cmp
cmp
inc
xor
inc
arpl
pop
lds
pop
push
cwtl
pop
adc
sbb
add
adc
ret
shl
mov
xor
rcl
imulb
call
add
xacquire
and
sbb
test
add
pop
cmp
fdiv
stc
ud2
adc
in
sub
or
int3
jno
js
stc
sbb
cmp
stos
sbb
xchg
stos
jo
or
lock
cmp
pop
leave
xchg
pop
sbb
dec
ficoml
icebp
adc
sub
add
lods
pop
cwtl
xor
pop
loop
inc
push
pop
push
mov
ret
push
test
xor
mov
mov
mov
add
sbb
call
push
loopne
mov
aaa
rolb
scas
js
clc
int
lds
pushf
adc
adcb
rcrb
outsb
loope
pop
sbb
adc
pop
sub
lret
pop
add
add
aad
adc
adc
test
mov
or
test
sbbl
xor
mov
leave
mov
ds
add
xchg
call
leave
xchg
iret
mov
add
pop
data16
cmp
inc
cmp
scas
stos
loop
jo
call
mov
cld
cmp
mov
mov
aam
xchg
lea
or
inc
jnp
addb
sub
mov
mov
nop
jae
pop
push
stos
xchg
pusha
loop
pop
in
inc
pop
mov
iret
xlat
add
aas
or
test
in
adc
or
or
clc
or
xor
push
push
clc
pop
sbbb
jmp
push
mov
add
bound
fcmovnb
or
cmp
add
add
jg
adc
sbb
inc
shll
mov
push
dec
cwtl
xor
xor
inc
lock
loope
call
or
pop
or
rorb
shl
mov
aam
pop
push
xchg
sbb
pop
mov
push
pushf
test
sbb
lret
dec
inc
xor
mov
sahf
adc
push
or
push
mov
enter
add
enter
movhps
dec
mov
call
sbb
lock
inc
sub
jl
push
or
jl
cmp
push
xchg
mov
jo
lahf
mov
orl
je
mov
sbb
mov
enter
aaa
or
pushf
or
add
and
and
jmp
bound
or
jecxz
pop
push
mov
aas
outsb
lds
or
loopne
jp
mov
in
jo
xor
in
inc
sti
push
sbbb
dec
jp
add
add
ljmp
aad
xchg
mov
inc
and
and
cmpsb
mov
sbb
test
pushf
and
les
or
ljmp
pop
stc
xor
jle
cs
add
adc
and
icebp
lds
dec
push
push
jl
mov
cmpsl
sub
popa
stc
in
inc
jl
jo
ds
sbb
mov
add
push
outsb
mov
push
repnz
pushf
stos
leave
inc
lcall
pop
add
sub
sbb
mov
pop
inc
addb
cmpsb
adc
push
fdivs
dec
aad
leave
fcomps
stos
pop
push
jo
rcrl
cwtl
mov
insl
push
xchg
pop
ret
pop
and
xor
pop
je
pop
in
test
sbb
paddq
pop
add
add
mov
mov
test
int3
mov
and
lret
pop
inc
ret
mov
ret
pop
rolb
movsl
sub
push
lret
and
movsb
sub
inc
mov
iret
hlt
and
push
test
inc
cmp
daa
adc
cmp
mov
adc
pusha
and
mov
add
adc
xor
mov
mov
and
popa
js
shrb
adc
cs
lods
jne
fstl
add
test
xchg
sbbb
push
xor
dec
push
add
inc
stos
mov
add
mov
push
sbb
les
xchg
loope
sbb
mov
fidivl
push
push
jae
addb
cmp
into
stc
sbb
pop
pop
ds
nop
sub
loopne
push
xor
inc
pop
mov
mov
add
adc
andb
test
pop
in
btc
pop
cmpsl
ret
pop
pop
xchg
out
pop
sbb
lcall
mov
jo
and
mov
dec
loopne
push
js
sub
cwtl
call
lods
mulb
shrb
stos
adc
enter
push
ret
jl
repnz
add
pop
test
push
mov
pop
add
push
ljmp
mov
dec
lds
repnz
enter
fwait
addb
dec
adc
add
or
add
inc
test
test
xor
and
dec
sti
push
adc
ljmp
cmpb
pop
pop
fisubrs
aam
inc
cmp
dec
push
je
mov
shr
fwait
lcall
mov
mov
sbb
cltd
push
push
into
rolb
stos
fldenv
inc
xor
mov
push
vsqrtss
sub
inc
cmp
push
xor
xor
imul
mov
mov
sbb
and
ret
pop
mov
ljmp
les
adc
pop
lret
mov
mov
adc
subb
fisttpll
stos
inc
xchg
cmpsb
pop
dec
inc
mov
cmp
das
mov
std
mov
sbb
xor
shlb
xchg
test
or
inc
add
mov
push
pop
ljmp
and
popf
push
iret
push
mov
fistl
imul
hlt
mov
stos
pop
test
pusha
and
sub
fwait
push
inc
and
ljmp
xor
pop
pushf
pop
mov
add
jecxz
pop
mov
adc
in
adc
jmp
loopne
xchg
stos
jmp
dec
adc
or
cmp
add
or
sbb
or
add
adc
adc
fnstsw
or
xchg
push
mov
loope
ss
push
hlt
loop
sbb
xor
aaa
mov
jnp
mov
push
cmpsb
pop
sbb
scas
mov
inc
pop
fcoms
push
push
cld
pop
pop
call
dec
inc
pop
aas
mov
push
gs
push
or
test
or
xor
cld
xchg
lock
push
jno
test
adc
xor
or
dec
rclb
test
xor
cmpl
sub
or
jae
sbb
pop
jmp
std
int3
cmpsl
jb
ret
das
mov
inc
mov
and
push
push
add
pushf
jae
mov
inc
mov
jp
pop
repz
sbb
xor
adc
popf
push
test
adc
pop
push
mov
in
outsl
pop
mov
sub
into
shll
loop
mov
mov
xchg
fnstenv
sbb
add
aam
pop
ljmp
fwait
sarl
mov
and
and
add
mov
jo
lret
mov
and
adc
sbb
lret
push
or
aad
es
push
xchg
push
add
or
ret
add
inc
sbb
test
sbb
mov
js
mov
fnstcw
inc
mov
and
mov
push
mov
push
lods
cltd
je
sbb
xor
sub
pop
add
iret
lret
push
mov
inc
movsl
push
mov
sahf
sbb
in
addb
fldenv
or
jbe
test
push
mov
pushl
add
push
xor
xchg
out
and
push
jb
lods
rcrb
cmp
stos
jo
and
stc
cmc
add
xchg
add
adc
or
jle
mov
loope
stos
loop
xor
fstpl
lds
xor
add
sbb
ficompl
call
mov
xchg
pop
or
inc
rorl
repnz
push
cs
lret
rorb
push
add
pop
mov
jb
cmc
shlb
lods
mov
push
pop
jo
hlt
cli
inc
and
je
jne
in
push
cmp
add
loop
mov
add
or
adc
push
xor
data16
or
mov
ret
adcb
add
cmpsl
out
adc
dec
into
sbb
add
or
mov
or
sbb
and
pop
pop
pop
sbb
ret
add
mov
inc
inc
xorl
xchg
aad
and
xchg
lahf
sbb
push
adc
addl
mov
add
mov
adc
sbb
pop
repz
or
inc
pop
cmp
pusha
inc
sbb
mov
cli
lods
add
sti
or
adc
pushf
add
xchg
lods
jl
sbb
push
hlt
mov
dec
cmc
ret
xchg
add
jne
sahf
stos
xor
or
and
fisttpll
inc
sub
test
test
push
insb
aad
push
pop
stos
and
aad
scas
cmp
mov
xchg
fdivl
in
int3
push
push
mov
lret
pop
cltd
sub
add
add
jb
xchg
dec
shlb
xor
sbb
test
dec
insl
or
mov
jle
pop
in
jmp
movl
add
pop
aas
jg
jl
jmp
lcall
movsb
test
out
lahf
movsl
ret
push
mov
push
rorl
imul
xor
ror
aas
lock
push
rorb
andb
out
cmpl
ss
insl
and
ljmp
repz
iret
lahf
nop
ret
insl
lmsw
jg
fadds
jg
cld
stc
pop
jns
fwait
out
jo
movsb
enter
test
clts
out
lahf
aas
movl
push
dec
shrl
cld
stc
repz
notl
fwait
and
repnz
inc
sbb
aas
jg
mov
dec
mul
dec
iret
ret
stc
repz
loop
pusha
adc
ficompl
mov
jg
xor
stos
gs
xor
lock
stc
repz
sti
es
dec
cwtl
xchg
xchg
out
add
dec
xchg
aas
jg
cld
int3
int3
jg
in
or
add
out
lahf
popf
cwtl
scas
xor
fdiv
mov
addr16
cld
stc
jne
imul
jb
cmp
mov
cld
cli
repz
stos
jns
pop
movsl
cs
pop
jg
cld
stc
je
push
add
lds
mov
cmpsb
cmc
pusha
out
lahf
aas
mov
in
fcmovb
pusha
xor
inc
mov
cld
stc
repz
adc
push
outsl
mov
lcall
jg
jnp
push
lea
add
aas
test
cmp
push
and
aas
jg
adc
roll
aas
je
or
iret
fimuls
dec
push
cmp
lahf
adc
jg
cld
decb
push
ret
jns
outsl
shl
jbe
pop
repz
lahf
xor
loopne
cmpsb
nop
push
nop
addb
stc
mov
ja
rcrb
iret
and
iret
lahf
aas
rcrl
ja
inc
jle
cld
stc
repz
out
cmpb
jp
das
pop
dec
dec
lahf
aas
jg
mov
push
push
inc
in
mov
repz
cmp
mul
inc
push
imul
decb
sbb
subl
repz
jno
jl
push
movsb
mov
inc
xchg
std
aas
jg
cld
aas
daa
or
push
xchg
pop
mov
les
out
lahf
jmp
leave
fmull
ljmp
stc
mov
out
dec
sub
add
mov
jbe
jae
mov
in
sbb
mov
jp
setg
jg
sub
sbb
lcall
repz
lret
lds
pop
adc
push
dec
pop
int
lahf
gs
fisttpl
fwait
push
shlb
out
jnp
roll
sub
mov
add
stc
repz
in
xchg
insl
lcall
into
jae
aas
jg
cld
jg
add
loope
or
xchg
push
and
iret
lahf
das
je
es
add
cld
stc
ret
shll
push
mov
sub
iret
lahf
aas
popf
add
fimull
mov
push
inc
ret
cmpb
repz
and
add
push
repz
aas
movntq
sbb
lock
fdivrl
cld
stc
and
fldenv
push
xchg
cmpl
jo
out
lahf
aas
fildll
dec
push
fisttpll
stc
repz
rcrl
or
add
lahf
aas
jg
arpl
jne
lret
scas
cmp
fidivrs
repnz
stc
repz
ds
or
cmp
mov
inc
jle
mov
push
jecxz
or
dec
fs
iret
pop
pop
lea
mov
sahf
push
popf
das
inc
and
stc
repz
insl
mov
mov
test
add
js
pop
dec
sbbl
mov
iret
lahf
sbb
mov
push
add
ljmp
xchg
mov
sti
loop
jnp
gs
pop
jbe
outsb
xchg
lahf
aas
cwtl
lcall
xor
popa
mov
jg
popa
scas
in
or
inc
mov
stc
repz
push
dec
cmp
pop
xchg
pop
movsl
xchg
shl
mov
lahf
aas
jg
lods
dec
insb
cmc
cmc
add
xor
push
cmpl
stc
repz
jne
imul
cmp
shll
xor
cld
imul
sarb
push
mov
out
lahf
push
js
cld
pop
mov
sub
inc
cmpl
jg
cld
stc
emms
xchg
adc
mov
stos
fnsave
roll
dec
out
lahf
aas
clc
sub
push
push
stos
lods
and
cld
stc
repz
out
inc
stc
mov
cmpsb
lds
cwtl
enter
jg
aad
les
sub
jnp
inc
addr16
sbb
stc
repz
lea
mov
dec
les
jb
aaa
and
out
xor
iret
lahf
aas
jg
mov
jmp
xchg
sub
dec
stc
insb
jnp
repnz
repz
push
mov
or
mov
sub
iret
aas
jle
pop
push
inc
daa
inc
int
xor
adc
cld
stc
repz
iret
pop
andb
aaa
push
fwait
dec
jmp
ret
aas
jg
jbe
mov
cmp
cld
stc
repz
mov
leave
mov
scas
jl
lret
lahf
aas
jg
or
xor
loop
lds
iret
roll
add
subb
push
stos
bound
jg
cld
loope
or
xchg
lret
jae
pop
sbb
and
iret
lahf
pop
add
pop
push
repnz
cld
mov
das
fbstp
adc
lahf
aas
jg
mov
jl
insb
leave
sub
lret
dec
pop
bound
cmp
push
jae
mov
scas
bound
xor
stc
repz
in
jecxz
xor
fs
xor
aas
jg
cld
mov
sbb
xchg
out
push
repz
repz
lahf
jno
add
mov
in
mov
inc
xor
sbb
std
mov
shlb
inc
out
lahf
aas
mov
pop
rcll
push
insb
cld
stc
repz
inc
mov
push
movsb
div
ss
loop
jae
iret
lahf
aas
jg
icebp
fsubrl
aas
data16
stc
repz
jge
jae
xchg
jne
jo
mov
lahf
aas
jg
rorb
xor
mov
mov
clc
testb
out
sarl
testb
mov
cld
push
jmp
arpl
ja
cmp
in
mov
repz
lahf
movsb
outsb
pop
and
insl
add
mov
shlb
cld
stc
pop
cmp
push
lahf
pushl
out
lock
out
lahf
aas
mov
cmp
and
fsts
cld
stc
repz
movd
jmp
repnz
mov
jg
fwait
xorb
add
ud2
xor
repz
jnp
jg
int3
jae
sahf
inc
aas
jg
mov
push
aas
cmc
loopne
inc
gs
pandn
and
out
lahf
fiaddl
inc
dec
pop
cmpsl
mov
cld
stc
add
subl
fs
in
cli
cmc
roll
mov
call
fbstp
push
jb
mov
out
lahf
fsubs
or
sub
int3
push
mov
jbe
iret
lahf
aas
jg
pop
aam
sbb
pop
dec
pop
ljmp
out
xchg
mov
jnp
pop
cld
stc
repz
popf
jbe
jae
adcl
lahf
aas
jg
fcmovu
nop
sub
negb
cmp
repz
push
in
xor
inc
pop
aas
fldt
pop
fimull
aas
aaa
xor
iret
jbe
xchg
js
add
or
xor
cld
daa
movsw
xchg
fidivs
add
fisubrs
xchg
lahf
sub
in
adc
repz
mov
fsubrl
jmp
stos
aas
jg
cld
orl
scas
cld
or
out
lahf
js
mov
inc
xchg
pushf
mov
jg
cld
stc
add
inc
data16
xor
cmp
iret
lahf
aas
test
adc
incl
repz
or
enter
dec
jb
or
lahf
aas
jg
xor
arpl
bswap
repz
and
in
dec
jecxz
or
lahf
clc
cld
stc
repz
jmp
test
sub
xchg
arpl
xor
sbb
jg
cmp
arpl
cmpsb
pop
stc
repz
jbe
mov
push
addr16
or
cld
fstpl
iret
cmp
push
mov
mov
iret
lahf
pop
xchg
pop
dec
adc
push
sbb
aam
cld
stc
pop
mov
pop
xchg
dec
mov
xchg
add
aas
add
fcoms
gs
pop
test
dec
movsl
xlat
cmp
repz
mov
cmpsl
fwait
mov
lock
jg
cmp
dec
xchg
addr16
shlb
iret
lahf
in
insb
sbb
out
cmpsb
mov
push
insb
and
cld
stc
shl
jb
pushf
xchg
mov
add
xchg
xor
jge
sbb
push
bound
out
les
test
and
mov
jge
xchg
push
cmp
jns
cld
stc
repz
pusha
outsb
mov
pusha
xchg
or
movsl
out
lahf
aas
jg
sbb
insl
inc
add
adc
sbb
mov
hlt
in
loopne
mov
sbb
fnstcw
lahf
jg
inc
cs
aas
xchg
mov
stc
repz
cmp
adc
mov
mov
mov
aas
jg
cld
dec
and
imull
pop
repz
lahf
test
sbbb
rorb
jg
cld
stc
or
sbb
push
aaa
mov
scas
jno
in
iret
lahf
aas
bound
xchg
and
cld
stc
repz
sarl
adc
outsl
ret
lahf
aas
jg
stos
sbb
fwait
xor
repz
outsl
mov
leave
pusha
ror
sarl
jg
lahf
sub
daa
cltd
add
in
jne
stc
repz
mov
popf
into
sbb
aam
jg
cld
xchg
mov
out
mov
in
lea
jg
rorl
call
loop
cwtl
push
cmp
out
lahf
aas
mov
add
stos
and
mov
pop
jg
bnd
jne
pusha
jne
add
or
add
enter
lahf
aas
pop
je
imul
jae
shrl
repnz
mov
shll
sbb
cld
stc
repz
fildl
enter
ja
pop
and
pusha
sti
outsl
and
xchg
jg
pop
jecxz
inc
call
rorl
cld
loope
mov
sbb
insb
jne
iret
lahf
aas
jg
mov
jbe
imul
or
dec
cld
stc
repz
xchg
rep
clc
mov
xchg
push
mov
or
lahf
aas
xchg
pop
mov
jnp
mov
stc
cld
stc
repz
aaa
dec
pop
js
mov
pop
xchg
lahf
aas
jg
xchg
jmp
cltd
iret
ja
mov
repz
rorb
xchg
daa
sbb
jbe
lods
aas
jg
cld
ret
test
sub
sub
iret
lahf
shr
mov
mov
daa
pop
push
jg
cld
stc
cmpsb
xchg
cmpsl
test
pop
enter
rcll
iret
lahf
aas
daa
sub
xchg
dec
inc
add
fs
cld
stc
repz
and
dec
jne
mov
mov
lahf
aas
jg
mov
xchg
data16
stos
movsb
or
repz
out
sub
pushf
dec
xor
pop
adc
xadd
jle
xchg
or
jl
js
int3
data16
lds
push
mov
out
lahf
aas
mov
ja
movsl
cwtl
jnp
fcmovne
rcr
cld
stc
repz
and
adc
dec
and
inc
jno
nop
iret
lahf
aas
jg
fistps
mov
cld
cld
stc
repz
cmp
loopne
out
lods
gs
jmp
aas
jg
and
add
sub
mov
lock
pop
dec
pop
mov
les
imul
test
mov
and
mov
repz
lahf
push
inc
dec
ja
push
sbb
xor
pop
jb
jg
cld
stc
hlt
push
loope
nop
push
or
test
ficoml
or
in
sub
lods
push
dec
addr16
repz
push
rcrl
es
popf
mov
mov
pusha
cmp
fwait
aaa
outsl
fsubrp
rolb
lds
add
mov
int
xchg
pop
imul
add
push
or
repnz
inc
aam
int
arpl
mov
inc
test
cld
jecxz
pop
sub
daa
int
pop
leave
fisttpll
push
sti
rorb
lahf
aas
jl
or
fwait
push
adcb
and
pop
xchg
mov
mov
inc
iret
lahf
aas
jg
fs
dec
cld
xchg
ss
add
adc
loopne
stc
repz
or
jle
lds
jmp
outsl
gs
cld
pop
leave
xchg
aam
loope
and
mov
nop
stc
mov
sbb
xchg
int
aaa
outsl
call
out
adcl
aam
and
adc
cmp
imulb
fwait
aaa
outsl
ficoms
jle
les
stc
adc
mov
jno
hlt
enter
sbb
lahf
jl
jns
out
sub
loop
sti
iret
mov
in
cmp
fsubrp
sti
imul
cmp
movsl
and
movsl
aas
sub
loope
cs
mov
adcb
aaa
outsl
fidivrs
pop
jno
xchg
std
xchg
je
push
aam
out
fwait
imul
jne
fidivrs
setp
mov
xor
jmp
int
aaa
jbe
ffreep
push
rcrb
pusha
push
mov
pop
fidivrs
sti
int
mov
jno
mov
int
aaa
outsl
jmp
mov
pop
add
sub
mov
int
fidivl
cltd
dec
ja
xor
imul
outsl
fidivs
mov
xchg
push
or
sub
aad
outsl
jns
out
mov
fcompl
cmp
pop
fidivrs
sub
mov
pop
sbb
or
mov
popf
dec
sahf
aaa
hlt
scas
sahf
sbb
call
ds
xor
cld
sbb
sub
adc
cmp
int3
shl
repz
lahf
aam
icebp
lret
outsl
daa
push
arpl
pop
pop
jg
cld
stc
loop
outsl
inc
dec
jbe
mov
push
lock
iret
lahf
aas
sbb
inc
mov
cld
stc
repz
jbe
jno
cld
mul
or
scas
xchg
xorb
pop
icebp
sub
ss
movsb
leave
stc
stc
repz
pop
fbstp
push
fs
les
jg
adc
adc
movl
lahf
mov
rclb
mov
cld
stc
pop
iret
or
sbb
jae
imul
imul
sub
repz
in
xchg
in
xlat
push
add
aad
jecxz
aad
lahf
aas
jg
sahf
dec
jmp
movsl
dec
xor
push
popf
xor
jbe
jecxz
cmp
pop
scas
rcrl
aas
jg
sbb
out
xchg
lds
pop
stc
repz
sbb
sbb
aas
aam
ljmp
cld
fs
nop
fbstp
or
aad
stc
xlat
dec
arpl
pop
cmp
in
lahf
aas
jg
add
push
enter
mov
out
mov
fdivs
inc
aas
or
cs
idivb
jg
cld
pushf
insb
push
cld
sub
cmc
cli
push
add
dec
inc
mov
sbb
sub
nop
mov
mov
stc
mov
push
xchg
inc
shlb
jns
xchg
mov
fneni(8087
jne
loopne
lea
pop
pop
flds
pop
push
push
cld
stc
repz
pop
inc
dec
mov
jp
push
add
mov
jg
xchg
iret
lahf
jg
add
add
in
aas
xchg
cld
stc
repz
icebp
stos
jnp
jp
push
das
pop
adc
mov
aas
jg
pop
ret
add
into
movsb
jecxz
cmpsl
jbe
enter
xlat
out
xchg
mov
inc
mov
sahf
hlt
rcll
icebp
and
jg
cld
adc
add
dec
pushf
pop
int
jg
or
out
lahf
ds
adc
inc
push
cmp
clc
jg
cld
stc
iret
imul
dec
inc
out
sub
mov
out
lahf
aas
dec
xchg
clc
cmp
mov
sub
sbb
inc
das
push
jg
jge
stos
mov
sub
stos
cld
stc
repz
cmp
xchg
jnp
loop
out
loopne
stos
mov
cmp
adc
in
outsl
lods
stc
sub
sar
repz
lods
or
jmp
xor
fiadds
cld
orl
dec
jno
stc
repz
dec
jo
es
imul
das
and
mov
pop
aas
test
iret
lahf
aas
jg
dec
cwtl
dec
cmp
clc
js
push
xchg
jmp
out
sub
ja
xchg
scas
inc
mov
jg
cld
stc
pusha
lds
pop
dec
inc
xchg
push
out
lahf
aas
pop
push
leave
dec
add
aam
cld
stc
repz
mov
leave
and
cltd
ret
lock
pop
aas
jg
jns
cli
xchg
iret
adc
mov
pop
sahf
mov
es
sub
mov
test
aaa
out
xchg
sbb
fwait
aaa
sbbb
adc
push
addb
aaa
push
and
pop
mulb
loopne
das
not
data16
push
divb
pop
push
and
imulb
sbbl
idivb
test
addb
pop
push
push
pusha
and
scas
testb
fists
push
bound
testb
scas
push
push
pusha
and
mulb
xchg
orl
sbb
ja
and
push
bound
mov
inc
testb
xchg
testb
xchg
pop
mulb
popa
and
xor
sbb
idivb
adc
adc
psadbw
xor
or
idivb
inc
and
notb
cmp
divb
divb
sub
divb
inc
push
imulb
mul
not
leave
inc
add
divb
idivb
negb
les
adc
pop
notb
rorb
or
mov
or
shl
imulb
notb
and
negb
cmpsl
xor
shl
testb
adc
add
xlat
mulb
xchg
adc
notb
testb
inc
or
idivb
test
inc
xor
imulb
sub
testb
movsb
or
fcomip
shlb
scas
xor
ret
testb
wrmsr
adc
add
iret
testb
add
testb
add
add
mulb
idiv
imulb
test
xchg
xor
or
idivb
adc
add
negb
into
xor
ja
notb
and
and
dec
scas
negb
sbb
pop
pusha
and
fs
mov
testb
and
iret
idivb
sbb
and
loopne
push
and
cmpsl
pop
push
and
aaa
imulb
mov
js
orl
orl
pop
add
sbb
xlat
out
idivb
adc
inc
mul
testb
or
ja
out
test
jo
lahf
imulb
add
adc
inc
testb
xor
imulb
add
idivb
or
xor
inc
notb
negb
adc
add
pop
divb
sub
xor
outsl
negb
xor
pop
test
and
pop
idivb
mulb
sbb
add
test
and
push
mulb
mov
pop
testb
and
or
push
divb
pop
negb
mul
testb
adc
not
les
adc
test
mov
add
das
xor
roll
testb
pop
testb
xchg
out
not
or
inc
lret
idiv
xor
leave
inc
imulb
xor
xlat
divb
add
lahf
divb
add
or
xor
iret
negb
mov
negb
add
or
pop
mulb
inc
rolb
testb
xlat
not
inc
int3
inc
int3
idivb
and
inc
ret
negb
roll
mulb
cmpsl
add
xor
test
adc
inc
and
testb
push
mov
add
add
ja
or
xor
not
notb
add
mov
test
add
xor
push
testb
xor
inc
negb
adc
inc
and
idivb
negb
testb
ret
inc
testb
inc
sub
inc
push
testb
adc
divb
pop
sarb
xor
outsl
testb
or
shl
imulb
neg
divb
add
cmpsl
imulb
add
ja
xor
adc
push
das
xor
or
ja
adc
add
ja
inc
add
mov
imul
xchg
adc
testb
add
testb
scas
addr16
les
ret
notb
inc
sub
idiv
testb
xor
negb
xor
les
test
pop
roll
imulb
cmpsl
add
xor
mulb
notb
leave
inc
or
testb
inc
xor
outsl
testb
psadbw
or
iret
imulb
xor
lret
neg
testb
add
or
xor
notb
mov
testb
add
div
pop
scas
rol
inc
enter
xlat
ret
shrb
test
out
xor
xor
mulb
pop
jg
pop
sub
mov
negb
xor
divb
aad
add
or
arpl
imulb
mul
testb
les
testb
enter
jg
jo
add
inc
imulb
div
idivb
inc
and
notb
neg
not
or
out
xor
push
into
arpl
sti
sub
div
cmp
xor
rcrb
notb
loopne
inc
push
bound
jg
xchg
push
bound
idivb
or
or
negb
orl
mulb
and
loopne
push
testb
aas
testb
popa
and
sbb
das
bound
bound
cmpsl
neg
adc
push
test
testb
add
add
pop
imulb
inc
add
test
aas
xor
mov
movl
xchg
inc
int3
inc
or
notb
ret
inc
int3
mulb
xchg
xor
div
add
testb
adc
inc
and
testb
mov
divb
idivb
test
adc
add
jg
popl
add
xor
push
xchg
add
xor
not
notb
ret
inc
sub
notb
negb
lsl
xor
notb
sub
testb
rorb
negb
adc
sbb
pop
in
outsl
lods
testb
mov
ja
addb
sbb
sbb
inc
js
and
imul
mul
add
and
testb
cmpsl
notb
sbbl
sbb
addb
sbbl
negb
pusha
and
loopne
push
divb
data16
push
push
bound
and
negb
adc
idivb
negb
testb
lahf
negb
cmp
adc
lahf
addb
out
sub
negb
mulb
adc
mov
notb
mov
mulb
push
div
aas
xchg
addl
prefetcht0
testb
push
and
mov
notb
negb
testb
pop
div
test
mov
sub
loopne
loopne
inc
les
adc
pop
loopne
add
pop
negb
xor
ret
idiv
nop
sbb
inc
pop
dec
inc
add
out
imul
add
sbb
testb
push
mov
and
not
xor
add
test
add
notb
xor
and
imul
test
xor
pop
testb
lret
notb
and
xchg
aaa
testb
repz
xor
and
inc
test
shlb
adc
inc
testb
outsl
mul
notb
negb
xor
sub
testb
adc
div
mov
xor
inc
inc
xor
xor
aas
notb
negb
push
add
xor
divb
notb
leave
inc
add
mulb
ret
xor
mov
inc
and
les
inc
les
adc
mulb
cmpsl
and
xor
psadbw
add
notb
leave
inc
or
testb
lahf
mulb
xor
inc
test
add
testb
and
divb
idivb
imulb
testb
rol
aas
testb
div
daa
or
xor
notb
testb
pop
notb
notb
pop
add
nop
outsl
mov
ret
loopne
pusha
loopne
testl
xlat
testb
sbb
and
adc
mov
out
das
addb
out
dec
pusha
and
idivb
test
xchg
adcl
inc
push
dec
pusha
and
jg
push
bound
bound
negb
mulb
and
testb
xchg
cmpsl
pop
and
bnd
divb
bound
mov
imulb
adc
test
orl
negb
sbb
out
not
pusha
and
and
push
bound
imulb
push
push
popa
divb
js
notb
testb
call
fcomip
das
sbb
mul
push
push
and
notb
xchg
adcl
pop
sbb
pop
sbb
sbb
xor
push
and
bound
bound
outsl
idivb
orl
push
bound
not
mulb
sbbl
xlat
mul
mulb
cmp
and
push
idivb
pop
aaa
imulb
idivb
nop
xor
pop
dec
push
mulb
bound
data16
dec
sbb
push
testb
orl
notb
push
push
xorl
and
xchg
orl
out
and
negb
push
bound
imulb
xchg
xor
push
es
cvtdq2ps
es
push
xchg
mov
push
ja
adc
test
loopne
and
dec
testl
and
iret
testb
inc
xlat
ljmp
pop
ret
cmp
sbb
cld
push
jnp
cltd
xor
popa
mov
clc
inc
repz
lahf
push
cs
mov
jbe
test
mov
sub
cmpsb
mov
loopne
or
or
cs
enter
adc
mov
jb
cld
stc
repz
stc
and
dec
mov
icebp
sahf
fbstp
js
add
je
sbb
push
cli
adc
jne
stc
repz
or
push
inc
inc
mov
stos
pop
push
lahf
aas
jg
mov
lods
jge
inc
insb
ror
dec
stc
repz
icebp
pushf
cli
and
mov
scas
lahf
lahf
aas
jg
les
lret
aas
mov
ret
stc
repz
xchg
or
mov
fstl
in
mov
aas
jg
cld
rclb
jnp
insb
aad
sahf
lds
aas
cs
xlat
icebp
leave
iret
lahf
adc
sbb
push
test
cli
out
or
push
faddl
loopnew
add
ficoms
inc
fisubs
pop
out
in
fstpl
insb
mov
lret
les
adc
inc
lahf
cld
ficoms
dec
out
shlb
incl
push
ret
fidivrs
xor
cli
inc
adc
mov
insl
enter
cmp
cmp
sub
mov
scas
stos
jg
cld
jmp
adc
cmpsb
jecxz
call
je
push
out
lahf
aas
or
cltd
arpl
sti
mov
cld
stc
repz
jmp
movsb
jbe
outsb
fs
lahf
aas
jg
pushf
dec
push
xor
sbb
cld
stc
repz
sub
dec
xor
flds
aas
jg
inc
push
sbb
mov
add
inc
fidivrl
pushf
xor
pop
movzwl
sbb
mov
cld
adc
fucomi
bound
dec
jecxz
fwait
aas
repz
lahf
cmp
ljmp
jg
cld
stc
jnp
call
pop
aad
mov
and
lahf
aas
fs
std
jb
notl
stc
repz
stos
mov
outsb
and
xlat
xchg
mov
sahf
es
test
push
repz
mov
push
sbb
or
xchg
mov
dec
xchg
push
outsb
inc
lahf
enter
lahf
inc
repz
xchg
incb
enter
cmp
daa
xorl
leave
das
mov
es
out
dec
pop
shlb
std
movsb
add
mov
cmp
lcall
jns
xchg
push
cmp
mov
aaa
outsl
aas
gs
inc
aaa
ret
mov
xchg
mov
out
sbb
icebp
push
push
aaa
outsl
fisubs
sbb
dec
iret
push
dec
and
add
jmp
shlb
mov
sbb
sti
xor
mov
fnstcw
les
int
aaa
out
addr16
stos
iret
jnp
pusha
iret
and
jns
out
adc
mov
cltd
mov
cmp
rcll
fldt
dec
dec
lods
addr16
out
mov
push
mov
push
movsb
mov
fidivrs
popa
sbb
gs
push
repz
fwait
sti
hlt
and
mov
cmp
addr16
pop
sbb
or
or
xlat
mov
mov
cld
stc
repz
pop
jmp
cltd
loop
iret
sub
xor
mov
iret
lahf
aas
jg
hlt
sti
icebp
lret
jge
pop
add
inc
dec
cld
stc
repz
xchg
and
ljmp
stc
in
lahf
aas
jg
loop
sub
mov
inc
shrb
mov
imul
out
sub
imul
mov
in
aas
jg
cld
js
mov
sbb
js
sahf
imul
repz
lahf
repz
mov
idiv
or
adc
cld
stc
inc
mov
cs
test
icebp
repz
scas
daa
loopne
lahf
aas
jb
aam
jo
add
repz
out
and
jnp
int3
push
xchg
aaa
outsl
ficoms
sbb
xor
xchg
sbb
mov
and
mov
test
jbe
in
jle
test
lods
mov
cmpsb
cld
mov
repz
sbb
xchg
sub
or
ret
dec
push
push
jns
sbb
cmpsb
sub
push
lock
push
or
mov
iret
mov
out
cld
stc
repz
push
out
fwait
jmp
mov
and
jg
sbb
inc
imul
adc
stc
adc
jo
ror
adc
push
cld
imul
push
adc
in
int
fwait
aaa
shl
daa
adc
sbb
mov
mov
push
inc
test
fwait
add
bound
sub
and
out
mov
ss
add
movsb
fwait
aaa
outsl
fimuls
cltd
adc
sbb
shll
jne
ljmp
lods
lock
in
and
push
lock
int
aaa
outsl
fbstp
in
push
fdivrl
sub
jns
out
mov
sbb
popf
rolb
shlb
fiadds
inc
pop
insb
pop
std
or
sbb
adc
out
fwait
mov
dec
inc
push
aas
jno
decb
pop
pushf
pop
push
cmp
shlb
int
aaa
push
xchg
xor
mov
dec
mov
es
call
mov
cltd
mov
aas
addl
jne
jecxz
in
mov
out
push
lea
out
stos
mov
sbbl
pop
je
ja
das
jp
outsl
fidivrs
or
inc
fxch
add
out
fwait
cmp
aad
fists
test
pop
fnstcw
and
jmp
sub
mov
pop
pop
outsb
out
cwtl
push
subl
aas
jg
cld
pop
and
sbb
push
repz
and
cltd
push
mov
mov
loope
inc
stos
adc
icebp
jg,pt
cld
popf
pop
out
je
mov
repz
out
dec
pop
loop
inc
scas
xlat
pop
xchg
mov
cli
movsl
push
mov
in
aad
or
out
inc
pop
dec
iret
lea
std
or
lea
testb
mov
aas
cmp
movsb
xor
ffree
lahf
cld
cld
stc
repz
loope
pushw
dec
cmp
push
sub
fiadds
sub
fildl
push
int
aaa
outsl
pop
pushl
ror
stos
mov
mov
add
pop
repz
inc
sub
fidivs
push
push
out
scas
out
jns
out
ds
ret
outsb
cmp
or
push
lods
mov
push
mov
fcomp
mov
cld
stc
or
imul
cmpsl
xchg
sahf
shlb
aas
push
cltd
sbb
and
push
imul
popf
aas
out
jno
repnz
dec
imul
js
mov
and
mov
jbe
mov
insb
sub
inc
scas
mov
add
int
mov
movb
jg
cmp
aaa
outsl
fidivrs
xor
fldl
ja
xchg
dec
ljmp
push
repnz
jbe
mov
lahf
aas
jg
add
lahf
lods
mov
mov
lret
stc
repz
gs
sub
pop
jo
and
sub
aas
jg
cld
sahf
xchg
dec
mov
mov
mov
inc
int
aaa
outsl
pop
xor
push
add
push
lea
or
pop
pushf
mov
jns
out
add
ss
sar
fs
sbb
pop
scas
insl
inc
insl
mov
repz
fwait
adcl
mov
loop
adc
mov
inc
or
subl
mov
int
aaa
inc
sub
scas
mov
cwtl
inc
add
aas
jg
jno
leave
fisttps
mov
dec
repz
lahf
stos
dec
xchg
cltd
negb
sub
jg
cld
stc
add
pop
aas
fwait
mov
mov
sub
lahf
aas
ljmp
faddl
aaa
outsl
fiadds
cs
push
fadd
aad
repz
fwait
and
mov
or
jns
inc
mov
sub
sub
ljmp
fwait
aaa
and
test
fidivrs
or
sub
xor
fwait
aaa
outsl
mov
add
int3
push
or
movsl
stos
cmp
out
cmc
fcmovne
iret
pop
ja
xchg
iret
aaa
outsl
fidivrs
in
out
xchg
add
repnz
or
out
fwait
mov
cmp
and
lea
mov
xchg
lods
loopne
insl
jmp
inc
andl
and
xchg
aam
inc
pop
fs
iret
lahf
aas
jg
and
aad
sbb
sti
in
cld
stc
repz
adc
pop
inc
dec
popf
out
adc
aam
pushf
lahf
aas
jg
xlat
test
add
fwait
sub
repz
add
shll
and
mov
stc
cld
adc
call
fwait
aaa
shlb
dec
outsl
bound
adc
mov
xchg
jns
out
imul
ss
mov
sub
add
mov
outsl
fidivrs
daa
pop
imulb
sahf
jno
stos
mov
adc
fidivrs
fstcw
movsb
fdivr
popf
mov
mov
lret
aaa
and
or
dec
xchg
out
ret
stc
repz
aad
xor
lahf
or
lahf
aas
jg
sahf
sub
sbb
das
pop
xor
stc
repz
jb
sbb
xor
mov
lahf
aas
jg
xor
aam
lods
out
imul
test
xlat
test
iret
shrb
push
xor
dec
pop
mov
stc
stc
scas
aam
mov
jecxz
pushf
inc
xorl
fidivrs
jns
sub
jns
int
mov
scas
loopne
fwait
pop
scas
fisttpl
fidivrs
mov
cld
mov
sub
adc
aam
aaa
outsl
inc
fisttpl
shrl
aaa
mull
adc
inc
fidivrs
xor
inc
sbb
inc
std
add
ss
aas
imul
xchg
shl
inc
hlt
sbb
jnp
lcall
xchg
add
out
fistps
ljmp
bound
mov
push
xor
cmpsb
xchg
repz
fwait
shrb
sub
fsubrp
mov
fidivrs
or
ss
mov
sti
out
fwait
aaa
outsb
lret
or
popf
icebp
nop
mov
push
in
nop
mov
out
sub
iret
mov
scas
insb
fdivp
repnz
sub
test
cld
stc
repz
fstps
sti
jo
test
faddl
negb
aas
jg
push
jnp
popa
lds
add
stc
repz
xchg
imul
pusha
lods
push
lahf
aas
jg
xchg
dec
test
or
mov
lods
lret
mov
cmp
mov
test
int
aaa
push
cwtl
cmp
inc
xor
adc
mov
sbb
pushf
imul
push
loop
mov
pop
inc
fiadds
outsl
adc
das
mov
nop
adc
lcall
dec
push
stos
add
dec
fmuls
cmp
jb
mov
out
ss
and
push
ljmp
lahf
aas
ja
cmpsl
daa
adc
push
iret
scas
add
cld
stc
repz
cmp
lcall
jp,pt
push
dec
and
jg
mov
sub
enter
ja
pop
push
cmp
cmpsl
adc
lods
movsl
jns
out
aad
push
and
adc
call
mov
test
or
jb
dec
fwait
ja
xchg
data16
hlt
icebp
xchg
dec
jns
out
insb
mov
inc
pop
or
shlb
aaa
outsl
fidivrs
ss
dec
out
xor
mov
dec
repz
fwait
xor
jns
mov
jecxz
xchg
fnstcw
dec
outsb
adc
push
repnz
outsl
fiadds
or
mov
xchg
and
cmc
mov
out
int
out
sub
call
les
mov
dec
adc
sahf
outsb
lds
flds
xchg
mov
dec
and
add
in
iret
and
rol
mov
jo
iret
lahf
aas
jg
stos
ficompl
scas
gs
xor
cmp
sbb
es
test
fiadds
test
inc
cmpsb
or
pop
cmp
int
int
lret
int
xchg
out
fs
lcall
mov
test
dec
cmp
ljmp
arpl
inc
nop
test
jg
cld
stc
repz
movsl
and
and
xchg
push
xor
aas
jg
insb
xchg
adc
lock
shlb
repnz
jnp
sbb
inc
andl
out
jne
xchg
ja
push
xchg
ja
outsl
fidivrs
mov
outsl
in
jnp
inc
je
out
fwait
aaa
mov
mov
ret
dec
pop
fidivrs
cvtsd2si
enter
lahf
call
fwait
aaa
outsl
ljmp
pop
xchg
jns
out
pop
jmp
out
cmc
cwtl
iret
lcall
ficomps
fwait
sbb
inc
addr16
icebp
sbb
repz
sbb
mov
add
mov
imul
inc
xchg
mov
inc
pop
insl
lret
iret
mov
pop
fistps
aas
in
stc
inc
loope
sub
inc
jg
fucomp
jmp
adc
xchg
adc
and
sbb
cltd
cwtl
stc
repz
subb
mov
xchg
call
cld
dec
xor
cmp
mov
das
inc
rclb
cwtl
outsl
aas
jg
rolb
mov
mov
jecxz
jg
repz
xchg
push
mov
push
mov
and
mov
roll
in
or
adc
fwait
aaa
out
subb
pcmpgtw
push
mov
jb
out
or
sbb
sbb
add
aas
jg
sub
pop
scas
shlb
sti
or
iret
lahf
nop
outsl
xchg
and
mov
inc
cmpsl
popf
adc
hlt
sub
insb
mov
sbb
leave
iret
lahf
mov
fildl
lret
test
cmpsl
or
xlat
sahf
inc
pop
sub
push
adc
nop
jg
push
and
xchg
or
out
fwait
mov
int3
stc
jne
jmp
imul
mov
xor
sbb
scas
out
fwait
aaa
and
xor
mov
xor
mov
loopne
push
cmc
enter
pusha
je
pusha
push
xor
int
aaa
outsl
repnz
jno
cmpb
xor
jp
sub
test
ja
aaa
outsl
fisubs
mov
mov
imul
out
scas
int
loopne
sti
ss
addr16
cli
cwtl
imul
in
out
mov
daa
leave
mov
xlat
lahf
push
mov
outsl
fisubs
mov
cmp
jle
fmuls
and
jge
repz
shrl
push
cwtl
outsl
fidivrs
out
in
repnz
out
mov
aaa
icebp
data16
test
sub
or
jns
dec
lahf
popw
icebp
xchg
mov
fwait
aaa
outsl
xor
jge
mov
mov
jns
out
repz
jns
cli
repz
icebp
sub
insl
fwait
aaa
outsl
fimuls
repz
jp
pop
lds
testb
or
xchg
int
inc
fwait
pop
jb
bswap
lahf
aas
hlt
mov
and
pop
dec
test
mov
stc
repz
jnp
fistpl
push
push
js
aaa
jle
aas
jg
scas
sub
inc
cmp
lock
iret
mov
aam
out
ja
pushf
outsl
outsl
fidivrs
push
addb
push
jb
xchg
int
aaa
xchg
jns
pop
mov
cmp
jmp
out
lock
xor
daa
rorb
and
fildl
jae
cltd
insb
jns
cmp
aas
pushf
lds
pusha
repnz
aaa
outsl
iret
test
and
sub
cmc
sub
mov
mov
ds
sahf
xchg
sbb
test
outsl
fidivs
pop
and
out
mov
jae
insb
ljmp
fidivrs
and
loope
lds
out
fwait
aaa
outsb
mov
and
loopne
stos
out
mov
cmpsb
test
leave
cld
cmp
int
aaa
outsl
outsl
add
inc
jmp
inc
xchg
shr
movsb
mov
jns
out
mov
mov
jae
sub
aas
lcall
xorl
and
loop
stc
repz
lds
mov
outsb
mov
mov
incl
mov
aas
jg
cld
insb
cmp
int3
add
sbb
mov
push
jmp
out
fwait
xor
sbb
dec
cmp
outsl
fidivrs
lret
push
cmp
mov
ss
fwait
aaa
out
icebp
mov
xchg
scas
into
fidivrs
inc
call
cwtl
mov
dec
stc
fcmovb
int
aaa
outsl
cmp
cs
ljmp
movlps
xchg
mov
cmpsb
dec
nop
ljmp
mov
outsl
ficoms
icebp
repz
sbb
dec
mov
jb
out
push
cmp
and
mov
push
jle
aas
jg
div
jg
test
adc
xchg
stc
repz
mov
ffreep
fsts
or
push
inc
call
mov
std
push
in
fcomps
loope
xchg
lahf
or
xor
fdivrs
cld
inc
pop
ja
xchg
mov
inc
pushf
fmuls
aaa
nop
lods
outsb
fidivrs
adc
jb
movsl
enter
fildll
push
sbb
cs
shlb
jg
and
mov
jl
jns
mov
jne
xchg
add
mov
repnz
rol
or
hlt
mov
push
bound
xor
test
test
xchg
bound
imul
vminps
and
lcall
cld
stc
repz
movsl
jo
stc
jbe
xchg
xor
out
loopne
xchg
jg
paddd
push
cld
stc
repz
movsb
jo
enter
adc
loope
lahf
aas
jg
dec
adc
push
call
repz
mov
xchg
mov
xchg
mov
xchg
inc
jle
dec
pop
sahf
nop
icebp
pop
jb
mov
add
aad
jle
sbb
mov
repz
loop
sub
jb
pop
mov
adc
aaa
outsl
fidivrs
lea
add
leave
xchg
enter
sbb
jg
mov
sub
pop
mov
jmp
sub
sahf
ljmp
mov
loope
fs
and
out
jle
mov
fnsave
pop
scas
mov
aaa
outsl
fidivrs
sbb
das
mov
shl
int
add
ds
add
mov
mov
xor
sbb
dec
aaa
xchg
imul
jmp
dec
push
outsb
outsb
jp
jp
repnz
notl
out
outsl
in
test
and
insb
add
cmpsl
negb
lods
add
mov
out
loopne
out
push
xchg
xchg
jp
fmull
push
mov
stc
inc
mov
cli
mov
sub
movsb
pop
lret
lahf
aas
jg
outsl
mov
dec
fistpll
movsl
lds
stc
repz
arpl
and
jae
out
cs
sahf
pmaxub
lahf
aas
pop
stc
loopne
nop
mov
lea
push
stc
repz
or
dec
xor
cmp
jg
cld
in
shr
mov
js
inc
push
les
jl
leave
out
lahf
cmp
dec
pop
xchg
jae
or
iret
jns
es
test
mov
jne
jne
mov
outsl
fidivrs
push
cmc
mov
xor
repz
ficoml
xor
inc
mov
fidivrs
dec
mov
xchg
jp
lds
jmp
loopne
outsb
push
mov
sub
sub
sbb
dec
push
cwtl
scas
dec
aaa
outsl
fiadds
adc
jle
icebp
in
sbb
int
int
jo
insl
sbb
push
push
or
orl
imul
scas
mov
aad
aaa
outsl
fisubs
rclb
cmc
cmp
pusha
jl
ret
and
mov
fdivr
sbb
pop
aas
adc
sahf
add
and
int3
sti
lcall
pushf
lods
das
mull
scas
sbb
int
aaa
dec
ret
sub
arpl
out
jns
out
es
mov
ret
jl
int
fbld
fsubp
inc
xorb
shlb
inc
mov
jno
repz
lret
js
fsubs
mov
cli
rclb
fidivrs
stos
jbe
cmpsb
repz
out
fwait
insb
outsl
xor
int
ror
outsl
fidivrs
xor
jne
inc
pop
in
and
int
aaa
movb
mov
adc
sbb
jns
sbb
jne
cmp
mov
inc
inc
int
aaa
outsl
push
out
stc
cmp
repz
stos
sbb
mov
nopl
inc
outsb
ficoms
mov
adc
out
pop
out
mov
mov
sbb
jg,pt
cld
stc
jns
mov
add
xor
cmp
dec
jb
ret
out
out
lahf
aas
es
addr16
movsl
ret
popf
or
ds
stc
repz
sti
jle
push
mov
hlt
sbb
xlat
mov
cmpsl
add
je
cmp
aaa
les
aaa
cltd
in
push
mov
jae
rclb
fwait
aas
push
out
sbb
in
xlat
dec
mov
jno
scas
int
aaa
outsl
and
add
pop
push
xor
ret
in
sahf
mov
mov
repz
pop
cmp
sbb
mov
mov
xor
push
stc
repz
loopne,pt
pop
movsl
mov
stc
push
movsb
call
cld
sub
jno
add
decb
out
add
out
lahf
inc
pop
jl
mov
or
jo
aas
stc
cld
stc
sti
jbe
mov
in
or
cmp
stc
add
add
sahf
sub
dec
mov
mov
aas
jg
idivl
inc
testl
stc
repz
sbb
scas
clc
stos
faddl
lea
imull
das
mov
jae
repz
xchg
jne
or
jno
cmp
loope
stc
shl
cld
mov
lods
std
bound
xchg
xorb
sub
adc
mov
nop
sbb
mov
adc
repz
fwait
in
enter
fs
negl
mov
jg
dec
sub
jbe
aaa
cltd
add
fwait
aaa
scas
call
mov
or
clc
enter
data16
jmp
out
add
lcall
mov
xor
xor
adc
stos
push
sub
fsubl
iret
push
jg
aam
xchg
dec
and
mov
in
xchg
mov
cwtl
js
les
jns
jns
xor
pop
xchg
mov
out
lds
outsl
dec
adc
dec
pushf
fbld
repz
pop
jle
sub
mov
movsl
and
mov
fidivrs
stos
leave
in
lods
ljmp
int
gs
movsb
aad
mov
fidivrs
flds
dec
outsl
jg
pop
iret
xchg
cld
addl
or
popa
pop
adc
out
out
lahf
aas
jg
mov
xchg
xchg
dec
adc
scas
and
inc
repz
insb
mov
mov
clc
int3
scas
dec
dec
inc
repnz
cld
xor
xor
into
dec
mov
mov
jg
cmp
jmp
pop
push
fcoml
xchg
push
rcrl
inc
fidivrs
lock
mov
fwait
aaa
outsl
fimuls
adc
sub
inc
ljmp
loopne
dec
inc
pop
fildl
and
push
ret
jns
out
js
inc
sbb
test
and
cmp
mov
or
out
push
inc
in
xchg
lcall
push
jmp
ret
lea
jns
cmpsb
outsl
xchg
test
js
ss
lods
jb
pop
ds
outsl
fidivrs
xor
mov
push
cs
pop
fs
push
mov
fs
aas
repz
xchg
insb
fidivrs
out
xor
mov
orl
shll
lahf
aas
jg
cmp
je
cmp
push
cld
stc
repz
mov
lret
xor
pop
mov
daa
aas
jg
leave
push
in
and
inc
dec
ret
mov
fst
testl
jo
fldt
mov
jb
aam
in
pop
mov
popf
and
fwait
aaa
insl
sbb
and
imul
outsl
fidivrs
lods
xchg
in
es
cmpsl
movsl
out
fwait
aaa
clc
or
jno
pop
mov
xor
repz
add
and
sub
ja
pop
add
addb
aaa
cwtl
xlat
orl
push
es
cmpsb
out
fwait
aaa
push
cmc
rorb
fidivrs
in
push
xchg
push
xchg
xor
mov
loopne
fwait
aaa
outsl
test
add
or
jns
out
mull
rep
out
and
mov
dec
dec
xor
gs
xor
inc
inc
cld
stc
rep
push
mov
adc
aam
lea
cmp
sti
pop
xchg
outsb
shll
repz
loop
pop
inc
lock
pop
pop
jbe
pop
aaa
outsl
fidivrs
sbb
mov
sti
cmp
int
push
out
xor
daa
mov
lods
xchg
aas
jg
aaa
cmpsb
into
sti
pop
push
fcmovnu
sbb
cld
stc
jg
aas
jle
fs
xor
cmc
push
push
ljmp
fwait
sub
add
fnstsw
jns
push
push
addr16
mov
pop
outsb
aaa
outsl
fidivrs
arpl
ret
pop
imul
inc
ss
xor
lcall
outsl
fidivrs
jp
xor
lret
leave
out
ja
xchg
add
adc
fidivrs
inc
xchg
adc
push
cli
jne
stos
movsl
nop
aaa
push
int
aaa
outsl
aad
rol
gs
lods
pop
mov
repnz
loop
jmp
aaa
out
or
xlat
das
in
push
xor
xchg
fwait
repz
and
xor
inc
or
cmp
out
fwait
ja
std
dec
xchg
cmp
pop
fdiv
adc
mov
enter
outsl
fidivs
inc
arpl
cmc
mov
adcl
into
fcoms
out
subb
hlt
insb
mov
mov
inc
aaa
outsl
fidivrs
or
sahf
pushf
dec
xchg
js
enter
test
cmpsb
push
inc
shlb
cmp
scas
mov
lea
mov
sub
pop
lahf
int3
out
and
inc
push
out
fwait
aaa
leave
mov
mov
push
aam
pop
fidivrs
pop
dec
test
imul
pop
jmp
sub
pop
xchg
inc
sbb
xchg
dec
jns
jne
pop
fisubrs
and
sub
and
fidivrs
les
cmp
incl
fwait
pop
jnp
sub
js
sub
push
push
pop
popa
mov
in
push
add
push
xchg
aaa
outsl
adc
into
dec
add
int
aaa
pop
fcoml
jae
push
fldcw
mov
mov
scas
mov
scas
ret
out
fwait
aaa
sub
repnz
test
pop
aad
mov
push
dec
inc
test
or
mov
fwait
aaa
outsl
in
push
lea
inc
push
add
pusha
cmp
repz
in
out
inc
push
and
out
lahf
jg
cli
ret
sbb
add
outsl
repnz
stc
repz
in
dec
mov
repnz
scas
jbe
push
repz
shll
cmp
das
pop
and
fidivrs
mov
loopne
shlb
mov
loopne
fwait
aaa
push
int
inc
and
scas
dec
stos
bound
xlat
mov
pop
out
inc
ficoms
addr16
mov
stc
repz
cmpsb
call
jmp
call
sbb
lahf
aas
jg
dec
lret
xchg
negb
cli
into
stc
mov
repz
mov
sub
jae
in
mov
jg
jb
inc
dec
dec
cmc
faddl
aaa
out
or
in
mov
ds
fwait
sbb
fs
movsl
lret
xor
outsl
fidivrs
push
test
stos
mov
stc
ret
inc
ss
in
ret
pop
aas
jo
aas
pop
inc
jle
cld
enter
out
xlat
xor
stos
hlt
mov
out
lahf
push
mov
imul
stc
repz
bound
lahf
addr16
jne
or
dec
jo
xchg
lahf
aas
jg
mov
add
ljmp
daa
out
es
fidivrs
xor
das
sbb
mov
out
fwait
add
aad
mov
lock
movsl
outsl
fidivrs
lock
and
lea
mov
out
fwait
aaa
fistl
shll
addb
aas
ss
mov
ja
cmp
dec
mov
rolb
aaa
outsl
mov
adc
push
and
or
out
fisttps
rolb
fnstcw
and
stos
mov
fxam
push
loop
push
int
aaa
out
mov
inc
adc
mov
je
push
clc
enter
aad
jae
les
fidivrs
dec
pop
lock
mov
mov
mov
int
aaa
outsl
loopne
push
cmc
jmp
in
icebp
out
mov
jns
out
mov
mov
cmc
mov
ficoms
adc
xor
mov
mov
repz
xchg
sbb
hlt
mov
mov
testl
and
fwait
mov
outsl
fisubrs
sbb
mov
fsubs
mov
xchg
pop
push
push
bound
test
negl
mov
jge
xor
mov
or
rolb
or
outsl
inc
shll
inc
adc
test
mov
mov
sub
dec
pop
mov
es
pop
lret
aas
aaa
outsl
fsubrp
daa
push
push
lret
outsb
int
xchg
int3
ficoml
mov
int3
xchg
mov
sub
lahf
sub
popa
cmpb
cmc
enter
xchg
inc
push
lock
fildll
mov
push
loop
xor
sahf
popa
sbb
fwait
aaa
movsl
adc
jle
jp
sarl
jns
mov
fisubl
push
test
xchg
outsl
jno
push
ds
pushf
pop
push
jl
jns
out
mov
lea
adc
movb
outsl
fdivp
dec
aam
dec
and
push
repz
lcall
mov
arpl
aaa
outsl
fidivrs
setns
mov
jno
int
std
test
data16
jae
aas
jg
inc
into
in
push
adc
leave
ss
pop
int
stc
repz
fwait
outsb
ss
in
lods
inc
inc
pop
mov
adc
add
add
mov
fidivrs
sub
inc
mov
lret
mov
repz
fwait
cmp
inc
pop
jb
mov
arpl
fidivrs
sbb
or
lret
stos
roll
xchg
fwait
aaa
sti
nop
and
lock
dec
fwait
jle
or
aaa
popf
sub
mov
lcall
push
pusha
adcb
insb
incb
xchg
mov
jge
push
ljmp
aas
cld
stc
repz
jae
adc
ljmp
rcrb
aas
jg
mov
movsb
dec
mov
push
aas
nop
add
add
out
lahf
aas
pop
push
gs
sbb
imul
stc
repz
jg
mov
scas
fcomps
out
push
in
xchg
aas
jg
add
fbstp
jmp
adc
fdivrs
cmp
out
lret
aaa
lahf
pop
or
mov
add
in
fwait
aaa
outsl
and
jns
xor
or
int
shll
test
push
sbb
insl
aaa
outsl
fidivrs
cmpb
mov
int
sbb
mov
les
repnz
pop
lahf
jg
jb
cmp
pop
mov
push
out
iret
loopne
cmp
xchg
add
mov
mov
cld
hlt
jecxz
push
loope
sahf
pop
jo
pop
repz
call
dec
aas
xor
dec
pop
fnstcw
out
scas
rorb
arpl
ss
stc
repz
mov
pop
sahf
mov
ss
push
pop
and
adc
idivl
cld
stc
orb
je
inc
xchg
jecxz
mov
or
popf
push
mov
jecxz
jne
add
stc
repz
int
mov
lcall
mov
cmp
pop
mov
outsb
inc
push
leave
sbb
inc
dec
lcall
dec
pop
aaa
lret
jmp
mov
add
loope
pop
cmc
sbb
das
out
fwait
aaa
inc
rorl
mov
aas
lcall
ret
scas
cwtl
test
std
push
pop
push
fwait
aaa
inc
pop
mov
xchg
lahf
or
jb
in
int
dec
mov
int3
cltd
in
into
repz
mov
std
aad
dec
lea
mov
mov
leave
xchg
dec
inc
movsl
or
loop
fdiv
aaa
out
andb
icebp
dec
fs
and
xchg
push
mov
mov
dec
inc
int
in
sub
mov
jecxz
xor
lahf
repz
pop
jno
stos
push
cmpsl
adc
mov
inc
jg
cld
stc
mov
ljmp
add
sarl
in
ret
mov
sub
enter
ret
cwtl
shl
mov
bound
popf
aad
xchg
inc
fst
stc
repz
dec
outsb
hlt
push
popf
inc
lea
add
pop
mov
aas
jg
cld
add
mov
sahf
inc
jne
stos
inc
pop
cltd
stc
push
test
inc
mov
mov
aas
jg
cld
popa
pop
push
sub
pop
lock
add
mov
mov
shll
dec
inc
arpl
out
cs
test
pop
gs
mov
popa
dec
lret
loop
into
stos
daa
aaa
outsl
pop
add
fwait
add
push
imul
arpl
repz
daa
dec
mov
adc
testb
out
mov
lret
lock
mov
clc
subb
push
pop
icebp
cmp
fsubrs
mov
divl
pop
jno
cmpsl
repz
sbb
lods
fisttpll
jg
ja
push
insb
adc
outsl
fidivrs
int3
push
test
dec
push
out
fwait
aaa
xchg
xchg
jns
test
mov
jns
jle
dec
push
sbb
jne
xlat
or
aaa
outsl
insl
jp
imul
mov
cmp
mov
enter
push
pop
pushf
fwait
aaa
outsl
faddp
pushf
repnz
push
pop
mov
mov
int
pushf
inc
xchg
popa
cmpsb
mov
jns
into
shrl
lds
pop
push
sarb
or
fs
lahf
aas
mov
pop
mov
pop
inc
repnz
jbe
jbe,pt
ja
inc
je
inc
jle
cld
into
cmpsl
dec
sbb
cmp
fcmove
insb
mov
cmpsl
jl
mov
arpl
arpl
aam
or
jl
or
inc
aad
mov
jo
repnz
js
imul
cmp
mov
out
fwait
aaa
aaa
scas
out
rcr
and
sub
test
repz
or
sub
out
push
adc
ret
outsl
ss
cmc
shr
pop
adc
aaa
out
mov
inc
in
aam
sub
repz
fwait
pop
mov
inc
jmp
lods
outsl
fidivrs
mov
and
int3
push
enter
sbb
cmp
push
pop
push
cmpsl
push
sbb
popl
stos
jb
aaa
adc
jmp
xchg
mov
sbb
dec
arpl
sub
mov
jg
xchg
scas
in
sbb
aas
fcmovbe
add
jne
repz
lahf
cld
es
mov
add
decb
jg
cld
stc
pusha
push
xchg
out
and
cli
in
popf
cmpsb
test
out
lahf
aas
stos
cmpsl
into
cmp
je
xchg
cmpsb
ja
xchg
cld
stc
repz
xchg
push
mov
adcl
iret
lahf
aas
jg
fnstenv
sub
addr16
stc
repz
adc
adc
mov
xor
inc
jle
out
add
add
pop
sbb
jb
pop
cld
stc
repz
inc
dec
daa
push
sub
mov
xchg
mov
loop
jo
add
nop
xlat
add
iret
subl
jno
pop
neg
enter
cld
pop
aaa
cmp
jnp
push
sbb
iret
popa
jl
sbb
pop
mov
mov
cld
orl
cmp
insl
addr16
in
enter
inc
or
nop
shll
out
lahf
jg
jne
adc
adc
repz
daa
mov
mov
jne
test
fsubr
jns
out
mov
or
add
movsl
aaa
outsl
fidivrs
sub
dec
sbb
push
fwait
in
arpl
xchg
pop
cld
stc
repz
add
sti
and
cmp
sbb
insb
dec
in
out
add
cld
stc
pop
cltd
or
jl
out
aad
inc
ret
iret
lahf
aas
jg
les
mov
jp
add
stc
repz
dec
scas
dec
jle
test
mov
and
jg
loope
rcr
sbb
pop
mov
jecxz
repz
pop
cmpsb
push
sub
sarl
mov
cmp
jle
pop
xchg
dec
fwait
lret
mov
adc
mov
mov
add
jg
sbb
dec
into
je
adc
enter
dec
js
dec
rcrb
or
inc
mov
test
lea
outsl
fiadds
dec
fxch
stc
pop
mov
stc
repz
lahf
imul
mov
jg
cld
out
ficoms
add
jnp
xchg
orl
fisttpl
sbb
fucomi
iret
mov
xchg
or
xchg
aaa
adc
out
outsl
cmc
and
sub
xchg
dec
or
ds
ds
sbb
lods
das
iret
popf
mov
mov
das
outsb
mov
pop
cli
lock
mov
sub
int
aaa
outsl
pop
dec
or
aad
mov
out
popf
test
repz
push
pop
ja
pop
push
xchg
inc
insl
nop
stc
andl
imul
mov
mov
cmp
dec
test
mov
repz
jl
out
stos
sbb
in
lahf
pop
mov
pop
int
stc
repz
jl
insb
push
adc
xor
jle
and
xor
cmp
pop
bound
mov
lret
lret
and
stc
xor
and
loop
mov
pop
sbb
addr16
add
mov
xor
adcb
loop
cmp
test
xchg
in
push
xor
int
loop
mov
ds
xor
das
mov
mov
cmpsl
add
and
xchg
sub
cli
adc
daa
mov
movsl
sahf
mov
fldlg2
cmpsl
sub
cmp
jge
shrb
inc
mov
xchg
int
aaa
cld
xchg
adc
or
mov
pop
call
es
xor
outsl
fidivrs
dec
int
shr
outsl
cmp
enter
cltd
ret
xchg
mov
mov
or
imul
pop
add
nop
xchg
sbb
push
sarb
fistpll
cld
stc
mov
pop
jo,pn
sub
lock
test
lahf
aas
dec
push
xchg
dec
les
repnz
jle
push
mov
movsb
data16
jg
adc
aas
sarl
xchg
loope
jge
cld
jmp
lahf
xchg
pop
loop
addl
jae
push
repnz
push
sbb
pusha
ja
int
push
int
aaa
out
out
add
leave
ret
dec
call
mov
sbb
out
pop
mov
jb
imul
adc
inc
fcoms
dec
out
fwait
aaa
ja
inc
sub
subb
xchg
lds
mov
stc
fbld
int
xchg
inc
jno
inc
outsl
ficoms
cmp
outsl
call
repz
ret
stc
addl
inc
stos
in
dec
lret
add
inc
push
das
je
cmp
clc
pop
dec
out
lcall
xchg
bound
and
jg
bndstx
mov
nop
outsl
fiadds
mov
mov
push
dec
mov
data16
mov
adc
dec
pop
mov
jns
outsb
scas
dec
mov
mov
lock
in
shlb
aaa
outsl
lcall
and
repz
dec
bound
pusha
dec
cmp
cmp
inc
outsb
fidivrs
mov
repz
aad
popf
out
sbb
push
jp
push
xchg
add
and
pop
les
movsbl
out
add
jns
xchg
sbb
lds
hlt
movl
stos
loopne
repnz
jns
in
jecxz
lret
push
stos
or
jecxz
lds
aaa
outsl
pop
ret
cmc
and
xchg
inc
mov
and
test
push
popa
stc
repz
jne
ja
adc
aas
scas
adc
cld
popf
mov
ja
int
scas
rolb
iret
lahf
test
inc
test
in
int3
or
ja
cld
in
ficompl
and
into
repz
fwait
jbe
sbb
loop
rorl
xchg
outsl
and
ds
xchg
ljmp
int
aaa
or
cwtl
orl
test
push
jns
xchg
arpl
enter
mov
stos
cmc
hlt
xchg
clc
in
pop
mov
jl
inc
call
fidivrs
fdivp
sti
mov
int
aaa
cmpsl
aas
xor
lock
mov
bound
cmp
mov
jle
fdivs
icebp
cmc
jmp
mov
jbe
addr16
rcrl
test
cmpsl
enter
pop
xor
cmpsl
lret
mov
and
and
fyl2xp1
push
cs
sub
or
aas
jg
inc
scas
or
cmpsb
shrb
stc
repz
jge
insb
or
subl
xchg
sbbb
jno
cmp
imul
dec
push
into
pop
cmpsl
or
mov
daa
cmp
lahf
aas
cmp
aad
dec
sbb
mov
loop
repz
pop
loope
or
inc
out
adc
mov
cld
fwait
jno
adc
and
leave
ss
repz
daa
mov
xchg
int
dec
cld
jae
adc
negb
aaa
outsl
fimuls
inc
popf
lret
jmp
testl
out
dec
popf
dec
and
or
mov
mov
outsl
fdivrp
mov
and
mov
out
fwait
aaa
pop
mov
inc
pop
call
into
dec
fidivrs
lods
arpl
xor
jns
stos
xor
int
aaa
outsl
bound
test
jmp
mov
les
repnz
add
repnz
cmp
mov
rcr
movsl
jg
mov
frstor
into
mov
ja
pop
dec
lea
xlat
inc
daa
xor
insb
cli
enter
push
mov
xor
dec
pop
insb
fidivrs
sbb
loope
mov
int
mov
xchg
ja
stos
pushf
in
jns
fs
cmp
add
add
pop
outsl
or
sahf
add
cld
cld
stc
repz
test
mov
pop
ret
mov
add
inc
jo
stos
inc
inc
mov
cltd
outsl
iret
lahf
push
stc
pop
jmp
rolb
icebp
sub
stc
repz
loop
jnp
sub
mov
mov
lahf
lds
lahf
aas
jg
pop
pop
test
stos
sahf
pop
lahf
push
jne
push
stc
repz
inc
xchg
dec
fcomip
add
in
cmp
cld
xor
cmp
cli
mov
inc
in
or
stc
stc
repz
push
pop
add
dec
cmpsl
xorb
mov
mov
jbe
inc
sub
fcomip
clc
xor
mov
rep
lahf
aas
jg
push
outsb
add
push
into
push
hlt
shrl
iret
lds
push
pop
sub
adc
inc
cld
pop
mov
fdivrs
cld
jecxz
mov
out
push
das
sbb
jg
aas
pop
imul
pusha
xor
push
out
add
test
pop
fidivrs
adc
sub
or
int3
and
outsl
and
iret
lds
xchg
push
cld
cld
stos
es
scas
push
mov
out
xlat
jle
or
leave
inc
mul
iret
aas
cmp
int3
adc
outsl
cld
stc
repz
sub
and
xor
iret
lahf
aas
jg
movsl
push
cmp
sbb
xchg
inc
push
or
mov
stc
repz
dec
lods
loope
adcl
sahf
pop
fidivrs
jns
dec
mov
lods
nop
les
mov
stos
in
aad
fidivrs
movsb
pop
inc
int3
sbb
lcall
jae
xchg
cmp
jb
mov
push
js
mov
push
add
pop
rorb
jle
add
outsl
fmulp
mov
mov
fwait
ja
cwtl
xor
or
xor
cmp
stc
fdivrl
cli
imul
xchg
sti
stos
jecxz
mov
or
jecxz
adc
repnz
inc
fnstenv
out
mov
inc
ret
out
ds
aaa
outsl
fidivrs
lcall
adc
daa
movsl
daa
jge
inc
pop
int
jns
out
mov
sub
shll
aas
stos
std
orb
push
add
es
jl
out
mov
xchg
cmp
bound
iret
lahf
js
test
pop
into
mov
mul
mov
pop
lret
repz
sti
xchg
mov
xchg
addr16
add
cld
stc
repz
push
jmp
call
cltd
ficoms
iret
lahf
jg
xor
xlat
incl
lods
add
out
pop
loopne
mov
sahf
fstps
stc
repz
push
into
mov
flds
push
cmp
add
adc
filds
push
mov
pop
cmp
aas
lcall
xchg
pop
push
sbb
xchg
dec
daa
pushf
mov
jg
lahf
cmp
ja
outsl
mov
inc
ja
and
pop
outsl
sub
int
aaa
xchg
mov
jecxz
mov
mov
hlt
dec
shrl
ja
ficoms
shrl
lock
lret
xchg
sub
cmc
or
aaa
inc
das
jne
int
jg
xchg
lahf
aas
jg
scas
iret
movsl
push
cmpsb
jecxz
mov
inc
mov
repz
loopne
push
out
pop
xchg
and
jmp
xor
sbb
pop
lea
loopne
idiv
stc
repz
inc
sbb
pop
mov
push
repz
jg
or
dec
out
dec
cmp
jnp
aaa
add
push
push
push
repz
cmp
dec
std
inc
mov
test
mov
outsl
fidivrs
inc
lret
stos
shll
repz
fwait
out
fbstp
xchg
fsubl
fidivrs
ljmp
sbb
inc
sub
call
lahf
fisttps
nop
mov
mov
xor
fistpl
adcb
scas
dec
fsubrs
clc
aas
stos
jno
jle
stc
sub
cltd
insb
stc
add
cld
stc
rep
fwait
ljmp
rcr
pop
movsb
dec
outsl
xchg
lahf
aas
jg
push
pop
call
inc
iret
add
shrl
jbe
jae
aaa
mov
push
pop
icebp
jbe
lahf
aas
jg
mov
pop
pop
repnz
or
cli
leave
out
js
in
sub
jg
jns
je
mov
jne
adc
repz
out
sub
jg
cld
in
or
sub
outsb
jb
out
lahf
cmp
mov
cmp
mov
rorb
aam
lahf
cld
cld
stc
cld
or
mov
insl
pushl
pop
aaa
outsl
ficoms
xchg
sahf
mov
mov
fwait
das
in
int
fiaddl
out
fisubrl
stc
out
pop
jp
ljmp
mov
xor
cld
stc
repz
xor
or
call
pop
sahf
aas
jg
mov
fbstp
lods
and
jbe
jns
xlat
inc
mov
mov
adc
cli
fwait
aaa
outsl
fimuls
push
xor
fldl
jno
or
out
xchg
push
out
inc
insl
cmpsl
es
imul
clc
push
outsl
mov
mov
dec
cld
aaa
call
and
iret
xchg
xchg
and
int
je
add
xchg
in
mov
inc
inc
jno
pushf
sbb
mov
fstl
rorb
movsl
inc
sbb
or
stc
mov
cmpsl
dec
je
inc
adc
fcompl
aas
mov
xchg
sub
add
out
call
mov
dec
dec
aaa
outsl
fidivrs
push
aad
stos
mull
add
lods
repz
fwait
sbb
xchg
jp
outsb
loope
movsb
das
lret
cmp
xchg
push
cld
pop
and
aaa
outsl
add
pop
jns
call
shrb
repnz
lahf
push
sub
arpl
mov
xlat
insl
outsb
aas
jg
cld
pop
fwait
loopne
clc
subl
arpl
dec
dec
inc
jmp
leave
cltd
cmpsl
add
mov
inc
addr16
jmp
in
int3
mov
push
push
cmp
stc
ret
mov
xchg
cmp
iret
aas
pushl
addl
cmpsl
cld
nop
jg
cld
stc
fs
stc
push
nop
push
lods
cmp
insl
cli
sbb
add
iret
lahf
aas
mov
movsl
mov
leave
adc
in
cld
stc
repz
mov
shl
testb
pop
sbb
iret
lahf
aas
jg
test
mov
das
rcrl
sar
stc
repz
sahf
shl
aad
pop
into
mov
loope
sbbl
aas
jg
push
in
pop
push
aaa
xchg
repnz
pop
adc
stc
repz
adc
cmp
int3
jae
int
jg
cld
cmp
cltd
leave
mov
inc
test
lods
mov
cli
nop
and
xlat
mov
aas
jg
ja
push
mov
mov
inc
fidivrs
clc
xor
out
mov
dec
inc
mov
jg
xor
or
xchg
inc
testl
and
xlat
repnz
sub
mov
test
mov
inc
ja
mov
mov
stos
jmp
enter
loope
adc
mov
out
lahf
aas
mov
sarl
pop
cld
stc
repz
and
movsb
or
iret
lahf
aas
jg
mov
mov
xor
inc
rcr
adc
dec
mov
cmp
mov
and
mov
stc
repz
adc
sahf
rcll
loope
dec
adc
loopne
fdiv
mov
mov
add
fimull
lcall
jo
jmp
repz
push
mov
inc
mov
mov
cmp
adc
loopne
lahf
aas
xchg
adc
mov
pop
mov
clc
enter
push
or
sbb
scas
out
mov
imul
mov
sub
das
jle
cmp
pop
inc
in
dec
pop
fisubs
xlat
jecxz
fidivrs
jge
sub
push
enter
dec
les
jo
test
add
pop
inc
mov
mov
mov
lock
int3
repnz
fmull
jl
stos
xchg
sub
jnp
cld
stc
repz
stos
mov
jle
pop
sbb
mov
jg
addl
fcomp
out
fwait
aaa
sbb
adc
pop
in
add
adc
repz
cmc
mov
leave
subb
sbb
jns
jo
push
int
imul
out
jmp
mov
adc
stc
repz
and
rcl
call
inc
out
or
jg
cld
fdivs
roll
mov
adc
repz
lahf
mov
sub
push
pop
cld
rcrb
stc
jnp
jne
jge
aaa
subl
sarl
mov
stos
xchg
pop
adc
outsl
and
stc
repz
mov
and
mov
jb
clc
jg
ss
sbb
inc
pop
adc
jecxz
movsl
mov
mov
mov
int
leave
cmp
daa
adcl
mov
in
adc
dec
in
mov
aaa
outsl
fidivrs
scas
inc
sub
add
jns
les
sahf
cmp
mov
mov
cmp
enter
pop
and
cmpsl
adc
je
mov
ja
mov
aaa
adc
mov
jecxz
call
insb
into
call
cmp
xor
iret
lahf
aas
add
fists
dec
push
cld
pop
addr16
in
fwait
test
out
pop
jg
cld
loope
int
mov
xchg
fisubl
xor
test
lahf
aas
jnp
scas
sub
mov
mov
sub
dec
push
daa
outsl
fidivrs
dec
sahf
xchg
sahf
lds
fucom
jg
cld
stc
aaa
mov
imul
nop
pop
imul
std
das
icebp
movsb
jl
jno
lcall
fsubl
and
and
scas
and
jg
nop
stc
shll
repz
push
dec
fsts
xor
repnz
push
imul
stc
sti
imulb
lret
pop
push
mov
iret
lahf
aas
out
out
jne
push
push
mov
push
lret
repz
jns
push
bound
mov
sbb
pop
es
or
mov
inc
ret
mov
int3
dec
pop
xor
pop
stc
add
fnstenv
addr16
lods
pop
or
insb
mov
xlat
sub
mov
jns
out
adc
lahf
pop
xlat
lahf
pop
dec
loope
dec
cltd
fwait
aaa
outsl
fidivrs
insl
pop
mov
loopne
fdivs
pop
repnz
pop
inc
rol
rorl
push
test
inc
out
lahf
jg
mov
insl
sub
loope
mov
cld
stc
repz
xor
ss
and
sbbl
inc
imul
aas
jg
outsl
lcall
cmc
cmpsb
es
jmp
mov
jae
dec
xchg
mov
push
push
mov
and
repz
or
and
scas
data16
fidivrs
push
rcrl
repz
stos
popf
mov
imul
jns
and
mov
mov
add
pop
lret
and
pop
mov
xchg
add
cld
jmp
jae
ja
aas
movsl
leave
cmp
ja
xchg
cmp
in
shlb
sub
push
pop
lock
cld
cld
stc
repz
fnstenv
lods
jle
sub
add
fimuls
jecxz
jg
mov
xorb
push
mov
cld
stc
repz
sub
mov
nop
insl
jg
stc
cld
mov
les
mov
iret
lahf
repz
or
push
bound
jmp
push
cwtl
pushf
dec
test
dec
and
dec
ja
mov
xchg
sarl
push
cmp
loop
push
ret
clc
cmp
aaa
add
jb
mov
stos
out
mov
shlb
das
push
cmp
pop
and
xlat
mov
push
enter
call
insb
fidivrs
xor
sbb
lret
and
orb
out
arpl
mov
push
sbb
cld
stc
repz
ja
inc
mov
lock
lods
inc
jle
mov
xlat
jg
ficoms
outsl
push
test
mov
cwtl
xchg
push
or
fwait
aaa
sbbl
fcompl
hlt
sti
stos
jle
xchg
adc
lock
mov
ljmp
push
ret
mov
or
es
jb
jnp
pop
repz
ljmp
dec
lock
cli
pushf
outsl
fidivrs
cli
aaa
cmpl
mov
iret
inc
or
inc
push
out
cmpsl
out
fwait
aaa
addr16
loopne
jae
push
jmp
jne
mov
fldt
jno
mov
or
insl
les
lcall
or
push
mov
ja
cmp
lret
pop
fidivrs
lahf
cmp
mov
mov
jl
int
aaa
outsl
lcall
jno
dec
fldl2e
sbb
out
sub
mov
movsb
or
daa
lahf
aas
xlat
fbstp
sti
in
push
out
add
dec
aas
jg
cld
dec
sbb
mov
sahf
add
scas
inc
xlat
repz
lahf
cmpsl
int
mov
mov
jp
jg
cld
stc
shll
adc
push
cmp
adc
mov
or
iret
lahf
aas
ss
or
das
xor
sbb
cld
stc
repz
sahf
push
lods
clc
repz
jl
repz
ret
ficoms
mov
ss
jl
mov
int
aaa
outsl
lret
jecxz
push
pop
cmp
xchg
outsb
enter
mov
ret
aaa
hlt
and
pop
xchg
sbb
adc
sub
xchg
cwtl
jge
int
aaa
outsl
test
xchg
cwtl
cltd
dec
fiadds
sbb
fimull
arpl
push
xor
repz
aas
jno
test
xchg
jo
mov
sbb
js
dec
int
push
lahf
pop
fisttpl
out
lahf
int3
mov
pop
cmp
in
das
sub
hlt
or
cmpsl
pop
jle
adc
push
shl
iret
lahf
aas
and
and
cmp
stc
add
repz
adc
mov
ret
aaa
aas
jg
cld
push
popa
add
xchg
lea
aam
dec
stc
repz
inc
mov
repz
and
xor
add
stos
jbe
icebp
jg
int3
ret
fwait
aaa
aas
popl
mov
jle
xchg
push
out
xchg
pop
mov
sbb
fwait
push
mov
dec
push
adc
cmp
loopne
jmp
mov
mov
std
gs
out
or
inc
sahf
add
pusha
or
inc
dec
in
iret
lahf
jg
std
mov
adc
cmpsl
jbe
xchg
lret
andl
and
jg
cld
push
aaa
push
add
jp
repnz
enter
in
iret
lahf
or
je
pop
inc
loope
call
jg
inc
pop
aas
sbb
dec
pop
aaa
movsl
push
ja
xchg
push
repz
lahf
insl
jg
cwtl
mov
xor
clc
fucomi
push
stc
stc
xor
out
cltd
jg
or
mov
aas
jg
cld
lea
cmc
enter
sbb
repz
lahf
fimuls
pop
jp
sub
repz
cld
stc
mov
pop
arpl
and
adc
and
cs
loopne
push
and
aas
jg
pusha
pop
mov
inc
jb
xor
mov
ficoms
mov
push
cmpsl
jne
mov
jg
les
push
cltd
xchg
adc
divl
aaa
mov
aas
js
xchg
rol
fidivrs
pop
imul
in
out
in
int
aaa
outsl
cmp
sub
sbb
out
lock
or
test
imul
mov
xchg
mov
add
lods
sub
lret
mov
idivl
xor
xchg
xor
cld
stc
repz
sbb
shl
sub
mov
mov
aas
jg
and
adc
or
les
call
cmpsb
cld
stc
int3
pop
aaa
mov
repnz
mov
jnp
lahf
aas
jg
push
rorl
mov
nop
dec
iret
lahf
jg
lret
jb
dec
lahf
mov
adc
cld
stc
repz
out
cmpsb
xchg
aaa
ret
xor
pop
mov
jg
mov
mov
insb
aaa
jns
out
aaa
or
rcll
push
dec
les
movl
filds
mov
fadd
add
mov
xor
cmpsl
test
fsubr
out
mov
aaa
outsl
fdivp
outsl
cmpsl
jg
ret
jmp
orb
shlb
js
mov
mov
sahf
xchg
pushf
xchg
lahf
pushf
mov
fsubrl
push
xor
out
push
cmp
dec
or
fwait
aaa
cmc
scas
push
adc
leave
fs
pushw
dec
sbb
adc
aaa
pop
js
xchg
mov
jg
xchg
dec
push
inc
adcl
int
std
xchg
push
xor
jns
out
ja
cmp
hlt
rolb
iret
push
inc
fidivrs
pop
mov
test
fdivl
loop
push
std
push
stc
repz
leave
repz
xchg
inc
out
and
sti
fwait
aaa
outsl
fsubrp
push
sti
rorb
or
jno
int
in
dec
fstl
shrb
aaa
outsl
fimuls
pusha
push
ficompl
imul
out
dec
repz
pushf
dec
or
movsb
daa
mov
outsb
fidivrs
xchg
dec
iret
pop
sti
out
add
fwait
aaa
outsl
test
cmp
adc
push
adc
mov
jns
cmpb
mov
sahf
jl
sub
ret
or
inc
rorb
jl
aaa
in
fwait
aaa
outsl
fsubrp
test
lds
aaa
xchg
cmpsb
push
push
jns
out
cmp
dec
cltd
inc
mov
fidivrs
inc
mov
or
mov
bswap
fwait
jbe
loope
mov
cwtl
jae
mov
fmuls
xor
rcll
fwait
add
outsb
fidivs
loope
fdivrl
sbb
loope
mov
add
fwait
loopne
pushf
in
jns
ja
ja
insl
out
push
stos
jo
mov
rolb
sbb
stos
sahf
arpl
pop
mov
sub
pop
add
repz
xor
xor
inc
test
idivl
sti
mov
pop
lahf
aas
jg
adcl
lods
jg
mov
andb
out
jg
sahf
roll
inc
add
outsl
jns
cld
mov
cmp
movsb
and
scas
cld
stc
repz
fsubrp
rcll
incl
push
popa
mov
jg
mov
push
gs
mov
stc
repz
mov
imul
mov
sub
adc
in
int
and
xchg
push
mov
repz
adc
int3
xchg
lcall
js
cmpb
jns
movsl
loop
lea
stc
repz
push
test
sbb
pop
hlt
mov
cld
popf
dec
pop
jo
sub
fwait
andb
aas
inc
adc
or
repz
push
adcl
or
cli
aaa
outsl
fidivrs
out
sbb
jg
test
int
in
subb
push
inc
imul
imul
mov
loop
inc
outsb
fisubrs
movsb
dec
pushf
out
pop
or
xchg
fwait
xchg
or
jl
mov
sub
sar
enter
shlb
mov
fbstp
aaa
push
lock
paddusw
mov
iret
lahf
aas
popf
sbbl
enter
xlat
loopne
push
add
loopne
mov
pop
pop
stc
imul
cld
sti
enter
sub
je
mov
fmull
int
lahf
aas
jg
daa
jg
in
xorl
scas
jle
inc
fadds
dec
or
aam
or
jg
lods
daa
sti
jo
mov
add
dec
ror
mov
insb
and
xchg
movsb
jns
mov
mov
push
cmpl
std
inc
cltd
test
aaa
scas
xchg
bswap
cmpsb
fldt
inc
and
pop
iret
or
cs
sub
push
mov
outsl
fidivrs
mov
sub
add
lock
fwait
mov
xor
je
je
pusha
daa
push
call
sbb
mov
outsb
pop
sub
hlt
iret
cmp
mov
std
adc
mov
call
shlb
xchg
adc
fwait
aaa
outsl
jnp
mov
pop
inc
sub
fcomp
mov
out
jge
xlat
pop
and
test
sub
outsb
jecxz
stos
push
lods
pop
cmp
in
out
mov
and
int
pushf
xor
aas
xchg
outsb
adc
add
imul
stos
pop
stos
or
fiadds
idiv
insl
pop
insb
mov
lahf
jg
adc
dec
adc
xor
add
call
iret
jecxz
or
lret
shll
fidivrs
mov
mov
out
xlat
jle
fwait
aaa
outsl
jno
dec
pop
xchg
inc
loop
test
outsb
popa
int
ja
loop
in
aas
or
mov
sbb
dec
mov
movsl
scas
lcall
sub
aam
push
fwait
aaa
outsl
fisubrs
mov
xlat
fimull
rcll
outsl
jnp
cmp
enter
inc
negl
enter
inc
cs
lahf
aas
jg
stc
test
subb
js
stc
repz
and
orl
push
mov
imul
adc
repz
into
xor
data16
cmpsl
dec
mov
cmp
mov
or
pusha
sbb
stos
mov
adcb
aas
lcall
bound
sbb
dec
add
cld
stc
repz
cmp
xchg
push
les
jno
in
push
push
fnsave
dec
movsl
enter
xor
popa
mov
cld
stc
xrelease
pop
outsb
mov
xchg
pop
dec
int3
mov
dec
or
aas
jg
jecxz
test
mov
mov
hlt
sar
repz
jmp
xor
and
leave
pusha
mov
add
lds
or
mov
jp
outsl
fiadds
movsl
mov
sahf
xchg
jmp
push
out
fwait
aaa
sti
xor
imul
outsb
pop
outsb
cmpsb
std
cmpsb
xor
stc
repz
mov
pop
push
xor
mov
mov
mov
ja
adc
popf
notl
sub
pop
xchg
out
shlb
fucom
stos
ds
dec
mov
out
out
stc
ret
sahf
dec
mov
mov
stc
sub
push
dec
lahf
aas
jg
fisttps
in
inc
in
test
outsl
lahf
nop
pop
in
iret
inc
push
jnp
ficompl
and
cmpb
stc
cld
mov
std
jecxz
mov
mov
push
imul
sbb
sbb
cmc
fldz
insl
inc
lds
jge
push
adc
jb
out
lahf
popf
ficompl
fwait
sbb
dec
cld
stc
xor
pslld
add
dec
inc
cld
stc
adc
push
xorl
test
pop
decl
xchg
mov
cmpsl
daa
sub
xchg
aaa
xchg
jg
jno
aaa
xchg
dec
das
xor
iret
lahf
jae
rorl
rcll
rclb
push
xlat
dec
sbb
in
dec
fidivl
fs
mov
imul
pop
sbb
orl
bnd
inc
out
subb
lahf
aas
jg
ja
leave
movsb
lret
inc
xchg
inc
lret
mov
iret
mov
mov
in
jns
out
fistpll
out
lods
cwtl
repnz
jle
fdivrl
fidivs
and
ficoms
rorb
push
es
lahf
nop
jns
out
xlat
push
inc
cmp
arpl
xor
fidivrs
test
xchg
push
js
adcb
jno,pt
sbb
fwait
aaa
jle
sbbb
imul
push
imulb
push
pushf
popa
xchg
sahf
inc
in
lahf
cmpsl
mov
mov
mov
xchg
jns
out
xchg
aam
lahf
aas
jg
in
fcoms
mov
mov
loopne
sbb
repz
nop
movsb
push
adcb
sub
or
outsb
jns
stos
adc
pushl
cmp
repz
adc
adc
insb
addl
push
xchg
pop
mov
lahf
aas
jmp
dec
andl
add
adc
enter
pusha
icebp
xchg
int
mov
flds
cmp
mull
adc
sbb
mov
jg
mov
adc
and
out
ja
fbld
jp
lret
ja
dec
jg
in
pop
cs
fdivl
pop
call
iret
lahf
aas
iret
and
mov
mov
stc
repz
fsub
cmp
push
int
mov
ds
lahf
aas
jg
dec
and
xchg
jl
sub
call
hlt
in
cltd
or
shl
jmp
aaa
outsl
mov
outsl
in
jo
cmp
push
ret
mov
inc
out
mov
pop
addl
aaa
outsl
fimuls
stos
cmp
loope
xchg
fcomps
aad
xor
repz
ds
ds
into
mov
aas
fwait
inc
lods
pushf
xchg
push
mov
lds
push
and
loopne
sub
mov
mov
out
pop
jbe
lahf
loop
jle
testb
jo
pusha
out
mov
repz
pop
out
std
pop
clc
sub
jecxz
sub
jmp
cld
sub
fildl
movsb
icebp
mov
adc
or
inc
ror
mov
mov
leave
and
and
into
mov
outsl
dec
mov
pop
add
jns
out
add
mov
cld
pop
sub
in
fldln2
mov
outsl
fidivrs
mov
ss
movsb
into
icebp
xchg
int
ljmp
out
lea
inc
aaa
jle
push
fcmovnbe
xchg
sbbl
push
daa
outsl
mov
jb
repnz
pop
test
out
enter
mov
inc
sbb
bswap
xchg
or
jg
cld
stc
xor
verw
scas
mov
xchg
cmp
inc
xlat
test
aas
rclb
mov
inc
push
enter
aaa
push
daa
das
inc
add
enter
dec
and
xchg
cli
jns
lahf
aas
jg
addr16
mov
mov
adc
out
stc
repz
xchg
popf
nop
or
nop
lahf
movaps
mov
popf
jmp
aaa
out
sub
inc
fwait
dec
jl
ljmp
in
push
or
push
inc
xchg
fiaddl
out
fwait
ja
scas
call
rclb
pop
push
fidivrs
cmp
jae
or
outsl
pop
orb
push
dec
shrb
outsl
fidivrs
addr16
push
or
pop
mov
pop
repnz
inc
jp
xor
sbb
out
int
cmp
imul
ret
sbb
out
dec
jp
mov
das
scas
inc
popf
xor
mov
mov
lret
outsl
ficoms
lcall
fwait
xor
int
aaa
clc
ficomps
mov
and
or
jecxz
imul
jmp
adc
sbb
aaa
aas
jg
cld
repnz
aas
aad
push
adc
ljmp
ja
movsl
and
jae
ja
jo
repz
fwait
stos
shl
mov
out
orb
fidivrs
fistpl
inc
mov
inc
out
inc
ss
int
rclb
sub
arpl
lds
call
scas
insl
cmp
inc
inc
jle
scas
inc
outsb
lock
jns
movq
lret
mov
jmp
jg
test
jp
jo
in
enter
inc
outsl
mov
call
dec
cmpsl
pop
cs
and
enter
jns
xchg
scas
xchg
movsl
dec
inc
jno
dec
js
bound
or
mov
or
or
or
outsl
fidivrs
outsl
lret
cmp
add
mov
int
loopne
mov
daa
pusha
das
jp
add
mov
negb
push
cmp
fstps
add
mov
gs
pushf
stos
lcall
out
add
mov
aaa
add
mov
call
repz
fwait
into
sti
pop
imul
sahf
scas
mov
enter
mov
test
lar
add
enter
gs
pushf
inc
xchg
inc
repz
aas
stc
cld
mov
bound
ffreep
lds
daa
and
sbb
pop
inc
aaa
in
xor
xchg
aas
clc
xchg
mov
movsl
xchg
movsl
dec
lock
popa
enter
cmp
mov
leave
pop
push
xchg
out
inc
adc
add
ds
movsb
jecxz
pushf
fdivrl
mov
ljmp
fwait
aaa
outsl
incb
dec
jmp
mov
stc
cmpsl
mov
xor
test
mov
add
xchg
mov
xchg
loope
out
cmp
test
sbb
dec
xchg
dec
lret
cmp
in
jo
mov
out
xor
xor
lods
fwait
aaa
out
add
insl
cmpb
movsb
leave
mov
mov
add
stc
repz
xchg
call
xchg
mov
scas
inc
xor
jg
loopne
jne
sarb
aaa
jmp
mov
adc
inc
jle
push
aas
mov
ret
xlat
cwtl
push
mov
aas
jg
mov
pop
mov
inc
mov
inc
and
sub
and
aas
jg
cld
ret
scas
jmp
insb
sbb
aaa
add
out
subb
and
cwtl
or
or
ss
aaa
test
cmp
jge
aas
jg
cld
cmp
mov
aam
icebp
fiadds
daa
outsb
arpl
xchg
cmp
sbb
gs
repz
stos
aas
jg
cld
testl
and
sbb
leave
out
lahf
add
jnp
mov
add
mov
test
test
add
mov
add
dec
adc
nop
mov
or
cmp
pop
push
lds
add
aam
mov
push
ljmp
push
adc
or
into
add
jp
negb
or
pop
stos
or
pushf
sub
je
xor
adc
pop
ficoml
adc
cmp
andb
addb
mov
push
call
pop
add
push
out
pop
jae
cmc
add
add
aas
shll
sbb
repnz
ret
inc
mov
data16
mov
add
pop
sub
pusha
jae
adc
ds
add
add
push
stos
js
rol
loop
mov
sbb
dec
and
rcll
sbb
sbb
adc
stos
jb
mov
sbb
lock
sbb
fiaddl
addb
mov
shlb
or
add
inc
clc
push
aad
push
push
mov
inc
adc
shlb
mov
mov
add
push
push
scas
test
xor
and
push
add
mov
push
push
test
adc
jge
mov
imul
lcall
lods
xorb
and
push
repnz
stos
adc
add
pop
mov
pop
and
inc
adc
or
mov
pop
add
mov
add
push
jo
inc
and
push
push
xor
pop
fsubrs
push
cvtpi2ps
pop
dec
sarb
xlat
movsl
or
jne
sbb
inc
adc
or
icebp
push
xor
inc
push
loopne
inc
adc
adc
xchg
jmp
inc
ret
lods
roll
fcoms
inc
cmp
inc
cli
fidivrl
and
sbb
sbb
mov
imul
jns
fs
xorb
cmc
dec
add
adc
leave
dec
sbb
cli
push
add
add
cmp
add
dec
lock
fiaddl
sub
rolb
lods
mov
ret
add
add
out
mov
mov
sbb
jns
push
xchg
loope
popf
lods
adc
addr16
push
test
fwait
dec
cmp
jecxz
mov
outsb
pop
inc
rolb
insb
fs
and
push
inc
adc
sbb
sub
negb
inc
hlt
test
xorb
insl
mov
adc
mov
cmp
ret
jne
or
or
notb
test
scas
mov
outsb
or
call
lods
mov
add
ret
stc
cmc
mov
and
jge
andl
or
es
sub
lock
mov
pop
shll
sbb
mov
addb
sbb
outsb
jnp
fildl
lea
shrb
aam
xchg
cmp
xchg
sub
es
jp
inc
cmp
fildl
jne
test
pusha
push
pop
mov
or
adc
xor
fdiv
mov
xor
cmp
push
push
or
or
jo
push
mov
and
or
imul
imul
js
ja
sbb
push
push
jl
and
shl
mov
push
mov
jo
stos
dec
mov
stos
jp
mov
mov
cmp
add
ja
or
add
outsl
lret
cmc
inc
call
and
xlat
jbe
clc
or
lods
adc
ficompl
or
jo
pop
outsl
jno
add
and
mov
clc
pop
stc
or
cmp
push
or
jae
cmp
pop
js
xor
pop
and
fcmovnb
adc
stc
mov
lock
mov
mov
testb
popf
clc
adc
lcall
ret
push
xchg
leave
int
xlat
std
push
mov
clc
push
push
test
add
lcall
mov
in
inc
adc
rcrb
js
sbb
push
push
and
inc
ss
mov
xchg
sub
add
jbe
xor
or
dec
push
cld
adc
sbb
cmp
dec
add
and
xor
sub
ret
inc
push
cmp
subb
adc
mov
mov
mov
add
add
mov
or
jmp
lods
xor
addb
and
stos
jo
sti
dec
adc
xor
sarb
or
add
or
mov
mulb
mov
je
mov
jo
or
and
mov
sbb
add
mov
cmpsb
ret
roll
or
mov
into
sbbb
jne
or
cmpsl
dec
scas
mov
fcmove
cmc
inc
repnz
mov
lods
and
pop
int
sub
push
divb
jo
sub
adc
pop
inc
sub
repz
push
pop
call
and
rorb
inc
push
xor
loope
bound
jno
mov
pop
push
add
push
adc
mov
out
sub
pop
push
lods
sti
push
add
push
aad
stos
and
mov
arpl
cmpl
mov
cmp
sbb
xchg
fdivs
sbb
sbb
add
cmp
lds
adc
mov
loopne
adc
cwtl
std
push
ljmp
movsl
or
lods
sub
dec
mov
adc
add
xchg
adcl
fwait
xlat
mov
inc
arpl
shlb
mov
ret
sbb
lods
cs
bound
sub
cltd
cmp
xchg
movb
or
outsl
mov
das
add
call
push
or
xchg
push
repz
adc
call
push
faddl
add
rcr
adc
adc
push
mov
add
testb
push
add
mov
mov
add
nop
and
push
bound
or
test
int
add
mov
test
hlt
jp
cmp
rolb
push
mov
ss
jo
shlb
clc
sbb
sbb
int
mov
orl
jae
rcrb
lahf
mov
test
sahf
clc
rcl
inc
push
sbb
outsb
subl
loopne
shr
mov
jp
push
cmp
rolb
lret
leave
jmp
test
xchg
adc
and
jns
add
pop
movsb
stc
adc
sahf
rcrb
or
sub
push
inc
jno
sbb
push
cmp
pop
push
jne
add
std
ret
scas
cwtl
mov
add
mov
cmpsb
inc
call
insb
cwtl
rorb
inc
sub
push
fstps
inc
mov
mov
push
mov
adc
fcomp
push
add
int
roll
aam
add
jmp
xor
push
add
mov
ret
pushf
dec
push
mov
mov
inc
xchg
roll
add
test
rcrl
inc
inc
sub
lock
add
movsb
adc
or
inc
aaa
enter
clc
pop
push
test
sbb
sbb
fdivs
inc
cmp
push
lods
sbb
lcall
or
jne
pop
xlat
pop
xchg
push
enter
sub
or
jge
adc
pop
and
int
push
push
cs
push
xchg
add
sub
mov
mov
mov
add
mov
jle
mov
xor
sarl
sbb
out
popf
and
neg
push
xor
cltd
mov
and
mov
fisubrs
icebp
daa
add
popa
or
lret
pop
push
xchg
pusha
lcall
orb
and
imulb
call
sbb
in
loop
roll
xor
or
mov
mov
mov
sbb
add
lods
mov
in
add
adc
xor
lods
push
test
push
rol
or
js
dec
inc
xor
and
or
lods
mov
lods
add
add
aam
xchg
sub
xlat
inc
scas
add
add
loopne
dec
imul
mov
mov
xorb
sbb
mov
scas
xchg
dec
adc
inc
lock
std
push
push
push
pop
add
cmp
push
cwtl
cmp
clc
ds
sbb
and
xchg
or
not
lret
push
pop
jno
inc
push
or
sahf
mov
jns
push
into
aad
inc
clc
adc
inc
std
ret
ljmp
dec
mov
hlt
stc
pop
jbe
adc
fmuls
invd
sbb
ljmp
fisttpl
mov
mov
xor
lock
es
xchg
mov
bound
psubsb
pop
js
fs
inc
add
out
rolb
sbb
push
pop
push
inc
push
and
mov
adc
add
xchg
mov
arpl
mov
call
xor
jle
mov
clc
rorb
fnstsw
addb
inc
lods
push
mov
cs
mov
jg
or
jge
shlb
pop
add
pop
mov
lods
dec
jge
shl
ljmp
xchg
in
sub
add
mov
or
movsb
loopne
lcall
fs
mov
sbb
mov
add
or
push
push
notl
inc
push
sbb
fs
pop
cmpsl
call
shlb
test
mov
in
mov
pusha
xchg
faddp
or
or
mov
mov
push
mov
add
mov
push
mov
shlb
cltd
adc
mov
cmp
add
pusha
adc
add
popf
pop
fstl
xlat
lret
clc
or
inc
inc
rcll
and
cld
inc
xchg
and
icebp
and
or
cmp
mov
pop
add
clc
imul
mov
cmp
adc
stos
roll
pop
xor
pop
push
xchg
mov
cli
cmp
hlt
pop
pop
pop
leave
int
cmpsl
stos
or
adc
push
or
dec
out
or
jp
loopne
jne
cmp
jg
mov
mov
adc
cs
mov
shr
cmp
insl
xchg
jno
roll
int3
or
jne
mov
lods
mov
mov
push
or
pop
xor
clc
out
push
sbb
add
mov
add
into
push
add
rclb
and
sarb
push
mov
sub
mov
add
inc
add
xor
js
cmp
test
inc
addb
call
add
add
add
or
das
stos
dec
cmp
adc
fdivs
push
and
jecxz
add
inc
scas
icebp
call
add
imul
stos
xchg
mov
mov
leave
lret
into
daa
inc
inc
mov
aaa
mov
xor
out
adc
loope
xor
lret
cltd
arpl
cs
adc
rorl
add
pushf
jnp
sahf
rcrl
mov
test
cwtl
pushf
fstpl
bound
leave
or
push
add
lock
add
mov
adc
jo
sbb
lods
arpl
pop
mov
xor
push
add
mov
rol
add
pop
ret
inc
loope
push
adc
inc
xchg
ss
dec
cwtl
lcall
jne
js
sbb
or
xchg
out
inc
xchg
sub
mov
fs
sub
inc
cwtl
sahf
push
icebp
divb
adc
scas
and
pop
add
and
addr16
or
inc
xor
in
sbb
leave
addr16
outsb
sbbb
aas
adc
testl
mov
lds
push
add
ret
sub
or
jmp
pushf
mov
test
xchg
push
inc
adc
jnp
jge
or
and
dec
nop
add
lea
sbb
sarb
mov
clc
add
push
dec
mov
outsl
repnz
pop
push
cmp
add
inc
push
mov
pop
in
jp
outsb
mov
fwait
xor
jbe
inc
shll
add
lcall
cmp
adc
mov
mov
sahf
sub
lock
xor
push
cmpsb
inc
cwtl
pop
pop
repnz
and
stos
stc
cli
dec
xor
cmp
lret
sub
pop
out
mov
shlb
inc
sub
xchg
addb
xchg
lret
push
sub
hlt
not
jo
xchg
push
mov
xor
daa
dec
mov
fcoms
scas
scas
jo
adc
dec
dec
shl
lret
aam
mov
push
add
movsb
or
js,pt
js
dec
fistpll
push
pop
cmp
sbb
les
jmp
inc
hlt
testb
mov
popa
dec
mov
inc
rorl
arpl
lcall
mov
ret
inc
stos
adc
push
jbe
cmpsb
test
push
ret
bndldx
xchg
adc
rcrl
mov
cmpsl
sbb
lcall
mov
out
jno
scas
test
mov
sub
inc
xlat
jp
pop
cltd
pop
mov
and
adc
mov
dec
add
int
or
or
mov
push
bound
and
dec
imul
lds
nop
cmpsb
add
shr
push
mov
xchg
imul
add
pusha
test
pushf
add
inc
inc
sbb
icebp
mov
loopne
inc
mov
push
mov
pop
ds
sbb
inc
push
sbb
outsb
int
pop
test
sbb
arpl
push
test
lcall
dec
cmp
xor
mov
div
mov
mov
adc
adc
mov
lret
push
sbb
test
mov
iret
jo
bound
xchg
cs
lret
test
aaa
sbb
cs
inc
inc
push
xor
mov
sbb
inc
inc
add
pop
dec
sahf
sub
xor
pop
mov
lret
xor
jns
mov
jmp
xlat
add
xor
mov
ret
sbb
or
in
repnz
or
addl
mov
loop
test
push
pop
lods
xor
pop
xchg
or
xor
loop
add
or
xor
adc
push
fimuls
xchg
mov
clc
call
mov
sbb
test
cmp
xchg
xor
inc
fsubs
jmp
repnz
adc
dec
movl
xor
or
xchg
loopne
insb
imul
jl
shl
sarl
or
adc
inc
adc
or
mov
push
das
ret
rcrl
orb
incb
gs
push
sub
cmpl
adc
rcrl
mov
sbb
or
out
out
out
loopne
sub
data16
inc
js
inc
cld
aaa
rolb
dec
jne
ja
and
jb
ljmp
enter
push
cs
nop
pop
imul
mov
sbb
rolb
push
pop
add
or
adc
push
xchg
and
inc
mov
test
mov
dec
mov
lret
fisubs
push
mov
push
andb
sbb
cmc
mov
xchg
jecxz
cmp
and
add
push
or
jg
sbb
mov
je
dec
andb
ja
add
sub
cwtl
adc
pop
inc
mov
sub
shr
add
gs
sub
or
and
adc
or
xchg
mov
ror
mov
xor
sbb
adc
cmp
shrl
icebp
push
pop
inc
push
jo
xor
fnstenv
adc
imul
orl
pop
cli
push
stos
push
mov
mov
sbb
imul
and
mov
fxch
or
sar
sub
or
or
pop
push
mov
inc
sbb
test
leave
nop
mov
jl
call
jno
std
popf
pop
xchg
jmp
xor
jg
jmp
movb
mov
lock
pop
mov
add
mov
push
int
sbb
mov
inc
int
jnp
int
mov
setno
adc
cmc
add
jo
fdivl
add
xchg
loopne
rorl
es
pop
loopne
xchg
push
ret
or
mov
into
add
scas
dec
mov
test
and
push
je
dec
into
aam
push
xchg
addr16
inc
insb
mov
mov
adc
es
addr16
or
cwtl
xor
cltd
jle
lds
add
sbb
pop
jns
loope
loope
nop
and
adc
jmp
or
movsb
fwait
imul
sbb
sbb
xor
xor
leave
aas
jns
imul
sbb
aad
xor
jae
loop
add
fcoml
inc
jp,pn
xchg
xchg
movsl
or
add
jo,pn
push
mov
pop
rcrl
sbb
ljmp
popa
sbb
popa
shl
dec
inc
roll
and
int3
stos
out
and
ret
addr16
pop
sub
rcrb
jns
inc
adc
sbb
jo
sub
cmpsb
sbbb
pop
into
rcr
fwait
cmpsl
arpl
ljmp
add
or
sbb
push
sub
or
inc
cmp
ret
add
xchg
faddl
adc
sbb
or
and
xor
cmp
add
jne
dec
xlat
mov
and
inc
inc
sbb
push
adc
inc
xchg
les
test
sbb
inc
pop
sbb
ret
sarl
inc
or
ds
xchg
jmp
pop
mov
cltd
imul
adc
ret
or
xchg
push
adc
mov
aam
mov
mov
and
mov
lcall
shrb
push
les
sub
stos
or
add
cmp
sub
jp
sbb
push
xchg
sub
shl
jge
je
sub
mov
or
leave
sti
and
or
adc
xchg
leave
nop
push
movsl
jnp
xchg
add
adc
adc
pop
push
inc
scas
jo
mov
nop
imul
lock
mov
movsl
scas
data16
mov
push
in
inc
add
jecxz
cmpsl
fcomps
daa
add
sahf
or
cli
mov
aaa
cwtl
stos
sub
cld
push
dec
push
add
push
or
adc
loopne
push
sub
and
mov
subb
test
loope
repnz
push
cmp
cmp
adc
jns
out
xor
add
insl
jmp
xchg
stc
incb
add
dec
cmpsb
lcall
pop
mov
mulb
sbb
jnp
hlt
push
jg
xchg
leave
mov
sub
inc
cmp
and
inc
or
addb
jp
jbe
push
leave
in
xchg
das
jge
mov
and
rcl
add
adc
fdiv
mov
or
rcl
add
and
pop
jno
imul
jle
sbb
aam
pop
mov
mov
scas
cld
add
push
inc
ds
sbbl
subb
or
add
dec
fwait
cmp
ss
shll
adc
xor
subl
mov
leave
cmc
cmpsl
and
arpl
sbb
lock
mov
inc
cmp
in
test
dec
adc
or
in
add
sbbl
addb
jl
jecxz
push
push
add
stos
sbb
mov
data16
ret
mov
add
inc
and
addl
test
mov
nop
or
pop
cmp
jo
push
or
xorb
adc
push
pop
cmpsb
movsl
dec
add
test
push
lret
adc
pop
movb
adc
imul
test
and
into
dec
jg
sbb
jge
xchg
mov
jmp
lret
sub
add
mov
lods
shlb
or
cmpsl
ret
fwait
js
sub
scas
xlat
mov
cmp
xchg
mov
mov
repnz
push
inc
cs
les
popa
or
pusha
cmc
sub
inc
push
pop
add
cmp
aad
push
negb
sbb
dec
and
pop
mov
xor
dec
push
outsb
or
push
xchg
lret
lock
inc
push
sbb
dec
call
inc
cmp
sbb
or
rorl
inc
aam
mov
push
dec
push
or
sub
inc
mov
cltd
into
rcll
pop
sysenter
fwait
leave
add
aaa
or
mov
xor
inc
mov
pop
jg
inc
or
les
mov
cmp
shlb
fprem
adc
jo
sub
xlat
pop
lods
sahf
mov
sbb
push
mov
mov
xchg
shll
loopne
or
stc
pop
lret
or
test
aam
sbb
cmp
jp
subl
ficoml
test
test
push
into
testb
mov
push
and
push
push
pop
out
mov
mov
or
js
pop
adc
mov
cwtl
scas
sbb
dec
rcl
push
inc
add
xchg
scas
cmc
add
pop
mov
shlb
inc
ret
mov
aas
fst
stos
sbb
adc
roll
cwtl
pop
pushf
add
and
mov
pop
add
cmp
mov
push
movsl
sbb
cli
sbb
add
movsb
jne
mov
inc
hlt
adc
push
mov
cmp
mov
out
shrb
bnd
pop
dec
cmpsb
sbb
push
add
xlat
push
push
mov
cmp
test
push
jp
je
push
dec
stos
in
arpl
shlb
and
adcb
bound
ljmp
add
add
jmp
pop
or
outsl
inc
sbb
jge
loope
pop
xchg
fsubrl
shlb
adc
cmp
push
mov
pushf
cmpsb
or
pushf
das
addr16
adc
push
sub
test
xlat
in
arpl
push
movsl
or
adc
mov
dec
adc
rcrb
mov
sbb
push
lret
popf
or
mov
rol
cmc
shrb
adc
push
adc
mov
sbb
addb
mov
push
pop
daa
icebp
mov
jbe
inc
adc
cmp
sbb
lock
sbb
loope
adc
push
call
repnz
shrb
sub
adc
pop
jge
add
pop
ds
dec
push
or
lahf
adc
dec
mov
xchg
in
out
es
adc
lret
pop
or
repnz
cli
sbb
adc
push
mov
dec
rclb
in
in
mov
movsl
lcall
adc
push
enter
and
sub
jmp
mov
push
sahf
and
aaa
inc
push
lods
js
scas
mov
mov
adc
das
mov
les
out
mov
mov
inc
fwait
cli
movl
or
lahf
adc
push
add
add
and
sahf
jbe
push
push
sbb
fs
mov
push
pop
dec
leave
addl
lock
jge
sahf
mov
mov
movb
sbb
add
pop
cli
or
push
and
stos
cmp
scas
add
inc
sub
mov
pop
mov
and
pop
mov
sub
sbb
pop
or
xchg
bound
mov
pop
popa
sbb
shlb
adc
jecxz
sbb
inc
xchg
push
sub
sbb
icebp
pop
insb
push
int3
and
and
xor
sti
push
push
ficoml
icebp
adc
outsb
pop
fwait
sbb
pop
xchg
xchg
out
cmc
pop
aam
and
or
sti
js
or
pusha
sti
add
push
into
shll
inc
pop
outsb
test
xor
aas
sub
inc
clc
add
mov
adc
cwtl
push
ja
fadds
inc
hlt
stos
add
daa
fimull
push
cmp
xor
and
test
or
cmp
xor
sub
mov
into
lods
jo
adc
or
pop
inc
xor
and
xchg
xor
int3
adc
orb
rcll
test
das
inc
mov
push
sub
aas
pop
sbb
push
lock
sub
arpl
push
data16
imul
inc
dec
ss
jb
xor
test
xor
repnz
jae
mov
adc
mov
xor
sarl
push
add
fisubrs
and
loopne
aam
and
or
js
push
out
stos
jbe
int
mov
scas
js
popf
mov
pushf
rclb
test
mov
sbb
or
imul
loopne
adc
inc
and
dec
sub
es
push
add
push
jb
jmp
or
push
gs
arpl
add
or
or
dec
dec
adc
rcll
sbb
ja
mov
mov
jne
scas
push
push
xchg
test
add
lcall
mov
les
sub
das
xorb
add
roll
xchg
push
inc
sbb
outsb
and
scas
push
pop
xchg
or
mov
add
sbb
sub
add
fadds
push
test
addb
mov
orb
fmull
sbb
loopne
es
mov
inc
mov
jb
daa
out
inc
xchg
roll
inc
pop
sbb
adc
sub
lock
mov
cmp
mov
bound
and
mov
repz
add
lea
mov
push
lods
adc
ret
mov
mov
lds
sub
jecxz
adc
jne
pushf
rorl
or
stos
xor
xchg
je
jg
pop
and
lock
adc
and
aam
rolb
push
mov
push
mov
test
lods
and
ljmp
jae
sbbl
inc
test
sub
mov
mov
stos
sbb
sub
mov
fs
adc
xchg
xchg
push
add
icebp
dec
adc
cs
test
bound
in
add
push
xor
setno
push
addl
push
lldt
movsl
ljmp
cmc
sub
andb
rolb
cmc
ret
jp
push
fs
fwait
mov
xor
xchg
mov
cltd
loopne
sub
dec
in
cmp
out
or
jno
inc
inc
dec
pop
mov
add
dec
rcll
push
mov
inc
mov
pop
jne
sub
rol
leave
inc
xor
pop
pop
test
adc
pop
lcall
aaa
clc
mov
int
movsb
mov
xchg
adc
hlt
add
xchg
rclb
dec
cmp
push
push
call
stc
add
cltd
loopne
jns
not
lahf
inc
lea
sbb
sub
ret
mov
jno
andl
lock
push
movsb
test
xchg
and
cmp
or
jmp
popf
xorb
adc
pop
sets
or
sbb
add
mov
test
stos
orl
fcoms
fidivrs
shrl
mov
push
loopne
fimuls
push
add
call
mov
and
ja
lret
js
mov
sbb
das
ds
inc
leave
adc
or
scas
rclb
icebp
jno
xor
inc
push
ret
adc
sbb
mov
mov
repnz
js
add
shlb
adc
and
push
movsl
data16
icebp
mov
push
sbb
gs
aad
mov
add
and
pusha
and
rcll
popa
cmp
call
adc
push
sbb
xchg
and
movsl
jp
inc
popa
push
push
ret
popf
dec
mov
sarb
lock
roll
jp
sahf
mov
rolb
jo
cmp
adc
lods
imul
lret
pop
sub
sub
jo
pusha
add
push
xchg
jo
or
sbb
sbb
cmpsb
leave
pop
push
test
sub
mov
inc
add
imul
int
adc
mov
mov
ss
or
inc
adc
je
mov
add
cmc
hlt
or
dec
add
stos
daa
into
mov
add
jno
xchg
test
jbe,pn
data16
mov
test
add
shl
in
test
sub
adcb
test
xchg
cmp
cld
inc
loopne
popa
into
pop
clc
js
mov
add
inc
cmpsb
pop
int
pop
push
jecxz
lock
adc
cli
repnz
lret
lret
push
sbb
ret
cmp
les
xor
rorb
roll
add
fsubs
shrl
adc
rorb
pusha
mov
fcoml
clc
pusha
mov
pusha
repz
test
loopne
ja
push
jp
mov
rorl
jne
icebp
sti
sahf
les
mov
pop
mov
xor
mov
stos
mov
dec
mov
popa
pop
or
aas
test
pop
leave
jle
mov
or
ret
push
loopne
add
cmp
cmp
aam
orb
cmp
sub
ret
mov
inc
adc
or
pushf
and
cmp
inc
mov
push
inc
movsl
scas
cmp
inc
inc
mov
shll
hlt
adc
pop
or
roll
mov
mov
out
adc
mov
inc
ret
or
or
add
in
jne
inc
loope
push
push
xor
ret
and
mov
add
ja
or
adc
dec
inc
inc
sysenter
jmp
or
xor
out
xlat
dec
shl
mov
adc
sahf
leave
mov
scas
mov
sbb
add
hlt
fisubrl
jno
adc
mov
xor
xor
push
leave
xorl
inc
ret
loop
test
nop
adc
or
sbb
loope
pop
xor
cwtl
adc
or
inc
adc
push
mov
push
cmp
call
push
mov
or
sti
test
inc
aam
negl
cwtl
inc
pop
adc
movsl
sti
ret
and
cli
adc
push
mov
aas
push
or
and
bound
add
sbbb
mov
push
bound
sbb
lret
cmp
mov
cmp
leave
stos
mov
push
push
push
xlat
and
or
outsl
add
lock
mov
aam
and
sub
test
lret
es
jmp
pop
cmp
adcl
add
es
lret
sbb
inc
push
mov
inc
loop
insl
or
dec
sbbl
ljmp
add
sub
test
push
push
push
inc
cltd
or
scas
popf
imul
pop
cmpl
notb
dec
adc
inc
adc
ret
testb
xor
dec
mov
addr16
inc
push
test
add
pop
and
xchg
sbbl
pop
cwtl
popa
xchg
loop
jmp
inc
add
xor
ljmp
test
add
add
push
in
mov
and
clc
inc
adc
lods
popf
sub
push
xor
leave
pop
xor
push
lods
add
rclb
adc
inc
imul
adc
je
repz
mov
mov
in
in
push
lods
cmp
add
push
loopne
leave
orl
jmp
mov
add
dec
xchg
lret
add
cmp
popf
movsl
mov
out
cmp
push
mov
or
cmp
cmp
mov
dec
add
pushf
stos
push
push
add
adc
xchg
inc
and
mov
mov
adc
adc
sbb
out
adc
pusha
mov
sbb
lcall
adc
sub
fldenv
or
sub
lea
add
pop
ret
pop
add
lea
cmc
xchg
push
leave
shlb
lock
inc
push
sbb
and
mov
add
movsl
ret
fwait
movsb
mov
cld
and
mov
mov
inc
and
push
sub
mov
stos
mov
sbb
jb
negl
stos
sbb
pushf
xchg
xchg
and
fadds
loope
push
rol
sbb
daa
adc
inc
or
inc
xchg
out
add
mov
cmp
jge
push
rolb
leave
and
adc
fsubrs
mov
cli
addb
sub
pop
and
sbb
push
mov
shlb
mov
pop
popa
enter
xchg
lret
int
subb
leave
scas
stos
mov
cmpsl
add
je
xor
and
cltd
enter
dec
xchg
out
rcll
cmp
xchg
cwtl
test
rep
or
add
test
mov
lods
cmp
mov
push
xor
push
pop
out
sub
shrb
in
inc
xchg
xchg
cld
sbb
adc
jno
mov
add
dec
add
rorb
mov
lock
ret
inc
add
das
sbb
inc
cmp
sub
push
adc
addr16
arpl
jg
add
lret
das
add
cmp
je
sarb
and
test
inc
mov
xchg
aam
sbb
push
hlt
pop
add
lock
mov
loop
movsb
negb
fcoms
add
or
idivb
andl
scas
pop
inc
lahf
lock
push
push
add
ljmp
adc
pop
add
std
add
or
cmp
pop
jle
aas
xchg
test
pop
xchg
and
lock
mov
sbb
mov
push
sub
jp
mov
stos
sbb
test
aas
in
mov
roll
test
lret
mov
das
test
int3
or
enter
hlt
push
pop
out
add
mov
xchg
icebp
add
adc
mov
rcll
add
aad
xchg
cltd
push
push
inc
push
test
add
adc
cmpsl
test
adc
ds
lods
andl
ret
and
jb
lret
mov
jo
mov
mov
movsb
jmp
jb
repz
mov
pop
shl
mov
xor
cs
je
add
lods
add
dec
adc
orb
ds
push
and
mov
sbb
shlb
mov
sahf
cmp
xchg
xor
sub
cmpsb
push
inc
out
scas
lcall
or
adc
aam
push
imul
pop
mov
or
jb
add
add
push
add
xor
adcl
push
rorb
pop
xchg
andl
out
push
inc
aam
cs
push
pushf
inc
pop
and
repnz
push
fnstcw
dec
cmp
or
mov
adc
addb
add
pop
jo
add
popa
jmp
inc
adc
adc
inc
jo
adc
mov
into
subl
addb
inc
add
push
xor
push
push
xor
jno
cmp
cmc
adc
call
or
adc
mov
add
xor
adc
adc
sti
xchg
add
cmp
lods
addl
jp
mov
loopne
cwtl
mov
dec
mov
aam
jnp
lret
xchg
sub
dec
add
cmp
add
add
shll
cmc
xchg
mov
mov
and
jbe
adc
mov
push
inc
sub
push
adc
notb
jnp
push
cs
push
stos
div
pop
pop
mov
jne
mov
sbb
mov
xchg
sub
out
add
and
mov
adc
test
test
js
imul
push
mov
add
push
jbe
leave
and
cmc
outsb
je
xorb
shll
inc
cmp
dec
bnd
sbb
inc
cmc
inc
mov
push
xchg
mov
and
add
push
rclb
add
nop
ljmp
xchg
lods
dec
lds
into
dec
rcrb
enter
pop
sbb
loopne
data16
mov
push
push
insl
push
push
mov
testl
dec
andl
xorl
xor
push
stc
movsb
and
push
jle
inc
cmp
cmp
lret
pop
pop
pop
push
sbb
jl
xchg
ret
add
mov
add
stc
pop
push
sbb
shrb
adc
test
cmp
xor
or
roll
lret
loope
add
andb
pop
in
inc
test
adc
inc
and
mov
push
add
inc
mov
popa
adc
add
add
mov
dec
jmp
push
xor
add
stos
out
push
arpl
cmpsb
and
inc
inc
inc
popf
mov
push
pusha
sar
outsl
push
mov
adc
pop
inc
inc
loope
or
push
clc
nop
inc
in
test
gs
sbb
jne
inc
cmp
int3
mov
rcrb
je
sbb
adc
xor
dec
mov
adc
ret
shrl
mov
ret
lods
inc
lret
cli
fmuls
adc
pop
inc
cmc
andl
sbb
xchg
aad
ret
add
add
adc
mov
idivl
xor
mov
inc
push
popf
mov
loope
movsl
push
lock
loopne
mov
rclb
aad
push
dec
push
jmp
scas
sub
loopne
aam
test
or
push
pop
int
or
jno
rolb
les
pop
ret
mov
jg
add
loop
mov
cld
test
xchg
add
xor
jp
inc
and
xchg
push
int
jo
inc
push
sbb
repz
dec
in
scas
loopne
lcall
in
sub
jne
and
ja
inc
jo
aam
mul
lds
ja
imul
sbb
mov
pop
pusha
push
mov
mov
and
int3
lret
xchg
rol
cmp
and
dec
adc
outsb
sahf
jb
push
adc
add
loope
scas
dec
sub
or
test
popf
pop
jp
sbb
or
adc
outsb
es
adc
nop
sub
in
loop
inc
dec
out
mov
xchg
repnz
loopne
cmpps
mov
int3
rorl
adc
inc
punpcklwd
dec
push
notl
mov
sbb
dec
push
xor
aad
jae
or
shr
mov
sub
andl
in
rcr
mov
sahf
and
push
push
or
mov
push
add
or
cmp
mov
loop
mov
dec
scas
jae
sub
rcl
xor
enter
mov
aam
mov
and
pushl
cmp
es
sbbl
lods
adc
jge
mov
scas
adc
stos
addb
dec
mov
sbb
inc
aam
in
adc
loope
in
ret
inc
inc
push
into
xchg
and
push
inc
out
fldcw
decb
push
cmp
pop
jo
pusha
sbb
cmp
iret
sbb
dec
mov
jbe
and
lret
popf
add
fmul
push
test
test
mov
sbb
mov
cmpsb
bound
adc
cli
adc
push
add
ror
mov
mov
push
addl
nop
add
cli
dec
adc
test
imul
adc
lods
pop
dec
dec
pushf
mov
cs
bswap
pop
pop
rolb
mov
dec
or
rorb
pop
jns
jnp
xor
sbb
call
ffree
mov
dec
clc
loope
or
add
jo
sub
icebp
adc
enter
mov
pop
adc
cmp
inc
in
jne
mov
pop
pusha
lret
add
and
mov
dec
hlt
adc
addl
inc
push
jge
shlb
test
mov
push
inc
lods
xor
mov
cmp
pop
fwait
pop
in
dec
jecxz
or
mov
arpl
orb
test
xlat
dec
ss
mov
add
xlat
dec
daa
mov
enter
test
dec
cmpsb
cmp
adc
rcrb
dec
icebp
shl
add
dec
push
popa
mov
sbb
mov
shl
sub
pusha
or
jne
sbb
push
sarb
xor
in
icebp
add
je
or
add
dec
rorl
stos
xchg
and
jno
dec
push
dec
sbb
push
into
fadds
pop
popf
stc
add
add
fimull
xchg
imul
or
pop
pop
sub
mov
pop
sbb
rolb
inc
out
and
cmpsl
cli
adc
jne
lret
and
mov
aad
sub
mov
xchg
rcrl
cmp
push
imul
insb
jae
sub
fisubl
inc
mov
push
jno
lock
lret
add
sbb
inc
mov
inc
push
roll
pop
lret
loop
push
jo
sub
lret
sbb
push
js
sbbl
mov
cmp
push
jo
jecxz
and
adc
push
cmp
rcrb
scas
mov
stos
fnstenv
add
mov
and
adc
es
push
mov
xchg
add
inc
cmp
loopne
mov
clc
pop
or
push
add
push
dec
xor
dec
xchg
push
pop
fisubrl
adc
mov
pop
outsb
or
ret
sub
jnp
add
add
loope
inc
insl
sub
adc
stc
pop
icebp
inc
adc
shrl
xor
or
frstor
lret
inc
xchg
jecxz
test
mov
or
icebp
sbb
or
push
into
pop
push
xchg
sub
and
push
xchg
leave
xor
ret
add
sahf
push
js
es
or
cwtl
inc
mov
test
clc
lock
repnz
shl
sbb
popa
clc
fimull
and
sbb
stos
dec
outsl
mov
push
lock
out
inc
xor
pop
sbb
fsts
xor
dec
es
outsb
out
sbb
sbb
push
aad
push
jno
in
pushf
sub
adc
pop
adc
lods
loop
push
shl
or
add
inc
.byte
.byte
.byte
in
call
in
add
cmp
sub
imul
sub
add
push
icebp
add
add
add
divl
in
mov
sarl
rolb
adc
in
mov
cld
pop
add
push
imul
sub
cmp
add
mov
scas
jge
cmp
add
mov
cmp
imul
dec
fucomi
insl
sti
adc
shrb
pop
mov
and
aaa
outsl
ljmp
add
imul
add
mov
pop
or
outsl
in
mov
or
sub
cmp
sub
add
js
sbb
shl
mov
insl
das
enter
mov
popa
adc
mov
fildll
adc
add
lret
mul
mov
sbb
sub
add
rcrb
lods
insl
sbb
dec
stc
pop
sbb
add
add
xchg
insl
fistl
nop
clc
sub
sbb
pop
lods
fisttpll
pop
and
add
int
fbstp
rorb
adc
mov
mov
outsl
fwait
add
add
mov
testb
fimuls
mov
ja
mov
mov
adc
or
mov
sub
cmp
pop
jae
and
ret
ret
mov
test
je
fldt
push
test
sbb
cmp
in
lret
mov
xchg
negb
notb
lcall
mov
mov
cmp
mov
sbb
mov
add
paddusw
mov
rclb
adc
mov
sar
ds
bound
sbb
sbb
pushf
movb
pop
sub
mov
mov
add
mov
outsb
sbb
mov
scas
mov
sub
or
fdivl
sub
insl
add
shrb
jnp
sbb
and
mov
push
rcll
jae
out
xchg
pop
cld
test
or
in
mov
aaa
pop
cmpsb
call
cli
or
sbb
cmp
dec
sbb
scas
sub
xchg
xchg
mov
sbb
loope
out
push
push
sbb
mov
cmp
outsb
mov
add
arpl
jne
lock
test
adc
sub
add
mov
lret
mov
in
pop
add
mov
into
pop
adc
test
movsl
mov
xor
mov
pop
mov
imul
or
push
xor
push
fcomp
outsb
add
mov
divb
int3
std
jb
adc
sbb
mov
mov
sbb
sub
ret
cltd
or
add
lock
shr
ljmp
sub
and
pop
or
push
mov
psubb
shl
rcrb
outsb
lea
mov
in
int
cmp
insb
or
ds
and
out
add
fs
cmp
push
or
sahf
mov
mov
push
dec
cmc
or
inc
jmp
or
push
jo
mov
sbb
mov
or
aad
fwait
lcall
mov
push
enter
push
cld
cmp
pop
sahf
fidivl
bndldx
leave
cmp
lcall
and
clc
cs
mov
lock
imul
push
dec
cmp
or
mov
push
jmp
push
mov
or
xchg
sbb
into
jge
mov
cmp
pop
xor
add
inc
clc
lea
sbb
or
sbb
pop
pop
xchg
fnstsw
ret
sbb
sub
pop
mov
scas
push
arpl
sbb
and
lahf
icebp
rclb
int3
rolb
dec
ret
fsubrl
inc
stos
lods
jecxz
icebp
adc
jge
pop
xor
pop
push
shl
cli
push
mov
ret
add
or
cld
and
and
adc
stos
cld
into
in
jb
dec
mov
add
mov
call
in
dec
push
sub
scas
xchg
mov
xor
pushf
sub
add
mov
mov
sbb
popf
or
or
adc
ds
sbb
inc
fistpl
push
rcrl
sbb
imul
and
insl
imul
roll
sbb
mov
dec
mov
xchg
xlat
sbb
sbb
shll
pop
jno
or
or
jmp
adc
sti
sbb
ss
imul
mov
mov
push
mov
add
jecxz
in
into
icebp
sbb
jne
loopne
pop
ret
add
push
adcl
xor
int
pop
scas
mov
push
dec
push
cmpsb
popl
or
sbb
jp
insl
aaa
adc
arpl
mov
jo
repnz
xchg
sbb
dec
and
mov
es
pop
pusha
test
adc
imulb
xlat
sbb
pop
in
adc
add
adc
cmpsb
addb
int
jbe
outsb
test
pop
add
call
stos
xor
dec
aam
mov
arpl
cmp
sbb
sbb
mov
mov
mov
mov
pop
mov
add
cs
mov
push
ficompl
add
pop
addr16
pop
mov
loopne
psrld
subl
mov
mov
in
adc
dec
pop
loope
subl
mov
pop
shll
or
adc
adc
xchg
mov
cli
adc
cld
push
repz
push
mov
push
inc
arpl
popa
cmp
sub
adc
mov
push
shll
mov
aas
jge
jno
and
mov
test
sbb
out
xorl
ficoms
add
repz
repnz
mov
out
add
or
and
lcall
cmp
cmp
lods
push
stc
data16
sbb
pop
jno
fimuls
into
cmp
mov
cmp
lar
mov
push
lcall
adc
inc
mov
movsb
cmp
cmp
mov
loopne
ss
add
cmp
jne
jo
push
test
push
jbe
insl
cmp
adc
push
push
push
push
imul
lock
mov
mov
mov
pop
jnp
push
add
adc
ljmp
mov
and
loope
call
pop
or
or
data16
mov
sbb
pop
xor
mov
adc
jl
add
push
push
imul
repnz
gs
call
and
ja
insl
sarl
aaa
fstpt
jp
push
mov
shll
or
adc
mov
mov
hlt
mov
out
sbb
add
imul
push
sti
ret
clc
sub
stc
out
sub
mov
xor
jae
mov
push
mov
lock
jmp
lea
test
fnstsw
icebp
pop
jo
mov
xor
cwtl
pop
add
mov
stc
sbb
lods
or
jnp
sbb
sbb
adc
adc
shlb
push
push
outsl
jo
adc
dec
ffreep
ret
sbb
add
fcmovnu
mov
mov
xchg
cmp
and
cmp
jmp
xchg
cmp
inc
test
mov
push
jb
pusha
roll
icebp
test
add
jnp
cmp
or
jnp
fstpt
test
jl
push
mov
or
pop
sbb
pop
seto
cmp
pop
xor
dec
dec
inc
hlt
push
shll
mov
lcall
or
mov
paddd
dec
or
aad
xchg
jns
ffree
sub
fdivrs
xchg
stc
or
and
fnstsw
clc
xor
loopne
dec
rclb
ss
add
cmp
or
cmp
or
mov
inc
mov
call
in
arpl
dec
sbb
ret
jg
lock
push
enter
out
xchg
sbb
adc
adc
cmp
mov
pop
cmp
or
test
std
xacquire
add
lods
inc
sbb
pop
rcrb
insl
fsubs
bnd
xor
outsl
xor
ja
and
sbb
cmp
and
imul
sub
rclb
popa
stos
adc
jge
push
enter
test
push
jb
inc
loop
xor
xor
or
fcomps
cmp
push
pop
jl
sbb
adc
pop
fistpl
sub
jns
push
repz
mov
or
mov
dec
cmp
mov
loopne
adc
or
stc
std
fcomps
rolb
enter
mov
mov
jo
xchg
aad
add
pop
mov
sti
loop
add
cmp
iret
inc
imul
mov
dec
mov
mov
push
sbb
push
mov
cmpsb
pop
or
mov
lods
ficompl
sub
cmp
adc
xchg
scas
int3
daa
sub
or
orl
fildl
or
lret
mov
pushf
pushf
mov
mov
sbb
add
mov
or
pop
call
loope
jo
adc
clc
add
fimull
push
jae
int3
push
icebp
adc
push
clc
adc
xchg
popa
add
fdivrs
mov
xor
out
or
push
fimull
or
mov
sbb
or
add
push
mov
push
inc
std
add
or
cmp
and
mov
mov
bound
jo
in
mov
les
icebp
add
insl
mov
movsb
mov
shlb
les
mov
sahf
nop
add
sbb
mov
jle
into
pushw
call
mov
sub
pop
pop
in
aam
sub
adc
mov
or
aas
call
push
push
adc
or
inc
push
andl
push
ret
testb
sbb
mov
xchg
push
loopne
bound
inc
mov
sub
insb
pop
pop
lods
rcrl
pop
push
or
loopne
adc
add
push
cmp
dec
in
popf
cmp
add
shl
adc
sub
or
daa
js
xchg
jge
mov
and
or
in
iret
add
xchg
es
mov
fwait
mov
adc
adc
sti
or
cs
or
pcmpeqb
mov
xor
pop
gs
xchg
dec
dec
push
enter
mov
leave
stos
enter
jno
cltd
dec
cmp
fwait
sub
jo
sub
cmp
pop
stos
jg
mov
icebp
adc
pushf
push
insl
adc
push
xorl
rol
lret
lock
stc
and
inc
jae
push
xchg
or
inc
mov
ret
imul
pavgb
enter
xchg
js
cmp
cmp
push
cvtps2pd
leave
out
add
scas
rcr
cmp
add
dec
push
imul
dec
into
int3
in
or
push
xor
pop
loopne
sbb
in
sarl
cli
jle
shrb
push
inc
out
lcall
mov
or
inc
xchg
pop
mov
or
int
jl,pt
mov
insb
mov
push
shrl
push
inc
add
aas
adc
notb
cmp
into
fbld
pop
push
xor
ss
push
test
dec
sbb
mov
scas
jp
lret
pop
pop
push
cmp
sub
and
push
push
add
lret
das
jg
sbb
xchg
loop
pop
sbb
sbb
and
jb
mov
push
mov
dec
mov
negb
mov
data16
fs
jne
mov
sub
clc
or
sbb
push
xor
ljmp
xor
push
addb
jbe
cmp
mov
shrl
and
add
ret
pop
cltd
mov
or
dec
mov
pop
add
mov
or
mov
stos
jmp
cmc
add
cmp
popa
jg
icebp
pop
jae
loop
jmp
push
inc
dec
adc
mov
or
fiaddl
movsl
or
adc
jo
in
scas
push
adc
push
rcl
xor
clc
push
xor
xor
xor
ss
cli
push
pop
sbb
adc
add
push
and
and
testb
inc
sbb
adc
je
icebp
aaa
icebp
jmp
sbb
mov
push
fisubs
push
pop
into
sub
add
sbb
mov
push
sarb
mov
ret
inc
or
loopne
mov
in
xchg
arpl
test
in
cmp
je
push
dec
leave
filds
push
out
shlb
loopne
sub
test
or
loopne
scas
sbb
imul
jb
test
push
lods
test
add
sub
fistpl
xor
mov
cs
dec
pop
into
sbb
cmp
lret
mov
push
jns
icebp
loopne
lret
addr16
rorl
shrl
pop
movsl
jbe
hlt
cmpsb
sub
adc
add
and
xor
adc
sbb
xchg
or
inc
cltd
adc
mov
bound
dec
and
getsec
mov
lods
lods
push
push
repnz
add
fiadds
mov
movsl
sbb
loopne
js
sahf
add
cmpsl
pop
sbb
lret
push
mov
sbb
ffreep
add
mov
mov
leave
pop
and
adc
jnp
sub
sub
movsl
lret
mov
mov
cmp
adc
or
sbb
jnp
mov
pop
add
add
int
jb
jo
loope
clc
out
adc
fwait
dec
mov
add
aad
or
mov
gs
and
jmp
or
rcrb
push
jle
push
adc
push
roll
filds
or
cmpsl
out
int3
add
push
or
andb
push
cmp
cltd
push
push
xchg
or
je
mulb
push
mov
or
adc
loopne
adc
leave
pop
fwait
sbb
push
pop
jge
push
mov
mov
push
scas
or
into
xor
jl
xchg
add
cmp
cmp
pop
sbb
mov
xor
shll
outsb
out
sub
mov
xor
mov
xlat
rcrb
cmpsb
cmp
add
outsl
sub
cmp
fs
addr16
add
or
mov
jmp
push
pushf
aad
mov
clc
hlt
lret
mov
xlat
aam
aam
div
fldl
jns
dec
nop
inc
xchg
hlt
adcb
mov
xchg
jns
in
sbb
push
sub
icebp
sub
roll
leave
push
dec
pop
arpl
stc
cmp
loop
pop
adc
pop
dec
shrb
or
sub
mov
and
cmp
adc
mov
and
mov
fcmovnbe
mov
insl
loopne
addb
add
add
sbb
jns
sbb
mov
jge
lea
push
jnp
sbb
cltd
or
sub
insl
cmp
mov
mov
sbb
push
mov
add
enter
xchg
cmp
jae
adc
inc
lods
adc
shlb
out
mov
pop
leave
fimuls
loope
inc
cmpsl
and
fistl
mov
mov
and
insb
add
fwait
ljmp
aam
shl
mov
jnp
inc
out
jb
dec
mov
rol
fcomps
sti
imul
dec
or
pop
sbb
decb
sub
mov
bound
mov
add
xor
in
cmp
mov
lret
or
clc
rcrl
mov
inc
sbb
cmp
nop
cmp
and
add
push
ret
sub
sub
roll
loop
push
add
xor
shll
dec
orb
aam
add
adc
or
lock
sbb
call
or
pop
jae
adc
int
pop
xchg
icebp
jo
mov
xchg
dec
or
mov
cli
bound
gs
in
push
mov
sub
cwtl
jle
push
adc
lods
out
ret
add
xor
sub
jbe
lcall
stc
push
add
loopne
mov
jnp
dec
mov
inc
rorb
icebp
ret
sub
in
xchg
xor
ror
add
cmp
into
outsb
jp
addb
pop
cmpsb
pop
or
icebp
inc
sub
rorb
mov
push
jo
add
xor
xchg
jno
xchg
cs
adc
mov
ret
in
xor
inc
xchg
leave
notl
inc
push
imul
int
push
add
loope
cmp
je
pop
xchg
push
stos
icebp
add
jbe
adc
mov
push
in
cwtl
cmp
fdiv
dec
push
stos
orb
test
xor
test
scas
ds
adc
or
jge
imul
inc
mov
in
or
rolb
xor
adc
push
sarl
xor
mov
xchg
popf
push
outsb
test
xor
pop
adc
scas
ret
adc
lea
inc
pop
sub
cmp
ljmp
add
psrlw
xchg
push
stc
mov
outsl
shl
push
mov
or
sbb
jb
pusha
mov
inc
decb
stos
fstp
pushf
movsb
aad
insb
nop
ret
adc
push
ret
icebp
adc
dec
lahf
mov
into
mov
push
subl
adc
dec
pop
sbb
stos
mov
loopne
add
mov
cmpsl
mov
adc
jmp
andl
mov
fdivrs
cli
loopne
sub
inc
ljmp
iret
mov
push
mov
sbb
adc
pusha
pushf
add
pop
pop
inc
leave
repnz
xor
sub
repnz
inc
push
sbb
aaa
jne
pop
adc
pop
cmpsl
dec
sbb
stos
stos
insb
and
add
lahf
and
add
pop
outsb
in
inc
cmp
shrl
sbb
push
sti
mov
js
xor
jno
mov
jno
xor
cli
loope
lods
xor
push
pushf
sub
ja
xor
leave
add
push
sub
lock
push
pop
xchg
andb
mov
add
cltd
push
push
sub
fbstp
pop
call
aaa
push
cmp
rolb
call
adc
lods
stc
sbb
xor
sbb
daa
mov
jb
or
and
adc
sbb
mov
loope
adc
lock
jne
ljmp
xor
mov
sbb
mov
push
repz
push
push
invd
push
sub
decb
roll
test
shr
push
mov
adc
add
jo
into
mov
inc
clc
and
or
pop
mov
xor
and
cmp
dec
dec
std
pop
pop
sub
and
mov
rcll
shl
pusha
clc
xchg
pop
mov
lea
xchg
insb
dec
lods
inc
out
sarl
pop
sub
dec
sbb
movsl
roll
pusha
sbb
insl
inc
add
sub
lcall
jg
adc
shll
in
sbb
in
jne
ljmp
mov
mov
mov
sbb
xor
and
adc
mov
loope
push
or
push
gs
je
mov
aam
dec
and
mov
and
inc
cmp
sbb
sti
lock
push
sbbl
call
push
sbb
testb
stos
push
les
mov
inc
push
add
add
das
aad
sub
add
adc
pop
xor
rolb
cmp
adc
stc
leave
movsb
enter
push
fisubrl
fimull
stc
add
gs
sub
adc
ret
lret
push
dec
mov
mov
xchg
mov
mov
sahf
jne
jae
xchg
jle
into
test
sbb
push
push
or
sar
or
jmp
inc
or
lret
lret
pusha
out
fwait
shlb
pop
ret
test
mov
xor
cwtl
add
dec
loopne
popf
xlat
and
pop
mov
mov
dec
sbb
add
in
xor
and
out
xchg
sub
add
lods
in
xchg
iret
and
mov
roll
jecxz
inc
sub
rcl
aam
popf
xorb
jg
scas
xor
mov
mov
mov
cld
and
pop
xchg
or
sbb
scas
cmp
jmp
lret
in
shr
cmpsl
jnp
inc
and
sub
je
test
mov
sbb
pop
test
jl
aad
pop
push
ret
popf
push
ret
fs
das
mov
mov
nop
loop
adc
push
xchg
mov
add
add
mov
enter
mov
dec
inc
ds
nop
fnstenv
sub
pop
call
stos
aas
insl
sbb
js
enter
lods
and
push
cmp
cmp
push
pushf
shll
jnp
mov
sub
mov
sarl
jp
fldenv
jo
xor
dec
lcall
push
sub
cpuid
or
mov
push
iret
push
dec
pop
stos
sbb
pop
mov
dec
or
inc
mov
sub
fwait
addb
mov
les
push
jg
sbb
dec
mov
jmp
push
add
cmp
imul
fimull
cmpsl
jae
inc
push
add
adc
inc
movsl
cwtl
repnz
jb
sbb
pop
dec
inc
jae
push
or
cmp
imulb
cwtl
push
lret
adc
xchg
cmp
xor
push
add
rorb
popa
cs
push
dec
and
inc
adc
stos
inc
mov
sbb
leave
sahf
int3
adc
push
mov
push
push
push
mov
ss
jp
roll
jl
jg
test
addl
loope
or
inc
mov
popf
mov
pop
jmp
add
dec
and
pop
mov
subl
imul
sbb
sbb
push
sahf
inc
push
repnz
loope
jo
sbb
fcmovbe
setno
add
push
xor
inc
add
lds
sbb
les
mov
enter
sbb
xchg
test
mov
push
jmp
add
mov
adc
divb
cli
les
stos
adc
popf
mov
jl
push
xchg
sub
push
push
stos
add
push
push
mov
add
xchg
xor
xor
xchg
xchg
hlt
inc
jmp
cmp
push
add
mov
add
mov
in
xor
into
rcr
xlat
popf
icebp
aad
lcall
loope
mov
in
lods
leave
into
shlb
data16
decb
mov
adc
mov
enter
push
scas
push
fcoml
sub
std
push
sbb
cmp
jb
mov
mov
outsb
lods
ret
jo
mov
pop
add
inc
shrb
repz
test
pusha
or
mov
mov
divb
outsl
adc
inc
in
or
pop
mov
xor
popa
mov
iret
mov
dec
lock
fs
jmp
adc
mov
shrl
or
pop
pop
pop
pop
xchg
pusha
enter
dec
fnstenv
dec
xor
inc
jle
or
rorb
push
lahf
sub
add
add
fiaddl
xor
xchg
outsb
add
xor
ror
inc
mov
push
or
faddp
cmp
jae
inc
pop
and
jbe
mov
xchg
mov
int
pop
pop
dec
cmp
mov
push
stc
bound
add
adc
repnz
mov
test
mov
push
add
ljmp
cltd
jo
loopne
push
sub
stos
cmp
movsl
adc
js
aaa
lods
not
leave
loop
mov
dec
fmuls
out
imul
pop
push
roll
push
out
sbb
mov
cmp
jl
shll
dec
xor
addb
inc
scas
mov
sub
mov
xchg
and
insb
cmpsl
and
push
cs
sub
orl
push
loopne
imul
push
cmpsl
jo
pop
sub
jns
lahf
push
mov
or
bndstx
mov
pmaxsw
rcrb
in
xor
dec
cvtps2pi
out
mov
dec
and
lods
ret
es
xchg
aam
inc
xchg
in
sub
inc
mov
pop
jns
add
test
out
jmp
rorl
jno
jecxz
inc
jo
or
stos
dec
outsl
jb
mov
sbb
sbb
inc
loopne
lods
enter
fwait
cvtps2pd
xchg
push
sbb
and
rclb
or
addr16
cwtl
lock
sbb
rorl
rclb
dec
idivb
push
gs
or
xlat
or
push
mov
test
inc
mov
xor
pusha
adcb
test
sub
in
cmp
mov
fcoml
shrb
or
rolb
nop
mov
dec
mov
icebp
ret
xchg
rclb
pop
repz
xor
adc
push
push
testl
pop
shl
mov
cs
push
add
fisttpl
add
sub
dec
loope
adc
inc
mov
xor
add
cmpsb
insl
cmp
das
stc
dec
mov
lcall
loopne
adc
and
call
jnp
add
adc
fimuls
rcrb
adc
mov
jbe
addb
popf
push
shll
adc
call
or
add
or
add
sbb
adcl
divb
adc
jne
sbb
push
cmp
stc
sbb
pusha
fisubl
push
rcrl
call
or
enter
ret
mov
ret
sub
or
rclb
loop
xor
push
sbb
xchg
nop
or
iret
adcb
sub
shll
sbb
mov
inc
aam
push
or
sbb
jnp
pop
adc
ficompl
push
popa
shl
stos
add
xlat
xchg
lcall
inc
lods
xor
jmp
mov
movsl
inc
mov
push
loope
jo
mov
mov
inc
es
inc
aaa
push
je
fsubp
je
push
fcmovnu
adc
adc
out
cmp
jo
mov
or
add
ficompl
add
or
adc
lods
mov
jmp
stos
sub
and
lret
push
and
xchg
ror
inc
adc
cmpsb
or
push
or
pop
fcom
dec
adc
add
push
aad
test
pop
mov
rorb
lcall
inc
ret
and
into
fisttpl
jo
and
or
clc
mov
test
scas
mov
stos
sbb
out
inc
push
cmp
into
adc
xor
jno
push
and
ret
nop
push
ret
pop
or
cmp
inc
dec
ds
push
imul
dec
lods
js
pop
lods
subb
push
jno
inc
lock
cmp
jns
mov
stos
mov
sbb
and
sbb
enter
or
inc
arpl
add
adc
test
bound
mov
pop
test
sbb
mov
xchg
adc
push
shlb
das
jbe
or
add
adc
adc
sahf
rol
pop
cmpsb
xor
sti
inc
aaa
loopne
xor
cwtl
xlat
and
testl
sub
es
mov
test
sbb
pop
sarb
add
cmp
sub
push
stos
stc
add
and
in
rcrl
xchg
leave
sub
and
stos
int
mov
and
push
adc
mov
aad
xor
push
or
jmp
cs
movsb
ja
inc
xor
lds
into
push
adc
xlat
arpl
add
dec
mov
shll
push
orb
fs
add
pop
sub
movsb
sbb
int3
je
pop
inc
mov
push
rolb
mov
rcl
adc
pop
fucomip
add
out
or
lock
pop
sbb
mov
jo
push
jb
pop
sbb
adc
or
xor
subl
or
inc
adc
adc
add
mov
add
aad
cmp
cmp
adcb
push
ret
stos
mov
call
push
shrl
cmc
jo
mov
inc
mov
push
mov
push
inc
inc
add
or
or
sarl
shlb
sbb
mov
add
mov
lret
add
xchg
ret
mov
jo
pop
sub
cwtl
addr16
subb
sbb
xchg
or
pop
sub
divb
fisubrl
xorl
mov
fwait
sbb
inc
movsb
or
jl
mov
leave
insb
push
pop
or
rcl
xchg
sbb
imul
das
dec
dec
nop
lsl
mov
cwtl
fsubs
out
or
enter
sbb
hlt
repnz
add
lds
into
loopne
add
push
lods
loopne
cli
xchg
jae
aas
or
add
pop
nop
push
or
ret
loopne
shrl
mov
lock
push
jb
bound
std
popa
icebp
mov
mov
aaa
mov
mov
out
jp
xchg
push
dec
pusha
jne
sbb
lock
mov
pusha
add
xchg
and
mov
sub
addb
adcl
cmp
pop
jne
sbb
jb
adc
cltd
mov
shrl
lds
ljmp
mov
lds
sbb
stc
test
cld
ljmp
push
or
mov
push
insb
addr16
cld
push
iret
adc
inc
ret
sar
xchg
stos
shlb
or
jmp
xchg
sbb
inc
daa
lret
daa
hlt
adc
call
nop
mov
adc
mov
bnd
lret
call
or
mov
daa
xchg
inc
sub
ljmp
into
repnz
jecxz
sbb
push
or
jnp
add
repz
or
and
cmp
push
mov
mov
sub
aas
es
lds
add
sbbl
inc
xorl
cmpl
mov
or
mov
stos
pusha
sbb
out
scas
bound
enter
jo
ret
xchg
add
pop
enter
sbb
add
ret
push
sbb
add
adc
push
push
and
xor
push
test
sbb
or
test
mov
or
in
in
loope
push
sbb
push
test
cmp
and
stos
jnp
push
dec
xor
popa
sbb
inc
sbb
sub
loop
push
ljmp
outsb
lock
stc
or
push
adc
popa
xor
pushf
andl
mov
adc
xor
andb
lock
sarl
mov
rcrb
lods
mov
pusha
add
cmp
or
outsb
pop
push
xor
scas
push
rclb
mov
mov
or
and
and
fcoml
int
stos
lods
jp
inc
inc
loopne
lods
push
call
dec
ja
sbb
loopne
jp
inc
fimull
cmpsl
mov
adc
push
push
xor
sub
xchg
es
cmpsb
push
sbb
and
push
push
scas
mov
icebp
je
in
add
out
dec
pushf
js
and
mov
out
lret
ljmp
cmc
icebp
adc
rcl
sti
or
add
sti
rol
daa
lcall
dec
push
sub
jb
adc
hlt
sub
movsb
in
inc
sbb
add
bound
and
push
adc
ret
or
jo
cltd
push
inc
movsl
jne
mov
mov
cs
dec
or
pop
mov
sbb
rcrl
xor
adc
cli
push
int
sub
rcrb
push
mov
xchg
mov
fcmovne
mov
and
shrb
outsb
pop
in
gs
rorb
adc
push
lcall
inc
mov
js
pusha
xor
enter
stos
notb
add
or
test
mov
nop
jb
in
addl
pop
ss
dec
inc
mov
mov
addr16
xor
xchg
pushf
test
inc
or
xchg
call
mov
push
pop
test
cmp
rorb
xchg
cmp
inc
xchg
jb
ljmp
push
ret
sub
push
push
push
cmp
jb
imul
push
dec
cmc
ljmp
and
imul
mov
add
jmp
sahf
inc
ficoml
sbb
iret
lods
pop
test
xor
or
mov
xor
mov
sub
adc
adc
push
lock
sahf
jge
je
movsl
ja
adc
movsl
enter
test
rcll
into
push
push
int
outsb
sub
jae
jne
imul
sar
cmp
sbb
stos
daa
or
lds
loope
push
leave
arpl
adc
outsb
orb
fs
push
push
adc
dec
mov
dec
pop
jmp
and
sbb
loopne
loopne
sbb
not
xorl
pop
push
outsl
push
inc
lds
ret
push
pop
adc
adc
xor
dec
jnp
ret
in
sbb
roll
js
lcall
or
jg
push
mov
pop
jmp
cld
push
add
mov
push
das
ret
or
cmp
mov
sbb
push
cmpsl
pop
lock
cmp
sbb
sbb
pop
pop
push
cmp
mov
into
and
or
rorb
and
loope
inc
not
mov
push
aad
mov
addb
cmp
or
xlat
jo
add
xchg
mov
inc
mov
icebp
xor
mov
pop
dec
add
and
mov
adc
and
ljmp
rol
or
shll
lods
push
pushw
jne
or
push
or
xchg
adc
pop
mov
dec
dec
add
icebp
jo
inc
aas
cs
sbb
out
mov
lret
out
test
fisttpl
sbb
push
push
sub
cmp
roll
cwtl
push
lret
jge
mov
pop
mov
popa
push
ret
inc
adc
sub
sub
test
xchg
subb
loope
test
dec
aam
or
pop
jne
push
push
fcomip
cmpl
shlb
push
push
lcall
incb
xchg
add
or
or
sbb
xchg
rclb
test
fisubrl
push
inc
inc
jnp
dec
addb
push
pop
subl
pop
outsl
jl
xor
or
push
jo
decl
imul
int
mov
lods
icebp
add
pop
nop
push
mov
xchg
lret
mov
adc
add
cmp
pop
sub
shll
sub
stc
push
out
rcll
or
xlat
push
cmc
shrb
adc
push
adc
mov
jle
pop
leave
push
int3
outsb
arpl
sub
lds
das
add
add
xchg
xchg
test
clc
roll
pop
sub
out
inc
add
mov
cmp
testb
pop
pop
xchg
mov
cwtd
fmull
adc
or
and
or
call
loopne
pop
arpl
adc
or
repnz
lret
test
jb
xor
lock
and
mov
rcl
loope
push
enter
inc
jae
push
push
pop
mov
mov
pop
jnp
sbb
mov
mov
mov
js
and
and
push
test
test
sub
and
push
adc
xor
mov
pop
scas
or
push
and
xchg
inc
add
fisubrs
xorl
mov
xchg
jo
bnd
adc
or
xchg
aad
fxch
push
rcrb
ret
xchg
mov
xor
idivl
stos
pop
pushf
push
insb
adc
or
sbb
pop
cmpb
mov
call
mov
xor
test
rcll
push
dec
sub
push
ret
mov
enter
xor
sub
js
dec
push
xor
inc
xchg
mov
adc
sbbl
insb
lea
pop
push
mov
xchg
ret
inc
and
pop
popf
push
nop
inc
imul
jmp
mov
jecxz
xchg
rolb
js
jnp
xorl
mov
push
inc
addl
inc
jg
fs
adc
and
faddl
sbb
mov
xor
test
xchg
add
cli
ret
or
into
mov
xchg
mov
xchg
push
addb
pop
add
cmp
data16
and
xor
mov
push
jecxz
or
mov
sbb
jno
icebp
dec
stc
int
push
test
enter
andb
inc
mul
mov
xor
add
push
xchg
pop
nop
xchg
or
adc
leave
push
or
and
adc
mov
lds
test
pop
pop
popa
add
cmp
cmp
or
lock
push
leave
adc
push
inc
test
adcb
jb
add
js
add
inc
sub
mov
cmp
clc
push
jmp
cld
mov
pop
rclb
call
cmovl
and
or
enter
dec
popa
rorb
mov
mov
lock
mov
add
add
leave
loopne
test
adc
or
push
inc
ret
stos
leave
xlat
mov
inc
adc
cmp
dec
icebp
fs
xor
or
loop
pop
int
and
int3
cmp
xchg
incb
sbb
shl
sub
push
adc
or
and
arpl
push
aam
negb
orb
sub
mulb
push
cmpsl
cltd
fcomi
jl
or
shr
lcall
xchg
jnp
adc
adc
test
je
fs
rcl
lods
sbb
jecxz
insl
or
clc
loop
push
ja
imul
arpl
push
testb
test
adcl
cmp
or
sub
bound
push
mov
inc
lock
pop
sbb
sbb
xor
out
lahf
jmp
roll
adcb
or
mov
mov
unpckhps
mov
lcall
push
or
out
ret
sbb
sahf
push
stos
sbb
data16
pop
mov
cmpsl
popa
push
sbb
adc
test
jns
adc
stos
cli
idivl
push
push
mov
push
and
std
jmp
xchg
imul
icebp
pop
jmp
scas
push
push
adc
stos
test
mov
sbb
mov
mov
add
rcll
sub
data16
lods
test
rolb
insb
push
xor
lock
stc
push
pop
xchg
pop
inc
movl
leave
add
cmp
outsb
sbb
jne
inc
push
je
mov
shrb
rclb
test
ret
add
xor
xchg
lret
inc
adc
and
test
ret
xchg
push
clc
sahf
rcrb
lret
jge
adc
rorl
sbb
push
xor
imul
data16
mov
popf
ljmp
xchg
mov
repnz
test
xor
mov
sarl
push
sub
adc
lcall
add
mov
xchg
add
xor
mov
js
jne
adc
lods
pop
loope
push
mov
loopne
cmp
shrl
sub
imul
mov
adc
mov
hlt
lret
aad
cmp
pop
jnp
orl
adcb
cmp
mov
and
iret
cli
ror
and
xchg
jmp
popa
ss
nop
aam
pop
add
adc
or
and
ret
dec
push
xor
mov
out
add
push
loope
pop
sahf
push
adc
iret
sbb
fcomps
jp
mov
stos
push
mov
push
jne
adc
push
adc
rolb
pop
sbb
in
lods
add
mov
push
jmp
sbb
xlat
adc
xchg
xor
push
or
leave
das
push
movsb
adcb
bound
inc
js
inc
rolb
adc
add
or
mov
push
add
cli
rol
jns
lret
cmp
les
rorb
jno
mov
jl
repz
cltd
jmp
cmp
inc
sbb
test
adc
iret
das
xor
add
add
jg
pop
cmpsb
sbb
or
cmp
xor
push
adc
mov
test
inc
pop
pusha
aas
sbb
push
iret
pop
call
js
xor
or
or
sub
mov
cltd
pusha
incb
cmc
rolb
roll
adc
sahf
or
jmp
shlb
dec
inc
rolb
js
iret
and
hlt
out
jns
insb
xchg
mov
iret
adc
pop
mov
push
jbe
fsts
add
sub
pop
fldl
into
xor
stos
adc
popa
sub
addb
push
test
xchg
add
inc
jmp
push
mov
lret
cmp
test
int3
cs
addl
call
push
push
fisttpl
enter
stos
sarb
mov
pop
sbb
fstl
mov
sti
adc
push
pushf
sti
loopne
ja
pop
mov
adc
sbb
inc
mov
add
jl
xor
adc
jecxz
push
insl
bound
mov
push
add
stos
xchg
lock
inc
mov
rorl
lds
mov
push
mov
jae
or
sub
cmp
sub
in
shll
mov
test
ret
cwtl
lea
sbb
repnz
test
fisttpll
adc
dec
pop
add
cli
sbb
cmp
xchg
das
mov
pop
adc
imul
adc
frstor
pop
push
adc
cmp
mov
push
testb
or
xor
fs
sbb
sub
push
cmp
dec
xchg
sub
fucomi
stos
add
imulb
cmp
test
movsb
int3
stc
mov
push
dec
ss
scas
pop
mov
clc
pop
push
popf
pop
and
lret
cmp
mov
or
xor
xchg
mov
push
mov
or
xchg
fldenv
orb
adc
enter
ffree
mov
inc
cmc
leave
es
sbbb
divb
xchg
sbbl
mov
or
sbb
cmp
adc
xor
mov
ljmp
scas
pop
mov
dec
cwtl
sbb
push
fcomps
xchg
sbb
sbb
cmp
enter
or
xchg
cmp
lock
cld
or
je
ret
icebp
ret
push
sub
push
lret
mov
adc
inc
cmp
mov
shlb
lret
insl
js
xchg
adc
or
in
push
push
mov
mov
inc
sub
pop
or
xchg
repnz
cli
dec
adc
mov
cmpsl
bound
aaa
sbb
addb
test
js
ss
adc
shr
loopne
xor
jmp
mov
shlb
push
fists
sub
pop
outsl
pop
popa
movsl
cmpsl
push
sub
jns
cli
es
cmp
mov
add
sbb
sarl
mov
jb
testb
aad
mov
add
sbbb
xchg
mov
jecxz
cmp
xor
jmp
notl
push
sbb
dec
sbb
mov
movb
rorb
pop
sar
lock
dec
adc
sbb
add
add
and
fisttps
mov
call
and
sbb
sub
jecxz
adc
xor
add
je
inc
pusha
sbb
shll
cmp
addr16
mov
cmp
inc
inc
mov
add
das
sbb
pusha
xlat
jnp
add
mov
sbb
jle
inc
jae
pop
rorb
mov
add
ret
icebp
sbb
popa
xor
inc
or
into
aad
xchg
adc
andb
int
mov
fmuls
jp
lock
mov
rorb
loop
adc
or
ljmp
jb
cwtl
sbb
f2xm1
rcl
call
sbb
mov
pop
lock
push
xor
adc
xor
jbe
ds
mov
call
into
cmp
rorb
outsb
stc
scas
call
pop
dec
into
cwtl
push
loopne
add
sub
adc
inc
je
repnz
cmpsl
push
or
xor
mov
aas
or
xchg
fs
test
mov
enter
enter
adc
into
shrl
pop
int
push
xchg
push
mov
pop
adc
dec
hlt
test
or
push
jno
adc
lods
sbb
popa
subl
sbb
mov
sub
xchg
cld
rorl
int3
mov
cli
test
mov
subl
add
and
add
loop
push
outsl
pop
outsb
jb
inc
inc
rclb
mov
inc
in
adc
addb
pusha
add
xchg
out
push
xchg
popf
lock
mov
mov
push
scas
push
popa
push
out
movb
xchg
fcoms
dec
mov
ret
cltd
or
pop
mov
cmp
rorl
sbb
add
jp
repz
inc
lea
test
pushf
jmp
int
mov
jb
cmp
mov
jmp
pop
mov
in
mov
mov
push
adc
pop
jmp
mov
mov
or
mov
jo
shl
rolb
inc
mov
cmp
data16
add
movsb
test
pop
sbb
xchg
or
fadd
ja
inc
scas
test
dec
push
call
adc
orl
or
or
ljmp
pop
and
daa
dec
add
roll
cs
je
pop
je
dec
push
es
fcompl
push
cmpsb
shr
daa
loop
daa
mov
popf
orb
sbb
testb
push
popa
push
clc
fdivr
ror
push
dec
mov
inc
les
mov
out
rcrb
dec
jge
and
call
and
icebp
rcll
mov
mov
nop
push
jl
jmp
jb
sbb
shlb
loopne
outsl
movsl
push
jl
jecxz
xchg
push
cmp
cmpb
sbb
or
call
add
inc
pop
into
jbe
int
push
pop
inc
and
mov
add
dec
push
lahf
popa
ret
pop
add
mov
shl
sub
pop
or
test
ret
cmp
push
addl
mov
jmp
stos
pop
xor
xchg
jne
pop
xor
sbb
sahf
or
add
push
subb
sbb
shl
sahf
pop
mov
pusha
xchg
movlps
or
mov
test
cmp
push
pop
nop
movsl
addl
push
lds
add
push
call
es
adcl
adc
cmpsl
dec
pop
cmpsl
dec
cmpsl
cmpsb
sub
and
leave
scas
push
xchg
or
push
xor
sbb
movsl
hlt
popa
fisubl
cmpb
inc
ret
shr
scas
sbb
sub
or
popa
push
test
xor
dec
ljmp
inc
fstpl
xor
enter
add
and
cld
test
push
gs
sbb
push
jmp
dec
adc
cmp
int
add
test
sbb
mov
add
test
pop
test
inc
xor
push
insb
into
inc
stc
nop
push
push
std
jae,pt
lods
sbb
repnz
dec
push
push
cmp
push
out
xlat
or
cli
lret
adc
dec
add
int3
test
xor
clc
sub
mov
cmp
push
mov
call
push
andb
aad
lock
stos
push
push
out
add
inc
stos
inc
xchg
leave
push
sub
pop
inc
or
pop
lods
mov
adc
dec
out
inc
pop
bound
or
add
enter
lret
hlt
jo
frstor
xchg
and
or
rcll
xor
push
and
xor
push
or
dec
fsubrl
or
and
jecxz
or
fiaddl
dec
push
les
sbb
add
mov
add
data16
sub
mov
push
xor
and
les
push
pop
orb
roll
adc
rclb
sbb
mov
add
push
leave
je
aam
fs
cmpsl
xor
stos
adc
xor
dec
rcrl
pushf
xchg
cltd
rol
adc
je
pop
in
shlb
mov
mov
sbb
add
ficomps
add
sti
push
or
adc
lret
xor
fildll
xchg
jmp
push
aad
sbb
push
stos
adc
jns
in
cli
lock
insb
add
in
xor
cwtl
test
scas
xchg
add
push
mov
mov
jl
sbb
xor
or
stos
push
mov
jbe
push
xlat
inc
daa
sub
subb
cmpsb
test
adc
pop
push
test
pop
pop
xchg
and
cmp
add
add
xchg
push
mov
ret
xor
call
cmp
int3
xchg
mov
cs
sub
adc
xchg
rcrb
cmp
push
xor
out
sbb
add
add
xor
je
add
xchg
push
loopne
push
push
add
test
cltd
mov
add
shr
cmc
lods
sahf
jb
push
adc
icebp
addr16
inc
mov
jmp
sbb
push
sub
mov
loope
ljmp
sarl
inc
and
ret
push
sarb
pop
dec
aaa
pop
test
jb
popa
add
adc
rclb
std
int3
push
sub
leave
sbb
xor
imul
shl
ret
inc
lret
dec
ljmp
add
push
adc
pop
loope
add
push
sbb
orl
cmp
sbb
xchg
pop
push
add
jns
inc
jb
pop
mov
out
adc
mov
xchg
mov
adc
dec
or
add
cpuid
sub
out
dec
mov
leave
in
rcrb
or
push
xchg
push
addb
pop
push
rorb
push
inc
pop
fisubrl
adc
mov
adc
push
loop
jb
cmpsb
movd
mov
and
andb
icebp
xor
xchg
pop
push
sbb
paddusb
adc
js
jo
inc
and
call
cmp
xor
push
sbb
cmp
shlb
gs
mov
jp
testl
gs
dec
adc
mov
sbb
mov
mov
jl
call
push
js
mov
inc
add
subl
pop
jl
inc
test
repnz
cmp
mov
push
mov
jb
scas
adc
add
jb
aaa
sub
loopne
call
add
jge
leave
popa
ss
xor
xlat
xchg
cmp
in
inc
and
push
mov
jne
and
add
push
loope
cmp
data16
lods
or
testl
mov
jmp
ret
mov
rcrb
jg
test
mov
add
mov
xchg
ficompl
stos
into
xorb
lds
cmp
shll
outsb
push
cmp
sub
sub
push
push
sub
stos
push
repnz
adc
pop
pop
push
rcll
mov
xchg
filds
roll
enter
push
aam
jne
fdiv
jle
mov
adc
nop
sbb
insb
bound
cmpsb
or
les
xchg
insl
adc
test
test
push
ds
shl
loopne
das
subb
bnd
mov
jmp
rcrl
popa
and
aam
xchg
xor
std
jb
add
adc
call
mov
add
cmp
push
ret
xor
inc
cwtl
pop
mov
test
pop
pop
push
enter
push
loopne
xor
sbb
pop
or
jb
rcrl
clc
adc
rcll
dec
sub
mov
test
mov
mov
maxps
sbb
and
into
mov
stos
repz
movsb
push
lahf
adc
mov
call
sbb
int
fldt
cmp
fs
add
lret
or
test
push
mov
add
scas
inc
mov
lods
dec
add
dec
enter
hlt
cmp
add
inc
xor
push
into
cwtl
pop
jl
pop
jae
lcall
lods
pop
sbb
and
cwtl
leave
fildl
sbb
notb
roll
bound
pushf
and
push
xor
cltd
jmp
stos
int
jp
pop
das
popf
jb
ret
mov
add
jg
dec
call
push
cmp
roll
push
int
or
stos
sub
jp
hlt
sbb
xor
pop
xor
loop
and
testl
push
pop
xchg
adc
sbb
jae
enter
sbb
negb
jb
push
hlt
loopne
mov
stos
adcb
fcmovb
repz
add
sub
xchg
mov
xacquire
sti
sub
sub
inc
pop
push
or
pop
sbb
push
cs
pop
xchg
push
ret
popf
icebp
inc
sub
ficoml
cwtl
or
sub
dec
addb
jmp
pop
xchg
outsl
lcall
lcall
push
ss
aam
and
jle
repnz
cwtl
mov
mov
xor
sbb
jno
lret
push
nop
or
aaa
mov
mov
xor
sub
jbe
xor
mov
pushf
leave
add
fidivl
add
or
mov
adc
js
stos
add
pop
hlt
jb
or
addr16
sbbb
lahf
mov
cmp
and
xor
push
loopne
inc
aad
or
in
aad
mov
lahf
adc
inc
add
xchg
loop
mov
add
ret
add
adc
les
fdivl
pop
stos
pop
dec
pop
dec
mov
lods
ret
cmp
scas
rolb
out
push
lods
enter
dec
bound
mov
add
cli
cmp
shl
dec
or
popf
push
aad
add
pop
adc
sbb
add
and
andb
cmpsl
ret
jne
mov
adc
mov
enter
pop
dec
cmpsl
mov
fdivrl
aad
icebp
testl
xchg
cltd
into
adc
test
sub
push
push
mov
mov
insl
adc
adcb
adc
and
cmp
dec
inc
pshufw
pusha
dec
js
loope
push
sbb
sbb
or
and
push
and
daa
push
and
jg
xchg
shrb
repnz
adc
jbe
pop
xor
scas
add
sbb
pusha
stos
or
in
inc
test
sbb
mov
sbb
loopne
cmc
add
sub
sti
inc
sbb
stos
xor
aaa
xlat
adc
mov
ja
rclb
lret
popl
inc
or
adc
lea
les
repz
test
in
loopne
or
loopne
pop
or
sub
nop
add
inc
cs
jno
mov
addr16
test
adc
xchg
sub
rcrl
lea
popf
stos
push
test
add
leave
aam
or
mov
mov
icebp
xor
or
jmp
andl
fwait
inc
mov
sbb
hlt
jae
ljmp
add
inc
cmp
lea
lret
mov
movsb
popa
or
jne
imul
icebp
add
mov
mov
pop
inc
sbb
lds
je
fsts
pop
jne
add
rcrl
pop
push
js
cmp
stos
push
movsl
sbb
dec
loopne
adc
mov
or
test
jle
shl
mov
pop
sbb
dec
aad
imul
cli
addr16
sub
shrl
cmpsb
inc
aad
mov
mov
push
cld
adc
pop
inc
and
aas
xor
movb
imul
push
out
ja
mov
pusha
and
push
aam
aad
scas
xchg
and
mov
loopne
jnp
imul
test
scas
add
xchg
pop
xor
push
js
pop
adc
xor
adc
push
jo
dec
bound
or
jo
add
rorl
xchg
lcall
xchg
sbb
xor
fidivrl
adc
loopne
jecxz
aas
loopne
addl
call
jb
subl
mov
mov
jne
inc
mov
adc
mov
and
scas
jo
pop
sarl
rol
jo
pop
lcall
and
mov
les
call
xchg
jmp
aad
mov
aam
daa
sbb
pop
add
ja
fbld
inc
pop
mov
call
rcrl
movlps
mov
pusha
adc
pushf
or
inc
jp
subb
add
jl
and
cmp
mov
cld
cli
imul
mov
rcrb
xchg
loop
loopne
neg
ljmp
scas
push
pusha
xor
sbb
jbe
icebp
cmp
mov
adc
mov
push
add
or
sub
fsubs
push
dec
iret
lret
lds
mov
dec
adc
hlt
loop
lea
jl
inc
in
fs
fdivp
push
or
mov
ret
jecxz
inc
cmp
rolb
xchg
aam
movl
cmp
pushf
adc
inc
and
mov
jp
cmc
cmp
jbe
cltd
xor
adc
testl
rorl
push
cmp
stos
stos
loope
clc
jl
test
mov
inc
cwtl
test
jmp
lock
mov
mov
sbb
mov
jge
adc
jmp
mov
push
xchg
push
sub
sub
and
mov
xor
popf
ljmp
jo
cmp
push
jg
daa
mov
or
rorb
or
pop
mov
or
sti
pop
or
xchg
call
enter
add
cmp
sub
mov
hlt
cmp
adc
ja
lret
pushf
loop
ror
mov
push
sbb
shll
jnp
sbb
add
cmp
dec
shl
or
cmp
or
out
enter
mov
lret
in
sbb
lret
inc
jnp
adc
test
mov
sarb
mov
sub
push
sbbl
xor
push
sub
adc
cmpsl
ds
push
sarb
stc
push
push
add
daa
inc
lds
mov
icebp
xor
sbb
lods
loopne
jno
imulb
sbb
enter
dec
rcll
ficoml
xchg
orb
cld
xor
sub
sub
cmp
sub
add
movl
mov
scas
cmp
dec
adc
rcrl
cwtl
adc
fldl
sbb
call
icebp
les
push
loope
std
and
imul
jo
pop
push
add
push
scas
mov
add
dec
adc
into
pop
jmp
add
bound
or
mov
and
rolb
jo
stc
cwtl
xor
andb
loopne
xor
and
sub
les
cmp
aad
adc
pop
sahf
sbb
jg
scas
ret
add
xchg
inc
lahf
xor
and
repz
xchg
jp
push
jns
pop
aam
add
movsl
rcll
popa
lret
sti
add
sbb
loopne
mov
in
adc
imul
inc
adc
push
xchg
cmp
lahf
je
and
inc
dec
repz
les
pop
add
pop
sbb
scas
subl
or
cmp
lret
adc
sub
sbb
inc
lods
sbb
in
push
xchg
ret
pop
les
ficompl
popa
mov
add
lcall
add
adc
push
pop
in
icebp
pop
cli
pop
shlb
pushf
das
xlat
sbb
rorb
aam
scas
adcl
xor
mov
cmp
adc
add
test
push
inc
stos
movsb
mov
add
enter
mov
push
push
outsl
xor
aad
pushf
sti
scas
idivb
dec
jl
sbb
sbb
negl
push
ret
sub
cmp
lahf
pop
inc
imul
mov
cmp
into
inc
pusha
test
push
push
cmp
and
push
dec
repz
test
rorl
mov
fsubp
push
popf
in
xor
and
xor
out
movsl
repnz
movsb
mov
mov
cmp
cmc
xor
roll
filds
mov
sub
push
hlt
mov
adc
mov
or
sbb
mov
sub
inc
repz
push
mov
mov
dec
loopne
ja
popa
and
bound
xor
inc
iret
pop
jb
cmp
jne
dec
adc
fnstenv
test
inc
or
mov
mov
mov
add
in
aam
stos
mov
loop
lods
leave
dec
loopne
cmp
insl
dec
rorl
in
or
loope
inc
mov
mov
sbb
pop
inc
aad
ja
cmp
pop
into
cmp
cmp
and
mov
dec
pusha
and
inc
bound
fiadds
stos
cs
or
push
cmpsb
mov
mov
lret
jg
add
add
jb
inc
adc
sbb
scas
cmp
and
subb
or
adc
pop
or
test
push
pop
mov
movsl
push
adc
mov
pop
xor
xor
test
add
adc
and
lcall
xor
or
stos
sub
xor
stc
or
cmp
stc
dec
sbb
stos
xchg
mov
or
pop
movsb
mov
lret
pop
xor
arpl
adc
cmp
fisttps
movsl
mov
loop
adc
mov
addr16
mov
push
out
push
outsl
test
lcall
adc
sti
sbb
and
repnz
sub
loopne
pop
inc
mov
shr
mov
enter
lea
int
cmc
testb
ss
mov
lret
aad
add
cmc
sbb
cmpsb
or
mov
sbb
and
push
dec
xor
or
xchg
bound
les
rol
arpl
jnp
fwait
ljmp
sbb
mov
or
mov
scas
push
loopne
je
adc
lods
gs
adc
add
pop
inc
sbb
movsl
jp
jmp
stc
or
popf
adcb
add
inc
mov
fsubrl
jge
jne
jb
cmp
lret
or
into
idivl
decb
bound
pop
mov
mov
cmp
insb
inc
add
push
fwait
clc
jmp
cmp
int
push
adc
push
enter
test
inc
lock
idivb
mov
mov
rcl
sbb
rcrb
xor
and
ljmp
rclb
xorb
ret
pop
inc
mov
sub
mov
ja
ds
in
push
jmp
push
in
insb
xor
add
aam
popa
mov
sub
daa
mov
scas
leave
jo
ss
shlb
dec
mov
add
sahf
movsb
mov
cmp
sub
aad
icebp
or
xchg
adc
xchg
push
outsb
mov
add
jb
iret
cmpsl
popa
rolb
add
scas
push
and
xor
add
shrb
js
sub
repz
add
mov
mov
ret
xchg
xchg
jg
cmpsb
mov
mull
lret
adc
or
sbb
ret
addr16
shlb
push
inc
mov
testl
sbb
xor
ret
adc
scas
push
movsl
hlt
stos
sbb
les
push
bound
sub
in
inc
sbbl
mov
pushf
jecxz
test
jnp
dec
sbb
push
into
and
jle
xor
pop
dec
push
pop
mov
adc
or
in
mov
mov
mov
mov
and
push
mov
xor
add
int3
sbb
js
xchg
sub
rclb
pop
mov
sbb
push
adc
icebp
pop
out
adc
push
out
icebp
ss
cmp
test
mov
loope
xchg
roll
andb
push
clc
or
in
and
lods
push
sbb
cmp
mov
lcall
andb
sub
int3
push
nop
or
push
mov
leave
faddl
and
lret
mov
fsubrs
push
push
or
shl
pop
push
and
jmp
mov
cmp
in
ret
dec
push
les
sbb
sbb
or
adc
add
add
popa
rcrb
les
vmread
and
lock
icebp
addl
cltd
and
mov
inc
add
popf
add
push
xor
cmc
sbb
jo
push
js
jb
push
ret
fdivs
xchg
lea
mov
add
push
adc
push
push
and
stos
push
xor
das
xor
rclb
add
outsl
push
test
jmp
scas
cmp
mov
push
push
pusha
push
stos
and
adc
xorb
divb
dec
xor
sub
pop
iret
mov
loope
mov
sbb
mov
lods
push
popa
lea
dec
mov
icebp
rcll
cmp
push
mov
adc
lret
adc
push
data16
mov
add
rcll
pusha
sbb
sub
xor
sbb
pushf
and
loopne
fisubl
fs
leave
add
scas
scas
mov
outsb
push
or
lret
and
repz
pop
inc
sub
loope
sbb
dec
push
icebp
add
cwtl
loopne
nop
sbb
mov
or
cmp
adc
les
and
popf
cmp
test
pop
nop
lock
stos
adc
mov
adc
clc
adcb
dec
xchg
xor
pusha
sbbb
inc
cmpsb
add
push
sub
jp
sbb
adc
dec
das
pop
testl
add
negl
jo
divb
xor
inc
push
and
sbb
cmp
mov
lock
adc
inc
pop
inc
pop
repnz
xchg
xor
mov
jmp
sbb
xchg
sbb
adc
xor
pop
adc
loope
test
push
jge
lahf
vaddsubps
or
arpl
jns
shl
lahf
mov
xor
sbb
mov
aam
mov
loope
sbb
stos
in
sahf
add
adc
cli
xor
scas
add
hlt
push
and
or
pop
mov
stos
and
vpshaq
push
leave
in
test
inc
cwtl
push
mov
or
mov
or
adc
mov
xor
jb
and
movsl
lods
xchg
mov
sub
sub
mov
adcb
jb
mov
test
pop
adc
adc
add
jo
add
jno
and
shl
outsb
test
jns
pop
inc
cmpsb
sbb
or
lea
call
jnp
sbb
mov
ljmp
mov
stc
and
push
orb
and
and
add
roll
outsl
pop
outsl
push
jge
insb
push
loop
rcrl
push
xchg
mov
adc
mov
and
in
sub
add
adc
xchg
push
or
add
lahf
js
test
add
inc
cwtl
push
cld
sbb
xor
inc
adc
xor
fwait
mov
sbbl
inc
movsb
out
test
pop
dec
decb
and
mov
adc
lock
subb
inc
leave
mov
ljmp
pop
adc
ffree
test
sbb
or
inc
rolb
lcall
mov
cmp
mov
mov
adc
jge
sbb
add
pop
or
movsb
shl
pop
pop
mov
sub
lea
xchg
int3
xchg
xor
mov
push
xor
lret
and
or
add
xor
cmpsl
jmp
test
lret
js
xchg
arpl
repz
addr16
sbb
test
int
loop
dec
jmp
subl
hlt
rcrb
adc
adc
or
jnp
in
dec
shlb
pop
and
js
and
inc
sub
fs
dec
pop
mov
orb
or
sub
inc
add
rolb
es
lret
and
mov
mov
lds
xor
mov
mov
pop
add
nop
push
ret
cmp
lock
mov
pop
pusha
push
idivl
inc
inc
ds
and
orl
stos
add
jno
inc
cmpb
and
sbb
mov
and
inc
insb
inc
scas
push
pusha
xor
adc
movsb
push
sub
cmp
mov
pop
addl
xor
mov
add
and
mov
pop
xor
sbb
cmp
push
sub
push
jo
add
sub
push
in
pop
xchg
sbb
sbb
sub
xor
negb
inc
fdivr
je
mov
add
push
push
add
push
or
adc
hlt
inc
push
mov
mov
pop
cmpsb
sti
ror
arpl
add
cmp
jb
add
rolb
xchg
ljmp
stc
sbb
xchg
or
sbb
imul
cli
stos
jbe
add
orl
lret
inc
mov
pushf
inc
hlt
and
addb
ret
out
push
or
in
adc
push
dec
cmp
mov
push
sbb
or
adc
add
push
inc
or
or
in
mov
add
daa
adc
adc
and
xor
sbb
mov
or
add
test
push
stos
enter
es
add
add
outsl
add
mov
jge
add
stc
mov
mov
push
cmp
rorb
lock
add
mov
pop
push
jae
adc
xchg
push
test
sbb
add
adc
inc
mov
push
rolb
or
push
xor
adc
push
shll
adc
icebp
push
jne
push
out
enter
mov
arpl
imul
in
jne
pop
push
lods
adc
mov
cmpsl
push
mov
push
nop
or
dec
push
cmpb
push
inc
lret
data16
fisubl
pop
nop
mov
and
dec
sbb
nop
leave
jnp
push
jmp
pop
add
ljmp
push
clc
mov
mov
daa
xorl
sbb
pusha
sub
push
push
push
popf
decb
push
push
sahf
sub
jo
daa
sub
adc
ret
out
mov
add
subb
add
xchg
lret
lss
add
es
mov
pushf
push
cmp
pop
sbb
rorl
mov
inc
push
cmp
pop
cmpsb
and
mov
jecxz
daa
ss
pop
rorl
idivb
add
push
int
jno
pop
jne
and
into
lods
mov
mov
out
addb
xor
adc
insb
rorb
jo
mov
rorb
jb
lock
adc
cmp
adc
stc
add
roll
sub
inc
into
and
das
cmp
jp
je
or
rorb
xchg
lcall
push
pop
clc
dec
dec
mov
jno
test
cli
leave
add
xor
ret
aad
cltd
or
inc
pop
xorl
push
xor
push
add
pop
push
hlt
add
lock
and
adc
dec
pop
cmpsb
mov
jge
pop
sbb
add
xchg
or
ja
inc
or
dec
jo
addl
mov
jmp
je
push
mov
or
mov
cmp
add
sub
inc
add
orb
lret
lahf
inc
outsb
hlt
cmp
add
cmp
xchg
shll
add
pop
ret
cmp
rclb
out
imul
popa
adc
popf
hlt
adc
or
mov
test
cmp
inc
jmp
pop
dec
adc
or
jg
adc
mov
push
pop
add
loope
daa
mov
or
roll
in
adc
push
jb
lods
imul
pusha
aad
lods
test
pop
push
cmp
add
push
enter
ficoml
in
lcall
leave
rcll
push
add
sbb
xchg
xchg
jl
cwtl
push
je
or
push
fildl
inc
and
es
xor
and
ret
adcl
adcb
aam
jne
jl
xchg
cltd
or
into
inc
outsl
mov
add
mov
push
scas
pop
xor
inc
call
jo
mov
inc
pop
mov
or
lods
cmp
push
sbb
mov
and
pop
scas
xorb
mov
out
jecxz
adc
xor
mov
ljmp
enter
pop
dec
push
out
push
jne
mov
add
cmp
inc
icebp
add
insl
enter
stos
and
adc
adc
loope
shlb
or
or
sub
sbb
or
test
loop
mov
movsl
int
loopne
xor
je
push
rclb
mov
or
fiadds
rcrl
loop
out
push
pop
loope
xorl
push
movsb
sub
sbb
repnz
adc
icebp
out
stos
cmp
adc
shll
push
push
int
fs
xchg
mov
inc
or
js
jmp
dec
jo
pop
jo
jge
aam
cs
rol
rcll
add
repnz
cwtl
pop
inc
imul
push
pushf
mov
into
adc
mov
stos
sub
popa
sbb
dec
jae
lret
leave
mov
lea
pop
adc
movsl
jne
mov
mov
xor
sbb
push
or
dec
cmp
inc
out
jge
or
xchg
add
lea
loopne
add
or
dec
inc
daa
stos
xor
and
inc
mov
pop
lods
xor
xor
xor
fistpll
mov
jae
ret
inc
sub
in
push
or
mov
shlb
jb
adc
dec
rcrb
subb
outsb
mov
push
pop
and
fwait
insb
outsl
mov
and
daa
push
ss
inc
and
mov
leave
mov
add
mov
xor
add
out
ret
adc
pop
mov
xor
repnz
dec
icebp
adc
cmpsl
or
roll
mov
mov
jne
mov
pushf
xchg
sub
rolb
mov
mov
or
imul
adc
loop
jo
test
jne
roll
cli
push
jge
jo
dec
out
add
in
push
fcoms
or
call
add
and
xchg
pushf
jge
adc
sarb
or
push
call
shlb
xchg
sbb
aam
ljmp
cltd
int3
mov
add
ror
ret
es
call
aam
adc
mov
adc
add
ljmp
push
jge
sub
mov
xor
adc
and
pop
and
rcrl
adc
gs
sbb
sbb
sbb
push
push
sbb
mov
in
cwtl
orb
add
or
jo
push
pop
adc
xorb
ret
adc
loopne
push
movsb
pushf
sub
or
int
sbb
cmp
cwtl
adc
xor
jns
aam
test
ds
sub
add
je
add
xchg
sub
aam
mov
movsb
dec
adc
and
add
add
mov
mov
xor
adc
divb
mov
aad
pop
lods
jmp
push
push
sbb
cmp
push
leave
sbbl
jo
push
dec
sbb
cld
mov
pop
les
push
mov
or
jl
imul
out
and
rclb
mov
inc
lock
adc
aaa
cmp
cs
ja
or
in
mov
insb
sbb
jbe
xor
sbb
mov
lds
les
push
outsb
clc
mov
sbb
jno
xorb
xchg
mov
mov
inc
push
mov
sbb
inc
and
subb
mov
in
jge
mov
rolb
movsb
loop
or
xchg
callw
loopne
add
pop
mov
lret
sbb
fwait
inc
and
inc
adc
mov
and
add
add
pop
xor
cltd
dec
movsl
call
add
sub
inc
nop
subb
call
test
sbb
push
es
sub
adc
notb
notl
add
adc
out
sub
add
test
push
xor
push
inc
mov
or
loop
adc
jbe
push
and
icebp
std
dec
jne
add
or
mov
ds
mov
adc
dec
stos
fs
add
out
or
jp
push
movsb
hlt
test
movsb
mov
sub
or
cmp
add
leave
push
scas
test
stos
mov
pusha
sbb
and
mov
add
xor
je
lret
or
dec
and
add
mov
roll
inc
cmp
popa
scas
sub
push
pop
adc
adc
fldt
shrl
mov
outsb
ret
shl
adc
nopl
cmpsb
ljmp
shl
stos
adc
dec
and
push
lret
lret
loope
mov
push
hlt
xor
adc
sbbb
clc
or
and
pop
andb
lcall
mov
sub
adc
icebp
mov
pop
cmp
jne
cwtl
xor
hlt
sub
and
inc
inc
sbb
adc
out
sbb
in
add
es
insb
inc
orl
adc
pop
cmp
mov
rolb
or
add
roll
xchg
ret
scas
mov
cmpsb
xor
sar
out
push
add
xor
test
xor
push
xchg
std
xchg
inc
inc
mov
mov
push
faddp
icebp
mov
fcmovb
inc
mov
inc
add
and
lret
pop
mov
dec
popa
xchg
addl
imul
inc
cltd
add
lock
sbb
mov
mov
mov
fmull
pop
cmp
bound
adc
sti
imull
lock
aam
lock
adc
sub
cmpsb
or
mov
pop
les
push
les
lds
leave
jmp
push
adc
mov
mov
push
dec
adc
or
testb
pop
mov
push
xor
pop
jnp
or
test
mov
push
aad
xor
cmp
jb
rclb
nop
inc
xor
cmpsl
testb
xor
inc
daa
mov
mov
add
push
cmp
arpl
push
add
add
shlb
mov
pop
and
jo
mov
xlat
push
xlat
inc
mov
inc
mov
push
rorb
ret
inc
push
xor
cmp
or
lock
add
ror
mov
arpl
mov
rorl
orl
icebp
or
and
pop
inc
sbbl
pop
adc
xchg
or
or
and
cmp
decb
adc
sbb
leave
cmc
dec
push
sbb
andl
add
bound
loopne
push
mov
sbbl
cmpsl
mov
push
xchg
or
fwait
pop
pop
scas
femms
lahf
insb
or
sub
push
int
pop
sbb
ret
stos
push
jl
push
inc
jl
mov
dec
add
lret
ret
xchg
and
jl
loopne
rcrl
xchg
add
stos
out
les
insl
mov
sahf
and
inc
jae
pop
inc
pop
clc
roll
ss
jo
sbb
xchg
popa
sub
and
sbb
pushf
push
add
push
adc
lahf
loope
sbb
jmp
dec
and
mov
out
cmp
mov
xchg
mov
push
mov
das
xor
in
out
push
sahf
nop
mov
and
fiadds
in
xchg
shl
cmc
sub
loope
xor
adc
adc
pop
mov
ljmp
add
adc
data16
mov
push
ja
sbb
xchg
mov
pop
push
add
push
arpl
xor
roll
sbb
xor
leave
clc
jp
jp
sti
cli
add
dec
mov
es
jmp
mov
or
cmpsb
ret
shrd
add
add
loop
push
push
mov
fwait
in
dec
mov
sbb
sbb
in
push
mov
call
push
in
push
add
xor
in
pop
sub
and
out
and
inc
inc
sar
cli
out
ret
xor
roll
hlt
andb
sti
jo
push
lock
sbb
push
ret
push
mov
mov
ds
mov
jp
dec
lds
add
cmp
xchg
adc
pop
jge
mov
ror
add
xchg
add
cld
rcll
les
inc
das
andb
push
stos
push
stos
mov
mov
sub
pop
jo
push
jb
and
cmpb
test
push
lock
xchg
mov
mov
and
fistpll
push
adc
xchg
pop
xor
inc
addl
cmpsb
popf
popf
or
ret
test
out
add
hlt
mov
mov
pop
dec
aam
dec
imul
out
dec
sbb
push
sub
sub
adc
repz
jae
lret
adcb
cmpsb
mov
aam
loop,pt
loope
call
loop
mov
jp
sub
xor
addr16
test
js
inc
or
in
out
jb
push
pushf
test
push
inc
sub
sbb
pusha
and
imul
or
sahf
mov
xchg
aas
mov
enter
pop
test
mov
cmp
jl
mov
jb
out
push
add
xchg
or
push
mov
dec
sbb
add
test
mov
sti
lods
sbb
rcll
push
mov
sbb
ljmp
add
sbb
jge
cmp
dec
shl
push
test
mov
dec
ror
add
xchg
mov
push
frstor
add
xor
add
subl
addb
int
sbb
call
add
jbe
daa
mov
pop
or
inc
mov
sbb
jo
icebp
call
mov
jb
lods
mov
pop
adc
and
aam
je
into
cwtl
lods
add
ljmp
dec
adc
mov
or
sbb
fiadds
fldcw
loopne
xor
and
cltd
mov
aas
sub
mov
sbb
add
inc
add
inc
clc
lret
shll
cli
and
cld
sub
shl
sub
cmp
pop
out
cmc
push
lret
test
dec
push
or
inc
out
test
mov
int
xchg
mov
stc
add
test
cld
add
jmp
das
pop
xor
ljmp
push
inc
stos
inc
or
sbb
data16
cli
push
xchg
cs
insb
jg
jb
push
sbb
fsubp
add
xor
adc
and
add
sahf
inc
mov
ret
dec
push
xor
fucomi
add
xor
add
mov
shll
cmpsb
adc
push
xor
mov
push
stos
cmc
mov
xor
xchg
or
xchg
rorl
les
xor
lcall
ljmp
pop
adc
add
or
popf
and
sub
sarl
shrl
add
je
jnp
push
add
test
jl
cmpsb
jo
lret
dec
scas
push
adc
jne
inc
and
mov
out
xchg
sub
cmpsl
addl
mov
inc
add
in
popf
jb
stos
add
je
movsl
push
xchg
incb
inc
pop
and
dec
xchg
or
xchg
orl
add
or
pop
adc
loopne
xchg
sub
adc
jl
adc
mov
sbb
ret
cmp
stos
push
cmc
or
sbb
push
popa
sbb
adc
cmpsb
sbb
aaa
lret
cmp
inc
sub
add
xchg
or
or
push
or
xchg
sbb
les
or
ljmp
imul
push
or
aam
xor
and
mov
scas
test
sbb
mov
sub
das
movsb
shrl
sbb
stc
pop
mov
sbb
and
les
repnz
cmc
test
mov
rolb
mov
test
pop
or
cli
adcb
popa
add
push
lock
insb
xor
out
jmp
stos
addr16
or
sbb
mov
push
and
cwtl
push
les
dec
mov
sbb
icebp
rcrb
adc
jmp
fidivs
into
movsl
pusha
mov
rcl
scas
mov
jns
or
call
cs
lret
or
push
repnz
shl
sbb
mov
inc
repnz
sbb
jg
cs
and
lock
test
addl
xor
loopne
dec
inc
adc
loopne
rclb
rolb
xchg
and
aad
lret
dec
inc
pushf
mov
mov
push
push
rol
pop
jo
lods
pusha
daa
mov
pop
in
iret
clc
sbb
lods
push
pop
xor
popf
mov
pop
mov
cli
and
push
jo
les
test
test
or
pop
mov
sbb
sub
inc
adc
sbb
push
or
or
orl
pop
mov
jo
push
loopne
inc
sarl
dec
sbb
fadd
dec
sti
shrl
shrl
adc
cltd
lea
inc
stos
add
mov
imul
add
fcomps
or
add
add
orb
mov
jmp
xchg
dec
xchg
or
push
adc
cmp
hlt
mov
int
xor
dec
or
inc
adc
mov
mov
cmpsb
pop
rolb
insb
push
inc
cmpsl
fldcw
std
or
repnz
rclb
cmp
and
lret
sbb
sub
insb
stos
jo
pop
jp
ret
lds
enter
sbbb
dec
ss
sbb
push
xlat
jnp
add
sarb
inc
adc
xlat
push
outsb
push
jbe
stc
adc
mov
andl
push
pop
push
sbb
inc
mov
mov
inc
movsl
mov
or
in
ds
jne
scas
sub
stos
sub
js
punpckhwd
pop
xor
cmp
xchg
rorl
out
rol
add
sarl
push
cwtl
sti
sub
std
shlb
add
decl
push
push
inc
xor
or
or
or
adc
cli
add
lcall
pop
pop
ficoms
insl
adc
data16
mov
dec
int
sub
xor
loopne
leave
adc
out
pop
test
dec
cmp
pop
mov
or
push
sub
jge
jb
or
sbbb
dec
cmpl
ret
adc
loopne
push
ljmp
sub
es
xchg
stos
jae
bound
lds
mov
and
adc
dec
xchg
lret
and
mov
mov
cmpsl
add
sub
cmp
fstpl
lea
enter
and
adc
xor
icebp
notb
je
push
das
repnz
notb
lret
movsl
adc
xor
cmp
or
sub
xchg
mov
enter
add
ret
or
ret
adc
push
int
add
sbb
out
push
lret
adc
mov
xor
mov
add
in
pop
add
aas
or
jecxz
or
lock
dec
pop
push
cwtl
inc
movsb
and
nop
cltd
push
inc
pop
je
xor
pop
push
daa
xchg
add
xor
sbb
xor
rcrb
push
add
cmp
out
test
sub
cli
push
push
sbb
rcrl
lcall
add
sub
xor
test
scas
lcall
test
lock
adc
bound
gs
adc
sarb
rorl
cmp
inc
shrl
adc
lock
pop
test
mov
push
add
push
sti
xlat
xor
dec
sbbb
push
push
jb
sbb
and
lret
jge
xchg
cmp
aad
ss
sarl
inc
shrb
data16
in
push
js
lret
mov
mov
push
cmp
push
daa
outsl
or
testb
push
pop
rolb
push
roll
add
sbb
or
clc
pop
shll
lret
jo
rcrb
mov
push
sub
pop
cmp
rcrl
cmpsb
cltd
or
pop
cmpsb
shr
sub
mov
mov
inc
lds
jno
sub
cmpsl
adc
mov
pop
and
xchg
push
test
inc
mov
adc
pop
sbb
pop
popa
subb
adc
mov
pop
push
inc
or
nop
enter
and
lock
cmpsb
stos
push
shll
adc
aaa
xchg
rcrl
adcb
sbb
push
mov
rcrb
sbb
xchg
out
movsb
push
cld
scas
pop
in
pop
inc
nop
cmc
adc
lret
jbe
roll
push
fstpt
or
adc
sbb
outsl
leave
adc
js
and
adc
gs
test
add
dec
into
adc
orb
popa
sbb
inc
stos
xchg
cmp
aaa
mov
jne
xchg
xor
ret
in
not
stos
cmpps
outsl
es
ret
sub
sahf
test
inc
sub
je
mov
das
push
inc
test
add
inc
lret
insb
lret
icebp
jno
or
fimull
sbb
fwait
mov
cwtl
stos
fimull
mov
push
inc
stos
or
or
adc
or
stos
inc
sub
or
dec
or
gs
icebp
inc
pusha
ljmp
add
or
lcall
cmp
sub
jno
mov
or
pop
orb
add
xor
aaa
add
into
add
inc
adc
cmp
icebp
and
das
add
sbb
leave
and
in
sbb
lds
add
sbb
cmp
cmpsl
cmpsl
inc
mov
mov
ficomps
test
in
mov
test
sub
xchg
ror
inc
out
xor
xchg
rcl
jnp
or
cmove
sub
mov
xor
mov
mov
jne
in
rcll
and
sbb
push
pushf
mov
push
adc
mov
loopne
leave
add
push
jmp
mov
push
xchg
stc
add
dec
sub
dec
jne
adc
adc
mov
sub
mov
into
push
or
cmp
les
push
sbb
dec
pop
xor
aad
push
jge
push
test
inc
or
mov
lock
pop
add
shl
add
shll
movsl
dec
push
or
push
mov
pop
dec
pop
add
mov
pop
arpl
sub
mov
cmp
ljmp
jge
adc
adc
mov
sbb
push
nop
mov
or
pop
jmp
add
xor
add
imul
addr16
mov
add
test
movsb
xor
int
aad
lcall
jne
push
shl
filds
dec
or
mov
addr16
or
test
gs
and
dec
inc
mov
ja
and
push
pushf
or
dec
mov
pusha
ret
xor
inc
or
jns
lcall
in
and
or
lods
mov
aam
dec
iret
cmpl
ret
popa
and
xchg
in
and
lods
call
ljmp
or
into
jmp
push
or
cmp
mov
loope
sbb
les
lds
sbb
movl
inc
mov
mov
mov
loopne
sub
mov
inc
inc
mov
stos
sbb
mov
or
movsb
or
mov
sub
int
test
adc
inc
or
dec
adc
mov
push
inc
push
jno
push
push
gs
icebp
or
xchg
xor
aas
notb
sub
dec
push
mov
js
adc
movsb
or
lret
or
add
add
pop
pushf
mov
fadd
mov
xlat
pop
xchg
push
test
dec
int
push
jo
jne
mov
mov
push
sub
aam
adc
mov
adc
popf
fs
mov
out
mov
sub
sub
jmp
dec
aas
add
inc
popf
xor
mov
adc
add
mov
lret
adc
inc
add
je
sbb
pop
lock
insb
push
loope
sub
lea
stos
jecxz
jno
inc
smsw
push
shl
imul
outsb
mov
mov
sbbb
call
inc
lock
push
addr16
jl
out
jg
and
push
jl
test
mov
mov
repnz
add
mov
dec
xor
pop
mov
loop
mov
sbb
xor
dec
inc
shll
popf
or
aam
outsl
xchg
inc
xchg
cmpb
mov
xor
cmp
rorb
mov
mov
or
nop
or
aam
jo
aam
sbb
pop
out
push
orl
call
lcall
mov
add
cmp
push
add
mov
rcrb
into
bound
lock
je
daa
sbb
or
out
mov
clc
shrl
loope
jbe
jne
add
cmp
mov
add
mov
mov
push
andps
and
and
adc
in
cli
push
inc
pushf
push
push
mov
movsl
sbb
ds
mov
clc
add
lret
and
and
test
js
fs
or
inc
mov
mov
cmp
push
jb
sbb
cmpsb
into
movsl
xchg
push
lret
push
or
sub
cwtl
mov
sbb
xchg
hlt
lcall
xor
pop
mov
mov
and
add
nop
jmp
mov
pop
push
clc
sbb
fnstcw
or
outsl
inc
out
add
insl
and
push
mov
imul
cmp
dec
lcall
repz
adc
jp
mov
cmp
push
loop
sbb
rcll
les
jge
sub
push
in
sbb
push
pop
sbb
push
add
test
mov
adc
lock
lock
divb
scas
pusha
push
int
loop
pushf
sbb
sbb
cld
stc
pop
push
xor
sub
xchg
dec
mov
mov
or
shll
fucom
ljmp
in
inc
mov
popa
mov
js
imul
mov
sbb
mov
loopne
int
and
xchg
mov
push
insb
loop
ret
pop
std
cmpb
fisttpl
insl
iret
push
ret
mov
shrl
lcall
ret
add
orl
sahf
inc
and
push
leave
xchg
add
mov
mov
mov
push
aam
scas
shlb
cli
andl
add
js
into
js
adc
push
test
mov
lcall
shll
cmp
add
flds
dec
mov
sub
push
adc
and
rorl
push
mov
sub
add
lock
push
cmp
mov
cli
or
jmp
push
and
add
das
roll
add
outsb
testb
jp
es
rorb
adcl
bsf
lods
enter
hlt
jp
mov
add
mov
add
mull
jne
pop
push
add
add
or
mov
adc
push
inc
sbb
lcall
mov
sub
adc
cmp
out
xchg
test
mov
rcl
adc
lcall
sbb
push
adc
push
dec
sub
movsl
ljmp
stos
rcrl
rorl
test
xchg
or
jecxz
sbb
lret
xor
jbe
mov
sub
mov
sbb
test
jo
pop
and
ret
or
pushf
and
pop
and
int3
rolb
pop
xchg
sbb
das
shl
inc
ret
shlb
insb
les
sub
sbb
dec
xor
or
subb
xor
lret
or
insl
push
xchg
push
mov
inc
daa
in
and
lods
jmp
mov
popf
mov
mov
icebp
js
addr16
ret
xor
es
mov
push
sbbb
pop
push
add
loope
in
sub
dec
out
mov
dec
aam
lods
stos
mov
daa
or
xchg
fldt
xor
inc
mov
or
pusha
push
std
xchg
mov
cld
sbb
sub
xchg
stos
shll
push
adc
xchg
enter
pop
fldt
sbb
sbb
sbb
xor
dec
inc
xchg
jge
aaa
mov
stos
pushf
js
pop
inc
imul
add
in
sub
int
add
lds
sbb
pop
insl
imul
adc
add
das
or
cmpsb
mov
mov
test
scas
rcrl
add
mov
sub
adc
call
xchg
sbb
sub
jmp
rcll
ja
sub
or
and
mov
inc
sbb
gs
mov
pop
push
pop
out
dec
jb
call
sbb
cli
mov
out
or
pop
push
jno
adc
pop
fs
icebp
pusha
pushf
add
rdmsr
pop
iret
push
sub
add
test
pop
ret
mov
push
pop
pusha
push
or
adc
pop
cmc
pop
sub
das
lret
sub
mov
stos
sbb
pushf
and
push
or
dec
jmp
push
pop
out
adc
inc
mov
adc
and
sbb
add
test
fwait
cwtl
addl
pop
add
pop
fdiv
lock
lea
lods
or
push
sub
mulb
cs
xchg
lea
cmpsb
in
push
mov
cs
cmp
cmp
mov
pop
mov
leave
push
and
or
ret
lret
jle
and
cs
lock
cmp
add
hlt
xor
fildl
adcl
sbb
ljmp
roll
add
nop
aam
cwtl
icebp
stos
add
xchg
add
xchg
or
adc
cmp
inc
push
aam
fidivs
mov
jne
rcrl
clc
xchg
or
ljmp
subl
scas
bound
dec
adc
add
andb
popa
pop
sbb
jp
add
mov
inc
roll
leave
push
xlat
sub
lcall
inc
sarl
adc
pop
push
pop
adc
mov
or
and
mov
push
scas
xchg
leavew
or
cmp
mov
dec
jle
or
push
cs
jbe
fmull
dec
sub
push
dec
aam
push
stos
mov
movsl
sub
lcall
test
rorb
push
rorb
mov
mov
cltd
cmc
call
lock
into
or
pushf
ljmp
and
inc
and
popf
mov
movb
dec
xchg
nop
cli
sbb
mov
fdiv
xchg
sbb
push
push
mov
cmpsb
jg
adc
icebp
push
aad
push
scas
aaa
scas
jmp
cwtl
enter
cmc
cli
mov
enter
pop
shll
cs
push
mull
lahf
mov
loopne
push
test
mov
stos
aas
cld
dec
pop
test
mov
ret
dec
cmpsl
and
fs
mov
aam
adc
loopne
les
jecxz
inc
pop
cmp
ja
scas
pop
dec
inc
dec
jmp
lcall
sbb
pop
in
push
cmp
xor
movsl
clc
push
or
aam
ss
push
push
add
rcrb
lret
cs
cmp
fst
cmp
inc
lea
aad
loopne
test
xchg
mov
lods
call
add
adc
jp
xchg
sub
setle
testb
xor
pop
dec
shlb
stos
shr
mov
cwtl
add
movsb
sbb
adc
push
adc
psrld
mov
ret
mov
pop
fnstsw
xlat
cmpl
or
or
stos
or
push
inc
insl
sub
inc
sbb
in
cmp
and
mov
mov
mov
popf
loope
nop
sub
loopne
mov
inc
mov
jp
dec
rorl
xorb
add
adc
sbb
push
sub
out
test
sub
les
dec
movsl
jb
mov
sub
addb
sub
pop
mov
inc
mov
mov
sbb
pop
testb
mov
cmp
ret
mov
bound
fwait
xor
adc
paddq
sub
roll
or
push
ret
jp
mov
adc
adc
lds
inc
dec
shr
adc
or
les
repz
adc
mov
insb
sahf
ret
push
orb
add
dec
stos
adc
or
stos
sbb
or
test
in
xchg
push
andb
cmp
add
push
xor
js
push
adc
or
mov
scas
rolb
xor
rclb
mov
mov
sub
cmpsb
je
lahf
inc
lds
mov
mov
or
pop
and
mov
adc
lea
push
jo
push
rorb
insb
xchg
xor
dec
mov
call
jo
subl
and
dec
or
int
push
outsb
ret
mov
test
loopne
popf
cmp
adc
adc
mov
sarb
sub
add
mov
imul
push
dec
and
cmp
xor
xchg
sub
adc
jne
fcompl
sub
jl
addr16
stos
pop
add
dec
enter
stos
pop
xor
cwtl
sbb
addl
inc
dec
rolb
jo
jae
or
cwtl
push
rcr
scas
and
aas
jmp
or
les
and
mov
push
inc
fdivr
lds
inc
js
xchg
sub
dec
andb
adc
movsl
inc
push
adc
mov
das
or
popa
pop
jg
push
add
push
int
das
sub
fs
push
push
in
or
sbb
mov
jae
aam
loope
push
daa
outsl
imulb
sti
bound
mov
loop
inc
scas
data16
cmp
incb
sbb
loop
adc
and
shrb
data16
cmp
pop
setg
mov
xchg
jg
shlb
pop
insb
xor
pop
mov
mov
gs
mov
xchg
nop
push
out
adc
and
shrl
jo
sbb
add
sub
sarl
mov
sbb
sbb
add
call
pop
scas
inc
addr16
mov
sub
clc
and
xorl
in
ljmp
push
mov
int3
xlat
mov
add
xor
mov
aad
jae
popa
test
sarl
pop
je
mov
sbb
rcll
xchg
rorb
push
mov
adc
andb
or
push
movl
rolb
push
cs
lods
divb
shll
stos
enter
sub
jbe
test
cli
xor
sub
mov
das
ljmp
mov
inc
xlat
sti
adc
bound
movsl
push
jge
dec
xor
test
rolb
mov
adc
ret
jmp
push
xchg
or
lea
sbb
mov
lds
aam
mov
addl
jge
into
sbb
xlat
sub
lods
sar
add
mov
push
shrl
ljmp
aaa
jo
shl
fucomip
lret
stos
pop
adc
das
mov
clc
roll
push
rolb
cmp
xchg
aam
push
add
cmc
mov
jnp
sbb
aas
mov
xchg
push
and
push
call
sbb
pop
int
enter
xor
or
adc
test
out
es
xor
dec
out
push
scas
xchg
pop
pushw
sbb
out
lret
push
inc
jmp
not
sbb
popl
xor
insl
test
or
xorl
xchg
xor
sub
dec
pop
jae
loopne
xchg
cltd
das
sbb
popf
stos
fildl
mov
sbb
sbb
sub
fldt
sbb
test
test
mov
pushf
xor
movsb
std
dec
mov
jne
lcall
shl
or
xor
std
mov
shlb
xlat
push
or
leave
out
push
inc
xor
call
pop
fs
rolb
les
test
push
roll
add
or
xchg
roll
add
sbbb
adc
pop
shll
lock
dec
idiv
daa
rolb
inc
pushw
adc
adc
inc
arpl
sub
push
fs
ret
adc
sbb
cmp
adc
sbb
cmp
loope
les
cli
add
popa
mov
add
push
mov
sub
add
leave
mov
mov
lods
fistpll
add
call
mov
aad
and
mov
sbb
jo
roll
daa
das
bnd
lar
out
jp
dec
mov
ret
push
movsl
jne
frstor
shlb
add
cs
or
add
dec
inc
jo
mov
cmpsb
push
cmp
call
add
pushf
or
test
mov
pop
inc
mov
in
jl
sub
dec
rorl
inc
jp
loop
or
sbb
or
or
cmp
sbb
lock
jecxz
add
push
outsl
ret
orl
push
inc
add
mov
xor
call
dec
push
and
dec
xchg
mov
adc
push
and
int3
push
stos
add
or
adc
push
push
cmp
adc
add
inc
add
lahf
or
mov
cmpsl
inc
in
sbb
xchg
xchg
mov
push
cmp
sub
mov
stos
nop
add
aam
fcomps
adc
add
into
push
inc
and
sahf
sbb
and
jbe
mov
inc
cmp
cmp
daa
stos
in
push
hlt
mov
push
fs
or
faddl
push
sbb
cmp
xor
xor
mov
sub
adc
push
sub
jno
pop
jmp
sbb
sbbb
dec
sub
ret
jp
and
call
push
adc
in
inc
movsb
or
call
push
loopne
outsb
xchg
js
push
mov
sub
jnp
add
dec
lds
push
cmp
inc
inc
push
xchg
push
mov
push
popl
inc
js
iret
inc
scas
dec
add
push
add
adc
push
daa
cmp
daa
adc
add
sbb
and
add
sbb
cmp
inc
push
lock
adc
addr16
adc
daa
scas
icebp
inc
das
add
pop
and
mov
mov
clc
loopne
mov
or
cwtl
add
pop
sbb
add
push
push
or
test
push
ret
lods
push
push
push
inc
push
push
rorb
or
inc
add
ret
pop
arpl
mov
repnz
scas
cwtl
add
jns
sbb
inc
leave
sbb
mov
cmp
lock
add
mov
mov
sub
test
and
push
iret
cmpsb
jo
and
push
push
push
jg
jns
and
push
xchg
sbb
adc
sub
and
cmp
fdivs
outsl
iret
xor
bound
adc
jg
sbb
aam
loope
mov
stos
cmpsl
add
push
mov
jb
stos
xor
inc
outsl
push
mov
cmc
adc
xchg
xchg
jecxz
or
mov
fcmovne
in
stos
mov
or
in
xor
stos
sbb
and
ja
pop
add
sub
xchg
push
push
xchg
jecxz
add
jp
loop
xor
out
mov
pop
movsl
mov
inc
and
mov
loope
jo
add
fst
push
jne
push
push
test
xchg
rorl
add
das
inc
mov
xor
jge
mov
sub
and
inc
mov
out
add
mulb
lahf
in
add
or
mov
and
push
add
add
cmp
and
inc
xor
mov
pop
sub
int
sbb
and
push
repz
dec
xor
xchg
add
add
sbbl
ljmp
xchg
mov
aam
pop
pop
or
add
sub
add
bound
xchg
sbb
mov
loope
js
icebp
rorb
or
icebp
push
icebp
clc
lea
mov
xchg
sub
xchg
xlat
sbb
sbb
lock
sbb
lds
or
xchg
data16
or
mov
or
inc
popf
cmp
mov
push
fsub
gs
jb
mov
mov
inc
test
cmp
pop
adc
ss
and
pop
dec
test
jne
mov
pop
jl
xchg
pop
adc
mov
jnp
sbb
inc
lret
lods
adc
push
adcb
sub
cmp
mov
jle
inc
lods
sbbb
pop
clc
add
mov
add
in
or
cmp
lret
inc
icebp
mov
loopne
popf
jle
cmp
push
or
xor
mov
cmp
push
lds
pop
mov
sub
mov
aam
montmul
cmpsb
add
gs
add
jno
aad
aaa
lahf
mov
mov
add
lcall
cmpsb
mov
xchg
xchg
mov
mov
cmp
or
shlb
or
adc
int3
add
or
scas
push
loope
add
sbb
loope
xor
jbe
push
mov
push
sbb
or
sub
dec
push
or
call
adc
jo
dec
mov
test
sarb
aaa
add
mov
int
call
cmp
je
roll
push
shrb
lahf
repnz
adc
pop
xchg
inc
add
mov
aaa
adc
mov
or
in
add
xor
pop
pop
sbb
test
jae
pop
scas
add
stos
loope
mov
testb
jo
xor
loopne
mov
incb
sbb
cmp
sbb
aaa
mov
test
adc
adc
mov
or
mov
and
movsb
imul
sbb
das
pop
add
outsl
push
fimull
push
push
inc
aas
jbe
movsb
add
cmp
sbb
xorb
xchg
dec
mov
fisubrs
lret
bound
inc
add
sbb
mov
cmpsl
mov
adc
adcb
je
aam
mov
nopl
loop
dec
call
div
inc
in
in
mov
sub
push
mov
cmpsb
dec
and
cwtl
pop
adc
loope
push
aaa
adc
lea
and
pop
ret
or
mov
push
loopne
mov
push
leave
adc
adc
les
sub
adc
jp
mov
add
incb
adcb
aad
pop
les
adc
mov
mov
jne
cmpsb
sbb
mov
adc
sbb
dec
add
add
push
push
je
push
push
cmc
cmp
push
push
and
adc
stos
scas
dec
push
xor
dec
dec
test
mov
ret
dec
ljmp
mov
jb
adc
xchg
loopne
mov
and
sbb
add
lock
cmp
cltd
js
add
add
lcall
mov
out
inc
es
adc
inc
enter
mov
shlb
push
sti
push
ret
push
xor
loope
adc
cmp
inc
scas
push
adc
xor
je
mov
inc
push
leave
xchg
out
mov
adc
out
or
add
push
loope
mov
mov
dec
aas
mov
push
test
in
jmp
dec
roll
or
mov
in
or
ljmp
iret
and
xor
add
pushf
or
popa
push
rcrb
sub
adc
stos
dec
cwtl
mov
je
andb
xchg
mov
mov
js
xlat
leave
inc
push
mov
les
and
sbb
enter
fistpl
imul
mov
aam
mov
push
adc
push
inc
push
inc
popa
cmpb
sbb
lcall
bound
sbb
mov
adc
adc
sbb
inc
lret
adc
js
push
sbb
gs
mov
subl
cli
into
bound
lods
lods
sbb
inc
cmove
cmp
lcall
add
aas
jp
addl
mov
adc
xor
jo
ljmp
or
add
pusha
add
mov
nop
push
loope
sub
sbb
out
add
push
and
loope
mov
mov
mov
pop
xchg
scas
add
insb
xor
adc
sub
mov
shl
loope
imul
mov
add
outsb
in
jns
push
sub
cmc
lock
cwtl
or
or
sbb
into
mov
mov
shl
aad
adc
arpl
or
adc
test
jl
sbb
testb
push
add
jo
pusha
rorl
in
dec
rcrl
sub
dec
xchg
push
inc
mulb
inc
adc
mov
lods
stos
add
lret
int3
scas
or
dec
cmp
or
xchg
adc
cli
add
or
jo
sub
xlat
fucomip
into
jecxz
test
or
sub
mov
pop
pusha
push
enter
aad
push
int
mov
xchg
les
mov
or
cmp
mov
loop
push
fcmovnu
cltd
xor
js
lahf
jle
add
lret
add
push
int
stos
pop
scas
loopne
sub
add
ja
shll
mov
mov
pop
and
clc
jae
movsl
nop
sahf
imul
icebp
mov
adc
sub
add
push
iret
mov
jnp
getsec
mov
push
push
cmp
js
cli
push
and
cmc
adc
add
mov
pop
cmc
inc
shrl
and
adcb
mov
lcall
movsl
jp
popf
dec
lahf
xchg
sbb
mov
stos
sbb
shrl
push
pop
sbb
sbbl
mov
push
cmp
cmp
inc
xor
inc
arpl
pop
lds
pop
push
cwtl
pop
adc
sbb
add
adc
ret
shl
mov
xor
rcl
imulb
call
add
xacquire
and
sbb
test
add
pop
cmp
fdiv
stc
ud2
adc
in
sub
or
int3
jno
js
stc
sbb
cmp
stos
sbb
xchg
stos
jo
or
lock
cmp
pop
leave
xchg
pop
sbb
dec
ficoml
icebp
adc
sub
add
lods
pop
cwtl
xor
pop
loop
inc
push
pop
push
mov
ret
push
test
xor
mov
mov
mov
add
sbb
call
push
loopne
mov
aaa
rolb
scas
js
clc
int
lds
pushf
adc
adcb
rcrb
outsb
loope
pop
sbb
adc
pop
sub
lret
pop
add
add
aad
adc
adc
test
mov
or
test
sbbl
xor
mov
leave
mov
ds
add
xchg
call
leave
xchg
iret
mov
add
pop
data16
cmp
inc
cmp
scas
stos
loop
jo
call
mov
cld
cmp
mov
mov
aam
xchg
lea
or
inc
jnp
addb
sub
mov
mov
nop
jae
pop
push
stos
xchg
pusha
loop
pop
in
inc
pop
mov
iret
xlat
add
aas
or
test
in
adc
or
or
clc
or
xor
push
push
clc
pop
sbbb
jmp
push
mov
add
bound
fcmovnb
or
cmp
add
add
jg
adc
sbb
inc
shll
mov
push
dec
cwtl
xor
xor
inc
lock
loope
call
or
pop
or
rorb
shl
mov
aam
pop
push
xchg
sbb
pop
mov
push
pushf
test
sbb
lret
dec
inc
xor
mov
sahf
adc
push
or
push
mov
enter
add
enter
movhps
dec
mov
call
sbb
lock
inc
sub
jl
push
or
jl
cmp
push
xchg
mov
jo
lahf
mov
orl
je
mov
sbb
mov
enter
aaa
or
pushf
or
add
and
and
jmp
bound
or
jecxz
pop
push
mov
aas
outsb
lds
or
loopne
jp
mov
in
jo
xor
in
inc
sti
push
sbbb
dec
jp
add
add
ljmp
aad
xchg
mov
inc
and
and
cmpsb
mov
sbb
test
pushf
and
les
or
ljmp
pop
stc
xor
jle
cs
add
adc
and
icebp
lds
dec
push
push
jl
mov
cmpsl
sub
popa
stc
in
inc
jl
jo
ds
sbb
mov
add
push
outsb
mov
push
repnz
pushf
stos
leave
inc
lcall
pop
add
sub
sbb
mov
pop
inc
addb
cmpsb
adc
push
fdivs
dec
aad
leave
fcomps
stos
pop
push
jo
rcrl
cwtl
mov
insl
push
xchg
pop
ret
pop
and
xor
pop
je
pop
in
test
sbb
paddq
pop
add
add
mov
mov
test
int3
mov
and
lret
pop
inc
ret
mov
ret
pop
rolb
movsl
sub
push
lret
and
movsb
sub
inc
mov
iret
hlt
and
push
test
inc
cmp
daa
adc
cmp
mov
adc
pusha
and
mov
add
adc
xor
mov
mov
and
popa
js
shrb
adc
cs
lods
jne
fstl
add
test
xchg
sbbb
push
xor
dec
push
add
inc
stos
mov
add
mov
push
sbb
les
xchg
loope
sbb
mov
fidivl
push
push
jae
addb
cmp
into
stc
sbb
pop
pop
ds
nop
sub
loopne
push
xor
inc
pop
mov
mov
add
adc
andb
test
pop
in
btc
pop
cmpsl
ret
pop
pop
xchg
out
pop
sbb
lcall
mov
jo
and
mov
dec
loopne
push
js
sub
cwtl
call
lods
mulb
shrb
stos
adc
enter
push
ret
jl
repnz
add
pop
test
push
mov
pop
add
push
ljmp
mov
dec
lds
repnz
enter
fwait
addb
dec
adc
add
or
add
inc
test
test
xor
and
dec
sti
push
adc
ljmp
cmpb
pop
pop
fisubrs
aam
inc
cmp
dec
push
je
mov
shr
fwait
lcall
mov
mov
sbb
cltd
push
push
into
rolb
stos
fldenv
inc
xor
mov
push
vsqrtss
sub
inc
cmp
push
xor
xor
imul
mov
mov
sbb
and
ret
pop
mov
ljmp
les
adc
pop
lret
mov
mov
adc
subb
fisttpll
stos
inc
xchg
cmpsb
pop
dec
inc
mov
cmp
das
mov
std
mov
sbb
xor
shlb
xchg
test
or
inc
add
mov
push
pop
ljmp
and
popf
push
iret
push
mov
fistl
imul
hlt
mov
stos
pop
test
pusha
and
sub
fwait
push
inc
and
ljmp
xor
pop
pushf
pop
mov
add
jecxz
pop
mov
adc
in
adc
jmp
loopne
xchg
stos
jmp
dec
adc
or
cmp
add
or
sbb
or
add
adc
adc
fnstsw
or
xchg
push
mov
loope
ss
push
hlt
loop
sbb
xor
aaa
mov
jnp
mov
push
cmpsb
pop
sbb
scas
mov
inc
pop
fcoms
push
push
cld
pop
pop
call
dec
inc
pop
aas
mov
push
gs
push
or
test
or
xor
cld
xchg
lock
push
jno
test
adc
xor
or
dec
rclb
test
xor
cmpl
sub
or
jae
sbb
pop
jmp
std
int3
cmpsl
jb
ret
das
mov
inc
mov
and
push
push
add
pushf
jae
mov
inc
mov
jp
pop
repz
sbb
xor
adc
popf
push
test
adc
pop
push
mov
in
outsl
pop
mov
sub
into
shll
loop
mov
mov
xchg
fnstenv
sbb
add
aam
pop
ljmp
fwait
sarl
mov
and
and
add
mov
jo
lret
mov
and
adc
sbb
lret
push
or
aad
es
push
xchg
push
add
or
ret
add
inc
sbb
test
sbb
mov
js
mov
fnstcw
inc
mov
and
mov
push
mov
push
lods
cltd
je
sbb
xor
sub
pop
add
iret
lret
push
mov
inc
movsl
push
mov
sahf
sbb
in
addb
fldenv
or
jbe
test
push
mov
pushl
add
push
xor
xchg
out
and
push
jb
lods
rcrb
cmp
stos
jo
and
stc
cmc
add
xchg
add
adc
or
jle
mov
loope
stos
loop
xor
fstpl
lds
xor
add
sbb
ficompl
call
mov
xchg
pop
or
inc
rorl
repnz
push
cs
lret
rorb
push
add
pop
mov
jb
cmc
shlb
lods
mov
push
pop
jo
hlt
cli
inc
and
je
jne
in
push
cmp
add
loop
mov
add
or
adc
push
xor
data16
or
mov
ret
adcb
add
cmpsl
out
adc
dec
into
sbb
add
or
mov
or
sbb
and
pop
pop
pop
sbb
ret
add
mov
inc
inc
xorl
xchg
aad
and
xchg
lahf
sbb
push
adc
addl
mov
add
mov
adc
sbb
pop
repz
or
inc
pop
cmp
pusha
inc
sbb
mov
cli
lods
add
sti
or
adc
pushf
add
xchg
lods
jl
sbb
push
hlt
mov
dec
cmc
ret
xchg
add
jne
sahf
stos
xor
or
and
fisttpll
inc
sub
test
test
push
insb
aad
push
pop
stos
and
aad
scas
cmp
mov
xchg
fdivl
in
int3
push
push
mov
lret
pop
cltd
sub
add
add
jb
xchg
dec
shlb
xor
sbb
test
dec
insl
or
mov
jle
pop
in
jmp
movl
add
pop
aas
jg
jl
jmp
lcall
movsb
test
out
lahf
movsl
ret
push
mov
push
rorl
imul
xor
ror
aas
lock
push
rorb
andb
out
cmpl
ss
insl
and
ljmp
repz
iret
lahf
nop
ret
insl
lmsw
jg
fadds
jg
cld
stc
pop
jns
fwait
out
jo
movsb
enter
test
clts
out
lahf
aas
movl
push
dec
shrl
cld
stc
repz
notl
fwait
and
repnz
inc
sbb
aas
jg
mov
dec
mul
dec
iret
ret
stc
repz
loop
pusha
adc
ficompl
mov
jg
xor
stos
gs
xor
lock
stc
repz
sti
es
dec
cwtl
xchg
xchg
out
add
dec
xchg
aas
jg
cld
int3
int3
jg
in
or
add
out
lahf
popf
cwtl
scas
xor
fdiv
mov
addr16
cld
stc
jne
imul
jb
cmp
mov
cld
cli
repz
stos
jns
pop
movsl
cs
pop
jg
cld
stc
je
push
add
lds
mov
cmpsb
cmc
pusha
out
lahf
aas
mov
in
fcmovb
pusha
xor
inc
mov
cld
stc
repz
adc
push
outsl
mov
lcall
jg
jnp
push
lea
add
aas
test
cmp
push
and
aas
jg
adc
roll
aas
je
or
iret
fimuls
dec
push
cmp
lahf
adc
jg
cld
decb
push
ret
jns
outsl
shl
jbe
pop
repz
lahf
xor
loopne
cmpsb
nop
push
nop
addb
stc
mov
ja
rcrb
iret
and
iret
lahf
aas
rcrl
ja
inc
jle
cld
stc
repz
out
cmpb
jp
das
pop
dec
dec
lahf
aas
jg
mov
push
push
inc
in
mov
repz
cmp
mul
inc
push
imul
decb
sbb
subl
repz
jno
jl
push
movsb
mov
inc
xchg
std
aas
jg
cld
aas
daa
or
push
xchg
pop
mov
les
out
lahf
jmp
leave
fmull
ljmp
stc
mov
out
dec
sub
add
mov
jbe
jae
mov
in
sbb
mov
jp
setg
jg
sub
sbb
lcall
repz
lret
lds
pop
adc
push
dec
pop
int
lahf
gs
fisttpl
fwait
push
shlb
out
jnp
roll
sub
mov
add
stc
repz
in
xchg
insl
lcall
into
jae
aas
jg
cld
jg
add
loope
or
xchg
push
and
iret
lahf
das
je
es
add
cld
stc
ret
shll
push
mov
sub
iret
lahf
aas
popf
add
fimull
mov
push
inc
ret
cmpb
repz
and
add
push
repz
aas
movntq
sbb
lock
fdivrl
cld
stc
and
fldenv
push
xchg
cmpl
jo
out
lahf
aas
fildll
dec
push
fisttpll
stc
repz
rcrl
or
add
lahf
aas
jg
arpl
jne
lret
scas
cmp
fidivrs
repnz
stc
repz
ds
or
cmp
mov
inc
jle
mov
push
jecxz
or
dec
fs
iret
pop
pop
lea
mov
sahf
push
popf
das
inc
and
stc
repz
insl
mov
mov
test
add
js
pop
dec
sbbl
mov
iret
lahf
sbb
mov
push
add
ljmp
xchg
mov
sti
loop
jnp
gs
pop
jbe
outsb
xchg
lahf
aas
cwtl
lcall
xor
popa
mov
jg
popa
scas
in
or
inc
mov
stc
repz
push
dec
cmp
pop
xchg
pop
movsl
xchg
shl
mov
lahf
aas
jg
lods
dec
insb
cmc
cmc
add
xor
push
cmpl
stc
repz
jne
imul
cmp
shll
xor
cld
imul
sarb
push
mov
out
lahf
push
js
cld
pop
mov
sub
inc
cmpl
jg
cld
stc
emms
xchg
adc
mov
stos
fnsave
roll
dec
out
lahf
aas
clc
sub
push
push
stos
lods
and
cld
stc
repz
out
inc
stc
mov
cmpsb
lds
cwtl
enter
jg
aad
les
sub
jnp
inc
addr16
sbb
stc
repz
lea
mov
dec
les
jb
aaa
and
out
xor
iret
lahf
aas
jg
mov
jmp
xchg
sub
dec
stc
insb
jnp
repnz
repz
push
mov
or
mov
sub
iret
aas
jle
pop
push
inc
daa
inc
int
xor
adc
cld
stc
repz
iret
pop
andb
aaa
push
fwait
dec
jmp
ret
aas
jg
jbe
mov
cmp
cld
stc
repz
mov
leave
mov
scas
jl
lret
lahf
aas
jg
or
xor
loop
lds
iret
roll
add
subb
push
stos
bound
jg
cld
loope
or
xchg
lret
jae
pop
sbb
and
iret
lahf
pop
add
pop
push
repnz
cld
mov
das
fbstp
adc
lahf
aas
jg
mov
jl
insb
leave
sub
lret
dec
pop
bound
cmp
push
jae
mov
scas
bound
xor
stc
repz
in
jecxz
xor
fs
xor
aas
jg
cld
mov
sbb
xchg
out
push
repz
repz
lahf
jno
add
mov
in
mov
inc
xor
sbb
std
mov
shlb
inc
out
lahf
aas
mov
pop
rcll
push
insb
cld
stc
repz
inc
mov
push
movsb
div
ss
loop
jae
iret
lahf
aas
jg
icebp
fsubrl
aas
data16
stc
repz
jge
jae
xchg
jne
jo
mov
lahf
aas
jg
rorb
xor
mov
mov
clc
testb
out
sarl
testb
mov
cld
push
jmp
arpl
ja
cmp
in
mov
repz
lahf
movsb
outsb
pop
and
insl
add
mov
shlb
cld
stc
pop
cmp
push
lahf
pushl
out
lock
out
lahf
aas
mov
cmp
and
fsts
cld
stc
repz
movd
jmp
repnz
mov
jg
fwait
xorb
add
ud2
xor
repz
jnp
jg
int3
jae
sahf
inc
aas
jg
mov
push
aas
cmc
loopne
inc
gs
pandn
and
out
lahf
fiaddl
inc
dec
pop
cmpsl
mov
cld
stc
add
subl
fs
in
cli
cmc
roll
mov
call
fbstp
push
jb
mov
out
lahf
fsubs
or
sub
int3
push
mov
jbe
iret
lahf
aas
jg
pop
aam
sbb
pop
dec
pop
ljmp
out
xchg
mov
jnp
pop
cld
stc
repz
popf
jbe
jae
adcl
lahf
aas
jg
fcmovu
nop
sub
negb
cmp
repz
push
in
xor
inc
pop
aas
fldt
pop
fimull
aas
aaa
xor
iret
jbe
xchg
js
add
or
xor
cld
daa
movsw
xchg
fidivs
add
fisubrs
xchg
lahf
sub
in
adc
repz
mov
fsubrl
jmp
stos
aas
jg
cld
orl
scas
cld
or
out
lahf
js
mov
inc
xchg
pushf
mov
jg
cld
stc
add
inc
data16
xor
cmp
iret
lahf
aas
test
adc
incl
repz
or
enter
dec
jb
or
lahf
aas
jg
xor
arpl
bswap
repz
and
in
dec
jecxz
or
lahf
clc
cld
stc
repz
jmp
test
sub
xchg
arpl
xor
sbb
jg
cmp
arpl
cmpsb
pop
stc
repz
jbe
mov
push
addr16
or
cld
fstpl
iret
cmp
push
mov
mov
iret
lahf
pop
xchg
pop
dec
adc
push
sbb
aam
cld
stc
pop
mov
pop
xchg
dec
mov
xchg
add
aas
add
fcoms
gs
pop
test
dec
movsl
xlat
cmp
repz
mov
cmpsl
fwait
mov
lock
jg
cmp
dec
xchg
addr16
shlb
iret
lahf
in
insb
sbb
out
cmpsb
mov
push
insb
and
cld
stc
shl
jb
pushf
xchg
mov
add
xchg
xor
jge
sbb
push
bound
out
les
test
and
mov
jge
xchg
push
cmp
jns
cld
stc
repz
pusha
outsb
mov
pusha
xchg
or
movsl
out
lahf
aas
jg
sbb
insl
inc
add
adc
sbb
mov
hlt
in
loopne
mov
sbb
fnstcw
lahf
jg
inc
cs
aas
xchg
mov
stc
repz
cmp
adc
mov
mov
mov
aas
jg
cld
dec
and
imull
pop
repz
lahf
test
sbbb
rorb
jg
cld
stc
or
sbb
push
aaa
mov
scas
jno
in
iret
lahf
aas
bound
xchg
and
cld
stc
repz
sarl
adc
outsl
ret
lahf
aas
jg
stos
sbb
fwait
xor
repz
outsl
mov
leave
pusha
ror
sarl
jg
lahf
sub
daa
cltd
add
in
jne
stc
repz
mov
popf
into
sbb
aam
jg
cld
xchg
mov
out
mov
in
lea
jg
rorl
call
loop
cwtl
push
cmp
out
lahf
aas
mov
add
stos
and
mov
pop
jg
bnd
jne
pusha
jne
add
or
add
enter
lahf
aas
pop
je
imul
jae
shrl
repnz
mov
shll
sbb
cld
stc
repz
fildl
enter
ja
pop
and
pusha
sti
outsl
and
xchg
jg
pop
jecxz
inc
call
rorl
cld
loope
mov
sbb
insb
jne
iret
lahf
aas
jg
mov
jbe
imul
or
dec
cld
stc
repz
xchg
rep
clc
mov
xchg
push
mov
or
lahf
aas
xchg
pop
mov
jnp
mov
stc
cld
stc
repz
aaa
dec
pop
js
mov
pop
xchg
lahf
aas
jg
xchg
jmp
cltd
iret
ja
mov
repz
rorb
xchg
daa
sbb
jbe
lods
aas
jg
cld
ret
test
sub
sub
iret
lahf
shr
mov
mov
daa
pop
push
jg
cld
stc
cmpsb
xchg
cmpsl
test
pop
enter
rcll
iret
lahf
aas
daa
sub
xchg
dec
inc
add
fs
cld
stc
repz
and
dec
jne
mov
mov
lahf
aas
jg
mov
xchg
data16
stos
movsb
or
repz
out
sub
pushf
dec
xor
pop
adc
xadd
jle
xchg
or
jl
js
int3
data16
lds
push
mov
out
lahf
aas
mov
ja
movsl
cwtl
jnp
fcmovne
rcr
cld
stc
repz
and
adc
dec
and
inc
jno
nop
iret
lahf
aas
jg
fistps
mov
cld
cld
stc
repz
cmp
loopne
out
lods
gs
jmp
aas
jg
and
add
sub
mov
lock
pop
dec
pop
mov
les
imul
test
mov
and
mov
repz
lahf
push
inc
dec
ja
push
sbb
xor
pop
jb
jg
cld
stc
hlt
push
loope
nop
push
or
test
ficoml
or
in
sub
lods
push
dec
addr16
repz
push
rcrl
es
popf
mov
mov
pusha
cmp
fwait
aaa
outsl
fsubrp
rolb
lds
add
mov
int
xchg
pop
imul
add
push
or
repnz
inc
aam
int
arpl
mov
inc
test
cld
jecxz
pop
sub
daa
int
pop
leave
fisttpll
push
sti
rorb
lahf
aas
jl
or
fwait
push
adcb
and
pop
xchg
mov
mov
inc
iret
lahf
aas
jg
fs
dec
cld
xchg
ss
add
adc
loopne
stc
repz
or
jle
lds
jmp
outsl
gs
cld
pop
leave
xchg
aam
loope
and
mov
nop
stc
mov
sbb
xchg
int
aaa
outsl
call
out
adcl
aam
and
adc
cmp
imulb
fwait
aaa
outsl
ficoms
jle
les
stc
adc
mov
jno
hlt
enter
sbb
lahf
jl
jns
out
sub
loop
sti
iret
mov
in
cmp
fsubrp
sti
imul
cmp
movsl
and
movsl
aas
sub
loope
cs
mov
adcb
aaa
outsl
fidivrs
pop
jno
xchg
std
xchg
je
push
aam
out
fwait
imul
jne
fidivrs
setp
mov
xor
jmp
int
aaa
jbe
ffreep
push
rcrb
pusha
push
mov
pop
fidivrs
sti
int
mov
jno
mov
int
aaa
outsl
jmp
mov
pop
add
sub
mov
int
fidivl
cltd
dec
ja
xor
imul
outsl
fidivs
mov
xchg
push
or
sub
aad
outsl
jns
out
mov
fcompl
cmp
pop
fidivrs
sub
mov
pop
sbb
or
mov
popf
dec
sahf
aaa
hlt
scas
sahf
sbb
call
ds
xor
cld
sbb
sub
adc
cmp
int3
shl
repz
lahf
aam
icebp
lret
outsl
daa
push
arpl
pop
pop
jg
cld
stc
loop
outsl
inc
dec
jbe
mov
push
lock
iret
lahf
aas
sbb
inc
mov
cld
stc
repz
jbe
jno
cld
mul
or
scas
xchg
xorb
pop
icebp
sub
ss
movsb
leave
stc
stc
repz
pop
fbstp
push
fs
les
jg
adc
adc
movl
lahf
mov
rclb
mov
cld
stc
pop
iret
or
sbb
jae
imul
imul
sub
repz
in
xchg
in
xlat
push
add
aad
jecxz
aad
lahf
aas
jg
sahf
dec
jmp
movsl
dec
xor
push
popf
xor
jbe
jecxz
cmp
pop
scas
rcrl
aas
jg
sbb
out
xchg
lds
pop
stc
repz
sbb
sbb
aas
aam
ljmp
cld
fs
nop
fbstp
or
aad
stc
xlat
dec
arpl
pop
cmp
in
lahf
aas
jg
add
push
enter
mov
out
mov
fdivs
inc
aas
or
cs
idivb
jg
cld
pushf
insb
push
cld
sub
cmc
cli
push
add
dec
inc
mov
sbb
sub
nop
mov
mov
stc
mov
push
xchg
inc
shlb
jns
xchg
mov
fneni(8087
jne
loopne
lea
pop
pop
flds
pop
push
push
cld
stc
repz
pop
inc
dec
mov
jp
push
add
mov
jg
xchg
iret
lahf
jg
add
add
in
aas
xchg
cld
stc
repz
icebp
stos
jnp
jp
push
das
pop
adc
mov
aas
jg
pop
ret
add
into
movsb
jecxz
cmpsl
jbe
enter
xlat
out
xchg
mov
inc
mov
sahf
hlt
rcll
icebp
and
jg
cld
adc
add
dec
pushf
pop
int
jg
or
out
lahf
ds
adc
inc
push
cmp
clc
jg
cld
stc
iret
imul
dec
inc
out
sub
mov
out
lahf
aas
dec
xchg
clc
cmp
mov
sub
sbb
inc
das
push
jg
jge
stos
mov
sub
stos
cld
stc
repz
cmp
xchg
jnp
loop
out
loopne
stos
mov
cmp
adc
in
outsl
lods
stc
sub
sar
repz
lods
or
jmp
xor
fiadds
cld
orl
dec
jno
stc
repz
dec
jo
es
imul
das
and
mov
pop
aas
test
iret
lahf
aas
jg
dec
cwtl
dec
cmp
clc
js
push
xchg
jmp
out
sub
ja
xchg
scas
inc
mov
jg
cld
stc
pusha
lds
pop
dec
inc
xchg
push
out
lahf
aas
pop
push
leave
dec
add
aam
cld
stc
repz
mov
leave
and
cltd
ret
lock
pop
aas
jg
jns
cli
xchg
iret
adc
mov
pop
sahf
mov
es
sub
mov
test
aaa
out
xchg
sbb
fwait
aaa
sbbb
adc
push
addb
aaa
push
and
pop
mulb
loopne
das
not
data16
push
divb
pop
push
and
imulb
sbbl
idivb
test
addb
pop
push
push
pusha
and
scas
testb
fists
push
bound
testb
scas
push
push
pusha
and
mulb
xchg
orl
sbb
ja
and
push
bound
mov
inc
testb
xchg
testb
xchg
pop
mulb
popa
and
xor
sbb
idivb
adc
adc
psadbw
xor
or
idivb
inc
and
notb
cmp
divb
divb
sub
divb
inc
push
imulb
mul
not
leave
inc
add
divb
idivb
negb
les
adc
pop
notb
rorb
or
mov
or
shl
imulb
notb
and
negb
cmpsl
xor
shl
testb
adc
add
xlat
mulb
xchg
adc
notb
testb
inc
or
idivb
test
inc
xor
imulb
sub
testb
movsb
or
fcomip
shlb
scas
xor
ret
testb
wrmsr
adc
add
iret
testb
add
testb
add
add
mulb
idiv
imulb
test
xchg
xor
or
idivb
adc
add
negb
into
xor
ja
notb
and
and
dec
scas
negb
sbb
pop
pusha
and
fs
mov
testb
and
iret
idivb
sbb
and
loopne
push
and
cmpsl
pop
push
and
aaa
imulb
mov
js
orl
orl
pop
add
sbb
xlat
out
idivb
adc
inc
mul
testb
or
ja
out
test
jo
lahf
imulb
add
adc
inc
testb
xor
imulb
add
idivb
or
xor
inc
notb
negb
adc
add
pop
divb
sub
xor
outsl
negb
xor
pop
test
and
pop
idivb
mulb
sbb
add
test
and
push
mulb
mov
pop
testb
and
or
push
divb
pop
negb
mul
testb
adc
not
les
adc
test
mov
add
das
xor
roll
testb
pop
testb
xchg
out
not
or
inc
lret
idiv
xor
leave
inc
imulb
xor
xlat
divb
add
lahf
divb
add
or
xor
iret
negb
mov
negb
add
or
pop
mulb
inc
rolb
testb
xlat
not
inc
int3
inc
int3
idivb
and
inc
ret
negb
roll
mulb
cmpsl
add
xor
test
adc
inc
and
testb
push
mov
add
add
ja
or
xor
not
notb
add
mov
test
add
xor
push
testb
xor
inc
negb
adc
inc
and
idivb
negb
testb
ret
inc
testb
inc
sub
inc
push
testb
adc
divb
pop
sarb
xor
outsl
testb
or
shl
imulb
neg
divb
add
cmpsl
imulb
add
ja
xor
adc
push
das
xor
or
ja
adc
add
ja
inc
add
mov
imul
xchg
adc
testb
add
testb
scas
addr16
les
ret
notb
inc
sub
idiv
testb
xor
negb
xor
les
test
pop
roll
imulb
cmpsl
add
xor
mulb
notb
leave
inc
or
testb
inc
xor
outsl
testb
psadbw
or
iret
imulb
xor
lret
neg
testb
add
or
xor
notb
mov
testb
add
div
pop
scas
rol
inc
enter
xlat
ret
shrb
test
out
xor
xor
mulb
pop
jg
pop
sub
mov
negb
xor
divb
aad
add
or
arpl
imulb
mul
testb
les
testb
enter
jg
jo
add
inc
imulb
div
idivb
inc
and
notb
neg
not
or
out
xor
push
into
arpl
sti
sub
div
cmp
xor
rcrb
notb
loopne
inc
push
bound
jg
xchg
push
bound
idivb
or
or
negb
orl
mulb
and
loopne
push
testb
aas
testb
popa
and
sbb
das
bound
bound
cmpsl
neg
adc
push
test
testb
add
add
pop
imulb
inc
add
test
aas
xor
mov
movl
xchg
inc
int3
inc
or
notb
ret
inc
int3
mulb
xchg
xor
div
add
testb
adc
inc
and
testb
mov
divb
idivb
test
adc
add
jg
popl
add
xor
push
xchg
add
xor
not
notb
ret
inc
sub
notb
negb
lsl
xor
notb
sub
testb
rorb
negb
adc
sbb
pop
in
outsl
lods
testb
mov
ja
addb
sbb
sbb
inc
js
and
imul
mul
add
and
testb
cmpsl
notb
sbbl
sbb
addb
sbbl
negb
pusha
and
loopne
push
divb
data16
push
push
bound
and
negb
adc
idivb
negb
testb
lahf
negb
cmp
adc
lahf
addb
out
sub
negb
mulb
adc
mov
notb
mov
mulb
push
div
aas
xchg
addl
prefetcht0
testb
push
and
mov
notb
negb
testb
pop
div
test
mov
sub
loopne
loopne
inc
les
adc
pop
loopne
add
pop
negb
xor
ret
idiv
nop
sbb
inc
pop
dec
inc
add
out
imul
add
sbb
testb
push
mov
and
not
xor
add
test
add
notb
xor
and
imul
test
xor
pop
testb
lret
notb
and
xchg
aaa
testb
repz
xor
and
inc
test
shlb
adc
inc
testb
outsl
mul
notb
negb
xor
sub
testb
adc
div
mov
xor
inc
inc
xor
xor
aas
notb
negb
push
add
xor
divb
notb
leave
inc
add
mulb
ret
xor
mov
inc
and
les
inc
les
adc
mulb
cmpsl
and
xor
psadbw
add
notb
leave
inc
or
testb
lahf
mulb
xor
inc
test
add
testb
and
divb
idivb
imulb
testb
rol
aas
testb
div
daa
or
xor
notb
testb
pop
notb
notb
pop
add
nop
outsl
mov
ret
loopne
pusha
loopne
testl
xlat
testb
sbb
and
adc
mov
out
das
addb
out
dec
pusha
and
idivb
test
xchg
adcl
inc
push
dec
pusha
and
jg
push
bound
bound
negb
mulb
and
testb
xchg
cmpsl
pop
and
bnd
divb
bound
mov
imulb
adc
test
orl
negb
sbb
out
not
pusha
and
and
push
bound
imulb
push
push
popa
divb
js
notb
testb
call
fcomip
das
sbb
mul
push
push
and
notb
xchg
adcl
pop
sbb
pop
sbb
sbb
xor
push
and
bound
bound
outsl
idivb
orl
push
bound
not
mulb
sbbl
xlat
mul
mulb
cmp
and
push
idivb
pop
aaa
imulb
idivb
nop
xor
pop
dec
push
mulb
bound
data16
dec
sbb
push
testb
orl
notb
push
push
xorl
and
xchg
orl
out
and
negb
push
bound
imulb
xchg
xor
push
es
cvtdq2ps
es
push
xchg
mov
push
ja
adc
test
loopne
and
dec
testl
and
iret
testb
inc
xlat
ljmp
pop
ret
cmp
sbb
cld
push
jnp
cltd
xor
popa
mov
clc
inc
repz
lahf
push
cs
mov
jbe
test
mov
sub
cmpsb
mov
loopne
or
or
cs
enter
adc
mov
jb
cld
stc
repz
stc
and
dec
mov
icebp
sahf
fbstp
js
add
je
sbb
push
cli
adc
jne
stc
repz
or
push
inc
inc
mov
stos
pop
push
lahf
aas
jg
mov
lods
jge
inc
insb
ror
dec
stc
repz
icebp
pushf
cli
and
mov
scas
lahf
lahf
aas
jg
les
lret
aas
mov
ret
stc
repz
xchg
or
mov
fstl
in
mov
aas
jg
cld
rclb
jnp
insb
aad
sahf
lds
aas
cs
xlat
icebp
leave
iret
lahf
adc
sbb
push
test
cli
out
or
push
faddl
loopnew
add
ficoms
inc
fisubs
pop
out
in
fstpl
insb
mov
lret
les
adc
inc
lahf
cld
ficoms
dec
out
shlb
incl
push
ret
fidivrs
xor
cli
inc
adc
mov
insl
enter
cmp
cmp
sub
mov
scas
stos
jg
cld
jmp
adc
cmpsb
jecxz
call
je
push
out
lahf
aas
or
cltd
arpl
sti
mov
cld
stc
repz
jmp
movsb
jbe
outsb
fs
lahf
aas
jg
pushf
dec
push
xor
sbb
cld
stc
repz
sub
dec
xor
flds
aas
jg
inc
push
sbb
mov
add
inc
fidivrl
pushf
xor
pop
movzwl
sbb
mov
cld
adc
fucomi
bound
dec
jecxz
fwait
aas
repz
lahf
cmp
ljmp
jg
cld
stc
jnp
call
pop
aad
mov
and
lahf
aas
fs
std
jb
notl
stc
repz
stos
mov
outsb
and
xlat
xchg
mov
sahf
es
test
push
repz
mov
push
sbb
or
xchg
mov
dec
xchg
push
outsb
inc
lahf
enter
lahf
inc
repz
xchg
incb
enter
cmp
daa
xorl
leave
das
mov
es
out
dec
pop
shlb
std
movsb
add
mov
cmp
lcall
jns
xchg
push
cmp
mov
aaa
outsl
aas
gs
inc
aaa
ret
mov
xchg
mov
out
sbb
icebp
push
push
aaa
outsl
fisubs
sbb
dec
iret
push
dec
and
add
jmp
shlb
mov
sbb
sti
xor
mov
fnstcw
les
int
aaa
out
addr16
stos
iret
jnp
pusha
iret
and
jns
out
adc
mov
cltd
mov
cmp
rcll
fldt
dec
dec
lods
addr16
out
mov
push
mov
push
movsb
mov
fidivrs
popa
sbb
gs
push
repz
fwait
sti
hlt
and
mov
cmp
addr16
pop
sbb
or
or
xlat
mov
mov
cld
stc
repz
pop
jmp
cltd
loop
iret
sub
xor
mov
iret
lahf
aas
jg
hlt
sti
icebp
lret
jge
pop
add
inc
dec
cld
stc
repz
xchg
and
ljmp
stc
in
lahf
aas
jg
loop
sub
mov
inc
shrb
mov
imul
out
sub
imul
mov
in
aas
jg
cld
js
mov
sbb
js
sahf
imul
repz
lahf
repz
mov
idiv
or
adc
cld
stc
inc
mov
cs
test
icebp
repz
scas
daa
loopne
lahf
aas
jb
aam
jo
add
repz
out
and
jnp
int3
push
xchg
aaa
outsl
ficoms
sbb
xor
xchg
sbb
mov
and
mov
test
jbe
in
jle
test
lods
mov
cmpsb
cld
mov
repz
sbb
xchg
sub
or
ret
dec
push
push
jns
sbb
cmpsb
sub
push
lock
push
or
mov
iret
mov
out
cld
stc
repz
push
out
fwait
jmp
mov
and
jg
sbb
inc
imul
adc
stc
adc
jo
ror
adc
push
cld
imul
push
adc
in
int
fwait
aaa
shl
daa
adc
sbb
mov
mov
push
inc
test
fwait
add
bound
sub
and
out
mov
ss
add
movsb
fwait
aaa
outsl
fimuls
cltd
adc
sbb
shll
jne
ljmp
lods
lock
in
and
push
lock
int
aaa
outsl
fbstp
in
push
fdivrl
sub
jns
out
mov
sbb
popf
rolb
shlb
fiadds
inc
pop
insb
pop
std
or
sbb
adc
out
fwait
mov
dec
inc
push
aas
jno
decb
pop
pushf
pop
push
cmp
shlb
int
aaa
push
xchg
xor
mov
dec
mov
es
call
mov
cltd
mov
aas
addl
jne
jecxz
in
mov
out
push
lea
out
stos
mov
sbbl
pop
je
ja
das
jp
outsl
fidivrs
or
inc
fxch
add
out
fwait
cmp
aad
fists
test
pop
fnstcw
and
jmp
sub
mov
pop
pop
outsb
out
cwtl
push
subl
aas
jg
cld
pop
and
sbb
push
repz
and
cltd
push
mov
mov
loope
inc
stos
adc
icebp
jg,pt
cld
popf
pop
out
je
mov
repz
out
dec
pop
loop
inc
scas
xlat
pop
xchg
mov
cli
movsl
push
mov
in
aad
or
out
inc
pop
dec
iret
lea
std
or
lea
testb
mov
aas
cmp
movsb
xor
ffree
lahf
cld
cld
stc
repz
loope
pushw
dec
cmp
push
sub
fiadds
sub
fildl
push
int
aaa
outsl
pop
pushl
ror
stos
mov
mov
add
pop
repz
inc
sub
fidivs
push
push
out
scas
out
jns
out
ds
ret
outsb
cmp
or
push
lods
mov
push
mov
fcomp
mov
cld
stc
or
imul
cmpsl
xchg
sahf
shlb
aas
push
cltd
sbb
and
push
imul
popf
aas
out
jno
repnz
dec
imul
js
mov
and
mov
jbe
mov
insb
sub
inc
scas
mov
add
int
mov
movb
jg
cmp
aaa
outsl
fidivrs
xor
fldl
ja
xchg
dec
ljmp
push
repnz
jbe
mov
lahf
aas
jg
add
lahf
lods
mov
mov
lret
stc
repz
gs
sub
pop
jo
and
sub
aas
jg
cld
sahf
xchg
dec
mov
mov
mov
inc
int
aaa
outsl
pop
xor
push
add
push
lea
or
pop
pushf
mov
jns
out
add
ss
sar
fs
sbb
pop
scas
insl
inc
insl
mov
repz
fwait
adcl
mov
loop
adc
mov
inc
or
subl
mov
int
aaa
inc
sub
scas
mov
cwtl
inc
add
aas
jg
jno
leave
fisttps
mov
dec
repz
lahf
stos
dec
xchg
cltd
negb
sub
jg
cld
stc
add
pop
aas
fwait
mov
mov
sub
lahf
aas
ljmp
faddl
aaa
outsl
fiadds
cs
push
fadd
aad
repz
fwait
and
mov
or
jns
inc
mov
sub
sub
ljmp
fwait
aaa
and
test
fidivrs
or
sub
xor
fwait
aaa
outsl
mov
add
int3
push
or
movsl
stos
cmp
out
cmc
fcmovne
iret
pop
ja
xchg
iret
aaa
outsl
fidivrs
in
out
xchg
add
repnz
or
out
fwait
mov
cmp
and
lea
mov
xchg
lods
loopne
insl
jmp
inc
andl
and
xchg
aam
inc
pop
fs
iret
lahf
aas
jg
and
aad
sbb
sti
in
cld
stc
repz
adc
pop
inc
dec
popf
out
adc
aam
pushf
lahf
aas
jg
xlat
test
add
fwait
sub
repz
add
shll
and
mov
stc
cld
adc
call
fwait
aaa
shlb
dec
outsl
bound
adc
mov
xchg
jns
out
imul
ss
mov
sub
add
mov
outsl
fidivrs
daa
pop
imulb
sahf
jno
stos
mov
adc
fidivrs
fstcw
movsb
fdivr
popf
mov
mov
lret
aaa
and
or
dec
xchg
out
ret
stc
repz
aad
xor
lahf
or
lahf
aas
jg
sahf
sub
sbb
das
pop
xor
stc
repz
jb
sbb
xor
mov
lahf
aas
jg
xor
aam
lods
out
imul
test
xlat
test
iret
shrb
push
xor
dec
pop
mov
stc
stc
scas
aam
mov
jecxz
pushf
inc
xorl
fidivrs
jns
sub
jns
int
mov
scas
loopne
fwait
pop
scas
fisttpl
fidivrs
mov
cld
mov
sub
adc
aam
aaa
outsl
inc
fisttpl
shrl
aaa
mull
adc
inc
fidivrs
xor
inc
sbb
inc
std
add
ss
aas
imul
xchg
shl
inc
hlt
sbb
jnp
lcall
xchg
add
out
fistps
ljmp
bound
mov
push
xor
cmpsb
xchg
repz
fwait
shrb
sub
fsubrp
mov
fidivrs
or
ss
mov
sti
out
fwait
aaa
outsb
lret
or
popf
icebp
nop
mov
push
in
nop
mov
out
sub
iret
mov
scas
insb
fdivp
repnz
sub
test
cld
stc
repz
fstps
sti
jo
test
faddl
negb
aas
jg
push
jnp
popa
lds
add
stc
repz
xchg
imul
pusha
lods
push
lahf
aas
jg
xchg
dec
test
or
mov
lods
lret
mov
cmp
mov
test
int
aaa
push
cwtl
cmp
inc
xor
adc
mov
sbb
pushf
imul
push
loop
mov
pop
inc
fiadds
outsl
adc
das
mov
nop
adc
lcall
dec
push
stos
add
dec
fmuls
cmp
jb
mov
out
ss
and
push
ljmp
lahf
aas
ja
cmpsl
daa
adc
push
iret
scas
add
cld
stc
repz
cmp
lcall
jp,pt
push
dec
and
jg
mov
sub
enter
ja
pop
push
cmp
cmpsl
adc
lods
movsl
jns
out
aad
push
and
adc
call
mov
test
or
jb
dec
fwait
ja
xchg
data16
hlt
icebp
xchg
dec
jns
out
insb
mov
inc
pop
or
shlb
aaa
outsl
fidivrs
ss
dec
out
xor
mov
dec
repz
fwait
xor
jns
mov
jecxz
xchg
fnstcw
dec
outsb
adc
push
repnz
outsl
fiadds
or
mov
xchg
and
cmc
mov
out
int
out
sub
call
les
mov
dec
adc
sahf
outsb
lds
flds
xchg
mov
dec
and
add
in
iret
and
rol
mov
jo
iret
lahf
aas
jg
stos
ficompl
scas
gs
xor
cmp
sbb
es
test
fiadds
test
inc
cmpsb
or
pop
cmp
int
int
lret
int
xchg
out
fs
lcall
mov
test
dec
cmp
ljmp
arpl
inc
nop
test
jg
cld
stc
repz
movsl
and
and
xchg
push
xor
aas
jg
insb
xchg
adc
lock
shlb
repnz
jnp
sbb
inc
andl
out
jne
xchg
ja
push
xchg
ja
outsl
fidivrs
mov
outsl
in
jnp
inc
je
out
fwait
aaa
mov
mov
ret
dec
pop
fidivrs
cvtsd2si
enter
lahf
call
fwait
aaa
outsl
ljmp
pop
xchg
jns
out
pop
jmp
out
cmc
cwtl
iret
lcall
ficomps
fwait
sbb
inc
addr16
icebp
sbb
repz
sbb
mov
add
mov
imul
inc
xchg
mov
inc
pop
insl
lret
iret
mov
pop
fistps
aas
in
stc
inc
loope
sub
inc
jg
fucomp
jmp
adc
xchg
adc
and
sbb
cltd
cwtl
stc
repz
subb
mov
xchg
call
cld
dec
xor
cmp
mov
das
inc
rclb
cwtl
outsl
aas
jg
rolb
mov
mov
jecxz
jg
repz
xchg
push
mov
push
mov
and
mov
roll
in
or
adc
fwait
aaa
out
subb
pcmpgtw
push
mov
jb
out
or
sbb
sbb
add
aas
jg
sub
pop
scas
shlb
sti
or
iret
lahf
nop
outsl
xchg
and
mov
inc
cmpsl
popf
adc
hlt
sub
insb
mov
sbb
leave
iret
lahf
mov
fildl
lret
test
cmpsl
or
xlat
sahf
inc
pop
sub
push
adc
nop
jg
push
and
xchg
or
out
fwait
mov
int3
stc
jne
jmp
imul
mov
xor
sbb
scas
out
fwait
aaa
and
xor
mov
xor
mov
loopne
push
cmc
enter
pusha
je
pusha
push
xor
int
aaa
outsl
repnz
jno
cmpb
xor
jp
sub
test
ja
aaa
outsl
fisubs
mov
mov
imul
out
scas
int
loopne
sti
ss
addr16
cli
cwtl
imul
in
out
mov
daa
leave
mov
xlat
lahf
push
mov
outsl
fisubs
mov
cmp
jle
fmuls
and
jge
repz
shrl
push
cwtl
outsl
fidivrs
out
in
repnz
out
mov
aaa
icebp
data16
test
sub
or
jns
dec
lahf
popw
icebp
xchg
mov
fwait
aaa
outsl
xor
jge
mov
mov
jns
out
repz
jns
cli
repz
icebp
sub
insl
fwait
aaa
outsl
fimuls
repz
jp
pop
lds
testb
or
xchg
int
inc
fwait
pop
jb
bswap
lahf
aas
hlt
mov
and
pop
dec
test
mov
stc
repz
jnp
fistpl
push
push
js
aaa
jle
aas
jg
scas
sub
inc
cmp
lock
iret
mov
aam
out
ja
pushf
outsl
outsl
fidivrs
push
addb
push
jb
xchg
int
aaa
xchg
jns
pop
mov
cmp
jmp
out
lock
xor
daa
rorb
and
fildl
jae
cltd
insb
jns
cmp
aas
pushf
lds
pusha
repnz
aaa
outsl
iret
test
and
sub
cmc
sub
mov
mov
ds
sahf
xchg
sbb
test
outsl
fidivs
pop
and
out
mov
jae
insb
ljmp
fidivrs
and
loope
lds
out
fwait
aaa
outsb
mov
and
loopne
stos
out
mov
cmpsb
test
leave
cld
cmp
int
aaa
outsl
outsl
add
inc
jmp
inc
xchg
shr
movsb
mov
jns
out
mov
mov
jae
sub
aas
lcall
xorl
and
loop
stc
repz
lds
mov
outsb
mov
mov
incl
mov
aas
jg
cld
insb
cmp
int3
add
sbb
mov
push
jmp
out
fwait
xor
sbb
dec
cmp
outsl
fidivrs
lret
push
cmp
mov
ss
fwait
aaa
out
icebp
mov
xchg
scas
into
fidivrs
inc
call
cwtl
mov
dec
stc
fcmovb
int
aaa
outsl
cmp
cs
ljmp
movlps
xchg
mov
cmpsb
dec
nop
ljmp
mov
outsl
ficoms
icebp
repz
sbb
dec
mov
jb
out
push
cmp
and
mov
push
jle
aas
jg
div
jg
test
adc
xchg
stc
repz
mov
ffreep
fsts
or
push
inc
call
mov
std
push
in
fcomps
loope
xchg
lahf
or
xor
fdivrs
cld
inc
pop
ja
xchg
mov
inc
pushf
fmuls
aaa
nop
lods
outsb
fidivrs
adc
jb
movsl
enter
fildll
push
sbb
cs
shlb
jg
and
mov
jl
jns
mov
jne
xchg
add
mov
repnz
rol
or
hlt
mov
push
bound
xor
test
test
xchg
bound
imul
vminps
and
lcall
cld
stc
repz
movsl
jo
stc
jbe
xchg
xor
out
loopne
xchg
jg
paddd
push
cld
stc
repz
movsb
jo
enter
adc
loope
lahf
aas
jg
dec
adc
push
call
repz
mov
xchg
mov
xchg
mov
xchg
inc
jle
dec
pop
sahf
nop
icebp
pop
jb
mov
add
aad
jle
sbb
mov
repz
loop
sub
jb
pop
mov
adc
aaa
outsl
fidivrs
lea
add
leave
xchg
enter
sbb
jg
mov
sub
pop
mov
jmp
sub
sahf
ljmp
mov
loope
fs
and
out
jle
mov
fnsave
pop
scas
mov
aaa
outsl
fidivrs
sbb
das
mov
shl
int
add
ds
add
mov
mov
xor
sbb
dec
aaa
xchg
imul
jmp
dec
push
outsb
outsb
jp
jp
repnz
notl
out
outsl
in
test
and
insb
add
cmpsl
negb
lods
add
mov
out
loopne
out
push
xchg
xchg
jp
fmull
push
mov
stc
inc
mov
cli
mov
sub
movsb
pop
lret
lahf
aas
jg
outsl
mov
dec
fistpll
movsl
lds
stc
repz
arpl
and
jae
out
cs
sahf
pmaxub
lahf
aas
pop
stc
loopne
nop
mov
lea
push
stc
repz
or
dec
xor
cmp
jg
cld
in
shr
mov
js
inc
push
les
jl
leave
out
lahf
cmp
dec
pop
xchg
jae
or
iret
jns
es
test
mov
jne
jne
mov
outsl
fidivrs
push
cmc
mov
xor
repz
ficoml
xor
inc
mov
fidivrs
dec
mov
xchg
jp
lds
jmp
loopne
outsb
push
mov
sub
sub
sbb
dec
push
cwtl
scas
dec
aaa
outsl
fiadds
adc
jle
icebp
in
sbb
int
int
jo
insl
sbb
push
push
or
orl
imul
scas
mov
aad
aaa
outsl
fisubs
rclb
cmc
cmp
pusha
jl
ret
and
mov
fdivr
sbb
pop
aas
adc
sahf
add
and
int3
sti
lcall
pushf
lods
das
mull
scas
sbb
int
aaa
dec
ret
sub
arpl
out
jns
out
es
mov
ret
jl
int
fbld
fsubp
inc
xorb
shlb
inc
mov
jno
repz
lret
js
fsubs
mov
cli
rclb
fidivrs
stos
jbe
cmpsb
repz
out
fwait
insb
outsl
xor
int
ror
outsl
fidivrs
xor
jne
inc
pop
in
and
int
aaa
movb
mov
adc
sbb
jns
sbb
jne
cmp
mov
inc
inc
int
aaa
outsl
push
out
stc
cmp
repz
stos
sbb
mov
nopl
inc
outsb
ficoms
mov
adc
out
pop
out
mov
mov
sbb
jg,pt
cld
stc
jns
mov
add
xor
cmp
dec
jb
ret
out
out
lahf
aas
es
addr16
movsl
ret
popf
or
ds
stc
repz
sti
jle
push
mov
hlt
sbb
xlat
mov
cmpsl
add
je
cmp
aaa
les
aaa
cltd
in
push
mov
jae
rclb
fwait
aas
push
out
sbb
in
xlat
dec
mov
jno
scas
int
aaa
outsl
and
add
pop
push
xor
ret
in
sahf
mov
mov
repz
pop
cmp
sbb
mov
mov
xor
push
stc
repz
loopne,pt
pop
movsl
mov
stc
push
movsb
call
cld
sub
jno
add
decb
out
add
out
lahf
inc
pop
jl
mov
or
jo
aas
stc
cld
stc
sti
jbe
mov
in
or
cmp
stc
add
add
sahf
sub
dec
mov
mov
aas
jg
idivl
inc
testl
stc
repz
sbb
scas
clc
stos
faddl
lea
imull
das
mov
jae
repz
xchg
jne
or
jno
cmp
loope
stc
shl
cld
mov
lods
std
bound
xchg
xorb
sub
adc
mov
nop
sbb
mov
adc
repz
fwait
in
enter
fs
negl
mov
jg
dec
sub
jbe
aaa
cltd
add
fwait
aaa
scas
call
mov
or
clc
enter
data16
jmp
out
add
lcall
mov
xor
xor
adc
stos
push
sub
fsubl
iret
push
jg
aam
xchg
dec
and
mov
in
xchg
mov
cwtl
js
les
jns
jns
xor
pop
xchg
mov
out
lds
outsl
dec
adc
dec
pushf
fbld
repz
pop
jle
sub
mov
movsl
and
mov
fidivrs
stos
leave
in
lods
ljmp
int
gs
movsb
aad
mov
fidivrs
flds
dec
outsl
jg
pop
iret
xchg
cld
addl
or
popa
pop
adc
out
out
lahf
aas
jg
mov
xchg
xchg
dec
adc
scas
and
inc
repz
insb
mov
mov
clc
int3
scas
dec
dec
inc
repnz
cld
xor
xor
into
dec
mov
mov
jg
cmp
jmp
pop
push
fcoml
xchg
push
rcrl
inc
fidivrs
lock
mov
fwait
aaa
outsl
fimuls
adc
sub
inc
ljmp
loopne
dec
inc
pop
fildl
and
push
ret
jns
out
js
inc
sbb
test
and
cmp
mov
or
out
push
inc
in
xchg
lcall
push
jmp
ret
lea
jns
cmpsb
outsl
xchg
test
js
ss
lods
jb
pop
ds
outsl
fidivrs
xor
mov
push
cs
pop
fs
push
mov
fs
aas
repz
xchg
insb
fidivrs
out
xor
mov
orl
shll
lahf
aas
jg
cmp
je
cmp
push
cld
stc
repz
mov
lret
xor
pop
mov
daa
aas
jg
leave
push
in
and
inc
dec
ret
mov
fst
testl
jo
fldt
mov
jb
aam
in
pop
mov
popf
and
fwait
aaa
insl
sbb
and
imul
outsl
fidivrs
lods
xchg
in
es
cmpsl
movsl
out
fwait
aaa
clc
or
jno
pop
mov
xor
repz
add
and
sub
ja
pop
add
addb
aaa
cwtl
xlat
orl
push
es
cmpsb
out
fwait
aaa
push
cmc
rorb
fidivrs
in
push
xchg
push
xchg
xor
mov
loopne
fwait
aaa
outsl
test
add
or
jns
out
mull
rep
out
and
mov
dec
dec
xor
gs
xor
inc
inc
cld
stc
rep
push
mov
adc
aam
lea
cmp
sti
pop
xchg
outsb
shll
repz
loop
pop
inc
lock
pop
pop
jbe
pop
aaa
outsl
fidivrs
sbb
mov
sti
cmp
int
push
out
xor
daa
mov
lods
xchg
aas
jg
aaa
cmpsb
into
sti
pop
push
fcmovnu
sbb
cld
stc
jg
aas
jle
fs
xor
cmc
push
push
ljmp
fwait
sub
add
fnstsw
jns
push
push
addr16
mov
pop
outsb
aaa
outsl
fidivrs
arpl
ret
pop
imul
inc
ss
xor
lcall
outsl
fidivrs
jp
xor
lret
leave
out
ja
xchg
add
adc
fidivrs
inc
xchg
adc
push
cli
jne
stos
movsl
nop
aaa
push
int
aaa
outsl
aad
rol
gs
lods
pop
mov
repnz
loop
jmp
aaa
out
or
xlat
das
in
push
xor
xchg
fwait
repz
and
xor
inc
or
cmp
out
fwait
ja
std
dec
xchg
cmp
pop
fdiv
adc
mov
enter
outsl
fidivs
inc
arpl
cmc
mov
adcl
into
fcoms
out
subb
hlt
insb
mov
mov
inc
aaa
outsl
fidivrs
or
sahf
pushf
dec
xchg
js
enter
test
cmpsb
push
inc
shlb
cmp
scas
mov
lea
mov
sub
pop
lahf
int3
out
and
inc
push
out
fwait
aaa
leave
mov
mov
push
aam
pop
fidivrs
pop
dec
test
imul
pop
jmp
sub
pop
xchg
inc
sbb
xchg
dec
jns
jne
pop
fisubrs
and
sub
and
fidivrs
les
cmp
incl
fwait
pop
jnp
sub
js
sub
push
push
pop
popa
mov
in
push
add
push
xchg
aaa
outsl
adc
into
dec
add
int
aaa
pop
fcoml
jae
push
fldcw
mov
mov
scas
mov
scas
ret
out
fwait
aaa
sub
repnz
test
pop
aad
mov
push
dec
inc
test
or
mov
fwait
aaa
outsl
in
push
lea
inc
push
add
pusha
cmp
repz
in
out
inc
push
and
out
lahf
jg
cli
ret
sbb
add
outsl
repnz
stc
repz
in
dec
mov
repnz
scas
jbe
push
repz
shll
cmp
das
pop
and
fidivrs
mov
loopne
shlb
mov
loopne
fwait
aaa
push
int
inc
and
scas
dec
stos
bound
xlat
mov
pop
out
inc
ficoms
addr16
mov
stc
repz
cmpsb
call
jmp
call
sbb
lahf
aas
jg
dec
lret
xchg
negb
cli
into
stc
mov
repz
mov
sub
jae
in
mov
jg
jb
inc
dec
dec
cmc
faddl
aaa
out
or
in
mov
ds
fwait
sbb
fs
movsl
lret
xor
outsl
fidivrs
push
test
stos
mov
stc
ret
inc
ss
in
ret
pop
aas
jo
aas
pop
inc
jle
cld
enter
out
xlat
xor
stos
hlt
mov
out
lahf
push
mov
imul
stc
repz
bound
lahf
addr16
jne
or
dec
jo
xchg
lahf
aas
jg
mov
add
ljmp
daa
out
es
fidivrs
xor
das
sbb
mov
out
fwait
add
aad
mov
lock
movsl
outsl
fidivrs
lock
and
lea
mov
out
fwait
aaa
fistl
shll
addb
aas
ss
mov
ja
cmp
dec
mov
rolb
aaa
outsl
mov
adc
push
and
or
out
fisttps
rolb
fnstcw
and
stos
mov
fxam
push
loop
push
int
aaa
out
mov
inc
adc
mov
je
push
clc
enter
aad
jae
les
fidivrs
dec
pop
lock
mov
mov
mov
int
aaa
outsl
loopne
push
cmc
jmp
in
icebp
out
mov
jns
out
mov
mov
cmc
mov
ficoms
adc
xor
mov
mov
repz
xchg
sbb
hlt
mov
mov
testl
and
fwait
mov
outsl
fisubrs
sbb
mov
fsubs
mov
xchg
pop
push
push
bound
test
negl
mov
jge
xor
mov
or
rolb
or
outsl
inc
shll
inc
adc
test
mov
mov
sub
dec
pop
mov
es
pop
lret
aas
aaa
outsl
fsubrp
daa
push
push
lret
outsb
int
xchg
int3
ficoml
mov
int3
xchg
mov
sub
lahf
sub
popa
cmpb
cmc
enter
xchg
inc
push
lock
fildll
mov
push
loop
xor
sahf
popa
sbb
fwait
aaa
movsl
adc
jle
jp
sarl
jns
mov
fisubl
push
test
xchg
outsl
jno
push
ds
pushf
pop
push
jl
jns
out
mov
lea
adc
movb
outsl
fdivp
dec
aam
dec
and
push
repz
lcall
mov
arpl
aaa
outsl
fidivrs
setns
mov
jno
int
std
test
data16
jae
aas
jg
inc
into
in
push
adc
leave
ss
pop
int
stc
repz
fwait
outsb
ss
in
lods
inc
inc
pop
mov
adc
add
add
mov
fidivrs
sub
inc
mov
lret
mov
repz
fwait
cmp
inc
pop
jb
mov
arpl
fidivrs
sbb
or
lret
stos
roll
xchg
fwait
aaa
sti
nop
and
lock
dec
fwait
jle
or
aaa
popf
sub
mov
lcall
push
pusha
adcb
insb
incb
xchg
mov
jge
push
ljmp
aas
cld
stc
repz
jae
adc
ljmp
rcrb
aas
jg
mov
movsb
dec
mov
push
aas
nop
add
add
out
lahf
aas
pop
push
gs
sbb
imul
stc
repz
jg
mov
scas
fcomps
out
push
in
xchg
aas
jg
add
fbstp
jmp
adc
fdivrs
cmp
out
lret
aaa
lahf
pop
or
mov
add
in
fwait
aaa
outsl
and
jns
xor
or
int
shll
test
push
sbb
insl
aaa
outsl
fidivrs
cmpb
mov
int
sbb
mov
les
repnz
pop
lahf
jg
jb
cmp
pop
mov
push
out
iret
loopne
cmp
xchg
add
mov
mov
cld
hlt
jecxz
push
loope
sahf
pop
jo
pop
repz
call
dec
aas
xor
dec
pop
fnstcw
out
scas
rorb
arpl
ss
stc
repz
mov
pop
sahf
mov
ss
push
pop
and
adc
idivl
cld
stc
orb
je
inc
xchg
jecxz
mov
or
popf
push
mov
jecxz
jne
add
stc
repz
int
mov
lcall
mov
cmp
pop
mov
outsb
inc
push
leave
sbb
inc
dec
lcall
dec
pop
aaa
lret
jmp
mov
add
loope
pop
cmc
sbb
das
out
fwait
aaa
inc
rorl
mov
aas
lcall
ret
scas
cwtl
test
std
push
pop
push
fwait
aaa
inc
pop
mov
xchg
lahf
or
jb
in
int
dec
mov
int3
cltd
in
into
repz
mov
std
aad
dec
lea
mov
mov
leave
xchg
dec
inc
movsl
or
loop
fdiv
aaa
out
andb
icebp
dec
fs
and
xchg
push
mov
mov
dec
inc
int
in
sub
mov
jecxz
xor
lahf
repz
pop
jno
stos
push
cmpsl
adc
mov
inc
jg
cld
stc
mov
ljmp
add
sarl
in
ret
mov
sub
enter
ret
cwtl
shl
mov
bound
popf
aad
xchg
inc
fst
stc
repz
dec
outsb
hlt
push
popf
inc
lea
add
pop
mov
aas
jg
cld
add
mov
sahf
inc
jne
stos
inc
pop
cltd
stc
push
test
inc
mov
mov
aas
jg
cld
popa
pop
push
sub
pop
lock
add
mov
mov
shll
dec
inc
arpl
out
cs
test
pop
gs
mov
popa
dec
lret
loop
into
stos
daa
aaa
outsl
pop
add
fwait
add
push
imul
arpl
repz
daa
dec
mov
adc
testb
out
mov
lret
lock
mov
clc
subb
push
pop
icebp
cmp
fsubrs
mov
divl
pop
jno
cmpsl
repz
sbb
lods
fisttpll
jg
ja
push
insb
adc
outsl
fidivrs
int3
push
test
dec
push
out
fwait
aaa
xchg
xchg
jns
test
mov
jns
jle
dec
push
sbb
jne
xlat
or
aaa
outsl
insl
jp
imul
mov
cmp
mov
enter
push
pop
pushf
fwait
aaa
outsl
faddp
pushf
repnz
push
pop
mov
mov
int
pushf
inc
xchg
popa
cmpsb
mov
jns
into
shrl
lds
pop
push
sarb
or
fs
lahf
aas
mov
pop
mov
pop
inc
repnz
jbe
jbe,pt
ja
inc
je
inc
jle
cld
into
cmpsl
dec
sbb
cmp
fcmove
insb
mov
cmpsl
jl
mov
arpl
arpl
aam
or
jl
or
inc
aad
mov
jo
repnz
js
imul
cmp
mov
out
fwait
aaa
aaa
scas
out
rcr
and
sub
test
repz
or
sub
out
push
adc
ret
outsl
ss
cmc
shr
pop
adc
aaa
out
mov
inc
in
aam
sub
repz
fwait
pop
mov
inc
jmp
lods
outsl
fidivrs
mov
and
int3
push
enter
sbb
cmp
push
pop
push
cmpsl
push
sbb
popl
stos
jb
aaa
adc
jmp
xchg
mov
sbb
dec
arpl
sub
mov
jg
xchg
scas
in
sbb
aas
fcmovbe
add
jne
repz
lahf
cld
es
mov
add
decb
jg
cld
stc
pusha
push
xchg
out
and
cli
in
popf
cmpsb
test
out
lahf
aas
stos
cmpsl
into
cmp
je
xchg
cmpsb
ja
xchg
cld
stc
repz
xchg
push
mov
adcl
iret
lahf
aas
jg
fnstenv
sub
addr16
stc
repz
adc
adc
mov
xor
inc
jle
out
add
add
pop
sbb
jb
pop
cld
stc
repz
inc
dec
daa
push
sub
mov
xchg
mov
loop
jo
add
nop
xlat
add
iret
subl
jno
pop
neg
enter
cld
pop
aaa
cmp
jnp
push
sbb
iret
popa
jl
sbb
pop
mov
mov
cld
orl
cmp
insl
addr16
in
enter
inc
or
nop
shll
out
lahf
jg
jne
adc
adc
repz
daa
mov
mov
jne
test
fsubr
jns
out
mov
or
add
movsl
aaa
outsl
fidivrs
sub
dec
sbb
push
fwait
in
arpl
xchg
pop
cld
stc
repz
add
sti
and
cmp
sbb
insb
dec
in
out
add
cld
stc
pop
cltd
or
jl
out
aad
inc
ret
iret
lahf
aas
jg
les
mov
jp
add
stc
repz
dec
scas
dec
jle
test
mov
and
jg
loope
rcr
sbb
pop
mov
jecxz
repz
pop
cmpsb
push
sub
sarl
mov
cmp
jle
pop
xchg
dec
fwait
lret
mov
adc
mov
mov
add
jg
sbb
dec
into
je
adc
enter
dec
js
dec
rcrb
or
inc
mov
test
lea
outsl
fiadds
dec
fxch
stc
pop
mov
stc
repz
lahf
imul
mov
jg
cld
out
ficoms
add
jnp
xchg
orl
fisttpl
sbb
fucomi
iret
mov
xchg
or
xchg
aaa
adc
out
outsl
cmc
and
sub
xchg
dec
or
ds
ds
sbb
lods
das
iret
popf
mov
mov
das
outsb
mov
pop
cli
lock
mov
sub
int
aaa
outsl
pop
dec
or
aad
mov
out
popf
test
repz
push
pop
ja
pop
push
xchg
inc
insl
nop
stc
andl
imul
mov
mov
cmp
dec
test
mov
repz
jl
out
stos
sbb
in
lahf
pop
mov
pop
int
stc
repz
jl
insb
push
adc
xor
jle
and
xor
cmp
pop
bound
mov
lret
lret
and
stc
xor
and
loop
mov
pop
sbb
addr16
add
mov
xor
adcb
loop
cmp
test
xchg
in
push
xor
int
loop
mov
ds
xor
das
mov
mov
cmpsl
add
and
xchg
sub
cli
adc
daa
mov
movsl
sahf
mov
fldlg2
cmpsl
sub
cmp
jge
shrb
inc
mov
xchg
int
aaa
cld
xchg
adc
or
mov
pop
call
es
xor
outsl
fidivrs
dec
int
shr
outsl
cmp
enter
cltd
ret
xchg
mov
mov
or
imul
pop
add
nop
xchg
sbb
push
sarb
fistpll
cld
stc
mov
pop
jo,pn
sub
lock
test
lahf
aas
dec
push
xchg
dec
les
repnz
jle
push
mov
movsb
data16
jg
adc
aas
sarl
xchg
loope
jge
cld
jmp
lahf
xchg
pop
loop
addl
jae
push
repnz
push
sbb
pusha
ja
int
push
int
aaa
out
out
add
leave
ret
dec
call
mov
sbb
out
pop
mov
jb
imul
adc
inc
fcoms
dec
out
fwait
aaa
ja
inc
sub
subb
xchg
lds
mov
stc
fbld
int
xchg
inc
jno
inc
outsl
ficoms
cmp
outsl
call
repz
ret
stc
addl
inc
stos
in
dec
lret
add
inc
push
das
je
cmp
clc
pop
dec
out
lcall
xchg
bound
and
jg
bndstx
mov
nop
outsl
fiadds
mov
mov
push
dec
mov
data16
mov
adc
dec
pop
mov
jns
outsb
scas
dec
mov
mov
lock
in
shlb
aaa
outsl
lcall
and
repz
dec
bound
pusha
dec
cmp
cmp
inc
outsb
fidivrs
mov
repz
aad
popf
out
sbb
push
jp
push
xchg
add
and
pop
les
movsbl
out
add
jns
xchg
sbb
lds
hlt
movl
stos
loopne
repnz
jns
in
jecxz
lret
push
stos
or
jecxz
lds
aaa
outsl
pop
ret
cmc
and
xchg
inc
mov
and
test
push
popa
stc
repz
jne
ja
adc
aas
scas
adc
cld
popf
mov
ja
int
scas
rolb
iret
lahf
test
inc
test
in
int3
or
ja
cld
in
ficompl
and
into
repz
fwait
jbe
sbb
loop
rorl
xchg
outsl
and
ds
xchg
ljmp
int
aaa
or
cwtl
orl
test
push
jns
xchg
arpl
enter
mov
stos
cmc
hlt
xchg
clc
in
pop
mov
jl
inc
call
fidivrs
fdivp
sti
mov
int
aaa
cmpsl
aas
xor
lock
mov
bound
cmp
mov
jle
fdivs
icebp
cmc
jmp
mov
jbe
addr16
rcrl
test
cmpsl
enter
pop
xor
cmpsl
lret
mov
and
and
fyl2xp1
push
cs
sub
or
aas
jg
inc
scas
or
cmpsb
shrb
stc
repz
jge
insb
or
subl
xchg
sbbb
jno
cmp
imul
dec
push
into
pop
cmpsl
or
mov
daa
cmp
lahf
aas
cmp
aad
dec
sbb
mov
loop
repz
pop
loope
or
inc
out
adc
mov
cld
fwait
jno
adc
and
leave
ss
repz
daa
mov
xchg
int
dec
cld
jae
adc
negb
aaa
outsl
fimuls
inc
popf
lret
jmp
testl
out
dec
popf
dec
and
or
mov
mov
outsl
fdivrp
mov
and
mov
out
fwait
aaa
pop
mov
inc
pop
call
into
dec
fidivrs
lods
arpl
xor
jns
stos
xor
int
aaa
outsl
bound
test
jmp
mov
les
repnz
add
repnz
cmp
mov
rcr
movsl
jg
mov
frstor
into
mov
ja
pop
dec
lea
xlat
inc
daa
xor
insb
cli
enter
push
mov
xor
dec
pop
insb
fidivrs
sbb
loope
mov
int
mov
xchg
ja
stos
pushf
in
jns
fs
cmp
add
add
pop
outsl
or
sahf
add
cld
cld
stc
repz
test
mov
pop
ret
mov
add
inc
jo
stos
inc
inc
mov
cltd
outsl
iret
lahf
push
stc
pop
jmp
rolb
icebp
sub
stc
repz
loop
jnp
sub
mov
mov
lahf
lds
lahf
aas
jg
pop
pop
test
stos
sahf
pop
lahf
push
jne
push
stc
repz
inc
xchg
dec
fcomip
add
in
cmp
cld
xor
cmp
cli
mov
inc
in
or
stc
stc
repz
push
pop
add
dec
cmpsl
xorb
mov
mov
jbe
inc
sub
fcomip
clc
xor
mov
rep
lahf
aas
jg
push
outsb
add
push
into
push
hlt
shrl
iret
lds
push
pop
sub
adc
inc
cld
pop
mov
fdivrs
cld
jecxz
mov
out
push
das
sbb
jg
aas
pop
imul
pusha
xor
push
out
add
test
pop
fidivrs
adc
sub
or
int3
and
outsl
and
iret
lds
xchg
push
cld
cld
stos
es
scas
push
mov
out
xlat
jle
or
leave
inc
mul
iret
aas
cmp
int3
adc
outsl
cld
stc
repz
sub
and
xor
iret
lahf
aas
jg
movsl
push
cmp
sbb
xchg
inc
push
or
mov
stc
repz
dec
lods
loope
adcl
sahf
pop
fidivrs
jns
dec
mov
lods
nop
les
mov
stos
in
aad
fidivrs
movsb
pop
inc
int3
sbb
lcall
jae
xchg
cmp
jb
mov
push
js
mov
push
add
pop
rorb
jle
add
outsl
fmulp
mov
mov
fwait
ja
cwtl
xor
or
xor
cmp
stc
fdivrl
cli
imul
xchg
sti
stos
jecxz
mov
or
jecxz
adc
repnz
inc
fnstenv
out
mov
inc
ret
out
ds
aaa
outsl
fidivrs
lcall
adc
daa
movsl
daa
jge
inc
pop
int
jns
out
mov
sub
shll
aas
stos
std
orb
push
add
es
jl
out
mov
xchg
cmp
bound
iret
lahf
js
test
pop
into
mov
mul
mov
pop
lret
repz
sti
xchg
mov
xchg
addr16
add
cld
stc
repz
push
jmp
call
cltd
ficoms
iret
lahf
jg
xor
xlat
incl
lods
add
out
pop
loopne
mov
sahf
fstps
stc
repz
push
into
mov
flds
push
cmp
add
adc
filds
push
mov
pop
cmp
aas
lcall
xchg
pop
push
sbb
xchg
dec
daa
pushf
mov
jg
lahf
cmp
ja
outsl
mov
inc
ja
and
pop
outsl
sub
int
aaa
xchg
mov
jecxz
mov
mov
hlt
dec
shrl
ja
ficoms
shrl
lock
lret
xchg
sub
cmc
or
aaa
inc
das
jne
int
jg
xchg
lahf
aas
jg
scas
iret
movsl
push
cmpsb
jecxz
mov
inc
mov
repz
loopne
push
out
pop
xchg
and
jmp
xor
sbb
pop
lea
loopne
idiv
stc
repz
inc
sbb
pop
mov
push
repz
jg
or
dec
out
dec
cmp
jnp
aaa
add
push
push
push
repz
cmp
dec
std
inc
mov
test
mov
outsl
fidivrs
inc
lret
stos
shll
repz
fwait
out
fbstp
xchg
fsubl
fidivrs
ljmp
sbb
inc
sub
call
lahf
fisttps
nop
mov
mov
xor
fistpl
adcb
scas
dec
fsubrs
clc
aas
stos
jno
jle
stc
sub
cltd
insb
stc
add
cld
stc
rep
fwait
ljmp
rcr
pop
movsb
dec
outsl
xchg
lahf
aas
jg
push
pop
call
inc
iret
add
shrl
jbe
jae
aaa
mov
push
pop
icebp
jbe
lahf
aas
jg
mov
pop
pop
repnz
or
cli
leave
out
js
in
sub
jg
jns
je
mov
jne
adc
repz
out
sub
jg
cld
in
or
sub
outsb
jb
out
lahf
cmp
mov
cmp
mov
rorb
aam
lahf
cld
cld
stc
cld
or
mov
insl
pushl
pop
aaa
outsl
ficoms
xchg
sahf
mov
mov
fwait
das
in
int
fiaddl
out
fisubrl
stc
out
pop
jp
ljmp
mov
xor
cld
stc
repz
xor
or
call
pop
sahf
aas
jg
mov
fbstp
lods
and
jbe
jns
xlat
inc
mov
mov
adc
cli
fwait
aaa
outsl
fimuls
push
xor
fldl
jno
or
out
xchg
push
out
inc
insl
cmpsl
es
imul
clc
push
outsl
mov
mov
dec
cld
aaa
call
and
iret
xchg
xchg
and
int
je
add
xchg
in
mov
inc
inc
jno
pushf
sbb
mov
fstl
rorb
movsl
inc
sbb
or
stc
mov
cmpsl
dec
je
inc
adc
fcompl
aas
mov
xchg
sub
add
out
call
mov
dec
dec
aaa
outsl
fidivrs
push
aad
stos
mull
add
lods
repz
fwait
sbb
xchg
jp
outsb
loope
movsb
das
lret
cmp
xchg
push
cld
pop
and
aaa
outsl
add
pop
jns
call
shrb
repnz
lahf
push
sub
arpl
mov
xlat
insl
outsb
aas
jg
cld
pop
fwait
loopne
clc
subl
arpl
dec
dec
inc
jmp
leave
cltd
cmpsl
add
mov
inc
addr16
jmp
in
int3
mov
push
push
cmp
stc
ret
mov
xchg
cmp
iret
aas
pushl
addl
cmpsl
cld
nop
jg
cld
stc
fs
stc
push
nop
push
lods
cmp
insl
cli
sbb
add
iret
lahf
aas
mov
movsl
mov
leave
adc
in
cld
stc
repz
mov
shl
testb
pop
sbb
iret
lahf
aas
jg
test
mov
das
rcrl
sar
stc
repz
sahf
shl
aad
pop
into
mov
loope
sbbl
aas
jg
push
in
pop
push
aaa
xchg
repnz
pop
adc
stc
repz
adc
cmp
int3
jae
int
jg
cld
cmp
cltd
leave
mov
inc
test
lods
mov
cli
nop
and
xlat
mov
aas
jg
ja
push
mov
mov
inc
fidivrs
clc
xor
out
mov
dec
inc
mov
jg
xor
or
xchg
inc
testl
and
xlat
repnz
sub
mov
test
mov
inc
ja
mov
mov
stos
jmp
enter
loope
adc
mov
out
lahf
aas
mov
sarl
pop
cld
stc
repz
and
movsb
or
iret
lahf
aas
jg
mov
mov
xor
inc
rcr
adc
dec
mov
cmp
mov
and
mov
stc
repz
adc
sahf
rcll
loope
dec
adc
loopne
fdiv
mov
mov
add
fimull
lcall
jo
jmp
repz
push
mov
inc
mov
mov
cmp
adc
loopne
lahf
aas
xchg
adc
mov
pop
mov
clc
enter
push
or
sbb
scas
out
mov
imul
mov
sub
das
jle
cmp
pop
inc
in
dec
pop
fisubs
xlat
jecxz
fidivrs
jge
sub
push
enter
dec
les
jo
test
add
pop
inc
mov
mov
mov
lock
int3
repnz
fmull
jl
stos
xchg
sub
jnp
cld
stc
repz
stos
mov
jle
pop
sbb
mov
jg
addl
fcomp
out
fwait
aaa
sbb
adc
pop
in
add
adc
repz
cmc
mov
leave
subb
sbb
jns
jo
push
int
imul
out
jmp
mov
adc
stc
repz
and
rcl
call
inc
out
or
jg
cld
fdivs
roll
mov
adc
repz
lahf
mov
sub
push
pop
cld
rcrb
stc
jnp
jne
jge
aaa
subl
sarl
mov
stos
xchg
pop
adc
outsl
and
stc
repz
mov
and
mov
jb
clc
jg
ss
sbb
inc
pop
adc
jecxz
movsl
mov
mov
mov
int
leave
cmp
daa
adcl
mov
in
adc
dec
in
mov
aaa
outsl
fidivrs
scas
inc
sub
add
jns
les
sahf
cmp
mov
mov
cmp
enter
pop
and
cmpsl
adc
je
mov
ja
mov
aaa
adc
mov
jecxz
call
insb
into
call
cmp
xor
iret
lahf
aas
add
fists
dec
push
cld
pop
addr16
in
fwait
test
out
pop
jg
cld
loope
int
mov
xchg
fisubl
xor
test
lahf
aas
jnp
scas
sub
mov
mov
sub
dec
push
daa
outsl
fidivrs
dec
sahf
xchg
sahf
lds
fucom
jg
cld
stc
aaa
mov
imul
nop
pop
imul
std
das
icebp
movsb
jl
jno
lcall
fsubl
and
and
scas
and
jg
nop
stc
shll
repz
push
dec
fsts
xor
repnz
push
imul
stc
sti
imulb
lret
pop
push
mov
iret
lahf
aas
out
out
jne
push
push
mov
push
lret
repz
jns
push
bound
mov
sbb
pop
es
or
mov
inc
ret
mov
int3
dec
pop
xor
pop
stc
add
fnstenv
addr16
lods
pop
or
insb
mov
xlat
sub
mov
jns
out
adc
lahf
pop
xlat
lahf
pop
dec
loope
dec
cltd
fwait
aaa
outsl
fidivrs
insl
pop
mov
loopne
fdivs
pop
repnz
pop
inc
rol
rorl
push
test
inc
out
lahf
jg
mov
insl
sub
loope
mov
cld
stc
repz
xor
ss
and
sbbl
inc
imul
aas
jg
outsl
lcall
cmc
cmpsb
es
jmp
mov
jae
dec
xchg
mov
push
push
mov
and
repz
or
and
scas
data16
fidivrs
push
rcrl
repz
stos
popf
mov
imul
jns
and
mov
mov
add
pop
lret
and
pop
mov
xchg
add
cld
jmp
jae
ja
aas
movsl
leave
cmp
ja
xchg
cmp
in
shlb
sub
push
pop
lock
cld
cld
stc
repz
fnstenv
lods
jle
sub
add
fimuls
jecxz
jg
mov
xorb
push
mov
cld
stc
repz
sub
mov
nop
insl
jg
stc
cld
mov
les
mov
iret
lahf
repz
or
push
bound
jmp
push
cwtl
pushf
dec
test
dec
and
dec
ja
mov
xchg
sarl
push
cmp
loop
push
ret
clc
cmp
aaa
add
jb
mov
stos
out
mov
shlb
das
push
cmp
pop
and
xlat
mov
push
enter
call
insb
fidivrs
xor
sbb
lret
and
orb
out
arpl
mov
push
sbb
cld
stc
repz
ja
inc
mov
lock
lods
inc
jle
mov
xlat
jg
ficoms
outsl
push
test
mov
cwtl
xchg
push
or
fwait
aaa
sbbl
fcompl
hlt
sti
stos
jle
xchg
adc
lock
mov
ljmp
push
ret
mov
or
es
jb
jnp
pop
repz
ljmp
dec
lock
cli
pushf
outsl
fidivrs
cli
aaa
cmpl
mov
iret
inc
or
inc
push
out
cmpsl
out
fwait
aaa
addr16
loopne
jae
push
jmp
jne
mov
fldt
jno
mov
or
insl
les
lcall
or
push
mov
ja
cmp
lret
pop
fidivrs
lahf
cmp
mov
mov
jl
int
aaa
outsl
lcall
jno
dec
fldl2e
sbb
out
sub
mov
movsb
or
daa
lahf
aas
xlat
fbstp
sti
in
push
out
add
dec
aas
jg
cld
dec
sbb
mov
sahf
add
scas
inc
xlat
repz
lahf
cmpsl
int
mov
mov
jp
jg
cld
stc
shll
adc
push
cmp
adc
mov
or
iret
lahf
aas
ss
or
das
xor
sbb
cld
stc
repz
sahf
push
lods
clc
repz
jl
repz
ret
ficoms
mov
ss
jl
mov
int
aaa
outsl
lret
jecxz
push
pop
cmp
xchg
outsb
enter
mov
ret
aaa
hlt
and
pop
xchg
sbb
adc
sub
xchg
cwtl
jge
int
aaa
outsl
test
xchg
cwtl
cltd
dec
fiadds
sbb
fimull
arpl
push
xor
repz
aas
jno
test
xchg
jo
mov
sbb
js
dec
int
push
lahf
pop
fisttpl
out
lahf
int3
mov
pop
cmp
in
das
sub
hlt
or
cmpsl
pop
jle
adc
push
shl
iret
lahf
aas
and
and
cmp
stc
add
repz
adc
mov
ret
aaa
aas
jg
cld
push
popa
add
xchg
lea
aam
dec
stc
repz
inc
mov
repz
and
xor
add
stos
jbe
icebp
jg
int3
ret
fwait
aaa
aas
popl
mov
jle
xchg
push
out
xchg
pop
mov
sbb
fwait
push
mov
dec
push
adc
cmp
loopne
jmp
mov
mov
std
gs
out
or
inc
sahf
add
pusha
or
inc
dec
in
iret
lahf
jg
std
mov
adc
cmpsl
jbe
xchg
lret
andl
and
jg
cld
push
aaa
push
add
jp
repnz
enter
in
iret
lahf
or
je
pop
inc
loope
call
jg
inc
pop
aas
sbb
dec
pop
aaa
movsl
push
ja
xchg
push
repz
lahf
insl
jg
cwtl
mov
xor
clc
fucomi
push
stc
stc
xor
out
cltd
jg
or
mov
aas
jg
cld
lea
cmc
enter
sbb
repz
lahf
fimuls
pop
jp
sub
repz
cld
stc
mov
pop
arpl
and
adc
and
cs
loopne
push
and
aas
jg
pusha
pop
mov
inc
jb
xor
mov
ficoms
mov
push
cmpsl
jne
mov
jg
les
push
cltd
xchg
adc
divl
aaa
mov
aas
js
xchg
rol
fidivrs
pop
imul
in
out
in
int
aaa
outsl
cmp
sub
sbb
out
lock
or
test
imul
mov
xchg
mov
add
lods
sub
lret
mov
idivl
xor
xchg
xor
cld
stc
repz
sbb
shl
sub
mov
mov
aas
jg
and
adc
or
les
call
cmpsb
cld
stc
int3
pop
aaa
mov
repnz
mov
jnp
lahf
aas
jg
push
rorl
mov
nop
dec
iret
lahf
jg
lret
jb
dec
lahf
mov
adc
cld
stc
repz
out
cmpsb
xchg
aaa
ret
xor
pop
mov
jg
mov
mov
insb
aaa
jns
out
aaa
or
rcll
push
dec
les
movl
filds
mov
fadd
add
mov
xor
cmpsl
test
fsubr
out
mov
aaa
outsl
fdivp
outsl
cmpsl
jg
ret
jmp
orb
shlb
js
mov
mov
sahf
xchg
pushf
xchg
lahf
pushf
mov
fsubrl
push
xor
out
push
cmp
dec
or
fwait
aaa
cmc
scas
push
adc
leave
fs
pushw
dec
sbb
adc
aaa
pop
js
xchg
mov
jg
xchg
dec
push
inc
adcl
int
std
xchg
push
xor
jns
out
ja
cmp
hlt
rolb
iret
push
inc
fidivrs
pop
mov
test
fdivl
loop
push
std
push
stc
repz
leave
repz
xchg
inc
out
and
sti
fwait
aaa
outsl
fsubrp
push
sti
rorb
or
jno
int
in
dec
fstl
shrb
aaa
outsl
fimuls
pusha
push
ficompl
imul
out
dec
repz
pushf
dec
or
movsb
daa
mov
outsb
fidivrs
xchg
dec
iret
pop
sti
out
add
fwait
aaa
outsl
test
cmp
adc
push
adc
mov
jns
cmpb
mov
sahf
jl
sub
ret
or
inc
rorb
jl
aaa
in
fwait
aaa
outsl
fsubrp
test
lds
aaa
xchg
cmpsb
push
push
jns
out
cmp
dec
cltd
inc
mov
fidivrs
inc
mov
or
mov
bswap
fwait
jbe
loope
mov
cwtl
jae
mov
fmuls
xor
rcll
fwait
add
outsb
fidivs
loope
fdivrl
sbb
loope
mov
add
fwait
loopne
pushf
in
jns
ja
ja
insl
out
push
stos
jo
mov
rolb
sbb
stos
sahf
arpl
pop
mov
sub
pop
add
repz
xor
xor
inc
test
idivl
sti
mov
pop
lahf
aas
jg
adcl
lods
jg
mov
andb
out
jg
sahf
roll
inc
add
outsl
jns
cld
mov
cmp
movsb
and
scas
cld
stc
repz
fsubrp
rcll
incl
push
popa
mov
jg
mov
push
gs
mov
stc
repz
mov
imul
mov
sub
adc
in
int
and
xchg
push
mov
repz
adc
int3
xchg
lcall
js
cmpb
jns
movsl
loop
lea
stc
repz
push
test
sbb
pop
hlt
mov
cld
popf
dec
pop
jo
sub
fwait
andb
aas
inc
adc
or
repz
push
adcl
or
cli
aaa
outsl
fidivrs
out
sbb
jg
test
int
in
subb
push
inc
imul
imul
mov
loop
inc
outsb
fisubrs
movsb
dec
pushf
out
pop
or
xchg
fwait
xchg
or
jl
mov
sub
sar
enter
shlb
mov
fbstp
aaa
push
lock
paddusw
mov
iret
lahf
aas
popf
sbbl
enter
xlat
loopne
push
add
loopne
mov
pop
pop
stc
imul
cld
sti
enter
sub
je
mov
fmull
int
lahf
aas
jg
daa
jg
in
xorl
scas
jle
inc
fadds
dec
or
aam
or
jg
lods
daa
sti
jo
mov
add
dec
ror
mov
insb
and
xchg
movsb
jns
mov
mov
push
cmpl
std
inc
cltd
test
aaa
scas
xchg
bswap
cmpsb
fldt
inc
and
pop
iret
or
cs
sub
push
mov
outsl
fidivrs
mov
sub
add
lock
fwait
mov
xor
je
je
pusha
daa
push
call
sbb
mov
outsb
pop
sub
hlt
iret
cmp
mov
std
adc
mov
call
shlb
xchg
adc
fwait
aaa
outsl
jnp
mov
pop
inc
sub
fcomp
mov
out
jge
xlat
pop
and
test
sub
outsb
jecxz
stos
push
lods
pop
cmp
in
out
mov
and
int
pushf
xor
aas
xchg
outsb
adc
add
imul
stos
pop
stos
or
fiadds
idiv
insl
pop
insb
mov
lahf
jg
adc
dec
adc
xor
add
call
iret
jecxz
or
lret
shll
fidivrs
mov
mov
out
xlat
jle
fwait
aaa
outsl
jno
dec
pop
xchg
inc
loop
test
outsb
popa
int
ja
loop
in
aas
or
mov
sbb
dec
mov
movsl
scas
lcall
sub
aam
push
fwait
aaa
outsl
fisubrs
mov
xlat
fimull
rcll
outsl
jnp
cmp
enter
inc
negl
enter
inc
cs
lahf
aas
jg
stc
test
subb
js
stc
repz
and
orl
push
mov
imul
adc
repz
into
xor
data16
cmpsl
dec
mov
cmp
mov
or
pusha
sbb
stos
mov
adcb
aas
lcall
bound
sbb
dec
add
cld
stc
repz
cmp
xchg
push
les
jno
in
push
push
fnsave
dec
movsl
enter
xor
popa
mov
cld
stc
xrelease
pop
outsb
mov
xchg
pop
dec
int3
mov
dec
or
aas
jg
jecxz
test
mov
mov
hlt
sar
repz
jmp
xor
and
leave
pusha
mov
add
lds
or
mov
jp
outsl
fiadds
movsl
mov
sahf
xchg
jmp
push
out
fwait
aaa
sti
xor
imul
outsb
pop
outsb
cmpsb
std
cmpsb
xor
stc
repz
mov
pop
push
xor
mov
mov
mov
ja
adc
popf
notl
sub
pop
xchg
out
shlb
fucom
stos
ds
dec
mov
out
out
stc
ret
sahf
dec
mov
mov
stc
sub
push
dec
lahf
aas
jg
fisttps
in
inc
in
test
outsl
lahf
nop
pop
in
iret
inc
push
jnp
ficompl
and
cmpb
stc
cld
mov
std
jecxz
mov
mov
push
imul
sbb
sbb
cmc
fldz
insl
inc
lds
jge
push
adc
jb
out
lahf
popf
ficompl
fwait
sbb
dec
cld
stc
xor
pslld
add
dec
inc
cld
stc
adc
push
xorl
test
pop
decl
xchg
mov
cmpsl
daa
sub
xchg
aaa
xchg
jg
jno
aaa
xchg
dec
das
xor
iret
lahf
jae
rorl
rcll
rclb
push
xlat
dec
sbb
in
dec
fidivl
fs
mov
imul
pop
sbb
orl
bnd
inc
out
subb
lahf
aas
jg
ja
leave
movsb
lret
inc
xchg
inc
lret
mov
iret
mov
mov
in
jns
out
fistpll
out
lods
cwtl
repnz
jle
fdivrl
fidivs
and
ficoms
rorb
push
es
lahf
nop
jns
out
xlat
push
inc
cmp
arpl
xor
fidivrs
test
xchg
push
js
adcb
jno,pt
sbb
fwait
aaa
jle
sbbb
imul
push
imulb
push
pushf
popa
xchg
sahf
inc
in
lahf
cmpsl
mov
mov
mov
xchg
jns
out
xchg
aam
lahf
aas
jg
in
fcoms
mov
mov
loopne
sbb
repz
nop
movsb
push
adcb
sub
or
outsb
jns
stos
adc
pushl
cmp
repz
adc
adc
insb
addl
push
xchg
pop
mov
lahf
aas
jmp
dec
andl
add
adc
enter
pusha
icebp
xchg
int
mov
flds
cmp
mull
adc
sbb
mov
jg
mov
adc
and
out
ja
fbld
jp
lret
ja
dec
jg
in
pop
cs
fdivl
pop
call
iret
lahf
aas
iret
and
mov
mov
stc
repz
fsub
cmp
push
int
mov
ds
lahf
aas
jg
dec
and
xchg
jl
sub
call
hlt
in
cltd
or
shl
jmp
aaa
outsl
mov
outsl
in
jo
cmp
push
ret
mov
inc
out
mov
pop
addl
aaa
outsl
fimuls
stos
cmp
loope
xchg
fcomps
aad
xor
repz
ds
ds
into
mov
aas
fwait
inc
lods
pushf
xchg
push
mov
lds
push
and
loopne
sub
mov
mov
out
pop
jbe
lahf
loop
jle
testb
jo
pusha
out
mov
repz
pop
out
std
pop
clc
sub
jecxz
sub
jmp
cld
sub
fildl
movsb
icebp
mov
adc
or
inc
ror
mov
mov
leave
and
and
into
mov
outsl
dec
mov
pop
add
jns
out
add
mov
cld
pop
sub
in
fldln2
mov
outsl
fidivrs
mov
ss
movsb
into
icebp
xchg
int
ljmp
out
lea
inc
aaa
jle
push
fcmovnbe
xchg
sbbl
push
daa
outsl
mov
jb
repnz
pop
test
out
enter
mov
inc
sbb
bswap
xchg
or
jg
cld
stc
xor
verw
scas
mov
xchg
cmp
inc
xlat
test
aas
rclb
mov
inc
push
enter
aaa
push
daa
das
inc
add
enter
dec
and
xchg
cli
jns
lahf
aas
jg
addr16
mov
mov
adc
out
stc
repz
xchg
popf
nop
or
nop
lahf
movaps
mov
popf
jmp
aaa
out
sub
inc
fwait
dec
jl
ljmp
in
push
or
push
inc
xchg
fiaddl
out
fwait
ja
scas
call
rclb
pop
push
fidivrs
cmp
jae
or
outsl
pop
orb
push
dec
shrb
outsl
fidivrs
addr16
push
or
pop
mov
pop
repnz
inc
jp
xor
sbb
out
int
cmp
imul
ret
sbb
out
dec
jp
mov
das
scas
inc
popf
xor
mov
mov
lret
outsl
ficoms
lcall
fwait
xor
int
aaa
clc
ficomps
mov
and
or
jecxz
imul
jmp
adc
sbb
aaa
aas
jg
cld
repnz
aas
aad
push
adc
ljmp
ja
movsl
and
jae
ja
jo
repz
fwait
stos
shl
mov
out
orb
fidivrs
fistpl
inc
mov
inc
out
inc
ss
int
rclb
sub
arpl
lds
call
scas
insl
cmp
inc
inc
jle
scas
inc
outsb
lock
jns
movq
lret
mov
jmp
jg
test
jp
jo
in
enter
inc
outsl
mov
call
dec
cmpsl
pop
cs
and
enter
jns
xchg
scas
xchg
movsl
dec
inc
jno
dec
js
bound
or
mov
or
or
or
outsl
fidivrs
outsl
lret
cmp
add
mov
int
loopne
mov
daa
pusha
das
jp
add
mov
negb
push
cmp
fstps
add
mov
gs
pushf
stos
lcall
out
add
mov
aaa
add
mov
call
repz
fwait
into
sti
pop
imul
sahf
scas
mov
enter
mov
test
lar
add
enter
gs
pushf
inc
xchg
inc
repz
aas
stc
cld
mov
bound
ffreep
lds
daa
and
sbb
pop
inc
aaa
in
xor
xchg
aas
clc
xchg
mov
movsl
xchg
movsl
dec
lock
popa
enter
cmp
mov
leave
pop
push
xchg
out
inc
adc
add
ds
movsb
jecxz
pushf
fdivrl
mov
ljmp
fwait
aaa
outsl
incb
dec
jmp
mov
stc
cmpsl
mov
xor
test
mov
add
xchg
mov
xchg
loope
out
cmp
test
sbb
dec
xchg
dec
lret
cmp
in
jo
mov
out
xor
xor
lods
fwait
aaa
out
add
insl
cmpb
movsb
leave
mov
mov
add
stc
repz
xchg
call
xchg
mov
scas
inc
xor
jg
loopne
jne
sarb
aaa
jmp
mov
adc
inc
jle
push
aas
mov
ret
xlat
cwtl
push
mov
aas
jg
mov
pop
mov
inc
mov
inc
and
sub
and
aas
jg
cld
ret
scas
jmp
insb
sbb
aaa
add
out
subb
and
cwtl
or
or
ss
aaa
test
cmp
jge
aas
jg
cld
cmp
mov
aam
icebp
fiadds
daa
outsb
arpl
xchg
cmp
sbb
gs
repz
stos
aas
jg
cld
testl
and
sbb
leave
out
lahf
add
jnp
mov
add
mov
test
test
add
mov
add
dec
adc
nop
mov
or
cmp
pop
push
lds
add
aam
mov
push
ljmp
push
adc
or
into
add
jp
negb
or
pop
stos
or
pushf
sub
je
xor
adc
pop
ficoml
adc
cmp
andb
addb
mov
push
call
pop
add
push
out
pop
jae
cmc
add
add
aas
shll
sbb
repnz
ret
inc
mov
data16
mov
add
pop
sub
pusha
jae
adc
ds
add
add
push
stos
js
rol
loop
mov
sbb
dec
and
rcll
sbb
sbb
adc
stos
jb
mov
sbb
lock
sbb
fiaddl
addb
mov
shlb
or
add
inc
clc
push
aad
push
push
mov
inc
adc
shlb
mov
mov
add
push
push
scas
test
xor
and
push
add
mov
push
push
test
adc
jge
mov
imul
lcall
lods
xorb
and
push
repnz
stos
adc
add
pop
mov
pop
and
inc
adc
or
mov
pop
add
mov
add
push
jo
inc
and
push
push
xor
pop
fsubrs
push
cvtpi2ps
pop
dec
sarb
xlat
movsl
or
jne
sbb
inc
adc
or
icebp
push
xor
inc
push
loopne
inc
adc
adc
xchg
jmp
inc
ret
lods
roll
fcoms
inc
cmp
inc
cli
fidivrl
and
sbb
sbb
mov
imul
jns
fs
xorb
cmc
dec
add
adc
leave
dec
sbb
cli
push
add
add
cmp
add
dec
lock
fiaddl
sub
rolb
lods
mov
ret
add
add
out
mov
mov
sbb
jns
push
xchg
loope
popf
lods
adc
addr16
push
test
fwait
dec
cmp
jecxz
mov
outsb
pop
inc
rolb
insb
fs
and
push
inc
adc
sbb
sub
negb
inc
hlt
test
xorb
insl
mov
adc
mov
cmp
ret
jne
or
or
notb
test
scas
mov
outsb
or
call
lods
mov
add
ret
stc
cmc
mov
and
jge
andl
or
es
sub
lock
mov
pop
shll
sbb
mov
addb
sbb
outsb
jnp
fildl
lea
shrb
aam
xchg
cmp
xchg
sub
es
jp
inc
cmp
fildl
jne
test
pusha
push
pop
mov
or
adc
xor
fdiv
mov
xor
cmp
push
push
or
or
jo
push
mov
and
or
imul
imul
js
ja
sbb
push
push
jl
and
shl
mov
push
mov
jo
stos
dec
mov
stos
jp
mov
mov
cmp
add
ja
or
add
outsl
lret
cmc
inc
call
and
xlat
jbe
clc
or
lods
adc
ficompl
or
jo
pop
outsl
jno
add
and
mov
clc
pop
stc
or
cmp
push
or
jae
cmp
pop
js
xor
pop
and
fcmovnb
adc
stc
mov
lock
mov
mov
testb
popf
clc
adc
lcall
ret
push
xchg
leave
int
xlat
std
push
mov
clc
push
push
test
add
lcall
mov
in
inc
adc
rcrb
js
sbb
push
push
and
inc
ss
mov
xchg
sub
add
jbe
xor
or
dec
push
cld
adc
sbb
cmp
dec
add
and
xor
sub
ret
inc
push
cmp
subb
adc
mov
mov
mov
add
add
mov
or
jmp
lods
xor
addb
and
stos
jo
sti
dec
adc
xor
sarb
or
add
or
mov
mulb
mov
je
mov
jo
or
and
mov
sbb
add
mov
cmpsb
ret
roll
or
mov
into
sbbb
jne
or
cmpsl
dec
scas
mov
fcmove
cmc
inc
repnz
mov
lods
and
pop
int
sub
push
divb
jo
sub
adc
pop
inc
sub
repz
push
pop
call
and
rorb
inc
push
xor
loope
bound
jno
mov
pop
push
add
push
adc
mov
out
sub
pop
push
lods
sti
push
add
push
aad
stos
and
mov
arpl
cmpl
mov
cmp
sbb
xchg
fdivs
sbb
sbb
add
cmp
lds
adc
mov
loopne
adc
cwtl
std
push
ljmp
movsl
or
lods
sub
dec
mov
adc
add
xchg
adcl
fwait
xlat
mov
inc
arpl
shlb
mov
ret
sbb
lods
cs
bound
sub
cltd
cmp
xchg
movb
or
outsl
mov
das
add
call
push
or
xchg
push
repz
adc
call
push
faddl
add
rcr
adc
adc
push
mov
add
testb
push
add
mov
mov
add
nop
and
push
bound
or
test
int
add
mov
test
hlt
jp
cmp
rolb
push
mov
ss
jo
shlb
clc
sbb
sbb
int
mov
orl
jae
rcrb
lahf
mov
test
sahf
clc
rcl
inc
push
sbb
outsb
subl
loopne
shr
mov
jp
push
cmp
rolb
lret
leave
jmp
test
xchg
adc
and
jns
add
pop
movsb
stc
adc
sahf
rcrb
or
sub
push
inc
jno
sbb
push
cmp
pop
push
jne
add
std
ret
scas
cwtl
mov
add
mov
cmpsb
inc
call
insb
cwtl
rorb
inc
sub
push
fstps
inc
mov
mov
push
mov
adc
fcomp
push
add
int
roll
aam
add
jmp
xor
push
add
mov
ret
pushf
dec
push
mov
mov
inc
xchg
roll
add
test
rcrl
inc
inc
sub
lock
add
movsb
adc
or
inc
aaa
enter
clc
pop
push
test
sbb
sbb
fdivs
inc
cmp
push
lods
sbb
lcall
or
jne
pop
xlat
pop
xchg
push
enter
sub
or
jge
adc
pop
and
int
push
push
cs
push
xchg
add
sub
mov
mov
mov
add
mov
jle
mov
xor
sarl
sbb
out
popf
and
neg
push
xor
cltd
mov
and
mov
fisubrs
icebp
daa
add
popa
or
lret
pop
push
xchg
pusha
lcall
orb
and
imulb
call
sbb
in
loop
roll
xor
or
mov
mov
mov
sbb
add
lods
mov
in
add
adc
xor
lods
push
test
push
rol
or
js
dec
inc
xor
and
or
lods
mov
lods
add
add
aam
xchg
sub
xlat
inc
scas
add
add
loopne
dec
imul
mov
mov
xorb
sbb
mov
scas
xchg
dec
adc
inc
lock
std
push
push
push
pop
add
cmp
push
cwtl
cmp
clc
ds
sbb
and
xchg
or
not
lret
push
pop
jno
inc
push
or
sahf
mov
jns
push
into
aad
inc
clc
adc
inc
std
ret
ljmp
dec
mov
hlt
stc
pop
jbe
adc
fmuls
invd
sbb
ljmp
fisttpl
mov
mov
xor
lock
es
xchg
mov
bound
psubsb
pop
js
fs
inc
add
out
rolb
sbb
push
pop
push
inc
push
and
mov
adc
add
xchg
mov
arpl
mov
call
xor
jle
mov
clc
rorb
fnstsw
addb
inc
lods
push
mov
cs
mov
jg
or
jge
shlb
pop
add
pop
mov
lods
dec
jge
shl
ljmp
xchg
in
sub
add
mov
or
movsb
loopne
lcall
fs
mov
sbb
mov
add
or
push
push
notl
inc
push
sbb
fs
pop
cmpsl
call
shlb
test
mov
in
mov
pusha
xchg
faddp
or
or
mov
mov
push
mov
add
mov
push
mov
shlb
cltd
adc
mov
cmp
add
pusha
adc
add
popf
pop
fstl
xlat
lret
clc
or
inc
inc
rcll
and
cld
inc
xchg
and
icebp
and
or
cmp
mov
pop
add
clc
imul
mov
cmp
adc
stos
roll
pop
xor
pop
push
xchg
mov
cli
cmp
hlt
pop
pop
pop
leave
int
cmpsl
stos
or
adc
push
or
dec
out
or
jp
loopne
jne
cmp
jg
mov
mov
adc
cs
mov
shr
cmp
insl
xchg
jno
roll
int3
or
jne
mov
lods
mov
mov
push
or
pop
xor
clc
out
push
sbb
add
mov
add
into
push
add
rclb
and
sarb
push
mov
sub
mov
add
inc
add
xor
js
cmp
test
inc
addb
call
add
add
add
or
das
stos
dec
cmp
adc
fdivs
push
and
jecxz
add
inc
scas
icebp
call
add
imul
stos
xchg
mov
mov
leave
lret
into
daa
inc
inc
mov
aaa
mov
xor
out
adc
loope
xor
lret
cltd
arpl
cs
adc
rorl
add
pushf
jnp
sahf
rcrl
mov
test
cwtl
pushf
fstpl
bound
leave
or
push
add
lock
add
mov
adc
jo
sbb
lods
arpl
pop
mov
xor
push
add
mov
rol
add
pop
ret
inc
loope
push
adc
inc
xchg
ss
dec
cwtl
lcall
jne
js
sbb
or
xchg
out
inc
xchg
sub
mov
fs
sub
inc
cwtl
sahf
push
icebp
divb
adc
scas
and
pop
add
and
addr16
or
inc
xor
in
sbb
leave
addr16
outsb
sbbb
aas
adc
testl
mov
lds
push
add
ret
sub
or
jmp
pushf
mov
test
xchg
push
inc
adc
jnp
jge
or
and
dec
nop
add
lea
sbb
sarb
mov
clc
add
push
dec
mov
outsl
repnz
pop
push
cmp
add
inc
push
mov
pop
in
jp
outsb
mov
fwait
xor
jbe
inc
shll
add
lcall
cmp
adc
mov
mov
sahf
sub
lock
xor
push
cmpsb
inc
cwtl
pop
pop
repnz
and
stos
stc
cli
dec
xor
cmp
lret
sub
pop
out
mov
shlb
inc
sub
xchg
addb
xchg
lret
push
sub
hlt
not
jo
xchg
push
mov
xor
daa
dec
mov
fcoms
scas
scas
jo
adc
dec
dec
shl
lret
aam
mov
push
add
movsb
or
js,pt
js
dec
fistpll
push
pop
cmp
sbb
les
jmp
inc
hlt
testb
mov
popa
dec
mov
inc
rorl
arpl
lcall
mov
ret
inc
stos
adc
push
jbe
cmpsb
test
push
ret
bndldx
xchg
adc
rcrl
mov
cmpsl
sbb
lcall
mov
out
jno
scas
test
mov
sub
inc
xlat
jp
pop
cltd
pop
mov
and
adc
mov
dec
add
int
or
or
mov
push
bound
and
dec
imul
lds
nop
cmpsb
add
shr
push
mov
xchg
imul
add
pusha
test
pushf
add
inc
inc
sbb
icebp
mov
loopne
inc
mov
push
mov
pop
ds
sbb
inc
push
sbb
outsb
int
pop
test
sbb
arpl
push
test
lcall
dec
cmp
xor
mov
div
mov
mov
adc
adc
mov
lret
push
sbb
test
mov
iret
jo
bound
xchg
cs
lret
test
aaa
sbb
cs
inc
inc
push
xor
mov
sbb
inc
inc
add
pop
dec
sahf
sub
xor
pop
mov
lret
xor
jns
mov
jmp
xlat
add
xor
mov
ret
sbb
or
in
repnz
or
addl
mov
loop
test
push
pop
lods
xor
pop
xchg
or
xor
loop
add
or
xor
adc
push
fimuls
xchg
mov
clc
call
mov
sbb
test
cmp
xchg
xor
inc
fsubs
jmp
repnz
adc
dec
movl
xor
or
xchg
loopne
insb
imul
jl
shl
sarl
or
adc
inc
adc
or
mov
push
das
ret
rcrl
orb
incb
gs
push
sub
cmpl
adc
rcrl
mov
sbb
or
out
out
out
loopne
sub
data16
inc
js
inc
cld
aaa
rolb
dec
jne
ja
and
jb
ljmp
enter
push
cs
nop
pop
imul
mov
sbb
rolb
push
pop
add
or
adc
push
xchg
and
inc
mov
test
mov
dec
mov
lret
fisubs
push
mov
push
andb
sbb
cmc
mov
xchg
jecxz
cmp
and
add
push
or
jg
sbb
mov
je
dec
andb
ja
add
sub
cwtl
adc
pop
inc
mov
sub
shr
add
gs
sub
or
and
adc
or
xchg
mov
ror
mov
xor
sbb
adc
cmp
shrl
icebp
push
pop
inc
push
jo
xor
fnstenv
adc
imul
orl
pop
cli
push
stos
push
mov
mov
sbb
imul
and
mov
fxch
or
sar
sub
or
or
pop
push
mov
inc
sbb
test
leave
nop
mov
jl
call
jno
std
popf
pop
xchg
jmp
xor
jg
jmp
movb
mov
lock
pop
mov
add
mov
push
int
sbb
mov
inc
int
jnp
int
mov
setno
adc
cmc
add
jo
fdivl
add
xchg
loopne
rorl
es
pop
loopne
xchg
push
ret
or
mov
into
add
scas
dec
mov
test
and
push
je
dec
into
aam
push
xchg
addr16
inc
insb
mov
mov
adc
es
addr16
or
cwtl
xor
cltd
jle
lds
add
sbb
pop
jns
loope
loope
nop
and
adc
jmp
or
movsb
fwait
imul
sbb
sbb
xor
xor
leave
aas
jns
imul
sbb
aad
xor
jae
loop
add
fcoml
inc
jp,pn
xchg
xchg
movsl
or
add
jo,pn
push
mov
pop
rcrl
sbb
ljmp
popa
sbb
popa
shl
dec
inc
roll
and
int3
stos
out
and
ret
addr16
pop
sub
rcrb
jns
inc
adc
sbb
jo
sub
cmpsb
sbbb
pop
into
rcr
fwait
cmpsl
arpl
ljmp
add
or
sbb
push
sub
or
inc
cmp
ret
add
xchg
faddl
adc
sbb
or
and
xor
cmp
add
jne
dec
xlat
mov
and
inc
inc
sbb
push
adc
inc
xchg
les
test
sbb
inc
pop
sbb
ret
sarl
inc
or
ds
xchg
jmp
pop
mov
cltd
imul
adc
ret
or
xchg
push
adc
mov
aam
mov
mov
and
mov
lcall
shrb
push
les
sub
stos
or
add
cmp
sub
jp
sbb
push
xchg
sub
shl
jge
je
sub
mov
or
leave
sti
and
or
adc
xchg
leave
nop
push
movsl
jnp
xchg
add
adc
adc
pop
push
inc
scas
jo
mov
nop
imul
lock
mov
movsl
scas
data16
mov
push
in
inc
add
jecxz
cmpsl
fcomps
daa
add
sahf
or
cli
mov
aaa
cwtl
stos
sub
cld
push
dec
push
add
push
or
adc
loopne
push
sub
and
mov
subb
test
loope
repnz
push
cmp
cmp
adc
jns
out
xor
add
insl
jmp
xchg
stc
incb
add
dec
cmpsb
lcall
pop
mov
mulb
sbb
jnp
hlt
push
jg
xchg
leave
mov
sub
inc
cmp
and
inc
or
addb
jp
jbe
push
leave
in
xchg
das
jge
mov
and
rcl
add
adc
fdiv
mov
or
rcl
add
and
pop
jno
imul
jle
sbb
aam
pop
mov
mov
scas
cld
add
push
inc
ds
sbbl
subb
or
add
dec
fwait
cmp
ss
shll
adc
xor
subl
mov
leave
cmc
cmpsl
and
arpl
sbb
lock
mov
inc
cmp
in
test
dec
adc
or
in
add
sbbl
addb
jl
jecxz
push
push
add
stos
sbb
mov
data16
ret
mov
add
inc
and
addl
test
mov
nop
or
pop
cmp
jo
push
or
xorb
adc
push
pop
cmpsb
movsl
dec
add
test
push
lret
adc
pop
movb
adc
imul
test
and
into
dec
jg
sbb
jge
xchg
mov
jmp
lret
sub
add
mov
lods
shlb
or
cmpsl
ret
fwait
js
sub
scas
xlat
mov
cmp
xchg
mov
mov
repnz
push
inc
cs
les
popa
or
pusha
cmc
sub
inc
push
pop
add
cmp
aad
push
negb
sbb
dec
and
pop
mov
xor
dec
push
outsb
or
push
xchg
lret
lock
inc
push
sbb
dec
call
inc
cmp
sbb
or
rorl
inc
aam
mov
push
dec
push
or
sub
inc
mov
cltd
into
rcll
pop
sysenter
fwait
leave
add
aaa
or
mov
xor
inc
mov
pop
jg
inc
or
les
mov
cmp
shlb
fprem
adc
jo
sub
xlat
pop
lods
sahf
mov
sbb
push
mov
mov
xchg
shll
loopne
or
stc
pop
lret
or
test
aam
sbb
cmp
jp
subl
ficoml
test
test
push
into
testb
mov
push
and
push
push
pop
out
mov
mov
or
js
pop
adc
mov
cwtl
scas
sbb
dec
rcl
push
inc
add
xchg
scas
cmc
add
pop
mov
shlb
inc
ret
mov
aas
fst
stos
sbb
adc
roll
cwtl
pop
pushf
add
and
mov
pop
add
cmp
mov
push
movsl
sbb
cli
sbb
add
movsb
jne
mov
inc
hlt
adc
push
mov
cmp
mov
out
shrb
bnd
pop
dec
cmpsb
sbb
push
add
xlat
push
push
mov
cmp
test
push
jp
je
push
dec
stos
in
arpl
shlb
and
adcb
bound
ljmp
add
add
jmp
pop
or
outsl
inc
sbb
jge
loope
pop
xchg
fsubrl
shlb
adc
cmp
push
mov
pushf
cmpsb
or
pushf
das
addr16
adc
push
sub
test
xlat
in
arpl
push
movsl
or
adc
mov
dec
adc
rcrb
mov
sbb
push
lret
popf
or
mov
rol
cmc
shrb
adc
push
adc
mov
sbb
addb
mov
push
pop
daa
icebp
mov
jbe
inc
adc
cmp
sbb
lock
sbb
loope
adc
push
call
repnz
shrb
sub
adc
pop
jge
add
pop
ds
dec
push
or
lahf
adc
dec
mov
xchg
in
out
es
adc
lret
pop
or
repnz
cli
sbb
adc
push
mov
dec
rclb
in
in
mov
movsl
lcall
adc
push
enter
and
sub
jmp
mov
push
sahf
and
aaa
inc
push
lods
js
scas
mov
mov
adc
das
mov
les
out
mov
mov
inc
fwait
cli
movl
or
lahf
adc
push
add
add
and
sahf
jbe
push
push
sbb
fs
mov
push
pop
dec
leave
addl
lock
jge
sahf
mov
mov
movb
sbb
add
pop
cli
or
push
and
stos
cmp
scas
add
inc
sub
mov
pop
mov
and
pop
mov
sub
sbb
pop
or
xchg
bound
mov
pop
popa
sbb
shlb
adc
jecxz
sbb
inc
xchg
push
sub
sbb
icebp
pop
insb
push
int3
and
and
xor
sti
push
push
ficoml
icebp
adc
outsb
pop
fwait
sbb
pop
xchg
xchg
out
cmc
pop
aam
and
or
sti
js
or
pusha
sti
add
push
into
shll
inc
pop
outsb
test
xor
aas
sub
inc
clc
add
mov
adc
cwtl
push
ja
fadds
inc
hlt
stos
add
daa
fimull
push
cmp
xor
and
test
or
cmp
xor
sub
mov
into
lods
jo
adc
or
pop
inc
xor
and
xchg
xor
int3
adc
orb
rcll
test
das
inc
mov
push
sub
aas
pop
sbb
push
lock
sub
arpl
push
data16
imul
inc
dec
ss
jb
xor
test
xor
repnz
jae
mov
adc
mov
xor
sarl
push
add
fisubrs
and
loopne
aam
and
or
js
push
out
stos
jbe
int
mov
scas
js
popf
mov
pushf
rclb
test
mov
sbb
or
imul
loopne
adc
inc
and
dec
sub
es
push
add
push
jb
jmp
or
push
gs
arpl
add
or
or
dec
dec
adc
rcll
sbb
ja
mov
mov
jne
scas
push
push
xchg
test
add
lcall
mov
les
sub
das
xorb
add
roll
xchg
push
inc
sbb
outsb
and
scas
push
pop
xchg
or
mov
add
sbb
sub
add
fadds
push
test
addb
mov
orb
fmull
sbb
loopne
es
mov
inc
mov
jb
daa
out
inc
xchg
roll
inc
pop
sbb
adc
sub
lock
mov
cmp
mov
bound
and
mov
repz
add
lea
mov
push
lods
adc
ret
mov
mov
lds
sub
jecxz
adc
jne
pushf
rorl
or
stos
xor
xchg
je
jg
pop
and
lock
adc
and
aam
rolb
push
mov
push
mov
test
lods
and
ljmp
jae
sbbl
inc
test
sub
mov
mov
stos
sbb
sub
mov
fs
adc
xchg
xchg
push
add
icebp
dec
adc
cs
test
bound
in
add
push
xor
setno
push
addl
push
lldt
movsl
ljmp
cmc
sub
andb
rolb
cmc
ret
jp
push
fs
fwait
mov
xor
xchg
mov
cltd
loopne
sub
dec
in
cmp
out
or
jno
inc
inc
dec
pop
mov
add
dec
rcll
push
mov
inc
mov
pop
jne
sub
rol
leave
inc
xor
pop
pop
test
adc
pop
lcall
aaa
clc
mov
int
movsb
mov
xchg
adc
hlt
add
xchg
rclb
dec
cmp
push
push
call
stc
add
cltd
loopne
jns
not
lahf
inc
lea
sbb
sub
ret
mov
jno
andl
lock
push
movsb
test
xchg
and
cmp
or
jmp
popf
xorb
adc
pop
sets
or
sbb
add
mov
test
stos
orl
fcoms
fidivrs
shrl
mov
push
loopne
fimuls
push
add
call
mov
and
ja
lret
js
mov
sbb
das
ds
inc
leave
adc
or
scas
rclb
icebp
jno
xor
inc
push
ret
adc
sbb
mov
mov
repnz
js
add
shlb
adc
and
push
movsl
data16
icebp
mov
push
sbb
gs
aad
mov
add
and
pusha
and
rcll
popa
cmp
call
adc
push
sbb
xchg
and
movsl
jp
inc
popa
push
push
ret
popf
dec
mov
sarb
lock
roll
jp
sahf
mov
rolb
jo
cmp
adc
lods
imul
lret
pop
sub
sub
jo
pusha
add
push
xchg
jo
or
sbb
sbb
cmpsb
leave
pop
push
test
sub
mov
inc
add
imul
int
adc
mov
mov
ss
or
inc
adc
je
mov
add
cmc
hlt
or
dec
add
stos
daa
into
mov
add
jno
xchg
test
jbe,pn
data16
mov
test
add
shl
in
test
sub
adcb
test
xchg
cmp
cld
inc
loopne
popa
into
pop
clc
js
mov
add
inc
cmpsb
pop
int
pop
push
jecxz
lock
adc
cli
repnz
lret
lret
push
sbb
ret
cmp
les
xor
rorb
roll
add
fsubs
shrl
adc
rorb
pusha
mov
fcoml
clc
pusha
mov
pusha
repz
test
loopne
ja
push
jp
mov
rorl
jne
icebp
sti
sahf
les
mov
pop
mov
xor
mov
stos
mov
dec
mov
popa
pop
or
aas
test
pop
leave
jle
mov
or
ret
push
loopne
add
cmp
cmp
aam
orb
cmp
sub
ret
mov
inc
adc
or
pushf
and
cmp
inc
mov
push
inc
movsl
scas
cmp
inc
inc
mov
shll
hlt
adc
pop
or
roll
mov
mov
out
adc
mov
inc
ret
or
or
add
in
jne
inc
loope
push
push
xor
ret
and
mov
add
ja
or
adc
dec
inc
inc
sysenter
jmp
or
xor
out
xlat
dec
shl
mov
adc
sahf
leave
mov
scas
mov
sbb
add
hlt
fisubrl
jno
adc
mov
xor
xor
push
leave
xorl
inc
ret
loop
test
nop
adc
or
sbb
loope
pop
xor
cwtl
adc
or
inc
adc
push
mov
push
cmp
call
push
mov
or
sti
test
inc
aam
negl
cwtl
inc
pop
adc
movsl
sti
ret
and
cli
adc
push
mov
aas
push
or
and
bound
add
sbbb
mov
push
bound
sbb
lret
cmp
mov
cmp
leave
stos
mov
push
push
push
xlat
and
or
outsl
add
lock
mov
aam
and
sub
test
lret
es
jmp
pop
cmp
adcl
add
es
lret
sbb
inc
push
mov
inc
loop
insl
or
dec
sbbl
ljmp
add
sub
test
push
push
push
inc
cltd
or
scas
popf
imul
pop
cmpl
notb
dec
adc
inc
adc
ret
testb
xor
dec
mov
addr16
inc
push
test
add
pop
and
xchg
sbbl
pop
cwtl
popa
xchg
loop
jmp
inc
add
xor
ljmp
test
add
add
push
in
mov
and
clc
inc
adc
lods
popf
sub
push
xor
leave
pop
xor
push
lods
add
rclb
adc
inc
imul
adc
je
repz
mov
mov
in
in
push
lods
cmp
add
push
loopne
leave
orl
jmp
mov
add
dec
xchg
lret
add
cmp
popf
movsl
mov
out
cmp
push
mov
or
cmp
cmp
mov
dec
add
pushf
stos
push
push
add
adc
xchg
inc
and
mov
mov
adc
adc
sbb
out
adc
pusha
mov
sbb
lcall
adc
sub
fldenv
or
sub
lea
add
pop
ret
pop
add
lea
cmc
xchg
push
leave
shlb
lock
inc
push
sbb
and
mov
add
movsl
ret
fwait
movsb
mov
cld
and
mov
mov
inc
and
push
sub
mov
stos
mov
sbb
jb
negl
stos
sbb
pushf
xchg
xchg
and
fadds
loope
push
rol
sbb
daa
adc
inc
or
inc
xchg
out
add
mov
cmp
jge
push
rolb
leave
and
adc
fsubrs
mov
cli
addb
sub
pop
and
sbb
push
mov
shlb
mov
pop
popa
enter
xchg
lret
int
subb
leave
scas
stos
mov
cmpsl
add
je
xor
and
cltd
enter
dec
xchg
out
rcll
cmp
xchg
cwtl
test
rep
or
add
test
mov
lods
cmp
mov
push
xor
push
pop
out
sub
shrb
in
inc
xchg
xchg
cld
sbb
adc
jno
mov
add
dec
add
rorb
mov
lock
ret
inc
add
das
sbb
inc
cmp
sub
push
adc
addr16
arpl
jg
add
lret
das
add
cmp
je
sarb
and
test
inc
mov
xchg
aam
sbb
push
hlt
pop
add
lock
mov
loop
movsb
negb
fcoms
add
or
idivb
andl
scas
pop
inc
lahf
lock
push
push
add
ljmp
adc
pop
add
std
add
or
cmp
pop
jle
aas
xchg
test
pop
xchg
and
lock
mov
sbb
mov
push
sub
jp
mov
stos
sbb
test
aas
in
mov
roll
test
lret
mov
das
test
int3
or
enter
hlt
push
pop
out
add
mov
xchg
icebp
add
adc
mov
rcll
add
aad
xchg
cltd
push
push
inc
push
test
add
adc
cmpsl
test
adc
ds
lods
andl
ret
and
jb
lret
mov
jo
mov
mov
movsb
jmp
jb
repz
mov
pop
shl
mov
xor
cs
je
add
lods
add
dec
adc
orb
ds
push
and
mov
sbb
shlb
mov
sahf
cmp
xchg
xor
sub
cmpsb
push
inc
out
scas
lcall
or
adc
aam
push
imul
pop
mov
or
jb
add
add
push
add
xor
adcl
push
rorb
pop
xchg
andl
out
push
inc
aam
cs
push
pushf
inc
pop
and
repnz
push
fnstcw
dec
cmp
or
mov
adc
addb
add
pop
jo
add
popa
jmp
inc
adc
adc
inc
jo
adc
mov
into
subl
addb
inc
add
push
xor
push
push
xor
jno
cmp
cmc
adc
call
or
adc
mov
add
xor
adc
adc
sti
xchg
add
cmp
lods
addl
jp
mov
loopne
cwtl
mov
dec
mov
aam
jnp
lret
xchg
sub
dec
add
cmp
add
add
shll
cmc
xchg
mov
mov
and
jbe
adc
mov
push
inc
sub
push
adc
notb
jnp
push
cs
push
stos
div
pop
pop
mov
jne
mov
sbb
mov
xchg
sub
out
add
and
mov
adc
test
test
js
imul
push
mov
add
push
jbe
leave
and
cmc
outsb
je
xorb
shll
inc
cmp
dec
bnd
sbb
inc
cmc
inc
mov
push
xchg
mov
and
add
push
rclb
add
nop
ljmp
xchg
lods
dec
lds
into
dec
rcrb
enter
pop
sbb
loopne
data16
mov
push
push
insl
push
push
mov
testl
dec
andl
xorl
xor
push
stc
movsb
and
push
jle
inc
cmp
cmp
lret
pop
pop
pop
push
sbb
jl
xchg
ret
add
mov
add
stc
pop
push
sbb
shrb
adc
test
cmp
xor
or
roll
lret
loope
add
andb
pop
in
inc
test
adc
inc
and
mov
push
add
inc
mov
popa
adc
add
add
mov
dec
jmp
push
xor
add
stos
out
push
arpl
cmpsb
and
inc
inc
inc
popf
mov
push
pusha
sar
outsl
push
mov
adc
pop
inc
inc
loope
or
push
clc
nop
inc
in
test
gs
sbb
jne
inc
cmp
int3
mov
rcrb
je
sbb
adc
xor
dec
mov
adc
ret
shrl
mov
ret
lods
inc
lret
cli
fmuls
adc
pop
inc
cmc
andl
sbb
xchg
aad
ret
add
add
adc
mov
idivl
xor
mov
inc
push
popf
mov
loope
movsl
push
lock
loopne
mov
rclb
aad
push
dec
push
jmp
scas
sub
loopne
aam
test
or
push
pop
int
or
jno
rolb
les
pop
ret
mov
jg
add
loop
mov
cld
test
xchg
add
xor
jp
inc
and
xchg
push
int
jo
inc
push
sbb
repz
dec
in
scas
loopne
lcall
in
sub
jne
and
ja
inc
jo
aam
mul
lds
ja
imul
sbb
mov
pop
pusha
push
mov
mov
and
int3
lret
xchg
rol
cmp
and
dec
adc
outsb
sahf
jb
push
adc
add
loope
scas
dec
sub
or
test
popf
pop
jp
sbb
or
adc
outsb
es
adc
nop
sub
in
loop
inc
dec
out
mov
xchg
repnz
loopne
cmpps
mov
int3
rorl
adc
inc
punpcklwd
dec
push
notl
mov
sbb
dec
push
xor
aad
jae
or
shr
mov
sub
andl
in
rcr
mov
sahf
and
push
push
or
mov
push
add
or
cmp
mov
loop
mov
dec
scas
jae
sub
rcl
xor
enter
mov
aam
mov
and
pushl
cmp
es
sbbl
lods
adc
jge
mov
scas
adc
stos
addb
dec
mov
sbb
inc
aam
in
adc
loope
in
ret
inc
inc
push
into
xchg
and
push
inc
out
fldcw
decb
push
cmp
pop
jo
pusha
sbb
cmp
iret
sbb
dec
mov
jbe
and
lret
popf
add
fmul
push
test
test
mov
sbb
mov
cmpsb
bound
adc
cli
adc
push
add
ror
mov
mov
push
addl
nop
add
cli
dec
adc
test
imul
adc
lods
pop
dec
dec
pushf
mov
cs
bswap
pop
pop
rolb
mov
dec
or
rorb
pop
jns
jnp
xor
sbb
call
ffree
mov
dec
clc
loope
or
add
jo
sub
icebp
adc
enter
mov
pop
adc
cmp
inc
in
jne
mov
pop
pusha
lret
add
and
mov
dec
hlt
adc
addl
inc
push
jge
shlb
test
mov
push
inc
lods
xor
mov
cmp
pop
fwait
pop
in
dec
jecxz
or
mov
arpl
orb
test
xlat
dec
ss
mov
add
xlat
dec
daa
mov
enter
test
dec
cmpsb
cmp
adc
rcrb
dec
icebp
shl
add
dec
push
popa
mov
sbb
mov
shl
sub
pusha
or
jne
sbb
push
sarb
xor
in
icebp
add
je
or
add
dec
rorl
stos
xchg
and
jno
dec
push
dec
sbb
push
into
fadds
pop
popf
stc
add
add
fimull
xchg
imul
or
pop
pop
sub
mov
pop
sbb
rolb
inc
out
and
cmpsl
cli
adc
jne
lret
and
mov
aad
sub
mov
xchg
rcrl
cmp
push
imul
insb
jae
sub
fisubl
inc
mov
push
jno
lock
lret
add
sbb
inc
mov
inc
push
roll
pop
lret
loop
push
jo
sub
lret
sbb
push
js
sbbl
mov
cmp
push
jo
jecxz
and
adc
push
cmp
rcrb
scas
mov
stos
fnstenv
add
mov
and
adc
es
push
mov
xchg
add
inc
cmp
loopne
mov
clc
pop
or
push
add
push
dec
xor
dec
xchg
push
pop
fisubrl
adc
mov
pop
outsb
or
ret
sub
jnp
add
add
loope
inc
insl
sub
adc
stc
pop
icebp
inc
adc
shrl
xor
or
frstor
lret
inc
xchg
jecxz
test
mov
or
icebp
sbb
or
push
into
pop
push
xchg
sub
and
push
xchg
leave
xor
ret
add
sahf
push
js
es
or
cwtl
inc
mov
test
clc
lock
repnz
shl
sbb
popa
clc
fimull
and
sbb
stos
dec
outsl
mov
push
lock
out
inc
xor
pop
sbb
fsts
xor
dec
es
outsb
out
sbb
sbb
push
aad
push
jno
in
pushf
sub
adc
pop
adc
lods
loop
push
shl
or
add
inc
push
sbb
mov
pop
push
xchg
or
add
or
pmulhw
pop
insb
insb
dec
add
loope
adc
inc
mov
test
cli
dec
shrl
xlat
movlps
pusha
push
fs
test
imul
adc
sarb
dec
mov
cmp
loope
mov
test
pop
sbb
aaa
xchg
sub
ljmp
mov
arpl
int3
js
mov
out
test
adc
adc
cmp
jp
clc
sub
or
shrb
ret
push
addb
stos
ret
sub
lret
out
mov
adc
cmpb
ret
add
lds
sub
gs
js
shll
add
adc
push
push
pop
inc
sbb
daa
lods
lret
test
notb
rcl
mov
lret
sbb
mov
mov
cmpsb
pop
sub
adc
or
pop
cmp
ljmp
inc
inc
jae
mov
adc
push
nop
push
xchg
push
adc
push
sbb
push
enter
in
popf
popa
js
cmp
lea
and
rorl
ja
loopne
pop
mov
mov
xchg
push
cmpsb
sbb
or
call
mov
or
dec
adc
scas
push
push
icebp
mov
ret
or
push
stos
add
sub
mov
lock
jae
mov
xchg
add
mov
or
sbbl
or
pop
hlt
add
fcomps
mov
push
lock
xor
addl
xlat
push
sub
mov
ja
outsb
jbe
sbb
inc
add
adc
pop
hlt
fstpl
je
pop
adc
shlb
pop
or
cmpsl
int3
lcall
mov
push
mov
mov
aam
push
mov
xor
jmp
sahf
dec
jae
mov
mov
jge
nop
mov
pop
icebp
aaa
jle
sbb
and
sbbl
and
push
push
orb
fs
sub
orl
aam
sbb
or
loopne
push
aad
add
mov
loopne
rcrl
mov
lods
cmp
movsl
fisubrl
push
xchg
dec
scas
dec
xor
and
or
popf
rolb
int3
js
and
mov
mov
jnp
hlt
push
inc
add
mov
push
stc
xchg
push
and
and
mov
je
scas
pop
fs
dec
pop
sbb
mov
mull
push
lock
inc
repz
test
xor
xor
cmpsl
bound
dec
sbb
xchg
scas
ret
inc
mov
push
rolb
in
mov
sbb
mov
add
addr16
mov
loopne
add
adc
outsb
push
or
sbb
or
pushf
inc
adc
ss
adc
adc
cmc
pop
and
dec
mov
shrb
dec
sbb
clc
cmpb
js
pop
or
nopl
es
mov
add
ljmp
jae
pop
rorb
adc
mov
or
adc
cli
jb
subl
ljmp
je
mov
imul
clc
or
lods
aad
rolb
notb
pop
pop
mov
inc
nop
sub
vunpckhpd
mov
arpl
repnz
loopne,pn
mov
xchg
pop
or
sbb
add
pop
jbe
out
or
add
das
or
ret
and
std
and
arpl
push
cmpb
bound
or
sbb
cltd
aad
clc
pop
push
bound
int3
adc
xchg
call
xchg
mov
lods
test
pop
sbb
adc
pop
test
push
loope
ds
mov
sub
pop
pop
loopne
adc
in
js
adcb
out
adc
outsl
shll
ret
or
push
jae
mov
pop
shrb
and
ret
pop
out
fadds
jmp
push
add
enter
mov
lret
push
sub
sbb
push
popf
mov
xchg
mov
call
sarl
loope
insl
add
mov
je
xchg
jnp
cmp
jge
add
mov
cmp
jmp
mov
stos
mov
filds
das
sub
xor
and
sub
adc
sar
push
dec
repz
rclb
inc
inc
and
mov
inc
and
shrb
in
and
je
mov
testl
jo
jecxz
roll
bound
or
dec
ret
push
mov
jo
cld
subl
leave
cmp
push
and
or
dec
into
dec
xor
dec
mov
or
mov
into
stos
test
mov
or
pop
imul
xor
popf
dec
or
stos
sarw
adc
scas
lods
mov
aad
push
into
mov
cli
lock
xor
add
add
mov
or
rolb
mov
sar
call
mov
and
adc
loopne
xchg
fcmovbe
jo
pop
mov
sub
xchg
cmp
cmp
pop
fs
fadds
addb
int3
push
inc
test
xchg
and
stos
xchg
inc
ret
jo
rcrl
mov
pop
adcb
or
shlb
out
sub
stos
and
mov
hlt
or
adc
cmp
pop
test
out
mov
nop
jae
orl
mov
add
stos
or
add
or
push
test
adc
xorb
lock
sub
mov
pop
add
sbb
mov
push
je
or
push
dec
adc
rcll
sbb
xchg
inc
push
shlb
sbb
mov
icebp
add
push
roll
mov
sub
adc
mov
popf
or
pusha
ret
push
je
addl
aad
repnz
mov
xor
push
mov
mov
vmovups
push
loop
add
jae
imul
xchg
adc
push
sarl
push
popa
inc
lds
xor
lret
inc
and
jo
jmp
xchg
sub
inc
test
inc
rorb
inc
and
add
fsubrp
mov
jns
pop
push
mov
bound
jo
push
sbb
add
fldenv
nop
mov
push
push
test
push
cmp
adc
aam
mov
and
or
pop
push
and
pop
push
cltd
push
pop
push
aam
repnz
test
setno
mov
sub
push
jg
or
or
or
das
add
and
xlat
adcb
in
push
rclb
push
dec
cs
mov
sarb
in
lds
mov
call
loopne
push
jmp
sbb
pop
pop
rolb
add
mov
repnz
jae
pop
outsb
push
lea
push
aam
stc
and
xor
in
mov
in
jne
inc
and
inc
cmp
and
dec
xor
or
dec
cs
loope
fwait
bound
mov
mov
push
xchg
cmpsb
push
dec
repnz
std
xchg
idivb
mov
push
or
inc
sar
ret
jae
push
or
leave
xor
push
cmp
or
loopnew
scas
mov
or
lret
adc
int
xor
jno
sbb
cmpb
mov
loopne
sbb
adc
jmp
shrl
pop
daa
mov
cmp
mov
add
cs
inc
fadd
leave
jb
inc
and
jnp
les
push
add
cmp
xor
insb
ret
add
inc
loopne
jl
xchg
add
adc
or
sub
push
mov
mov
jp
adc
cmp
pop
rolb
movsb
add
adcb
loop
or
inc
and
add
push
testl
adc
dec
xor
test
jle
sahf
fildl
push
lea
popa
int3
dec
jne
and
and
push
jmp
ret
aam
lea
add
adc
ret
lods
dec
mov
dec
jmp
cld
call
push
or
push
sub
sti
pop
xor
inc
cmpsl
push
xchg
scas
cs
cwtl
pusha
and
les
dec
xchg
stos
push
sub
push
jb
ret
cmp
sbb
es
dec
ror
adc
xorb
sbb
inc
cmp
dec
hlt
push
jnp
outsl
xchg
mov
dec
xor
or
mov
adc
ljmp
xchg
sub
xor
fimuls
push
dec
aaa
dec
insb
cmpsb
add
dec
ds
and
fs
sub
adc
xchg
sbb
shll
jp
into
shrb
push
shlb
adc
add
and
inc
shll
fisubrl
ss
add
addr16
xor
sbb
adc
push
fdivrs
das
pop
test
sbb
xchg
and
sbb
inc
lcall
test
rcrb
lret
push
mov
addb
xchg
loopne
add
and
cmp
inc
jl
stos
mov
adc
ljmp
push
int
dec
xor
sbb
push
push
push
add
xlat
mov
pop
push
or
sahf
arpl
mov
xor
arpl
add
std
subl
andb
sbb
add
and
leave
sbb
push
inc
mov
add
add
add
adc
adc
push
mov
stos
pop
inc
mov
adc
ret
xor
fiaddl
rolb
xchg
xorb
mov
push
dec
mov
sub
and
push
arpl
xor
rcll
inc
mov
sub
or
repnz
push
mov
inc
lock
cvtdq2ps
cmp
sub
call
dec
push
orl
push
rolb
cltd
rclb
js
pop
es
xchg
aad
and
sub
rorl
pop
sbb
add
sahf
lret
cmp
inc
aam
mov
inc
jae
sbb
sbb
xchg
js
cmp
sub
shlb
ret
js
mov
mov
nop
push
push
mov
rcrb
lods
adc
xor
or
and
pop
cmp
cmp
cwtl
mov
and
or
lea
mov
addl
rolb
scas
movsl
fs
aas
mov
mov
pop
pop
loop
sub
subb
loopne
popa
pop
adc
movsl
mov
mov
rolb
or
xor
andl
mov
ljmp
dec
adc
sub
adc
call
add
push
mov
push
push
mov
in
in
call
mov
mov
push
pushf
dec
and
or
or
xor
fstl
or
inc
push
std
pop
ret
pop
test
jne
movsb
fs
testl
leave
adc
xor
mov
mov
in
or
or
clc
femms
fildl
jge
fldl
or
cs
rorb
jg
sub
push
jl
inc
pushf
testb
je
movzwl
jmp
push
pop
lret
push
push
and
and
push
mov
add
mov
or
out
adcb
add
pop
ret
mov
jne
push
and
cmp
pop
adc
pushl
or
or
inc
repnz
push
inc
das
and
jne
insb
pop
and
hlt
in
add
mov
mov
ljmp
add
add
repnz
or
xor
push
lods
sti
mov
pop
cmp
jne
sbb
ds
sub
and
jl
add
pop
and
mov
mov
mov
mov
and
xor
jno
mov
mov
sti
fildl
and
pop
cltd
sbb
nop
out
jmp
fistpl
pop
insl
ss
or
pop
ret
subl
dec
adc
push
and
mov
push
mov
enter
movb
shr
fsubrs
jo
push
sbb
mov
or
or
je
add
pop
or
or
xchg
sbb
or
adc
daa
loop
dec
push
int
out
data16
mov
mov
mov
xor
jle
scas
enter
xchg
push
je
daa
fwait
mov
push
movsb
fs
inc
andl
fstpt
cld
and
cmp
jl
mov
test
insl
mov
jle
cmp
imulb
mov
pop
cmp
aas
xchg
dec
cmp
xchg
bnd
iret
test
cmp
popl
cld
sbb
push
cmp
sti
mov
push
rcrl
js
pop
jmp
call
incl
push
or
jmp
xor
clc
sub
pop
leave
mov
push
shl
pop
popa
cmp
push
loop
adc
mov
aaa
add
cmp
jne
out
adc
xor
adc
jnp
pop
pop
mov
pop
call
sti
clc
mov
cmp
jne
mov
push
loope
inc
add
je
test
outsl
fcmovnu
lock
iret
mov
jmp
cmpb
or
shlb
in
jbe
inc
or
ja
xor
add
jmp
fistl
xor
cmp
jmp
cmp
je
cmp
je
inc
scas
jg
pxor
pop
lea
add
add
mov
dec
add
xrelease
lods
sbb
std
outsl
jnp
std
cmp
cmp
cmp
fsubr
inc
cmpb
and
cmp
das
push
cs
out
mov
sbb
pop
add
aaa
jne
lock
push
add
push
xabort
mov
in
pop
mov
dec
out
lret
sub
clc
mov
adc
dec
clc
mov
sbb
outsb
pop
dec
mov
mov
push
add
push
push
push
lahf
or
fldt
xchg
fmuls
mov
sbb
mov
jbe
daa
and
push
push
xor
pop
cmp
push
sbb
jo
shlb
andl
jne
dec
movsl
idivb
add
or
xchg
jge
add
mov
fwait
inc
mov
add
cli
mov
and
pop
jg
lea
test
jo
adc
mov
arpl
aad
into
or
andb
inc
inc
insl
xchg
mov
sbb
inc
push
add
xchg
mov
sbb
mov
inc
and
mov
or
jne
dec
mov
sub
das
sbb
sbb
dec
add
int
sub
pop
imul
int3
enter
adc
add
rcl
cld
sti
mov
test
pop
jne
inc
inc
jmp
xchg
sub
ret
add
das
fsubrl
inc
cmp
or
jecxz
sub
push
or
sbb
xchg
ret
jg
mov
rorl
xchg
push
inc
mov
push
pop
inc
mov
jne
inc
cmpl
or
ss
minps
sbb
ret
push
push
pop
sbb
inc
mov
jae
add
adc
outsb
xlat
xchg
femms
or
fildl
daa
mov
pop
sti
pop
ret
int3
dec
mov
push
aam
mov
fldt
pop
rcr
shrl
push
jl
aam
adc
jl
sub
xchg
sti
popf
cmp
or
ljmp
push
cmpb
fisubrl
aas
daa
ret
cwtl
mov
cmp
sbb
push
mov
aas
mov
sar
popl
xchg
pop
jge
pop
add
ss
jo
pop
shlb
adc
je
sbb
push
pop
adc
xor
mov
or
and
ss
sub
add
insl
add
cmp
jne
sti
test
je
popa
mov
je
and
dec
mov
sbb
push
iret
sbb
sti
jmp
mov
fcmovb
lcall
mov
int
push
pop
sub
pop
dec
push
orb
push
lahf
sbb
mov
and
or
les
jo
xchg
fisubrs
fdivrl
inc
add
and
popa
nop
sub
es
test
cmp
in
or
not
movsl
aas
cmp
mov
add
push
out
in
test
jl
pusha
addr16
mov
mov
xchg
pop
cmp
sbbl
mov
shll
pusha
or
add
or
lods
aam
pop
mov
or
lea
xor
icebp
mov
test
jbe
cmp
test
jne
push
stos
pop
sbbb
mov
mov
pop
stc
shll
fidivl
pop
mov
cld
fwait
orl
cmp
jl
pusha
xchg
clc
cmp
cmp
decl
aaa
jle
push
sub
das
leave
push
pop
jmp
ret
dec
neg
sbb
cmc
or
xor
mov
or
les
repz
sub
in
orb
or
jne
pop
pop
bound
jmp
add
jl
dec
pop
push
sbb
ret
pop
xchg
push
xor
pop
xor
mov
je
inc
cmp
and
and
mov
cmp
outsl
pop
sbb
fcmovbe
and
pop
adc
pop
pushl
fcomps
or
adc
mov
add
xchg
xor
adc
lods
data16
les
or
rcrl
aas
insb
es
push
jb
push
pop
adc
mov
ss
pusha
outsl
pop
jge
add
lods
add
xor
push
fistl
push
and
push
sub
popa
pop
enter
pop
insb
xor
xchg
clc
mov
leave
xor
lock
pop
mov
xor
pop
dec
testl
xchg
out
and
adc
adc
push
push
xchg
jae
incb
fs
sbb
adc
pop
fdivs
mov
and
mov
xchg
jl
je
adc
fstpt
jge
stos
call
ret
popl
cmpsb
orb
add
jns
push
push
or
push
sbb
fwait
mov
sbb
cmp
sbb
or
dec
add
pushl
pop
pop
ret
int3
push
inc
xor
pop
inc
xor
mov
or
cwtl
pop
or
testl
mov
push
adc
pop
mov
shlb
and
or
mov
icebp
shll
mov
je
push
push
lea
testl
pop
inc
or
stc
jne
inc
push
mov
mov
sbb
outsb
or
outsb
fimuls
ja
fistl
cmp
xor
mov
jmp
mov
fsubr
sbb
jmp
pop
fnstcw
inc
sbb
pop
push
xchg
mov
jle
sub
sbb
loope
or
jg
icebp
sub
push
dec
jl
jge
aam
pop
in
out
pop
sbb
dec
loope
adc
popa
clc
xchg
mov
adc
add
inc
inc
push
test
icebp
fadd
sti
or
out
cmp
movsb
xor
insb
xchg
call
paddusw
xlat
test
jne
icebp
cld
xor
pop
lcall
pop
insb
xor
adc
push
inc
in
cmp
mov
push
jno
mov
and
pop
inc
inc
pop
gs
sub
aaa
cmp
mov
andl
aaa
mov
filds
clc
inc
loopne
cltd
sub
push
pusha
inc
into
es
les
push
or
fnsaves
pushl
xchg
mov
adc
and
sub
ss
sub
adc
push
push
sbb
mov
hlt
cmpsb
jle
pop
data16
dec
sub
push
in
call
pop
push
push
sbb
lods
xchg
cmp
subl
rorl
ds
push
pop
clc
test
pop
push
adc
add
in
outsb
push
aad
inc
cmpl
xorl
test
call
mov
add
push
out
mov
or
mov
mov
mov
sbb
popa
jp
jno,pn
movzwl
stc
and
push
add
iret
push
xor
xchg
cmp
mov
mov
xchg
push
cwtl
pop
pop
subl
adc
ret
inc
or
pop
inc
fstps
jo
sbb
inc
push
pusha
push
ss
call
pop
pop
cmp
popa
and
pop
outsl
push
andl
xchg
mov
cmp
rep
stos
mov
xchg
cmpb
lahf
mov
arpl
or
fiaddl
incl
aam
in
in
ljmp
push
ds
sub
lea
hlt
aaa
out
mov
sahf
xchg
addb
mov
movsl
pop
insl
mov
add
xchg
ja
adc
mov
out
cld
mov
inc
inc
adc
inc
inc
cmpb
mov
mov
ret
sbb
fdivr
hlt
or
jb
fs
push
lods
lods
push
mov
ret
adc
das
push
je
push
mov
cmp
jmp
inc
jns
jno
gs
cmpsl
iret
or
mov
jb
push
cmp
dec
push
jmp
or
out
insl
pop
add
push
jo
pop
jle
addl
jmp
cmp
or
negl
hlt
mov
iret
pop
cmp
adc
sub
adc
nop
cld
aaa
andl
sbb
movsb
cld
dec
adc
xchg
sar
xchg
or
insb
jbe,pn
lods
push
mov
dec
js
in
or
adc
mov
rcrb
lods
sub
iret
pop
xchg
xchg
lea
clc
cwtl
adc
push
push
aas
sarb
loopne
das
cwtl
decl
inc
repnz
push
aad
push
repz
xor
ljmp
mov
sub
and
mov
shr
test
insb
cli
in
incl
inc
inc
mov
xor
rcrb
push
in
cli
mov
in
xor
test
fcoms
dec
and
fxch
es
sbb
and
cli
sbb
cld
dec
push
fstl
lret
jb
mov
test
jle
add
xchg
add
jns
rol
adc
add
outsl
add
pop
fsubs
fidivl
loope
add
inc
jb
popa
lea
enter
lret
fcmovnu
mov
jb
jp
push
outsb
pop
mov
icebp
dec
dec
fldl
insb
adc
test
rcll
pop
les
dec
psubsb
dec
cmp
and
jecxz
lret
jne
or
sbb
sub
sub
sbb
add
jmp
icebp
das
loop
movsb
and
pushl
test
arpl
add
cmp
jne
mov
mov
push
scas
xor
out
xchg
clc
mov
test
call
test
je
jb
ret
sbb
add
int
xchg
xchg
mov
push
jmp
std
jmp
cld
fwait
mov
jmp
or
sbb
lods
add
fcoms
inc
out
jmp
mov
out
leave
or
pop
outsb
imul
add
adc
fstpt
aam
push
cmp
leave
data16
inc
cmc
or
mov
andb
or
mov
icebp
loope
popf
jl
loopne
and
add
sbb
lock
push
xlat
sti
adc
fisubs
sbb
cmp
and
shlb
call
movl
sbb
lock
sbb
mov
outsb
inc
push
test
pop
and
xor
and
and
sub
ret
or
rorl
xor
std
cld
jle
mov
testb
roll
and
jbe
mov
clc
jb
mov
jbe
xchg
loop
loop
sub
sub
movsl
jmp
insb
je
sarl
mov
or
pop
test
mov
pop
cmp
adc
add
or
and
mov
mov
loop
mov
cmp
push
or
sbb
pop
mov
int3
lea
lret
pop
mov
sub
popf
dec
repnz
nop
and
inc
aas
mov
push
lahf
add
imul
mov
cmpsb
stc
in
inc
in
call
lcall
aam
popa
lcall
xor
inc
clc
or
lock
push
lcall
pop
shll
popf
or
adc
nop
adc
or
fs
lea
jl
cld
jg
jo
mov
or
and
fldenv
xchg
mov
lock
stc
sub
popf
daa
pop
dec
sub
or
js
lods
mov
mov
add
dec
cmpb
pop
mov
loop
add
mov
and
mov
lret
add
or
xchg
pop
jg
add
push
dec
shll
sbb
aaa
dec
shll
sbb
dec
shll
adc
or
xchg
xor
rorl
or
dec
shll
pop
add
jl
jo
or
mov
jae
lcall
or
imul
inc
jmp
ja
ljmp
adc
sbb
daa
push
jne
enter
push
or
mov
push
push
jle
mov
sbb
push
bsf
sub
jmp
aas
pusha
popa
mov
xchg
lods
adc
inc
sub
icebp
mov
jmp
jl
sbb
lea
pop
xchg
mov
mov
or
mov
push
inc
and
test
data16
jnp
imul
sub
add
push
jno
call
xchg
cld
push
shr
outsb
loop
ja
cld
imul
jge
mov
xchg
xchg
sbb
dec
dec
or
fistpll
add
clc
jne
rcrl
or
iret
jbe
push
mov
rorl
cmp
mov
pop
fldl
adc
mov
das
lock
lea
xlat
and
decb
sub
subb
add
push
sub
push
mov
jns
push
outsb
mov
adc
add
clc
outsb
jnp
add
or
sar
icebp
aas
inc
mov
lods
jnp
pop
das
mov
lea
mov
pop
sub
mov
dec
pop
cmp
cmpsb
jbe
repz
outsb
imul
inc
ds
jbe
cli
fdivs
imul
push
mov
mov
ljmp
enter
shlb
xchg
insl
mov
dec
mov
dec
or
adc
in
in
or
cmp
mov
lock
xchg
lods
mov
das
push
add
mov
dec
arpl
add
mov
jbe
mov
inc
mov
jae
mov
in
fs
shr
jbe
sbb
lds
testb
jmp
and
lea
sbb
xchg
setge
inc
xchg
mov
mov
dec
cmpsb
sub
lret
mov
fbstp
or
loope
add
push
sbbb
add
push
call
pop
xor
or
push
cmp
testl
push
paddd
mov
dec
mov
pusha
add
fimull
mov
cmpl
insb
sub
jo
pop
arpl
mov
adc
adc
adc
xchg
sbb
sub
lea
push
mov
das
sbb
imul
nop
cmp
and
jle
mov
inc
mov
pusha
xchg
and
sub
lahf
fsubl
subb
pop
cmp
dec
sbb
pop
push
xor
push
mov
out
sub
mov
jmp
es
mov
shr
push
adc
pop
cmp
mov
jae
mov
cmp
sbb
mov
sub
decb
iret
jne
add
cmp
inc
mov
mov
cmp
es
fucomi
out
jne
and
push
jnp
xor
repnz
fmull
adc
jmp
es
sbb
out
es
mov
jnp
test
sub
or
pop
mov
jge
ja
addr16
mov
mov
push
cli
dec
sub
xchg
mov
nop
inc
mov
add
adc
sub
push
inc
or
mov
jne
xchg
and
push
sbb
decl
test
xlat
je
mov
lods
pop
pop
dec
jbe
ja
loop
push
into
jne
add
leave
jne
jbe
jl
shl
inc
jmp
mov
push
stc
inc
or
jg
aam
xorl
cwtl
aas
jle
pop
cmp
fsubrl
fwait
or
and
insl
and
adc
ja
pop
pushf
shl
in
and
mov
decb
jne
ss
mov
or
xor
sub
sbb
sbb
mov
sbbb
insb
jb
sarb
add
scas
jp
nop
test
add
inc
or
and
xchg
outsb
xchg
gs
decb
jge
les
jae
cltd
or
mov
bound
mov
jbe
cmp
jmp
sub
dec
add
jnp
jmp
divb
out
or
push
sub
or
mov
jle
or
adc
cld
mov
mov
and
jne
movsb
scas
aad
mov
movsb
aad
addl
adc
in
inc
add
add
subb
mov
lcall
xor
push
inc
cmp
cwtl
jb
xchg
push
xchg
push
xor
jl
cmp
je
pushf
rorb
cmp
loopne
inc
xchg
mov
int
mov
adc
loop
je
push
add
push
mov
mov
cwtl
or
pushl
fs
xchg
mov
je
jl
and
pop
in
mov
mov
incl
cmpsb
cmp
fsubrp
push
jno
inc
or
fcmovnb
cli
mov
inc
ret
aaa
imul
fdivr
xor
fstpl
xchg
bound
shl
repnz
jns
mov
addb
es
or
lea
std
push
or
ja
lea
dec
repnz
hlt
lea
cld
lock
std
jbe
inc
push
out
jmp
call
sub
jbe
dec
cmpb
dec
or
clc
xchg
das
pop
jnp
mov
inc
fs
inc
pop
sbb
inc
mov
mov
or
push
stos
sub
cmpsb
or
jo
pusha
mov
pop
adc
stos
aam
mov
in
inc
inc
sub
sub
movsb
insb
fists
addr16
mov
sub
negl
inc
je
adc
lods
sti
mov
test
dec
mov
call
cmp
ret
push
loopne
add
add
push
in
adc
roll
add
lahf
cs
xchg
push
stos
or
mov
jne
imull
push
test
adc
jne
jmp
inc
mov
pop
push
inc
inc
dec
je
adc
pop
aaa
sti
pop
jnp
jmp
sbb
je
and
das
jecxz
pop
lds
dec
push
pop
je
cmp
push
adc
out
insb
sbb
cli
sub
and
notb
daa
lret
jb
push
add
sub
or
ret
jne
cmp
sbb
testb
push
add
rclb
insb
idivl
mov
pop
jne
mov
test
inc
inc
pop
adc
pop
lock
jo
inc
push
push
or
xor
or
les
in
and
cmp
lods
or
cli
movsl
and
dec
push
jo
inc
xchg
xor
jle
cmp
jl
mov
call
int3
mov
sbb
pop
les
dec
fsubrl
cmp
roll
rcll
mov
and
andb
or
aaa
and
loope
push
fiaddl
sbb
pop
mov
pop
fimuls
les
adc
cld
mov
adc
insb
sti
fdivl
dec
fsubl
push
mov
jne
dec
in
sbb
fs
dec
divl
xor
inc
or
sbb
mov
mov
int
aad
push
fidivl
dec
or
or
enter
je
jg
xor
insb
gs
imul
sbb
fmull
mov
lods
jnp
jge
je
push
fs
je
fucomi
jbe
mov
add
jmp
mov
push
and
mov
mov
jno
xchg
dec
outsl
lds
test
push
decl
stc
icebp
dec
jae
je
xchg
repz
lret
sub
sbbl
pop
sbb
xor
mov
lods
cmpl
xor
jb
inc
in
push
pop
push
push
movsl
mov
add
sbb
lahf
add
and
jl
mov
sbb
add
pop
xor
xor
subb
and
add
cwtl
sub
and
mov
mov
je
gs
mov
sbb
jl
loope
inc
pop
pop
push
int3
sub
or
notb
dec
jo
loopne
pop
sbb
push
push
ds
clc
xlat
xchg
mov
adc
or
in
xor
lahf
add
sub
nop
adc
popf
loopne
pop
fildl
popf
je
sbb
hlt
or
sub
push
mov
dec
das
ljmp
roll
cmp
scas
jnp
loop
test
stos
cmp
and
loop
bound
adc
mov
push
mov
cld
nop
add
mov
adc
and
xor
push
pop
add
inc
cmp
sub
add
lcall
xor
orb
xor
xor
xor
sub
or
test
sbb
cmp
sub
adc
xor
xor
cmpsb
jmp
mov
mov
lcall
push
and
pop
add
lcall
cmp
or
std
mov
adc
jmp
add
test
pop
jae
movsl
les
loope
insl
mov
cmp
xor
negb
push
adc
hlt
xor
xor
lock
in
xor
xor
or
add
cmp
aam
add
fstpl
or
outsb
je
insl
and
stos
sub
outsl
jb
or
repnz
dec
push
push
adc
add
dec
inc
add
mov
inc
dec
dec
inc
adc
push
xor
cmp
sub
mov
je
and
imul
push
gs
jo
daa
aaa
outsb
outsl
je
add
ja
jg
addr16
arpl
data16
outsl
ja
cmp
push
outsl
outsb
aaa
divb
nop
cmp
je
xor
sti
insl
lods
std
jbe
jb
jne
xor
or
and
insb
sub
pop
pop
jnp
mov
das
pop
push
fsub
jae
fmul
pop
xor
imull
gs
xor
mov
ja
outsl
pcmpgtb
arpl
cmp
ss
and
gs
xchg
outsl
and
aaa
insl
jne
and
mov
lods
je
mov
arpl
rcll
xor
mov
imul
and
add
or
popa
insl
and
ss
xchg
dec
adc
scas
shrl
sub
sub
inc
clc
test
addr16
jae
shrw
subb
ret
bound
adc
dec
sub
pusha
cmp
push
imul
outsb
shufps
mov
jb
daa
or
push
inc
push
and
push
aam
pop
mov
cmp
add
add
loopne
sub
insb
ja
sbb
je
lds
fdiv
popa
jae
inc
add
push
scas
jne
adc
mov
popf
xorps
jae
popa
addr16
outsl
js
dec
push
loope
jne
and
sub
lcall
adc
ret
inc
je
cs
add
inc
leave
inc
adc
sbb
fs
cmp
add
imul
xchg
mov
or
add
enter
or
rorb
or
nop
xchg
or
xchg
add
pop
js
or
leave
mov
adc
and
sbb
jo
inc
or
jns
in
or
adc
adc
cmp
adc
adc
inc
jns
in
call
sbb
js
dec
sahf
cmp
jns
jp
cld
sbb
fnstenv
push
loopne
add
test
push
adc
sub
stc
jge
adc
das
movsb
add
leave
inc
jle
cmpb
cmpsb
fbld
cld
sbbl
mov
pushf
sbb
pop
inc
mov
and
das
inc
mov
iret
iret
push
enter
mov
call
push
scas
in
mov
ficompl
fisubrl
xor
fsubs
loope
in
fsubp
stc
cmp
jle
add
push
jp
jne
sub
dec
add
dec
enter
adc
add
and
add
shll
adc
ret
out
adc
mov
add
stos
repnz
add
dec
gs
jo
insb
insb
outsl
arpl
dec
outsl
fs
gs
popa
outsb
fs
popa
jle
sbb
xor
outsb
outsw
adc
insl
insl
aad
clc
out
pop
dec
imul
aad
ja
cs
jg
dec
add
adc
jne
jb
lea
outsb
and
outsb
push
mov
push
xorb
imul
pop
adc
popa
insl
pop
inc
cmp
fsubrs
add
jb
addr16
loopne
das
push
push
push
imul
dec
gs
add
inc
jns
pop
sub
jne
insb
push
inc
push
pop
add
ss
jne
pop
adc
mov
jns
gs
ja
jle
insb
dec
fs
insb
jae
push
popa
insb
add
test
jne
or
push
sbb
add
and
jle
cmp
stos
or
add
daa
and
ds
mov
je
inc
ja
call
mov
xor
add
or
shlb
push
sub
cmpsb
int3
bound
pop
sbb
jl
push
lock
pop
das
pop
mov
dec
inc
dec
or
pop
push
gs
in
fs
or
push
rorb
nop
add
mov
cwtl
mov
and
inc
ja
or
push
dec
or
lds
push
shll
and
xlat
fdivs
je
and
sub
jno
repnz
and
sbb
push
inc
enter
mov
aam
xor
mov
arpl
test
lcall
lcall
jae
outsl
outsl
je
or
push
jo
inc
adc
insb
cmpsl
pop
jmp
arpl
outsb
arpl
jns
fnstsw
das
imul
dec
sti
jg
or
shrd
lock
cmp
dec
push
pushl
or
pop
stos
inc
stos
popa
cmp
outsb
mov
lock
lock
add
xchg
add
movlps
push
in
sbb
lock
pushl
add
push
lock
add
lock
mov
add
xor
jl
test
mov
xchg
add
lock
outsl
ja
mov
inc
lock
adc
jp
scas
add
jle
add
add
ja
dec
add
jns
outsb
sub
add
lock
sub
jb
fistl
add
sbbb
pop
push
ss
jmp
jge
ljmp
add
insl
pop
imul
inc
jmp
insb
das
int
or
add
pop
mov
pop
ret
add
inc
jle
out
dec
stos
add
lret
lock
xchg
mov
sbb
neg
sbb
push
movsb
or
inc
out
pop
mov
mov
and
add
add
add
xlat
mov
cmpsl
inc
iret
jge
ja
lock
add
or
inc
mov
int3
lock
add
lret
shlb
lock
ja
and
insl
mov
lock
loope
cmp
fldt
or
add
sub
in
fnsave
add
outsb
lock
mov
ret
repz
add
or
lods
sti
je
add
addl
add
out
jbe
jnp
inc
add
jne
cmp
lss
mov
dec
bound
dec
js
lock
jns
sbb
pop
in
pop
sub
add
stc
fcmovnb
add
cmp
inc
add
je
adc
outsl
lret
lock
js
aaa
inc
imul
neg
sbb
mov
stos
mov
ljmp
lcall
lea
add
xchg
loop
push
or
sub
je
outsb
idiv
mov
add
xor
mov
add
mov
mov
cmp
pop
push
adc
mov
add
xchg
ret
outsb
push
jmp
and
lods
sub
mov
incl
or
xor
or
cmp
adc
pop
or
or
fildl
push
push
push
test
cmovl
xor
inc
or
adc
or
dec
inc
idiv
jmp
sbb
or
or
aas
push
adc
xor
pop
adc
and
push
xor
adc
jg
mov
sbb
cmp
pop
sbb
adc
sbb
sbb
lock
add
push
movlps
or
inc
adc
or
adc
in
mov
sbb
adc
sbb
or
adc
and
and
mov
mov
out
or
adc
or
sub
add
jg
negb
push
outsl
mov
adc
or
push
movups
dec
jnp
outsl
mov
sbb
scas
add
sub
sbb
add
dec
push
add
test
mov
push
sbb
push
or
std
pushl
icebp
or
dec
add
push
sbb
adc
or
in
mov
mov
or
inc
cmpsb
lock
add
sti
mul
ficoml
push
test
sbb
adc
or
daa
cmp
sbb
pushl
mov
sbb
pop
push
xor
pop
ret
in
sbb
pop
adc
rcrl
push
add
lret
mov
add
add
jmp
and
adc
test
add
push
inc
mov
mov
sub
push
dec
aam
icebp
les
push
xor
cmp
xchg
pop
or
stos
outsb
jbe
push
add
mov
cmpsl
imul
mov
subl
nop
insb
push
ret
add
js
cld
xchg
jl
add
enter
add
pop
shrl
pop
cmpsl
add
je,pn
das
enter
cld
xor
add
inc
lock
shll
enter
ljmp
out
add
es
pop
cld
sub
pusha
daa
push
inc
shrb
jae
arpl
outsb
int3
jmp
dec
or
cltd
push
jb
push
xor
adcb
fcoml
add
jl
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
