nop
nop
nop
nop
nop
push
nop
ret
fs
int3
cmp
fldenv
in
mov
cs
mov
xor
sub
stc
xor
lcall
mov
mov
push
stos
stos
dec
xchg
jge
test
add
rorb
fmulp
sbb
lods
adc
inc
and
enter
jbe
dec
insb
mov
mov
xlat
neg
pop
sub
add
pushf
andl
or
and
hlt
mov
push
cmp
sbb
hlt
popf
jnp
push
enter
sub
cmp
fidivrl
cld
lock
mov
leave
mov
and
fwait
mov
adc
popl
xor
lcall
push
icebp
stos
roll
hlt
mov
scas
jne
movsl
aad
pop
dec
xorl
mov
lcall
loopne
stc
loope
inc
and
inc
lahf
cmp
add
pop
mov
lds
repz
stos
in
sub
iret
dec
and
jmp
adcb
sbb
ret
subb
loope
pop
notl
dec
pop
inc
push
icebp
daa
adc
fimuls
cmp
aad
daa
mov
es
fwait
hlt
loope
adc
inc
lret
data16
in
daa
out
dec
mov
inc
mov
or
imul
int
lahf
inc
sbb
stos
xchg
insl
ds
pop
jl
or
jmp
fwait
mov
jne
popf
clc
stc
fldl
jp
mov
out
aad
sub
and
push
mov
jle
shlb
int3
out
mov
pmuludq
aas
pop
push
inc
xor
stc
es
push
in
sbb
lods
push
lret
and
xchg
cmpb
inc
popf
out
fsubrs
xor
cld
es
aaa
icebp
sbb
inc
add
sbbl
loopne
daa
jge
sbb
and
inc
pop
ja
mov
jle
bound
out
add
insl
mov
jo
xorl
pop
mov
addr16
daa
jno
or
arpl
rorl
test
sbb
daa
lcall
inc
inc
jle
nop
ds
jl
mov
aaa
lock
je
movl
adc
popf
pop
xchg
out
aad
push
mov
and
xchg
add
cmpsl
inc
xorb
sbb
fcmove
in
sbb
push
ret
adc
xchg
movsl
jnp
ljmp
fs
push
or
ljmp
out
xor
xlat
fiadds
lea
adc
outsb
push
call
pushf
push
int3
mov
dec
push
sbb
cmp
xlat
les
lods
mov
lea
sub
mov
aam
push
pop
sub
xchg
sub
and
cmp
aaa
dec
int3
loopne
adc
sub
lret
das
cmpsl
lret
rclb
fs
pusha
std
and
imul
fdivrl
and
stos
hlt
sahf
push
push
or
popa
xchg
aas
cmp
mov
pop
push
addr16
cwtl
popa
mov
fxam
sub
dec
jg
cmp
push
cmc
insb
push
jl
xor
xor
and
imul
mov
or
inc
lods
fldcw
fdivrl
or
mov
dec
cltd
nop
movsl
pushf
inc
dec
rcrb
ret
mov
cmp
icebp
jmp
jbe
and
int
or
add
fdivrs
adc
sbb
insb
xchg
iret
insb
cmp
mov
sbb
out
test
pop
mov
orb
bound
sbb
pop
add
in
scas
mov
fdivs
repnz
std
push
in
dec
jl
sub
int3
cli
xor
je
ljmp
and
jo
mov
dec
sbb
sub
cltd
scas
sbb
sub
or
popf
jne
cmp
sub
adc
adc
fsubl
dec
mov
fscale
lock
dec
cmp
jne
pop
call
cltd
pushf
xor
fmull
fsts
fdivs
mov
dec
cmp
mov
cmp
mov
roll
shrb
loope
sbb
push
loop
pusha
mov
or
mov
inc
cmpsl
lods
je
in
mov
bound
mov
stos
inc
mov
or
jmp
xchg
loop
popa
fsubrl
incl
push
int
xor
inc
repz
inc
mov
and
jno
jmp
insb
xor
pop
push
js
mov
scas
inc
nop
fs
pop
loopne
insb
lret
lret
cwtl
dec
mov
mov
or
add
lods
into
inc
lcall
sbb
popa
ljmp
jns
int3
push
mov
dec
sarb
mov
test
mov
scas
pop
push
mov
nop
lret
lcall
dec
fcomp
adc
ss
jno
test
push
aam
adc
mov
bound
cltd
int3
pop
aam
mov
call
cmpsl
mov
call
push
dec
mov
or
enter
add
jl
jg
mov
dec
daa
inc
test
out
shll
rclb
adc
es
mov
leave
and
popf
andb
movl
cmp
lahf
idiv
mov
add
ss
rclb
xchg
jg
fcmovne
sub
or
shll
and
aad
dec
dec
inc
aad
add
mov
cmp
xchg
or
lret
jnp
sub
push
add
jae
in
push
xor
xor
push
xchg
dec
sbb
adc
sti
enter
adc
hlt
test
out
lods
movq
xor
sbb
lods
loopne
insb
or
mov
xor
frstor
je
cli
repnz
es
mov
dec
sbb
mov
nop
push
adc
nop
test
inc
outsb
and
cmp
xchg
sarl
outsl
test
mov
jne
mov
mov
jns
insb
mov
xchg
mov
xchg
imul
inc
push
test
lock
jge
dec
or
fsubr
sub
sbb
fmull
aam
cld
ds
mov
sbb
mov
push
mov
add
mov
shll
test
fsubrl
cli
outsb
jp
pop
rorl
and
aas
je
adc
push
cmpsl
lods
add
inc
jno
jno
inc
imul
cmp
push
out
push
cld
push
ret
aam
hlt
cmpsb
pop
sub
into
inc
in
arpl
subb
mov
ror
mov
aas
arpl
jecxz
xor
xorb
int
and
xor
fcomps
mov
push
ja
sub
aam
mov
pop
sub
les
cli
out
inc
dec
and
rcrl
rcrl
insb
scas
mov
lahf
in
loop
mov
mov
and
cmp
lcall
mov
and
mov
xchg
std
arpl
xchg
scas
das
push
sub
mov
ret
push
aam
add
xchg
pusha
pusha
dec
cld
sbb
adc
mov
sbb
clc
adc
adc
mov
fstl
movsb
ljmp
mov
mov
dec
inc
and
mov
ret
mov
imul
sbb
adc
and
mov
cmp
and
mov
jg
loopne
jb
pushl
adc
loope
or
xchg
cmpsl
js
xor
push
jno
scas
es
and
mov
rcll
aas
add
mov
or
gs
mov
or
sub
pushf
xlat
out
dec
push
movsb
loope
dec
pop
sbb
jae
aas
sub
jle
out
jp
push
or
mov
cli
mov
mov
or
mov
mov
adc
sbbb
lea
jmp
push
inc
shlb
out
pop
push
and
push
aad
hlt
jle
inc
out
negb
in
push
fmul
mov
testl
mov
mov
test
jo
sub
pop
add
stc
mov
test
mov
push
pushf
out
mov
push
hlt
into
lods
dec
popa
inc
cmp
inc
xchg
jle
aam
sub
dec
jmp
js
add
out
out
add
add
xchg
popa
or
es
stos
mov
add
xchg
lea
dec
lock
jb
adcl
in
xchg
fs
sti
clc
scas
pusha
sub
xchg
sbb
mov
mov
sahf
add
mov
popa
mov
inc
inc
xor
and
inc
push
cli
aad
js
je
sti
dec
and
mov
xor
xlat
ljmp
daa
jmp
jg
lods
dec
mov
mov
sbb
push
dec
loopne
add
xor
mov
xchg
sbb
sarl
and
lods
pop
jecxz
fistl
addr16
fwait
push
adc
cmp
mov
push
jmp
in
push
popw
stos
xor
je
inc
testb
add
mov
stc
cltd
inc
sti
insl
mov
pop
out
adc
aas
aaa
and
sbb
pop
inc
popa
lock
rcr
in
inc
in
mov
cmp
jnp
and
and
imul
pop
cmp
jecxz
inc
rclb
ror
lock
aam
dec
cli
mov
fwait
sub
pushf
cwtl
jo
mov
clc
mov
js
insl
cmp
daa
jbe
int
xchg
es
xchg
cli
faddp
pop
push
mov
dec
add
ret
xchg
pop
lock
rorb
in
mov
testl
nop
or
scas
inc
outsb
adc
mov
jle
out
pop
and
shlb
clc
dec
sub
xchg
enter
mov
cld
popa
leave
push
sbb
xlat
out
pop
sbb
dec
or
cli
xor
stos
push
cld
push
fidivl
aad
pop
jp
mov
outsb
mov
mov
imul
ds
pop
lock
adc
xchg
mov
inc
das
fnsave
lahf
fdivl
push
popa
sub
out
jo
or
cmp
loope
add
rcll
mov
or
sub
dec
lcall
daa
insl
push
push
insl
inc
aas
daa
fisttps
mov
adc
movsb
push
sub
adc
sbb
inc
push
add
aas
cs
dec
andb
inc
sbb
aam
cmc
sub
in
xor
jne
fmuls
addb
mov
xchg
loope
mov
fdivl
or
xor
cmp
scas
xchg
std
in
mov
xchg
fnsave
loope
dec
hlt
mov
rolb
jmp
cwtl
cmp
mov
sarb
xor
stos
orb
into
xor
dec
jmp
dec
sub
inc
sub
or
jp
add
mov
popf
pop
mov
fwait
ljmp
outsl
hlt
imul
lahf
jmp
inc
jle
stc
jecxz
sub
and
cwtl
jnp
and
mov
sti
enter
pusha
fidivs
adc
push
fcompl
add
jne
push
mov
mov
and
xchg
loope
test
popa
outsb
lcall
lret
pop
jecxz
fisubl
xlat
sub
idivb
sbb
inc
inc
mov
out
fwait
cmpsl
dec
push
or
cmp
adc
cmp
shl
cmpl
stos
lret
nop
mov
pop
mov
jb
nop
inc
xchg
scas
lods
xchg
incb
out
mov
bound
mov
xchg
cld
jno
fcoms
clc
xor
inc
rcrl
pop
dec
mov
mov
push
jmp
adc
mov
bound
mov
imul
cmc
add
repz
jmp
leave
mov
dec
leave
gs
xor
or
imul
push
sub
push
mov
cltd
inc
daa
out
push
push
outsb
push
lods
and
lcall
popa
jmp
pop
xchg
testb
xor
inc
pop
out
ss
push
or
std
shr
pushf
lock
or
fildl
in
enter
inc
int
hlt
mov
fmulp
mov
jmp
aam
out
or
cmp
mov
sub
outsb
repnz
mov
lds
mov
or
sbb
in
lock
ljmp
mov
ljmp
clc
imul
dec
mov
negb
cwtl
loop
dec
lcall
jmp
inc
sbb
xchg
insb
xchg
call
cmpsl
jo
sbb
scas
gs
rorb
jne
movsb
cli
and
add
jg
pop
or
aaa
adc
jl
std
testl
mov
cltd
mov
inc
cmp
mov
xchg
adcl
xchg
push
push
cmp
outsb
std
inc
xchg
cmc
mov
adc
ret
xor
inc
repz
int
jmp
clc
insb
mov
sahf
sub
xor
test
jb
stos
cmp
js
add
ror
or
jb
out
and
shll
bound
sub
xor
inc
and
jb
iret
xchg
cmp
imul
int
jmp
or
jge
sarl
fs
mov
and
add
sbb
mov
loope
cmc
sbb
and
popa
add
and
jecxz
mov
scas
or
and
dec
ljmp
jb
arpl
push
xchg
jbe
sbb
mov
scas
add
mov
push
lock
push
or
pop
cmp
mov
test
cmpsl
fidivl
pushf
test
mov
mov
ficompl
add
mov
sub
stos
fadd
xor
mov
jge
in
add
xchg
mov
das
inc
and
push
sti
fsubl
shll
iret
xor
mov
cmp
adc
subb
inc
jg
push
test
cmc
addr16
or
cld
in
add
sbb
cmp
lret
adc
imul
jno
pop
xchg
or
in
xchg
and
jmp
or
loop
movsl
cmp
test
mov
and
out
stos
push
ds
jge
mov
iret
pushf
imul
and
and
divl
rcrl
test
lock
push
pushf
xchg
fs
addr16
or
addr16
outsl
mov
xchg
ret
push
adc
and
mov
icebp
and
int3
push
shll
adc
pusha
loope,pt
es
inc
into
int
xor
pop
cmp
fcomps
pop
xchg
je
ljmp
jae
in
and
cltd
scas
mov
add
cmp
and
imul
pop
mov
adc
ja
lock
and
and
mov
xchg
mov
imul
pop
mov
add
jae
mov
cli
sbb
movsl
aam
scas
or
pop
sub
or
dec
mov
repz
adc
xchg
mov
clc
mov
divl
sbb
lods
shll
mov
aaa
pop
aas
jnp
xchg
jns
dec
add
stos
hlt
cmp
inc
pop
nop
inc
icebp
mov
cwtl
popa
sbbb
mov
mov
or
in
mov
pop
pop
es
add
inc
sarb
insb
dec
sub
jl
sbbl
pushf
ja
xorl
mov
pop
mov
jl
scas
popf
sbb
adc
push
lret
mov
mov
jmp
jmp
testl
in
dec
mov
outsb
pop
jb
mov
sub
andb
shlb
in
mov
stc
lds
idiv
cmc
add
filds
adc
lahf
cmp
out
fwait
hlt
mov
enter
shlb
push
xchg
sbb
in
outsl
push
add
loope
out
fs
sti
mov
sub
jne
leave
popa
push
arpl
dec
and
pop
cwtl
out
nop
inc
sub
lret
lcall
push
addr16
xchg
xchg
je
inc
jp
ret
divl
push
mov
mov
stc
nop
cli
push
push
shll
jmp
shrl
aaa
iret
cmpsl
push
or
dec
xchg
add
push
xchg
add
cltd
popf
dec
ret
pop
test
jno
inc
pusha
jb
xor
mov
movsb
jl
nop
sbb
int
mov
stos
ss
jmp
mov
bound
decb
adc
hlt
jg
lahf
lret
std
jb
or
dec
nop
in
popf
into
and
inc
rolb
xor
adcb
outsl
lcall
clc
fnsave
xchg
fimull
jmp
movsb
and
test
leave
rcrl
push
sbb
mov
mov
test
or
mov
lcall
push
sar
lea
mov
out
pop
cmc
xlat
dec
test
inc
mov
jns
add
mov
in
xor
mov
int
inc
sub
or
out
repz
or
sub
adc
lock
stos
js
inc
dec
sbb
stos
adc
xchg
pushf
and
lods
and
pop
xor
aad
fdivs
data16
adc
ds
leave
jmp
fnstsw
jns
push
paddb
fimuls
pop
mov
jecxz
mov
ret
pop
test
fstpl
aad
pushf
inc
push
aaa
fwait
loope
daa
int3
push
cmp
mov
and
xor
push
jne
push
inc
test
pop
push
movsb
mov
lea
add
mov
mov
or
addr16
push
int3
imul
int
mov
mov
in
mov
and
movsl
push
sahf
and
test
pop
add
or
pop
mov
mov
xchg
leave
and
popf
or
shlb
pop
mov
cmp
repz
imul
mov
mov
in
movsl
in
call
ljmp
inc
mov
push
rcrb
gs
push
or
repnz
js
mov
ja
int3
test
sbb
ud1
sbb
enter
add
rclb
sti
negl
push
dec
push
pop
jg
sbb
pop
in
dec
imul
mov
push
xchg
sbb
xchg
cmp
stos
mov
cmp
hlt
insl
outsb
cwtl
and
lods
dec
cmp
call
jno
cmpsb
dec
xchg
sbb
iret
cmpsb
sub
fdivr
cli
inc
mov
cs
iret
mov
mov
ret
lret
out
xor
test
sti
jno
les
push
test
inc
xor
jo
pop
pop
loope
loopne
jns
sbb
adc
mov
pop
mov
adc
inc
fsubl
push
movsl
xlat
pop
das
popl
mov
sub
loopne
push
in
cwtl
push
xchg
mov
ds
movsl
in
icebp
lds
lds
shr
hlt
dec
mov
fstl
ja
xchg
aaa
ja
leave
or
cmp
mov
cmp
cmp
divb
lock
sbb
arpl
clc
jb
ret
sub
sbb
push
and
adc
iret
pop
test
jbe
fdivr
xchg
xor
imul
cmp
sbbb
insb
pxor
stos
and
mov
jge
call
xchg
ja
jae
repnz
dec
outsb
or
idivl
pop
inc
leave
aad
pop
shlb
mov
out
stos
xchg
fnsave
lock
test
mov
adc
icebp
adc
mov
pop
jle
xlat
jns
out
mov
sub
stos
lahf
stc
out
lahf
mov
scas
popf
stos
push
jno
movsb
add
mov
leave
arpl
stos
push
or
in
movsl
dec
adc
inc
cltd
in
mov
xchg
adc
in
leave
xor
xchg
mov
dec
push
lods
add
loop
inc
lret
fidivl
cs
pop
mov
jle
pop
fidivs
add
call
pop
adc
pop
clc
lods
cmp
pop
mov
jne
mov
mov
fldl
das
or
fistl
xor
sbb
push
inc
mov
mov
sbb
jo
inc
inc
inc
cwtl
pop
out
fcomi
cmp
sub
pop
mov
mov
jp
dec
hlt
adc
out
bound
test
lods
sub
leave
repz
movsb
xchg
dec
push
je
stos
fwait
insl
out
pop
adc
adc
and
or
pop
inc
daa
aad
push
pushf
movsb
dec
sub
xor
jecxz
jb
aaa
out
push
mov
xchg
js
jno
pop
enter
add
outsl
jae
mov
xchg
lock
fnsave
loop
lock
push
daa
sarb
std
cmp
pop
imul
mov
shll
inc
push
ss
insl
cmpsb
ja
sbb
int
sbb
push
or
jp
js
into
scas
cmp
or
arpl
jmp
test
rcrl
pop
gs
ds
add
sub
push
sbb
xchg
fucom
test
nop
out
adc
into
cmp
and
testb
adc
add
cmp
fisttpl
stc
jl
pop
adc
or
xchg
dec
stos
cmp
mov
movsb
cmc
sbb
sarl
xchg
pop
cmc
mov
scas
out
jmp
cmpl
xchg
xchg
add
dec
insb
jbe
inc
clc
test
fs
aad
cmpsl
in
loope
in
outsb
adc
or
mov
or
push
out
mov
orl
aas
cltd
jb,pn
xchg
jle
aad
mov
shrl
sti
lea
aam
clc
dec
sbb
pop
arpl
fldt
xor
jle
lret
push
mov
pop
sub
xor
jnp
or
jne
gs
shr
sub
push
xor
test
mov
fcomi
or
sti
push
add
jecxz
cmp
orl
fs
jecxz
js
adc
cltd
imul
and
mov
mov
cmp
addr16
xchg
jbe
push
aad
push
gs
sbb
adc
xchg
movsl
cmpsb
imul
fists
subb
clc
sub
jp
xchg
mov
lds
frstor
adc
and
sbb
or
jnp
loope
jge
and
adc
lcall
cmpsb
fwait
mov
mov
xchg
fidivrs
into
cli
lods
dec
fcomps
and
shr
sbb
repnz
outsl
test
jp
sub
dec
stos
scas
test
pop
pop
jg
sub
ljmp
mov
ret
push
add
hlt
mov
mov
mov
or
bound
mov
push
nop
fsubs
dec
dec
outsl
imul
xlat
jo
cmc
mov
dec
shlb
pop
xor
inc
out
jne
cmpsl
aad
pushf
pop
sub
pop
insl
into
sbb
or
pusha
test
push
dec
std
dec
cwtl
rcrl
pop
xor
ret
mov
int3
mov
pop
mov
mov
ss
jo
push
dec
xlat
cmp
fistps
mov
andb
adc
pusha
cmp
adc
cmp
testb
add
insb
sub
repnz
pop
movsb
arpl
jle
xor
outsb
addl
cmpsl
adc
lods
mov
js
jae
push
in
inc
push
adc
lods
sti
nop
xchg
out
popa
ret
dec
cmp
daa
mov
shl
jl
loope
vcmpsd
imul
xchg
mov
lcall
inc
scas
loopne
push
call
pop
cmp
adc
and
pushf
movsb
adc
or
or
pop
jp
fsts
cmp
pop
and
pop
jno,pn
xor
in
in
push
and
inc
inc
and
inc
xchg
xchg
out
lea
aas
repnz
ret
leave
fwait
sub
movsb
sbb
stc
sub
cltd
mov
leave
cmc
xchg
fisttpll
push
or
xchg
or
xchg
and
loope
sbb
movzbl
pop
inc
arpl
rcrb
in
push
iret
jecxz
and
cli
xor
cltd
jns
inc
sub
lahf
add
inc
and
sbb
push
into
int3
mov
jne
in
ds
mov
cmp
and
stc
and
adc
hlt
pand
add
dec
sub
sbb
ds
xchg
call
popa
push
push
pop
and
sub
sbb
cli
mov
test
add
aad
cmpsb
leave
push
bound
shll
insl
addr16
cmc
mov
in
adc
xor
mov
cltd
js
jno
sub
lods
or
push
push
or
fisubrs
ret
mov
enter
pop
push
std
repz
xor
test
mov
lahf
in
les
les
int
icebp
out
adcb
and
xor
jle
mov
jmp
fcom
ja
and
scas
and
jmp
imul
mov
xor
push
in
pop
adc
mov
pop
pop
test
add
xchg
adc
sub
aam
sbb
pop
fildll
adc
xor
and
sub
pop
call
lahf
cli
shlw
push
pop
mov
lahf
lock
in
inc
pusha
repz
cmp
push
lea
mov
xchg
and
lahf
xor
push
enter
aas
je
mov
xlat
outsb
xor
jo
xchg
xchg
imull
hlt
icebp
es
insl
pop
adc
mov
or
pop
daa
mov
xor
out
mov
shrb
mov
inc
arpl
xor
addb
jae
in
push
cs
mov
stc
lcall
xor
dec
repnz
jno
and
pop
jl,pt
cmp
add
repnz
cli
js
sti
xchg
sbb
les
push
pushf
mov
daa
js
movsl
mov
jo
mov
jae
lods
ret
adc
mov
movsb
cmpsl
sub
and
push
xchg
mov
add
jb
or
loope
loopne
pop
jno
mov
and
mov
pop
and
adc
test
xlat
mov
mov
inc
push
fidivs
lods
js
fistpll
popa
mov
mov
or
shll
movsl
ret
ds
out
mov
or
sti
adc
repnz
loope
xchg
adc
frstor
in
stos
sub
sbb
mov
push
outsl
pop
sub
mov
mov
aam
in
cmp
mov
push
mov
fcmovbe
fisttpl
outsb
rcrl
pop
hlt
mov
ficoms
jg
push
jae
mov
insl
int
jne
movsb
sbb
ja
xor
cmc
lahf
xchg
call
cmp
mov
leave
mulb
mov
pusha
dec
sbb
sarl
std
int
jmp
jbe
clc
inc
adc
push
cmpsl
in
testl
jb
mov
in
mov
dec
lcall
in
xor
pop
popa
push
aas
in
lahf
ret
adc
stc
mov
pop
addl
cmp
mov
pop
inc
xchg
or
add
repz
inc
pop
push
cmp
and
stc
shll
pop
inc
test
call
mov
shll
sub
jbe
cmp
adc
xor
sub
push
pop
clc
sub
outsl
mov
seta
loope
scas
sbb
pop
cmp
insb
repnz
lea
dec
jns
mov
jmp
in
mov
stos
pop
sub
add
cwtl
out
loopne
mov
sbb
xchg
out
push
push
jno
les
test
loop
gs
sub
and
fucom
outsb
addr16
sbb
out
lret
or
mov
push
xadd
xchg
hlt
daa
cmpsb
js
cmp
jge
lahf
ds
insb
mov
xor
mov
cmp
roll
ljmp
insl
aas
sbb
out
push
cmp
movsb
mov
pop
xor
sub
add
xor
mov
adc
sbb
adc
and
push
pop
and
fimull
jnp
mov
push
sub
cmp
ja
pop
fnstenv
test
test
sbb
fisttpll
lds
jno
jg
mov
scas
cmp
sbb
repnz
rorb
xchg
cmp
insb
call
cltd
fsub
es
sub
sbb
fstl
stos
repnz
inc
out
repz
nop
push
xor
inc
add
jnp
dec
mov
sub
imull
lock
divb
xchg
in
test
jmp
iret
pop
pop
das
add
mov
scas
xor
dec
dec
mov
enter
and
push
test
cs
aaa
int
pop
and
loop
lret
push
cs
lret
dec
rol
frstor
xchg
ljmpw
inc
xor
movl
icebp
stos
push
popa
test
rcrl
push
dec
or
push
push
mov
cmp
jmp
nop
adc
pop
lods
in
mov
lret
cmp
or
xchg
out
or
push
and
daa
pop
sti
jae
rcll
mov
dec
adc
sub
lcall
les
icebp
mov
inc
pop
cmp
sti
popa
lret
pop
in
hlt
ljmp
push
aam
gs
mov
clc
xchg
xor
mov
in
cmp
mov
aam
sahf
mov
push
inc
shll
adc
add
push
das
xchg
adc
sbb
test
adc
jne
xchg
je
mov
xchg
mov
and
fstpl
cmpsb
aas
jnp
stc
pushf
lods
sar
popa
lahf
ja
in
cli
repnz
stos
sub
jg
jl
push
test
and
mov
fildll
pop
xlat
sti
sbb
test
mull
call
dec
mov
dec
pop
dec
push
xor
loope
or
sarl
aaa
sahf
mov
test
pop
fsubl
and
gs
je
loopne
adc
fiadds
mov
xor
loope
push
loope
push
xchg
inc
inc
add
mov
sub
jecxz
jno
das
inc
inc
jmp
inc
rclb
inc
sti
jecxz
aam
jmp
fistpll
mov
mov
adc
add
pushf
jns
or
rcl
xor
inc
inc
adc
mov
mov
gs
jae
sub
sbb
fmuls
mov
out
movsb
and
mov
and
or
repnz
pop
mov
mov
push
push
mov
aam
in
fadds
fadd
in
imul
push
enter
inc
imul
lret
arpl
mov
mov
in
negb
cmp
sbb
hlt
add
inc
lret
cltd
xchg
push
sbb
jp
mov
inc
ret
lcall
xor
pop
imul
cmp
inc
fstpl
push
jg
mov
out
cs
dec
jns
sahf
cmc
cmp
into
cltd
js
adcl
pop
adc
data16
and
add
in
stos
idivl
popf
push
mov
inc
test
sub
sbb
inc
movsl
je
test
enter
fcoms
jns
mov
xor
adc
jno
mov
xchg
notl
mov
mov
loopne
rcll
jp
mov
cmp
movsb
es
insb
jae
mov
cmp
lahf
dec
mov
xchg
lret
stc
imul
and
and
mov
mov
call
push
push
xor
adc
mov
cmpsb
and
push
sub
test
or
loop
sbb
pop
imulb
fildll
fwait
xchg
movsb
hlt
jle
push
in
mov
out
jb
gs
movsl
mov
xchg
mov
sub
cmp
jns
cld
adc
test
andb
call
addl
test
or
push
pop
jle
xor
push
bound
std
add
incb
inc
dec
push
scas
ja
adc
std
movsb
mov
and
aam
or
jo
popa
mov
mov
gs
popa
nop
inc
in
push
mov
sbb
repz
jae
xor
xchg
lcall
fadds
xor
or
jecxz
movl
fcoml
mov
ret
inc
adc
push
mov
data16
and
cltd
add
and
mov
inc
push
adc
outsl
cmp
hlt
sbb
pop
out
fldl
filds
sub
outsl
push
dec
mov
sub
out
and
xchg
test
loope
push
aas
std
int3
sbb
hlt
sub
testb
or
dec
in
shr
repnz
test
dec
mov
pop
jge
icebp
jnp
pop
mov
sbb
adc
inc
jmp
call
push
and
pop
in
jmp
cmp
push
fimuls
jne
pop
fldenv
dec
dec
scas
pop
ds
cmpsb
fiaddl
or
popf
jnp
cmp
and
lds
jne
jecxz
mov
xor
es
cmc
into
sub
addb
push
mov
fwait
iret
call
push
jnp
pop
fsubl
add
xchg
outsb
mov
aas
push
inc
mov
jecxz
es
daa
lret
scas
outsl
or
sub
push
mov
sbb
popf
push
mov
xor
lock
dec
bound
pop
test
insb
shll
movsb
loopne
out
xchg
mov
rorb
cmp
jo
adc
xlat
inc
lods
or
pop
mov
or
xorl
test
add
mov
push
mov
dec
xchg
fstpl
repnz
cmc
mov
push
push
cmpl
mov
pop
sub
mov
push
lret
pop
cltd
lea
or
ret
xor
int
jmp
mov
jp
adc
cmp
mov
orl
pusha
pusha
sti
jae
cmp
dec
out
scas
dec
fxtract
addr16
movb
ja
adc
ja
sub
mov
fistl
in
or
test
push
and
adc
cmp
jbe
pop
pop
fdivs
mov
insb
je
lods
test
mov
mov
or
cmp
jae
dec
test
xchg
cmp
cld
movsl
jp
mov
jmp
fbstp
clc
inc
test
xchg
inc
push
roll
out
je
test
mov
push
cmp
lods
mov
int3
dec
push
jle
jle
fdivrs
push
sub
insb
inc
jb
xchg
shll
into
lret
rorb
int3
mov
inc
lods
fcmovu
sbb
popf
data16
stos
cwtl
sbb
in
add
adc
scas
lea
or
mov
sub
jno
arpl
cs
and
pop
push
xor
test
iret
or
lods
mov
pop
aaa
jb
daa
lret
xchg
xlat
mov
repnz
dec
ret
cmp
lret
mov
ficompl
lahf
add
or
shr
iret
mov
dec
std
pushf
je
jnp
or
mov
mov
mov
sub
lods
xor
lcall
xchg
jae
daa
mov
aam
test
fs
std
sarl
in
dec
xor
dec
mov
fwait
cld
mov
pop
mov
addr16
stc
arpl
das
inc
aam
add
jg
std
int
gs
mov
sbb
lret
les
pushf
cmp
push
cmp
jno
shr
fldenv
out
mov
test
sbb
adc
jge
lret
xchg
mov
jne
mov
push
mov
test
ljmp
int3
cli
cmp
pusha
pop
leave
xchg
cs
xor
push
mov
lods
pop
bsr
fidivs
inc
sar
int
jnp
adc
in
push
shll
out
push
mov
popa
test
orl
cli
int3
mov
cmc
xlat
ret
jl
cmp
sti
arpl
mov
ret
xchg
xchg
mov
fucom
mov
stos
xor
outsb
xor
jecxz
loop
pop
sub
lods
insl
mov
pop
scas
inc
jno
lea
movsl
dec
pop
in
rcrl
and
daa
mov
push
data16
test
mov
and
cli
pop
test
js
iret
out
sbb
stos
xchg
or
xchg
stos
sbb
stos
cmp
add
pusha
push
and
mov
popf
sbb
mov
xchg
xchg
sub
mov
dec
xchg
imul
lods
jp
or
cmp
and
data16
add
pop
movsb
or
lea
push
stos
xor
gs
and
push
in
xor
dec
jecxz
jnp
sbb
push
repz
rolb
add
loopne
push
cmp
fsubp
sbb
mov
dec
sbb
mov
daa
jbe
fnstcw
ss
pop
ja
sub
sbb
fmul
mov
fistpll
call
push
mov
cmp
rcll
std
in
cmpsl
jne
sbb
mov
push
shrb
shl
pushf
comiss
jno
js
fldt
ds
repz
jmp
and
adc
sti
jmp
and
ror
push
xor
gs
mov
movsb
insb
push
mov
out
mov
fistps
mulb
fsubr
mov
add
xchg
shlb
cmpsb
xorb
ret
loop,pt
sub
push
std
out
push
jmp
icebp
das
fwait
ret
cmp
adc
popa
or
aas
adc
ret
jne
cmp
and
mov
pop
cmp
jns
shlb
pop
and
out
xor
lret
popf
inc
cltd
jo
mov
call
popf
mulb
xchg
sar
js
popl
pop
dec
jno
cmpsl
and
lods
ret
in
fsubl
test
add
pop
mov
sarb
sub
addr16
xchg
mov
mov
cs
mov
addr16
lea
pop
mov
bnd
fdivrl
addr16
jmp
stos
pop
xor
push
icebp
sub
dec
shll
pushf
xor
loop
cli
ror
filds
clc
push
mov
lods
fildl
ja
or
test
pop
test
mov
jb
ficompl
je
leave
mov
inc
push
test
imul
pop
sub
adc
int3
jnp
lods
mov
loop
lret
mov
adc
xchg
cmp
rcrb
jecxz
mov
lcall
pop
shr
lods
adc
dec
push
orl
test
push
pop
sbb
fidivs
jne
insl
add
loop
adc
push
push
inc
sbbb
addr16
pop
mov
loop
inc
xor
inc
jns
outsb
ss
lods
imul
mov
or
frstor
ds
fcompl
loopne
jno
xchg
es
push
pop
inc
push
shlb
push
repnz
adc
jo
test
jae
push
rolb
mov
test
dec
out
mov
xor
fwait
push
nop
test
add
or
jno
sbb
popf
rorb
repz
xchg
inc
or
pop
lods
mov
dec
push
and
push
clc
aaa
cmpsb
int
sub
sbb
push
fdivrl
inc
sbb
sahf
icebp
mov
sbb
sbb
rolb
jns
mov
arpl
fwait
mov
shrb
adc
sub
push
mov
pop
mov
mov
xlat
cltd
sbb
sbbb
jp
das
pop
imul
scas
outsl
inc
mov
mov
lds
jmp
int3
sbb
clc
ret
inc
xchg
add
cmp
mov
jo
sbb
pop
pop
loopne
mov
jne
out
pop
dec
jp
jo
test
pop
bound
int3
rcrb
add
cmp
push
sub
rcl
scas
repnz
stc
mov
xchg
add
in
fstpt
sbb
push
jo
test
xchg
adc
jne
or
outsb
pushf
cmpsl
lcall
jbe
jge
dec
aas
inc
out
imul
movl
pop
mov
jb
dec
loop
add
sbb
out
enter
ret
push
fdivs
std
imul
adc
test
iret
dec
lods
imul
shll
ret
andb
je
mov
mov
add
and
push
bound
mov
in
imul
push
fiaddl
test
sbb
dec
cld
repnz
in
push
sub
inc
jle
setp
pop
or
cmp
aas
add
int
mov
cmpsl
stos
fldt
pop
push
cs
jae
sub
pop
sub
push
stos
inc
push
les
arpl
sti
fstpt
out
push
and
add
add
dec
jge
jge
dec
loope
push
pop
pop
cmp
mov
cs
cmp
pop
xor
andb
or
mov
fcmovnbe
into
add
stos
addr16
sub
into
mov
nop
ffree
test
dec
lret
cmpsb
and
mov
push
fs
dec
add
push
pop
arpl
gs
loop
xchg
lret
cs
mov
in
in
and
cs
popa
mov
xchg
pop
cmp
xchg
pop
mov
sub
sbb
dec
rolb
insl
xor
cmpsl
jmp
inc
out
test
test
push
mov
push
push
fwait
les
mov
sbb
shll
and
inc
jbe
sbb
stc
idiv
scas
lods
pop
adc
dec
sub
inc
pop
cmp
cmp
ficomps
shlb
test
cmp
and
pop
scas
outsb
scas
sbb
outsb
ret
jmp
cs
rcll
push
mov
fistpll
push
les
cmp
mov
jl
and
jg
fisttps
and
inc
dec
push
mov
mov
push
lock
dec
in
in
adc
jns
pop
fmull
sbb
lock
cmpsl
ret
data16
out
lret
xchg
std
sti
push
andl
dec
sub
xchg
inc
dec
dec
sbb
dec
add
shlb
adc
cmp
and
cmp
fisttpll
add
in
push
mov
or
xor
aaa
and
iret
push
inc
mov
aas
jno
xchg
dec
ret
mov
mov
mov
and
lret
pop
and
stc
mov
cmpsb
repz
mov
jge
jmp
jl
add
lret
cltd
sbbl
pop
mov
mov
std
fidivrs
push
mov
push
xchg
pop
data16
fsubl
pop
xchg
jae
es
ds
cltd
out
add
sub
sahf
pop
xlat
jg
inc
lds
arpl
aam
mov
mov
fs
pushf
in
and
push
sbb
fbld
push
sarb
mov
into
iret
mov
out
push
nop
in
push
adc
add
mov
sub
pusha
xor
test
into
pop
loope
adc
out
scas
and
xchg
loopne
test
sub
popf
mov
shlb
dec
and
dec
int
inc
pop
xchg
adc
in
push
loop
pop
xchg
loop
sub
das
fwait
pop
pop
inc
mov
je
push
mov
add
cmp
and
mov
push
clc
cmpsb
lret
stc
ret
and
cmpsb
out
push
xchg
and
mov
sub
adc
clc
adc
scas
testl
mov
push
orb
mov
mov
pop
aad
es
lahf
jbe
cmpsl
shll
sub
loop
sub
fwait
add
movsl
inc
enter
scas
mov
sbb
cmpsb
sti
inc
popa
and
push
jmp
clc
lcall
jbe
sbb
jp
fcmovnu
jo
mov
aas
sahf
dec
mov
test
push
push
in
notl
loopne
pop
or
fst
push
je
jbe
mov
pusha
fdivl
fistpll
pushf
pop
inc
mov
sub
mov
in
and
pop
and
imul
repnz
xchg
fldpi
or
mov
xchg
or
out
jno
dec
and
not
and
out
mov
jns
cwtl
jle
data16
shrb
push
out
fs
dec
pop
sbbl
sbb
lods
mov
fwait
scas
iret
icebp
fbstp
loop
mov
cs
into
jle
test
pop
aam
or
fucomp
arpl
jne
cmp
push
loope
repz
xor
mov
hlt
shl
cs
jge
insl
inc
xchg
fs
and
fisubl
cmp
out
sub
mov
mov
mov
add
out
aam
popf
cmp
test
fsub
dec
neg
xlat
lret
sub
lods
and
scas
mov
dec
loope
jp
pop
and
lock
lret
mov
movsl
lock
andl
or
lea
jmp
fucomi
add
pop
sub
or
mov
add
loopne
in
rcrl
pop
out
aas
out
ret
jbe
mov
into
dec
incb
data16
pop
jo
movb
lcall
mov
cs
loopne
movsl
ja
inc
cmpsl
pop
adc
mov
xchg
sub
dec
pusha
je
outsl
push
fcomp
and
jnp
mov
pop
jl
push
mov
out
cmp
cltd
and
imul
or
daa
fidivs
and
gs
ljmp
test
xor
loopne
mov
fsts
test
mov
int3
mov
fwait
imul
pop
cmpsl
sub
adc
jmp
add
xchg
sbb
fidivrl
in
insl
dec
inc
xchg
int
jo
push
jnp
cs
rcrb
jnp
lahf
test
mov
or
leave
push
les
push
sbb
mov
fwait
xor
push
incl
pop
sub
test
in
out
pop
cmpsb
push
xchg
jmp
sbb
push
imul
ljmp
cmp
add
and
cmp
lods
adc
lahf
mov
movsb
pop
addb
mov
enter
in
and
lods
xor
out
js
stos
add
adcb
sti
cs
scas
icebp
cli
xchg
test
mov
push
mov
or
rorl
mov
cmpsl
inc
lods
adcl
jp
add
test
fs
cli
aam
xlat
xchg
dec
pop
jno
incb
jne
cmc
add
testl
mov
lock
inc
mov
dec
pop
jmp
jno
jne
andl
decl
add
or
xchg
inc
shll
ds
adc
imul
cmc
gs
push
add
out
xchg
out
das
test
push
test
jnp
ja
in
popw
ret
out
add
jbe
pop
incl
cmp
jg
jmp
fisubs
imul
shlb
sub
das
xadd
sbb
repz
sub
jnp
add
in
call
cmp
cmpsl
movsb
push
adc
cmp
cs
ret
mov
xchg
int
jno
mov
ja
jg
inc
rcrb
mov
add
push
or
cmp
es
fldcw
es
xor
push
in
dec
cld
ss
lods
xlat
test
stc
jmp
test
mov
stos
js
mov
jbe
sbb
popa
je
push
lock
into
aad
test
loop
mov
adc
adc
out
loop
mov
insl
inc
pop
adc
js
hlt
stc
sbb
addr16
cmp
adc
adc
insb
loope
jnp
jge
insl
sbb
sub
jge
repz
sbb
out
cmp
data16
adc
adc
xchg
decl
pop
out
mov
fcmovbe
je
subl
std
xor
or
pop
cmpl
stc
xchg
repnz
pop
add
push
jle
je
cmp
addr16
dec
fcomp
inc
jnp
push
mov
pop
mov
mov
pop
nop
and
lea
outsb
inc
std
push
inc
loopne
iret
pop
out
xor
call
js
inc
cmpb
adc
cmp
dec
pop
cmp
jg
cmpsb
push
dec
ja
test
mov
idivb
push
test
dec
mov
les
adc
pop
repnz
mov
sbb
or
lock
cmp
enter
arpl
pop
movb
fstl
inc
loope
fsubrl
sahf
xor
inc
dec
mov
xor
push
mov
lret
inc
jp
adc
mov
mov
jmp
les
jmp
inc
xchg
movsl
ljmp
loop
mov
mov
cmp
sub
inc
loope
adc
imul
jl
and
pop
inc
xchg
push
lods
xchg
pop
xor
jb
in
lret
push
add
nop
cli
pop
push
xor
sbb
add
in
xchg
xchg
subl
fcomp
cmpsb
popa
push
pop
mov
pop
dec
inc
mov
leave
add
push
ja
mov
cli
push
lods
push
pop
scas
test
hlt
js
cmpsl
inc
or
mov
mov
pop
xchg
cltd
mov
cld
cmp
aam
nopl
mov
popf
or
ret
addr16
sti
inc
jo
roll
xorl
adc
aad
jns
cli
sbb
sub
fldcw
pop
sub
sbb
sbb
mov
inc
mov
or
pop
and
and
adc
das
inc
xor
cwtl
and
adc
ffreep
setl
sbb
notb
movsl
gs
cmpsl
dec
fmuls
decb
test
xor
insl
test
outsb
lret
cld
inc
lea
dec
sbb
stos
ret
ds
xchg
and
stos
xchg
pop
sbb
scas
push
xchg
cmp
mov
or
fadds
leave
mov
cwtl
cmp
lods
or
stc
cmp
in
mov
outsb
inc
or
out
push
fcoml
scas
jecxz
push
fs
jle
lahf
and
xor
and
push
or
xchg
lret
cwtl
lock
mov
mov
rolb
push
int
mov
or
out
popa
pop
dec
dec
out
ret
adc
sbb
fidivrs
adc
or
add
cli
push
fs
in
mov
pop
fnsave
adc
xchg
cmp
ret
xchg
je
push
aaa
shlb
mov
loopne
and
jb
xor
mov
dec
xor
cld
dec
xchg
mov
jnp
mov
inc
mov
push
inc
pop
ja
rclb
sahf
iret
sti
call
das
cmp
cmp
int
and
aad
cltd
scas
aaa
push
out
jo
js
mov
cmp
mov
dec
leave
stos
inc
xor
pusha
mov
repnz
pop
jbe
push
cmc
ja
add
jbe
outsb
cmp
es
push
jle
loop
ret
ffree
jbe
les
mov
push
xchg
xchg
add
idivb
xchg
fs
jne
adcb
scas
push
mov
icebp
xor
mov
int
mov
xor
lea
subb
xchg
in
mov
sbb
mov
or
mov
and
dec
das
pop
roll
test
xor
push
push
addr16
push
pop
ret
sbb
xor
adc
out
repnz
mov
fstps
dec
in
sbb
cmp
lods
sub
andl
inc
stos
add
call
adcl
or
loope
daa
jg
add
push
pusha
mov
and
lock
mov
stos
in
les
sub
dec
cmc
ret
add
ficoml
pop
rcrl
adc
and
xor
int
lahf
movsl
out
fdivrs
xlat
sarl
repz
push
jae
mov
add
sub
pop
cld
adcb
or
movsl
pop
mov
pusha
mov
pushf
mov
mov
mov
enter
inc
jne
sti
les
mov
pop
ret
jmp
or
jg
xchg
mov
xor
xor
push
jb
int
stos
mov
cmp
stos
bnd
sbb
inc
xchg
xrelease
xor
movsb
xor
stc
movsb
add
scas
addb
fisttpl
and
inc
dec
and
inc
and
push
stc
cltd
inc
js
orl
inc
mov
mov
xchg
fwait
mov
dec
insl
cli
fisubs
ljmp
push
mov
jmp
fiaddl
mov
cmp
adc
xchg
cwtl
jae
pop
dec
mov
mov
fsubs
lret
call
lods
cmp
shll
in
js
mov
dec
loopne
inc
jp
xchg
fistpl
shrb
stos
loopne
gs
test
leave
inc
movsl
ljmp
push
movsb
mov
mov
inc
dec
in
into
test
cmc
dec
mov
test
stc
arpl
xchg
lods
fdivs
dec
out
dec
add
cld
or
cmp
cmpsb
scas
mov
data16
out
jg
jo
imul
sbb
fbstp
jae
mov
sbb
pop
stos
sti
cwtl
push
hlt
pop
mov
cmc
mov
in
fucomp
in
mov
inc
nop
cwtl
jecxz
or
test
xchg
popf
lods
lea
mov
sbb
lahf
out
mov
cli
mov
shlb
mov
das
pushf
cmp
repz
mov
ret
insl
xor
rcrl
sti
out
adc
cwtl
nop
gs
es
out
push
movsl
xchg
rolb
test
loop
int3
cmp
jb
icebp
xchg
mov
fisubrs
sbb
xchg
jae
push
data16
subb
rorb
movsl
lret
mov
push
iret
mov
and
and
push
cmc
cli
add
gs
sub
mov
scas
vpavgb
sarb
cmpl
jnp
dec
mov
call
bound
fmull
dec
sub
icebp
cmp
mov
inc
out
dec
mov
add
inc
xchg
xchg
or
ss
add
mov
rcrb
stos
bound
add
jne
jmp
fstps
lea
adc
xlat
pop
and
mov
pop
cmpsl
or
mov
inc
in
fwait
mov
cmp
jb
and
inc
pop
cmp
and
xor
shrb
push
call
dec
cmpsl
test
mov
push
mov
and
js
rolb
pop
dec
adc
nop
dec
or
cwtl
out
inc
cli
xor
sub
ds
adc
and
mov
mov
sub
mov
je
pop
jmp
pusha
jle
fistpl
pop
arpl
xchg
testb
insl
sahf
cmp
fwait
push
orl
dec
sbb
decl
repz
cmp
pusha
cld
notb
sbb
cmp
and
jmp
or
inc
pop
jns
shl
mov
lcall
add
aas
clc
jno
or
pop
cmp
sbb
popa
xchg
or
xchg
dec
std
jmp
and
push
sbb
loope
test
movsb
push
imul
mov
int
xlat
arpl
lds
icebp
inc
dec
mov
pop
cs
mov
lods
pushf
out
mov
xor
mov
cmpsl
in
xchg
fists
adc
xor
sbb
or
std
enter
pusha
push
add
push
adc
push
adc
outsl
ffreep
out
jb
mov
in
lds
cmp
rcl
push
dec
mov
xchg
mov
subb
jo
mov
jmp
std
pop
push
inc
sbb
push
out
and
scas
lcall
fists
cmpsb
dec
aam
in
push
es
jp
fistl
je
xchg
cmp
or
stos
sbb
pop
jne
push
test
dec
lods
mov
scas
outsl
es
add
mov
stos
pop
pop
pushf
pop
push
sub
in
dec
mov
cwtl
fwait
or
scas
sbb
xor
lea
pop
xchg
mov
out
mov
mov
hlt
mov
sbb
inc
mov
rcll
mov
frstor
add
or
std
dec
dec
mov
icebp
mov
pop
add
xor
dec
scas
mov
popf
sbb
lods
gs
jmp
fs
push
sbb
lea
stc
sbbl
jno
cmp
adc
xor
sahf
subb
sub
jecxz
leave
fdivrs
push
daa
dec
lock
pop
nop
mov
aas
lcall
add
sub
out
sbb
pop
mov
test
test
sbb
mov
scas
nop
lret
inc
add
lds
add
cmpsb
mov
aad
lret
lods
adc
mov
pop
stos
mov
iret
and
pop
add
dec
out
mov
stc
test
cmp
movsb
test
gs
sbb
xchg
add
xchg
jmp
mov
test
sub
inc
sub
pop
sbb
pusha
aas
imul
sahf
jnp
jle
push
pop
xchg
ljmp
mov
push
mov
test
pop
jecxz
mov
test
add
test
jo
xor
lock
and
or
xor
notl
daa
jns
or
jne
add
in
adc
outsb
dec
and
xor
xchg
pop
mov
and
sub
cmp
sub
int3
mov
or
or
mov
and
mov
popa
xchg
ljmp
sbb
push
outsb
movsb
lods
outsb
push
repz
and
fmul
push
jb
out
sbb
push
lret
das
fsubrs
add
cwtl
repz
shr
cmpsl
addr16
popf
into
cld
pop
push
test
jmp
pusha
sub
dec
sub
sbb
jbe
in
repz
out
lcall
das
fisubrs
fadds
les
mov
mov
nop
jg
sti
mov
and
xor
inc
loope
add
cmp
das
std
xchg
jne
int
pop
iret
mov
fabs
xchg
mov
sub
sub
je
dec
add
out
in
push
sub
imulb
push
js
ss
dec
sbb
jmp
ror
inc
cltd
js
aaa
mov
nop
test
xor
addl
fs
shll
lret
push
push
mov
test
cmp
mov
inc
sub
push
adc
lea
idivl
icebp
hlt
daa
cmc
mov
sbb
mov
movsb
jl
out
test
sub
dec
xchg
mov
orb
dec
ja
daa
pop
cwtl
mov
andl
xor
aam
sbb
mov
xchg
push
xchg
das
adc
lcall
mov
push
std
ljmp
push
inc
mov
mov
adc
xchg
fimull
js
lea
jecxz
test
ja
adc
lahf
aaa
enter
adc
aaa
push
adc
add
jne
cmpb
pop
xchg
adc
icebp
cld
push
cmp
xor
std
jb
or
adc
nop
sub
ret
sub
mov
xchg
rcl
sti
addr16
in
dec
adc
jge
jo
dec
push
outsl
mov
into
frstor
enter
add
fstpt
ss
push
mov
bound
mov
xor
pop
add
mov
inc
shll
pop
das
fistpl
inc
cltd
fs
bound
sbb
bound
push
mov
fcmovnbe
inc
scas
dec
inc
mov
xchg
mov
xchg
xlat
sub
pop
cmp
push
add
stos
jae
pop
test
pop
jge
ret
sbb
jle
pop
pushf
xchg
lds
clc
outsb
mov
imul
adc
mov
dec
adc
add
push
shrl
push
pop
dec
scas
push
adc
and
xchg
push
stc
sub
paddusb
out
add
inc
test
push
out
icebp
data16
imul
xor
sbb
mov
mov
int3
test
sbb
cmpsb
adc
jmp
jae
pop
fldl
adc
mov
imul
dec
or
sub
movsl
sub
mov
cltd
shll
pop
gs
jo
cld
mov
aaa
xchg
xchg
jg
and
mov
jb
or
sbb
cmp
xor
cmp
lods
mov
out
stc
in
jnp
sbb
inc
inc
dec
push
cmp
sub
mov
push
mov
mov
sbb
aas
sbb
int
push
push
aam
mov
inc
nop
mov
cmc
iret
idivl
push
xchg
adc
inc
jne
popf
sbb
and
push
jae
enter
lds
je
pop
sbb
mov
or
out
xchg
pushf
lods
dec
mov
mov
fisubrl
cmp
test
add
jae
or
pop
je
stos
in
adc
out
inc
sub
in
mov
icebp
xor
dec
aaa
shlb
xchg
mov
int3
dec
and
int3
push
jbe
mov
lcall
xchg
dec
and
cltd
mov
rcr
xor
lret
dec
mov
in
sub
addr16
fcoms
aas
aad
mov
cmp
mov
pop
js
adc
mov
inc
push
xor
lea
test
jecxz
cmpsb
lds
inc
mov
repnz
mov
cmp
xchg
inc
pop
add
fwait
aas
sbb
inc
dec
mov
outsb
lret
mov
add
push
jl,pt
imul
inc
xor
scas
jns
sbb
outsl
xchg
or
push
aas
outsl
movsl
xchg
jns
neg
pop
jno
sarl
dec
aad
divl
sub
mov
aam
ret
ja
xchg
cmp
sti
xor
out
cmp
ret
adc
and
movsl
mov
pushf
mov
and
shrb
add
pop
test
inc
add
loop
out
cmpsb
les
cmpsl
clc
movsl
iret
cmc
sbb
inc
and
jns
ds
mov
je
mov
stos
sub
jb
mov
mov
bound
popa
mov
ds
std
test
jno
cmp
in
ds
adc
adc
repnz
mov
lret
outsl
leave
jge
jne
jae
push
data16
cmp
pop
popf
cli
setg
xor
cmpsb
lods
cmpsb
shll
mov
pop
in
cs
insb
cmp
mov
in
xchg
enter
jge
movsb
cli
in
pop
push
cmp
in
loopne
xchg
mov
pop
push
pop
adc
testb
aaa
fistps
fidivrl
int
pop
mov
jecxz
pop
push
dec
inc
and
push
jg
jb
mov
xor
jno
jbe
sub
sub
fiaddl
cmpb
into
mov
jmp
cmp
fcmovne
aas
ljmp
or
dec
sub
sbb
sar
mov
lods
lahf
xchg
pusha
pop
daa
sbb
lcall
out
push
test
pop
fs
out
mov
mov
sub
mov
mov
js
lock
inc
mov
hlt
cmp
call
add
sbb
sub
or
push
dec
and
cmp
xor
mov
jp
shlb
jno
fidivrl
xchg
cs
fstl
imul
dec
in
lcall
xlat
sub
xor
inc
pushf
dec
adc
adc
scas
push
dec
mov
lea
push
mov
outsb
jecxz
lret
adc
pop
ja
imul
pop
lds
sub
les
ja
das
roll
add
xchg
cli
stos
gs
push
lds
dec
ret
mov
add
inc
adc
ret
add
negl
sbb
mov
inc
aad
addr16
sbb
ret
clc
push
fdivr
loop
cmpsb
mov
pushf
cmp
jo
in
mov
bound
xor
iret
lcall
shll
out
or
inc
hlt
imul
pop
test
adc
aaa
stos
cmp
lahf
sbb
cwtl
and
ret
in
adc
pop
add
cmc
fiadds
sub
pop
movsl
xchg
sub
daa
jb
push
xor
mov
outsl
pop
pusha
in
adc
adc
pop
fisubl
add
loop
aad
dec
pop
shll
ror
jb
aaa
jmp
adc
add
daa
push
and
lds
movsl
push
addr16
pop
in
cmpsb
sub
lcall
mov
jecxz
mov
fcomps
pop
aas
in
cmc
jns
dec
xor
jle
fdivl
cltd
mov
cli
sti
fstps
pusha
arpl
int
leave
push
cmp
stos
ljmp
sub
jo
mov
jbe
jo
adc
mov
cmpsl
out
xor
data16
push
fldenv
pop
dec
mov
lahf
dec
sub
sbb
adc
outsl
test
pushf
sub
hlt
roll
out
stc
dec
insb
and
vsqrtps
pop
cmpsb
das
inc
sbb
scas
mov
jb
test
mov
sti
and
fwait
sbb
lret
xor
dec
pop
fcomi
mov
out
pop
xor
and
jmp
inc
aad
cmp
inc
test
das
and
roll
xchg
pop
xor
in
push
stc
fiadds
mov
gs
jno
shrl
dec
rcll
push
je
leavew
xchg
jg
jmp
adc
fimuls
mov
daa
sub
lret
adc
hlt
lcall
add
or
loopne
jmp
mov
cwtl
fcmovnbe
jo
repz
repnz
cltd
out
lret
cmpb
sbb
adc
xchg
lcall
sub
jge
into
and
mov
pop
jmp
or
jle
dec
adc
test
xor
mov
cmp
test
or
mov
scas
sub
jns
jmp
cwtl
loop
repnz
ret
and
aaa
mov
sbb
sbb
cli
mov
push
sbb
cmpsl
pop
dec
jg
mov
mov
inc
sbb
pop
jo
clc
and
push
dec
hlt
pop
cs
lds
out
sbb
insb
push
push
jnp
icebp
mov
jnp
lret
xlat
jp
xor
cs
test
fcmovne
and
mov
leave
xchg
sub
dec
cltd
jge
scas
sahf
into
or
add
mov
pop
lcall
jno
xchg
outsb
fiaddl
test
bound
das
or
pop
in
sub
adc
testb
subb
pop
scas
add
imul
sar
pop
mul
aas
std
rorl
and
cltd
ja
scas
xor
xchg
sbb
xchg
mov
push
test
gs
int
and
adc
ret
mov
dec
bound
mov
cwtl
std
js
mov
dec
xchg
popa
sbb
dec
ret
out
movsl
ja
mov
leave
pop
and
gs
xor
mov
lods
imul
jns
push
inc
test
push
gs
xor
mov
jecxz
and
push
sbb
cmpsb
cld
sub
inc
fwait
add
repnz
aas
enter
pushf
inc
loop
xchg
mov
in
mov
sub
pop
es
gs
mov
pusha
movsl
scas
aad
mov
dec
adc
dec
jge
ret
lea
push
in
pop
inc
jo
dec
outsl
out
dec
jge
xor
xchg
fistl
es
fisttpll
jbe
lahf
data16
and
sub
pop
cmpsl
stos
dec
or
jne
xchg
sub
push
and
sbb
stos
addr16
pop
jnp
xor
cmp
icebp
push
div
call
std
test
adc
pop
jno
jle
inc
add
sbb
sbb
xor
out
loop
push
xchg
into
scas
jb
test
and
mov
sbb
push
pop
lahf
push
jg
cld
mov
jp
aas
mov
add
xlat
lret
dec
inc
loopne
xchg
inc
inc
adc
int3
in
imul
cmp
sub
adc
jle
out
jno
rcrb
movsl
mov
xchg
cld
cmp
jp
stc
imul
pop
and
dec
or
aad
movsl
je
dec
je
insl
mov
test
call
mov
out
sbb
mov
jge
popa
adc
and
imul
cmp
push
jecxz
xchg
cmc
dec
lahf
stos
imul
inc
adc
push
lahf
in
mov
stos
ss
sub
push
lea
shl
in
add
sub
mov
jae
mov
rcrb
cmc
pop
adc
add
mov
xor
pop
cs
es
mov
mov
cld
mov
or
cmp
mov
push
push
or
lock
fs
push
dec
xor
gs
lahf
cmc
sub
scas
or
hlt
add
and
fnsave
mov
andl
aaa
xor
lahf
dec
pop
mov
pop
and
push
in
push
pop
cmp
add
lea
jmp
sbb
inc
ficoms
leave
pusha
out
test
enter
jne
cmp
imulb
test
arpl
ljmp
cli
pushf
or
pop
xchg
mov
shrl
daa
sahf
and
or
cmpsl
xchg
and
adc
fbld
push
ss
dec
pop
cmp
das
pop
xchg
lods
aaa
stos
addl
add
cmc
dec
xchg
and
in
iret
xor
shll
aam
cltd
pop
xchg
pusha
adc
incl
mov
inc
sbbl
pop
leave
gs
outsb
push
push
inc
jmp
adc
jp
lods
jae
push
jmp
push
or
lock
xor
mov
jp
mov
xor
jecxz
lahf
push
cltd
dec
cli
outsb
mov
and
xor
pop
pop
xchg
inc
mov
push
dec
mov
insb
rorl
lods
ret
xchg
iret
and
loop
dec
lcall
dec
sub
xor
cld
je
xchg
js
js
sbb
pop
xchg
fcom
pusha
add
lds
inc
mov
ljmp
xorb
ret
mov
mov
ljmp
cli
ds
lret
cmpb
jnp
adc
imul
imull
sub
in
inc
repz
pop
scas
push
popf
int3
popf
jb
lock
fldlg2
fsts
xchg
daa
jecxz
fidivs
xchg
cmp
inc
or
sbb
jmp
jmp
pop
mov
jne
insl
mov
cs
push
popf
out
pop
and
mov
movsb
jno
dec
dec
mov
mov
jnp
call
pop
aaa
jae
pop
jb
in
add
shl
out
add
aaa
ret
hlt
movsl
mov
mov
loop
jmp
jb
icebp
and
jae
popa
das
or
addr16
shll
sbb
mov
lock
int3
add
lock
in
imul
imul
inc
pop
outsb
mov
fisttps
jle
lock
enter
push
rorl
mov
cs
pop
jg
jno
js
rorb
pop
mov
lods
xchg
mov
xchg
mov
sub
fstpt
ljmp
rolb
xor
adc
add
cmp
mov
aam
add
inc
or
or
rcl
xchg
sbb
fldcw
mov
mov
adc
add
insb
stos
xor
into
mov
idivb
cmp
lock
mov
iret
xor
das
movsb
pop
stos
inc
sub
mov
pop
fwait
test
cmpsl
aad
shr
pop
daa
out
in
notl
xchg
jnp
sbb
into
rol
scas
mov
lods
mov
sti
adc
inc
aaa
insl
stos
ds
movsb
stc
cmp
mov
call
mov
mov
pop
pop
add
lock
dec
push
add
push
adc
mov
inc
jns
jle
cmpl
dec
dec
movsb
xchg
daa
and
dec
lods
mov
shlb
outsb
jmp
push
jnp
insl
negb
xchg
dec
ret
gs
jg
stos
es
add
sbb
pop
sbb
mov
sub
lea
pop
add
jne
add
mov
icebp
js
dec
cmp
insl
xchg
xor
call
pop
les
imul
fistpll
stos
adc
mov
mov
test
mov
mov
xor
jne
cmp
jge
add
in
xor
sub
jae,pn
xchg
popf
sub
imul
call
mov
test
scas
ficoms
sbb
fsubl
xchg
dec
scas
icebp
cli
xchg
push
mov
dec
repz
inc
mov
ficomps
sub
inc
scas
lret
add
jl
rcrl
dec
lock
add
js
mov
in
pop
mov
cld
cmp
and
movsb
je
jnp
or
pmaxub
jno
xor
sbbl
xchg
out
les
cs
lods
out
mov
sub
jmp
inc
pop
mov
les
push
in
loope
push
int3
push
je
xchg
popf
push
push
aam
lods
fldl
jmp
xchg
mov
cmp
cmpsl
cld
lahf
mov
inc
inc
jo
push
fstl
into
jno
jo
push
push
jno
lahf
mov
cmp
sete
pop
loope
push
adc
fwait
stc
mov
scas
pop
push
mov
dec
enter
push
cld
dec
inc
in
xor
gs
sub
push
in
add
sbb
movsb
aas
inc
push
fidivrs
or
repz
jnp
inc
into
ds
rol
or
lahf
aaa
pop
movsl
popf
lock
pushf
cmp
scas
call
pushf
pushf
jo
popa
sub
mov
mov
in
xlat
insb
insb
inc
mov
xor
xor
mov
popf
out
out
pop
loop
cs
popf
js
push
cld
pusha
outsl
mov
jp
adc
in
pop
mov
out
jbe
call
negb
cld
xchg
xor
call
addl
dec
xor
lret
push
mov
movsb
sbb
mov
pop
sbb
jge
int3
mov
and
mov
aad
inc
int
adcb
pushf
mov
test
sub
push
mov
out
dec
pushf
jns
dec
arpl
adc
cwtl
imul
cmp
pop
dec
push
arpl
sbb
xor
mov
fs
dec
orb
ret
mov
add
dec
xchg
hlt
push
insb
push
dec
mov
and
or
lahf
nop
pop
lret
push
stos
xchg
sbb
xchg
cmp
adc
cmp
jno
loopne
jb
push
add
xchg
movsl
lods
push
adcb
mov
adc
clc
xor
sarb
jle
sti
nop
dec
std
or
jmp
sbb
or
adc
lea
shr
mov
cmp
popf
add
loop
je
test
lods
adc
scas
adcl
or
jg
jns
mov
popa
ret
cmp
lock
pop
or
aam
lret
pop
jecxz
cmc
pop
lea
hlt
or
jmp
lock
xchg
pop
stos
cmp
int3
sahf
or
pop
cmp
mov
outsl
rorb
stos
sub
inc
divl
xor
push
out
cwtl
inc
jns
cmpsb
jg
xorl
out
sahf
pop
sbb
in
and
loopne
call
notb
ja
movsl
mov
push
shrb
mov
cmpsl
lds
leave
sahf
into
mov
cltd
or
je
dec
xorl
jnp
aam
movsb
dec
adc
cmp
xor
mov
iret
sub
in
xchg
xor
hlt
sub
and
cwtl
jmp
mov
mov
cld
pusha
pop
jmp
jne
jne
mov
jmp
pushf
fadds
mov
pop
add
mov
adc
sbb
ficoml
test
mov
jmp
xchg
sbb
es
jo
je
out
les
ret
push
inc
pop
mov
shrl
add
jo
and
pop
mov
pop
cs
mov
push
ljmp
dec
stos
add
push
fistpll
das
cmpsb
daa
mov
sub
push
jp
insb
lahf
aad
xchg
inc
jmp
add
lods
mov
outsl
movsb
push
jecxz
xor
dec
add
ljmp
aad
cmpsl
sub
mov
rolb
sub
outsb
ss
dec
jns
movsl
test
mov
and
mov
cmc
repz
inc
cmpl
adc
movl
jno
or
jno
jb
jbe
pop
mov
xchg
test
ds
mov
js
rorb
loopne
pushf
movl
pop
adc
ficoms
xchg
repz
fidivl
inc
push
mov
push
aaa
clc
adc
cli
pop
imull
sub
fcomps
mov
call
sub
aam
cli
inc
fidivrs
icebp
mov
xchg
rcrb
insl
pop
arpl
xchg
js
lret
shrb
jo
into
and
sbb
sub
add
xor
adc
pop
out
dec
flds
repnz
mov
mov
std
sub
aad
ss
dec
test
push
mov
xor
pop
rclb
ret
gs
inc
dec
call
jae
repnz
push
jp
cld
cltd
jbe
repz
stos
sarl
sbb
pop
dec
es
mov
ret
in
mov
adc
je
xchg
hlt
repz
out
mov
jo
add
dec
das
lret
shl
mov
cmc
sub
daa
test
cs
jmp
outsb
inc
inc
shl
mov
or
sub
in
mov
cmp
gs
and
inc
out
ds
adc
and
lcall
adc
test
lahf
sub
xor
dec
outsl
divl
pop
movsb
into
inc
cmp
adcl
aaa
sahf
lods
std
and
imul
enter
xchg
cmp
ret
sarl
adc
and
ss
mov
jne
nop
or
addl
out
lcall
cmp
push
ljmp
add
aaa
push
push
inc
pop
sub
cltd
add
cmp
fcom
lock
xor
stc
sahf
xchg
loop
test
jae
scas
enter
inc
and
mov
ds
mov
mov
mov
cmc
cmp
sub
call
jge
sub
in
mov
push
adcl
mov
cmpsb
mov
jnp
mov
push
ret
mov
sbb
mov
movsl
cltd
cmc
outsb
loope
jb
dec
jle
xchg
sbb
add
je
pop
mov
mov
test
inc
cmp
roll
cmp
adc
pop
and
lahf
ds
sub
lret
cmc
dec
scas
mov
cmp
enter
mov
les
inc
nop
inc
adc
jmp
dec
shll
loopne
jne
inc
adc
das
pop
push
dec
fidivrs
sub
shll
lcall
mov
mov
jl
out
xor
push
es
pop
mov
repnz
jne
je
add
rcrl
xor
mov
cmp
mov
fwait
mov
inc
pop
or
jb
jnp
dec
pop
xorb
ja
xchg
push
push
mov
xor
mov
out
push
inc
sti
rcr
ret
stos
pop
pop
iret
pusha
pop
add
dec
push
in
in
add
pop
push
enter
outsl
aad
je
jae
or
mov
loop
and
inc
mov
aad
into
push
cmpsb
into
lods
jb
insl
pop
sarb
aas
pop
adc
call
add
or
inc
popa
ds
push
push
mov
popa
cli
lds
adc
sbb
mov
jmp
cs
pop
or
mov
adc
adc
fldcw
jno
stc
repnz
loop
sbb
jecxz
pop
pop
fistpll
cmp
shll
int
mov
pop
cwtl
adc
int
popf
push
xor
mov
je
lea
enter
imul
mov
jge
ret
ds
rol
enter
ja
mov
mov
shll
stos
sbb
jo
loope
sub
push
imul
movsb
adc
add
jo
jne
pusha
test
lret
sbb
jno
out
and
ds
pop
jno
jae
sub
sub
xor
mov
or
pop
popf
into
loopw
cs
jp
push
push
imul
mov
and
arpl
test
xchg
dec
leave
mov
xchg
faddl
out
xchg
in
js
out
push
add
pop
sub
mulb
sarb
push
jecxz
insl
frstor
stc
sti
out
ss
cld
mov
iret
movsl
or
mov
xor
dec
negl
out
fmuls
mov
mov
cltd
lret
sub
xchg
and
outsb
data16
push
xchg
mov
lcall
mov
out
stos
cmp
or
sbb
divb
sbb
int
mov
loope
hlt
mov
or
das
xor
loopne
not
jge
loopne
xor
nop
aad
inc
add
movsl
push
loopne
jp
jbe
push
sub
cmpsl
mov
jp
js
lock
daa
cmp
call
dec
push
pop
pop
sub
jno
mov
or
mov
clc
or
out
cmpsb
xchg
push
push
cli
push
xchg
add
popa
lret
mov
imul
xchg
jge
lcall
inc
push
jns
sbb
roll
inc
xchg
pop
pop
orl
mov
outsl
dec
mov
ret
mov
addr16
sub
fcmovb
in
add
pusha
loop
pop
sahf
jl
pop
sub
pop
pop
push
dec
shr
in
jp
mov
sti
in
stc
or
inc
inc
jecxz
cmp
mov
pop
push
pop
mov
sarb
cld
jle
ljmp
jle
push
push
fldt
pop
push
scas
cmpsl
mov
inc
fbstp
leave
xchg
xchg
sahf
fldcw
mov
lret
inc
lods
aam
jge
out
pushf
or
out
stos
sahf
insl
je
inc
stos
in
fidivs
clc
jle
jmp
aaa
inc
repnz
inc
jle
fcmovb
jg
stc
in
xchg
dec
adc
das
lahf
jbe
xchg
mov
mov
cmp
leave
hlt
lea
pop
jge
pop
cmpsb
pop
imul
push
in
scas
insb
std
mov
pop
int
mov
jg
push
adcl
xchg
jno
iret
stos
decb
pop
cmc
inc
movsb
cmp
test
test
xchg
sarb
repnz
xor
or
fsubs
psrld
das
push
cwtl
push
or
call
popf
aas
sub
or
ss
cmp
inc
mov
pop
test
or
pop
or
push
pusha
or
xor
sbb
xor
out
sub
cmp
lret
pop
inc
jl
test
sbb
inc
xchg
mov
in
jmp
lret
jmp
add
repz
jg
and
cmc
or
arpl
bnd
nop
jmp
add
adc
iret
xor
xor
test
dec
fbstp
loope
shll
inc
dec
fiaddl
sub
jbe
leave
lock
in
popa
out
add
mov
movsb
sbb
stos
mov
push
dec
and
mov
mov
or
stc
imul
push
std
je
push
iret
ficoms
jo
jl
aas
orl
repz
out
movsl
cmp
aaa
stos
xlat
mov
data16
in
add
sbb
mov
lcall
lds
sahf
pop
out
rcll
out
sti
leave
fld
mov
in
das
dec
jmp
push
push
dec
push
jg
cmp
lock
jg
push
icebp
hlt
je
in
ret
lahf
mov
aaa
fdivrl
iret
out
ljmp
mov
mov
push
aaa
ljmp
add
cmp
shll
cmp
cwtl
pusha
fsubrp
icebp
ja
xor
xor
xlat
mov
dec
pop
add
insb
mov
dec
arpl
std
outsl
stc
loopne
in
sub
add
je
sti
movl
orl
push
push
cmp
dec
mov
inc
dec
stos
lods
pop
mov
jle
push
aam
aam
decb
movsl
aam
xchg
jns
pop
mov
add
jbe
pushf
pusha
sub
and
or
jae
sti
insl
jno
aad
pop
cmp
fdivrl
inc
hlt
enter
mov
add
bnd
shrb
jecxz
mov
lea
into
dec
scas
insl
and
enter
cmovae
arpl
roll
adc
inc
imul
sub
les
or
ret
jo
inc
lea
push
inc
cmp
fs
outsl
mov
imul
rcrl
add
cmp
sub
xor
xchg
mov
pusha
push
mov
and
aad
cmp
dec
aaa
lret
or
movsb
sbb
inc
popa
mov
popf
incb
nop
or
outsb
adcb
scas
mov
test
mov
inc
xchg
js
dec
lds
std
cmp
arpl
push
push
leave
jns
test
fdivr
fwait
shll
xchg
subl
std
dec
mull
fs
push
ds
sbb
das
add
mov
pop
mov
mov
xor
out
or
jno
and
inc
push
and
sub
test
fs
sub
jnp
mov
es
rcll
lret
or
aas
loope
in
lret
fadds
push
sub
pop
jge
pop
cmp
inc
cltd
lret
sti
fisubl
clc
nop
dec
mov
call
jmp
shll
mov
js
add
and
popf
xchg
cltd
repz
nop
popa
sbb
mov
incb
dec
lods
test
pop
out
rorb
lcall
mov
out
inc
pop
push
hlt
insl
movsl
sbb
mov
and
xchg
mov
xchg
push
sub
jle
into
pop
and
sbb
mov
pminsw
fcompl
inc
pop
decl
fnsave
fidivs
xor
mov
or
mov
mov
sub
fwait
push
insl
adc
adc
iret
test
mov
jmp
sub
push
pop
insl
jmp
andl
or
adc
mov
fnsave
push
fs
pop
rcrl
xchg
push
aaa
cmc
or
sub
test
sbb
pop
leave
cmpl
std
add
inc
sub
hlt
out
dec
add
addl
xchg
mov
scas
divl
cwtl
dec
inc
mov
dec
mov
mov
ret
push
test
rcrb
ljmp
out
dec
pop
inc
fisubs
push
cmp
andl
pop
jne
in
mov
xor
inc
scas
outsb
xor
sbb
ljmp
int
aam
add
pop
or
dec
adc
leave
xchg
inc
stc
stos
and
out
lret
ljmp
push
xchg
and
sbbb
and
iret
orb
fbstp
cmp
loop
cmc
test
sbb
icebp
jo
pop
test
dec
add
into
jmp
add
sbbl
sbb
in
push
orb
std
inc
fs
add
mov
lods
pop
adc
aaa
push
pop
mov
enter
push
sbb
mov
xchg
pushf
sarb
clc
outsb
or
into
test
hlt
cmp
pop
imul
xor
xlat
out
aam
jmp
pop
leave
bswap
xor
sub
or
int3
fnstcw
sbb
and
cmp
jae
push
dec
mov
push
jbe
lods
popf
cld
in
psrlq
jle
sub
fidivrl
in
mov
mov
and
push
movsb
adc
xor
ja
dec
xchg
dec
push
pushf
cmp
leave
dec
pop
insb
sub
shl
adc
jmp
xchg
mov
mov
jno
add
das
mov
fs
in
in
mov
lock
xchg
sbb
add
movsl
sti
xchg
xchg
int3
mov
int3
ret
mov
mov
arpl
mov
cmpb
js
les
jno
sub
xchg
jne
dec
adc
arpl
lock
mov
add
add
jmp
mov
inc
push
push
aaa
lods
stc
inc
filds
in
push
std
ror
enter
aam
jp
lea
pop
jge
cs
pop
ret
adc
lret
mov
subl
faddl
cmp
inc
aam
mov
faddl
xor
insb
sbb
and
fwait
jns
adc
push
sti
jbe
fwait
in
lds
mov
jo
sub
jno
xchg
aad
sbb
iret
and
addr16
inc
mov
test
xor
lods
and
fsubl
shrl
mov
push
jbe
stos
loopne
and
cltd
rcl
xchg
push
movl
and
pop
xchg
xchg
inc
sti
movsb
imul
jmp
xchg
insb
addr16
clc
push
xchg
int3
xchg
repz
lret
in
sub
aam
jns
xlat
add
mov
sub
mov
inc
cmp
or
cmp
xchg
mov
adc
push
adc
insb
popa
push
cmp
hlt
clc
aaa
ret
rcr
sub
pop
outsl
jae
cwtl
mov
aad
mov
xchg
dec
imul
pushf
jecxz
test
or
mov
out
negl
dec
roll
mov
sbb
adc
xlat
in
decb
repz
dec
ret
mov
add
popa
popf
pop
mov
subl
jbe
popf
iret
mov
enter
mov
fs
cltd
cmp
cmpsl
cmp
pop
and
adc
sub
sbb
out
push
push
push
sub
scas
adc
push
push
xchg
xor
pop
xchg
jnp
jb
and
jo
mov
aaa
les
and
fstpl
mul
aam
push
inc
xchg
outsb
cmp
mov
rcrl
outsl
jns
xchg
lods
inc
mov
stc
out
popf
sbb
js
mov
or
inc
or
idiv
shll
xor
mov
pop
sti
pop
cpuid
pop
push
jl
orb
fwait
subb
or
lds
fnstenv
push
in
scas
in
jp
pushf
or
cli
cmp
mov
xor
pop
push
into
jnp
pop
pop
sbbb
js
clc
ds
cmp
or
or
add
hlt
jnp
insb
jns
xchg
lods
mov
mov
dec
mov
ja
sbb
push
ljmp
cmpsb
in
stos
jbe
xor
push
outsl
jns
jl
out
cmc
ljmp
or
sbb
lret
rcll
call
mov
repz
dec
bound
cmp
mov
jnp
in
fidivs
adc
sub
negl
sub
outsl
xacquire
imul
push
mov
into
push
push
jae
push
fisttps
inc
xchg
scas
or
adc
mov
mov
decl
mov
testb
pop
and
sub
push
outsl
mov
fidivrs
xor
stos
pop
in
xchg
or
xchg
iret
ret
rcrb
dec
mov
jb
and
std
xchg
inc
ss
jo
cmp
fdivs
jmp
xor
adc
dec
mov
push
movsl
add
mov
sub
cmp
pop
xchg
mov
xchg
je
mov
sbb
push
or
jl
movsl
bound
jnp
mov
iret
pop
out
jbe
adc
inc
mov
movhps
mov
mov
data16
sub
cld
xor
xor
out
cmpsb
xor
ljmp
out
ret
daa
jns
cmc
dec
push
fs
xchg
cs
add
jle
lcall
xor
rcll
shlb
mov
or
dec
test
adc
pushf
mov
inc
daa
bound
mov
jnp
mov
pop
or
pop
js
cmp
outsb
cli
insb
rorl
xchg
nop
pop
je
push
jge
mov
push
xor
push
gs
popa
stc
add
in
shlb
rcrl
mov
mov
movsl
xor
das
std
negl
xchg
pop
dec
mov
cmp
mov
dec
in
ja
push
xor
mov
jnp
push
popa
lret
fsubrs
icebp
loop
mov
cmpsb
dec
neg
pop
and
dec
push
push
scas
jae
repz
jle
or
inc
test
mov
frstpm(287
mov
je
pop
stc
andb
push
mov
out
jae
xor
fidivs
mov
cmp
cmp
mov
loop
cmp
hlt
cwtl
imul
mov
imul
in
in
xor
inc
mov
push
es
std
leave
jno
cli
push
sti
call
mov
mov
subl
jns
dec
mov
cmc
lds
insl
stos
enter
mov
pop
pushf
push
xor
loopne
bound
jecxz
sub
rcr
jp
add
sbb
data16
ret
mov
scas
out
rcr
add
ja
inc
aaa
cmp
jno
adc
pop
hlt
iret
js
test
pop
or
xor
test
icebp
add
pop
in
aad
sbb
shrl
push
or
mov
pop
and
shr
lea
rorl
sbb
adc
loopne
gs
mov
pop
mov
or
jl
or
lods
xor
imul
pop
hlt
clc
xor
lods
xor
jno
lret
adc
adc
dec
xchg
xchg
hlt
gs
add
shll
out
pop
or
cld
jle
mov
int
repnz
or
loop
mov
xor
mov
jle
popa
adc
xor
xor
out
rcll
xorl
mov
lods
adc
adc
lods
add
aaa
add
jge
and
out
xchg
inc
or
icebp
adc
or
mov
rcl
push
fcmovnbe
pop
add
inc
roll
mov
mov
lods
lret
cmpsl
repz
in
or
pop
pop
je
xchg
xchg
and
pop
mov
pop
imul
pop
es
adc
push
fsubrs
push
adc
mov
sub
clc
pop
daa
fsubrs
dec
mov
xchg
clc
pop
lcall
pop
jecxz
jecxz
inc
mov
mov
add
cmp
out
inc
lods
mov
iret
call
xorl
or
dec
ja
mov
loopne
out
jnp
enter
push
leave
inc
xor
sbb
cmp
fdivs
clc
out
jecxz
mov
sbb
jle
and
std
jecxz
pushf
fiadds
push
rclb
mov
and
jns
imul
data16
imul
mov
pop
out
outsl
push
dec
push
mov
pop
jecxz
and
pusha
fisubs
cmpsl
mov
pop
ds
test
xchg
movsb
dec
andb
or
cmp
sbb
fsub
subl
xchg
xor
scas
pop
bound
shll
mov
ja
mov
test
dec
xor
test
fcoms
jae
or
lcall
sub
int
andl
push
mov
cmpsl
mov
jo
adc
sbb
cmp
cmc
push
xchg
nop
pop
inc
adc
es
stc
xchg
pop
dec
addr16
subb
mov
loop
jmp
sti
icebp
xchg
push
mov
pop
xor
push
pop
scas
out
and
mov
mov
sti
popf
inc
mov
pop
out
cltd
stos
xorb
mov
mov
in
fsubrl
lock
mov
add
add
pop
shlb
loope
adc
sbb
dec
xor
sub
lcall
out
pop
mov
adc
pop
inc
xor
outsl
xchg
stos
cmp
mov
pop
lock
jg
loope
scas
repnz
lret
jle
push
leave
cmp
xlat
out
add
adc
inc
xor
setne
pop
lods
xchg
or
mov
cmp
mov
xchg
into
or
divb
xor
push
shll
mov
imul
pop
xor
sbb
or
adc
cmp
sbb
mov
in
mov
ss
mov
pop
pop
dec
lods
push
sbb
shl
je
in
lahf
sub
cld
out
mov
add
and
xor
cmc
adc
cmp
add
adc
out
jno
xchg
fiadds
in
ds
jmp
insl
stos
jo
and
mov
and
jp
aaa
mov
ja
pushf
cmp
lret
dec
jmp
cmp
adc
sbb
or
xor
fs
lret
adc
cmp
mov
add
inc
and
rcr
cmp
cmc
add
inc
insb
idivl
sub
test
dec
mov
lea
jnp
mov
call
mov
ds
aam
push
lcall
bound
mov
fidivl
stos
sti
xchg
dec
sar
sub
int
pop
mov
inc
iret
insb
loopne
xchg
lea
mov
push
es
jns
les
cmpsb
aas
icebp
aas
sbb
or
inc
iret
add
push
inc
movsb
jle
int
shll
mov
xchg
rcr
popa
int
and
cmp
mov
jge
clc
lds
mov
fxch
xor
mov
test
jb
aam
cs
pop
repnz
sub
int
pop
or
aaa
xor
popa
inc
pop
sub
leave
sbb
aas
pop
out
jp
dec
or
sbb
mov
cmpsb
jp
push
lcall
sbb
sbb
sub
cmp
cmp
sub
sub
jle
jnp
and
cmp
sbb
adc
xor
cmpsl
adc
movsl
sub
mov
leave
ret
sub
jbe
jp
sub
cmp
sbb
push
aas
sbb
lods
mov
pop
iret
lahf
lret
outsb
ds
ljmp
out
aam
xchg
ja
movsb
add
push
fimull
cmpsl
loope
out
dec
test
jne
lea
rorl
sahf
mov
dec
in
and
ret
xorb
xor
cli
decb
push
mov
add
push
lock
or
into
jno
negl
outsb
push
icebp
outsb
add
notb
mov
jns
jle
or
popf
mov
inc
jae
out
mov
std
mov
aam
jle
mov
es
push
ss
test
xorb
rcl
sbb
cmp
push
aam
lret
lcall
dec
cwtl
xlat
sbb
push
lahf
sub
in
call
loop
imul
adc
out
pop
sbbl
sbb
lahf
mov
sbb
dec
push
pop
push
push
lret
or
or
rolb
adc
aaa
adc
lods
aam
test
movl
andb
lcall
mov
hlt
popf
xor
rcll
fistpll
movsl
jge
push
jno
or
xchg
or
dec
loop
mov
sbb
dec
icebp
ret
test
pop
cltd
into
sub
js
xorb
xchg
mov
shlb
stos
xor
mov
enter
add
xchg
lods
iret
jo,pn
mov
xchg
jmp
fs
xchg
jmp
dec
xchg
cli
arpl
push
lds
iret
mov
lcall
jle
adc
cwtl
xor
adc
jbe
ja
mov
mov
ret
inc
jbe
lds
insl
mov
lock
fldl
push
pop
cltd
pop
icebp
shl
into
xchg
mov
mov
sub
enter
and
and
cltd
out
ss
popa
aaa
pop
inc
mov
jo
sub
jg
xchg
push
inc
icebp
add
xchg
test
xor
or
ret
leave
or
xchg
push
mov
mov
pusha
sub
aad
insb
mov
inc
jl
rcr
fisttpl
jne
fimull
mov
hlt
addb
add
ret
andb
push
into
sbb
or
dec
je
sub
jae
repnz
xor
push
cmpl
jno
mov
or
imul
pop
lods
and
nop
jo
push
ret
fists
sbb
fs
ja
jge
mov
sbb
inc
mov
mov
push
in
in
adc
les
xor
and
push
inc
jmp
mov
jno
jmp
mov
popf
pop
fists
mov
pop
shlb
lods
and
jle
lods
sbb
mov
in
lret
jo
sub
fwait
stos
add
fwait
mov
inc
adcl
xchg
xchg
mov
cmp
call
jo
test
or
in
out
xlat
movsl
ljmp
xchg
push
dec
mov
jo
inc
add
cmp
stc
mov
push
pop
xchg
es
cmpsb
stos
xor
mov
mov
mov
aam
inc
rorb
lahf
cmp
in
xor
hlt
int
test
daa
adc
lock
sbbb
xchg
mull
pop
push
mov
and
cmpsl
stos
iret
divb
dec
cmp
jmp
mov
mov
into
cmc
sbb
pop
mov
enter
sti
adc
scas
test
addr16
iret
into
and
inc
mov
ds
mov
xor
push
mov
cmpsl
aad
call
clc
test
inc
dec
mov
scas
int
xor
cs
mov
aas
inc
stc
sub
lock
lods
ret
test
cs
add
scas
cltd
xchg
or
xor
push
ret
lahf
xchg
gs
or
inc
insl
xor
imul
ds
pop
or
stos
jp
sbb
in
xchg
mov
cmpsl
pop
fisubrs
in
cmpl
fstps
jae
flds
cltd
in
lcall
fs
dec
shlb
test
mov
xor
shrl
cli
aam
jb
mov
inc
adc
sbb
xchg
cmc
orb
add
cwtl
jmp
cli
or
adc
xor
mov
ret
cs
pop
mov
das
mov
repz
int3
mov
jge
shrb
aaa
push
out
movb
xor
jno
outsl
test
mov
shll
mov
pop
sub
or
push
sub
inc
mov
push
out
shl
aaa
push
dec
sahf
push
pop
and
enter
inc
xchg
add
sub
mov
pusha
pushf
inc
aas
inc
arpl
jecxz
mov
popl
bound
fsubs
mov
xlat
xchg
icebp
jge
call
xchg
test
pop
ret
repnz
adcl
pop
pop
mov
mov
scas
dec
xor
enter
jle
out
xor
add
xchg
in
ljmp
add
adc
pop
or
movsl
push
push
cld
dec
and
push
sarl
fcoml
push
xor
pop
xchg
adc
xchg
sbb
xchg
pop
or
add
inc
or
and
push
jnp
pusha
push
sub
jl
scas
mov
ds
push
xor
scas
adc
cli
cmp
push
jno
sahf
pop
mov
movsl
jne
jg
xor
jb
jp
loope
mov
addr16
cli
jecxz
imulb
arpl
mov
test
jno
lods
test
cwtl
add
xor
mov
push
outsb
pop
cmp
int3
push
sbb
ficoml
jno
xchg
outsl
js
xlat
faddp
jae
sarb
add
inc
pop
outsl
pop
mov
add
xchg
cmp
xorb
idivl
xchg
aaa
pop
mov
push
loope
fcom
pop
fmull
out
test
out
push
dec
rcr
cmp
and
arpl
push
add
std
aam
shl
xor
daa
pop
lahf
movsb
loopne
outsl
jmp
insl
sbb
jp
fs
adcl
inc
sar
pop
sarb
fisubs
jl
mov
pop
imul
dec
cmc
jecxz
xchg
cltd
arpl
push
jnp
cli
in
push
cmp
stc
xor
lock
mov
aaa
repnz
sbb
cmpsb
push
test
clc
lods
sahf
aam
cs
iret
scas
inc
pop
mov
xchg
pop
cmp
notl
leave
shrl
scas
mov
lahf
test
ftst
mov
and
daa
fidivs
sub
xchg
pop
pop
stc
int
or
cmpsl
mov
mov
dec
adc
sub
add
ja
add
push
inc
icebp
jl
mov
mov
mov
sbb
jb
shl
fldcw
add
jp
test
inc
movsb
shll
ljmp
or
out
cmpsl
inc
std
lea
ds
jne
inc
xlat
xchg
out
rcrb
aam
cli
cmp
mov
cmp
xor
mov
and
fimull
xchg
fsubl
fs
or
mov
stos
xchg
mov
mov
inc
cmp
xchg
ret
lods
add
enter
cmp
sahf
sub
xor
stc
and
int3
cs
lods
adc
lds
or
sbb
jbe
icebp
out
mov
cmpsl
jmp
jg
data16
icebp
ljmp
jno
push
add
pop
decb
sahf
imul
call
mov
push
outsl
sbb
sar
sbb
repnz
shl
stos
sbb
inc
enter
enter
filds
pop
pushf
xor
pop
dec
mov
mov
mov
or
jge
in
push
shlb
pop
pop
dec
or
fcomps
jne
mov
hlt
adc
push
data16
mov
into
pop
out
insb
adc
push
pop
icebp
cmc
cli
arpl
xchg
les
test
icebp
std
adc
cmp
mov
mov
mov
shll
in
loope
repnz
jnp
jecxz
mov
mov
cmp
lock
add
inc
jb
cs
or
mov
or
cmp
test
xor
mov
lods
adc
testl
push
lahf
jge
pop
push
cmp
lret
in
sbb
fmuls
mov
in
pop
pop
hlt
subl
pop
xor
imul
addr16
dec
gs
jns
adc
xchg
inc
sbb
fstps
addr16
pop
lret
andl
mov
mov
popf
adc
sub
and
in
push
cmp
repz
jecxz
and
push
sub
mov
sbb
sub
test
cs
dec
stos
fs
lea
gs
rclb
mov
scas
cmp
dec
mov
fisttpll
push
add
lds
sub
xchg
jbe
mov
lds
ljmp
sahf
xor
sbbl
in
sub
cmc
push
sbb
cmpsl
push
js
sbb
or
call
dec
pop
adc
mov
mov
pop
push
call
or
mov
fwait
inc
js
xchg
ja
test
inc
jle
loope
mov
clc
and
andl
jne
sub
stc
testl
mov
rcl
aaa
aas
adc
mov
xor
data16
inc
and
sub
cmp
push
mov
rcrb
fdivr
adc
lahf
and
cmp
fdivrp
push
sbb
sub
jmp
mov
adc
orl
lret
jl
xor
leave
lret
loop
leave
pop
sahf
lock
repz
daa
push
mov
dec
and
mov
mov
loopne
or
mov
and
arpl
push
loope
idiv
dec
mov
jb
and
ja
mov
inc
xor
call
out
es
add
xlat
lock
ret
aas
in
icebp
int3
lods
rolb
sub
mov
jae
pop
or
cmpsb
ss
and
dec
sbb
ret
popa
scas
scas
insb
add
sub
dec
mov
pushf
test
cmpsb
jae
aam
mov
or
out
or
pop
cmp
jmp
xorb
outsl
fwait
adcb
ljmp
popf
pop
rcrb
subl
mov
leave
add
lock
cmc
icebp
push
sbb
iret
sub
sahf
jnp
push
lahf
cmc
in
xor
cwtl
mov
sbb
sub
dec
sbb
and
leave
mov
les
outsb
test
aam
sub
push
mov
je
outsb
movsl
arpl
sbb
dec
jb
in
outsb
jae
inc
push
xchg
loope
inc
or
push
add
xor
sbb
sbb
shl
dec
ficompl
push
jecxz
sub
push
popa
xchg
jp
jae
mov
push
outsb
bound
push
ja
sbb
mov
cwtl
sbbl
cmp
ret
shrb
test
in
sub
xor
adc
lods
fidivs
push
push
out
fs
in
outsl
sub
pusha
push
jecxz
push
adc
into
or
shl
outsb
ljmp
push
xor
loop
and
mov
cwtl
sub
sub
mov
in
push
in
mov
or
inc
push
xor
and
sbb
mov
inc
xchg
hlt
push
fs
aad
jns
sahf
bound
sbbb
into
bound
pop
sti
push
pop
scas
inc
idivb
mov
and
push
popa
push
aas
rcrb
popf
inc
cmp
movsl
ja
push
xor
es
fimull
push
inc
imul
jae
out
jp
hlt
pop
pop
xor
push
mov
xchg
adc
shl
jne
xchg
jbe
aam
bound
sarl
movsl
mov
dec
cli
cmovs
repnz
addr16
jmp
sbbb
imull
bound
and
lahf
aaa
cmp
inc
inc
ret
cmc
ja
or
dec
and
dec
je
mov
fldt
xchg
push
xchg
fcmovnb
int
or
in
jo
pop
sub
sub
sub
cmp
xor
xor
xorb
in
lret
jns
xor
push
mov
test
ja
mov
mov
in
and
push
aaa
jmp
mov
in
xor
sub
fidivl
mov
ljmp
xchg
cmp
jae
push
mov
xor
cmp
add
fidivrs
jge
popa
cmp
repz
inc
loope
dec
cmpsb
sahf
sarl
js
pop
xlat
icebp
sahf
mov
or
push
mov
pop
xor
xchg
out
stc
stc
fyl2x
xchg
mov
and
repz
into
xor
repz
subb
mov
lea
cli
sub
and
stos
pop
inc
jl
sub
cmpsb
jl
pop
jae
dec
push
dec
clc
mov
fs
aad
lods
ret
mov
imul
xchg
in
lcall
je
adc
or
inc
loope
std
xchg
mov
dec
jmp
adc
repz
pop
push
sar
lods
xchg
mov
pop
iret
inc
cld
movsl
test
div
ja
fwait
imul
aam
inc
mov
xchg
movq
or
pop
andb
bound
movsl
cmp
lods
out
mov
push
jl
xchg
push
outsl
add
jg
adc
popf
inc
and
aam
pop
aas
xchg
fdivrs
daa
fildl
cwtl
out
imul
lods
mov
inc
jecxz
movsb
sub
sub
mov
xor
dec
int
mov
lret
in
in
fisubl
movsl
enter
in
cmpsb
pop
push
pop
addl
fdivs
pop
dec
add
mov
out
mov
push
and
insb
nop
popa
pushf
push
mov
jle
jnp
or
imul
in
arpl
lret
rorb
outsl
xchg
int
enter
cmc
cld
test
movsb
cmp
push
lea
jb
into
inc
or
fisubrl
fimull
mov
xlat
cmpb
mov
xchg
icebp
ficoml
push
ret
iret
pop
insb
mov
push
mov
lds
adc
jno
lds
and
inc
mov
shlb
shrl
pop
or
add
xor
and
in
sbb
out
cltd
std
xchg
lods
sti
inc
je
xchg
or
nop
jnp
in
ljmp
in
xlat
add
popa
imul
jne
mov
data16
lock
cs
mov
inc
and
cmp
add
sub
test
push
mov
cli
xchg
xchg
dec
mov
imul
add
pop
cltd
push
mov
ret
pop
pop
pop
xor
fildl
into
sbb
inc
daa
or
dec
jl
mov
inc
lcall
in
outsl
outsl
push
mov
hlt
int
pushf
ja
fsubp
iret
mov
add
imul
pushf
pusha
xchg
ret
push
xlat
sbb
shlw
push
mov
aas
adc
mov
aaa
repnz
ss
inc
into
pop
icebp
ja
popf
sub
ljmp
fildll
jmp
shll
cmp
and
mov
xor
fstpt
orb
cmp
dec
dec
push
call
sub
pop
sub
pop
xor
popa
cmp
push
sbb
mov
fisubrs
hlt
jnp
push
js
mov
lods
add
pop
jmp
movsl
das
loop
insl
dec
cmc
test
out
in
adc
sbb
add
xchg
add
stc
cmc
jo
out
addr16
mov
sarl
jmp
lret
pop
and
mov
sbb
cmp
xorb
jo
divb
mov
subb
xchg
jnp
ret
sub
jbe
ss
adcb
sub
adc
cmp
inc
in
cmp
es
clc
push
adc
sub
stos
orl
push
fistpl
ret
addr16
outsl
mov
js
mov
faddp
add
and
mov
cmpsl
pop
jl
lods
jmp
popa
push
les
cld
and
mov
mov
cmpb
mov
dec
in
xchg
leave
stos
fcoms
mov
cmpsl
pushl
movsb
pop
out
or
test
or
pop
das
shrb
jns
xchg
mov
or
cmp
mov
aam
sahf
or
push
adc
fidivrl
repz
mov
adc
jle
fs
scas
mov
xor
shr
out
insl
mov
test
ja
ja
imul
push
push
jb
fistpll
push
rcrl
in
cmp
jae
sub
pop
mov
jae
ja
dec
push
stos
inc
xor
jo
sub
inc
test
mov
lock
sub
fidivrs
pop
inc
push
scas
inc
xchg
nop
mov
jne
inc
mov
add
addr16
sahf
sbb
adc
lret
shrl
pop
pop
pop
cmp
loopne
and
pop
jae
hlt
leave
mov
add
xor
pop
inc
cmp
or
int
and
mov
mov
outsl
xchg
stc
push
scas
and
cmpsl
pop
add
or
stos
int
cmpsl
outsl
stc
jns
inc
mov
test
or
movsb
or
mov
lcall
out
sub
jge
ret
pop
dec
xchg
arpl
push
pop
pop
mov
or
cmc
xchg
stos
insl
dec
negl
std
call
les
arpl
dec
xchg
jbe
dec
in
je
idiv
gs
out
orl
aas
daa
push
mov
jmp
aam
jecxz
fucomip
out
push
clc
jecxz
and
int3
cwtl
and
push
iret
cmp
lahf
mov
xchg
pop
mov
mov
push
shl
test
add
pop
loop
gs
inc
push
xor
inc
mov
xchg
or
out
mov
hlt
cwtl
mov
orl
mov
mov
loope
jl
fcomps
js
out
test
test
push
addr16
shll
lds
stc
fwait
in
lods
dec
and
outsb
xchg
adc
cli
lods
sub
adc
ret
ja
popf
adc
into
hlt
xchg
inc
test
ds
scas
sbb
in
jle
mov
leave
data16
add
clc
inc
sbb
imul
push
jnp
push
sub
in
in
pop
in
test
push
sahf
add
loopne
aas
mov
andl
test
adc
mov
xor
xchg
call
mov
loopne
jecxz
popl
je
mov
repz
loopne
push
pop
xor
daa
pop
lock
fldl
ucomiss
bswap
mov
rcrb
insl
mov
sub
popa
lods
into
fsubl
push
jno
sbb
pop
push
rol
loope
negl
fsts
frstor
stc
fstps
add
xor
call
mov
dec
xchg
mov
out
scas
lahf
jnp
inc
inc
out
xchg
mov
ret
xchg
cmp
das
or
inc
movl
aas
cwtl
out
inc
mov
push
icebp
push
pusha
xchg
call
dec
aaa
test
ret
cmpsb
mov
fisubl
fwait
pop
mov
test
sub
xor
dec
push
push
nop
push
popf
push
inc
mov
push
mov
push
jnp
mov
sub
repz
mov
repnz
mov
lret
xor
cmc
jmp
mov
std
adc
xchg
mov
or
or
mov
dec
sbb
popa
push
dec
pop
sbb
scas
testb
sub
mov
adc
adc
in
stos
dec
or
mov
and
out
xchg
or
cmp
xor
les
xor
int
pop
arpl
xchg
enter
pop
sub
jnp
scas
loopne
std
stos
jbe
je
sbb
sub
cltd
ss
into
or
out
outsw
jo
das
pop
pop
test
cmp
or
stos
mov
sub
and
lods
dec
xchg
repz
jmp
cmpsb
int
mov
adc
fisttpl
daa
jo
adc
or
addr16
adc
jne
sub
dec
nop
inc
mov
add
clc
outsb
or
rcll
mov
mov
fildl
imul
idiv
add
scas
imul
idivl
xchg
jne
pop
stos
mov
in
mov
sbb
sbb
xor
xlat
inc
xchg
ret
sahf
cmp
insl
or
pop
push
sub
into
mov
cmp
jbe
add
push
loop
fs
popa
sahf
std
aam
mov
jecxz
jp
jae
rorl
out
xlat
push
int
sbb
adc
or
jle
fidivrl
cltd
xlat
stos
test
lret
sub
aad
and
jnp
jbe
out
cltd
stos
test
std
nop
push
outsl
mov
out
inc
sub
xchg
mov
mov
sahf
jp
ss
dec
call
gs
fildl
cld
cmp
cmp
push
les
out
xor
sub
cli
lea
into
in
push
hlt
test
mov
mov
or
movsl
jecxz
pop
sub
cli
aad
dec
or
sbb
sub
xor
fisubrs
ds
lcall
jp
cwtl
adc
inc
daa
enter
mov
cs
adc
mov
cld
inc
push
les
pop
and
sub
lahf
mov
xor
or
cmpsb
pushf
xchg
andb
rolb
aas
or
aas
dec
jge
adc
repz
orl
push
lcall
inc
adc
fnstenv
out
mov
outsl
mov
or
insb
ret
xchg
sbb
lods
sub
push
pop
cmp
xchg
sbb
nop
mov
push
jne
clc
repz
xor
shr
sub
pop
outsb
xchg
or
or
roll
lock
lahf
add
cmp
out
dec
sub
cli
lock
dec
fldl2e
mov
cmc
out
bound
adc
push
imul
jp
nop
cmp
lret
fs
lret
mov
cmp
and
mov
sub
mov
mov
mov
testb
pusha
push
inc
pop
xor
jae
and
cmp
cmc
xchg
fldenv
int3
mov
inc
mov
addr16
mov
pop
push
out
dec
xchg
call
ss
xchg
fsub
lods
lods
jnp
push
push
sahf
cmp
and
loop
push
dec
jns
aaa
sub
pop
mov
cmpsl
inc
ret
notb
or
ret
push
add
popf
int
popf
dec
pop
jl
call
pop
fsub
sbb
pop
idivb
adc
pop
push
jp
decl
mov
imul
cmp
sbb
ds
lea
or
sub
das
lret
aas
fwait
sti
cmp
repnz
mull
mov
fisubl
iret
sub
xorb
pop
lods
pop
xchg
jbe
dec
or
mov
pop
pusha
js
int
adc
icebp
dec
imulb
js
inc
xchg
mov
leave
push
outsl
and
push
adc
xor
ja
imul
fs
je
sbb
cld
int
or
aam
push
adcl
push
jne
push
mov
xchg
or
jmp
xlat
pop
or
popf
rcrb
les
inc
popa
and
add
or
pop
lea
adc
addr16
xor
rcll
ror
dec
mov
fistpll
mov
mov
dec
mov
in
js
mov
subb
nop
push
xor
mov
pop
sub
jns
es
add
loope
add
movsb
call
clc
inc
inc
adc
pop
pop
push
add
cs
jo
sub
pop
lret
cltd
mov
pop
xor
adcb
sbb
or
mov
mov
cmp
sti
arpl
inc
out
bound
aam
mov
cli
push
sbb
mov
out
push
pusha
cmp
lret
jne
push
sbb
inc
and
sbb
xlat
xor
or
xchg
rorl
lds
xor
pusha
fwait
add
and
xchg
imul
test
jle
cmp
icebp
inc
out
or
out
mov
iret
hlt
cmp
cs
xchg
aad
imull
lea
xchg
dec
cmp
sub
mov
add
sarb
popf
dec
mov
dec
out
lods
lcall
mov
dec
xchg
push
arpl
add
adc
ret
inc
push
movsb
add
test
push
cld
xchg
mov
cmpsb
sub
loope
mov
and
cltd
inc
pop
adc
pop
push
mov
cmp
xor
ret
test
jmp
inc
push
or
mov
xchg
jbe
dec
in
dec
and
mov
or
lods
out
dec
sbb
gs
insl
in
mov
jp
jg
push
pop
setle
outsb
pop
out
sub
sbb
mov
or
pop
inc
idivl
fimull
call
ror
mov
shrb
jl
movsb
xor
push
hlt
push
push
int3
mov
das
test
add
shr
pushf
push
mov
mov
lahf
jnp
lea
sub
mov
mull
mov
jbe
icebp
mov
iret
dec
popf
and
fdivs
movsb
in
stc
jmp
movl
pop
or
shll
repz
stos
inc
jle
and
mov
jb
add
call
je
xchg
imul
and
arpl
jmp
dec
icebp
and
push
xor
stc
and
jae
sbb
sub
dec
iret
pop
ljmp
mov
fldenv
mov
dec
pop
mov
sub
aaa
mov
aas
repz
bound
imul
sbb
mov
pop
les
stos
mov
or
xchg
scas
mov
in
loop
jo
andb
cwtl
cli
in
into
jb
or
test
ja
xor
inc
int
and
mov
es
or
mov
lds
cmp
icebp
lahf
mov
dec
jno
add
cmpsb
mov
lcall
ja
sub
mov
jle
lods
addr16
cmp
popf
scas
test
push
sub
fwait
daa
fneni(8087
int3
and
cmp
out
movsb
mov
adc
mov
and
pop
in
push
mov
js,pt
pushf
in
xor
out
lock
out
xor
mov
xor
mov
imul
jbe
adc
inc
int3
jbe
xchg
nop
push
sar
and
arpl
add
imul
mov
scas
sub
dec
rcr
dec
sbb
and
decb
lods
sbb
popf
xchg
mov
lods
sub
sti
loop
or
xor
ja
and
mov
popf
test
dec
test
movsl
mov
push
imul
aam
cltd
lcall
xor
out
mov
lcall
cmp
repnz
inc
dec
cmp
ret
pop
mov
and
out
ss
out
andb
jle
dec
test
out
inc
cmpps
outsb
imul
jae
adc
jne
cwtl
or
gs
jmp
cli
sbb
sbb
sahf
pop
cs
push
dec
mov
mov
mov
sbbl
insb
mov
jle
adc
inc
insl
inc
std
push
ret
aam
insb
xlat
and
xor
outsl
mov
shr
push
and
movsb
mov
xor
dec
addr16
fcoml
sbb
notl
popa
scas
lcall
fdivrs
jo
leave
rclb
test
xchg
push
pop
rorl
int3
cld
xchg
fs
out
mov
cs
jb
lock
and
mov
stos
push
fbstp
in
jae
dec
mov
scas
and
in
into
fmull
xor
lret
and
pop
adc
leave
pop
orb
add
jg
fs
jno
sbb
sbb
jmp
dec
jb
jg
or
and
xchg
fdiv
mov
mov
ss
sti
sbb
test
xor
push
cmp
mov
js
inc
sub
int
pop
add
inc
dec
dec
mov
mov
push
add
mov
and
cwtl
aad
cmp
test
adcl
test
cmpsb
push
fildll
cwtl
ss
aas
test
scas
out
ss
push
aad
push
aas
aaa
ror
daa
or
in
dec
add
xchg
adc
inc
std
mov
dec
xor
sbb
mov
xor
xor
and
adc
dec
xor
mov
ror
pop
jne
pop
push
clc
sub
mov
out
pushf
scas
enter
add
mov
add
mull
stos
xor
std
add
xlat
pop
push
add
rcr
mov
mov
and
out
jb
jp
insb
pop
stos
test
cmp
sub
imul
xchg
loopne
outsb
repz
ret
mov
orl
sbb
movsl
or
or
and
lret
mov
jecxz
inc
jns
fsubrs
lods
outsb
inc
push
pop
sahf
mov
imull
int
inc
push
cmpl
adc
push
jo
cmp
and
adc
rdpmc
arpl
cmp
popa
icebp
mov
mov
shrb
xor
in
lds
lock
imul
icebp
std
pop
sub
push
notl
sbb
ret
in
sahf
mov
cmp
mov
sbb
mov
sub
test
dec
jne
sbb
pushf
mov
div
jg
dec
inc
xchg
stos
mov
outsl
pop
adc
dec
xor
pop
inc
jl
add
ja
mov
or
cmp
pop
nop
and
xor
pusha
dec
jl
shrl
adc
stos
in
xchg
adc
mov
into
dec
std
adc
jb
int3
fwait
movsl
pop
repz
adc
jbe
xchg
enter
mov
nop
stos
iret
jns
fstpl
dec
push
adc
pop
mov
jne
dec
dec
add
les
cwtl
sub
or
sub
cs
rcrl
inc
mov
dec
jno
hlt
lds
xor
insl
imul
push
jmp
out
mov
mov
push
arpl
add
mov
out
movsl
push
cmp
mov
clc
add
dec
movsb
icebp
decl
mov
lret
cmp
mov
xchg
rcll
fisubrs
test
aaa
xchg
clc
sbb
push
cmpsb
push
movsl
jmp
rcrb
mov
loopne
das
jg
pop
les
sbb
mov
arpl
jbe
imul
int3
mov
jne
push
gs
mov
out
mov
movsb
mov
adc
dec
pop
lret
xor
adc
std
mov
in
mull
addr16
repz
dec
push
aam
xor
pop
ljmp
aad
sbb
mov
mov
sbb
jecxz
aaa
pop
rcrl
or
icebp
xchg
dec
outsl
push
scas
sahf
loop
lret
lods
jl
mov
es
xchg
xor
pop
int
cli
xor
dec
sbb
sbb
cmp
clc
mov
or
insb
ss
in
mov
popfw
cmp
hlt
popa
pop
sahf
into
je
push
mov
jno
ret
mov
test
stc
and
push
es
filds
jae
xchg
xchg
push
jg
sub
scas
outsl
loope
test
int3
gs
push
lret
xchg
jecxz
mov
mov
mov
mov
mov
mov
aaa
mov
mov
lret
fldl
outsb
fistpll
mov
xor
loope
mov
or
inc
fs
adc
mov
pop
mov
test
xchg
repz
dec
pop
outsb
or
dec
jge
jge
cmp
punpckldq
ficomps
adc
xor
xor
ss
pop
fidivrl
add
mov
mov
jge
shlb
jb
mov
sub
dec
sub
push
jle
adc
jo
inc
mov
lcall
pop
push
sub
fdivs
xor
aaa
das
mov
into
in
popf
mov
dec
leave
sarb
jmp
ret
test
xchg
clc
mov
adc
lret
dec
imul
push
dec
xchg
lcall
pop
push
inc
data16
xor
cmp
xchg
test
mov
cmp
pop
inc
cmc
ds
icebp
jbe
movl
cmc
imul
and
or
scas
imul
ja
in
clc
rcll
pushl
leave
shld
repz
and
arpl
or
xor
dec
js
adc
mov
pusha
ret
cs
ret
mov
push
call
loopne
pop
cli
mov
mov
and
imul
insl
lock
out
inc
or
mov
lret
rcll
addr16
mov
xor
inc
pop
int
mov
dec
add
or
jle
mov
je
sub
sub
pusha
or
pop
fcmovne
mov
mov
jle
les
xor
cltd
xchg
lods
stos
sub
test
je
addr16
jns
pop
stos
sbb
cmc
pop
out
adc
mov
xor
xchg
inc
push
stos
aaa
mov
or
je
daa
cmc
aam
and
xor
mov
movsl
int
fildl
dec
pop
lods
jns
aad
xor
push
es
xor
mul
sti
dec
das
xlat
xchg
pop
xchg
bound
and
sbbl
cmp
xor
and
mov
inc
pop
jnp
cmp
in
jb
loope
adc
sbb
out
cpuid
pop
inc
lcall
xchg
xlat
pushf
dec
test
push
dec
mov
xchg
test
dec
int
enter
lds
ret
outsb
mov
or
pop
add
jns
dec
rolb
sbb
xchg
mov
xor
jne
mov
cwtl
sarl
jle
in
shl
mov
and
push
cmp
es
sahf
inc
cs
xchg
or
cmc
mov
adc
jmp
inc
or
les
loopne
or
popa
inc
rolb
pop
loope
inc
inc
mov
fildl
addl
lahf
mov
orl
mov
pop
aaa
outsl
sbb
jnp
adc
mov
mov
sbb
jg
mov
jae
sbb
sbb
sub
aad
or
ja
fdivrl
dec
push
popa
or
pushf
sbb
cmp
ffree
dec
arpl
loop
leave
ficompl
cmp
lahf
int3
mov
dec
inc
xrelease
sbb
xchg
cmp
imul
sbb
inc
mov
cli
popf
out
dec
xchg
loope
cs
or
add
pop
loopne
sub
inc
pop
cmpl
ja
movsb
pusha
jns
fstp
js
or
rorb
fidivrs
or
sbb
jle
aas
in
and
rorl
pop
push
sbb
xor
push
cmp
pop
repz
ds
call
mov
es
loop
lds
fs
mov
dec
mov
or
nop
xchg
sbb
nop
xchg
sbb
nop
pushf
fistl
jg
jae
cld
cmp
jne
aam
pop
das
pop
or
inc
xchg
je
sbb
jg
pushf
xchg
xor
and
bound
popf
jp
aam
daa
into
dec
jbe
out
pop
and
les
cli
fmulp
fisttpl
jecxz
sub
jne
sti
ja
repz
adc
mov
repnz
mov
nop
out
or
in
pop
or
jbe
adc
ss
dec
out
or
inc
mov
jns
sbb
mov
lahf
jb
xchg
gs
cmp
and
jno
loop
divb
insl
mov
mov
sub
std
cwtl
dec
fists
pop
gs
das
cmpsl
cwtl
test
cmc
loope
jo
cmc
jns
imul
stos
inc
mov
lods
push
ljmp
popf
lret
add
stos
push
and
ret
inc
ljmp
add
popa
inc
fdiv
mov
fildll
loopne
outsb
and
fcmove
aad
sub
popl
insl
sahf
mov
cmc
fsub
mov
cmp
xor
sahf
lret
and
xor
sub
adc
daa
dec
sub
sbb
ficoms
clc
sbb
movsb
lret
adc
daa
ljmp
test
add
mov
fimuls
call
scas
xchg
inc
add
mov
std
in
sub
aaa
pop
push
sar
or
js
xchg
rorl
dec
dec
sbb
ret
leave
out
sbb
daa
es
inc
stos
test
pop
mov
rolb
ficompl
xchg
popf
ret
jb
push
cmc
inc
cmc
xchg
int
stos
rcll
push
loopne
xchg
sub
jl
ss
sbb
ja
jae
insl
dec
jae
mov
sbb
movsl
jp
decl
div
push
imul
lret
dec
fs
dec
in
mov
mov
lea
lahf
stc
dec
cs
arpl
lret
fisttpll
mov
scas
inc
mov
add
jmp
sbb
pop
add
popa
imul
push
loop
adc
xor
xlat
pop
mov
inc
stc
cmp
enter
insl
imul
lcall
cltd
andb
daa
inc
rolb
or
lcall
fs
test
fcmovnb
out
push
popf
pop
jb
mov
mov
dec
adc
stos
pop
mov
cmp
mov
adc
scas
pushf
push
push
pushl
push
idiv
sbb
scas
ret
sub
push
mov
xor
in
out
loope
pop
jg
out
fldt
xchg
add
out
shr
or
test
add
sbb
add
jne
mov
stos
inc
jnp
pop
and
xor
dec
aad
xchg
fidivl
mov
push
popf
lea
shr
stc
mov
cmpsb
in
mov
xchg
fistpll
insb
fdiv
cmp
aaa
movsl
idivb
add
sbb
aas
es
push
sahf
mov
daa
mov
imul
jp
sbb
cmp
loop,pt
jp
loope
jecxz
cmp
lahf
leave
sbb
xor
leave
adc
stc
insb
mov
sub
leave
push
inc
ficomps
cld
xchg
sub
xchg
daa
mov
repnz
rcl
loopne
mov
xor
cmpsb
add
fstpt
add
scas
sub
lods
dec
loope
fwait
mov
int3
stos
scas
xchg
clc
sbb
inc
cmc
mov
dec
xlat
paddq
push
lahf
jg
popf
pop
test
mov
lock
jecxz
mov
in
adc
push
addr16
lds
cwtl
pop
addr16
sbb
stc
aad
loope
sbb
das
das
xor
sarl
push
data16
jbe
mov
xlat
insl
cltd
fwait
sbb
jmp
xchg
cli
popa
inc
xchg
jmp
hlt
mov
in
out
and
pop
imul
mov
daa
aaa
mov
push
mov
out
addr16
push
sbb
in
push
push
inc
scas
lret
add
dec
jmp
movsl
imul
ja
inc
punpckhdq
push
add
push
add
or
out
mov
mov
orl
into
mov
ret
pop
jecxz
sarl
dec
mov
fdivs
test
into
gs
inc
dec
fwait
sub
or
add
rorl
xchg
clc
fstl
inc
cmpsl
mov
aas
ds
xor
add
mov
mov
je
xlat
inc
fs
rorl
fstpt
imul
pop
loop
test
xor
orl
sub
pop
pop
out
xchg
cmc
mov
xrelease
les
sub
in
cmp
xor
xor
xor
fdivrs
pop
or
pop
push
repz
lods
aad
dec
cs
ret
xor
mov
andnps
push
jo
push
mov
mov
jbe
cwtl
cmp
stos
pop
inc
imul
add
scas
jecxz
jb
cs
jge
add
or
aad
test
and
notl
ret
cmp
fadd
jp
rol
fimuls
arpl
cwtl
into
arpl
xlat
outsl
mov
mov
and
in
lahf
jb
clc
pushf
in
fimull
ds
xchg
inc
call
fwait
pop
testb
ljmp
orl
rclb
cli
stc
fists
inc
rcll
roll
mov
mov
mov
mov
push
loopne
and
shlb
out
pop
pop
jl
stos
mov
add
int
mov
mov
lock
pusha
jnp
stos
jg
sti
pop
aas
and
mov
xchg
out
hlt
imul
je
adc
xor
neg
test
and
pop
inc
mov
cmp
ret
jno
inc
cmp
pop
inc
std
or
jbe
and
dec
push
jns
adc
das
dec
xchg
pop
mov
jb
fnstenv
pusha
mov
ds
shll
mov
enter
sub
pop
push
test
enter
push
push
fisubl
arpl
jecxz
mov
fistl
dec
loope
mov
pop
out
inc
mov
mov
mov
sub
jg
outsl
ficoms
ret
mov
sub
push
push
aas
mov
mov
clc
leave
xchg
in
xchg
in
and
aas
pop
outsb
in
dec
mov
out
mov
mov
icebp
add
cmp
pop
adc
push
adc
stos
addr16
ja
lret
fs
fnstsw
lret
fdivrs
push
mov
repnz
mov
test
mov
sub
lds
aam
testb
in
cmp
pop
inc
movlps
and
mov
push
adc
mov
xor
jne
aaa
psubd
nop
push
std
cmp
icebp
jl
loopne
push
ds
push
test
out
fisubrl
popa
in
dec
push
add
lahf
jle
stc
jae
ficoms
dec
in
lea
or
pop
ret
cltd
pop
loop
mov
mov
sahf
mov
pushl
push
loop
mov
mov
shrb
flds
mull
mov
loop
movsl
in
pop
pop
fcompl
dec
pop
shll
add
and
xor
xchg
jl
and
cmpsl
inc
xchg
aas
xor
bnd
mov
xchg
subb
xchg
sub
dec
in
pop
dec
push
jmp
jge
outsb
inc
jmp
test
xchg
fnstcw
sti
pop
jae
push
xchg
lcall
pushf
in
xor
nop
xchg
pop
into
pop
mov
popa
inc
jo
push
fadds
ret
and
push
xor
out
or
imul
stos
outsl
adc
push
dec
inc
cli
fisttps
das
fwait
ja
roll
fistpll
scas
mov
in
lcall
mov
pushf
mov
pop
add
jp
and
jb
lock
inc
pop
fwait
xchg
repnz
lods
sbb
fidivrs
or
addr16
out
push
mov
stos
ds
cmpsl
jmp
aad
mov
icebp
xor
movsl
push
es
mov
lahf
mov
sub
imulb
aad
xchg
shrl
add
sbb
or
lds
push
loopne
dec
pop
fwait
cld
mov
push
cmp
dec
enter
jge
inc
ljmp
add
sub
mov
shr
jle
movsb
and
dec
mov
add
pop
rcrl
scas
or
dec
lea
leave
sub
sbb
pushf
icebp
sbb
cld
sub
xlat
jecxz
jmp
lret
iret
add
add
shrb
fidivs
leave
mov
fcoml
xchg
mov
pop
f2xm1
loop
jnp
cwtl
jle
push
and
fcoml
mov
push
jg
adc
ficomps
jns
mov
or
mov
adc
and
dec
pushf
sbbl
mov
rcl
xor
pop
dec
or
lret
cli
add
add
mov
or
and
dec
pop
xchg
sub
jb
lret
xor
mov
arpl
popl
pop
test
enter
mov
inc
andb
inc
mov
repnz
scas
sbb
fs
cmp
sbb
add
xchg
aad
imul
icebp
fsqrt
xor
fnsave
sub
jo
out
enter
mov
dec
mov
xchg
or
lds
jo
xchg
fdivr
inc
inc
mov
sub
mov
dec
cmpl
mov
xchg
and
add
sarb
jno
sbb
dec
or
dec
pop
jle
cmp
jb
ds
inc
mov
rcl
enter
sti
aam
int3
lods
fimull
xchg
xlat
out
push
jmp
inc
andl
xor
push
fimuls
jne
daa
add
rorl
jmp
pshufw
out
nop
sbb
test
pop
sub
jecxz
sbb
dec
subl
sbb
mov
jg
mov
xchg
jecxz
test
sbb
adc
ljmp
push
and
or
mov
xchg
mov
mov
repz
lds
dec
stos
jmp
mov
test
sub
mov
jp
outsb
cmpsb
pop
lods
adc
lods
sbb
nop
scas
cmp
lcall
scas
xchg
adc
push
dec
loope
ljmp
adc
sbb
pop
jle
int3
jl
sub
xor
mov
xchg
jge
cmc
es
inc
cmc
sub
lret
mov
or
push
mov
mov
jbe
xchg
xchg
js
pushf
inc
jmp
insl
and
lcall
cs
imul
rcl
push
adc
shlb
mov
pop
dec
pop
or
divl
inc
push
lret
mov
loope
stc
icebp
and
sub
mov
xchg
insl
xchg
lds
mov
lock
jecxz
dec
sbb
lods
cltd
fisttpll
repnz
push
data16
lahf
dec
insb
movsb
lock
jbe
dec
mov
inc
subl
scas
aaa
xor
fcoml
andl
ja
or
sub
dec
roll
dec
mov
fcomps
movl
and
mov
out
pop
pop
cmpsl
ret
ficoms
adc
cmp
aas
push
insb
lcall
inc
lods
je
jl
xchg
in
pop
lds
call
pop
dec
dec
jbe
frstor
sub
flds
push
add
and
cmp
lret
jecxz
pop
iret
aam
xor
fwait
iret
dec
aas
mov
cmp
rcl
js
pusha
mov
js
mov
test
jmp
outsb
pop
insl
insb
or
xchg
cmpsb
mov
ja
cltd
aas
adc
loope
flds
add
insl
xor
fwait
lret
pop
pusha
adc
and
sub
mov
mov
in
dec
mov
test
push
push
jo
aas
sub
aas
bound
cltd
mov
xlat
xchg
shlb
movsb
mov
int
mov
mov
aad
inc
jge
lret
shll
popa
xchg
dec
fdivs
jle
mov
ret
lods
xor
arpl
mov
mov
mov
push
mov
mov
stc
sbb
inc
xor
bound
subb
les
jl
sbb
cmp
push
push
sub
inc
sbb
insl
popf
stos
xor
icebp
add
xorl
into
aam
faddp
sahf
int3
cmpsb
pop
or
push
mov
xor
or
cmp
int3
mov
pop
jnp
push
jg
outsb
aam
pop
cmpsb
lds
fnstenv
imul
bnd
cmp
mov
les
xor
pop
in
lret
push
call
cmc
mov
cmp
push
mov
fstpl
mov
jp
or
or
call
lock
inc
subl
add
ljmp
xchg
jmp
cmp
nop
cmc
pop
jp
enter
clc
lods
je
pop
nop
sbb
hlt
adc
xchg
sub
mov
mov
xchg
test
pusha
in
dec
fsubrl
push
fucomi
push
or
loope
jae
sub
call
xchg
sarb
mov
add
popf
in
std
int3
pop
insl
xor
rorl
mov
sub
lret
mov
pavgb
loopne
mov
sub
and
int3
dec
inc
mov
jae
sarl
lock
fwait
das
leave
loop
cmp
xchg
fldcw
xchg
cmpsl
mov
add
fnstenv
inc
cwtl
pop
testb
popf
mov
aam
clc
push
xchg
cs
mov
movsb
in
sbb
lea
popf
lods
push
adc
ss
dec
or
pop
nop
mov
ret
add
sbb
dec
fiaddl
xchg
dec
pop
flds
sbb
js
in
xchg
push
dec
test
lods
add
fdivrs
add
shll
int
sarl
jge
inc
mov
adc
cwtl
mov
pop
mov
daa
movsb
repz
push
xor
ja
cmp
fsts
xor
pop
insb
dec
cmp
call
rcll
fwait
add
incb
inc
xchg
into
push
push
inc
jbe
int3
mov
pop
or
inc
pop
lds
add
dec
sti
mov
and
add
xlat
fdivs
stos
xchg
call
sbb
pop
or
mov
rolb
jnp
arpl
sub
mov
stos
mov
adc
movsl
les
adcl
subb
lea
addr16
fisubl
cmp
mov
dec
mov
fstp
loopne
xchg
dec
inc
inc
out
jge
adc
and
fsubl
sbb
cmpsl
mov
or
inc
rcr
push
adc
leave
push
mov
aad
std
mov
add
dec
cmc
ret
mov
pop
clc
sub
rcrb
imul
aam
out
mov
pop
cmp
add
dec
xchg
nop
or
and
mov
push
and
out
cmc
xorb
add
xor
sahf
xlat
das
aam
fadds
or
cltd
pop
inc
mov
and
movd
jp
jp
jecxz,pt
popf
jle
lds
adc
pushf
push
out
les
xor
mov
sbb
lret
lds
notb
test
loope
adc
aas
pop
repnz
ret
mov
pusha
test
cmc
jecxz
xor
mov
jnp
or
arpl
or
dec
xor
inc
adc
sbb
testl
lahf
pop
pop
sub
fimuls
pop
dec
aam
in
out
std
mov
or
jmp
sbb
dec
push
add
cltd
test
scas
pop
mov
out
mov
jno
xchg
lods
push
pop
test
dec
inc
cmp
fdivrp
dec
cld
ret
mov
int3
in
mov
je
rcr
mov
loop
inc
add
mov
push
inc
cmp
mov
adc
je
sub
pop
add
mov
mov
adc
and
pop
jbe
imulb
push
repz
ljmp
mov
cmp
mov
adc
mov
test
in
add
fisubs
out
divl
int3
sub
sahf
out
mov
cmp
adc
xchg
jl
or
sbb
fwait
je
or
inc
fbstp
jae
sbb
mov
or
pop
fwait
loop
mov
inc
sub
fsubs
addr16
dec
into
js
lock
xchg
xor
and
mov
sub
mov
jge
scas
add
test
jl
add
cmp
mov
into
sahf
fndisi(8087
dec
repnz
sbb
push
jle
dec
mov
pop
dec
cmc
inc
push
sub
test
add
mov
or
scas
mov
xor
sbb
addr16
in
sbb
lods
mov
jbe
lcall
or
hlt
lret
inc
jg
das
xchg
aad
mov
filds
or
fwait
sbb
sti
jae
mov
lds
cmp
ds
lods
out
add
lret
ljmp
pop
out
cmp
mov
pusha
testb
inc
imul
or
in
adc
adc
lret
sbb
popa
pop
les
sbb
xchg
mov
negl
scas
inc
rclb
shll
xor
scas
into
insl
jmp
sub
call
incb
sbb
dec
push
aas
sarb
loopne
adc
pop
jmp
or
addr16
divb
and
insb
lcall
es
in
test
xor
pushf
in
fstpl
push
pop
pop
adc
jns
xchg
je
int
xchg
xchg
mov
push
xor
push
pop
cmp
mov
sahf
push
fnsave
sbb
xor
ss
sub
out
jnp
xchg
mov
jae
xchg
or
jns
pop
jg
pop
ret
mov
insb
inc
push
push
and
sub
and
mov
mov
lcall
in
jle
or
xchg
pop
out
xor
out
xor
ljmp
xchg
pop
add
pop
iret
out
cmpsb
cli
ljmp
mov
lret
inc
test
ret
popa
into
jo
xchg
xchg
gs
loopne
ret
push
and
int3
imul
add
jg
mov
pop
inc
inc
pop
aaa
das
adc
popa
mov
mov
lods
adc
adcb
repnz
add
push
sub
mov
cmp
test
xchg
mov
xor
jge
pop
mov
negb
insb
mov
shrb
dec
leave
jo
cltd
push
mov
addb
cmp
lds
sarb
xor
ljmp
adc
inc
int
test
xchg
push
ja
jl
or
mov
sub
sub
pop
mov
jge
repz
inc
lahf
dec
cltd
mov
add
xchg
aaa
adc
jo
sub
addr16
test
ffreep
sub
cpuid
testl
jg
lcall
divb
mov
push
sbb
orb
mov
add
sub
pop
fstl
lea
dec
push
int3
or
pop
leave
psllw
mov
ss
scas
mov
jg
mov
and
cmp
cs
sub
push
in
push
add
add
sbb
fisubrs
hlt
pop
xchg
movsb
push
gs
mov
in
jl
pusha
mov
sub
pushf
stc
mov
fistpll
mulb
mov
xchg
sub
addr16
pop
loope
cmp
daa
loop
fwait
jge
aam
sub
incb
rcll
xlat
xchg
movsb
xor
push
out
out
ja
push
push
pop
add
mov
sarl
push
lods
push
pop
xchg
inc
std
xchg
cwtl
rcrl
and
imul
ljmp
push
shl
cmp
xchg
rcl
pop
clc
add
add
xchg
aaa
xor
mov
mov
faddp
mov
jb
mov
add
sub
popf
movsl
hlt
push
movb
in
dec
jle
xor
xlat
add
aas
inc
icebp
and
and
out
pushf
pop
arpl
or
mov
and
mov
xchg
jb
or
ror
xor
push
xchg
push
lahf
jl
jno
push
lcall
scas
pop
xor
pop
lods
shrl
xchg
pushf
xchg
int3
mov
fprem
je
push
fsubr
xchg
loopne
mov
pop
repnz
fisubs
sub
dec
mov
insb
jnp
pop
or
sub
hlt
fildll
clc
mov
das
testl
mov
cmpl
pop
cmp
push
addl
xchg
incl
scas
ret
cmpsl
xor
xchg
sub
adc
int
rcr
popl
rorl
and
sarl
xchg
test
mov
fisttps
push
pop
jle
push
mov
sbb
fmul
outsl
jge
sbb
mov
adc
jp
lahf
jo
rcrl
push
add
lock
and
and
push
pusha
xchg
push
pushf
sbb
adc
lldt
inc
and
mov
sbb
mov
dec
cwtl
jge
cmp
push
mov
fsubrl
fsts
ret
cs
mov
add
or
dec
aad
add
in
les
sbb
add
inc
andb
loop
mov
out
mov
push
shrb
or
jbe
mov
mov
outsb
test
imul
fadds
and
mov
sti
pusha
lret
mov
popa
jb
xor
mov
inc
jne
xor
inc
lods
insb
mov
dec
jecxz
push
sbb
or
push
mov
movsb
hlt
adc
xlat
mov
xchg
cltd
mov
faddl
int
test
adc
or
xor
mov
dec
jb
pusha
int3
sub
jo
jecxz
imul
inc
sbbb
add
sahf
adc
movsb
dec
fimuls
aam
ds
insl
punpcklbw
dec
lods
adc
test
pop
addr16
jbe
rclb
jl
iret
mov
xchg
mull
mov
cli
mov
int
and
pop
clc
hlt
ja
jecxz
ja
and
xor
mov
js
bound
cmpsb
icebp
dec
sub
mov
inc
pop
shlw
cmpsl
dec
std
pop
int
inc
jecxz
jle
adc
mov
mov
rcrl
scas
frstor
ret
test
repnz
loope
push
mov
mov
add
lret
xchg
dec
jo
js
hlt
sbb
add
mov
xchg
mov
or
push
sub
call
loope
out
jp
dec
xchg
xchg
pop
jbe
movsb
jnp
xchg
in
ret
or
sarb
xor
sub
jg
xchg
pop
inc
aam
push
fiaddl
cmp
aas
inc
xchg
in
fnstenv
adc
mov
aam
enter
data16
adc
mov
adc
xchg
push
add
shll
sbb
out
movb
sub
pop
dec
and
inc
and
arpl
sbb
push
mov
add
mov
repnz
and
incb
cmp
push
push
sbb
out
cltd
das
mov
pop
cli
ret
jne
xchg
xor
pop
push
les
sbb
scas
sbb
push
daa
or
inc
mov
stc
mov
mov
push
into
pop
push
sbb
inc
sbb
rorb
nop
xor
addr16
jno
pop
sub
out
jl
imul
sbb
or
mov
push
mov
sub
add
enter
lret
fsubrs
out
sub
jae
mov
aad
aam
adc
out
push
xchg
cld
cmp
add
aas
data16
pop
push
cmp
out
outsb
jns
xlat
pusha
ss
sbb
jbe
or
xchg
movsl
mov
out
aaa
xor
pop
pop
mov
xor
xchg
xchg
sbb
insl
fwait
jl
pop
mov
xor
xlat
push
cltd
jle
add
into
mov
leave
filds
iret
add
adc
aam
push
stos
adc
push
popa
lahf
sbb
icebp
aad
fcmovnb
xchg
pop
xor
sbb
arpl
adc
bound
and
and
lea
pushf
push
jbe
repz
xchg
ret
mov
add
inc
daa
icebp
cmpl
xchg
add
aas
xchg
imul
loop
push
lret
sbb
cmp
ja
cmp
cli
pop
js
inc
inc
insb
adc
iret
jae
cmp
lods
pop
pusha
or
sarl
aaa
sub
lods
xchg
cmp
aad
test
sub
jne
adc
lea
push
pop
out
push
push
sub
xlat
jnp
movsl
aas
mov
popa
push
ja
add
fstpl
ret
cli
pop
popa
bound
lret
cs
dec
xchg
je
dec
dec
or
ret
neg
pop
je
push
cmp
cmp
push
shlb
lret
and
mov
and
inc
cmp
push
xor
xor
insb
mov
sti
lret
mov
adc
cwtl
rcrb
pop
sub
adc
fidivs
jmp
mov
add
std
hlt
push
mov
scas
shll
xor
ljmp
xchg
in
shll
repz
negl
aas
fucomip
adc
inc
cmp
inc
loop
insb
stos
sarl
fistps
roll
icebp
cmp
repz
mov
mov
sub
dec
dec
sahf
out
lret
cmp
dec
push
mov
jae
jmp
jb
je
sbbb
inc
fsubrl
stos
mull
pop
xchg
and
lcall
sub
mov
into
inc
push
inc
test
repz
lea
rcrb
adcl
frstor
imul
xor
xor
js
insb
mov
push
cmp
jno
cmpsl
pop
and
clc
call
cvtdq2ps
cmp
adc
add
lods
jnp
outsb
jmp
loope
into
lds
out
aam
jecxz
repz
xchg
jae
xor
cmp
jns
sbb
imul
test
sbb
mov
movsb
mov
xchg
push
push
and
dec
add
jge,pn
int3
dec
dec
ljmp
enter
mov
mov
out
lds
scas
clc
xor
xchg
or
cmp
inc
test
pcmpgtw
pop
out
mov
push
mov
cmp
movsb
lret
cmpsl
imul
fists
lea
out
xor
dec
ret
push
stc
fstpt
aaa
or
dec
push
rcll
jge
pop
inc
xorb
outsb
add
paddq
lcall
mov
popa
pop
scas
jle
call
js
dec
mov
pop
das
loope
lret
dec
xchg
push
clc
addr16
dec
js
and
mov
jl
jo,pt
test
xchg
sahf
add
movsb
addr16
cmp
inc
push
jmp
push
xor
dec
xchg
cmp
data16
add
enter
insb
popf
xor
mov
test
and
inc
dec
push
add
lret
sbb
mov
popa
pop
pop
mov
xor
jmp
outsl
jge
icebp
hlt
repz
rcll
push
ja
cmp
jmp
dec
mov
ret
mov
jecxz
sbb
inc
mov
lods
push
sub
jp
add
adc
sub
mov
dec
andl
jnp
scas
jg
into
les
pop
jo
cmpl
push
ss
mov
add
sbb
jg
je
jmp
pop
jg
jne
dec
mov
cmp
jns
xchg
push
stc
pop
andb
pop
push
loope
sbb
mov
ja
mov
or
xchg
int
mov
cmp
mov
adc
adc
adc
aas
jp
daa
aas
dec
push
pop
lahf
mov
mov
rol
or
inc
mov
push
add
repz
icebp
ja
cld
mov
loopne
in
pop
xor
jae
out
sub
cmpb
lds
push
inc
mov
mov
nop
dec
orb
cmp
cmp
sub
push
push
mov
incb
inc
lock
ds
lret
adc
test
in
push
xor
inc
pop
jle
outsl
outsb
cmp
xor
jae
inc
mov
and
cmc
or
and
jl
out
out
int
mov
fwait
pop
lds
aaa
xor
sti
paddq
or
inc
sbb
sbb
dec
repz
inc
ret
push
push
jo
cmp
aas
inc
test
dec
jmp
adc
test
mov
adc
mov
repnz
lahf
pop
dec
add
mov
jle
aas
dec
js
leave
loope
xchg
mov
adcb
icebp
push
dec
data16
push
out
insl
int
cmp
test
inc
in
add
ret
clc
xchg
push
lret
test
xor
lahf
inc
sub
pop
push
mov
fwait
xor
bound
xor
movsb
push
cli
xchg
les
sub
or
mov
pop
sub
adc
push
outsl
add
and
in
fimuls
pop
out
inc
les
mov
mov
xchg
mov
lcall
outsb
or
push
jo
lahf
testb
cltd
pop
push
mov
sub
mov
mov
pushf
xor
and
push
mov
hlt
js
js
aam
mov
dec
sahf
ss
sar
imul
vmovsd
loopne
js
xchg
add
popa
pop
imul
ljmp
nop
ficomps
mov
xchg
scas
sahf
aaa
jb
aaa
add
jns
test
movsb
push
insl
scas
cli
push
cmp
in
rcl
shrb
sub
sub
pop
add
stc
jl
push
sahf
test
mov
inc
pop
and
push
aas
push
mov
outsb
dec
cmc
push
mov
call
inc
mov
mov
jne
jmp
rorl
lds
xor
scas
push
inc
lods
enter
out
adc
jmp
mov
loope
or
sub
pop
pop
inc
adc
lods
cmc
int3
push
clc
and
push
ja
mov
pop
mov
push
hlt
movsl
add
repnz
mov
push
out
nop
enter
xchg
cmpsl
popa
shll
cmp
or
rcll
imul
mov
push
das
jp
sub
test
jle
bound
mov
jge
mov
add
lea
aaa
scas
push
out
inc
push
or
into
adc
adc
fisttpl
movsb
jl
mov
push
scas
mov
test
jno
inc
inc
fsin
sbb
push
mov
jne
pop
fcmove
arpl
lods
ficompl
mov
jo
cmp
inc
mov
add
push
inc
test
mov
bound
mov
push
push
cmp
movsl
cmp
and
jnp
ljmp
fnclex
adc
jl
in
jnp
inc
jo
push
cmc
mov
int
loope
sbb
cmpsl
dec
and
int
add
jg
rcl
xor
test
sar
adc
ss
inc
imul
cmpsl
or
jge
loop
sbb
shll
fcoms
aam
jae
sbb
inc
lcall
mov
movsb
shll
pushf
mov
push
push
andl
sub
pop
and
in
or
fwait
outsl
test
popf
clc
cmp
shlb
insb
inc
stos
pop
xlat
int3
push
arpl
sbb
xchg
xchg
cmp
loop
out
pusha
es
scas
scas
shl
fdivrs
das
or
js
push
jae
jnp
sbb
jecxz
sbb
rsqrtps
out
mov
mov
jl
fs
jl
mov
rol
aam
pop
clc
dec
bound
sub
lret
call
fidivs
cmp
mov
shll
pop
aaa
dec
rcl
ljmp
inc
cmpl
ds
test
push
or
sub
mov
pop
popa
fwait
jo
sbb
and
add
mov
push
mov
lods
ficoml
sahf
adc
push
or
pop
mov
stos
push
xor
fldl
add
arpl
test
adc
jg
addl
xor
jmp
repz
mov
inc
mov
fwait
int
mov
rolb
aam
add
add
sbb
or
mov
jnp
es
xor
fidivs
aad
sub
movsl
and
mov
mov
or
mov
test
add
imul
sub
inc
push
test
adc
ja
lret
movsl
mov
scas
jle
daa
adc
int3
loop
lods
adc
or
decl
push
mov
cmp
imul
je
rclb
inc
dec
pop
add
pop
xchg
dec
jmp
lods
int3
mov
cmp
mov
fstl
sar
in
jle
sbb
jmp
sti
stc
imul
jge
inc
jp
sbb
cmp
cmp
subb
push
jno
in
and
es
fildl
adcl
xor
jle
xlat
ja
and
loopne
nop
imul
insl
mov
imul
add
jns
inc
subb
ret
js
dec
cmpsl
or
loop
inc
pop
sbbl
test
fstl
jl
movsl
lcall
pop
pop
ja
xor
cld
push
xchg
push
and
xor
in
lods
out
and
mov
insl
dec
mov
imul
add
cmp
or
inc
pop
pop
mov
out
ret
push
fnstcw
std
sub
popa
inc
or
hlt
cltd
xlat
mov
lea
out
out
in
lds
xor
sbb
adc
mov
cwtl
mov
pop
mov
mov
mov
mov
mov
out
roll
mov
ffree
ljmp
adc
and
sbb
push
loopne
push
cwtl
fs
movntq
gs
inc
jecxz
lods
mov
les
std
hlt
mov
rcll
xchg
jmp
in
add
jno
xor
lcall
mov
add
mov
ja
sub
mov
jno
xor
pop
xchg
outsl
mov
adc
or
jnp
push
dec
dec
pop
xor
push
std
std
jb
test
xor
dec
rcl
cmp
clc
es
into
aaa
jle
aaa
xchg
jge
aaa
bound
bound
arpl
mov
sub
mov
gs
fldt
in
xor
inc
adc
jnp
lret
adc
mov
and
sbb
mov
sarb
add
cs
push
jge
lret
xor
imul
shl
fwait
push
jne
call
dec
dec
jbe
test
xchg
andb
mov
sbb
insb
mov
mov
cmpsl
xor
cmp
inc
cmpsb
ss
mov
pop
shrb
xchg
pop
sahf
jbe
sbb
sbb
lret
rorb
xchg
pop
call
push
sahf
inc
fcomps
imul
jo
lret
push
dec
mov
fadds
mov
subb
lret
leave
push
sbb
pop
sbb
fsub
jae
loopne
dec
shufps
xor
adc
or
xchg
inc
xor
xchg
mov
movb
jl
subl
lods
decb
push
mov
xor
adc
ja
ds
clc
pop
sbb
addl
dec
iret
data16
hlt
xchg
jns
dec
mov
push
es
les
sub
aas
sti
neg
enter
in
cmp
pusha
sub
scas
sarl
add
daa
jbe
popf
movsl
sbb
ss
fwait
inc
test
adc
shr
jecxz
or
xor
mov
stc
insb
lea
xor
std
repnz
push
nopl
pop
lret
mov
fwait
int3
addl
sbb
fcmovnb
ds
push
repnz
leave
rorb
dec
xchg
jno
push
inc
jp
data16
shl
aas
scas
adc
lret
into
pop
mov
repnz
jne
ds
adc
mov
es
pop
sub
aas
cld
and
shrl
icebp
adc
add
adc
inc
dec
mov
and
cmp
cltd
cmpsb
push
mov
adc
pop
shl
sub
mov
mov
cmpsb
mov
ret
out
fs
dec
rcll
stos
mov
adc
and
popa
iret
popa
loope
jb
pop
push
aad
lret
mov
xor
call
cmp
and
push
fs
fucom
lahf
pop
mov
test
push
sub
es
xrelease
shll
shll
stos
push
mov
xchg
xor
imul
mov
out
movsb
push
cli
mull
dec
cmp
aad
addr16
pop
pusha
out
idivb
push
orl
push
imul
push
mov
mov
lods
mov
and
xor
icebp
pop
or
addr16
mull
mov
pop
out
scas
scas
add
repnz
xchg
or
jp
or
leave
push
push
pop
sbb
and
adc
push
adc
sbb
jmp
mov
jns
pop
out
aas
shrb
popa
lock
dec
es
mov
sub
inc
mov
icebp
cmp
xchg
popf
nop
imul
cld
sub
pop
fidivl
lret
cltd
dec
push
std
leave
pop
mov
nop
dec
sbb
jl
dec
ficoms
movsb
loope
pop
inc
add
dec
jno
clc
hlt
out
xor
add
fnstcw
test
xchg
out
ja
dec
ja
cmp
adc
arpl
push
xor
call
jp
das
push
push
push
inc
pop
xchg
pushf
seto
mov
femms
pop
mov
xor
inc
inc
jnp
addl
pop
jmp
inc
gs
sti
jae
inc
loope
jecxz
sbbb
or
add
xchg
decl
jl
enter
jecxz
sahf
xchg
mov
pop
mov
hlt
sub
sbb
dec
cmp
in
sub
leave
stc
repz
jns
pop
outsl
mov
fwait
cmp
scas
mov
and
cmp
or
icebp
cmp
pop
or
mov
mov
adc
in
mov
mov
subl
inc
or
push
rorb
push
imul
inc
leave
in
out
mov
test
arpl
lds
ss
cli
outsb
ds
rorb
scas
movsb
fsubp
mov
jmp
bound
push
sbb
lret
imul
dec
jle
insb
lods
mov
mov
push
mov
mov
lea
push
cmp
pop
xchg
rorl
mov
insb
fld
xchg
sti
mov
xchg
jg
into
pop
and
in
adc
addr16
scas
stos
shlb
inc
sbb
mov
orl
gs
scas
pop
mov
cwtl
in
test
ja
mov
dec
jmp
mov
mov
pop
jge
dec
adc
out
dec
sub
cmpsb
cld
inc
adcl
test
fs
push
mov
loopne
xor
mov
rorb
jno
and
lahf
mov
cltd
push
arpl
js
daa
push
lcall
enter
shll
pop
lods
ret
fsubrp
dec
adc
mov
mov
mov
inc
shll
pop
int3
jl
gs
and
sti
loopne
adc
mov
dec
leave
jne
and
inc
push
add
jae
fwait
xlat
icebp
addr16
xchg
rolb
rorb
int
fisttpll
jg
push
lods
jnp
fwait
jb
or
or
sbbl
pop
cmp
or
fadds
push
jo
xor
or
shll
sbb
mov
rol
or
jae
call
adc
pop
fmull
movsl
fidivl
sbb
out
adc
lock
pop
mov
cmpsb
scas
xor
sub
mov
lret
cmc
xor
jnp
fisubrl
adc
jo
mov
fs
pop
outsl
sti
ret
insb
stos
scas
sub
adc
lds
lds
out
int
bound
neg
in
or
adcl
aas
push
mov
divl
adc
mov
mov
jnp
add
fsubs
mov
adc
pop
fdivs
pop
sti
sub
and
sbb
das
mov
icebp
push
push
ja
adc
and
test
int3
inc
xchg
jge
mov
and
inc
lods
jo
test
sahf
push
mov
push
cwtl
ljmp
lcall
icebp
sbb
iret
jp
insb
push
cwtl
pop
outsb
or
loopne
dec
xchg
mov
lret
xor
daa
in
and
push
pop
pop
sbb
mov
in
arpl
push
stos
and
cmpsb
lret
add
or
leave
shll
add
push
mov
xor
sbb
jle
and
push
xor
sti
or
or
push
in
jecxz
pushf
push
lea
shrb
rcrl
or
xchg
mov
push
xchg
icebp
data16
ja
shlb
pop
jp
imul
shrb
lahf
adc
add
dec
sub
popf
dec
inc
out
ds
cli
int3
dec
outsb
push
push
inc
dec
cmp
pop
cli
or
xchg
mov
jns
lea
inc
cli
imul
cmp
and
jno
and
mov
mov
cs
mov
and
iret
add
das
xor
js
fadds
iretw
xor
xor
pop
sbb
mov
sub
sub
aaa
insb
out
xchg
pop
dec
or
hlt
fnstenv
fidivrs
inc
cs
pop
and
adc
and
cmp
adc
loop
sbb
and
stos
push
in
mov
int
xchg
and
arpl
rep
andl
int3
push
pop
loope
fxch
mov
add
into
mov
cmp
inc
mov
xlat
fwait
shrb
out
mov
xchg
ljmp
rcrb
jmp
repz
mov
xchg
lods
mov
cmp
or
call
sub
inc
repnz
pop
js
cmp
mov
andl
scas
mov
dec
pop
xchg
dec
clc
ficoml
ret
addr16
jbe
inc
and
add
pusha
jo
push
cmp
xor
repnz
cmp
inc
loopew
icebp
mov
mov
cld
xor
shlb
pop
mov
repnz
je
inc
cli
andb
pop
sbb
add
mov
sbb
jmp
and
mov
daa
jecxz
add
orl
movsl
and
lahf
cli
push
dec
jle
es
scas
aad
mov
jg
imulb
je
and
shrb
insl
clc
out
cmpsl
outsl
repz
cmpsb
xchg
dec
idivb
cli
ret
jmp
sbb
cmpsb
shl
mov
pop
popf
loop
bound
inc
mov
pop
mov
out
push
xchg
jl
pop
cmpsl
lods
das
or
inc
call
int
mov
mov
mov
popf
jns
jns
pop
sbb
mov
jns
movl
pop
cs
and
sbb
imull
push
std
sub
lods
push
push
je
or
jne
sub
xchg
sahf
fdivr
xor
pop
mov
shrb
push
stos
pop
push
mov
lods
addl
fwait
add
jb
sub
insb
and
push
adc
jae
movsb
int3
dec
hlt
inc
xchg
ds
ljmp
jg
or
test
xlat
sub
mov
repnz
xor
push
pop
icebp
stos
cwtl
jne
subb
sub
hlt
mov
loopne
call
xlat
lock
mov
push
clc
sub
cld
mov
imul
mov
mov
adc
push
out
mov
jp
dec
cmpsl
cmp
adc
mov
mov
and
pop
popf
test
jge
pop
dec
in
lods
xlat
pop
es
cmp
mov
jb
outsb
xchg
test
pop
xlat
in
iret
pop
arpl
mov
cmpsb
jb
jl
out
stos
adc
dec
push
mov
jp
fcmovbe
data16
cmp
fstpt
sti
sub
mov
xlat
or
fnsave
in
xchg
loope
ret
and
inc
pusha
pop
sub
pop
popf
sub
pop
leave
sub
jge
sub
addb
adc
xor
lods
shrb
add
loope
push
lock
adc
clc
test
add
inc
loope
hlt
mov
stc
sub
jbe
add
movsl
ficoml
mov
popl
imul
out
fdivl
imull
push
push
inc
out
into
sbb
ljmp
xchg
jge
or
jmp
shrb
xchg
mov
sbb
aaa
push
fimuls
mov
cmpsb
les
out
push
loope
outsb
fnstsw
push
arpl
cmp
lret
insl
and
nop
jnp
xor
fwait
sub
xchg
push
add
or
inc
dec
dec
push
test
push
out
je
add
jae
out
add
inc
mov
idiv
shlb
iret
pop
xor
xchg
dec
imul
mov
clc
lock
push
mov
sub
xchg
cmp
clc
test
cmpb
or
mov
cmp
mov
xchg
xchg
lret
ret
sbb
fbstp
movsb
rorl
decl
fwait
mov
leave
ret
pop
jo
loop
pop
pop
inc
movsb
scas
rclb
push
aam
mov
lret
mov
stc
int3
jle
push
icebp
test
iret
adc
adc
push
xchg
push
sbb
sub
mov
sub
mov
sbbb
jbe
add
fwait
mov
cmpsb
inc
jbe
inc
mov
lds
int
add
addl
jb
dec
jge
xlat
popa
subb
shlb
lods
daa
fadd
cmp
inc
jmp
fdivr
push
adc
sti
das
jle
pop
stc
mov
push
fs
adcl
fimuls
push
push
mov
pop
adc
mov
cli
fcoml
popa
jecxz
pop
push
mov
outsb
jbe
enter
pop
shl
aaa
push
lea
push
lods
mov
and
push
aad
loope
lret
push
cmpsb
insb
add
cmp
sarb
and
xor
push
inc
add
add
arpl
rdtsc
icebp
andl
out
mov
sbb
sbb
push
pop
cmp
lret
inc
sarb
call
inc
lods
aam
int3
lea
cmp
int3
cmp
sar
or
leave
insl
ret
mov
gs
gs
mov
rcll
ret
xor
lods
loope
fcmovbe
jl
scas
leave
and
aas
inc
test
movsl
mov
add
pop
sahf
sbb
daa
gs
mov
pop
rorl
leave
mov
mov
insl
inc
jmp
lods
in
inc
xchg
lea
cli
push
data16
mov
xchg
pop
cmp
adc
aam
push
mov
mov
or
insb
xlat
jae
shlb
mov
jns
lock
xchg
fcoms
rep
lods
les
call
fnstcw
movl
inc
mov
fwait
outsl
pusha
mov
mov
int3
push
std
jns
lret
orl
hlt
inc
shlb
mov
imul
xorb
cmp
dec
dec
mov
gs
repz
shlb
fsubl
push
cmpsb
push
push
sub
sti
popf
push
ss
xor
pop
lock
sahf
ret
or
adc
adc
stc
outsb
je
outsb
and
fxch
sub
xchg
sbb
sub
hlt
adc
imulb
hlt
js
jno
pop
push
orl
jb
push
imul
xchg
cmp
leave
sub
push
sbb
xor
or
xchg
mov
jmp
ljmp
popa
sbb
dec
pop
add
arpl
out
mov
aaa
sub
push
inc
inc
inc
rcll
repz
and
mov
imul
dec
loope
fwait
arpl
pop
push
data16
inc
stos
push
shll
lret
cmp
pop
scas
cs
loopne
xor
dec
loopne
add
push
inc
push
lcall
pop
adc
cli
push
push
icebp
mov
adc
mov
div
xor
jge
xor
rorl
in
mov
xchg
ret
inc
aad
test
enter
in
adc
mov
inc
pushf
dec
fwait
push
mov
cmp
push
lret
roll
sbb
pop
sub
sbb
or
cmpsl
data16
mov
adc
xor
ja
lcall
cmp
mov
in
fimull
sbbl
pop
lahf
inc
int3
pop
mov
adc
cmpsb
xchg
push
jno
pcmpeqb
push
xchg
jbe
popf
xor
orb
mov
fwait
jecxz
push
out
dec
sub
xchg
xchg
mov
and
ja
sub
and
jmp
or
popf
and
call
pop
lea
sbb
inc
jmp
sub
je
jae
mov
xlat
jns
test
sub
jae
push
nop
ss
mov
pop
inc
inc
in
jp
cld
cli
gs
arpl
pop
sub
lods
and
stos
pop
pop
mov
adc
sbbl
add
in
pop
pop
in
dec
and
and
jbe
sub
lock
xor
jbe
loop
pop
adc
ret
stos
daa
rcll
into
push
icebp
jae
adc
cmp
mull
push
dec
pop
push
es
sbb
lea
pushf
jg
xchg
repz
rolb
js
sbb
xchg
and
ficoms
and
add
pop
sbb
ret
test
lret
sti
dec
hlt
incb
out
xchg
out
cmc
cmp
notb
cmpsl
loop
das
mov
mov
rcrl
jecxz
mov
ret
dec
push
mov
shll
movsl
popa
rcll
fsts
inc
xchg
push
dec
lods
cli
nop
outsb
sub
int
cmp
leave
push
sahf
stos
ret
cmp
push
mov
mov
mov
std
xlat
pop
in
in
into
mov
adc
xchg
push
pop
call
hlt
jl
insb
push
jmp
and
jae
mov
push
nop
icebp
push
int3
sbb
lock
cmp
cltd
push
loope
mov
mov
mov
out
and
mov
lock
jecxz
and
pop
stos
sbb
push
lods
out
sub
and
icebp
shlb
stos
fistl
xor
pop
cs
jns
push
pop
lret
std
pop
jp
stc
cltd
mov
jo
not
mov
jne
push
xor
lret
xchg
jg
addr16
mov
dec
loope
sbb
jl
push
test
or
fdivrs
mov
xor
lea
dec
shll
int
jge
outsl
fistpl
mov
pop
repnz
jns
test
and
test
loope
outsl
lret
cltd
push
sbb
xor
pop
jl
push
push
add
adc
outsl
sahf
jecxz
mov
mov
xchg
pusha
lds
pop
and
mov
imul
xchg
inc
hlt
outsb
test
dec
cmpsb
or
xchg
pop
adc
std
ds
je
add
push
pop
xor
test
inc
stos
mov
cmp
ljmp
jbe
inc
dec
jo
dec
adc
fmul
leave
mov
inc
js
sbb
stc
test
out
inc
jb
int3
pop
and
inc
stos
sub
mov
cmp
push
jbe
fbstp
jg
daa
lock
pop
jae
pushf
test
xor
call
xchg
xchg
xchg
or
jmp
int3
je
jp
add
mov
dec
rorl
adc
aaa
xchg
dec
inc
push
xchg
mov
in
inc
dec
cmc
sub
jo
inc
cs
stos
mov
mov
jge
mov
daa
sbb
and
popa
popa
sti
add
or
jno
fwait
xor
loopne
daa
imul
push
mov
test
jl
inc
push
call
in
mov
fiaddl
stos
inc
mov
lock
xchg
or
cltd
arpl
arpl
lret
mov
fsubrl
test
inc
test
roll
cli
jmp
jnp
dec
mov
and
xchg
cmp
mov
dec
sub
loopne
repz
cmp
push
sub
jno
and
inc
popa
or
repz
xchg
clc
cmp
stos
cmp
fdivs
andb
add
push
push
insb
pop
out
push
mov
loopne
scas
adc
pop
scas
add
jmp
mov
test
test
push
mov
xlat
sub
das
xor
xchg
xor
je
pop
push
sbb
jae
sbbb
pusha
mov
in
jb
xchg
dec
popf
pusha
mov
into
cmpsb
or
shl
cmp
jmp
jp
std
push
ficomps
jne
insl
xor
pop
stc
inc
repz
xor
int3
push
mov
mov
js
pop
aas
fstpl
arpl
outsl
mov
mov
lret
dec
inc
fstpt
push
push
jle
pop
mov
loop,pt
shll
cmp
jmp
cld
int3
rcl
addr16
inc
dec
pushf
lret
pop
push
fiadds
add
and
test
mov
loop
mov
andl
xchg
loope
call
and
xchg
sub
faddl
push
stc
sub
jnp
imul
jno
movsb
scas
push
cmp
adc
jp
jnp
lea
push
jo
fdivp
inc
or
xor
shlb
ds
sub
adc
dec
dec
push
mov
daa
divl
inc
inc
cmp
ret
jb
and
das
mull
nop
outsl
dec
out
and
xor
addb
cmc
addl
add
inc
jb
sub
lds
dec
xchg
lcall
dec
in
pop
cwtl
xchg
pusha
xchg
int
mov
mov
outsl
daa
leave
in
pushf
sub
outsb
sbb
cwtl
cmp
cmpsb
dec
dec
vmaxps
inc
pop
and
outsb
cli
lods
sub
lods
jmp
pop
popa
mov
das
adc
adc
cmp
mov
popa
andb
popf
dec
inc
int3
pop
cmc
inc
jg
mov
fyl2x
cwtl
dec
dec
adc
inc
sub
sub
push
test
cmp
jle
pop
xchg
icebp
pop
icebp
cmpsl
outsb
sti
scas
cmpl
pop
jge
popf
dec
icebp
enter
stos
and
inc
xchg
and
cltd
in
mov
fldcw
jno
mov
js
imul
mov
idivl
mov
addr16
faddl
icebp
mov
lret
pop
mov
mov
es
add
shlb
push
ret
xor
movsb
mov
or
out
jl
jge
inc
fs
sbb
mov
inc
push
js
sbb
loop
xchg
fsubs
jae
dec
or
lcall
push
and
lahf
sbb
inc
push
in
sbb
repz
or
insl
repz
sub
leave
bound
pop
sub
and
test
or
pop
xchg
fiaddl
pop
push
scas
xchg
mov
mov
lret
in
xor
mov
cmp
push
fists
bound
cmp
push
pop
rcrb
pop
outsl
and
push
fisubl
in
std
jnp
mov
cmc
cld
dec
bound
imul
push
xchg
aam
cmp
xor
es
pop
lcall
push
pop
leave
push
adc
sahf
xchg
test
fstl
bound
fnstenv
aad
mov
xor
inc
xor
xor
push
outsb
push
mov
or
sbb
repnz
or
sbb
xchg
and
sahf
int
jg
jo
mov
add
fiadds
jle
out
pushf
imul
insb
xor
or
jmp
and
jge
sbb
int
push
mov
mov
ret
lret
pop
lds
push
adc
add
cmp
das
jbe
mov
loope
leave
or
mov
mov
popl
jno
mov
xchg
xlat
jmp
imul
pop
push
sub
repnz
sub
push
rolb
cmp
dec
pop
inc
cmp
outsl
mov
push
pop
push
cli
shrb
adc
and
push
test
iret
mov
add
cmp
data16
jp
js
mov
iret
sub
adc
mov
lret
inc
insl
jle
rcr
iret
shrl
aas
mov
dec
andb
idivl
in
andb
adcl
xor
cmp
stos
sbb
mov
and
das
call
daa
or
cld
sbb
jne
cmp
jb
fnsave
dec
mov
cmp
loop
shll
ficoml
xchg
adc
out
mov
and
mov
sbb
xor
mov
dec
push
enter
lcall
sub
mov
xlat
jo
and
cwtl
jmp
pop
mov
movsb
adc
aam
fsubrl
mov
inc
sarb
push
mov
mov
push
lds
jmp
cmp
int
and
mov
jae
push
push
push
or
jbe
adc
ds
fistpl
mov
cmp
mov
pushf
sahf
pop
inc
dec
cltd
mov
in
loopne
insl
cmp
push
push
push
xchg
xchg
loopne
sbb
cmp
xor
jns
xor
test
lcall
divb
xchg
in
inc
mov
hlt
and
scas
or
out
or
xchg
sti
or
lret
mov
notb
ljmp
std
mov
leave
rcll
adc
xchg
lcall
inc
add
jo
and
insl
lret
push
mov
push
ret
int
sub
les
fcomip
clc
pop
xchg
pop
jbe
ficoml
pop
ja
push
or
cmp
push
xor
sbb
add
das
out
nop
roll
test
out
sbb
outsb
dec
popf
jg
inc
mov
mov
lret
push
inc
cwtl
cmc
add
mov
bound
andb
fnstenv
pop
or
movsl
inc
adc
mov
pop
jl
sbb
mov
xlat
mov
shl
add
imul
cmp
mov
arpl
movlps
inc
je
adc
push
xor
test
cwtl
aaa
iret
out
push
mov
stos
jns
mov
adc
inc
push
inc
adc
and
inc
mov
enter
mov
jecxz
popa
jns
sub
je
jns
jmp
dec
loopne
repz
ret
xor
xchg
cmp
and
dec
mov
icebp
int
jae
jb
or
mov
mov
adc
lds
je
pop
sbb
cld
mov
lock
mov
test
test
mov
mov
push
push
lahf
iret
cmp
and
popf
pop
ds
xchg
dec
push
pop
pop
fisubs
mov
addr16
out
loopne
fdivr
imul
mov
mov
aad
out
xchg
and
and
rcrb
and
and
arpl
adc
add
mov
cmc
adc
addb
jp
mov
inc
mov
mov
cmp
popf
subb
sub
into
insb
jg
and
loop
lcall
add
repnz
arpl
ljmp
fs
ljmp
xchg
sbb
mov
aad
xor
jne
jmp
adc
add
jns
std
jnp
lods
jle
sbb
mov
xchg
pusha
int3
cld
int3
push
repnz
je
and
mov
je
fisubrs
jmp
int
repz
psignd
sbb
push
xor
push
sub
xor
test
mov
movsb
jmp
mov
adc
data16
mov
clc
and
jmp
xor
imul
sbb
jle
cld
jbe
xchg
in
add
cltd
inc
xchg
xor
scas
int3
cmp
pop
popf
xchg
cmpsb
rcl
xchg
in
pop
push
mov
cmc
cmp
enter
imul
cmpsb
cli
or
add
sbb
xchg
es
mov
insl
pop
or
mov
enter
xor
xchg
sahf
in
jg
jl
mov
mov
pop
ja
jmp
mov
or
xchg
xor
pop
cmp
cltd
ds
sbb
iret
lcall
aaa
stos
fsubrs
cmc
idiv
sbb
adc
notl
adc
push
mov
das
push
mov
jle
scas
and
aaa
fcoml
or
rolb
fisubrs
repnz
ss
into
push
outsb
adc
and
stc
nop
push
adc
xorl
xchg
jne
out
hlt
cmp
push
cli
ret
into
pop
jo
pop
out
mov
je
jp
clc
jle
clc
mov
cmc
js
in
es
sbb
or
es
or
fnstcw
pop
movaps
adc
mov
jl
cld
jne
sub
cmp
mov
repnz
adc
jo
inc
jne
shl
or
test
outsl
repz
aaa
mov
nop
cmpsl
cmp
xchg
jo
adc
in
push
push
jnp
or
mov
jnp
push
mov
aas
cmp
es
cwtl
pop
js
jp
stos
sbb
add
ss
add
mov
mov
fidivrs
lods
rcll
jle
pushf
scas
mov
adc
mov
cmpsb
pusha
add
jp
mov
xor
data16
aaa
mov
lret
inc
subl
inc
and
ficoml
loop
call
int
sbb
sub
scas
adc
loopne
popf
in
popf
stc
dec
iret
and
mov
lea
push
jl
cld
jo
or
lret
sbb
orl
xchg
or
xchg
test
mov
scas
rolb
fnstsw
mov
push
pushf
outsb
pop
pop
or
lods
push
out
rorl
sub
lea
loop
adc
stc
or
aaa
out
pop
jmp
std
daa
movsl
or
je
dec
and
lock
rcr
subl
sti
outsl
insl
movsb
mov
or
popf
adc
and
mov
inc
sub
fistps
lods
hlt
cmp
enter
fwait
sbb
inc
sub
lods
negb
outsb
ss
and
mov
shlb
adc
cmp
dec
dec
mov
fnstsw
cwtl
hlt
mov
adc
stc
icebp
mov
fdivrs
ljmp
loope
jecxz
xor
mov
add
mov
loop
mov
mov
pop
mov
pop
int
mov
mov
mov
hlt
cmpl
lock
or
out
pop
mov
push
out
ss
or
movsl
push
icebp
pop
jno
push
stos
cli
adc
repz
movsl
mov
push
xchg
lret
neg
xor
dec
inc
outsb
mov
add
jbe
call
inc
in
lret
mov
out
push
dec
mov
insl
mov
adc
mov
test
pushf
inc
mov
mov
cmp
inc
ffreep
jmp
icebp
push
pop
lods
cmp
xor
stos
jl
push
xchg
rcll
sub
xchg
pusha
addb
cmp
fisubl
lods
aaa
mov
and
cmp
inc
add
ficoms
mov
dec
out
out
lods
test
aad
addr16
sub
cmpsl
mov
push
shl
push
adc
or
adc
dec
mov
push
ss
rorb
cli
push
test
mov
fisttps
orb
mov
add
mov
je
stos
jbe
cmpsl
xchg
adc
sbb
mov
inc
aad
out
cmp
lods
mov
iret
out
xor
fimuls
cmp
idivb
xor
and
mov
xor
loope
jo
inc
int3
lahf
repnz
ret
mov
adc
adc
or
fdivp
xchg
addl
xchg
pusha
cmovs
movsl
mov
xor
arpl
insb
xor
ja
sbb
inc
iret
dec
sbb
xchg
cwtl
and
cltd
ret
mov
aas
mov
icebp
notl
in
jbe
push
fcmovnu
mov
push
or
iret
pop
clc
in
push
test
pop
lds
xor
xchg
jg
pop
repz
int3
mov
xchg
nop
xlat
in
test
mov
cwtl
jg
mov
movsb
and
push
js
mov
lahf
movsl
mov
lock
mov
insl
shrb
sahf
sbb
call
js
sti
outsl
inc
adc
inc
notb
es
pusha
js
add
or
push
add
push
jecxz
out
mov
mov
sub
push
ss
pop
out
cmp
popa
mov
sbb
stos
adc
dec
xor
dec
mov
dec
sahf
mov
mov
jecxz
outsl
mov
inc
push
loop
pop
sbb
daa
mov
add
cld
es
sub
rorl
jl
sbb
add
ds
shrl
pop
nop
inc
mov
cmp
dec
repnz
inc
stos
enter
and
jne
sub
xor
lret
outsl
lcall
sbb
sbb
es
pop
mov
mov
fcmovu
ret
push
or
push
and
imul
cmpsb
sub
mov
popa
je
loopne
mov
sbb
mov
idivb
lahf
sbb
adc
flds
sub
cmp
gs
lahf
out
and
dec
popa
mov
xchg
jnp
arpl
lahf
in
mov
sub
lret
or
mov
ja
test
lock
and
ja,pt
jae
jne
inc
sar
outsb
jnp
add
clc
adc
rcl
das
cmp
inc
jo
push
subb
xchg
xchg
mov
xchg
xchg
subb
xor
aam
mov
stos
adc
adc
movb
lahf
scas
testb
sub
daa
ds
push
lret
lcall
idiv
pop
icebp
pop
gs
push
sbb
sub
es
xchg
loopne
xor
call
jae
jo
push
cmc
test
fwait
jbe
or
push
pushf
js
mov
lret
ljmp
fnstenv
test
out
xorl
pop
dec
movsl
mov
cmp
jae
lds
pusha
push
imul
and
in
add
inc
icebp
sub
aam
ret
ljmp
dec
insl
pop
adc
sahf
push
pusha
pop
movsb
xorl
inc
cld
test
leave
clc
xor
subl
sub
push
inc
cmc
out
cli
jecxz
adc
jo
dec
wbinvd
push
je
push
xchg
or
push
mov
dec
les
lock
xchg
test
xor
sbb
add
mov
mov
pushf
pop
out
xchg
pop
xlat
cmc
andl
jae
das
adc
jle
adc
leave
scas
mov
hlt
adc
ja
sarb
sub
dec
inc
out
lods
das
shlb
mov
xchg
jmp
je
dec
ds
je
addr16
push
out
push
insb
cmp
sub
or
mov
xchg
cmpsl
popa
push
cmpsb
sbb
jno
outsl
ljmp
xchg
insl
cs
stc
cmpb
or
add
cmpsl
mul
in
push
pushf
jnp
push
pushf
test
sbb
or
jns
fldenv
fmuls
pop
mov
jmp
sub
aad
sbb
adc
mov
push
aas
sub
punpckldq
imul
aad
aas
nop
js
insb
add
shrb
jle
ficoml
xchg
cld
ficoms
hlt
int
jecxz
mov
iret
inc
mov
sbb
jp
pop
xlat
vmulsd
mov
test
push
xchg
fnstenv
negl
jle
pop
out
fisttpl
gs
outsl
bound
inc
cmpsl
outsl
push
jg
lret
inc
push
fistpll
ret
daa
sub
jle
cmc
bound
or
cltd
jbe
cmp
push
movsl
inc
and
notl
dec
cmp
es
into
sar
sbb
fisttps
xor
mov
adc
adc
xor
xchg
jp
cwtl
lret
dec
inc
mov
jne
push
sahf
test
jnp
cmc
xchg
cmp
mov
aas
inc
insb
daa
push
sub
jg
pop
out
lret
inc
sub
mov
cmp
push
out
jnp
pop
ss
mov
sub
cltd
push
cwtl
movsl
jmp
je
jmp
or
shlb
aas
fldl
ja
adc
pop
jp
pop
cmpsl
push
xor
out
fcmove
cli
daa
or
push
mov
xor
sub
popf
nop
pop
fisubs
jb
mov
mov
mov
cmpsb
adc
aaa
fwait
out
inc
or
ret
test
inc
xor
jmp
xlat
test
push
sub
out
add
das
outsl
dec
adc
cmpsl
mov
pushf
sti
pop
divl
jns
mov
push
jl
mov
mov
mov
fwait
jnp
xchg
cmpsl
mov
aad
cmc
jecxz
dec
pop
cli
xlat
sti
adc
add
dec
push
push
popf
into
xor
push
xchg
icebp
jae
insb
das
xchg
mov
mov
cmp
inc
movsl
xor
js
daa
xchg
sarl
cmp
fwait
push
jg
inc
pop
fmulp
cmc
in
inc
sbb
mov
xor
arpl
into
jmp
mov
pop
add
dec
xor
inc
iret
fiadds
dec
shll
cli
mov
sti
repnz
je
pop
sub
xor
insl
cmpsl
push
mov
mov
lcall
lods
jbe
mov
fmul
mov
jne
cltd
sbb
divb
jb
clc
mov
aam
ljmp
jae
adc
push
xchg
mov
loop
inc
lret
mov
and
add
jecxz
mov
xchg
lret
xor
addr16
mov
jg
push
mov
rcrl
inc
push
int
insb
jae
mov
cmpsl
cmp
sub
in
test
push
js
pop
dec
mov
movl
push
sub
stos
inc
loope
ret
push
jns
or
out
xor
cmp
jecxz
pop
mov
in
or
cmp
inc
cmpsl
xchg
rol
insl
and
push
add
dec
fwait
cltd
ss
xchg
push
jmp
dec
cmp
cmp
in
shll
insb
add
cmp
add
mov
dec
inc
mov
test
fisubrs
push
push
inc
in
rcrb
repnz
pusha
in
mov
cmpsb
out
lea
aad
jecxz
repnz
sub
arpl
jae
daa
sub
adc
loop
sub
mov
mov
xchg
xor
fisubs
mov
outsb
or
adc
cltd
lods
aas
sub
lret
movsb
repz
jg
mov
adc
push
scas
out
lcall
icebp
inc
inc
or
pop
pop
in
popf
sarl
mov
hlt
xchg
dec
arpl
scas
sub
mov
adc
clc
pusha
xchg
out
cs
pop
addr16
pop
sti
std
test
fs
add
in
stos
cmp
jbe
movsl
je
mov
lods
cld
xchg
rcll
ss
cmp
push
push
and
pop
sbb
cli
xchg
or
push
ret
stos
push
int
ss
jmp
ret
ret
stc
mov
and
pop
cmpb
mov
sbb
addl
or
addl
and
sarb
int
cmp
lcall
ja
fs
inc
jg
sbb
sub
mov
add
data16
and
pop
insl
xchg
lds
mov
mov
sub
push
shll
lods
arpl
incb
cmpb
or
dec
repz
add
or
stc
or
mov
pop
pop
enter
jb
lods
mov
inc
fmuls
mov
xchg
das
jle
stc
mov
cmp
jle
mov
aad
scas
jne
movsb
add
add
mov
rcrb
scas
mov
loope
jb
decb
jbe
call
mov
pop
sub
imulb
inc
in
or
in
pop
sub
movsl
cli
push
int
enter
test
fldcw
push
push
sarl
sar
mov
repz
inc
mov
adc
cmp
sbb
sbb
lods
int3
push
cmp
popa
push
popf
or
in
in
lret
fisubl
inc
push
mov
mov
sbb
cmc
jmp
jae
outsl
push
scas
push
fstl
mov
leave
pop
imul
repnz
pop
dec
inc
cmpsb
shrl
scas
pop
mov
in
xchg
xor
gs
stc
jb
imul
pop
dec
push
fnstsw
std
dec
add
xchg
imul
dec
popa
lcall
mov
mull
jns
dec
inc
pop
xor
cmpb
stos
jg
loop
addr16
int
out
adc
lret
cmp
test
repnz
jle
push
dec
dec
pop
dec
add
xchg
into
mov
dec
outsl
icebp
adc
mov
adc
lcall
ds
fsubr
sub
int
xor
push
and
cmp
lods
lds
and
mov
addr16
mov
jle
cmp
sti
lds
add
xchg
push
and
cmp
aas
xor
adc
jge
jo
sub
fs
cmp
or
mov
ficoms
push
addl
cs
cmpsl
xchg
test
push
aad
movsl
mov
mov
movsb
andl
fdivrl
jp
push
or
push
std
pushf
fisttps
pop
sbb
push
sbb
test
movsl
add
fdivrl
repz
mov
call
sub
mov
gs
mov
movsl
popf
cmp
and
mov
xchg
jns
and
negl
fildll
stos
sarb
push
and
outsl
add
cmp
jl
cld
pop
pop
xchg
pop
test
pop
dec
mov
int
cmp
test
lahf
fmuls
insb
pop
imul
xchg
fwait
inc
hlt
aad
les
into
jl
inc
push
idiv
sbb
clc
dec
adc
ds
xor
and
sbb
sbb
in
inc
push
inc
add
xchg
dec
mov
lods
adc
sub
cmpsl
inc
leave
dec
pop
les
in
clc
xchg
inc
popa
mov
cmp
jbe
divb
push
pusha
cmp
cwtl
test
add
call
jg
and
sbb
lcall
data16
add
popa
xor
xor
sub
les
call
sbb
jae
pop
pop
faddl
jne
insl
dec
js
mov
daa
mov
push
jne
call
mov
pushf
pop
jae
xchg
adc
and
push
pop
pop
out
psllq
loopne
lret
push
adc
in
fdivrl
and
xor
and
adc
adc
notb
mov
jmp
nop
or
xor
inc
popf
add
inc
xlat
in
or
sbb
outsb
dec
xchg
adc
orl
int
sarb
mov
mov
and
in
pop
ds
cmpsl
gs
call
bound
sbb
test
mov
sub
popf
lds
jno
mov
imul
xor
xchg
mov
cs
loop
and
dec
inc
in
sbb
jmp
popf
push
adc
movsb
dec
imul
xor
lea
pop
lea
push
fs
test
enter
xor
loop
mov
sbbb
jno
loope
mov
or
popa
inc
cmpsb
inc
jne
into
sbb
or
and
mov
gs
push
fwait
cmpsl
inc
xor
movsb
test
adc
rolb
cmp
pop
iret
or
cltd
pop
js
cmp
scas
call
cld
stos
sub
push
lahf
das
push
lret
adc
ret
xor
mov
xor
mov
mov
das
xor
loopne
fldl2e
push
pop
ljmp
cwtl
int3
insl
cmp
into
adc
insb
popf
sidtl
mov
repnz
mov
stos
jge
movsl
icebp
int3
xchg
gs
fdivl
add
outsb
sbb
adc
cmp
pop
xor
mov
jno
shlb
jge
icebp
mov
cwtl
xchg
xchg
fs
in
add
cmpl
cwtl
or
int
lret
pop
adc
adc
stos
mov
test
in
nop
push
sub
sub
fisubs
cmpsl
add
mov
inc
es
idivb
jne
sub
mov
insl
sbb
sub
in
sbbl
out
fisubrl
pop
push
jp
xorl
insl
imul
pop
inc
in
call
imul
repz
dec
lods
and
cmpsb
xor
jns
mov
adc
or
inc
jecxz
xor
lods
mov
dec
gs
jg
test
mov
fs
lret
sarl
push
test
cltd
sub
ja
lret
test
fucomip
xchg
mov
or
pop
mov
pop
push
popa
arpl
aas
ftst
mov
lret
add
je
rorl
xchg
adc
adc
cmpsb
pop
xchg
or
cld
pop
add
adc
inc
les
fucomp
sbbb
idiv
inc
pop
pop
push
and
pop
xchg
and
inc
mov
dec
jo
sub
imulb
push
bound
pusha
inc
int
ljmp
xor
lods
mov
cltd
popa
cmovs
mov
into
lcall
inc
leave
or
xor
ret
cmpsb
add
mov
inc
out
sub
nop
add
jae
adc
adc
into
shlb
insb
mov
leave
int3
sbb
fmulp
je
sub
js
sbb
js
jno
dec
jmp
das
ret
outsb
xchg
mov
int
aad
cmc
sub
in
pop
inc
out
push
ja
mov
jne
lcall
nop
int
ljmp
mov
lret
in
pop
andb
insl
pop
dec
mov
add
jge
fadd
insl
in
ja
mov
dec
sub
cmpsb
roll
mov
leave
jno
jno
xchg
dec
test
sbb
mov
jge
test
sbbl
rcrl
out
xchg
and
stos
xor
xchg
rolb
fdivrl
pusha
sbb
xchg
push
dec
push
fst
jle
clc
sub
push
xchg
rorl
cmp
sbb
je
push
inc
sbb
or
stos
mov
cmp
pop
sti
xor
fisttpll
xchg
add
scas
out
or
rorl
cmp
lahf
xor
and
scas
gs
out
xor
sub
inc
xor
jnp
incb
xor
stc
cmpb
popa
cmp
inc
xor
adc
add
cwtl
jmp
dec
mov
xchg
mov
into
jo
ds
adc
in
add
cs
rcl
jne
fld
xlat
repz
sub
aad
xor
daa
test
div
daa
or
arpl
push
adc
pop
stos
stos
xchg
dec
dec
gs
mov
sahf
pushf
clc
push
jno
dec
rcrl
das
dec
add
adc
or
mov
pop
jmp
xor
xlat
pushf
mov
and
cmp
lds
inc
rcrl
fildl
and
cmp
inc
fnstsw
xchg
int
cmpsb
xlat
ja
sbb
or
xchg
jmp
push
sbb
push
loopne
mov
or
and
rolb
push
sub
pop
inc
cmp
aaa
insl
std
pop
sbb
fildll
sahf
mov
inc
xor
inc
sub
jo
scas
rcrl
out
and
mov
or
or
hlt
insl
lret
pxor
jno
into
aam
pushf
cli
mov
int3
leave
pop
inc
sbb
xchg
or
mov
gs
ret
pushf
call
dec
pop
fcompl
pushf
jb
imull
lcall
xchg
cmpsb
cmpsl
fs
pusha
dec
out
xor
push
test
lret
mov
lock
mov
xor
fsqrt
push
cmp
lret
arpl
decb
mov
sbb
jle
rorl
imulb
mov
xchg
xlat
rcl
add
pop
mov
xlat
sahf
dec
cmp
bound
je
xchg
push
repnz
xor
jne
or
jo
sarl
push
sub
pusha
lcall
inc
loop
enter
divb
pop
sub
sti
pop
sbb
in
data16
pop
xchg
repz
stos
lods
jne
icebp
xchg
es
xor
fbld
dec
popa
cwtl
cmpb
jmp
xchg
or
jb
xlat
adc
push
or
das
dec
xor
in
push
outsl
inc
cmpsb
icebp
roll
cmc
outsw
nop
comiss
sub
push
bound
push
dec
pop
je
rol
inc
in
or
jns
flds
push
test
insl
daa
sub
add
sbb
add
cmpsb
sahf
sti
icebp
inc
enter
xor
xlat
mov
cli
fwait
ret
popf
movntps
jmp
dec
cmp
pop
stos
sub
lea
ljmp
pop
bound
or
fldenv
popf
stos
push
sti
andb
stos
ljmp
sbb
js
push
lret
outsb
loop
insb
iret
add
and
fsubrp
fistpll
mov
lods
dec
dec
sbb
push
dec
xchg
push
out
pand
adcl
in
bound
inc
cmc
aaa
sub
test
sarl
xchg
dec
and
dec
mov
mov
adc
jb
das
jo
jp
gs
stos
pop
sahf
out
adc
test
pop
inc
scas
in
dec
lds
insb
add
push
sbb
outsl
js
negb
ja,pt
add
cmp
sub
sbb
in
sub
outsl
push
jo,pt
xchg
punpckhdq
imulb
popf
call
jnp
in
arpl
call
xchg
xor
movsb
cmc
xor
pop
xor
mov
jge
mov
cmp
aam
mov
mov
lods
stos
clc
or
jl
xchg
loopne
shlb
arpl
sub
wrmsr
fwait
mov
testl
mov
sub
leave
sbb
push
adc
cmpsb
aam
lret
mov
sub
pop
iret
dec
adc
ljmp
cmp
mov
repnz
push
hlt
push
bound
jbe
outsb
mov
cmp
scas
lods
iret
bound
sub
lods
out
add
lock
addr16
adc
lahf
mov
dec
ret
ret
adc
popf
fcos
xor
push
inc
aas
stos
popf
dec
punpcklbw
or
jge
inc
js
xchg
xchg
sub
and
pop
xchg
xor
cld
lods
mov
mov
jnp
insl
arpl
cltd
out
push
mov
dec
add
jecxz
out
sbb
push
mov
push
hlt
inc
xor
imul
mov
adc
mov
aas
xchg
cmc
insl
jmp
add
adc
jnp
test
and
das
push
andl
loope
out
pop
andl
or
adc
fwait
sub
jmp
outsl
jbe
shlb
outsb
jecxz
rcr
add
add
into
adc
fcoms
dec
cmp
cs
push
hlt
pop
mov
sbb
pop
inc
dec
xchg
xchg
sub
fldln2
and
dec
pop
push
out
scas
arpl
icebp
mov
mov
push
cmp
cltd
inc
push
pop
icebp
mov
sbb
aam
mov
sbb
or
cmp
js
and
cld
mov
pop
sub
sub
out
jecxz
clc
dec
or
sbb
pop
pop
push
pop
sub
push
pop
add
out
mov
mov
ss
idivb
inc
mov
add
mov
lcall
mov
or
cmpsl
fnstsw
popf
shrl
ss
jnp
cmp
inc
lcall
mov
mov
pusha
dec
push
mov
int
sub
dec
cwtl
xorl
dec
test
pop
push
xchg
fsubrp
and
cmc
pusha
clc
cltd
loope
mov
jae
sub
push
inc
lods
inc
out
negb
test
sub
gs
cmpb
jecxz
out
inc
inc
repz
fdivrs
jle
and
out
andb
mov
cltd
mov
aaa
imul
sahf
jmp
hlt
push
jno
leave
int
fcmovbe
in
lea
add
cmpsl
ret
mov
pop
orl
aad
pop
loop
in
cmp
pop
ja
sbb
adc
jbe
sub
jle
insl
cmp
mov
add
push
popa
mov
in
adc
cmpsb
std
add
aam
aas
rclb
out
iret
add
movsb
mov
fs
jne
xor
pushl
dec
lea
out
fidivs
push
shl
mov
scas
push
movsb
int
sub
loop
pop
or
std
xchg
decb
sub
outsb
enter
mov
xchg
mov
xor
mov
xchg
lea
and
ljmp
hlt
push
mov
ds
jge
inc
pop
loopne
out
jae
mov
cmp
fwait
sbb
inc
pop
cmp
mov
mov
jmp
adc
sub
mov
popaw
cmp
and
ret
fnstenv
fisubrs
inc
icebp
mov
daa
mov
lcall
lcall
xchg
loope
xchg
fisubl
cmp
xchg
sbb
sbbl
cmp
sub
fdivrl
inc
inc
test
push
cli
and
push
aas
cmpsb
xor
mov
mov
mov
inc
jmp
sti
xchg
clc
shll
xchg
jae
sbb
push
inc
jmp
add
adc
arpl
pop
cld
ss
jbe
cwtl
sarb
in
rcrb
jb
jo
fdivrs
and
cmpsb
push
lahf
jg
les
sbb
clc
and
add
frstor
enter
dec
nop
add
xchg
fstpl
sbb
push
fldt
or
lock
aam
xor
aad
adc
adc
mov
adc
pop
cmp
sbb
lret
loop
jle
jns
inc
enter
mov
jnp
xor
xorl
sbb
daa
lcall
test
push
adc
lret
stos
rcl
js
push
idivl
popf
mov
xor
sti
xchg
mov
sbb
xchg
xor
and
cld
pop
sbb
mov
mov
pushf
and
cmpl
or
adc
add
repz
ret
mov
imul
jbe
mov
sub
pop
cmp
ds
imul
fldpi
jbe
or
adc
mov
sub
fldt
movsb
repnz
lds
ja
xchg
adc
lods
js
push
lock
xcrypt-cfb
cmpsl
mov
jmp
inc
addr16
mov
aad
and
data16
mov
lods
shlb
jmp
push
stos
jns
imul
xor
fidivl
pusha
xchg
rolb
xor
sbb
sbb
mov
add
jo
or
push
gs
lcall
fbstp
repnz
pop
push
pop
aas
stos
call
pop
adc
jmp
cmp
and
mov
lea
fisttpll
lods
mov
adc
mov
mov
mov
repz
outsl
popf
pop
js
adc
pop
add
jg
rcr
aad
push
ss
lret
movsl
cmp
dec
inc
sub
das
lock
mov
inc
push
inc
aas
imul
mov
repnz
enter
adc
int3
sbb
icebp
jo
sar
mov
push
ja
cmp
mov
cmpsb
loopne
loope
sbb
loopne
push
mov
mov
rolb
fstpl
jle
and
mov
popf
and
xor
jne
out
stc
or
adc
cltd
gs
or
push
sub
imulb
test
and
xchg
aas
test
mov
gs
and
lds
pushl
xorl
popa
enter
add
inc
mov
adc
xor
jnp
adc
and
or
xchg
or
call
icebp
popf
sti
inc
cmp
mov
xchg
insb
daa
or
pop
push
icebp
stos
aaa
outsb
cwtl
jne
jns
or
xchg
sbb
and
pop
sbb
sub
std
in
mov
icebp
adc
adc
and
jp
jle
mov
aad
push
fs
jge
lds
push
mov
lahf
dec
and
adc
loop
jg
xchg
mov
adc
test
mov
jle
out
dec
insl
lods
inc
jl
out
ja
jno
jp
cmp
out
inc
jb
push
aaa
in
incl
cli
inc
cld
adc
inc
ret
pop
pop
push
or
sbb
mov
mov
aas
mov
mov
gs
sub
jmp
in
add
xchg
xchg
mov
out
outsl
lock
rorb
xor
out
mov
sub
int
das
lahf
mov
iret
shrb
xor
push
mov
stos
clc
bound
sub
lock
stos
js
das
lds
ja
out
cmpsl
sbb
or
add
jmp
or
mov
cmp
jo
loope
sub
or
cmp
or
ffree
nop
jl
fisttpll
fmul
enter
sub
push
rorl
fmuls
stos
popa
sbb
xchg
sub
fldcw
scas
popf
push
in
jo
enter
push
lods
sbb
bound
dec
sub
es
sbbl
stos
addr16
int
add
in
push
sub
mov
aam
adc
or
ret
jnp
mov
int3
outsb
hlt
dec
sub
stos
cli
psubd
clc
pop
ljmp
pusha
push
mov
jnp
or
cmp
cmp
or
or
mov
or
sub
lret
decb
cltd
adc
repnz
adc
adc
mov
insb
stos
jae
loope
cmp
pop
pusha
mov
pop
ss
negb
in
pushf
xchg
fimull
in
into
scas
call
inc
sarb
adc
test
ja
shlb
cmc
and
mov
or
push
and
call
cwtl
cwtl
mov
or
es
pop
lcall
negb
dec
loope
das
stos
enter
int3
aas
cmpsb
jge
mov
lods
test
rclb
jbe
push
jbe
sub
dec
xlat
mov
out
ss
dec
hlt
sub
scas
dec
adc
notl
stc
xchg
into
ss
jmp
push
popl
jle
fsubs
jns
push
sub
in
addb
jecxz
orb
or
add
movsl
sub
popf
aad
ret
mov
xchg
int
rcll
and
jmp
mov
lock
push
dec
and
push
jle
in
push
pop
fwait
mov
inc
jae
dec
outsb
fidivs
xchg
shrb
lods
dec
dec
and
fsubrs
mov
pop
adc
int3
stos
xor
and
inc
pop
jnp
adc
mov
pop
fmuls
test
into
adc
and
push
jl
lret
and
data16
lcall
or
mov
insl
dec
push
inc
sbb
push
fs
lea
fisttps
pop
repnz
and
xchg
mov
jnp
addl
faddp
xchg
push
and
les
jg
rcrl
lea
mov
push
test
dec
jl
mov
mov
nop
sahf
pop
cld
cs
mov
fwait
lret
sahf
cmpsl
shr
pop
mov
out
inc
mov
sbb
addr16
sub
rol
aaa
sbb
lcall
push
add
xchg
mov
lret
cltd
jno
sbb
dec
idiv
mov
push
and
and
sbb
inc
mov
into
adc
jl
push
adc
shl
ljmp
pop
stos
bound
call
jb
insl
aas
cwtl
dec
cmp
xchg
ret
loope
and
cmp
or
divl
xlat
sub
aam
hlt
scas
mov
cmp
mov
addl
push
enter
jle
pop
xchg
push
inc
sbbb
iret
add
inc
pop
xchg
xchg
push
cs
push
and
scas
or
ljmp
push
stos
gs
mov
cld
bound
push
jns
add
stc
inc
mulb
fbld
roll
xor
enter
lock
es
adcb
sub
xor
xchg
or
pop
jne
inc
mov
pushf
sub
mov
sub
jecxz
sti
mov
aas
aam
add
cs
stos
and
push
fstps
add
push
add
cwtl
mov
and
fisttps
jp
jnp
xor
push
xor
cmp
loop
cmp
xor
adc
push
xchg
insl
mov
pop
and
daa
mov
cmp
sbbb
mov
mov
jne
imul
std
xchg
outsb
out
dec
ds
sahf
imul
mov
rclb
xor
push
mov
xchg
jo
insl
inc
xchg
ret
lcall
mov
mov
inc
mov
xor
sarb
sbb
inc
cmp
jbe
push
add
add
data16
inc
out
sub
mov
orb
dec
or
sub
out
cmp
out
mov
lods
mul
aam
pop
shl
xor
pusha
xorl
shlb
aaa
mov
addl
adc
xchg
inc
xor
cltd
leave
pop
insl
xlat
pop
and
mov
inc
add
repz
push
mov
iret
adc
cmp
add
and
pop
les
lret
jmp
cmp
jp
mov
rorb
enter
push
jnp
lret
and
bound
push
repz
pop
pusha
lcall
xor
hlt
ret
mov
pushf
cmp
mov
cmp
mov
loop
int
sbb
ror
jno
sub
mov
in
xchg
cmpsl
cmc
enter
pusha
add
adc
loop
pop
fldl
jle
cmp
mov
addb
mov
sbb
cs
push
dec
cmpsl
mov
pusha
push
mov
sbb
inc
lret
xor
in
and
adc
daa
adc
es
xor
xchg
std
fmul
cwtl
or
sbb
xor
jecxz
dec
loope
fiaddl
fdivr
mov
pop
pop
push
sbb
adc
and
mov
dec
test
jp
push
sub
dec
cmp
inc
outsb
jbe
or
dec
inc
jl
sbb
stos
dec
les
ret
js
add
cmpsl
scas
hlt
or
sbb
xchg
cwtl
pop
in
and
scas
iret
ds
lea
adc
pop
push
xor
mov
jno
cli
cmp
add
xchg
cmpsb
lods
bound
mov
inc
fistpl
dec
call
ret
stc
xchg
xchg
shll
cltd
fdivrs
ret
sbb
add
lret
adc
lret
cs
mov
inc
cmpsb
add
call
and
test
push
add
sub
lock
push
scas
repnz
subb
es
imul
pop
pop
ficoms
add
bound
mov
pop
dec
xor
cmc
jae
xor
jae
mov
mov
xchg
stc
adc
cltd
cld
mov
xchg
movsb
fsubs
mov
fadds
mov
lds
mov
sub
xor
sti
mov
adc
inc
and
mov
mov
ror
pop
cmp
sub
and
jae
cmpb
push
enter
xchg
loope
add
inc
outsl
inc
cmpsl
mov
stos
push
inc
add
or
aad
stos
pusha
xchg
dec
outsb
or
sbbl
xor
sub
lods
movsl
jecxz
ds
lock
lods
jbe
mov
sti
pop
cwtl
dec
rcr
movsl
sub
inc
mov
stos
das
push
ljmp
lahf
ja
adc
cmp
jnp
sbb
iret
and
nop
mov
stos
test
xor
mov
sbbl
add
fstps
xchg
bound
add
xchg
cmc
lea
dec
cli
mov
jle
or
sbbb
pop
mov
sbb
mov
add
and
dec
loopne
daa
fbld
mov
and
outsl
rcrb
xor
subl
push
iret
arpl
adc
faddp
push
sbbl
and
in
mov
jne
lods
sub
dec
test
sbb
pop
sub
push
icebp
scas
push
add
lock
push
loop
jge
jbe
dec
mov
test
or
adc
lea
mov
into
adc
iret
popa
pop
das
dec
adc
xor
xor
lods
sub
leave
xchg
dec
mov
push
mov
sahf
bound
or
xchg
sar
in
inc
in
cmc
cs
insl
sahf
inc
or
wrmsr
and
pusha
mov
out
decl
or
and
or
aad
daa
out
je
sbb
mov
fs
lahf
into
push
loop
nop
dec
shrb
add
push
push
in
fcmovb
insb
cli
aam
dec
in
cs
mov
je
test
fsub
pop
push
data16
add
lods
insb
loop
shr
ds
mov
test
test
mov
or
push
ficoml
and
fildll
mov
imul
aaa
imul
xchg
into
mov
andl
lds
mov
loopne
pop
mov
add
aam
fstpt
xchg
insb
mov
xor
xor
mov
fldcw
fldl
enter
out
pop
out
loop
imul
pusha
xchg
push
addb
lret
or
mov
ss
inc
jno
dec
ret
adc
and
jae
inc
movsb
or
or
push
pop
cmp
psadbw
xlat
es
xchg
mov
jge
inc
push
mov
push
call
out
movsl
loopne
in
lods
jmp
mov
mov
shll
je
dec
cmp
sbb
popf
insb
add
mov
fildl
ret
orb
mov
int3
les
mov
in
popf
cmpsl
sub
inc
lods
xchg
sub
or
scas
dec
mov
jno
mov
mov
jg
ffreep
outsl
pop
jnp
sbb
cmc
lcall
out
lods
push
sub
icebp
cwtl
cmp
das
bound
sbb
pop
and
mov
cwtl
fsub
mov
dec
sarl
push
adc
push
leave
gs
jg
bound
insl
xor
or
psrld
pop
sarl
or
aaa
in
sahf
push
and
cld
mov
outsb
cmpsl
movsl
lret
sub
sbb
testl
pushf
mov
adc
test
xor
and
hlt
mov
repz
movsb
fbld
xchg
and
js
inc
test
mov
sub
push
call
pextrw
outsb
icebp
iret
jb
pop
jecxz
dec
add
movsl
pop
fcoml
xchg
cltd
pop
nopl
cli
mov
loope
jbe
cmc
push
push
push
xchg
insb
dec
push
lds
dec
or
in
jg
lods
in
xchg
push
mov
add
inc
inc
cs
imul
subb
cmc
push
lds
ds
outsb
out
jns
jmp
pop
rorl
fimull
mov
sbb
fstpl
sub
lea
repnz
lcall
jae
mov
stos
das
push
pop
addl
xlat
inc
dec
mov
adc
mov
into
push
or
sub
cmpsl
inc
jnp
mov
mov
data16
push
clc
leave
pop
jne
and
ss
daa
lret
clc
xchg
addr16
cltd
pop
xchg
adc
jns
xchg
mov
sbb
cld
stos
sbb
inc
int3
xchg
icebp
insl
mov
jp
mov
jno
nop
lock
daa
inc
icebp
push
outsb
add
fdivrs
sarl
and
in
mov
lods
pop
inc
pop
repnz
test
sub
pop
xchg
dec
add
in
int
movsb
jno
ljmp
ljmp
insb
jg
loopne
daa
and
xor
pop
sbb
pop
mov
in
push
xchg
jo
push
clc
loopne
push
fsubrl
cltd
out
mov
bound
decl
or
mov
sub
sti
cmc
loope
mov
and
in
nop
out
push
notb
jns
out
mov
sbb
mov
xlat
mov
scas
mov
xchg
mov
mov
xor
in
out
rolb
adc
inc
mov
and
jp
mov
and
cmp
jl
cs
loop
in
jecxz
bound
test
out
nop
insl
mov
lods
xor
xor
mov
push
xor
push
or
mov
cmp
rcrl
mov
push
and
push
inc
ds
lock
pop
lods
in
out
ljmp
jg
imul
push
sub
push
lret
std
mov
test
xor
jmp
lods
push
add
rcr
push
sbb
cmp
push
loopne
mov
mov
sub
test
cmpsb
aas
jl
adc
stos
mov
jle
in
add
cmp
jbe
loopne
pop
in
cmc
mov
sbbb
jle
icebp
test
jns
popa
inc
int3
sub
insl
dec
push
flds
imul
js
and
fdivrl
pop
push
cmp
int
fcmovnu
rcrb
lds
jae
out
dec
xchg
or
lds
add
ss
aaa
popa
inc
pop
jb
mov
lahf
pop
or
cmp
push
or
xor
mov
cmp
xchg
test
mov
jno
or
mov
inc
ret
pusha
fldt
mov
mov
mov
push
push
pop
out
stc
cmp
fdivr
xchg
jns
in
push
lret
sub
inc
loop
adc
outsb
jge
jb
xchg
pop
movsl
lret
cmp
push
push
fisttps
xlat
inc
sbb
xor
xchg
aam
addb
scas
pop
out
jb
pop
lahf
enter
xchg
out
xor
cmpb
inc
in
cmp
addr16
adc
and
fcomps
xchg
outsb
jg
inc
fimull
mov
add
in
mov
in
arpl
adc
push
xchg
cmp
add
xorb
fldl
cwtl
fcmove
mov
pop
xchg
fwait
jp
stc
sbb
add
push
xchg
out
shl
mov
int
sahf
push
push
mov
out
xor
jle
popf
sbb
or
in
mov
sahf
cmp
xchg
jae
add
dec
mov
and
loope
jp
adc
xorb
mov
cmp
or
fistl
nop
lret
sub
and
sbb
popa
sbb
xchg
cld
and
add
sbbb
pop
ds
pop
adc
jecxz
cmp
in
add
fildll
pop
push
lds
push
daa
and
addr16
lret
shr
fisttps
cmp
mov
clc
adc
jne
xchg
in
hlt
adc
stc
inc
in
sub
sbb
push
mov
imul
inc
dec
push
mov
stos
inc
repz
jg
or
lcall
and
and
arpl
iret
cld
sbb
fildll
jnp
fldl
sbb
push
push
aaa
shll
push
sub
cmp
movsb
insl
stos
lret
repnz
pop
and
sbb
mov
or
loop
push
xchg
mov
ret
pop
movsb
inc
gs
push
dec
lret
das
xor
mov
test
or
xor
sbb
loope
in
aad
cmp
data16
cmpsb
popa
rcll
sub
mov
push
jae
mov
dec
repnz
dec
mov
pop
dec
push
pop
aam
push
sub
rorl
mov
ret
loopne
stos
loope
ror
mov
stos
add
mov
jmp
cltd
or
std
je
aas
in
add
mov
mov
arpl
jmp
xor
pop
sti
or
leave
movl
or
cmc
xchg
fs
xchg
lret
adcb
insl
test
or
cmp
sbb
dec
dec
dec
cmpl
mov
aam
movsl
sub
xchg
inc
repz
cmp
cmp
sahf
rolb
cmp
in
jecxz
adc
pop
test
inc
std
adc
int3
inc
inc
shrl
fisttpl
or
lds
test
sbb
mov
xchg
dec
cmp
mov
loopne
fidivrs
ljmp
cli
test
pop
mov
dec
mov
test
pop
sub
push
pop
pop
cmp
push
jge
pushf
ss
dec
das
gs
or
addr16
mov
hlt
add
mov
out
je
jl
mov
pop
stc
pop
push
int
push
cmp
das
fmul
nop
pop
xor
add
aad
pop
or
inc
or
xchg
xor
shl
adc
jbe
stos
lods
jbe
rclb
sub
ljmp
sub
mov
ja
orb
mov
xchg
insb
dec
jg
mov
pop
dec
or
adc
pop
cmp
daa
les
pop
gs
fwait
xor
dec
orl
outsl
push
mov
xor
cltd
fdivr
icebp
das
fldl
stos
xor
test
xor
into
pop
insb
push
add
mov
push
out
movsb
mov
push
xchg
jb
movsl
dec
stos
pop
mov
inc
or
jne
and
fnstsw
adc
pop
add
insb
jb
push
cmc
loopne
mov
push
sub
mov
sub
jo
sbb
inc
mov
mov
pop
adc
jnp
scas
int3
mov
icebp
inc
jecxz
fsubrl
arpl
adc
mov
add
aaa
pushf
xchg
inc
pop
std
cmp
jne
sub
and
leave
sbb
push
cmp
std
inc
or
sub
jmp
and
pop
push
mov
and
push
insb
adc
push
out
dec
xor
pop
dec
outsb
out
cmp
lds
fbstp
mov
mov
push
fisttpll
iret
sub
sbb
inc
mov
dec
incl
testl
adc
scas
push
lahf
xchg
add
jo
es
popl
call
in
jge
pop
ss
jmp
pop
jg
orl
rcrb
int
ret
lret
push
lret
sub
test
adc
andl
lods
imul
push
ljmp
inc
jg
lahf
inc
adc
ljmp
arpl
inc
into
jnp
lea
push
xchg
pop
jge
test
jecxz
and
inc
push
or
push
mov
dec
out
push
repz
test
adc
mov
sbb
sub
icebp
dec
pop
push
pop
and
xchg
es
inc
pusha
add
repz
stc
in
int3
out
sub
or
out
icebp
inc
jo
frstor
adcl
ret
stc
pop
std
test
xchg
imul
data16
bound
push
movsw
add
lods
pop
xor
out
sarl
push
and
add
ret
lret
xchg
lret
lds
sbb
sbb
imulb
xchg
jo
push
sahf
cmpb
repz
or
or
movsl
and
cwtl
jae
clc
fcmovne
dec
dec
ljmp
test
cwtl
cs
sahf
sbb
gs
or
cld
mov
pop
xor
mov
jecxz
sbb
sbb
repz
jmp
or
or
in
push
outsb
js
dec
sahf
pop
movsl
cmp
push
mov
jge
jecxz
jo
cmpsl
xor
scas
js
xchg
scas
and
in
es
or
stc
out
ss
or
ret
sub
jns
mov
aam
inc
mov
xchg
ret
adc
add
and
push
xlat
pop
cs
scas
scas
cmpsb
adc
stc
jns
add
stc
sub
sbb
insl
leave
test
rolb
adc
fnstenv
loopne
mov
push
cmp
add
lahf
mov
in
pusha
in
movsb
rorb
mov
mov
push
push
mov
lcall
jecxz
mov
and
cmp
dec
ljmp
mov
mov
lahf
data16
lret
xchg
movsb
xchg
xchg
fcomps
das
pop
push
xchg
xor
mov
mov
bound
je
fstpt
in
call
mov
jb
fimull
pop
lret
loope
clc
lea
fiadds
inc
clc
xchg
in
push
imul
add
fs
xor
sub
iret
loop
adcb
push
fsts
xor
hlt
cmpsb
pop
out
dec
mov
pop
pop
pmaxub
sub
mov
out
popa
fildl
or
fstl
xchg
adc
mov
fildll
clc
into
xor
dec
xchg
cmpb
insb
fnstenv
or
icebp
add
dec
into
imul
rorb
sarb
jmp
mov
sub
cltd
loop
add
in
inc
dec
cmpsl
sbb
std
and
out
push
pushf
and
decb
adc
mov
scas
imul
lcall
mov
cld
clc
inc
push
ja
cmp
jbe
div
mov
mov
sbbl
aam
iret
mov
inc
gs
xor
cmp
xorl
xchg
cltd
xor
and
outsl
pop
lret
andb
xchg
and
test
out
hlt
add
test
mov
add
das
stos
inc
mov
pop
cmp
mov
icebp
push
sub
std
jns
push
mov
pop
jb
pop
mov
fildll
xor
scas
adc
jo
ret
push
mov
mov
cmp
adc
mov
out
out
push
int3
rcrl
flds
scas
fldcw
cmpsl
push
enter
and
adc
pop
lods
stos
les
push
inc
mov
xor
popf
in
ds
and
xor
js
loop
movb
push
orb
mov
jnp
or
movsb
mov
fidivs
cmpsb
dec
sub
mov
jmp
f2xm1
ficoms
call
mov
mov
add
push
out
das
rcl
outsl
and
stos
jnp
dec
shll
add
daa
dec
ret
fldl
out
cwtl
or
and
testb
aas
mov
sub
sbb
in
cmpsl
addb
jnp
jo
sub
enter
or
ljmp
inc
push
mov
mov
jg
mov
mov
dec
sub
jle
aad
ret
push
sarl
cltd
adc
popf
push
popa
xor
mov
mov
into
adc
cmp
mov
sub
add
popa
hlt
icebp
cld
test
mov
and
xchg
mov
mov
subb
insl
cmp
mov
cli
mov
imul
vrcp14ss
adc
sti
add
xchg
sub
testb
xor
jno
and
xchg
cmp
pop
stos
int
jge
fisubs
lock
xchg
loop
hlt
es
push
mov
insl
test
mov
jb
push
jb
stos
adc
fcmovnbe
push
mov
mov
adc
inc
leave
pop
sbb
loopne
inc
pop
adc
adc
mov
mov
pop
sbbl
dec
xchg
rcll
lcall
bound
jnp
push
mov
test
sbb
dec
aam
sbb
mov
mov
or
imul
xchg
add
push
out
dec
push
push
and
mov
sub
push
xchg
dec
popf
adc
pop
dec
test
xchg
cmp
cmp
outsb
push
cmp
inc
pop
pop
add
pop
rorb
fbstp
mov
mov
xchg
imul
jmp
mov
mov
mov
or
sub
mov
roll
rorl
xchg
aad
and
push
mov
aam
and
lods
loope
pop
or
sub
movsl
insb
scas
in
mov
xor
jo
mov
pop
movsb
xchg
nop
jne
push
dec
iret
mov
in
cld
fisubrl
movsb
nop
pop
sub
push
pop
or
dec
fsts
add
add
stos
inc
outsb
hlt
adcl
mov
add
xor
lahf
add
add
mov
mov
or
arpl
in
jb
rol
aad
or
pop
and
mov
das
fadds
rclb
add
ficoms
rcll
cmp
sarb
enter
lods
cltd
mov
push
sub
das
or
adc
mov
dec
lret
jp
lret
sar
imul
sub
push
test
cltd
and
and
add
stos
and
mov
dec
inc
imul
lahf
jle
push
ficompl
imul
int
negl
xor
int
adc
ja
dec
pop
add
add
or
and
cmp
push
jge
xchg
test
in
out
movsb
sbb
fisttpll
mov
pop
adc
push
fdivrs
aas
in
jge
or
mov
mov
mov
sbb
cmp
loopne
popa
ljmp
pusha
xchg
sar
xor
adc
imul
jle
in
dec
ds
loopne
cmp
lock
mov
lods
xchg
mov
mull
or
insb
mov
mov
out
xacquire
mov
jns
popa
in
ljmp
cltd
shl
and
popa
daa
and
mov
repz
pushf
ret
mov
aas
jns
cmp
adc
outsl
addr16
stos
and
mov
int
xor
jbe
lea
daa
pusha
lods
push
pop
mov
pop
pop
notl
and
mov
inc
or
jl
nop
ss
and
cmp
xchg
cltd
xchg
and
adc
nop
inc
or
xchg
mov
and
push
pop
sarb
push
sbb
mov
ror
mov
std
lds
div
mov
loop
lcall
pop
mov
scas
or
cmp
push
out
jo
mov
pop
hlt
cwtl
pushf
jo
adc
loope
lahf
ss
mov
pop
ja
rorb
xlat
lea
xor
or
jmp
into
and
popa
popa
dec
mov
data16
inc
pop
sub
scas
mov
loopne
mov
add
jg
testl
adcb
cli
xchg
dec
mov
mov
lods
push
popa
lahf
in
push
hlt
mov
lods
jne
xor
push
enter
ja
push
lds
and
in
or
xchg
add
mulb
sub
jno
adc
jae
cs
aam
jo
adc
adc
mov
rcl
mov
inc
mov
sbb
in
mov
lret
mov
lock
jb
in
loope
pop
fsts
mov
movsb
or
jecxz
cmpsb
imul
rcll
push
rcll
fiadds
stos
jb
adc
inc
pop
pop
add
sbb
dec
sarl
scas
mov
ss
orl
pop
ja
xor
add
jg
sub
mov
pop
cmp
clc
sbb
pop
sbb
mov
jecxz
fisubs
fadds
rcrb
jbe
gs
fwait
popa
xchg
popf
xor
jae
daa
mov
aaa
cli
int3
stos
lods
jae
nopl
lods
jae
sub
adc
sbb
or
jmp
call
out
ss
aam
loop
mov
ss
dec
adc
cmc
in
add
or
xchg
std
cmp
and
jl
sbb
out
fcomps
xchg
or
mov
push
fwait
jns
add
and
pop
and
call
or
or
enter
cmp
adc
jle
loop
pop
jmp
xchg
sbb
cmp
nop
push
popf
or
jb
inc
sbb
sbb
fnstsw
add
call
loope
hlt
stos
jmp
mov
mov
cli
inc
jns
cmpsl
xchg
inc
repnz
fistps
sbb
lahf
push
popa
divl
lcall
pop
jg
pop
jmp
addb
pop
cmp
cli
jne
movsl
lods
xchg
mov
ss
js
add
movsb
xchg
pop
das
mov
shll
into
frstor
mov
addr16
mov
adc
pop
add
test
fcoml
mov
or
lea
cmp
push
pop
shrl
in
jge
aaa
aad
jmp
dec
das
xor
sub
xor
fcoml
cmp
mov
mov
clc
or
bound
mov
popl
call
push
out
mov
icebp
and
sub
xorl
push
xchg
cmpsl
testb
fcoml
lea
movsb
xlat
std
iret
pop
add
fcomps
mov
scas
add
sub
push
xor
fisubs
fcomps
mov
out
xor
pop
cmp
shll
xchg
adc
pop
adc
popf
and
and
jmp
inc
jno
in
mov
icebp
or
pop
fdivrp
add
call
loope
subb
jne
mov
xor
out
cmp
repnz
out
adcb
sub
fdivrl
mov
imul
cmp
mov
fisubrl
pop
bound
or
lret
mov
sbb
add
cld
aam
xlat
adc
out
push
jne
push
loope
xor
and
inc
je
lcall
pop
push
les
ret
adc
adc
inc
jecxz
pop
das
pop
xchg
and
cmp
stos
dec
cltd
and
ss
push
idivb
aas
mov
stos
cmc
mov
inc
scas
sub
and
mov
mov
int3
ficompl
lods
push
xor
fs
shll
into
std
cltd
dec
lea
push
pusha
adc
arpl
test
jno
jmp
inc
dec
lds
dec
pushf
jnp
jg
mov
loop
add
xchg
add
cli
outsl
std
ljmp
sbb
xchg
add
je
sub
movsb
imul
fnstenv
push
scas
cmp
imul
pushf
scas
pop
loope
lods
dec
decl
xchg
pop
or
outsl
dec
loope
or
mov
in
mov
mov
and
stos
jmp
or
dec
mov
pushf
mov
pop
ja
aad
movsl
sub
add
sub
mov
test
loopne
sub
mov
filds
lahf
xchg
int3
clc
add
iret
or
js
stos
add
adc
clc
or
add
shll
roll
dec
mov
and
pop
inc
aas
xor
jb
pop
fdivp
xor
mov
push
dec
dec
xor
pop
mov
and
icebp
xor
out
orb
lret
cmpsl
sub
das
sarb
and
xchg
lret
push
xor
inc
xchg
notb
loopne
push
pop
sub
leave
mov
inc
sub
mov
notl
cld
js
imull
sar
test
inc
sub
xor
dec
sbb
scas
test
xor
dec
rorb
cmp
ja
cmp
out
ss
push
in
fdivl
mov
mov
das
push
mov
rolb
xlat
test
imul
rolb
sarl
push
daa
sbb
inc
or
mov
mov
mov
fsubl
imul
mov
add
cwtl
pop
sarb
jecxz
push
imul
loope
xor
enter
cmp
sbb
frstor
inc
jmp
lret
outsb
mov
xor
icebp
xchg
mov
sti
fnsave
mov
pop
inc
insl
inc
mov
mov
daa
pop
jg
rcl
add
sub
movsl
stos
sbb
stos
sub
das
sub
es
cmp
lods
cmpsw
ret
jb
cmpsb
adc
cmp
sub
repnz
movsb
adc
sahf
mov
sti
xor
loopne
les
pushf
xchg
pop
cwtl
aaa
cmp
pop
jb
and
in
shlb
fistpll
mov
test
xchg
cmp
sbb
xchg
scas
int3
jmp
and
sbb
fsubrs
scas
dec
pop
scas
jle
push
sub
or
dec
cmp
fcmovu
or
jge
inc
popf
push
cltd
adc
fmuls
gs
jmp
jp
loopne,pn
push
xor
mov
cmp
dec
lds
push
xchg
mov
fchs
mov
jo
and
sub
push
mov
data16
mov
fbstp
outsb
xchg
adc
adc
cmc
mov
scas
pusha
push
inc
dec
inc
adc
sbb
dec
xor
mov
push
ret
or
es
sbb
adc
jae
stos
push
test
mov
mov
adc
adc
xchg
popa
ret
cmp
xchg
pop
jle
and
sub
jne
pop
fwait
push
xlat
inc
scas
and
clc
mov
jl
lods
scas
sbb
jo
imul
inc
pop
inc
mov
test
aas
lods
pop
lods
rorl
jo
sub
push
adcb
ds
mov
push
push
xchg
mov
sbb
ljmp
lret
jae
jg
inc
xor
in
test
ret
sbb
sbb
shrb
fcomps
mov
mov
test
ds
jg
ljmp
jnp
jmp
adcb
repz
ror
scas
ja
adc
mov
xchg
or
movsl
xchg
insl
jbe
testb
cmp
adc
mov
pop
pushf
ret
push
fadd
xchg
add
mov
or
adc
push
inc
mov
cmpsb
ja
mov
adc
pop
inc
xchg
mov
xchg
test
dec
fisubl
jmp
lcall
je
loope
sub
sahf
pop
add
std
aad
adc
pop
inc
and
or
getsec
int
shlb
adc
inc
mov
imulb
test
dec
iret
fdivrs
addr16
test
xor
lds
xor
adc
mov
xchg
xlat
jb
sti
rol
jne
ja
bound
inc
test
xor
sarl
mov
push
ljmp
fsubs
jl
das
stc
pop
mov
in
call
cmpsb
inc
push
movsb
xchg
xor
mov
ss
mov
cmp
lcall
clc
and
lret
cmpsl
aad
fsubrl
add
add
negb
add
adc
pop
in
xchg
jne
inc
jo
xchg
dec
rorl
orl
xchg
pop
lret
stos
int
xchg
or
cmp
inc
dec
xchg
mov
dec
mov
icebp
shll
stc
rcrb
mov
rcll
mov
sub
fldl
pop
jbe
cs
nop
dec
jge
and
and
js
hlt
stos
pop
dec
hlt
leave
nop
insl
aaa
lods
clc
loop
xchg
xchg
out
pop
xchg
popf
add
mov
mov
test
push
jecxz
inc
arpl
cmc
mov
pop
mov
push
popf
loop
fistpll
sub
insb
ljmp
dec
or
sahf
inc
adc
sbb
rcr
enter
mov
sbb
sub
sbb
push
cmc
test
sbb
inc
insl
adc
and
fstp
push
iret
popl
popl
mov
add
mov
stos
fisttps
addr16
das
scas
mov
mov
xor
loop
mov
insl
add
mov
xchg
push
call
jnp
dec
scas
xor
ret
jne
loop
mov
repnz
dec
pop
fadd
fs
lods
cmc
fistps
mov
nop
out
mov
fidivrl
test
cmc
ficompl
mov
icebp
cmc
xlat
lahf
cmpsb
fisttpl
push
clts
jae
or
enter
add
sbb
lret
cmp
mov
and
lock
stc
clc
lods
lods
mov
mov
scas
lods
scas
mov
lea
loopne
dec
xor
fiadds
mov
dec
adc
jo
adc
mov
mov
add
and
push
pusha
or
fcom
es
pop
cmp
sub
stc
std
addr16
lret
fsubrp
mov
or
adc
mov
addr16
push
cmp
fcmovb
inc
iret
test
imul
sub
insl
bsf
xor
add
lds
loope
add
ds
jns
xchg
gs
clc
cmpb
adc
jbe
sar
mov
popa
xchg
test
mov
xor
jle
mov
iret
stos
mov
stc
mov
pop
lea
shrl
iret
cmpsb
lahf
xchg
and
lea
lret
inc
mov
pop
lock
xor
or
jecxz
pop
xor
mov
out
and
push
or
cld
adcl
leave
xor
mov
pop
data16
je
mov
sub
mov
dec
or
mov
inc
xchg
daa
jae
hlt
pop
add
inc
ja
lds
add
cmp
xor
jge
rclb
mov
add
outsb
xlat
mov
mov
ja
jo
xor
andb
jb
push
fadd
out
inc
ret
cld
pusha
jns
adc
and
push
sbb
mov
das
push
iret
fldl
mov
jo
lock
xchg
cmc
dec
cmc
mov
mov
pop
das
testb
push
add
insb
enter
jge
in
sbbb
shl
dec
mov
push
enter
cmp
je
sub
cwtl
mov
adc
sarb
xor
leave
mov
xchg
dec
xor
cmp
push
push
jae
sub
xchg
out
daa
je
ror
inc
lock
loop
pop
mov
jns
xchg
insl
adc
or
pop
cmp
pop
in
stos
pop
and
adc
rol
add
and
stos
sbb
sti
ret
adc
add
and
dec
out
push
adc
sub
sub
dec
jecxz
cmp
fwait
movmskps
shll
dec
cltd
divl
insl
arpl
adc
xchg
icebp
adcl
arpl
dec
mov
mov
jmp
mov
jmp
cwtl
mov
rep
or
std
mov
popa
mov
cltd
inc
dec
jge
in
imul
dec
cld
inc
pop
in
dec
mov
into
sbb
insl
rolb
or
xchg
movsb
int3
jmp
mov
xchg
xchg
xchg
outsl
pop
jmp
pop
push
and
fisubrl
mov
adc
pop
imul
scas
sarl
pop
dec
cmp
cli
mov
outsb
enter
shrb
enter
lods
push
movl
ja
pop
loopne
xchg
out
mov
lret
outsl
sub
enter
int3
insl
out
xchg
mov
push
pop
xor
and
mov
mov
mov
push
dec
mov
xor
repnz
jne
rcrb
mov
xor
and
fistl
push
aam
das
sbb
xchg
insl
popf
daa
enter
mov
dec
lods
fstpt
mov
jb
rol
loopne
and
iret
sarl
and
adc
push
test
insb
sub
xor
mov
cltd
mov
hlt
lcall
lock
dec
xchg
shll
jle
add
and
out
lock
adcb
ljmp
jae
nop
xchg
arpl
cmp
jb
mov
xor
popf
mov
in
xor
mov
sub
inc
cmpsl
lcall
xlat
cld
push
dec
mov
xor
outsl
or
shlb
or
mov
push
aam
loop
push
aaa
enter
dec
dec
lea
mov
pop
add
cmc
mov
test
xchg
pop
outsb
fs
mov
mov
push
mov
outsb
sbb
push
lahf
sbb
sbb
mov
aad
xor
adc
jle
sbb
arpl
addr16
aas
pushl
push
test
bnd
jle
add
pusha
mov
dec
pop
incb
mov
jecxz
dec
adc
je
xchg
or
adc
test
add
bound
int3
push
pop
loop
push
xchg
inc
mov
lahf
loopne
addr16
sbb
dec
pop
out
cld
push
add
add
insb
fists
das
add
jns
scas
cmp
addps
arpl
sub
imull
das
pop
cld
or
xchg
add
and
adc
roll
negb
addl
cmp
sbb
xor
fs
rcll
popl
out
push
sbb
push
sub
sbbl
jb
jo
lahf
adc
cltd
lds
imulb
lods
xor
pop
je
mov
scas
push
in
mov
push
inc
loop
int3
xchg
pop
push
pushl
push
inc
xor
pop
shll
add
aam
stos
add
test
cltd
inc
pop
pop
xor
scas
mov
sahf
mov
mov
mov
cwtl
mov
lea
inc
fs
sti
out
inc
pop
xchg
icebp
mov
pop
pop
inc
sti
pop
cltd
orb
iret
xor
jno
imul
adc
push
jnp
cwtl
repnz
sbb
add
shl
adc
xor
inc
lock
pushf
scas
das
outsl
xor
mov
adc
xor
xlat
faddl
push
mov
fs
push
add
xchg
cwtl
push
adc
add
inc
testb
jecxz
add
inc
jp
popa
pop
add
sbb
mov
addb
and
mov
outsl
jno
lods
cmp
mov
or
add
mov
mov
or
enter
fstps
pop
inc
push
insl
outsl
fstps
jo
push
repnz
fucomp
int3
jbe
mov
dec
icebp
insb
jecxz
push
iret
std
into
into
in
jp
jge
pop
sbb
push
lods
push
pop
ss
mov
and
lret
push
stc
xchg
push
loopne
fwait
jmp
jle
lods
or
aaa
rcll
jle
bound
test
and
cwtl
cltd
jl
addb
pop
xlat
mov
cwtl
dec
xchg
movb
rolb
inc
push
pop
into
xor
popl
mov
shr
or
sub
nop
xor
lcall
mov
xchg
mov
jns
push
in
in
sub
adc
subb
add
dec
adc
test
cwtl
dec
lock
stos
adc
scas
movsb
lret
mov
mov
push
fists
loope
lock
pop
scas
jmp
pop
xorb
in
lret
push
iret
pusha
ss
and
sbb
xor
clc
push
pop
sub
in
jnp
dec
jo
repnz
in
out
dec
cltd
ss
daa
loopne
add
pop
ljmp
mov
addl
push
mov
and
xchg
jmp
rep
scas
cmp
jmp
lret
jecxz
push
cmp
mov
into
xchg
sub
icebp
psllw
jle
leave
pop
adc
sbb
adc
xor
push
inc
xor
add
mov
inc
ret
mov
mov
testl
scas
jns
sar
daa
jl
nop
sbb
mov
sub
scas
inc
jp
icebp
sbb
sbb
mov
xchg
dec
adc
pop
or
dec
in
icebp
lcall
dec
mov
mov
add
dec
adcl
leave
sbb
adc
sub
loop
adc
call
pop
jge
push
cmpsl
push
jl
clc
add
ret
fs
aam
dec
cmp
jne
int
sti
mov
pop
les
xchg
fldenv
in
jnp
cmp
mov
jg
ret
outsl
fdivl
test
fidivs
adc
push
jae
inc
stos
sub
push
push
test
inc
or
mov
sti
and
test
lcall
fldl
cmp
or
xchg
push
insb
push
iret
and
push
jb
sti
shlb
jo
pop
jne
adc
lahf
and
lock
mov
in
sbb
jecxz
or
fcmovb
adc
cmc
mov
sahf
aas
mov
mov
cmp
pop
enter
dec
cmpsb
jns
enter
jne
cmp
bnd
lahf
push
and
or
loop
inc
xchg
xlat
fcomip
ds
dec
sbb
dec
push
es
cmpsl
leave
add
dec
or
ds
aaa
jmp
jnp
arpl
push
push
sbb
xchg
pop
adc
mov
nop
and
adc
leave
sub
imul
adc
sub
out
xor
sub
lcall
dec
and
jl
pop
rcrl
cmp
je
jno
add
cmp
push
testl
mov
add
fldl
jle
fs
mov
stc
loope
fdivl
inc
pop
xor
or
fsubrs
scas
bound
aam
xor
and
out
sbb
pop
adc
shl
es
mov
aaa
loop
divb
dec
pop
dec
mov
mov
dec
cmpsl
js
lahf
ja
sbb
int
lock
loopne
xchg
scas
jae
push
adc
sub
cmpsb
stos
mov
lock
cmc
xchg
adc
inc
test
mov
gs
cmp
insb
pop
mov
negb
dec
dec
in
jp
jno
outsb
fmuls
aaa
ret
ret
aam
scas
xor
jne
jl
adc
dec
and
sub
cmpsl
fldl
ret
stos
inc
shl
imull
ficomps
dec
inc
sbb
mov
addr16
pop
stos
imul
fwait
inc
sbb
and
ljmp
ja
push
gs
shrl
dec
cmp
xor
and
rcll
mov
push
sbb
in
enter
jl
fidivs
daa
pop
mov
icebp
mov
push
out
out
clc
sahf
pop
lret
add
xchg
push
mov
inc
jp
pop
cmp
fs
push
sub
test
xor
inc
call
fistps
sbb
jae
jns
insl
stos
pand
dec
adc
mov
cmp
push
stos
xchg
and
stc
mov
push
jmp
jecxz
fmull
cmp
outsb
xchg
sti
hlt
popf
dec
pusha
ja
or
cmc
inc
inc
sub
shlb
neg
les
jl
pinsrw
xor
insb
xchg
repz
sub
cwtl
pop
jae
sub
shl
loope
ret
stc
mov
and
lahf
mov
ja
ljmpw
or
push
and
mov
ljmp
enter
sub
in
or
cmc
andl
mov
xor
imulb
pop
xlat
ljmp
push
ficompl
xorb
das
divb
fnsave
push
inc
outsl
mov
xlat
les
push
in
xchg
adc
outsb
orl
stos
sub
in
fsubl
xorl
sbb
mov
cmpsb
es
jge
jmp
ss
xchg
xlat
xor
pop
sbb
lret
mov
jp
jp
xchg
cmp
dec
lods
sti
dec
fcoms
and
lahf
xchg
repnz
addr16
mov
cmp
lahf
aas
and
add
fadd
lret
inc
sti
xorb
lret
stc
int
in
aam
dec
mov
adc
jge
dec
cs
add
pusha
push
adc
pop
jp
pop
mov
push
or
lea
adc
push
and
mov
mov
pop
cmp
bound
inc
mov
mov
add
popa
lods
int3
fdivrs
scas
push
adc
lds
push
mov
inc
loop
push
or
add
jmp
test
inc
pop
loope
sub
imul
sub
shrb
jnp
jae
ss
pop
xchg
inc
jb
add
jbe
lret
ss
push
xor
dec
push
hlt
or
mov
jp
pop
cwtl
fldenv
dec
push
sbb
lret
xor
add
push
mov
or
mov
iret
xchg
imul
or
cmp
outsl
nop
dec
xor
mov
dec
pop
inc
jecxz
movsb
into
push
std
fsubs
dec
dec
aaa
and
xlat
dec
cli
je
mov
adc
aam
imul
inc
es
loope
arpl
outsb
xchg
push
xor
inc
cmpsl
lods
push
push
rorb
in
jle
pop
pop
js
popf
inc
mov
pop
and
dec
cmp
orl
sub
scas
xchg
into
jmp
xor
push
js
pop
mov
rcrb
arpl
pusha
mov
mov
sub
pop
push
in
andb
inc
mov
les
xor
push
mov
enter
daa
hlt
add
pusha
jae
fiadds
push
mov
jb
mov
jb
es
out
mov
fcomip
insl
xor
push
mov
mov
mov
dec
xor
sbb
add
cwtl
adc
mov
xor
xor
mov
jge
inc
outsb
clc
and
or
je
inc
cmpsb
pop
sti
push
cltd
sub
ljmp
pop
add
pop
les
addr16
push
inc
or
aaa
lock
inc
jecxz
jne
pusha
inc
aad
pop
in
or
xor
mov
fsubrl
cmp
addl
push
fcomps
call
outsl
inc
push
out
inc
dec
aam
lahf
stos
xor
lods
fisttps
pop
sub
into
xlat
mov
insb
lea
mov
jnp
xor
push
leave
dec
and
push
mov
test
mov
sub
xor
push
in
call
add
idiv
mov
jnp
jg
or
add
xchg
rcrl
dec
or
movsb
adc
adc
mov
sbb
test
dec
dec
push
pop
xchg
int3
cli
pop
mov
roll
cmp
inc
fldcw
cltd
popa
cmpsb
sub
idiv
cvtps2pd
shrl
test
ss
test
mov
jge
fisttps
in
sbb
pop
roll
popa
xchg
adc
push
cmpsl
fcompp
jns
icebp
pushf
inc
mov
out
xchg
pop
pop
sub
or
xchg
cmpsb
mov
loop
mov
ret
inc
loop
ljmp
jnp
mov
mov
ss
xor
xor
xchg
fbld
in
in
sbb
inc
pop
mov
inc
sbb
inc
loope
rcrb
push
xor
loope
xchg
das
mov
sbb
sub
cmpsb
inc
pop
out
xchg
inc
imul
lock
lea
sahf
lret
aaa
mov
pusha
lret
pushf
test
imul
push
lahf
int
fsubrs
mov
or
fs
lret
popf
add
mov
lcall
xchg
cld
pop
cltd
cmp
add
jmp
and
movsb
lret
ds
aad
dec
and
rclb
fidivl
incb
cld
sub
inc
fistpl
ljmp
jo
incb
sbb
imul
dec
xlat
jge
pop
fiaddl
mov
cwtl
xchg
fxch
mov
lret
xchg
sub
lea
leave
es
cmp
out
push
mov
stos
dec
ja
inc
xchg
fwait
xchg
sbb
lahf
or
jnp
jo
and
push
sub
mov
inc
stc
push
stos
cmpsl
xchg
aam
and
adc
dec
sbb
xor
rcrl
pop
lahf
mov
int
andb
xor
pusha
mov
or
sbb
lds
cmp
sbb
ja
lea
xlat
sub
movl
out
mov
and
fistps
pop
pushf
jle
loope
cmp
mov
scas
pop
int3
idivb
fnstenv
popf
mov
insb
push
jp
mov
sub
push
ds
mov
mov
jmp
test
inc
cmp
imul
cmp
addr16
sbb
loopne
or
lock
add
mov
das
jbe
dec
les
insl
push
pop
xchg
nop
add
xchg
clts
ret
idiv
lea
das
sbb
cmp
ret
fisttpl
push
inc
js
mov
pushf
rcll
test
dec
jns
jp
ja
cmpsl
je
pop
out
into
mov
mov
dec
ret
cmpb
push
lods
movb
jp
xor
sbb
fsubrs
out
push
jg
dec
fistpll
inc
loopne
pop
sub
pusha
push
imul
jmp
lea
dec
fadds
clc
ret
maskmovq
negl
test
mov
hlt
daa
pop
pop
and
subl
pusha
cmp
cwtl
cltd
imul
jge
scas
jnp
ret
adc
or
adc
mov
or
push
sub
and
ss
sbb
bound
out
mov
decb
and
daa
mov
cmp
daa
test
fs
icebp
add
sahf
enter
mov
jns
mov
pop
fists
lret
push
fimull
cld
mov
sub
xchg
orb
push
andb
test
mov
inc
push
mov
mov
rcrl
adc
mov
int3
jmp
pop
les
inc
cmp
call
jl
xchg
xor
sti
jle
fsub
and
frstor
adc
fldenv
push
adc
out
rclb
pop
cld
jne
and
rcll
pop
add
cmpsl
std
sbb
insb
cmpb
xchg
adc
loop
xchg
adc
sub
xchg
dec
out
adc
in
jmp
xchg
ljmp
les
xchg
das
out
fstps
mov
adc
pop
fisubs
mov
icebp
sbb
xchg
inc
and
mov
adc
and
dec
shlb
sbb
inc
and
ret
aam
pop
ds
adc
mov
pop
shlb
aaa
add
pop
movhps
mov
stc
test
pop
xchg
xchg
psubb
gs
inc
fistpll
xor
push
rclb
jmp
pop
dec
jle
lret
lea
add
aas
sti
cmp
lds
or
fidivs
cmp
adc
test
xchg
out
mov
mov
fwait
loop
lock
mov
arpl
aas
ss
or
aam
jno
and
or
test
push
lret
xor
fwait
jge
push
mov
fsubs
lahf
dec
js
nop
fsubl
cmp
insb
test
and
push
iret
ja
adc
xchg
jle
push
xchg
out
xchg
es
mov
pop
in
test
cmp
mov
inc
das
repz
jbe
test
loopew
adc
adc
sti
insb
dec
xchg
imul
pxor
mov
xchg
sbb
add
sti
cwtl
add
ror
fisubrs
ljmp
int3
mov
cmp
xchg
lea
adc
lds
test
sti
cwtl
jne
mov
jge,pt
sbb
fdivr
dec
enter
push
jmp
push
sahf
push
add
in
into
aas
mov
xchg
aas
les
fildl
adcb
cmc
adc
jecxz
fiaddl
arpl
jmp
push
push
ss
push
fwait
xor
mov
stc
hlt
and
addr16
aaa
sbb
hlt
stos
pop
lahf
and
cmpsb
insb
imul
mov
add
sub
and
xor
outsl
push
enter
xchg
aam
inc
push
divl
fs
adc
les
mov
push
int3
movsl
std
and
inc
cmp
sub
mov
subb
push
jo
test
leave
test
pop
ljmp
mov
or
pop
and
pop
repz
and
xor
mov
ret
cmp
test
adcb
fiaddl
and
push
pop
repz
inc
xor
and
addr16
cmp
test
test
sbb
out
into
mov
sbb
pop
dec
mov
push
popa
push
insb
pop
xor
jg
inc
fcmovnb
pop
and
xlat
pop
jp
pop
lret
int
nop
repnz
fsts
mov
push
hlt
xor
cli
int
ror
xchg
add
addr16
inc
xor
xlat
stc
pop
ds
pop
mov
into
mov
or
mov
jns
lock
dec
out
push
and
sbb
xchg
lahf
shll
ljmp
mov
iret
cmp
xchg
pop
sbb
cmpsb
ret
aaa
ljmp
mov
push
cmc
fdivrl
xor
or
movl
hlt
outsl
imul
in
dec
push
stos
out
int
push
adc
movsb
push
adcb
lds
stos
and
dec
popa
inc
jno
mov
xchg
xchg
popa
mov
pop
jle
add
je
mov
test
addb
push
and
add
sub
pop
pop
and
add
mov
shlb
xchg
rcrb
bound
mov
out
xchg
in
sarl
cltd
out
add
and
fidivl
pop
dec
es
ret
fnstsw
xor
sbb
popf
out
mov
stos
cmpsl
rcrl
lret
in
out
mov
pop
rcll
lea
and
push
enter
inc
lret
lcall
mov
sbb
mov
in
out
or
and
rorb
dec
xchg
fcmovne
add
sub
sti
sbb
stos
loop
push
cmp
js
adc
ret
int
sub
push
popa
pop
lds
xorl
or
out
adc
xchg
dec
xchg
sub
dec
fldt
imul
mov
arpl
inc
aas
popa
jno
lods
fldcw
in
lods
mov
mov
pop
inc
sbb
inc
push
popf
cmp
addr16
testl
mov
push
jo
sbbl
or
mov
mov
pop
bound
rclb
lods
mov
cmp
lods
mov
and
mov
stos
movsl
xchg
aaa
mov
mov
add
push
gs
push
xchg
sub
shlb
sti
hlt
inc
std
jae
jns
rcl
stc
out
or
sbb
mov
cwtl
mov
sbb
scas
xchg
adc
rorl
cmpsb
out
xchg
lcall
mov
push
loope
inc
sbb
mov
push
mov
mov
inc
repz
xchg
ror
cmc
jmp
je
sbb
shlb
xchg
test
inc
sbbb
or
dec
pop
jne
add
repnz
ljmp
stc
xchg
ret
jo
movsl
jmp
pop
rclb
xchg
sub
add
fmuls
xor
call
hlt
mov
rorl
jge
shrb
into
cmpsl
into
adc
jge
xor
cltd
test
jno
adc
and
loop
pop
mov
jp
xor
sub
sub
das
ds
sub
jo
lods
and
dec
xchg
sti
add
sub
adc
sub
xor
sub
mov
jb
inc
cmc
pop
in
movsb
aam
sub
aam
mov
ret
jns
loope
jno
or
mov
int3
dec
test
out
icebp
jle
sbb
inc
outsb
je
adcb
xchg
insb
cmp
loope
shlb
or
ret
loope
ljmp
add
add
flds
out
jae
mov
sbb
scas
rcl
mov
jmp
add
adc
negb
push
lahf
lea
dec
mov
xchg
and
subl
xor
stc
push
push
fsubs
push
scas
stos
leavew
or
imul
mov
cmp
scas
ja
push
gs
ret
inc
pop
inc
adc
mov
rolb
pop
xchg
pop
xor
repnz
lock
ja
scas
push
cli
mov
and
incb
mov
test
jl
mov
lret
pop
push
fnsave
mov
sub
jo
mov
addr16
push
sub
adcl
dec
push
shlb
xlat
into
cwtl
dec
loopne
setb
addb
imul
dec
jl
in
rolb
loop
sub
stc
test
in
idiv
fbstp
ffree
sub
adc
mov
lcall
movsb
nop
xor
adc
or
sub
and
sub
outsl
xchg
fsubrs
cld
xor
sbb
mov
xchg
les
mov
add
pop
scas
ficoml
sbb
inc
mov
jno
add
mov
rdrand
add
jae
xchg
fmulp
test
push
es
cwtl
dec
shl
push
adc
dec
lret
pop
dec
dec
in
cs
push
mov
out
mov
push
pop
mov
shrb
sbb
fdiv
pop
push
repnz
cmc
popf
test
mov
les
cmp
xchg
jno
pop
bound
xorl
jns
mov
adc
push
call
addb
rorl
or
mov
add
jo
jecxz
xor
mov
in
fisttpll
pusha
jae
out
negb
shll
mov
lret
xchg
fnstsw
jb
pushf
or
insb
popf
push
xor
jbe
sub
xchg
ds
insl
mov
lock
jnp
add
sub
int3
xchg
loope
xchg
mov
mov
mov
movsb
into
and
daa
ljmp
nop
lcall
push
xor
mov
push
jae
mov
push
jg
pop
fbld
sbb
pop
rcll
mov
mov
add
rcrb
gs
jne
mov
ds
mov
pop
mov
outsb
leave
inc
lea
lcall
xchg
mov
lahf
inc
adc
call
js
sub
mov
arpl
leave
ljmp
xor
dec
push
xchg
dec
jno
and
jmp
sub
push
popf
pop
inc
jle
movsb
andb
push
adc
sub
sbb
jmp
aad
sub
sub
stc
cmp
add
push
les
roll
pushf
mov
mov
test
sub
loope
mov
imul
sbb
cwtl
push
int
cmpsb
pop
hlt
xchg
dec
xor
adc
sub
scas
test
dec
sahf
test
mov
mov
pushf
shll
das
xchg
rcrl
std
mov
jbe,pt
daa
fucomp
pop
mov
pop
jns
sti
pop
or
push
ffreep
cmpsl
sahf
dec
gs
xchg
ja
cmpl
push
cmp
cs
arpl
insb
fs
lea
movsb
sbb
lret
adcb
jge
and
xor
jae
test
sub
adc
sub
adc
xrelease
sbb
test
mov
sbb
mov
repz
out
jge
xchg
cltd
inc
js
jo
xchg
das
aaa
add
xchg
mov
test
arpl
mov
mov
popa
sub
add
movsb
cltd
add
in
cmpb
stos
iret
mov
xchg
rcrb
mov
loope
out
jns
data16
adcl
dec
and
loopne
mov
mov
mov
lcall
pushf
testl
sbb
sub
jmp
adc
pop
and
imul
les
int3
stc
xchg
shl
fsubr
pop
push
xchg
sub
pop
sub
nop
cmpsl
out
ret
sbb
mov
add
das
and
jmp
or
xorl
repz
pop
testl
pop
outsb
test
dec
sub
adc
sub
mov
mov
push
decb
iret
aas
ja
cmpsl
xchg
and
fimull
adc
jge
xor
jne
ss
ljmp
les
xchg
add
cmpl
cmp
sti
rclb
mov
fldenv
scas
push
mov
bound
incl
lcall
mov
rol
add
push
xor
mov
add
sahf
fcoms
orl
clc
pushl
xchg
repnz
rcll
cmp
pushf
mov
arpl
pop
fsts
adc
fmul
dec
and
ja
pop
ret
ss
sub
sbb
ja
xchg
icebp
push
jne
cmp
sti
xor
sub
rcrb
mov
clc
faddp
mov
pushf
jno
mov
add
arpl
mov
clc
ret
cmp
inc
das
int3
adc
mov
push
movsb
push
je
leave
pop
inc
cmp
sarl
xchg
lcall
aam
cmp
mov
into
pop
dec
push
add
add
inc
adc
xchg
jmp
hlt
jg
cmp
jne
push
inc
mov
insb
sub
push
pop
jmp
jmp
in
dec
iret
stc
data16
stos
imul
add
dec
sbb
inc
int3
cmpsb
xlat
mov
je
mov
les
and
or
dec
loope
sub
sarl
xchg
fdivrs
add
mov
cmp
add
addr16
adc
sub
lcall
sub
add
aaa
hlt
ljmp
popf
movsb
lcall
mov
cmp
dec
sahf
cmp
mov
or
clc
pusha
int3
mov
xorb
popa
inc
inc
mov
pop
pop
mov
pop
inc
inc
loop
mov
dec
hlt
jbe
sbb
pop
stos
aad
sbb
add
movsl
xor
movsl
xchg
inc
bound
xchg
mov
mov
push
imul
fimull
mov
inc
cwtl
mov
test
shlb
xor
pop
dec
jg
adc
ja
scas
fldenv
sub
rorl
in
lahf
lods
cmp
jl
lret
add
xor
push
mov
ret
rorb
lods
data16
stos
jne
mov
idivl
dec
call
dec
test
insl
orl
lock
pusha
cmp
mov
xchg
xor
pop
mov
cltd
insb
sbb
pop
jb
jo
mov
pop
xchg
mov
cmc
addr16
cmp
or
inc
or
fwait
mov
mov
mov
fmulp
sub
fldcw
mov
and
sarb
jge
sbb
mov
and
ljmp
cmp
lret
push
mov
cmp
sbb
jmp
jne
push
fs
and
cmpsl
js
push
stos
imul
adc
insb
cltd
dec
stos
push
repnz
nop
adcl
dec
cmp
xlat
lods
bound
lcall
loopne
jns
adc
push
stc
idivl
sbb
es
xor
lock
popa
push
mov
or
and
repz
xchg
movsl
loope
icebp
xor
outsl
xlat
int3
repnz
xchg
ja
out
and
mov
outsl
jnp
xor
add
push
sub
add
test
and
rcr
out
imul
clc
mov
stos
cltd
jecxz
sbb
mov
push
sbb
push
push
add
inc
pop
call
mov
dec
movsl
stc
mov
jp
fs
xchg
fistl
mov
pop
lret
bound
aaa
repz
leave
push
daa
and
rorl
filds
lods
cmp
or
aad
aas
and
imul
adc
cmp
add
rclb
loop
adc
pop
push
aam
inc
pop
aas
rcrl
outsb
ror
aaa
pop
rorb
xchg
aam
sub
mov
aad
out
sub
jp
add
imul
dec
sti
xor
mov
dec
stos
pop
mov
out
pop
xor
pop
jns
clc
out
popf
icebp
sub
add
popa
inc
jbe
push
das
push
mov
sub
push
lcall
or
or
mov
add
call
test
adc
pop
push
popf
jb
mov
aad
jg
push
scas
sti
mov
push
mov
mov
add
aam
cld
gs
xor
xor
xchg
inc
push
cmp
int3
out
jmp
mov
call
int
push
pop
sbb
sub
movb
xchg
lahf
ljmp
mov
xchg
adc
xchg
shlb
and
mov
popa
add
and
sbbb
call
xlat
sub
fwait
mov
mov
mov
inc
sbb
sahf
pavgw
sbb
rcll
adcb
pop
xor
push
dec
lcall
shrl
pop
inc
orb
push
xor
cmp
mov
xor
inc
cmp
ja
stos
in
xor
test
pop
mov
lock
stos
xor
pop
fmuls
dec
mov
hlt
iret
lret
push
push
or
rcrl
ucomiss
pop
pushf
decb
jecxz
fisttpl
xchg
clc
jecxz
pop
cltd
fs
scas
dec
test
mov
data16
inc
sub
jns
jno
and
push
pusha
je
jbe
in
adc
adc
xchg
sbb
rorb
lahf
jecxz
cmpsl
add
add
mov
adc
xchg
jnp
loopne
adc
jb
je
and
adc
mov
push
lock
inc
pushf
jbe
and
std
faddp
add
pop
ss
inc
mov
addb
or
rcl
push
mov
mov
pop
lock
inc
cwtl
sahf
xor
stos
es
dec
dec
jbe
popa
add
and
mov
nop
sbb
mov
push
test
cmp
out
sub
add
cltd
cld
mov
mov
push
or
cmp
pop
or
mov
mov
imul
fucomi
ffreep
paddd
xor
add
hlt
ja
jp
sbb
xchg
mov
shlb
je
inc
and
inc
add
ret
or
aam
ficoml
sub
sub
ss
enter
push
data16
lret
mov
test
sahf
mov
xor
inc
ror
pop
xchg
movsb
dec
sbb
xchg
mov
jbe
movsl
cmpsb
or
push
cvtdq2ps
in
stos
sbbl
add
mov
je
mov
fstpt
bound
jae
inc
push
jp
adc
fwait
stc
and
jnp
mov
xor
insb
scas
cmp
push
inc
gs
sbb
mov
jns
shrl
mov
or
imul
mov
inc
loope
idivl
mov
jecxz
test
cmp
jl
sti
jg
mov
or
cli
scas
dec
xchg
pop
orb
xor
std
fmull
mov
or
test
xchg
stos
jnp
cmp
iret
roll
outsl
icebp
mov
push
sbb
rorb
inc
xchg
and
xchg
test
js
inc
push
mov
xor
or
es
xchg
jae
and
cwtl
jb
mov
repnz
xor
mov
xchg
imul
and
push
ret
push
sarb
pop
hlt
adc
xchg
in
dec
mov
xor
add
jecxz
add
jl
xor
popa
lahf
rorl
fidivrs
sbb
inc
cld
daa
pushf
sbb
ds
inc
iret
xchg
push
outsb
bound
jnp
jg
pop
insl
add
inc
fnstenv
test
enter
add
jg
jecxz
dec
fstpt
mov
imul
jb
repnz
test
into
int3
mov
dec
rep
hlt
jb
push
hlt
repnz
call
inc
xchg
mov
loope
push
loopne
data16
lds
jne
mov
inc
insl
cmp
stc
lret
bnd
das
xlat
cmp
dec
push
ret
and
lock
mov
loope
cwtl
mov
shl
cltd
jl
mov
fidivrl
loop
data16
cltd
mov
dec
divl
push
cmp
fidivrs
jo
or
loop
insl
mov
scas
cmp
pop
nop
sbb
dec
mov
jp
or
xor
or
stc
lret
test
cmp
adc
scas
add
inc
pop
outsl
fistpl
jne
das
in
sbb
cmpsb
dec
imul
adc
movsb
js
pop
out
ss
add
jp
out
and
into
outsb
xchg
std
pop
loopne
movsb
dec
adc
mov
lods
mov
sbb
sbb
pop
popa
adc
sti
xchg
mov
iret
jle
stc
js
inc
js
in
and
insl
jnp
js
jle
cwtl
sbb
dec
movsb
mov
test
pop
or
add
add
ja
xchg
shrb
cmp
add
sub
mov
mull
test
add
insl
es
xor
pop
lods
pop
mov
inc
add
inc
pop
adc
add
xor
push
fidivs
push
ja
shll
push
adc
aad
jmp
out
inc
in
shl
test
imul
enter
xchg
int
cmpsl
sub
xchg
xchg
ja
jl
jmp
std
stc
adc
or
les
cmp
mov
add
adc
dec
jno
lods
cmp
sti
in
les
leave
pop
inc
push
push
test
push
and
sahf
scas
dec
xchg
cmp
inc
ret
and
fsubs
mov
jnp
das
cmp
fwait
test
int3
lcall
adc
loop
js
outsl
shll
sub
dec
inc
test
andb
test
pop
sbb
inc
lods
insb
inc
test
leave
movsl
outsl
push
and
sbb
out
mov
fistpll
cmc
sub
fisttpl
loopne
ret
mov
popa
iret
ds
cli
ljmp
mov
sub
fs
xchg
or
fisubs
push
jp
lea
cmp
inc
imul
fs
rclb
jl
cmpsb
add
xor
mov
jo
bnd
xchg
mov
xor
sti
sbb
inc
inc
or
inc
adc
cli
sub
mov
xchg
pop
outsl
stc
inc
imul
gs
mov
shlb
cs
jmp
incl
jmp
mov
in
sub
cli
inc
fs
mov
jle
leave
mov
cld
xor
xchg
push
ficompl
push
push
hlt
push
add
lock
arpl
mov
or
or
andb
movsl
negl
mov
shlb
push
in
push
sti
inc
das
pusha
mov
jmp
jge
push
and
mov
cmp
dec
addr16
or
mov
fs
pop
xor
mov
xor
iret
pmaddwd
aam
mov
lods
ss
dec
popf
sub
push
movsl
xlat
fs
or
cltd
insl
mov
mov
dec
scas
aas
pushf
outsl
rolb
sahf
sub
push
stos
mov
cld
inc
add
cld
ret
xor
push
pop
shl
or
push
cmpsb
jno
fildll
xchg
fsts
aas
insl
and
pushf
mov
mov
push
sbb
push
ficoml
jmp
nop
sub
push
cmpsl
jge
inc
push
addr16
sbb
sub
or
add
jge
popf
lahf
scas
enter
mov
shrl
insl
mov
call
and
cmpb
mov
fcomps
pop
repnz
jae
gs
cmc
cs
enter
loope
inc
pop
adc
lahf
jb
std
outsl
out
pop
push
pusha
xchg
push
int
mov
jg
loope
pop
add
pop
sbb
sbb
test
jmp
sub
fbld
add
fistpll
mov
xchg
and
xchg
pop
mov
sbb
repnz
jb
cmpsb
pop
ficoms
leave
inc
mov
pop
sbb
xor
xchg
sbb
mov
push
mov
in
adc
bound
dec
addr16
fdivp
xchg
je
test
or
repnz
int
inc
adc
mov
push
sbb
das
shl
ret
cmp
push
jbe
sub
inc
jbe
push
and
les
stc
dec
mov
or
xchg
sahf
xchg
aas
inc
push
jecxz
cli
aam
inc
pop
ljmp
aad
icebp
adc
xlat
js
jne
neg
or
sbb
js
and
push
cmp
movsb
idiv
aaa
xchg
or
and
leave
in
push
cmc
mov
mov
test
rorl
adc
fcomp
in
clc
ret
xor
mov
or
jg
pop
pop
movsb
jne
mov
sbb
sub
bound
xchg
shll
and
mov
lea
pop
shrb
mov
in
rclb
ss
fisttps
add
mov
shll
push
mov
outsl
jl
sub
cmc
mov
aad
data16
cmp
cmpsl
fdiv
js
pop
mov
mov
mov
int3
daa
stc
xchg
xor
lret
ja
add
xchg
pop
push
adc
sub
lds
out
aam
pop
mov
cmp
dec
ja
jns
cmp
cwtl
jge
add
std
mov
xlat
cmp
scas
call
mov
pop
dec
or
in
pop
and
add
mov
add
mov
xorb
sub
xchg
and
xchg
inc
gs
outsb
jg
dec
aaa
popf
pop
sbb
push
fisttps
int
fs
xchg
mov
imul
or
decb
bound
pop
adcb
sub
neg
jns
stos
mov
mov
mov
scas
data16
dec
pop
les
popa
popf
add
ret
outsb
jne
pop
clc
xor
adc
test
jecxz
inc
leave
sbb
vphaddubd
ss
add
nop
ss
mov
repz
sbb
lahf
jmp
mov
or
sarb
jbe
jo
rcrb
or
std
cwtl
sub
dec
add
shlb
push
xor
shrb
sbb
mov
shl
dec
sub
hlt
js
lret
push
lcall
cli
mov
movsb
call
addr16
lret
fstps
inc
pop
xchg
adc
inc
cmp
mov
sub
xlat
dec
leave
cwtl
int3
inc
mov
out
pushf
test
mov
jns
xchg
fnstenv
into
mov
mov
inc
lret
adc
jge
xchg
pushf
push
sbb
mov
lret
xor
fs
push
int
cmpsb
js
pushf
fsubp
and
mov
sub
int3
sub
in
inc
dec
sbb
add
icebp
rcrb
das
repz
arpl
test
add
ljmp
data16
cli
insb
inc
in
scas
imul
test
cmc
rclb
test
enter
xchg
sub
mov
xchg
sub
mov
dec
sbb
jne
xor
adc
imul
push
inc
cli
or
lahf
xchg
jmp
sarl
das
push
test
sahf
xchg
add
mov
frstor
lods
lret
out
xchg
mov
jns
sbb
xor
call
jp
pop
out
stos
divl
push
imul
cwtl
cltd
jecxz
or
lahf
cmp
mov
push
daa
pop
movsl
dec
rolb
and
dec
call
dec
lock
pop
jge
jae
aad
mov
shll
enter
movsl
inc
loopne
push
inc
mulb
inc
mov
mov
push
aam
hlt
stos
pop
shll
ret
mov
out
push
mov
push
push
sbb
jo
xchg
mov
pop
adcb
ret
adc
lock
jle
cltd
ret
adc
shll
arpl
mov
divb
daa
mov
pop
test
add
xchg
mov
add
push
inc
aaa
adc
xor
fdivr
inc
mov
add
push
sub
scas
fwait
xor
test
cmp
cs
push
mov
pop
imul
icebp
sub
scas
inc
aas
sub
fs
in
and
dec
idivl
cmc
fisubl
arpl
sahf
jnp
mov
xlat
add
mov
push
int3
jb
cmpsl
popf
inc
adc
cwtl
lret
cltd
into
pop
dec
cmpsb
mov
cvtdq2ps
imul
into
out
xor
cwtl
setl
test
int3
aaa
or
push
jns
call
inc
inc
je
cmpsl
push
icebp
mov
into
pop
add
sbb
adc
dec
test
add
cmpsb
in
xchg
sar
push
icebp
gs
mov
xlat
adc
inc
adc
test
out
xor
in
pop
or
inc
lods
adc
or
sub
shll
ja
inc
jo
movsl
pop
fistl
dec
add
add
cmp
rcrl
xchg
xor
dec
xlat
js
cmp
testl
icebp
jge
push
shll
pushf
cmpl
test
xor
je
rolb
push
cli
mov
push
push
aam
jo
out
je
and
shl
imul
jo
test
jl
or
ret
lahf
or
push
cli
je
sub
pusha
sbb
pop
out
add
push
ret
les
mov
cmc
outsl
jg
and
les
fsubrl
sbb
dec
movl
scas
bound
mov
movsb
cmp
aas
mov
xor
push
or
push
or
dec
cmp
ss
inc
adc
sub
icebp
mov
movl
mov
rcll
incl
jecxz
jecxz
xchg
xor
popw
mov
push
subl
jp
daa
leave
mov
aam
and
inc
fnstenv
push
xorl
sbb
xor
push
xlat
lcall
pop
leave
imul
test
xor
repz
movsl
inc
mov
push
movb
cwtl
roll
jno
inc
ss
ret
jbe
dec
push
das
adc
popf
vpaddsb
lods
push
mov
cmp
add
leave
xlat
iret
add
jl
dec
dec
subb
sub
idivl
movl
push
clc
adc
mov
cmp
adc
stos
inc
stos
adc
sahf
jb
xchg
jecxz
mov
pop
jne
popa
adc
mov
sub
cmp
fldl
out
lcall
jge
test
rdmsr
fsubrl
mov
inc
adc
mov
inc
cmpsb
ja
flds
jge
dec
adc
std
xlat
aas
xor
mull
stos
sub
sbb
push
repz
mov
pop
addr16
enter
sub
or
repnz
mov
sarl
dec
in
inc
sub
pop
outsl
jo
test
iret
lahf
xchg
dec
push
push
lret
mov
scas
add
adc
jg
enter
idivl
dec
call
shll
into
sarb
pop
pop
aas
imul
jge
inc
inc
outsb
imul
pusha
sbb
imul
mov
inc
aad
call
or
sahf
xchg
gs
adc
add
sub
inc
fld
inc
cmp
jg
lret
in
xchg
cwtl
pop
mov
clc
pop
add
adc
divl
out
movsb
jmp
nop
push
lret
bswap
call
imul
xor
add
sahf
in
hlt
lret
inc
xchg
cli
icebp
push
in
mov
push
imul
sbb
xchg
aam
xchg
or
ret
bound
cmp
add
rolb
jne
inc
jb
aas
and
jno
out
mov
ret
mov
add
das
xchg
xchg
mov
adc
lcall
int
add
adc
pop
out
mov
push
stc
std
call
lock
jl
cli
push
cmpsl
sbb
adc
add
imul
neg
mov
inc
add
add
push
cli
test
movsl
repnz
mov
mov
cli
stos
lds
cli
push
adc
ja
jne
daa
xchg
cmc
push
je
call
pop
xchg
jns
xchg
xchg
mov
mov
aam
das
xchg
fwait
mov
stos
push
push
int
roll
addr16
mov
divl
or
xor
sub
dec
mov
xchg
jbe
test
jbe
or
sahf
adc
pop
lcall
clc
add
in
and
sti
mov
mov
add
xor
mov
push
or
repnz
jge
add
xchg
adc
lock
push
jbe
sub
xchg
lock
mov
jmp
cmp
xchg
and
dec
sarb
bound
outsl
sbb
add
mov
inc
push
out
sbb
fidivrl
push
aad
pop
push
push
jbe
enter
addr16
out
in
cli
xor
jg
add
sarl
fstpl
xor
out
stos
cmp
lcall
mov
test
popa
rcrb
push
sbb
cld
pop
sbb
decl
and
jl
lds
mov
pushf
mov
sahf
arpl
cli
sbb
mov
fwait
pop
lods
shll
lock
dec
subb
or
mov
or
inc
adc
xchg
xchg
rcrl
dec
imul
scas
xlat
mov
push
xor
loopne
repz
bound
das
inc
add
cmpb
nop
andl
jne
mov
je
decb
inc
stc
pop
jo
repnz
push
mov
dec
jle
push
jg
insl
leave
and
xor
bound
into
ret
out
aad
fimull
mov
add
add
pop
pop
je
and
xlat
ljmp
icebp
or
push
adc
xchg
adc
jmp
jo
shlb
sub
int
daa
pop
jp
mov
into
cmp
in
xchg
lret
pop
xchg
test
and
outsb
dec
shll
ds
pop
gs
dec
mov
mov
pusha
mov
pop
sub
test
or
sbb
stos
std
jnp
fdivs
push
xchg
aam
jl
and
and
jns
insb
or
xchg
lds
cmp
xchg
sbb
test
cmp
aam
dec
fdivrs
frstor
ret
bound
clc
inc
in
stc
inc
sbb
or
aaa
std
sub
inc
cmp
add
in
jle
sysexit
repnz
leave
lds
jno
mov
in
lds
xchg
je
push
outsb
and
lods
subb
sub
xchg
mov
xchg
dec
shlb
ss
cmp
leave
inc
or
dec
lret
xorl
in
sti
orb
rep
adc
test
aad
mov
lods
loop
dec
xor
inc
sbb
mov
dec
xchg
sub
pop
out
jae
sbb
pop
sub
or
mov
pop
lret
out
insb
mov
popa
pop
dec
push
inc
dec
mov
lahf
xchg
imulb
xchg
addr16
add
push
out
enter
jnp
jae
pop
pop
ljmp
cmp
xchg
jbe
inc
dec
push
mov
ret
notl
push
nop
ret
std
lods
incb
scas
cwtl
out
pop
xchg
mov
outsb
jl
enter
mov
frstor
mov
jbe
lds
mov
xor
pop
imul
mov
cmp
xor
rclb
lea
ret
mov
fmul
xchg
cs
jle
cs
call
lret
loope
xchg
scas
push
or
repz
push
pop
pop
jmp
cmp
pushf
das
mov
movsb
or
cmp
pop
xchg
dec
mov
cmp
adc
cmp
xchg
jnp
mov
sub
test
inc
mov
lcall
push
xor
and
sub
mov
mov
lock
xor
sbbb
frndint
fimuls
or
leavew
dec
cmpsl
xlat
subl
mov
dec
aam
adc
test
mov
test
addr16
adc
addr16
rclb
out
notl
pop
xchg
iret
adc
iret
in
shll
std
adc
or
loope
das
out
mov
sbb
mov
push
mov
dec
pop
pop
and
ss
clc
pop
mov
mov
nop
xor
rcrl
cmpsl
sub
cli
cmpsb
push
pop
jmp
adc
sub
insb
lock
cmp
push
lds
arpl
cmc
xchg
loopne
xchg
or
enter
stos
sbb
rolb
mov
inc
xchg
mulb
xchg
das
or
test
std
out
dec
sti
int3
adc
pop
lcall
std
loop
lcall
inc
push
mov
popf
movsl
mov
aad
xor
and
gs
or
jnp
jno
aad
pop
jmp
dec
fcmovbe
hlt
cmp
sub
lahf
mov
or
pop
push
stos
jle
push
pop
mov
adc
and
movsb
jp
push
cmc
mov
outsl
mov
fxch
jbe
mov
ret
sub
pop
dec
aam
jl
jbe
mov
test
sbb
fdivrs
mov
mov
dec
aad
data16
out
subl
adc
or
cmpb
jb
std
fnstsw
mov
push
mov
sbb
js
mov
hlt
movsb
lret
jb
add
idivb
into
fiadds
mov
repz
jns
sbb
or
fndisi(8087
sbb
adc
arpl
lock
nop
and
decb
or
xor
xchg
testb
stc
adc
pop
into
data16
loope
mov
cld
jno
fldcw
loope
push
rorb
lret
xlat
or
xor
testb
shr
in
add
pop
pop
cmc
popa
mov
add
cmp
pusha
push
gs
mov
ds
add
fbstp
popf
movl
add
movsb
wrmsr
sbb
sub
jb
flds
cltd
stc
pop
mov
adc
add
and
lods
jno
or
int
nop
mov
push
pusha
hlt
in
mov
aad
sub
test
in
or
scas
push
xchg
mov
outsl
add
mov
mov
div
cli
pop
sbbb
js
push
adc
inc
aaa
push
lock
jns
mov
sub
sahf
adc
pop
xchg
pop
repz
in
je
rcll
fisttpll
adc
ficompl
push
decl
mov
mov
xor
in
sbb
repz
or
imul
pop
into
mov
xchg
out
mov
lods
into
lret
out
push
mov
mov
pop
rorl
jno
fsubl
inc
push
dec
mov
les
popf
aaa
and
lea
mov
dec
loope
jo
and
push
cmp
xchg
sub
push
xor
int3
add
pop
cmp
idivl
test
mov
jmp
lret
add
pop
pop
hlt
shll
aas
sub
dec
int
push
movsb
lods
aad
pop
inc
mov
jle
pushf
mov
or
jae
shl
enter
push
add
fistps
mov
nop
push
mov
jne
jo
sbb
popf
xchg
std
in
add
jns
sbb
in
sti
into
sbb
mov
je
leave
mov
subl
fmulp
mov
push
jb
inc
push
pusha
dec
xchg
or
jns
dec
gs
pop
nop
cmp
jle
sti
cmp
cmp
mov
adc
xchg
aam
jmp
mov
insb
mov
pop
or
arpl
fwait
aaa
and
imul
and
or
jge
mov
sti
dec
lds
add
mov
inc
imul
xchg
dec
jnp
outsl
inc
jmp
push
mov
mov
inc
aam
in
push
jno
arpl
insl
or
rolb
xchg
lret
mov
xchg
shl
mov
vmovq
pop
jp
jmp
mov
ja
call
xchg
adc
mov
mov
push
xchg
cmp
cmc
aas
sbb
daa
cli
xchg
pop
in
pop
enter
fwait
xchg
in
dec
cld
into
push
cmc
xchg
cmp
pop
enter
xor
inc
ljmp
pop
adc
mov
pop
pop
hlt
or
int3
loope
jo
xor
lcall
mov
or
mov
xor
jle
jns
add
mov
lret
roll
push
ds
xor
inc
add
cmp
mov
mov
loopne
push
lea
mov
fwait
rorl
sub
or
aam
pop
and
cmp
xor
cmp
jmp
lods
gs
cmp
jmp
pop
out
call
imul
mov
push
mov
xchg
fidivl
nop
movsl
mov
test
inc
hlt
push
sbb
sahf
ljmp
rcrl
das
inc
gs
mov
push
jae
push
cmp
popf
cmc
stc
in
repnz
jg
lahf
pop
cmp
dec
sbb
movsb
lcall
cmp
cmp
sar
xor
sbb
addr16
xor
dec
sarb
cmp
loop
sarb
test
xchg
rcll
sub
lea
mov
push
nop
inc
jno
jp
jns
gs
pop
fsubp
add
pop
ret
xchg
or
pop
and
xlat
mov
fisttpl
mov
lahf
ss
cmc
inc
jle
lds
cltd
stc
jecxz
add
push
add
fsubs
and
call
push
shrl
int
jnp
mov
cli
jnp
ljmp
adc
xor
pop
js
mov
cmp
fidivrs
lcall
adc
repnz
decl
push
andb
mov
jl
fwait
mov
add
jp
inc
inc
test
and
loopne
xor
rorl
fadd
stc
pop
scas
and
or
push
mov
adc
ljmp
int
add
aas
xchg
in
sbb
fdivrl
mov
inc
push
and
data16
mov
test
movsl
hlt
and
xorl
gs
jne
jb
mov
popf
out
ja
pop
ret
xchg
jns
das
or
dec
jno
jno
xchg
cltd
les
dec
cs
mov
sahf
data16
mov
ret
jbe
mov
rorb
jnp
jb
lcall
fiadds
fs
pop
out
xor
adc
pop
in
test
ja
jno
dec
insl
push
push
adc
mov
jbe
into
mov
arpl
insl
mov
dec
adc
xchg
in
ja
push
cmp
xor
in
mov
and
adc
aas
mov
es
mov
and
dec
shl
cld
dec
push
cld
jecxz
je
stc
mov
rcll
xorb
lcall
inc
insb
add
or
cmpsl
pop
into
lret
test
xor
shlb
and
lret
outsl
or
adc
aad
stos
dec
mov
or
inc
lahf
test
adc
fisttps
mov
fnstcw
mov
pop
push
test
push
inc
or
mov
ds
xor
sahf
hlt
add
mov
sbb
push
es
aaa
jp
test
daa
xlat
sub
add
xor
pop
inc
or
popl
sub
or
push
mov
inc
fcom
mov
pop
mov
dec
sub
test
es
cmp
mov
xchg
lret
int
movsb
dec
test
mov
adc
xchg
and
mov
mov
pop
in
outsb
lret
mov
inc
das
repnz
sbb
stos
push
stos
fstpt
test
push
fdivl
jae
dec
jge
mov
icebp
and
ljmp
loopne
jmp
subl
lods
movsb
lahf
aam
fs
jbe
icebp
dec
push
rclb
mov
imul
add
outsb
mov
rcrb
cmp
and
push
repz
push
add
out
mov
orl
aaa
sahf
divb
mov
push
cltd
sbbl
subb
je
dec
ret
adc
fwait
add
shlb
sbb
mov
push
pusha
ljmp
cmp
mov
mov
push
xchg
xor
add
adc
arpl
pop
jo
fwait
leave
and
pop
leave
mov
inc
pop
js
mov
test
cltd
push
movl
out
insb
jo
and
mov
jnp
ret
loop
sbb
shrl
mov
lret
push
push
jne
test
mov
jl
pop
sbb
xchg
push
cli
pop
out
mov
addl
push
mov
or
out
cmpb
js
fists
daa
call
pop
mov
je
push
and
xor
xor
push
popa
rolb
xorl
fdivrl
sub
mov
adc
lds
cli
int
xchg
movsl
decb
jecxz
or
push
push
add
add
lcall
push
mov
dec
jge
hlt
dec
push
les
mov
mov
sbb
lds
hlt
push
mov
dec
roll
test
cld
ss
pop
push
mov
mov
lock
cmp
adc
lods
pusha
pop
imul
clc
mov
mov
add
les
and
mov
outsl
aam
lods
lea
mov
pop
jae
and
bound
rorl
es
or
cmpsl
inc
es
loopne
arpl
nop
jb
fisubrs
sub
dec
cmp
xor
jnp
push
sbb
rclb
add
and
fbstp
cmp
add
fdivl
and
insl
or
xor
xlat
sbb
sub
scas
test
jno
dec
add
xchg
ficoms
xor
sub
sbb
cmp
lods
arpl
xchg
and
mov
mov
outsl
xor
push
jp
sub
adc
ljmp
adc
cmp
insl
mov
adc
test
fisttpl
lea
int3
and
mov
icebp
jns
ljmp
ret
icebp
dec
jmp
test
std
pop
pop
xlat
nop
out
or
mov
dec
mov
outsb
aas
or
popf
jge
lea
je
and
pop
gs
cmp
jge
dec
aam
std
push
das
adc
subl
loope
rcrl
imul
cmpsl
mov
je
sbb
mov
scas
sarb
mov
jbe
cli
mov
add
movsb
add
adc
mov
or
jnp
es
dec
loop
add
jp
test
out
push
inc
cltd
scas
pop
mov
je
fadds
pop
and
cmp
data16
dec
cmp
add
das
test
xor
iret
xor
adc
addr16
jl
and
addl
cli
xchg
mov
mov
cltd
in
or
xchg
jnp
lcall
push
scas
mov
es
jle
lret
inc
hlt
push
push
mov
out
fmuls
or
sbb
lret
mov
xchg
sub
ret
mov
mov
into
xor
xchg
frstor
ljmp
popf
addr16
sbb
repz
mov
inc
cmpsb
in
jne
and
cmc
sbb
out
xchg
inc
call
movsb
xor
xchg
rcl
icebp
imul
aam
cmpsl
mov
adc
fwait
push
dec
mov
ja
outsl
mov
lcall
insb
dec
sbb
dec
inc
sub
pop
cmp
add
mov
rorl
dec
sub
fld
cmpsb
sbb
in
adc
int3
xor
push
xchg
push
in
aad
imul
jg
mov
push
lret
xor
sahf
pop
mov
aam
repnz
mov
jae
lock
pop
shlb
sbb
and
fstl
shll
jns
js
fst
in
in
sbb
es
repnz
or
mov
loope
push
sbb
and
test
mov
cmpsl
adcb
xor
in
or
cs
ds
les
test
or
sbbl
inc
jnp
pop
popa
jg
fstl
pop
imul
andb
pop
lret
shufps
std
pop
ret
push
out
jg
jecxz
and
out
xor
in
aam
push
jmp
popf
lods
sti
sbb
or
push
mov
aaa
das
pop
pop
imul
mov
icebp
int
ret
out
faddl
sbb
push
rorb
dec
je
dec
sbb
enter
popa
inc
rorl
cmp
xor
xor
inc
jnp
xor
or
dec
xchg
mov
lea
add
out
dec
adc
stc
sbb
mov
enter
in
pusha
pop
pop
ljmp
xchg
mov
or
inc
fs
sub
fldt
lret
loope
sbb
and
shrl
je
clc
cmp
mov
incl
push
ror
out
jnp
fucomi
stc
je
xchg
mov
inc
dec
jbe
dec
subl
fstpt
adc
sbb
aas
sahf
rorb
xchg
push
shlb
pop
lds
push
movsb
cmc
ljmp
jns
add
iret
xlat
in
loopne
mov
cmpsl
leave
mov
es
add
popa
or
jnp
notb
filds
aas
xchg
nop
dec
cmpsl
or
and
ret
ret
scas
mov
pusha
dec
scas
push
cld
adc
sbb
jo
cmp
addb
mov
enter
inc
gs
mov
adc
movsb
scas
mov
es
pushf
test
nop
dec
pop
sub
push
fwait
movsl
div
lds
sub
xchg
out
pop
add
mov
mov
daa
mov
dec
xchg
push
adc
adc
cmp
xchg
lock
shlb
push
jno
mov
inc
sub
das
cmpsl
lret
xorb
sbb
inc
es
outsl
out
xor
addl
int3
rcll
lahf
out
call
add
out
xchg
scas
sub
lahf
cltd
pusha
sub
movb
xchg
sub
and
test
shlb
xchg
inc
rolb
inc
mov
je
dec
adc
xchg
hlt
jae
sbb
push
pop
xchg
jne
outsl
loope
mov
sub
jg
sbb
sahf
negl
and
stos
push
fnsave
inc
and
addr16
into
jl
or
bound
repnz
jecxz
jge
pop
dec
dec
ja
xor
test
and
insl
popa
lock
mov
dec
jo,pn
sub
in
sbb
pushf
cmp
movsb
xor
inc
fs
cmpsb
call
sbb
sbb
mov
sbb
aam
fisttpl
cmp
pop
push
icebp
sub
push
dec
add
sbb
mov
les
mov
icebp
roll
sbb
cli
mov
pop
in
dec
xor
out
imul
test
jl
ffreep
inc
mov
or
lcall
sbb
mov
enter
fsubr
xor
loopne
sti
jmp
lods
cwtl
fcmovnbe
dec
cwtl
popa
mov
push
hlt
lret
sbb
mov
aam
shlb
fcoml
mov
xlat
outsb
gs
add
leave
nop
pop
jmp
push
roll
dec
push
incb
cmp
clc
pop
or
mov
push
mov
fimull
sbb
lcall
sub
add
cmpsl
shrl
jne
add
and
mov
fmulp
shrb
imul
decb
cmp
inc
clc
das
sub
clc
push
rclb
mov
pop
add
mov
mov
icebp
jmp
push
pop
fldt
lods
test
jnp
imul
lcall
lds
loopne
les
fistpl
or
xchg
mov
and
or
xchg
inc
inc
imul
inc
ret
inc
sbb
jecxz
inc
cwtl
xchg
add
cs
pop
popa
andb
add
in
rol
xor
iret
mov
cmpsb
and
dec
incl
in
clc
pop
ds
add
sub
jmp
aas
pop
xchg
daa
sub
xchg
cmpsl
mov
ss
dec
aad
pushl
rcll
imul
mov
out
orb
fistpl
cmp
popa
xchg
jnp
mov
movb
inc
cltd
jge
sub
lds
aaa
adc
popf
pop
cmp
pop
dec
cmpsl
daa
sbb
push
jg
adc
in
lret
arpl
push
int
xor
insb
mov
leave
and
xorl
fwait
aad
mov
mov
arpl
dec
inc
scas
fwait
xchg
hlt
test
pop
xor
dec
ja
in
and
pop
adc
xor
icebp
rcl
pop
mov
iret
sub
lock
xor
or
adc
hlt
xlat
mov
in
add
jb
cli
setno
lret
adc
sbb
in
xor
mov
dec
and
and
iret
adc
xchg
jl
inc
and
in
das
mov
icebp
loopne
pushf
faddp
aaa
inc
inc
and
mov
and
fsubrs
in
add
aam
insl
test
mov
pop
imul
test
sbb
jg
movsl
out
hlt
daa
mov
and
insb
sub
adc
test
cwtl
outsb
push
adc
jne
arpl
inc
nop
sbb
push
jmp
add
pop
xchg
popl
add
cmpsl
push
xchg
data16
inc
out
pop
fwait
mov
mov
sub
popa
in
and
push
sar
scas
sbb
pop
shlb
or
inc
mov
jle
orl
loope
jnp
lcall
inc
dec
repnz
sahf
xchg
xchg
sbb
outsb
or
adc
fiaddl
sub
adc
xchg
addr16
jle
push
sarb
pusha
stc
cmp
fildl
sub
popa
mov
mov
pop
cmp
add
aad
shll
jae
popa
sbb
jb
xorps
dec
scas
outsb
icebp
xchg
cmc
fs
jo
xchg
push
xchg
out
sbb
mov
movsb
xchg
jae
mov
in
cs
mov
push
filds
pop
mov
imul
subb
js
lret
aas
xchg
inc
push
ds
das
loope
in
add
mov
mov
mov
shlb
js
jo
and
dec
sti
push
cmc
notb
cmp
subl
cmp
ret
xchg
dec
mov
add
testb
xor
ds
repz
mov
mov
sti
loop
xor
jb
jmp
ret
push
out
dec
imul
out
loope
mov
push
xor
je
mov
movsb
lcall
pushf
mov
mov
push
lret
addl
fdivrs
lcall
loop
jo
jns
jnp
dec
mov
xchg
sbb
mov
repz
out
inc
cmp
jnp
mov
sub
sbb
add
popa
and
xchg
or
cmp
daa
clc
in
pop
cmpsl
sarb
jb
inc
inc
adc
sbb
out
mov
test
mov
xlat
cli
jle
fsubrp
test
dec
adc
std
ljmp
push
inc
repz
jne
ficompl
pop
fstp
out
cs
add
or
int3
jno
out
gs
in
test
cld
sbb
dec
out
out
ret
aaa
dec
mov
xor
mov
mov
addr16
dec
cmc
xor
scas
add
jl
fidivrl
jb
fldenv
scas
push
push
adc
push
pop
sub
leave
test
jne
inc
pop
iret
mov
mov
dec
xchg
mov
xorb
inc
pusha
and
xor
sub
xor
jo
movsb
xchg
popa
push
rorl
sahf
adc
xor
mov
fbld
dec
dec
sub
ret
jp
mov
inc
outsb
repnz
das
pop
loop
scas
loope
mov
add
push
jmp
std
xor
aas
or
mov
dec
inc
jmp
dec
cmpsb
orb
push
mov
jbe
ud1
pop
jne
fstps
daa
test
int3
adc
adc
jge
xchg
repnz
fisttps
cmc
test
and
in
add
push
jp
inc
mov
jmp
enter
call
frstor
pop
lcall
in
jns
sbb
xor
cmpsl
cmpb
cmpsb
xchg
test
jg
cmp
std
int3
fxch
mov
outsb
jo
push
out
xor
jg
xlat
fnstcw
cmp
adc
inc
mov
repnz
js
sub
or
or
jl
xchg
adc
scas
stos
or
popa
fcmovb
bound
idivl
mov
add
push
mov
cmp
cmp
aad
cmc
jns
xchg
rolb
divl
in
movsl
sub
push
stos
andb
dec
test
jmp
xchg
mov
ljmp
lock
adc
push
div
in
xor
pop
adc
jp
dec
sub
jbe
fs
loopne
gs
fiaddl
sbb
popa
out
imul
dec
lods
push
inc
dec
mov
xor
xor
movsl
sbb
daa
mov
ret
mov
jecxz
dec
mov
jns
push
dec
rcl
ret
fisubs
adc
mov
xchg
xchg
adc
imul
test
cmp
pop
sbb
mov
lret
in
or
sbb
and
sub
mov
out
sub
dec
ss
test
sbb
add
lcall
cmp
cmp
ds
cwtl
xchg
jg
and
out
mov
rolb
dec
inc
rcrb
cmp
or
fwait
push
jmp
xchg
xor
mov
decb
mov
jge
push
or
notl
sub
push
mov
cltd
push
jbe
fsub
sti
fnsave
mov
sbb
xchg
mov
or
scas
adc
adc
jecxz
dec
mull
incb
fistpll
and
icebp
inc
mov
sub
adc
rorl
mov
mov
sti
dec
mov
lods
js
mov
pop
inc
ret
jae
lods
leave
cld
test
or
dec
xlat
cmpb
les
jb
inc
inc
jbe
rep
pop
negl
shll
fiadds
scas
inc
leave
lret
pop
rcrb
jo
aaa
aas
jns
inc
jg
roll
sbb
popa
mov
cmp
cmp
fwait
mov
push
pop
adc
mov
lds
and
inc
loopne
fdivrl
add
xor
lret
test
dec
aas
and
aas
sub
jne
inc
jge
or
fs
or
and
mov
pusha
aas
pop
ljmp
cmp
adc
test
clc
mov
les
mov
in
xchg
push
mov
jne
adc
xor
sbb
sub
insl
sub
pushf
fwait
mov
pop
xchg
cmp
adc
mov
mov
ret
lcall
mov
jno
das
or
mov
sahf
mov
inc
int3
ds
add
cmc
jne
aam
data16
xchg
dec
jge
dec
push
or
loope
ss
int
nop
shlb
sbb
adc
bound
pop
mov
mov
mov
inc
dec
std
test
dec
pushf
js
or
and
lcall
stc
popa
sti
mov
mov
jl
pop
loop
inc
inc
rcrb
sbb
fs
enter
sbb
fmuls
jne
andb
xchg
insb
es
sub
test
scas
int
push
fucomip
xor
cltd
xor
outsl
nop
mov
bound
test
pop
ret
push
sbb
sti
pop
or
fwait
into
cmp
pop
sbb
jp
pop
jg
xchg
lahf
pop
jge
pop
add
mov
sbb
ja
add
stc
ror
lea
push
sbb
dec
shrl
and
push
imul
add
xchg
pusha
out
pusha
dec
sahf
out
mov
cs
mov
gs
dec
push
ret
ja
scas
sbb
lcall
test
xorl
xchg
sbbb
inc
pop
dec
fwait
mov
sbb
inc
mov
xor
scas
pop
inc
mov
js
aam
lods
daa
aas
aas
cli
pop
icebp
adc
inc
fwait
or
cmpsb
iret
into
sbb
add
stos
enter
les
in
cltd
aas
neg
jg
sub
add
and
xchg
repz
rcr
jle
inc
dec
jecxz
hlt
or
dec
mov
adc
pop
inc
xchg
push
fadds
stos
cmp
xchg
jbe
mov
or
pop
sub
arpl
xchg
pushf
add
or
jbe
fisubl
cmp
stc
loopne
icebp
mov
je
call
cltd
fdivs
call
push
ja
iret
std
scas
adcb
mov
push
adc
sub
or
inc
fistpl
dec
or
sahf
test
dec
xor
jmp
lahf
in
adc
sbbb
out
sbb
cwtl
icebp
xor
nop
mov
mov
inc
mov
mov
dec
daa
lahf
jmp
lea
repz
idiv
lahf
shlb
das
decb
add
and
fs
cwtl
stc
outsb
pop
out
add
out
mov
shl
lahf
fstl
or
mov
jns
scas
aaa
xchg
xor
mov
roll
cmpsb
mov
xchg
aam
cwtl
fwait
test
cld
jbe
inc
inc
icebp
stc
js
lret
iret
mov
cmp
xchg
data16
shr
pop
cmp
lea
fldcw
push
sarl
dec
leave
rcrl
add
das
cmp
sub
mov
mov
adc
xchg
std
lret
xchg
adc
dec
cmp
stos
out
pop
mov
cmp
icebp
in
enter
cltd
data16
push
fsubs
pop
or
mov
mov
fisttpl
push
fidivl
add
jecxz
test
jbe
je
sub
rorl
xchg
add
stos
jle
mov
xor
jno
jp
out
pop
das
cmpsb
mov
fnsave
cmpsb
insb
repz
mov
mov
pop
dec
test
loope
shlb
ss
lds
repnz
pop
xchg
mov
lea
jo
insb
enter
pusha
fwait
ljmp
test
lcall
jnp
push
mov
push
or
dec
sbb
push
dec
cmp
sbb
push
roll
xchg
movsl
gs
sbb
out
inc
ja
mov
add
mov
sbb
mov
mov
lods
pusha
push
mov
jmp
testl
cld
mov
notl
jg
mov
adc
ja
xor
roll
shll
aad
pop
lods
loop
jns
xchg
or
mov
mov
pushl
sbb
sbb
mov
lret
lods
ds
lret
cld
jb
jbe
jns
nop
shll
add
sub
call
in
mov
pop
pop
stos
lds
sti
push
sahf
dec
in
lock
jae
es
popf
mov
lock
ljmp
fdivrl
gs
xor
sub
fildl
mov
dec
mov
pop
or
bound
cs
and
in
push
inc
xchg
movsb
inc
cmp
fiaddl
or
out
shrb
push
add
pop
push
xor
hlt
mov
sti
lods
cmc
hlt
sbb
mov
xchg
or
loop
andb
sahf
iret
cmpl
add
movsb
out
js
mov
fnsave
sbb
or
add
js
sahf
push
cmp
and
lods
mull
fsubs
mov
hlt
iret
loope
cmpsb
sub
jp
adc
xchg
dec
pop
stc
orl
out
push
pushf
mov
pop
push
arpl
cmp
lahf
lret
cmp
mov
push
sti
push
jae
outsl
fcomi
into
in
mov
negl
and
mov
js
insl
add
dec
inc
inc
pop
xor
fsubs
imul
add
rcr
aad
test
or
fsts
data16
mov
sub
jne
ret
xchg
mov
addr16
adc
dec
loop
xchg
lret
pop
es
adc
daa
ss
inc
mov
push
pop
adc
inc
addr16
cmp
fxch
out
outsb
inc
mov
dec
add
mov
xchg
xor
in
xchg
inc
sbb
fnsave
fdivrs
cmpsl
mov
into
dec
sbb
inc
bound
mov
insb
pop
push
sbb
cwtl
mov
push
outsb
pop
test
add
inc
popf
lea
jns
dec
sbb
inc
adc
pusha
jno
enter
popa
adc
out
xchg
xchg
testl
call
out
imul
sub
xor
cld
and
movsb
lahf
lock
out
in
add
sbb
fistps
mov
push
cld
out
loope
mov
jp
sti
adc
mov
in
adc
xor
andb
adc
pop
sbb
popf
add
pusha
cmpsl
lds
cld
push
fdivl
loopne
push
mov
mov
jle
je
out
push
fiadds
mov
inc
stos
sub
add
xlat
pop
pop
ret
sbb
cmp
loop
jl
ret
scas
lcall
adc
js
aaa
test
xor
dec
fstps
fidivl
mov
sbb
mov
xchg
cli
mov
in
inc
mov
lods
dec
aad
sbb
jno
or
push
sbb
shlb
dec
mov
shlb
shlb
ds
and
push
dec
test
fs
clc
idivl
bound
jbe
sti
test
xchg
loopne
mov
jbe
mov
or
popa
push
hlt
cwtl
daa
out
popf
xchg
rcrl
adcl
sub
jle
or
icebp
jb
push
add
push
or
mov
outsl
mov
mov
xchg
pop
or
pop
aam
cmpsl
insl
icebp
inc
loop
sbb
lock
jl
push
std
cmpw
dec
roll
ja
dec
xchg
fadd
sbb
add
fnstenv
rolb
aam
int
pop
cmp
adc
xor
in
pushf
imul
cmp
jg
in
pushf
sub
mov
fldl2e
dec
xchg
push
movsl
mov
sbb
int3
mov
mov
mov
adc
and
push
cmp
inc
loopne
mov
or
fimull
adc
sahf
and
xchg
lret
mov
cli
lahf
inc
scas
dec
std
mov
and
call
hlt
cmp
xor
dec
outsb
cmc
pop
and
int3
ret
sbb
or
and
dec
push
lds
out
cmpsl
repnz
mov
out
dec
test
roll
cmp
pop
les
lea
push
imul
fistps
int
ss
xchg
push
sarl
push
ror
cmpsl
inc
inc
fs
aaa
add
jo
js
jbe
push
fildll
icebp
sub
xor
lea
aas
and
sbb
cmc
loop
jmp
and
or
hlt
in
pushf
cli
lods
imul
pop
and
cmpsb
repnz
sti
cmp
jno
push
or
lods
icebp
lds
jno
mov
and
sub
jne
jp
pop
rcrl
in
aas
pop
mov
movsb
loope
inc
fcmovnu
push
dec
cmp
mov
int3
push
inc
jbe
iret
inc
cmp
cmp
sub
push
outsl
loopne
xchg
sub
mov
popf
mov
add
std
test
mov
xlat
and
rorb
idivb
loope
jno
pusha
mov
jl
mov
aaa
mov
or
dec
xchg
in
add
stc
imul
stos
mov
xor
cmp
adc
filds
add
push
sbb
les
jns
fwait
shrl
xor
aam
dec
mov
or
or
ljmp
sub
jge
ficoml
test
cltd
inc
test
ss
cmp
int3
jle
loop
sbb
iret
scas
arpl
arpl
cmc
add
add
add
add
iret
pop
xchg
gs
jp
jns
push
push
mov
stc
mov
and
cmpsw
popf
jbe
inc
aam
push
pop
test
pop
sbb
dec
int
jecxz
bound
push
push
pop
push
pop
mov
xchg
inc
xor
outsl
mov
jp
enter
test
jle
inc
pop
cmpsl
outsb
loopne
mov
fimull
imul
js
fcmove
pop
addl
dec
repnz
add
pop
aam
out
iret
or
mov
dec
and
andl
mov
insb
in
pop
sub
sti
pop
sbb
pop
inc
mov
vunpcklps
ds
imull
in
arpl
push
aaa
lea
add
cmp
arpl
adc
pop
lahf
adcb
iret
imul
rolb
inc
int3
sub
test
or
in
lods
or
ja
jl
add
push
push
dec
lds
test
sti
lahf
rorl
jbe
push
and
and
rcll
test
xor
mov
fsubrs
mov
pop
mov
fimull
sbbb
aam
ja
popa
mov
loope
jg
fisubrl
in
pop
push
leave
jle
fldcw
mov
jl
xchg
mov
hlt
dec
pop
mov
push
inc
mov
pop
or
fdivr
icebp
loop
rolb
cmp
inc
daa
loopnew
adc
pop
fwait
gs
es
gs
loope
add
dec
repnz
add
icebp
in
mov
sarl
stc
cmc
stos
es
add
xlat
cli
xchg
movsb
in
cmp
mov
cs
rolb
mov
mov
push
sbbl
xor
mov
jo
ror
test
mov
dec
mov
push
push
rorl
xchg
and
mov
sub
xchg
pop
jbe
popa
aam
movsl
aad
xchg
aas
jne
ss
scas
mov
pop
nop
cli
pop
fsubrs
clc
leave
cmp
or
leave
jl
pop
sbb
sbb
stos
test
and
mov
jp
mov
sub
mov
xor
and
pop
lods
clc
mov
scas
lahf
push
push
push
ret
sbb
or
outsl
ret
lret
xlat
or
or
pop
mov
movsl
insl
push
and
int3
add
add
xlat
insl
add
xchg
or
add
std
jp
add
arpl
shlb
mov
fldenv
sbb
jge
or
lods
jbe
test
and
ss
push
jb
subl
lds
in
adc
push
jno
jb
or
cmp
pop
cmp
jae
push
bound
sbb
movsl
ja
dec
sti
mov
pop
test
aas
push
stos
add
jmp
bnd
rclb
lar
push
icebp
cmc
out
push
loop
sti
rol
adc
inc
add
mov
nop
loop
push
push
idivb
cmpsb
cltd
mov
hlt
repnz
or
xchg
stc
mov
mov
or
pop
push
push
cs
xchg
inc
fimuls
jecxz
or
mov
test
mov
fimuls
vpavgw
decl
push
pop
sahf
icebp
loope
pop
dec
insl
ret
out
inc
mov
jmp
adc
push
decl
or
inc
push
push
xchg
cvttps2pi
pop
pop
add
mov
scas
xchg
mov
lods
das
icebp
inc
shlb
or
mov
lds
sbb
out
fimull
cld
and
adc
and
push
add
cmpsl
outsb
jl
adc
dec
mov
int
inc
fcompl
jnp
push
or
loope
mov
sub
addr16
scas
loop
das
fdivrp
sti
sub
sub
jne
mov
push
mov
test
jb
mov
mov
adc
jecxz
push
xor
dec
lret
cmp
jno
and
and
mov
xchg
xor
xchg
push
and
iret
sub
imul
sahf
addb
or
icebp
into
sub
fdivp
das
inc
fdivs
jae
sbb
pop
push
adc
sub
aam
mov
mov
push
out
cmp
add
out
imul
pop
inc
daa
fsubrl
mov
xchg
dec
mov
insb
or
aam
imul
push
int
das
mov
arpl
add
cmp
or
push
sbb
push
mov
hlt
push
ljmp
push
jne
iret
mov
iret
and
xor
in
adc
in
test
dec
or
icebp
mov
pop
testb
imul
or
fcmovu
insb
movb
lods
dec
mov
adc
xchg
dec
pop
call
and
icebp
sub
mov
xor
insb
xchg
mov
fwait
mov
enter
sbb
test
imul
mov
mov
xor
adc
push
jp
mov
ja
and
push
mov
xor
aam
mov
loopne
jbe
icebp
pop
xor
mov
push
in
and
push
adc
xor
inc
inc
mov
mov
inc
insb
data16
xchg
cmp
jge
scas
inc
dec
xchg
in
pop
inc
push
mov
insb
ret
push
xchg
test
or
imul
lret
rolb
push
mov
rolb
pushf
push
lods
test
int3
fcomi
sbb
dec
inc
pushf
data16
cmp
push
je
lret
icebp
js
subl
add
cwtl
jbe
into
out
cmp
dec
scas
dec
inc
shll
adc
inc
jmp
insl
rclb
and
push
mov
nop
imulb
mov
mov
mov
add
mov
in
hlt
mov
xor
cwtl
sahf
data16
int
sbb
movsl
and
pop
test
insl
call
mov
or
adc
daa
ds
cwtl
test
js
repnz
aas
dec
les
dec
daa
out
loop
js
xchg
xor
daa
aam
inc
lret
je
cmpsl
fcoml
mov
in
jecxz
lahf
inc
push
cmp
sub
xor
shr
jno
xchg
jbe
lret
inc
ljmp
push
mov
negl
into
pop
mov
aam
adc
movsb
xchg
or
inc
nop
and
cwtl
adcl
add
push
mov
adc
sbb
pushf
clc
push
push
and
mov
testb
out
outsl
add
out
ret
or
xchg
scas
daa
imul
in
mov
mov
stc
sti
adc
jnp
sub
mov
cltd
fs
fwait
xor
bound
mov
mov
dec
mov
loop
sub
imul
dec
pusha
out
push
jl
pop
dec
push
mov
dec
dec
nop
sub
sub
or
add
fbld
push
jecxz
loop
imul
fidivs
mov
and
inc
xchg
add
out
jl
xor
inc
mov
aam
fstps
push
jmp
ds
lahf
cmp
stos
mov
mov
arpl
insl
jecxz
sahf
fwait
mov
arpl
or
ljmp
mov
cli
je
dec
jne
iret
outsb
dec
test
pop
pop
mov
cmp
sub
cmp
mov
cmp
imul
jg
mov
bound
push
repnz
jp
mov
add
add
cmc
pop
in
or
lcall
fs
cmp
out
into
jne
cmpb
inc
push
call
inc
xor
sahf
out
and
insb
sbb
xor
and
mov
lds
nop
xor
mov
loopne
fsubl
jg
cmpsl
add
scas
negb
in
rcll
xlat
lea
lea
aad
jae
and
mov
aaa
mov
sub
xchg
fnstsw
movsb
test
lret
mov
xchg
insb
xchg
fbld
or
mov
fwait
sub
int
ds
xor
outsb
in
jge
xor
mov
dec
dec
repz
fldl
popa
jmp
jae
sbb
push
add
adc
out
cmpsl
pop
adc
insl
xor
insb
nop
and
rcl
sbb
ds
lret
xchg
pop
xchg
stos
jae
test
fs
aam
sbb
push
or
iret
mov
sub
add
addr16
xchg
pop
loopne
pop
sarl
push
jmp
fs
lret
ret
ret
dec
adc
imul
inc
dec
pushl
push
push
inc
ss
loope
push
int3
adc
cmpsl
sbb
mov
shl
std
push
xchg
mov
cwtl
dec
out
xchg
dec
pop
lods
loopne
scas
sti
and
int
mov
mov
mov
shrl
test
mov
or
xor
fisubrl
cmpsl
mov
lret
pop
ljmp
mov
mov
sarb
push
mov
xlat
add
xchg
enter
popf
mov
addb
sub
sub
mov
pop
cltd
fnsave
lcall
arpl
inc
in
insb
repz
sbb
mov
jl
ficompl
sbb
cmp
mov
sbb
cmpl
loop
push
test
aam
sbb
inc
dec
movsl
out
fstpl
wrmsr
movsl
divb
imul
in
adc
mov
bound
cmp
out
mov
pop
or
inc
xchg
jnp
inc
push
adc
jns
xorl
xchg
loop
test
or
sbb
xchg
shll
sub
test
scas
push
loope
jo
push
ljmp
arpl
xor
les
loopne
jle
sbb
inc
add
or
add
jns
repz
mov
fdivrp
js
data16
jb
jge
adc
mov
xor
lea
mov
cmp
inc
shr
sbb
and
cli
or
pop
shl
sahf
adc
xchg
sbb
enter
arpl
adc
rcll
cli
inc
jae
or
scas
out
mov
adc
ret
mov
pushf
arpl
in
jae
lret
mov
mov
pop
jnp
and
insb
inc
clc
dec
les
push
fs
adc
mov
inc
jg
repnz
loopne
lret
mov
das
pushf
fwait
js
clc
ficoms
stos
mov
ds
fdivrp
repz
push
cmp
arpl
mov
into
and
fildl
fwait
int
add
mov
mov
nop
outsl
jecxz
dec
add
mov
outsl
daa
ja
in
leave
jecxz
mov
mov
pop
les
test
jmp
sub
sbb
lea
cmp
sbb
sub
jnp
push
insl
add
loope
rcll
jne
out
mov
xorb
inc
jo
clc
das
xor
shlb
mov
adc
mov
or
mov
cltd
nop
das
xor
sarb
sub
push
inc
jp
pop
pop
xor
fldt
mov
dec
scas
inc
pushf
push
std
scas
pop
sti
jecxz
dec
push
lea
xchg
scas
insb
jle
sahf
jl
adc
out
push
andb
add
mov
add
das
popf
sub
call
cmpsb
cmpsb
js
ljmp
jnp
aad
in
push
bound
stos
imul
push
add
subl
cltd
lea
std
mov
ja
leave
outsb
int
iret
or
loope
dec
inc
xor
push
lret
nop
dec
inc
cmc
mov
rorb
les
out
mov
push
mov
cmp
cmpsb
jno
aam
jg
jl
or
add
xchg
jnp
in
add
jl
or
sbb
add
setae
mov
movd
pop
jmp
xchg
jg
fcoml
sub
adc
rcl
ret
fadd
pop
jb
mov
data16
add
lcall
dec
mov
add
sub
test
jecxz
iret
and
mov
adc
idivb
pop
adc
xchg
scas
dec
loope
ror
jg
lcall
xor
mov
sarb
sub
pop
rclb
add
mov
push
test
add
mov
fists
inc
and
mov
sbb
out
outsb
fists
mov
je
inc
push
lret
pushf
inc
int3
jecxz
loop
inc
adc
push
jge
and
cmp
sti
leave
lods
mov
fnstsw
pop
fsubl
cmp
imul
pop
test
shll
dec
push
movsl
add
repz
mov
movsb
ret
hlt
cmp
adc
pop
fsubrs
movsl
and
jg
cwtl
adc
pop
fisubs
dec
and
mov
out
fwait
mov
push
dec
jo
scas
pushf
aad
pop
mov
lods
jg
xchg
xabort
imul
stos
ja
sbb
neg
cmpsl
das
cli
xor
xor
jl
mov
and
or
jmp
and
fwait
xchg
mov
shr
push
loopne
push
mov
xor
mov
and
mov
pop
inc
push
mov
inc
aad
ret
inc
out
pop
inc
or
test
mov
iret
fidivrl
mov
pop
sbb
xor
mov
inc
in
pop
fwait
push
xchg
test
mov
xor
pop
inc
push
cli
jnp
pop
mov
in
push
xchg
xor
sub
insl
push
push
daa
sbb
dec
cld
push
jmp
sahf
and
ret
xor
aam
or
inc
mov
mov
lods
mov
std
inc
mov
out
fcmovnb
push
in
xchg
call
sub
pop
mov
mov
mov
adc
add
adc
xchg
push
push
jno
pushf
mov
and
xor
mulb
arpl
jp
ret
push
mov
pop
mov
int3
aaa
pop
sbb
ljmp
stos
inc
insb
jae
xor
jns
sub
fwait
movsl
adc
dec
adc
mov
pop
add
xor
test
adc
outsb
inc
jnp
sub
pop
fistl
push
mov
push
xchg
inc
dec
cmc
cmpsl
test
in
inc
sbb
imul
mov
sub
jecxz
xchg
pop
cmc
push
cmc
adc
sbb
jle
cmp
bound
mov
gs
push
scas
fidivrl
dec
inc
clc
or
mov
std
fisubrl
push
std
or
int3
test
and
push
not
lret
inc
push
xchg
pop
je
int3
pusha
or
jne
inc
or
xchg
mov
xorl
and
dec
insl
les
xor
clc
xchg
inc
fbld
mov
cmp
int
sbb
jae
inc
rcrb
fucom
sub
pop
adc
jbe
pop
xchg
dec
jl
incb
pop
mov
mov
out
jne
sub
xchg
jp
insb
or
ret
pop
cmpsb
out
mov
test
mov
jno
pushf
mov
mov
inc
jno
jb
outsl
xchg
rcrb
imul
testl
mov
push
mov
test
mov
or
xchg
ret
movsl
popf
inc
mov
lret
test
xchg
sub
cmp
dec
cmp
mov
or
xchg
dec
adc
jle
dec
ret
mov
movsb
in
and
sbb
or
lret
out
push
push
jno
test
dec
push
rcll
dec
int3
pop
adc
inc
inc
adc
sbb
dec
mov
xchg
or
xor
fisubrs
fistpll
addr16
xor
outsb
xor
inc
outsb
inc
mov
pop
das
stos
loop
pop
mov
push
adc
sbb
in
fsubr
lods
jb
je
mov
ja,pn
sbb
adc
fldt
sbbb
dec
fcomps
fimuls
or
inc
xor
jno
cli
mov
jbe
mov
ror
sbb
push
jae
ss
sub
insb
call
cmp
das
sti
pop
ret
push
pushf
sahf
cmp
lock
mov
cwtl
push
cmp
ds
popf
or
test
pop
and
add
inc
push
imul
arpl
aaa
f2xm1
lret
dec
or
mov
imul
sub
and
jg
inc
push
aad
adcb
jnp
ljmp
xchg
xor
jle
icebp
es
xor
lds
ret
mov
iret
dec
leave
sub
stos
or
inc
dec
pop
mov
add
ss
lcall
inc
pop
jmp
jp
inc
lock
and
rorb
mov
shr
mov
clc
inc
mov
outsb
pop
and
inc
sub
mov
sub
test
adc
sub
outsl
out
push
daa
sbb
rolb
sahf
lea
xor
push
mov
fld
adcb
jb
or
test
mov
lret
mov
daa
pop
push
jl
mov
adcb
div
in
push
bound
mov
add
imul
dec
and
push
inc
icebp
insb
into
in
cltd
iret
mov
inc
dec
js
orb
test
repnz
dec
sbb
lahf
and
sub
rcll
and
or
xchg
push
subb
mov
mov
jecxz
push
mov
cmp
pop
jnp
xchg
fidivrs
cs
push
pop
pusha
cwtl
pop
test
fwait
insb
into
mov
inc
and
pop
mov
lds
mov
jb
in
jb
sub
and
push
ror
push
xchg
int3
add
add
xchg
clc
shl
mov
jno
or
push
jne
ret
mov
enter
fsub
jl
flds
xor
stos
xchg
les
sti
mov
aas
or
loopw
push
inc
add
sbb
shrl
mov
sarl
adc
or
and
and
mov
mov
ss
mov
arpl
std
sbb
push
call
clc
leave
adc
mov
push
adc
stos
loope
sbb
pop
mov
adc
adc
add
lods
mov
cltd
mov
add
mov
jae
mov
or
stos
incl
mov
sbb
imul
push
xchg
jne,pn
aam
dec
mov
jle
xor
es
and
add
mov
js
popl
hlt
mov
leave
imul
dec
sub
or
adc
loop
shrl
scas
pop
dec
xchg
cmp
lods
outsb
ds
inc
mov
adc
push
jecxz
aam
jnp
and
sti
outsl
mov
or
mov
in
push
leave
push
push
xor
sbb
jno
stos
xor
aas
pop
add
cmp
shll
cltd
mov
popf
rorb
popa
fcompl
jnp
ja
dec
leave
repz
into
das
adc
enter
aaa
adc
pop
notl
push
xorl
or
mov
stc
mov
mov
sub
arpl
or
dec
mov
jp
orl
jns
in
xchg
out
fidivrl
aaa
push
jecxz
and
bound
push
mov
int
xchg
out
in
insb
bound
and
mov
scas
xchg
mov
xorb
andl
fildll
add
test
dec
test
jb
out
mov
imul
jne
push
clc
ds
cmp
inc
into
mov
idivb
push
mov
js
jmp
lods
push
push
lods
sbb
arpl
insb
jecxz
mov
pop
rolb
xor
push
outsb
dec
add
fucomp
or
sub
sbb
lcall
adc
mov
sbb
clc
push
xor
call
inc
test
pusha
pminsw
jl
out
push
scas
in
lods
adc
fdivr
jo
fwait
sub
lock
and
add
push
mov
mov
js
cmpsl
mov
pop
push
add
int3
add
je
mov
scas
fsts
sahf
divl
mov
pop
fimuls
cmpsb
hlt
cmp
fnsave
cmpsl
adc
jne
lock
xchg
push
sbb
jle
mov
ds
clc
fs
dec
xchg
xor
dec
cmc
adc
mov
sbb
mov
in
xchg
adc
xchg
addb
jb
inc
das
inc
inc
inc
icebp
lcall
rolb
sub
cld
xchg
gs
xor
pop
adc
cwtl
call
push
mov
sub
cmpl
and
ja
lock
loopne
shlb
les
subb
adc
mov
shrb
stc
push
adc
outsl
xchg
insb
xor
jmp
int
push
mov
out
sti
movsb
dec
arpl
adc
in
dec
xchg
loope
dec
and
fidivrl
jle
sti
mov
cmc
jne
lret
mov
arpl
jne
mov
inc
test
out
repz
or
into
in
jnp
call
pop
inc
mov
push
jmp
and
mov
bswap
ljmp
daa
loopne
jne
pop
add
clc
cmp
xchg
mov
dec
loop
cmc
sbb
aas
push
frstor
push
dec
cmp
ret
cmp
push
out
cs
mov
and
dec
outsl
mov
jne
inc
scas
xor
out
mov
jne
jp
ljmp
mov
test
jmp
mov
jle
cmp
xchg
add
shll
and
sub
movsl
outsl
jecxz
adc
jg
sbb
pop
mov
clc
add
adc
and
cmp
push
add
adc
push
in
dec
jl
cmpsb
call
fnstenv
fwait
loopne
mov
cs
jle
nop
adc
and
std
seto
push
fwait
push
ljmp
outsl
fs
sti
lret
jge
pop
inc
pop
mov
push
or
mov
adc
mov
ja
xchg
mov
push
jmp
push
add
mov
push
mov
mov
sub
push
lods
mov
lock
and
mov
lret
mov
insl
insb
add
hlt
xchg
lock
mov
pushf
adc
scas
sbb
pop
cmp
cmp
cs
cmp
cld
jns
aas
dec
mov
dec
scas
push
js
cwtl
rcrb
mov
xchg
or
inc
mov
lret
bound
add
subl
or
mov
out
lock
lret
in
pop
outsl
adc
xchg
adc
arpl
pop
jmp
push
ffreep
fsubrs
fistpll
mov
mov
add
stos
aad
adc
addr16
les
lods
movsb
test
xchg
add
icebp
inc
or
sbb
jle
outsb
jge
inc
sub
lea
dec
inc
sbb
inc
mov
mov
cmp
in
aas
cs
hlt
cmpsb
insb
dec
push
pop
out
lret
repz
cmpsl
jne
sub
jae
fisubrs
je
enter
cmp
push
in
es
cmp
adc
popa
roll
mov
std
sub
push
cmp
fwait
push
movsl
cmpsl
negl
xchg
ljmp
in
mov
enter
pop
shl
fs
stc
es
insb
data16
jns
pop
or
mul
fidivs
and
push
mov
jbe
pop
ret
enter
fcoml
cld
pop
gs
dec
scas
stc
jbe
cmp
popf
cld
out
out
sbb
btc
mov
pop
mov
mov
pop
pop
rcrb
mov
pop
test
xchg
mov
xchg
ljmp
leave
cwtl
in
pop
xor
mov
mov
lcall
push
mov
data16
out
xor
push
imul
jl
out
xor
fnstcw
ljmp
icebp
add
je
fistps
sbb
test
shrb
push
sub
mov
mov
js
or
lahf
cli
cli
jl
pop
lds
aad
push
out
push
add
jne
xor
dec
fdivrs
shll
mov
ret
clc
lret
loopne
sub
sbb
out
stos
test
jg
out
and
jle
cli
es
or
aam
sub
enter
std
out
outsl
jnp
push
jne
mov
inc
stos
and
dec
sbb
sbb
call
lea
push
enter
add
jnp
dec
jbe
fidivl
scas
outsb
add
fs
mov
das
xchg
negl
jae
popa
stc
insl
insl
lret
loopne
stos
std
lcall
shl
pushf
es
sbb
cld
and
push
icebp
pop
lahf
sbb
or
sbb
shl
mov
push
hlt
pusha
inc
shr
push
mov
sub
sub
xor
mov
outsl
jl
cmp
mov
jnp
pop
mov
jp
add
test
test
mov
insl
or
xchg
jb
fsub
popa
je
fcmovb
sahf
cmp
xor
add
cmc
insb
pop
repz
mov
inc
or
jmp
stos
adc
pop
mov
sar
inc
jne
pop
add
mov
push
dec
repnz
clc
addr16
aaa
jno
test
add
or
mull
out
pop
adc
add
test
stos
mov
rol
mov
push
adc
daa
adc
jo
inc
test
fwait
mov
push
inc
inc
std
xor
dec
lea
sub
js
or
mov
xor
and
cmp
inc
jge
sahf
iret
addr16
pop
shlb
xor
jle
je
das
lcall
mov
mov
jno
iret
adc
ljmp
outsl
inc
fbstp
and
pop
push
dec
push
shrb
push
imul
dec
or
adc
and
pop
aam
cmp
aaa
adc
outsb
mov
inc
xchg
lret
inc
sbb
mov
lods
sbb
adc
xor
in
adc
icebp
fisttpl
popa
push
add
iret
cmp
sbb
sub
mov
lret
cmp
jne
jle
or
push
aad
rolb
loop
cmp
cmp
mov
outsb
loope
inc
sbb
lret
xchg
pop
sbb
pop
loopne
aaa
push
mov
xchg
sub
and
lahf
fldt
inc
js
xor
sbb
iret
xchg
test
outsb
jbe
mov
ficompl
add
add
xor
inc
xlat
xchg
mov
idivb
mov
sub
out
lock
pop
sti
sub
iret
and
int3
dec
popf
sbb
fwait
mov
sub
push
dec
cli
mov
mov
push
lahf
lock
aam
inc
mov
push
mov
adc
xchg
mov
lods
das
inc
xchg
add
mov
mov
ljmp
push
xor
cs
or
lods
je
and
lods
sbb
pop
popf
iret
push
iret
inc
scas
mov
je
test
and
rorl
repz
xchg
iret
xchg
jbe
sub
push
push
leave
pop
imul
cmc
cmp
mov
jo
pop
aaa
fldt
icebp
leave
push
sbb
stc
sbb
lcall
mov
xor
in
adc
xor
sbb
adc
push
daa
and
mov
fsubrl
das
ficoms
hlt
inc
sub
sbb
mov
sub
test
adc
sti
or
into
outsb
push
jmp
cwtl
xor
ret
nop
and
and
cmp
inc
adc
pop
xchg
xchg
push
cltd
fmuls
cmp
jmp
xchg
jb
sbb
flds
cmpl
add
mov
ret
xor
inc
mov
push
add
je
cld
jb
test
mov
out
adc
xchg
nop
sbb
call
arpl
mov
and
shr
arpl
or
arpl
or
repz
insb
mov
adc
repz
call
dec
in
adc
mov
xor
xchg
inc
fs
movsb
repnz
cli
jbe
cmp
ret
jp
dec
jmp
hlt
mov
jno
es
cld
xchg
daa
in
test
sbb
mov
sbb
bound
lea
out
out
dec
push
xchg
mov
aaa
imul
shrb
jnp
cmc
jns
cld
push
push
int
test
outsb
mov
mov
push
pop
loopne
xchg
incl
pop
aad
add
in
aam
bound
dec
lahf
mov
lea
mov
fldenv
lret
mov
dec
xchg
adc
and
fbstp
sbb
mov
push
sahf
push
hlt
add
mov
das
and
aaa
aad
mov
dec
int3
mov
in
sbb
dec
and
mov
adc
icebp
cmp
in
rcr
dec
xchg
lahf
cmp
pop
push
sarl
push
mov
inc
sar
fbld
movsb
push
or
data16
jge
sub
movsl
push
push
sub
ret
lock
test
test
push
cmpl
xor
cmp
negl
fs
and
leave
xor
xchg
add
out
mov
sub
sti
lcall
aad
cmc
test
adc
inc
or
sub
rorl
scas
ljmp
jg
aaa
jne
pop
js
jno
leave
jge
mov
and
adc
repnz
cmp
inc
dec
je
orl
push
cltd
pop
dec
sahf
sub
aaa
xchg
xchg
mov
inc
push
out
dec
das
mov
pop
movhlps
pop
sbb
dec
cmp
test
adc
add
or
mov
sub
or
pop
dec
addl
lret
push
les
jg
fidivrs
mov
shrl
and
xor
sti
idivb
add
scas
dec
int
imul
jo
sbb
add
sub
shl
ja
lea
sub
xchg
into
and
jl
and
mov
fs
enter
mov
sti
out
out
aad
mov
sbb
fwait
les
dec
in
rclb
xor
rcll
or
pop
inc
fbstp
fs
inc
sub
js
lods
or
or
lea
test
pop
outsl
fiadds
adc
pusha
outsb
cmc
jge
jp
insl
adc
pop
sub
mov
loope
and
jl
or
int
inc
in
sbb
push
and
mov
enter
push
add
pushf
repnz
or
push
sarb
subl
sti
pop
popf
jg
rcr
inc
scas
pop
cmpsl
xor
out
pusha
adc
jg
aad
inc
push
scas
mov
loope
xorb
mov
inc
iret
mov
lret
sbb
mov
imul
cmp
mov
inc
sub
stos
push
xlat
popf
in
dec
lods
sbb
data16
adc
nop
jbe
cwtl
aam
in
out
cmp
shll
les
and
clc
mov
or
ds
fndisi(8087
stc
pop
adc
cwtl
std
ret
int3
or
movsb
xor
gs
add
dec
mov
mov
cld
and
inc
in
test
clc
mov
jge
loope
sarb
jecxz
push
adc
in
inc
jecxz
je
pop
pop
xchg
xlat
mov
pop
sbb
or
cmc
pushf
mov
add
aam
jecxz
or
mov
aas
out
out
inc
mov
ret
xchg
push
dec
aam
xchg
push
xchg
push
jle
arpl
jle
mov
lods
cwtl
or
test
sarl
in
in
push
add
pop
push
pop
dec
push
enter
movsb
or
stos
jnp
fisttps
aam
cmp
ret
add
add
xor
loop
fstps
subl
xchg
popf
jae
push
sub
divl
adc
mov
jmp
sbb
rcl
cmp
int
aaa
or
mov
jg
fcoml
mov
mov
sbb
mov
leave
mov
cmp
test
lods
xchg
dec
or
mov
mov
inc
mov
jne
inc
xchg
pop
mov
jne,pt
dec
mov
jbe
mov
push
mov
xchg
cmp
or
loopne
stos
leave
daa
cmpl
shll
xchg
inc
stos
pop
out
add
xchg
and
data16
aaa
xchg
fs
cmp
loope
test
das
cmc
cmp
xchg
jmp
xlat
jmp
sub
or
test
inc
adc
into
fwait
adc
popa
pop
dec
adc
cmp
sub
xchg
lock
iret
sub
ss
icebp
into
ret
or
pop
test
stos
jg
jp
lcall
xchg
aaa
clc
push
ret
aas
push
cmp
sub
call
mov
adc
mov
aaa
cmp
lea
adc
pop
and
or
mov
fcoml
add
xchg
xchg
repnz
nopl
into
scas
xor
mov
cltd
and
adc
sbb
data16
mov
fisubrl
loop
jno
divl
testb
sub
push
fwait
inc
cld
push
leave
cmp
ss
adc
test
fs
pusha
imul
stos
cld
inc
lret
loop
in
mov
je
xor
jecxz
jb
stc
add
jo
popf
xchg
lret
addl
es
pop
push
loope
rcl
test
sti
or
sbb
and
imul
and
cmp
sbb
aas
dec
lret
inc
mov
xlat
push
jge
xchg
mov
test
sbb
push
in
insl
xchg
xchg
gs
cltd
dec
jecxz
sbb
inc
std
stos
enterw
sbb
out
insb
mov
or
insb
stc
test
mov
xchg
or
aam
sub
daa
or
stos
loopne
and
mov
ret
mov
and
sbb
cmp
sarb
pusha
dec
xor
test
std
sbb
sbbb
sbb
movl
daa
in
fistpll
jbe
jg
pop
stos
sbb
jmp
mov
xor
sbb
sub
add
inc
pop
xor
push
mov
lods
or
mov
and
das
sbb
jo
mov
cmp
inc
inc
stos
rolb
and
sub
lock
or
push
out
xor
insb
das
ja
stos
xchg
xchg
mov
push
ret
insb
jge
pop
pop
xlat
enter
mov
jbe
jnp
out
mov
xchg
pop
sbb
xchg
jae
test
and
sub
in
sti
sbb
xorb
mov
xchg
pop
outsb
push
mov
sub
push
in
outsl
fdivr
aam
or
pop
leave
xor
into
lret
aaa
int
andl
cmpl
enter
or
dec
lock
out
pushf
push
sbb
andb
pushl
and
std
mov
lret
orl
dec
scas
sbb
lret
mov
cwtl
push
jno
adc
jecxz
jmp
pop
push
adc
or
test
pop
daa
pop
outsb
lret
orb
pop
mov
pushf
mov
inc
inc
xor
push
sbb
mov
rclb
mov
nop
fbld
inc
jecxz
lea
les
incl
sub
out
jp
cmpl
adc
mov
mov
movsl
je
sti
mov
cs
jbe
stos
fisubrs
leave
in
dec
aam
ret
mov
addr16
inc
fadds
sbbl
mov
adc
push
mov
popf
movsb
movsb
stc
aam
ss
pushf
adc
push
mov
loope
cld
je
sub
das
add
mov
aam
inc
push
lock
roll
mov
leave
sarb
inc
js
subl
and
stos
adc
dec
xor
negl
test
daa
ficompl
les
mov
mov
pop
les
adc
mov
dec
test
test
sub
stos
es
cmpsb
push
lock
rolb
int
idivl
sub
in
xor
subl
inc
test
cltd
add
lcall
stos
in
test
mov
sub
and
decb
sbb
add
lds
outsb
xlat
andb
das
mov
jns
mov
adcb
sub
ds
int3
in
sub
pop
push
dec
mov
push
mov
xor
dec
fstp
cs
lds
aam
loope
shll
aas
or
fwait
cmp
scas
xor
hlt
push
std
pop
out
nop
rcrl
inc
mov
je
xchg
mov
cmp
cld
add
imul
xchg
xlat
fsubrs
sbb
and
fnstenv
sahf
test
jge
adc
jg
icebp
adc
mov
das
fwait
pushf
cmc
xchg
mov
cltd
cmp
dec
xor
inc
xchg
inc
iret
pop
cmp
sbb
and
fwait
push
jmp
lods
pop
sbb
xor
push
ds
ss
js
stc
mov
insb
fwait
push
mov
xchg
cmp
lcall
sub
call
jb
repz
jecxz
inc
add
loop
push
js
outsb
fnstenv
inc
dec
mov
dec
inc
add
cmpb
test
aas
xchg
bsf
mov
mov
das
loop
mov
cmp
sbb
into
aaa
ljmp
cmpsl
cltd
pop
clc
inc
int3
mov
cmp
push
inc
and
add
std
pop
aaa
push
add
ljmp
pop
mov
mov
or
sahf
es
cmp
into
push
xor
inc
aas
add
or
aaa
out
imul
inc
and
sbb
lea
xor
jmp
pushf
mov
xchg
xchg
adc
or
sub
cmp
pop
dec
xchg
pop
int3
xchg
imul
inc
aaa
fdivp
lahf
xor
mov
insb
adc
mov
test
lods
add
test
mov
ja
ds
xor
ds
shlb
xchg
in
or
cmp
adc
jecxz
add
fs
outsb
decb
ss
mov
fildll
cs
mov
dec
sub
fdivrl
push
loopne
shrb
jbe
jnp
outsb
gs
not
cld
lcall
les
sbb
je
dec
and
les
pop
push
mov
scas
mov
jbe
sub
flds
out
cmpsl
add
lods
sti
pushf
and
or
xor
sbb
pop
xchg
ja
loope
xchg
sbb
inc
cmpsb
imul
push
pusha
into
or
cmp
jle
push
cmp
dec
ret
xchg
and
add
inc
mov
mov
mov
push
and
rcl
jo
gs
sbb
lea
mov
movb
cmpb
jb
inc
fmul
repz
adc
rcll
ret
inc
cmpb
dec
jne
in
or
dec
nop
and
inc
mov
cmp
or
mov
add
in
movsl
jecxz
addr16
out
mov
sub
icebp
mov
adc
mov
das
or
jb
xchg
iret
xchg
fstl
mov
sbb
or
pop
inc
cmp
inc
enter
out
jae
xchg
jp
xor
lea
mov
lret
jmp
dec
pop
mov
xor
aam
rcrb
xorl
jmp
jle
cmp
or
pop
bound
ds
pop
dec
push
xchg
jae
lahf
pop
or
std
jle
push
out
pop
test
insb
pop
sti
leave
loop
xor
outsb
mov
insl
cmp
mov
lahf
push
or
adc
bound
dec
fmul
xchg
lods
in
xor
lret
xchg
sbbl
mov
push
pop
ss
bound
stc
fimull
mov
mov
cmc
add
hlt
jno
add
cld
fs
aas
sbb
nop
fwait
add
or
jo
cmp
repnz
and
xchg
ja
nop
push
loopne
adc
cmp
and
les
and
cmc
movsl
psubd
pop
fcmovnb
xchg
add
iret
sub
test
pop
mov
mov
inc
imul
jmp
mov
mov
add
out
jp
add
in
cmp
xor
jo
pop
add
lods
mov
dec
adc
outsl
hlt
les
pop
test
jo
and
inc
adc
lock
fwait
jle
push
mov
pop
sub
jne
jns
enter
xor
orb
xchg
xor
int3
lret
imul
fs
cwtl
sbb
cltd
jbe
repnz
ss
movsl
inc
lret
das
push
repnz
mov
adc
mov
movsl
mov
lahf
lret
xor
push
push
mov
xchg
sub
xor
loopne
pop
movsb
loopne
push
shl
fs
sub
data16
es
pop
subb
outsl
xchg
out
jmp
out
lcall
sarb
pop
ja
fcoms
stos
jne
mov
test
in
dec
jae
xchg
cmpsl
xchg
xor
add
mov
andl
inc
lea
lock
mov
sub
aaa
fdivp
jge
sbbl
fwait
pop
adc
cmp
pop
or
or
push
mov
rcl
mov
hlt
mov
dec
xor
rorb
or
subb
andl
sub
ret
mov
aaa
popf
push
movsb
xchg
xor
push
add
mov
pop
sbb
push
add
pop
mov
jecxz
or
push
mov
or
sbb
jns
imul
lock
xor
das
adc
cld
mov
pop
sbb
dec
jp
lds
popa
arpl
push
lret
or
lock
fs
addr16
mov
mov
xor
mov
mov
les
negb
dec
or
test
inc
inc
inc
shll
cli
mov
sub
jl
in
es
leave
lret
add
jns
stc
push
jnp
and
bound
fs
mov
inc
jge
addr16
inc
shrd
in
addl
sub
jecxz
div
cmp
adc
or
in
pop
and
cmc
loope
inc
sub
pop
xor
arpl
jmp
cmp
sbb
movsl
cmp
adc
lock
dec
lahf
fwait
pop
in
xchg
cmpsl
in
sti
jno
jge
in
xor
adc
push
or
push
fldenv
mov
daa
or
iret
cmp
imul
paddsb
jae
xor
ja
mov
mov
shr
mov
add
adc
mov
sbb
mov
push
divb
lea
lcall
leave
jae
adc
loopne
addr16
das
insb
xlat
push
cwtl
stos
add
rcrb
sub
test
icebp
loop
fbld
add
dec
orl
mov
sub
fcmovnbe
mov
push
jl
mov
cld
lock
push
jle
cs
dec
push
aaa
xchg
sub
jns
movsb
ret
arpl
sbb
mov
test
dec
jns,pn
mov
inc
jae
je
jno
mov
xor
xor
ret
pop
sbb
sub
movsb
pushf
jmp
push
imul
lcall
enter
and
adc
fdivl
inc
mov
pop
cmp
add
or
pop
mov
fcoms
or
or
fnstsw
push
jecxz
les
rorb
mov
cld
mov
sbb
xchg
xor
fwait
mov
stos
out
ljmp
xchg
dec
dec
xlat
movsb
cmpl
ljmp
add
push
fcmovnu
insl
pop
lods
push
add
jo
cmp
out
pop
popa
out
call
sbbl
sub
pop
mov
push
in
aas
lret
inc
lods
mov
leave
xor
xor
in
neg
hlt
jnp
lret
ret
mov
iret
add
mov
mov
xchg
repnz
add
fsubl
xchg
mov
push
push
lahf
mov
jmp
sahf
js
aad
jns
xchg
adc
adc
ret
push
popf
inc
mov
fidivrl
cmpsl
xor
sub
jle
lahf
sbb
sub
std
call
pop
repnz
repnz
xor
mov
mov
mov
rorb
and
and
insl
test
sub
cmc
fdivl
sarl
call
loope
imul
cmp
addr16
inc
adc
jne
bound
sbb
xor
into
lea
popf
dec
es
push
popa
incl
and
test
lods
jbe
aas
fwait
mov
mov
inc
aaa
into
cltd
jo
mov
jmp
mov
ss
into
cmpsb
jns
and
jg
lret
mov
mov
lcall
loop
xchg
sbb
push
test
mov
add
outsl
pusha
outsb
lret
addl
out
xchg
leave
mov
dec
dec
jns
inc
inc
mov
out
cmpl
lds
fidivrl
hlt
pop
sbb
stos
xchg
test
stos
shl
orl
add
js
and
jno
int
inc
sbb
xchg
cmp
jle
or
repz
adc
sub
loop
shll
pop
divl
inc
mov
repnz
cld
add
js
mov
inc
mov
fstp
leave
bound
pop
js
fidivrl
cmp
xchg
push
jle
mov
insb
fimull
xor
mov
jnp
out
mov
and
jle
push
mov
arpl
or
gs
aad
inc
mov
pop
sbb
out
testb
adc
fwait
test
sbb
mov
mov
mov
mov
into
sub
test
popa
jbe
sub
pop
insb
lds
movsl
lods
push
mov
mov
pop
adc
shl
mov
push
cli
jbe
loop
into
ret
mov
hlt
mov
std
add
dec
arpl
jo
mov
clc
aad
loop
dec
mov
xchg
or
xchg
fnstenv
das
pop
fwait
ds
repnz
aaa
ret
insl
iret
sub
xor
mov
cwtl
es
and
inc
push
lods
cmpsl
cmp
push
cmp
dec
cmpsl
pop
pop
inc
mov
in
push
mov
mov
data16
mov
into
xchg
mov
rclb
outsb
push
loope
sbb
sbb
add
in
inc
xchg
loop
push
or
push
out
pslld
adc
cmp
stc
cltd
push
ljmp
lods
lret
and
cld
call
repnz
xchg
clc
jne
pop
lret
push
cmp
insl
fisubs
pop
jecxz
cli
notl
inc
mov
mov
push
scas
mov
add
fistpl
in
push
lgs
push
paddsw
test
xchg
fwait
outsl
repz
xchg
nop
jnp
call
cltd
pop
and
push
or
mov
push
cmpsb
sti
mov
adc
fmul
mov
and
sarb
pop
dec
mov
enter
scas
loop
sti
pop
push
fildll
pop
xor
adc
sbb
or
xchg
loop
test
and
and
mov
pop
add
push
rorl
mov
dec
dec
daa
enter
sbb
pusha
insb
lods
mov
push
sub
clc
mov
ljmp
cmpsb
dec
sub
xor
mov
jp
pop
cli
push
movsb
push
ds
sub
add
sbb
in
sahf
or
ror
xchg
adc
cmpsl
or
adc
sub
lods
mov
icebp
and
cmp
rcrl
repz
jp
jb
dec
pusha
push
out
pop
stc
in
dec
push
roll
mov
ss
sti
inc
add
mov
sbb
pop
jbe
jns
cmp
pop
jecxz
jmp
dec
dec
and
pop
sub
mov
mov
sbb
cmp
loop
loope
cmpsl
fisubl
jp
push
sub
stos
loope
pop
xor
stos
sbb
inc
lock
scas
pop
adc
sub
aaa
cmp
sbb
mov
cltd
sub
mov
popa
dec
xchg
cmc
dec
in
popa
aas
and
or
ror
call
inc
add
lea
or
outsl
inc
inc
xor
or
mov
add
fsubrs
mov
inc
cltd
lods
outsl
fnsave
mov
loop
cmp
mov
jns
pop
in
push
loopne
xor
cltd
push
cmp
imul
xorl
pop
pusha
pop
mov
push
adc
push
push
sbb
sub
pop
pusha
dec
push
movsb
imul
pop
push
or
push
mov
and
cltd
sub
adc
je
mov
pop
mov
xlat
rol
fs
push
dec
inc
mov
addr16
ja
sub
mov
jns
push
push
xchg
outsl
pop
push
aas
and
mov
scas
ja
mov
fisubs
pop
out
mov
popa
sarb
xor
mov
dec
adcl
push
lahf
cmp
push
add
stos
je
sbb
pop
add
adc
rcrb
pop
mov
and
in
movsb
cwtl
adc
fstpl
cmp
and
push
fbstp
dec
inc
sub
sbb
pop
push
out
cmp
cmp
push
cmpsb
add
cmp
dec
mov
push
jne
or
mov
stc
test
pop
push
cmp
mov
and
cmp
mov
xor
mov
cld
add
rcrl
mov
pop
notl
cmp
inc
lods
fldcw
cwtl
nop
movsl
cmp
dec
aaa
scas
in
fsubrl
rolb
sub
cwtl
clc
push
push
cwtl
scas
sti
hlt
and
pusha
sub
aam
loop
and
jnp
movsb
jp
push
das
cmp
pop
mov
xchg
mov
mov
xchg
pop
xor
hlt
jmp
push
push
decb
inc
popa
imul
xchg
data16
cmp
pop
inc
xchg
das
adc
mov
scas
or
push
xchg
pop
cld
popf
or
pop
shll
int3
loop
sub
jne
movsb
or
out
cwtl
loope
mov
sbb
and
lock
xchg
or
mov
mov
jne
xchg
enter
xchg
add
jge
fwait
cmpsb
jbe
xchg
movl
mov
cmp
je
jb
sbb
sbb
add
nop
push
cmp
fsts
mov
clc
inc
cmp
pop
in
movsl
dec
jecxz
pop
pop
sub
sbb
mov
push
out
lea
outsb
sbb
sbb
cmp
or
daa
or
fsubs
mov
rorb
pop
fs
lock
cmpsb
pop
push
ja
mov
push
aam
loop
sub
popa
adc
cmp
mov
leave
xor
mov
inc
lock
pop
data16
sbb
stos
sar
cmp
xchg
into
std
sbb
ret
jg
inc
enter
adcl
dec
fstl
in
inc
out
enter
jo
call
and
inc
fadds
popa
fwait
movl
xor
jge
xchg
sub
lods
arpl
lds
stos
lods
call
mov
dec
adc
in
rcr
lods
mov
pushf
or
aaa
insb
shll
leave
ja
repz
daa
mov
cmc
js
mov
pop
pop
pop
leave
mov
sbb
ror
cmp
dec
mov
addr16
add
repnz
xlat
lcall
loopne
push
or
push
or
mov
xchg
add
xchg
cwtl
add
call
repz
jl
push
dec
cmp
ret
test
fs
mov
lods
push
frstor
loope
adc
push
pusha
aas
and
sbb
out
adc
mov
stc
xlat
add
push
inc
pop
int
mov
enter
jne
mov
loope
xchg
popa
aad
cs
ljmp
ss
add
xchg
jmp
sbbb
enter
aaa
sbb
adc
aaa
sbb
cmpsb
or
mov
xchg
xchg
loopne
push
imul
lods
adc
dec
adc
pushf
jmp
xchg
push
hlt
loopne
dec
fcomp
jg
cwtl
shrl
out
lock
mov
mov
adcb
sub
mov
popa
mov
push
jp
push
popf
xor
mov
push
bound
inc
jae
js
popf
xor
mov
aaa
clc
cld
or
jns
mov
gs
pushf
jbe
fadds
xchg
jmp
mov
adc
xchg
add
enter
and
iret
popf
pop
adc
cmpsl
inc
xchg
push
or
imul
pop
pop
mov
dec
loop
rcll
mov
or
cmc
in
xlat
pop
jl
pop
adc
xor
inc
dec
and
aad
mov
out
sub
cmc
xor
or
enter
fcompl
hlt
jp
sub
push
push
push
push
scas
xor
pop
adc
mov
inc
lcall
xor
mov
cmp
test
scas
mov
jae
sbbb
and
data16
xchg
push
xorl
pop
sbb
cmp
arpl
sti
push
and
push
inc
aaa
pop
pop
fs
dec
jmp
cmp
dec
aas
aam
push
setp
rol
je
scas
inc
and
rol
pop
adcl
pop
dec
scas
pop
insb
xor
and
fucomip
sbb
mov
stos
movsl
out
pop
inc
dec
std
or
cmpsl
mov
push
sarl
mov
ror
dec
imul
mov
aaa
sar
adcl
outsl
jns
shl
je
cs
cs
push
push
add
jmp
shll
adcb
adcl
jmp
xchg
in
bound
jns
imul
jne
xchg
enter
loope
rclb
fs
enter
outsb
inc
fadd
mov
orl
lret
jno
clc
insl
cmp
mov
dec
jno
inc
fcmovb
arpl
inc
clc
adc
ljmp
mov
xchg
xchg
sub
or
aaa
lret
out
mov
aad
jl
xchg
push
fdivl
inc
sbb
add
cs
mov
jmp
ja
cmp
scas
push
mov
push
test
mov
cli
cmp
negb
aad
add
or
cltd
cmp
dec
xchg
cmp
or
xchg
add
jne,pt
ja
out
dec
inc
adcl
adc
clc
xchg
or
adc
outsl
jmp
sarb
pop
jmp
push
jecxz
jb
cmp
insl
sub
cmp
or
xchg
and
push
loope
or
inc
adc
idivb
sub
jle
pop
pop
out
jno
fsubrs
xor
adc
pop
ss
jl
push
dec
repz
cmpsb
mov
jae,pn
jl
es
add
fistl
add
mov
xor
push
sub
lcall
mov
mov
mov
out
shlb
or
xchg
fistps
mov
decl
inc
scas
xchg
insb
in
xchg
out
or
push
xchg
cmp
or
cli
mov
out
sbb
test
icebp
cmp
fdivl
pusha
jg
sub
adc
cmp
das
and
sbb
pop
enter
aam
pop
xchg
icebp
cwtl
mov
xchg
orb
mov
hlt
rcll
add
leave
jne
push
sahf
dec
loope
mov
mov
and
mov
test
push
popf
or
insl
adc
dec
sbb
aam
pushl
ret
mov
rcr
jb
dec
jo
push
add
out
cmp
lds
pop
mov
or
jecxz
lds
or
gs
cmp
mov
mov
mov
test
xchg
int3
inc
push
sbb
cmpsb
adc
pop
jecxz
dec
mov
push
push
roll
fwait
pop
scas
shll
jl
fst
cli
push
add
push
add
ficoms
dec
mov
fwait
jecxz
xchg
or
or
xchg
cmpsb
mov
rclb
dec
push
icebp
mov
cli
mov
inc
cmc
add
lret
sub
lret
adc
mov
shll
lock
mov
dec
mov
nop
add
jge
rcr
jp
mov
dec
mov
test
mov
les
cs
sahf
add
jcxz
cmp
cmpsl
cmp
jg
pop
in
pop
jecxz
adc
inc
aam
pop
mov
std
sbb
xlat
notb
xlat
out
mov
cmp
ss
dec
mov
cmpsb
mov
mov
pop
divb
and
shlb
in
shlb
add
mov
push
xlat
repz
jo,pn
and
push
xchg
dec
xchg
int
aaa
int3
cli
pop
decl
das
add
daa
and
jo
mov
repz
es
int3
stc
shrb
lea
add
clc
stos
and
cmp
sti
fdivr
mull
and
push
cli
mov
jno
add
or
push
xchg
jbe
sti
jge
popf
data16
adc
dec
ret
adc
shrl
mov
div
mov
popf
pop
sbb
fcomps
xchg
xchg
ljmp
mov
jno
in
lahf
mov
pop
fistpl
clts
add
data16
mov
test
add
loop
add
das
roll
stc
jo
add
mov
sub
data16
mov
aam
rclb
in
clc
pop
sbb
lret
mov
pcmpgtb
cmp
aaa
jne
sahf
and
xorl
mull
sbb
imul
jmp
inc
scas
cwtl
add
mov
xchg
mov
ret
cltd
mov
sub
out
clc
dec
sbb
out
sarl
cltd
test
call
xchg
addr16
test
cmpl
add
cld
aam
mov
cmpsb
das
dec
xor
or
sahf
add
fnstenv
aas
popa
or
movsb
jne
cmpsl
dec
push
adc
and
cmpsl
xchg
mov
mov
out
pusha
mov
adc
lcall
mov
add
mov
add
xor
jg
pop
mov
hlt
cltd
and
jp
ljmp
incb
rorl
aam
jl
hlt
sub
bound
in
mov
push
arpl
push
imul
rcll
test
imul
lret
sub
sub
xchg
lret
jns
test
test
xor
xorl
mov
sub
data16
das
jnp
jp
movsb
fdivrl
popa
dec
mov
lods
sub
js
and
int3
xlat
fidivrs
cmpsl
loopne
push
outsb
stos
pushl
mov
add
shll
cwtl
inc
or
bound
mov
and
mov
testb
pop
insb
jl
xchg
sbb
repz
arpl
icebp
pop
into
popa
imul
xchg
ss
jecxz
lds
xor
int
imul
andl
ljmp
pop
stos
out
or
roll
cli
cmc
jnp
cmpsl
sbb
mov
dec
pop
lcall
and
add
push
push
stc
pop
dec
mov
push
lret
lahf
adc
stc
loop
mov
mov
adcl
sbb
jmp
jge
hlt
sti
lods
and
nop
jg
push
test
push
add
je
cmp
nop
jb
loopne
ret
mov
xor
mov
loope
roll
mov
inc
cmp
mov
aas
inc
lret
test
add
aas
lea
mov
mov
jbe
mov
imul
scas
adc
mov
jecxz
inc
pop
in
inc
push
jb
fstpt
and
mov
and
jne
adc
push
cltd
stos
cmc
dec
jmp
mov
out
xlat
popa
jle
lods
add
notl
jnp
cmc
ret
xor
fstl
int
lods
inc
dec
out
out
cmp
mov
push
mov
or
or
sahf
pop
xchg
ja
cmp
aaa
lea
jns
divl
mov
mov
xlat
xor
ljmp
inc
in
pop
add
iret
sub
mov
pusha
aam
loopne
popf
sbb
cld
pop
jno
inc
xlat
and
jecxz
lods
incl
lods
out
sbb
mov
cmp
cmp
pop
imul
in
cmpsl
outsb
scas
pop
cmp
sti
cmpsl
and
les
imul
jb
fistpl
pop
pop
out
xchg
cs
cmp
movsb
push
jo
mov
mov
test
sub
jle
out
or
xor
lods
icebp
push
adc
cwtl
ret
jae
dec
je
js
dec
clc
pop
jg
jb
mov
pop
aas
dec
ljmp
add
cltd
ljmp
fistpll
aas
pop
jne
test
pop
mov
pop
inc
test
mov
int
fwait
insl
mov
sahf
pop
ljmp
loopne
add
push
dec
jbe
mov
mov
sahf
insb
divl
mov
add
jle
mov
addl
xchg
ja
xor
mov
fdivl
movsb
aad
jo
lds
dec
inc
inc
andl
dec
adc
adc
sub
iret
in
xchg
in
adc
imul
jne
push
gs
je
sar
pop
sbb
mov
mov
fisubrl
inc
push
mov
sbb
and
xchg
mov
test
push
dec
fwait
pop
flds
stc
jle
dec
popf
adc
xchg
cli
adc
pop
popa
ror
sbb
mov
sbb
insl
or
call
out
xor
pop
out
int3
pop
pmaxsw
mov
pop
pop
adc
into
or
inc
dec
sbb
jae
out
and
push
add
push
or
icebp
xlat
jg
mov
or
rcll
fwait
je
insb
test
orl
lds
testb
pusha
cmp
pop
pop
movsb
popf
jbe
jb
and
mov
jp
mov
lahf
fisubs
sub
cmp
mov
shll
add
mov
dec
mov
fimuls
pop
push
sbb
mov
ljmp
adc
add
jecxz
aad
fcmovu
mov
pop
cmpl
sbb
push
jmp
mov
fidivs
test
rol
getsec
mov
mov
cwtl
bsr
outsb
pop
or
xor
in
pop
jne
push
sbbl
leave
dec
cmpsl
int
jns
rcrl
inc
cvtps2pd
and
gs
frstor
sbb
test
cmp
stos
fsubl
iret
jbe
fmull
test
pop
pushf
int3
sub
daa
add
mov
stos
mov
adc
aas
xchg
xor
mov
xor
inc
mov
ret
sti
jb
pop
adc
sbb
dec
add
jne
inc
ucomiss
and
int3
and
ss
aad
pop
jp
fs
stos
and
daa
jo
xchg
scas
stos
fimuls
or
adcb
arpl
cmp
sbb
aas
clc
test
jmp
adc
mov
repnz
shl
jne
mov
test
jle
loopne
xchg
mov
xor
enter
or
mov
xchg
pop
lea
add
cmpsl
push
andb
icebp
add
or
adc
or
or
xor
imulb
mov
lret
outsl
mov
sbb
cld
jge
fdivrl
cltd
mov
insl
js
dec
mov
mov
sub
jo
scas
cli
andl
sub
fwait
pop
sbb
jle
ss
sub
cmp
arpl
lret
sbb
mov
or
push
iret
ret
pop
sbb
and
fnsave
and
push
into
cmp
dec
adc
mov
popf
movsl
loopne
cmc
ffree
adc
mov
outsl
pop
xor
mov
sbb
in
dec
addr16
pop
hlt
pop
push
pop
jae
je
arpl
xor
das
sbb
ljmp
test
adc
push
cmp
data16
dec
xchg
mov
xor
jno
inc
leave
mov
mov
fsubs
mov
idiv
stos
fwait
shll
dec
fbstp
shlb
in
dec
je
sub
jp
rcl
xor
xor
xchg
adc
mov
jae
inc
loop
mov
popa
inc
fisubrl
and
push
ret
loopne
push
mov
out
adc
es
pop
jns
insl
mov
fwait
test
push
mov
jo
xor
push
inc
cmp
test
xchg
xchg
arpl
push
add
daa
lret
jb
dec
pop
iret
and
clc
cs
inc
and
adc
in
ljmp
loop
push
push
pop
sub
push
aam
mov
scas
out
shl
and
insl
mov
xchg
push
pop
scas
or
push
jo
xchg
test
jno
movsb
mov
cmpl
pop
mov
jge
lcall
mov
sub
add
or
cmp
and
dec
pushf
jb
pop
push
pusha
fildll
jg
push
mov
mov
arpl
shrl
nop
mov
dec
fstpl
xchg
pop
dec
test
dec
cld
sbb
and
int3
pop
gs
out
addr16
lahf
test
xor
testb
jae
cltd
decl
mov
pop
adc
push
aam
aad
jmp
inc
sbb
out
outsb
fldt
mov
hlt
cmp
xchg
sarb
sub
shl
dec
pushf
fstl
xchg
enter
into
roll
mov
and
pop
mov
movsl
adc
push
sahf
and
cmp
addr16
push
fistpll
xchg
jne
fisubrl
scas
outsb
xchg
xchg
or
cmp
stos
jl
cmp
mov
push
scas
jge
loope
fnsave
insb
imul
addr16
and
dec
arpl
and
fwait
out
dec
shl
and
out
outsb
mov
add
out
jl
xchg
ss
pop
mov
loop
test
sbb
lods
xlat
mov
es
cld
stos
sbb
or
aam
jg
push
and
xchg
adcb
in
xchg
sbb
in
pop
jae
icebp
inc
scas
push
andb
mov
adc
js
inc
jbe
jge
jnp
cmp
sbb
shl
dec
shl
outsb
xor
mov
mov
mov
jle
xchg
jo
cmp
pop
and
push
xchg
mov
jbe
xchg
scas
fwait
push
test
stos
and
sbb
int
popf
pop
loope
jae
cmp
xchg
movsl
in
xor
movsl
mov
jbe
lcall
sarb
imul
and
or
xor
xchg
pop
sbb
pop
dec
lds
in
mov
stc
mov
sub
pop
or
mov
lahf
loope
pushf
pop
dec
ljmp
test
int
jne
mov
sub
fadds
das
insw
inc
mov
jle
mov
rcl
cmp
cmpsb
sub
sub
fadds
out
add
lret
dec
or
ss
and
inc
mov
es
popl
daa
subb
adc
inc
shl
in
inc
cld
pop
in
fs
jae
jg
or
sbb
push
lock
inc
push
mov
cltd
xor
pop
in
cmp
pushf
inc
fiaddl
mov
mov
dec
adc
addr16
adc
cmp
or
sbb
xchg
jbe
add
out
jnp
jge
pop
fcompp
or
dec
movsl
ds
push
orl
es
addl
lret
fadds
lock
push
dec
mov
sub
and
mov
fiaddl
arpl
pop
xor
sahf
inc
mov
push
fucomp
into
fnstenv
push
adc
or
mov
jnp
lea
iret
ljmp
adc
sbb
je
incb
lahf
lret
jo
push
out
dec
and
push
lret
mov
cwtl
loope
outsl
push
lret
scas
nop
inc
pushf
push
sub
xchg
sub
jo
sbb
lret
fdivs
nop
mov
add
inc
and
adc
jae
cmovno
out
push
mov
jae
icebp
std
sub
lods
imul
push
daa
pop
nop
dec
rcrb
or
cmp
xchg
mov
mov
cmc
repz
mov
xchg
cld
lret
xchg
stc
shlb
pop
jl
fcmovne
fwait
pop
xchg
cmp
jnp
dec
inc
pop
movsb
xchg
and
arpl
cmp
ret
and
ret
sub
loopne
ljmp
daa
jno
sti
icebp
out
aaa
out
cli
dec
enter
bound
mov
or
imul
les
adc
xchg
xchg
cmp
push
pushf
pop
xchg
enter
popa
sub
inc
or
aam
dec
pop
adc
ret
cmp
iret
test
xchg
adc
imul
rcrb
pop
loope
mov
dec
mov
shll
xchg
push
sbb
mov
cli
test
push
mov
fcmovnbe
jbe
add
aad
dec
sub
and
dec
mov
add
sub
sahf
xchg
repz
mulb
je
out
mov
subl
shr
cmp
adc
out
jge
sbb
pop
jo
xchg
and
xchg
xchg
inc
jl
mov
outsb
mov
adc
and
out
xchg
sbb
xor
call
pop
mov
xor
add
aad
cmp
dec
insl
lcall
cmp
mov
ljmp
jae
add
and
pop
div
rol
mov
lds
mov
fcomps
cmp
sbb
sbb
loope
pop
sub
jge
adc
sbb
push
ds
jns
cltd
sarl
jecxz
add
lea
inc
xor
pop
cmpsb
in
sub
or
cmpsl
test
mov
iret
sbb
and
outsb
cmp
fcoml
mov
imul
jl
adc
into
aaa
push
std
outsl
cmp
test
lahf
mov
dec
add
sub
out
pop
movsb
sbb
sub
int3
adc
mov
test
out
cmp
rclb
lcall
out
roll
dec
lret
into
test
push
push
sahf
mov
cmpsb
xchg
aas
pop
icebp
pop
imul
mov
pop
test
pop
xchg
dec
sbb
fwait
popa
insb
pop
push
ss
aas
pusha
and
sub
mov
nop
mov
cs
inc
imul
fsubr
jbe
push
push
jge
test
mov
xor
sub
addb
cmp
in
pushf
cmp
sub
mov
mov
daa
adc
pop
inc
xor
xor
hlt
fistpl
or
in
aas
stos
in
sub
cli
cmpsb
outsl
dec
mov
lds
mov
and
inc
sbb
dec
jecxz
icebp
push
cld
pop
push
lcall
xchg
inc
lahf
and
adc
pop
rclb
xor
cmp
sbb
mov
movsl
daa
out
sbb
imul
xchg
orb
push
add
lret
push
call
sub
jmp
push
inc
mov
es
jno
dec
in
lret
dec
xor
bound
in
push
or
enter
lahf
sub
lods
lcall
shlb
xor
push
dec
call
nop
icebp
jmp
and
xor
xchg
mov
xor
add
shlb
stc
orl
adc
pop
sbb
in
push
adc
jnp
pop
jbe
shr
mov
cmp
push
jmp
aas
sbb
pop
lret
fiaddl
xor
scas
cmp
call
lods
push
addb
lahf
mov
mov
mov
fisubrs
andl
mov
xchg
and
mov
jecxz
movsl
lahf
add
pop
or
dec
loope
loopne
mov
lret
test
mov
outsl
inc
push
arpl
xchg
push
xchg
enter
cli
enter
es
out
popl
xor
push
dec
int3
cwtl
push
push
sbb
mov
fs
negb
out
push
and
add
jnp
xchg
xchg
sbb
in
ficoml
xor
lret
fs
aam
push
iret
jbe
pusha
movsl
xchg
jge
movsl
mov
push
fildll
pop
xchg
jbe
jne
adc
adcl
aam
adc
shrl
insl
leave
sbb
pushf
mov
mov
movb
mov
sbb
scas
mov
aam
push
push
cltd
std
xchg
push
test
hlt
pop
xchg
rcrl
pop
xchg
or
lods
cli
rcrb
xchg
xchg
sbb
rorl
add
cli
mov
ja
sti
adc
lret
out
cmp
sub
mov
pop
hlt
and
inc
insl
jno
or
pushf
and
mov
cs
sub
adc
fwait
jns
sbb
jbe
sahf
push
ret
cmp
mov
sbb
repnz
add
sbb
cmpsl
cs
cmp
hlt
xchg
sarb
and
out
sti
je
jne
fsubs
lods
sbb
fsubl
sbb
outsl
jne
sbb
adc
sub
lahf
hlt
add
mov
popf
pop
dec
pop
push
je
and
pushf
jbe
cmpsb
dec
hlt
mov
jmp
adc
out
push
jp
aas
in
fisttpl
test
sahf
notb
ds
sarb
mov
pusha
pop
cmp
roll
repnz
jmp
mov
stos
flds
nop
jne
push
arpl
and
pop
negb
pop
xchg
dec
mov
push
shl
sbbl
mov
adc
ret
cli
pop
add
mov
pop
ja
inc
scas
and
movsb
xchg
icebp
test
inc
push
lea
jns
push
je
pop
in
push
fs
xor
ficomps
data16
js
addr16
inc
mov
add
and
out
cmp
mov
in
ds
adc
add
dec
xchg
push
fbstp
fs
sbb
push
adc
rcll
ljmp
movsb
jno
pop
leave
inc
testl
inc
into
inc
ljmp
lret
xchg
mov
std
frstor
add
or
xchg
out
lods
mov
and
ja
pop
pusha
test
cmp
repz
addl
or
les
insl
mov
pushf
popf
jmp
jecxz
xor
add
mov
inc
lret
push
inc
shl
push
push
mov
movsb
add
push
shll
insl
fsts
push
xorb
xchg
es
icebp
test
mov
rcl
mov
aaa
inc
sub
cmpsb
ret
pop
inc
aas
lods
sarl
or
js
jecxz
arpl
cmp
imul
lahf
or
test
or
inc
sti
cmp
mov
jns
test
shll
pop
inc
pushf
sbb
aaa
sub
out
imul
out
jae
hlt
jnp
scas
cmpsl
mov
mov
mov
mov
out
jns
lods
imul
je
movsl
lods
or
notl
repnz
jbe
mov
add
addb
insb
jnp
sbb
dec
xchg
xchg
adc
sub
xchg
mov
mov
and
pop
dec
push
pop
xchg
mov
sbb
jmp
loopne
out
aas
enter
push
test
stos
dec
jecxz
dec
xorb
neg
out
in
sbb
jmp
mov
and
cmc
push
gs
add
xor
lds
daa
mov
xchg
push
outsb
xchg
adc
or
aad
dec
push
std
in
insl
dec
cmpsl
push
js
cld
scas
jbe
adc
cmp
dec
pop
dec
popa
repz
or
xlat
scas
iret
jbe
rolb
stos
push
leave
mov
mov
lahf
int
das
xchg
test
rcrb
ficoms
dec
dec
mov
push
sbb
mov
pop
pushf
inc
jecxz
sarb
sbb
notb
stos
dec
das
adc
and
and
aad
jns
push
test
fadds
dec
ret
pop
fnstenv
stos
scas
dec
and
pop
jae
lods
fisubrs
je
scas
mov
adc
movsl
cs
bound
mov
stos
mov
sbb
sub
pop
ss
mov
mov
scas
jg
pop
mov
push
lahf
lods
ficoms
lret
mov
xchg
and
lret
pop
imul
push
add
pop
in
jnp
insl
pop
jbe
test
mov
lods
mov
mov
jno
sbb
sub
lret
mov
outsl
sbb
pop
xchg
test
pushf
popa
lret
cli
xor
add
and
inc
scas
inc
mov
mov
sbb
cmc
sbb
insl
cmp
mov
aad
mov
js
testb
sub
sub
mov
push
adc
mov
subb
jae
sbb
inc
or
lahf
fcomps
pop
pop
jecxz
sbb
shll
mov
insl
dec
mov
add
xchg
xchg
icebp
pushl
popf
or
test
xor
jns
adc
loop
jle
scas
in
shrb
xor
sbb
pop
sbb
dec
aad
inc
int3
push
mov
xor
xor
in
aad
add
xor
mov
into
mov
notl
pop
or
pop
sbb
int3
je
sbb
pop
xchg
xor
dec
push
xchg
add
xchg
jnp
iret
pop
mov
in
cli
inc
xor
mov
push
sub
dec
shll
incl
movsl
xchg
and
je
mov
in
out
inc
jge
ret
sbb
jb
mov
mov
cmp
je
daa
mov
gs
lods
mov
sbb
adc
cmp
andl
std
sarl
add
shlb
fs
dec
dec
xor
push
or
int3
ret
mov
inc
ret
mov
cli
clc
sbb
mov
jl
insl
lahf
andb
leave
adc
jae
stos
pop
xchg
cmp
push
bound
arpl
movsl
sub
sub
shlb
test
sub
cmp
jbe
andl
stos
inc
push
testb
cmp
add
adc
out
outsl
adc
out
movsb
mov
hlt
stos
xchg
notb
mov
aaa
aaa
pop
arpl
mov
pop
push
push
into
add
in
fistpll
mov
dec
mov
jne
iret
xchg
add
jb
es
insl
gs
or
xor
adc
pop
mov
aas
mov
cmp
push
cmpsl
int
fsubrs
fiadds
das
xor
into
in
sbb
rcl
jns
or
outsl
imul
bound
sub
pop
dec
ret
movsb
and
sub
jne
fiadds
mov
xchg
dec
in
ss
add
pop
aam
xor
fstpt
pop
dec
aam
mov
loope
cwtl
lods
pop
shll
jb
pop
test
push
lret
js
popf
sub
lods
lea
repz
jns
scas
xor
nop
fcmovbe
jg
imul
mov
add
xchg
inc
addr16
pushf
mov
out
mov
xorl
call
dec
repz
lret
inc
call
fcom
pop
cld
mov
pop
xorb
adc
pusha
mov
add
xchg
jns
pop
mov
sbb
dec
inc
cmpsl
repnz
flds
lea
or
xor
xor
add
pop
xchg
mul
out
xchg
sub
repnz
test
sbb
dec
push
mov
clc
stc
pop
and
inc
fisttps
inc
push
insb
aas
or
sti
leave
int3
and
sub
adcl
mov
fadds
dec
fcmovb
xchg
mov
or
jmp
cmc
test
cmp
xchg
inc
jmp
movsl
push
mov
cmp
pop
cmp
in
adc
add
loop
int
sbbb
push
test
ds
cmp
inc
fstl
sub
push
fwait
mov
jmp
jl
mov
mov
pop
lock
add
inc
into
rcll
xor
jnp
imul
das
xchg
sbb
sbb
cmp
insb
inc
test
popa
les
xchg
add
xor
push
outsl
mov
popf
sub
mov
int
inc
mov
imul
jns
push
jbe
cmp
cmpsl
and
outsl
adc
mov
insb
mov
ljmp
outsb
bnd
adc
jg
imul
cli
mov
sub
pusha
lods
into
leave
rsqrtps
xlat
pop
lcall
nop
jne
xor
pop
icebp
push
xlat
mov
cltd
sti
or
inc
mov
les
push
iret
loopne
leave
faddp
pop
and
cmp
inc
sbb
jns
cmpsb
cmpsb
js
cs
call
dec
fldcw
loope
movsb
rcl
jmp
fsubl
and
or
aaa
mov
mov
out
mov
mov
stos
mov
mov
sti
insb
or
xor
mov
add
and
mov
int3
call
arpl
scas
insb
repnz
jno
stc
loopne
cmp
mov
gs
mov
enter
jge
daa
aam
xor
outsl
sub
aad
fwait
int
cwtl
imul
xor
push
cwtl
lcall
repnz
mov
adc
popf
jecxz
push
xor
loope
repnz
mov
loopne
push
add
mov
jle
scas
aaa
sarb
jmp
shlb
sbb
jg
scas
lds
data16
lods
das
and
push
adc
jle
repnz
inc
xlat
test
ret
and
fld
pop
cmp
xchg
cmp
jg
lods
sbb
push
clc
aaa
outsb
lret
rol
cs
es
add
mov
dec
movsb
jl
sbbl
and
xor
popa
lret
or
ss
int
sarl
int3
inc
adc
inc
lods
enter
mov
xor
das
gs
fcompl
xchg
bound
mov
lock
fdiv
imul
cwtl
fimull
pop
outsl
pop
out
or
mov
xor
jmp
mov
testb
daa
adc
fwait
adcl
out
lods
add
stos
pop
std
sbb
and
pusha
adc
jae
sbb
or
inc
in
xchg
mov
mov
es
ficoml
dec
pop
push
out
push
cmp
mov
and
sarl
out
std
push
fdivr
xor
es
jne
adc
clc
push
mov
lods
and
xchg
jns
incl
xchg
scas
nop
xor
in
scas
cmp
pusha
mov
popa
sub
imul
adc
mov
adc
jp
scas
push
cmp
cs
lods
adc
int
adc
sub
add
cmp
add
popf
pop
dec
js
gs
es
pop
addb
or
mov
in
test
or
rolb
test
iret
xchg
dec
loopne
cltd
xor
or
mov
or
aas
sub
xorl
popf
adc
insb
mov
pop
push
rcr
xlat
filds
lret
out
xchg
loopne
lret
dec
outsb
xchg
arpl
ja
jecxz
pop
daa
xchg
leave
fs
lea
imul
or
pop
push
out
call
fmuls
shll
rolb
insl
xchg
sbb
dec
mov
fistpll
xor
outsb
dec
hlt
mov
addr16
jbe
lea
loopne
shrl
and
pop
adc
mov
mov
in
pop
push
and
in
repz
hlt
popf
inc
adc
out
mov
call
xchg
adc
out
movsl
fs
testb
test
cmp
push
jle
in
push
in
xor
mov
sub
mov
cmp
loop
in
or
adc
bound
ljmp
inc
push
xchg
sbb
call
mov
cmpb
jle
aad
popf
jge
test
push
sbb
orl
and
in
pop
daa
loop
add
pop
dec
or
lahf
je
cmpsb
pushf
pop
pop
push
push
js
cmp
ss
shlb
es
hlt
mov
scas
filds
jp
sub
es
inc
pop
pop
loop
mov
cwtl
sub
push
int
sti
inc
push
push
xchg
and
xlat
cmpsl
push
cmpsl
mov
pop
xor
mov
sbb
sbb
pushf
inc
or
cwtl
mov
mov
insb
xchg
and
ljmp
pop
aam
add
decb
sub
pushf
xchg
jge
popa
vmwrite
repz
pop
xor
pop
lret
test
jbe
push
adc
pushf
sub
mov
pushf
lock
add
sbb
sahf
sbb
popa
inc
int
int
or
filds
pop
pop
cwtl
inc
cmp
in
push
xchg
inc
mov
mov
pop
fdivs
and
dec
and
xchg
fadd
cmp
scas
mov
or
mov
mov
outsl
pop
ds
pop
mov
fisttps
adc
jg
lret
lock
inc
aas
sbbb
nop
jb
mov
mov
cmp
lret
and
incb
xor
incb
gs
or
inc
push
lahf
loope
dec
or
aaa
sti
pop
mov
mov
xor
incl
in
addr16
and
pop
push
dec
xor
push
aaa
inc
inc
cmp
dec
cmc
mov
pop
fists
and
and
pop
in
inc
and
jp
cld
mov
movsl
orb
add
fisubs
inc
add
sar
loopne
loope
xchg
shrl
pop
ss
xchg
and
out
addr16
sbb
insl
pop
mov
jmp
rorb
jb
insl
jnp
jecxz
rolb
xchg
flds
xchg
mov
and
dec
dec
xchg
mov
test
std
ds
sbb
jmp
sahf
add
inc
je
subl
lock
lods
hlt
fdivrs
add
pop
daa
fcmovu
mov
and
movsb
arpl
xchg
xor
cmp
push
push
cld
mov
pushf
std
push
add
sub
push
add
push
sub
ds
mov
fstpt
push
pop
jl
sub
xor
lods
cli
mov
mov
pop
dec
mov
cld
sti
push
add
test
test
sbb
xchg
repz
fsubl
jmp
adc
inc
outsb
dec
jo
scas
ja
cmp
out
xchg
fiaddl
jp
push
adc
pop
inc
imul
push
lret
and
mov
push
xor
jne
lahf
clc
sbb
lea
std
out
outsb
inc
mov
xchg
jge
sbb
test
xchg
sbb
jecxz
add
cmp
lods
adc
dec
mov
jbe
mov
lret
out
leave
pop
add
xor
pop
aad
push
aam
adc
loopne
pusha
addr16
pushf
nop
adc
outsl
mov
sub
enter
ds
lea
mov
sub
sbb
shll
out
repz
dec
or
adcl
mov
push
adc
les
jno
fisttps
sti
sub
xor
cmp
lock
pop
jg
psraw
pop
or
dec
int
mov
pusha
push
or
rclb
xor
sub
push
and
xor
cmp
fcoml
ds
jp
les
movsl
movsl
aad
scas
test
iret
cwtl
je
bound
cmpsb
test
xor
mov
shll
test
jmp
mov
mov
sub
inc
test
xor
xor
mov
popf
fistpll
jmp
cmp
lcall
stc
mov
or
push
data16
mov
sbb
in
jbe
dec
and
push
orb
das
insb
pop
sub
pusha
decl
shr
or
jp
mov
mov
fnstsw
sahf
and
or
jns
xor
add
mov
mov
and
stos
or
mov
sub
idivl
add
adc
mov
sbb
test
push
add
dec
mov
add
mov
push
xchg
jb
inc
ret
rcl
push
mov
push
mov
adc
adc
push
or
mov
adc
and
xchg
pop
mov
icebp
leave
movl
inc
loopne
lock
mov
pop
repz
jmp
testl
sub
fsubrl
mov
jmp
insl
push
test
shlb
jbe
fsubl
jg
into
push
inc
dec
xor
mov
adc
data16
jl
or
adc
xchg
outsb
xor
push
push
icebp
mov
xor
mov
sbb
into
psrld
adc
dec
push
loop
mov
dec
inc
daa
mov
fists
push
fnstenv
jge
mov
rolb
push
out
aas
cmp
fldt
incb
push
faddl
in
or
mov
adc
sbb
mov
mov
push
test
leave
jne
pusha
adc
test
jp
jnp
dec
push
ja
pop
nop
cmp
mov
shrb
add
ja
pop
cmc
mov
xor
mov
fldl
inc
sahf
rcrb
sbb
fmulp
ret
jbe
dec
dec
pop
sbbb
jle
lods
push
lahf
fcomps
push
jnp
je
jns
sub
xor
add
mov
sbb
adc
pop
pop
xchg
xchg
cltd
into
push
xor
inc
mov
incb
call
out
loopne
cmp
dec
mov
pop
xor
mov
rol
or
sbb
movsb
sbb
add
movsl
scas
cmpl
ds
add
daa
inc
in
bound
mov
adc
popa
mov
aas
jae
into
repnz
inc
imul
or
pop
mov
es
push
mov
adc
or
push
xor
jo
iretw
shl
imul
pop
movb
cmp
xchg
int
dec
mov
pushl
jae
cs
push
mov
ljmp
push
aam
jmp
adc
aas
jle
test
pop
push
cli
inc
and
test
cltd
call
push
push
fwait
or
scas
mov
xor
pop
dec
pop
sub
xchg
fnstcw
cmp
and
das
andb
mov
mov
and
enter
out
and
fisubl
push
push
js
mov
test
ret
insb
or
mov
cmpsb
dec
sub
mov
jl
in
data16
fnstsw
sbb
jne
or
arpl
repnz
mov
pop
inc
outsl
or
scas
sbb
xchg
mov
lret
fmuls
inc
ja
inc
fwait
jns
mov
fsts
or
push
or
mov
cmp
sahf
xor
repnz
pop
je
test
push
mov
cwtl
daa
mov
mov
xchg
mov
addr16
data16
iret
pop
mov
in
dec
add
cld
shll
adc
sub
outsl
push
mov
mov
xor
xor
pop
jno
pop
mov
jg
stc
into
movb
sarl
mov
dec
or
lock
insb
js
mov
scas
icebp
xchg
sbb
xchg
adc
mov
or
pop
mov
dec
out
fstpl
push
shrb
out
jne
and
xor
push
unpckhps
sbb
adc
jecxz
icebp
xor
jle
adc
push
pop
sti
das
jno
pushf
nop
mov
inc
dec
add
aaa
lods
inc
pop
loop
iret
or
jg,pt
movsl
ret
dec
rolb
pusha
cmp
mov
mov
xlat
sbb
out
push
in
outsb
mov
rcrb
int
aaa
sub
cmpsl
sub
mov
sbb
cld
lods
add
cmpsb
pop
in
ds
push
mov
mov
pop
push
xor
jg
sub
hlt
das
mov
jbe
xlat
repz
cltd
aad
jecxz
out
xor
mov
and
push
or
xor
shlb
jle
push
sub
xchg
out
lret
push
and
stos
mov
add
shll
pop
push
notl
aam
mov
jbe
les
ja
movsb
aas
in
cld
test
jmp
ljmp
push
dec
xchg
nop
rol
shll
push
mov
mov
jo
testl
insl
jge
cmc
xchg
mov
add
jp
andps
leave
jae
jge
jo
pop
mov
inc
dec
jne
adc
and
mov
adc
adc
loopne
jp
mov
stos
jle
out
stos
xchg
mov
data16
mov
cmp
or
add
pop
cli
int3
fildll
mov
mov
scas
lcall
push
or
enter
xchg
pusha
popa
jl
ret
in
arpl
adc
inc
mov
int3
fsubrp
jmp
aam
adc
stc
mov
movsb
lret
push
mov
jb
loop
jmp
cmp
jae
and
popa
std
mov
inc
inc
xor
lea
mov
inc
and
xor
outsl
cmp
imul
xor
cmpsb
imul
addr16
add
ror
pop
xlat
xor
mov
push
stos
lcall
sub
movsb
push
jge
insl
movb
or
sbb
mov
loope
jmp
mov
dec
pushf
adc
cmp
jo
and
fsubrs
pop
xchg
es
mov
aas
call
ja
icebp
inc
mov
repz
movsl
inc
mov
xor
jo
aam
mov
clc
fwait
lcall
xchg
lds
addr16
mov
je
dec
mov
push
into
or
addr16
push
sbb
fcoml
imulb
es
xor
je
or
aas
mov
imul
sub
gs
mov
push
xchg
inc
out
pop
adc
add
mov
add
jno
pop
dec
jmp
cmc
out
sbb
mov
loop
jmp
dec
out
cmpsb
adc
xchg
clc
jg
sbb
xchg
jae
lods
add
std
push
fsubrl
mov
inc
xchg
jns
jns
xchg
xchg
jmp
loop
into
das
ret
out
call
sub
dec
dec
push
in
das
jecxz
outsb
std
push
mov
lret
dec
pop
rclb
ret
add
mov
add
xor
lret
push
imul
lds
psubusb
push
fsubrs
testb
jg
adc
push
mov
pop
scas
inc
out
adc
dec
fadds
or
test
pop
push
out
cli
push
adc
cmpsl
lock
int3
movsb
lret
add
hlt
je
mov
mov
outsb
mov
jmp
mov
mov
mov
repnz
mov
shll
and
in
js
pop
fwait
and
lds
jl
dec
repnz
xor
push
add
pop
pusha
mov
loope
push
test
push
lahf
sbb
into
inc
sarl
es
pop
pop
ss
xlat
sti
sub
cmpsl
mov
sbb
clc
cmp
mov
xchg
movsl
sub
std
xor
js
mov
fs
out
testl
jne
pusha
iret
fstp
cli
lretw
push
jmp
add
loope
pop
call
pop
imul
pop
add
fs
mov
cmpsl
xchg
in
sbb
repnz
pop
inc
mov
lods
fstsw
jnp
iret
sbb
rcr
into
stc
add
push
pushf
sub
sub
ja
pop
decl
jmp
pop
xchg
sub
push
insb
xchg
cmp
in
subb
dec
fists
cmp
xchg
add
roll
mov
inc
stc
test
sub
cmp
les
lods
out
sub
movsb
addl
adc
jecxz
xchg
mov
mov
mov
les
fnstsw
cli
fwait
jae
and
cwtl
and
cwtl
outsl
lret
xchg
scas
fdivl
mov
xor
ret
nop
inc
mov
lods
repnz
sbb
mov
adc
mov
and
sti
bound
imul
xchg
or
mov
cwtl
inc
sub
and
inc
add
xchg
scas
ja
inc
and
mov
cmc
jmp
push
dec
insl
jmp
iret
jg
xchg
addb
rolb
sbb
inc
dec
or
inc
sbb
dec
cmpsl
xor
dec
mov
insl
rcrl
sub
dec
gs
jno
mov
inc
xchg
add
fbstp
mov
idivl
sub
fdiv
mov
jo
stos
lret
and
sub
xor
jns
jno
lock
inc
js
les
addr16
dec
ja
and
cld
add
xchg
movsl
push
adc
or
mov
mov
inc
subl
and
mov
xchg
and
adc
imul
daa
frstor
scas
xchg
cmp
call
mov
lds
or
stos
xor
repz
xor
jbe
popa
jae
mov
pop
mov
cmp
xor
dec
inc
pop
sub
adc
out
pusha
enter
rclb
xchg
xor
adc
sbb
movsl
js
repz
mov
insb
rol
push
int
verw
push
jbe
test
dec
xlat
daa
jo
and
adc
lret
mov
sarl
push
push
jge
jg
xor
add
ret
mov
jae
scas
adc
mov
xchg
movb
or
daa
arpl
jno
icebp
dec
int
mov
mov
bound
jg
insb
cmp
mov
scas
pop
and
sub
lock
sub
test
xchg
sub
insl
jge
nop
movsl
mov
adc
xchg
mov
fwait
pop
hlt
repnz
mov
adc
and
paddsb
fwait
xor
lods
movsb
pop
fmuls
pop
fimull
jbe
add
shlb
mov
push
pusha
mov
in
stos
cmpsb
adc
aam
pop
jns
lret
or
inc
shrb
add
dec
inc
cmp
test
adc
xchg
aas
inc
clc
lret
pop
aam
and
stos
inc
mov
int
xchg
dec
mov
ret
jae
adc
adcl
and
sahf
dec
test
imul
lcall
testb
fbstp
dec
cmp
leave
in
jg
and
xchg
inc
pop
sub
rcr
inc
test
pop
push
jge
cwtl
dec
sub
mov
sub
add
push
fs
popl
jbe
aam
mov
rorb
push
mov
imul
cmp
pushf
jnp
fmull
jno
std
repnz
dec
lret
jne
repnz
fwait
adc
loopne,pt
cmp
push
cmp
and
mov
and
add
iret
mov
call
cmp
ret
pop
idiv
push
xchg
orb
cltd
add
dec
les
test
push
and
pop
lods
xchg
iret
sbb
ret
test
add
add
ret
push
push
mov
inc
or
pushw
mov
adc
pop
lock
mov
cmp
ds
push
xor
not
add
dec
mov
push
shl
std
addr16
and
idivl
push
inc
and
dec
lret
sub
cmp
lret
ja
mov
sarb
data16
jns
cli
and
mov
roll
into
testb
mov
stos
shll
mov
mov
out
mov
sbb
fnstsw
mov
dec
dec
andb
stos
dec
and
lock
sub
cwtl
jns
enter
adc
inc
push
adc
sub
jo
and
mov
int
push
add
push
dec
inc
fcmovnb
mov
xchg
mov
and
inc
add
dec
repnz
ret
adc
sub
jl
mov
lret
repz
mov
cmp
and
fidivrl
fbstp
and
das
add
xchg
lea
lcall
sti
xor
lock
adc
or
and
dec
xchg
xor
mov
sub
aas
adc
in
insb
push
mov
test
sbb
insb
in
push
inc
adc
std
pop
mov
fwait
outsl
ss
sbb
xor
mov
push
bound
push
mov
subl
xor
enter
add
dec
push
rolb
or
inc
cmp
jb
xchg
adc
out
outsb
jnp
cmp
insl
jns
scas
movsl
inc
adc
jmp
repnz
ja
xchg
repnz
sti
or
clc
pop
ja
sti
xor
push
call
push
cmp
adc
hlt
push
dec
cmp
xchg
imul
jo
scas
jnp
cmpl
sahf
ja
rorl
shl
cltd
mov
aad
or
mov
lods
pop
imul
cmp
lds
push
adc
push
fstps
aas
pop
push
test
xchg
mov
push
lret
lock
and
hlt
jnp
repz
call
ret
loopne
xchg
es
out
and
loope
inc
ja
inc
mov
xchg
shl
inc
movsb
and
test
jns
jne
inc
fucompp
outsb
stc
dec
test
rcl
cmp
jbe
insb
cmp
mov
or
movsb
or
add
and
adc
mov
loop
mov
dec
pop
test
mov
pushf
inc
xchg
or
leave
mov
xchg
add
test
or
idivb
pop
cmpsb
or
cmp
sbb
sti
adc
mov
mov
or
cwtl
mov
push
sar
pop
mulb
pop
pop
ljmp
xchg
mov
aam
inc
mov
push
das
in
leave
fisubs
es
orb
dec
xor
push
jnp
inc
test
es
sahf
imul
jecxz
or
jnp
test
fldcw
addr16
or
pop
push
hlt
jmp
mov
adc
xor
dec
lret
test
jmp
and
adc
push
dec
mov
mov
enter
and
sub
in
adc
xor
sbb
dec
sub
stos
cmp
cmp
push
and
ret
xchg
mov
leave
jg
enter
adc
or
add
data16
jnp
xchg
sub
daa
add
push
or
sub
jp
rcl
js
fs
inc
jbe
mov
sub
or
lcall
rcl
push
xchg
sbb
cmp
addr16
jl
mov
call
loope,pt
jno
mov
sub
in
add
mov
es
mov
fstps
mov
outsl
pop
xchg
stos
popf
jmp
xchg
jno
mov
repnz
dec
dec
and
xchg
dec
mov
cmp
ss
cmp
sub
mov
jbe
dec
xchg
insb
insl
dec
lods
dec
rcll
int3
pop
jno
lcall
jbe
dec
sbb
mov
loope
and
popa
mov
jecxz
aas
cli
push
jns
pop
aas
inc
jecxz
nop
and
ret
mov
cmc
dec
mov
and
sub
ja
or
ret
jmp
jmp
xor
stos
sti
jb
mov
jl
popf
aas
addr16
imul
mov
lcall
mov
sbb
scas
dec
loopne
pop
movsb
bnd
test
and
cld
dec
test
cmp
sbb
push
sar
fmul
xchg
or
xor
sbb
xor
inc
int3
and
and
lea
mov
sub
pop
xchg
gs
mov
and
mov
push
dec
loop
jnp
push
stc
push
dec
dec
daa
sub
scas
jne
lcall
adc
and
sbb
repz
and
leave
dec
ds
insb
je
int3
es
push
lods
movsl
cmp
loopne
lods
fnstsw
sbb
push
insb
push
sub
cltd
out
sbb
and
inc
lahf
add
mov
int
cltd
push
lahf
or
dec
std
push
cmp
cmc
divl
and
add
inc
cmp
add
aad
or
and
and
xchg
daa
mov
movsl
repnz
inc
xor
push
loope
or
leave
mov
dec
mov
jae
push
sub
int
insb
scas
into
dec
fisttpl
inc
nop
cmpsb
mov
sbb
sbb
mov
or
sbb
movsl
insl
cwtl
xor
mov
add
bound
xor
pushf
mov
dec
int3
leave
or
add
mov
push
xor
pushf
cs
xor
xchg
xor
cltd
sbb
mov
push
add
sahf
sub
hlt
mov
xchg
adc
test
dec
mov
sbbl
outsl
ret
leave
cmp
pusha
jmp
xchg
sbb
mov
sti
movsl
dec
rorb
enter
or
je
add
xor
leave
lahf
dec
push
and
rcll
cmpsl
mov
int3
mov
call
popa
pusha
pop
repnz
and
jmp
int
xor
nop
mov
insb
inc
cltd
ret
ret
push
dec
jle
ds
std
fs
mov
jb
push
leave
adc
fdiv
enter
xor
sbb
xor
mov
in
aaa
mov
and
mov
push
jl
mov
jno
push
xor
mov
push
adc
jp
xor
in
or
push
xchg
dec
imul
and
loop
mov
dec
test
jg
jle,pt
add
adc
cmp
sbb
pop
add
shlb
lret
dec
mov
push
idivl
cmp
push
inc
pause
cmpsl
aam
in
dec
sbb
xchg
dec
mov
xor
sbb
shrb
rcr
pop
dec
dec
bound
inc
mov
xchg
mov
sti
sbb
jge
and
mov
mov
outsl
rol
push
jne
cmp
ds
loop
pop
ds
add
aaa
mov
dec
mov
aas
dec
cmp
pop
popf
orl
and
imul
cmpsl
push
xchg
out
stos
jmp
bound
jo,pt
push
inc
ss
shrl
or
adc
lods
xor
mov
lahf
adc
xchg
rclb
pop
pushf
mov
lock
loope
test
sub
dec
daa
icebp
stc
mov
je
aad
mov
je
scas
pop
cmp
sbb
cmpsl
inc
lds
ss
push
out
dec
fistpll
jmp
es
pop
jnp
arpl
pusha
inc
clc
push
cmp
xchg
mov
inc
pop
xchg
lds
xchg
pushf
jg
jl
xchg
push
test
dec
jae
and
mov
jnp
push
inc
pop
pop
aam
leave
xchg
jle
jmp
dec
repz
xchg
aaa
inc
arpl
into
aaa
jno
jl
jp
push
dec
pop
sub
inc
outsl
outsb
push
pop
stos
inc
push
and
aam
jb
addl
jno
or
aam
or
push
push
push
test
out
add
lea
sub
test
in
out
dec
cltd
jo
xchg
andb
pusha
aad
dec
xchg
movsl
pop
push
mov
adc
adc
xchg
sub
xchg
or
pop
cmc
cld
xchg
pop
leave
stc
push
mov
enter
fs
sbb
int
sbb
insl
dec
fwait
orl
lret
fadds
mov
call
cmp
imul
pop
cwtl
pop
mov
dec
fcmovnbe
or
jo
adcb
out
push
xchg
mov
sar
rorb
nop
or
out
test
insl
xorl
push
inc
jae
mov
push
jmp
ja
bnd
icebp
fiaddl
add
dec
mov
pop
xchg
sbb
mov
iret
jns
test
mov
sbb
add
mov
aam
xchg
idiv
mov
push
jne
add
inc
loope
pusha
lcall
mov
xchg
jne
ja
fwait
jmp
in
or
sbb
lds
fidivrs
dec
test
popf
dec
push
cld
test
sub
movsl
cmc
adc
out
jl
sahf
lods
inc
pop
ret
ja
sbb
or
push
test
pop
mov
mov
push
or
aad
iret
and
frstor
and
and
out
push
leave
sbb
ljmp
and
lcall
xchg
iret
setle
lea
jo
xchg
cmpsb
ss
cltd
dec
insb
shll
lahf
jg
jmp
dec
movsl
dec
test
xchg
push
inc
xchg
jmp
cmpsb
inc
mov
mov
jb
jp
pop
adc
cmp
test
loopne
mov
mov
call
cs
movsl
je
jecxz
xchg
cs
pop
mov
fiadds
or
xor
in
add
adc
and
pop
lea
outsl
adc
adc
mov
add
in
adc
push
add
mov
pop
hlt
js
ret
dec
add
cwtl
cmp
xor
fdiv
fs
or
xor
sbb
cmc
push
decl
and
mov
xor
hlt
cs
das
insb
pop
inc
adc
xor
fdivs
adc
imul
loopne
jno
mov
leave
jmp
test
out
mov
cmpsb
xor
sbb
jle
dec
mov
clc
cmp
jecxz
lds
and
rorb
dec
sub
cld
xchg
lods
fiaddl
dec
repnz
insb
sbb
sbb
outsb
movsb
movsb
test
dec
pop
push
xlat
cmc
incl
int
mov
lods
jge
pop
jmp
testl
sbb
in
mov
dec
sbbl
pop
adc
loop
inc
loope
mov
cltd
dec
mov
int3
adc
rorb
fisttpll
xchg
rorb
lods
pop
sub
fstps
scas
es
lods
clc
xor
sbb
insl
rcrb
fstl
mov
pushf
mov
jecxz
fdivs
adc
push
leave
cltd
hlt
es
dec
sbb
data16
xchg
mov
rcll
cmp
dec
sub
push
mov
and
sub
shrb
push
push
inc
xchg
fstps
dec
jno
outsb
sti
push
loop
adc
add
aaa
mov
and
cld
loope
icebp
test
ret
add
ret
sub
scas
sbb
mov
mov
enter
les
mov
sahf
in
jmp
dec
movsb
mov
mov
or
imul
mov
push
dec
nop
sti
aad
xchg
insl
mov
call
insl
push
jae
call
hlt
addr16
scas
sub
or
inc
xchg
sub
jmp
test
lods
push
rclb
push
jle
call
sbb
arpl
jecxz
mov
addl
mov
mov
insl
jnp
pushf
cli
lods
jb
jle
and
pop
shrl
imul
shl
imul
arpl
fisubl
shr
jmp
aaa
adc
inc
div
xor
icebp
mov
repz
sbb
or
sub
inc
shll
lahf
rcrl
call
lock
pop
xchg
movsl
jb
out
data16
adc
lret
ret
es
stos
out
dec
rorl
dec
sub
push
in
jecxz
adc
and
mov
pushf
repnz
mov
shll
adc
stc
je
aas
xchg
or
jg
jg
fsts
outsl
mov
push
push
mov
cmp
mov
dec
fnstenv
movsb
pop
jbe
xchg
lods
inc
and
adc
mov
shrl
xorl
movsl
cmpsb
mov
push
push
or
jp
adc
inc
sub
into
in
cmc
cmpsb
aad
sub
xor
lcall
lahf
pushf
pusha
dec
mov
cs
jecxz
pop
xchg
add
or
insb
jmp
adc
mov
cmp
mov
sti
hlt
cs
or
in
shlb
dec
add
std
mov
sbb
icebp
pop
dec
jno
mov
cmc
imul
and
inc
xor
sub
xorb
xchg
jmp
pop
repz
fisttpl
pop
inc
loope
inc
mov
pop
nop
pop
mov
leave
pop
xchg
rcrb
pushf
shll
sub
push
jle
shll
loope
pop
call
lods
mov
push
aas
repnz
addr16
lcall
mov
lret
outsb
adc
test
enter
inc
mov
pushf
sub
cmpsb
sub
das
aad
int
repz
in
add
fs
lods
pop
fs
jmp
add
shrb
leave
sub
xor
int3
cmp
xchg
mov
call
cmc
push
add
sti
pushf
sbb
gs
call
mov
xchg
sub
in
fwait
rcr
in
push
shrl
jle
ljmp
sahf
in
xor
sbb
or
imul
inc
imul
into
sub
hlt
mov
push
jmp
dec
jl
adc
mov
das
xchg
xchg
dec
dec
and
aam
cmp
pop
sti
orb
fists
lods
jl
add
push
push
test
shrl
aam
scas
das
cmp
popf
inc
cli
sarb
mov
xlat
pusha
out
shrl
test
mov
jecxz
pop
std
mov
mov
jl
xor
inc
xchg
outsl
call
lahf
add
cmpb
aas
jl
xor
faddp
ss
insl
xor
das
xchg
out
stos
lahf
add
arpl
or
inc
lea
lret
loopne
rorb
adc
jmp
push
pop
mov
filds
adc
add
outsb
push
data16
mov
pusha
cld
and
jl
push
ret
aad
repnz
fs
int3
xchg
or
pop
icebp
cmp
cmp
fsubr
and
shll
cwtl
cs
mov
outsb
mov
decl
sub
lret
mov
xchg
pop
lea
jl
add
lret
lock
insb
sub
lds
stos
jmp
je
push
pop
mov
orl
cmc
xchg
cmovo
xor
cmp
insb
mov
int3
jb
adc
pop
fnstcw
mov
rcrb
mov
int
inc
push
cld
xlat
mov
es
test
lea
pushf
out
test
popl
pop
aas
jmp
btr
dec
push
mov
mov
hlt
rcll
dec
fdivs
daa
sbb
aad
jae
and
sbb
gs
xchg
mov
aas
xchg
mov
pop
pop
add
pop
or
fsubrs
and
pop
pushf
jecxz
or
cmc
in
fs
jge
fistpll
pop
push
lahf
fldt
cmp
pushf
aaa
mov
fildll
jg
gs
xchg
leave
cmpsl
sti
mov
stc
enter
andl
stc
out
xor
xorb
mov
data16
mov
mov
cmp
jl
int3
in
or
push
popa
mov
je
mov
sub
jg
cmpb
fwait
imul
gs
mov
sub
in
cs
push
mov
aam
ja
insb
out
push
ja
cmpsl
iret
fidivs
and
out
sarb
jae
pop
lret
pop
aad
popa
mov
add
push
fprem
pop
add
push
fwait
mulb
cld
shlb
das
xchg
sub
mov
fisubrs
cmp
in
movsl
mov
popa
test
les
ds
stos
xchg
in
sub
jmp
pushf
push
dec
xchg
push
fsts
gs
push
rcll
bound
and
push
ljmp
add
add
push
jmp
cwtl
loop
mov
xor
push
fdivrp
aaa
daa
mov
xchg
jo
stos
add
std
mov
call
sbbb
arpl
cmpsb
pop
xor
aam
mov
cmpsl
mov
mov
lds
icebp
and
leave
sti
lds
js
push
push
insb
aaa
and
cmc
fdiv
mov
sti
inc
cmp
mov
inc
fidivrl
cltd
jg
sub
jae
mov
jl
push
les
xor
icebp
frstor
dec
test
pop
sbb
sub
or
xor
sub
cwtl
xor
sbb
mov
jge
jge
outsl
test
idivb
sbb
mov
je
test
lods
pop
jp
mov
or
push
mov
sbb
jmp
jecxz
hlt
sbb
popa
out
arpl
inc
out
or
gs
frstor
add
or
lea
dec
pop
jp
fstp
insb
mov
push
aaa
inc
cmp
mov
addr16
jle
int3
loopne
sarb
adc
adc
js
mov
imul
cmpb
div
cltd
call
dec
cmp
xchg
movsb
adc
jmp
hlt
inc
mov
jne
mov
inc
mov
lahf
mov
jl
repz
xchg
sub
mov
rcll
sbb
mov
cmp
push
stc
aas
test
fsubl
stc
jmp
aaa
popa
push
adc
sub
push
dec
in
iret
or
sbb
in
and
add
pusha
xchg
call
pop
xor
dec
push
cmp
push
push
mov
pop
adc
pop
mov
jmp
test
imul
mov
jno
inc
test
mov
inc
in
call
fwait
into
js
mov
repz
adc
lret
adc
cmp
fstl
popf
nop
mov
inc
cmc
inc
not
adc
pop
sub
aas
add
or
cmpb
pop
cmp
pop
and
push
out
sub
or
insl
inc
call
adc
fbstp
icebp
pop
adc
jp
jne
dec
xor
and
sbb
mov
test
mov
jp
add
add
test
or
fcoms
std
sub
clc
mov
xchg
aaa
les
cmc
cmp
lock
xchg
jp
jne
loop
push
add
jg
pop
das
fwait
loopne
lods
sbbb
adc
in
cmp
outsl
mov
mov
sti
mov
cmp
lret
mov
scas
out
cmp
in
fdivs
add
or
cmpsl
mov
jl
fwait
dec
cmpsl
out
insb
test
leave
push
dec
sub
adc
lahf
add
jb
loope
inc
mov
aas
adc
not
daa
shr
mov
cmp
repz
pop
or
or
in
dec
and
mov
mov
push
mov
adc
lods
mov
mov
jl
cmpsl
cmp
js
jge
cltd
call
loope
mov
jl
cmp
pop
loopne
sub
jae
test
scas
xchg
mov
and
jne
mov
mov
icebp
push
insb
in
daa
jne
mov
push
mov
int
mov
gs
mov
push
dec
push
mov
mov
xchg
mov
hlt
jae
test
pop
mov
jnp
mov
mov
mov
jg
inc
pop
das
repz
sti
mov
pop
fldt
dec
dec
mov
pop
nop
clc
aad
out
add
adc
and
test
inc
lods
out
scas
jbe
movsl
dec
inc
and
inc
js
or
outsb
or
xor
mov
pop
inc
loope
call
cmp
cmpsl
dec
insl
add
lea
mov
ds
sub
mov
sarl
mov
add
add
push
inc
pop
inc
iret
jns
inc
sub
or
out
and
ds
or
scas
push
or
xor
and
pop
cmc
nop
dec
add
cmp
leave
ss
sbb
mov
sub
mov
and
into
adc
jb
int
dec
das
aaa
push
push
ss
mov
adc
iret
lret
sub
add
xor
cmp
fsubrs
adc
iret
mov
push
cmp
repz
sbb
xchg
push
mov
dec
in
addr16
xor
enter
adc
cmc
mov
push
leave
cmp
popa
incl
sbb
xor
popfw
dec
pop
ret
fstl
pop
pop
clc
mov
fdivs
add
or
inc
das
lret
or
jmp
in
hlt
cmpsw
xor
sbb
das
xchg
dec
push
in
add
loop
dec
fldcw
int
or
icebp
cld
lds
jle
xor
push
or
pop
xlat
outsb
jmp
add
jbe
int
add
xchg
addr16
mov
jg
mov
and
sti
mov
xor
popa
cmp
inc
xchg
push
addr16
sub
xchg
and
and
xchg
add
add
or
add
bound
xor
in
subl
lret
int
mov
ds
mov
cli
imul
push
jb
lods
imul
cmp
dec
or
adc
push
mov
inc
xchg
pop
loope
mov
subl
bnd
ljmp
mov
test
xlat
push
mov
dec
cmp
jae
subl
xchg
movsb
movsb
in
adc
adc
sub
push
jmp
xchg
les
psadbw
lea
adc
sarb
mov
cmp
cmc
enter
mov
fnop
testl
fwait
icebp
xor
scas
jb
adcl
repnz
shlb
mov
add
into
xchg
negl
dec
adc
push
add
lahf
pop
inc
subl
cmp
test
shlb
pushf
jmp
clc
fbld
loope
push
jno
pop
pop
add
loope
icebp
adc
push
pop
xor
pop
jae
icebp
push
repnz
lret
xchg
xchg
fwait
clc
roll
es
sbb
add
pop
aam
aad
test
cmc
adc
cmp
dec
sarl
icebp
lea
scas
dec
jmp
cs
jl
push
xchg
mov
xchg
fs
xchg
and
ljmp
out
cmpl
test
push
cmpsb
fwait
mov
mov
aaa
mov
stos
in
sbb
push
jmp
daa
dec
in
repnz
enter
mov
mov
mov
sub
out
xchg
dec
les
loopne
jb
filds
fidivs
aam
pusha
cltd
insb
cmpsl
aam
roll
lea
fstp
out
jo
loop
jge
aas
dec
dec
fildl
jo
mov
inc
lock
popa
pop
xchg
test
pop
fistpll
lret
mov
insb
sbb
pop
adc
lahf
jle
cltd
in
sub
and
push
loope
std
cmp
cmpsl
pop
pop
in
out
dec
add
jno
mov
jge
sahf
int
add
and
cmp
mov
adc
add
fistpll
es
xor
je
jp
xchg
mov
jge
lahf
mov
sbb
imul
lods
add
mov
scas
adc
xchg
sbb
push
insb
adc
pop
xor
lock
xchg
jmp
jo
jge
sysenter
push
sub
push
stos
ja
outsl
insl
jae
or
cli
ljmp
inc
in
push
imul
sub
xchg
sbb
ret
int
imul
add
popf
or
cmp
or
xchg
push
in
xor
ret
jb
cld
in
sub
pop
cld
sub
mov
cmp
mov
pusha
pop
xchg
sub
movsl
loope
xor
cmpsl
lahf
aas
stos
cmp
inc
or
add
or
xchg
sub
ljmp
test
pushf
or
adc
in
xor
in
dec
mov
mov
mov
push
pop
push
flds
pop
adc
and
mov
mov
push
cmp
sbb
popf
push
xchg
ret
popf
repnz
test
lret
and
mov
dec
repz
dec
dec
push
decb
jecxz
rcll
scas
xor
aam
sbb
mov
mov
adc
mov
add
or
into
lods
push
es
cmp
out
mov
divl
xchg
adc
jne
jno
aam
fwait
enter
cld
movsl
gs
cld
xor
and
imul
xor
or
pop
out
imul
jbe
sbb
inc
xor
aam
xchg
test
xlat
add
sub
jmp
and
pop
xlat
sbb
pop
lret
xlat
push
stc
jl
out
xchg
xchg
addr16
in
xchg
jno
bound
in
sar
test
adc
push
repnz
push
fwait
sbb
int3
push
mulb
lcall
xor
in
add
inc
push
pop
pop
hlt
jne
sbb
fdiv
sarl
add
repnz
outsb
pusha
mov
push
out
mov
mov
pop
cwtl
mov
sbb
aam
mov
mov
sbb
pop
xor
cmpsl
bound
lret
adc
subb
jg
out
into
lret
aam
push
lcall
xchg
dec
stc
insb
push
repnz
dec
jmp
test
insl
hlt
lea
imull
mov
dec
es
dec
adc
shrb
xchg
cmp
leave
lcall
xchg
lock
pop
sbbb
dec
pop
outsl
fdivrs
pop
add
push
hlt
pop
sub
sahf
cmp
xor
add
push
inc
loopne
mov
add
inc
dec
push
popa
lea
mov
mov
shll
xor
incl
dec
adc
and
inc
in
fiadds
sub
ret
mov
mov
fisubs
loope
sbbb
mov
negl
stos
jb
adc
mov
adcl
cmp
shll
popf
dec
lods
xor
mov
pop
pop
or
mov
pop
sub
mov
imul
jmp
adc
insb
pop
sbb
test
mov
shrl
xchg
ja
xchg
call
cs
mov
nop
in
movsl
jb
sbb
mov
sbb
pop
push
pop
xchg
or
aad
adc
inc
pop
inc
dec
adc
and
xlat
cltd
into
xor
bound
popf
lds
lods
adc
pop
adc
pop
push
ret
sub
fmuls
sub
pusha
shr
xor
xor
ret
insb
insl
dec
xchg
ss
lahf
subb
mov
mov
lock
movsb
pop
cld
mov
adc
add
pushf
and
fsts
dec
and
xlat
rorl
test
aaa
cmp
pop
xchg
mov
add
push
sbbl
rolb
push
mov
or
out
mov
pop
push
dec
pop
sub
adc
repnz
mov
sbb
jmp
ficoms
imul
pushf
mov
aaa
jnp
mov
sub
jecxz
test
nop
rorb
es
xchg
sahf
lods
shlb
jnp
mov
lods
add
cmp
push
sub
int3
mov
sub
mov
inc
sbb
cmp
lods
cli
das
aaa
cld
pusha
xor
fiaddl
adc
push
or
xchg
xchg
rcll
jg
sbbb
pushf
or
out
add
leave
in
addb
adc
pop
cmp
pop
inc
jns
insl
or
roll
stos
aam
imul
and
add
arpl
mov
or
call
cltd
mov
cltd
imul
js
dec
test
jbe
mov
cmp
mov
xchg
aam
xor
push
xchg
adc
enter
test
insl
aam
jb
inc
int
prefetch
and
fmull
clc
mov
mov
jmp
cmp
pusha
fsts
and
xchg
sub
pusha
sub
or
dec
orb
in
and
out
jne
bound
lds
ret
or
out
xor
sub
push
dec
repnz
fwait
out
and
cmc
int
sub
pop
adc
into
inc
push
sarb
aad
popa
cltd
sbb
xor
addr16
add
pop
daa
or
fldt
in
imul
sbb
jno
ds
mov
xlat
cld
clc
pop
mov
sbbb
repz
outsb
and
xor
cmp
sbb
dec
mulb
into
jns
push
inc
push
cmp
fistl
sub
cmpsb
jg
push
push
insl
pop
lret
lock
mov
xchg
repz
cmpsb
insl
mov
jp
mov
ss
jmp
into
popf
stc
das
and
int
sbb
sti
or
sbb
or
iret
pusha
stos
stc
cli
cwtl
and
pushf
mov
test
and
cs
xchg
fmuls
cwtl
dec
or
lahf
dec
fisttpll
cmp
or
xchg
aam
je
fidivl
fwait
cmpsb
xorb
scas
sub
mov
pop
cmp
popa
jo
dec
out
stc
repnz
jge
dec
pop
push
or
push
dec
rorl
and
xlat
enter
dec
or
xor
cmp
movsl
addr16
jg
pop
inc
mov
int
mov
and
sbb
fstpl
cld
out
cmp
add
lods
leave
push
adc
out
mov
add
add
outsl
pop
sbb
xchg
push
inc
and
xchg
loopne
inc
aam
jp
xor
and
sub
cmp
pusha
cmpsl
inc
into
and
cmp
or
mov
mov
pop
adc
es
xchg
adc
inc
and
sbbb
loope
daa
push
sbb
mov
movsb
xchg
jo
icebp
scas
fimuls
mov
sbb
aas
jns
jle
xor
bound
inc
hlt
stc
xchg
leave
les
cs
jne
jne
mov
loopne
test
jbe
xlat
ss
aad
add
or
lret
jne
pop
mov
add
inc
sbb
cmpsb
jge
xor
das
sbb
mov
cmpb
jo
inc
xchg
cld
add
adc
pop
and
repnz
add
mov
loopne
add
in
arpl
inc
dec
outsb
adcb
loopne
mov
pushf
xor
aaa
in
gs
ss
ja
pop
push
ja
add
outsb
in
out
xchg
push
cli
or
inc
or
adc
arpl
aam
icebp
cmp
jmp
mov
pop
lods
mov
push
int3
jg,pt
cmp
dec
sahf
repnz
cmpsl
jne
rcl
or
dec
inc
mov
add
mull
out
push
int3
dec
es
push
negl
fistpll
push
dec
in
mov
sti
test
cld
xchg
ficompl
push
jp
shlb
cmp
xchg
jo
and
and
lock
mov
fisttps
mov
sbb
mov
cmp
cmp
cmp
sbb
mov
add
sbb
jae
mov
jl
loop
xor
pushf
ja
outsb
push
sub
dec
sub
out
mov
adc
cmp
lock
mov
stc
sub
cmp
dec
insl
push
add
aaa
or
jecxz
jnp
add
adc
inc
test
sarb
push
in
shll
popf
jae
pop
cmpsb
subb
sub
sbb
lret
adc
roll
inc
inc
sbb
mov
aam
les
dec
sahf
int
lds
inc
add
jb
fisubl
jns
jno
orb
aas
adcl
dec
push
sbb
es
out
or
xchg
mov
inc
cmc
sbb
sub
ljmp
jns
sbb
into
push
cltd
cld
add
idivb
fincstp
movsb
add
ret
ret
les
pop
lods
cmp
imul
and
inc
jge
sbb
clc
push
sbb
test
cltd
xchg
sahf
stos
inc
sub
and
aaa
and
mov
scas
push
jle
mov
shr
bound
test
dec
fisubl
pop
or
sub
leave
mov
or
pop
pop
shlb
minps
lret
mov
xor
xchg
cmc
insl
adc
rol
stos
leave
push
push
out
mov
push
and
cmp
pop
fnstcw
pop
pop
cmpsb
cmp
test
jmp
adc
loop
jne
cmp
mov
ret
dec
sub
adc
cltd
std
and
out
out
icebp
js
inc
cmp
xchg
or
je
jmp
sbb
pop
fsubrs
cs
mov
into
data16
pop
in
loopne
clc
movsb
lods
push
mov
cmc
mov
mov
shr
jecxz
mov
inc
ss
data16
les
pop
mov
and
jge
mov
sub
pop
dec
inc
aaa
mov
sub
hlt
rclb
xchg
cmpsl
jmp
jecxz
test
test
push
and
cmpsl
mov
dec
jne
pop
int
or
xorb
cmc
sub
cmp
or
popa
das
xor
ljmp
out
fmuls
mov
cmp
out
cmpsb
rcr
shlb
loopne
pop
call
xchg
mov
fsubrl
xchg
std
call
dec
out
pop
jmp
add
outsb
xchg
cmp
fs
and
bnd
sbb
cltd
inc
inc
add
xchg
mov
mov
out
sbb
inc
cmc
sub
movsb
xchg
sub
aaa
and
sub
sbb
in
or
mov
push
aam
push
cmpsl
xor
xchg
xorb
sbb
jp
rcrl
xlat
setnp
and
jg
mov
mov
mov
test
ss
je
les
mov
pushf
imul
mov
ss
or
stc
repz
insb
xor
mov
pop
pop
pop
sar
push
cmp
data16
or
xchg
stos
xor
push
iret
hlt
das
test
leave
and
ficoml
push
sahf
dec
pop
or
or
mov
dec
aas
pop
xchg
inc
negl
jmp
imul
jno
out
inc
fdivl
push
in
and
rcrb
xor
add
adc
push
mov
push
popf
fdiv
std
scas
hlt
nop
xlat
mov
mov
sub
shrb
add
push
es
in
int3
jge
add
shlb
sub
scas
call
decl
jo
adc
pop
cmp
popf
xor
dec
outsl
popa
adc
nop
into
xchg
icebp
push
inc
test
fildl
outsl
arpl
push
gs
pop
xlat
mov
sbb
and
mov
jecxz
push
int3
or
fsubs
hlt
outsb
xor
mov
jae
xchg
inc
inc
jae
dec
repnz
call
and
outsb
mov
adc
sbb
mov
inc
xor
push
sub
stc
inc
jns
or
daa
test
pop
call
lcall
inc
mov
sbb
xor
insb
push
fwait
or
lret
xchg
fiaddl
stos
push
mul
jo
jle
icebp
adc
arpl
dec
inc
loope
pop
stos
pop
pop
orl
mov
mov
fnsetpm(287
or
popf
push
dec
pushl
lock
jno
lods
aad
mov
aam
cmp
pop
sub
cwtl
in
add
pop
aad
mov
cs
sbb
push
pop
lds
test
inc
lods
push
dec
inc
and
fildl
lret
pop
lds
push
sbb
imulb
xchg
arpl
push
stc
lods
mov
frstor
jp
je
mov
arpl
fwait
insl
or
ljmp
lret
or
or
mov
jmp
inc
mov
arpl
mov
or
outsl
mov
jp
add
jl
frstor
pop
fbstp
jno
stos
fsubp
inc
pop
adc
outsb
sahf
push
ret
mov
out
jmp
rclb
and
mov
or
cltd
pop
ss
fwait
imul
jp
sub
outsl
ficoml
jmp
cwtl
sub
scas
inc
pusha
pop
dec
xchg
repnz
fndisi(8087
iret
or
fwait
mov
xor
dec
cltd
add
pop
or
shlb
mov
cmpsl
sub
out
outsb
inc
push
std
dec
outsl
mov
sub
mov
stc
and
lds
popa
test
add
fisubl
jp
adc
dec
push
arpl
ret
call
shl
dec
adc
insl
fistpll
mov
push
push
int3
cmp
cmc
sub
push
mov
pop
pop
xor
dec
dec
adc
xchg
dec
pop
lret
sti
in
jmp
xor
mov
push
jl
jecxz
pop
sbb
push
push
lods
mov
adc
inc
ljmp
movsb
mov
xchg
lcall
lret
rolb
and
cmp
dec
jb
mov
addl
lock
rorl
mov
xchg
dec
jmp
mov
aad
fildl
mov
sahf
or
xchg
dec
inc
mov
dec
pop
out
or
inc
xor
push
dec
sub
mov
cld
cld
xor
push
mov
mull
or
jmp
lds
jp
popa
cmp
xor
movsb
lock
mov
sub
xchg
stc
xlat
pop
cmp
push
cmp
lcall
inc
je
and
inc
mov
mov
stos
dec
jmp
pop
lock
stc
je
sbb
js
xor
adc
fidivrl
pusha
divb
mov
fistpll
stc
lret
fnsave
lcall
aas
or
cmc
pop
inc
mov
xchg
xchg
cmc
ds
div
mov
daa
cmp
mov
outsl
pop
inc
xchg
mov
mov
adc
xor
dec
das
xchg
sahf
jge
xchg
fldl
add
cmp
or
fcomps
repnz
pop
fisttpl
cmp
xchg
test
idivl
sub
mov
adc
jle
sbb
fs
pop
pop
xor
xor
xchg
ficoml
leave
push
sbb
mov
ja
cmp
mov
loop
xor
xor
cmc
cmc
adc
inc
dec
xlat
mov
inc
icebp
adc
dec
sbb
dec
and
jns
lcall
out
popa
xchg
jbe
cmp
cmpsl
jmp
xor
jmp
loop
xchg
adc
in
jae
add
fwait
rcr
xchg
push
lods
ljmp
add
imul
fsubrs
pop
shl
mov
divb
lcall
fmul
jp,pn
mov
insb
xchg
out
leave
icebp
adc
stos
aas
mov
cs
dec
int3
mov
mov
dec
in
popl
mov
mov
mov
pop
rcl
dec
xchg
push
add
ds
xlat
ljmp
cwtl
push
roll
pop
mov
adc
jne
imul
incb
insb
sub
fisubrs
xchg
pop
push
shll
mov
or
imul
cmp
mov
cmpsl
cmp
or
incl
mov
movsl
testb
je
pop
das
or
xor
push
push
into
xor
mov
pop
xor
push
add
ret
popa
pop
xchg
cld
movsl
mov
pop
jno
push
jmp
cmp
outsl
sbb
cmp
xchg
mov
fidivrl
popa
pop
xchg
aaa
xchg
ret
cmp
test
lds
push
imul
lock
and
lcallw
xlat
addr16
jmp
cwtl
sub
inc
pop
in
push
arpl
jnp
lea
in
repz
imul
mov
inc
adc
imul
push
enter
imul
xchg
sbbl
lock
add
outsb
pop
xor
cmp
lahf
repz
dec
cmp
hlt
mov
adc
xlat
data16
pop
loopne
mov
arpl
pop
cmp
mov
cmp
leave
sbb
in
aas
in
outsb
movsl
rorb
sbb
out
mov
dec
repz
scas
push
jmp
repnz
add
mov
scas
push
add
cmp
imul
pop
popa
dec
inc
outsb
jne
lock
scas
int3
cmpsl
jns
add
addr16
mov
jle
sbb
pop
imul
fs
mov
ja
mov
sti
jle
inc
movsb
aam
jmp
fcmovnb
add
int3
cmpsl
lock
in
pusha
mov
mov
xor
push
pop
cli
mov
mov
pop
mov
and
fucomp
lock
movsb
nop
mov
pop
mov
mov
xchg
in
sub
add
in
je
dec
push
mov
int3
repz
mov
or
push
adc
les
cs
xchg
inc
out
iret
and
pop
push
push
addr16
dec
testl
jo
jl
push
sub
push
je
jmp
inc
inc
push
jmp
sbb
sti
iret
test
mov
mulb
push
adc
mov
pop
lret
ret
mov
nop
pop
or
adc
inc
in
dec
stos
xchg
sbbb
mov
inc
ror
push
jmp
pop
div
cltd
clc
jb
lahf
jns
jne
cli
sarl
scas
mov
arpl
mov
dec
xor
mov
hlt
icebp
pop
sbb
mov
rcrb
pop
or
fistps
ret
xchg
fdiv
shll
idivb
cmpsb
aas
jno
cld
push
dec
cld
cld
pop
inc
lret
mov
or
xchg
sub
xchg
aad
lcall
sarb
ss
mov
ja
movsb
xchg
inc
dec
imul
mov
xchg
ds
sbb
cmpsl
xchg
sbb
and
shlb
flds
fnstsw
jge
and
adc
mov
addr16
add
stos
testl
nop
mov
adc
push
scas
addr16
add
imul
stos
scas
pop
cmpl
inc
lahf
jb
lret
and
jns
mov
sbb
xchg
cmpsl
dec
jb
imul
pop
fists
imul
arpl
xchg
jl
pusha
add
dec
sub
xor
jo
cld
adcl
fucomip
jecxz
or
in
fildll
lock
das
mov
and
loop
sbb
dec
pop
ljmp
rcll
inc
rcl
sub
rcrb
adc
sbb
ret
not
jle
shrl
arpl
pop
sub
mov
pop
mov
dec
mov
xor
mov
data16
adc
or
test
mov
mov
roll
mov
sbb
push
mov
mov
movb
out
adc
or
in
pusha
fs
or
aad
aas
and
sub
xchg
scas
adc
sbb
sbb
jnp
adc
mov
pusha
jno
in
xchg
xor
ret
test
fs
push
jmp
fbstp
and
mov
leave
test
lret
adc
bound
mov
ucomiss
jno
in
pop
adc
push
jecxz
test
cmpb
fs
jo
std
std
xlat
aas
fstpt
shlb
movsl
repz
outsl
xchg
ret
mov
cmp
pop
sub
push
fwait
mov
imul
inc
jb
das
fidivrs
cmp
popf
addr16
push
insb
scas
test
in
je
mov
jmp
movsb
xchg
jg
out
pop
sub
cmp
sub
push
rcrl
hlt
lret
xorl
loope
dec
ret
pushf
imull
in
sub
popf
push
jo
mov
insb
jne
fildl
stc
mov
aam
call
inc
cld
es
dec
mov
pop
cmp
dec
adc
jb
dec
nop
xchg
repnz
ljmp
push
fisubl
mov
mov
int3
mov
nop
mov
push
or
outsl
leave
fisttps
jg
jb
shrb
imul
and
loope
mov
shrb
aas
xchg
jne
ret
push
lret
sbb
inc
and
xor
int3
scas
ljmp
mov
cmc
add
scas
in
fsubl
std
lahf
sbb
rcl
stos
popf
lods
out
cmc
or
les
mov
stc
rcl
sbb
dec
loopne
lahf
stos
pop
dec
loope
jo
dec
inc
lods
pop
gs
ret
ret
xchg
cmp
cmp
dec
mov
xchg
int
adc
inc
jg
pop
aaa
xchg
lods
sub
jmp
sbb
push
out
or
xchg
jle
fldl2t
mov
flds
jnp
sbb
repz
andl
clc
test
push
mov
or
mov
cli
xor
mov
jl
dec
repnz
fwait
add
and
stos
xchg
lea
sub
xor
xchg
inc
or
movsl
add
sbb
loopne
pop
call
imul
mov
pop
std
jae
shll
dec
jg
imul
pop
aam
mov
into
pop
loop
adc
in
mov
jg
add
ss
adc
lods
ss
jae
adc
in
sub
sbb
in
js
addl
xchg
jbe
test
mov
jbe
out
push
dec
std
insl
int
stc
jp
fs
xchg
sahf
cmp
ret
movsb
lock
adc
adc
fmuls
out
movsl
sub
mov
bound
mov
icebp
orl
xor
xchg
jge
les
scas
jecxz
dec
hlt
cs
cltd
add
jl
pusha
lock
mov
pop
into
jl
arpl
jecxz
popf
jb
inc
lea
cmpsl
in
leave
ss
aam
mov
pop
ret
adc
adc
mov
aam
dec
stc
mov
xor
rcrb
lea
iret
cmp
cmp
add
mov
mov
push
or
mov
xchg
jno
adc
add
dec
sbb
dec
adc
cmpl
std
outsb
ja
adc
and
and
sahf
lods
jns
lcall
dec
push
inc
jb
add
fwait
sbb
imul
jg
mov
mov
mov
adc
sbb
les
mov
xor
out
insl
int
repz
sub
xchg
adc
mov
xchg
cmc
xchg
jns
call
push
mov
push
fucomip
mov
mov
add
mov
add
mov
jle
lods
ret
faddp
mov
sbb
fisttpll
and
mov
test
sub
stos
out
inc
subl
in
inc
adc
push
cli
or
pop
add
shlb
sub
test
and
movsl
adc
sub
lret
pop
xlat
cmovg
mov
mov
cmp
jmp
scas
in
insl
fadd
inc
nop
inc
addl
rclb
fldcw
xlat
xor
inc
cmpl
fldl
jl
add
jns
insl
fiaddl
out
movsb
imul
int3
in
mov
pop
scas
fbstp
add
test
cs
pop
jb
dec
sahf
dec
push
aaa
sbbb
mov
xchg
repnz
aas
pop
shlb
xor
lea
sbb
cmp
push
cli
cld
or
mov
data16
adc
ret
push
cld
lods
aad
pop
and
and
adc
or
out
lret
or
xor
pop
xchg
cs
jae
mov
test
dec
fstp
dec
jns
cmp
ljmp
dec
cld
mov
pushf
sub
cmp
xchg
dec
sub
imul
insb
jg
jg
dec
jg
addl
popa
lcall
push
std
ret
mov
push
cltd
mov
sahf
setge
adc
add
mov
mov
out
orl
mov
sbb
shl
mov
push
popa
arpl
dec
adc
lahf
hlt
into
cmp
sbb
ja
leave
and
or
fdiv
arpl
cmp
fadds
cmc
mov
cmp
ss
sbb
repz
lods
mov
jle
inc
jo
sub
push
pusha
pop
sub
mov
pop
ss
ret
cmp
mov
js
jnp
mov
nop
cltd
cmp
loopne
testb
xor
test
cmp
fnsave
cmp
pop
mov
in
fcomps
test
xchg
jg
mov
jae
lahf
cmp
andl
push
push
outsl
xchg
cmp
dec
in
scas
clc
inc
lret
sub
and
mov
adc
push
out
popf
add
imul
insb
add
into
sub
adc
jle
sbb
std
or
negl
add
das
outsl
sub
and
pop
xchg
mov
mov
cmp
mov
mov
add
push
sbb
lock
icebp
or
repz
inc
push
mov
clc
mov
or
xor
mov
icebp
push
push
imul
and
jns
cli
mov
test
jmp
and
sbb
fisttpll
mov
xor
inc
push
je
sbb
xchg
xchg
mov
leave
call
sub
xchg
out
icebp
in
push
cwtl
or
in
xchg
xor
stos
jns
ds
xor
pop
lcall
push
test
and
call
sub
push
clc
sbb
xor
push
sbb
and
imul
pop
in
sub
inc
mov
mov
inc
addl
imul
mov
sahf
add
mov
mov
xchg
xlat
sub
mov
and
cmp
mov
mov
not
jle
adc
pop
inc
pop
pop
aam
inc
inc
fcmovnbe
movsl
loop
cmp
call
out
cltd
fsts
jbe
enter
outsb
gs
sbbb
loope
lret
addr16
aas
pusha
rol
clc
ret
dec
xor
sbb
aam
stc
sarl
inc
stos
fisubl
out
daa
lret
es
pushf
in
testb
xor
repz
es
xor
cmp
lret
mov
repnz
leave
push
lahf
sub
imul
cmpsl
mov
sbb
push
xor
enter
movsl
pop
or
add
das
cmp
ficoms
ret
pop
leave
sahf
mov
jno
mov
shlb
inc
add
out
nop
outsl
fidivrl
inc
and
pop
test
mov
ljmp
mov
pop
mov
int
xchg
pushf
adc
outsb
sub
sub
cwtl
sbb
daa
pop
fadds
pop
push
pop
arpl
sbb
sub
int
test
je
dec
jecxz
shlb
sbb
mov
and
outsb
add
les
into
test
or
stc
bound
lods
adc
mov
mov
popa
sbb
es
hlt
cs
lods
jge
stos
in
push
popa
sub
mov
sub
jle
xchg
and
lcall
ret
sahf
pop
fnsave
xor
mov
jge
mov
jnp
jecxz
out
xchg
call
jbe
jecxz
push
cwtl
push
xchg
loop
mov
sub
cwtl
iret
push
divl
jmp
mov
adc
add
xlat
out
out
mov
sarb
jne
es
jne
mov
sbb
insl
sub
iret
fdivs
daa
cwtl
mov
ja
out
cli
cmp
mov
and
sbb
incl
ds
mov
data16
mov
inc
mov
test
jne
imul
rorl
cmp
adc
mov
in
clc
mov
jno
shlb
pop
pop
lea
cmp
lds
mov
cmp
dec
mov
out
out
es
sub
mov
pop
aaa
xchg
nop
sub
mov
punpckhbw
idivb
mov
mov
pusha
jno
dec
push
cmc
pop
or
in
push
and
ret
clc
adc
and
cmp
adc
rcrl
pop
add
pop
push
sbb
and
dec
cmp
cmp
xlat
dec
cmpsl
xchg
jg
jo
sbb
add
filds
adc
cmc
dec
ja
movsb
cli
mov
int3
add
mov
rolb
test
ds
stos
xor
push
or
add
cwtl
mov
push
mov
cmp
out
lret
je
ret
or
jae
mov
out
jns
pop
inc
mov
mov
jl
and
movsl
dec
insl
ret
ljmp
int
std
lcall
nop
pop
pusha
xor
setns
outsl
dec
sbbb
mov
jmp
std
call
ljmp
mov
push
stos
or
bound
mov
push
xchg
les
sbb
psubb
cmp
into
jmp
jmp
xchg
xor
mov
not
insl
in
outsb
sti
insb
push
jno
cmp
insl
popf
arpl
xor
loope
sbb
mul
jb
icebp
push
sbbb
ret
sbb
sbb
sub
push
push
xchg
clc
xchg
mov
mov
push
in
mov
jecxz
xor
sbb
jno
push
xchg
mov
mov
cmp
movb
negl
fldl2t
fbld
aam
adc
inc
mov
add
cmp
imul
lcall
push
imul
push
xor
sbb
push
stc
pop
nop
out
or
or
jo
push
jl
mov
xlat
aas
pop
push
outsl
jbe
rcr
es
jnp
scas
ret
stc
push
pop
push
push
sub
mov
shll
cmp
inc
enter
fadds
fisubl
scas
xor
xchg
popa
adc
cwtl
and
cmpsb
cld
sub
das
sbb
mov
push
ds
pop
es
rclb
cli
xchg
icebp
out
add
dec
or
stos
into
loope
push
dec
mov
and
jb
lcall
adc
cmpsb
lahf
lods
call
outsl
ds
call
xor
ror
xor
push
dec
repz
std
out
das
push
sbb
dec
sti
dec
shrb
mov
lret
test
inc
aad
xor
pop
cld
int
mov
jmp
dec
call
imul
mov
mov
testb
pop
sahf
nop
hlt
jle
add
out
imul
add
imul
mov
fldcw
mov
lahf
mov
js
stos
pop
mov
movsl
xor
call
ljmp
mov
insb
or
out
mov
sar
clc
outsb
mov
mov
xchg
bound
ss
xor
cli
mov
jns
inc
jle
xchg
sbb
mov
mov
in
jno
faddl
and
movsl
lcall
cmp
pop
ljmp
movsl
adc
in
mov
movsb
jmp
or
addr16
sub
dec
fwait
xor
pop
jae
mov
enter
arpl
mov
xchg
movsl
jmp
or
addl
stc
mov
les
push
or
in
cmp
or
popa
push
mov
xchg
inc
mov
sbb
aad
pop
jb
shll
inc
cmc
jnp
adc
out
add
lcall
addr16
ret
pushf
sti
sbb
bound
sahf
push
xchg
push
fldl
cltd
sub
mov
bound
or
call
rolb
scas
cmp
les
pop
popw
xor
mov
cs
dec
test
inc
in
sub
fs
sub
fbstp
jo
xchg
jp
or
adc
daa
movsl
xchg
dec
adc
aam
adc
movsb
push
loope
mov
add
lret
adc
lods
in
and
nop
jo
or
lahf
lods
adc
xchg
pop
in
mov
pop
ret
or
inc
cld
mov
insl
mov
xlat
cmpsl
ret
fimull
leave
inc
mov
inc
pop
clc
xlat
jecxz
and
lods
mov
ss
sbb
cmp
xchg
push
mov
jge
data16
out
or
jne
mov
jp
testb
adc
test
out
and
popf
jnp
add
pop
mov
pop
inc
mov
pop
not
mov
stc
aaa
cmp
orb
lcall
mov
out
mov
icebp
iret
popa
ja
shrl
in
add
mov
adc
inc
xchg
xor
cmp
cld
cmpsb
sub
push
mov
gs
sub
mov
mov
lods
jae
sbb
mov
lock
dec
mov
pop
aam
add
fnsave
inc
hlt
ret
cmc
xlat
ss
xchg
cwtl
adc
sub
cmp
mov
fildll
in
adc
xor
pop
fsubrp
mov
xor
adc
mov
mov
popa
outsb
add
add
rcl
pop
adcl
xor
sub
adc
jnp
cs
aas
out
xchg
push
outsl
outsb
sub
pop
inc
mov
movsb
repnz
cmpsl
jl
push
xor
cmp
insb
mov
dec
ja
test
jg
xchg
je
mov
loope
pop
add
mov
xor
or
stc
mov
inc
mov
sub
adc
add
or
shl
xchg
decl
push
int
xchg
mov
pop
rcrb
ror
iret
rorb
dec
pop
loopne
imul
sub
add
add
pop
adc
fsubl
jmp
mov
lea
arpl
lods
jbe
lea
add
mov
and
out
inc
mov
fisubs
scas
es
push
test
mov
imul
adc
push
push
push
sub
std
pop
ret
inc
lahf
mov
loop
je
jbe
push
push
sbb
or
iret
imul
xchg
scas
xor
mov
clc
push
pop
aas
cltd
lock
inc
loop
insb
std
pop
dec
jmp
dec
movsb
cmpsb
hlt
bound
dec
push
cmp
insb
push
jl
mov
dec
ljmp
mov
lret
push
test
xchg
inc
sbb
fists
xchg
sbb
mov
push
xor
sahf
push
in
mov
insb
aam
sti
btc
lds
test
cmpsb
sbb
pushf
test
cmp
fcoms
sbb
mov
jge
pop
mov
inc
bound
or
jmp
out
sbb
ret
or
push
sbb
sbb
daa
ss
jl
les
xor
add
push
and
fnstsw
addb
orb
das
popf
iret
mov
sub
mov
xchg
pop
xor
insl
cmpsl
sti
stc
cmp
les
inc
pop
add
pop
testb
sub
xchg
bound
pop
pop
je
push
aaa
jnp
cmp
and
icebp
sub
push
jo
jecxz
pop
jmp
std
loopne
daa
mov
cmp
popa
popf
rol
mov
jg
iret
loop
clc
sub
test
mov
loop
and
popa
jmp
fidivs
fistpl
test
mov
adc
mov
mov
and
and
rorl
push
inc
lret
xchg
pop
and
jbe
sub
xor
jl
and
dec
cmc
aas
in
xor
inc
dec
outsl
pop
add
lds
mov
aas
xor
lods
aaa
imul
lods
lcall
das
mov
in
shl
test
pop
cmp
inc
cmp
dec
push
cmp
into
fs
js
mov
jmp
pop
sbb
mov
lahf
sti
int3
and
jae
out
lds
loopne
dec
jecxz
lods
xchg
mov
mov
stos
mov
aad
sahf
jae
and
sbb
das
push
jno
xor
aaa
jbe
cld
repnz
fucomi
mov
addr16
dec
out
mov
jns
adc
data16
mov
pop
pushf
cmpsb
jnp
push
pop
and
ds
repnz
sar
jae
sub
xor
inc
inc
pushf
push
stc
cltd
add
dec
add
mov
push
in
or
or
rcl
add
shlb
orl
inc
loop
xchg
mov
bound
xor
loop
ja
aas
mov
rolb
inc
push
mov
xor
test
pop
add
call
xchg
push
imul
xor
cmc
outsl
arpl
hlt
bound
notl
pop
loope
jb
jb
push
lret
clc
xchg
jb
sbb
and
aam
fnstcw
out
lahf
dec
pop
push
or
jg
xchg
push
jg
xchg
mov
and
gs
imul
inc
dec
mov
cmp
mov
mov
loopne
mov
pop
cmp
insl
xor
inc
rcrl
lods
pop
add
dec
pop
roll
add
iret
lahf
mov
cmp
je
xchg
aad
cltd
testb
jecxz
or
mov
bound
jne
jl
pop
dec
xchg
or
dec
xchg
mov
out
cwtl
or
enter
loop
sarl
push
dec
adc
cs
addr16
push
xor
mov
mov
rorb
mov
lock
clc
out
inc
fsubs
adc
push
rol
pop
pop
jae
stos
mov
and
push
into
data16
data16
mov
loopne
or
sbb
cwtl
fcompl
jle
cs
in
mov
std
imul
push
add
shll
inc
lret
aaa
pop
jbe
xchg
cmp
mov
push
xor
xor
pop
lods
mov
ja
out
inc
push
jae
int3
cwtl
test
test
add
adc
std
jo
rcl
lock
mov
xlat
shl
mov
mov
in
leave
xchg
loopne
test
xor
ret
push
ja
movsl
dec
add
es
das
adc
inc
jp
push
sbb
cmpsb
sub
and
mov
push
std
movsl
shl
cwtl
addr16
cmp
cmp
scas
sub
jmp
jo
es
add
mov
push
mov
sbb
mov
pusha
sbb
ret
cmpb
stc
mov
and
jmp
aad
ss
xchg
add
loope
pop
add
cmpsl
sbb
dec
cld
addr16
mov
pop
loop
adc
andb
sahf
xchg
or
fwait
push
cmpsb
xchg
test
add
hlt
rcl
loope
xchg
fs
pushf
ret
inc
adc
shll
jg
dec
das
mov
cmc
pop
imull
pop
stc
fld
rorb
mov
stos
clc
icebp
or
mov
jbe
mov
pop
jnp
jl
dec
or
fwait
rcrl
jb
dec
call
add
ja
fiaddl
in
or
sbb
pushw
mov
inc
data16
sub
inc
xchg
pop
outsl
mov
ljmp
xorl
mov
divps
js
push
vmovddup
ror
js
leave
sub
push
or
ja
xor
xlat
mov
lret
add
pop
mov
adc
ret
mov
ss
sahf
aam
sub
inc
adc
rorl
fucomi
in
mov
adc
test
fsubs
iret
mov
sbb
xchg
cs
jle
scas
ret
mov
dec
outsl
push
in
mov
add
and
imul
int
cmp
movsl
dec
pusha
test
jne
and
push
movsl
jge
fbstp
out
inc
cmp
orl
xchg
xchg
scas
subl
mov
lret
jb
push
pop
rorb
or
dec
jmp
sbbb
fildll
in
mov
shrb
out
push
dec
js
adc
mov
popf
inc
push
pop
in
jne
cs
xor
std
les
pusha
dec
fs
sahf
shll
xor
lods
out
mov
je
cli
test
andb
push
cwtl
push
imul
stc
mov
nop
dec
dec
loopne
inc
jo
xor
inc
dec
int3
add
inc
sub
push
jae
xor
adc
stos
and
mov
repnz
arpl
das
fucomi
cs
cmp
adc
and
mov
adc
ret
fbld
cmp
ret
imull
xor
out
test
popl
testl
xchg
pop
ret
or
add
jge
mov
xchg
push
inc
mov
and
dec
pop
and
pop
dec
pusha
cmp
xlat
sub
or
lock
lea
test
aaa
jo
movsl
movsl
sbb
adc
mov
mov
inc
out
mov
lods
or
ja
test
scas
stc
out
and
cltd
mov
pusha
stos
push
das
and
or
shrb
pushf
repz
pushl
bound
fst
repz
shrl
sbb
aaa
sub
push
and
pop
enter
enter
adc
lds
push
mov
inc
addl
sub
push
mov
leave
jnp
jbe
xchg
lea
pusha
xchg
out
push
pop
fcompl
and
rcrl
mov
or
lahf
push
mov
addr16
jl
in
fwait
aad
xor
mov
subl
adc
test
jne
mov
mov
int
dec
mov
stc
mov
mov
and
data16
xor
lea
shr
lcall
pcmpgtw
inc
sti
cmp
mov
xor
sub
push
jle
loope
dec
popa
push
test
mov
jmp
icebp
hlt
ja
pop
das
and
dec
xor
mov
icebp
fisttpl
push
notl
pop
sahf
ret
cmp
or
inc
mov
push
dec
fbld
test
push
push
push
cltd
mov
ret
xchg
mov
xchg
fs
jns
ja
push
jb
cs
jmp
imul
cmp
sub
loop
das
dec
aam
jno
or
leave
pop
push
pop
adc
insl
test
and
pop
xchg
pop
mov
and
push
or
sbb
sbb
bound
int
xor
mov
sbb
loope,pt
repnz
addb
pushf
add
add
jne
mov
sub
mov
addb
sbb
sub
inc
daa
dec
movsb
test
sbb
sub
std
loope
mov
sti
pop
lahf
xchg
jae
adc
jg
out
aam
call
jne
es
lret
test
lds
dec
rcrl
pop
mov
fmulp
pop
sub
repnz
xor
aas
pop
test
dec
ret
fidivs
mov
out
aam
xchg
push
test
les
mov
cmpsb
xor
xchg
in
scas
mov
daa
cmp
pop
mov
int
sahf
or
movsl
arpl
pop
mov
scas
fsubrl
es
or
jae
ljmp
mov
jae
lea
enter
enter
jno
cmp
loopne
int
push
enter
push
lds
push
adc
or
push
push
sbb
xchg
mov
adc
outsb
int
mov
stos
leave
and
loopne
xor
sbb
loop
inc
xlat
int3
inc
sti
fcomip
idiv
or
nop
mov
or
dec
je
mull
jb
data16
xchg
jge
ljmp
sub
ljmp
test
jmp
jno
sbb
into
mov
inc
insb
cld
jle
and
xchg
sub
andl
icebp
xchg
out
daa
sahf
ja
jne
xchg
bound
lods
adc
inc
out
jmp
outsl
pop
icebp
xchg
and
jl
insl
ljmp
xlat
inc
fs
icebp
jge
cld
cmp
sub
mov
es
sub
testb
cwtl
fimuls
clc
scas
sarb
bnd
fimull
dec
inc
dec
nop
clc
sub
pusha
rcr
gs
add
das
aam
jmp
jl
out
push
jbe
push
int
rcrl
push
cmp
jmp
dec
aad
mov
jge
jle
fcmovu
xchg
fwait
mov
aad
lret
int
ljmp
pop
sti
dec
jne
jnp
adc
arpl
sub
inc
cmp
and
loop
scas
mov
sub
shl
ja
pop
pop
mov
xor
loopne
out
add
pop
in
sub
mov
add
shlb
sub
pop
push
stos
int
pop
xor
dec
xchg
xchg
mov
sub
mov
sbb
and
decb
pop
adc
cmp
scas
repnz
mov
xchg
sbb
scas
mov
enter
cmp
jl
push
movsl
fxch
lea
mov
sub
outsb
push
jle
add
inc
mov
xchg
adc
and
push
dec
xchg
xor
fsubl
mov
mov
in
cmc
lds
sbb
fidivrs
dec
mov
dec
xchg
push
and
mov
adc
push
jns
loope
movsl
imull
out
test
push
scas
mov
insb
jae
nop
das
mov
mov
dec
inc
js
sub
mov
scas
stc
ds
stc
je
out
and
mov
js
test
mov
leave
loop
aad
adc
jecxz
sbb
adc
pop
xchg
cltd
xchg
mov
ret
fstpt
mov
clc
inc
mov
push
out
and
popf
mov
adc
push
sbb
jecxz
mov
outsl
add
in
mov
pushf
les
add
xlat
pop
arpl
push
mov
sbb
cmpsl
add
sbb
cmp
movsb
fs
sbb
out
pop
shlb
fists
xor
std
clc
in
movsl
mov
jg
js
int
stos
pushf
shll
out
adc
jle
and
pop
mov
mov
or
mov
pop
cmp
jp
loope
mov
stos
clc
sub
dec
stos
jae
aad
out
stos
xchg
xor
fs
mov
hlt
add
push
dec
push
sbb
jb
stos
add
jmp
pop
imul
push
lret
xor
pop
inc
enter
ret
inc
jmp
jo
xchg
pop
jae
dec
add
mov
movsb
dec
insb
cmpb
out
push
mov
mov
xchg
popa
dec
or
mov
or
dec
ds
sub
and
inc
add
vmovss
adc
pop
fnstenv
cmc
pop
mov
xchg
mov
jnp
test
sbb
cmp
and
or
mov
pushf
nop
fildl
push
cmp
iret
mov
fdiv
sbb
xchg
xor
inc
je
mov
pop
push
xchg
lret
cltd
jae
daa
pop
or
shlb
cltd
cld
pop
mov
pop
cmpsb
aas
test
scas
inc
add
xor
ja
lret
cmpsb
popa
shl
hlt
pushf
jb
cltd
sahf
out
sbb
les
pop
pop
shl
dec
add
mov
call
inc
lods
fs
push
or
dec
js
cmp
and
cmc
mov
pop
sbb
fsubrl
movsl
call
call
in
mov
adc
popf
sahf
mov
loope
cmpsl
mov
cmp
movsl
mov
push
cld
and
scas
mov
sbb
and
aam
or
cmp
mov
iret
push
mov
cmc
push
xchg
jnp
enter
mov
xchg
mov
and
ja
mov
je
sbb
sarl
rcr
ret
inc
rorl
fdivl
loopne
or
xor
adc
fcomi
in
pop
jbe
faddl
mov
stos
inc
lcall
xorb
inc
hlt
adc
cwtl
int
popa
popa
mov
mov
pusha
push
inc
lods
scas
jl
mov
mov
xor
push
pop
push
scas
movsb
pusha
pop
fdivl
lret
mov
or
out
mov
xlat
xor
rcrl
inc
xchg
mov
setl
or
cld
sbb
and
aam
movsl
arpl
je
xor
push
daa
stos
xchg
jnp
sub
mov
jle
inc
cld
fsubr
mov
js
cli
push
hlt
loop
lcall
mov
test
mov
cmp
jo
das
dec
divb
pusha
inc
mov
push
xor
lahf
xchg
jbe
inc
add
mov
insb
mov
popa
cmp
lret
add
jno
repnz
mov
movsb
pop
push
out
xor
mov
out
and
gs
mov
pop
shlb
mov
inc
add
mov
xor
inc
lret
into
push
xor
jo
pop
pop
sub
push
push
pop
dec
cmpsb
mov
cmp
ljmp
inc
cmp
cmp
inc
jmp
adc
pop
test
and
jg
cmc
xor
and
je
fsts
mov
shl
lds
scas
dec
jle
loope
push
mov
scas
scas
sti
enter
repz
inc
out
cmp
mov
xorb
mov
jge
pusha
loopne
pushf
sbb
sahf
push
stos
xchg
mov
imul
inc
adc
lret
je,pt
dec
fcomps
andl
push
cs
test
push
cmp
dec
insb
sbb
icebp
dec
fadd
int
mov
adc
es
push
mov
stos
sbb
inc
dec
mov
aam
insl
test
xchg
jae,pn
ljmp
std
aas
aad
lcall
bnd
test
ss
scas
pusha
outsl
iret
dec
add
lcall
mov
arpl
sbb
pop
ds
loopne
push
jno
mov
dec
rcrl
imul
sub
and
jns
dec
dec
lock
pop
mov
aaa
xchg
xchg
sbb
test
scas
and
mov
sbb
push
mov
mov
pushf
lcall
adc
sub
adc
cmp
data16
mov
out
mov
pop
aad
jo
ss
mov
xchg
popa
ret
mov
inc
xor
mov
icebp
inc
mov
int
mov
sub
xchg
sbb
fwait
das
jae
out
adc
mov
pop
and
jp
add
mov
mov
mov
add
adc
popf
gs
gs
pop
test
inc
inc
cmpsl
xchg
mov
repz
call
or
jo
xor
adc
arpl
jl
int
jecxz
cmpsb
movsb
jae
pop
stos
das
or
mov
movsb
jns
or
lods
sti
mov
or
cs
aaa
clc
orl
cmpsl
mov
clc
inc
dec
sti
cwtl
jge
jmp
inc
repz
push
jo
push
imul
mov
or
stc
push
scas
inc
mov
ljmp
xchg
cmp
mov
xchg
sub
fidivrl
std
ds
into
xchg
cltd
push
stc
cld
ljmp
mov
push
inc
hlt
push
xchg
mov
adc
fstl
pop
jecxz
xchg
mov
xchg
lods
mov
dec
inc
sbb
outsb
dec
mov
xor
test
cmp
sbb
inc
stc
lahf
cmpsb
lods
or
mov
and
mov
jno
sub
mov
loop
dec
sarl
mov
mov
sbb
enter
mov
jecxz
xchg
faddl
fmull
les
pop
pop
pop
movsb
xchg
fisttps
or
or
adc
push
xchg
mov
push
dec
dec
add
pop
testl
adc
mov
add
inc
repz
cmp
mov
cmp
jae
xchg
jl
cmp
loopne
daa
sti
int3
sub
pushf
xchg
jp
fidivrs
xchg
jg
mov
xchg
dec
cmp
mov
push
cmpl
jge
lock
and
mov
lret
cmp
ficoms
dec
neg
ret
dec
icebp
fwait
jle
or
hlt
inc
jg
daa
mov
push
xchg
out
insb
nop
xor
pop
pusha
or
jmp
push
mov
cltd
addr16
in
inc
les
inc
jmp
cmpsl
out
pop
roll
pop
xlat
testb
scas
lods
xor
int
push
mov
pusha
fdiv
lcall
in
adc
bound
je
cmpsb
dec
dec
jo
or
sbbl
mulb
add
lods
sub
sub
dec
int
adc
shl
push
push
jb
dec
pop
cltd
push
std
jg
mov
xchg
mov
hlt
mov
push
iret
mov
mov
fcomip
lock
add
cmp
pop
sahf
insb
loopne
add
jmp
repnz
in
adc
cltd
sbb
dec
hlt
dec
mov
mov
inc
iret
jp
pop
adc
jmp
pop
inc
repnz
outsl
in
pusha
adcb
mov
mov
out
mov
sarb
negl
fwait
enter
test
fildll
dec
mov
xor
adc
bnd
adc
jg
movsb
sub
aas
jb
stc
mov
ret
out
fstl
fcoml
sub
ja
xchg
pop
out
lods
xchg
fisttpl
dec
add
mov
clc
je
mov
cmp
or
mov
das
imul
sbb
in
pop
insb
dec
xor
jne
lock
xchg
and
icebp
iret
stc
hlt
mov
ss
jo
in
sarb
in
pop
daa
orb
inc
aas
or
push
pop
fs
xchg
stc
andb
icebp
sub
sbb
test
and
fdivrl
xchg
mov
pop
mov
xchg
pusha
jae
jl
push
push
pushf
mov
adc
push
mov
subl
ficomps
ss
inc
cmp
cld
cltd
xchg
hlt
ss
test
push
shll
loopne
lret
push
mov
mov
inc
fwait
stc
mov
jmp
scas
push
and
and
out
push
adc
lea
int
add
lock
xor
pop
pop
sub
repz
roll
mov
or
je
mov
ljmp
out
jae
cmpsl
push
hlt
mov
outsb
or
jmp
fildll
sub
jo
cmc
mov
shlb
flds
lock
xchg
mov
out
testl
arpl
cli
gs
cmp
pop
addr16
xchg
ror
jle
rclb
and
mov
push
loop
or
sbb
lret
adc
adc
stc
or
push
mov
inc
out
jo
addr16
out
adc
lds
and
sub
dec
popa
pmulhw
loop
cmp
cmpsb
std
xchg
popl
mov
cmpsl
add
dec
mov
sub
rol
repz
out
mov
outsl
popa
fimuls
testl
leave
cmp
mov
dec
or
adc
and
ljmp
mov
dec
into
dec
and
cmp
cmp
mov
xor
mov
fwait
sbb
rol
iret
push
push
or
or
pop
cmp
clc
mov
mov
scas
adc
xor
orl
add
lock
mov
and
push
mov
or
into
jo
in
sbb
jmp
jns
sbb
push
enter
aas
jle
imul
cmp
andb
test
dec
popf
cmp
pop
or
jb
scas
or
mov
add
add
lods
cmp
pop
xlat
out
lods
mov
in
or
lods
int
jnp
in
cwtl
add
add
sbb
push
xlat
aaa
mov
lret
xlat
daa
or
mov
sbb
pop
xchg
push
cs
in
je
lahf
ror
loope
mov
xchg
mov
and
leave
mov
ret
cmp
test
fwait
dec
lahf
paddd
lahf
data16
xchg
sub
rclb
das
adc
dec
xchg
repnz
push
leave
in
or
mov
jg
dec
sub
fmulp
jmp
pop
fadd
cs
jne
mov
inc
mov
imul
fwait
sbb
fnsave
dec
jnp
shll
cli
aaa
jl
icebp
movsb
sub
dec
mov
add
xor
adc
xchg
dec
imul
cmp
clc
cmpsl
cwtl
pop
jnp
sub
popa
outsb
je
cwtl
pop
or
test
inc
lret
xor
adc
cs
cmp
pop
je
dec
repz
push
cltd
xchg
or
push
jge
or
mov
cs
aam
test
mov
xchg
sbb
repz
stos
push
jno
in
inc
ss
xor
sahf
fbld
jae
sbb
cwtl
cltd
bnd
nop
aas
mov
cmp
cmp
lcall
fisttpl
and
push
cmc
lods
and
jmp
cmovns
mov
shrl
adc
loopne
pushf
iret
mov
pop
xlat
shll
out
stc
bound
or
mov
repnz
pop
adc
sarb
inc
lret
movb
lods
jae
inc
mov
insb
inc
jb
or
fs
or
inc
int
fildl
inc
in
sbb
das
div
adc
leave
pop
into
mov
sbb
cmc
sbb
cmp
mov
out
xor
push
cli
roll
push
stos
jae
or
movsl
pop
xchg
pop
and
dec
orb
adc
loope
movsb
sbb
cmp
repz
jb
sti
fwait
mov
lea
imul
popa
dec
mov
sbb
add
inc
cmp
xor
mov
adc
cs
mov
jae
movsl
rolb
outsb
or
push
mov
jne
int
clc
out
or
shrl
jmp
jmp
push
repz
pop
mov
fistps
cld
jb
rolb
addr16
jns
add
adc
mov
popa
notb
jae
and
test
mov
xchg
imul
xor
xchg
xor
filds
or
gs
test
and
int3
mov
xor
rolb
stc
stos
test
sbb
or
or
mov
mov
inc
pop
lcall
jmp
std
lret
dec
mov
cmp
push
add
mov
pop
mov
and
pusha
fwait
aad
popf
adc
stos
in
stos
mov
fnsave
pop
icebp
ss
test
adc
jg
push
xlat
jge
mov
andl
addr16
arpl
iret
imul
jle
iret
mov
ds
jo
addr16
xor
push
ljmp
cmp
arpl
push
add
enter
pop
jne
xchg
sub
mov
cltd
push
pop
cli
adc
mov
shll
sub
popf
loope
lret
mov
dec
sub
mov
xchg
adc
xor
pop
loope
jns
fwait
add
in
popa
aas
out
std
shll
sub
push
fsubrl
add
mov
pop
xchg
inc
inc
sbb
mov
pop
dec
imul
addb
push
or
inc
les
pop
sarl
xchg
jmp
out
fistps
xchg
movsl
iret
jbe,pt
adc
jmp
shrl
cli
sbbb
push
add
and
and
or
fs
inc
jl
jns
into
cmpsb
aas
jle
sub
repz
mov
lock
ja
inc
subl
mov
icebp
bound
psubw
mov
add
shrb
xchg
mov
jmp
cmp
addr16
mov
push
add
arpl
fnstcw
in
fsubr
in
mov
mov
adc
lds
dec
xor
and
xchg
cmp
bound
lods
orb
fwait
xchg
jne
xchg
imul
cmp
jb
popf
shrd
movsb
loope
sti
repnz
sub
aas
sahf
inc
shlb
outsb
enter
push
mov
dec
aad
sbb
fs
out
loop
jle
and
iret
insb
aas
mov
rcll
add
dec
fdivl
fidivl
adc
iretw
dec
adc
loop
jl
lods
loopne
in
out
inc
sub
subl
les
fdivrs
aas
shll
pop
movsl
or
pop
mov
mov
sub
mov
pop
adc
or
mov
mov
or
mov
jp
mov
imul
jp
iret
xchg
xchg
ljmp
jb
andb
popa
imul
push
popl
jns
xor
push
out
dec
push
xlat
sbb
fmull
pop
sub
or
loopne
daa
mov
cmpsb
loope
pop
jno
lahf
mov
xor
subb
insb
add
jecxz
addr16
or
cmp
iret
sub
push
xor
outsb
add
jne
js
ret
push
dec
push
and
aad
xor
xchg
aam
jmp
mov
mov
push
repnz
inc
lret
lea
xor
ds
sub
rorl
push
push
mov
adc
ss
jp
mov
stos
dec
adc
lcall
sahf
and
mov
adcb
sbb
xchg
add
lcall
sub
cmp
xor
fwait
inc
iret
push
std
xlat
fsts
fwait
xor
das
cmp
or
out
movsb
cmc
xor
jle
sbbb
mov
dec
jae
mov
aam
fs
fmul
shlb
shlb
mov
in
jno
or
jne
mov
int
or
jno
push
mov
inc
daa
ficoms
cmp
cmp
imul
fistpll
out
inc
inc
lahf
ret
mov
test
pop
lret
sub
adc
lahf
or
shrl
dec
shlb
test
inc
inc
jo
fsincos
mov
addr16
sbb
pmullw
sahf
int
pop
das
jecxz
leave
fimull
xor
adc
sbb
push
out
and
xor
cmp
push
add
xchg
xchg
dec
in
sahf
fwait
loope
sub
fdivrl
shlb
xor
xchg
dec
movsb
stos
hlt
lcall
adc
es
or
fsts
xchg
fsts
fstps
cmp
inc
mov
inc
xor
imul
call
push
and
sub
adc
sbb
mov
shrl
xor
jge
mov
xchg
jmp
stc
jae
or
inc
scas
cmpsb
jle
hlt
shll
pop
ljmp
xchg
daa
out
sbb
pop
adc
xor
pop
movsl
sub
adc
jg
cli
mov
adc
jg
push
in
fisubs
pop
dec
rol
and
jmp
sarb
adc
clc
test
mov
mov
stos
adc
jno
jae
cmp
fwait
mov
cmp
stc
loopne
shlb
mov
out
pop
ds
and
adc
inc
sub
data16
ljmp
ja
dec
push
in
xor
mov
test
or
push
in
dec
sbb
std
test
stc
ret
dec
push
xor
nop
iret
pop
jmp
lds
cwtl
mov
outsb
rcrl
mov
adc
andb
xchg
pop
je
sub
sbb
jl
mov
lock
push
sbbb
stc
add
sub
push
movsl
je
jmp
jp
test
mov
mov
dec
call
pop
pop
movsl
repnz
push
add
js
insb
add
mov
in
decb
push
neg
ja
mov
jns
aam
cmpsl
sub
in
mov
mov
jo
stc
push
mov
aad
or
in
icebp
jmp
dec
mov
lods
jmp
into
jmp
mov
fldlg2
jns
jecxz
xor
cmp
fdivr
xchg
xor
xchg
adc
jo
push
data16
fldl
hlt
xor
ljmp
stos
rcr
mov
push
imull
fildl
outsb
mov
jl
lds
enter
popl
js
add
mov
push
outsb
ret
cmp
mov
jne
leave
cltd
add
fiaddl
xor
jne
aaa
js
mov
cmp
nop
hlt
int
adc
aas
inc
add
lret
cmp
or
cmp
push
pop
xchg
call
cltd
leave
les
repz
cli
cmpsb
bnd
inc
leave
das
mov
pop
in
es
pop
ja
jbe
divb
sti
mov
dec
lahf
insb
fsubs
and
test
or
and
popa
inc
mov
scas
mov
loopne
push
mov
mov
hlt
sbb
pop
fldt
rcl
int
mov
enter
and
dec
sub
outsb
or
xor
scas
fmull
sbbl
cmpb
test
inc
cmp
add
cltd
inc
or
pop
mov
insl
mov
mov
cmpsl
cmp
loopne
ret
sti
in
fwait
sahf
das
cli
sahf
shl
test
mov
js
cmpsb
jl
scas
and
inc
lods
jbe
pop
pusha
roll
les
femms
xlat
lods
jmp
lret
add
fisttpl
xchg
fs
sbb
or
mov
adc
outsb
add
mov
mov
push
in
or
or
insb
or
fcoml
pushf
xor
outsb
rcl
xchg
test
fwait
subb
pop
push
insl
ror
loopne
ficoml
cmp
sub
in
mov
fidivrs
xor
mov
outsl
mov
xor
rcll
or
cmc
add
jne
scas
scas
sbb
sahf
insl
fdivl
test
inc
in
jae
pusha
dec
pop
repnz
repnz
cmpsb
int3
mov
ljmp
fnstcw
mov
add
cmc
leave
dec
xchg
lret
scas
out
fsubrl
hlt
cmpsl
fsts
dec
sbb
pop
inc
or
pop
aad
mov
int
xchg
pop
cwtl
mov
loope
jb
inc
lock
fidivrs
xlat
sbb
fmull
add
dec
addr16
jg
ja
fmull
mov
mov
sbb
in
mov
mov
add
movl
dec
cmpsb
int
test
mov
clc
jge
mov
cld
clc
ss
cmpb
repz
movsb
lcall
imul
pop
fsubs
push
addr16
push
cld
sub
test
popaw
popf
sub
mov
in
loopne
iret
lea
xor
test
xchg
and
jmp
mov
cmp
lods
jb
pop
lock
test
jge
inc
leave
sbb
inc
in
inc
inc
jno
or
loopne
rorl
hlt
mov
mov
or
push
sub
jae
mov
inc
and
jbe
sub
daa
es
cmpb
jg
cmp
or
push
dec
or
sbb
mov
arpl
adc
lahf
sbb
ds
jbe
push
and
cmp
cmp
xor
aaa
push
test
iret
sbb
stos
rcrl
and
push
addb
lret
inc
pop
aad
sbb
mov
jecxz
adc
fldl
inc
out
cmp
push
sarb
pop
test
xlat
push
jb
mov
sahf
jg
popa
xor
shll
ficoms
xchg
outsl
mov
clc
loop
outsb
mov
stos
xchg
jbe
or
iret
scas
cltd
das
push
add
ds
loope
test
xchg
pop
lcall
or
mov
enter
cs
push
jge
jecxz
std
fbstp
inc
jmp
cmpsl
inc
je
out
push
outsl
and
idiv
cmp
dec
dec
push
sbb
imul
or
loop
dec
inc
sub
sbb
fldt
orb
pusha
test
jnp
lahf
mulb
lea
insl
mov
pop
fildl
sbb
sbb
in
andb
adc
stc
stos
ds
dec
mov
mov
das
ret
or
stos
test
fs
xor
or
cmp
negl
std
iret
jg
sbb
jge
sarl
xchg
cmp
and
sub
leave
aad
mov
ljmp
icebp
ret
and
xchg
ljmp
loopne
push
fwait
mov
sub
in
mov
cltd
jae
adcl
sub
pusha
sub
sub
pop
mov
es
rcl
sahf
test
outsl
xor
sarb
sbb
jecxz
es
xor
jl
pop
pop
inc
jae
sbb
dec
sbb
test
xor
mov
sbb
icebp
out
inc
ffreep
int
aam
out
int3
inc
sub
fs
negl
adc
mov
fwait
push
nop
mov
jb
dec
dec
or
pop
sbb
cli
pop
loope
in
in
mov
push
imul
cmp
inc
sti
cmp
sti
arpl
push
movl
stc
in
out
xchg
les
icebp
lods
subb
ja
rcr
inc
loop
jmp
lret
xchg
cmp
mov
mov
loop
cmp
pop
lret
pop
cmc
inc
jg
dec
dec
out
ret
ret
cmpb
sub
ljmp
hlt
dec
test
pop
out
cld
and
loop
iret
xor
mov
mov
xchg
adc
out
lcall
mov
rcrl
pop
mov
adc
xchg
lahf
repnz
xchg
test
int
dec
adc
iret
push
dec
insb
jecxz
repz
std
adc
push
hlt
pushf
cmp
repz
shll
sbb
sarb
add
out
daa
cmovb
mov
sbb
and
mov
rolb
or
insl
es
cmp
inc
xchg
scas
insb
xchg
dec
lock
test
orl
jnp
add
xor
into
sbb
jp
xchg
push
stos
inc
inc
js
popa
pop
cltd
xchg
push
ss
lret
int3
inc
fidivrs
lret
pop
sub
insb
xchg
int
or
and
adc
icebp
filds
xchg
pop
mov
ficomps
pop
sub
rcl
fsubr
std
push
incl
adc
fs
popf
mov
pushf
shll
and
jecxz
or
loop
mov
xchg
stc
pop
pop
xor
inc
push
fmul
aad
insl
shrl
pop
fs
stos
out
popl
dec
add
mov
std
cmp
ret
adc
fsubs
cmpsb
mov
dec
in
icebp
jbe
lret
push
adc
mov
mov
cli
sbb
mov
pop
xchg
fldcw
pop
gs
and
orb
or
hlt
out
mov
ffree
adc
sbb
insb
or
das
xchg
out
inc
sub
lcall
add
ja
aam
inc
nop
adc
push
add
xorb
push
ds
shl
iret
insl
in
push
arpl
clc
hlt
sbbb
repnz
pop
mov
mov
call
and
inc
pop
stc
mov
ds
pop
in
inc
jbe
inc
std
mov
xchg
sbb
adc
inc
stos
pop
mov
aaa
and
fwait
pop
lods
cmc
mov
clc
adc
mov
mov
inc
cmp
sub
mov
stos
cwtl
xchg
mov
pop
clc
sbb
rclb
testb
shl
xorb
jbe
in
mov
xchg
or
xchg
in
adc
jb
cmp
mov
mov
push
jle
sbb
jo
mov
push
pop
js
cmpsl
rcrb
hlt
sbb
inc
sub
insb
cmpsl
mov
inc
sub
jmp
xlat
fcomp
sbb
xor
std
xlat
mov
and
call
add
clc
jecxz
jnp
xchg
lods
test
or
lret
pop
pusha
rcll
xor
int
push
fnstcw
jb
sbb
mov
ret
push
addl
mov
lret
push
mov
mov
mov
and
mov
adc
mov
pop
int3
es
js
aam
insl
imul
dec
mov
jg
pop
add
hlt
into
cmp
mov
daa
das
gs
jle
mov
pop
nop
mov
call
xchg
dec
inc
sub
leave
xor
cmpsb
mov
jmp
pop
rol
push
add
icebp
mov
jns
jecxz
lods
cmp
mov
jmp
mov
mov
inc
jp
push
inc
mov
mov
into
mov
das
dec
and
xchg
popf
test
stos
sub
out
fldcw
xor
pop
mov
insb
jle
bound
inc
in
jbe
dec
or
sub
into
enter
xor
je
cmpsb
xor
mov
mov
fstl
mov
arpl
inc
dec
hlt
cli
jne
pusha
les
test
xor
inc
ljmp
cs
push
mov
repnz
add
hlt
xor
sbbl
cltd
cmc
jbe
dec
fwait
push
es
lret
mov
lret
sub
lods
jb
sub
pop
cltd
test
sbb
push
std
push
mov
and
push
stos
lea
sbb
xchg
xor
daa
push
mov
addr16
and
mov
or
in
inc
insb
test
mov
dec
test
push
fisttpll
fimuls
movmskps
fstl
aad
imul
lret
ds
sub
mov
aam
imul
ret
jg
inc
mov
xor
add
sbb
insb
or
adc
mov
test
mov
cwtl
cmp
in
cltd
jo
cmc
jnp
ret
xor
jmp
fcmovnbe
ljmp
rorb
inc
xchg
ret
inc
dec
push
inc
jmp
scas
out
jge
jns
out
jmp
jb
sub
fistpll
cmpsb
jmp
mov
xchg
cmp
jbe
mov
jmp
orl
cmpsl
dec
fisttps
orl
xchg
mov
in
jb
jmp
add
mov
adcb
paddusb
mov
cmp
or
push
mov
and
das
jle
inc
ficompl
ffree
or
inc
dec
popf
dec
cmp
or
xor
dec
mov
cmp
mov
loopne
sarb
or
mov
mov
pop
xorl
xrelease
pop
imul
jbe
int3
imul
js
add
into
sbb
movsl
fadds
movsb
cmp
dec
mov
jl
sbb
es
in
jl
pop
sub
cli
xor
mov
xchg
lock
test
push
lahf
movsl
sub
add
pusha
dec
pop
jo
dec
lret
cltd
sahf
sub
push
fwait
jno
stos
mov
loop
push
test
mov
xchg
add
pop
fs
loop
out
iret
dec
mov
shl
int3
bound
and
daa
gs
add
sub
js
pop
je
xchg
pop
leave
insb
xchg
daa
icebp
dec
mov
mov
pop
xor
outsl
inc
jnp
dec
mov
push
gs
dec
mov
out
inc
push
sahf
sbb
cmp
loope
scas
mov
push
stos
and
cmp
pusha
or
and
add
out
test
adc
or
jo
adc
popa
mov
cmc
or
mov
jne
dec
out
sub
loope
lods
or
ret
sbb
cmp
add
mov
dec
ja
popf
xchg
and
add
cmp
std
movsb
cmpsb
xchg
lcall
adc
popa
inc
cmpl
es
ljmp
cmpsl
and
add
push
xor
xlat
inc
test
cltd
fwait
mov
lcall
insb
push
repnz
and
inc
and
lods
mov
mov
jbe,pn
sub
divb
xor
mulb
lods
test
inc
stos
or
mov
sub
jmp
shlb
push
sub
sbb
lret
push
test
mov
mov
jne
xor
pop
cmp
dec
cld
sbb
pop
sub
sub
rorb
jne
out
popf
adc
cld
xchg
dec
cmp
add
lds
shl
rcrl
sub
xchg
mov
in
ljmp
in
or
cmpsl
adc
loop,pn
jno
leave
rcrb
xor
sbb
sahf
and
loop
movsb
hlt
cmp
mov
repnz
cmp
xchg
dec
sub
jae
push
lret
pop
fwait
cltd
aas
mov
dec
mov
iret
pop
cmc
ret
aaa
sub
insl
xor
fldl
sub
mov
enter
dec
mov
stc
ds
push
mov
mov
jns
scas
notb
jbe
aaa
add
xor
lods
add
jo
sbb
add
push
push
and
pop
sbb
pop
xchg
loop
xchg
shl
pop
sub
xchg
arpl
or
or
outsb
xchg
push
and
push
or
mov
loopne
ss
xor
inc
mov
shll
cmp
sti
add
mov
ret
add
push
mov
cmovl
popf
test
cmp
jne
repnz
addr16
sarb
addb
and
sbb
push
insl
pop
xchg
andl
cmp
push
xchg
sbbl
lret
in
mov
mov
fstp
hlt
int
pop
cld
movl
cmp
sub
xor
push
and
sahf
fidivrs
test
addr16
lret
push
or
cltd
jnp
cmpsl
aam
mov
ret
ljmp
adc
pop
subb
push
das
jp
and
sar
pusha
mov
leave
adcb
dec
mull
mov
pop
gs
lods
aas
mov
and
mov
dec
cmp
cwtl
mov
ret
dec
mov
ljmp
or
lret
or
pop
xchg
adc
cmp
adc
ret
xlat
cmp
sub
loop
call
shll
fwait
mov
push
mov
pusha
push
lds
lcall
js
stos
add
push
jo
insb
adc
and
out
nop
add
hlt
lahf
std
in
mov
pop
inc
lret
sbb
jo
ret
mov
repnz
jo
outsb
cmpsl
inc
pop
hlt
int
movsl
insl
ss
sbb
mov
mov
lret
and
and
mov
mov
mov
imul
push
xchg
add
pop
jmp
mov
sbb
mov
mov
sbbb
or
push
repz
hlt
out
aas
xchg
cmpsb
or
lds
push
jnp
in
js
lock
jae
outsb
fwait
mov
cmpsb
inc
sarb
test
jb
sbb
push
mov
inc
into
imul
inc
test
pop
pop
jp
dec
dec
cwtl
mov
incl
adc
sbb
fiadds
daa
or
fs
popf
xor
repz
cmpsl
ds
fcompl
xchg
jle
mov
mov
clc
push
call
cmp
or
sbb
inc
add
adc
int
push
leave
dec
sub
in
lahf
adc
dec
cmp
xchg
jbe
xchg
pop
inc
pusha
negb
xchg
mov
lret
push
fcmovb
jp
ljmp
mov
add
shll
push
push
rcl
fwait
imul
xor
loopne
inc
ret
ss
lcall
ds
mov
pop
out
je
lret
xor
mov
mov
in
push
rolb
fs
jmp
inc
pop
and
cs
lahf
mov
jb
pop
push
inc
mov
frstor
push
icebp
sbbl
ds
push
jmp
in
adc
jo
in
stos
test
sbb
jle
hlt
pop
cld
cmpsb
or
ss
addb
pop
and
mov
test
sbb
dec
out
sbb
inc
out
inc
push
push
mov
inc
jb
xlat
jmp
mov
add
xchg
leave
adc
loope
xlat
sbb
jbe
sbb
in
push
das
ret
dec
lods
or
xchg
sub
xchg
mov
mov
fstpl
clc
adcb
out
adc
in
xchg
push
fwait
leave
mov
es
inc
xor
and
xor
cli
fsin
sbb
add
call
popa
push
sub
xchg
cwtl
push
dec
les
call
aam
jl
scas
in
push
adc
add
out
or
shl
mov
add
fstl
icebp
mull
lcall
dec
dec
fimull
loop
movsb
adc
xchg
call
in
loope
ret
mov
divb
cmpsl
imul
mov
aam
fiaddl
inc
xchg
mov
xor
inc
push
or
movl
lock
movsb
and
aad
iret
push
push
pop
sub
out
or
adc
mov
mov
rorl
push
dec
decl
rorl
or
xchg
cmp
pop
je
int3
sbb
push
jge
sub
movsb
sbb
add
sub
and
jg
push
xor
lret
mov
jns
lea
je
cmp
mov
and
repz
pop
retw
stos
in
lahf
mov
lret
out
movsl
frstor
cltd
adc
and
adc
cs
fidivl
je
xchg
push
dec
cltd
jbe
push
jo
mov
in
sub
inc
push
pop
dec
jp
jmp
push
scas
idivl
dec
dec
mov
mov
xor
scas
jmp
xchg
cli
lds
jmp
push
add
lods
arpl
pushw
xor
shll
aad
je
cmc
pushf
pop
lods
jbe
daa
sarb
dec
xchg
repnz
call
xchg
rolb
dec
mov
mov
fistpll
add
sbb
dec
dec
dec
mov
ss
xchg
xor
movsb
decl
hlt
gs
ss
add
cwtl
adc
adc
xor
sub
mov
jb
mov
mov
push
cmp
stos
mov
adc
jle
sub
out
lahf
int
xchg
aas
mov
aad
add
mov
mov
xchg
xchg
jae
ds
sahf
jecxz
int
jae
out
fadd
xchg
dec
pop
scas
daa
push
div
out
fcmovne
xchg
push
mov
pop
mov
loope
je
mov
push
mov
test
lcall
pusha
fwait
pop
push
sbb
outsl
int3
jle
or
fcomps
and
cld
movsl
or
call
xchg
jmp
es
andb
push
rolb
loope
ret
insb
jmp
sub
dec
and
imul
adc
push
aas
cmp
js
outsl
popa
jbe
shll
movsb
push
inc
aas
dec
imul
into
insb
sbb
pop
adc
aad
push
mov
stos
adc
cmp
xlat
nop
into
sbb
pop
xor
mov
push
pusha
lods
sub
in
inc
loopne
shll
adc
ja
xchg
xor
inc
mov
jns
loopne
inc
inc
xchg
aad
fisubrs
jb
test
stos
je
jnp
lahf
xor
inc
mov
cs
out
sahf
push
jo
mov
cwtl
mov
lahf
fldt
loopne
out
nop
sub
sub
cmp
sub
or
push
pop
std
std
inc
add
fwait
stos
inc
or
xchg
loop
pop
mov
mov
imul
fwait
popa
and
std
pusha
arpl
enter
lds
push
dec
jg
orl
out
std
dec
sub
add
mov
xchg
jns
ss
sub
leave
in
inc
fcompl
insb
add
shlb
jmp
ret
jl
popa
movsl
repnz
sahf
dec
divb
fwait
data16
in
out
je
sbb
cmp
lock
repz
xchg
into
lret
fxch
in
sub
insb
jle
scas
das
cmc
and
in
aas
mov
and
ds
sbb
xchg
data16
jecxz
int3
dec
popa
pop
jb
push
das
ret
fisttps
inc
cmp
nop
mov
adc
jae
popf
push
jb
or
ror
insl
sbb
mov
dec
mov
ds
stc
cmpsl
sbb
popl
push
in
pop
addr16
push
insl
in
mov
jecxz
test
jnp
aam
mov
xchg
pop
inc
push
jns
lods
or
sub
int3
sub
fnsave
jp
fiaddl
jmp
jge
ror
arpl
inc
cmp
mov
xchg
xor
adc
insl
rolb
orps
cltd
pusha
pop
or
addr16
mov
jne
das
fidivl
lea
jae
push
lods
cs
outsl
xorb
jb
fcoms
fsubrp
pop
fadds
int3
outsb
leave
jle
mov
jg
gs
jl
inc
movsb
scas
cwtl
popa
jmp
pushf
sbb
cmp
adcl
cmc
fs
pushf
xchg
inc
pop
or
cmp
decl
popa
pop
filds
fwait
xchg
push
inc
mov
out
push
and
pop
setbe
iret
inc
inc
lds
addr16
or
fs
dec
ret
mov
sub
inc
ja
dec
fnstsw
pushf
cmp
jp
jg
test
and
lret
push
push
bound
xor
inc
test
mov
lcall
adc
outsb
jnp
lret
jne
out
dec
arpl
cs
lahf
mov
or
sarb
jg
mov
push
loope
pop
push
sbb
xchg
push
xor
lods
shrl
ss
fld
shl
inc
adc
adc
jecxz
jmp
test
mov
mov
add
rcl
push
adc
pop
mov
sbb
dec
outsl
cwtl
shl
mov
lahf
adc
and
xor
imul
push
sbb
push
or
ja
out
or
scas
shrb
sbb
jl
lahf
xor
adc
sti
sbb
push
movb
pusha
push
in
pop
cmpsb
addr16
in
adc
cltd
movsl
xchg
push
push
movsl
outsl
sbb
mov
cltd
sub
cmpsb
and
imul
or
adc
sub
out
sbb
inc
add
jecxz
add
inc
sbb
pusha
pop
mov
xor
std
mov
dec
dec
aaa
sti
fists
xchg
mov
push
imul
repnz
insl
cld
push
push
insb
jbe
les
jnp
push
hlt
scas
out
push
popf
push
push
xchg
jecxz
mov
test
push
ret
das
sbb
mov
cmc
imul
cmp
add
push
aad
les
or
ljmp
ficompl
xchg
sub
adc
xchg
cli
xchg
cmpsl
add
cmp
fists
pop
cmp
add
push
xor
cmpsl
lret
hlt
or
or
sti
sbb
iret
mov
dec
test
pop
popf
div
pop
sub
dec
sti
icebp
in
je
sub
inc
mov
cwtl
nop
fldl
jne
nop
pushl
mov
shlb
popf
sub
jnp
inc
fs
scas
hlt
add
cmpb
push
xchg
xchg
jp
sub
int
frstor
fildl
fsubrs
push
call
inc
mov
mov
mov
scas
mov
or
insl
mov
shll
pop
js
or
sahf
and
adc
adcb
les
mov
das
mov
push
xor
popa
inc
cmp
int
or
leave
je
xor
pop
xchg
or
inc
xor
mov
pop
jbe
pop
dec
movsl
pop
add
inc
std
sbb
sahf
xor
aaa
test
push
stc
push
popa
pop
and
lcall
out
test
adc
jmp
loope
cmpsl
or
mov
rolb
repnz
ds
les
in
ljmp
mov
and
push
jb
or
fwait
and
add
mov
ret
imul
mov
xchg
push
xchg
pop
inc
mov
mov
bound
lods
dec
enter
int3
mov
dec
pop
and
shll
push
seto
cmp
push
sbb
push
notl
lahf
push
outsb
pop
ljmp
ss
mov
mov
xlat
in
loopne
lcall
push
sbb
mov
and
pop
mov
stos
cld
test
imull
mov
mov
xchg
pop
jne
loop
jle
inc
xchg
pop
push
std
popf
out
xchg
pop
cmc
inc
insl
push
xchg
test
test
dec
mov
xchg
dec
mov
add
je
or
outsb
mov
stos
cmpsb
and
js
fbstp
mov
stos
xchg
pop
lods
lcall
pusha
outsl
xor
xor
fadd
loop
cmpsb
negb
jno
in
or
push
icebp
and
dec
push
and
sbb
push
enter
inc
jb
adc
jmp
cmp
xor
jp
push
dec
stos
sbb
jp
fsts
cli
xchg
ret
movsl
mov
xchg
rcr
sbbl
pop
jb
jo
pusha
popa
mov
cli
cmpsb
mov
sbb
push
xlat
ds
mov
fadds
sub
push
dec
mull
mov
out
jb
jg
inc
leave
xor
jno
mov
xlat
sarb
or
cs
sbb
mov
push
rclb
imul
adc
pop
stc
cmp
jne
ficompl
lret
cmpsb
into
mov
andb
daa
std
add
mov
sahf
insl
mov
cmp
movsl
xchg
jns
mov
cltd
std
repz
jg
pop
add
jo
and
xchg
cwtl
mov
adc
out
and
movsl
orb
fisttpl
cmpsb
cmp
das
mov
movsb
cld
push
pop
adc
in
pop
dec
ljmp
arpl
sbb
scas
lods
pushf
clc
cmpl
xlat
js
jle
hlt
fsincos
ljmp
sub
xchg
aaa
pop
push
ds
or
inc
loop
iret
dec
inc
jno
inc
fiaddl
add
jno
lods
xchg
xor
xchg
jle
push
notl
push
loope
imul
mov
addr16
jbe
pushf
gs
dec
cld
mov
xor
in
ds
cmpsl
stc
jbe
popa
xor
pop
sub
xor
inc
pop
mov
push
push
decl
sub
adc
cld
jle
cltd
jb
cmpsb
aad
or
sbbb
push
in
pop
adc
push
jb
cmpsb
mov
sub
pop
nop
cmp
cwtl
mov
repnz
push
fmull
stos
lds
into
or
popa
sbb
dec
jnp
push
popa
sbb
dec
les
jns
pop
push
mov
cmp
sahf
mov
sub
cmp
mov
push
adc
xor
fs
inc
divb
lods
push
jne
rcr
nop
adc
les
add
arpl
add
repz
arpl
imul
pop
gs
sub
sbb
movsb
sub
pop
adc
pop
mov
outsl
jb
xor
mov
pop
push
mov
hlt
pop
in
xadd
sub
fnsave
insl
cmp
cmp
icebp
push
adc
into
incb
call
sub
cltd
pop
and
int
and
push
jnp
repnz
aaa
add
out
cwtl
dec
jne
lock
in
in
call
movsb
das
cmp
cmpsb
imul
push
aad
sahf
sbb
pop
hlt
inc
jne
clc
and
imul
or
dec
push
into
inc
std
popa
sbb
push
mov
lds
push
stos
mov
lret
out
mov
aas
cmpsb
adc
pop
mov
push
inc
lret
sub
arpl
fisubrs
dec
push
call
or
fcmovnbe
cs
mov
dec
inc
mov
insb
jns
dec
rcl
je
lahf
cmp
loope
jno
push
rolb
in
pop
add
int3
mov
stos
push
sub
daa
js
bound
push
icebp
inc
cli
mov
jmp
out
jg
call
and
and
and
imul
aad
jne
mov
sbb
jle
cmp
sbb
mov
loopne
sbb
movsb
jge
dec
iret
data16
outsb
jp
into
and
popa
sti
pop
add
jns
test
pop
mov
and
push
mov
outsb
pop
push
jmp
xchg
sub
pop
jb
push
push
fucomp
jne
cli
pushf
jmp
inc
cli
std
pop
sbb
and
push
xor
mov
adc
inc
test
lea
xor
out
cmp
sub
jp
cld
imul
and
outsl
xor
fsubs
jl
fwait
mov
je
xchg
push
test
push
lcall
xor
adc
enter
xchg
mov
push
pop
inc
dec
dec
and
jae
cwtl
call
add
jmp
sub
pusha
scas
push
sbb
loope
mov
mov
popf
loopne
imul
sahf
xchg
sbb
call
imul
jmp
andl
addr16
imul
lcall
rcr
xchg
cmp
daa
mov
mov
js
cmp
xor
or
mov
cwtl
or
adc
lods
lea
pop
es
mov
out
repz
daa
sbb
and
jg
mov
adc
pop
cmp
jl
addr16
ja
mov
mov
jmp
lods
xchg
and
imul
pop
je
add
pop
sub
mov
clc
sbb
and
fcmovnu
sarb
lret
inc
dec
push
lea
outsl
lea
inc
lods
scas
scas
pop
popa
mov
stos
mov
aas
popa
add
shrb
fs
add
notb
inc
call
outsb
add
aam
pop
cltd
dec
stos
stos
sbb
fmul
push
dec
cld
pop
enter
push
push
repnz
daa
mov
jns
addl
dec
shlb
sbb
arpl
arpl
cmpsb
inc
addb
imul
push
imul
inc
pop
data16
push
add
pop
fldcw
xor
cmp
mov
xlat
fucomip
push
inc
sbb
nop
es
movaps
inc
xor
cs
and
call
test
dec
mov
sbb
stos
adc
std
mov
pop
xchg
xchg
sub
push
pop
std
mov
clc
or
pop
inc
jae
mov
ja,pt
int
push
mov
lcall
out
and
mov
lahf
sub
sbb
fwait
xor
cmp
addr16
fisttps
dec
in
pop
addb
lea
cltd
pushf
out
scas
pusha
incb
ret
cmp
dec
es
divl
mov
out
outsl
push
dec
xchg
andl
fisubrs
mov
jae
jbe
test
or
cmp
mov
xor
ds
in
sub
frstor
pop
loopne
roll
test
test
sub
sbb
pushf
mov
popf
pop
les
and
inc
enter
fsts
add
dec
dec
or
out
jecxz
sbbl
rcr
add
andl
xor
add
sbb
xor
jns
adc
pushf
movsb
push
dec
jl,pt
adc
push
es
rcrl
xor
pop
xchg
stos
mov
mov
mov
mov
dec
sbb
mov
sub
arpl
sbb
sbb
jle
lods
mov
rcl
cmc
out
push
mov
loopne
cs
mov
pop
ja
aad
dec
jnp
call
mov
fs
adc
out
icebp
pop
in
adc
jmp
inc
ret
aas
aam
mov
push
int3
loopne
bound
loopne
jb
or
imul
orb
cmp
and
xchg
mov
jno
into
push
sbb
fstpl
dec
mov
mov
loop
into
mov
addb
lahf
sbb
mov
gs
cwtl
cwtl
js
cs
xchg
dec
dec
jnp
loop
pushl
bound
icebp
imull
les
xor
and
out
repnz
gs
ljmp
movsl
out
cmp
mov
add
shll
outsb
push
dec
popf
imul
lock
pop
or
lret
int
push
ficompl
dec
jmp
xor
sub
dec
fwait
mov
or
sub
mov
gs
rol
in
pushl
sub
push
and
adc
adc
shrl
dec
xchg
add
and
ds
and
out
das
cmc
fldlg2
out
mov
sub
add
and
iret
ror
pusha
jp
daa
adc
cmpsb
test
movl
xchg
push
or
push
dec
sub
cmp
pop
stos
and
sbb
lcall
xchg
mov
push
cltd
sahf
push
mov
cli
and
scas
not
and
shll
xchg
aam
jns
cmp
sahf
push
add
fisubl
stc
xchg
mov
pusha
movzwl
cmpsb
xchg
rcrl
cwtl
in
pop
ljmp
cmp
stos
jp
mov
in
mov
movsb
pop
or
mov
xor
movsb
dec
and
jge
ja
push
es
cmp
or
out
ret
xchg
out
sahf
fsubs
jmp
or
cmpsl
sbb
and
mov
or
mov
mov
and
and
fmulp
rcrb
into
cmp
xchg
dec
scas
fildll
push
xchg
fsts
pushf
nop
dec
test
aaa
inc
push
inc
adc
adc
stc
lds
mov
cwtl
int3
inc
xor
lret
add
mov
inc
adcb
xchg
mov
add
xor
adc
lret
and
jbe
cmp
hlt
sbb
xor
ljmp
jnp
xchg
jns
jge
mov
in
lods
leave
add
push
mov
out
stos
add
rcl
and
add
or
aaa
lret
or
rclb
mov
push
xor
stos
les
jns
xorl
mov
inc
or
mov
std
imul
call
lcall
mov
sahf
sbb
and
sub
mov
push
xor
adcb
lods
and
push
xchg
out
cld
inc
mov
xor
stc
scas
mov
cmp
xchg
imul
cmp
dec
pop
pop
adc
push
in
pop
into
lret
mov
sti
fucom
jae
aam
cmp
movsl
sbb
sbbb
fcoms
outsl
jne
jo
jmp
das
pop
sbbb
out
add
mov
cmc
adc
pop
mov
lahf
lods
add
mov
xchg
pop
add
inc
xchg
pop
cli
push
pop
sbb
adc
fisubrl
inc
or
cmp
std
and
push
pop
jg
sbb
in
je
cli
cmp
rcll
jl
inc
xchg
cs
in
cwtl
incl
dec
xchg
loope
sets
or
cmp
jl
jae
lods
incb
pushf
jecxz
xchg
cwtl
test
sbbb
lods
xchg
pop
sub
cltd
popf
es
xchg
add
movsl
stos
daa
and
int
dec
sti
mov
sub
out
adc
sub
scas
imulb
jns
ret
ljmp
mov
mov
cmp
mov
mov
cmc
push
cli
mov
mov
jne
lods
stos
mov
lcall
movsb
jmp
stc
pop
addr16
into
ss
add
imul
leave
mov
ficoml
orl
xchg
stc
lret
es
pop
js
cmp
sub
push
push
sub
adc
dec
test
inc
inc
fs
js
jg
dec
or
mov
mov
movsl
cmp
rorb
cmpsb
inc
or
jne
outsb
mov
push
imul
dec
bound
pop
jae
imul
push
mov
pop
cmpsb
adc
fisubrs
movl
aam
dec
in
push
mov
dec
loop
dec
adc
stc
push
lahf
push
mov
cmp
xor
sbb
movsb
out
push
test
ret
pushf
and
xor
daa
push
daa
add
lcall
cmp
push
pushf
hlt
pop
xchg
sahf
sbb
jbe
es
mov
mov
or
sti
inc
xchg
repnz
nop
dec
mov
xchg
mov
andl
add
iret
mov
cs
sub
cmpsl
addr16
out
aad
imul
jne
mov
push
dec
jp
and
bound
cmp
cld
ret
stos
lcall
sbb
mov
xchg
das
cmpsl
adc
insl
xchg
idivb
add
dec
adc
mov
pop
mov
mov
sbbl
sub
adc
add
andb
insb
imul
cmp
lods
aas
rcrl
push
and
insl
mov
push
pop
in
jle
jp
pop
inc
jae
push
enter
or
mov
jmp
cmc
jecxz
xchg
in
mov
pop
popf
jne
addr16
jae
mov
mov
cmp
cmpl
mov
mov
dec
mov
jb
sbb
add
pop
testb
ljmp
stos
ret
or
pop
aaa
cwtl
cltd
ja
nop
out
adc
dec
pop
int
inc
cmp
into
jne
mov
pop
jno
fisubrl
xor
outsb
jns
imulb
mov
scas
mov
xor
cmp
outsl
rol
adc
push
enter
push
fmul
xchg
pop
adc
daa
sub
insb
ljmp
dec
ret
clc
xor
insb
nop
dec
mov
xor
lods
sbb
push
ret
inc
jg
sbb
cmpsl
jno
je
push
mov
fldt
addr16
add
dec
cltd
push
adc
lods
and
pop
xchg
sbb
adc
cmp
imul
pop
add
cmp
and
scas
xor
pop
aaa
popa
mov
xchg
test
mov
or
imul
das
icebp
inc
cltd
pop
insb
call
cmp
ret
cmc
sub
cs
out
xchg
xor
outsl
jbe
lods
xchg
lret
outsl
clc
inc
pop
adc
leave
ret
fwait
adc
xlat
xor
mov
xor
mov
fisubl
mov
push
fdivrl
in
aas
fimull
dec
les
push
dec
dec
ficomps
pop
js
push
xlat
jns
clc
mov
mov
outsb
scas
insl
push
pushf
lds
pop
jne
hlt
lds
out
in
add
int3
mov
cmp
movsl
in
inc
sub
mov
sub
mov
pop
loop
cld
add
insb
xchg
add
adcl
mov
sti
jnp
aad
rolb
sbb
dec
pop
pop
xor
cmp
fstl
push
mov
push
or
insl
je
fmuls
sbb
daa
dec
int
jbe
iret
das
cli
or
mov
sub
arpl
icebp
dec
pushf
ds
arpl
imul
sub
add
jp
repz
ja
rorl
cmpsb
jp
out
mov
cmp
xchg
fmuls
add
loopne
xchg
arpl
and
fnstenv
gs
push
or
divl
xor
jmp
mov
add
pop
mov
in
jnp
jnp
repz
pop
push
cmp
mov
jae
inc
adc
or
jge
mov
and
xchg
sub
sbb
icebp
jb
in
xor
mov
fcoml
into
and
mov
lods
rorl
xchg
cmp
shrb
popf
cmp
jle
outsb
cmp
push
dec
test
push
xor
mov
mov
xor
xchg
loopne
es
inc
mov
arpl
and
movsl
mov
sub
stos
int3
daa
mov
mov
out
push
lret
mov
or
movsl
fs
not
fmull
sub
test
invd
ret
mov
test
xchg
jno
push
or
dec
loopne
cmp
movsl
sbb
adc
inc
lret
push
shl
cmp
pop
nop
dec
cld
outsb
pushf
and
and
movsb
add
fsubs
xchg
jno
push
repnz
mov
lcall
out
in
mul
mov
inc
scas
mov
cli
or
int3
cmp
and
rcr
fildl
cmp
call
outsb
sbb
pop
mov
pop
inc
stos
lds
xchg
fidivrl
xchg
xchg
dec
lods
test
cmpb
sub
pushf
jae
mov
stos
cmp
jae
cmp
inc
test
pusha
xchg
mov
loopne
mov
rolb
es
adc
lea
lods
and
push
jb
ds
sub
mov
mov
call
sbb
inc
mov
stos
dec
cmpl
repnz
out
outsb
mov
movsl
mov
das
sbb
fyl2x
mov
push
push
mov
pop
xor
call
bound
lock
mov
push
mov
pop
into
jmp
cmp
lahf
sti
or
subl
sub
test
cmc
in
or
push
push
add
ror
add
cld
je
cmc
inc
mov
das
pusha
fisubrl
lods
andb
movsl
retw
cmp
cmc
enter
cmp
jne
lods
mov
lods
jecxz
adc
cld
inc
jae
mov
mov
aam
popf
scas
in
int
inc
int
popf
mov
in
hlt
dec
mov
pop
cwtl
push
sub
jne
ds
and
push
inc
in
mov
and
aam
add
pop
ret
mov
adc
jge
adc
xor
mov
sbb
loopne
mov
std
or
and
jne
xor
leave
rcrb
daa
in
jno
cs
sub
and
pop
sub
mov
or
jbe
jp
in
test
cli
push
xor
ja
dec
jmp
inc
push
ss
js
push
adc
fcmovnu
es
mov
scas
dec
mov
cli
call
scas
es
and
push
lock
aam
push
pushf
leave
iret
shlb
clc
xorl
fisubrs
xchg
xor
pop
and
mov
and
ds
adc
jns
dec
ret
mov
fadds
jmp
enter
mov
test
mov
add
or
push
imul
xor
jl
mov
les
xchg
je
lcallw
lods
sub
daa
mul
pop
cmpl
dec
sub
sbb
adc
ljmp
or
and
pop
xor
gs
mov
shll
roll
in
xor
dec
push
sbbl
push
call
fcmovne
out
fcmovu
movsl
adc
arpl
ljmp
out
stc
add
jecxz
xchg
dec
insl
add
add
pushf
sub
jnp
and
sbb
dec
loopne
subb
lret
sbb
jo
cmp
test
pop
call
pop
add
adc
and
repnz
dec
icebp
pushf
inc
hlt
sbb
or
hlt
ss
xchg
lahf
in
add
test
jge
xchg
jge
pushf
pop
xchg
jb
mov
xchg
lea
add
sbbl
cld
pushf
mov
dec
movsb
xor
pop
arpl
fsubs
dec
insl
ljmp
push
sbb
rcrl
lret
je
subb
inc
jne
sti
lds
jno
push
mov
cli
int3
pusha
add
xchg
adc
inc
mov
xchg
or
pop
rcrl
je
mov
mull
xor
jnp
andb
adc
fwait
testl
cmovae
pop
mov
pop
pop
out
popf
xchg
mov
cmp
pop
fimull
je
test
jle
inc
mov
push
popa
fs
setae
and
cwtl
cmp
hlt
sbb
cmp
sti
inc
rcr
aaa
stos
outsb
sbb
insl
test
je
sbb
cmp
sbb
fwait
in
jno
cmpsl
rcl
inc
fbld
xchg
push
jecxz
cmpsb
xchg
nop
and
jb
inc
out
sti
cmp
jge
adc
dec
mov
iret
test
ljmp
jecxz
push
cld
lods
mov
test
ss
loopne
in
subl
in
sbb
sbb
cli
clc
imul
mov
pop
mov
and
pop
call
scas
das
bound
enter
cmp
outsl
rol
test
aas
sbb
push
mov
dec
pop
pushf
mov
inc
cli
lcall
sbbl
or
push
roll
roll
xchg
jae
or
js
add
int
aad
ficoml
test
aas
in
dec
dec
xor
xchg
adc
bound
push
pop
or
push
and
or
add
gs
pop
cltd
sbb
sub
mov
stos
sbb
jge
popa
sbb
jl
int3
pop
cli
loope
jge
jmp
sahf
xchg
mov
and
xorb
cmpsb
scas
mov
jmp
enter
cwtl
lcall
lods
or
shrl
adc
cmp
aaa
push
push
sub
jg
cmp
mov
dec
movsl
div
data16
repz
sub
push
loope
mov
mov
clc
mov
data16
mov
inc
mov
push
loope
adc
jmp
cmp
aaa
sub
push
rorb
push
jmp
cmpl
mov
pop
sub
jo
sub
push
mov
mov
lea
int3
fistps
inc
jb
dec
or
push
icebp
mov
inc
ja
xlat
pop
jl
out
ljmp
loope
outsb
fdivrl
lcall
or
jae
or
push
stos
in
or
roll
mov
dec
cli
test
sub
jg
inc
inc
mov
aad
call
mov
out
inc
and
or
addl
cmp
pusha
cli
push
std
sbb
shrl
out
xor
and
or
cmpsb
rcrb
dec
clc
stos
cmp
inc
cmp
mov
pop
xchg
mov
jns
dec
adc
ret
mov
fisttpl
insl
enter
xor
inc
dec
jmp
ret
mov
or
jecxz
xor
mov
rolb
inc
add
sbb
sub
add
enter
scas
sbb
add
xchg
sahf
pop
or
jg
rcrb
iret
clc
and
mov
in
mov
lods
int
ret
pop
and
pop
loope
fs
or
jne
nop
arpl
sub
pushf
cmp
mov
leave
in
xchg
addps
ss
xor
adc
je
loopne
call
test
jg
sbbb
cmp
pop
adc
adc
cld
mov
pop
mov
and
ds
js
fildl
adc
pusha
in
nop
not
fwait
pusha
inc
shr
gs
mov
cltd
cmc
aam
lock
add
xchg
pop
dec
ljmp
xchg
mov
leave
or
add
data16
in
mov
pop
loopne
mov
stos
xchg
push
fmuls
and
call
mov
mov
sbbl
xor
xchg
cli
xchg
cmp
cmp
jb
push
notb
lock
mov
xor
mov
dec
inc
pop
cli
sahf
ret
repz
xor
mov
xor
xchg
sbb
mov
cmp
mov
fdivs
cmc
test
popf
call
sbb
sti
iret
loop
sub
push
cltd
sub
aaa
lods
sub
imul
jecxz
jne
dec
mov
xchg
push
fwait
lock
add
sbb
xchg
mov
sti
cmp
out
cmpsb
ds
xor
into
add
daa
adc
xor
pop
sbb
xor
mov
or
jbe
imul
cmp
lahf
jne
pushf
dec
mov
inc
inc
mov
jmp
or
add
xor
popa
test
cmpsb
push
scas
sub
test
push
mov
sahf
roll
inc
push
imul
add
push
and
in
fsub
pop
lahf
cmp
pop
sbb
xchg
movsb
imul
push
xchg
int
arpl
shlb
mov
push
or
mov
outsl
aaa
movsb
push
and
xchg
cmp
pop
fsubl
pop
enter
cmp
lret
jecxz
cwtl
cltd
ss
jbe
dec
adc
addl
mov
xchg
dec
fcomps
and
test
outsl
addb
sub
mov
lds
jo
pusha
loop
repz
xchg
outsl
adc
cmpsb
inc
repz
xchg
mov
out
movsl
scas
imul
pop
lods
push
dec
add
rclb
push
lock
stos
cld
sub
sti
or
and
jb
push
inc
sbb
xor
xor
les
mov
outsb
repz
dec
loop
rcll
outsl
ret
push
outsl
dec
xchg
in
and
inc
aas
push
push
or
stos
loope
iret
sbb
paddusb
and
jp
fdivrs
aaa
pop
inc
add
iret
dec
out
int3
inc
roll
ficomps
xchg
sub
push
push
push
mov
leave
pop
ds
sti
sbb
xchg
push
mov
push
or
movsb
enter
push
cmc
fs
inc
and
jecxz
stc
mov
jbe
fbld
pop
jecxz
cld
and
xor
jge
sbbb
into
or
jp
fsubrl
lods
int3
ret
addr16
push
sahf
jg
sub
xchg
ja
dec
mov
mov
fcomip
or
inc
imul
push
jns
add
cmc
aam
push
jns
je
push
and
ljmp
out
bound
shll
jl
mov
inc
data16
incb
push
mov
cs
popf
push
xorb
repz
out
sti
enter
mov
xlat
lcall
inc
inc
aas
neg
adcl
adc
push
mov
fiaddl
lock
and
xor
addr16
and
imul
push
sub
mov
loopne
mov
xchg
iret
jo
mov
push
aad
cmp
or
insl
pop
cmpsb
adc
ss
rol
pop
cmp
pop
in
push
arpl
adc
dec
das
out
cmp
pop
repz
inc
cmpsb
push
add
xorb
cmp
out
std
inc
and
testl
cs
lahf
or
inc
mov
cmpsb
lods
or
mov
jbe
ljmp
mov
lock
mov
adc
add
push
shl
pusha
cmpsl
lahf
test
cmpsl
rol
pop
xchg
stos
sbb
lods
push
icebp
pop
rcll
aaa
xlat
imul
bound
lock
lds
inc
loopne
in
lcall
mov
jg
inc
sub
rol
push
inc
fucom
sbb
mov
addr16
jb
push
out
popf
je
and
pop
mov
rol
cli
dec
insb
mov
mov
adc
push
pop
shrl
xchg
into
jmp
mov
pop
inc
adc
loope,pt
out
data16
flds
pop
in
inc
xchg
ja
xor
add
imul
cmp
stos
lar
aaa
sub
inc
pop
inc
sahf
inc
fmuls
jge
sbb
pop
mov
sbb
push
lds
aam
sub
testb
mov
insb
xor
aam
mov
push
jnp
mov
pop
int
mov
loop
pop
fimuls
xchg
mov
movb
lmsw
pop
insb
push
ds
arpl
inc
adcb
outsb
mov
outsb
dec
adc
cwtl
ja
add
negl
or
push
mov
mov
pop
loopne
mov
or
inc
mov
das
shll
fiaddl
je
jg
out
push
mov
pop
stos
mov
xlat
clc
pop
cmp
mov
adc
add
sbb
ljmp
inc
xlat
sar
insl
mov
jb
mov
pop
fdiv
mov
notl
pushf
pop
lahf
dec
jns
in
or
sti
in
dec
sbb
inc
mov
hlt
lret
or
mov
aad
data16
push
sbb
cs
ja
lret
xchg
fstps
mov
mov
add
sub
addr16
les
push
jno
ficoml
inc
fistl
mov
or
aam
inc
xrelease
dec
mov
leave
dec
xor
insl
outsb
sbb
push
insb
sub
out
inc
lcall
add
push
ds
sbb
or
loop
jg
fmull
sbb
sahf
rclb
subl
pop
adc
daa
mov
add
cmp
imul
je
mov
cmpsb
test
mov
mov
sub
ds
pop
mov
sbb
sbb
fistps
pop
dec
in
or
gs
add
pushf
bound
push
stc
data16
jle
fs
adc
scas
jle
push
mov
iret
mov
pop
pop
jne
int
out
pcmpeqb
ja
dec
cmp
mov
sub
pop
push
enter
imul
sub
andb
pop
mov
out
fldt
pop
stos
sub
test
lret
dec
loopne
daa
or
push
or
sub
push
push
sbb
lret
add
push
insb
test
sbb
push
out
in
in
loopne
roll
dec
cmp
repnz
cmp
leave
lock
insb
xchg
jmp
in
xchg
mov
ret
push
sbb
cs
scas
jns
sub
mov
jbe
out
ss
pop
xchg
push
add
sbb
std
inc
jo
test
mov
loope
mov
mov
mull
xor
lahf
or
or
and
dec
inc
icebp
xchg
les
imul
add
jge
sbb
mov
adc
sub
lret
pop
pop
sahf
lret
cltd
js
inc
gs
cltd
push
ljmp
js
xor
fiaddl
mov
push
jb
adc
adc
cmp
mov
loop
pop
nop
test
lcall
or
and
fstps
jle
ffree
ss
inc
les
cmp
lds
add
push
jb
adc
jl
hlt
stos
push
leave
inc
orb
xorl
jge
pop
jge
das
les
adc
cmp
jge
stos
jns
push
inc
sbb
outsl
lods
push
movsb
cmp
loope
push
jecxz
sub
add
xor
popf
mov
int3
mov
push
xchg
mov
fistpll
imul
jg
add
cmpsb
pop
push
call
adc
jp
test
repnz
adc
fsubp
lahf
fcoml
and
stos
clc
xchg
add
or
sahf
push
ja
ret
fs
scas
mov
movsl
dec
add
mov
out
addl
xchg
adc
and
popf
pop
mov
out
rep
fmuls
mov
cmp
inc
sub
cld
xchg
pop
roll
adc
clc
sub
pop
xchg
dec
rolb
and
push
in
sub
hlt
popf
ror
inc
pop
cmp
sahf
push
je
mov
std
push
subb
and
js
ret
dec
call
xchg
cmp
in
adc
gs
cmp
insl
fsubp
dec
mov
rclb
push
mov
imul
fsubs
mov
fidivrs
add
push
sbb
clc
pushl
sahf
js
xor
lea
pushf
adc
adc
js
call
daa
mov
dec
fwait
sbb
aas
iret
push
cmpl
dec
repnz
fwait
mov
xchg
mov
in
shll
daa
sub
xchg
gs
lock
cmp
stc
or
addb
sbb
cltd
pop
clc
int
mov
repz
xchg
sbb
int3
fmul
je
mov
enter
bound
or
mov
mov
jp
fadd
sub
repnz
rorb
add
incl
add
mov
push
xchg
add
pop
lret
int3
add
push
dec
ret
adc
hlt
fcompl
sarl
bound
scas
lea
mov
push
push
jmp
out
imul
xor
sbb
fucomip
pop
jns
inc
sbbl
push
sbb
es
jbe
push
gs
cwtl
mov
push
pop
inc
int
mov
inc
insb
mov
jp
flds
outsb
iret
sub
popf
jecxz
dec
sub
xorb
call
int
cld
int3
xchg
daa
cld
jmp
loope
push
scas
lcall
in
fistpl
xlat
aam
ret
lret
or
push
pop
push
mov
or
jl
dec
movsl
rcll
jnp
out
icebp
aam
sbb
xchg
mov
inc
mov
mov
or
xor
jo
xchg
pop
jne
cs
iret
mov
push
movsl
jmp
inc
xor
popf
xchg
repz
dec
dec
ror
mov
push
and
pop
dec
sbb
leave
repnz
outsb
jnp
fnstsw
icebp
adc
out
loope
sub
xchg
sahf
jle
dec
loop
insl
lahf
add
data16
les
jno
dec
pop
fmuls
lods
lahf
std
add
push
mov
pusha
cmp
loop
inc
push
mov
jne
stc
and
cmp
or
jmp
imul
jmp
sti
dec
mov
xor
add
mov
ljmp
ds
dec
xchg
adc
sub
mov
das
fisubrs
je
ficoms
imul
sub
imul
aad
cmpsl
mov
cltd
add
leave
push
jbe
xor
movsl
lcall
frstor
int
mov
cltd
outsl
je
pop
dec
sbb
or
adc
sti
mov
mov
cmp
pop
or
fs
push
rol
int
push
lcall
test
sti
jg
xchg
pushf
call
std
adc
dec
loopne
in
aad
adc
mov
gs
aaa
or
jo
or
xor
add
mov
add
sbb
sub
push
add
movsb
int3
mov
iret
mov
ret
pop
push
mov
nop
lea
mov
pop
jae
sbb
xchg
loop
push
sti
notb
push
mov
push
aad
pop
aaa
int
lods
call
dec
xor
in
pop
pusha
mov
aaa
clc
adc
or
cmpsb
or
ret
movsl
lret
or
fiadds
mov
sahf
mov
mov
inc
sbb
pop
fscale
push
in
adc
pop
imul
insb
cmp
insl
xor
mov
daa
xor
lods
lea
mov
or
pop
sahf
push
push
inc
push
xchg
mov
stos
adc
xor
in
int3
in
divb
mov
jmp
mov
shlb
adc
mov
cmpsl
enter
and
jns
es
mov
mov
mov
call
or
mov
mov
test
enter
ret
and
pop
mov
sub
leave
push
inc
ss
jmp
out
movsl
outsl
inc
ss
push
push
mov
lds
pop
mov
rcrl
je
test
mov
push
andl
fnstsw
lock
xor
xchg
mov
std
xchg
aam
pop
jge
and
ret
ljmp
or
sub
lds
sub
inc
cmp
sub
daa
lds
push
add
push
sub
movsb
jp
jl
mov
cwtl
loopne
add
ja
and
pop
cmpsb
loopne
mov
movsl
out
mov
jbe
lods
dec
sbb
pop
push
adc
orl
and
stos
out
mov
cmp
xlat
push
lds
dec
sub
pop
xchg
push
call
roll
fsubp
movsb
cmc
je
inc
in
pop
sti
or
mov
push
mov
jp
sbb
pop
aam
mov
or
cmp
divl
bound
xchg
cwtl
dec
mov
mov
and
mov
cmc
pop
cmpsl
mov
ret
xor
in
fcmovu
pop
push
mov
cli
insb
xor
aad
add
mov
cmp
es
clc
into
jecxz
cmp
movsb
adc
jns
sbbb
insb
mov
pop
lret
adc
enter
rcll
sub
or
data16
add
pop
repz
mov
andl
xor
mov
cmp
les
fmuls
lods
sbb
jno,pn
jl
dec
pop
std
mov
jae
sahf
xchg
arpl
pop
mov
test
mov
mov
sub
inc
int3
mov
and
pop
mov
outsl
cmpb
addl
add
outsl
mov
popa
les
mov
fisubl
cwtl
cmp
add
or
sbb
movsb
xchg
cmp
mov
push
rep
int
mov
xor
testl
add
pop
or
jmp
es
jb
cwtl
jmp
push
pop
and
cmc
out
jl
mov
test
or
jb
pop
push
popa
loope
dec
sbb
fs
ret
pop
dec
sbb
push
or
lahf
jle
sbb
frstor
mov
stc
stos
pop
rclb
aad
popa
jb
xorl
jp
push
subl
add
inc
jo
jb
ret
mov
xor
ret
and
cmp
leave
inc
sub
inc
jle
stc
push
jno
or
pop
jae
insl
adc
out
xchg
std
mov
ljmp
mov
pop
xor
adc
ja
jg
sub
and
test
test
cmc
hlt
loope
xchg
and
les
inc
lods
test
mov
dec
hlt
inc
cld
xchg
push
jbe
sti
rol
push
push
out
ret
cld
sbb
pop
ja
lahf
jecxz
fwait
lock
jle
filds
mov
pop
cmp
sbb
andb
dec
xor
push
jns
enter
mov
das
loop
mov
cmpsb
insl
jge
and
pop
xor
out
adc
and
jmp
inc
mov
stc
pop
adc
in
mov
out
jge
loope
ja
inc
das
sub
mov
inc
repz
enter
negb
lds
adc
xchg
add
dec
cmp
shlb
mov
dec
data16
jo
mov
mov
mov
jle
cmp
sub
nop
je
jno
out
cmp
and
fwait
out
fdivs
fldt
or
aam
pop
mov
and
or
cld
mov
in
jmp
mov
dec
cld
lea
or
into
dec
mov
push
xor
ljmp
push
outsb
jns
cmc
mov
pushf
jb
add
adc
mov
pop
mov
push
mov
adc
sbb
pop
adc
cmp
sub
adc
mov
xor
push
test
sti
mov
jo
mov
xchg
add
xchg
int3
pusha
ljmp
add
cwtl
jle
push
aaa
bound
push
xor
orl
sbb
cs
sti
shll
cmp
push
test
loopne
sub
shr
mov
mov
sbb
in
ja
rcrl
test
mov
adc
adc
je
xchg
out
mov
loope
xor
cmp
push
sbb
scas
and
mov
sub
or
or
andb
push
and
push
fsincos
out
call
mov
add
into
jp
xor
mov
ret
inc
mov
je
jns
insb
in
lods
ss
adc
pop
mov
repz
mov
leave
pop
dec
scas
hlt
jmp
add
inc
dec
mov
xchg
sbb
inc
sub
lret
mov
jb
xchg
fistps
push
add
shll
add
aaa
int
stos
nop
dec
pop
push
jl
aad
fucomp
data16
mov
in
xlat
and
xchg
aaa
pushf
fadd
nop
push
nop
out
nop
das
fadd
xor
cmp
movsb
adc
pop
sbb
pop
mov
add
push
fdivr
pop
sti
and
pushf
std
out
mov
mov
jnp
lret
pop
push
inc
push
fsts
adc
cmpsb
adc
mov
testb
fsubl
push
adc
rcr
push
out
insl
add
out
repz
inc
ret
frstor
add
mov
out
dec
pop
ret
fs
mov
pop
and
mov
and
xchg
mov
xchg
push
push
sbb
cltd
add
dec
and
xor
cltd
cmp
and
enter
cs
fdivrs
cmp
inc
pop
ficoms
mov
shrl
jo
pop
in
pop
lret
fiadds
testb
stos
mov
lods
inc
aad
imul
mov
popa
mov
push
mov
lahf
fdivr
js
dec
xor
jo
mov
mov
inc
sub
clc
lahf
unpckhps
test
aaa
movsb
cmc
nop
jle
mov
fbld
add
lret
lfs
mov
in
xchg
jg
clc
aaa
pop
pop
pop
adc
in
in
push
xchg
inc
es
adc
mov
shl
and
push
add
cld
cs
mov
or
lret
shll
imul
jns
pop
call
cmp
xchg
sbb
pop
ret
enter
jae
lock
test
decb
cmp
sub
imul
pop
push
insb
idivb
cmp
fcomip
stc
jmp
xchg
fs
sub
and
xor
adc
sub
int3
inc
dec
mov
insb
cmpxchg
pop
xorl
mov
sub
sbb
adc
add
sbb
jl
mov
xlat
leave
mov
test
jg
jl
repnz
lahf
in
sub
xor
cmc
or
mov
and
xchg
mov
aaa
xlat
jno
dec
hlt
sbb
test
pushf
sub
and
je
dec
mov
or
pop
lods
jmp
lcall
xor
cmp
jg
out
daa
lea
stos
fldlg2
push
jg
loope
or
mov
pop
in
cmp
stos
cmp
xor
sub
in
cmp
in
int3
and
push
stos
mov
jno
pop
jbe
cmp
xor
sub
sbb
mov
sti
xor
fistps
ficoml
xchg
pop
jmp
xchg
sub
push
test
and
mov
push
jl
in
sub
int3
sbb
fcmovnb
shl
sub
and
js
or
loop
sub
leave
cmpl
jae
mov
xor
cs
out
jns
pop
stc
sub
rolb
mov
cmpsl
add
pusha
inc
outsb
popa
repz
pusha
dec
int
inc
ljmp
lock
mov
dec
mov
mov
pop
cmc
or
mov
ja
mull
lock
ret
push
popf
jb
mov
jmp
mov
pop
mov
mov
push
pop
jne
mov
push
and
out
mov
adc
rorl
imul
lret
mov
xchg
pop
dec
dec
lea
jmp
pushf
test
gs
sbb
imul
cld
cld
or
frstor
push
pop
in
ror
inc
pop
jne
loope
dec
out
xor
xlat
or
cmp
add
movsl
push
xchg
inc
or
mov
cmp
rorb
jnp
pop
mov
lds
arpl
xlat
in
mov
ret
ds
lock
mov
fsubrl
pop
fwait
inc
out
xor
add
xor
stos
mov
jb
nop
adc
out
addb
scas
pop
xchg
pop
pop
sbb
imul
imul
mov
push
xrelease
daa
xchg
sub
inc
xlat
inc
aam
cltd
xor
add
pop
cmp
repnz
adc
mov
jp
add
pop
cmp
add
in
inc
dec
cs
mov
scas
call
lods
inc
xchg
xchg
dec
sbb
fdivs
rorl
and
pop
test
and
cwtl
sub
push
pusha
mov
stos
mov
rcr
mov
lea
outsb
mov
sub
roll
hlt
leave
xlat
rcr
and
pop
loop
and
incl
fwait
bound
cmp
popf
inc
nop
sub
dec
fadds
mov
jp
aas
ds
out
bound
sbb
insb
lret
jno
sti
shrb
add
or
mov
dec
jl
arpl
jmp
mov
stos
leave
lcall
outsl
test
inc
mov
repnz
fistl
js
stos
out
jo
pop
xchg
cmp
in
lcall
sub
outsl
mov
pop
sbb
push
mov
push
mov
in
xchg
jmp
rcll
sti
in
or
repnz
mov
fs
enter
sub
repnz
jl
fistps
cmp
sahf
jmp
inc
lcall
int
mov
pop
add
leave
lret
lcall
in
cmpsb
lods
in
popl
in
jge
dec
je
push
cmp
adc
insl
fimull
cld
pop
sub
inc
adc
lods
jecxz
push
jne
jne
sub
shrl
xor
mov
xchg
in
pop
sbb
movsl
cmp
lock
movsb
fstl
mov
divb
mov
lcall
push
rcl
pop
popf
ds
js
lods
shlb
mov
unpckhps
out
mov
jecxz
cmp
jge
das
cmpsl
and
cltd
push
jno
fmuls
out
jl
int3
jl
jae
ja
lret
push
testl
loopne
lods
in
pop
sar
pusha
cli
pop
out
adc
aad
and
sub
aas
pop
xor
lods
cmpsb
pop
cmpsl
fcmovne
and
movsl
lea
mov
aas
and
dec
and
sbb
lret
je
cwtl
and
dec
test
push
pop
add
jmp
arpl
push
mov
jg
push
test
sbb
xor
push
mov
push
mov
std
in
xlat
lahf
pusha
xchg
mov
add
pop
add
inc
aas
sub
loopne
pop
inc
or
mov
adc
mov
jnp
push
pop
mov
outsb
jbe
pop
push
js
cltd
push
jle
shr
cli
loop
cmp
lods
aaa
call
daa
lea
outsl
jno
and
or
jns
mov
test
add
or
cmpsb
loop
stos
lea
call
pop
sbb
xor
clc
and
xor
in
bound
test
inc
mov
movsl
pop
jle
xor
iret
rolb
lret
jg
pop
jle
cltd
mov
rcr
addl
dec
test
sbb
dec
vmovaps
push
jp
pop
inc
ds
fmull
xchg
nop
outsl
rol
int
outsl
push
fisubl
clc
xorl
ss
xor
and
mov
enter
sbb
cmp
inc
adc
shll
sbb
pop
dec
popf
in
cmc
outsl
adc
push
pop
in
negb
xor
cmpb
pop
fisubl
cmp
push
add
mov
mov
ffree
inc
xlat
xchg
aam
mov
push
stos
lea
imul
sahf
scas
out
loopne
dec
xor
pop
push
outsb
pushf
popa
inc
test
and
push
xchg
fadds
push
mov
jmp
ds
aas
xor
or
or
jne
pop
cmc
out
popf
sbb
cli
sahf
push
pop
imul
mov
dec
stos
push
pop
or
inc
mov
and
loopne
xor
or
jnp
aaa
mul
je
jno
mov
xchg
sahf
pop
pusha
fsubl
mov
xchg
addr16
mov
mov
fdivrl
jmp
aam
stos
lods
imul
decl
cs
jne
xchg
mov
inc
inc
rcrl
jb
jp
inc
or
xor
popf
sti
cs
mov
inc
push
addl
daa
push
dec
inc
push
iret
es
jp
cltd
in
insb
sbb
ror
and
mov
repnz
fiaddl
mov
mov
sbb
mov
scas
je
mov
pop
ja
out
daa
bound
sbb
dec
dec
or
adc
xchg
mov
mov
loope
push
mov
bound
jl
enter
sbb
inc
repz
push
lods
lahf
lcall
add
sbb
jg
test
jecxz
add
fnsave
push
aam
popf
sbb
pop
divl
call
jbe
adc
xchg
jmp
mov
push
gs
shl
daa
aam
mov
dec
test
test
push
xchg
mov
add
cmp
and
push
cmp
cli
jecxz
cmpsl
push
adc
or
stos
xchg
js
inc
jno
ja
push
jne
out
movsl
and
cld
cld
push
dec
pop
and
js
jae
sbb
mov
leave
aas
adc
dec
outsb
mov
xor
das
jecxz
loopne
in
clc
nop
mov
dec
adc
mov
mov
test
and
xchg
in
mov
pushf
jp
or
rolb
hlt
stos
jbe
rcr
mov
fidivrs
jnp
sbb
or
mov
lods
pop
sbb
jg
bswap
movsl
mov
ds
cmp
sbb
sti
jb
jo
xchg
lcall
lret
jns
lret
xor
pop
cld
adc
negl
aaa
cmp
int3
leave
and
adc
icebp
push
jns
dec
mov
mov
inc
or
out
lock
pop
fwait
shlb
mov
pop
jo
mov
lods
testl
mov
fwait
lret
xchg
mov
ja
insb
and
das
arpl
sbb
test
int3
cmpl
stos
cld
rcl
sbb
jns
cmp
jp
mov
jnp
mov
iret
inc
push
lds
mov
add
push
fiadds
adc
jbe
cmp
dec
inc
cmc
lods
les
imul
std
imul
movsb
jl
pop
inc
movsl
mov
jbe
xchg
push
jnp
je
sbb
lahf
xor
pushf
dec
sub
mov
jae
scas
call
jg
push
xchg
lahf
rcr
in
pop
loope
and
sbb
add
imul
test
rcrb
mov
push
adc
inc
xor
or
push
addb
bswap
xor
pop
xor
mov
test
mov
cmp
les
sub
int3
aaa
xchg
mov
jp
adc
jns
and
out
scas
out
movsb
mov
or
jns
sub
bound
xor
in
adc
sarl
inc
sbb
cmpsl
test
pop
js
cmp
movsl
test
and
mov
xor
sub
adc
filds
sub
fs
arpl
aam
aam
jbe
mov
gs
pop
xor
mov
lods
sub
les
outsb
roll
add
loop
dec
pop
mov
xchg
mov
adc
arpl
inc
push
ficompl
mov
jo
jbe
jne
adc
pop
xchg
push
mov
dec
jb
adc
in
xchg
cmp
enter
lock
inc
mov
sub
test
xchg
mov
jecxz
or
int
sub
cmpsl
fistpl
clc
jb
leave
sub
cmp
ja
nop
inc
mov
sti
stos
xchg
outsl
push
mov
push
and
jmp
pusha
xorb
cmc
xchg
jb
cmp
push
inc
clc
jo
pusha
lods
adc
pusha
and
inc
das
add
loopne
adc
and
sbb
mov
lcall
jp
jg
push
or
and
mov
and
neg
jbe
mov
mull
inc
jne
jg
imul
and
out
mov
adc
mov
pop
popfw
lds
pop
jp
fcomps
popf
adc
dec
sub
mov
movsb
xchg
mov
insb
sub
dec
jnp
inc
add
cs
insb
mov
mov
shl
sbbl
daa
sub
ja
je
xor
mov
pop
xchg
jo
in
bound
add
stc
mov
xchg
lds
mov
cmpsb
scas
lods
lahf
push
xchg
or
fcomi
mov
pop
es
je
daa
rorl
or
xchg
cli
insl
fadd
bound
mov
ljmp
dec
pop
jne
call
adc
inc
mov
cmp
vmovlps
pushw
xor
and
adc
bound
sub
in
and
and
loope
inc
mov
adcb
push
jg
push
lods
jmp
push
push
xor
xchg
das
xchg
shlb
ja
pusha
push
lds
test
push
fs
cmp
or
or
aaa
mov
push
fs
lds
lea
call
test
rorl
mov
outsl
xor
cmp
idivl
repnz
push
nop
pop
dec
ret
and
or
xor
xchg
sbb
outsb
mov
fbld
push
sub
pop
fmul
insb
add
enter
icebp
cmpsb
xchg
cld
mov
jl
jge
ret
sti
outsl
lret
push
ja
push
xchg
sahf
js
adc
push
xchg
cmp
cs
fcmovnbe
fsts
std
cmp
add
adc
cmp
mov
stc
jg
add
push
mov
pop
add
cmc
aad
leave
sub
push
pop
popf
scas
xchg
xchg
and
loopne
out
push
outsl
xchg
jmp
hlt
mov
fs
push
sbb
stos
sub
jmp
cmp
shl
mov
mov
mov
adc
sahf
aad
add
imul
mov
pop
bound
adc
out
out
test
mov
ret
in
mull
add
push
xchg
pop
pop
lret
inc
sbb
pusha
cmp
in
mov
movsl
int
repz
sub
inc
sub
mov
aas
das
loope
dec
lahf
mov
and
or
sbb
and
adc
add
pushf
cmp
xchg
in
inc
fcomps
xchg
push
mov
cwtl
rclb
dec
or
inc
add
push
outsb
outsb
or
adc
sub
test
jne
lcall
out
lea
add
adc
mov
sbb
popf
rolb
dec
sbb
cwtl
jp
daa
inc
jo
add
mov
addr16
sbb
jnp
loop
scas
arpl
jae
repz
xor
in
jbe
mov
loope
lds
rorl
lahf
push
or
adcb
data16
push
dec
test
mov
test
jae
ds
fldl
mov
inc
insb
cmp
pop
pop
ret
xor
dec
jo
inc
int3
cmpsb
sub
xor
adc
aaa
loopne
test
sahf
mov
mov
mov
xchg
scas
xor
xor
call
dec
pop
dec
sahf
pop
js
jle
cmpsb
repz
inc
mov
fnstenv
jbe
psubsb
jge
adc
rorl
sbb
inc
and
es
sub
movsb
jne
cmp
lods
mov
lret
xor
jnp
and
and
je
add
push
mov
aaa
in
enter
lret
mov
jmp
mov
clc
iret
sti
popa
xchg
mov
call
hlt
sub
iret
stos
cmp
les
or
xchg
ljmp
dec
bound
mov
xor
xor
movsl
lods
jmp
push
movsl
ds
add
aam
frstor
mov
sahf
cmpsl
jl
pushf
pop
dec
jo
xor
enter
gs
cmc
rol
mov
outsl
jo
cltd
dec
add
push
insl
pop
rcll
cmp
pop
lahf
pop
lret
into
dec
imul
sub
and
aas
mov
dec
adc
aaa
pop
lods
test
das
sub
inc
dec
sub
adc
ds
xor
jmp
jecxz
enter
jge
ret
shrb
cmp
mov
adc
or
loopne
mov
insl
clc
sbb
imul
fwait
xchg
out
sti
cwtl
sbb
ja,pn
mov
scas
push
loopne
test
lret
jbe
adc
mov
in
mov
loope
ret
inc
test
aam
push
sub
jo
adc
cmpb
out
lds
fldenv
mov
xchg
jno
dec
adc
jmp
into
push
mov
cltd
loopne
jne
pop
filds
and
pop
insb
lock
cltd
xor
inc
mov
jnp
mov
fists
loopne
loop
xchg
mov
insl
std
aad
repnz
push
testl
adc
int
mov
repnz
lods
repz
fcomip
hlt
push
scas
xor
loope
mov
mov
jle
xor
call
outsl
sub
fpatan
test
scas
pop
jle
and
and
scas
cld
aam
test
ficoml
fdiv
mov
mov
and
loope
in
bound
ds
jnp
xchg
ds
sub
das
subb
sub
adc
aam
stos
jmp
mov
lea
push
lods
push
and
mov
pop
into
add
xchg
in
xchg
mov
jo
mov
pop
adc
and
fsub
shld
in
jo
xor
mov
rorl
jecxz
xchg
cmp
fldenv
clc
dec
insl
jge
test
lock
add
pop
orl
es
int
xchg
cli
or
nop
jle
std
cwtl
cmp
adc
stc
inc
je
pop
nop
hlt
mov
or
mov
popf
shll
push
pop
nop
jge
bound
adc
adc
insb
ret
scas
enter
mov
dec
xchg
cmp
popa
shlb
adc
into
mov
mov
je
lret
inc
enter
jp
mov
xor
in
inc
mov
inc
loop
sub
outsl
pop
sub
sub
lods
cmp
mov
aam
sbb
sbb
stos
push
lcall
mov
insl
mov
js
mov
cmpsb
insb
push
lods
fbstp
dec
cmp
inc
testl
andb
repnz
xchg
jns
sub
push
jns
dec
mov
push
int3
and
push
stc
pop
sbb
mov
jg
sti
mov
mov
into
push
xor
cmpsb
out
jecxz
adc
pop
mov
std
jno
inc
jne
arpl
ljmp
and
jo
test
xchg
fidivs
mov
push
sahf
ret
iret
popf
fnstsw
cmp
jecxz
xchg
mov
dec
addb
cmp
cmc
mov
out
rcpps
pop
test
idivb
flds
or
stos
iret
mov
movsl
xchg
pop
pop
dec
xor
lea
jg
adcb
inc
pop
push
mov
inc
xchg
shr
sub
adc
inc
movsl
sub
and
in
xorb
xorl
scas
lods
pusha
add
mov
and
xor
pop
push
fsubl
cmp
or
xchg
jmp
ret
addb
rcrb
pop
xor
or
mov
cmp
shll
fst
xor
stos
jo
pop
xor
outsl
jp
mov
sub
sbbb
adc
inc
sti
pop
sahf
fnsave
mov
cmp
ds
movsl
cli
stos
cmc
adc
mov
xor
out
xchg
std
mov
lock
adc
sbb
fisttps
mov
dec
xor
hlt
jmp
es
and
imul
sbb
addr16
lea
fxch
ljmp
sbb
ljmp
sarb
test
cmpsb
jge
call
arpl
pop
push
dec
cs
scas
jb
xchg
outsl
movsl
test
test
in
rclb
imul
lret
rorl
jl
pop
jp
fadd
cwtl
cmp
dec
inc
push
call
sbb
fnstenv
mov
jno
cmpl
fildl
js
xchg
sub
jge
clc
or
ret
call
adc
or
pusha
and
fwait
add
aam
lods
cwtl
push
movsb
lds
cmp
sbb
inc
lcall
inc
leave
sbb
dec
daa
ljmp
jmp
scas
int3
jmp
gs
xor
mov
xchg
mov
icebp
in
or
inc
mov
cmp
lock
jl
inc
cmp
imul
xchg
std
and
dec
aaa
mov
lret
in
loop
jg
stos
fcmovne
test
movsb
xchg
cli
sub
sub
lock
mov
iret
push
repnz
xchg
fs
sbb
lods
int
movsb
adc
lods
xchg
popf
repnz
mov
clc
leave
ds
mov
inc
cltd
or
mov
mov
bound
aaa
pusha
scas
mov
or
js
imul
cmp
inc
fisubs
adc
lods
mov
shlb
arpl
pop
mov
add
jl
addr16
adc
fimull
push
cmp
fsubrl
sub
lret
push
mov
aad
scas
ja
push
les
stc
cmc
jl
inc
hlt
movsb
dec
shld
cmp
out
inc
ja
aas
into
push
adc
out
mov
loopne
adc
add
dec
push
add
pop
inc
cld
inc
and
sbb
in
push
xchg
das
scas
repz
jg
lahf
cmp
and
push
mov
jo
stc
jmp
mov
mov
addl
pushf
mov
sub
dec
or
sub
dec
iret
stos
and
sbb
jbe
test
hlt
mov
mulb
popf
leave
xchg
mov
icebp
mov
pop
inc
int3
cli
data16
push
outsl
in
stc
sbb
xchg
push
out
inc
push
jne
lods
push
call
sbb
cmp
mov
fs
dec
adc
jae
push
mov
rcrb
cmp
mov
sti
mov
adc
fmuls
xorl
ja
pop
mov
sbb
jg
xchg
lret
jle
sub
repnz
mov
adc
mov
pushf
jno
cmpsl
ret
adc
pusha
mov
daa
jge
shlb
sahf
int
cli
iret
pop
repz
and
cmp
inc
sub
sti
cmpsb
shrl
push
cltd
jle
data16
popa
jmp
xor
cmp
addr16
pop
icebp
and
xchg
test
mov
pushf
addr16
nop
bound
repz
jb
inc
or
cltd
xor
or
mov
iret
jnp
and
aad
rcll
out
int
mov
int3
xchg
and
gs
nop
xlat
test
pop
ror
dec
mov
dec
inc
xor
fidivs
repz
dec
xchg
mov
pop
mov
jb
mov
gs
pop
push
push
cmp
or
clts
or
and
mov
ret
jno
test
stc
push
fmul
out
arpl
outsl
mov
int
mov
aas
ss
adc
lods
leave
stos
ja
test
push
jo
mov
ss
ret
cmp
popl
stmxcsr
mov
adc
jp
ds
xchg
push
popa
fs
bound
call
repnz
xchg
pop
repnz
addb
mov
ds
incl
loop
add
and
cmp
mov
mov
cli
jo
mov
jg
rcr
fs
popl
mov
clc
cwtl
popa
shrl
and
aaa
sti
sbbl
jle
adc
cltd
push
push
adc
xor
xorl
test
ret
push
fdivp
repnz
lock
test
mov
and
stos
sub
test
and
jmp
out
push
inc
mov
sbb
jge
popf
mov
sti
int
mov
fs
cmpsl
rcrl
addr16
sbb
rorb
or
and
sub
fsin
notb
mov
adc
popa
jge
jo
call
es
dec
mov
bound
jno
dec
or
cmp
jmp
pop
inc
orb
mov
sbb
add
popf
roll
inc
and
imul
sub
incb
sub
adc
or
cld
xchg
cmp
aam
push
mov
adc
lret
les
shll
add
pop
test
gs
enter
push
pushf
js
cmp
enter
testb
lea
jmp
bound
shlb
jnp
loope
xchg
jle
or
dec
jo
mov
inc
xchg
lock
jb
imul
ficompl
mov
fdivs
lret
aas
je
in
adc
jmp
or
scas
mov
jne
and
push
fisttpll
inc
ret
sbb
xchg
xchg
add
pop
shr
pop
pusha
xor
lret
out
mov
mov
rcl
cmp
insb
add
jle
jae
add
orl
sbb
cmc
imul
xor
jns
cltd
les
clc
sbb
shll
testl
add
in
cmp
insb
jb
inc
pop
cmc
sbb
add
xor
add
sub
insb
roll
sub
dec
test
jo
mov
or
nop
mov
xor
ret
xchg
xor
xchg
dec
dec
xchg
cmp
sub
xor
xchg
fnsave
arpl
or
int3
xchg
dec
cmp
inc
aas
xor
mov
xchg
mov
arpl
and
jg
rorl
jge
scas
ss
pop
mov
mov
mov
aas
pop
add
xor
rcrb
mov
mov
loope
and
lret
daa
lcall
mov
xchg
rorl
pop
cmc
push
aaa
sbb
xchg
inc
sub
in
xlat
loopne
inc
push
mov
mov
mov
movsb
gs
add
jg
and
mov
out
xchg
mov
mov
mov
aas
js
push
pop
push
and
cmp
lcall
gs
push
add
push
outsl
xchg
and
jae
out
fsubs
fs
add
out
stc
jl
or
sub
cmpsb
xchg
pop
ret
pop
aaa
pop
repnz
push
xchg
mov
xor
in
fcoml
cmp
pop
push
addr16
mov
inc
jle
cmp
lcall
rorb
test
fxch
dec
pop
ss
inc
clc
jb
fcoms
ljmp
and
ret
xorl
ja
sbb
cmp
xchg
dec
in
mov
adc
mov
in
mov
nop
inc
push
jo
shlb
and
xchg
and
stos
adc
cmp
cmp
pushf
xchg
mov
cmc
mov
add
lret
ret
rolb
dec
push
sbb
js
mov
rcr
movsl
cmpsb
into
inc
push
xchg
aad
mov
out
aas
fidivrs
js
jge
xor
pop
addb
addr16
jmp
mov
cmp
sub
lcall
mov
adc
push
mov
dec
out
xchg
pop
scas
add
adc
outsb
and
imul
js
inc
out
jge
stos
lods
xor
sbb
fistps
dec
inc
mov
and
cli
into
rclb
push
pop
inc
mov
js
push
popa
push
int
insl
jnp
iret
loop
pop
ucomiss
sbb
cmp
jp
test
mov
lds
mov
clc
dec
cli
mov
outsl
cmc
xchg
xchg
push
sub
enter
nop
jns
cmp
ds
xchg
test
insl
repnz
cld
sti
cmpsb
scas
stos
jmp
test
cmpsl
jge
enter
stos
and
jecxz
push
clc
jns
fucomi
les
insl
fwait
rcrb
mov
push
ja
lock
test
std
sbb
pop
cld
mov
pop
jne
hlt
pop
je
mov
push
pop
cmp
jecxz
mov
xchg
or
es
insb
out
mov
mov
pop
cmp
fdivl
mov
mov
push
movsl
push
sub
mov
xor
cmc
jb
adc
sbb
fidivl
test
cmp
pusha
pop
mov
xchg
cmc
in
sub
or
add
sahf
fcompl
jno
arpl
outsb
shrb
sub
add
cmc
iret
rclb
inc
push
push
inc
jne
lret
aaa
insb
stos
push
lds
dec
in
pop
push
orl
dec
out
mov
lods
jmp
fcoml
xorl
es
scas
pop
ret
clc
mov
sub
push
dec
lret
fcomp
and
pop
and
mov
ret
nop
lock
sarb
ret
add
push
idivl
dec
jmp
out
daa
ret
pop
aam
sub
lahf
or
dec
das
or
and
and
xchg
iret
pusha
scas
in
jb
test
or
popf
jmp
xorl
add
lcall
and
or
xchg
lret
jo
les
xor
mov
out
jp
test
je
mov
sub
out
testl
mov
fs
mov
incb
sti
popa
jno
rorl
fwait
pop
xlat
pop
inc
sti
xor
mov
xchg
pop
push
scas
sub
lret
mov
mov
push
fstl
fidivrs
inc
lret
and
dec
or
cwtl
dec
push
jnp
push
in
cltd
pusha
and
popa
cmp
sub
sub
mov
scas
loopne
mov
pop
xchg
inc
pop
inc
cmpsb
pop
imul
sub
pop
fildl
mov
fidivrs
inc
sbb
adc
sbb
cmpsl
xor
loope
loop
xlat
inc
test
push
inc
in
pop
xor
gs
mov
jmp
leave
out
cld
int3
sub
pop
or
lods
dec
pop
loop
adc
mov
inc
movsl
push
xor
lods
mov
pushf
gs
xor
dec
ljmp
ret
jnp
out
rcrb
mov
movsl
stos
enter
iret
rcrl
cwtl
addr16
fs
aad
dec
dec
or
mov
xor
leave
in
xor
fdiv
lods
cld
sbb
sti
pop
out
or
or
adc
aad
cltd
shlb
mov
pop
test
push
filds
aad
and
or
xorb
inc
js
je
push
daa
leave
push
cmpsl
pop
enter
push
and
jg
mov
aam
dec
not
inc
lods
jmp
popa
xor
in
iret
or
adc
je
or
mov
std
loope
adc
jmp
loopne
jb
test
xchg
arpl
pop
pop
shlb
int
and
or
sub
cwtl
fmull
xchg
mov
mov
xchg
test
mov
int3
jmp
sbb
test
imul
pop
push
outsl
xchg
jns
jle,pt
aam
aaa
outsb
stc
xchg
repnz
shlb
jle
push
mov
rolb
adc
xchg
hlt
xor
mov
sbb
sbb
into
rclb
cmc
stos
das
or
movsl
popl
xor
out
jne
imul
mov
pop
stc
pop
aad
xor
sub
rorb
or
inc
shrb
xchg
stos
dec
or
incl
add
jg
mov
hlt
push
insl
test
xchg
or
add
loopne
dec
test
sbbl
jle
fldcw
popa
arpl
mov
cmpsl
and
pushl
add
pop
and
cmpsb
jp
add
jo
mov
mov
xacquire
jl
out
mov
test
out
lods
fidivs
pop
test
sub
fwait
clc
dec
jo
sub
sub
sahf
rcrb
flds
jns
in
push
adc
mov
popf
push
mov
inc
mov
push
movsb
imul
push
jg
add
dec
movnti
jmp
pop
jb
bound
mov
into
aad
int3
call
push
mov
dec
inc
mov
out
pop
or
inc
push
push
and
jp
sti
jp
notl
sarb
ss
sub
test
inc
fwait
or
leave
in
orps
mov
add
test
gs
xor
lds
mov
push
test
fucom
stos
aaa
mov
and
cld
or
dec
sub
fadds
push
repnz
repnz
stos
aaa
inc
shr
mov
mov
in
xor
shlb
arpl
fs
cld
pusha
mov
std
dec
test
push
and
lock
fstl
or
or
les
xchg
dec
lock
sbb
adc
rorb
dec
sub
cld
out
imul
lret
cmp
aam
and
mov
dec
dec
aaa
cmp
popa
push
popa
adc
jl
shlb
mov
sbb
shl
popf
jb
inc
dec
int
testl
xchg
mov
movsb
loopne
jae
mov
mov
mov
int3
call
stc
mov
mov
orb
and
cld
jns
js
in
ficoml
dec
sbb
push
adc
or
adc
insb
mov
mov
jbe
daa
scas
shll
aad
hlt
mov
jns
lock
out
les
arpl
in
push
xor
neg
ja
push
mov
mov
xchg
mov
push
xchg
clc
adc
mov
icebp
jns
pop
stc
xchg
test
rcll
pop
lret
jmp
pop
xchg
cmp
dec
and
popf
mov
test
jno
imul
rclb
aaa
mov
rcll
jno
pop
pop
out
fucom
popf
rcr
push
dec
mov
lea
popl
sti
out
fnstenv
xor
or
lea
std
je
mov
fcomip
pop
inc
inc
rcrl
in
mov
push
push
std
jnp
and
adc
jl
dec
in
lds
add
mov
fsubrs
add
mov
pop
xor
fistps
test
inc
cmp
pop
xchg
test
or
push
lcall
push
hlt
repz
jo
stos
xchg
adc
sarb
sub
call
jb
pop
inc
lahf
std
cld
lret
lds
cmp
mov
dec
mov
hlt
adc
mov
dec
mov
dec
pushf
clc
iret
adc
fs
loopne
jp
fwait
lret
fcom
jbe
xchg
lock
addr16
push
xor
lods
fmuls
cmp
addr16
xchg
xor
cli
mul
lds
or
bound
pop
cmp
insl
ljmp
leave
mov
and
jmp
jg
imul
dec
and
insl
sub
sub
dec
into
mull
imul
or
sub
and
cmp
mov
js
mov
dec
xor
dec
scas
pop
or
xchg
in
mov
pop
and
mov
add
stos
mov
pop
push
int3
mov
adc
mov
adc
ret
cmp
shll
push
test
jecxz,pn
xor
int3
mov
push
sbb
jg
add
mov
mov
mov
sbb
cmpsl
push
pop
mov
jnp
daa
cmp
pop
vpcmpgtw
mov
cmp
mov
insb
fldenv
imul
in
les
es
shll
mov
or
xchg
dec
jmp
add
out
mov
and
into
jle
les
scas
xchg
xchg
mov
cmc
dec
lret
aas
scas
sub
icebp
leave
pop
jecxz
loopne
inc
lds
std
inc
es
jle
jp
call
popf
mov
movsb
outsl
out
js
fistpll
iret
andl
aaa
test
mov
lea
pop
mov
loope
pop
jb
repz
out
mov
jmp
lret
adc
adc
or
xorb
sub
xor
insb
lret
xchg
bound
cmp
stos
loope
ljmp
fstpt
lods
imul
push
sub
xchg
test
push
cmp
aas
jp
popf
dec
xchg
xor
dec
mov
cmp
imull
call
cli
sti
push
lds
sub
or
mov
les
mov
mov
mov
cmp
clc
mulb
cmp
test
movsl
xor
call
mov
jnp
dec
ret
xchg
arpl
dec
fiaddl
movsb
add
push
or
je
mov
mov
rclb
loope
repz
out
mov
popl
sbb
and
adcb
mov
mov
aam
mov
mov
jle
mov
shrl
mov
into
cmp
xor
add
out
sub
inc
sbb
push
sahf
mov
dec
test
jg
mov
jp
out
rorl
outsl
rorl
push
dec
scas
mov
xor
iret
add
or
adc
adc
fsubr
sub
out
push
fstpt
sbb
sbb
std
out
shlb
pop
jbe
out
repz
popf
adc
iret
fldenv
fmull
pop
mov
out
andb
or
shll
mov
and
jecxz
test
les
lock
icebp
add
dec
addb
repnz
or
outsl
or
push
sub
cmp
mov
mov
cmp
fnstcw
aam
xor
add
adc
mov
pusha
jg
jns
adc
push
iretw
inc
in
sbb
mov
ljmp
int
push
push
sub
fsubs
mulb
mov
aaa
xchg
jnp
push
jo
shl
je
jne
add
push
loopne
or
mov
mov
ds
ja
push
dec
in
fnstenv
jg
pop
lcall
popa
adc
scas
dec
test
js
out
ret
in
jo,pt
pusha
adc
push
scas
decb
filds
mov
and
jmp
stos
pop
clc
mov
mov
jl
cmpsb
cmp
jecxz
mov
sti
mov
xchg
adc
hlt
pop
fldcw
pop
movsb
sub
pop
test
ds
daa
test
dec
xchg
pushf
and
xlat
jb
cmp
lods
sarb
dec
xchg
dec
pop
xor
icebp
fsubrp
or
scas
movsl
fidivrs
enter
sbb
inc
xchg
cmpsb
or
push
sub
icebp
sub
pushf
clc
mov
dec
out
shlb
cmp
jmp
fldl
mov
xor
ret
pop
mov
std
jo
xlat
fstpt
cltd
mov
jle
add
in
lcall
xchg
cmp
sub
dec
pop
dec
cmc
icebp
cmc
movsb
xlat
jnp
add
lea
je
mov
or
cmp
lods
cmp
mov
lods
xchg
scas
lret
fdivs
popl
push
xor
cmpsb
inc
push
in
movsl
outsl
fwait
shl
mov
scas
ror
push
push
add
jne
std
lret
data16
out
dec
mov
mov
gs
pop
push
jae
insl
testl
push
push
mov
sub
or
mov
adc
movsl
jg
mov
testb
frstor
and
jb
imul
inc
push
add
mov
or
or
xor
xchg
xchg
clc
dec
add
shl
mov
out
add
in
adc
jp
jecxz
lods
iret
push
sub
jp
aas
pop
movsl
jle
iret
add
mov
jne
adc
popa
pop
adc
pop
in
pop
loopne
sbb
sub
mov
sti
loope
pop
lock
adc
mov
pop
mov
jo
jl
pop
and
mov
test
ja
xchg
add
orb
sbb
mov
inc
adc
or
mov
idivb
or
push
or
aas
mov
add
loope
cmp
cmp
push
pusha
xchg
mov
clc
je
sti
icebp
inc
insl
lret
lcall
test
push
pusha
lret
dec
xchg
les
lahf
stc
lock
outsb
pop
mov
loopne
ljmp
xor
mov
pop
stc
pushf
sbb
cmpb
aaa
mov
int3
mov
push
adc
sub
pusha
pop
xchg
aad
add
and
test
std
addr16
push
lea
adc
or
pushf
xor
je
jp
es
daa
xchg
jle
jns
mov
hlt
call
sbb
and
push
rorl
xchg
or
cmp
sbb
mov
inc
jns
loop
add
jno
mov
aam
mov
sbb
jbe
dec
inc
dec
les
orl
test
cwtl
rcll
push
adc
push
cmp
insb
fldenv
xchg
cmp
or
mov
mov
jnp
fnstenv
sbb
sbb
cmp
lock
aaa
bound
dec
xor
xchg
add
leave
push
jo
xchg
or
int3
popa
je
insl
mov
hlt
xchg
pop
fstl
inc
cmp
nop
daa
add
add
daa
insb
or
push
mov
mov
flds
jmp
xor
mov
mov
in
stc
sti
add
repz
in
cmp
sbb
adc
cltd
add
pop
in
dec
adc
mov
fwait
mov
cmp
sub
enter
xor
pop
scas
jl
loope
push
pushf
add
xor
inc
jecxz
pop
mov
add
ss
mov
and
or
jg
jno
dec
sbb
call
cltd
mov
mov
mov
stos
jmp
pop
inc
xchg
fxam
pop
mov
enter
adc
cld
mov
xlat
vmwrite
mov
xchg
jno
push
adc
inc
or
mov
push
sub
or
mov
je
mov
mov
gs
je
repz
push
pop
lea
add
push
ret
pop
sub
mov
stos
and
jne
pop
fsubr
mov
xor
lods
push
dec
sbb
mov
fidivrl
push
ss
jge
dec
mov
imul
fwait
sub
mov
add
sbb
ds
xchg
idivb
out
inc
movsl
jmp
jo
inc
lds
inc
mov
push
pop
jb
packsswb
mov
scas
data16
lret
fcomp
mov
clc
es
mov
sub
or
ret
loopne
sub
push
push
sub
jp
out
lock
loop
sbbl
dec
cld
js
push
sub
repnz
xor
xlat
stos
inc
or
push
mov
dec
subl
mov
lret
in
icebp
push
int3
ret
push
idivb
dec
pop
test
popf
bound
or
sbb
inc
testl
iret
stos
repnz
xor
cs
dec
or
fisttpl
adc
cmc
aas
or
jne
je
mov
adc
push
cltd
or
iret
icebp
dec
xchg
leave
mov
push
inc
sbb
enter
xor
aam
test
aas
int3
and
fwait
pop
push
jg
push
cwtl
mov
xchg
mov
dec
cwtl
mov
sarb
xor
mov
es
sub
push
mov
jge
xor
cmp
sbb
inc
add
cs
or
mov
std
shrl
push
lods
jno
pop
fiaddl
cld
popf
repnz
imul
adc
fwait
sti
fbld
nop
fstl
and
popa
rcrl
xor
jae
gs
xchg
dec
mov
xchg
cltd
int3
xchg
mov
or
pop
and
inc
loope
lcall
bound
repnz
add
add
mov
cli
jmp
jne
mov
add
and
cld
movsl
dec
scas
hlt
ja
fsts
enter
mov
bound
roll
dec
and
rcl
xor
inc
movsb
sti
jl
ljmp
jg
sub
xchg
xchg
pop
xor
push
mov
xchg
lods
jbe
xlat
xor
mov
cmp
rorl
fsubrp
test
adc
jns
cmp
adc
iret
cmpsb
xor
add
and
pop
jns
inc
and
mov
xchg
xor
out
outsb
or
popa
stc
in
frstor
lahf
push
ret
mov
mov
mov
lock
and
sbb
gs
adc
test
orl
cmp
daa
jle
ss
xor
mov
in
sbb
je
push
or
or
mov
dec
js
shlb
and
nop
xor
dec
stc
push
xor
sub
pop
adc
icebp
xor
movsb
inc
int3
jne
push
inc
rcrb
hlt
js
in
push
or
and
andl
add
adc
mov
xor
dec
iret
mov
mov
mov
enter
insl
cmp
mov
push
adc
jnp
xchg
out
jns
inc
add
adc
dec
in
stos
jbe
sbb
pushf
inc
jge
andb
mov
movsb
and
jge
shlb
notb
imul
mov
cmpsl
sbb
lock
cmp
fisubrs
test
inc
jbe
aam
pop
jnp
pop
pushf
and
dec
push
shll
jge
sbb
cmpsl
mov
xchg
push
call
mov
cs
pop
dec
xchg
mov
mov
mov
fbld
dec
ljmp
add
shrl
or
test
gs
push
jg
mov
pop
adcl
js
scas
inc
ds
xor
sub
dec
std
add
ficompl
in
inc
pop
sarl
test
test
jno
insl
inc
sub
mov
test
lret
in
enter
mov
xchg
sti
sub
addl
pushf
outsl
divb
in
stc
outsl
jne
ret
cmpb
repnz
daa
stc
push
in
inc
pop
testb
rcrb
mov
aam
pop
xor
pop
clc
shl
inc
mov
enter
push
cwtl
xor
sbb
or
icebp
push
or
bound
pop
leave
cmp
dec
adc
insb
add
jno
and
dec
mov
movsb
scas
dec
ja
inc
repz
jl
sub
movsl
outsb
movsl
xchg
add
inc
test
hlt
dec
dec
add
dec
ror
inc
cmc
cmp
add
jne
add
push
dec
dec
mov
push
inc
mov
mov
inc
xchg
pop
pop
xchg
mov
movsb
imul
add
popa
mov
bound
ljmp
sub
aaa
pop
jae
dec
inc
stos
jne
enter
adc
pusha
mov
cmp
lods
imull
adc
pop
leave
or
fwait
sub
xor
cmp
push
pop
imulb
rcrb
mov
fs
out
lcall
loope
cld
jo
xchg
int3
sbb
fcompl
jno
dec
inc
jge
push
les
int
adc
jmp
mov
push
push
or
push
inc
int
jno
das
mov
sub
cwtl
xchg
jno
dec
inc
fs
sub
fdivr
ror
int3
stos
je
jne
rcll
icebp
dec
mov
hlt
out
push
push
movsb
test
test
inc
xor
add
psrld
adc
jae
xor
lcall
sub
sub
cmp
cmp
repz
enter
jmp
xor
cs
push
lahf
sahf
sarl
mov
jno
int3
inc
jmp
and
lea
gs
and
loop
fisttps
in
sbb
add
jno
pusha
xchg
lods
mov
pop
cmp
dec
xchg
jne
stos
xlat
jns
rclb
mov
cs
cmp
sub
data16
into
es
fisubrl
push
fcmovnbe
lahf
mov
scas
in
mov
enter
xor
push
ja
repnz
bound
sbb
mov
pop
sub
jns
dec
cld
clc
cs
or
jnp
lret
in
mov
cmpsl
fsubl
js
aad
push
or
leave
cmp
roll
pop
int3
js
in
add
out
movsb
lods
sahf
ja
sub
or
lds
sub
nop
divl
push
popa
or
movsb
insl
mov
pop
test
push
inc
mov
mov
adc
jmp
mov
insl
in
add
in
or
test
sahf
lods
pop
je
popf
dec
jno
pop
clc
inc
mov
sbb
addb
xchg
xor
xchg
shrb
bound
jnp
push
mov
cmpsl
push
testb
lcall
push
lret
mov
mov
xlat
add
mov
pop
add
popf
xor
xor
sub
dec
add
pop
add
in
push
call
dec
add
aad
sub
dec
mov
dec
test
mov
mov
test
ljmp
adc
or
xor
xchg
lods
sbb
add
jge
incb
cmpsb
jmp
cmp
sub
aaa
sarl
xor
scas
aam
fwait
es
repnz
jnp
mov
xor
xlat
or
loop
pop
and
test
sarb
mov
out
xor
icebp
mov
lods
mov
or
lock
lds
sub
inc
loop
push
arpl
lea
mov
sub
or
out
lahf
fdivrs
repnz
jp
cwtl
mov
push
jno
outsb
icebp
filds
out
je
push
lds
push
adc
mov
push
jb
mov
inc
sahf
or
cmp
lret
js
push
xchg
incl
aad
scas
lds
js
leave
xor
out
jl
pusha
and
pop
rcll
mov
pusha
addr16
jmp
dec
cmp
dec
adc
xor
pop
cmpsb
arpl
inc
jne
mov
ja
enter
xor
mov
xchg
pop
fiadds
lock
movsl
aad
mov
out
mov
xor
shl
lahf
pop
xorl
dec
cmp
inc
lds
pause
cmp
mov
popf
das
adc
mov
sbb
pushf
push
fcoml
ret
jno
sbb
sub
pop
scas
push
push
cltd
jl
out
in
pop
sbb
pop
sub
das
inc
or
es
push
lcall
lds
mov
icebp
xor
aaa
or
dec
sbbl
gs
je
subl
dec
inc
pop
scas
iret
mov
in
push
addr16
adc
fs
xchg
cmp
ficomps
mov
repz
or
xlat
jl
in
cmp
lcall
subl
jnp
movq
sti
and
pushf
ror
lods
sbb
movsb
push
aas
lcall
mov
and
inc
push
xor
popf
jae
push
les
xlat
imulb
lods
daa
ja
aam
pusha
push
je
sbb
outsl
addr16
sub
cmp
dec
cmp
or
pop
lods
fisttpl
push
cmp
adc
ja
push
subb
sbb
push
test
in
aas
mov
mov
sar
jmp
bound
pop
pop
lds
push
dec
adc
lods
cld
lcall
ja
dec
dec
mov
shr
adc
mov
in
push
je
insl
sbb
rorb
movsl
adc
shll
in
and
or
aam
nop
loop
outsl
scas
and
jns
fstps
dec
pop
jge
dec
xor
sbb
pop
lret
sub
lret
xor
inc
xor
dec
jl
xor
cmpb
or
movsb
pop
adc
enter
sahf
bound
mov
xor
xlat
sbb
xchg
sub
xor
daa
lock
xchg
cwtl
pop
xchg
cmp
ss
xor
adc
in
cmp
lcall
icebp
in
int3
add
mov
stos
rorb
mov
add
inc
xor
cs
jp
fs
mov
icebp
arpl
insl
jo
mov
dec
je
cli
jo
and
or
push
pop
mov
sub
and
js
push
sub
pop
or
push
mov
push
adc
xor
lret
sub
sub
add
inc
mov
enter
mov
push
inc
mov
or
cli
test
push
adc
or
es
xor
jnp
add
push
jnp
xor
and
add
fldt
lods
inc
adc
hlt
xchg
sub
sub
cmp
addr16
inc
aas
ret
xchg
mov
sbbl
adc
fwait
gs
xchg
fs
dec
adc
push
or
pop
inc
mov
xchg
mov
cld
cmpsl
dec
xor
std
int3
mov
cmp
cmp
test
pop
aaa
sti
aas
lea
out
jae
stc
mov
rcl
mov
dec
xor
pop
hlt
add
add
dec
jno
and
sti
pop
lock
jb
lods
sbb
mov
ret
or
fisubl
out
add
insb
xchg
call
int
adcb
or
idivl
inc
mov
inc
mov
scas
xchg
outsb
test
add
and
pop
je
jge
sahf
in
jb
xchg
test
mov
test
ds
dec
xor
in
insl
jg
icebp
xchg
sub
cmp
stc
sbb
daa
out
ret
xor
xor
push
mov
lahf
or
mov
gs
push
movl
jmp
inc
push
clc
mov
adc
neg
fsubl
jge
int
add
lods
fbstp
add
aas
cli
lods
jecxz
xor
mov
addr16
mov
cmp
hlt
push
push
jnp
mov
pusha
or
test
lock
lock
jo
add
xchg
or
adcb
push
and
mov
icebp
push
push
cmpsl
push
xchg
cmp
xor
mov
ret
sbb
inc
xchg
call
stos
outsl
outsl
push
movl
adc
xlat
popa
mov
and
outsl
lcall
sbb
frstor
adc
xchg
fidivrl
dec
jmp
dec
push
sbb
pop
mov
popf
cwtl
pusha
pop
fwait
jno
inc
inc
adc
lea
ljmp
je
in
cld
and
pop
test
mov
mov
in
in
mov
sti
adc
mov
xchg
cwtl
mov
sbb
xor
lahf
loopne
loope
xor
push
mov
int
adc
cmp
mov
pop
cmp
adc
adc
ljmp
cmpsb
adc
js
loop
lods
mov
roll
std
test
inc
gs
mov
movsl
sbb
push
push
pop
mov
cs
lret
jno
int3
push
xor
cwtl
pushf
pop
mov
std
xchg
add
mov
daa
pushf
dec
jl
xchg
cmp
stc
in
fwait
dec
mov
dec
nop
repz
test
into
rcrl
scas
jg
inc
pop
push
sti
cld
ja
lahf
ret
scas
xchg
sub
ret
out
sub
pop
xchg
mov
das
cmp
rol
dec
fsubrs
test
mov
fcoml
stos
fmul
adc
add
jne
daa
sub
sahf
mov
jp
pusha
enter
mov
je
and
push
mov
pushl
cmc
rolb
jmp
lea
in
add
outsl
ds
inc
nop
or
repz
mov
sub
loope
clc
into
into
inc
js
out
jg
stos
and
mov
xchg
movsl
out
mov
test
imul
push
cmpsb
sub
lods
int
ret
fldenv
dec
adc
imul
sub
shll
call
or
inc
sub
nop
pop
adcl
cmp
into
cld
and
jb
aad
test
mov
cli
pop
jne
xor
sub
hlt
cmp
push
ds
shrb
sbb
dec
and
popl
mov
imul
jb
or
jecxz
out
adc
iret
jp
lret
test
dec
stos
xchg
out
cmpsl
jmp
or
pushf
rcll
jecxz
insl
lret
mov
xchg
sbb
mov
ficoml
jns
sbb
cltd
push
inc
into
into
cmp
push
mov
sub
ret
shr
cli
out
hlt
or
data16
dec
imul
push
ror
das
xchg
dec
adc
data16
je
mov
aam
out
mov
cld
xor
int
shll
jle
lock
mov
shl
inc
aad
xor
fnstsw
insb
mov
movsl
icebp
loope
imul
sub
jcxz
sbb
xor
aad
popf
jl
pop
in
add
or
xor
xchg
out
xchg
movsl
pop
sarb
lret
jge
enter
xchg
inc
mov
jb
and
pop
or
mov
and
leave
mov
imul
pop
ret
insl
sbb
ljmp
push
or
push
fsubrl
test
stc
iret
sbb
cmp
stos
hlt
js
dec
xchg
les
fdivs
push
roll
add
jg
adc
xor
pusha
subl
movsb
std
inc
ss
pop
jmp
or
mov
pop
and
add
push
inc
hlt
sti
push
enter
push
test
movsb
cmpsb
inc
cmp
xor
sbb
xchg
or
inc
jnp
xor
test
outsl
adc
cmp
movsl
add
mov
mov
sbb
loop
add
mov
or
sub
testl
mov
jge
xor
pop
sub
add
pop
or
fldenv
aaa
div
stos
push
nop
jb
jb
cld
jnp
pop
sahf
xor
and
in
fcmovne
mov
cwtl
cmp
cmpsl
and
pavgw
int
les
ucomiss
mov
sub
int3
loop
test
xor
test
dec
adc
enter
or
jle
push
mov
mov
movsl
and
insb
or
adc
stos
sub
mov
loopne
es
fwait
jb
popa
imul
mov
push
xchg
ja
test
popf
push
push
mov
xchg
imul
mov
repnz
mov
test
add
cs
xchg
pushf
xor
push
nop
add
mov
loopne
imul
xchg
mov
lods
lretw
outsl
pop
push
xor
push
ret
cmp
and
gs
dec
xchg
hlt
out
adc
jg
and
xchg
scas
int
cmp
push
mov
and
jl
clc
into
sbb
flds
orl
fucom
ret
adc
bound
mov
add
in
xchg
leavew
das
jne
scas
cmc
inc
icebp
adc
push
pop
adc
sbb
inc
mov
mov
rcrl
jnp
pop
sti
jge
inc
sti
cwtl
jl
add
or
sbb
fists
lds
clc
imul
push
std
mov
pop
dec
cs
lret
arpl
mov
pop
cmovnp
push
iret
and
adc
stc
cmp
push
pushf
jle
cld
call
daa
scas
adc
jmp
cmp
rcll
pop
add
jnp
dec
stos
push
jecxz
cmp
sub
into
imulb
mov
cmpsb
cmp
push
lcall
aas
mov
dec
call
xor
dec
mov
out
shr
and
repz
and
inc
lods
add
fsubrs
cwtl
js
cmp
rol
insl
aad
imul
mov
ret
sahf
xchg
sub
push
aad
push
jbe
and
or
jg
test
cltd
lret
int
sub
test
jbe
cli
dec
test
nop
or
fldl
mov
or
xchg
sub
jbe
or
cmp
aas
mov
and
mov
lret
cli
xor
fsubrs
push
dec
xchg
mov
cmpsl
out
xor
js
setle
shr
scas
adc
fs
sbb
or
dec
mov
add
icebp
pop
sbb
nop/reserved
call
bswap
sub
inc
faddl
jg
push
pop
mov
xchg
ljmp
out
dec
jno
sbb
fwait
stos
je
pop
lcall
in
ja
sti
push
lods
shll
lods
inc
mov
ret
pop
fidivl
jno
cwtl
pop
adc
cmp
les
fs
frstor
adc
cmp
push
ret
jmp
sbb
sbb
bound
adc
adc
pop
or
mov
aas
in
mov
adc
or
imul
jne
cmp
push
and
les
adc
stos
cmp
popa
in
insl
xchg
into
mov
xor
adc
lahf
popf
bnd
insl
hlt
mov
push
shll
cmp
dec
repnz
imul
movb
neg
xchg
pop
jmp
shl
rcll
loopne
mov
insb
or
fs
or
inc
pop
stc
icebp
xchg
test
repz
dec
lea
xchg
lds
push
push
int
rclb
mov
dec
mov
mov
or
push
or
mov
xor
ffree
ret
mov
adc
dec
add
adc
dec
out
clc
aad
sub
insb
jo
into
es
push
enter
test
loopne
mov
addl
mull
lock
dec
ss
and
mov
aas
and
push
mov
ficompl
imul
push
jne
out
xchg
xchg
jge
gs
sbb
mov
jmp
cmp
sbb
push
fsubr
dec
inc
push
jmp
or
mov
stos
loope
xchg
inc
lcall
jae
out
mov
setnp
in
xchg
mov
fucomip
mov
sub
sbb
icebp
dec
add
pop
mov
pop
xor
jle
xchg
jo
lds
and
ficompl
daa
test
aam
cmpsb
movsb
negl
enter
outsb
test
shll
inc
test
sbb
sahf
lods
dec
stc
in
ret
xor
sahf
cltd
nop
push
sbb
rol
outsb
movsb
jge
bound
mov
xor
out
and
mov
or
dec
jno
mov
mov
std
shll
lods
in
cmpsl
movl
cmp
jns
fst
adc
test
mulb
nop
mov
insl
push
popa
les
jp
ljmp
fcmove
repz
dec
ret
mov
inc
out
sbb
xchg
sub
cmpsl
aam
cs
lea
rcrl
sub
rclb
aas
pop
pop
sbb
shlb
adc
mov
or
cs
add
jb
and
push
fbstp
cli
loope
jecxz
inc
mov
fistpl
jnp
jno
mov
sbb
lock
jb
mov
mov
mull
xor
and
fmull
sbb
stc
dec
out
cmp
popa
test
cmpsl
movsb
in
jb
mov
outsl
xor
inc
sti
mov
jl
adc
ljmp
jbe
cmpsl
sub
add
xor
lods
jno
add
addb
or
mov
pop
dec
lea
or
gs
adc
xor
mov
add
adc
notl
cmp
lret
icebp
mov
imulb
mov
fistl
int3
and
mov
mov
push
xchg
mov
cwtl
inc
push
adc
insl
movsb
cwtl
cltd
arpl
hlt
push
jmp
scas
adc
mov
sbb
fs
fld
and
loopne
lret
xor
or
cwtl
popf
out
dec
dec
sbb
outsb
mov
psadbw
or
outsl
ja
jb
popf
addr16
cli
sbb
scas
jle
stc
pushfw
jns
lret
sbbl
adc
xorl
mov
adcb
mov
xor
push
ret
and
icebp
or
shrl
cmpsl
cwtl
fisubs
out
in
jns
cld
adc
xchg
xchg
xchg
adc
mov
xchg
cmp
sbb
cli
mov
stc
dec
shrl
nop
sbb
add
cld
pop
sbb
xchg
sbb
jno
mov
in
sahf
pop
in
lcall
mov
sub
mov
gs
insl
xor
enter
pusha
push
jmp
das
faddl
and
dec
out
sub
aas
in
xchg
jnp
cwtl
cwtl
inc
add
nop
mov
sbb
iret
cmp
mov
cmp
push
jg
and
clc
int3
imul
push
lds
jp
add
fldl
enter
and
mov
adc
mov
jo
loopne
xchg
gs
jns
mov
iret
or
push
mov
or
inc
inc
scas
arpl
stc
add
loope
insb
adc
call
push
cmp
lods
das
in
test
shlb
jns
jno
xchg
ja
xchg
pop
daa
cwtl
out
mov
inc
and
lods
and
in
daa
scas
out
sbb
sbb
pusha
cs
pop
mov
into
adc
jge
adc
sti
dec
and
push
mov
mov
add
fwait
movsb
lods
dec
into
sarb
ficomps
inc
adc
xchg
push
mov
pop
lods
sub
nop
jb
rcll
mov
adc
cld
or
jge
jbe
dec
addr16
test
fistps
je
mov
mov
in
pop
inc
div
test
inc
into
scas
and
cmc
xor
mov
shll
js
cmp
push
fisttps
sub
jne
shlb
ljmp
jne
add
jae
scas
lea
push
dec
rcl
or
xor
or
int
mov
movsl
stc
push
aam
in
lea
xchg
xor
push
out
dec
aam
mov
sub
push
xor
test
fidivrl
dec
hlt
and
shl
push
mov
jnp
adc
push
adc
ljmp
inc
mov
jp
mov
movsb
movl
pushf
add
cli
mov
call
dec
jno
push
and
jb
mov
and
in
push
add
and
add
push
xchg
add
aam
outsb
xchg
stos
das
cwtl
dec
push
outsb
mov
aad
push
leave
ljmp
fs
js
inc
sar
mov
insb
inc
jns
ds
cmp
or
mov
inc
in
adc
mov
arpl
mov
inc
jl
adc
mov
rorb
pop
mov
mov
and
pop
or
jo
and
sti
push
cmp
test
mov
and
clc
or
push
push
sahf
cld
cvtps2pd
xchg
dec
push
fs
cltd
loopne
je
repz
and
les
add
das
pop
repz
flds
push
dec
inc
insl
push
inc
mov
xor
jp
jecxz
loope
stos
ret
jle
jae
inc
psubusw
mov
xchg
std
jmp
push
mov
dec
lds
pop
test
cmp
das
mov
mov
pusha
fwait
iret
add
xchg
outsb
pushf
adc
gs
sbb
jns
xor
aam
sbb
pushf
jne
loope
inc
ljmp
pop
mov
sbb
dec
mov
and
sub
loope
lods
les
sub
ret
mov
mov
mov
jecxz
xchg
repz
mov
cmc
jno
mov
mov
push
and
or
push
xchg
loopne
or
cmpsb
xchg
gs
xchg
xchg
xor
fndisi(8087
cmc
cmpsb
xlat
mov
outsl
loope
add
shll
xchg
cmpsb
or
inc
in
scas
xchg
aas
inc
fbstp
sbb
mov
leave
lods
add
dec
push
sbb
arpl
test
mov
jmp
sbb
outsb
fisttps
push
inc
sbb
fwait
mov
scas
push
lret
imul
mov
test
imul
aad
cs
dec
push
mov
xlat
enter
dec
stos
jbe
or
flds
xor
outsl
pusha
jl
icebp
fiaddl
mov
xor
jl
cmp
loope
fs
or
mov
mov
mov
cmp
mov
xchg
mov
fdiv
xchg
mov
sbb
out
mov
push
fdivr
fisubrs
mov
je
mov
shr
xchg
inc
leave
inc
pop
mov
add
loopne
mov
add
jbe
mov
pop
xchg
fnstcw
sub
fcomp
mov
in
add
push
adc
jo
lds
push
or
pcmpgtb
adc
xchg
sub
mov
call
and
shll
cmp
push
pop
or
jg
dec
insb
lret
add
jge
sub
insl
fs
test
std
lds
push
xor
mov
imul
pop
mov
xor
mov
mov
fdivrl
sahf
jbe
dec
cs
daa
sbb
sarl
ret
repz
sub
jl
mov
xor
in
sti
push
pop
xor
je
ret
cmp
mov
jge
and
mov
lcall
inc
sub
pushf
jmp
rcll
inc
repz
mov
mov
mov
inc
mov
rol
fs
push
jne
xchg
loopne
dec
mov
es
xorb
lds
into
mull
or
cs
cmp
mov
stos
test
dec
ljmp
xchg
xor
add
jg
mov
pusha
and
das
sbb
lods
push
es
jmp
test
cmp
clc
add
xor
xor
jmp
sub
mov
sbb
lcall
mov
fldcw
out
mov
mov
mov
cltd
rcrl
mov
or
xor
mov
imul
or
xor
dec
pop
and
add
pushf
or
dec
dec
mov
xor
sbb
data16
in
mov
xchg
pop
xchg
xchg
dec
jne
test
shll
add
add
pop
orb
xchg
fwait
jl
cmp
mov
mov
and
fs
lret
int
and
lock
out
inc
jp
sub
dec
fadd
pop
movsb
adc
jnp
add
ljmp
push
or
mov
pop
mov
loope
idivb
insl
scas
mov
pop
in
rorb
xchg
shll
hlt
push
sahf
mov
lods
push
call
pop
fsubrl
jb
lock
bound
sub
data16
xchg
out
jecxz
cmp
out
arpl
add
mov
out
push
int3
sub
lret
fidivrl
xor
enter
jl
imull
jge
cvttps2pi
ret
adc
or
mov
sub
dec
test
insl
loope
into
inc
xor
mov
popf
or
les
xchg
push
addr16
mov
inc
cmp
pop
and
in
imul
inc
mov
dec
mov
hlt
shl
imul
in
enter
xchg
cli
xlat
cli
dec
ret
xchg
lock
dec
jb
fwait
test
roll
jmp
mov
push
mov
stc
jne
or
std
push
sub
sti
imul
rcr
add
mov
sub
cwtl
in
enter
add
lahf
adc
jae
shrb
orl
pop
fwait
out
int3
sbb
imul
loope
fistl
dec
push
lods
mov
push
inc
divl
stos
lods
push
jae
movzbl
mov
mov
sbb
and
pop
mov
sbbl
js
jp
mov
lods
and
or
dec
dec
dec
add
das
cmp
ret
sub
sbb
icebp
mov
dec
jge
subl
and
jbe
jae
rcrb
or
push
repnz
xchg
aas
pop
pop
cmp
lods
inc
mov
icebp
rcr
shll
repnz
sub
dec
sbb
jg
cmp
xchg
push
xchg
push
jge
mov
cmp
xor
pop
in
cmpsl
in
adc
sbb
and
call
test
fisttpll
sub
jl
sbb
add
in
jmp
imul
test
cmp
mov
inc
xor
or
adc
pop
dec
or
cmp
xchg
sub
int3
daa
mov
mov
jbe
mov
daa
sbb
lea
hlt
inc
enter
decb
mov
dec
add
loop
add
movsl
push
lods
insb
loope
mov
adc
outsl
movl
mov
pop
hlt
or
adc
push
daa
dec
sub
popf
ds
and
cmpsl
lods
lahf
jg
and
rorl
lret
and
cmp
insb
push
mov
fsubrl
data16
into
stc
dec
std
jecxz
daa
fists
cwtl
add
xchg
inc
into
mov
inc
xor
dec
xchg
push
test
mulb
jb
pop
scas
mov
popa
lea
jbe
xchg
movsb
and
pop
popf
pusha
aas
ja
insb
dec
and
xor
adc
testb
movsb
shll
jno
scas
stos
jecxz
fimull
mov
clc
jnp
sbb
sbb
cmpsl
pop
sbb
rcl
in
stc
rorl
fimull
ja
push
and
pop
xchg
mov
test
push
sub
jbe
enter
test
imul
icebp
call
mov
test
cmpsb
and
mov
popa
les
inc
ds
mov
ljmp
imul
in
xor
cwtl
adc
jmp
sub
or
fiadds
add
ret
pop
divl
dec
fisubl
lcall
add
in
in
push
movsb
loope
push
pop
sub
nop
dec
out
push
lods
lahf
pop
sub
adc
pop
and
insl
nop
or
mov
ret
or
data16
ret
jg
push
add
inc
call
mov
mov
adc
arpl
add
popa
imul
shll
xchg
insl
mov
fwait
es
cmpsl
mov
sbb
add
mov
sub
jp
into
gs
inc
add
cs
frstor
cmpsl
xor
adc
test
inc
call
pop
xchg
cmp
mov
adc
aad
arpl
mov
rsm
xlat
xchg
push
leave
mov
movsl
into
ficoml
cmp
aas
inc
das
xor
ja
push
dec
xor
daa
push
xor
outsb
add
call
scas
fstpt
xor
pusha
mov
imul
inc
mov
dec
push
call
loopne
pusha
jle
fisttpl
mov
or
xor
jne
ss
in
pop
inc
cltd
cmpsl
aas
jg
ja
or
cmp
icebp
push
aad
mov
test
sub
mov
mov
sbb
mov
or
push
cltd
pop
test
pop
loop
pop
jne
decl
sarb
jg
les
imul
push
mul
bound
cwtl
in
or
enter
push
xchg
aaa
and
call
xchg
fwait
mov
insl
test
mov
imul
sahf
or
ret
sti
fucomi
jmp
ret
mov
sti
pop
clc
sbb
jne
pop
fld
and
aas
test
pop
outsb
iret
cmc
xorb
divl
jecxz
cmpsb
inc
and
fcomps
dec
shlb
lods
xor
adc
les
mov
push
ljmp
lea
notb
into
fs
jbe
jb
leave
bound
insb
fildll
aad
or
push
cwtl
mov
mov
sbb
aad
and
cmp
cmp
andb
ja
add
or
movsb
xor
gs
mov
push
arpl
pop
test
inc
mov
cltd
cmp
add
inc
movsl
xor
jno
pop
xchg
push
sbb
adc
cmp
mov
lret
jl
dec
sbb
cmp
jecxz,pt
mov
jg
mov
push
cmp
int3
mov
popa
out
loop
loopne
push
mov
jbe
lock
mov
dec
and
lret
insl
sub
inc
fnsetpm(287
hlt
ficomps
xchg
mov
cmpsl
loope
lret
leave
pusha
stos
push
std
push
lds
mov
aad
xchg
xchg
mov
fstenv
xor
cs
fdivl
movsb
cmpb
push
cltd
ret
insl
cmp
adc
pop
fucomp
sar
dec
or
sub
xchg
pop
in
fists
push
lahf
xorb
sahf
movsb
xchg
xchg
pop
test
adc
cli
icebp
in
mov
int3
loope
movsl
push
cmpsb
test
pop
ljmp
jecxz
int
push
addr16
popa
push
dec
sub
cmc
mov
daa
sub
xlat
push
shll
dec
call
inc
outsl
les
push
mov
outsb
pop
jae
ret
in
pop
int
push
mov
lahf
push
or
mov
xchg
jecxz
movsl
jbe
adc
jbe
jb
stos
enter
sbb
and
sub
subl
jne
mov
adc
sub
lock
popf
mov
stos
dec
xor
push
into
jecxz
add
loope
pop
mov
mov
adc
out
movsb
in
or
ret
test
imul
je
nop
push
addr16
dec
ljmp
lcall
outsl
pop
push
adc
popf
push
fs
lock
cli
cs
xlat
mov
int3
mov
es
insb
std
jbe
xor
fisubrs
lock
lods
mov
loop
movsl
lods
push
or
cmp
cmp
pop
imul
mov
mov
fisubrs
ja
inc
sub
loop
stos
mov
lahf
int3
pusha
imul
mov
test
xor
repnz
push
push
in
jbe
into
push
mov
cld
inc
jp
dec
jmp
push
stos
jns
hlt
pop
push
add
sarb
cld
scas
aam
andl
into
cmc
test
jmp
rcrl
add
in
je
xlat
orl
dec
lcall
in
lock
mov
roll
push
push
sub
sbb
sbb
hlt
std
sub
or
xorb
mov
inc
sub
addb
adc
stos
inc
popa
scas
pop
sbb
fcomi
and
inc
xchg
into
or
mov
sub
and
repz
ljmp
mov
jns
pop
and
lock
das
pop
xor
enter
sbb
int
sysenter
and
ljmp
out
mov
addr16
sbb
mov
fsubrs
mov
mov
bound
adc
rorl
test
dec
outsl
mov
sbb
adc
mov
jns
sub
xor
xor
jge
int
loop
rcll
sbb
icebp
movsl
xchg
std
adc
imul
popa
xor
insb
and
or
mov
ret
jecxz
negb
cmpsb
das
sahf
adc
mov
or
sbb
inc
lea
cli
add
adc
or
leave
sub
push
mov
sbb
adc
jae
frstor
out
hlt
sub
cmpsb
lcall
sub
adc
mov
test
add
dec
pop
push
inc
push
sub
ficoml
pop
arpl
xchg
inc
mov
in
daa
inc
jg
or
jne
imul
out
xorb
xchg
ja
jb
jl
test
lret
rcr
popf
jae
fmull
adc
pop
jb
arpl
ss
jle
pop
or
lahf
lahf
pop
pop
fidivl
cmp
jns
sub
dec
cmp
aas
xor
xor
or
ficomps
push
adc
cmp
stos
inc
inc
imull
adc
jecxz
lcall
roll
dec
data16
lcall
hlt
mov
jno
lds
test
xchg
or
jge
dec
pop
and
popf
mov
mov
cmp
inc
clc
icebp
xor
lcall
insl
push
out
sar
call
repnz
cmp
cmp
sub
clc
aad
inc
push
xchg
xchg
cli
sbb
mov
outsl
outsl
jne
cmpsl
inc
outsb
mov
scas
ljmp
bound
mov
mov
outsl
cmp
xor
pop
shll
push
add
xor
adc
in
xchg
out
xlat
ficoms
cwtl
mov
push
into
cs
stc
cmpsl
int3
sbb
movsb
push
dec
cwtl
arpl
call
stos
cmp
dec
je
leave
pop
dec
stc
inc
fs
stos
jae
and
adc
sub
push
inc
test
mov
test
out
mov
pop
add
add
cltd
test
xchg
loopne
push
repnz
cmp
in
inc
into
test
sub
fcoml
cmp
fisttpll
jbe
and
push
hlt
ret
sbb
or
aam
mov
mov
xchg
divl
pop
jmp
jp
aad
inc
in
ss
mov
fiaddl
pop
loope
andl
push
add
mov
movsl
sbbb
sub
mov
loopne
loope
iret
or
or
les
mov
push
aaa
lcall
push
pop
jb
pop
and
xchg
sahf
nop
mov
ret
lods
xlat
cmpsl
jnp
inc
cs
div
dec
jno
and
imull
enter
adc
call
xor
mov
insl
mov
in
pusha
mov
aam
jno
mov
repnz
push
scas
add
cmp
cmpsb
cmp
lods
jae
fsub
aas
sbb
in
mov
pop
call
adc
inc
iret
mov
and
insb
pop
mov
add
pop
jnp
dec
push
inc
inc
stos
aam
mov
stc
jmp
idivl
xor
into
mov
out
inc
jge
out
lcall
adc
mov
inc
xchg
push
outsb
movsb
scas
xlat
mov
add
fwait
shlb
sub
xor
jno
jns
mov
add
or
cmp
outsb
mov
cmp
das
inc
fsts
push
or
sbb
fisttpll
dec
mov
aas
mov
xchg
shlb
sub
and
adc
mov
dec
pop
test
shl
imul
and
fdivrs
fsubrl
xchg
mov
call
add
jb
outsl
lahf
and
sbb
xbegin
mov
pop
push
in
fbld
xchg
pop
scas
sub
loope
stc
scas
rol
adc
xchg
and
pop
fnstsw
sub
jecxz
stos
jo
out
ss
ja
mov
sub
and
cmp
rcrb
sbb
adc
nop
push
movsb
stos
int
pop
mov
dec
in
xchg
and
fisttpl
xchg
pop
int
gs
icebp
int
mov
repz
push
dec
and
and
insb
xor
les
jmp
enter
mov
mov
stos
mov
sarb
or
out
nop
jg
adc
repz
push
mov
enter
mov
roll
push
cwtl
xchg
aas
fbld
sbb
shll
repnz
into
dec
call
mov
das
adcl
cli
inc
imul
mov
fcmovb
cs
andb
fimuls
xor
int3
scas
stc
mov
data16
stc
xchg
out
sbb
lret
sbb
inc
xor
aam
ljmp
or
nop
add
cmpsb
rcrb
sti
fisttps
dec
jp
rcrl
sbb
xchg
es
mov
cmp
jne
dec
std
inc
mov
js
pop
and
loope
fadds
mov
mov
sub
icebp
pop
sti
enter
or
arpl
jb
ret
out
lahf
jl
in
cmp
mov
xlat
xchg
and
cwtl
push
imulb
xchg
ficoml
dec
lcall
in
outsl
lret
pop
nop
cmp
xchg
mov
ret
sbb
lock
xchg
repnz
cmpsb
data16
test
jg
lcall
scas
dec
sbb
xchg
cmp
loopne
push
call
std
pop
xor
mov
sub
and
add
sbb
sbb
cmp
aam
into
mov
mov
push
add
setae
aam
mov
paddsb
dec
sbb
je
test
pop
out
lcall
ds
cli
xchg
out
imul
push
andl
lret
mov
add
push
loop
mov
out
adc
das
add
push
je
add
pop
and
xchg
ds
in
rcr
test
sub
mov
inc
cld
jns
lret
or
sub
sbb
jle
imul
dec
mov
inc
jae
or
mov
adc
leave
sbb
cmovb
fsubrs
push
xchg
mov
je
cmpsl
dec
push
mov
fdivrl
out
and
lock
dec
icebp
lret
inc
orb
test
and
fs
ds
mov
cmp
mov
insl
cmp
lods
hlt
mov
shrb
adc
js
xchg
lods
xchg
cmp
lock
fdivrs
stos
cmp
inc
shl
dec
xorl
fsubrl
pop
jbe
mov
xlat
rcr
mov
jecxz
fadds
mov
stc
mov
sub
xlat
pop
inc
mov
testb
mov
movsb
xchg
pusha
ljmp
in
and
test
jae
loop
pop
in
push
pop
push
rcl
push
mov
test
dec
xchg
push
andl
cmpsl
dec
pop
dec
jns
dec
pop
jns
sbb
inc
aas
les
popa
movsb
lcall
mov
dec
movsl
xchg
mov
popa
lret
loopne
out
loopne
mov
mov
pusha
cltd
outsb
pop
adc
or
daa
hlt
into
das
pop
test
jns
jb
mov
shll
insl
pop
addr16
mov
leave
mov
lods
pop
jno
sub
sub
cld
jge
ja
pop
loopne
jp
sbb
and
sbb
sub
xchg
xor
iret
mov
fcomps
in
ds
pop
xor
addr16
push
cltd
xchg
stc
fisubrs
aam
insb
loope
pushf
pop
pop
inc
rclb
lret
imul
ds
mov
dec
test
mov
mov
inc
push
scas
mov
int3
es
jnp
and
pop
gs
xchg
mov
cmpsl
mov
popf
push
jmp
cmp
sbb
mov
fstl
mov
out
add
pop
fistpl
fwait
mov
nop
fcomps
push
std
popf
and
hlt
shr
and
mov
mov
ficoms
pop
dec
repnz
cmpsl
xchg
aam
in
es
sub
lock
pop
cmp
out
int3
cmp
xor
popf
adc
icebp
jmp
xor
shll
mov
inc
es
and
std
jle
lock
push
cmp
add
popa
dec
pop
cmp
out
sub
shrl
rol
mov
sbb
mov
out
xchg
jae
dec
sub
int3
lret
scas
loope
or
imul
in
dec
pusha
sahf
push
faddl
or
adc
inc
jb
int3
mov
xchg
jno
js
ds
sbb
pop
pop
movsl
dec
fsubrl
mov
popl
std
sub
pop
mov
xchg
aas
xor
sbb
aam
sub
add
cmp
int
push
xchg
mov
push
dec
mov
inc
xor
push
push
stos
inc
push
repz
jmp
daa
jnp
mov
mov
adc
iret
jge
mov
xchg
push
lret
pushf
fimuls
inc
xor
push
mov
xor
in
cmpsl
xchg
sbb
dec
ret
xlat
pop
outsb
in
jl
pop
std
loop
test
inc
lds
lret
inc
sbb
in
scas
fistps
sub
xchg
mov
add
xchg
inc
jmp
jge
and
cmp
loope
movsl
push
cs
push
inc
ljmp
xor
int
ljmp
inc
fs
movsb
inc
push
mov
dec
xor
gs
pop
cmp
mov
xor
pop
test
xchg
sub
sbb
outsl
cmp
not
stos
add
cmp
lea
adc
dec
jae
jbe
leave
mov
cmp
xchg
movsb
sub
insl
stos
fwait
shll
scas
sarl
outsb
rorl
leave
pop
xchg
ss
sub
add
mov
je
fwait
jns
test
mov
scas
icebp
fs
sbb
xchg
aad
push
rcrl
pop
dec
pextrw
iret
icebp
js
xchg
aaa
lods
mov
cmp
jae
repz
int
dec
push
sar
cmp
or
imul
and
js
mov
in
out
inc
mov
sub
lret
xchg
imul
adc
add
adc
push
repz
inc
pop
or
or
sub
cmp
lea
shrb
popa
cmpsl
inc
out
mov
outsl
mov
and
jl
xor
rorl
lods
in
es
or
adc
pop
in
pop
xchg
jnp
pushf
inc
jge
call
test
es
lea
inc
lock
scas
imul
dec
add
repnz
sarl
xor
add
int3
pop
mov
ds
dec
adc
insl
add
push
cmpsb
mov
or
ss
repnz
leave
lock
mov
jo
mov
sti
mov
outsl
mov
out
jl
out
es
xchg
add
mov
ja
mov
sahf
jecxz
cmc
outsb
jecxz
xor
ljmp
mov
into
jbe
jecxz
xchg
dec
or
jo
cmp
iret
lcall
mov
sbb
testb
movsb
mov
xchg
jmp
mov
xchg
sub
out
iret
cmp
cmp
push
jno
push
sbb
loopne
or
mov
jbe
fwait
push
lods
aas
out
sub
mov
mov
scas
cmc
jns
add
leave
pop
daa
loope
loope
jecxz
mov
push
mov
mov
and
xchg
mov
nop
push
mov
sarb
aad
arpl
lret
push
jnp
sub
out
in
mov
cmp
sub
idiv
adc
roll
into
and
or
bound
push
fistpl
pop
push
insl
inc
stos
pop
mov
inc
dec
xchg
dec
rcl
cmp
jbe
leave
and
push
jnp
mov
ret
fisttpll
sahf
outsb
add
imulb
je
mov
in
sbb
push
inc
fcompl
dec
cli
mov
sbb
xor
cmpsb
daa
loop
adc
dec
fcoml
mov
xor
add
mov
and
cmp
dec
push
cld
jb
mov
lods
and
mov
pushf
rorl
mov
push
call
cwtl
fldt
adc
shlb
popa
icebp
cmpsl
and
lock
test
xchg
sub
test
xor
cmc
lods
or
ret
xchg
lds
lahf
cltd
std
in
jecxz
sbb
push
lods
loopne
stos
rcrb
xchg
shll
push
mov
popl
adc
mov
xchg
or
push
xchg
aaa
jbe
ficompl
push
adc
dec
lds
mov
call
fiadds
jbe
cmp
xchg
fwait
ds
cmp
out
loopne
movsb
leave
push
out
test
xor
add
lcall
adc
cltd
sbb
mov
testb
and
xchg
fnstenv
adcb
add
mov
scas
mov
stc
lcall
insl
xor
xorb
jge
adc
push
xchg
stos
stos
lcall
pop
xor
inc
inc
jecxz
or
cmp
out
movsb
pop
dec
pop
mov
scas
xchg
mov
loope
xchg
adc
pop
pop
aaa
adc
test
lahf
repz
cmp
into
inc
dec
test
int3
sub
ficompl
dec
sub
adc
fiadds
repz
enter
xor
je
add
jbe
dec
fbstp
test
and
push
int
cli
aas
jbe
xlat
ret
fucomi
nop
jp
les
std
fistpl
jp
push
in
clc
push
daa
ja
aam
aas
ficoml
pop
add
outsl
xchg
and
dec
mov
sti
xchg
rclb
adc
jmp
mov
sub
inc
insl
call
lea
rclb
imul
sub
dec
add
mov
xchg
or
adc
jg
inc
xchg
scas
lea
mov
jno
push
push
pop
cmp
or
mov
xor
xor
dec
inc
cmp
pop
scas
xlat
or
inc
pop
fisttps
das
out
icebp
mov
scas
mov
lods
sbb
dec
pop
and
cmp
fdivrs
dec
les
add
and
imul
ds
sub
sbb
mov
test
mov
jae
addb
jmp
adc
fdivr
insb
in
jne
mov
rcll
xor
mov
push
xor
lock
filds
call
fists
mov
xor
mov
fimuls
outsb
and
test
xor
jbe
loop
out
add
and
mov
test
or
mov
push
popa
outsb
cmp
and
adc
inc
dec
lahf
cmp
cmc
dec
and
xor
inc
clc
xchg
pop
jbe
mov
sbb
les
lock
sub
loop
cmp
subb
pop
frstor
aas
pop
bound
jo
aam
movsb
mov
fisubs
and
inc
jmp
pop
mov
sbb
popa
jo
popa
out
pop
arpl
mov
in
sub
mov
pop
add
and
ss
xor
cli
xor
pop
pusha
pushf
add
in
lret
jb
test
mov
nop
flds
cld
gs
pop
jnp
test
int
add
push
xor
dec
sahf
movsb
jg
enter
push
loop
mov
movl
mov
or
cld
sub
dec
mov
add
xchg
push
xchg
pop
jae
push
xchg
fcomps
shll
sbb
int3
lahf
mov
xchg
jg
cmpsl
dec
hlt
lahf
adc
or
jg
sbb
lret
ret
push
fiaddl
pushf
ret
ficoms
sub
das
stos
mov
mov
clc
xor
rolb
icebp
mov
and
or
ret
repz
add
stos
lds
mov
imul
ja
out
ret
stos
fisttpll
clc
pop
insl
and
sbb
mov
lret
push
cmp
in
call
jl
jns
psubusb
dec
sbb
in
scas
push
xchg
or
inc
scas
add
mov
pop
mov
or
cmp
jno
popa
or
pop
jne
int
push
pushf
jnp
push
pop
stc
jbe
fldl
mov
cmp
jge
lcall
ss
loop
pop
adc
aas
push
int
fwait
aas
arpl
mov
push
shlb
out
fwait
mov
add
pop
xchg
subb
aas
pop
jns
xor
mov
loope
mov
xor
mov
bound
mov
jl
paddw
sub
sbb
adc
push
call
fabs
xchg
inc
inc
and
jns
cmp
testb
mov
adc
in
repnz
pop
xchg
pop
cli
loope
fwait
mov
out
into
into
sbb
mov
fwait
mov
inc
inc
orb
clc
sbb
and
test
andl
lock
jnp
or
mov
std
pop
std
loope
add
out
gs
mov
mov
bound
scas
incl
pop
data16
hlt
test
mov
mov
pop
jns
jg
fdivl
sbb
xchg
mov
push
pop
xchg
sub
or
sub
ja
cmp
lods
repz
imul
cmpsb
call
imull
mov
addr16
in
movsb
sbb
push
shrl
sbb
bound
jg
movsl
lods
sbb
arpl
inc
xor
mov
jns
mov
xor
adc
jno
or
and
push
adc
or
jl
scas
and
xor
aad
mov
outsl
ja
jge
xchg
movsl
mov
jg
pop
orb
adc
lret
mov
fisubl
cwtl
push
test
daa
shrl
mov
clc
out
add
fisubrs
daa
popf
das
or
lret
inc
mov
dec
fucomp
les
repz
cmpl
pop
jnp
xchg
out
sub
frstor
int3
test
add
xchg
add
jnp
mov
aam
imul
xchg
cmp
mov
and
ljmp
rol
and
lea
subb
ret
mov
gs
ja
cmp
insl
adc
fwait
mov
jmp
push
sub
cwtl
mov
insb
lret
pop
add
mov
iret
mov
adc
xchg
cld
shl
mov
push
jge
lods
shrl
add
lea
mov
cmp
stos
sub
fcos
add
movsb
or
and
aas
or
nop
cmpsl
arpl
xchg
cmp
and
cmpsb
cltd
sbb
pop
jne
or
push
loopne
lods
mov
dec
xchg
push
rcrb
inc
and
imul
mov
jbe
jae
sbb
mov
popf
lahf
jo
inc
mov
dec
lock
adc
cmp
pop
xor
mov
sub
dec
and
sub
loope
sbb
lahf
call
mov
pop
cmpsl
adc
jb
and
xor
push
jnp
std
xor
xchg
fidivrl
mov
xor
adc
or
outsl
add
and
mov
sti
inc
cmc
pop
push
lret
mov
mov
fs
aam
pop
push
push
in
or
cld
repnz
mov
jae
ljmp
sub
stos
xchg
pop
mov
aad
mov
shl
fimull
inc
jle
inc
push
icebp
add
cmc
or
push
out
mov
ror
daa
xlat
jg
mov
js
adc
es
aam
lds
sbb
fcomip
clc
aas
adc
cmp
ret
test
xchg
call
cmpb
cmpl
decb
pusha
fbld
lahf
repnz
scas
rcrb
sbb
or
cmp
rcrb
js
imul
cmp
clc
push
rcrl
jbe
aam
mov
dec
stos
sbb
and
xchg
test
cmc
imulb
cmp
cld
in
cmp
loop
nop
mov
jmp
or
push
fmuls
int3
rolb
and
bound
adc
lods
addb
lods
mov
insb
xchg
pushf
roll
mull
and
sahf
loop
dec
pop
lret
sahf
mov
xor
lea
pminub
mov
add
fs
mov
loopne
adc
xor
mov
or
push
jecxz
stos
popa
lds
adc
negl
gs
mov
cmpsb
mov
jge
test
inc
push
xchg
test
xor
xchg
nop
dec
popa
sahf
clc
loopne
jb
pop
mov
cmc
repnz
test
and
dec
inc
hlt
xor
test
xor
into
or
mov
xchg
jns
jb
mov
aaa
jge
push
fistl
jno
pusha
sub
scas
xchg
xor
jecxz
or
mov
xchg
jb,pt
shrl
das
mov
addr16
pop
add
rcl
adc
cmp
jp
cwtl
xchg
stos
mov
daa
xor
cli
mov
push
div
jl
es
stc
shrb
int
sub
ret
adc
sbb
dec
pop
repnz
inc
jb
mov
xor
mov
loopne
dec
and
sbb
cmc
jno
hlt
jae
cs
pushf
jecxz
push
dec
out
in
in
mov
stos
push
push
jp
push
fnsave
add
jo
insb
lahf
loop
dec
scas
jbe
push
cmp
in
sub
out
cmc
and
add
int3
sbb
and
sbb
cmp
fiaddl
inc
aam
aaa
or
and
les
jb
call
push
cmp
insl
insb
jmp
adc
inc
stos
mov
movsl
aas
inc
jb
mov
sub
push
pushf
int3
test
outsb
jp
mov
insb
lea
sbb
mov
xor
aam
pop
sbb
sbb
xor
lods
inc
jb
cmp
or
mov
add
popf
fcmovu
add
xchg
mov
mov
xor
call
into
and
push
push
stos
jle
xchg
xchg
mov
fnstcw
popf
push
xchg
fst
cmp
mov
mov
sbb
shlb
das
popf
sbb
push
scas
inc
dec
mov
dec
jge
sbb
jp
loopne
xchg
pop
pop
fnsave
xchg
pusha
rcll
push
test
lds
and
add
sub
mov
push
roll
mov
cmc
or
inc
cmc
push
or
repz
add
mov
into
fcmovnbe
mov
mov
jle
sub
pop
and
shrb
jb
das
lock
mov
inc
out
pop
adc
insb
mov
ss
scas
lods
and
out
in
iret
or
pop
insl
jb
xchg
call
ja
mov
pop
lcall
outsl
sbb
jae
sarl
sub
ja
xchg
sbb
mov
clc
pop
sub
add
mov
int
add
repz
divps
and
push
fstpl
dec
mov
cltd
mov
push
xchg
rol
enter
cmpsb
daa
push
dec
jno
adc
call
cltd
neg
sahf
test
sub
cmp
pop
scas
sub
jbe
xlat
mov
add
rcr
outsb
cmp
fiaddl
repz
cwtl
out
mov
out
in
loopne
insb
adc
shlb
outsb
popa
hlt
out
xor
pop
mov
scas
jmp
sbb
enter
jp
xor
inc
mov
mov
jle
rcll
dec
js
out
repnz
mov
push
adcl
jmp
cmp
pusha
in
testl
sahf
insl
and
and
jp
jle
ss
sub
ljmp
mov
in
imul
add
outsl
adc
aad
jle
dec
lock
sub
addl
arpl
push
jo
mov
dec
xorl
fwait
cld
cmp
cmp
shr
insb
cmpsl
lcall
jae
and
mov
sbb
ret
push
lock
andl
aam
je
jl
sbb
iret
cmc
inc
les
out
xor
mov
xchg
into
jl
jbe
cmp
inc
jno
mov
ret
add
mov
xchg
daa
dec
add
push
add
or
dec
int3
push
or
mov
sub
mov
insb
xor
mov
int
loop
push
xchg
dec
lcall
mov
sahf
dec
push
lds
loopne
out
ja
jne
jg
ret
pushl
mov
mov
ds
sub
mov
daa
push
xchg
lods
roll
daa
dec
cmp
out
push
mov
stos
jmp
into
and
dec
inc
mov
dec
add
mov
scas
and
dec
addr16
outsb
mov
xchg
callw
inc
insb
sbb
rcrb
aaa
mov
sti
nop
jo
stc
xor
mov
push
push
pushf
jae
dec
mov
pop
scas
or
sbb
adc
jg
mov
mov
xchg
mov
jmp
mov
outsl
js
pushf
jg
push
std
xchg
out
add
mov
out
fcmovnb
adc
mov
pop
iret
aam
mov
vphsubbw
aam
xchg
jo
adc
cmc
cmp
pop
push
outsl
sub
push
and
jg
inc
pop
stc
test
lds
mov
jne
inc
add
sbb
mov
jbe
mov
rcll
clc
idivl
cmp
fnsave
sbbl
mov
xchg
dec
inc
js
test
cmp
setge
inc
pop
mov
hlt
call
cmp
fsubrl
inc
dec
jae
stos
jmp
dec
es
fistpll
test
inc
into
icebp
push
dec
inc
bound
and
ljmp
cmp
test
push
aad
sub
test
jns
jecxz
pusha
cmp
xlat
xchg
xlat
loop
fistpl
jnp
imul
xchg
mov
in
xchg
mov
sti
cmp
mov
or
inc
push
inc
bound
push
push
cmp
popf
inc
and
xor
adc
insb
jne
std
scas
inc
adcb
idivb
or
rol
adc
inc
stos
dec
in
fwait
mov
mov
out
ret
enter
dec
mov
fprem1
xor
inc
dec
notl
fwait
pop
clc
int
jbe
push
inc
mov
sti
mov
push
and
mov
test
or
sub
inc
push
and
rcr
jecxz
jne
in
cmpsl
stos
test
sbb
push
in
xor
push
mov
fnstsw
push
push
pop
insw
lea
mov
pushf
fdivl
add
pop
adc
loope
bound
xchg
push
lods
xlat
adc
ret
cli
mov
mov
adc
fiaddl
std
sbbl
mov
in
sub
xor
cwtl
pop
inc
jno
mov
and
fimull
int3
repz
adc
repz
shrb
js
sti
ljmp
jb
add
inc
loop
gs
jp
pop
insb
add
aam
call
mov
lea
xchg
pop
rcr
data16
jns
ret
add
imul
jb
in
sub
hlt
add
adc
push
popa
mov
addr16
add
jecxz
add
cs
int
lcall
xchg
aad
xor
push
in
jbe
jg
jnp
subl
inc
or
xorl
cs
xor
sub
in
fsubrl
cmp
inc
adc
jno
jnp
mov
mov
pop
mov
sub
aas
xchg
push
gs
sarb
xchg
hlt
mov
mov
sti
js
das
popa
or
pop
push
jp
cmp
faddl
mov
out
inc
and
fldenv
sarb
stos
pop
pop
scas
dec
stc
lret
mov
push
cs
cmp
movsb
out
lcall
loop
jmp
pop
out
addr16
cmpsb
jnp
out
or
out
mov
insb
cltd
mov
out
imull
and
xchg
jp
xor
lret
fwait
cwtl
repz
int3
mov
lods
jns
stos
mov
enter
adc
sbb
cvtps2pd
fists
jbe
add
inc
int3
xchg
bound
and
test
push
test
in
mov
ljmp
mov
fisubrs
or
lods
or
and
loop
pop
lret
movsl
je
iret
repz
jecxz
fs
add
roll
lret
data16
lret
and
mov
or
out
sti
sti
ljmp
cmp
jo
lret
adc
lret
xor
cmp
movsb
loop
daa
in
out
cmc
pusha
adc
sub
xor
jo
push
iret
aaa
loop
pinsrw
add
lock
add
mov
mov
cmp
mov
dec
rolb
cmp
adc
repnz
enter
and
sbb
lret
int3
fistpl
stos
mov
push
lods
hlt
xchg
pop
mov
jns
push
or
jecxz
or
pop
jnp
bswap
and
cmp
mov
fldcw
clc
cmp
pop
sbbb
outsb
fisubl
arpl
fsubrs
adc
mov
imul
adc
push
in
fidivrl
aam
mov
jg
in
stos
loop
lret
mul
inc
outsb
mov
call
inc
jno
ret
cmp
push
sarb
out
dec
dec
movsb
xor
xor
push
pop
cmpsl
je
xchg
mulb
dec
sub
cmp
add
fldenv
int3
mov
fbld
loop
pop
test
cld
adc
mov
out
xor
mov
and
in
and
ljmp
out
push
mov
xor
mov
cmp
lret
cmp
jno
repz
mov
scas
push
mov
pop
adc
lret
push
adc
mov
inc
sahf
cs
fcmovnb
rcrl
mov
pop
mov
out
mov
dec
dec
pop
rcll
enter
push
hlt
push
andl
shr
push
loopne
cmpsl
mov
cld
stos
loopne
or
or
jno
roll
sbb
jl
mov
aam
mov
inc
mov
std
lea
adc
xchg
fsubl
jb
ficomps
je
sbb
or
fdivrs
mov
pusha
popl
mov
fildl
pop
dec
insl
inc
and
xor
mov
movsb
xchg
inc
int
or
adc
int3
mov
mov
pop
pop
lods
clts
outsl
mov
outsl
and
cli
push
out
xorl
lahf
mov
push
pop
xchg
lds
cmpl
popf
mov
adc
jbe
push
xchg
mov
xchg
or
cmpsb
mov
mov
jns
out
dec
mov
cmp
pop
mov
xchg
sub
mov
nop
dec
pusha
sub
mov
repz
push
insl
jmp
sub
jno
push
je
sbb
out
xchg
pop
repz
xchg
jno
movsb
ret
outsb
loopne
push
ljmp
dec
addr16
cmp
iret
sub
lock
arpl
and
test
aas
cltd
je
jmp
pop
cmp
add
xchg
pushf
pop
or
xchg
lea
cwtl
pushf
lret
scas
cmp
push
andb
or
outsl
repnz
xchg
mov
adc
inc
int3
or
lea
jb
push
ret
ds
jns
sub
mov
ss
push
arpl
in
aas
pusha
stc
add
push
in
rcrb
dec
stc
sbb
mov
leave
nop
out
aaa
test
add
mov
lret
inc
sahf
je
lea
inc
jo
xor
fisttpl
and
inc
xchg
add
popa
aaa
xchg
lcall
adc
push
pop
fnstenv
or
lcall
inc
pop
mov
ljmp
mov
jg
rol
rclb
and
mov
fiaddl
adc
sub
cld
xor
xlat
jmp
das
cmc
add
and
pop
mov
xchg
loope
push
sbb
out
xchg
popl
mov
mov
cmpsl
fimuls
in
test
add
xor
aaa
mov
gs
push
out
sub
daa
mov
cltd
push
sub
pop
cmp
mov
fwait
addr16
cmp
add
movsb
es
enter
pop
mov
mov
daa
cmp
testb
shlb
stc
xchg
xlat
or
les
pop
sbb
add
outsb
mov
cld
les
pop
sub
inc
add
sti
inc
lret
jnp
sbb
xor
dec
movsl
sbb
jo
inc
ss
cmc
sub
xorb
out
movsb
in
cmp
movsb
mov
xlat
and
pop
aam
int3
push
xlat
mov
test
push
leave
or
fwait
xor
sub
repz
cmc
push
enter
in
mov
inc
cmp
dec
xchg
xchg
mov
aaa
lock
sub
scas
scas
testl
mov
dec
mov
mov
add
inc
imul
pusha
sarl
pop
lock
daa
enter
loop
jge
jno
cmp
mov
mulb
sarb
mov
fisubs
xchg
pop
test
inc
test
stos
xchg
mov
lcall
cmp
mov
enter
into
mov
aam
jp
lret
lds
mov
xchg
adc
push
movsb
cli
scas
cli
and
push
cmc
cmp
es
mov
pop
cld
dec
mov
mov
jno
add
int
or
cmp
sbb
pop
loop
mov
test
mul
cmpsl
sbb
or
adcb
lret
cmc
sub
fiaddl
inc
in
hlt
inc
lret
push
push
test
mov
sub
lods
test
adc
gs
cmp
jne
sbb
pop
fsubr
repnz
or
popf
or
mov
jns
int3
shlb
fnsave
adc
mov
mov
mov
fdivrl
retw
fidivl
or
xor
jge
lcall
cmpsb
mov
inc
dec
cli
insb
mov
aaa
push
mov
pop
dec
out
sub
pop
adc
inc
das
rsqrtps
fisttps
push
ds
addb
xchg
notb
push
ds
add
sti
mov
sub
pop
loope
out
stos
sub
inc
push
xchg
cmp
fstl
inc
mov
xor
inc
jp
mov
mov
lods
cs
in
and
xor
pop
std
push
subl
pushf
jl
lods
clc
stos
push
test
insb
xchg
rcll
sub
xchg
push
pop
rclb
sub
push
mov
pop
inc
sub
ret
jmpw
sub
dec
test
adc
das
out
cwtl
adc
pushl
inc
mov
pop
idivl
iret
mov
mov
arpl
fstl
sub
mov
fwait
push
cmp
gs
cwtl
addb
mov
mov
shrb
or
push
xchg
scas
add
cmpsb
dec
pop
fwait
push
cmpsl
lret
insl
xchg
daa
sub
or
cmp
ret
xor
mov
shrb
shlb
gs
aam
or
dec
fucom
hlt
outsb
xchg
cmc
xor
pop
int3
cmp
and
jl
xor
or
lret
sbb
xor
cld
icebp
insb
insl
imul
and
orl
jl
repnz
dec
mov
mov
je
sahf
sbb
cmp
clc
ret
loopne
incb
dec
lret
lcall
ret
lret
jp
jnp
jb
sbb
dec
fninit
mov
in
jbe
sub
pop
out
pop
mov
and
mov
and
or
int3
sub
mov
mov
leave
shlb
ss
repz
or
popf
jns
sbbl
adc
mov
sbb
scas
fisubrl
sar
rcl
negl
stos
pop
xchg
inc
addps
out
in
test
data16
push
test
sbb
sti
adc
xchg
push
or
icebp
or
pop
mov
scas
outsb
add
lret
iret
push
adc
imul
lods
cwtl
add
scas
add
loop
add
xchg
mov
xor
mov
insb
push
and
iret
pop
mov
subb
lret
adc
mov
mov
rorl
test
dec
mov
xlat
mov
push
jnp
repnz
shrl
nop
pop
mov
pusha
fnsave
in
cli
sbb
xor
outsl
fldl
or
add
rorb
xchg
insl
inc
pop
add
lods
sbb
imul
mov
adc
out
and
pop
ljmp
aam
lret
stos
test
push
loope
xchg
push
xor
xchg
push
test
lret
roll
sbb
mov
pop
cmc
sbb
fdivrs
push
mov
push
mov
add
sbb
or
mov
xchg
mov
pop
jle
stc
dec
mov
out
mov
clc
sub
rcll
jmp
mov
pop
and
ret
stc
cmp
cmp
mov
push
lock
fmul
leave
jge
test
push
push
test
jbe
or
leave
mov
roll
adc
mov
pop
dec
ss
xchg
addr16
mov
adc
std
and
and
and
and
stos
dec
loopne
and
out
repz
vfmsubaddps
fcompl
aad
xor
jge
inc
je
fnstsw
test
sbb
popf
sub
std
xchg
jle
fsubrl
mov
adc
bound
stc
test
faddl
out
mov
mov
outsb
lea
das
adc
xchg
lcall
cld
or
mov
cld
inc
repnz
pop
pop
xlat
and
insl
and
pop
mov
xchg
mov
cmp
loop
idivl
insl
addb
cmp
out
pop
in
pop
xchg
pushf
out
insb
mov
inc
jno
cmpsb
mov
cmc
mov
xor
sub
ja
sarl
add
notl
roll
mov
cmpb
jmp
clc
xchg
ljmp
movsb
cmp
push
xchg
or
mov
or
xlat
imul
push
pop
pop
jbe
mov
adc
movsb
call
imul
mov
adc
test
mov
cmp
lcall
test
jmp
fcmovnbe
add
aaa
adc
push
xor
bound
int
out
inc
xchg
and
scas
imul
out
dec
out
jle
jno
xor
and
jmp
mov
hlt
lods
sarb
mov
sbb
xchg
mov
call
cld
xor
xchg
mov
xchg
cld
push
cs
xchg
mov
push
add
pop
aas
cmp
inc
sahf
xor
pusha
mov
xchg
cltd
rol
jle
inc
mov
cs
push
mov
adc
push
mov
cli
outsl
es
sub
xor
ljmp
int
push
mov
popf
jne
lock
ffreep
adc
adc
inc
imul
test
push
shr
inc
mov
mov
jecxz
dec
test
sahf
pusha
cld
sub
int
lret
sub
fdivrs
in
dec
insl
aaa
ss
std
sub
js
xor
jge
in
jb
and
xchg
push
or
push
cld
push
or
movsb
or
add
pusha
or
out
inc
cmc
dec
mov
lcall
jg
stc
ficoms
xor
data16
add
and
mov
cmp
pushf
dec
jmp
pop
in
mov
in
jae
xlat
mov
and
cs
dec
dec
or
lret
out
xor
nop
movsb
sbb
jns
pop
es
es
leave
lret
xchg
pop
test
pop
xor
lret
jnp
out
or
or
mov
cmpsl
add
pop
pop
sarl
pop
push
jo
mov
adc
or
loopne
xor
rcll
xchg
shrl
push
movsl
sub
in
pusha
decl
int
jb
mov
insl
cwtl
pop
je
and
ficoml
sub
ja
and
push
inc
and
or
inc
aas
sti
inc
jae
add
mov
clc
dec
mov
test
rorl
out
jo
and
lea
jmp
ret
inc
test
dec
mov
inc
pop
mov
cwtl
cmpsb
inc
dec
aam
cmpsl
in
or
ficompl
xchg
sbb
sahf
dec
jns
test
sbb
sbb
cmpsl
ds
cmpsb
and
pop
insb
mov
adc
sahf
dec
cmp
mov
into
out
rcl
xor
cld
add
cmc
inc
pop
test
jmp
je
ret
jbe
xlat
mov
pop
jp
ds
xor
outsb
int3
push
std
inc
in
rol
movsl
pop
mov
nop
mov
nop
add
imul
fiadds
daa
test
cmp
push
insl
out
test
xor
rclb
mov
rol
arpl
cwtl
cs
fstpl
jb
dec
inc
aaa
jg
ret
jne
and
inc
testl
pop
push
into
mov
imulb
sahf
cld
mov
xor
int3
repnz
mov
sbb
sbb
hlt
repz
xorb
fs
popa
inc
addb
call
sar
pop
ds
fnsave
mov
out
test
adcl
mov
mov
dec
jnp
mov
push
jl
inc
jnp
sbb
push
lret
adc
movsl
cld
jmp
and
pop
clc
shrb
lcall
cld
push
cmp
sub
insl
mov
xor
std
push
loop
faddl
mov
das
imulb
xchg
inc
es
xchg
ljmp
mov
xchg
cmp
jbe
xor
mov
sarb
inc
and
rcrb
mov
fidivl
popf
lret
mov
cmp
xor
xchg
int3
in
add
adc
loope
pop
xchg
jmp
pop
lret
into
jbe
idiv
mov
jl
data16
mov
jl
push
xor
int3
ret
xlat
mov
and
jb
repz
cmp
bound
sbb
pushf
iret
inc
dec
cmpsb
dec
xchg
loope
fdiv
mov
add
loopne
in
cmc
cld
loop
out
daa
test
rolb
mov
sub
xchg
loopne
mov
icebp
pop
and
dec
mov
pop
add
xorb
inc
dec
xchg
push
cmpsb
shr
mov
mov
shrb
jo
mov
mov
or
mov
mov
gs
adc
outsb
es
and
push
pushf
mov
and
cltd
add
scas
xchg
in
or
cmp
inc
divb
in
xor
inc
and
cmp
mov
lret
push
fldl
jns
lret
inc
push
imul
push
test
pushf
jae
loop
mov
xor
mov
aam
push
push
jmp
inc
jp
push
pop
shll
ss
pushf
in
pop
dec
in
scas
divb
sbb
mov
lds
pop
int3
pop
test
cli
scas
test
add
mov
gs
out
test
js
sub
add
xchg
stc
stos
stos
xchg
mov
mov
jno
push
sbb
adcl
int3
or
push
push
inc
fdivrl
jge
js
int
stos
mov
adc
inc
pushf
pop
cmp
cli
xor
mov
mov
ror
and
pushf
ficomps
and
mov
lods
add
dec
jo
ljmp
or
mov
jmp
sbb
xor
adc
leave
jno
jmp
add
dec
cwtl
jne
in
rolb
int3
pop
push
push
add
push
inc
sbb
sar
sbb
jb
push
sub
push
or
jno
mov
jbe
or
or
lcall
mov
adc
mov
and
iret
add
or
and
pop
xor
xchg
mov
in
loope
shll
and
scas
sti
addr16
mov
pop
lea
mov
cli
in
xor
ret
jb
movsl
pop
push
loop
dec
mov
sub
push
ljmp
sub
ret
pop
std
fcomip
stos
sub
ljmp
adc
out
test
or
sub
and
fcmovnb
cmp
les
adc
xchg
mov
dec
adc
fwait
adc
es
lcall
loopne
xlat
leave
inc
or
mov
push
cmp
dec
pusha
cmp
mov
in
xlat
fcmovnbe
out
es
lea
push
cwtl
inc
scas
push
xor
mov
sti
pop
jnp
mov
xchg
push
hlt
cmp
test
sub
hlt
call
mov
adc
xchg
repz
es
daa
push
push
pop
arpl
cltd
stos
push
out
dec
adc
dec
jge
cmc
cli
xor
mov
xchg
bound
fs
insb
xor
add
cmp
mov
xor
lds
sti
and
push
fs
jbe
inc
imul
scas
jae
out
fldcw
jb
loop
jne
lds
pop
push
cmp
mov
pusha
push
outsl
add
cmp
in
xor
pop
dec
jae
iret
fcoms
xor
cmpsl
or
cmp
push
movsl
pop
insb
call
mov
lret
add
mov
lods
nop
fnstenv
pop
pop
js
mov
sbb
insb
push
jg
fildll
push
jmp
fdivs
add
in
xor
xchg
aad
rorl
mov
mov
xchg
popa
ljmp
push
lods
out
xorb
mov
iret
test
inc
filds
addb
and
orb
mov
das
mov
and
jnp
sub
insl
push
jbe
lea
or
xchg
imul
sahf
lret
xor
loope
imul
scas
add
mov
and
lods
pop
mov
cld
loope
jl
pop
xchg
cmp
xor
daa
inc
mov
xor
add
fimuls
dec
lret
imul
adc
mov
inc
jo
add
in
mov
mov
push
daa
xor
xchg
cmc
xchg
xchg
inc
fldl
sub
clc
and
xlat
mov
cmp
insl
lret
inc
fwait
mov
lcall
std
jecxz
or
sbb
jecxz
sub
sbb
data16
or
inc
xchg
repnz
rcll
push
mull
into
push
xchg
les
mov
fdiv
test
inc
into
xchg
push
testb
movsb
sbb
mov
cld
test
test
outsb
dec
ds
fs
idivb
and
in
cs
sbb
lods
xor
mov
pop
leave
mov
pop
test
xor
inc
insl
hlt
ret
sbb
popa
sub
xchg
movsb
fdivrl
xor
dec
pop
sub
cmpl
rcrb
pop
aam
rol
in
cli
jmp
sahf
and
in
or
shrb
xchg
rorl
cmp
jns
bound
insb
hlt
stc
fs
xlat
shlb
or
push
pop
sbb
cmc
idiv
js
je
xor
fisubrs
shr
jl
xor
mov
test
in
jecxz,pt
iret
sub
in
xor
mov
push
sub
sbb
mov
mov
lahf
out
sbb
movsl
mov
call
dec
and
loope
stos
inc
adc
fadds
adc
arpl
std
loopne
inc
xor
and
sti
into
loope
adc
call
sub
jne
incl
push
pusha
out
mov
movups
lds
dec
testl
in
sub
sub
arpl
add
mov
aas
arpl
mov
aam
ljmp
adc
xchg
iret
add
and
jmp
mov
add
push
adc
jo
dec
mov
hlt
loopne
push
ljmp
add
mov
adc
pop
out
gs
dec
mov
mov
fwait
in
pop
mov
or
shll
pop
scas
inc
jecxz
sbb
mov
inc
sbb
test
push
daa
aaa
mov
push
mov
lds
and
inc
fstp
dec
lahf
xchg
in
pop
mov
add
adc
inc
push
push
cltd
sub
mov
pop
ja
out
testl
pop
push
dec
push
test
push
inc
xor
cmp
imul
inc
mov
imul
bound
imul
jmp
lock
in
frstor
dec
cs
or
push
dec
xor
mov
imulb
cmpl
adc
mov
jae
ss
ja
insl
fiadds
jmp
fnsave
cld
and
jmp
inc
in
repz
cmpsl
jae
dec
aad
rorb
neg
mov
dec
lds
cltd
inc
cs
dec
and
xchg
add
push
aam
out
hlt
ret
or
jle
inc
xor
or
sbb
icebp
imul
xchg
dec
mov
icebp
and
fistpl
inc
add
shll
sbb
aad
mov
xchg
xchg
adc
pop
clc
out
and
push
shrl
enter
and
cmpsl
cld
xchg
xchg
pop
push
lods
lods
movsl
fxch
fcmovnb
shrb
in
scas
push
mov
xlat
sbb
aad
fisubs
dec
mov
xacquire
aad
cld
pop
into
dec
daa
inc
mov
mov
enter
xor
push
or
rorl
cmpsl
subl
jns
dec
into
push
mov
out
orl
stos
rclb
push
jecxz
or
in
cmp
es
fcmovne
popa
pop
xchg
pop
cli
push
jnp
in
xchg
in
ret
mov
insb
adc
das
xchg
adc
stos
adc
inc
data16
in
xor
nop
rorl
mov
lcall
add
test
adc
mov
xlat
pusha
test
add
xchg
aam
aad
popa
or
push
adc
push
cmp
lret
xor
js
xor
xchg
outsl
nop
stos
pop
jge
jne
xor
mov
or
adc
shrb
lock
mov
pusha
nop
out
adc
xchg
fistps
or
rclb
add
push
fwait
hlt
loope
jbe
and
aam
push
inc
mov
mov
dec
int3
popa
cmp
insb
popa
mov
repz
dec
lea
pop
into
aam
xchg
sti
xchg
cmp
inc
cmpsl
jne
movsb
xchg
adc
sbb
icebp
sub
xchg
jae
push
mov
mov
jno
shl
mov
pop
mov
adc
aaa
nop
cmp
sub
es
nop
dec
mov
lods
lret
push
ljmp
stc
cltd
add
inc
inc
adc
sbb
or
pop
xchg
inc
push
mov
cli
mov
pusha
adc
xchg
adc
lcall
adc
mov
xchg
lock
clc
repnz
add
lea
adc
sub
and
cli
xor
popa
test
fdiv
push
sahf
dec
jmp
xor
sete
xorl
jno
sub
enter
out
mov
stos
in
mov
adc
in
add
out
inc
scas
mov
fs
stos
mov
xchg
es
mov
aad
mov
andb
adc
sbb
or
mov
push
cmp
test
inc
push
mov
cmc
jne
fldenv
mov
test
aad
scas
ret
mov
mov
inc
push
mov
data16
mov
pop
fwait
and
sub
pop
pop
pop
ds
cmp
xor
les
out
push
test
cmp
pushf
jne
sbb
push
pop
mov
sbb
aaa
in
sbb
sti
push
inc
cs
pop
jnp
loope
js
decl
xlat
or
sub
or
mov
dec
xchg
fucom
ja
push
pop
repnz
mov
out
mov
out
into
imul
call
xchg
xchg
inc
cmp
xor
mov
jnp
cli
into
enter
cs
and
xchg
xor
add
mov
push
jns
and
nop
jns
sbb
loope
sbbl
outsl
pop
push
into
scas
xchg
fnstcw
jmp
mov
push
dec
pusha
jmp
ret
mov
or
sbb
pop
mov
add
jbe
inc
loop
test
xchg
adcl
ja
cmp
sub
mov
xchg
gs
or
pop
pop
js
movsl
andb
divb
jns
push
divb
adc
pushf
cmp
std
test
push
xor
push
int3
and
out
ret
enter
cmp
sbb
nop
mov
dec
pop
test
loope
cmp
movsl
jae
xor
adc
iret
imul
mov
es
push
fwait
scas
mov
pop
fstpl
adc
or
int
sahf
mov
pop
push
mov
notb
scas
imul
loope
iret
adc
push
out
sar
repnz
xor
fcoms
or
cmc
push
in
pushf
rcl
cmp
adc
cmpsb
xor
jno
push
sbb
mov
dec
and
imull
repz
cmp
loop
hlt
adc
pop
scas
fldenv
mov
je
push
les
mov
or
cmpsb
add
lcall
das
inc
cmp
adc
xchg
pop
lret
or
fcomps
jb
cmp
cli
ss
imull
jno
add
inc
xor
xchg
sub
rcrl
out
dec
jmp
mov
aam
sbb
jae
popf
cld
or
leave
mov
dec
inc
xchg
pop
mov
adc
outsb
pop
mov
push
mov
cmc
mov
mov
or
cmp
addr16
loop
jns
jge
xchg
lock
fwait
dec
ret
dec
pop
call
cmp
popa
jle
xlat
fsubs
out
or
scas
shlb
fwait
mov
sbb
adc
lret
scas
add
cld
or
mov
lret
push
data16
mov
adc
dec
imul
sub
dec
xchg
xor
cmp
xchg
neg
mov
mov
dec
js
and
rcll
inc
adcb
push
stos
xchg
arpl
les
pop
test
xor
flds
mov
xor
cmp
jb
stc
mov
pop
sbb
xor
cmp
gs
mov
sub
xlat
push
adc
cmpl
and
xchg
imul
cmp
and
mov
mov
cld
push
xlat
adc
jg
xchg
sbb
in
pop
cmp
pop
jbe
mov
sbb
shl
jbe
push
arpl
cmpsb
sbb
xchg
sti
dec
or
push
dec
and
ljmp
dec
stc
cmp
insl
sbb
in
scas
xchg
enter
jmp
or
xchg
arpl
inc
js
pop
mov
cmpsb
addr16
inc
and
pop
or
jne
mov
adc
sub
push
ljmp
dec
xchg
divb
xchg
es
cmp
ljmp
mov
mov
pushf
cmp
iret
inc
in
mov
cmp
rcl
into
test
paddsb
adc
jno
xor
adc
aaa
outsb
mov
mov
mov
ljmp
xor
mov
sbb
pop
sub
xorb
inc
jmp
or
jb
push
call
shlb
mov
jl
into
adc
mov
aas
iret
cld
leave
fprem
xor
jb
pop
mov
mov
push
dec
mov
imul
hlt
push
pop
jp
clc
cmp
cmp
gs
stos
dec
jp
clc
test
sbb
iret
xor
xor
addr16
jnp
pop
mov
rorl
int
gs
test
js
stos
jne
xchg
mov
ss
leave
stos
lret
cli
insl
or
adc
pop
loope
and
add
add
jbe
movsl
test
lea
aaa
shll
inc
dec
lea
aad
aam
data16
sbb
mov
pop
dec
inc
cmp
and
in
inc
movsb
push
std
and
push
sbb
xchg
mov
sbb
push
clc
mov
push
push
push
testb
cli
les
mov
lods
clc
lea
mov
cld
jmp
fistpll
mov
dec
lds
lcall
jecxz
inc
cs
imul
xor
sub
lret
push
push
dec
xchg
mov
rolb
popf
cmpb
lock
insb
jae
into
ds
sub
outsl
test
dec
jbe
incl
iret
pop
jge
adc
test
adc
adc
and
push
es
add
cmp
mov
mov
gs
mov
mov
mov
popa
mov
mov
push
push
pop
fwait
xchg
inc
mov
mov
mov
and
and
mov
insb
sbb
daa
sbb
imul
clc
mov
popa
mov
call
add
jl,pn
in
cli
mov
cmp
ljmp
addr16
mov
or
sub
or
arpl
int
fwait
dec
sub
hlt
pop
cli
mov
mov
adc
sbb
orb
jg
inc
or
movsl
jmp
std
pushf
sub
in
and
and
insl
aaa
dec
jb
mov
xchg
lret
fwait
sub
adc
pop
mov
or
lea
out
pop
jle
shll
stos
out
lret
jmp
mov
mov
testb
lret
or
iret
and
lods
cmp
js
lods
insl
jbe
mov
out
sbb
inc
or
ja
loop
cmpb
gs
lahf
cmp
lea
add
repnz
dec
sub
and
jecxz
sbb
jge
ss
add
jne
pop
pop
fstps
divb
mov
mov
imul
mov
lods
or
stos
jbe
mov
add
imul
pop
or
ror
clc
negl
and
sub
pusha
inc
push
scas
dec
int3
mov
inc
and
mov
and
int
dec
push
loopne
cmp
addr16
jecxz
push
rcll
roll
xchg
jne
icebp
rcll
xchg
lret
mov
mull
sub
rcrb
leave
adc
xchg
pop
or
dec
pusha
mov
adcl
dec
ret
push
sbb
sti
add
xchg
in
hlt
adc
test
mov
push
xchg
dec
mov
lcall
imul
jbe
mov
popa
jbe
out
lds
inc
push
flds
inc
insl
inc
add
nop
lea
iret
fsubrp
fldenv
cltd
lea
in
jp
xchg
pop
fs
cwtl
sub
cmp
insl
test
cs
inc
das
inc
js
mov
addr16
push
xor
and
sarl
push
inc
pop
fsubr
ret
insb
cwtl
xchg
inc
and
call
jecxz
mov
sbb
in
loop
sbb
arpl
icebp
ror
pop
testl
cmp
decl
xchg
jae
daa
add
add
into
mov
rolb
cmp
fcmovu
push
fwait
jb
adc
jne
mov
int3
sub
xlat
sub
xchg
mov
pop
jmp
jno
xchg
jbe
sbb
jb
lea
scas
stc
sbb
sbb
rclb
fs
fdivs
jge
xor
test
sbb
mov
inc
xor
inc
xor
enter
les
stc
push
push
out
nop
les
aas
and
icebp
mov
movsb
aas
mov
call
pusha
std
js
add
shl
mov
rcl
inc
pop
or
push
iret
cmpb
outsb
outsb
push
adc
pop
rorl
mov
inc
pop
cltd
mov
mov
int
push
clc
sbb
rcl
lods
call
int
mov
cli
adc
xlat
out
push
mov
pop
or
je
mov
inc
fsubrl
pop
lret
pop
cmp
xchg
xor
mov
sub
aas
mov
clc
cltd
popf
dec
sub
mov
adc
cmp
push
add
xor
jp
sbbl
xor
loopne
out
xchg
jno
pop
std
aas
addr16
cmp
jle
push
pop
cmp
jmp
fiadds
pop
xchg
jo
or
fwait
mov
pop
test
push
in
pushf
lods
sub
mov
es
movsb
xor
cmpsl
fldcw
frstor
adc
stc
fsincos
and
push
in
xor
cs
mov
in
xor
adc
jnp
xor
out
gs
movsb
mov
mov
mov
jbe
push
adc
cmpxchg
fiadds
cmp
xlat
std
sarb
sub
pop
test
outsb
shrl
inc
add
cmpsl
out
imul
into
fld
stos
jns
sub
mov
orl
add
push
adc
jae
inc
dec
xchg
nop
loop
mov
inc
mov
or
rcrl
pop
test
out
mov
and
mov
inc
jae
inc
xor
inc
push
mov
lret
outsl
sub
dec
repnz
shlb
lods
push
cld
sub
outsl
dec
inc
adc
mov
imul
popa
or
pop
aaa
pop
out
movsl
je
cli
clc
pop
adc
dec
stc
dec
arpl
aaa
mov
mov
int
jbe
test
mov
pop
cmpsl
sahf
hlt
dec
enter
cmp
xlat
add
xor
jmp
js
mov
scas
int3
in
out
jp
and
mov
mov
js
lods
xchg
test
and
jl
and
fs
filds
fidivrs
shrb
jb
ret
sbb
lea
orl
scas
sbbb
into
pop
loopne
loop
nop
mov
cli
xchg
pop
or
out
arpl
inc
les
pop
repz
daa
loop
lods
sbb
out
ss
push
shrb
rol
mov
dec
mov
es
or
nop
hlt
add
or
push
mov
cmc
mov
loop
cmpsl
adc
mov
mov
adc
jge
jo
and
mov
fcmovu
cltd
jns
xchg
lods
shll
push
jnp
sub
cltd
cmp
dec
xchg
xchg
add
loop
in
mov
sub
and
fwait
sahf
add
or
mov
adc
ret
xchg
mov
mov
fdivr
mov
add
sub
mov
imul
push
push
out
adc
mov
bound
pop
mov
sbb
test
dec
push
inc
inc
mov
es
mov
arpl
data16
cltd
lock
out
test
mov
sti
cmp
jo
nop
mov
mov
xor
daa
cmp
pop
jmp
push
repnz
mov
insb
dec
test
rcrb
mov
pop
out
sub
pusha
pop
xchg
sbb
test
inc
xor
xchg
ret
jp
cmp
sub
or
mov
hlt
inc
loopne
mov
shrb
inc
in
dec
insl
inc
out
sbb
xchg
loopne
loopne
ficoms
data16
inc
cmp
ljmp
cwtl
aam
out
cmc
and
ja
and
gs
jg
cmp
adc
add
fs
mov
addr16
and
xchg
test
lret
in
adc
nop
out
leave
cmp
xchg
aam
adc
cmc
movsl
imul
jbe
addl
dec
lcall
enter
daa
push
cmp
sbb
movhps
dec
loop
in
sbb
add
repz
cli
dec
mov
out
inc
sub
xchg
or
out
sub
pop
shlb
aad
mov
mov
mov
imul
jb
xor
stos
sbb
xchg
ret
dec
sbb
icebp
or
fisttpll
loopne
dec
xor
push
xchg
dec
incb
inc
and
inc
sarb
outsb
fwait
pop
xor
aam
cmp
adc
inc
in
pop
ja
sbb
imul
adc
mov
lret
js
sub
add
fst
loop
push
push
daa
aam
imul
add
mov
fstp
cmpl
push
inc
cmp
and
and
dec
cs
rorl
out
scas
cwtl
lahf
outsl
cwtl
mov
mov
and
push
mov
sbb
mov
sbb
fimuls
ret
push
xor
imul
xor
rolb
jg
lods
xchg
nop
and
dec
adc
clc
mov
xor
fisubl
shr
or
push
std
inc
pop
xor
ret
cmp
orl
push
xor
xchg
inc
cli
ret
jge
aad
sub
mov
addr16
inc
push
sbb
push
jb
icebp
repz
test
inc
lods
loopne
out
fimuls
out
jmp
mov
cltd
fs
ss
imul
add
mov
push
notb
out
loop
lret
daa
or
out
mov
push
add
out
sbb
lea
jmp
mov
enter
lds
gs
push
mov
xor
sub
loop
fcomip
bound
xlat
push
xchg
hlt
adc
xor
adc
out
add
push
pop
push
imul
adc
add
xor
jo
and
adc
cltd
cld
pop
mov
pop
aas
mov
dec
or
dec
xor
aad
out
xchg
cmp
mov
inc
jnp
xchg
dec
dec
shlb
push
inc
rclb
jle
je
cmp
jge
pop
add
xor
test
xor
jne,pt
xchg
or
xchg
sub
pusha
mov
ds
mov
cmp
mov
lcall
and
lret
mov
pop
and
mov
mov
sti
push
mov
call
test
addr16
adc
cmpb
inc
rcrb
cmp
sub
mov
mov
orb
repz
or
adc
jno
popa
loope
mov
inc
scas
adc
add
add
xor
cltd
inc
scas
stc
out
push
mov
dec
divb
in
push
sti
jbe
mov
jb
mov
lods
in
adc
push
mov
xchg
xchg
cmp
out
in
sbb
int
sub
in
mov
subb
je
cmpsb
js
inc
das
inc
jae
iret
cmp
leave
or
lods
es
insb
mov
dec
jp
xchg
lods
xchg
es
roll
out
xchg
mov
mov
das
popa
ja
xchg
mov
lds
jbe
or
daa
jl
jno
dec
in
xchg
dec
filds
pop
arpl
ror
sub
mov
mov
out
lods
xor
pop
popf
sbb
fdivrs
xchg
aaa
fistpl
clc
and
lahf
inc
push
fimuls
xor
mov
fidivs
dec
pop
xchg
fistpl
imul
dec
add
dec
mov
pop
xchg
or
inc
or
jp
gs
or
pop
sahf
xchg
pop
lret
mov
int3
jp
cld
rcll
lahf
fsubl
negl
repz
stos
sub
addr16
push
lahf
dec
pushf
jae
pop
out
adc
int
sub
dec
xchg
xor
stos
mov
push
inc
imul
enter
dec
xor
mov
rorb
pop
jns
popf
mov
andl
push
fsubl
cltd
mov
push
xor
lret
jp
or
into
pop
ds
pop
pop
or
or
dec
inc
sub
or
push
jb
fucomip
arpl
jb
xchg
jge
stc
addl
outsl
mov
push
mov
cmp
cli
jb
scas
inc
scas
push
cli
mov
sbb
test
and
add
add
jge
stos
mov
cli
inc
adc
in
faddl
cmpsb
dec
push
inc
in
daa
jns
pop
adc
psllq
bound
ret
push
fwait
das
jbe
cli
fwait
movsb
cmp
xchg
pop
int3
leave
in
lret
aas
orb
loope
out
jle
dec
lock
rcrl
scas
enter
pop
lret
and
pop
nop
inc
cmpsl
lea
mov
ss
mov
scas
fwait
pop
jae
shlb
jp
push
out
or
inc
mov
dec
scas
inc
lods
cmp
xor
repnz
lock
push
je
testl
mov
arpl
es
lahf
aaa
adc
pop
into
out
mov
mov
xor
xchg
adc
add
pop
aad
mov
or
adc
movsl
pop
bound
cmp
inc
pop
add
push
gs
jb
mov
add
mov
jns
dec
fidivl
xchg
jne
daa
scas
inc
pop
stc
jnp
out
leave
lock
cltd
popf
pop
jae
jnp
xchg
pushl
xor
in
insb
mov
xchg
or
das
test
aas
ljmp
lahf
lock
lea
idivl
lds
je
add
pop
je
mov
jge
sti
iret
in
cld
xor
or
ss
mov
imul
mov
mov
cli
push
mov
jns
mov
sub
mov
jns
cltd
movsb
popf
enter
and
add
xor
xchg
add
push
sub
sbb
jmp
fwait
mov
push
iret
aad
xchg
into
fisubrl
lods
jne
nop
push
jp
test
imul
test
flds
jg
adc
test
jge
mov
bound
arpl
fs
mov
inc
sbbb
sub
push
loope
mov
rcll
aad
test
xchg
mov
lea
and
fwait
movlps
xchg
leave
xor
stos
cmp
xchg
xchg
xchg
fwait
push
leave
test
push
and
call
mov
pop
lock
xorb
inc
cmp
mov
das
mov
es
in
push
dec
orb
les
pop
fldt
push
stos
xor
pop
adc
out
fdivl
jp
mov
jmp
std
mov
pop
lea
mov
gs
add
inc
xor
fwait
push
and
std
jb
push
sub
sbb
sbb
dec
es
jle
xchg
push
xchg
pop
bound
popf
out
push
addr16
mov
pushf
dec
or
cmp
inc
cmpb
push
or
sbb
aaa
fyl2xp1
cmp
jge
jns
add
jecxz
bound
insb
push
popa
dec
lea
adc
push
fisubrs
push
xor
push
ss
push
mov
lods
test
shrl
xchg
loop
pop
jle
jle
mov
push
loopne
pop
mov
lock
sti
xor
repnz
or
jmp
xchg
mov
or
mov
push
mov
popa
ficoml
pushf
in
sbb
or
fdiv
dec
adc
nop
push
loop
outsb
int
push
pop
rcll
sub
cmp
scas
mov
inc
mov
js
clc
aad
scas
sahf
pop
xchg
mov
add
jmp
jnp
in
lcall
fisubs
xlat
pushf
jbe
inc
movsl
sub
lcall
cmp
fnstenv
push
dec
sub
sbb
adc
orl
cmpl
mov
push
nop
jg
fildll
adc
push
pop
int3
xchg
mov
cmp
cmpsl
inc
jb
push
mov
call
lods
shrb
jnp
loope
and
nop
ret
push
jge
leave
cmp
test
fwait
or
mov
movsl
stc
fisubrs
in
mov
sarb
stos
fs
dec
ret
xchg
jo
lahf
test
pop
aaa
mov
cltd
mov
push
add
xor
sub
aad
jle
std
mov
and
aad
mov
and
push
mov
pusha
popf
adc
leave
adc
mov
fists
dec
sub
lcall
push
lahf
mov
out
fstps
sahf
push
das
sbb
in
dec
adc
shrl
cli
fstl
cli
pusha
ljmp
sbb
outsl
sub
push
push
enter
es
int3
xchg
jmp
xor
imul
push
xchg
jge
and
dec
fcoml
mov
dec
and
ljmp
mov
push
jmp
or
lahf
test
roll
ficoms
test
rorl
into
sbb
mov
adc
dec
sbb
mov
pop
cmp
call
add
faddl
push
push
pusha
sbb
adc
ret
mov
sub
dec
je
loopne
enter
addb
inc
orl
roll
xor
mov
fnstsw
inc
notl
sub
jb
imul
sbb
scas
filds
mov
das
dec
sub
sub
jb
sub
sub
bound
adc
xchg
fldt
test
sub
adc
mov
push
int3
cmp
dec
mov
xlat
mov
loop
int3
sbb
pop
jecxz
cli
xchg
pop
push
push
popa
stos
and
dec
stos
push
dec
push
jp
xchg
incl
jmp
repnz
inc
dec
insb
sti
fisttpll
cmp
stos
mov
add
mulb
insl
insb
fwait
rcrl
imul
and
lret
pop
cmpsl
cltd
xchg
adc
aam
pop
dec
addr16
movsl
outsb
out
cmp
popa
fnstcw
sbb
bound
ret
and
mov
inc
or
jnp
sbb
jle
repz
cmp
out
xchg
jg
pop
lods
das
push
and
fldt
cwtl
pop
xor
inc
push
clc
xor
in
fistps
shlb
xchg
inc
xchg
daa
arpl
push
adc
jb
pop
inc
push
out
in
mov
fldenv
pop
movsl
xlat
push
jg
cli
dec
jmp
sbb
loopne
rcrb
insl
add
gs
sbb
cmpb
xorl
lret
nop
cmp
fsubs
enter
mov
xchg
jle
jle
or
jb
inc
push
cmp
loope
and
jne
cli
pop
pop
push
adc
lods
sahf
mov
hlt
xchg
std
sbb
xor
jl
xchg
fs
js
cmpsb
mov
sbb
push
and
jno
cmpsb
cmpsl
outsl
in
cmpsl
or
cli
call
pop
sub
push
xor
xor
int
push
popf
add
cs
xchg
mov
pop
xor
push
imul
sbb
jecxz
in
xchg
xor
sub
mov
cmc
aaa
and
mov
aas
mov
xchg
xor
pop
aaa
lods
clc
iret
test
pushf
or
inc
push
jg
mov
mov
leave
popa
icebp
xchg
imul
ja
pop
or
mov
or
mov
add
xor
adc
es
sbb
out
mov
enter
pop
rolb
sar
adc
insl
notb
repz
sbb
sbb
adc
sub
insb
popa
push
or
push
sbb
insl
idivb
sbb
daa
repz
xchg
xchg
cltd
aad
sbb
xchg
out
arpl
int3
cs
mov
in
mov
mov
jno
scas
test
xor
fdivl
mov
push
loop
fdiv
fs
adc
adc
add
and
mov
pop
push
xchg
xor
dec
push
jmp
cmp
ljmp
mov
iret
jo
loope
inc
stc
sub
add
push
jmp
popa
pop
cli
mov
in
cmp
lcall
xor
subb
add
sti
rorb
or
sub
movsb
jecxz
enter
js
or
add
lret
dec
jle
dec
int
daa
notl
fdiv
mov
adc
fstpl
subl
xorb
sbb
or
rcrl
shll
add
mov
jle
popa
adc
sbb
and
push
mul
repnz
pushf
and
xchg
leave
fisubrl
pop
xlat
sub
mov
test
or
add
dec
and
in
cli
loope
addr16
jp
sbb
out
loope
lods
jl
add
mov
les
jmp
pop
test
mov
in
jge
ljmp
jmp
fdivs
in
popa
and
jne
sub
dec
mov
dec
std
lahf
popa
xchg
addr16
adc
loopne
jb
cmp
inc
rclb
ficompl
sub
stc
aas
scas
jle
xor
les
pop
xor
mov
jecxz
mov
iret
mov
mov
testl
dec
fdivrl
fidivrl
nop
aas
push
push
sbb
gs
rcll
stc
ret
or
les
jp
cmp
adc
mov
mov
push
jbe
fdivp
shll
loop
divl
push
ret
jmp
inc
lock
nop
imul
mov
lret
push
mov
leave
movsb
pop
dec
out
push
and
xchg
adc
mov
mov
fildl
inc
adc
mov
jl
add
and
xchg
push
insb
movsl
je
xor
cli
in
rcrb
in
cmpsl
inc
stc
mov
das
clc
js
xchg
sub
ds
jb
rcll
pushf
jnp
sub
add
jmp
and
pushf
outsb
cmp
inc
pushfw
mov
outsl
sbb
mov
outsb
ffree
roll
fstp
push
es
xor
cltd
ljmp
adc
xlat
dec
out
sahf
test
adcb
add
xor
xchg
and
aaa
jmp
aas
jb
mov
pop
fidivrs
adc
int
mov
xchg
ja
dec
adc
jno
lea
xchg
filds
push
lcall
sub
and
fldt
je
add
sub
and
js
notl
aam
fs
or
fadds
dec
leave
mov
sbb
shr
lods
lret
outsl
add
jge
imulb
nop
ret
or
or
push
pop
cld
inc
xchg
das
inc
mov
push
dec
sub
mov
insb
xor
mov
call
jne
mov
push
mov
xchg
pop
out
mov
js
movsb
sbbb
mov
pop
add
jbe
xchg
fstps
fistl
hlt
and
push
fs
sub
lcall
iret
push
cmpsl
push
cmpsb
jg
inc
test
fisttpll
insl
mov
xchg
fbld
pmaxsw
jmp
ds
push
lahf
mov
fdivrl
push
inc
push
jg
adc
xchg
xor
notl
jnp
repz
iret
or
cmp
popa
scas
lret
and
cmp
out
jmp
dec
lock
imull
aam
cmpsl
test
mov
dec
xor
push
aas
xchg
jo
clc
fs
into
sbb
lahf
jl
mov
mov
pushf
mov
inc
int3
mov
rclb
fildl
mov
inc
fnstcw
hlt
push
pop
in
testl
loopne
mov
pop
or
push
or
push
mov
and
movsb
loop
flds
add
pop
lahf
pop
call
fwait
enter
adcb
lods
adc
repnz
push
ss
daa
mov
stc
jo
xor
add
push
stc
and
xchg
movsl
repz
hlt
and
inc
and
idivl
sub
or
jo
add
lds
enter
sub
cmc
jbe
scas
addl
push
inc
stos
mov
cmpsl
add
pushf
xchg
xchg
mov
aaa
hlt
mov
jno
pop
cmp
fwait
shrb
mov
sbb
inc
loopne
adcl
sbb
xchg
cs
jbe
dec
adc
xchg
or
call
bswap
imul
das
inc
mov
fstps
ja,pt
cmp
pop
aaa
dec
dec
loop
iret
stos
in
repnz
jp
jle
aaa
mov
adc
sub
shrl
lods
xor
xorl
jo
sbb
leave
sbb
hlt
push
sbb
je
jle
jne
pop
icebp
inc
scas
sbb
imul
jo
loop
test
mov
test
insb
hlt
int
aad
dec
mov
cli
dec
mov
lret
pop
shr
mov
fldcw
sti
pop
ffree
imull
and
movsl
add
shrl
repnz
ret
push
gs
flds
popf
cmp
dec
or
lock
mov
test
hlt
pop
shll
shll
jne,pt
in
or
push
out
pop
push
test
rorl
scas
subl
jae
js
cmp
sbb
adc
inc
mov
sbb
mov
das
fsubrp
push
rcll
stos
mov
adc
dec
imul
mov
int3
mov
adc
leave
test
xchg
jle
add
mov
sbbl
lods
mov
dec
mov
aam
pcmpeqw
jg
jne
push
out
sub
add
inc
test
imul
lea
in
mov
sub
inc
xchg
cwtl
test
pop
and
out
jmp
adc
in
sbb
lods
jo
jmp
sbb
mov
fwait
pop
jecxz
cmp
or
sbbl
sub
inc
adc
movsb
xchg
cmp
add
fs
adc
popa
repz
scas
mov
or
std
lock
jmp
faddl
insb
add
push
cli
add
stc
adc
stc
cld
cmp
mov
outsb
rcrb
mov
xor
or
shlb
cmp
inc
imul
mov
mov
in
pop
push
jmp
in
push
imul
or
pusha
orb
push
xchg
inc
and
aam
inc
call
mov
test
je
fwait
cmp
int
fsubrs
sti
div
mov
xchg
xchg
shr
js
loop
out
hlt
sbb
dec
sub
xor
or
ret
aad
push
mov
jae
mov
das
sbb
cmp
lds
mov
sub
out
pushf
sarb
js
mov
movsb
xor
xchg
rorb
sub
xchg
std
jo
jns
and
and
push
xor
nop
push
mov
sub
cwtl
jo
mov
mov
fsubl
sbb
pop
das
dec
pop
adc
push
enter
add
push
cmc
cltd
flds
inc
in
pop
repnz
insl
pop
pop
into
clc
pop
xchg
xchg
stos
loop
or
loop
and
pop
not
test
xchg
pop
insl
out
and
iret
xchg
pop
dec
mov
cmpl
outsb
repnz
add
call
fcmovnu
push
adc
sbb
xor
scas
dec
notl
pop
mov
sub
movsb
into
data16
xchg
pop
cmp
imul
loope
sarl
xchg
xor
outsb
push
iret
ss
or
dec
cmp
dec
and
ret
in
add
imul
movsb
int3
and
cmc
sarb
lods
adc
adc
pop
popa
mov
or
cmpsb
mov
push
cmpsb
mov
je
xchg
xchg
dec
sti
jns
cmp
imul
fisttpll
xlat
jo
pop
and
push
lret
sbb
inc
in
mov
sub
icebp
shrl
fdivr
pop
pushf
outsb
scas
dec
and
ret
or
mov
mov
aas
pop
mov
mull
or
jg
xor
addl
jle
loope
cmp
scas
addr16
cmpsl
out
shlb
pop
add
ljmp
dec
mov
out
and
in
cmpsl
aas
push
push
fistpll
jae
jo
movb
mov
pop
dec
shl
fisubs
out
dec
addb
inc
adc
divb
int3
addl
lods
push
stc
inc
and
fs
jnp
xor
inc
adc
fstpl
movsb
jbe
syscall
lea
xchg
sub
and
mov
fldt
in
ret
test
mov
enter
sub
out
fisttpll
jo
arpl
pop
rclb
gs
sti
fistps
sub
cmpl
dec
adc
stc
jmp
xchg
sbb
sub
jp
inc
lcall
jno
sub
test
jl
icebp
or
std
int
ds
mov
mov
cmp
pop
xor
shrl
and
cli
popf
dec
mov
pop
push
push
jnp
and
rclb
push
mov
orl
outsl
lcall
cmc
pop
mov
test
jbe
leave
mov
dec
or
cmp
rcll
mov
adc
xchg
sub
push
jge
push
mov
pusha
jl
push
xchg
jo
sbb
outsb
test
shrl
inc
jp
out
cmp
aam
and
jns
push
mov
cmp
movsb
shlb
dec
push
hlt
arpl
rorl
jle
pop
inc
mov
dec
mov
out
mov
movsb
push
mov
lcall
mov
xor
sbb
push
xchg
ror
das
mov
xchg
jge
mov
mov
fiadds
bound
out
pop
sbb
xchg
hlt
aam
pushf
loopne
popl
adc
push
fbld
outsb
pop
mov
jge
test
mov
push
repnz
cmpsb
mov
sub
js
push
mov
and
ficoml
jne
ds
push
stos
mov
sarl
or
into
pop
data16
mov
or
mov
sbb
pop
jbe
jp
mov
pop
arpl
mov
push
cmp
add
fiaddl
loopne
xchg
sti
and
mov
add
imul
dec
ja
cmp
xchg
fwait
mov
enter
in
test
or
inc
sahf
call
scas
aad
and
mov
jg
outsl
dec
pop
das
test
fdivrl
fdivl
dec
jmp
imul
push
inc
mov
andb
pop
cmpsl
push
fmull
or
pop
dec
push
scas
mov
pop
in
test
sub
mov
mov
shl
adc
roll
mov
xlat
sub
mov
std
inc
aam
xorl
xor
add
dec
out
arpl
aad
sub
mov
mov
lcall
pop
mov
dec
mov
fadds
pop
sbb
movl
mov
sbb
adc
mov
inc
push
mov
jae
test
sub
xor
imul
ds
push
cld
and
and
pop
jg
push
sub
shll
jne
inc
jbe
mov
add
cmp
adc
clc
mov
xor
lea
mov
es
push
test
repnz
push
in
cmc
shrl
scas
shr
lret
movsb
fmuls
cmp
cli
sarl
vmread
aas
cmp
loopew
orb
jg
sub
lahf
hlt
cmpsl
jb
cli
lcall
stos
mov
aaa
jno
sbb
push
xchg
lds
mov
xchg
mov
xchg
push
nop
jp
loop
cmp
and
mov
xchg
sbb
int3
cmc
shlb
jne
push
inc
pop
inc
pushl
decl
sahf
aaa
lock
jecxz
aam
push
fcompl
inc
mov
mov
xchg
cmpsl
push
outsl
push
shll
ds
call
imul
mov
cltd
dec
fldt
pop
cmpsb
clc
addb
mov
add
jae
jmp
ss
int
mov
xor
test
sbb
lds
das
cmp
mov
mov
jne
sbb
and
idivb
mov
sbb
stc
add
adc
jae
jno
outsb
daa
out
daa
mov
shrl
in
repnz
pop
jnp
insl
arpl
mov
int
out
jge
dec
test
fmul
bound
sbb
jnp
push
stc
dec
or
loop
inc
loope
out
inc
push
or
pusha
cltd
scas
xorl
mov
and
pop
int
and
negb
adc
mov
fcomps
sub
mov
pop
mov
test
jo
xchg
ss
das
inc
mull
pop
in
cmp
and
dec
sti
add
add
sub
sbb
leave
out
nop
mov
out
mov
pop
pusha
xchg
in
sub
add
sub
leave
pushf
pop
jb
das
lock
enter
xchg
mov
push
out
insl
ret
into
fwait
or
inc
test
data16
push
xchg
out
dec
out
sub
adc
dec
or
out
xor
sub
aas
hlt
dec
sbb
mov
push
lahf
loopw
je
in
jmp
mov
mov
cmp
push
add
aam
sub
in
loop
mov
rorl
mov
out
mov
inc
mov
leave
call
shlb
push
jno
jle
insb
jo
fs
jg
add
push
ficoms
sbb
xor
pop
fstl
cmp
pop
pop
ror
ret
lcall
leave
aad
mov
adc
repnz
iret
and
pop
flds
into
xchg
les
xor
xor
out
arpl
lds
push
mov
movsb
ret
inc
mov
fwait
push
sbbb
orb
int3
sarb
iret
loop
scas
jbe
lret
mov
pushf
daa
cmpsb
imul
pushf
aas
outsb
shlb
outsb
jle
jns
lods
inc
mov
push
shrl
dec
mov
arpl
scas
cli
jno
fsubrl
cmp
mov
scas
sbb
mov
les
cmpsb
in
cmp
pushf
subl
sbb
and
xor
jle
add
sarb
dec
es
aam
jo
int
and
jo
mov
sub
mov
xchg
fsubrl
adc
icebp
mov
mov
sbbl
jge
lea
and
movl
pushf
loope
outsb
xchg
jae
sub
add
sbb
les
mov
repnz
dec
add
xchg
jae
xlat
mov
push
dec
xorb
pop
sub
sbbb
mov
xchg
and
nop
mov
lret
add
pop
sbb
jns
js
outsl
push
ficomps
sub
push
push
adc
inc
aad
orl
frstor
sbbl
fs
jno
sbb
icebp
cmp
imul
aaa
mov
jae
xor
lea
in
repnz
push
ds
push
js
call
jae
scas
pop
test
icebp
ret
or
add
cltd
lret
xchg
insl
les
adc
xor
stc
rcrb
add
push
adcb
loope
adcb
jb
inc
adc
mov
xchg
mov
inc
lea
cmp
jno
mov
mov
call
into
shll
jne
and
jne
rcl
std
test
jmp
clc
fidivl
or
popa
or
lds
inc
ret
and
aaa
mov
jmp
scas
arpl
mov
add
pop
sub
loop
pop
jb
stos
jg
fsubrl
fistl
jo
lods
cmpsl
int3
test
cs
arpl
js
lock
aaa
cmpsl
pusha
add
push
insl
jge
shrl
sub
mov
push
es
fadds
jae
lea
mov
and
rcrb
jne
jbe
fisttpl
lock
push
adc
sub
and
cmp
mov
mov
int
cmp
mov
sub
sub
dec
jle
dec
out
out
dec
dec
stc
mov
and
lea
shlb
jne
sbb
rcr
mov
mov
xchg
pop
fwait
mov
adc
test
jl
mov
lcall
aad
testb
jp
sbb
and
mov
xor
jno
push
mov
pop
push
jns
add
mov
jnp
jnp
adc
sub
stos
hlt
popf
aas
cwtl
fisubrl
ffreep
enter
or
aaa
or
rcrl
xchg
mov
stc
adc
xchg
leave
inc
mov
icebp
xchg
fmuls
jnp
jl
rclb
mov
sub
insw
jp
xchg
mov
out
scas
lcall
mov
aad
rolb
and
shrb
scas
imul
in
ja
jl
shlb
add
jns
pop
dec
daa
pop
notl
adc
dec
cltd
or
jo
not
rol
cmpsb
pop
lret
adc
mov
adc
mov
stos
fucomip
or
adcb
or
jecxz
sub
mov
mov
xor
sub
inc
jno
push
dec
enter
jne
inc
hlt
cli
stc
fwait
inc
cltd
mov
jns
pop
movsb
popa
mov
mov
je
in
test
js
hlt
outsb
rclb
loope
hlt
test
mov
imul
idivl
xor
loope
push
jl
inc
loopne
add
pop
testl
xchg
cwtl
fisttpl
js
push
push
inc
loope
pop
mov
mov
mov
notl
es
out
and
lods
pop
js
loopne
mov
ret
cmp
add
dec
int3
icebp
lcall
dec
cli
aaa
in
dec
fldcw
mov
scas
test
mov
adc
xor
sbb
push
add
and
push
lea
test
xor
gs
shl
fdivl
xor
test
scas
sub
jbe
shll
cmp
xor
or
push
sbb
insl
adc
fsts
inc
icebp
je
jae
mov
mov
movsb
daa
mov
jne
scas
and
jp
sbb
push
jne
lods
test
mov
fwait
addr16
push
mov
pop
rolb
dec
push
iret
cmp
push
jmp
add
loope
add
and
loop
mov
mov
adcb
cmp
dec
popa
leave
ja
push
xchg
push
xor
jmp
std
and
xchg
out
xchg
pop
dec
adc
mov
jae
iret
or
psubusw
not
mov
sti
stos
add
or
test
mov
outsl
inc
scas
dec
adc
orb
gs
inc
xchg
rcll
lock
popf
arpl
js
ret
leave
jl
ror
mov
dec
in
mov
popa
lret
or
mov
mov
sub
ss
push
imul
std
pop
xor
in
mov
mov
in
lret
mov
jg
pop
lea
pop
popa
and
sbb
mov
mov
inc
clc
scas
mov
mov
cmp
inc
daa
in
cmpsl
and
dec
cmp
cltd
push
stos
pop
ss
inc
pushf
or
repz
and
je
cmp
lea
cmpsb
pop
mov
add
out
es
scas
xchg
aad
or
xor
xor
fwait
xlat
xor
loopne
mov
stc
aam
inc
mov
into
adc
mov
xor
push
jae
or
dec
je
and
xor
push
cs
cmp
sub
mov
pop
xchg
dec
pop
std
bound
fwait
mov
les
das
mov
sbb
stos
gs
or
dec
jb
or
lcall
movsb
add
daa
xchg
popa
adc
sub
pop
popa
xor
pop
adc
push
mov
or
add
dec
imul
addl
and
aaa
sub
stc
sbb
out
adc
push
mov
out
dec
mov
outsl
jmp
add
cld
jbe
mov
aad
and
inc
mov
add
dec
iret
subb
scas
je
decl
push
sub
sbb
mov
mov
mov
daa
push
xor
adc
or
enter
mov
push
jns
cmp
pusha
mov
sbb
inc
outsb
ret
pushf
pop
jne
loopne
in
sub
ss
push
push
xor
scas
cltd
lahf
push
repnz
mov
xor
jno
arpl
insl
test
push
js
dec
sub
aas
or
mov
jl
dec
jecxz
add
cmp
fdivrs
jecxz
xchg
jo
pop
mov
mov
or
cltd
in
adc
lock
cmovbe
stos
jb
inc
mov
adc
mov
aas
mov
das
mov
les
pop
lock
jbe
pop
inc
push
scas
outsl
cltd
and
inc
push
call
test
dec
pop
bound
add
push
dec
adc
lcall
lea
lahf
and
mov
stos
sub
jl
push
test
pop
mov
mov
inc
pop
jnp
idivl
xchg
lea
leave
cmp
aad
and
in
in
cltd
filds
adc
cmp
fisubs
pop
ja
cmpsb
lods
adc
bound
add
xchg
inc
xor
out
sbb
mov
push
xchg
divl
ret
and
sti
jmp
adc
fmuls
jge
loopne
cld
repz
mov
push
pop
out
mov
adc
mov
popa
xchg
adc
xchg
fwait
push
pop
lods
sub
in
std
lahf
repnz
adc
out
lods
cmp
add
jnp
sub
mov
mov
dec
lds
out
mov
and
mov
std
mov
ja
in
in
int3
sahf
lds
lahf
adc
jmp
repnz
aad
ja
imul
and
xor
adc
icebp
in
imull
lcall
inc
dec
test
adc
add
xor
push
dec
inc
xchg
jo
pop
mov
jne
cmp
leave
xor
xchg
arpl
pop
push
ljmp
sub
xlat
ljmp
or
xchg
or
jmp
insb
aas
cs
lret
mov
add
mov
inc
cmpsb
popf
sbb
sbb
xchg
out
jne
scas
and
adc
pop
fdivl
pop
test
addr16
adc
pop
aam
mov
jo
lods
xor
cli
cmpsl
push
pop
insb
pop
aad
xor
fnstsw
ret
mov
xor
lea
in
jmp
pop
int3
lret
stos
xor
xlat
pop
call
je
jne
jle
or
adc
sahf
inc
lcall
pop
aam
jae
cltd
scas
inc
push
pop
jg
jmp
jmp
add
orl
push
in
imul
fistpl
pop
sahf
call
sti
popf
inc
ljmp
sbbl
jo
out
dec
call
mov
pop
daa
mov
stos
dec
jbe
pop
pop
js
push
inc
mov
mov
inc
mov
mov
cmc
and
popf
jae
pop
dec
mov
push
movsl
mov
dec
out
les
mov
sbb
ljmp
and
push
and
outsb
sub
jb
nop
mov
mov
ja
jnp
jo
fsubs
mov
jp
and
xchg
popa
lcall
imul
fcmovb
or
int
leave
or
xchg
popf
push
fidivrs
fldcw
js
push
sbb
push
mov
cwtl
in
adcl
scas
aad
stos
fwait
inc
pop
or
and
xor
outsl
dec
sbb
jo
mov
daa
push
xor
lea
rcl
movsl
sti
lds
sahf
mov
sti
stos
leave
int3
push
xlat
iret
mov
xor
in
sbb
or
and
jg
add
mov
out
iret
bound
or
cwtl
mov
pushf
pop
iret
outsl
aas
fsubs
shlb
push
fsub
lcall
aas
pop
jo
sti
stos
and
rorb
inc
popf
in
push
test
mov
sbb
cmp
lea
mov
adc
xor
mov
in
std
lcall
pop
fs
fdivs
dec
or
test
inc
mov
cmpsl
fisubl
adc
mov
push
pop
xor
xchg
xor
xor
pop
sbb
push
pop
shrl
and
loopne
lods
cmp
out
push
lds
cmp
mov
inc
sbb
in
or
xorb
roll
cmp
sbb
insb
or
iret
mov
loope
cmp
add
xchg
add
jne
out
pop
nop
xchg
call
ret
js
and
cmpsl
xchg
imul
aas
or
push
or
imul
sub
jb
mov
mov
xchg
cmp
addl
lods
mov
std
push
gs
mov
insb
xor
and
fadd
cmpsl
xchg
dec
mov
dec
xchg
push
dec
jge
sub
push
movsl
push
dec
lcall
icebp
push
loope
mov
mov
ret
arpl
sti
les
mov
arpl
loop
ljmp
xor
jmp
ljmp
fldcw
mov
jl
push
add
lock
jnp
mov
das
cmp
loop
gs
jecxz
fs
adc
or
data16
cmpsb
pop
xor
add
repz
xchg
shl
ret
push
lahf
mov
je
jmp
dec
stc
dec
add
mov
test
movsl
inc
out
add
push
cmp
jl
fisubrs
dec
jns
adc
imul
popf
sub
addr16
dec
std
mov
out
pop
or
cmp
sbb
adcb
or
adc
sbb
adc
mov
xor
cvttps2pi
push
fisttpl
cld
and
mov
push
xchg
jg
stos
adc
xchg
adc
jns
xchg
imul
lcall
ds
mov
add
or
or
dec
fwait
sbb
mov
mov
mov
sub
out
sub
mov
push
lds
lcall
jns
aas
cmc
mov
movsl
pop
push
shrl
adc
jne
adc
dec
loope
mov
ret
gs
push
popf
add
and
mov
fildl
repz
xor
mov
mov
pop
insl
ret
pop
jb
test
cld
jecxz
clc
lock
lods
xor
test
lret
jl
cmp
mov
inc
shlb
test
pop
negb
xchg
inc
gs
insb
pop
leave
cltd
push
pop
in
iret
and
or
jbe
adc
or
adc
fs
das
lahf
mov
aad
inc
dec
pushf
push
pop
cld
cmp
iret
cmp
loop
pop
jmp
ret
mov
and
xchg
bound
dec
dec
ja
mov
inc
dec
push
mov
adc
fistl
dec
dec
clc
push
push
test
inc
push
cld
stc
leave
movsb
sahf
in
out
cmp
fnsave
xchg
scas
xor
dec
push
jle
lods
inc
ja
xorl
sti
aaa
push
push
js
rcll
arpl
mov
jl
mov
ret
and
push
and
icebp
cmp
or
xchg
fs
pop
addr16
sub
outsb
outsl
adc
add
sub
cmp
jp
lods
mov
or
inc
cmp
inc
cmp
or
jnp
sub
xchg
push
sub
lods
jg,pn
cmp
or
mov
jg
mov
add
fmulp
mov
les
mov
push
das
test
notl
jae
out
jl
cmp
pop
cmpsb
sub
adc
je
push
imul
push
xchg
dec
xor
imul
iret
fcomp
test
dec
in
hlt
popf
cmp
cmpsl
dec
mov
cmp
sub
push
push
outsl
xchg
inc
repnz
jp
in
jnp
pop
int
bound
jo
insb
sub
xchg
add
jne
cli
in
pop
inc
in
push
fwait
jns
adc
xchg
xor
test
cmpb
lods
fcomp
lea
insl
add
pop
mov
aas
stc
enter
push
sub
sahf
std
enter
pusha
movsb
sti
mov
mov
push
popa
cltd
xchg
int3
adc
fdivrl
mov
or
clc
xchg
ljmp
rcr
xor
sub
lea
sub
cmp
or
cmp
sbb
loope
mov
stos
pop
jae
in
stos
pop
aas
inc
jmp
repz
and
pop
enter
and
adcb
pushf
xchg
scas
shrb
dec
cs
daa
dec
fistps
push
mov
divl
lock
xor
xchg
clc
cmpsl
xchg
mov
test
dec
mov
adc
jge
adc
stc
cmp
pop
or
add
out
pop
inc
inc
daa
ja
mov
repz
aam
imul
int3
int
mov
or
xor
aaa
sub
jb
xor
jbe
orb
sub
adc
rcrl
push
push
int3
fildl
movsl
ds
cmc
mov
scas
dec
push
gs
imul
add
pop
mov
icebp
and
jg
cmp
xor
adc
jo
into
inc
sbb
dec
add
jle
popa
jmp
pop
cmpsl
or
out
loope
dec
sub
lret
sti
cmc
addr16
xchg
aam
mov
lods
xor
insb
xor
add
mov
js
inc
jo
div
xor
mov
fxch
fwait
mull
mov
out
mov
ja
pop
sbb
adc
dec
pop
inc
imul
cltd
mov
jbe
scas
push
jno
sub
sub
std
out
mov
dec
inc
inc
dec
insl
repz
or
adc
cmc
shr
lret
fdiv
scas
mov
pushf
push
pop
pop
sbb
pushf
ret
cmp
lcall
movsl
iret
inc
arpl
push
int
andb
ret
clc
xchg
push
jecxz
repnz
dec
test
mov
es
fucom
inc
sbb
in
dec
aad
sbb
sub
fdivrl
ret
sbb
pop
xchg
dec
ret
into
bound
scas
pop
je
xor
cmp
stc
notl
scas
cmp
xchg
push
or
das
dec
adc
xor
push
xchg
xlat
push
dec
add
stc
inc
out
scas
jecxz,pt
scas
test
test
ds
adcl
fwait
in
cld
mov
or
mov
scas
mov
mov
adc
xchg
xlat
mov
xchg
nop
aad
mov
cmp
push
push
xor
pop
mov
mov
mov
aas
inc
js
sbb
insb
je
sub
shrl
push
mov
push
xor
jle
scas
pop
jno
add
pop
push
adc
adc
push
imull
jno
adcb
dec
jg
pop
popf
sbb
sub
std
nop
icebp
mov
insb
adc
das
dec
add
sub
mul
and
scas
jb
push
inc
dec
stos
jbe
or
in
addr16
enter
dec
adc
mov
dec
inc
movsl
and
idivl
sub
cmpsl
adc
and
ds
pop
lods
sbb
sbb
push
je
or
xchg
testb
push
in
mov
mov
es
psrld
movsl
idivb
ja
mov
movsb
sub
mov
mov
pop
jo,pn
pop
lea
or
repz
bound
inc
clc
ja
sbb
test
mov
pop
imul
filds
pop
int
sbb
jo
popa
out
fistpll
clc
in
mov
lods
mov
das
cld
sub
test
adc
jmp
scas
icebp
mov
or
cltd
mov
lock
adc
imul
popa
fwait
jb
sbb
mov
mov
fcmove
inc
fs
inc
das
sbb
lods
pop
mul
lock
or
jp
shrb
lods
inc
cmc
bound
daa
inc
lods
xchg
mov
aad
xchg
andl
and
sbb
jno
cmpsb
outsb
add
bound
xchg
out
outsl
jecxz
and
jne
loopne
add
dec
lea
inc
dec
or
cli
and
push
ja
notl
jb
pop
push
xor
jns
test
out
aas
cmpsb
jbe
xor
les
rcl
stc
add
movb
pop
mov
inc
out
pop
orb
mov
jl
repnz
xor
xchg
das
dec
int
xchg
jp
cltd
inc
add
or
neg
mov
hlt
fucomip
ja
add
xchg
int3
mov
ljmp
xchg
stos
pushf
inc
push
in
hlt
dec
cmp
inc
mov
xchg
in
xor
mov
in
clc
jle
enter
stc
icebp
imul
jle
sub
pushf
pop
mov
sbb
iret
nop
addr16
add
pop
mov
jl
ret
js
or
int
pop
xorl
dec
xchg
mov
sbb
jo
sbb
lods
push
push
mov
movsb
pop
fistpl
jb
mov
xchg
jmp
push
dec
xor
or
fisttpll
jle
cmp
push
popa
mov
jnp
je
int3
sub
test
xor
mov
js
mov
int
outsb
push
sbb
pop
pop
inc
lea
mov
xchg
roll
xchg
cmp
jmp
sbb
adc
pop
push
call
data16
es
lods
push
pop
adc
cld
xchg
repnz
loope
sbb
movsb
push
mulb
jo
test
test
popf
shr
xchg
mov
imul
imul
std
adc
xchg
xchg
pop
mov
out
repnz
lfs
or
fidivs
scas
aad
lret
inc
dec
add
jge
bound
and
sub
lret
xor
pop
push
mov
into
imul
sub
fnstcw
loopne
sbb
lods
push
mov
aam
imul
adcl
lret
mov
insb
jo
dec
mov
pop
sbb
xchg
adc
adc
icebp
mov
clc
sub
xchg
inc
dec
cmc
lret
inc
out
xchg
cmp
mov
sbb
aas
xor
cltd
cmc
mov
mov
insb
dec
add
jecxz
jecxz
negl
mov
push
mov
scas
fwait
es
push
in
cli
stos
seta
push
stos
mov
adc
add
and
mov
mov
shlb
or
jle
push
inc
sbb
cmp
in
idivl
push
jle
push
sbb
nop
mov
aas
jg
addr16
int
sub
or
push
dec
push
sub
or
sbb
mov
cmp
pusha
roll
loopne
mov
pusha
int
push
xor
push
pushl
pop
push
mov
dec
sbb
mov
xor
bound
shll
mov
mov
jl
rcl
sti
xchg
xor
das
xor
xor
xchg
rclb
shlb
dec
in
cmc
ret
or
sbb
jl
sbb
mov
stos
pusha
leave
xchg
in
dec
mov
pop
std
pop
or
push
dec
notb
cmp
fdivrs
stos
add
add
adc
xlat
mov
mov
sub
dec
cmp
xor
cmp
loopne
push
inc
inc
scas
cwtl
fdivrs
into
lea
lds
arpl
cmp
scas
jg
test
mov
pop
sahf
add
pop
push
jle
xor
cwtl
mov
sbb
mov
and
push
add
cli
lock
repnz
xchg
pop
push
cli
dec
mov
cmp
adc
sbb
sarl
mov
or
ja
cld
or
push
fptan
dec
insb
adc
inc
pop
ds
mov
lods
out
mov
jae
popf
int
test
cmp
rorb
imul
inc
cmp
xchg
inc
hlt
adc
out
xchg
scas
adc
xor
cwtl
lock
xor
pushf
enter
sub
xor
sbb
movsb
fimuls
cmpsb
lret
shr
mov
push
movsb
shl
loop
jl
clc
lock
insb
mov
push
test
cmp
push
jp
clc
or
sbb
mov
loope
cmc
lock
out
inc
sub
cmpsl
aaa
push
xchg
jg
clc
xchg
mov
dec
and
sub
lcall
ss
pop
mov
ret
mov
test
in
cli
sbb
adc
rcrb
lods
aas
jl
scas
mov
and
mov
in
hlt
nop
fidivs
or
aam
xchg
mov
pop
push
loopne,pt
dec
popl
dec
scas
cmpsb
xor
cmc
repnz
jmp
pop
pop
fisubrl
pop
cmpsb
orl
iret
or
inc
pop
mov
xor
fimull
mov
mov
int3
clc
or
mov
jge
sub
ss
imul
jge
ficomps
xchg
inc
jg
mov
inc
jae
cs
and
dec
push
pop
and
xor
cmp
lahf
mov
xchg
mov
sarl
push
push
decb
repnz
lcall
clc
cmp
inc
fmuls
loop
scas
push
mov
xchg
inc
std
xor
filds
dec
mov
inc
add
sti
in
out
movsb
ds
pop
out
jb
fstpl
clc
pop
clc
or
push
inc
enter
movsb
faddl
xor
xchg
xor
pop
roll
inc
ror
xchg
imul
outsb
inc
or
push
out
repz
dec
cmp
std
pop
scas
mov
loope
lods
sub
je
inc
stc
je
enter
bt
lret
ret
pop
and
or
loope
xchg
in
mov
stos
xchg
add
sbb
cltd
lods
bound
inc
scas
xor
adc
jl
sbb
daa
mov
imul
cwtl
mov
xor
mov
stos
daa
fbld
repnz
jl
loop
lret
jne
dec
jg
sbb
mov
dec
int
loope
js
dec
popl
sub
and
cmp
scas
out
mov
stos
pop
fidivl
or
xchg
xorb
mov
adc
cmp
mov
inc
cmp
fildll
pop
sti
scas
jle
clc
out
das
scas
sub
pusha
cmp
cmp
inc
mov
sti
mov
dec
mov
pop
xor
add
std
mov
imul
ds
sub
sbb
in
mov
jnp
in
pop
mov
aaa
mov
sahf
xchg
pushf
stc
push
jl
cmpsl
adc
outsl
sahf
mov
shll
add
test
leave
ret
loope
add
mov
push
jne
in
lret
pop
sti
adc
jae
xchg
fisttpl
sbb
pop
and
and
jl
icebp
cltd
or
aaa
jae
rcrl
test
lds
jmp
hlt
in
js
mov
mov
pop
ror
cli
and
xchg
jb
lahf
divb
shll
jge
sarl
je
lock
add
or
sbb
ss
fidivl
cmp
das
cmp
xchg
cmp
cli
pop
mov
into
lods
push
sbb
call
mov
mov
mov
in
stos
jnp
mov
fsubrl
stos
nop
adc
pop
inc
and
mov
shlb
pop
dec
dec
adc
ja
int
lds
ret
subl
arpl
add
rcl
fildl
stos
add
inc
mov
lret
insb
cmp
je
push
es
sub
xchg
orb
mov
das
push
xchg
adc
aam
dec
dec
imul
in
repz
bound
xchg
mov
insb
sbb
lret
sbb
lods
jl
lods
bnd
pop
arpl
adc
lahf
or
adc
pop
rol
jge
and
push
movhps
sbb
cmp
mov
mov
inc
icebp
xor
lahf
iret
cmpsl
xlat
pop
push
inc
pop
inc
adcb
fdiv
jecxz
mov
daa
pop
dec
pop
pop
adcb
rcrb
xchg
push
add
and
lea
ja
lcall
test
sub
ss
js
lods
fisubs
mov
fs
pop
sahf
mov
ret
add
dec
push
mov
inc
jmp
add
push
imul
push
sarb
adc
hlt
and
inc
out
mov
dec
dec
into
icebp
arpl
ror
lods
shll
imul
pop
inc
and
push
push
pusha
out
push
mov
cmp
mov
mov
mov
enter
cld
pop
add
push
inc
push
push
bound
pop
or
stos
or
sbb
neg
imulb
add
enter
push
cmp
cmp
lcall
adc
dec
xor
repnz
jae
hlt
ss
scas
ret
outsb
xchg
test
outsl
inc
sbb
jmp
jecxz
scas
cmp
daa
scas
push
push
add
xchg
cmp
jnp
pop
fsin
sub
jecxz
leave
pop
lds
in
outsb
jae
mov
test
data16
repnz
das
cmp
xchg
push
ss
cs
icebp
pop
cmp
out
out
in
mov
cltd
or
xor
ljmp
shlb
sbb
mov
je
xchg
sub
fdivs
inc
mov
push
idivb
jecxz
push
cmpsb
das
shlb
cmp
in
in
out
mov
push
push
dec
pusha
nop
icebp
out
cwtl
scas
jp
ja
mov
sarl
lods
cwtl
popa
pop
negl
fistpl
in
or
adc
test
arpl
adc
mov
nop
aaa
pop
dec
daa
sbb
stc
out
sbb
dec
and
popa
xchg
out
into
je
sbb
mov
fwait
push
xor
rcrb
or
cs
jne
inc
xchg
fsubl
lret
pop
sti
push
outsb
js
and
movsl
or
and
mov
adc
fmull
lret
loope
mov
and
sbb
xor
pop
iret
addl
sti
enter
cmp
pop
jp
fcomps
test
popl
or
push
cmpsb
pop
pop
andb
addr16
enter
xlat
imul
mov
ficoms
popa
lock
push
lods
xor
push
test
pop
xchg
scas
fmul
mov
xchg
jecxz
sub
inc
adc
aam
setge
cmp
pushf
sbb
fs
dec
push
enter
xlat
xor
ret
pop
or
ja
les
outsl
js
dec
fcomi
mov
dec
mov
xchg
orl
scas
xor
lock
cmp
cmp
ljmp
add
insb
inc
rolb
iret
adc
ds
test
clc
lret
jbe
rcll
in
mov
shll
mov
ljmp
jp
push
cmp
mov
ss
jnp
mov
shll
xor
je
sbb
das
sbb
xchg
mov
lods
jae
xchg
fcmovne
pop
xchg
push
jmp
sarb
mov
jge
inc
rcl
xor
in
bnd
pop
aas
pop
shll
ss
stc
fwait
jmp
push
ljmp
iret
imul
mov
testl
sub
ds
push
fcompl
sub
xlat
mov
pop
mov
dec
cld
lds
push
or
lock
or
repz
pushf
mov
iret
cmp
xchg
dec
jmp
mov
ja
leave
mov
pop
dec
or
or
cmp
push
dec
loope
hlt
pop
cld
fstps
jp
xor
mov
scas
sbb
jne
int3
mov
lcall
adc
jp
sub
sub
test
movsl
sbb
mov
andps
out
or
push
mov
movsl
cmp
in
sbb
negl
mov
icebp
dec
sub
mov
adc
mov
push
jb
bound
lea
mov
mov
inc
pop
cmpsl
ljmp
clc
in
or
dec
mov
pop
das
gs
addr16
add
mov
dec
divb
sbb
mov
cmp
pop
and
pop
xor
and
mov
repnz
inc
rolb
test
inc
fsubl
push
inc
mov
aad
push
aad
and
ss
mov
imul
mov
jg
test
enter
mov
inc
push
dec
cmpsl
and
mov
adcb
int3
cs
fs
or
clc
jmp
jbe
fstpl
xor
and
and
cltd
mov
push
ficoms
or
jl
lock
cs
mov
cmp
adc
out
pushl
sti
push
fistps
sub
fwait
mov
lahf
imul
push
sub
mov
mov
xchg
and
pop
jle
add
xor
sub
testb
dec
pop
ret
insl
jne
in
cli
push
jge
leave
fadds
daa
scas
dec
sbb
xchg
push
leave
sub
jmp
pop
sahf
fwait
pop
out
jmp
stos
outsl
sbb
jmp
push
jb
ds
or
push
shll
or
notl
or
xor
sbb
sub
jae
xchg
xchg
shrl
fs
mov
inc
mov
xor
cvttps2pi
outsl
cwtl
daa
test
push
adc
jle
jle
pop
ljmp
sub
jmp
inc
lods
lods
pop
xchg
push
enter
cmpsb
mull
mov
and
shll
lahf
lret
sub
mov
in
dec
scas
daa
xor
push
inc
cmpsl
dec
andb
mov
pop
in
and
mov
out
adc
loop
xor
loopne
sbbb
xchg
mov
mov
xor
jb
cli
and
push
xchg
cmp
add
sub
mov
imul
dec
jg
and
and
pusha
cs
mov
rorb
ds
ret
jae
hlt
aas
add
js
fistl
test
sub
loopne
mov
xlat
aaa
hlt
daa
sub
mov
push
jg
mov
xor
or
mov
jle
addb
push
popf
mov
and
xor
sahf
dec
mov
das
repz
push
cmp
cltd
pop
scas
xor
push
jae
int
clc
sbb
cmp
and
mov
add
repz
lcall
mov
jmp
mov
xor
ds
hlt
sub
fistps
sbb
sbb
cmp
outsl
ret
out
jg
inc
in
xchg
mov
rcrl
mov
shlb
addr16
cmp
mov
lods
testl
dec
sub
fdivs
mov
cmp
sub
mov
roll
and
ffree
sbb
jmp
push
mov
push
mov
bswap
lods
adc
outsl
and
adc
in
mov
aas
xlat
inc
pusha
adc
out
xchg
rcrb
es
jne
aaa
mov
xor
mov
mov
xchg
jb
stos
or
push
push
icebp
ja
push
es
hlt
and
rorl
mov
push
loope
fsubl
popf
lods
xor
push
or
xchg
and
shlb
ja
mov
mov
movsb
popa
mov
xchg
sahf
xchg
popf
js
jno
mov
movsb
sbb
cld
cli
gs
xor
stos
cmpl
icebp
popa
les
rorb
mov
lock
out
nop
inc
clc
or
cmp
cltd
movsb
insb
sar
cs
jnp
sbb
rolb
push
or
pop
and
stos
and
or
cwtl
pop
mov
push
jb
xchg
loope
push
int
jp
mov
add
sbb
aaa
add
jb
inc
rclb
mov
sbb
shlb
xor
adc
dec
adc
in
repz
pop
int
mov
adc
pop
mov
xchg
or
popf
decl
push
mov
inc
cwtl
sarl
adc
movsb
push
dec
or
iret
sbb
sbb
and
repnz
pop
push
push
cmp
cmp
nop
outsb
outsb
jae
lods
mov
sbb
into
xchg
add
icebp
negl
clc
and
inc
sbb
xchg
jp
mov
test
aam
daa
andb
addr16
push
push
mul
outsl
cmpsl
inc
mov
fadds
rorb
mov
sti
test
and
sub
mov
insb
sbb
mov
inc
adc
mov
int
pop
add
dec
outsl
push
ret
insb
fwait
push
mov
mov
cli
les
inc
bound
dec
mov
and
outsl
dec
jg
sub
mov
inc
movl
cs
out
add
test
gs
dec
cmp
icebp
and
sahf
dec
js
and
sahf
xchg
add
aam
xor
dec
js
xor
push
jp
xor
dec
das
pop
pusha
aas
mov
pop
pop
xor
popf
sbb
pop
lds
test
test
es
ret
pop
and
mov
int
jg
mov
push
call
sub
push
cwtl
insb
call
inc
pop
stc
je
fmull
add
xor
lods
cltd
shll
addr16
sub
outsl
aad
in
mov
pusha
mov
or
xor
pop
mov
mov
sahf
aad
xor
scas
ja
cwtl
in
ss
sti
xor
jne
into
adc
mov
bound
movd
mov
and
mov
inc
lahf
cmp
jno
inc
call
dec
pop
xchg
lds
add
movsl
insl
sysexit
rorb
cltd
push
out
jl
leave
dec
scas
fs
adc
cmp
out
inc
insb
lret
pop
clc
sbb
add
xlat
rorb
daa
ds
popf
punpckhbw
cmp
and
imul
jecxz
ret
filds
jb
pop
jge
jb
dec
punpckhdq
cmpsl
jp
int
inc
outsb
lahf
scas
and
jp
repz
std
repz
sbb
mov
push
leave
xor
mov
jmp
js
or
cmc
inc
in
or
loop
mov
lea
ljmp
mov
insl
ret
imul
sub
push
or
data16
insb
mov
stc
push
xor
enter
adc
cmpsl
ds
shll
stos
ljmp
push
ret
pusha
pop
mov
call
sbb
and
lret
or
jp
add
inc
movsb
push
inc
jle
or
mov
cmpl
or
jae
mul
icebp
cmp
lcall
xchg
pop
movb
adc
ja
rcrb
popf
cmp
adc
into
xor
xor
shrb
cmp
xchg
bound
cwtl
cmp
and
mov
andb
decl
mov
fucomi
aas
cmc
pop
dec
fmulp
cld
insl
pop
cmpb
push
lods
mov
sub
hlt
mov
ficoml
scas
mov
jo
rcrb
xchg
nop
int3
xchg
movsl
cmp
xchg
or
sub
les
addb
movsb
mov
cmp
repnz
clc
push
cwtl
push
or
xor
mov
push
sub
cmp
outsl
cld
leave
ja
dec
or
mov
xchg
iret
mov
xchg
nop
xor
pop
daa
fistl
xchg
std
enter
sbbl
dec
inc
pushf
orl
push
sahf
inc
pop
ret
pop
mov
inc
ds
dec
sahf
notl
or
jge
mov
add
gs
loopne
pusha
push
stos
stos
cmp
push
add
sbb
int3
dec
jge
pushf
or
aaa
cmc
test
in
test
adc
repnz
push
lcall
test
mov
shrb
dec
aas
jecxz
mov
fldenv
lret
js
pop
inc
call
mov
pusha
cmp
sub
add
dec
or
push
imul
pop
movsb
repz
push
nop
mov
lret
rcll
xor
daa
jne
jne
jmp
add
and
outsb
addr16
pop
shlb
cmp
cmp
jg
andb
nop
cmp
jg
ljmp
out
mov
dec
push
or
daa
fbstp
push
repnz
adc
rolb
cli
mov
jp
mov
and
push
clc
add
mov
sbb
jae
sti
mov
push
sub
dec
les
dec
gs
pop
sbb
shll
push
outsl
ds
mov
lds
mov
rcr
pusha
je
insl
jne
jno
outsl
enter
add
in
repnz
ds
adc
mov
sbb
mov
sti
insb
in
repz
lock
jle
sub
xlat
movl
or
push
or
fcmovnb
push
dec
es
imul
shl
mov
cmp
int
jecxz
jo
inc
add
pop
xchg
outsl
jp
mov
test
pop
sub
scas
ret
push
xlat
pushl
sub
icebp
outsb
pop
ret
das
dec
adc
testl
or
dec
and
inc
cmp
lds
push
loopne
cld
mov
mov
frstor
add
dec
sbb
push
sbb
js
pop
out
xor
scas
adc
or
pop
es
aad
insb
mov
mov
es
mov
dec
incl
notb
andb
int
testl
add
sbbl
xlat
push
push
jo
jge
inc
sub
call
lcall
adc
pop
push
and
xchg
fstpl
test
inc
aam
jp
out
push
into
cmp
dec
lret
iret
jg
cwtl
les
jge
pop
sahf
iret
aam
lahf
jmp
xchg
in
mov
jle
out
sbb
xchg
sbb
lods
pop
xchg
xor
sbb
inc
ss
mov
lret
je
push
cmp
xor
mov
popa
adc
inc
test
shll
mov
popf
jnp
push
push
xlat
xor
jae
xor
and
lods
dec
mov
pop
sbb
mov
mov
adcb
pop
mov
xchg
mov
imul
sub
push
adc
cli
ret
daa
imul
mov
ljmp
lods
fldcw
dec
arpl
push
andl
daa
data16
inc
mov
leave
push
xor
aas
lock
pop
out
lods
outsb
xor
adcb
test
xlat
scas
dec
push
xchg
or
mov
ljmp
rorl
fldl2e
push
mov
in
fxch
pop
dec
iret
iret
mov
cmp
out
and
out
imulb
shlb
aas
sub
data16
popf
andl
call
jns
les
sub
pop
mov
sub
rcr
add
add
cs
jl
jp
sar
out
stos
mov
ljmp
add
imul
add
push
pop
popa
fisubrl
aas
repz
lret
inc
mov
jb
pop
mov
push
add
jecxz
out
or
in
pop
out
insl
or
xchg
int3
jmp
mov
mov
pushf
mov
sub
inc
xchg
xor
imulb
xlat
push
inc
pop
pushf
mov
inc
sub
lahf
cmc
shlb
cmp
cli
mov
xchg
adc
ret
loope
ja
inc
dec
gs
dec
in
xchg
jnp
mov
shrb
or
xor
cmc
mov
out
fistpll
scas
in
push
pop
push
in
adc
mov
push
cwtl
sub
fs
cmp
jle
pop
ret
enter
pop
inc
arpl
jmp
outsb
mov
jbe
dec
lods
jb
inc
daa
adc
lahf
in
xlat
lret
or
ds
xchg
inc
dec
sarl
mov
adc
subl
pop
popf
push
lret
sbb
out
dec
fcompl
mov
idivb
scas
pushl
cltd
and
cmp
insl
xlat
repnz
arpl
lock
out
dec
icebp
int3
out
sbb
out
popf
hlt
test
jbe
add
sbb
mov
xchg
jmp
push
int3
mov
cmp
dec
pusha
rcrl
pop
js
xlat
addl
jnp
pushf
cmp
dec
cmc
inc
pop
pop
or
cmc
into
enter
scas
stc
mov
ja
leave
aas
xchg
jl
push
dec
sbb
popf
mov
xchg
xchg
pop
faddl
out
movsl
mov
xchg
inc
out
push
and
mov
sub
jne
cmc
sahf
xor
cmp
incb
cmp
mov
cmpsl
fmull
and
testl
ror
out
sub
enter
pop
les
lgs
sub
dec
xchg
sbb
and
aam
pop
jns
add
mov
es
inc
in
in
or
mov
sbb
jle
push
outsl
mov
and
lahf
jl
sbb
jge
out
fisubl
test
jge
out
pop
jno
push
add
pop
or
ret
mov
sub
mov
push
inc
or
cli
icebp
ret
xchg
adc
roll
int
pop
ds
pop
and
mov
cltd
cmp
add
cltd
inc
pop
js
ret
bound
loopne
inc
iret
je
add
or
fwait
stc
pop
sbb
pop
sub
sti
xchg
mov
push
push
add
cmpsb
out
push
sub
std
add
outsl
push
repz
insb
js
dec
stos
aas
fbstp
lods
mov
outsl
cltd
pop
add
and
mov
adc
aam
mov
aam
stos
cmp
ret
hlt
mov
mov
sarl
adc
shlb
or
mov
shl
iret
jbe
mov
dec
mov
outsl
lods
adc
leave
loopne
in
mov
jbe
and
cmc
dec
xor
jl
bsf
xchg
daa
sbb
movsb
mov
lods
xchg
lods
hlt
test
add
push
orl
ljmp
mov
outsl
lret
lcall
nop
push
cli
pop
and
sub
andl
adc
pop
xchg
mov
jmp
lcall
adc
insb
cmp
xchg
adc
ds
imul
mov
add
inc
ret
or
cmp
adcb
xchg
jle
inc
test
xor
xor
out
les
adc
cli
sub
les
in
fimuls
push
loope
adc
stos
cmc
or
and
in
mov
aad
mov
inc
outsl
sub
mov
inc
in
adc
mov
jl
mov
cmp
inc
mov
mov
fildll
xorb
sbb
dec
leave
data16
inc
mov
and
jp
mov
xchg
inc
dec
aas
mov
and
pop
add
mov
popa
inc
imul
das
mov
notb
popa
into
add
fstpl
pop
shll
ror
fnsave
lret
push
sarb
loope
mov
bsf
sahf
mov
cmp
dec
loopne
xchg
fidivrl
ficoms
sti
add
fistpll
push
movsl
mov
out
invlpg
iret
dec
cmc
dec
pop
scas
orl
decl
dec
xor
imul
cmpb
jbe
push
outsl
js
sti
xor
dec
mov
test
scas
pop
shll
push
xor
mov
scas
inc
mov
js
push
xor
sti
cltd
mov
mov
dec
ret
mov
out
sub
sub
xlat
dec
dec
je
inc
xor
jb
mov
mov
pushf
mov
movsb
test
jne
jbe,pt
ficoml
test
sbbl
rorb
mov
rcrb
insl
fsts
enter
sbb
in
into
mov
sbb
popl
lock
les
mov
lahf
cmp
pop
add
xchg
push
ss
sbb
cmp
cmpb
mov
cmp
stc
add
mov
or
test
mov
mov
inc
inc
dec
rcl
loopne
shll
xor
into
repz
pop
cmp
lea
and
sbb
out
mov
repz
fucomp
in
pop
flds
or
shrb
sub
xlat
pushf
enter
stos
or
fmuls
arpl
arpl
sub
sti
sbb
xor
or
mov
fisttpll
fnstcw
adc
cmp
jb
xor
aad
jo
inc
mov
add
lods
mov
mov
sahf
sbb
aaa
jmp
mov
push
fwait
movd
mov
pop
stos
mov
adcb
aam
push
bound
or
push
aad
adc
cmpsb
or
xchg
inc
add
sti
es
call
cld
rol
movlps
bound
dec
mov
jnp
jp
cmp
test
fs
out
hlt
add
lret
inc
addr16
shrb
movsl
mov
je
xor
and
ja
pop
cs
sahf
push
aas
not
fwait
sbb
mov
inc
lds
sbb
icebp
std
push
push
hlt
xchg
cltd
xchg
sub
and
push
dec
xor
call
shrb
mov
hlt
fiaddl
test
push
and
jecxz
ret
pop
test
cmp
pop
pop
lahf
ja
nop
fidivs
jle
ret
ret
sti
stos
addr16
mov
insl
mov
sub
sub
fcomps
ljmp
inc
imul
xor
movsl
dec
inc
cmp
into
les
rcll
hlt
popf
addr16
into
push
fimuls
adcl
and
mov
dec
jge
pop
fisttpl
push
fcompl
and
sbb
rcll
adc
inc
or
or
add
add
ret
lea
push
dec
mov
into
sbb
mov
cmp
je
mov
div
sbb
sbb
sub
pusha
inc
adc
shrl
push
push
sub
jnp
jns
push
in
fidivl
dec
ss
inc
cli
dec
cmp
jbe
jmp
cs
sub
push
scas
xchg
rcrl
in
imul
sbb
lret
loop
xor
mov
pop
int3
push
mov
insl
or
hlt
pushfw
aam
dec
add
cmp
and
popf
in
xchg
adc
dec
clc
mov
test
out
xchg
int3
xchg
mov
fildll
cmp
mov
xlat
mov
imulb
jae
insb
pop
add
xor
lret
shll
int
cmp
inc
push
loopne
rcll
pusha
mov
in
in
sub
shrb
pop
jecxz
imul
jle
mov
icebp
add
or
sti
sahf
add
fwait
adc
add
mov
lret
aam
jge
les
adc
iret
sub
sbb
adc
jl
dec
xchg
lods
sbb
and
jle
dec
cmc
lea
add
bound
cmova
insl
or
sbb
push
jbe
adc
clc
repz
or
add
das
xchg
and
iret
push
in
mov
fisttps
push
sub
ds
lret
sti
adc
and
and
push
daa
add
pop
fisttps
lods
mov
lahf
je
nop
mov
adc
mov
mov
xor
mov
aad
and
sub
loopne
sti
push
pop
and
xchg
xor
arpl
loope
inc
daa
sbb
fsts
xchg
out
add
xchg
mov
jl
push
jg
fwait
mov
add
add
sti
popa
enter
mov
ljmp
mov
movsl
mov
pop
jle
xchg
in
in
push
cmp
addl
jge
push
or
and
sub
test
and
cmp
cmp
dec
and
and
out
cmp
cmpsl
cltd
mov
xor
int3
inc
cli
sub
adc
iret
lret
fstps
inc
ljmp
in
clc
test
push
push
pop
repnz
add
xor
push
jb
adc
insb
cli
xchg
add
inc
cmp
mov
sbb
inc
pop
ja
adcl
cmp
mov
cld
push
je
cmpsb
das
repnz
jno
or
xchg
mov
enter
push
xchg
icebp
das
push
mov
ffree
inc
xchg
ret
jb
inc
rcrl
fcmovbe
ljmp
and
jle
pop
pop
enter
enter
inc
scas
sub
push
imul
sbb
pusha
imul
jle
mov
repnz
es
clc
mov
add
and
push
aad
inc
inc
testl
push
adc
add
and
out
xchg
mov
je
mov
aaa
sub
cmp
inc
aam
xor
movsb
and
mov
dec
mov
movsl
aas
push
inc
iret
pop
mov
add
aad
outsl
jb
mov
movsl
popa
xchg
sub
adc
mov
int3
xchg
jmp
aam
push
scas
icebp
repnz
rclb
jb
mov
fsub
cld
ja
in
xor
mov
fnsave
insl
inc
es
mov
call
sub
in
push
cmpsl
mov
out
mov
mov
imul
stos
nop
adc
in
xor
out
aaa
xchg
mov
dec
inc
in
test
leave
aaa
mov
push
sbb
outsl
sbb
aaa
out
loopne
jp
jmp
push
dec
je
add
pop
into
fisttpll
add
push
and
mov
fmull
ret
pop
cwtl
jp
dec
pop
inc
fcomps
test
jnp
cmp
jno
xor
idivb
sub
or
rclb
pop
call
enter
inc
push
mov
movsl
aaa
bound
pop
addb
rorb
jb
les
loop
int3
sti
or
adc
imul
fsub
iret
flds
adc
sbb
shld
sub
roll
inc
mov
pop
jecxz
iret
fs
inc
lods
mov
pop
loopne
mov
std
frstor
fiaddl
mov
in
add
adc
out
addl
lods
stos
subb
cli
push
mov
sbb
rcl
inc
cmpsl
mov
pop
cmp
negb
pop
cmp
cli
xchg
scas
jnp
test
scas
loopne
adc
sub
mov
neg
mov
loop
insl
or
insl
leave
mov
push
movsl
dec
fdiv
mov
cmp
movsb
pushf
mov
ja
and
out
xor
lcall
mov
sbb
mov
xchg
xlat
and
mov
push
and
repnz
cwtl
xchg
sub
lret
pusha
mov
and
movsb
int3
imul
sbb
into
dec
push
and
into
jle
insl
mov
cmp
lods
push
test
xchg
test
das
xchg
iret
or
adc
stos
push
jmp
push
or
mov
ret
mov
sub
rcll
sbb
rclb
pop
mov
mov
in
dec
int
mov
jecxz
fs
add
adcb
mov
adcl
or
data16
jle
cmp
push
jb
in
push
push
xchg
xchg
push
mov
pop
lds
fimuls
shl
cmp
cmpsb
dec
test
sub
imul
adc
jecxz
pop
fidivs
sbb
adcb
pop
lret
sti
mov
iret
test
ficomps
in
ffreep
mov
sbb
test
mov
ficompl
add
pop
adcl
sbb
rclb
xor
xchg
in
dec
xchg
dec
sub
and
inc
dec
cmc
test
dec
mov
lds
xchg
jle
gs
repnz
fisttps
pushf
cmp
jmp
test
fbld
lock
push
pop
jp
inc
mov
mov
add
pop
inc
push
pop
xchg
in
mov
loop
scas
cmp
orl
pusha
xorl
add
xchg
push
je
loopne
adc
fistps
jge
pop
test
mov
push
pushf
stos
mov
mov
jge
jmp
mov
leave
xor
and
int
push
insl
add
push
add
scas
imul
bound
stos
popa
bound
mov
mov
dec
cli
popa
jne
aad
jecxz
jecxz
mov
cmp
loopne
sbb
or
xor
push
sti
pop
cmp
lds
cmp
sar
out
push
jns
sbb
add
into
mov
sbb
loope
inc
popa
leave
mov
test
fildl
test
mov
lods
xor
adc
stos
add
xor
xor
ljmp
mov
lret
test
mov
popf
pop
lds
mov
inc
sub
shlb
icebp
pop
sti
jp
testb
aaa
mov
rol
mov
test
movsb
in
mov
lock
dec
data16
jecxz
mov
ds
or
dec
mov
jnp
imul
xchg
shll
pop
aad
sub
mov
fcoms
adc
adcl
orb
and
les
xor
inc
push
mov
lahf
push
cmpsl
mov
in
sub
clc
mov
fistpll
aam
push
popa
mov
lcall
ds
out
int3
iret
cmpsb
mov
and
sbb
pop
xchg
out
cld
test
or
mov
jne
movsl
test
cs
fcmovbe
pop
mov
mov
xchg
add
xchg
adc
aas
lock
rdmsr
dec
or
mov
xchg
jmp
xor
ret
xchg
mov
sbb
fsubr
add
std
push
test
outsl
das
dec
jno
andb
shl
mov
mov
das
ret
fwait
and
popa
pop
mov
es
mov
das
push
pop
dec
jbe
fcomp
gs
and
fstpt
mov
fisttps
cmpsl
adc
xchg
mov
mov
adc
pop
xchg
jl
push
lahf
int
jo
rorl
jecxz
pusha
stc
dec
adcb
test
js
pusha
push
orb
pushf
jmp
dec
ret
mov
std
imul
dec
jbe
lds
daa
test
arpl
adc
sub
adc
test
pop
pop
int
enter
xor
mov
add
and
je
ret
mov
jle
loop
fdivl
pop
test
adc
adc
push
movsl
daa
add
inc
shrb
rorb
and
mov
cltd
std
fistpll
adc
or
mov
xchg
mov
pushf
fstpl
pop
or
and
repz
push
es
rcrb
dec
add
adc
jg
sbb
adc
rcrl
les
push
cmp
decb
mov
inc
push
xor
dec
inc
ds
jno
inc
aaa
or
sub
mov
adc
and
inc
loopne
sub
pop
xor
insb
ss
into
cmpsb
in
cltd
je
and
jle
stos
xor
jmp
mov
fisubl
movsl
jae
ds
inc
pop
movsb
inc
sbb
sbbl
dec
pop
or
mov
adc
adc
xchg
sub
mov
sbb
call
js
arpl
js
lahf
and
pop
in
repz
inc
sub
lods
ficompl
js
mov
pop
insb
mov
leave
dec
les
aaa
cmpsb
icebp
add
jle
sbb
jns
fiaddl
cmc
hlt
data16
fdivs
imul
jo
push
sub
cwtl
icebp
adc
xlat
mov
pop
sub
xchg
sbb
hlt
xor
jnp
aas
fidivrs
fdivr
mov
loop
push
pop
test
js
push
inc
bound
fcmovnb
lret
sti
push
cmc
in
xchg
mov
jns
testb
or
into
xorl
fwait
jb
add
xchg
adc
outsl
add
std
mov
sbb
jae
and
loop
xchg
stc
data16
je
pop
mov
pop
aam
cmp
pop
cli
test
jecxz
out
test
adc
insl
inc
fimull
inc
nop
pushf
int3
dec
rorl
dec
sahf
dec
ss
popf
outsl
enter
ja
test
shrl
je
dec
xchg
pushf
cmpsl
jae
and
daa
or
cmp
mov
ret
mov
jl
lods
imul
or
dec
jl
add
test
push
cld
sub
dec
xor
and
or
dec
pop
cmp
sbb
into
and
pushf
cmovo
nop
lahf
and
inc
negl
xor
adcl
pop
pop
das
mov
mov
out
jo
inc
aad
mov
pop
jno
movsl
jl
sub
inc
add
xchg
aas
shll
bound
in
movsl
adc
ds
adc
mov
dec
test
or
ret
rorl
lods
xlat
fst
inc
adc
addr16
mov
and
test
dec
scas
popa
stc
idivl
cltd
sbb
sub
dec
and
ret
insb
sub
adc
les
call
stos
cmp
inc
and
stos
sbb
mov
add
cmp
inc
incb
jg
inc
xor
mov
sti
lahf
aas
adc
jp
inc
push
add
ret
cs
cmp
jp
pusha
jp
fs
mov
data16
ja
xchg
nop
sti
pop
test
pop
bnd
mov
movsl
dec
mov
es
fs
insl
rcrl
and
jecxz
das
mov
cmp
iret
xchg
pop
pop
pop
pop
mov
xor
sbb
das
dec
cmc
shlb
mov
into
arpl
popa
xchg
mov
pop
repnz
inc
or
ja
jle
imul
cmpsl
mov
out
es
movb
inc
out
mov
cmp
in
in
push
lods
mov
dec
out
test
shll
sbb
cmpsb
mov
and
fisttpll
jno
aaa
stc
jl
lret
and
pop
mov
sbb
pop
in
hlt
into
cmp
icebp
and
mull
out
push
cmp
adc
add
push
test
das
pop
je
stos
push
sti
sub
adc
inc
cwtl
lds
aas
mulb
inc
popf
test
mov
pop
mov
int3
sti
ss
jmp
mov
xor
xlat
sti
xor
xor
cld
int3
xor
push
mov
dec
mov
jecxz
stos
xor
out
xor
out
xor
cmpsb
in
push
ds
adc
fld
jne
adc
arpl
inc
int
jge
aas
out
in
adcl
test
cmc
xor
imul
test
sub
push
enter
stc
std
jbe
cmp
xor
sbb
xor
sub
in
sbb
adc
pushl
xor
cmp
add
jbe
pop
jb
push
mov
fstl
aad
dec
dec
shlb
jns
sbb
clc
and
pop
push
shl
mov
insl
cld
mov
dec
add
push
mov
xchg
push
sub
aaa
inc
fiaddl
add
push
lods
stos
jns
insb
push
stos
lods
adc
add
push
sub
gs
mov
inc
outsb
into
cmp
iret
movsb
adc
hlt
adc
arpl
pusha
push
ret
adcl
pop
mov
bound
outsl
xor
and
lods
insl
call
mov
and
add
cmp
jb
sub
and
inc
and
and
call
cld
push
test
cmp
je
pop
cs
sub
sub
nop
lea
lods
ficomps
jne
movsl
lcall
pushf
aad
call
cmp
add
lret
mov
nop
fimuls
xchg
sub
cltd
mov
shr
jo
stos
mov
fstps
lea
lods
int
cmc
lcall
dec
xor
ljmp
add
hlt
dec
mov
push
jnp
loope
int3
or
cmp
movsl
pusha
aas
aam
jno
xor
cmp
and
mov
dec
aaa
adc
je
cmp
sub
ficoml
cltd
ljmp
leave
incl
or
and
cs
mov
pop
push
mov
testl
lods
fcomps
push
dec
test
cld
pop
stc
adc
jecxz
push
pop
dec
test
add
push
mov
mov
fisubl
pop
nop
inc
add
jecxz
push
xchg
inc
mov
ret
or
push
mov
xchg
mov
push
iret
clc
xlat
cwtl
divb
push
xor
sbb
nop
xchg
push
subb
pushf
test
shrl
fcoms
fnsave
hlt
dec
loop
jge
fldcw
cmp
sbb
adc
cltd
dec
inc
sbb
sbb
xchg
push
sbb
push
idiv
icebp
aad
icebp
or
inc
pushf
jno
call
cmc
lds
cs
xchg
xor
cmp
js
int3
adc
xor
sub
out
stc
dec
mov
repz
adc
sbb
cmpsb
or
pop
mov
push
in
sti
mov
roll
jno
cld
aas
js
aam
insl
fsubl
xchg
or
add
popa
sbb
jb
sahf
iret
mov
and
lcall
inc
xchg
add
movsb
out
sub
popa
aad
dec
sub
jb
stos
pop
sbb
js
jmp
mov
pop
test
out
les
cli
mov
pop
or
ss
inc
add
jg
jae
mov
push
cmp
mov
out
test
pop
sbb
ret
adc
xor
sbb
and
pop
adc
add
ret
insb
insl
dec
pushf
mov
pop
xor
scas
iret
mov
inc
mov
cmp
sub
pop
lcall
mov
push
jmp
outsb
and
inc
or
icebp
lahf
and
outsb
xchg
shll
addr16
cmp
mov
pop
jb
mov
clc
xchg
adc
shrl
inc
adc
mov
cli
xor
fisttps
mov
push
mov
idivl
adc
push
inc
mov
sbb
mov
xlat
dec
or
pavgw
int3
add
mov
in
pop
mov
cmpl
les
inc
mov
mov
or
lea
mov
fwait
xchg
mov
scas
jae
out
cli
sub
lea
aas
mov
insl
xlat
add
mov
sbb
test
fisttps
int
and
mov
and
daa
loope
arpl
ret
jb
jle
mov
sbb
adc
mov
lcall
jne
xchg
pop
xchg
dec
mov
lret
pop
sbb
loope
jbe
mov
shll
arpl
sbb
shl
jb
xor
mov
jo
inc
rorl
cmc
sub
sbb
hlt
fcomip
mov
adc
dec
in
pop
aas
cwtl
movsb
ret
and
mov
inc
adc
adc
sahf
je
xor
shrl
xor
cmp
push
pusha
je
sbb
mov
jbe
imul
cmpsl
pusha
rclb
lods
loope
scas
in
sub
repz
ljmp
sub
mov
inc
out
xchg
jbe
repz
bound
pop
lahf
xchg
adc
std
lds
fidivs
cmpsl
xchg
lock
pop
inc
inc
cmpsl
lea
dec
sbb
mov
movsb
cmc
addr16
rorl
jg
repnz
xlat
stc
popa
jb
xchg
xchg
xor
sub
or
and
scas
loope
xlat
adc
mov
mov
jl
movsb
sti
mov
dec
movsl
mov
callw
in
in
xchg
mov
sub
cmp
adc
data16
xchg
cmp
inc
gs
xchg
push
mov
xchg
pop
fwait
testl
mov
cmp
mov
mov
cltd
in
ret
dec
xchg
push
sar
or
in
mov
adc
push
into
cs
inc
inc
cmp
popf
jno
fcoml
xor
mov
loope
xchg
fldl
cmpsl
rcrl
idiv
inc
add
jp
mov
dec
mov
fistl
jns
adc
push
and
aaa
add
dec
pop
or
xchg
xchg
mov
or
js
fdivr
and
mov
sub
push
dec
out
lret
add
sahf
xor
mov
inc
andl
mov
filds
jno
add
loopne
in
sahf
pop
ja
imul
aaa
mov
aas
inc
cmp
push
leave
arpl
ja
lcall
in
je
loopne
cmc
dec
mov
push
jbe
cmp
std
repnz
xor
and
cmpsl
mov
dec
hlt
push
shl
or
cmpsl
xor
sbb
ljmp
lods
mov
push
loope
xlat
push
inc
inc
jg
icebp
sbb
fsubs
sbb
es
dec
mov
cwtl
adc
fistps
scas
dec
mov
lock
jmp
mov
sahf
les
mov
push
or
out
xlat
add
cmp
stc
jne
mov
mov
xchg
adc
mov
cmp
xchg
dec
mov
lods
adc
lret
mov
inc
adc
addr16
mov
xor
cmp
xchg
jecxz
pop
xchg
leave
jle
mov
lret
pusha
in
push
jmp
stc
xchg
gs
in
cvtdq2ps
sbb
dec
loopne
testl
xor
sbb
add
push
mov
add
pop
inc
clc
mov
int3
outsb
stos
xchg
pop
xchg
jecxz
and
xchg
jnp
mov
inc
mov
cwtl
arpl
mov
mov
fs
adc
lds
dec
fwait
mov
sbb
in
jg
inc
dec
js
adc
scas
sub
or
fisubs
imulb
mov
cmp
push
hlt
jmp
cmp
mov
scas
sbb
int3
push
roll
jno
in
shl
push
out
out
and
inc
cmp
aad
push
mov
fs
addl
cli
repz
nop
fmull
jg
test
ja
lret
cmp
adc
fiadds
enter
clc
dec
and
sti
pop
mov
xchg
lods
jns
mov
and
dec
test
adc
int
push
adc
xor
or
movsl
jns,pn
testb
mov
push
daa
xchg
mov
je
les
aad
mov
inc
dec
lret
fs
jg
js
pop
adc
and
mov
lcall
pop
repz
dec
test
fnsave
jae
call
mov
fbstp
sbb
xchg
jg
xor
cmc
jae
jno
or
imul
push
movsb
mov
xchg
xor
cmp
dec
cltd
mov
ljmp
and
mov
add
mov
add
add
int
sti
cmp
stc
icebp
cmpsb
das
push
mov
push
fmul
or
cs
mov
xchg
movsb
push
data16
adc
in
jg
sub
dec
jne
mov
pop
das
aam
bound
sbb
dec
add
mov
shll
ljmp
icebp
fldcw
sbb
sbb
pushf
bound
je
test
mov
jp
xchg
jmp
aaa
pop
xor
addb
cmpsl
roll
jbe
mov
cmp
jno
xor
pop
stos
addl
jnp
and
es
adc
leave
imul
pop
add
mov
push
inc
mov
insb
jb
sahf
mov
ret
or
or
mov
inc
xor
out
pop
add
xor
fildll
inc
add
adc
inc
iret
repz
adcl
testb
lods
ret
test
lret
sub
xor
outsb
sahf
subb
pushf
pusha
sti
or
push
jns
fbld
cld
fs
add
push
cmp
addb
lahf
divl
addr16
dec
mov
pushf
jge
inc
imul
cmp
xor
mov
cmpsl
mov
pop
popa
call
out
push
mov
and
inc
cmp
push
in
dec
shll
in
jb
pop
aaa
push
arpl
icebp
add
jmp
xchg
inc
pop
adcb
push
bound
inc
in
push
pop
push
jmp
mov
lret
fidivl
cld
xchg
or
mov
test
adc
lea
cld
jbe
sub
lock
iret
pop
cli
testb
xchg
jg
sbb
pop
test
dec
pop
scas
add
sub
xchg
imul
mov
loopne
and
dec
mov
cmpsb
test
or
insb
sub
inc
or
dec
into
jp
xor
in
ret
mov
gs
int
aam
sti
add
ljmp
pop
cpuid
arpl
dec
insb
shlb
mov
and
sbb
cld
lret
sbb
jbe
push
cmp
push
loopne
xor
js
jbe
dec
add
push
push
fld
inc
pop
xor
or
in
adc
lods
xchg
push
push
cwtl
sub
jp
movsb
jno
cmc
js,pt
jnp
loop
movsb
sub
xchg
sub
inc
popf
sbb
push
fiaddl
adc
mov
mov
test
and
addr16
scas
fldz
lcall
xlat
adc
mov
push
add
mov
mov
hlt
mov
rorl
pop
repz
cmc
push
sub
dec
bound
scas
push
add
pop
push
fwait
xlat
call
xchg
imul
inc
jnp
addr16
repnz
call
adc
jnp
incl
sarb
or
orb
push
scas
rclb
cmc
sub
adc
dec
jp
in
sti
jno
cld
out
xor
inc
lds
fcmovu
aad
xor
xchg
xor
mov
fcom
xor
jge
test
xor
add
xchg
out
scas
pop
mov
dec
repnz
or
xchg
pop
dec
insl
mov
xchg
addr16
or
dec
sbb
mov
into
out
sahf
add
nop
iret
mov
test
repz
cwtl
pop
pop
shll
inc
sbb
dec
push
outsb
mov
xor
push
xchg
pop
sbb
xor
lods
xlat
cmpsb
jb
adc
xchg
rcrb
cmc
mov
inc
adc
std
cmp
popa
stos
xchg
lahf
push
or
pop
cld
addr16
sub
xchg
mov
mov
cwtl
repz
ret
or
cmp
push
fldcw
pushf
test
and
add
leave
adc
pusha
jle
mov
inc
sub
push
nop
loopne
int3
or
out
jb
popa
xchg
push
jecxz
sbb
sub
inc
xor
out
jo
mov
repnz
pop
sbbb
sarl
ret
sub
fidivs
adc
out
xor
sti
not
sti
jmp
shll
std
mov
stos
int
jnp
aad
xchg
dec
mov
mov
fdivs
out
aad
stos
and
xor
dec
jnp
push
je
xchg
fbld
adc
add
inc
les
and
nop
test
mov
and
xor
mov
push
sub
inc
xchg
pop
in
ds
push
test
adc
xor
movsl
leave
aad
pop
int
pop
dec
movsl
push
xchg
push
cwtl
das
loopne
jp
dec
sub
js
rcrl
mov
scas
or
xchg
das
pop
pop
sbb
add
cmp
daa
mov
sbb
inc
sub
push
lret
rcr
out
add
enter
outsb
daa
pop
xchg
and
not
push
add
xor
inc
mov
cli
cmp
lcall
pop
cmp
shld
mulb
xor
pusha
repnz
pop
cmp
stc
out
xchg
sub
pop
rcl
scas
cmc
sub
in
or
mov
mov
stc
adc
fisttpll
arpl
fs
fistl
aaa
icebp
scas
ret
xchg
lahf
pop
scas
adc
test
xor
nop
lods
pop
ja
sbb
sbb
loop
cmp
data16
sub
pop
and
push
mov
adc
popf
push
inc
add
xor
mov
xchg
cmp
cmc
idiv
or
sbb
in
push
mov
jns
mov
pushf
ss
jl
jb
pop
dec
and
out
pusha
lahf
movsb
gs
jae
int
cltd
jg
out
cld
xor
push
dec
adcb
loope
adc
shrl
pop
lcall
xchg
stos
stc
sbb
lods
add
cltd
jecxz
gs
mov
das
popa
in
loop
mov
dec
push
push
mov
adcl
punpckhdq
dec
sarl
test
loope
std
ret
ret
push
rolb
adc
mov
gs
xchg
push
dec
sbb
pushf
sbb
inc
push
sub
negb
pop
scas
dec
test
lds
xchg
outsl
pop
frstor
data16
jp
ds
or
stos
iret
shll
lock
ja
jb
in
dec
push
test
sub
jg
add
fldenv
cmp
add
mov
mov
enter
leave
and
mov
ret
add
test
ret
addr16
pushf
hlt
loopne
cmp
jo
out
ja
mov
push
clc
insl
jns
dec
mov
ret
dec
mov
ret
xchg
or
dec
lret
insb
pop
pop
lea
je
pop
mov
xchg
push
jg
adc
cmpsl
or
lds
dec
and
sbb
jne
imul
inc
out
popf
mov
add
jae
sbb
mov
cmpsb
sbb
pop
rcr
fldl
xor
jnp
mov
mov
repnz
mov
mov
imul
mov
mov
pusha
add
sub
arpl
push
mov
ja
mov
mov
lods
daa
lahf
inc
loope
repz
sub
jmp
adc
sub
push
and
loopne
mov
les
and
cs
push
push
push
call
ja
popf
jnp
lods
rorb
xchg
lret
add
xor
outsb
add
or
shrb
xorl
xchg
outsl
scas
mov
push
pop
ret
mov
lods
or
daa
pop
inc
imul
xchg
mov
dec
aaa
or
lret
ljmp
call
int
insb
fildl
mov
sahf
mov
sti
insl
pxor
notl
push
adc
jo
scas
and
mov
jle
aad
cli
jne
daa
in
loopne
pop
mov
push
addr16
mov
pusha
das
jno
push
push
or
dec
out
adc
orb
out
cmp
and
xchg
cmp
stc
sub
movsl
cli
sub
rolb
testl
inc
mov
sub
push
bound
cmp
and
mov
lret
or
mov
idiv
aas
test
push
sarl
imul
or
and
insb
shl
lea
cmp
fimuls
mov
sahf
sub
sarl
inc
pop
daa
loop
add
cmpb
mov
and
jmp
jmp
inc
xchg
rol
dec
sbb
aaa
lods
rorl
fcompl
or
popf
loopne
leave
rcl
rcrl
inc
inc
xor
loopne
mov
stos
js
add
fmull
jge
add
sahf
mov
mov
mov
jns
jmp
shlb
xor
stos
cltd
leave
mov
nop
inc
sahf
fisttps
mov
stos
or
xchg
pushf
sub
push
imul
mov
jno
test
inc
addr16
adcb
cltd
movsb
jo
sti
jbe
pop
xchg
push
cmc
sub
sub
dec
loopne
idivb
push
and
and
jge
dec
add
fimuls
push
stos
das
xchg
adc
sbb
ret
pop
add
xor
popf
push
cld
adc
mov
add
and
das
insl
ret
sbb
or
pop
xor
dec
in
cmp
ror
inc
daa
xlat
cmp
outsl
or
mov
test
dec
or
imul
mov
xchg
mov
cmp
inc
xchg
sbbb
call
rcrb
arpl
push
push
in
int
scas
fbstp
push
cwtl
pusha
jl
gs
add
aad
fwait
jns
or
lods
cmp
dec
pop
call
notb
inc
jnp
das
les
pushl
aam
fs
pusha
cmc
push
int
mov
dec
pushf
sub
addr16
inc
and
lock
mov
pop
sbb
sbb
aas
arpl
fdivl
xor
add
neg
mov
jb
stos
stc
sub
clc
sahf
inc
das
cmp
rcr
inc
push
mov
movsb
jge
mov
fists
fsubrs
clc
mov
hlt
inc
xor
sbb
insb
xchg
inc
inc
xor
addb
adc
mov
out
cmp
js
inc
cmp
pop
pop
cmp
test
popf
dec
test
scas
lret
mov
hlt
add
nop
sub
mov
repz
rolb
mov
fsub
cmpsb
push
dec
shl
jmp
cmp
cltd
or
or
cmpb
mov
mov
sub
pop
xor
insl
add
or
je
adc
xor
jecxz
mov
adc
call
es
std
loop
les
outsb
rorb
cmp
outsb
fcompl
call
pushf
jbe
loopne
ficoms
cltd
mov
jecxz
outsl
addr16
or
mov
fs
out
pop
cwtl
push
push
inc
aaa
leave
xchg
add
or
cmc
adc
popa
xor
repz
xchg
lods
shl
movsl
mov
dec
sub
int
mov
out
insl
adc
dec
je
inc
jmp
jp
shlb
or
int3
jmp
in
cmp
cmpb
xchg
cmp
aam
and
push
bnd
fmuls
pop
stos
adc
pushf
cmpsb
aas
mov
js
lea
pop
fbld
shlb
outsl
jno
out
iret
mov
push
mov
aas
and
cmpsl
enter
stos
pop
enter
pusha
fbld
gs
dec
jp
or
lret
sbb
cmp
test
add
cs
mov
enter
aam
aaa
js
fistps
jg
jnp
mov
dec
or
es
stos
fwait
mov
mov
insl
dec
dec
fisubrl
dec
cltd
mov
in
ds
cli
lods
sbb
mov
push
pop
xlat
mov
mov
sbb
jno
add
mov
arpl
cmpsb
nop
push
mov
mov
jg
cs
or
lods
popa
xlat
daa
fcom
mov
test
inc
mov
jne
xor
and
daa
subb
testb
lods
out
sub
mov
push
in
and
and
pop
addr16
ret
rcr
and
popf
sahf
inc
in
in
in
mov
mov
inc
sub
add
cmpsb
jg
sbb
outsl
pop
std
dec
pushf
fidivrl
sub
dec
mov
sbb
sbb
fsts
push
jbe
pop
inc
rol
fdivl
sub
or
lods
cmp
ljmp
sub
in
add
push
loop
test
adc
lods
mov
mov
cli
cltd
xchg
clc
rorb
xchg
test
addl
jg
mov
xor
dec
cltd
out
pop
jns
dec
out
loope
pop
mov
cmp
mov
jns
loopne
in
lret
and
sbb
adc
xchg
xor
stos
insb
jbe
shlb
sub
mov
push
cmp
mov
int
stos
xchg
jae
out
xor
push
jmp
jmp
stc
add
xor
insl
xchg
dec
stc
mov
imul
pop
push
hlt
insb
sarb
int
loopne
je
cmp
orl
mov
decb
sub
test
sub
jge
loope
pop
jns
in
lret
cmp
pushl
cmpsl
ss
test
lahf
sti
push
mov
push
adc
cmc
int
stos
jae
jge
stos
test
std
shr
mov
bound
inc
xor
lods
fnstenv
arpl
xor
mov
add
lret
aad
mov
or
fsubs
sbb
sub
leave
fwait
lods
dec
dec
leave
pop
outsb
out
push
push
sub
mov
xchg
inc
incl
stc
fptan
inc
mov
popl
js
in
in
xchg
jb
out
push
xchg
in
dec
or
scas
fsubp
rol
or
mov
mov
push
imul
dec
pop
hlt
out
xor
mov
add
hlt
fcmovnbe
andb
mov
repz
stos
nop
jns
jle
lods
imul
and
or
mov
scas
scas
mov
scas
std
in
xchg
fwait
jae
ficoms
dec
out
adc
push
lea
popa
or
arpl
nop
mov
add
lods
add
or
lea
std
fldenv
into
xchg
or
dec
inc
xchg
test
imul
jbe
mov
adc
sub
and
or
mov
xor
pop
sbb
or
shlb
dec
mov
pop
xor
cmpsb
andl
add
jo
aam
push
jnp
jp
mov
mov
sub
push
mov
mov
jne
movsl
in
pushf
sbb
add
shl
add
or
mov
enter
sbb
fdivr
dec
scas
hlt
scas
xchg
inc
cmpsl
adc
sbb
mov
pop
call
adcl
lea
scas
out
mov
sbb
aam
repnz
push
mov
or
out
and
dec
pop
enter
mov
push
xlat
hlt
xchg
or
imul
test
enter
or
adc
movsb
dec
xchg
ret
or
jge
iret
movsb
shr
jecxz
gs
das
imull
nop
pushf
loope
mov
test
push
cmp
gs
outsb
je
push
cli
pushf
clc
loop
mov
xor
xor
int
push
shlb
enter
mov
test
addl
push
jb
fbstp
fisubl
inc
push
pop
scas
sub
add
add
xor
xchg
out
push
mov
ljmp
and
or
mov
xchg
xor
mov
mov
inc
jge
popa
sbb
mov
fsubrp
cmpsl
stos
ret
lret
mov
in
jecxz
cmp
push
sbb
sbb
cmp
stos
cli
push
arpl
cmp
ret
and
in
pop
dec
nop
outsb
push
mov
mov
outsb
inc
popa
loopne
add
push
lret
sbb
lods
or
and
pop
scas
mov
inc
mov
inc
into
adc
cmpsl
fmull
ds
pop
mov
inc
pop
leave
or
shll
shrb
xchg
lret
or
add
cmp
or
insb
xor
stos
fadd
push
pusha
bound
scas
scas
out
pop
jg
scas
rcll
add
movsl
or
dec
cs
push
popa
jmp
decl
mov
ds
in
pushf
pop
jbe
sub
ds
das
add
or
jmp
pop
mov
pop
inc
fistpl
jecxz
xlat
lds
jmp
fsubs
adc
repz
mov
add
xor
inc
cmp
mov
cmp
in
inc
jp
push
lods
mov
je
mov
xchg
mov
out
sub
cmp
ja
fldcw
mov
sbb
int3
push
xor
jecxz
mov
arpl
xchg
mull
mov
jle
sub
mov
loop
test
mov
les
cmpsb
mov
mov
push
pop
xor
sub
stos
addr16
mov
addr16
ljmp
insb
inc
add
pop
jbe
cld
add
stc
data16
or
dec
daa
adc
mov
in
loope
cmpsl
cld
imul
movsl
out
sbb
mov
xchg
adc
ffree
rcll
mov
fwait
pop
fildll
cmp
pop
cmp
pop
test
daa
xchg
test
imul
jecxz
mov
iret
sub
mov
push
jo
jmp
mov
scas
xor
mov
pop
ss
jl
testb
arpl
mov
pop
cmovp
pop
add
xor
lods
mov
lods
push
sbb
mov
push
cmp
movsb
mov
and
lods
or
pop
pop
mov
enter
loopne
pop
lret
mov
pop
xchg
dec
mov
xchg
je
in
xchg
outsb
push
pop
add
cmc
sub
stc
leave
push
cmp
add
cmpsl
aas
out
into
lret
outsl
mov
and
out
les
out
pop
adc
enter
mov
push
pushf
out
mov
call
jae
out
mov
aad
pop
inc
popf
lret
dec
mov
imul
push
mov
cmp
sbbb
mov
mov
jmp
aad
jg
push
es
lcall
repz
aas
sbb
inc
outsb
lret
fsubr
xchg
jmp
test
aam
stos
or
leave
pop
mov
inc
push
fdiv
das
inc
sbb
mov
pop
dec
or
out
dec
push
fisttpl
or
out
test
xor
cli
cmpsl
mov
fisttpll
loopne
cltd
push
lcall
lcall
cmc
insl
xor
xchg
insl
or
cld
push
clc
iret
jecxz
andb
xor
f2xm1
mov
inc
jnp
jb
aam
clc
int3
hlt
call
pop
xlat
aaa
loop
loope
rcrb
push
aad
mov
xchg
sub
out
ss
mov
stos
pop
jnp
in
dec
popf
lock
and
mov
in
int
pusha
pop
push
add
mov
jle
mov
rcr
test
inc
push
loope
popa
mov
mov
xchg
lret
leave
ljmp
cmp
pushf
or
ret
adc
insb
cmp
mov
arpl
mov
pop
dec
push
out
and
daa
ja
mov
dec
out
insl
xchg
in
out
pop
pop
xor
xchg
lret
mov
fnsave
subb
loope
inc
push
fcmovne
adc
push
cmc
lods
cmc
icebp
add
std
shlb
clc
int
xchg
popf
dec
xor
inc
pushf
cmpsl
ljmp
into
imul
pop
mov
push
fwait
or
push
sbb
xor
pop
push
mov
rorb
xor
pop
sbb
jb
pop
in
js
div
imul
call
nop
stos
scas
cmpsb
cmpsb
imul
loop
in
ljmp
sahf
xor
stos
inc
test
inc
jmp
xorb
push
cmp
fs
inc
aam
mov
inc
aas
mov
lret
pop
pop
vphadduwd
fwait
xchg
adc
loop
mov
enter
lea
mov
add
sahf
add
aas
into
js
jge,pn
jb
mov
mov
mov
inc
mov
es
mov
loope
mov
adc
insl
test
cli
and
repz
mov
daa
push
mov
jns
mov
arpl
inc
insl
loop
pop
cmp
add
pusha
dec
test
mov
pop
and
aaa
jp
mov
fadd
les
xor
mov
cmp
leave
out
inc
xchg
pop
sahf
push
and
cs
inc
pop
xchg
repz
scas
or
inc
xor
xchg
xchg
sbb
push
inc
xorb
add
pusha
or
jge
pop
xor
fsubrs
mov
adc
out
cli
inc
loopne
mov
mov
packsswb
push
movsb
or
add
out
xor
addr16
mov
fists
dec
in
jecxz
xchg
or
iret
add
push
nop
cwtl
xor
xor
xorl
push
mov
push
ret
cmp
xchg
ret
pop
dec
pop
test
xor
shl
lcall
cmp
fdivs
or
fsubl
outsl
das
mov
in
push
or
pushf
cmpb
scas
pop
or
fsubl
pushf
sbb
xor
and
inc
pop
mov
lock
lods
or
fldt
lods
dec
mov
mov
cmc
jecxz
lods
jno
in
and
subl
insb
adc
mov
idivb
hlt
fnstenv
inc
mov
fistl
rorl
or
xchg
inc
xor
in
fidivs
fcoms
sub
sub
jnp
stos
mov
pop
mov
cmp
pop
pop
inc
int
clc
inc
dec
insl
movsb
adc
cmpsb
das
vcvttpd2dqx
popa
fstpt
js
in
lahf
lret
cmp
repz
push
leave
imul
push
fwait
inc
in
lods
lock
insw
mov
je
mov
movsl
dec
mov
loopne
sub
inc
fldenv
adc
rcrb
and
mov
or
shrb
mov
or
xchg
push
leave
leave
imul
out
mov
test
imul
fisttpl
xor
xor
hlt
mov
pop
cwtl
stc
movb
or
xchg
data16
xor
mov
pop
sub
nop
push
rcrb
std
xor
int3
adcb
xchg
and
mov
mov
adc
cmpsl
mov
mov
push
cmp
pop
xchg
scas
test
jb
mov
std
mov
fiaddl
mov
cltd
nop
sbbb
jbe
mov
adc
fld
call
imul
gs
nop
lret
mov
sahf
mov
bswap
kaddb
and
pop
outsl
inc
insl
mov
mov
stc
mov
int3
test
or
ret
loop
pop
fisubl
or
hlt
adc
int3
stos
inc
mov
xor
and
inc
ffree
dec
pop
sbb
mov
insl
ret
dec
ret
test
imul
push
jae
daa
mov
push
mov
loop
or
insl
sub
sub
sbb
cmp
stos
shlb
sub
test
pop
sbb
cs
pop
dec
loop
sbb
outsl
inc
cmp
dec
cmp
jne
fbstp
dec
xchg
test
sbbl
adc
fidivs
push
pusha
hlt
mov
mov
push
scas
out
fidivs
push
push
pop
rcr
les
iret
fs
leave
aam
cmp
int3
les
mov
mov
and
cmp
inc
gs
out
mov
lock
mov
lds
pop
add
mov
out
sub
idiv
insl
mov
xor
lcall
push
orl
mov
pop
pop
xor
test
lods
and
arpl
push
push
outsb
fisubs
jge
inc
cmp
icebp
popf
leave
test
jl
cmp
dec
outsl
jle
and
jecxz
cltd
mov
add
sarl
mov
mov
jns
lcall
jno
sti
testl
adc
ret
mov
or
sbb
ss
inc
inc
push
cmp
fildl
push
xor
lahf
scas
in
imul
mov
rclb
pop
mov
popa
les
dec
rol
fadds
inc
jge
bound
or
fisubl
mov
pushf
mull
jns
mov
dec
mov
adc
icebp
inc
mov
push
and
cmp
or
mov
lds
add
mov
xchg
push
adc
fldcw
jo
gs
arpl
jecxz
sub
inc
dec
xchg
je
stc
mov
pop
iret
lret
pop
pusha
sbb
rcr
insb
insb
ja
je
adc
cmc
jl
shl
inc
std
inc
in
cwtl
fs
repz
testb
popa
cmp
out
testb
jg
lds
sub
adc
fldt
repz
mov
mov
mov
test
or
aaa
xchg
test
ljmp
xchg
jo
dec
nop
imul
push
sub
mov
jnp
xor
pusha
fwait
negl
mov
out
xor
sbb
and
ja
add
enter
cmp
push
or
mov
das
jae
jg
jnp
push
mov
fnstcw
movsl
andb
xor
mov
pop
push
shlb
ss
mov
xor
push
jo
rorb
outsl
or
imul
dec
or
mov
stc
pop
xchg
fdivs
push
ljmp
in
or
test
push
xchg
jno
mov
sub
nop
pop
sub
jno
push
or
mov
data16
scas
adc
cli
inc
mov
mov
sbb
inc
out
hlt
xor
cwtl
xor
ret
cmp
cltd
lods
dec
mov
cmp
loopne
mov
gs
pop
ret
mov
aas
imul
pusha
out
loope
pushw
fdivrs
jno
mov
and
and
mov
ror
or
fsubl
movsl
in
mov
int
lea
add
cmp
js
lock
cs
add
cmp
insb
in
sbb
adc
sbb
sbbl
dec
lret
xchg
xor
ret
jl
aad
pop
xchg
in
mov
shl
fsts
mov
adc
out
fs
das
inc
call
insb
push
stos
xor
std
in
sub
inc
pop
pop
pop
mov
push
mov
jbe
xchg
dec
imul
pop
pushf
jae
mov
jmp
push
andb
pop
pop
push
sbb
mov
inc
cmp
sbb
jae
mov
es
outsb
shrb
jp
mov
add
stc
fldenv
into
add
dec
adc
ret
cld
nop
lret
mov
dec
mov
xchg
cld
mov
aaa
jbe
cld
jo
xor
pop
pusha
aam
call
mov
dec
xor
pop
sbb
fmull
sub
mov
imul
dec
ds
push
imul
jge
or
add
jae
cmpsb
push
mov
inc
cmpsb
xchg
lea
sbb
ja
jl
aad
and
add
ljmp
cmp
sar
cli
leave
xor
mov
mov
mov
and
or
pop
adc
dec
xor
fucom
xchg
or
inc
sub
fcmovnu
in
xchg
repnz
pop
xchg
jmp
jle
mov
sub
mov
xchg
int
jecxz
sbb
imul
rclb
xor
dec
ret
adc
ret
push
inc
mov
push
sbb
and
pop
xchg
dec
out
out
rol
add
das
test
fisttpl
cltd
ret
das
test
ss
jae
call
imul
or
jo
jmp
xchg
mov
xor
lds
insl
jne
movsb
sub
fs
cmp
int
jo
scas
sub
sub
lret
or
lcall
lods
bnd
ss
popa
mov
dec
or
aas
loope
xchg
lret
leave
out
das
clc
insb
push
pop
in
fs
sahf
dec
loop
fildl
or
cmp
push
jg
fcoms
mov
inc
subb
mov
sub
or
lea
and
adc
pop
in
aad
mov
and
pop
cltd
xchg
out
lea
dec
cs
adc
test
mov
repz
dec
push
cmpsl
call
jmp
in
arpl
pop
adc
ds
pop
fidivs
ja
ds
xor
das
and
add
out
jmp
ret
push
test
mov
gs
mov
fxch
fiadds
outsb
xchg
ja
cltd
push
mov
clc
sahf
loope
push
shll
xlat
and
inc
mov
pop
mov
push
int3
jns
stos
mov
add
test
ud1
stos
inc
mov
ja
lret
aaa
test
sub
mov
mov
inc
les
movsl
ss
cmp
loope
mov
ja
cmp
pop
mov
jno
inc
ss
pop
test
movsl
cmp
loop
jp
rcrb
dec
andl
rcll
lock
mov
loopne
lods
stos
sarb
mov
push
mov
movsb
xchg
ror
fiaddl
push
ret
fidivs
fxtract
stos
xchg
dec
std
xor
lcall
lods
push
icebp
mov
sub
pop
enter
jbe
ljmp
and
repnz
push
mov
mov
jne
inc
fdivrs
mull
fs
jne
add
int
mov
push
movsl
imull
lea
out
in
cmpb
sub
push
test
and
in
dec
xchg
gs
fsubl
daa
shlb
push
mov
inc
mov
push
add
inc
push
cmp
outsl
lret
out
ss
xor
test
fnstcw
push
push
fdivs
mov
sub
jg
mov
loop
push
inc
enter
and
push
adc
pop
outsl
jecxz
fs
adc
push
or
lock
roll
inc
insb
mov
mov
mov
adc
cmp
loope
cli
sbb
cmpsb
js
loopne
dec
pop
repnz
cwtl
mov
jae
mov
jbe
pop
insb
xchg
adc
jg
mov
xorb
xchg
xchg
or
cmpsb
mov
push
or
push
pop
xor
cwtl
iret
adc
cmp
jg
mov
xlat
xchg
push
test
mov
cmp
sbb
inc
out
incl
mov
push
pop
lret
fidivrs
xchg
dec
xor
pusha
inc
mov
aaa
push
mov
push
xor
aad
insb
fsubl
aaa
push
pop
mov
or
or
popf
add
loopne
ss
rolb
pop
test
pop
lods
test
and
stc
ja
sub
dec
or
mov
add
mov
push
test
push
idivl
outsl
mov
pop
test
pop
xchg
div
inc
into
insl
mov
outsb
xchg
test
sti
cmpsb
pop
out
or
rorl
dec
call
fsubs
sbb
into
push
stc
inc
pushw
adc
imulb
xchg
jmp
lahf
cs
jmp
cmp
and
out
pop
push
push
aaa
out
mov
or
icebp
pop
cltd
and
mov
sub
lret
sti
notb
xchg
imul
faddl
paddw
cmp
sarl
add
sub
mov
dec
xchg
or
rolb
lods
das
xor
sbb
nop
xchg
mov
mov
call
lds
push
ljmp
out
pop
insl
popf
test
push
sub
mov
adc
in
loope
add
push
outsl
adc
xchg
aam
pavgb
inc
jns
bound
jg
imul
cs
ret
or
cmp
popa
dec
dec
push
fists
mov
xchg
cmc
jp
inc
lods
mov
es
popa
rcl
arpl
adc
mov
addr16
xchg
incl
push
outsl
or
sbb
or
inc
sub
push
push
jns
pop
and
adc
dec
add
add
jb
jge
daa
pop
pop
popa
sbb
aad
lds
fstps
scas
loopne
jbe
test
cs
in
cmp
js
xorb
dec
mov
dec
and
sub
inc
mov
mov
dec
ret
in
loop
xor
in
imul
fwait
mov
into
jno
loope
pop
inc
aaa
shrb
cmp
mov
jp
sub
mov
test
decl
xor
je
out
push
mov
mov
ret
xchg
xorl
gs
and
sti
sbb
adc
outsl
cltd
call
cmp
lahf
dec
mov
adc
push
addb
inc
mov
test
popa
pop
mov
out
mov
adc
aad
xchg
jp
stc
test
or
sahf
ret
xchg
sti
loopne,pt
jno
addr16
out
shlb
xchg
xor
int
test
push
add
ljmp
icebp
or
xor
jp
jbe
push
sub
mov
dec
xor
movsb
scas
push
push
dec
and
std
arpl
cmpsb
ja
xchg
add
and
repz
pop
shl
mov
xchg
mov
inc
imul
dec
in
ja
pop
jb
lahf
mov
movsl
sti
push
jb
adc
xchg
adc
out
and
jne
lahf
pop
test
mov
shlb
and
inc
dec
loop
mov
xor
add
cmp
mov
arpl
xchg
mov
jmp
mov
filds
push
cmp
les
mov
xlat
andb
push
jg
addr16
add
push
pop
sub
roll
push
mov
fs
mov
cmp
lcall
push
adc
mov
mov
push
mov
xchg
jp
decb
idivb
mov
push
add
jae
push
hlt
mov
dec
aaa
divl
loope
or
in
push
mov
outsl
push
lock
lahf
cmp
lods
pop
into
mov
out
pusha
enter
popa
int
sbb
jp
outsl
outsl
test
jge
test
push
out
inc
xlat
cmp
or
xchg
add
dec
cmp
add
or
cmp
scas
mov
pop
push
mov
inc
movsl
out
pushf
mov
dec
pop
lds
xor
test
jmp
add
cwtl
or
jecxz
ja
int3
jg
jg
js
lcall
xchg
pop
loopne
popf
stc
jb
add
fs
ds
mov
jnp
mov
cmc
cs
inc
outsl
mov
xchg
or
shlb
mov
or
jo
dec
xchg
adc
dec
loopne
push
xchg
add
push
pop
xor
lock
and
decl
pop
inc
sub
cmpsl
sub
jp
sbb
ss
cmp
pop
jnp
out
push
mov
data16
mov
inc
push
push
or
push
ljmp
jecxz
mov
pop
in
scas
aas
addr16
xor
std
sbbl
test
adc
dec
pop
mov
dec
xchg
ud1
inc
and
daa
popa
das
movsl
inc
xor
stc
mov
call
lods
pop
and
sahf
add
sub
icebp
push
imul
sub
jg
subb
mov
cmp
aam
dec
in
stos
mov
fiadds
jns
push
aas
mov
arpl
test
jo
aas
ret
xchg
cli
arpl
push
pop
mov
stos
in
jg
cli
ljmp
and
stos
dec
dec
rolb
push
xor
sbb
or
adc
or
es
and
stc
outsl
xlat
fs
sub
mov
jbe
sbb
and
xchg
jl
mov
clc
nop
pop
sbb
jo
lret
sbb
inc
push
dec
dec
and
mov
or
jmp
fcoml
sbb
push
ret
inc
sub
adc
xchg
mov
pop
out
adc
fld
repz
sub
test
xor
jmp
je
arpl
sub
fmuls
lcall
inc
jmp
ljmp
int
leave
andb
mov
stc
cltd
jmp
shll
cmpsl
pop
pop
dec
mov
pop
orb
adc
and
inc
pop
cltd
dec
je
inc
push
mov
shrl
xchg
sub
push
jmp
mov
push
mov
scas
and
jnp
mov
repnz
fucom
leave
aas
and
pop
and
add
xor
xor
jle
scas
add
lods
mov
mov
sahf
pop
imul
add
stos
jl
addr16
dec
test
or
popf
lock
popf
cltd
loopne
ja
xchg
fcomp
fiaddl
dec
mov
jl
test
mov
adc
fimull
arpl
sahf
add
mov
and
pop
ljmp
test
push
ds
pop
add
ljmp
adc
mov
pop
lea
popa
fs
call
bound
cwtl
loop
mov
cmp
jbe
jge
mov
scas
lret
icebp
jo
mov
xor
testb
outsl
insl
jno
add
stos
pushf
add
ror
mov
cmpsb
pop
mov
fdivr
shlb
fadds
popa
or
mov
ljmp
mov
shlb
mov
es
adc
dec
cmpsb
xchg
jp
xchg
je
fldcw
aaa
push
incl
adc
in
inc
mulb
pop
int
cmp
mov
jae
sbb
xor
sub
mov
dec
cmpb
or
cltd
sbb
pop
stos
imul
mov
lock
int3
and
mov
xor
and
xchg
cmp
or
pop
mov
cmp
push
fwait
jb
mov
inc
stos
pop
dec
fistl
push
jo
pop
push
xchg
scas
sub
pop
mov
adc
int
repz
addr16
push
je
xor
inc
mov
dec
ss
cld
aad
inc
icebp
mov
notl
push
andb
enter
xlat
movsb
cmpl
push
inc
cli
clc
roll
mov
adc
xchg
insb
cmp
adc
sbbl
or
mov
inc
shll
lods
xchg
cmc
aaa
imul
mov
test
je
pusha
push
into
lods
cmovg
fcmovnu
pop
adc
push
imul
push
mov
iret
shll
inc
add
subl
adc
shl
lret
sub
or
mov
push
push
popf
xor
stc
mov
sub
cmp
sub
jne
out
mov
test
dec
jno
mov
push
out
adc
dec
lods
ret
jnp
inc
or
mov
out
mov
aaa
xor
jge
popl
xor
pop
lcall
pop
pop
sub
cmp
cmp
cmp
inc
lods
dec
xchg
jne
fistps
jnp
or
repz
sti
enter
mov
int3
test
sub
xchg
rol
outsb
call
jecxz
std
mov
sbb
shl
xchg
cltd
inc
adc
mov
shl
out
mov
repz
imulb
call
pop
jb
aas
sub
into
enter
xor
lods
in
adc
cmc
jb
pusha
decl
bound
inc
popa
fildl
mov
insl
mov
dec
out
sub
or
fucomip
push
sbbl
lods
xchg
xor
dec
add
cmpsb
pushf
in
aaa
xor
mov
jg
mov
out
pop
fsubs
lea
insb
repnz
and
add
mov
cmp
fwait
jno
in
or
out
pop
sub
sbb
testb
push
test
clc
pop
mov
or
mov
int3
mov
xor
out
sbb
push
sti
shr
arpl
nop
xor
out
out
push
repnz
or
cmp
sbb
push
jg
lcall
sub
jbe
mov
push
jnp
mov
dec
or
or
scas
scas
adc
inc
cmp
inc
test
les
je
xor
dec
sbb
and
inc
mov
movsb
pop
mov
jno
lahf
js
push
push
push
aas
xchg
jae
mov
xor
in
aad
cltd
test
stos
mov
mov
xorl
sbb
cmpsl
push
adc
pusha
rclb
and
jo
sti
push
cmp
sub
popf
jmp
jo
into
mov
lret
xor
lods
scas
hlt
jae
xchg
push
adc
push
lods
insl
ds
cmp
jne
pop
rclb
rorl
mov
sti
cmp
mov
push
insl
cvtpi2ps
ret
lcall
jne
xor
add
push
mov
pop
shrb
adc
ror
mov
jnp
fs
cmp
add
xor
xchg
jle
cmp
xchg
hlt
lock
mov
cmpl
lds
imul
rcll
cmc
push
xchg
sti
dec
cli
bswap
sarb
xor
cmp
js
iret
adc
mov
mov
lds
or
mov
xchg
fldcw
testl
les
xchg
test
dec
xchg
mov
xchg
push
ljmp
aaa
clc
dec
and
lea
add
lock
jb
daa
dec
mov
loopne
jle
pop
sbb
paddsw
cltd
sbbl
xlat
pop
fadd
std
pop
hlt
scas
xlat
xor
cmpsb
mov
iret
inc
mov
adc
sub
aas
cmp
cmp
out
add
jno
sahf
xor
addr16
xchg
lcall
ret
xor
stos
dec
and
and
dec
dec
loop
sbb
popa
stos
lods
cmp
aas
sbb
xchg
mov
mov
ljmp
rorl
fs
shrl
mov
insb
jns
jecxz,pn
push
cmp
negb
pop
sbb
cmp
xchg
inc
into
imull
push
dec
ss
cli
sub
xchg
shl
cmp
icebp
ret
dec
sbb
and
inc
movsl
jmp
sub
push
jb
inc
jl
repz
adc
jl
int
xlat
mov
fimull
das
mov
cmp
and
imul
sahf
shrb
jge
lock
notb
inc
cwtl
push
repz
ljmp
mov
aad
push
add
notb
stc
in
sti
inc
push
mov
rcrl
shlb
sahf
sahf
les
jb
xchg
xor
sbb
stos
mov
int3
cltd
insb
xchg
adc
fcom
test
pop
push
inc
cmp
add
iret
push
stos
mov
or
xchg
cmp
ret
jle
dec
mov
dec
sub
push
mov
popl
leave
cld
or
gs
xchg
pcmpeqd
push
add
sti
fdivr
gs
mov
pop
dec
push
addl
sbb
adc
mov
hlt
mov
fnstcw
add
dec
test
jl
subl
mov
insl
mov
jmp
loopne
leave
pop
rcrb
cmpsb
sbb
sbb
push
adc
or
out
jnp
dec
rorb
aad
xchg
sbb
xchg
out
out
and
sub
lcall
mov
test
leave
and
sbb
aad
cmp
lret
mov
xchg
addr16
jl
out
fstl
mov
or
mov
and
je
push
mov
add
xchg
xor
js
sbb
movsl
mov
sub
sti
xor
movsb
out
stc
sbb
cmp
imulb
aad
or
inc
sarl
mov
insl
push
push
lahf
adcb
in
mov
arpl
xor
xor
inc
dec
xchg
ret
fcomip
dec
lcall
loopne
xor
scas
jmp
sbb
nop
xor
icebp
inc
push
iret
mov
sub
arpl
jne
adc
ds
jecxz
inc
out
lcall
mov
pop
divl
shr
pop
mov
aaa
leave
nop
mov
xchg
adc
movsl
push
filds
xchg
scas
in
pop
fs
test
sub
jg
test
rolb
adc
mov
lea
pop
jecxz
rorl
and
pusha
aam
add
insb
jbe
inc
hlt
insl
call
call
jecxz
data16
fs
es
push
fdivl
fmulp
ret
sbb
js
fsub
cmpsl
mov
rclb
jnp
push
push
adc
adc
jle
lret
jb
lret
push
movsl
push
add
clc
popa
sbb
je
or
sbb
aas
push
cs
sarl
inc
adc
sarl
int
lds
push
push
loope
sbb
popf
jmp
aam
pop
jp
dec
mov
jmp
fistl
out
inc
adc
mov
in
sub
daa
lcall
mov
jbe
mov
jmp
cwtl
cltd
cwtl
xorb
xchg
push
es
sbb
addb
or
lahf
add
add
movsl
inc
adc
insl
sbb
xor
jp
aam
push
xor
or
daa
xchg
sbb
jp
mov
lods
push
aad
inc
clc
sbb
cwtl
mov
add
cmp
mov
rolb
jae
enter
dec
repnz
bound
xchg
cmp
ljmp
popf
fdivrp
dec
mov
fwait
ljmp
push
dec
jle
mov
xchg
mov
mov
cltd
inc
lods
jmp
mov
hlt
cltd
dec
loopne
icebp
insl
test
sub
rcr
jecxz
outsl
pop
push
out
jle
insl
add
add
mov
sbbb
xor
addps
xchg
daa
or
mov
rcll
adc
jno
xor
test
pop
ja
or
out
stos
push
mov
or
es
mov
lods
dec
popa
push
sub
xchg
je
push
movsb
cmc
sbb
into
roll
movsl
int3
ja
inc
out
cwtl
pop
sar
sub
pop
cmovae
cmp
or
bound
cld
xchg
jno
jp
into
xchg
mov
xchg
push
push
js
xor
sbb
test
dec
les
arpl
push
dec
add
xchg
ss
fs
popf
xor
push
int
dec
cmpsl
mov
leave
lea
dec
mov
stos
cmp
xor
push
push
fdiv
test
aad
dec
ret
xchg
test
shrl
cld
cmp
sbb
pushf
mov
iret
loope
arpl
loope
xchg
cmp
pop
jp
stos
aas
adc
data16
adc
repnz
mov
lods
cmc
jbe
orl
cmp
je
jp
imul
mov
inc
loop
jno
inc
jle
jnp
pusha
xchg
mov
xchg
cli
mov
inc
fcompl
push
loope
into
jnp
outsl
loope
jmp
push
dec
fcomps
dec
xor
adc
mov
xor
inc
mov
push
xor
mov
sbb
aam
mov
ss
xchg
mov
ret
mov
nop
push
fstps
pop
push
aam
pop
adc
pop
outsl
rcrl
mov
mov
pop
cmc
inc
cmpsb
pop
mov
sahf
mov
push
dec
lds
lods
cmp
jne
jbe
mov
sbb
and
fcomip
ret
mov
ljmp
pop
add
loope
mulb
je
pop
daa
loopne
fcmove
pop
add
into
lret
adc
cwtl
jae
adc
rcr
ss
inc
outsl
pop
cmp
je
and
int3
pop
cmp
sbb
insl
test
mov
cmp
lods
lahf
dec
mov
add
into
jnp
pop
adc
les
pop
shlb
xchg
cmp
imul
out
test
push
pop
mov
jo
je
add
pop
bound
rolb
mov
sub
mov
pusha
sti
push
fwait
bound
xchg
mov
daa
insb
sbb
repz
lods
mov
out
test
sarb
lret
mov
shrl
lods
das
sbb
mov
jle
ror
pop
mov
or
in
aas
loop
sub
mov
mov
movsb
stos
les
sub
ja
inc
sub
sbb
je
lock
iret
cmp
fidivs
sub
sub
jge
push
out
jl
sub
mov
push
jle
popf
pushf
imul
mov
sub
jecxz
lock
inc
insb
push
sbb
imul
jge
inc
mov
aaa
sbb
push
dec
test
scas
xchg
paddw
add
mov
je
push
dec
lds
mov
xor
in
push
add
lret
jnp
sub
push
in
add
iret
adc
dec
adc
aad
lods
fidivrl
fdivrl
xchg
push
sub
cmp
cs
mov
fimull
dec
mov
pop
cmp
enter
hlt
ss
std
inc
xor
cltd
sub
adc
lahf
xlat
mov
insb
pop
mov
xlat
pop
testl
pop
lahf
mov
js
pop
pop
adcb
test
out
rcrb
push
loopne
out
stos
shl
mov
pushf
push
sub
xchg
xchg
jns
inc
fists
jecxz
cmpl
in
mov
mov
xchg
pop
lahf
decb
xchg
jne
cmp
mov
xchg
adc
mov
repnz
pop
push
inc
fidivs
jae
inc
mov
mov
sub
xchg
int
pop
inc
adc
inc
lahf
pusha
inc
and
dec
push
push
pop
mov
adc
pop
aaa
xor
arpl
test
rcr
cmp
int3
add
and
sub
test
adc
aad
add
imul
pcmpgtw
ret
lret
movsb
shlb
mov
fcompl
jns
sbb
test
enter
jg
int3
and
hlt
scas
ja
mov
insl
mov
cmpsl
xor
nop
mov
in
push
not
cmc
push
lods
into
pop
ss
iret
ds
push
pop
popf
in
das
insb
imulb
jo
lret
pop
mov
push
push
insl
inc
dec
insb
out
dec
lods
imul
push
xor
movsb
mov
daa
ret
test
test
mov
ja
sbb
or
sbb
fidivl
inc
stos
xchg
stos
adc
in
cmp
test
push
mov
stc
xor
loopne
xor
xchg
jge
pusha
mov
lahf
xor
mov
add
xchg
xchg
pop
out
lds
inc
jo
mov
cwtl
stos
fcoms
das
add
pushf
inc
pop
mov
sub
cmp
test
cmp
leave
aas
pop
minps
push
cmp
sub
out
inc
add
pop
push
or
fisttpll
push
nop
add
push
mov
std
mov
bound
sbb
shll
movsl
jle
dec
push
insb
jge
daa
ja
stc
and
das
fcoml
cltd
test
jp
sbb
dec
ror
insl
popa
fstpt
je
cli
arpl
xchg
mov
dec
add
add
popa
xchg
mul
adc
inc
cwtl
adc
in
js
adc
or
mov
inc
add
loopne
xchg
sahf
pop
ret
jo
push
repnz
xchg
and
xchg
or
movsb
cld
addl
aaa
jmp
cwtl
bnd
mov
in
lods
add
mov
ds
inc
hlt
jnp
addb
fnsave
icebp
pop
insb
jge
mov
cld
xchg
mov
lahf
daa
inc
repz
hlt
sbb
fmull
xchg
cld
out
jp
jb
pop
int
fcomp
cld
in
push
cmpsl
push
xchg
stc
push
sub
push
test
in
ret
test
xlat
cwtl
mov
fcompl
ret
js
inc
repz
int
xchg
sti
pop
push
enter
sub
sbb
add
xorb
cld
repz
sbbb
call
test
shrl
mov
add
clc
xchg
mov
clc
lods
push
inc
pop
xchg
call
inc
mov
lds
stos
lea
inc
sub
int3
repnz
popf
mov
or
xor
and
inc
jp
test
int3
push
test
inc
pop
fwait
adc
xor
jb
cmp
test
test
cmpb
push
shll
jp
mov
jb
les
rcll
mov
adc
jle
mov
jl
xchg
adc
lahf
scas
loope
add
mov
int3
push
cmp
in
imul
dec
std
or
out
cld
mov
fsub
lret
xlat
shll
lcall
and
dec
jmp
lods
fbld
leave
test
push
mov
loope
cltd
cmp
lods
inc
test
enter
cld
mov
aaa
mov
inc
outsl
inc
xor
cmp
mov
inc
jle
loop
jno
sub
mov
add
js
add
insl
shl
lcall
jae
sbb
ret
fwait
lea
push
popf
adc
push
dec
aas
cld
mov
xor
sub
sarb
popa
push
xchg
aas
enter
scas
pop
pavgw
or
adc
xlat
dec
cmp
push
aad
inc
imul
test
aas
lods
addr16
xor
into
sbb
fisubrl
add
jg
fisubrl
xorb
fs
adc
push
mov
jp
popa
bound
ss
dec
aam
movsl
and
inc
ss
notb
cmp
lea
bound
jge
cmp
daa
xor
sub
notl
stc
pop
movsb
popa
jg
jmp
add
cmp
fcom
sbb
sbb
add
lret
mov
fadd
and
call
loop
mov
pop
js
bound
loop
mov
js
aad
cld
push
lret
out
in
ss
notl
adc
fwait
adcb
outsb
nop
jns
inc
gs
mov
clc
shlb
cmp
popl
xorb
push
push
hlt
mov
add
jle
ss
jge
cmpsb
dec
dec
cmpsl
jle
lods
jnp
pop
cwtl
bound
push
lea
test
pop
arpl
xor
mov
inc
push
mov
movsb
mov
jno
aaa
cmc
loop
inc
popl
cmp
mov
in
pop
ja
add
mov
cmp
jecxz
or
pop
sub
js
inc
xchg
and
rorb
xor
ficomps
push
add
fimuls
mov
inc
aaa
mov
add
jo
mov
data16
xor
mov
mov
nop
push
add
in
cld
fucomi
mov
mov
push
mov
movsl
mov
inc
adc
sub
rorb
mov
filds
cmpsb
sub
dec
mov
loopne
mov
sbb
lret
cmp
cmpb
mov
test
lds
mov
outsl
xor
adcl
std
bound
dec
jmp
pop
mov
jo
test
shll
into
adc
popa
xor
aas
mov
lret
push
xchg
push
cmpsl
or
stc
shrl
fisubl
test
or
mov
imul
ret
loopne
cmp
mov
mov
int3
imul
out
push
dec
fcomp
cmp
popa
sub
push
and
cli
push
or
xor
in
jns
jne
mov
push
mov
fcmovne
je
lds
mov
or
mov
jge
xor
roll
xor
cmp
mov
fdivrl
xor
outsb
lcall
sbb
sti
lret
sbb
xorb
mov
out
push
adc
add
and
data16
xchg
inc
add
or
stc
outsb
test
and
xor
pop
divb
repz
filds
stos
pop
sub
or
jp
ficomps
jmp
mov
outsl
dec
adcb
outsl
add
cmpsl
mov
dec
mov
jmp
mov
push
sub
icebp
mov
cmc
add
mov
push
xchg
mov
sub
mov
xchg
scas
imul
pop
jo
enter
adc
mull
mov
out
hlt
jmp
push
leave
ss
sbb
push
lahf
adc
shl
dec
push
mov
add
and
nop
inc
inc
cld
mov
or
scas
gs
jl
std
in
sub
mov
js
dec
sub
sub
arpl
jns
sahf
imul
add
mov
into
pop
inc
mov
mov
jp
sub
aad
notl
std
xchg
sub
adc
pop
ljmp
iret
lds
es
icebp
mov
push
mov
stos
push
ds
pop
xor
mov
and
fsub
or
mov
int3
jle
mov
ror
jne
gs
es
mov
inc
dec
pop
lock
enter
jle
ret
push
icebp
or
mov
and
repnz
fidivs
repnz
scas
lock
push
sbb
inc
xchg
shlb
arpl
inc
mov
jb
repnz
jmp
lock
pop
out
in
and
or
bound
mov
je
fbld
inc
lds
dec
loop
mov
popa
adcb
xchg
sbbb
scas
js
in
jl,pt
xor
test
cmp
sarb
je
mov
cmc
cld
xchg
inc
mov
sbb
xchg
leave
nop
test
xor
jmp
test
mov
bound
adc
and
test
push
lcall
lret
decb
fldt
jbe
ss
shl
leave
stc
inc
mov
mov
jb
arpl
jle
adc
lahf
adc
and
lahf
sbb
lods
or
fs
je
stc
inc
inc
mov
and
roll
jns
iret
push
fcmovbe
mov
sbb
jae
cmp
lret
mov
sub
lret
inc
ret
mov
jle
mov
imul
pop
or
mov
mov
mov
aad
and
jns
jns
mov
cs
cmc
lods
and
out
push
jb
push
push
sar
inc
mov
lea
cmp
addr16
adc
sub
scas
out
arpl
cli
cmp
inc
and
jmp
roll
scas
mul
cmp
mov
in
cmp
sub
popl
jb
jmp
scas
push
xchg
rcrb
cmp
adc
cmc
pop
mov
test
inc
add
jge
push
loope
mov
mov
sub
cli
nop
jecxz
ficomps
popf
push
lds
sbb
outsl
rcrl
rorb
mov
xchg
mov
je
mov
fimuls
xchg
dec
jns
mov
enter
xchg
sahf
bound
push
sti
shlb
pop
hlt
jno
dec
scas
pop
push
test
lret
pop
dec
dec
cmp
out
or
cmp
xor
mov
xor
jle
mov
and
aas
adc
dec
jns
pop
pop
xchg
pop
ret
imul
bound
jbe
inc
or
xchg
ret
pop
sbb
xlat
rol
imulb
lcall
sbbb
or
xlat
push
cmp
fbstp
xchg
mov
fstps
cmp
repnz
pop
daa
iret
ljmp
fldl
ljmp
pop
mov
test
sarl
push
sbb
icebp
loop
ds
cmp
aam
daa
aad
pop
push
adc
jae
mov
mov
inc
ja
fisttpl
mov
nop
out
loope
imul
pop
test
imul
pop
sbb
or
adc
call
pop
inc
adc
push
sub
dec
lds
loop
pop
test
add
cltd
xor
ffree
or
fucomp
lahf
xchg
loop
movsl
cmp
sahf
mov
loopne
mov
or
sub
cmc
frstor
sub
lret
out
jecxz
and
aad
push
imul
and
mov
mov
ret
cmpsb
cld
dec
loop
mov
test
push
mov
xorb
push
xor
push
or
scas
pop
dec
stc
movsb
jns
xor
and
in
lahf
and
dec
pop
jne
incl
xchg
mov
mov
xchg
ret
mov
inc
mov
push
roll
jp
inc
loopne
pop
sbb
daa
pusha
les
std
dec
pop
inc
shrb
fistl
stos
mov
pop
lds
addr16
push
lret
cmpsb
mov
movsb
xor
mov
dec
lock
fisubrl
cmp
and
repnz
or
mov
ja
sbb
adc
fists
push
rolb
pusha
sahf
ss
mov
adc
sbb
inc
ret
jp
xor
dec
push
xor
push
pop
andb
mov
popa
int3
clc
pop
ror
aaa
sub
xchg
repnz
cmc
cmc
popa
pop
stos
aam
inc
test
adc
shr
mov
pop
cmp
notl
aad
fsubs
adc
outsl
in
stos
sbb
pop
popf
pop
add
cltd
jae
pop
pop
movsl
adc
dec
xor
cmp
or
lods
filds
in
dec
xor
or
cmp
and
shrb
je
and
jb
jo
stc
sbb
inc
hlt
sub
call
pop
push
xor
ret
hlt
mov
cltd
out
int
call
popf
cmc
out
pusha
ljmp
aas
bound
fistpll
addr16
dec
cli
jae
lds
pop
mov
and
arpl
lcall
repnz
dec
aas
lock
and
pop
rcrl
mov
sub
sbb
mov
out
pop
xchg
push
dec
cmc
or
shlb
cmp
es
es
ds
dec
movsb
cmp
fidivl
test
adc
push
push
cwtl
pop
push
sub
outsb
test
mov
mov
xchg
push
jne
daa
dec
int
push
cmp
lds
nop
fwait
leave
in
sti
loop
sbb
xchg
fstpt
cli
mov
add
aad
sub
mov
cmpsb
ret
adc
sbb
mov
in
jmp
cwtl
push
test
popf
push
repnz
mov
scas
cmc
leave
or
aam
in
and
cmp
pop
sub
xchg
pop
xchg
mov
cmp
adc
fisubrs
clc
loope
xchg
test
cmpsl
ror
icebp
dec
sub
and
jmp
lcall
jno
adc
jecxz
sbb
insb
daa
jg
stos
push
or
je
sub
jp
pushf
adc
mov
jmp
xor
loopne
cmp
scas
jns
add
in
addr16
add
xchg
mov
mov
mov
or
arpl
das
in
and
aad
ljmp
jle
mov
and
push
shld
xchg
scas
xor
fnstcw
dec
jg
lods
bound
jge
jl
pop
hlt
mov
rcrb
mov
mov
sahf
cmp
or
aad
xor
adcl
xor
dec
movsl
and
and
xchg
mov
adc
push
inc
fs
fwait
inc
ror
mov
arpl
mov
cmc
addr16
cmpl
ja
sub
jge
mov
shrl
cmpsl
insl
movsl
pop
pop
push
xor
test
cli
movd
add
mov
xor
cmp
addr16
jo
sub
inc
call
mov
ja
daa
push
dec
out
cmpsl
push
nop
and
scas
cmp
mov
cwtl
jecxz
adc
test
fsts
test
or
hlt
cmp
ja
popf
dec
jle
sbb
pop
pop
std
mov
out
les
test
call
sub
fs
nop
xchg
outsb
cmp
sahf
xchg
cs
or
jl
rcrb
adc
sub
test
mov
clc
ss
insl
push
and
mov
aaa
loopne
sub
adc
sub
arpl
stos
inc
pop
xchg
shrl
mov
jo
shrl
ja
push
repz
ss
dec
mov
test
js
xchg
stos
fstpt
loope
cmp
sub
jae
aas
in
pusha
xchg
xchg
jg
js
cmp
mov
sbb
sbb
dec
ss
stc
in
mov
popa
pop
inc
sar
negl
insb
stos
dec
push
push
cmp
cmpsl
shll
lods
lahf
cs
mov
in
mov
lahf
lds
in
pop
jle
subb
dec
cmp
pushf
int
jbe
xchg
sti
jl
scas
cmp
or
or
mov
adc
mov
into
out
out
mov
jl
dec
xchg
jmp
and
adc
insb
push
fdivrs
push
xor
and
dec
push
icebp
jb
pop
pop
dec
lret
shrb
lcall
pop
jmp
pop
lock
popl
flds
jnp
push
mov
or
xchg
enter
mov
aam
mov
nop
ss
out
out
jg
sub
sbb
fists
mov
push
push
mov
push
cmp
cmpsl
mov
pop
scas
pop
mov
push
or
and
adc
stc
js
jge
pop
sub
js
ret
or
loop
lcall
bswap
shlb
sub
movb
pop
aam
add
lock
lret
stos
cmc
test
push
or
out
into
push
sub
outsl
jmp
add
mov
pop
dec
and
stos
xchg
mov
push
mov
or
add
cmp
xlat
xlat
mov
lret
pusha
lret
stos
mov
xor
repnz
inc
mov
jbe
pushf
or
insl
das
in
pop
and
dec
pop
outsl
lds
std
adc
and
sub
dec
int
nop
xchg
fcmovnbe
lcall
mov
or
cmp
loopne
dec
sub
push
pop
sbb
out
jle
loop
cltd
scas
out
dec
out
push
sbb
or
ficoml
mov
and
les
dec
lret
es
cmpsb
inc
and
and
xchg
push
mov
jnp
std
data16
add
push
pop
sub
push
jmp
push
mov
push
adcb
fstpt
loop
cmovl
pop
jno
pop
push
mov
cmc
xchg
stos
rcrl
hlt
adc
dec
xor
push
arpl
dec
inc
mov
fidivrs
pop
enter
and
push
pop
xlat
dec
pop
sbb
add
mov
push
repz
shrb
pop
insb
push
bound
jno
pop
sub
imul
test
rcll
or
mov
sahf
mov
sub
inc
aad
icebp
add
dec
fldcw
subb
mov
icebp
or
mov
xchg
insb
lret
nop
add
leave
add
dec
imul
xchg
dec
pop
jle
rolb
pop
movsb
movsb
stc
jmp
cltd
inc
mov
jp
lcall
pop
test
mov
cmp
jge
or
in
ror
xor
or
dec
mov
cmpsl
repnz
jge
cli
sbb
mov
mov
roll
adc
push
sub
jmp
loope
mov
cld
sub
inc
mov
mov
jecxz
jge
xchg
stos
icebp
mov
cmpsl
push
xchg
pop
popf
and
shll
lods
or
mov
fldt
lods
fisubrl
insb
xor
shrb
std
scas
lock
arpl
xchg
out
je
ja
xchg
ljmp
adc
mov
jle
es
int3
cmp
push
in
imul
xor
repz
dec
inc
xor
ja
pop
xor
out
jb
push
clc
pop
test
push
or
aam
mov
mov
push
ret
std
stc
or
arpl
jmp
lds
mov
ja
cmpsb
pop
out
leave
jge
loope
cmpsl
cli
shlb
test
pop
adcb
push
rolb
push
sbb
negb
andb
cmc
ljmp
sub
adc
in
movsb
les
jns
pusha
push
xlat
push
pop
or
aas
aas
js
pop
enter
lock
cmp
fmuls
inc
test
lcall
add
cmpb
push
scas
xchg
lcall
push
std
psubsw
into
int
sub
and
sub
cmp
jne
and
inc
add
push
and
xchg
shl
cs
out
sub
aam
js
add
pop
lock
out
xcrypt-cfb
cmpsl
and
mov
std
leave
inc
cmc
rol
push
std
push
xor
sub
inc
pop
inc
lods
adc
inc
repz
xchg
mov
insl
out
pop
outsb
inc
pushl
mov
sbb
popf
shrb
cmp
or
dec
shll
xorb
out
int
cmpsl
sub
test
je
cmp
ficomps
test
int
sub
mov
bound
lock
cmp
notb
xchg
xor
mov
inc
dec
inc
das
add
sub
add
loope
mov
loopne
or
jg
jge
mov
xchg
shr
mov
push
mov
jg
lahf
cmp
jne
sub
or
sub
insl
dec
aas
scas
fistl
pop
loop
insl
daa
pushf
add
rcl
mov
or
push
inc
stos
popf
push
lcall
das
sahf
subb
int3
mov
fdivrs
mov
xchg
add
scas
movsl
cmc
out
mov
mov
push
sahf
xchg
push
cmp
push
dec
outsb
cmp
cmp
dec
fadds
xor
enter
movsb
adc
push
ljmp
mov
cmp
js
les
jmp
sbb
sti
sarl
sub
xchg
scas
xchg
lret
sahf
inc
clc
sub
in
pusha
pop
xchg
fimuls
jbe
sbb
insl
cmp
sub
ret
stc
push
adc
cli
sub
in
popf
mov
fnstcw
or
xchg
out
mov
adc
sbb
out
pop
fists
jg
mov
outsb
cmp
pop
pop
pop
adc
mov
scas
cs
jmp
pop
xor
inc
adc
repnz
adc
ds
mov
into
std
sbb
lea
add
and
jae
add
sbb
cwtl
mov
inc
ficoms
fidivl
lahf
mov
test
jbe
lret
fcomps
inc
push
sub
add
mov
inc
push
mov
scas
mov
sbb
mov
inc
movsl
test
bound
arpl
jb
pop
fists
rcll
sbb
xor
cmp
iret
daa
and
daa
bound
mov
push
cs
rorl
or
mov
inc
push
in
int3
jae
add
sub
rcl
xchg
popa
and
mov
or
aas
sbb
inc
lods
inc
sarb
shr
movsb
cmc
int
lock
lea
fld
fs
cwtl
outsl
call
mov
movsb
pop
push
and
enter
rorl
les
arpl
cli
nop
jnp
into
enter
jbe
popf
hlt
pop
adc
addr16
stos
rcrb
cmc
cmp
fwait
mov
sub
add
add
lcall
jae
lcall
mov
inc
stos
adc
sub
in
test
add
jg
jge
mov
pop
add
sub
cwtl
or
inc
outsb
mov
dec
cmp
jp
dec
inc
xchg
jg
imul
aam
icebp
mov
adc
hlt
mov
outsl
in
cmp
aaa
loop
popf
clc
sti
xchg
jnp
bound
stos
rorb
mov
fdivr
sbb
push
mov
xlat
cmp
xorl
adc
pushf
sbb
lods
rol
fmull
mov
pusha
sti
std
je
pop
sub
sub
outsb
ret
out
inc
or
push
sbb
je,pn
loope
scas
insb
clc
lea
mov
push
bound
inc
push
dec
mov
or
fdiv
sbb
aam
fdivrs
cld
cmpsb
in
movsl
or
bound
pop
or
lahf
mov
mov
xor
outsl
jns
xor
jmp
rcrb
fildll
cmp
push
and
movsb
adc
push
dec
mov
mov
in
icebp
xchg
inc
leave
enter
mov
test
xor
jmp
inc
dec
cmp
mov
sbb
xchg
adc
imul
ficoms
or
and
ret
mov
repnz
mov
jle
mov
jmp
es
push
mov
cld
inc
dec
jns
lods
mov
add
push
pop
aam
xor
outsl
lods
cmp
cmp
inc
ljmp
repnz
lret
lret
xor
sbb
aam
push
jg
lcall
xlat
cwtl
pop
jne
and
jle
out
xlat
pop
daa
aam
ss
in
fidivrs
daa
call
push
fistpll
push
daa
iret
lcall
call
test
pop
jo
arpl
push
cmp
out
jne
out
mov
pop
pop
nop
fdivrs
cs
sub
ljmp
xor
dec
mov
xor
dec
mov
mov
les
sub
leave
cmc
out
adc
in
stos
pushf
leave
enter
sbb
lcall
pop
pop
lock
fidivs
or
push
sbb
push
push
pusha
adc
xchg
sbb
ret
mov
lds
push
mov
adc
pop
mov
mov
ljmp
pop
sbb
sub
js
mov
and
fisttps
cmp
call
mov
mov
fucomp
sub
jbe
sarb
mov
jbe
rclb
cmp
imull
jno
sahf
outsb
negb
in
and
mov
stc
mov
inc
add
mov
mov
cmp
loop
cli
xchg
pusha
xor
cli
imul
in
pop
push
in
in
icebp
sub
nop
in
add
gs
in
sahf
xor
push
cmp
adc
cld
or
dec
cmp
fists
dec
lods
xor
pop
movsl
cmc
jge
cmp
xor
mov
sub
sub
out
test
pop
fisubrs
jae
mov
push
inc
insb
xchg
add
aaa
mov
into
loop
cmp
add
inc
mov
pop
push
aaa
jb
jns
xor
add
jmp
sub
sub
ljmp
aad
inc
insb
pop
add
dec
jp
imul
and
push
pop
jno
rcrb
pushf
jno
and
fimull
rcrb
mov
aam
fcoms
ja,pn
pop
mov
fidivrl
and
mov
xchg
mov
mov
mov
dec
dec
addr16
daa
decb
lcall
insl
mov
push
or
mov
inc
std
icebp
inc
loope
sbb
mov
call
xchg
inc
dec
add
aas
cmp
aad
xchg
jle
addr16
lock
jbe
mov
dec
and
lods
jle
inc
hlt
mov
xchg
repnz
stos
test
hlt
div
cmp
repz
rcrl
and
mov
dec
repz
lcall
sub
adc
roll
xchg
and
sbb
xchg
out
aas
rcl
inc
mov
out
sub
jbe
pop
mov
imul
test
inc
arpl
fistpll
or
cmp
enter
push
dec
pop
mov
pushf
cmp
repz
mov
leave
repz
push
inc
and
xchg
dec
sbbl
push
fwait
insl
sysret
inc
xor
leave
addr16
loopne
mov
cltd
iret
popa
mov
int3
xchg
push
rorb
popf
cltd
add
mov
mov
in
jnp
mov
sbb
and
pop
xlat
popf
popf
lahf
cmpsl
pop
ret
pop
fs
mov
cld
or
adcb
inc
notb
or
or
sub
mov
outsb
int3
xor
adc
mov
icebp
cli
mov
xchg
mov
sarl
push
sarb
sub
mov
loop
pop
and
mov
dec
xor
pop
xorl
push
add
setg
and
rorb
mov
js
add
insb
mov
cli
xor
ljmp
push
stos
sub
inc
subb
es
xor
add
xchg
and
mov
std
push
and
sbb
loopne
loopne
repnz
daa
xchg
add
and
push
mov
out
aaa
ja
imul
jmp
incl
sub
xchg
pop
repz
mov
mov
loope
lea
out
and
lretw
stos
inc
ss
test
push
dec
pop
mov
pusha
and
cs
movsl
addr16
push
cli
clc
insb
mov
fcompl
dec
mov
or
ret
imul
les
lds
xor
aad
xchg
or
jle
xchg
xchg
sahf
sub
out
add
push
sbb
pop
jae
mov
mov
in
inc
call
sub
or
or
xchg
pop
jp
outsl
bnd
imul
dec
enter
orb
cli
dec
dec
ss
cmpsb
sub
insb
cmpl
call
stos
mov
push
xchg
fdivr
cmc
xchg
lock
jg
shll
test
adc
cwtl
ret
jo
xchg
cmc
add
in
orb
mov
push
ret
pop
repz
pushf
pop
pop
cmpsb
xchg
scas
dec
inc
inc
mov
mov
hlt
std
repnz
ror
cwtl
fs
out
xor
into
xor
cmp
mov
push
std
and
aaa
dec
fistpl
mov
imul
jmp
add
test
pop
test
xchg
int3
or
movsl
lock
xor
inc
jno
insb
mov
clc
pop
out
cmp
xlat
mov
xchg
xor
cmp
mov
xchg
lods
data16
movsl
jge
in
rcr
inc
sbb
push
lea
lret
mov
mov
mov
arpl
and
test
pop
lods
jnp
xchg
call
push
pushf
xchg
mov
je
shl
sbb
cmp
mov
pop
jns
nop
outsl
lret
nop
gs
ret
xorb
inc
in
mov
loop
out
aas
test
push
pop
lcall
in
jg,pt
sub
testl
outsl
orb
jns
xchg
inc
inc
pushl
gs
and
gs
fldl
push
mov
mov
sbb
push
xor
push
fwait
jne
jbe
and
mov
imul
cmp
movsb
icebp
outsb
inc
adc
or
mov
lahf
jle
mov
into
mov
push
inc
inc
icebp
lret
jne
loop
mov
shrb
fcmovnu
cmp
jbe
xchg
xor
mov
cmp
sub
icebp
adc
mov
mov
pop
push
push
inc
cmp
mov
ljmp
sub
mov
sub
insl
fdivr
pop
scas
xchg
add
subb
ja
xchg
cmc
xchg
pop
jge
in
ret
cld
out
cwtl
adc
xchg
or
lcall
adc
js
pushf
jle
sub
lock
lods
daa
or
add
icebp
shll
jae
iret
mov
dec
pop
sub
inc
loopne
cli
sbb
test
jecxz
mov
les
sbb
mov
imul
imul
sbb
sub
js
fdivrs
adc
jecxz
fwait
push
mov
and
loope
sub
enter
dec
dec
ljmp
and
mov
mov
lds
ret
aas
mov
inc
dec
adc
test
fldl
xchg
and
addl
cmp
ficompl
imul
xor
aam
lcall
add
jle
jp
xor
xor
adc
adc
push
scas
mov
push
add
fbstp
inc
cwtl
rcrb
sub
insb
imul
in
aad
cmpsb
loopne
add
mov
jne
jns
fs
fisubl
aaa
popf
jle
xchg
loope
mov
jecxz
jb
rcll
adc
je
rorb
dec
jb
lret
shlb
xor
and
dec
sub
fwait
jle
js
cwtl
pop
sbb
jecxz
sbbb
mov
stos
insl
pop
jle
mov
sub
pop
scas
shl
and
sbb
popa
add
movsb
ret
pop
aad
fcmovnu
mov
inc
xchg
cmp
xchg
inc
insb
shrl
mov
das
add
xor
push
popa
je
clc
jmp
repz
negl
dec
ss
sub
gs
xor
inc
sub
imul
in
fsubrl
in
push
sti
popa
dec
cmpsb
fisttps
cmpsb
daa
mov
test
aam
test
dec
jmp
add
std
inc
mov
and
dec
cmc
pop
push
loop
orl
sbb
cmp
cltd
cltd
sbb
xor
imul
stos
cli
ljmp
cmp
outsl
mov
jecxz
inc
inc
and
neg
mov
mov
lods
aaa
sub
add
push
add
pusha
mov
mov
ja
test
push
ds
jno
mov
movsl
jge
js
jbe
mov
dec
movsb
rclb
mov
xchg
lods
enter
fnstcw
aam
mov
test
loope
sub
sub
das
xchg
cmp
push
pop
in
dec
aam
subb
sub
sbb
adc
in
mov
in
loopne
cmc
cmp
shrl
mov
cmp
outsl
aas
int3
fcompl
and
leave
cmpsl
stos
fsts
dec
inc
mov
test
pop
push
xchg
add
mov
frstor
inc
les
add
push
je
clc
xor
fcmovu
in
cld
das
out
out
jp
divb
out
inc
mov
outsb
enter
das
lret
sub
imul
xor
or
cmp
addr16
add
xor
mov
cli
xchg
or
in
jbe
cmpb
inc
sub
das
xchg
or
lcall
inc
push
xchg
call
leave
inc
decl
sahf
aaa
mov
fs
cs
sub
push
mov
cmp
jle
xor
clc
pushf
or
xor
mov
aaa
mov
mov
ss
sub
mov
sbb
sar
sub
push
jmp
std
jmp
test
sbb
aaa
xorb
push
or
push
das
pop
repnz
lcall
mov
adc
out
xchg
in
sub
mov
add
daa
or
sub
into
add
sbb
popf
or
cmc
mov
and
mov
fst
dec
adc
adc
or
cmp
mov
dec
ss
dec
es
and
jnp
fstps
dec
cmp
mov
lds
xchg
inc
sbb
xor
stos
cmc
lcall
andb
rcl
lds
imul
push
fcomps
scas
add
and
dec
stos
in
jge
add
cmp
jl
scas
loop
and
scas
pop
jge
int3
test
cld
test
jge
adc
testl
iret
pop
les
mov
loopne
mull
and
cmp
insl
scas
mov
push
shr
fwait
mov
cmp
sub
or
imul
or
jp
xorb
lock
cmp
hlt
mov
nop
jns
fcompl
lret
leave
loop
out
insb
xchg
xchg
cmp
adcl
into
inc
mov
icebp
and
jne
sbb
sbb
mov
test
or
xor
adc
andl
add
popa
xor
xchg
jno
stos
ds
jg
xor
dec
das
inc
inc
loopne
loope
inc
ss
pop
cmp
cmp
cmp
jae
lods
aas
std
ss
adcb
xor
xlat
pusha
js
adc
sub
push
pop
inc
push
in
push
dec
sbb
out
cmpsb
add
repz
push
xor
xchg
mov
je
dec
dec
pop
shll
cwtl
mov
inc
clc
mov
mov
inc
aad
sub
repz
jmp
push
dec
lods
loopne
cli
in
or
add
sub
ss
int3
jno
mulb
je
fsubrs
push
or
or
divb
xchg
lcall
loop
pop
stc
dec
lds
aam
aas
int3
in
jecxz
cmpsb
adc
mov
add
or
aas
adc
in
and
adc
xchg
stc
mov
cmp
add
sub
push
mov
subb
mov
loope,pn
push
push
mov
movsb
jp
lds
or
pop
shrl
popa
cmpsl
and
sub
xor
mov
bound
or
je
xchg
mov
lea
cmp
adc
or
sub
incb
inc
les
push
sar
pop
jg
push
loope
xchg
out
mov
adc
repnz
jb
pop
lds
add
mov
or
mov
mov
aas
lret
cmp
mov
mov
cmp
jl
jecxz
cmc
pushf
adc
and
loopne
push
mov
mov
dec
push
out
sub
insl
dec
add
testl
dec
stos
sub
push
add
mov
clc
mov
pushf
cmpsl
fs
pop
out
xor
ret
hlt
jae
fimull
push
cs
and
js
xor
cmpsl
pop
test
mov
pop
out
inc
push
mov
insb
out
popf
fisubs
aas
xchg
or
incl
cld
and
cs
std
inc
adc
aaa
fistl
or
imul
xchg
scas
ljmp
xlat
ss
push
mov
aam
or
loop
cwtl
pop
xchg
adc
in
push
lret
fs
in
jl
cmpsb
pop
push
loope
subb
test
test
addb
push
ljmp
pop
fstpt
shrl
stos
aad
sub
lods
scas
mov
push
in
scas
and
pop
sbb
add
pop
pop
mov
push
fcmovb
and
loop
in
sbb
frstor
or
push
or
xor
jno
push
cwtl
jnp
arpl
sub
or
outsl
addr16
or
fcmovne
ret
lret
insl
movsb
inc
or
push
bound
shlb
add
mov
cltd
and
jae
test
add
sbb
pushf
aaa
into
xchg
mov
leave
pop
gs
xchg
mov
sbb
rorb
cmp
cmp
sbb
or
jmp
jnp
jp
stos
js
movsl
push
out
xchg
in
fiaddl
scas
rclb
push
fsubs
movsl
push
push
or
xchg
outsl
jns
jne
repz
jno
xor
lods
inc
enter
pop
mov
scas
int
adc
jb
jno
loop
fs
pop
xchg
in
jne
and
bound
imul
shrl
inc
in
test
pop
mov
push
sbb
sub
arpl
dec
scas
and
and
sub
icebp
inc
inc
addr16
inc
xorl
jecxz
push
sarl
sub
imul
icebp
sbb
ja
jl
and
scas
stos
xor
xchg
out
pop
loop
sub
dec
and
out
clc
inc
fldcw
adc
pop
cmc
or
push
xchg
hlt
dec
cmp
mov
pop
cwtl
in
lea
cld
sbb
jp
dec
test
cmovo
jae
mov
or
das
popf
stos
and
push
stc
push
imul
cmp
cmp
rorl
or
jne
in
pop
inc
dec
lret
lods
fstpt
repz
pusha
aas
sbb
pushf
xchg
ss
push
inc
sbb
sbb
pop
nop
fcomi
test
gs
dec
or
push
lret
insb
aam
push
fwait
pop
dec
addr16
inc
mov
fwait
dec
xchg
and
ds
mov
mov
pop
cmc
mov
dec
mov
sbb
fmul
loope
mov
scas
and
out
sub
jne
hlt
sti
push
adc
xlat
hlt
mov
xchg
lcall
pusha
xchg
outsb
pushf
lret
lock
and
fstpl
xchg
mov
stos
outsl
dec
aaa
push
add
jb
inc
aaa
mov
sbb
add
mov
bound
cs
xlat
cmc
jns
sahf
arpl
mov
sub
push
inc
pop
out
out
aam
cmp
test
jmp
mov
repz
xor
scas
or
fwait
sahf
in
sbb
xor
test
and
adc
pusha
xchg
enter
add
shr
arpl
and
dec
rcll
imul
pusha
scas
loop
in
or
addr16
or
and
adc
mov
pop
stos
mov
leave
and
jb
push
inc
fcoml
lahf
pusha
stos
scas
dec
das
xor
leave
jns
fistps
pop
das
push
vshufpd
sbb
test
jecxz
adc
push
adc
arpl
lock
jb
mov
or
mov
movsb
sub
inc
fidivs
cmpsb
pop
mov
mov
insl
lahf
test
push
xor
into
and
mov
popa
shll
enter
or
jae
xor
aad
jns
jae
xchg
fxch
repz
std
out
sti
testb
nop
nop
and
mov
mov
xor
add
jle
arpl
add
rolb
lea
jg
or
or
jge
inc
jp
std
cmpsb
and
xchg
mov
int
loope
enter
cld
add
sbb
mov
xlat
sbb
push
testb
test
das
push
sub
jl
test
jp
lods
in
add
adc
pop
mov
mov
sbb
pop
xchg
push
pop
add
or
jno
rorl
jmp
insl
sub
or
inc
out
push
mov
sar
mov
ds
in
cltd
ss
sbb
mov
int3
or
cmp
mov
mov
xchg
pop
rcll
inc
mov
cltd
jmp
xchg
xor
mov
data16
sub
push
inc
mov
or
sbb
in
adc
push
cmp
mov
jae
outsl
sub
faddl
adc
pop
cwtl
lcall
cmpsl
sbb
stos
aas
or
nop
outsl
dec
popf
idivl
lahf
mov
add
xlat
in
mov
call
test
adc
lcall
in
jp
imul
clc
or
enter
pop
sahf
ljmp
out
out
ja
push
mov
fadds
popa
cmp
mov
sbb
or
sbb
dec
scas
xchg
jo
cmp
fsub
aam
rolb
sar
xchg
push
push
aad
ljmp
outsl
test
xor
or
dec
shrb
out
mov
loopne
imulb
jnp
adc
lcall
std
add
rcl
xlat
scas
lret
pop
repnz
test
int
addb
inc
aad
or
insb
les
fs
ret
rcrl
subl
in
and
jbe
repnz
mov
xor
outsb
mov
xchg
xorl
mov
pop
adc
jno
and
and
inc
mov
cld
stos
xlat
mov
leave
aad
lods
cmc
jp
in
fcomps
jns
and
add
dec
cld
sbb
int3
push
push
stos
xchg
bound
sub
cmpsb
push
movsl
pushf
add
mov
dec
sahf
test
mov
cmp
outsb
push
and
js
xchg
inc
aas
mov
cwtl
inc
push
shlb
cwtl
adcb
push
out
cwtl
dec
add
adc
into
dec
aaa
in
adc
lock
ds
loope
cltd
lret
xchg
and
dec
mov
shrl
hlt
pop
xchg
dec
cmp
sub
push
insb
jb
mov
pop
ljmp
leave
fistpll
mov
inc
loop
xchg
and
xchg
mov
test
mov
cmpsl
push
jne
or
inc
jle
mov
out
jne
dec
sub
mov
sub
mov
pushf
push
sbb
cmp
inc
andb
pop
or
pop
stc
mov
xchg
ja
jo
leave
aam
adc
mov
cwtl
jp
xchg
mov
push
out
sar
inc
jae
jbe
xchg
in
arpl
mov
sbb
dec
dec
pop
test
sub
ljmp
insl
ja
repz
std
ljmp
aam
dec
cmp
lods
pop
cmpsb
mov
cmp
push
lahf
adc
dec
in
push
lcall
sub
xor
mov
mov
add
shrd
insl
fiaddl
insl
jp
sbb
mov
xchg
push
jmp
pop
mov
adc
movsl
pop
push
cmp
int
pop
jbe
push
fs
mov
lret
dec
out
repz
xor
xchg
jbe
push
sub
lret
insb
movsl
cmpsb
jbe
mov
jp
xlat
dec
pop
sbb
hlt
ror
test
testb
fcmovne
xor
clc
mov
ljmp
cmpl
jnp
int3
cwtl
outsb
add
rol
inc
sarb
outsb
jno
shrl
jno
inc
in
push
add
rol
loop
cmpsb
mov
push
arpl
mov
faddl
push
dec
mov
mov
ret
cmovbe
fwait
repnz
jbe
cli
jmp
mov
test
or
xchg
mov
lods
movsb
psllw
or
cmp
fsubs
mov
mov
outsb
sahf
data16
push
fcoml
fcomip
incl
jl
adcl
test
sub
jg
mov
push
inc
hlt
imul
adcb
push
xor
loope
cli
push
int3
lods
stos
inc
mov
dec
mov
pop
aaa
fistpll
mov
sahf
out
xor
stos
leave
push
stos
push
and
add
fbld
inc
push
and
pop
mov
nop
std
out
inc
andb
in
lahf
sub
call
out
test
cwtl
negb
dec
push
leave
out
pop
mov
jns
or
xchg
repz
sbb
pop
sub
aam
xchg
push
xchg
sub
cmp
push
les
push
adc
pop
and
leave
push
loop
fnstsw
test
popl
mov
jl
pusha
popa
bound
rcl
jbe
outsb
dec
test
lcall
xor
mov
xor
insl
sbb
pop
xchg
add
mov
jnp
cmp
pop
pop
pop
jb
jg
lods
rcrb
mov
mov
mov
cmovb
jns
punpckhwd
aam
inc
add
loop
in
mov
orl
mov
addb
aam
and
stos
inc
scas
mov
daa
mov
mov
jns
mov
fcmovu
je
orl
jbe
out
addr16
enter
lret
test
test
in
xor
into
jmp
jge
out
sbb
ret
jbe
mov
lods
adc
dec
sarl
mov
mov
pop
lea
enter
push
jle
and
push
int
aas
int3
push
cwtl
fwait
repz
lret
loop
sahf
or
mov
jecxz
cli
jno
jae
lret
pop
lret
mov
push
mov
stc
inc
cmp
popf
inc
mov
inc
sub
pop
adc
cltd
push
cwtl
in
outsl
cmp
test
pushf
data16
outsl
outsb
lea
push
cmp
mov
sub
ret
xchg
push
cs
dec
cmc
dec
mov
inc
dec
addr16
imul
and
inc
gs
and
shr
out
cmp
xor
xchg
in
faddl
rcll
mov
xchg
mov
inc
sti
mov
flds
push
cmpb
xlat
inc
pop
rol
imull
push
xor
popf
popa
test
fscale
dec
mov
xchg
stos
aam
cmp
jbe
fisubs
cmc
mov
lret
dec
loope
pop
mov
call
js
add
jo
mov
fsubs
aam
push
mov
jno
and
cli
rcrl
bound
sti
loopne
sbb
xchg
mov
out
adcb
lods
loopne
sbb
imul
and
push
or
sbb
lret
inc
repnz
mov
add
stos
jge
incb
adc
mov
in
leave
push
mov
mov
mov
push
xchg
test
pop
cmp
out
test
pop
ret
adc
sub
xorb
sub
mov
or
mov
lahf
or
xor
mov
repz
jg
or
xchg
jno
push
ljmp
jb
cs
cs
push
mov
mov
push
loope
fisubs
adc
imull
int3
test
jle
mov
sbb
scas
aad
xchg
fs
xchg
jns
sub
js
inc
ffreep
out
jecxz
dec
popa
push
int3
pop
mov
repnz
rcll
pusha
inc
add
sub
sub
shlb
popl
imul
in
xchg
xor
pop
ficoml
bound
sbb
sahf
ret
or
test
ficomps
xabort
xor
push
push
into
mov
mov
mov
stos
sub
movsl
and
or
and
dec
add
pop
or
dec
or
ficompl
out
je
lods
sahf
loope
dec
push
xchg
loop
movsl
lret
jp
xchg
mov
mov
in
and
cmp
jmp
mov
in
adc
pop
or
and
outsl
dec
popf
aam
cmp
fisttpll
sbb
les
pop
mov
pop
js
push
mov
or
xor
aam
hlt
sbb
rcll
cmpsb
sub
push
push
cld
or
pop
pop
lods
test
rcrb
fldl
ljmp
repnz
mov
mov
out
arpl
cmp
cmp
in
dec
inc
jmp
pop
popf
push
jge
repnz
scas
mov
jns
mov
mov
sub
ret
sahf
rorl
lods
jp
imul
jecxz
rorb
js
jo
test
iret
and
push
aam
mov
pop
leave
fstpt
dec
.byte
dec
sbb
addb
inc
pusha
and
leave
fucom
lahf
mov
out
jp
mulb
adc
sbb
sbb
test
mov
pusha
xchg
mov
repz
xor
add
int3
test
popf
and
outsl
xchg
push
and
outsb
sarl
xor
sub
dec
push
fisubrl
je
and
movsl
enter
xchg
add
roll
jmp
scas
cs
data16
adc
mov
ret
adc
imul
mov
out
ss
mov
imul
out
loop
popf
js
xchg
and
rcll
shrb
loope
subb
stos
jnp
push
stos
mov
cli
or
push
pop
cwtl
roll
aam
push
mov
and
xlat
shll
addr16
call
push
test
cmpsl
test
cmp
jo
pop
sbbl
aad
test
ss
sub
fcoms
mov
in
arpl
dec
and
sub
sbb
inc
jmp
mov
cmp
je
stos
out
push
add
shll
sub
xor
or
mov
sti
push
mov
clc
lea
jbe
mov
stc
mov
lcall
mov
cs
inc
mov
xchg
mov
cli
lahf
fcomps
pop
flds
xchg
push
jnp
push
add
add
dec
sub
xlat
cmp
adc
pop
jnp
pop
jb
xor
jmp
lahf
lods
sub
enter
ja
lret
xchg
sub
add
fwait
cmp
cmpsb
cmpsl
jns
lods
imul
cmp
js
xchg
add
mov
pop
lods
leave
mov
int
fists
mov
daa
imul
mov
sbbb
gs
movsb
sbb
xor
adc
pmullw
in
sub
js
inc
xchg
fisttpl
clc
mov
mov
nop
bound
aaa
xchg
jge
in
imul
xchg
cs
ds
mov
imul
ret
jne
cwtl
fistl
lret
and
xor
inc
and
icebp
xchg
or
in
jbe
jge
outsb
test
add
in
inc
adc
lds
sub
ret
xchg
or
push
js
cld
movsl
js
mov
pop
cmp
rcr
cmp
mov
jmp
cmpsb
out
inc
sbb
jns
push
je
and
sarb
push
pop
xor
daa
arpl
cmp
out
movsb
repz
mov
push
jge
cmp
or
and
push
jl
scas
arpl
xchg
subb
loopne
shl
add
notb
push
jmp
mov
push
rorb
test
add
cmp
mov
jnp
notl
sub
pmulhuw
sbb
adcb
sbb
rcll
or
lods
mov
arpl
sub
push
lcall
mov
and
push
jns
or
push
xchg
jle
mov
inc
pop
jne
lods
daa
or
pop
or
fisubrs
xor
or
push
es
pop
mov
mov
bound
ret
cld
cmp
incl
sub
shlb
xlat
mov
aas
imul
vcvttps2dq
ds
jnp
jae
inc
or
iret
inc
mov
sahf
adc
mov
fsts
push
ret
jae
test
js
and
sar
pop
notl
sbb
pop
push
inc
sti
test
shll
sub
imul
pop
loop
pop
push
cmp
call
push
and
pushf
jmp
jne
add
sub
sub
lcall
dec
xchg
ret
insb
jb
adc
and
push
aam
shrb
into
in
rorb
aas
fwait
push
stos
jp
push
xchg
mov
test
inc
inc
inc
std
cmpsl
dec
inc
hlt
add
test
sub
ja
mov
out
sub
lahf
xor
shll
outsl
insb
repz
ret
aas
in
sub
inc
jne
clc
dec
cli
inc
popa
clc
out
jb
xor
cmp
jb
inc
out
in
stos
dec
xor
cmp
add
pop
or
mov
sbb
jle
sbb
fs
sub
clc
mov
xor
rep
shll
push
pop
mov
ret
aam
or
cs
and
sbb
test
out
movsl
mov
sbb
ljmp
jle
add
arpl
lds
push
cmp
sub
jl
inc
or
clc
mov
push
out
lahf
loopne
in
test
mov
je
fisubl
enter
jns
or
jne
clc
inc
inc
cmc
dec
mov
cmp
adc
cmp
push
adc
int3
les
inc
push
pop
popf
mov
call
divb
int3
inc
dec
dec
cmpsb
subl
out
je
cmp
mov
out
xchg
sub
data16
mov
push
lds
sti
scas
nop
dec
push
add
inc
jl
xchg
pop
mov
jecxz
insb
push
add
lock
movsl
sbb
rcrb
js
roll
and
mov
and
jmp
and
dec
jns
cld
inc
testb
out
xor
inc
push
cs
jb
mov
add
jb
lods
pop
mov
bound
and
jne
mov
ds
aam
aaa
and
sub
mov
xor
cmpsl
pop
push
adc
mov
leave
fs
pop
mov
cmp
xchg
dec
mov
lods
xchg
negb
push
bound
pop
or
sbb
xor
ret
and
fucomi
mov
sub
fisttpl
mov
xorl
sub
aad
je
push
jp
in
mov
mov
pop
stc
ja
mov
sti
out
jl
repnz
pushf
mov
mov
imul
jnp
push
add
sub
inc
pop
call
jae
iret
stos
imul
stos
push
ret
xlat
icebp
aas
sub
insl
cmp
add
cmc
and
or
aam
mov
std
pop
mov
lock
inc
jnp
jle
adc
mov
outsb
push
std
jbe
cmc
xchg
mov
xor
jne
je
aas
xlat
das
pop
cmp
and
xor
dec
imul
pop
pop
adc
dec
in
dec
outsl
mov
cmpsl
add
or
jp
sbb
mov
out
sub
mov
adcb
les
lds
insb
movsl
adc
adc
push
mov
aam
fisttps
in
fidivrl
in
mov
call
cmp
dec
add
sub
add
fsubs
loope
roll
xor
inc
int3
and
xchg
stos
jae
fistpll
fcmovnbe
push
jg
add
andb
repnz
pop
cmp
lods
das
cwtl
cmp
imul
popf
push
jne
fidivrl
div
xchg
mov
sbb
scas
mov
aaa
pop
les
sbb
shll
jmp
mov
sbbb
adc
frndint
push
dec
call
mov
adc
xor
xor
adc
mov
push
mov
or
xor
push
xchg
jnp
adcb
cmp
sbbl
insl
addr16
inc
shll
sub
xchg
cmp
sbb
repz
push
jmp
stos
pop
adc
leave
int
pop
pushf
mov
jb
mov
stc
outsl
rcll
movsl
mov
inc
xchg
jo
xorb
push
xchg
mov
popa
add
ret
push
inc
or
push
movsl
bound
cs
xchg
call
dec
sub
inc
aaa
not
mov
mov
cmp
mov
mov
and
lds
int3
roll
leave
cmc
mov
in
imul
loopne
mov
and
cs
push
and
shlb
adc
sub
push
add
je
ljmp
lret
mov
mov
mov
push
cmpsb
imul
inc
sub
arpl
out
dec
jmp
scas
and
jg
in
ds
and
repz
test
lock
popl
std
adc
loope
mov
int
fiaddl
inc
shll
cmc
pop
fwait
mov
test
cmpsl
mov
lock
outsb
jo
mov
mov
ljmp
cmp
jno
or
roll
insl
dec
fisubrl
jo
andl
pop
jecxz
xchg
out
xchg
into
into
enter
repz
pop
xor
enter
cmpl
sub
push
andb
push
insb
mov
iret
repnz
xor
jge
xchg
pop
ljmp
mov
out
xchg
shrb
cltd
jno
lock
popf
insb
iret
out
fisttps
jge
jle
je
sbb
shrl
xchg
lret
fdivrs
push
mov
cmc
dec
stc
repnz
pop
loopne
fucomip
mov
and
shl
add
push
ret
xchg
ja
pop
loope
adc
test
out
pop
addl
mov
out
inc
fstps
inc
push
inc
sbb
stos
xor
data16
inc
loop
cmp
imul
add
repz
mov
imul
dec
dec
or
inc
xor
rol
push
icebp
test
call
mov
pop
sbb
clc
pop
and
rol
popa
cli
and
add
mov
hlt
or
hlt
cmp
sub
loop
xor
sbb
xchg
in
mov
mov
jo
xchg
mov
xchg
ret
push
gs
frstor
jge
cmovp
pop
test
or
or
jns
stos
dec
dec
cltd
imul
xchg
sub
adcl
sti
push
cmpsl
js
push
mov
lea
cmp
jae
call
adc
xor
outsb
add
xchg
ss
push
fnsave
xlat
or
push
lret
test
jecxz
cmpsb
jno
adc
cmp
xorl
xor
shll
dec
push
and
mov
cli
arpl
insb
push
xchg
les
sub
add
fwait
mov
and
in
dec
xlat
test
dec
dec
and
out
push
sbb
mov
xchg
push
adc
std
pop
or
ja
int
leave
sbb
out
nop
mov
.byte
add
dec
add
dec
add
xor
adc
dec
add
push
inc
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
and
add
push
add
add
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
pusha
cmpsl
cmp
add
add
or
add
lock
subb
add
inc
add
orb
sbbb
sbbb
add
or
orb
add
dec
or
cmpb
add
bound
add
jb
add
jle
add
add
add
add
add
xor
addb
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
cwtl
or
orb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
js
add
nop
add
sub
add
test
add
rolb
out
sldt
fadds
sub
add
lock
xor
add
or
add
and
add
cmp
add
push
add
add
push
sldt
addb
add
sldt
mov
add
enter
stc
sldt
loopne
add
clc
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
mov
add
rorb
cmpb
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
push
add
call
jg
add
pop
add
sbb
add
xor
add
dec
pop
add
pusha
pop
add
pusha
cmpsl
cmp
add
add
add
add
fmull
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
pop
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
insl
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
lock
or
xor
add
and
or
xor
add
pop
sahf
or
xor
add
mov
add
shlb
add
mov
add
sub
add
pop
movsb
or
rolb
add
sub
or
in
add
adc
add
loopne
or
rolb
add
mov
or
rolb
add
subb
add
or
rolb
add
and
add
lock
add
add
add
mov
add
add
add
add
add
or
test
add
and
or
push
add
add
add
add
add
or
in
add
add
add
add
mov
add
add
add
add
add
add
sbb
or
insb
add
add
add
mov
or
enter
push
fimull
add
add
add
fisttpl
add
add
add
fisttps
add
add
add
loopne
add
add
add
loope
add
add
add
loop
add
add
pusha
in
add
add
insb
jmp
add
lock
or
mov
add
mov
add
add
add
add
cmc
or
in
add
add
testb
sub
add
add
or
mov
add
add
add
add
add
dec
add
les
add
or
or
nop
add
add
add
je
or
adc
add
mov
or
adc
add
pushf
or
adc
add
mov
or
adc
add
les
or
adc
add
fmuls
or
adc
add
in
or
adc
add
add
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
push
add
inc
add
dec
add
or
add
inc
add
dec
add
cmp
cmp
cmp
cmp
cmp
cmp
or
dec
add
dec
add
dec
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
inc
add
jb
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
inc
add
outsb
add
outsl
add
add
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
imul
add
add
insb
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
inc
aaa
inc
inc
inc
ss
aaa
inc
xor
cmp
inc
cmp
xor
xor
inc
xor
xor
xor
inc
inc
inc
inc
inc
inc
xor
xor
ss
inc
cmp
inc
cmp
inc
inc
inc
xor
inc
xor
xor
inc
cmp
xor
inc
inc
inc
xor
xor
inc
xor
xor
xor
xor
xor
inc
ss
aaa
xor
xor
inc
inc
inc
xor
inc
inc
inc
inc
xor
inc
cmp
xor
inc
xor
xor
xor
inc
cmp
xor
xor
inc
inc
xor
inc
inc
xor
xor
inc
xor
inc
xor
inc
xor
xor
xor
cmp
xor
inc
xor
inc
xor
aaa
xor
cmp
xor
inc
inc
aaa
inc
ss
inc
inc
xor
xor
inc
inc
xor
xor
inc
xor
xor
inc
cmp
cmp
xor
xor
xor
inc
inc
cmp
inc
xor
inc
xor
ss
cmp
inc
xor
inc
cmp
inc
xor
inc
inc
inc
aaa
cmp
xor
xor
inc
inc
inc
xor
inc
xor
cmp
inc
inc
xor
inc
cmp
aaa
ss
inc
xor
xor
aaa
inc
xor
cmp
inc
cmp
xor
inc
xor
inc
cmp
ss
xor
inc
inc
cmp
inc
inc
cmp
inc
aaa
xor
inc
cmp
inc
xor
cmp
inc
aaa
inc
xor
cmp
inc
cmp
push
inc
xor
pop
dec
dec
cmp
cmp
cmp
or
popa
imul
gs
add
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
add
sahf
mov
jle
dec
dec
jb
inc
insb
imul
addr16
inc
insb
imul
je
add
add
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
dec
outsl
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
inc
pop
jo
inc
inc
dec
dec
or
jo
jo
outsl
fs
insl
push
imul
arpl
or
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
xor
add
adc
sub
movsb
repz
push
or
mov
xorl
test
imul
out
mov
ljmp
sbb
add
xchg
ficompl
and
sbb
inc
sub
dec
add
in
rorl
fdivl
inc
inc
mov
mov
mov
xor
and
ret
inc
jl
push
sbb
test
sbb
ljmp
pop
adc
call
mov
push
mov
bound
xor
ja
xchg
xorb
push
sbb
lret
cmc
pop
loop
and
pop
jp
push
lods
cmp
fdivrl
mov
repnz
mov
pop
mov
stos
pop
sbb
mov
and
mov
cmp
imul
shrl
dec
fs
mov
add
inc
aad
xchg
mov
loope
ja
aaa
lret
cmp
xor
mov
add
scas
lcall
push
ror
jge
push
test
pop
in
mov
popf
std
je
mov
rcrb
xor
rcrl
dec
ret
sbb
mov
jbe
mov
or
jl
mov
and
cmp
popa
cmpsl
gs
pop
jge
dec
cs
or
sbb
sbb
sub
mov
xchg
std
imul
loop
roll
push
sbb
loop
sbb
mov
test
int
cmp
adc
cli
imul
add
sub
fwait
scas
xor
imul
rolb
into
mov
out
jg
popf
test
mov
dec
jb
and
movsb
xor
dec
jg
cltd
xchg
xchg
xchg
in
mov
int3
cmp
loopne
or
push
sub
hlt
out
add
cltd
je
dec
mov
lods
enter
dec
in
out
es
movsb
xchg
negb
pop
ljmp
jo
jmp
adc
jecxz
mov
loope
mov
sub
nop
rclb
sbb
insb
es
adc
cmpsl
ds
add
fs
mov
push
push
cltd
aaa
mov
or
addb
icebp
or
jmp
dec
xchg
dec
mov
jns
mov
popf
imull
fnstcw
daa
loop
and
push
pushf
into
leave
mov
repnz
and
cmp
aas
pusha
shl
sub
mov
mov
mov
inc
mov
push
jmp
mov
inc
jns
iret
add
movsb
and
inc
mov
in
aam
and
shrb
adc
or
mov
pop
fs
out
outsl
push
inc
inc
int
pushf
int3
repz
cmpsb
shr
xchg
test
adc
sbb
popa
hlt
mov
test
sub
or
xor
mov
hlt
or
mov
jne
push
icebp
test
xchg
push
shlb
popf
andl
lahf
shl
or
cmpsb
arpl
cmp
xlat
mov
push
imul
mov
and
cld
dec
lds
jo
test
push
pop
lock
mov
and
dec
push
pop
mov
sbb
mov
cmp
pop
int3
sahf
out
lcall
mov
sarb
cmpb
inc
dec
mov
adc
jae
push
insb
ds
aam
jg
and
scas
sbb
pop
stos
insl
out
sub
push
push
es
mov
mov
movsb
cwtl
xchg
leave
testl
push
sub
pop
int
xchg
imul
push
xor
jae
dec
or
pop
cmpsb
add
fwait
popa
rorb
mov
loopne
sub
push
push
cld
dec
xchg
cld
dec
shll
pop
xchg
cmp
cmpb
clc
ljmp
mov
insl
dec
imul
pop
xor
mov
int3
ret
loope
pop
fmuls
fcoml
out
adc
mov
jo
mov
inc
faddl
pop
pop
aam
push
jle
jb
dec
shll
inc
setne
ja
lds
andl
jo
aam
sub
mov
mov
in
lret
jne
mov
pop
stos
mov
cmpsb
js
cmp
insb
mov
ficomps
mov
lret
inc
xor
xchg
scas
sbb
inc
out
lret
mov
mov
mov
push
nop
cmpsb
out
in
jbe
insb
adc
sahf
mov
pop
ret
hlt
fucomp
test
cmp
pusha
mov
cmp
mull
mov
jmp
gs
jge
cmpb
notb
cld
dec
and
das
imul
push
addl
lods
and
aam
clc
mov
sbb
testb
pop
jne
test
push
rcl
jbe
sub
std
movsl
mov
fcmovbe
xlat
or
adc
out
cmpsl
sub
movsl
ror
cmp
inc
fdivs
sbb
in
xchg
mov
adc
lahf
jl
lock
xor
mov
push
or
cmp
addb
xchg
mov
push
cs
fidivs
or
ret
cmp
outsl
xor
loopne
jns
fucom
ljmp
mov
xor
jmp
or
inc
inc
lahf
adc
fwait
and
rorb
ret
es
test
imulb
test
scas
mov
xchg
aam
inc
inc
xchg
sub
sub
jmp
mov
add
and
mov
dec
loopne
or
nop
shr
jg
in
mov
or
xor
popf
out
scas
pusha
mov
fs
push
sbb
add
stc
add
pushf
mov
loopne
add
mov
sti
out
xchg
push
das
mov
outsb
ret
mov
and
push
add
xchg
hlt
pop
jge
imul
adc
jb
cld
mov
mov
pop
inc
or
mov
sub
mov
xor
call
stc
pusha
jle
cmpsb
rcll
andl
cmpsl
and
movsb
clc
and
sbb
xor
pop
add
insb
xchg
inc
jmp
pushf
arpl
push
cltd
push
sub
mov
fdivrs
call
sbb
orl
push
dec
xchg
out
int
fsts
mov
mov
out
fcmovb
push
sbb
jno
and
mov
jbe
dec
and
push
roll
lahf
add
std
adc
or
pop
jo
xchg
movsl
push
add
and
jp
hlt
in
mov
dec
sub
sbbb
or
test
or
mov
aam
pushf
sahf
dec
pop
les
sbb
xor
pop
cmpsl
negb
xchg
mov
or
aam
jge
adc
xchg
mov
dec
xor
cs
jne
or
insl
xchg
and
movb
mov
and
xchg
insb
jp
or
cmc
mov
xchg
in
jae
arpl
jle
sar
daa
dec
or
rcrb
movsb
leave
outsb
test
push
test
push
push
xchg
out
imul
scas
and
fwait
mov
sbb
xchg
lret
pop
enter
sub
or
or
cld
mov
loope
enter
inc
hlt
add
and
movsl
ret
pop
xlat
lods
push
out
xor
shrb
loop
xchg
jbe
arpl
sbb
push
xor
lret
push
jb
xchg
insb
loope
inc
out
mov
push
push
fistpl
ljmp
mov
fisttpll
mov
and
scas
add
dec
mov
adc
mov
je
mov
cld
xchg
in
mov
xchg
cmp
or
ja
cwtl
jnp
mov
mov
xor
dec
add
out
xchg
loopne
xchg
jmp
insl
cmp
je
ret
mov
add
add
outsl
or
dec
xchg
in
les
jl
in
lods
imul
adc
out
fcompp
gs
adc
decl
outsl
pop
cmpsl
outsb
sub
mov
add
ja
test
sbb
lret
mov
cmc
arpl
cld
xor
bound
incb
aad
repnz
and
xor
mov
scas
jb
sbb
mov
daa
and
fbld
repnz
les
jge
not
inc
aad
sarl
addr16
lahf
xor
mov
sub
dec
cmpsb
cli
rolb
movsl
test
shll
pop
out
ja
sbb
mov
cmpsb
popf
sub
std
xchg
test
xchg
data16
cmp
lock
test
cmc
test
jmp
shlb
inc
popa
imul
inc
jno,pn
pop
fwait
pop
stc
js
sub
fildll
ljmp
push
jp
fisubrs
test
shll
pop
lret
add
and
test
sti
call
ja
daa
stos
sbb
in
mov
dec
inc
rcrl
cld
out
jne
outsl
fs
in
mov
mov
stc
fwait
inc
stos
mov
xor
jns
daa
mov
cwtl
pop
add
lcall
mov
cmp
add
dec
jb
dec
sbb
mov
sbb
movsl
mov
jnp
xlat
adc
std
push
sbb
loope
sub
cmp
in
cmp
hlt
jb
and
das
cld
out
cmpsl
jnp
notl
cld
mov
stos
add
pop
adc
sub
lods
pop
cmc
out
sbb
sbb
sub
mov
mov
lret
repz
out
sbb
icebp
out
jmp
call
aas
cmpsl
popa
stos
xchg
xchg
decl
cwtl
movsb
xor
loop
pushf
add
xor
inc
scas
sub
enter
xor
aam
les
pushf
flds
test
shr
mov
loop
sbb
and
enter
mov
pop
xchg
icebp
std
cltd
jb
sbb
jae
cld
lahf
gs
test
lods
add
test
leave
jge
js
aas
mov
inc
std
sbb
fisubl
push
scas
mov
loopne
sub
push
cmp
outsl
fnstcw
push
iret
int
sub
or
cmpsb
push
dec
aam
cmpsl
stos
test
xor
enter
sar
add
push
ja
mov
pop
sub
jle
test
lock
decb
outsl
incl
xchg
jmp
popa
std
pop
xor
and
daa
and
mov
add
push
cmpsb
cmpsb
lods
mov
dec
call
push
sbb
pop
mov
push
add
fwait
inc
sbb
sub
dec
mov
add
in
mov
cs
mov
push
push
and
push
mov
out
lret
out
jae
fdivs
fisttpll
les
fnstsw
iret
mov
aas
outsl
jmp
icebp
cmp
adc
inc
pop
mov
shl
sub
adc
int
aaa
mov
push
xor
jno
es
in
loop
xchg
adc
mov
push
fwait
mov
inc
test
icebp
mov
fwait
add
mov
or
add
pop
sub
xchg
sub
pop
stc
es
aas
mov
mov
rcrb
mov
push
mov
pop
push
push
cmp
lods
mov
inc
mov
inc
mov
mov
add
test
sub
stos
call
movsb
push
std
xchg
test
add
and
movsb
lock
sub
push
test
outsb
dec
mov
repnz
sub
xchg
sbbl
orb
push
out
mov
xchg
aas
es
not
or
pop
xchg
xlat
addr16
js
out
lahf
aad
xor
scas
lcall
cmc
outsl
inc
sahf
in
shll
lcall
push
dec
mov
jl
idivl
and
push
mov
fiadds
jae
sbbl
and
push
insb
xlat
adcb
cmp
xchg
hlt
dec
cmp
xchg
ret
test
stc
xchg
mov
xorb
rol
cld
jae
adc
repz
sub
adc
iret
lods
xchg
mov
pop
out
xor
repz
in
xchg
and
iret
adc
dec
push
push
das
out
insl
pop
pop
jnp
scas
testb
add
mov
mov
and
mov
and
test
pop
mov
lods
jmp
lds
and
lret
inc
js
iret
sbb
aaa
pop
stos
jno
xchg
and
scas
xor
and
dec
xchg
movsl
sahf
mov
xchg
dec
test
adc
pushf
stos
bound
call
lahf
xchg
aad
dec
in
inc
lock
ret
jo
stos
mov
das
mov
stos
imul
jl
pushf
out
or
xor
js
jp
mov
mov
cli
sub
pause
mov
jno
inc
outsb
mov
int
cmp
pop
lods
xlat
gs
sub
push
adc
lds
out
mov
inc
push
movsb
mov
int3
test
mov
stc
in
jg
mov
cmp
or
stc
es
adc
mov
loopne
sub
pop
push
out
fisubrs
inc
add
in
or
jmp
mov
out
test
sub
testl
jl
je
jnp
push
xlat
jbe
dec
test
daa
inc
adc
outsb
je
lock
fisubrs
filds
inc
cmp
xor
lret
jbe
inc
jns
es
jbe
jnp
shlb
push
inc
inc
popf
rorl
fidivrs
xchg
repnz
sbb
jg
cltd
les
test
sahf
lods
sub
lds
divl
pop
movsl
sub
cmp
rcll
std
mov
push
push
mov
inc
inc
sub
sahf
cwtl
call
xor
leave
stos
mov
mov
iret
bound
pop
imul
enter
rcl
mov
mov
rol
mov
push
jns
fsubs
lds
pop
mov
jecxz
xchg
popf
sbbb
add
out
mov
push
inc
dec
loopne
int3
mov
cli
xchg
cli
sbb
outsl
add
xor
xchg
movsb
stc
adc
addr16
loope
in
dec
push
mov
xchg
xor
ljmp
push
shlb
jns
mov
or
in
out
mov
cmp
roll
mov
or
mov
mov
out
or
cmp
loope
leave
cmpsb
xor
mov
movsl
out
pop
shll
aam
mov
push
pop
dec
or
hlt
push
push
mov
jecxz
bound
pusha
xchg
ret
int
rcl
js
fwait
negl
xchg
pop
maxps
fdivl
loop
dec
pusha
sbb
in
dec
sub
mov
outsb
xchg
push
in
fbstp
push
xlat
movsb
jnp
adc
int3
pusha
sbb
das
mov
lea
or
cmp
mov
inc
jo
or
mov
and
call
js
cmp
rcll
outsl
pop
std
adc
aam
mov
shrl
mov
adc
lods
cmpsl
inc
aam
push
mov
hlt
mov
mov
jo
leave
pop
mov
mov
sub
sbb
hlt
jne
cwtl
fimull
out
out
into
mov
fimull
adcb
inc
mov
dec
push
sbb
xor
test
in
inc
jnp
sub
adc
sahf
mov
mov
push
add
shrb
sub
dec
sbb
shll
adc
and
nop
int3
mov
call
sbb
mov
and
and
push
dec
jae
dec
insl
pushf
sub
push
or
cld
loop
gs
das
cmc
cmp
push
scas
sub
cmpsl
fldenv
stos
js
dec
dec
ret
icebp
imul
dec
jo
mov
adc
sub
ret
or
lea
mov
mov
rcrb
cmp
mov
pop
ljmp
inc
ds
lea
gs
shrb
fwait
add
jae
sub
sarl
mov
out
pop
add
ds
test
add
orl
mov
jnp
shll
pop
pop
sbb
test
out
insb
sub
mov
in
mov
push
adc
rorb
cld
adc
arpl
jae
or
dec
cs
sbb
bound
aam
inc
dec
pop
loopne
jge
cs
pushf
or
and
aam
int
mov
sub
icebp
dec
xor
mov
imul
insl
aam
mull
sbb
and
mov
in
xor
inc
int3
jne
xlat
inc
shl
dec
xchg
ret
jp
ja
adcb
adc
out
cld
ficoml
fisttpll
mov
mov
xor
mov
shl
pop
cld
sub
or
fdivr
xor
add
sbb
pop
inc
pushf
cli
pop
sub
xchg
stc
mulb
outsb
inc
mov
shrb
xor
push
pusha
roll
ret
mov
ret
dec
hlt
adc
xchg
jge
cmp
jmp
pushf
insb
mov
lcall
or
mov
push
lods
lea
leave
sub
test
and
cmp
adc
lahf
dec
shrb
mov
movsl
mov
mov
push
addr16
das
loope
jo
fsubp
and
pushf
inc
mov
cmp
ds
jl
dec
scas
sbb
call
pop
mov
mov
stc
arpl
ret
jp
rcl
push
aas
je
mov
sub
mov
sahf
and
inc
dec
fucomip
mov
imul
xchg
lock
imul
cs
push
xbegin
push
movsb
lods
popa
push
aad
pop
cltd
and
cmp
adc
lea
into
call
xchg
mov
inc
cld
jnp
push
negb
add
jle
negl
fnsave
pop
aaa
or
enter
jns
daa
mov
dec
mov
std
ja
insb
lcall
ds
or
mov
test
jp
fists
fcomps
pop
lcall
add
mov
pop
test
leave
mov
mov
cli
lahf
inc
xor
jb
paddd
fld
adc
mov
nop
shr
or
shll
jns
xorl
sbb
hlt
jp
xor
pop
dec
lea
jb
lods
rolb
push
mov
sub
jno
push
aas
js
mov
sub
lods
adc
cmp
lock
push
stc
insb
sbb
mov
outsb
xchg
mov
sbb
add
ret
bound
push
sbb
cmp
aam
je
mov
jl
pop
imul
inc
not
xchg
cmp
nop
mov
dec
arpl
and
add
jno
leave
out
scas
mull
inc
cmc
les
movsl
cltd
and
shlb
sub
xlat
rclb
mov
sub
xor
add
out
std
sbb
or
mov
jle
add
push
lods
rcrb
inc
pop
add
lret
aad
nop
mov
xlat
loopne
sub
ret
mov
imul
jmp
pop
test
dec
cmpsl
jb
pop
jne
pop
sbb
ret
lcall
repz
ret
add
pusha
rcrb
add
insb
and
sbb
pusha
test
mov
daa
xchg
mov
or
sbbl
fidivl
cwtl
mov
xor
sub
xchg
sbb
push
mov
jnp
scas
outsb
adc
xor
xchg
mov
out
pop
mov
ljmp
js
les
pop
sahf
add
push
clc
cmp
jg
push
incb
in
stos
dec
popa
mov
dec
push
js
xchg
fisubrl
popa
scas
xchg
out
adcl
inc
push
mov
adc
pop
shl
lods
cwtl
cmp
jno
repnz
mov
xor
imul
ds
movsl
jae
imull
notl
into
sahf
inc
pusha
clc
sbb
insl
xlat
into
xchg
aad
and
cmp
cmp
inc
fs
ja
cmp
rcr
pop
push
xor
cmp
imul
outsb
ljmp
pop
pop
fists
out
stos
jnp
movsb
push
lods
xor
in
fbld
inc
jbe
inc
ss
pusha
scas
inc
add
leave
int
fs
jbe
nop
cwtl
mov
jge
das
fwait
pop
sbb
push
and
pusha
lret
ret
xor
sub
and
mov
addr16
mov
pop
sbb
cmp
push
push
dec
xor
popf
jbe
fcompl
cmc
stos
js
in
popf
pop
adc
push
mov
push
ljmp
lods
mov
fwait
sarb
sbb
std
sarb
cmp
sti
dec
xchg
lds
or
outsb
mov
mov
jb
cmp
mov
sbb
out
jge
and
andl
test
xchg
inc
push
sar
mov
repnz
popa
lods
mov
mov
loop
cmp
incl
or
xchg
stos
sub
inc
int
xlat
es
xor
add
arpl
test
jns
loope
fsts
xlat
push
addr16
or
jno
lods
cmp
mov
mov
sahf
mov
int3
aaa
rolb
pop
push
and
jo
lret
inc
pushf
pop
push
adcb
pop
or
aaa
icebp
rcrl
push
in
mov
add
adc
cmp
add
mov
ss
mov
push
ds
imull
js
mov
cltd
xor
jmp
out
push
loop
outsb
aad
push
pop
inc
aas
rorl
mov
fsts
cmp
or
jmp
mov
add
xlat
shl
inc
dec
push
outsb
pop
xor
xchg
nop
adc
in
cmp
lods
std
push
clc
add
fadds
cwtl
dec
jno
add
mov
in
stc
int
push
jns
or
dec
inc
enter
outsl
and
mov
push
mov
xchg
inc
inc
or
sar
mov
push
repz
aaa
arpl
dec
insl
adc
push
jg
das
xor
adc
pop
aaa
arpl
jge
or
cmp
pop
lcall
adc
pop
cmp
loope
push
popf
lods
mov
jne
cmp
jge
jle
outsl
inc
push
repnz
pop
push
push
addr16
loop
dec
mov
pop
pop
in
push
push
or
mov
mov
add
stos
outsl
mov
push
lods
testb
and
clc
mov
cld
jbe
pop
dec
jg
dec
test
jp
lock
jb
fld
imul
mov
inc
cmp
mov
dec
xor
test
clc
and
xor
stc
imul
cmpl
stos
imul
andb
push
xchg
fs
pop
adc
cld
inc
test
mov
inc
fwait
push
cmp
pmullw
movsb
xlat
cmp
cld
push
repz
pop
xchg
xor
out
gs
push
xchg
stos
mov
pop
fdivs
negl
leave
adc
jg
shll
pushl
inc
sbb
lcall
addb
inc
mov
out
insl
dec
jo
push
xor
dec
jo
jmp
cmpl
ss
lods
add
cli
int3
add
inc
jecxz
cmpsl
ret
testb
mov
std
dec
andl
xor
lea
addr16
cmpsb
fsubr
inc
loope
or
mov
jns
jo
sub
xchg
xor
bound
out
rclb
jbe
imul
cmp
je
add
cmpsb
hlt
fisubs
push
mov
leave
movsb
cmc
js
ds
hlt
nop
out
lock
icebp
inc
orl
xchg
xchg
test
cmp
lods
xor
jns
nop
sti
pop
lcall
sahf
test
iret
dec
inc
lahf
clc
mov
xchg
mov
test
add
xor
add
cs
js
sti
adc
out
ficoms
ss
out
or
adc
pop
imul
xchg
xor
inc
xchg
arpl
cli
dec
xor
mov
pop
xor
and
loop
mov
and
cmp
pop
xchg
inc
hlt
sub
and
or
push
adc
xchg
jg
std
xlat
mov
mov
and
add
jbe
jo
addr16
movlps
mov
jae
mov
push
scas
jmp
mov
loope
pop
lahf
push
lcall
jg
ljmp
dec
popf
mov
jne
std
jno
pop
sti
fwait
cltd
sub
xor
dec
data16
and
imulb
fdivp
repnz
xor
add
pusha
sub
mov
loopne
leave
inc
jo
add
mov
jo
jns
fidivl
subb
lret
xchg
cmp
sahf
jge
inc
mov
sbb
push
xchg
mov
xor
and
pop
pop
lock
js
fiaddl
testl
push
mov
xor
push
jmp
dec
lods
movsb
fcompl
lods
mov
adc
in
jl
movl
sbb
or
sub
mov
sbb
mov
adc
jnp
cld
and
lret
dec
push
hlt
std
mov
mov
mov
and
leave
xchg
test
and
neg
push
pushf
cld
and
adc
cmp
dec
mov
mov
mov
rol
mov
sub
mov
js
loop
cli
out
jbe
push
insb
and
jg
xchg
cmpl
sarb
push
in
mulb
lahf
lahf
mov
add
pop
movsb
and
test
cmp
das
xlat
sbb
mov
leave
xchg
repz
outsb
inc
imul
dec
push
popa
roll
push
popl
lcall
or
fimuls
test
add
nop
cs
mov
daa
int3
rcrl
mov
stc
push
cmp
pop
push
in
sbb
ficomps
idiv
stc
push
mov
movsl
in
push
in
lret
mov
in
jns
push
mov
mov
mov
mov
mov
mov
call
ja
adc
cltd
push
jae
inc
ljmp
inc
lea
push
mov
and
fnsave
add
movsb
std
pop
mov
movsb
sub
lock
fdivs
or
jl
push
cs
fcompl
jns
mov
mov
enter
mov
out
pop
adc
pop
notl
sbb
jmp
cmp
popa
stos
cmpl
cmp
stc
mov
fidivs
scas
insb
ljmp
les
in
jecxz
mov
jl
out
sub
mov
mov
sti
inc
pop
add
push
notl
xchg
adc
xor
call
enter
sub
rclb
jmp
cmpl
xor
xchg
jmp
ffreep
filds
daa
ficoms
cmp
inc
add
push
rcr
lds
imul
mov
andb
push
cmpsl
inc
ret
mov
inc
mov
and
fs
mov
out
inc
mov
repnz
sbb
cmp
dec
test
repz
jo
push
mov
in
jns
mov
cltd
popa
idiv
pop
clc
and
push
aas
jno
mov
sti
lods
xor
xchg
jns
mov
cmp
je
cmp
fwait
sbb
pop
arpl
xchg
movsl
jge
inc
cmp
popf
and
lret
pop
sub
mov
sub
jb
push
jecxz
dec
adc
mov
sysenter
lds
mov
or
subb
jb
cmp
sbb
addr16
aaa
jle
jns
xor
movsl
pushf
daa
mov
out
sbb
dec
push
xorl
xor
cmpsb
vpaddq
pop
stc
mov
mov
leave
enter
pushf
add
andl
inc
fs
inc
xor
outsb
push
in
xchg
sbb
sub
mov
pop
cltd
popa
jnp
rorl
adc
fnstenv
mov
and
xchg
and
rclb
xlat
jno
shr
cmpsb
stos
jnp
pop
add
xchg
out
pusha
cmp
std
cmp
or
jb
xchg
mov
stos
insl
das
fcoml
pop
mov
jp
sbb
out
test
or
je
outsl
clc
mov
inc
push
mov
and
sbbl
cli
movsb
push
cmp
xlat
push
push
mov
jbe
pushf
sub
mov
sbb
movsb
sub
xor
or
stos
lock
andl
movsl
int
push
out
add
cmp
mov
mov
sbb
xchg
push
negb
nop
cli
add
pop
jp
xchg
and
in
mov
jbe
ja
fbstp
rcl
cmp
push
divl
pop
mov
inc
cmp
sub
sub
movsl
cmc
lret
test
ljmp
sbbb
add
sub
nop
es
dec
or
cs
movsl
pop
stos
sarb
dec
pop
in
insl
data16
mov
adc
push
add
incl
jmp
stc
cli
push
cmp
movsl
mov
xor
pop
or
fld
rolb
push
test
cmp
mov
mov
inc
gs
xchg
testl
sbb
pop
mov
push
ret
xchg
js
xor
inc
push
sbb
push
aad
fsubrl
in
rorb
fdecstp
lods
leave
add
and
test
sbb
mov
dec
call
sarb
mov
int
adc
subb
xchg
mov
lods
sbb
or
fwait
sub
lea
insl
je
stos
andl
dec
jae
and
movsl
inc
sbb
jp
test
inc
pop
push
ret
jbe
cmp
fdivl
xor
mov
or
into
xchg
pop
cmp
mov
daa
stos
push
cltd
cld
mov
or
bound
in
push
push
aaa
aam
jp
mov
arpl
dec
pop
lds
mov
jecxz
xchg
je
push
outsb
ja
sub
mov
jnp
loop
xchg
seto
jb
stos
or
or
adcb
call
int
pop
sbb
gs
sbb
fs
xor
dec
gs
mov
in
xorb
fcompl
stos
cmp
sbb
xchg
jg
cltd
clc
imul
in
mov
popf
mov
lods
mov
in
mov
xchg
stos
cs
fisubl
add
cld
rcrb
popf
jmp
out
push
add
cmp
push
xchg
jmp
xor
xchg
rolb
dec
sub
rcl
aam
xchg
mov
js
fs
dec
jb
inc
fcoms
xchg
xor
imul
cmp
sahf
pop
les
into
out
sbb
adc
jns
ret
jmp
ficoms
or
lods
and
loopne
inc
mov
iret
mov
daa
sbb
aam
test
cltd
xchg
in
inc
ss
dec
and
dec
dec
aam
js
pop
mov
aaa
and
inc
shl
fidivrs
xchg
js
jp
or
jns
ds
cmp
dec
jg
repnz
and
ja
sub
mov
mov
data16
jae
xchg
jno
lret
mov
ficoms
sti
push
xchg
or
ja
rolb
cmp
imul
sub
pop
or
loope
jg
divl
insb
pusha
mov
inc
pop
cli
hlt
testb
lahf
ds
lahf
aaa
rcl
push
std
test
iret
jecxz
inc
in
jmp
aas
rcl
or
out
adc
lds
and
add
inc
pusha
test
dec
and
push
sbb
cmpsb
adc
add
inc
xor
lea
cmp
leave
es
mov
out
ja
rep
add
test
outsl
loopne
daa
dec
ljmp
movsb
cmp
scas
push
push
loopne
mov
ror
ljmp
and
push
or
jmp
sbb
sbb
pop
xchg
dec
sub
inc
dec
pop
or
mov
and
pop
cs
xchg
movsb
fists
xchg
sub
mov
leave
cmp
mov
inc
scas
push
cltd
fcoms
sbb
pop
xor
xlat
add
adc
aas
cltd
jmp
bound
out
mov
and
shl
rolb
test
mov
dec
lock
add
lret
push
ret
xchg
and
push
bound
xchg
xor
out
aam
fwait
add
xchg
adc
push
mov
test
push
dec
nop
shll
pop
aam
ss
cmp
or
out
aad
daa
or
movsl
cmp
shll
outsb
aam
mov
ror
bound
inc
inc
or
das
pop
data16
push
cmp
nop
xchg
shlb
mov
mov
jno
fsub
xchg
icebp
cli
xorl
xchg
push
cltd
mov
sbb
cld
popf
and
jns
lds
jnp
xchg
and
inc
leave
leave
sub
push
aad
jnp
pop
push
les
adc
xchg
movsl
sub
mov
jge
in
pushf
arpl
pop
cmp
xor
icebp
inc
lods
sbb
push
xchg
inc
xor
jbe
fisubrl
cmp
cmp
sub
and
mov
lret
mov
in
mov
or
xchg
movsl
imul
data16
shr
adc
mov
repnz
stos
lret
outsb
inc
lahf
fldt
test
jecxz
inc
mov
lods
jbe
sbb
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
je
adc
loopne
pop
aas
or
push
mov
pop
sub
add
jp
sub
movzwl
pushl
sub
pop
jmp
add
and
pushf
movsl
jp
xor
mov
xor
xor
or
push
jmp
xchg
div
fs
xchg
ror
into
out
cld
test
add
xchg
xor
sub
fs
jne
adc
adc
stc
jne
mov
cmp
jne
jmp
pusha
sbb
mov
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
cmp
xchg
sbb
dec
les
aaa
dec
xchg
lods
subb
fs
pop
pop
outsb
leave
jns
mov
jl
aaa
dec
and
pop
pop
xchg
sbb
mov
adc
jp
jae
mov
int
lock
out
into
lods
stc
ret
filds
sbb
jb,pt
xor
es
dec
int3
inc
mov
repz
pop
cmpsl
lahf
inc
out
adc
fdivs
pop
xor
pop
dec
mov
jge
jb
cltd
lods
in
scas
adc
aaa
ret
fimuls
idiv
and
or
cld
and
mov
in
lcall
arpl
dec
ljmp
or
addr16
iret
aad
lret
mov
mov
mov
or
pop
orb
ljmp
sbb
rorl
xlat
pop
xchg
sub
mov
inc
mov
inc
xlat
aas
loop
jbe
aam
pop
jge
cmp
movsbl
push
pushl
xchg
mov
or
jle
dec
ljmp
mov
daa
or
pop
push
ljmp
cmpsl
rorl
jno
ljmp
iret
mov
in
xchg
xchg
popa
xchg
mov
push
add
push
aas
in
sub
mov
aaa
jne
sub
das
fnstsw
push
fisttps
push
jl
cmp
js
gs
lahf
add
mov
insl
sbb
sahf
lock
xchg
add
mov
jmp
lea
rolb
ret
adc
dec
sub
js
mov
js
mov
addr16
icebp
sbb
xchg
mov
aam
fistpll
sbb
and
mov
mov
pop
inc
xchg
test
mov
inc
movsl
mov
cmp
jmp
mov
stc
xchg
jmp
adc
cmp
out
jne
inc
add
xor
adc
mov
add
mov
imul
lret
cltd
push
jae
aad
jp
xor
mov
mov
or
add
mov
hlt
adc
ja
sub
fiaddl
cld
cwtl
data16
xlat
cltd
xchg
lea
lock
fildl
xor
subl
push
fildll
in
or
xor
aas
lock
iret
pop
fstpl
xorb
mov
popa
inc
mov
data16
xor
lea
lock
sbb
jae
jg
loop
and
xor
jo
mov
cltd
popa
cmc
add
jge
lock
imul
xchg
adc
dec
iret
dec
push
stos
add
fidivs
ja
aaa
sub
adc
js
mov
js
jecxz
out
inc
pop
add
adc
dec
fmull
repz
adc
jg
into
repnz
test
and
dec
in
push
jmp
icebp
inc
adc
fisubrs
imull
arpl
clc
inc
adc
mov
mov
aaa
mov
sbb
inc
adc
sub
clc
inc
adc
mov
test
inc
adc
out
ds
xlat
inc
sub
and
outsl
xor
cmc
inc
adc
clc
bound
scas
cmp
fsubp
int3
loop
out
inc
mov
push
adc
scas
mull
enter
inc
add
fs
dec
adc
ds
adc
pop
iret
sub
adc
mov
sub
dec
imul
inc
iret
sub
repnz
repnz
adc
jle
int
out
inc
imul
out
mov
mov
out
mov
imul
je
sub
dec
jne
inc
adc
in
cmpl
push
hlt
inc
fimuls
lock
adc
hlt
fimuls
repnz
adc
xor
fs
adc
xor
push
add
adc
je
int3
sub
mov
jns
mov
jno
inc
adc
imul
fidivrs
scas
arpl
cmp
iret
xchg
pop
sub
pop
call
push
sub
fimuls
lock
adc
jbe
cs
out
inc
mov
fbstp
sub
int
je
int3
sub
or
xchg
out
inc
dec
notl
mov
cmp
inc
js
mov
inc
fimuls
lock
adc
xor
fs
dec
adc
out
aas
adc
jbe
lret
xchg
int
imul
sbb
adc
push
adc
out
inc
pop
xor
pop
xor
push
cld
sti
mov
add
cmc
or
ja
dec
dec
mov
push
and
pop
das
aam
fists
ret
add
test
dec
dec
mov
push
and
out
das
aam
fists
ret
add
xchg
mov
mov
push
rcrl
or
popa
ja
test
dec
dec
mov
push
and
cmp
repz
lea
dec
ret
push
in
cwtl
out
inc
adc
or
popa
ja
test
dec
dec
mov
push
and
pop
inc
jmp
cwtl
out
inc
adc
or
popa
ja
pushf
je
fs
dec
mov
push
and
pop
sbb
xchg
mov
pop
jg
mov
pop
push
pop
dec
xchg
fdivp
xor
inc
adc
jl
or
xchg
les
int
or
popa
ja
mov
adc
or
inc
add
xchg
mov
fs
mov
dec
jge
cmp
mov
pop
xor
jle
popw
adc
xchg
in
mov
fdivrp
or
popa
mov
push
std
add
mov
andl
call
fwait
xchg
xor
and
mov
sub
imul
jp
inc
adc
repz
insl
sbb
add
jecxz
dec
add
adc
out
add
dec
fdivr
adc
out
inc
fs
adc
push
adc
out
decb
testl
push
rcr
rep
icebp
inc
adc
ss
outsl
jbe
push
push
pop
bound
sub
push
push
inc
addr16
sahf
pop
idivl
outsl
sarb
movsl
pop
sarb
icebp
lahf
mov
xchg
push
mov
inc
iret
pop
loope
roll
scas
cmp
cmc
mov
lret
das
cmp
mov
mov
in
call
or
pop
cwtl
or
sbb
aam
sbb
sub
inc
adc
out
inc
adc
out
inc
adc
testl
cmc
inc
adc
hlt
inc
adc
out
add
adc
dec
pop
adc
out
inc
adc
out
inc
adc
mov
loop
dec
lahf
add
cmp
inc
inc
pusha
cmp
mov
shll
repnz
and
fisttpll
lods
xchg
les
pop
fnstsw
enter
dec
inc
cwtl
add
hlt
sub
into
bound
and
mov
aad
xchg
adc
je
sub
or
sar
jae
adc
xor
cmp
out
popa
mov
push
cmp
mov
dec
push
inc
push
enter
dec
inc
mov
mov
and
sarb
stos
ret
mov
inc
insl
dec
inc
adc
mov
lahf
ss
push
jp
cmp
mov
sahf
and
lods
cmp
xchg
xor
aaa
mov
jnp
imulb
ljmp
js
xchg
push
or
or
pop
fucomi
cs
xor
fsubs
mov
iret
shlb
in
in
in
ljmp
das
sbb
sarl
inc
dec
arpl
clc
int3
xchg
cli
pop
mov
enter
mov
into
insl
xchg
and
inc
cmp
shl
push
fs
dec
sub
add
cwtl
test
inc
pushf
aam
pop
fxch
test
and
push
jno
jne
mov
mov
shr
jmp
push
mov
sbb
or
pop
sbb
stos
cmp
xchg
xchg
hlt
adc
push
cmp
adc
add
dec
mov
daa
pusha
jno
pop
xor
and
daa
mov
ds
fldcw
aad
test
pop
lods
xchg
jae
das
mov
xchg
out
mov
mov
movsb
popl
and
outsb
iret
insb
outsb
mov
or
push
sbb
insb
dec
mov
cmpsl
imul
loope
hlt
sti
sub
jp
or
pop
xor
or
sar
shl
xchg
fs
notb
mov
mov
or
subb
lods
xor
push
cmpsl
cmp
test
push
sbb
pop
mov
ret
es
repnz
loopne
pop
int3
inc
test
push
sti
and
pop
addr16
fldl
and
xor
fstl
int3
and
ret
rcr
cmp
push
repz
clc
cmp
xchg
add
xor
imul
jb
rcrl
les
arpl
jecxz
shll
stc
fs
add
insl
sbb
jge
mov
adcb
fdivrs
in
xor
or
dec
in
xor
xchg
enter
sti
stc
js
sbb
push
xor
addr16
add
add
and
push
mov
add
and
add
add
add
rorb
rorb
xor
adc
dec
add
dec
or
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
or
hlt
dec
or
adc
or
cmovg
push
dec
or
pop
dec
or
sub
add
dec
or
xor
dec
or
inc
dec
or
das
dec
or
dec
dec
or
aaa
dec
or
pop
dec
or
aas
dec
or
addr16
or
inc
dec
or
je
or
dec
dec
or
orl
add
dec
or
cwtl
dec
or
addr16
or
movsl
dec
or
outsl
dec
or
mov
or
ja
or
mov
dec
or
les
add
add
add
dec
or
dec
or
fmull
add
add
add
dec
or
lahf
dec
or
cmc
dec
or
cmpsl
dec
or
add
add
add
add
imul
insb
add
outsb
insl
insl
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
imul
fs
insb
add
jb
imul
add
xor
xor
fs
insb
add
jb
fs
insb
add
gs
insb
xor
cs
insb
add
outsb
imul
insb
add
outsl
arpl
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
dec
or
add
add
fmuls
add
add
add
dec
or
add
add
sti
dec
or
add
add
or
add
add
add
or
add
add
xor
add
add
add
or
add
add
pop
push
or
add
add
outsl
push
or
add
add
adcl
add
add
add
add
mov
or
add
add
push
or
add
add
fistl
add
add
add
push
or
add
add
sti
push
or
add
add
or
add
add
add
push
or
add
add
add
push
outsb
jb
popa
insb
imul
arpl
add
jbe
dec
jne
push
jb
je
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jo
jb
inc
jbe
outsb
je
add
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
gs
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
je
gs
outsl
popa
jb
push
jns
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
inc
dec
outsl
arpl
add
push
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
je
jb
gs
gs
fs
imul
inc
inc
insb
gs
outsb
jne
add
add
popa
jb
push
gs
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
fldl
add
cli
pop
inc
and
add
add
imulb
xchg
lods
add
and
ret
adc
jnp
int
clc
cwtd
push
loop
push
pop
fldcw
movsb
subb
jb
std
jl
push
jb
mov
dec
jmp
or
xor
mov
pop
shll
jg
daa
sbb
outsl
mov
jp
lret
inc
or
or
xlat
cmp
in
push
and
and
inc
push
cwtl
sub
mov
inc
mov
sub
fdivrl
ja
repz
aam
mov
pcmpgtw
lock
mov
mov
lea
aad
les
stos
cmp
ljmp
adc
int3
je
mov
scas
aam
push
dec
jo
sub
das
mov
icebp
shll
lock
ret
lret
icebp
outsl
push
jge
outsb
int3
test
mov
xchg
inc
xlat
jg
out
xorb
mov
scas
sbb
ja
imul
or
out
leave
cli
shr
outsb
ffreep
adc
inc
mov
push
pop
mov
imul
dec
and
repz
loopne
mov
fdivp
sub
outsb
movsb
incl
sbb
push
mov
mov
jmp
lret
lock
addr16
and
xchg
mov
adc
or
enter
clc
jae
lahf
gs
dec
jo
cmc
mov
outsb
cmp
xchg
sbb
shr
mov
popa
push
sub
mov
sub
mov
or
fadds
pop
aam
fisubrl
icebp
push
mov
test
out
adc
call
xchg
cltd
fs
insl
cli
jmp
lcall
shrb
pop
out
lods
in
hlt
pop
aam
xchg
jo
stc
add
sub
into
stos
in
push
into
inc
inc
push
push
xchg
jb
mov
into
cmp
push
ficomps
imul
sub
cwtl
nop
lods
in
fs
repz
adc
into
and
aas
pop
je
ret
or
mov
inc
xlat
rcrl
pop
pop
adc
bound
flds
pop
lcall
dec
push
rolb
xchg
ljmp
nop
movsl
mov
jbe
imul
jns
jge
ficoms
call
inc
outsl
push
mov
ja
movsb
jg,pn
fnstsw
jg
orps
aaa
loope
fstp
mov
pop
js
orb
mov
dec
lods
lods
cmp
add
jecxz
push
sbb
jp
loope
mov
mov
sahf
mov
add
mov
lcall
stos
insb
pushf
cmp
and
pop
shrb
dec
mov
cmp
cmc
jno
cmp
pop
ret
jae
and
lds
bswap
cltd
loopne
xchg
add
addb
inc
lea
adc
adc
sbb
inc
cltd
mov
cmp
insb
jnp
and
xchg
in
inc
mov
clc
xchg
mov
daa
mov
ret
xchg
shll
jmp
je
cli
hlt
daa
cli
add
les
xchg
push
icebp
out
notb
adc
enter
xor
mul
or
test
addr16
mov
adc
jmp
adc
xor
sbb
imul
test
jo
jg
cs
daa
pop
movsb
ret
or
mov
cli
and
push
filds
cmp
mov
mov
xlat
jne
push
jne
out
or
lret
sub
adc
push
ljmp
add
or
dec
cmp
pop
jecxz
int
and
adc
cmp
inc
and
dec
dec
push
cmp
cmp
cmp
ljmp
mov
adc
pusha
lea
xchg
jo
cmp
int
adc
sbb
in
and
mov
mov
jecxz
xorl
push
insb
sbb
mov
orb
dec
mov
idiv
jmp
inc
ljmp
jo
and
jle
sahf
jle
sub
mov
jns
or
mov
mov
xor
push
xor
imul
mov
inc
ss
and
cld
jp
shll
mov
in
addr16
jp
mov
cmc
fs
dec
arpl
mov
add
bound
test
sub
stos
shl
fistl
and
adcb
mov
out
xchg
idivb
out
int3
push
add
ds
xor
mov
jl
in
cmpsl
jae
pop
and
popf
add
push
inc
mov
mov
or
or
sub
ja
jge
sahf
subl
inc
lea
les
push
jmp
lret
sub
sub
jns
xchg
pop
pop
adc
fnstsw
test
mov
dec
pusha
ljmp
sub
pop
fisubrl
jb
addr16
pushf
lods
fstl
fdivl
pop
lods
jle
clc
stc
fdivrs
or
test
mov
xor
inc
ret
lds
fldl
jp
mov
xchg
jmp
mov
and
mov
sbb
or
push
aaa
hlt
lods
aam
stos
mov
out
pushf
sub
dec
pop
in
mov
sbb
lods
jl
xor
cmp
ficomps
cmp
xor
jmp
mov
sbb
out
push
fdivrs
lret
cmp
xor
popf
es
test
shlb
and
sbb
adc
aad
xchg
lcall
in
popa
int
test
push
je
pop
es
pop
or
subb
movsb
or
ret
jl
push
loopne
push
out
movhps
pop
stos
fwait
pop
add
mov
mov
cmp
dec
push
mov
in
or
mov
sub
cmp
or
jns
out
call
rorl
mov
adc
push
ljmp
ret
fnstenv
dec
adc
add
cwtl
es
pushf
sub
movl
loope
mov
jno
adc
lahf
adc
test
xor
pop
mov
jmp
adc
aas
aaa
aaa
push
jno
push
mov
sub
mov
lock
icebp
mov
in
sub
dec
jge
mov
scas
addb
lahf
neg
sbb
mov
xchg
xchg
leave
scas
dec
testl
xor
lret
in
adc
dec
mov
sti
dec
out
sti
mov
test
jmp
clc
xchg
mov
jo,pn
mov
arpl
sbb
cltd
dec
stos
aas
repnz
enter
fnstsw
sti
xchg
pushf
sbb
fstl
adc
imul
scas
jl
or
test
jns
or
mov
mov
mov
push
pop
mov
nop
jnp
or
sub
stos
and
sub
scas
mov
sub
xor
sub
ss
jmp
add
add
mov
mov
out
cmpl
mov
xchg
wrmsr
xchg
push
fwait
scas
sub
push
movsl
sbb
lods
sbb
push
sbb
push
push
cmp
mov
inc
add
fwait
in
push
das
sub
adc
or
out
outsb
ret
inc
jp
fisttpll
out
loop
xchg
jmp
into
dec
outsl
sub
cmp
mov
push
xor
mov
daa
ret
das
mov
loopne
pop
adc
mov
in
fsubs
cmp
pop
dec
incl
lahf
mov
loope
sub
out
pop
xchg
cs
daa
lret
cmpl
xor
das
mov
mov
cmpb
xchg
fdivrl
dec
les
outsb
jbe
jns
stc
push
cltd
rol
or
aas
jle
mov
dec
rcll
xor
loopne
mov
push
rclb
jmp
in
pop
gs
and
jp
add
pop
jl
into
lret
adc
xchg
int
add
xor
adc
jne
cmp
cmc
sarb
inc
fdivs
pop
cs
fsubl
sbb
and
xor
subl
cmp
dec
xor
adcl
pop
cmp
pusha
add
ja
das
and
push
loop
pop
xlat
mov
insb
frstor
cmpsl
mov
ss
push
inc
mov
fs
jbe
cld
inc
icebp
mov
xchg
adc
stos
notl
mov
in
popf
jecxz
pop
fs
jmp
in
sahf
mov
or
mov
lods
in
mov
sarb
cmp
ds
mov
cli
idivb
iret
into
sbb
xor
xchg
inc
pop
pop
ss
addl
mov
mov
xor
insl
mov
xchg
sub
loop
cmpsb
stc
sbb
les
arpl
adc
jmp
pop
dec
std
aaa
jbe
inc
sub
mov
xchg
cmp
fwait
iret
lret
lock
push
stos
in
cmp
xor
mov
sarl
loope
mov
and
in
sbb
sub
arpl
in
lcall
cmpl
push
pop
test
stos
out
imul
xor
jp
inc
cmp
iret
std
cmpsb
adc
imul
in
xchg
gs
or
adc
push
sbb
sub
push
es
jns
mov
mov
or
push
repz
sbb
in
adc
dec
incb
jbe
sbb
push
jle
es
cltd
cmp
inc
push
aaa
jg
jecxz
mov
push
scas
push
sub
add
dec
pusha
mov
lds
enter
xor
push
adc
cld
cs
jecxz
sub
jp
mov
ficoms
out
and
arpl
push
jae
movsl
add
pop
dec
and
adc
add
cs
and
outsl
mov
lret
mov
sar
mov
jl
popf
out
mov
mov
rcpps
push
std
jo
cwtl
mov
je
mov
out
outsl
fnstenv
movsb
jl
xchg
add
mov
or
clc
repz
jbe
aam
rcrl
out
imul
adc
dec
jge
std
xor
mov
clc
adc
test
nop
xchg
ds
and
jle
adc
push
or
or
lock
loopne
mov
xor
jns
push
pop
pop
cmp
out
idivb
ficompl
or
pushf
or
and
sbb
clc
cmp
jo
sub
lahf
inc
push
or
mov
stos
icebp
mov
pusha
jo
cs
outsl
pop
push
sub
dec
addr16
mov
mov
movsb
dec
push
leave
lahf
aad
push
xor
and
aam
enter
mov
add
pop
inc
lahf
js
push
push
xchg
adc
out
xlat
int3
or
and
int
pop
shrb
xor
jle
adc
enter
mov
sub
adc
pop
or
daa
stos
xor
mov
sbb
cli
mov
inc
lea
mov
xchg
sub
mov
ja
mov
or
cwtl
cltd
adc
dec
xor
cmp
pushf
xor
add
std
push
push
sbb
outsb
adcb
xchg
mov
push
pusha
in
and
aaa
dec
and
out
mov
xor
inc
mov
lock
cmp
mov
xor
mov
and
sahf
jns
or
stos
xchg
leave
xchg
sub
pop
rorl
dec
aad
cmpsb
fdivr
mov
rcrl
into
popf
adc
mov
and
lret
stc
fwait
mov
in
mov
add
dec
add
enter
jp
and
xchg
xor
push
adc
hlt
les
pop
adc
mov
mov
adc
add
and
aad
pop
and
dec
aaa
add
divb
adc
sti
lahf
in
jbe
nop
je
and
popa
inc
lea
mov
test
mov
fsubrs
idivl
mov
movsl
fidivrs
and
aas
jo
push
leave
mov
in
inc
push
and
xchg
cmp
fiadds
pushf
sahf
out
cmp
jle
inc
dec
in
fld
or
xor
repnz
bswap
pop
cmc
in
imul
adc
je
les
push
shlb
lea
jno
aas
sub
das
and
aas
xchg
xchg
lds
imul
dec
mov
mov
roll
insl
sbb
or
addr16
mov
fistps
cmp
loop
jmp
out
xlat
and
adc
jecxz
mov
xor
mov
xchg
cmp
push
inc
sub
mov
call
sbb
sti
sarb
jno
mov
into
adc
mov
lret
ret
rorl
and
ret
enter
jne
pop
inc
or
in
inc
leave
dec
or
mov
jbe
in
fs
inc
jmp
and
ss
test
addr16
out
sahf
push
popl
inc
xchg
cs
cs
testb
lcall
stos
scas
hlt
ja
push
sub
adc
pop
push
icebp
stos
or
rclb
mov
lret
or
imul
pop
cmp
repnz
outsb
xchg
jbe
or
outsl
mov
dec
stc
fstp
rclb
push
adc
xchg
iret
xlat
inc
ljmp
lods
lret
into
mov
push
out
stos
stos
xchg
xlat
or
pop
pushf
stos
inc
sub
or
sbb
mov
jg
cmp
or
push
or
in
test
lds
mov
aad
jp
mov
push
int3
adc
lea
push
dec
stc
iret
and
pop
pop
stc
hlt
jae
rcl
push
out
test
or
push
fwait
pop
mov
mov
cli
or
inc
fwait
xchg
pop
jae
test
mov
xchg
xchg
es
mov
hlt
jmp
hlt
add
fisubl
loop
mov
imul
lea
inc
rcrl
lods
leave
and
pop
imul
adc
imul
loop
pop
pushf
push
and
popf
push
and
push
js
hlt
jg
addr16
testl
sbb
xor
aaa
or
test
or
and
loope
int3
dec
int3
adc
lock
cmc
jbe
mov
testl
mov
int
test
fidivl
xlat
inc
lea
stc
push
jnp
xchg
test
sahf
lods
adc
scas
ffreep
mov
dec
xchg
in
je
push
daa
gs
sub
fsubs
notb
jns
dec
cs
aas
scas
add
outsl
ret
sub
lock
xor
inc
popf
dec
int3
xor
xor
mov
mov
popa
add
cltd
cltd
stc
inc
in
mov
mov
imul
test
cmp
out
ss
out
add
push
mov
xchg
fildll
push
and
std
push
adc
xchg
xor
push
es
leave
mov
push
fisubl
or
dec
rorl
daa
and
jmp
cmp
push
stos
mov
inc
rcrb
and
iret
cmp
int3
gs
testl
mov
jg
orb
addr16
es
dec
sbb
lret
movsb
into
sbb
cmpsl
icebp
stos
jb
xor
scas
push
sbb
push
pop
add
cmp
clc
subl
sbb
and
aas
or
adc
fsubl
jle
push
fnsave
fs
xor
pop
sbb
in
outsl
push
loopne
xor
and
cltd
out
fs
lret
mov
es
lcall
stc
sbb
inc
mov
or
jo
popa
mov
push
push
test
mov
negb
inc
lods
fistps
xor
test
xchg
cwtl
xor
xchg
cmp
xchg
shll
aam
add
cmpb
mov
add
stc
mov
rcl
jnp
clc
and
sbb
call
lret
sub
pop
mov
inc
out
jbe
or
push
xchg
sbb
lea
mov
pop
push
mov
inc
rcr
repnz
fldt
mov
sahf
test
inc
xchg
cmp
addr16
cmp
add
jo
stos
out
sub
cmp
sub
mov
aaa
push
xchg
jecxz
pop
push
daa
sbb
dec
push
xchg
dec
cli
test
xchg
dec
dec
and
popa
mov
movsb
push
dec
dec
jbe
jnp
lods
ja
mov
mov
stos
add
stos
xor
dec
fnstenv
movsb
out
fs
jg
push
jne
lea
cmp
sbb
dec
cs
fdivrs
divl
cmpsb
mov
cmp
movsl
js
outsl
lods
adc
mov
shll
sbb
xchg
sbb
std
insl
aas
icebp
push
movsl
mov
xor
mov
testl
mov
mov
lds
push
subb
inc
and
jo
mov
divb
fmuls
aas
mov
sbb
fstps
in
loop
insb
push
into
sub
or
cmpsb
sti
sbb
mov
es
loope
inc
sub
adc
adc
jo
jl
xchg
in
adc
dec
imul
pop
mov
nop
stos
loop
std
mov
stc
sbb
mov
inc
add
idiv
adc
aad
sbb
into
in
scas
jno
push
out
inc
mov
lock
jle
adc
mov
or
jno
xor
inc
jnp
or
stc
or
clc
shrl
mov
fstps
cwtl
jne
and
mov
jno
xchg
insl
pop
test
addr16
test
bound
add
push
loop
ret
mov
cmp
mov
xor
mov
push
jbe
iret
icebp
roll
add
fidivs
fstpt
jmp
gs
pop
mov
imul
cmp
stc
cmp
sbb
jg
or
lea
push
jl
adc
scas
test
mov
aam
mov
cwtl
dec
mov
or
loopne
aaa
imul
ss
scas
hlt
insl
arpl
sub
mov
mov
push
es
ret
push
cli
mov
hlt
add
repnz
out
nop
sti
ret
divl
jns
dec
mov
pusha
dec
adc
xlat
push
cmp
mov
out
out
arpl
fstl
enter
xchg
xor
addr16
movsb
sub
cltd
pop
stos
pop
iret
popl
fisubl
dec
dec
and
and
fadds
clc
push
jp
scas
pop
and
push
stos
ret
into
sbb
mov
xchg
sbb
cld
sbb
sahf
mov
inc
jp
gs
or
and
imul
test
push
mov
cmp
xchg
pop
push
cmp
out
xor
mov
ja
push
outsl
cmp
sub
mov
daa
in
arpl
add
push
mov
xchg
shrl
test
mov
cmp
mov
fistps
cmp
loop
xchg
adc
mov
mov
pop
cmpsl
cld
in
xchg
push
and
push
mov
cmove
jno
pop
lret
lock
mov
mov
dec
cmc
std
fs
in
xchg
jnp
adc
dec
les
popa
dec
shlb
jne
in
shrl
ret
pop
lea
clc
mov
xchg
dec
xlat
lea
clc
fs
jne
add
mov
ss
fnop
inc
push
mov
cmp
dec
dec
add
mov
add
insb
fdivl
rorb
cld
fucomip
pop
push
sti
iret
push
loop
in
mov
sbb
push
bound
cmp
dec
inc
mov
gs
arpl
shll
jns
out
in
xor
imul
bnd
sbb
rcl
cmp
ds
or
sub
push
pop
mov
xor
pop
popa
test
clc
ud1
xor
cmp
lds
popf
inc
in
xor
out
push
shll
lds
stos
outsl
enter
rorl
rolb
mov
cmp
mov
outsb
and
push
inc
bound
hlt
push
inc
xchg
mov
push
jne
mov
cmpb
sbb
mov
cmpsb
mov
rorl
mov
mov
ds
loop
jmp
fxch
aam
cmp
cmp
xor
addl
inc
push
inc
cmp
test
cmp
add
lock
adc
push
gs
xor
sarb
das
mov
add
popf
js
dec
xor
ljmp
adc
cmpsb
out
xlat
fwait
dec
pop
mov
mov
cwtl
xchg
xor
daa
fisttpll
shl
pusha
mov
jbe
adc
pop
rcl
paddd
aam
inc
add
lock
jb
dec
jne
mov
aam
pushf
cld
clc
xor
sub
mov
rcrb
icebp
pop
push
aad
pusha
jmp
into
shr
out
pop
movsl
mov
xchg
idivb
mov
sbb
mov
notl
pop
rcrb
stos
pop
aas
xchg
inc
loope
in
in
push
lahf
sub
sub
aaa
or
jo
pop
pop
test
dec
fwait
lret
adc
jbe
sbb
stos
add
loope
inc
pop
sub
in
in
xor
rcr
mov
xor
ja
xchg
insl
add
ficomps
xorb
inc
fcmovnb
popf
scas
mov
cmp
les
daa
inc
adc
adc
leave
xchg
aas
xchg
fsubr
daa
pop
push
fdivr
int3
pop
in
call
dec
rcrb
call
sub
imul
das
call
and
mov
mov
dec
sub
fisubs
bound
push
xchg
fnstcw
or
sahf
call
sub
sbbl
test
lods
dec
aaa
in
cmpsb
fcomi
rcl
xchg
out
ja
imul
dec
sub
xchg
adc
sub
popl
mov
fdiv
js
fnstcw
cmp
cmp
or
imul
call
in
add
inc
and
shrb
pop
repz
in
dec
cmp
pop
mov
in
jns
adc
imul
pop
imul
and
int3
cmp
lret
sub
or
int
push
cmp
mov
sbb
fiadds
icebp
or
push
addr16
stos
mov
ljmp
mov
das
fbstp
stc
mov
push
incl
popf
pop
test
test
das
add
jno
dec
push
cmp
mov
es
shrl
aam
pop
test
adc
inc
cli
mov
js
sarb
push
in
leave
leave
in
push
enter
cs
push
cmpsl
mov
dec
mov
sub
pushf
ds
adc
push
sbb
into
out
xchg
in
xchg
aaa
sub
insl
push
inc
ds
mov
fwait
inc
inc
inc
mov
jge
cli
das
into
js
push
mov
inc
xor
sbb
fwait
adc
push
fmul
sahf
and
fimull
arpl
xor
xchg
or
pop
shll
flds
flds
fwait
js
xchg
mov
and
mov
cld
mov
insl
negl
les
adc
scas
paddsw
adc
popf
les
lock
out
test
lea
pop
scas
insl
dec
dec
pusha
fwait
sub
or
jnp
sbb
mov
pop
push
xchg
popa
les
lds
rorl
cli
or
sti
and
lret
dec
jae
dec
shl
in
idiv
lcall
mov
sbb
sbb
bound
sti
test
mov
push
push
inc
push
push
outsb
sahf
iret
xchg
cmp
or
lahf
addr16
mov
sbb
xchg
and
lea
inc
negl
pusha
pop
jbe
out
dec
movsb
jae
mov
das
sub
ds
test
and
iret
daa
fisttpl
adc
dec
cmpsl
add
pusha
sahf
loope
aaa
icebp
fisttpl
jne
std
add
cld
clc
pop
mov
test
loopne
mov
loop
sub
fs
adc
dec
pop
das
divb
xor
aaa
fdivrs
movl
cld
out
fwait
push
sti
adc
push
out
dec
movsb
shll
add
jnp
cmp
flds
adc
rcrb
fnstsw
mov
push
cmp
les
icebp
into
in
lret
pop
gs
inc
ds
movsl
shl
subb
sbb
adc
popf
push
dec
movsl
mov
call
jl
sbb
mov
push
xchg
and
dec
les
adc
mov
subb
dec
mov
add
lret
jmp
loop
bound
xchg
les
popf
sti
pop
ret
adc
fsubl
jae
mov
lock
sub
and
mov
xchg
daa
dec
shll
out
fucomp
jo
icebp
ret
mov
pushf
jmp
hlt
xor
enter
out
orl
inc
jp
cmp
jl
inc
or
xor
mov
inc
push
add
popa
xchg
popf
or
les
imul
and
in
xchg
fidivs
and
add
aaa
fdivr
push
lods
in
inc
xchg
call
mov
data16
shrb
mov
and
sysret
and
jmp
sbb
mov
ret
stos
inc
xchg
pop
fildll
int
jl
decl
lods
lds
mov
mov
sbb
rclb
inc
outsb
rcrl
lret
push
sub
cmp
fildll
jae
lods
sbb
mov
sbb
push
ret
aas
mov
int
adc
pop
rol
mov
decl
jg
xchg
movsb
jle
shll
mov
mov
cmc
or
xor
inc
and
adc
jl
mov
mov
in
outsb
arpl
and
xor
clc
dec
adc
aad
add
jmp
int
jp
mov
das
xchg
jmp
test
adc
call
addr16
push
sub
adc
xor
sbb
mov
into
dec
sbb
dec
ret
mov
ss
mov
cmp
rcrb
in
and
stos
gs
or
lock
xor
fldt
adc
fwait
xor
les
leave
xchg
sub
ficoml
in
xorl
inc
add
xorl
cmp
adc
loope
and
ljmp
xor
rcll
pop
mov
mov
cld
or
xor
arpl
mov
icebp
add
int3
lcall
enter
adc
fwait
hlt
pop
xchg
sbbb
lret
xor
inc
jg
js
push
mov
sbb
mov
pop
xchg
push
and
sbb
pusha
loop
ret
xchg
jo
xchg
adc
lcall
push
xor
icebp
movsb
push
push
in
dec
pop
add
loop
mov
xchg
in
out
pop
jp
mov
mov
mov
int3
sub
sbb
jnp
inc
lret
sub
ljmp
fimull
lcall
xor
movsl
lret
cwtl
mov
xorl
adc
pop
pop
add
icebp
mov
popa
jb
pop
mov
mov
sbb
sbb
sub
mov
dec
dec
mov
mov
ret
pop
fistps
ja
pop
xchg
fbstp
xchg
jo
es
cwtl
rorb
fucom
nop
test
cld
mov
ja
sbb
ret
subl
or
add
jp
inc
lock
sbb
jp
adc
inc
xor
cmp
cmpsb
sub
push
adc
mov
xchg
push
sub
enter
push
mov
stc
dec
xchg
inc
jge
test
stc
and
bound
das
sub
mov
and
pop
push
push
pop
cmp
mov
fnstenv
cmpb
cwtl
loop
stc
dec
mov
push
jmp
or
or
ljmp
jb,pn
pop
pcmpeqw
outsl
lods
test
adc
les
int
out
stos
sbbb
leave
mov
out
mov
ja
xchg
clc
jae
dec
mov
jb
insb
pop
cli
icebp
in
es
fdivr
jns
imul
and
inc
repz
mov
add
fdivrp
outsl
scas
adc
mov
sub
jns
xchg
jl
insb
outsb
push
inc
insl
mov
or
fwait
add
mov
inc
mov
adc
jge
xor
dec
mov
jmp
mov
fdiv
pop
pop
cld
cmp
or
pushf
scas
mov
xor
int
nop
sub
daa
xor
testl
sbbl
sbb
jmp
idivl
les
fcoms
xor
cmp
movsb
inc
sbb
mov
dec
mov
xchg
das
fwait
pop
mov
stc
or
das
cmovle
add
mov
push
sbb
add
add
push
jns
jge
popf
fiaddl
xchg
cld
add
lret
sbbb
dec
je
mov
aam
push
jmp
sbb
rcl
cmpsb
jo
inc
gs
push
mov
jne
push
add
xor
sbb
dec
les
stos
std
sub
xchg
push
fbld
push
mov
sub
cmpsl
mov
inc
shl
and
subb
adc
jle
jmp
mov
adc
push
enter
inc
dec
shlb
mov
mov
push
mov
mov
rorl
pop
push
cmp
lds
or
fsubrp
add
lds
push
test
sub
jmp
outsb
mul
int
xor
aas
xchg
ret
pushf
jle
jecxz
std
in
mov
and
mov
push
call
jmp
xlat
es
out
fdivl
div
rol
cmp
adc
jmp
sti
out
mov
jecxz
jl
adc
pop
jle
adc
stc
outsb
shr
adc
inc
push
cmp
popa
and
outsb
ficoms
adc
or
or
fstl
inc
aad
or
out
sahf
fldt
add
dec
insl
xorb
les
and
gs
mov
add
dec
movsb
xlat
fnsave
fwait
xchg
mov
xor
jae
fucomp
cmp
mov
sub
inc
mul
lds
inc
je
cmpsb
jns
jbe
adc
dec
jae
imul
sub
xchg
scas
leave
xor
dec
dec
mov
vpor
adc
ret
adc
inc
gs
in
sarl
movsl
imul
scas
inc
push
orl
mov
aaa
inc
aad
mov
lcall
pop
push
sub
daa
iret
dec
jbe
xchg
mov
pop
mov
sub
dec
scas
mov
insl
out
and
ret
sub
adc
xchg
mov
xchg
mov
in
nop
inc
test
cmp
imul
fadds
pop
mov
bndldx
and
sub
enter
test
push
mov
fisttpll
mov
mov
mov
adc
jge
ljmp
lods
hlt
sbb
cs
inc
and
jle
cwtl
inc
inc
nop
mov
aam
aas
int
xor
jle
enter
inc
sti
add
mov
cltd
loopne
std
call
cmp
icebp
stos
pop
addr16
es
popf
subl
and
adc
add
rcrl
or
fwait
push
push
jmp
push
push
scas
jno
rorb
mov
push
int
jmp
stos
xorl
loop
mov
ret
es
stc
popa
ja
ror
mov
jbe
mov
imul
into
lcall
sbb
outsl
jbe
test
imul
sti
cmovae
lcall
ljmp
sbb
std
mov
fcmovnu
sbb
shrl
mov
int
es
fucomp
out
jl
lea
mov
sbb
int
in
daa
aas
inc
adcb
xchg
add
adc
dec
jne
sub
repz
inc
xchg
mov
mov
mov
cld
hlt
shlb
repnz
rclb
or
aaa
aad
daa
popf
and
xor
insl
loope
xchg
mov
mov
mov
cmpsb
dec
cli
push
sub
jo
fidivl
mov
insl
decb
inc
jne
adc
fucomi
out
jmp
mov
ss
dec
adc
sbb
addb
mov
dec
nop
pop
cmp
pop
or
adc
or
mov
mov
push
cwtl
dec
rclb
xlat
clc
fstpl
test
sub
in
bound
dec
jg
outsb
loope
adc
aam
dec
jp
inc
mov
sub
cli
mov
out
jmp
and
xchg
sub
pop
mov
mov
mov
inc
pop
lcall
xor
xchg
testb
stos
mov
lods
xorb
test
cli
xlat
add
icebp
out
mov
xchg
lea
xor
ficoml
and
cmp
cmpsb
icebp
scas
popa
jae
pop
sbbl
cmc
icebp
rcrl
imul
pop
add
jae
push
nop
pop
stos
jbe
outsl
inc
dec
pushf
std
cmp
mov
ret
scas
sub
xlat
iret
add
dec
jbe
leave
or
fsts
dec
sahf
sub
xchg
mov
and
mov
out
xlat
mov
and
rorb
out
scas
mov
and
jmp
mov
mov
pop
cmp
mov
popa
ss
fisubs
repnz
out
jae
icebp
fcmovne
shlb
sbb
aaa
mov
sbb
jb
and
adc
add
int3
dec
shl
ljmp
xchg
jge
cld
mov
sti
lahf
out
daa
scas
mov
std
lea
idivb
xchg
add
adc
loopne
das
pop
mov
filds
add
add
data16
outsb
inc
jl
outsb
stc
addr16
push
outsl
call
cmp
and
in
add
rcrl
daa
mov
inc
mov
cmp
stc
imul
loop
lods
pop
sbb
lods
and
popa
mov
shl
imul
cmp
cmc
aaa
stos
xor
insb
popf
xchg
clc
stos
jecxz
or
pop
jle
mov
mov
adcb
pop
cmp
daa
scas
or
ffree
outsb
stos
clc
mov
xor
sbb
lret
addr16
push
aam
mov
cmc
xlat
pop
mov
mov
pop
roll
cmp
mov
outsl
pop
and
bound
mov
jae
lods
aad
mov
push
outsb
lds
or
pop
dec
pop
jno
sub
dec
outsl
and
mov
pop
pop
in
pop
pop
mov
push
mov
pop
cltd
xor
adc
cmp
arpl
xchg
xor
inc
sub
xchg
pop
jno
inc
cld
ror
xlat
es
jmp
insb
jle
fnstenv
stc
or
mov
xchg
push
shrl
xchg
adc
sbbl
cwtl
stos
jmp
push
xchg
pop
pushf
xchg
sbb
or
std
push
pop
rol
sbb
inc
ret
cmp
xchg
xchg
scas
jns
xor
dec
pop
sub
cmp
cmc
orb
xchg
bnd
outsb
sub
inc
rcll
faddp
sub
mov
rclb
xchg
test
test
adc
sarl
inc
mov
test
or
lret
loop
or
bound
sbb
movsb
sbb
add
push
and
scas
push
dec
mov
mov
and
add
fsubs
cmp
shl
sti
sarl
mov
jbe
out
lcall
push
pusha
sub
mov
jb
pop
sbbb
dec
jl
test
mov
or
cwtl
icebp
in
mov
push
decl
sbb
enter
outsl
pop
ja
or
insb
inc
inc
mov
jo
stos
insl
push
sbb
adc
inc
inc
enter
cmp
xor
loopne
cmp
xchg
cli
and
ja
lahf
mov
xchg
pushf
push
data16
sbb
iret
mov
cwtl
push
lret
adc
cmp
or
xchg
popa
mov
or
add
jge
sub
dec
sbb
pop
mov
xchg
xchg
add
imul
push
scas
repnz
sar
lock
adc
pushf
jb
or
cld
sbb
add
mov
inc
cmp
dec
lret
bnd
add
insl
mov
call
jecxz
inc
aaa
mov
jne
enter
out
mov
lcall
jnp
fwait
pushl
je
adc
dec
xchg
mov
cmp
jle
push
add
das
jae
cmpsl
les
in
jp
pop
cmp
outsb
pop
stc
cli
inc
mov
cwtl
cld
push
mov
in
jecxz
adc
stos
dec
xor
sbb
dec
jmp
mov
test
add
in
cltd
fmull
inc
pop
ds
pop
mov
sahf
js
js
lahf
adc
sbb
fs
jle
or
lcall
lret
call
jl
int
dec
rorb
orb
and
into
dec
les
add
jbe
sahf
out
xchg
mov
lcall
cwtl
ret
pop
cmovne
jle,pt
fcmovnu
nop
jle
mov
imul
pop
adc
enter
sar
xchg
adc
sub
xor
push
bound
mov
js
in
movsb
sub
mov
fsubl
aam
pop
and
ret
pop
leave
and
leave
push
test
mov
lods
adc
je
mov
inc
or
or
adc
pop
jns
js
daa
dec
flds
jbe
push
cmp
repz
mov
mov
arpl
mov
loopne
nop
enter
dec
cmp
mov
cmpsb
mov
jnp
pusha
jp
pop
popa
push
cltd
sahf
ss
mov
cmp
xor
mov
iret
cld
adc
sub
or
sahf
addl
cld
sbb
pushf
ret
movsl
movsl
outsl
cmp
xchg
mov
xor
inc
mov
ja
sbb
movsb
pop
enter
jge
jo
or
shr
xor
sbb
jae
pop
inc
mov
xchg
popf
call
sbb
and
jne
jl
sar
push
inc
iret
inc
fld
jp
dec
push
adc
movsl
inc
les
sub
je
jp
lea
sbb
mov
icebp
cli
mov
cmp
pop
nop
adc
xor
jae
mov
inc
iret
test
movsb
mov
pop
mov
mov
orb
loope
mov
push
push
cmp
xor
push
pop
pusha
xchg
aas
xchg
in
mov
movsl
imulb
dec
xor
insl
outsb
mov
pop
cwtl
lcall
adc
pushf
cmpsb
sbb
mov
fistl
add
js
imul
push
jmp
ss
cmp
jbe
jae
stc
jns
in
mov
cvtpi2ps
test
test
add
mov
sbb
mov
insl
xchg
cmc
mov
inc
std
jne
nop
pop
adc
fldcw
push
pop
cmp
std
test
inc
lds
and
or
lret
jle
xchg
push
ljmp
out
stc
push
add
bound
loopne
pusha
xor
push
dec
fwait
into
adc
xchg
das
pop
adc
data16
jle
add
mov
and
mov
shrl
lahf
or
stc
lea
fstps
stc
sbb
add
test
cmp
mov
jge
jecxz
stc
fdivs
ds
popa
xchg
jg
test
test
int
imul
stos
enter
mov
jge
gs
xor
pop
lahf
shrl
jle
popf
arpl
cmp
mov
arpl
adc
sub
cmc
test
mov
andb
ja
dec
imul
adc
lret
sbb
dec
test
push
imul
insb
lea
imul
sub
js
jb
test
inc
and
aam
fs
mov
xor
insl
sub
push
jo
jmp
adc
push
or
loope
insb
jne
ffree
aas
popf
cld
sbb
sbb
mov
dec
rcr
fnstsw
sub
in
arpl
add
dec
das
dec
fwait
enter
dec
adc
jns
mov
adc
jl
in
sbb
ja
lret
cmpb
sub
sub
rorb
xchg
mov
leave
pop
rcll
pop
data16
outsb
fnstcw
mov
fists
pop
add
test
pop
push
push
mov
js
sbb
sbb
xchg
ret
inc
stos
xchg
lahf
push
adc
and
sub
xchg
fidivs
das
push
call
mov
out
sub
movsb
mov
cmp
jp
push
in
inc
fwait
mov
leave
fdivrl
and
jge
jg
stos
pop
test
and
insl
and
lahf
lods
ror
and
repnz
or
dec
cmc
jmp
loop
jno
mov
inc
jbe
inc
imul
lahf
repnz
and
sti
andl
add
sub
ljmp
ja
mov
or
cmc
nop
xchg
test
mov
mulb
mov
mov
and
mov
bound
dec
jp
outsb
dec
add
lcall
out
lock
loopne
adc
mov
dec
mov
pop
lret
lahf
aad
cmp
lea
js
cmp
xor
mov
js
fisubrl
cmp
mov
cld
mov
mov
in
xor
sub
in
inc
push
leave
sti
fisubrl
adc
xchg
inc
popf
aas
cld
add
mov
xchg
loopne
jno
pop
sti
leave
movsb
out
bound
mov
or
std
in
add
push
sbb
movsl
addr16
stos
inc
mov
jg
scas
into
push
test
cld
mov
out
les
cmp
add
mov
es
scas
lret
adc
fistpll
or
lahf
lret
push
pop
push
mov
fcmovu
pop
cmp
pusha
repz
aaa
addr16
mulb
push
inc
dec
push
jmp
xchg
inc
pop
dec
andl
movsb
cmpsl
test
shrb
fisubrs
jae
loopne
cmp
test
mov
aas
push
dec
cmpsl
push
sbb
jbe
stc
sub
rorb
idivl
jns
pop
scas
das
xchg
shll
xor
cmp
jmp
inc
sbb
out
fnsave
jae
push
push
insl
das
dec
fadd
out
bound
inc
or
cmpsb
and
add
mov
mov
iret
pop
sti
xor
in
pop
jb
repz
rcrl
repz
fs
es
js
ja
ret
mov
mov
test
pop
lock
jbe
inc
sub
cli
cwtl
into
jne
push
sub
pop
imul
jl
subb
or
dec
cli
sub
mov
sub
insl
and
cmpsb
mov
xchg
clc
test
fsubl
xor
cmc
sti
pop
xor
aas
sub
xlat
subb
aas
daa
inc
mov
ret
lds
push
mov
int
test
cmp
xlat
dec
cltd
dec
pop
loop
pop
jne
bound
cmp
aad
inc
xorl
or
insl
jmp
loopne
sub
fmull
pop
xor
inc
loope
frndint
pop
mov
jg
add
orb
je
not
add
cld
lcall
mov
imul
push
mov
and
pop
mov
pop
and
jbe
das
push
dec
test
and
push
cmpl
out
in
adc
xchg
cmp
test
fcmovb
or
out
ret
lret
fadd
insb
cld
aas
aam
or
and
and
xchg
fnstenv
jno
jo
push
daa
rcr
jle
add
xchg
xor
mov
loopne
loopne
shll
cwtl
loop
push
fsubs
mov
inc
popf
sbb
push
jge
mov
bound
mov
xchg
pop
push
stos
test
lea
inc
into
mov
movsb
sbb
inc
cld
push
outsb
jmp
pop
into
out
mov
push
repz
dec
int
and
insb
stos
sti
movsl
cmp
push
xlat
popf
out
lods
jle
psrld
scas
imul
iret
outsl
addr16
inc
pop
cwtl
xor
cmp
adc
out
or
inc
lods
inc
pop
mov
push
ss
pop
or
test
test
xor
jno
ss
or
or
loop
adc
fcoms
insb
dec
sbb
scas
gs
or
jmp
push
dec
leave
mov
jecxz
cmp
movw
pop
cmpsb
inc
and
and
pop
imul
adc
sarl
mov
test
push
inc
xor
jmp
jle
xchg
sbb
les
loope
test
inc
stos
cld
add
in
dec
or
cmpl
inc
push
sbbb
insl
ret
movsb
outsb
or
inc
push
pop
lea
xchg
lret
cmc
ljmp
int3
cmp
jecxz
and
aas
xchg
pop
mov
add
insb
inc
dec
mov
int3
push
push
xchg
or
add
inc
test
cli
sbb
jl
popa
mov
ja
sar
subl
jbe
cmp
outsl
sbb
adc
cmpsb
mov
or
sbb
push
ja
rolb
cld
xchg
xchg
push
pop
out
mov
xor
pop
jg
cmpsb
push
repnz
mov
cmp
inc
sbb
xchg
loopne
popa
push
pop
aad
outsb
mov
mov
mov
in
data16
pop
add
xchg
je
pusha
ret
lea
popf
jne
hlt
ljmp
dec
mov
adc
in
repz
mov
sbbb
and
int
cmp
mov
insb
adc
les
lss
das
mov
pop
jmp
push
push
das
ja
dec
mov
jnp
testl
fnstsw
divl
popa
ja
lret
sub
sub
mov
jmp
sbbl
adc
push
xchg
pop
mov
orb
push
outsl
out
daa
jl
loop
sbb
shlb
jno
adc
mov
or
aam
inc
movsl
ret
jg
or
adc
push
loop
lock
pusha
push
mov
pop
sub
lock
filds
rcrl
rclb
jae
fcoml
fdivp
xchg
mov
pop
sbb
imul
ja
loop
pop
lahf
lea
andb
xchg
ja
test
xor
lret
cmpsl
sbb
test
mov
insl
xor
outsl
jp
hlt
mov
les
mov
or
pop
pop
add
xchg
pop
jae
push
pusha
add
decb
data16
stos
xchg
push
in
fldl
sbb
idivb
sbb
pop
mov
mov
in
sub
sub
jb
adc
pop
xchg
jl
mov
sub
ret
movsl
add
sbb
adc
outsl
loop
leave
repnz
inc
aam
jnp
sbb
cli
mov
and
sub
loopne
lea
mov
test
pusha
cmp
aas
add
in
add
imul
mov
rorl
pop
dec
xorl
adc
ret
mov
stc
mov
sub
sbb
test
mov
mov
inc
roll
call
daa
sahf
lods
adc
pop
pusha
add
mov
inc
xor
imul
out
cmpsb
sub
jp
cmp
rclb
enter
sub
push
ret
js
inc
push
push
pop
cmp
shlb
cmp
je
push
cli
xchg
or
mov
inc
loope
das
ret
xchg
cmpsb
or
cmp
pop
nop
sub
lods
pop
loop
sub
adc
push
dec
mov
je
jge
adc
mov
sahf
dec
sbb
and
test
fs
lret
incl
cltd
bound
push
pop
cld
push
adc
int
xlat
push
movsb
fidivrl
leave
leave
xchg
and
subl
jbe
gs
xor
scas
sub
adc
xchg
into
in
sbb
rcrl
push
mov
out
pop
sub
pop
insl
repz
call
jbe
rcr
inc
mov
dec
mov
in
cmp
inc
je
loope
xlat
movsb
dec
xchg
bound
inc
push
popf
xor
mov
ss
pop
test
fcomip
cmp
lret
insl
add
jne
pop
push
add
into
sahf
cmp
jmp
cld
in
loope
pop
dec
std
insl
repz
ret
imul
and
cltd
sub
mov
inc
iret
gs
test
inc
int
clc
jg
push
mov
jae
dec
pop
mov
gs
xchg
fidivs
push
pusha
xor
jae
sbb
sbbl
cmp
xchg
add
adc
push
out
inc
in
lahf
mov
add
mov
push
cmp
or
into
adc
jne
les
jecxz
mov
cmpsb
rolb
cmp
sub
pushf
dec
fs
push
insl
cmpsl
pop
mov
jbe
xchg
divb
popf
cmp
movsl
fiaddl
fidivrl
jle
jbe
cld
dec
pop
mov
xchg
adc
mov
cmpsb
clc
adc
loopne
and
or
push
push
in
pusha
bound
je
iret
shlb
and
fdivrp
cmp
test
ljmp
into
push
dec
and
outsl
leave
mov
sub
jbe,pt
cs
xor
outsl
or
incb
pop
mov
lea
pusha
idiv
dec
inc
mov
add
xor
push
pop
pop
loope
sub
push
cli
stc
mov
adc
pop
jo
nop
cmp
imul
lcall
aad
cwtl
pop
gs
iret
add
add
std
xchg
arpl
icebp
mov
sbbb
xchg
cmpsl
repz
jg
push
xchg
vmovd
lods
hlt
decb
call
ja
add
hlt
xchg
inc
out
jl
dec
jae
pusha
gs
add
shr
rolb
movsb
push
popa
xchg
inc
push
adc
mov
test
xor
xor
stos
out
push
and
xchg
popa
cs
fcos
cltd
in
sub
cmp
insb
sti
ja
nop
jp
dec
pop
js
xchg
jns
out
outsb
inc
lods
sahf
cmp
xchg
jne
leave
xchg
mov
rcll
cld
jbe
push
sbb
push
cmp
push
pop
and
dec
clc
xchg
xor
dec
adcl
cmp
fcomps
add
push
fsts
fistps
ficomps
push
inc
sub
jno
fadds
ffree
xchg
push
in
jmp
cmp
add
push
or
pop
xor
sub
add
roll
movsb
les
imul
in
jge
cmp
mov
xchg
and
push
sahf
js
jns
aad
xchg
sbb
dec
lcall
xor
js
adc
pop
inc
in
mov
into
aam
out
dec
andl
dec
into
or
daa
add
sbb
jno
cmp
mov
push
ja
or
insl
int
ficomps
insb
pop
loopne
fwait
repz
jmp
into
mov
ljmp
mov
nop
cmc
stos
scas
cli
leave
cs
scas
cwtl
ret
sub
or
or
repnz
sti
add
adc
aad
push
dec
adc
jne
test
xor
mov
dec
insb
or
pop
pop
mov
jle
inc
scas
dec
and
idiv
enter
inc
fwait
shlb
es
mov
mov
jmp
movsb
xchg
cmp
jle
xlat
std
add
sub
mov
mov
sti
inc
movsl
or
gs
mov
dec
jmp
jg
aad
lahf
adc
xchg
les
pop
movsb
incb
les
orl
aas
jmp
jo
pop
leave
jae
or
jg
pop
or
jp
scas
imul
test
sub
in
negb
xorb
leave
push
push
push
sub
dec
xlat
aam
scas
rcrb
jg
les
inc
sub
int
xor
out
and
cmpb
icebp
pop
cmpsl
sub
test
mov
sahf
jbe
aas
and
es
sahf
dec
jne
popa
pop
mov
mov
movsb
mov
sbb
test
jge
push
push
jp
push
shlb
cwtl
leave
pop
test
rorl
ret
inc
and
stc
sub
add
mov
inc
arpl
fmul
cmp
or
mov
aaa
mov
stos
aam
add
lds
mov
inc
fldenv
cmp
cmp
mov
mov
mov
in
fists
notb
mov
mov
lahf
adc
xlat
std
push
or
pop
adc
sbb
shr
aas
cmc
push
mov
adcl
fxch
ds
call
xchg
popa
in
or
pushf
adc
fs
bnd
js
stos
lods
arpl
imul
iret
mov
or
mov
rcll
loop
cs
loope
cmp
dec
comiss
sti
hlt
out
mov
or
dec
inc
testl
aas
mov
push
fldenv
cmp
push
cmp
xchg
push
aas
push
jp
dec
jp
cli
push
cmp
mov
stos
add
repnz
les
adc
cmpsb
in
xchg
mov
dec
jg
scas
mov
pop
dec
pop
pop
mov
rolb
and
pop
cmpsl
fdivr
mov
sub
sbb
pop
scas
sbb
jmp
mov
es
xchg
adc
scas
repnz
add
pop
andl
and
push
adc
jbe
mov
mov
pushf
cs
mov
inc
aaa
orl
fcompl
int
aad
push
mov
ss
add
and
cwtl
into
ret
jmp
lock
ss
mov
push
notb
dec
repz
rcl
pop
test
movsl
cli
idiv
test
mov
mov
outsb
outsb
fs
arpl
add
vhsubpd
test
mov
xchg
pop
mov
dec
lock
inc
cmp
aaa
daa
xlat
sub
xchg
add
ljmp
add
aaa
inc
mov
adc
rclb
mov
fs
aad
adcb
add
negl
mov
mov
daa
lahf
pcmpeqb
and
loopne
cltd
arpl
mov
in
mov
mov
mov
je
dec
lods
dec
and
inc
push
pop
mov
adcb
ffreep
pop
imul
out
xor
xchg
in
pop
insb
adc
push
out
cmp
rolb
fistpl
dec
inc
ss
gs
shll
sarb
adc
leave
bound
out
ficompl
xchg
outsb
cs
and
test
mov
outsb
stos
mov
pop
out
inc
mov
sti
xchg
mov
outsl
mov
nop
lea
nop
cmp
add
or
jp
add
bound
les
inc
call
imul
std
inc
fsubs
mov
pop
enter
es
testb
aas
pop
movb
xor
add
popa
cmc
or
inc
jb
mov
popa
cmpl
and
xor
clc
inc
fsubs
mov
dec
stc
xor
or
xor
mov
dec
jg
dec
mov
jecxz
in
dec
or
iret
iret
shrl
push
push
js
inc
push
ret
cli
sub
jae
add
lods
cmp
adc
xchg
pusha
xchg
mov
fcomi
push
iret
cmpl
mov
popa
or
ret
test
xchg
decb
test
popf
jge
call
push
pop
shr
stc
xor
shll
lcall
adc
cmpsl
cmc
jl
dec
sub
icebp
inc
shll
push
pop
fdivl
cmp
jns
push
lret
imul
dec
sub
or
testb
mov
imul
sub
stos
aaa
adc
mov
mov
jne
rol
cwtl
sub
sbb
std
outsb
imul
shr
movsl
inc
sbb
fnstenv
jbe
xchg
adc
call
imul
fstp
in
xchg
xchg
out
sbb
xor
addb
lods
cmp
std
cmp
sub
and
pop
push
test
inc
adcl
mov
inc
cltd
stos
push
shl
xor
jmp
mov
and
les
dec
aad
and
mov
add
lret
add
sbb
pop
loop
sahf
or
or
cmp
adc
pop
and
je
pop
jmp
add
ss
out
enter
dec
cmp
adc
test
aas
lret
jno
xor
inc
pop
mov
dec
sarb
jl
out
jecxz
scas
adc
ss
scas
push
add
adc
mov
sbb
dec
ret
push
sub
out
aad
cmpsl
and
div
imulb
mov
lea
jae
inc
inc
inc
add
sub
cltd
xchg
mov
mov
and
ja
stos
jmp
mov
push
test
xor
xchg
cmpb
faddl
pop
fwait
test
mov
xor
loopne
jg
push
in
xor
mov
sub
xor
test
pminub
scas
push
jg
and
add
fildl
mov
push
jne
jge
mov
mov
dec
arpl
push
sti
sbb
insl
cmp
dec
pop
or
sbb
hlt
testl
lea
xor
add
xor
pop
and
mov
add
mov
push
dec
insl
push
enter
inc
mov
stos
test
insb
aaa
mov
insl
mov
std
mov
pop
sbb
inc
scas
pop
mov
sub
mov
test
movsb
push
cmp
inc
jnp
inc
mov
jl
out
out
sti
cmpsb
fcompl
cmp
insb
clc
jg
dec
xchg
lret
pop
popf
add
mov
dec
adc
and
loope
pushf
gs
loop
mov
mov
aas
insb
popf
lock
sub
mov
test
cmp
adc
jne
insl
pop
sub
cmpsb
cld
aaa
jbe
mov
clc
std
mov
test
shlb
push
or
mov
rcl
ja
in
fidivs
sbb
pop
aad
test
sbb
fildll
xor
aad
or
lods
mov
popf
mov
scas
add
rcrl
or
dec
push
fs
push
push
mov
fdiv
insl
and
sub
pop
insb
jmp
ret
in
mov
in
popf
movsb
int
fisubrl
fwait
stos
lock
sub
icebp
and
or
scas
and
addr16
sub
and
push
and
and
mov
push
xchg
push
fwait
dec
loopne
jecxz
ss
xchg
adc
jge
sbb
push
pusha
jo
dec
pop
xchg
push
stos
xchg
in
ficompl
int3
pop
adc
les
add
outsb
xchg
das
push
out
sbb
mov
data16
daa
push
test
dec
pop
inc
cmp
es
cwtl
sub
cmp
pop
sub
mov
push
sbb
push
out
outsl
mov
push
mov
pop
add
mov
mov
outsb
incb
pop
sub
sbb
pop
jno
aam
and
push
jp
loop
and
xorl
clc
and
pusha
sbb
xchg
dec
jle
repz
pop
mov
xchg
cmp
push
cmp
jno
pop
pop
xchg
sbbb
stos
lock
jnp
pop
adc
pop
xchg
sub
xor
dec
sbb
ss
or
add
sahf
lret
nop
sub
rol
scas
pusha
rorb
and
push
dec
imul
in
or
fldt
pop
adc
mov
or
jne
dec
in
nopl
lahf
or
sub
mov
mov
dec
pop
das
ss
mov
jb
add
movsl
xchg
rolb
mov
push
daa
jmp
fbstp
dec
cwtl
out
scas
test
repz
xor
repz
xor
jl
mov
test
fsub
xor
fnsave
test
flds
mov
sbb
stos
sub
jns
mov
or
loope
pop
jns
or
add
aas
addb
std
out
sub
lret
in
xchg
cmp
sbb
or
sti
dec
mov
pop
pop
mov
add
aas
out
xor
call
xor
mov
imul
and
dec
add
jle
xlat
cld
lahf
cmp
aaa
mov
sbb
and
xchg
mov
sarl
out
aaa
inc
std
fnsave
mov
out
push
dec
xchg
iret
jnp
mov
inc
lcall
leave
gs
enter
xchg
add
fnstsw
in
or
mov
stc
xchg
add
stc
xor
mov
fdivrp
cli
push
addr16
ret
repnz
mov
loop
inc
outsb
aad
inc
dec
rcl
daa
jmp
ret
inc
adc
or
fwait
ret
sbb
sub
cmp
sbb
dec
mov
and
mov
jnp
add
lcall
push
inc
cmpsb
inc
jl
enter
pop
loope
dec
lret
jl
ja
loope
in
nop
mov
inc
dec
pop
arpl
dec
mov
fldt
mov
mov
dec
insb
push
inc
jge
stos
sub
outsb
xor
jno
les
adc
pop
inc
jmp
xor
dec
jne
cli
imul
xor
jo
es
add
fwait
sub
scas
in
es
mov
pusha
add
sbb
int3
adc
sbb
gs
fwait
xchg
push
adc
inc
pushf
imul
es
sbb
jle
les
imul
and
cmc
push
mov
dec
je
stos
rcr
or
xor
cmp
loopne
sbb
rcll
arpl
gs
mov
data16
jne
mov
rcrl
addr16
xchg
imul
loope
pop
pop
loop
mov
pop
rorl
jle
cmp
adc
mov
in
or
mov
in
out
mov
jmp
lcall
iret
mov
clc
add
outsl
pusha
dec
jno
pusha
mov
insl
xchg
and
pop
popa
rcl
outsb
dec
es
jmp
jo
pushf
ret
mov
inc
sbb
movsbl
iret
fmull
in
sti
sbb
fiaddl
pop
inc
adc
or
shl
jmp
call
mov
rcll
ja
add
mov
xor
popa
aam
shl
push
movsb
pop
ficompl
test
xor
nop
call
fwait
dec
inc
mov
filds
xchg
xchg
je
push
jo
pop
dec
lods
sub
dec
fldenv
dec
xchg
xchg
das
push
jge
or
lret
mov
jge
push
add
out
out
xchg
mov
lret
out
fcmove
jb
and
call
push
xlat
mov
scas
scas
loope
stc
mov
cmc
lock
push
ficomps
jge
ret
shll
sub
xchg
cmc
cld
fwait
in
sub
jge
icebp
inc
jmp
loop
dec
dec
out
rol
loope
pop
pop
rcl
dec
insb
js
icebp
pop
cmp
xchg
icebp
flds
xor
and
inc
lcall
mov
enter
cmp
xchg
in
xlat
leave
popa
jbe
mov
sbb
mov
das
jb
imul
subl
mov
mov
dec
inc
push
and
daa
js
scas
cmp
insl
push
faddl
dec
into
in
and
lahf
out
mov
leave
inc
fbstp
xor
cmp
dec
fcomps
scas
jle
sarl
and
out
clc
adc
lahf
outsl
xchg
jp
idivb
add
jnp
int
cwtl
pop
test
flds
push
imul
fs
mov
jle
ja
testl
out
xchg
lahf
mov
cmpsb
shlb
mov
into
mov
sti
and
cmpsb
cmp
shl
sbb
dec
jns
cmp
lcall
pop
pop
adc
shrd
mov
mov
sub
cs
jmp
cmp
pop
or
dec
test
shrb
mov
ljmp
push
sub
cmp
and
mov
repz
sbb
dec
add
test
sbb
xor
pop
out
stos
add
lahf
inc
fiadds
fwait
inc
push
jmp
jne
insl
cli
fistpl
test
jno
nop
add
insl
iret
and
popf
dec
imul
cmpsb
mov
xchg
daa
mov
out
push
std
mov
fdivrs
pop
pop
and
inc
popf
sub
jnp,pn
lcall
mov
pop
inc
sbb
leave
sub
in
push
and
stc
ret
movsl
mov
xchg
cld
aad
xor
movsl
xor
push
outsl
popf
fisttpll
mov
scas
in
out
mov
inc
mov
sub
mov
imul
jo
jnp
mov
push
dec
sbb
cltd
cmpsl
lods
cmp
xchg
inc
pop
es
push
es
ja
pop
js
aas
rolb
push
std
push
xor
scas
inc
inc
dec
xor
cmp
jbe
pop
lret
hlt
push
fs
jmp
inc
bound
in
fcomps
inc
mov
imul
lea
imul
adc
pop
push
and
add
jbe
ret
mov
cwtl
mov
and
lock
out
push
pushf
push
les
mov
ss
or
test
xchg
dec
adc
push
je
and
cmc
pop
xchg
pushf
inc
out
add
je
jns
bound
aas
cs
and
shrb
push
pop
dec
xchg
mov
xor
mov
fisubrl
aaa
pusha
xchg
and
or
test
loopne
rclb
jns
js
sub
nop
dec
mov
mov
stos
rorl
adc
add
std
insl
xchg
mov
hlt
loop
sbb
or
adc
fcomps
mov
and
mov
sahf
push
jmp
sub
mov
pop
xchg
cmp
loop
gs
pusha
rolb
add
and
movsb
shr
ljmp
test
or
sbb
aas
mov
test
leave
lret
mov
push
xchg
lock
filds
out
sti
js
aas
jno
xchg
popa
rorl
cwtl
sti
adc
pop
cltd
jl
icebp
adc
nop
stc
xor
in
sub
pop
push
imul
loopne
in
std
decb
je
xchg
fbld
mov
cmp
gs
adc
es
mov
xor
xor
or
push
or
test
mov
push
bound
sub
es
push
test
dec
and
aas
push
sub
int
rol
dec
pop
lock
fbld
ds
int3
mov
push
push
fidivrs
cli
stc
stos
cmpl
subl
pop
cmpsb
addr16
and
pushf
xor
test
mov
vmwrite
jg
js
jmp
add
scas
push
imul
pushf
cmpl
pop
mov
mov
sahf
cmpsb
in
cmp
stc
out
mov
cmp
sbb
ret
xchg
popf
fnstsw
adc
je
xor
pop
adc
sbb
xor
lods
inc
add
ljmp
es
or
mov
mov
pop
mov
pop
push
lods
cwtl
sub
mov
cli
mov
test
inc
dec
pop
scas
dec
cmp
xor
adc
lods
jae
mov
cs
jae
xlat
mov
and
scas
push
and
out
sbb
bound
sub
repz
cmp
xchg
xchg
add
inc
inc
add
das
mov
scas
lock
push
dec
lds
mov
fwait
xchg
aad
pop
mov
out
loope
xor
xchg
hlt
push
inc
ret
data16
jae
cmpsl
add
imul
ja
adc
dec
push
jns
adc
insl
cmc
outsl
je
sbb
cld
adc
push
add
xchg
inc
cmp
ret
mov
adc
push
inc
hlt
sahf
and
xchg
push
push
ret
rcrl
repz
loope
lahf
shrb
leave
fwait
add
std
mov
pushf
pop
nop
pop
jae
cld
push
mov
mov
test
xchg
leave
cli
stos
and
push
jae
push
test
out
out
xchg
pop
pop
inc
adc
or
pop
pop
jge
jb
arpl
loope
pusha
fiaddl
cmp
ror
cmp
jp
sbb
add
sti
and
mov
sbb
dec
in
xchg
inc
xor
nop
pop
lea
ret
jne
or
leave
out
adc
or
movsl
out
sti
mov
push
or
dec
push
std
cmp
dec
mov
jne
ja
call
xor
fbld
mov
adcb
mov
stos
xchg
scas
dec
sti
mov
insl
cmp
xchg
test
jo
shrb
mov
ret
cmc
ret
cmp
rclb
xchg
cmpsb
ja
arpl
mov
mov
out
rclb
lods
fs
daa
hlt
sub
sbb
popf
mov
cmp
bound
cmc
out
and
scas
sti
and
dec
pushf
push
pop
and
sub
inc
mov
pop
mov
xor
lea
mulb
adc
dec
xorl
test
notb
les
and
dec
sti
loop
icebp
jg
pop
cmp
xor
cmp
outsl
push
movsl
lahf
sbb
jbe
test
mov
sbb
xor
jne
rorl
movsl
xor
loop
sub
mov
mov
mov
fdivs
push
add
inc
int3
lods
sarl
xorl
jb
mov
mov
dec
mov
mov
dec
inc
sbb
fdivrs
loopne
push
addr16
xchg
scas
cmp
fdivr
js
mov
mov
ja
and
les
push
and
ret
sbb
aad
addr16
es
mov
push
lds
lods
lock
dec
mov
push
mov
enter
popf
cli
cmp
lds
rclb
push
cs
fdivp
pop
push
outsb
shlb
das
andl
es
mov
add
add
xchg
lret
scas
xor
es
mov
mov
call
cmc
dec
decb
outsl
mov
out
ret
repz
mov
icebp
lret
dec
enter
mov
xor
xchg
addl
stos
test
ret
push
cmp
lods
clc
cmp
js
jbe
push
sbb
fs
and
mov
mov
jg
ficoml
xchg
adc
in
mov
imul
push
andl
lods
das
dec
cmp
push
xchg
cmp
jb
js
pop
jae
jmp
fcoms
bound
cmpb
mov
or
je
mov
int3
rclb
enter
or
testl
test
stos
js
mov
loope
icebp
sbb
mov
or
sbb
fidivl
or
pop
inc
sub
jnp
sub
rcr
xor
data16
shrb
jae
enter
dec
mov
lret
data16
int
bound
ja
xchg
sar
mov
jae
shl
jmp
jno
fdivrp
pop
mov
cwtl
test
xor
scas
inc
cltd
aad
cmp
push
ljmp
lea
adc
push
stc
pop
pop
ffreep
notl
jp
add
add
dec
pop
jbe
call
aad
inc
push
lods
push
xchg
mov
pop
or
cmpsb
adc
inc
stos
mov
xchg
in
cmp
sbbb
ret
cmp
cmp
out
pop
mov
lock
lods
cmp
mov
movsb
xchg
push
sbb
and
push
or
sbb
push
or
fnsave
lods
inc
out
lock
sbb
outsl
popl
or
sbb
cmp
movsl
ficompl
mov
dec
xchg
sbb
int3
mov
clc
xchg
xor
imul
shll
insl
daa
mov
stc
adc
cmp
mov
addr16
ss
fbld
pop
pushf
push
clc
cmpsl
insb
dec
stos
loope
push
rcrb
xlat
sbb
lret
mov
scas
roll
pop
insb
jb
mov
jp
imul
jl
jb
outsl
imul
mov
add
fwait
mov
shlb
loop
addr16
scas
add
and
or
push
mov
mov
in
popa
jae
mov
sub
sub
add
shl
or
call
xor
mov
call
mov
hlt
lret
dec
mov
xor
sub
xchg
or
fcomps
mov
fidivl
mov
das
sbb
repnz
jl
inc
cmp
or
cwtl
test
sub
sbb
es
popf
in
incl
ds
push
inc
xchg
leave
cmp
adc
out
jo
hlt
cwtl
xor
push
pop
sub
fdivs
aaa
xchg
mov
sbb
xor
xorb
ss
lock
push
test
xchg
clc
rcr
fsubl
in
sbb
retw
fnsave
or
fldt
push
and
ja
loop
mov
lds
xchg
mov
ss
ret
dec
mov
rcrl
aam
pop
dec
pop
mov
push
push
in
addr16
inc
cmp
sbb
cltd
in
adc
int
in
pop
xor
ficoml
int
fs
cmc
mov
ja
movsb
fs
or
lret
call
sub
addr16
repz
in
hlt
cmp
push
fucomip
or
adc
pop
out
inc
fcomp
inc
repz
sub
pop
fldenv
data16
jle
dec
push
sbb
mov
pop
pop
sar
adc
fistpll
aam
idivb
pop
fdivrl
sbb
jg
gs
or
inc
push
mov
cld
mov
mov
pop
add
xchg
jno,pt
sarl
dec
imulb
sub
aaa
gs
iretw
nop
test
sbb
leave
jg
or
or
jg
pop
sbb
je
cld
or
clc
in
mov
or
outsl
std
xchg
adc
fimuls
lahf
movsb
insb
movsb
adc
decl
jmp
mov
lods
enter
xor
ss
jp
mov
arpl
icebp
mov
xor
add
loopne
ja
lret
pinsrw
mov
mov
pop
icebp
sub
es
lret
loopne
adc
push
enter
jl
cmp
xor
mov
xlat
jge
jecxz
cmp
push
rolb
int
scas
fnstsw
mov
es
aad
xor
lret
xor
shl
cmc
cmp
inc
addr16
jo
cmpsl
movsl
and
push
mov
iret
fmull
cmp
lret
push
jb
fdivs
gs
pop
das
in
nop
je
pop
int
mov
in
mov
ss
cmpsb
pop
jp
push
mov
ss
inc
test
inc
dec
mov
shll
jno
mov
sbb
inc
repnz
test
dec
aad
cltd
aam
mov
scas
xor
je
dec
int3
dec
rcr
pop
loope
in
add
jmp
iret
faddl
fsubl
fnstsw
mov
out
jmp
out
or
out
xor
cwtl
movsl
push
daa
icebp
hlt
insl
jb
in
fisttps
mov
push
sub
sub
out
popa
and
jbe
push
movl
add
or
insb
js
outsb
out
dec
xor
pop
xchg
insb
lret
testb
jae
mov
mov
inc
orps
xchg
les
test
push
mov
mov
sar
jle
mov
lahf
mulb
addr16
out
mov
dec
fcoml
pop
and
push
xor
inc
sbbb
inc
add
xor
cmpsl
pop
inc
in
mov
inc
cltd
adc
mov
repnz
test
jp
frndint
mov
mov
enter
dec
or
sub
mov
lahf
hlt
add
jl
xor
sub
cmpsb
shll
adc
pop
adc
popa
and
insb
or
dec
int
mov
mov
mov
fwait
xchg
stc
icebp
jp
xchg
mov
or
movsl
test
daa
xchg
ret
rorl
mov
sbb
pushf
iret
rcr
pop
pop
bound
sti
adc
test
jle
out
xor
mov
aas
xchg
incb
pop
lds
jg
ja
sti
shll
pushf
xor
loopne
jns
fmulp
fwait
inc
pop
dec
jo
es
sbb
leave
out
mov
and
dec
push
adc
int3
mov
jno
jb
mov
repz
pop
mov
cmp
cltd
outsl
imul
jecxz
add
fwait
aaa
loop
fwait
loop
fimuls
pop
lahf
push
mov
mov
add
sbb
loop
xchg
sbb
rolb
mov
add
xor
out
lea
test
push
xorl
test
in
adc
mov
sahf
sub
and
mov
lret
or
pop
rcrl
andl
inc
lahf
dec
leave
mov
sahf
shl
pop
push
in
and
andb
sub
test
mov
mov
push
lahf
jne
mov
jmp
inc
insb
nop
push
jecxz
push
fwait
data16
push
cltd
repz
or
outsb
notb
gs
leave
in
fistpll
xor
andl
and
sbb
xchg
cltd
lea
ret
mov
test
fs
les
dec
ja
sar
cmp
pop
lock
push
aas
loop
sub
push
cmp
and
in
popf
adc
mov
push
pop
pop
inc
sbb
and
adc
ja
mov
rol
negl
xchg
add
xchg
mov
cmpsl
fnstenv
arpl
dec
fsubr
cmp
pop
cmc
loopne
dec
add
sbb
popf
push
test
xlat
cmpsl
in
cmp
das
dec
xchg
lea
mulb
out
add
add
js
sbb
out
es
dec
jb
sbb
int3
mov
insb
sbbl
aam
scas
in
xchg
repnz
xor
ret
mov
scas
push
cmp
and
adc
test
in
and
xor
xchg
or
and
adcb
xor
xor
adc
dec
popf
out
mov
adc
rcrl
pop
out
bound
mov
popf
clc
mov
lods
sub
push
clc
jmp
les
rol
jb
jp
xchg
pusha
xchg
mov
mov
pop
cmp
mov
sub
mov
mov
aaa
xor
add
sbb
xchg
mov
adc
dec
ss
sub
out
cmp
test
fistps
fldl2e
adc
mov
pop
push
in
cmp
repnz
lahf
or
pop
das
lods
aaa
mov
mov
mov
mov
push
push
test
cld
push
jge
dec
pop
sub
push
jae
out
cltd
cmp
into
pop
or
js
movsl
mov
mov
or
push
ljmp
cltd
pop
pop
sub
addr16
pop
xchg
cli
orb
sub
out
ss
adc
in
stos
xor
test
ret
ret
inc
stos
add
repz
out
add
xor
rcll
loopne
gs
pushf
pushf
cmp
movsb
test
pop
ret
imul
lods
and
mov
jecxz
mov
aas
les
jl
mov
jg
jbe
cmp
mov
shlb
jmp
cmpsl
adc
adc
in
jno
xchg
aam
mov
les
cmp
icebp
jno
movsb
mov
fistpl
imul
repz
jge
rcrb
inc
mov
xchg
in
xor
fcomps
add
and
lcall
sbb
dec
xor
cltd
xor
cmp
fcomip
daa
push
xor
imul
popf
out
or
enter
adc
cmp
adc
decb
dec
adc
aad
pop
rcll
adc
cmpsl
pushl
cmc
lret
cmp
ret
pop
pop
push
movsl
cmp
movsb
lahf
jo
push
imul
or
add
std
xchg
outsl
sbb
fstp
xchg
movsb
dec
mov
or
fstp
sahf
jge
add
sahf
adc
mov
sahf
sbb
add
and
jno
std
daa
mov
repz
pop
sar
in
repnz
mov
jmp
or
mov
dec
call
mov
sub
cli
dec
inc
sbb
mulb
call
sub
push
xchg
repnz
push
inc
bnd
xchg
pop
leave
mov
ret
inc
gs
or
xchg
rcll
sbb
push
gs
and
mov
dec
int3
and
lods
xchg
pop
push
sbb
xchg
mov
sub
aam
jle
fstl
inc
adc
fwait
or
cmc
sub
mov
mov
mov
fdivs
xorb
add
pop
mov
sbb
in
mov
adc
jne
ss
fisubl
pop
mov
and
jl
ffreep
frstor
cmp
shlb
aad
inc
test
push
fsub
iret
inc
mov
fsts
dec
into
add
inc
out
nop
jbe
aad
or
dec
mov
and
push
cs
push
scas
inc
cmp
and
pushf
stos
dec
ret
sbb
loop
inc
ret
movsb
leave
testb
or
insb
repz
imul
rorl
das
sbbl
push
clc
mov
fdivrs
repnz
lret
mov
leave
push
lock
add
cmpsb
out
lods
loope
rolb
pop
scas
cmp
jmp
lods
inc
dec
sbb
adc
jl
cmc
xchg
xor
mov
popf
sub
cmp
jle,pt
fisubrs
xchg
daa
lods
pusha
cs
push
test
inc
pop
adc
push
mov
fstpt
dec
es
insl
pop
out
pusha
and
lahf
add
fimull
xor
inc
rcl
movsb
dec
sbb
add
int
pop
cmpl
mov
and
sub
cmp
bswap
mov
sbb
movsl
sbb
lahf
mov
and
jno
add
xchg
pop
pop
mov
xchg
xchg
fwait
and
cmp
cmp
mov
push
js
pop
daa
jnp
das
in
mov
out
push
mov
das
vpsrlw
pushf
jp
fsts
push
cmpsb
xchg
xchg
scas
mov
inc
test
xchg
in
mov
pop
fcmovu
cmp
cmc
and
bound
or
in
dec
stos
dec
pop
cmp
mov
std
sbb
add
rorb
pop
dec
js
fnstcw
sbb
sub
mov
inc
faddp
daa
inc
bts
or
and
sbb
outsl
movsl
std
loopne
repz
cmpsl
imul
mov
out
and
aas
mov
inc
ljmp
mov
adc
push
test
pop
push
mov
repnz
lret
pop
and
pop
push
dec
lods
mov
push
jle
addr16
stos
push
stc
add
inc
out
adc
mov
outsl
addr16
mov
cmp
inc
xchg
rolb
pop
mov
adcl
xchg
mov
mov
fmulp
sbb
mov
mov
xor
jge
inc
in
xchg
pop
loope
adc
daa
pusha
movsl
lods
inc
inc
lock
mov
rolb
into
mov
push
dec
sbb
pop
mov
xor
pop
mov
push
fs
stc
xchg
out
std
pushf
jl
jns
repnz
roll
sub
mov
ljmp
and
inc
dec
and
outsl
or
push
xorl
popf
aas
pop
shlb
mov
pop
enter
xchg
lods
sub
dec
mov
nop
sbb
jge
decb
adc
data16
jmp
sub
out
mov
sub
les
mov
add
rcrb
outsb
xor
sub
mov
stos
add
sub
add
adc
or
jno
rcl
xchg
cmp
pop
ljmp
fs
xchg
and
jbe
dec
in
jl
mov
push
int
mov
mov
mov
xchg
out
divl
xorb
ss
pop
pusha
popa
rorl
out
mov
sub
nop
mov
in
icebp
les
inc
repnz
mov
insl
pop
add
and
mov
inc
jbe
push
les
pop
leave
loope
and
sub
int3
or
sar
int3
pop
dec
cmp
fldcw
mov
imul
out
add
dec
cs
jmp
pop
or
mov
stc
pop
scas
imul
mov
sub
sub
sbb
inc
dec
inc
cmpsb
push
enter
push
js
sahf
mov
cld
rcll
popa
ja
mov
pop
sahf
fildl
cmp
push
mov
xor
sbb
jb
adcl
test
into
sub
push
test
push
in
call
cs
and
ficoml
lds
aaa
jne
fdivrs
xlat
jmp
dec
aad
das
jb
dec
add
cmp
lret
dec
add
repz
outsl
xor
shl
insb
cmp
mov
push
test
jb
jnp
fs
and
adc
stos
adc
jecxz
jae
dec
fimuls
call
aad
cli
cltd
and
pop
sub
scas
int3
sub
adc
rcrb
xor
and
xlat
jbe
les
push
pop
mov
pop
xchg
daa
hlt
repnz
push
mov
push
pop
sbb
ret
data16
imull
jge
pushf
mov
sti
mov
pop
testb
inc
test
lods
jmp
jecxz
cmp
sahf
dec
nop
cmpsl
xor
ljmp
sbb
movsl
mov
add
mov
xchg
imul
push
lods
in
pop
ret
xor
ret
mov
test
mov
lea
pop
mov
mov
insl
sahf
mov
add
mov
icebp
pop
inc
mov
test
loopne
cmp
add
icebp
pop
lock
sbb
jl
cwtl
dec
sti
idivb
roll
shll
mov
shrb
cwtl
insl
inc
gs
sub
xor
in
ss
mov
mov
ret
push
sarl
loopne
add
test
add
repnz
mov
inc
out
jp
dec
fldcw
or
inc
addb
inc
dec
xchg
push
sbb
push
icebp
movsl
add
mul
fucomip
fsubp
pop
fsubrl
icebp
aam
adc
adc
mov
ja
fs
xchg
outsl
sbbl
push
sub
in
adcl
mov
xchg
dec
mov
sub
ret
ss
addr16
bound
ret
and
sub
jecxz
add
inc
lcall
jecxz
mov
andl
cwtl
ss
adc
sahf
push
and
push
and
pop
inc
push
push
jne
xor
mov
add
mov
stc
push
hlt
idiv
lods
ja
out
mov
mov
mov
scas
or
stos
mov
cwtl
sbb
or
scas
add
ror
out
mov
or
leave
push
or
push
movl
sarb
mov
stos
out
in
je
popf
mov
add
jmp
dec
stos
sub
int
mov
adc
pop
push
sbb
fbstp
add
in
fcompl
movsl
ja
xchg
dec
mov
mov
jle
jge
out
movsb
out
jne
xor
pop
jnp
sahf
mov
sarb
stc
add
cmp
mov
jnp
xchg
jl
and
mov
cmp
pop
in
movsl
js
lea
cmp
lods
xor
xor
repnz
mov
lds
mov
loope
stc
dec
push
sub
pop
movlps
aas
sbb
mov
sub
xchg
lahf
in
cmp
pop
inc
lahf
fwait
sbb
mov
dec
int3
jg
test
mov
clc
movsb
jns
cmp
jo
sbb
adc
stc
jmp
sub
mov
pushf
mov
xchg
lcall
mov
pop
cltd
loopne
mov
out
lea
test
sub
add
sbb
inc
packssdw
mov
ljmp
xchg
lods
ds
stos
test
push
divb
flds
jp
sbb
pop
mov
aad
nop
ret
inc
cli
mov
fdivrl
xor
cs
pop
mov
fsubs
cmpsb
ret
leave
mov
addr16
and
mov
loop
xchg
add
sub
stos
mov
imul
pop
iret
mov
jl
jmp
addl
in
xchg
xor
aas
dec
popf
daa
pushf
pop
pop
in
fcoms
or
lahf
call
and
cmp
sbb
movsl
sub
pop
movsb
scas
ror
and
mov
cltd
fs
ret
fwait
jne
inc
jg
int3
in
out
aas
mov
cli
jnp
loope,pn
gs
shll
xchg
stos
sub
addl
ja
or
dec
enter
xchg
pop
movsb
xor
sbb
xor
scas
enter
ja
mov
sbb
bound
adc
or
jnp
jmp
scas
in
pop
lret
fisttps
and
das
jge
xor
cwtl
mov
adc
in
loopne
push
mov
mov
and
pop
fidivrs
mov
and
add
outsl
fstl
xchg
mov
lods
loope
bound
jecxz
lret
cmc
or
mov
out
in
imul
dec
in
sbb
jge
mov
aas
insl
movsb
push
push
add
sbb
or
add
int3
pusha
mov
pop
inc
sub
push
mov
in
inc
mov
addr16
lea
push
pop
jmp
fldt
arpl
xor
clc
das
lcall
push
popf
in
sbb
ds
pop
adc
int
aad
xorl
lret
lods
lcall
daa
ds
mov
xchg
jbe
mov
adc
fists
pop
insl
in
xor
inc
shlb
inc
stos
std
push
push
or
push
cwtl
idivl
jb
xlat
mov
out
imul
and
xor
xchg
add
xor
insb
xor
pop
scas
mov
stos
or
adc
dec
rcrb
popf
int3
popa
bound
popa
mov
cmp
sub
sub
or
punpckhdq
cmpsl
and
cmpsl
pop
mov
lret
sbb
ret
jmp
or
push
pop
das
rcrb
pop
insl
lcall
inc
insb
or
inc
lret
cmp
jl
and
shr
jnp
mov
push
outsl
mov
insl
iret
movsb
jno
add
das
scas
mov
test
iret
subb
sbb
fistpll
inc
lds
stos
loopne
sub
aam
rcll
inc
cmp
fldt
in
in
cltd
repnz
mov
outsb
pop
iret
cltd
ficoms
adcl
and
dec
inc
popa
sbb
cs
fcmove
daa
sub
mov
add
popf
sub
adc
dec
add
fnstenv
gs
scas
fisttps
ds
int
pop
dec
mov
rcrb
xor
jmp
stc
jno
int
daa
fmull
fidivrl
push
in
or
sbb
and
mov
mov
jmp
test
pop
loopne
repnz
add
pop
mov
pop
ds
mov
xlat
sub
mov
mov
shl
jno
sub
loope
push
mov
mov
jg
pop
add
das
lods
jo
mov
mov
and
out
inc
jns
cli
jecxz
mov
cwtl
mov
mov
jecxz
push
xchg
enter
xor
add
mov
push
bound
lcall
orb
mov
jg
repz
ret
repnz
mov
sub
jge
outsb
loopne
push
lods
movsl
dec
jno
mov
ret
xchg
int3
pop
lret
xchg
enter
dec
jp
shrl
lds
push
addr16
mov
or
test
sbb
adc
push
jle
lock
inc
pop
leave
lods
mov
out
sub
cmp
mov
sbb
dec
xor
call
sahf
bound
add
in
mov
movsb
in
mov
test
ret
sub
xchg
push
insl
jns
sbb
cli
test
push
pop
xor
mov
inc
sbb
sbb
pop
js
push
out
popf
pop
aad
sbb
enter
imul
push
cmp
int3
adc
sbb
xor
inc
lcall
ret
insl
pop
mov
fisttpl
fiaddl
pop
xchg
stc
enter
inc
push
or
ss
addb
xchg
imul
jmp
outsb
pop
cli
inc
sub
popa
ror
sub
cmp
add
aad
cmpsb
inc
mov
in
mov
ret
push
ror
jb
fiadds
popa
inc
xchg
mov
iret
subl
jg
mov
pop
or
jb
aad
movb
mov
pop
sbb
inc
es
aam
add
adc
rol
push
and
cmp
jno
pop
xor
mov
sub
lods
sbb
add
psubb
push
push
imul
cmp
or
xchg
cmp
inc
sub
jb
out
nop
int3
out
mov
sbb
sti
or
push
das
push
cmp
mov
xor
or
push
in
mov
xchg
subl
movsl
pop
jno
push
add
xchg
pop
scas
sahf
lret
scas
adc
pop
sub
lea
mov
jae
lret
push
inc
aam
or
popa
mov
xlat
addl
loope
sbb
cmp
mov
int
aaa
mov
test
pop
es
inc
jnp
dec
cld
cmp
jmp
insl
push
ja
mov
pop
daa
stos
lcall
das
jecxz
jl
xor
stos
push
cmpb
ljmp
and
push
out
pop
pop
jbe
mov
mov
or
or
rcrb
dec
mov
fdivr
adcb
xor
jne
sti
jae
pop
enter
mov
inc
or
fnstsw
sub
push
jnp
xchg
dec
cmp
xor
pop
mov
cmp
mov
popf
jno
js
xchg
pop
shll
loop
orl
into
ds
dec
cs
inc
stc
mov
xor
mov
ss
inc
out
cmpsl
dec
or
lahf
outsl
add
dec
stc
mov
adc
rclb
scas
inc
das
lods
cld
adc
sbb
dec
mov
xor
shlb
inc
or
imull
jns
cmp
jecxz
and
rcll
gs
adc
fidivrl
js
fwait
ja
sbb
into
popf
fmuls
mov
mov
adc
sub
imul
sahf
sub
xor
test
and
lea
daa
jge
bound
shlb
or
subl
sbb
popa
out
repz
xchg
jecxz
pop
jo
mov
mov
incb
xchg
dec
rolb
inc
mov
push
icebp
rclb
pop
mov
or
sarl
ja
dec
sarl
imul
test
pop
add
movsb
cmp
out
mov
xchg
add
mov
add
rolb
or
dec
iret
nop
lds
add
sti
lea
cmc
addl
jnp
clc
xor
lcall
mov
roll
in
xchg
movsb
and
in
ret
mov
cmp
cmp
daa
pushf
loop
dec
loopne
mov
rclb
std
rorl
or
add
add
je
stos
lret
mov
mov
outsl
movsl
sbbb
inc
add
xchg
dec
mov
popl
and
xchg
push
cmp
dec
adc
mov
clc
xor
pop
movb
lret
mov
or
je
daa
xchg
daa
pop
jg
stos
movsb
clc
lds
and
adc
lods
out
push
out
lret
xor
fs
mov
xchg
and
in
jo
sub
jne
push
lods
mov
sbb
cmp
sbb
cltd
and
sbb
adc
pushl
cmpb
ret
lret
int
mov
sub
in
ret
push
loop
dec
pushf
in
fiaddl
push
push
jo
lods
xchg
jmp
rorb
cmp
xchg
out
call
mull
je
xor
cmp
jge
roll
jl
xchg
gs
aad
jmp
cltd
add
push
jo
imul
mov
add
sub
inc
sarl
test
and
push
shrl
mov
idivb
lds
mov
ret
inc
lods
inc
mov
jecxz
push
cld
jl
pop
and
cmp
sarl
js
push
imul
out
add
inc
test
aad
imul
or
jecxz
gs
adc
lock
inc
and
lahf
dec
dec
ds
adc
roll
cld
arpl
or
mov
insl
push
and
sub
mov
inc
out
ljmp
fiaddl
jbe
mov
dec
push
push
test
pushf
fcmovnbe
outsl
dec
mull
xchg
outsb
fstps
mov
xorl
leave
ja
push
inc
loope
pusha
inc
mov
roll
fistl
daa
add
fs
pop
pop
aaa
or
addr16
jnp
hlt
mov
mov
push
data16
test
adc
pushf
scas
pop
mov
outsb
lods
xchg
negl
add
ljmp
out
std
mov
xchg
cmp
hlt
adc
adc
lret
push
adcl
cs
fwait
dec
push
movsl
mov
xchg
fstl
frstor
fldl
in
aas
rorb
arpl
fwait
movsb
inc
aad
pop
pop
pop
je
mov
call
decb
mov
lea
ret
push
mov
sub
pop
iret
sbb
fisttpl
push
mov
lahf
adc
jb
dec
pop
add
test
pop
fsubrs
xor
ljmp
add
jbe
jp
insb
lea
cli
mov
mov
adc
aam
mov
sub
mov
lret
sbb
xor
or
push
sti
daa
mov
mov
dec
push
sbb
jno
out
jno
xchg
pop
mov
pop
ja
push
dec
fidivs
xchg
add
rcll
sti
movsb
stos
lret
and
push
pop
clc
lds
aas
pop
mov
xorb
push
enter
mov
cs
stc
jmp
mov
ja
xor
stos
and
and
pop
push
push
lds
cmp
add
adc
es
scas
mov
add
scas
cli
xchg
inc
push
sbb
adc
int
test
clc
jmp
cld
jnp
jl
push
mov
xchg
xchg
pop
loop
fcoml
jbe
push
mov
cmpb
das
mov
sarb
rorb
ret
xchg
adcl
gs
mov
mov
dec
add
sbb
shrb
mov
leave
scas
jp
cmp
out
test
decb
pop
mov
push
and
call
inc
add
stos
mov
xchg
loopne
sahf
or
mov
jp
sarb
jecxz
pop
push
repz
idiv
xor
and
jmp
mov
dec
and
jp
push
in
or
cli
mov
mov
fadds
in
aas
and
shl
movsl
adc
sub
ret
pop
mov
xor
aas
ljmp
daa
icebp
sbb
test
jge
mov
pop
fs
in
loopne
and
and
adc
clc
or
adc
popa
jo
je
rcl
ss
dec
ret
inc
sbb
flds
push
mov
dec
inc
cs
test
scas
fidivrl
cmp
std
cmpsl
cltd
loopne
addr16
test
aaa
ds
loopne
cmp
hlt
xchg
in
mov
add
sub
push
sbb
int3
int3
adc
jle
cmp
stos
jb
push
sbb
aam
mov
or
aas
cmpsl
push
imul
gs
js
into
rcl
popf
and
es
inc
xlat
jl
js
in
lcall
out
inc
dec
leave
push
push
cmp
fldl
les
sahf
test
fiaddl
imul
cwtl
in
mov
mov
in
aam
jb
pop
enter
pushf
insl
mov
nop
and
jno
adc
dec
in
xor
and
pop
cli
xor
mov
mov
pushf
push
shrb
ret
lret
ja
mov
mov
das
mov
xchg
sub
test
adc
psrlw
fisttpll
psllq
mov
bound
and
xchg
sub
lret
lret
cld
dec
adc
inc
cmpsb
sub
xlat
arpl
rcl
les
mov
fildll
push
mov
nop
fistpll
popa
enter
pushf
jp
int
pushf
push
add
mov
and
inc
sbb
adc
or
mov
adc
iret
xchg
repz
mov
lret
call
mov
fwait
pop
adc
mov
lods
mov
lock
ss
dec
out
mov
add
dec
push
xor
std
and
enter
sahf
xchg
xchg
ficomps
pop
pop
fs
repz
sbb
int
mov
jno
mov
inc
fmul
imull
mov
clc
das
rcl
lock
xchg
ret
lea
inc
cli
out
mov
shlb
xchg
push
xchg
push
pop
mov
leave
insb
jne
jne
push
inc
int
std
xor
out
mov
xor
fadd
aas
fsubl
sbb
test
jle
popa
outsl
cmp
jecxz
decl
out
test
js
test
adc
xchg
sarl
sbb
mov
jg
jae
repz
scas
mov
dec
jae
imul
xlat
mov
jno
fsubrl
inc
mov
jno
leave
xlat
xchg
popa
inc
cltd
out
jb
test
push
cld
jg
jp
or
add
out
cli
sub
fnop
inc
add
popa
add
mov
xor
push
mov
push
dec
mov
and
xchg
push
stos
jle
imul
int
clc
cmp
and
scas
leave
data16
pop
add
ljmp
mov
ret
popf
orb
lods
xor
xchg
sbb
xchg
cld
cmp
cmpsl
aas
add
lods
adc
aam
adc
into
inc
lcall
int
pop
sbb
or
pop
sbb
jns
inc
mov
out
dec
scas
pop
outsb
xor
mov
in
adc
xor
cmc
mov
and
lds
arpl
out
daa
jae
movsl
lea
dec
les
mov
fsubrs
test
mov
mov
rcrl
out
out
lods
loope
pop
js
adc
jmp
loope
pop
stos
pop
int
fsubrl
psrlq
cld
insl
fbstp
test
repnz
ret
popa
push
fldcw
jecxz
scas
xor
mov
filds
cmp
jge
dec
cli
loop
out
stos
sahf
or
xchg
out
fistps
sbb
sub
test
or
lret
push
pop
fisttps
pop
in
int3
push
cmc
test
mov
call
push
addb
into
cmp
sub
dec
bound
xchg
dec
mov
loope
aad
flds
sbb
ficomps
outsl
divb
ds
test
push
test
add
test
sti
jg
lret
or
repnz
push
xor
shlw
lods
adc
xchg
sub
inc
xchg
jecxz
test
inc
xlat
push
and
rolb
add
inc
cs
les
cmp
mov
sbb
fs
aad
push
pop
scas
int3
enter
jbe
mov
ljmp
outsb
sub
push
out
testl
jl
adc
mov
adc
cli
cmpsl
pop
sub
lock
clc
adc
sub
push
xor
outsl
jno
inc
adc
leave
dec
cwtl
jge
mov
mov
popf
popf
enter
outsl
das
fwait
inc
xchg
mov
out
cmp
adc
adcb
lahf
cld
mov
add
data16
pop
xor
out
roll
adc
popf
sbbl
mov
mov
jb
pop
jno
or
shrb
les
roll
xchg
fcmovne
shlb
daa
scas
mov
ret
and
cltd
bnd
sti
rclb
mov
push
mov
mov
and
pop
mov
and
sarl
test
out
out
fistpl
jae
repz
ss
jmp
xchg
sbb
ret
js
fsubr
and
outsb
sbb
pop
dec
lods
adc
adc
rcrb
mov
xchg
mov
xchg
movl
fwait
es
mov
in
or
ret
movsb
repnz
gs
int3
and
mov
push
test
dec
in
dec
mov
mov
mov
iret
gs
jnp
sub
movsl
in
push
lret
push
xlat
jg
mov
push
out
mov
adc
and
sub
test
in
mov
int
rclb
and
shlb
fmul
sarb
ret
and
stos
pop
mov
push
xchg
mov
imul
jg
sub
insb
xchg
lea
cmp
push
mov
cmp
xchg
cmpsl
cli
and
neg
cld
je
inc
add
stos
inc
js
push
jmp
push
popf
mov
mov
rolb
xor
mov
inc
cltd
hlt
mov
bound
repnz
push
sub
inc
fs
and
dec
cmp
outsb
jne
lret
push
maxps
or
jbe
mov
add
pop
jle
jl
push
add
sub
sub
sarl
mov
sbb
add
aas
aad
in
or
insb
insb
js
mov
sahf
repz
cmpsb
das
pushf
mov
and
insl
pop
mov
insb
adc
fistpll
dec
fs
and
push
lods
loop
xor
out
fdiv
leave
ret
rcrl
cwtl
mov
fstps
xchg
lahf
nop
retw
xlat
jge
sti
or
shrl
scas
fdivs
pop
movq
stos
lcall
sahf
sbb
ficoml
inc
xor
scas
mov
jmp
ffree
repz
push
inc
insb
out
movsb
jle
sub
mov
std
test
fcoms
cwtl
or
mov
jno
sbb
jo
pop
or
xchg
cmp
or
shlb
pop
xor
lea
repz
sub
mov
out
push
inc
or
fnstsw
dec
mov
lret
mov
xchg
fimull
mov
out
pusha
mov
adcl
cmp
pop
loope
imul
xor
or
aam
outsl
pushl
push
hlt
mov
adcb
and
jge
imul
fmull
cmp
push
shrl
gs
clc
add
cli
or
jge
repz
ret
add
test
add
adc
push
jp
adc
rorl
data16
iret
mov
repz
and
ss
es
mov
fdivr
jne
inc
pop
sbb
jg
push
cltd
dec
mov
data16
into
pop
pop
lret
cmc
pop
popf
push
jmp
or
hlt
scas
sbb
inc
mov
lahf
fwait
mov
lock
adc
add
inc
jnp
push
aas
out
push
pusha
es
iret
adc
fbld
jmp
xor
mov
jne
dec
or
sub
lcall
aaa
mov
jg
nop
lods
int3
fidivl
clc
dec
jge
xor
or
imul
sbb
mov
mov
test
pop
dec
xchg
shr
sbb
xchg
lahf
add
and
outsl
and
push
xor
mov
push
jns
jb
xorb
pop
call
mov
mov
mov
jg
push
inc
jb
mov
imul
push
or
leave
jp
enter
bound
cmp
pop
faddl
aaa
les
fwait
ss
mov
movsl
movsb
iret
and
pop
addr16
mov
push
stc
mov
insb
mov
jecxz,pn
xchg
sbbb
mov
add
mov
ret
jp
add
dec
in
mov
and
jge
cmc
sti
stos
lret
inc
mov
movsb
arpl
sub
push
push
cmpsb
mov
cmpl
or
in
js
popf
mov
stos
fldt
mov
push
jle
push
sbb
movsl
nop
roll
mov
mov
iret
mov
pop
mov
mov
in
pop
in
xor
ja
pop
push
sub
cmpsb
clc
lahf
iret
dec
adc
jbe
add
or
je
sub
js
and
dec
mov
adc
sub
sbb
add
jne
iret
mov
gs
mov
mov
mov
sbb
pop
testl
aas
cld
jbe
pop
fmulp
cld
call
std
or
cmp
sbb
sub
or
pop
jb
pop
sbb
iret
and
mov
scas
aaa
pop
xchg
inc
xlat
stc
cmp
sub
mov
inc
iret
out
call
and
fucomi
mov
push
icebp
pop
push
decl
aas
and
jns
imul
cwtl
push
xchg
pop
push
es
push
aas
sub
iret
mov
sub
adc
bound
aas
mov
outsb
sbb
xlat
sub
js
call
adc
stos
es
or
mov
jne
cmp
pop
hlt
fcmove
movsb
mov
gs
xor
cltd
repnz
shrl
sbb
or
jge
lcall
xchg
jno
xlat
ljmp
pop
in
and
fs
call
xor
ss
scas
push
inc
sarb
lret
int3
pop
mov
test
xchg
jns
or
mov
pop
jne
dec
insl
mov
jge
pushf
mov
dec
fucomp
test
adc
outsb
leave
stos
mov
out
out
xor
into
xor
mov
jne
ss
ljmp
sbb
sbb
sahf
sub
lods
or
and
add
sub
mov
push
sub
adcl
or
push
dec
outsl
pop
ja
hlt
push
mov
add
rcrb
pminub
je
adc
out
jecxz
into
cmp
out
jmp
and
pop
jno
jne
shrl
cmp
hlt
in
aad
cmc
xchg
mov
icebp
stc
das
jo
dec
dec
fwait
or
sub
fs
ss
fadd
popa
add
aam
pop
xchg
fmull
push
push
mov
ficomps
push
test
add
fwait
push
cld
cli
push
outsb
es
xchg
mov
sub
lock
dec
jne
mov
push
push
sarb
mov
enter
push
arpl
xor
mov
leave
clc
mov
mov
std
dec
imul
fnstenv
xchg
aad
inc
cmp
imul
xor
aas
push
lea
add
sbb
xchg
sar
mov
xchg
pop
sbb
scas
sub
pop
sub
adc
in
sbbb
arpl
scas
notb
testl
out
xor
pop
fsubrs
dec
orl
hlt
inc
pop
test
roll
jmp
lods
xchg
inc
or
add
push
pop
jp
dec
ss
adcl
mov
and
out
pop
sbb
sub
popa
cmp
xor
stos
call
test
rorl
pop
add
or
adc
xchg
dec
xchg
fdiv
leave
ljmp
xorb
inc
xchg
xor
dec
mov
cmp
mov
fists
jge
push
movsb
inc
movsl
dec
lea
nop
adcl
push
mov
lds
decb
inc
dec
jmp
dec
adc
hlt
jbe
dec
pop
jle
push
push
repz
fiadds
es
movsb
hlt
test
pop
fs
cmp
mov
fs
mov
ljmp
or
cli
xor
xor
js
fstp
adc
repz
adc
mov
xchg
inc
mov
out
cld
cmp
pop
adc
call
ja
js
js
xchg
sbb
sub
jge
mov
aas
data16
or
repz
je
rclb
insl
lahf
mov
mov
cmp
dec
push
fimull
push
sarb
orl
pop
leave
adc
push
in
cmpsb
mov
enter
out
lea
pop
mov
mov
pushf
pop
mov
mov
cmp
dec
es
inc
test
inc
cmp
cmp
push
scas
loope
fwait
pop
add
sbb
sbb
xchg
xlat
mov
wbinvd
mov
fmuls
add
iret
pusha
or
push
sbb
stc
add
imul
pop
sbb
add
lahf
out
xor
mov
popl
outsb
mov
xchg
mov
add
push
cmpsl
mov
xchg
jg
shlb
push
jo
mov
jbe,pt
shll
dec
idivb
jle
add
push
mov
adc
cmp
les
movsl
lds
out
jo
push
cmpsl
inc
sbb
movsl
mov
sbb
dec
out
cmp
aas
and
jbe
sbb
sub
cmc
adc
into
mov
or
jg
pusha
outsl
xor
dec
sub
sahf
push
adc
jnp
add
xor
lods
inc
jmp
jbe
pop
dec
sub
push
xor
dec
push
sub
adc
xchg
sbb
cltd
mov
mov
loop
jno
gs
shl
shrl
and
cmp
sub
shlb
ret
in
je
xor
or
jmp
scas
sub
jge
add
mov
daa
les
mov
jge
dec
jne
sub
fstl
iret
mov
shlb
cltd
xor
mov
fmull
dec
sub
mov
sarb
mov
or
aad
push
stc
dec
int
xchg
cmc
xchg
enter
xrelease
or
lock
jno
pushaw
or
adcl
sahf
clc
add
stos
fstpl
pop
cmp
and
pushf
push
orl
jae
imul
and
scas
js
mov
mov
sub
adc
cs
sarb
push
in
insb
loope
popf
xchg
int3
mov
xchg
aam
sbb
or
mov
pop
and
ret
stc
xor
adc
xlat
sbb
jp
movsb
lds
jnp
fcoml
xchg
aam
inc
xorl
insl
mov
ds
popf
xor
ret
mov
jb
lods
bound
mov
pop
out
add
pop
jge
pop
xchg
xchg
out
movsl
dec
pop
xchg
flds
cmp
and
fmulp
jmp
jo
cmpb
and
dec
das
scas
xchg
je
or
dec
pop
ss
loope
mov
pop
fimuls
mov
jecxz
or
sub
out
push
rorb
jge
lods
sbb
in
push
rorl
xor
jg
cmpsb
ljmp
mov
aad
nop
mov
mov
bound
movsl
int3
jo
gs
sbbl
mov
imul
fisttpl
insl
ret
rcr
mov
mov
popf
pop
jg
dec
dec
lcall
mov
sub
daa
xlat
adc
xchg
jbe
adc
sti
insl
xchg
adc
ja
jmp
mov
jmp
mov
sub
sub
les
pop
or
in
dec
mov
sbb
dec
push
add
mov
loop
inc
cmc
push
mov
mov
daa
adc
pop
jnp
loope
xchg
inc
mulb
adc
xor
cmp
cltd
icebp
jae
inc
fdiv
je
push
adc
mov
mov
adc
fildll
test
lock
mov
adc
pop
pop
and
jns
flds
ds
cmp
push
aad
dec
mov
pop
mov
icebp
mov
mov
jge
mov
mov
sar
xor
call
fwait
aad
cmp
aad
and
out
test
pop
or
cmp
test
in
pop
dec
nop
cld
cmp
mov
mov
xor
insl
jg
sahf
decl
jo
dec
pusha
mov
test
xor
add
sub
je
pushf
inc
sbb
mov
and
clc
pop
in
cli
push
in
lods
push
test
lods
fdivl
test
repz
push
mov
push
iret
sbb
and
dec
fsubs
jo
inc
mov
int
mov
loope
push
mov
and
je
adc
inc
inc
mov
mov
into
int
stc
test
sub
inc
dec
leave
mov
les
dec
and
pop
mov
or
xor
push
repz
xchg
insl
nop
dec
jge
jecxz
lods
mov
insl
mov
and
adc
cmp
mov
sub
fbstp
cld
mov
sbb
into
fistpl
xchg
sbb
into
lock
hlt
mulb
scas
mov
xchg
mov
filds
in
jb
mov
mov
bound
and
fimull
iret
jge
xlat
loopne
mov
or
mov
loope
fildl
mov
test
fsubr
sub
pop
push
pop
jb
jmp
mov
out
jne
rol
ret
push
test
jo
leave
pop
add
mov
mov
icebp
outsb
sub
add
imul
daa
sub
cmp
movsl
imul
rcrl
sbb
inc
pop
clc
xor
xor
pushf
je
inc
adc
in
mov
push
adcb
xor
lahf
mov
loope
or
push
rclb
lock
jbe
insb
lret
mov
das
and
daa
adc
mov
lods
push
adc
dec
sbb
pushf
pop
test
fcmovbe
cmp
dec
cmp
loope
push
out
std
aad
dec
hlt
add
in
lret
stos
into
ficomps
cli
xchg
mov
add
fsubs
leave
push
adc
stos
pop
adc
jo
dec
adc
cmp
ss
add
xor
dec
cmpsl
popa
negl
outsl
roll
adc
jno
pcmpgtd
xchg
sarl
scas
push
pop
cmp
adc
test
fs
ljmp
jg
ret
lahf
add
sub
push
mov
mov
or
or
add
xor
fsubrs
sbb
cmp
mov
mov
or
je
mov
test
leave
stos
dec
inc
xor
cmova
test
data16
jp
aam
shrb
cmp
push
call
mov
gs
rcl
out
add
jmp
lods
loope
loop
lods
xchg
and
adc
cli
test
lods
sub
in
push
mov
jne
cmp
push
jbe
sbb
lods
cmp
mov
dec
fwait
mov
dec
cmp
shlb
push
sbb
out
lods
adc
push
push
push
dec
mov
dec
nop
mov
data16
in
sarb
das
xchg
push
fisttpl
jge
orb
popf
mov
lods
fs
in
push
mov
leave
cmp
repnz
mov
popf
xchg
insl
adc
dec
mov
sbb
gs
xchg
push
incb
bound
das
sti
lods
jne
and
jle
fucomp
orb
scas
mov
in
pop
xchg
xchg
daa
mov
repz
fbstp
les
div
mov
push
idivl
stc
inc
in
fcoml
and
mov
xor
jge
test
not
adc
add
xlat
add
jle
add
inc
repnz
mov
jge
outsl
aam
inc
jno
add
mov
xchg
add
fisubl
fists
inc
cmp
scas
movsb
pop
aaa
push
je
insb
mov
sub
cmc
xlat
rcr
xchg
scas
mov
xchg
push
jo
push
fnstsw
cwtl
jmp
nop
sbb
pop
andb
nop
adc
push
pop
xor
rolb
nop
dec
mov
dec
cmpsb
pushl
mov
addr16
in
pushf
fistpll
roll
jo
push
mov
xchg
or
mov
enter
jb
std
mov
push
push
pop
or
push
dec
jle
mov
or
lock
sahf
sub
or
repnz
sti
mov
test
sub
pop
mov
daa
aas
addr16
mov
push
divb
shll
rorb
imull
pop
outsb
or
je
pop
mov
leave
cmp
push
push
int
add
inc
push
inc
cltd
nop
lahf
add
js
dec
pop
das
loop
roll
mov
mov
push
vpshab
mull
cmpsl
sbb
test
imul
mov
fldenv
int3
cltd
mov
xchg
or
push
push
lds
aaa
dec
out
dec
aam
inc
jb
jle
mov
adc
cmpsl
sbb
icebp
inc
xor
jl
fbstp
retw
rorl
mov
and
xorb
jbe
ret
xchg
pop
test
push
pop
fsubr
or
in
movsb
dec
and
stos
cli
lret
shl
mov
stos
test
fistl
les
lds
dec
scas
mov
outsl
add
dec
rcrl
xor
movsl
int
int3
jo
sub
mov
insl
sbbl
mov
and
scas
daa
xchg
aas
adc
loop
xchg
dec
into
imul
in
iret
mov
imul
pop
sub
dec
xchg
flds
lock
sbb
enter
push
lea
dec
lret
jecxz
mov
push
dec
daa
dec
fimuls
ret
add
adc
stc
notl
inc
and
cmp
daa
outsl
test
xchg
mov
ds
push
rcrl
push
jge
or
push
mov
mov
call
imul
mov
in
in
dec
shl
fisubrs
cmpsl
pop
subb
aad
mov
ficomps
and
les
dec
cli
cli
outsb
aas
repz
mov
and
xchg
add
dec
inc
out
push
aaa
add
loope
inc
sub
jge
or
push
je
mov
pop
or
xlat
lods
stos
xchg
std
mov
push
jge
mov
push
dec
mov
inc
xlat
mov
mov
push
fnstsw
cwtl
mov
outsb
pop
sub
fisubl
rcl
ficompl
lea
and
sub
add
or
push
arpl
hlt
pop
in
cmpsb
and
dec
mov
sub
mov
or
mov
lds
testb
mov
cmpsl
jbe
and
notb
adc
cs
out
dec
mov
jg
add
cmpsb
mov
pop
and
xchg
add
jle
fnstenv
xlat
push
shll
jbe
aaa
xchg
adc
sub
and
sub
repz
in
pop
mov
pop
mov
inc
clc
adc
push
cmp
xor
adc
mov
daa
notl
pop
dec
daa
js
insb
faddl
fwait
xchg
push
mov
xchg
xorl
cmp
roll
jg
test
fwait
cmp
cmc
jmp
in
test
lret
les
push
repnz
inc
xchg
insb
mov
jno
mov
inc
dec
lock
or
add
ret
stos
fists
inc
sub
fwait
dec
sbb
sar
and
xor
adc
mov
rolb
xlat
loope
xchg
dec
jno
leave
mov
lahf
xor
sarl
push
pop
aas
out
and
cmp
push
sub
fcomip
xchg
dec
loop
push
in
jmp
adc
xor
stos
sbb
shll
or
popa
pop
lret
fsubrl
xchg
mov
sub
idivl
adc
jbe
sbb
add
js
push
imul
or
add
popa
insl
in
mov
les
mov
insl
and
adc
xchg
ds
cli
imul
mov
enter
out
stos
movlps
fisubrs
out
ja
cmp
lcall
and
inc
subb
mov
adc
xchg
mov
mov
cs
jno
fbstp
or
sbb
popa
jl
sbb
std
fistpl
sbb
test
arpl
adc
shll
xchg
dec
push
ljmp
shll
test
test
mov
fdivrl
loopne
in
inc
adc
jecxz
js
xchg
sbb
sbb
add
mov
test
push
imul
bound
rol
les
and
test
jns
stc
enter
push
jbe
jecxz
cmpsb
jno
leave
sub
and
xorb
or
int
sub
mov
sub
push
loop
jae
loope
xchg
pop
pop
sbb
xor
mov
daa
jle
mov
mov
pop
leave
call
cltd
xchg
movl
fiadds
fdivs
imul
jb
leave
or
xor
shl
shrl
or
sbb
inc
fdivrl
or
outsl
fs
lahf
add
push
pusha
aad
nop
xchg
dec
sbb
lcall
fmuls
mov
push
bound
negl
shlb
sbbl
add
xlat
clc
pop
inc
lret
insl
mov
mov
xor
test
shrb
test
pushf
xchg
push
and
push
decb
add
jl
inc
push
adc
cmp
mov
ret
fucomp
gs
xchg
mov
ds
int
cmp
ret
or
scas
sbb
lret
movsb
outsb
leave
cmp
ret
pop
xchg
loope
sbb
rcr
js
cmp
cld
xchg
lret
mov
insb
aad
call
adc
shll
push
and
cmpsb
pop
imul
push
mov
or
and
mov
jo
fisttps
shrl
clc
movsl
sbb
mov
pop
cmpb
inc
cmp
add
mov
xlat
fisubrl
mov
neg
sub
inc
xor
pushf
arpl
fistpll
pop
jno
out
loope
mov
lds
mov
adcl
mov
jns
addr16
or
shrb
xor
pop
cmp
repnz
ds
xor
push
mov
cmp
pop
loopne
loop
xor
cltd
je
and
push
test
or
jge
test
lret
std
movsb
cmp
jo
imul
sbb
ret
or
lds
inc
out
push
cwtl
outsb
mov
stos
test
mov
outsb
push
out
fdivrl
clc
in
ret
in
dec
je
xchg
fisttps
test
sarb
jae
jle
je
or
aas
mov
pop
dec
jo
cmp
stc
lret
inc
dec
mov
push
aaa
in
xor
nop
lret
sbb
aam
dec
das
add
sub
mov
mov
ss
jo
dec
lds
or
jne
sbb
call
mov
mov
push
test
andl
xchg
cmc
enter
mov
push
pop
cmpsl
or
adc
sbb
ret
sbb
adc
xor
dec
clc
xchg
aad
cmp
lret
sub
push
cmp
faddp
out
mov
shlb
lahf
aad
push
pop
mov
out
or
scas
incb
and
xchg
movsb
mov
test
pushf
leave
rol
sarb
inc
sub
hlt
push
pop
ror
mov
xor
rcrl
dec
aas
pop
scas
pop
xchg
mov
xchg
mov
aam
or
hlt
xchg
es
push
cmpb
popa
pop
shlb
sbbl
push
leave
cltd
lods
sbb
or
sub
mov
sbb
in
cmp
pop
movsl
iret
arpl
dec
test
jno
inc
das
nop
mov
sahf
stos
out
jle
les
adc
ds
hlt
cmc
repnz
xchg
ss
dec
mov
test
adc
mov
pusha
xchg
lahf
mov
push
popf
and
mov
push
or
lret
das
mov
mov
jbe
or
fisubs
into
nop
mov
lods
cld
inc
add
mov
lcall
loope
mov
jns
dec
and
xor
cmpsl
call
stos
pop
into
mov
or
push
pop
push
pop
pop
test
mov
fidivrl
add
ror
sub
fcoml
or
lock
loop
aas
rcl
add
in
pop
js
adc
sub
loopne
mov
push
mov
testl
fptan
pusha
pop
mov
les
clc
out
jmp
test
mov
mov
nop
pop
cmp
jmp
lods
pushf
rorl
sbb
sbb
stc
mov
mov
out
das
ds
jmp
in
mov
add
sbb
and
mov
jno
jb
jb
shrb
mov
ja
mov
jno
or
ret
enter
sbb
push
cmp
cld
xchg
inc
pusha
testl
testl
xchg
popa
imul
adcb
shlb
imul
testb
inc
cmp
cld
sbb
xchg
add
jmp
dec
addl
add
dec
stos
enter
scas
jmp
scas
xchg
lahf
sub
xlat
sub
js
adc
jbe
mov
xor
add
les
push
outsl
xor
adc
inc
shrb
lcall
ljmp
hlt
pop
fnstenv
jg
xchg
mov
and
and
movsb
mov
in
xor
nop
ret
pop
movsb
cmp
adc
add
jo
mov
cld
add
sbb
jnp
dec
loope
mull
scas
pusha
je
rcl
out
inc
push
mov
xor
ret
jbe
out
stc
sbb
movsl
outsl
adc
push
stos
loopne
mov
or
test
ret
xor
or
jle
scas
test
xor
daa
mov
call
mov
lds
add
inc
out
jb
mov
loope
cltd
clc
faddp
rcr
mov
pop
insb
dec
push
sbb
mov
cmc
pop
add
sbb
negl
mov
and
leave
sbb
je
and
or
cmc
shlb
pushf
push
xchg
mov
outsl
pushf
cltd
pop
and
aad
xchg
cmpsb
adc
mov
popf
iret
jns
pop
add
scas
gs
cmp
cmp
sub
pushf
cld
icebp
and
shrb
adc
addr16
dec
jnp
mov
hlt
mov
cmpsl
jecxz
inc
pop
and
sbb
sbb
and
dec
jle
call
dec
xchg
je
cmp
sub
sub
ja
fs
push
int
xchg
dec
movsb
pusha
scas
pop
adc
push
push
enter
dec
in
ds
in
mov
adc
imul
jb
daa
int3
sbb
and
mov
sti
xchg
addl
pop
scas
xchg
xor
push
jns
sar
inc
xor
or
and
loop
inc
in
es
push
ljmp
cltd
push
lret
sub
gs
pusha
insl
dec
cmp
cltd
mov
dec
cs
sbb
std
out
dec
jno
xchg
leave
inc
xchg
mov
ficoml
inc
lret
bound
inc
jmp
xorl
sti
mov
shlb
cs
or
adc
rcll
or
push
push
in
mov
or
and
sub
ret
insb
adc
cmp
jl
sahf
insl
scas
lock
enter
iret
sub
push
xchg
lds
shrb
dec
jl
aad
add
sub
cltd
lods
mov
fs
pop
stos
push
ficoml
push
enter
mov
and
cmp
push
and
mov
test
and
not
rclb
fistps
add
daa
jp
pop
cmpsl
add
sub
cmp
nop
push
pop
sbb
scas
test
lret
jne
add
fsub
pop
ret
or
out
test
aad
ja
lret
xlat
cld
inc
xor
mov
sbb
test
negl
es
ret
ljmp
mov
pop
pop
dec
lret
lret
dec
mov
xlat
dec
movl
mov
fwait
dec
and
jp
addr16
mov
jmp
jnp
cmp
inc
dec
fidivs
add
and
shrb
loope
push
ja
jp
ljmp
and
hlt
sti
mov
fs
fisttps
sbb
mov
mov
xorb
daa
faddp
mov
jo
jg
jnp
test
pop
sbb
push
leave
lods
pusha
fcomps
pop
mov
popf
sti
mov
mov
mov
shlb
xchg
xor
sbb
add
push
push
repz
rcrb
or
cmp
pushf
test
add
int3
fcomps
arpl
lahf
arpl
shll
loopne
mov
dec
roll
jmp
add
bound
cld
in
pop
pop
inc
loop
test
jae
jecxz
fs
jmp
loope
cmp
mov
scas
imul
dec
mov
je
sbb
call
mov
sub
dec
jae
ret
call
add
lret
xlat
sbb
addl
xor
icebp
xchg
dec
nopl
addr16
dec
leave
fstl
ret
mov
aad
fidivrs
adc
icebp
pop
add
test
dec
ljmp
adc
or
or
stos
in
repnz
mov
push
jnp
es
out
mov
jg
in
xchg
mov
sbb
test
pop
xchg
dec
loope
push
cltd
js
repz
sub
stc
or
repz
sub
jnp
dec
jne
pusha
and
shl
xchg
std
movsb
jp
mov
sti
jmp
and
xorb
stos
dec
test
sbb
push
adc
sbb
mov
insb
lcall
mov
push
or
rolb
mov
dec
es
arpl
push
rcrl
or
ret
or
push
or
mov
inc
lcall
lcall
sbb
cvtps2pi
sbb
xor
inc
or
lods
shl
or
pop
pop
sahf
pop
sub
aas
fnstsw
or
jmp
mov
lods
fnsave
sbb
imul
adc
or
mov
gs
insl
sbb
stos
rcll
mov
std
lcall
push
ret
out
int
into
push
inc
jno
cmp
push
mov
dec
fwait
sub
lods
js
sti
pop
add
dec
outsl
movsb
sbbl
ficomps
fdivrs
jbe
xchg
stc
lods
push
repz
daa
add
fdivs
fadds
xorl
arpl
int
push
sti
xor
push
mov
add
adc
in
lods
or
jb
sbb
loope
adc
dec
jp
adc
add
mov
ja
in
add
sbb
dec
push
stc
adcl
sahf
cmpsb
loope
inc
mov
pop
push
mov
sub
push
jmp
xor
mov
push
dec
in
mov
mov
test
xchg
in
adc
faddp
sbb
xor
or
pushf
cmp
mov
lret
leave
dec
jg
cli
mov
dec
movsb
and
rcl
add
out
cltd
js
stos
mov
fcomp
cmp
mov
idivb
sbb
fistps
outsl
fsubrs
xor
repnz
sbb
stos
lods
fs
mov
in
scas
mov
mov
out
pushf
rcr
inc
cmp
test
cmp
push
inc
cltd
inc
cmpsb
pushf
and
outsl
add
sbb
test
jmp
rcll
mov
jl
xchg
xor
and
cmpsl
xor
dec
jae
push
jno
scas
pop
in
inc
mov
imul
lods
lock
and
or
ror
mov
les
je
test
cmp
add
lret
mov
les
add
adcb
and
into
mov
in
cmpsb
mov
push
lahf
scas
pusha
add
or
pop
adc
out
sbb
inc
add
or
push
popf
jmp
sbb
test
adc
and
int
add
movsl
dec
sbb
test
arpl
lahf
add
jecxz
in
insl
mov
xchg
std
in
outsb
lock
mov
cwtl
mov
jl
mov
xor
int
negb
jno
xor
loope
ljmp
mov
or
repz
stos
pop
mov
xchg
incb
jnp
mov
pop
stos
inc
pop
lds
mov
adc
movsb
add
mov
mov
ss
cmpsb
lods
lahf
gs
cmp
ret
gs
jg
cmp
test
loope
mov
xor
push
lahf
icebp
andw
outsb
inc
add
sarb
adc
jbe
cmp
stos
ja
jecxz
repz
or
mov
sub
push
enter
shlb
loopne
inc
test
xor
xorl
push
sahf
xchg
lods
out
fdivrl
xorb
xchg
sarl
sbb
popf
or
pop
rolb
in
aas
add
or
outsl
jae
pop
pop
or
mov
aad
mov
push
fdivs
ds
iret
out
mov
or
adc
inc
gs
add
dec
mov
enter
sub
mov
aam
inc
lods
push
cmc
xchg
pop
cs
leave
jnp
push
mov
xor
or
xchg
xchg
add
sbb
or
dec
jg
hlt
xchg
pop
icebp
push
mov
cltd
test
or
sbb
icebp
std
adc
lods
jl
mov
jbe
pop
hlt
or
inc
pop
cltd
xchg
mov
add
pop
and
add
jno
xor
sahf
scas
les
cmpsb
and
xor
or
lahf
mov
ljmp
push
scas
add
jae
jp
dec
cmp
and
fcmovb
into
leave
jne
dec
jno
sbb
rol
push
jo
cltd
xor
inc
push
mov
mov
cmpb
add
aam
and
and
inc
pop
or
dec
jb
fnstenv
jle
inc
pop
fnsave
das
and
push
adc
fstl
ds
and
test
push
mov
xchg
xor
aam
repz
dec
loop
test
fimull
push
mov
mov
pop
cli
incl
cwtl
cli
rep
mov
xor
mov
pop
sarb
sbb
jno
mov
pop
and
add
dec
cs
popa
xlat
ficompl
cpuid
xor
sbb
int
in
pop
mov
js
push
pop
jae
mov
in
mov
pusha
mov
ret
out
rorb
add
or
jp
cwtl
fsubs
addr16
xlat
mov
xor
movsl
insb
stc
call
pop
jecxz
icebp
test
dec
or
rdpmc
or
fcmove
arpl
jns
mov
imul
jo
insb
xchg
cmpsb
cmp
lea
repz
mov
jecxz
lds
jge
cmp
test
add
inc
nop
xchg
pusha
mov
xor
sbb
mov
and
push
popf
stos
mov
gs
fsubrs
pop
xchg
sahf
mov
pop
dec
sub
adc
mov
xchg
xlat
test
std
jb
push
adc
xor
out
call
jb
lds
fwait
inc
pop
cmp
out
and
cmc
call
pop
xchg
mov
test
shll
roll
inc
lea
pusha
inc
mov
and
sar
adc
stos
sub
sub
shr
lcall
inc
mov
insl
movsb
or
add
fdiv
bound
aaa
loope
lods
push
lock
sbb
add
mov
fwait
jmp
cmp
addr16
mov
ret
movl
call
adc
rcr
mull
inc
adc
sbb
pusha
std
sbb
gs
fs
idivb
xor
sub
jle
icebp
cltd
ds
dec
int3
mov
xor
jb
test
pop
lret
and
and
movsl
mov
ret
fcomps
out
bound
mov
mov
sub
enter
sarb
push
adc
rolb
pop
push
mov
xchg
cmp
adc
mov
ds
sbb
gs
add
fmul
cmp
mov
cmp
pop
dec
sub
or
lcall
repnz
fidivl
add
inc
pusha
xchg
stos
hlt
mov
aaa
adc
mov
fsub
fmul
jl
xlat
loop
cmp
jge
add
repnz
or
xchg
push
inc
mov
fistps
loope
inc
ret
cmc
jae
lahf
pop
add
lods
jp
int
cmpsb
xchg
xchg
mov
scas
or
loopne
aam
repnz
roll
sti
sbb
fwait
mov
repz
in
cli
add
or
pop
dec
stc
into
xor
stos
popf
dec
xorl
cld
adc
inc
pusha
fwait
lret
loop
idivb
and
mov
xchg
scas
popf
pop
gs
ja
cli
inc
inc
xor
push
xchg
mov
jecxz
xchg
repnz
std
cmp
adc
sbb
xchg
test
mov
pop
push
icebp
inc
jmp
inc
push
addb
inc
lock
out
mov
fwait
sbb
mov
enter
lcall
repnz
jno
ret
inc
mov
sbb
and
sub
lahf
cmp
aaa
test
sbbb
jns
add
mov
jno
ja
dec
push
or
mov
sub
addl
sub
rolb
nop
xlat
in
in
nop
push
xchg
out
lods
and
into
pop
xchg
xchg
xchg
push
adc
jnp
xchg
jns
rcrb
add
scas
shr
lea
mov
jle
addl
jno
sbb
sbb
sub
jb
or
mov
mov
sbb
mov
std
mov
jae
push
push
stos
lods
scas
es
cmp
cmp
out
push
dec
mov
cmp
push
xor
pshufw
cmpl
mov
out
push
mov
mov
hlt
push
jmp
mov
iret
add
jbe
mov
stc
in
stc
mov
dec
sarb
fwait
mov
mov
loop
bound
xchg
sbb
adc
adc
pop
rolb
jns
flds
and
xchg
hlt
xor
pop
aas
and
fxch
jl
dec
mov
adc
push
lods
push
cmp
cmpb
dec
xor
push
lret
mov
repnz
pop
test
sub
enter
in
mov
xchg
nop
test
icebp
xchg
add
dec
xor
mov
sub
je
push
mov
pop
mov
sub
cld
jns
and
ffreep
jg,pn
rorb
dec
or
outsb
cwtl
test
in
jg
jle
push
mov
cmp
loopne
adc
jecxz
mov
lea
xchg
sahf
mov
stos
xchg
add
insb
in
or
mov
daa
cmp
add
jns
and
xchg
cwtl
rcll
pop
scas
add
pop
in
out
push
mov
call
popa
hlt
inc
outsl
addl
fistpll
mov
jmp
xchg
mov
pushf
jo
fcmovne
pop
adc
cmpsl
mov
sub
outsb
stos
dec
lret
imul
in
push
jns
mov
imul
cmp
push
cmp
xchg
test
sbb
jg
jns
fnstenv
jg
and
subl
in
lret
ljmp
dec
dec
jmp
icebp
ret
inc
sub
add
ja
push
ss
push
lahf
push
out
scas
std
xchg
movsb
scas
shlb
jbe
lods
ds
jecxz
ret
mov
or
imul
cwtl
repnz
sbb
mov
pop
or
outsl
test
fmul
push
loope
stc
push
ljmp
and
adc
out
push
daa
pop
inc
aas
sti
scas
out
or
and
cmpsb
lahf
xchg
fwait
xchg
arpl
shrb
inc
popa
push
cmp
cld
jl
or
movsw
leave
sub
mov
xor
stos
dec
lcall
cmp
xor
push
sti
test
inc
out
xchg
adc
ror
cmp
cmp
js
sbb
in
pop
cmp
pushf
sti
stc
mov
mov
js
inc
jo
push
sub
bound
sbb
push
mov
sub
loopne
subl
inc
mov
add
out
stc
fldt
mov
imul
dec
xchg
arpl
pop
adc
decb
sub
rorl
cmp
testb
mov
ret
pusha
cmpb
mov
dec
or
arpl
fstpl
jb
jnp
in
jg
repz
cmpsb
dec
mov
push
xor
mov
cmpsl
and
pusha
dec
dec
pop
sbb
sbb
sbb
stc
ds
xor
adc
clc
mov
mov
lcall
fcompl
push
adc
mov
mov
or
dec
fdivl
jb
xchg
push
pop
pushf
mov
or
xor
sbb
aam
xor
xlat
lret
movsb
xor
and
sub
jle
mov
jp
nop
push
in
mov
or
data16
xorb
lods
jle
jp
daa
enter
negb
mov
pop
stc
sarb
adc
mov
cmp
cmp
lret
cmp
nop
add
test
fs
push
mov
jnp
test
cltd
ljmp
dec
inc
adc
pop
or
cmpsb
repnz
add
aas
lret
loop
fwait
sub
sub
jo
cltd
mov
sub
inc
je
fisubrs
cltd
jmp
xor
cmp
jmp
jne
pushf
pop
and
cmp
fs
add
repnz
mov
inc
push
lcall
dec
xor
and
pop
jmp
or
jecxz
loop
push
mov
and
fimuls
sub
sbb
sbb
fs
lock
cli
push
mov
jne
je
fmull
xor
sbb
mov
dec
sub
out
into
ret
ror
sbb
add
jle
sbb
and
mov
stos
std
and
clc
loope
cmp
inc
push
lret
xchg
jns
or
mov
mov
cmpsl
xchg
js
jmp
and
push
add
jb
cli
ret
sub
sbb
sub
bound
xor
js
lahf
cltd
mov
pop
push
jge
out
addr16
or
test
jbe
xchg
les
pusha
jo
pushf
bound
lcall
push
xchg
add
sbb
mov
mull
and
aad
push
js
jns
out
andl
jbe
and
test
jecxz
cmpsl
add
mov
xor
fildll
stos
add
fbld
shll
cmpsl
cltd
or
push
repz
popa
mov
jle
aad
xor
out
inc
or
add
or
push
out
mov
and
jl
cmp
lods
adc
sub
sbb
sub
mov
fistpll
pop
adc
cs
sbb
add
mov
hlt
xchg
into
lcall
out
mov
and
xor
push
mov
aam
out
lret
popf
or
mov
iret
stos
push
sahf
sbb
out
and
loop
add
std
lahf
cmp
jbe
pop
fildll
xchg
mov
test
jb
or
mov
cmp
inc
cmp
cmc
mov
aad
mov
add
mov
fld
stc
jns
adc
mov
sbb
dec
sbb
and
fidivrl
xchg
or
mov
push
mov
ss
cmp
or
inc
xor
cli
sysret
xchg
push
push
and
fsts
add
pop
mov
xchg
pop
or
push
xor
push
push
jg
test
loopne
pop
mov
lcall
xlat
shll
lret
pop
fistl
jmp
mov
jno
sbb
mov
jmp
adc
leave
xchg
inc
xchg
jmp
jnp
adc
addr16
nop
insl
or
fstl
jge
xlat
test
inc
pop
jb
adc
rcrl
adc
pushf
xor
rcrl
pop
rolb
and
xor
ljmp
jecxz
dec
shrb
cmp
pop
xchg
loop
scas
lock
aam
testb
ret
enter
mov
mov
lock
pop
test
xor
mov
js
or
imul
in
stc
lahf
ss
in
lahf
push
mov
or
in
outsl
cltd
mov
add
dec
sub
cmp
fsubrs
push
lods
xchg
dec
roll
pop
xor
int3
dec
das
jecxz
cmc
adc
orb
dec
push
and
push
out
mov
push
or
jnp
ja
jns,pn
push
les
xchg
out
dec
loopnew
adc
cli
sti
or
cmpsb
orl
jge
call
lahf
jns
cmpsl
mov
addl
inc
dec
repz
lea
mov
sar
adc
aad
addr16
leave
push
push
pushf
adc
popf
sar
add
pop
rorb
xor
mov
enter
repz
sti
jo
movb
xor
sbb
lret
xor
xchg
adc
repnz
rclb
inc
pushf
mov
dec
test
jne
xor
outsl
pop
mov
or
cmpsb
dec
inc
adc
stos
lea
push
int3
xchg
adc
xor
imul
xor
lcall
push
and
sarb
cwtl
test
sbbl
mov
inc
out
outsl
sub
or
mov
jns
insl
fcmovb
lahf
push
stos
adc
sub
or
dec
pop
rcrl
jne
aas
inc
dec
xor
xor
mov
or
popa
push
leave
add
adc
inc
out
jbe
adc
jg
test
inc
xchg
or
cmp
inc
pop
push
mov
sub
lock
outsb
mov
adc
fbld
shlb
lea
push
add
push
mov
xor
xchg
mov
mov
cmpsb
fisubrl
iret
or
div
ret
add
shl
push
xlat
ja
lock
xchg
mov
xchg
daa
hlt
push
add
sbb
inc
fs
inc
sbb
gs
xchg
in
cmp
pop
dec
aas
je
jl
inc
cs
nop
or
adc
jns
sbb
or
push
dec
or
ret
leave
push
adc
out
loopne
ljmp
stos
jnp
jmp
cmp
dec
push
outsl
cltd
mov
loopne
imul
in
fadds
xchg
push
nop
and
pop
repnz
testl
mov
clc
rcrb
rcll
scas
and
test
add
jb
cmp
push
jbe
pushl
dec
xchg
mov
and
js
int
outsl
js
jecxz
and
dec
ljmp
shlb
and
ret
test
add
prefetch
or
mov
fmul
insb
mov
mov
jge
xchg
xlat
jmp
or
push
movsl
push
orb
mov
push
or
loop
in
fmuls
xchg
cwtl
pop
mov
fistpl
stos
sbb
bnd
roll
lret
inc
lods
mov
sbb
neg
add
sub
rcrb
or
loop
xor
pushf
ds
nop
and
mov
mov
ljmp
dec
push
jno
xor
test
mov
inc
and
sahf
gs
mov
movsl
loope
push
or
loopne
or
cmpsb
fld
pop
cmpl
leave
pusha
xchg
imul
xchg
cmp
push
lds
jae
loop
add
jg
inc
jg
pop
jmp
shlb
jae
cmp
add
jp
mov
lcall
dec
cmp
icebp
mov
push
aaa
add
pop
or
adc
mov
add
or
pop
xorb
cmp
aaa
lret
into
jge
aam
sti
dec
repnz
out
lahf
jmp
sub
xchg
lea
std
repnz
mov
mov
iret
adc
ss
dec
mov
xor
addr16
xchg
int3
adc
and
cmp
insl
fsubrp
xor
ss
iret
sub
test
lret
cmpsl
popa
outsl
dec
mov
jmp
and
jnp
xchg
test
aam
push
clc
mov
shlb
dec
or
mov
and
mov
mov
jne
fcmovu
xorb
aam
fsubrl
negb
lds
scas
ljmp
insb
xchg
fxtract
iret
jmp
outsb
add
pop
cmc
ret
dec
movsl
mov
leave
mov
sbb
js
fistpll
sahf
test
add
dec
mov
push
mov
xchg
add
lods
sti
push
push
pop
mov
xchg
mov
in
andl
mov
ja
cwtl
mov
cmp
iret
inc
pop
adc
or
inc
xor
xchg
jae
sti
lret
mov
fstpt
jg
mov
cmpl
lock
mov
xchg
out
push
subb
movl
movsl
pop
inc
lock
sub
push
inc
outsb
cltd
arpl
xchg
jle
movsl
cmpsb
fists
and
lret
lret
aas
dec
and
and
jmp
push
mov
fisttps
mov
call
pop
inc
cmpsl
lock
mov
stc
outsb
dec
mov
adc
lea
iret
pop
or
into
hlt
add
inc
repnz
clc
and
push
icebp
ja
nop
or
push
xor
das
and
lret
aam
xor
dec
mov
gs
sub
negl
jmp
or
mov
pop
sub
xor
es
inc
popf
mov
pop
push
push
dec
mov
fldl
jno
mov
rcrl
jg
sbb
and
xor
or
dec
int
cs
mov
loopne
addl
jb
adc
mov
pop
push
mov
cmp
aam
xlat
jl
orl
cmp
jle
pop
popa
adc
js
pop
mov
loopne
mov
fistl
stos
mov
mov
and
pop
les
out
mov
fwait
cmp
push
mov
out
xor
fbstp
cmc
movsl
das
add
jno
and
aad
int
cmp
jl
stos
repnz
repnz
pop
iret
inc
fiadds
push
cmp
cmpsl
and
cld
jno
adc
add
jecxz
xor
lahf
out
int
adc
jg
push
add
mov
fsubr
inc
jb
mov
loop
outsb
std
cmpsb
sbb
or
push
jnp
movsl
pop
fptan
inc
mov
and
aam
movsb
push
dec
mov
imul
inc
divl
push
lahf
lock
dec
mov
dec
cwtl
mov
cld
sbbb
pop
inc
jle
push
insl
clc
pop
mov
cmpsb
push
stc
mov
cmpsl
ljmp
cs
std
mov
sub
cs
loop
mov
pop
shll
into
push
mov
dec
pushf
scas
ja
push
je
pop
in
orl
push
mov
push
scas
jnp
jbe
add
je
cmp
mov
inc
insl
add
add
es
je
mov
stc
out
pop
or
sub
test
loop
pop
xor
mov
push
mov
sahf
mov
call
stos
jno
xchg
sbb
adc
jmp
mov
subl
sbb
sbb
lret
push
push
mov
mov
adc
nop
fisubl
add
out
popa
fmull
push
nop
popa
cmp
mov
mov
fwait
test
outsl
out
mov
adc
or
das
adc
mov
pop
js
fwait
push
pop
mov
mov
adc
jle
out
shl
cld
rorl
mov
shlb
inc
lods
sub
fwait
sbbb
sub
adc
or
fisubrs
sysenter
add
sub
xchg
xor
and
dec
dec
mov
call
push
dec
sbb
loop
fsts
into
push
pop
sar
pop
mov
and
ret
cmp
stc
iret
arpl
daa
adc
xchg
mov
rclb
mov
jecxz
jge
aam
je
xlat
dec
pushf
inc
cwtl
add
mov
dec
test
jmp
notb
incl
int3
iret
inc
in
mov
cmpsl
sub
mov
out
cld
cwtl
mov
cmc
sbb
ja
bound
fs
andnps
pop
or
in
sub
xchg
and
pop
push
lea
cmp
xchg
mov
push
inc
fwait
and
push
rorl
lds
ljmp
fidivrl
arpl
ljmp
sar
testl
iret
outsl
or
mov
push
sbbl
push
pusha
xor
pop
ficomps
adc
jl
mov
inc
shlb
or
fs
je
sarl
lods
inc
fisttpl
lea
notl
popa
mov
cmpsb
cli
inc
testl
push
sub
icebp
jg
push
nop
add
cld
adc
ja
mov
aad
xchg
cltd
stos
fdivr
mov
add
xor
icebp
inc
mov
cmp
mov
adc
mov
dec
test
mov
outsl
cwtl
stos
icebp
jg
fwait
pop
xchg
mov
cli
dec
inc
pop
or
shrl
int3
gs
std
and
xchg
sahf
sub
lcall
xlat
mov
popa
test
dec
mov
test
das
add
xlat
dec
pushf
sbb
movsl
inc
cld
lods
sbb
xor
testb
dec
jle
aad
dec
mov
es
adc
cmp
jo
mov
aaa
clc
xor
push
inc
mov
clc
cmp
aas
cld
in
outsl
xor
pop
sbb
scas
inc
and
ljmp
dec
addb
std
arpl
add
fiaddl
sub
out
mov
loopne
ret
insl
lods
cmp
les
sarl
out
push
xchg
mov
subb
sbb
sub
mov
stos
scas
cmp
mov
imul
lods
mov
cmp
dec
rorl
or
scas
lock
mov
test
mov
mov
or
xor
imul
in
pusha
jb
rcll
sarl
or
pop
imul
loop
pop
sbb
and
loopne
sti
lock
data16
jns
xchg
rorl
or
mov
imul
jmp
sub
xchg
inc
idivb
ljmp
and
cld
add
test
add
out
mov
sti
out
mov
test
and
mov
mov
sti
add
scas
in
fisubs
insl
mov
push
jp
mov
cltd
loopne
adc
inc
movsl
fxch
add
mov
rcr
mov
sub
in
inc
pusha
add
inc
mov
xor
fdivl
cld
test
sbb
sub
and
pop
imul
xchg
pop
cmp
sbb
jne
add
ret
test
dec
es
mov
loopne
shrl
jno
pop
dec
xor
sub
clc
testb
rep
mov
mov
lds
push
xor
loopne
in
add
add
mov
sub
repz
mov
mov
fwait
stc
clc
hlt
popf
cmp
loope
dec
inc
mov
xchg
fisubrs
es
or
sti
call
jmp
add
xorb
cmp
outsb
cmp
cmp
scas
rcrb
sub
fdivr
mov
popa
out
shrb
in
jge
lret
dec
adc
arpl
sbb
in
cs
sti
aad
sub
cmp
fmulp
add
orb
push
call
call
xchg
inc
jl
in
fisubl
das
fwait
sbb
and
xor
ljmp
imul
xchg
cs
mov
adc
and
dec
mov
es
test
arpl
lods
jle
frstor
enter
jmp
add
xchg
je
push
inc
pop
aaa
adc
jno
cmp
inc
mov
cmp
rorl
push
out
jnp
cltd
cld
out
add
test
mov
hlt
aaa
jbe
into
sti
lret
dec
pop
call
out
scas
mov
xchg
stc
fiadds
pop
add
mov
mov
adc
int
mov
push
mov
pop
mov
mov
call
imul
clc
pop
mov
rcrb
out
mov
inc
sbb
out
xchg
xor
addr16
loop
pop
loopne
push
cmpsb
xor
sub
mov
mov
or
fisubrs
push
ss
inc
icebp
sbb
jae
insl
adc
pop
jnp
insl
subb
cld
adc
std
push
fsubl
xchg
imul
test
shlb
jne
pop
xor
repz
js
jo
dec
xchg
adc
aad
cmp
movsl
mov
or
insl
push
daa
imul
jns
fisttpll
xchg
adc
sarl
dec
sbb
lods
lret
repz
jmp
das
and
add
imull
push
jge
push
mov
je
js
loope
in
xlat
mov
inc
jb
dec
and
iret
in
movsb
mov
shll
cltd
adc
nop
sti
rol
gs
sub
mov
es
cmp
not
sbb
repz
xor
test
scas
cmp
mov
mov
aad
sub
mov
adc
mov
bound
dec
mov
je
call
pop
xor
xchg
and
mov
pop
loopne
enter
push
cmp
imul
test
mov
mov
mov
mov
or
repz
dec
jp
adc
jnp
mov
cmp
clc
inc
push
mov
aas
inc
mov
insb
sbb
inc
mov
xchg
lcall
repnz
xchg
push
xchg
push
cwtl
sbb
mov
mov
adc
push
mov
mov
int3
push
xor
inc
loop
cld
call
int
fisttpll
into
xor
dec
pop
divl
and
lods
cli
push
daa
scas
call
sbbl
xor
pop
arpl
jnp
jbe
faddl
mov
sub
inc
mov
hlt
aam
cmp
dec
mov
fstpt
aam
int3
xchg
aam
xchg
adc
bound
shlb
cs
ja
dec
push
aam
nop
lcall
mov
cmp
xor
jle
into
bound
test
inc
push
mov
ror
cwtl
scas
push
cmp
mov
lcall
and
dec
jbe
jnp
push
lods
push
div
shl
repnz
mov
jg
icebp
cltd
jle
jmp
jne
inc
mov
dec
dec
xchg
loope
xlat
or
movsb
or
pushf
adc
mov
and
std
sbb
xchg
inc
aas
dec
inc
push
cltd
sbb
ret
cmc
repnz
idiv
mov
sti
mov
xor
daa
aas
je
outsl
mov
in
add
pop
mov
out
pop
fldenv
push
jmp
int3
pop
mov
jle
inc
jne
sub
add
stos
lcall
and
iret
mov
inc
movsl
add
jb
call
pop
popf
or
dec
xchg
mov
push
push
mov
push
iret
sub
mov
dec
shll
push
push
int3
push
xchg
addr16
add
cmp
xchg
adc
shrb
adc
push
jnp
add
cmp
mov
sub
mov
or
fs
ret
jne
xlat
popf
lret
shld
xchg
arpl
jp
jge
fnstcw
flds
int3
out
xchg
aaa
es
int
xchg
outsb
push
xchg
cmpsl
notb
mov
cwtl
out
pushf
gs
inc
bound
ds
dec
mov
push
stc
data16
jp
push
jbe
xor
fsubrp
sub
mov
popa
and
xchg
mov
cmp
inc
jl
jecxz
push
adc
aad
ljmp
lcall
push
std
testb
sub
loope
adc
inc
mov
lret
in
stos
xor
sbb
fwait
xlat
loope,pt
push
mov
in
fdivs
mov
inc
or
stc
xor
fsubp
or
adc
call
insl
or
outsl
sti
cld
push
jbe
or
bound
cmc
bound
lcall
je
ljmp
loop
sar
sbb
lahf
fdivl
dec
int3
popa
clc
fucomip
xchg
jg
add
mov
lahf
cmp
fwait
aaa
xchg
imul
fcompl
or
lret
pop
mov
sub
shlb
and
xor
push
add
mov
mov
arpl
mov
push
imul
or
mov
cmpsb
cli
inc
or
cmp
movsl
pushl
mov
notl
jp
in
out
mov
es
sub
rcrb
ret
sbb
and
stos
push
pop
ret
push
test
stos
repnz
cmc
sub
jo
push
sub
inc
fists
sub
aad
pop
enter
add
dec
jno
sub
jns
or
xchg
xor
adcb
sub
in
sub
push
mov
cmp
add
add
int3
inc
stos
clc
push
sub
fmull
and
sbb
insl
dec
imul
or
das
push
and
mov
popa
add
mov
pop
sbb
cmp
insl
cwtl
adc
xchg
jmp
dec
fsubrl
rorb
and
imul
mov
dec
pop
xor
imul
sbb
jle
or
popf
je
pop
sbb
pushf
adc
cwtl
xor
incb
dec
je
push
or
adc
push
pop
rclb
mov
push
sbb
out
addr16
cld
add
sbb
jle
jb
push
xor
addl
xchg
mov
mov
sub
notb
aaa
sarl
shlb
call
pop
inc
clc
push
mov
fisubs
test
pop
mov
movsb
test
prefetch
cmp
notl
pop
mov
or
xor
jp
push
add
jo
gs
sbbl
dec
mov
aam
push
lods
loope
mov
cmpsl
adc
mov
mov
test
add
push
mov
or
cld
popf
cmc
popf
leave
test
leave
pop
aas
mov
mov
mov
addl
iret
enter
shrl
dec
rorb
xor
xlat
outsl
jmp
dec
sub
xchg
mov
push
xchg
jne
xor
mov
aas
ss
ret
pop
jg
and
icebp
popf
jae
sarl
inc
xchg
daa
add
sub
xor
testl
lods
imul
pop
lcall
and
jae
rcl
aam
fbld
out
out
push
xor
adcl
jmp
push
or
adc
lock
insb
sub
in
mov
add
mov
les
mov
push
jmp
pop
lcall
sub
mov
lahf
leave
outsb
pop
movsl
in
test
pop
call
or
imulb
mov
mov
fcompl
lods
loopne
adc
outsb
dec
aas
dec
pusha
jne
ja
idivl
out
sbb
arpl
popa
pop
jno
add
pop
dec
out
jl
mov
imul
int
pop
mov
inc
sti
mov
sbb
mov
loope
mov
jns
xor
ds
lea
push
aam
stos
sbb
push
push
pushf
adc
xlat
sub
in
push
cmp
mov
into
sbb
inc
sahf
fsubrs
push
int3
xor
mov
xchg
jle
loop
repz
push
stos
fwait
aad
test
jl
mov
or
fistpll
cmp
sub
std
xor
test
stc
sbb
notb
mov
lret
test
popa
cmp
je
push
out
mov
jae
out
test
xchg
xor
jno
sbb
repz
movsl
push
xchg
mov
iret
icebp
gs
mov
or
daa
inc
dec
mov
pop
hlt
fs
les
xchg
int3
mov
xchg
jno
std
xchg
mov
fwait
iret
and
push
or
sahf
dec
inc
fiaddl
pop
pop
jb
xor
into
mov
ja
and
int3
push
bound
shlb
add
push
pop
js
in
adc
movsb
push
int3
inc
scas
push
es
inc
jb
or
inc
cmp
lahf
call
mov
clc
inc
mov
jo
dec
outsl
cmc
adc
insl
scas
repz
sub
stos
pop
fwait
js
dec
div
loope
pop
mov
dec
mov
jo
stc
lcall
jl
pushf
inc
out
dec
push
jo
pop
mov
mov
int
out
imul
repz
mov
push
insl
mov
out
adcb
xchg
loope
scas
movsb
test
cmc
xor
insl
pop
aas
mov
ja
xchg
fwait
jbe
lahf
dec
sbb
cmpsb
or
dec
dec
add
ljmp
nop
add
imul
fs
bound
sub
jb
test
sarb
push
mov
pushf
cs
scas
sub
ret
jne
mov
cmp
xchg
in
aas
xchg
inc
and
lods
loope
call
inc
add
pop
in
xlat
adc
mov
lret
cltd
sbb
inc
dec
sub
les
jge
push
xchg
les
mov
push
sub
cs
and
jmp
in
rcrb
shlb
stos
dec
lods
fdivp
shl
test
sbb
dec
jno
rcr
rcrl
scas
inc
insl
push
aaa
fs
cmp
stos
scas
enter
jb
and
pop
jge
push
inc
mov
or
lret
mov
inc
sub
pop
mov
cs
sub
and
ficompl
fistps
pusha
imul
mov
ds
pop
lahf
in
es
adc
xchg
fldcw
sub
sbb
lods
int
or
push
imul
cmp
mov
lret
into
pop
shll
xor
std
imul
cmp
sbbl
out
dec
xchg
leave
cmpsl
dec
adc
stos
sub
adc
mov
lods
rolb
mov
into
daa
daa
xchg
loopne
push
pop
push
popa
daa
out
mov
cli
xchg
test
inc
jbe
mov
dec
dec
movsl
mov
jbe
std
push
jae
mov
adc
cld
fsubrs
jmp
xchg
insb
movsb
dec
cmpsb
js
fdivs
je
sbb
lock
lcall
cmpps
cmp
sbb
jne
subb
repz
mov
or
mov
xchg
xchg
test
push
jle
lock
js
addb
nop
aas
imul
mov
repnz
jg
adc
dec
insb
push
adc
and
mov
or
xor
and
sbb
jno
mov
mov
jbe
sub
mov
xchg
stc
cmp
inc
jnp
pusha
pop
les
out
test
pop
stos
sbb
or
mov
inc
cmpsb
sbb
mov
pop
pop
pop
enter
fidivs
arpl
les
mov
dec
push
jmp
and
sbb
xchg
or
pop
inc
adc
cmp
pop
roll
pop
jno
das
dec
stc
pop
in
bound
jne
popf
mov
clc
cltd
aas
or
adcl
pop
xchg
push
imul
and
cmc
or
mov
push
sbb
js
ss
outsl
jmp
jo
out
ret
or
adc
out
cli
jno
sub
jle
jnp
test
and
inc
fistpll
jnp
pop
lods
and
jae
int3
mov
sub
push
push
mov
enter
inc
cmp
lock
sbb
inc
aad
adcb
jge
leave
in
sub
push
ret
lock
hlt
xor
add
adc
stos
cs
mov
push
sahf
jns
push
xchg
jp
sub
mov
fwait
test
add
mov
movsb
push
mov
int3
in
insl
mov
jbe
dec
das
and
push
cmp
add
adc
or
out
in
bound
movsb
jge
jns
mov
cmp
or
jle
imul
or
or
mov
mov
shrb
inc
and
mov
adc
xchg
adc
test
mov
dec
adc
inc
les
imul
mov
imul
mov
outsl
imul
das
mov
insb
aaa
sbb
stos
mov
sub
adc
imul
mov
les
inc
int3
xchg
inc
loop
or
sub
cmp
dec
test
shll
in
sti
inc
xchg
out
adc
or
movsb
inc
push
into
lcall
sbb
aas
pusha
in
in
dec
pusha
sti
dec
pop
adc
cmp
add
ss
lock
pop
sub
testl
sub
xchg
push
loopew
push
inc
sbb
mov
dec
jns
lods
xchg
int3
xchg
jnp
inc
outsb
push
cmp
jp
inc
hlt
xor
inc
jle
sahf
loope
xchg
out
out
xchg
push
addr16
cmp
insb
fildl
sub
enter
lods
movsl
or
mov
mov
adc
or
and
ss
mov
mov
out
push
xor
ror
dec
add
mov
push
sbb
jge
clc
add
incl
test
mov
lret
aam
loopne
shrb
pop
clc
or
xor
inc
add
adc
xchg
loopne
and
mov
lods
fdivp
adc
je
in
lret
mov
sbb
out
inc
int3
push
popa
push
xor
add
jns
dec
and
add
or
div
pusha
sbb
out
sahf
or
mov
cmc
ljmp
dec
or
imul
dec
pop
mov
inc
xchg
cmp
and
loopne
xchg
jge
jo
aas
cmp
inc
jmp
imul
cmc
mov
into
fbld
mov
pop
andl
mov
sti
xor
sub
test
imul
int
dec
sysret
hlt
sti
ret
mov
stos
mov
rolb
aas
adc
mov
sbb
mov
dec
xchg
das
cmp
push
push
cmp
mov
mov
jnp
mov
fwait
push
and
xchg
in
in
jbe
mov
mov
lcall
jne
stos
cwtl
pop
ja
inc
add
test
cmc
push
stc
and
pop
aaa
push
xor
cmp
sub
pushf
dec
sbb
mov
mov
jae
iret
gs
adc
popf
aas
cs
jmp
and
push
push
sbb
xlat
cmpsl
push
stc
fisttpll
mov
xor
pop
cld
push
fs
lret
mov
ljmp
rcll
ds
add
pushf
clc
roll
or
and
xchg
push
mov
dec
pop
es
add
sbb
int3
pop
clc
daa
and
loopne
add
cltd
lcall
add
sti
test
rolb
add
pop
in
or
dec
push
fisttpl
cmp
shrl
adc
pop
inc
lret
mov
js,pn
push
dec
nop
inc
jge
fisttpl
shl
mov
aas
sbb
dec
cltd
xchg
mov
or
mov
popf
mov
jmp
jp
scas
clc
mov
xchg
push
das
lods
mov
fistpll
dec
setne
es
mov
stos
inc
push
cmp
mov
push
movsl
insl
bound
mov
xchg
cwtl
std
cwtl
mov
or
dec
movsl
mov
inc
lea
xchg
cli
xor
mov
mov
lret
in
ja
ret
call
stos
dec
xlat
xchg
cld
outsl
stos
push
xchg
aaa
jno
and
mov
movsl
fcomps
test
pop
mov
pop
add
adc
cli
jbe
cli
fwait
out
jmp
jo
cmpsl
jne
dec
or
pop
jl
jl
lea
sbb
out
insl
gs
inc
jno
lahf
in
cmc
inc
ja
adc
test
aam
jmp
call
mull
ficomps
and
fisttpll
mov
sub
mov
je
pusha
add
cli
mov
jae
push
addb
xor
mov
and
hlt
push
aad
ficoml
cmp
gs
into
add
cld
cmp
inc
mov
mov
push
or
cmpsl
sbb
adc
aad
out
xor
imul
jg
testb
cmpsb
pop
scas
xchg
outsl
pushf
pop
repnz
movsb
push
pop
push
adc
fsubrl
push
loope
pop
fistps
subb
aaa
push
loop
stos
cld
fdivrs
inc
sbb
jnp
call
mull
jl
cmc
or
pusha
inc
loop
sbb
and
sbb
xlat
outsb
xchg
movsl
scas
adc
push
push
fbstp
daa
jmp
sbb
cli
cs
push
lods
lea
sub
jae
sub
seta
ficompl
inc
dec
nop
out
cli
pop
cmpl
out
pop
cmpsb
push
jo
out
rcll
xor
int
stos
lret
jle
fildl
or
inc
dec
fxch
mov
outsb
int3
pop
push
leave
jmp
inc
fcoms
sub
sub
lret
sub
popa
les
lahf
dec
sub
inc
mov
ss
leave
push
aaa
fisttpl
xorb
repz
jecxz
sub
pop
add
das
push
cmp
scas
push
in
imul
push
mov
dec
icebp
into
jae
or
pop
out
pop
addr16
sub
sbb
inc
nop
loopne
adc
or
jno
mov
das
call
das
inc
jmp
inc
and
sub
in
les
imul
xchg
arpl
es
aaa
jecxz
add
test
sbb
lahf
fistpll
scas
push
mov
xor
jp
iret
xchg
cs
dec
in
lds
mov
loopne
dec
testl
repz
cmp
pop
push
popa
sti
dec
ret
and
cmp
fsubr
push
jo
and
pop
pop
fdivrl
nop
xor
les
xchg
jp
jmp
fs
out
insb
ret
jns
pop
inc
out
cmp
bound
jb
cmp
mov
xchg
mov
pop
sub
mov
in
inc
std
push
pushf
pop
sub
test
pop
fisubl
addr16
leave
mov
xor
fistps
xchg
inc
xchg
hlt
out
adc
lcall
pop
popa
pushf
ret
sbb
dec
xor
inc
mov
in
sbb
jo
in
dec
addr16
repnz
lds
das
mov
jge
xor
mov
std
fwait
sub
mov
frstor
push
sub
int
clc
mov
cwtl
push
movsb
stos
test
mov
fwait
mov
cmp
es
xlat
pop
imul
fs
fstl
das
mov
test
scas
or
cmp
mov
fwait
xchg
iret
jnp
lret
js
mov
adcb
rorb
imul
mov
nop
bound
in
fsubrl
pop
inc
test
and
ja
leave
or
pusha
xor
scas
gs
fcomip
or
push
push
jnp
fbstp
scas
scas
orl
push
cmp
test
mov
cmp
mov
push
inc
stos
add
insb
and
notl
clc
dec
xor
out
out
xchg
pushf
pop
cli
lods
pop
mov
xchg
add
xor
shrb
scas
movsl
mov
imul
cli
jmp
inc
pop
arpl
jg
pop
xor
jns
dec
xor
xor
inc
mov
sbb
in
pop
xor
out
mov
sbb
and
testb
test
jne
jle
jle
dec
jo
xor
repz
lods
mov
jl
fimull
adc
xchg
mov
inc
repz
mov
pop
lods
lcall
add
mov
mov
ds
inc
mov
or
push
filds
sbbb
mov
cmp
rcr
mov
mov
sar
cmc
ss
addr16
jle
lock
ret
or
fidivrl
push
js
mov
out
pop
repz
fsubrs
xor
rcrb
pop
push
and
insl
addb
sub
cmp
fisubl
test
sub
jmp
testl
insb
xor
cld
dec
movsl
pop
xor
fisubl
cwtl
cltd
pop
inc
daa
mov
dec
dec
jecxz
xorb
aam
das
pusha
pop
cltd
gs
mov
mov
jns
push
cld
jecxz
xchg
pushf
dec
dec
push
mov
out
push
loopne
sbb
ret
roll
lods
je
mov
add
inc
pop
jmp
in
pop
xchg
out
rcrb
sbb
cmpsl
lock
mov
fs
aam
and
jecxz
negb
cmp
add
fisubrs
arpl
mov
inc
adc
jo
mov
adc
or
sub
xor
push
test
sbb
test
xchg
pop
mov
gs
adc
fwait
movsb
repnz
inc
sbb
iret
sahf
adc
and
add
jg
inc
fnsave
xor
or
dec
xchg
mov
int3
nop
into
and
sub
sbb
popf
ss
sub
pop
add
mov
fbld
cmp
or
test
daa
xor
or
cld
lods
outsb
pop
xor
adc
xchg
cmp
loop
jnp
push
cmpsl
push
repnz
orb
fistl
insl
enter
icebp
cmc
std
mov
test
add
pop
cmc
xadd
fdivrl
pop
dec
mov
pop
mov
lcall
add
ds
push
cmp
mov
add
flds
aad
out
popa
push
add
in
jns
jecxz
inc
outsl
dec
addr16
idivl
pusha
or
fsubs
add
cli
sbb
out
pop
add
into
daa
mov
faddl
mov
mov
dec
and
cmp
inc
test
ss
cld
or
xchg
icebp
and
mov
mov
lahf
jno
jnp
jmp
lcall
test
xor
pushf
jg
mov
xchg
dec
loope
aad
and
mov
and
inc
out
cli
cmp
mov
jno
adc
add
jnp
cli
mov
lcall
ficoms
adc
lea
inc
mov
jb
fs
pop
xor
jmp
jns
mov
outsb
adc
call
repz
out
xor
and
nop
inc
addr16
int3
gs
cmp
scas
or
dec
pop
shrb
rcrb
in
popf
incl
sbb
mov
mov
mov
mov
lcall
pop
push
not
xor
fistpll
das
in
mov
add
xor
push
sbb
icebp
ljmp
push
shll
rcl
xor
cmp
repnz
sbb
data16
imul
push
mov
mov
mov
cmpsl
and
insb
rclb
cmp
push
lds
dec
sbb
into
cmp
sbb
lods
mov
push
sub
hlt
pop
and
popa
xor
inc
push
cmpsl
mov
mov
adc
sbb
and
das
into
imul
xor
mov
cmp
nop
adc
movsl
mov
push
rorl
fsub
stos
ss
pusha
add
fwait
mov
ret
stos
or
popa
or
ret
pushf
pop
sbb
push
cwtl
xchg
std
rorb
les
jae
pop
and
bound
sbb
push
and
out
dec
push
test
not
mov
jmp
add
aam
mov
dec
cld
mov
mov
bound
std
mov
pop
and
out
imul
std
xor
mov
xchg
adc
jbe
mov
rcrl
jnp
aaa
adc
outsb
adc
lret
mov
insl
sbbl
adc
sub
shrb
push
inc
sbb
mov
lods
cli
pop
mov
xor
mov
pop
dec
movsb
push
inc
cmpsl
add
and
ss
inc
cmp
cmpb
icebp
pop
and
jecxz
and
das
fstpt
roll
adc
xor
mov
cmp
push
add
mov
mov
pusha
fs
lret
xor
mov
sbb
xchg
mov
in
push
lods
call
or
sub
popa
stos
xor
mov
add
roll
lahf
sahf
adc
fsubl
fadds
test
lret
cmpsb
popa
mov
mov
andb
out
mov
mov
lods
scas
jbe
in
ljmp
mul
push
sbb
jno
xchg
inc
jno
into
lret
mov
dec
movsb
in
scas
pushf
rolb
daa
ficompl
or
jnp
sbb
add
push
mov
xor
lds
insl
and
sub
push
mov
push
sbb
or
data16
cli
outsb
repz
shll
subb
icebp
mov
inc
clc
or
test
ss
sub
push
xor
les
sub
negb
pop
cli
stc
xor
sub
xor
ljmp
adc
or
mov
addb
sub
stos
sub
inc
xchg
push
xchg
push
lcall
mov
out
aam
aad
mov
neg
xchg
add
xor
xchg
adc
cmp
rorb
sbb
xorl
stc
js
inc
mov
sbb
add
shl
pop
sbb
cwtl
in
pusha
popa
mov
sbb
push
fistps
rcll
xor
pop
or
int
loopne
rclb
vcvtps2pd
push
repz
insl
cltd
or
dec
or
and
push
ss
stc
scas
out
fsubl
dec
mov
stos
gs
pop
sbb
inc
or
ss
xchg
mov
sbb
lods
lds
in
mov
lock
addl
push
lret
jmp
jo
fs
cwtl
pop
int3
divb
push
popa
jle
mov
jae
dec
mov
xlat
jge
dec
mov
inc
mov
mov
dec
jo
jp
adc
call
xchg
mov
out
and
push
inc
in
xchg
fcompl
inc
fldl
pop
xor
rclb
movsl
sub
jno
leave
xchg
lods
js
jecxz
push
pop
pop
mov
fwait
mov
sub
push
aaa
xor
mov
and
ja
data16
jbe
mov
lods
xchg
mov
repz
sbb
shl
fmull
ret
mov
xor
fs
loope
jns
fs
mov
shlb
adcb
xor
sbb
mov
xchg
cmpsb
in
imul
shll
stos
cmp
mov
add
jb
xchg
movsl
pushf
push
bound
push
mov
adc
imul
stos
and
arpl
pop
pop
out
dec
test
ss
cmp
adcb
mov
xor
push
insl
sbb
jl
xchg
pop
sbb
or
sub
orb
dec
push
out
push
xchg
rclb
es
adc
fcom
push
sbb
fisubrs
jp
push
pop
int
xor
sarl
adcl
test
mov
add
mov
push
clc
cltd
cmp
shl
xchg
stos
popf
sbb
jne
adc
shll
icebp
in
sti
mov
mov
lods
pop
mov
test
pop
mov
adc
cmpsl
cmp
in
out
ds
fisubrl
sub
cmpl
push
repz
xor
int3
push
cmpsl
fwait
in
outsb
mov
test
and
in
ret
aam
pop
loope
bound
mov
aam
ret
inc
in
sub
cmpsb
push
rcrb
ja
or
sbb
dec
lods
xchg
jmp
fcompl
xchg
pop
sbb
sarl
mov
ret
xchg
ljmp
jg
jo
out
loope
sbb
jle
fmul
rcrl
aad
nop
push
mov
mov
int3
push
aas
xchg
imul
adc
or
push
outsb
test
add
xor
dec
sub
push
xchg
js
jecxz
out
loope
xchg
push
and
orb
lods
test
xor
ja
mov
xchg
and
in
andl
js
loope
pop
dec
and
sbb
mov
mov
shlb
insl
ficompl
insl
push
das
sbb
mov
mov
push
adc
cltd
lahf
jnp
enter
jl
push
call
ja
or
sahf
mov
xor
icebp
les
add
pop
cmp
enter
add
jae
jnp
ret
fwait
out
add
xchg
cltd
adc
in
cli
push
insl
or
clc
ss
push
lahf
cmp
iret
jno
adc
mov
ljmp
xchg
jb
sub
test
pop
xchg
pop
xor
jp
dec
sub
dec
dec
adc
arpl
or
pusha
push
mov
inc
xor
cld
lea
xchg
and
movl
sub
add
or
test
sbb
lcall
mov
cmp
lahf
cmpsb
pop
lahf
sarl
loop
cmp
pop
mov
mov
add
loop
dec
or
int
hlt
ffree
push
call
mov
sub
dec
mov
out
fldt
add
cltd
mov
cmp
clc
xor
imul
fsubs
or
mov
pop
loop
hlt
xchg
sarb
sub
jmp
and
mov
push
pop
das
mov
subb
xchg
cmp
xchg
or
mov
xchg
jecxz
fnstcw
movsb
jl
inc
in
mov
mov
cmp
jl
cmpsb
pop
cs
call
mov
adc
adc
cld
xor
pop
mov
pop
fisubl
push
popa
xchg
insl
ss
adc
sbb
loopne
int3
aad
jo
sbb
add
js
je
push
pop
push
mov
rolb
std
dec
xorl
pop
sub
add
nop
fwait
sbb
popl
loopne
lahf
sti
arpl
mov
mov
mov
mov
jbe
mov
push
add
mov
mov
scas
fiadds
mov
nop
stos
mov
ret
xchg
sbb
and
cld
pop
jne
xchg
imul
mov
sarb
fldl
cmpsl
cmp
push
lret
fidivrs
add
aam
rorb
mov
ss
cmp
je
out
add
mov
pop
test
shrd
xlat
out
mov
xor
mov
stc
aaa
pop
xchg
clc
mov
sub
rolb
adc
mov
jmp
xor
hlt
mov
sahf
xor
fsubrs
loop
sbb
in
xchg
mov
sahf
add
sbb
cmp
aaa
and
daa
push
subl
hlt
and
insl
jmp
sbbl
inc
pop
unpcklps
and
rcr
loop
or
xchg
lahf
andps
push
sub
mov
div
psrad
sub
popa
icebp
repz
adc
sbb
fisttpl
push
aam
out
pop
movsl
inc
stos
push
outsl
pop
fwait
stos
aad
fnstenv
stos
lods
and
xchg
pop
jne
cmc
and
sbb
mov
es
adc
mov
mov
scas
or
shr
or
test
shll
bound
addb
shl
mov
arpl
loope
and
fwait
xchg
rorb
jp
inc
cmpsb
jbe
xchg
call
pop
sbb
js
or
mov
xchg
loopne
lea
xchg
les
outsl
lcall
js
mov
add
push
pop
jp
ss
xchg
mov
add
fnstcw
add
sub
cmp
add
mov
js
xor
out
ficoms
push
cmp
divb
shrb
not
negb
mov
sti
mov
adc
addl
ret
aaa
negl
inc
xor
inc
shl
cmova
dec
push
loop
sub
jge
inc
mov
lods
push
or
ficoml
test
mulb
enter
lret
pop
and
arpl
and
mov
inc
add
push
pop
and
inc
aas
loope
sti
es
int
ljmp
neg
loope
mov
cmp
xor
xchg
andb
rorl
out
and
lods
and
or
mov
jno
mov
adc
push
dec
mov
inc
lods
mov
push
add
lods
fwait
and
aam
int3
push
fcompl
je
ja
adc
or
loopne
jnp
test
xor
out
sub
jns
mull
mov
xchg
fs
cmp
inc
repz
or
frstor
dec
out
cmp
add
lcall
mulb
ja
adc
cmp
sub
jne
test
ds
ret
lea
rol
xchg
loop
xor
out
inc
ljmp
lods
insb
dec
and
add
mov
and
jl
sub
in
push
mov
pop
fmuls
xchg
jns
add
push
push
repnz
scas
mov
aad
or
xor
mov
fisubs
push
cmpsl
nop
adc
mov
test
scas
push
cmp
push
cld
xchg
jb
stos
sahf
mov
adc
cld
or
aaa
and
jb
pop
test
popf
mov
inc
movsb
addr16
cwtl
arpl
decb
adc
cmp
adc
cltd
pop
pushf
lods
shlb
push
jnp
add
jg
fldcw
sbb
int3
or
and
mov
or
lret
sub
adc
loopne
cmp
push
testl
jle
mov
cwtl
and
call
scas
add
push
and
push
js
jnp
loope
jbe
cmp
xchg
push
lds
xor
push
pop
lret
push
and
outsl
pop
lods
lea
fadds
leave
pop
lods
pop
js
xchg
and
sub
aam
rclb
test
cmp
mov
mov
pop
jns
push
shl
xor
test
mov
sbb
out
out
cmp
loopne
out
pop
cmp
pop
test
jne
fmulp
xchg
subl
cltd
cmp
fs
mov
or
mov
mov
xchg
xchg
stos
scas
out
fbstp
das
cmp
sub
out
jns
stc
imul
jmp
loopne
notrack
ror
push
mov
inc
push
aas
mov
stos
icebp
inc
mov
mov
mov
fsubrs
fisttpl
int
add
rorl
mov
pop
popa
mov
sahf
cmp
rcrb
mov
testb
clc
rorl
sbb
pop
add
les
mov
jmp
cltd
pusha
and
adcb
idivl
divl
pop
adc
pop
push
jg
enter
sub
mov
mov
inc
ja
push
js
dec
jae
push
jnp
test
pop
xchg
jl
mov
xchg
sub
cli
sbbb
or
sti
flds
out
lret
fldl2e
sbb
test
inc
test
aaa
jmp
test
mov
stos
ss
lds
fnsave
mov
jns
add
js
out
mov
jnp
sbb
mov
push
push
push
aad
sub
xchg
stos
mov
dec
fldenv
jne
mov
or
sub
mov
jbe
mov
andb
xor
mov
out
pop
mov
push
cmp
mov
loope
mov
cmp
inc
test
xor
insl
sarb
cltd
jp
jecxz
jg
or
rcrb
lcall
call
xchg
mov
lcall
push
test
cli
inc
inc
lods
cmp
int
sahf
mov
mov
jnp
sub
jp
clc
lret
movsl
int
ror
mov
mov
test
mov
mov
pop
sub
pop
jge
or
or
lds
pop
lea
and
adc
and
xchg
popa
data16
xchg
mov
cmpb
lret
jg
aam
fsubrs
scas
cli
fsubrs
and
imul
mov
mov
push
rol
ret
xchg
jo
icebp
mov
sub
adc
pop
xor
dec
cmp
out
cmc
xor
adc
mov
lods
cmp
test
lcall
push
mov
sbb
push
sub
jns
repnz
int3
lock
sti
inc
pop
enter
and
icebp
stos
dec
push
xor
lods
out
lods
jnp
push
or
pop
jb
loope
dec
xchg
mov
movsl
out
and
push
neg
mov
cwtl
inc
sub
dec
pop
mov
push
sti
xchg
stos
or
and
xchg
or
divb
jmp
add
jno
leave
imul
jg
mov
or
xor
cmp
cmpsl
dec
decb
or
and
out
fwait
and
cli
lods
lods
mov
mov
adc
inc
outsl
idiv
xchg
aas
jecxz
fdivs
xchg
scas
lea
fwait
mov
sub
cli
mov
ficompl
testl
dec
push
cmp
rcrl
jg
sub
negl
sub
and
fisttpl
jb
dec
fdivrs
cmpsl
jl
inc
lock
sub
mov
push
dec
scas
rcl
pop
push
repz
jns
loop
sub
cmp
sub
cmc
jo
adc
aad
mov
lret
lea
in
les
jno
out
bound
mov
fidivl
fisubl
lahf
push
push
xor
mov
pop
and
xorb
mov
jmp
mov
icebp
das
repnz
jecxz
xor
xor
js
mov
bound
and
rclb
mov
test
movsl
fiaddl
fwait
jae
lahf
cmp
cmp
ds
cld
jg
lock
shll
repnz
mov
jge
mov
leave
in
pop
cwtl
popf
adc
mov
jo
lcall
jns
add
std
subl
sti
xor
cmp
mov
push
xor
jno
jne
mov
out
mov
mov
daa
icebp
cmpsl
imul
aad
add
int
xchg
shr
mov
jle
bound
adc
dec
fs
pop
stos
mov
int
push
mov
push
sbb
push
mov
mov
sub
cmp
cmp
or
cltd
bnd
push
mov
int3
cmp
jo
mov
aam
ret
push
stos
out
jmp
jmp
rorl
pop
dec
pop
mov
add
sbb
push
or
xchg
rorl
fisubrs
clc
push
test
aam
mov
movsl
mov
dec
lds
or
out
daa
jo
push
pop
inc
fistpl
mov
sti
out
xlat
and
aad
dec
sub
mov
lea
test
popa
push
cmp
inc
sarl
aad
xchg
and
inc
jae
cmp
mov
movsl
ret
pop
pop
inc
ss
fidivrs
add
into
clc
pop
xchg
or
ret
fistpll
loope
and
push
mov
push
mov
int
sub
scas
subb
push
push
or
push
scas
mov
sbb
adcb
std
scas
sti
or
or
popa
scas
hlt
dec
enter
add
outsl
sbb
in
push
push
out
sub
add
stos
cmpsl
sub
bound
adc
scas
jo
hlt
push
lds
fldcw
sbb
dec
testl
sub
cmp
inc
sbb
jl
idivb
lock
xchg
mov
mov
jmp
movsb
stc
inc
fwait
cld
push
pop
cmp
push
loope
push
lods
in
repz
fiaddl
stos
jg
dec
push
in
push
cs
sub
cmp
stc
sbbl
push
mov
mov
pop
mov
movsl
and
jp
lcall
mov
dec
js
mov
sbbl
cmp
pop
jl
insb
cli
sti
dec
pop
push
icebp
in
adc
xchg
lds
int3
outsb
sbb
and
lahf
xchg
cs
lahf
push
dec
cmp
jg
fdivl
loope
push
stos
cmp
pop
cmp
rorb
insl
mov
fidivs
test
or
stc
sbb
xor
and
add
jp
sarb
inc
sub
int3
lock
lahf
in
and
dec
push
repnz
cld
pop
or
es
xchg
ljmp
xchg
xor
adc
jmp
hlt
jno
nop
sbb
pop
movsl
movsb
sar
fstpl
mov
test
or
popa
mov
pop
ror
and
mov
stc
sti
sub
mov
pushf
xor
mov
les
cmp
scas
pushl
cmp
adc
add
cs
sbb
sbb
sub
xchg
jnp
inc
mov
ljmp
dec
rorl
rcll
jns
outsb
hlt
rorl
cmc
lcall
cmc
cmp
hlt
sub
jo
sub
mov
in
daa
push
roll
clc
loopne
jns
test
mov
insl
ds
mov
dec
mov
or
dec
xchg
and
stos
cmpb
mov
packssdw
fistps
jo
imul
add
data16
jg
pop
movsb
add
popf
imul
pop
daa
jae
leave
dec
mov
mov
jae
ret
cmpsl
iret
not
dec
jge
subw
or
and
mov
movsb
pop
bnd
test
cmpsl
movsl
mov
outsb
leave
lods
mov
pop
test
rcrl
stc
test
sub
outsb
and
inc
imulb
test
jno
and
push
add
cs
push
out
rorl
sbb
dec
inc
or
and
fsubl
cs
mov
xchg
addb
dec
sbb
testl
xchg
inc
fisttpll
fsubr
test
outsb
xchg
std
cld
leave
repnz
ret
ss
jle
dec
icebp
inc
push
cmp
and
imul
xor
cmpsb
xor
jl
xlat
fucom
mov
dec
adc
add
clc
mov
mov
and
and
mov
icebp
xchg
sarl
add
dec
aas
lahf
push
stos
dec
xor
icebp
outsl
popa
and
cmp
or
std
cmpsb
jp
inc
faddl
lock
jmp
movsb
mov
shl
mov
imul
pop
dec
aas
mov
xor
sub
jl
repnz
gs
pop
mov
sub
lods
rorb
xchg
lar
das
jbe
int3
das
in
outsl
lcall
scas
ds
adc
xchg
adc
cmp
roll
jb
nop
lahf
cmp
xchg
or
pop
jo
addr16
icebp
scas
push
pop
xchg
fucom
shr
or
loop
xor
fidivl
fidivl
jns
sbb
scas
pop
fwait
bound
movsl
jge
xchg
mov
and
ret
dec
loope
xor
jb
pop
movsb
cmp
xor
jo
insb
pushf
cltd
repnz
idivl
lret
fildl
jecxz
dec
sub
mov
pusha
mov
jbe
add
lahf
js
dec
add
pop
xor
sbb
std
enter
inc
sub
stos
sub
lea
mov
inc
loope
jp
cmpsb
xor
rcll
mov
or
lods
movsl
jne
adc
pop
outsb
dec
inc
xor
pop
cmpsl
std
repz
pop
test
xor
sahf
mov
pop
sub
sbb
orl
cmpb
push
fwait
adc
sahf
dec
cmp
xchg
cmp
mov
inc
mov
xchg
inc
mov
mov
shrl
ds
test
mov
jno
les
inc
clc
push
mov
mov
sbb
in
push
call
mov
and
add
fists
lock
stos
icebp
je
leave
xadd
cld
xchg
js
mov
fisubs
cmp
bound
mov
ret
outsb
jp
and
xchg
punpcklbw
dec
xor
adc
jno
jl
int3
xchg
addr16
cwtl
test
insl
and
es
shl
mov
les
lahf
shrl
dec
jbe
loope
call
idivb
sbb
and
adc
out
int3
lret
add
or
rol
or
dec
mov
cmp
nop
cmp
or
out
mov
pushl
lahf
je
in
mov
fs
out
fisttpll
dec
out
stos
outsb
push
ret
and
je
imul
adc
mov
test
in
push
xchg
dec
jl
arpl
in
test
loopne
ss
xchg
dec
test
sti
in
nop
sbb
pop
repz
mov
cmpsl
sbb
xchg
incl
repz
xchg
dec
xor
xchg
stos
lret
cs
dec
dec
cmp
js
cwtl
addr16
mov
cmpsl
aaa
cmp
jnp
cmovb
rcll
scas
outsl
mov
pusha
sub
sti
aad
dec
xchg
inc
xor
jle
in
sbb
and
add
xlat
mov
sub
cld
fildll
loope
testl
cli
arpl
shll
insl
add
xor
pop
cwtl
fdivs
in
adc
std
or
bound
or
data16
ljmp
mov
icebp
add
push
xchg
ret
lds
stc
sub
test
jns
add
jae
gs
out
push
int
dec
sub
or
xchg
or
push
in
jns
xchg
jg
je
ret
push
cwtl
movsl
fstpt
jecxz
cmp
xchg
cli
lcall
test
push
movsb
dec
mov
mov
cwtl
loope
movsb
out
nop
or
test
mov
mov
and
xchg
cmc
pop
dec
jecxz
js
loop
sbb
dec
dec
xchg
enter
sbb
aaa
mov
adc
inc
insl
out
mov
rcrb
stos
scas
sahf
jl
loope
test
cmp
cmpb
test
rol
shrl
mov
mov
repnz
lock
lcallw
rsm
sarl
repnz
inc
xchg
xor
sbb
jmp
xchg
xchg
js
shl
mov
hlt
jnp
xlat
ds
gs
test
mov
mov
jnp
fdivl
and
mov
adc
fstpl
mov
pop
sbb
pusha
lea
push
and
pop
dec
jnp
xor
cs
or
mov
or
and
sub
jg
pop
or
js
dec
cli
lret
cmpsl
dec
push
mov
inc
pop
xor
ficoms
mov
aam
out
daa
pop
cld
adc
stc
test
add
fimull
pusha
lds
jle
rcrl
cmp
push
dec
pushf
mov
movsb
cmp
pop
rol
leave
imul
jbe
adc
movsb
xor
ss
jge
jecxz
add
outsl
xor
lods
rorb
mov
or
ss
inc
syscall
mov
sub
push
cltd
fsubr
sub
cmp
es
repz
inc
daa
xchg
xor
pop
inc
orl
pop
adc
xchg
push
and
mov
jns
dec
sbb
popl
cmp
and
ja
pop
adc
xor
in
cmp
pop
fnstcw
out
sub
jecxz
mov
sarb
add
lret
ljmp
aas
loop
push
mov
sub
notb
and
iret
inc
arpl
jb
and
jl
stc
push
mov
cmc
pop
fnstcw
mov
ss
sti
jle
outsb
jmp
add
pop
xchg
lcall
push
adc
push
loopne
or
or
cmc
push
pop
and
and
ror
push
cmp
lds
mov
mov
add
add
mov
mov
cmpsb
sbb
mulb
lahf
mov
jecxz
or
push
mov
ds
ret
ds
and
and
sbb
cmp
xor
pusha
je
push
dec
sub
repz
sbb
adc
add
add
pushf
frstor
std
and
push
jb
xor
or
add
out
pop
test
repz
lods
jns
xor
cs
mov
dec
mov
inc
add
mov
fsubl
push
or
xor
std
and
sub
jmp
or
popa
int
popa
out
adc
push
movsl
or
lock
lds
jmp
dec
sahf
mov
lret
mov
jp
and
adcb
xchg
jge
push
popa
shrl
mov
out
dec
jecxz
out
insb
stc
and
fldt
es
jne
fiadds
cmc
lahf
ljmp
adc
stc
adc
popf
int
mov
fwait
xlat
mov
pop
inc
pop
mov
movsb
mov
or
pop
sbb
sub
or
cmpsl
fistps
dec
push
cmp
pushl
int
lods
or
test
add
mov
push
adc
push
repz
bound
cmp
test
shll
shrb
mov
into
inc
cltd
xor
cmpsb
sar
cmp
mov
mov
out
mov
xchg
ljmp
jns
inc
mov
fsubrl
adc
addr16
push
std
addb
lea
push
fildl
ret
dec
fmull
into
push
or
dec
insl
add
repz
dec
cmp
jg
inc
leave
iret
into
and
into
mov
xor
mov
mov
lea
in
xor
jne
daa
shlb
or
les
cmpsb
lahf
and
sub
bnd
xlat
lds
scas
sub
sbb
mov
xchg
ja
xchg
mov
jp
push
add
shrb
inc
pusha
xor
test
dec
push
roll
add
cmpsl
std
mov
movsl
lds
ret
pop
cwtl
test
mov
incb
push
jl
mov
hlt
idivl
xchg
fsubr
add
mov
jmp
or
cli
pop
rcrl
fisubrl
les
nop
popa
add
movsl
and
inc
aad
sbb
pop
orb
data16
pop
mov
mov
jae
loop
mov
sti
outsb
pop
sbbb
pop
dec
sub
out
cmp
inc
aas
scas
inc
sub
dec
xor
and
ds
test
dec
xor
scas
lods
cmc
push
aas
cvtps2pi
push
lcall
int
je
mov
adc
xchg
loope
leave
gs
inc
jg
lcall
movb
out
stc
dec
add
das
push
and
out
cmp
inc
pop
and
insl
imul
ficoml
inc
add
lds
push
lcall
lret
ja
cmp
aas
jp
xlat
xor
pop
inc
cmpsl
loop
bound
or
push
adc
jno
adc
inc
xor
jae,pn
leave
pop
xlat
loop
mov
and
sub
jno
fists
cli
mov
stos
pushf
jmp
and
xchg
xchg
lods
mov
mov
shll
or
adc
pusha
cld
pusha
xor
test
jmp
push
sbb
inc
mov
jb
loop
pop
mov
ljmp
jl
pop
dec
imull
adc
push
in
nop
mov
and
mov
xchg
jae
adc
push
loopne
sub
mov
iret
data16
fwait
dec
jmp
outsl
pop
loope
mov
jb
sbb
scas
ds
rcr
into
pop
inc
fcomip
jecxz
push
jae
jmp
mov
pop
shlb
test
adc
pushf
fnstenv
pushf
fldenv
test
clc
je
adc
lcall
jb
jle
lea
lahf
loope
pop
out
cs
inc
jecxz
mov
das
cmpsl
adc
shll
mov
shl
mov
mov
rcrb
mov
mov
iret
or
mov
adc
pop
sbb
push
jae
xor
lcall
inc
mov
hlt
mov
repz
dec
bound
movsl
mov
sub
jo
je
sbbl
out
stc
enter
lods
mov
xor
icebp
aad
int3
andl
out
push
mov
pop
fisubrl
lods
insb
movsb
lret
fbld
int3
rcrl
daa
dec
and
dec
ret
dec
imul
loopne
decb
incl
mov
into
gs
fisubrl
cmpsl
sbb
call
adc
add
dec
arpl
cltd
movsl
adc
pop
iret
sub
inc
dec
dec
dec
clc
bt
fbstp
jp
or
pop
cmp
xchg
or
das
sub
dec
pop
sub
sub
xchg
push
mov
jmp
jp
mov
and
test
pop
aaa
gs
in
mov
mov
out
mov
cmp
mov
mov
mov
mov
or
xchg
iret
xchg
outsb
xor
mov
dec
xchg
fucom
lret
inc
aas
jns
fnsave
mov
leave
pop
test
push
pop
xchg
xor
dec
int
xchg
repz
test
sti
dec
jo
mov
imul
dec
sub
xchg
pop
mov
push
mov
jmp
mov
in
sub
ljmp
pop
ds
fmuls
lret
fildl
insb
add
xor
xchg
das
out
lock
testl
fwait
rcrl
shll
cmp
outsl
out
sub
outsb
or
dec
adc
lahf
adc
sbb
xor
lretw
ljmp
jecxz
out
adc
lahf
xor
xor
lret
push
xor
cmp
sbb
xchg
mov
test
lret
stc
sarb
sti
push
dec
popa
dec
add
mov
aas
fwait
lods
mov
inc
xor
ret
orb
xchg
jmp
jne
mov
inc
pusha
in
lret
pop
sub
enter
jmp
sbb
xchg
pop
and
and
xor
sbbb
lret
xor
sar
add
popa
in
pop
adcb
mov
push
repz
scas
cmpsl
inc
xchg
aad
int
pop
or
xchg
and
call
or
jecxz
mov
repnz
lock
in
sub
ja
push
pusha
out
jbe
negb
nop
js
and
lds
test
sub
dec
imul
std
sbb
xchg
test
mov
enter
xor
inc
loopne
nop
lret
inc
push
inc
adc
clc
sbb
call
dec
jl
jnp
out
int3
jns
cmp
xor
cwtl
std
mov
ss
cmp
rcl
sbb
pmaxub
jecxz
negl
jmp
cltd
arpl
add
jno
repz
push
xchg
aas
leave
out
leave
incb
ja
jecxz
pop
xor
adc
jmp
in
sub
in
adc
popf
inc
clc
mov
js
jmp
inc
mov
xor
or
push
ss
xor
or
cmpsb
nop
das
hlt
into
mov
or
sub
aad
mov
add
movsb
das
or
sbb
mov
icebp
mov
clc
pop
xor
repnz
jecxz
ret
sbb
push
out
add
icebp
arpl
insb
aad
jge
popa
std
add
cmpsl
repz
mov
repnz
add
push
out
push
cwtl
cltd
jo
jb
mov
jne
sub
mov
pop
add
out
or
lock
pop
dec
inc
jno
mov
sbb
test
lods
inc
test
jmp
pop
push
adc
call
cmp
cmpsb
test
push
insl
leave
in
movsl
repz
rol
in
mov
syscall
mov
inc
dec
les
ljmp
inc
cmp
filds
lds
movsb
cmp
dec
push
iret
cli
sarb
scas
fimuls
es
scas
add
pop
fdivrs
xor
movl
push
cli
and
push
mov
inc
sub
cmp
subps
push
jns
ss
std
or
jae
ljmp
cwtl
es
jbe
fildl
inc
sub
add
int
das
pop
inc
mov
into
imul
mov
mov
gs
sarb
lcall
sbb
or
pushf
imulb
js
sub
xlat
lret
jmp
jo
int
mov
outsb
xor
mov
push
subl
clc
popa
icebp
pop
mov
xor
pop
cmpb
out
test
dec
test
add
lret
outsb
out
lret
aad
xlat
add
pop
div
repnz
xchg
and
jmp
xchg
into
jnp
das
mov
jecxz
loope
inc
mov
lcall
in
push
ljmp
fsubp
xor
sbb
inc
xor
movsl
out
sbb
lods
push
jns
adc
lret
mov
ret
insl
xor
aad
data16
popa
addb
aam
lcall
cmp
mov
in
daa
nop
ja
cmpsl
add
cmp
es
cli
sbb
shll
jecxz
call
mov
adc
mov
dec
mov
and
shr
jl
push
pop
testl
cmp
sti
push
jmp
pop
and
mov
ja
repz
inc
call
xor
mov
mov
push
push
into
clc
cmpsl
fwait
out
sarb
push
mov
ja,pn
andb
pop
loopne
je
mov
or
adc
cmp
jnp
fcmovne
stc
call
dec
es
and
les
inc
mov
dec
jo
out
sbb
pop
sbb
sub
outsl
or
out
aam
cmp
cs
fisubrs
push
xchg
orl
scas
inc
out
mov
jecxz
or
rcll
push
cmpsl
popl
or
jecxz
lret
das
loope
shlb
xor
mov
adc
pop
pop
pop
scas
mov
or
in
mov
cltd
sar
xchg
inc
aas
imul
mov
cmp
cltd
mov
jne
int
xchg
test
pushf
sbb
test
dec
add
test
sub
cli
mov
pop
push
cld
xchg
inc
or
lods
outsl
ret
xchg
addb
push
and
fs
iret
xchg
and
bts
jmp
pop
aad
mov
xor
xor
je
je
sub
cld
aas
add
sub
leave
mov
cmpsb
jecxz
cltd
sbb
dec
sbb
and
jo
mov
dec
nop
cmp
add
test
in
scas
das
push
inc
loopne
inc
push
pop
xchg
xchg
mov
je
push
loop
sub
aam
loopne
jbe
push
pop
xchg
std
mov
mov
push
dec
fstp
jno
aaa
orl
div
jno
cmp
stos
int
clc
xchg
adc
popf
push
push
adc
stos
lods
repz
adc
arpl
into
jp
mov
cmp
or
sbb
loop
push
jbe
adc
add
push
aaa
in
enter
sbb
mov
aam
jns
sarl
mov
push
sbbb
pop
push
pop
daa
mov
adc
lock
das
in
and
mov
mov
repnz
push
mov
push
andl
daa
sbb
mov
movsl
pop
adc
sarb
xchg
addb
addr16
sbb
mov
ret
jne
repz
call
pop
out
and
mov
popa
sbb
mov
sahf
and
pusha
mov
jb
lret
sbb
mov
les
mov
cmp
push
roll
aad
shr
in
push
sbb
loope
xor
add
push
add
jmp
repz
loop
or
cmpsl
test
faddp
inc
xchg
mov
je
sub
stos
popf
pop
mov
mov
orb
adc
xchg
je
push
push
and
push
mov
out
mov
sbb
sarl
repnz
lds
adc
push
jge
mov
shll
fistpll
mov
in
jmp
jecxz
shl
imul
and
mov
cmpsl
xor
mov
ljmp
pop
pop
icebp
testb
mov
inc
cmp
shlb
sbb
lea
jnp
dec
adc
or
xchg
fdivrs
dec
cs
pop
stc
push
addb
fdiv
xchg
movsl
push
sub
stc
es
pop
mov
dec
insb
ficomps
outsb
or
fdivs
jne
add
mov
push
mov
jg
mov
sub
or
lods
mov
jnp
push
in
push
in
pop
in
ss
lds
jbe
sbb
sub
sbb
pop
or
mov
nop
andl
or
fwait
loopne
inc
fwait
aam
jb
cmp
fwait
inc
fidivrl
xor
lret
push
pop
out
mov
adc
xchg
pop
jns
repz
pop
lret
fisttpll
iret
pop
mov
adc
mov
insb
push
or
adc
push
inc
sub
ja
dec
mov
adc
test
fistpll
xor
push
sbb
or
imul
out
sbb
pushf
adc
arpl
aaa
outsb
adc
outsb
pop
popa
loopne
dec
aam
and
pop
push
push
insl
xor
mov
jle
sbb
cwtl
mov
aas
test
push
mov
test
nop
mov
or
lock
divl
jge
xchg
push
pop
jge
or
dec
jp
in
sbb
inc
mov
cli
in
xchg
ret
scas
xor
lods
xchg
mov
cwtl
jne
ret
jge
cmpsl
movsb
push
sti
inc
mov
push
and
nop
fsubrl
cmp
rorb
movsb
sbb
stc
inc
dec
mov
inc
cmc
xchg
jae
xchg
ja
or
shrl
sub
data16
pop
sub
adc
outsl
xor
jmp
into
ss
popf
mov
mov
popf
jg
cmpsl
sub
jo
push
and
outsl
aas
ljmp
in
dec
push
xchg
add
insb
xchg
loope
shl
adc
aas
sbb
lods
movsb
sbb
fsts
icebp
adc
es
sbb
hlt
pop
jne
movsl
push
fistl
daa
and
repnz
daa
test
jecxz
bound
addb
cmpsb
outsb
lea
out
or
jp
ds
cmpsb
push
xchg
jge
into
out
add
test
xor
bound
cs
fiadds
push
stos
xchg
out
or
mov
pop
dec
mov
and
push
jecxz
pusha
rcrl
sbb
sub
movsl
pop
test
iret
cld
mov
lods
lcall
loopne
call
push
out
repz
fisubl
lea
push
fldenv
adc
jg
sub
std
push
mov
std
xchg
xor
imulb
scas
mov
hlt
cld
int3
lock
ficomps
pop
cmp
mov
push
xchg
cmpsb
jae
lret
out
xchg
arpl
xchg
loopne
lea
or
stos
aad
push
imul
dec
movsl
cmpsb
or
ja
outsl
lods
lcall
inc
enter
cmpsb
pop
test
not
mov
bound
push
out
mov
mov
out
jbe
loop
xchg
mov
adc
or
mov
xor
aas
or
lahf
or
push
fidivrs
push
fbstp
js
popf
outsl
ds
and
cmpb
lock
jns
shlb
outsb
push
movsb
mov
or
adc
test
xor
fldt
pop
stc
jno
stos
push
mov
incl
cmpb
stos
jmp
aaa
mov
repz
push
sub
out
xchg
daa
mov
or
pop
cltd
or
int
les
ret
test
push
scas
cltd
fimuls
ret
pop
into
pop
fildll
or
mov
jecxz
scas
in
sub
dec
cmpsl
mov
or
std
or
add
xchg
ds
mov
mov
jno
pushl
dec
bound
arpl
or
mov
pop
mov
inc
xlat
sbb
pop
mov
push
jbe
mov
lods
push
inc
pop
shrb
sub
push
sbbl
into
push
xor
push
cltd
inc
sbb
sar
mov
mov
adc
and
mov
pop
push
and
sub
aaa
sti
int3
testl
fdivs
or
aam
dec
jns
push
xchg
sub
dec
xor
ljmp
jle
call
and
das
fs
test
xchg
push
push
iret
dec
orb
jecxz
sub
xor
mov
movsb
and
pop
mov
mov
xor
cmp
jle
pop
out
push
xchg
mov
jg
and
jnp
lret
xchg
fs
inc
test
push
fchs
pop
stos
aas
xlat
dec
push
fstp
das
pushf
push
mov
dec
lret
aaa
push
xlat
lods
cmp
sbb
dec
adc
mov
xchg
bound
nop
clc
xor
push
push
sub
inc
aam
hlt
dec
rcrl
dec
es
lea
mull
les
push
jp
dec
outsb
aas
mov
or
and
pop
es
std
mov
push
popa
ror
cmp
push
cwtl
jb
dec
push
jp
add
cmp
mov
mov
ficomps
xor
ror
cmp
push
dec
or
push
shl
jo
out
es
pop
push
add
mov
xchg
outsl
lret
mov
mov
fsubl
mov
das
mov
push
mov
scas
add
addr16
clc
add
mov
ret
or
out
xor
ljmp
mov
jmp
push
inc
jne
shll
or
sbb
xlat
int
imul
scas
testl
jmp
nop
mov
call
lcall
inc
outsb
das
jle
cmpsb
es
inc
pop
shll
pop
pop
lods
fbld
jae
push
inc
ljmp
int
and
mov
arpl
or
or
stc
movsl
mov
pushf
in
pop
dec
xchg
imul
das
xor
js
ds
jbe
mov
jo
push
in
in
pop
mov
cmp
repnz
dec
shrl
int3
jge
add
pop
pop
push
ljmp
je
cld
jns
pop
lods
xor
ljmp
fstpl
test
mov
fiadds
mov
popa
call
mov
fwait
pop
pop
and
adc
sbb
cmpsl
pop
iret
cmp
dec
aas
sbb
add
enter
int
loopne
leave
fwait
imul
fstpl
jb
inc
pusha
pop
adc
imul
arpl
mov
pop
scas
jno
xchg
adc
push
in
popf
fldcw
ret
mov
inc
push
mov
jns
aad
jno
lea
pop
test
shrb
and
pop
std
in
adc
or
push
add
dec
push
mov
stos
cli
les
push
dec
xchg
add
icebp
pop
cmc
cmpsb
in
ret
in
imul
xchg
jmp
adc
sub
mov
insb
mov
add
cwtl
fisttpll
mov
and
mov
mov
mov
aam
inc
fisubrs
test
sub
icebp
int3
iret
in
popf
bound
and
and
movsl
xchg
pop
dec
dec
sahf
add
dec
mov
test
fs
push
jbe
jp
cmovo
push
xor
mov
cs
enter
push
xchg
orl
leave
mov
dec
mov
xlat
bound
jle
aas
loop
aas
xchg
mov
repnz
sarb
addr16
mov
add
and
mov
jl
loop
mov
or
pop
mov
int
jmp
fcomp
jg
xchg
mov
mov
cmp
mov
jg
imul
xchg
pusha
xor
push
mov
pusha
and
fsubrp
rcl
mov
xor
popa
call
sbb
xchg
aas
sub
rcll
adc
sub
dec
sub
insb
jbe
rclb
xchg
lods
dec
adc
sub
insb
popf
adc
inc
cmpsl
inc
xchg
push
add
int3
decb
push
inc
enter
lods
push
jno
lahf
cltd
nop
mov
les
dec
dec
es
inc
test
fcmovnb
sbb
push
test
arpl
sti
stos
sbb
loope
adc
lahf
popf
sub
or
mov
cwtl
xchg
mov
jns
jp
cmpsl
push
gs
mov
lcall
cmc
loop
mov
outsl
push
insl
sbb
sbb
or
adc
sub
gs
rorl
lea
addr16
adc
sbb
jge
repz
in
cwtl
jmp
mov
adc
out
inc
or
xchg
pop
lea
lea
inc
aas
pop
xor
push
mov
ficomps
addr16
pop
pop
mov
mov
inc
cmp
dec
shl
addr16
push
das
mov
orb
xor
push
xchg
inc
fbld
enter
dec
sbb
out
aas
loopne
sar
incb
sbb
in
cmp
jp
or
pop
stos
adc
in
jo
sti
imulb
dec
test
jle
fdivrl
in
andb
sub
imul
int
addl
mov
mov
lods
stos
pushl
push
pop
int3
or
xor
sub
jmp
pop
gs
in
cmp
popf
or
cwtl
popa
in
hlt
lods
mov
movsb
in
ret
pop
ffree
push
jns
adc
or
lret
fdiv
mov
leave
enter
sti
imulb
out
aam
xchg
cltd
cmpsl
in
jle
rclb
sub
pop
fistl
mov
push
repz
daa
rorb
imul
pushf
popa
adcb
rol
xlat
jle
repnz
or
push
pop
inc
scas
cmp
in
in
xor
sub
add
ret
mov
jno
pop
stos
ss
jne
stc
lret
mov
jge
pop
push
xchg
out
xchg
jmp
adc
lock
addps
mov
rclb
pushl
into
jo
stc
inc
sub
gs
sub
jne
fs
xchg
fmuls
mov
and
dec
out
fstps
mov
push
or
pop
rorb
inc
mov
mov
push
lock
pop
pop
pop
push
outsl
push
add
arpl
jle
push
sbb
dec
sti
pop
repnz
scas
jae
push
sbb
xor
aad
cld
mov
test
xorl
outsl
aam
inc
xchg
jno
or
popa
mov
insl
in
pop
mov
leave
mov
test
xchg
push
sbb
xchg
jbe
sti
mov
adc
sub
ret
test
xchg
sahf
lods
mov
enter
call
stos
dec
aad
sbb
or
repnz
dec
sahf
popf
sti
pop
js
in
xchg
bound
loop
xchg
out
xor
insl
dec
sub
add
xchg
addl
bound
inc
pop
popa
and
ja
out
push
lcall
imul
out
xor
push
sarb
add
test
data16
mov
bound
add
icebp
leave
push
das
leave
jae
mov
mov
mov
ds
subb
in
mov
jg
icebp
clc
loope
into
add
aaa
rclb
sub
push
fcmovbe
pop
jmp
rorb
pop
test
sub
dec
cmp
sub
or
movl
hlt
cmp
aad
mov
push
adc
clc
xchg
jno
push
inc
ljmp
shr
inc
cmp
mov
adc
insl
int3
push
push
repnz
icebp
push
xchg
ja
ss
dec
into
cmpsl
icebp
addr16
ja
xor
sub
outsb
sub
cmp
xchg
xor
movsb
xchg
or
mov
stos
fisubrs
shll
or
pop
cli
lods
nop
lock
or
loope
mov
push
inc
enter
call
mov
adcl
imul
repz
int3
inc
push
pop
sbb
pop
jo
rclb
add
xchg
xchg
clc
mov
push
dec
jmp
mov
test
fst
sub
jmp
adc
mov
jne
mov
push
cmp
push
xor
lahf
js
in
lret
stos
repz
enter
fsubrp
jg
pop
or
pop
ja
sub
pop
inc
test
rolb
push
rorb
stos
dec
mov
xchg
test
hlt
fwait
pcmpgtw
dec
or
push
adc
fsts
repnz
int
push
or
sub
xchg
adc
pop
pop
insb
ja
movl
jge
jge
jnp
sbb
loopne
xor
mov
mov
sbb
sbb
sub
push
push
bound
xchg
leave
sbb
repz
push
leave
inc
pop
stc
sub
dec
addr16
and
popa
stos
or
pop
cmp
movsb
mov
pop
ret
ret
cli
adc
or
cmpsl
scas
dec
push
dec
stc
sub
addb
sti
push
cmpb
xchg
sbb
mov
cld
pop
scas
xchg
negb
in
pop
lods
push
pushl
jbe
pop
or
pop
mov
inc
test
lahf
sbb
cltd
mov
lahf
pop
push
mov
add
pop
jae
sub
rorl
lods
or
push
fadds
dec
popf
lods
mov
lds
sbb
mov
loope
sar
jmp
sbb
mov
fsubr
out
pop
mov
cmp
rcl
mov
add
jno
imul
das
dec
movsl
adc
mov
je
clc
scas
sub
popf
jle,pn
jl
mov
lcall
out
push
rorb
add
pop
sub
mov
xchg
add
lahf
arpl
fcmovbe
jne
fistl
call
inc
push
sub
push
lods
subb
insl
pop
fs
cmpsl
mov
add
movsb
or
mov
mov
pushl
aas
jns
xor
mov
in
mov
popa
repnz
mov
push
dec
call
fistps
xor
xor
ss
out
sub
adc
mulb
cli
mov
in
jmp
hlt
stos
rcrl
aaa
push
insb
cmp
mov
cmpsb
aaa
repnz
pop
xchg
test
fisttps
adcl
add
dec
js
mov
leave
push
mov
cld
xchg
push
fistps
jne
add
aas
mov
imul
xor
dec
sarl
push
in
and
sub
pop
pop
push
lret
adc
jecxz
stos
out
cli
cld
outsl
pushl
and
and
out
in
cmc
mov
imul
movsl
mov
sbb
xorl
or
jle
xchg
jmp
pushf
insb
xchg
in
xchg
inc
adc
insb
push
shl
jp
popa
cltd
inc
jmp
cmp
addr16
sub
adc
xchg
add
cmpsl
dec
xor
push
or
xchg
cmp
loope
shrb
sahf
xor
sub
ja
fldenv
push
jg
mov
or
mov
xchg
sbb
lret
nop
or
fsubr
xchg
pop
fistps
xorl
and
fsubs
test
dec
pop
adc
push
rolb
pop
xor
fstpl
lds
add
xchg
xor
ret
add
insl
jbe
xchg
cli
jno
lds
adc
xchg
lahf
mov
outsb
jecxz
fldl
lock
add
popf
ret
mov
xchg
or
xor
jno
lcall
sbb
xor
and
fdivr
inc
push
imul
in
mov
xor
push
popa
stos
sub
repz
sub
add
lret
jnp
add
loope
lock
imul
iret
dec
pop
push
adc
mov
and
xor
dec
dec
cmp
mov
das
pop
std
mov
sbb
add
hlt
add
cmp
shrb
fnstcw
je
adc
outsb
push
cmp
sbb
cli
test
filds
loope
int
je
fisubs
sub
push
inc
les
enter
dec
inc
shl
mov
inc
adcl
dec
inc
aad
inc
sub
arpl
aaa
lahf
lcall
xor
and
mov
ljmp
ret
jno
fstpl
inc
sub
icebp
cmp
lds
idivl
mov
jecxz
outsl
adc
mov
xchg
scas
xor
test
mov
mov
lcall
dec
je
fsubr
cmp
mov
push
sub
xchg
xor
jmp
pop
setns
mov
or
mov
inc
movsl
popa
and
pop
and
jecxz
scas
pop
xor
cmc
aad
xor
cmp
push
xchg
hlt
jnp
pop
aas
or
mov
or
addl
mov
lahf
pop
mov
push
push
cmp
sub
test
sahf
mov
jl
sarl
jbe
stc
push
xchg
jbe
xchg
stos
xor
andb
mov
xchg
aaa
in
mov
outsb
and
jbe
into
jne,pn
pop
jmp
loop
push
or
or
js
shll
aad
into
movsl
aam
or
icebp
pop
out
xor
fistpl
out
mov
sbb
sub
mov
es
lock
les
lret
insb
pop
aas
push
int
les
aas
fldenv
in
mov
mov
adc
jl
lds
sbb
adc
adc
jae
mov
lret
push
xchg
stos
xchg
cmp
dec
mov
push
push
xchg
mov
push
mov
out
ret
movsl
xchg
or
ljmp
in
inc
mov
fsubs
mov
fldl2t
dec
bound
jne
adc
jae
push
testb
mov
push
test
jmp
lret
aam
xchg
sub
jne
cmpsl
jo
push
jmp
into
mov
cmc
cld
inc
xor
call
mov
xchg
lea
stc
add
jo
jo
push
pop
cltd
test
lods
push
mov
mov
mov
mov
stc
pusha
enter
mov
pop
mov
insb
addb
adc
sbb
loopne
push
enter
inc
push
push
sub
push
setne
sub
pusha
fsubp
dec
mov
scas
fldenv
aas
pop
mov
pusha
outsl
pop
xchg
jmp
lea
dec
mov
push
icebp
repz
xchg
pop
or
loop
mov
push
pop
icebp
cmp
push
sub
mov
mov
inc
mov
out
insb
ret
popa
in
imul
and
lret
jae
addb
icebp
mull
mov
pop
adc
mov
out
sub
popf
jg
aad
push
mov
insl
pop
add
push
arpl
inc
cwtl
ljmp
sbb
sub
sub
sti
inc
jmp
aas
sub
repnz
popa
pop
cmpb
pop
loope
aad
fwait
xor
dec
loopne
outsb
dec
repz
push
jae
mov
mov
imul
cmpb
mulb
int
shrb
cmpsl
cmpsl
add
add
into
jb
xor
lahf
cmpsl
stos
adc
inc
std
mov
pop
bound
enter
incl
imul
mov
roll
cmpsl
lcall
cmp
sbb
clc
lcall
ja
adc
sbb
aam
adc
sbb
or
cmp
sti
mov
mov
int
hlt
sub
lock
xor
jge
fsts
xchg
stos
pop
mov
pop
ljmp
push
vpsubb
test
loope
shlb
push
xor
mov
mov
mov
rclb
inc
ja
sbb
pop
or
dec
sub
adc
lock
sti
loope
rcrb
push
pop
out
xlat
and
outsl
lcall
xchg
int
mov
push
push
xor
fstpt
jno
jns
cmpsb
jmp
adc
xor
mov
sub
jne
or
and
dec
shll
ja
cs
fbstp
cmp
fstp
inc
aas
ss
add
inc
inc
cltd
fisubrl
xchg
shll
inc
or
push
leave
mov
xchg
imull
mov
sbb
dec
cmp
xor
movsb
add
addr16
sahf
or
or
inc
test
cmp
jmp
inc
cmpsl
movsb
sub
xchg
mov
mov
leave
dec
in
xlat
es
icebp
cmp
fidivrl
mov
push
icebp
xchg
loope
movsl
push
jae
cmp
pop
cmova
push
cmpsb
pop
movsb
clc
push
xor
dec
mov
ss
adc
stos
pop
in
sbb
sbb
add
xlat
inc
pop
jmp
mov
dec
add
mov
es
ret
repz
pop
shlb
scas
mov
stos
fidivrs
or
adc
pop
mov
sbb
cmpsb
xlat
das
dec
ljmp
outsl
mov
push
decb
cltd
push
sub
mov
out
js
xchg
or
inc
sub
aad
pop
jnp
pop
add
xor
jns
or
xor
call
mov
mov
pop
bnd
mov
movsb
dec
mov
std
test
stc
and
js
or
or
mov
pop
fldenv
into
pop
xor
repnz
pop
and
test
dec
cli
data16
mov
inc
pop
cmpsb
lods
jbe
mov
ficoml
aaa
jne
enter
pusha
daa
jns
adc
mov
mov
sub
xchg
sbb
loopne
fsub
bound
lahf
cmp
lcall
mov
loopne
sbb
fnstcw
and
notb
faddp
xor
mov
arpl
jo
push
imul
stos
mov
fwait
xchg
xchg
xor
jg
adc
dec
pop
lods
out
mov
jp
lahf
stos
rcrb
xor
push
rcr
ret
icebp
imul
mov
and
and
pop
sahf
cmpsl
mov
lds
shl
test
cmp
pop
and
sbb
repz
out
movsl
lret
loope
icebp
jmp
xchg
in
int3
push
imul
dec
arpl
mov
mull
or
sbb
xchg
ljmp
sub
cmc
in
stos
mov
loopne
sbb
add
mov
subl
jle
ret
and
push
or
cmp
sahf
pop
push
sub
lock
jno
dec
mov
mov
lock
cmp
dec
inc
jns
or
jg
xchg
adc
or
push
or
jne
movb
sub
mov
out
xchg
jp
repnz
cmp
lds
dec
mov
xlat
dec
push
cmp
das
lcall
imulb
lods
std
andl
in
mov
dec
cwtl
jno
stc
sub
mov
dec
xor
stos
sbb
hlt
aad
sahf
xor
aam
add
cld
into
cs
inc
xor
jbe
pop
push
jne
arpl
mov
movsl
inc
shl
subb
inc
sbb
outsb
into
imul
pop
mov
movsl
pushf
mov
jp
cs
arpl
gs
cmp
or
or
pop
xchg
inc
popf
dec
aad
dec
das
mov
adc
and
fstp
lcall
out
xchg
imull
in
nop
sbb
adc
sub
or
outsb
inc
repz
xchg
es
xchg
int3
xchg
inc
loope
pop
std
enter
xchg
add
xchg
aas
dec
aaa
mov
mov
mov
out
daa
pop
xchg
mov
fwait
lcall
jp
mov
test
loop
sbb
lcall
cmp
jns
add
or
ljmp
xchg
les
arpl
dec
adc
testb
fisubrs
ljmp
fisubrl
and
pop
add
aam
into
das
adc
mov
lret
popa
stos
fdivs
imul
js
aad
je
scas
inc
xlat
sti
xor
call
rorb
scas
mov
das
lret
inc
dec
dec
scas
pushf
sbb
mov
mov
test
aad
and
inc
and
add
mov
and
pop
mov
push
pop
sub
add
sub
xchg
mov
xlat
cmp
push
mov
or
bound
imul
mov
mov
sub
xor
cmp
mov
sbb
lods
sbb
sbb
push
or
dec
push
inc
mov
daa
cli
inc
dec
mov
sub
lret
push
rcl
lcall
test
ljmp
lea
aam
les
xor
adc
je
test
cld
movsl
xchg
push
rcr
rclb
add
xchg
push
xchg
jmp
pop
sti
pop
pushf
add
movsl
sbb
jmp
or
add
dec
mov
push
pop
mov
fistpl
jp
xor
inc
jb
ja
dec
icebp
fidivrs
in
inc
mov
mov
aad
jmp
rorl
movb
xchg
adc
jecxz
push
repz
rorb
mov
inc
fdivrl
push
dec
sub
mov
add
xchg
pop
xor
aam
lea
pop
ljmp
dec
sbb
sti
out
and
js
jo
negl
xlat
popa
in
add
xchg
jae
add
pop
push
push
testl
in
dec
fstpl
mov
sbb
push
ret
imul
setbe
call
stos
repnz
into
not
stc
add
mov
test
cltd
xor
int3
cmp
iret
nop
ja
mov
mov
push
cmc
out
cli
movsl
jb
adc
dec
shlb
dec
js
aad
ret
jmp
push
mov
inc
scas
add
pop
xchg
mov
pop
xorl
lods
inc
sbb
xor
loope
mov
fwait
cmp
pusha
pop
cmp
jle
adc
mov
fsub
arpl
dec
adc
pop
bound
cs
sti
jge
cltd
xchg
int
aaa
cld
adc
fbstp
cs
xchg
dec
lea
lret
pop
aaa
outsb
cmp
leave
shl
adc
insl
testb
push
pop
adc
and
imull
xchg
jno
into
sbb
negl
arpl
data16
sub
mov
pushf
adc
add
push
xchg
mov
loopne
or
xlat
stos
aas
addr16
mov
cwtl
jmp
add
mov
mov
sub
pop
int
ja
rcll
push
sbb
outsl
xor
sbb
mov
mov
pop
sub
movq
insl
or
das
jg
xorb
and
inc
xchg
int
popf
xchg
pop
mov
test
stos
sarl
mov
jmp
adc
cmp
cld
pop
jl
mov
mov
imul
in
push
jp
ss
repz
push
push
mov
rcll
dec
daa
jmp
or
mov
fisubrs
into
inc
and
xchg
enter
addl
iret
cs
fisubl
rorb
sub
roll
dec
xor
dec
xor
fiadds
lock
xchg
je
andb
ficoms
fstps
mov
mov
into
sbb
xorl
sub
mov
mov
mov
bound
arpl
mov
cmp
pushf
and
out
xchg
sub
pop
pop
cmp
int3
jne
push
mov
sub
push
adc
adc
mov
fucomip
xchg
ljmp
out
mov
inc
mov
lahf
mov
jne
fst
add
sub
shlb
adc
xor
pmaxsw
mov
frstor
int
mov
mov
mov
dec
or
add
lock
shll
mov
aaa
mull
push
dec
data16
dec
add
in
xchg
mov
mov
cmpsb
lea
mov
push
loope
loopne
mov
push
or
fwait
outsl
or
xchg
adc
loope
mov
js
mov
xor
sub
fsubrp
or
sbb
out
pop
sub
dec
dec
cmp
int
lods
adcb
push
sbb
adc
jge
bswap
mov
push
in
lock
test
xor
gs
cmp
subl
adc
les
fs
sub
xlat
cmp
bound
shlb
stos
push
fisttpll
push
fistl
and
xchg
pushf
pop
insl
fcos
inc
cmpl
stos
movsl
adc
mov
inc
add
movsb
inc
fnstcw
enter
sbb
dec
in
xchg
mov
pop
dec
add
fwait
mov
stos
mov
aam
aad
pop
popa
jmp
mov
adc
jl
mov
loopne
imul
adc
pop
cmpl
push
push
and
fcmovnb
fisttpll
int3
sub
ljmp
in
aam
jno
cmp
fs
adc
mov
sti
jmp
sbb
lret
nop
xor
jbe
fisubrl
clc
fists
into
out
aas
or
lods
mov
pop
mov
push
aas
icebp
cmp
mov
jl
je
repz
pop
and
dec
cmp
ds
mov
cltd
xchg
movsl
test
negl
insb
repnz
test
sub
cmpsb
pusha
leave
in
gs
faddl
enter
test
adc
xor
adc
out
cltd
fistl
rcrl
add
pop
or
add
add
add
mov
cmc
rcll
jne,pt
pop
aas
sarl
xor
and
pop
dec
adc
clc
cmp
xchg
rcl
pushf
xor
sarl
out
ljmp
data16
cld
es
jle
outsl
aad
cli
push
mov
enter
lea
mov
divl
pop
jae
out
test
in
jp
in
dec
xchg
mov
cmc
mov
push
sbb
test
cltd
pop
int
imul
stos
cmpsb
ret
mov
xchg
pop
dec
out
jbe
dec
js
ficoml
mov
cli
push
ret
add
xchg
iret
test
mov
std
popa
push
mov
sbb
cmpb
rcrl
or
scas
mov
or
loop
fs
out
pop
sbb
add
mov
add
or
jp
faddl
push
ljmp
jl
mov
mov
test
jns
ja
xor
fidivrl
xor
push
mov
pop
jg
pop
cld
gs
and
xor
add
out
and
xchg
xor
inc
dec
xor
add
flds
call
testb
push
and
push
lods
out
dec
add
popf
jp
imul
dec
aas
es
inc
mov
dec
pushf
std
insl
jbe
xchg
das
or
mov
mov
jbe
dec
mov
stc
jecxz
ljmp
imul
sub
add
push
add
pop
jns
outsb
sbb
mov
int3
aam
nop
clc
adc
jg
pop
xchg
or
data16
sahf
ficoms
int
lods
pop
cld
insb
out
mov
or
cmp
mov
pop
daa
or
nop
sti
sub
sti
stos
movsl
push
pop
push
sub
push
imul
icebp
imul
xchg
or
out
cli
jb
cld
push
hlt
sbb
rcl
cmp
clc
mov
enter
pushf
imul
pop
ljmp
ds
cltd
xor
and
mov
into
xlat
jnp
aam
adc
pop
jbe
mov
scas
cmp
push
js
push
fcomps
jl
lret
cmpsb
jae
js
call
icebp
push
inc
fists
xchg
pop
sbb
jb
dec
mov
cmp
mov
pop
dec
fcom
sbb
mov
cmp
xchg
fwait
call
add
sbb
adc
mov
arpl
cmp
cmp
ficoms
or
push
gs
mov
jge
lock
stos
adc
jp
dec
xlat
or
add
fadd
cmp
add
mov
mov
in
adc
mov
sub
mov
in
push
sub
shr
mov
orl
adc
cld
adc
je
sbb
cmp
sbb
pop
lcall
fcoml
pop
jle
in
std
orb
mov
fldcw
push
sbb
sub
sbb
xchg
out
loopne
call
push
or
adc
loop
mov
inc
subb
pushf
decl
adc
cmp
cld
adc
xchg
cli
insl
int3
in
inc
xor
push
and
and
adc
mov
sbb
lock
lods
es
test
add
aaa
adc
xchg
lock
ljmp
mov
arpl
clc
mov
sub
jns
add
and
decl
leave
cltd
std
cli
mov
loop
adc
jmp
dec
insb
popa
into
cmpsb
icebp
push
scas
loope
and
movsl
or
pop
out
pop
add
mov
js
xchg
xchg
ret
pushl
popa
mov
pop
mov
push
dec
cs
adc
mov
test
mov
dec
push
mov
or
test
mov
mov
loopne
jno
adcl
pop
dec
pop
xchg
aas
fwait
aad
addr16
lahf
or
pop
jo
in
inc
or
push
jns
push
jg
sub
mov
mov
push
les
push
js
push
push
dec
aaa
and
stos
jne
arpl
cli
clc
add
ret
sbb
inc
mov
jl
repz
movsl
popf
adc
ljmp
jno
out
xor
out
add
out
sub
jge
je
mov
cmpsb
xor
mov
or
outsl
clc
dec
mov
test
in
outsl
push
lds
mov
jg
je
adc
jmp
sub
rolb
clc
js
or
mov
adc
xchg
data16
push
addb
and
sub
addl
mov
shll
cmpsl
fisttpll
lds
in
sbb
xorb
push
sub
repnz
rorl
call
mov
push
mov
movsb
cmpsl
fsubl
mov
in
mov
dec
mov
xchg
mov
push
pop
sub
int
jno
sahf
and
xchg
sub
push
fsubr
lods
imul
push
es
call
cmp
cwtl
ret
in
popa
inc
mulb
lock
repnz
outsl
mov
popa
imul
xchg
sarb
mov
mov
imul
push
out
insb
and
sbb
push
cs
stos
movsl
cmp
repz
lock
push
enter
shll
into
loopne
insl
lret
dec
outsb
addr16
sarl
cmp
xchg
ret
stos
push
out
mov
movsl
mov
cli
mov
ret
adc
cltd
sub
ljmp
shl
mov
in
clc
dec
test
repz
rorl
js
pop
test
adc
sbb
push
and
das
jae
cmp
xor
in
pop
and
cmp
outsb
popf
andb
sbb
add
ljmp
mov
stos
pusha
sarb
mov
cwtl
push
stc
mov
add
or
cmp
push
adc
ret
out
cmp
push
sub
hlt
push
xchg
aam
popf
inc
lcall
popf
add
fdiv
mov
out
inc
cwtl
enter
and
mov
xor
inc
or
pop
xor
mov
movsl
mov
sub
test
mov
lcall
orb
inc
aad
xchg
ds
mov
mov
push
popf
pusha
cmpsl
lret
pop
push
jno
lods
mov
std
aam
flds
mov
bound
push
leave
dec
pop
and
jo
jbe
lds
cmp
xlat
shrl
fldcw
cmp
or
mov
sub
inc
pop
mov
mov
fisttpll
jp
xor
inc
lahf
loopne
sbb
push
and
out
dec
mov
imul
jecxz
dec
in
fwait
cwtl
nop
ss
subps
inc
xor
jns
fwait
sbbb
cmp
cmpsl
mov
mov
bound
or
xchg
lods
xor
push
jns
xchg
stc
add
xor
push
mov
shrd
xchg
xchg
mov
lret
js,pt
in
adc
mov
lods
iret
sti
push
repz
int
sti
adc
sahf
xor
mov
inc
cwtl
in
or
sub
sub
jle
daa
subl
pop
outsl
cwtl
xchg
xchg
jp
lahf
pop
pop
cmp
in
lea
xor
push
jg
stc
negb
cltd
sub
rcrl
mov
out
inc
jno
mov
sub
adc
pop
mov
mov
fdivl
mov
imul
xchg
dec
imul
or
ja
xor
cmp
nop
push
push
or
iret
ficoml
fcmove
pop
andb
popf
xchg
adc
pop
pop
xlat
sbb
adc
aam
xorb
mov
push
cwtl
xlat
inc
pop
pop
sub
push
jp
xchg
ss
ds
jg
data16
push
test
dec
popa
sub
cmp
adc
scas
mov
mov
adc
test
push
cwtl
xchg
mov
or
push
ja
je
fistl
scas
clc
sub
and
ljmp
imul
arpl
outsb
and
jne
lds
mov
mov
add
mov
insb
xor
push
mov
add
cltd
inc
dec
cmpsl
nop
push
dec
cmc
xor
test
mov
rorl
lahf
sbb
dec
dec
addr16
dec
dec
hlt
mov
movb
jmp
sub
cld
xor
dec
imul
cmpsb
aaa
jne
cwtl
and
fcmovbe
inc
and
jae
xor
inc
ret
jge
jb
fadds
shlb
ja
cmp
negl
mov
mov
fildll
dec
sub
and
sbb
xor
shll
jg
mov
in
and
jne
bnd
pop
test
mov
in
push
sti
dec
mov
cmp
call
cmpsb
jne
lods
add
mov
and
fsubrl
and
mov
fidivs
jb
push
mov
cmpl
lahf
pusha
sarb
popa
and
mov
hlt
std
idivb
pop
adc
ret
jmp
mov
outsb
lods
pop
mul
movsb
xchg
cmpl
mov
dec
cwtl
pusha
stos
call
mov
arpl
adc
fs
jecxz
in
cmp
pop
adc
in
xor
out
dec
stos
push
or
stos
loope
hlt
inc
ja
add
fs
mov
into
out
xchg
mov
pop
daa
xor
xchg
jge
stc
out
adc
inc
jno
push
sub
arpl
xor
lret
sub
xor
lahf
bound
sbb
pop
les
pop
stos
dec
and
inc
cmpsb
daa
dec
mov
or
fidivrl
lock
out
es
xor
mov
adc
add
mov
nop
mov
mov
cs
lods
push
scas
inc
push
cmp
inc
jae
or
iret
lock
ds
add
dec
mov
sub
dec
movsl
rclb
insb
mov
add
xor
loop
pop
mov
xor
in
inc
enter
push
sbb
or
push
testl
movsl
cld
jo
sbb
fiaddl
lea
ljmp
jg
jg
mov
lea
dec
dec
outsl
icebp
mov
sub
loop
xor
adc
pop
incl
or
cmc
jb
in
das
inc
xchg
or
lahf
lods
movsb
jge
cli
out
data16
mov
scas
sbb
mov
in
or
xlat
out
xchg
push
pop
xlat
out
inc
rcll
sub
dec
or
or
lods
sub
mov
fsubrs
gs
sbb
loopne
enter
mov
popa
add
into
mov
icebp
lret
inc
addb
push
cmp
scas
inc
jbe
mov
mov
popa
notb
pop
lahf
xchg
pop
adc
mov
insb
gs
add
add
and
loopne
out
ret
test
test
add
lahf
leave
adc
cmp
jno
mov
sub
jl
sub
xor
rorl
jecxz,pn
test
sub
lea
es
push
xchg
and
cld
inc
scas
cmp
enter
sbb
decb
gs
mov
mov
sbb
xor
lret
or
jae
cmp
cld
add
push
fcmovu
pop
pop
adc
movsb
mov
push
sbb
cs
cs
adcb
adcb
mov
int
pop
nop
sub
adc
and
mov
aaa
xor
lock
or
push
roll
mov
out
loop
cmpsl
test
outsl
and
xor
push
bound
mov
xchg
pusha
jbe
stc
hlt
jno
pop
pop
bnd
push
jns
andb
rolb
fidivs
into
leave
ds
fildl
dec
xor
lods
sub
mov
sbb
shlb
push
pop
stos
cmp
adc
add
aad
pop
xchg
add
pop
addb
sbb
repnz
push
fwait
shlb
sbb
jbe
jb
sar
fists
xchg
or
jo
loopne
lea
mov
lret
pop
pusha
ss
lock
pop
cmp
out
adc
adc
cmp
and
or
add
mov
push
stos
sub
xor
push
cmc
shll
lods
popa
adc
stos
test
cmp
cmp
pop
pusha
push
mov
lods
arpl
add
push
fdivl
dec
adc
mov
dec
inc
incl
lods
cltd
adc
imul
dec
jo
or
pop
es
jmp
inc
test
and
ret
xorl
adc
mov
inc
sbb
pop
dec
xor
test
popa
xchg
lds
pusha
icebp
lahf
cmpsl
pop
xchg
outsb
adc
xor
imul
clc
or
shrl
repnz
aaa
hlt
inc
add
inc
inc
das
adc
int
xchg
das
push
dec
lahf
les
lcall
gs
pop
jmp
outsl
insl
sbb
cmp
xor
sub
leave
or
sub
aaa
jg
movsl
add
jbe
mov
jg
loop
insl
pop
adc
popf
mov
icebp
pushf
inc
pop
imul
testl
lock
xor
mov
sub
cs
cltd
xchg
loope
jbe
cmp
sti
cmp
repz
cmpsb
push
stos
inc
dec
out
adc
stos
fildll
mov
mov
push
push
bound
cmpsb
mov
into
addr16
push
jle
sar
orl
push
jge
fsts
or
fldl
out
jg
imul
mov
nop
jecxz
ds
flds
cs
push
push
pop
jecxz
test
jmp
jg
ret
push
adc
pop
pop
inc
cmp
xchg
push
sub
insb
and
xchg
add
pop
loop
adcb
pop
cmp
cli
or
movsl
mov
aam
in
hlt
fwait
je
jmp
fdivp
inc
push
sbb
cli
subb
mov
xchg
pushf
sbb
jnp
pop
je
outsb
mov
or
inc
or
jnp
sbb
jae
es
adc
mov
ljmp
outsb
push
xlat
scas
lcall
lret
mov
pop
cmc
cld
scas
scas
xchg
bound
leave
xor
je
cld
xchg
pop
xchg
lahf
sbb
push
push
inc
cmp
dec
aad
dec
out
lcall
add
lret
pop
ret
div
mov
mov
popl
insl
jnp
stos
sbb
dec
jp
imul
insl
cmp
jle
mov
or
imul
push
xchg
push
ja
push
push
xchg
and
popa
xchg
adc
or
jl
sbb
les
inc
jns
jo
cltd
xor
dec
das
xchg
dec
shll
fs
mov
gs
loopne
jmp
testl
sub
jnp
jmp
push
mov
rcrb
and
adc
and
inc
cmp
sahf
jns
or
and
sub
je
js
lret
and
lods
mov
ss
cmp
adc
rolb
add
add
into
sub
push
mov
sti
jnp
or
dec
cmp
and
mov
in
jp
sbb
sbb
push
add
jl
or
pop
into
pop
jnp
inc
rolb
xchg
xchg
or
fisubrl
and
jbe
inc
lds
es
fwait
into
pop
ret
sbb
adc
sbb
pop
inc
in
dec
roll
sub
in
add
mov
ror
sbb
ja
in
cmp
movl
ja
pop
or
scas
adc
sbb
nopl
push
push
xor
outsb
jge
fcoml
pop
cmp
push
cmp
int
or
pop
inc
add
dec
push
inc
ja
roll
jg
jb
jne
mov
fisubrl
mov
sbb
add
and
pop
arpl
push
repnz
xor
or
mov
stos
in
pop
push
aam
sub
icebp
imulb
jbe
sub
bound
jp
test
xor
notl
push
pop
mov
or
pop
and
adc
mov
mov
mov
ljmp
nop
or
or
ljmp
sbbl
push
mov
mov
pop
mov
test
xor
jecxz
stos
and
dec
and
rcll
ficomps
stc
cltd
jb
loope
ljmpw
inc
cmp
or
pand
jnp
movsb
dec
adc
and
movsl
nop
cmp
insl
inc
fcoms
sti
xorb
push
loopne
cmc
xchg
adc
js
mov
sub
push
popf
fcmovnb
push
out
sub
loope
jne
leave
sub
movsl
jecxz
movsl
dec
inc
pop
jae
mov
aas
lock
mov
mov
add
dec
mov
fnstsw
hlt
lods
pop
pop
inc
inc
mov
xor
inc
mov
pop
fildll
jbe
sbb
int3
aaa
les
std
les
lock
bound
sbb
test
push
lods
lods
mov
sub
test
enter
rcrl
jno
addr16
xchg
dec
dec
mov
jecxz
jne
lods
mov
mov
mov
xchg
fisttps
ret
cli
mov
cmpsl
pop
filds
adc
fmulp
push
test
divb
push
add
cmp
bound
cmp
mov
add
inc
aad
pop
adc
jl
push
jae
and
xor
imul
sar
add
adc
out
add
ret
xchg
fmuls
lcall
sbb
insl
les
push
push
cmp
pop
xchg
div
jo
xchg
push
movsb
test
push
fcoms
jb
subb
gs
cmpsb
jo
or
loop
clc
fstps
sbb
mov
sbb
lahf
loope
add
rcrb
insl
push
pop
push
lret
lock
subb
nop
shlb
pop
and
ljmp
jmp
repz
sahf
pop
mov
or
xor
testl
sbb
popf
ds
jmp
orb
pop
pushf
aam
and
mov
ljmp
out
bound
mov
jmp
ljmp
imul
pop
or
cmpsl
fwait
sbb
and
mov
inc
and
push
jg
in
cmp
in
test
cs
xor
push
mov
jle
aam
das
cmpsb
push
cmpsb
aam
jmp
mov
sub
or
cmp
dec
sub
or
arpl
mov
imul
cli
lret
mov
insb
sub
mov
pop
out
out
movups
mov
rorl
stc
sub
sbb
dec
test
add
cwtl
cmp
ret
mov
dec
xor
and
and
outsl
mov
sub
in
mov
insb
inc
mov
jnp
hlt
inc
sahf
cmp
shlb
add
cmp
pop
jno
dec
mov
lret
or
adc
movsl
adc
repz
sub
ja
xlat
std
push
ret
rorb
mov
push
pop
push
es
mov
pusha
sbb
test
ror
inc
outsl
lahf
insl
and
mov
hlt
xor
arpl
aam
inc
xchg
shll
loope
inc
stos
rolb
das
imul
ret
mov
repz
rorl
adcl
fcoms
daa
rorl
pop
mov
xor
inc
ficoms
dec
fnsave
xchg
jg
xchg
sbb
mov
es
mov
out
adc
jbe
push
hlt
pop
cmp
sbb
mov
loopew
daa
mov
and
fildl
shll
imul
mov
push
clc
pop
sbb
xor
xlat
xlat
popf
out
pop
dec
pop
mov
clc
repnz
inc
jae
add
mov
outsl
push
iret
mov
les
notb
add
mov
ja
adc
pop
imul
je,pt
dec
pop
xor
jb
jnp
sbbl
mov
add
rep
dec
mov
dec
jnp
pop
jo
adc
leave
daa
pop
mov
scas
sti
ss
pop
cmp
sub
pop
inc
cmpsb
test
imull
or
sub
rcrl
scas
hlt
cs
pop
aas
cmp
mov
fwait
lret
xor
iret
sub
movsl
orb
mov
jmp
out
dec
fldenv
mov
add
movsl
imul
jmp
pop
xchg
loop
loop
cmp
pop
js
adc
xor
push
or
dec
iret
push
loopne
mov
or
xchg
inc
xor
and
stc
pop
sub
pusha
ds
pop
dec
fwait
jmp
add
ss
ret
adc
or
aam
lock
mov
bswap
mov
lea
dec
sub
stos
clc
pop
mov
fnstenv
mov
add
imul
mov
ljmp
insb
inc
cmpsb
cmp
int
sbb
sti
jg
add
or
xlat
mov
test
shlb
out
stos
pop
loope
gs
pop
and
stc
repz
push
out
cmpsb
mov
in
or
repnz
leave
cmp
bound
xchg
mov
jge
or
jp
sbb
pop
mov
hlt
arpl
loope
decl
mov
or
hlt
xor
scas
rcll
fldt
ss
aad
out
pop
add
repnz
stos
mov
jp
inc
push
arpl
out
ret
jge
jecxz
push
adc
inc
jl
push
mov
xchg
por
pusha
rorl
jo
xchg
sub
pusha
and
stos
pop
or
mov
lods
and
loop
loopne
fidivrs
dec
pop
pushf
cmp
mov
es
movsb
mov
out
adcb
loopne
adc
inc
xchg
dec
mov
pop
jg
or
sub
mov
mov
ds
mov
testb
pop
into
sahf
repz
mov
test
incb
and
push
mov
lret
cmpsb
xlat
jns
xor
lahf
jo
lret
mov
mov
js
sub
ss
ffreep
mov
jecxz
sbb
sbb
jne
or
jns
frstor
push
in
je
popf
xchg
cmp
sub
adc
add
lcall
ret
jecxz
sarb
jae
in
xchg
ret
stc
cmp
scas
dec
movsl
xor
scas
shrl
cli
xorb
call
hlt
or
out
loopne
ret
xor
ficoms
addr16
addb
xchg
bnd
cwtl
movsl
bound
jae
xor
mov
pop
sub
dec
xchg
daa
jbe
mov
js
shl
xor
and
sub
mov
pop
aaa
inc
subb
and
data16
jbe
lret
push
jne
add
push
dec
std
fcomps
or
sbb
or
push
adc
mov
add
cmp
xchg
cwtl
sub
jg
cmp
sub
shl
je
mov
stc
inc
cmpsb
xor
mov
addr16
lret
adc
bound
loope
cmp
inc
pop
mov
or
push
push
jecxz
js
out
shrl
ret
jmp
mov
or
and
pop
adc
out
push
arpl
shlb
das
inc
jle
mov
cmp
loopne
cmp
sti
int
test
aad
push
clc
and
sub
sbb
idivb
jmp
jae
adc
ja
cmp
xchg
lret
dec
pusha
pop
jno
cmc
aam
inc
xchg
jnp
push
pop
adc
gs
and
sti
inc
test
adc
stc
aas
clc
or
jge
xor
push
out
adc
jl
jae
push
or
icebp
xor
sbb
loop
adc
xor
into
xor
sub
daa
call
cltd
rcll
gs
movsb
mov
sbb
fwait
adc
in
lahf
lock
sbb
shr
sbb
jno
pop
nop
sub
xchg
or
push
cmc
xor
jge
inc
cmp
fwait
hlt
lret
cmpl
std
cmp
lock
popf
mov
inc
lock
ds
cld
inc
shll
cli
std
mov
int3
adc
sub
fwait
push
or
inc
scas
insl
clc
in
fsts
mov
xchg
xlat
cmp
lods
test
pop
idiv
sar
ja
shll
xlat
jle
repnz
adc
pop
add
cmp
test
mov
xlat
fdivs
das
sbb
adc
nop
fisubrl
xor
dec
in
xor
or
out
jno
pop
imul
and
shlb
jbe
xchg
xlat
jge
loopne
jg
loop
nop
inc
inc
pop
push
and
rcr
mov
test
mov
rcrb
dec
jb
cld
pop
mov
mov
sub
or
pop
incb
cs
sbb
insb
lock
ret
das
arpl
rorl
and
jmp
mov
add
lds
in
mov
and
sbbb
mov
inc
mov
aad
and
cmpsl
xchg
jge
cmp
daa
lods
pop
movsb
push
or
inc
je
mov
pusha
aad
inc
push
jge
faddl
inc
pop
lahf
incl
push
jno
xchg
pushl
jno
andb
fwait
add
mov
jnp
sbb
jge
test
push
ds
xor
and
cwtl
rcrl
push
aaa
pop
xchg
fdivl
xor
mov
aad
or
sbb
fcmovne
dec
xor
repz
je
movsb
sahf
and
adc
cmp
out
pmuludq
cwtl
xchg
std
inc
lahf
dec
sub
xor
jbe
dec
shrb
and
and
pop
out
shrl
scas
sub
lods
or
pop
sub
test
or
shlb
adc
mov
sbb
pop
cld
and
out
lret
sub
mov
push
jno
into
adc
xor
test
mov
lea
and
addl
lret
jo
mov
jg
jbe
mov
sub
xchg
dec
mov
pop
lock
cs
insl
lock
push
mov
adc
xchg
cmpsb
scas
pop
xlat
adc
mov
cmpsb
sub
xor
sti
pop
pop
sub
mov
mov
idivl
test
sub
pop
es
mov
xlat
dec
pusha
adc
mov
jmp
mov
repz
loopne
jne
addl
rcrb
insl
ljmp
cwtl
scas
push
mov
fcmovu
push
pop
addps
lret
mov
nop
cwtl
xchg
jb
outsl
mov
sbb
inc
test
or
add
sub
outsb
insb
or
jb
dec
dec
jp
inc
lahf
mov
js
leave
inc
andb
jb
pop
outsb
jb
xchg
xor
leave
popa
push
or
lea
sub
lahf
mov
push
test
loope
mov
inc
ja
hlt
mov
and
int3
and
mov
enter
aad
cmp
xor
push
xchg
xor
mov
adc
jbe
sub
insb
stc
sbb
mov
cmp
sbb
sub
pop
xor
cmpsb
mov
inc
mov
nop
adc
cmp
add
lock
xor
cmpsl
nop
addr16
ret
jle
jle
add
lret
pop
mov
inc
jp
popa
std
les
jp
cmpsb
mov
jg
add
cmpsl
insl
jecxz
adcb
dec
inc
push
or
and
jne
mov
xchg
in
push
xchg
jecxz
imul
lods
js
dec
pushf
rcll
sbb
je
xchg
stc
bound
gs
or
jbe
pop
sbb
push
sbb
loop
adc
dec
enter
getsec
ss
pop
jno
fdivs
fs
add
lods
pop
push
inc
std
add
mov
pop
mov
aaa
scas
cmc
cld
mov
push
push
lea
iret
pop
repnz
push
mov
js
sahf
mov
sarl
xchg
mov
roll
stos
jg
cmp
xchg
xlat
mov
int
testl
push
mov
sbb
call
fcmovbe
fwait
and
out
sahf
ds
mov
movsb
cmp
jge
sbb
iret
loop
loop
push
cmp
mov
dec
xchg
xchg
cltd
lahf
ret
sbb
add
outsl
add
lcall
push
sbb
outsb
mov
xor
mov
mov
xchg
cmpsb
daa
cmp
pop
push
dec
bound
aad
out
cmp
in
xchg
or
dec
push
adc
mov
push
ret
pop
add
mov
stc
add
jb
push
cmpsl
sub
jecxz
in
xchg
imul
mov
lds
pop
xor
lods
dec
add
cld
ret
sarl
jg
mov
out
sbb
gs
and
and
mov
pop
push
pop
in
arpl
jae
and
hlt
fdivrl
in
lods
inc
jnp
cs
mov
inc
xchg
inc
push
dec
sub
jns
sbb
clc
fsubs
and
push
cmpxchg
subb
cmp
inc
js
push
lods
xchg
dec
daa
cmpsb
or
lahf
mov
pop
imul
arpl
loopne
sarb
sbb
cltd
hlt
xchg
mov
mov
movl
push
xor
mov
xor
cmp
ror
std
call
sub
js
mov
das
lret
scas
cli
lods
dec
lret
js
lock
ret
xchg
sbb
pop
xchg
lods
push
mov
mov
dec
std
push
mov
cld
in
cmp
shll
mov
push
sbb
push
push
or
sub
lea
dec
ret
arpl
in
lods
ret
into
mov
mov
dec
ljmp
push
rorb
jb
enter
dec
cmpsb
scas
pop
mov
xor
lea
in
dec
stos
mov
inc
loop
arpl
and
cmp
mov
dec
inc
cmp
inc
aaa
or
or
jle
pop
or
mov
inc
mov
test
xchg
lock
lcall
dec
push
bound
add
cmpsb
inc
ret
dec
dec
pusha
pop
pop
lods
mov
jg
add
inc
lcall
fwait
cmpsb
inc
add
pop
ret
dec
jecxz
xchg
inc
das
dec
cmp
mov
jb
shll
lcall
dec
jns
jl
add
mov
mov
data16
mov
xchg
outsl
sbb
pop
dec
pop
adc
incb
mov
adc
xlat
jne
sbb
xchg
ds
popa
cltd
jae
mov
scas
lods
inc
xchg
mov
sbb
ljmp
hlt
in
ret
inc
cmc
addl
lcall
or
xchg
cli
cli
outsl
gs
mov
fisubs
push
cmpsl
mov
dec
dec
lods
sti
ret
ja
push
in
sbb
insb
lods
dec
xchg
mov
sti
push
jl
xchg
fwait
pop
stos
jp
out
lock
mov
test
test
test
xor
dec
mov
fmull
lea
out
mov
adc
loope
out
in
int
stos
push
add
iret
and
jne
lods
shrl
int
leave
push
ljmp
sbb
push
add
mov
loopne
jae
pop
add
pop
mov
pop
repnz
ror
mov
pop
pop
push
xor
inc
xchg
xor
cmp
jecxz
lcall
mov
rcl
cli
and
push
out
jle
ss
sbb
push
call
fbstp
outsl
imul
dec
adc
pop
in
xchg
scas
rolb
xchg
cmp
jge
jnp
mov
aam
in
rorb
enter
rcrb
daa
cmp
pop
mov
cs
hlt
test
dec
fdivs
push
sbbb
and
cli
aam
in
and
fs
inc
and
jmp
adc
and
adc
xchg
mov
dec
sbb
in
icebp
out
out
inc
mov
mov
out
inc
xor
stos
out
mov
ds
loope
lods
push
xor
push
jge
mov
pop
xchg
pop
js,pn
aaa
fs
nop
mov
icebp
pop
xchg
push
imul
sahf
rorl
mov
push
scas
cmp
filds
ret
pop
push
adc
sub
hlt
out
mov
gs
jb
dec
jno
mov
js
iret
jmp
or
out
testb
je
aad
popa
cs
mov
pop
imul
xchg
out
mov
and
dec
sub
gs
cmpsl
xor
pop
negb
lods
inc
fstpt
xlat
jle
nop
imul
je
nop
scas
out
imul
popa
test
fstps
orb
sarl
mov
push
mov
jmp
mov
and
push
xor
repz
addr16
ss
cmp
lret
dec
xchg
repz
movsb
nop
fcos
push
pop
test
dec
test
sbb
mov
fidivrl
sub
in
push
in
cltd
pop
ficomps
cmc
jp
push
mov
movsl
fucomip
jle
add
movsl
xchg
sub
fs
add
lds
outsb
ja
sbb
imul
pop
mov
cmc
or
jle
mov
or
lock
sahf
xor
mov
outsl
ja
jno
jo
dec
sahf
jbe
fidivs
into
aas
mov
adc
jns
or
pushf
test
vpsubb
mov
dec
sar
push
fstps
pop
mov
jg
int3
push
and
mov
xor
dec
mov
mov
repnz
mov
xlat
mov
cmc
inc
data16
mov
push
mov
pop
cmpsb
push
add
or
pop
cmp
mov
hlt
shr
loop
fildll
mov
cmp
fs
addr16
repnz
mov
mov
sub
inc
cmpsl
dec
add
call
cli
loopne
dec
adc
jp
mull
les
inc
and
jp
mov
popf
dec
or
pop
cmpsl
bnd
sbb
cmp
mov
repz
mov
cli
loop
push
dec
jmp
xor
mov
sub
xlat
loop
pop
push
rcrl
xorb
sbbb
pop
inc
dec
les
pop
pop
cmc
inc
push
dec
push
into
add
sbb
enter
aas
jne
jne
or
mov
lcall
jne
cmp
xor
pop
sub
cmp
dec
push
and
jl
in
addr16
sbb
pop
add
lret
dec
in
jle,pt
push
dec
lods
xor
push
adc
fistpl
cmp
xchg
loopne
mov
int3
dec
pop
cli
mov
cli
mov
jg
push
push
leave
dec
jp
jae
ja
cld
pop
adc
or
in
push
aad
repz
and
inc
and
xchg
negl
sbbb
inc
in
in
and
dec
daa
repnz
inc
push
pop
outsl
cli
je
adc
sbb
and
je
lods
or
out
fcompl
mov
repnz
subb
cmp
mov
movlps
cltd
sbb
xchg
lea
cmp
iret
xchg
js
xor
js
cmp
mov
jbe
test
mov
das
data16
aam
test
mov
sub
ficoms
xor
xchg
fistpll
into
jns
ljmp
enter
adc
popf
sub
fldt
lock
int3
mov
ss
pop
ss
lea
int3
aam
ret
aad
roll
sti
lret
aad
xorl
fisttpll
popf
adc
push
cs
xor
sbb
fwait
jb
xchg
je
add
lods
mov
sbb
jp
popa
adc
pop
jg
cltd
loope
dec
adc
ds
insl
pop
jnp
lds
pop
xchg
cwtl
push
jns
mov
inc
pop
lods
jnp
jne
xlat
and
push
jns
sub
mov
cwtl
call
push
mov
cmp
inc
cwtl
daa
sbb
pop
pop
xor
cmp
xchg
imul
sbb
and
enter
stos
jns
test
inc
shll
sbb
rorb
inc
xchg
add
inc
pushf
cmp
adc
add
xor
pushf
mov
repz
adc
adc
icebp
cli
lods
pop
test
xchg
cli
cmp
cmp
scas
xor
and
and
adc
xchg
sti
in
adc
push
jmp
and
repz
adc
aas
dec
insb
inc
loop
sbb
xor
jo
dec
xchg
ja
repz
and
icebp
sahf
pop
in
testb
cmpsl
out
jne
or
or
mov
movsl
xor
dec
in
iret
repnz
shl
in
cld
in
pop
lret
push
add
sbb
pop
in
stos
jge
ret
je
and
and
cltd
movsb
inc
mov
inc
and
jns
cmp
xchg
ret
repnz
pop
push
cli
clc
clc
mov
data16
pusha
mov
xlat
push
fcomps
add
data16
lock
loope
jnp
shlb
jns
loopne
push
in
adc
jmp
rcrl
fmull
addr16
outsb
sti
mov
outsl
ljmp
push
lcall
and
add
shll
test
mov
xchg
xchg
push
jp
sahf
xchg
jns
pusha
inc
out
and
fnstenv
xchg
or
sub
rclb
cmp
in
enter
push
fnstenv
popa
sbb
jo
adc
inc
xor
mov
lods
adc
daa
imul
stos
popa
popf
sub
daa
jo
xchg
jb
fsubrs
insl
pop
add
daa
clc
pop
fisttps
jno
xor
outsl
cld
in
xchg
mov
adc
xchg
data16
jp
sbbl
xchg
cmp
daa
jl
lret
mov
push
jl
aam
sahf
add
sbb
repz
cld
sbb
add
outsb
inc
lds
mov
and
test
dec
push
mov
stos
mov
and
cltd
in
fdivl
test
mov
sti
enter
repz
cmpsl
scas
pop
les
inc
xlat
cmp
inc
rorb
mov
pop
das
into
pop
sarb
cwtl
andl
sbb
test
cmp
push
inc
std
inc
pop
jmp
out
aas
mov
iret
pop
popl
mov
jl
dec
scas
push
adc
lods
out
daa
xor
in
fsubl
sub
xor
inc
call
test
add
cltd
sahf
stc
xchg
dec
loope
push
mov
pop
xchg
daa
addr16
nop
ds
and
movsb
stc
lds
and
dec
pop
in
dec
into
xchg
data16
cmp
mov
clc
jae
cmp
mov
push
lea
add
cmp
push
es
lea
jne
xchg
push
xor
mov
xchg
xor
shll
mov
jns
dec
subl
ja
mov
mov
sub
adc
cmp
mov
or
orl
xchg
mov
pop
mov
dec
js
push
sahf
or
adc
test
fimull
and
mov
sahf
sub
call
dec
sahf
arpl
xor
push
cltd
repnz
sbb
lock
nop
fldcw
adc
mov
ret
add
mov
aad
jnp
out
dec
dec
inc
scas
pop
xchg
sbb
hlt
inc
and
fbld
inc
add
fidivrs
arpl
push
ret
arpl
ss
mov
and
mov
adc
lret
push
push
mov
divb
jle
cmp
mov
sahf
add
notl
aam
push
xlat
or
in
movsl
add
mov
cmp
shlb
jg
push
lcall
xor
sbb
or
cs
xchg
lea
inc
cld
jp
std
stos
loopne
mov
es
data16
lods
inc
mov
push
adc
push
push
pop
icebp
stos
shrl
fwait
jnp
pop
adc
add
dec
test
out
adc
subb
push
sarl
mov
mov
cmp
mov
addb
mov
daa
sbb
mov
into
mov
pop
fcmovnb
rcll
ret
or
push
xchg
push
es
pop
ret
dec
rclb
arpl
lret
int
pusha
mov
or
inc
les
out
pop
push
jg
pop
xor
sub
xchg
adc
aaa
out
aaa
mov
or
mov
je
cmp
inc
jge
mov
movsb
lret
pushf
mov
cmp
ss
push
outsl
es
xchg
shl
pop
xchg
jecxz
xor
or
popa
pushf
mov
mov
dec
mov
fstpt
inc
popf
lea
sbb
add
fwait
add
mov
xor
in
hlt
ljmp
inc
fildl
outsl
push
into
je
xchg
mov
std
out
inc
mov
sahf
or
push
inc
ss
sub
mov
sub
ds
jnp
out
xchg
push
mov
aas
ret
cmpl
insb
mov
aad
xor
clc
rcrl
mov
repnz
lock
inc
dec
pop
mov
or
and
loopne
mov
mov
adc
in
sub
xor
repz
stos
mov
mov
arpl
pop
dec
dec
mov
mov
xor
and
sti
cmp
out
data16
xchg
mov
fstl
xchg
cmpsl
pushf
xchg
cmp
xorb
add
test
cli
arpl
sub
dec
jmp
cmpb
and
shl
mulb
movsb
daa
mov
ss
push
dec
xchg
jne
inc
in
popa
xor
adc
adc
out
divb
data16
dec
test
mov
and
fsts
cld
xchg
aad
js
into
push
mov
mov
out
data16
xor
stos
aad
mov
push
add
int
shlb
jno
add
nop
das
dec
mov
xchg
pop
cli
or
mov
adc
pop
adc
adc
aaa
loop
xchg
push
jno
lcall
and
daa
or
pop
mov
iret
leave
push
cmp
or
jl
push
xchg
add
call
ret
cmp
mov
pop
dec
je
addr16
loopne
lds
cmpb
lods
adc
aaa
sti
aaa
mov
adc
les
jecxz
push
or
mov
gs
jns
or
dec
scas
iret
mov
fstp
sub
hlt
mov
shll
sub
push
addr16
and
adc
jl
fsubl
push
xchg
adc
mov
inc
sbb
sub
leave
mov
pushf
addb
test
mov
lods
and
dec
xchg
outsl
xchg
mov
fidivrs
cs
mov
mov
scas
jns
mov
jecxz
sahf
test
inc
mov
mov
xor
mov
popa
xor
adc
lods
hlt
jecxz
and
mov
lock
xor
inc
leave
not
adcb
cmp
add
xor
movsl
adc
push
cmp
leave
mov
fildl
icebp
scas
xchg
mov
fwait
xchg
mov
lret
lret
fdiv
cltd
imul
inc
and
clc
cmpsl
bound
and
xchg
fnstcw
jo
inc
push
aas
dec
cmp
cmc
cmp
fistps
cmpsb
scas
sahf
mov
add
mov
int
cltd
mov
dec
add
pop
xor
cld
and
jo
cmp
test
std
xchg
and
fsubs
popa
or
sti
imul
into
sahf
sbb
arpl
pushf
cmp
out
xchg
das
je
in
movsb
xor
or
rolb
sar
pop
inc
xor
rcrb
mov
and
jl
jnp
das
mov
dec
push
pop
fcoms
fs
aam
mov
or
rcl
xor
dec
mov
jnp
xchg
outsl
sbb
dec
fildl
cmp
add
sbb
jnp
pushf
dec
fldcw
lahf
xor
aas
mov
fs
insb
mov
jge
pop
out
mov
adcb
fnstenv
shll
ja
andl
ja
sub
lds
and
cmp
push
call
je
inc
add
adc
xchg
in
cwtl
and
inc
test
jp,pn
addr16
fildl
push
push
add
dec
adc
sbb
or
xor
sub
in
jle
fmuls
sahf
setbe
icebp
cli
pusha
ret
sbb
add
test
dec
enter
and
adc
dec
fbstp
sub
out
push
sub
mov
xor
mov
sbb
push
add
xchg
scas
jnp
out
mov
or
add
adc
loop
lock
jns
mov
dec
push
insb
dec
scas
int3
jnp
fmulp
jbe
push
mov
test
test
sbb
fdiv
ficoml
mov
inc
pop
add
dec
sbb
mov
and
movsl
dec
cs
jmp
push
push
xchg
xchg
movsb
stc
xchg
push
loopne
fs
lods
dec
xor
stos
cmpsl
inc
std
aas
mov
insl
mov
dec
adc
push
and
je
push
mov
cs
mov
jmp
sahf
fcom
flds
into
cmp
mov
adc
insl
pop
out
fstpt
push
notb
mov
gs
clc
ret
sub
mov
cmpl
xchg
lds
pop
je
and
bswap
add
dec
loop
lock
std
sbb
fs
fcmovne
aad
leave
test
and
inc
push
lahf
cmc
mov
mov
fcompl
cmp
dec
ss
sarl
shll
mov
push
pop
aas
mov
dec
lcall
cmp
mov
cwtl
mov
fs
xchg
lods
test
inc
inc
jne
xor
xchg
loop
pop
out
or
xchg
clc
add
int
sub
and
xlat
lahf
sub
mov
out
mov
out
je
jne
dec
testl
mov
add
rolb
or
add
loop
in
rolb
lret
or
cmpsl
xor
pop
xor
add
jp
dec
push
pushf
cmc
imul
lds
mov
jb
add
or
push
daa
lahf
in
add
pop
lcall
in
sahf
out
or
mov
xchg
mov
pop
push
mov
dec
jg
mov
mov
je
clc
std
xor
fimull
leave
pop
pop
mov
test
inc
lcall
jno
fucomp
mov
mov
cmp
jae
sub
gs
outsl
daa
inc
mov
popa
xor
jl
cld
mov
dec
pop
xor
jo
inc
syscall
inc
inc
sbb
xchg
adc
mov
dec
loop
adc
fwait
inc
rorl
sub
in
add
xor
xchg
or
jno
loopne
ret
aad
mov
fidivl
push
js
cmpsb
lret
inc
testb
ss
outsl
sub
or
sub
mov
sbb
pop
stos
dec
aad
push
in
xor
mov
jns
outsl
icebp
xchg
data16
push
sbb
and
or
and
sub
sarb
not
cmp
hlt
inc
fdivp
popa
ss
xchg
and
shll
mov
sbb
mov
loope
ret
repz
dec
les
mov
mov
sub
jns
push
xor
jp
enter
mov
pop
ret
mov
add
push
ja
jg
sahf
out
sbb
rorl
pop
andb
dec
dec
enter
in
sub
stos
mov
dec
stc
sub
mov
xorl
or
shr
js
popa
fsubrl
pop
insb
push
mov
mov
sbb
pusha
lods
and
cli
arpl
adc
in
inc
mov
sti
or
and
push
mov
mov
fcompl
jge
sub
xchg
mov
test
inc
jne
pop
outsb
bound
xchg
movsl
push
icebp
stc
mov
leave
xchg
testl
pop
xor
cmp
nop
cwtl
lret
and
jp
pop
loope
insb
push
xor
shr
imul
lds
cld
cwtl
leave
cmp
imul
jg
iret
sti
stos
add
mov
test
mov
mov
adc
movsl
scas
add
sub
mov
fmull
mov
dec
jae
inc
call
lahf
add
fcom
push
or
pusha
cmp
iret
sbb
and
cmp
pop
js
sbb
les
outsb
jle
rcl
std
add
cmp
add
mov
mov
mov
repz
out
notl
xor
pop
adc
sub
sub
lret
rol
lret
in
push
xor
push
adc
cwtl
mov
into
stos
bound
bound
fdivrl
sub
repz
jmp
ret
xor
repnz
addr16
xor
push
xchg
in
pop
cmc
shl
mov
mov
pop
cmc
dec
cmp
fsubrl
shlb
sub
pop
test
cmpsb
pop
ja
pop
aaa
push
adc
arpl
ucomiss
out
les
jnp
das
lds
shl
loope
ja
dec
lods
inc
cmp
inc
pop
movsl
mov
stos
outsl
fwait
jo
and
lahf
fwait
and
aam
ficompl
jno
or
mov
xlat
test
fucomi
cmp
mov
adc
sbb
in
lret
ds
jle
or
leave
sub
dec
loope
sub
sbb
inc
sbb
push
cs
in
imul
or
std
test
nop
xchg
fiadds
xchg
sub
push
stc
or
push
test
rol
mov
sbb
fs
xor
scas
icebp
loope
stos
mov
icebp
dec
xchg
mov
cli
push
xchg
adc
sbb
add
xorl
jecxz
xor
mov
iret
jmp
sahf
mov
aam
push
int
pop
and
test
lcall
jmp
loop
ljmp
lods
jb
cmp
addr16
xor
mov
mov
movsb
fs
and
adc
push
adc
xchg
test
adc
add
sbb
or
fldenv
div
pusha
test
jnp
dec
mov
lret
cmp
adc
xchg
jno
jo
sbb
test
xchg
or
movsb
add
push
out
sti
cmp
push
dec
popf
jns
jle
sub
mov
sbb
shl
lods
dec
xchg
inc
repz
clc
pusha
dec
decl
sbb
lcall
insb
ljmp
leave
mov
sbb
cmp
test
ljmp
andb
movsl
jmp
decl
cld
into
das
cmp
in
pop
movl
cmp
sbb
push
out
inc
or
stos
jns
out
xor
scas
xlat
xor
andl
jmp
scas
out
repz
jo
je
mov
fdivrl
adc
or
adc
test
mov
nop
sahf
cwtl
push
sub
mov
ret
push
ret
sub
add
int
sbb
lret
pxor
adc
jns
ficoml
inc
mov
gs
xchg
lahf
iret
lods
jge
fs
cwtl
sbb
push
test
fcmovne
pop
jmp
jns
dec
fldl2e
notl
fists
outsb
fucom
aaa
out
cmp
push
dec
xor
js
ja
pop
inc
rorl
testb
inc
inc
or
and
add
in
imul
repz
popa
and
and
xchg
ds
pop
sub
or
jo
jl
inc
shll
push
clc
test
addr16
loope
pop
add
cmp
aam
dec
or
dec
loopne
xchg
ret
adc
push
imul
cwtl
dec
jne
mov
cwtl
push
cmp
mov
shll
loop
jg
push
mov
mov
scas
outsb
pop
push
dec
notl
insl
sbb
mov
cmp
imul
cs
test
xchg
lds
cmp
cwtl
movsl
push
add
or
xchg
cmpb
push
jbe
pop
inc
jno
test
xchg
mov
xor
movsl
push
sbb
in
cmc
xor
inc
mov
fwait
pop
pop
or
addb
push
ret
jmp
cmpsb
ss
mov
xchg
or
or
sbb
das
mov
mov
out
sub
jmp
out
sahf
cmp
setg
shrb
cmp
add
push
mov
rolb
xor
xchg
cwtl
lret
pop
mov
mov
cmp
bound
jb
outsb
mov
cs
data16
call
dec
inc
sbb
jae
out
movsb
or
cmpsl
and
psrlw
addr16
fimuls
mov
pop
outsl
inc
xlat
jbe
mov
and
lods
cmp
and
orl
hlt
inc
hlt
lods
in
pop
ds
js
cs
stos
rorb
stc
fs
xlat
pop
push
addl
sub
daa
movsl
mov
jnp
dec
mov
les
scas
shll
push
push
sar
insb
dec
mov
push
mov
mov
cmpsb
aas
fisubrs
cmp
test
in
aam
js
test
and
cs
outsb
out
jns
add
xchg
loope
jge
outsb
cmp
cmpsb
mov
orl
ja
sbb
lea
es
pop
bound
orb
cmp
jae
sbb
jp
popf
ds
dec
pushf
iret
cmp
or
cli
jno
stos
cmp
or
rcll
and
lods
xor
repnz
pop
mov
mov
loope
mov
outsb
dec
sub
lods
pop
add
enter
jg
mov
jns
popl
sbb
stos
aad
dec
or
aam
pusha
adc
mov
push
mov
pop
leavew
pop
mov
pop
bound
insb
xor
rorl
or
js
bound
dec
int3
or
outsl
dec
mov
iret
and
xlat
out
and
shrl
lahf
xchg
or
lds
movsb
push
mov
mov
int3
pop
add
scas
jecxz
mov
adc
out
cmp
mov
jo
cmp
loopne
inc
insb
pop
push
jbe
fidivrl
dec
add
scas
insb
aaa
mov
xor
inc
in
xor
mov
loopne
jle
enter
pop
push
jno
adc
icebp
stc
mov
call
pop
jns
js
add
sarb
mov
and
adc
adc
nop
inc
and
sbb
adc
xchg
mov
out
or
repz
xchg
sti
das
in
push
stc
and
xor
pop
jp
arpl
mov
imul
lret
dec
jo
add
xchg
adc
fwait
and
cltd
inc
or
cwtl
xchg
push
fnstsw
jg
sub
or
add
mov
push
pop
in
inc
jno
xor
mov
inc
and
ret
jne
arpl
outsl
sub
pop
mov
mov
cmp
flds
mov
inc
outsb
xchg
jns
pop
xor
or
fstps
stos
ret
mov
mulb
scas
sbb
mov
test
sbb
pop
imul
cwtl
leave
mov
outsl
lods
ret
mov
loop
sarl
xor
insl
loope
adc
jo
add
mov
cmc
dec
aad
inc
jge
sbb
sub
jge
xor
sbb
mov
pop
outsl
cmp
inc
adcl
adc
movsb
lret
xchg
cld
in
pop
stc
jecxz
and
lods
popa
fidivl
ret
subb
lds
sub
inc
or
sub
ror
sahf
fidivl
dec
aam
pop
inc
sbb
test
dec
jmp
mov
xchg
and
decl
xor
mov
dec
cwtl
inc
aad
fwait
jmp
imul
dec
xchg
ret
decb
outsl
icebp
fnstsw
jecxz
inc
mov
test
arpl
int3
pop
outsl
mov
adcb
pinsrw
outsl
stos
inc
xorl
das
jl
cwtl
sahf
xor
nop
or
inc
adc
cmpl
mov
pop
pop
pop
adc
and
fs
outsb
movsb
lahf
pusha
jecxz
mov
pop
xor
lret
sub
nop
add
mov
add
inc
mov
rclb
rcr
and
pop
aam
ss
fsubrp
push
inc
jne
mov
in
ja
shl
frstor
inc
pop
jg
or
stc
jb
jecxz
int
adc
xchg
mov
xchg
ds
or
pop
mov
iret
js
aas
jb
dec
sub
inc
dec
mov
jne
nop
jb
mov
push
lods
mov
addl
loopne
movsl
aaa
add
imulb
cmpb
sbb
and
les
stc
cs
jg
in
ret
mov
cmp
xor
test
mov
lods
shlb
sbb
in
jno
idivb
icebp
jne
or
jb
in
rcrb
arpl
jle
cmp
mov
xorl
mov
xchg
jne
cmp
sbb
addps
icebp
data16
xchg
push
jecxz
repz
in
shll
daa
std
xchg
ficoml
push
cmp
sub
dec
xchg
push
xor
xor
fsubr
rorl
inc
insb
int
mov
es
pop
mull
mov
xor
movsl
in
addr16
pop
les
lock
sbb
pop
cmc
daa
mov
lahf
sbb
pushf
cmc
push
add
popf
mov
cmpsl
out
push
insb
nop
mov
leave
jno
mov
lret
mov
sub
mov
fadd
and
push
adc
and
cmp
cwtl
xchg
imul
enter
pop
outsb
and
pop
mov
add
gs
das
hlt
and
push
mov
xchg
nop
data16
cmp
into
cmp
imul
and
mov
cmp
sub
out
push
fiaddl
mov
jmp
aam
fiadds
out
mov
add
scas
mov
insb
cli
or
lahf
lret
push
cmp
add
iret
in
fstl
lahf
adc
cmp
iret
popf
xchg
or
cmp
or
dec
dec
mov
push
fnsave
pushf
out
fisttpll
scas
rorb
inc
push
test
lret
lds
or
mov
mov
push
shrb
jns
js
mov
dec
mov
inc
cmp
out
std
js
mov
es
mov
clc
or
ret
mov
outsl
xor
loope
inc
jmp
inc
es
ja
mov
mov
scas
dec
jg
or
xchg
insl
xchg
mov
xchg
pop
dec
sub
sbb
stc
outsl
test
ficomps
adc
das
lret
orb
sub
push
mov
testb
insb
insb
fsts
mov
inc
cwtl
mov
adc
pusha
sub
lret
rolb
adc
mulb
mov
fnstenv
inc
mov
test
sti
dec
divl
insl
repz
into
cmp
push
movsl
in
jecxz
dec
nop
and
cmpxchg
aas
cmp
fisubrl
dec
ror
push
mov
in
sbb
add
inc
cmpsb
insl
xlat
adc
fistl
mov
stos
jbe
jecxz
or
pop
rorb
out
sti
sub
test
push
xlat
push
cli
inc
pop
pop
out
and
call
dec
dec
mov
mov
pusha
lret
aaa
leave
out
orb
es
sub
sbb
jo
add
mov
in
addr16
scas
sbb
aad
push
inc
pop
lret
cld
xchg
pop
sbb
into
iret
xlat
or
outsl
data16
xchg
sbb
jb
mov
nop
mov
shll
sub
adc
sbb
adc
jbe
int3
fstl
mov
pop
cwtl
sti
mov
cmp
ja
jp
daa
push
mov
mov
call
outsl
test
lret
icebp
lcall
pop
mov
xor
loope
shr
push
adc
pop
call
mov
cmp
inc
test
add
out
mov
imulb
fcomp
push
sub
sbb
sbb
ja
aaa
stos
hlt
inc
inc
jle
cltd
outsb
mov
cltd
bound
aad
ds
jg
mov
adc
sarb
xchg
ja
pop
outsl
addr16
into
cli
adc
cmp
add
outsb
scas
rclb
mov
xchg
cmp
pop
fwait
in
les
pop
xchg
xchg
pop
stos
push
mov
lea
div
int3
iret
movsl
sbb
mov
notl
outsl
std
fsubrs
fmull
inc
xchg
inc
mov
insb
mov
loope
adc
pusha
fsubrl
mov
inc
push
leave
mov
add
xchg
out
sub
push
pop
pop
mov
in
insb
xor
mov
push
adc
je
sbb
mov
into
cmp
scas
das
flds
mov
and
or
inc
test
mov
xchg
dec
add
push
outsl
jge
into
pushf
loope
pop
scas
mov
cmp
mov
sbb
test
inc
push
lock
xchg
mov
fdivs
push
jno
movsl
les
rcl
fcoml
and
test
adc
test
adc
dec
cmp
xchg
mov
cltd
js
cmp
xor
xor
in
rorl
imul
inc
lock
daa
fstpt
pusha
popf
stos
in
stos
cmc
test
sub
or
mov
push
sbb
fldenv
roll
dec
sbb
pop
popa
fnstsw
pop
push
in
ljmp
push
cli
sbbl
jp
or
idivb
imulb
add
cmpsb
or
push
mov
push
jge
inc
mov
andl
add
hlt
lcall
jno
movsb
mov
jns
pop
sub
cmpsl
stos
outsl
add
aad
sub
pushf
in
jge
mov
jns
mov
fidivs
pop
sub
mov
sub
mov
add
jge
movsl
mov
push
out
or
loope
lahf
mov
bndldx
ja
in
into
push
lahf
ret
add
fs
jp
sbb
mov
mov
les
das
jge
jnp
inc
gs
cmc
jo
mov
out
pop
lods
lret
mov
mov
adc
pusha
push
xchg
das
and
pusha
adc
dec
mov
push
stc
cwtl
and
out
pop
xor
push
push
push
cmc
mov
ss
jne
and
in
pop
jmp
and
test
push
add
or
cmp
xor
pop
fcompl
cltd
lcall
in
pop
jns
jns
cmp
add
fstps
sub
jno
lret
scas
mov
jb
lea
mov
and
inc
push
jp
imulb
mov
loope,pn
sub
test
jmp
sub
insl
in
push
fisttpll
jnp
aad
mov
lock
push
jae
xchg
xchg
push
aaa
sub
xchg
cmc
jle,pt
push
test
mov
scas
bound
negb
pop
cwtl
sti
xor
dec
mov
sbbl
fs
adc
mov
mov
jb
in
and
out
outsl
daa
cltd
push
dec
fstpt
push
mov
jne,pt
sub
test
pop
xchg
outsb
or
outsb
andb
aam
xlat
sti
mov
leave
push
sub
int
jb
sbb
in
lds
mov
cwtl
bound
lods
out
jns
cmpsb
dec
fcoms
mov
rorl
stos
negl
push
and
rcrl
pop
aad
xchg
cmc
mov
cmc
ds
lcall
sbb
fisttps
mov
pushf
cmp
cmp
pop
out
mov
cmpsl
xchg
mov
stos
shlb
iret
xor
shlb
mov
test
xchg
mov
out
and
imul
push
mov
ret
addr16
dec
cltd
stos
cmpsb
cmp
mov
pop
adc
push
sub
shrb
or
lods
push
pushf
push
jmp
loop
ret
sub
enter
shl
mov
jmp
pop
imul
lahf
xor
mov
lods
xor
push
fbstp
xchg
iret
mov
push
shlb
aaa
notb
ret
jecxz
sub
jp
cli
gs
jns
dec
lea
repnz
loope
rorb
xor
jl
or
jle
cld
fists
mov
ja
add
hlt
sbb
or
cli
xchg
inc
adc
stos
in
push
xchg
movb
and
or
adc
xor
out
aam
das
pop
clc
push
subl
xor
cs
ja
rorb
xor
lcall
inc
mov
sub
inc
sub
ret
jns
rcrb
and
jmp
mov
cwtl
jecxz
and
aaa
mov
lods
cmpl
xchg
lods
pop
roll
xchg
mov
pminub
dec
mov
in
pop
fldt
mov
push
cld
push
cld
jae
jo
test
sub
adc
xchg
lock
jmp
out
mov
jmp
sahf
push
sub
test
xor
sub
pop
cli
leave
push
mov
out
incb
add
fdivrl
iret
xor
add
ja
add
mov
andb
mull
mov
mov
popf
mov
sub
add
xchg
mov
mov
addr16
testl
dec
push
or
cli
fs
adc
inc
xlat
inc
nop
es
ss
xchg
jl
adc
ss
das
mov
mov
fmuls
and
adc
sbb
popa
int3
inc
pop
in
mov
dec
mov
pop
xlat
fs
lcall
aam
add
dec
sub
or
test
mov
rorl
or
insl
pop
in
loope
xchg
mov
mov
je
aaa
xchg
mov
testb
dec
jg
stos
xchg
or
in
sbb
sbb
and
pop
dec
outsb
mov
cmp
scas
test
push
pop
mov
pop
das
arpl
loopne
push
fwait
call
mov
inc
mov
fwait
xor
xchg
pop
mov
sbb
pop
scas
mov
loopne
push
mov
test
roll
and
bound
hlt
sbb
push
dec
cltd
xor
add
lret
mov
nop
mov
jb
enter
xchg
mov
jno
test
pop
cmp
cld
rclb
dec
mov
fisttps
push
bnd
ds
or
jecxz
nop
pusha
movsb
stos
push
xchg
or
lret
jl
bswap
mov
aas
xchg
jno
jg
in
sbb
cs
out
shlb
or
jecxz
les
sarl
or
pop
sahf
jb
sbb
in
clc
in
mov
or
jne
push
popf
jae
sub
call
mov
mov
push
ficomps
arpl
fcoms
ds
pop
scas
mov
leave
jl
xor
inc
jmp
cmpsb
in
fldl
cli
mov
cmp
adcl
sbb
or
jl
mov
mov
pop
std
push
stos
cltd
in
adc
xchg
sbbb
sub
fs
pusha
or
incb
bound
shl
inc
negl
mov
and
inc
negl
cmp
mov
inc
imul
push
push
or
dec
outsb
lret
mov
jge
in
fs
cmp
sbb
imul
test
icebp
dec
test
mov
inc
ret
jb
out
push
inc
sahf
pop
jnp
sbb
fcoms
dec
gs
sub
loope
in
mov
push
mov
mov
mov
cld
cmpsb
sub
mov
movl
cmpsl
adc
fdivl
mov
xor
outsb
adc
xor
ljmp
scas
cmpl
pop
mov
xchg
sahf
loope
sbb
add
add
push
filds
pop
shlb
sub
mov
jno
stos
or
and
xor
jno
in
mov
xchg
mov
inc
xchg
inc
scas
inc
insb
sti
mov
stos
cmp
fisttpl
xor
xchg
push
ljmp
mov
ffree
inc
mov
fsub
scas
mov
sbb
or
imul
shl
mov
mov
mov
add
nop
dec
mov
test
push
insb
test
xor
dec
sarb
pushl
sbb
adc
sbb
xchg
jmp
xor
xchg
test
sub
mov
orl
subb
xlat
or
stos
mov
std
mov
cmpb
xchg
mov
scas
data16
jl
lea
ficoml
push
notb
dec
cmp
xchg
test
push
lock
sbb
aaa
lcall
pop
stos
out
xor
stc
mov
les
out
or
dec
pop
andl
icebp
sub
in
cmp
cmp
and
and
les
cmc
not
pop
in
scas
repz
fstpt
xchg
pop
ret
imul
andl
sub
sahf
lahf
lcall
xchg
adc
fdivrs
mov
out
push
loope
lock
gs
mov
test
stos
insb
xor
ds
fs
ficomps
adc
xlat
jne
push
scas
insl
and
les
sbb
jmp
in
fcmovnu
adc
into
fmuls
fwait
xchg
adc
jge
mov
cs
xchg
cltd
ds
cmp
pop
pop
xor
mov
dec
jb
inc
stos
out
adc
jge
shr
mov
imul
lcall
inc
nop
mov
pop
cli
mov
xchg
and
lret
sbb
out
es
mov
mov
pop
pushf
in
shlb
jnp
sti
add
push
pop
idiv
pop
sub
xchg
in
dec
stc
mov
mov
jge
jecxz
jns
dec
aam
push
adc
orl
dec
pop
pushf
fdivrl
add
cmp
les
and
sti
sbb
or
shrb
inc
das
dec
in
imul
and
popa
loopne
popf
aam
rcll
push
mov
or
xchg
aas
fsubrl
popa
cld
dec
push
call
lds
out
jnp
lock
cltd
dec
dec
mov
mov
sub
ret
sbb
js
test
ja
push
stc
jae
pop
mov
andb
pusha
in
ds
outsb
sub
or
cmp
jmp
adc
or
push
jmp
pop
jg
out
pushf
xor
sbb
add
fsubrs
cmp
mov
mov
mov
jae
lods
call
jp
clc
leave
add
std
scas
std
repnz
inc
shr
jl
hlt
aad
addr16
mov
adc
dec
movsl
jg
push
lret
pop
test
insb
icebp
pop
aaa
enter
mov
adc
xchg
xor
nop
xchg
arpl
lock
sbb
or
mov
cs
sbb
shlb
jne
lret
imulb
ljmp
mov
add
sub
fwait
mov
sahf
movsb
dec
mov
dec
addb
jns
gs
test
mov
test
aaa
mov
mov
mov
push
xchg
pop
roll
ror
sbb
push
inc
lret
jb
pop
pop
std
xchg
enter
xchg
je
mov
test
stos
mov
dec
and
mov
ret
int
push
stos
aad
loopne
nop
push
sub
sub
mov
cs
mov
aad
scas
insb
loopne
pop
cmpsl
je
fs
xchg
push
pop
stc
mov
mov
mov
pop
cmp
daa
pop
cmc
xchg
xor
mov
mov
push
inc
push
adc
rorl
lods
in
lret
in
into
icebp
scas
loope
xor
mov
xlat
mov
in
push
push
cmp
push
mov
cmpsb
adc
call
dec
mov
cmp
jns
jns
leave
cmpsb
or
sahf
cmp
xlat
fmuls
mov
test
loopne
sbb
les
push
dec
jno
dec
leave
addr16
stos
xchg
cmc
fnsave
outsb
mov
aam
pop
ja
pop
decb
mov
ficoml
fdivl
fnstenv
les
int3
fs
ficoml
xorl
xchg
add
sbb
ffree
mov
or
std
cmp
ljmp
sub
ss
sbb
xchg
mov
xor
fsts
or
pop
jbe
int
mov
xchg
repnz
pop
cmp
imul
and
lret
inc
call
add
sti
out
mov
sbbb
jb
fbld
pop
aad
lret
scas
xor
popa
lret
xor
jno
and
mov
mov
test
add
fimull
jno
or
fcoms
das
aaa
dec
nop
rcrb
and
mov
inc
addb
pop
insb
mov
fsts
mov
imul
push
push
dec
pop
sbb
pop
stc
adc
mov
stc
inc
pusha
push
or
adc
scas
sbb
mov
sub
dec
xor
pop
scas
jl
hlt
push
loop
stc
ret
scas
xchg
pop
out
cltd
addl
adc
ret
enter
jo
adc
pop
lods
mov
cmc
sbb
xor
dec
arpl
cmp
mov
add
pusha
cmp
and
sub
sbb
ds
in
int
jne
or
pop
push
rcrl
nop
dec
testl
jnp
and
mov
mov
or
jle
sub
jle
out
xor
mull
mov
push
cmpsb
adc
mul
mov
xor
mov
jmp
xor
mov
xchg
sub
imul
imul
jmp
leave
fisttps
inc
test
xchg
inc
pop
inc
mov
test
aad
pop
gs
fldl
clc
jmp
std
xchg
aas
imul
sbb
xor
xor
jno
lahf
cmpsb
or
les
scas
inc
mov
dec
loop
mov
mov
mov
jo
xchg
test
pop
xor
and
cmp
cmc
mov
push
adc
jmp
adc
pop
jo
xchg
jle
faddp
mov
fldl
scas
sub
cltd
fs
iret
ds
add
add
mov
jge
roll
mov
and
add
jne
imul
daa
leave
push
jbe
popa
call
lret
dec
shlb
mov
out
inc
shl
sbb
and
scas
cmp
out
and
push
dec
or
sti
cmc
mov
rorb
testb
lods
lcall
pop
rclb
mov
mov
sub
fisubs
add
add
and
pop
jnp
scas
icebp
xchg
xor
shlb
inc
out
push
push
es
in
dec
mov
hlt
jecxz
inc
dec
jns
pop
or
mov
cmpsl
cmp
nop
rcr
ja
sahf
mov
js
addb
cmp
jmp
mov
idivl
or
mov
adc
push
cmpsl
out
fwait
dec
mov
add
mov
icebp
xlat
cwtl
popf
lea
xchg
pop
and
xor
push
or
xchg
and
cli
pushf
sbb
mov
shr
imull
dec
xchg
mov
push
sbb
adc
mov
cmp
ret
or
mov
ljmp
jb
sbb
push
aam
rol
or
cltd
ret
xor
out
push
pop
gs
jl
xor
cmp
lea
shlb
popf
xor
xchg
insl
fisubs
or
sbb
test
test
jle
jmp
shr
sbb
cmp
dec
negl
mov
enter
aas
pop
mov
xchg
pushw
push
inc
cmc
imul
mov
push
bound
sahf
into
out
inc
pop
sub
and
stc
scas
movsl
ja
aam
mov
mov
stc
sbb
cmpsl
fistps
rol
add
push
xlat
in
lock
xor
das
jnp
add
das
test
jno
push
jno
xchg
sbb
xor
lock
aas
push
aaa
dec
pop
xor
dec
mov
stos
stos
in
push
pushf
mov
push
pushf
mov
clc
test
and
and
xchg
dec
sub
sbbb
lret
push
jl
cmc
mov
xor
fsubr
dec
cmp
push
lret
push
jle
sub
mov
pop
dec
jp
pusha
into
mov
push
mov
lds
dec
adc
adcb
add
inc
sub
mov
jne
push
dec
data16
fwait
outsb
idivl
xchg
xor
lods
push
jbe
mov
fildl
xchg
popf
shll
inc
add
push
int3
bnd
add
pop
jne
and
jl
mov
ret
sub
mov
ret
add
push
jnp
in
outsb
fistpll
aad
icebp
outsl
mov
insl
jb
mov
mov
in
mov
repnz
mov
sarl
fists
mov
pop
cmp
push
cmp
pop
jecxz
push
inc
jne
and
lods
int
ss
cmpsb
in
mov
pop
inc
xor
jnp
xchg
cmp
std
pop
xor
es
push
jo
sbb
and
out
or
xchg
or
or
in
xchg
mov
lret
push
jne
mov
mov
dec
xor
dec
divb
fbstp
jp
addr16
cmp
push
out
rcll
ljmp
fs
aad
pop
mov
dec
out
push
push
and
sti
pop
mov
in
xor
mov
mov
push
mov
dec
inc
jb
ret
push
test
cli
hlt
fwait
aam
pop
dec
sahf
out
iret
and
or
lods
jbe
cltd
stos
xchg
mov
sbb
cmpsb
movsb
xchg
pop
mov
xchg
dec
add
cmpsb
jl
or
sbb
imul
mov
push
mov
inc
andb
inc
mov
xor
inc
ret
inc
lahf
and
sti
dec
jecxz
mov
fsts
movsb
dec
sub
and
stc
cs
movb
pop
mov
mov
in
dec
bound
dec
popa
mov
arpl
stc
adc
jl
lcall
add
addr16
dec
xchg
scas
out
bound
int3
test
sub
mov
jg
cmp
sbb
cmp
mov
cltd
stc
in
xor
ret
mov
mov
dec
push
inc
test
cmpsl
sbb
sub
jae
stos
add
out
and
call
test
cmpsb
or
pop
sbb
cs
xchg
push
dec
lret
cmp
fucomp
std
dec
lcall
cmp
push
mov
push
pop
iret
das
in
mov
fimull
or
dec
jns
pop
or
or
cmp
add
shll
out
dec
popa
aaa
in
popa
stos
cmp
or
loope
mov
jno
icebp
inc
dec
repz
jae
cmp
sbb
js
push
stc
inc
jmp
dec
push
lods
es
dec
shlb
lcall
pop
movsl
shrb
adc
testl
xlat
sbb
scas
pop
and
pop
pop
pop
fsub
fldenv
dec
clc
dec
pusha
cli
inc
mov
scas
stos
xchg
push
sub
int
jns
andb
add
push
mov
daa
fcmovb
dec
mov
sub
rorb
fwait
adc
lods
cmp
or
sbb
out
jp
xor
mov
or
addr16
mov
ljmp
or
inc
mov
xchg
lcall
lcall
enter
gs
push
jnp
mov
xor
push
lods
and
cmp
jo
xchg
je
loope
jb
pusha
fiaddl
jno
push
inc
sub
out
jo
les
add
cmp
jle
dec
cmp
pop
enter
cmc
fcmovnu
push
inc
cmp
adc
or
cmc
je
cmp
shl
mov
jne
sbb
test
or
pop
pushf
and
inc
in
repnz
lcall
push
xchg
int3
in
cmp
call
mov
cmc
leave
repnz
clc
ljmp
gs
test
jge
mov
and
loop
inc
inc
icebp
mov
outsl
mov
dec
mov
notl
mov
xor
jmp
sub
push
lods
je
repz
mov
cmpsb
mov
hlt
lahf
mov
jae
sbb
mov
adc
je
and
je
mov
add
xor
dec
mov
les
shll
sbb
mov
push
adc
pop
in
mov
adc
loope
cmpsl
push
inc
sti
fs
ss
aad
or
mov
test
mov
mov
adc
fisttps
adc
xchg
cli
pop
adc
sti
mov
inc
fidivrs
sahf
xor
cs
xchg
sub
shll
mov
ret
out
shl
push
stos
jg
cmp
and
xlat
or
push
push
pop
cli
jnp
cmp
push
or
pop
lcall
sbb
adc
ljmp
outsl
jns
or
mov
xchg
inc
pusha
pushf
idiv
aad
xchg
pop
pop
aaa
mov
xchg
xor
in
movb
lcall
mov
ja
inc
scas
jae
repnz
stc
add
inc
and
cli
add
dec
jl
shl
sbb
xor
or
fimull
xor
les
jl
jp
mov
loop
fsubrs
or
push
add
inc
pop
into
inc
mov
bsr
imull
aas
xor
mov
jb
repnz
test
test
sub
push
lret
jb
loop
mov
dec
fiaddl
adc
clc
sub
movsl
icebp
xchg
fildll
or
adc
nop
std
xchg
cltd
dec
jo
cwtl
cmpsl
sbb
sub
divb
aaa
mov
xchg
rorl
cli
mov
lahf
cmp
mov
in
sbb
ss
iret
push
sub
xchg
mov
lock
fs
xor
dec
out
aad
dec
sub
cld
ljmp
in
jne
jge
out
and
mov
cli
popf
iret
rol
adc
adc
imull
orb
pop
insl
mov
fdivs
fistps
bound
pop
pop
test
pop
sti
popf
fdivrs
fnsave
ljmp
int3
adc
jne
sbb
out
mov
bound
lock
push
subl
bnd
dec
outsl
jae
jo
ret
sub
int
push
mov
out
js
fst
xchg
jns
das
test
jae
cld
pop
or
call
and
jp
rol
movsl
shll
icebp
jnp
xor
fimull
cs
push
test
repnz
and
fisubrs
lods
insb
mov
or
les
lods
bswap
int3
xchg
scas
pop
fwait
add
pop
xchg
lea
mov
adc
outsb
push
xor
jae
data16
popa
cmp
jo
mov
xchg
mov
mov
movsb
cs
pop
in
sub
out
sub
mov
das
jl
int
mov
sbbb
incb
adc
insb
jle
xadd
pop
jb
ror
mov
jo
fsts
aas
push
mov
sbb
bound
jns
movsb
lahf
sti
lds
test
adc
and
int3
sti
xorl
pop
mov
stos
xchg
add
jp
adc
mov
lods
rcl
push
xor
roll
jns
out
cmpsb
rcr
mov
in
movsl
test
jg
aaa
and
jmp
ljmp
iret
lahf
and
add
insb
fwait
mov
test
or
push
dec
xorl
testl
xchg
xchg
xor
cwtl
inc
dec
and
inc
testb
in
in
cli
repz
in
pop
pop
adc
addl
mov
inc
jno
xchg
jl
xor
in
cmp
xchg
sbb
mov
and
sub
and
lds
add
int3
jl
fsub
shlb
aas
push
out
xchg
inc
or
cmpsl
sub
jae
cmp
dec
mov
enter
dec
fistps
sbb
dec
fistpl
shr
push
rclb
test
fmuls
dec
and
xor
cld
pop
jl
lcall
push
or
pop
and
dec
adc
outsl
push
addb
stos
pop
sbb
push
dec
mov
and
roll
sahf
bound
pusha
lods
adc
mov
jmp
xor
loope
and
test
out
mov
pop
lret
inc
scas
stos
dec
fisttpll
push
loopne
dec
loope
test
mov
push
jae
push
jl
dec
cmpsl
cmp
icebp
aam
mov
scas
dec
xchg
lods
cltd
es
pop
cmp
imul
mov
sub
pop
stos
pop
lcall
fsts
push
adcl
xchg
inc
pusha
dec
pop
inc
mov
pop
push
push
ds
mov
clc
outsl
dec
adc
and
push
mov
pushf
cltd
lahf
outsb
or
js
outsl
pop
push
add
push
inc
sbb
xor
or
adc
sbb
rorb
jl
ja
mov
push
lods
lea
hlt
in
lock
push
sbb
push
and
adc
cli
jo
sub
stos
stos
xchg
sub
sbb
mov
jle
stc
mov
inc
pop
out
in
jmp
inc
fsubrp
pusha
mov
ret
test
jg
and
shrb
loopne
ss
outsb
das
mov
pop
test
fstl
je
lret
cld
mov
loope
adc
mov
and
push
push
addr16
push
aam
adcb
iret
and
cmp
xchg
leave
daa
addr16
aas
jmp
popf
out
cmpsl
insl
push
aaa
ficompl
mov
push
xchg
sub
mov
ss
sub
dec
and
div
jmp
sbbl
sbb
fdiv
and
cmc
loop
xchg
roll
cmc
repz
jecxz
or
cmp
xor
pop
sbb
add
insl
xor
xchg
das
xor
into
inc
shll
pop
imul
mov
shlb
inc
fisubl
test
mov
inc
or
inc
inc
xchg
mov
xchg
mov
mov
add
push
xchg
and
cmpsl
jg
out
divb
imul
cmp
xor
roll
sarb
stc
jmp
sub
test
mov
push
jnp
ror
jns
fcoml
sti
ja
iret
arpl
rol
rcr
mov
mov
fwait
subb
clc
ss
jp
dec
dec
lods
frstor
cwtl
aam
loop
nop
jae
jno
mov
xor
inc
fsubrl
fadd
sbb
add
iret
inc
xchg
test
rcll
fnstenv
push
leave
sbbb
adcl
xor
jg
mov
add
push
fcoml
or
inc
sbb
ficoms
lret
adc
out
lock
fwait
add
insb
repnz
stc
popf
or
mov
out
mov
mov
popa
addr16
hlt
push
popa
jecxz
jmp
dec
jmp
inc
lods
mov
test
aaa
inc
lock
je
xor
iret
inc
adc
in
inc
in
ret
mov
jns
adc
lock
and
ja
mov
ja
imul
and
cmp
lret
pushf
sub
call
jmp
test
stos
xchg
fwait
outsl
insl
orb
inc
jge
jmp
int3
push
push
movsl
jae
cmpsl
sbb
lods
fdivp
pop
stos
pop
jne
ljmp
xchg
push
hlt
push
lods
push
pop
sbb
rcrb
fdivp
xchg
cs
call
jbe
subl
sub
sub
fcoms
cld
rcrl
jnp
nop
mov
in
loop
jnp,pt
andnps
arpl
push
jg
hlt
inc
adc
popa
shrl
cltd
jae
test
bound
fninit
xchg
sar
or
adc
push
lret
insb
fadd
cmp
sub
imul
arpl
inc
in
or
sub
outsb
or
lods
jp
push
sub
inc
movsl
cmc
call
std
xor
out
add
out
push
xor
jmp
push
push
mov
movl
dec
sub
mov
mov
mov
jns
insl
and
popf
jns
jle
cs
mov
stos
test
add
enter
pop
sbb
addr16
jecxz
add
hlt
cli
jge
push
dec
dec
fldt
cmp
sub
cltd
push
push
enter
mov
icebp
pop
aas
sub
mov
mov
cmpsb
mov
xor
rcll
out
push
sub
dec
dec
out
or
test
mov
mov
fidivrs
pop
mov
adc
mov
push
jae
cld
or
popf
int
xchg
hlt
mov
pop
cmpsl
or
repnz
movsb
xchg
push
jo
adc
pop
orb
jo
stc
cmp
pop
jmp
mov
fxch
popa
pop
inc
jo
pop
xchg
js
aaa
dec
pop
outsb
jle
test
ror
dec
ror
insb
nop
loope
xlat
cli
ss
jne
test
mov
mov
mov
xor
insl
mov
or
xor
cmp
bound
jecxz
test
fidivrs
mov
mov
ret
sub
jb
push
je
mov
sahf
add
test
push
jmp
cmp
pop
or
cwtl
dec
aad
addr16
shl
xor
jns
push
xchg
scas
cmp
push
aas
ss
test
sbb
je
or
enter
xchg
rcl
fisubrl
lret
pushf
inc
lcall
sbb
adc
sbb
lods
and
sahf
sbb
adc
mov
pop
pop
insl
xor
filds
jmp
add
jae
fs
mov
mov
sbb
sub
gs
adc
sarb
ret
pushf
cmpsl
jmp
push
jge
xchg
aam
ss
mov
pop
dec
inc
xor
mov
sarb
mov
xor
cmpsl
out
or
dec
pop
imul
push
or
dec
or
call
loopne
add
iret
jmp
add
into
adc
inc
add
aaa
push
cmpl
lahf
add
mov
or
mov
rcpps
sbb
xor
mov
sub
cmp
aad
into
ror
pop
in
inc
nop
int
mov
push
out
aam
pop
ret
and
fstpt
pop
stc
stc
or
cmp
pusha
in
or
lods
outsl
int
pop
fst
imul
inc
hlt
jns
dec
mov
and
sbb
jp
sub
or
ficompl
dec
or
movsl
dec
lods
mov
xchg
fidivrs
ss
mov
rcrb
mov
dec
sbb
iret
cwtl
lods
sub
or
clc
outsl
and
fcmove
loopne
inc
adc
inc
mov
or
cwtl
in
movsb
sub
mov
scas
test
imul
lods
addr16
xchg
pop
int
iret
lods
mov
or
xor
ret
pop
adc
sub
mov
fmuls
jl
cmp
sbb
sbb
das
sahf
mov
mov
sbb
add
je
ds
int3
nop
jnp
out
jne
mov
orb
adc
popf
enter
dec
je
mov
loopne
add
popa
mov
fsts
cmpsb
aad
mov
add
popa
inc
pushf
negb
cltd
xchg
std
scas
xor
xor
lret
pop
scas
push
dec
inc
aam
mov
sub
iret
out
and
jge
js
loop
xlat
pop
xor
jg
stc
push
dec
add
jo
mov
clc
in
mov
xchg
movsb
xchg
pop
dec
mov
pop
cld
xchg
adcl
fsubrp
cmp
mov
pop
and
or
pop
mov
push
in
addr16
data16
dec
je
lret
sbb
mov
mov
ds
and
xchg
xchg
fisubl
lods
cmp
rolb
dec
xor
jle
fsubl
fidivs
outsl
imul
mov
fucomp
lret
mov
xorl
popa
mov
das
xchg
mov
mov
rcl
movl
ljmp
es
outsb
jl
lock
push
jne
dec
jae
xchg
mov
loop
dec
pop
jmp
or
mov
mov
in
dec
stos
jbe
test
pushf
sub
inc
adc
add
mov
cs
sahf
pushf
push
mov
je
sbb
pop
ja
inc
sar
test
push
mov
cs
add
cmp
pusha
repz
pop
mov
and
sbb
sbb
xchg
dec
mov
push
push
out
dec
out
xchg
push
pop
inc
out
test
push
test
in
add
xchg
add
push
les
cld
pop
xchg
xchg
inc
idiv
pop
ja
aaa
insb
iret
jae
inc
in
leave
scas
jno
pop
es
jns
xchg
sub
lea
mov
mov
fimuls
pushf
lret
fcmovnu
loopne
dec
adc
mov
call
cmp
cltd
inc
dec
pop
jecxz
out
jl
bound
cmp
stos
fnop
inc
xor
xor
mov
lret
jecxz
les
pop
fstp
int3
cs
imul
loop
sub
cmc
mov
loopne
call
loop
add
inc
adc
sti
pop
mov
arpl
iret
push
mov
imul
add
inc
cmpsl
nop
vcvtsi2sd
cmpsl
and
jl
mov
fs
cs
and
or
aas
jo
or
lret
addr16
xor
cmp
xchg
scas
xlat
jg
jb,pt
sbb
pop
dec
mov
cld
inc
inc
cmc
adc
and
mov
movsb
imul
fmuls
repz
leave
jne
in
mov
gs
decl
inc
jo
ljmp
testl
jl
inc
pusha
fwait
push
aas
insb
push
sub
xchg
adc
ret
pop
loope
jle
xor
call
stos
stos
adc
jnp
cmp
mov
or
sub
dec
sarl
cs
xlat
lea
jnp
jae
inc
inc
adc
loope
pop
pop
mov
inc
mov
jbe
inc
sbb
cltd
mov
pop
movsb
adc
sbbb
adc
and
dec
icebp
sbb
sahf
mov
arpl
xor
xchg
jge
aaa
cmp
aas
xchg
push
imul
lds
xor
cmp
fwait
sbb
cli
lcall
push
andb
mov
add
jg
cld
mov
mov
add
adc
fisttpl
xor
fnstsw
shrb
seto
imul
mov
mov
fs
cmp
xor
jl
icebp
cmp
fst
aad
push
xchg
mov
xor
mov
xor
add
or
pop
movsl
cltd
push
lcall
loopne
sbb
outsl
sub
fst
ret
loope
mov
inc
imul
iret
mov
cmp
shrb
cmpsb
callw
mov
sbb
dec
pusha
int
dec
dec
xor
cwtl
jmp
add
movsl
push
jecxz
pushf
pop
pushf
ja
pop
scas
add
dec
ljmp
negb
mov
movhps
js
sete
jecxz
push
aas
push
add
and
aas
in
xchg
arpl
sbb
xlat
pop
push
adc
dec
mov
cwtl
and
xchg
jns
sbb
call
fwait
dec
pop
xchg
push
jg
adc
mov
sti
dec
loope
enter
mov
stc
imul
iret
in
addb
shlb
cs
shll
inc
pop
cld
push
mov
adc
addr16
cltd
out
mov
outsl
decb
subb
dec
lds
pop
clc
push
rcrb
mov
test
mov
insl
pop
jnp
sbb
or
imull
push
jle
jmp
out
mov
or
in
cmp
lods
jl
add
lods
std
push
insl
mov
cld
lock
xchg
sahf
inc
sbb
lcall
pushf
cld
mov
mov
icebp
loopne
jae
clc
daa
pop
inc
pusha
cmp
xor
sub
push
inc
dec
pop
popw
roll
add
pop
data16
sub
ljmp
mov
sub
push
mov
ror
pop
daa
ljmp
cld
out
test
dec
scas
mov
sbb
or
add
lock
and
sbb
pop
out
cmp
lea
pop
enter
stos
xchg
cli
loopne
icebp
pop
ficoms
xchg
mov
sbb
lret
and
stos
jne
sbb
inc
mov
out
into
sbb
mov
cmp
jp
mov
jns
add
or
mov
mov
mov
adc
jae
sbb
or
xchg
cli
sub
hlt
orl
jo
xchg
std
push
cvttps2pi
cli
cmc
lds
jne
mov
sbbl
pushf
mov
inc
scas
stos
inc
xchg
aas
mov
xor
ret
in
bound
out
aaa
in
fnstcw
hlt
test
mov
mov
dec
test
push
inc
in
repnz
dec
jae
js
aas
dec
jbe
xchg
jecxz
cld
rorl
mov
iret
inc
dec
shll
ja
inc
or
stos
sub
or
dec
test
loop
adc
cmpb
fstpl
data16
iret
pusha
loopne
jo
adc
mov
cmp
out
xchg
cmpb
cld
aaa
pop
jp
mov
in
popf
mov
jno
xchg
cmpsl
sbb
shlb
in
enter
cmpl
nop
jno
in
jp
stos
lods
pop
or
lcall
data16
sbb
jns
and
movsb
inc
dec
and
aam
out
subl
repnz
lahf
jne
inc
pop
pushl
out
cmc
andl
cmp
and
scas
lds
or
jg
cmp
mov
push
xor
jno
ficoms
ret
sub
sbb
mov
pushf
loope
pushf
in
jo
or
rcll
or
bound
mov
dec
movsb
sbb
in
lret
ja
inc
jne
aas
mov
std
adc
lds
test
and
push
xchg
mov
nop
dec
repz
cmp
lods
jmp
dec
cmp
push
pop
sbb
int
xchg
ljmp
repz
aas
insl
icebp
test
mov
add
mov
sbb
inc
imul
ljmp
or
adc
and
mov
pop
cmp
xor
mov
movsb
scas
cld
repnz
ficompl
aas
adc
lods
inc
cmp
xor
pop
push
scas
mov
pop
adc
add
jbe
cli
sbb
add
dec
jno
xor
mov
lcall
and
jae
mov
inc
mov
mov
pop
cmpsl
pop
sub
addl
push
je
xchg
cltd
jg
mov
cs
daa
fwait
in
sub
pop
insl
cltd
add
sbb
mov
lods
dec
insl
and
movsl
jl
jns
ljmp
stc
mov
stc
rcrl
test
push
mov
out
jno
add
or
cmp
fstpt
mov
xchg
sbb
ror
pop
out
xchg
jp
test
cld
mov
xor
xchg
fistl
sbb
int3
pop
inc
movsl
jns
mov
imul
jnp
hlt
sub
cmc
or
push
out
aam
xorl
repz
das
mov
add
in
dec
sub
and
cmp
sbb
mov
sahf
push
decb
jmp
and
add
mov
es
std
cltd
inc
out
dec
mov
adc
add
inc
sahf
es
nop
das
sub
add
sub
push
shlb
cmpsl
adc
pop
mov
add
fbld
cmp
movsb
jno
sbb
mov
aas
ja
jnp
in
ror
and
mov
dec
pop
js
pop
cwtl
ljmp
lds
jnp
sub
scas
or
hlt
test
int
cmp
int
inc
shlb
mov
popa
mov
mov
or
mov
adc
push
sub
repz
pop
clc
sub
sbb
xor
mov
into
fxch
push
outsb
scas
sub
int3
mov
cmc
sub
inc
cmp
cs
imul
dec
dec
inc
mov
or
and
test
lods
mov
std
ret
mov
adc
fcompl
pop
stos
xor
cwtl
jecxz
sbb
inc
loop
jle
icebp
fisttpll
stos
movsb
push
aam
mov
out
in
xchg
sbb
mov
push
arpl
cmp
push
xchg
sub
adc
shlb
mov
cmp
fsubl
je
fs
push
stos
adc
data16
ljmp
xchg
out
aad
out
jae
mov
jae,pt
enter
pop
push
loope
mov
xchg
cltd
dec
mov
xor
mov
sarb
stc
or
mov
rsqrtps
push
add
ds
pop
mov
jbe
int3
lock
cmp
pop
test
faddl
push
ret
sbb
inc
mov
lcall
decb
push
adc
mov
inc
inc
jbe
mov
ficomps
loop
imulb
outsl
bound
and
rol
inc
mov
pop
jbe
sbbb
in
sbb
mov
cmc
jb
cmp
sahf
lds
stos
sbb
ficoml
push
xor
jb
test
into
jns
aas
inc
cmc
cwtl
inc
push
sti
adc
js
rcll
scas
shlb
dec
mov
push
iret
call
je
jp
mov
mov
mov
movsb
lods
or
pop
dec
sub
push
pop
cmc
mov
inc
cmp
lret
cli
pushf
popa
punpckhwd
js
stos
push
xchg
jno
aad
and
aam
lds
xchg
fcompl
inc
cmp
sub
das
mov
push
lods
pop
sahf
shrl
mov
stos
sbb
lret
cltd
xchg
dec
and
sbb
lret
fs
xor
cmp
push
test
sbb
push
xchg
cltd
xor
jo
xor
mov
movsb
xor
cwtl
mov
jns
stos
pop
paddq
mov
fists
aam
mov
or
xchg
sbb
pop
loopne
jbe
sub
js
cld
push
mov
xor
stc
pop
in
daa
fiadds
gs
add
lahf
iret
arpl
pop
pusha
je
cmp
adc
leave
jns
add
nop
jmp
or
xchg
icebp
es
scas
inc
dec
fcmovbe
roll
add
push
mov
iret
lods
push
push
inc
inc
cmp
mov
rclb
bound
or
insb
adc
xor
cwtl
pop
shrb
mov
mov
push
rdmsr
inc
xor
pop
cmp
fs
test
in
aam
stc
xor
test
sbb
mov
scas
lds
frstor
xor
sbb
cltd
sbb
lods
sbbb
test
mov
repnz
loope
push
dec
imul
scas
mov
mov
insl
leave
mov
mov
stc
xlat
dec
or
add
mov
ret
inc
inc
cmp
or
in
out
ret
jo
out
adc
les
bound
mov
mov
rcrw
outsl
fwait
cmp
in
xchg
clc
add
dec
jle
fsubr
mov
js
js
and
dec
outsb
push
subl
push
inc
insb
or
inc
leave
xchg
mov
rol
clc
cmp
mov
sub
leave
femms
stc
mov
cltd
decl
mov
popa
ja
jnp
rcr
fsub
cli
je
xchg
or
loop
mov
stos
mov
jmp
les
mov
sarb
push
mov
xchg
out
sbb
dec
fisubl
or
jecxz
stos
jbe
mov
andb
push
mov
fwait
decb
into
add
cmp
or
adcb
imul
vdivps
inc
test
or
pusha
lcall
mov
mov
sub
rol
mov
push
mov
sbb
push
mov
data16
pop
mov
jae
inc
test
ljmp
ss
je
jl
adc
or
aaa
movsl
inc
jl
sbb
fiadds
fnstenv
dec
sarb
popl
dec
or
push
scas
add
jnp
jae
xor
fsts
out
out
sbb
mov
sarb
pop
test
sti
xor
lahf
leave
mov
pop
push
out
inc
mov
adc
in
or
sub
dec
mov
pop
loope
dec
add
dec
mov
dec
xchg
xor
ljmp
or
or
jecxz
ds
mov
cli
mov
xchg
add
push
xchg
int3
sbb
lods
cmpsl
loop
push
lock
lods
imul
outsb
xor
jl
xchg
adc
or
dec
sahf
addb
imul
mov
mov
pop
xchg
and
mov
mov
jb
xchg
pop
rcll
or
stos
addb
push
sbb
loope
pop
mov
mov
int
jmp
stos
and
popaw
jl
inc
and
hlt
jno
xchg
and
loope
cmp
test
mov
jns
cli
leave
cmpsb
mov
inc
cmp
mov
lret
sub
out
xor
call
cltd
pop
jmp
jl
repnz
fcoml
jge
inc
pusha
repz
or
fs
push
dec
inc
imul
jp
aam
sbb
scas
mov
ss
bound
lcall
movsb
mov
test
dec
inc
ret
cmpsb
call
xlat
mov
or
stc
leave
push
aam
mov
cwtl
ret
out
mov
mov
in
mov
insl
add
shlb
nop
mov
mov
push
stos
xor
jo
adc
jno
test
mov
mov
cmc
call
xor
push
sub
inc
dec
or
in
out
pushl
je
cmpsb
lods
dec
pop
mov
add
jmp
int
inc
lock
mov
insl
in
push
xchg
test
mov
les
mov
mov
fadds
test
xchg
lods
xchg
or
adc
scas
push
sbb
test
and
test
cmp
add
cmp
test
push
out
int3
mov
jns
cmp
or
aaa
push
inc
movsl
insl
sub
rcrl
ss
out
sbb
mov
cmpl
ja
pop
stos
jne
mov
rep
loopne
in
and
cltd
test
jle
insl
cmp
pop
jge
aam
pop
sbb
pop
jmp
outsb
fisttpll
loopne
inc
loopne
pusha
jb
pop
fcoms
inc
repz
insl
push
add
and
sub
mov
test
cmp
nop
jnp
dec
mov
das
addl
stos
add
pop
pop
jb
jns
fs
leave
add
test
stc
sbb
sub
inc
sahf
into
or
rcrb
ret
xchg
xor
dec
cli
outsl
add
out
xchg
xor
jne
cmp
cmpl
stos
pop
push
xchg
icebp
and
out
xchg
sarl
outsb
loopne
scas
negb
ljmp
outsb
in
into
adc
xchg
pop
repz
cmp
cmc
sbb
mov
mov
jb
je
popf
js
test
add
and
sbb
rorb
ja
fstl
xchg
movb
pop
popf
incl
pop
adc
int3
and
mov
push
add
aaa
pop
xor
inc
ds
pusha
or
js
push
pop
xchg
in
iret
mov
push
test
xor
shrb
xchg
testb
push
push
inc
mov
out
xor
adc
ja
mov
and
fmul
add
into
movsl
sbb
push
xchg
jae
aad
and
mov
xchg
ljmp
roll
add
sbb
je
ljmp
call
mov
jmp
insl
je
cmp
dec
ret
roll
pop
add
and
sbb
pop
repnz
fisubl
loopne
iret
or
jb
pop
rclb
adc
icebp
fstpl
push
xchg
cmp
ss
rol
iret
outsl
cmp
mov
mov
std
mov
and
bound
int
pop
mov
cmp
push
jnp
loopne
enter
call
fcoms
mov
push
jbe
je
cli
mov
lods
adc
ja
push
iret
sub
out
mov
jnp
scas
cmp
lret
sub
test
mov
dec
mov
ljmp
inc
cmp
aam
int3
sub
dec
in
xor
cltd
addb
fdiv
add
scas
insb
icebp
fistl
lret
aaa
push
ljmp
mov
or
xchg
stc
add
in
fcompl
xchg
mov
lods
int3
leave
pop
aaa
lea
jl
sbb
mov
js
push
lahf
sub
sbb
pusha
iret
dec
aam
pop
jae
ja
jecxz
mov
push
sbb
out
fdivrp
test
mov
mov
out
lahf
fdivrl
push
mov
ja
jo
cmpsl
mov
jmp
es
jg
daa
xchg
jg
xchg
fcoml
inc
xorb
clc
and
ficomps
fucom
pushf
adc
rcr
scas
sub
popa
mov
mov
lea
add
jle
add
fs
in
and
add
insl
add
xorl
out
in
lret
sbb
pop
mov
sub
or
mov
mov
xchg
push
add
mov
jmp
rolb
pop
cmp
fnstsw
sahf
icebp
lret
cmp
lcall
pop
adc
cmp
insl
std
iret
orb
cmp
sbb
jl
xchg
add
fmul
jg
popa
dec
xor
jge
imul
int3
into
mov
lahf
sub
xor
addr16
lock
imul
inc
xchg
lcall
or
test
arpl
pop
mov
loop
sbb
sub
popa
fs
popf
fnstenv
aaa
sbb
dec
test
add
out
pop
inc
sarl
jle,pn
push
cmp
push
fwait
jecxz
out
sub
jge
mov
adc
insb
push
add
sbb
xor
sbb
popa
mov
xor
dec
shll
pusha
jns
insb
test
dec
frstor
dec
scas
addr16
in
mov
fistps
or
jbe
inc
fs
movsb
jecxz
fdivrp
jne
mov
push
out
push
cmp
out
pop
and
push
adc
sbb
lcall
lods
pop
inc
mov
or
lret
scas
jno
fistps
imul
sub
push
mov
mov
or
aas
or
jl
daa
xor
fadds
pop
outsl
xchg
pop
jb
nop
adc
fists
scas
xchg
rcll
jne
dec
dec
nop
mov
xchg
dec
and
andl
push
push
sub
adc
int
loop
xchg
add
test
xor
aaa
xchg
mov
loope
sarl
mov
push
push
ror
sbb
das
mov
mov
mov
cmc
repz
nop
cmpsl
sbb
das
or
out
mov
lock
dec
cmp
ret
out
push
sub
xchg
out
and
jle
pop
pop
cmp
jnp
out
jge
push
jne
inc
cwtl
push
les
add
popf
int3
push
jnp
mov
push
mov
push
sub
je
loop
jge
cwtl
movsl
lds
sbb
mov
testb
mov
sti
shr
pusha
sbb
stc
cmpl
adc
push
push
ljmp
push
sub
inc
xchg
test
lea
sub
popf
fstps
stc
nop
movsl
mov
insl
xchg
lods
or
popf
adc
pop
shrl
and
dec
jmp
and
cwtl
mov
inc
or
dec
mov
lret
xor
xchg
push
fsubrs
lret
gs
mov
inc
lcall
xor
cmp
push
mov
mov
inc
xabort
and
push
mov
fcmovnbe
jae
out
in
ret
jmp
mov
cwtl
add
push
test
iret
lahf
loope
into
popa
addb
iret
cmpsl
pop
dec
packssdw
add
popa
dec
fidivl
out
rcr
mov
xchg
xor
stc
dec
std
or
adc
inc
scas
or
cmc
mov
push
movsl
mov
sub
inc
mov
push
jb
lahf
dec
icebp
nop
sub
in
or
ss
xlat
enter
pop
es
push
int
cmpsl
nop
sbb
or
mov
aad
sub
rcl
cmp
sarl
fwait
fwait
cli
inc
cltd
mov
jmp
sarl
xor
or
lods
adc
iret
scas
ljmp
push
jge
pop
sub
pushf
imul
sbb
cs
inc
mov
mov
imul
aaa
repz
addr16
sub
inc
cld
cltd
lahf
orl
adc
inc
push
push
xlat
data16
push
jge
push
xchg
push
aad
and
mov
or
pop
pushf
mov
outsb
sub
or
jbe
add
xor
insb
bound
outsl
jne
les
into
incb
call
sub
jns
push
xchg
por
adc
ret
pop
cmp
inc
subl
jge
inc
pop
lahf
pushf
jg
out
lahf
fstpt
xor
scas
insb
inc
or
sbb
icebp
rorb
inc
test
mov
jle
xor
pop
cmp
outsb
pop
sub
lods
das
jmp
xor
cmp
push
data16
adc
jno
outsb
mov
cs
cmp
push
mov
push
in
pop
sahf
cmp
mov
int
push
aam
xor
xchg
stc
into
repz
shl
shr
int
sub
cmc
bound
mov
add
int3
mov
push
sbb
mov
push
add
pop
loopne
inc
andl
outsl
fs
add
lret
cmp
idivb
ds
sub
mov
lret
mov
push
mov
inc
test
dec
fsts
push
jb
loop
add
cmpsb
mov
push
loop
jle
push
inc
jbe
leave
out
or
mov
ja
push
out
add
mov
push
push
add
jge
shlb
les
test
cs
fwait
xchg
cmc
adc
ss
pop
jp
jp
aam
in
int3
cld
inc
popf
sbb
mov
pop
jge
out
pusha
mov
cmp
mov
inc
out
mov
xorb
out
jle
mov
dec
add
cmpsl
mov
pop
fwait
pushf
pop
jmp
gs
cmp
sub
mov
mov
cmp
add
adc
cltd
adc
mov
pop
adc
dec
sub
nop
clts
and
lock
pop
jmp
lcall
rcl
push
adc
jno
movsl
sbbl
ror
mov
push
rcrl
js
insb
xor
xor
rcl
cwtl
lds
push
sub
les
push
and
adc
loopne
imul
sbb
sahf
in
popf
in
xchg
out
xor
sbb
and
xchg
or
push
and
mov
fs
push
push
js
inc
push
fcom
xchg
fildll
dec
pop
mov
sbb
call
das
inc
test
stc
pop
xchg
sahf
lods
lods
jp
xchg
out
repz
scas
xchg
sbb
test
sub
inc
dec
pop
test
bound
rorl
jnp
lods
jecxz
imul
dec
sbb
sub
mov
push
mov
fcmovne
xchg
xchg
sub
aas
pushf
pop
xchg
sarl
dec
pop
cmp
xlat
test
es
xor
rcrb
in
dec
and
jmp
and
jae
sbb
lods
call
rcr
pushl
int
xor
push
xchg
ficoms
das
adc
and
jg
pop
lret
and
sbb
hlt
push
cmp
pusha
lea
inc
mov
push
or
aam
jp
push
or
xchg
dec
cs
mov
inc
pop
nop
enter
xchg
pop
sbb
lret
xchg
popf
fbstp
leave
and
pop
gs
fdivl
les
aaa
dec
xchg
jmp
das
push
xchg
sub
adc
adc
xchg
cmp
mov
clc
mov
lahf
enter
mov
xchg
scas
aam
xor
lods
cmp
test
and
pop
jb
in
push
icebp
cmp
adc
mov
and
sub
mov
enter
push
pop
rorl
or
mov
nop
test
filds
xor
dec
sub
lret
mov
dec
adc
mov
aam
fucomi
push
pusha
inc
stos
mov
mov
mov
cmp
aaa
dec
aad
dec
push
dec
adcl
fwait
ljmp
test
sysret
mov
je
mov
sbb
movsl
jle
scas
xlat
cmp
sub
movsl
xchg
xchg
orb
popl
pop
shlb
mov
fisttpl
xchg
or
fdivrl
roll
cmp
push
shr
iret
sbbl
mov
add
ret
sub
jecxz
gs
mov
mov
orb
addl
jp
out
loop
mov
lods
push
xchg
mov
fwait
mov
push
mov
mov
loopne
fnstsw
notl
popa
add
fwait
stos
and
loope
fs
aad
stos
mov
cmp
xor
mov
add
mov
gs
mov
and
mov
mov
std
pop
cli
inc
fcmovu
mov
std
jo
insb
sbb
xchg
shlb
in
sbbl
jmp
fistl
jmp
outsb
adc
add
push
ljmp
mov
movsb
mov
mov
inc
lcall
mov
insl
cltd
repz
lret
pop
or
pop
test
sub
add
mov
insl
xchg
stc
pop
lds
fmull
cli
jb
xor
cld
mov
jg
xchg
push
push
outsb
mov
cli
iret
sti
cli
out
ret
aad
mov
push
and
xor
aad
cld
pop
adc
test
popa
negl
inc
xchg
mov
stos
test
out
lcall
sub
cltd
pop
stc
jne
out
xchg
cmp
sbb
scas
and
mov
js
push
call
shlb
out
add
ds
mov
mov
jns
sbb
hlt
cld
js
jb
aam
imul
jb
shlb
sbb
inc
pop
int
insl
mov
enter
out
hlt
fstl
in
inc
imul
sbb
lcall
inc
ficoml
pop
and
mov
cs
xor
sbb
sti
mov
mov
xchg
pop
pop
dec
inc
sub
jmp
xchg
ljmp
inc
aaa
mov
add
fcompl
or
push
iret
adc
cmc
pop
bound
addb
inc
in
adc
fcmovnbe
lods
mov
ja
ret
dec
dec
test
xor
mov
movb
insl
add
mov
sbb
es
in
cmc
pop
mov
and
pop
sub
sub
xor
scas
pusha
lds
mov
mov
xchg
cwtl
addb
roll
dec
mov
push
xor
scas
enter
das
out
bound
out
in
cmp
sub
adc
pop
xor
ljmp
cmp
clc
fs
xchg
lds
out
lret
lods
rolb
pop
add
cmpsb
shl
cmp
mov
popf
cmp
xchg
cmp
xor
stos
js
xlat
push
or
or
repnz
jge
cmovb
push
push
jo
ret
hlt
jge
xor
pop
test
pop
je
pop
aad
push
fidivs
jle
lcall
mov
push
mov
iret
jl
ds
sbb
adc
mov
stc
movsb
cmp
icebp
jo
mov
push
add
add
repnz
mov
movsl
dec
data16
and
repnz
mulb
jl
push
jl
int3
out
push
outsl
xor
fdivs
insl
pop
out
dec
adc
lret
sbb
mov
repz
fs
adc
imul
loope
lahf
jns
cmp
adc
jecxz
into
and
aaa
sbb
mov
shll
enter
repnz
fadd
push
adcb
jg
add
push
mov
mov
rcrl
js
fisubl
out
lock
adc
mov
icebp
adc
aas
in
aaa
mov
dec
rcrb
inc
jbe
subb
rcl
out
mov
lock
popf
int3
push
pop
orb
ljmp
ja
inc
rcll
subl
daa
pop
push
inc
add
in
arpl
pushf
jecxz
cmc
mov
ja
adc
or
or
insb
fists
lods
jne
push
jge
add
adc
jle
clc
adc
int
popa
fs
cli
cmpsb
jmp
in
aas
test
adc
stc
xchg
xchg
popf
mov
lods
mov
adcl
movsl
mov
and
jb
pop
sbb
fstl
stos
in
repnz
and
mov
test
jle
dec
fs
mov
sti
das
sub
pop
cmpsb
cmpsb
pop
push
mov
dec
leave
jb
test
iret
or
jle
lods
in
push
dec
imul
fstl
jno
in
in
xchg
test
dec
ja
mov
ja
mov
and
loopne
in
shrd
cld
pop
xor
jle
adc
sarl
daa
push
pop
rcll
popf
jbe
pop
sub
jge
mov
outsl
jle
pop
and
or
sub
cmc
mov
jae
add
pusha
xlat
sbbb
andl
cmpsl
add
mov
sbb
push
clc
je
push
add
in
mov
out
and
sub
pop
pop
aas
xor
sbb
add
and
inc
cmp
jne
sarl
test
shl
loop
pop
shlb
xchg
push
cmp
arpl
xor
std
adc
jnp
idivb
call
negl
enter
xlat
xor
mov
scas
add
rorb
out
xor
and
sub
out
mov
fs
sub
cmpsb
dec
sarl
sbb
enter
cwtl
or
mov
sbb
lret
xchg
data16
xor
and
lret
pop
call
jae
cmp
jmp
inc
clc
sbb
test
sub
jp
cmpsl
loopne
adc
xor
pop
in
inc
mov
jb
push
pop
into
xchg
and
sbb
xchg
xchg
xor
mov
and
mov
jno
nop
adc
mov
mov
mulb
dec
ror
pop
mov
imul
mov
lret
aam
std
lods
push
lret
outsb
repz
xchg
pusha
xlat
xlat
ret
je
push
xor
and
and
ljmp
dec
inc
sahf
add
xor
mov
clc
cmp
inc
lcall
lret
ror
jb
adc
sbb
cli
pop
sti
push
pop
mov
mov
mov
test
push
mov
mov
xchg
xor
imul
inc
xchg
mov
iret
adc
insl
push
insl
push
mov
out
shld
inc
xor
repz
lret
scas
scas
add
lea
dec
dec
mov
mov
mov
in
cmp
mov
add
xchg
mov
ljmp
lods
xor
ljmp
add
mov
sub
test
add
or
icebp
pusha
mov
inc
pop
mov
out
push
lods
add
rcll
clc
pop
fidivrs
or
in
xchg
repnz
mov
shlb
jb
out
dec
stos
mov
arpl
mov
mov
les
mov
cmpsb
cwtl
xchg
dec
rorb
and
or
sti
iret
dec
mov
dec
cli
sub
lcall
fsubp
subb
xor
mov
sbb
mov
jb
sub
xchg
loope
data16
dec
dec
and
or
cli
cmp
mov
data16
xchg
clc
mov
push
cmp
xchg
inc
push
les
xor
jmp
cmp
insb
mov
fs
dec
das
sbb
ds
enter
call
dec
imul
adc
pusha
pushf
imul
in
pop
aam
mov
sub
mov
pop
push
lahf
scas
mov
push
mov
icebp
sub
cmp
mull
shr
loope
pusha
xor
sbb
imul
push
fcom
mov
repz
out
repz
add
xor
sahf
rclb
jg
or
pop
sub
jae
lret
push
pop
or
mov
fnstcw
pop
pusha
mov
xchg
and
cmp
mov
cmpsl
fstcw
hlt
loopne
movsb
mov
xchg
dec
adc
into
cmc
xchg
test
jp
xor
movsl
mov
jns
je
dec
rcl
shll
and
nop
sbb
lods
mov
int3
loop
xchg
les
fisubrl
clc
push
orb
in
inc
pushf
and
das
inc
clc
cmp
in
add
pushw
inc
jl
mov
xchg
cmp
adc
mov
lret
out
sub
fucomi
fdivs
mov
add
inc
jg
shll
cli
xor
ljmp
mov
outsl
cmpw
js
loopne
out
mov
les
es
dec
mov
push
mov
pop
sti
push
aad
ljmp
add
dec
cmpsl
dec
loop
popa
xchg
arpl
adc
adcb
add
jge
bound
imull
jo
or
and
pop
push
sbb
fistpll
ds
push
sub
icebp
dec
sti
jo
movl
cwtl
inc
jp
fists
xchg
inc
pop
pop
ja
mov
mov
mov
xorl
idivb
jne
cmp
imul
aas
js
and
aas
push
rcll
pop
add
xor
mov
and
arpl
adc
mov
and
xor
pop
xchg
and
decb
int
mov
int3
xchg
rcrl
insl
mov
call
lcall
xor
mov
in
fnstsw
push
ds
push
cmp
into
cmp
leave
sub
lret
into
fdivrp
cmp
lea
jae
popa
int
jns
mov
sbb
fidivl
push
aad
adc
xchg
mov
std
icebp
sub
push
sahf
inc
out
inc
add
lea
int3
stos
imul
push
aam
pop
outsl
sbb
cmp
in
or
mov
repnz
lea
mov
inc
stos
lret
and
fwait
cmc
adc
rcrl
pop
dec
xchg
adc
mov
test
rcrl
sarl
scas
jg
inc
sub
dec
shlb
mov
xor
arpl
hlt
imul
clc
push
mov
add
xchg
mov
mov
test
and
stos
sbb
das
pop
cltd
jb
or
mov
das
push
out
push
or
mov
arpl
mov
pop
enter
ret
lods
xor
sbb
movl
push
mov
sbb
shr
dec
mov
ja
mov
addb
in
ret
and
push
adc
push
jns
sub
mov
out
bnd
jb
mov
adc
xorb
sahf
je
cmp
rcl
push
xchg
cmp
push
loopne
sbb
mov
nop
jl
jb
mul
add
dec
adc
push
sub
aas
and
pop
sbb
lods
sub
jmp
mov
subl
rcrl
repz
subb
das
gs
xor
xadd
dec
in
shll
adc
pop
lcall
fs
adc
cs
andb
xchg
lret
mov
mov
lcall
iret
je
inc
ret
rcrb
mov
stos
movsl
call
loop
push
adc
mov
push
push
ljmp
dec
pop
mov
inc
push
lds
lcall
push
rcll
lret
xchg
lds
sbb
outsl
in
add
mov
pop
aas
fidivl
mov
jp
cmp
jle
sub
lcall
iret
pop
lret
jb
mov
mov
iret
fisubl
data16
jb
add
mov
mov
fldt
xchg
and
mov
mov
cmp
bound
nop
call
pop
int3
fisubl
in
ljmp
movsl
enter
sahf
cmp
or
std
sbb
push
pop
pop
mov
push
popl
adc
or
arpl
in
or
pop
in
js
in
inc
outsl
pop
xchg
fbld
arpl
xchg
cmp
push
add
mov
dec
imulb
mov
sahf
int3
dec
aas
pop
dec
sub
lods
test
mov
mov
xor
cld
call
sub
inc
xchg
dec
fidivrs
jge
xor
mov
push
push
aam
jbe
and
jae
data16
mov
or
sbb
das
into
pop
or
push
mov
in
sub
pop
xor
addl
mov
jecxz
inc
sarl
or
sub
int3
add
icebp
lahf
stc
xlat
inc
mov
cmp
cwtl
ret
in
pop
je
sahf
mov
dec
jb
scas
lret
jecxz
out
and
add
mov
inc
cmpsl
push
ds
scas
fisttpll
pop
imul
push
roll
xchg
jmp
les
test
cmp
lahf
fwait
xor
xor
ja
mov
mov
loopne
nop
in
pop
or
sub
mov
call
push
test
movsl
mov
cmpsb
add
int3
jge
push
push
test
push
pop
cmp
sub
inc
sarb
loopne
jno
insl
add
adc
mov
nop
adc
xchg
push
cmp
cmp
xor
ljmp
in
loopne
pop
sub
push
adc
pop
rcr
cmp
mov
cmp
scas
loopne
lret
push
in
sub
pusha
pop
int3
mov
lds
mov
jl
cmp
jl
inc
scas
adc
or
iret
aam
xor
fcom
ja
push
inc
jb
and
and
dec
repz
shrb
outsl
repz
stc
movsl
fistpll
cltd
cmp
sbb
or
sbb
arpl
nop
xchg
or
sahf
adc
idivl
cmp
push
pop
mov
mov
xchg
dec
sub
lret
cld
xchg
xor
fdivrs
maskmovq
std
pop
sbb
iret
xchg
mov
and
pop
inc
sahf
add
ja
adc
es
dec
xchg
or
repnz
aaa
imul
pop
push
push
and
sub
lea
movsb
aad
cmp
dec
nop
cmp
xchg
cli
pop
or
movsb
push
mov
xor
inc
mov
push
or
pushf
repnz
inc
mov
inc
into
push
test
shr
ret
dec
rcrl
data16
jp
shlb
cmp
pop
push
mov
js
jge
gs
mov
sbb
inc
test
sbb
xchg
push
mov
cmpsl
pop
jb
loope
xchg
fs
pop
dec
pop
or
cmc
dec
inc
dec
arpl
outsl
sub
call
imul
insl
sbb
or
pop
loope
int3
divl
out
stos
mov
xchg
das
aaa
nop
mov
mov
dec
pop
cmpsl
sbb
std
mov
ss
sti
int
ljmp
jl
jno
xchg
mov
xlat
mov
and
mov
push
pop
das
roll
mov
orb
push
xchg
pop
ss
ret
or
es
nop
jl
sub
pusha
cmpb
ljmp
jb
icebp
xchg
repnz
in
cmpsb
xchg
mov
mov
jnp
inc
fistpl
cmpxchg
popa
or
into
popf
call
jne
and
cmp
pop
fistps
pushf
xchg
ljmp
movsb
mov
ud0
mov
push
xchg
lcall
cld
and
adc
sub
cwtl
or
int
inc
sbb
jg
rcrb
jge
test
inc
xchg
jg
nop
es
cmp
pop
ret
in
repz
fs
les
mov
pop
adc
cli
adc
cs
cmp
pop
adc
lahf
aad
sub
lods
push
sub
inc
in
fwait
sub
jp
into
push
pop
jno
pop
jo
mov
scas
sub
out
fwait
mov
aam
cmp
cli
cltd
sbb
jl
sbb
xor
jo
lds
push
mov
xor
mov
xor
inc
les
lods
out
dec
or
lret
scas
push
icebp
add
add
int
divb
push
push
adc
xchg
adc
insl
movsl
ds
cmp
mov
sbb
fimull
sbb
jno
fsubrs
or
fiadds
into
mov
jae
pop
xchg
adc
lods
sarb
aam
dec
cmc
sbb
dec
imul
ds
test
outsb
out
mov
mov
cmpsl
mov
cmp
sub
mov
outsb
scas
add
mov
push
les
mov
push
xchg
dec
or
push
xor
adc
cmp
lea
mov
aaa
pusha
pop
std
lret
sbb
test
or
jp
in
rorl
sbb
push
fidivs
or
mov
in
cmpsb
ret
lods
sbb
jge
fadd
in
rclb
sbb
lock
mov
aam
dec
mov
test
dec
dec
sub
sbb
pop
int3
jne
push
cmp
scas
push
or
and
ljmp
rorb
repz
mov
mov
das
push
out
aaa
xchg
rcrb
fs
in
cmpsl
inc
dec
jae
push
or
int
or
scas
or
or
xchg
xor
inc
sbb
sub
out
add
notb
in
shrl
mov
lcall
inc
mov
push
loope
pop
gs
imul
aam
inc
scas
jp
mov
sbb
pushf
sbb
inc
inc
inc
push
sbb
insl
adc
dec
fnstenv
adc
roll
das
push
js
fcmovu
loop
push
xorb
jnp
aaa
xlat
push
sbb
jecxz
adc
pusha
sub
inc
or
pusha
mov
xchg
test
add
jae
jle
dec
scas
cmp
sub
dec
xor
add
jecxz
icebp
rclb
fisubs
inc
mov
daa
nop
ret
imul
or
ss
lcall
mov
aam
data16
xor
cmc
cmp
dec
xor
out
scas
rclb
stos
outsb
test
mov
es
out
fstpl
sti
ds
outsb
dec
pop
push
adc
pop
dec
std
lock
cmc
jg
xchg
stos
mov
xor
xor
dec
out
mov
xchg
xor
insb
mov
fmul
dec
inc
data16
mov
ficoms
filds
loop
outsb
flds
in
idivb
aad
or
pop
cmpsl
clc
cmp
loop
and
add
xchg
add
and
in
jno
cltd
jle
xor
iret
mov
std
sub
ljmp
shrl
pop
ja
inc
outsl
xlat
mov
stos
xor
fnstenv
sbb
rorl
pop
push
shll
sbb
xchg
hlt
ja
mov
mov
std
inc
das
dec
js
pop
fcomp
jbe
mov
pop
pop
lahf
pop
mul
push
decl
inc
mov
ds
divl
push
cmpb
xchg
cmpsl
mov
call
and
sbb
xor
mov
sub
test
loop
in
mov
mov
je
dec
pop
pop
add
jl
orb
lods
mov
mov
pop
mov
jae
popa
into
xchg
test
adc
leave
xchg
push
mov
inc
dec
sub
add
mov
mov
inc
dec
dec
pop
inc
test
cmp
enter
stos
pop
lahf
mov
out
and
cwtl
sbb
iret
lret
xor
xchg
xlat
and
xchg
fidivl
in
mov
cmpsb
outsb
fdivrp
movsl
lea
outsl
popa
add
pushf
or
int3
dec
add
fnstcw
rolb
inc
push
inc
mov
mov
jae
jl
pop
hlt
outsb
mov
mov
data16
pop
mov
data16
push
les
pop
pop
and
mov
repnz
adc
adcl
push
cs
xchg
lods
loopne
imul
xor
and
outsl
out
popa
xor
lock
std
push
daa
shl
int3
inc
xlat
addb
adc
cmp
mov
push
in
outsb
clc
adc
push
push
cli
aam
mov
mov
jns
lcall
loop
push
add
das
jmp
loopne
sub
inc
mov
push
gs
inc
dec
mov
mov
inc
outsl
mov
clc
cs
dec
add
inc
sub
mov
arpl
out
gs
test
out
scas
mov
push
mov
add
cmp
sbb
mov
clc
xchg
push
cmc
mov
and
fadds
sub
pop
shlb
inc
js
out
stos
mov
clc
insb
daa
addr16
push
cld
enter
cmp
xchg
addr16
push
fcomp
push
daa
mov
ficompl
sub
jb
jecxz
mov
cmp
outsl
jne
ffreep
xchg
pop
add
stc
faddl
test
shrb
mov
xchg
inc
push
xchg
pop
and
mov
js
jg
outsl
mov
in
fcoms
mov
mov
int3
mov
add
adc
lods
shlb
pop
pop
adc
nop
imul
fisttps
stos
loop
adc
or
xchg
out
push
inc
and
inc
sti
cs
xchg
mov
xchg
mov
adc
xchg
adc
mov
sub
aaa
add
leave
lock
ds
fs
push
enter
out
in
sub
jle
std
cmp
add
and
lods
or
aam
cmp
pop
pop
icebp
inc
enter
adc
pushf
fs
xor
add
jle
push
jecxz
out
xor
push
pop
leave
imul
jmp
add
inc
cmpsl
mov
push
gs
push
cmp
xchg
or
lahf
js
or
shrb
psubsb
test
ret
sahf
add
mov
xor
adc
hlt
test
add
push
mov
add
out
shll
out
enter
add
mov
dec
lret
sbb
divb
inc
and
fucomi
mov
sub
lahf
jmp
dec
fwait
in
or
cmc
fstpt
mov
das
jnp
or
mov
push
dec
insb
pop
cwtl
jo
pop
callw
pushf
pop
out
pop
or
rclb
iret
push
or
mov
sahf
inc
imul
js
lret
dec
pop
fwait
dec
or
dec
jp
push
sub
or
gs
xchg
fbld
js
hlt
fstpl
pusha
sub
sub
int
and
popa
jne
lahf
sahf
xor
add
inc
je
jmp
aam
adc
sti
outsb
sub
xchg
aas
sahf
inc
pop
cmp
out
js
cmp
cmp
or
pop
mov
iret
mov
js
mov
aaa
sub
and
xchg
mov
mov
xor
daa
stos
daa
divl
sti
fstl
inc
xchg
mov
icebp
xor
icebp
pop
inc
insl
out
or
and
sbb
fistpll
cltd
mov
mov
adc
inc
mov
mov
xor
xchg
cmovle
loopne
mov
add
fldl
fnsave
dec
dec
inc
mov
adc
sbb
and
push
dec
popa
aaa
lea
push
mov
dec
xor
jmp
pop
sub
ljmp
hlt
mov
push
jp
add
jp
mov
lock
popa
lods
xor
adc
repz
mov
mov
lret
cld
mov
insb
or
cmp
pushf
inc
aaa
cltd
push
loope
and
pop
iret
sysexit
mov
inc
test
mov
xchg
adcb
shlb
add
rcl
xchg
fbld
es
adc
pop
lahf
ds
sub
push
jge
xchg
ljmp
jp
sub
add
cmp
outsb
add
ds
cs
data16
aas
mov
mov
out
cli
inc
sub
jns
and
fisttpl
jae
or
cmpsb
dec
add
scas
dec
jge
stc
mov
scas
cld
loopne
insb
cli
dec
cs
push
sub
notb
xchg
pop
or
sbb
sub
or
lcall
dec
es
imul
addl
das
shrb
fdivrs
push
xor
arpl
lahf
rcrl
loopne
and
and
xchg
pop
jl
cld
mov
dec
dec
jmp
mov
jae,pt
or
testb
mov
jp
jle
bound
aas
inc
sbb
push
and
ret
mov
out
mov
loopne
pop
aaa
jbe
and
sub
testb
fadds
cmpl
rcll
lds
std
rcrb
push
ret
cs
adc
mov
in
mov
jo
mov
and
pop
ds
jmp
xor
push
push
add
push
xor
and
lret
pop
outsb
xchg
adc
cmp
jae
mov
mov
sub
cmpl
adc
movsb
and
pop
movsl
pop
emms
mov
sub
push
cmp
cltd
in
adc
aad
and
mov
adc
push
mov
scas
adc
push
sbb
xchg
mov
adc
addr16
mov
sbb
mov
mov
dec
push
xchg
test
repz
mov
repz
ds
sub
pop
arpl
adc
inc
dec
dec
cwtl
out
lret
lcall
jbe
call
inc
add
dec
adc
mov
fs
sbb
pop
push
cmp
rcrb
fcoml
adc
mov
pop
mov
mov
add
in
daa
lcall
xchg
out
test
sub
outsl
leave
pop
sub
jle
leave
ret
pushl
outsl
test
mov
push
sub
movsl
addr16
xchg
mov
mov
sbb
jmp
push
addr16
gs
js
add
mov
inc
movsb
mov
rol
xchg
stos
mov
in
call
xorb
ljmp
pushf
push
push
popf
imul
pop
js
xor
jae
les
lret
data16
xchg
lcall
fistps
and
push
dec
cld
ss
sub
adc
stc
in
out
int
decb
and
jecxz
mov
mov
rolb
pushf
cmp
jbe
adc
xchg
mov
sbb
pop
push
gs
lret
sti
mov
bound
inc
repnz
cmp
pop
sbb
fs
sbb
cmc
add
mov
test
xchg
push
fwait
or
sbb
les
fs
or
into
das
sub
pushf
push
bound
shll
xor
or
test
insb
fcomps
mul
mov
lock
inc
mov
data16
dec
cmpsb
loop
xor
in
mov
cld
sbb
out
pusha
push
clc
or
inc
jg
fsubl
and
std
fisttpll
jecxz
and
jnp
mov
fwait
inc
xor
dec
dec
jb
dec
mov
loope
xchg
cmc
sub
jmp
jg
fwait
ja
aam
mov
sarb
fcmove
push
rcll
mov
shrb
mov
push
dec
pop
mov
dec
mov
and
sbb
adc
mov
xchg
addr16
mov
daa
ret
and
jmp
xlat
xor
sub
xchg
mov
jg
cwtl
inc
ljmp
pop
sub
pushf
lds
and
aaa
cmp
and
jle
add
notl
and
adc
movsl
xchg
lds
mov
mov
pop
push
mov
hlt
in
jno
jge
mov
sub
jno
xchg
adc
or
popf
cli
shlb
insl
sbb
mov
push
mov
pop
int
or
xchg
xor
jo
and
lds
pop
fcoms
stos
xor
rorl
xchg
cmp
imul
push
hlt
jne
xor
pusha
or
pop
jge
jl
dec
cmp
jmp
loope
into
not
or
stos
repnz
jge
sbb
sbb
xchg
add
pop
dec
dec
xchg
in
dec
out
inc
push
test
jge
mov
mov
xlat
jae
loop
sub
cmp
shl
std
mov
sti
jnp
repz
lods
cmp
cmp
cli
int3
mov
jecxz
scas
flds
mov
xchg
lahf
xchg
xchg
pop
stc
sub
in
push
push
jo
stos
cmpsb
cmpsl
cld
sti
sub
push
pop
add
in
and
xchg
inc
dec
and
testb
nop
arpl
out
fs
sbb
bnd
and
aad
and
xlat
ret
xchg
push
mov
and
push
and
and
dec
daa
xor
xor
das
insl
shrl
or
leave
sbb
dec
aas
sub
data16
push
fcomi
jb
xchg
inc
jns
gs
sub
lret
in
xor
push
push
xchg
lds
xchg
test
ficoms
and
arpl
mov
clc
cmp
jp
sbb
and
inc
sbb
and
inc
cmp
mov
lock
das
jns
shrb
adc
and
dec
movsb
ja
adcb
jg
popa
lret
inc
pop
fs
loopne
in
xchg
mov
cmc
pop
aas
icebp
or
adc
pop
sub
dec
adc
fstpl
push
fdivrs
mov
xor
pop
xchg
mov
pusha
mov
fmull
add
jle
fdivrl
fisubl
mov
loope
std
fdivl
mov
adc
std
push
data16
dec
sub
inc
ljmp
mov
scas
adc
mov
jae
mov
lock
sub
es
adc
inc
je
sbb
mov
push
mov
repz
stos
fsubrs
or
adc
fld
idivb
sub
mov
pusha
rcrl
and
bound
sbbb
pop
pop
cli
jmp
loope
out
and
pop
mov
lds
fs
into
imul
data16
pop
lahf
dec
sub
add
cld
jle
arpl
pop
mov
in
in
ret
mov
xchg
add
inc
dec
ljmp
or
push
leave
fistps
mov
mov
mov
jmp
scas
jo
stos
out
mov
arpl
mov
mov
lock
fscale
sbbb
arpl
lahf
out
xchg
dec
adc
sbb
adc
cmp
aad
lock
or
out
ss
cmp
in
add
cs
sub
mov
daa
pop
mov
xlat
icebp
dec
int3
pop
mov
mov
mov
cmp
icebp
daa
jmp
inc
mov
mov
jp
das
stc
icebp
mov
fimull
push
push
and
imul
pop
inc
lock
fistl
in
cmp
xlat
adc
cs
flds
xchg
cwtl
adc
cmpsl
xchg
mov
daa
popw
add
pop
xchg
movsb
pop
bswap
nop
cmc
adc
lea
pop
sahf
icebp
sub
mov
xor
adc
test
lods
push
int3
roll
xchg
lock
clc
push
or
sub
nop
ja
sub
scas
and
sub
addl
fs
pop
test
lcall
jno
push
xchg
test
cli
negl
pushf
pop
movsb
scas
mov
sub
fmuls
stc
js
scas
inc
add
pop
loopne
mov
sarb
call
jb
push
sarl
push
scas
jmp
jp
test
xchg
and
test
add
lcall
inc
jecxz
out
add
jae
lea
out
inc
push
pop
push
mov
mov
and
cld
jb
ljmp
out
neg
popf
mov
iret
addb
pop
lgs
lret
arpl
xchg
xor
add
sub
dec
fcmovnu
roll
push
movsb
into
bound
out
aaa
jl
xor
pop
cmpsl
pop
adc
mov
dec
stc
mov
mov
out
cmpsl
jecxz
push
popa
repz
dec
xor
aam
call
sub
adc
sub
mov
add
out
fcom
mov
lahf
jl
sub
push
and
ffree
dec
loope
gs
cli
aad
inc
mov
enter
push
push
mov
dec
xchg
cltd
xchg
dec
pop
dec
jmp
lea
popf
mov
ret
insb
cmpsl
pop
cmp
add
mov
sbb
inc
cmp
test
js
jecxz
out
dec
sbb
aam
cs
es
add
es
jge
stc
xchg
and
shr
mov
mov
pop
pop
pop
mov
sbb
cmpsl
sbb
add
dec
in
cld
scas
addr16
testl
test
je
add
adc
sub
mov
dec
xchg
mov
hlt
sbb
inc
xchg
mov
push
mov
sahf
mov
loop
ret
push
cmpsl
in
and
push
outsb
inc
push
jnp
inc
outsb
mov
in
and
popf
sbb
orb
mov
xlat
mov
inc
xchg
sub
js
inc
test
mov
lods
sbb
xorl
jae
inc
sti
pop
lods
sti
aam
jmp
int3
loopne
outsb
or
mov
pop
xchg
dec
xchg
repnz
sbb
and
sbb
and
push
push
xchg
cli
and
xor
mov
sub
push
loope
outsl
ljmp
xor
jecxz
sti
or
fs
mov
or
imul
xabort
mov
lret
cmc
inc
or
popf
cmp
je
fcompl
ret
cld
cmpsb
xchg
out
cmp
int3
cmpsb
rorl
push
mov
lret
pop
int
cmp
nop
stos
pop
xchg
data16
pop
xchg
dec
out
push
or
and
mov
gs
xchg
int3
lcall
imul
outsl
push
repz
pop
mov
lret
lea
push
cmp
cld
insb
fdivl
mov
mov
cli
pop
dec
xor
pop
movsl
sub
outsb
pop
jbe
test
sub
in
mov
lds
dec
icebp
jmp
incl
sbb
xchg
xor
mov
pop
shrl
ret
push
xchg
adc
sub
mov
mov
and
xor
inc
fs
dec
test
rclb
xorb
pop
aas
xchg
mov
pop
dec
loopne
and
cmp
js
dec
jg
pop
dec
xlat
dec
jmp
fcomip
xor
pusha
aad
scas
aas
xchg
popf
xchg
jb
xor
inc
dec
leave
dec
add
daa
das
fcompl
ret
add
mov
adc
int3
call
mov
rcll
cmpsl
adc
fisubrs
fisttpl
jmp
and
popa
in
cmp
xor
xchg
test
or
adc
xor
mov
adc
sarb
bound
adc
imulb
sbb
jp
xor
imul
mov
sub
out
xchg
add
fstl
push
test
pushf
sbb
adc
nop
out
call
rcl
loope
or
lret
lcall
mov
loopne
inc
out
cld
mov
fistpll
jbe
mov
outsl
sti
pop
dec
cmp
jmp
sbb
iret
call
aad
mov
aas
mov
out
dec
enter
out
cld
add
mov
xchg
sub
in
cmc
repnz
push
jle
add
insl
dec
mov
out
mov
movsb
xchg
cmp
mov
leave
es
out
push
imul
add
in
data16
arpl
inc
shlb
sbb
gs
lcall
push
jle
xlat
xchg
adcl
sti
xchg
xor
daa
arpl
out
xchg
and
dec
dec
inc
push
cs
js
and
sar
cwtl
mov
or
rcrb
cwtl
int3
imul
movsb
out
xchg
xor
sub
xchg
inc
lods
enter
adc
arpl
dec
leave
fisubl
fcmovu
push
mov
push
xchg
call
jo
and
pop
jp
jne
outsl
hlt
lds
out
sbb
test
and
jl
adcl
xor
xor
aaa
push
jge
sbb
aaa
xchg
mov
fists
imul
das
jp
clc
xchg
pop
pushf
mov
scas
jmp
and
sbb
enter
push
jp
ss
movsl
out
push
ds
aaa
or
outsb
shll
lcall
cmp
divl
outsl
outsb
mov
pop
cli
into
lahf
push
xchg
and
sbb
push
lahf
pop
int3
jg
lret
shld
mov
mov
mov
or
je
jp
ret
adc
fwait
imul
mov
mov
outsl
test
and
das
and
in
imul
add
push
scas
in
push
xlat
jae
lahf
sub
out
lds
cmp
or
sti
add
sbb
xchg
pop
out
das
imul
cmp
pop
scas
adc
ja
loopne
xor
pop
sub
add
pop
sub
fucompp
icebp
lods
icebp
js
push
or
or
fstps
out
and
or
push
loope
and
rol
sahf
dec
adc
sarb
push
scas
pop
stc
cld
pop
js
dec
cltd
in
loop
in
dec
mov
and
jo
cmp
mov
pop
leave
and
xchg
out
mov
les
add
out
sub
mov
idiv
cwtl
sar
idivl
cmpsb
jne
jne
xchg
dec
sub
sbb
cmc
insl
xchg
dec
cli
nop
lret
cltd
data16
inc
cs
add
jbe
movsl
mov
push
or
jge
cmp
cmp
or
xchg
rcrb
dec
data16
xor
dec
pop
cmpsb
mov
mov
leave
dec
add
ljmp
cmp
shll
jge
jbe
inc
adc
lods
push
cmp
pop
xor
in
or
cmpsl
push
add
pop
addr16
add
and
inc
scas
cmpsl
ja
push
xor
mov
les
shr
std
ss
sub
sbb
pop
mov
pop
repz
mov
mov
out
lret
insb
ja
pushf
pop
jne
mov
jno
ds
pop
xchg
pusha
daa
mov
xor
push
ljmp
ror
decl
xor
jne
and
imul
dec
push
sbb
addr16
add
rcrb
push
xor
movsl
out
test
inc
out
adc
lcall
shrl
mov
cmpsl
mov
xchg
push
ret
rcll
out
jl
mov
jmp
sub
insl
mov
sar
inc
xor
notb
cmp
jns
mov
nop
adc
mov
lock
out
fcoml
sbb
xchg
or
inc
out
add
iret
or
jecxz
ret
cmp
sbb
fs
sbb
insb
adc
add
jno
cmp
out
in
sbb
lret
push
pop
icebp
cmc
mov
cmp
sub
jmp
inc
ret
in
fwait
dec
in
int3
cmc
stos
aaa
das
fs
stos
mov
lea
jecxz
add
jp
popf
out
or
aad
push
es
in
mov
adc
jae
fidivrs
pop
insb
lret
add
rcrl
jnp
in
mov
stos
inc
aas
mov
sub
push
jne
mov
xor
mov
mov
out
dec
es
cmp
pop
dec
add
roll
imul
add
push
xchg
dec
repz
sbb
lret
mov
pop
testl
cmp
push
ja
aas
rcrl
jmp
push
das
sti
in
sarb
rep
mov
idiv
xlat
adc
sbb
cltd
fcmove
fisubrl
xor
push
xchg
push
popf
adc
enter
add
push
xchg
and
push
in
dec
stos
js
mov
dec
pop
jecxz
notl
out
cmp
push
out
adc
inc
inc
xchg
cmpsb
jno
imul
mov
cmpsb
repz
xor
pop
test
fisttpl
fdivrs
xlat
sarb
movsl
cmc
inc
insl
xor
jno
adc
imul
pop
mov
jecxz
fidivs
pop
xor
cmp
jb
xor
dec
das
dec
ljmp
jne
sarl
mov
mov
ja
mov
mov
pop
loop
mov
in
loop
xor
lcall
insb
data16
sub
test
cmpsb
pop
pxor
push
ficoml
cmc
out
sub
cmp
jl
mov
sbbb
xchg
mov
roll
xchg
divb
mov
jp
push
sub
dec
push
sub
and
push
cmp
cmp
jnp
cmp
dec
shll
test
ret
and
repz
inc
push
xchg
jecxz
mov
xchg
fs
cmp
loope
loope
xchg
dec
imul
ret
pop
lock
call
pusha
loope
inc
jge
jno
mov
repz
mov
lret
nop
notl
inc
divl
mov
sub
out
sub
out
sbb
stos
cmp
int3
repz
mov
pop
adc
mov
pop
les
and
fstps
mov
jnp,pn
jge
sub
lcall
inc
mov
push
in
subl
out
inc
mov
loope
inc
and
test
sahf
mov
pop
pop
clc
cmpsl
push
cmp
pop
ficoml
mov
and
repnz
xor
jb
push
std
stc
testb
xlat
xrelease
cmpsb
aas
fisubl
mov
cld
and
notb
push
or
insl
push
int
inc
arpl
fmulp
mov
jl
cmp
xchg
xchg
cmpsl
test
int
lds
xor
add
aad
fisubl
daa
xchg
inc
sahf
jns
stos
jne
aam
mov
pop
popa
xor
std
inc
cmp
out
push
pop
push
sub
adc
imul
dec
arpl
mov
shll
add
adc
jbe
inc
cld
cmpsl
or
xchg
mov
dec
lods
pop
sbb
hlt
jb
adc
cmpsl
ret
mov
fsubs
fadd
addr16
out
xchg
or
pop
add
enter
mov
ds
cs
push
in
jno
mov
out
xchg
sbb
scas
sti
xlat
sahf
push
es
jle
xor
push
pop
jno
int3
cltd
mov
lahf
icebp
cmp
jl
aad
data16
push
add
addr16
enter
movlps
push
add
jb
and
int3
adc
sbb
push
sbb
ret
sti
and
aas
in
pop
push
adc
lock
inc
xor
clc
inc
ds
sub
test
jb
xor
sbb
inc
sub
clc
pushf
lods
loopne,pn
roll
inc
xchg
add
in
imul
sub
push
jb
mov
or
stos
sub
xorb
xchg
in
xchg
and
jno
fwait
test
mov
hlt
or
push
add
xchg
pop
out
mov
lahf
or
ret
push
loop
jno
mov
dec
adc
pop
cmpsl
popa
fbld
lds
orl
jmp
cwtl
inc
cli
stos
mov
xor
and
xchg
inc
cmc
faddl
mov
in
or
pop
call
imul
add
xchg
cmp
stos
pop
sub
movsb
outsl
jbe
scas
lret
sbb
push
imul
mov
sbb
testb
sti
int
sub
mov
jo
imul
pop
frstor
mov
cmp
mov
addb
scas
adcb
jecxz
imul
out
aaa
testb
sahf
adc
push
mov
and
imul
fwait
push
or
jne
cmp
loope
mov
sbb
repz
icebp
dec
je
inc
out
mov
jge
cwtl
or
pop
imul
and
push
and
test
rcr
jo
leave
les
mov
push
pushf
lcall
lcall
adc
add
adc
jge
scas
push
adc
aaa
or
imul
push
dec
imull
inc
imul
mov
jno
pop
loop
add
lock
adc
xor
dec
inc
mov
test
je
fidivl
jmp
or
mov
mov
jg
inc
rclb
xor
sbb
stos
push
test
pop
pop
mov
mov
jne
insb
pop
adc
push
outsb
sbbl
jmp
mov
jp
mov
jmp
or
xor
cmp
push
lods
cli
sbb
or
popf
mov
adc
mov
negl
lds
xchg
popa
les
jbe
fcmovne
stc
dec
add
sub
lcall
aad
dec
mov
les
dec
in
arpl
sub
sbb
imul
fs
out
pushf
and
and
in
stc
andb
dec
fldt
pop
jp
cmp
add
inc
stos
iret
lret
mov
dec
jmp
pop
pusha
mov
fiadds
mov
clc
test
arpl
jmp
std
sbb
or
push
mov
or
popf
mov
aaa
dec
mov
sub
lcall
movsb
std
jo
aad
cld
jecxz
and
lds
mov
negb
stc
mov
cmpsb
mov
ret
inc
imul
insb
pop
mov
or
sub
aad
xchg
mov
and
cld
jno
push
add
stos
sub
mov
lods
sbb
dec
lods
xor
outsl
sbb
cld
pop
sub
dec
imul
xchg
aaa
pop
pushf
out
pushf
push
pop
mov
fcomps
jo
nop
jge
mov
jb
mov
inc
sbb
and
pop
cmp
dec
mov
fwait
aas
or
dec
pop
inc
push
cmp
pop
add
sbbl
and
inc
or
pop
or
out
out
in
test
mov
push
dec
jne
mov
in
jae
add
stos
pushf
sub
mov
pushf
inc
add
push
mov
xchg
dec
addr16
sbb
mov
lret
loop
and
inc
sbb
mov
push
dec
jnp
rolb
xor
xor
sahf
xchg
enter
xchg
sub
test
clc
orb
pop
xchg
les
bound
scas
rcll
add
xchg
xor
mov
rcl
out
dec
cs
jbe
rorl
push
and
jl
dec
xchg
decb
into
mov
xchg
push
clc
lock
rolb
jae
or
inc
xchg
ljmp
testb
stos
mov
inc
cwtl
lret
inc
bound
imulb
jb
or
xor
repz
or
pop
inc
and
jge
out
and
adc
inc
mov
scas
push
mov
js
shrl
push
mov
push
lea
mov
insl
rcr
dec
andb
push
mov
pop
or
outsl
lcall
mov
out
mov
or
lret
push
mov
add
fwait
js
fxch
adc
add
into
shll
and
push
rcll
sub
jbe
sub
push
call
shll
ja
pushf
fnstcw
xlat
xchg
and
push
sbbl
lods
mov
push
sar
and
jno
push
and
jb
pop
add
xchg
repnz
mov
push
or
add
or
inc
pop
les
or
xor
push
fiaddl
lcall
and
cmp
sub
xor
mov
mov
std
stos
iret
stc
sub
test
xchg
xchg
rcpps
iret
lahf
pop
int3
addl
and
lcall
sbb
sbb
push
pop
fs
mov
pop
push
mov
aad
faddp
call
repnz
mov
cld
outsb
sub
in
aad
sti
dec
stos
outsl
push
out
test
pop
jle
adc
lock
cs
mov
adc
cmp
cs
xchg
ret
mov
nop
test
popa
fldenv
gs
inc
adc
push
mov
mov
adc
dec
pusha
insb
fidivrl
push
fmul
xchg
int
fs
cmp
add
insb
jp
jge
and
push
hlt
cmp
mov
mov
sahf
std
mov
xchg
ret
popf
enter
pop
lea
mov
jle
inc
leave
in
sub
adcb
cmp
fwait
push
movl
faddl
call
and
add
push
loop
shlb
imul
jo
shll
sub
stos
mov
dec
andl
fdivrs
adc
add
pop
sub
outsl
fildl
test
rorb
mov
nop
jae
cmp
adc
sbb
test
jno
sub
leave
mov
sbb
dec
shrl
das
sub
lret
mov
mov
or
add
dec
lods
xchg
sbb
inc
ffreep
lds
stos
imul
pop
mov
mov
jmp
mov
push
pop
popa
mov
fstpt
sahf
and
insl
or
pop
inc
test
xchg
out
dec
out
jp
sbb
rorl
sbb
xor
sbb
push
loopne
test
popa
mov
aam
mov
xor
cmp
mov
lods
jge
rcll
iret
clc
out
push
inc
mov
xor
push
mov
push
adc
pop
push
pop
dec
arpl
xchg
in
cmp
sub
shl
pop
addr16
add
mov
xchg
lcall
out
adc
xor
sbb
xor
mov
out
enter
filds
sbb
pop
ss
lret
scas
push
sahf
cmp
fistps
lret
or
je
push
lds
test
stos
cmp
sub
push
xchg
inc
and
adc
daa
ja
cltd
int
jmp
cmpsl
loop
push
loopne
jmp
fldenv
add
loope
arpl
icebp
icebp
xchg
cmpsb
inc
subb
push
mov
leave
sbb
repnz
call
jae
cmc
xchg
xor
or
mov
inc
add
in
pusha
arpl
xor
out
in
aaa
in
mov
bound
mov
loope
mov
adc
pop
int3
dec
jmp
pop
stc
hlt
fisttpll
sub
test
mov
xor
lods
daa
nop
movsb
adc
mov
pop
sti
mov
mov
into
stos
leave
dec
fs
mov
cmp
xchg
sti
in
ds
mov
or
inc
rolb
mov
add
cmpsb
xor
adc
push
ret
in
add
test
mov
xchg
insb
inc
mov
xchg
pop
sahf
inc
add
idivl
jb
mulb
pop
mov
rclb
mov
lock
lods
dec
mov
stc
orl
xchg
and
mov
push
repz
icebp
fprem1
inc
test
xchg
sub
cmp
mov
dec
loope
or
mov
push
es
movsb
call
or
or
addr16
add
fwait
mov
sbb
and
dec
ss
xchg
inc
rolb
pop
pop
jne
data16
fld
pop
and
mov
hlt
bound
mov
xor
iret
dec
outsb
lods
movsb
sbb
add
fwait
mov
push
mov
jmp
jno
scas
mov
mov
jo
inc
push
nop
or
pop
or
ja
insl
in
out
mov
mov
fimull
loope
jae
sahf
xor
xorl
dec
scas
enter
mov
testb
xchg
inc
pop
lods
xchg
into
fs
sbb
jg
in
jnp
pop
mov
or
push
mov
jmp
xchg
leave
imull
aam
push
xor
adc
and
std
inc
jb
imulb
sub
sahf
rcr
dec
pop
or
and
jno
rolb
fstpl
xchg
cmpsb
mov
rcl
test
mov
mov
pop
or
std
xchg
cmc
or
push
pusha
addr16
call
cmpsl
push
imul
cmc
cmpsb
add
test
stos
xor
pop
sti
xchg
pop
ljmp
negl
aaa
or
jne
fprem
jp
loop
sbb
test
jmp
xchg
cmp
sbb
sbb
in
and
popf
test
sahf
mov
pop
or
rorl
out
aam
mov
mov
stc
out
mov
or
push
sub
les
xor
dec
fucomi
cmc
sbb
repnz
popf
mov
in
push
sbb
add
pusha
shlb
jno
push
mov
mov
mov
movsl
call
int3
fisttps
pop
jl
mov
or
cmp
sub
ret
mov
pop
and
mov
mov
out
sbb
out
aaa
inc
push
lods
pop
in
and
add
mov
dec
mov
jl
sub
imul
cmpsl
pushf
fldlg2
mov
adc
cmp
scas
xchg
add
inc
jb
push
and
sbb
adc
mov
push
cli
jecxz
and
jbe
pusha
mov
mov
cmp
mov
lods
push
mov
sbb
pusha
fiadds
inc
pop
add
aas
mov
mov
pop
mov
hlt
or
std
repnz
jns
cltd
ja
test
xchg
add
ret
pusha
push
aam
add
mov
lcall
sbb
idivb
mov
sbb
mov
jne
fsubl
sbb
jae
addb
xor
scas
aas
sar
mov
or
adc
ret
cli
mov
hlt
push
insb
ja
lea
push
inc
or
pop
ret
sbb
xchg
shr
int
roll
cwtl
movd
sbb
sbb
or
mov
test
add
cmpsl
cmp
adc
xchg
fdivrs
mov
ret
cmp
out
adcb
pop
enter
loopne
xchg
jns
rclb
xchg
sbb
and
add
test
xor
mov
pop
pop
ss
or
mov
lret
dec
sarb
cmpsl
jns
mov
sahf
enter
icebp
push
push
push
push
cwtl
out
sbb
sub
pop
jae
scas
cmp
adc
shll
sub
mov
ret
adc
dec
aas
cmp
in
inc
jecxz
mov
cmp
fldenv
fmull
into
std
sub
fmulp
jmp
add
jmp
enter
add
sub
stos
mov
pusha
xor
ret
fistpl
dec
cmp
pop
push
inc
or
sbb
or
fidivs
jns
sbb
jae
push
into
push
filds
jbe
sub
lret
fsubl
ds
push
xchg
mov
cli
je
imul
dec
out
fcomi
jae
jp
dec
mov
xchg
fiadds
mov
inc
cld
fmull
inc
cld
stc
adc
push
mov
in
mov
jp
fistl
jp
iret
mov
test
mov
mov
in
movsb
sub
pop
push
push
rol
shll
stos
popf
xor
pop
call
cmp
add
addr16
aas
sub
fnstsw
js
dec
xor
dec
dec
movsb
dec
inc
test
jle
xchg
or
inc
mov
cwtl
dec
mov
jns
jge
das
scas
hlt
adc
push
mov
ja
dec
push
jb
mov
xchg
pusha
jae
cmp
popf
leave
stos
push
das
dec
test
dec
pushf
xor
in
sub
push
test
inc
clc
mov
stc
ret
btsl
xor
and
mov
inc
aas
xor
and
cmp
mov
jg
fwait
mov
mov
das
jmp
loop
pop
pop
xor
sub
cmp
add
add
loope
pop
add
mov
mov
fnstcw
vaesdeclast
push
sub
cld
mov
mov
je
jns
in
leave
fildll
add
or
mov
sbb
pop
and
out
pop
and
lods
outsl
cmp
test
out
jp
sub
sti
cwtl
loopne
xor
test
sub
inc
outsl
push
into
repnz
imul
subb
decb
pop
or
xchg
jp
mov
dec
ret
jbe
outsb
inc
ljmp
mov
popa
jp
shll
sub
xchg
xchg
sbb
sbb
ret
jp
mov
push
cmp
mov
and
push
movsb
mov
sbb
lea
jmp
sub
les
mov
mov
cmp
mov
cs
and
sarb
push
xchg
or
pop
stc
push
push
dec
push
and
out
mov
arpl
cmp
in
cmp
xchg
mul
stos
sub
cmp
aas
jl
pop
mov
xor
mov
lods
sbb
mov
popf
js
and
pop
imul
in
pop
inc
pop
lds
dec
int
push
test
stos
jle
outsl
repz
jecxz
in
jns
outsl
pop
add
jge
pop
in
jl
xor
inc
insb
jno
dec
sbb
xchg
popf
imul
imul
cmp
xor
imul
fsubs
iret
or
sbb
das
sbb
cmpsl
or
inc
fwait
adc
out
movsb
daa
jp
in
test
push
insb
cmp
and
mov
mov
mov
nop
add
arpl
dec
lock
dec
cmp
mov
or
dec
jne
adc
repz
jge
movsb
fisttps
inc
push
sub
inc
sub
mov
cmpsb
ja
sub
push
sub
cmpb
xchg
inc
and
sub
sub
pushf
sti
mov
cmp
in
popa
jae
ror
add
cmp
mov
mov
adc
arpl
add
icebp
jbe
pop
mov
or
cli
jle
fs
adc
inc
mov
jns
daa
pop
in
jae
push
cmp
outsl
stos
dec
outsl
rclb
push
xor
cmp
xor
add
ror
pop
dec
scas
fwait
insb
rcrb
adc
or
cld
lea
cwtl
mov
lods
xchg
mov
pop
xchg
lods
dec
dec
dec
jle
and
fucomip
dec
adc
lods
mov
xchg
out
aam
cltd
xorl
into
rcr
jmp
rol
std
sbb
ss
pop
jl
mov
int
mov
push
andl
rorl
repnz
xchg
loopne
dec
xchg
into
enter
fcomps
cli
les
xchg
inc
jno
inc
mov
or
pop
mov
inc
lods
cmp
xchg
std
cli
movsb
xor
bound
adcl
int
sub
fs
xor
sbb
outsb
in
mov
dec
and
add
shl
mov
stos
orb
cwtl
out
shl
and
and
inc
lahf
clc
mov
add
enter
cmpsb
jne
in
sub
mov
adc
inc
xchg
add
xchg
and
and
mov
push
xchg
or
popa
iret
sbb
sahf
aam
jb
pop
pop
pop
dec
idivb
sbb
outsl
inc
mov
cmp
mov
mov
inc
lret
cmp
mov
outsb
ret
dec
jg
xor
addb
xchg
lock
xchg
adc
and
xor
movsb
fs
inc
xchg
adc
int
fnsave
or
inc
mov
adc
adc
mov
jl
arpl
push
les
icebp
add
mov
into
pop
into
pop
sbb
in
repnz
sbb
sti
dec
dec
cld
sub
pop
mov
mov
sub
sub
cmpsl
out
sti
fisubrs
pop
xor
loop
es
jp
roll
sub
sbb
dec
mov
cmp
je
cmc
cs
or
jae
ret
mov
aad
loop
movsl
jecxz
sarl
int
stos
ds
and
int
mov
je
push
xor
mov
or
icebp
and
adc
xor
xchg
ds
push
xchg
dec
adc
add
les
lret
test
ds
xchg
mov
dec
movsl
mov
pop
dec
push
adcl
dec
test
rcrl
jg
adc
hlt
dec
jl
imul
mov
lods
mov
cmp
pmuludq
push
rcrb
cs
fnstsw
cmc
sub
dec
jae
pushf
adc
sbb
ret
adc
sub
jno
sub
repnz
dec
adcb
sti
xchg
mov
sub
in
aad
mov
orl
jp
sbb
jne
jecxz
dec
xchg
xor
cmp
and
jecxz
mov
push
push
adc
std
xchg
and
mov
out
clc
push
dec
pop
jmp
clc
pop
mov
mov
push
fmuls
mov
push
pop
insl
sbb
cltd
xor
pop
push
mov
pop
aaa
push
dec
icebp
outsb
pop
daa
negl
sbb
call
lea
sbb
mov
sbb
dec
cli
mov
pop
pusha
adc
repnz
clc
or
es
push
adc
sbb
jmp
icebp
mov
sub
aaa
push
push
int3
mov
cmp
add
aaa
push
incb
out
or
clc
loope
cmc
mov
add
cwtl
mov
dec
add
inc
loop
push
call
fimull
call
sbb
mov
imul
dec
and
insl
mov
mov
sbb
into
int
pop
or
je
jnp
pop
push
jmp
les
bound
push
mov
mov
add
nop
mov
ret
insl
add
jg
and
jnp
or
cmp
mov
mov
dec
pop
ret
add
mov
inc
sub
push
rorl
sbb
inc
jmp
jo
test
pusha
repz
sub
cmp
fwait
lock
scas
in
mov
pop
out
cltd
mov
loopne
and
jg
clc
cli
mov
mov
adc
mov
pop
push
mov
and
dec
mov
pop
pop
push
xchg
sub
ss
imul
out
sub
into
or
push
jmp
mov
cmp
jo
dec
aad
xor
jg
test
orl
sub
or
test
cmp
push
add
adc
fisubrl
movsl
dec
adc
inc
outsb
jl
xchg
mov
mov
add
cmpl
dec
fnstsw
int3
jmp
cmp
jmp
mov
or
xor
fincstp
daa
aaa
movsl
pop
inc
clc
stos
arpl
mov
mov
mov
ret
dec
clc
pop
pmaxsw
je
outsb
cld
stos
subl
adc
test
je
push
or
gs
aam
add
mov
jns
icebp
inc
mov
sub
sbbb
repz
test
rorl
lock
lock
mov
cmpsl
jno
mov
push
xor
pop
faddl
roll
test
cmpsl
jnp
mov
jp
sbb
sbb
ss
out
sbbl
and
xorb
xlat
mov
pushf
mov
mov
sbb
imul
jns
test
push
push
lar
in
fisubrs
jmp
subb
mov
repnz
cwtl
mov
push
stc
jbe
xor
lea
jle
int3
insb
adc
ds
popa
mov
movsl
jmp
dec
or
std
mov
sub
popfw
stos
jge
fmull
repnz
push
push
lds
jb
ds
push
int
mov
inc
mov
test
jmp
and
adc
call
pop
mov
mov
sub
addl
and
inc
inc
xchg
dec
out
adc
sbbb
insl
in
in
mov
cmp
fimuls
nop
addb
callw
jmp
xor
xor
ret
stos
xor
sub
popa
insl
mov
cmpsl
popa
out
je
mov
mov
mov
jp
mov
add
jnp
hlt
jg
aas
sbb
pop
popf
pushf
push
int
mov
stos
jle
shlb
testb
and
xchg
test
ss
mov
xor
push
push
or
xchg
jae
iret
aad
subb
jb
mov
mov
jge
test
lahf
jg
inc
sahf
mov
setne
mov
or
and
cltd
and
push
adc
clc
sub
sbb
aaa
xchg
stc
in
push
adc
pop
mov
aam
mov
outsl
jl
mov
call
sbb
rclb
xchg
das
add
push
and
push
out
lcall
jp
js
push
loop
sub
movsb
jae
fldcw
mov
push
pop
ret
rcll
dec
pop
push
mov
daa
movsb
adc
xchg
ret
mov
test
xchg
test
adc
adc
scas
mov
jp
jp
mov
jl
mov
mov
ss
dec
js
push
push
insb
pop
inc
push
or
cld
fisttps
cmp
js
mov
or
fidivrs
mov
addr16
adc
inc
cmp
mov
clc
and
lods
bound
dec
cli
push
leave
out
js
dec
inc
or
aad
pop
inc
mov
xlat
cmp
mov
fidivs
call
dec
and
xchg
into
test
hlt
mov
xor
xor
pushf
in
inc
pop
sarb
lock
pop
and
addr16
push
inc
xchg
popf
sub
stos
adc
test
pop
faddl
inc
mov
xchg
add
xchg
cmp
fcmovnbe
into
mov
sbb
out
push
int
and
cmp
jle
pop
lods
adc
shrl
push
roll
or
jmp
push
cwtl
xchg
and
sub
popf
cmp
add
aam
xchg
jb
rcrl
into
adc
jns
rorb
cmp
aas
call
je
bound
or
int3
sbb
mov
or
jbe
mov
test
pop
push
sbb
loopne
push
inc
das
pop
int
jnp
xor
push
sbb
gs
xor
insl
dec
cmp
inc
fsubp
jg
sbb
inc
aas
divb
std
arpl
out
sub
fisubs
jno
mov
cmp
xchg
or
dec
cmp
in
fisttpll
mov
pop
lahf
loopne
les
adc
cmp
lcall
push
icebp
or
fs
loopne
cwtl
xchg
mov
or
test
pop
and
iret
imul
sbb
add
and
movsl
jo
xor
js
inc
and
or
or
out
push
push
jnp
add
add
test
add
xchg
aam
iret
cld
cmc
ljmp
popf
jmp
adc
mov
arpl
push
push
push
lret
ret
cld
mov
xchg
pop
fidivrl
hlt
jle
cmp
add
dec
adc
mov
xor
xor
and
scas
add
sbb
aam
cltd
inc
daa
int
and
cmp
or
adc
int
xbegin
addr16
pushf
ret
enter
xchg
sub
test
or
mov
mov
fisubrs
add
hlt
add
aam
hlt
fiaddl
or
mov
addr16
je
fs
scas
inc
or
cmp
testb
adc
cmp
imul
pop
js
cmpsb
mov
outsb
inc
sub
and
jns
xchg
rcll
push
or
sarb
ja
in
add
jo
push
lcall
cwtl
loope
xchg
clc
fwait
xor
cli
pop
jl
imul
pop
add
jmp
int
mov
loop
cmp
xor
bnd
lods
iret
mov
jmp
xchg
lods
cmc
inc
lods
in
outsb
and
mov
or
in
mov
xor
fisttps
scas
xor
sbb
ljmp
addr16
inc
mov
jg
mov
in
lods
mov
movsl
and
out
out
jl
xor
cs
lret
pop
cld
sub
pop
sarb
int3
ficomps
int
cltd
outsb
jle
fnstcw
mov
aad
gs
es
das
jmp
lret
mov
in
out
test
mov
cmp
orl
mov
ljmp
pusha
push
outsb
xchg
cmp
ljmp
jp
sbb
mov
cwtl
xor
in
adc
addb
scas
test
int3
inc
xchg
aad
cmp
loopne
es
inc
je
fs
jge
imul
mov
push
mov
xchg
outsl
cmp
jmp
push
sub
xor
out
movsb
push
pop
clc
xchg
pop
inc
or
sub
lods
cwtl
ffree
insb
jmp
mov
xlat
lret
fwait
call
push
cmp
stc
popa
lods
loopne
xchg
mov
repnz
cli
test
scas
jbe
test
xchg
xchg
or
dec
mov
sub
add
daa
mov
shlb
jo
hlt
scas
fs
push
or
pop
cmpsb
out
mov
test
jmp
mov
or
mov
jg
sub
jmp
icebp
cmp
jge
test
and
dec
pop
cs
out
push
pushf
shl
mov
push
jno
lahf
mov
scas
dec
rcl
mov
and
cmpsb
ja
fsts
mov
lock
xor
or
outsb
std
mov
clc
lret
insb
inc
adc
int
sbb
or
popa
loop
jns
loope
rorb
fs
xchg
bnd
add
lds
inc
test
pushf
lods
ljmp
sub
xchg
stc
pop
dec
xchg
mov
xlat
fs
xchg
fsubrl
add
xor
adc
mov
pusha
xchg
mov
xchg
add
imul
ja
jecxz
into
nop
outsl
mov
sbb
and
adc
lods
fidivrs
inc
inc
outsb
and
cld
lcall
or
xlat
shll
xor
dec
outsb
fs
mov
cmp
inc
popf
fadd
enter
mov
sarl
in
dec
fucom
popf
int3
and
lods
pop
mov
loop
jns
jo
mov
pushf
out
out
and
and
pop
lret
test
mov
dec
pop
test
push
cld
sbb
lods
ds
movsl
mov
in
or
inc
push
jcxz
xor
xor
jbe
mov
scas
mov
mov
xor
jb
inc
cmp
xlat
sbbb
adc
push
jmp
nop
xchg
push
int
jmp
sbb
in
mov
lret
mov
push
mov
addb
pop
sahf
xlat
push
bound
fadds
adc
jns
addr16
pop
clc
aaa
dec
faddl
stos
sbb
push
ljmp
popa
push
or
pop
rolb
std
cli
adc
push
sub
loope
or
cmp
cmc
pushf
mov
int3
loopne
lea
push
adc
xchg
and
or
cmp
lds
add
cmpsb
push
popf
rol
mov
scas
push
push
pop
mov
pop
push
ja
inc
scas
shrb
mov
and
orl
and
fidivl
cmp
xchg
xor
and
hlt
xorb
add
and
pop
dec
orl
pop
pusha
sti
mov
test
test
leave
aad
jmp
cmc
cmp
inc
push
jne
add
and
adc
into
xor
bnd
sbb
fwait
sub
push
push
mov
and
dec
in
sub
imul
mov
fldenv
mov
test
jne
hlt
shl
dec
aam
push
sbb
add
sbb
sbb
shl
pop
ss
cli
pop
adc
shrl
dec
out
cmpb
fwait
cmp
push
pop
into
in
push
lods
push
pop
xchg
loop
daa
push
ja
mov
test
cmp
inc
mov
add
and
cmpl
pop
mov
mov
mov
xchg
mov
andl
fdivr
cmp
stc
inc
hlt
cmpsb
push
or
jbe
pop
mov
xchg
insb
mulb
lods
fwait
lods
leave
jno
imul
mov
pop
xor
insl
pop
sub
pop
xlat
dec
adc
push
mov
jmp
jb
sub
push
nop
pop
out
addr16
mov
movsl
leave
jl
enter
mov
fisttpl
sarb
cmpsl
adc
pushl
loope
popw
addr16
inc
fxch
fisubl
add
sub
mov
add
jl
repz
mov
lret
ret
pop
mov
fldenv
jecxz
dec
divl
xchg
cs
push
popf
addr16
adc
ss
test
or
lds
iret
mov
imull
lcall
add
iret
sbb
mov
lret
adc
pop
add
jmp
movsl
adc
or
hlt
fisttpll
out
adc
incb
aas
or
incl
fisubs
mov
dec
push
aas
cmc
add
mov
cmp
sub
jae
sub
and
push
scas
push
push
cmpsl
xchg
popf
mov
push
adcl
les
add
ja
dec
xchg
push
ret
sbb
iret
pop
mov
mov
out
xchg
test
aad
xchg
mov
int
pop
aad
xchg
sbb
pushf
mov
pop
ss
rdrand
addr16
loope
cmp
hlt
cmp
xlat
data16
stos
std
lods
adc
jbe
mov
sahf
or
jmp
push
psrld
push
mov
cli
lods
mov
rcr
jae
dec
cmpsl
xchg
cmc
stc
orb
call
in
cld
stos
sahf
ljmp
mov
xchg
mov
outsl
cld
stc
push
push
int
xor
int3
push
sbb
jp
pop
push
xor
lods
pop
and
mov
sti
mov
sbb
fs
xchg
in
cmp
mov
adc
fsub
xorl
mov
aaa
jno
mov
jp
adc
cmpsl
push
push
and
cmpsl
cltd
insb
shlb
cmp
inc
sbb
out
adc
pop
mov
imul
or
pop
mov
push
and
mov
shlb
sbbb
cli
in
ss
and
mov
push
push
and
lods
lock
lds
rcll
pop
push
test
hlt
sbb
sbb
mov
push
jb
add
xchg
pop
push
adc
frstor
or
xchg
jns
or
filds
mov
sarl
nop
pop
outsl
cltd
popf
lods
pop
mov
or
hlt
xchg
pop
addr16
adc
jo
dec
lds
out
stos
jle
ds
sub
scas
stc
mov
loope
mov
xchg
cmp
ror
xlat
mov
mov
xchg
clc
fbld
and
inc
mov
cltd
test
shll
xor
xchg
xor
add
jecxz
ja
aam
push
or
xchg
mov
out
dec
xor
xchg
cmp
add
adc
sub
clc
xchg
mov
sub
adc
fldt
or
xor
pop
push
xor
in
xchg
out
jp
les
loopne
gs
push
dec
ret
cmc
jae
xor
mov
popf
and
sub
aaa
jge
push
scas
xor
std
push
mov
out
mov
adc
testb
pop
filds
movsl
fbld
jecxz
repz
stos
and
add
ss
dec
cwtl
add
aam
nop
addr16
sbb
repz
sbb
es
or
xlat
std
inc
dec
push
mov
fwait
jae
lea
loopne
mov
cli
outsl
test
test
push
js
mov
stos
xlat
push
add
jmp
push
xchg
cld
jne
gs
int
xchg
roll
fsubrl
push
xor
inc
in
ficoml
jge
in
fcoms
sbb
aam
or
sbb
and
fs
mov
add
jmp
aaa
mov
xchg
ss
mov
pop
arpl
movsb
test
pop
sahf
add
pop
xchg
cmp
js
and
fsubrs
sbb
loope
das
pop
fisubrs
adcb
fcoms
push
data16
das
jae
ljmp
pop
cmp
addr16
xchg
inc
enter
out
push
push
arpl
ss
js
xchg
adc
xchg
cmp
cltd
fbld
inc
mov
and
dec
inc
sub
and
add
dec
push
push
sar
xchg
es
pop
pop
enter
jl
cmp
outsb
aas
bound
jge
mov
push
outsb
xchg
dec
aas
cmp
test
fbld
sub
or
pop
xor
fcoms
mov
jmp
xlat
sbb
xchg
cltd
clc
lcall
add
xchg
gs
sub
jne
xlat
out
sub
sbb
test
push
dec
outsb
mov
mov
jns
arpl
dec
aaa
aad
pop
jg
cmp
stos
xchg
out
jns
outsb
mov
test
mov
or
rclb
sub
cmpsl
mov
insb
daa
or
cmp
cmp
mov
in
and
pop
out
xor
lods
and
xchg
pop
int
adc
pop
push
xor
insb
lds
pminub
pop
push
rcl
push
rorl
cmpb
lock
jns
xlat
push
inc
lea
pop
push
lds
sub
dec
inc
popl
imul
add
scas
out
outsb
sar
sub
fisubl
mov
shrl
push
inc
cmp
xor
cld
dec
inc
dec
jmp
fsubl
push
or
mov
test
cli
mov
shrb
insb
mov
mov
popf
pop
jge
push
push
adc
hlt
sbb
lcall
dec
mov
jno
cld
or
jb
leave
and
jno
lret
inc
insl
mov
fmuls
pop
test
test
push
sarl
dec
roll
cmpsl
nop
xor
inc
out
gs
lahf
push
or
mov
jnp
test
cmc
shlb
arpl
in
or
dec
test
sub
fcmovnbe
cmpsb
inc
testl
cmp
call
out
fmul
xchg
jno
shlb
ret
mov
jmp
jl
into
gs
and
inc
xchg
mov
mov
add
bound
or
mov
cmp
mov
xor
sahf
jne
arpl
sbb
mov
xchg
or
daa
inc
cmc
adc
pushl
mov
jb
push
mov
xchg
sub
cmpl
mov
aaa
mov
iret
in
xchg
push
add
movsl
js
jb
lock
or
testb
xor
xchg
mov
loopne
inc
jnp
shr
push
mov
adc
ret
push
mov
push
fcompl
xor
dec
imul
or
inc
in
sbb
cmp
repnz
xor
xchg
xorl
adc
mov
icebp
sbb
mov
and
mov
xor
adc
ret
std
cs
mov
fisubs
dec
cmp
ret
pop
dec
jecxz
popf
in
test
dec
push
and
stos
es
outsb
fmull
and
les
fsubrp
mov
xchg
push
fs
das
push
fnstenv
xor
shrb
rcr
movsb
mov
inc
subl
adc
inc
jno
mov
jne
stc
jmp
xrelease
mov
scas
push
jecxz
push
aaa
jg
fldt
cli
mov
imulb
adc
das
out
dec
hlt
or
aad
push
cmp
nop
mov
int3
cmp
insl
fcomps
inc
jne
mov
mov
cmp
stc
hlt
mov
push
push
icebp
dec
outsl
sub
cld
int
dec
scas
mov
push
adc
mov
notb
inc
lcall
mov
sahf
jbe
shrl
adc
dec
outsl
jns
pop
hlt
aad
loope
mov
cwtl
addb
cli
hlt
lcall
aas
xchg
and
mov
shlb
inc
movsl
mov
mov
setne
stc
inc
lcall
mov
dec
das
rolb
jle
adc
jns
in
adc
cld
xor
push
and
adc
push
test
add
popf
jne
movsb
idivb
mov
jmp
add
int3
cmp
sbb
mov
jns
shrb
rcr
jno
adc
sub
jae
xor
mov
aas
loop
pusha
pop
and
out
out
pop
cmpsl
cmp
fwait
add
push
aad
stos
and
inc
xchg
out
jle
adc
inc
adc
je
cld
jecxz
pop
adc
cmovg
dec
pop
inc
push
sub
hlt
jae
adc
dec
sub
rol
and
dec
adc
sub
xor
rcrb
jp
and
lret
jnp
leave
mov
pop
push
mov
fsubrs
xchg
cmpsb
xchg
push
int3
pop
add
roll
rolb
pop
lea
or
pop
inc
lods
adc
aas
ja
jge
jecxz
xchg
out
imulb
ljmp
in
push
cmc
test
es
leave
mov
xchg
mov
cmpsl
loopne
movsl
enter
adc
add
cmpsb
dec
daa
jl
sbb
mov
xorl
stc
and
sub
cmp
mov
dec
mov
fbstp
xor
lock
mov
data16
subps
lret
adc
ret
dec
push
dec
xchg
imul
rcll
push
push
push
inc
add
push
rcll
inc
pushf
xchg
daa
jbe
cmp
lods
mov
imul
int3
dec
mov
jp
movl
lret
cmp
dec
inc
mov
aaa
push
add
rcll
xchg
lods
rol
xchg
xchg
pop
xchg
sub
cmp
cmp
jle
mov
dec
mov
pop
insl
repnz
iret
mov
daa
push
leave
adc
sbb
mov
jbe
es
les
pop
js
addb
out
aam
push
insb
in
or
fwait
mov
andl
imul
cmp
mov
cmp
mov
push
sti
in
iret
push
js
repz
fsubs
je
sbb
repnz
jmp
pop
xor
add
out
add
dec
cltd
adc
js
repz
lock
call
xchg
nop
xchg
jne
lret
jp
jne
std
shr
in
pushf
mov
inc
aaa
bound
push
or
cwtl
pop
cmc
push
andl
test
dec
stc
lods
das
or
push
shrl
lcall
push
and
addb
and
xor
dec
cli
mov
add
stos
dec
dec
mov
popf
ret
mov
rcll
popf
imul
int
push
jle
lret
push
mov
jecxz
scas
sbb
fsubp
sub
or
jg
shlb
cs
dec
into
jecxz
or
data16
inc
sbb
cmc
mov
mov
mov
nop
sbb
or
cwtl
mov
aam
popf
and
pop
imul
or
xchg
mov
or
adc
lods
inc
add
sub
sbb
dec
adc
cmp
sub
dec
aaa
jns
rcrl
jmp
fwait
dec
mov
jmp
mov
inc
mov
jnp
mov
cmp
inc
pusha
mov
cli
enter
hlt
rcrl
jmp
adc
pop
clc
test
jmp
out
out
mov
cmpsl
xchg
out
inc
in
or
mov
pmaxub
fnsave
fwait
pushf
outsl
lret
inc
mov
das
add
pushf
pop
lods
or
test
cmpsb
mov
les
pop
fists
mov
pushf
stos
mov
jmp
push
xlat
mov
enter
shr
and
push
mov
jnp
rclb
pop
in
xor
or
and
jnp
cli
jle
cwtl
rol
dec
mov
outsl
cltd
and
pop
push
mov
fiaddl
ret
mov
imul
icebp
inc
pop
ret
hlt
adc
xchg
ss
nop
mov
or
xor
into
fnsave
pop
lcall
imul
in
push
jge
lahf
mov
xlat
sbb
dec
mov
xor
mov
cwtl
inc
ds
cmp
push
jno
lds
pusha
cwtl
movsl
jno
xor
loope
cmc
fildll
push
inc
mov
xchg
bound
xchg
mov
xchg
push
dec
mov
add
add
jb
das
and
fildl
inc
out
repnz
scas
mov
pop
add
mov
sarb
and
data16
adc
pop
sub
sahf
jno
push
xchg
in
insl
push
cltd
pop
aam
out
lods
aad
in
jg
jecxz
pop
mov
xchg
push
jmp
pop
mov
xlat
and
dec
fdivr
loope
inc
pushf
sbb
xchg
lahf
inc
cmpsl
jns
roll
in
sbb
stos
sbb
cmpsb
or
push
in
push
mov
jne
shll
scas
jmp
mov
dec
jmp
dec
push
add
int
and
sahf
or
rcrl
sub
aad
ret
add
add
les
adc
cmp
mov
inc
pop
sbb
add
insb
leave
in
add
jno
loop
pop
das
jnp
xchg
sub
das
jecxz
jne
aaa
fisubl
inc
call
xchg
stc
xlat
sbb
pop
in
mov
jmp
cmp
dec
jns,pt
add
fxch
jl
int3
dec
outsl
stc
xchg
fidivrs
inc
mov
lods
pop
ja
rcr
aaa
sbb
inc
mov
popa
aaa
or
dec
inc
push
icebp
call
xchg
rcrb
arpl
ret
fsubrl
loopne
test
cmpsb
imul
in
mov
pop
adc
cmpsb
lcall
sbb
sub
sbb
mov
mov
pop
sbb
pop
pop
sbb
inc
repnz
mov
pop
lock
lods
xor
movsl
cmp
clc
in
mov
cmpsl
fidivs
mov
or
mov
shll
andl
push
push
and
cmpsb
mov
cmp
push
test
fwait
sbb
jg
mov
rcl
repz
jns
frstor
add
dec
scas
cmp
icebp
xor
cmpsl
sub
das
mov
jo
lret
lcall
fisubrl
movsb
shlb
add
rcrb
mov
push
lret
push
call
insl
mov
pop
fmuls
pop
outsl
nop
mov
push
daa
test
jecxz
stos
xchg
sbb
dec
cmp
mov
cltd
push
dec
movsb
in
sub
or
outsl
scas
push
cmpsl
insb
int3
cmp
int3
and
mov
add
mov
mov
cwtl
mov
sarl
aaa
mov
fscale
xchg
notl
push
andl
flds
pop
shrb
ficoml
push
test
sbb
test
mov
lahf
cmc
xchg
xor
into
in
in
outsl
aaa
aad
mov
cwtl
aaa
jne
in
inc
add
sub
mov
cmp
in
mov
jle
mull
jl,pn
inc
data16
mov
pop
fs
out
hlt
sbb
jbe
cmp
mov
sahf
jb
cmp
outsl
in
cmpsl
leave
imul
jle
test
sub
pusha
mov
inc
xlat
sti
cmpl
push
and
enter
lods
jns
push
setnp
dec
imul
iret
out
popa
push
mov
ret
cmpsl
jmp
sub
adc
sbb
scas
mov
ret
test
jo
jnp
jnp
and
lea
add
adc
cwtl
pop
pop
push
out
cli
xor
test
iret
cltd
sub
jmp
mov
in
mov
jbe
int3
lds
fiadds
xor
sahf
mov
add
movaps
and
mov
addr16
in
xor
js
les
jo
lret
in
filds
cmpb
push
push
pop
sbb
cmp
js
popa
mov
sub
push
lock
lods
push
out
imul
xor
sahf
pop
xor
adc
jne
aaa
loope
outsb
inc
sub
pop
or
adc
sbb
roll
push
pop
ljmp
ror
arpl
inc
loopne
call
or
icebp
inc
dec
js
mov
push
and
mov
sub
test
mov
movsl
xchg
dec
add
sbb
pop
loop
sbb
cs
aaa
idivl
sbb
push
pop
pop
js
cmp
popa
clc
push
or
ret
dec
push
iret
sar
popf
inc
push
push
jae
imulb
jnp
mov
push
push
dec
jecxz
call
dec
and
in
lods
add
xchg
mul
out
movsb
cmp
fbstp
cmp
jne
mov
test
addr16
push
sbb
pop
rep
scas
jo
fwait
arpl
repz
mov
dec
inc
xchg
mov
aas
jns
lods
cmpsl
sbb
clc
stc
stc
shll
push
fstl
xor
adc
out
cwtl
xchg
lds
jge
push
aaa
pushf
int
cmp
jne
leave
lcall
push
jmp
insl
gs
mov
jb
fldcw
xchg
jg
sbb
in
sbb
sub
in
mov
test
push
ds
mov
mov
cmp
repz
pusha
xor
mov
in
cmp
pusha
or
dec
push
sub
addb
pop
jle
mov
popf
xor
ret
comiss
out
push
jl
mov
push
ret
call
mov
repz
or
inc
inc
jae
mov
push
cmp
adcl
ds
mov
lods
aas
dec
iret
or
cmpsb
mov
mov
xchg
shll
shlb
jo
mov
pop
and
inc
and
fwait
dec
mov
outsb
cmpsl
and
xchg
aam
clc
xchg
int
ja
mov
and
cmp
mov
arpl
pop
push
mov
aad
or
clc
les
cmpsb
cmp
push
fsts
mov
mov
jno
pushf
stc
fmul
xchg
sarb
inc
mov
pop
inc
daa
std
call
cmc
aas
loop
push
sub
or
push
faddp
add
es
push
inc
xlat
mov
mov
mov
divb
mov
or
test
cmpsl
cmp
add
incl
pop
shl
iret
adc
inc
xor
sbb
or
aas
testb
sbb
add
inc
sti
andb
jb
mov
sbb
les
ret
in
rcll
inc
pop
sarl
push
imul
ja
cmpsl
dec
loopne
ss
jp
push
xchg
mov
cwtl
jns
jle
lahf
jg
dec
push
cmp
or
rolb
fptan
jbe
mov
pop
add
movsl
fistps
movsl
cltd
pop
fwait
add
cld
push
xor
mov
sbb
mov
test
push
movsb
movsl
cmc
mov
jb
call
shlb
rcrb
mov
push
and
pop
fcomps
ljmp
push
sub
fildll
nop
xchg
mov
jp
xchg
enter
cltd
jle
cmp
sti
sbb
into
int3
jmp
test
xorb
mov
stos
sbb
int
inc
outsb
mov
pusha
in
cmp
aam
out
sbb
dec
push
aad
fdivs
mov
jno
mov
and
stos
mov
imul
int
cmp
addr16
pop
or
ret
xchg
mov
adcl
movsb
push
and
scas
or
inc
dec
add
and
jbe
xchg
or
or
mov
clc
mov
fcmovnb
pop
or
push
mov
imul
xor
pusha
mov
adc
sti
fistpll
mov
jns
scas
cltd
mov
clc
inc
sbbl
mov
dec
jns
adc
mov
push
insl
lock
mov
and
or
ds
cmp
push
push
dec
repnz
inc
test
add
mov
xchg
subb
cmc
mov
scas
push
sbb
insb
push
xor
repnz
bound
mov
adc
adc
cld
dec
and
push
add
imul
sarl
dec
and
jb
mov
je
sbb
cmc
repz
push
sub
sub
add
dec
ja
insb
inc
xor
add
push
mov
out
jbe
lods
xor
insb
xchg
pop
aam
sub
out
mov
lcall
sub
mov
adc
mov
push
test
xor
or
es
mov
xor
xchg
lods
lea
jge
cmpsb
add
in
popa
ret
aaa
enter
xor
fdivl
jp
mov
jl
xor
xor
pop
add
mov
inc
jns
mov
ret
mov
lret
or
jns
ss
in
pop
test
jmp
push
jo
repz
incb
roll
pop
add
mov
ficompl
testb
add
xor
and
gs
jno
cltd
icebp
dec
ds
and
rclb
add
mov
mov
enter
jmp
and
fisubl
addr16
sbb
lret
cltd
or
mov
scas
inc
dec
in
sbb
sti
jno
sub
fists
mov
add
lea
jno
inc
pop
or
test
push
sub
sub
cwtl
lret
stc
mov
inc
add
aam
aaa
scas
sbb
mov
mov
imul
bound
shll
xlat
fsubrl
fwait
mov
mov
int3
push
dec
in
icebp
push
jae
inc
or
rclb
xor
loop
jbe
out
or
mov
test
dec
push
xchg
rcl
jle
lea
hlt
push
and
popa
mov
repnz
rcll
inc
cmpsb
enter
es
hlt
and
arpl
cmp
inc
lds
adc
jo
mov
mov
mov
stos
jecxz
stos
fwait
add
negb
enter
mov
repnz
daa
out
pop
ljmp
cmp
and
lahf
mov
sub
std
sbb
stos
jbe
sub
rorb
and
out
rorb
inc
mov
imul
push
iret
mov
inc
aas
pop
dec
out
inc
xor
add
gs
aam
in
and
outsl
push
pop
mov
sub
aaa
je
test
clc
cmpsl
adc
cld
test
add
insl
fimuls
test
mul
in
xchg
xor
jmp
stos
mov
mov
ficoml
loope
push
fwait
out
cwtl
or
jle
and
movsl
pop
pop
push
or
pop
aaa
imul
fidivrs
sub
push
inc
loope
in
mov
and
shl
popf
xlat
dec
hlt
loope
sub
and
mov
in
out
cmc
adc
sbb
xor
jecxz
xor
out
std
or
out
jecxz
jge
sahf
imul
cs
cmpsl
cmp
xor
aas
sbb
dec
inc
mov
mov
jns
fimuls
aad
xchg
inc
cs
mov
setnp
repnz
mov
or
mov
or
adcl
xor
lret
add
add
ja
add
test
sub
mov
jg
fcom
dec
xor
xor
mov
pop
inc
mov
push
sbbb
out
add
xchg
mov
lahf
sub
stc
push
fisubs
or
std
cs
mov
push
repnz
std
sub
jae
frstor
lret
xchg
pusha
adc
xchg
xor
rcrl
testb
adc
leave
std
add
dec
fs
adc
mov
ret
mov
adc
shrb
das
push
dec
pop
xchg
add
imul
fidivrl
mov
adc
cmp
das
jb
andl
or
mov
or
xor
rcll
leave
xor
orl
lds
inc
bnd
ss
iret
add
lcall
test
xor
jae
adc
dec
push
push
sbb
loopne
rol
xchg
cmc
lret
loop
inc
ss
xor
xor
xor
popf
pop
mov
push
mov
pop
inc
xchg
cs
jb
sub
es
or
ret
dec
and
xchg
mov
mov
mov
rorl
mov
je
lret
or
int
repz
xor
test
insl
adc
xor
and
lcall
lret
inc
lods
pushf
or
or
in
jl
jge
pop
pop
jle
mov
sbb
fcompp
test
add
dec
inc
fbstp
arpl
mov
loopne
mov
mov
ret
pusha
cmpsb
xchg
mov
cltd
or
pop
outsb
jle
sbb
jl
mov
jns
push
cld
sti
fisubrl
mov
adc
and
dec
mov
fisttpl
push
das
or
enter
push
or
adc
dec
mov
std
xor
jnp
mov
cs
and
incb
inc
fisubrl
mov
lret
cmc
mov
sbbb
cmp
ljmp
jne
jnp
sahf
pop
js
pop
loop
cmpsl
mov
mov
cli
test
dec
popa
inc
dec
mov
movsb
cmp
shl
dec
shll
dec
pusha
outsb
xchg
shlb
push
aaa
mov
lods
xor
dec
and
pop
repnz
std
pop
mov
subb
fisttps
shrl
clc
fdivr
aas
mov
or
icebp
adc
rcll
stos
leave
mov
push
pop
pop
inc
imul
fildl
mov
xchg
pop
sbb
cmc
sbb
pop
push
movsb
sub
das
sub
mov
xchg
or
rorb
or
in
loop
lock
add
mov
aas
iret
add
lret
adc
pop
stos
mov
add
push
shl
xchg
inc
aaa
xor
cmp
frstor
adc
out
inc
ds
push
xor
bound
push
sti
xor
or
rolb
sub
push
and
or
xchg
jne
xchg
and
cltd
sbb
movsl
push
mov
popf
ja
or
or
adc
pop
sbb
xor
popf
lret
xchg
xor
mov
fnstsw
cmp
repz
in
test
adc
xchg
pop
ss
or
hlt
shll
xchg
mov
xchg
jb
in
int
lcall
lret
mov
add
fwait
adcl
dec
xchg
shll
js
dec
pop
add
push
push
roll
ljmp
mov
cmp
js
dec
mov
inc
sub
add
add
hlt
adc
xor
leave
mov
inc
sub
insl
stc
push
scas
pop
jmp
push
je
imul
jae
divb
sbb
and
adc
fdiv
sarl
int3
cwtl
xchg
enter
sub
mov
sub
lcall
push
insb
and
mov
setae
mov
lock
lods
or
inc
sarl
ret
int
mov
fdivrs
jl
mov
rolb
and
cmp
fisubl
dec
sti
pop
lret
enter
out
mov
mov
mov
movq
mov
pop
dec
aaa
shrl
stos
fmul
fsubs
mov
push
mov
out
jg
hlt
dec
int
leave
fcomp
sub
imul
jl
or
inc
add
push
aam
or
rorb
leave
push
cmpsb
adc
sbb
jae
sub
jecxz
cmpsb
jg
xor
aam
inc
popa
hlt
int3
insb
inc
je
jnp
lods
xor
dec
mov
xchg
and
repz
stos
sub
or
dec
dec
mov
outsb
add
sbb
pop
das
mov
mov
mov
aas
pop
hlt
mov
imul
adc
mov
inc
fisttps
mov
pop
sub
jecxz
dec
stos
push
pop
inc
enter
jb
cmp
push
push
mov
cmp
inc
mul
cltd
test
out
cmp
dec
cmpsb
mov
mov
inc
adc
push
mov
test
xlat
std
sbb
mov
add
fcmovb
daa
addr16
cmp
add
cmp
shll
fisubs
xchg
xchg
aaa
push
rolb
enter
jbe
inc
fwait
imul
movl
aas
jnp
cmp
nop
call
out
or
sbb
cmpsb
inc
inc
popf
shrb
xlat
cld
mov
das
and
outsb
inc
into
addr16
loop
int3
rcpps
aad
imul
addr16
cmp
std
icebp
pop
adc
idivl
push
repnz
adc
test
xor
sbb
fidivl
ja
mov
jbe
mov
sub
jo
xor
or
loop
sbb
pop
pop
aad
push
push
loope
imul
dec
arpl
add
icebp
mov
xor
cwtl
das
icebp
lea
xchg
ss
movsl
fnstcw
inc
dec
pop
adc
inc
cmpsb
mov
pusha
inc
cwtl
loop
push
jno
hlt
test
aam
xlat
outsb
jl
mov
js
and
js
xchg
adc
sbb
das
jne
mov
repnz
adc
test
add
mov
or
inc
je
test
cmp
push
enter
es
int
or
and
inc
ret
mov
push
xorb
lret
and
push
jb
and
sahf
cmp
clc
ja
das
hlt
pop
int
stos
xchg
sbb
xlat
sbb
mov
or
push
aam
xchg
adc
sub
pop
xor
popf
iret
pop
mov
imul
psraw
pop
or
int3
fsts
cmp
lods
inc
sbb
push
lea
add
lods
cmp
mov
enter
shl
insl
adc
or
jae
jno
repnz
cmc
mov
inc
mov
mov
inc
fistpl
cmc
cmpsl
movsl
jae
into
test
leave
sti
xchg
mov
xchg
scas
popa
push
xchg
and
and
inc
cmp
inc
aad
jae
imul
ljmp
jo
push
rcll
lods
adc
push
mov
inc
pusha
or
jae
mov
cmpsl
cwtl
mov
fwait
sbb
mov
mov
in
xor
popa
orb
leave
loope
xchg
jns
bound
dec
xor
xchg
xchg
iret
sub
int3
jmp
xor
in
adc
mov
inc
adc
dec
int3
xor
xchg
repz
jnp
jae
pop
sbb
mov
lds
ja
jecxz
insl
mov
aaa
dec
std
inc
add
test
mov
filds
mov
daa
push
dec
pop
fisubrs
cmp
xor
test
jnp
fisttps
rcr
and
les
nop
jg
cltd
loopne
lret
stc
leave
push
adc
jecxz
or
pop
fisubrl
mov
push
stos
aas
dec
xlat
inc
mov
mov
ds
stc
psrlq
hlt
jl
jbe
mov
pop
je
mov
rcll
adc
pop
sub
inc
lock
xor
push
dec
sub
and
testb
sub
subl
repz
pop
push
jmp
enter
cltd
adcb
cwtl
fsubp
sti
xchg
jo
jo
pop
fnsave
jns
dec
adc
aam
into
loope
arpl
cmc
xchg
mov
pxor
jnp
dec
or
pop
out
int3
sarb
enter
xchg
rcrl
jbe
push
jnp
pop
push
lods
pop
mov
xor
arpl
sub
ljmp
inc
push
nop
push
jmp
mov
mov
cmp
push
ss
xorb
and
mov
fstpl
imul
jns
jo
cs
scas
fisubl
fsubl
mov
adc
sub
xchg
divb
imul
sbb
loop
xchg
js
ja
scas
imul
shl
lock
imul
fwait
inc
adc
mov
mov
xor
fdivs
push
lcall
or
sahf
sub
int
fnsave
sbb
shlb
jmp
jb
in
mov
and
xor
ds
cmp
ljmp
enter
std
mov
cmovb
out
subb
fs
shll
das
mov
mov
dec
divl
dec
sahf
dec
pop
int
xor
das
jae
mov
fisubrl
dec
pop
nop
outsl
cmpsl
push
xor
cmpsb
lds
mov
gs
cmp
add
push
pop
icebp
sbb
cmp
scas
sbb
pop
dec
adcb
imul
sbb
sbb
jns
push
aam
inc
test
dec
loop
jae
in
xchg
and
adc
xchg
cmpsb
lods
mov
push
sbb
pop
push
adcl
push
cmpb
jbe
repz
fwait
sub
loopne
cmc
fisubl
lea
pop
inc
ss
loop
jle
dec
cli
dec
ss
lds
xchg
shrb
pop
sub
dec
fs
sbb
dec
and
or
jnp
fisttps
mov
fdivrl
iret
sbb
cltd
xchg
data16
sbb
loope
stos
pop
push
pop
gs
or
fistpl
pop
adc
pop
movsl
sub
push
shll
adc
xchg
movsb
dec
xor
je
jle
and
mov
test
cltd
sbb
test
lods
psrlq
jg
or
push
mov
lret
dec
imul
pop
scas
fnsave
pop
inc
pop
pop
fbld
aam
adc
mov
pop
mov
xchg
and
test
and
cmpsl
adcb
sub
jb
sub
shl
and
mov
push
ret
ds
aaa
and
rcrl
push
cmpsl
adc
pop
adc
inc
push
xor
or
adc
jge
and
ror
sbb
or
mov
or
lret
xor
test
xor
sub
cmpsl
pusha
into
pop
es
scas
xchg
mov
jns
out
pushf
inc
jbe
xchg
inc
pop
popf
push
push
xchg
pop
add
sub
pop
jne
add
xor
jmp
data16
xchg
stos
imul
adc
add
enter
mov
dec
mov
addr16
int3
and
pop
mov
mov
sbb
cmc
push
fs
icebp
push
imul
dec
jbe
sbb
in
cmp
add
cmp
sub
fisttps
pop
mov
dec
inc
stos
iret
mov
iret
xor
xchg
js
lods
in
cmp
sbb
in
mov
cmpsb
mov
ret
inc
fsubrs
mov
pushf
push
stos
in
ljmp
ja
sbb
adc
lahf
sahf
jmp
and
lea
xchg
loopne
fistps
add
stos
cs
jecxz
mov
out
sbb
addr16
out
enter
add
cmp
mov
and
lods
scas
incb
aad
sbb
pushf
iret
xchg
dec
inc
pop
add
sbb
jbe
jp
scas
aad
ret
sbb
and
jne
push
addr16
stc
cli
pop
ret
or
cmp
sbb
aas
add
mov
push
sub
jle
daa
mov
mov
sub
jg
sub
out
xlat
das
sarl
sub
dec
xchg
xchg
xchg
clc
adc
repz
xchg
jmp
or
lcall
scas
dec
popf
push
aam
xchg
dec
cs
pop
and
mov
or
jecxz
inc
call
je
fsubr
xchg
inc
sarb
push
cmp
push
lahf
xor
pop
cmpsl
mov
sbb
pop
mov
pop
insb
andl
mov
mov
arpl
icebp
add
dec
and
xor
push
or
cmp
js
jmp
fsubs
or
movsl
mov
pop
dec
ret
add
mov
movl
sub
adc
and
cld
sarb
push
and
insl
aaa
sub
sbb
ficoml
gs
and
adc
xlat
mov
sbb
or
mov
mov
cmpsl
sbb
roll
xor
sbb
shlb
fnstsw
xor
ret
fwait
aaa
test
lods
divb
mov
mov
call
add
pop
mov
sub
lcall
push
outsl
repnz
sub
movsl
mov
sub
pop
inc
mov
dec
movsb
lret
pop
add
jp
push
orb
mov
sbb
inc
cli
inc
in
mov
lods
mov
adc
sbb
xchg
xchg
and
in
test
pop
xchg
bnd
jmp
int3
shll
rorl
iret
and
sub
lods
ss
dec
mov
dec
in
sbb
mov
jle
movsl
cmp
int3
pusha
and
testl
sbbl
sbb
cmp
stos
pop
pushf
pushl
mov
pop
jne
in
xor
sarl
xor
mov
repnz
jo
sbb
mov
cltd
out
mov
out
out
ficompl
in
push
aam
mov
ss
sbb
push
add
cmp
popa
lret
lods
ret
lahf
sbb
inc
jbe
incl
jae
pop
out
aam
jl,pn
mov
cmpsb
enter
inc
mov
or
stos
out
jl
dec
cmp
jge
cmp
cmp
sbb
out
xchg
and
gs
push
jno
sti
sub
daa
mov
ss
xlat
push
out
mov
sbb
notb
push
jecxz
cs
jne
lret
lret
lcall
xchg
lret
bound
pop
gs
push
sbb
insb
aad
mov
xor
mov
imul
mov
pop
into
movsb
push
cmp
enter
dec
ret
addr16
push
hlt
cmp
xor
sbb
ror
and
xchg
mov
fadds
incb
mov
mov
sbb
loop
decl
jne
xor
and
jae
lods
and
dec
cmp
pop
sub
cmp
loope
mov
jecxz
in
inc
idiv
lcall
xlat
sbb
xor
enter
inc
push
lea
adc
and
dec
test
inc
adc
mov
or
lahf
inc
sub
jae
aad
fwait
or
sti
les
lds
pop
jb
sar
adc
test
mov
mov
jo
iret
into
lret
push
dec
xor
xchg
or
pop
pop
out
jae
aaa
cmp
dec
imul
push
int3
push
push
lahf
mov
mov
popf
fdivs
mov
in
pop
ss
js
pop
test
mov
jb
adc
xchg
outsl
pop
mov
mov
mov
test
scas
sbbb
mov
pop
adc
jp
push
mov
addl
decl
bnd
sbbl
fcoms
dec
jle
sub
pop
mov
push
cli
ficompl
loopne
inc
push
decb
cld
icebp
mov
jno
and
movl
mov
sbb
mov
lds
pushf
and
or
fsubrs
mov
popw
jb
mov
rolb
sti
into
mov
and
aad
mov
fsubrs
pop
inc
insb
xor
aad
imul
cs
insl
into
popf
sub
jmp
sub
xchg
xor
inc
in
push
inc
inc
add
lret
test
xchg
mov
fs
into
jne
pushf
mov
sub
mov
sbb
and
test
aam
and
les
outsb
outsl
xor
sub
mov
fistps
jp
fisttpll
sub
xlat
add
in
aaa
jae
fsubrs
push
clc
jmp
call
or
xchg
add
ret
mov
test
hlt
daa
sbb
jle
dec
stos
gs
pop
movsl
push
repnz
push
xor
inc
aaa
jne
pushf
mov
adc
shrb
js
adc
cwtl
imul
add
in
and
es
into
or
sub
ja
jl
cmp
jge
out
and
fidivs
dec
or
add
ja
jle
loope
int
pusha
in
loop
cmp
fnsave
add
clc
mov
add
test
push
xor
mov
in
jb
pop
pop
jo
lret
rorb
inc
add
sub
sti
in
adc
gs
xor
iret
and
daa
adc
mov
xor
xchg
sbb
popf
push
outsb
scas
lock
mov
or
loopne
or
pop
xlat
rol
std
outsb
xchg
mov
dec
notb
es
and
push
jg
das
mov
dec
xchg
add
jne
out
dec
movsb
cmp
xor
pop
mov
push
inc
or
dec
or
xorl
ss
in
scas
les
lahf
cmc
mov
mov
mov
sub
add
fucomip
fucomi
and
outsl
mov
fsts
sub
pop
aam
add
jle
es
nop
aam
imul
xor
cltd
aam
sub
outsl
lock
loop
inc
iret
subb
mov
mov
mov
mov
xchg
cmpl
and
cmc
fcmove
loopne
mov
jp
jae
cwtl
outsl
and
aad
test
fsubl
cmp
inc
scas
mov
add
mov
gs
loopne
das
in
stc
xchg
lea
sbb
mov
adc
cmp
bound
jmp
xchg
leave
push
popa
mov
out
mov
xor
pop
cmpsl
jmp
mov
test
xchg
adc
sbb
mov
sbb
mov
cld
pop
andl
xchg
fs
xor
cmpsl
hlt
jge
inc
and
test
inc
arpl
sub
popf
mov
in
jae
popa
mov
or
or
dec
hlt
fimull
clc
push
or
sbb
sbb
je
pop
adc
jle
add
pop
push
dec
aas
frstor
outsb
shrl
xchg
insb
sbb
add
std
mov
orb
shll
jmp
mov
mov
jnp
adc
mov
add
xor
lods
sahf
dec
pop
arpl
sahf
out
inc
cmp
cmp
dec
mov
imul
jo
jl
ja
int3
push
dec
jmp
lock
mov
jo
out
pop
adc
cmpsb
cmpsb
fwait
subb
push
mov
xor
ret
adc
aam
fwait
insb
ja
pop
jle
mov
sbb
enter
out
lods
cli
dec
in
jmp
xor
test
divb
iret
fstpl
cwtl
mov
sbb
jmp
mov
dec
test
adc
sbb
fnstcw
mov
and
xor
daa
mov
or
jb
mov
aam
xor
cs
jle
mov
ret
out
sti
iret
outsl
das
cmc
pop
cmpl
or
or
pop
inc
sub
xchg
testl
aaa
call
xchg
test
scas
dec
int
icebp
arpl
adc
dec
lahf
test
and
mov
pop
mov
xor
adc
jp
subb
xlat
sbb
es
inc
add
jp
rol
iret
or
sub
fisttpl
jg
xchg
outsl
adc
or
into
push
das
cmc
rcrl
push
mov
ljmp
aaa
mov
lock
addr16
ds
ljmp
push
jmp
sub
mov
cvtps2pi
lds
fwait
pop
outsl
insb
jge
mov
das
mov
std
enter
sbb
adc
push
sbb
imul
push
imul
je
into
jo
stos
xor
jno
and
xor
movd
repnz
xchg
in
mov
push
sub
add
mov
insb
push
sub
iret
stos
das
les
aas
iret
sub
bound
dec
inc
jnp
mov
jmp
gs
ja
sbb
imull
sbb
adc
push
hlt
mov
sub
ss
push
shlb
dec
pop
call
arpl
movsl
jne
test
adc
push
aaa
test
lahf
and
add
pop
nop
inc
pop
push
dec
lea
sbb
mov
out
std
dec
inc
mov
dec
or
fidivl
and
push
mov
imul
hlt
xor
pop
xchg
add
aaa
push
pop
rcr
xlat
cmp
dec
scas
int3
lcall
call
or
ficompl
xchg
add
lods
jo
sub
repnz
mov
jnp
push
cmc
jne
pop
int
lret
pop
sub
je
sbb
and
sbb
mov
xchg
shr
pop
lds
inc
mov
fcoms
scas
or
sbb
jne
imul
dec
dec
mov
pop
rcll
lret
mov
pushf
pop
and
pop
xchg
mov
ja
push
or
pop
in
out
enter
mov
cs
stos
mov
or
jl
or
faddl
pop
push
ret
xor
shlb
pop
inc
gs
fcompl
push
mov
jo
adc
sub
dec
inc
inc
daa
sub
pop
aam
sub
fldenv
js
cmp
mov
loope
mov
ljmp
sar
cld
lds
push
dec
dec
in
je
into
inc
dec
xchg
xor
push
inc
rolb
test
daa
sahf
pop
push
jno
lcall
in
fadd
lret
sub
fnstsw
xchg
loopne
xor
sbb
push
ljmp
mov
pop
loop
loopne
insl
mov
imul
lds
push
js
mov
stos
xchg
lcall
xchg
pop
and
or
jmp
fsubr
adc
icebp
js
or
sub
jecxz
int3
mov
arpl
inc
bound
icebp
push
or
in
dec
fsubp
push
pop
insl
dec
test
pop
clc
sub
cmp
call
loopne
mov
rorl
shll
jmp
cmp
jb
mov
mov
push
inc
iret
xor
and
and
push
push
clc
adc
idivl
imul
sbb
pop
ret
lea
xor
in
movsl
pop
lahf
lcall
jno
cmpsl
xlat
popa
arpl
push
mov
lods
push
sbb
notb
adc
test
pop
in
inc
jmp
jo
gs
ljmp
xor
ja
mov
push
addr16
cmp
adc
mov
icebp
dec
jge
outsl
les
fdivrs
or
mov
aam
dec
rorl
test
mov
push
sbb
addl
mov
dec
mov
in
loop
dec
push
cli
dec
aaa
popf
fs
sub
add
or
shll
ljmp
adc
add
loope
mov
shl
popa
daa
sahf
mov
xor
es
clc
sbb
or
add
out
cmp
shll
iret
ljmp
and
imul
jle
stos
cs
mull
aad
inc
test
icebp
mov
xchg
cltd
mov
sub
test
cs
repz
push
leave
xchg
inc
and
inc
jmp
jbe
sub
mov
fdivrl
pop
sbb
cmp
test
mov
enter
or
adc
cmp
pushl
ficoml
jge
push
cmp
decb
enter
dec
and
mov
popf
push
jg
dec
push
mov
xor
sahf
and
mov
or
xchg
or
lods
iret
in
lret
mov
fisubrs
int
sbb
incb
pop
jmp
mov
inc
sub
or
cmp
xchg
inc
mov
adc
cmc
xchg
xchg
or
testl
rorb
xor
xor
int3
mov
xor
into
pop
insl
mov
push
mov
stc
jmp
arpl
lahf
in
adc
mov
cmp
push
shl
test
mov
aas
ss
xchg
adc
repnz
addr16
cmpsl
lcall
jmp
test
sbb
into
int3
jns
int3
arpl
not
mov
out
xchg
jp
cmp
xchg
imul
push
les
mov
je
fcom
sbb
aam
jecxz
jne
mov
mov
xchg
scas
mov
sub
adc
ret
dec
lds
adc
xor
pop
sahf
not
andl
inc
ret
int3
dec
xchg
jnp
ja
in
jae
cmp
xor
addr16
push
mov
loope
sub
pop
mov
jp
or
ficoml
or
dec
cwtl
stos
mov
imul
cmp
fcoml
pop
sbb
test
insb
lcall
movsl
sahf
push
xor
and
lock
push
jae
sub
sub
inc
cwtl
mov
dec
ficoms
dec
or
popf
out
or
sub
shrl
int3
inc
inc
mov
aam
jl
xor
and
inc
imul
pop
repz
iret
and
sti
lea
pop
fcmovbe
pop
cmp
xchg
in
pop
in
lret
ret
pop
push
aas
pop
xor
adc
sub
pop
and
cmpb
insl
ret
cmp
fsts
lods
push
movsb
std
aad
sahf
in
mov
lea
popa
ficoms
xor
test
fs
jecxz
add
repz
insl
and
arpl
loope
jno
and
inc
cmp
out
push
sub
sub
test
jb
pop
psrlw
add
ljmp
xlat
ret
outsb
pop
add
andl
sbb
insl
lock
pusha
fmull
adc
add
sub
xor
das
xchg
mov
xchg
sar
loopne
gs
js
bound
mov
call
lods
adc
fiaddl
mov
in
mov
pop
sahf
sub
mov
dec
mov
pop
in
mov
pop
push
push
lds
pop
or
test
xor
fs
repnz
loopne
and
je
cmc
int3
fucomi
sbb
lret
sub
out
ss
sub
push
lcall
shrl
lds
call
mov
mov
dec
imul
mov
cmp
out
xor
inc
int
push
sub
pusha
xchg
movsl
outsl
orb
repnz
jmp
frstor
frstor
mov
loopne
pop
or
pop
ss
inc
push
cmc
dec
sbb
mov
int
sub
mov
les
mov
inc
fildl
pop
sub
ds
sbb
adc
mov
add
in
push
out
cmc
out
push
jb,pn
mov
dec
divb
addr16
loope
adc
lods
pop
sbbb
lret
cmp
inc
in
shlb
add
add
pop
rcrb
data16
ror
pop
clc
imul
ljmp
xchg
test
orl
jg
sub
dec
mov
adc
cltd
out
dec
push
jle
jp
xchg
test
push
jnp
dec
push
xor
fwait
imul
js
repnz
test
mov
or
mov
adc
jno
push
sbbb
dec
aam
mov
or
repz
and
les
lahf
and
nop
fidivrs
mov
pushf
sbb
and
mov
aas
jns
bound
pop
mov
fs
push
push
xchg
dec
push
stos
or
xor
out
pop
aam
mov
sbb
inc
mov
xchg
adc
fimuls
aam
cld
idivb
xor
cli
dec
scas
lods
xchg
shll
int3
cmp
mov
js
js
scas
sbb
aad
icebp
jle
jb
inc
pop
out
out
cltd
sub
sarl
push
xchg
sahf
push
rorl
fisttpll
push
sbb
movsb
in
mov
or
nop
jo
rorl
jecxz
scas
push
je
add
xor
pop
and
cmp
fsubl
cld
stos
xor
fimull
stos
mov
add
lret
push
fsts
push
xchg
mov
jae
mov
out
xchg
jmp
aaa
out
loop
push
mov
jle
pop
sub
xchg
cmp
enter
cs
aas
loope,pt
jb
push
add
xlat
push
jp
iret
cmpsl
stos
std
sti
cmp
lock
cs
insl
cmpsb
sbb
mov
sbb
nop
mov
jge
addb
sbbb
dec
adc
push
roll
in
pop
adc
mov
mov
out
add
imul
adc
mov
add
fwait
mov
fdivrp
and
adc
das
push
mov
sti
add
inc
cmp
pop
pop
sarl
mov
shll
aad
or
xor
mov
popf
out
repnz
std
out
ljmp
pop
ds
sub
ror
or
mov
adc
jbe
gs
xchg
shlb
popa
outsl
lods
loope
inc
pmuludq
xor
mov
mov
mov
mov
in
aam
clc
int3
push
xchg
cltd
aas
insb
in
sar
xor
int
sahf
or
sbb
cltd
pop
fnstsw
test
daa
push
mov
adc
push
cmp
xor
shlb
movsl
pop
push
js
out
je
mov
cs
mov
rcrl
cmc
mov
aad
sbb
in
arpl
and
test
daa
les
mov
add
adc
push
lret
fistpll
insb
les
or
lods
ret
subb
fwait
or
cli
cmpsb
sub
testl
dec
stc
inc
pop
mov
in
in
jmp
xchg
ss
enter
pusha
addr16
and
rol
cwtl
jg
sahf
enter
cmpsl
ja
out
cltd
jo
push
lcall
loopne
orl
div
adc
outsb
jb
sub
push
popl
sub
iret
sub
std
out
fstps
mov
ljmp
inc
mov
add
push
xor
iret
and
cmpsl
aas
lret
add
and
mov
jl
cld
mov
and
pop
pop
jmp
in
test
xor
setp
rcll
sub
fstl
andl
xor
iret
jo
fwait
imul
xchg
and
repnz
mov
and
lods
pop
int
fildl
dec
ds
inc
pop
xchg
pop
add
add
mov
adc
sbb
dec
shll
out
out
lea
mov
es
insl
xchg
pop
imul
repz
xchg
and
shlb
mov
or
jbe
jbe
pop
popf
and
mov
sbbl
les
incl
and
lds
mov
inc
test
call
aam
mov
lods
enter
cld
inc
or
fs
cmp
inc
es
int3
lcall
xor
out
sub
jnp
push
mov
ss
repz
xchg
jg
mov
testb
fnstenv
mov
in
popa
lea
push
repnz
pushf
push
gs
xor
test
clc
jp
popa
testb
pop
sbb
loopne
lcall
mov
rcrb
jns
cmpsb
xchg
sbb
ss
lcall
test
mov
mov
and
sub
mov
loope
mov
test
ds
outsl
mov
lret
fimuls
inc
xchg
dec
daa
xor
aaa
push
sbb
les
jbe
and
ja
mov
sahf
fistps
out
xor
pop
xor
fcmovb
push
push
in
iret
mov
call
cltd
pop
mov
out
sti
push
in
scas
and
sbb
cmp
cmp
mov
iret
pop
mov
dec
mov
jnp
xchg
mov
dec
pop
sbb
mov
aad
aad
ss
sbbb
cmp
subb
jb
stos
pop
in
arpl
lds
bound
bound
stos
pop
push
scas
cmp
pop
mov
mov
enter
mov
ja
lcall
jecxz
aad
push
iret
rclb
sbb
mov
pop
out
push
int3
jno
lret
push
scas
mov
lret
cwtl
lahf
es
cmc
xor
pop
ds
loope
inc
jmp
into
in
rolb
jo
jle
pop
xchg
xor
pusha
jbe
push
add
mov
pushf
lods
mov
or
arpl
mov
mov
daa
jne
sub
or
clc
pop
xchg
push
repz
mov
loope
fists
ljmp
xchg
and
fwait
imulb
sub
out
adc
pop
sub
test
out
insb
outsb
mov
cli
lods
pop
push
or
aad
rclb
dec
jbe
std
xchg
hlt
stos
mov
sub
or
andl
shrl
lods
adc
movsl
xchg
aaa
orb
mov
out
in
out
in
nop
adc
ficoml
sub
loopne
inc
cs
lahf
jmp
rcrl
mov
or
stc
adc
roll
xchg
loop
push
xchg
add
mov
or
mov
cld
mov
movsb
pop
pop
lods
sti
cmp
add
ss
inc
cwtl
xor
xor
clc
jecxz
insl
jb
pop
shll
lock
or
push
and
add
add
xor
and
xchg
daa
arpl
push
xchg
scas
lea
cmp
xchg
cwtl
push
insb
daa
jno
mov
or
in
xchg
nop
xchg
adc
mov
scas
mov
inc
test
fucomp
push
ss
sbb
inc
mov
xor
icebp
jnp
test
shrb
pop
cltd
popa
or
repnz
push
xchg
xlat
push
mov
dec
hlt
cmpsb
int3
repnz
iret
pop
addr16
js
insl
or
adcl
xor
jne
arpl
mov
ret
xchg
mov
addl
aas
or
mov
out
jno
int
adc
cmp
testb
xchg
stos
push
arpl
push
rcr
test
js
shlb
repnz
xor
add
and
fistpl
jp
add
adc
lea
dec
gs
mov
bound
ret
sbb
scas
xor
mov
addr16
add
dec
inc
imul
leave
mov
int3
pop
xchg
xor
lahf
sub
push
sub
ja
mov
and
sub
cmp
xchg
adc
xchg
and
cmp
xchg
ds
or
push
cmpl
cmp
push
pop
cmp
insb
and
pop
fsubs
mov
cltd
mov
cmp
in
jecxz
mov
inc
xchg
mov
jnp
hlt
orb
sbb
lcall
outsl
cwtl
cmpsb
rclb
adc
callw
int
icebp
mov
in
pop
mov
hlt
add
mov
sbb
cltd
cmp
jmp
mov
pop
xorb
aas
xchg
cltd
imulb
stos
enter
lret
and
rcrl
loop
pop
paddw
cld
dec
jns
mov
sub
int3
sti
in
pop
xchg
mov
xchg
pop
push
xchg
shlb
push
jl
and
add
jge
int3
in
xchg
mov
xchg
pusha
int
inc
add
loop
xchg
fsubs
notb
xlat
lds
mov
ror
or
mov
movsl
push
mov
xchg
insl
call
cs
jle
insl
outsl
pop
dec
test
cmc
push
mov
aas
push
ret
lea
jge
rcr
out
pop
js
aad
andb
cli
out
mov
mov
cmp
cltd
push
test
cmp
adc
ffree
xor
popf
ljmp
push
jle
filds
arpl
mov
mov
lds
mov
dec
mov
sub
lods
inc
nop
subl
insb
testb
mov
loope
pop
or
sub
cmp
cmp
add
in
loope
xchg
frstor
daa
outsl
cmp
pop
or
lret
sub
adc
cmpsl
add
sub
stos
sbb
push
push
jge
scas
sar
or
repz
fs
lahf
add
jnp
add
push
mov
aas
rorb
cmp
aas
inc
dec
pop
cwtl
jo
lahf
jl
inc
push
pop
sub
test
aad
lret
jbe
mov
adc
sarb
jns
pop
daa
rcrl
fisubrl
jnp
add
lock
push
mov
pop
push
int3
lea
cld
cmp
andb
pusha
pop
mov
pop
mov
sbb
push
add
inc
arpl
loope
dec
cltd
int
test
pop
bound
pop
xchg
jae
adc
inc
ljmp
push
stos
jg
xchg
mov
push
xor
frstor
xor
xchg
inc
sbb
lods
pop
and
rolb
out
out
ret
cmp
dec
repnz
sbb
enter
mov
in
cmp
mov
in
es
jl
xorb
icebp
pop
pop
pop
dec
or
test
test
cmp
push
cmp
test
mov
mov
push
fistpll
dec
adc
jp
dec
jae
mov
dec
dec
sub
in
mov
and
es
sub
push
subl
adc
mov
jne
jle
push
adc
shll
pop
sbb
ljmp
fiadds
js
imul
push
out
out
xchg
xchg
mov
mov
pusha
push
jle
cwtl
sti
in
aas
or
sub
xor
mov
jo
bound
lret
sbb
stc
inc
cmp
movsl
mov
scas
jno
mov
lret
test
sbbb
push
xchg
adc
loopne
imul
aaa
divb
adc
das
add
sub
xor
jbe
dec
sbb
out
inc
stos
cmpsl
push
or
mov
mov
scas
jnp
fwait
cmp
fscale
fldl
test
or
cmp
outsb
adc
cli
xor
lea
xor
jb
shl
adc
shrl
cmp
adc
push
pop
je
in
dec
xorb
xor
push
movsb
fwait
shlb
ljmp
adc
test
fcmovnb
mov
mov
sub
and
hlt
xor
scas
pop
rorl
and
int
gs
mov
push
and
mov
adc
pop
cmp
add
addr16
fnsave
and
xor
adc
jnp
sbbl
xchg
push
aas
dec
mov
loop
and
or
enter
shl
out
dec
jns
jg
pop
loopne
jns
lds
sbb
inc
inc
in
mov
daa
dec
aaa
dec
pushf
popf
jle
xchg
sub
sbb
movsl
jo
gs
enter
or
clc
lods
cli
call
xchg
jnp
push
movsl
dec
xor
mov
bound
nop
mov
mov
xor
inc
ds
xor
jo
stos
sub
gs
les
inc
or
scas
arpl
fdiv
cmpsb
or
mov
call
stc
test
sub
push
mulb
cmp
into
xchg
bound
push
push
sbb
pop
mov
movsb
push
push
cmpsb
stc
incl
sbb
bound
mov
lock
gs
scas
ds
in
mov
jmp
aad
mov
sub
cltd
push
xchg
stos
push
sub
jo,pt
gs
cmp
out
xchg
subb
sub
repnz
sti
das
outsl
or
popa
xor
das
inc
in
mov
and
add
rol
push
ja
nop
loop
loop
insl
movsl
xchg
xor
xchg
mov
inc
mov
ds
xchg
lahf
xchg
testl
in
xchg
jg
ljmp
xor
je
add
clc
sbb
adc
ret
mov
dec
ljmp
movsl
pop
mov
push
ljmp
xchg
cltd
inc
mov
gs
xor
mov
sahf
cmp
fbld
movsl
ret
rclb
add
sarl
pop
or
xchg
sbb
dec
cltd
fwait
mov
leave
in
sub
int3
fldcw
mov
push
or
and
mov
scas
repz
jno
insl
mov
jg
mov
push
inc
mov
aas
sbb
xchg
out
stos
imul
dec
mov
push
subb
rcrb
or
subb
aaa
xchg
pop
jae
add
mov
cltd
ss
imul
nop
js
insl
and
data16
ds
mov
push
mov
orl
sub
adc
or
adc
call
stos
dec
dec
mov
push
pushf
jne
mov
popf
fucomp
push
pop
aaa
push
sub
imul
jno
mov
call
mov
imul
jp
and
or
or
fiadds
push
pop
sti
loop
ss
sub
rorb
cmp
jo
or
push
mov
in
in
mov
dec
and
push
int3
adc
lcall
fsts
cmp
adc
adc
les
push
mov
test
pop
jecxz
jg
xor
out
lods
repnz
js
add
adc
or
loopne
lahf
jns
push
mov
adc
ret
cli
mov
ja
push
in
or
inc
xchg
mov
mov
std
push
cmc
dec
add
jae
and
pop
inc
lret
xchg
pop
mov
aam
xor
jbe
inc
aad
or
and
arpl
xor
push
mov
xchg
sti
push
pop
xchg
jl
sub
rcrl
stc
sbb
xchg
popa
mov
add
std
aad
add
lods
rclb
xorb
push
fisttps
xorb
int3
fwait
popf
call
call
scas
nop
lds
repz
loop
mov
rol
sub
movsb
jae
sbb
mov
cmp
add
incb
adcb
dec
fisubs
push
lods
adc
test
push
nop
ja
orb
push
jns
mov
test
add
in
jecxz
mov
sbb
cld
mov
aam
cmp
pop
icebp
inc
mov
inc
loop
inc
jb
adc
sub
jo
popf
xor
adc
pushf
ds
pop
insl
fs
out
scas
fidivl
xlat
pop
ds
jne
adc
loopne
pop
mov
shlb
push
dec
mov
fbstp
fisttpll
shrl
inc
mov
mov
cwtl
jl
adc
jle
in
sub
add
push
cmpsb
icebp
das
out
addr16
mov
ss
clc
pop
pusha
fdiv
inc
test
jmp
fs
sub
std
xchg
test
adc
push
leave
lcall
xchg
push
js
sub
dec
cmp
sub
stos
xchg
sub
js
adc
push
or
out
cmp
and
in
repz
xchg
fisttpll
jge
pop
inc
xor
rep
push
gs
mov
add
add
test
clc
testl
adc
push
xor
add
jmp
or
les
sahf
xchg
jo
xor
fdivrl
gs
inc
sbb
sarb
je
sub
add
add
adc
dec
adc
dec
dec
sbb
das
xchg
loop
jnp
sbb
leave
mov
push
sub
jl
inc
sbb
or
lret
mov
push
popa
mov
xchg
mov
fists
decl
ljmp
je
sbb
or
por
mov
ds
or
aaa
sub
xchg
fnsave
imulb
cmp
les
lds
shll
push
sbb
addb
xor
ss
jecxz
orl
cli
out
push
incl
inc
popa
fmuls
icebp
push
psubw
dec
sbb
sbb
das
mov
hlt
inc
or
ficompl
xchg
jecxz
fnsave
imul
xor
lret
cltd
dec
xorb
pop
scas
fwait
lods
inc
xor
jge
test
push
xchg
mov
xlat
mov
out
lahf
mov
sbb
ret
jecxz
stos
cmp
dec
add
sahf
xchg
mov
push
xor
stc
sahf
push
stc
data16
mov
lret
push
fcomi
ljmp
js
xchg
enter
jecxz
arpl
jb
clc
adc
push
bound
std
jl
out
sbb
pusha
stos
xor
jo,pn
sahf
arpl
fcmovu
jno
cmp
sbb
mov
mov
stc
mov
scas
lahf
negb
push
mov
adc
ds
push
push
shr
inc
mov
cltd
xlat
sub
mov
insb
inc
sub
sahf
inc
movsb
loop
add
inc
cmp
outsl
test
mov
sbb
cmpsb
xchg
xor
xor
jb
dec
jmp
mov
dec
sub
mov
je
enter
dec
insb
or
push
push
xchg
bound
xor
mov
inc
lds
aaa
popa
mov
fstps
dec
lahf
ja
push
push
add
pop
insl
jne
pop
mov
mov
faddl
lds
pop
add
rolb
in
pusha
clc
aad
fmulp
sbb
stc
mov
ss
loopne
stc
or
movsb
cmc
jns
in
jno
cld
cld
cmc
xchg
pop
aaa
pop
ds
or
pop
shlb
mov
add
fisubrs
ds
mov
fwait
out
cmc
add
or
pop
pushf
xor
inc
add
mov
in
pop
mov
cmc
ss
popf
fistps
push
aam
add
sbb
lods
push
lret
adc
js
cmpsb
lods
or
lahf
dec
outsb
pop
ret
jae
mov
mov
pop
dec
jnp
cmpsb
std
data16
out
in
ret
mov
lds
sbb
and
out
sbb
lret
aam
mov
mov
push
nopl
jecxz
loopne
data16
mov
out
jae
imul
mov
dec
pop
jb
mov
stc
insl
gs
cmpb
xchg
addr16
mov
jmp
xor
dec
xchg
jecxz
cmp
lcall
cmp
sbb
adc
out
in
int
cld
je
push
pop
inc
test
aam
or
int3
push
cld
mov
sbb
ja
jns
cmp
cmpsl
sub
aad
xor
xorl
lods
xchg
inc
or
xchg
in
or
sbb
jg
xchg
add
cmpsb
ss
cmp
or
test
mov
xchg
or
xchg
adc
and
mov
push
nop
mov
in
lret
cmp
pop
lods
xchg
aam
cmp
popf
lea
pusha
jl
lods
push
jge
dec
arpl
sbb
in
dec
in
mov
jecxz
jmp
adc
mov
out
or
loope
mov
out
mov
mov
xchg
aam
inc
sbb
dec
decl
xchg
popf
push
inc
aas
insb
ljmp
sarb
into
pushf
lcall
pop
inc
jge
ja
jb
jns
aas
pushf
xor
jnp
cwtl
sbb
push
dec
mov
ljmp
inc
sarl
cmp
arpl
push
mov
push
mov
insb
cmp
xchg
dec
jne
xor
xor
xlat
sbb
inc
jl
push
and
sbb
xchg
leave
sbb
cltd
lret
cmpsb
and
push
int
cmp
jno
xor
lock
pop
dec
cmp
nop
cmp
mov
jne
xchg
sub
rep
pop
mov
and
cmp
push
mov
jno
adc
add
xchg
dec
lock
ficoms
sub
jge
fsincos
cmpb
jo
or
cli
and
push
in
adcl
lcall
ret
adc
mov
cmpsb
pop
dec
test
stos
movsl
movups
jmp
test
xchg
sub
insl
clc
in
dec
in
leave
repnz
sbbl
scas
out
mov
sbb
nop
in
cmp
inc
pop
fxch
push
xchg
xor
xor
jb
mov
jg
mov
jg
inc
mov
dec
test
jmp
jbe
ds
shlb
daa
jmp
in
xor
lcall
adc
out
mov
je
out
testl
xchg
clc
mov
jno
hlt
push
or
sub
mov
fldenv
loop
dec
pop
out
fisubrl
ret
mov
stos
xor
dec
test
pop
pusha
cmc
and
mov
fisubl
add
and
sub
scas
int3
adc
adc
pusha
out
stos
xor
ret
movl
dec
sbb
sbb
inc
ret
pusha
push
jl
fs
fidivrs
xor
mov
add
or
cmpsb
insb
add
jns
pop
nop
iret
dec
cmp
dec
dec
inc
mov
mov
mov
shlb
fwait
repnz
sbb
mov
iret
fisubrs
inc
mov
cltd
pop
sbb
sbb
xchg
dec
popf
mov
push
xor
sbb
jge
pop
pusha
jl
pop
notl
jns
adcb
lret
adc
and
pop
in
fistps
paddw
sub
mov
sub
in
dec
push
setb
data16
out
arpl
or
pusha
pop
mov
mov
cmp
mov
or
adc
loopne
nop
lods
imul
lods
cli
in
cmp
cmp
lods
imul
rcl
pushl
jle
ss
fstl
sub
enter
sbb
test
pop
stos
inc
les
rcr
cmp
and
xchg
jnp
xchg
mov
pusha
adc
stc
xor
ljmp
pop
mov
mov
push
mov
call
aaa
aam
out
adc
jo
cmp
ja
out
bound
push
sub
fdivrl
mov
addr16
je
mov
cmpsb
fimuls
jge
imul
mov
in
xchg
ja
cmpsl
inc
mov
cmp
daa
xor
xchg
shrb
lret
addr16
mov
test
lret
sub
inc
int
inc
pop
or
mov
cmp
mov
es
add
fists
sti
push
mov
pop
jb
mov
fbstp
or
dec
mov
cmp
add
popf
mov
jg
fsubl
mov
scas
pop
test
xchg
icebp
jnp
out
push
sbb
sti
cmpsb
lds
lock
dec
movsl
adc
cld
xchg
mov
mov
insb
call
sti
mov
push
sub
pop
pop
shlb
out
mov
pop
sub
adc
sbb
cmp
insb
mov
jg
xor
or
pop
sbb
fsubl
push
cmp
fcomip
rclb
mov
mov
sti
lds
pushf
fildl
shrl
ljmp
jns
inc
lods
inc
and
xorl
pop
in
cmc
call
cli
popf
mov
mov
ss
into
aas
lds
inc
ss
sbb
mov
js
mov
dec
out
push
or
out
jns
xchg
dec
pop
sub
enter
insl
ds
fnstsw
roll
imul
jmp
lds
inc
loop
inc
mov
test
and
cmpsl
xchg
pop
ja
sub
and
jb
mov
aaa
pop
test
pop
pop
cmp
dec
pop
in
aam
sbb
pop
pushf
shll
nop
sbb
push
dec
stc
mov
loope
sbb
push
cmpsb
pop
inc
jns
ret
cmp
popf
mov
pop
push
jns
xor
jp
fidivl
in
hlt
mov
cmc
dec
fmuls
jmp
imul
lcall
ja
in
fisttpl
sub
mov
dec
mov
mov
cmp
dec
adc
les
cmpsl
mov
lahf
cmpsb
hlt
out
filds
adc
push
mov
ficoms
jo
pop
aam
dec
les
adc
in
mov
cmp
dec
jns
push
cmp
popl
cmp
cmpsb
es
lods
ss
cli
pusha
or
lds
ljmp
sbb
inc
in
jp
sbb
push
push
fisubrl
rcl
testl
jecxz
push
jo
adc
inc
ret
and
fdivs
in
mov
sbb
dec
xchg
and
sbb
cmpl
arpl
push
pop
push
dec
add
push
fst
mov
enter
inc
and
sbb
into
mov
sub
or
xlat
mov
mov
push
sub
inc
popf
insb
movsl
or
jns
adc
sbb
sbb
scas
push
adc
inc
mov
push
sbb
sbb
sbb
push
loop
data16
adc
dec
notl
fwait
inc
push
out
std
jns
lahf
cmp
add
pop
xlat
pop
push
int
rcrl
insl
andl
push
mov
arpl
push
mov
mov
rsm
add
lods
jecxz
sub
sub
pop
xchg
xor
mov
ljmp
divl
rorb
xor
cli
dec
cmc
cmovg
imul
arpl
in
aas
xchg
mov
or
sub
xchg
imul
pop
and
mov
in
fsub
nop
mov
xchg
mov
mov
ficoms
imull
mov
je
mov
dec
ret
fwait
mov
aas
scas
jns
or
sbb
or
pop
rcrl
or
inc
pop
jno
lods
pushf
fxtract
sbb
inc
mov
push
inc
pop
cmp
pop
fdivp
stc
pop
dec
adc
mov
pop
test
aas
push
je
xchg
push
faddl
dec
leave
fiaddl
ds
sbb
lcall
xorl
adc
xor
mov
cltd
cmpsb
sbb
lret
int3
push
aas
dec
cmp
nop
ret
lods
outsl
test
mov
dec
fdivr
mov
cmc
lock
dec
lahf
xlat
xchg
mov
push
mov
xchg
rorb
jb
xchg
pop
insb
mov
fidivl
data16
bound
adc
in
cs
iret
mov
mov
inc
push
arpl
stc
mov
jb
inc
data16
push
push
xor
and
testb
out
dec
aad
mov
addr16
clc
sbb
ror
mov
adc
loope
push
scas
push
push
adc
sbb
push
cli
lahf
inc
add
inc
xor
lea
arpl
adc
cmp
hlt
dec
sbb
add
mov
dec
xor
fs
scas
push
icebp
outsl
pop
sbbl
sub
sbbb
jno
jp
sbb
rorl
fucomip
mov
movsl
mov
xchg
mov
mov
lods
push
xchg
jg
dec
andl
inc
int3
mov
aas
push
insb
dec
nop
daa
or
xchg
lods
jno
or
rorl
mov
dec
mov
loop
dec
cld
loope
lret
pop
clc
cli
je
or
test
outsb
add
fisubrl
and
dec
outsl
adcb
sti
push
fimuls
ficomps
imul
nop
data16
in
adc
cld
ror
in
ds
sti
cmp
adc
inc
shll
pushf
push
pop
inc
pop
sub
adc
inc
test
hlt
jae
ret
rclb
xor
repz
cmp
iret
mov
jp
pop
out
adc
insb
pushl
dec
lods
fisubrl
sub
xchg
enter
xor
dec
aad
xchg
lret
xor
sub
das
dec
sarl
mov
dec
and
mov
sbb
int
notb
cmp
mov
pop
cld
xor
mov
mov
mov
lds
stos
js
push
ret
inc
loope
arpl
mov
jmp
mov
cld
repz
inc
push
pop
lock
sub
cmp
addr16
jg
sbbl
push
fnop
ror
pop
xlat
repz
push
shll
push
or
inc
aad
mov
mov
dec
push
imul
lcall
pushf
add
imul
or
xchg
test
ljmp
xor
mov
inc
mov
jne
cs
call
fistpl
sub
xchg
jns
xor
fisttps
cmp
push
mov
daa
repnz
jl
imul
mov
ja
adc
dec
xchg
sub
out
inc
jl
daa
push
sbb
cwtl
into
push
cmp
jl
sub
stos
sub
loop
in
cmp
sbb
xor
and
sbb
jne
inc
jmp
ds
push
fwait
sbb
xchg
mov
pop
sbbl
aaa
fnstenv
mov
pop
jbe
mov
jbe
cmp
jl
push
xchg
cs
pop
sub
sbb
in
arpl
mov
and
xor
mov
xlat
xchg
cli
lret
sub
push
mov
and
pop
lea
jns
wbinvd
sbb
xor
mov
dec
cmpsb
out
mov
jle
mov
mov
jae
xlat
call
das
outsb
jp
insl
mov
out
arpl
je,pn
repnz
in
pop
int3
xchg
mov
test
fidivl
jecxz
faddl
adc
jge
movsb
push
jne
out
xchg
fucom
leave
xchg
test
loop
mov
lcall
push
jge
and
adc
xchg
inc
icebp
std
inc
in
jg
loope
dec
dec
aam
imul
aad
in
loopne
xor
dec
mov
sbb
dec
test
filds
pop
jle
pop
leave
rcrb
imul
clc
jmp
inc
hlt
pop
xor
jg
sbbl
outsl
mov
lds
cli
pop
mov
jmp
mov
js
popf
insl
int
test
push
dec
mov
mov
mov
sbb
or
inc
es
lock
sbb
cmc
xor
xor
loope
in
sahf
cmpsl
or
aaa
cs
stos
inc
arpl
jge
mov
addr16
xor
adc
jge
and
inc
and
imul
loop
add
mov
daa
dec
dec
mov
sahf
mov
jg
psubb
cltd
into
mov
in
loopne
or
rcrl
popa
and
cmpsb
je
imul
mov
data16
push
or
jo
jns
inc
cmp
scas
dec
stc
jg
add
daa
add
mov
hlt
push
xchg
cmp
jg
cmp
sub
and
dec
add
xor
cli
push
dec
pusha
push
ret
pop
mov
lock
adc
daa
test
sub
cli
mov
mov
fldenv
out
outsl
xchg
mov
inc
pop
bound
fildll
in
cmp
jp
aam
sub
pop
out
sub
repnz
outsl
adc
rcrl
popf
js
movsb
lock
cmpsb
mov
mov
fucomp
mov
push
inc
push
insl
dec
sub
cld
dec
out
mov
dec
scas
subl
vpcmpeqd
test
and
dec
sub
sub
pop
lret
adc
mov
jns
push
or
shll
stos
add
dec
or
loopne
jg
es
jo
ret
std
outsb
and
jo
xor
pushf
inc
loopne
cmpsl
stc
ljmp
mov
mov
cmp
insl
mov
and
jg
testb
sub
leave
ljmp
xchg
push
add
pusha
xorl
sbb
push
fs
enter
mov
loopne
mov
mov
pop
pusha
andb
or
sub
inc
mov
inc
adc
imul
push
hlt
loopne
cmpl
add
adc
and
jno
jge
xlat
xor
in
aam
ret
into
push
or
fiaddl
pop
jmp
loopne
jge
push
addl
xor
es
mov
out
pop
das
pop
leave
stos
or
jmp
push
cld
sti
pop
sbb
push
fxam
pushf
mov
outsb
shl
cs
rcrl
sbb
fwait
stos
insb
pusha
loopne
adc
es
xchg
xchg
dec
mov
popa
mov
mov
xchg
jecxz
sub
popa
or
inc
js
xchg
mov
dec
adc
shr
loope
repz
add
repnz
test
push
sti
imul
jg
decl
cmp
and
sub
mov
adc
mov
inc
pushf
sti
mov
ljmp
out
jne
rcll
jecxz
or
stc
js
arpl
out
rcll
xchg
and
out
pop
mov
loop
outsl
cli
cmp
mov
fisubs
les
add
sbb
jp
popa
jmp
loopne
pop
iret
cld
subb
inc
orb
push
sbb
push
sbb
lret
ffree
rorb
ds
mov
xlat
lods
push
js
stos
mov
inc
mov
xor
dec
sbb
inc
outsl
push
jnp
popa
mov
repnz
xchg
mov
xchg
aaa
adc
aaa
or
mov
cs
stc
pushf
jo
pop
push
mov
sbb
cmp
jge
xor
hlt
test
jno
xlat
pop
sbb
aas
mov
add
stos
mov
xchg
in
xor
mov
add
fwait
jno
inc
xchg
aaa
add
add
xor
insb
dec
aas
add
loope
aas
enter
fs
test
or
push
sbb
insb
cmp
jo
and
and
fildl
jns
xchg
int
adc
icebp
push
jb
shll
bound
insb
mov
pusha
test
daa
cmpsb
inc
shr
testl
mov
insl
adc
jmp
rclb
push
movsb
ljmp
sub
ds
mov
mov
mov
sub
jecxz
data16
repnz
inc
imul
clc
sbb
pushf
push
inc
mov
lret
and
icebp
push
inc
shrb
push
pushl
mov
jb
xor
and
pop
test
inc
repz
lods
sbb
stos
mov
outsb
push
pushfw
or
iret
jns,pt
daa
mov
add
pushf
rcl
ret
sub
clc
mov
cmp
push
call
add
mov
ja
loop
pop
mov
mov
mov
das
push
ror
int
inc
ret
nop
xchg
orl
pop
test
xchg
cmp
and
xchg
repnz
sti
pop
popf
lea
mov
test
lods
test
dec
inc
adc
dec
cwtl
add
mov
inc
icebp
inc
dec
pop
push
sub
mov
cwtl
sub
insl
stc
cs
sarb
in
mov
daa
outsb
fwait
in
enter
rorl
out
push
push
push
test
outsb
decb
cmpsb
mov
pop
inc
push
jl
push
stos
xchg
fcomp
mov
cli
adc
fs
pop
mov
cmc
xchg
mov
push
repz
sub
mov
repnz
fs
and
dec
dec
dec
jge
clc
imul
mov
adc
fistl
jns
and
call
adc
dec
pop
cmp
and
popa
call
loope
sbb
dec
push
lea
and
xchg
pop
mov
and
jno
lock
imul
inc
push
add
and
push
push
pushf
lea
ds
sti
test
fcoml
push
ds
adc
add
js
das
leave
loopne
das
cs
ret
or
lahf
lret
dec
and
xor
add
lret
mov
ficomps
xchg
dec
lds
ror
xchg
and
and
pushl
stc
xor
or
sbb
into
ret
sbb
mov
enter
addr16
xchg
xchg
xor
loop
imul
pop
inc
in
daa
lret
add
iret
loope
pop
std
dec
cs
sbb
ja
push
notl
call
adc
add
outsl
fs
inc
cmc
jae
mulb
aas
xchg
int3
dec
in
ja
test
in
aaa
jno
cltd
and
inc
aas
pop
jno
hlt
push
sti
inc
lds
cmpl
psraw
or
push
sarl
sub
cli
mov
lods
add
pop
gs
cmp
push
cwtl
pop
push
es
pop
push
imul
jge
cmp
cmp
std
and
out
xchg
testl
mov
pop
adc
and
repnz
inc
in
gs
mov
push
popf
leave
dec
fnstenv
jl
add
lea
cmp
pop
dec
fdivrs
inc
cmpsl
jae
and
xor
stc
ja
inc
push
std
ljmp
dec
add
div
les
js
pop
sbb
out
pop
add
mov
pop
data16
inc
dec
in
fcmovnb
adc
xor
loop
ljmp
clc
sbb
add
mov
repz
dec
jnp
outsb
fisubrl
imul
subb
pop
pop
jge
leave
push
pop
inc
or
xchg
add
sub
pop
add
filds
out
adc
or
dec
push
fsubrp
add
int
or
mov
xchg
or
call
pop
dec
mov
pop
jmp
push
lods
cmpsl
and
fldcw
outsb
push
push
mov
adc
mov
push
movsl
nop
int3
add
jge
rorb
pop
scas
push
fisubs
and
sbb
fldt
add
or
in
repz
push
pushl
das
inc
shl
mov
scas
in
adc
aad
stos
fiaddl
test
pusha
mov
insl
push
int
adc
test
pop
xchg
and
xchg
roll
addb
mov
jecxz
jno
in
mov
mov
xor
jbe
inc
xor
sbb
cmp
es
stos
das
cmpsl
icebp
jns
xchg
push
jg
lcall
fwait
sahf
jb
out
jnp
push
roll
ljmp
inc
lods
into
xor
jae
lea
stos
jle
push
es
call
xor
inc
push
pop
iret
lock
sti
data16
nop
adcb
ljmp
imul
lcall
inc
push
jp
fdivrs
lahf
lret
pop
mov
push
inc
xor
jmp
lods
sub
test
scas
adc
and
push
or
jnp
dec
lock
insl
pop
fs
inc
ds
mov
dec
inc
in
stos
aaa
push
mov
nop
test
inc
and
cmp
test
mov
scas
mov
and
xor
mov
imul
repz
fdivs
and
xchg
sub
pop
dec
cmp
inc
jmp
test
mov
imul
jno
enter
es
leave
mov
in
pop
add
or
jo
outsl
aad
jbe
sub
and
inc
enter
inc
mov
xor
mov
push
jbe
jo
and
mov
and
loope
imul
fldl
jl
inc
inc
popf
js
add
cmpsl
cmp
dec
or
sub
popf
in
sbb
xor
test
xchg
inc
imul
cltd
mov
jnp
inc
popa
push
cmp
fdivp
sbb
shlb
mov
cs
pop
or
adc
pop
xchg
push
pop
and
fisubrl
mov
call
inc
decl
jge
add
xor
dec
pop
xchg
cmc
int
fstpl
clc
nop
inc
mov
dec
xor
imul
pop
mov
xor
std
xchg
push
enter
push
jmp
insb
sti
xorb
cld
call
negb
adc
mov
sub
dec
dec
adc
mov
push
push
dec
outsb
or
test
cmp
mov
inc
arpl
out
push
lea
ret
mov
repz
jbe
xor
rolb
inc
and
pushf
cli
jnp
iret
push
mov
jl
mov
jg
loopne
mov
shrl
cmp
dec
std
lahf
or
lds
dec
ss
xchg
adc
pop
repnz
pop
jle
mov
jl
sbb
jne
outsl
jge
clc
push
ficoms
rcrl
jecxz
decb
jp
repnz
inc
dec
xor
adcl
push
in
mov
xor
mov
xchg
or
mov
es
jb
aas
dec
sbb
mov
cmp
test
mov
mov
sbb
sbb
cmp
jnp
and
addl
cmp
das
lods
push
pop
rcrb
cld
popa
and
mov
jbe
jns
imul
lahf
push
mov
cld
andb
bt
and
rcl
xchg
inc
inc
cmp
cld
push
mov
test
push
ja
std
sub
in
stc
in
add
inc
bnd
out
insb
pop
mov
push
fisttpl
arpl
lods
out
outsb
mov
loopne
mov
fldt
movsb
sbb
and
sti
aas
loop
push
loopne
xchg
xchg
inc
and
mov
push
xchg
xor
ret
fidivs
or
test
cmp
or
test
lods
or
iret
or
xor
testl
or
xchg
push
inc
fwait
inc
jge
or
popa
mov
icebp
jae
sub
xor
lea
sub
mov
mov
leave
dec
push
bound
js
push
mov
push
pop
pop
mov
or
mov
xor
push
cmp
fnstcw
push
and
decl
filds
fdivs
sbb
rorl
imull
cltd
shl
mov
sbb
icebp
sub
sub
lods
xlat
add
sub
mov
pop
fsts
notb
aad
lahf
add
leave
pusha
sar
jp
movsb
shlb
jb
inc
lds
lods
cmpsb
gs
nop
fcomps
xor
sbb
jbe
adc
jnp
icebp
imul
inc
jg
pop
lret
std
jb
shrb
aad
adc
aaa
hlt
and
jo
add
cli
mov
lods
mov
sbb
aaa
jns
pop
jge
dec
add
pop
push
xor
flds
sub
add
in
push
cli
aam
pop
jle
jne
loop
pop
adc
mov
add
and
jg
add
or
pop
shl
rorl
mov
js
shr
jnp
adc
sbb
cmpsl
icebp
mov
adc
leave
insl
out
adc
out
push
out
cmp
inc
or
outsb
mov
pushf
mov
fidivrs
fcmovnbe
cltd
add
mov
lods
add
push
cmp
adc
sbb
ljmp
mov
andb
xchg
lock
into
pushf
xor
stos
fldl
mov
js
jo
inc
bound
mov
xchg
and
popf
dec
aaa
enter
mov
push
pushf
aaa
sbb
dec
mov
push
fs
roll
ss
je
sbb
shld
mov
das
or
fistl
int
ret
orb
js
aas
and
pushl
pop
and
lret
inc
push
loope
test
mov
sbbb
icebp
jo
les
lret
flds
out
mov
imul
push
or
cmc
test
or
cmc
sbb
add
mov
push
cmp
xchg
cltd
mov
div
es
bound
icebp
mov
and
or
std
push
leave
push
sub
scas
enter
jmp
cmp
aad
je
pushf
aad
imul
jg
mov
jns
jl
xlat
cmc
push
inc
lahf
cmc
lods
inc
mov
sub
in
cwtl
inc
nop
xor
add
xor
aaa
call
cs
fwait
mov
rcrb
push
out
cmp
sbb
popa
xor
fcoml
and
cmp
nop
fisubs
push
sarb
loope
fcmovb
xchg
mov
lods
and
loop
push
into
mov
and
clc
cmp
repnz
xchg
cltd
ret
jne
clc
bound
arpl
adc
cmp
in
adc
xlat
int
out
call
mov
or
pop
bound
pop
test
das
mov
push
dec
mov
mov
push
pushf
push
fmuls
in
sbb
mov
cmp
notb
xorb
mov
cmp
pop
ss
jae
idivl
popa
mov
push
lret
aam
sub
movsb
pop
inc
or
inc
xor
jp
into
dec
fldenv
jns
out
and
gs
dec
mov
cmp
cld
cmp
leave
or
xchg
fsubr
dec
insl
jmp
vcomisd
lds
into
push
fwait
mov
arpl
inc
cwtl
dec
mov
cmpsb
leave
ret
dec
push
stos
ret
or
lds
sbb
and
loop
jne
mov
dec
jp
js
stos
insb
mov
andb
mov
dec
pop
jb
popf
xchg
jge
in
out
adc
sbb
jno
lahf
sahf
fstps
pop
mov
sarl
cmp
in
inc
adc
jmp
jne
and
xor
sbb
push
lret
repz
mov
inc
jmp
loopne
pop
jne
mov
insl
jge
sub
movsb
repnz
cmpsl
sbb
shl
es
and
fstps
int
mov
outsl
ljmp
in
or
adc
mov
dec
sub
lds
movsl
push
in
xor
std
and
cmp
lahf
clc
inc
mov
xor
cli
xor
mov
or
inc
jecxz
and
fmull
inc
dec
inc
ret
mov
mov
enter
mov
addr16
ficoml
dec
xor
test
shl
test
jo
rorl
adc
pop
and
inc
rcl
ja
sub
pop
xchg
into
mov
mov
push
outsl
mov
xor
mov
int3
push
leave
adc
fsubrl
inc
mov
mov
sub
fnsave
push
movups
int3
nop
cmp
xor
stc
push
jno
adc
xchg
out
mov
or
movsb
pop
adc
sbb
jmp
fwait
pop
adc
loope
mov
sahf
lock
lretw
iret
in
cld
sbb
in
lcall
push
or
aaa
out
arpl
lods
dec
out
test
int3
fisttpl
push
xchg
dec
push
inc
mov
mov
xchg
stos
jecxz
push
and
cmpsb
jmp
sti
push
dec
dec
bnd
xchg
lahf
mov
lret
aam
mov
cmp
inc
sbb
test
call
and
insl
adc
and
test
imul
push
or
xlat
leave
mov
dec
pop
mov
test
ret
cwtl
inc
jle
pushf
shll
arpl
adc
sbb
push
xchg
and
mov
pop
jle
mov
xor
mov
imull
shlb
mov
jne
lods
lahf
dec
pop
push
imul
pop
cmpsb
push
inc
and
pop
cs
dec
outsb
jbe
out
repnz
in
movsl
shl
enter
enter
xchg
icebp
cli
out
test
in
inc
mov
mov
mov
or
adc
cmp
imul
call
cltd
jge
pop
fisubl
sub
and
push
mov
js
mov
xor
sub
negb
in
lret
adc
inc
sbb
nop
punpcklbw
inc
mov
imul
push
add
pop
push
pop
cmp
ret
stc
mov
pop
int
rcl
test
or
xor
cltd
xor
aam
fsubrl
outsl
xor
mov
pop
mov
clc
int
adc
sub
adc
ret
inc
out
sub
in
enter
fstpl
test
frstor
rolb
cmp
test
mov
jp
cmc
fcompl
and
loopne
stos
in
std
xor
aaa
xchg
std
es
mov
xchg
fidivs
xorb
pop
cmovle
fcomp
add
out
mov
adc
mov
add
cwtl
insb
mov
das
scas
jecxz
aad
push
mov
fmull
pop
xor
lods
sbb
push
int3
jae
adc
inc
xchg
out
mov
insl
lcall
and
adc
sub
test
mov
ds
xchg
ficoms
push
imul
ja
xchg
inc
mov
add
mov
cmp
mov
in
shrl
into
int
stos
icebp
jmp
dec
push
fs
mov
outsl
pop
mov
pop
and
test
mov
xchg
sbb
mov
aad
mov
hlt
push
or
or
scas
mull
cmc
jg
push
icebp
into
dec
inc
iret
popa
out
jb
or
sub
fwait
lea
in
push
or
sbb
int
cmpsb
test
dec
daa
loopne
dec
inc
negl
es
imull
push
dec
mov
mov
cmp
inc
jo
push
mov
ds
and
sbb
andb
and
xchg
cltd
fdivs
pop
xor
test
cmp
xor
inc
stos
mov
bound
cmp
lret
lods
call
int
sub
es
movsb
call
mov
jnp
jbe
mov
xchg
push
dec
inc
js
les
in
flds
je
jns
stc
fs
jg
aad
outsb
adc
sahf
push
ret
fwait
out
mov
inc
or
push
sbb
mov
xor
mov
mov
fildl
jo
subps
add
cmp
add
mov
xchg
mov
cwtl
loopne
cmp
adc
sbb
hlt
or
test
add
xor
push
enter
nop
aam
push
fs
jecxz
cs
mov
mov
pop
loopne
xchg
cmp
stos
add
negb
aad
scas
inc
cs
or
aaa
mov
in
jo
or
pop
xor
popa
jo
imul
jecxz
test
mov
jmp
lods
mov
popl
insb
test
std
mov
pop
test
fsubs
inc
xor
cltd
adc
add
sbb
imul
mov
adc
je
in
in
xor
xor
leave
test
xorb
dec
jg
enter
out
jno
lcall
and
mov
cltd
ljmp
xor
pop
inc
jmp
mov
sub
daa
mov
pop
imul
or
mov
push
adc
add
push
mov
mov
out
je
adc
mov
faddl
mov
or
cli
sbb
shlb
sbb
daa
cmp
imulb
xor
lcall
div
faddl
cmpxchg
leave
jl
cmp
mov
xchg
add
out
adcb
std
insb
pop
mov
jo
inc
out
sete
and
cmp
mov
test
dec
mov
cltd
push
nop
or
dec
daa
pusha
das
push
hlt
aam
sbb
and
mov
test
imul
and
andb
mov
adc
xor
xchg
mov
aaa
mov
inc
pop
adc
mov
pop
inc
or
ret
add
pop
addl
les
cmpsb
sbb
xchg
adc
mov
lods
inc
cmp
div
sti
popa
xor
arpl
je
idivl
inc
mov
movntq
jp
sbb
mov
insl
mov
and
cmpxchg
scas
xor
adc
cmp
xlat
loopne
imul
rcr
imul
inc
sbb
fst
jns
dec
sti
scas
enter
and
dec
fnsave
mov
std
dec
add
mov
jl
lods
mov
adc
pushf
repz
pop
call
jb
jmp
and
adc
rorb
sbb
out
inc
cmp
jecxz
jne
loope
jmp
ss
cld
mov
mov
adcb
insl
lods
push
mov
rcrb
fdivrs
jl
dec
aam
clc
inc
and
push
push
lds
pushf
das
adc
jecxz
xchg
ja
dec
push
cmp
pushf
mov
xor
xchg
jns
dec
fiadds
mov
cmp
push
jb
push
inc
popa
mov
pop
sbb
xor
mov
jae
adc
add
in
sub
and
gs
fildll
movsb
xchg
notb
pop
fxch
out
jo
ja
aad
daa
push
outsl
push
xchg
pop
fiaddl
in
lret
loopne
xor
sbb
js
push
les
stos
notl
and
pop
aaa
scas
fucomi
in
xor
pop
adc
push
ret
leave
inc
jp
enter
es
dec
arpl
pop
ja
pcmpeqd
jp
lretw
test
add
imul
pop
push
lcall
cmp
mov
and
sbb
fstps
inc
xor
sub
nop
js
mov
pop
mov
cmpsl
mov
mov
arpl
jl
inc
into
mov
fcmovnbe
adc
js
cli
movsl
or
xchg
rcrl
loopne
stc
push
loop,pn
mov
je
test
lds
or
pop
xor
notl
push
loop
fisubl
mov
in
jmp
loopne
mov
test
mov
mov
pop
mov
pop
addr16
test
cli
xchg
mov
orb
pop
add
xchg
loopne
xlat
int
dec
bound
es
repz
outsb
pop
and
frstor
shl
mov
adc
pop
and
dec
mov
ffree
icebp
loopne
jns
gs
xchg
adc
aad
das
orb
icebp
fcoml
lahf
pop
sbb
imulb
mov
add
enter
mov
push
or
cld
imul
or
sahf
push
or
fdivl
and
sbb
pushf
lds
mov
in
push
test
sub
insb
adc
lret
sbb
dec
mov
in
xor
lock
fistps
inc
stc
jg
add
adc
pop
int
loop
cwtl
gs
sub
rol
stos
xchg
sbb
int
mov
push
push
push
out
movq
notl
mov
xchg
add
scas
sbb
cltd
inc
mov
mov
jbe
iret
mov
sub
inc
xchg
fsubp
imul
mov
insb
sub
cli
repz
lea
mov
jge
adc
sbbl
pop
xor
loope
in
and
jne
popf
push
jmp
cltd
lods
repz
or
and
fdivrl
jns
xlat
jnp
scas
rolb
cltd
cmp
call
cli
jmp
loope
inc
lcall
lcall
push
jne
pop
daa
mov
ret
mov
pop
mov
dec
pop
jne
jge
xchg
idivl
inc
add
mov
mov
jo
ret
clc
and
rol
test
mov
pop
es
lcall
lock
arpl
and
jl
push
jb
xor
xor
stos
mov
xorb
jle
iret
ret
jmp
mov
push
sub
popf
bound
mov
xchg
call
sbb
enter
xchg
test
iret
popf
mov
push
adc
xchg
xchg
daa
scas
in
jns
or
icebp
insb
cmp
jnp
js
outsb
jmp
in
mov
jge
filds
xchg
dec
outsb
lret
lret
sub
fmull
popa
cmp
aad
mov
ret
clc
jne
cmpsb
ja
lods
and
jge
pop
sub
xchg
into
fildll
xor
push
stc
addr16
shl
ljmp
scas
and
cmp
test
add
jbe
add
lods
adc
inc
ret
mov
lret
pushf
mov
fs
inc
dec
cs
jg
mov
mov
jg
jmp
dec
imul
inc
add
pop
pop
mov
xlat
sahf
lea
xchg
xchg
iret
js
insb
add
int
mov
aad
mov
sub
pop
and
sahf
pop
push
or
pushl
clc
sbb
cmp
fisttps
shlb
shlb
adc
sbb
pop
les
inc
mov
pop
add
adc
cmp
inc
int3
insl
notb
out
jo
xor
inc
mov
push
or
cmp
test
scas
pop
and
adc
cmpsl
fcos
jnp
xchg
cmpsb
mov
jge
andb
push
imul
popa
inc
jo
mov
push
sub
sub
jae
aaa
jne
movsl
mov
dec
cmp
insb
sbb
out
push
sbb
adcb
loope
pop
sbb
out
stos
out
push
dec
jbe
sub
mov
dec
movsb
mov
or
or
fdivrl
daa
inc
xchg
cltd
mov
mov
setbe
pop
cmp
push
cwtl
stos
cmp
inc
sti
inc
rol
jb
ret
mov
adc
in
sbb
dec
pusha
xor
pop
cs
loop
and
pop
lahf
aad
add
aas
je
pop
mov
les
pushf
xchg
mov
sub
or
test
insl
movsl
movsl
inc
test
inc
not
mov
inc
sub
jmp
xor
and
cwtl
popf
out
or
test
jg
and
xchg
sub
push
xlat
xchg
add
stc
jmp
movsl
out
xor
into
into
test
fimull
mov
mov
or
push
add
lods
mov
sub
cmc
fsubrl
shll
lahf
push
or
mull
lods
sub
or
push
out
adc
mov
fldl
mov
je
out
subl
sbb
int
mov
mov
rcl
cwtl
jge
mov
cmc
addr16
scas
and
xor
xchg
push
adc
addr16
xchg
je
ds
ss
aad
stos
jmp
mov
sbb
enter
rcll
ds
out
mov
ljmp
arpl
mov
leave
dec
ss
fwait
mov
dec
adc
das
jne
jne
pop
shll
sub
lods
and
and
sub
pop
popf
pop
xor
out
jo
inc
inc
repnz
dec
aad
aam
mov
push
out
movsb
sub
mov
icebp
jno
fs
iret
lcall
sti
mov
xlat
fsin
icebp
mov
sbb
and
ds
cltd
sub
mov
sub
inc
out
clc
push
push
cwtl
xor
cmp
orl
xchg
cltd
lods
sbb
fsubs
mov
and
fs
dec
sbb
cmc
xchg
cmp
enter
dec
mov
or
add
pushf
rorb
icebp
ret
or
jns
stc
jle
push
xor
mov
push
jp
jmp
sbb
mov
cltd
fldenv
xchg
or
pop
xchg
dec
movsb
pushf
ljmp
jp,pn
outsb
leave
xor
pop
repnz
xor
push
movsl
pop
movsl
push
bnd
sub
mov
daa
dec
add
les
add
shrl
call
gs
mov
rorl
les
in
mov
clc
mov
cs
in
test
pushf
popa
inc
pop
pop
loope
xorb
lret
mov
je
sub
test
push
lret
pop
or
cmp
xchg
lcall
adc
sbb
aad
mov
mov
add
xchg
dec
sub
aad
outsb
inc
outsl
pop
push
add
fildll
stc
dec
pop
ffree
mov
ljmp
pop
or
dec
shrl
inc
lock
xchg
andb
je
adc
leave
pop
dec
push
fdivs
cli
push
aas
out
mov
into
daa
inc
mov
cmp
mov
push
inc
les
add
popa
andl
mov
or
add
sbb
and
sti
mov
es
divl
mov
shll
push
outsl
or
mov
adc
pop
pop
imul
shl
int3
and
pop
fdivp
push
out
jle
pop
mov
xchg
addb
and
aam
fstps
lcall
clc
inc
pop
push
sub
sub
pop
jl
or
popa
adc
push
inc
xor
push
mov
push
dec
lret
push
mov
call
outsl
sbb
inc
inc
cld
and
das
inc
push
jge
xor
jp
movsb
in
and
stos
jp
sub
dec
and
xchg
push
cmp
rol
and
lret
cmp
lods
xlat
push
push
into
adc
cmp
sarl
mov
mov
mov
gs
mov
xor
push
movd
imul
dec
pop
pop
cmpsl
or
aas
fnsave
outsb
scas
loopne
adc
sti
push
das
xchg
mov
xor
inc
jnp
aam
dec
in
add
data16
ret
mulb
rolb
inc
pusha
shll
loope
adc
xor
cli
adc
or
or
push
mov
out
add
lds
mov
dec
jecxz
outsl
arpl
out
mov
pushf
add
inc
pop
mov
pop
out
xor
add
pop
mov
cwtl
cmpsl
jp
in
jns
js
hlt
int
pusha
aam
lock
cmp
sub
cmp
inc
outsb
ds
jge
xchg
outsl
and
mov
shlb
cld
adc
mull
pushf
outsl
sbb
cli
and
xchg
adcb
cwtl
adc
mov
lcall
pop
stos
or
sti
pop
leave
sub
fadds
in
sbb
push
inc
in
cmp
or
push
xchg
insb
outsl
mov
sbb
imul
movsb
lods
mov
cld
pop
xchg
cmp
scas
loope
adc
push
je
sub
add
pop
xchg
mov
cmp
sti
cwtl
cld
gs
gs
or
add
test
cltd
inc
xor
dec
adc
mov
and
imul
fdivl
pop
in
clc
mov
orl
testb
daa
push
or
adc
enter
mov
movsl
jle
push
cmp
movsb
sbb
je
sub
sub
xor
imul
adc
notl
jge
fildll
js
cwtl
je
xor
mov
mov
sbb
ss
push
xor
mov
push
mov
cmpb
loopne
inc
scas
aas
shll
std
pop
and
fisttpll
xchg
cmc
push
xchg
ret
push
mov
loop
cmp
adc
scas
andl
inc
sub
inc
sahf
mov
mov
loopne
negl
movsl
cmpsl
mov
push
insb
adc
xor
test
adc
inc
cs
mov
add
pop
add
xchg
xchg
stos
clc
mov
clc
push
fimull
xchg
mov
inc
test
insb
adc
leave
dec
icebp
add
ret
out
mov
or
aas
xor
xor
adc
dec
std
jno
jmp
lret
dec
in
imul
xchg
iret
pop
in
test
fldt
or
jbe
pop
scas
dec
loopne
mov
std
aaa
sub
sub
or
dec
aad
das
mov
ror
mov
enter
iret
and
dec
add
outsb
adc
into
dec
xchg
in
push
imul
sbb
insb
in
lds
dec
fldcw
cmpsb
add
push
pop
dec
iret
aad
sub
adc
imul
enter
inc
mov
leave
or
or
sbb
jbe
hlt
jne
repz
clc
pop
add
push
icebp
ja
push
mov
cmpsb
das
mov
outsb
adc
mov
mov
int3
xchg
scas
ret
lods
cs
ficomps
xchg
lds
and
out
loope
ret
sbb
inc
lock
mov
xorb
mov
push
inc
cmp
in
inc
push
imul
js
pusha
adc
cmp
sub
cmp
fistps
mov
add
xor
stc
ret
or
fst
lds
cmc
aam
addr16
xchg
push
loope
sub
and
ja
fsts
loop
imul
pop
or
mov
loope
mov
or
cmpsl
clc
int
adc
mov
ljmp
mov
mov
mov
jno
push
xchg
lock
ljmp
cmp
scas
xor
js
aam
pusha
cmp
push
jno
aas
repz
sahf
xor
xor
mov
jle
movsl
mov
fisubl
mov
scas
js
aaa
jne
das
in
and
pop
or
aam
and
fcomps
outsl
pop
rol
mov
es
dec
or
pop
pop
iret
and
mov
xchg
and
dec
add
mov
pop
mov
shrb
add
shll
imul
mov
inc
es
std
cmp
imul
mov
and
jae
inc
mov
push
ret
rclb
loop
mov
push
xchg
dec
sbb
xchg
sbb
dec
and
or
add
mov
mov
cmpsb
inc
xchg
dec
stc
adc
mov
adcl
jno
hlt
mov
ljmp
sub
pop
pushf
lock
cld
sbb
jno
mov
pop
dec
jge
xor
add
lds
adc
push
fimuls
sub
stos
cmp
pop
or
outsb
jae
add
scas
add
pop
lcall
xchg
stos
add
mov
lock
adc
loope
dec
scas
repz
out
fbld
jno
cmp
sar
pushf
add
dec
add
jp
stos
pop
imul
shrb
mov
in
es
shll
fcom
imulb
add
repz
mov
data16
lret
add
enter
xchg
pop
push
shll
cmpsb
pop
mov
call
fwait
pop
clc
outsl
stc
add
cmc
fs
dec
mov
pop
sbb
sahf
in
iret
mov
sbb
mov
icebp
ret
and
mov
xchg
add
test
push
sbb
mov
dec
test
test
jne
jge
mov
jp
test
cs
xchg
xchg
push
mov
pushf
fsubr
mov
cli
arpl
mov
xchg
sub
or
out
pop
push
jb
cmc
xchg
mov
sbb
sbb
adc
and
repnz
sbb
mov
pop
scas
pop
jecxz
sub
inc
jns
lods
or
sub
mov
test
mov
clc
cmp
arpl
mov
gs
pop
jo
movsb
stos
fwait
loopne
pusha
aad
pop
mov
adc
xor
mov
dec
xor
cmpsb
mov
out
fsub
loopne
loopne
adc
dec
xchg
out
push
sbbl
sub
jno
daa
sahf
cmpsb
movsb
pop
cs
pop
je
push
push
mov
dec
je
or
hlt
xchg
xor
loop
stc
fiaddl
inc
sub
ss
stos
or
out
dec
push
ljmp
add
push
adc
xor
divb
scas
xchg
movsl
dec
jnp
sub
fildll
cmp
jno
add
cmp
xor
lret
movl
mov
mov
sbb
rol
rcll
push
data16
dec
adc
xor
ds
aad
push
push
sbb
je
aaa
jae
push
mov
cli
inc
xchg
jne
xor
fwait
inc
out
lea
fsubrl
sbb
test
roll
push
mov
mov
and
add
cmp
jb
aam
push
sub
add
scas
cmpsb
inc
insl
movsb
push
arpl
mov
and
test
xor
inc
cmp
sub
icebp
mov
mov
pushl
push
inc
mov
jg
xchg
jnp
cmpsl
push
mov
ret
nop
adc
outsl
loopne
inc
das
mov
cmp
pop
push
push
lds
xchg
push
cmp
xchg
test
mov
mov
adc
push
inc
push
pop
lret
add
mov
rcl
cltd
fldcw
xchg
sub
push
sub
push
xchg
xor
fdivs
stc
jg
loope
cmp
enter
xor
dec
mov
imul
mov
mov
shr
test
das
popl
popf
sub
aam
js
arpl
fisttpl
outsb
cmc
adc
add
mov
jmp
fstps
xor
or
incb
xor
es
or
jns
pop
jp
push
mov
add
sub
inc
lahf
dec
sbb
adc
xchg
cmpsb
push
imull
cmpsb
in
push
push
dec
insb
push
pop
aad
nop
lock
lock
inc
pop
aaa
xchg
pop
mov
lock
fsubrl
movb
or
filds
test
out
leave
incb
rcrb
cltd
or
sbb
inc
or
inc
mov
mov
jle
ja
in
out
sub
aaa
sub
cmpsl
push
lcall
jle
int3
sbb
xchg
ljmp
pop
mov
add
mov
adcb
xor
push
dec
mov
cwtl
nop
mov
pop
mov
xchg
push
lods
cli
lret
and
stc
xchg
cs
rcll
sahf
jp
mov
hlt
call
jp
pusha
repnz
sub
pop
je
push
mov
jp
ret
jp
cltd
leave
cmp
mov
mov
sbb
cmpsb
mov
lret
mov
cmp
pop
pop
dec
pop
int3
fsts
xor
mov
lods
xchg
push
ds
pusha
jmp
aad
mov
push
mov
mov
stos
cmp
scas
pop
add
bound
push
test
mov
dec
xor
test
jmp
cld
shrb
xchg
notl
repz
xor
lret
repnz
adc
iret
lods
or
fs
jbe
sahf
sub
sbb
push
pop
xor
sbb
ja
pop
mov
rol
fstl
popf
adc
jl
in
ss
mov
inc
pop
dec
jg
push
push
rorb
mov
jmp
data16
mov
pop
call
adc
ja
hlt
mov
xchg
outsl
dec
jae
psrad
pop
repnz
iret
aaa
push
pop
js
outsb
out
lahf
popf
mov
mov
dec
jbe
fidivl
jno
or
cmp
mov
aaa
bound
lods
and
dec
sub
outsb
and
xor
sbb
dec
mov
adc
or
cmc
ret
sbb
cmp
jb
adc
xchg
pop
pushf
pushf
mov
mov
sbb
out
bound
sbb
ds
lock
mov
sbb
lea
add
addr16
lcall
mov
loop
frstor
mov
ret
test
push
sub
or
pushf
sbb
stos
dec
daa
mov
jae
push
xor
cmp
pusha
clc
mov
dec
and
dec
add
dec
push
sub
aad
xor
popf
push
xor
push
les
xor
xchg
arpl
lahf
mov
pop
outsb
imul
add
lods
jmp
mov
or
jle
sarl
mov
xor
fdivp
jl
mov
cmp
scas
insl
mov
int
mov
mov
pop
movsb
xor
enter
push
test
jnp
pop
adc
leave
mov
adc
movsl
es
or
or
cmpsb
data16
cld
mov
push
fmuls
cltd
pop
push
and
mov
add
stos
mov
stc
repnz
pop
xor
mulb
in
repnz
cltd
jbe
and
sub
xchg
inc
pop
jge
in
fldl
and
arpl
or
xchg
lock
fxch
cmc
mov
jg
mov
inc
fwait
rcl
adc
cmpsl
jb
int3
dec
cmpsb
xorl
xchg
cmp
push
sahf
jmp
test
cltd
pop
add
not
mov
stc
jp
mov
leave
cli
mov
pop
rol
xchg
inc
mov
insb
popa
or
push
and
ss
jnp
loopne
or
iret
xchg
jns
popa
js
fwait
pop
in
loope
lock
mov
jns
pushl
mov
dec
insb
insl
out
cwtl
hlt
enter
cmpsb
push
push
and
dec
icebp
pop
pop
xor
mov
rolb
dec
mov
sbb
aas
ficoml
xchg
sarb
aad
outsb
xorl
mov
in
xor
movsb
cltd
or
pop
jae
jp
cmp
mov
imul
lret
decb
ss
inc
inc
data16
pop
cmpsb
add
pop
inc
ss
lahf
lahf
mov
ss
outsb
lds
jb
sub
xor
sbb
hlt
mov
arpl
rcll
sbb
pop
pusha
cmpsb
mov
inc
xchg
push
clc
xor
cltd
pusha
in
xor
js
lahf
xlat
inc
stos
mov
pop
fcompl
inc
aad
and
mov
sbb
imulb
outsl
mov
mov
xchg
enter
push
adc
mov
sub
sahf
or
int
sub
repnz
push
push
imul
mov
push
mov
jno
ja
pop
inc
sarl
mov
call
xchg
scas
add
jnp
mov
push
loop
or
add
stos
dec
jge
pop
icebp
mov
sbb
flds
popl
inc
inc
imul
pop
fdivl
mov
jle
and
sahf
cmp
out
sbb
or
test
and
imul
xor
xchg
and
movsl
mov
lcall
jmp
imul
lret
hlt
pop
jbe
loop
xor
push
dec
mov
jl
stc
enter
xchg
xor
pop
sbb
cld
nop
cmc
imull
mov
cli
mov
out
bound
inc
or
scas
fstpl
jecxz
xchg
fcmovu
aam
test
out
pop
aas
dec
fwait
repz
test
lods
sbbb
pop
jbe
push
test
inc
dec
pop
ss
push
and
out
xchg
imul
roll
mov
xchg
fmuls
repz
ljmp
sbb
add
lock
mov
mov
je
push
mov
iret
dec
cmpsl
mov
and
fdivl
inc
sub
mov
popf
fs
jnp
je
push
mov
cmp
dec
ret
lret
into
scas
adc
cmp
outsb
stos
test
push
xor
push
push
sbb
push
adc
imulb
ficoms
imul
repnz
add
andl
inc
mov
mov
nop
shlb
sti
adc
loope
incb
pop
std
in
rcrb
xchg
jge
in
mov
stos
jecxz
dec
subb
mov
cld
xchg
lahf
sub
cld
adc
stos
mov
int3
fsubl
jge
out
jno
pop
mov
cmc
leave
xchg
test
xchg
jne
xlat
sub
jnp
xor
xchg
das
testl
and
inc
push
inc
ffree
scas
aaa
test
inc
inc
dec
or
jo
scas
ja
pushl
mov
sub
hlt
and
jl
xor
out
mov
sub
test
and
cmpb
out
inc
test
andb
jno
stos
ret
pop
mov
scas
cmpsb
das
addr16
and
test
dec
xchg
loopne
jae
and
push
fstps
pop
jecxz
inc
push
pop
in
mov
mov
and
push
fiaddl
or
fcompl
lock
pop
fcmovnbe
mov
test
rorb
loopne
jno
nop
add
xchg
mov
mov
dec
jbe
add
mov
pop
dec
ljmp
pop
mov
mov
popa
mov
cltd
shl
fstpl
xchg
fiadds
cmpsl
js
stos
inc
cltd
xchg
aaa
dec
sahf
data16
jns
in
xchg
in
das
fwait
inc
mov
mov
imul
inc
test
testl
sub
xor
aaa
xchg
aas
rorl
inc
leave
push
jo
inc
imul
or
lret
shll
xchg
xchg
cmp
push
fwait
add
xor
sbb
xchg
jno
xor
xor
mov
lods
mov
mov
out
outsb
jecxz
mov
cmpb
cmc
xchg
xchg
fwait
dec
int3
jecxz
mov
pushf
xchg
adc
add
mov
enter
cmp
cmp
mov
aam
lcall
xchg
mov
jp
ret
nop
dec
cltd
dec
pop
test
negb
cli
adc
pop
mov
sub
jbe
xor
push
std
sbb
dec
fsubrl
push
and
insl
leave
test
adc
ja
mov
or
cmp
stos
mov
pop
jecxz
and
popf
out
das
push
in
pusha
pop
mov
jl
sbb
rorb
dec
or
pusha
pop
push
jg
xchg
iret
pop
mov
inc
xchg
mov
lahf
inc
into
lods
ficomps
xchg
mov
add
cmp
mov
xchg
repz
outsb
mov
or
call
sub
fwait
mov
out
mov
dec
mov
push
jl
aas
fwait
adc
pop
or
ds
xchg
cwtl
popf
inc
lret
add
pop
imul
jge
add
adc
test
gs
mov
sbb
lds
fsub
adc
lds
sub
cs
divl
add
adc
aad
jb
stos
sbb
push
push
sbb
xchg
mov
jmp
jbe
int3
dec
nop
sahf
ret
mov
das
lret
mov
fidivl
mov
aas
sub
mov
or
bound
aam
jg
dec
bnd
xchg
push
push
pop
inc
or
adc
fsubrs
cmpsl
xor
fimull
pushf
mov
sbb
jl
pop
adc
jne
mov
outsb
dec
cmp
flds
flds
sub
cmc
mov
sbb
les
pop
test
test
or
sbb
mov
and
inc
ret
out
pop
inc
mov
mov
fwait
aas
sub
sub
jge
mov
enter
fidivs
mov
push
fistl
dec
repnz
leave
and
mov
lahf
inc
in
xor
call
pusha
push
mov
aam
xor
xchg
xor
jbe
rcrb
js
scas
mov
mov
jl
and
icebp
sbb
rclb
sub
and
ret
lret
cmp
out
test
mov
push
faddl
imul
or
sub
push
aad
test
cmc
or
fwait
mov
into
stos
adcl
xor
mov
lock
add
cmp
pop
in
scas
js
sbb
popa
addb
ret
cltd
jmp
adc
sub
dec
pop
repz
enter
in
jecxz
pop
movsb
inc
repz
mov
xchg
dec
jg
cmpsb
xor
lods
and
ucomiss
jo
xor
aaa
movsb
xchg
popf
es
jp,pt
cmpsl
push
mov
out
pop
and
aaa
stc
jle
out
in
test
push
fnstcw
pop
mov
adc
push
push
sub
std
xchg
lahf
push
mov
pop
xor
aas
aad
push
cmp
push
pop
shlb
imul
and
or
mov
sbb
mov
lds
loopne
sti
push
cmp
xor
adc
test
cmp
cltd
jecxz
and
sbb
adc
jp
cmp
and
fcomps
out
jl
sub
inc
aaa
sbbl
lock
xor
jmp
fisttpl
xchg
out
pushf
cwtl
mov
push
pop
roll
icebp
or
mov
popa
ja
mov
inc
clc
sti
push
add
jecxz
ljmp
sub
xlat
mov
or
loopne
mov
stos
sub
jl
sub
sbbb
outsb
popf
sub
adc
cmp
cmp
mov
cmp
xchg
or
push
and
dec
dec
add
aas
mov
and
or
scas
and
or
push
sbb
inc
push
mov
outsl
movsl
cmp
and
out
lahf
repz
shrb
sti
movsl
or
jne
mov
test
enter
adc
mov
inc
dec
stos
push
push
lret
cltd
jae
mov
stos
sub
rcll
test
jno
xchg
mov
xor
repz
in
jl
jns
mov
mov
in
jg
jmp
pop
inc
repz
cmpsb
aad
add
sbb
xchg
std
pop
outsl
cld
sarl
or
mov
push
jle
popf
lock
cmp
mov
xchg
cmc
negl
into
cmp
cmp
vmovhps
xor
shl
mov
lock
movsb
inc
cltd
ret
ficompl
mov
xchg
in
int3
mov
push
mov
stc
push
pusha
clc
movsl
cmc
add
test
mov
and
sbb
push
sub
inc
jnp
sub
outsl
and
iret
mov
pop
or
inc
loop
fcom
inc
sub
lret
nop
xchg
mov
je
int
in
inc
call
inc
scas
jns
test
inc
jns
fimuls
outsl
inc
or
cmpl
ret
adc
mov
jl
sbb
adc
sub
pop
test
mov
push
sbb
push
outsl
add
adc
mov
sbbb
xchg
lcall
fs
incb
popa
adcl
mov
and
lret
sbb
xchg
cmpsb
aad
dec
movsl
dec
pushf
in
cld
ret
jl
ficompl
xchg
mov
pusha
mov
icebp
push
ficoml
rolb
lahf
iret
mov
and
pop
xchg
les
jle
sbb
mov
xlat
mov
or
jmp
js
add
push
outsb
mov
cmp
mov
pop
xchg
xor
adc
push
xor
mov
out
in
push
cld
popf
push
hlt
iret
fcmovnb
push
fldcw
inc
popa
loope
push
leave
aaa
dec
lock
xchg
or
das
pop
or
mov
fisubrl
int
jo
test
sub
mov
enter
les
jmp
xor
cmp
xor
sub
fdivl
repz
mov
sbb
mov
jnp
ret
jns
sub
xchg
mov
mov
aaa
sub
dec
fbld
xor
add
inc
xor
sub
ror
fiadds
out
xor
outsl
je
fistps
addr16
popf
push
push
leave
sub
sub
mov
xchg
lea
out
out
sbb
call
or
fisttpl
dec
jmp
dec
das
sub
sbb
inc
repz
xor
call
or
ret
popf
xchg
nop
imul
icebp
jne
call
xchg
cmpsb
jno
push
mov
or
xchg
cltd
or
inc
daa
push
int
in
out
cs
xor
dec
jmp
inc
jno
cmp
xor
cmp
loope
nop
adc
int3
push
sub
push
or
les
or
inc
inc
jbe
push
shll
cmpsl
popa
mov
push
lds
arpl
nop
out
jmp
movsl
jo
xlat
subb
mov
and
test
cld
mov
pop
or
mov
sub
add
pop
scas
repz
xchg
push
fisttps
adc
roll
push
notb
loopne
fistl
or
push
xlat
addr16
mov
je
ljmp
call
lahf
dec
add
or
add
or
out
imul
aad
repnz
xchg
repz
cmp
dec
es
lcall
sti
sbb
and
js
lods
cmp
xchg
xchg
mov
pusha
xor
mov
mov
cld
hlt
js
popa
dec
mov
xor
mov
and
sarl
in
icebp
insl
shrl
lcall
xor
push
aaa
sbb
sbb
jbe
cmpsb
mov
and
jp
mov
pop
test
mov
add
add
inc
scas
mov
or
mov
shr
ret
mov
adc
inc
subl
out
jp
sbb
and
dec
ds
hlt
adc
and
sbb
and
loope
sahf
aam
sbb
int3
add
hlt
push
ds
repnz
mov
shrb
rclb
pusha
xchg
and
popf
pop
sub
cmp
aas
and
hlt
arpl
ret
sahf
ret
loopne
inc
fidivl
mov
out
pop
mov
in
jb
mov
in
mov
fnstsw
fisttps
fsubl
gs
or
loopne
popa
dec
push
add
pushf
inc
mov
enter
aaa
xor
add
and
outsl
adc
icebp
inc
test
cmpsl
sub
mov
scas
mov
xchg
and
cld
ret
pop
idivl
xor
xchg
test
push
dec
pusha
cli
fnsave
fmuls
xor
adc
aaa
pop
sbb
push
pop
lret
pop
aaa
pop
jbe
or
and
sub
mov
cmpsl
sahf
or
cmpsl
jae
fnstcw
jmp
bound
mov
sahf
jle
sar
push
push
cli
sahf
or
lcall
dec
es
iret
mov
cli
out
push
jns
imul
cmpsl
icebp
mov
cmp
ljmp
enter
fildll
lar
xchg
adc
lret
sub
mov
adc
int3
fcmovu
loope
inc
addr16
das
cmpxchg
lds
mov
jae
int3
xchg
dec
in
and
dec
cli
bswap
scas
pop
lahf
cmp
lret
dec
dec
ljmp
add
or
cmp
dec
jg
les
cmp
mov
push
test
and
les
enter
pop
cli
mov
mov
lods
notb
js
sti
fcoml
push
mov
add
movsl
in
bound
scas
cmp
cmpsl
jge
dec
stos
leave
inc
imul
pop
shrl
push
fwait
insl
inc
mov
ja
into
mov
das
test
push
lret
call
xorl
mull
mov
cmp
daa
ljmp
outsb
arpl
retw
rcr
push
xchg
cmp
ret
push
aam
mov
mov
add
mov
cmpsl
ljmp
in
and
jno
arpl
test
loope
jb
aas
add
and
aaa
clc
pop
in
add
mov
aad
or
push
movsb
mov
mul
jns
and
ss
sub
arpl
js
jae
jg
cmc
ja
mov
jns
imul
sarl
inc
xor
in
sub
jmp
push
sub
loop
fadd
test
jecxz
mov
pop
hlt
loopne
sbbb
fwait
dec
cmpl
sahf
sarb
and
test
sub
insb
shlb
outsb
bound
lret
mov
fldenv
cld
lds
loope
outsb
sub
sub
aam
cmp
dec
mov
movsl
mov
test
lods
js
dec
jbe
pop
mov
xchg
mov
insl
or
cmpsl
or
inc
lret
pop
lods
in
inc
hlt
pop
call
xchg
gs
out
xor
outsb
aas
dec
pusha
push
out
addr16
inc
push
aam
cs
iret
xlat
orl
fdivrl
aam
lea
push
outsl
cmp
hlt
fildll
mov
cld
lea
or
and
cmpsb
or
test
push
orl
jns
add
xor
fld
stos
mov
pop
xor
mov
push
sbb
dec
push
outsl
insb
mov
cwtl
adc
mov
clc
aas
aas
jbe
inc
sbb
dec
sbb
test
and
or
in
dec
sbb
mov
mov
dec
mov
add
int3
in
mov
mov
loop
add
push
mov
inc
sti
ret
hlt
js
cmp
iret
loop
pop
and
dec
mov
stos
hlt
mov
jno
pushf
cmp
or
mov
sub
int
cwtl
fwait
mov
jbe
sub
mov
push
cmc
push
push
mov
inc
stos
pop
ret
cmc
mov
arpl
fisubs
and
mov
xor
insl
or
call
out
movsb
leave
mov
xor
outsl
jns
call
push
bound
jns
lcall
mov
jno
inc
rorb
inc
nop
push
pop
push
fisubrs
rsqrtps
lea
dec
mov
outsb
xlat
sub
mov
int
pushw
push
fnsave
dec
rorb
dec
jb
popf
cmp
xchg
mov
lcall
sub
enter
jb
lods
adc
mov
adc
cmpsb
outsb
pop
sub
mov
jae
or
sub
xor
ficomps
push
pusha
push
fldcw
cmp
pop
inc
add
in
fistpll
mov
sub
sub
out
sub
ds
in
cltd
lods
sti
jns
into
mov
xor
mov
xor
pop
js
lahf
ds
ss
pop
xchg
in
or
movsl
mov
or
andl
add
loope
jo
cmp
inc
jbe
xor
std
das
ljmp
or
pop
mov
fs
add
sbb
sub
or
jmp
pop
cwtl
xchg
dec
add
lds
data16
cwtl
push
and
xor
gs
int3
jmp
lahf
inc
sbb
lahf
out
xor
xchg
cltd
out
lock
notl
ds
mov
test
adc
push
sub
sbb
cltd
jns
fcoms
pushf
mov
fstl
je
test
mov
push
mov
jecxz
adc
inc
in
repnz
mov
dec
ds
fs
notb
loop
or
dec
jns
pop
xchg
mov
ja
ds
push
sub
push
test
jp
js
push
and
in
addr16
cmp
sub
mov
sahf
daa
xor
jb
xchg
aam
add
pop
lret
addr16
cmp
rcll
pop
stc
test
add
mov
sarb
mov
notl
fisttps
push
rcl
xor
out
nop
stos
xor
in
test
cmp
cmc
daa
divb
and
stc
lock
dec
and
dec
test
ret
push
mov
iret
xchg
and
push
xchg
and
dec
mov
mov
add
ficoml
push
sbb
sti
addb
icebp
jecxz
pop
ret
cwtl
xchg
out
movsb
mov
cmpsb
and
loope
xor
les
push
mov
xchg
xor
outsb
mov
jne
rolb
das
mov
je
or
or
mov
sbb
insl
ret
jbe
sub
xchg
cmp
xor
pop
les
insb
ja
push
leave
adc
jl
sub
push
mov
cmpsl
pop
sbb
push
mov
cwtl
add
dec
jbe
or
jb
add
aaa
xchg
or
hlt
out
adc
pop
push
popf
cmp
xchg
in
inc
sbb
loope
mov
in
adc
shlb
mov
sbb
fwait
popa
mov
testl
das
pop
lcall
push
adc
stos
rolb
ss
enter
cltd
mov
sub
mov
xchg
int3
stos
pop
fcomp
in
rclb
push
fnstenv
mov
inc
fdivs
mov
fisubs
xor
pop
or
jbe
popa
xchg
mov
push
cmp
je
sbb
adc
loope
rcl
mov
jmp
pusha
cmpl
jae
pop
imul
sub
jg
lds
pop
mov
pop
lock
and
jmp
pop
aad
aam
aad
sarl
cmpsb
pop
and
dec
ss
cli
testb
xor
out
test
xchg
push
mov
jae
adc
nop
pop
jge
test
out
push
mov
or
out
inc
pop
mov
imul
out
push
daa
bound
xor
dec
mov
sub
lods
xlat
sbb
call
sub
jecxz
int3
test
in
push
cmp
jle
mov
push
jl
inc
insl
add
sub
and
add
mov
daa
sbb
mov
cmp
mov
lret
push
sbb
push
mov
xor
pop
sub
mov
iret
dec
adcl
insl
sub
movsl
jae
gs
dec
mov
sub
sub
jmp
popw
aas
and
dec
pushf
jns
int3
lods
daa
sub
jns
gs
pop
in
in
fs
sub
push
xor
push
and
add
inc
leave
pop
in
mov
mov
inc
sub
stos
sbb
aam
mov
aas
bound
shll
repnz
mov
in
mov
ficoml
push
cmpsb
jge
inc
pop
call
fistpll
add
rorl
push
out
out
xchg
cwtl
cmc
mov
push
es
adc
insb
push
dec
sbb
cmp
adc
pop
sub
push
xchg
jne
xchg
jno
rclb
jae
jns
aad
shlb
dec
or
stos
pop
fsubrs
sub
jmp
mov
scas
inc
inc
add
pop
sub
pop
aam
sub
sarb
loop
sti
jbe
and
xchg
mov
xchg
mov
sub
adc
sub
aaa
ds
sub
sbb
mov
pop
xchg
adcl
and
add
loopne
fildl
jns
test
adc
inc
stos
mov
aad
in
fcmovne
incb
add
test
iret
call
cli
mov
aaa
adc
rol
push
ret
inc
fwait
mov
dec
stos
ja
or
xor
jl
adc
xor
pop
or
dec
lds
dec
mov
adc
popf
ret
insb
or
xor
xchg
out
xor
push
mov
outsl
fldl
jo
or
pop
pop
xor
cli
mov
pushf
mov
sub
lods
adc
in
dec
cmp
mov
notl
adc
stc
push
mov
add
xorl
ret
ljmp
js
ja,pn
in
cli
fldt
xchg
test
push
inc
dec
or
mov
lock
xchg
loopne
mov
jnp
cwtl
and
adc
ss
aam
ljmp
aad
xchg
pop
xchg
in
xchg
sti
xor
inc
subl
imul
pop
xor
mov
imul
pop
or
es
xchg
cmp
stc
fiaddl
fs
hlt
fldt
mov
shrb
inc
adc
leave
jno
cmpl
rcrb
ds
test
and
push
mov
xor
add
call
push
push
pop
test
sarb
dec
or
pop
out
mov
xchg
mov
loopne
pop
loope
inc
not
outsb
test
loop
lcall
push
lock
fdivr
jne
adc
xor
xorb
or
adc
mov
lahf
stc
es
aad
jnp
jnp
fcoml
cmpl
dec
mov
andb
xchg
subl
test
xchg
mov
lods
loopne
mov
dec
dec
dec
lods
loope
mov
or
movsl
xchg
pusha
push
addr16
ds
jp
scas
inc
push
rorl
jp
shrb
xchg
cmpb
pop
cmp
repz
notb
sbb
adc
dec
aam
faddl
ljmp
adc
xlat
sbb
fidivrs
insl
push
jmp
add
xor
nop
xor
call
pop
xor
xchg
pop
dec
fmull
es
lcall
aad
in
test
int
fimuls
mov
fdiv
jle
sbb
fnstcw
testl
gs
mov
sarb
fwait
mov
neg
mov
stos
xchg
and
jb
cmp
xor
mov
inc
push
inc
dec
fisubs
fsubs
ret
and
aad
mov
push
andb
jns
dec
xchg
push
test
mov
dec
xorb
jb
mov
pop
adc
sub
loop
push
lock
jbe
mov
pushf
ret
dec
jecxz
mov
and
in
jmp
cmp
dec
push
sbb
int3
or
pop
lcall
xchg
popa
clc
adc
gs
dec
nop
ret
push
push
loopne
inc
mov
cmpsb
mov
lods
jg
sbb
scas
clc
pop
adc
lods
xchg
fildll
lods
sbb
loopne
inc
sbb
jne
push
push
inc
hlt
dec
xor
cmp
mov
mov
sbb
clc
inc
xchg
lcall
aam
push
iret
pushf
mov
loop
adc
out
inc
xchg
xchg
jns
dec
jp
sbb
lret
ljmp
mov
add
cmp
aam
pusha
pop
add
roll
pop
movsl
or
cmp
mov
jmp
or
sub
pop
or
dec
jg
mov
and
mov
jg
out
stc
pop
mov
aam
or
jb
push
leave
insl
out
push
stc
inc
stc
push
aam
in
inc
out
sbbl
lret
cltd
js
call
stc
jmp
push
cmp
or
aad
pop
and
ret
cld
xorl
clc
lahf
mov
cmpsb
sbb
rclb
repnz
or
sbb
outsb
mov
adc
mov
lret
ret
pop
enter
inc
fucomip
out
mov
mov
rcl
mov
in
out
inc
pop
loope
push
mov
add
pop
jl
addr16
sbb
push
xchg
pop
int
push
sahf
fcom
push
test
aad
rcrl
add
test
sbb
fst
pop
cmp
jnp
dec
or
hlt
decl
lock
adc
popf
lret
dec
outsl
cltd
fsts
not
in
lahf
cmp
testl
cmpsl
jmp
mov
lahf
mov
movsl
sbb
mov
das
sti
je
mov
fwait
sti
lds
ljmp
sbb
mov
mov
jmp
hlt
repz
sub
xchg
and
mov
mov
insb
and
imul
dec
cmp
sub
mov
mov
xchg
or
aaa
inc
jo
das
iret
cld
bound
pop
inc
int3
or
ret
add
push
popa
fs
shlb
cmp
jnp
adc
rol
adc
mov
rolb
nop
out
popl
fnsave
sahf
pop
dec
push
aaa
push
arpl
add
xchg
xor
fildl
loopne
enter
fdivs
js
fsubr
push
adcl
sbb
adc
leave
cmp
out
scas
mov
adc
mov
outsl
mov
xlat
icebp
cmp
fidivrs
push
mov
fcomi
popf
stos
xchg
in
lret
fnstenv
rcrb
rcr
rclb
push
icebp
cmc
push
jg
addr16
out
push
xchg
dec
in
push
test
mov
lods
add
xor
push
jle
push
mov
jns
dec
xor
cmpl
test
aam
dec
xor
divb
sbb
sub
xchg
xor
inc
jae
incl
xor
mov
mov
aas
fs
mov
sti
mov
stc
movsb
sbb
adc
ljmp
out
cmp
fisttps
movsl
adc
cli
pop
jg
and
mov
roll
je
jb
lock
lcall
lds
outsl
arpl
imulb
jp
imul
int
or
push
sub
test
shl
js
push
inc
into
inc
add
sub
mov
imul
imul
inc
add
xor
pop
mov
lahf
sub
arpl
sub
push
add
push
cmp
mov
lods
or
cli
push
repnz
or
mov
inc
aad
jmp
and
jnp
cmp
dec
mov
dec
insb
std
aam
cmpl
sub
lret
lcall
jl
push
mov
mov
xlat
xchg
nop
dec
cmp
inc
gs
sbb
sarl
in
jl
pop
pop
inc
es
in
roll
stos
loope
daa
insb
into
pop
out
das
pop
or
jmp
xor
in
std
push
int3
iret
popf
jns
dec
push
push
mov
test
xchg
xor
popa
pusha
xchg
pop
aad
mov
rcll
mov
push
fwait
pmulhuw
mov
xor
ret
in
adc
pop
je
xor
out
in
int
sub
aas
aad
add
lahf
dec
mov
sub
sbb
sbb
movl
sbb
jg
stos
or
pop
enter
adc
jg
cmpsb
loop
pop
orl
or
testb
test
inc
jmp
jmp
das
pusha
jb
xchg
aam
mov
fwait
clc
xorl
fcmovbe
and
cld
cld
cmp
xchg
in
test
shrb
inc
dec
push
xorb
out
sub
mov
xchg
or
data16
and
clc
xor
rolb
cmovno
or
lea
clc
pop
inc
xchg
ffree
mov
jo
sub
cmp
insb
pop
adcb
lahf
fmuls
sti
mov
fiaddl
repnz
test
mov
pop
mov
sub
cwtl
jmp
pop
and
cmp
add
push
in
and
pop
add
cmpsb
enter
sbb
add
lret
and
push
sub
call
mov
cld
mov
jmp
mov
lods
or
jae
xor
jb
mov
fdiv
mov
movsl
test
out
outsl
sbb
mov
mov
mov
das
addl
and
sub
jg
es
inc
pop
inc
orl
adc
jns
cmp
dec
mov
inc
sub
push
cmp
les
repnz
cmc
leave
or
mov
mov
dec
xor
test
pop
leave
aaa
loop
bound
adc
and
mul
lcall
jmp
and
sbb
jae
adc
jmp
inc
pop
sti
addr16
int3
or
repz
sbb
outsb
mov
xchg
pop
stos
jmp
and
pop
fdivs
sub
xchg
xchg
xchg
repnz
jno
scas
cmpsl
cli
mov
lds
ljmp
bound
jp
data16
ss
fs
pop
xchg
push
push
adc
or
pusha
int3
adc
add
fsin
push
mov
insb
notl
inc
in
cmc
pop
test
bound
sahf
movsb
pop
push
push
fdivrp
ljmp
notb
outsl
repz
cltd
jno
dec
sahf
or
shl
dec
mov
hlt
aas
sub
jge
clc
mov
int3
jp,pn
pop
inc
int
adc
mov
fidivrl
push
repnz
mov
sbb
adc
repnz
mov
jle
scas
mov
insl
dec
subl
or
sub
addr16
push
or
out
push
sbb
sub
js
decb
mov
push
sbb
dec
jp
sub
pop
and
xor
in
or
add
lret
test
or
xchg
rcl
inc
add
out
test
sub
out
adc
sub
and
fwait
movsb
ss
xchg
aam
les
push
jbe
enter
outsb
adc
ret
sub
ss
cld
cmp
push
or
out
imul
nop
pop
mov
lock
repnz
push
push
and
and
jmp
fldenv
outsl
jne
dec
lret
test
notl
mov
stos
mov
hlt
mov
cmp
scas
cltd
or
ss
push
and
add
inc
mov
ficomps
xchg
dec
xor
fst
sub
jno
push
xor
xchg
inc
xlat
fstps
sbb
stc
xchg
mov
mov
cmpsl
icebp
jg
cmp
sub
adc
push
andl
aas
lds
loop
jne
cmp
sti
hlt
gs
dec
adc
daa
stos
and
shrb
add
push
mov
jb
add
inc
aas
rcl
sub
mov
fisttpll
stc
mov
xchg
push
roll
or
push
dec
cmp
sahf
mov
sahf
out
sti
xchg
pop
jbe
mov
clc
sarl
fldenv
in
in
pop
mov
jbe
mov
add
lret
add
cmp
mov
out
inc
mov
and
inc
or
rcrl
out
rclb
xchg
or
push
gs
insl
pop
sbb
dec
cltd
lock
push
mov
push
pop
push
aas
jl
cld
xchg
dec
mov
inc
jbe
sbb
xchg
fwait
repnz
outsl
addb
jae
push
inc
mov
push
out
sub
sub
sbb
das
mov
pop
mov
cmp
fmuls
xchg
fistpll
std
stc
pop
pop
test
add
rcpps
cltd
gs
jne
lods
test
xlat
js
xor
and
xor
lock
aam
ret
add
xchg
mov
fstps
in
jo
jle
imul
pop
rcll
shrl
mov
inc
std
cmpsl
dec
inc
dec
push
adc
pop
fidivrs
or
mov
sbb
mov
fidivl
sbb
hlt
inc
test
fists
out
cmp
sahf
enter
popf
and
movsl
xchg
cmpsb
jne
popf
dec
add
xchg
jo
insl
xorl
sbb
cltd
or
cmp
lret
lods
push
scas
add
ss
cmpsb
movsb
sub
pop
test
sub
and
clc
test
out
pop
pop
xor
mov
mov
dec
jb
adc
mov
int3
repz
mov
pop
ret
jmp
mov
leave
add
xchg
xor
fistps
xor
mov
push
test
cmp
add
ficomps
aam
or
cmp
popf
mov
int3
addr16
inc
loope
mov
fwait
incb
mov
xchg
lahf
ljmp
sub
xchg
int
mov
test
out
bound
int
xchg
movsb
daa
aad
and
mov
jae
jbe
fdiv
and
fmull
jmp
inc
imul
push
shll
xchg
repnz
call
dec
aam
loope
push
rcrl
outsb
jns
adc
arpl
fstl
lret
inc
sbb
cmc
pop
sub
xor
cli
mov
push
lret
sub
jno
rclb
or
lret
lret
pushf
push
jns
or
in
aam
jmp
adc
cmp
idivl
hlt
pop
dec
or
mov
add
lds
test
sub
flds
dec
pop
mov
sarl
in
rclb
mov
mov
inc
repnz
and
fdivr
or
or
test
push
add
add
in
fbstp
addr16
sti
pop
cs
adc
std
mov
pop
and
bsf
fs
dec
lods
pop
scas
add
push
jl
mov
and
mov
fildl
inc
repnz
xchg
leave
test
fstps
and
ljmp
daa
roll
fdivrl
ret
outsl
mov
dec
pop
inc
lds
cmp
lea
xor
jnp
mov
xchg
push
xor
pop
sahf
jb
cmp
bound
and
addr16
mov
push
push
loope
addb
push
xor
or
in
push
je
std
sbb
mov
pop
inc
fmull
out
xchg
sbb
enter
enter
ds
push
loopne
xor
data16
insb
outsl
lock
sbb
xor
and
add
cmp
sub
cmpb
xlat
popf
inc
mov
push
sub
into
adc
mov
adc
push
shrl
mov
inc
pushf
fistpl
push
arpl
jmp
out
sub
mov
add
cwtl
nop
mov
push
lods
pop
pop
and
mov
cmp
push
sbb
pop
popa
jg
pop
and
adc
mov
jmp
sbb
pop
bound
push
push
les
shrb
xor
daa
push
mov
or
push
orb
sub
aad
inc
cmpsb
pop
out
and
pusha
jl
push
out
je
inc
rolb
into
push
sbb
sbb
pusha
out
in
stos
es
stos
mov
mov
aaa
je
pop
inc
xor
cltd
imull
nop
fnstenv
cmp
lret
enter
and
cwtl
jns
add
and
xchg
mov
test
push
xor
push
cmp
lret
jns
mov
mov
inc
and
push
insl
dec
adc
or
mov
ss
and
mov
pusha
xchg
fistl
neg
dec
adc
dec
sahf
ds
adc
mov
imul
dec
pusha
cli
aaa
dec
paddw
inc
mov
xchg
stos
cmp
mov
or
pop
int3
jo
mov
andl
mov
ss
loopne
stc
adc
pop
shl
push
jp
or
mov
fcomps
jae
adc
cmp
sti
sub
lcall
xor
sti
subl
test
inc
cmp
into
add
dec
pop
roll
dec
jp
movsl
into
std
lcall
jmp
stc
mov
add
out
in
or
fwait
clc
adc
sti
cmp
pop
test
jbe
ja
xchg
repz
xchg
scas
inc
pop
push
pop
nop
clc
repz
mov
jmp
stos
jnp
xchg
scas
ljmp
orb
andl
pop
int3
jno
cmp
cmp
inc
mov
ja
adcl
jmp
decb
aaa
outsl
cmp
cmpsb
ret
notb
scas
mov
mov
pop
add
repnz
sbb
pushf
test
aaa
mov
out
popa
dec
ds
test
and
cltd
insb
cmp
in
test
dec
lods
test
jae
mov
dec
hlt
dec
sahf
lea
mov
jmp
sbb
arpl
adc
sub
fstpl
xor
fisubs
pop
repnz
sub
into
inc
and
or
pusha
outsl
sub
jns
fcmovnu
fisubrl
lods
sbb
pusha
neg
ljmp
dec
mov
fstpl
and
ret
mov
std
xor
mov
pop
divb
xchg
mov
lret
test
stos
lods
push
pop
mov
testl
mov
sbb
mov
enter
int3
adc
dec
repz
cmp
pop
cmp
jne
sbb
imul
sub
fbstp
jmp
sbbb
or
insl
loope
xchg
push
cld
cmp
or
mov
cmp
pop
pop
movsl
orl
out
lods
sbb
lret
es
mov
mov
clc
scas
in
mov
adcb
xor
repnz
inc
adc
cmp
or
or
pop
add
jle
cmpsb
mov
or
lea
adc
ret
mov
lcall
lret
adc
pop
mov
add
insb
add
roll
lahf
jl
or
jp
fwait
scas
repz
inc
out
xchg
in
fwait
dec
imul
or
xor
cmp
pop
xchg
push
cmc
scas
jne
lahf
xor
push
cld
insb
outsb
xor
int
dec
arpl
or
jle
insb
sar
jo
push
pop
mov
rclb
std
jp
inc
push
scas
mov
sbb
test
mov
pop
mov
cwtl
aad
mov
lret
lds
lcall
push
ds
inc
clc
rcrl
xor
jle
sub
add
cmp
xor
and
inc
orl
dec
movsb
sub
in
push
lea
ret
loopne
add
fidivs
subb
scas
push
lret
mov
test
out
lcall
adc
inc
and
mov
xchg
fisubs
sub
cmp
dec
add
cmc
lods
jo
cmc
mov
enter
push
jae
sub
mov
xchg
xor
jae
add
dec
and
imul
jl
and
pop
mov
pop
stc
mov
dec
cmp
jne
pop
add
fld
mov
movsl
sti
lahf
cmpsb
insl
xlat
mov
or
and
ret
mov
jb
lret
xchg
or
loopne
bound
pop
andl
mov
lock
in
adc
es
lcall
fadd
cmp
inc
hlt
aad
pop
jnp
push
dec
mov
mov
push
shl
je
stos
in
xor
fists
dec
sub
insb
rclb
cld
addr16
pop
add
loopne
adc
imul
push
push
cmpsb
jl
imul
icebp
jo
mov
push
rorb
fcomps
into
and
and
int
jmp
xor
movsb
test
loop
mov
or
add
imul
movb
jl
sub
xchg
movl
cmc
cld
cmc
pop
pop
loop
arpl
stos
mov
mov
pushf
lods
mov
jo
adc
adc
xor
jl
das
cmc
push
test
or
mov
mov
push
add
mov
xor
fiaddl
xor
pusha
inc
xor
mov
cltd
inc
xor
mov
cmp
ret
xor
push
stos
jge
adc
pop
cwtl
push
addl
mov
mov
aam
ja
add
jp
mov
out
xchg
cmp
mov
cltd
adc
lods
shrw
adc
xchg
push
sub
leave
xchg
mov
cli
stos
jns
push
ja
inc
lock
push
popa
std
loopne
push
repz
mov
sbb
mov
push
in
in
and
push
inc
repnz
mov
rorb
sub
fstl
dec
dec
mov
test
jle
imul
dec
call
push
dec
pop
dec
les
jp
pop
add
mov
ret
lods
add
sbb
je
cmpl
sahf
lea
pop
jno
into
sub
insl
and
pop
jmp
das
bound
push
fisttps
inc
add
sbb
cli
sbb
stc
xchg
fadds
outsb
lcall
daa
fmul
jg
ds
dec
pop
pop
pop
push
sbb
mov
loopne
shll
call
push
push
jp
push
push
ret
xor
lcall
inc
stos
xlat
pop
pop
push
pop
cmpsl
inc
add
xchg
je
jno
movsb
sbb
cmp
minps
adc
bound
lahf
push
imul
cmp
loop
adc
push
loopne
jno
and
push
das
xlat
je
imul
mov
push
std
add
scas
cs
mov
cmpb
je
mov
scas
xorl
orl
cmp
jb
outsb
add
jbe
mov
sbbb
adc
sarb
pusha
mov
xchg
or
cmp
mov
fcoms
lret
insl
push
mov
repz
aaa
insl
loopne
dec
push
and
xor
sbb
or
adc
insl
loop
sub
or
stos
mov
mov
mov
mov
sub
xchg
dec
push
push
add
jecxz
jb
out
inc
lds
bound
aad
mov
jle
stos
push
lods
push
aam
sbb
add
mov
out
test
sub
adc
sub
pushf
lods
out
pop
dec
inc
movsl
mov
in
cmp
fwait
push
pop
stc
pop
sbb
gs
jecxz
mov
loop
sub
xorl
clc
sahf
pusha
jbe
mov
enter
outsl
ret
inc
filds
push
gs
fld
xchg
or
add
push
add
test
pop
sbb
popf
out
into
pusha
ja
and
sbb
cld
loope
cmp
jmp
push
movsb
fisttps
inc
mov
mov
push
cmp
push
mov
fbld
iret
or
mov
rcll
dec
add
xor
mov
jl
pop
cli
sbb
push
push
sub
and
enter
or
add
lcall
and
repz
jmp
stc
jl
imul
mov
lret
jl
jl
pop
push
clc
or
aad
lret
call
dec
lret
cld
cmpsb
add
and
lret
shll
cmp
or
les
scas
pop
xor
cmp
nop
push
rolb
lods
mov
into
cmc
inc
rcrl
hlt
in
or
jp
mov
nopl
and
ret
lds
fcmovb
popf
lcall
jg
je
lock
adc
int
sbb
dec
fadds
repz
in
xor
es
push
mov
sti
test
mov
lahf
mov
test
add
mov
sbb
testb
dec
pop
mov
mov
loopne
arpl
jb
mov
push
pop
or
xor
xor
aam
lret
jns
and
adc
les
add
aam
mov
mov
cmp
mov
dec
lcall
loopne
push
sbb
int3
dec
adc
hlt
int3
dec
mov
jle
add
pop
je
xchg
lods
pop
das
inc
scas
xor
shl
or
cmp
test
ret
into
cs
test
mov
popf
push
pusha
inc
ja
inc
fcmovnb
or
mov
push
cmp
leave
rcr
jle
aas
jb
push
mov
fisubs
cmp
sub
je
xchg
push
mov
mov
mov
stc
icebp
movsb
jmp
xchg
or
add
test
push
bound
adc
rolb
and
xchg
loop
out
push
sbb
and
adc
mov
cmpb
movsl
add
push
loope
inc
lret
aas
rcl
cs
xchg
xor
pop
cmp
aad
imul
fcoms
and
xchg
xchg
fsincos
shrb
dec
test
iret
or
ss
scas
jne
test
mov
fisttpl
add
pop
pop
dec
xor
or
stos
mov
pop
mov
ja
adcl
mov
lret
pop
cmpsb
int
mov
je
gs
pop
sub
pop
cmp
pop
cmp
inc
add
push
cmp
mov
je
or
fs
xorb
and
and
jg
push
lcall
rcll
adc
cmp
lcall
icebp
inc
inc
mov
pop
add
scas
or
imul
or
fsub
pop
or
or
in
movhps
daa
pop
arpl
mov
fdivrl
cmovno
xor
test
pop
xor
jbe
popa
imul
push
in
rorb
adc
add
addb
cmp
cmp
call
add
pusha
sub
sarb
adc
loope
nop
in
stos
fiadds
jo
psubq
mov
movsb
out
aas
loopne
stos
test
push
hlt
jns
mov
or
insl
xor
leave
mov
int3
ret
dec
aaa
pop
in
mov
aaa
std
fsts
xchg
in
mov
dec
lea
mov
out
cmp
adc
outsb
loopne
into
add
or
aaa
push
scas
sbb
lret
xor
scas
cli
xchg
xor
or
lcall
dec
aas
mov
xchg
data16
mov
mov
in
jle
shl
xchg
and
mov
push
in
iret
add
out
lods
mov
cltd
or
es
cmp
cwtl
aaa
mov
fildl
rclb
ljmp
in
cld
stc
ljmp
jge
testb
push
ds
cmc
mov
mov
iret
sbb
mov
cmc
cmp
loop
inc
in
rclb
fisubrs
sub
ss
pushf
in
adc
out
mov
pop
js
fldt
and
int3
push
add
call
movsb
mov
and
pop
sbb
subb
mov
pushf
mov
mov
and
loop
cld
shll
push
sub
or
fmul
fdiv
inc
sub
jae
fucom
repz
repz
and
loope
jno
add
jnp
leave
dec
enter
or
cwtl
sub
loopne
dec
or
stos
stc
rcrb
adc
push
or
lock
lods
pusha
mov
out
inc
into
jge
xchg
jle
shl
and
in
inc
adc
sub
mov
jno
outsl
pop
pop
int
add
mov
xor
mov
pop
out
xchg
fimuls
pop
mov
repz
xor
mov
fdivrs
and
call
adc
jne
mov
push
xor
popa
mov
or
imul
sbb
fadds
lret
dec
cmp
lods
dec
fsubrl
mov
cmp
mov
stos
cli
adc
mov
xor
inc
loopne
mov
test
ja
lea
push
or
cmpsl
mov
sar
in
jne
push
cmc
pop
mov
imulb
in
sub
cltd
test
sahf
push
mov
orb
movsb
std
icebp
or
imul
cs
adc
xchg
mov
sub
imul
xchg
sub
stos
bound
cmp
pop
mov
cmp
inc
loopne
xchg
mov
or
shlb
jb
sti
inc
xchg
mov
lcall
add
xor
fbstp
jp
mov
imul
cmp
push
fisttpll
stc
pop
lret
inc
xchg
pop
dec
pop
fstl
xchg
xor
cwtl
xor
movsb
xor
xchg
jnp
aad
adcb
mov
das
cli
mov
out
test
cmp
out
out
fimuls
push
push
in
pop
mov
dec
sar
data16
sbb
jnp
cmpsb
daa
mov
imul
sbb
dec
xadd
out
fs
xchg
pop
pop
call
ss
in
outsb
ljmp
popa
outsb
add
ret
je
call
mov
jmp
mov
jecxz
and
jle
xchg
xor
pop
push
in
dec
rorl
mov
push
mov
in
stc
movsl
xor
pusha
xchg
sbb
ljmp
push
pop
sub
das
loope
stos
repz
movsl
add
xor
or
enter
in
xor
gs
bnd
sbb
xchg
movb
addr16
push
mov
enter
sbb
dec
sbb
mov
add
lock
mov
mov
inc
mov
int
mov
or
test
sub
pusha
sbb
pop
icebp
dec
dec
test
mov
push
sbb
jnp
negl
adc
lds
loopne
xchg
sub
cmovge
enter
jno
inc
mov
testl
js
bound
adc
insl
lahf
sahf
push
mov
jmp
loope
sbb
movsl
lea
rol
jg
sub
lds
push
add
mov
jmp
enter
aad
aad
in
jg
add
pop
aam
push
ficoml
out
movsb
jne
sbb
dec
xchg
xchg
stos
pop
mov
mov
xchg
movsb
data16
scas
adc
jp
hlt
lods
fildl
test
sahf
push
leave
out
cld
lock
push
or
push
jne
cmp
in
mov
xchg
dec
mov
inc
fiaddl
lret
xchg
mov
pop
add
cmp
and
insl
cmp
and
jns
xchg
jo
xchg
jo
pop
ret
jns
nop
call
test
push
xchg
inc
popf
stc
test
cli
ror
nop
pop
mov
xor
mov
jnp
jle
jmp
adc
shr
or
clc
cmp
and
or
jb
cwtl
ja
jecxz
icebp
shll
adc
or
ret
adc
in
jns
xorl
jb
mov
xchg
and
cmpsl
popa
ljmp
sub
ss
call
jno
pop
ds
jl
pushf
daa
xchg
das
ds
pop
mov
sti
adc
and
inc
out
sbb
dec
xchg
xlat
mov
iret
xor
sbb
std
outsb
das
int3
pop
out
cld
stc
dec
sub
les
ljmp
hlt
cli
jecxz
inc
push
inc
mov
gs
pop
xchg
in
push
pushf
cs
ficompl
scas
jle
cmp
lret
mov
push
cltd
jl
pop
mov
pop
adc
daa
inc
in
outsl
fistl
pop
dec
lods
sbb
lea
imul
xchg
mov
xchg
xchg
pop
push
add
imul
leave
cmpsb
int3
lahf
out
mov
dec
xchg
loope
out
and
sub
jmp
pop
jg
push
lret
mov
xchg
cmp
adc
cmpsl
fisubs
add
mov
sbbb
iret
je
in
pop
fwait
lea
push
sub
les
sbb
cmpsl
and
and
mov
mov
xchg
test
bound
aam
mov
fsubl
adc
pop
pop
punpckhdq
cmp
inc
adc
mov
push
or
je
jp,pn
popa
rcr
call
and
sar
call
add
out
insl
jns
cs
mov
inc
xchg
loope
and
stos
std
lea
mov
popf
lods
cmp
test
int3
out
adc
cmp
push
or
cmpsb
sub
mov
test
nop
imul
pusha
xchg
ucomiss
cmc
iret
push
inc
jl
mov
lcall
add
arpl
jge
xor
adc
scas
arpl
adc
inc
ret
aam
mov
inc
pushf
jne
loope
xchg
pop
fisubrl
cltd
fwait
inc
adc
sbb
jmp
int
mov
insb
xor
pop
jle
mov
fstpt
fsubrl
mov
mov
cwtl
xor
cmpsb
fidivrs
xchg
lahf
movsb
cmp
int3
add
stos
ljmp
stos
push
add
cmp
xor
mov
sti
hlt
xor
aad
into
cmpsl
mov
push
xchg
cwtl
jbe
mov
cmp
push
pop
in
push
cmpsb
push
jnp
fnsave
loope
or
lds
mov
mov
mov
jmp
or
das
pop
dec
aam
pop
sbb
jp
lods
fcomp
mov
fidivl
or
push
jl
inc
lret
sub
jge
scas
repz
loopne
in
stos
jbe
jg
ss
sbb
jo
mov
inc
ret
out
add
mov
adc
jmp
aaa
xor
jb
sti
loopne
pop
pusha
movsb
sar
or
enter
roll
enter
cltd
outsb
int3
repz
mov
push
xor
sub
out
jae
mov
pop
jp
roll
fbld
roll
jne
mov
pop
data16
imul
jle
out
leave
inc
ljmp
ss
imul
mov
test
jne
test
imul
xchg
inc
dec
scas
lods
mov
rcll
or
mov
mov
clc
addb
cld
les
sub
push
stc
fistpl
sbb
stos
push
sahf
jp
lods
ss
aad
mov
ss
clc
cmp
stos
xor
or
mov
ds
push
push
xchg
fs
int
mov
pop
jno
out
les
stc
outsb
and
mov
cmp
inc
cmp
cli
jae
and
lock
pop
mov
js,pn
inc
sbb
repz
stos
fs
shll
dec
cmp
lahf
loopne
in
mov
sub
aad
or
rol
xor
das
and
adc
sahf
cmp
push
pop
aam
clc
mov
pop
gs
jge
lods
cs
add
xor
ja
imul
pop
push
lahf
push
jb
call
mov
mov
rcrb
daa
mov
adc
out
mov
add
pop
fadds
mov
pop
push
push
repz
call
push
jbe
ja
pop
ror
and
into
and
jecxz
or
sbb
jae
dec
subl
mov
lahf
pop
fistps
inc
push
cmp
test
fwait
or
inc
test
loop
and
xchg
pop
in
dec
sbb
push
push
mov
data16
int3
xchg
scas
mov
mov
sarb
and
mov
push
xor
mov
xchg
and
sub
dec
jg
mov
sbb
push
cmpsb
in
in
js
jae
xlat
sub
mov
mov
fisubrs
push
loop
mov
movsl
mov
fmulp
xchg
and
mov
das
idiv
adc
jb
test
jnp
test
daa
adcb
dec
xchg
insb
aaa
and
sbb
xchg
inc
cmp
jl
aas
out
or
ds
xchg
cwtl
sbb
sbb
mov
rorl
add
js
icebp
inc
repz
bound
pop
movsb
jecxz
stc
xchg
popa
out
jb
mov
jnp
mov
xchg
popf
push
cltd
inc
push
add
scas
xchg
xlat
fstpl
sbb
xchg
repnz
dec
rol
add
aaa
cli
push
shrb
test
out
jbe
iret
aaa
and
lret
sub
pushf
scas
sub
outsl
jno
ret
dec
mov
mov
fdivl
or
outsl
jb
inc
mov
mov
fildl
sub
cld
scas
jne
addr16
jae
mov
faddl
fwait
or
fs
rclb
das
mov
xlat
repnz
fsubrl
aad
or
movl
pop
adc
aam
sbb
fprem1
gs
arpl
outsb
sar
mov
in
outsl
sbb
decb
fs
sbb
cs
lret
and
mov
dec
inc
mov
nop
inc
mov
cmpsl
push
mov
dec
ret
fidivs
into
adc
xchg
adc
lret
jb
icebp
dec
inc
psubsb
movsb
mov
into
subb
push
pop
out
sub
iret
inc
nop
sbb
pop
mov
dec
loope
dec
test
and
ljmp
or
sarl
dec
stos
xchg
les
lret
mov
mov
mov
dec
sti
out
pop
mov
jns
sahf
inc
fsts
lahf
stos
xor
bound
in
sahf
pop
pop
fsubrl
xor
sahf
lea
stc
jmp
fildl
loop
cltd
dec
rcl
repnz
sub
xchg
pusha
ljmp
jne
int3
cmp
orb
mov
add
sbb
sub
or
pop
fwait
xor
push
sahf
dec
stc
mov
mov
push
pop
cmp
or
out
cmp
xor
fwait
add
lods
dec
mov
divl
push
movsb
jns
lret
jmp
popf
xchg
push
arpl
push
xor
mov
or
in
xchg
stos
arpl
int3
test
xor
in
out
leave
test
shll
sbb
add
popa
call
dec
repz
or
jmp
stos
popf
xchg
push
es
fdivs
adc
out
clc
mov
pusha
outsl
xchg
aad
dec
cmc
test
jne
xor
lahf
cmpsb
or
rep
ds
rorb
sbb
push
dec
rolb
cmp
adc
imul
push
adc
pop
sbb
mov
icebp
stos
cwtl
frstor
mov
and
imul
shll
test
les
rcl
mov
lret
stos
ret
mov
mov
jne
rol
and
std
xlat
sbbb
jae
pop
pop
cwtl
roll
adc
call
xchg
mov
dec
inc
cmp
and
ja
enter
sahf
mov
loopne
xlat
xchg
push
mov
dec
mov
jne
push
mov
inc
out
and
push
adc
inc
mov
xchg
repnz
sbb
retw
lcall
mov
ficomps
jl
lret
out
and
mov
loope
bound
loope
and
fmuls
dec
sahf
mov
adc
pop
jmp
addr16
sub
ret
xchg
mov
lea
mov
dec
pop
shr
ss
mov
pop
jge
jp
sub
cmp
xchg
std
mov
sub
pop
cltd
or
test
leave
push
les
pop
xchg
cwtl
push
out
ret
cmp
add
popa
aad
es
jmp
sbb
call
je
stos
inc
icebp
scas
inc
int3
mov
mov
out
push
lret
fnsave
mov
pop
or
ret
adc
sub
add
rclb
ja
sar
out
stc
lock
xchg
movsb
test
ret
pop
lock
xchg
sbb
shrb
lods
clc
sbb
cli
xor
out
push
cltd
mov
cli
mov
std
jmp
mov
jg
int
mov
sub
insl
loopne
inc
cmp
or
fildll
xor
pop
cmpsl
dec
mov
repz
rcl
icebp
outsl
or
mov
mov
into
adc
rorl
insb
pop
mov
and
divb
push
or
and
mov
es
add
es
repnz
xchg
pop
clc
xor
dec
mov
stos
fiadds
les
fsubp
out
cs
arpl
xor
sbbb
sbb
push
inc
lods
ss
les
dec
adc
scas
mov
xchg
push
dec
dec
int3
inc
daa
mov
mov
in
adc
pop
xchg
jns
and
push
test
jnp
xchg
mov
sbbl
xlat
dec
inc
lcall
stos
push
push
or
adc
xor
dec
mulb
mov
es
or
push
adc
out
cmp
aas
ja
cmp
jmp
int
mov
xor
push
xorb
lock
insb
arpl
cmp
decl
aad
stos
cmpsl
rcll
pop
rol
jno
lret
mov
cmp
cmp
mov
inc
stos
or
gs
rol
testl
mov
mov
xchg
je
push
pop
jmp
push
hlt
repz
xchg
jge
mov
cmpsl
xor
push
dec
or
in
or
mov
test
clc
into
xchg
cmp
xor
push
pop
lcall
fists
cltd
out
shl
dec
cmpsb
jb
jecxz
insl
inc
or
daa
push
adc
sbb
xchg
add
mov
fldcw
lret
xor
ljmp
dec
sub
loop
out
into
or
ljmp
fisttps
aas
or
mov
jno
mov
inc
sub
int3
inc
out
mov
jl
cwtl
fidivrl
sub
cmp
dec
xchg
imul
cld
jle
int3
cmp
sbb
xchg
lea
mov
cltd
cwtl
lret
push
jno
xchg
push
mov
lret
mov
xor
push
test
mov
mov
mov
dec
sbb
mov
jne
loopne
jne
adc
imul
inc
shll
sarl
mov
inc
popa
divl
int
add
sub
fdivp
aaa
ljmp
mov
pop
ds
push
inc
addr16
sbb
punpcklwd
pushf
inc
pop
xor
sahf
mov
gs
mov
inc
pop
pop
icebp
mov
or
insl
dec
adcl
lea
mov
push
pop
push
pop
jb
pop
movsl
out
and
out
jle
loopne
sahf
mov
lds
lods
out
mov
jg
pop
aad
je
mov
mov
mov
pop
sbb
push
or
cli
push
sahf
sub
loope
pushf
fcompl
in
lods
js
push
mulb
pop
or
andl
fcmovnbe
pop
movsl
pop
imul
and
mov
inc
or
idivl
sbb
into
cld
clc
push
inc
scas
xchg
pop
test
fwait
jb
test
cmp
sbb
pushf
push
mov
dec
jns
movsb
jg
inc
jmp
dec
movsw
xor
imul
pop
dec
rclb
fsts
out
test
or
xor
pop
or
xor
int3
cmpsb
out
cmpsl
fbld
clc
aas
xchg
std
sarb
pop
roll
sbb
repz
jae
sub
loope
xchg
pop
xor
pop
add
repnz
jp
aad
in
jecxz
cs
dec
pop
dec
inc
mov
leave
std
outsb
or
lock
popa
lock
sub
leave
fnstenv
dec
inc
xlat
cmp
jecxz
push
aam
pop
inc
pop
jecxz
fucomip
sub
aaa
mov
pop
xor
roll
loopne
inc
sub
es
lahf
dec
and
movsl
sbb
loope
dec
pop
ljmp
xchg
cmpl
dec
cltd
mov
xchg
ljmp
dec
arpl
add
push
out
mov
push
fisttpll
notl
pop
inc
pop
pop
cmc
cmc
fwait
lods
lods
or
pop
lods
dec
inc
data16
push
sub
push
cmp
dec
orb
lods
xor
xor
jne
sbb
std
xchg
out
repnz
lock
jmp
test
jmp
and
sbb
arpl
aas
xchg
inc
dec
xchg
lcall
out
test
ror
es
jmp
jge
cmp
mov
out
pop
mov
dec
inc
cs
inc
sbb
lcall
lds
push
cmc
sbb
mov
dec
sub
int
faddl
pop
mov
sbb
aas
hlt
pop
lds
popf
or
sbb
sbb
adc
push
xchg
pop
cmp
testl
add
data16
fstpl
idivl
mov
cmp
push
inc
cs
shrb
add
ja
jnp
sti
in
es
addl
xchg
and
or
iret
jmp
mov
or
cmpsb
inc
in
jbe
or
pushl
add
inc
stos
sti
iret
cld
jnp
imul
rorl
lret
clc
inc
pop
jp
popf
jb
adc
gs
pop
sub
mov
sti
mov
cmc
mov
inc
movsl
and
orl
fwait
sti
jmp
stc
jle
xchg
in
adc
int3
ret
rclb
outsl
loope
sub
sbb
jmp
mov
push
fidivs
into
int3
fsubrs
arpl
call
or
push
aaa
imull
cmpl
loope
int3
sbb
nop
and
lock
pop
pop
rorl
rolb
cwtl
hlt
pop
push
and
and
cld
sub
mov
or
push
push
add
dec
divl
and
cmp
aas
lds
pop
out
mov
lcall
bound
repnz
inc
out
push
jle
pop
sub
movsb
cld
daa
icebp
push
push
inc
mov
push
jecxz
jle
push
pop
shll
pop
push
shlb
dec
sahf
aam
inc
test
shld
mov
push
xor
rcl
sbb
pop
pop
xor
pop
pusha
sub
pusha
xor
mov
inc
jb
cmc
mov
adc
fcmovu
inc
adcb
mov
mov
mov
jb
mov
push
stos
fisubrs
mov
dec
push
out
stos
ficomps
sbb
outsb
sbbl
dec
in
iret
stos
sbb
pop
fstps
jae
inc
rcrl
test
dec
sbb
xchg
xor
jne
push
stos
sti
inc
lods
adc
and
int
cs
loop
inc
inc
cmpsl
pop
out
inc
ret
push
repnz
jno
xchg
sbb
push
aaa
dec
in
jp
jl
lock
xchg
lods
mov
ja
cmpsb
mov
jl
test
ret
xchg
movsl
xor
adc
add
jmp
dec
popf
pop
mov
sbb
cmp
std
movsb
popf
int
jl
cmpl
mov
mov
sub
pop
sbb
and
imul
out
imul
aad
add
test
cwtl
in
imul
lret
test
aam
jo
xchg
or
lods
or
mov
mov
xchg
or
inc
lcall
test
movsl
icebp
cmp
mov
add
mov
or
js
rol
imul
rclb
jp
cmpsb
cmpsb
js
addr16
xchg
cmp
ret
aaa
mov
test
dec
pop
cltd
mov
jmp
xchg
sub
pop
sub
arpl
add
shlb
les
jg
fs
jmp
cmpsb
mov
fwait
ret
seta
outsl
mov
insl
ds
jl
scas
in
shll
jg
sbb
xchg
lcall
loop
in
outsb
cmc
xchg
cmp
sub
mov
sub
cmp
inc
nop
push
push
in
in
or
fdivrs
scas
rorb
xor
lds
push
mov
in
or
or
insl
xchg
in
jmp
test
lea
inc
or
inc
lret
mov
sbb
test
jl
nop
adc
nop
inc
xchg
bound
mov
in
dec
mov
adc
xor
mov
sbb
xchg
sub
pop
mov
add
fisubs
nop
std
cmp
sub
rolb
jae
adc
or
mov
fcoml
mov
fs
mov
mov
adc
pop
pop
mov
test
mov
movsb
aad
add
leave
add
in
xlat
jge
data16
dec
ffreep
cmp
xor
test
imul
pop
lret
scas
test
or
rcrl
cs
cmp
xor
fcmovu
addr16
mov
jge
lods
fsubl
cmp
shll
jl
int3
lods
xor
iret
icebp
fs
clc
push
sti
fisubs
sub
test
add
dec
inc
lret
aaa
rorb
push
insl
or
mov
ds
and
xor
adc
test
repz
fmull
cmp
push
push
lock
push
aam
jb
dec
out
pop
testl
movsl
jecxz
inc
in
stc
pop
idivl
repz
leave
push
ret
shll
add
pop
xchg
inc
mov
xchg
dec
sbb
add
ja
xor
call
mov
dec
sbb
fisttpll
and
pop
mov
out
sub
enter
divb
push
xchg
lock
cmp
dec
push
ds
lret
mov
push
mov
xchg
sbb
jno
pushf
fisttps
gs
jl
cmpsb
inc
add
in
mov
inc
bound
sbb
shlb
lods
popa
rcl
push
or
jo
pop
dec
xchg
inc
outsb
addb
xor
in
push
cmp
popa
pop
fidivrl
nop
into
sbb
sbb
jp
mov
push
jp
jp
inc
je
cwtl
jl
shll
inc
or
sbb
push
loope
movsb
insl
or
hlt
scas
pop
push
outsb
mov
fdivrl
lods
adc
cmp
xor
push
dec
loope
jno
outsl
dec
inc
dec
push
adc
lods
cmp
or
xchg
jbe
mov
ficompl
bound
sti
mov
jb
xchg
mov
and
ret
je
push
xchg
push
push
filds
mov
mov
gs
xchg
cmp
dec
mov
add
sbb
daa
and
je
dec
lcall
mov
bsr
xchg
stc
xchg
cmpl
shr
outsl
fnstcw
push
pusha
and
fdiv
push
shlb
xorl
iret
lret
repnz
pop
jns
out
cmp
mov
rcrl
xchg
cmc
xor
les
add
xchg
xchg
or
je
lcall
sub
push
cltd
das
je
pusha
pop
jmp
push
je
mov
hlt
cli
and
adc
push
ds
xchg
pop
adc
add
mov
and
fldl
add
sub
lods
adc
das
movsl
and
jg
pop
mov
ds
mov
int
leave
mov
lcall
aad
dec
enter
lahf
cld
pop
lea
pop
std
and
iret
notb
loopne
mov
xorb
xchg
dec
and
cli
imul
aam
sar
test
dec
pushf
addb
and
fidivrs
mov
jg
pop
ret
test
test
cmovo
mov
push
outsl
adc
aad
push
and
js
xor
sbb
jns
popl
hlt
jns
dec
mov
and
cmc
pop
mov
sub
add
stos
push
cltd
or
std
xchg
inc
lahf
fdivrl
repnz
roll
mov
sub
ja
mov
int
pusha
add
dec
inc
jecxz
sbb
jnp
xchg
hlt
sub
pop
pop
pop
lea
push
sbb
rcrb
push
ret
cwtl
push
jecxz
sub
ret
dec
orb
outsb
int3
int3
loopne
test
push
out
mov
pushf
rcrl
and
push
outsl
xchg
out
mov
adc
popa
addr16
lods
dec
subb
rol
fcmovnb
mov
xchg
enter
mov
inc
push
mov
adc
xchg
ret
adc
fnstsw
or
nop
sbb
mov
sbb
jo
pushf
lds
orb
je
jl
call
test
push
mov
cmpsb
push
adc
lods
adc
ljmp
push
lds
mov
mov
out
into
lods
xor
and
xlat
xchg
sub
mov
sbb
dec
and
mov
xchg
mov
loope
clc
cmp
int3
bound
xor
stos
icebp
pop
sbbl
popf
or
sbbb
jno
adc
push
or
pop
stos
adc
jp
xchg
xchg
sbb
xchg
inc
add
cmp
pop
icebp
into
jle
cltd
sub
adc
insb
lret
repnz
repz
cmpsb
push
push
popf
es
pop
mov
ljmp
lret
dec
sub
or
or
xchg
inc
test
cmp
