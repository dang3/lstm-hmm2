push
call
ret
ret
aam
cmp
sub
dec
or
push
add
xchg
sbb
in
jb
sbbl
hlt
je
sub
or
test
pop
addr16
dec
jnp
jge
mov
and
or
imul
mov
pop
das
in
jmp
andl
push
imul
std
loop
and
dec
mov
clc
add
inc
mov
iret
addr16
jle
sbb
cmp
lahf
sbb
cmc
sub
scas
mov
adc
mov
cmpsl
and
shlb
fdivs
cmc
decl
cmpsl
std
xchg
mov
ljmp
inc
pusha
or
scas
loope
mov
popa
sahf
cmp
push
cmp
cs
call
sbb
sbb
adc
mov
pop
pxor
mov
lcall
andb
lahf
mov
jb
mov
xchg
and
xchg
leave
iret
int3
lahf
fdivr
xchg
andb
pop
cwtl
addr16
iret
iret
adcl
bound
mov
mov
xor
adc
outsb
aas
pusha
imull
pop
pop
pop
clc
add
push
inc
shr
sti
push
xchg
pop
add
les
push
test
js
push
ret
repz
js
fdivrs
mov
test
mov
inc
test
lgs
shl
cmp
bound
ret
add
fnclex
xlat
int
sub
xchg
fdivrl
stc
mov
sbb
shll
lret
and
jne
repz
movsl
push
data16
je,pt
adc
mov
popf
jp
std
cld
fdivl
adc
jp
hlt
and
pop
inc
adc
mov
mov
mov
mov
jg
mul
xchg
popf
test
mov
dec
push
sbb
pop
std
mov
jbe
test
cwtl
out
push
movl
add
out
jp
sarl
rcrl
out
stos
pop
jne
rclb
jl
testl
fiadds
inc
dec
cmp
or
rolb
hlt
sub
in
aam
xor
lahf
mov
bound
add
xor
mov
je
or
lock
push
cmpsl
mov
pop
jg
cmc
lea
call
jmp
mov
std
pop
es
test
pop
fwait
add
out
popa
xor
jmp
nop
sbb
fsubs
rclb
insb
scas
pop
lods
dec
sub
clc
mov
adc
mov
cld
or
rcrl
mov
outsb
cmp
je
pushf
mov
push
push
dec
fmuls
dec
out
insl
fsub
xor
dec
scas
std
or
adc
ror
lcall
mov
cmc
aaa
shrb
out
insl
mov
add
add
shlb
pop
or
loope
bound
nop
adc
sahf
fdivrp
fidivrs
les
xor
push
inc
insb
mov
jp
lods
pushf
orl
in
add
cli
mov
add
or
movsb
mov
test
mov
je
cmp
pop
jp
pushf
movsb
aaa
fiadds
ret
mov
or
xor
sub
mov
iret
push
xchg
negl
sbb
xchg
inc
jnp
inc
jbe
les
ret
cmp
scas
cmp
push
loop
jne
lock
test
sub
aas
cmp
mov
rclb
mov
pop
cmp
jp
test
jge
push
sub
mov
subl
ja
sub
push
in
mov
jecxz
mov
adc
xchg
repz
mov
xchg
add
daa
call
xor
xchg
insb
lret
pop
jmp
lar
push
cmc
aas
jb
out
int3
es
jecxz
sbb
xchg
mov
fwait
mov
out
sahf
sub
push
xor
xchg
lods
out
shl
and
inc
in
shll
lock
das
mov
fs
add
shrb
jmp
leave
loop
xchg
pop
std
movsl
pop
inc
test
sar
dec
repz
add
and
ja
dec
subl
arpl
xorb
aas
mov
dec
enter
adc
pop
jnp
cmp
push
and
andb
int3
pushf
lret
test
in
out
sub
push
out
or
subb
sti
push
rclb
cmp
aad
stos
pop
xchg
test
es
scas
jmp
int
or
aam
adc
or
adc
dec
stos
sti
scas
cmpsb
andb
seta
mov
sub
push
sbb
push
adc
cmp
or
cmp
cld
dec
jo
aam
stos
jecxz
test
push
out
and
push
xchg
fbstp
sahf
mov
stc
xorb
sub
sbb
in
insl
xchg
dec
int
int3
cmp
in
push
or
addb
sbbb
in
repnz
and
lret
mov
or
mov
push
out
cmpsb
insb
add
jecxz
jg
jle
popa
sbb
pushf
ret
jo
xlat
insb
loop
pushf
xchg
imul
sti
push
sahf
shll
enter
mov
repnz
or
rcrl
loop
pop
test
nop
test
mov
add
out
das
std
push
adc
call
mov
pop
add
out
clc
mov
dec
ss
pop
test
ror
out
shlb
jb
jmp
fldcw
xchg
sar
pop
faddl
mov
sbb
mov
leave
add
add
dec
jmp
lahf
push
adc
push
iret
xchg
mov
jb
sbb
ja
fldcw
jno
xor
lret
data16
mov
and
sbb
dec
dec
lock
movsb
inc
pop
push
jae
sbb
and
int
dec
idiv
push
jae
xor
mov
mov
lock
daa
repz
cmp
xor
js
xchg
adc
fwait
pop
or
dec
cmpsl
mov
daa
mov
jb
inc
xor
mov
and
outsb
sbb
iret
and
aas
and
sbb
sub
add
and
loop
popf
shl
mov
data16
insb
out
pop
pop
jnp
test
subb
gs
mov
pop
int3
and
jge
sub
mov
lea
push
sbb
push
mov
lret
adc
sbb
ffree
mov
mov
jb
push
cld
inc
stos
vpcomd
xor
push
scas
and
mov
js
in
mov
nop
and
xor
bnd
call
push
push
push
pop
sbb
push
and
inc
jnp
lahf
cmp
pop
mov
pop
xchg
pop
xchg
insl
into
cld
xor
rolb
dec
jns
loope
imul
fisttpl
sbb
sbb
pop
or
subb
iret
cmp
into
adc
adcl
jl
mov
xlat
cmp
insl
in
xchg
test
pushl
adc
call
pop
and
push
loope
push
int3
and
pop
sub
dec
test
and
mov
or
jge
shlb
bound
sarb
lcall
jl
push
mov
xor
in
mov
or
push
cmpsl
xchg
mov
xchg
sbb
mov
aas
sub
cwtl
rclb
icebp
sub
push
mov
je
loopne
pop
imul
hlt
cmp
ja
cmp
and
scas
adc
dec
mov
jo
ljmp
push
pop
mov
mov
sbb
fadds
pop
ja
mov
in
test
scas
pop
enter
dec
sub
inc
scas
test
xchg
mov
test
push
push
mov
call
push
mov
sahf
roll
push
pusha
cmpsb
mov
enter
cmpsl
mov
inc
les
fwait
and
mov
icebp
xchg
lods
sbb
inc
lods
cmp
roll
push
bound
jae,pn
enter
cld
push
pop
pop
cmp
in
inc
repz
into
lret
pop
je
sub
insb
mov
add
pop
iret
cld
bound
mov
sub
icebp
pop
rcrb
pop
fst
mov
repnz
or
push
adc
dec
cli
int
sbb
ret
fisubrs
mov
dec
imul
ja
insb
rcrb
xchg
insb
bound
mulb
jno
push
push
push
test
neg
pop
add
adc
call
cmp
inc
shrb
ret
loopne
jno
and
dec
sub
cmp
xchg
or
lcall
or
mov
mov
xor
aam
xchg
mov
out
and
push
call
push
sbb
lea
ljmp
xchg
push
insb
add
sbb
sub
shrb
inc
sarl
int
adc
loop
push
mov
js
mov
scas
jle
add
sbb
int3
lahf
test
pop
pusha
movsb
addr16
adc
xchg
cmpsb
and
pop
push
dec
jge
add
aaa
shlb
xor
and
scas
add
push
jmp
scas
clc
or
lret
imul
out
fadds
imulb
add
ja
aas
mov
add
in
into
inc
push
pop
pop
or
cmpsb
mov
inc
cmc
jecxz
fisttpl
xchg
rorl
pop
push
mov
in
sbb
inc
in
fimuls
enter
push
push
cmpxchg
jb
inc
sbbb
sbb
inc
adc
lds
jns
mov
data16
inc
cld
cmp
scas
xor
test
xor
cwtl
jns
xchg
insb
pusha
out
sub
xor
test
push
test
cmpl
xchg
adc
aas
lds
jb
ds
xor
test
mov
inc
cmp
in
xchg
adc
fstpl
inc
pop
test
out
mov
sahf
int
mov
mov
into
xchg
cltd
add
mov
inc
rorb
sub
sti
and
std
loop
movsb
add
out
inc
and
or
dec
jl
push
scas
es
push
xor
adc
pop
adc
or
adc
mov
insl
gs
xorl
add
xchg
xor
add
scas
popf
cmp
jns
lcall
aam
int3
jnp
dec
xor
sub
lahf
add
aas
imul
lods
lret
jp
cmp
sub
popa
xchg
out
push
test
sbbl
jmp
es
sbb
scas
mov
add
jbe
frstor
icebp
lret
clc
dec
and
rcrl
and
sbb
test
dec
dec
lds
adc
xchg
daa
push
ss
xor
std
pop
fwait
xor
mov
imul
fsubrs
inc
into
jb
arpl
jno
js
push
inc
jg
xchg
adc
fcmovnbe
xor
rolb
hlt
loopne
out
nop
por
mov
cmp
enter
adc
iret
mov
ja
add
lea
add
jns
pusha
inc
mov
lcall
inc
inc
cwtl
daa
jmp
mov
aam
push
dec
jp
cmc
out
sahf
mov
jp
cmpsl
jle
test
addr16
jno
push
dec
adc
xor
lods
ljmp
clc
fnstenv
aad
jns
inc
xor
aam
and
inc
fwait
std
fbld
addb
in
push
pop
mov
fimull
pop
sbb
inc
and
inc
mov
and
fisttpl
mov
shl
add
cmp
scas
dec
fildl
cmp
jl
inc
xorb
inc
xchg
mov
pop
and
mov
stos
inc
outsb
clc
ror
inc
inc
xor
mov
adcl
sub
data16
popf
and
lret
mov
loope
nop
adcl
xor
clc
test
or
or
xorb
pop
sarl
cli
inc
inc
and
inc
shrb
inc
gs
mov
inc
inc
leave
fcoml
shll
rolb
lea
shlb
cli
or
adc
dec
jns
lcall
daa
rclb
sub
inc
sti
sbb
jmp
out
mov
leave
mov
xchg
inc
stos
lahf
mov
bound
inc
mov
and
int3
das
pop
scas
xchg
xlat
lret
push
pop
mov
bound
fisubrs
neg
frstor
push
out
sub
dec
pop
std
cli
ret
aaa
fimull
fisubs
ljmp
lods
imul
xor
or
and
loope
push
adc
sub
shlb
call
pop
mov
and
lret
adc
insb
adc
or
add
mov
lds
cli
xchg
leavew
push
lea
mov
stos
clc
dec
lods
sti
cmp
or
gs
mov
xchg
pop
adc
sub
leave
mov
in
adc
cmpsb
pop
in
jge
rclb
mov
pop
sarb
sub
mov
xor
xorb
pop
pop
push
lret
pop
or
jo
xchg
and
xchg
sbb
xor
or
dec
gs
jne
scas
ljmp
xchg
sarl
stc
aas
loope
push
add
or
rolb
cmp
mov
jo
ficoml
mov
fistpl
mov
ds
sbb
adc
mov
and
inc
shlb
adc
mov
lret
mov
xchg
andl
mov
inc
push
out
mov
sub
xchg
cmp
fbld
push
shll
push
inc
rorl
int
mov
or
sub
push
rolb
or
out
mov
lds
xchg
add
test
test
or
dec
movsb
xchg
fldl
repz
pop
add
jne
mov
gs
aaa
jae
ror
inc
pop
push
and
les
push
and
fs
dec
subb
lods
into
inc
scas
iret
xchg
rorb
fidivrl
mov
cld
mov
jmp
fldl
loop
ret
mov
divl
push
xchg
fwait
sbb
inc
test
mov
push
xorb
mov
ret
popf
jp
mov
mov
out
jo
sub
imul
dec
adc
les
ljmp
nop
addr16
mov
fldt
ret
popf
xchg
fwait
aam
pop
mov
and
xor
inc
lea
pop
imul
rclb
jno
xor
rcrl
lea
mov
enter
pop
xor
add
adc
ds
jno
pop
shlb
adc
xchg
xchg
movsb
cmp
dec
push
jb
cmp
adc
push
mov
jns
xor
pop
jecxz
adc
xor
sbb
xchg
in
adc
insb
adc
jp
cli
movsl
inc
addl
loopne
into
mov
es
jle
rcll
adc
pop
sbb
mov
idivl
jmp
mov
and
cmpsl
mov
mov
aad
or
or
ja
inc
and
arpl
xchg
in
jg
cmp
pop
adc
xchg
adc
aas
fisttpll
push
sub
loop
dec
adc
or
mov
fimuls
subl
daa
dec
je
lret
jb
mov
jge
add
cli
es
mov
sub
imul
es
andl
lcall
ficoml
xchg
repnz
jb
jmp
rolb
movsb
stos
push
aam
clc
lret
xor
sub
lea
cltd
inc
cld
mov
lret
mov
adcl
imul
cli
and
insb
icebp
pop
mov
pop
aaa
adc
or
ljmp
cmp
sub
add
push
outsl
jbe
add
shrl
sarl
xor
cwtl
or
xchg
cli
pop
out
push
clc
pop
or
leave
add
mov
cld
dec
mov
dec
lret
add
xsha256
mov
mov
cltd
push
lahf
cli
sahf
das
xor
push
adc
xchg
mov
mov
and
push
inc
das
mov
inc
mov
fwait
insb
cmp
aam
jbe
lret
test
in
and
adc
jns
in
cld
cmp
arpl
subl
test
sub
jl
lcall
push
push
or
iret
inc
popa
sbb
out
leave
lds
repz
xorb
test
and
jmp
xor
adc
sbb
inc
and
out
pop
lcall
test
sub
test
out
js
xchg
xor
leave
out
sahf
mov
or
lods
push
leave
cli
ret
sub
call
inc
mov
dec
scas
ss
sbb
lret
mov
outsl
shl
xor
test
lcall
in
jge
pop
xchg
mov
popl
stos
cwtl
aad
adc
inc
inc
pop
push
sbb
cmp
sbb
mov
xchg
ljmp
add
es
subl
pop
ficomps
std
scas
stc
clc
idivl
mov
xchg
aas
fadd
xchg
in
add
ljmp
mov
fstpl
or
fsubrl
test
sub
xor
cli
cmp
movsb
push
int3
cmp
fwait
sbb
mov
mov
ds
inc
iret
inc
shlb
subl
and
shlb
sub
scas
lcall
int3
jns
fs
push
push
les
lcall
dec
in
icebp
ss
adc
pop
cmp
ss
sahf
push
jg
inc
mov
test
push
sub
repz
dec
mov
inc
sbb
jbe
or
pop
xor
xchg
xchg
fwait
jmp
int
insb
cmc
mov
inc
enter
icebp
push
xlat
push
or
inc
icebp
push
sub
add
shlb
add
jae
cld
push
or
xchg
addr16
cli
int
movsl
push
inc
test
lods
popa
add
pop
adc
sub
adc
jo
gs
stc
mov
sar
sbb
push
pop
mov
data16
jnp
push
repz
xor
imul
sbb
test
mov
in
je
sub
jge
xchg
adc
test
inc
mov
cld
pop
sbb
scas
loope
stos
pop
inc
xchg
daa
cld
adc
mov
xlat
loope
in
jmp
shll
xchg
mov
call
daa
pop
mov
pop
arpl
push
cmpsb
mov
xchg
lods
mov
frstor
inc
jbe
insb
shlb
cmp
bound
jne
push
scas
sub
jp
push
mov
mov
dec
sub
shl
mov
inc
fistpl
pop
push
add
adc
insb
subl
jp
dec
mov
shrl
rol
sub
or
pop
add
jb
cld
mov
push
std
and
shl
insb
es
les
adc
imul
outsb
fnstsw
jo
mov
push
xchg
mov
sti
xchg
rclb
mov
fwait
sbb
call
fmull
dec
add
xorl
mov
pop
mov
xchg
into
adcb
xor
dec
imul
test
fwait
in
mov
pop
movsb
jl
aam
or
es
jmp
dec
hlt
xor
mov
cltd
jns
enter
shl
int
mov
test
movsb
lods
jmp
das
push
in
mov
addr16
push
xor
sbb
inc
jg
cld
mov
sub
test
lock
je
xchg
call
lahf
sbb
sbbb
lahf
fimuls
int
or
stc
test
adc
test
sahf
sbb
icebp
push
pop
or
sub
inc
sub
sbb
push
and
push
pop
movsl
and
lret
pop
or
bound
xor
out
les
mov
mov
dec
adc
bound
out
adc
iret
icebp
rolb
sub
xorl
xlat
dec
mov
adc
inc
xchg
das
xchg
lret
mov
stos
lret
pop
pop
into
jp
inc
add
call
push
enter
icebp
or
fstpl
xor
icebp
mov
sbb
cmp
xor
cmp
inc
jle
pop
dec
xchg
or
cltd
add
pop
movsl
fwait
mov
mov
mov
add
push
jg
xlat
pop
mov
cltd
dec
sub
lods
push
fistl
jg
mov
pop
mov
gs
lahf
cmp
sub
dec
sahf
jmp
scas
cld
out
jns
push
jg
ret
mov
xor
outsl
fstpt
jo
pop
lahf
and
leave
jnp
aam
and
mov
push
mov
sub
ja
fiadds
dec
xor
pop
data16
adc
inc
pop
pop
out
addb
jns,pt
xor
adc
adc
adc
pop
testb
cld
lret
mov
dec
mov
incb
jle
cwtl
sti
rclb
movsb
mov
jne
xlat
or
in
cmp
xchg
cmpsl
xlat
xchg
ljmp
aad
push
add
adc
aad
jb
scas
mov
or
fcmovne
ret
cmc
add
push
les
adc
cli
jb
lods
mov
subl
or
adc
imull
loope
or
lock
ss
pop
fcom
cmovo
jge
mov
add
pop
mov
insl
add
pop
fwait
sub
xchg
arpl
dec
ret
pusha
mov
popf
adc
rorb
test
daa
int3
mov
jns
insb
sbb
fisubrl
jb
and
pop
outsb
lods
xchg
ret
int3
xchg
sbb
mov
xor
xchg
std
stos
xor
cmpsl
adc
scas
push
and
shll
cmp
sub
hlt
and
add
pop
ljmp
adc
sub
movsl
test
aad
loope
adc
lret
mov
mov
lods
inc
icebp
clc
popa
ss
testb
pusha
inc
push
cmp
jp
pop
int
aad
imul
into
dec
sub
jae
push
mov
incb
out
mov
sbb
xchg
pushf
mov
push
scas
mov
dec
mov
leave
xor
dec
mov
mov
or
xchg
out
mov
and
xor
xchg
adc
outsb
dec
leave
scas
sti
std
int
sti
dec
es
bound
pop
mov
lods
mov
sub
icebp
jle
mov
rolb
pushf
mov
icebp
add
xor
out
mov
sahf
imul
insb
push
call
pop
in
sbb
imul
mov
and
and
repnz
nop
jge
mov
std
push
cwtl
dec
loope
stc
fisttpl
ja
clc
lret
sub
jl
sbb
jmp
inc
mov
xchg
and
cmc
xor
adc
lret
mov
push
inc
lcall
loope
push
or
adc
xchg
xor
inc
mov
clc
das
sub
adc
aad
push
outsl
push
int
imul
xlat
and
xor
addr16
push
or
mov
loop
cmp
push
int
sti
movsb
int
call
mov
pop
push
fimuls
sbb
loope
test
leave
lea
mov
xchg
movsb
test
inc
jnp
xor
dec
stc
or
scas
lods
div
insb
jb
fdiv
pop
in
sbb
sub
sub
es
les
cwtl
data16
lret
xor
arpl
out
jmp
cltd
pop
or
adc
out
mov
sub
cs
jnp
xor
insb
push
or
les
push
cwtl
mov
pop
pusha
jle
mov
sbb
sub
insl
pop
mov
icebp
xor
loope
mov
std
mov
jle
in
jb
mov
and
add
cmpl
inc
sub
mov
outsl
push
loopne
fldcw
leave
fdivrl
pop
nop
in
mov
pop
jb
imul
insl
scas
inc
cld
stos
pop
test
in
jge
pop
adc
jecxz
mov
leave
outsb
jnp
cs
adc
jbe
es
mov
subl
push
push
xchg
cli
into
pop
lods
outsb
ret
out
sub
and
pop
xor
and
push
mov
rclb
push
push
js
and
sbb
andw
ds
add
ficompl
lock
in
rcrb
jno
subb
repnz
xchg
jp
push
inc
shl
dec
popa
or
leave
arpl
jmp
pushf
sbb
sahf
repz
das
cmp
jp
xor
testl
mov
cwtl
roll
xor
xlat
pop
aaa
fistl
test
or
pop
sarb
sti
insb
cmpsb
out
push
mov
cmp
jg
dec
cmp
jmp
pop
popf
insl
in
xor
insl
orb
inc
lock
int
and
cmc
adc
addr16
push
adc
ja
outsl
xacquire
jecxz
scas
lock
dec
adc
push
jb,pt
pop
cmpsl
sbb
mov
cmp
jns
dec
loopne
lds
and
jb
popa
ss
jmp
in
jb
popf
mov
movsb
in
pushf
inc
andb
in
pop
adc
adc
pop
cmp
push
aam
ret
jecxz
and
lret
add
and
add
enter
shlb
xor
sub
mov
push
dec
jecxz
ds
inc
sub
rorl
mov
mov
xor
idivl
xchg
in
roll
mov
in
insl
imull
cs
stos
pop
fdivrl
push
mov
in
mov
or
push
mov
rorb
pop
data16
xchg
cmpsl
pop
nop
inc
pop
and
mov
leave
fcmovbe
pop
xor
mov
jmp
mov
mov
arpl
pop
mov
ja
and
push
cmp
into
aad
adc
pop
inc
je
dec
jle
insl
xchg
outsb
sbb
or
inc
pop
add
mov
push
push
sbb
mov
scas
mov
xlat
insb
scas
inc
sub
pop
lock
mov
and
addl
jl
mov
ror
dec
dec
popa
dec
mov
inc
xchg
jae
jnp
scas
mov
sub
cmc
fldt
sub
lahf
cmp
scas
xchg
xchg
pop
xchg
lahf
cmp
notl
rclb
mov
dec
push
cmpsb
pop
jg
xor
xlat
mov
mov
adc
dec
jno
fwait
add
in
mov
push
int
adc
sub
aas
and
sub
sub
dec
mov
add
xchg
out
fsubs
into
fs
testb
xchg
push
dec
loopne
test
dec
ds
push
add
sbb
dec
xchg
pushf
jo
adc
cltd
and
cltd
mov
je
push
insb
sbb
into
mov
leave
ds
jg
jo
sub
xor
add
cmp
dec
fs
adc
sub
mov
pushf
jg
cmp
mov
movsb
inc
and
mov
push
test
adc
es
clc
pop
cld
les
dec
stc
aas
sti
cmp
cwtl
and
mov
icebp
adc
mov
and
add
sbb
cmp
dec
mov
sub
xchg
ds
int
mov
pop
dec
ror
mov
mov
jge
fwait
adc
sub
pop
mov
lock
inc
arpl
adc
sbb
cmp
inc
test
shrb
in
ja
int
pop
push
stos
pushf
lahf
sub
add
or
xchg
stos
bound
cld
stos
sub
mov
stos
sub
loop
in
std
dec
mov
pop
jae
push
sub
mov
sarb
xchg
divb
stos
imul
cmpsb
cmp
in
sbb
shll
stc
sbb
dec
pop
sbb
push
clc
mov
jnp
aam
out
jmp
pop
test
fistps
into
in
int
xchg
movl
rcr
sti
inc
or
in
jns
sub
pop
pop
mov
and
mov
and
fistl
xorl
stos
adc
jle
frstor
fldl
pop
call
mov
mov
push
cmp
dec
xchg
fdivr
cltd
lods
leave
addr16
out
xlat
rcl
scas
aam
mov
insl
fldl
ficomps
cmp
sub
mov
xchg
xchg
add
xbegin
push
add
push
lret
sbb
stos
jno
pop
inc
adc
push
or
pop
xor
xor
mov
cmpsb
notb
cmp
mov
jecxz
es
push
enter
xor
lcall
imull
sub
inc
lds
fsubr
in
jbe
push
ds
push
incb
xor
jbe
or
andl
adc
jecxz
jecxz
inc
fisubl
xchg
test
push
xchg
cwtl
aam
aaa
sub
mov
adc
ljmp
mov
dec
pop
cmp
or
jmp
mov
lahf
dec
stc
and
add
mov
int
sti
sub
ret
loopne
push
adc
or
into
sbb
sti
add
fsts
dec
sbbl
push
out
xchg
xor
enter
cmpsl
jg
xchg
sbb
addr16
jge
inc
out
push
xor
mul
push
dec
and
imul
push
outsl
dec
push
jns
mov
cmp
xor
push
push
ficomps
testb
lahf
cmp
enter
xchg
cmc
xor
pop
pop
xor
xor
das
mov
mov
fwait
mov
stc
incl
icebp
pop
in
cmpsb
pop
fidivrs
sar
pop
and
gs
adc
scas
push
rorb
dec
dec
cwtl
push
inc
rorb
mov
jae
xchg
fldl
push
cmpsl
stos
insl
pop
loop
push
fwait
jno
je
pushf
imul
data16
pop
inc
es
jg
push
les
push
pushf
stos
pop
pop
xchg
cmc
rcll
scas
add
mov
push
xchg
jns
xor
mov
loop
jne
push
pop
mov
cmpsl
imul
mov
lea
mov
add
in
sbb
loopne
movsl
clc
mov
loope
sub
mov
pop
mov
pop
stos
mov
mov
and
movl
cmpsb
sar
inc
mov
pop
xor
hlt
pop
out
sbb
mov
jmp
test
pushf
xchg
out
push
xchg
pop
add
xor
je
pop
and
lret
jbe
movsl
xchg
pop
mov
lcall
testl
xchg
pushl
mull
insl
pop
pusha
xchg
rcl
subl
shrl
dec
fiaddl
xor
std
jg
sbb
bswap
xor
das
push
lahf
aam
cmp
into
push
or
shl
imul
push
cmp
imull
sbb
mov
pop
mov
lcall
out
scas
adc
adc
std
in
fbstp
shrl
cmp
pusha
loopne
mov
jmp
test
aaa
jmp
enter
jp
push
iret
push
dec
mov
sub
stc
aad
stos
mov
dec
and
aam
add
lret
jmp
jno
add
adc
arpl
and
in
divb
jge
inc
adc
mov
out
hlt
inc
js
pop
enter
push
sti
pop
push
pop
and
jle
push
and
jmp
fstpt
push
xchg
test
cmp
xor
shlb
jecxz
inc
xor
inc
mov
dec
psubsb
div
adc
cs
push
scas
mov
xchg
jbe
mov
push
fucompp
jno
subl
into
jo
xchg
and
imul
pop
push
fwait
fwait
movsl
xchg
and
ljmp
aad
mov
in
lea
test
repz
pop
adc
mov
jmp
out
lret
imul
ss
adc
movsb
dec
stos
jnp,pt
mov
pop
out
cltd
mov
popa
pop
repnz
cli
jnp
or
add
push
dec
xor
das
rcll
mov
das
in
jl
push
cmp
mov
xor
and
stos
mov
xor
aad
call
nop
push
sti
sub
jbe
mov
movsl
lret
test
into
icebp
fstl
xor
pop
sub
into
jg
test
push
movsb
add
pop
xor
out
add
movsb
insl
cmovg
loope
js
rclb
lods
leave
mov
rcl
mov
pushf
call
jbe
push
xchg
jbe
mov
and
xchg
repnz
jecxz
inc
fstl
imul
lret
cmp
push
lahf
mov
cmpsl
lods
out
mov
or
mov
clc
gs
dec
sub
sbb
cmc
xor
sbb
int3
divb
fadds
lea
mov
cmp
mov
dec
push
in
jecxz
or
adc
ss
add
inc
xor
imul
mov
imul
loope
cmp
xlat
mov
subl
dec
and
incb
sahf
or
je
xor
arpl
ljmp
dec
and
addb
stc
or
add
mov
call
sarb
push
mov
xor
mov
imulb
dec
movl
and
push
sub
mov
xor
push
cmp
xor
fldenv
mov
push
sub
adc
dec
std
lret
shrb
xchg
test
pop
in
dec
mov
lods
fcmovnb
jns
xchg
sti
pushf
in
hlt
mov
repnz
popa
sbb
out
mov
push
lret
xor
push
push
add
in
popa
cmp
pop
xchg
lahf
jb
stos
sub
push
adc
adc
imul
icebp
mov
aas
cmp
sub
mov
xchg
push
adc
imul
pop
xor
ret
sarl
fsubl
insl
or
mov
adc
cltd
ds
sbb
fiaddl
mov
aad
sbb
jl
fisubl
jo
pop
out
mov
pop
push
sbb
cmc
addl
mov
out
push
xchg
into
xor
dec
adc
add
into
call
js
iret
mov
jo
icebp
cwtl
dec
pop
stc
pop
mov
test
sbb
jmp
subl
lea
pop
cmp
dec
repz
shlb
mov
dec
add
jne
pop
rorb
pop
lret
pop
into
pop
xchg
or
fidivrl
out
cmp
int
push
mov
push
aaa
pop
and
cld
out
inc
leave
js
fldl
xchg
cli
je
inc
cmp
xchg
xchg
pop
xorl
inc
pop
jg
jmp
repnz
cmp
push
lods
or
inc
lds
xchg
lret
leave
daa
das
sbb
sbb
js
pop
sbb
cmp
gs
fs
push
sbb
inc
add
aaa
adc
dec
je
stc
sub
ret
mov
xchg
cmp
lahf
pop
lcall
imul
adc
call
xor
test
fnsave
cs
leave
repz
lods
inc
sub
arpl
inc
cli
add
loop
or
test
sub
push
in
movsb
and
int
or
push
push
pop
pop
lcall
pop
push
out
clc
sahf
pop
fnsave
lods
add
dec
cmp
insb
jmp
or
ljmp
out
pop
sub
cmp
or
and
add
jl
dec
dec
sbb
mov
jb
push
xchg
jle
jmp
xchg
mov
xorb
xchg
mov
and
je
mov
jmp
jnp
cmp
testl
jne
addr16
ds
jns
mov
aas
es
shrl
int
push
push
aam
push
rcrl
test
ljmp
mov
lock
jns
dec
out
mov
in
cs
adc
pop
pusha
mov
cmpsb
arpl
insl
frstor
xchg
push
mov
repnz
orb
daa
adc
xchg
mov
cli
scas
nop
push
xchg
enter
push
adcb
xor
iret
mov
sbb
push
adc
daa
rcrb
xchg
mov
ljmp
xchg
addl
cmp
jns
dec
stos
dec
pop
dec
jb
adc
popa
inc
xchg
inc
xchg
das
iret
sub
push
pop
mov
jge
popa
mov
xchg
lahf
lock
inc
fwait
sti
iret
adc
cmp
ljmp
mov
fmull
les
cmpsl
sbb
sbb
lcall
call
test
pushf
xor
add
outsl
jno
ret
ljmp
testb
pop
ja
mov
add
cld
push
sbb
es
lret
js
xchg
pusha
pop
outsb
sub
cmpsl
roll
scas
sbb
or
xchg
cmp
add
rclb
push
ljmp
insb
inc
ss
and
decl
push
jg
push
sbb
mov
jae
jg
xor
mov
push
or
setne
push
sub
inc
adc
dec
lcall
daa
add
pusha
dec
or
cltd
stc
add
fidivrs
jno
push
insl
mov
push
ja
loope
xchg
xchg
add
in
clc
sbb
pop
gs
les
mov
push
push
dec
fildl
push
jbe
into
stc
das
in
xor
sahf
test
bound
sbb
sti
inc
sub
mov
cltd
mov
pop
je
xchg
cmpsl
mov
cwtl
xlat
mov
shlb
mov
pop
dec
ss
ljmp
pop
jl
mov
bound
data16
leave
dec
pop
test
cmp
mov
pop
xchg
mov
pusha
in
xchg
out
imul
gs
popl
shrb
and
pop
rcr
in
inc
sbb
movsl
mov
movsb
cwtl
pusha
mov
out
xchg
jp
pusha
movsl
dec
movsb
test
add
std
icebp
in
insb
dec
std
push
sbb
xchg
pusha
lcall
aaa
mov
aam
mov
cmp
fildll
sbb
add
add
clc
loope
xlat
aad
movsb
clc
pop
mov
lods
cmp
lods
sbb
das
mov
imul
xor
push
cmc
aam
jecxz
int3
mov
cmc
std
imul
cli
imul
fs
add
xor
mov
sar
shrl
jno
jg
lcall
outsb
fmull
mov
dec
pop
push
pop
into
aad
pop
mov
xchg
pusha
add
aad
or
js
cmp
movsb
inc
jp
daa
pop
aam
dec
nop
lea
mov
stc
xchg
lret
or
fisubl
and
xchg
aad
movsb
dec
call
idivb
xor
cmp
mov
imul
insl
lcall
add
out
popf
out
pop
jp
pop
jp
insl
mov
jb
add
mov
decl
inc
or
test
push
xor
imul
hlt
mov
inc
fisttpll
enter
stos
rolb
pushf
es
sbb
mov
mov
xchg
lock
dec
pushf
jecxz
loope
aaa
sbb
sub
inc
scas
inc
xchg
lcall
movsb
ret
sbb
das
inc
cli
dec
dec
xchg
or
sbb
mov
test
pop
cmp
arpl
push
scas
inc
insb
mov
pop
push
sbb
insb
mov
or
es
mov
outsl
dec
popa
paddb
mov
jg
rcr
mov
mov
lea
jae
ljmp
call
aaa
stos
cmp
pusha
sub
mov
into
hlt
mov
xchg
jmp
sub
add
out
movsl
dec
mov
out
mov
scas
jl
cmp
scas
inc
fbld
loop
fwait
cmp
je
inc
xor
jl
mov
rcrb
jo
dec
daa
sbb
cld
jbe
push
xor
insl
fmulp
adc
add
repnz
jo
cmp
test
jge
mov
jb
loop
js
mov
icebp
pop
loope
ret
dec
int3
gs
es
dec
fcmovnb
xor
shr
fwait
sarb
aaa
cmp
call
cli
xchg
shrl
lock
rol
out
sub
sbb
out
dec
imul
insb
push
cli
jle
xchg
mov
pusha
cli
push
pop
inc
push
hlt
xchg
shlb
int3
pusha
lods
mov
or
sbb
mov
icebp
push
xchg
mov
mov
aas
dec
jmp
inc
or
fstps
jg
xchg
mov
pusha
es
std
ret
push
in
mov
aas
call
scas
mov
sahf
subb
repz
enter
pushf
daa
push
sarl
imul
mov
cmp
mov
pop
mov
pushf
jg
sbb
mov
bound
jbe
and
lods
sub
scas
xchg
in
push
mov
lahf
cmp
or
mov
add
jle
mov
popf
iret
mov
es
push
imul
mov
jnp
ret
outsb
adc
movb
and
mov
push
lret
dec
push
notb
loopne
jge
lock
adcl
inc
mov
repnz
out
mov
loop
sbb
popa
pop
fisttpll
xor
push
aam
lret
mov
mov
cmpsl
mov
mov
es
push
ljmp
jg
mov
adc
pusha
dec
inc
push
and
fnsave
adc
xchg
add
mov
or
dec
fsubrp
adc
lds
jno
int3
fwait
sbbb
or
icebp
mov
imul
daa
xor
push
pop
mov
dec
pop
mov
push
mov
shll
cmp
inc
push
sbb
outsb
dec
pop
es
cmp
dec
fs
adc
call
ja
mov
stos
je
cltd
xchg
out
sar
adcl
hlt
mov
pop
adc
ret
sub
xchg
imul
mov
lods
testb
icebp
cmp
push
in
fisubrl
dec
lods
sub
push
mov
xor
jmp
fs
xchg
clc
xor
sub
popa
arpl
push
dec
imul
in
inc
xlat
jo
mov
sbb
pop
arpl
fwait
xor
pop
adc
mov
stc
mov
jno
mov
test
in
xchg
in
add
das
icebp
and
sub
jae
loope
xlat
loop
pop
imull
sbb
pop
nop
add
sbb
and
scas
cmp
fcoml
shr
out
cmpsl
push
rolb
mov
cmpsb
orb
cltd
cmp
mov
dec
clc
jns
push
hlt
cwtl
dec
roll
pop
mov
movsb
inc
dec
jmp
mov
dec
in
dec
xchg
into
inc
cmpsl
jnp
jns
pop
popa
out
adc
aam
popf
out
push
mov
mov
mov
outsb
les
push
decb
rcrb
mov
xor
orb
adc
in
mov
lret
das
aas
mov
jmp
call
jne
mov
pop
mov
lahf
jno
adc
push
or
add
fistpl
sbb
mov
inc
stos
add
mov
inc
push
dec
push
or
mov
sbb
test
push
mov
adc
cli
push
mov
and
pop
dec
cs
mov
loope
scas
push
mov
push
mov
imul
out
xchg
push
mov
pusha
add
xor
aam
adc
mov
cmpsb
adc
aas
sbb
movsl
mov
mov
xchg
dec
pop
aam
pop
out
out
fnstcw
scas
jne
sub
jbe
pop
aaa
das
add
pusha
das
mov
push
xlat
pop
not
loop
and
aaa
and
sar
dec
insl
orb
jae
ja
loope
mov
test
pop
mov
xor
and
xchg
loop
xchg
sarb
push
outsl
mov
clc
dec
push
insl
rcrl
pop
or
dec
inc
popf
and
mov
xor
out
jbe,pt
inc
pop
push
push
fistpll
and
in
arpl
and
ljmp
jo
lcall
pop
jbe
mov
mov
xchg
pop
push
xchg
xor
pop
dec
outsl
cmp
or
out
xchg
dec
fidivs
push
push
jno
loop
data16
add
bound
shlb
movsb
movsl
nop
stos
pushf
inc
push
mov
pop
adc
cltd
or
sub
fcmovnbe
psrlq
xchg
in
ret
shlb
and
icebp
jbe,pn
and
rclb
outsl
ret
out
mov
cmc
cmp
xlat
cmp
and
leave
jb
mov
mov
cli
xor
lods
inc
repnz
icebp
xor
xor
cld
jecxz
mov
outsb
dec
aaa
test
std
xorl
add
in
mov
mov
cmp
xchg
mov
pop
out
mov
scas
imul
mov
int3
sbb
sub
mov
lret
andb
addr16
xchg
ret
push
sub
sbb
addr16
mov
in
mov
push
pop
in
std
inc
sbb
sub
lods
iret
xchg
sub
repz
fnsave
xor
inc
push
jp
insl
jl
insl
cs
jns
leave
outsl
fistpll
test
xchg
dec
lock
mov
mov
lods
mov
xor
aaa
mov
push
test
imul
inc
outsl
mov
repz
xor
stos
jmp
xrelease
sti
enter
add
out
fwait
cmc
xor
jle
push
out
sti
arpl
test
mov
shr
out
call
cmp
sub
xor
add
add
testb
xor
movsb
pop
insl
adc
fstl
cmp
mov
test
or
xor
and
shll
xchg
and
jb
movsb
test
dec
xchg
xchg
pop
xchg
shrl
mov
mov
std
mov
inc
paddusb
push
xlat
inc
push
lock
rclb
sub
cmp
jno
xchg
clc
adc
mov
xor
mov
jb
out
call
pusha
xchg
mov
jle
es
fisttpll
sbb
mov
lcall
mov
scas
sub
ja
int3
clc
mov
sbb
shr
out
push
xlat
scas
lods
stc
push
cmpsl
shrl
in
push
mov
xchg
fcompl
pop
rcrb
lock
push
iret
rcrb
jecxz
outsl
int
mov
add
dec
jge
lock
test
sar
jns
pop
imul
jmp
push
sbb
outsb
fdivrl
je
jg
stos
inc
stos
adc
mov
clc
fildll
adc
jp
sbbl
adc
inc
sub
or
pop
cmp
cmpsb
icebp
lock
shlb
lds
cld
cwtl
mov
mov
call
or
xor
sbb
pusha
inc
xchg
pop
xchg
loop
or
push
push
out
dec
pop
cmc
clc
inc
lods
inc
sub
mov
lcall
in
jecxz
xor
cmp
pop
into
mov
or
into
or
shlb
jge
arpl
es
xor
add
dec
das
xchg
shrl
call
jno
cmp
sbb
test
fucomip
or
xlat
ds
aas
clc
jno
stos
ds
push
addb
test
loope
pop
cltd
aam
enter
les
mov
mov
aas
pushf
pop
fistps
or
add
jae
out
cmp
jmp
orl
arpl
insb
pop
movsb
stos
daa
push
jnp
sub
stos
fnsetpm(287
push
mov
adc
jle
inc
xchg
lahf
shl
out
dec
mov
stc
leave
adc
sbb
sbb
or
cltd
inc
inc
or
jg
mov
mov
and
in
mov
lahf
pop
shll
rcr
movsb
pusha
and
cmp
aad
mov
outsl
pop
dec
call
daa
out
dec
clc
lea
pop
and
xor
add
ljmp
std
lret
mov
xorb
jno
repz
fdivs
dec
push
or
adc
ret
cs
sbb
xor
push
pop
loopne
add
in
or
ja
dec
or
add
icebp
es
jo
mov
pop
lret
cwtl
sub
inc
iret
push
fsubrs
jb
and
pop
jge
fsubs
add
adc
mov
stc
sarl
pop
data16
stc
and
inc
pop
sub
xchg
push
pop
cmp
loopne
iret
dec
push
adc
lock
jno
xor
scas
rcr
inc
dec
jo
jnp
push
cmc
inc
push
int
outsl
xchg
jb
in
in
call
mov
out
subl
jne
dec
or
and
mov
mov
mov
dec
pop
and
jns
or
jmp
std
mov
enter
daa
stc
ficomps
enter
add
leave
out
dec
jbe
lcall
in
jns
lods
rcl
imul
dec
mov
stos
push
bound
sarb
ss
ds
mov
cmp
les
loop
cmpsb
xchg
hlt
mov
outsb
popf
sbbl
inc
mov
rcrl
sbb
adc
ja
repnz
pop
mov
mov
inc
or
sbb
insl
scas
std
dec
xchg
push
and
addr16
xchg
repz
inc
and
add
rclb
lahf
or
lock
ss
inc
pusha
shll
inc
pop
mov
sub
inc
xor
and
sub
aas
fstl
outsb
out
mov
pop
sub
pop
sub
lds
sar
jne
dec
imul
sub
pop
test
cmp
fstl
jo
imul
arpl
test
push
movsl
enter
xor
xor
sub
pop
or
xchg
and
mov
je
jno
inc
xchg
dec
fcoms
mov
jnp
xor
xlat
sbb
jg
ds
fnstsw
dec
pop
and
arpl
mov
int3
cld
or
jle
rorl
xor
stc
shrb
lret
out
popf
call
test
mov
lret
addr16
lods
adc
push
and
pop
mov
repnz
and
pop
cmpsb
rcl
mov
lret
shll
mov
dec
dec
fcomps
pop
lcall
or
out
and
push
pop
test
pushf
ds
pop
mov
out
scas
movups
dec
lret
xor
and
ret
into
lds
lcall
xor
push
sbb
and
lock
add
mov
aas
push
or
cmpsl
das
jne
push
sbb
rcrb
mov
or
insl
scas
push
and
adc
repz
std
fmul
addr16
ret
lock
je
imul
movsb
xor
lahf
test
jge
xchg
into
inc
push
jle
fistpl
jb
pop
xchg
fnstenv
or
push
or
outsb
mov
xchg
pop
cmp
fcomps
iret
or
jg
movsb
adc
mov
cld
push
cmp
flds
inc
fsubs
decl
and
ret
add
insb
out
cmp
outsl
pop
rcrl
or
dec
sub
mov
loope
cmp
icebp
sub
aas
pop
cltd
dec
cmp
pop
xchg
imul
add
rorb
out
lcall
mov
fdivr
add
jno
and
sub
and
stos
aam
fldt
neg
imull
xor
or
mov
xchg
test
sbb
mov
lods
jno
mov
and
ret
jo
cmp
and
xchg
push
lret
jmp
ret
mov
mov
jbe
repz
inc
movsb
adc
mov
in
lret
xchg
dec
repnz
js
ret
xor
rcll
inc
mov
xor
mov
decl
ret
sarb
pop
insb
pop
popf
lahf
rorl
add
push
lcall
fwait
loope
mov
cmpsb
repz
sub
stos
jnp
sbb
pusha
inc
lret
and
pop
inc
cmpl
idivl
testl
call
nop
push
and
gs
cli
testb
mov
mov
mov
cmp
xor
adc
and
shlb
push
push
in
fdivrl
imul
pop
rcr
pop
scas
lea
fimull
ljmp
add
rorb
test
lods
lods
rcl
es
aas
in
add
inc
jne
jg
nop
ret
imul
push
std
shl
rolb
sbb
push
fidivrl
pop
pop
scas
pop
mov
xchg
aad
sbb
mov
negb
es
and
iret
mov
pop
movb
xchg
and
xchg
push
nop
dec
xchg
adc
je
adc
xchg
mov
add
pop
dec
inc
cltd
pushf
jg
cmpsl
mov
in
mov
push
les
loope
adcb
ds
int3
inc
add
ds
iret
outsl
mov
pop
insb
xchg
cwtl
stos
ds
inc
stos
add
jbe
push
inc
sub
insl
data16
mov
mov
push
lret
sub
jns
adc
lret
lcall
lret
jbe
mov
iret
cmp
nop
je
xor
adc
int3
xchg
cmp
test
inc
cmpsb
out
xchg
lea
mov
cwtl
xor
fsubrl
xchg
mov
jl
scas
dec
sbb
push
lods
stos
repnz
mov
fildl
cld
aas
cmp
loop
in
mov
inc
cmc
adc
inc
icebp
sarl
or
xchg
mov
mov
nop
ret
inc
xchg
fstps
pusha
outsb
push
sbb
cld
mull
into
or
arpl
out
push
adc
shll
lret
dec
stos
in
or
idivb
dec
and
add
sbb
iret
inc
dec
cmc
test
ja
jmp
push
dec
ds
inc
cmp
jle
lods
test
cmp
jl
into
shr
fsubrl
aaa
push
fs
jbe
pusha
test
xor
insb
pop
mov
and
jp
fwait
repnz
xor
jbe
pushf
cli
pop
sbb
jb
ja
pop
cmc
scas
pop
ret
sub
sub
mov
fstps
ret
inc
popa
lock
scas
mov
scas
push
cmpl
mov
add
cmp
mov
test
in
mov
xlat
sub
sub
dec
mov
pushf
ret
pop
push
and
mov
dec
in
xchg
xchg
add
push
hlt
xchg
cli
push
imul
add
loopne
xchg
cmpsb
loopne
xor
mov
imul
in
push
push
mov
aad
jbe
fildll
icebp
enter
mov
arpl
mov
cmc
das
out
fbld
dec
mov
pop
jne
ss
les
xor
adc
mov
and
js
jns
icebp
inc
adc
jle
int
sbbl
xor
rorb
adcl
shrb
sti
xchg
dec
shlb
xchg
and
call
mov
cmp
xchg
addr16
xchg
test
mov
lods
push
adc
aaa
loop
cld
mov
jnp
int3
xlat
test
fidivrl
mov
jge
adc
rcl
mov
or
mov
cmp
adc
xchg
xchg
cli
cmp
push
sbb
pop
push
aam
sti
leave
rol
aaa
sub
jo
jl
sub
pop
or
inc
lret
lret
or
ss
push
mov
js
decb
mov
test
xchg
roll
jmp
repnz
bound
sahf
mov
rcll
mov
mov
insl
pushf
insl
pop
mov
mov
pop
fstl
int
jbe
and
lods
push
push
add
test
cmp
adc
sub
rclb
test
fidivrs
or
inc
xchg
or
push
jge
add
inc
loopne
mov
mov
sbb
shr
in
into
in
dec
insb
testb
scas
fwait
int
adc
lods
push
add
pop
xchg
push
cmp
lcall
insb
ds
mov
cmp
and
mov
adc
inc
testb
stos
bound
jne
out
push
lret
lcall
es
mov
and
push
xchg
std
mov
or
and
jne
repnz
pop
rcrb
mov
push
jae
pop
arpl
xchg
mov
loop
dec
lods
inc
mov
sbb
aas
mov
out
cmpsl
sbb
adcb
add
rorl
loope
mov
call
adc
adc
pusha
lods
jae
lods
lock
in
adc
movsb
dec
inc
aaa
add
fldcw
mov
aam
aas
loope
or
add
lcall
sub
mov
mov
xor
scas
or
adc
xor
fs
imul
or
and
lds
fstps
pop
cmpsl
int3
fidivl
jnp
xor
and
pop
fwait
jne
jae
sbb
push
outsb
pop
iret
sahf
xchg
inc
nopl
faddl
dec
shll
mov
addr16
aad
jb
jecxz
aaa
sub
test
fstps
and
and
mov
sahf
adc
push
adc
pop
inc
in
fs
adc
push
test
xor
pop
xchg
jnp
adc
das
nop
add
sub
mov
daa
jecxz
stos
add
lds
or
push
stos
data16
scas
call
mov
push
xchg
cmp
lret
into
lcall
faddl
cwtl
cmpsl
outsl
dec
ret
dec
inc
push
pop
pop
pop
int
sahf
ss
sbbb
dec
adc
jb
daa
push
aad
push
sbb
mov
xor
test
ds
mov
pop
push
inc
adc
xor
mov
push
mov
adc
jmp
jmp
out
outsb
mov
pop
jmp
mov
mov
push
adc
pop
data16
daa
into
xchg
gs
mov
hlt
jmp
pop
push
movsl
adc
pop
clc
pop
mov
mov
loop
mov
imull
insb
cmp
inc
mov
mov
jo
or
jmp
ret
sarl
cwtl
je
inc
pop
fucom
jae
sub
lcall
mov
imul
daa
push
fldenv
scas
aas
jno
mov
pop
ja
nop
adc
xor
push
in
pop
adc
cmpsl
or
or
loope
add
pop
movsb
in
mov
push
mov
and
jno
dec
adc
sub
dec
jg
adcb
mov
pop
movsb
and
imul
cmp
stos
mov
sbbb
hlt
push
jge
inc
xor
mov
pop
lock
insl
mov
ljmp
jne
andb
testl
jg
insl
or
cmp
sbb
in
cmc
xchg
pop
xchg
inc
jge
push
repz
push
outsb
jecxz
mov
or
orl
insl
xorl
pop
adc
adc
int3
lret
pop
rcl
dec
mov
pop
jnp
push
shll
idiv
jno
out
repnz
and
test
mov
repz
inc
insb
gs
lods
scas
jo
loop
aad
test
clc
cmpl
xor
cmpsb
dec
daa
xlat
outsb
fdivs
pop
and
push
scas
popf
lods
push
imull
ret
addr16
in
cmp
or
xchg
and
mov
leave
adc
js
lods
insl
cmp
xchg
scas
mov
jp
jne
outsb
mov
xor
sub
or
sub
jne
push
jnp
mov
js
or
sbb
mov
std
mov
add
and
inc
mov
cltd
pop
adcb
ja
negl
cmpsb
xor
cwtl
testl
imul
push
movsl
xlat
fnstcw
jg
addb
pop
jp
and
add
cmpb
aaa
out
fimull
scas
dec
adc
call
out
push
adc
sbb
fcoms
cmpsl
xchg
jne
shrb
je
sbb
imul
mov
insb
loopne
popa
orl
and
cmp
push
lret
push
or
popa
rolb
in
pop
cmp
cld
jmp
addr16
cmp
xchg
or
bound
xchg
add
push
xor
sahf
push
mov
ljmp
pusha
dec
mov
mov
aad
jb
push
push
ljmp
fisttpll
mov
pop
out
push
jl
mov
sti
lock
dec
mov
jb
test
add
and
cltd
pop
dec
dec
test
pop
dec
cmp
scas
pop
jp
mov
cmp
pop
sarl
mov
sbb
xchg
jp
adc
in
aad
cmpsb
es
mov
stos
lahf
mov
push
lret
fs
je
and
out
test
jo
push
mov
loope
adc
iret
xchg
adc
pop
mov
lea
jne
pushf
and
cmp
adc
jne
adc
fwait
pop
clc
push
add
lahf
mov
jns
outsl
scas
lds
push
loope
mov
adc
push
sub
sti
lret
rcl
xor
les
push
add
cltd
in
dec
jne
int
or
jne
aad
add
lret
mov
mov
aad
jae
pop
dec
mov
mov
push
push
adc
mov
push
popa
arpl
sub
add
cmc
jno
inc
pop
test
add
das
push
int
xor
leave
mov
loope
pushf
cli
shrl
xchg
rcrb
jbe
repz
add
js
lcall
pop
mov
das
push
mov
arpl
clc
insl
cwtl
or
cmc
pusha
add
outsb
mov
nop
mov
or
xor
pop
mov
addr16
les
pop
push
les
jo
scas
out
mov
push
test
mov
movsb
xlat
add
or
in
jmp
pop
stos
lcall
xor
adc
xor
jecxz
and
pop
jnp
sbb
mov
scas
pop
mov
out
sbb
daa
out
inc
xor
repnz
jne
ds
icebp
mov
sub
sub
decl
int
cmp
lahf
pop
jnp
sahf
outsl
push
push
in
or
jmp
mov
inc
leave
xorb
cmp
pop
lcall
push
pop
dec
inc
add
cli
lea
inc
sub
xchg
stc
in
add
jmp
rcr
mov
inc
xor
jle
xchg
xor
jg
mov
mov
inc
fsub
cmpsb
add
aam
jae
mov
jb
sub
add
icebp
out
cmp
out
and
dec
inc
shll
lods
dec
loopne
out
loopne
outsb
xor
orl
sub
lods
and
aas
add
insb
arpl
dec
mov
loop
ds
pop
mov
in
pusha
pop
test
sub
dec
cmpsb
ja
jb
into
adc
std
lods
cld
push
xchg
jp
adc
fwait
sub
jmp
std
mov
in
xlat
xchg
in
mov
ss
dec
rclb
jmp
fisttpl
mov
fnsave
out
rclb
jbe
inc
sbb
xchg
lret
xchg
ds
shl
dec
inc
sub
jno
sub
mov
imul
ret
jnp
data16
xchg
mov
test
adc
dec
jle
sub
sub
xchg
sbb
faddp
rcrb
out
cltd
sbb
mov
rcr
vmread
mov
sti
pop
test
mov
pop
xor
cmp
pusha
nop
das
mov
xor
mov
dec
jbe
add
and
div
or
mov
cmp
inc
pushf
out
xorb
les
fcoms
push
push
adc
xor
adc
cmc
adc
sarb
pop
repz
testb
arpl
pop
lea
xchg
ljmp
sub
or
push
cmp
sub
or
pop
lock
in
mov
je
jne
jg
mov
adc
and
mov
sbb
or
loopne
lea
mov
or
rolb
xor
pop
cwtl
or
popf
fnsave
imull
das
mov
adc
or
mov
rclb
push
mov
idivl
shr
out
or
mov
sarl
repz
shll
and
lret
fnsave
cs
sbb
jne
pop
mov
outsb
jne
and
fdivp
inc
xor
test
xor
sbb
loop
pushf
nop
push
sbb
or
lea
xor
fistpl
filds
push
adc
mov
leave
pop
pop
push
movsb
mov
mov
iret
dec
popf
movsb
mov
inc
pop
fisubrs
mov
leave
loope
cwtl
lock
mov
mov
fnstsw
aad
xchg
mov
xchg
adc
imul
or
fs
sub
and
dec
fisubs
scas
jae
xchg
push
insl
push
in
fdivl
das
and
pusha
in
es
xor
inc
mov
pusha
sarl
push
decl
jbe
sbb
jmp
ja
pop
in
inc
ja
xchg
inc
add
mov
jno
shlb
or
in
xorl
insl
or
pop
std
pop
and
jmp
mov
imul
aad
or
xchg
xchg
xorl
xchg
inc
xchg
test
movsb
js
push
push
cs
adc
test
dec
mov
test
pop
cmp
mov
sbb
aam
inc
aaa
add
pop
sti
dec
cltd
fisttps
inc
pop
test
test
loopne
nop
jecxz
pop
push
inc
sub
sti
sbbb
mov
jnp
jge
popf
mov
cmc
test
mov
repz
or
dec
pusha
mov
aas
popf
mov
mov
dec
fistpll
jns
adc
test
cld
dec
cmpsb
daa
push
cwtl
rcr
and
adc
arpl
jmp
lea
sub
aam
lods
cmp
leave
xchg
and
fwait
jo
inc
add
popf
xor
aaa
mov
mov
xor
sbb
cld
loopne
out
mov
push
dec
shrl
iret
out
loopne
mov
imul
cmpb
cmp
dec
jno
sahf
and
push
sbb
out
add
cld
mov
cltd
jmp
or
jns
lahf
mov
insl
pop
enter
outsl
ret
push
mov
inc
fnstsw
push
leave
iret
sbb
mov
mov
in
clc
add
cmp
cmp
movl
add
loop
loope
cmpsb
mov
lret
add
orb
push
shl
mov
in
pinsrw
jo
pusha
dec
imul
bound
loope
cmc
sub
xchg
mov
enter
mov
ja
cs
push
daa
mov
mov
xchg
push
add
in
mov
std
add
adc
andl
shrl
mov
loop
mov
or
les
xchg
xchg
movsb
jns
rol
out
mov
movsl
push
call
stos
sub
inc
stos
in
mov
jge
hlt
add
push
cltd
scas
mov
pop
push
mov
test
aad
xchg
sbb
stos
gs
fwait
push
rorb
loop
fldenv
lcall
adc
sbb
pop
add
loop
push
push
dec
xlat
jae
add
mov
ja
xor
xor
hlt
out
mov
push
pusha
enter
cs
mov
aaa
mov
js
cmp
clc
mov
inc
sbb
lret
sub
cwtl
xchg
cmc
fldenv
out
rcl
xor
aam
inc
cmp
sbb
clc
cmp
cmp
andb
xor
test
jg
cmp
popa
in
mov
iret
shr
js
jne
popa
xchg
push
mov
sub
or
or
out
shrl
mov
mov
in
in
xchg
pop
loop
mov
jno
aam
dec
push
or
pusha
imul
lea
xchg
xchg
xor
mov
adc
xor
inc
int3
xchg
jne
adc
jl
xchg
hlt
lahf
lods
mov
fsubl
jmp
add
xor
ds
shr
inc
sbb
movsb
repnz
mov
add
subb
sub
push
sbb
jo
cmpl
aaa
das
testb
call
lds
jle
int3
cltd
mov
dec
enter
scas
xchg
push
ja
cwtl
leave
es
add
fmull
xchg
or
rorl
ss
or
hlt
insl
sbbb
xor
aas
dec
or
add
aam
mov
xor
mov
mov
add
out
stos
mov
pop
inc
or
or
dec
sar
std
jle
sbb
nop
or
std
lcall
push
pop
cmp
cmp
xchg
push
aaa
push
dec
into
add
xor
and
test
cmc
and
cmp
ss
cmp
dec
mov
jmp
icebp
cli
push
sub
xchg
cmpb
loopne
add
pop
rcrl
xchg
cmp
mov
dec
loopne
mov
xchg
mov
shr
pop
stc
jbe
lods
xor
pushf
lret
mov
ret
xchg
push
lret
pusha
push
add
and
pop
cmp
mov
inc
outsl
pop
.byte
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
fwait
xor
fidivs
inc
fs
mov
cli
aam
fwait
bound
out
fnstsw
ss
out
les
iret
xchg
in
insl
jae
aaa
mov
sub
push
pop
push
sbb
xchg
xchg
pusha
push
mov
insl
xor
mov
aas
xlat
sub
sbb
data16
fcompl
dec
fadd
mov
jne
cmp
sbb
xchg
aam
or
or
arpl
stos
push
adc
mov
sbb
popw
push
and
mov
sbbb
into
adc
adc
negb
xchg
jnp
sbb
add
add
push
push
push
add
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
push
push
push
add
add
add
add
mov
add
addb
add
push
push
push
add
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
push
push
push
add
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
push
push
push
add
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
push
push
push
add
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
push
push
push
add
add
add
add
mov
add
addb
add
push
push
push
add
add
add
add
add
add
rolb
add
add
push
push
push
add
add
add
add
add
add
rolb
add
add
add
push
add
add
add
add
add
add
loopne
add
add
add
push
push
push
add
add
add
add
add
add
lock
add
add
add
push
add
add
add
add
add
add
add
add
push
push
push
add
add
add
add
add
add
adc
add
push
push
push
add
add
add
add
add
add
and
add
push
push
push
add
add
add
add
add
add
xor
add
push
push
push
add
add
add
add
add
add
inc
add
add
push
push
push
add
add
add
add
add
add
push
add
add
push
push
push
add
add
add
add
add
add
pusha
add
add
push
push
push
add
add
add
add
add
add
jo
add
add
add
push
push
push
add
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
nop
add
add
push
push
push
add
add
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
mov
add
add
add
push
push
push
add
add
add
add
add
add
rolb
add
push
add
add
add
add
add
add
rolb
add
push
push
push
add
add
add
add
or
add
add
add
push
push
push
add
add
add
add
or
add
add
add
push
push
push
add
add
add
add
or
add
push
add
add
add
push
push
push
add
add
add
add
or
add
push
add
add
add
push
push
push
add
add
add
add
or
add
push
add
add
add
push
push
push
add
add
add
add
or
add
push
add
add
add
push
push
push
add
add
add
add
or
add
add
add
add
push
push
push
add
add
add
add
or
add
add
add
add
push
push
push
add
add
add
add
or
add
add
add
add
push
push
push
add
add
add
add
or
add
add
add
add
push
push
push
add
add
add
add
or
add
add
add
push
add
add
add
add
or
add
add
add
push
add
add
add
add
or
add
add
add
push
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
cmp
add
in
add
add
add
test
add
add
in
add
add
add
mov
add
add
in
add
add
add
lods
jns
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
jns
add
add
add
add
add
add
add
jns
add
add
in
add
add
add
int3
jns
add
add
add
add
add
add
add
jns
add
add
in
add
add
add
fdivrs
add
add
add
add
add
add
add
jns
add
add
add
add
add
add
add
jns
add
add
add
add
add
add
add
lea
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
orb
sbb
das
ds
loopne
int
les
scas
mov
or
xlat
scas
fs
loope
adc
sub
xchg
mov
mov
xchg
ja
mov
addb
dec
push
ljmp
mov
inc
into
inc
add
jle
push
push
loope
addl
sahf
mov
xchg
xor
inc
call
mov
shll
lss
shll
cld
ss
cwtl
fs
push
jo
mov
lock
leave
jg
adcb
retw
sbb
xchg
mov
subps
std
test
sub
fists
mov
pushf
popa
test
cltd
jle
pop
int3
fstps
mov
loope
daa
mov
jns
repnz
push
insl
rcrb
ja
and
mov
rcr
push
jnp
xor
fstl
jle
lock
es
adc
pop
inc
icebp
push
in
imul
push
in
cli
or
xor
cli
out
dec
or
mov
pop
andl
add
xor
cmp
push
scas
inc
fisubs
sarl
or
mov
stos
sbb
or
int
mov
mov
pop
fdivs
insl
push
or
jne
mov
mov
inc
pusha
sbb
sti
les
pop
xchg
mov
cmc
stos
mov
jnp
mov
fwait
lret
jge
xchg
add
aam
mov
or
mov
jle
pop
xchg
arpl
je
ds
mov
inc
gs
and
aam
jp
lock
inc
scas
stos
xchg
fbld
pop
dec
mov
stc
loope
repz
popf
stos
into
std
pop
xchg
hlt
aad
in
xor
cmp
cld
into
xchg
jmp
xor
cmp
and
inc
xchg
sbb
repnz
ret
add
inc
adc
sub
ret
push
mov
mov
cmp
pop
pop
jno
jl
repnz
push
in
and
stc
out
mov
cmp
sbb
lahf
test
xor
mov
cmp
jne,pn
and
cwtl
ret
lods
push
in
and
cmp
and
adc
xchg
xor
lret
xchg
insl
or
adc
or
lods
cmc
fucomp
or
mov
popf
test
inc
pusha
mov
addr16
out
fildll
mov
mov
int3
inc
fistpll
aam
dec
js
mov
push
adc
stos
loopne
out
xchg
out
inc
mov
mov
xlat
not
arpl
push
and
daa
sub
or
test
lahf
fimuls
dec
xlat
xor
inc
pop
scas
push
or
std
mov
lret
imul
cmp
and
insb
fnop
cmp
or
arpl
inc
adc
cmp
sbb
inc
and
cmp
jo
in
arpl
loope
inc
cmp
ss
popa
pop
and
inc
testl
clc
faddp
sbb
ds
lock
xchg
inc
out
inc
push
roll
sbb
xor
aaa
pop
popf
jge
in
adc
aas
and
out
pop
or
xlat
or
add
push
add
xchg
sub
jns
sbb
scas
out
pusha
je
rclb
xchg
mov
inc
add
das
or
fsubrs
mov
in
add
sbb
pop
cmpsb
mov
mov
xor
mov
popa
pop
xor
mov
jns
out
dec
mov
das
dec
es
mov
cmp
leave
lds
mov
push
push
jnp
xchg
sub
das
popf
aas
add
xor
lods
push
call
add
cld
cmp
iret
mov
sbb
sub
shll
lods
leave
push
je
adc
inc
out
icebp
mov
inc
mov
and
inc
repz
add
xchg
test
aas
mov
movsb
or
incl
dec
xchg
jmp
jno
mov
adc
call
xor
insb
inc
mov
adc
ljmp
stos
orl
stc
lods
data16
mov
mov
xchg
pop
test
add
cltd
lret
sbb
js
dec
gs
lods
jecxz
cmp
cmp
test
in
cmpsl
mov
inc
nop
movsb
sbb
lahf
push
stc
aas
jge
adc
adc
inc
loopne
push
cltd
ss
sub
xor
xchg
push
bound
and
or
ja
mov
stos
ljmp
je
xchg
push
inc
cmc
and
sbb
pop
pop
add
mov
mov
adc
mov
lock
mov
loop
iret
add
lcall
mov
xchg
cli
iret
adc
xor
inc
jecxz
in
or
adc
leave
das
mov
jmp
jb
or
sbb
inc
out
in
sar
scas
cmp
mov
fsts
pop
fmull
test
dec
icebp
ja
dec
iret
pop
inc
cmp
pusha
cltd
mov
sbb
jmp
test
xchg
mov
inc
ret
es
sbbb
sub
jle
jge
cmpsb
dec
mov
xchg
mov
mov
jae
push
dec
mov
push
mov
pop
outsb
shlb
int
dec
cmp
xchg
fldcw
stos
jl
dec
test
push
xor
or
mov
xchg
lods
mov
mov
xchg
lret
xchg
fsubrl
adc
outsb
call
lea
mov
fidivl
fmull
jno
nop
cmp
ljmp
bound
nop
inc
mov
inc
push
adc
pop
xchg
jle
fnop
fstpt
push
enter
xchg
out
js
add
gs
lods
fisubrl
xchg
pusha
mov
fildl
das
xchg
xchg
jno
fnstcw
or
mov
insb
or
ljmp
out
addr16
add
cmp
mov
sti
jns
ja
test
sahf
stos
adc
and
xor
jp
and
fsin
call
inc
xchg
cli
sbb
iret
mov
imul
cs
add
or
dec
outsb
sub
sahf
lret
xor
and
imul
xor
mov
repz
inc
js
sub
popf
outsl
test
pop
int
in
lods
or
jle
gs
cmpb
sbb
dec
and
xor
sti
dec
imul
shl
addl
cs
roll
scas
ret
mov
adc
dec
or
negl
mov
adc
call
sub
repz
sub
into
sub
ss
xrelease
out
clc
ficompl
mov
add
and
cmc
pop
popa
push
test
fcompl
mov
pop
mov
or
xor
xor
mov
sbb
test
mov
mov
ss
cmpsb
cmpsl
ja
fistl
loop
cwtl
sbb
aad
mov
pop
push
outsl
popf
add
imul
adc
cmp
mov
add
mov
mov
iret
and
stos
pop
ds
mov
cmc
sbb
sub
test
xchg
xor
pop
xchg
mov
loop
xor
cmp
jmp
ss
and
jns
inc
mov
xchg
and
out
imul
das
sti
data16
mov
fistl
xchg
loopne
lahf
and
sub
sub
scas
fistpll
sbb
dec
loopne
push
and
inc
inc
jmp
adc
jno
stc
fstpt
rclb
push
les
lret
jae
mov
xor
sbb
push
shrb
ss
outsl
adc
fcoml
xchg
mov
cwtl
mov
push
lods
mov
mov
fcoml
cmp
lock
or
test
or
cmpsl
fsubrp
fnstenv
cmp
push
pop
jnp
mov
inc
mov
aad
xor
loopne
mov
std
cmp
adc
and
mov
xor
test
cld
jae
cmp
cltd
mov
sarl
inc
jl
xchg
and
mov
scas
push
fsubrl
lods
xchg
pop
inc
addr16
adc
mov
jnp
cmp
xchg
dec
inc
ss
icebp
push
cmp
xchg
pop
push
cmp
popa
scas
jle
push
jne
xchg
pop
stos
adc
jb
add
arpl
inc
or
pop
popf
jmp
mov
ljmp
mov
mov
or
ja
in
push
daa
sub
push
pop
nop
xchg
inc
aaa
ds
sbb
sub
dec
inc
outsb
sahf
xchg
dec
sub
lock
xchg
rclb
push
mov
pusha
cmp
decb
dec
mov
add
movsl
sbb
testb
repz
cmpsb
outsl
sbb
jbe
adc
dec
fisubs
lock
xchg
dec
cmp
adc
sarb
xchg
fildll
leave
in
mov
fsubl
cwtl
xchg
push
jnp
repz
nop
shl
xor
mov
clc
xor
adc
sub
pop
push
pop
ss
fidivrl
lods
aas
aad
xor
jns
sub
cmp
xchg
incb
jl
mov
mov
iret
jbe
pop
dec
sbb
aad
push
push
icebp
aaa
or
ja
mov
arpl
xor
push
jne
or
movsl
loopne
out
push
mov
mov
lock
pop
fisubrs
fildl
ret
xlat
jg
pop
pop
aad
lock
jb
or
aam
sbb
or
mov
cld
addr16
bound
ficoml
cmp
clc
mov
jecxz
dec
dec
sbb
cmpsl
and
aas
add
lahf
xchg
pop
inc
xchg
das
jae
jne
out
mov
mov
dec
cmpsl
and
in
push
add
pop
fsubs
dec
je
pop
mov
lahf
inc
cmpsb
pop
loopne
cmpsb
dec
xchg
loopne
loope
cmp
je
loope
jg
sbb
leave
lods
movsb
aas
pop
inc
jl
sti
jbe
lea
insb
incb
lret
movsb
or
and
and
cwtl
jg
js
mov
es
cld
cwtl
outsb
sbb
add
inc
test
pusha
test
dec
in
lea
pop
nop
mov
ja
xchg
and
and
and
mov
stos
ss
sub
mov
mov
push
mov
pop
in
dec
and
jge
or
sub
push
push
inc
gs
bound
jne
jmp
and
out
lret
pop
jne
cmpsb
xchg
stos
and
inc
roll
mov
mov
jle
dec
in
or
mov
in
shrl
inc
rcll
int3
cmc
cmpsb
fcom
and
sarl
jmp
push
test
mov
clc
or
jns
rolb
imul
repz
out
jle
dec
xor
ffree
loop
mov
addb
inc
imul
test
mov
das
adc
loop
lret
into
jg
pop
jbe
cmp
sarl
fsub
jge
out
or
cmp
int
mov
out
xchg
cs
inc
imul
push
jnp
sbb
lret
pop
lock
enter
loope
fs
mov
cld
fildll
outsb
pop
dec
xor
stc
out
cmpsb
sarl
int
sub
pop
add
sbb
adc
stc
cld
add
shll
jmp
fs
sbb
enter
mov
sbb
xor
mov
pop
xchg
cmpsl
mov
mov
out
mov
mov
in
push
ljmp
inc
add
fidivl
xchg
dec
test
fsubrl
mov
mov
cmc
icebp
scas
rcrb
cmp
clc
jae
fcmovu
sub
adc
mov
mov
flds
dec
sbb
out
mov
arpl
adc
mov
std
push
imul
push
mov
das
lret
loop
lods
bound
mov
pop
mov
mulb
inc
mov
add
add
xchg
xchg
movsb
bound
ret
sub
sahf
xor
idivb
test
ds
dec
ret
addl
and
mov
jno
mov
sbb
or
adc
repnz
loop
fxam
mov
jne
daa
pop
sub
push
push
mov
ljmp
sbb
fiaddl
test
ja
mov
icebp
call
mov
xchg
test
lcall
jmpw
sti
push
and
push
cmp
jns
inc
pop
shll
cmp
push
mov
imul
sahf
stos
mov
xchg
mov
loop
shl
mov
fs
enter
and
into
jb
iret
xor
jno
and
or
pop
xor
sub
shlb
ds
add
xchg
dec
push
adc
pusha
fst
and
jae
mov
adc
mov
mov
in
lods
inc
add
mov
pop
jmp
loope
jle
fdivrs
shrb
and
scas
int3
mov
cmp
adc
cmp
je
lcall
xchg
mov
mov
mov
xchg
ss
sbb
mov
aaa
in
push
fstl
mov
pop
test
jle
lcall
imul
pop
sbb
pop
rcll
stc
xchg
out
or
cwtl
push
insb
mov
cmp
loope
jne
and
rcll
push
fcmovnu
loop
pop
sbb
add
jl
fldcw
push
movsb
pushf
push
sub
and
xchg
lea
hlt
sub
xor
fs
ret
push
out
stc
push
pop
cwtl
scas
push
imul
aam
cmc
mov
add
in
roll
dec
inc
xchg
imul
lret
or
movhps
fdivrl
xchg
pop
js
loopne
xor
popf
push
test
lds
push
nop
stos
jl
push
gs
sub
xor
xor
xchg
jae
push
lock
jl
cmp
mov
push
mov
sub
daa
push
adc
dec
mov
movsl
jae
mov
sbb
push
cmp
or
adc
inc
sbb
clc
pop
insb
enter
rolb
fistps
test
test
test
push
mov
pop
movsl
scas
xchg
add
popf
rol
test
mov
ud0
mov
lret
pop
out
fdivl
dec
addl
scas
cmc
fsubr
pop
sbb
das
out
cmc
pop
add
push
jg
add
pop
mov
insl
xor
out
mov
int
push
adc
push
es
inc
mov
jecxz
imul
xchg
jbe
mov
pop
out
push
jnp
ret
mov
mov
outsb
xchg
imul
shlb
cmpsb
xor
ret
push
pop
repnz
jns
fidivrl
cmpsl
sbb
jge
jo
add
adc
in
pusha
les
xlat
and
pop
ret
cmp
lea
mov
and
xor
jp
or
dec
cwtl
not
das
leave
into
scas
movsl
dec
andl
sti
stos
push
mov
xor
xchg
pmulhw
jecxz
cmp
xchg
or
adc
mov
and
in
inc
arpl
ljmp
dec
xchg
negb
lret
test
gs
ret
pop
adc
and
pop
pop
sbb
cmpsl
std
jne
adc
arpl
sub
mov
movq
and
movsl
jbe
adc
cmp
xor
jnp
mov
or
scas
sub
mov
mov
mov
add
cmp
shl
sarl
cmpsb
ljmp
icebp
jbe
and
in
push
es
mov
adc
jo
aad
jmp
mov
out
ret
dec
lods
lds
jge
imul
scas
push
mov
je
int
insl
adc
sbb
mov
push
xchg
loopne
aas
push
jmp
ficomps
aaa
in
jmp
subl
push
in
jns
jge
les
xchg
push
lods
sub
inc
jl
fsubrs
xchg
jmp
mov
test
adc
cmp
push
popf
icebp
sbb
sbb
std
fs
mov
imul
call
and
enter
add
jo
sarb
mov
jl
fimuls
test
sub
fldt
mov
decl
add
mov
mov
mov
dec
xor
je
xor
xor
incl
shrl
mov
mov
jp
dec
aam
jmpw
mov
and
push
jge
test
clc
int3
or
out
das
cmp
adc
cmpsl
mov
loopne
cmp
je
push
stos
repnz
mov
jp
fldpi
add
mov
ljmp
mull
aad
inc
divl
lods
mov
fstpl
dec
in
xor
sub
fxch
cmpsl
sub
lret
shl
and
cmp
sbb
shll
imul
xchg
adc
sub
sub
les
iret
push
fbstp
add
push
test
push
adcl
inc
negb
cmc
nop
in
mov
dec
out
dec
cmp
adc
dec
push
ror
push
inc
jp
pop
ffree
push
or
or
clc
cmpsb
mov
or
xchg
lret
addb
jns
addl
jle
pop
inc
sbb
scas
into
iret
es
adc
popa
sbb
test
daa
adc
in
inc
mov
scas
bound
fstpt
mov
lcall
or
jno
sbb
push
add
lcall
mov
pop
outsl
fldt
cmp
stc
jge
ret
and
push
stos
adc
aad
data16
sub
jae
mov
mov
xchg
rorb
push
lahf
pusha
mov
push
lods
rorl
cmpsb
push
and
std
cmp
rolb
and
fwait
outsb
mov
cmc
mov
mov
rorb
pop
inc
ss
out
aad
fwait
or
xchg
out
xchg
mov
dec
mov
xchg
ret
mov
notl
cmp
xchg
cmp
and
sbb
iret
lret
adc
sub
pop
cmp
jl
insb
add
mov
jle
and
xchg
pop
repnz
and
jnp
cmp
cmpsl
cmpsl
cwtl
in
push
or
lea
movsb
mov
xchg
int3
cmc
mov
outsb
jo
adc
xchg
lret
cmp
es
out
adc
cmp
inc
testl
sbb
int
and
enter
std
push
cwtl
imull
push
popa
jo
cmp
in
aas
ja
or
stos
mov
mov
cmp
es
dec
cmp
push
cmp
leave
inc
movsb
sub
imul
push
dec
or
lea
lea
jnp
jnp
pop
scas
dec
jno
in
data16
popf
mov
insb
and
mov
in
out
push
jmp
cld
mov
xlat
cmp
imul
daa
sbb
inc
cmp
mov
stos
rcr
mov
ds
xor
xchg
lcall
into
daa
je
ds
shlb
roll
mov
xor
divb
inc
inc
push
movsl
es
add
std
in
pusha
iret
jo
add
arpl
dec
jmp
scas
fistl
test
jg
sub
flds
test
xor
loopne
sbb
push
and
lods
sti
popa
in
movsl
push
pushw
cmp
pushf
out
sbb
jl
cmc
lods
xchg
or
cmpsb
dec
shrl
jne
push
push
sbb
bound
xlat
pushf
aam
loop
and
push
test
mov
xchg
push
jns
dec
push
mov
lods
push
mov
imul
movsl
imul
or
jg
push
pop
adc
cltd
test
stos
arpl
push
mov
pop
loop
in
mov
pop
scas
and
adc
fwait
fs
mov
xchg
repz
fldt
test
mov
flds
mov
bound
cli
mov
jb
testl
ds
test
pop
fs
mov
std
jno
test
mov
dec
dec
mov
jge
dec
pop
mov
adc
mov
insl
outsb
ret
or
cs
adc
jb
test
mov
es
out
inc
inc
adc
in
sub
sub
dec
xchg
scas
sbb
push
stc
ror
jnp
sbb
push
sub
mov
inc
repnz
xor
xchg
sub
clc
dec
mov
sbb
xchg
pop
js
popf
sub
push
aad
mov
or
mov
fsubs
push
stos
inc
xor
inc
sbb
int3
lods
add
js
dec
lods
sti
sti
imul
outsb
mov
push
dec
out
dec
icebp
jl
push
mov
out
test
sub
xchg
lock
test
mov
or
scas
scas
sub
mov
lret
mov
add
push
rclb
sub
fucomip
push
pop
adc
sbbb
scas
jmp
ret
shrb
mov
mov
pop
inc
fldcw
fsubrs
scas
cmp
pop
js
rorb
mov
fadds
stos
call
repnz
in
cmp
fdivl
stos
inc
mov
mov
push
shr
adc
sbb
ss
mov
lods
inc
pop
aam
pop
jp
pop
outsl
arpl
sub
mov
or
outsl
pop
shlb
in
insb
ljmp
iret
pop
mov
repnz
mov
sahf
inc
cmp
push
ss
enter
sahf
test
push
adc
sbb
scas
xor
pop
push
out
or
call
or
adc
lcall
dec
and
lahf
push
mov
mov
and
cmpsl
in
test
xchg
pop
cmpsl
fcmovu
ret
lock
dec
aad
cli
mov
aad
mov
sbb
jb
out
cs
mov
icebp
jne
hlt
inc
fistpll
jae
mov
sarb
jb
lcallw
cltd
add
mov
pop
push
data16
mov
inc
xchg
jle
xchg
arpl
lcall
scas
push
inc
loope
xor
shll
sub
inc
jmp
lret
rol
inc
sarb
cltd
movsl
mov
fdivrs
push
sahf
push
xor
iret
inc
insb
ljmp
adc
loopne
sahf
fwait
mov
cmc
fcmovb
js
xchg
imulb
subl
popf
add
sbb
sub
and
lahf
pop
fcomp
fstpl
jno
repnz
js
push
repnz
push
mov
push
lods
repz
sbb
xchg
sbb
lcall
loop
jae
mov
faddl
sbb
outsl
mov
into
adc
inc
add
sub
sbb
int3
scas
test
jns
andb
popa
aad
sbb
push
mov
jl
and
mov
rcr
push
or
jecxz
push
xchg
xchg
cmp
mov
push
rcll
pop
mov
test
add
mov
inc
sub
jns
sub
div
adc
lcall
nop
push
loop
inc
bound
adc
clc
and
fcomi
mov
sarl
shrb
pop
in
icebp
inc
aaa
ret
jb
jbe
pop
pop
pop
jecxz
add
xchg
cmc
mov
or
push
xchg
sub
sti
mov
sbb
sahf
jg
popf
sub
xlat
push
xchg
sbb
lock
movsl
or
jecxz
mov
int
es
cltd
je
stos
cmpsb
out
out
and
adc
pop
mov
jecxz
xchg
lods
insb
push
sbb
push
addl
mov
mov
cmp
lldt
adc
inc
jne
mov
jge
xchg
mov
mov
pop
mov
xor
pop
xchg
sbb
test
jb
scas
scas
cmp
or
mov
es
push
push
xchg
pop
cmp
iret
je
ret
out
orb
ljmp
push
and
adc
mov
and
push
ss
lock
fstps
add
lret
lret
dec
inc
push
add
jl
sarb
fs
push
and
sub
stos
arpl
pop
ljmp
push
xchg
mov
jmp
aam
and
out
mov
pop
mov
cmp
push
sbb
jmp
cmp
inc
popl
incb
lods
pop
or
sub
fwait
add
inc
xor
cmp
inc
cld
scas
inc
push
mov
lods
pop
pop
cmp
push
cld
adc
shrl
xchg
leave
push
adc
rclb
call
mov
adc
sub
jbe
mov
adc
push
cmpsl
mov
es
test
cli
mov
xor
mov
loop
adc
pusha
iret
inc
jns
cmp
xchg
push
xor
pop
cmp
or
mov
or
fmul
dec
in
push
and
lods
mov
stc
push
push
or
je
mov
test
sub
loopne
hlt
mov
imul
pusha
mov
mov
jb
add
js
pop
or
pop
int3
repnz
pop
test
not
shlb
sbb
pop
cmp
pop
xchg
vpmacssdql
lods
inc
pusha
mov
adc
push
data16
ljmp
push
js
jge
test
call
pop
sub
adc
pop
mov
dec
mov
cmp
jl
out
das
or
cmp
lock
sbb
cmc
push
and
sbb
shlb
shlb
outsl
mov
and
lcall
pop
cltd
cmp
mov
dec
pushf
mov
add
call
imulb
cltd
xchg
pop
in
aam
rcrb
cli
scas
mov
addb
inc
xor
mov
sbb
cmp
jno
cmpsl
loopne
xchg
lcall
sub
push
test
sbb
lds
std
ss
jbe
daa
aaa
mov
movsl
xchg
dec
cmp
xchg
je
adc
and
push
mov
dec
int3
out
dec
loope
int
cwtl
push
fldt
pop
sahf
adc
mov
enter
and
pushl
mov
sub
ljmp
mov
or
insl
loope
xchg
xlat
sti
orl
lock
into
add
insb
aad
imull
and
jp
int3
int
sbb
cs
rcrl
and
inc
adc
fldcw
fistps
push
sub
pop
mov
inc
and
push
mov
fidivrl
push
mov
push
pop
and
iret
not
out
xlat
shlb
inc
add
das
lcall
mov
repnz
in
xor
cmpsl
mov
push
adc
cmp
mov
mov
dec
cs
cmpb
jg
xor
xor
jle
dec
jmp
cmpb
mov
or
adc
pusha
push
cmp
into
sbb
cmp
mov
mov
xlat
adc
stos
stos
cmp
out
repnz
loop
inc
cmp
xchg
inc
push
aas
jl
jp
loopne
push
out
ljmp
push
mov
mov
or
add
jno
pop
or
xlat
aas
ud1
insb
dec
mov
dec
stos
cmp
mov
cs
sub
fldt
ljmp
pop
mov
rclb
jl
push
jp
or
adc
cld
cli
mov
pop
sbb
sbb
add
push
jne
gs
lret
out
xorb
mov
mov
add
stos
add
adc
movsb
int3
cmp
and
std
mov
cli
xchg
jle
mov
test
and
imul
xchg
in
ljmp
mov
and
xchg
cld
adc
mov
sub
mov
in
andb
movsl
sub
fstl
dec
xor
test
lret
fcom
add
mov
push
xchg
mov
or
sbb
ret
popa
push
fs
mov
iret
addr16
pop
pop
jg
icebp
or
mov
mov
popa
xor
adc
popa
inc
movsl
xchg
je
testb
inc
ljmp
pop
sub
inc
test
mov
inc
pop
jno
push
push
jg
jne
sti
imul
test
add
xchg
mov
or
inc
pop
fdivrs
mov
loopne
shlb
jge
sub
test
dec
xlat
pop
insb
xchg
and
out
adc
cmpsb
sti
mov
mov
adc
mov
scas
ficoml
sarl
or
mov
dec
in
cmpsb
adc
mov
mov
cmpsl
pop
lods
inc
jae
addl
dec
inc
cwtl
inc
inc
scas
mov
inc
xchg
push
pop
xor
mov
sti
or
xor
pop
mov
xor
mov
mov
xchg
sti
mov
fnclex
push
and
mov
adcl
dec
sub
lahf
mov
inc
fldt
out
fisubl
orb
push
out
mov
test
mov
xchg
inc
insb
fiadds
or
or
fisubrl
emms
inc
daa
adc
or
shrl
ja
repnz
and
lds
mov
or
scas
pop
pop
dec
fisubrl
push
push
scas
cmpsl
gs
cmc
push
in
aas
xchg
mov
movl
fs
xor
cmpsl
inc
roll
sub
mov
inc
jp
mov
mov
call
lock
lret
jb
and
pop
ds
dec
jge
in
lret
stos
mov
dec
jg
sub
in
ja
sbb
stos
pop
jg
mov
in
lods
adcb
insl
pop
pushl
add
pop
stc
mov
dec
adc
sbb
mov
push
and
test
add
movl
cmpsl
pop
fldl
mov
push
push
test
or
dec
pop
fwait
dec
fcomp
xchg
xchg
mov
gs
outsb
xlat
ds
clc
ret
cli
adc
mov
sbb
insb
icebp
lret
sti
aam
or
bound
jl
and
jns
lods
into
inc
mov
xor
push
adc
cmp
pop
add
mov
out
pop
fcmovnu
xlat
mov
sahf
js
xchg
mov
pusha
out
cli
stos
shlb
pop
xchg
loopne
int
mov
inc
scas
fimull
sbb
movsb
insb
cmp
sbb
pop
ljmp
inc
mov
insb
dec
adc
jae
andl
jg
xor
or
fwait
and
testl
jle
test
fwait
popf
jnp
stos
fcoml
add
aas
pop
adc
enter
jb
mov
je
lds
adc
mov
idivb
sti
outsb
loopne
xchg
jge
or
in
movsb
mov
cltd
and
sbb
jno
jp
dec
sahf
das
xchg
scas
test
ja
hlt
adc
lods
mov
cmpsb
int
inc
sub
sub
into
les
insb
je
xor
pop
loope
cmp
sbb
in
test
jmp
outsl
inc
push
fs
lret
into
leave
mov
sub
call
mov
xchg
iret
imull
push
pop
into
test
push
mov
insb
and
jmp
push
sbb
andb
outsb
out
lods
ds
setne
outsb
cld
sar
out
mov
add
lods
sub
in
test
mov
fstpl
lock
pushf
add
xlat
ds
push
std
add
mov
jg
xchg
pop
sub
rcrb
out
iret
test
imul
out
int
leave
sbb
dec
fsubl
div
mov
push
pop
sub
addl
sbb
lret
arpl
cltd
out
aad
adc
adc
loopne
mov
or
add
jp
and
mov
dec
adc
xlat
xchg
mov
pop
mov
in
leave
dec
loopne
xchg
int
clc
pop
xor
lds
mov
pop
ret
jg
loopne
lods
out
ja
lahf
or
in
sub
jb
lods
sbb
cmp
mov
je
popf
or
and
inc
mov
inc
adc
mov
inc
jecxz
pop
xor
jno
pop
shrl
jmp
aas
cs
rcll
and
jne
lods
dec
pop
ret
sbb
adc
lods
pop
scas
jge
mov
mov
std
or
out
aaa
xchg
jg
lea
movsb
int3
mov
iret
mov
fdivrl
xchg
lcall
or
enter
mov
jne
andl
xchg
mov
subl
pop
push
mov
test
sbb
das
xchg
popa
aad
aam
jl
mov
push
sarb
cmp
stos
jb
and
jne
in
into
adc
fwait
jecxz
fidivrs
mov
pop
sub
pop
lea
pusha
mov
push
jne
inc
cmp
js
mov
pushf
jp,pt
mov
pop
sub
mov
mov
lds
mov
sub
add
or
adc
popa
pop
push
push
test
adc
test
adc
loop
imul
dec
push
jbe
inc
out
aaa
jbe
sub
add
pushf
repz
aad
ja
dec
std
mov
xor
sarl
inc
sbb
pop
lods
xchg
inc
and
inc
je
sahf
cmp
sarb
jo
in
add
fsts
clc
xor
aam
repnz
pop
shl
and
mov
push
pop
sbb
shll
pop
sub
push
lret
out
out
adc
pop
fmulp
jae
incl
outsb
mov
xor
xor
fwait
icebp
cmp
inc
test
out
adc
je
cmpsl
and
out
mov
cmp
xor
cmpl
mov
xor
repz
push
xchg
mov
ljmp
ret
arpl
add
int
lds
cld
dec
arpl
in
ss
repz
xchg
insl
sub
dec
mov
leave
lea
or
cmp
or
push
jb
nop
cld
sarb
inc
or
adc
leave
mov
add
add
mov
cwtl
push
xor
sub
xchg
daa
and
or
daa
inc
and
imul
fwait
inc
push
outsl
add
xor
fsubrl
stc
mov
dec
aad
and
and
and
out
out
mov
add
and
repnz
aam
and
js
push
sar
ret
xchg
xor
andb
xor
sbb
and
mov
ss
inc
inc
lahf
in
pop
fs
xchg
and
ret
pop
stos
lods
add
xor
fimull
sub
shlb
daa
add
mov
pop
clc
int
in
and
int3
dec
sbb
nop
lods
add
mov
int3
xchg
mov
adc
adc
xchg
dec
in
adc
outsl
cmpl
mov
cmpsb
in
mov
dec
adcb
lahf
lcall
cli
sub
adc
call
nop
cmp
in
dec
cmpsb
sub
mov
scas
dec
sub
pop
push
lods
mov
xlat
xor
rol
dec
aas
pop
dec
dec
rolb
xchg
rorl
scas
inc
jae
pop
adc
nop
sarl
hlt
les
xchg
xchg
lods
popl
fildl
push
push
or
push
loope
decl
pushf
mov
fdivs
cltd
outsb
out
dec
push
vxorps
mov
ret
mov
cmpsl
std
xor
leave
xchg
lea
insb
or
cwtl
repz
gs
mov
mov
dec
mov
pop
pop
in
imul
pop
cmp
xor
add
xchg
jae
dec
in
sbb
test
xor
mov
fsts
push
pop
dec
jmp
push
push
ror
inc
jo
je
push
sar
and
movsl
cvttps2pi
dec
imul
push
stos
jle
jns
lea
cli
xchg
jo
test
fnstenv
movzbl
push
mov
lsl
cmp
scas
loopne
pop
jl
mov
test
cs
lcall
dec
movsb
fld
lds
hlt
sbb
mov
xorl
mov
mov
ja
sub
stos
movsl
pop
sti
pusha
imull
mov
or
xor
and
sbb
fildl
mov
mov
jl
inc
test
pusha
lret
mov
inc
pusha
cld
pop
add
mov
adc
pop
lsl
cmp
pop
aam
icebp
mov
jo
sbb
mov
mov
stos
sbb
ja
mov
dec
xor
stos
inc
cmpsl
leave
jns
ret
sti
inc
cmp
test
popa
pop
push
jge
fwait
test
cli
dec
pop
xchg
mov
shll
add
mov
fwait
pushw
add
popf
sti
dec
sub
dec
sub
mov
or
mov
test
data16
loope
pop
hlt
cld
into
adc
jle
push
fisubl
jbe
cmpsl
jg
mov
mov
push
cmp
sbb
xchg
out
in
mov
push
jl
pop
ret
mov
repz
mov
je
push
and
mov
test
out
jnp
fidivrl
imul
and
insb
aam
lods
enter
hlt
add
fs
movsb
inc
cmp
divb
aas
pop
mov
call
lods
sbbb
movsl
jns
leave
pop
dec
fsubrs
fcomp
pop
push
push
jmp
rorl
frstor
lcall
mov
cmp
or
je
dec
idiv
sub
push
out
movsb
jbe
rcl
fwait
cmc
lahf
ja
movsb
popa
das
xchg
dec
pop
shrb
cs
in
sbb
adc
sub
out
mov
xchg
outsb
push
repz
adc
inc
arpl
aam
in
pop
mov
filds
pop
and
jecxz
out
dec
scas
pop
cmp
loope
shrb
lcall
pop
rorl
jae
out
rcrl
inc
inc
pop
pushf
add
xor
pop
insl
pop
jp
jmp
cmp
jo
mov
xchg
fsubrl
mov
pushf
pop
ror
lret
sbb
hlt
add
xor
xchg
mov
outsb
das
jno
adc
add
mov
scas
dec
and
mov
jl
enter
lea
jg
adc
dec
fwait
mov
xchg
cmp
rorl
adc
stos
jl
mov
sti
sub
jg
sub
mov
outsl
xchg
push
cmp
je
inc
add
cmc
mov
jmp
fcmovnu
arpl
or
xchg
ljmp
jbe
sbb
insb
addl
jbe
mov
xchg
mov
mov
cmp
dec
ss
jae
cwtl
mov
repz
xchg
ja
ret
bound
add
outsl
cmpsl
imul
adc
andb
mov
inc
jmp
pusha
or
lret
sbbl
aad
not
outsb
inc
and
call
sti
decb
push
jmp
pop
lock
adc
adc
stc
stos
push
cltd
aad
pop
mov
sbbl
pop
and
sbb
mov
adc
inc
mov
leave
add
pop
dec
outsb
test
mov
add
mov
mov
xlat
mov
jp
call
jbe
std
xlat
push
and
sub
inc
faddl
into
movsl
mov
sbb
outsb
push
aaa
push
and
jae
dec
xchg
stos
and
in
inc
hlt
push
ret
mov
push
xchg
xchg
dec
in
mov
xor
lods
ljmp
stos
push
mov
jle
cmp
mov
outsb
adc
mov
jnp
cmpsb
adc
test
dec
sub
dec
push
xchg
aam
push
data16
fld1
dec
push
aas
dec
cltd
pop
mov
xchg
cmp
lock
iret
shrl
push
inc
ds
pop
scas
sbb
mov
insl
lea
cmp
lahf
call
mov
or
jl
loope
pop
fmull
sbb
jbe
aad
das
pop
repz
inc
xchg
fmull
in
and
pusha
test
cmp
negb
femms
syscall
clc
daa
mov
or
or
out
jl
inc
ficompl
aam
icebp
xchg
dec
inc
test
inc
int3
mov
in
mov
scas
out
adcb
pusha
cmp
push
hlt
dec
mov
pop
sub
push
fldenv
mov
fiadds
jbe
sub
push
test
lods
jecxz
stos
shrb
dec
enter
lret
shl
roll
sub
pusha
test
jmp
inc
data16
sti
out
sub
pop
dec
push
lret
add
repz
and
add
pop
subb
in
jae
movsb
ret
pop
mov
xchg
push
inc
shll
xchg
push
insb
rcrb
adc
dec
xchg
and
lods
sahf
jge
mov
mov
mov
xchg
sbb
mov
repnz
mov
pop
sub
fsubr
cmpsl
test
xchg
stc
inc
fnstenv
loopne
or
or
cwtl
int3
push
dec
inc
aad
mov
rorb
test
sbb
pop
or
stos
mov
in
insb
lods
icebp
xchg
test
dec
das
jo
push
jecxz
cld
xchg
add
sbb
mov
xchg
inc
mov
and
sub
xchg
pop
dec
or
jp
popf
gs
fdivrl
mov
pop
roll
or
push
push
in
outsb
adc
adc
push
loop
ljmp
dec
aam
adc
les
and
adc
insl
cs
jo
fdivr
sbb
xchg
je
outsb
lods
fnstenv
xchg
cmpsl
pop
jge
pop
adc
xchg
cmp
clc
inc
insl
xor
jp
xchg
aam
mov
fnstenv
dec
jg
enter
mov
jb
iret
sbb
daa
add
dec
push
loop
aas
push
mov
fstl
inc
and
inc
pop
mov
imul
scas
out
dec
lock
pusha
lods
ret
flds
sbb
insl
daa
push
xchg
push
fs
jnp
mov
fdivrl
add
imul
xor
movsl
sub
dec
scas
out
popa
insl
shll
and
test
test
push
aas
in
out
aad
inc
adc
shrb
sbb
fsubrs
call
jle
and
dec
dec
mov
xchg
jmp
pop
das
push
stos
das
lods
jb
xor
ret
jne
jg
or
fdivrl
adc
sub
dec
fsub
jnp
add
lcall
cli
enter
jno
push
push
shlb
mov
test
and
and
xchg
in
mov
dec
pop
int3
mov
mov
pop
or
sahf
mov
xor
fsubr
adc
cmp
andl
or
into
add
nop
mov
sahf
scas
rorb
les
pop
dec
movsb
fs
xchg
insb
lock
adc
insb
loope
xor
push
add
sbb
das
add
xor
pop
fs
xchg
cmp
mov
mov
cmp
repnz
jns
data16
dec
dec
fs
addr16
jbe
mov
shrl
push
movsb
push
push
fiadds
fsubp
test
mov
mov
ss
lea
push
cmpsl
stos
insl
jns
inc
in
mov
jmp
push
add
addl
adc
aaa
xchg
testl
dec
insl
insb
les
mov
inc
ljmp
mov
fisubrl
jg
sub
aas
push
enter
mov
pop
add
lock
lods
lods
aaa
inc
pop
lret
ja
les
xor
pop
xchg
aam
cmp
xchg
test
pop
aas
dec
aaa
xchg
add
shrl
insl
and
test
test
out
inc
in
inc
pop
ljmp
and
sbb
adc
cmp
jg
push
shll
test
mov
cmp
nop
sbb
adc
ss
mov
negl
bound
rcll
leave
cmpsb
es
cld
out
xor
int
dec
jno
push
xchg
and
push
test
sub
lods
shl
sub
jp
lret
adc
and
push
out
hlt
jmp
sbb
mov
dec
popa
cli
pop
jae
ja
cltd
mov
jmp
insb
dec
dec
adc
imul
push
adc
imul
andb
add
das
pop
push
iret
ja
fwait
mov
add
nop
mov
sbb
fsubl
aaa
pop
lahf
mov
repnz
xchg
hlt
inc
mov
jle
ror
ja
enter
imulb
ret
sbb
sbb
aam
mov
fnstcw
cmp
pushf
out
sarb
push
jl
adc
ss
lock
inc
rclb
ret
jp
decl
pop
and
dec
idivb
adc
repnz
push
ret
inc
add
popa
icebp
sub
aaa
xchg
test
sbb
insl
sbb
mov
xor
sub
shrl
and
dec
xchg
push
inc
aam
push
mov
adc
std
jnp
jecxz
in
mov
stc
sbb
ja
jae
cmp
cltd
imul
movsb
mov
in
outsb
std
out
mov
sub
push
outsb
data16
int
mov
push
xchg
cmp
jmp
sbb
push
insb
xchg
add
xor
push
dec
mov
dec
jnp
mov
dec
mov
enter
or
pop
sbb
add
dec
push
pushf
mov
pop
or
bound
test
cld
pushf
jne
ret
adc
inc
sti
ret
sbb
aas
loopne
arpl
popa
xchg
and
shll
mov
or
loopne
lods
mov
es
test
stos
and
inc
lcall
repz
cmp
add
sub
loop
and
inc
and
fstps
xor
fstpt
cmp
sbb
sub
dec
ds
pop
dec
sbb
adc
movsb
fists
mov
add
sbb
mov
scas
out
fisttpll
push
divb
xchg
outsb
fisttps
xor
outsb
mov
pop
mov
shrl
cmp
rcr
sbb
mov
es
xorb
mov
xor
adc
iret
push
insl
leave
pop
fwait
popf
xchg
lods
sub
lds
in
mov
movsb
imul
adc
mov
xchg
jg
mov
test
pop
filds
pop
xchg
sbbb
popw
stos
inc
mov
sub
sub
cmpl
mov
push
mov
mov
inc
adc
js
sub
dec
jg
adc
sbb
imul
cmp
scas
rorb
xor
push
push
xchg
mov
cwtl
sti
out
xorb
into
or
mov
in
and
push
push
arpl
push
sbbl
jae
out
fnstsw
inc
fidivs
cmp
cmpsb
in
sub
jo
jle
sub
jno
repnz
cmp
outsb
xchg
mov
mov
pop
ffreep
into
repz
or
pop
mov
imul
or
cld
and
or
clc
dec
aaa
and
or
xor
pop
and
fnstenv
xchg
push
cmpsl
dec
and
fistps
mov
adc
dec
dec
add
cmp
cmpsl
mov
insl
jnp
adc
jo
push
lcall
call
sub
adc
call
add
test
or
mov
pop
mov
xorb
pop
xor
xchg
dec
cmc
or
sbb
mov
fdivrs
loope
inc
mov
sbb
rcl
xor
pop
insl
xchg
adc
xor
cmp
xorb
rorl
in
adc
das
push
fisubrs
jb
in
daa
and
xor
adc
ljmp
mov
hlt
fwait
push
dec
enter
sbb
pop
lock
mov
loope
jmp
arpl
mov
test
xchg
mov
int3
push
xor
xchg
sub
mov
mov
es
stos
add
enter
mov
shll
rolb
inc
xchg
or
lds
inc
jo
or
mov
in
mov
dec
ljmp
push
ss
int3
lahf
addl
mov
lahf
aas
scas
or
sbb
sbb
nop
ficoml
push
adc
mov
pop
fcomp
arpl
les
pop
leave
dec
add
mov
cmp
leave
repz
jmp
std
pop
inc
mov
add
pop
pop
and
jne
mov
les
icebp
pop
cltd
mov
lods
cwtl
js
jl
fs
loopne
dec
jns
xor
adc
sub
sbb
lock
and
iret
adc
jae
cmpl
test
not
cwtl
cmp
add
cmp
sbb
scas
addr16
inc
or
jns
sbb
pop
lcall
push
inc
imul
or
and
mov
pop
aas
push
inc
adc
sub
stos
add
imul
fildl
mov
push
xor
les
jb
xor
cmp
inc
inc
lcall
mov
lock
bound
mov
push
std
xlat
out
xchg
ret
xor
cwtl
sub
das
xlat
stos
dec
pop
and
push
add
mov
pop
add
ja
arpl
je
gs
in
sbb
mov
xor
push
cmp
addl
pop
push
or
dec
add
sub
jbe
jge
fxch
push
cmp
test
xchg
dec
dec
sub
cmp
or
cmpb
add
sub
out
jge
dec
hlt
pop
out
sub
push
in
cmp
or
xchg
pop
sahf
test
jbe
or
stos
das
jmp
stos
xor
mov
inc
sub
mov
pop
fdiv
adc
movsl
popa
jns
mov
ret
in
into
sbbb
push
shld
push
push
outsl
adc
int3
dec
rcrl
pop
xor
mov
dec
xor
lds
and
enter
or
and
sbb
jmp
dec
mov
cs
int3
int3
call
je
negb
ret
cld
notb
rol
test
sub
in
cmc
daa
xchg
or
fildll
repz
adc
xchg
test
sub
pop
and
test
mov
fldln2
mov
lds
scas
pushf
ds
scas
xlat
dec
loope
sub
inc
lds
insb
cmp
stos
mov
push
pop
lahf
fs
iret
pushf
ret
xorl
xchg
outsl
jg
int3
sub
push
aam
imul
sahf
das
mov
mov
jle
lock
mov
xor
xchg
icebp
into
pop
js
or
iret
stos
mov
adc
xor
sub
lret
mov
movsb
adc
jb
in
push
xchg
inc
pop
push
mov
dec
popf
leave
or
mov
std
out
inc
ljmp
inc
pop
out
daa
jb
mov
push
or
lret
test
mov
or
and
dec
push
inc
mov
sar
fdivr
cmovno
ljmp
mov
dec
in
idivb
test
dec
fs
or
mov
or
sub
mov
adc
add
testb
dec
repnz
or
icebp
inc
cs
cld
inc
call
xchg
mov
jge
push
data16
fs
cmpsl
imul
dec
sub
mov
jb
out
sbb
jns
xchg
cld
xchg
cld
push
arpl
fistpl
mov
aas
call
lahf
mov
pop
les
inc
add
cmpsb
sahf
nop
outsl
mov
out
mov
and
inc
loopne
mov
push
nop
jmp
les
imul
daa
imul
mov
mov
inc
sbb
icebp
xor
jge
iret
shlb
mov
sbb
sub
std
inc
xchg
add
das
mov
daa
adc
aad
insb
stos
mov
inc
mull
jae
lea
cli
sub
jl
push
sub
cmp
cmp
dec
loop
fidivl
sub
mov
mul
mov
inc
fidivrs
add
idivl
loopne
mov
ljmp
std
mov
sbb
icebp
mov
out
stos
movsl
jl
aad
daa
popa
roll
jecxz
jns
sub
push
lcall
in
sub
xor
scas
lods
push
iret
fnstenv
dec
push
or
xchg
cmpsb
inc
add
sarl
roll
sbb
in
call
jl
lea
out
lahf
jle
rcr
pop
sbb
test
stc
sti
push
dec
sub
push
add
cmp
and
ret
jecxz
xchg
movsl
jb
lcall
xor
push
push
das
lcall
and
jge
ja
mov
dec
lods
xor
add
loope
and
data16
push
scas
add
aam
dec
fcom
fwait
mov
xchg
hlt
xor
mov
push
ret
fs
inc
scas
shll
int3
dec
xor
lcall
inc
cmp
sub
lods
or
push
xchg
mov
test
subb
cmp
addr16
aad
xchg
stos
xor
aaa
pop
arpl
leave
ds
cmpsl
mov
ja
leave
popf
pop
xchg
mov
leave
push
scas
int3
adc
imul
jae
rolb
sbb
add
mov
shl
xchg
jp
and
test
andb
xor
push
and
cmp
inc
mov
mov
xchg
pop
insb
rorl
jo
mov
xchg
daa
sbb
mov
repz
aad
push
inc
mov
mov
test
mov
aad
xor
push
aam
fisubrl
mov
sub
stc
dec
out
ret
xor
push
jle
xchg
or
ljmp
xchg
pop
adc
xor
push
pop
loop
xor
pusha
test
leave
rclb
adc
xchg
imul
addr16
pop
sbb
gs
mov
stos
fnstcw
pop
cld
push
cmp
xor
jl
adc
add
add
push
xchg
fucompp
xor
pop
pop
mov
jmp
dec
push
cmp
jge
push
xchg
insb
mov
lret
push
sti
mov
fs
shll
inc
xlat
adc
bound
mov
jnp
ja
cmp
imul
mov
cmc
adc
ffreep
das
in
test
loop
aas
std
leave
push
lret
sub
jne
inc
cmp
mov
lret
incb
push
repz
mov
mov
mov
sub
lock
int3
sbb
fiadds
lods
sahf
roll
test
xchg
repz
sbb
mov
pushf
dec
out
out
mov
out
inc
std
dec
xlat
mov
jae
inc
in
notb
mov
cli
fs
aas
cltd
xchg
or
stos
hlt
fmuls
mov
xor
mov
xchg
push
hlt
cmp
shll
mov
xchg
pop
add
push
lcall
mov
xor
mov
pop
lcall
mov
ret
xchg
push
shrb
pop
mov
xor
xor
cmpl
cmc
jecxz
sub
movsl
ret
cmpsl
daa
dec
sahf
ds
lgs
inc
jo
shrb
test
mov
sub
mul
mov
jne
jne
jnp
insl
test
clc
mov
jle
and
sub
aaa
cmp
hlt
mov
xlat
xchg
jne
mov
sbb
fcoml
or
leave
mov
xchg
mull
xlat
adc
pop
cmc
cwtl
sbb
aad
mov
call
inc
or
mov
shrb
push
lahf
push
mov
xor
mov
filds
jno
xchg
xor
mov
push
mov
xlat
lds
xor
pop
ja
push
add
mov
test
xor
bound
lea
jg
insb
mov
adc
push
gs
aad
loop
into
rorb
xchg
out
ljmp
cmp
jmp
scas
scas
mov
jl
test
sbb
mov
push
cld
cmp
mov
xchg
jb
ss
loopne
add
lea
dec
fs
pop
jp
add
and
xchg
mov
mov
movsb
jmp
add
dec
sbb
daa
push
repnz
ljmp
lcall
fsubrl
fucomi
out
xor
mov
popf
test
dec
jmp
xor
add
pop
pop
inc
jne
sahf
pop
jne
jno
inc
or
sub
mov
leave
mov
addb
in
bound
fwait
mov
fs
pop
outsl
add
mov
test
pushf
adc
movsb
lods
mov
sbb
mulb
push
lods
mov
inc
cmp
pop
xor
lret
cs
and
insb
push
pop
loope
inc
mov
mov
in
pop
mov
jbe
les
mov
sti
xor
rclb
lret
sbb
std
and
mov
mov
nop
sub
jge
mov
fcom
sub
dec
sar
aas
negl
dec
andb
rsm
pop
dec
mov
pop
stos
jmp
icebp
mov
push
xor
dec
pop
inc
pop
test
aad
out
in
sbb
mov
cld
sahf
add
mov
shll
jp
jl
lret
mov
lods
icebp
call
nop
push
mov
aad
cmc
mov
outsb
xchg
push
dec
les
xchg
in
xchg
cmpsb
das
sbb
push
lret
pop
call
fiaddl
xchg
push
notl
sub
fs
int
xchg
xchg
mov
mov
push
cs
cmpsb
cmp
push
aaa
inc
mov
dec
fcompl
fcoml
mov
in
jp
sub
xchg
repnz
out
push
ss
add
or
and
pop
fnstenv
popa
popl
clc
repz
scas
daa
ljmp
add
popa
sub
adc
xor
xor
mov
aam
in
fwait
or
push
test
rolb
sub
js
mov
sbb
cmpsl
adc
push
dec
pop
lret
push
arpl
inc
rcrb
xchg
in
scas
cmp
fdivr
cmp
push
jl
pop
fidivrs
loope
shlb
mov
imul
xchg
pop
xlat
pop
out
insl
add
mov
dec
sub
cmpb
adc
int3
fmull
adc
gs
push
stos
push
cwtl
test
mov
sub
sbb
inc
mov
ret
dec
mov
inc
fistpl
xlat
dec
push
cli
add
mov
mov
mov
mov
push
in
mov
mov
mov
fistl
mov
cmp
es
sub
movsb
fsubrs
inc
add
fwait
pop
mov
fadd
call
aam
test
es
mul
pop
xchg
leave
cmp
stos
in
sbb
push
aaa
out
add
or
stos
fbld
outsb
loopne
enter
push
mov
fisttps
cld
sbb
pushf
aaa
mov
push
ljmp
je
data16
insb
cli
mov
jmp
std
mov
adc
dec
cmp
mov
and
dec
and
jns
cmc
shll
outsb
push
sbb
ficoms
xchg
cmp
adc
xor
xchg
xlat
or
mov
ja
sub
push
daa
dec
add
sahf
xor
pop
jo
jns
cmpsl
movsb
add
dec
ret
outsl
lods
mov
out
sub
sbb
inc
mov
cmp
dec
outsb
repnz
dec
mov
mov
jns
inc
cmc
lds
cmpsl
push
fsubl
cmpl
aam
mov
rol
inc
or
mov
push
and
adc
inc
imul
add
and
jno
xor
fcmovnbe
mov
push
adc
sub
sbbb
mov
push
mov
and
mov
icebp
xlat
inc
stos
rol
rcll
mov
inc
sub
cmp
push
cmp
push
inc
bnd
gs
fmul
test
pushf
push
and
mov
imul
or
mov
or
or
push
cli
mov
loope
mov
sbb
int
negl
in
xchg
fimuls
sub
in
adcb
aas
fstpl
mov
imul
shl
repz
adc
adc
push
mov
jbe
add
sub
cmp
or
lea
push
and
insb
cmp
out
mov
cmp
into
ret
or
roll
pusha
dec
in
sub
push
mov
dec
mov
add
test
sub
add
leave
repnz
ja
add
xchg
iret
hlt
xor
stc
cwtl
outsb
imul
xlat
ds
and
aaa
dec
cmpsb
inc
int
mov
inc
data16
roll
fcoml
sbb
cmp
pause
stos
aas
shll
sti
cli
fcoms
adc
mov
mov
mov
lret
mov
xchg
adcb
addr16
and
arpl
mov
std
sub
test
out
testl
mov
mov
orb
and
test
inc
mov
mov
cmpsb
cmpsl
cmp
packssdw
stos
int3
ss
addb
mov
pop
push
ret
jb
xchg
mov
dec
adc
je
out
jb
mov
pop
ja
add
push
pop
xorl
or
mov
and
xor
xchg
fsts
rcrb
ficomps
dec
loopne
ret
cli
sbbb
mov
jo
ds
inc
jg
icebp
js
add
mov
popf
dec
xor
out
jne
and
cmp
nop
sub
fldl
jecxz
or
or
add
dec
sbb
cmpsb
dec
scas
cmp
leave
jb
pop
repz
clc
mov
std
lods
xchg
mov
add
mov
push
ja
es
fisttps
lret
cmc
mov
jmp
les
int
inc
data16
add
add
sub
sbb
out
test
sub
stos
xchg
fs
fsts
into
sti
jecxz
cmc
outsb
rolb
xchg
inc
in
movsl
pop
fidivrs
out
add
pop
and
push
or
sub
nop
dec
fcomps
mov
cli
int3
xchg
push
roll
in
daa
pusha
shl
fsubs
mov
sbb
and
inc
in
call
adc
cmp
sbb
leave
inc
in
jge
push
popa
enter
mov
ja
cmp
xor
pushf
inc
mov
mov
mov
push
shl
jb
in
andb
add
js
sub
inc
das
adc
dec
jb
mov
cld
dec
lret
subl
loopne
adc
xchg
jle
mov
movl
xor
test
ljmp
pop
xchg
loope
iret
jne
mov
mov
mov
cmp
push
shrl
sub
pop
ret
adc
clc
xor
movlhps
dec
sub
inc
adc
jbe
xor
inc
jecxz
scas
lret
push
in
lcall
fadds
jecxz,pn
cmp
pop
adc
andl
rcrb
add
movsb
jbe
and
clc
adc
cmp
lods
lea
push
push
test
and
adcb
loopne
fwait
imull
cmc
jle
mov
imul
scas
outsb
cmc
nop
daa
cld
xlat
inc
test
mov
jo
cmp
aam
adc
rorl
inc
int3
es
out
add
push
js
pop
aam
sub
add
cmp
int3
in
loopne
adc
dec
cmp
je
pop
xchg
xchg
dec
cmp
into
inc
outsl
adc
and
mov
stos
inc
cld
insb
mov
cmp
cmpsl
cmp
icebp
ljmp
int
orb
outsl
mov
fistpll
jb
aaa
pop
or
adc
mov
mov
cltd
cmp
loope
daa
mov
shl
jmp
push
push
decl
push
lcall
fldenv
sbb
push
movsl
stos
lock
in
test
mov
bound
loopne
loopne
mov
add
xchg
sahf
dec
movsl
jge
outsb
ss
orl
mov
inc
enter
mov
push
mov
dec
push
xchg
or
mov
push
xchg
jg
ljmp
testb
in
aad
ja
pop
adc
mov
stc
add
iret
fistpl
lret
mov
sbb
retw
leave
inc
rorb
cmp
bound
inc
xchg
inc
push
insl
xchg
dec
push
xchg
outsb
push
pop
dec
int
mov
pop
jg
mov
popa
adcl
push
lds
xchg
test
xchg
add
lods
insb
mov
mov
fidivs
lock
lret
aam
addr16
lret
cltd
inc
pop
or
mov
fwait
push
jae
push
dec
jge
push
es
aaa
add
enter
mov
fmull
sbb
stos
fwait
mov
mov
xchg
xchg
outsb
xchg
sbb
jecxz
xor
lret
inc
sub
jno
sti
mov
pop
xchg
insb
and
sub
xchg
pop
adc
int3
add
mov
inc
push
js
fdivr
jle
xor
mov
add
push
adc
out
xchg
das
inc
jge
push
and
lcall
fidivs
sub
pop
mov
fcoms
push
jle
cltd
mov
cmp
test
bound
inc
and
dec
aam
push
les
xorb
sbb
cmp
pop
gs
pop
jg
gs
push
mov
js
pop
ficoms
fisubs
cmc
sahf
scas
mul
mov
fadd
inc
and
mov
pop
jg
and
lahf
shlb
xchg
pop
push
dec
sbb
xchg
nop
testl
xor
or
icebp
push
es
fsubs
loop
jne
sti
fcomi
addr16
clc
das
cmpsl
xchg
inc
sbb
dec
fsubs
add
mov
jns
outsl
push
add
inc
xchg
mov
aas
bound
cld
jae
jb
lret
ret
mov
fdivrp
and
mov
pop
adc
or
jp
lahf
je
mov
adc
mov
adc
sbb
mov
xchg
test
jle
jmp
and
decl
lahf
lcall
sbbb
push
mov
or
rcpps
pop
repz
jg
add
in
mov
out
xor
jle
or
xor
or
int3
mov
push
inc
arpl
cmp
add
xchg
std
jno
pop
mov
jbe
mov
repz
sub
or
dec
hlt
or
xchg
fwait
jmp
andb
xchg
mov
scas
mov
dec
dec
add
inc
or
lret
ljmp
sub
push
lods
sbb
cmp
in
movsl
shlb
sbb
stc
inc
pushf
stos
scas
mov
mov
sub
cmc
cmp
aam
and
int3
adc
sahf
inc
lock
push
repnz
lahf
mov
push
add
inc
cmp
dec
pop
loop
int
or
mov
push
xor
fimuls
sub
hlt
call
mov
sbbb
pop
sbb
insl
xor
sti
addr16
loope
arpl
in
jl
jno
fwait
add
ja
outsl
cmpsb
jle
mov
mov
daa
mov
jns
mov
outsl
xlat
scas
push
pop
and
cmc
cmc
jae
in
out
and
mov
movd
push
cld
or
sub
sub
mov
sub
movsl
cmpsb
cmp
adc
icebp
mov
fs
sti
fcoml
jbe
enter
rorb
out
push
inc
or
dec
popf
pop
and
adc
fs
inc
gs
scas
xor
pop
jecxz
out
xchg
adc
inc
pushf
lcall
push
cld
decl
mov
xchg
pushf
or
sbb
mov
sbb
sub
cmp
sbb
jne
test
rolb
mov
mov
in
call
aam
xchg
pop
adc
cmpsb
sbb
mov
push
popf
jno
mov
sbbb
dec
mov
pop
scas
cmc
jns
adc
test
and
lret
pop
push
fimuls
insb
inc
and
jle
call
jno
daa
mov
jle
xchg
jecxz
mov
and
inc
insb
cmp
imul
sbb
mov
pop
data16
mov
or
inc
pusha
cld
xlat
inc
arpl
lea
add
call
rorl
shlb
inc
inc
jecxz
pop
inc
dec
cs
sub
sub
adc
mov
jg
sti
pop
movups
jl
int3
inc
push
adc
mov
pop
and
loop
jmp
sbb
dec
movsl
jle
mov
xor
push
fst
and
into
push
pop
dec
or
adc
es
xchg
int3
aam
scas
stos
jecxz
mov
and
push
dec
les
xchg
mov
loopne
add
mov
sbb
mov
pop
call
gs
je
bound
push
pop
jno
sub
dec
and
fwait
lret
cwtl
arpl
mov
push
push
xor
clc
mov
cmovne
mov
and
push
imul
or
mov
sbb
mov
adc
pop
cmp
in
icebp
iret
cwtl
mov
js
xchg
mov
sti
mov
fmull
aam
add
fildll
jb
stos
loope
jl
outsb
pop
ret
cld
xor
or
outsb
mov
or
mov
frstor
sbb
sub
cmpb
xchg
push
pop
inc
or
adc
les
fcompl
and
jnp
rol
cmp
int3
pop
int
ficoml
lds
sub
jg
test
push
xor
and
dec
dec
fsubrs
add
lods
icebp
and
addl
add
pop
or
dec
loop
add
inc
daa
addl
push
rolb
testl
sbb
lds
cmpsb
test
xor
shlb
or
enter
scas
and
jg
add
adc
jb
inc
fsts
ja
cli
push
jbe
jb
push
cmp
fisubs
popf
mov
stos
mov
adc
shll
imul
js
pop
ljmp
dec
aas
or
outsl
xlat
mov
mov
xchg
test
add
xchg
pop
dec
cmp
cmp
lock
and
jbe
mov
fisttps
fidivs
jp
fdivl
popf
xchg
jns
je
loopne
negb
pop
and
add
add
add
cmpl
cmp
test
movsb
jmp
jne
outsl
cwtl
fnstcw
repnz
in
xchg
cmpsl
sub
imul
and
aaa
jo
sbb
lock
popf
xor
repnz
and
pop
fildl
pop
sbbb
dec
sub
xor
fwait
test
lret
out
inc
pop
add
xchg
add
out
es
jmp
test
in
cmp
cmp
data16
xlat
mov
add
push
add
push
sarl
pop
pop
fwait
addl
mov
cld
mov
int
aam
sub
jp
dec
sub
jae
insb
addr16
mov
es
fsts
mov
test
xchg
cmp
lods
inc
lea
fsubrp
repz
clc
cmp
adc
xchg
mov
push
aaa
jns
push
cmpsl
sbb
cmp
shll
ljmp
fdivl
xor
repnz
in
dec
insl
scas
pop
rorb
add
fbld
out
pop
idivl
sbb
int3
rorb
xchg
jmp
sbb
movsl
aas
mov
int
repnz
idivl
push
lret
je
lret
lret
adc
xchg
mov
fnstcw
pop
push
ss
jl
pop
add
fisttpll
xorl
sahf
scas
sbb
arpl
xchg
pop
pop
jo
lahf
aad
add
cwtl
sub
shr
shlb
push
mov
rorl
adc
xchg
xor
lcall
and
jmp
out
cmpsb
int3
xor
jecxz
call
xchg
addr16
ss
sti
pop
aam
jae
outsb
dec
sub
mov
aas
cmp
adc
and
mov
gs
mov
push
loop
and
sub
fidivl
jp
push
inc
cmp
cld
cmp
jp
cmpsl
lret
mov
mov
push
adc
int3
cmp
inc
into
ds
push
inc
xor
mov
sar
or
loop
adc
insb
sub
inc
cmp
test
sbb
mov
dec
mov
add
jne
dec
mov
push
jns
lock
xchg
jo
add
in
call
cmp
mov
out
pop
mov
dec
adc
cwtl
cmp
jp
sub
ret
dec
sub
add
cmc
lret
pusha
int
clc
aad
pop
jle
cs
or
mov
sub
xchg
inc
insl
mov
inc
cmp
pushf
insb
and
lahf
iret
add
xchg
or
pop
fldt
mov
je
mov
add
popa
iret
insl
ret
cmpsl
test
aad
fisttpll
add
es
push
cli
sbb
mov
cmp
pop
mov
mov
jbe
fdivrl
adc
mov
cmp
and
add
sbb
lahf
imul
aam
xchg
adc
mov
insl
sbb
add
pop
scas
mov
mov
mov
mov
pop
out
lds
fisubrl
pushf
in
or
dec
sti
inc
in
ficompl
sti
and
push
loope
decl
outsb
sbb
mov
rcrl
dec
jg
push
and
or
mov
and
insl
mov
in
or
mov
sbb
mov
xlat
shll
cmc
imul
add
mov
rcrl
and
mov
push
mov
scas
pusha
push
xorl
fwait
jno
and
sbb
mov
xor
into
leave
jno
xchg
xchg
cmc
aaa
jl
cs
dec
mov
fimull
push
jp
int
jno
pop
aam
or
fbstp
gs
aaa
lods
or
mov
xlat
or
mov
mov
sbb
pop
outsb
mov
and
adc
sbb
sub
fwait
scas
push
sbb
negb
clc
lret
sub
cmpsl
lea
je
pop
lcall
adc
ss
mov
mov
je
std
adc
mov
sbb
inc
test
jbe
sbb
dec
loope
mov
sub
xchg
jns
xchg
mov
shll
xor
iret
mov
cmpsb
dec
push
jl
cmp
lret
dec
aas
outsb
int3
inc
je
mov
push
in
mov
push
mov
mov
loope
test
fisttps
sbb
fnstsw
jo
pop
xchg
loop
loopne
stos
test
push
ljmp
adc
mov
add
push
into
ficompl
and
push
je
xchg
lcall
data16
mov
data16
and
cltd
xor
sti
mov
adc
pop
jnp
jno
hlt
pusha
mov
pushf
stc
iret
lret
jp,pt
cmpsb
cld
insb
iret
and
in
gs
scas
sbb
testb
popf
dec
sbb
outsl
or
shll
mov
cmpsb
sub
adc
push
aaa
xor
inc
or
add
scas
in
hlt
in
in
cmp
repz
das
sub
dec
daa
cmpsl
lret
les
imul
dec
pop
sub
mov
stos
push
in
clc
dec
rcll
in
lods
push
push
aaa
outsb
mov
dec
inc
mov
add
repz
cmpsl
std
sti
cmp
daa
or
jge,pt
pop
inc
dec
pop
xor
mov
cltd
rcrb
cltd
lods
lea
andl
je
pop
sub
jmp
xchg
jo
inc
fldcw
int
mov
arpl
mov
xor
inc
ficoml
inc
mov
outsb
jne
cltd
adc
ret
xchg
sbb
sub
ret
daa
mov
in
xor
jp
cmpsl
sub
xchg
xor
call
adc
scas
in
xchg
gs
pop
mov
or
jne
les
dec
lock
add
sti
in
sbb
in
mov
or
jl
jns
adc
push
cmp
push
lods
jmp
lret
imul
xchg
lea
pop
mov
mov
inc
sub
xchg
xor
mov
enter
pop
jl
outsb
ret
scas
iret
or
dec
das
mov
add
pop
push
in
dec
xchg
shlb
test
dec
cld
test
jmp
dec
fadd
jnp,pn
in
inc
inc
dec
xchg
xchg
sub
inc
imul
cmpsl
pushf
cs
xchg
jp
cmp
mull
jl
sti
paddsb
fistl
int
and
xchg
sbb
cltd
and
stc
insb
addl
or
popf
cmp
or
and
inc
gs
and
jno
sub
cmpsb
mov
push
sbbb
xor
pop
cld
ds
xchg
shlb
inc
xlat
test
call
push
fs
bound
sahf
cmpsl
sub
cwtl
sbb
into
push
cwtl
mov
mov
xchg
mov
les
or
cli
imul
out
out
push
cmc
iret
sbb
cmp
jg
cmc
leave
sahf
lret
mov
lahf
adc
lcall
movsb
ds
mov
out
jl
mov
test
cwtl
pop
adc
cmpsl
sub
stc
jl
out
mov
push
and
idivl
push
in
pop
je
push
sahf
push
or
mov
or
jbe
pusha
cli
xchg
add
cmp
xchg
pushf
out
mov
and
inc
lds
adc
cli
xchg
sbb
sub
jae
jle
or
iret
mov
es
popl
leave
aas
dec
gs
mov
jnp
stos
mov
add
into
xchg
sbb
js
pusha
mov
in
sub
sub
mov
test
sub
mov
shr
loop
addr16
or
addb
mov
fistps
insl
sbb
stos
or
mov
add
jne
stc
incl
push
sbb
in
out
in
mov
fcompl
lret
mov
adc
and
mov
mov
jmp
xor
cmp
lret
and
xor
pop
popa
adc
inc
mov
stos
sarb
inc
aaa
fwait
icebp
mov
mov
mov
in
inc
mov
dec
push
or
adc
test
pop
stos
icebp
mov
dec
xor
adc
in
in
mov
cltd
pop
mov
stc
push
ret
cltd
jmp
cmp
movsl
sbb
xchg
sbb
outsl
push
dec
cmp
ja
or
xor
xor
hlt
addr16
repnz
orl
fmuls
ljmp
cmp
mov
mov
mov
xchg
push
leave
sbb
push
dec
pop
mov
sahf
loop
jl
pop
repnz
mov
stc
stc
stc
and
sbb
inc
xor
or
mov
inc
ss
cmp
outsb
add
sbb
push
jmp
cmp
and
sarb
xor
push
cmp
cmp
adc
pop
inc
cmpb
dec
pop
movsb
mov
sub
aas
outsb
stc
movd
inc
inc
adc
loope
ds
scas
and
mov
mov
imul
test
mov
test
xor
scas
add
xor
nop
pop
psubusb
ret
xchg
js
je
mov
push
mov
adc
ret
cmc
andl
movsl
pop
cmp
out
inc
lcall
lock
push
movsb
cwtl
ljmp
aaa
jno
fisubl
mov
inc
fwait
pop
mov
inc
outsl
pusha
jge
cmp
xchg
add
popa
and
stc
jp
cwtl
int3
mov
inc
cwtl
pop
dec
sbb
cli
cmp
xor
cld
mov
sahf
imul
mov
push
sbb
loopne
and
bound
push
mov
sbb
pop
mov
pushf
xchg
fisttpll
dec
repz
xor
mov
popf
xchg
push
testl
mov
int
mov
sbb
shlb
xor
aas
xchg
dec
aas
mov
cmp
jge
out
add
icebp
xchg
pop
test
jbe,pn
rolb
fdivl
aam
sub
jg
or
or
add
hlt
dec
sbb
clc
xor
pop
add
xor
inc
iret
mov
test
sti
pop
push
push
out
inc
lea
fbstp
jo
pop
enter
hlt
scas
imul
cli
gs
dec
ret
arpl
push
add
cli
and
cmc
pop
sbb
das
inc
mov
in
gs
adc
ljmp
or
ljmp
daa
shlb
mov
clc
push
xadd
xor
mov
sbb
xchg
xor
dec
fdivrl
rcll
cwtl
iret
loopne
insb
loopne
leave
addr16
cltd
loop
add
and
sti
stc
dec
in
cwtl
sbb
dec
pop
jnp
mov
mov
pop
and
out
push
push
and
xchg
repz
lock
rcl
xor
adc
pop
cmpl
fiadds
adc
lret
bound
mov
je
cmp
inc
mov
stc
loopne
sbb
pop
aam
add
sub
xchg
out
dec
push
mov
pop
sub
stos
xchg
ja
xchg
jo
mov
inc
sbb
push
in
mov
push
notl
loopne
mov
fwait
je
aas
ds
pop
imul
pop
pushf
lock
push
repz
and
add
pop
mov
pop
sbb
xchg
pop
jae
push
clc
out
cli
inc
cmc
jp
dec
pop
jns
cwtl
lds
or
sbb
icebp
scas
lcall
pop
setge
pop
xchg
adc
lret
mov
dec
sub
add
or
addr16
jbe
inc
lods
push
shll
imul
xchg
xchg
jecxz
pop
sub
faddl
andl
fidivrl
outsb
sbb
js
sahf
add
fld
inc
cmp
sbb
xchg
repnz
aaa
neg
or
and
inc
idivb
imul
mov
mov
pop
movw
sbb
aas
pop
lcall
pop
push
ret
mov
sbb
shll
sbb
jecxz
scas
jmp
push
pusha
testb
les
mov
call
xchg
fcmovnbe
adc
fdivp
std
push
adc
out
aaa
mov
subb
and
ret
add
jge
movsl
xor
lea
inc
pop
xor
add
rolb
in
add
rolb
pusha
pop
inc
stc
imul
ret
cmp
mov
pop
scas
hlt
pop
sbb
sub
ljmp
inc
mov
cmp
scas
mov
mov
push
xlat
adc
cmp
jmp
and
ret
xor
xchg
inc
or
ret
jb
jmp
sub
inc
cs
lret
lahf
test
sub
outsb
aad
cmc
ficoms
dec
sub
mov
jmp
mov
push
jge
stc
std
add
sbb
scas
test
mov
lods
and
pop
inc
sub
adc
loop
inc
arpl
cli
pop
out
pop
ljmp
testb
cld
jb
sub
push
int
stc
add
lcall
adc
imul
inc
data16
in
cld
call
sub
xor
fnsave
xor
cmpsb
cmc
loopne
xor
dec
sbb
mov
repz
jae
aaa
sub
pop
repnz
mov
dec
enter
push
push
push
lods
mov
cmp
adc
xor
je
cmc
jle
outsb
add
xor
pop
adc
xor
xchg
daa
cmp
in
mov
sub
iret
mov
xchg
or
lahf
popf
mov
or
out
jge
int3
lahf
or
mov
jmp
arpl
or
xor
mov
into
cmp
sbb
mov
sbbb
pop
cmp
je
addr16
out
ds
jmp
rorb
mov
xor
dec
mov
jle
jnp
sbb
clc
jle
test
sahf
sbb
ret
lret
fcmovb
lock
and
xchg
fists
insl
in
das
sub
outsl
movb
mov
nop
and
xor
mov
jno
fsubr
push
adc
enter
jb
jne
lahf
jp
mov
ret
mov
imul
outsb
adc
in
pushf
mov
inc
inc
lds
arpl
cmp
inc
or
mov
aas
ss
sub
data16
xchg
jae
daa
sub
subb
sub
sbb
std
call
icebp
or
bound
cmp
outsl
cmp
adc
aas
pop
sub
pusha
cmp
dec
negb
mov
mov
or
xor
cmp
lret
clc
in
out
and
in
stc
daa
and
pop
movsb
push
pop
ret
hlt
xor
inc
outsl
sub
test
mov
pop
jnp
push
out
mov
fwait
or
dec
fstps
dec
and
lods
test
imul
es
sarl
dec
cltd
subb
sub
outsl
in
jmp
lcall
dec
mov
mov
xlat
or
jo
jmp
mov
dec
cmp
xor
test
or
mov
xor
addb
imulb
out
ret
ja
fistpl
lock
xlat
iret
dec
pop
mov
ss
fucomip
push
xlat
sbb
jle
jb
add
shrl
test
push
cs
pop
movsl
arpl
sub
xor
mov
repz
mov
xchg
lods
aam
xor
shrb
pop
inc
cmp
sub
xchg
nop
pop
mov
imul
aam
aas
test
imulb
mov
sti
sub
add
shlb
int3
mov
push
rcl
int3
sub
movb
or
sub
ds
xor
adc
das
iret
dec
inc
dec
mov
pop
mov
mov
divl
addr16
xchg
jmp
lea
mov
inc
jns
mov
std
fistps
shll
inc
mov
rol
cmp
sbb
or
mov
cld
outsb
es
hlt
jae
mov
sbb
leave
aad
inc
xchg
pop
add
jl
jmp
cld
outsb
loopne
lds
ljmp
aaa
add
mov
dec
cld
inc
sub
and
jge
mov
addl
cld
cmpb
into
ss
std
and
test
notb
loope
pop
lods
push
inc
mov
push
add
into
stos
jbe
or
adc
jmp
and
fldenv
int
lods
insl
xor
imul
mov
icebp
mov
push
adc
cmc
sub
xor
ds
loop
sahf
adc
mov
in
xor
nop
xor
mov
ret
movsl
fldt
popf
xlat
cmp
cmp
test
fs
out
xor
adc
in
scas
or
jo
leave
and
xchg
movups
in
or
adc
push
imul
xor
xor
pop
push
in
and
mov
xor
sbb
mov
cmp
inc
popf
xchg
inc
pop
push
lds
ficoml
addb
repnz
or
inc
sar
aad
ljmp
jecxz
aam
and
jp
sahf
out
hlt
fcmovnb
ret
test
cmpsl
imul
les
or
into
and
aaa
jae
stos
out
xor
call
test
aad
mov
popf
cmp
cmc
xchg
cmpsb
or
cmpsb
movsl
xchg
movsl
adc
lret
sbb
in
jbe
in
cmpl
pop
mov
incb
in
rorb
mov
cmpsb
shrb
push
cli
mov
std
pop
popf
fnsave
push
or
dec
pop
in
adc
pushf
mov
arpl
mov
add
or
xchg
inc
and
mov
pop
lahf
mov
xor
out
jb
mov
out
sti
aad
fmull
stc
stos
in
cmc
movsl
cli
dec
inc
cmpsb
out
sbb
ds
xchg
test
add
add
push
push
and
test
jne
shr
jnp
leave
and
inc
and
jp
popl
aam
xor
es
in
or
loop
je
les
and
xchg
xchg
shrb
jmp
push
jecxz
dec
repz
xchg
ret
xor
jo
or
imul
sahf
pop
out
inc
test
jl
popa
adc
outsb
adc
inc
cmp
ljmp
sub
push
je
mov
shrl
jl
mov
mov
cltd
mov
inc
mov
or
pop
mov
fisttpll
and
mov
inc
aad
adc
and
push
pop
lcall
or
or
sahf
fdivrs
pop
repnz
or
js
das
lcall
test
fs
and
test
scas
cmc
add
xor
les
push
add
jle
jge
test
rcrl
ljmp
mov
outsb
outsb
fs
jmp
mov
xchg
pop
inc
xchg
out
push
test
cmc
daa
cmp
aam
mov
mov
loope
daa
std
ljmp
sub
mov
gs
jns,pt
push
xor
dec
push
loopne
test
mov
pop
cmovne
sbb
nop
inc
add
mov
lods
orl
adc
stos
inc
or
jnp
shr
addr16
icebp
inc
int
xor
loope
pushf
and
cs
outsb
outsb
push
cmp
cwtl
dec
lds
adcb
and
or
movsl
adc
insb
mov
fwait
sahf
incl
aaa
in
and
cmp
sar
add
in
and
jae
inc
pop
dec
jbe
outsl
aam
dec
sti
mov
sbb
jb
pop
pushf
ss
xlat
mov
sarl
jno
cli
mov
imul
pop
and
push
pusha
addr16
lds
outsl
ds
mov
call
test
lahf
or
jg
xchg
pushw
lahf
fldl
xchg
adc
mov
in
mov
jb
aaa
out
adc
mov
out
lcall
mov
cwtl
lods
arpl
sbb
mov
into
add
popa
ret
mov
lahf
pop
jp
cwtd
xor
or
loopne
adc
cwtl
and
mov
arpl
loop
and
mov
orl
jp
out
and
mov
sahf
sbb
push
jge
in
xor
mov
ret
pop
scas
mov
ja
jecxz
test
cmpsl
leave
ret
addr16
cmp
cmp
sbb
xor
xchg
pop
shll
mov
enter
cld
lahf
sbb
sub
push
je
mov
test
xor
dec
hlt
push
fists
subb
xchg
or
inc
mov
or
sahf
cmpb
xchg
sbb
stos
dec
mov
mov
fnstcw
sbb
mov
fiadds
push
pop
inc
es
mov
insl
xor
xchg
sub
push
adc
fists
or
xlat
inc
add
clc
mov
push
repz
cli
jp
nop
adcl
icebp
mov
push
repnz
jge
cmp
cld
cmp
outsb
incl
inc
addr16
xchg
push
xor
push
and
inc
pop
push
push
inc
int3
and
incl
push
xchg
sub
cmp
mov
loop
and
mov
dec
jmp
cmc
rep
cmp
outsb
andl
adc
in
push
mov
mov
sahf
xor
mov
fstpt
addr16
jp
ja
jno
inc
mov
fwait
cs
popa
and
push
jg
mov
ss
out
out
faddl
cmp
adc
push
imul
add
cmpsb
push
pushf
cld
cmp
mov
fldl
add
fiadds
mov
fildll
mov
push
jg
jge
mov
mov
inc
mov
scas
add
sub
mov
push
mov
addr16
into
and
cmp
addb
bound
hlt
scas
and
stc
mov
mov
daa
insb
in
jnp
test
mov
fstl
stos
adc
jb
inc
hlt
std
add
mov
or
scas
inc
sbb
or
pop
xlat
adc
lods
jbe
rol
jmp
inc
sbb
enter
inc
jle
leave
sbb
add
pop
jns
lret
inc
mov
inc
iret
arpl
cld
add
jp
push
and
je
push
push
xor
pop
ret
sbb
or
xchg
push
xor
and
mov
mov
dec
add
xchg
faddl
mov
lret
cmp
sahf
aaa
xchg
insl
pop
sub
mov
sub
lods
push
fldl
ret
inc
sbb
fisttpl
outsl
shrl
lcall
je
cmp
cmp
sub
sub
scas
cld
and
cmp
sub
xchg
popa
sti
rcl
mov
pop
add
aam
pop
adc
xchg
push
cld
fldl
sbb
jns
int3
pushl
dec
sbb
sbb
sbb
int3
pop
and
push
push
add
mov
or
and
cmp
ret
and
mov
filds
dec
or
clc
mov
xor
push
add
jnp
dec
sub
mov
shlb
movswl
jno
pcmpeqd
sbbb
adc
daa
xor
sbb
xchg
xor
adc
sti
inc
aad
jno
testb
pop
std
push
movsb
ja
pop
pop
sti
dec
mov
jo
mov
jne
mov
out
jb
ss
jmp
lea
cmp
cld
cmp
xchg
jne
lea
and
mov
pop
pop
sbb
roll
idivl
pop
sbb
ss
inc
inc
dec
mulb
or
mov
xchg
adc
insl
jp
aam
sbb
fwait
push
pushf
push
icebp
gs
bound
sub
pop
mov
std
das
sub
xor
or
movsl
pushf
jnp
fwait
ret
inc
lea
push
fs
sbb
adc
push
dec
sbb
outsb
pop
daa
ds
cmp
fbstp
cmp
popf
test
test
lock
test
push
subb
test
xchg
mov
mov
test
cmp
es
lods
push
fidivl
and
das
jne
jne
push
mov
call
xorb
jg
jmp
add
xchg
xor
daa
sub
xchg
mov
and
stos
or
mov
sub
sbb
push
and
pushf
les
in
mov
rol
push
mov
ret
into
data16
sbb
or
cmc
repz
pop
xchg
fs
sub
xchg
mov
iret
add
jbe
out
repz
clc
sahf
loope
and
inc
in
and
repz
rcl
xchg
cmp
bound
cs
cmp
movb
jne
mov
lret
out
rol
addb
imul
fidivl
push
sarl
mov
lret
add
cmp
in
mov
add
mov
jb
scas
mov
jne
mov
adc
inc
push
int3
das
loopne
adc
fwait
out
jbe
nop
ja
mov
lret
dec
push
cmpb
fnstsw
dec
in
xlat
mov
adcb
push
js
repz
cmp
popf
sti
xlat
loopne
dec
mov
leave
push
xchg
icebp
or
cmp
push
add
pop
sahf
mov
lea
nop
out
jg
fiadds
out
and
fsubrs
add
inc
out
mov
dec
stos
xchg
or
call
mov
movsb
sbb
in
push
jecxz
mulb
faddp
gs
xlat
outsb
addr16
dec
mov
cmp
mov
sbb
mov
dec
insl
imul
daa
inc
mov
popa
mov
mov
xor
push
icebp
mov
cld
add
nop
out
jbe
add
inc
jle
maxps
and
mov
and
out
test
jb
repnz
pusha
cmp
test
mov
out
push
aas
xlat
push
andl
or
icebp
mov
push
mov
mov
mov
fldt
movsl
xchg
in
fidivl
pop
adc
dec
jg
xchg
dec
leave
mov
movsl
int
mov
rorb
jns
pop
mov
xchg
or
notl
out
cmpsl
ja
sub
cmpsb
mov
fbld
inc
cmp
xor
dec
jne
sahf
dec
insl
adc
add
adc
loop
mov
adc
jl
stc
mov
mov
xlat
movsl
inc
cs
test
xor
mov
ljmp
outsb
lret
cmp
mov
mov
xor
push
jmp
dec
xchg
sbb
shl
rclb
ret
jg
test
xchg
out
out
ret
pop
movb
sub
outsb
jp
sub
aad
add
andl
add
cmp
lret
pushf
mov
ljmp
daa
ret
cltd
rolb
and
or
dec
ss
icebp
xorl
fistpll
xchg
cmc
ss
adc
sub
cmp
mov
ja
in
sub
das
xchg
ret
add
pushf
or
dec
xchg
js
mov
xlat
push
dec
xchg
aaa
mov
shr
xchg
jne
xchg
ficoml
adc
lret
jle
and
shl
mov
popf
rcr
lcall
sub
scas
lahf
fdivr
pop
xlat
js
push
jne
jge
clc
xor
inc
dec
sub
cli
sbb
std
out
add
outsl
sbb
jne
fptan
jle
push
dec
outsl
xor
test
xchg
test
cs
jmp
sbbl
fstl
in
pop
push
dec
adcl
and
xor
das
ret
fldl
mov
sti
jbe
mov
data16
adc
stos
fistpl
jge
xor
fnsave
mov
sub
pushf
mov
ljmp
hlt
aad
dec
mov
mov
lcall
xchg
cmp
xor
adc
fwait
out
xor
or
adc
arpl
pop
dec
mov
out
sbb
cmp
ret
daa
dec
dec
cld
push
adc
xor
fcomps
gs
pop
outsb
ret
xchg
imul
and
movsb
inc
xor
mov
arpl
fisttps
sub
dec
sbb
cmc
pop
jp
fwait
cmpsb
add
scas
xor
push
shll
psrld
lds
push
mov
sbb
mov
js
int
sub
aas
lcall
repnz
jne
iret
outsl
test
xor
jg
test
les
mov
inc
dec
mov
mov
jmp
outsl
fs
test
imul
cmc
xor
xchg
xlat
cmpsb
dec
int
sbb
xchg
mov
arpl
inc
cltd
imul
inc
arpl
or
inc
pusha
pop
fistl
adc
add
jle
ja
test
xor
js
cmc
push
jns
xchg
jecxz
ret
lahf
cmp
xor
mov
ss
lods
pusha
outsl
pop
pop
fmul
adc
lahf
adc
jo
into
sub
cmp
enter
and
xchg
fstpl
into
loop
mov
push
or
sub
lcall
lea
stc
loope
je
or
lock
cld
out
clc
scas
push
mov
jg
add
lock
mov
mov
sbb
push
inc
out
or
neg
mov
pop
mov
inc
inc
movsl
ds
in
fiaddl
in
adc
push
mov
mov
insb
xchg
lcall
outsb
rcrb
pusha
xchg
sbb
pop
popa
push
lea
xor
mov
sub
call
mov
mov
xor
xchg
std
push
in
leave
lret
std
cwtl
stos
push
out
stos
cmpl
lds
jl
inc
jno
arpl
push
add
sbb
sbb
mov
xchg
jmp
ret
push
das
div
pop
test
sub
mov
xor
or
cli
movsb
adcl
ja
in
mov
ret
jmp
loop
mov
add
lea
arpl
into
dec
or
mov
adc
jl
leave
sub
rcrb
sbb
mov
and
pop
mov
jno
loop,pt
pop
and
inc
outsl
push
push
fisttpll
int3
pop
lret
push
add
daa
mov
mov
xor
push
imul
insb
lret
adcl
jns
sbb
cli
enter
push
mov
cmp
xor
sar
iret
mov
xchg
xchg
xchg
xchg
sbb
out
enter
push
pop
in
ficoms
sub
out
daa
popf
mov
sbb
jb
cmpsl
into
dec
lods
cmp
sahf
sti
jne
or
leave
adc
jae
xor
outsb
pop
outsl
sbb
mov
fidivl
and
mov
mov
push
es
and
or
pop
ja
or
fldenvs
sub
cmp
movsb
std
mov
bound
mov
imul
repnz
sbb
pop
xchg
scas
push
mov
pusha
test
push
xchg
shlb
cmp
sbb
push
je
dec
dec
ljmp
sub
mov
sbb
icebp
ret
test
mov
push
dec
mov
and
add
dec
scas
mov
cltd
fcoml
clc
inc
scas
add
fisubrl
cmp
mov
js
fistpl
iret
cmp
sbb
dec
inc
pushf
loope
sub
lods
mov
sar
mov
daa
or
mov
stc
lods
orl
addr16
xor
rorb
xchg
negb
xor
inc
int3
pusha
ficoms
xchg
ret
dec
adc
xchg
inc
popa
xchg
or
inc
push
or
jg
push
test
fisubl
in
ja
in
leave
int3
jbe
push
fidivl
adc
loope
mov
leave
inc
lock
fadds
outsb
je,pt
lahf
pop
inc
out
push
lock
mov
lahf
sahf
popa
mov
cmp
daa
dec
push
aaa
mov
and
shrl
ja
in
es
add
mov
incb
and
push
in
addr16
jne
pushl
inc
pop
test
push
repnz
and
stc
mov
repnz
inc
mov
sbb
rorb
insb
repz
mov
sub
lahf
repnz
jns
sti
xchg
fwait
sbb
add
sub
dec
push
in
inc
pop
call
test
mov
in
test
test
lcall
pop
pop
jo
pop
or
xchg
pop
lahf
push
push
sahf
mov
jns
testb
shrl
bound
adc
scas
sbb
ss
inc
out
mov
xlat
xchg
mov
push
and
testl
jp
jbe
lock
mov
inc
jne
fsts
lods
stc
xor
pop
out
lock
xor
enter
sbb
adc
adc
test
cmp
iret
repnz
cli
cld
hlt
inc
outsl
out
mov
daa
jle
cmp
mov
daa
cli
lock
cmp
je
shr
les
xor
iret
push
in
xchg
insb
pop
pop
int
lret
lret
pop
sub
cmpsl
push
loopne
call
mov
outsl
cmp
mov
adc
int
push
cmpsb
mov
mov
pop
push
mov
cmpsl
jnp
mov
mov
pop
loopne
inc
rcr
stc
push
pop
imul
mov
xor
xor
es
sahf
les
mov
cmpsb
sahf
dec
jp
xchg
sar
pop
sub
or
pop
rol
mov
pop
test
or
aaa
scas
fcompl
push
mov
cmp
in
ljmp
shlb
decb
sahf
stos
push
int
pop
jge
or
mov
inc
sub
pop
push
imull
or
mov
pop
ret
mov
adc
pop
xchg
sub
and
adc
sbb
cmc
sub
out
addr16
and
mov
mov
stos
xchg
pusha
mov
lods
lahf
dec
scas
mov
repz
mov
sbb
pop
mov
dec
add
dec
mov
adcl
mov
jb
loope
icebp
push
dec
add
dec
cmp
pextrw
mov
repz
in
push
add
adc
mov
push
mull
add
cmp
mov
dec
dec
fisubs
les
mov
add
sar
shll
jbe
dec
fmuls
mov
mov
jae
push
cmp
or
je
leave
andl
sbb
push
or
nop
push
aam
icebp
sbb
test
dec
and
es
addr16
push
shlb
adc
loope
cmpb
pop
cmpsb
xor
inc
test
pop
push
imul
enter
outsl
addb
inc
daa
loop
iret
enter
imul
insl
je
mov
pop
loop
adc
or
jecxz
ja
sti
sub
dec
push
dec
mov
mov
cli
mov
rorb
notb
or
jmp
pop
pop
lcall
int
mov
scas
das
lahf
ja
or
ja
xchg
mov
jbe
xor
test
mov
jae
repz
xchg
mov
pop
lods
arpl
and
inc
rcr
add
adcb
sub
test
add
decb
pop
lock
cmp
arpl
push
mov
sbb
sbb
fisubrs
cmp
and
push
rclb
inc
xchg
movsl
aaa
in
ficoml
cmp
movl
or
xchg
call
repnz
add
cmp
push
xor
stos
xor
mov
xlat
dec
js
subb
out
mov
negl
dec
sub
mov
popf
in
sub
or
filds
xor
test
movsb
out
sahf
pop
push
aas
ret
xchg
mov
popa
fstps
lods
shlb
adc
scas
xchg
in
sahf
loop
jl
loope
push
comiss
shlb
test
pusha
adc
pop
xchg
mov
or
aas
jp
test
addb
cmc
dec
cli
mov
mov
xlat
cmp
cmp
not
or
lcall
stc
cmp
adc
dec
xchg
loopne
mov
daa
jae
rcrb
cmc
outsl
jb
sbb
enter
mov
cmp
cmp
sbb
movsb
mov
and
mov
push
mov
jae
stc
pop
push
xlat
orl
pop
jle
shlb
mov
mov
pushf
mov
cld
movsl
xchg
in
dec
fdivl
loope
jl
add
std
cli
daa
pop
into
lock
sarb
stos
orb
dec
mov
mov
ret
scas
jecxz
sbb
vmovss
stos
xchg
inc
mov
out
mov
clc
cwtl
cmc
into
add
sbb
dec
hlt
in
insb
and
pop
or
mov
inc
pop
clc
push
cmpsl
add
pop
les
je
lret
sub
dec
outsl
ljmp
xchg
mov
sbb
mov
lcall
or
mov
add
xor
inc
in
lock
adcl
sbb
lcall
dec
inc
add
int
lret
add
push
les
out
rclb
jmp
jbe
push
cmp
jecxz
lea
roll
pop
imul
push
testb
mov
sub
icebp
call
cmpsl
or
xlat
sub
or
push
mov
mov
out
nop
dec
scas
pop
repnz
stos
ret
jo
inc
xchg
dec
mov
mov
xchg
pop
xor
inc
jb
add
ja
mov
insb
ss
addr16
push
mov
jle
jge
dec
cmp
dec
jp
sbb
aaa
mov
jg
loope
pop
int3
fisttpll
jns
fwait
and
pop
sub
je
ret
repz
in
mov
jl
shl
jge
inc
cmp
mov
pop
xchg
fistpl
mov
jmp
mov
adc
imul
mov
push
pop
lret
mov
add
xchg
int
dec
mov
movsl
xorl
pop
dec
into
ret
mov
pop
cmp
adc
push
dec
sub
cmp
divb
pop
xchg
test
add
aad
adc
mov
and
sti
add
push
adc
cwtl
mov
jo
fisubl
adc
stc
xor
in
add
cli
mov
lcall
mov
jge
out
jge
xchg
xchg
xor
and
clc
mov
push
fucomip
inc
push
or
jbe
adc
mov
cli
sbb
mov
stc
mov
testl
cmp
dec
dec
js
imul
cwtl
fildll
test
xor
clc
dec
aas
addl
pop
or
mov
sarl
xor
les
xor
jmp
sbb
sub
shl
mov
mov
fwait
sbb
xor
push
loop
sbb
mov
cmp
dec
cmc
mov
mov
xor
cs
xchg
mov
sbb
sub
pop
jle
scas
shll
fcoml
cmp
dec
fistl
cmp
jmp
stc
mov
stos
inc
shll
das
cmpsb
div
xchg
inc
mov
jne
jmp
pop
movsb
lcall
inc
test
push
xchg
addr16
mov
arpl
inc
jbe
mov
imul
pop
sbb
push
mov
in
jl
xchg
and
ret
repz
popa
repz
cmp
push
or
ds
das
add
xchg
and
mov
mov
popf
in
pusha
shrl
jle
repz
ss
adc
xor
pop
jecxz
xor
repnz
cmp
mov
or
inc
mov
mov
add
incb
stc
cmp
and
lahf
aaa
cmpb
pushf
pop
xchg
jnp
add
lret
push
xchg
cmp
adc
sub
xlat
dec
scas
iret
pop
pushf
jbe
inc
shll
adc
sbb
push
push
fistpll
inc
mov
sahf
jae
add
push
cmp
inc
out
popa
and
xor
cmp
bnd
sbb
nop
mov
das
nop
in
mov
lods
xchg
sti
addb
push
pop
fstp
loopne
test
xor
cmpsl
ret
push
cmp
ljmp
mov
dec
fcompl
push
sub
mov
mov
sbb
xchg
sarb
xchg
push
jb
int
push
icebp
jle
cmp
inc
and
mov
movsb
mov
sbb
adcb
and
out
bound
lret
xor
pop
loope
notl
in
fcompp
lcall
scas
adc
pop
out
testb
imul
pop
mov
dec
and
fiadds
cld
ret
push
movsl
roll
aaa
loope
rolb
dec
pop
pop
cs
repnz
push
jb
sub
outsl
out
dec
loope
pop
inc
cmp
mov
out
mov
imulb
mov
scas
adc
xchg
ljmp
cmp
lock
fdivl
aam
push
stc
and
in
ror
xor
jo
or
stos
push
lods
mov
scas
add
push
dec
shll
cmpb
sub
cmp
xor
cmpsb
dec
pop
add
mov
jle
aad
jge
mov
add
mov
in
and
jge
add
and
mov
aam
jno
sub
std
add
jmp
lods
sub
iret
imul
insl
or
not
cmp
lret
js
outsl
shlb
xor
int3
adc
pop
scas
mov
cmpsl
ljmp
fildll
movsl
xor
or
xchg
jns
jg
cs
mov
adc
mov
stos
hlt
cld
shl
jl
and
jp
negb
into
imulb
xchg
xchg
imul
lods
in
lret
in
push
daa
fisttpll
ja
xor
push
dec
ret
cs
ret
outsb
popa
and
fnop
and
shlb
int
jne
dec
push
adc
adc
scas
int
rcrb
mov
mov
mov
mov
psubq
int3
imul
jl
dec
sub
dec
pop
xchg
xorb
lods
inc
add
and
mov
push
pop
push
rcll
adc
sti
test
push
pop
lock
mov
out
push
dec
jecxz
xor
lea
faddl
cmp
push
xor
ljmp
adc
daa
in
xlat
pop
in
fucomip
movsb
and
adc
addr16
popa
test
push
cmpsb
sbb
and
aam
push
gs
loopne
mov
call
xchg
ljmp
outsl
mov
daa
mov
pop
jo
fstpt
xor
push
lret
arpl
add
dec
and
inc
jp
mov
sbb
inc
orb
loopne
mov
ret
add
or
jns
xor
in
inc
popf
roll
icebp
cmpsb
cmp
rcll
es
mov
int
mov
out
clc
popw
cmp
cmpsl
mov
push
mov
mov
sti
daa
dec
and
push
inc
negl
pop
pushf
lcall
popa
test
cmpsl
outsl
aas
fwait
out
aam
ljmp
mull
ret
icebp
inc
gs
adc
decl
adc
dec
add
xor
mov
xor
test
mov
arpl
push
cld
xchg
push
sub
pop
inc
lcall
rorl
leave
sub
add
push
xchg
adc
xchg
nop
cmp
leave
push
insl
dec
into
jbe
xor
cli
sbb
inc
xlat
insb
sbb
pop
add
jg
iret
add
sbb
jg
fdivrl
cmp
notl
ret
in
mov
cmpsl
jne
ja
in
push
shrl
paddq
or
rcll
and
fs
out
jmp
mov
test
or
inc
fnstenv
frstor
mov
scas
sub
mov
xor
xor
mov
xor
test
imul
push
add
out
movsb
mov
jp
arpl
cmp
andl
sbb
bound
adc
mov
cltd
xor
fisttpll
shrb
sbb
pusha
adc
cmp
out
inc
mov
outsb
mov
fildll
mov
and
stc
mov
pop
jge
shrl
xor
jbe
enter
xchg
stc
lcall
test
xor
popa
ret
pushf
and
push
movsl
mov
movsb
addr16
mov
insb
sub
xlat
std
arpl
mov
xchg
lock
sahf
add
les
add
pop
jno
push
int
inc
mov
fmull
pop
pop
aaa
out
mov
mov
jp
mov
adc
jnp
ss
icebp
pop
test
inc
pusha
xor
or
and
or
nop
ja
sub
arpl
or
jne
sub
jmp
mov
mov
or
lods
cwtl
mov
mov
xchg
mov
xchg
pop
xchg
mov
push
sbb
in
in
add
imul
popw
mov
inc
push
imul
cltd
aad
xor
pop
add
ficoml
mov
sarb
cs
jmp
xchg
or
cmp
enter
mov
jle
add
sbb
dec
dec
lea
pop
das
pop
testl
sti
jno
mov
fdivl
push
and
loopne
enter
and
shl
js
bound
jp
fmuls
lret
loop
test
xor
xchg
int3
insb
orl
jnp
out
inc
add
enter
jmp
sub
adc
xchg
cmpsl
add
arpl
ljmp
movsl
pop
inc
cmp
cmp
or
or
cmp
or
push
or
flds
lahf
inc
ja
cli
jne
ja
sbb
xor
jae
mov
cmp
xor
aam
push
xchg
sbb
inc
addr16
xchg
jae
es
jmp
pop
lret
insl
movsl
ret
push
lret
std
adc
lret
jecxz
mov
xor
stos
jne
xchg
cltd
cmpl
inc
aaa
fyl2x
dec
mov
ja
sbb
push
sbb
lea
mov
mov
repz
sbb
fnstsw
fisubl
cmc
loope
adc
push
push
mov
lahf
sbb
cs
mov
sub
push
les
rclb
into
test
loop
xchg
and
pop
cmpsb
pop
sbb
xlat
sbb
fsubrl
sub
inc
xchg
cmp
adc
mov
mov
icebp
add
jnp
lret
cmpsb
ret
cmp
cmp
stos
adc
cwtl
movsb
stc
sbb
out
jl
jb
sub
xchg
loop
push
push
stos
imul
rcll
out
add
and
aas
cmp
mov
cld
lcall
insb
xchg
cwtl
xlat
scas
sbb
loope
pushf
push
inc
mov
xor
jb
jnp
das
xor
pop
pop
push
cmp
mov
xlat
jne
xor
call
movsl
sub
cwtl
cli
outsl
loop
push
les
mov
xchg
lods
adc
jmp
adc
cwtl
cmp
add
and
xlat
and
sbb
jg
sti
popa
mov
dec
mov
mov
lcall
inc
mov
adc
in
and
int3
mov
das
ss
push
inc
pop
sbb
pop
inc
in
daa
das
insl
add
push
adc
scas
or
dec
icebp
dec
sti
adc
test
inc
mov
jg
stos
mov
test
push
test
xor
jb
jo
push
pop
or
sub
and
pop
xchg
lods
mov
sub
cltd
jmp
mov
aaa
lds
mov
push
adc
je
dec
mov
out
idiv
jg
cld
jl
mov
iret
aaa
test
aam
cld
dec
jnp
jne
add
in
scas
cmp
mov
cmp
call
push
test
adc
outsl
xchg
pop
sub
pop
in
hlt
in
sbb
pop
loop
dec
and
xchg
rorb
add
jge
jo
lods
jo
bound
orb
aam
bound
sbbb
daa
add
inc
gs
ja
adc
enter
incb
jbe
jbe
mov
sub
aam
cmc
nop
sarl
andl
dec
add
je
mov
hlt
mov
mov
loope
adc
push
or
test
or
xor
ret
mov
jge
cmp
push
push
mov
mov
mov
and
jg
lock
imul
stc
das
or
push
cmc
inc
inc
sbb
xchg
sbb
xchg
adc
sub
stc
jmp
mov
in
pop
mov
repnz
mov
mov
cmp
shl
inc
xchg
dec
push
leave
movsl
mov
sbb
push
sahf
and
aaa
sahf
mov
adc
call
bound
shll
faddl
cwtl
ret
cmp
popf
mov
push
out
xchg
stos
in
shl
xchg
sub
push
add
and
das
repz
inc
in
es
mov
mov
adc
jae
lret
sahf
xorl
adc
pop
pop
setl
pop
decl
aam
mov
xor
addr16
pop
movsb
out
adc
sbb
pop
or
shrb
das
out
out
rclb
movsl
leave
dec
inc
hlt
sbb
mov
push
jbe
popf
popf
imul
add
in
jne
dec
int3
out
sub
cld
fidivrs
xor
rcr
lcall
pop
stos
adc
push
fdiv
std
push
or
adc
mov
bound
xlat
push
add
inc
mov
aaa
inc
in
adc
es
inc
test
xchg
xor
into
fisttpll
mov
push
js
fsts
and
lea
inc
pop
ss
ficoms
out
outsl
xor
push
dec
mov
sbb
int3
arpl
jmp
popa
inc
xor
pop
call
mov
das
or
fistpll
dec
pop
pop
inc
pop
sub
stc
jnp
ficomps
cmp
xor
jl
jnp
add
adc
xor
jle
aas
into
int
lret
or
das
mov
sub
and
sbb
add
mov
sub
xor
outsl
stos
rol
stc
mov
mov
test
sarl
arpl
shrb
push
pop
sti
cmp
push
or
push
seta
shll
dec
stos
jg
cmp
fs
mov
mov
jle
xchg
imul
mov
jne
dec
dec
rcrb
sub
pop
cs
lock
cwtl
push
sub
or
aam
mov
fiaddl
mov
leave
mov
push
xor
sub
adc
ret
fildl
inc
pop
insb
inc
jno
sbb
adc
add
repz
imul
sbb
mov
inc
outsb
cmp
adc
add
test
xchg
xchg
rolb
add
adc
adc
test
or
popa
push
xor
repnz
or
xchg
cmp
and
lcall
push
jae
es
shll
test
jl
push
mov
xorb
mov
push
and
mov
test
aad
jne
movsb
mov
jo
pop
out
xchg
mov
cwtl
or
pushf
xor
lahf
mov
jmp
adc
test
jp
sbb
lock
fsubr
std
leave
enter
lret
mov
sbb
mov
mov
jo
push
mov
sbb
iret
sbb
xor
lds
pushf
scas
dec
xor
enter
shrb
sbb
faddl
push
and
lahf
aam
xor
and
xor
pcmpeqd
adc
mov
test
pushf
imul
push
das
push
or
add
sub
inc
cltd
iret
mov
inc
xchg
sub
xchg
cmpsb
imul
sti
arpl
cmp
lods
add
in
or
and
outsb
into
dec
inc
xor
add
subb
pop
sbb
or
leave
cli
in
jg
sarb
stos
or
nop
mov
jo
sub
jnp
ds
push
add
xor
shlb
loopne
push
xchg
sbb
scas
es
mov
pushf
push
dec
jmp
mov
inc
sbb
insb
imul
mov
in
push
cld
fsubr
int3
out
pop
xchg
lret
xchg
mov
sub
repnz
mov
lret
add
and
cmp
adc
int3
mov
imul
in
repnz
mov
push
stos
mov
push
lds
int
or
jp
pop
lock
iret
cwtl
stc
mov
addr16
and
cmp
fdivrs
pop
pushf
icebp
shr
pop
aaa
adc
pop
rolb
or
lret
pop
fnstenv
lods
fimull
jp
call
mov
lret
loopne
push
xchg
mov
enter
rolb
cmp
scas
aaa
mov
pop
subb
mov
adc
testl
lods
aad
out
jmp
push
lahf
shll
popf
mov
pop
mov
add
into
pop
mov
fs
pop
push
add
icebp
jnp
lods
mov
lret
mov
imul
fwait
adc
shrl
test
data16
jo
and
leave
xchg
cmp
int3
adc
mov
int
stc
aad
into
fsubrl
sub
mov
and
mov
mov
sbb
roll
xchg
add
or
ret
iret
outsb
mov
in
out
sarb
lds
div
cmp
nop
adcl
jbe
cmp
xchg
pop
sub
pop
mov
negb
repnz
scas
call
sti
jmp
add
jl
clc
push
push
sbb
cmpsb
insl
subl
jle
ret
int3
out
mov
inc
push
dec
adc
test
out
inc
lret
iret
test
movsl
cltd
mov
mov
jae
cmp
mov
push
pop
cmp
pop
mov
loop
int3
in
arpl
inc
imul
push
dec
stos
add
jb
cmpsl
arpl
shlb
cwtl
fs
adc
stos
adc
cld
fstpt
hlt
mov
out
xchg
or
addl
std
std
mov
mov
in
jb
pop
cmp
or
mov
push
mov
into
xor
fiadds
mov
fdivl
bound
inc
jmp
mov
xor
and
std
dec
or
rol
mov
loopne
lds
push
shlb
mov
fwait
iret
shlb
or
dec
lods
inc
dec
flds
jo
sub
jnp
subb
aam
sti
mov
fmul
adc
cltd
dec
bound
data16
cs
pop
sti
mov
mov
dec
pusha
out
or
mov
sub
daa
loop
mov
ljmp
iret
outsb
rolb
cmp
jp
mov
xchg
cld
testb
pop
push
push
outsl
lods
sbb
add
add
pop
cmp
js
jmp
inc
adc
xchg
fs
inc
stos
fisubrl
ja
sub
and
push
jg
js
addr16
xchg
push
fcoms
std
into
jae
es
cld
pop
lock
sti
sub
cs
out
cmp
jnp
inc
pop
std
dec
inc
les
aad
sub
xor
jnp
in
sbb
inc
pop
enter
push
in
mov
xchg
jmp
std
stos
mov
cmpsl
pop
jmp
stc
or
je
push
adc
iret
out
mov
cli
jl
pop
add
dec
mull
mov
sub
ja
mov
and
mov
cmp
inc
jge
shll
int
mov
dec
into
or
mov
cmpsl
btr
jmp
sbb
fdivrl
push
das
mov
pop
data16
test
repnz
dec
mov
nop
mov
sbb
lahf
nop
mov
xor
push
imul
sub
inc
outsl
pop
ljmp
aaa
dec
push
and
push
dec
das
or
pusha
aad
xor
loope
ljmp
mov
xor
cmc
js
stos
add
fisttpl
aas
push
into
xor
fs
rcl
jb
ljmp
pcmpeqw
out
ss
jb
pushf
call
and
aad
xor
sub
lds
mov
jmp
dec
scas
movsl
adc
sub
inc
ret
sbb
push
mov
mov
adc
ret
cmpsb
jno
jecxz
loope
adc
sbb
xchg
cmpsl
push
cmp
or
adc
dec
das
mov
insb
cmp
out
dec
add
mov
dec
fcom
fs
call
arpl
xchg
jb
pop
mov
adcb
cs
push
sub
lock
jle
xlat
mov
xor
sahf
imul
punpckhdq
ljmp
test
pop
movsl
mov
push
jg
sub
aad
cmc
or
push
xchg
pop
imul
addl
adc
mov
dec
stos
push
jecxz
sub
sub
cmpsb
mov
xchg
inc
sub
xor
push
fprem
sbb
icebp
enter
andb
insb
lock
and
mov
test
frstor
mov
add
sbb
lahf
dec
leave
movsb
clc
into
cmc
test
and
fisubs
ja
push
fcmovnbe
int3
jne
shrl
lret
nop
int3
sti
decl
mov
add
add
push
sbbl
shll
pop
sbb
xchg
sbb
jl
outsb
sbb
test
pop
adc
inc
mov
xchg
dec
js
cmp
pop
movsl
std
push
xor
fcmovbe
xchg
loope
push
push
xor
dec
iret
arpl
loop
mov
mov
pop
sub
outsb
mov
fists
push
mov
sbb
mov
sbb
adc
jmp
jmp
sbb
adc
leave
xor
pop
fisubs
sbb
push
mov
popf
popl
scas
ljmp
andb
mov
shrb
jo
les
sbb
add
sarb
dec
mov
mov
imul
gs
xchg
ret
int3
lods
dec
mov
and
int3
shrl
xor
jmp
imul
das
cs
jle
ljmp
ds
stos
sbbb
push
imul
popa
xchg
inc
adc
xor
add
adc
inc
pushf
cld
add
rcrl
or
xchg
ffree
lock
loop
sub
das
std
push
fisubs
rcrl
lock
push
sbb
cmpsl
xor
cs
out
mov
lds
or
pop
das
jbe
in
or
int3
rcrb
push
mov
insb
sbb
and
cwtl
sbb
sub
mov
repnz
or
and
andl
mov
jnp
lret
sub
cwtl
cmp
and
je
sarb
fs
xchg
dec
enter
mov
repz
adc
sbb
sub
ss
xor
call
jmp
push
inc
sub
sbb
sub
inc
push
sahf
pop
jb
daa
fs
popa
jecxz
repnz
ds
add
pushf
pop
xor
mov
cmp
shr
je
mov
cmp
add
rcrl
push
or
lahf
mov
inc
xchg
shll
lock
out
test
out
incl
movsl
sahf
xchg
lock
sub
lret
cmp
mov
mov
ss
fsts
lds
push
dec
mov
cmp
adc
adc
in
mov
xchg
outsb
xor
movsb
lea
pop
mov
iret
cltd
xor
sbb
fidivrl
mov
stc
daa
mov
and
or
imul
leave
dec
cmp
and
bound
adc
mov
push
adc
push
mov
sub
int
xchg
aas
pusha
jns
sbb
sub
lods
aas
dec
mov
mov
mov
ja
jg
loop
xchg
fisubs
cmpb
test
in
sub
lret
int3
and
movups
sub
stos
mov
adc
lds
mov
in
sub
ds
outsb
jno
push
test
in
inc
lcall
xor
xchg
adc
and
mov
fcomip
mov
call
and
idiv
push
fnstcw
pop
or
arpl
push
cs
hlt
xchg
sbb
insl
pop
xchg
add
push
enter
cmc
stos
or
loope
fs
imul
shl
push
mov
inc
hlt
outsb
xor
push
and
lods
stos
out
sbb
mov
pushf
outsl
and
push
mov
pop
std
das
xor
dec
in
dec
rcrb
test
cmpsb
cld
jo
add
pop
or
mov
push
xchg
test
packssdw
pusha
mov
inc
dec
add
into
add
sub
imul
sub
mov
xchg
inc
and
push
int
ret
lret
imull
jnp
ret
add
mov
jp
out
sub
stos
pop
in
sbb
outsb
imul
add
xchg
mov
inc
cmp
in
call
xchg
lods
inc
cmp
sub
and
loope
fistpll
sbb
xchg
int3
shll
jmp
mov
inc
test
fldl
ds
neg
mov
subb
or
push
push
jl
jne
add
in
insb
lcall
xor
add
shrb
jle
clc
pushf
xchg
popf
push
lret
push
lock
outsl
int
clc
lea
into
and
jl
out
ret
ja
loope
scas
jns
mov
movsl
mov
lock
lcall
test
jns
pop
sarl
clc
sbb
dec
out
add
sub
sti
orb
pop
xor
imul
cmc
leave
and
inc
outsl
cwtl
push
andb
clc
xor
add
sub
repnz
call
leave
sti
push
rcr
jge,pt
pop
sub
pop
mov
ret
xchg
xlat
repnz
sbb
int3
jnp
mov
std
xor
and
clc
mov
xchg
xor
gs
je
and
lahf
push
cld
fstps
cmpsl
mov
xchg
inc
inc
and
sti
pop
jge
icebp
jne
fnsave
jae
jg
imul
decl
pop
push
pushf
mov
cltd
aad
orb
jo
jo
xor
or
repz
sbb
mov
inc
stc
sti
jbe
xchg
inc
sub
mov
xchg
pop
insb
test
jge
jg
dec
in
gs
or
jae
imul
sti
add
jge
xor
lods
cld
cmp
ret
movsb
les
imul
orl
out
and
imul
dec
adc
fs
fisubrs
sub
int
into
and
nop
push
push
sbb
or
jg
and
ljmp
mov
adc
mov
xchg
adc
inc
or
pop
fwait
mov
and
icebp
cs
adc
lods
inc
loop
repnz
icebp
popf
push
out
out
jae
push
mov
lods
dec
push
loopne
iret
adc
sbb
lea
push
or
imulb
inc
nop
stc
mov
inc
rorl
cmp
xor
cmp
shrb
popf
sbb
push
lcall
das
call
or
and
xchg
adc
dec
cmp
in
jb
lahf
fidivl
or
jb
int3
ret
dec
enterw
scas
test
inc
out
pop
dec
dec
mov
mov
movsl
cltd
xchg
inc
cld
ret
sub
sub
dec
loopne
leave
and
inc
add
pop
mov
lock
loop
pop
pop
fdivl
scas
inc
dec
mov
decl
or
sbb
shr
aaa
dec
test
out
gs
jae
jnp
pop
ret
sbb
push
in
test
shlb
add
jno
sub
mov
inc
addr16
lcall
lret
ss
or
sub
cmpsb
bound
xchg
sub
adc
jmp
xor
cltd
loopne
roll
hlt
or
push
sbb
es
lods
mov
push
pusha
adc
push
mov
pop
stos
or
add
dec
dec
and
stos
push
inc
sub
xchg
mov
iret
xor
push
idivb
push
shlb
les
in
pop
insb
lret
jbe
mov
dec
lahf
sub
andl
mov
cmc
xor
shl
movsb
sub
movsb
int
inc
xchg
loopne
push
add
sarb
mov
not
test
test
iret
aaa
push
inc
jmp
and
ret
push
pop
cmp
pop
movsl
mov
in
inc
dec
cli
xchg
adc
and
int
cwtl
gs
orl
and
xchg
push
and
mov
xchg
in
mov
pop
das
outsl
dec
inc
std
ffree
mov
mov
outsl
int
test
mov
je
mov
das
cmp
lahf
daa
das
das
cld
mov
jl
enter
xchg
sbb
and
rclb
add
loopne
fnstcw
add
scas
lret
or
adcb
and
cld
sub
jecxz
jns
shrb
push
and
je
sahf
push
xchg
shl
rol
mov
pop
out
mov
xlat
mov
inc
rcrl
jle
ficomps
aaa
sbb
ss
xchg
lea
les
or
xor
int3
push
sbb
push
fdivs
xchg
adc
and
stos
outsl
dec
and
dec
mov
push
add
cmpsl
adc
inc
add
cld
and
sysret
xor
sbb
mov
mov
jg
mov
daa
or
push
into
add
hlt
push
sahf
push
mov
cwtl
movsb
rol
jae
not
mov
lret
sbb
in
push
lret
mov
push
add
out
rorl
scas
int
addr16
xor
inc
movsb
les
int
dec
cmpsl
lods
mov
mov
bound
mov
fwait
push
pop
std
les
fstl
ja
sub
sti
inc
inc
sbb
sub
daa
mov
mov
out
push
pop
push
in
and
jb
stos
or
js
js
hlt
xor
nop
clc
and
xor
xchg
dec
sub
fdivrl
add
push
inc
dec
and
int
rol
shrl
aad
jp
dec
pop
sbb
je
jbe
or
aas
dec
dec
mov
mov
pop
outsl
dec
in
pushf
lret
jg
ds
dec
and
mov
and
push
ret
mov
adc
mov
adc
mov
mov
cmp
cmpsl
jae
aad
loop
out
test
sub
pusha
xor
incb
cmpsl
inc
sub
adc
cld
imul
cmp
or
adc
inc
xchg
enter
aas
aam
out
xor
sub
movsb
repnz
popa
pushl
in
cmc
ljmp
lea
cmp
xchg
out
xchg
bound
sub
aas
mov
mov
pop
jge
push
sub
rcr
clc
stc
jle
xor
dec
in
stos
cmp
fs
fdivp
adc
xchg
mov
pop
pop
xchg
cltd
adc
ljmp
lret
ljmp
push
jns
fidivl
es
shrb
imul
dec
jnp
jl
enter
out
fisttps
push
movaps
xor
in
jmp
lods
jno
and
in
sub
and
mov
add
decl
cmp
sahf
in
cmp
sub
dec
in
iret
mov
shlb
aam
add
push
int
and
xor
movsb
into
lods
stos
inc
adc
cmp
mov
rorl
cwtl
pop
cmp
aad
mov
jl
jo
mov
clc
cmc
pop
lret
cwtl
fisttpl
lcall
int
jg
adc
ret
inc
fwait
scas
push
int3
addb
out
xchg
mov
sbb
in
xchg
rcrl
xor
out
push
inc
add
inc
pop
xchg
js
out
xor
xchg
add
mov
dec
cmpsb
fldcw
imul
dec
mov
push
cli
rcrb
repz
fdivs
dec
stc
enter
ret
jmp
jle
add
mov
dec
xchg
jno
mov
rcl
cli
iret
pop
pushf
mov
xchg
mov
out
divl
stos
fwait
aaa
push
ds
add
mov
jmp
pushf
mov
inc
push
and
xor
movsl
es
jbe
xor
push
pop
or
push
call
sub
and
inc
fucomip
sbb
test
push
push
push
inc
pop
xchg
xchg
sbb
dec
push
loop
iret
sub
cmp
jg
cmp
push
adc
sbb
in
sti
inc
dec
adc
inc
and
xchg
mov
stc
sub
addb
mov
and
mov
xchg
pop
xchg
adc
aad
jne
dec
mov
notl
testb
push
ds
pop
lods
lods
jg
into
lcall
cli
addr16
out
out
push
push
int3
aad
fbstp
es
imul
mov
pop
sub
xor
icebp
pop
movsb
xchg
cmp
or
into
cmp
lods
push
dec
cmp
ret
push
sahf
sbb
xchg
pop
jp
mov
xchg
fistpll
movsl
sbb
or
test
out
jo
mov
mov
pop
adc
mov
mov
or
fcompl
loop
movsb
inc
pop
cltd
jbe
andl
loopne
jecxz
mov
push
sub
mov
xchg
std
sub
mov
and
out
dec
mov
cmp
sbb
sub
push
andl
mov
cwtl
or
xchg
shr
rorl
push
cmp
xchg
and
mov
push
adc
sbb
repnz
sbb
ljmp
dec
movsb
mov
cmc
ror
xor
mov
sub
xor
xchg
loopne
sub
mov
movsb
jge
lods
rorl
cmp
loopne
mov
ja
stc
jb
ljmp
test
pop
data16
xor
xor
cltd
adc
or
adc
sarl
data16
fistl
mov
jmp
cmpsb
leave
movsl
repnz
rorl
shlb
jecxz
jmp
push
in
lcall
pop
movsb
push
sbb
xor
adc
faddl
clc
scas
xor
movsb
or
clc
jle
or
adc
pop
inc
outsl
jno
icebp
sbb
hlt
sbb
cmpsl
pushf
stos
jge
int3
or
and
mov
jge
cld
jno
cmp
aad
mov
les
loope
or
xlat
das
add
mov
xor
or
lds
stos
js
daa
cmp
jne
add
outsb
pusha
jp
repz
or
sub
xor
and
sub
cwtl
add
jnp
dec
cmpsl
xor
sbb
cmp
mov
push
pop
sbb
out
mov
or
rcl
jnp
outsl
cwtl
jle
adc
push
fnstcw
add
dec
add
xor
jmp
fstpt
mov
sbb
jae
ja
mov
testl
sub
xchg
inc
popf
int3
mov
iret
and
dec
xchg
loop
sub
imul
sbb
dec
add
push
cmp
push
mov
ret
movl
aaa
vmovapd
dec
ljmp
or
dec
loope
mov
lret
ret
cmp
sub
mov
jmp
mov
jmp
mov
xlat
or
lods
and
insb
mov
repz
sbb
push
push
sbb
xchg
xor
push
nop
mov
loopne
cmpsl
inc
xor
test
ja
mov
ss
xchg
ss
insl
outsl
mov
xlat
leave
aas
dec
int
std
pop
sar
pop
or
sbb
mov
add
mov
pop
or
jecxz
jns
xor
fs
in
or
lea
shlb
sahf
movsb
leave
or
jecxz
mov
push
lcall
int3
jne
lds
popl
sub
adc
cli
test
cli
insl
push
dec
mov
push
mov
insb
rcrb
xchg
lods
iret
mov
xor
mov
lahf
pushf
and
xor
inc
mov
mov
shrb
lahf
rorb
dec
das
loope
out
mov
jno
xchg
rclb
outsl
jle
sbb
ds
aas
into
lret
movsb
adcb
psllw
jl
pop
out
bound
lock
adc
insl
popa
adc
xor
inc
mov
push
fisttpl
inc
fists
mov
repnz
dec
in
mov
stos
test
adc
arpl
pusha
dec
cmp
out
outsb
fistpl
mov
lret
lock
mov
imul
ds
lds
mov
subl
out
loop
jmp
in
pop
idivb
xchg
xchg
or
mov
add
iret
cmp
jle
pop
cmp
add
adc
pop
into
lret
sbb
enter
mov
hlt
icebp
xchg
out
and
mov
repz
outsb
sub
test
adc
aad
pop
mov
xchg
cli
loop
shll
cs
mov
and
out
xor
lcall
jmp
mov
leave
lahf
clc
xor
mov
out
out
fs
in
aaa
lcall
dec
loop
dec
aas
shlb
dec
push
mov
xchg
fadds
dec
dec
int
fstp
push
and
divb
and
icebp
pop
push
add
orb
in
push
pop
mov
mov
imull
out
cmpb
and
in
insb
xchg
js
popf
aad
add
out
dec
loopne
add
inc
dec
in
adc
pop
jg
das
mov
sbb
push
cltd
imul
jp
mov
inc
imul
mov
xchg
add
imul
sbb
sub
inc
mov
stc
test
out
xchg
push
cli
in
addl
loope
cmp
out
xchg
clc
cwtl
xor
aaa
stos
xlat
xor
add
mov
fcoms
pop
adc
data16
mov
sub
push
push
mov
ljmp
cmpsb
add
pop
leave
add
insb
repz
int
xchg
shl
dec
lock
fnstenv
or
sahf
mov
aas
jge
loope
pop
aam
pop
mov
call
or
jne
xor
cltd
mov
adc
mov
jae
xor
mov
sahf
je
jmp
loope
xor
lds
lret
loopne
ret
mov
pop
cmp
or
jbe
addr16
adc
pop
int3
xchg
mov
fsubs
filds
adcb
es
sub
or
ss
sahf
and
cmp
fisttpll
orb
mov
mov
jge
add
test
loopne
test
aam
xor
jne
or
push
inc
cs
jmp
push
xor
pushf
jb
cmc
dec
lods
into
movsl
add
shll
ret
imul
xor
stos
dec
pushf
aas
movsl
test
lahf
adc
jl
mov
inc
xchg
shrl
mov
add
pop
or
call
and
fdiv
inc
dec
arpl
adcb
mov
cmpsl
pop
dec
popa
xchg
add
jge
je
fldenv
push
das
test
cld
aaa
adc
in
nop
push
int3
add
nop
addl
sahf
movsb
data16
push
mov
decl
sbb
jnp
lods
sbb
test
stc
jno
inc
arpl
addb
mov
sbb
inc
xlat
mov
in
aad
and
adc
xchg
fidivrs
or
xor
adc
mov
sbb
dec
insb
and
adc
jbe
mov
out
leave
jmp
enter
fdivs
sbb
movsl
in
in
scas
jne
dec
mov
repnz
and
sbb
and
inc
repz
cmp
in
stos
cwtl
dec
xchg
shll
enter
out
mov
int
mov
sahf
or
mov
add
or
lret
andb
pop
adcl
das
nop
push
testl
add
pusha
mov
cmp
scas
int
or
xor
adc
mov
or
xor
pop
mov
fimull
mov
jl
jae
int
dec
jp
mov
negl
fdivr
stos
push
xchg
sub
push
cmp
push
out
xchg
das
jno
dec
cmpsb
mov
pop
mov
addr16
shll
mov
push
sti
adc
xchg
add
cwtl
jo
sbb
and
sub
and
mov
test
das
mov
les
ficoml
sahf
inc
dec
adc
daa
sub
jns
ss
or
xchg
cltd
imul
arpl
ds
sub
xchg
push
fcmovnu
cltd
mov
inc
sub
pop
cs
mov
into
ret
jle
mov
ds
adc
xchg
jmp
cmp
cmc
aas
fdivs
sbb
scas
or
roll
push
mov
jecxz,pt
fsubs
dec
inc
movsl
jecxz
mov
jle
cmpsl
and
lds
xchg
xor
jp
mov
out
fs
inc
lock
push
fisttps
fisttps
fwait
push
adc
jno
xlat
popa
pop
leave
mov
cmp
shlb
add
sbb
cli
popa
push
pop
mov
jne
cmp
loope
inc
xlat
adc
outsb
adc
fcompl
cmp
mov
mov
pushf
lods
jge
pop
mov
inc
movsb
scas
xlat
aas
xor
punpckhwd
mov
es
aam
test
cmpsb
lock
dec
cmp
adc
push
mov
jnp
mov
mov
jne
lret
cmp
xchg
ljmp
ja
mov
xlat
popl
shl
and
fwait
ljmp
or
mov
subl
sbbl
lds
in
clc
jae
push
out
repnz
mov
lret
sub
mov
cmp
push
pusha
ret
enter
jmp
mov
mov
dec
cmp
movsb
push
cmp
out
mov
or
jbe
mov
jbe
shrb
push
insb
inc
cmpsl
mov
inc
and
std
mov
movsb
cld
lret
lea
out
or
add
incb
pushf
call
cmp
lahf
mov
ljmp
jns
xchg
popf
and
loope
add
adc
cmp
mull
addl
nop
push
mov
push
sbb
mov
sahf
jne
loope
xor
cmp
pushf
push
dec
lret
jae
mov
sbb
jle
cmp
cmp
sbb
dec
ret
and
movsb
pop
dec
out
xchg
loop
stos
dec
pop
mov
sar
rcrb
pop
or
adc
outsl
xor
out
mov
adc
and
sbb
imul
push
jns
pop
pop
sahf
repnz
push
or
insb
pop
stc
add
sbb
clc
aaa
dec
sbb
cmc
in
stos
mov
pop
jg
pusha
mov
or
mov
bnd
fisubl
sbb
stc
jl
lods
jne
mov
mov
fs
mov
mov
adcl
sbb
mov
pusha
in
and
out
aad
cwtl
iret
dec
cmpsb
inc
rcr
xchg
fs
sub
mov
out
andb
pop
adc
xor
test
pop
push
sbb
aam
push
outsb
lods
mov
cmp
and
push
outsl
stos
sti
dec
cs
jp
and
push
ja
sub
cmpb
or
jp
addr16
enter
mov
mov
cmp
call
stos
int3
mov
and
mov
jne
push
pop
add
insl
pop
popl
jae
lds
ret
movsl
sti
jns
and
lds
fwait
sbb
pop
push
cmp
insl
push
jno
sbb
in
pusha
andb
inc
or
pop
imul
sbb
and
push
xchg
movsb
repnz
mov
sbb
mov
jmp
fwait
out
popf
movsb
arpl
add
xchg
pusha
imul
ljmp
std
xchg
or
arpl
gs
sbb
bound
js
mov
inc
jno
divl
nop
lods
fadd
icebp
shrl
add
mov
xchg
pop
lds
mov
mov
adc
adc
in
xlat
add
test
mov
lea
sbb
sbb
push
pop
sbb
pop
push
sbb
push
std
xor
inc
jbe
popa
les
ljmp
mov
scas
jl
and
mov
in
xchg
xchg
stos
fwait
jne
pop
nop
pop
cmc
xchg
or
out
les
pop
jle
adc
int
xchg
es
arpl
jb
popa
dec
jecxz
add
mov
xchg
add
je
and
and
and
into
xchg
add
adc
cmpsb
jne,pn
je
mov
mov
sub
lock
into
ficompl
stc
scas
shll
mov
add
frstor
enter
jp
ss
cmp
call
lea
inc
or
mov
pop
sbb
aas
repnz
out
mov
outsb
push
insb
jne
xchg
pop
les
cmp
rolb
jbe
fsubp
fldt
push
test
pop
jg
sbb
dec
in
push
sarb
aam
xchg
lret
outsl
dec
pop
fsts
fmul
dec
mov
pop
fs
jo
push
out
in
mov
cmp
fwait
cmpsl
adc
jle
mov
push
mov
js
popa
arpl
lret
pmulhuw
lock
cmp
popf
into
mov
cmc
shrl
or
and
mov
pop
mov
mov
cmpsb
mov
outsl
push
sbb
pop
pop
shl
push
jl
pop
call
sub
jge
xor
push
jp
scas
adc
ret
loope
sarb
mov
xor
mov
push
adc
movsl
popf
in
ficomps
and
in
dec
out
push
push
pushf
mov
cltd
jno
sarl
repnz
iret
in
aas
mov
or
lret
test
in
fdivrs
sbb
aas
pop
mov
insl
dec
sbb
push
jl
mov
mov
xchg
cmpsl
cmpsb
inc
mov
pop
mov
xchg
psrlw
fwait
push
clc
stc
inc
cmpsl
out
or
stc
or
cmp
fcoms
enter
aas
xor
xchg
xchg
and
xchg
adc
iret
fwait
lds
imul
adcl
outsl
push
xchg
sub
jnp
out
outsb
arpl
repnz
outsb
ficompl
popf
cld
addl
jnp
movsb
sub
cmp
ficomps
sub
nop
or
les
mov
cmp
jae
scas
xchg
lret
jno
or
or
inc
and
inc
or
pop
jne
pushf
sub
add
imulb
sarb
fldln2
cmp
icebp
cmp
adc
popa
cwtl
mul
cmpsb
mov
xchg
sub
mov
cmp
or
inc
les
pop
jmp
push
les
test
pop
xchg
pop
fs
iret
or
jl
mov
mov
ss
xor
icebp
loope
push
mov
mov
adc
cmpsb
and
pop
mov
sti
mov
cmp
es
and
xlat
js
push
cmp
pop
data16
insb
seto
cmpsb
movsb
cmp
push
add
inc
jle
cmp
imul
add
adc
ja
push
inc
js
cld
shrl
mov
mov
lea
dec
jns
jl
add
ret
fisttpll
cwtl
loope
jne
lods
cwtl
lods
mov
xchg
push
stc
mov
lods
and
inc
or
aam
ljmp
dec
lea
dec
mov
aaa
int3
add
pop
gs
testl
cmpsb
jns
adc
or
popf
sbb
sbb
inc
lea
outsb
or
out
fstl
adc
ss
loop
cmp
call
int
dec
or
pushl
mov
xor
xor
pop
stos
enter
fnsave
inc
icebp
pop
fs
cmp
cmp
pushf
mov
and
sbb
xchg
mov
pusha
stos
adc
pop
lea
in
mov
out
cmp
mov
push
insl
fnstenv
jl,pn
in
lret
fwait
push
xchg
xchg
and
stos
roll
add
dec
pop
push
scas
push
inc
sti
inc
out
fildll
xor
out
mov
ds
push
scas
xor
cmpb
dec
pop
int
std
std
jge
push
inc
iret
clc
jmp
push
lods
dec
push
shrb
scas
mov
outsb
mov
data16
sub
test
idivb
xchg
ja
sub
ja
je
hlt
sbb
repz
mov
lock
push
xchg
xor
loopne,pt
mov
lods
int
aaa
cs
mov
dec
inc
int3
andb
cli
mov
addl
aam
or
movsb
rorl
xor
mov
fdivrp
mov
dec
aaa
shl
data16
push
sub
ja
mov
jmp
movsb
push
out
mov
jg
push
xorl
mov
das
mov
xchg
iret
dec
mov
sbb
scas
fsubs
fwait
dec
inc
add
ljmp
hlt
into
aad
dec
xchg
sub
stos
jns
lea
and
xchg
ja
adc
enter
or
cmpl
lea
test
stos
pop
out
mov
mov
pop
mov
add
xchg
loop
xchg
push
cs
es
lods
daa
hlt
jle
fs
dec
shlb
adcl
sub
pop
push
cwtl
mov
jbe
sub
xor
data16
dec
xor
enter
mov
ss
jg
repnz
adc
jle
arpl
stos
or
std
cwtl
jno
mov
pop
jns
xor
dec
dec
stc
repnz
fldl
or
sub
cmp
xor
cmpsl
dec
hlt
pop
negb
pop
jle
xchg
idivl
cs
push
or
fld
pop
adc
cmp
insl
sub
sbb
cmp
test
repnz
pushf
and
dec
inc
ja
mov
lods
aaa
rep
jle
lds
loope
or
xlat
fsubrl
shlb
jecxz
sbb
mov
and
sbb
lock
pusha
mov
cmpsb
and
leave
fstpt
stos
popf
test
ja
dec
sub
sbb
inc
test
jne
push
and
dec
out
cmp
jno
popl
xor
aaa
xchg
mov
pop
ljmp
inc
jns
loope
mov
xchg
mov
imul
iret
adc
sbb
call
push
and
fisubl
mov
mov
repnz
fld
lcall
into
loop
into
cmp
jns
cmp
add
aad
xor
ret
jle
xor
lcall
test
and
shll
and
mov
push
push
and
mov
fldcw
aad
mov
jns
jmp
cmpsl
repz
jns
insb
cs
push
je
lcall
push
or
mov
mov
js
mov
arpl
jl
mov
insl
aam
push
mov
mov
ret
mov
les
mov
mov
dec
mov
test
mov
dec
addr16
scas
inc
lods
jmp
ret
or
add
pop
loopw
aam
push
jbe
and
hlt
add
icebp
inc
popf
sub
les
fsubp
inc
xchg
call
call
stos
inc
jmp
pop
ss
push
push
fimuls
pop
stc
into
lods
xchg
add
mov
push
pop
and
into
leave
and
mov
stos
or
push
loope
mov
test
adc
fstpl
add
idivb
cld
insb
shll
add
repnz
cmpb
jmp
xchg
leave
repz
es
push
into
cmp
xchg
inc
outsb
lock
add
dec
pusha
movsb
cmp
cmp
std
xchg
fists
out
lret
nop
cmp
stos
test
dec
cmp
lret
inc
lods
mov
outsl
icebp
pop
and
jg
add
aas
hlt
insb
in
push
js
xor
xor
imul
insl
inc
out
cmpsl
cld
lret
push
or
fisttpll
dec
dec
add
fldcw
push
inc
lcall
adc
dec
jg
xchg
mov
je
jg
pop
sbb
adc
push
sbb
shlb
cltd
sub
leave
jmp
lahf
rolb
mov
dec
int
add
inc
mov
in
push
add
inc
fidivrs
push
aad
pop
into
push
push
call
insb
or
sti
and
pop
mov
jl
dec
mov
mov
pop
stos
jge
mov
cwtl
adc
dec
or
ret
dec
shll
xchg
test
mov
pusha
popf
scas
sub
jp
and
negb
dec
idivb
dec
add
dec
pop
mov
dec
ret
xor
call
or
lret
or
pop
push
stos
lock
dec
push
push
loop
push
and
jp
lock
sbb
sub
mov
mov
jmp
jns
dec
repnz
int
jp
fs
popa
mov
int3
mov
cmp
xchg
fwait
scas
add
mov
sbb
imul
std
sub
imul
insl
test
ljmp
mov
out
repz
mov
mov
pop
into
fldenv
pop
pop
pop
adc
mov
mov
or
push
xchg
inc
jae
sar
js
ljmp
ret
mov
jo
aad
data16
in
or
out
mov
dec
sbb
into
push
lcall
sbb
data16
mov
cmp
adc
stc
bound
xlat
das
jnp
outsl
cli
sbb
xor
mov
pop
inc
popf
je
into
imul
popf
jl
sti
daa
sbb
sahf
mov
sahf
mov
jecxz
in
gs
push
jae
xchg
adc
push
inc
mov
or
push
or
mov
mov
xor
and
adc
fdivrl
push
fcoms
orl
pop
fwait
and
cltd
jo
shll
int3
xor
clc
cwtl
push
xchg
push
sbb
or
cli
xchg
sub
mov
insl
xor
je
inc
bound
jno
push
into
push
sti
xchg
jae
mov
lods
push
cmp
or
dec
cmp
cmp
hlt
nop
fcompl
pop
rclb
xlat
xchg
or
paddsw
and
je
add
fadd
jnp
xchg
popa
loopne
dec
lret
fmul
test
jb
adc
aad
mov
repnz
and
xchg
ja
ficoms
cmp
inc
push
push
test
or
adc
mov
in
int3
pusha
push
scas
cs
aam
mov
lock
popf
inc
push
push
xchg
jns
cmp
daa
jmp
pop
mov
jnp
imul
ja
hlt
test
and
test
or
pop
data16
je
test
lret
inc
fldcw
pop
cmp
xchg
fimuls
lds
jge
scas
js
or
bound
sbb
pop
in
call
pop
mov
jno
push
fisubs
dec
cmp
out
or
leave
leave
es
inc
loop
sbb
jb
cmpsl
add
or
dec
sbb
jnp
jg
or
insb
and
and
push
rorb
out
scas
pop
imul
insb
movsb
and
xor
jg
cmp
push
mov
cmp
cld
ds
inc
stos
lock
mov
loopne
jo
push
ret
xor
or
push
lcall
xor
jnp
mov
sbb
inc
pushf
jbe
pop
or
mov
nop
or
test
lcall
add
lcall
jb
sub
scas
das
add
jp
or
ljmp
and
and
lods
mov
dec
add
adc
or
adc
sbb
mov
imul
inc
clc
jne
movsb
pop
jnp
inc
mov
mov
jno
and
pop
dec
shlb
jg
mov
imul
adc
popa
jle
bound
cld
pusha
loop,pn
testb
push
outsl
cld
fcmovu
shl
in
xor
fstpt
cs
push
cmp
pop
test
std
fstl
jmp
jl,pt
push
push
int
call
sarl
arpl
call
ljmp
cmp
sub
ja
icebp
shufps
push
sbb
pminsw
mov
pop
add
jge
stc
jnp
sub
popa
adc
pop
out
xchg
je
fdivrl
scas
cmp
out
cmp
cmp
icebp
jmp
pop
arpl
adc
test
jb
xchg
inc
sarb
test
lret
xchg
gs
jb
test
stos
mov
ds
cmp
rolb
test
inc
jbe
jp
pop
or
sbb
mov
out
xchg
adc
jne
jno
ss
sbb
inc
push
je
mov
dec
ss
jl
dec
jg
out
mov
das
adc
mov
cmp
jmp
lods
sub
push
int3
pop
mov
mov
lahf
dec
mov
out
and
mov
adcb
mov
xor
fdivrp
andb
pop
out
arpl
ja
or
xor
jno
xchg
fdivrs
mov
inc
sub
subl
and
mov
and
mov
push
xor
fucomi
sar
xor
xchg
push
xchg
pop
push
mov
xchg
call
or
mov
sbb
mov
sub
test
repnz
cmpsl
fnstenv
pop
jns
xchg
mov
lahf
or
xor
lahf
adc
out
in
sbb
mov
pusha
out
mov
cli
push
mov
clc
adc
outsb
shlb
std
jp
and
dec
sub
jp
mov
test
imul
jle
in
push
out
dec
jne
cmpsb
mov
pop
lret
push
js
adc
dec
lods
xchg
mov
aad
lret
dec
adc
pop
stc
jae
lods
lods
cwtl
imul
enter
xchg
xor
clc
inc
adc
cltd
adc
jae
or
popf
sub
mov
movd
inc
push
push
adc
pop
mov
movsb
jl
dec
test
stos
or
cmp
xor
ret
cmpb
insb
jns
rolb
cmp
scas
add
loop
mov
aaa
adc
xor
pop
fsubs
mov
xor
and
inc
cmp
vmovss
adc
push
jge
jp
jnp
xchg
jne
or
add
mov
sarb
pushf
sub
lret
clc
or
or
je
mov
arpl
sub
jg
lods
sbb
rcl
xor
mov
cmp
inc
mov
ret
adc
mov
neg
jne
xor
mov
int
mov
stos
push
add
dec
adc
dec
scas
pop
popa
or
jmp
mov
add
insb
jae
pop
mov
pop
pop
stc
aas
mov
pop
fisttpll
out
stc
jecxz
adc
jbe
jne
addr16
std
add
xor
sub
addr16
sbb
gs
xchg
and
cmp
push
das
data16
hlt
jge
push
pusha
es
inc
mov
fsubrl
aad
ss
sbb
bound
cmpb
pop
repz
movsb
loope
cmp
das
add
pop
movsl
ljmp
push
cld
inc
pushf
push
dec
lret
sti
lcall
aaa
pop
jle
jbe
fbld
ficoml
cmpsl
ja
insb
add
mov
jb
ja
pop
and
rcrl
addb
jecxz
test
shl
js
jle
xchg
inc
ljmp
repnz
mov
xchg
or
xor
sbb
out
jo
cwtl
sbb
out
and
dec
inc
pop
or
ret
in
das
repz
sti
adcl
loope
mov
ljmp
stc
dec
push
out
fcompl
push
mov
mov
addr16
lods
pop
sahf
test
and
lahf
cld
pusha
out
cmpsl
lcall
mov
and
dec
and
cld
fists
mov
test
push
mov
xchg
out
js
add
int3
xchg
sub
sub
scas
mov
jmp
test
pop
pop
test
mov
push
pop
scas
xchg
cltd
int
stos
jecxz
mov
clc
mov
dec
mov
push
pop
xlat
xor
xchg
mov
enter
loop
jle
mov
les
mov
add
leave
ds
cmp
xchg
pop
sbb
dec
mov
xchg
rclb
inc
test
data16
lods
sarl
jle
ret
lret
mov
in
mov
pop
fsubrs
or
in
int
out
cmp
pop
icebp
xor
std
ja
roll
push
jo
xchg
bound
xchg
ficomps
insl
adc
aam
push
leave
add
mov
arpl
pop
imulb
cltd
push
repnz
jmp
cmc
gs
sub
movsb
out
pop
pushf
or
fisttpll
lods
cs
mov
adc
fcmovnu
repz
cwtl
cmp
imul
inc
xlat
mov
push
push
movsl
fdivrp
popf
lcall
and
jb
call
test
psrlw
xor
and
rcr
lods
sbbl
mov
mov
cmpb
jae
mov
icebp
mov
dec
roll
aad
pop
lock
imul
repnz
inc
mov
cli
pop
add
loope
jle
jl
inc
add
lahf
imul
xlat
xchg
xchg
mov
iret
and
call
dec
mov
and
cli
cmp
out
jns
ja
scas
imul
rcrl
pop
mov
lods
inc
cltd
out
outsl
mov
into
insl
mov
xchg
xchg
jb
pop
lea
in
roll
pop
mov
mov
push
pop
test
or
dec
xor
mov
int3
imul
push
out
mov
faddl
pop
or
test
cmpsl
add
bound
and
jmp
jns
push
adc
or
sub
or
or
inc
sbb
cli
xchg
fcoml
out
lret
pop
pop
add
pmulhuw
out
in
add
xchg
rolb
mov
pop
inc
mov
out
in
mov
ds
aam
mov
fldl
sub
pushl
xor
pop
add
or
cmp
mov
stc
mov
incl
adc
xchg
and
popa
push
divl
inc
jl
cmp
inc
mov
movsb
jbe
mov
mov
xor
fcomps
mov
aaa
outsl
movsb
and
nop
cmp
in
test
adc
daa
loope
xchg
dec
sbb
jne
mov
mov
outsl
ss
lret
pop
enter
adc
test
push
movsb
or
jge
mov
mov
sub
mov
outsb
fidivrs
jno
test
mov
jae
inc
and
loopne
insb
mov
ja
in
std
bswap
push
jl
dec
lret
sbb
pusha
push
xor
inc
int
outsb
shrb
sbb
cwtl
inc
sbb
or
pop
fmull
shl
add
mov
mov
ss
push
cli
and
mov
sbb
jo
sbb
xchg
cmp
jnp
insl
popa
pop
xor
mov
sub
mov
xabort
incl
mov
jbe
aas
xor
xor
or
ljmp
cli
jg
aas
pusha
test
or
push
mov
add
pop
pusha
push
std
cmpsb
ret
push
mov
ljmp
sub
loope
imul
lock
inc
mov
xor
or
cmp
xchg
roll
test
das
add
mov
jno
adc
mov
pop
pusha
and
xchg
cmp
mov
lds
mov
push
mov
into
scas
mov
jae
cs
cmp
arpl
pop
shrb
test
pop
cld
sub
dec
out
lods
cmp
or
mov
mov
xor
repnz
mov
xchg
pop
add
repz
shrl
int
mov
mov
push
and
leave
mov
add
or
pop
fcompl
shrl
push
push
aam
xlat
xchg
or
inc
fildll
pop
hlt
inc
in
jp
repnz
call
mov
inc
ja
popa
xor
mov
lods
add
sbb
cmp
movsl
inc
lds
lods
stos
push
xchg
add
shll
jo
mov
xchg
cmp
adc
outsl
mov
fidivrs
jl
aam
and
das
cmp
dec
push
pop
mov
xor
aaa
loope
sub
inc
sbbb
sarl
scas
inc
xchg
lods
js
sahf
push
and
cwtl
sub
mov
cli
mov
mov
cmpl
jne
adc
lods
and
xlat
cmp
testb
sub
mov
sub
mov
fisubrs
cltd
cmpsb
popl
loopne
aad
jns
pop
mov
jecxz
cwtl
xchg
mov
jne
daa
pop
push
push
cmp
mov
xlat
dec
bound
or
shl
mov
or
cs
mov
mov
sub
sahf
xor
mov
in
dec
inc
mov
push
loopne
pop
pop
jb
das
daa
pushf
mov
mov
xlat
out
or
cld
mov
pop
xchg
sbb
test
imul
xor
push
call
pushf
loopne
push
bound
and
cmp
jle
cmp
sub
jno
cltd
mov
xchg
rcrb
xor
cli
pop
mov
pop
ljmp
loope
push
xchg
fsubl
fcmovnb
outsl
fnstcw
int
xorl
aam
add
ficomps
jnp
push
xor
sub
loopne
jle
scas
add
mov
mov
pavgw
mov
out
mov
mov
in
jne
push
xchg
lds
cmp
jns
dec
xor
mov
jnp
adc
shrb
dec
cs
idivb
mov
lcall
loop
fdivrp
adc
mov
sbb
loopne
push
cmp
jns
add
or
xor
sub
scas
cmpsl
fcoml
mov
lcall
inc
cmp
call
repnz
xchg
jle
in
cld
mov
sbb
add
and
push
fwait
lret
fst
out
mov
pop
dec
xchg
jge
add
push
leave
xor
aad
or
cltd
xor
inc
jle
nop
repnz
jmp
dec
dec
jmp
cmpsb
cmp
dec
gs
mov
imul
inc
xchg
addr16
push
cwtl
ret
mov
testl
mov
add
mov
sub
mov
push
int3
popf
dec
pusha
cmp
sarb
and
xor
sbb
push
in
pushf
push
push
xor
fwait
jbe
je
mov
je
mov
jne
add
cmp
data16
push
lds
sub
cmp
pushf
push
ret
add
sub
mov
je
insb
movsl
std
shrl
mov
or
xchg
data16
xorl
xchg
jl
add
sbb
and
cli
sbb
movsb
ja,pt
inc
mov
imul
add
push
xor
mov
sbb
push
xlat
mov
jo
pop
aas
mov
inc
aam
cld
mov
dec
sbbl
out
or
push
xchg
sub
pop
mov
xor
in
filds
cld
iret
aas
iret
mov
ljmp
popa
cs
int
fidivrs
jle
rcll
inc
and
adc
add
fstps
filds
scas
bound
cmp
pop
das
aaa
daa
pop
mov
aaa
xchg
ret
adc
test
push
es
cmp
and
xchg
sbb
push
mov
bound
cwtl
sbb
jmp
pxor
mov
movsl
push
adc
xorl
push
mov
adc
lcall
pusha
ret
std
in
cmp
repz
inc
data16
or
push
adc
scas
in
rorb
stos
out
mov
inc
push
mov
jmp
push
dec
mov
inc
ret
js
inc
mov
ret
out
sub
aad
mov
fldcw
aam
xor
pop
cmp
lret
das
and
bound
fiadds
rcll
sbb
mov
rorb
lahf
bound
jae
inc
incl
fcmovb
jg
ret
int3
mov
sub
cmp
push
sti
test
out
sub
sbb
add
and
or
cmpl
or
outsl
push
and
movsb
sub
movsb
fdivrp
dec
insb
jl
in
jmp
mov
daa
fidivl
sti
sub
addb
rcll
sti
or
test
std
cmc
je
call
and
cwtl
add
repnz
mov
int
xchg
xchg
stc
adc
push
stc
shr
sti
xorb
sbb
or
jae
inc
test
mov
pop
jge
das
lock
outsl
fbstp
mov
xchg
sub
push
inc
cmp
arpl
mov
sub
inc
sti
sub
adc
decl
repz
xchg
mov
mov
nop
filds
jns
pop
cld
sub
adc
adc
mov
push
mov
adc
push
enter
cwtl
out
fwait
inc
xor
sbb
daa
loopne
lea
xor
sub
rorl
jnp
arpl
mov
inc
adc
cmpsl
je
mov
mov
jno
jne
inc
lock
mov
cmp
outsl
xchg
mov
pushf
cmpsl
mov
sahf
bound
mov
xor
xchg
push
inc
into
fiaddl
scas
or
inc
pop
xor
clc
in
sub
in
jne
inc
inc
xor
push
and
pop
mov
cmp
int
inc
mov
xor
stos
xor
dec
movsb
or
mov
mov
xchg
mov
ss
pushf
xchg
mov
fcomps
js
mov
xlat
jbe
xchg
ds
adc
dec
scas
cmpsl
xor
or
orl
sbb
test
rcrb
ss
inc
addr16
outsl
jmp
or
test
fistpll
or
pop
out
jne
add
push
pop
fsubl
cltd
lods
imul
cmp
mov
mov
sbb
inc
ds
inc
js
mov
xchg
imul
xor
dec
pop
push
sbb
insl
rorb
xlat
into
int3
mov
jmp
jne
mov
sbb
inc
xor
int3
mov
push
jb
insl
mov
mov
xchg
popa
sbb
sbb
lods
adc
movsl
xor
push
movsb
je
pop
int3
mov
jl
xchg
pop
cli
jmp
fsub
outsb
mov
cltd
xor
or
fsub
jl
dec
cmpsl
repz
jg
cmp
lods
cs
mov
dec
pop
popa
fwait
and
sub
idivb
jl
jl
dec
jns
sti
cmpsb
popf
cmp
cmpsb
imul
add
js
sub
push
mov
pop
in
cmp
sbb
mov
test
add
aaa
mov
pushf
decl
shll
std
fisttpl
pop
movsl
fimull
inc
push
test
adc
xorl
dec
into
insl
stos
mov
and
in
sub
xlat
addl
jns
sub
push
pop
jae
xchg
notb
enter
rcll
fstpt
adcb
push
dec
or
stos
sub
push
pop
cmpsb
cwtl
sarb
mov
shrb
cli
or
dec
push
dec
mov
aad
mov
int
pop
pop
cmp
clc
mov
addr16
cmpl
or
cwtl
ficoml
pop
sti
push
in
dec
aam
mov
add
xchg
jno
jmp
loop
xchg
push
cwtl
std
lahf
rolb
xor
insl
lcall
sub
inc
mov
into
stc
call
mov
in
xor
in
adc
xor
jp
cmp
int
outsb
or
push
xchg
cmp
insb
je
fmul
loope
mov
cli
add
outsb
lods
jbe
aas
data16
jno
repz
loopne
add
pop
jbe
cmp
fucomi
lods
pop
inc
mov
sub
pop
leave
sti
mov
push
or
ret
mov
cmp
lret
jmp
inc
mov
jnp
pop
lods
or
mov
fists
mov
les
dec
dec
and
ret
add
aam
pop
jo
arpl
data16
mov
punpckhdq
mov
sub
adc
push
out
ds
sbb
sbb
push
cmc
push
sahf
aad
jmp
xchg
loopne
lock
loop
cld
stc
jmp
or
insb
dec
dec
imul
repnz
aas
loopne
repnz
jb
in
orl
icebp
jl,pn
ret
leave
push
xor
lcall
mov
movsl
mov
mov
mov
fwait
rcr
add
dec
cmp
sub
push
mov
dec
jp
or
jae
icebp
aad
cmp
adc
out
pop
or
or
mov
push
add
xchg
dec
jmp
iret
in
shll
add
mov
insl
cld
jbe
imul
imul
sub
aaa
sub
pop
js
xor
andl
dec
out
inc
js,pt
sahf
mov
xchg
xchg
mov
jecxz
and
js
add
sahf
cmp
xlat
rolb
cmp
rcrl
and
add
mov
filds
test
fs
dec
pop
test
addr16
fistps
popf
sbb
movsl
scas
aaa
and
xor
ret
sbb
ljmp
inc
push
ficoml
popa
xchg
xor
ja
cmp
leave
sbb
in
jecxz,pt
xchg
mov
add
cld
adc
sub
pcmpeqd
out
push
mov
icebp
fadds
cld
fldl
lret
cmp
and
subl
add
sub
jmp
mov
cmpl
sarb
sbb
xor
fsubrp
mov
cld
test
push
inc
je
ret
sar
dec
test
sahf
test
push
int3
or
fadd
xchg
cmp
fsubs
loop
push
outsb
push
pushf
es
out
add
push
adc
insl
inc
aam
fistpl
mov
add
xchg
xor
fstpt
movsl
lret
pusha
add
inc
fadd
push
bound
into
dec
xchg
pop
je
leave
bound
dec
cmp
lock
js
adc
cwtl
sub
arpl
sub
xor
js
pop
mov
sbb
inc
mov
popaw
dec
stos
jl
shlb
cmc
pop
int
shrl
inc
inc
das
push
or
scas
add
out
gs
pop
pop
sub
fsubrs
loope
inc
fsubl
sub
scas
push
xor
mov
sbb
mov
push
xor
pop
push
movsl
stc
fcoml
divps
mov
pushw
add
jo
push
cmp
mov
or
cs
dec
pop
jp
pop
insl
inc
out
push
push
cmpsl
ficompl
inc
xlat
cltd
fidivrs
aas
xor
js
push
sbb
mov
jne
in
shlb
xor
lea
gs
cli
xchg
xchg
xchg
pop
jle
or
sub
ret
add
add
shrl
sbb
dec
faddl
xor
sti
xor
ret
mov
in
ja
mov
push
cwtl
scas
push
sbb
repz
pushf
lods
je
lds
mov
int
cmpsl
mov
and
push
loope
test
xor
shll
out
xor
stos
loope,pn
sub
and
push
dec
dec
rorl
movsb
jmp
and
in
xchg
jl
sbb
push
decl
sub
or
fadd
and
inc
cmpsl
lock
imul
divl
ret
pop
cmp
jnp
das
and
unpckhps
sbb
lret
adc
sub
and
inc
int3
push
mov
outsl
cmp
inc
adc
push
sbb
xlat
fiaddl
and
pop
adc
loop
fbld
push
mov
push
and
cmp
jmp
test
dec
orl
mov
test
push
push
xor
imul
les
pop
fsubl
mov
xchg
push
jmp
adc
push
push
and
xchg
orl
loope
add
xchg
mulb
fistpll
and
fistl
pop
push
and
test
and
xchg
leave
shr
push
fcmovu
xor
and
or
inc
pop
jae
cmp
ljmp
jmp
sbb
fistps
jmp
pop
inc
inc
inc
xlat
mov
mov
fcoms
pop
popf
mov
pop
jo
stc
adc
pop
and
sbbb
jno
mov
sbb
mov
es
pop
insl
xchg
sub
push
sbb
aas
sahf
pop
aad
xchg
mov
loopne
inc
enter
mov
or
xor
push
fbstp
loop
hlt
adc
gs
push
mov
jle
jo
je
xlat
cmc
push
jae
aas
sub
ret
jo
outsb
test
in
cmp
pop
and
icebp
mov
cmpl
and
cmp
and
mov
in
lock
pop
outsl
shr
or
aam
leave
jg
inc
mov
fstpl
mov
cmc
xor
daa
je
pop
mov
sub
mov
nop
inc
shll
fstl
ret
in
push
push
ficompl
and
fildl
repnz
icebp
out
jns
jb,pn
out
adc
iret
xor
and
mov
pop
repz
bound
cmp
cmp
cmpsb
sarl
sbbb
fidivrs
mov
add
mov
push
jne
jbe
sar
test
leave
repz
cmp
mov
movaps
testl
mov
lods
push
jo
xor
pop
arpl
cmp
sbb
add
push
xor
rorb
cwtl
push
xor
repnz
test
inc
dec
mov
fidivrs
lods
je
jo
nop
cmp
xchg
incl
xchg
mov
add
out
pop
xlat
int
mov
push
scas
inc
add
cmpsl
dec
xor
insl
mov
mov
adc
lods
ja
inc
jmp
sbb
clc
mov
adc
cli
js
in
sbb
int
sbb
push
cmp
jmp
inc
jmp
cltd
mov
enter
cmp
mov
leave
and
cltd
mov
mov
mov
push
mov
dec
push
sbb
mov
or
xor
bound
je
jge
sub
or
add
push
xchg
fwait
test
fidivrl
add
out
pop
jge
dec
cmp
andb
sbbl
cmp
in
movb
std
ljmp
inc
mov
insl
mov
std
push
movsl
push
mov
mov
inc
push
cmp
jnp
xchg
mov
in
cld
in
cmp
jl
clc
add
mov
cmp
icebp
das
pop
or
jp
or
push
pop
inc
xchg
push
inc
ds
js
cmp
pusha
movsl
leave
fs
mov
jnp
or
or
push
sbb
inc
stc
ret
sarb
lock
pop
add
adc
mov
loopne
fucomp
mov
mov
dec
inc
ja
andb
orb
sbb
cmp
enter
aam
add
sub
in
fiadds
stos
cmp
adc
scas
jo
mov
popa
lock
cwtl
add
xchg
sub
pop
lahf
hlt
xchg
daa
fisttpll
scas
outsl
cmpsb
lods
icebp
rcll
jnp
shlb
jbe
shlb
cmp
clc
into
frstor
jle
and
add
and
idivb
sbb
jne
ss
xchg
jnp
xchg
push
je
fisubs
xchg
ss
lcall
push
mov
adc
push
pop
jno
mov
imul
sub
orb
sub
mov
ds
das
cmp
ljmp
subb
dec
mov
aaa
push
aaa
xchg
mov
jae
or
mov
xor
lea
dec
mov
stc
mov
jl
lea
loope
fwait
jae
push
stos
shlb
pusha
inc
xchg
inc
pop
adc
dec
aad
in
push
sbb
outsb
cmp
fdivrs
rorb
xlat
jnp
mov
add
test
jge
arpl
arpl
push
pop
lock
imul
sti
mov
or
sub
sub
xchg
jmp
mov
call
sub
push
cmp
mov
mov
xchg
sbb
sub
arpl
mov
adc
shll
ds
addb
lock
xchg
pop
ljmp
jnp
sub
in
mov
clc
mov
jo
xor
rol
lcall
ficoms
push
sub
push
jmp
lods
sub
test
in
add
dec
repnz
ficoms
nop
pop
sub
dec
pop
jb
inc
jl
xchg
and
dec
pop
enter
js
push
shlb
fdivrp
xor
in
and
out
xchg
sbb
insb
mov
jge
push
test
mov
jg
lret
movsb
and
xor
scas
sbb
xor
dec
jb
xlat
stos
xor
jne
mov
pop
inc
and
xor
aad
xchg
push
nop
jp
test
adc
sub
push
xor
xchg
and
inc
filds
lea
in
call
mov
mov
jne
mov
inc
jno
inc
add
adc
pop
adc
cmpl
lahf
pop
popa
mov
imul
dec
jg
pusha
and
jmp
clc
xor
or
stos
nop
or
pop
or
lds
sbb
lahf
xchg
stc
mov
jb
movsb
ret
inc
mov
ljmp
test
pushf
dec
sub
pop
pop
sub
mov
bound
arpl
cmp
pop
dec
pop
sahf
xchg
inc
pop
shlb
dec
pusha
lock
xor
bound
xor
or
jecxz
pop
sbb
ret
or
mov
aaa
fldl
lods
push
push
xchg
jmp
ss
mov
mov
cmpsb
movsl
insb
jg
lods
sbb
je
je
mov
xor
inc
or
xchg
dec
ror
pop
adc
push
xbegin
pop
push
ret
faddl
sbb
mov
in
fwait
or
fstpt
shll
icebp
in
xchg
insl
cmp
xor
pop
push
mov
repz
scas
jbe
jl
mov
push
nop
and
lea
hlt
cmp
jle
outsb
scas
movsb
outsl
fdivr
jecxz
push
mov
sub
rcrl
std
push
jmp
pushf
fnstcw
andb
inc
cmpsb
mov
mov
mull
lods
test
je
mov
cmp
nop
jb
add
daa
mov
and
hlt
leave
xchg
shlb
test
loopne
aaa
pop
popf
inc
pusha
sti
ficomps
jnp
sub
call
add
scas
lea
pop
ljmp
add
pop
cltd
mov
sar
jge
dec
jb
pusha
lret
insl
lret
dec
dec
fnsave
mov
dec
icebp
mov
push
jns
imul
clc
xchg
in
mov
pop
push
mov
push
test
lock
imul
fdivrl
jge
mov
es
fmull
xchg
add
sub
add
adc
addr16
lods
rorb
cmpb
aad
arpl
repz
dec
mov
test
data16
inc
or
mov
inc
jb
or
hlt
lret
fcomps
xor
push
ds
movsl
es
sbb
jg
in
cmpsb
push
movsl
nop
push
inc
js
push
add
and
repz
xchg
mov
call
mov
shrl
mov
cmp
push
mov
push
cmp
negb
test
pop
ficomps
aam
xchg
xchg
mov
sub
stos
ds
mov
jecxz
sub
mov
jne
or
imul
mov
cmp
sbb
xchg
andl
aaa
adc
sub
pop
sbb
outsl
sti
pop
shlb
in
push
lods
mov
jmp
or
ss
pop
mov
sub
stos
les
or
fimull
xchg
negb
jo
test
bound
mov
push
xor
mov
aas
jb
xchg
sub
adc
dec
out
repz
stc
mov
outsb
pop
add
add
dec
xchg
test
push
xchg
inc
push
jl
push
xor
mov
cs
out
ds
adc
in
pop
dec
in
fbstp
xor
mov
pminub
rcl
pop
mov
or
dec
add
popf
ficoml
cmpsl
mov
out
outsl
push
xchg
cmp
mov
movsl
sbb
jge
and
fidivl
push
sub
mov
inc
pop
sbb
pushf
mov
leave
sbb
bound
in
adc
lahf
mov
das
ss
dec
inc
out
shl
mov
add
ljmp
xchg
xchg
mov
addr16
adc
hlt
scas
out
cmc
or
adc
ds
in
imul
lret
xchg
sub
jle
fmuls
aam
jno
dec
sub
jb
xor
ds
push
dec
movsl
test
adc
fwait
xlat
mov
test
xchg
pop
cmp
hlt
cmpsb
mov
andb
in
sub
inc
ljmp
fistpll
int3
pop
xchg
mov
mov
xor
jl
scas
imul
mov
or
xor
mov
sahf
xchg
flds
fdivl
sub
insb
cmp
lods
sbb
pop
fidivrl
insb
cmp
pop
out
push
iret
mov
adc
jge
loopne
mov
test
lock
shrb
mov
push
or
aaa
out
pop
aad
icebp
cltd
adc
dec
dec
sbb
mov
gs
cmp
push
gs
cmp
cmp
js
test
inc
pop
stos
cmpsb
cmp
push
js
dec
xlat
xchg
sub
inc
icebp
gs
mov
mov
push
xor
ret
dec
iret
xchg
or
and
add
push
sbb
cmc
pop
adc
ret
add
inc
test
add
pop
out
xchg
pop
test
sahf
xchg
mov
add
xchg
xlat
dec
je
bound
fisubs
addr16
lods
insl
mov
lahf
jecxz
fwait
ja
nop
inc
dec
int
mov
movsb
aad
das
in
jp
xchg
arpl
stc
mov
shll
xor
outsb
lret
pop
cs
ljmp
insl
and
push
in
enter
test
dec
mov
pop
adc
das
pop
bound
adc
push
cmpsl
lods
out
sub
iret
sbb
std
or
notl
lea
out
andb
stc
test
or
cli
mull
stc
xchg
cmp
fs
sub
inc
loop
hlt
mov
jmp
cld
insb
sbb
inc
sbb
movsb
adc
loop
inc
cmp
test
xor
cli
insb
arpl
je
js
jne
sub
add
lcall
imul
adc
ss
mov
jge
lahf
xchg
lods
daa
jbe
inc
adc
push
cmp
xchg
sub
pop
jecxz
inc
pop
cmpsb
sub
mov
add
dec
call
fwait
mov
arpl
jmp
mov
dec
outsl
out
lret
mov
je
sbb
cmp
in
inc
sbb
mov
stos
mov
imul
xchg
xor
mov
in
mov
xchg
out
dec
rorl
lcall
insl
pop
xchg
xor
fcoml
lods
dec
jno
insl
lods
push
sub
or
mov
xor
loope
add
arpl
adc
mov
dec
das
mov
cmp
sbb
movsb
lret
mov
repz
pop
movb
js
popf
and
fwait
sahf
sub
aad
enter
mov
shrl
sub
pop
ss
je
lret
jmp
mov
fidivs
sbb
push
dec
shlb
stos
repnz
jle
inc
pop
lds
jnp
inc
add
mov
jb
fbstp
inc
jp
andb
test
rcl
push
clc
popa
xchg
mov
fildl
int3
lods
rcrl
pop
sub
pop
addr16
sub
adc
sbb
adc
call
jno
popa
jnp
sbb
fcmovnbe
adc
nop
xor
jb
ds
shl
insb
push
xchg
mov
mov
mov
inc
sbb
cmp
adcb
mov
jl
push
pop
inc
adc
pop
dec
test
xchg
adc
imul
pop
rclb
sbb
inc
rorl
lods
data16
bound
int3
iret
inc
out
sahf
and
and
cmp
xor
leave
adc
jg
out
test
jbe
dec
dec
stos
mov
jnp
mov
loop
add
outsb
ss
insb
les
xor
and
aas
stc
mov
pop
daa
sub
sub
and
sub
shll
cmc
jecxz
dec
gs
sbb
fidivrl
mov
pop
dec
cwtl
rorl
sub
cli
insb
outsb
clc
push
mov
cmp
rolb
inc
pusha
push
and
and
imul
mov
lds
fwait
cwtl
lods
test
mov
data16
les
cld
leave
inc
mov
mov
arpl
outsl
test
jbe
jl
inc
fwait
lods
rcr
pop
jb
xchg
sub
mov
out
inc
insl
fldenv
add
pop
sbb
clc
jbe
pop
cmp
outsw
add
mov
leave
cmc
xor
cmpsb
fwait
jle
inc
pop
insb
sbb
mov
icebp
int
sbb
push
inc
leave
xor
fcomps
lret
jg
mov
jl
or
sahf
mov
pop
arpl
inc
iret
pop
push
push
test
ficoml
push
fwait
lahf
pop
sarl
cmp
mov
inc
ficoml
push
sti
push
std
aaa
fs
jo
orl
mov
fucomp
jnp
mov
inc
add
or
adc
gs
jbe
push
xchg
xlat
cmp
mov
jnp
gs
xchg
jo
pushf
mov
add
ret
ds
stos
mov
xchg
adc
in
xlat
retw
jl
and
xlat
daa
cs
jle
in
jecxz
adc
aas
xor
sub
or
fs
inc
or
mov
clc
dec
dec
flds
or
aad
dec
sub
xor
adc
push
out
lds
mov
ja
push
sbb
mov
div
add
or
dec
xlat
aam
and
jnp
adc
sub
popf
mov
mov
jg
out
push
ds
aaa
popf
xchg
outsl
test
and
divl
or
sub
outsb
icebp
dec
scas
pop
xchg
sbb
or
xlat
mov
push
lea
rdtsc
add
sub
or
ss
lds
ffree
pop
hlt
imul
push
add
test
adc
lock
push
cmp
dec
cmp
flds
cltd
ret
arpl
lea
shll
xor
add
sbb
testb
dec
sub
xchg
xorb
jbe
fstps
aam
mov
test
dec
leave
ret
add
xor
repnz
out
cmc
dec
add
mov
inc
xor
or
add
jge
xchg
mov
js
or
jge
jae
mov
outsb
ficoml
or
iret
mov
jb
jl
adc
insb
pop
and
fs
pop
lahf
mov
fidivrl
jle,pn
push
pop
stos
inc
push
scas
leave
lods
jno
push
jae
mov
outsb
cmp
push
or
cmp
scas
movsb
adc
movsl
cmp
adc
inc
pushw
mov
cld
movsl
sahf
and
mov
push
adc
sub
mov
add
fistpl
jmp
push
inc
mov
push
sub
popa
out
cmp
aas
mov
xchg
sahf
lods
fcomp
xchg
es
nop
mov
dec
xor
inc
scas
lds
add
xchg
push
stos
rolb
sbb
dec
push
and
add
in
mul
icebp
outsb
and
test
mov
fsubr
push
std
cmc
mov
adc
jo
daa
das
jp
loop
in
pop
push
mov
push
fdivr
test
stos
lret
dec
cmpl
lret
sub
mov
int
aaa
jge
mov
sub
add
dec
mov
shll
imul
int3
mov
xchg
pop
pop
pop
repnz
ficoms
in
stos
cmp
repz
shl
imul
icebp
xchg
mov
cmp
inc
sti
push
or
fidivl
sti
mov
cmpsb
dec
dec
sahf
popf
xor
or
add
adc
movsb
mov
jae
lret
idiv
ret
fucom
sahf
jg
add
ss
xor
int
vxorps
pop
imul
out
xor
mov
ss
jbe
push
mov
push
pop
push
lahf
fldenv
mov
inc
push
jbe
mov
cmpsl
add
adc
jb
add
inc
xchg
sarb
stos
mov
addr16
lret
push
cmp
fstpl
cmp
test
sub
mov
mov
lret
addl
adc
jbe
leave
inc
pop
mov
rcll
pop
jb
pop
ffreep
in
iret
daa
jb
lcall
mov
stos
cmpl
ds
mov
add
cmp
fisubrs
add
je
cmp
xorl
sbb
cmpl
xchg
scas
cmp
jbe
fisubrl
mov
jb
mov
lods
lods
cmp
loop
sbb
in
les
fisubl
cmp
mov
cs
outsl
cmc
and
cwtl
mov
jnp
cmpsb
sub
sub
push
iret
mov
dec
add
scas
cli
lds
cmp
pop
mov
mov
or
mov
push
aad
xor
fxch
in
push
xchg
add
xchg
cld
ds
and
sub
xlat
test
iret
xchg
imul
in
clc
adc
cmp
cli
insb
imul
xchg
mov
lds
ds
jb
push
out
xchg
fldcw
pop
inc
mov
gs
xchg
pop
pop
ljmp
pop
or
mov
jns
int
push
dec
lods
mov
roll
or
stos
xchg
call
incb
ja
sub
cltd
ds
aad
xchg
stos
and
out
clc
mov
aad
mov
jns
bound
mov
ss
out
mov
ret
jb
xor
fidivrl
inc
add
lahf
in
add
xlat
inc
or
jno
call
fiaddl
rcrb
loope
shrb
bound
scas
mov
not
cld
mov
loopne
std
in
clc
mov
mov
arpl
movsl
mov
out
pop
fcoml
cli
jo
jle
into
xchg
insl
sub
out
pushf
les
push
in
sbb
mov
xchg
inc
mulb
jl
int3
stos
div
clc
ds
imul
mov
loope
cmp
mov
ss
rcrl
or
and
enter
gs
ret
xchg
cmpsb
mov
bound
rcrb
adc
mov
aas
mov
into
sbb
jg
faddl
cmc
sbb
int
sti
push
xchg
nop
mov
clc
shlb
and
icebp
jns
loop
mov
sbb
repnz
loop
adcb
test
or
sub
xor
sbb
ficoml
imul
sub
or
arpl
pcmpgtd
add
push
xor
jge
test
sub
push
or
mov
jge
dec
stos
shl
fidivl
fcoml
jnp
idiv
jmp
jmp
mov
addr16
mov
mov
pop
sbb
or
xchg
mov
std
stos
jne
ds
fbstp
bound
push
pop
xor
xor
cmp
cmp
dec
lods
xchg
pop
sbb
lahf
adc
or
aaa
scas
cmp
inc
cmp
xchg
mov
movsb
cmp
sbb
int
jne
fidivrl
ds
repnz
pop
jp
adc
push
mov
flds
xor
addr16
push
jbe
scas
repz
outsb
pop
das
cs
jmp
cwtl
js
pop
add
lods
xorb
negb
and
les
notl
jo
pop
cmp
jnp
jmp
push
popf
xor
cmp
fcoms
xlat
push
scas
fwait
sbb
xor
mov
in
pop
xchg
mov
adc
pop
xchg
call
ret
and
leave
mov
xchg
push
ret
mov
mov
lcall
popa
xchg
std
bound
fcompl
std
pop
lahf
xchg
icebp
push
es
jmp
jmp
add
mov
xchg
leave
cmpsb
aam
js,pn
out
lods
aaa
mov
fwait
or
mov
aam
testb
pop
jnp
mov
call
mov
pop
push
inc
xorb
outsl
push
or
xor
cmpxchg
xchg
push
mov
pop
fstpl
sbb
sbbl
inc
int
xor
or
cli
mov
scas
xchg
xor
add
cmp
imul
inc
adc
dec
and
out
in
ficoml
xchg
mov
rolb
iret
mov
scas
xorb
sub
xchg
mov
sbb
mov
cmp
mov
mov
addl
or
aad
or
inc
mov
push
loop
imul
popfw
into
xchg
push
inc
and
ret
fcmovnb
mov
and
dec
push
xchg
mov
pop
js
push
in
out
out
mov
popf
mov
xor
loopne
mov
leave
insl
xchg
arpl
inc
out
scas
mov
rcl
lea
sub
adc
ljmp
insl
test
sahf
into
int3
inc
fldcw
and
into
cmpsb
mov
mov
pop
or
unpckhps
mov
icebp
les
mov
sarb
negl
cmp
out
jp
stos
scas
loope
or
and
cmp
push
insb
dec
stos
pop
mov
mov
mov
sub
les
mov
pop
dec
insl
cmp
mov
push
out
or
xchg
mov
mov
mov
popf
lcall
pop
cmp
mov
imul
aaa
andb
int
add
inc
cmp
ret
testb
jl
add
call
call
mov
cmp
mov
mov
dec
add
dec
and
jb
xor
fcmovu
mov
shll
jge,pt
push
in
xchg
js
mov
xchg
iret
add
push
out
inc
adc
lret
fisubs
add
push
and
push
xorl
cmp
adc
lea
xlat
scas
ror
test
push
inc
and
pushf
sbb
adc
ret
ja
hlt
adc
jl
dec
sbb
adc
jmp
fldl
jp
hlt
add
outsl
jmp
mov
leave
lods
inc
inc
sbb
mov
cmpsb
iret
pop
mov
xchg
mull
jbe
fdiv
repz
mov
jmp
in
xor
mov
mov
cld
adc
das
aad
aad
adc
sti
fisubrs
xor
sbb
es
into
loope
loopne
test
xchg
xchg
mov
mov
lea
ficoms
stos
sbb
pusha
cmp
in
ret
shl
sub
and
leave
das
cli
cwtl
in
dec
or
mov
pop
push
mov
xor
aad
and
roll
mov
das
lahf
loope
sarl
push
ds
and
inc
outsl
pop
jp
gs
sbb
pop
stos
xor
pop
cld
push
call
ret
xor
out
dec
push
in
xchg
lcall
mov
mov
test
and
mov
cli
or
stos
adc
jg
or
dec
xlat
rolb
mov
push
mov
jl
into
testl
jmp
stos
or
movups
inc
jns
pop
nop
cwtl
cs
sbb
push
push
data16
sbb
mov
and
test
jmp
stc
outsb
arpl
cltd
jle
call
xchg
xchg
stos
ljmp
pop
cmpsl
jg
mov
add
scas
add
imul
or
lds
sbb
lds
mov
test
pusha
divb
dec
cwtl
test
sahf
cmp
cmpsl
push
add
mov
es
lods
in
negb
mov
jmp
fwait
testl
dec
jge
sarb
int3
inc
mov
or
or
inc
xorb
cmp
xchg
pop
aad
lahf
pop
dec
js
mov
and
mov
pop
hlt
pop
loopne
pushf
mov
mov
clc
leave
adc
popf
lcall
ss
outsb
jmp
inc
mov
xchg
movsl
lahf
mov
push
cwtl
rcrl
inc
daa
mov
jnp
add
inc
pop
inc
xor
adc
pop
xor
loopne
les
movsl
sti
adc
aaa
jge
mov
pop
xchg
fs
add
push
sti
inc
and
add
inc
cwtl
daa
bound
loopne
pop
test
xlat
lods
xor
sbb
or
pop
jns
sarb
dec
scas
mov
xor
inc
cwtl
lods
cmp
fimull
sbb
imul
push
sbb
fadd
cmp
push
sub
iret
add
inc
js
divl
in
inc
inc
pop
pop
or
push
push
add
push
dec
xchg
sbb
loopne
xor
jb
fwait
movsl
mov
out
adc
pushf
inc
ret
push
fcomp
jge
xlat
and
sbbl
fldenv
pop
pop
imul
or
sub
push
xchg
fs
lea
mov
sub
cli
cmp
xchg
insb
lods
pop
fisttpl
xor
test
lret
xchg
xlat
fwait
mov
mov
jbe
mov
ja
dec
mov
or
add
jge
dec
lds
js
cltd
xchg
sub
cmp
neg
repz
iret
sbb
clc
xchg
dec
xor
inc
and
inc
xchg
dec
lea
jae
in
test
inc
sub
push
lds
dec
dec
je
pushf
or
mov
shrb
mov
mov
xor
sbb
mov
mov
pop
mov
sti
jl
xchg
pop
cmc
lahf
or
xlat
xor
fcmovnb
je
or
pop
lods
mov
aad
fimuls
out
inc
xchg
pminsw
inc
cmp
in
mov
xor
pop
push
fstl
loope
insb
cli
mov
ja
in
insl
adc
xor
push
cld
jb
call
scas
xor
pop
xchg
push
lret
xchg
aad
sub
repz
insl
fwait
call
stos
dec
test
subl
ret
or
ss
jae
ss
stc
cwtl
dec
or
cli
xchg
push
shrb
inc
out
inc
shll
mov
mov
and
lds
xchg
andb
imul
test
push
push
pop
stc
jecxz
mov
lret
scas
push
in
cltd
call
repz
dec
call
dec
push
jae
aam
or
inc
cmp
repz
inc
mov
mov
rorl
ss
negl
dec
dec
jp
mov
sub
jecxz
aas
jne
int3
ret
sub
ja
lods
fimuls
shll
imul
outsb
iret
inc
or
pop
lods
nop
das
push
jmp
mov
enter
outsl
lret
daa
ret
test
aas
push
pusha
fists
test
mov
mov
mov
les
jl
inc
outsb
xchg
lahf
mov
adc
and
and
sbb
push
dec
xchg
xorb
adc
popf
loop
hlt
ljmp
loop
daa
add
mov
cmp
fldl
and
jnp
push
leave
sub
ja
stc
push
mov
mov
xor
jns
loop
jne
out
mov
iret
lahf
lods
out
pop
mov
inc
pop
int3
or
or
xchg
test
aas
iret
mov
jae
lock
arpl
std
mov
lret
insl
rcl
mov
push
jb
test
and
add
sub
mov
and
pop
and
aaa
mov
sbb
repz
inc
cmpsb
out
and
adc
into
incl
outsb
aam
add
call
out
dec
mov
and
ss
mov
outsb
jne
push
inc
pop
jmp
outsl
loop
mov
pop
pop
sbb
pop
xor
dec
or
push
rdtsc
adc
scas
xor
mov
hlt
adc
xchg
cmpsb
xor
addr16
inc
mov
cwtl
pusha
cmp
push
fnstenv
sti
mov
movsb
enter
stc
jp
mov
sub
icebp
loopne
dec
inc
scas
scas
push
aad
cmpl
push
push
adc
movsl
ljmp
addr16
xchg
daa
pop
scas
std
cli
mov
das
adc
and
jmp
cld
cmc
call
cmp
ror
popf
movsl
jno
sar
in
cmp
stos
inc
and
and
sbb
or
pusha
movsb
add
cmp
xlat
ret
sti
or
aad
idivb
scas
and
xor
jo
sub
pop
pop
jle
or
andb
sub
out
pop
and
leave
pop
js
mov
out
add
decl
scas
cmpl
nop
jecxz
cmpsl
movsb
push
jno
and
push
int3
loope
jns
mov
cmpsb
stos
xor
mov
and
fdivr
xchg
cld
mov
inc
cmp
or
sbb
popa
fldl
mov
or
sarl
lea
or
ss
sbb
repz
pop
int3
js
outsl
stos
cltd
mov
mov
pop
mov
add
xor
hlt
sarl
movsb
test
sahf
xchg
mov
or
jbe
cld
faddl
xor
adc
cmp
call
test
xor
jmp
sub
inc
mov
adc
insb
lret
and
cli
dec
xchg
lea
jbe
mov
cmp
inc
xor
std
dec
jo
cmp
pop
icebp
fsubrl
into
shll
xchg
js
jge
jnp
xor
call
pop
ret
ret
ret
sti
or
mov
aas
imul
sub
mov
pushf
faddl
adc
or
pushf
cmp
aaa
pop
cmp
in
sahf
adc
shl
mov
inc
mov
aas
iret
decl
push
cwtl
mov
enter
and
cmp
test
or
in
and
lea
aam
ret
mov
jecxz
xor
xchg
rcl
xor
test
cmp
mov
test
out
cmp
adc
sub
cmp
push
pushl
xchg
stos
clc
iret
imul
std
out
add
adc
movsl
mov
imul
in
inc
push
push
xchg
pop
rcll
sahf
hlt
lret
out
mov
mov
repz
adc
mov
sub
in
in
mov
arpl
push
or
fisubl
ja
loop
jnp
xchg
mov
xor
dec
sub
mov
push
mov
jp
lret
cmpsl
je
add
xchg
add
lcall
test
testl
ret
xchg
dec
dec
xlat
and
lods
imul
popa
cwtl
in
fisubrs
je
jle
xchg
mov
xor
repz
mov
orl
fldt
sub
sbb
sbb
addr16
xchg
push
insl
test
fld
mov
jmp
inc
cmc
jne
in
fcoms
inc
pop
mulb
cmp
loope
cmp
in
push
repz
push
cmc
xor
jle
mov
lea
ljmp
xchg
pop
add
or
xchg
testl
lods
sbb
lea
push
insl
lahf
std
adc
mov
mov
imull
cmc
adc
or
and
test
fiadds
push
pop
repz
mov
pop
cmpl
jg
aam
repnz
sbbb
stc
nop
jmp
mov
loop
adc
dec
sbb
bound
mov
out
das
push
loopne
mov
outsb
push
ljmp
mov
imul
mov
push
in
mov
or
fbstp
inc
xchg
mov
ljmp
and
dec
jl
xor
inc
subl
decb
pop
ljmp
xor
aaa
mov
xor
and
test
cs
fistl
mov
imulb
outsl
in
mov
xchg
jb
dec
imul
sub
daa
outsb
stos
cmpsl
repnz
xor
addr16
pop
jne
inc
in
fwait
mov
adc
and
adc
cmp
test
inc
push
js
sub
leave
jno
mov
ljmp
aad
fdivl
shr
mov
mov
push
in
loop
icebp
es
and
xor
mov
xchg
xor
aad
pushf
or
xchg
loopne
lods
js
rorl
add
jg
jbe
xchg
push
adc
int3
mov
movsb
push
clc
push
mov
xchg
and
out
mov
jb
mov
jo
stos
ja
xchg
lret
mov
pop
sbb
jp
push
mov
test
cmp
and
and
adc
scas
aad
out
mov
adc
fists
sbb
jp
and
inc
addb
mov
or
movsl
adc
clc
incb
ret
jb
pop
daa
jbe
cmp
push
enter
or
sub
ret
stos
sahf
mov
push
adc
and
adc
xchg
movsb
xor
mov
rcrl
push
imul
mov
sbb
mov
out
sub
or
jb
out
fwait
cmp
push
cltd
loop
and
jno
gs
jl
sahf
push
push
lret
pop
stc
test
addl
mov
cli
sub
pop
nop
fnstsw
out
and
add
push
mov
mov
mov
or
jmp
cs
pop
fidivrs
lods
cmp
mov
cmp
lea
dec
jge
imul
pop
mov
jo
inc
aas
icebp
insb
mov
mov
cli
sbb
push
es
sti
js
loope
fs
pop
push
dec
mov
adc
mov
pushf
cmc
lods
sarl
std
cmp
test
mov
jno
push
adc
adc
outsl
mull
lret
mov
jmp
add
aas
cwtl
test
outsb
cltd
fldenv
xlat
adc
xor
add
je
add
or
andb
and
in
xorl
testb
sbb
stc
push
int3
xchg
xchg
ret
ss
out
outsl
insl
xor
loop
in
das
mov
out
inc
dec
and
adc
inc
sbb
rorl
and
or
or
scas
insb
movsb
shll
bound
outsl
bound
lret
test
sub
jo
pop
lods
clc
cmp
dec
ror
das
out
loop
loop
leave
mov
into
xlat
and
dec
xor
movsb
inc
shlw
inc
dec
inc
inc
cmp
and
outsb
or
iret
fildll
mov
out
arpl
jg
sti
frstor
sub
inc
mov
stos
xlat
xchg
lahf
mov
les
hlt
mov
add
sbbl
out
stos
js
sub
cmp
call
mov
in
cmc
test
xor
bound
jnp
sbb
mov
test
sub
sub
imul
das
dec
jl
sbb
test
mov
in
call
scas
mov
dec
push
push
mov
dec
push
xchg
sbb
jmp
aam
es
cmp
add
dec
ljmp
mov
in
pop
push
mov
cwtl
xchg
fstl
fsubl
in
je
pop
lret
cmp
mov
sub
sub
ror
dec
push
add
es
cmpsl
clc
mov
flds
leave
sahf
repz
test
fsubr
pop
jno
push
jmp
lods
push
cwtl
insl
pop
lahf
mov
mov
enter
or
push
sbb
into
out
icebp
cmp
push
xchg
add
add
test
add
and
out
lea
out
in
test
cld
mov
mov
cmc
xor
test
inc
push
pop
pop
mov
fidivs
jg
movsl
insl
loopne
push
cs
jmp
pop
lods
data16
xchg
cmp
push
gs
ret
push
int
xor
out
mov
out
mov
cmp
xchg
scas
add
cmp
popa
adc
sbb
bound
mov
pusha
adc
test
jle
das
mov
frstor
adc
in
push
std
and
xlat
mov
cmpb
adc
sbb
sbbl
adc
shll
adc
lock
pop
js
ljmp
sbb
pusha
icebp
and
xchg
add
mov
stc
aad
sub
or
lea
mov
out
push
adc
inc
idiv
xchg
adc
cld
test
sbb
scas
adc
imul
adc
call
push
insb
mov
fwait
mov
shll
inc
jg
int3
mov
fsubs
xor
add
mov
fisttpl
pop
test
cmp
scas
insb
fldcw
pop
inc
add
adc
adc
push
sti
push
mov
adc
adcb
iret
sbb
mov
jne
xchg
jmp
ret
loope
jge
mov
into
jp
or
mov
inc
mov
pop
mov
sub
or
xchg
dec
mov
inc
inc
dec
mov
inc
dec
clc
std
nop
mov
movsl
sub
sub
mov
nop
fstps
adc
lods
ret
repz
cmpb
adc
or
mov
inc
aas
sub
repnz
xor
cwtl
push
in
arpl
hlt
inc
cmp
xor
mov
int3
js
inc
in
sbb
call
movsb
jge
scas
mov
arpl
pand
add
sbb
or
roll
cmp
cld
fists
mov
fidivs
repz
jle
cmp
sahf
pop
cmpl
pop
aad
aas
enter
imul
popa
enter
cs
in
cmp
test
shl
cltd
jno
cmpsl
sti
dec
call
push
xchg
pushf
scas
jo
xchg
call
inc
pop
int3
inc
sti
dec
inc
shrl
lea
lahf
xlat
fldl
or
mov
leave
scas
lret
sub
cmp
dec
subl
mov
cmp
xor
movsl
pop
push
or
cs
push
popf
xor
mov
imulb
xchg
icebp
add
sbb
jecxz
mov
out
cmpb
xor
cmpsl
dec
aas
push
cmp
pop
xor
jecxz
pop
std
loop
push
add
pop
adc
dec
pop
movsl
mov
cmp
fiadds
insl
imul
idiv
negb
or
add
into
or
jo
andb
imul
xor
mov
js
pop
and
daa
cmp
jne
mov
cld
leave
push
rolb
mov
sub
jne
jae
ret
or
scas
int3
xchg
int3
or
int3
xchg
scas
lods
push
orl
cmp
dec
aaa
adc
lods
out
insl
dec
ficompl
mov
scas
mov
xor
mov
pop
xchg
xchg
push
or
cmp
jge
mov
call
aad
add
dec
push
adc
xor
test
or
xor
jg
pop
jne
mov
dec
push
mov
add
popf
cmpsb
or
fildl
pop
pushl
sbb
mov
das
and
xchg
aas
orb
das
arpl
cmp
popa
jle
or
push
cld
jg
mov
call
adc
inc
iret
mov
aaa
insl
outsb
jp
fadd
mov
adc
add
ja
jnp
jo
lock
dec
push
add
call
pop
jp
lods
add
add
inc
mov
jne
cld
xor
ja
cltd
adcl
call
mov
mov
pop
iret
fwait
mul
xchg
sti
mov
ss
jge
inc
roll
dec
dec
add
mov
xchg
cmp
mov
leave
lods
dec
jne
sbb
pop
or
mov
pusha
push
insb
repz
mov
pop
xor
xchg
test
test
fistpll
sub
roll
cmp
popl
daa
and
dec
dec
jecxz
mull
jle
sbb
inc
gs
mov
and
lcall
pusha
jno
adc
out
mov
sahf
and
push
sti
jg
sbb
sbb
inc
das
lods
jg
in
jne,pn
shl
jnp
jecxz
xchg
xchg
xchg
aas
movsl
push
jmp
vcvttsd2si
push
sbb
call
xor
inc
pop
je
dec
fdivr
mov
ljmp
insb
jge
fcmovbe
and
mov
int3
jmp
icebp
cmp
jge
push
sub
inc
add
daa
xchg
jl
and
or
popa
add
add
je
les
lret
push
add
fldt
dec
pop
jb
jbe
mov
add
les
mov
dec
repz
sbb
std
dec
in
stc
in
cmpb
mov
mov
stc
mov
clc
sub
cmp
or
add
aas
xchg
xchg
in
scas
lahf
pop
test
mov
add
mov
mov
mov
push
cmp
pop
dec
push
adc
sbb
ja
xchg
jl
aaa
sub
mov
fsubl
insb
and
lea
push
push
xor
shl
inc
insl
jp
xor
imull
cmp
pop
ret
lahf
enter
fdivl
jb
sub
loop
mov
sbb
mov
or
pushf
and
scas
lods
gs
adc
or
jmp
test
cmpsb
mov
xor
les
mov
out
fwait
xorb
mov
xchg
cmp
paddd
push
fs
push
cmp
sbb
mov
sbb
and
xchg
pop
mov
jp
cmp
or
pop
testb
sti
add
jecxz
fucomi
call
and
jge
or
push
mov
mov
jns
std
sti
std
lcall
fstpl
mov
imul
inc
push
add
shll
repnz
adc
and
inc
ret
and
or
push
dec
sbb
daa
in
ljmp
mov
dec
insb
inc
adc
sub
mov
mov
data16
cmpsl
cmp
stos
xchg
lods
adc
addr16
repz
pop
dec
pop
cld
test
popa
push
hlt
dec
outsl
mov
mov
call
inc
xchg
xor
cs
sahf
pop
mov
movsl
in
cmp
popa
cmp
lods
insb
jne
insb
je
xlat
xchg
insb
imul
xchg
xchg
jae
cmpsl
inc
stc
cmp
cwtl
aaa
data16
inc
mov
mov
mov
cmp
loopne
mov
jo
rcll
cmpsb
mov
dec
out
xor
movsl
add
stc
int3
xchg
jno
or
in
dec
ja
js
sbb
jno
and
add
aaa
and
pop
in
add
sub
sub
jmp
pop
or
push
stos
sbb
pop
cmp
ja
aad
mov
xchg
mov
iret
adc
rorb
adc
pop
sbb
leave
xchg
in
lods
sti
mov
out
repz
cli
insb
repnz
jecxz
jns
sbb
cmpsb
lods
out
popf
leave
je
mov
aaa
cltd
lcall
lret
dec
cmp
and
fisubrl
pop
mov
dec
xchg
fs
add
nop
popa
xchg
jmp
mov
scas
push
inc
and
dec
scas
scas
mov
cmpsb
mov
sub
jmp
or
rolb
stos
fildl
adc
and
sub
sub
xor
pop
popa
push
popa
jae
into
adc
push
outsb
ret
bound
pop
dec
push
xor
jl
test
es
out
push
dec
fbstp
mov
jnp
push
push
in
imulb
aaa
aaa
ljmp
repz
clc
mov
dec
pop
nop
mov
pop
lret
add
lods
outsb
aas
lock
gs
mov
mov
mov
out
and
daa
outsb
mov
jecxz
cli
jnp
mov
bound
cli
inc
pusha
cmc
shrl
jmp
mov
daa
ja
mov
lods
and
lock
insl
out
lods
adc
outsb
test
adc
mov
aas
and
sbb
xor
mov
adc
fdivrp
xchg
inc
dec
adc
fdivrl
xchg
stos
dec
xor
cmova
jg
pop
lret
int
addr16
sbb
add
mov
or
orl
inc
mov
xchg
mov
cwtl
push
mov
sbb
divl
pushf
repz
xlat
orl
stc
or
or
push
sbb
scas
pop
jns
js
adc
add
mov
push
or
les
jmp
data16
cmpsb
push
dec
xchg
mov
jle
cli
jno
push
jb
js
pop
je
inc
xchg
sbb
adc
push
js
repz
jae
jns
or
inc
push
or
push
lock
push
scas
mov
rcl
xor
sub
push
faddp
mov
jns
pop
adc
sbb
jmp
and
or
mov
inc
inc
loop
inc
push
jns
jl
sub
mov
das
jnp
cli
lret
pop
imul
insb
dec
mov
xor
or
test
adcb
sbb
out
add
push
mov
fwait
mov
cmpsb
cwtl
xor
cwtl
mov
shlb
out
lret
fisttps
cmp
inc
out
add
movsb
scas
xor
lcall
insb
pushf
sahf
pop
push
xchg
jae
push
add
fdivr
mov
ds
imul
or
ret
movsb
xchg
push
movsb
and
loope
pop
or
mov
ret
sbb
outsb
ret
int3
xchg
jnp
ret
ret
andb
xor
adc
sub
dec
and
or
and
mov
inc
imul
and
incb
insb
sub
pop
add
inc
or
sub
lea
pop
jle
xor
fst
sub
xor
mov
mov
cmp
ret
stc
rcr
dec
cmc
out
das
add
dec
shlb
mov
pop
xor
outsb
icebp
lret
mov
push
push
pop
jo
xor
lret
cwtl
fidivl
ficoms
push
inc
xor
sub
xchg
test
mov
pop
and
xchg
push
popf
xor
pushf
test
add
scas
sahf
adc
inc
mov
dec
stc
sarb
leave
iret
aad
into
outsl
cmp
sahf
fimuls
sub
pop
adc
and
mov
repz
gs
stc
pusha
mov
pop
sub
xchg
sahf
fisttps
push
mov
std
jo
das
into
cltd
and
pop
out
sbb
mov
xchg
testl
adc
push
jae
mov
cmpsb
mov
jno
fists
pop
scas
out
mov
arpl
jg
xor
inc
mov
xchg
xor
or
fs
lea
fwait
aas
lret
adc
jbe
mov
in
mov
test
jle
cmp
ret
push
adc
or
sarl
dec
into
mov
mov
rcr
cmp
and
dec
fdivs
ljmp
or
sub
jne
je
pusha
or
sub
test
and
mov
testb
jo
fisubs
insb
call
mov
xlat
or
aad
leave
sub
push
jl
ror
jmp
push
imul
push
push
ds
int
loope
dec
adc
xchg
movsb
xchg
clc
adc
es
popa
icebp
bound
sbb
add
mov
jge
ljmp
and
jmp
lret
sbb
and
out
dec
push
mov
lret
loopne
add
incl
xlat
sbb
sub
popa
loope
push
fstps
je
inc
adc
loopne
leave
scas
adc
arpl
pushf
cli
sbb
mov
pushf
inc
movsb
insl
inc
aaa
lahf
jmp
jae
gs
push
sbb
jne
cmpsb
popf
mov
jbe
xchg
jno
xor
imul
sbb
or
js
pop
subb
lods
mov
mov
xchg
xchg
out
ret
cwtl
enter
sbbb
or
push
or
fdivs
jne
sbb
aaa
and
mov
and
pop
jno
push
int
fildl
andl
ds
roll
adc
out
mov
pop
out
in
xchg
pop
add
push
inc
shlb
and
gs
stos
xchg
jmp
aam
xor
decl
rep
add
test
inc
shll
xor
inc
movsl
into
jb
pop
xor
pusha
mov
fadds
push
add
mov
adc
std
mov
lret
sbb
and
mov
mov
dec
test
xor
dec
lods
mov
dec
in
mulb
mov
divb
repnz
sbb
lret
stc
lods
cmp
in
clc
test
mov
out
icebp
mov
not
roll
or
out
lds
arpl
adc
jecxz
cltd
nop
dec
stc
in
xchg
sub
aam
lods
add
addr16
jbe
push
fs
sub
pushf
shrl
test
data16
pusha
add
mov
cs
xorl
mov
cmpsl
cmp
pop
jno
aas
sti
aaa
and
leave
fnstsw
or
inc
std
xchg
js
mov
jg
enter
into
push
mov
inc
xchg
in
bound
sub
jns
adc
mov
rcrb
mov
pop
mov
inc
dec
cmpsb
push
dec
mov
inc
jno
xor
mov
ljmp
repz
xchg
lea
inc
pop
leave
jnp
or
and
and
sub
inc
jge
sarl
add
mov
mov
add
mov
xlat
jmp
add
out
scas
jnp
pusha
xor
push
push
icebp
or
push
jo
leave
dec
pop
cmp
add
stos
adc
lahf
lcall
add
adc
xchg
ss
gs
loope
cmp
bound
sub
pop
aad
gs
fwait
ds
xchg
bound
aas
cmp
test
insb
pop
push
pop
jo
dec
sub
int3
push
outsl
mov
push
repnz
fdivrs
xor
mov
test
leave
jg
dec
pop
ficoms
mov
pop
jns
enter
ret
cs
jno
push
lret
push
jno
lret
ja
adc
mov
jns
xchg
or
andb
aaa
pop
lea
test
cmp
stc
out
int3
into
and
pop
sbb
dec
in
add
cld
or
inc
pop
fldl
loope
lret
jmp
out
cwtl
xchg
ss
in
add
dec
mov
out
jp
push
jp
jne
scas
shlb
jae
ret
mov
add
ss
aas
mov
adc
mov
dec
pop
out
dec
xchg
pop
dec
xchg
out
xchg
push
jnp
push
shrl
add
mov
fsubrs
mov
and
cmp
cs
loope
not
in
out
lcall
outsl
or
adc
jae
inc
xchg
adc
or
icebp
pushf
pop
data16
dec
adc
and
jl
xlat
sbb
push
insl
ja
mov
int
add
test
mov
movsb
orb
adc
fimuls
mov
jl
push
sahf
cmc
xor
lock
ss
xor
sbb
adc
xlat
cmp
mov
pop
cmc
push
cmp
pop
lds
pop
ret
int3
xchg
xchg
inc
mov
xchg
fldl
nop
jge
sbbb
gs
or
jae
std
push
aas
test
xlat
jge
cmp
lods
push
fldt
dec
cmp
imul
push
or
sub
pop
adc
test
scas
shrb
sbb
sub
mov
stos
fisubrl
repz
movsl
jp
nopl
ficoms
rclb
int
lret
es
jno
out
fwait
jbe
in
push
ja
adc
test
cld
push
jae
dec
mov
scas
test
ret
xchg
jecxz
dec
xor
inc
jbe
xchg
enter
xchg
mov
xchg
and
rcll
cmp
mov
int3
pop
mov
mov
call
iret
das
lods
inc
jns
scas
adc
xor
xor
dec
pop
popf
gs
or
ret
stos
shlb
stos
sbb
and
jne
sbb
rolb
aas
jmp
fstps
sub
scas
roll
insb
push
sub
push
mov
xor
aaa
and
add
insb
pusha
roll
push
imul
nop
pop
xorb
cmp
push
sub
shrl
push
xor
xchg
hlt
cmp
mov
push
mov
mov
into
mov
pop
cmp
cmp
enter
repz
xchg
test
sbb
push
push
mov
and
sbb
dec
iret
mov
setb
mov
adc
xchg
fisttpl
push
lret
jo
cmp
sub
inc
or
icebp
stos
pop
adc
ss
inc
nop
dec
mov
mov
jns
fadds
roll
ror
cmp
xor
test
pop
dec
mov
rorl
jmp
and
lcall
mov
jbe
mov
roll
pushf
inc
xor
dec
push
shll
push
lds
xor
and
hlt
in
push
lds
les
jg
repnz
add
jns
nop
or
insb
xchg
out
mov
mov
out
stos
jmp
ss
movsl
dec
push
outsb
xchg
cs
cmp
mov
xor
jecxz
faddp
xchg
adc
add
loopne
stos
cltd
imul
dec
mov
out
pushf
cmp
xor
gs
aas
sti
adcl
push
aaa
inc
and
inc
mov
jge
fs
out
sub
sbb
enter
xchg
ja
xor
xchg
lea
xor
push
das
push
cmp
add
fildll
jne
sbb
lods
xchg
xchg
outsb
pop
sbb
dec
shll
add
test
fs
lret
lods
inc
sbb
add
mov
enter
push
push
es
fsts
es
push
mov
lods
pop
jno
mov
rcl
mov
les
push
inc
dec
add
jne
repnz
mov
adc
mov
jb
std
test
enter
jnp
in
je
push
dec
scas
icebp
call
inc
sbb
push
and
dec
not
pop
jb
or
jb
imul
jne
repnz
lods
jle
xchg
loope
hlt
and
aaa
jecxz
std
cmpsb
test
cmp
or
jl
roll
sahf
movsb
lea
ss
push
xchg
mov
aas
cmp
add
pop
adc
xorb
jnp
popa
repnz
scas
jmp
inc
fsubr
xor
pop
push
mov
mov
sbb
dec
fldt
es
mov
mov
inc
xchg
xchg
movsb
frstor
mov
jnp
shrl
dec
jbe
mov
xor
adc
nop
clc
rol
mov
adc
incb
or
cwtl
jnp
stos
into
sbb
dec
mov
lahf
mov
pop
jbe
test
sti
and
hlt
int3
jmp
and
jno
or
add
pop
sub
cmp
sbb
out
into
into
xchg
pop
imul
imul
rclb
hlt
inc
out
jbe
mov
add
std
inc
cwtl
out
cmp
sbb
jo
cmp
decl
movsl
mov
dec
adc
outsb
inc
pop
mov
adc
hlt
adc
pop
fadds
ret
adc
mov
pop
cmp
bound
leave
popf
inc
push
cmp
movsb
in
imul
pop
mov
add
loop
mov
and
insl
pop
mov
push
outsl
mov
in
inc
inc
test
and
mov
stc
mov
stos
jbe
pop
xor
leave
and
cld
and
xchg
adc
into
pop
adc
mov
xchg
add
in
jl
std
xchg
daa
inc
arpl
push
roll
lods
xchg
fnstenv
or
stos
pop
cmp
aad
push
lret
push
pop
sub
js
jge
cs
loopne
out
test
push
sub
mov
mov
in
push
das
inc
push
scas
pusha
adc
dec
mov
xchg
call
pop
xchg
or
inc
jg
mov
mov
cli
dec
rcrb
xchg
push
and
add
and
into
aad
cs
shl
push
fldt
jl
sub
pop
jmp
fldt
xchg
repnz
outsb
pop
test
test
sbb
shl
xlat
and
ds
push
jo
jl
repnz
in
ret
dec
and
in
and
push
push
clc
jge
out
sbb
mov
and
mov
out
ja
and
pop
inc
les
jg
imul
aas
sbb
aam
es
jo
pop
loope
add
sti
pusha
xor
xchg
leave
xchg
repz
cmc
fnstenv
pop
jle
cmp
mov
pop
xor
std
lret
xchg
pop
mov
ss
cmpsl
mov
pop
loop
in
adc
mov
sbb
sahf
fiadds
daa
mov
iret
loopne
test
mov
push
add
push
shlb
xchg
ror
rclb
in
lret
js
pop
pop
push
test
ds
mov
mov
jns
xchg
ret
inc
or
loopne
add
xchg
jo
cmp
cmp
jmp
xchg
scas
das
mov
lock
adcb
sbbb
aas
loope
pop
mov
inc
pop
je
in
push
adc
cmp
sub
shl
inc
outsl
scas
roll
ret
add
adc
inc
mov
cmp
sub
mov
lret
cmpsl
and
pop
frstor
xor
xor
mov
mov
test
jae
push
xchg
movsl
mov
popa
xchg
mov
add
out
or
pushf
call
mov
adc
test
or
test
inc
push
shlb
xor
inc
mov
push
test
pushf
js
lods
and
aaa
xor
xor
dec
xchg
mov
inc
lods
mov
iret
inc
add
sub
push
fimuls
cmp
cmc
out
jne
xchg
js
xchg
jl
sahf
adc
lcall
mov
lods
in
movsl
rcr
add
std
leave
adc
out
jns
lret
js
movsb
mov
in
popa
out
mov
mov
jo
arpl
fwait
sbb
out
pusha
and
fnsave
ret
xor
imul
xor
inc
lcall
stc
ret
pop
mov
pop
and
add
push
cwtl
cmp
push
in
push
aad
xor
adcb
movsb
stc
ficompl
xor
out
or
pop
out
fdivl
xor
push
xchg
repz
in
movsb
iret
addr16
out
push
sahf
push
jmp
mov
js
mov
repz
daa
adc
scas
pop
dec
jno
out
lea
cmpsb
jo
adc
jae
sub
lods
mov
inc
adc
jge
cmp
test
and
rclb
jb
xchg
mov
push
push
iret
and
jle
or
clc
cli
repnz
cmp
cmp
mov
daa
leave
in
mov
jmp
cld
push
inc
into
ss
test
pop
mov
adcb
leave
lcall
js
outsl
loop
sub
ds
push
mov
lods
cmp
mov
ljmp
dec
inc
fildl
sbb
andb
sub
mov
repz
push
mov
and
mov
test
pusha
int3
dec
cmc
cltd
mov
popa
mov
insb
jnp
bound
cli
movsl
movsl
adc
subl
sahf
sbb
cld
imul
loope
leave
mov
lcall
mov
mov
xor
mov
jmp
rdmsr
std
subb
cwtl
ds
dec
xor
jbe
add
push
xchg
mov
in
adcl
jg
pop
sbb
pop
repz
jbe
jne
out
test
xchg
mov
rclb
jns
jmp
cmp
push
push
pop
dec
xor
jno
in
jb
pop
push
sbb
out
dec
sub
ds
pop
pop
fnstenv
test
in
mov
enter
push
mov
pop
mov
sbb
repz
adc
jne
loop
inc
mov
call
repnz
mov
test
test
fdivs
fcomps
push
test
pop
ds
push
ss
jae
gs
test
push
lret
clc
rcrl
in
push
inc
sahf
push
in
mov
data16
and
repz
mov
pop
lret
fcoml
lret
and
jmp
scas
jbe
jae
inc
les
sbb
jecxz
xchg
or
aaa
push
xchg
imul
push
ret
sbb
loopne
fstpt
aas
aam
roll
push
jecxz
incb
mov
and
call
add
jmp
xor
addl
and
push
inc
into
scas
dec
ds
dec
arpl
dec
sub
dec
fcoml
movsl
aaa
jne
clc
xor
mov
imul
imul
pushf
push
shll
ss
imul
lret
out
cmp
inc
movsl
xchg
jae
cmpsl
sub
mov
aam
push
nop
xchg
jmp
inc
call
jp
sub
sub
or
movsb
pop
add
adc
and
dec
sbb
xchg
not
dec
xor
shll
push
jl
pop
push
inc
push
dec
popf
inc
mov
inc
xchg
pop
out
sub
mov
inc
and
aas
mov
lret
nop
data16
mov
fstpt
out
bound
and
jae
sbb
dec
movsl
mov
mov
scas
mov
gs
loop
es
mov
int
int
clc
pop
jo
adc
jle
dec
into
inc
mov
sub
adc
into
sbb
and
mov
loop
dec
mov
sahf
or
outsl
repz
and
pop
jge
js
stos
mov
rorl
or
out
inc
add
cmp
leave
mov
dec
push
xor
mov
outsb
pop
nop
ja
fnstcw
aam
cmpsl
out
mov
add
daa
icebp
xorb
clc
push
xor
mov
jbe
pushf
jmp
andl
loop
pop
add
pop
and
mov
and
mov
inc
dec
jmp
jp
bound
push
add
sbb
aaa
test
pop
xlat
mov
add
lret
repnz
add
pop
test
pop
imulb
pop
into
push
in
ficoml
negb
stos
sbb
out
sub
in
sbb
stc
inc
adc
subl
je
push
iret
add
aad
insb
lea
mov
xlat
adc
mov
mov
add
stos
enter
dec
xchg
pop
sub
fmull
dec
push
jle
sub
and
lds
lods
jno
pop
mov
pop
sub
push
jne
in
sahf
or
cmc
adc
aaa
adc
sbb
pop
lock
enter
fimuls
call
cld
std
adc
mov
pop
push
je
sub
lcall
test
jno
sbb
pop
lahf
cmp
nop
ret
mov
out
and
xchg
add
aam
in
cs
test
into
enter
sbb
stc
mov
lock
inc
xor
pop
js
xchg
push
aad
and
imul
or
shrb
xor
pop
xchg
sub
mov
jp
mov
inc
subb
js
icebp
in
jnp
mov
cli
adc
lds
outsl
cmpsb
fmull
imul
and
imul
ret
push
lret
adc
movsl
hlt
mov
mov
mov
push
inc
arpl
cmp
lret
inc
int
or
inc
xchg
in
mov
rorl
dec
scas
or
mov
jmp
add
mov
rcrl
sbb
jp
inc
icebp
pusha
jecxz
jmp
mov
mov
jnp
dec
push
push
cmpsb
into
arpl
addb
clc
lea
mov
xor
arpl
movsb
lcall
fisttpl
adcb
xor
dec
bound
lret
leave
inc
dec
or
and
fidivrs
adc
xchg
or
es
mov
push
arpl
and
inc
in
loop
dec
loopne
cwtl
inc
ror
in
ja
fs
popf
jge
mov
or
insl
fisttps
pop
cmp
popa
inc
xchg
mov
int
hlt
in
sbb
cmp
scas
out
adc
inc
pop
dec
fstl
mov
cmp
push
sbb
mov
push
fildl
pop
or
mov
push
inc
push
xchg
jg
fdivrs
fsubr
pop
mov
lahf
idivl
das
xchg
dec
leave
inc
fcos
xchg
movsb
imul
xchg
cmp
repz
cmpl
sbb
xor
push
jl
in
clc
push
jmp
mov
bswap
iret
push
roll
sbb
xor
sbb
sbb
or
add
inc
std
es
and
jnp
nop
outsb
nop
jg
nop
push
cmc
adc
cltd
mov
cmc
cwtl
and
sbb
les
pop
jmp
mov
into
lods
or
sbb
jns
pop
dec
lods
insl
std
jmp
dec
push
inc
stos
bt
pop
dec
inc
xor
mov
popf
scas
notl
cmp
call
mov
loopne
and
cs
cmp
pusha
ds
sbb
sahf
mov
cwtl
shll
add
sub
iret
or
and
sub
mov
popf
mov
or
and
or
jo
dec
mov
lret
jmp
jp
scas
mov
push
pop
xchg
jge
sub
jno
jno
and
push
add
std
jle
mov
add
lahf
cmp
xchg
lahf
add
sbb
push
roll
negb
cmp
das
inc
sub
fwait
jbe
repnz
pop
dec
out
push
mov
mov
sub
test
lds
dec
cltd
insb
iret
xor
aaa
or
or
mov
fcomps
adcl
pop
testl
in
stos
jmp
insb
mov
fistpll
divl
imul
adc
sahf
rorl
jbe
enter
fidivrl
ja
push
ds
sahf
and
loop
push
push
push
jp
and
xchg
mov
fs
std
mov
push
imul
or
and
das
cli
int3
fbld
lea
mov
sub
inc
popa
lods
dec
aam
cld
adc
inc
add
xchg
cltd
adc
cmp
je
in
mov
pop
xchg
jp
add
sbb
pop
push
cmpsb
je
shlb
sbb
jge
push
sub
fst
push
inc
addr16
dec
jmp
push
leave
cmc
das
lret
int
cmp
lret
popa
jns
outsb
jbe
lods
add
dec
pop
lds
leave
xor
or
punpckhbw
xchg
daa
out
fidivs
dec
ljmp
push
or
movsl
lock
cwtl
cmp
imul
push
jns
ret
out
pop
mov
inc
push
std
pop
pop
bound
dec
into
jnp
pop
pop
mov
sub
mov
cmpsl
repz
xchg
cmc
sbb
dec
lods
push
out
push
arpl
mov
dec
sbb
roll
cli
push
sbb
popa
stc
outsl
jb
xor
mov
xchg
sub
andb
test
adc
and
xorl
in
iret
inc
adcl
mov
cmpsb
or
pop
xor
push
dec
xchg
jne
icebp
pop
cmp
adc
popa
jmp
ss
cltd
lods
xchg
xchg
adc
adc
in
adc
xor
pop
sahf
mov
movsl
jl
sub
rcll
shlb
pushf
sub
sub
jg
out
push
mov
pop
mov
xchg
inc
jns
fsubl
ja
inc
je
and
cmc
cmc
daa
fcoml
sti
sub
sub
lret
dec
sbb
ljmp
lock
das
stc
popf
gs
jp
and
and
imul
push
jp
or
out
fwait
jl
lcall
xchg
mov
adc
pop
mov
push
ss
mov
aaa
jb
inc
dec
in
pop
or
cmpsb
insl
fdivp
dec
mov
xor
sub
jbe
pop
push
lret
adc
dec
fadds
dec
icebp
and
xchg
mov
adc
in
repz
xchg
xchg
adc
xor
fstpl
push
add
jbe
incl
jg
std
pop
xchg
sub
dec
push
aad
xchg
int
popf
hlt
xchg
test
or
jg
ret
mov
shlb
out
aaa
imul
into
cmp
jmp
adc
in
inc
inc
push
add
iret
lods
sub
mov
push
push
push
iret
ja
ret
scas
fstl
pop
rcrb
mov
sbb
cmp
push
inc
and
jns
cli
pop
outsl
jb
and
jl
inc
mov
jl
and
xor
mov
add
enter
aaa
cmpsb
popf
stc
in
sbb
sub
inc
push
cmp
shlb
jmp
xchg
jb
mov
push
add
sub
push
xchg
sarl
icebp
div
test
adc
add
stos
pop
push
mov
push
mov
xchg
sahf
cli
add
mov
sarl
clc
mov
lret
popf
xchg
fbstp
push
aaa
lods
ljmp
and
and
sahf
and
mov
nop
lock
pushw
ljmp
dec
xchg
shr
lahf
add
jae
sahf
xchg
enter
mov
rcr
int3
inc
icebp
adc
shl
imul
inc
sbb
clc
xlat
mov
mov
xchg
sub
rolb
mov
in
xor
and
into
cli
cmp
in
cmp
negl
sbb
subl
mov
xor
rcl
dec
mov
xor
int
lahf
out
shll
cmp
push
fcmovne
fadds
jbe
pop
loopne
mov
cmpb
ror
push
jnp
cmpsb
in
sub
shl
sahf
rclb
or
xchg
call
mov
fs
jbe
loope
mov
jle
negl
push
fistps
xlat
and
shrl
pushf
jl
loope
mov
pop
cmp
ss
shll
cmp
stc
bound
xlat
push
pop
and
fdivrs
cli
or
add
xchg
jg
xchg
jge
jnp
xor
jbe
mov
sbb
adc
loopne
dec
xchg
ret
aaa
mov
jge
adc
fld
rcl
lret
mov
nop
adc
xor
dec
aad
aas
push
in
xor
dec
icebp
pop
mov
icebp
lock
test
inc
push
mov
cmp
jne
and
mov
add
mov
add
call
push
dec
pop
push
idiv
sbb
clc
xchg
pushf
pop
cmp
pop
push
je
jg
mov
mov
enter
stos
leave
dec
shlb
lods
mov
mov
testl
adc
out
bound
ss
jmp
in
push
cmpsl
xchg
pushf
push
dec
and
mov
mov
jns
cmp
jp
adc
sbb
pop
daa
sbb
data16
xlat
arpl
add
and
inc
inc
cld
xchg
pop
stos
pop
dec
and
gs
rcrb
pop
enter
adc
lret
inc
lds
push
mov
mov
push
jb
les
push
sti
sbb
call
testb
stc
xor
and
mov
sbb
pusha
mov
insb
frstor
lret
fstpl
xor
cmp
rcrb
xchg
xchg
insl
rcrb
jmp
dec
or
sub
outsl
or
cltd
inc
stos
enter
xchg
cmp
push
push
xor
push
arpl
xchg
sbbb
cltd
mov
mov
pop
or
mov
mov
loope
cmp
sub
mov
out
pop
xchg
or
stos
lret
movsb
dec
jbe
ds
nop
xor
jbe
std
insb
push
sar
mov
cs
add
adc
fdivl
icebp
and
in
cmp
lretw
and
stc
movsl
gs
imul
lds
jne
imul
ja
roll
push
pop
aaa
call
xchg
jl
xlat
mov
push
sub
insb
mov
add
sbb
inc
pop
hlt
jp
xchg
xchg
cld
xor
push
add
sbb
aam
das
sub
mov
ss
pop
jg
jbe
xchg
imul
mov
lods
inc
cmp
sbb
ja
into
leave
imul
in
mov
fmuls
mov
and
lock
add
daa
lcall
and
jno
xchg
cmp
adc
into
jge
popf
ffreep
icebp
dec
ja
adc
jmp
xchg
xchg
ret
hlt
push
cs
aas
jl
dec
mov
cmp
das
iret
cli
neg
xor
enter
mov
js
sbb
movsl
lods
add
jae
js
xor
and
xor
idiv
mov
jae
fsubs
mov
shr
add
mov
mov
js
xchg
cmpsb
mov
ljmp
rcl
mov
shll
pop
dec
xor
test
cmp
sub
cmpsb
pushf
dec
mov
pop
es
inc
adc
sbb
mov
mov
loopne
sub
mov
dec
incl
sti
gs
adc
insl
rorb
aaa
cmp
mov
cwtl
in
jle
and
out
outsl
push
jge
xchg
out
shll
mov
aad
jg
push
in
rcrl
xor
das
and
daa
je
les
cmp
fnstenv
cld
sub
fisttps
jb
outsl
jge
fisubl
inc
testl
pop
lods
mov
leave
push
inc
pop
pushf
ret
push
xlat
enter
cmp
lea
std
flds
addb
xor
arpl
inc
inc
fisubs
mov
xchg
xor
in
cmpsb
cmp
and
outsb
lret
pop
lret
popf
stos
inc
sbb
xor
test
jo
pushf
jne
push
jle
sbb
sbb
in
in
jmp
aam
sbb
cmp
push
outsb
mov
inc
mov
add
jl
inc
fimull
in
gs
add
popa
push
movsl
orl
or
leave
fmuls
dec
stos
push
or
pop
inc
mov
imul
sub
jne
aas
lods
mov
out
test
ljmp
stos
mov
movsb
out
push
mov
out
fs
lcall
mov
and
fimull
stc
call
adc
inc
mov
adc
sbb
adc
sub
dec
mov
pop
inc
jmp
cmp
inc
shl
fmul
mov
add
sahf
das
in
cltd
mov
xchg
out
mov
int
dec
lret
xor
inc
outsb
cmp
mov
movsl
pop
repz
aaa
push
inc
cmp
xchg
and
add
cmpl
cwtl
movsl
mov
add
add
xor
dec
jmp
jns
pop
daa
repz
int
pop
mov
hlt
mov
pop
test
aaa
inc
aas
out
pop
lahf
mov
jb
or
popf
mov
mov
dec
pop
mov
bound
mov
sub
fpatan
pop
add
mov
out
cmc
mov
adc
test
inc
mov
sbb
test
and
aas
pop
sbb
es
pop
xchg
nop
mov
test
xchg
imul
aam
mulb
cmp
jae
scas
or
insl
iret
mov
imul
popl
push
add
mov
insl
dec
out
and
mov
mov
mov
hlt
outsl
loopne
mov
sub
jnp
in
mov
push
inc
test
pop
iret
repz
jo
sub
and
shll
mov
std
jg
pop
xor
inc
loopne
fs
das
sub
add
ljmp
test
jns
or
test
into
inc
test
pop
fwait
rcr
mov
jo
or
nop
jge
stos
mov
xchg
aaa
scas
cs
das
xchg
mov
mov
test
xor
sbb
mov
sbb
mov
call
cs
mov
arpl
jno
stos
std
fistl
adc
cld
aad
mov
movb
pop
adc
daa
imul
mov
push
mov
mov
xchg
outsb
cld
xchg
aam
flds
ljmp
into
pop
iret
adc
pop
shl
pop
out
cmovp
fcmovne
loop
and
setns
movsl
mov
out
insl
aam
imul
leave
lret
inc
cltd
xlat
dec
sbb
adcb
shrl
mov
pushf
mov
pop
xor
pop
int
js
js
pop
push
xor
adc
mov
or
mov
scas
rol
sbb
mov
adc
push
add
xchg
insl
xor
jg
and
rolb
add
dec
cs
daa
divl
std
sti
inc
jle
insl
adc
xor
and
push
xor
cmc
dec
sub
negb
sub
pusha
int3
jg
mov
mov
or
fistl
cmc
push
cmpsb
insl
pop
push
ss
sarb
insb
add
aad
testb
jbe
test
push
cs
xor
push
cli
test
xor
xchg
into
sub
or
and
out
cld
push
scas
mov
add
fmuls
add
pop
mov
das
in
inc
test
enter
inc
inc
mov
sarb
cli
aas
push
adc
out
push
insl
adc
repnz
repnz
xchg
aaa
cltd
outsl
push
xor
fldenv
mov
push
add
repz
stos
or
nop
dec
outsl
mov
pop
sub
jb
es
dec
pop
mov
les
push
pop
add
ret
push
jo
jno
sub
inc
scas
out
popa
pop
gs
cld
lds
pop
and
pop
test
push
cmp
cmp
xor
inc
test
int3
sbb
rol
lea
add
mov
repnz
dec
cmpl
dec
sbb
push
int
mov
imul
mov
andb
je
arpl
push
add
data16
adc
mov
cs
mov
loop
sbb
jno
aam
shll
mov
add
and
pop
add
sub
insb
xchg
daa
stc
xor
mov
xor
xor
sbb
stos
adc
push
jb
sub
stos
stc
dec
jnp
movsl
push
xlat
imul
lcall
test
mov
jge
incl
pop
mov
mov
inc
les
movsl
insl
push
fadd
lret
adc
mov
aas
or
and
dec
inc
push
std
pop
fidivrl
mov
fisubl
int3
int
push
incb
jg
pop
movsl
mov
stc
iret
popf
imul
or
lret
mov
jbe
repnz
jge
test
dec
test
mov
xchg
imul
xor
push
push
addr16
mov
out
inc
int
out
lock
scas
mov
adc
add
push
popw
pop
jg
dec
dec
pop
dec
cmp
mov
ja
loope
out
jmp
xchg
fwait
add
push
cmpsb
addb
xchg
arpl
cmp
sbb
faddl
push
insb
mov
leave
mov
push
sbb
ds
scas
sub
out
sbb
push
jecxz
jmp
mov
rcrb
negb
pop
in
repnz
in
mov
cmp
ss
ss
dec
imul
dec
or
sbb
xchg
inc
roll
aas
pop
daa
and
pusha
jbe
std
mov
andl
mov
inc
pop
ds
or
jbe
fstpt
sbb
mov
int
inc
adc
scas
addr16
jno
stos
in
ds
shlb
std
sti
sub
pusha
jne
repz
cmc
sbb
inc
jb
jbe
and
jne
or
inc
mov
rcrb
je
xchg
addl
lods
cmp
cmp
push
ret
add
aad
sarb
xchg
push
or
mov
lcall
outsl
mov
mov
cs
add
jns
out
xorl
pop
cmp
mov
into
push
cltd
rcrl
inc
outsb
inc
dec
sbb
inc
inc
xchg
cli
je
lahf
stos
lahf
mov
mov
xchg
aad
add
out
jb
pusha
insb
lods
pushf
les
mov
push
dec
or
cs
pop
mov
pop
es
xchg
xchg
stc
pop
or
jle
mov
aaa
jo
xchg
push
js
inc
sbb
inc
aas
mov
xchg
mov
std
mov
mov
aas
les
stos
rolb
dec
pushf
xor
addl
call
les
nop
ficoml
push
daa
pop
add
dec
mov
sbb
inc
mov
aas
test
xchg
ret
push
jle
test
jae
sub
inc
dec
leave
mov
cmpsb
jmp
xor
xor
fwait
adcl
and
add
mov
cmp
xchg
je
xchg
lea
add
add
arpl
int
mov
or
or
push
and
sbb
adc
test
aas
ljmp
adcl
sub
xchg
and
or
testb
adcb
clc
xor
aas
lds
xchg
inc
cmp
push
mov
nop
jno
imul
scas
sub
mov
std
push
aad
mov
outsl
leave
sbb
or
dec
xchg
mov
incb
cmp
inc
add
clc
pop
push
int3
sub
shlb
push
les
outsl
gs
test
daa
jge
mov
fdivrl
sbb
gs
inc
jg
mov
movb
push
sbb
mov
and
jbe
and
mov
lcall
mov
cmp
fsubs
xchg
loop
mov
in
mov
sub
ds
dec
mov
mov
pop
jb
inc
pop
xchg
fidivl
in
jecxz
push
mov
cltd
xor
dec
nop
ud1
and
dec
pop
lahf
icebp
mov
sub
push
nop
mov
nop
xchg
xchg
insb
pop
xor
and
cld
mov
andl
jle
dec
hlt
pop
call
cld
jo
or
and
repnz
stc
mov
mov
or
sbb
adc
mov
adc
test
mov
adc
mov
sub
xchg
loop
shll
fcmovnu
jge
addr16
and
jae
sub
rol
jle
or
xchg
inc
add
out
dec
push
rcl
cld
movsl
or
pop
pextrw
dec
hlt
xor
mov
leave
or
mov
jo
push
jmp
pop
sbb
ror
push
adc
fs
add
lret
pop
inc
xor
mov
stos
outsb
stos
jo
in
push
rcrl
xor
fisttpl
xchg
mov
pushf
arpl
jns
push
fidivs
sbb
jb
cmc
sub
dec
and
mov
dec
fidivs
pop
icebp
mov
ljmp
push
xchg
sub
xor
pop
stos
add
inc
lret
jo
jns
out
or
stos
or
enter
repz
jns
dec
xor
cld
xor
stos
xor
loope
mov
fcoml
pop
lret
jns
xchg
ss
mov
lret
adc
jb
and
fs
add
mov
cmp
xchg
xchg
mov
adc
lds
or
dec
sahf
icebp
adc
add
ds
leave
sbb
push
adc
cmp
lahf
and
or
pushf
outsl
and
dec
jns
sti
movsb
pop
jle
pop
cld
mov
test
or
sbb
arpl
call
jle
xchg
out
pop
loop
or
lahf
movsl
popf
adc
and
pop
mov
sub
dec
mov
mov
push
xchg
sub
cmp
push
and
daa
fcmovu
and
xor
idivl
or
shlb
pop
ljmp
or
sub
and
mov
push
xor
sahf
and
mull
or
mov
jns
jbe
jl
xchg
cmpsl
add
mov
inc
sbb
int
pop
push
inc
mov
xchg
adc
popa
jecxz
xor
mov
loope
mov
inc
inc
cmc
mov
push
fldl
sub
jmp
nop
jge
daa
add
popf
ss
fisubrl
pop
cli
jl
add
ret
pop
pop
pop
ja
dec
popa
mov
mov
push
jg
xor
or
scas
test
int
push
push
xchg
aad
and
loop
or
jecxz
enter
ret
lea
and
jl
jle
aam
call
xchg
mov
sub
dec
jp
stos
push
loopne
xchg
xchg
loope
fisubl
pop
repnz
jns
arpl
mov
std
sbb
mov
popa
int
ret
aam
int3
push
cmp
or
lcall
mov
fxtract
in
mov
rcrl
int
dec
icebp
aaa
pop
adc
pop
mov
out
and
xor
lahf
and
lods
je
xlat
sahf
jge
push
jne
fcomps
jnp
mov
xlat
xlat
jmp
add
mov
pop
push
sbb
xor
pushf
insb
jns
dec
cmp
inc
andb
imul
jae
push
scas
icebp
pop
je
in
inc
or
cmp
stc
lcall
fimuls
sysret
mov
int3
pop
or
subl
and
fmull
daa
outsb
dec
mov
push
jo
xor
into
lret
xor
mov
int3
out
push
dec
adc
decb
push
xor
iret
das
hlt
sbbb
inc
cld
scas
adc
leave
ret
test
pop
pop
mov
cmp
out
outsb
mov
sbb
cmp
pop
pop
xor
ret
stos
in
jp
dec
adc
adc
lds
addb
mov
adc
lret
in
jne
ljmp
cmpsl
pop
ds
sub
xchg
sbb
fcmove
adc
cmpsb
inc
adc
popa
or
movsb
inc
pop
in
xchg
mov
clc
xchg
inc
int3
push
mov
or
pusha
sbb
jle
sti
sahf
dec
arpl
test
mov
inc
sub
sub
mov
mov
push
sub
cltd
jl
or
adc
fistpll
inc
dec
mov
data16
aaa
or
lret
pushl
cld
sahf
inc
sub
dec
shll
scas
addr16
or
adc
push
call
and
xor
loopne
push
mov
stos
push
xor
loopne
xchg
loop
test
adc
mov
jp
movsb
adc
cmp
ss
and
pop
test
daa
pop
ss
stos
outsl
sti
dec
repnz
stos
call
add
fdivrl
lock
adc
lcall
mov
psrlq
cli
mov
hlt
leave
in
clc
mov
mov
data16
repz
fdivrs
inc
pop
adc
xchg
cmpsb
jmp
pop
idivl
scas
xchg
daa
insb
mov
add
and
jle
inc
add
sbb
mov
cmpsl
inc
ficoml
in
mov
push
adc
jle
dec
loope
ret
hlt
cmp
mov
push
and
cmc
pop
fistps
jle
mov
mov
fs
and
jmp
push
cmp
inc
ss
pop
push
bound
sahf
hlt
or
sbb
sub
nop
jb
test
jb
divb
inc
sarb
jo
push
mov
lock
and
in
push
in
dec
cmpl
xchg
cs
jp
in
xchg
orl
loop
insb
mov
clc
fst
int
outsl
loop
xchg
push
mov
dec
dec
pop
mov
sbb
mov
add
push
test
movsl
push
mov
ja
enter
cmp
mov
jae
testl
aaa
movsb
xchg
add
inc
dec
enter
lcall
add
pop
add
into
lret
lahf
les
cwtl
xchg
dec
xchg
bound
dec
fs
mov
sahf
outsl
je
aam
mov
les
and
mov
outsl
int3
lods
ds
mov
jb
lock
mov
inc
arpl
or
dec
out
lods
mov
push
lcall
imul
inc
int3
and
nop
sahf
stos
out
mov
fcmovnbe
stos
sub
popa
movsl
mov
aaa
in
xchg
pop
dec
js
arpl
cmp
push
je
into
dec
sbb
rorb
mov
mov
or
pushf
lcall
mov
lods
mov
sbbl
testl
mov
inc
arpl
cmp
insb
sub
insl
mov
xchg
inc
rcll
daa
ss
xchg
cmp
shlb
jle
loope
xchg
mov
xor
cli
push
mov
loope
cmp
loop
in
add
int3
addr16
push
stos
or
or
jle
loopne
dec
lcall
mov
outsb
mov
call
push
xchg
addr16
arpl
inc
icebp
mov
mov
ds
mov
dec
push
adc
in
movsl
xor
imul
dec
ret
enter
iret
inc
adc
adc
sub
cmp
outsl
adc
outsb
push
sub
lock
cmpb
and
jns
les
adc
inc
pop
and
sub
std
pushf
mov
xchg
testl
add
je
hlt
ficoms
mov
jmp
scas
xchg
sub
pop
stos
test
leave
notl
jge
lret
inc
es
sbb
inc
push
es
mov
xchg
mov
jge
xor
and
mov
bnd
xor
mov
rcrl
mov
dec
jne
xor
mov
daa
je
cs
pop
leave
sbb
dec
cs
leave
cltd
cld
fcoms
fwait
movsb
pop
les
imul
std
fdivs
mov
cmc
pop
loopne
popf
push
paddusb
or
notl
adc
dec
or
ret
sub
jo
nopl
pop
or
cld
xchg
inc
cmp
inc
sbb
dec
xor
mov
dec
dec
add
pop
jge
fisubrs
sbb
dec
jb
dec
movsl
jmp
inc
test
in
and
sub
shll
paddw
ss
sbb
mov
cs
inc
mov
mov
and
xchg
and
jge
or
xchg
push
adcl
pop
inc
arpl
and
sbb
xchg
cld
cmp
mov
mov
inc
cmp
push
roll
data16
adcb
iret
mov
out
dec
data16
cs
inc
xlat
adc
mov
nop
gs
or
insl
jp
push
cmp
xchg
inc
ss
scas
loopne
out
cmpsl
mov
js,pt
xchg
mov
aaa
loopne
ror
cmp
mov
sub
es
mov
aam
inc
jnp
lods
xchg
lret
push
mov
sbb
and
shll
mov
add
cmp
pop
adc
lret
ljmp
mov
lock
leave
add
push
cmp
lods
push
enter
jp
push
push
imul
inc
mov
inc
mov
in
out
icebp
jp
sbb
iret
adc
cmpsb
stos
jg
mov
movsb
sbb
stos
stos
popa
int3
push
adcb
jo
mov
dec
call
mov
imul
push
inc
icebp
shll
rclb
adc
push
mov
cmp
xor
xor
jb
in
fcom
jecxz
aaa
mov
or
or
test
insb
cmp
lds
mov
sub
iret
shll
sbb
test
mov
dec
sub
js
nop
outsl
retw
lcall
popa
lods
mul
cmpl
adc
mov
pop
push
andb
int
sbb
cli
push
fwait
dec
jae
inc
cmpsb
aam
mov
xchg
aaa
mov
sbb
mov
xor
iret
sbb
ja
push
stos
leave
jp
ljmp
ja
cmp
dec
cmp
or
mov
mov
add
fucomi
pop
push
sub
daa
sub
stc
adc
xchg
xor
sub
into
pop
cmp
xor
xorl
gs
adc
xchg
jmp
adc
jecxz
scas
jle
jns
addr16
repnz
addl
das
sub
pop
cmp
mov
jno
cltd
outsb
or
mov
jae
arpl
in
or
lahf
inc
cmp
inc
mov
dec
fwait
repz
pop
mov
sbb
pushw
dec
mov
fldl2t
inc
jg
es
int
cld
stc
mov
add
and
mov
push
movsb
pop
cltd
addl
outsb
mov
cltd
mov
addb
xchg
lods
sbb
lret
lock
adc
push
hlt
jne
xor
inc
sti
test
inc
stos
nop
fstpl
popl
inc
dec
sub
negl
sbb
fmuls
cmp
popa
out
sahf
add
cltd
outsl
outsb
in
cwtl
adc
mov
rcll
inc
fs
or
and
adc
scas
notl
xor
xchg
sub
scas
jle
or
or
pop
bound
sbb
jnp
mov
mov
and
data16
sub
stos
adc
push
mov
loopne
pop
jecxz
gs
add
cld
pusha
scas
mov
aam
inc
pop
ljmp
push
and
ds
cmpsb
adc
pop
add
in
pop
popa
jbe
mov
xchg
jne
movsb
xchg
pop
xchg
and
push
idivb
add
adc
js
adc
popa
decb
jmp
rol
scas
andb
lret
fwait
xchg
lahf
push
xorb
popa
rcr
mov
cwtl
xlat
test
rolb
sub
jg
mov
sarb
out
dec
add
lret
rol
pushf
mov
or
mov
scas
mov
pushl
sbb
pop
iret
cmp
inc
push
test
inc
add
cld
add
add
xor
pop
ret
sbb
out
mov
cmp
dec
xchg
les
call
loop
pop
xor
push
mov
mov
jmp
jle
lahf
or
xchg
movsl
lods
ficomps
outsl
les
mov
aad
sub
in
xlat
test
movsb
jnp
incl
sbb
repnz
repz
int
sbb
xchg
dec
push
jl
int3
sub
mov
dec
cli
cmc
or
sub
and
sbb
push
or
mov
or
sub
lods
sbb
and
cltd
aam
dec
adcb
push
scas
xor
out
stc
cwtl
not
lock
pusha
inc
mov
sbbl
andb
nop
mov
cmpb
int3
mov
cmp
nop
iret
mov
mov
xchg
jp
out
sbb
faddl
in
jmp
sahf
sahf
sarb
ret
jge
fidivs
mov
cmp
in
jns
loope
daa
cmp
push
inc
int
pop
push
sbb
pusha
jp
testb
inc
xchg
iret
mov
cmp
dec
loop
pop
lods
mov
xor
xchg
es
mov
sti
and
mov
xchg
lcall
fdivrp
dec
out
outsb
and
insb
jo
cltd
scas
or
scas
enter
jb
mov
dec
fiaddl
aas
clc
in
movb
lea
pop
fs
les
sbb
test
add
fcmovnb
aaa
mov
mov
scas
aaa
push
shll
stos
lods
out
fistl
cmc
ljmp
dec
outsb
sbb
loop
pop
dec
sub
push
dec
jmp
in
jbe
mov
ficomps
jbe
add
xor
imul
push
gs
sub
pop
and
cmp
sub
popa
add
cmp
fs
and
xor
mov
call
out
fs
aad
pop
pusha
dec
sbb
pop
mov
lods
pusha
call
mov
xor
inc
mov
jns
xchg
in
mov
std
jge
xchg
and
cld
aam
pop
mov
or
jnp
xchg
outsb
pop
xchg
sbb
push
clc
addl
mov
xor
pusha
rcll
sbb
cltd
xor
dec
add
push
add
stos
pushf
pushf
add
stos
push
into
bound
push
adc
adc
shlb
cmpsl
xchg
lahf
loop
clc
sbb
pop
jns
sub
push
xchg
sub
or
out
outsb
mov
xchg
mov
cmc
adc
push
rorb
push
andl
cmpsb
lea
pop
negb
xor
mov
xor
pop
and
jecxz
ret
pop
repz
movsl
inc
or
stos
ja
jnp
jne
loopne
int
adc
stos
js
test
sbb
and
cmp
ljmp
jns
sub
add
cli
aaa
test
mov
cmp
push
lods
shlb
sbb
imul
enter
jb
addr16
out
sbb
outsl
xor
insl
mov
mov
pop
sti
mov
jecxz
insb
lahf
notb
mov
jg
mov
jecxz
mov
or
lds
faddl
xor
cwtl
inc
cltd
mov
imull
sub
aas
xchg
orl
testl
push
mov
arpl
test
jno
int
decl
jne
push
arpl
js
jbe
movsl
sub
or
and
insb
mov
decl
add
jge
mov
psrad
xchg
ret
xchg
pop
gs
xor
jmp
and
and
ss
mov
dec
stc
cmp
pushf
pop
call
dec
sarb
cmp
fwait
mov
and
xchg
mov
xor
cmc
dec
or
mov
sub
cmp
imul
pusha
arpl
xor
inc
test
push
pusha
cs
jmp
cltd
sbb
lret
ja
xor
jo
lods
inc
jl
jl
mul
push
bound
loop
and
test
sub
push
mov
cmp
cli
add
aad
xor
dec
inc
xchg
iret
or
cmp
fldl
xchg
sub
lret
mov
xchg
out
icebp
sbb
jbe
mov
and
psubusb
push
jnp
adc
lods
pop
faddp
jo
mov
out
mov
loope
inc
pop
je
sub
push
stc
adcl
es
and
fisttpll
jecxz
das
dec
push
je
aaa
jmp
mov
mov
pop
lret
scas
xchg
mov
mov
push
mov
mov
mov
test
push
imul
ror
xorl
mov
sbb
sbb
inc
adc
mov
cs
sbb
inc
mov
jmp
iret
iret
sbb
cmpsb
sbb
shl
mov
aad
or
jecxz
add
inc
fdivl
rcll
int
push
ja
shrb
or
add
pop
sub
enter
and
sbb
mov
pop
stc
xchg
cli
out
ja
xor
fnstenv
jo
xor
cs
lock
cwtl
aas
sahf
or
add
pop
and
inc
push
pop
adc
or
adc
xchg
fbld
sbb
popa
xor
mov
jnp
data16
cmp
xchg
rolb
mov
add
bound
test
das
icebp
pop
and
sub
sbb
js
push
ds
sahf
mov
lret
inc
mov
int3
mov
decl
or
lea
xchg
xchg
adc
iret
pop
jno
rcll
sbb
rcrl
mov
rcr
mov
dec
mov
inc
mov
mov
cmpsl
xchg
add
out
divb
or
mov
xlat
fdivrs
das
and
cmp
fimull
adc
jl
lods
sbb
add
push
push
and
mov
xor
or
rorb
jne
notl
movsl
out
nop
pop
cld
jns
ljmp
aaa
push
rolb
imul
mov
pop
pop
or
fstpl
cmp
jmp
orl
jp
mov
jmp
jge
sahf
jg
cmp
call
jp
push
push
es
popf
fisttps
push
arpl
push
jle
cli
in
mov
in
fsts
inc
inc
xor
xchg
xlat
push
out
inc
les
xor
sub
rcrl
dec
lods
fildll
pusha
or
scas
lahf
xor
arpl
ret
sbb
sbb
dec
push
push
incb
jge
pop
jmp
dec
mov
jg
jo
jp
icebp
divl
ret
fwait
cmpsl
pop
inc
ret
jecxz
add
ljmp
push
loopne
pushl
xchg
lret
xchg
push
and
pop
mov
arpl
mov
repnz
or
mov
cs
mov
mov
adc
jae
push
mov
and
int3
sub
xchg
jno
xchg
scas
js
xchg
dec
add
aaa
jl
jns
mov
or
mov
sub
ret
sbb
cld
fimull
int
lahf
cmp
rclb
sar
orl
subl
int
stos
gs
notb
dec
pop
out
jo
mov
les
push
test
sbb
jb
and
dec
xchg
andl
sub
loope
cwtl
stc
jo
cld
fcmovne
lods
inc
pop
jno
add
adc
inc
and
lds
mov
sub
stc
test
and
mov
aaa
popf
lcall
push
add
pop
adc
sbb
iret
inc
cwtl
mov
pop
jbe
bnd
sbb
xchg
sub
lahf
or
dec
push
mov
repnz
clc
sbbl
imul
push
loop
es
adc
and
xchg
shr
test
sahf
push
jle
jbe
dec
push
push
xor
xor
xlat
imul
das
sub
sub
mov
jp
fnstsw
add
cmp
jmp
test
cwtl
sbb
pushf
jmp
lods
cld
scas
or
push
xchg
jmp
in
mov
test
and
xor
pusha
test
sahf
ss
arpl
pop
js
js
out
mov
push
stos
mov
jae
outsb
in
and
mov
xor
adc
fwait
mov
mov
cld
cwtl
xlat
imul
or
test
in
cmp
scas
popa
popa
dec
mov
je
jecxz
daa
or
andb
mov
dec
mov
int3
inc
mov
pop
xorl
xchg
push
mov
cmpsl
mov
add
out
shlb
mov
or
test
fcoml
mov
add
adc
jb
jle
wrmsr
mov
adc
mov
and
sbb
fwait
out
push
fnstsw
shlb
and
cli
mov
xor
jb
and
cmp
and
xchg
mov
iret
icebp
hlt
jbe
cmp
mov
mov
push
jle
lahf
mov
and
and
rcrl
scas
mov
fstpl
pop
jl
sub
and
into
out
and
fldl
dec
inc
xchg
jecxz
adc
adc
cmp
movsl
arpl
bound
add
loopne
mov
dec
ljmp
mov
mov
add
subb
ret
js
and
dec
popa
push
cmpsb
xor
imul
jle
add
ja
jb
lret
js
fimull
movsl
xor
pop
int3
xor
out
lahf
jle
loope
inc
jnp
loope
ja
pop
jg
mov
inc
mov
repnz
pop
out
xor
popa
stos
pop
push
popf
scas
bound
mov
pop
sub
mov
int
xchg
repz
cwtl
push
mov
and
int
pop
mov
nop
push
inc
mov
std
add
and
push
mov
and
hlt
aas
add
pop
add
sbbl
out
sbb
lcall
and
inc
add
mov
mov
scas
mov
adc
js
icebp
inc
push
mov
adc
loope
stos
pop
mov
negl
ret
loope
mov
xchg
and
pop
xchg
push
into
cmpsl
mov
push
fcoms
adc
loop
add
pop
shl
dec
and
xor
hlt
mov
jmp
shlb
jecxz
mov
push
lods
sbb
je
adc
outsl
lret
adc
sahf
aaa
dec
out
mov
xchg
mov
bound
rclb
xchg
adc
mov
ret
cwtl
imul
push
fisttpl
mov
adc
les
dec
jne
sbb
filds
sar
gs
js
jl
gs
lds
xchg
arpl
inc
pushf
fsubr
and
mov
fucomp
cmp
pop
lods
adc
dec
lea
sub
adc
sub
push
mov
push
xchg
sbbb
arpl
or
pop
push
xchg
jo
loope
xchg
pop
mov
imul
fistpl
or
dec
cmp
adc
call
cmc
mov
xchg
mov
jb
mov
sbb
jl
mov
icebp
pop
add
stos
mov
xlat
and
fadds
xchg
int
mov
fwait
dec
ds
xchg
ja
loope
ret
dec
cmpsl
adc
aam
pop
or
pusha
mov
insb
inc
out
sbbl
jo
stos
cmc
fnsave
test
pop
and
adc
shrb
mov
in
cmc
jbe
push
dec
int
sub
xor
das
pushf
push
mov
sub
cmpb
les
nop
mov
bound
push
dec
mov
adc
neg
mov
cmpsb
inc
jns
push
hlt
test
xorl
adc
imul
popa
or
les
repz
add
mov
fcomip
rcl
cli
adc
fsubs
lcall
xor
xchg
dec
jbe
xchg
dec
or
adc
pop
ret
enter
pop
cmpsb
xchg
sbb
popa
jp
lret
cmp
pop
fs
pop
pop
loope
sbb
mov
dec
cmp
mov
xor
sar
add
ret
sub
add
jno
xchg
inc
cmp
add
xchg
cmp
ljmp
pop
xchg
adc
jne
clc
pusha
js
repnz
mov
cmpsl
push
mov
cmp
adc
call
arpl
add
into
gs
call
sub
mov
enter
sub
pop
dec
fistpl
mov
jno
rcrl
outsb
or
btr
iret
and
popa
lds
mov
adc
arpl
and
mov
aad
pop
jae
hlt
dec
stos
push
rcrb
stc
pop
jp
incb
jmp
lea
pop
fists
mov
mov
popl
pop
jns
push
inc
pop
mov
adc
pop
jbe
mov
or
repnz
in
inc
test
cwtl
push
pop
mov
in
inc
or
xchg
lret
sub
mov
test
scas
add
and
xchg
xor
add
es
lret
xchg
loop
outsb
gs
arpl
xchg
xchg
cwtl
lods
out
xor
and
in
mov
push
inc
fwait
inc
xchg
std
ja
mov
xchg
mov
lods
mov
xchg
leave
insl
push
dec
cwtl
mov
inc
mov
int
lock
repnz
insl
cmp
inc
imul
fs
xlat
into
dec
bound
icebp
or
pop
push
xchg
cwtl
out
in
mov
adcb
stos
rorb
sbb
das
aaa
sbbl
sub
mov
in
jg
popa
mov
fbld
push
and
rcl
out
cwtl
jae
adcl
mov
loopne
inc
je
xchg
bound
int
pop
pop
fidivl
adc
aad
movl
cmpsb
ficoms
ret
inc
pop
and
sti
and
and
sbb
mov
cld
xchg
dec
stc
aas
sbb
push
decl
shr
dec
and
pusha
shrb
mov
in
outsl
enter
xchg
cmp
pop
leave
das
jmp
fcomps
xor
cmpsl
push
sub
dec
imul
je
outsl
jne
dec
cmp
cmc
push
test
sub
lea
pop
xor
pop
cwtl
cmp
dec
insl
add
jge
inc
mov
cmp
mov
adc
inc
movsl
sbb
jecxz
sub
cwtl
mov
lea
icebp
lods
and
sub
js
jp
push
into
cmp
into
cli
pop
dec
mov
arpl
mov
lock
imul
mov
std
daa
aaa
cmpsb
xchg
sub
lods
sub
adc
cmp
pop
lock
sbb
xor
or
cltd
cld
or
fcompl
divb
mov
dec
btr
or
gs
in
ficoms
cmp
push
sub
sub
push
pop
fmul
and
adc
shl
in
mov
incb
inc
das
sub
clc
negb
jo
or
fidivs
int
cmp
inc
stos
into
lret
insb
mov
es
sti
stos
jle
mov
dec
loope
xor
je
jnp
mov
mov
inc
and
and
cld
stos
test
in
iret
pop
sub
pop
pop
test
mov
int
loope
pop
mov
rcl
add
and
test
test
out
pusha
pushf
inc
inc
negb
xchg
popa
push
shl
or
movsb
sub
pushf
orl
xchg
scas
movsb
cmp
dec
cmp
movsb
loop
subb
mov
out
push
or
lock
xor
mov
into
in
mov
xlat
pop
popa
jp
xorb
pop
ret
jge
fcom
aad
imul
mov
push
push
lret
mov
xor
push
insl
gs
push
and
sbb
adc
adc
or
pop
sbb
cmp
mov
lret
fimull
pop
repnz
fnstcw
jp
cmpsb
mov
je
add
fs
lds
add
pop
in
and
sbb
inc
inc
mov
insl
ret
xor
pop
jg
scas
in
mov
xchg
dec
lods
mov
andl
stos
jp
mov
movsb
mov
pop
mov
xchg
cs
mov
sub
push
icebp
arpl
push
ds
rcrl
mov
xor
sahf
fcmove
sahf
mov
xchg
stos
mov
insb
lock
inc
push
jb
rol
pop
mov
jp
push
cmp
es
push
sbb
lahf
nop
fimull
push
mov
inc
aam
push
imul
out
leave
mov
jo
jo
inc
rcrb
mov
and
sub
mov
cmp
scas
push
jmp
fnstenv
add
mov
in
xor
jb
adc
xor
fstp
mov
add
mov
jge
push
rcl
into
mov
sbb
jp
jle
xor
add
fidivrs
adc
xor
inc
mov
loope
mov
sbb
sti
cmpsl
mov
lods
or
movsb
adc
lods
xchg
clc
add
sub
xchg
cmp
mov
pop
adc
push
rolb
enter
push
dec
mov
out
xchg
or
int3
jns
mov
decl
insl
icebp
or
or
xor
cmpsl
out
jge
jp
and
jmp
xor
int
orl
decb
cli
aad
aaa
movl
inc
hlt
aam
cmp
xchg
clc
push
sub
mov
mov
inc
sbb
pop
fwait
mov
or
cmc
jge
push
aad
insb
xor
mov
test
jmp
cli
ds
jge
sbb
jno
add
cmpsl
xchg
cli
bound
inc
xchg
and
imul
movsl
js
in
in
lret
and
insb
pop
pop
pop
xchg
out
sub
pop
inc
movsl
repz
xlat
repz
sub
leave
xchg
ljmp
inc
sub
jbe
lds
add
dec
adc
mov
arpl
test
sbb
fisubrl
popf
dec
shr
out
sbb
add
pop
loopne
test
and
outsb
adc
je
lea
leave
and
jecxz
mov
and
shrl
jno
fstp
out
xor
je
adc
adc
adc
aas
xchg
pop
cmp
or
outsb
add
and
xchg
sbb
xchg
sbb
cmpsl
stos
out
xor
jb
cmp
push
mov
test
mov
xlat
pop
mull
stc
add
call
sbbb
or
dec
xor
add
flds
xchg
gs
jb
popf
ds
sahf
cwtl
sub
fimull
movl
cmpb
pop
push
inc
and
in
roll
subl
add
loopne
leave
mov
inc
lahf
iret
int3
xchg
xor
push
pop
sub
aam
sub
sub
js
mov
shlb
int
lock
ja
and
test
dec
idivb
push
xor
fldcw
mov
sub
shll
arpl
std
jge
mov
lcall
adc
in
or
lret
sbb
push
sarl
dec
inc
clc
outsb
jbe
lcall
ss
jmp
insb
adc
cld
std
mov
jge
call
or
jp
shll
fwait
mov
and
push
fnstsw
jae
add
fiadds
lods
movsl
repnz
cld
loop
jl
cltd
dec
cmp
add
fstl
sub
mov
xchg
mov
mov
rclb
pmullw
xor
and
dec
mov
dec
repz
mov
push
mov
sub
mov
pop
xlat
inc
adc
xchg
test
jns
out
xlat
xchg
cwtl
rorb
pop
xchg
enter
adc
adc
shrl
int3
data16
lcall
faddl
push
sub
inc
test
call
in
rol
ret
movsl
inc
jecxz
and
push
hlt
xchg
mov
mov
loop
out
outsb
add
leave
push
adc
out
mov
shll
and
imul
nop
or
pop
mov
les
xchg
xlat
mov
les
int3
mov
out
push
enter
jnp
mov
cmc
push
xchg
pusha
adc
enter
cli
std
lea
mov
push
out
arpl
inc
xchg
rorl
call
call
sbb
cld
lock
pop
mov
mov
pop
jne
out
mov
mov
add
cwtl
ljmp
sbb
test
push
adc
andl
jmp
xchg
hlt
lea
add
outsl
ds
push
loope
mov
jae
std
cmpsl
movsb
jle
inc
cmpsl
js
cmp
addr16
imul
and
jecxz
mov
loop
xor
or
shlb
sbb
inc
and
xor
enter
loop
icebp
mov
mov
aaa
mov
adc
cmp
xor
pop
loope
inc
pop
lock
and
clc
fwait
mov
scas
xor
push
xchg
movsb
ja
clc
mov
mov
clc
xorl
mov
add
push
js
inc
push
fcmovnbe
or
pop
imulb
and
dec
add
shrl
push
out
cmpsb
adc
inc
jo,pn
js
add
xchg
mov
sub
insb
jl
jae,pn
push
sbb
popl
insl
or
sti
push
or
jo
xchg
iret
jbe
pop
mov
lds
aad
mov
and
mov
adc
das
cmp
pop
rol
mov
in
sbb
adc
mov
mov
int
inc
xchg
rcr
and
leave
movsb
mov
sub
lock
not
jle
shll
jl
test
insb
ds
cmc
sub
jle
push
add
sahf
xor
ja
push
loopne
mov
lret
imul
ja
mov
push
test
loopne
mov
lahf
fbld
jmp
popa
pop
sub
out
mov
lds
mov
push
ljmp
push
pushf
orl
insb
gs
pop
xor
in
in
and
out
mov
and
add
pop
dec
outsb
jo
rcrl
leave
out
cli
divl
cs
flds
outsb
sub
sbb
add
test
shll
or
dec
xchg
adc
into
pop
or
push
flds
fbld
outsl
xchg
mov
je
cmp
cmc
ja
loop
imul
dec
fsubs
sti
jno
outsl
cld
dec
xor
sbb
jno
loopne
sbb
adc
lahf
cmp
push
xchg
imul
push
jmp
mov
ljmp
mov
data16
into
fisttpl
inc
pop
cmp
test
jbe
mov
mov
lds
pop
std
fmuls
orl
lcall
popf
imul
sbb
loope
sub
out
lret
cmp
out
fisubrl
jl
mov
mov
push
cmp
cs
or
cmpsb
int
add
faddp
sub
cmpb
in
pop
je
ret
testb
xchg
mov
xchg
fnsave
movsl
xor
mov
push
mov
cmc
aaa
mov
xchg
insl
cmovae
push
lahf
stos
test
cli
xchg
scas
jno
mov
mov
pop
push
les
and
es
cli
arpl
push
cmp
push
jae
shll
pop
push
out
inc
repnz
push
rclb
and
cmp
add
out
les
or
fmul
push
loop
movb
pusha
sbb
repnz
cmc
push
push
dec
xlat
cmp
or
pop
repnz
inc
cmc
loop
mov
mov
stos
mov
dec
lods
addb
data16
pop
pop
call
aam
stc
ss
fiaddl
imul
mov
stc
cs
jmp
sbb
leave
pop
push
sbbl
daa
insl
arpl
add
mov
shl
or
mov
add
dec
fs
push
add
cwtl
ja
xchg
mov
xor
ret
and
push
xchg
scas
adc
lods
shl
jno
cmpsl
fs
ret
push
mov
mov
stos
adc
hlt
mov
mov
add
sahf
int3
ljmp
lods
mov
and
xchg
clc
sbb
and
push
inc
clc
cmp
shl
jo
call
lds
dec
inc
icebp
imul
fldt
insl
insb
xchg
scas
or
xorl
pusha
lods
lods
movsl
insl
andb
inc
xor
fildl
cmc
pop
inc
ret
in
cli
lods
lds
dec
scas
or
cltd
lret
and
push
sub
test
imul
pop
shrl
stos
insb
stos
rcrl
mov
imul
fsub
out
mov
enter
imul
adc
sbb
or
outsl
dec
cmp
call
xchg
push
mov
loope
xor
bound
sub
das
nop
test
jge
cs
sbb
push
inc
mov
pop
lea
adc
cmp
add
sti
movsl
mov
ss
fsubrl
dec
sbb
xor
xor
mov
push
orl
mov
add
mov
std
popf
cmp
int
push
movl
pop
movsl
ds
outsl
sbb
movsb
jno
adc
cmp
outsl
inc
cmpb
jmp
out
sub
pop
mov
leave
xchg
ja
adc
xchg
sbbl
insb
mov
enter
js
pop
cmc
jns
lcall
lahf
loopne
stos
mov
iret
mov
jns
mov
leave
ja
inc
cld
into
js
out
lock
and
pop
jno
shr
dec
cmpsl
in
and
mov
sahf
rcrl
sarb
add
aad
dec
dec
xlat
mov
lcall
dec
in
test
movsl
mov
sarb
hlt
test
ja
clc
or
or
fidivl
mov
mov
cwtl
roll
lret
dec
push
push
in
aas
imul
cmp
cmp
cmpsl
stos
ret
lods
ffree
in
push
xor
test
stos
outsl
xchg
dec
inc
xchg
inc
cmp
mov
cli
fwait
adc
mov
pop
xor
int
dec
outsl
fnsave
outsb
mov
cmpl
scas
add
movsb
stc
xchg
xor
mov
movsb
push
scas
imul
add
xchg
cmp
xor
and
and
rcrb
std
orb
sub
scas
dec
and
daa
add
in
mov
arpl
push
jle
or
mov
cmpsl
jne
jl
dec
push
jns
inc
pushw
cmp
clc
shl
clc
mov
icebp
and
incb
ss
push
mov
hlt
movsb
push
fs
cmpsb
lods
pop
dec
decb
in
jmp
scas
dec
add
sahf
ret
test
lcall
mov
xor
mov
je
bound
dec
sbbb
fcompl
je
adc
push
bound
xchg
xor
pop
mov
aas
fsubrl
xchg
push
cwtl
cmp
dec
xchg
adc
pop
mov
jg
sbb
insb
outsb
lahf
add
icebp
outsl
add
xor
mov
outsl
or
ss
mov
imul
dec
fcomps
addr16
mov
daa
and
shlb
hlt
cmp
cwtl
push
cmpsl
repz
xchg
add
mov
inc
stos
fsubs
xor
ja
sub
xor
fwait
addl
push
test
xchg
mov
cmpsl
out
cmpsb
pop
imul
dec
stc
cmc
sbb
mov
xchg
jmp
cmc
shll
into
or
mov
xor
xchg
mov
stos
lea
adc
xchg
mov
idivl
sbb
add
dec
call
xchg
xor
or
ret
pop
sub
cmp
inc
insl
jge
cli
xor
lret
cmp
lea
movsl
xor
jb
mov
cmp
mov
pop
jl
int
in
aas
imul
mov
cli
test
sub
add
mov
xor
ret
outsb
je
and
push
mov
cmc
lock
xchg
leave
adc
sbb
cli
bound
mov
test
cmp
or
ret
mov
adc
mov
mov
ret
xor
js
daa
mulb
push
ficoms
inc
fistps
into
lods
sarl
jns
icebp
rol
add
xchg
mov
mov
push
push
mov
sbb
leave
xor
sarl
rorl
sub
stos
adc
mov
dec
mov
repz
and
jno
outsb
lcall
cmp
jo
xor
jnp
cmp
push
cmp
xchg
lock
sbb
mov
and
dec
mov
inc
push
mov
pop
stc
mov
xchg
push
and
push
pop
xchg
add
imulb
aam
int3
push
ret
imul
push
loopne
fiadds
lret
sbb
sbb
push
gs
adc
cmp
int
fnsave
or
dec
testb
hlt
and
das
sbb
hlt
inc
jbe
aad
daa
mov
push
cmpsl
ja
inc
dec
repz
sub
or
xchg
push
or
inc
cli
pop
lcall
dec
ret
hlt
rclb
out
dec
mov
mov
pop
das
cmp
icebp
sub
jmp
inc
fisttpl
dec
pop
cmp
mov
loope
add
mov
js
dec
gs
push
pop
in
cltd
sub
sub
ret
lods
ret
dec
ret
sub
outsl
lea
cld
dec
scas
testl
sbb
in
pop
fdivrs
sbb
test
js
and
mov
or
stos
push
pushf
xchg
xor
int3
or
sbbl
btc
repnz
sbb
mov
cwtl
adc
outsl
out
hlt
mov
fstpt
fs
leave
jge
add
or
dec
test
pop
or
mov
xchg
pop
outsl
sbb
push
mov
xchg
fdivrl
jge
mov
fidivs
sub
les
rol
mov
mov
jbe
insl
mov
mov
or
push
add
ret
mov
and
mov
lahf
push
fmulp
mov
mov
mov
dec
or
push
aam
rolb
dec
and
shll
and
mov
lcall
iret
jae
cmp
dec
pop
mov
lds
push
xor
int
ror
adc
xchg
xchg
jmp
xor
mov
and
jae
test
mov
lods
cld
push
shll
xchg
das
outsb
jge
addr16
arpl
adc
xor
lods
and
mov
mov
imul
and
cmp
add
add
das
dec
ficoml
mov
dec
inc
fimuls
xor
imul
lret
cli
clc
aaa
jle
sub
cltd
jbe
repz
hlt
insb
pop
mov
mov
xor
mov
addr16
int
xchg
and
pusha
jp
out
loop
mov
lahf
mov
dec
das
das
cmpsl
jb
dec
sub
pop
push
xor
test
mov
sub
mul
xor
xchg
and
dec
shrl
cmc
and
dec
pop
mov
xchg
loope
pop
push
fmuls
out
in
adc
cmpsl
sbb
rcrb
sub
mov
pop
jmp
test
loopne
pop
gs
rclb
test
mov
cmpsb
inc
iret
dec
mov
sbbl
xor
scas
mov
into
xchg
mov
dec
or
testl
push
icebp
popf
xchg
mov
fisubs
mov
jno
fidivs
or
push
mov
pop
out
mov
mov
leave
mov
push
int3
call
fld
gs
loope
mov
in
or
mov
hlt
jnp
adc
jne
dec
or
pop
xchg
mov
jo
sbb
push
in
out
fidivrs
sub
mov
dec
or
in
jle
int
adc
inc
popf
inc
aam
enter
or
mov
std
icebp
xor
out
xor
icebp
imul
dec
out
or
inc
jne
and
or
lods
jmp
jle
push
test
pop
loope
xor
aas
inc
in
fcomp
fisubl
ja
jb
pop
repnz
cmp
iret
xchg
leave
iret
jb
xchg
jle
mov
mov
push
jo
push
fildl
push
sub
mov
jnp
bound
fiaddl
es
adc
bound
jne
inc
ja
in
pushf
dec
loope
lahf
outsl
mov
xor
add
or
push
cmp
fbld
aas
pop
jb
sbb
push
push
jl
es
std
ret
and
xor
and
mov
cmp
cmp
inc
inc
gs
xchg
jmp
out
jbe
jmp
ret
push
lahf
pop
scas
push
add
sub
imul
outsb
sbb
pop
dec
test
jns
outsb
pop
test
add
test
mov
mov
imul
int
jecxz
add
lahf
out
nop
out
cmp
sub
jge
lock
loop
push
imul
xchg
movsb
add
lds
adc
pop
jmp
push
in
mov
shlb
jne
or
outsl
lods
jle
push
mov
dec
adc
push
push
pop
and
rcrb
cmp
ss
popa
pushf
sub
out
popa
das
add
scas
cmp
xchg
stc
fcoml
in
pop
fmuls
fnsave
mov
mov
cmp
or
test
dec
test
std
sbb
dec
pop
xchg
sbb
inc
data16
xor
fbld
into
pop
cmp
lds
push
pushf
in
xchg
ljmp
xchg
ss
arpl
fldt
or
or
rolb
call
repnz
xor
adcl
or
inc
iret
push
rcrl
xchg
imul
stc
pop
call
add
iret
mov
das
xor
mov
out
and
sub
inc
or
jg
in
ficompl
pop
push
addr16
pop
jle
mov
cld
out
dec
xchg
sub
sub
and
rclb
jge
xchg
sub
push
and
xor
cmp
data16
insl
outsl
addr16
in
aam
not
cwtl
jb
in
test
out
add
mov
lret
sub
loopne
pop
inc
jnp
mov
xor
sbb
fildll
pop
clc
cmc
scas
dec
es
push
pop
movsb
test
ret
mov
jmp
cs
outsb
jno
das
mov
xor
loopne
mov
clc
sbb
fs
mov
int3
jle
cmp
mov
inc
in
lock
jl
mov
lcall
pop
jnp
daa
inc
xor
arpl
xor
icebp
and
sub
push
xor
and
fists
sahf
arpl
jno
sbb
mov
xorl
sub
stos
mov
outsb
xchg
adc
test
inc
rolb
mov
iret
xor
test
lret
xor
inc
cmpsb
je
jae
or
mov
stos
xchg
mov
and
pop
sub
movsb
shll
in
int
fwait
out
push
es
jp
adc
loopne
sbb
push
push
arpl
cmp
xchg
jnp
jge
and
out
and
nop
outsb
dec
in
jle
std
or
loope
les
xlat
ss
cmc
leave
lea
stos
or
imul
cmc
mov
or
sarb
sub
cld
jge
and
fbld
push
rcll
xor
mov
inc
outsb
shlb
mov
xchg
outsl
mov
loop
test
je
cmp
rcr
fneni(8087
rcr
cmp
mov
negl
iret
xchg
jmp
imul
int3
inc
orb
mov
adc
jb
outsb
xor
jo
js
test
push
fcoml
mov
int
cmp
cli
xchg
ficoml
push
pop
push
leave
add
jae
pop
and
clc
fisubl
mov
in
mov
lods
test
jge
cmpsl
adc
aam
test
insb
enter
sti
sub
sub
dec
ret
stos
rorb
in
push
inc
add
mov
pop
lock
orl
or
pop
jg
lret
pushf
in
jl
sahf
fwait
or
inc
orl
xor
nop
fstps
dec
sbb
test
rcrl
lahf
sti
cmpsb
cmpsb
lret
xor
sbb
leave
jge
adc
or
xor
adc
dec
cmpsl
xchg
mov
jb
push
fiaddl
pop
cld
call
jnp
in
data16
cwtl
cwtl
iret
mov
clc
sub
adc
mov
mov
in
cmpsl
add
jmp
and
mov
cld
push
divb
sbb
xchg
bound
xor
lods
cwtl
mov
mov
lret
stc
fdivr
shlb
imul
sub
andl
out
xorb
push
leave
pop
xchg
xlat
push
mov
mov
cli
pop
je
push
push
mov
cmpsb
fsubrp
nop
dec
inc
clc
lods
mov
pop
sbb
outsb
jecxz
xchg
push
sbb
or
or
dec
pop
sbb
test
sbb
movsl
dec
mov
test
mov
addb
xchg
cmc
stos
out
xchg
nop
arpl
xor
lret
cmp
lds
ret
nop
sub
cs
lahf
cs
popf
push
andb
push
sub
mov
stos
int3
vpacksswb
js
pop
xor
pop
push
mov
mov
and
mov
pop
lcall
jae
add
pop
rorl
les
bound
and
ror
or
clc
imul
inc
dec
pop
xchg
clc
adc
sub
les
inc
sbb
pop
aad
push
push
cmpl
sub
add
cmpsb
push
push
add
adc
out
sub
xchg
repnz
lds
scas
filds
sbb
pop
lea
xchg
es
in
xor
adc
mov
movsb
dec
adc
pop
add
adc
push
aad
scas
push
add
inc
add
mov
dec
mov
scas
dec
sub
sbb
cmc
inc
mov
push
ficomps
lret
shr
dec
inc
inc
in
in
or
and
inc
pusha
popa
icebp
adc
orb
bound
jbe
xor
lret
jle,pn
adc
jl
cmc
lcall
push
gs
push
mov
dec
xor
mov
mov
test
iret
popa
shl
hlt
jnp
cli
insl
aad
dec
pop
fistps
sbb
cli
adc
mov
jp
mov
mov
rcll
xor
sbb
and
daa
pop
add
sbb
sbb
pop
cli
enter
insb
sbb
pop
jg
inc
add
mov
lea
insb
sahf
push
arpl
jae
mov
arpl
sub
dec
das
dec
xchg
test
mov
xor
dec
xor
xchg
bound
and
push
loope
push
jbe
mov
arpl
mov
call
fldenv
andb
pop
sub
push
int
sub
adc
jl
mov
pop
fsts
in
add
inc
jp
ror
xchg
shll
jl
mov
jp
pop
adc
fdivr
adc
mov
mov
adc
out
std
mov
or
jns
and
push
mov
sub
xor
mov
xor
in
inc
sbb
inc
cs
pop
out
and
insl
jp
loop
add
ds
push
pop
iret
enter
pop
sub
mov
lahf
jno
andl
js
jb
xchg
rcll
call
dec
add
lcall
push
jbe
lahf
jg
mov
dec
repnz
fidivs
jo
adc
jecxz
fstpt
je
cwtl
xchg
popa
push
add
aam
xchg
ljmp
popa
sbb
int
lret
mov
or
out
outsb
inc
jo
jne
xchg
mov
in
or
or
pushf
les
dec
push
add
inc
cmp
jae
jns
xchg
dec
ljmp
in
ds
fidivs
jle
ja
frstor
clc
push
mov
push
fiadds
jo
leave
inc
fidivrl
adc
int3
pushf
test
jg
mov
test
stos
cmp
mov
jp
xchg
das
imul
cmpsb
xchg
fdivl
andl
add
adc
jo
test
mov
pop
sbb
push
and
mov
rcr
mov
and
iret
or
or
mov
mov
push
inc
jo
repnz
push
test
add
mov
dec
push
lods
cmpsb
stc
jp
cmp
push
shrb
xchg
jp
popa
or
cmp
mov
test
xchg
rorl
xor
fwait
ds
out
sub
add
sbb
divl
inc
inc
add
cmp
push
mov
push
outsl
nop
mov
push
loop
mov
mov
sarl
dec
cmc
pop
imul
push
sbb
adc
mov
ffree
pop
mov
subb
lret
pop
test
inc
fdivrs
test
fs
scas
outsb
in
mov
inc
mov
add
es
out
popf
ds
lea
xor
jbe
lret
insb
jge
mov
aaa
in
sbb
and
or
pop
sub
dec
scas
jp
mov
mov
mov
imul
pop
sarl
push
adc
dec
push
cld
mov
inc
loopne
or
cmp
xchg
outsb
sub
mov
xchg
addr16
xchg
pop
jae
cltd
xchg
push
push
sbb
add
mov
mov
or
cmp
cmpsl
mov
mov
sbb
and
sub
clc
add
dec
inc
lea
push
iret
nop
rcrb
adc
push
sbb
loop
out
and
ja
xchg
les
orb
push
inc
lahf
or
sarl
test
push
iret
dec
xchg
aad
movsbl
lret
es
mov
jne
and
sub
sbb
or
xor
cmp
cmp
jno
fdivs
push
stos
jbe
roll
mov
sub
and
sar
ds
jnp
cmp
cmp
dec
mov
leave
stos
movsl
adc
addb
mov
cmp
mov
mov
js
sti
sbb
nop
mov
xchg
loopne
xchg
notl
repz
dec
mov
jle
sub
xor
test
mov
mov
add
cmc
sbb
emms
xchg
or
sbb
jmp
mov
pushf
cmc
orl
xchg
mov
mov
push
daa
mov
ret
in
add
mov
xchg
mov
push
jg
sub
or
ja
out
ficoms
pop
popa
mov
in
fs
cmp
jnp
dec
adc
jg
inc
pusha
out
arpl
loop
fnstsw
imul
cmp
mov
dec
xchg
fcmovnb
or
out
jbe
push
ret
jmp
mov
nop
nop
inc
sbb
push
testb
shll
ficompl
adcl
xchg
inc
cli
sti
movsb
idivb
sti
shll
mov
dec
fimuls
mov
and
jno
sahf
ret
insb
neg
stc
inc
and
leave
dec
push
loopne
enter
adc
mov
push
das
or
fdivl
inc
xlat
xchg
sbb
jl
sbb
xchg
fisubrs
fistps
adc
xchg
stos
cmpsb
jno
loop
sbb
mov
imul
sbb
das
mov
adc
jg
add
loop
cld
sarl
pushf
and
cmpsb
or
inc
mov
in
mov
cmp
notl
inc
adc
lds
xor
negb
push
les
gs
test
mov
or
insb
adc
sbb
pop
addr16
push
cmpsb
xor
fdivrs
scas
xor
pop
insl
pop
repz
aaa
lods
adc
xorb
ret
mov
ja
insb
fidivrl
movlps
jle
cmpsb
mov
in
pop
hlt
lahf
add
and
mov
jne
nop
ljmp
out
inc
xchg
xor
add
sbb
repz
ds
or
loopne
and
out
mov
lret
jo
inc
adcb
sub
jg
sbb
or
ds
aas
dec
out
out
lds
add
push
xchg
or
mov
push
iret
push
pop
icebp
mov
cmp
pop
mov
cmp
cmp
adc
push
nop
sub
adc
jp
mov
xchg
test
rclb
test
fsts
sub
mov
cmp
es
arpl
sub
int
xchg
add
popa
or
fcomps
ret
xchg
inc
fsubl
call
add
fadds
adc
jo
cltd
inc
daa
mov
mov
jge
mov
cmp
push
stos
cmp
push
loop,pn
je
jecxz
sub
sub
cld
xchg
les
data16
pop
or
jmp
xor
data16
mov
repnz
sbb
ret
sbb
or
sbb
adc
push
bound
jl
sbb
insl
mov
and
flds
lcall
push
push
ds
cld
cmp
cld
mov
and
push
and
test
bound
pop
testl
dec
adc
inc
cmp
mov
sub
xchg
add
xor
popa
xchg
cmp
dec
mov
xor
xchg
mov
xchg
rcl
rorb
pop
aas
mov
sub
lcall
and
jmp
or
scas
cmp
mov
and
pop
push
jbe
cs
test
dec
adc
cmp
cmc
int
lahf
call
mov
in
jl
cli
arpl
jp
ljmp
negl
xchg
decl
sub
dec
lea
xor
insl
cmp
push
mov
mov
inc
jmp
sub
dec
push
xor
les
mov
xchg
test
scas
dec
out
push
enter
push
xchg
push
mov
xor
aaa
loop
xchg
mov
or
adc
jae
sub
mov
or
into
lret
into
test
dec
mov
mov
addr16
or
mov
stc
stc
roll
rorl
xchg
inc
aam
push
cmp
loope
fsts
ja
pop
shl
shlb
cmp
les
lret
sahf
out
pop
add
adc
pop
inc
lcall
mov
xor
sub
cmp
lcall
cltd
outsl
cld
add
push
sahf
inc
fiaddl
js
hlt
les
popf
insb
push
jecxz
mov
and
jne
mov
test
cmc
out
nop
inc
stos
adc
xor
sbb
mov
jns
pop
fists
mov
les
pop
pop
fistpll
xchg
mov
jp
dec
out
cli
or
jb
or
inc
mov
repz
cmc
dec
bnd
adc
mov
push
js
les
push
xchg
mov
push
jg
adc
pop
aaa
cld
lock
inc
dec
jne
aam
test
push
gs
cmc
sbb
mov
insb
sbb
jae
mov
imul
aam
das
das
mov
xor
and
sub
push
adc
cwtl
scas
mov
inc
jb
jbe
xchg
aaa
xchg
clc
sub
cltd
push
xchg
sub
mov
scas
sbb
jl
or
repnz
xlat
fsubl
stos
test
adc
outsl
imul
test
shrl
int3
mov
push
inc
mov
pop
stos
pop
xchg
icebp
loope
mov
push
or
pop
or
and
pop
mov
push
scas
xchg
stc
xchg
add
pop
dec
hlt
push
mov
fistps
jbe
mov
xchg
inc
and
jnp
shl
fldl
push
sub
rcl
in
jno
jo
pop
les
movsb
sub
lock
daa
lahf
rorl
sub
iret
inc
sub
jnp
inc
bnd
movl
es
fs
dec
stc
and
cmp
sub
add
push
js
cmpsb
inc
mov
and
xchg
aad
les
iret
mov
mov
and
and
push
femms
push
test
or
imul
addr16
and
cmc
pop
jno
adcb
data16
push
mov
cli
jp
mov
popa
test
loopne
push
push
es
movsl
lret
inc
insb
lret
divl
xchg
push
iret
inc
sub
sti
cmpsl
andb
mov
inc
inc
pop
cltd
jg
imul
xchg
jmp
add
cmp
sbb
mov
sbb
dec
cs
into
lea
push
xor
lea
sbb
mov
repz
adc
xchg
fists
test
xchg
push
dec
jae
inc
nop
test
jg
popa
cmp
fcoml
mov
repnz
int3
popa
mov
mov
sub
test
into
mov
push
sbb
ret
dec
jae
addr16
iret
add
adc
fcomps
xor
add
sub
push
mov
sub
scas
jno
fists
stc
pop
xchg
cmp
pop
inc
or
fcomi
lret
mov
insl
outsl
pop
dec
xlat
jecxz
dec
pop
sub
nop
sub
xor
in
sbb
or
inc
and
popf
dec
clc
in
daa
ret
add
mov
pop
dec
sahf
sub
pop
cli
push
and
mov
fdivrp
lods
xchg
sahf
clc
pushf
jno
adc
pop
bound
lods
push
movsb
out
dec
scas
test
push
sub
ret
pushf
mov
pop
int
and
ds
or
into
adc
into
insl
and
lock
adc
sbb
pop
lea
aad
jmp
mov
add
in
jg
adc
bound
sub
sbb
lds
es
mov
xchg
xchg
outsl
add
popf
inc
ljmp
dec
sahf
dec
sahf
jbe
add
add
adc
mov
dec
cmpsl
int3
jmp
je
test
arpl
loopne
int
insb
push
hlt
pop
mov
loope
mov
fmuls
cmp
mov
daa
cmpsb
fimuls
insl
in
jb
mov
adcb
roll
sahf
xor
loope
es
push
or
iret
nop
sub
inc
push
lret
shll
cmp
mov
js
mov
push
cmp
int3
das
stos
mov
rcll
jmp
sbbb
lcall
xor
adc
push
lods
pop
aam
bound
jno
arpl
roll
imul
out
mov
lret
jp
mov
popa
xchg
ret
int
movsl
push
jne
inc
cmp
lods
or
pop
fcmovu
adc
xor
xlat
jge
int3
aam
jae
stc
lock
push
mov
xchg
pop
das
xchg
dec
push
rcll
data16
mov
xchg
cmp
pop
shlb
out
and
call
pop
pop
popf
loope
imul
bnd
stc
call
lock
icebp
sub
out
iret
bnd
adc
stos
mov
les
rorb
fwait
bnd
push
lds
cmp
mov
inc
ret
call
push
rep
mov
fs
cwtl
push
xorb
roll
mov
leave
jne
int
outsl
rcrb
mulb
nop
out
ljmp
lahf
shrl
leave
adc
ror
lds
adc
dec
ljmp
movsb
cli
lods
xchg
negb
sbb
mov
or
jo
xor
sbbl
cmpsb
mov
pop
test
push
pop
call
insb
fwait
ljmp
push
test
xchg
adcb
xchg
dec
mov
and
stos
xchg
es
pop
push
rolb
cmpsb
out
mov
pop
hlt
xchg
add
outsl
inc
and
lret
addr16
pop
call
push
mov
push
jp
call
mov
imul
push
add
lahf
sbb
fists
adc
call
in
pop
xchg
sbb
push
xchg
cli
and
jne
js
adcl
dec
pop
mov
rclb
es
pop
mov
mov
out
cmp
xchg
ljmp
mov
stc
insb
adc
push
rclb
jge
lret
ficoms
add
dec
add
and
mov
subb
jns
sub
pop
sbb
pop
mov
adc
or
push
movsl
inc
adc
and
or
push
fadds
sbb
sbb
insl
in
sub
loope
xchg
jl
enterw
ret
into
pop
mov
hlt
data16
or
ret
jle
cmp
pusha
adc
lock
push
arpl
in
add
pop
add
out
mov
outsb
movsb
sub
jecxz
sbb
in
push
popl
dec
xchg
xor
clc
cmp
sbbb
subb
mull
mov
es
add
jg
mov
testb
jb
dec
push
das
call
cs
mov
mov
dec
std
ficoms
mov
cmp
lret
add
mov
fisttpll
xchg
enter
pop
cmp
lods
xchg
inc
or
es
inc
std
scas
dec
lahf
jge
lea
imul
inc
les
popf
inc
aaa
cmp
xchg
sub
int
cltd
imul
daa
lret
sbb
in
sarb
mov
subb
mov
inc
movsl
cld
daa
lea
out
sti
inc
stc
push
push
xchg
sahf
jnp
xchg
pop
mov
outsl
lds
icebp
push
add
mov
mov
js
dec
or
lds
inc
push
pop
lahf
push
or
and
lea
ss
out
mov
loope
scas
jno
mov
scas
cmp
sti
mov
js
adc
ficoms
repz
xor
mov
jmp
jne
mov
jecxz
inc
adc
xor
cmp
ss
and
daa
fwait
xor
jnp
mov
lahf
mov
pop
out
shll
mov
inc
fdivs
mov
pushf
loop
push
fimuls
mov
call
cmpsl
test
lock
cmpsb
adc
inc
jecxz
mov
outsb
inc
dec
xchg
sub
sub
nop
xor
mov
add
int3
and
movsl
lods
shll
mov
outsl
aas
into
cli
lret
leave
push
out
loope
pop
and
adc
cmp
xchg
jl
cmp
or
pop
mov
add
cs
lods
adc
adc
dec
pusha
sub
mov
mov
arpl
imulb
call
daa
push
ja
call
insb
call
inc
aas
testl
push
out
or
xor
dec
das
xchg
rorl
idiv
pop
insl
addr16
jae
mov
sub
or
scas
push
fld
inc
push
jno
xor
sub
mov
xchg
fldenv
push
mov
dec
adc
icebp
insb
iret
sarl
fbld
ret
jo
mov
xor
std
pusha
fs
outsb
dec
subl
mov
std
mov
sbb
packsswb
repnz
lret
ljmp
shll
mov
and
cld
and
dec
iret
jb
cmp
sti
mov
int
sbb
jecxz
cmc
and
mov
pop
pop
ffree
sbb
mov
pop
lock
jp
push
pop
rcrb
sub
add
aas
adc
xor
mov
rcll
mov
into
mov
enter
push
push
sbbb
lods
jl
push
mov
pop
gs
fwait
cmpsl
add
rorl
insl
mov
faddp
or
inc
xor
adc
scas
xor
test
loopne
fildl
xor
shlb
xchg
aaa
pop
test
pop
adc
push
push
cmp
sub
andb
loop
mov
aad
xor
lods
dec
add
mov
and
or
nop
das
les
jb
sub
outsl
mov
or
pop
inc
je
loopne
push
mov
ror
pushf
and
add
test
stc
or
pop
inc
lods
mov
call
ljmp
jp
inc
outsl
imull
push
sub
pop
stos
mov
jo
out
push
sbbl
neg
les
movl
jl
and
gs
add
jnp
sub
sub
ja
test
and
popa
and
ss
ds
setne
dec
cwtl
adc
fldenv
xchg
divb
sub
xchg
lahf
mov
cli
ds
jne
cmc
pop
std
mov
sbb
sbb
insl
sahf
addr16
and
adcl
push
mov
mul
popa
jo
sub
jg
sub
loop
clc
mov
movsl
pop
mov
mov
mov
idivl
les
test
add
clc
decl
mov
or
dec
and
out
cmpsl
int3
cmp
or
inc
mov
test
or
icebp
je
sbb
lahf
scas
fwait
lods
cmp
cmc
mov
test
xchg
and
les
xchg
imul
cmp
sbb
test
stos
mov
cmp
inc
lret
out
cmpsb
aaa
outsb
adc
mov
int3
adc
fiadds
mov
aam
fwait
cmp
decb
sbb
xor
insb
add
imul
mov
out
cmp
mov
pop
sub
jp
es
mov
dec
orl
xchg
xor
test
test
jp
sub
push
mov
cmp
jb
mov
iret
sub
push
icebp
arpl
mov
hlt
pop
add
repz
lcall
xchg
sub
shlb
inc
push
jp
dec
popa
pop
mov
xor
cmpsl
jecxz
sti
add
sti
jae
lcall
push
inc
push
adc
setbe
mov
icebp
mov
mov
sbb
pop
mov
popa
aad
xchg
rcrb
aad
fdivl
fsubl
call
loopne
and
mov
and
sti
daa
ret
inc
arpl
sub
xchg
ljmp
dec
decl
sbb
mov
push
jo
dec
fisubs
mov
mov
rclb
cld
cs
cmp
insb
scas
dec
fwait
push
dec
and
jb
cltd
push
clc
ja
gs
xor
iret
cmp
add
fidivl
or
push
iret
jmp
out
and
add
lea
js,pn
stc
push
push
push
outsb
sbb
lods
xchg
lea
jl
pusha
lret
jg
lret
fmull
sbb
mov
pop
add
mov
std
pushf
aad
xor
sub
jle
pop
fiaddl
cmp
insb
sbb
daa
mov
sbb
mov
test
adcl
leave
dec
add
or
push
rcrb
lods
sbb
xchg
fxam
mov
stos
cmp
pop
lahf
push
xbegin
enter
cltd
add
lea
push
pusha
xchg
mov
or
xor
out
mov
leave
jmp
ret
sbb
arpl
loope
adc
and
xchg
cmp
jb
xlat
std
add
dec
mov
xchg
pop
test
cld
dec
sbbb
cwtl
neg
fcomps
inc
sbb
gs
cmp
and
jp
mov
enter
sahf
outsb
mov
pop
fcompl
or
mov
pop
cmp
lock
mov
cmp
pushf
pushf
mov
jae
adc
dec
jnp
sbb
push
dec
mov
mov
cmp
icebp
cmp
sbb
sub
cmp
imul
inc
test
mov
movsb
cld
js
pop
xor
and
call
sbb
stos
and
mov
pop
jmp
and
insl
popa
pop
adc
jnp
dec
cmp
fsubs
sub
mov
mov
sbb
dec
cmpsl
fsubrl
inc
ret
shr
stos
xchg
cmp
and
das
sbb
das
mov
jl
pop
cltd
daa
pop
aad
dec
add
lock
push
cmp
and
lret
pop
cli
in
stc
dec
shll
adc
mov
ja
jno
add
rcrl
mov
or
inc
mov
ficoml
mov
dec
ret
cli
dec
jbe
lret
sahf
js
or
xchg
and
test
xchg
mov
shlb
shr
push
cld
mov
inc
movsl
cmp
and
rcrb
xor
push
jnp
jl
and
iret
test
int
ficoml
mov
push
push
cs
test
add
add
cwtl
test
jbe
mov
not
mov
mov
std
cld
inc
popa
fwait
lret
cmpsl
shrl
test
pop
out
scas
lods
and
fstps
mov
mov
out
add
fwait
dec
dec
data16
sbb
mov
shlb
inc
jbe
in
pop
pop
pop
nop
mov
fldl
mov
sub
adcb
mov
dec
sbb
sbb
fsubrp
mov
cwtl
lods
out
or
xorl
or
jb
arpl
pushf
xchg
aaa
rorl
xchg
stc
aam
dec
mov
pop
iret
inc
gs
aad
mov
mov
jecxz
repz
outsb
aaa
sbb
ficompl
mov
stos
js
and
sub
push
mov
test
pusha
cmpsb
mov
cmp
movsb
xchg
sub
repz
mov
dec
hlt
loopw
mov
sbb
sub
stc
xorl
sbb
push
ror
cmp
loop
inc
mov
inc
lcall
test
cmp
fnsave
mov
int3
roll
mov
push
sbb
imul
sti
andl
stos
out
xor
mov
inc
fildll
pop
jg
mov
cmp
jnp
adcl
stos
sti
icebp
icebp
jns
data16
jg
or
lock
jo
add
sbb
push
pop
in
shl
lock
push
xor
mov
inc
pop
jbe
push
scas
in
scas
aas
cmc
xor
dec
push
cli
lock
cmc
and
adcb
filds
add
pop
popf
xchg
or
fisubs
daa
inc
int
call
loopne
test
jmp
sahf
dec
fnstsw
dec
sub
aas
loop
std
aam
sub
cmc
mov
stos
xchg
push
mov
pop
test
cld
mov
xchg
flds
adc
jb
cmp
mov
pmullw
aaa
movsl
jp
sti
fdivrs
mov
xor
push
pop
movsl
popa
fucomip
push
movsb
pop
out
jne
into
mov
mov
pop
bound
std
mov
cmp
insb
scas
xchg
mov
mov
cld
stos
cmp
mov
hlt
jp
push
lahf
cwtl
inc
shll
ds
sarl
rcrl
cli
mov
sbb
stos
push
les
test
mov
pop
loopne
and
sub
fstpt
add
les
les
add
mov
mov
pop
adc
leave
inc
les
pop
mov
jmp
push
jae
mov
and
ja
loope
cmc
xchg
xchg
cs
hlt
dec
jp
stos
jp
mov
and
test
data16
or
scas
mov
jnp
lods
arpl
xor
outsb
mov
inc
push
or
xor
jnp
iret
lock
adc
sub
inc
outsb
pusha
or
sub
pusha
pop
movsl
mov
pusha
push
mov
dec
jne
loopne
mov
es
loopne
mov
imul
push
sbb
pop
sub
iret
dec
dec
mov
fildl
mov
or
bound
out
push
push
subb
fs
je
add
mov
or
push
cmpb
cmpsb
les
fnsave
cmp
and
xor
jo
rcr
popf
dec
push
push
xor
gs
shll
cwtl
mov
popa
jbe
and
sub
sub
fstl
pop
lret
jae
lret
out
je
js
or
aam
test
push
loop
je
sbb
call
fs
xchg
data16
mov
xchg
or
inc
push
add
mov
pop
mov
and
or
cmp
or
pop
push
in
lahf
ja
xor
sahf
ret
lcall
fdivs
in
xchg
jge,pn
or
mov
lea
rcl
daa
pop
jns
push
rcrl
iret
or
aam
jle
out
loop
mov
inc
test
xchg
cmpb
adc
pop
push
mov
sub
adc
jl
daa
sbb
xor
pop
push
cmp
fstpt
push
jb
inc
test
das
mov
push
roll
std
xchg
push
scas
and
dec
movsl
and
fisttpl
jbe
sbb
sub
int
out
add
out
loopne
mov
rolb
pusha
and
faddl
fisubs
inc
cmovne
xchg
rcr
and
int3
xor
or
loopne
add
loopne
jp
aaa
ret
inc
fwait
daa
movsl
or
push
fnstcw
cmp
pop
addb
mov
cld
pop
ret
ljmp
aad
push
mov
inc
jae
pop
adcb
js
je
idivl
lock
mov
rcrl
pop
adc
xchg
sti
sub
sarb
xlat
cmpsb
std
test
jns
adc
mov
jns
pop
out
rclb
sub
dec
stos
sti
imul
and
push
sub
push
popf
cmp
sbb
push
add
jb
out
mov
push
loop
divb
call
lods
cmp
mov
test
stos
pop
dec
lcall
xor
sti
xor
mov
fbstp
inc
xchg
push
fwait
ret
lds
ret
or
xchg
test
pop
icebp
cmp
jmp
or
insb
out
or
jnp
lock
bound
pop
inc
lds
and
movsb
ljmp
inc
rcrl
pop
ljmp
lret
cmpsb
and
dec
je
cmc
sar
mov
dec
scas
mov
icebp
cmpsb
xchg
mov
lds
xor
inc
mov
ret
xchg
pop
les
repnz
push
dec
negb
sbb
jle
rolb
xchg
jne
sbb
lahf
fidivrl
mov
jns
lods
call
adc
push
mov
int3
int3
stos
xchg
or
outsb
dec
lock
cmpsl
sbbb
add
test
xchg
popa
adc
gs
add
stos
je
pushf
jae
xchg
pusha
pushf
mov
sti
mov
jp
and
mov
xchg
sbb
inc
bound
xchg
nop
mov
mov
lods
repnz
sbb
pop
test
inc
fs
fwait
orl
add
cmp
fucomp
rol
mov
jnp
xchg
dec
push
add
pop
or
jne
xchg
daa
idivb
jmp
call
lds
add
pop
ja
inc
out
inc
cmpb
ja
mov
jb
test
and
out
imul
daa
shll
dec
xlat
cmp
push
ret
test
outsl
push
cli
aam
xor
sti
lods
inc
fs
pop
pop
inc
les
jmp
les
adc
ljmp
repnz
adc
sbb
pop
sti
repnz
inc
xchg
cwtl
sub
push
inc
imul
jg
mov
enter
push
daa
incl
stos
xor
xor
pop
shlb
cmc
fistpll
jb
in
jae
in
dec
push
ds
mov
inc
test
dec
daa
add
jno
dec
sub
int
rcrb
fs
movsb
mov
sub
cmp
inc
or
cld
mov
cmp
shrb
iret
daa
jnp
xlat
add
loopne
inc
inc
sub
cmc
push
scas
cmp
push
inc
jne
aam
call
aaa
cmp
subl
cwtl
in
xchg
loop
cmp
orb
jle
mov
xchg
iret
sbb
mov
pop
mov
mov
lods
adc
inc
sub
cmp
imul
mov
cmp
xor
popf
lret
rorl
cli
xor
sub
lock
mov
roll
push
xchg
mov
lret
push
cmp
sahf
or
ljmp
fisttpll
and
fnsave
rolb
fists
xchg
loope
mov
jg
pop
enter
and
movsl
and
push
pusha
pop
push
mov
lock
test
enter
sub
lds
pop
nop
sbb
inc
mov
dec
aas
inc
or
fsts
ja
mov
in
and
mov
lods
cmpsl
icebp
popa
sbb
btr
inc
movsb
sub
enter
test
inc
dec
rcrl
aad
lock
lea
ljmp
loope
dec
outsl
sbbb
dec
cs
arpl
ds
lea
pusha
cmpsl
cmp
jno
loope
int
clc
xchg
inc
jg
shll
inc
push
out
sub
jp
daa
inc
add
xor
adc
gs
inc
pop
mov
mov
sbb
adc
cmp
sbb
out
jnp
daa
stos
xor
dec
sub
sti
xchg
jnp
or
and
loope
popa
and
and
gs
test
mov
pushf
repnz
jae
dec
scas
mov
je
pop
lret
outsb
cmp
sub
enter
inc
ret
pushf
mov
mov
addr16
push
fistps
mov
int3
mov
or
adc
mov
cli
mov
inc
in
mov
lahf
rol
mov
out
iret
cmp
ja
mov
leave
sub
inc
ficomps
fs
inc
out
and
dec
jge
fcmovb
mov
movsb
mov
or
movsl
in
push
jmp
xchg
decb
xchg
dec
mov
inc
daa
sar
inc
mov
mov
fidivs
inc
jns
call
xchg
adc
shrl
xor
fisubrs
test
in
mov
movsl
shl
jecxz
ss
sbb
xor
sub
adc
mov
sbbl
cmp
pop
ret
push
push
xchg
fstpt
ja
pop
icebp
jle
cltd
nop
int3
pop
leave
fs
and
int3
push
out
push
mov
lods
inc
mov
and
frstor
sbb
inc
inc
lret
cltd
movsb
push
mov
fcomi
scas
dec
loop
xchg
imul
jg
xchg
repnz
cltd
das
test
fisubl
lds
mov
jmp
ficoml
or
mov
xchg
insb
dec
inc
das
cmp
or
icebp
and
mov
pop
inc
cmpsb
mov
inc
hlt
push
movsl
inc
mov
sub
mov
adc
pop
incb
leave
leave
aad
mov
jbe
xor
or
pop
pop
jecxz
xor
inc
push
mov
aam
mov
mov
mov
xor
fwait
sub
mov
xor
push
cli
int3
mov
insb
imul
xrelease
int
jno
lds
idiv
push
push
xchg
rcrl
imul
arpl
xchg
ja
lcall
jns
ss
fbstp
jno
decl
outsb
mov
and
cmp
scas
mov
xchg
mov
in
mov
sbb
les
adc
iret
in
ficoml
bnd
inc
sub
dec
sub
mov
inc
adc
xlat
lods
dec
jecxz
jb
xchg
jo
pusha
lret
or
notl
xchg
ljmp
xchg
fwait
movsb
cmp
aam
lea
shrb
dec
stc
push
cmp
aam
js
cmp
enter
stc
repnz
hlt
sbb
or
push
dec
ret
inc
in
test
adc
out
sahf
test
negl
out
lret
jp
xchg
and
pop
mov
lcall
dec
sbb
sbb
test
sub
adc
jg
fs
addb
xchg
jne
cmc
dec
adc
xor
jno
fsin
xor
outsb
sub
lea
repnz
fisubs
and
repz
gs
push
test
int3
jmp
shrl
mov
add
xor
jbe
stos
pop
das
and
minps
dec
das
xlat
jb
pop
out
movsb
rolb
cmp
jb
mov
out
or
test
in
fidivs
xchg
pop
sahf
pop
mov
lea
lahf
iret
mov
fldenv
negb
pop
jmp
or
jb
or
jle
testb
or
xor
push
or
lret
xchg
repz
testl
push
or
or
pop
rclb
scas
in
sbb
addl
mov
sbb
call
mov
fbld
fnstcw
xor
in
mov
mov
daa
mov
aad
pushf
inc
xchg
mov
and
dec
or
out
sub
mov
sti
xchg
xor
cwtl
xchg
mov
add
fdivrp
xor
sub
and
rolb
pop
das
scas
cld
push
pop
xchg
and
dec
jecxz
cmpl
les
push
dec
inc
dec
mov
outsb
mov
and
or
rorl
in
add
jl
and
add
out
and
mov
mov
ret
mov
aaa
add
and
push
mov
mov
push
test
sbb
sbb
scas
cmp
pusha
test
inc
pop
inc
push
into
cltd
adc
mov
jle
dec
inc
mov
ja
ficomps
mov
pushl
test
mov
loop
aam
cmp
insb
sti
push
push
pop
jmp
in
stos
add
push
loop
iret
cmc
stos
sbb
lock
call
pop
ljmp
test
cmp
outsl
push
and
sbb
push
orb
aad
inc
lods
push
adc
mov
aam
mov
fcmove
mov
sub
sbbb
sti
je
add
adc
dec
xchg
mov
rorl
out
shlb
scas
mov
in
and
out
out
pop
pop
ljmp
stc
sbb
stos
mov
int
int3
lea
and
push
or
fwait
and
ret
add
jns
add
xchg
mov
xadd
adc
sub
push
xor
mov
jmp
push
jl
pop
xchg
mov
mov
sub
inc
cmpsb
fidivrl
iret
jle
imul
push
push
pop
sub
ss
rcll
rcrb
jl
nop
stos
fisubrs
add
push
movsl
push
ss
inc
push
sbb
das
sbb
and
jno
jns
imul
shrl
jmp
pop
lea
int
mov
mov
dec
lock
sub
imul
stos
sbb
mov
hlt
call
mov
mov
scas
rcll
xchg
test
sar
ljmp
adc
sbb
rcrb
callw
add
lret
stos
hlt
imul
mov
cmpsb
fwait
test
mov
sarl
dec
aad
pop
dec
fcoml
stos
mov
mov
js
jo
lds
scas
mov
or
mov
adc
add
ret
jb
jo
sbb
ret
cld
cmp
stos
lret
imul
xchg
dec
data16
xrelease
mov
jne
push
ljmp
xchg
clc
sub
clc
jecxz
pop
and
pop
bound
pop
ficomps
mov
dec
ss
pop
mov
ljmp
adc
flds
jns
repnz
jb
fnstsw
loop
mov
xor
pop
ret
pop
popa
popf
cld
sub
dec
repz
fwait
push
daa
pop
std
cmc
push
push
mov
lods
mov
push
dec
adc
insb
cmp
pop
mov
repz
xor
and
sarb
aam
and
std
pop
push
cld
call
in
jg
jnp
insb
pop
shll
or
jp
jne
pop
cmp
jg
xor
jle
movsb
pusha
dec
arpl
test
aas
sbb
testb
sub
adc
pop
sbbl
mov
pusha
roll
or
push
lret
cs
dec
std
test
push
int
push
aad
leave
in
pop
pop
cmp
sub
adc
mov
cmpsb
add
adc
fwait
mov
pop
inc
int
movsb
jb
rcrb
insl
out
jns
out
cmpsb
xor
adc
call
adc
pop
loopne
in
leave
and
cwtl
cmp
add
cmp
loopne
lret
aam
xchg
mov
or
out
repnz
xor
push
push
out
scas
jecxz
and
aam
ret
xor
xor
jb
sub
in
ja
jl
adcb
fidivrs
or
mov
sbb
cmp
mov
dec
inc
xor
xchg
sahf
mov
push
call
xchg
mov
cmp
ss
lods
lahf
loopne
mov
push
out
das
outsl
sbb
or
adc
or
dec
push
mov
loope
inc
test
dec
hlt
fs
out
mov
push
mov
inc
loopne
jnp
in
cmp
loopne
adc
repnz
call
addb
mov
adc
pop
cmpsb
data16
push
or
mov
xchg
xchg
idivb
dec
xchg
mov
jle
std
xor
lahf
gs
pop
cmpsl
cmp
adc
pop
fsubr
enter
sbb
out
adc
ss
cli
rolb
mov
fnstcw
in
and
mov
dec
xor
mov
add
imul
push
jmp
add
sahf
cs
repz
push
xchg
sub
es
loope
cs
jae
cltd
xchg
add
pop
adc
in
fsubr
gs
jnp
mov
in
xor
or
push
and
adc
stos
addr16
or
adc
stc
sti
fdivl
stc
xor
mov
cmpsb
jp
lds
xor
and
leave
inc
mov
popa
jne
mov
stos
sti
or
adc
mov
xchg
sbb
gs
clc
shrb
xchg
xchg
leave
and
mov
lea
pop
jnp
pop
sbb
push
xchg
mov
cmp
mov
xchg
rcl
or
push
add
movsl
push
adc
sbb
stc
jno
inc
add
lods
dec
lock
cmp
clc
sbb
cmpsb
int3
popa
int
repnz
sub
xchg
adc
lock
dec
mov
mov
add
jns
push
cmp
leave
mov
add
repz
xlat
ss
in
iret
inc
in
pop
andb
fidivl
out
xchg
mov
sbb
dec
adc
adc
sub
outsl
movsb
sub
xlat
cs
mov
inc
push
shll
int3
adc
loope
cs
in
xor
push
aaa
jno
test
xchg
roll
dec
pop
in
cltd
sub
cmp
stos
push
je
or
xchg
cmp
incb
cmp
ret
xchg
enter
mov
aam
mov
jecxz
xbegin
and
dec
inc
gs
adcl
mov
adc
add
pop
pop
hlt
sub
pushf
adc
or
add
jmp
negb
movsb
sub
pop
push
push
lcall
inc
insb
fisttpll
or
or
fwait
lcall
int3
repz
push
insb
cli
in
push
add
mov
loop
iret
cmp
push
out
adc
lret
adc
orb
je
int
inc
call
sub
popa
sbb
pop
xorl
inc
cltd
into
pop
xor
sbb
stos
scas
and
mov
decl
jmp
or
inc
jle
scas
dec
mov
dec
lahf
mov
in
pusha
outsl
inc
cmpsl
push
lock
shlb
jnp
pop
pop
in
inc
xor
add
lahf
out
scas
inc
cmpsb
lret
pop
sahf
push
xrelease
sbb
outsb
add
adc
mov
cltd
push
cmp
ror
fisttpl
jne
mov
cltd
fst
adcb
ds
movsb
clc
ret
mov
scas
ljmp
inc
add
push
flds
xchg
movsl
cmp
jb
push
cmp
es
insl
jecxz
mov
out
daa
mov
mov
cld
xor
mov
push
leave
int
sbb
popa
mov
xor
sub
mov
pop
out
rcr
shll
test
pcmpeqb
sub
xchg
jne
mov
dec
pop
jle
or
sub
or
lods
ret
loop
mov
scas
xor
xchg
pop
stc
mov
jmp
shlb
out
nop
aas
dec
stos
cwtl
popa
inc
fadds
shlb
push
or
bound
lcall
push
andl
paddb
int3
loope
jb
push
cmp
fldcw
xchg
pop
loope
nop
mov
mov
dec
xchg
shl
sbb
adc
pushf
pushf
push
cmp
inc
cmpsb
inc
jp
mov
and
insb
fmulp
sahf
jbe
ret
aad
inc
mov
jmp
sub
sbb
arpl
lods
sti
lret
insl
loopne,pt
lret
cmp
mov
int3
ja
sbb
mov
scas
mov
jecxz
cmc
nop
notl
insb
arpl
xchg
mov
sbb
loopne
pop
or
out
repnz
inc
sbb
scas
imul
lea
dec
inc
js
js
cwtl
jb
jg
mov
aas
push
scas
jecxz
shrl
jae
fs
adc
xlat
xchg
in
jp
repz
xlat
lea
mov
popa
imul
into
xor
stc
fsub
sub
xchg
stos
lret
sub
aam
mov
outsl
add
jecxz
mov
sbb
cmp
inc
mov
imul
jmp
inc
adc
mov
pminub
in
jnp
call
xor
jge
iret
adc
ret
cmpsl
fnstenv
mov
lret
lods
daa
and
xor
outsb
fcomps
fsubl
test
rcrl
faddl
push
insl
xchg
jle
std
sarb
cmp
cmp
rcll
jne,pt
fdivp
sub
mov
daa
xchg
sub
jp
jecxz
xchg
xor
sbb
cs
mov
inc
dec
aam
adcl
mov
pop
lahf
scas
or
loop
dec
jl
pop
stc
test
sub
and
xor
adc
lods
daa
or
ds
outsl
mov
lahf
xor
out
add
dec
xchg
jge
lret
bound
fcompl
je
aaa
cmp
add
sbb
addr16
xor
icebp
cmp
aam
ljmp
or
mov
and
and
lods
nop
clc
cltd
dec
jmp
mov
into
fwait
and
lods
xor
dec
orb
js
imul
sti
adcl
imul
call
stc
and
dec
fsubrl
loope
leave
jb
adc
js
js
adc
aas
jae
pusha
xchg
mull
inc
sti
xor
mov
pop
push
sub
cwtl
xchg
lods
scas
lods
fcomp
fildll
xchg
lahf
aam
mov
pop
mov
mov
sti
aas
cmpsl
adcb
call
jmp
add
fsubrp
jns
popf
mov
pop
xor
rcl
mov
jo
pop
jb
shrl
pop
loop
add
cmp
repnz
ss
mov
inc
pop
inc
sbb
je
imul
mov
aad
or
nop
and
stos
mov
jle
add
xlat
xor
popa
cltd
cmp
push
icebp
mov
fucomi
movsb
pop
inc
je
cmp
loopne
dec
data16
int
jns
dec
call
out
stos
lock
xchg
test
adc
xchg
jg
dec
fdivs
ret
adc
jbe
xchg
loope
idivb
push
sbb
sti
hlt
inc
fisttps
mov
rolb
cmp
add
jge
out
jg
push
imul
cli
sbb
adc
aaa
repz
push
fiadds
sub
bound
inc
sbb
fmul
push
divl
inc
cwtl
sub
lret
mov
pop
sbb
inc
lret
cmp
sbb
mov
mov
dec
lea
adc
jo
push
arpl
mov
pop
jle
push
ljmp
and
jno
jle
aaa
xor
and
cld
testl
dec
repnz
jl
pushf
and
int3
cmpsl
jg
pop
mov
pop
jns
cmp
jno
xor
sbb
adc
lcall
dec
fistpl
scas
xor
stos
push
xchg
xchg
cmpb
adc
mov
cmp
data16
sti
xchg
sub
mov
mov
je
in
int3
into
add
inc
test
subl
je
aas
fwait
sub
xchg
add
into
lret
cmp
pushf
mov
jg
jp
xchg
fistpl
dec
mov
fistpl
ret
xchg
sbb
add
mov
push
mov
sti
es
mov
dec
pusha
push
pop
jmp
rcrl
outsl
jo
jae
xor
out
and
addb
fcmovb
dec
bound
pushf
mov
inc
sar
push
sbb
mov
or
out
push
jle
dec
test
mov
leave
pop
outsl
sbb
jnp
adc
dec
data16
pushf
ss
sbb
cli
or
push
popf
xchg
aas
loopne
scas
arpl
pop
in
inc
mov
xor
push
pop
jb
lcall
cltd
scas
dec
pop
subl
iret
mov
aam
push
aam
push
xchg
out
adcb
out
jmp
inc
mov
roll
jnp
adc
jp
mov
movsl
dec
dec
sbb
je
mov
pop
push
cwtl
push
repz
push
cmc
lahf
cmp
imul
inc
xchg
in
hlt
rcll
inc
cli
inc
jle
out
rcrl
fisubrl
nop
xor
cmp
lret
mov
jno
xor
test
stos
push
dec
paddb
rorl
sbb
inc
mov
dec
mov
stos
mov
movsb
test
sub
aad
fisubrs
sbb
push
das
pop
sbb
or
or
xor
xor
mov
psubb
mov
jne
jno
bound
or
sub
insl
or
daa
data16
das
jno
repz
fwait
movsb
idivb
in
and
clc
sbb
shr
pop
xor
pop
mov
test
iret
push
daa
sbb
lcall
lods
mov
into
jae
cmp
stc
sbb
sub
mov
daa
cmp
rcrb
aam
test
mov
sbb
test
sbb
rorb
fadd
or
mov
ficoml
leave
inc
or
add
inc
cmp
mov
adc
push
test
fldt
adc
push
les
adc
mov
sbbl
adc
mov
lods
lret
loope
adc
int
insb
mov
lret
outsl
pop
sti
cmp
cmp
lahf
and
push
push
xchg
fildl
or
clc
push
lds
and
cli
call
mov
popf
jmp
insl
mov
imul
jg
sub
ffreep
ds
and
push
xchg
and
pop
cmpsb
fwait
scas
ljmp
decl
lods
and
cmp
shrl
sub
frstor
ja
frstor
nop
lahf
inc
add
sub
cld
cld
cmp
xchg
mov
dec
mov
shll
xorb
push
pop
add
insb
mov
adc
jge
xchg
insl
jno
insb
xor
icebp
inc
popf
dec
jecxz
dec
jle
mov
ds
xor
lock
pusha
jnp
push
pop
adc
js
adc
and
adc
jo
cmpl
mov
loop
popf
push
int
pop
jg
add
daa
xor
dec
cmp
jp
and
mov
mov
cmp
data16
jno
jl
add
hlt
in
mov
xor
sbb
stos
scas
xchg
and
xor
popf
es
add
sub
lret
out
js
pop
inc
and
push
ljmp
je
xor
cmpsb
iret
jbe
add
inc
inc
mov
idivb
push
movsl
xchg
mov
jnp
sarl
mov
in
rorl
xchg
mov
dec
sarl
cmp
pop
test
icebp
cmc
sub
push
test
mov
icebp
aam
and
mov
aam
jno
sbb
sar
jle
add
jo
ret
aam
pop
mov
lods
sbb
jmp
hlt
lea
out
jne
xor
mov
aam
dec
jle
scas
mov
xor
adc
vphadduwd
xor
mov
rorb
adc
sub
add
push
mov
fstpt
ds
cwtl
mov
cli
cmpsl
xchg
add
mov
stc
add
xchg
and
mov
pop
dec
cmp
lea
test
pop
out
xor
ja
mov
xlat
movups
cmp
ret
mov
data16
gs
sub
aad
mov
and
stos
jnp
out
adc
and
xor
xchg
sub
xchg
sub
iret
push
xchg
inc
int3
les
cmp
sbb
mov
xchg
in
insl
jle
push
jle
rclb
ds
sub
cmp
jns
in
jp
or
lret
push
jne
dec
nop
add
xlat
das
inc
daa
lret
or
mov
sub
pop
cli
pop
add
loopne
cwtl
iret
nop
sqrtps
in
inc
dec
add
test
sar
sub
stc
ss
jo
mov
orl
cwtl
cmp
inc
add
adc
cmp
mov
push
jg,pt
movsb
add
sub
cwtl
ret
sub
mov
adc
inc
mov
fnstenv
les
imul
xor
or
mov
rcl
call
add
cltd
push
lods
test
ljmp
das
dec
fists
in
and
xchg
dec
lahf
and
fdivr
mov
mov
lahf
add
mov
loopne
sub
jae
sub
shl
xchg
mov
popa
mov
xorb
inc
jae
xchg
or
inc
pop
sub
lea
xor
pop
lods
out
sahf
lods
jns
jmp
sbb
cwtl
mov
in
jp
ljmp
jo
iret
xchg
xchg
pop
push
jle
xchg
das
pop
push
jl
je
cmp
or
fdivrl
inc
ja
fisttps
adc
jno
cmc
add
popa
in
dec
jp
js
daa
test
hlt
sbb
cmp
test
sbb
xchg
pop
iret
and
stos
sbb
fwait
lds
imul
xor
push
dec
clc
shlb
repz
push
repnz
dec
shl
ret
aaa
lds
fcoms
mov
fsubrl
or
popf
imul
xchg
push
sar
out
inc
push
xchg
dec
sahf
mov
xchg
dec
aad
sub
adc
xchg
leave
pop
push
xchg
jmp
cmpsb
gs
pop
mov
loopne
or
mov
jl
or
int
psubq
loope
fwait
lret
pusha
out
pop
pop
outsl
and
outsb
add
adc
xchg
arpl
jae
in
test
xor
push
dec
xchg
cmpsb
dec
aad
mov
pusha
sub
push
adc
sbb
sbb
lret
popa
arpl
bound
aas
pop
push
and
mov
jl
adc
ficompl
int
mov
iret
and
roll
gs
testl
push
ret
jp
mov
rorb
fisttpl
cmpsl
ret
add
test
pop
es
not
sahf
out
stos
jo
cmp
in
jge
xchg
lods
push
or
es
loopne
out
sub
cmpsl
das
aad
cmc
push
cltd
xor
dec
adc
andb
addr16
add
push
dec
xchg
cmp
push
rcrb
and
je
loopne
lods
outsb
xor
xchg
pop
adc
je
push
aad
loope
prefetch
mov
repnz
stc
leave
mov
fsubs
mov
fwait
mov
pushf
adc
addb
gs
jl
sub
sub
cmp
scas
repz
mov
test
call
fndisi(8087
jne
addr16
scas
adc
cmp
rcrl
sbbb
inc
dec
mov
xchg
jo
fcmove
out
inc
inc
int3
addr16
jns
ucomiss
pop
xor
call
jge
faddl
idivb
mov
sbb
xor
scas
push
scas
pusha
or
or
adc
cld
pop
hlt
mov
add
shl
push
sbb
les
pop
lret
push
push
jecxz
sbb
out
std
aas
add
daa
cmp
pop
jb
sub
cli
inc
adcb
mov
xchg
stos
jb
inc
pop
add
pushf
xor
aas
sub
nop
dec
pop
lret
sti
imul
mov
xchg
sbb
ss
fcoml
jp
dec
pushl
push
inc
jae
mov
ja
imul
xchg
mov
adc
mov
mov
lret
imul
dec
nop
and
push
jl,pt
jle
push
cmp
fmuls
mov
movsl
iret
lea
test
sub
add
xchg
data16
std
in
test
std
popf
jg
cli
add
enter
cmpsb
add
imul
mov
aaa
pop
scas
pop
xchg
lock
jno
je
inc
mov
jo
sbbl
mov
and
mov
pop
cmp
jbe
push
or
movsl
mov
push
jmp
cmpl
add
mov
mov
sub
and
shl
cld
inc
out
mov
mov
cwtl
dec
imul
add
xor
or
jp
and
or
subl
add
inc
mov
fcoms
fidivrl
aaa
out
xchg
adc
leave
xchg
fists
int3
add
cmp
mov
incl
sbb
sbb
mov
aam
add
push
jne
cltd
mov
xor
mov
mov
mov
je
xchg
loop
in
mov
int
mov
std
cmpsb
das
lcall
clc
pop
stc
and
push
adcl
or
mov
aaa
or
cld
js
add
sub
dec
sahf
and
sbb
outsb
jge
popw
push
sbb
aaa
aas
out
mov
pop
fwait
pop
iret
mov
inc
test
cli
loop
sub
fs
mov
dec
sahf
inc
push
nop
bound
cwtl
data16
push
test
loop
popf
mov
adc
push
inc
mov
bound
cmpsb
adc
mov
pop
das
dec
jnp
or
sub
stos
or
lods
mov
aad
cmp
mov
lret
pusha
adc
lcall
xor
movsl
sub
or
cmpsl
cmp
out
filds
mov
test
addb
ljmp
push
cld
rcl
push
nop
dec
jns
pop
cmp
loope
ljmp
js
std
dec
xchg
cld
jp
rclb
sbb
lahf
imul
pop
fsubrl
data16
sbb
cmp
mov
xchg
lods
sbb
push
or
or
fistpll
push
dec
fdivs
addr16
pop
ja
in
jmp
xor
jne
pop
sbb
cmpsl
cli
xchg
mov
inc
mov
jbe
ficoml
scas
adc
pop
int
jle
mov
sarl
add
add
mov
sbb
out
negl
hlt
mov
lahf
xchg
and
gs
ret
sbb
ds
in
dec
bound
cmpsl
js
fmull
scas
jno
es
fwait
lods
scas
xchg
cmc
dec
sub
xor
mov
cmc
jl
rclb
push
lcall
mov
je
arpl
push
aam
fadds
jne
and
cltd
cmp
es
mov
dec
add
xrelease
sbb
pop
inc
jo
cmp
pop
push
mov
lret
mov
jno,pn
cmp
dec
sub
and
fdivrs
mov
sbb
mov
and
mov
pop
dec
les
push
outsl
jle
pop
mov
adc
xor
test
outsl
push
mov
fistps
das
out
sti
dec
dec
cmc
loop
fdivl
fcmovnb
sahf
movsl
xchg
pop
icebp
out
adc
mov
xchg
sbb
mov
out
push
fmuls
sbb
xlat
sub
in
inc
push
outsb
and
pop
xor
in
inc
mov
sbb
fdivr
cwtl
and
xchg
sahf
mov
leave
sbb
xor
sahf
in
out
mov
pop
xchg
jmp
in
nop
jmp
mov
in
add
dec
loope
cmp
pop
mov
mov
pop
movsb
stos
xchg
xor
xor
xorb
bound
inc
mov
and
jg
lock
fcoms
imul
sbb
jl
jle
gs
std
test
sbb
push
ud0
xchg
inc
mov
out
arpl
cmpsb
and
addl
inc
jb
outsl
decl
lcall
xchg
and
xor
mov
cmp
pop
mov
add
sbb
pop
int
pusha
jnp
inc
mov
cwtl
pop
clc
mov
xchg
cmp
lret
lds
push
dec
sub
out
ds
push
out
sub
lds
xchg
mov
sbb
lret
adc
test
das
xchg
lcall
bnd
leave
in
adc
add
stos
fsubs
andl
pop
cltd
inc
push
jae
loopne
cmpsb
std
int3
mov
or
repz
test
mov
into
sbb
mov
leave
lods
push
and
push
mov
add
xlat
mov
adcb
sbb
jg
pop
std
addl
cmpsl
and
stc
mov
and
dec
pop
push
sbb
xchg
incb
lock
mov
inc
insb
cli
dec
push
mov
push
cld
insb
daa
in
cmp
loopne
sbb
sub
push
pushf
sbb
out
daa
leave
loopne
jns
xor
pop
aad
xor
adc
xorb
test
sbb
xchg
stos
jae
mov
mov
loope
xchg
and
sbb
cwtl
hlt
ja
mov
jl
or
mov
mov
je
ja
stos
mov
xchg
lret
jbe
arpl
inc
fwait
sub
pop
and
push
mov
mov
cli
mov
mov
ficomps
loopne
sarb
xor
mov
push
dec
push
nop
pop
int3
or
pop
fbld
fldenv
sbb
les
aam
dec
adc
loop,pn
mov
loop
push
lods
push
test
pop
mov
test
xor
ss
je
inc
pop
push
jnp
cmp
insl
pop
push
sarl
dec
repnz
xchg
inc
dec
loope
jmp
and
std
ja
mov
push
pushfw
out
inc
ds
sub
lahf
jmp
mov
dec
subb
ds
dec
shl
sar
sti
jo
push
and
and
add
ss
mov
dec
inc
std
inc
adc
push
shrb
loopne
xor
pop
shrb
cmp
ret
xchg
std
jb
push
pop
out
cmp
fs
push
adc
repz
jne
gs
gs
push
mov
ja
ret
pop
dec
pop
into
arpl
mov
push
mov
dec
or
dec
jns
and
ret
cmc
insl
cli
rcrl
jp
pop
sbb
mov
fidivl
add
pop
and
mov
jne
loop
nop
push
xchg
mov
shrl
lahf
lods
xor
test
cmpsl
pop
mov
mov
pop
nop
or
iret
test
pop
int3
xchg
xchg
jb
clc
add
add
out
addr16
test
add
fs
mov
adc
int
jecxz
subb
push
scas
xor
in
jge
out
mov
cmc
xchg
pop
es
xchg
lret
adc
iret
or
cli
push
pushf
jns
pop
cmp
adc
std
adc
loope
xchg
stos
cmp
cmovl
mov
mov
imul
out
pop
push
cmpsl
push
xchg
adc
jne
mov
or
sub
dec
or
mov
inc
test
loope
jae
jle
mov
and
pop
mov
xorl
cmp
in
loope
jge
adc
sub
mov
ja
push
daa
cmp
adc
imul
insb
inc
les
jae
jp
xchg
movsl
sub
mov
pushf
inc
call
out
jns
jp
pushl
fidivrs
ret
xchg
pop
adc
shl
mov
insl
ret
hlt
sub
add
sbb
lods
out
dec
adc
outsb
fwait
push
mov
jae
add
stc
cmp
adc
ds
mov
int
sbb
test
daa
xchg
imul
insb
das
jle
push
pop
sarb
dec
daa
cltd
inc
xchg
mov
lcall
mov
scas
add
sub
cs
repnz
repz
fcmovnb
dec
int3
xchg
rclb
aas
cmp
add
cmp
divb
pushf
call
mov
mov
inc
cmp
call
sub
mov
pop
push
or
or
push
jne
jle
xchg
push
xor
dec
test
imul
ret
imul
xchg
adc
push
imul
dec
ret
lret
push
xchg
mov
mov
and
push
mov
fnclex
pop
arpl
cmp
mov
add
push
fnsave
ja
cltd
test
cltd
dec
jp
rcr
je
or
das
aas
in
mov
rorb
pushf
daa
fsubrl
sbb
movsl
ret
fidivl
xor
xchg
das
add
add
sub
add
pop
and
shrl
cld
inc
dec
jge
cmp
inc
xchg
lahf
seto
jae
mov
push
test
lds
lea
and
sbb
loopne
jne
clc
xor
mov
cmp
fstps
cwtl
mov
jecxz
cmp
repnz
jmp
lahf
push
pusha
jg
pushf
dec
sub
mov
faddl
xchg
fnsave
push
push
xor
lods
jg
cli
and
mov
mov
pop
iret
cmpsl
mov
push
or
lods
mov
jns
xchg
inc
scas
cmp
fmull
sbb
add
arpl
mov
incb
daa
inc
movsb
lahf
lahf
std
out
inc
xor
sub
das
out
das
arpl
or
jne
out
ljmp
pop
or
div
sub
adc
cwtl
cwtl
out
ds
in
sbb
ret
jnp
jne
jle
pop
incb
dec
adc
jp
inc
lock
pusha
push
outsl
adc
sbb
loope
cmp
inc
test
dec
pop
inc
cmp
movzwl
push
pusha
sahf
adc
idivl
jmp
push
mov
xor
push
in
repnz
push
sub
popa
lret
popa
mov
dec
mov
inc
jne
mov
enter
or
push
mov
xor
clc
es
or
jl
mov
ss
je
or
sarl
push
push
ja
jb
jecxz
imul
mov
or
leave
xor
mov
rcrb
cmpsb
pop
out
bound
cmp
out
inc
xorl
lea
cmp
mov
adc
mov
jno
xorl
xchg
mov
push
xor
push
js
cmpsb
mov
sub
add
sahf
push
cmpsl
mov
inc
mov
push
loop
inc
jle
das
adc
inc
inc
adc
inc
dec
or
mov
xor
mov
fildll
xchg
test
sub
enter
stc
xchg
mov
test
pop
ljmp
addl
roll
dec
or
popa
test
popa
enter
lea
mov
push
das
xor
test
push
popa
cld
jmp
or
xchg
out
push
outsl
and
pushf
mov
je
jae
aas
xor
jne
loop
cltd
push
std
rcrl
ss
repz
and
pop
out
inc
rcrl
inc
push
out
xor
jno
cmp
imul
bound
ljmp
movsb
insb
jae
mov
inc
dec
imul
xchg
in
popa
js
xor
addb
lods
pushf
push
cmp
rcr
mov
int
adc
jmp
xor
int3
sub
add
es
adc
cmp
test
fcmovb
int
add
and
outsb
mov
sub
mov
inc
aam
push
push
xchg
cmp
push
push
int3
stc
movsl
icebp
stos
jecxz
mov
xor
jno
cmpl
call
enter
sub
je
mov
push
xor
lods
ljmp
mov
pop
das
adc
xchg
sbb
lods
xchg
cmp
and
adc
and
dec
cmpsl
xor
hlt
pop
loope
dec
les
scas
jno
test
fldl
ljmp
les
mov
ds
shrl
dec
xchg
pushf
mov
cli
push
push
aas
bound
mov
call
xchg
add
clc
cmp
cwtl
inc
add
int
push
dec
cmp
ss
lcall
pop
popa
jle
lds
xchg
sarb
loopne
mov
xor
test
jno
imul
fadds
inc
and
push
and
and
and
fsubs
xorb
sbb
mov
repnz
pusha
sub
fdivl
shll
shlb
popf
rorb
xchg
sub
incb
cltd
push
orb
stos
pop
sbb
xchg
lods
repnz
push
push
fimull
mov
jbe
xchg
xchg
in
jbe
popf
test
sbb
push
xlat
out
lea
sarb
orb
ljmp
fwait
pop
cmp
sub
gs
or
in
stc
loopne
insl
imul
mov
fists
ret
mov
push
jns
push
sbb
mov
mov
shlb
sub
test
cmp
sahf
loopne
aaa
js
test
mov
push
or
pop
or
or
mov
push
adc
mov
push
jle
lret
fsubrp
inc
stos
mov
pop
xlat
adc
xor
enter
pcmpgtw
xchg
sar
sbb
pop
xchg
stc
repnz
fwait
push
and
int3
jb
jp
adc
dec
jge
lret
mov
add
pop
sub
jg
je
push
cmpsl
js
aas
cli
inc
inc
or
pop
scas
sbb
sbb
jecxz
adc
inc
push
fstps
and
orl
inc
jmp
insl
xor
xchg
pop
scas
aam
inc
std
js
rorl
in
lcall
les
mov
fsubl
pushf
dec
xchg
ret
scas
fimuls
sbb
dec
mov
movsl
imul
idivl
jge
push
ret
pop
xor
and
sbbb
out
dec
cwtl
shl
imul
pop
aad
xor
jge
arpl
inc
das
mov
outsb
or
stos
dec
jnp
dec
and
sbb
cmp
add
rclb
js
xlat
cs
cmpsl
sub
inc
out
mov
and
mov
pop
cmc
cmp
mov
pop
adc
jmp
mov
xchg
movsl
mov
or
cmpsl
int3
imul
push
jne
fdiv
and
mov
jle
pop
shlb
loope
icebp
lods
cmp
negb
ja
insl
and
rolb
aam
sahf
push
ss
andb
pusha
jae
cli
push
pop
inc
and
dec
test
inc
mov
xchg
insb
sub
and
or
aad
sub
mov
xchg
pop
or
cmpsl
and
pop
fcmove
mov
adc
mov
xchg
add
hlt
mov
xor
or
and
out
loope
enter
fistpl
enter
push
loop
jecxz
stos
addr16
inc
aad
dec
lcall
int3
mov
in
pop
popf
clc
mov
mov
mov
mov
out
adc
jb
fistl
inc
jp
pop
incl
sub
fisttps
inc
cmp
jle
ja
lahf
jge
or
sbb
xchg
push
jge
aas
or
loope
mov
cmpl
dec
xor
and
xor
adc
sub
lret
int
cltd
inc
ljmp
imul
inc
cmp
cmp
cltd
test
cli
inc
int
out
std
icebp
setnp
jo
and
dec
repz
sahf
sub
cmpsb
mov
inc
inc
mov
push
mov
sub
roll
and
inc
add
dec
add
addr16
flds
inc
cmp
outsb
enter
adc
xchg
icebp
test
loopne
pop
or
fdivrl
xor
lret
mov
insb
shll
fcomip
mov
sbb
jne
fwait
sub
jo
imul
ret
add
iret
sub
dec
or
fwait
adc
orb
movsb
rcll
push
or
xlat
jno
or
adc
dec
lods
dec
repnz
mov
push
mov
adc
rcrl
mov
fwait
sub
fidivl
xor
push
mov
mov
pop
sbb
xorl
inc
xchg
inc
push
mov
push
mov
lahf
stos
adc
inc
dec
pop
in
sarb
dec
mov
mov
in
std
inc
push
push
jbe
iret
pop
dec
bnd
fnstsw
push
aas
mov
sbb
aas
pop
inc
sub
pop
jmp
cmp
xchg
mov
add
pop
mov
sahf
lret
enter
mov
jnp
inc
jmp
in
out
jl
mov
out
or
cmpsl
jno
aas
lea
mov
mov
sbb
popf
mov
lods
and
enter
movsb
imul
sbb
mov
dec
shlb
loop
out
lcall
loop
mov
adc
jmp
mov
dec
fsubrs
xchg
cmp
or
mov
adc
jae
popa
fucomip
ret
cwtl
jecxz
mov
xchg
lahf
andl
pushl
adc
aaa
dec
mov
aaa
mov
mov
les
cmp
cmp
addr16
dec
loope
jo
mov
push
jle
cmp
fimuls
add
gs
xchg
sbb
pop
jns
and
sbb
outsb
ret
push
imul
inc
lods
push
icebp
add
adc
push
xor
ret
and
jae
ss
lret
in
and
mov
movsb
dec
pushf
je
mov
mov
and
dec
cmpsl
call
xor
add
adc
jne
cmpsl
and
rcrl
jl
dec
or
fisttps
inc
subl
stc
mov
repz
loop
pop
loopne
imul
lahf
add
mov
dec
jno
imul
mov
mov
cltd
sub
push
mov
fwait
cmp
in
sahf
std
lahf
mov
mov
mov
mov
cltd
mov
dec
sub
xchg
mov
andb
push
in
jne
jge
jae
fyl2x
popa
fs
outsl
jae
xchg
mov
push
cmp
pop
mov
jne
xchg
mov
test
sbb
cmp
pusha
fstpt
je
addl
jg
adc
sbb
mov
enter
mov
push
lea
push
push
mov
push
add
dec
sarb
arpl
dec
push
mov
out
fmull
dec
fwait
and
ret
call
xchg
cld
dec
adcl
negb
aas
adc
insl
push
xchg
andl
pop
adc
fs
in
stc
add
js
sti
mov
popa
repz
stos
inc
sub
dec
and
unpcklps
adc
push
xor
mov
in
or
icebp
mov
dec
fwait
pop
xchg
rcll
in
in
add
sbb
lea
lods
jge
dec
push
aad
mov
sbb
into
mov
les
psubusb
repnz
mov
mov
repnz
dec
jns
pushf
mov
dec
xor
jnp
iret
lods
pop
lcall
enter
jae
sti
mov
jbe
std
inc
movsb
mov
add
ds
jg
mov
adc
push
repz
or
sbb
sbb
inc
adc
push
in
pushf
pop
mov
cmp
and
fcom
in
cmpsb
stos
sar
dec
adcb
sbb
xchg
lret
mov
out
xchg
out
pop
mov
inc
into
test
inc
stos
sbb
movsl
pop
xchg
add
xchg
cmp
rep
xchg
scas
scas
movsl
cmp
jbe
jb
ret
cmpsb
push
mov
adcl
lcall
dec
outsb
repnz
hlt
xchg
inc
mov
incl
mov
xor
mov
xchg
ret
inc
pop
out
adcl
sbb
or
ror
daa
jecxz
xchg
push
mov
jno
test
xor
inc
fidivs
rcrl
incb
jns
push
pop
mov
outsl
push
dec
jge
repnz
lock
xchg
push
fdivrl
mov
jbe
pop
jb
xor
jp
aad
adc
or
inc
shr
mov
leave
jle
lods
shll
icebp
jmp
mov
loopne
add
xor
adc
clc
mov
xchg
fstl
inc
subb
in
cmpsb
inc
adcl
incb
fsincos
push
or
mov
aas
and
sbb
lock
mov
and
out
lret
jo
rorb
sub
fisubrl
enter
push
xchg
lods
pushf
test
dec
push
adc
inc
pop
scas
jnp
fdivrs
xchg
rcrb
sbb
movsl
ss
jbe
mov
lret
js
daa
jp
pop
mov
mov
xor
xchg
add
repnz
mov
cmp
pop
pop
push
movsl
lods
lods
pop
mov
sbb
jg
ror
inc
xchg
fistl
sbb
mov
push
mov
cld
xchg
test
mov
push
stos
inc
data16
aad
or
into
adc
je
ret
sub
adc
rolb
rcll
sub
movsl
lahf
cmp
ja
xchg
fldt
mov
scas
xor
out
push
js
dec
outsb
mov
pop
mov
arpl
cwtl
sbb
xchg
inc
and
adc
cmpsb
push
mov
dec
stc
push
adc
jae
adc
mov
xlat
push
or
lahf
outsl
pusha
repz
mov
outsl
and
jecxz
sub
andl
mov
insb
xchg
or
inc
sbb
mov
in
push
mov
mov
and
adc
jae
adc
mov
jp
daa
mov
std
inc
cwtl
shll
loop
pop
cwtl
jne
xchg
push
out
cwtl
ds
mov
scas
stos
adc
push
repnz
jo
add
scas
or
xchg
push
out
into
bound
sbb
pop
pop
sbb
or
sub
int3
lcall
rorb
cmpsb
lret
lea
dec
cmp
mov
pop
xchg
icebp
loop
loop
cmpsb
push
xchg
jl
mov
pushf
xchg
add
mov
mov
mov
cmp
mov
lret
lea
cmc
ret
in
pop
sahf
arpl
cmp
in
pop
xchg
lcall
adc
xchg
sti
push
push
imul
mov
ret
adc
jno
orb
shrl
xchg
in
sbb
pop
popf
sahf
inc
lahf
stc
jne
pop
or
pop
jo
mov
pushf
mul
sbb
jo
leave
inc
lods
cmc
inc
ds
test
js
sbb
dec
repnz
xchg
pop
inc
push
out
pop
lret
jle
in
icebp
pusha
sub
sbb
inc
or
enter
sahf
jb
push
in
adc
sub
inc
daa
mov
pop
push
and
and
lods
or
dec
data16
iret
std
loopne
stc
in
sub
mov
jne
push
imul
or
push
and
xchg
call
insb
hlt
mov
push
mov
or
test
fistpll
mov
add
dec
jb
cmp
inc
rcl
pop
mov
push
pop
push
stos
inc
in
ds
clc
outsb
push
fld
mov
and
jg
stos
sahf
loop
sbb
sbb
sub
mov
out
sti
sub
xorb
clc
idivb
hlt
or
inc
cmp
pop
pop
mov
jne
add
sbb
fs
rclb
pop
cmp
stc
adc
xchg
mov
jo
loopne
jp
adc
xchg
ja
mov
insb
or
sbb
loopne
cld
movsb
xchg
sbb
cli
data16
pop
shlb
imul
aad
push
jmp
cmpsl
jmp
shll
pop
xor
je
nop
mov
mov
aad
sbb
push
jg
fwait
xchg
add
stc
adc
daa
fsubrs
in
mov
sbb
cmp
jno
mov
jb
lret
adc
xchg
xchg
pop
add
in
mov
pop
negl
add
mov
and
fcoml
pusha
lahf
test
ja
pop
jg
push
rclb
xchg
lock
loopne
gs
add
pushf
outsb
xchg
or
into
and
add
mov
enter
or
lods
out
or
iret
push
inc
cmp
dec
inc
dec
stos
lods
cmp
mov
jge
sub
sub
test
add
sbb
repz
mov
add
jle
daa
call
nop
xchg
or
fidivl
inc
or
push
inc
rorb
cmpb
jns
cltd
jge
imull
pusha
ficomps
out
daa
scas
add
pop
fsubr
xchg
adc
mov
add
inc
into
lds
mov
add
push
lock
pop
inc
pop
mov
or
insb
cmc
xchg
ror
cmpsb
push
lret
lock
cmp
test
adc
jns
es
cmp
xor
xor
pop
add
sub
imul
data16
in
xchg
negb
data16
arpl
cltd
sbb
sti
dec
add
je
adc
xor
jg
cmp
notl
insb
add
test
inc
jnp
insb
xor
mov
jbe
jnp
push
push
hlt
or
inc
out
subb
out
push
pop
rcll
adc
dec
scas
das
mov
mov
cld
jmp
stos
xchg
cmpsl
xchg
mulb
or
pop
jecxz
int3
sahf
test
negb
pmaxsw
ret
pop
sahf
je
fucomip
adc
xor
test
cltd
xchg
mov
add
pop
push
outsb
xchg
sub
fisubl
sub
push
or
jp
pop
sbbl
pop
in
loop
dec
cltd
in
das
out
pop
dec
xor
add
push
fs
int3
mov
repnz
movsb
bound
or
cs
bound
test
fwait
pop
repnz
mov
mov
push
inc
inc
pop
xor
les
loop
fs
mov
or
ret
shlb
gs
or
lods
and
fisttps
and
vpsrld
shll
xchg
icebp
cld
push
pop
or
outsb
xchg
jg
fnstenv
jl
mov
leave
imul
jns
aam
mov
cmpsl
fs
mov
mov
in
ds
and
sbb
stos
fxsave
cmpsb
dec
in
add
call
addr16
mov
jnp
daa
iret
mov
mov
pushf
lea
aam
mov
mov
ljmp
dec
adc
or
jle
pop
lret
jle
arpl
sbb
outsb
enter
test
adc
sub
mulb
fsubrp
addr16
stc
sub
cmpsl
mull
adc
pop
repnz
jmp
shlb
sbb
sbb
mov
loop
dec
outsb
or
out
inc
pop
clc
lods
mov
jo
out
repnz
fstl
imul
and
xor
mov
stos
mov
push
aaa
mov
and
cmpsb
imul
icebp
xlat
je
adc
cld
mov
lods
mov
mov
in
outsb
leave
mov
add
repz
pop
iret
sub
rolb
mov
mov
orl
icebp
push
xchg
pop
lahf
push
data16
xor
out
mov
data16
lods
ret
movsl
push
xchg
push
xchg
stos
dec
sti
jl
sub
cmp
xor
mov
out
nop
loope
ljmp
xchg
lock
mov
lret
mov
das
je
add
or
sbb
mov
notb
xor
pushf
mov
xor
push
aam
adc
or
scas
dec
jecxz
imul
dec
int3
push
sbb
dec
out
cmp
push
mov
stos
cmpb
jbe
xchg
scas
mov
cmp
icebp
movsb
out
icebp
lcall
scas
loope
dec
repnz
cwtl
imul
adc
add
nop
popf
repz
xor
test
pop
test
aam
push
mov
movsl
inc
xchg
outsb
loop
addl
mov
arpl
addr16
loope
ret
adc
adc
lods
cs
or
rcll
pop
push
dec
pop
dec
cwtl
sbb
push
jbe
out
shll
or
daa
and
outsl
push
mov
add
mov
sub
lret
mov
scas
mov
jns
hlt
pop
jb
sbb
lods
jo
notl
leave
rcr
int3
div
out
jle
lret
lahf
push
cmp
fimuls
scas
pop
xchg
push
in
pop
out
add
inc
push
incl
jge
cmp
pop
inc
mov
add
xchg
icebp
push
ja
sbb
or
fmuls
add
insl
orb
add
gs
sub
movsl
cmp
dec
ret
aad
inc
jae
bound
or
ja
int
mov
cmpsb
out
pop
out
stos
sub
das
cmpsl
test
mov
push
dec
jg
push
div
dec
mov
rcrb
cld
sbb
in
or
mov
lret
pop
int
es
js
or
addb
xchg
or
jns
fs
lret
or
scas
xor
lret
cmc
add
dec
shlb
daa
push
pop
push
push
and
lods
dec
add
loope
lea
cmp
inc
dec
xchg
cmc
xor
jo
stos
gs
mov
mov
in
cmp
xchg
add
adc
mov
movsb
pop
pusha
adc
clc
outsb
cmp
add
lcall
adc
mov
xlat
sub
xchg
inc
lods
sub
and
add
jge
sbb
popa
jns
xor
adc
sarl
aad
inc
xchg
jnp
pop
lods
lock
cmp
test
inc
scas
mov
and
out
push
cmpsb
ljmp
dec
vmovmskps
out
mov
negl
jl
imul
add
pop
sahf
or
inc
test
push
insb
and
cmpsl
cltd
push
jle
clc
adc
xor
dec
mov
adc
ljmp
xor
int
mov
xchg
outsb
jae
adc
fsubrs
test
or
nop
aam
cmp
push
lock
inc
les
addr16
fmull
jecxz
call
push
ja
jns
dec
out
xor
shrb
or
or
outsl
or
mov
mov
call
mov
mov
mov
rclb
fstpl
and
test
adc
loopne
shrl
shld
sbb
mov
xchg
push
in
mov
add
pop
cwtl
pusha
and
dec
inc
clc
xchg
lret
xchg
dec
xchg
mov
dec
test
cmp
rcll
pop
cmpsb
add
xchg
add
mov
roll
lea
adc
inc
sbb
pusha
push
cmpsb
sub
mov
pop
push
fsubl
lahf
mov
xchg
call
xchg
js
in
outsl
xchg
cmp
imul
pop
push
and
jmp
rolb
jg
test
xchg
jo
dec
or
pop
add
jns
dec
mov
adc
sub
mov
or
mov
out
jnp
gs
mov
cmp
aam
add
lods
push
or
ret
sub
hlt
daa
pop
in
sarb
adc
pop
push
shrb
and
cmp
push
adc
dec
leave
popa
nop
icebp
call
jns
and
xor
aad
in
jno
mov
jmp
hlt
xor
adc
arpl
cmpsl
xchg
loop
repz
dec
and
pop
adc
mov
scas
add
cli
shr
rolb
ja
add
cmpl
repnz
aad
bound
lret
xor
mov
jb
mov
pop
and
setge
test
in
pop
xchg
cwtl
cltd
pop
xchg
jmp
scas
lock
xchg
inc
xchg
sub
adc
imul
mov
cmpl
stos
or
add
pop
jmp
movsl
loop
stc
dec
mov
cltd
ja
outsb
and
inc
cltd
sbb
decb
mov
cmp
movsb
pop
sti
push
fwait
and
int3
data16
leave
xor
scas
mov
test
roll
mov
sub
sarb
sbb
xor
and
rolb
imul
and
lcall
mov
mov
cmp
dec
lock
repnz
js
cmp
rorb
add
sbb
add
mov
dec
cld
or
jbe
cld
loopne
xchg
jns
jno
imull
outsb
xchg
xor
cli
mov
lahf
cmp
pop
jmp
cmp
ds
adc
mov
jne
jl
pusha
add
js
mov
adc
mov
lds
enter
cmp
fcmovne
mov
sub
aad
shll
sbb
jo
mov
repz
pusha
jno
xor
inc
pop
cmpsb
outsl
cwtl
jecxz
push
fwait
into
push
lods
push
cmp
insb
dec
pop
clc
pop
test
ljmp
sbb
add
xor
or
nop
cmp
xchg
out
out
js
cmp
int
xchg
sub
bound
jp
cli
xor
dec
xchg
sbb
jno
push
mov
mov
sbb
mov
enter
and
loopne
pop
fwait
rcrl
xchg
sbb
mov
sub
lods
jmp
loopne
mov
fidivrs
clc
mov
insb
lret
dec
cmp
aam
stc
repz
icebp
hlt
xorl
xlat
pop
jecxz
cs
sub
adc
psrld
cs
test
sti
mov
jle
xor
jle
inc
test
es
xchg
push
inc
xchg
movsl
mov
jg
mov
out
push
inc
mov
pushf
pushf
std
icebp
fbld
mov
dec
pop
addr16
or
mov
inc
imull
push
or
ljmp
sub
call
call
mov
addr16
xchg
or
or
lahf
pusha
ret
inc
lods
sbb
xchg
dec
add
mov
fwait
cmc
push
pop
imul
push
mov
jb
dec
inc
push
mov
shrl
push
inc
or
repz
loopne
int
mov
insl
repz
and
movsb
fldcw
adc
xor
addr16
jno
jg
cltd
add
sbb
lahf
jmp
movsb
mov
sti
les
test
jno
adc
mov
sti
pop
push
jae
xor
imul
loopne
push
enter
ss
jnp
sahf
mov
cmpsl
pop
sub
xor
xor
mov
inc
int3
cwtl
xchg
xor
push
cmpsb
mov
push
loopne
neg
mov
test
xor
push
pop
test
cmpsb
roll
and
roll
out
push
and
in
xchg
xor
lea
lret
mov
cmp
pop
call
call
add
fsub
push
lock
ja
iret
std
fcoml
xchg
mov
inc
fisubrl
mov
push
jecxz
rcll
fs
icebp
in
pop
gs
sti
imull
test
sbb
mov
inc
pop
xchg
xor
jl
ret
lahf
adc
mov
std
icebp
cwtl
and
sbb
xor
movsb
vmwrite
mov
dec
xor
repz
int3
fwait
xchg
repnz
jmp
sub
mov
mov
enter
xchg
call
fst
inc
clc
das
push
scas
mov
ljmp
push
lret
inc
or
enter
das
arpl
cmpsb
adc
sub
fiadds
mov
imul
xchg
sub
addr16
jno
mov
mov
movsb
push
stos
aaa
and
adc
sahf
fiaddl
repnz
orl
fmuls
push
das
sti
mov
loope
out
xacquire
in
ret
jl
loop
push
push
xlat
out
daa
ret
ret
inc
inc
ret
add
add
stos
loop
fimuls
xchg
shlb
jmp
hlt
in
outsl
push
testl
mov
jl
mov
xchg
jae
fsts
mov
cld
fstpl
enter
or
push
mov
and
jecxz
xor
insl
or
dec
rcl
xchg
pop
add
insl
ja
test
mov
cs
lods
adc
ljmp
mov
mov
xor
jbe
dec
inc
gs
jecxz
lret
andl
or
mov
shrb
jle
les
dec
aas
jmp
adc
test
push
mov
sbb
cmp
pop
js
fldl
inc
add
and
popf
pop
pop
lahf
insb
xlat
cmp
push
out
lahf
gs
pop
pop
push
dec
inc
mov
stos
rcll
int3
ljmp
xchg
psubusw
jno
mov
pop
insl
pushf
mov
xchg
imulb
mov
adc
pop
push
in
push
into
outsb
lret
enter
bound
push
rolb
mov
fs
xor
add
mov
dec
adc
arpl
movsb
in
leave
mov
les
pushf
int3
ds
shll
push
adcb
pusha
mov
daa
test
sub
sbb
fdivrp
adc
adc
push
push
pushf
fisubrs
movsl
hlt
sbb
test
mov
test
outsb
cld
test
loope
pop
sti
jecxz
adc
cmpsw
push
push
push
sub
ss
movsl
pop
test
call
push
or
rclb
into
mov
xchg
mov
aaa
sbb
mov
xchg
out
outsl
push
xchg
cmp
nop
mov
adc
pop
in
stos
cli
js
ljmp
and
ljmp
xchg
cmpsb
push
popf
jb
loopne
test
inc
mov
mov
mov
sub
jae
xor
pop
cmp
mov
fsubl
dec
out
std
gs
out
ja
add
ljmp
lods
icebp
add
and
cmpl
rorb
stos
fadds
ret
mov
mov
or
and
daa
and
enter
mov
inc
xchg
jbe
iret
xor
and
mov
jg
dec
cmpsl
push
mov
std
xor
stc
jp
aas
pop
pop
lea
jbe
idivl
std
add
loop
int
jns
std
xlat
shlb
aad
adc
rclb
mov
sbb
ret
mov
dec
mov
jae
and
nop
aas
imul
mov
mov
push
cmp
jns
push
jbe
and
and
imul
sub
xchg
or
adc
or
cltd
into
arpl
push
jp
push
pop
mov
leave
xchg
add
or
imul
pop
jmp
push
add
or
xlat
push
loopne
push
mov
std
dec
stc
enter
cmc
push
pop
mov
lods
add
paddw
testl
pusha
ficoms
or
iret
int3
mov
add
mov
push
rorl
ror
push
mov
loop
push
push
adc
sbb
mov
cmpsl
imul
inc
in
mov
aas
pop
mov
test
mov
mov
in
mov
cmpsl
push
stc
pop
pop
mov
fidivs
std
jecxz
cmp
push
push
dec
mov
int3
fdivrl
sub
pop
sbb
aam
lods
dec
ret
mov
scas
cwtl
xor
push
mov
pop
into
mov
xor
dec
jl
fists
rdmsr
imul
lahf
mov
aam
pop
jge
push
dec
lret
mov
adcb
xchg
repz
xchg
rcrl
in
shlb
repz
mov
bound
xchg
push
outsl
push
sbb
xchg
cmp
xor
es
ljmp
ret
mov
shlb
popf
imul
mov
xchg
addb
pop
mov
jo
mov
xchg
jno
cmpsb
test
sbb
cmpw
bound
xchg
shll
and
xor
mov
cwtl
jle
cmp
je
inc
inc
mov
jne
or
fnstenv
xchg
sub
ds
jnp
dec
imul
dec
lret
dec
pop
adc
pop
outsb
nop
clc
pop
stos
into
or
movsl
mov
inc
xor
nop
div
jne
push
mov
cmp
and
jle
rol
xor
add
into
xchg
lahf
add
push
push
xor
dec
pop
stos
std
ret
xchg
push
sarb
mov
fists
sbb
into
out
adcb
bound
popa
mov
shll
sub
cmp
rol
loope
jae
sbb
aam
push
sub
xor
ret
add
roll
iret
rcr
loope
shll
push
cwtl
adc
int3
movsl
lock
ljmp
cmp
int3
sbb
leave
adc
or
push
pop
sbb
cs
fstpt
outsl
cmc
xchg
mov
std
into
das
popf
ss
and
loope
dec
cs
or
lcall
pusha
movsb
sbb
pop
roll
fnsave
test
pop
rcll
jne
loopne
inc
loopne
pushf
cmp
and
scas
xlat
orl
lock
cmc
adc
mov
sti
mov
popf
cli
daa
mov
or
adc
mov
cs
roll
xchg
icebp
in
inc
pop
pop
outsb
adc
cmp
add
push
movsb
and
sbb
mov
test
test
daa
incb
dec
jno
push
jb
mov
cltd
out
mov
inc
in
pop
add
jge
mov
cs
inc
mov
adc
jne
push
aad
add
outsl
sti
fwait
sbb
push
rol
xchg
jae
test
jnp
xor
dec
and
xlat
std
mov
push
add
lods
jae
jb
cmp
pop
sbb
ficomps
idiv
jl
push
push
mov
cmp
xor
pop
rol
xor
mov
pop
sub
cmp
xor
pop
push
ret
push
cld
jg
or
sbb
pop
ss
xchg
sbb
sbb
fs
sub
push
ret
sub
movsl
shll
xchg
mov
or
inc
cmp
add
insl
pop
pop
bound
lods
movsl
inc
pop
push
iret
cld
lds
insl
lret
test
inc
xor
aas
pop
xor
or
repnz
push
sub
clc
inc
nop
cmpsl
xor
push
sbb
or
xlat
adc
add
mov
pop
daa
iret
and
jns
flds
aad
xor
fbld
in
jl
add
adc
inc
iret
inc
fstl
inc
test
mov
jl
je
jae
cmp
lahf
repz
and
stc
push
out
not
loop
loopne
cs
aaa
insb
jno
rcl
push
xchg
jp
jnp
loopne
outsl
and
lret
flds
jo
cmpsb
js
sahf
popa
in
dec
mov
daa
xor
cmp
inc
mov
add
in
fdivs
dec
mov
fnstenv
pop
je
sbbl
mov
divb
aaa
jnp
dec
mov
cmp
mov
jg
xor
pop
sub
cmp
xchg
mov
leave
mov
js
add
xchg
outsl
rol
clc
or
daa
mov
cltd
stc
inc
imul
cs
imul
mov
jae
adc
mov
pop
scas
adc
imul
jo
dec
pop
pop
or
dec
push
jmp
xlat
shl
inc
insb
mov
imul
inc
divl
xchg
adcl
cmpsb
pop
inc
push
bound
flds
cmpl
jmp
push
jb
inc
jge
add
and
movsl
pop
cwtd
jmp
out
js
insl
inc
subb
mov
jg
mov
inc
inc
js
push
pop
and
jns
testl
xchg
repnz
test
pop
popf
push
lock
mov
inc
inc
bound
pushf
pop
sub
mov
aaa
push
imul
jle
cld
xlat
gs
aas
sarb
dec
dec
in
dec
and
fidivrs
mov
xor
sbb
sbb
mov
imul
sub
rclb
sub
rcll
push
cli
js
clc
mov
in
add
fadds
test
loop
iret
pop
or
lods
jle
inc
or
pop
mov
push
sbb
lds
imul
dec
fisubrl
xchg
dec
jg
jmp
push
dec
das
ret
dec
loop
mov
unpcklps
andb
ss
jg
loopne
scas
cltd
aas
sub
enter
leave
push
sti
pop
inc
ja
int
mov
ret
mov
ret
int
sbb
sub
insb
sbb
cld
jno
stc
push
mov
push
cltd
push
mov
and
test
xchg
adc
adc
jnp
adc
int
push
clc
es
mov
adc
and
fstpl
into
jmp
movsb
adc
sarb
xchg
jle
clc
loope
adc
add
jg
add
dec
lock
xor
and
dec
and
repnz
jecxz
testb
daa
mov
and
insl
cmp
ret
inc
xor
adc
push
push
js
jle
inc
and
mov
outsb
mov
out
pop
out
push
adc
mov
xor
mov
popl
imul
cmp
popf
mov
push
insb
sbb
fdivl
and
out
cmp
das
scas
insl
mov
ljmp
repz
xor
cmc
cmp
mov
sbb
fistps
popa
push
mov
mov
aad
cld
insl
lods
fcmovnbe
mov
dec
dec
int
into
mov
or
add
mov
sti
sbb
pop
mov
dec
dec
ss
sub
stos
jno
outsb
nop
in
lea
ja
mov
jnp
mov
in
pop
pop
mov
movsl
iret
arpl
pusha
aaa
movsb
sbb
mov
jno
or
iret
std
mov
stc
rorl
pop
adc
into
push
insb
aam
dec
and
dec
lret
jns
xorl
ss
jecxz
loopne
rcpps
out
int3
int
orl
je
sub
into
jle
ret
leave
pop
mov
cwtl
shlb
jno
fwait
jmp
insl
mov
cmc
mov
pop
mov
push
stc
fnstsw
mov
pop
testb
aas
jo
jl
mov
mov
movsl
sti
shrl
xor
dec
cmp
fidivrl
push
fwait
je
je
add
ret
lcall
push
jne
jae
mov
adc
mov
mov
dec
loopne
push
insl
popw
xor
xadd
cmp
jnp
cmp
fisttpll
lods
repnz
add
jbe
mov
test
cmp
mov
cltd
mov
and
xor
imul
pop
mov
mulb
insl
pop
pop
xchg
xchg
test
mov
and
pop
cmp
mov
sub
movsb
inc
push
fwait
jmp
push
push
jecxz
repz
mov
fstps
lret
cltd
repnz
ss
js
fstl
fcoml
stos
rorb
pop
jmp
sarb
sahf
mov
and
cmpsb
inc
aas
mov
or
aad
jae
sbb
push
sbb
pushf
ljmp
cmp
sub
idivl
hlt
mov
cmc
insl
cmp
out
jmp
imul
inc
test
jmp
imul
sbb
dec
outsb
mov
ficompl
pop
mov
lret
fcompl
rorl
lret
gs
adc
jbe
in
add
xor
fcomps
xchg
adc
loopne
mov
add
icebp
scas
mov
lcall
add
inc
cmp
iret
mov
inc
call
jmp
pop
inc
outsb
fistpl
les
mov
shll
mov
jns
push
inc
jg
shll
mov
in
in
bound
xor
lods
ret
push
and
mov
in
xor
push
mov
les
lds
inc
xchg
adc
pop
mov
or
xor
push
dec
adc
cmp
movsl
cmp
and
mov
or
ljmp
js
sti
dec
mov
cli
push
xlat
xchg
in
push
enter
test
iret
jbe
int
jno
xor
xchg
xchg
jbe
add
xchg
jno
loopne
push
fldl
loopne
cmp
pop
aas
lahf
jns
xchg
fidivl
jae
adc
loopne
repz
es
cld
leave
dec
xor
aad
xchg
sub
adc
loop
ret
xor
ret
cld
filds
inc
mov
and
cmp
add
sti
test
inc
lret
push
sbb
bound
add
mov
in
pop
mov
shll
movntq
lods
repnz
xor
icebp
mov
test
pop
xchg
out
lahf
test
sbb
mov
pop
inc
xor
mov
jmp
adc
out
sahf
cmp
dec
pusha
loop
sahf
jns
push
sarl
jae
cli
into
jmp
aad
movsl
xchg
cs
xchg
add
pop
mov
sub
or
ret
daa
out
and
rcr
movsb
outsl
loopne
test
sbb
fsts
dec
mov
xor
and
inc
xor
sahf
mov
jae
inc
cmpsl
inc
test
aas
out
gs
sub
fwait
and
pop
pushf
mov
mov
out
mov
in
xchg
jecxz
into
dec
jb
rolb
es
jmp
lahf
andl
shl
in
sub
mov
in
cltd
out
mov
testb
sbb
in
outsl
jecxz
and
xlat
sbb
mov
loopne
pop
or
dec
shr
and
cmp
xor
or
xor
pop
scas
sub
inc
inc
push
add
pop
pusha
fsubr
inc
int3
adc
jno
push
or
mov
data16
pushf
pop
sbb
imul
mov
imulb
xchg
sub
push
add
lods
cmc
popf
jne
push
push
inc
adc
xor
pop
mov
dec
fldcw
mov
mov
pop
mov
dec
in
xor
lcall
out
pusha
dec
sub
out
fdivrs
out
lret
pop
stc
enter
fwait
sbb
clc
push
inc
je
repnz
pop
aam
adc
popf
ljmp
jecxz
xchg
shll
jge
mov
or
loop
leave
sub
xchg
out
jae
sarl
jne
inc
aam
dec
mov
out
call
ljmp
xchg
xor
xchg
mov
inc
mov
inc
inc
pop
pop
daa
dec
popf
add
mov
jl
mov
push
add
cmp
out
mov
cmp
std
imul
imul
mov
in
shll
xor
xor
out
das
imull
adc
cmp
jp
les
adc
repnz
add
mov
and
sub
sbb
add
fldpi
xchg
cmp
in
dec
out
and
push
js
pop
cld
es
in
cmc
lea
adc
sbb
outsl
xchg
hlt
loopne
or
cltd
lea
adc
scas
into
icebp
sub
inc
icebp
inc
sbb
pop
inc
push
sub
movsl
and
test
out
movsb
dec
loop
out
test
pop
push
and
xchg
out
cwtl
int3
fs
cli
and
xchg
in
adc
ja
push
jl
rolb
lea
sbbl
xor
sysret
cmpsl
arpl
xor
cwtl
and
mov
inc
lret
leave
mov
mov
mov
dec
ds
scas
mov
xchg
jmp
cld
cmp
in
jg
icebp
cli
js
mov
push
push
inc
test
jp
out
cmpsb
xor
mov
nop
lds
xor
push
sub
push
mov
sub
push
pop
and
fists
lds
test
mov
cmpsl
or
add
shl
js
shlb
leave
bound
scas
insb
in
addr16
lods
jbe
stc
cltd
jmp
cmpsl
adc
xor
sub
xchg
dec
neg
arpl
pushf
movsb
int3
popa
negl
adc
jae
lods
xor
fistps
loopne
cmp
filds
std
das
adc
imulb
adc
std
je
jo
dec
sbb
nop
cmp
addr16
xchg
in
xchg
icebp
dec
fwait
sar
test
push
add
hlt
mov
fdivp
daa
cmp
subl
cmp
in
add
pop
add
sbbb
clc
sbb
mov
in
rcrl
jnp
stos
adc
andb
enter
lock
hlt
sbb
out
hlt
lret
mov
dec
and
push
cmp
xchg
dec
jmp
test
xchg
xchg
mov
int
lods
scas
ds
cmp
mov
or
add
stos
sbb
sub
xchg
test
mov
or
pop
and
jns
imul
cmc
xchg
or
dec
jmp
sbb
push
push
dec
bound
psubq
pop
cmpsl
cli
or
inc
andl
mulb
aad
cmp
gs
cld
mov
xor
mov
jmp
push
mov
and
in
lods
jnp
mov
lods
test
es
repnz
adc
movsb
aaa
inc
lret
pop
jns
adc
mov
test
push
jns
stc
mov
movsl
das
jmp
dec
cmp
cmp
mov
call
or
sbb
jp
in
sub
add
ljmp
fld
push
pop
pop
subps
inc
xchg
adc
hlt
int
xor
sbb
push
mov
aam
or
jl
jbe
xor
stos
lcall
cmp
mov
repz
mov
cld
pusha
cmp
mov
mov
test
jno
pop
sub
fiadds
sahf
movsl
dec
sti
adc
adc
jmp
cmp
js
out
das
dec
sbb
int
jp
lahf
cmp
sub
xchg
xor
pop
pushf
fsubs
lock
nop
in
scas
mov
lds
sub
outsb
jecxz
enter
push
xchg
cmp
push
mov
mov
inc
movsb
jmp
bound
jle
out
jno
pop
push
inc
into
inc
mov
ret
pop
push
jne
leave
int3
cmp
ficomps
insb
and
push
push
and
xchg
mov
pusha
push
cmpsb
pop
xorl
mov
fdivrl
mul
bound
cmp
out
adc
std
sub
push
add
loope
cmc
or
pop
inc
or
mov
sbbb
pop
in
fidivrl
mov
hlt
add
add
cmp
testl
scas
sbb
cld
mov
push
inc
je
lods
xlat
and
fstpt
jbe
dec
jnp
subl
mov
jnp
or
rcll
pop
or
inc
mov
pop
mov
clc
xchg
or
fsubl
fiadds
mov
popf
lods
cmp
pop
mov
outsl
mov
lock
or
iret
mov
arpl
ljmp
popa
mov
and
add
mov
mov
idivb
dec
add
icebp
mov
das
enter
adc
jp
mov
std
cld
outsl
and
push
lahf
imull
xchg
mov
sub
icebp
cld
js
leave
icebp
lret
roll
insb
sarl
or
xorl
xchg
pop
xchg
sarl
dec
ret
xor
mov
pop
repnz
sub
xchg
repz
sub
cmp
scas
ret
adc
sbb
and
bound
add
lcall
es
ja
divb
lcall
and
push
xchg
dec
sbb
push
cmp
mov
cmp
es
dec
andl
xor
push
mov
add
ret
cli
sti
fiadds
test
jmp
push
ds
push
test
hlt
filds
mov
adc
repnz
pop
subb
lods
adc
stc
push
js
inc
cmp
les
xchg
movntq
out
orb
cmpsb
stos
cmp
pop
int
aas
xchg
xchg
pushf
dec
sbb
mov
or
cmp
mov
jecxz
ret
jns
ret
jnp
cltd
jb
ja
inc
push
pop
ds
adc
sti
pop
into
mov
mov
fidivl
adc
daa
cmp
sahf
lret
ds
int3
stos
sahf
scas
push
inc
xchg
rcl
mov
push
cmpsl
inc
add
daa
push
mov
and
lods
psllw
repz
cwtl
mov
int
xchg
jle
sub
cli
int3
sub
stos
test
mov
js
xor
push
mov
cmp
rcll
fwait
insb
jae
sahf
orw
jp
lods
or
rolb
hlt
enter
adc
dec
xor
xor
jecxz
jnp,pt
dec
adc
jl
push
adc
pushf
xchg
dec
in
cmp
dec
daa
xchg
outsl
int
xlat
cmc
repz
ret
xchg
pushf
movsb
bound
push
cld
xchg
fsubs
fcoms
adc
cltd
push
popf
mov
inc
rorl
or
nop
or
push
jnp
mov
test
mov
xchg
xlat
adcl
int3
stc
and
and
inc
mov
dec
popa
add
and
pop
jp
jle
hlt
fnstenv
test
lds
in
stos
divl
cmp
pushf
or
fistpll
add
insb
mov
mov
mov
les
or
fidivl
sbb
cmp
imul
shll
and
and
mov
cli
sti
mov
fmuls
fwait
or
cmp
cltd
jmp
inc
xchg
mov
jecxz
push
ljmp
int3
andb
test
mov
sbb
or
jl
xchg
cmc
xor
cmp
out
and
jp
cmpsb
or
enter
cmp
mov
fnstenv
test
mov
out
cld
pushf
inc
push
and
sbb
imul
add
out
pop
sahf
testb
cwtl
pop
pushf
pushf
shrl
inc
sub
and
out
enter
jb
outsb
cmpb
sub
int3
jo
push
dec
inc
lret
pop
adc
sbb
jl
push
push
movsb
add
push
sub
and
sub
and
and
adc
jl
out
cmpsb
jb
cs
xchg
xor
ficompl
push
mov
push
mov
daa
testb
ds
insb
mov
pushl
fists
push
xchg
mov
and
sbb
jge
iret
or
lcall
add
fidivs
mov
insb
dec
lea
in
aas
leave
pushf
push
repz
mov
stos
xor
pop
loopne
sub
xor
sub
xchg
or
in
mov
rep
fistpll
and
addb
mov
and
mov
icebp
jbe
pop
clc
movl
jecxz
mov
scas
int3
std
and
js
pop
xchg
adc
pop
out
into
add
scas
cltd
out
jp
xor
outsb
jmp
add
push
xchg
dec
bnd
push
xlat
out
mov
test
in
das
fsubrl
out
out
arpl
adc
cmp
or
movsb
inc
ror
out
adc
adc
gs
push
xor
mov
lahf
roll
sub
xor
pop
int
xchg
call
xchg
fimuls
and
call
add
enter
sbb
jmp
push
cmp
insb
dec
imul
int3
adc
mov
std
into
lret
cmp
call
push
cwtl
jp
cmp
fimuls
test
arpl
cmp
je,pn
add
enter
popa
push
ja
mov
fdivrs
push
sbb
ljmp
lret
ja
gs
mov
adc
dec
cmpsl
les
push
leave
cmp
jo
xor
cmpl
or
out
aas
jecxz
cs
lret
les
rep
loope
cli
mov
js
jnp
adc
int3
mov
inc
insl
inc
lds
cmpsb
add
sbb
mov
mov
outsb
xchg
adc
mov
mov
and
xchg
or
pop
mov
popa
sbb
gs
cli
jl
test
push
or
and
add
mov
mov
xor
ret
and
rolb
mov
cmovae
repz
mov
xchg
lods
mov
mov
movsl
idivl
ret
mov
ficoms
jmp
out
jmp
into
xchg
mov
imul
push
add
mov
adc
mov
jl
xor
sub
or
das
xor
mov
add
es
xor
cmp
cld
xor
stos
xchg
lret
pop
inc
add
pop
dec
into
xlat
inc
outsb
lret
icebp
add
cli
lds
xchg
sbb
mov
sbb
adc
jle
dec
cmp
xor
pop
imul
sub
mov
cmp
pop
dec
cmc
pop
fildl
ss
mov
movsb
mov
inc
fnstenv
mov
jae
dec
fisubl
popf
or
and
or
hlt
add
jle
dec
add
xchg
xor
test
mov
push
cmpsb
lods
mov
inc
pusha
cmp
dec
repz
xchg
lret
aas
mov
sbb
or
pop
stos
bsf
cmp
cmp
sahf
shlb
loope
test
pushf
bound
mov
jge
mov
push
movsl
push
faddl
clc
orb
mov
xor
lahf
adc
cltd
int3
rolb
addr16
in
sub
inc
xor
stos
ja
and
pop
ds
adc
iret
xor
les
ret
push
push
push
add
lret
sbb
mov
std
sti
out
fistpl
lcall
mov
mov
mov
inc
jmp
mov
jns
mov
mov
ja
loope
mov
or
sbb
xor
cmp
sahf
outsb
repz
int3
sti
sbb
ficomps
lret
push
inc
xchg
int3
loope
push
pop
push
or
mov
out
mov
pop
xor
pop
out
pop
sbb
outsb
movl
ljmp
and
fld
jo
or
sbbb
mov
in
push
and
fadds
in
rcrl
in
lds
jecxz
jl
bound
jmp
rorb
mov
push
jne
jecxz
mov
jnp
dec
jecxz
sub
ds
gs
hlt
fnstenv
dec
jecxz
rolb
out
mov
push
test
scas
push
jmp
test
lea
cmpsl
pushf
dec
les
push
or
jl
mov
push
pop
rcll
cli
iret
pop
pop
jo
adc
fs
rcll
mov
adc
fwait
or
out
mov
aaa
dec
mov
in
pop
lahf
addr16
mov
add
cmp
inc
daa
dec
inc
stos
jmp
mov
inc
ret
sub
adc
ss
mov
in
lret
xor
add
push
inc
aad
mov
sti
lea
pop
mov
out
in
mov
or
jecxz
aad
insl
orl
and
xchg
push
test
shll
insb
sub
pop
bnd
push
nop
xor
fwait
es
scas
stos
addr16
jns
mov
leave
fisubs
adc
jg
lret
or
sub
jns
or
lahf
ret
lcall
lds
in
ss
out
add
xchg
cmp
and
in
mov
push
mov
mov
stc
sahf
aaa
inc
in
inc
lods
ss
movsb
pop
pop
or
lea
xlat
sti
cli
xchg
jge
sbb
lcall
test
jno
xchg
fs
sbb
cltd
andb
cmpsb
sbb
mulb
sbbl
aas
cmp
out
inc
jne
insl
ja
jg
addr16
negb
xor
mov
pop
insb
js
push
cmp
lea
cmp
icebp
lods
cli
addl
sub
pop
push
lock
add
mov
mov
lcall
out
pop
cld
or
inc
fiadds
push
pusha
call
scas
cmp
mov
mov
fcoms
imul
push
push
jnp
popf
fdivl
loopne
add
pusha
mov
fs
jp
pusha
inc
in
xchg
lock
jne
test
scas
push
xchg
add
adcl
outsb
sarb
pop
pop
add
pop
inc
cmp
or
jp
daa
add
cmp
enter
add
fs
test
cmp
aaa
pop
in
ja
cmp
sti
call
fwait
out
adc
stos
mov
jo
mov
gs
mov
cmpb
mov
and
mov
aaa
push
lahf
push
push
cmpsb
arpl
stos
pop
push
insl
cmp
addr16
nop
pop
jns
jecxz
leave
sub
ret
data16
cmp
lods
sahf
mov
and
flds
xchg
dec
fs
aaa
aad
cltd
cmp
sti
sub
sahf
sahf
pop
lods
aad
push
adc
xchg
mov
or
in
cmp
jnp
inc
loop
in
jp
outsl
mov
sbb
mov
sbb
dec
mov
adc
outsb
call
mov
xor
out
rcrl
push
xchg
dec
movsl
cmpsl
pop
das
hlt
fcoms
decl
cmp
mov
sub
sahf
and
dec
inc
out
lret
mov
fdivrs
shrb
in
push
mov
out
frstor
xor
sub
cmovl
cmp
mov
sub
mov
out
inc
mov
jge
je
mov
in
loope
arpl
popf
ret
xchg
push
clc
sub
pop
outsb
or
bound
pop
or
sub
stos
add
or
inc
xchg
movq
das
lea
lret
addl
push
sbb
lods
sub
out
push
fisubrs
cmpsb
out
add
mov
lods
out
mov
mov
dec
xor
sub
cwtl
xlat
inc
int
xor
xorb
cmp
mov
dec
cmc
fimuls
out
aas
adc
push
mov
fcom
xlat
repnz
mul
das
pushf
in
push
stos
fstpt
in
xor
outsl
fsubr
pop
inc
jg
dec
sbb
add
ja
push
jp
xchg
arpl
insb
mov
stos
push
dec
rorl
lret
js
insb
sub
loope
xchg
lcall
inc
gs
jecxz
rcll
jno
sbbl
cmp
sbbl
sub
sbb
mov
or
pushl
es
xor
lret
jb
scas
cld
mov
or
cmp
ss
out
or
rcrl
xchg
negl
out
lods
sbb
repz
into
mov
into
pushl
fwait
push
je
and
stos
out
mov
push
jl
or
rorl
icebp
aam
cmpsb
mov
inc
adc
jb
inc
cli
mov
dec
les
ljmp
int
int3
lds
pop
cmp
sbb
mov
ficoml
test
imul
add
aas
out
xor
cltd
mov
xlat
sbb
movq
mov
shlb
data16
out
jbe
inc
xor
inc
addr16
fwait
in
push
lret
mov
sub
mov
jecxz
icebp
pop
lods
push
adc
push
mov
stos
nop
cli
stc
or
ss
xchg
push
in
inc
xor
mov
cmpl
mov
mov
add
push
icebp
outsl
adc
test
mov
xchg
and
dec
and
movb
mov
mov
mov
cmp
fsubr
rcrb
mov
in
mov
mov
daa
mov
mov
pop
push
es
pushf
xor
hlt
sub
xchg
in
mov
push
mov
mov
cmpsb
div
fstpl
loope
lods
ss
arpl
xor
xchg
gs
ds
je
mov
test
mov
ja
iret
ret
push
popf
add
imul
fwait
mov
cs
cmp
jp
jbe
inc
lret
nop
mov
pop
add
adc
fsubl
cmpsb
repz
pushf
mov
sbb
push
outsl
jns
hlt
add
ret
xlat
gs
insb
int
ret
cs
cmpsb
jb
push
dec
or
nop
mov
ljmp
xor
jmp
test
gs
call
jb
and
push
jb
cmp
push
lret
inc
fiaddl
pop
add
mov
call
mov
mov
mov
shrl
ds
cld
or
xchg
movl
xchg
lahf
cli
push
sub
and
cmpb
dec
dec
pop
push
arpl
mov
mov
test
movsl
icebp
aad
out
push
das
popf
and
daa
mov
pop
xor
adc
jmp
add
xlat
push
sub
das
scas
mov
xor
into
int
stc
inc
es
lahf
xchg
clc
mov
or
sarl
mov
divl
ljmp
sbb
fcomp
cmpsb
jg
mov
jo
out
jg
mov
fcomps
icebp
mov
push
xor
jge
xlat
dec
mov
out
jmp
sbb
cmp
loop
dec
cmp
les
stc
das
scas
lods
addl
ljmp
sub
or
rcrl
pop
aam
movsl
in
lret
movl
ljmp
in
jecxz
pop
popl
dec
stos
out
adcb
push
enter
jno
lods
jnp
dec
insb
aas
cmc
ss
clc
and
or
lds
sub
into
pusha
xor
xchg
nop
stos
cmp
lods
inc
ret
push
or
add
xchg
jnp
scas
xchg
push
int
push
add
mov
mov
in
lea
or
daa
xor
dec
std
cmpsb
mov
jmp
fists
jno
cmc
mov
mov
bound
adc
cmp
inc
or
cmp
je
out
add
cmp
in
push
fldenv
jle
fisubs
xor
frstor
jno,pt
movsl
mov
mov
inc
pop
add
or
jge
stc
fidivrl
xor
add
aaa
fstl
cmpl
inc
xchg
jl
popa
fs
les
fsts
and
fdivs
test
add
rcll
aas
push
cs
and
popa
shlb
sub
arpl
negb
inc
or
ds
push
adc
mov
lahf
cmpsb
jp
ljmp
rcrb
dec
fwait
fwait
mov
in
adc
xlat
mov
and
jmp
mov
pop
or
pusha
lahf
xor
flds
pop
iret
sbb
jnp
testl
stos
rcrb
sahf
in
dec
loop
insb
popf
mov
orl
aaa
cli
mov
int
out
dec
mov
pushf
hlt
cmp
stos
dec
enter
mov
push
daa
rcrl
adc
push
jl
nop
jg
ss
mov
or
loopne
mov
pop
sbb
out
xchg
sub
imulb
movsb
bound
fidivrs
or
jmp
movsb
orl
cmp
test
or
cmpsl
mov
jg
out
cmp
jbe
jl
fs
sbb
sahf
fdivrs
rorl
xchg
or
jnp
hlt
mov
into
into
xor
push
lcall
xor
sub
sub
add
mov
andb
adc
movsl
sbb
mov
sti
mov
or
aas
add
das
ret
testl
inc
cmp
xor
idiv
jnp
jbe
or
arpl
lock
cmpsl
pushf
or
xor
enter
ja
and
faddl
jo
mov
add
out
xchg
and
pop
into
test
popf
jns
fiaddl
ds
adc
stos
dec
orl
mov
fmul
loop
imulb
aam
xchg
push
pop
jmp
lret
pop
mov
out
pop
dec
in
adc
test
jns
cs
loop
push
subl
inc
scas
jl
hlt
call
cmc
sbb
cmpsb
xor
repnz
pop
or
loope
mov
aas
add
cli
into
cli
int3
or
jmp
mov
sub
and
add
jp
cmpsb
and
xlat
imul
push
shll
fxch
lods
cmpl
inc
xor
rcll
xchg
jmp
in
ret
xlat
mov
mov
mov
rorl
push
sub
lahf
rol
and
xchg
int3
mov
call
cmc
sahf
push
mov
push
lea
jbe
push
dec
mov
nop
das
aaa
fimuls
pop
mov
add
les
insl
push
pop
test
lret
lods
jmp
mov
push
imul
insl
bound
jl
or
lcall
orl
loopne
push
test
push
or
mov
adc
insl
adc
dec
adc
daa
sarb
mov
outsb
mov
out
xor
push
mov
nop
rcr
and
xchg
loop
mov
insl
dec
stos
fisubrl
cmp
sub
xchg
icebp
cli
push
out
xor
dec
leave
scas
loope
inc
jb
cs
lods
scas
push
xor
cmp
rol
or
add
pop
orl
fdiv
xlat
mov
shl
shlb
add
cmc
out
repnz
xor
clc
xchg
or
dec
add
and
xor
pusha
add
scas
cmp
mov
adc
inc
sub
scas
aad
adc
fcmovb
enter
mov
jmp
sahf
jns
sahf
mov
lods
out
out
loope
or
mov
fwait
in
movsl
xchg
rorl
sti
push
push
cmp
cmp
sahf
add
enter
sbb
mov
jp
iret
adc
mov
fadd
popf
mov
push
fcomip
pushf
fs
push
pop
dec
cmpb
sub
jnp
stos
push
addb
repnz
aaa
push
mov
xor
and
xlat
cwtl
and
and
and
mov
aam
bswap
sub
xor
bound
push
cmp
mov
pop
push
das
or
xor
mov
cmpsl
pop
push
jg
mov
pop
paddb
stos
pop
xor
daa
repz
movsb
pop
popa
fsubrs
mov
les
sahf
mov
add
fstl
call
add
cwtl
int
or
aaa
adc
sti
cmp
mov
or
inc
movsb
aas
out
jo
inc
cmp
clc
ds
dec
inc
fadds
dec
outsl
out
stos
sbb
push
fldenv
ljmp
int3
mov
leave
inc
and
lods
cmpsb
roll
mov
dec
jo
add
daa
outsl
jns
test
push
ss
ficoms
test
fisttpl
mov
cltd
in
or
test
rcrb
add
pop
mov
xor
fucom
shl
enter
lcall
push
int3
push
test
data16
inc
mov
aas
aad
mov
mov
push
rorl
fcomps
add
adc
movsb
mov
std
inc
mov
fcompl
and
and
lods
rcll
lret
ja
dec
adc
into
jno
adc
mov
jmp
push
sub
ss
adc
xor
ds
imul
fsubr
inc
and
or
mov
add
into
aam
pop
or
cmc
jle
or
and
add
jbe
or
lret
aas
rorb
mov
or
ret
or
jmp
mov
jno
testb
mov
fs
adc
fwait
adc
sub
pop
adc
je
std
int3
or
fidivl
aas
ja
sbb
inc
xchg
punpckhwd
fs
mov
insb
lret
xchg
ljmp
xlat
cltd
mov
sti
bound
push
daa
xlat
adc
jmp
and
aam
cmp
sbb
das
or
fildl
jb
sbb
mov
sbb
adc
lcall
mov
call
xchg
enter
mov
jbe
fmull
pop
sbb
jle
jo
mov
lods
mov
out
or
inc
testl
xor
pushl
incb
xchg
adc
sbb
mov
imulb
stc
and
adc
scas
adc
lds
and
leave
insb
pop
out
decb
in
sub
cmpsl
dec
cmpsl
pop
adcb
jmp
inc
call
sub
push
mov
ss
or
jecxz
xor
outsl
lds
pushf
mov
sbb
shrl
jmp
mov
push
repz
xor
rcr
addl
popf
enterw
out
pop
jbe
testl
imul
push
push
adc
popa
mov
push
ret
mov
jo
dec
sbb
mov
loop
out
inc
loopne
jno
jbe
push
mov
xchg
scas
loopne
mov
insb
add
push
xchg
and
mul
xor
shlb
je
js
je
sbb
pop
xchg
mov
mov
test
out
setg
pop
popf
imul
lock
sbb
fbstp
add
sahf
shr
pop
xor
dec
push
dec
mov
fcoms
push
mov
clc
aas
jo
into
mov
jmp
push
sti
jecxz
push
iret
pop
adc
adc
pushf
mov
fs
xor
add
mov
lods
in
xor
mov
repz
and
jb
adc
push
inc
andb
ljmp
xchg
mov
cmp
imul
and
push
call
testl
mov
sub
inc
arpl
xchg
xchg
stos
mov
add
cwtl
or
scas
fisubl
push
rorl
and
fstpl
xchg
cld
cmp
push
aaa
and
push
ja
lahf
inc
sub
or
lds
test
mov
inc
clc
aaa
mov
cltd
mov
cmp
fstps
hlt
or
es
and
imul
lret
fistl
cmp
pop
cli
pusha
shlb
jg
xchg
scas
cmpl
mov
icebp
shrl
sbb
and
sbb
outsb
rolb
inc
and
or
jae
mov
out
gs
cld
mov
xchg
sub
cmp
xor
test
pop
bound
lret
mov
push
dec
addr16
shl
jae
loop
sbb
icebp
in
xor
clc
roll
sahf
outsb
mov
leave
ja
int
sbb
cltd
mov
pop
sahf
int3
cmpsl
mov
lds
jo
imul
xor
push
lods
mov
pusha
dec
lret
dec
push
push
sub
fisubs
jno
adc
xorl
xchg
add
push
xchg
or
cld
cmp
loope
lds
stos
xor
out
push
shll
xor
js
jmp
loopne
inc
ljmp
pop
and
test
popf
cmp
ja
mov
fcomi
xchg
adc
mov
jge
jp
or
xchg
jae
pop
and
pop
leave
add
icebp
lea
sbb
pop
dec
add
push
insl
sub
xchg
pop
call
lds
push
mull
enter
xchg
xor
cmp
addb
push
sub
ljmp
lea
out
add
or
leave
mov
adc
popf
mov
inc
dec
loop
push
add
pop
and
call
shr
out
arpl
testb
adc
pushf
mov
ret
iret
jmp
ret
inc
or
push
mov
jmp
pop
or
inc
out
xchg
pop
orl
adc
pusha
xorb
pushf
js
lret
jmp
dec
inc
jb
out
sbb
ss
mov
jle
add
aam
scas
pop
repnz
push
push
arpl
aad
cmpsl
rcrb
out
test
shl
adc
and
fnstenv
out
loope
sti
bound
cmp
dec
dec
repnz
dec
ds
es
mov
dec
sub
xor
mov
and
ds
and
xchg
pop
je
xor
mov
shll
ret
jno
mov
dec
and
pop
and
adc
jl
add
aam
outsb
out
push
enter
jo
lods
rclb
jo
fadd
push
sub
icebp
shll
scas
mov
jb
sub
xchg
out
call
inc
jbe,pn
inc
add
loope
ja
pop
and
nop
push
push
data16
loop
arpl
fwait
jns
push
xchg
sub
pop
js
pop
pop
notb
ret
pop
repnz
out
aam
mov
nop
sysexit
xchg
pusha
fs
fmul
sub
aam
daa
add
and
mov
inc
jbe
fwait
jle
imul
stos
inc
aas
cmc
jnp
cmp
cmp
popa
cltd
es
pop
aam
pop
sub
push
jmp
les
add
mov
aad
pop
push
and
aas
scas
adc
insb
sub
iret
xchg
mov
out
test
clc
dec
stos
sub
pop
mov
sti
icebp
inc
xor
out
adc
lods
aam
enter
lret
mov
sub
dec
scas
mov
int
add
mov
popf
pushf
loop
fisubrl
incl
lds
in
jg
pop
pop
push
push
sbb
insl
stos
xchg
or
mov
sub
loope
cmp
sarb
inc
inc
test
test
pusha
mov
dec
cmp
pop
fsubr
or
xchg
cmpsb
cmp
pop
cmpsl
add
and
adc
orb
ds
push
jnp
push
lcall
icebp
or
rclb
pop
adc
jne
fsts
data16
and
cwtl
cs
mov
stc
mov
lcall
test
loopne,pt
out
cmpsb
cwtl
mov
or
ss
mov
mov
stos
cltd
imul
arpl
mov
pop
in
lret
push
xchg
lret
mov
jno
pmulhuw
rol
insb
jg
mov
test
adc
pop
sub
decb
jnp
mov
xchg
cmp
adc
xchg
mov
lock
jbe
mov
jbe
xchg
bound
imul
fsubs
fsubrs
inc
xor
pop
rol
lods
loop
fdivs
xchg
mov
dec
out
lret
push
lods
jle
cmp
insl
mov
pop
pop
out
and
fnstsw
mov
mov
es
mov
fmul
imul
and
xor
mov
sub
leave
cmp
mov
dec
div
out
add
addr16
test
inc
ljmp
daa
and
pop
and
lret
sbb
es
cmpsb
push
cmp
movsb
sar
and
rcl
aam
sbb
xlat
xor
inc
cmp
dec
push
sti
lods
xor
rclb
pop
add
sub
sbb
clc
pop
stos
mov
aas
inc
push
jo
push
fldcw
loop
xchg
les
loope
push
push
jns
fiaddl
outsl
jp
insb
and
sbb
rorl
cltd
pop
cmpsl
fdivrs
and
pop
ljmp
pop
pop
ss
mov
in
loop
inc
test
and
ljmp
push
addr16
mov
fcom
cs
movsb
and
icebp
push
pusha
jno
cmpsl
inc
out
leave
push
and
xchg
je
pop
rolb
cmc
lcall
pop
mov
popa
or
xor
rcll
cmc
aam
movsl
inc
and
mov
or
push
xchg
leave
inc
push
fistpl
inc
xchg
mov
stc
xlat
fstl
push
les
mov
push
cltd
mov
ss
inc
jns
movsb
push
cmpl
fisubl
mov
lret
dec
jecxz
mov
xor
sarb
jmp
shrl
push
and
lock
xlat
inc
fisttpll
jns
stos
out
test
xchg
add
data16
in
mov
cmp
jle
mov
push
or
and
or
daa
cmp
mov
xchg
and
or
dec
mov
ret
add
addr16
mov
mov
xchg
xchg
push
sbb
cltd
add
ds
xor
inc
idivl
sahf
push
add
jp
or
loop
pusha
das
jge
bnd
xchg
arpl
iret
dec
sti
inc
jae
inc
mov
mov
jmp
mov
adcl
popa
arpl
or
sub
fisubs
scas
aam
xor
xchg
push
imul
push
mov
or
dec
adc
mov
jno
add
mov
pop
cmp
les
outsb
fnstenv
scas
repz
xor
push
movsb
pop
add
pop
sub
jns
cltd
cmp
les
aam
scas
mov
daa
je
sub
xor
lods
mov
cltd
test
dec
mov
je
shll
push
enter
sub
pushf
in
je
xor
pop
add
pop
jmp
mov
ds
lret
xor
insl
xchg
sti
jne
cmp
icebp
add
imul
xchg
and
inc
pop
test
in
fdivp
mov
mov
sbb
jbe
mov
je
out
lret
lods
or
pop
out
xchg
mov
adc
mov
and
xor
decb
ljmp
std
push
push
or
jecxz
sbb
mov
repz
std
mov
cwtl
inc
fmulp
xchg
sbb
cmp
sbb
xor
mov
xchg
adc
push
jnp
jne
in
jbe
das
jns
es
in
jae
mov
push
dec
cmp
mov
outsl
in
je
insl
mov
cmc
js
push
int
mov
sub
cmc
jge
xor
cwtl
xchg
mov
sub
cli
cmp
push
sti
jno
jge
arpl
rorl
ret
and
and
jne
xchg
popf
push
mov
rorb
js
push
jge
stc
mov
clc
xor
sub
in
mov
jle
ret
pop
jno
or
jnp
jns
jmp
xchg
addl
pop
adc
xlat
lods
xchg
shll
mov
inc
leave
mov
inc
fnstenv
pop
ljmp
mov
addr16
in
sub
shlb
inc
movsb
sbb
cmpl
adc
pop
fs
lcall
xor
sub
sbb
mov
scas
mov
cmpsb
jae
xchg
pushf
in
addr16
pop
idiv
push
jg
pushf
int3
fsubrp
es
int3
clc
mov
ret
iret
lcall
push
jecxz
addr16
ss
stos
adc
daa
and
mov
or
xchg
push
stc
scas
and
pop
in
dec
mov
inc
imul
mov
or
jbe
push
push
test
in
mov
pushf
xor
push
sbb
mov
fdivl
ret
ret
sub
leave
push
les
subb
ret
add
aad
push
mov
into
sahf
or
imul
jo
idivl
mov
inc
mov
ret
dec
adc
and
sbb
xor
xchg
ret
ss
mov
sub
sub
shrl
pop
mul
dec
adc
stos
movsb
xor
ret
bound
and
ffree
pop
xchg
dec
negl
insl
sti
jnp
jo
add
subl
enter
add
inc
cmp
dec
push
inc
xor
sti
pushf
mov
adc
lahf
cs
cmp
lods
add
cmp
incb
or
sbb
fisubrs
adcl
push
imul
pop
jl
xchg
scas
inc
loop
fisubrl
mov
lock
loop
cmp
push
fst
clc
xchg
decl
add
add
imul
dec
leave
in
repz
fs
push
xor
xchg
adc
and
dec
bound
cmp
insb
inc
inc
pop
xlat
cwtl
mov
mov
shlb
mov
scas
xor
xchg
lahf
push
mov
aaa
mov
xchg
and
call
sarb
mov
xor
popf
dec
ret
mov
test
movl
movsl
pop
inc
fildl
mov
push
fs
mov
inc
shll
insb
mov
lods
pop
mov
and
imul
adc
shl
mov
xor
xor
rol
pop
add
or
mov
fwait
test
mov
add
andl
insl
add
mov
pop
cli
cli
push
out
fsubr
movsl
test
inc
mov
cmp
pop
ficompl
aam
cmpsl
loopne
mov
push
or
stos
cmp
repnz
out
cmpsl
adc
pop
mov
fisubrl
fstpl
or
icebp
stos
leave
pop
lods
xchg
inc
pusha
hlt
sbb
mov
pop
adc
or
xor
rol
ja
sahf
adc
loope
xor
or
stc
cmp
aad
inc
pop
addr16
into
inc
insl
xchg
imul
jb
pop
push
or
lahf
or
shrb
sbb
ss
jmp
add
sbb
bnd
inc
lods
xchg
inc
sub
in
loopne
stos
or
fsts
sub
mov
mov
into
adc
mov
addl
lret
jo
inc
daa
js
sbb
repz
out
mov
lret
inc
negl
mov
mov
dec
push
in
int3
push
cld
inc
adc
pop
mov
js
out
test
enter
call
sbb
mov
aas
mov
lcall
mull
jns
and
sbb
adc
fcom
push
enter
add
inc
je
outsl
lahf
data16
sub
ret
dec
pop
rcl
mov
gs
cmp
dec
sub
pop
mov
jne
adc
push
cltd
add
fcoms
movsb
insl
mov
mov
leave
adcl
bound
push
popl
cltd
enter
adc
mov
mov
ret
aam
lahf
js
leave
adc
push
cmpsb
or
fdiv
outsl
mov
mov
call
inc
push
mov
fisubl
shrb
dec
jne
pop
out
xor
and
mov
inc
dec
shl
add
inc
out
pushf
and
xor
jbe
sub
sarb
inc
sub
xor
and
and
cmp
lods
filds
jns
ljmp
jo
jb
xchg
mov
xor
mov
pop
inc
inc
cmp
and
xchg
fisttps
in
push
das
xor
addl
aaa
mov
movsl
mov
rcll
adc
xchg
sbb
aad
inc
in
push
test
dec
mov
addr16
bound
and
test
repnz
push
bnd
xchg
jmp
sub
ret
stc
jmp
pop
cwtl
int3
test
lret
ss
rolb
inc
je
pop
jecxz
sub
cli
aas
lahf
outsb
xchg
mov
fs
je
rorl
push
xor
cmc
push
mov
int
cmp
mov
push
insb
dec
adc
jbe
push
fs
lret
ror
inc
xor
and
inc
xchg
adc
int
push
and
xchg
mov
and
dec
rclb
xchg
mov
fisttps
sub
loop
sti
mov
sub
mov
or
ljmp
push
lahf
adc
aaa
mov
ret
cs
and
push
jge
dec
push
push
xchg
xlat
cmp
sub
pop
xor
inc
ljmp
dec
clc
mov
ljmp
lea
xor
pop
add
mov
enter
and
lret
inc
add
lret
lods
ss
cld
ljmp
pop
mov
pop
dec
cmpsb
bsf
mov
mov
adc
sti
mov
jne
testb
push
and
dec
mov
adc
push
xorb
mov
add
or
into
dec
fcomps
cwtl
jmp
inc
test
stc
es
into
jmp
inc
pop
inc
push
mov
lcall
int3
pushf
popf
adc
out
js
orl
pop
and
bnd
lcall
lret
dec
outsb
add
ds
or
xor
cltd
stos
jae
sub
iret
test
jl
xchg
mov
push
mov
test
jne
mov
adc
push
mov
xchg
lea
or
add
call
jp
or
stos
and
pushf
fsubrl
test
or
loopne
into
mov
insb
mov
push
lcall
sub
pop
add
jo
movsl
int
scas
xchg
add
lret
pop
fsubrl
push
repnz
xchg
lock
aad
movsl
aas
stos
sbb
daa
jae,pn
fwait
ret
addl
adcl
and
inc
and
aad
imul
nop
mov
jmp
inc
pop
or
daa
dec
jmp
cmp
repz
flds
push
add
push
lods
stc
cmpsb
ja
jns
les
mov
cmp
fs
rol
repnz
jle
pop
shl
rcll
inc
add
cmp
daa
and
jmp
ljmp
mov
inc
ret
data16
lods
jle
ja
jge
adc
pop
stc
jae
fsubs
jl
sti
sbb
jns
mov
aas
loopne
lds
fs
inc
addr16
cmp
inc
adc
mov
fsubr
ljmp
adc
mov
pop
xorb
mov
ljmp
popl
xchg
mov
cli
xor
dec
xchg
xor
dec
or
xor
dec
sub
pop
hlt
cmp
sub
call
pop
mov
xor
sub
pop
and
mov
vphaddbq
push
popf
mov
ret
cmpsl
jne
pop
aad
sahf
xchg
xchg
or
shlb
dec
mov
mov
orl
pop
repz
xor
pusha
cmpsb
inc
dec
push
inc
gs
inc
mov
movd
adc
or
ror
ret
addr16
pushl
xchg
ret
jle
mov
stos
dec
sarl
js
lea
mov
cmp
stc
cli
pushf
and
and
push
and
dec
cmpsb
jb
addr16
in
shrb
mov
sbb
clc
rcll
ljmp
push
xlat
inc
cmpsb
or
mov
sbbl
addl
fsubrl
divb
sub
push
mov
inc
std
orl
sub
lock
les
jnp
dec
addr16
adc
xchg
push
cmpsb
repz
divl
and
inc
stc
insb
mov
loopne
imul
mov
add
jb
in
jns
repnz
shrl
push
mov
jle
adc
ffreep
addl
das
inc
sbb
psubw
out
fsubs
jo
xor
rorl
pop
mov
aad
sub
out
repz
stc
sbb
pop
arpl
insb
shlb
lds
jmp
xor
sti
xor
int
movsb
movsb
xlat
out
and
cmp
and
xchg
loopne
arpl
iret
push
xchg
lahf
stos
das
mov
cmp
pop
mov
iret
ret
stc
cmpsl
inc
fwait
inc
enter
cmpsl
xchg
lock
rclb
cmovs
sbb
mov
pop
mov
hlt
ss
stos
xchg
jb
mov
sbb
aad
sbb
dec
movsb
out
jnp
insl
mov
and
fmull
mov
stc
add
jle
in
xchg
imul
nop
add
push
dec
int
sahf
inc
sti
addb
mov
pop
mov
pop
mov
hlt
in
cli
mov
sub
fdivrl
sbb
das
jno
mov
adc
mov
xor
xchg
jl
xchg
pop
fs
cmp
lret
mov
mov
adc
sub
cli
xchg
out
insb
div
adc
loope
shrb
iret
imul
sar
lock
in
cltd
push
or
fisttpl
daa
mov
pop
push
dec
fnstenv
jmp
jg
jp
cmp
test
ss
lea
imul
adc
cmc
jne
ret
loop
xchg
xor
imul
pop
jno
iret
lods
popa
and
add
data16
pop
push
push
cmpsl
add
mov
insl
cmp
mov
pop
adc
mov
lock
sti
mov
add
xchg
jns
xchg
cwtl
scas
adc
icebp
adc
sarl
mov
mov
out
mov
mov
mov
mov
jmp
movsl
lods
int
sbb
sub
xor
jmp
sub
repz
ljmp
sbb
pop
mov
pop
mov
lock
test
xchg
inc
ljmp
add
pop
fdivl
stos
outsb
inc
sbb
shlb
pop
inc
push
insl
sub
inc
ss
neg
add
pop
data16
repz
andl
into
jmp
js
in
dec
xor
push
or
mov
mov
sub
sub
ss
or
pop
mov
fs
lods
dec
inc
lcall
inc
xor
adc
nop
dec
mov
out
scas
std
mov
dec
mov
sbb
mov
fdivl
inc
jge
adc
dec
mov
pop
jae
loop
ljmp
je
jae
or
pop
inc
cltd
cmp
xchg
orb
jecxz
or
pop
xorb
lods
aaa
sbbb
outsl
push
jo
adc
call
mov
jp
push
loop
dec
pusha
add
subl
int3
in
je
ljmp
scas
adc
fistps
les
sbb
cmp
lea
adc
jmp
pop
int3
les
xchg
or
in
xlat
aas
loopne
mov
and
lea
sbb
add
sti
inc
lods
pop
test
mov
scas
clc
adc
popa
xchg
cli
pop
enter
pop
cltd
and
dec
add
stos
enter
and
and
pop
sti
cmpsb
roll
je
fldt
or
lods
push
mov
testl
scas
and
out
jp
or
jno
or
rcll
ja
pop
test
rolb
inc
push
pop
or
cmc
xchg
cs
pusha
mull
xchg
icebp
hlt
pop
les
sub
push
loop
and
xor
cli
nop
fs
adc
jns
push
mov
fwait
clc
in
out
xor
sbb
es
scas
jne
sub
mov
rorb
test
dec
sbb
xchg
dec
sub
hlt
sbb
cltd
subl
mov
xor
ficoml
push
incb
scas
call
fmul
push
pop
andb
in
pop
xchg
adc
mov
fucom
orb
dec
push
xor
ret
aaa
aas
sub
inc
push
dec
icebp
scas
fs
adc
in
arpl
cmp
movlps
push
fimuls
imul
inc
inc
dec
subb
or
notl
pop
jnp
sub
repnz
inc
popa
insl
xor
adc
cmp
fistps
inc
testb
inc
mov
mov
test
add
cli
testl
sub
sbb
pop
test
testl
inc
cmc
stc
sbb
adc
adc
iret
je
inc
mov
mov
xchg
loop
loopne
mov
jle
pop
insl
xchg
ss
mov
js
xchg
movsl
outsb
mov
imul
inc
gs
ret
shl
sahf
insb
test
repz
xchg
jmp
out
inc
add
aas
dec
sub
or
test
imul
imul
mov
inc
test
rclb
push
je
out
mov
cmp
xchg
aad
and
mov
lods
dec
rorl
or
xor
into
xor
ret
test
clc
pusha
or
jl
fdivl
jp
sbb
mov
mov
hlt
fldenv
mov
fdiv
pop
das
scas
inc
adc
or
jae
xchg
lret
outsb
xor
lahf
inc
cs
pop
mov
xor
jl
push
dec
insl
insb
sub
mov
mov
mov
pop
dec
fnstenv
lea
fdivrl
mov
decl
sbb
cmpb
jp
cld
mov
xchg
rcrb
sbb
rcrb
jne
scas
jl
sub
cmp
pop
mov
dec
dec
push
mov
jae
in
mov
imul
mov
fs
dec
mov
stos
cmp
pop
cmp
ret
push
in
jnp
in
out
add
mov
repnz
mov
push
xchg
repz
xchg
push
enter
cs
push
sub
mov
pop
xrelease
add
imul
cmp
add
cmp
pop
xlat
lock
fwait
or
xor
and
cmp
sbb
incl
je
stos
repz
add
add
sbb
js
pop
mov
rorb
mov
adc
int
mov
scas
outsb
insl
add
xchg
pop
insb
push
sub
inc
shl
push
andb
lahf
ret
jp
andb
sub
lods
xor
and
mov
imul
push
mov
mov
js
inc
push
icebp
push
mov
inc
arpl
enter
lock
dec
push
xchg
inc
jmp
cmc
add
add
sub
pop
popf
xor
mov
loope
movsb
cmp
sub
adc
jecxz
sub
xchg
mov
jo
jo
mov
and
dec
cwtl
pop
mov
test
jne
subl
clc
je
std
lret
or
out
js
out
addr16
or
insb
xor
xor
std
pushf
lret
sbb
ds
gs
lods
xchg
inc
jnp
out
xor
shll
jno
xchg
fldl
xchg
or
xchg
jne
aam
mov
mov
inc
jno
mov
sarb
mov
jecxz
int
inc
sbb
pushf
pop
xor
adc
pop
rolb
dec
mov
sub
jp
fdiv
and
mov
jae
pop
out
adc
sbb
adc
in
inc
inc
frstor
mov
adc
ja
fwait
mov
xchg
dec
pushf
inc
and
pop
adc
add
insl
mov
pop
jo
decl
and
test
dec
push
jmp
mov
adc
sbb
jb
inc
mov
je
mov
fucomi
dec
into
xchg
pop
ljmp
mov
mov
ja
fcomi
inc
push
in
es
xorb
sbb
push
lds
mov
scas
dec
push
in
repz
mov
add
mov
pop
add
pop
es
ret
mov
sbb
xchg
sub
pop
dec
lds
in
and
jle
push
popf
loope
inc
jle
outsb
insb
mov
and
out
sub
xchg
add
lds
mov
repz
cmp
cltd
cmp
lcall
ss
jnp
pop
cmp
lret
notb
icebp
xchg
mov
push
sub
lcall
mov
sub
adc
imul
std
mov
int3
sbb
popa
leave
jae
pop
jge
test
scas
pop
or
mov
pop
jmp
and
dec
stos
int
test
cmpsb
fildll
enter
test
sub
mov
pusha
adc
or
insl
inc
leave
inc
std
jns
je
daa
mov
data16
testl
mov
cld
jmp
sahf
into
push
aaa
rcrb
imul
icebp
fdivp
push
dec
xor
push
xchg
outsl
dec
jl
mov
pusha
into
cmpsb
cmp
cmpsb
jmp
push
or
popa
mov
ret
pop
stos
push
cmc
dec
and
lret
mov
mov
stc
cld
pop
jg
aam
inc
hlt
neg
inc
jo
sahf
jne
sbb
and
inc
mov
mov
dec
inc
pop
cmpsb
sbb
xchg
push
insb
push
loopne
sub
cmpsl
out
pop
loop
in
push
pop
xorb
jmp
retw
stos
inc
xlat
push
xchg
sbb
xchg
pop
push
das
in
fldcw
mov
aas
nop
fstpl
add
cltd
xchg
loop
mulb
jecxz
pop
mov
and
xchg
aaa
lock
jl
loope
cmp
dec
cmp
xor
subl
mov
and
dec
in
gs
cltd
xor
inc
sub
inc
inc
cmp
or
inc
or
push
insl
gs
lea
mov
sub
pop
fs
xchg
pop
data16
fisttpll
add
fmuls
out
dec
and
xlat
mov
mov
fnstsw
push
and
inc
cld
cmpsl
cmc
mov
jg
mov
fst
inc
in
cmpsb
pop
rorl
mov
fcmovnbe
push
or
fwait
xchg
add
or
bound
cmp
push
mov
lds
cmp
jnp
add
bound
mov
mov
in
popf
jae
xor
dec
jo
mov
inc
lea
stos
cwtl
jnp
popa
pop
xor
rorl
inc
pop
subl
aad
cmp
in
scas
into
lret
les
mov
loop
hlt
xchg
lea
call
xor
fistps
sub
insl
mov
jns
add
jb
leave
jne
sub
pushl
jae
sbb
mov
sub
pop
mov
iret
hlt
iret
push
sbb
jecxz
mov
icebp
jb
cmp
loopne
cwtl
lret
push
push
xor
stc
mov
js
xchg
pop
dec
add
jp
sti
shr
dec
push
in
mov
mov
cmp
mov
pop
sti
mov
cmc
out
mov
out
mov
pop
cmp
ret
fwait
jnp
out
push
push
inc
push
fucom
jg
bound
int
xor
mov
sbb
sbb
popf
xchg
insb
lock
mov
mov
or
daa
ret
andb
jl
mov
push
movsl
jb
cmp
fmuls
jbe
and
ds
xor
ss
shrb
hlt
scas
xor
add
pop
xchg
shlb
pop
dec
dec
sub
sub
push
push
pop
shll
out
cmpl
adc
iret
pop
std
fists
sub
push
je
cmp
jo
cld
push
stos
mov
pop
roll
popf
les
jo
mov
jmp
ja
lods
imul
push
in
xchg
dec
jecxz
ret
sub
cmp
push
sbb
cmp
jnp
pop
xchg
push
jecxz
addr16
int
xchg
aam
pop
test
mov
xchg
cmp
bound
mov
jnp
mov
cltd
mov
jne
push
ret
push
loope
int3
jb
cs
push
insb
movsb
sbb
jae
stos
mov
sub
mov
add
adc
hlt
jle
cmp
ficompl
xor
decb
mov
or
mov
add
aam
lret
mov
sub
sub
mov
out
das
mov
mov
inc
je
push
imul
fstps
popa
sub
in
pop
arpl
shr
test
adc
sbb
or
or
ljmp
lret
inc
sbb
addl
fdiv
jle
cs
ret
mov
sub
es
cmpsb
or
jl
xchg
cmc
xlat
out
add
xchg
repz
and
std
jnp
push
jecxz
dec
inc
jbe
shlb
test
xchg
pop
xchg
mov
movsl
lahf
js
pop
out
das
sbbl
jge
pushf
mov
jo
in
sub
incb
xchg
dec
ret
mov
jg
js
test
jmp
add
stos
push
js
pushf
arpl
lock
xchg
scas
mov
pop
cmp
dec
mov
push
add
dec
jecxz
inc
pop
ja
not
insb
mov
xchg
lods
je
ds
inc
and
mov
mov
addr16
xorb
jecxz
inc
mov
push
das
pop
xchg
xor
flds
pavgb
movsl
mov
stos
inc
test
xchg
subl
stos
jg
jp
gs
pushl
lcall
cmp
cld
sahf
sarb
mov
pop
pop
push
scas
lret
sub
jg
xorl
in
cmp
andnps
shll
daa
and
inc
cmc
inc
fxch
loopne
fnstcw
je
push
jns
insl
jo
rcll
sarl
das
orl
mov
stos
inc
or
cld
fsts
es
fnstsw
sbb
cmp
clc
das
mov
cwtl
pop
nop
testl
and
mov
das
pop
daa
rcr
sbb
and
or
pusha
and
bound
lcall
pop
addl
loope
mov
mov
sub
pusha
arpl
sbb
mov
es
insb
lea
inc
push
sub
xchg
jle
push
mov
dec
xor
das
in
nop
or
jae
in
push
jns
in
nop
jbe
icebp
icebp
add
popf
mov
jo
fsub
out
addl
out
sti
daa
pop
lods
xchg
sbb
cmc
xor
xchg
fisttpl
pushf
dec
into
xchg
or
popf
nop
inc
fcom
test
and
adc
sub
ljmp
test
jae
mov
movsl
pusha
adc
inc
stos
cmpsb
dec
jle
insb
scas
out
sub
mov
shll
fdiv
idivl
mov
sarb
in
push
aad
outsl
bound
test
ss
jns
sub
in
sub
nop
imull
gs
and
out
lsl
pop
into
daa
addl
cmp
adc
mov
cmpsb
jnp
pop
xchg
cmpsl
jb
fwait
or
insl
xchg
testl
cmp
mov
lcall
test
fildll
push
mov
mov
xor
jg
arpl
hlt
jo
test
xchg
mov
dec
mov
sub
test
fisubs
lcall
rcll
xchg
sbb
subb
fwait
mov
fmul
cmp
lea
ds
loop
cmpsl
popa
dec
mov
inc
mov
jp
fmuls
ljmp
xor
and
inc
adc
and
clc
stos
add
shll
push
mov
mov
test
test
xchg
imul
scas
inc
sti
mov
lods
mov
sub
xchg
pop
xchg
stc
and
sbb
out
pop
sahf
inc
mov
or
add
ret
fcomi
lret
sbb
es
dec
jns
mov
and
jnp
mov
fsub
inc
jne,pn
and
jmp
mov
inc
fiaddl
mov
add
xor
lret
popf
mov
mov
push
cmpsb
cmc
fdiv
add
cmpl
and
inc
pop
adc
mov
out
bnd
fildll
cmp
test
rorl
pop
ret
test
in
or
repnz
sbb
ja
aad
dec
or
imul
enter
adc
or
imul
push
nop
pop
add
sarl
ror
xor
dec
xchg
dec
inc
leave
roll
xor
call
popl
mov
jns
inc
int
out
roll
or
xchg
loop
cmpsb
out
icebp
nopl
pop
faddl
pop
mov
fidivrl
jmp
jg
cwtl
add
xor
imul
pop
cmp
cmp
pop
cmpsl
dec
mov
xorl
lret
dec
push
sti
and
or
pop
lds
repnz
fmull
loopne
xor
fimull
iret
sahf
mov
xor
cltd
lods
sahf
repnz
or
sarl
stc
test
jge
adcl
dec
mov
and
ja
out
add
inc
xor
jecxz
in
bnd
orb
xchg
in
jl
arpl
jle
push
xchg
pop
xor
js
push
cmp
inc
daa
sti
cld
cmp
mov
and
mov
jne
and
scas
xchg
and
push
push
pop
arpl
push
dec
aam
nop
push
mov
insb
repz
jo
add
sahf
add
clc
in
add
cmp
and
jno
test
imul
insb
pop
dec
mov
and
rclb
xchg
movsl
cmc
mov
das
add
in
xchg
xlat
sbb
jle
or
out
dec
and
rol
jo
stos
xor
inc
iret
mov
pushf
lock
push
es
bound
dec
call
sbb
movsb
test
mov
xchg
sub
dec
cmp
xchg
mov
jmp
inc
popf
mov
psubw
push
cmp
fwait
stos
fwait
and
rol
sub
aad
shl
or
xchg
rolb
ret
or
ja
adc
mov
xlat
mov
jmp
jge
mov
xchg
lods
pop
pop
std
enter
mov
mov
hlt
test
mov
negl
lcall
cs
adc
jl
dec
imul
push
xchg
in
int
lods
xchg
dec
faddl
and
mov
inc
or
jno
push
enter
loope
xchg
mov
push
dec
adc
mov
inc
not
mov
das
outsl
jmp
loope
mov
hlt
je
ret
lea
cmp
adc
xchg
leave
xor
loop
push
outsl
xchg
data16
lret
mov
xor
outsb
cld
pop
scas
out
cld
xchg
rcrl
or
sete
adc
insl
cmp
stos
das
scas
and
out
inc
add
js
xchg
jno
inc
xor
lret
cmpsb
cs
mov
pop
sbb
into
inc
out
adc
push
jne
push
push
movsl
mov
xor
and
aam
cmp
mov
cmpsl
xchg
inc
and
js
das
xchg
or
pushf
aas
je
mov
push
mov
pop
cmp
xchg
fisubrl
inc
xlat
jmp
sti
adc
push
pop
sub
xchg
sbb
mov
out
jns
dec
inc
adc
stos
out
popa
decb
sarb
pop
mov
dec
jo
dec
xchg
dec
subb
shlb
xchg
bound
xor
sar
das
jle
test
scas
lret
add
jae
hlt
cs
dec
fs
outsb
int3
vmovmskps
xor
scas
imul
in
pop
and
mov
jno
into
fwait
imul
and
add
mov
loope
xor
mov
mov
adc
jb
dec
jo
aas
and
inc
jmp
or
test
or
out
popa
mov
dec
mov
fsts
mov
jp
fistps
fcoml
mov
pusha
negl
in
sub
repz
mov
pop
dec
out
aam
mov
add
ror
rorl
or
push
fldenv
cmpsb
jae
repz
das
in
scas
push
loopne
std
push
mov
out
push
ret
js
inc
jnp
cmc
repnz
adc
and
cmp
mov
cs
adcl
or
lods
loope
cmpsl
out
scas
lods
shrl
push
loopne
dec
mov
dec
les
inc
dec
mov
cmp
mov
sbb
popf
icebp
mov
pop
into
out
adc
jp
xor
out
adc
jne
leave
push
jmp
pop
dec
mov
inc
jns
out
popa
add
hlt
jo
out
xor
cmpsb
lds
push
lock
lret
loop
in
outsl
addl
add
loope
cli
fdivl
lock
mov
mov
adc
pusha
push
inc
and
lcall
daa
mov
dec
and
js
pop
mul
mov
jb
or
daa
sbb
sub
add
mov
cmp
jns
mov
add
arpl
xor
jl
repnz
mov
sahf
cli
xchg
and
xchg
xchg
xor
or
fcoms
repnz
mov
push
cltd
push
insb
mov
sarl
push
xchg
pop
pop
in
ficompl
push
enter
xchg
js
icebp
inc
mov
leave
push
gs
push
out
push
and
mov
push
dec
xor
add
aad
push
xchg
aam
mov
cmp
jno
inc
pop
jae
outsl
fidivrs
mov
lea
imul
add
mov
std
hlt
scas
loop
es
xor
bnd
and
jbe
and
sub
or
es
out
jle
insl
or
shrl
pop
arpl
jmp
jp
cmp
pop
rorl
bound
dec
test
out
stos
stos
sbb
out
lret
xchg
dec
jle
in
xchg
push
jae
js
and
scas
dec
sub
push
jle
xchg
sbb
mov
sub
add
pop
test
das
adc
aas
jb
loop
add
push
push
mov
nop
pop
repz
inc
loopne
jno
dec
repnz
insb
push
push
jbe
scas
mov
mov
xchg
rolb
push
mov
bound
aaa
sub
cmp
mov
adc
sarb
imul
int
jne
dec
push
inc
jmp
hlt
call
dec
pop
jbe
xchg
jl
xchg
push
mov
jae
xchg
xor
in
dec
loop
inc
fwait
add
movsb
pop
push
into
push
jbe
push
mov
icebp
adc
adc
mov
or
nop
push
mov
clc
shl
in
lea
jbe
jge
sar
sub
mov
mov
sti
mov
inc
in
jo
pop
fwait
push
or
shl
hlt
cmpsb
sti
sti
or
cs
adc
fdiv
jnp
dec
loope
out
sub
inc
lahf
stos
stos
or
mov
push
add
jno
andb
and
jmp
inc
pusha
int3
xor
movsb
inc
fnstcw
push
mov
xchg
divl
mov
mov
aad
sub
jmp
xor
fcmovne
mov
pop
cltd
and
psrlq
fiaddl
xor
mov
das
cld
scas
inc
lret
cmp
inc
mov
add
pop
jecxz
sub
out
cmc
imul
lock
repz
push
stc
pushf
inc
scas
and
mov
push
daa
bound
ret
add
fs
aam
clc
push
mov
out
add
and
sbb
iret
ljmp
mov
cltd
jmp
sahf
data16
sub
aam
dec
push
mov
push
pop
repnz
jg
outsl
ss
pop
outsl
mov
jmp
xor
loope
dec
pop
pushf
push
hlt
cmp
cmp
adc
pop
and
dec
leave
mov
shl
loope
popf
push
jns
add
dec
sbb
loope
imul
aam
cmp
mov
pop
dec
xor
outsl
pop
in
lret
xchg
push
jne
jo
icebp
mov
mov
scas
cmpsb
push
pop
movsl
xchg
stos
xlat
push
dec
adc
adc
adc
icebp
push
cmp
mov
add
stos
je
sbb
jbe
dec
adc
jmp
inc
add
daa
movsl
scas
sahf
lods
sbb
dec
push
fbstp
sub
xor
in
jmp
cmp
add
aad
aad
cmp
loopne
ror
shlb
testl
pop
ret
mov
jno
pop
es
call
sti
leave
xlat
add
sub
cmp
jno
lods
scas
and
addr16
mov
lcall
xor
adc
xchg
sbb
push
mov
push
push
xchg
mov
vmovd
dec
loop
mov
and
cmp
mov
mov
lret
enter
sbb
movsl
mov
jns
outsl
or
adc
dec
push
aas
cmc
lret
cmc
lock
xchg
pop
sahf
popf
movsl
dec
dec
sar
lods
lea
insb
loopne
call
pusha
mov
mov
fbld
lea
mov
jg
cmp
pop
and
push
sub
jno
xchg
in
or
jp
movsb
fcomps
scas
lea
in
mov
push
sahf
std
test
jecxz
iret
and
and
lea
or
pusha
add
xchg
inc
mov
add
xchg
and
fsubrs
shlb
gs
pop
add
dec
pop
xor
add
adc
jmp
adc
sbb
mov
mov
test
std
adc
notl
icebp
cmp
and
mov
jle
stos
xor
movb
jecxz
mov
dec
lret
pop
jae
fdivl
or
sbbb
test
jbe
mov
mov
or
pop
xor
fidivrl
jnp
ret
cltd
add
or
dec
scas
pushf
inc
jecxz
imul
pop
lea
stos
scas
push
sahf
add
xchg
cwtl
jb
sbb
or
cmp
lods
add
xor
daa
int
mov
and
push
bnd
bound
int
mov
pushf
pop
out
xchg
adc
add
pop
mov
ljmp
mov
test
sahf
pop
popf
sarb
or
mul
push
scas
lret
jnp
rorl
je
jg
stos
and
mov
ret
in
adc
or
mov
stos
inc
xor
mov
stc
jmp
xchg
jmp
roll
dec
and
cmp
ds
xchg
imul
push
xorb
test
daa
xor
aaa
add
shlb
xor
jl
jno
mov
lahf
cmp
xchg
in
push
hlt
cmp
mov
repnz
push
loope
push
mov
adc
sub
jno
mov
jbe
add
ret
repnz
movsb
adc
fisubrs
loope
aas
cmpsl
lds
andl
ds
sub
cltd
data16
lds
cltd
adc
xor
out
sbb
inc
adc
jo
and
ljmp
movsl
mov
push
icebp
ds
pusha
popa
sbb
shlb
imul
push
adc
outsb
repz
xor
pop
jl
arpl
cmp
test
xrelease
jae
xor
jbe
jno
call
std
add
shl
loopne
rolb
jnp
sub
dec
xchg
mov
pop
aad
out
cmp
out
mov
pop
frstpm(287
xchg
data16
adc
mov
mov
mov
cld
shll
push
lods
je
add
mov
ror
out
adc
and
mov
mov
setnp
mov
test
imul
mov
push
sbb
and
and
sub
and
adc
outsl
int
call
lret
into
push
push
jecxz
jb
inc
mov
sbb
hlt
push
sub
fcoml
lods
jne
test
sahf
sub
push
movsb
mov
repnz
xchg
movsb
mov
xchg
pushf
in
mov
push
sbb
pop
shll
out
adc
xchg
push
sub
add
pop
pop
sarl
lds
fiadds
test
ja
push
jns
cmpl
es
fwait
les
bound
stos
inc
arpl
fldl
sbb
ret
jns
jmp
mov
bound
xchg
insl
sub
rcrl
mov
inc
pusha
mov
inc
cmpsl
push
cmp
jae
adc
ret
push
jae,pt
mov
pop
pusha
dec
aas
lret
add
ss
pop
fmulp
and
fimull
ror
or
or
cmpsb
out
popa
into
add
pop
out
push
jbe
pop
and
mov
fmull
xchg
lods
out
and
and
dec
psubq
shrl
mov
and
ds
add
adc
and
jns
sub
push
dec
insl
xor
mov
dec
dec
popa
sti
or
xchg
cmp
inc
mov
sbb
call
pop
ljmp
cmp
push
adc
out
mov
jg
testl
jl
clc
lcall
xchg
fs
pushl
ret
stos
std
dec
pop
jns
inc
rolb
xor
sub
mov
dec
aas
push
lea
fs
lods
push
aad
loopne
and
dec
out
ds
sbbl
cmp
out
clc
add
mov
cmp
xor
pop
aam
loope
mov
clc
lods
daa
cmp
dec
inc
cmp
rolb
add
stc
xlat
rcll
xor
fistpll
push
stc
insl
addr16
xlat
fcomps
pop
int
and
addr16
mov
mov
sti
out
dec
mov
mov
inc
add
lods
inc
xchg
pushf
xchg
mov
adc
cli
pop
mov
sbb
adc
insl
or
stos
test
fdivrs
andl
mov
push
andl
dec
scas
mov
cli
bound
in
cmp
rcrb
mov
or
mov
dec
push
aad
lret
mov
sbb
ficomps
push
lret
popf
sbb
add
fwait
rclb
and
into
mov
or
mov
in
inc
stos
adc
mov
or
xchg
pop
sub
pushf
xor
mov
in
inc
into
fdivl
pop
enter
sarb
out
lods
in
imul
dec
iret
mov
mov
cmp
cmp
dec
fnstsw
pushf
leave
loope
dec
enter
popf
mov
test
inc
popa
mov
cmpsb
fadds
pop
mov
scas
ja
jb
adcb
or
outsl
fcmovbe
push
lret
and
pop
jecxz
std
cmpsb
inc
mov
bound
popf
inc
pop
shrl
inc
inc
fsubr
gs
incb
or
cld
lods
das
mov
mov
sbb
or
dec
ret
shl
sbb
pop
add
popl
or
add
dec
sbb
ljmp
or
cmp
mul
out
fwait
inc
mov
mov
std
jmp
sub
rcrl
mov
add
stos
loopne
jae
xlat
call
repnz
inc
loope
add
sbb
lretw
je
cmp
mov
test
cwtl
pop
cwtl
jns
and
mov
or
test
lcall
sbb
iret
pop
xlat
or
popf
sbb
fistps
sbb
pop
or
mov
out
insb
inc
mov
mov
sub
pop
push
andl
aaa
out
enter
mov
pop
inc
xchg
xchg
inc
fwait
xchg
je
xor
fdivr
out
or
jno
enter
and
arpl
lcall
jns
and
scas
dec
sub
mov
jecxz
loope
inc
adc
popa
push
mov
insb
jge
dec
loop
sarb
adcb
cli
pop
data16
mov
in
add
mov
cmpsb
push
add
gs
ficomps
js
push
orl
scas
pop
gs
ror
fwait
lcall
xchg
mov
hlt
jmp
jo
adc
fadds
push
mov
mov
pmulhw
adc
mov
cs
inc
shlb
mov
pop
sub
icebp
add
pop
popa
cmp
push
mov
dec
call
shrb
test
mov
jge
faddl
mov
and
xchg
mov
xlat
jecxz
out
pop
xor
out
dec
ret
cli
xchg
gs
xor
jne
sarb
add
imul
icebp
mov
adc
or
jecxz
div
mov
stos
cli
inc
or
mov
popa
mov
xor
push
aam
mov
mov
repnz
stos
cmp
jg
and
dec
sbb
push
push
add
mov
movsl
cmpsb
lret
push
and
shll
in
aam
mov
aaa
dec
pop
sub
xchg
fs
fisttpl
or
addb
icebp
mov
in
push
pushf
or
jge
adc
pop
cs
push
lock
mov
imul
outsl
dec
pop
outsb
loop
arpl
xor
push
jae
and
cmp
cmp
cmc
adc
lret
inc
cmc
cwtl
and
adc
adc
mov
add
xor
fbld
gs
jo
cltd
xor
add
lret
jnp
cli
movsl
in
xchg
loopne
insb
xchg
imul
dec
enter
and
imul
inc
dec
stos
sarb
mov
scas
sub
xchg
and
outsl
push
dec
sbb
dec
mov
push
insb
int3
jmp
mov
dec
cmp
hlt
inc
inc
add
mov
sbb
test
cmp
lods
sbb
jp
mov
aas
insb
movsl
out
xchg
loope
fstp
test
dec
lcall
dec
gs
sahf
unpcklps
cmp
movsb
cmp
shlb
enter
mov
aas
aaa
add
jle
fstpl
and
or
pop
les
pop
xor
mov
mov
out
add
jno
shll
imul
pop
sarl
mov
jbe
jbe
std
popl
stos
cld
fs
push
or
adc
in
dec
add
dec
or
adc
jae
sub
jg
test
xor
jno
xchg
testl
pop
cmp
adc
and
sbb
xor
loope
mov
dec
inc
aas
pop
push
call
xchg
xor
jp
pop
inc
jbe
pop
je
lock
adcl
mov
aas
push
xor
stos
in
popf
adc
cltd
xlat
out
cmp
hlt
out
xor
pop
adc
mov
lahf
inc
call
add
leave
sbb
daa
fmul
pop
mov
sbb
sahf
xor
ss
jbe
add
mov
aas
ds
jnp
lock
rcrb
loop
mov
mov
test
pop
cmpb
in
pop
jns
jg
adc
roll
outsb
cmpsb
cmp
mov
jb
inc
in
nop
movsb
cmp
mov
push
xor
add
mov
xchg
data16
mov
dec
mov
cmp
or
cld
fucomip
sub
and
fwait
mov
cmp
into
xor
testl
ja
or
fidivl
movsb
ljmp
jmp
xchg
xor
xor
or
hlt
fadds
lcall
test
or
jmp
out
push
push
add
add
stc
jmp
pop
pop
push
sti
es
jecxz
jb
aaa
dec
mov
nop
bound
test
pop
xlat
dec
xchg
cmp
add
or
inc
mov
fsubl
jp
sbb
movsl
dec
adcl
cmp
call
nop
in
rolb
ja
dec
dec
clc
add
sub
bound
shl
jl
pop
int3
xchg
cmp
repz
dec
leave
rolb
push
inc
adc
es
inc
sub
in
cs
jo
xor
imul
mov
or
pusha
out
into
pop
mov
aaa
mov
add
daa
aaa
jg
test
pop
xor
jnp
dec
cltd
push
pop
mov
scas
pop
mov
mov
lcall
cld
sti
adc
or
aas
mov
xchg
cmpsl
mov
jbe
pushf
adc
call
xor
mov
sbb
imul
push
sti
dec
fwait
ja
mov
movsl
insl
mov
jb
iret
pop
push
xor
and
mov
jl
pusha
push
call
adc
and
mov
notl
jne
sub
or
gs
jae
jne
ja
add
pop
and
inc
lcall
add
in
cmp
push
push
xchg
xchg
imul
aaa
lods
cmp
movsl
call
rolb
adc
jb
dec
cs
std
mov
lds
xchg
test
add
adc
and
inc
xor
xchg
les
adc
ds
test
sbb
sahf
pop
fidivs
cmpsb
daa
cwtl
sub
outsb
dec
pop
outsl
xchg
imul
ffreep
imul
enter
inc
and
dec
add
insb
pop
and
add
dec
mov
xor
or
inc
dec
fucomi
mov
push
cmp
lds
in
push
ret
ja
hlt
adc
jge,pn
mov
inc
inc
aam
push
jae
ja
cmp
cmpsl
jnp
push
fidivrl
lcall
mov
popf
lods
sub
xor
sti
add
mov
xchg
adc
xor
add
and
shrb
mov
fstpl
mov
adc
sub
mov
enter
cs
scas
pop
test
aad
gs
mov
popa
pop
ds
xchg
mov
repnz
negl
xor
inc
loop
sbb
repnz
inc
pop
insb
rcrl
sbb
lret
loope
mov
xchg
aam
mov
and
mov
rcrl
rcrl
es
in
imul
scas
aad
mov
shlb
shlb
int3
inc
mov
push
daa
sub
mov
iret
and
mov
and
jecxz
aam
or
lahf
pop
iret
add
push
mov
frstor
push
cmc
fnstcw
adc
mov
cli
shll
ret
pop
push
aas
jl
aas
push
push
arpl
mov
fwait
jne
mov
out
psrad
std
jbe
jne
enter
rol
mov
mov
daa
dec
out
mov
mov
ljmp
enter
gs
jo
jae
sub
gs
arpl
orl
pushl
push
pushf
or
cmpsl
jnp
aaa
sub
cmc
ffree
movsb
int3
movzwl
lret
stc
bound
loope
inc
sbb
pop
mov
mov
sub
sahf
sbb
dec
ja
jo
push
into
push
xchg
and
push
lahf
mov
sbb
jl
adc
lock
xchg
pop
inc
aas
fcoms
popa
inc
mov
popf
or
add
jns
cmpsb
mov
mov
dec
les
in
mov
sbb
jge
flds
xchg
ror
push
push
push
xchg
fsubrs
jg
sub
adc
mov
mov
in
jae
push
lock
and
sbb
mov
fld
inc
and
dec
cmp
or
xor
cmp
jg
inc
lods
xchg
daa
push
lock
xor
mov
sbb
std
es
push
repnz
pop
mov
fisubl
push
mov
and
inc
mov
ljmp
scas
add
out
mov
insl
push
mov
mov
mov
xchg
fadds
std
pop
stos
push
jae
fists
xor
jp
add
mov
aad
cltd
scas
fists
push
imul
cli
loopne
mov
insb
jmp
jnp
mov
ds
int3
daa
adc
imul
fidivrs
mov
sbb
adc
ficoml
push
scas
outsl
jns
or
push
icebp
pop
out
xchg
fnstenv
push
jnp
pop
mov
sbbb
sub
push
or
sti
out
fdivs
out
dec
dec
fistpl
fwait
push
gs
jge
jns
push
je
fst
test
push
test
mov
test
mov
jno
dec
fwait
cwtl
js
mov
ljmp
in
or
cmp
inc
fld
push
mov
mov
xchg
stc
mov
daa
test
loop
pushf
test
pop
adc
and
pop
repz
inc
jmp
pop
mov
sahf
mov
data16
lret
sahf
aam
dec
rcrb
adc
clc
sbb
adc
addr16
shll
enter
sbb
xchg
outsl
cmp
sahf
iret
push
sub
cwtl
loopne
mov
pop
mov
mov
push
jecxz
jns
fwait
lret
jo
xor
xorl
push
nop
popa
xor
neg
shrd
je
fcomip
inc
mov
ds
adc
sub
arpl
mov
mov
mov
movsb
cli
testb
lods
cs
and
test
sub
push
fcoms
out
testb
fdivr
sbb
push
adc
cmp
sar
fxch
inc
aaa
cmp
inc
movsb
inc
pop
add
jp
movsl
aam
jns
dec
push
sti
das
rolb
dec
xor
in
repz
push
sub
dec
imul
xchg
push
in
jl
movsl
fstp
enter
in
sub
and
or
adc
and
mov
push
int3
loopne
pop
rol
push
addl
pop
inc
popl
mov
rclb
loop
cmp
sbb
or
push
test
imul
sbb
fcomps
pop
mov
mov
push
fnstsw
or
lods
push
sbb
fdivrl
popa
loop
jae
sti
add
dec
xor
and
inc
cwtl
adcb
sub
hlt
pushf
mov
cmp
sub
cmp
lds
aam
mov
scas
ret
jp
jle
jp
pushf
leave
or
test
cmp
aam
mov
inc
mov
mov
pusha
mov
stc
and
jne
cs
mov
es
fs
das
mov
lock
adc
outsl
out
add
or
cs
pop
imul
jp
inc
notl
outsb
sub
jns
mov
sub
mov
dec
push
push
jge
sub
sbb
pop
or
scas
ljmp
pop
pop
adc
sub
pop
js
fmuls
fstps
add
je
mov
xchg
xor
xor
inc
test
xchg
inc
imul
jl
mov
js
inc
dec
inc
icebp
mov
xchg
rcrl
mov
inc
pop
and
inc
outsl
loopne
test
mov
fwait
out
and
adc
repnz
pop
xchg
testb
or
and
or
and
inc
jnp
adc
mov
pop
jae
cld
in
mov
sahf
es
leave
inc
arpl
push
or
add
mov
jno
mov
scas
lods
add
jnp
push
pop
xchg
test
jbe
jae
mov
xchg
in
adc
iret
fdivrl
add
jne
fldenv
enter
sbb
mov
jl
dec
mov
push
stc
adc
xchg
mov
stc
mov
and
mov
or
mov
sub
xor
pop
and
add
fmuls
pop
pop
mov
addr16
xchg
dec
xor
mov
mov
sti
orl
mov
add
jae
mov
xor
push
jp
popa
lret
cwtl
inc
shlb
dec
push
insb
enter
scas
pop
ja
rclb
leave
cmp
jbe
lock
rclb
in
mov
inc
mov
or
push
test
neg
repz
jmp
jnp
fistps
hlt
ret
mov
popa
pop
or
loope
adcb
mov
mov
jp
fisubrl
mov
movsl
or
jae
fwait
div
cmp
jns
outsb
pushf
imul
ret
jnp
lds
jae
ljmp
jno
jno
arpl
inc
mov
repz
adc
add
sub
lods
sub
cs
fnsave
out
adc
mov
loop
fwait
nop
inc
jg
xchg
ljmp
cmpsb
push
lds
pop
dec
jmp
nop
mov
and
mov
jno
or
push
mov
jno
movsb
loopne
xchg
xor
sbbl
xorb
stc
sbb
je
outsb
adc
icebp
lahf
add
mov
outsl
test
xchg
fcompl
out
mov
imul
dec
cmpl
in
mov
imul
dec
add
cmp
repnz
les
call
sub
sar
sbb
push
adc
jmp
bound
lock
xor
out
test
push
ljmp
push
outsb
aad
stos
dec
jne
sub
add
ds
and
fdiv
or
sub
mov
jl
inc
pop
or
fistl
mov
dec
xchg
or
push
push
fidivl
ret
cmp
jb
std
inc
stc
xor
stc
push
fstpt
adc
or
lods
add
cli
js
xchg
adc
mov
mov
jns
push
les
mov
or
push
pusha
scas
fwait
int3
push
sahf
cmc
dec
out
notb
cmp
pop
in
jae
dec
and
mov
loop
xchg
or
movsb
sbb
push
or
mov
mov
jmp
rcrb
test
stos
cmp
cmp
add
mov
enter
sbb
add
int
push
pop
ljmp
sub
les
mov
int
pusha
imul
scas
xchg
fmuls
popa
fmuls
mul
inc
push
icebp
lea
push
xchg
leave
dec
mov
cmpsl
jp
js
or
negl
js
dec
mov
lods
andb
mov
jmp
jae
xor
cmp
add
aas
xchg
aaa
inc
xor
imul
jno
push
sahf
sbb
or
add
and
xchg
mov
mov
cli
sbbb
xchg
pop
stc
mov
movsl
out
in
mov
and
sbb
jmp
aad
xchg
rcrb
out
int3
loopne
ds
inc
daa
add
pop
pop
imul
sti
xor
lret
xchg
fstl
xchg
dec
mov
ja
imul
sahf
or
ljmp
mov
pusha
inc
sub
fbstp
fwait
jmp
js
shl
jne
xchg
mov
dec
nop
sub
loopne
dec
lock
fs
xchg
mov
scas
mov
insl
mov
outsb
test
xchg
cmp
adc
xchg
jp
ljmp
ljmp
adc
mov
cmp
mov
addr16
stc
push
stc
fdivrl
pop
mov
test
lahf
jbe
mov
out
stc
rol
notl
mov
rcrl
in
xor
and
sbb
cmp
xchg
add
add
call
or
xor
sbb
fwait
cld
sti
mov
bound
in
jae
jnp
mov
xor
xlat
and
xor
les
out
xchg
imul
and
icebp
inc
dec
or
adc
lcall
xchg
lcall
mov
or
lea
test
mov
dec
sub
cmp
adc
nop
pop
test
xor
cs
cmp
sti
pop
and
mov
mov
xchg
in
cld
sti
into
xor
negl
mov
jle
pop
and
addb
leave
repnz
mov
jp
mov
dec
mov
inc
cmpsl
inc
jp
push
sub
outsl
mov
xor
mov
mov
out
out
add
loopne
int
adc
lcall
add
jge
mov
cmp
push
fisubrs
enter
sbb
in
sbbb
cli
jbe
push
cs
add
jl
fbstp
dec
mov
imul
gs
fnsave
ret
lret
cmp
jge
stos
jle
sbb
pop
xchg
jno
stos
out
imul
gs
out
pop
or
xchg
les
add
jne
ret
jo
jmp
mov
or
push
xlat
pop
rcrb
jbe
call
adc
enter
lahf
bound
and
or
ret
pushf
loopne
movsl
sbb
xchg
xchg
jmp
mov
xor
xor
int3
adc
test
jns
xchg
push
sub
jl
jge
roll
iret
mov
call
cmp
mov
sbb
push
test
fdivrl
xor
popf
loope
fcompl
loopne
mov
mov
mov
and
aas
mov
imul
stos
sbb
push
mov
out
andl
pushl
xchg
sbb
stos
enter
xchg
roll
js
pop
rcrl
mov
arpl
mov
push
jno
add
imul
dec
leave
inc
adc
icebp
stos
cmp
add
mov
mov
inc
xchg
dec
lret
shll
xchg
inc
fcoms
ret
pop
mov
call
push
xchg
jns
mov
jle
sbb
nop
bound
mov
andl
popa
pop
gs
xor
push
jmp
aas
aaa
xorl
and
rolb
add
xchg
pusha
xchg
out
dec
xchg
mov
and
cltd
add
js
mov
jmp
jmp
adc
stc
lods
sub
lahf
xchg
sbb
imul
adc
aam
sbb
jb
jb
adc
fsts
sti
out
add
sbb
hlt
nop
add
and
pusha
mov
sub
outsb
mov
pop
sbb
or
push
call
sbb
mov
xor
fbstp
fwait
arpl
lar
fcomps
movsb
mov
cs
lret
push
shrl
lcall
loope
mov
aad
and
or
notb
dec
push
push
and
inc
xor
fdivrp
adc
jns
rcrl
lea
int
push
or
or
xor
pop
popf
push
es
pop
popf
popa
pop
fidivrs
clc
iret
sub
lock
lods
data16
sahf
xchg
add
sub
arpl
mov
sub
jp
lcall
cld
or
jle
fisttpl
stc
jb
add
inc
sti
mov
sub
test
or
jne
mov
or
shl
pop
scas
aas
adc
sub
pop
push
ljmp
pop
or
push
jl
pop
lea
xchg
push
outsb
repnz
xchg
pusha
das
pusha
std
vunpckhpd
shrl
clc
lcall
jno
in
push
jae
fcompl
sub
jecxz
dec
js
jg
jle
insb
add
cli
popa
out
je
jb
mov
mov
cltd
insb
adc
aaa
daa
xor
push
jge
insb
fsubp
add
movsb
arpl
idivb
ds
xchg
shrl
cmc
lret
mov
pop
mov
les
jbe
xchg
mov
dec
stc
rol
insb
xor
je
cmp
jbe
cmp
data16
mov
and
mov
cmp
mov
loope
mull
les
jge
cmp
addr16
or
btr
insl
sub
sub
movsl
sub
dec
stc
lods
stos
mov
in
push
lods
mov
add
cltd
test
icebp
aas
test
cmpl
jmp
rorb
aas
icebp
inc
jo
insl
sbb
es
mov
movsl
dec
ljmp
jnp
jae
adc
lahf
adc
pop
pop
sub
mov
mov
push
test
movsl
repnz
jg
add
out
out
add
aaa
nop
mov
mov
dec
sbb
call
lcall
jl
inc
mov
ds
sahf
fcmovnb
mov
cmpsl
cmp
jl
leave
inc
hlt
into
int
add
mov
push
out
js
icebp
bound
xchg
imul
popf
mov
or
data16
sahf
shr
jb
loope
incb
push
xchg
in
jb
scas
mov
push
push
nop
jo
xchg
mov
or
jecxz
xor
inc
loope
jb
fucomip
in
push
in
push
movsb
orl
dec
js
loop
or
sbb
push
pushf
mov
and
add
sub
cmovle
xor
mov
push
mov
push
ret
sbb
out
inc
mov
add
push
lds
testl
hlt
repnz
lods
mov
adc
pop
daa
or
les
jo
ja
xchg
movsb
push
xchg
ficompl
scas
movsb
imul
int3
mov
mov
add
xchg
ret
dec
in
mov
outsl
push
and
or
push
fildl
fistl
js
cltd
enter
cmp
adc
dec
push
lods
sbb
sub
or
push
mov
imul
sub
pushf
cmpsl
popf
fisttpl
and
enter
xchg
cmp
pop
mov
add
inc
push
xchg
insl
mov
negb
adc
jbe
sbb
push
popa
mov
mov
push
mov
or
fucomi
out
cmp
xchg
fs
fldt
sbb
loop
xor
jp
mov
test
mov
xchg
pop
rclb
push
js
dec
imul
xlat
jbe
in
fisttpl
jbe
mov
movsb
push
iret
sub
and
inc
pop
insl
nop
push
out
jne
jae
fistpll
fisttpll
pop
inc
inc
cmpsl
out
push
inc
test
lahf
pop
clc
mov
ds
in
sub
mov
ja
xor
ljmp
xchg
xlat
fbld
xchg
js
add
cmp
and
push
aam
push
fisttps
test
daa
movsl
add
push
lds
inc
dec
add
mov
inc
std
sbb
mov
lds
and
xor
sub
arpl
jmp
adcl
fcomps
xchg
cmp
xor
sbb
inc
mov
insl
dec
mov
push
testb
jl
aas
rcrb
xor
dec
mov
mov
movsb
sub
or
leave
mov
in
dec
cmp
mov
in
pop
loop
or
sub
xor
xchg
jge
xchg
mov
test
aaa
scas
stos
arpl
js
or
push
cmp
xchg
mov
ja
add
mov
jae
xchg
lret
or
es
mov
lahf
jae
inc
dec
fsubs
daa
ds
shlb
push
pop
fldenv
in
sbb
inc
xor
jmp
push
decl
imul
add
nop
pop
xchg
mov
aam
inc
xlat
mov
mov
mov
mov
mov
xor
lcall
lcall
iret
push
and
rcrl
mov
lret
xchg
das
repnz
add
adc
jno
popf
daa
or
sub
mov
mov
jo
sbbb
fdivrl
inc
jnp
int
clc
jnp
and
movl
outsl
daa
jecxz
push
outsb
sbb
test
sub
out
imul
sub
out
inc
pop
mov
loopne
outsl
and
xor
ja
fildl
xor
insb
add
sahf
lret
adc
fidivl
sub
and
add
and
mov
adc
loopne
pop
xchg
test
arpl
cmpsb
cld
outsb
pop
sub
cwtl
mov
shlb
imul
xor
pop
inc
inc
cmp
xor
ficomps
jp
das
mov
sbb
fisubrl
stos
sbb
mov
sahf
push
xor
movsl
jl
adc
enter
dec
stos
adc
inc
mov
xchg
in
jns
popa
or
mov
rclb
adc
repnz
stos
push
loope
lret
daa
xchg
add
push
and
rol
subl
push
jne
mov
jae
push
cli
xor
pop
in
std
testl
push
mov
aaa
sbb
cs
mov
stc
lret
or
xchg
decb
mov
pop
adc
jg
and
das
pushf
mov
aaa
mov
cs
insl
loopne
adc
cmp
or
fistps
mov
clc
fcomp
rcrb
outsb
shrb
xchg
xor
repnz
pop
xlat
lahf
ds
push
push
mov
xchg
mov
mov
push
add
scas
xchg
xor
mov
int
and
fwait
icebp
imul
and
and
adc
pop
fs
ss
pop
cmpsl
pop
enter
loopne
inc
insl
push
add
push
clc
cmovns
mov
mov
or
jecxz
xchg
sbb
push
and
and
loopne
sbb
xlat
popa
insb
sbb
xor
push
mov
adc
mov
xchg
jo
or
mov
inc
xlat
mov
cmp
or
inc
mov
lcall
jecxz
bound
scas
sub
jg
loop
and
add
inc
call
int
push
shlb
inc
xchg
imul
arpl
xchg
lods
pop
cwtl
mov
pop
mov
mov
lock
pop
je
jae
enter
outsb
js
add
popl
daa
enter
fldenv
rcrl
icebp
xor
jnp
into
in
cs
inc
push
adc
ficompl
nop
out
loopne
test
fnstenv
les
loopne
mov
popf
adcb
lcall
scas
pop
repnz
cmp
dec
pop
inc
adc
cmp
pop
lds
push
xchg
add
in
bound
fidivrl
out
lods
aaa
imul
shlb
mov
push
mov
daa
mov
cmpsl
icebp
mov
push
dec
enter
in
scas
repnz
sti
icebp
jno
sahf
shll
imul
test
aam
pushf
div
in
js
jl
les
pusha
lock
icebp
push
icebp
sub
clc
jns
mov
insb
or
pop
dec
aas
roll
jne
mov
xchg
stos
pop
test
push
nop
lods
fstpl
adc
cmc
kmovb
les
js
test
push
push
add
leave
aas
jb
ja
adc
scas
leave
jmp
xor
adcb
or
jge
xor
pushf
jecxz
push
call
add
pop
movsl
and
fdivl
jnp
lock
mov
xchg
xchg
aad
or
in
negl
es
sub
xor
cs
mov
or
je
jl
aaa
add
and
les
ja
popa
out
lods
lods
sub
push
mov
jo
mov
xor
aaa
loopne
inc
push
pop
stos
xchg
xchg
loopne
jp
mov
cmpsb
sub
pushf
push
push
clc
push
add
adc
mov
sahf
dec
std
scas
in
xchg
out
mov
pushf
push
mov
out
xor
aaa
ret
ja
pop
mov
popf
or
das
mov
add
adc
movsl
and
adcl
lcall
pop
in
xor
xchg
dec
lcall
add
mov
outsl
cmpsl
jns
cltd
xor
cld
fnsave
push
lods
dec
insb
push
into
inc
and
adc
mov
xchg
xchg
outsl
jmp
adcl
mov
ret
test
insb
icebp
fwait
movsl
sbb
lret
cwtl
test
and
popa
dec
stos
mov
xchg
leave
push
out
test
jmp
test
jg
push
cltd
mov
push
pop
repz
rclb
test
in
pop
sbb
icebp
and
hlt
push
je
scas
dec
insb
inc
aam
cmp
mov
shrb
sahf
sbb
ljmp
cmp
fnstcw
repnz
push
mov
or
jg
icebp
orb
xor
daa
test
addr16
cmp
sub
jp
lret
daa
hlt
push
mov
mov
ret
pop
lock
and
repz
pop
shlb
adc
and
mov
sbb
mov
push
sbb
loop
inc
add
subb
cmpl
clc
mov
daa
jnp
lcall
lock
adc
mov
lret
pop
fnstenv
fisubs
nop
dec
in
mov
dec
lret
push
fst
outsb
inc
sbb
mov
push
sbb
das
imul
jae
fcmovnu
mov
push
pusha
cmp
fildll
rcll
push
cmp
stos
rorl
sbb
and
fcmovu
test
add
pusha
call
pop
adc
in
shr
sub
repnz
cmpsl
out
sub
mov
mov
cmp
mov
push
and
xchg
add
inc
call
pop
leave
jo
xor
icebp
stos
add
arpl
sbb
inc
fidivrs
sarb
hlt
add
mov
mov
rol
cli
pop
fistl
mov
test
dec
push
xor
mov
mov
gs
mov
xor
aam
into
dec
daa
mov
ds
adc
cld
sub
imul
mov
mov
sarl
sub
es
push
sbb
and
faddl
sbb
sbb
inc
or
jl
int3
lea
fisttpl
clc
ds
out
mov
cmpsb
push
push
mov
mov
xchg
add
pop
fimull
outsl
ret
pop
into
cmp
pop
sbb
mov
cwtl
stc
push
into
rorb
or
xor
adc
das
and
add
push
cmc
jecxz
xchg
and
pop
jae
sarl
xchg
mov
sbb
jae
hlt
andl
cmp
aam
sub
xchg
add
out
push
andl
dec
mov
aas
loope
pop
sbb
mov
seto
lock
loop
mov
out
jge
mov
fisubrl
jmp
xor
lock
shl
jns
cmp
mov
jno
sbb
dec
xor
rorb
adc
mov
dec
fs
fsts
hlt
mov
pop
mov
adc
xchg
push
shrb
xor
push
add
outsl
sarl
iret
cmc
pop
or
xchg
inc
mov
dec
sbb
inc
push
aaa
aad
mov
repnz
cld
xchg
loop
pop
and
pop
outsb
add
push
mov
mov
int3
ret
fidivrs
popf
das
mov
sbb
adc
jnp
and
cmp
fimull
cmpsl
xchg
mov
and
shl
stos
pop
in
cld
cli
sbb
bound
cmc
rol
push
or
scas
mov
sub
jmp
test
cmpsl
int3
fistps
aas
mov
popf
push
lret
jb,pt
xor
sahf
ret
std
xchg
inc
mov
cmp
ja
rcll
inc
loope
dec
cmp
orb
mov
pop
pop
ret
lods
sub
shlb
clc
aaa
decb
and
loope
sub
pop
mov
iret
sub
int3
push
and
fisubs
mov
insb
jne
test
pop
lea
adc
adc
xor
testb
addr16
mov
out
push
shlb
xchg
add
dec
cld
add
sbb
pop
aaa
outsb
sub
cli
push
push
cld
fidivs
xchg
mov
push
decl
jno
das
cld
out
inc
sarl
mov
push
lods
pop
lds
xchg
clc
add
and
mov
dec
jne
cmp
sub
pop
out
arpl
or
lea
nop
xchg
mov
sub
xchg
xchg
cmp
pop
cli
jmp
jg
push
shrb
jo
xchg
inc
bound
movd
icebp
push
rorl
jbe
sub
xlat
or
iret
pop
jb
inc
add
and
das
movsb
stos
or
jb
notb
push
jae
sub
dec
inc
jp
sbb
je
cmpsl
xchg
call
cmp
push
lods
insb
maxps
cld
outsb
sti
xlat
clc
sbbb
xchg
sbb
mov
adc
jbe
lds
fistl
cmp
lds
into
xlat
pop
fdivrs
dec
stos
mov
call
xchg
movsl
ja
leave
pop
test
sub
and
jp
adc
inc
aas
jge
popa
loope
fsubrs
or
mov
lcall
fdivs
sub
imul
ficompl
mov
loop
lcall
and
pop
adc
je
pop
add
sbb
popa
sbb
xor
push
aam
test
cmc
rorl
adc
add
pop
xor
adc
add
mov
cmp
jno
xchg
stos
testb
addr16
or
add
adc
out
cmp
add
out
outsb
inc
sbb
movsb
xchg
hlt
dec
adc
jmp
icebp
xor
out
sahf
pop
jne
jg
loopne
dec
dec
cmp
pop
or
xor
stos
rorl
mov
adc
cld
dec
fidivs
scas
jg
nop
adc
pop
or
sbb
sbb
std
dec
loopne
jl
shl
pop
xor
movsl
popf
pop
xchg
jns
sahf
lcall
cs
rolb
inc
jns
pop
push
and
lock
sbb
mov
repz
std
jns
das
notb
rcrl
jae
loop
mov
push
pop
inc
inc
and
nop
lea
movsb
outsl
inc
stos
sbb
cmp
pop
adc
cltd
xor
rcrb
jl
aad
insb
sbb
xchg
repz
inc
sbb
daa
and
les
ljmp
lret
outsl
out
push
sti
xchg
mov
das
adc
mov
xorl
movb
cmp
pop
jge
xchg
call
dec
sub
stos
sar
mov
mov
mov
adc
ds
xor
dec
add
xchg
xchg
push
stos
int3
cwtl
sbb
cmpsb
add
testb
xchg
nop
pop
pop
mov
iret
push
fisttpl
js
cmp
gs
lret
lret
fnsave
xor
je
lahf
std
nop
neg
jle
push
jno
lds
scas
dec
and
add
mov
fimuls
sub
or
orl
cmpsb
aaa
rcrl
mov
pushf
movsb
fdivrs
adc
mul
pop
lea
sti
mov
shll
xchg
jl
dec
inc
pop
fsubs
xchg
cmp
xchg
or
mov
shlb
xor
or
psubq
xchg
cmc
rorl
xchg
add
sbb
loop
arpl
jl
dec
and
xchg
inc
loopne
xchg
lds
aaa
imul
xor
pop
xor
loopne
or
dec
adc
xchg
jecxz
push
jo
rorl
inc
cmpsl
cmp
mov
stos
pop
inc
subb
ljmp
pushf
popf
lds
test
push
call
add
das
add
popf
cld
ljmp
inc
outsl
test
add
lret
jmp
cmp
inc
xor
mov
mov
mov
xchg
add
stc
pop
bound
outsl
shl
jle
popf
pop
addr16
cmp
jne
add
ret
adc
pushf
dec
dec
xchg
movsb
cs
lahf
jp
pushl
mov
cmp
pop
outsl
ljmp
inc
out
insl
adc
cltd
shrb
jle
cmp
add
lods
aaa
push
lcall
xchg
test
addr16
jbe
or
lret
nop
pusha
sbb
sahf
jb
inc
fcomps
loopne
mov
inc
les
add
push
mov
into
or
xchg
sub
mov
mov
data16
jp
fs
gs
rcrb
jo
push
pop
xchg
aad
sub
cmp
mov
add
sub
jecxz
xor
inc
mov
pop
in
popf
jmp
test
popl
dec
cmp
cmp
push
repnz
insl
push
mov
pop
lret
lea
jae
repz
in
out
out
adc
xor
mov
and
xchg
shlb
jae
or
gs
scas
pop
xor
sub
arpl
adcb
lretw
fldcw
aad
fcoml
jne
push
jecxz
pop
sbb
into
cmp
std
inc
mov
mov
lahf
mov
cli
sub
pop
pop
sbb
xor
inc
jb
sub
fisttpll
je
cmovle
mov
adc
sahf
enter
shll
sbb
add
orl
xlat
push
cli
hlt
sbb
sub
sub
inc
xor
xor
fisubrl
push
into
pop
arpl
call
lret
nop
cmp
sbb
jl
cltd
lods
inc
mov
mov
and
psubq
or
cld
jge
rep
imul
movb
arpl
dec
js
inc
jno
add
notl
fcoms
adc
push
jp
sahf
inc
push
mov
or
int
mov
pop
loope
push
dec
sbb
fscale
jmp
pop
or
fisubrs
in
out
es
mov
mov
and
jecxz
out
push
lods
add
stos
mov
iret
and
icebp
andl
mov
adc
std
xor
jnp
cmpsl
push
hlt
insl
into
xchg
cwtl
inc
xchg
inc
sbb
shrb
mov
or
cmc
sbb
xor
or
xchg
push
bound
push
sbb
cmp
or
add
cmp
pop
mov
rcll
and
pop
iret
sub
adc
add
test
xchg
mov
or
push
sbb
lahf
stc
push
pop
xchg
dec
fdivrl
jl
sbb
outsl
scas
in
mov
mov
aam
mov
int
fbld
or
clc
jne
pop
push
adc
sbb
ret
enter
mov
dec
clc
jmp
add
inc
jno
mov
xor
and
aam
test
push
hlt
loope
xor
sbb
sbbb
popf
cmc
test
mov
adc
xchg
dec
add
pop
mov
mov
adc
aad
mov
and
test
dec
and
sub
rorl
mov
enter
test
inc
inc
xor
lret
in
pop
xchg
jae
push
cmp
mov
cmc
stos
jbe
jne
ljmp
out
or
cwtl
inc
and
cmp
int
repz
fs
jae
fsubl
fwait
loop
xchg
or
lret
dec
jg
imul
loope
pop
sti
sub
mov
aam
sub
jno
cltd
fnstcw
outsb
pop
xor
out
leave
rcll
adc
ja
es
sub
into
cmp
es
sbb
in
dec
sub
andl
push
inc
andb
push
enter
xor
ret
mov
xorl
add
fsubr
dec
movb
mov
rcrl
inc
pop
sbb
bound
pop
data16
outsb
pop
add
test
cmp
orb
sub
ss
sbb
push
test
cmpsb
push
jle
mov
or
inc
cmp
xchg
in
inc
out
cmp
adc
js
xor
bound
cwtl
das
push
andb
cmc
inc
adc
ret
in
clc
sbb
inc
popf
lahf
push
cmpsb
mov
les
stc
test
jl
fists
xor
pop
jbe
popf
out
and
lods
mov
cmp
and
rcll
fidivrs
ss
jo
pop
fnstenv
popf
and
fldenv
adc
xor
push
cli
ret
lock
xchg
maskmovq
ret
scas
movsb
pop
jg
ljmp
xchg
outsl
push
mov
not
push
das
lcall
ljmp
pop
xchg
cli
mov
lret
push
sub
and
stos
outsb
xchg
in
call
cltd
data16
fbld
jecxz
jmp
jp
cltd
test
sub
or
cli
ljmp
ret
pop
loope
jno
sbb
mov
loope
pop
dec
sbbb
pop
mov
dec
sti
cmpsl
loope
ljmp
pop
add
daa
sub
ds
inc
mov
mov
arpl
aad
cmp
inc
addr16
insl
pop
add
nop
xor
pop
add
insb
mov
repnz
mov
ss
lods
xor
xor
fstps
fldcw
lods
sub
pop
sbb
jl
std
xchg
jp
das
popa
sbb
mov
les
call
insb
xor
lock
mov
into
inc
rclb
shlb
loope
outsl
sub
data16
cmc
mov
jno
and
pop
daa
cs
arpl
xchg
xchg
mov
lret
fdivrp
and
stos
xchg
sub
xor
sub
mov
repnz
add
dec
in
daa
push
loop
lods
fnsave
pop
test
mov
xchg
lret
xchg
imull
mov
je
jns
and
mov
ret
jb
xor
lret
sti
icebp
pop
inc
cmc
adc
mov
popf
stos
outsl
popf
mov
pop
sbb
stc
mov
dec
sahf
in
nop
rcll
scas
xchg
ja
cmp
mov
push
movsb
and
lea
push
add
sbb
push
inc
outsb
cmp
shll
in
lods
movb
stos
xlat
mov
mov
push
sbb
outsb
dec
pop
stos
add
fbld
inc
rcr
pop
rorb
and
lods
addr16
add
std
fsts
and
mov
sbb
outsl
dec
mov
jecxz
popf
icebp
dec
lret
push
rcrb
add
std
cld
pop
jae
inc
ja
mov
lcall
mov
mov
fs
or
adc
ja
inc
pop
jecxz
mov
scas
and
jg
fwait
cmp
lea
or
xchg
xchg
in
mov
dec
cld
sub
xor
pop
hlt
push
sub
cli
ret
loopne
sub
ret
addl
add
jb
mov
stos
lods
fnstcw
mov
or
mov
mov
xor
sbb
stos
das
push
mov
mov
movb
push
in
mov
cmp
and
cmp
jle
scas
and
inc
clc
or
mov
sub
aam
mov
jle
jecxz,pn
and
push
jl
popf
lds
jns
xor
cs
push
mov
inc
pusha
test
cmp
cmp
stc
mov
mov
push
adc
xchg
fimuls
imul
dec
sub
fidivl
pop
cltd
pop
pop
iret
xor
jecxz
pushf
shr
mov
mov
xchg
pop
adc
aad
mov
xchg
aam
int3
jecxz
push
cli
aas
push
dec
imul
xor
std
sbb
loope
xchg
add
outsb
lret
movsl
adc
lret
add
and
icebp
in
xor
pusha
pop
push
xchg
into
test
dec
aad
inc
push
mov
cli
add
bound
cmp
jae
xor
out
inc
ds
lock
loop
xchg
dec
fadds
mov
out
sbb
and
stos
int3
mov
data16
out
popa
mov
mov
dec
jmp
adc
adc
and
lods
cmpsl
shrb
cmp
xchg
test
or
mov
mov
je
out
fldl
je
into
pop
xchg
cmp
iret
stos
sbb
pop
and
in
imul
push
inc
sbb
mov
daa
movsl
mov
cmpsl
mov
out
push
sbb
enter
sbb
aad
inc
and
inc
cwtl
cli
jno
enter
xchg
lret
mov
cli
movsl
ja
test
add
push
cmp
jnp
in
lahf
mov
dec
add
test
jo
rorb
int
mov
stc
xchg
incb
iret
xor
dec
ror
shlb
sbb
dec
ret
fisttpll
jecxz
or
aas
cwtl
std
aas
cmpsb
lcall
rcrl
xor
xor
mov
inc
mov
xor
cmp
loopne
lods
and
dec
popf
mov
and
mov
movsl
jg
out
pop
test
and
cmp
arpl
adc
sub
popf
xlat
lret
idivl
loope
xchg
xchg
sbb
dec
or
shr
sub
and
push
sbb
ss
cmp
sti
xchg
gs
sbb
cwtl
sbbb
xor
jp
jnp
sbb
dec
sbb
loope
aas
sub
pop
outsl
popf
outsb
dec
jo
dec
push
jge
add
cmp
sub
cmpsl
iret
ret
or
frstor
out
cmp
test
xchg
and
and
out
mov
jb
jne
or
inc
lahf
or
jle
data16
bound
arpl
push
lcall
push
jecxz
repnz
scas
sub
jo
inc
cmp
mov
jns
pop
hlt
fs
sub
pop
sbb
repz
push
es
bound
les
repnz
or
mov
jbe
fwait
std
pop
les
fnstcw
testb
mov
nop
in
lea
movsb
sbb
or
mov
cmp
aas
mov
xor
sub
push
mov
pop
dec
pop
jae
dec
movsl
xor
dec
out
xor
sub
adc
cli
sbb
push
addr16
out
sbb
repz
mov
lret
fs
popf
enter
popa
and
sbb
xor
sbb
sub
xchg
pop
jno
adcb
adc
mov
ret
dec
adc
mov
dec
pop
in
xor
xchg
lcall
gs
add
pop
cmp
pop
jmp
or
or
leave
push
xor
jl
fs
or
push
enter
sub
test
ds
sbb
pop
loopne
xchg
test
test
data16
iret
les
add
sub
dec
scas
sub
ret
pop
movsb
or
jp
mov
cld
addl
arpl
out
jns
xor
sbb
stos
jmp
repz
dec
sbb
xchg
adcl
xchg
lahf
jne
jmp
test
movsb
fld
daa
loop
sbb
rcr
mov
pop
mov
jbe
xchg
enter
mov
jne
std
andl
std
insl
sbb
ret
inc
mov
pop
shrb
cltd
stos
jbe
mov
push
and
sub
or
jl
sub
fnstenv
leave
std
stos
dec
fdivr
cmp
rcll
fmuls
enter
xor
stc
pop
add
sub
js
gs
push
lods
cltd
out
sbb
in
jecxz
cmp
pop
out
and
ret
int3
inc
mov
in
jne
push
push
sub
push
mov
or
mov
test
mov
sbb
aas
mov
icebp
jnp
not
ja
ret
fisttps
clc
negl
aam
lret
lret
jae
std
leave
mov
iret
mov
xor
sub
mov
adc
adc
inc
pop
js
adc
inc
mov
daa
in
das
jnp
scas
inc
test
cmp
mov
test
push
cmc
dec
dec
addr16
es
lar
je
pop
cwtl
cmp
sti
mov
mov
mov
mov
dec
fsubl
std
insl
xor
imul
loopne
mov
insl
sti
data16
mov
mov
mov
cmp
out
cmp
lods
xchg
std
es
fcomp
or
lods
movsb
int
mov
and
dec
pop
push
xchg
pop
outsb
test
sbb
xchg
rclb
in
mov
mov
jne
sub
pop
push
mov
sbb
xchg
movsl
xor
pop
nop
faddp
cwtl
dec
daa
loopne
loope
inc
cld
int
xor
outsl
ret
fwait
hlt
mov
test
out
stos
xor
add
rcl
mov
pop
mov
fdivl
push
aas
sub
lret
jg
repz
cli
jmp
call
jnp
add
pop
inc
in
call
push
test
or
out
sarb
and
fwait
mov
leave
int
mov
rolb
cmc
in
stc
ljmp
cwtl
sub
pop
dec
xor
mov
sub
rcrl
mov
repnz
pop
sbb
xchg
push
outsl
repz
add
mov
mov
ja
xchg
xor
out
lea
ds
cmp
or
shl
vcvtpd2psx
xor
jmp
dec
pop
xchg
test
ret
negb
ret
lahf
mov
inc
sarl
out
fldl
adc
dec
sub
inc
and
nop
lret
pop
add
pusha
inc
add
lret
adc
fwait
out
in
cmp
dec
xchg
pop
in
icebp
pop
rcl
ret
cmpsl
xchg
dec
sarl
out
push
xchg
mov
mov
pop
pop
mov
dec
lret
imul
adc
out
lods
mov
insb
repz
xchg
js
stc
push
push
xchg
cmp
mov
and
pop
and
loop
repnz
ja
das
sbb
inc
popa
mov
mov
cltd
cwtl
sti
push
push
cmp
mov
sbb
adc
mov
xchg
xchg
xchg
mov
in
in
lods
lds
and
out
in
lret
jne
adc
pop
frstor
cmpsb
bound
je
lahf
pop
pop
addr16
push
xchg
mov
cs
mov
mov
sbb
cmp
adc
les
sub
sarl
jae
cmpsl
pop
sub
add
sbb
and
add
es
fdivrp
icebp
jnp
fimull
push
or
arpl
jecxz
push
push
out
daa
imul
in
insb
shlb
jle
insb
aad
shlb
dec
test
test
pop
dec
dec
add
mov
pop
sub
test
xor
stos
xchg
sub
iret
mov
btr
push
hlt
push
fistpll
pop
xchg
stos
mov
pop
xchg
pop
fcompp
xchg
mov
jp
subb
ret
sub
insb
inc
adc
fidivrl
mov
push
aam
xchg
arpl
lods
xchg
mov
mov
sbb
sar
lahf
mov
leave
xorb
pop
mov
scas
and
cs
mov
jno
clc
jp
in
in
xchg
add
jnp
test
int
clc
add
jmp
call
mov
mov
cmpsl
shll
and
mov
add
stos
xor
mov
mov
nop
mov
insb
add
test
mov
pop
ffreep
cmp
xchg
cmpsl
clc
movsl
out
and
pop
ret
imul
pop
inc
mov
dec
inc
cld
icebp
jecxz
cwtl
rorl
mov
mov
mov
lods
popf
shl
cwtl
imul
cmp
call
jae
mov
fs
xchg
pop
push
push
add
push
xchg
int3
lret
out
or
jbe
fld
pop
inc
shlb
scas
adc
sub
test
mov
mov
xchg
pop
inc
loop
rorb
xor
hlt
push
lods
addr16
sbb
shll
jp
shrb
jl
pop
sub
test
mov
push
jge
xor
xor
sbb
jl
sub
inc
mov
shrl
dec
test
lods
mov
xor
xor
out
cmp
js
mov
inc
add
or
cmp
movsl
sub
loopne
aas
in
add
roll
lret
adc
mov
bound
addr16
imul
cmc
popf
jo
adc
pop
xchg
lds
jo
push
push
fxch
popa
pushf
movsb
jmp
shll
sub
sbbb
fs
pop
dec
test
adc
shrl
in
test
xor
adc
mov
xor
mov
loope
fwait
cmp
cmp
xchg
fimuls
aas
jge
push
pop
lds
leave
scas
fs
mov
sbb
mov
test
xor
and
scas
fnstcw
jb
inc
mov
je
push
jne
fsubrs
cmp
cmpb
ja
sbbb
adc
insb
repnz
pushf
insb
lea
in
insl
pop
jbe
out
lret
push
adcl
imul
inc
adc
xchg
jecxz
sbb
in
push
cltd
shll
cmp
subl
mov
ljmp
stc
rolb
cmp
mov
aaa
ja
rcr
cmp
dec
push
xor
mov
sbb
or
in
vmovshdup
adcb
testl
xor
notb
cli
pop
scas
lds
cmp
sbb
dec
call
dec
and
dec
stc
loop
lea
jl
xor
jo
jo
je
nop
or
adc
mov
aaa
inc
sub
loope
inc
mov
push
repnz
icebp
lcall
and
xchg
push
adc
sub
out
jg
xor
gs
inc
push
fldt
or
jbe
pop
xchg
mov
lods
cmp
fwait
outsb
jae
repnz
loop
cmp
loope
andl
xor
inc
lret
or
das
lret
dec
pop
clc
fstpt
push
inc
aam
test
jl
pop
adc
mov
jmp
cli
outsb
fistl
push
lock
fmull
cmp
sub
std
cmc
fld1
xor
inc
mov
mov
dec
xchg
lcall
dec
cmp
and
stos
cmp
sti
jns
pop
imul
in
scas
aaa
xchg
cltd
ljmp
jae
out
inc
int
mov
gs
fisubs
and
out
mov
cli
lds
shlb
xor
or
sete
and
xchg
mov
shlb
xchg
cmp
jmp
or
mov
mov
pop
popf
jle
and
repnz
push
pop
int3
clc
es
sbb
fmull
shll
pop
fsubr
test
inc
fimuls
daa
fsubrl
sub
mov
lds
inc
in
cmp
dec
jle
cmp
pushf
dec
iret
mov
and
cli
test
jae
pop
sbb
popf
dec
int
ret
leave
icebp
sbb
test
xchg
js
mov
mov
mov
mov
lods
addr16
mov
push
dec
popa
mov
add
insl
mov
cltd
ds
mov
dec
jne
movb
xlat
aam
jl
stos
jecxz
mov
mov
cwtl
in
push
test
sbb
jo
rcrl
outsb
xchg
push
mov
add
push
in
adc
push
cmpsb
insl
add
in
push
sbb
cli
movsb
rorb
pop
outsl
popa
pop
je
popa
xor
adc
mov
lret
adc
lcall
adc
sbb
add
movsl
repz
push
pop
rorl
jl,pn
xchg
insb
pop
pop
stos
adc
in
push
adc
and
out
ds
sub
inc
add
shlb
xor
loopne
gs
dec
dec
mov
xor
inc
in
mov
inc
inc
mov
subb
cli
xor
imulb
or
loop
mov
out
or
or
inc
inc
mov
pusha
imull
sub
clc
cmpb
jbe
mov
push
or
scas
mov
mov
addr16
push
mov
jp
in
dec
outsb
in
rcll
dec
jg
or
sbb
mov
mov
jmp
xor
lock
ret
out
xchg
std
push
ja
adc
clc
fwait
sahf
sti
xchg
mov
pop
stc
sti
jnp
clc
sub
dec
ret
repz
ret
jno
repz
enter
xchg
or
in
jo
jo
cli
pusha
dec
lock
push
data16
sbb
loope
ret
mov
lret
call
add
pusha
movsb
ret
clc
mov
xchg
jns
push
inc
add
inc
test
mov
jg
jge
inc
arpl
pop
loop
sub
ljmp
push
and
jmp
cmp
jecxz
inc
ljmp
mov
fldt
addb
inc
pop
pusha
pop
mov
int3
sub
es
mov
nop
push
xchg
cli
xchg
movsb
pusha
adc
mov
inc
push
int
and
mov
cli
mov
dec
sub
loop
lcall
sbb
jo
push
xor
int3
outsb
es
ja,pn
push
lret
mov
mov
fidivrl
inc
add
mov
inc
lds
mov
mov
jl
loopne
mov
inc
sub
pop
inc
mov
pop
fcompl
dec
or
sahf
sbb
xchg
push
and
fwait
int3
addb
repnz
pmaddwd
or
jmp
pop
iret
adc
fldcw
repz
stc
jg
arpl
jo
cmpb
sbb
jns
or
pusha
fs
out
call
lods
or
les
in
jnp
movsb
lcall
mov
mov
xchg
pop
pop
jecxz
mov
data16
jae
clc
repnz
mov
in
xor
xor
pop
aaa
inc
stc
pop
jge
cmp
adc
push
stos
loop
dec
sbb
ja
addr16
cmp
aas
add
mov
shrb
cmpsl
insl
cmp
lock
and
mov
lock
push
popf
jne
inc
inc
mov
movsb
ljmp
mov
imul
xor
repnz
adc
sbb
into
mov
and
shll
in
test
cltd
mov
and
mov
jg
xor
and
lds
mov
outsb
ret
pop
sub
sub
loopne
cmp
jp
dec
adc
inc
push
sub
daa
ds
outsb
icebp
cmp
daa
sub
idivl
mov
frstor
fisubs
pop
iret
loopne
xor
popf
inc
mov
mov
cmpsb
test
negl
inc
sub
cmpsl
sub
cli
jne
popf
pop
adc
ljmp
cmp
data16
mov
xor
cmp
jp
mov
mov
dec
inc
cmp
testl
insl
cmpsl
xor
ret
mov
lahf
mov
loop
sbb
fldl
xchg
cmp
add
jmp
and
jo
in
dec
fldcw
mov
sbb
test
and
sub
lahf
jo
popl
and
sbbb
movsb
scas
fs
scas
out
aam
dec
adc
xor
int3
and
sarb
mov
pop
add
and
das
in
push
and
mov
xlat
push
mov
cmp
stc
sub
test
inc
in
divl
lret
jmp
and
adc
push
inc
xor
jl
cmp
mov
shlb
adc
sub
sti
mov
sbb
repnz
jl
fidivl
mov
das
jecxz
bound
orb
inc
jbe
mov
sbb
add
hlt
hlt
add
mov
xchg
mov
loope
sub
add
pop
xchg
pushf
aad
mov
shrl
mov
mov
xchg
std
andl
jb
and
sahf
pop
and
stos
dec
add
into
loope
je
es
pop
aam
jo
es
jnp
push
imul
jp
pop
pop
jg
loopne
xor
por
mov
add
or
sub
lret
inc
and
test
dec
add
nop
movsl
sub
xchg
cwtl
cmp
lret
es
into
sbb
decb
xor
arpl
aaa
push
in
out
dec
or
mov
mov
jne
mov
inc
sub
outsb
lods
jmp
enter
mov
nop
iret
fcmove
outsl
jnp
rorb
jb
and
cmp
out
fwait
std
notb
push
cmp
repz
rcll
add
repnz
lret
cmpsl
int
sbb
outsl
js
xor
in
push
fiadds
or
stc
inc
int
cmp
jge
push
sbb
sub
mov
loope
subl
test
les
mov
loope
mov
adc
in
aaa
ret
dec
adc
xchg
pop
inc
cmp
and
inc
mov
cmp
std
add
das
dec
lods
lock
cs
mov
push
lds
cmpsb
insl
jne
cmp
aam
mov
idivl
cld
repz
push
out
lret
cmc
gs
sbb
xchg
fs
pushf
sub
xchg
jg
push
push
jle
outsb
loopne
push
mov
mov
jbe
push
jmp
shll
cltd
mov
stos
sahf
xchg
stc
or
pushf
fwait
leave
push
and
xchg
sub
ret
mov
cld
lock
mov
and
push
dec
shlb
dec
stc
jb
sub
shrl
add
je
js
stos
jp
mov
push
pop
ss
test
mov
xor
inc
shrl
adc
sub
inc
loop
sbb
movsb
clc
pop
ret
mov
xchg
es
xor
mov
shlb
sub
jns
xor
jl
and
or
cmp
sbb
test
shlb
add
sbb
enter
aas
pusha
popa
in
popa
jne
and
ficoml
dec
mov
test
inc
aaa
xchg
imulb
cmp
pushf
loopne
les
rcrb
inc
imul
out
dec
mov
xchg
or
pop
push
enter
dec
in
mov
test
jecxz
mov
add
fisubs
call
lret
inc
sbb
jmp
push
test
sub
int
sbb
test
mov
mov
loope
adc
enter
sub
out
aad
cmp
stos
mov
test
and
jnp
cmc
push
fcomip
int3
push
and
pop
mov
repz
subb
sbb
lahf
sub
pop
xchg
sahf
xchg
das
lods
rorl
and
shlb
sbb
push
cmc
dec
leave
pop
outsl
xchg
xlat
or
pop
aaa
ljmp
sbbb
jno
mov
sbb
mov
mov
inc
clc
mov
repz
imul
bound
dec
xchg
lahf
and
dec
inc
lods
jmp
add
nop
lahf
jns
sbb
push
aas
push
jno
xchg
and
push
mov
push
idivb
cld
dec
add
leave
inc
rorl
loope
push
or
daa
xchg
subl
inc
leave
mov
jnp
mov
push
das
adc
dec
push
loop
sti
mov
cmp
inc
add
jge
cli
fsubl
ds
xchg
pop
sbb
hlt
cmp
xchg
iret
popf
sub
pop
pop
sbb
mov
mov
lds
xchg
stos
in
fists
dec
and
adc
or
stos
das
push
mov
cmp
stc
mulb
adc
mov
pop
in
sbb
lods
test
and
mov
cmp
call
inc
xchg
sti
bound
sbb
gs
lcall
sbb
inc
addb
jb
inc
cli
pop
jg
js
cmpsl
es
mov
mov
and
adc
pop
pop
mov
call
jne
rcr
sbbl
mov
lea
or
ljmp
fcomps
mov
out
push
lods
dec
or
cltd
insb
fistps
push
arpl
jg
xor
adc
movsl
add
mov
sbb
testl
fwait
es
pop
pop
adc
fcmovne
lds
sbbb
hlt
push
jmp
xor
mov
xchg
retw
std
in
pop
icebp
xlat
in
icebp
cmp
sub
rcr
xor
shl
xchg
out
inc
xchg
mov
call
jl
adc
cwtl
mov
xor
xchg
scas
fnstcw
outsl
scas
inc
cmp
popa
dec
das
outsl
and
hlt
dec
rcll
sbb
rcrb
fistpl
ficoms
fisttps
outsb
pop
or
sbb
mov
je
aad
sub
mov
pushf
iret
xchg
jg
xor
fwait
sete
lcall
dec
mov
push
sub
sub
call
in
adc
cld
dec
sub
jle
xchg
push
mov
rclb
mov
mov
or
jae
jecxz
fadd
dec
push
aas
fnsave
in
pop
and
mov
lea
push
rcr
std
add
add
jno
xchg
mov
arpl
ret
leave
out
adc
or
add
repnz
mov
rolb
adc
out
fs
xchg
jmp
rcrb
mov
xchg
and
test
dec
and
and
mov
xchg
idivb
xchg
fwait
arpl
cli
fdiv
jbe
fnstsw
mov
sbb
movsb
sbb
dec
sbb
mov
sub
fstpt
mov
cld
sub
lods
jae
dec
aaa
sbb
fisttpl
daa
jl
jle
ja
pop
shll
fdiv
mov
push
mov
inc
xchg
mov
pop
out
adc
mov
push
pop
std
enter
lods
and
test
mov
pop
xchg
subb
xchg
or
in
xor
adc
pop
scas
adc
cmp
gs
dec
xor
sub
mul
mov
xchg
add
in
sbb
loope
cmp
jb
mov
roll
add
cmpsl
rcrl
cmpl
push
dec
mov
loop
insb
bound
stos
adc
cltd
xlat
push
sbb
sub
dec
inc
mov
sahf
push
adc
pop
cmp
push
sbb
jmp
add
in
fs
outsb
lock
inc
mov
push
ja
into
cli
loopne
add
mov
icebp
scas
adc
and
cmp
jge
pop
inc
fs
mov
mov
dec
lock
pushf
xchg
push
aaa
push
out
jmp
daa
rorl
stos
addl
jo
pop
adc
popf
ret
pushf
fwait
mov
mov
jp
in
inc
xor
bound
in
xchg
mov
mov
test
fiaddl
mov
dec
lahf
stos
addr16
stc
xchg
inc
movsb
scas
sbb
jne
in
or
mov
movsl
loopne
add
push
add
sahf
add
data16
push
sti
push
div
jp
and
insb
stc
nopl
push
test
jno
insb
pop
pop
xchg
out
push
cwtl
movsl
sbb
es
je
xor
push
or
mov
sahf
js
mov
imul
cmc
inc
call
std
les
inc
cld
cmpsl
pop
cmp
push
mov
iret
xorl
dec
xor
jbe
in
pusha
xchg
fisubrs
out
pushf
dec
dec
js
cltd
dec
call
out
xor
pop
mov
stos
out
das
mov
add
dec
cmp
icebp
sti
stos
ret
fimuls
das
push
cmp
insl
jno
shlb
inc
pop
mov
out
cmpsl
dec
and
stc
jle
and
test
mov
insb
jne
cs
or
adc
popf
adc
pushf
sahf
jno
cmpsb
or
or
popf
and
push
imul
xchg
or
and
addr16
cmp
hlt
sub
adc
outsb
scas
inc
je
cmpsl
aam
movsb
stos
out
movsl
frstor
insb
sub
mov
incb
mov
into
mov
and
dec
mov
xchg
mov
dec
stos
dec
lret
xor
push
sbb
adc
or
cli
pusha
fs
add
sub
push
push
mov
popa
outsb
sbb
sbb
mov
mov
sub
addr16
jl
outsl
sar
xor
and
mov
jno
mov
and
mov
arpl
mov
inc
pop
dec
push
jb
mov
add
mov
jae
loope
mov
insb
popa
pop
dec
and
test
inc
lods
repz
xor
dec
cmpsb
sub
in
xchg
cmp
and
inc
pop
ljmp
xchg
movsl
imul
dec
dec
mov
jge
scas
hlt
in
test
int
in
mov
dec
cwtl
stos
and
in
ret
rol
bndldx
and
mov
cmp
mov
rcrb
jle
sub
mov
fisttpll
mov
rcrb
dec
push
nop
aad
mov
mov
and
fimull
mov
or
outsl
imul
pusha
into
mov
xchg
dec
scas
cmp
or
jbe
rclb
cmp
push
xchg
sti
test
fistpll
cld
sub
ret
cmp
sub
adc
mov
es
inc
push
mov
xchg
fmul
push
sbb
push
cld
out
sub
mov
add
pop
fcmovbe
leave
pusha
ljmp
inc
call
je
push
sti
push
jmp
mov
notb
repnz
das
mov
mov
outsl
inc
mov
dec
mov
insb
jp
in
enter
mov
xor
shrl
dec
xchg
gs
add
push
or
nop
push
xchg
xchg
xchg
mov
jl
cld
test
std
mov
les
or
icebp
leave
insb
enter
call
jbe
fcom
jno
stc
ds
mov
je
lea
lcall
sti
cmp
mov
push
jnp
sub
lods
or
pop
ficoml
insl
adc
sub
imul
and
cli
mov
sbb
test
pop
in
mov
cli
sub
lock
and
cmp
jne
mov
out
stc
push
or
mov
dec
add
js
int
cmpsl
ja
inc
mov
pushf
stos
jecxz
push
lret
push
fcoml
jo
pop
scas
xchg
daa
push
mov
xor
inc
loopne
clc
cltd
daa
push
or
popf
xor
stos
xchg
dec
dec
adc
adc
pop
into
pop
sub
add
sbb
insl
aam
je
fists
xchg
je
inc
pop
push
pop
in
pop
cwtl
lret
inc
pop
addl
fxch
ret
jmp
hlt
dec
test
test
addr16
fucomi
es
dec
pushf
aad
aad
adc
cmovno
mov
mov
pop
mov
push
cmp
jae
push
scas
popa
mov
mov
aaa
adc
mov
nop
jge
pop
mov
xchg
mov
ja
xor
pop
dec
mov
loop
xchg
int3
out
rcl
fwait
jge
idivl
mov
ret
test
sbbl
xchg
nop
jno
fcmovu
rcrl
loopne
jae
gs
stos
repz
lret
mov
loop
imul
shl
sbb
inc
add
outsb
stos
cmp
mov
lods
and
mulb
jb
popa
sub
cld
adc
cmp
test
cltd
xchg
push
xchg
js
daa
add
in
leave
mov
sub
je
aad
data16
xchg
inc
jl
into
mov
jns
xchg
jp
lock
stos
sahf
movsb
xor
pop
xlat
xor
test
dec
std
sbb
sbb
jnp
add
dec
scas
lcall
cmp
shrl
in
jle
lea
imul
stos
rep
cmp
ds
pop
add
ljmp
sbb
in
ja
negl
dec
add
mov
cmp
les
stc
pop
dec
mov
gs
sbb
xor
or
in
js
add
call
inc
out
fsubrs
fs
adc
and
ret
push
jecxz
push
call
mov
jb
sbb
push
push
stos
cmp
mov
xchg
ss
in
xchg
lahf
xchg
je
or
data16
mov
pop
stos
push
lds
mov
scas
sbb
mov
aam
sub
stos
test
movsb
push
cmpsb
fstl
movb
aam
pop
mov
inc
cmp
or
das
cwtl
or
test
cltd
stos
push
popf
pop
xorb
imul
aaa
push
in
mov
arpl
xchg
inc
and
aam
mov
loope
jp,pt
jle
xchg
push
orl
xchg
loop
jle
mov
data16
lcall
push
lret
lock
pop
jmp
loope
notb
hlt
data16
lods
pop
xor
andb
js
aam
jge
push
shll
xchg
push
test
mov
jo
xchg
jno
sub
pop
insl
adc
inc
dec
adc
mov
inc
add
or
or
ret
repz
sub
divb
push
pop
stos
stos
adc
outsb
lahf
jno
leave
lds
into
mov
mov
cli
jge
sub
inc
repnz
cmp
cmp
sub
in
ljmp
repnz
add
add
mov
mov
lcall
mov
sarb
std
lds
orl
aad
push
push
test
pop
lock
sbb
jmp
btc
dec
repnz
out
xor
add
hlt
mov
shll
sbb
shl
add
xchg
inc
xchg
ss
insb
pop
xchg
in
ret
arpl
out
andl
enter
shl
xchg
cs
fcmovb
aaa
std
add
mov
testl
clc
mov
popf
fs
mov
not
enter
mov
dec
mov
lahf
stc
mov
ret
data16
mov
int3
adc
inc
jb
icebp
xchg
push
fsubl
jl
ss
imul
aaa
dec
push
mov
scas
adc
sahf
cmpsl
pop
gs
add
cwtl
pop
push
test
in
jb
ss
repnz
int
sbb
psadbw
mov
push
adc
es
push
fwait
mov
adc
mov
insb
imul
pop
or
add
dec
sti
push
mov
add
pop
inc
mov
push
xor
push
push
outsb
sbb
cmp
xchg
pop
sub
mov
out
inc
mov
shr
and
jmp
xchg
jge
sbb
aad
lds
mov
jge
sahf
jnp
arpl
push
dec
mov
out
lar
mov
gs
test
push
into
mov
jno
testb
add
fadd
push
icebp
xlat
aas
movsb
pop
movd
in
jo
mov
pop
mov
je
adc
cmp
sti
and
and
test
xchg
mov
shl
rcll
insl
cmp
mov
mov
mov
lods
sbb
jns
fdivrs
decl
pop
in
mov
movsl
popl
fcomi
lods
cs
or
notb
push
jg
insl
xchg
test
inc
inc
je
mov
daa
lcall
push
ljmp
mov
and
mov
push
sub
ja
sub
lods
int
insl
push
lods
hlt
pop
dec
pop
push
xchg
sub
pop
lret
cmpsb
dec
sbb
adc
add
adc
pusha
mov
insb
sbb
test
mov
in
pop
js
or
dec
xchg
int3
dec
fidivs
into
adc
ror
sbb
leave
stos
ret
cmp
clc
fcmove
sbb
pop
iret
fcompl
add
or
sbb
lcall
pop
push
incl
outsl
addb
mov
add
adc
mov
lock
sbb
rcrl
or
sub
fdivrl
loope
xchg
data16
push
inc
add
jnp
test
xor
pop
shll
or
add
fcoml
mov
jae
fnstsw
add
xor
ror
lods
icebp
arpl
ds
sub
inc
and
lea
test
mov
aad
adc
add
push
xchg
xor
and
in
into
push
addr16
lods
xchg
into
xchg
test
xchg
jnp
js
mov
pop
imul
insl
fnsave
add
and
fwait
loope
inc
push
dec
mov
cwtl
adc
mov
dec
xor
pop
enter
mov
inc
mov
xchg
stc
xchg
popf
jae
cmpsl
stos
add
fwait
pop
pop
xlat
stos
xchg
dec
addr16
movsb
mov
loop
call
clc
outsb
dec
push
cmp
lcall
jbe
shll
ret
sub
pushl
cmp
clc
mov
fimull
xlat
ljmp
xchg
shr
shll
push
cmp
mov
lock
ja
mov
decb
sub
mov
push
mov
inc
jl
int
adc
cmp
les
popa
cmp
adc
mov
add
jg
sub
mov
adc
test
or
pop
int3
xor
and
faddp
mov
shll
ss
bound
lret
int3
in
add
aas
pushf
int3
jmp
lret
mov
iret
push
inc
fs
jbe
cwtl
lahf
xor
lret
xchg
xchg
call
or
cld
mov
dec
negb
les
nop
pop
orl
xchg
mov
ljmp
insl
popf
xor
out
aaa
push
add
jmp
adc
sbb
cltd
out
mov
mov
jae
adc
and
inc
pop
dec
and
cltd
out
ret
add
inc
orb
loop
dec
jnp
inc
cltd
movsl
and
hlt
inc
cmp
mov
push
iret
pop
dec
cmpb
icebp
inc
push
jp
jne
fst
sbb
push
mov
mov
pop
push
pusha
jg
scas
mov
push
and
cmp
stos
cmp
scas
lret
jo
dec
xchg
xchg
stc
jecxz
cwtl
jne
loop
adc
int
xchg
add
cs
sbb
mov
pop
mov
sub
mull
sub
inc
sarl
and
mov
in
lods
fucomi
xor
lret
loop
mov
push
pop
faddl
add
dec
out
xchg
xor
mov
adc
dec
jne
mov
pop
inc
xchg
mull
sub
shll
fdivl
cmpsl
mov
fs
xchg
cmp
ljmp
push
dec
dec
or
cli
mov
adc
mov
std
xor
adc
insl
adc
and
mov
clc
ret
pop
cmp
jne
xor
es
fdivrp
and
cltd
imul
inc
adc
xor
icebp
cmp
jns
and
in
call
jbe
add
pop
addr16
mov
sbb
loope
pop
pop
xchg
cli
jp
pop
rcrb
inc
out
outsb
jg
test
sbb
or
lock
lahf
pop
add
pop
inc
test
in
inc
xchg
es
mov
inc
inc
xlat
fisubrs
outsl
loop
mov
das
adc
fcomp
mov
stos
fwait
mov
push
lret
icebp
inc
dec
jno
xchg
lcall
sti
rolb
push
cmpb
std
rcrl
pushf
movsb
mov
jnp
inc
sub
jns
inc
stos
push
mov
mov
jo
mov
std
cmpsl
push
loopne
rol
sbb
notl
ljmp
pusha
ficoml
xor
iret
scas
movsl
mov
outsl
and
xor
xchg
mov
cs
xchg
mov
jno
sbb
das
cmp
cld
scas
dec
inc
add
and
clc
loop
lods
mov
mov
push
cmpsb
or
mov
imul
icebp
or
aaa
sbb
or
loopne
jb
sti
leave
push
bnd
pop
push
shrl
ret
push
lret
fsubr
dec
pusha
pop
xchg
test
xchg
push
lahf
mov
or
mov
sbb
or
pop
mov
push
seta
sbb
push
pop
jp
xchg
hlt
outsb
mov
push
pop
cmpsb
xchg
lretw
dec
jge
push
xor
test
jno
nop
mov
cmpsl
icebp
or
mov
cltd
sbb
fimull
mov
inc
mov
dec
stc
shlb
cmpsb
lea
call
xchg
ljmp
std
out
cmovl
in
mov
mov
mov
mov
push
insl
push
mov
dec
or
inc
push
clc
outsb
ja
and
ss
inc
adc
xor
jp
cmp
sbb
adc
stos
aad
insb
mov
push
rcrb
mov
pop
lock
push
ret
pop
into
cmpsl
punpcklbw
sti
test
nop
jo
xor
adc
scas
sbb
or
iret
fadds
ret
test
or
jmp
mov
dec
xchg
push
icebp
add
fisubrs
fwait
out
mov
outsl
ficompl
in
test
insl
mov
sub
das
jp
data16
inc
mov
repz
dec
aad
je
test
xchg
leave
imul
mov
xchg
push
sbb
imul
sbb
dec
mov
mov
and
push
jb
or
es
rcrl
ret
roll
clc
adc
rolb
xchg
xor
inc
cltd
inc
mov
pop
mov
int
mov
jle
loope
lcall
fcomp
mov
mov
insl
xchg
inc
ja
xchg
in
daa
add
adc
movsb
fwait
inc
mov
jmp
dec
lcall
sub
iret
int
out
pushf
ret
std
inc
dec
fcmovbe
mov
or
in
mov
sub
je
pusha
mov
pop
adc
pushf
xor
lock
hlt
mov
test
mov
je
dec
push
jb
mov
mov
cmp
cld
shrl
je
popf
lods
lret
jne
pop
push
dec
jmp
or
adc
mov
imul
inc
fistpl
inc
push
adc
insb
sahf
in
test
into
outsl
lds
xor
popa
mov
xchg
shrl
sbb
cs
addl
dec
mov
adcb
inc
push
push
test
addr16
mov
add
shlb
roll
adc
adc
inc
leave
push
outsb
mov
aad
xorb
or
jns
out
cli
xor
into
into
push
jg
xor
ljmp
insl
mov
lock
sub
aaa
fmuls
nop
imul
out
dec
inc
ja
ss
daa
jo
add
jns
pop
in
mov
in
xchg
cmpl
xorps
jmp
repnz
fwait
mov
int
xor
mov
jns
mov
jmp
pop
jmp
out
inc
xchg
fcoms
mov
movsl
or
aad
mov
pop
mov
push
test
mov
jne
negb
pushf
fstp
sbb
sub
aad
xchg
mov
stc
aas
outsb
addr16
insb
jne
movsb
faddp
push
push
stc
gs
sbb
sub
and
mov
mov
pop
les
test
out
add
notl
loope
loope
mov
jns
pusha
fists
sahf
jbe,pn
aad
std
jno
lret
imul
fs
pop
movsl
push
stos
pop
jbe
aad
jmp
or
outsb
addr16
movsb
ss
push
iret
hlt
aas
xor
es
cli
int3
cld
roll
in
movsl
mov
fwait
cmp
add
mov
xchg
cmp
stc
les
fcoms
sub
gs
pop
mov
mov
ret
scas
adc
adc
insb
xchg
add
mov
xchg
xor
out
rcr
pop
lods
ja
shlb
xor
and
or
sub
mov
addr16
mov
lret
jg
gs
and
cwtl
dec
pop
mov
push
mov
jo
xchg
mov
add
gs
pop
pop
dec
movsl
cmpb
mov
out
mov
inc
mov
dec
in
gs
sub
fsubrs
xchg
and
pop
inc
inc
fistl
xchg
mov
int
imul
mov
shlb
scas
push
repnz
daa
or
pushf
iret
outsb
dec
or
xchg
lea
fcom
lcall
mov
cmp
movsl
and
lret
mov
xchg
inc
jmp
push
and
lds
enter
adc
mov
out
lock
std
or
fbstp
sbb
ficoms
sbb
roll
xchg
inc
sbb
in
out
cs
mov
cmp
pop
ljmp
cwtl
push
jb
mov
xorb
xchg
les
push
pop
lret
test
cmp
and
in
lcall
stc
add
fwait
dec
inc
stos
call
mov
adc
and
adc
popa
mov
scas
add
inc
mov
adc
decb
mov
mov
adc
in
xor
cwtl
and
sub
xabort
shrl
subl
sbb
les
test
or
and
fistpl
in
cmp
sub
je
ret
mov
xor
sbb
lret
aad
pop
push
les
mov
xchg
pop
addb
icebp
add
mov
popa
fistl
pop
adc
cs
add
loope
inc
cmp
cmp
sahf
in
mov
or
jmp
add
mov
out
sbb
shlb
bound
fildl
or
add
adc
mov
fdivrl
cli
hlt
jno
clc
xor
dec
dec
gs
push
sub
inc
xchg
int
and
xchg
mov
adc
cmp
jbe
mov
scas
or
bound
inc
sahf
lods
jmp
lock
fwait
xor
icebp
push
dec
pop
or
jno
jb
adc
loopne
stos
push
pop
pop
out
pop
mov
xchg
xor
or
mov
out
adc
adc
xor
mov
cmpsl
dec
pop
cltd
test
and
dec
call
adc
inc
xchg
mov
jmp
lods
orl
stc
push
pop
sub
xlat
insl
arpl
lds
xor
sub
push
sbb
pop
pop
addb
insb
stc
dec
mov
shll
mov
cmp
inc
xlat
je
dec
xchg
sub
pop
pop
cli
std
jge
notb
add
jecxz
jbe
daa
cmpsl
outsl
iret
push
cmpsl
push
insl
pop
mov
cmpsb
aaa
nop
jbe
cmp
jge
jbe
sbb
test
stc
dec
push
mov
inc
repnz
pushf
out
movsb
cmp
jl
pushf
push
jp
ret
in
push
pcmpeqd
push
or
cmpsb
dec
push
push
test
or
xchg
filds
dec
stos
fcoms
xchg
pop
stos
push
daa
dec
sbb
sbb
push
pushf
jle
jp
lds
add
mov
test
cmpb
xor
hlt
cmc
inc
xor
es
js
sub
lret
xor
les
jmp
popf
lahf
aad
repnz
in
cwtl
movsl
mov
sub
imul
push
mov
sbb
ret
jbe
repz
or
xor
pusha
test
xchg
ja
ja
jl
or
sub
stc
cmpsb
stc
pop
pop
sahf
es
test
adc
mov
clc
fadds
push
fs
sub
in
data16
mov
xchg
inc
dec
test
pop
out
sbb
mov
lret
mov
jne
fistl
in
cmp
mov
jmp
mov
nop
adc
repnz
adc
push
imul
mov
mov
push
xor
sbb
cmp
adc
or
mov
pop
inc
mov
loope
aad
pop
dec
loop
daa
aad
mov
add
xchg
les
push
test
repz
mov
or
push
and
stc
movsb
in
mov
sub
mov
pop
adc
dec
cmp
js
into
dec
scas
lret
sub
shll
mov
adc
cwtl
pop
dec
fs
mov
add
xor
sbb
adc
mov
sahf
shl
lock
js
loope
push
decb
mov
js
push
lods
and
push
xchg
insl
imul
mov
negl
adc
imul
adcl
fisubrs
mov
mov
inc
aad
adc
sub
jns
sarl
jbe
loope
filds
sbb
push
pop
mov
sbb
sub
shlb
mov
loop
cwtl
xchg
dec
mov
mov
pop
lret
sub
data16
jl
filds
stos
pop
push
repnz
jnp
movsb
out
xchg
insb
call
pop
pushf
imul
cwtl
lahf
mov
je
jge
cmp
pop
jp
dec
push
lahf
fstps
divb
das
pop
jmp
pop
and
ljmp
and
push
fistps
push
outsb
xchg
outsl
repnz
and
push
das
in
and
ds
shrb
out
icebp
cmpl
adc
insl
aas
dec
ds
cmp
jnp
mov
mov
lds
add
fistps
dec
cmp
in
stos
lret
hlt
cmpsb
push
insb
imul
mov
cmpl
lahf
push
insb
sbb
jecxz
or
adc
andb
push
pop
leave
mov
das
mov
shll
jp
sbbl
inc
aas
jmp
adc
push
mov
sbb
mov
loope
and
popa
lea
add
or
popa
and
out
test
scas
ds
dec
emms
sub
notb
int
push
and
mov
adc
iret
scas
stc
rcrl
pusha
sub
js
cltd
divb
pushf
test
fwait
jo
xlat
fnstenv
cmpb
mov
movsl
test
fsub
pop
push
fsubr
mov
out
fwait
test
push
xchg
or
and
dec
fcoml
mov
push
sbb
pop
pop
negb
cmpb
je
add
call
jle
in
mov
lea
add
imul
mov
xor
adc
or
lret
xchg
jnp
dec
adc
lret
xor
or
in
mov
pop
into
sub
mov
cmp
cmc
dec
mov
push
dec
std
repz
mov
xorb
sete
test
scas
mov
lds
cmp
pushf
imul
xchg
pop
in
call
mov
mov
adc
ret
sbb
dec
pop
sub
ja
inc
jns
dec
mov
sbb
push
cmc
pop
or
sbb
add
repz
lret
test
dec
clc
sub
addr16
push
je
sub
subl
aam
cvtdq2ps
mov
cmp
leave
xchg
aam
mov
loop
jecxz
dec
push
jmp
sbb
sti
lret
adc
filds
out
nop
hlt
test
add
fdiv
dec
in
dec
cwtl
sub
mov
jno
inc
mov
ret
scas
mov
cli
outsb
mov
mov
out
fisttpll
lret
ljmp
inc
and
inc
mov
mov
rcll
fmull
filds
nop
push
repnz
sbb
lcall
aad
sbb
rcl
test
push
jge
sarl
mov
pop
add
divb
mov
inc
fiadds
outsb
xor
xchg
add
push
or
test
pop
das
loope
and
push
mov
and
cmpsl
cmp
mov
and
sub
and
test
mov
or
jae
std
jo
jns
push
jg
lock
lock
int3
xchg
lret
loope
push
mov
mov
inc
pop
les
repnz
loope
sbb
mov
daa
mov
leave
daa
xlat
mov
inc
or
shr
jne
sbb
inc
pop
pop
jge
popf
lods
ret
in
dec
jne
and
fdivr
iret
cmp
sub
adc
adc
push
mov
or
inc
test
jns
xchg
jnp
jg
arpl
cmp
lret
or
push
cli
nop
and
cli
fimuls
stc
in
mov
icebp
aas
repnz
sahf
add
sub
pop
aaa
mov
and
add
jecxz
push
fadds
into
ds
fsubl
psrlw
lahf
and
and
sbb
mov
loopne
rorb
test
ret
xor
std
int
loopne
inc
rolb
pop
mov
loop
nop
ds
cwtl
add
movsb
pop
xchg
mov
sahf
push
icebp
adc
shl
mov
sbb
nop
sub
ss
xor
daa
rol
jl
xchg
mov
ja
mov
lock
imul
or
dec
movsl
cmp
add
push
jmp
push
cmp
fdivl
fcmovbe
mov
inc
xor
jbe
inc
mov
dec
lea
mov
daa
lds
dec
cli
push
jmp
fs
push
data16
jmp
xchg
or
or
loop
pop
pop
mov
jl
dec
xor
add
mov
inc
adc
leave
cmpsl
out
mov
dec
push
lahf
push
orb
les
test
lods
pop
dec
and
pusha
nop
push
scas
and
and
add
mov
jb
test
add
gs
mov
subb
cmp
mov
inc
lahf
enter
and
mov
shrl
arpl
movsb
pop
cmp
push
lock
add
adc
loopne
inc
or
scas
cmc
adc
pop
xor
mov
shr
push
pop
repnz
adc
call
out
or
out
push
repz
repz
jb
jle
scas
push
cmp
fidivs
nop
push
cmp
push
xchg
and
pop
dec
mov
pop
mov
push
lcall
and
xor
repz
sbb
push
mov
scas
mov
pop
js
cmp
xchg
es
xor
xor
stos
bound
scas
or
pop
js
cwtl
push
or
push
loopne
jo
push
push
pop
sbb
sar
stos
fisttps
cmpsb
xor
fidivrl
cmp
cld
xor
sub
mov
out
test
or
rclb
push
push
adc
sbb
mov
xor
mov
call
pushf
pop
jns
pop
xor
mov
fs
int
jo
cltd
add
jle
pop
sub
leave
mov
loop
or
aam
scas
push
pop
das
adc
les
std
pop
or
aaa
ret
mov
mov
repnz
mov
jp
dec
inc
cltd
push
add
mov
mov
pop
jne
mov
push
mov
out
pop
fimull
rcrl
fdiv
mov
lods
cmp
insl
aad
push
es
inc
xchg
nop
and
or
nop
dec
xchg
sbb
cmc
flds
jmp
insl
push
cli
xchg
mov
insb
movsl
fsubrs
nop
imul
test
loop
fs
bound
outsl
mov
sbb
cmpb
inc
das
sub
inc
shlb
mov
push
cltd
cmp
mov
test
lcall
push
xchg
mov
jle
cmp
jns
pushl
lcall
inc
nop
insl
mov
pop
js
lcall
mov
clc
add
movsl
or
cld
out
cmp
add
enter
in
cmp
push
jns
shl
mov
xor
aam
dec
add
mov
ret
jnp
jno
push
cwtl
push
push
xlat
dec
pop
mov
lcall
pop
xchg
adc
outsb
xor
loopne
sub
cmpsl
xor
test
mov
das
idivb
pop
fisttpll
xchg
xchg
sbb
mov
ret
imul
jae
cli
outsb
sti
mov
int
js
cmp
xchg
fs
add
test
decb
aad
inc
push
test
call
pushf
stos
lret
xchg
cmp
or
push
inc
sbb
sbb
dec
out
jae
or
mov
movsl
mov
ljmp
cmc
orb
repz
aaa
shll
das
pop
or
adc
push
scas
xchg
and
enter
sbb
xchg
shrb
stos
add
sub
xchg
dec
fsub
mov
push
sbbl
push
lret
dec
jb
jge
clc
lea
cmp
out
ja
xchg
push
push
jl
push
pop
inc
les
ficoml
cmp
ljmp
add
dec
loope
inc
adc
outsl
fidivrl
mull
in
and
cwtl
push
xor
xchg
js
or
aad
mov
and
out
pop
gs
mov
xchg
into
mov
imul
andl
and
ljmp
aad
push
sbb
lods
les
rcr
mov
dec
mov
fbstp
enter
mov
in
cmp
outsb
inc
lock
sbb
movsl
out
fisubs
fs
aad
sbb
lret
fidivl
icebp
rcr
cmp
cmp
outsb
mov
cmp
inc
xlat
pop
mov
jecxz
daa
movsb
mov
cmp
push
cmp
push
psraw
stc
aam
daa
adc
mov
or
pop
test
cmp
hlt
or
push
int3
test
mov
and
sub
sbb
std
cmc
push
lret
cltd
push
hlt
gs
pop
inc
jmp
fsubr
xchg
enter
dec
pop
imul
std
jnp
out
inc
xchg
ror
aad
mov
pushf
pop
dec
mov
or
push
jb
out
mov
mov
fsts
mov
adcb
out
scas
sbb
cmp
in
leave
cmp
lock
xor
leave
or
xor
xor
mov
xchg
out
jg
hlt
pop
lcall
ja
pop
or
test
adcl
mov
xor
ret
dec
fdivl
fnstsw
xchg
pop
loopne
mov
lret
inc
nop
add
scas
inc
or
idivb
cmp
std
mov
fwait
in
les
sub
xchg
mov
cmp
cmp
scas
pop
prefetcht1
mov
and
movsl
lock
push
subl
divl
je
sub
aaa
cmp
repnz
mov
lods
mov
adc
lret
inc
fldenv
mov
andb
stos
sbb
call
pop
fdivr
aad
dec
xor
or
cmpsb
xor
loop
mov
outsb
xor
adc
adc
clc
pusha
xchg
inc
push
loope
lcall
ret
mov
xchg
decb
adc
cmp
add
xchg
icebp
xor
jp
int
movl
mov
out
test
mov
je
cmp
pop
xchg
adc
fldl
fs
jae
push
mov
pop
mov
and
ss
inc
jmp
sub
jg
out
cltd
loopne
or
adc
push
dec
inc
arpl
xchg
loopne
inc
pop
push
or
cmp
hlt
xchg
pop
pop
pop
fwait
sub
inc
lahf
lcall
arpl
mov
mov
push
andb
jle
subl
mov
adc
pop
outsb
call
pop
adc
push
ret
dec
int
test
sbb
mov
xchg
inc
repz
in
or
pop
ds
jo
sub
dec
ljmp
xor
mov
adc
push
or
xchg
jmp
enter
jmp
das
lock
dec
add
clc
cwtl
cs
xchg
mov
ja
in
xlat
mov
aas
inc
in
test
cmp
arpl
insb
jbe
cmpb
xor
or
mov
shl
and
iret
push
ja
pop
ror
xor
sbb
mov
mov
jne
and
jbe
dec
imul
gs
out
dec
mov
inc
cli
ret
mov
or
iret
int
ja
shlb
mov
or
and
push
sbb
inc
repz
repz
xor
mov
notl
xchg
xchg
outsl
iret
push
jmp
add
into
mov
push
nop
dec
into
shl
scas
loop
xchg
jno
jecxz
sub
add
popf
add
in
jg
sbb
push
shlb
jle
pop
jb
xchg
jo
dec
pop
pop
negb
push
fiaddl
inc
fnstcw
addb
fwait
jo
cs
add
xor
mov
pop
mov
mov
das
dec
sub
pop
int
xlat
pushf
aas
pop
movb
imul
dec
ret
ret
fldl
push
dec
mov
je
and
mov
dec
arpl
and
lods
sarb
ss
mov
push
jmp
repz
mov
cmpsb
cmpsb
leave
push
pop
mov
pop
fisubrl
jbe
arpl
xorl
loop
pop
pop
pop
mov
jl
pushf
int
repnz
in
sahf
mov
add
nop
pusha
pop
xor
cmp
xor
mov
cmp
mov
mov
clc
mov
and
mov
sti
mov
out
mov
jp
leave
mov
icebp
inc
pop
or
xchg
shrl
pop
and
rorl
xchg
aad
adc
mov
push
jne
dec
cld
and
es
shrl
xor
rcrb
int3
test
sub
gs
push
dec
mov
notl
jl
pop
mov
outsb
jecxz
xor
sbb
inc
mov
jns
xchg
xchg
push
pop
movsl
mov
daa
ljmpw
subl
pushf
add
lret
jbe
sub
sub
outsl
sub
xor
lods
dec
dec
lock
jne
sbb
adc
jl
loope
mov
inc
pop
add
mov
push
dec
ror
push
lahf
jl
sbb
inc
mov
call
inc
mov
jp
sarl
incl
sbb
cmp
sub
jns
test
dec
fisubl
pop
mov
mov
rorl
movsl
test
mov
fnsave
push
inc
jno
mov
cmc
cmp
xchg
lds
push
inc
sub
jge
into
in
outsl
loope
push
in
adc
add
enter
dec
push
adc
jne
pop
or
fstpt
mov
xchg
outsb
das
imull
dec
pushf
int
mov
cmp
aas
test
push
xor
out
sub
adc
mov
add
arpl
cmpsb
sub
mov
popf
cmp
or
sahf
jg
test
insb
lcall
dec
outsl
nop
mov
cmpsb
arpl
shll
imul
pop
cmp
imul
or
decb
test
jg
repz
inc
bound
or
adc
inc
dec
movsb
ret
mov
lret
mov
jnp
cwtl
cmp
rorl
mov
loop
dec
cmp
adc
mov
inc
fldl
scas
lret
out
out
sub
adc
add
mov
sbb
xor
xchg
inc
xchg
cwtl
dec
aad
pop
popa
in
xor
cmp
orb
push
insb
jns
pop
ja
pop
dec
fimuls
mov
lcall
cmp
sbb
mov
pushf
inc
aas
sub
sti
dec
sub
dec
cmc
push
stc
scas
int3
push
push
push
xor
xchg
jbe
mov
ret
add
inc
imul
in
mov
jg
lock
pusha
mov
or
popf
int3
es
fwait
mov
xor
mov
and
inc
pop
cmp
sub
fcmovnb
add
rcll
mov
lds
into
pop
sahf
insb
call
test
xor
out
pop
test
or
sub
mov
or
in
imul
mov
jb
jge
outsb
jmp
and
clc
mov
lock
xor
jge
add
es
mov
mov
lods
cmp
pop
mov
mov
and
inc
jb
mov
int3
mov
push
cmp
ljmp
dec
inc
repz
outsb
cmp
jo
sbb
push
xchg
mov
cmpsb
hlt
loop
xor
loopne
push
or
fstl
rorl
orl
clc
mov
cmp
cld
nop
rorb
enter
testl
cmpsl
icebp
hlt
loope
ret
pop
or
lret
fwait
sti
push
mov
sbb
mov
out
push
js
xchg
add
andl
xchg
pop
xchg
int3
mov
lcall
mov
test
xor
sbb
xchg
ja
or
je
imull
jb
dec
mov
iret
mov
mov
add
pop
xchg
loopne
dec
in
loop
lret
pop
add
cmp
push
stos
test
add
cli
insl
les
push
pop
cmp
xchg
cmp
inc
mov
pop
mov
mov
cltd
imul
movsb
mov
sbb
jmp
pop
mov
fmuls
cwtl
dec
test
mov
jmp
and
push
dec
stc
inc
sbb
fs
add
imulb
pop
imul
add
add
cmp
arpl
sub
push
lret
loopne
and
cld
mov
xchg
jg
xchg
lds
repnz
sub
xchg
out
dec
loop
in
dec
and
fildll
movsb
out
adc
mov
jl
or
xchg
nop
std
ret
inc
sub
mov
jp
dec
data16
mov
cli
test
aam
nop
incb
cs
sbbl
jl
aas
jb
inc
sub
les
push
jbe
xor
scas
mov
sahf
mul
sti
ss
cmp
and
add
shl
adc
xlat
iret
movsb
lcall
sbb
cmp
mov
lods
dec
jne
aaa
mov
sbb
lahf
pop
test
push
jg
lcall
mov
cmp
insl
inc
add
mov
lock
leave
shll
jecxz
pop
ds
arpl
sbbl
add
shrb
add
push
pop
dec
add
xchg
push
outsb
cmp
or
jp
pushf
data16
xchg
cmc
xor
clc
xor
les
pop
addr16
jns
sbb
xchg
and
int
sub
cs
mov
xor
lahf
pop
cmpsl
negl
shl
mov
xchg
cli
pop
mov
in
ficompl
adc
xor
xchg
pop
movsl
out
clc
stc
jl
mov
lahf
mov
mov
aad
aas
fstpt
mov
mov
movsb
lods
inc
sahf
push
repz
out
sahf
imul
sbb
and
icebp
test
pop
jg
insb
dec
lea
cmc
xchg
scas
fisubl
test
adc
cmpsl
pop
lods
mov
and
cmp
dec
pcmpgtd
xchg
cmc
and
mov
pop
add
jle
cmpsb
roll
andb
insl
dec
jb
stos
test
push
lret
sub
sbb
dec
or
fistpl
andb
or
jno
pop
adc
stos
cld
xor
mov
xlat
je
or
clc
rcl
xorb
xchg
cmp
stos
aas
fs
into
hlt
pop
bnd
dec
mov
mov
jns
xor
mov
arpl
jnp
std
add
sbb
mov
inc
call
movsl
inc
sahf
mov
pop
mov
sub
xchg
sub
xor
inc
fwait
pop
lcall
scas
fisubrl
mov
or
push
push
inc
adcl
and
lahf
repz
push
pop
lds
cmp
outsl
icebp
mov
in
sub
popf
and
jne
fstp
dec
movsl
cld
incb
sub
mov
sbb
dec
cld
cld
dec
roll
push
jo
popa
inc
and
out
pop
les
mov
xor
inc
jle
xchg
cld
inc
jmp
loope
addb
filds
push
hlt
mov
daa
loop
adc
push
adc
repnz
fsts
add
cwtl
int
popa
cltd
cmp
mov
pop
loop
jb
xor
cmp
ficompl
mov
repz
xor
test
enter
sub
xor
inc
fcompl
xchg
mov
leave
sbb
stos
or
ds
mov
jmp
loopne
cmpb
loope
push
lods
mov
icebp
jmp
bound
jg
cs
in
or
dec
hlt
or
fs
fwait
bound
sub
ja
es
int3
adcl
cmp
mov
xlat
lret
pusha
lock
mov
lock
iret
sbb
mov
mov
iret
ficoms
cli
hlt
rcrl
sub
jb
mov
je
sbb
jecxz
into
xor
sub
xchg
jbe
cwtl
cwtl
rcl
enter
cltd
iret
cmp
and
mov
arpl
lahf
aas
mov
mov
out
out
sbbl
int
or
popf
add
pop
jge
and
pop
in
imul
add
test
inc
xchg
xchg
sub
lret
adc
xorl
push
int3
popa
jo
shrb
fs
sub
dec
cmp
or
mov
push
clc
mov
jns
ss
mov
daa
pop
push
jmp
push
ret
jg
sub
ja
loopne
xorl
cmp
fdivl
add
cmp
stos
xchg
not
push
cmp
mov
xchg
jl
fcompl
mov
lcall
add
out
pop
adcl
add
pop
cmp
and
repnz
daa
shr
je
sbbl
add
mov
stos
cmpsb
aad
mov
xlat
imul
or
aas
cld
adc
imull
scas
imul
outsb
adc
dec
mov
push
imul
mov
lea
shlb
daa
xchg
in
cmp
aam
jno
fwait
ds
in
push
fdivrs
popf
shll
xor
loop
inc
pop
and
xor
adc
or
enter
loopne
sbb
add
xchg
cmp
and
xor
xchg
cwtl
repz
int
bound
test
popa
xchg
dec
sbb
cmpsl
rcr
cmpsb
int3
or
aad
push
jo
insb
and
dec
inc
lret
mov
in
int
mov
mov
imul
dec
sbb
dec
mov
push
dec
test
fsubl
or
mov
jl
sub
and
inc
shl
and
adc
mov
shll
shll
iret
cmp
inc
aas
fdivrs
xchg
cmc
ds
push
movsl
mov
into
xor
jo
mov
push
lahf
fs
sub
int3
jno
test
lock
out
or
movb
and
into
cmp
fists
aad
insl
add
or
xor
cmp
mov
scas
loopne
repz
adc
jae
ds
test
sub
add
fadds
call
clc
mov
cmpsb
sub
xchg
lods
mov
sahf
xchg
xchg
pusha
loopne
rcl
or
loope
imul
xchg
lcall
or
sbb
leave
into
fildll
and
push
lock
mov
aam
push
jns
popa
adc
jp
out
adcl
sub
xchg
mov
and
xor
sub
xor
pop
pop
stc
push
cmp
xchg
retw
scas
mov
cli
adc
inc
add
jecxz
mov
lcall
pop
rcl
outsl
jl
lds
xorl
mov
inc
sbb
mov
sub
into
jns
pop
jg
sbb
dec
cmp
ja
inc
movsl
xor
inc
xchg
popf
sub
mov
mov
adc
mov
push
lret
into
dec
and
shr
xchg
jecxz
fisubrl
in
clc
icebp
xchg
push
imul
lret
shrb
adc
inc
push
ds
mov
mov
fxrstor
pop
push
mov
arpl
daa
jne
mov
add
jb
add
ret
or
and
inc
in
push
repnz
inc
test
inc
scas
xchg
mov
mull
pop
sti
outsl
cmp
inc
cmp
dec
dec
inc
orl
push
and
sub
jg
add
jno
inc
stc
cld
xchg
xchg
clc
repnz
mov
out
cmp
xor
xlat
es
sbb
out
dec
ljmp
insb
outsb
aad
in
push
xor
cs
pop
popf
mov
pop
mov
push
push
movl
xchg
dec
leave
push
xor
cli
ds
adc
jnp
out
in
push
push
scas
pop
jp
sbb
fwait
nop
jnp
cmpsl
pop
sahf
jae
cmp
xor
cltd
andb
mov
add
xchg
cmpsb
sub
ss
loope
mov
out
xor
lret
fwait
push
das
shlb
in
and
aam
sbb
sbb
test
inc
lret
aam
inc
faddl
addr16
cmpsl
sub
shll
push
insl
mov
movsb
loop
icebp
fwait
cwtl
xchg
dec
xor
dec
gs
cmpsl
ret
popa
ja
popf
imul
push
pop
sub
and
mov
adc
test
xchg
inc
push
pop
jmp
jns
in
xchg
in
pop
inc
and
orl
pavgw
xchg
cmp
adc
cmp
sbb
xchg
mov
out
or
mov
fxsave
clc
xchg
shlb
sub
push
mov
mov
ljmp
add
sub
push
int
mov
mov
xchg
pop
orb
das
xor
pop
adc
and
bound
push
mov
mov
lods
sbb
sarl
inc
movsl
jne
xor
lock
out
xor
inc
jne
das
iret
and
push
movsl
cmp
arpl
mov
jmp
and
shll
loopne
push
mov
inc
dec
sbb
jb
mov
ret
subb
mov
jns
adc
sbb
push
xor
in
leave
add
out
jecxz
mov
ret
sbb
jns
add
adc
add
test
adc
mov
aaa
or
or
aas
loope
mov
cltd
dec
add
test
mov
sbb
jo
xchg
mov
and
lret
cmp
fcmovbe
std
ficoml
ficoml
push
mov
pop
ds
push
sbb
xchg
and
pop
cmp
lahf
cmpsb
jae
aad
add
or
out
cli
test
jge
xchg
daa
xchg
cmp
jmp
lret
or
gs
icebp
mov
shll
push
dec
negl
push
push
cli
pop
rcrl
mov
xchg
cmpsl
or
pop
outsl
and
adc
stc
ds
inc
mov
lock
int3
mov
push
adc
inc
lea
rorl
aad
mov
jge
push
insb
push
adc
lcall
aad
subb
or
mulb
pop
xchg
and
in
add
dec
in
pop
aam
fstl
jne
nop
sbb
mov
cmp
ljmp
cltd
add
mov
adc
iret
pop
outsb
or
adc
and
sbb
test
mov
push
and
leave
jg
mov
lock
repz
adc
sbb
and
jge
sub
adc
aas
adc
mov
movsb
divl
xor
sbb
cmp
sub
push
inc
or
sti
insl
ljmp
or
sbb
ss
xor
or
cmpsb
insl
xlat
xchg
shrl
pop
jecxz
mov
sub
sub
aad
xor
fsubs
ss
lods
mov
std
loope
sub
lret
mov
roll
jecxz
mov
sub
pusha
leave
jnp
daa
mov
cwtl
nop
orb
in
push
pop
mov
adc
cmpl
rolb
cs
pop
notb
mov
icebp
leave
xchg
out
popf
dec
mov
int
cmpsl
and
xor
ss
rcrb
cltd
scas
stos
shlb
xchg
fmull
jge
movsl
xlat
pop
cmp
stos
xchg
insl
mov
sbb
mov
jae
xchg
sbb
mov
addb
mov
in
dec
mov
lret
sete
jae
cs
ret
inc
inc
xor
or
add
or
int
js
icebp
and
sub
and
insl
xchg
orb
std
and
dec
stc
mov
cld
push
jb
mov
or
inc
mov
shrb
xor
inc
pop
ja
adc
pop
inc
pop
sbb
andl
pop
test
pusha
mov
cmpsl
cmp
xor
lret
inc
pop
push
iret
jl
int
lret
xrelease
inc
mov
xchg
adc
out
pusha
bound
data16
les
cs
insb
stos
lcall
fiaddl
jg
aas
and
jno
sub
imull
push
ja
je
rclb
or
cmpsl
lock
fisubrs
inc
mov
movsl
cmp
cmp
jno
cmp
loopne
add
in
arpl
xchg
mov
and
popa
mov
stc
and
fildll
inc
lock
arpl
and
sbb
cmp
add
mov
dec
nop
insb
lea
popa
adc
aam
push
lret
arpl
jmp
sub
cmpsb
dec
pusha
pop
aam
or
push
mov
js
sbb
dec
popf
ret
xchg
int3
xor
jg
fcmovb
and
lcall
mov
jb
insl
push
outsl
adc
cwtl
orb
insb
mov
call
es
push
jnp
cmp
imul
inc
or
dec
mov
imul
in
popa
xchg
sarl
lret
inc
cld
fld
mov
dec
jle
sub
imul
lcall
stos
sbb
push
mov
data16
adc
pop
jae
lock
or
and
in
stc
aaa
mov
insb
mov
mov
jo
cmpsl
jnp
jg
adc
xor
inc
pop
xor
add
jecxz
jmp
jmp
lret
pop
mov
es
jl
or
stos
movsl
mov
inc
push
stos
mov
xor
mov
adc
and
dec
movsl
packssdw
mov
addr16
push
std
jmp
jmp
jge
lret
daa
mov
je
popf
shll
pusha
add
nop
inc
push
pusha
stos
mov
jg
movsl
xor
xchg
and
xor
and
in
lahf
mov
cld
or
xor
sti
shlb
xor
pop
push
cmp
stos
in
ja
add
mov
xor
cmp
jae
testb
sub
fists
and
iret
stc
sbb
mov
pop
adc
mov
and
jecxz
inc
cmpsb
or
dec
das
mov
sbb
out
hlt
add
pmaddwd
mov
adc
pusha
and
add
aaa
or
lods
scas
in
inc
or
aaa
mov
dec
addr16
inc
cmpsl
cli
adc
or
cli
cmpsb
mov
inc
push
test
and
imul
icebp
mov
outsb
sbb
add
sub
and
sub
enter
xor
and
or
push
in
scas
outsb
push
and
loope
arpl
scas
xchg
scas
push
subl
dec
lds
shrb
cltd
or
and
xor
jecxz
std
and
outsb
loope
xor
dec
sti
stos
push
fldcw
testb
mov
out
nop
add
decl
jmp
add
push
mov
sub
adc
pop
int
add
pop
push
ljmp
mov
in
test
inc
mov
xor
jae
test
mov
push
jp
mov
int3
mov
cmpsl
das
popa
stc
pop
insl
pop
sbb
ret
mov
enter
dec
cmp
add
addr16
jno
adc
jg
insl
mov
mov
jmp
movsb
subb
mov
mov
inc
mov
push
ret
jnp
add
and
dec
jns
jle
out
xlat
xor
icebp
out
mov
sub
fwait
or
adc
push
jecxz
or
jg
xchg
cmp
loop
scas
inc
testl
xchg
test
fnstcw
cmp
out
mov
push
dec
pop
add
jo
jecxz
int
sahf
nop
mov
jns
repz
pop
nop
repz
imul
movsb
shlb
stos
adc
sar
out
mov
js
movsb
addr16
call
lds
mov
xor
in
sub
fisubrl
aas
mov
sbb
int3
and
mov
cmc
lahf
imul
lret
cmp
push
inc
bound
mov
movsb
aad
jg
test
sarl
lock
xchg
imul
outsb
xlat
cmpb
push
shrb
cmp
loop
jle
inc
aaa
lret
outsb
mov
pop
jo
sub
or
push
pop
adc
add
shlb
dec
mov
sbb
aam
push
sarb
insl
fmuls
loop
mov
xorb
cmp
adc
mov
cmpb
mov
xchg
ret
inc
mov
push
mov
or
lods
push
pushf
cmc
or
mov
int
shll
rcll
lahf
add
test
cmp
cmp
mov
fstl
inc
daa
mov
inc
loop
sub
sbb
lock
mov
std
insb
out
sbb
sahf
icebp
and
fmull
xor
ror
leave
add
mov
jne
lret
mov
cmpsl
xor
orb
xor
mov
lods
cld
inc
int
orb
jae,pn
xchg
test
into
cmp
ljmp
call
and
xlat
add
adc
add
mov
cmpsl
daa
lds
xchg
sub
inc
bound
jbe
sbb
mov
sti
std
hlt
sbb
mov
jnp
out
test
sbb
pop
xor
aas
jg
sbb
mov
pop
lret
out
mov
sbb
adc
jmp
sahf
dec
insb
mov
fistpll
setge
push
js
aam
repz
inc
pop
pop
pop
dec
gs
jmp
adc
push
sbb
mov
ds
mov
aad
mov
sbb
cmp
stos
cmp
jnp
jns
out
insb
ret
jnp
movsl
sub
insl
sbb
lahf
mov
cmp
negb
pop
xor
add
clc
xchg
mov
leave
pusha
cmp
sub
cmp
jno
cmp
push
dec
sub
fldcw
mov
push
out
or
pop
jno
shlb
decb
dec
rorb
lret
arpl
shrb
ja
pusha
lds
adc
mov
popf
jecxz
xor
push
in
aas
ja
xchg
mov
pop
bound
jmp
in
sub
jae,pn
aad
push
std
xchg
adc
shl
jnp
inc
fs
insl
sbb
daa
sub
mov
mov
mulb
push
leave
js
xor
push
je
loopne
and
in
jp
fsubr
addb
inc
and
mov
sub
adc
scas
inc
cmp
jmp
aam
jg
cld
insl
xchg
lret
aas
aas
fdivrl
sarl
mov
andl
push
repnz
stos
shrb
gs
cltd
sbb
sbbb
xor
inc
stos
pop
movsl
jmp
and
lret
or
out
aaa
lods
aad
insb
xor
sti
add
mov
imul
fwait
jno
jo
xchg
cwtl
or
cmp
aas
lock
cltd
xchg
and
repnz
pop
mov
mov
arpl
mov
lods
call
dec
fbstp
sub
lea
xor
outsl
test
mov
mov
pop
ret
and
xor
inc
jp
adc
adc
data16
arpl
pop
aam
into
mov
inc
lea
inc
into
sub
mov
mov
test
aam
mov
fsub
test
and
sarb
lds
pop
rcrb
jb
and
rcrb
mov
jecxz,pt
filds
inc
ret
not
clc
mov
mov
data16
popf
push
cltd
fwait
and
or
pop
mov
jl
jge
push
popa
push
ss
imul
cmpsl
subl
fisttpll
sti
mov
mov
inc
jecxz
lds
cli
xchg
push
fnstsw
jp
cmpsl
add
push
cmp
pop
loop
sbb
xor
add
pop
iret
or
xchg
pusha
and
lds
adc
adcl
stos
stos
leave
add
mov
add
mov
sub
jmp
fimull
loopne
mov
add
scas
into
adc
adc
inc
push
cmpsl
sbbb
js
mov
mov
push
mov
sub
jecxz
js
sub
jmp
or
xorb
mov
es
push
sub
negb
loopne
mov
dec
sbb
cli
cmc
leave
and
popf
sbb
xchg
into
add
pushl
jae
les
test
mov
xor
sbb
jbe
daa
sbb
sbb
stos
adc
inc
and
fdivrs
cmp
iret
out
cli
and
ret
aas
lcall
push
sbb
jns
fs
xor
imul
xor
fsubl
call
mov
sbb
xchg
neg
jg
mov
pop
jo
pop
push
sarb
jne
pop
xchg
add
xor
imul
movsb
sahf
das
test
addr16
cmp
mov
and
xor
aad
fs
xchg
xor
outsl
repnz
or
inc
xor
xchg
mov
cs
push
iret
dec
cld
icebp
sbb
fbstp
outsl
mov
stos
mov
sub
jmp
add
mov
js
mov
sti
les
pop
inc
adc
lret
fsub
fnstcw
xor
xor
sub
andb
mov
loop
nop
inc
fldt
or
xchg
lods
inc
mov
xor
fidivrs
pop
ret
and
sahf
push
sub
pop
mov
out
xchg
push
in
mov
push
or
jae
and
lds
test
xor
mov
adc
mov
mov
mov
test
mov
xchg
xor
mov
test
subl
imul
lret
mov
sub
inc
fistl
adc
push
pop
jecxz
insb
push
cs
ljmp
push
out
jnp
js
popw
aas
es
cmp
adc
sbb
pop
add
xchg
nop
ret
aas
or
insb
inc
mov
rclb
xchg
xchg
movb
arpl
dec
into
sbb
pop
cmp
or
jecxz
cmc
outsl
dec
pop
or
inc
add
nop
push
mov
mov
xor
bound
lods
lret
adc
adc
out
xor
aaa
and
fists
into
lret
push
lcall
sti
pop
xor
fninit
loop
push
insw
jns
imul
dec
lds
out
scas
rclb
dec
xchg
aas
iret
sbb
lock
pop
pop
jns
adc
stos
pop
ljmp
fmull
orb
fwait
stos
xor
lock
adc
stc
xchg
pop
or
insb
dec
sub
mov
pop
dec
test
jbe
insl
adc
dec
mov
inc
pop
xchg
push
adc
and
fnstcw
inc
mov
imulb
data16
dec
out
jbe
sbb
mov
mov
sbb
push
movntq
cmpsb
iret
outsb
shrl
or
and
flds
xchg
popf
inc
addb
lcall
jle
aam
sbb
mov
lock
adc
or
jmp
test
gs
mov
mov
test
icebp
pop
test
mov
push
sbb
lea
jmp
mov
ror
das
jmp
mov
fidivs
cmp
cld
sub
adc
adc
cmpsl
xchg
fdivp
dec
xor
lock
xchg
xor
stos
lods
or
push
sbb
jne
pop
lods
cmp
sbb
sub
inc
enterw
mov
dec
nop
dec
sub
shl
dec
pop
leave
enter
fs
mov
stc
loopne
and
or
out
nop
lret
add
pop
imul
xchg
imul
mov
mov
add
dec
imul
mov
cmp
dec
pop
cld
pop
sbb
pushf
hlt
push
in
xor
lea
fcoms
jns
aaa
fadds
fstpt
mov
inc
inc
jecxz
call
test
xlat
test
repnz
cmc
rcrl
testb
push
aaa
dec
lret
pop
lret
ficoms
and
mov
out
add
mov
jmp
std
adc
xor
in
xor
sub
jecxz
lock
cmpsb
scas
clc
push
icebp
movsb
mov
sti
js
cmp
adc
iret
push
xorb
shl
xchg
pop
jb
and
lret
ret
addr16
shll
jmp
adc
ds
or
outsb
ja
pop
adc
push
data16
lahf
pop
or
sbb
ss
adc
push
xor
jae
sbb
test
in
ret
imulb
std
test
fnstenv
in
jl
xchg
mov
lods
push
das
jnp
repnz
adc
int
subb
divb
leave
fldl
stos
jo
sub
cmp
add
pop
pop
jne
xor
das
movb
sub
adc
aaa
inc
jg
adc
out
scas
mov
iret
push
add
xor
pop
enter
negl
cwtl
dec
inc
ds
js
jb
cmpsl
pusha
inc
add
jmp
xlat
mov
fists
cmp
and
aaa
xor
jg
or
shl
push
and
ret
pushw
outsl
xchg
xor
mov
inc
jg
js
xchg
ret
mov
lahf
mov
xchg
cltd
push
fbld
add
mov
inc
scas
out
push
mov
push
in
pop
imul
mov
enter
jae
xchg
mov
data16
lods
mov
mov
xchg
jge
push
dec
jecxz
mov
cltd
push
pop
jae
aam
jl
push
add
sub
push
arpl
add
sahf
sbb
shll
pop
popa
es
test
adc
sti
push
mov
add
insb
shl
dec
jg
pop
xor
mov
jb
in
cld
inc
aaa
icebp
shl
adc
xchg
dec
sbb
adc
ja
out
fnstenv
cmp
into
fwait
cwtl
cmp
cmp
jb
fistps
es
xor
push
mov
fcmovnu
mov
mov
lret
daa
push
xchg
loop
movsb
inc
and
push
mov
mov
bound
push
dec
dec
or
lods
adc
ds
sbb
inc
sub
dec
push
sub
inc
mov
lcall
jmp
jo
scas
sub
lods
xlat
out
negb
popf
or
pop
push
sbb
mov
stc
dec
add
xor
fisttpll
in
out
add
and
shl
ret
push
pop
or
push
into
xor
daa
data16
xchg
or
in
pop
pop
leave
dec
cmpb
mov
jmp
sbb
pop
cmp
les
dec
aas
adc
popa
es
push
in
aas
in
xchg
sbbb
movsb
addr16
dec
adcb
out
fincstp
rcr
adc
jne
insb
jg
xor
hlt
dec
push
mov
or
pusha
mov
int
mov
fldcw
in
or
pusha
pop
xor
mov
fwait
jg
ja
cmpsb
movsb
xchg
inc
mov
push
xchg
out
js
mov
sbb
fstps
sub
je
cmp
pop
bound
mov
jle
fcom
push
loop
xor
mov
cmp
jecxz
mov
imul
xchg
daa
sub
xchg
and
test
fs
sbb
inc
cmpsl
test
sub
inc
jbe
pop
addl
adc
scas
ja
lret
lret
and
mov
pop
fildll
pop
test
push
cli
lea
daa
int3
mov
push
lahf
mov
mov
push
lcall
jge
imul
rorb
pop
adc
ss
jecxz
inc
mov
inc
dec
ss
mov
pop
shlb
jo
arpl
stos
test
sbb
mov
pop
orl
mov
stc
inc
fidivl
add
sbb
out
cmp
push
pop
jnp
and
and
cmp
add
pushf
out
cmc
xchg
mov
cmp
mov
push
divl
out
mov
or
jae
sahf
ss
or
push
shrb
add
fiaddl
jbe
pop
inc
and
jg
pusha
icebp
push
mov
mov
cwtl
xchg
addr16
jmp
inc
movsl
enter
jecxz
xchg
xchg
sub
cs
jl
incl
out
call
insl
or
mov
jne
stos
mov
fwait
cmp
sub
xchg
out
mov
std
fbstp
mov
gs
lcall
mov
jecxz
and
xor
jmp
dec
subb
daa
mov
mov
pusha
fnsave
aam
and
mov
cmpsb
out
add
daa
stos
or
mov
pop
cmpsl
aad
lods
sti
enter
leave
push
loop
cmp
dec
pop
mov
push
xor
adc
mov
icebp
dec
fisttpll
and
push
mov
cwtl
sbb
loop
rcrl
mov
mov
pop
jp
mov
arpl
mov
pushf
adc
dec
popa
or
push
jecxz
dec
adc
filds
movsl
jp
rorb
xlat
xchg
mov
lret
xor
push
xchg
mov
lds
lahf
adc
xchg
cld
xchg
pop
sti
loope
and
jge
aas
ja
cli
pop
add
fildll
scas
sub
rorl
out
movsb
mov
jle
data16
jno
adc
das
push
in
aaa
inc
pushf
jno
pop
add
jmp
adcb
fwait
push
sti
stos
and
test
inc
push
adc
test
and
sbb
xchg
fsubs
aad
mov
movsl
cmp
into
pop
cli
jo
mov
add
iret
ret
cmp
sarl
in
cmpl
cwtl
cmp
or
mov
xor
fistl
xor
push
and
pop
cltd
pushf
gs
dec
test
jp
fcomp
push
inc
push
popl
mov
vcmppd
pop
mov
add
shlb
pop
mov
and
int
loop
mov
and
jle
adc
dec
pop
or
lret
mov
xor
mov
stos
jnp
js
ss
add
inc
dec
mov
sbb
ja
ja
sti
insb
rcll
imul
aad
mov
dec
and
test
xor
dec
jmp
inc
pop
rcrl
mov
mov
sbb
xchg
cmp
sti
cltd
xchg
fisubs
outsb
dec
loopne
cmc
rolb
ljmp
subb
inc
into
jns
mov
das
push
jns
cli
pop
xchg
sub
add
push
ja
xor
aad
adc
lds
adc
stos
or
and
ds
std
fwait
stos
mov
sub
movsl
lods
aas
mov
sahf
jecxz
mov
in
mov
cltd
cmpsl
sub
mov
cmc
movsb
clc
mov
pop
ds
cmpb
jmp
jge
xchg
cmp
sbb
out
mov
aas
cmpsb
jle
in
sub
pop
inc
sub
push
cpuid
jnp
jb
and
push
fisttpll
out
shll
cli
or
sbb
push
jp
xor
dec
xor
outsl
mov
add
xor
mov
orb
inc
outsl
dec
cmp
mulb
sub
int3
mov
adc
cmc
sub
sub
pop
mov
jmp
daa
or
or
or
adc
out
stos
sub
aas
loop
cmpsl
push
sbb
fstl
dec
lods
fs
pushf
push
add
lcall
cmp
fdivrl
sub
xor
sbb
xor
dec
and
enter
dec
je
ss
push
aad
mov
mov
nop
mov
sub
cmp
and
xchg
sub
test
dec
out
lret
adc
je
lahf
in
stos
cmpsl
ja
jmp
cmp
outsl
push
fnstsw
dec
push
popa
jnp
add
repnz
outsl
xlat
lods
xor
xchg
cmp
loopne
daa
inc
sub
mov
daa
in
les
stos
outsb
cwtl
mov
mov
fcomps
xchg
in
adc
and
and
dec
mov
inc
mov
lods
cli
rcl
adc
add
in
add
mov
aad
cmpsl
aas
mov
xchg
and
mov
loope
mov
sbb
dec
in
in
int
leave
jne
jnp
jae
lock
dec
je
mov
push
scas
fstpl
adc
mov
or
ljmp
mov
imul
push
mov
mov
loop
fistl
inc
imul
insl
lods
dec
cmp
or
lret
mov
dec
out
lret
pop
fisttpll
add
repnz
push
xor
xor
push
xchg
pop
lods
jg
fidivrl
mov
fcomip
subl
addr16
jge
xor
dec
and
cmp
bnd
mov
sbb
ret
mov
daa
xchg
xchg
xchg
adc
mov
mov
cmp
push
cmp
and
xchg
cmp
mov
les
out
cmpsl
mov
adc
cmpsb
addr16
mov
icebp
cmp
mov
testl
pushf
add
or
arpl
sarb
push
imul
sub
ja
cli
sub
push
pop
test
xchg
int
push
je
cltd
mov
xchg
mov
inc
jmp
xchg
lret
leave
rcll
adc
fidivrs
adc
mov
frstor
inc
nop
mov
js
jnp
xchg
shll
ret
jge
and
or
dec
or
cmp
adc
sub
aad
pop
mov
and
cltd
fsts
push
xchg
or
ljmp
cmpl
in
aad
ss
pop
sbb
xchg
gs
xlat
sbbl
sub
push
imul
aas
pop
xor
mov
leave
mov
xchg
cltd
mov
std
cmp
aad
int
testb
cs
pop
mov
adc
pop
push
popa
or
cmp
and
cmp
or
adc
cli
adc
subl
jne
sub
add
mov
outsl
outsl
out
jecxz
gs
cmp
pop
lcall
push
mov
mov
fcoms
and
add
imul
int3
daa
pop
ja
out
sub
sbb
mov
cmp
outsl
lret
cmc
bound
push
ljmp
in
xlat
and
dec
or
movsb
pop
add
adc
loopne
jbe
cmp
out
lea
mov
cmp
lea
sarl
cwtl
and
mov
frstor
insb
dec
sbb
fwait
xor
pop
dec
or
jbe
add
testb
fs
dec
int
xor
xor
stc
cmp
and
cwtl
push
and
adc
rorb
mov
xchg
mov
jle
mov
jl
dec
xchg
xor
pextrw
repz
jp
rcrl
jmp
fwait
lock
loopne
sbb
test
in
pop
addr16
ss
mov
push
inc
testl
jnp
neg
lcall
jbe
jns
cltd
or
movsl
sti
fucom
es
add
movsl
adc
aad
sub
bound
dec
sub
push
pop
xchg
lahf
cmp
addr16
adcl
or
rolb
cmp
fnsave
push
sbb
xchg
cmp
icebp
fwait
xor
jg
jb
jge
or
pop
test
mov
aad
mov
rcll
shrl
int3
add
mov
adc
mov
rcll
cmp
add
cmovge
in
mov
pusha
and
rorl
lret
push
pop
in
xor
sub
jecxz
mov
cs
xchg
arpl
pop
and
std
adc
inc
ret
stos
ja
repnz
mov
sbbl
je
int3
test
xlat
inc
mov
fisubrs
test
add
test
pop
repnz
insb
pop
xchg
leave
in
dec
ss
inc
int
adc
dec
bound
xchg
or
xor
mov
repnz
jb
lret
out
add
jo
xor
or
cltd
pop
aad
lret
lods
add
out
mov
dec
iret
popf
pop
xchg
pop
xor
pop
add
pop
movsb
mov
or
rorb
xor
jle
or
xchg
mov
testl
stos
aas
mov
lds
inc
ret
xchg
dec
fisttpll
add
pop
xchg
lea
dec
and
xor
inc
push
bound
inc
xor
iret
mov
lock
mov
mov
push
jge
sub
pop
xchg
testl
mov
scas
push
mov
fistpl
inc
or
fldcw
fidivrl
sbb
jbe
and
aad
pop
ret
std
fwait
push
mov
xor
cmp
dec
rcll
push
in
sahf
lret
or
xchg
dec
fldt
jecxz
pop
out
aad
in
lret
out
sar
lds
stc
out
iret
rcrb
xchg
imul
sub
test
mov
add
mov
fisttps
push
dec
xchg
mov
test
addr16
std
test
sti
fstl
sti
add
sbb
int3
sbb
loopne
cmp
sub
inc
mov
inc
inc
cmp
ret
cmp
mov
fnstsw
add
jne
jbe
lds
lret
hlt
adc
xor
jp
pop
jecxz
inc
xor
xchg
adc
ss
shrb
sub
mov
mov
add
add
fdivr
rorb
lahf
imul
aad
call
aas
pop
jmp
std
sub
leave
push
jno
sar
mov
stos
dec
push
popa
popa
adc
xorb
cmp
pop
leave
or
jle
push
cmc
mov
sub
xchg
push
mov
inc
das
mov
data16
mov
add
lods
push
jl
popa
daa
pop
xchg
cmp
out
mov
clc
je
xor
inc
fwait
mov
adc
movsb
push
sti
scas
into
aad
fdivrl
test
insl
daa
xchg
or
and
pop
cmp
inc
inc
cmpsb
and
cld
lods
mov
inc
cs
cmpsb
ja
push
repz
or
push
adc
mov
cmp
nopl
xchg
mov
add
in
enter
xor
cld
mov
pop
nop
outsl
cmp
adc
lods
dec
imul
fildll
popf
mov
push
das
sbb
je
mov
lods
out
loop
pop
in
sub
push
xchg
clc
int
cmp
mov
cs
shrl
sbb
aas
sbb
std
pop
xchg
push
std
push
jmp
pop
pop
out
xchg
ret
and
and
inc
addr16
push
and
aaa
inc
shld
sbb
ret
mov
mov
cmp
mov
test
out
jge
imul
cmc
jno
adc
xor
les
inc
sti
das
cmp
adc
lods
das
insl
jg
adc
outsl
mov
pop
je
popf
pop
pushl
jle
idiv
mull
sbb
push
lods
pop
insl
shl
into
xor
jnp
push
and
push
cmpl
jbe
jnp
lds
and
incb
fs
lods
sbb
daa
in
cmp
or
test
imul
mov
repnz
jmp
mov
aas
jge
jnp
mov
or
sub
jno
sahf
movb
inc
es
jb
push
cmp
mov
cmpsb
popf
xchg
push
inc
jae
sbb
inc
stos
add
cs
xchg
dec
mov
cmp
mov
rolb
inc
popf
dec
sub
scas
mov
pop
lods
scas
and
mov
in
add
pop
lret
pusha
pop
lods
out
sbb
cmp
xlat
dec
addl
addr16
adc
jp
imul
das
data16
jae
aam
xchg
xor
mov
sub
out
imul
je
jae
xlat
fcmovnb
push
rclb
test
sub
popf
inc
data16
cld
or
sub
test
sub
push
stos
scas
cwtl
imul
push
push
mov
inc
xor
xchg
arpl
bound
xchg
in
imul
sub
mov
mov
mov
mov
jnp
lahf
or
nop
movsl
stc
sete
xchg
into
mov
dec
xchg
rclb
out
xchg
sar
mov
jnp
cli
cmpsb
ja
cmp
mov
push
shll
popa
shl
cmp
gs
jle
xchg
insb
int
sarb
jnp
jg
outsb
rep
fstl
sti
cmpsb
test
dec
sub
xor
shll
mov
movsb
loop
mov
mov
add
aam
sbb
das
xchg
das
jg
mov
or
sbb
mov
cli
fstl
mov
popl
push
aam
adc
adc
insl
inc
add
pop
push
cmc
or
rcr
call
outsl
das
mov
add
pop
mov
loop
jle
xchg
dec
push
push
mov
cmpsb
mov
push
and
push
jne
cmc
daa
out
outsb
ret
int
dec
push
xor
insl
mov
or
cmp
outsl
or
lods
xchg
roll
mov
outsb
mov
add
push
fisttps
outsl
sbb
out
adc
inc
arpl
in
inc
in
call
xchg
or
fstpl
fistps
pop
or
stos
imul
mov
cwtl
inc
sbb
mov
repz
aam
jp
xchg
ficoms
xchg
mov
push
and
popa
outsb
stos
popa
xchg
jns
and
out
or
bound
int3
leave
cmc
jl
cwtl
pop
rcrb
add
sahf
or
int
mov
push
fsubrp
pop
and
push
cltd
cmp
or
jge
test
push
rcr
adc
sbb
int3
xor
sbb
mov
fistl
dec
inc
pop
scas
repz
leave
mov
cmp
mov
lods
xor
jnp
scas
nop
pop
add
lods
shll
in
sub
lods
cmp
bnd
movsb
sbb
dec
mov
mov
popf
into
cmp
leave
or
popf
ss
dec
jl
test
bound
xor
addl
pop
cltd
ljmp
pop
and
pushf
jmp
pop
ret
and
iretw
sti
xor
ljmp
add
inc
cltd
dec
xchg
mulb
in
mov
mov
mov
mov
pop
push
add
xchg
into
cmp
add
jg
mov
adc
and
rcl
arpl
mov
mov
xchg
outsb
lods
push
cmp
mov
xchg
aad
gs
ret
mov
scas
test
push
mov
push
and
ja
insl
fists
mov
std
mov
ret
push
mov
mov
mov
lods
mov
pushf
ss
mov
test
and
js
ja,pt
cltd
xchg
inc
in
testl
push
lret
xchg
psubsw
jns
jae
push
icebp
add
pop
cltd
xor
push
mov
jb
mov
insl
xchg
adc
leave
dec
jmp
pop
push
sub
xlat
mov
jnp
cmp
in
imul
pop
xchg
jle
out
cmp
hlt
xchg
enter
and
loop
aaa
jne
imul
or
test
fldt
lcall
sub
mov
push
jbe
jns
sbb
xchg
mov
arpl
mov
imul
lods
cli
fs
cli
pushf
xor
inc
mov
push
jne
lds
subl
out
movsl
push
sbb
push
or
inc
xchg
hlt
test
in
aaa
lea
orl
cmpsb
mov
cwtl
dec
out
push
sbb
je
sbb
cli
sub
adc
fs
inc
pusha
jle
inc
push
ret
leave
cmp
in
ja
inc
int
rorl
add
sbb
push
shll
ss
xchg
stos
sub
pop
and
lahf
mov
test
mov
cmp
in
cmc
cmp
testl
stos
cmp
or
setne
pop
jecxz
or
cmpsb
ret
and
mov
mov
andb
push
push
cmp
repnz
es
xor
cmp
movsl
mov
mov
cli
mov
xchg
dec
xor
xchg
dec
xlat
sar
sbb
sbb
mov
cli
lahf
ss
adcb
xchg
scas
fistl
scas
call
push
in
mov
or
mov
call
mov
xchg
lods
push
pop
inc
sbbl
mov
cmp
out
sub
clc
mov
and
leave
xchg
mov
popf
incl
test
cmp
stos
int3
mov
sub
xchg
enter
xchg
push
dec
sar
jle
ja
sahf
push
inc
xchg
push
int3
push
out
aam
push
jecxz
push
mov
daa
lahf
and
lret
push
sbb
mov
fnstsw
adc
and
gs
add
cmpsl
stos
stos
sub
mov
js
sbb
jb
je
inc
pop
les
mov
lret
adc
cmp
in
mov
inc
aam
or
lcall
sti
cmp
xchg
add
pusha
adcl
xor
gs
and
aam
dec
es
mov
imul
or
adc
xor
sbb
xchg
outsb
bnd
lock
xchg
psubsb
addr16
xchg
lods
addr16
iret
rorl
mov
dec
jne
fisttpll
add
add
add
rcll
ret
xchg
mov
lock
bound
rcrb
sub
outsb
inc
iret
add
iret
out
xor
imul
mov
inc
int3
inc
rcrl
sbb
es
add
out
sti
fmulp
clc
movl
rcrb
xchg
sti
or
cmpsl
push
into
sub
out
mov
push
jno
mov
sub
jge
mov
lods
pop
or
out
pop
add
mov
lahf
inc
dec
push
pop
pop
xor
rep
dec
sub
dec
pop
xor
adc
xor
xor
mov
data16
or
jo
loope
inc
and
movl
testl
add
mov
sub
sbb
sbb
in
out
ds
xor
in
push
inc
pop
leave
adc
push
add
lahf
jp
push
ja
or
cmp
test
push
cs
cmp
test
mov
std
lea
lcall
mov
inc
lret
call
add
dec
mov
or
inc
pop
xor
dec
dec
aad
ss
js
jg
movsl
mov
mov
movb
adc
cmp
aas
xor
outsb
lcall
dec
xor
pop
addr16
loopne
negb
lods
call
dec
cmpsb
push
fstps
pop
subb
pop
or
inc
cmp
sbb
add
into
loop
mov
jl
add
push
movsl
mov
shlb
icebp
andb
les
inc
or
adc
out
stos
xorl
add
mov
and
jmp
shlb
nop
test
and
fcmovb
test
push
lret
into
push
add
push
jno
jge
mov
adc
outsb
loope
lea
add
jnp
adc
dec
ret
jg
cmpsb
adc
notl
push
cmc
repz
and
lret
into
in
add
outsb
mov
lahf
out
xor
mov
inc
sub
inc
mov
ljmp
ss
sbb
daa
mov
or
dec
push
push
mov
push
out
jp
insb
scas
lods
lcall
push
xor
or
pop
pushf
mov
and
ljmp
and
jle
pop
unpcklps
cmpsl
pop
iret
jmp
push
mov
mov
repnz
stos
or
aam
iret
pop
cmc
cltd
sbb
movsb
gs
or
int
fdivrl
dec
hlt
fsubp
fdivrp
rcl
xor
sbb
mov
push
xor
ss
mov
xor
push
into
loopne
sarl
andl
cmpb
dec
aaa
xchg
pop
mulb
mov
dec
scas
xchg
inc
push
mov
sub
cli
push
loope
pushf
cmp
mov
fs
ljmp
sbb
cmp
xchg
mov
hlt
cmp
sub
cwtl
xchg
je
and
adc
dec
cltd
lret
dec
mov
mov
mov
xchg
fs
testl
arpl
inc
sbb
aam
dec
xchg
sub
popa
into
jg
or
push
dec
in
out
inc
jb
inc
push
push
xor
call
insb
ja
in
mov
ljmp
push
ljmp
pushf
movsl
mov
mov
mov
mov
mov
loope
inc
lahf
lcall
andps
leave
nop
out
pop
arpl
das
mov
lret
dec
mov
pop
cmp
add
aam
jecxz
jp
popf
cs
shlb
cmp
add
daa
stc
packssdw
aas
lret
mov
inc
fwait
push
pusha
mov
add
sbb
push
mov
push
sahf
cltd
dec
pop
js
xchg
shrb
sti
popl
addr16
addr16
dec
push
lahf
and
mov
lock
adc
add
push
ss
imul
jp
icebp
dec
out
popf
loop
add
jno
fsubrl
aas
dec
stos
cld
test
or
cmp
mov
adc
mov
mov
jge
push
xlat
stos
pop
in
sbb
adc
lods
popf
jp
push
mov
ljmp
lds
sbb
xor
leave
shlb
addr16
dec
pop
dec
js
add
ds
add
and
in
mov
xchg
stos
insb
mov
jmp
testl
and
ret
mov
mov
clc
jns
mov
mov
push
bnd
adc
dec
mov
jae
mov
insb
push
addr16
insb
sub
xchg
lret
jmp
mov
rclb
lahf
test
cmpl
rolb
repnz
xor
mov
fucom
pop
or
pop
pushf
out
jo
stos
in
test
insb
stos
mov
push
mov
push
dec
sbb
xchg
xchg
push
jae
mov
test
fcompp
mov
xor
mov
aam
pop
push
add
push
sahf
cmp
test
inc
fiadds
popf
iret
adc
mov
lcall
or
fistpll
fdivrp
and
sbb
sub
adc
and
adc
jg
and
sub
leave
xchg
std
icebp
pop
mov
sarb
clc
and
scas
lret
lahf
popa
adc
xor
mov
fcmovnb
jecxz
pop
jmp
insb
js
insb
daa
mov
dec
adc
and
push
mul
mov
leave
mov
inc
cmpsb
jnp
adc
push
dec
or
ret
and
aad
cmc
lods
xor
mov
out
push
movsb
rorl
mov
cmp
inc
out
jl
leave
inc
or
inc
clc
test
cs
dec
mov
shrb
inc
dec
jecxz
push
dec
lahf
lcall
ja
dec
xchg
js
sub
xor
jl
ja
pop
lods
inc
pop
mov
add
mov
jne
mov
cmp
add
seto
fcoms
add
fwait
xchg
imul
add
aam
jno
xor
adc
xor
sbb
inc
inc
mov
fdivp
add
mov
pushf
ja
and
jbe
inc
xlat
int
mov
pop
imul
repz
in
dec
out
inc
lahf
shl
int3
jle
subb
xchg
test
ret
or
call
sbb
and
and
add
dec
test
pop
lret
jp
rcll
add
add
mull
outsl
stos
xchg
and
lods
jbe
xchg
push
test
nop
outsb
ret
and
fmul
pushf
inc
dec
push
jecxz
in
jne
xor
fdivs
and
cmp
xchg
mov
cli
mov
fsub
jmp
in
mov
sbb
sub
in
mov
cmpsb
lods
sbb
adc
cmp
push
xchg
das
xor
xchg
sbb
int
gs
fstps
pop
inc
mov
mov
or
ficoml
cmp
pop
test
jne
out
lods
fsubrl
mov
mov
push
push
jns
or
pop
test
std
sbb
pop
mov
cmp
cmp
jb
jo
jl
jmp
jmp
xchg
add
dec
js
mov
stos
pusha
dec
testl
in
sub
mov
pop
mov
aaa
push
pop
lods
mov
adc
jg
xor
sbb
mov
popa
xor
aas
pop
and
bound
mov
pop
pmaxub
ds
nop
call
adcb
mov
repz
mov
pushf
or
mov
test
add
jo
xchg
xchg
call
stos
mov
xor
push
xchg
hlt
into
into
cltd
fmull
insl
adc
ret
das
jbe
add
mov
jl
lea
cld
pop
xchg
ljmp
xchg
or
or
inc
iret
xchg
dec
dec
rcr
push
shll
fldl
adc
mov
pop
mov
sbbl
cmp
ror
out
lcall
testb
scas
loopne
mov
icebp
cmp
sub
mov
inc
ret
mov
fs
outsl
into
insl
call
push
jmp
inc
call
sub
cmp
xchg
sbb
sti
divb
pop
aas
fiaddl
jecxz
popf
jno
mov
push
test
outsl
pop
xor
dec
in
in
mul
cmp
ds
sub
push
add
inc
dec
cli
loopne
cld
jo
xchg
addl
xor
sti
inc
xchg
ret
mov
test
or
ja
add
aas
sbb
in
mov
sub
xchg
or
mov
arpl
sahf
stos
add
out
push
add
mov
out
dec
mov
xor
sub
les
enter
mov
jp
popa
cwtl
dec
mov
pop
push
test
jb
mov
pop
inc
add
jmp
jb
js
mov
sub
or
sbb
iret
aaa
pushw
inc
fidivrl
jecxz
jo
out
sub
mov
rolb
jmp
neg
std
xchg
aas
mov
into
pop
in
xor
cmpsl
mov
mov
cmpsl
push
xchg
outsl
and
push
jl
sub
pop
testl
hlt
add
into
mov
andl
loop
mov
test
adc
fdivrl
push
xchg
idivb
jae
cmp
push
fcmovnb
pop
and
jae
sbb
xor
pop
ror
stos
into
out
aaa
cmpsb
cmpsl
cmp
or
ja
dec
dec
into
cmc
inc
movlps
fsubr
dec
call
adc
cmp
jnp
cs
push
andb
mov
in
mov
loop
xchg
arpl
hlt
adc
pop
xor
push
cwtl
test
movsl
xor
push
mov
xor
ret
jge
pop
les
push
aas
pusha
cmp
push
mov
mov
mov
popa
int
lret
jae
xor
mov
jb
xor
fnstsw
and
popf
out
movsl
inc
out
fadds
stos
pop
fidivrs
mov
rcrl
sbb
push
cmp
jmp
jecxz
mov
loopne
mov
cld
cmc
adc
repz
call
add
fbld
mov
cmpsl
out
data16
xor
xor
add
xchg
imul
jl
icebp
mov
mov
pop
ja
cmp
xchg
outsb
jbe
lods
xor
lcall
pop
divb
loop
xor
cmp
iret
enter
mov
sbb
sub
or
inc
sbb
mov
mov
push
mov
addb
in
cmpsl
or
sbb
pusha
sti
or
aam
mov
push
daa
outsb
fcomi
inc
pop
add
xor
jbe
or
sub
sub
bound
idivl
dec
scas
subb
lahf
and
dec
adc
lcall
fstps
fstpl
mov
jge
cltd
pop
lea
scas
lret
lds
icebp
mov
cmp
call
mov
mov
or
mov
lahf
push
das
mov
sbb
jg
fistpl
mov
mov
sbb
adc
sti
out
xor
jecxz
loope
add
jle
pop
mov
adc
fidivs
popf
xor
hlt
jecxz
mov
gs
out
sbb
xchg
adc
mov
jbe
sub
lret
roll
push
mov
gs
stos
or
std
push
and
jp
push
cmpsl
ret
mov
jge
xchg
and
or
pusha
jmp
pop
add
fwait
jbe
pop
xor
mov
bound
push
cmc
movsb
int3
inc
rcr
in
idivl
in
test
std
pop
addr16
xor
adc
and
ljmp
es
mov
mov
pop
pop
fwait
jnp
out
cmp
sbb
pop
imul
adc
rorl
cmp
adc
out
inc
shll
imull
pushf
outsl
dec
fstpl
mov
and
jne
xor
shlb
sub
xchg
scas
xchg
mov
cmp
jg
cmc
mov
jmp
dec
aaa
imul
push
dec
in
shll
fistps
mov
pop
fs
inc
xor
jmp
push
loopne
cmp
and
sahf
sbb
stos
or
mov
xchg
add
scas
cmpsl
push
es
lret
mov
push
or
into
cltd
xor
sub
stc
xor
fwait
xlat
insl
add
mov
jne
jl
xchg
mull
aad
xor
ret
fsubp
fbld
jmp
lock
xor
push
push
jmp
jbe
imulb
mov
mov
cld
nop
adc
ljmp
push
test
sub
mov
push
cwtl
mov
pusha
push
lahf
inc
mov
inc
fbld
shrl
repz
push
movsl
jmp
jnp
scas
scas
int
out
inc
inc
adc
stos
je
test
imul
decl
hlt
mov
inc
and
in
fsubl
ja
jbe
sub
add
sub
push
xor
adc
or
test
push
or
sbb
cmpsl
or
mov
ret
add
mov
imul
mov
sub
sti
sub
xor
xor
lea
ret
adc
cmp
xchg
mov
fsubrs
test
cmpsl
adc
pop
xor
push
pusha
sbb
outsl
dec
testb
stos
mov
pop
dec
imul
pop
sub
ja
lods
aaa
std
repnz
lahf
jg
xchg
fcomp
xchg
sahf
sahf
and
iret
loop
aad
adc
dec
push
rcl
xor
sbb
add
mov
fimuls
repz
lret
in
pop
cmpsl
pop
sub
lds
push
arpl
call
sbb
stos
hlt
icebp
xorl
ds
icebp
nop
loop
sbb
mov
vmwrite
test
test
add
push
dec
ja
les
jb
jnp
inc
adc
outsb
and
insb
mov
pop
loope
fists
and
mov
je
sbb
les
mov
push
es
mov
jmp
repnz
add
clc
movsb
jo
fiaddl
or
adc
jo
stos
and
mov
sbb
add
loope
or
cmp
jns
jg
stos
lahf
lods
jge
pop
mov
out
xor
mov
cmp
and
cmc
jae
mov
pop
fsubrp
push
out
sbb
inc
xchg
in
fstpl
repz
sub
leave
push
xor
int3
cld
cmp
jg
std
sbb
out
fisubs
loop
imul
adcl
pop
and
inc
xchg
ja
cmp
pop
pop
mov
decb
adc
inc
ja
dec
xchg
sbb
pushf
scas
scas
ret
cwtl
addb
or
jl,pn
and
push
xchg
cmc
mov
push
jecxz
stos
add
pop
scas
jge
outsb
loop
nop
mov
mov
lds
data16
and
push
in
in
xchg
jne
in
sti
inc
nop
popf
mov
xor
icebp
test
dec
leave
sub
in
adc
jg
mov
dec
dec
inc
xor
dec
rcl
mov
incb
cmpsb
add
jno
cld
ljmp
in
pop
mov
rolb
mov
stos
shlb
pop
addr16
lock
and
cmc
jne
ja
mov
push
pop
dec
rcll
push
lds
dec
pop
and
sbb
loopne
icebp
in
loopne
jmp
cmp
movsl
dec
shr
pop
sahf
sbb
lret
inc
test
sbb
xor
mov
addr16
sbb
roll
xchg
pop
insl
inc
add
add
lock
xor
jno
fisttpl
sbb
dec
mov
adc
pop
cmp
adc
sti
push
jmp
mov
loopne
xor
stc
fdivl
insl
mov
mov
fwait
stc
sahf
lret
scas
aad
jne
fistpl
icebp
sub
stc
adc
mov
insb
add
xchg
ret
add
or
stos
jge
js
add
adc
xchg
inc
ljmp
mov
out
push
ljmp
je
dec
fucomi
fistl
mov
push
xchg
movsl
add
push
cmp
mov
xchg
sub
addr16
or
test
xor
aas
mov
mov
out
inc
mov
pop
test
test
adc
or
add
cmpsl
jecxz
mov
and
jmp
mov
pop
dec
mov
in
push
lcall
sbb
push
shl
ja
punpckldq
xor
jge
inc
andl
cmp
loope
cs
dec
add
pop
sub
jp
addb
inc
mov
xor
popf
es
out
lret
iret
scas
addr16
div
out
daa
xchg
popf
cmp
cld
shr
test
fnstsw
fadds
jb
mov
div
mov
xchg
aas
fcompl
mov
pop
sub
pop
fsubs
mov
dec
jbe
int
ja,pt
cmp
xchg
lcall
mov
gs
mov
stc
popf
xchg
jge
mov
mov
imul
iret
ficomps
or
insb
cs
out
pop
mov
cmpsl
into
fldcw
add
mov
and
xchg
mov
lea
xchg
push
push
lcall
sahf
adc
les
jae
jbe
push
loopne
rcl
or
dec
pop
out
ja
inc
mov
in
lretw
cmp
idiv
mov
mov
in
ds
inc
leave
and
in
insb
outsb
push
or
add
test
xor
add
adc
loop
dec
xor
jl
aad
nop
jmp
sti
jne
xor
add
ficoms
rcll
cmpsb
xor
mov
jmp
ss
cmp
bound
mov
es
rorb
inc
daa
and
cmp
jg
or
dec
mov
xor
scas
jnp
daa
ror
shrl
mov
daa
pop
mov
mov
cmp
or
jnp
add
scas
and
in
inc
out
dec
dec
addl
sar
xchg
sub
mov
fcompl
inc
shrb
out
fisubrl
cmc
push
jmpw
lea
cmp
fwait
add
jge,pn
jno
mov
lds
out
mov
jnp
iret
mov
cwtl
mov
xor
sbb
mov
mov
jmp
rorb
into
cmp
fisubrs
mov
mov
rep
shll
inc
ljmp
xchg
inc
pop
ss
sub
loope
push
insb
add
jnp
dec
fnclex
in
dec
mov
push
mov
mov
dec
mov
test
lea
jmp
inc
mov
cmp
adc
add
push
sbb
cmpl
jl
int3
or
jno
aad
mov
add
insl
xlat
sbb
in
jne
jp
xlat
repnz
je
xor
or
xor
mov
stos
cmp
stc
push
bound
and
js
lcall
lea
add
pop
scas
shll
nop
pop
outsl
and
inc
adc
xchg
adc
shrb
xor
and
arpl
xlat
mul
pop
jae
xchg
mov
dec
adc
or
jo
adc
adc
sub
clc
mov
mov
sub
iret
inc
lods
mov
add
inc
leave
stos
cmp
js
test
sbb
loope
xlat
and
or
movsb
lret
dec
xchg
shrb
lods
ss
mov
push
pop
nop
inc
in
jo
aaa
adc
mov
dec
cwtl
ja
ret
pop
nop
push
gs
jle
xchg
cmc
or
out
jb
jnp
sub
pop
mov
push
ljmp
add
std
test
ret
jle
loope
sbb
mov
cmp
jns
aam
and
jno
xchg
orl
clc
loop
out
shll
lea
lods
shrl
scas
jne
stos
push
iret
xchg
xchg
mov
cli
mov
mov
adc
jae
sub
mov
insb
mov
sub
loopne
mov
push
xor
pop
dec
test
inc
popf
mov
test
inc
and
push
dec
cmpsl
lret
subl
xor
cltd
jg
imul
popf
je
adcb
cmp
cmp
mov
test
jecxz
cmp
xor
and
mov
inc
stc
sub
sub
adc
outsl
push
mov
push
and
adc
fistps
push
out
fldenv
dec
rcrl
adc
inc
sarl
add
ficoms
push
inc
mov
ds
sbb
sub
add
xchg
sbb
icebp
and
jne
in
icebp
cmp
data16
sbb
mov
sub
push
pop
out
into
cltd
pop
cltd
and
adc
push
mov
jmp
cs
cwtl
dec
call
cmpsb
pushf
sub
lds
lahf
pop
stos
mov
faddl
add
inc
mov
push
jg
aas
ja
int3
jnp
bound
pop
sub
push
push
lretw
outsl
push
xchg
inc
cmpsl
ja
sub
outsl
out
mov
sbb
jno
ret
lcall
cltd
cwtl
mov
sbb
add
push
xor
mov
jl
or
sub
cmp
pop
xor
repnz
lcall
add
jmp
xchg
int3
leave
mov
loopne
add
push
xlat
fwait
add
sub
insb
xor
jo
adc
add
jb
mov
test
push
loop
std
adc
int
adc
leave
cmpb
mov
stos
mov
push
fwait
add
sub
dec
outsb
push
add
cmc
mov
je
movsl
jbe
mov
push
or
dec
sbb
ljmp
mov
test
push
lods
cwtl
divb
add
std
test
push
or
pop
out
push
loopne
mov
out
add
cli
pop
add
lea
mov
lds
jae
es
pop
sub
sub
push
jbe
jp
cmp
cmc
jg
sbb
in
lods
xlat
add
test
rcrb
mov
outsl
adc
ljmp
add
inc
jg
mov
call
jo
into
mov
mov
orl
sub
rol
pop
sbb
in
aam
and
and
jo
adc
push
push
fimull
jge
push
pop
rcll
les
js
aad
arpl
jge
mov
pushf
sub
or
jno
lea
shlb
xor
lods
sarl
sbb
loop
insl
fwait
out
cmp
leave
dec
hlt
je
or
cwtl
mov
cmp
inc
pusha
xor
sub
loop
jns
add
test
or
orl
jg
fidivs
or
shrd
add
inc
jnp
gs
push
adc
lret
call
js
int
cli
push
add
and
jb
xchg
flds
pop
stos
xor
idiv
aaa
lcall
jmp
push
dec
add
mov
dec
pop
or
scas
pushf
sub
mov
push
out
fadds
push
push
icebp
xchg
enter
xchg
enter
mov
inc
sbb
mov
scas
push
push
mov
mov
cld
outsb
or
push
rorl
enter
pop
xlat
lds
std
daa
mov
mov
sbb
mov
push
cli
sti
pop
pop
nop
push
xor
daa
cmp
cmp
xchg
or
and
outsb
cmpsb
cmc
mov
test
fstpl
js
andb
fists
imul
dec
insl
adc
scas
in
xor
mov
pop
inc
jnp
divb
add
test
dec
sbb
test
or
arpl
sub
loop
dec
mov
imul
cwtl
sbbl
mov
popa
loopne
xchg
cmp
xchg
pusha
enter
cmp
sbb
fs
lods
dec
inc
dec
int3
ret
dec
mov
insb
adc
or
sarb
push
sub
mov
repnz
cs
fiadds
inc
or
repnz
sub
ret
test
faddl
dec
or
int
inc
iret
pop
push
jns
int3
mov
ret
sub
and
xor
mov
pop
jae
inc
push
jns
outsl
jg
jno
pop
dec
iret
push
cs
in
mov
jle
loope
dec
cmc
mov
mov
nop
repnz
mov
hlt
cmp
lahf
xor
stos
jl
roll
roll
ljmp
xor
aam
or
mov
cmpl
popw
mov
sub
push
cmp
loope
loopne
sub
call
inc
push
daa
js
andl
cltd
test
mov
hlt
xchg
mov
leave
popa
xchg
imul
cmpsl
xor
inc
sti
mov
inc
or
movsb
dec
xchg
enter
xchg
and
rorb
add
cltd
movsb
sub
call
lret
xchg
jae
pop
cwtl
jo
xlat
cmpl
jns
adc
cli
rorb
out
inc
daa
mov
popa
sub
or
jmp
xchg
mov
add
fsubrp
pop
roll
adc
out
adc
push
cmc
icebp
xchg
inc
in
incb
inc
inc
imul
and
and
sub
sbb
daa
out
test
scas
dec
cmp
inc
scas
out
scas
mov
dec
xor
dec
or
sar
cld
lock
mov
sub
je
add
jmp
dec
movsb
stos
imul
pop
or
xchg
add
cmpsl
gs
and
push
std
mov
loope
pop
mov
pop
repnz
or
outsb
or
and
pop
sbb
inc
cmpsl
nop
xlat
fidivs
or
sarl
cmp
rcl
pop
addb
cs
and
aam
sub
out
push
test
mov
nop
jns
fldenv
js
xchg
dec
push
pop
mov
out
sbb
loope
pop
jb
cmpsl
mov
cmp
jecxz
mov
jl
or
adc
jae
aad
mov
push
mov
ds
jmp
mov
dec
cmpsb
add
or
sub
cmp
mov
scas
xchg
icebp
in
fsubrs
jecxz
repz
pop
push
jecxz
xchg
sub
xor
sbb
es
push
pop
fnstcw
jae
int
mov
cli
mov
sahf
mov
mov
mov
pop
adc
mov
loope
mov
and
scas
jo
cmp
mov
dec
and
or
xor
aas
pop
dec
ss
inc
shll
sbb
popf
test
lds
jb
mov
xchg
cmpsl
adc
xor
int3
mov
dec
dec
fnsave
cmp
js
pop
mov
rorl
cmpsb
adc
jns
iret
out
push
imul
pop
pop
int
dec
mov
sub
xchg
mov
xchg
or
lods
sbb
repz
addr16
pop
sahf
mov
add
or
mov
adc
loop
adc
sbb
stos
movsl
sbb
inc
cmp
xlat
jmp
punpcklbw
jl
fisubrs
fs
xchg
stc
lods
loop
ds
pavgw
xor
pop
mov
push
lods
add
int3
aas
fwait
hlt
push
adc
jmp
xor
or
cmp
mov
sbb
and
push
mov
pop
addr16
lcall
orb
sub
enter
push
pop
les
arpl
loope
fadds
loop
mov
xchg
mov
push
push
mov
into
sbb
dec
xchg
imul
clc
sar
cmp
add
mov
fnstsw
lock
lcall
and
or
fistpl
sti
lahf
dec
jo
sbb
inc
cmp
jno
inc
and
ret
hlt
or
je
mov
mov
dec
xchg
in
bound
mov
fimuls
xchg
fdivs
outsl
divl
pop
add
xchg
out
bound
jmp
rol
fnsave
push
dec
mov
aam
fstps
iret
shlb
test
mov
lds
cmpsb
dec
ret
mov
daa
pushf
cmpsl
adc
ja
insb
push
adc
mov
int3
test
xorl
test
sub
mov
xchg
xlat
push
mov
or
inc
mov
inc
stos
jne
setge
dec
stc
in
loopne
lcall
sahf
popf
xor
test
sbb
push
aam
adc
xchg
fbstp
sti
mov
mov
xor
sub
nop
jo
es
data16
mov
aam
outsl
adc
out
fidivrl
test
movsb
pop
out
inc
jle
mov
and
outsb
sub
xchg
mov
jne
add
jno
sbb
cmpsl
imul
jecxz
int
or
or
enter
loopne
jmp
jns
lods
in
out
jne
sbb
call
xor
out
ret
outsb
in
aam
lret
push
bound
xchg
leave
roll
popf
call
mov
dec
and
in
loope
sbb
scas
movsl
xchg
loop
fsubrl
scas
add
in
das
into
jns
pop
inc
jb
es
fstl
imull
dec
int
aad
or
or
and
cmpb
popa
imul
cmp
sti
jp
jp
sub
push
stos
addl
lea
mov
pop
and
mov
pop
ret
adc
push
pushf
out
add
push
int3
stos
jp
ljmp
loopne
dec
mov
in
sahf
pop
jle
push
push
push
xor
cmp
out
in
xor
xor
push
aam
aas
loope
adc
mov
xchg
shlb
clc
mov
mov
enter
das
or
aaa
aaa
add
mov
arpl
insb
mov
loop
jle
xchg
dec
je
loopne
jmp
mov
mov
fs
mov
cli
or
and
addr16
mov
xlat
out
dec
sbb
and
mov
stc
in
mov
icebp
andl
push
ret
jns
xchg
bound
jns
mov
out
pushf
inc
popf
popa
or
sti
lret
inc
mov
mov
jle
sbb
pop
xchg
lds
and
inc
scas
mov
or
jl
in
xorb
jne
sub
cli
cmp
and
push
jge
jle
cwtl
sbb
xchg
bsr
fistps
les
fldcw
and
pop
je
call
ljmp
nop
cmp
mov
jno
data16
mov
outsb
insl
rolb
inc
or
add
sbb
outsb
popa
fldl2t
lods
and
mov
xor
out
mov
mov
mov
jmp
inc
cmp
cmp
dec
dec
inc
mov
pop
lret
xchg
cmp
testl
jnp
pusha
js
mov
out
cmpsb
dec
cld
push
sbb
dec
jmp
mov
pop
sub
js
adc
in
adc
aaa
repnz
cltd
mov
mov
add
bound
add
lock
test
sub
and
mov
mov
movsl
cmp
jno
xor
repnz
jne
lods
pop
flds
imul
mov
pop
mov
mov
cwtl
gs
inc
jbe
sub
in
insb
aam
jge
lret
js
aam
outsb
pop
scas
sub
shrb
xchg
push
int3
jge
mov
or
cmp
add
outsl
jnp
je
iret
adc
repz
outsb
ret
in
cmp
pop
xchg
test
inc
mov
mov
cmpsb
cli
popa
into
sub
loop
pop
pop
subl
ret
fbld
idivl
cli
movsb
jp
das
dec
jg
mov
outsb
xor
test
es
pop
jp
ret
loope
pop
outsb
loopne
or
out
fs
jbe
cli
pop
fdivs
aaa
daa
inc
mov
jl
adc
and
or
insl
repnz
adc
test
mov
inc
mov
adc
je
inc
pop
rcrb
imul
arpl
dec
push
add
pop
loope
scas
nop
cmc
and
aad
fbld
stos
mov
shr
xor
sub
jp
jne
lret
in
jne
lcall
mov
jo
jg
insl
and
mov
cmp
imul
inc
sub
or
in
jmp
add
push
adc
inc
jbe
test
cwtl
fsubs
fnstcw
mov
xchg
xchg
out
stos
push
or
hlt
jle
pop
pop
mov
add
dec
arpl
jmp
lods
insb
and
ja
pop
xchg
ret
push
mov
arpl
push
add
std
xchg
and
loope
mov
sub
xchg
mov
mov
xchg
data16
push
push
cmp
xor
xor
jae
fisttps
inc
icebp
leave
xchg
mov
pop
outsb
inc
movsl
and
fs
aaa
adc
add
mov
or
lods
add
hlt
add
sbb
adc
fwait
xlat
and
adc
or
cmp
adc
xor
or
or
loop
sub
pop
dec
or
int
mov
setns
testl
lds
ljmp
aam
fwait
out
xchg
mov
daa
mov
and
outsl
jle
fwait
ret
and
add
popf
jg
xor
insb
mov
xor
mov
movsb
mov
arpl
mov
push
cmp
xor
out
mov
mov
cmc
dec
nop
aam
arpl
iret
punpckhbw
loop
imulb
sub
ds
stos
mov
or
inc
xchg
and
rcll
xchg
aaa
scas
xlat
pop
loop
leave
es
inc
jns
lea
and
xchg
rclb
cli
jns
cmp
sbb
mov
push
outsl
addr16
inc
or
jle
idiv
jmp
push
mov
mov
repz
add
pop
bound
cmp
out
jg
in
mov
pop
addr16
sbb
inc
into
sub
xchg
dec
fisttps
cmp
andb
iret
scas
movsb
leave
mov
je
scas
iret
pop
push
fnstenv
sub
sbb
fwait
in
cmp
jge
daa
jae
icebp
and
cs
fwait
or
lock
clc
ja
push
orl
mov
mov
fcmovnb
out
adc
mov
inc
inc
aam
cmp
aam
test
fcompl
xchg
jbe
push
cmpsl
mov
add
jbe
push
rorb
sbb
cmpsl
scas
mov
repnz
js
push
sbb
push
sbb
jo
push
xchg
add
mov
cmp
mov
cs
cmp
mov
pop
xlat
cmc
arpl
xlat
jmp
cltd
movsb
lret
ret
jne
jp
es
xchg
add
shlb
and
fs
cmp
dec
daa
push
movsl
sahf
sahf
ljmp
mulb
fcomps
adc
subl
add
rcrl
xchg
cmpb
and
jl
sarb
in
repz
push
inc
fistpll
ljmp
mov
stos
imulb
pop
pop
test
and
pop
enter
addr16
inc
push
stos
test
inc
js,pn
jp
sti
mov
jl
std
lock
sub
addr16
lahf
xor
xchg
out
and
mov
mov
sub
adc
hlt
or
popf
out
je
test
adc
sub
push
out
xchg
inc
jno
push
jecxz
stos
dec
aaa
jno
fists
movsb
int
sbb
sub
mulb
icebp
push
sbb
stc
jne
ja
jle
push
js
mov
push
sbb
push
int
jp
sti
or
fmulp
cmp
les
fwait
movsl
xor
lods
sub
test
xchg
je
sub
cmp
movswl
jne
stc
aam
sub
shl
pop
iret
cmp
inc
mov
popa
stos
jecxz
icebp
xchg
cmp
lcall
movsb
ss
lahf
mov
adc
adc
add
and
cld
xchg
pop
sbb
lret
pop
xchg
jge
cmp
or
pminub
xor
cmpsb
pop
test
mov
add
out
xor
ror
or
sub
dec
sahf
ret
mov
loopne
sahf
in
pushf
test
jge
rolb
sub
out
enter
sub
call
adc
outsl
or
mov
xchg
pop
mov
push
add
jo
ljmp
stos
cli
xchg
in
adc
je
repz
int
lods
jle
rcl
lret
sbb
pop
lods
ds
adc
dec
js
cmpsb
int
xchg
es
mov
stos
or
in
dec
popa
xchg
jp
je
adc
imul
pop
out
std
in
and
jmp
outsl
jnp
inc
inc
ret
mov
les
and
dec
dec
fbstp
test
cwtl
sbb
jg
push
adc
repz
test
aas
dec
dec
push
push
mov
enter
lret
repz
push
xchg
and
outsl
lods
jl
mov
xor
mov
pushf
sti
sbb
jb
or
repnz
mov
shll
adc
pop
flds
mov
push
jae
mov
rolb
mov
jnp
xchg
inc
or
shl
dec
pop
mov
inc
movswl
jge
movb
adc
xchg
sbb
scas
les
add
sbbb
int
dec
dec
arpl
into
and
icebp
push
jge
mov
mov
sub
lret
outsl
mov
stc
incb
jmp
inc
mov
inc
xchg
mov
push
sub
dec
lock
or
or
cmc
nop
or
mov
scas
sahf
fstpl
stos
out
jae
jne
mov
and
xchg
stc
cmpsl
iret
mov
ljmp
ret
test
nop
cmpsb
shlb
sub
lea
sub
cmc
icebp
cmpsl
cmp
imulb
std
das
nop
xor
aas
out
mov
insl
mov
pop
aad
lods
pop
insb
mov
jns
jns
outsb
cmpsl
sbb
cmp
cmpl
xchg
xor
mov
movsl
gs
pop
or
je
mov
adc
into
gs
dec
cmp
jecxz
or
jno
clc
dec
incb
aad
lds
insb
push
push
mov
jnp
inc
rorb
xor
and
mov
mov
jl
xor
movsb
xchg
fs
dec
mov
pop
rcrb
loop
cmp
mov
pop
pop
push
push
xchg
adcb
mov
mov
cmpsb
jecxz
shlb
sub
loope
mov
push
outsl
add
aad
or
or
dec
lock
movsl
and
sub
add
mov
scas
js
or
mov
sub
out
cmpsl
pushf
push
in
faddl
or
jg
outsb
cmp
sbb
mov
dec
out
nop
sbb
ret
stc
div
in
adc
sub
shrb
or
dec
cmp
nop
repz
jns
xchg
lock
or
mov
push
fs
mov
and
loopne
outsl
mov
out
scas
cmp
mov
rcrb
imul
add
nop
or
sar
lret
adc
mov
popf
adc
or
xchg
in
mov
push
out
out
sbb
jge
lds
icebp
js
dec
xchg
jle
jmp
sbb
add
leave
sub
in
fildll
ret
sub
push
xchg
pop
adc
nop
jns
icebp
and
jle
push
inc
jbe
inc
outsb
insb
xchg
les
cwtl
insb
ret
pop
xchg
and
outsb
push
xchg
sbb
dec
sub
push
adc
cmp
jmp
outsb
sbbl
cwtl
push
and
inc
js
stc
dec
into
shl
and
sbb
lea
lcall
mov
jg
aas
and
jne
add
iret
cld
fisttps
inc
hlt
out
pop
jle
inc
mov
dec
pop
pop
inc
dec
mov
cli
mov
mov
insb
sub
xchg
jo
pop
xchg
in
or
cmp
loop
and
shlb
imul
jecxz
ss
xchg
inc
ret
jae
dec
mov
mov
cld
pushf
cli
adc
call
es
fcomps
decb
dec
sbb
mov
daa
arpl
mov
push
xchg
mov
xchg
fstl
and
dec
sbb
cmpsl
adc
sahf
xor
push
inc
loope
lahf
jo
push
adc
xchg
scas
aaa
cmp
stc
xchg
push
pop
lahf
sub
adc
fs
outsl
xor
sub
xchg
sbb
iret
push
sbb
andb
mov
sub
lods
mov
movsl
int
inc
pop
inc
js
xor
jmp
cwtl
ds
clc
inc
xchg
jo
ret
ss
shlb
push
je
lcall
rep
clc
pop
prefetchw
mov
jg
sub
mov
adc
out
mov
pushf
or
stos
jns
xlat
stos
filds
stos
jno
jno
pop
leave
mov
push
jecxz
stos
adc
fucomip
je
push
jp
loope,pn
ja
mov
xlat
cmp
mov
or
nop
jle
pop
js
insl
pop
inc
rorb
test
or
mov
mov
push
cwtl
addr16
mov
outsb
inc
mov
or
rcrl
pop
lret
and
xor
pop
add
scas
dec
pop
mov
xchg
pop
inc
rolb
test
add
aad
and
inc
sub
aam
mov
jmp
add
in
inc
sbb
mov
inc
sbb
push
mov
pop
xchg
jo
or
jo
jl
jns
sbb
adc
jnp
pop
cmp
sbb
pop
enter
jp
xchg
fdivl
jbe
mov
jns
cwtl
mov
push
adcl
cmp
loopne
pop
repz
fistps
jge
xor
inc
addr16
loopne
call
nopl
push
lret
js
in
call
hlt
jo
divl
mov
aas
cltd
stos
cmp
add
push
dec
jp
inc
rcrl
popw
shr
add
fdivl
dec
sub
ds
jae
xchg
cmp
xor
out
inc
cmp
or
cmpsb
adc
xadd
push
fsubl
sub
sbb
in
cs
sahf
dec
pop
or
dec
stc
and
cmpsl
out
and
and
cld
sbb
scas
mov
inc
or
mov
cmp
xor
adc
mov
dec
emms
ljmp
cmp
into
cli
push
xor
sbb
mov
ret
cmp
scas
mov
cwtl
aas
xchg
out
and
mov
and
or
ret
jbe
jno
adc
scas
mov
sub
in
xchg
mov
repz
mov
xchg
dec
fidivrs
xor
pushf
dec
clc
push
cwtl
idivb
and
add
or
ret
fistps
sti
addb
pusha
out
adc
icebp
int
push
lds
shl
or
aas
push
dec
pop
or
stc
and
stos
jb
test
sub
in
fwait
hlt
jbe
inc
dec
jne
ret
imul
clc
lods
pop
fucom
testl
sahf
nop
sub
jl
nop
cmpsl
mov
cmp
cmc
shlb
addr16
mov
cmpsb
imul
cmc
xchg
adc
add
push
or
inc
movsb
shrl
sub
mov
popf
xchg
xor
dec
test
inc
and
out
insb
sub
popf
aam
xorl
in
imulb
push
jmp
adcl
add
sbb
or
push
in
mov
out
sbb
inc
insl
sbbl
and
cld
in
and
imul
insl
push
movsl
add
out
jno
jb
test
js
out
mov
sub
or
in
mov
out
and
fstps
pop
jae
das
sub
sti
sbb
addr16
cld
or
ret
adcb
inc
mov
fwait
adc
int
xor
test
fidivs
out
or
jne
xor
or
inc
les
das
popf
mov
cmp
test
out
inc
jbe
lods
fsubr
xor
std
and
mov
pop
mov
xchg
iret
pop
jl
stc
jmp
imul
popf
pop
add
lcall
or
xchg
outsb
sahf
arpl
add
sub
lcall
int
jne
sub
flds
cmp
pusha
adc
call
push
add
cmpsl
mov
jb
out
into
femms
leave
daa
out
pop
xor
mov
aad
adc
jmp
rcrl
call
pushf
ret
push
xchg
pop
repz
jle
add
xor
pushf
leave
aas
adc
into
scas
js
test
push
test
mov
or
enter
and
out
mov
incl
xor
les
outsl
inc
insl
icebp
int
mov
push
xor
mov
loope
xchg
cmpsb
xor
jns
dec
gs
pushf
enter
adc
mov
out
or
roll
inc
out
or
test
mov
fildl
ror
in
mov
pop
hlt
cmpsl
andl
popa
xor
repz
test
xchg
das
mov
xchg
aad
scas
cmp
mov
jno
or
icebp
cmc
xchg
push
and
adc
icebp
ja
repnz
inc
fiadds
pop
sarl
xor
pop
shlb
sbb
adc
xchg
call
divb
shr
fwait
clc
test
adc
mul
jae
and
scas
stc
mov
cmp
xchg
mov
lret
popa
sub
or
bswap
mov
jo
dec
sahf
sub
dec
hlt
push
mov
add
daa
adc
std
loopne
mov
das
stos
leave
dec
sbb
jns
shrb
stos
leave
jle
and
xchg
sub
or
pop
stc
stos
dec
inc
sbb
fcoml
jo
xchg
and
xchg
and
lock
mov
es
add
jge
loopne
inc
popa
ja
in
lock
lock
fsubrl
out
cmpsl
fisubs
lahf
dec
lahf
imul
inc
mov
dec
les
xor
insb
cmp
lret
jno
add
imul
scas
cld
or
mov
push
loopne
std
cltd
aaa
xchg
aad
lock
fcompl
sti
adc
jmp
sar
mov
mov
jmp
dec
out
mov
xchg
pop
dec
sahf
sbb
scas
sbb
fistpl
fidivrl
and
mov
fildl
loopne
push
aaa
inc
jne
mov
ss
in
in
lods
add
pop
clc
rcrb
push
jecxz
fimull
xlat
xor
mov
add
scas
imul
int
pop
psubusb
test
fidivrs
mov
rcll
mov
fdivrl
test
add
adc
in
and
jne
popa
hlt
pusha
xchg
clc
dec
sub
adc
sub
loop
mov
inc
aas
or
testb
inc
and
mov
or
dec
loop
xchg
and
dec
pop
mov
mov
inc
aas
mov
mov
lcall
clc
scas
hlt
sbb
in
movsl
aas
mov
cmp
imul
push
imul
mov
mov
push
or
and
xor
out
jge
jecxz
stos
jne
inc
gs
je
pop
push
pop
sbb
mov
enter
push
ret
push
cmp
movsb
mov
addr16
xchg
jne
cs
or
sub
adc
xor
fs
int
ret
sbb
mov
popf
xchg
inc
and
test
dec
js
mov
jae
jnp
mov
faddl
jae
pop
ljmp
js
lods
ljmp
loop
and
jne
ficoms
dec
ret
outsb
scas
pop
cmp
push
pop
inc
cmpsl
fs
out
sub
or
jmp
lods
xor
rcll
mov
pushf
test
in
or
icebp
inc
inc
inc
ds
es
add
mov
cmp
clc
repnz
inc
mov
mov
jnp
xchg
fldenv
sbb
outsb
mov
stos
nop
outsl
inc
and
cwtl
sub
cmp
ret
push
adc
dec
icebp
cmp
aas
adc
lock
adc
sbbl
sti
ret
loopne
sbb
sahf
inc
adc
in
mov
sti
adc
insl
xor
adc
loop
gs
shrl
movsb
popf
out
mov
sub
jle
adc
adc
push
xor
pop
push
cli
mov
movsb
in
inc
xor
and
in
std
fcomps
push
bound
sub
mov
es
and
pop
pop
adc
cltd
mov
in
push
pusha
or
mov
mov
cmpsb
test
leave
rolb
fucomi
xor
stc
jns
out
les
push
ret
ss
aam
jmp
pop
xchg
ds
pop
jg
ljmp
shlb
leave
test
sarl
cmp
movsl
mov
and
cltd
pop
test
in
pop
shr
or
or
and
je
clc
mov
inc
pop
imul
jo
sbb
add
fistps
xor
cmp
fldcw
cwtl
aaa
scas
in
adc
or
stos
outsl
mov
pop
fucomip
fcomi
lahf
xchg
stos
jmp
mov
jae
out
pop
mov
arpl
dec
imulb
mov
int3
xchg
ret
cmp
sub
iret
mov
jb
cld
lds
lcall
aas
add
inc
jmp
lds
or
cmp
or
jl
sub
in
mov
mov
seta
lret
and
mov
jno
sbb
jl
fwait
mov
imul
orb
ret
cs
inc
cmp
adc
cmp
call
jp
outsb
and
xchg
fs
out
xchg
adc
xchg
shll
and
push
aas
and
mov
xor
mov
pusha
pop
or
adc
outsl
xor
or
mov
push
adc
stos
mov
inc
adc
pop
fucomip
cmpsb
cli
pop
dec
lcall
dec
xchg
xchg
lea
in
mov
pushl
stos
push
into
sbb
mov
pushf
jo
mov
data16
decl
imul
adc
test
imul
sbb
add
jecxz
lds
or
jne
mov
mov
lcall
andpd
sbb
xchg
and
and
andb
pusha
xchg
lds
inc
dec
mov
fnstenv
jne
imul
in
ja
sub
ljmp
mov
push
jp,pn
jae
jg
adc
rorl
push
je
or
cmpsl
js
and
fs
mov
cmp
fnstenv
stc
jne
imul
or
pop
mov
imul
sahf
dec
xchg
scas
mov
lret
js
dec
js
out
popf
cmpsb
movsb
mov
stc
dec
stc
fisttps
pop
ss
mov
test
jae
or
mov
pop
jge
enter
jle,pn
cwtl
sbb
enter
outsl
mov
pop
in
ret
jle
cmpsl
add
push
sbb
outsb
pop
adc
out
scas
and
stc
sbb
test
insl
popf
dec
pop
ror
and
jb
testl
add
dec
xchg
pop
push
and
addl
lods
dec
or
and
and
insb
lahf
stos
push
popf
shlb
ja
repz
push
shll
in
loop
sahf
jo
add
cmp
adc
add
cmpsb
js
inc
push
adc
push
in
push
xchg
aad
rcrb
imul
mov
packsswb
addr16
jne
testb
jne
fcomps
sub
mov
std
mov
das
or
shll
mov
sbb
fadd
in
pop
int
je
sbb
or
xchg
es
xor
or
push
fisubrs
test
repnz
sbb
js
out
clc
popf
inc
fs
popf
aaa
jae
movsl
mov
sarl
mov
sarl
push
movsb
jnp
shl
inc
cld
int3
cmpsb
inc
adc
stos
aad
lods
jnp
lock
sub
repz
adc
dec
or
and
loopne
sub
xchg
dec
dec
jp
push
out
movsl
cwtl
fdivl
mov
scas
call
mov
dec
mov
dec
jno
notb
mov
sbb
xchg
xlat
cld
add
mov
mov
mov
inc
mov
jo
lods
sub
push
jns
add
test
scas
fstpl
xchg
pop
inc
popl
inc
push
popf
imul
inc
xchg
sub
daa
adc
and
push
sahf
and
fnstcw
inc
jae
push
dec
mov
ja
dec
in
jmp
gs
shlb
shl
cmpsb
xorb
out
xchg
jge
scas
fisubrs
cmc
push
inc
mov
test
ret
jns
push
sbb
adc
add
ret
jecxz
fwait
mov
pop
pushf
and
ljmp
mov
sub
cmpsl
dec
dec
imul
out
dec
mov
cs
add
xchg
push
cmp
aad
adc
xor
lods
mov
mov
mov
ss
cmp
jns
push
sbb
cmp
add
insl
xchg
pop
sub
mov
pop
or
test
pusha
enter
sub
pop
sbb
push
xchg
fistl
lcall
add
enter
insl
das
or
stc
lret
sub
inc
jg
test
mov
push
imul
mov
int
push
imul
imul
inc
mov
fisubs
js
inc
lcall
lahf
add
jbe
mov
jo
mov
orb
fwait
enter
daa
insb
icebp
sbb
pop
aam
xor
lods
and
push
filds
cmpsl
pop
mov
push
in
push
repz
xchg
rclb
or
lock
add
andl
dec
jae
mov
cmp
hlt
cltd
repz
mov
adc
xor
ds
loope
fisubl
cli
dec
je
in
in
fcmovb
nop
sub
lret
sub
mov
pushf
dec
repnz
ljmp
jnp
add
or
das
test
xchg
mov
scas
mov
cwtl
mov
imul
inc
nop
in
adc
adc
sbb
cmp
mov
shrl
mov
into
xchg
mov
mov
jg
or
or
rcrb
mov
ljmp
jno
mov
icebp
jo
jmp
mov
inc
outsb
roll
mov
in
fnsave
add
push
xchg
out
pop
fdivl
and
push
ja
push
jnp
jle
into
mov
xchg
es
push
je
xor
push
cmp
fbstp
movsb
sahf
es
pop
dec
loope
inc
aaa
pop
cld
cmp
mov
out
push
mov
sbb
jecxz
sub
push
cmp
in
cltd
cltd
or
lods
inc
add
aam
mov
hlt
jg
mov
adc
pop
lahf
sbb
sbb
mov
sub
sahf
pop
test
dec
add
std
push
xchg
popf
push
adc
aas
gs
and
inc
mov
loopne
jne
mov
mov
adc
inc
out
repz
mov
stc
cmp
sbb
pop
icebp
fistps
leave
add
or
cmp
jp
jnp
and
roll
push
pop
push
int
lods
pop
into
leave
cltd
sbb
test
and
push
test
repnz
jne
pop
repz
inc
stos
rcrl
mov
shlb
lods
mov
add
roll
lds
repz
dec
mov
add
data16
repz
enter
cmpsb
call
mov
cmc
les
mov
sbbb
pop
sbb
push
aaa
adc
jne
lock
mov
or
mov
or
fnop
aas
ss
push
out
mov
mov
push
repz
mov
inc
les
scas
jnp
mov
mov
outsl
push
xchg
mov
mov
lret
adc
aam
push
jns
lods
cmp
mov
push
hlt
out
ret
adc
or
hlt
shll
xor
into
aaa
cmp
inc
cmp
push
fstpt
cltd
daa
or
dec
mov
push
repnz
push
and
cmp
dec
dec
push
addr16
sbb
cwtl
xor
leave
clc
pop
mov
fstpl
pcmpgtw
cmpsb
mov
dec
ror
scas
sbb
xchg
stos
aam
outsl
cmp
insb
dec
add
frstor
mov
mov
lock
and
jne
jmp
scas
in
cmp
pop
repz
lds
push
jae
sub
jne
imul
push
outsb
sbb
imul
test
pop
dec
adc
push
rorb
ds
xchg
and
dec
fistl
pop
mov
hlt
jne
fisubl
fucomp
je
jae
jae
or
jg
cmp
sbb
stos
ja
mov
sbb
xchg
sub
sub
cmp
jbe
ds
jae
loopne
fistpll
mov
jbe
push
int3
lock
shrl
outsb
rcr
dec
stos
dec
pop
fwait
in
sub
js
xlat
push
enter
addr16
and
inc
out
lcall
dec
rolb
das
jo
ret
and
cmp
jge
and
mov
in
outsb
ljmp
xor
and
jg
mov
inc
xchg
stc
pop
jp
scas
in
sub
fucomip
jg
push
pop
scas
push
jp,pn
enter
xchg
add
lods
sahf
orl
scas
or
sarb
jns
repz
xchg
stos
push
dec
jg
mov
mov
stc
lods
mov
mov
add
mov
dec
jae
pop
xor
ss
ficompl
shll
jg
cmc
inc
mov
xor
enter
jae
aaa
jp
and
cwtl
lcall
frstor
int3
and
lods
int3
mov
mov
xor
adc
test
sahf
sbbb
call
out
out
ss
cli
outsb
dec
jmp
insl
push
mov
inc
sub
mov
lock
inc
xchg
xchg
lods
loope
repz
xchg
in
lods
or
insl
repnz
sahf
int
out
imul
fnstenv
out
aam
aad
int
or
cmp
xor
add
jno
jnp
mov
mov
lcall
insb
bound
fwait
adc
mov
popa
cltd
jmp
mov
add
push
aad
jle
sbb
sbb
dec
jnp
push
jl
and
xchg
xchg
aas
out
notb
je
arpl
xor
pop
cld
mov
sub
cs
cli
cmc
hlt
or
fwait
mov
push
sub
jne
xlat
inc
pusha
xor
sub
insl
in
insl
jmp
lret
pusha
push
pop
ljmp
std
xor
add
test
xor
clc
lret
adc
out
lret
test
loopne
jbe
push
rol
dec
shl
sub
popf
pusha
ds
fsubrs
out
mov
out
add
out
lret
dec
push
or
pop
popf
test
adc
jnp
hlt
sbb
jno
xchg
arpl
dec
or
arpl
xor
iret
mov
push
jno
push
cmp
mov
lret
push
xchg
fwait
aam
cmpsb
fcoms
or
pop
jnp
xchg
sbb
mov
es
rcll
leave
stc
adcl
popf
xor
les
rcr
insb
cmp
inc
aam
pop
add
mov
cmpb
jae
adc
and
push
cld
push
in
lods
mov
lock
mov
movsb
fwait
lcall
adc
pop
ret
pop
lahf
sub
in
cmp
or
inc
sti
cmpsl
cwtl
or
aas
mov
lds
xchg
imulb
push
cmpsb
cmpsb
mov
loope
aad
in
xchg
and
xchg
sbb
fldcw
call
fstpt
rorl
sub
pusha
mov
imul
xchg
out
or
inc
jp
or
cli
arpl
mov
pop
lods
in
dec
mov
icebp
sar
push
push
jnp
mov
neg
mov
sbb
stos
fsub
ss
xor
ds
dec
or
inc
inc
push
pop
daa
lret
iret
mov
nop
shl
fdivs
in
xchg
insb
bound
jge
xor
pop
jecxz
mov
aad
xchg
daa
add
sub
pop
pusha
xor
pop
add
pop
pop
loope
outsb
mov
dec
adc
mov
pop
dec
dec
push
lgs
mov
xlat
aam
gs
sbb
test
xchg
sarb
in
jnp
out
insl
mov
insb
dec
xor
fcomp
lea
mov
popf
icebp
push
out
add
or
mov
pop
cmc
xchg
xor
xor
lahf
push
ljmp
cmp
aas
add
sti
test
adc
push
or
mov
out
call
aad
or
sub
sub
add
sub
aas
xchg
fs
test
out
pop
inc
adc
adc
jmp
fnsave
adc
xchg
mov
outsb
fists
mov
loop
pop
nop
inc
xchg
outsl
cwtl
sbb
lods
inc
lods
clc
ljmp
push
hlt
mov
cmp
lret
jo
dec
loopne
mov
lea
call
inc
cmp
pop
or
xchg
or
in
ret
pop
mov
dec
int
xchg
fs
imul
fwait
mov
jle
dec
out
lahf
iret
imull
and
mov
sub
insb
dec
inc
in
jae
or
fstp
or
sub
movsl
pop
sarl
mov
dec
jnp
jmp
lret
or
and
push
mov
aas
stos
test
rcr
jmp
arpl
mov
mov
pop
lret
or
sti
lea
sub
shll
and
rcrl
jo
fucomip
add
jno
xchg
adc
mov
cmp
jns
pop
jb
mov
pop
jle
bound
adc
mov
mov
jp
scas
pop
cmc
retw
daa
int3
jp
outsl
je
push
aas
addr16
pop
lahf
cmp
dec
xor
cmpsb
orb
dec
aaa
lea
cmc
in
ja
xor
cmpb
mov
nop
jbe
lcall
and
dec
add
test
mov
push
push
cmp
ficoml
xor
repnz
sub
ret
pop
mov
outsl
adc
mov
scas
push
outsb
inc
into
xor
fdivrs
sahf
pop
inc
outsb
jle
sbb
push
shrl
jg
bnd
pop
mov
sub
xchg
add
dec
maxps
cltd
mov
repz
ljmp
or
imul
ljmp
inc
add
sbb
pop
push
mov
dec
jmp
sbb
xchg
push
es
sub
cmp
sti
push
inc
jmp
mov
shrb
loope
test
movsl
ds
repnz
lcall
ret
loope
push
mov
mov
cmp
push
scas
or
cmp
inc
cwtl
mov
xor
inc
mov
and
cmp
sbb
stos
fdivrs
inc
int
in
mov
add
xchg
pop
lods
rcl
in
push
movswl
push
pop
jmp
pop
mov
nop
push
test
fistl
bound
and
sbb
notl
ret
mov
xchg
jge
push
cmp
mov
pop
mulb
ror
dec
sub
cmpsb
fdivrs
jmp
fsubp
popf
xchg
pop
mov
enter
push
loop
sub
stc
ss
pop
mov
mov
cmpsl
dec
call
fisttpl
lds
mov
push
ret
leave
aas
rol
add
nop
fidivl
repnz
aas
adc
inc
mov
mov
ljmp
pop
adc
sub
jp
sbb
pop
icebp
aad
fldcw
and
mov
mov
mov
lea
negb
jae
es
iret
mov
in
cmp
add
mov
stos
clc
jmp
mov
pop
cwtl
pop
rol
or
xchg
adc
inc
add
add
xor
pop
popa
mov
sbb
fldenv
stc
scas
push
pop
movsl
adc
nop
pop
jge
sbb
in
gs
shlb
inc
out
inc
mov
cltd
aaa
sbb
popa
aas
shll
or
or
xor
mov
push
fisubl
dec
mov
or
push
adc
std
push
jp
sub
cmp
and
xchg
fistps
movsl
cltd
test
stos
cmpsb
inc
jmp
sub
bound
xchg
inc
push
inc
hlt
xchg
jmp
loope
out
ret
pop
sub
das
bound
into
andl
int
push
sub
pop
out
test
enter
std
jle
pop
xor
sub
and
dec
cmc
repz
je
jg
jmp
jg
jg
cmp
insl
out
stos
out
push
fsubl
push
scas
pop
imul
icebp
daa
fs
sarb
mov
mov
add
stos
std
and
ret
jle
jns
add
in
call
insb
je
movsb
mov
pop
je
je
xchg
push
pop
mov
xchg
stc
test
sub
ss
dec
or
insl
divl
sti
pop
test
mov
xchg
mov
push
cmp
ljmp
lcall
js
and
dec
jmp
and
xor
mov
adc
xchg
mov
dec
jg
inc
fiadds
je
mov
inc
pop
fcomi
test
xor
test
dec
cmp
cli
mov
inc
data16
nop
movsl
adcb
xor
jnp,pt
filds
lds
fstl
pushf
shll
test
push
fs
mov
leave
xchg
dec
cmpsl
add
stos
lea
gs
or
fdivrs
mov
sub
dec
sub
push
sbb
xor
xor
test
mov
jbe
add
sbb
mov
mov
icebp
xchg
or
dec
lods
sub
outsb
or
pop
nop
xchg
cmpb
mov
pop
nop
jno
and
inc
push
push
inc
xchg
dec
negb
mov
arpl
cmpsl
cmp
jl
es
int
shll
repz
popf
lds
aam
push
xor
inc
pop
mov
xlat
jmp
and
stos
add
mov
dec
sbb
xchg
and
add
xor
xor
mov
lcall
mov
loop
mov
jge
mov
xchg
in
fadd
xchg
inc
je
test
aad
rcrl
and
ret
cld
inc
ja
jmp
cmp
xacquire
jg
loop
addr16
stc
into
in
loope
stos
sub
out
int
mov
pop
repz
out
movsb
or
xchg
dec
les
jbe
lcall
adc
adcb
bound
jne
out
popa
fnstenv
push
xchg
iret
scas
leave
sub
jne
lods
jo
aad
sbb
mov
addl
lds
push
shll
fdivp
ja
repnz
dec
lret
jae
or
cmpsb
daa
popa
int
fs
adc
test
mov
in
mov
sub
fs
cld
pop
pop
mov
jmp
cli
dec
sub
movsb
mov
insl
adc
push
sub
int
hlt
call
sbb
adc
push
ret
scas
lea
and
imul
cli
jae
stos
rcll
cmp
pop
stc
clc
adc
inc
in
push
les
pop
rcll
add
and
lret
hlt
fldt
popa
aas
fwait
mov
les
inc
and
and
jo
mov
and
cld
out
fldenv
insb
xor
std
and
jnp
lods
cmp
movsb
cltd
mov
sub
cld
cs
ret
mov
imul
outsl
arpl
repnz
adc
movsb
lcall
mov
cmp
push
out
insl
aaa
add
das
adc
test
mov
stos
bound
ficompl
or
setle
add
and
inc
inc
push
xchg
mov
nop
into
xchg
and
sub
push
filds
andb
or
push
int3
inc
xchg
data16
hlt
js
xchg
loop
or
push
js
das
pop
fiadds
les
xor
jae
add
rorb
dec
adc
xchg
add
fwait
scas
ja
ds
fisubl
and
mov
leave
fldcw
inc
or
push
mov
cmpb
or
and
mov
sub
inc
jle
out
cmp
and
mov
push
add
mov
inc
pop
jecxz
fidivl
ljmp
ds
inc
fdivrs
adc
fnstcw
je
fs
or
insb
and
jp
bound
in
sbb
xor
pushf
pushaw
dec
mov
into
dec
out
aaa
inc
test
cmp
test
fmull
and
das
mov
mov
or
ds
cmc
cld
and
xchg
jo
jg
jne
push
ds
nop
mov
cs
xchg
inc
jo
mov
sbb
imul
lods
and
popaw
mov
ret
adc
fdivs
sub
loopne
out
scas
paddsw
cmpb
adc
and
add
xor
pop
adc
push
int
shl
push
push
pop
inc
ret
jl
adc
lea
xor
push
shrb
jbe
xor
jbe
into
js
int
pop
add
and
and
xchg
std
lcall
into
insb
adc
mov
jl
mov
scas
stos
int3
popf
icebp
ds
pop
sbb
pop
data16
popf
dec
into
xor
pop
sahf
or
icebp
cmp
xor
movsl
cmp
xchg
negb
mov
pop
lock
jl
iret
arpl
jmp
jge
lods
push
jns
mov
sbb
cmpsl
pop
xchg
lods
movsl
inc
pop
jns
rcll
hlt
jge
cs
fdivl
jno
out
repnz
arpl
push
aam
mov
add
inc
cmp
pop
mov
push
lods
pop
in
push
test
mov
or
pop
pop
test
push
out
in
push
or
movsl
aas
dec
enter
clc
sub
pop
sti
mov
popa
mov
jae
add
fmull
sub
mov
xchg
add
mov
mov
cs
push
pop
dec
loop
movsb
sbb
sarl
jmp
incl
ficomps
out
adc
rol
bound
jbe
cmp
loope
enter
add
loope
or
out
push
cs
adc
iret
xlat
xor
mov
push
jp
adc
mulb
sbb
ss
flds
lret
into
pop
sub
and
icebp
mov
rorb
stc
or
subb
and
imul
fidivs
fistpl
dec
mov
pushf
jmp
add
movsl
cmp
cli
and
inc
cmp
fstl
mov
mov
push
dec
shrb
jo
mov
xor
and
inc
jp
jecxz
add
mov
adc
jmp
fsubr
push
int3
clc
cli
repnz
fdivrs
mov
daa
ja
pop
xor
test
xor
inc
push
jbe
sub
xchg
daa
sub
in
out
jp
das
mov
jbe
loop
fimull
inc
push
lret
jl
movsl
adc
pushf
mov
mov
notl
or
lods
adc
movsb
sbb
cmp
out
dec
std
or
push
dec
xchg
pop
mov
std
movsl
sti
fisubrl
test
cwtl
movsb
and
jge
lret
jne
add
sub
flds
cmc
lcall
scas
xchg
inc
icebp
sarb
fsub
inc
and
or
jo
push
out
add
mov
mov
jp
jne
int
test
scas
push
push
dec
and
sub
jb
push
clc
add
xchg
sbb
les
int3
lahf
sub
mov
add
add
jle
xlat
lods
out
subl
add
inc
mov
push
test
xchg
jbe
jmp
mov
stos
cmp
test
imul
push
push
icebp
sub
or
jg
int3
aas
adc
out
leave
jnp
push
daa
xchg
gs
xor
push
dec
lods
loope
sarb
mov
pop
sbb
dec
adc
or
mov
mov
out
pop
jnp
shll
push
fdivr
pusha
mov
sub
mov
push
push
aaa
sarb
or
mov
sbb
mov
jg
imul
fwait
andb
xor
cmpsb
loope
mov
dec
fs
sbb
mov
aad
dec
mov
cmp
or
dec
or
inc
sbb
add
jno
xchg
adc
push
mov
nop
sub
xor
fs
jbe
fcmovu
aad
add
aas
std
fs
sbbb
mov
rcrl
scas
dec
pop
test
pop
push
and
fistpll
dec
ret
xchg
or
inc
ljmp
push
mov
arpl
jcxz
push
pcmpgtb
outsb
daa
dec
loope
mov
test
xchg
push
popf
fwait
cmp
repz
xchg
mov
mov
mov
pop
and
imul
int
add
mov
lea
shll
ret
loope
aam
sub
es
out
hlt
clc
mov
xchg
jo
push
and
sbb
mov
cmp
jbe
out
xlat
and
sub
stos
aad
arpl
sarb
ficoml
addr16
pop
notb
jmp
aas
movsb
sbb
xchg
cmp
sub
pop
mov
mov
ljmp
pop
insl
je
in
rclb
sbb
add
mov
sub
push
std
das
jg
xor
aaa
fisttpll
dec
jnp
shr
mov
mov
in
idivb
jne
xor
outsb
aaa
test
adc
cwtl
jne
and
pop
rolb
pop
lcall
push
sti
xchg
adc
movsl
jne
jbe
incl
test
pop
sbb
xchg
imul
inc
inc
ret
pop
adc
xchg
xchg
fiadds
jge
neg
dec
je
jne
add
fbstp
sub
adc
bound
test
push
xchg
jl
bound
jle
cmp
and
xchg
jb
push
cmp
je
lret
mov
cli
and
and
in
pop
movsb
jns
test
pop
addb
lock
xlat
pop
fsubrs
insl
pop
subb
xchg
cli
adc
mov
and
call
xor
cmc
pop
and
popf
jo
dec
xchg
insl
data16
std
in
add
adc
popa
xor
int3
ret
cmc
mov
mov
jp
fmuls
in
faddl
mov
incb
push
jg
inc
jnp
pusha
lds
dec
in
shrl
mov
int3
data16
push
dec
movsb
mov
ret
sub
adc
or
ldmxcsr
addb
mov
lahf
dec
add
stos
mov
and
fcoms
popf
popf
mov
insb
ljmp
adc
xchg
cs
cmpsl
mov
imul
shll
push
loopne
inc
xchg
sbb
decl
push
out
mov
jg
sbb
add
je
jo
jl
pop
xchg
jnp
cmp
xchg
dec
push
inc
sar
int
ret
pop
pop
jns
or
cltd
push
ja
cmc
int
jb
inc
js
into
data16
mov
and
mov
pop
xchg
inc
sbb
stc
loopne
xor
add
cli
into
xorb
leave
pop
ja
rclw
js
cwtl
sar
inc
movsb
or
or
loopne
push
mov
mov
xlat
stos
inc
out
dec
lds
cmpsl
xor
and
pushf
rcr
mov
fcomp
fistpl
cmpsb
mov
sarb
mov
rorb
or
mov
testb
mov
shll
mov
iret
fmuls
insl
int
jae
push
repnz
cmp
adc
hlt
pusha
lret
mov
push
cmpl
aad
mov
cmp
pop
outsl
mov
pop
mov
pusha
ljmp
push
pop
int
jno
xchg
inc
or
iret
dec
rorb
rorl
mov
je
mov
jns,pt
sub
cmp
imul
pusha
pop
pop
shr
sbb
or
cmp
mov
dec
jp
outsb
mov
push
push
roll
cmp
aaa
jg
xor
inc
ljmp
stos
out
lds
push
fsubl
fwait
dec
in
movsl
inc
or
out
and
clc
test
lds
mov
lock
scas
xchg
push
out
shlb
sbb
push
xchg
roll
and
out
insb
pop
jl
cmpsb
hlt
cli
xor
test
rcl
and
in
dec
xchg
mov
jmp
daa
imul
adc
pop
mov
mov
push
movsl
jae
out
push
imul
xor
and
cli
lods
inc
jbe
mov
sahf
lcall
jge
inc
or
test
sbb
movsb
push
icebp
and
rcl
out
mov
or
jno
fistps
iret
lock
mov
repnz
enter
push
jle
out
fwait
cltd
andl
xor
xor
ljmp
sbb
xlat
adc
out
lahf
repnz
jns
mov
mov
in
jl
push
push
popa
push
cld
sti
jns
push
in
je
fs
test
in
mov
sbb
add
insl
pop
sbb
inc
shl
stos
jg
lahf
add
je
and
cld
clc
outsb
mov
xchg
enter
sub
mov
pop
not
lret
sbb
mov
shl
dec
lahf
sub
jl
aad
adc
mov
push
fcmovnu
lds
mov
enter
movsb
dec
inc
dec
pop
sti
sbb
pushl
lock
fidivrs
jb
cltd
and
xchg
stos
sbb
pop
enter
push
push
aad
ja
pop
adc
cmp
inc
xor
jns
imul
aas
inc
je
and
cltd
push
inc
push
movsb
pop
mov
loopne
mov
push
lahf
aaa
fdivl
adc
repz
mov
xor
pop
mov
push
or
inc
lds
mov
rolb
or
jle
fdivrs
sbb
scas
sub
adc
mov
int3
push
mov
inc
and
cld
call
push
jge
fcmovb
xchg
or
mov
mov
mov
imul
mov
lds
inc
ret
lret
jne
mov
shll
push
pushf
imul
push
jb
xchg
jns
icebp
sub
cmp
xchg
push
dec
mov
addb
or
xor
clc
cmp
rorl
ss
and
call
dec
xlat
xchg
fsub
rep
daa
or
adc
cmp
and
dec
pop
dec
adc
pop
cwtl
xchg
pop
jae
add
call
jle
out
loop
sub
ljmp
sub
mov
iret
fildll
jns
sub
pop
sub
push
jbe
push
aad
jae
push
mov
adc
aam
in
ljmp
and
stos
dec
push
or
in
int
sub
sub
insb
jb
jo
dec
add
adc
jns
in
sub
push
fildl
dec
cwtl
mov
or
es
adc
loopne
sbb
sub
sub
hlt
test
jle
dec
dec
out
push
fstpl
or
test
dec
mov
and
push
idivl
mov
fimull
jno
sbb
add
inc
xchg
lcall
loope
or
inc
ja
dec
jp
insb
mov
dec
lret
mov
xor
jo
push
rol
lods
and
pop
inc
jmp
popf
cmp
mov
jmp
jmp
addr16
mov
and
xor
jp
ds
dec
call
push
or
mov
adc
push
jne
fldl
cwtl
outsb
rcl
jno
mov
rcrl
aad
push
cmp
jecxz
mov
xor
xor
sub
scas
hlt
fnsave
pop
in
xorl
mov
pop
push
mov
fwait
cmp
xor
clc
pop
lret
pop
push
push
cwtl
int
or
cmp
xchg
or
jnp
mov
shlb
imul
jnp
mov
fdivrs
jge
fnstsw
inc
addr16
inc
ret
cld
nop
add
dec
jmp
dec
pushf
jne
cmpsl
fnstsw
test
repz
ja
xorb
sbb
popl
arpl
add
lods
jle
pop
cmp
pop
sub
shrl
test
mov
js
cmp
test
fadds
dec
jns
pop
aaa
fs
dec
scas
jnp
out
sbb
fidivrs
and
cld
jmp
lret
ljmp
fisttpll
loope
daa
or
je
frstor
adc
jg
es
sbb
popa
in
sub
lret
sub
pop
sub
stc
or
sarb
loope
or
xor
fstps
and
pusha
lret
adc
rolb
sbb
sahf
mov
stc
mov
mov
pop
dec
xorb
jne
xlat
jp
int3
lret
movsb
xor
mov
and
cmpsl
push
jp
add
xor
xor
push
mov
push
fwait
jbe
add
cmp
inc
dec
scas
xchg
sub
mov
nop
push
movswl
pop
mov
rorl
xchg
sbb
mov
loopne
push
std
sbb
outsb
jg
gs
xor
out
clc
leave
mov
shlb
pop
filds
leave
xchg
test
das
dec
lret
adc
mov
test
es
insb
test
cmp
push
shl
jg
dec
arpl
mov
daa
xor
push
lock
pop
inc
stc
jmp
fucom
push
mov
cwtl
mov
and
mov
mov
jno
movsb
push
test
adc
cmc
mov
scas
in
arpl
fs
inc
mov
add
push
les
shl
mov
out
ffreep
add
xor
or
enter
aas
mov
xor
dec
scas
cmp
lcall
enter
les
jns
dec
push
out
into
call
pop
sub
subb
mov
mov
je
popa
out
and
mov
mov
jecxz
xor
dec
mov
adc
push
aad
stos
sub
xchg
lock
pop
and
imul
lea
lea
in
dec
fdivrl
jmp
pop
hlt
add
pop
push
fwait
jg
dec
sbb
or
loop
push
sub
negb
jne
and
cmp
inc
cmc
cmp
cmpsb
sub
repnz
cmp
sub
xor
test
mov
das
add
aad
movsl
xor
pop
cli
loop
inc
xor
pop
dec
inc
push
xchg
loopne
xor
cmp
lcall
sbb
and
sbb
dec
cmp
mov
xchg
jnp
or
mov
int
push
mov
push
mov
adc
mov
pop
pop
sti
insw
mov
sbb
inc
movl
subl
pushf
push
inc
insb
inc
adc
hlt
adc
test
inc
mov
sub
cmp
mov
push
testb
mov
add
add
test
cmp
rcrb
cli
ret
lods
sub
sarb
push
mov
and
pop
mov
mov
push
into
adc
adc
cmpl
cld
test
fistpl
outsl
testl
fildll
add
jbe
jecxz
cli
cmp
xchg
cli
pop
test
jg
das
push
cmp
xor
xchg
or
xor
mull
cmp
stc
inc
icebp
adc
mov
loope
test
ss
pop
mov
cmpsl
dec
xchg
scas
sbbb
out
aaa
mov
rorb
nop
movsl
adc
sbb
outsb
lret
jne
fiaddl
mov
in
push
push
push
int3
and
enter
mov
and
xor
adc
mov
lcall
or
sbb
loop
nop
dec
sti
jg
fadds
pop
imul
enter
movsb
pop
and
xorb
inc
adc
pop
inc
sub
xchg
dec
mov
adc
loopne
adc
pop
test
and
stc
cli
adc
ja
mov
push
test
sub
decb
or
lods
pop
xadd
jns
add
scas
and
enter
clc
nop
mov
dec
pushf
mov
cmp
popa
add
mov
and
sub
cltd
push
xor
dec
xchg
sub
pop
or
push
imul
ja
outsb
inc
fdivs
out
lcall
sbb
mov
lret
popl
fimull
dec
aam
imul
les
pop
mov
test
movsb
mov
sbb
sysenter
into
dec
mov
mov
dec
js
fistpll
cmp
add
xlat
push
adc
mov
push
jnp
add
push
and
mov
aad
ret
fisttpl
mov
call
out
pusha
jl
roll
fistpll
cmp
push
fs
fists
mov
jle
pop
sub
push
js
pop
hlt
cs
mov
cmp
cld
repz
pop
lcall
icebp
mov
arpl
sbb
sahf
mov
ss
xor
or
fs
int3
xlat
movsb
push
into
or
imul
lds
add
adc
repnz
scas
pop
jle
pushf
mov
mov
sahf
into
roll
pushf
cmp
xor
lods
inc
out
cmpsl
mov
orl
int
or
ss
fsts
pop
xchg
aam
in
fbstp
mov
fcmovnbe
in
cli
mov
int
cs
test
icebp
fdivl
mov
fistps
bsf
jge
cmpsb
pop
ret
lret
stc
test
inc
lcall
test
cmpsb
lods
xchg
xlat
mov
and
jne
out
pop
imul
cmp
in
jp
stc
sar
test
pop
mov
cmpsl
aaa
loop
inc
dec
mov
adc
rorb
out
or
in
xchg
fimull
insl
int
mov
in
inc
sahf
mov
rcll
pop
cmp
fdivrl
mov
or
cmp
push
bnd
dec
pop
dec
in
fiaddl
pusha
sti
outsb
fld
mov
xchg
sbbl
out
mov
popa
dec
mov
xor
and
xor
or
in
jl
and
xor
fildll
sub
roll
aaa
pop
insl
mov
inc
sahf
sub
pop
jg
inc
xchg
mov
mov
sub
es
push
dec
subb
lahf
icebp
testb
int3
or
lahf
jmp
sbb
add
cmp
jae
js
fxch
mov
gs
dec
stos
push
dec
add
imul
pop
mov
ja
scas
mov
bnd
mov
leave
add
fisubrl
movsl
fbld
adc
mov
lret
leave
loope
and
aam
xor
out
or
cmp
sti
cli
subb
sbb
fisttps
imul
fwait
stos
pushf
add
mov
sbb
xchg
call
lcall
or
pop
adc
bound
fisubl
bound
inc
icebp
outsl
rolb
or
cmp
clc
iret
sub
sti
jb
jo
idivb
sub
push
test
test
data16
shrb
lahf
xchg
cwtl
stc
stc
js
insl
xchg
in
cmpsl
add
fwait
stc
flds
or
push
push
int3
mov
mov
mov
test
in
or
mov
addl
jl
aad
and
push
add
adc
leave
inc
mov
cli
addr16
push
cld
xchg
rclb
loope
adcl
lock
xlat
faddl
outsb
and
scas
jns
jmp
out
or
xchg
adc
es
mov
ja
jne
cmp
filds
mov
sub
nop
xchg
push
xchg
pop
clc
mov
stos
call
jp
xchg
adc
or
imul
out
or
pop
push
pop
adc
hlt
sub
das
insl
mov
and
data16
mov
push
or
dec
out
xchg
jp
subl
add
stos
test
fisubrl
aaa
jbe
xchg
mov
or
lret
jb
loopne
cmpsl
lcall
loop
push
outsl
test
xor
loopne
insb
out
cmp
jo
sub
js
loope
or
sbb
fwait
push
scas
sbb
leave
xchg
pop
mov
mov
xchg
pop
inc
mov
dec
push
or
fsubrs
in
adc
mov
call
or
lahf
shlb
push
push
out
mov
push
mov
incb
xchg
fnsave
push
pop
gs
out
loope
pusha
mov
or
popf
mov
dec
ret
sub
clc
aad
sub
xchg
sub
push
xor
push
jno
jno
fld
popa
imulb
out
jb
orb
push
je
cli
inc
stc
push
lret
pop
out
adc
adc
je
enter
push
xchg
fwait
mov
push
lods
lcall
hlt
jo
or
ljmp
into
dec
mov
adc
jg
cld
xchg
pop
mov
cmpsl
mov
fsubr
shrb
enter
push
dec
fisubl
lea
cmp
rol
scas
popf
inc
cs
jb
enter
fdivrs
bound
jle
fildll
add
xlat
std
movb
add
aad
mov
es
fadd
sub
xlat
aaa
xchg
pop
mov
and
btc
and
or
call
adc
xchg
daa
fdivs
xchg
inc
pop
mov
les
push
stc
inc
pop
and
jnp
or
ret
inc
sub
lret
or
jns
stos
inc
push
push
rolb
filds
lret
pop
xor
mov
mov
mov
jo
jp
pop
jb
adc
aaa
insb
inc
mov
or
dec
mov
fcompl
add
shrb
data16
movsb
out
sbbl
test
push
or
mov
and
out
es
shl
xchg
xchg
push
fisubrl
jb
push
push
mov
inc
add
sbb
adc
push
cmp
and
lret
fmull
mov
push
ret
push
push
push
les
outsb
add
mov
mov
inc
push
fstpl
ret
daa
xor
ds
in
sub
dec
adc
es
mov
arpl
push
mov
jecxz
sub
repz
mov
xor
aas
cmp
and
incl
push
push
mov
and
div
cmpsl
arpl
add
add
bound
jb
and
nop
xor
sbb
push
mov
xor
icebp
xor
xchg
push
xor
popf
mov
in
test
mov
std
jl
or
add
mov
adc
fcmovnbe
js
pop
sbb
pop
push
dec
repnz
mov
test
leave
xchg
sbb
outsl
jmp
lahf
push
jnp
cs
pop
mov
sub
or
adc
sub
jne
fs
xor
pushf
push
out
dec
lods
mov
insb
mov
test
pop
lods
test
push
xchg
push
push
shrb
mov
sbb
pushf
cmpsb
movsb
movsl
daa
daa
lret
lods
jno
pop
dec
test
mov
sbb
pop
mov
mov
xor
dec
sub
fucom
xchg
sbb
std
sub
hlt
add
adc
shlb
dec
pop
and
mov
lods
jmp
idivb
fmuls
mov
popf
lcall
pop
and
inc
sub
and
sti
jge
enter
sub
jns
imul
xchg
pusha
mov
cmp
divl
and
js
and
mov
stos
and
pop
xchg
in
cmpsl
test
fs
out
lods
xor
push
std
shl
mov
jo
ds
mov
xchg
jne
push
in
jge
dec
leave
push
mov
aam
nop
popf
pusha
jge
data16
sar
cmp
arpl
aad
fnstsw
das
fwait
test
mov
inc
leave
dec
and
mov
jmp
cmpsl
lock
out
sub
out
pop
mov
popw
daa
mov
add
mov
ds
ljmp
rcll
cmpsb
jns
or
in
out
les
push
xchg
imul
xor
out
xchg
mov
xchg
dec
rolw
dec
repnz
cltd
cmp
shrl
insb
sbb
push
cmp
add
mov
jo
lret
or
or
mov
pop
push
push
adc
cmc
es
icebp
ljmp
adc
icebp
roll
mov
push
pop
jl
addr16
push
push
mov
dec
mov
cld
push
and
loopne
movsb
pop
or
jo
dec
inc
jno
jmp
pop
je
loope
sbb
jne
xchg
sub
mov
xor
fbstp
lds
lret
mov
loop
xor
adc
das
ss
gs
xor
cld
adc
xchg
inc
aas
sbb
xchg
std
mov
inc
ret
sub
pop
and
call
lahf
cmpsb
xchg
sbb
sbb
lods
sbbb
mov
or
fsubl
pop
xchg
sub
sub
inc
stc
in
insl
loopne
lret
sbb
mov
adc
sub
add
hlt
inc
xchg
in
rolb
push
xor
fs
data16
iret
push
fildll
subb
std
mov
mov
or
jnp
jl
pop
and
mov
imul
ljmp
jnp
cmc
cwtl
sub
push
jg
xchg
mov
mov
fcoml
outsl
nop
add
pop
inc
in
call
repnz
imul
les
mov
xchg
dec
dec
jge
pop
packssdw
or
xchg
jno
xchg
stc
push
jnp
shll
push
lods
and
loopne
pop
jno
jae
adc
pop
jp
call
mov
lds
loope
cmp
push
adc
sub
adc
mov
fildl
daa
xor
or
adc
or
or
loopne
sbb
jbe
out
sahf
add
mov
mov
xor
in
mov
ss
mov
cmpsl
xchg
mov
popf
adc
sbb
jle
add
sarb
das
test
into
push
shl
cmp
mov
lods
in
les
or
pop
mov
add
into
add
sub
lahf
stos
push
push
add
cmp
cmp
sub
imul
mov
imul
sbb
outsb
xor
jge
imul
sahf
adcl
jae
sbb
mov
sbb
cs
sbb
lret
lock
cmp
xor
cmp
leave
flds
jne
bound
hlt
xor
mov
mov
cmpl
les
jp
sub
cmp
or
aam
and
sbb
std
aaa
xchg
mov
daa
lcall
push
jns
pop
scas
ss
shlb
jg
negl
jno
inc
or
ja
xchg
fwait
in
es
jns
jnp
in
sbb
in
sbb
push
in
cmp
dec
pop
or
add
jg
xor
lret
mov
filds
sbb
mov
sub
and
sti
jo
stos
rorb
sub
lods
jne
push
mov
xor
fcom
and
inc
mov
mov
idivb
sub
lret
mov
mov
movsl
adcb
aam
movsl
gs
pop
add
movsb
mov
lret
test
inc
bound
pop
jbe
pop
lea
jp
xchg
cmp
add
mov
cmp
fs
sub
sbb
arpl
mov
int3
pushf
and
add
xchg
or
les
imul
add
pop
jecxz
cltd
jg,pn
ja
mov
and
adc
lret
pop
cmc
xor
xchg
mov
and
push
or
push
dec
cmpsl
test
stos
pop
bound
stos
and
pop
lock
xchg
adc
hlt
add
inc
cmpsb
xlat
inc
imul
xlat
int3
add
in
push
adc
faddl
xor
dec
mov
mov
xor
rcll
stc
ja
and
jne
out
xchg
mov
xchg
xchg
shll
sbb
cmc
xor
jmp
inc
adcl
rorb
subb
imul
jecxz
sub
enter
or
adc
fsubrs
addl
repz
fisttpll
roll
pushf
sahf
pop
punpcklwd
orb
and
movups
fbstp
sub
shlb
jae
loopne
fstl
test
or
and
std
jmp
and
cmpsb
fildl
cmp
lahf
xor
or
inc
lds
jge
mov
mov
outsl
repnz
dec
js
fcmovb
outsl
out
in
sub
shrb
aas
mov
dec
inc
mov
or
or
jg
inc
mov
pop
jbe
inc
aaa
andl
sub
jne
divl
aad
mov
xlat
mov
xor
xchg
inc
sti
push
push
fisubs
enter
sub
inc
stc
inc
inc
je
add
loope
sbb
cli
arpl
loop
adc
pop
jno
dec
push
adc
out
outsb
hlt
std
mov
jne
inc
rorb
iret
lds
or
mov
into
cli
repnz
jge
imul
push
dec
xchg
test
add
jnp
xor
out
inc
in
push
xchg
cmp
repnz
rcrb
loopne
xor
mov
cwtl
pop
lret
push
xchg
or
aam
pop
lock
popa
jb
gs
mov
shl
push
insb
dec
imul
inc
jle
call
mov
mov
and
sub
sub
fdivrs
dec
repnz
jne
mov
mov
lret
pop
test
cmp
or
shrl
fcoml
fucomp
adc
mov
and
cmp
jne
xor
les
mov
outsb
mov
inc
xchg
imul
push
cltd
inc
insb
xorl
fmul
mov
mov
push
push
jo
jp
mov
mov
and
insb
mov
mov
ret
aaa
inc
insb
imull
xchg
xchg
and
and
lds
mov
and
sub
and
out
shlb
lret
jecxz
sbb
jo
lea
and
or
cli
xchg
sub
popa
cmpsl
xchg
mov
xchg
scas
fcoml
cmpsl
movsb
rol
aam
mov
mov
sbb
lea
lret
sbb
mov
dec
jl
es
subb
dec
stc
push
mov
ja
adc
aaa
je
jmp
jl
out
sbb
scas
jae
das
test
ja
cmp
fnstcw
mov
inc
xlat
mov
stos
aam
insb
ds
dec
pop
icebp
nop
or
fwait
xchg
sahf
int3
jbe
test
arpl
sub
inc
sub
fisubs
add
sbbl
cmp
fildl
insl
outsl
lahf
inc
pop
ss
dec
cmp
add
push
push
dec
int3
rclb
leave
mov
adc
push
loope
scas
arpl
testl
pop
dec
inc
inc
mov
cs
lock
push
pop
les
repz
or
mov
xor
pop
stc
sub
cmp
in
inc
movsl
jno
cmp
mov
movsl
dec
subl
adc
xor
ss
and
arpl
push
and
lret
ret
int3
xorb
mov
or
insb
dec
and
decl
out
jnp
popa
add
mov
repnz
mov
loop
adc
enter
in
or
xorb
imul
shl
xchg
das
sbb
mov
mov
repnz
mov
ss
dec
xlat
push
inc
rol
fadds
nop
out
dec
ds
pop
xchg
inc
sub
adc
pushf
dec
cmp
xor
out
fs
fcoml
shl
movsb
sbb
lea
arpl
mov
mov
jl
inc
int
fisubrl
div
repnz
enter
es
jno
or
jbe
jnp
aad
cmp
aad
mov
stos
enter
test
and
mov
cmp
lods
or
push
nop
stc
xor
outsl
rolb
ja
addr16
out
mov
mov
enter
cmp
out
out
fadds
inc
or
ret
jmp
jbe
adc
push
lods
inc
dec
aas
idivb
arpl
orl
in
pop
cs
inc
add
sub
enter
add
dec
int3
pop
mov
ds
mov
jmp
jge
jno
aaa
test
mov
sbb
mov
shlb
push
cmp
cld
daa
dec
xchg
mov
hlt
mov
mov
popa
mov
das
cld
xor
fldl
jl
in
jg
cmp
dec
shlb
fwait
gs
aad
lock
mov
imul
aaa
rcl
sbb
std
inc
mov
xor
adcl
mov
dec
adc
mov
pop
inc
sub
push
add
insl
es
adc
mov
nop
mov
ds
lock
inc
loopne
popa
out
xor
test
cmp
test
gs
out
mov
xorb
mov
cmp
dec
cld
jae
cmp
cmp
or
adc
jnp
fistps
adc
mov
icebp
loop
movsb
mov
ja
sub
jl
repz
pavgw
cld
adc
mov
adc
sti
dec
jge
loopne
lret
inc
pushf
or
adc
fstpl
or
dec
and
dec
insb
lret
rcrl
pop
lods
xor
cmpsb
mov
ret
je
leave
hlt
shl
in
popa
mov
test
xchg
and
xlat
mov
dec
inc
cmpsl
push
ja,pt
xchg
mov
je
jmp
cmp
aad
inc
outsl
mov
cli
js
mov
mov
add
lcall
push
jo
sbb
aad
loop
mov
sbb
pop
leave
stc
dec
fimuls
inc
push
outsb
mov
lods
sub
cmp
jecxz
add
or
add
push
cs
and
jmp
pop
adc
sub
lret
sbb
inc
and
fwait
cmpb
mov
shlb
xchg
mov
scas
add
jg
jmp
add
lcall
sub
xor
push
leave
stc
xchg
out
divl
mov
adc
fildl
mulb
jbe
cmp
jg
xor
fdivrs
mov
sbb
or
cwtl
sti
inc
out
or
dec
or
test
fstp
mov
scas
jns
out
outsb
loopew
and
xchg
popa
fdiv
mov
rorb
pushf
or
dec
addr16
sbb
sub
sbb
iret
aaa
stos
lret
xchg
inc
mov
cmp
push
loopne
pop
pushf
jne
iret
xlat
je
cwtl
add
xor
lods
outsl
ja
test
ds
inc
jb
cmp
sub
adc
js
outsl
lods
aam
push
in
pushf
rcrl
imul
movsb
bound
push
mov
pop
xchg
loope
inc
add
mov
or
aas
cli
mov
jle
jp
imul
pop
popf
repz
jle
inc
pop
sub
or
repz
jle
xchg
ss
jae
jge
testl
cmpsb
scas
hlt
into
pop
sbb
mov
ds
outsl
pop
pop
jo
push
push
fisttpll
lods
xor
add
cmpb
jp
shll
fisubs
popf
stos
jecxz
mov
aam
daa
jnp
xchg
xchg
jae
out
mov
cmp
xor
push
mov
stos
jne
dec
push
inc
sbb
pop
int3
mov
rorl
subl
outsl
add
frstor
call
mov
dec
lret
cmp
out
es
add
sub
sbb
xchg
sbbl
mov
fadd
xlat
ds
adc
sbb
mov
dec
popa
and
jb
xor
inc
daa
mov
xchg
ja
addr16
sbb
subl
push
test
into
mov
mov
dec
test
inc
jp
call
outsb
test
jnp
push
mov
sub
adc
xchg
roll
movsb
mov
pop
ret
mov
pop
pop
cmp
jo
int3
mov
push
cmp
cmp
arpl
shl
and
push
xor
rorb
xchg
std
in
shll
lret
aam
les
lret
neg
aaa
scas
xlat
rcll
fnsave
push
popf
xchg
or
fwait
push
cwtl
mov
adc
mov
std
adc
mov
cwtl
xor
and
loop
out
jl
je
jmp
jns
stc
ja
loopne
mov
inc
out
gs
dec
inc
hlt
nop
xchg
mov
adc
mov
mov
inc
rorb
roll
lret
cmp
xchg
xorl
xchg
movsl
cmp
sarl
loop
and
sbb
repz
and
iret
psrld
aas
xchg
hlt
mov
dec
call
jle
cmp
jl
imul
mov
test
out
sbb
ja
lods
inc
stc
repz
fwait
sub
add
add
mov
pop
pop
xor
sub
mov
dec
leave
add
repnz
enter
test
cmp
xchg
xchg
call
in
pop
inc
cmp
jl
dec
mov
mov
inc
negb
sbb
mov
aam
sbb
push
mov
push
adc
add
ret
movsb
jecxz
out
xchg
pop
paddsw
mov
xor
push
pop
mov
mov
mov
mov
shl
cmpsb
movsb
loop
adc
xor
aam
adc
cmpsb
bound
xchg
add
mov
fidivrs
push
sub
out
les
xor
adc
inc
dec
jmp
xlat
in
loop
sub
mov
in
addl
dec
ret
add
imul
mov
jb
insb
mov
lods
in
jb
mov
loope
dec
roll
cmp
stos
inc
call
jae
mov
pushf
lock
dec
push
outsb
aad
jnp
xor
stc
sarb
fistl
cmp
push
mov
pop
test
in
jp
xchg
lahf
int
cmpsb
mov
iret
and
lcall
stos
popa
jmp
outsl
ds
sbb
stos
cmpsb
push
scas
push
dec
and
dec
push
xlat
xchg
test
inc
in
mov
lcall
nop
movsl
cwtl
xorl
mov
fisttpll
bound
xor
sbb
add
jne
push
in
gs
mov
loope
pusha
mov
sub
cmp
dec
adc
pop
les
mov
dec
inc
xchg
stos
dec
push
es
insb
call
ljmp
bnd
mov
and
into
dec
jno
cmp
movsl
inc
fcomps
sbb
test
cmp
add
adc
xor
pop
test
xchg
jle
cmp
mov
fstp
pop
in
inc
fimull
test
xor
xor
or
xchg
xor
mov
dec
push
and
cltd
add
das
jbe
ja
out
sub
mov
mov
negb
dec
sub
bswap
repz
cmp
xchg
jns
adc
mov
sbb
lods
pop
fs
push
mov
divl
lahf
inc
bound
and
jno
loop
or
sub
imul
test
add
shl
mov
fisttpl
out
and
nop
inc
sub
jl
mov
dec
xchg
add
xor
stos
mov
loope
imul
cmp
and
sub
xchg
lods
cs
inc
stc
dec
adc
pop
mov
xchg
cmpsl
adc
mov
sub
lret
cmp
stc
xor
lock
add
iret
push
mov
sbb
cwtl
or
pushf
xchg
and
cli
jl
into
in
sti
call
lock
dec
insl
or
ds
jbe
test
push
cmp
or
jmp
inc
inc
cld
movsl
movsb
sbb
dec
mov
mov
divl
mov
push
lret
and
mov
out
mov
adc
lods
pop
adc
movsb
mov
into
jae
push
inc
push
push
fdivl
pop
loope
fs
dec
inc
pop
and
in
clc
dec
lods
sbb
jo
lea
in
jne
inc
adc
lret
das
ficomps
mov
pop
iret
add
inc
cmpsl
mov
fsubs
pushf
pushf
pop
fldenv
adc
movsl
dec
xchg
xchg
sbb
pop
and
pop
jp
push
rcrl
sub
mov
add
jle
sbb
in
dec
dec
inc
ret
sti
cwtl
or
xchg
cld
outsb
xorb
hlt
pop
ficoms
in
or
pop
add
mov
inc
sbb
jnp
push
cmp
ret
dec
jb
mov
fnstenv
sub
push
ret
pop
test
inc
imul
push
rcrl
pusha
movsb
daa
cmp
cltd
andl
mov
std
sbb
pop
mov
mov
jecxz
ljmp
pushf
mov
js
cld
push
mov
pop
bound
or
into
mov
negl
imul
int3
or
int
jg
ret
movsl
rcrb
mov
pusha
sahf
daa
in
cmpsl
imul
pusha
aaa
mov
and
add
cmp
push
lods
decb
rclb
rcl
loopne
xor
std
and
lret
mov
repnz
dec
test
cmp
inc
cs
stos
hlt
sub
pop
sub
imul
mov
mov
lahf
push
inc
or
test
push
psrlw
cwtl
movsb
pop
cmc
sub
xchg
mov
addr16
lcall
add
cmp
ljmp
jmp
incb
mov
jo
mov
xchg
fwait
leave
xor
inc
fistl
sbb
add
dec
sbb
les
lcall
push
jo
scas
xchg
mov
fldcw
stos
fwait
mov
dec
cmp
clc
icebp
xchg
adc
sbb
mov
shll
fwait
cmp
cli
int3
inc
cli
pop
push
jo
cmpsb
mov
iret
test
adc
sbb
movsb
jne
pop
loope
inc
sti
das
sub
sarb
xchg
push
sbb
lret
iret
adc
jae
jno,pn
mov
dec
ret
jno
shlb
add
mov
scas
enter
scas
cmp
outsb
mov
xor
in
and
mov
and
movsl
cld
and
jl
sbb
jg
jne
sbb
push
icebp
repz
icebp
xchg
or
movsl
stos
cmp
ret
jp
push
mov
cmp
inc
and
cmp
push
adc
sub
or
adc
jg
cltd
pop
inc
or
pop
xchg
rclb
jp
jae
sub
fdivl
add
arpl
mov
push
fwait
lods
lcall
lock
stos
sub
out
std
jnp
shl
stc
sbb
and
sub
xchg
into
ret
inc
mov
call
cwtl
call
clc
push
pop
repz
mov
clc
in
mov
cmp
cmp
addr16
fidivrs
and
out
adcb
jle
jmp
jl,pn
push
ljmp
push
test
shll
xchg
pop
xchg
xor
shll
sti
adc
xor
out
xor
jle
repnz
addr16
out
stc
jmp
fbld
add
fdivs
imul
push
int
mov
or
or
popl
xchg
js
jns
addb
inc
mov
push
and
fcomi
mov
push
dec
sbb
jl
sbb
bound
call
popf
jmp
mov
dec
or
loope
lock
mov
jno
mov
in
dec
dec
sub
lock
mov
pop
inc
mov
and
adc
std
mov
call
loope
sub
ret
jnp
or
push
and
repz
clc
ja
jbe
mov
xchg
push
sbb
jg
sbb
test
push
mov
mov
mov
inc
push
and
and
inc
loop
inc
pop
aas
imul
das
mov
pop
aam
push
out
jns
xor
ss
stos
sbb
mov
std
xchg
aaa
inc
test
xchg
inc
mov
jb
fldcw
add
sub
pop
nop
push
sbb
in
or
add
mov
das
das
leave
sahf
out
inc
insl
dec
pop
sbb
mov
popa
mov
in
jne
adc
ss
rcr
loopne
loop
ljmp
test
xor
outsb
out
mov
xchg
icebp
sub
lahf
cmp
mov
xor
lahf
rcrl
xor
cmpsb
jle
mov
and
imul
rcr
xor
movl
fsubr
jg
push
mov
ds
push
ltr
dec
bound
sbbb
pop
adc
subl
iret
mov
sub
xchg
out
movsl
lods
adc
or
inc
xchg
sbb
mov
pushf
jle
xor
add
ss
push
aam
cmp
adc
mov
es
sti
or
or
pop
mov
andl
cltd
inc
xor
dec
cltd
sti
add
pop
cmp
xchg
imul
flds
mov
cld
cmp
cs
mov
js
or
or
jl
jl
xchg
fwait
pop
popa
or
inc
mov
xorb
dec
push
ret
rcrl
pop
bound
sbb
adc
push
pop
mov
mov
xor
or
inc
adc
fs
mov
xchg
mov
xor
out
xlat
inc
mov
icebp
push
dec
lods
inc
push
jp
movsb
aam
lahf
inc
mov
mov
or
js
cmpsl
icebp
repnz
outsl
dec
adc
sub
jmp
pop
xchg
fs
xchg
jno
push
push
sub
jle
jp
sbb
data16
sarl
jno
mov
dec
mov
cmp
test
jbe
nop
cmpl
std
leave
insl
cmc
mov
pop
std
in
adc
in
into
mov
cli
pushf
cs
xor
enter
fldl
and
ret
pushf
test
stos
adc
aad
jle
and
stos
xchg
or
push
inc
pop
push
fisttpl
jnp
cmc
mov
cltd
sbb
nop
rorb
imul
xchg
adc
call
into
aad
mov
mov
push
mov
test
fnstcw
mov
pop
jmp
sahf
sbb
gs
arpl
addr16
std
xchg
test
dec
sbb
fisubrs
sub
mov
sbb
and
xchg
add
std
shll
sbbb
or
fwait
cmp
mov
adc
sub
jl
int
inc
mov
insl
mov
sti
int3
push
movsb
outsb
sbb
dec
cmp
mov
mov
jae
push
xor
mov
pop
inc
sub
loopne
fistl
jmp
ret
stos
scas
fwait
repnz
loope
mov
es
pop
inc
or
dec
jmp
addr16
jl
sub
mov
bound
jecxz
jge
rcrl
pop
fsts
mov
nop
sub
std
ret
mov
data16
gs
mov
bound
xchg
cmc
xor
mov
jl
mov
enter
mov
and
xchg
mov
pop
jp
repnz
decb
push
cmp
xchg
test
pop
pushf
lock
or
int
cmp
cmp
imul
sub
pop
pushf
into
adc
and
lods
sahf
jecxz
xchg
xchg
sbb
shr
adcb
add
jb
ds
mov
dec
fwait
add
jne
std
loop
pushf
pop
rorl
mov
mov
lock
xor
mov
int
fwait
das
mov
xorl
lret
cs
jne
pop
jmp
fadds
push
cld
xor
lcall
pop
loop
xor
popf
adc
jmp
cmp
test
orb
or
or
and
mov
cli
sub
cs
xchg
dec
or
mov
pop
test
js
and
cmc
jg
jno
pslld
mov
inc
and
fistpll
adc
jns
mov
fcomip
dec
mov
inc
mov
cmp
push
cli
and
lods
pop
jne
mov
cmp
sti
jo
rcll
sub
imull
mov
cmp
int3
and
push
push
sbb
adc
pop
lret
scas
mov
add
pop
mov
out
push
xor
mov
out
xchg
icebp
pusha
add
mov
adc
mov
sub
outsl
and
cmpsl
aaa
sbb
test
in
mov
repnz
push
and
xchg
mov
ds
mov
lret
or
and
shl
pop
fstps
pop
xchg
pusha
dec
incb
adc
mov
fsubl
outsl
dec
mov
sub
imul
ja
ds
lcall
and
fistpll
dec
cmp
movsl
jecxz
shrb
xorl
lea
dec
dec
fs
mov
ret
aas
scas
xchg
pusha
lods
sub
cmc
xchg
inc
fs
jnp
or
and
lcall
lcall
add
jg
or
cvtpi2ps
dec
and
loope
aaa
jne
pop
xchg
cmp
mov
sub
call
shrb
sbb
in
pop
push
popf
test
into
pop
xlat
movsb
pop
sbb
sub
addr16
sti
sub
and
add
dec
lods
test
and
xchg
aam
push
or
clc
fs
jecxz
pop
popf
in
stos
sbb
add
mov
inc
or
push
mov
data16
faddp
outsb
xlat
and
xchg
es
xchg
push
adc
add
lds
sbb
dec
loope
je
mov
xor
mov
adc
lcall
arpl
mov
aam
daa
into
mov
and
push
jmp
sbb
jbe
and
push
test
lea
int3
sbb
orl
int
and
dec
add
addb
dec
adc
lds
enter
lret
aaa
cld
mov
clc
int3
cmp
mov
push
sub
xor
adcb
sti
popl
add
loopne
sub
add
stos
in
inc
je
lods
adc
push
mov
xchg
pop
mov
and
stos
mov
stos
test
mov
into
aaa
jb
roll
in
pusha
pop
div
inc
lret
push
and
pushf
jb
adc
dec
sarl
cli
xchg
fcomps
jle
xchg
or
mov
cmp
xchg
dec
xchg
ljmp
push
outsl
sbb
fsub
inc
adc
mov
mov
ljmp
divb
cmp
jno
inc
or
mov
movsl
ss
lds
push
daa
mov
mov
jne
adc
mov
dec
pop
outsb
test
aas
test
gs
dec
into
or
dec
jb
dec
ret
sbb
mov
loopne
into
dec
push
push
or
sub
inc
adc
mov
shlb
mov
dec
mov
jne
push
mov
xchg
xchg
mov
in
jge
add
cwtl
adc
imul
mov
dec
loopne
add
in
add
pop
jbe
adc
or
cmpl
popa
dec
mov
inc
xchg
adc
pop
les
pop
mov
notl
mov
repnz
cmc
shlb
jmp
sub
data16
dec
inc
mov
mov
orl
lret
je
or
andb
xchg
les
fs
test
loop
xlat
and
lret
ljmp
cmp
sub
push
pop
mov
jg
sahf
lahf
cmc
fcomps
mov
sub
call
loop
inc
addr16
hlt
inc
lret
cltd
test
jp
int
mov
arpl
xchg
cmp
inc
lods
push
sar
mov
ret
mov
lods
lea
pop
or
icebp
xchg
cli
insl
cmp
jmp
outsb
jge
in
mov
in
lea
adc
es
mov
sub
cmp
push
inc
adcl
mov
mov
mov
pop
lret
add
mov
cmc
jmp
sbb
jnp
out
subl
push
clc
mov
rcrl
addl
fidivrl
xor
mov
lods
cmpsl
sub
stos
dec
xchg
dec
into
aaa
gs
mov
dec
push
mov
mov
inc
push
mov
popa
or
mov
lods
iret
push
into
add
adc
sahf
xchg
cli
push
cmp
ret
and
inc
jae
mov
mov
xor
loop
cmp
mov
fnsave
sub
add
mov
jl
jl
fadds
push
mov
cmpsl
add
frstor
lret
jbe
mov
dec
add
mov
imull
jp
adc
es
repnz
je
inc
ds
mov
addr16
rcll
lret
sbb
loope
mov
sbb
xor
cmp
lahf
fsubrs
shlb
popf
rcr
mov
xor
xlat
fnsave
iret
adc
mov
dec
fcmovnu
add
jl
roll
xchg
mov
clc
dec
ljmp
das
xor
out
out
fldcw
or
nop
shll
mov
loope
xchg
gs
shlb
or
fs
add
and
xchg
test
aas
sbb
cmp
movsb
rorl
xor
adc
push
ret
lret
push
das
arpl
cltd
aad
lock
adc
mov
dec
and
fbld
movsl
mov
sbb
inc
or
jl
sti
ret
push
test
repnz
imul
adc
sbbl
loop
stos
ret
add
jcxz
test
sbb
fcompl
insl
in
pop
sub
fisubrs
enter
xchg
or
sbb
fwait
into
leave
movsb
xor
adc
xor
fmull
mov
xchg
adc
adc
aam
xchg
je
inc
jp
mov
sub
fcmovbe
movsb
push
sub
ret
test
cmp
aas
out
jnp
and
fldl
sub
mov
pop
lock
shl
mov
mov
movsb
sarl
lea
fwait
dec
mov
std
xor
movsb
mov
mov
dec
xorb
pop
mov
movsl
fwait
sbb
sub
xchg
cli
add
and
test
inc
cli
cli
fst
and
ret
inc
mov
iret
mov
inc
cld
lods
cmp
repz
push
dec
nop
mov
in
push
jo
xor
lds
adc
pop
sub
adc
and
dec
hlt
adc
ret
das
xchg
mov
xchg
stos
aaa
out
sti
cli
sahf
leave
push
test
add
adc
dec
cmc
pushf
cmp
mov
dec
nop
outsb
into
aaa
inc
std
cs
adc
dec
fwait
jno
jbe
das
jecxz
out
jno
std
mov
push
cmpl
xchg
rolb
cmp
add
das
push
imul
js
xchg
mov
stos
push
and
jno
ss
enter
test
ret
rcll
ficomps
ss
aad
xchg
mov
test
mov
lock
mov
jne,pt
or
adc
cld
outsl
sbb
imul
ljmp
mov
int
lahf
cmp
je
xchg
cmp
sub
sub
fwait
imul
xor
sbb
popa
shlb
push
adc
push
sub
loope
mov
add
xor
xchg
pop
div
js
jno
sub
pop
jns
or
pop
xchg
push
neg
pushl
jge
inc
std
sbb
push
push
pushf
je
sbb
nop
or
cmpb
fdivr
xor
jo
jge
xchg
sbb
and
add
jp
in
sbb
sbb
mov
add
int3
jg
ret
adc
mov
mov
cs
dec
arpl
rcll
ds
xchg
add
ja
dec
dec
sti
insb
xorl
cmpsb
fs
js
or
int3
dec
mov
gs
jbe
mov
and
sbb
add
and
inc
jb
jg
cld
ds
xchg
es
test
dec
cli
mov
cmpb
daa
push
pusha
test
jbe
xor
or
pop
push
popa
outsl
repz
inc
leave
mov
notb
push
jne
inc
jge
xchg
mov
jmp
das
push
add
stc
std
ret
divl
into
push
xor
xor
aas
inc
push
push
aas
in
les
lret
mov
gs
mov
or
mov
cld
movsb
jl
fwait
scas
icebp
pop
add
push
xchg
mov
pushf
shll
cmpsl
insl
cmp
mov
pusha
xchg
lock
enter
mov
xor
movsl
ljmp
sub
mov
mov
add
cltd
iret
pop
and
leave
pop
fbstp
dec
adc
add
fstl
sub
pop
rolb
stos
adc
jmp
int3
leave
jge
in
cmc
addr16
pop
ret
mov
pop
dec
insb
aam
jae
sysret
sub
pushf
lds
test
pop
imull
out
in
push
xchg
popa
push
insb
xchg
cmp
es
imul
mov
pop
cmp
aad
add
jge
dec
jge
and
push
pop
test
inc
repz
je
into
adc
and
pop
sahf
outsl
sbb
insl
xchg
daa
mov
and
inc
shlb
pop
sbb
paddb
inc
and
or
aas
mov
cltd
sub
mov
ds
je
sti
cld
dec
sbb
mov
lret
xchg
mov
out
es
pop
cmp
cmp
push
mov
imul
push
insl
push
adcl
mov
dec
inc
dec
and
or
pusha
cmp
pop
and
and
dec
fdivrs
movsbl
xor
add
dec
js
movsb
inc
cmc
add
dec
enter
adc
notb
xor
pop
shlb
add
cmc
addr16
arpl
or
rcrb
or
xchg
push
setne
xchg
sbb
insl
xor
xor
inc
mov
sub
call
jmp
pop
pop
sub
push
out
int3
mov
lea
out
sti
stos
xlat
repz
sbb
cmp
jge
sbb
lock
outsb
mov
in
mov
lock
dec
arpl
jns
sbb
lahf
jbe
or
je
dec
dec
adc
aaa
mov
pop
sti
add
sbb
test
xchg
inc
mov
xchg
and
les
insb
into
jmp
mov
mov
lds
push
jmp
mov
pop
or
mov
jmp
bound
mov
les
sbb
lock
cmp
aam
leave
pop
aad
repz
loope
inc
nop
pushf
xchg
shlb
mov
xor
and
jge
fstpl
lret
int
mov
subl
cmp
lea
xchg
inc
add
inc
jp
cwtl
rcll
add
inc
cli
nop
dec
stc
adc
loopne
add
lods
jle
cli
ficomps
push
add
mov
popf
or
not
mov
mov
out
push
add
xchg
popf
jmp
pop
jmp
shrl
add
sub
xor
cmp
inc
popf
stos
jbe
pushf
xchg
mov
inc
xor
pop
xor
sbb
or
loopne
rorl
push
inc
daa
mov
mov
ljmp
pop
aad
jbe
lods
sub
mov
xor
cs
das
fisubs
cwtl
or
jle
mov
xchg
cwtl
add
push
cltd
call
dec
pop
clc
pop
je
out
clc
sub
in
jmp
cmpsb
mov
sub
pop
insl
or
es
outsl
pop
rolb
jl
mov
insl
mov
jp
sbb
push
cmpsb
mov
fdivrs
test
lods
ret
add
outsl
mov
xor
pop
std
mov
sbb
jmp
jo
popa
in
cmp
adc
dec
test
ja
inc
cltd
and
out
pop
push
dec
mov
pop
lret
scas
int3
add
movsb
insb
cmp
mov
fwait
divb
push
divb
pop
inc
out
mov
lcall
ljmp
jmp
mov
mov
jmp
push
pop
cmp
dec
mov
out
mov
and
movsb
imul
rcrb
fmulp
cmp
inc
or
inc
stos
sbb
bsf
xchg
in
movsb
mov
insl
je
insb
mov
fwait
xchg
pop
mov
sub
out
hlt
in
enter
aam
xchg
ret
jmp
mov
lahf
jge
aas
stc
inc
out
push
mov
bound
bound
leave
inc
gs
and
idivb
movsl
xor
pushf
xor
add
or
mov
bound
fadds
pop
cmc
enter
jbe
xlat
lods
adc
cmpsl
nop
lret
ss
sti
and
mov
push
cwtl
roll
mov
jle
arpl
push
ss
xchg
sbb
or
jbe
inc
sti
out
and
pop
out
ljmp
fs
ret
movsb
hlt
mov
repnz
in
inc
fidivl
inc
sub
jae
push
cld
std
dec
mov
scas
dec
pop
inc
push
adc
add
xor
gs
adc
sbb
stos
xchg
imul
iret
dec
xchg
int3
jo
pop
adc
hlt
insb
dec
push
les
stos
jb
stos
sub
test
repnz
mov
je
int
sbb
cmpl
jnp
cmp
dec
pop
cmp
mul
lds
push
pop
or
mov
push
or
loopne
pop
fs
or
push
sub
dec
push
mov
cli
xorb
je
add
xchg
enter
popf
pusha
adc
inc
mov
inc
orl
jne
mov
jge
mov
aas
and
out
xchg
pop
xchg
jns
sub
jle
xlat
ljmp
pop
jp
insl
dec
popf
mov
daa
dec
iret
je
out
mov
xor
ds
jo
into
dec
push
mov
popf
fldt
dec
int
lods
or
in
orb
push
pop
push
test
leave
aam
cli
dec
filds
aas
sbbl
adc
in
js
push
mov
pop
std
adc
jbe
testb
js
lret
and
adcb
mov
fcoml
mov
xchg
push
ffree
cltd
sub
and
fwait
imul
dec
mov
cmp
xor
lret
inc
and
ljmp
shrb
jne
fdivs
mov
inc
xchg
ret
loope
and
popa
mov
stos
outsl
imul
adc
aam
dec
in
arpl
sarb
xor
add
mov
jo
push
dec
ja
mov
mov
fsubs
mov
scas
cwtl
pusha
fsub
lods
xor
fidivl
pop
adc
rcr
jp
cmc
xchg
adc
les
cld
into
pop
inc
leave
xchg
mov
mov
mov
cmp
out
cmp
sbb
rcll
stos
mov
adc
je
dec
fwait
stos
loopne
cs
push
xor
mov
cmp
pop
adc
mov
icebp
sub
shll
pop
xor
cmp
stos
pushf
stos
outsb
sahf
mov
aaa
inc
pop
inc
sbb
sbb
loope
jle
sub
sti
out
aam
test
push
lahf
inc
rorb
insl
pop
cltd
inc
sbb
ljmp
addr16
in
xor
pop
jge
scas
aaa
cmpsb
movlps
xor
int
sbb
sbb
mov
imul
dec
mov
jo
mov
add
cmpsb
cmpsl
pop
jmp
adc
mov
jns
shrl
cmpsb
gs
faddl
ret
adc
fnstcw
sbb
adc
xor
or
push
inc
scas
dec
dec
jae
in
cmp
cmc
mov
sub
adc
cmp
push
sub
jg
fwait
pop
rcll
xchg
sbb
call
jo
add
sbb
pop
inc
jl
decb
ficoms
pop
xlat
mov
xchg
mov
popa
sub
cmp
sbb
adc
shlb
adc
mov
and
fdivrs
xchg
cmp
popf
popw
mov
xor
in
popa
or
adc
cmp
push
inc
push
sbb
mov
pavgw
jo
inc
scas
cmp
movsl
mov
and
and
xor
fwait
sbb
pop
into
nop
adc
push
xor
not
jo
rclb
mov
fiadds
mov
cmpsl
push
add
jp
loopne
je
cmc
fmulp
mov
cmc
fs
push
cli
xor
jecxz
mov
mov
repz
fs
add
push
lock
inc
push
es
pop
sbb
mov
sub
daa
push
mov
shlb
addb
mov
std
xchg
sbb
jle
adc
test
xor
add
imul
and
repnz
add
ret
mov
cli
je
push
mov
mov
cld
leave
jns
mov
lods
lret
lods
imul
sub
or
unpcklps
lret
mov
cwtl
inc
leave
cs
repz
xor
adc
or
test
mov
push
cmc
arpl
inc
cld
xor
xchg
sub
xlat
ret
xor
rclb
andl
dec
push
inc
xchg
fwait
lret
dec
mov
and
in
inc
jnp
aas
adc
push
cmp
mov
pop
adc
frstor
rorb
mov
out
in
pop
in
sbbb
add
and
xchg
cld
dec
mov
mov
adc
loopne
adc
xchg
mov
enter
int3
xor
inc
je
insb
sbb
les
pop
div
mov
lahf
adcb
mov
into
loop
adc
mov
mov
insb
sub
ljmp
xchg
xchg
out
std
jle,pn
pop
movsb
aaa
adc
push
mov
mov
scas
and
xor
inc
data16
xchg
xchg
sti
rcll
aad
test
xchg
mov
bound
pusha
lods
test
ds
jp
roll
rcl
movsl
cli
in
or
mov
sbb
out
inc
mov
inc
popf
cli
daa
sbb
push
flds
jle
lea
in
cltd
ret
mov
cmp
les
in
xorl
lret
xor
addr16
lds
out
rorb
mov
scas
pop
rorl
fistpl
push
arpl
and
lods
outsb
test
sub
icebp
jb
mov
push
sti
mov
xchg
push
xchg
xor
adc
cmp
push
insb
gs
mov
mov
out
and
mov
movntps
jnp
test
mov
fcoml
mov
jmp
inc
notb
or
insb
jno
inc
loope
andps
sub
pop
ja
mov
pop
call
mov
incl
push
mov
xchg
lods
aad
movsl
stos
pop
mov
dec
and
pop
inc
xchg
fidivrl
push
lock
xor
pop
outsl
lea
push
int
lods
rol
inc
lahf
lea
fmul
outsb
enter
mov
jl
sbb
sbb
jns
jle
xchg
mov
add
sti
mov
repnz
sbb
push
jne
lret
fistpll
pop
mov
sbb
xchg
int
lods
cmp
outsl
sbb
xor
jns
aas
fs
pushf
pushf
mov
nop
sbb
or
sub
lcall
or
xlat
loop
dec
add
cmpsl
xor
pop
mov
insb
ret
lahf
xor
subb
or
mov
sbb
sbb
pop
and
and
pop
fprem1
btr
sbb
lret
cmpsl
popa
inc
adc
pop
lahf
in
icebp
jns
inc
imul
cmp
mov
movsb
fiadds
mov
jg
lcall
cltd
div
push
jmp
fucomi
stc
out
push
fwait
ret
xchg
xchg
mov
push
cmp
popa
out
jnp
jo
sub
dec
sti
fstpt
shrb
lret
push
dec
pop
out
add
out
insb
shrb
ficoml
in
cmp
and
mov
push
ljmp
cmp
and
rclb
mov
push
mov
aaa
in
add
fs
or
xor
mov
outsb
ret
push
xchg
inc
mov
cwtl
stos
adc
mov
adc
jecxz
cmp
adc
or
cmp
ret
mov
aaa
pop
loop
popa
loop
imul
bound
mov
repz
push
push
arpl
sub
mov
bswap
fnsave
lock
jb
les
sbb
mov
jno
into
ret
sub
lock
fldcw
mov
imul
dec
add
xchg
stc
mov
jl
sbb
sahf
adc
movsl
mov
lods
xchg
xor
push
xchg
mov
icebp
pop
shll
jle
aad
test
sub
cmpsb
mov
test
mov
out
dec
idiv
mov
push
cmc
test
jno
mov
or
aad
mov
sub
aas
dec
or
roll
add
sbb
add
lret
push
xor
jb
xor
add
sbb
dec
rclb
push
sarl
test
jmp
rcl
adc
xlat
jle
xchg
loope
mov
pop
ret
cltd
adc
rorl
cmp
inc
xor
lds
fldcw
in
add
push
add
adc
rolb
or
cmp
frstor
push
lods
jno
movsb
in
add
in
popa
clc
jae
dec
sbb
adc
clc
mov
ss
lods
inc
cmc
jl
xor
in
aas
sbb
ds
and
xchg
adc
cmc
mov
pushf
das
pop
outsl
and
out
test
jecxz
js
lahf
aaa
mov
pop
int
xchg
and
or
sub
cwtl
xchg
and
mov
xchg
dec
xchg
andb
insb
fistl
and
icebp
xchg
test
push
jbe
ds
mov
cmp
mov
lods
call
in
push
lock
in
pop
mov
xchg
xchg
pop
stos
mov
hlt
adc
mov
ficompl
or
mov
jo
or
daa
inc
int
idivb
add
add
jp
dec
push
sbb
adc
fs
sahf
mov
push
movsl
mov
pushf
les
fwait
mov
jl
inc
cmp
inc
call
adc
iret
shrl
inc
xchg
lcall
scas
mov
push
orb
dec
inc
faddl
cwtl
adc
jge
pop
andl
notb
adc
test
inc
mov
sub
das
mov
lret
xor
fidivrl
test
cmp
sti
rorb
or
or
cli
xchg
aam
mov
add
aas
sti
in
mov
popa
popf
aam
inc
jnp
aad
lahf
sbb
inc
xor
cmc
mov
and
mov
or
xor
out
mov
inc
xor
push
xor
add
mov
jae
sub
sub
mov
faddp
dec
or
push
nop
mov
xor
movb
cmp
call
flds
ds
dec
cmc
inc
adc
pop
shlb
mov
sarb
push
loope
cwtl
imul
hlt
jne
dec
ss
sub
pushf
fsubrl
fldl2e
loope
int
fisubrs
lret
testb
sub
outsl
ret
stc
push
cmp
jl
sbb
add
mov
mov
in
xchg
outsb
xchg
test
nop
add
sub
or
push
aas
ss
adc
cltd
cmpl
sti
testb
mov
fildl
paddusw
aaa
fcomps
ss
loop
pop
bound
and
cmp
pop
push
iret
outsb
aam
cli
push
jae
jns
xchg
aas
aad
pop
adc
clc
subb
add
jo
pop
mov
idivb
fnstenv
and
je
adc
iret
cld
cmp
popf
repnz
inc
cmp
loop
loop
mov
xor
outsb
aad
push
idivb
jmp
mov
cmc
inc
das
sbb
jnp
cmpsl
and
test
lods
adc
es
int3
cwtl
gs
jp
and
pusha
push
xlat
es
mov
stc
ds
mov
mov
in
push
xor
cmp
mov
cmpsb
inc
inc
daa
jne
jl
pop
mov
add
xchg
jns
jp
orl
ds
jae
cmp
mov
stos
popfw
and
movsl
aam
vphadddq
mov
push
test
xchg
inc
sbb
sbb
test
arpl
icebp
jnp
xor
lods
or
ds
cmc
mov
adc
leave
push
jne
sbb
out
cmp
imul
xchg
out
inc
out
jle
mov
adc
and
add
xor
test
outsb
ja
imul
push
aam
int3
add
scas
rcll
sub
sbb
xchg
or
mov
jle
mov
pop
inc
sti
bound
insb
movsl
loope
ss
or
bound
adcb
add
fdivrl
aam
std
and
insb
mov
mov
imul
mov
movsb
jne
lret
xchg
sbb
movsl
std
aad
mov
mov
jae
mov
ffree
ja
or
inc
jno
mov
add
jo
mov
fcom
inc
pushf
insl
ss
xchg
push
cltd
inc
out
lahf
mov
add
cmc
jno
sbb
clc
xchg
fldt
jae
int3
xor
arpl
insb
push
fsubrs
shlb
imul
mov
flds
sbbb
mov
mov
daa
dec
call
fisubrl
jb
jecxz
maxps
aas
jbe
add
dec
leave
test
adc
mov
xor
xor
sti
movsl
mov
pop
sahf
inc
fsubr
add
fadds
out
shl
mov
leave
and
mov
out
outsb
inc
xchg
pop
rcll
adc
shrb
emms
sub
leave
mov
pop
out
out
ret
cltd
gs
lret
pop
jp
arpl
shrb
fdivr
mov
adc
adc
test
sub
test
adc
mov
pop
popf
shrl
xor
sarb
stc
sub
dec
mov
jp
pop
js
jmp
jg
out
jecxz
int3
push
orl
sbb
mov
xchg
es
mov
loopne
das
mov
cmpl
aaa
iret
dec
outsl
sub
pop
int3
loopne
xchg
pop
mov
mov
lret
jb
inc
into
addb
mov
aaa
jge
add
push
shr
inc
mov
or
outsl
jp
mov
stos
mov
and
das
insl
mov
sbb
popf
jmp
dec
shll
sar
int
testb
cmp
pop
shl
out
fwait
sub
std
sub
mov
jno
in
shll
pop
jmp
jns
dec
mull
add
imul
xor
in
std
and
add
dec
cmpb
div
fidivs
hlt
sbb
xchg
sahf
push
mov
lcall
roll
mov
cltd
mov
in
stc
xorl
sub
dec
clc
insl
mov
movsb
movsl
enter
xlat
mov
push
insl
add
xchg
push
push
je
inc
cwtl
fprem
test
xchg
lret
ss
mull
fs
push
rcll
loopne
inc
dec
in
int3
ss
rclb
mov
push
add
dec
sti
dec
add
inc
js
inc
popa
mov
jnp
dec
add
push
jl
imul
push
dec
and
fbld
mov
mov
push
mov
jmp
inc
arpl
dec
xor
out
jmp
add
jecxz
lcall
dec
xchg
cmpsb
sub
loopne
sub
cmp
adcl
call
roll
js
or
xlat
xchg
push
cmp
dec
icebp
inc
incb
cwtl
push
adc
push
jmp
ja
cmp
fld
push
pop
mov
pop
nop
jne
out
mov
ficoms
cmpsl
jecxz
jnp
call
ror
stos
xchg
adc
mov
dec
das
jge
adc
push
pusha
mov
xor
cmp
out
es
jl
lods
iret
ficomps
popf
mov
sti
mov
xchg
push
xchg
loopne
lock
mov
test
push
cli
mov
int3
fnstenv
ljmp
jne
fsin
push
nop
inc
pop
das
pop
inc
pop
xchg
fisubl
sbb
sbb
lcall
pushf
mov
and
das
fldt
int
mov
cmp
ret
add
cld
pop
mov
in
fisubrl
mov
ja
inc
imul
cmpsb
xchg
out
scas
xor
sub
test
in
ljmp
dec
out
jecxz
xchg
outsl
mov
loopne
fstps
xor
add
adc
jns
jne
push
xchg
ja
xchg
xchg
imul
fcmovbe
lock
movsl
idivb
outsb
or
sarl
xor
nop
arpl
and
pusha
xor
and
pop
mov
das
mov
loopne
fistpl
cmpsl
mov
mov
out
out
inc
cmpsb
push
push
inc
cmp
into
popf
testl
inc
call
leave
sbb
lods
add
imul
in
dec
gs
add
jnp
sub
ret
ds
in
mov
cmc
adcb
add
push
fcmovbe
xor
inc
in
add
frstor
mov
mov
pop
mov
add
and
je
sub
inc
insl
xor
mov
aas
pop
lds
or
adc
lahf
sub
ljmp
cmpsl
lcall
je
ljmp
add
leave
push
xor
fs
gs
out
daa
jne
mov
mov
cmp
data16
xchg
mov
aas
dec
repz
out
mov
lahf
mov
cmp
dec
xor
hlt
mov
stos
adc
dec
lahf
sub
push
call
xor
rclb
sbb
ret
popf
mov
loop
or
xchg
mov
mov
stc
mov
fs
inc
pushf
push
jns
dec
cmp
pop
add
outsl
inc
mov
pop
add
lcall
push
xlat
mov
loopne
fistl
testb
mov
mov
ror
imul
mov
hlt
iret
or
push
insb
push
fsubs
js
jmp
cmp
or
mov
adc
imul
aaa
sti
add
sub
add
lds
rorb
push
push
filds
fmull
out
or
add
sub
test
icebp
insb
notl
push
hlt
mov
pop
sub
movsl
mov
sbb
arpl
fnsave
jo
das
mov
pop
cmp
shr
inc
cmc
scas
mov
cltd
rorb
std
sub
lea
ficoml
std
cmc
lds
xor
stos
cmp
push
and
insl
fs
cld
xchg
jns
sbb
cs
pop
stos
scas
adc
addl
pusha
jl
data16
push
out
dec
scas
movsb
cmp
mov
mov
mov
sahf
mov
push
jns
add
sbb
mov
fwait
push
call
jmp
movsl
add
jo
mov
mov
arpl
inc
jl
cmp
pop
sbb
sbb
adc
or
inc
cld
ja
inc
xchg
pop
and
or
frstpm(287
in
xlat
repnz
sar
xchg
roll
push
popf
push
cmp
scas
dec
or
mov
adc
mov
mov
imul
cmp
or
inc
test
test
hlt
sbb
lret
dec
cmp
imul
stos
aas
pop
pop
mov
jl
jbe
cwtl
orb
ss
xchg
mov
subb
xchg
repz
dec
pop
xchg
or
cwtl
and
push
testl
xor
push
test
push
dec
aam
pop
jle
clc
mov
shrl
lcall
pop
xor
inc
mov
lret
xchg
cmp
repz
adc
loopne
je
pushf
adc
dec
jne
sub
sub
mov
pop
cmp
cmp
inc
lahf
cli
rcr
stos
test
rclb
push
push
bound
int3
push
repz
out
les
sbb
jmp
xchg
bound
add
ja
sbb
dec
mov
mov
ds
adc
mov
cwtl
and
xchg
cmpsl
or
out
jns
cld
xorb
dec
ficompl
sub
push
movsb
in
nop
inc
iret
daa
aad
pop
mov
imul
jnp
and
dec
js
loope
sub
jge
loopne
popf
jg
xor
inc
jecxz
inc
and
aas
mov
in
pop
loopne
lock
adc
sbb
mov
push
out
aad
fbld
sub
in
xchg
cmp
xchg
push
out
stos
and
sub
ret
insb
sub
jae
mov
cwtl
and
dec
out
mov
add
and
fildll
aaa
mov
sbb
lds
adc
insl
mov
cmp
pop
arpl
call
jecxz
pop
xchg
jae
cmp
movsl
ja
lahf
jg
mov
add
mov
cs
push
test
inc
movsl
hlt
movsl
pop
mov
stos
xchg
loope
sub
imul
inc
or
shll
test
pop
xchg
mov
or
or
dec
in
sub
lret
sub
sbb
pop
cld
sti
mov
xchg
add
fwait
cwtl
cmpb
xchg
mov
cmp
imul
add
and
lret
int3
imul
aaa
sbb
stos
inc
outsl
sbb
call
daa
inc
lea
dec
push
pop
js
xlat
inc
repz
jb
lods
and
addl
dec
test
out
iret
mov
add
repz
lahf
pop
fdivs
jne
pop
je
pop
cmp
push
in
lret
sub
xchg
dec
mov
mov
gs
and
xor
add
jno
iret
sbb
fsts
lret
pop
mov
add
pop
addr16
adc
and
xor
adc
cwtl
dec
idiv
arpl
jns
adc
mov
or
jecxz
sbb
sti
cmp
jno
decl
pop
fisubrs
lahf
sbb
imul
int3
call
jp
dec
sbb
jnp
dec
leave
rorb
ret
or
sub
pop
xor
adc
sub
ja
inc
sbb
push
sub
xor
lods
call
arpl
and
inc
ljmp
mov
mov
ss
pop
cmp
push
pop
adc
pop
das
pop
loopne
insb
arpl
or
xchg
cmc
jp
pushl
push
mov
in
push
dec
xchg
or
popf
xor
and
fistpl
mov
add
xchg
mov
mov
cld
mov
and
js
fldl
aas
inc
push
fstpt
jge
mov
clc
push
roll
jno
cmc
inc
push
nop
lea
je
fwait
leave
or
xchg
sbb
out
mov
adc
xchg
pushl
xor
jo
inc
out
in
add
mov
mov
push
stos
aaa
stos
jnp
lea
mov
repz
add
ja
inc
jns
test
pop
into
imul
mov
ljmp
test
leave
and
sub
pop
mov
andb
and
inc
lcall
mov
or
or
imul
pop
dec
int3
imul
fisubrl
xchg
in
call
xor
mov
jbe
dec
dec
add
and
aad
adc
mov
les
ja
inc
mov
xchg
xchg
jmp
mov
sbb
fstpt
or
sub
sub
mov
pushf
loop
push
xchg
rcr
mov
in
jle
leave
jbe
push
jbe
cltd
jp
rcr
sarb
or
in
cld
jl
hlt
lret
xor
mov
shrb
call
mov
cmp
adc
test
mov
cmpsl
jg
into
ffreep
adc
ds
loop
pop
idiv
and
cmpsb
jae
les
aas
enter
mov
mov
lcall
sarb
push
push
and
ss
add
or
push
xchg
repnz
inc
nop
clc
lcall
movsb
inc
outsb
js
jae
mov
sbb
push
mov
je
test
pusha
enter
in
dec
mov
inc
fdivr
out
testl
daa
sbb
das
mov
or
pop
in
and
adc
adc
addr16
pop
cwtl
inc
adc
xor
add
xor
and
sub
and
nop
or
jl
in
pop
fcomi
in
jl
daa
out
scas
ffreep
add
dec
push
adc
int3
das
cli
leave
inc
add
mov
jne
insb
test
mov
add
mov
or
mov
push
idivl
or
sbb
dec
push
xchg
mov
push
adc
mov
mov
subb
mov
int3
jae
imul
std
out
movsl
sub
xor
mulb
jecxz
pop
jne
sti
movsb
xchg
and
and
fiaddl
push
or
mov
fnstcw
and
cmpb
int3
scas
cmp
dec
cmp
sbb
and
pop
ret
pop
das
lcall
in
fwait
adc
and
addl
aad
out
rolb
sbb
imul
add
arpl
xchg
jbe
and
xor
in
hlt
adc
ret
dec
xlat
cmp
test
xchg
xchg
int
sbb
adc
mov
cmc
xor
inc
and
sub
push
cli
shrl
adc
lods
add
gs
jmp
pusha
int3
test
cmp
test
jae
mov
ds
jge
fdivp
leave
test
push
sub
mov
inc
xor
hlt
pop
aam
lods
faddl
dec
in
jnp
pop
lahf
xor
inc
push
dec
cmp
cltd
sbb
or
mov
into
pop
push
pop
push
dec
cmpsb
fwait
inc
mov
or
mov
xor
arpl
cmc
jbe
fstpt
jns
push
or
cmpsl
pop
or
ficomps
iret
sub
mov
cmp
mulb
mov
popa
repz
jmp
push
mov
or
add
mov
fbld
loope
stc
addr16
daa
jbe
mov
pop
jmp
call
dec
clc
stos
ficoml
cld
fs
jnp
bnd
clc
cmp
aas
sub
fsts
adc
jmp
test
test
arpl
mov
mov
add
stos
fwait
iret
shll
push
movsl
movsl
add
adc
lock
fwait
daa
jnp
sbb
adc
dec
rol
jb
rcrl
cmpsb
imul
repz
xchg
outsb
mov
mov
cmpsl
inc
jb
cwtl
inc
sarl
repz
ja
inc
mov
scas
sti
jbe
or
inc
sbb
out
sbb
adc
std
cmp
cmp
jge
into
cmc
adc
pushf
pushl
inc
sbb
pop
sahf
idivb
adc
stos
or
sub
ret
mov
dec
jb
dec
xchg
or
std
adc
test
push
lea
mov
pop
adc
fimuls
push
mov
mov
cmp
addb
sub
fidivrs
in
and
and
dec
cmp
aas
or
mov
fmull
add
inc
adc
jns
fnsave
inc
pop
lahf
movb
and
repnz
repnz
push
sbb
jle
mov
jmp
mov
sub
pop
push
mov
and
jbe
xchg
mov
setbe
movsl
cmp
stos
jmp
ret
sarl
mov
dec
cmpsl
xchg
sub
mov
js
mov
or
inc
mov
pop
movsb
data16
inc
pusha
repnz
mov
inc
outsb
popf
jp
mov
pop
push
sbb
jle
ret
jbe
mov
int3
mov
in
fsubs
cmpsb
insb
nop
pop
repz
xchg
push
jmp
into
ret
cmp
mov
std
rclb
leave
mov
push
repz
xlat
xchg
enter
push
mov
or
pop
mov
pop
jb
sbbl
leave
push
adc
call
fsubrl
or
lret
addb
jae
jne
pushf
dec
test
xchg
xchg
mov
jl
int3
ret
sbb
xchg
movsb
cmp
sbbb
sbb
cltd
jae
data16
xchg
pop
cmp
clc
xchg
xchg
add
outsl
jnp
xchg
cltd
adc
fdivs
hlt
mov
pop
imul
mov
mov
dec
dec
adc
sbb
in
leave
mov
jo
push
leave
push
ja
and
ljmp
in
xchg
enter
cmc
xor
mov
roll
pop
xlat
adc
pop
mov
sub
fisubl
sbb
cltd
xchg
xlat
aaa
lea
rcll
adc
mov
fucomp
jle
movsb
test
and
push
mov
int
or
mov
fs
inc
mov
sbb
jne
scas
and
test
fsub
sbb
inc
inc
mov
sti
pusha
pop
dec
in
cmp
jp
jae
mov
in
adc
mov
jae
push
adcl
mov
or
adcl
arpl
add
fimull
and
jle
scas
adc
add
lret
lea
jne
mov
mov
test
scas
divl
pop
les
and
in
inc
cwtl
sbb
fisubl
nop
aas
jecxz
inc
sahf
push
loopne
xchg
push
movsl
add
adc
fisubl
loope
xchg
fbstp
enter
mov
lea
mov
aad
arpl
and
cs
sar
cmpsb
inc
mov
shll
fdivrs
in
jecxz
pop
and
arpl
aad
loop
scas
int
inc
or
cmpsl
jl
sbb
jns
xor
lods
imulb
inc
jb
mov
sbb
test
mov
xchg
mov
enter
orl
and
pop
fidivl
test
sbb
arpl
lret
mov
inc
add
clc
cld
sub
mov
pop
sbb
arpl
fsubrp
push
nop
popa
or
cmp
scas
mov
jg
pop
stc
adcl
out
dec
pop
adc
mov
adc
lret
in
cmpsb
iret
dec
dec
test
std
jne
scas
jnp
cwtl
sub
out
cmc
jb
pop
fisubrs
and
clc
cmp
incl
sti
dec
dec
dec
js
popa
inc
mov
dec
orb
lods
xchg
fadd
xor
cmpsl
adcb
cmpsb
icebp
mov
xor
push
pop
ret
xor
add
push
mul
out
pop
sarb
or
sbb
nop
mov
mov
mov
gs
pop
pop
fildll
sub
in
shll
insl
jl
mov
test
cmp
sub
loopne
subb
aaa
ds
inc
aad
test
dec
pop
sbb
mov
dec
mov
xchg
and
call
repnz
xchg
jb
sbb
adc
mov
cmp
pushf
scas
lahf
mov
in
test
mov
sahf
adc
xorb
shll
push
jnp
mov
cld
push
lods
mov
adc
pop
fiaddl
pop
dec
or
mov
push
loope
cli
cli
mov
cmp
adc
or
mov
fidivrl
dec
in
sub
js
data16
ficompl
sbb
dec
jae
insb
xchg
movsl
inc
gs
shll
data16
bound
fiaddl
loopne
and
mov
mov
std
sbb
aaa
xchg
mov
inc
sbb
cmp
out
adc
jge
or
imul
jb
mov
lock
xchg
imul
fcom
lds
arpl
xchg
xchg
std
rcr
mov
in
mov
pop
aad
jb
pop
nop
dec
jmp
sti
cli
ret
or
cmp
stos
push
pop
pop
in
and
cmp
movsl
pop
fbld
mov
shll
scas
pop
fsubs
cmp
xchg
mov
mov
mov
push
loopne
mov
sbb
les
push
pop
push
push
or
xchg
sub
pop
ret
add
enter
inc
outsb
sub
jmp
ljmp
fistpl
movsl
xchg
ds
push
and
and
mov
andl
xchg
xor
pop
dec
in
repnz
dec
cmp
sbb
add
mov
dec
aad
data16
xchg
or
add
repz
push
pop
stc
jne
lea
ljmp
mov
mov
movsl
mov
adc
fs
cmp
into
dec
dec
insl
rorl
mov
and
mov
jns
sbb
lea
popa
das
inc
add
jp
jmp
cld
ja
inc
or
xchg
cltd
pop
fisttpll
daa
mov
mov
cmpl
sbb
arpl
jo
and
std
mov
sahf
pusha
mov
mov
es
xchg
add
pop
aas
jno
jns
push
paddd
popf
clc
push
addb
test
cltd
fcmovu
insl
jp
in
and
jnp
addr16
pop
mov
outsl
popa
pop
dec
xlat
ljmp
int3
ret
xorl
icebp
lods
xlat
popa
mov
mov
loope
sahf
in
push
sub
jo
outsl
dec
repz
mov
xor
pop
ljmp
xchg
movl
sub
sbb
ds
out
cmc
shl
jecxz
inc
push
dec
mov
fisubs
testb
mov
pop
leave
int3
pop
push
pop
jbe
rorl
das
and
pushf
mov
fwait
jno
jo
and
call
cld
ret
cmpsb
outsl
leave
jle
inc
xchg
bound
xchg
mov
xchg
sahf
mov
mov
xorl
rcrl
jns
fsubs
mov
sbb
lock
xor
fs
jno
clc
mov
jnp
jb
add
out
mov
lcall
or
pop
pop
mov
dec
mov
ror
cwtl
das
cmpsl
fildl
add
cwtl
xor
xchg
xchg
jnp
divb
test
scas
insb
or
into
sub
lds
dec
or
push
imul
int
mov
test
push
add
pop
into
lds
or
mov
inc
inc
pop
hlt
or
xchg
inc
insb
cmpsl
push
dec
repnz
outsb
fdivrs
mov
loope
pop
mov
addb
iret
test
jo
je
mov
push
jmp
stc
fidivrl
fmull
clc
out
imul
call
insb
xchg
addl
jae
stos
jbe
int
inc
mov
imul
pop
xor
sub
popa
pop
cmc
inc
mov
push
test
lea
jne
ja
push
jmp
xor
cltd
es
rcrl
loop
jle
xorl
sub
stos
imul
rcrb
jl
xchg
cmc
callw
push
imul
jne
das
call
xchg
incb
sysenter
jno
xor
push
aas
add
mov
cmpsl
mov
ds
shr
pusha
into
dec
enter
sahf
sub
jne
pop
jecxz
out
lret
lods
and
icebp
fs
fildll
xlat
pop
push
sti
testl
cmp
fwait
arpl
or
cwtl
jbe
loopne
or
jb
mov
negl
push
shlb
fcompl
mov
in
pop
or
mov
push
add
cli
xchg
add
sar
dec
and
push
loope
dec
and
hlt
and
push
fcomip
ret
scas
mov
add
mov
jb
filds
jmp
adc
call
mov
ljmp
or
xchg
adc
xor
clc
mov
insb
xchg
cmpsl
pop
lds
aaa
pop
insb
leave
xor
add
fistpll
or
stos
push
shll
mov
jge
fldl2t
mov
cmpsb
pop
mov
push
push
mov
mov
shrb
pop
icebp
pusha
cld
das
mov
pop
cmp
push
scas
push
iret
pop
into
popa
add
ror
daa
ss
push
jne
out
mov
ljmp
leave
nop
aaa
lret
sahf
js
movsb
pop
enter
mov
cmp
jg
sarb
ds
mov
or
pop
inc
mov
adc
in
push
inc
sbb
mov
fstpl
adc
or
mov
mov
and
inc
stc
sub
mov
gs
pop
dec
enter
pop
int3
xchg
xor
mov
fimull
int
adc
push
incl
mov
out
std
out
xchg
pop
dec
ds
divl
aas
sub
mov
xlat
ds
enter
dec
jecxz
jnp
and
jbe
mov
and
out
lods
imul
and
int3
cmp
add
fdivrp
mov
mov
movsb
inc
mov
inc
repz
popf
mov
dec
xchg
les
push
mov
loop
in
mulb
lea
and
cmp
cwtl
outsb
mov
mov
js
cmp
mov
mov
dec
mov
imul
push
jns
mov
and
fldl
sub
inc
sbbb
adc
mov
mov
fsubrp
je
xlat
or
xchg
ja
add
aad
pushf
aad
imul
or
int3
cltd
or
mov
clc
jb
pop
pusha
cmpsl
cmpsb
rcll
test
test
mov
js
lcall
sahf
out
aaa
ja
push
fists
test
cmpsb
fwait
icebp
stc
stc
jae
idivl
mov
push
xchg
fistl
in
sub
xchg
push
jl
cs
testl
push
bound
cs
iret
dec
pop
pop
test
cwtl
adc
jno
xor
int
push
cmp
fldcw
mov
hlt
test
push
mov
xor
mov
push
mov
add
sub
pop
pop
xorb
mov
pop
shrl
std
orl
gs
push
lds
loope
and
mov
enter
and
int
iret
ror
pop
ret
lahf
mov
xchg
xor
aad
shrb
and
xchg
cltd
jmp
or
pop
insb
jbe
or
leave
ds
mov
add
test
adc
sbb
imul
xor
ja
inc
push
pop
pop
or
inc
dec
ljmp
mov
dec
fucomip
mov
adc
xchg
fwait
test
scas
shll
das
xchg
dec
imul
shrl
popf
mov
call
xor
sub
xchg
scas
in
sbb
mulb
popa
leave
cmp
aaa
sbb
push
fstpt
add
sahf
dec
adc
sub
pop
iret
sbb
sbb
mov
shrb
fidivl
fildl
xchg
ret
adc
push
loope
mov
lds
jb
addb
aad
cmp
inc
addb
cld
xchg
push
push
ds
nop
mov
mov
mov
sub
sub
lea
fisubrl
int3
mov
mov
add
nop
jl
mov
add
test
adc
pop
dec
hlt
vmovapd
mov
and
push
cmovp
shrb
sbb
pushf
xlat
push
sahf
sbb
loopne
addr16
sub
xor
arpl
das
sahf
mov
dec
push
add
or
push
pushf
mov
imul
pop
nop
pop
sbb
cmp
shlb
mov
pop
lret
inc
jge
stos
arpl
push
outsl
and
je
lret
enter
inc
popf
arpl
out
xchg
outsl
scas
xchg
and
movsb
out
cmp
cld
gs
insb
pop
push
repz
xor
mov
push
ds
je
inc
jp
in
movb
mov
jmp
push
cmp
or
lods
jns
arpl
pushf
xchg
imul
aas
lods
pop
push
clc
ss
int
sub
push
gs
inc
in
scas
int
ds
sbb
fsubp
sahf
imul
cmp
test
jmp
out
jae
rclb
cwtl
inc
test
arpl
je
inc
lods
fs
incb
cmp
dec
shrb
push
fsub
je
movsl
movsl
leave
and
pop
mov
mov
jno
cltd
jns
pusha
int3
cwtl
dec
pushf
loope
lahf
rorl
sbb
mov
dec
arpl
lods
push
inc
daa
jecxz
movsb
sub
mov
jecxz
ss
jmp
mov
push
or
push
ficomps
sar
mov
xchg
inc
mov
sahf
negb
inc
test
sbb
cmp
insl
inc
aas
mov
int
or
add
test
jg
push
push
and
cli
cmpsb
jmp
loopne
dec
sbb
scas
js
outsl
dec
mov
popa
xchg
out
jne
jns
dec
inc
aam
jg
jo
fistpll
sub
jp
pop
adc
mov
bound
pop
aad
cmpsl
push
adc
pop
popf
jl
mov
jmp
mov
jb
enter
cmp
jb,pt
mov
mov
xchg
lahf
sbb
mov
mov
dec
rcl
outsl
and
push
test
cld
sahf
cmc
test
cmp
mov
jg
jecxz
pop
or
std
stos
pop
push
xor
mov
lea
sub
jno
push
decl
cmp
sti
sbb
inc
dec
mov
dec
shll
cwtl
lcall
dec
movsb
dec
sbbb
ret
add
insl
xor
js
pop
cmp
jns
adc
ds
mov
dec
xchg
insl
cltd
std
inc
nopl
push
lock
jae
addr16
mov
or
lods
push
xor
idivl
xor
or
mov
loopne
add
pop
jge
mov
cmpsl
mov
loope
addr16
xchg
cld
in
psubq
arpl
mov
jge
inc
aaa
mov
sarb
pusha
add
ficomps
sbb
insb
test
pop
hlt
dec
dec
es
mov
sbb
lods
mov
jae
mov
fucom
adc
sub
and
ljmp
aas
rorb
fmuls
je
lods
stos
adc
inc
movsl
loopne
adcl
andb
outsl
cmpsb
jb
pop
cmpsl
or
aad
out
jle
jbe
lods
subl
cmp
cmp
jg
jno
add
mov
sub
movsl
dec
adc
ja
or
add
and
ret
shr
ds
jg
jb
pop
inc
jge
in
aaa
cmc
jecxz
pop
or
sbb
or
jno
adc
xchg
lahf
inc
jmp
xchg
and
xchg
push
lea
sbb
sub
sub
ja
add
aaa
out
icebp
mov
cmp
xchg
rcr
testl
jno
xor
daa
xchg
add
dec
jg
xor
insl
loope
lret
sbb
adc
dec
pushf
in
mov
arpl
lcall
std
sbb
out
fstpt
movsb
push
xchg
iret
fisttpl
imull
and
push
or
js
cmpl
lods
inc
jno
and
in
rcrb
jns
loopne
or
pop
cwtl
cmp
cmpsl
add
daa
push
mov
xchg
cmp
ljmp
mov
mov
adc
push
pop
jmp
jbe
push
cmpl
inc
mov
mov
mov
insb
dec
and
xchg
push
xchg
outsb
loopne
mov
cs
ds
dec
cmpsb
sbb
mov
movsl
dec
and
adc
sub
xchg
mov
movsb
and
xchg
cwtl
repnz
lahf
fadd
cld
xchg
xchg
jnp
and
loope
cmp
jp
push
jle,pn
push
insb
mov
in
inc
mov
pushl
xchg
ss
adc
pushf
dec
sbb
cmp
sbb
cmp
push
add
pop
jl
stos
xchg
insl
push
mov
cli
rorl
or
cli
out
jnp
pop
cli
cmpsb
mov
fidivl
sub
lds
iret
dec
mov
imul
or
aad
out
jno
ss
lds
jb
scas
mov
adc
call
pop
cmpsl
out
and
pop
push
adc
mov
outsb
fnstcw
push
fildll
lods
dec
or
cld
lahf
or
sbb
xchg
mov
push
mov
lret
xor
loopne
fsubrs
inc
inc
pop
cmp
bound
pop
cltd
jbe
dec
out
pushf
adc
or
fldt
adc
push
push
xchg
push
xlat
sbb
xchg
mov
add
xchg
and
pop
rol
jle
sbb
fcompl
jbe
push
pop
lds
hlt
cs
ss
mov
xchg
roll
add
scas
stos
mov
xor
int
mov
scas
sub
mov
and
js
adc
ret
push
pop
pop
fwait
inc
outsl
push
hlt
inc
pop
test
jg
sbb
pop
lea
xchg
mov
mov
daa
or
mov
in
cltd
xchg
cwtl
cltd
cmp
mov
push
dec
xorb
loopne
sbb
stos
lds
gs
stos
pop
stc
stos
inc
insl
andl
movsb
ljmp
mov
inc
movsl
fsub
jne
test
mov
jb
das
inc
scas
in
mov
pop
xchg
inc
fisubl
dec
enter
lods
rorl
mov
fisttpll
fidivrs
ss
xor
mov
mov
add
add
add
jb
flds
push
pop
in
faddl
inc
dec
sbb
mov
xchg
fstl
push
xor
adc
jae
mov
push
adc
mov
ss
js
xor
fcmovne
xchg
test
pop
gs
out
flds
imul
pop
repz
lahf
xor
inc
add
inc
mov
mov
shrb
outsb
pop
lcall
jg
jae
fsts
ja
mov
lods
nop
ja
push
dec
push
jp
int
add
neg
orb
or
mov
push
xchg
and
pop
or
pop
ret
test
dec
sti
aas
push
push
in
out
pop
sub
push
lcall
ljmp
lcall
jnp
mov
pop
mov
out
jne
sub
insl
jecxz
cwtl
add
add
xor
jle
lds
xor
dec
or
push
mov
inc
push
mov
or
inc
je
jno
inc
xor
mov
mov
jnp
jmp
sbb
jne
dec
add
lock
idivb
pop
lds
jecxz
loopne
ficoml
sbb
mov
or
mov
shlb
cmp
negb
push
aam
mov
inc
lcall
outsb
cmp
and
adc
stos
jl
mov
mov
cs
push
incb
andb
int
fadds
sarl
fstps
add
roll
insb
push
or
jo
add
sub
fcomps
mov
mov
repnz
add
push
or
lahf
push
mov
adc
fs
push
call
clc
icebp
lcall
test
repnz
xchg
add
add
aad
dec
je
adc
push
stos
jnp
loope
or
out
push
inc
mov
aad
orl
and
arpl
mov
jae
mov
es
cmp
fstps
orl
iret
or
cmp
pop
loopne
xchg
xchg
dec
inc
jg
js
lret
lds
dec
mov
add
cld
jecxz
add
sarl
mov
push
cli
dec
cs
data16
fs
mov
lret
add
sbbl
push
pusha
cmp
insb
pop
inc
scas
rcll
lods
scas
or
cli
xchg
push
ljmp
inc
mov
adc
pop
jne
xchg
cli
sbb
idivb
mov
hlt
or
jb
aas
adc
pop
adc
loop
xorb
mov
adc
shlb
cmp
adc
jne
xchg
and
push
cs
pop
and
and
add
push
repnz
pop
sti
xchg
or
adc
lods
cmp
pop
inc
sub
lahf
sbb
mov
mov
pop
adc
and
jg
dec
repz
shlb
imul
inc
xor
sti
push
es
xchg
aas
leave
and
push
movsl
add
iret
mov
rsm
fnstenv
mov
test
adc
push
dec
imul
jmp
lea
mov
and
mov
add
loope
pop
push
das
out
xor
mov
jne
jno
out
loop
ds
pop
into
lds
shll
pop
push
and
jmp
xor
push
into
popa
dec
movb
fbstp
ja
lods
cld
xchg
cli
movl
jl
push
cmp
fs
aad
pop
push
cmp
dec
sti
repnz
jbe
sub
sub
outsl
imul
mov
mov
fisubrl
sbb
add
cmp
idiv
xchg
push
push
jns
mov
pop
aam
mov
ficompl
es
idiv
push
fadd
inc
enter
sub
cmpsl
jecxz
or
push
and
fs
or
pusha
clc
dec
jo
jno
mov
xlat
repz
xor
mov
lds
pop
and
sub
mov
stos
cmp
or
test
push
out
mov
and
pop
push
mov
mov
jg
cmpsb
push
call
enter
jbe
xorb
mov
sub
clc
add
push
enter
adc
add
orl
adcl
xor
out
inc
add
nop
mov
jmp
in
xchg
sub
test
subb
jnp
and
sub
or
xchg
outsb
test
and
xorb
jo
or
jmp
mov
call
jp
sbb
or
mov
arpl
ret
imul
jle
lds
mov
push
fldl
pop
aaa
or
rcrl
adc
in
lods
push
mov
or
pop
icebp
fldt
dec
mov
flds
notl
mov
stos
jmp
pushf
adc
mov
sub
pop
pushf
divb
clc
out
daa
out
dec
push
addb
adc
ficompl
xor
mov
enter
cmp
pop
dec
mull
rolb
flds
loopne
inc
and
sub
stos
enter
dec
xlat
xchg
idivb
fstps
jmp
push
jmp
les
pusha
adc
divl
fmuls
repz
sbb
das
mov
cmp
push
inc
or
ss
push
iret
pushf
push
stos
addb
mov
les
cmp
shll
add
mov
or
jge
jge
sub
dec
inc
ja
clc
fsub
out
xchg
jb
aaa
outsb
lods
adc
cli
sbb
sbb
or
sbb
adc
lock
jae
push
test
sub
mull
repnz
and
jnp
mov
xchg
repnz
test
add
xchg
inc
add
dec
xor
and
cmp
jo
add
jnp
pop
dec
mov
stos
sti
xlat
push
xchg
mov
and
aad
sbb
aad
sarl
xor
jno
mulps
or
test
call
pop
out
pushf
xchg
mov
scas
clc
mov
icebp
xor
mov
and
mov
cmpsl
test
movsb
cmpl
out
out
orl
in
repz
inc
push
ja
aam
dec
jnp
pop
push
cmp
bound
pop
lds
dec
pop
cmp
das
add
mov
adc
orl
xchg
mov
andl
mov
pop
cmc
mov
cltd
or
inc
das
dec
jle
aad
ljmp
mov
push
or
iret
test
test
lods
repnz
pop
jae
into
adc
nop
push
enter
out
dec
push
and
sbb
outsb
fsubp
push
xchg
out
ljmp
cmpsb
dec
or
repz
lahf
imul
lret
mov
inc
sbb
movsl
stos
sbb
adc
xor
mov
add
jg
cld
xor
cmp
fists
outsb
mov
shl
add
sti
jg
ds
dec
sbb
loope
subl
call
jns
rcr
rolb
iret
dec
negl
xor
xchg
mov
mov
push
inc
dec
lea
xor
stc
cmc
dec
sub
rcrb
mov
adc
dec
outsb
cmc
mov
jo
xchg
imul
fmul
jg
sub
add
xor
lods
sbb
and
jl
js
popf
pop
dec
addr16
pop
cmp
lret
daa
rorb
adc
or
add
cmp
lret
mov
ret
fsubp
fcmovne
mul
cmp
daa
dec
xchg
inc
mov
mov
push
cmp
cmp
mov
negl
mov
xchg
cli
fcmovne
xchg
mov
pushf
sbb
cmp
mov
mov
out
icebp
pop
das
roll
mov
pushf
sbb
sub
inc
stos
clc
dec
xor
cmp
mov
inc
dec
sti
dec
insl
add
stos
push
pop
push
push
or
adc
push
shlb
mov
push
ret
cmp
test
xor
adc
mov
scas
xchg
inc
adc
xchg
je
out
fcomi
cmp
sti
lods
push
outsl
inc
fcomps
lock
sub
add
call
cmp
fildll
in
sbb
popf
xchg
dec
fdivl
sub
cs
in
shrb
adc
cltd
ret
dec
jne
lea
pop
mov
addr16
jmp
sbb
push
orb
fisttpll
jecxz
add
xchg
sub
in
and
sahf
and
lods
ret
gs
mov
in
and
test
aam
popf
test
cmp
aaa
pop
adc
mov
les
outsl
jp
mov
bound
xor
mov
repz
pop
lret
cmp
mov
sub
dec
jle
out
xchg
movsb
inc
scas
xor
inc
lds
adc
dec
push
in
mov
adc
push
pop
mov
and
gs
pushf
idiv
lea
mov
push
cmpsl
push
je
sbb
xor
lods
and
repz
adc
orb
adc
lret
jl
outsb
adc
sub
orb
dec
cwtl
xchg
xchg
cmp
mov
sti
es
fwait
xchg
stc
cld
shr
jb
mov
mov
mov
pop
inc
loopne
fsub
fidivrs
jb
les
testb
loop
sub
xchg
dec
jecxz
fcomip
and
jg
cmp
xor
cmpsb
cld
popa
cmc
hlt
or
inc
sbb
adc
cltd
pop
cmp
dec
mov
xor
or
insl
sbb
jmp
xor
dec
cmovl
lds
mov
mov
and
lea
adc
or
jnp
or
ret
stos
cltd
sti
cs
cli
outsb
lret
mov
aas
adc
fldenv
pushl
mov
jmp
sti
test
in
mov
cmp
mov
loop
clc
pushf
push
lods
push
or
test
popf
ljmp
adc
mov
out
inc
sbb
inc
mov
push
mov
xor
nop
add
insl
inc
fwait
push
jg
cmp
push
push
int3
stos
stos
test
jge
jmp
movsl
pop
mov
shll
cli
ds
xorl
outsl
jmp
mov
inc
sub
xorb
push
push
cmp
pop
aam
mov
fwait
jp
std
cmp
mov
gs
or
xor
pusha
iret
movsb
mov
imul
mov
imul
and
and
jno
cmp
and
push
psubb
mov
adc
scas
and
bound
adc
xchg
stc
test
xchg
rorl
lahf
movsl
loope
xchg
mov
fistpl
cmc
mov
out
add
and
jb
mov
jbe
ja
pop
push
jmp
add
xor
mov
mov
imul
xchg
aam
mov
sub
pop
in
sbb
into
xor
xchg
xchg
in
add
into
lahf
loop
fistl
sub
inc
jnp
adc
xchg
fisubs
lret
xor
ds
jle
pop
adc
mov
repz
or
out
dec
pop
sub
mov
lods
repnz
lret
call
or
mov
mov
repz
aas
pop
test
test
jnp
clc
mov
les
faddl
jecxz
stc
mov
das
pop
pop
xor
stos
loope
ja
js
cld
pop
fisttpl
xchg
loope
sti
add
ret
mov
dec
cmp
push
cli
ret
les
mov
xchg
pop
outsl
or
jecxz
xchg
lret
jecxz
aad
or
sbb
push
mov
xchg
mov
in
xchg
pushf
mov
ds
jecxz
roll
rclb
frstor
lcall
pop
push
cld
gs
test
loope
ret
sbb
out
fwait
cltd
mov
cs
xor
inc
inc
adc
stos
push
jmp
lods
xchg
jb
mov
mov
testl
movsb
insl
stos
sub
fcomi
inc
repnz
jmp
insl
aas
stos
out
and
cmc
jns
pop
enter
or
enter
sub
push
arpl
push
in
jg
dec
add
add
dec
push
outsb
nop
add
cmc
jg
pinsrw
stc
mov
cmpsl
ja
jecxz
fstpt
loop
cmc
ret
pop
adc
data16
jge
vmread
inc
push
inc
mov
jnp
rol
test
addb
ljmp
push
neg
dec
cmp
xchg
pop
lock
rorb
or
fwait
cmpsb
jnp
xor
stos
test
jl
cld
jns
jbe
pushf
jne
push
add
mov
xchg
xchg
das
dec
lret
sti
std
mov
cld
rolb
inc
jnp
add
ja
mov
sub
add
scas
mov
mov
rorb
cmc
jmp
xchg
jle
and
push
mov
fbld
dec
cs
popf
shrl
jno
mov
jge
sarb
jmp
mov
mov
push
xchg
push
cwtl
repnz
in
add
sahf
fstpl
imulb
mov
pop
hlt
mov
inc
nop
xchg
fmulp
xchg
stos
jmp
xchg
jne
repz
inc
jecxz
and
xor
mov
mov
cwtl
adcl
cltd
mov
scas
mov
jo
pushf
push
sbb
push
adc
mov
repnz
push
sub
and
mov
adc
jns
daa
orl
sbb
push
and
dec
fwait
xchg
mov
dec
and
int3
pop
adc
fs
std
cmc
scas
iret
in
in
dec
cmpsl
jns
push
cmp
out
cbtw
sbb
imul
dec
push
movsb
arpl
pop
ljmp
rorl
test
out
mov
fnsave
lods
daa
vmovaps
pop
xor
cltd
stc
sbb
lds
jnp
push
in
dec
mov
push
dec
lods
mov
jp
repnz
loope
inc
add
lret
out
jp
pop
adc
outsl
inc
xchg
fidivrs
inc
mov
iret
popf
jns
xchg
push
movsb
adc
push
xchg
pop
stc
gs
aad
sbb
sbbb
mov
mov
aam
shlb
fistps
dec
loopne
inc
lods
outsl
out
mov
jbe
dec
xor
mov
popa
inc
loope
inc
sahf
lds
jge
jg
mov
inc
or
cli
push
lret
and
stc
hlt
scas
or
dec
xchg
decb
cmp
jb
push
add
and
inc
dec
pop
movsb
lahf
push
xor
in
or
rclb
jg
mov
push
mov
scas
mov
sub
subb
test
pop
lds
int3
dec
testb
xchg
mov
insl
push
fmulp
xchg
pop
add
mov
inc
pop
scas
scas
mov
out
shr
mov
std
mov
insl
shll
jl
push
popa
fs
cmp
push
jbe
clc
out
dec
fcom
shll
cmp
hlt
sub
cmp
jbe
sar
mov
cmpsl
mov
sub
xchg
icebp
or
push
dec
add
mov
dec
mov
xchg
outsl
dec
in
add
jb
lret
sbb
mov
xchg
cmc
imul
fs
cmp
es
movsl
das
lret
sub
mov
sub
jns
push
out
pop
loopne
cmpsb
mov
js
fdivr
and
jp
pop
inc
adc
lahf
xor
addr16
mov
shrl
and
push
int
xor
repnz
mov
cmp
jg
jecxz
sahf
add
insl
andl
inc
sub
xchg
pop
add
jmp
test
cmpb
push
inc
pop
lods
fistl
outsb
pushf
bound
jbe
and
xor
mov
lahf
arpl
lret
pop
insb
and
xor
sahf
int3
fwait
dec
jns
add
add
pop
sbb
xchg
mov
xchg
repz
xchg
and
daa
or
repz
add
mov
cmc
das
lds
sub
xor
lahf
leave
dec
not
out
push
add
clc
jg
sub
mov
repz
aam
popf
push
cltd
inc
hlt
lret
pop
dec
in
xor
mov
sub
shl
je
xor
sar
mov
xor
out
lret
add
cmpsl
test
jl
jmp
mov
out
unpcklps
push
jns
aas
push
imul
lods
jmp
insl
mov
aad
fdivr
icebp
push
jbe
mov
push
cld
cs
movsl
std
testb
ficompl
push
push
fldcw
stos
jl
pop
inc
pop
xor
mov
mov
cmp
jmp
xchg
mov
sbb
std
inc
add
mov
hlt
fwait
mov
bswap
pop
adc
dec
inc
sbb
lock
jbe
lea
sbb
mov
pop
push
das
cmp
outsb
sub
out
jbe
insl
mov
sbb
sbb
out
jno
hlt
mov
outsb
data16
and
out
sbb
sbb
ret
dec
repnz
fmuls
cltd
inc
insb
rorl
ds
clc
subb
push
pop
adc
inc
psrlq
xor
aaa
xchg
stos
and
pop
push
push
xor
mov
jo
add
inc
fdivrl
cmpsl
push
cmpsb
or
dec
and
stos
sbb
into
movsl
adc
iret
in
add
pop
lret
sbb
dec
int
cs
and
jb
dec
loop
divl
popa
and
nop
test
rcrb
outsl
push
xchg
xchg
mov
xchg
jecxz
cwtl
pop
aaa
pop
push
pop
shlb
imul
fninit
lahf
in
test
cmp
push
push
orb
movsl
push
add
insb
addr16
in
mov
jae
cmpsl
mov
fst
clc
in
clc
dec
jno
les
pop
stos
mov
mov
mov
push
data16
dec
add
lret
push
mov
bsr
cmp
lds
mov
and
inc
mov
mov
scas
pushf
int
pop
clc
in
dec
repz
shr
mov
xor
ficoml
sbbb
jge
pop
sub
lock
pop
push
inc
icebp
sub
or
in
lods
jp
lret
incb
cmpsl
pop
outsl
jle
test
push
dec
jo
movsb
outsb
adc
hlt
push
ret
xchg
test
xchg
pop
lret
push
inc
neg
adcb
addr16
lock
jge
orl
inc
ss
insb
jns
jg
pop
lcall
jp
addb
jg
jmp
js
loopne
scas
inc
sbb
dec
push
dec
jle
mov
sbb
test
and
inc
add
xlat
inc
lea
mov
pop
pop
mov
aas
mov
hlt
cmp
pusha
mov
adc
fbld
shrl
pop
push
xorb
in
mov
incb
and
call
lods
xchg
cmp
scas
loop
arpl
pop
aam
jbe
lahf
mov
imul
cli
decl
mov
inc
sbbb
adc
bound
clc
adc
mov
jnp
jmp
pop
jno
push
enter
mov
cmp
icebp
iret
bound
leave
fildl
mov
xchg
inc
insl
or
sbb
and
xchg
and
std
jae
into
inc
cmp
xchg
addl
stos
jmp
or
cmp
rcl
test
inc
fs
xor
cmp
sub
mov
and
mov
push
test
pop
sahf
or
or
push
cltd
inc
sbbl
pop
add
shll
inc
push
inc
ret
lcall
scas
aam
outsl
jp
popf
insl
int
fdivs
pop
push
and
jns
jnp
mov
push
inc
out
mov
pop
and
xchg
es
ljmp
inc
fsubs
or
jbe
incl
xor
mov
sbb
jl
out
shrl
or
sub
jne
sub
int
lods
sbb
mov
and
sub
adc
mov
les
cmp
and
push
ret
xchg
and
and
mov
sbb
sbb
lea
ljmp
sub
and
out
stc
or
cwtl
test
and
outsl
add
sub
jg
jle
mov
sbb
shr
push
mov
dec
mov
pop
jle
shl
xor
mov
mov
jnp
daa
xor
mov
push
or
idivl
imul
insb
fistpll
push
add
add
scas
test
cli
push
pop
sub
pop
insl
addr16
pop
adc
movsl
mov
ficoms
mov
dec
test
testb
sbb
mov
xchg
aam
jge
and
mov
cmpb
mov
call
das
imul
push
and
pop
jmp
cmpsl
mov
mov
adc
idivb
outsb
movsb
adc
lret
loop
xorb
mov
sub
mov
mov
sbb
popa
mov
sub
sub
fistpl
add
mov
es
lods
or
cmc
repz
out
inc
mov
call
adc
jle
orb
jne
ja
nop
sti
hlt
adc
lods
xchg
push
xor
dec
les
cs
fwait
and
pop
addl
mov
pop
imul
mov
lock
rcll
jne
scas
jmp
lea
fstpt
sahf
cmpsl
push
enter
cmp
or
faddl
insl
les
pop
mov
adc
jle
adc
dec
mov
je
jg
loopne
fdivs
mov
ret
adc
fcomps
enter
xor
nop
xor
sahf
jno
in
aas
pop
pop
clc
mov
in
outsl
loop
movsl
xorl
push
xchg
adc
or
dec
cltd
add
test
mov
dec
sub
and
xchg
int
loop
cvtpi2ps
mov
xor
pop
push
push
mov
out
jno
fisttpll
or
mov
add
and
test
cmpsl
imul
mull
mov
bound
jge
add
ret
lock
add
hlt
popf
icebp
add
jns
mov
pop
and
insl
jbe
repnz
cmp
mov
mov
test
hlt
xor
mov
push
sti
dec
loope
ja
scas
xlat
or
push
cli
imul
lods
or
in
mov
pop
in
imul
loopne
push
xchg
out
push
dec
nop
push
shll
sar
test
scas
into
mov
fcomps
cmc
inc
movsl
scas
cltd
xchg
bound
and
mov
mov
in
icebp
stos
mov
jb
push
mov
cmp
bound
mov
dec
out
iret
dec
fwait
add
or
xchg
mov
call
xor
inc
mov
pop
ficoml
cmp
fmuls
add
push
pusha
pop
jmp
loop
lods
lods
punpckhbw
movsb
xor
pop
cmp
ds
lret
add
cmc
push
imul
shrb
jnp
push
div
or
das
dec
shrl
cmpsl
pop
and
xor
andb
inc
test
push
inc
xor
lods
out
xchg
adc
mov
xchg
ss
das
rclb
mov
jns
pop
inc
ja
repnz
scas
ss
or
inc
call
mov
bndstx
xor
xchg
js
adc
pop
jge
sub
cmp
mov
pop
enter
xchg
pushf
dec
ljmp
xchg
rclb
arpl
cs
dec
iret
ss
mov
jbe
inc
js
insl
mov
daa
hlt
aad
jge
or
sahf
call
xchg
and
adc
sbbl
cld
fnstcw
lea
lahf
and
cmp
sbb
push
pop
pop
insb
test
mov
cmp
dec
xor
lods
pop
repnz
inc
mov
dec
clc
mov
gs
addr16
mov
ss
enter
mov
pop
push
or
lock
xchg
adc
dec
stos
movsl
fsubrs
dec
cs
subl
ficoms
call
jae
mov
jae
ss
dec
test
aaa
dec
fcoms
outsb
pop
arpl
mov
call
adc
push
movsl
int3
ds
mov
inc
push
or
int
dec
adc
adc
insb
dec
fldt
cmc
and
insl
xlat
lret
or
das
pop
sbb
movsl
inc
test
or
cld
sub
loop
shll
cltd
adcb
mov
xlat
jg
lods
lret
pop
insb
stos
lea
daa
push
xchg
fldenv
jo
push
pusha
fstl
and
imul
js
sub
mov
adc
dec
imul
xchg
std
popf
dec
test
test
out
and
mov
scas
adc
je
fldt
shr
int3
sub
jo
in
mov
out
subb
and
dec
pop
cmp
jbe
mov
pop
add
jl
sub
push
push
sub
inc
dec
roll
mov
jns
loop
lret
push
adc
testb
ret
icebp
and
cld
cmp
xor
cmp
xchg
jl
sub
and
movsl
push
mov
xchg
sub
je
mov
lods
dec
clc
aam
push
or
sbb
xor
int3
mov
push
push
negl
fs
imul
pop
hlt
stos
adc
mov
imul
stos
fdivs
inc
lret
pop
fimull
cmp
mov
xor
js
add
push
push
push
mov
mov
xor
jo
stc
add
stos
and
outsl
mov
fs
icebp
cmpsl
push
xor
push
add
add
jo
pop
cmp
sub
or
ss
arpl
jne
mov
outsl
push
enter
or
and
sahf
jb
dec
inc
scas
leave
stos
in
mov
jg
mov
pusha
pop
inc
mov
mov
cmpsb
lods
mov
sub
cmp
mov
std
jae
enter
jne
iret
mov
cmpsl
dec
enter
shl
sub
push
shlb
fisttps
adc
inc
xor
inc
data16
jl,pn
mul
mov
cmp
xor
mov
rclb
or
mov
pop
icebp
test
pushf
out
push
aad
pop
mov
repz
jno
shl
xchg
xor
shrl
idivl
and
xchg
dec
lret
shll
cld
push
mov
fsub
cmp
in
cmpsl
sbb
jmp
sahf
iret
fwait
push
add
xchg
pop
mov
es
sarb
sub
mov
test
js
mov
mov
sbb
dec
mov
fdivl
outsb
pusha
les
enter
jge
mov
jns
mov
mov
popa
sbb
mov
out
push
mov
cs
sbb
adc
pop
sbb
push
movsb
xchg
pop
jo
sub
jns
fildl
fisubl
sbbb
rorl
jnp
popf
dec
dec
out
insb
or
loop
pop
cmp
cmp
cmp
cmp
out
mov
pop
mov
test
xchg
xor
sub
push
mov
mov
push
pop
add
insl
lock
sarl
dec
js
daa
add
fcmovnbe
inc
mov
sub
adc
nop
push
les
pop
bound
int
hlt
xor
dec
mov
push
mov
int3
dec
lods
sub
push
pop
xlat
mov
enter
add
push
data16
inc
mov
pop
push
into
incl
mov
aam
popa
dec
and
push
out
nop
push
pushf
scas
repnz
lret
jge
and
jo
mov
push
xchg
mov
mov
ret
int3
mov
out
into
or
clc
xchg
imul
cmp
stc
add
dec
adc
push
push
test
mov
arpl
push
adcb
xor
movsb
stos
and
lret
scas
adc
mov
xchg
lds
je,pn
or
or
cmp
test
sub
call
ds
pop
je
mov
xor
cs
jnp
and
pop
imul
cmp
push
lea
out
add
test
sahf
popa
jne
ficompl
adc
jbe
push
push
adc
dec
scas
loope
mov
mov
movsl
mov
aam
push
mov
mov
rorb
jmp
gs
inc
scas
sub
ffreep
data16
xor
jg
or
jle
hlt
cmp
sti
mov
pop
arpl
rclb
mov
sub
pop
push
arpl
sti
lods
sbb
or
in
sbbb
push
push
rcrl
int3
cmp
inc
push
popa
cs
call
inc
dec
mov
dec
pop
pushf
pop
xchg
outsb
sti
dec
pop
mov
xor
push
mov
stos
dec
mov
dec
and
push
gs
lds
ficoml
jge
mov
push
sub
in
or
push
adc
lcall
lods
lods
daa
loopne
pop
movsl
push
out
jb
ret
shll
in
adc
into
mov
je
into
arpl
mov
fwait
push
push
inc
inc
ror
out
sub
push
add
aad
push
sub
mov
aam
dec
pop
or
rol
mov
mov
ss
jb
arpl
mov
pop
mov
push
out
sub
adc
out
repnz
iret
icebp
cmpsb
std
ret
dec
subb
notb
ret
out
fdivrl
adc
xchg
xlat
jmp
dec
std
imul
dec
inc
add
jmp
adcb
ds
jg
dec
jle
adc
jmp
out
fidivs
sbb
inc
out
fidivl
stc
and
ret
push
pop
push
fwait
jae
inc
mov
pop
fiaddl
or
in
cmp
mov
dec
add
std
xchg
aad
and
push
dec
jge
push
push
popf
adc
das
mov
test
fidivrl
xor
rorb
cmc
push
xlat
aas
bswap
repnz
sbb
jb
movsl
scas
mov
jl
loopne
and
shr
mov
fidivrs
ds
xchg
mov
jns
dec
jbe
push
in
push
fists
cmp
aam
and
scas
and
and
and
pop
pop
or
adc
fs
xor
mov
lock
dec
xchg
add
xchg
iret
in
test
pop
xchg
push
jno
mov
insl
mov
cmp
dec
jnp
jns
add
stos
scas
xchg
and
pop
inc
xor
inc
test
cltd
lods
movsb
add
mov
mov
jl
push
sbb
jmp
push
imul
in
mov
and
imul
pop
idiv
inc
leave
sbb
daa
int
cmp
mov
imull
sbb
testb
stos
jmpw
push
pop
add
sbbb
and
mov
test
jg
sub
es
jne
in
pusha
sbb
jnp
cmp
fimuls
pop
jmp
test
xchg
cmp
ret
xchg
stos
add
cwtl
dec
ja
push
lret
mov
jg
sub
jno
mov
arpl
insl
or
adc
scas
xor
int
enter
stc
stos
imul
les
sbb
out
xor
add
les
xor
int
pop
cmpsb
xchg
lahf
mov
pop
test
movsb
cli
and
in
sbb
xor
dec
push
jbe
mov
aad
lods
sub
cli
mov
push
jno
jno
mov
aaa
int
cmp
int
out
jns,pt
mov
test
or
mov
add
inc
pusha
imull
cwtl
xchg
mov
lret
mov
or
lods
sbb
je
and
insb
add
nop
sarb
sbb
shlb
vphaddbq
fsts
aam
inc
fisubs
popf
sbb
fs
dec
xchg
jp
mov
xor
xlat
scas
mov
sti
sub
icebp
out
xor
scas
sbb
outsb
js
ret
cmpsb
int3
repz
pusha
dec
cltd
and
leave
out
fldt
dec
cmp
pop
mov
mov
push
and
call
mov
xchg
adc
test
dec
test
stc
jb
sahf
push
pop
dec
stos
stos
sbb
or
push
movsb
xchg
xchg
jb
addr16
hlt
in
pop
push
cli
or
scas
outsl
xor
dec
add
cli
pop
les
jge
mov
jecxz
cwtl
lcall
ret
jnp
icebp
inc
mov
test
adc
jmp
callw
push
ror
add
test
cmp
xor
movb
add
mov
scas
sbbb
dec
or
pop
pop
push
stos
pop
stc
in
mov
es
aam
add
sahf
adc
cwtl
mov
fadds
inc
in
mov
shlb
idiv
mov
pushf
push
inc
insb
jle
mov
pop
inc
rcrl
stc
ret
daa
jge
bound
sar
xor
dec
enter
or
xor
cmpsl
jbe
mov
jecxz
mov
icebp
mov
mov
or
mov
sbb
mov
stos
imul
ja
into
mov
stos
fwait
cmp
pop
dec
sbb
mov
in
mov
cltd
shrb
jnp
mov
dec
movsb
mov
lods
lcall
mov
mov
in
stos
jmp
pop
lcall
stos
cmp
scas
getsec
scas
push
loopne
fisubl
cmpsb
and
ljmp
push
repnz
xlat
addr16
fldt
lea
nop
int3
mov
xlat
sahf
shrb
out
xchg
jge
nop
aad
jns
xchg
lods
movsb
rolb
sub
cmp
in
mov
movsb
inc
dec
xchg
mov
pop
jo
movsb
out
cwtl
dec
push
shlb
pop
movsb
push
sub
pop
out
bound
negl
jns
ret
test
inc
inc
pop
stc
lcall
add
rolb
mov
inc
mov
mov
je
arpl
imul
xor
dec
aas
mov
sub
mov
jle
push
sbb
or
jns
or
adcb
int3
inc
xchg
decl
xchg
hlt
inc
cli
add
insb
sti
cmp
ljmp
in
testl
mov
mov
jbe
dec
push
rolb
or
dec
lret
jecxz
xor
jae
popa
mov
loopne
mov
fsubrl
sbb
lods
and
ja
outsl
mov
test
cmpsl
in
xor
jmp
xchg
out
stos
jmp
sub
mov
ljmp
jbe
or
inc
xchg
adc
cmp
jne
jno
and
push
fisttps
dec
fucomip
dec
and
or
sbb
inc
mov
les
mov
xchg
arpl
pop
cmp
dec
cmp
and
and
fstl
icebp
fcoms
xor
rcrl
ret
mov
mov
mov
push
daa
jns
push
inc
or
mov
xlat
scas
into
mov
lods
add
add
push
in
das
push
or
mov
pop
test
xor
cmpl
pop
or
mov
outsl
sbb
out
mov
lods
inc
aas
mov
ja
arpl
orl
les
mov
sbb
xor
pop
push
push
push
jge
inc
insb
xor
cmp
sub
bound
xor
mov
out
les
cmp
mov
fwait
inc
leave
sbb
xchg
inc
jo
push
sub
cltd
mov
aas
out
sbb
mov
sub
testl
fidivl
lcall
clc
loop
add
imul
lds
lock
mov
repz
or
jecxz
jge
lods
and
jo
xchg
jp
add
sbb
std
jno
ljmp
shr
cmp
sub
cmc
ljmp
lcall
bt
ds
push
daa
shll
andb
test
pop
rol
insb
sahf
ss
repnz
pop
mov
mov
pop
jnp
sub
outsl
adc
out
gs
idivl
lcall
add
inc
mov
mov
adc
cmp
cmp
pop
addr16
ds
or
in
jnp
arpl
and
or
pop
xchg
mov
xor
enter
mov
mov
inc
cmp
pushf
fimull
popa
xchg
clc
test
fisubl
push
sub
inc
xchg
cmp
dec
inc
xor
and
sahf
jp
pop
out
pop
jge
inc
mov
push
dec
and
rorl
jg
push
call
and
mov
test
subl
sti
cld
shr
or
inc
push
les
xchg
imul
ds
inc
mov
insb
es
cmp
fisubrs
jbe
popa
dec
pop
loope
in
sbb
cmp
dec
test
loope
adc
lock
jmp
cltd
mov
ss
das
je
cmp
pusha
fwait
sbb
xchg
cmpsl
insl
fdivs
jno
pop
jp
loop
aas
sub
test
clc
das
mov
jmp
mov
lahf
ja
inc
in
and
ret
test
mov
mov
mov
ds
rclb
lods
push
stos
std
jp
mov
frstor
pop
rcl
sbb
outsb
int
addr16
push
mov
inc
in
aaa
add
nop
mov
or
or
lea
mov
insb
orb
lret
and
addr16
ds
loopne
mov
std
xchg
loop
push
in
mov
mov
lods
cmp
push
or
pop
jns
in
dec
xor
jp
mov
xor
loop
mov
mov
clc
push
aam
arpl
gs
pop
sub
jne
or
aad
dec
dec
maxps
sbb
es
movsb
push
push
lcall
push
mov
arpl
inc
imulb
popf
dec
mov
leave
cmp
shlb
fst
in
jno
pusha
pop
jp
mov
dec
mov
test
enter
je
cmp
pop
adc
mov
sub
pop
xchg
dec
jb
mov
pop
xorl
fwait
cmp
scas
xor
jge
push
mov
insl
lods
lods
sbb
xchg
sub
jnp
out
adc
cmpsb
movsl
push
arpl
pop
pop
lret
fcoml
addl
inc
loopne
pop
xlat
es
shll
add
lahf
pusha
mov
cld
and
xchg
inc
dec
std
repz
cmp
push
xchg
sub
dec
lahf
das
test
mov
push
jnp
jmp
loop
add
mov
cmc
lret
mov
js
pusha
outsl
in
mov
mov
jo
mov
outsl
xor
icebp
icebp
push
fs
add
add
lret
int3
mov
pop
xchg
das
mov
out
xchg
aam
je
addr16
cs
add
cmp
fstl
sub
adc
or
scas
push
push
mov
mov
sbb
xchg
outsb
pop
leave
mov
rorl
sub
sbb
mov
ljmp
fsubl
rolb
sbb
cli
call
aaa
push
sub
insl
outsb
aaa
pop
stc
mov
gs
mov
sub
iret
cld
pop
cmp
lock
sbb
jmp
sub
mov
int3
sbb
jne
dec
cmpsb
fdivrs
popa
popf
mov
and
dec
xchg
add
dec
adc
adc
inc
and
ja
std
fimuls
ss
fwait
test
inc
cmp
cs
in
scas
test
scas
mov
roll
sbb
sbbl
dec
jnp
add
or
les
mov
lds
mov
pop
and
pop
jno
daa
mov
xlat
sub
adc
mov
aas
lds
in
or
mov
push
xchg
in
lock
pop
lods
sub
mov
pop
out
fcomip
mov
mov
mov
mov
lods
add
xor
arpl
stc
inc
push
mov
lret
in
pop
call
adc
sub
ljmp
or
insl
xchg
addb
sbb
rcll
lods
orb
pushf
movsb
jbe
daa
lret
xchg
outsl
xchg
inc
lcall
xorb
stc
je
repz
mov
hlt
inc
sbb
int
lcall
cwtl
adc
push
jno
xorl
or
lds
mov
jle
jl
push
xchg
hlt
pop
mov
xchg
jae
inc
popf
stc
jns
sub
sub
fwait
add
mov
fldcw
popa
xchg
daa
xchg
pop
shrl
int3
push
mov
mov
mov
sbbb
es
stos
or
scas
push
push
xlat
cmp
pop
outsb
jecxz
fcmovne
popf
insb
pop
sub
mov
add
sti
movsl
insb
lods
jmp
jmp
jge
das
aam
xchg
xchg
add
mov
jmp
bnd
pop
inc
dec
std
push
jmp
xor
inc
mov
sbb
adc
les
sub
mov
inc
cmp
sbb
sub
cwtl
mov
out
fisubl
jmp
jg
sbb
mov
cmp
insl
mov
add
adc
xor
movsl
idiv
pop
jns
bt
fldl
ljmp
xchg
jecxz
pop
xchg
mov
cmp
inc
jo
cltd
popf
pop
dec
or
cmp
lea
mov
loopne
inc
shl
sbb
jle
jge
ds
xorl
xor
push
cltd
mov
andb
lds
pop
mov
adc
mov
lds
pop
add
push
fstps
mov
xchg
inc
imul
testl
sbb
clc
and
mov
out
mov
rol
jge
push
fidivl
dec
sbb
cltd
lea
out
mov
pushf
mov
mov
js
mov
shl
out
push
mov
mov
dec
daa
and
adc
pop
dec
cmc
mov
adc
mov
push
das
gs
es
cli
in
sbb
sbb
sbb
sub
cltd
xchg
pop
imul
ja
aam
int
adcl
cli
lea
or
popf
fnstcw
popf
add
das
enter
xchg
into
insl
fwait
ret
mov
xor
mov
std
inc
mov
mov
push
jb
jg
or
daa
jmp
loop
sbb
push
mov
fistps
cwtl
popf
jmp
xor
or
orb
stos
icebp
popa
lcall
pop
inc
negb
cmp
lods
xor
fs
pop
jle
jmp
jb
sahf
std
test
dec
data16
mov
push
in
imul
push
mov
or
fwait
sbb
jmp
mov
mov
repz
cli
fcompl
fidivrs
xchg
mov
cmc
add
int3
pop
mov
dec
imul
out
push
ja
rol
aaa
rclb
sbb
ror
inc
xor
pushf
js
int3
fsub
repz
mov
iret
push
pop
mov
pop
inc
push
cwtl
jle
mov
jp
lahf
or
add
out
lret
inc
popf
std
mov
andb
inc
dec
xor
pop
jmp
cmp
dec
icebp
std
sub
test
fwait
xchg
or
mov
lods
repz
movsl
rolb
cld
push
pop
cmp
xor
jns
and
push
mov
mov
pop
fwait
sbbl
test
ljmp
fwait
inc
rolb
add
imul
inc
outsl
pop
mov
and
lods
add
lock
rclb
dec
fisttpll
jl
rol
arpl
and
dec
mov
xchg
lods
in
xor
inc
cmp
add
pop
xor
cmpsb
insb
mov
mov
ljmp
pop
ja
or
push
mov
lods
or
xor
addb
jbe
adcb
pop
adc
push
cwtl
mov
mov
test
xchg
int
incb
adc
ja
xchg
into
push
mov
mov
fwait
mov
cmpsb
jl
mov
jbe
and
setg
ret
push
pop
iret
icebp
outsb
test
xlat
or
leave
data16
pop
cmc
arpl
out
mov
dec
adc
mov
mov
cltd
sub
cmc
repz
pop
lock
pop
cmpsl
stos
cmp
and
sahf
movsl
gs
es
adc
fcomps
cli
lret
pop
or
mov
daa
dec
cmp
jmp
out
jg
ja
xchg
dec
sub
and
dec
rorl
and
cmp
and
les
cli
xchg
lds
adc
daa
sti
enter
adc
pop
icebp
stos
int
stos
sti
jge
mov
sbb
mov
xchg
test
mov
lock
or
sti
xchg
sub
mov
push
or
adc
push
cmp
rcrb
push
dec
aas
push
enter
ljmp
adc
ljmp
dec
fsubrs
arpl
inc
repnz
in
or
pop
mov
testl
and
mov
test
flds
xor
das
pop
call
push
ret
inc
test
fbld
out
insb
cli
hlt
hlt
fstpl
call
ds
mov
aas
lret
or
addr16
sahf
sbb
enter
xlat
mov
and
jle
je
jnp
add
icebp
xor
mov
dec
dec
inc
and
leave
xor
inc
hlt
in
aas
test
jg
imul
push
jle
ss
inc
leave
loopne
inc
lods
sbb
and
jp
aad
mov
ja
bound
sbb
mov
popf
inc
bound
imul
les
mov
jl
mov
jae
les
subb
imul
lea
vp4dpwssd
loop
pop
push
push
pop
into
lods
mov
cmp
mov
sarl
mov
rcrl
push
fdivrs
mov
lret
jb
in
aam
xor
and
sub
in
popa
sbb
shrl
gs
enter
xchg
sarl
jecxz
lret
sbb
lret
js
ficoms
dec
repz
inc
int
insb
mov
mov
outsl
push
ret
push
sbb
roll
xor
mulb
incb
pop
and
xchg
xor
mov
movsb
mov
xchg
addb
mov
loope
mov
out
jge
sub
fdivrl
fsubr
cmc
inc
mov
or
fbstp
je
pop
test
pop
push
jge
mov
mov
sbb
hlt
inc
xchg
sbb
daa
scas
aas
shld
out
or
and
repz
sbb
test
dec
lods
mov
mov
aad
and
add
arpl
pop
outsl
fldl
lcall
pop
inc
mov
dec
xchg
loop
and
std
mov
and
stos
fildl
and
cs
push
cmp
push
test
cmp
mov
cmp
push
push
test
shlb
aam
rcr
fildll
xor
push
sahf
jne
rorb
lods
xchg
test
aam
and
inc
iret
xchg
nop
rcrb
mov
shll
lods
roll
out
stos
adc
fistpl
push
outsl
or
sahf
jl
leave
xor
xchg
cmp
popf
dec
jo
ja
shl
adc
into
adc
sbb
out
dec
mov
jbe
clc
fiaddl
cmc
or
push
jbe
adc
sti
mov
cmpsl
es
xor
push
cld
push
and
push
xor
clc
mov
xor
mov
int3
shlb
jecxz
bound
inc
inc
sbbl
inc
or
stos
xor
inc
call
les
fistl
mov
faddl
add
mov
pushf
shrl
mov
mov
popa
cltd
ficoms
movsl
xor
fwait
je
jbe
add
mov
aas
fs
cli
adc
and
add
fwait
jbe
test
ss
loope
adc
into
jae
mov
dec
ret
xor
push
sub
sub
scas
lock
inc
mov
call
mov
pop
mov
clc
ljmp
inc
sub
aad
mov
outsb
js
scas
or
cmpl
cltd
pop
jle
aaa
pop
lods
mov
lcall
fisttps
jmp
mov
imul
insb
je
mov
adc
dec
inc
out
insb
fisubl
cmp
test
jnp
mov
in
sub
sub
dec
and
mov
sub
cmp
out
jne
clc
push
js
add
sbb
mov
sbb
mov
cs
flds
sbb
repnz
inc
fs
jb
lcall
inc
lahf
jns
imul
int
mov
mov
jns
mov
cmpsl
pop
dec
xchg
jp
xchg
lcall
and
add
or
xor
pop
repz
ret
dec
cmp
add
ret
inc
xchg
dec
inc
lahf
sahf
xchg
xchg
repnz
mov
fs
mov
add
or
push
lods
mov
cli
xchg
xor
shrd
pop
sub
push
in
lds
loope
lods
lea
adc
shl
shl
mov
pop
sbb
cmp
std
adc
test
sub
imul
add
pop
addl
sbb
cmp
xchg
enter
adc
dec
xchg
in
or
nop
or
inc
imulb
mov
or
xchg
sbb
or
jle
mov
popf
addl
or
fstpt
xlat
or
shrb
clc
dec
dec
jmp
cmp
in
jmp
fcomps
imul
cli
pop
sbb
icebp
mov
ja
xchg
lcall
inc
mov
lea
arpl
std
aad
or
test
jae
lret
es
mov
gs
cltd
int3
xorb
test
pop
xor
loop
ljmp
fisttpl
sub
push
jl
dec
or
xchg
mov
rorb
aam
push
lcall
mov
add
lret
aaa
pop
inc
inc
mov
sarl
push
xchg
jo
ret
out
pop
adc
roll
mov
jl
cwtl
mov
cwtl
push
cmpb
sti
out
les
pop
aaa
pop
cmp
xor
cltd
jmp
and
push
repz
xor
mov
mov
stos
das
popa
adc
nop
cltd
cmp
jle
push
jae
lock
imul
shll
aas
popf
test
mov
and
test
add
inc
push
xchg
adc
and
xchg
mov
sbbb
test
test
sub
dec
jo
mov
nop
std
movsb
out
xchg
cmp
fldt
cmc
pop
sub
leave
xor
inc
pop
dec
xchg
notl
cmc
inc
andb
je
mov
cmpsb
test
xlat
mov
dec
out
lods
sbb
out
push
stos
insb
popa
sub
mov
adcb
inc
fcmovne
icebp
sbb
lock
cmp
cmp
cli
fcmovu
repnz
cs
mov
mov
and
dec
mov
inc
push
stc
mov
gs
pop
sti
cmp
nop
push
mov
sub
mov
enter
sahf
aas
mulps
xchg
movl
inc
popf
inc
dec
cmp
roll
and
push
sbb
sbb
mov
loop
jl
sti
pop
aad
or
ss
sbb
lods
pop
add
adc
int3
pop
dec
pop
icebp
sub
ret
rcrb
call
dec
add
pop
sbb
xchg
fwait
imul
fimull
push
stc
lea
push
jmp
or
movsb
pop
iret
mov
not
in
mov
nop
xchg
xor
dec
add
testl
lret
test
lods
fs
into
icebp
pop
push
sahf
sbb
push
xchg
inc
mov
lcall
pushf
mov
loop
jmp
sti
mov
cld
call
mov
mov
mov
daa
mov
mov
leave
sbb
addb
aaa
negb
pusha
jo
mov
fildll
push
std
sbb
push
out
es
dec
xchg
outsb
push
loope
shrl
inc
add
sarl
jb
cltd
jg,pn
ja
jg
pop
jmp
clc
dec
pop
xchg
outsb
fs
arpl
dec
pop
adc
mov
add
shl
outsl
xlat
iret
insl
sbb
adc
mov
add
repz
cwtl
add
das
fstpl
pusha
sarb
dec
xchg
cs
and
jle
push
lock
jecxz
je
cmp
roll
lret
loopne
mov
jmp
jo
pop
xor
mov
push
jnp
out
andb
daa
pop
xor
cltd
in
push
pop
inc
lods
mov
pop
jp
mov
insb
jo
inc
and
in
pop
inc
and
mov
fwait
cmp
push
mov
sub
stos
mov
sbb
and
inc
pop
fsts
xlat
mov
dec
inc
in
in
aas
ljmp
adc
in
test
mov
divb
xchg
addb
bound
push
mov
iret
or
cmp
pavgb
xor
repnz
popa
scas
jo
xchg
or
or
loope
sub
push
mov
xor
sub
and
mov
test
adc
mov
inc
dec
and
dec
add
cmc
aaa
into
adc
lahf
popa
sub
data16
pop
and
jns
dec
lahf
incl
es
pop
and
arpl
xchg
xchg
xor
add
mov
stos
cld
sbb
mov
or
inc
sti
xchg
mov
push
sub
fdivrs
out
ja
leave
dec
fnstsw
test
jo
xchg
mov
mov
inc
shr
fucom
cwtl
push
dec
dec
inc
push
jne
daa
hlt
add
sti
push
icebp
xor
mov
fimuls
add
rcl
fsubrs
cltd
clc
xchg
pushf
pop
loop
mov
pop
push
test
inc
pop
cltd
add
sub
pop
lods
mov
xor
ja
lea
jns
add
popa
mov
push
loop
enter
xor
xchg
jnp
fiadds
rorb
mov
add
ss
push
aas
arpl
push
loop
int3
inc
and
push
outsb
popa
xchg
pop
pushl
inc
pop
cmpsl
adc
out
add
jl
xor
mov
xchg
shlb
mov
aas
xor
sarl
push
push
lods
je
pop
push
or
sbb
xchg
mov
mov
cli
jecxz
jl
test
aas
jne
sbb
sub
loopne
jle
cmp
cmp
mov
inc
outsl
sbb
pop
dec
repz
les
icebp
push
jmp
and
js
es
leave
das
mov
test
insb
call
sbb
cmpsl
pop
outsb
test
pop
and
lahf
ret
leave
lret
ljmp
pop
inc
mov
lret
xchg
test
incb
sub
mov
int
mov
adc
dec
lret
iret
ds
in
popa
movsl
call
das
jle
inc
jb
loopne
jge
jne
jp
xor
jmp
mov
sti
push
loop
cwtl
jg
jge
or
cltd
jbe
push
repnz
mov
ret
inc
icebp
cmp
mov
mov
adc
lcall
push
je
mov
xorb
add
cmpsb
cmc
push
and
xchg
leave
xchg
test
sbb
xor
lea
ret
jno
xchg
adcl
clc
cmpsl
jg
pop
ja
negl
popa
push
mov
adc
shll
xor
dec
outsb
les
inc
popf
add
fcoml
and
mov
lea
cmpsb
xchg
mov
jbe
jnp
sub
aas
or
mov
jg
pop
stos
repz
and
dec
xorb
ja
aas
dec
fcomp
pop
mov
mov
jl
aad
add
int3
sub
cmp
in
inc
sub
rcr
pop
and
cmp
ss
and
mov
mov
mov
ja
incl
insb
pop
lea
fistpll
mov
imul
or
inc
dec
or
add
sbb
xchg
adc
popa
aam
mov
div
add
xchg
cmp
adc
lea
fsubrl
jns
dec
mov
aaa
das
push
insb
stos
in
notb
add
jmp
cmp
out
push
xchg
or
lods
mov
xchg
addl
dec
out
xor
mov
mov
pushw
or
or
int3
cmp
ja
xchg
std
iret
pop
sbb
mov
inc
jo
in
icebp
mov
dec
push
lea
lahf
push
cmc
fidivs
jb
retw
mov
out
dec
adc
insb
mov
jae
pop
loope
xchg
mov
incb
gs
shlb
mov
pop
push
or
adc
in
push
int
dec
mov
push
or
or
out
xchg
dec
xchg
inc
fistpll
xchg
into
fneni(8087
insl
push
add
stc
dec
cmc
add
fiaddl
dec
andb
lds
jle
jns
jno
arpl
or
add
addb
and
out
clc
insl
loope
xor
sbb
pop
inc
adc
hlt
sbb
xchg
test
jmp
out
clc
dec
das
pusha
aad
sub
sbb
icebp
dec
shlb
inc
pop
sbb
sbb
mov
mov
jge
movsb
into
stos
sub
rolb
mov
sar
jae
aaa
push
loope
popa
dec
pop
repz
and
jne
pop
cmp
adc
lock
loope
xor
inc
pushf
xchg
out
mov
in
popf
fmull
pop
add
xchg
test
or
pop
or
adc
or
mov
xchg
adc
or
jno
or
or
cmp
xchg
andb
or
add
mov
xor
mov
iret
mov
jbe
mov
push
scas
popf
bound
stc
ret
xchg
mov
lret
leavew
lret
lods
or
enter
jecxz
cmp
sub
lea
aas
xchg
into
xchg
cs
adc
clc
outsb
test
fucom
adc
adc
aas
dec
mov
jne
ret
and
inc
lock
fiadds
roll
sub
xorl
ds
outsb
dec
clc
mov
movsb
xchg
inc
xorb
ror
roll
mov
rolb
orl
lret
cmp
aaa
cmp
xchg
sbb
mov
roll
stos
iret
mov
ljmp
orb
jecxz
jmp
lahf
jge
xor
incl
cmpsl
xchg
push
mov
pop
aad
cmp
mov
aas
popa
lret
cli
pop
cld
mov
loop
pusha
mov
ret
sti
test
pop
out
lods
jae
push
leave
push
mov
out
sbb
mov
jo
xchg
loop
orb
in
pop
add
int3
xor
js
xchg
push
arpl
cmp
mov
loopne
xchg
sub
mov
and
and
mov
hlt
pop
pop
jmp
aam
dec
xchg
xchg
pop
mov
fwait
sub
xor
rol
scas
ja
leave
enter
cmpsb
ds
clc
mov
and
out
adc
cmpb
xchg
out
test
pop
lds
fmuls
cld
std
fcoms
fs
inc
loopne
mov
adc
jnp
testl
cmpl
sahf
sbb
and
xor
stc
pushf
stc
enter
push
xor
std
bound
lahf
bound
mov
jecxz
dec
add
rcll
gs
out
mov
les
jle
repnz
inc
xor
sarb
sahf
jl
add
push
fsubl
jns
push
repz
mov
xchg
lret
in
das
popa
xchg
sahf
rclb
fisubrs
repnz
jb
mov
into
push
scas
in
out
in
ds
lret
loop
xor
ficompl
mov
sbbl
push
xchg
mov
xchg
shrl
xor
movsl
sub
out
aas
imull
pop
loopne
sbb
add
fisubl
in
add
lds
xchg
jae
sbb
es
xlat
cmpxchg
and
enter
out
popw
jecxz
pop
push
sbb
lahf
lods
mov
sbb
cmpsb
pusha
hlt
sub
les
cmp
pop
sub
mov
cmp
xor
sbb
jno
scas
sbb
popa
or
and
mov
lret
sub
or
cmp
cmp
dec
addr16
push
xchg
pop
sub
pop
das
mov
fimull
cld
mov
mov
xor
call
mov
jmp
pop
pusha
jle
mov
rcrl
repnz
fistpl
pop
je
mov
dec
stos
lret
mov
test
lds
das
test
imul
pop
and
pop
cltd
aad
mov
cmp
adc
jecxz
inc
sub
aad
cmp
arpl
aaa
push
ficompl
sbb
and
in
push
les
ja
and
xor
test
and
mov
cmp
xchg
xor
es
push
addr16
test
or
xchg
cli
divl
push
add
push
sarb
into
insl
aas
shl
ja
cmc
hlt
mov
mov
ljmp
stos
fisubs
mov
jg
std
imul
clc
push
mov
cmp
mov
lret
test
mov
stc
jo
jg
out
cwtl
xlat
xor
cmp
cmp
xchg
jmp
clc
inc
loop
jo
clc
push
in
cmp
and
mov
mov
je
add
fistl
pop
popf
in
shlb
jo
ds
ss
cmpsl
push
and
cmp
mov
jl
cli
hlt
je
add
jge
xor
inc
add
ljmp
sub
test
jo
cmpsb
enter
cmpsl
jl
push
hlt
add
outsl
test
jb
pop
aaa
add
fidivs
iret
mov
pop
insl
outsb
clc
xchg
or
arpl
xchg
or
adc
sbb
lret
rorl
test
jne,pt
dec
ret
or
or
and
jg
sbb
repnz
mov
dec
jecxz
movsb
mov
in
sub
enter
sub
dec
push
xor
lret
dec
jl
in
cmp
repz
sarl
pop
aas
mov
xor
adc
sarl
dec
mov
pop
lds
pop
inc
ret
fidivs
das
std
push
ja
cmp
dec
das
push
outsl
lds
lods
shlb
test
or
cwtl
adc
push
jge
add
push
sahf
inc
push
test
fldt
loopne
pop
testl
pop
ss
ror
loope
mov
add
dec
sbb
lahf
andl
push
divb
cmpsl
xor
imul
inc
popa
clc
xchg
sbb
adc
xor
ret
jp
loopne
jp
shll
rcll
push
aam
cmp
xor
mov
xchg
ds
ret
mov
ret
pop
add
mov
xlat
dec
mov
add
or
sub
pop
push
jl
sub
pop
popf
jle
jge
jb
adc
push
leave
xchg
sub
lods
sahf
test
mov
adc
xor
fistpl
aad
mov
popa
jmp
aad
push
addr16
stc
jmp
fdivp
aaa
cld
adc
ds
mov
cmpl
and
mov
mov
xor
lods
and
or
stos
jle
sti
sbb
jp
cmp
xlat
dec
pop
adc
xor
pop
jmp
aaa
pop
imul
adc
fidivl
sbbb
dec
jno
push
dec
clc
dec
mov
add
cmpsb
cmc
loope
jb
inc
insb
inc
xchg
rcrl
jns
out
jg
mov
mov
push
popf
scas
inc
cli
ljmp
scas
adc
shrb
sbb
lods
ljmp
stos
dec
cli
shrb
cmpsl
mov
xchg
sti
push
aad
push
sub
or
negb
insl
push
dec
pop
jbe
xchg
jnp
add
fs
ja
movsl
sti
jl
inc
ds
cmp
test
and
jmp
sahf
je
pushf
in
mov
adc
test
movsl
shl
cwtl
popa
in
lods
mov
rcrl
mov
jecxz
cld
jp
mov
push
add
fwait
xor
lcall
sysenter
mov
outsl
sbb
mov
cli
rcrb
xor
sbb
sbb
jno
cmp
imul
or
in
push
test
dec
popa
in
push
lods
and
sar
mov
sub
loop
lds
lods
in
insl
fcmovnbe
cld
pop
push
sub
mov
dec
fistps
clc
pop
lahf
in
mov
fbld
loope
push
es
test
shrb
dec
popf
pop
test
repnz
fs
jmp
jecxz
sahf
jo
je
sbbb
adc
mov
into
xor
lcall
pop
nop
sub
jno
imul
and
xor
fbld
jp
push
cmp
xchg
test
adc
movsb
and
lods
jmp
pop
pop
cmpsb
mov
cmp
adc
jmp
repnz
cmp
in
jge
pop
dec
aad
push
sub
js
adc
xchg
jne
inc
and
push
push
xlat
jl
mov
aam
fst
sub
fnstcw
imul
sbb
movsl
rcll
inc
inc
sub
cmp
ds
imul
mov
push
or
fildl
fsubrl
jle
inc
push
filds
out
inc
cmp
test
xor
or
sbb
jae
and
add
aad
dec
jbe
popa
cltd
cmpsb
pop
imul
ret
and
mov
rolb
dec
insl
sbb
sbb
mov
push
int3
dec
push
push
popf
xchg
adc
xchg
and
roll
imull
addr16
scas
js
out
in
push
ror
xchg
sub
add
mov
psrad
dec
sbb
push
mov
mov
cmp
push
stc
lcall
push
test
scas
sub
push
cs
jno
imul
xchg
jno
and
out
iret
lcall
lret
imul
push
dec
rcl
xchg
adc
ret
inc
xchg
enter
sahf
lock
lret
mov
cmp
scas
repnz
gs
dec
xor
setl
stc
sub
movsb
mov
cmp
sti
xor
mov
xchg
xchg
stos
imul
sub
mov
movsl
mov
xchg
sub
into
fistpl
sub
xchg
fisttpl
rorl
inc
adc
xor
pop
mov
icebp
pop
mov
into
add
lock
mov
lret
scas
int3
imul
mov
ljmp
inc
pop
leave
ljmp
jg
mov
shl
int3
mov
xor
push
push
in
xor
repz
jge
lcall
pop
mov
fwait
ja
mov
aas
jp
push
adc
cmpsl
adc
andb
pop
outsb
in
cli
sti
int
push
or
xor
or
subb
in
jns
popa
bound
xchg
mov
cmpsl
push
std
data16
scas
pop
xchg
mov
repz
fdivp
lods
icebp
pop
lds
mov
cwtl
in
add
in
mov
pop
pop
addl
cs
mov
call
nop
add
imul
add
mov
les
xchg
cmp
fs
in
adc
xor
adc
mov
add
rcrl
or
mov
mov
jbe
int
js
mov
jo
hlt
ljmp
lret
lahf
faddl
mov
adc
mov
xchg
or
cmp
mov
sbb
inc
mov
push
jmp
and
sbb
dec
into
add
cltd
cld
add
cmp
add
loop
fistl
int
gs
int3
jnp
inc
add
jle
cmp
push
into
mov
fisubl
and
and
mov
clc
mov
addb
adc
fistps
fbstp
neg
imulb
lock
cltd
xor
inc
iret
adc
cwtl
jmp
mov
inc
add
or
sub
push
int
adc
jbe
mov
pop
sub
lds
insl
fbstp
inc
jecxz
or
rcl
mov
sub
cmc
dec
jnp
out
lcall
enter
or
popa
push
in
rcll
ret
pop
pop
pop
dec
ds
jmp
enter
stc
lret
cmp
add
das
and
into
inc
lods
jb
jg
push
mov
movsb
nop
adc
lahf
mov
pop
mov
push
repz
push
enter
mov
xchg
iret
xchg
out
adc
sarb
jmp
loope
push
mov
sahf
sub
jg
xor
ljmp
popf
std
out
test
insl
or
movsl
lds
nop
fsincos
pcmpgtd
xor
data16
in
lds
xchg
sbb
mov
movsb
dec
sub
dec
sbb
and
in
inc
fsubrs
jl
push
int3
xchg
jle
sti
fistl
outsl
call
jne
stos
repz
loop
mov
lods
xorl
push
or
sub
pop
fmuls
fcomps
out
arpl
inc
fisubl
js
fisttpll
ret
pop
mov
sbb
pushf
lock
or
cmpsb
inc
pushf
stos
adc
mov
push
mov
adc
pop
sbb
adc
push
into
fsub
stc
dec
enter
mov
xlat
leave
mov
sahf
or
pusha
in
jo
inc
std
or
and
mov
cld
cli
mov
ret
add
das
fimuls
mov
push
inc
mov
mov
mov
jne
in
sub
mov
dec
mov
dec
fisttpll
push
fiaddl
fs
mov
xchg
fmuls
test
xchg
jle
pop
icebp
imul
adc
cmp
cmpsl
mov
ja
cmc
lcall
mov
mov
pop
sbb
stos
fst
add
jb
adc
das
pop
out
test
jb
jb
add
pop
pushf
pop
push
or
adc
movsb
std
lea
out
loop
add
xor
xchg
out
jb
aaa
fcoms
shlb
dec
cs
inc
cmpsb
aam
movl
adc
pop
scas
cmp
jmp
pop
or
push
mov
fcomi
lods
jmp
mov
push
arpl
in
dec
jge
xor
pop
pop
daa
inc
lods
test
adc
loope
cmp
add
js
mov
pushf
xor
cmpl
xchg
jl,pt
stos
daa
push
pop
sub
cltd
xor
je
xchg
or
xor
gs
loop
out
movsl
lods
xchg
outsl
push
lcall
mov
cs
and
bound
xchg
je
jnp
outsl
pop
cs
ret
rcrl
push
in
push
lahf
cwtl
arpl
push
adc
clc
xor
push
sbbb
add
daa
sbb
paddb
aaa
subl
cwtl
inc
dec
cmpsb
sub
and
out
xchg
div
aas
mov
push
mov
jae
inc
cmp
sahf
add
movb
xor
inc
mov
pop
or
push
movsl
mov
subl
xchg
mov
pop
iret
xchg
inc
push
fildll
lock
inc
push
add
cwtl
mov
or
rolb
xor
stos
mov
add
rol
add
jb
pop
fs
clc
ret
xor
sahf
inc
lock
add
push
lret
cmc
int
adc
jle
xor
lock
xchg
jge
int
jnp
and
sbb
icebp
mov
notl
ret
ds
sbb
adc
sarl
push
mov
sti
dec
adc
or
mov
push
xchg
pop
jb
inc
xchg
inc
add
in
jmp
imul
faddl
in
fs
movsb
cmp
cmpb
sub
mov
ret
scas
push
hlt
adc
mov
push
je
or
dec
xor
adc
mov
add
jnp
xchg
jne
sbb
outsl
mov
out
pushf
das
icebp
mov
add
mov
icebp
jl
loopne
mov
or
mov
in
test
push
cmc
and
push
push
mov
loopne
push
sti
lcall
imul
pop
sbb
or
mov
dec
mov
pusha
sub
rol
sub
mov
or
icebp
mov
mov
mov
push
jne
lahf
out
ficompl
lods
add
xchg
pop
cmp
lock
jp
iret
xchg
inc
outsb
ret
aaa
jne
int
sub
cmp
sahf
jmp
or
sub
inc
movsl
cmpsb
ljmp
sbb
pop
and
repnz
lcall
sbb
int3
je
xor
daa
push
outsb
push
jae
gs
repz
pop
enter
sbb
adc
popa
ficomps
mov
sub
mov
adc
fidivrl
push
into
adc
repnz
inc
inc
imul
add
sbb
mov
cmp
cmp
and
cmpsl
rclb
xchg
lods
lret
and
xor
movsb
aad
fucomip
pop
push
imul
mov
jmp
xor
push
ret
sub
push
popl
pop
cld
out
lods
movq
mov
mov
fwait
cld
mov
jno
lahf
or
adc
movl
out
daa
in
cmpsb
fisubrs
pop
pushf
inc
out
sub
adc
mov
lret
int
iret
pop
push
xor
rcr
dec
mov
in
jae
cmp
push
mov
pop
mov
mov
bnd
es
jmp
mov
pusha
jl
adc
repnz
fdivl
mov
add
testb
mov
scas
mov
jecxz
scas
sbb
push
mov
mov
lods
pop
dec
add
and
leave
out
push
pop
xor
aaa
push
inc
popf
pop
pop
loope
cs
cmp
fstpl
outsl
mov
sbb
xchg
jle
scas
gs
sub
daa
das
clc
pop
mov
cmpb
xchg
dec
jno
or
imul
and
arpl
movsl
xchg
cmp
pop
lods
or
push
mov
andl
in
adc
pop
push
xor
push
data16
mov
out
lahf
lock
and
mov
adc
test
notb
sub
inc
gs
dec
les
fcmovb
cmp
lods
push
je
push
jge
popf
mov
mov
jle
aad
std
push
js
mov
push
sub
into
inc
dec
aad
push
ret
pop
iret
icebp
orl
sbb
cld
lods
push
fdivs
jns
insb
push
dec
lea
xchg
repnz
stos
icebp
sub
dec
inc
mov
in
pop
sbb
sbb
and
dec
xchg
mov
pop
cmp
outsb
cmp
test
pop
adc
cmp
lahf
sbb
cmp
cmp
test
cld
testl
push
dec
lea
in
popa
inc
ss
into
ret
repz
cmp
addl
out
add
jb
sub
fsubr
jb
insb
inc
xor
add
insl
insl
sbb
popf
sbbb
repz
stos
adc
and
xchg
inc
add
arpl
xchg
add
sbb
xchg
icebp
or
gs
cmp
xchg
fildl
mov
into
jno
test
fildl
mov
mov
cmp
mov
inc
pop
into
addr16
cmp
mov
jge
test
ret
adcl
push
pop
push
adc
jecxz
sbb
push
incl
add
je
in
mulb
fcmovb
aas
test
jmp
jne
loope
add
cmp
pop
push
add
hlt
adc
loope
dec
sahf
movl
out
mov
dec
aaa
cmp
mov
test
fdivrs
xor
mov
in
sahf
sub
xor
aaa
bound
shll
ret
leave
add
arpl
jle
shrb
mov
bound
lcall
dec
push
add
and
push
ljmp
jne
jb
fstps
push
fcom
xor
add
and
xchg
mov
sbb
add
jae
mov
aaa
das
sub
test
pop
aad
loopew
xchg
jno
fbstp
lcall
dec
outsb
lock
and
inc
movsl
cmpsb
in
add
pop
and
sbb
sub
mov
stos
icebp
sub
mov
or
js
jnp
mov
into
lret
mov
sbb
cmp
mov
xor
and
sbb
mov
mov
repnz
mov
xchg
lcall
push
out
jg
call
cli
sub
scas
repz
lret
mov
ss
dec
lock
loopne
ret
test
add
cmp
jmp
inc
mov
das
call
fisubrl
popa
push
push
mov
push
dec
push
into
pop
fdivrl
and
ret
inc
lret
les
data16
test
mov
test
mov
xchg
in
dec
clc
in
mov
popl
lahf
push
sbb
out
jl
xchg
dec
ret
mov
fidivs
inc
add
addr16
jns
std
sub
test
enter
jne
fisubs
js
jge
or
ret
sub
cmp
aam
clc
enter
repz
aad
and
sub
outsl
mov
mov
ud0
cli
mov
outsb
jmp
out
shrb
imul
ss
dec
lods
hlt
data16
sub
xor
lret
out
iret
mov
insb
movsl
cli
push
insb
xchg
adc
inc
push
sub
add
into
sbb
stos
mov
adc
loop
test
clc
push
sub
imul
arpl
insb
pop
push
mov
std
mov
push
mov
push
lret
mov
adc
test
jnp
xchg
shll
inc
xor
adc
pop
pop
insb
mov
adc
sbb
mov
and
pop
xor
inc
out
push
sub
ret
jmp
ret
mov
push
movl
cmp
mov
divl
and
mov
movsb
xchg
pop
shr
int
pop
dec
jno
negl
pop
jo
loope
cmpsb
insl
lea
or
push
shlb
jo
jne
inc
xadd
insb
insl
mov
sbb
mov
mov
popf
mov
push
ljmp
xorb
aad
cmc
lock
dec
jnp
jmp
pop
lds
pop
and
cs
sub
dec
xchg
or
jecxz
cmp
ficompl
sub
scas
jp
adc
imul
pop
insb
push
roll
adc
dec
or
inc
dec
mov
pusha
pop
sbb
cmp
scas
lcall
pop
jne
sub
cmp
cld
cld
loop
mov
daa
mov
dec
sbb
lahf
fwait
jecxz
inc
mov
jg
out
rcrl
adc
mov
and
sub
jl
decb
pop
jns
push
pop
in
test
push
roll
in
jl
movsb
or
stos
dec
fisttpl
jno
mov
sbb
int3
mov
lret
and
mov
pushf
imul
loop
mov
xorb
lods
rclb
mov
adc
out
xor
or
push
pop
nop
jae
repz
adc
push
popf
out
insb
push
xor
adc
insb
dec
bound
scas
xchg
mov
mov
dec
add
mov
sub
mov
add
xor
movsl
pop
lods
jmp
popa
and
push
push
cmp
xor
das
cmc
imul
add
and
push
cmpsb
filds
pop
cwtl
xchg
mov
outsb
je
inc
in
sbb
rolb
cmp
mov
enter
outsl
lret
inc
cmc
lret
sti
inc
aad
in
ds
stos
jo
xchg
adc
out
mov
fxtract
mov
mov
sub
pop
sahf
cs
adc
jo
ror
cs
mov
dec
outsb
subb
mov
xchg
aas
inc
push
inc
add
outsl
ret
jge
cltd
push
test
test
aam
push
push
jmp
jmp
repnz
inc
add
sarb
push
insl
repnz
ds
jns
or
and
jbe
inc
mov
push
loope
shl
imul
cmp
andb
lods
add
out
pop
jb
mov
addr16
cmp
mov
rcl
sub
call
xor
fs
xlat
add
pop
add
dec
sub
sub
rolb
insb
push
pop
jl
iret
jb
data16
fcomip
xchg
hlt
sub
ss
mov
movsb
dec
mov
pusha
push
cmpsb
or
test
dec
pushf
mov
cwtl
popl
mov
sbb
js
adc
cli
pop
fstl
lds
xor
or
imul
inc
adc
scas
ret
sub
inc
ret
daa
push
rorl
mov
testl
mov
mov
mov
sahf
imul
xor
fstpl
or
daa
adc
jecxz
nop
fwait
sbb
jb
sbb
popf
sub
cs
mov
adc
test
fiadds
mov
test
jl
mov
jp
xor
fiadds
das
mov
add
add
adc
cld
imul
lds
inc
movl
adc
sbb
mov
mov
dec
ss
shlb
inc
std
dec
lds
loope
mov
add
popf
sbb
pop
mov
pop
mov
sub
jns
aad
clc
cmpsl
shl
mov
movb
lahf
popa
cmovne
dec
push
lret
or
bound
test
push
cmpsl
call
adc
clc
push
stos
mov
inc
inc
push
sub
xlat
dec
push
divl
rcll
shrl
loope
hlt
out
jnp
data16
jp
testl
sub
jp
xor
lret
sti
mov
in
das
cli
ss
sub
inc
aam
cli
xchg
mov
pusha
cmc
das
inc
outsl
push
dec
xor
sbb
cld
add
mov
cli
scas
mov
mov
fildll
cmp
popa
or
mov
cs
cmp
int3
pop
sar
mov
cld
sbb
pop
insl
in
inc
lods
or
mov
lods
cld
dec
pop
cltd
test
push
popa
loop
std
mov
pop
cmp
cltd
scas
ror
jge
add
xor
repz
jns
xchg
xor
cmp
cltd
insb
sbb
xor
lahf
push
adc
loope
dec
outsb
sarl
enter
movsb
int
leave
sub
inc
imul
and
fdivrp
sbbb
iret
push
ret
dec
stos
push
push
aad
sub
ret
mov
mov
mov
jne
xor
fnstenv
sbb
mov
int
add
mov
adcl
lods
pop
push
dec
sar
sub
jo
lcall
or
xchg
xchg
mov
adc
dec
push
jp
push
xor
test
xchg
leave
das
push
xchg
sbb
ljmp
out
mov
push
push
sbb
jg
push
dec
lea
arpl
out
ljmp
mov
fldt
std
and
fcom
and
dec
adc
cld
push
test
mov
adcl
in
sarb
jb
je
cmp
adc
cltd
adc
add
sub
ja
add
out
ljmp
int3
mov
cmc
pop
sub
scas
fs
std
inc
leave
insb
rolb
in
out
pop
scas
movsb
jmp
xchg
ja
loop
cmp
notb
fcoms
lea
or
daa
mov
push
cmp
sbb
inc
jno
in
insb
push
sub
xor
pop
mov
cltd
lret
cmp
pop
push
xchg
mov
fldt
pushw
loope
cmp
xchg
pop
movsl
mov
jo
movsb
mov
dec
xchg
out
push
pop
jae
mov
push
jno
xchg
daa
mov
hlt
xor
daa
cli
rorl
or
ds
add
add
andl
lret
outsl
inc
leave
mov
call
pop
in
ds
negb
ss
push
nop
lods
sbb
mov
mov
dec
mov
mov
imul
sbb
jns
inc
add
jmp
jge
add
imul
idivl
or
mov
scas
cmp
lret
adc
and
scas
mov
adc
push
mov
jnp
clc
testl
enter
hlt
add
and
sub
pop
test
ja
cmp
lea
insl
in
mov
fsts
jne
imul
ss
inc
cmp
pop
inc
xlat
adc
loopne
mov
lret
sbb
ret
xchg
push
add
mov
cmp
xor
jg
add
test
pusha
test
cltd
aad
ss
push
leave
jo
and
push
jo
dec
sbb
jns
or
fsubrs
and
test
jg
cmp
and
loop
aam
cwtl
or
pop
push
out
push
adc
and
aaa
sahf
sub
idivb
sbb
inc
dec
jg
lret
mov
jge
out
js
inc
push
js
xchg
cmpsb
in
xlat
cmp
push
int
leave
js
mov
sbb
imul
dec
insl
xor
test
add
sbb
xchg
sti
pop
ljmp
jne
fidivs
das
imul
push
and
mov
and
int
negb
int3
sbb
cmp
call
lods
mov
not
pop
hlt
repnz
sub
inc
cmp
dec
ljmp
dec
jmp
xchg
mov
ss
mov
pushf
iret
adc
add
repnz
lret
pop
and
ror
je
loop
mov
xor
add
data16
test
inc
arpl
jg
test
mov
dec
std
mov
sahf
push
push
push
stos
scas
fs
mov
les
jo
subb
pop
in
jae
xchg
and
in
sub
aas
adc
adc
mov
cmp
jmp
cwtl
adc
cs
dec
jae
in
cmpsb
mov
sbb
mov
jl
sbb
into
pop
jg
sub
xchg
das
or
dec
lods
jle
int3
push
ret
lret
cmp
mov
das
push
aad
icebp
and
sbb
push
push
es
add
testb
mov
and
sbb
cmp
xchg
sub
mov
xor
cmp
push
sub
hlt
fsubr
sub
xor
sub
xor
mov
add
rolb
sub
rcrb
cmc
mov
inc
mov
es
pop
xor
cld
xchg
pusha
push
js
ror
jb
mov
in
pop
and
bound
mov
divb
icebp
test
mov
mov
mov
xchg
or
or
ror
shl
aam
ret
xchg
leave
shrl
addr16
xchg
popf
sbb
insl
adc
xor
xchg
loope
cli
in
mov
call
lcall
test
movsb
lret
sub
addr16
in
inc
xchg
dec
outsb
xor
ljmp
xchg
fstps
and
xor
adc
cli
push
lahf
jmp
fnstenv
orl
xchg
cltd
pusha
mov
mov
notb
pmaxub
sbb
jae
xchg
inc
das
in
xor
fists
pop
cld
fdivs
sbb
jecxz
popa
and
jb
mov
fisubrl
fneni(8087
xlat
xchg
cltd
inc
mov
jae
arpl
add
and
imul
and
rol
out
sub
adc
xor
lcall
sub
sbb
cld
gs
mov
mov
ss
lods
sbb
gs
pop
iret
aas
xor
add
fyl2xp1
push
pop
sbb
dec
adcb
loop
cmpsl
mov
mov
jl
in
jmp
out
dec
inc
inc
sahf
dec
add
or
sbb
lds
push
inc
xchg
fisttpl
aaa
and
out
enter
jbe
je
imul
loope
pop
mov
adc
xchg
clc
out
dec
das
sub
pop
subb
insl
jle
adc
and
sub
jnp
test
inc
aad
mov
inc
data16
decl
data16
push
out
jle
loope
or
sbb
fisttps
ret
adc
cmp
xchg
push
mov
nop
sti
xchg
cmp
jecxz
xchg
and
adc
pushf
fcomp
inc
cmp
pop
pop
fbld
lahf
movsb
push
sbbl
dec
into
arpl
push
jb,pn
cmpsl
xchg
outsb
sub
aaa
and
loope
ret
mov
sbb
push
in
aas
cmove
fisttpl
inc
adc
push
mov
mov
hlt
insl
lret
fmull
jbe
jl
mov
mov
adc
mov
xor
ret
std
mov
push
lret
xchg
xchg
ret
add
out
repz
arpl
pushl
mov
jne
and
das
out
cmc
pop
adc
cmpsb
pusha
mov
dec
xchg
jo
into
test
push
rcrl
mov
cld
nop
shll
sarb
push
imul
sarl
jg
addr16
or
add
push
clc
es
insb
lds
aas
mov
clc
and
jbe
cwtl
shl
mov
xlat
loope
rcrl
testb
add
jmp
bswap
outsl
ja
iret
jne
pop
ret
dec
or
sbb
mov
adc
jmp
xchg
mov
call
jle
stc
pop
jl
out
inc
add
jno
mov
pop
lret
mov
fmull
pop
cmp
repz
sub
mov
arpl
loope
xchg
xchg
jbe
dec
jbe
cmpsb
in
out
push
mov
fisubrl
in
sbb
push
fildl
sbb
imul
push
popf
icebp
xchg
scas
pop
aaa
adc
pop
sub
mov
mov
push
ret
or
cli
inc
fs
imul
cli
js
mov
jge
push
call
stos
push
shll
int3
sub
cs
jo
xlat
sahf
outsb
loope
lretw
adc
mov
in
fmuls
cmp
subl
pop
outsl
inc
out
in
out
or
into
add
mov
fwait
dec
sub
rorl
sbb
cmp
add
movsb
shlb
and
and
xchg
cmp
rcrl
imul
out
dec
sub
mov
cmp
ret
pop
xchg
mov
clc
xchg
test
xchg
push
or
pop
jmp
xchg
mov
lahf
orb
lods
pop
cld
inc
jge
lods
aas
in
cmp
sub
in
mov
pop
inc
cmp
add
pcmpgtd
insl
pop
jp
xor
scas
adc
mov
lods
in
loope
rcrl
bound
mov
aaa
into
ret
cmpb
sbb
push
mov
les
jns
jmp
xor
insb
and
push
in
inc
and
xchg
aas
add
jg
and
lock
pop
fcoml
inc
adc
shll
jo
mov
icebp
sub
dec
adc
jg
push
sti
sti
adc
jb
data16
xor
adc
adc
out
sbb
dec
or
sti
sbb
jl
stos
lea
xor
and
sub
mov
cs
jno
jno
and
mov
icebp
adc
int
or
sub
cld
out
cld
lcall
or
cld
icebp
jp
sahf
enter
test
push
and
push
daa
frstor
mov
and
cld
test
divl
add
dec
fisttpll
sub
mull
leave
mov
lods
outsl
jecxz
testb
aas
xchg
test
sbb
xor
add
xor
xchg
bound
fidivrl
mov
lret
inc
mov
je
xor
icebp
xchg
negl
or
xchg
sbb
lahf
xchg
and
and
rclb
cmp
pop
jle
popl
mov
bound
not
call
fstpl
pop
xchg
jns
shrl
int
arpl
push
mov
sub
cmpsl
cltd
xor
movb
xchg
push
shll
imul
add
repz
prefetcht1
cld
adc
mov
aad
sti
jecxz
decl
push
push
inc
or
xor
cmpsb
add
out
and
jb
std
call
pushw
shrl
int3
daa
lcall
std
jo
fucompp
fldcw
xor
mov
mov
leave
dec
call
in
sub
xchg
jns
mov
dec
mov
add
inc
push
cwtl
int
hlt
pop
shr
sbbb
mov
repz
lds
sbb
sbb
jle
mov
into
loopne
cltd
mov
pop
inc
inc
out
into
jae
enter
outsl
jmp
bound
add
pop
xor
daa
sbb
fcmovne
pop
inc
jno
and
out
mov
jno
and
dec
mov
jge
rcll
push
push
js
cld
lods
shlb
push
pop
pop
pop
cmp
xor
mov
daa
add
cmp
xchg
xlat
outsb
out
xchg
adc
scas
push
inc
or
movl
mov
mov
push
mov
ret
jnp
jo
lcall
sbb
in
mov
addl
inc
scas
jmp
sarl
xchg
sahf
lret
js
lret
and
mov
cmp
and
push
shll
ss
push
shr
or
shll
dec
addr16
gs
in
jecxz
push
fprem
aad
subl
leave
fbld
mov
mov
push
fimull
adc
inc
outsl
fsubr
lcall
jl
mov
push
mov
iret
sub
stc
enter
shr
or
ret
or
sub
popa
pop
mov
push
dec
xchg
in
bound
rorl
mov
or
subl
adc
mov
add
outsb
rorl
xorl
or
push
scas
pop
jmp
mov
xor
jg
lds
jne
pop
aad
adc
mov
or
xor
xor
add
adc
lds
and
or
in
sub
xchg
out
cltd
mov
inc
mov
jns
clc
xchg
xchg
mov
xor
mov
jns
add
sbb
inc
jae
pop
lea
fbld
sbbb
adc
aam
iret
mov
mov
mov
pop
lds
addr16
pop
movsl
sahf
lret
sarl
mov
dec
cmpsl
sub
dec
push
stc
repnz
test
lods
xlat
imul
and
mov
cmp
lcall
inc
adc
push
aaa
in
mov
aaa
pop
jmp
push
stos
arpl
fsub
fcompl
push
out
roll
fdivrs
sbbb
ss
insl
aad
mov
add
call
outsb
adc
fnsave
inc
push
pop
add
xlat
cmc
sub
jno
cmp
add
fldpi
fs
loope
fsubrl
xor
and
xchg
inc
mov
aaa
imul
gs
xor
pop
ja
filds
xchg
fstp
push
in
cmc
push
pop
xchg
hlt
jnp
mov
jecxz
cmp
stos
into
arpl
mov
scas
cmpsb
xor
sbb
lret
inc
xor
sti
mov
mov
and
mov
mov
xlat
scas
jp
mov
aas
loope
imul
mov
arpl
test
dec
pusha
add
fwait
pop
stos
xchg
inc
and
cwtl
inc
xor
aad
cmpl
lods
jns
adc
fcoms
ret
cmp
mov
pop
and
scas
mov
or
mov
stos
addr16
or
inc
movsl
data16
xchg
or
inc
lahf
test
cltd
add
loope
loope
cmp
mov
mov
adc
adc
lods
push
or
cs
add
test
pusha
jl
cmp
jnp
adc
popa
faddl
add
dec
mov
lea
jmp
dec
lret
addb
js
sub
push
xor
lret
cli
ficompl
fxch
jg
xchg
mov
adc
sarl
mov
cld
push
repnz
icebp
shll
loopne
mov
inc
loope
lret
cli
adc
or
pop
push
pop
jmp
sbb
enter
inc
adc
mov
in
out
dec
sbb
shll
popf
mov
inc
dec
xchg
jp
cmpsb
stc
jle
pusha
ss
push
lret
xor
fstl
inc
insb
mov
out
push
sahf
add
push
or
dec
pop
jecxz
test
mov
cs
das
mov
mov
cmp
dec
mov
xor
jae
xchg
cld
adc
clc
lcall
pop
cltd
fnsave
lds
or
cmpsb
push
js
ljmp
xor
aad
pop
fsubr
dec
loop
das
cwtl
fmul
mov
vcmpsd
mov
dec
inc
xchg
xchg
or
ja
test
cmp
sahf
inc
mov
enter
jbe
test
mov
dec
loop
sub
xchg
leave
fdivs
rcll
or
xor
arpl
sub
adc
jb
adc
and
push
xor
push
outsl
mov
xchg
push
loopne
in
sub
popf
mov
fisubs
jb
aaa
daa
push
or
pop
stos
test
int3
cs
decl
movsb
xchg
push
jns
pop
pop
mov
mov
push
hlt
mov
mov
mov
mov
test
or
in
pop
xchg
imul
repz
mov
mov
orb
insl
movsl
xor
cld
mov
cmp
inc
iret
subl
es
sbb
push
or
arpl
inc
pop
or
repz
mov
xor
pushf
mov
test
jmp
aas
pop
shll
loop
pop
js
daa
pop
add
cmc
loope
inc
pop
sbb
out
movsl
mov
cld
popf
adc
add
jo
sahf
jl
mov
pop
enter
cs
sub
lods
or
ror
test
scas
cmp
push
jg
xchg
das
lret
cmc
daa
imul
cmp
mov
mov
ljmp
test
jecxz
dec
and
inc
or
push
mov
mov
mov
in
lret
cli
fnstsw
add
aas
fisubs
sbb
and
inc
mov
pop
or
ret
sbb
lcall
adc
call
jnp
inc
xchg
popa
adc
sub
push
sub
jle
or
in
negb
sbb
insb
cs
movsb
ds
jle
mov
add
mov
test
ret
pop
xor
inc
sbb
adc
xchg
dec
xchg
xchg
mov
sahf
fs
push
in
xchg
xchg
loope
cmp
leave
lock
mov
jle
xlat
mov
outsl
aam
lds
mov
push
std
xchg
mov
xor
imul
push
add
inc
xchg
sbb
aaa
cltd
mov
mov
dec
shrl
cmp
rol
lret
mov
fisttpl
cwtl
popa
mov
cmp
mov
mov
push
mov
test
and
call
icebp
cmp
or
pop
adc
inc
jnp
push
dec
pop
pop
jmp
adc
je
scas
mov
mov
das
sbb
fildl
or
mov
ljmp
out
aam
aad
lds
and
adc
je
pop
jae
mov
push
pop
out
jbe
in
mov
xchg
xchg
push
lret
lret
mov
cmp
pusha
ret
das
sub
sbb
add
add
xchg
push
jno
sub
fbstp
mov
adc
jo
jno
add
sbb
pop
mov
and
loopne
sub
or
outsl
outsb
test
pop
nop
decb
push
or
imul
pushf
mov
fs
int3
lret
sbb
sbb
lret
ret
fsubrl
mov
fiadds
cmp
mov
xchg
or
test
out
bound
mov
mov
cmp
cmc
icebp
xchg
xchg
not
add
out
jno
jge
push
push
pop
pusha
xor
outsl
push
or
mov
and
jae
xorb
pop
mov
add
stc
pop
push
add
jnp
in
dec
cmpsb
jnp
aad
aad
and
xchg
and
xor
shll
dec
nop
insb
dec
adc
je
lret
inc
adc
adc
pushf
adc
pop
imul
imul
jns
sbbl
stc
cwtl
pop
jge
jecxz
pushf
mov
hlt
mov
pop
xor
pop
xchg
dec
rclb
dec
sbb
fmul
ss
cld
insl
cmp
in
dec
ss
loope
shll
inc
stos
jnp
insl
sub
sahf
nop
pop
stos
shl
jns
sahf
xorb
adc
and
lods
loopne
add
jmp
das
lret
xor
mov
sbb
cmp
push
repz
popf
inc
sbb
fwait
add
cmp
jae
add
cmp
dec
lret
ret
icebp
and
xor
hlt
iret
sbb
jae
mov
out
mov
cmp
xchg
jo
divb
std
int
cltd
testb
mov
adc
lahf
aad
push
pop
cmpsb
mov
cld
aad
pop
jnp
hlt
and
mov
and
push
es
push
imul
ds
imul
xor
sub
jmp
fstps
push
inc
idivb
rcrb
mov
push
insl
js
mov
clc
sbb
into
imul
loop
push
daa
addr16
xor
pusha
imul
mov
movsb
cltd
sub
fisubl
stos
xchg
adc
jge
pop
add
mov
adc
xor
pop
mov
iret
jp
inc
mov
sub
adc
lds
lret
subl
add
sbb
jae
sub
mov
xchg
xlat
fidivs
xorl
mov
cmp
and
inc
dec
pop
int3
mov
adc
xchg
fisubrl
add
mov
add
inc
cmp
test
dec
pop
mov
sbb
cltd
mov
out
adc
xchg
mov
stos
push
lcall
imul
bound
sbb
mov
xchg
ss
ljmp
dec
mov
xor
adc
addr16
push
adc
ficomps
cmp
loope
clc
inc
mov
les
pop
jns
cld
and
mov
or
int3
mov
aad
ds
or
test
push
add
dec
jns
pop
add
mov
xchg
pop
pop
push
or
out
fisubrl
push
sahf
xchg
adc
lock
adc
and
pop
movsl
add
jecxz
stc
imul
in
cmp
in
sbb
nop
sarl
shrl
ds
sbb
xorb
mov
mov
xor
mov
aad
mov
cmp
sahf
sub
fdivrl
xchg
sub
mov
loopne
cmpsl
sub
jae
cli
sub
adc
pushf
cmp
xor
int3
out
xchg
adc
shlb
arpl
adc
or
push
push
jne
dec
hlt
cltd
arpl
cmp
ds
insl
lcall
mov
fdivr
pop
je
outsl
cmp
loop
inc
fldenv
xchg
pop
xchg
mov
xchg
incb
jne
sbb
mov
pusha
jo
mov
push
dec
mov
test
add
add
sbb
adcl
push
inc
and
iret
mov
or
aaa
dec
jmp
mov
xchg
add
movsl
insb
pop
mov
jb
jne
cmp
push
push
sbb
jg
mov
xchg
lods
rorl
sub
cli
jns
inc
iret
xorb
jae
pop
rclb
or
adc
cmp
and
aas
xchg
mov
push
ds
shrl
outsl
dec
ret
lret
inc
into
dec
dec
outsl
jo
jmp
mov
lea
in
fwait
mulb
loopne
push
push
sbb
mov
sbb
ljmp
cmp
sbb
je
not
fstl
stos
mov
pop
dec
adc
fdivrs
jmp
xlat
andb
leave
ss
cwtl
or
movsb
inc
ljmp
inc
mov
push
loopne
or
mov
stos
outsb
fwait
and
shll
enter
fimuls
shrl
dec
adc
loop
in
sbb
adc
push
mov
adc
sbb
jbe
idivb
and
in
dec
jg
mov
jp
dec
push
sub
data16
outsb
aaa
add
data16
inc
xchg
es
pushw
cmc
jae
or
ja
pushf
xchg
adc
shlb
xchg
jg,pt
int
mov
dec
add
xor
mov
cmpsb
mov
mov
aaa
cli
ret
or
test
outsl
daa
loopne
pop
jno
out
mov
pop
out
pushw
ficomps
sbb
xor
push
mul
add
adc
pop
loopne
scas
popl
movsl
ljmpw
jo
ret
jecxz
scas
push
aam
sbb
push
cmpsl
incl
adc
inc
fdivrs
mov
mov
pop
push
aad
lea
insl
push
pop
add
fcoms
cwtl
fimull
movl
pop
xor
pop
jns
jp
aad
adc
movsl
push
and
out
pop
rorl
xchg
add
cltd
sbb
pop
test
insl
jno
xchg
lret
icebp
pop
mov
adc
xchg
sar
mov
sub
adc
inc
fnsave
stos
jmp
in
addr16
mov
or
je
pop
mov
das
out
ds
cmp
call
or
sbb
outsl
xor
test
push
pop
cmp
mov
and
pop
cmp
ja
das
jmp
push
rolb
or
sarb
out
or
mov
jno
xor
inc
cltd
iret
dec
cmpsb
lods
popa
ffreep
push
movsb
pop
or
divb
test
jmp
jl
ja
sbb
add
or
mov
adc
jo
jge
repz
flds
pop
nop
les
cwtl
ret
cmp
pop
inc
xlat
push
push
mov
fidivrs
dec
stos
repnz
mov
cmpsb
pop
fwait
daa
xchg
mov
movsb
idivl
mov
mov
xchg
sbb
dec
add
rclb
scas
and
loopne
mov
popa
pop
jo
sbb
sbb
lcall
shll
and
sahf
jnp
ljmp
push
es
xor
cmp
and
rcr
sbb
xchg
clc
jle
pop
adc
jg,pn
mov
add
xor
imul
sub
pushl
shrb
lret
dec
int3
mov
jo
push
mov
nop
jmp
cmp
push
xchg
xor
leave
mov
inc
movsl
test
arpl
leave
fildll
in
lahf
mov
sahf
mov
jecxz
xchg
roll
int3
mov
xor
adc
push
fisttps
outsb
xor
pop
jg,pn
mov
mov
mov
clc
in
xchg
inc
xor
cmp
jnp
fists
xor
movsl
xor
std
sahf
push
lds
mov
mov
dec
push
mov
push
inc
pop
in
orl
mov
mov
xchg
sub
mov
and
and
in
xchg
push
sbb
lahf
mov
movb
push
xor
mov
lds
add
dec
mov
addr16
test
xchg
mov
das
daa
aas
xor
lahf
adc
out
dec
sbb
sbb
aaa
fisttpl
and
fisttpll
nop
fisubrs
sar
ss
pop
in
jne
cs
mov
push
mov
sar
dec
popa
lahf
mov
or
out
imul
mov
aam
mov
adc
mov
sbbl
jp
lret
dec
clc
jp
fnstenv
lea
xchg
mov
xchg
loopne
xor
daa
mov
mov
cmp
stc
add
lds
js
cmp
lods
push
outsb
in
add
xchg
mov
loop
push
mov
adc
or
shll
ficomps
and
scas
aad
or
lock
pusha
fs
sti
pop
aam
aaa
mov
fidivl
sub
and
int3
fsub
pushf
les
ds
cmp
data16
icebp
cmp
fdivrs
xchg
out
jo
stos
and
mov
cmp
scas
xor
mov
jnp
mov
shl
xchg
aad
mov
and
pop
xchg
xchg
dec
cmp
dec
sbb
repz
mov
push
jnp
fs
mov
jbe
popa
movw
push
movsb
dec
push
or
test
aad
mov
push
jle
sbb
lahf
repz
fucom
cld
xor
mov
fistps
jl
or
inc
lods
mov
mov
shlb
xor
ficoml
add
sub
scas
js
and
pop
data16
cltd
fidivl
cmp
xor
insl
xor
in
call
xchg
enter
mov
and
out
rolb
sarl
lahf
cmpsb
out
adc
sub
jns
xchg
and
mov
sbb
jg
sbb
sbb
sub
mov
ja
adc
push
cmc
shrb
and
repz
lods
cs
pop
adc
ljmp
scas
sub
pop
in
inc
jnp
imul
or
fs
into
cmpsl
inc
imul
push
inc
push
pushf
sti
ljmpw
push
mov
and
xchg
out
inc
in
mov
rcrl
ret
dec
sbbl
adc
inc
cli
icebp
cli
popl
and
out
mov
sub
and
jle
jge
mov
mov
int3
fistpl
imul
push
mov
gs
adc
fistpl
add
pop
mov
ficompl
and
out
mov
push
xchg
pusha
jbe
cs
out
out
lods
insb
outsb
decl
in
ljmp
sub
js
push
jbe
stos
imul
cli
lods
rolb
inc
jp
and
loope
adc
sub
xor
dec
or
push
dec
push
push
jbe
std
sub
andl
inc
fdivrp
lods
inc
inc
add
sarl
add
sti
and
shl
xor
mov
mov
iret
xchg
pop
cmp
pop
xor
fnclex
lret
call
pop
mov
dec
mov
pop
mov
mov
lods
ljmp
xor
jmp
scas
insb
lods
movsb
jge
cwtl
xor
xlat
insb
push
movsb
repnz
fisttpll
jmp
das
arpl
shrl
or
and
shll
fwait
std
iret
inc
or
lods
daa
jmp
xchg
xor
mov
inc
mov
mov
shrb
or
and
repz
sbb
dec
xchg
mov
sbb
outsl
pop
mov
push
dec
pop
mov
lock
xchg
cmp
add
pop
push
xchg
js
push
sbb
push
add
dec
scas
xchg
mull
cld
mov
rolb
sub
push
add
outsl
mov
push
hlt
sub
addb
push
mov
faddl
pop
xor
mov
scas
mov
fs
push
nop
mov
jae
cmp
lret
add
and
mov
adc
or
mov
pusha
mov
jmp
cmp
ret
out
cmp
rolb
aam
hlt
sub
or
or
test
xchg
in
xor
sub
jge
out
dec
in
inc
add
dec
jmp
pop
xor
lock
mov
xor
imul
push
mov
out
sub
xchg
iret
leave
and
pop
cmp
imull
dec
rcrl
stos
ds
add
add
xor
cmp
xor
xor
jb
fcomip
add
popa
push
inc
add
dec
xchg
pop
aad
push
push
cli
jle
mov
inc
in
mov
push
xor
shl
push
inc
sti
movsl
push
mov
pop
mov
mov
mov
add
push
mov
in
sub
sub
imul
rorb
sub
mov
je
sbb
xchg
aas
popf
mov
lds
inc
testl
jmp
mov
clc
pop
pop
and
push
ret
loop
cld
aam
outsl
stc
aas
in
fists
ja
lods
cmpsb
xor
adc
int
in
aad
sbb
out
daa
cmpsl
sbb
jecxz
cwtl
push
iret
adc
idivl
pop
xor
cwtl
add
ljmp
cs
jns
xor
fnsave
sub
mov
add
push
xchg
mov
out
ror
std
arpl
xor
rorb
nop
or
adcb
cmp
push
pop
lods
push
iret
mov
jno
aad
movsl
sub
mov
rcrl
mov
dec
lahf
xchg
xorl
or
aam
add
push
addr16
fsub
fidivrs
pushf
lcall
je
cmovns
bound
xor
in
xchg
mov
mov
inc
cmc
ret
lock
and
fs
lock
adc
addr16
rcll
mov
scas
enter
add
call
xchg
sub
lea
mov
xchg
push
cmpb
stc
push
pop
sbb
mov
and
adcl
fistl
dec
cmp
push
and
cmc
push
mov
push
xor
in
ret
push
dec
mov
out
popf
aas
mov
push
pop
xchg
mov
mov
add
inc
lcall
push
dec
pop
push
push
push
add
movsb
add
insl
shl
mov
je
leave
nop
test
pop
push
and
sub
jno
push
push
je
adc
jb
mov
lods
jle
mov
jp
mov
mov
out
arpl
into
pop
test
cmpsl
out
pushl
nop
addr16
ss
adc
adc
sti
jae
push
ds
int3
xchg
hlt
push
push
adc
pushf
mov
xlat
scas
mov
dec
pop
and
decl
push
adc
sbb
stos
icebp
push
out
mov
cmp
ror
adc
fld
or
int3
ror
xchg
mov
push
andl
pushf
mov
cmpsb
lods
cmp
call
test
repnz
adc
in
scas
jo
pop
nop
push
mov
jns
mov
fidivl
popa
pop
jle
sbb
or
cli
ljmp
sbb
insb
pop
add
sub
mov
sub
fst
scas
dec
sub
or
mov
dec
out
add
std
push
loope
lret
ss
lock
dec
jle
add
jno
mov
ret
imul
decb
mov
pushf
or
test
inc
sti
xchg
jmp
push
jge
dec
add
js
pop
push
mov
cmc
and
or
sbb
lcall
pop
adc
fldl
or
mov
jae
add
addr16
dec
repz
inc
andl
testl
and
push
cmpsl
pushf
movlps
and
lods
stc
inc
mov
inc
aas
jne
mov
fwait
sbb
lret
inc
mov
xchg
aaa
jge
daa
leave
ret
sbb
add
jecxz
jle
xchg
add
pop
push
les
pop
fldenv
add
dec
adc
loop
and
xor
pop
iret
mov
pop
adc
xchg
mov
aam
push
push
div
pushf
xchg
xchg
cmp
test
cmp
or
jb
mov
sarb
dec
and
inc
pop
pop
fildll
cmp
sbb
nop
mov
test
rcrb
outsl
out
fcomp
xchg
mov
pop
nop
rorb
inc
movsb
inc
incb
xchg
xchg
movsl
andb
testl
jmp
jl
mov
mov
xchg
sbb
std
mov
xlat
pop
jecxz
sub
rcl
int3
cmp
clc
cmp
push
mov
in
cs
xor
jge
jae
loop
sub
cli
push
jno
in
inc
sbb
mov
scas
nop
out
out
xlat
xor
push
cmp
mov
sub
adc
mov
jg
mov
mov
insb
jl
out
xchg
inc
sub
pop
enter
cmc
mov
add
insl
stos
adc
into
ds
adc
mov
daa
xchg
push
cwtl
cmp
inc
sahf
repz
mov
mov
mov
ja
pand
pop
jne
inc
dec
xor
out
movsb
dec
imul
push
aad
clc
and
inc
arpl
push
xlat
sub
ja
popa
rclb
jne
fmul
cmpl
stc
jg
call
in
movl
scas
mov
daa
pop
gs
xchg
pushf
lret
jnp
cmp
inc
push
lret
sub
mov
int3
mov
mov
mov
push
sub
es
mov
sbb
cmpl
inc
or
pop
loope
fnstcw
jmp
insl
std
mov
xlat
sub
call
push
jbe
cli
or
add
sbb
out
sbb
lahf
cmpsl
and
jg
imull
or
mov
scas
adc
jg
ret
dec
scas
test
mov
push
mov
mov
mov
cmp
popf
leave
jl
dec
inc
sbb
inc
cltd
sub
cli
dec
aas
aam
sbb
inc
addr16
xlat
mov
pop
jno
fists
repz
add
jae
jno
pop
sarl
push
repz
inc
and
fimuls
rcrl
cs
inc
mov
or
add
gs
push
xor
push
shl
mov
inc
add
xor
xlat
cwtl
mov
fsubs
imul
rorb
shrl
lods
mov
insb
jnp
pushf
mov
adc
push
repnz
and
add
sub
mov
bound
and
jg
mov
jo
rorb
ja
jns
aad
loope
mov
cmp
sub
or
or
dec
jmp
dec
sbb
inc
mov
scas
jl
test
lds
mov
jae
mov
and
clc
pop
hlt
outsb
mov
jl
lret
pop
repz
sarb
stos
adc
dec
inc
and
dec
xor
adc
sub
lock
test
repnz
ficompl
push
adc
sahf
inc
and
adc
bound
xchg
xchg
bound
into
int3
addr16
cmpsl
out
push
or
out
hlt
or
scas
mov
test
adc
jo
call
cmp
fildl
sbb
jecxz
add
pop
in
mov
xlat
pop
and
fsubp
ljmp
adc
cmovl
push
pushf
adc
dec
push
mov
mov
fsubl
jo
loopne
icebp
adc
loopne
jecxz
add
pop
scas
fwait
ja
pop
out
push
or
pop
dec
into
outsb
and
mov
jecxz
popa
jnp
out
mov
xchg
mov
xor
mov
insl
mov
mov
and
mov
arpl
jmp
jle,pn
add
or
enter
mov
and
cmp
das
cmc
pop
mov
mov
leave
es
popf
sbb
pop
repz
dec
or
out
inc
or
add
inc
fs
sbb
addr16
fcoms
roll
nop
cltd
push
les
test
jno
mov
addb
add
test
pop
push
out
jae
loope
cmp
jle
cmp
test
jmp
pop
add
dec
cs
rcrl
and
push
sbb
cmp
mov
sbb
cmpsb
xor
inc
jnp
pop
mov
and
negl
inc
aam
call
adc
xchg
pop
cltd
add
mov
sti
xor
jne
push
add
hlt
add
scas
jo
jp
sbb
pushf
jmp
xorl
push
clc
mov
ja
sub
jg
lds
test
arpl
and
std
aaa
xchg
ja
and
push
data16
push
bound
out
cmp
sti
cmp
aad
xor
sub
inc
sbb
xor
adc
push
and
fdivrp
jno
dec
mov
xor
xchg
cmp
mov
lret
mov
icebp
leave
sbb
in
xchg
hlt
push
call
in
mov
push
pop
xor
sarl
enter
aas
fwait
xor
scas
and
fcomi
mov
mov
popa
xchg
repnz
lret
dec
ljmp
loop
mov
push
in
and
shll
pop
or
insl
push
fcoml
rorb
int
fmull
dec
pop
es
adc
mov
outsl
jmp
mov
mov
ret
cmc
mov
fwait
mov
bound
dec
sbb
sub
fldt
pop
jno
fmull
sbb
xchg
es
mov
out
movsb
mov
out
cmp
call
sub
or
fwait
lea
and
icebp
in
pop
dec
mov
subb
push
shl
adc
in
ljmp
movsl
push
mov
ret
sub
hlt
xor
push
subl
mov
sub
inc
sbb
inc
add
push
clc
mov
sbb
xor
cli
insl
jns
xchg
dec
ja
rorb
mov
es
pop
in
cmp
add
push
sbb
mov
and
dec
pusha
in
push
std
sbb
and
xor
dec
aaa
push
jo
dec
jge
add
sahf
fadds
pusha
pop
loop
mov
or
mov
xchg
mov
dec
adc
lahf
fistps
in
mov
push
push
pop
std
dec
outsl
ja
xor
mov
lcall
push
out
mov
aas
in
out
icebp
push
mov
xor
xchg
repnz
aaa
out
mov
repnz
sub
repz
push
testb
mov
or
fdivr
negb
and
add
sbb
cld
cmpsb
pushf
cmp
arpl
push
arpl
adcb
sub
sub
pop
mov
mov
stc
sbb
mov
lahf
movsl
pop
aas
movsb
bound
fsubl
jno
pop
jle
fsubr
lds
dec
cmpsl
ret
icebp
pop
sub
stos
and
shl
faddl
in
pop
cs
or
fisubs
mov
adc
mov
cmc
and
andb
ljmp
jg
mov
ja
subl
cmc
repz
leave
into
nop
ljmp
pop
movsb
dec
out
mov
jge
jne
mov
cmp
sub
inc
jle
es
imul
nop
pop
dec
imul
xchg
mov
incb
jo
fwait
adc
mov
lods
jae
inc
cmc
jb
pop
pushf
hlt
mov
stc
xchg
fs
or
lea
or
and
jbe
inc
inc
pusha
out
sub
in
es
pop
xor
mov
pop
push
jb
rcrb
nop
mov
mov
push
xchg
inc
andb
aas
pusha
xor
int3
adc
in
hlt
imul
pop
shll
mov
cmpsl
sarb
pop
pop
fwait
cmc
fstps
lret
icebp
and
sarb
inc
push
stc
cmp
dec
cld
je
or
je
call
push
fsubrp
into
push
or
cmp
sub
push
or
sbbb
pop
dec
cmp
push
mov
and
arpl
lock
fsubl
mov
stc
xor
push
jle
aas
xor
add
daa
mov
stos
out
add
pop
push
push
cmpb
in
sbb
pop
xchg
mov
shlb
lea
jb
in
xor
push
shlb
js
sbb
aam
insb
mov
loope
sbb
rorl
push
test
pop
add
aam
bound
push
shll
cli
xchg
jbe
inc
dec
shlb
xor
push
test
jnp
popf
mov
xchg
jmp
or
imul
loop
jmp
push
cmp
sub
mov
add
mov
pop
and
ret
jp
jae
sahf
dec
fildl
sub
pop
int
icebp
or
xor
mov
test
enter
push
shr
cmp
add
test
mov
sub
pop
fdivrs
xchg
data16
sbb
call
jnp
inc
fiaddl
dec
xchg
or
popa
xor
and
mov
int3
mov
add
adc
xchg
lods
in
les
aas
mov
xchg
stos
in
adc
dec
xor
into
cmpsl
scas
adc
and
dec
dec
and
mov
mov
push
rcrb
lret
sub
test
mov
xchg
popa
test
nop
outsb
push
mov
in
and
xorb
jne
adc
fcmovne
lret
adcl
xchg
insb
scas
rclb
aam
lahf
mov
vpmovzxbd
repnz
xor
cmp
call
dec
mov
fwait
sub
andl
add
xchg
cltd
jb
adc
push
arpl
loope
lcall
jne
push
jge
shlb
in
mov
sbb
lahf
jno
scas
scas
lcall
mov
sbb
inc
or
xlat
fs
dec
hlt
mov
push
dec
cmp
mov
out
decb
and
in
outsl
dec
pop
adc
sub
and
xor
ret
repz
inc
cmpsl
xchg
and
sbb
orl
mov
adc
xchg
enter
cmpsl
add
add
or
popl
test
dec
fsts
push
repnz
cmpsb
lock
lret
adc
sub
enter
pop
pop
cmp
repz
negb
fcoml
or
outsb
lret
mov
lea
das
xchg
mov
or
mov
imul
and
cmp
icebp
clc
add
clc
pushf
sti
imull
int3
xlat
outsl
pusha
push
mov
jmp
pushf
xchg
push
push
in
aam
movsb
push
and
jmp
add
sbb
in
cmp
rcll
aad
stc
inc
test
shr
fldt
rolb
mov
dec
cmp
pop
jge
je
lock
cwtl
mov
pop
adc
les
gs
fwait
adc
xchg
inc
xor
popa
pusha
dec
inc
sti
cmp
mov
jnp
mov
aas
pop
aad
mov
dec
push
leave
nop
rorb
cmp
sti
popa
lahf
fs
loop
lcall
mov
or
push
daa
mov
push
stos
lods
cli
dec
cmp
jbe
push
das
xorl
or
aad
icebp
xchg
fwait
lahf
hlt
inc
ljmp
insb
sbb
ja
in
adc
jns
stc
cmpsl
mov
sbb
daa
jo
rorl
fistpl
pusha
int3
push
icebp
cltd
mov
rcr
xlat
movsl
inc
es
sub
lods
pushf
jl
xor
aaa
mov
push
pop
cltd
imul
jmp
cli
sbb
mov
cmpsl
repnz
push
sarl
test
sahf
push
adc
add
stos
lret
testb
clc
in
cmp
sbb
adc
sbb
add
sti
jns
xor
pop
sti
jl
std
in
loopne
push
insb
js
pop
.byte
stos
pop
push
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
jp
mov
pop
call
push
mov
and
inc
push
nop
mov
cmpsl
mov
aas
pop
xor
add
mov
jmp
fdivs
push
xchg
test
xor
imul
stos
mov
call
mov
push
and
fstps
fwait
mov
pop
add
movzwl
xor
xor
add
mov
mov
movswl
sub
add
or
sub
jne
jmp
popf
adc
loopne
pop
aas
or
mov
jmp
aaa
movsb
or
push
das
cmp
loop
push
cmp
jmp
jo
aam
cli
or
mov
into
lds
sbb
adc
popf
mov
adc
dec
add
in
aas
pop
lret
mov
inc
stos
mov
xchg
fstpt
ret
jo
jmp
jo
aam
lock
iret
cltd
add
push
mov
pop
lret
inc
icebp
mov
mov
mov
aam
xor
lods
mov
xchg
mov
iret
repnz
out
loop
les
inc
dec
in
sub
push
lret
mov
popa
sbb
jg
mov
ds
fcmovne
pop
das
jo
les
leave
aam
pusha
mov
hlt
mov
cmpsb
sarl
stos
xor
lcall
sahf
xor
ficomps
cmpsb
test
adc
mov
cmp
mov
les
sarl
pop
adc
outsl
mov
pusha
shlb
push
pop
jo
aam
stos
jno
test
jns
inc
or
cmpsb
adc
ljmp
in
push
and
repnz
xchg
push
push
inc
xchg
mov
xchg
adc
hlt
fbstp
mov
sub
outsl
xor
push
dec
inc
unpckhps
inc
and
arpl
sahf
aas
testb
or
adcl
popa
dec
rcr
std
outsl
mov
xchg
pop
je
imul
add
jb
cmpsb
outsl
add
push
or
cmpsb
pop
adc
push
add
js
sti
push
test
push
jl
xor
cwtl
nop
cmp
sub
out
dec
imul
inc
inc
push
add
test
inc
pop
ds
mov
mov
test
and
lahf
hlt
push
ljmp
lret
pop
repnz
inc
or
mov
jle
scas
es
mov
leave
xor
push
push
push
jp
std
icebp
sub
addr16
shlb
adc
add
dec
or
xor
aaa
push
aas
lods
loopne
jnp
adc
jno
iret
dec
pop
in
repnz
xlat
cs
out
aad
in
pop
lods
repnz
lret
test
aam
jno
pusha
push
rol
or
sub
ljmp
ss
sarl
clc
cmp
lods
fstl
mov
and
aad
push
xor
jno
push
xor
lods
lret
andps
icebp
lds
ret
mov
bound
xchg
pop
cmp
lret
xor
shlb
xlat
movsb
icebp
and
icebp
sbb
lcall
inc
iret
dec
pop
jl
daa
lcall
outsl
ret
stos
jmp
insb
rcrb
dec
enter
jp
cmpsb
push
and
out
and
out
sub
incl
lock
adc
inc
cmp
xchg
sti
movsl
xchg
pop
mov
sub
in
test
cmp
into
xor
ja
sub
out
mov
fdivs
orl
sub
out
mov
cmpsb
xchg
jp
cmpsb
xchg
jp
std
sub
fistps
jecxz
lods
sbb
xchg
jbe
outsl
add
in
rdmsr
xchg
out
outsl
cmpl
ret
mov
push
cmpsl
jne
clc
popa
mov
xchg
adc
adcb
pop
cmpsb
xchg
jnp
jle
jp
in
jnp
push
mov
decl
mov
push
cmpsb
mov
test
sti
movsl
xchg
sub
cmpsb
das
and
cmpsb
movsl
jo
test
xchg
dec
dec
test
xchg
jmp
dec
decl
xchg
jne
xchg
dec
adc
and
jmp
dec
cmpsb
or
adc
or
sbb
xchg
jmp
das
jns
jp
out
sti
mov
or
bound
sbb
jns
mov
lcall
rorb
dec
cmpsb
cli
lret
jne
xchg
out
aam
addr16
xor
xor
daa
outsl
jbe,pn
jp
sbb
scas
dec
lods
ret
cmp
nop
sbb
mov
rorb
dec
cmpsb
out
inc
test
jns
mov
decl
jp
decl
sar
outsb
dec
cmpsb
adc
mov
xchg
mov
dec
insl
dec
cmpsb
or
adc
or
mov
add
adcb
dec
in
and
rolb
cmpsb
xchg
dec
dec
or
jp
cmpsb
xchg
jp
inc
xchg
jp
cmpsb
xchg
jp
cmpsb
fdiv
bound
fcomi
jmp
mov
in
js
jmp
loope
divps
stos
addr16
jbe
push
xor
jl
xor
jg
pop
mov
addr16
js
cwtl
jp
lods
addr16
jbe
push
xor
jl
mov
dec
pop
add
das
mov
inc
mov
mov
mov
addr16
mov
mov
decb
outsl
dec
cmpsb
xchg
jo
das
mov
inc
mov
mov
mov
addr16
std
add
insl
out
add
cmpsb
xchg
jo
das
mov
inc
mov
mov
mov
addr16
std
pop
add
jmp
test
movd
cmpsb
xchg
jp
jl
jae
enter
leave
shlb
das
mov
inc
mov
jae
out
cmpsb
xchg
aas
lods
out
jne
cmpsb
inc
data16
add
jmp
test
mov
or
mov
scas
je
test
jns
or
ds
add
push
repnz
scas
enter
pop
mov
mov
pop
xor
cmpsb
xchg
out
movsl
imul
dec
mov
sub
cmpsb
xlat
loop
imul
repz
lods
sti
in
outsl
xchg
bndstx
test
je
cmpsb
add
xchg
adcb
repz
jp
lcall
jbe
jno
out
aaa
mov
xor
imul
xchg
out
xchg
test
repz
xchg
push
mov
imul
mov
jg
scas
jbe
scas
mov
pop
mov
fstpt
pop
and
fmul
sti
test
clc
inc
cld
data16
inc
adc
fldt
and
jb
xor
pusha
xor
mov
inc
gs
fucomp
cmp
push
jne
cmp
and
cltd
cmp
movb
mov
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
adc
movsl
lea
jne
xchg
cmp
xchg
jp
cmpsb
xchg
jp
cmpsb
cwtl
jp
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
test
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
jp
cmpsb
xchg
and
dec
add
inc
pop
insb
repz
jg
sti
ja
sbb
popa
inc
sbb
ja
in
pop
sbb
sbb
cmp
xchg
and
jb
pop
lods
sti
mov
xchg
cmpsl
mov
mov
sub
mov
mov
jae
push
fisubl
jmp
data16
ljmp
or
add
repz
pop
loope
or
fldz
dec
test
jecxz
sub
stos
mov
ljmp
adc
jl
pop
movsl
lea
pop
std
dec
shlb
xor
xor
sbb
mov
mov
mov
enter
push
sbb
lret
clc
scas
cltd
and
mov
das
dec
lahf
jae
push
das
int
mov
mov
daa
xchg
dec
out
cltd
mov
and
dec
test
scas
push
sub
sub
popf
mov
cli
call
push
arpl
cwtl
or
xor
pop
jae
adc
mov
push
rclb
sub
sub
push
pop
dec
mov
push
test
es
mov
fs
test
outsl
cwtl
rcrb
xchg
or
inc
sub
imulb
clc
push
scas
movsl
xchg
jp
push
push
push
push
ss
popf
fs
adc
imul
xchg
add
arpl
es
mov
sti
stos
adc
incb
mov
stos
mov
stos
cmpsb
push
rorl
aaa
cli
outsl
sub
ja
int
jge
mov
pop
sbb
scas
fdiv
pop
in
mov
xor
mov
mov
std
inc
rcrl
test
mov
stos
out
scas
imul
enter
adc
mov
xchg
cs
pop
fistpll
and
lods
xor
jne
or
push
xchg
or
bound
xchg
jp
cmpsb
xchg
xor
inc
xchg
insl
ss
push
shrb
test
lret
test
mov
jg
jp
shrb
outsb
mov
sahf
mov
in
fsub
enter
inc
std
scas
or
dec
inc
sbb
cmpsb
cmp
ret
sub
sbb
roll
movsl
xor
dec
jnp
jp
mov
dec
and
cmp
popa
mov
mov
xchg
iret
lods
call
dec
divb
ljmp
mov
dec
roll
adc
aad
mov
mov
mov
or
dec
dec
inc
push
sbb
mov
cltd
addl
cltd
adc
cmp
fcoms
cmp
pushf
and
mov
mov
cmp
fldcw
sahf
pop
repnz
mov
mov
add
add
or
add
adc
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
lea
add
lea
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
movb
movsb
dec
mov
add
add
add
lahf
adc
add
ficoms
lcall
dec
jbe
sub
add
jg
push
fstl
test
addb
fstpt
repnz
xor
jecxz
test
lods
and
sti
jo
loopne
mov
popf
sbb
andb
mov
shlb
jge
int3
jns
or
inc
or
push
ds
sbb
or
inc
inc
mov
pusha
in
rorl
sbb
comiss
mov
ljmp
cltd
cmp
lret
inc
in
data16
insl
ljmp
aaa
jp
inc
shll
scas
js
jmp
aas
out
sub
push
adc
mov
hlt
sub
ret
in
add
sub
jbe
sub
fs
push
scas
dec
repnz
movsb
test
pop
pusha
jg
sbb
dec
inc
and
aad
dec
jge
aaa
inc
clc
mov
xchg
pop
xor
inc
pushf
sahf
pushf
out
sarl
push
jae
in
adc
out
sub
xor
push
gs
pop
pusha
cmc
call
movsl
push
cwtl
mov
add
xchg
sub
add
push
pushf
mov
daa
in
fcompl
push
test
cs
test
adc
push
jno
xor
push
test
mov
pop
xor
and
inc
inc
cmp
cmp
addr16
in
mov
inc
sub
jb
ds
cmp
outsb
fwait
mov
into
lods
xor
subl
lret
push
fstps
fidivl
adc
sub
and
enter
mov
setne
jno
pusha
jmp
and
pop
cmc
inc
or
push
adc
mov
xchg
sub
jo
orb
cmp
call
inc
pop
pop
fidivs
mov
rolb
subb
es
fdivrl
out
mov
roll
dec
inc
jne
mov
add
call
or
lds
andb
mov
jbe
sub
cwtl
mov
push
stos
or
inc
aad
push
push
mov
cmp
mov
mov
jo
dec
xchg
xchg
scas
scas
xchg
xor
xchg
jns
jmp
mov
shlb
ret
push
add
in
loop
sub
lcall
fcmovu
xor
flds
js
roll
lods
rorb
pop
sbb
imulb
cld
sub
in
sbb
or
scas
fmuls
pop
cmp
jno
shrl
aam
fnstcw
fwait
add
in
xchg
prefetcht2
push
es
push
pop
std
loopne
push
and
push
mov
mov
xchg
imul
cmp
xchg
xchg
incl
lds
lods
sbb
mov
cli
out
out
cmc
mov
pop
mov
xchg
dec
and
out
adc
push
mov
xlat
cwtl
jb
sbb
mov
xor
mov
xor
adc
iret
out
rcl
sub
add
ds
adc
fldcw
lret
faddl
inc
jge
jb
or
hlt
pop
mov
dec
addr16
in
cmpsb
and
pop
lahf
pcmpgtw
das
or
mov
movsb
out
pop
jge
mov
push
out
jmp
jnp
pop
aam
adc
pop
mov
orb
fisttpll
ret
mov
xchg
in
aad
insb
mov
sbb
vpsrld
mov
int3
dec
pop
mov
movsl
cwtl
jecxz
rorb
stc
daa
imul
cmovnp
mov
ss
testb
jbe
add
mov
xor
daa
xor
loopne
pop
popf
repnz
push
xchg
jecxz
jb
loopne
les
fsubr
or
out
mov
ss
rcr
inc
push
ljmp
sti
popa
mov
stc
ljmp
mov
inc
add
pop
sub
mov
xchg
negl
mov
movsb
push
mov
mov
subw
push
lret
sar
scas
jno
imul
aam
xchg
ljmp
pop
mov
loop
mov
dec
in
lret
push
mov
sbb
lods
jo
fwait
dec
lea
mov
pop
and
mov
movsb
mov
and
pushf
cmpl
push
shll
mov
fidivrs
and
mov
push
hlt
mov
mov
scas
inc
xlat
lcall
push
xchg
inc
xchg
mov
iret
cmp
mov
and
jmp
add
mov
cmp
push
inc
cmp
and
gs
pop
jb
lods
clc
push
jg,pn
mov
call
inc
push
clc
add
add
int3
push
aaa
jno
cwtl
xchg
in
jecxz
sub
aad
sbb
xchg
mov
fsubrs
std
dec
loop
fadds
cs
cltd
dec
add
in
inc
repnz
dec
xor
pop
imul
decl
jle
fmul
mov
insb
sbb
or
xor
outsb
dec
jge
pop
leave
jecxz
pushf
lods
push
dec
mov
xchg
fstps
jmp
add
or
test
push
je
dec
push
pop
jge
xlat
insl
inc
sbb
dec
icebp
cmp
fnstsw
test
or
sub
pop
jle
sub
xchg
inc
add
cs
push
sub
dec
pop
mov
aam
add
addr16
cmp
sbb
call
jnp
xorl
dec
mov
les
cmp
mov
mov
jmp
cmpsb
sbb
jne
sbb
mov
fidivl
loope
or
or
dec
lods
sti
push
shll
lods
or
jno,pt
out
data16
lods
jp
mov
loop
sub
jae
inc
or
test
inc
mov
into
mov
hlt
bound
fs
aad
push
adc
lock
pop
inc
dec
sub
mov
aaa
popf
lods
loop
and
pop
imul
xchg
push
testl
cli
repnz
jmp
pop
aam
loope
stos
pop
sti
insb
hlt
xchg
stos
icebp
mov
fwait
push
rcl
in
add
incl
xor
xor
mov
fidivrs
lret
lods
movsl
dec
xor
sub
cli
mov
xchg
mov
les
mov
jp
shll
inc
shr
fnstenv
adc
or
cmpsl
dec
push
push
aaa
adc
lock
sub
scas
xchg
shll
mov
mov
cmp
adc
inc
aas
push
mov
mov
pop
aad
xlat
pop
inc
int3
out
jb
out
and
mov
add
pusha
movsl
sbbl
repz
or
push
cmp
push
jp
cmp
mov
mov
decl
pop
sbb
push
inc
push
mov
fisubrl
dec
pop
stos
jo
cwtl
cmp
insl
push
negl
xbegin
sub
xchg
pop
je
or
or
aas
adc
mov
icebp
mov
rcr
inc
mov
xchg
fistpl
mov
stos
xlat
sbb
lahf
aad
inc
adc
add
leave
test
shll
inc
inc
notl
or
inc
sahf
insb
jmp
mov
jp
cmp
xlat
cmpsb
imul
and
mov
jmp
mov
cmp
das
xor
stos
adc
sbb
xor
ljmp
int
popa
das
mov
jmp
cs
dec
test
adc
icebp
int
sub
push
in
lret
jns
xchg
sbb
mov
inc
pop
stos
dec
cs
test
ljmp
dec
push
les
sub
icebp
rcrb
jmp
arpl
cs
int
xchg
arpl
int3
aam
sub
jl
mov
mov
xchg
cmpsb
insb
sbb
pop
mov
push
loop
mov
mov
and
push
stos
xor
inc
xchg
inc
add
xchg
into
inc
lret
mov
xchg
xor
pop
mov
lods
ja
inc
cmc
mov
jno
cmp
lret
dec
cmp
movsl
stc
ds
loop
mov
nop
dec
xlat
sbb
bound
cmp
inc
adc
push
fs
push
push
rorb
ret
lods
sbb
add
call
popa
ret
scas
or
dec
mov
push
cmpb
ds
push
cmp
je
pop
pop
test
push
mov
movsl
ret
stos
push
sahf
dec
hlt
pop
fcoms
cwtl
bound
xor
xchg
jecxz
sbb
out
sahf
mov
push
dec
je
je
sub
faddl
inc
jecxz
pop
cltd
cmpl
mov
shrb
repz
cli
mov
les
call
sbb
cld
fists
outsl
cmpsb
lret
testl
outsl
scas
lods
pop
lret
ss
jb
and
pop
sbb
push
iret
shll
into
lods
dec
stos
sub
pop
ss
or
ljmp
mov
pop
int3
mov
scas
push
push
into
test
push
rcr
or
aaa
jmp
jge
loop
aad
xchg
outsl
aam
jno
adc
sbb
mov
push
push
xor
enter
fisubs
xchg
pop
push
loopne
or
dec
out
or
sub
mov
lahf
mov
cmp
ficomps
enter
and
or
aad
xchg
dec
testl
push
mov
lret
cmp
add
pop
jecxz
push
sbb
add
inc
lods
mov
pop
int
inc
enter
pop
sbb
pop
mov
lcall
sub
xchg
inc
daa
enter
inc
push
push
enter
lock
jae
xor
xor
sbb
icebp
push
jmp
mov
mulb
test
cmp
pop
dec
pop
mov
mov
imulb
out
int3
pusha
inc
cmp
push
mov
in
fdivs
sbb
adc
loopne
inc
iret
rorb
stc
inc
out
xor
enter
bound
rorb
dec
out
subl
cmp
add
es
jno
aam
pop
push
pop
mov
xor
adc
push
fdivrl
sbb
scas
dec
adc
fcmovbe
cmp
test
inc
push
nop
jp
rcr
sub
movsl
push
aas
clc
and
out
xchg
mov
cs
sarb
mov
ljmp
dec
push
sbb
es
jb
addr16
into
andb
ja
mov
pop
push
sub
xor
sbb
mov
push
xchg
sbb
mov
insl
inc
in
sub
mov
adcl
inc
inc
sub
adc
and
add
jp
pushf
add
jg
add
xor
mov
sub
fimull
xchg
fcmove
mov
adc
out
in
cwtl
testl
and
outsb
adc
test
xchg
lea
push
aam
cmpsb
jb
lds
pop
mov
mov
jge
jg
mov
sbb
mov
sub
dec
xchg
add
repz
dec
pushf
insl
imul
imul
pop
xor
fisubrs
das
enter
cmpsb
jns
mov
mov
xchg
xor
jmp
jecxz
mov
pop
cli
add
test
jp
stos
orl
xchg
scas
gs
shr
dec
decb
adc
rolw
and
stos
test
inc
inc
and
into
repz
in
ret
xlat
lea
shlb
jge
sub
sub
into
push
daa
jmp
stc
je
imul
inc
mov
sbb
cwtl
outsl
mov
sub
fcompp
mull
mov
push
mov
inc
mov
inc
lahf
and
lea
add
js
xor
aaa
and
mov
pop
into
or
out
mov
shl
in
adc
pop
adc
mov
dec
xchg
jae
xchg
push
mov
mov
sub
jo
loopne
arpl
push
push
aad
lahf
repz
sbb
adc
cltd
and
into
cwtl
ljmp
scas
mov
push
pop
push
push
dec
out
xorl
mov
xchg
pusha
add
and
out
add
pop
push
out
jno
pop
icebp
dec
mov
hlt
push
das
and
cmp
stc
cmp
fldenv
repnz
xor
popa
aaa
aad
dec
xchg
pop
scas
pop
std
dec
mov
les
aad
and
pop
xchg
pop
or
mov
loopne
xor
sbb
push
mov
rorb
sbb
sub
mov
xlat
iret
jmp
xchg
cmp
sbb
mov
inc
jnp
xor
xchg
rcrb
test
shrl
add
mov
dec
add
addb
aaa
jo
js
clc
imul
adc
jmp
dec
scas
dec
push
push
rolb
jne
add
cltd
inc
test
stc
sar
push
push
pop
lcall
js
in
cmp
aas
sub
xor
stc
das
mov
lock
and
push
mov
inc
and
pop
gs
xlat
adc
sub
sbb
sbb
into
aas
mov
dec
mov
fisubrl
push
jge
xchg
or
enter
icebp
insl
aam
das
xchg
cwtl
mov
mov
push
js
cmp
mov
jp
addr16
xchg
hlt
dec
and
push
into
pop
xchg
dec
mov
mov
sub
mov
xor
les
int3
jne
sahf
ret
jbe
lods
jno
jle
rcll
inc
mov
cld
hlt
sahf
sbb
pusha
xor
push
jbe
sbb
mov
adc
cmpsb
lock
add
arpl
jecxz
sbb
jnp
xor
cmpsb
add
call
ret
pusha
push
popf
popf
jl
fwait
in
push
insb
cmpsb
sahf
xchg
cmc
adc
and
inc
and
pop
xor
andl
pop
dec
sbbb
dec
sbb
ret
stc
adc
nop
jnp
js
sbb
insl
pop
jae
push
nop
mov
aas
hlt
jb
sub
xor
hlt
push
js
ror
push
mov
inc
push
sbb
les
movsl
outsl
loopne
mov
jmp
push
sti
xor
jae
das
aaa
jl
mov
sbb
aad
dec
lds
adc
pop
or
in
lea
shrl
clc
mov
cli
add
or
les
jo
pop
cmpsb
xchg
in
scas
jne
call
lea
iret
adc
test
scas
add
test
inc
andb
sub
adc
scas
inc
fwait
das
mov
push
xor
push
adc
or
mov
sub
ret
sbb
or
xchg
adc
xchg
mov
sbb
pop
xchg
mov
inc
sub
inc
lods
addr16
orb
ljmp
fisubs
mov
or
es
inc
repz
sar
daa
insb
lods
aad
mov
ret
popa
call
xor
mov
xchg
mov
inc
outsl
add
xor
xlat
pop
mov
stos
push
orl
sbb
cltd
adc
out
test
push
sub
jb
shlb
inc
lock
add
adc
mov
push
daa
aam
js
stc
mov
pop
mov
push
pushf
leave
pop
mov
or
pop
daa
popa
xor
lock
lds
pop
stc
push
push
les
mov
out
cs
mov
shl
sahf
or
push
popa
dec
and
ret
aas
sbb
data16
jb
or
pop
or
sub
push
adc
pop
jp
dec
cmp
scas
add
push
adc
packsswb
add
xchg
cmp
cmp
cmpsb
or
cmc
shrb
icebp
pop
aam
or
sub
imul
inc
inc
xchg
inc
in
adc
add
mov
lods
cmpxchg
std
ss
dec
cs
xor
cmp
clc
sbb
and
test
pop
xlat
dec
jb
pop
aas
mov
add
add
mov
mov
fsubs
inc
sbb
pop
jne
lret
cmp
mov
out
or
sub
fmul
movsl
popf
push
inc
mov
adc
pop
cmp
daa
mov
jl
mov
mul
test
dec
cmc
mov
mov
ss
jns
rcr
adc
jmp
or
mov
lock
daa
xlat
les
addr16
scas
xor
pop
cmp
push
testl
jo
fdivrs
dec
testl
lock
cmp
dec
mov
jae
xchg
push
into
cmp
jecxz
sti
popa
jecxz
pop
mov
fstpl
sub
pop
ds
out
pop
mov
push
xorl
add
push
repz
xchg
sbb
jo
jne
cmp
pop
cmp
gs
mov
movsl
jno
mov
xor
mov
repnz
xchg
mov
xchg
sbb
iret
gs
vunpcklps
xor
push
cmp
xor
hlt
mov
inc
mov
jle
mov
mov
loope
push
lds
jns
imulb
sahf
rcrw
outsl
xlat
cld
mov
bound
cmp
push
pop
xchg
fdivl
arpl
sub
pop
daa
lea
inc
pop
push
dec
int3
loop
js
lock
scas
lods
sahf
out
push
mov
test
cmpsb
popf
sbb
cmpsl
pop
jo
idivl
mov
xchg
jmp
mov
pop
in
push
in
mov
fwait
mov
adc
mov
mov
sub
mov
inc
push
lods
leave
xchg
jne
icebp
or
mov
xchg
push
aaa
sub
call
adc
in
and
mov
lret
popf
int
popf
fwait
and
fmull
int3
roll
ret
cmp
push
fs
push
shl
test
rolb
dec
call
daa
lret
int3
sub
fisttpl
sahf
mov
sti
lods
or
or
inc
icebp
add
pop
dec
and
xor
lahf
jno
je
aam
dec
and
outsb
push
xchg
push
mov
out
jns
jge
jae
jge
out
add
pushf
stos
lahf
lret
mov
test
ss
mov
dec
adc
adc
dec
push
and
push
push
iret
andb
ljmp
fistps
test
iret
xchg
fistl
cmp
sbb
sti
add
xor
aas
int
and
fnsave
push
aaa
loop
orb
orb
ss
sti
scas
lods
scas
cmp
dec
ds
jl
or
js
mov
push
sub
dec
sub
lret
mov
paddq
xchg
pushf
mov
cmpsb
fisubl
aam
call
ftst
xor
jno
arpl
and
cltd
mov
cli
popa
jg
rcll
test
dec
inc
dec
pop
mov
push
inc
addr16
cs
xor
jecxz
shlb
dec
addr16
or
clc
andl
fistps
test
in
inc
sti
insl
pop
and
int
pop
mov
sbb
mov
js
cld
les
cwtl
sti
sbb
dec
xor
cmpsb
fimull
xchg
push
lret
imul
dec
xchg
push
add
push
xor
sub
andb
mov
rcrb
cs
clc
inc
insb
outsb
mov
mov
pop
addb
fildl
xlat
rcll
in
add
cmc
clc
inc
stos
popl
pushf
push
jmp
sbb
cmpsl
push
inc
sub
mov
add
aam
out
or
das
es
add
ret
pop
fldt
and
mov
and
xchg
sbb
adc
dec
fldl
pop
rol
std
in
arpl
xor
sbb
xchg
aaa
outsb
dec
xchg
sub
cwtl
cli
push
lahf
and
sub
rcrl
ss
repnz
hlt
sbb
test
adc
js
jnp
lods
push
subb
xchg
mov
sub
fwait
dec
outsb
xor
cmp
dec
dec
arpl
push
cmp
shrl
jae
in
inc
pop
xor
test
insb
cld
inc
or
fidivs
jecxz
add
out
dec
sbb
fstpl
mov
mov
into
rorb
xchg
stos
in
mov
leave
ret
mov
dec
xchg
dec
adc
sahf
leave
fisubrs
cmp
sbb
popa
in
push
cwtl
cld
leave
and
hlt
push
jmp
outsl
mov
in
add
int
or
and
pop
mov
aaa
sub
fidivs
or
pop
cmpsb
scas
pop
lahf
cmpb
sti
int3
test
std
xlat
pop
dec
xchg
js
rorb
push
fistpl
es
addl
enter
push
mov
jo
fwait
loope
push
cs
xor
lds
inc
xchg
mov
sbb
incl
pop
mov
or
dec
or
lds
divb
insl
scas
enter
pop
push
inc
es
mov
hlt
in
xor
cltd
inc
jl
or
movsl
mov
xor
dec
mov
leave
fadds
xchg
jmp
mov
in
pop
lods
mov
icebp
in
and
mov
lds
lea
add
or
aam
jne
in
push
std
push
jns
call
jmp
inc
dec
lds
jae
testb
mov
pop
jbe
rorb
fbld
mov
sbb
cmp
orl
mov
push
jg
mov
push
out
adc
ret
adc
les
sti
int
jno
js
lods
loopne
push
mov
mov
bound
std
mov
rolb
pop
out
jge
mov
les
stc
stos
mov
insl
ja
mov
outsl
cmp
lock
mov
cmp
ret
mov
lods
pop
lea
test
sbbb
push
push
mov
test
mov
xchg
insl
enter
sbb
mov
cmp
test
arpl
fisubs
stc
and
and
cmp
inc
add
movsb
and
cwtl
cli
insb
adc
test
dec
fistpl
and
into
out
fs
xor
dec
mov
orl
ret
repnz
in
mov
cmp
adc
mov
xlat
xor
ret
in
lret
inc
je
mov
out
pop
jne
cltd
mov
sub
cmp
shrl
aad
sub
das
inc
in
jbe
push
das
pop
push
push
inc
cmp
shll
in
int
loope
mov
dec
mov
pop
int
sub
fcmovb
lods
push
pop
mov
andb
mov
push
cmpsb
inc
addr16
cs
sub
sub
scas
xchg
aad
cs
out
cmpsb
test
negl
jnp
jge
stos
lahf
add
push
stos
idivl
push
pop
sarl
xchg
insl
and
popf
push
rcll
jne
and
xor
and
push
sub
stc
repnz
imul
push
push
addr16
scas
movsb
pop
movsl
rol
adc
cmp
inc
hlt
pop
xorb
je
es
setne
lea
or
jl
xchg
push
sub
imul
jecxz
loope
js
testl
jb
xor
mov
insl
test
adc
cltd
xor
subb
dec
aaa
jge
imul
outsl
ret
fisttpll
push
rcll
jne
sub
cld
adc
pop
xchg
pop
jecxz
cmpsl
mov
bound
mov
xchg
add
inc
sbb
ds
ret
mov
insb
in
pop
jmp
add
in
cltd
cs
out
mov
les
xchg
xchg
push
adc
or
sbb
inc
or
cwtl
push
cmp
xlat
pop
sub
scas
push
arpl
push
sahf
stc
push
adc
pop
mov
es
mov
dec
cmp
mov
popa
or
and
ret
push
test
ljmp
fidivs
sahf
cmpsl
cmp
cli
add
pushl
mov
mov
call
xchg
lea
jge
cmp
mov
cmp
lea
xor
fdivrp
or
add
mov
mov
in
jnp
and
push
cwtl
or
pop
lcall
add
not
gs
and
push
dec
aam
stc
push
shlb
lahf
out
mov
xchg
xchg
pop
push
sbb
arpl
imul
movsl
cmpsb
leave
push
iret
mov
add
sbb
xchg
add
push
rcrl
jbe
inc
mov
sbbb
out
or
adc
out
pop
jo
xor
push
addr16
scas
mov
hlt
mov
mov
adc
adc
push
gs
dec
in
jmp
shll
push
mov
nop
test
fbld
mov
xchg
cli
push
jle
ficomps
mov
mov
cwtl
cmpsl
stos
mov
cwtl
xor
insl
mov
jno
rcl
movsb
in
sbb
mov
pop
ds
push
les
jne
ret
cmpsb
inc
enter
add
insb
pop
pop
out
loopne
adc
sbb
addb
pop
cmpsb
clc
xor
push
jmp
or
mov
test
add
daa
cmc
in
inc
fcmovnu
repz
push
jge
nop
xchg
jmp
lcall
fists
cmpsl
loope
jle
pop
imul
test
adc
out
push
loop
inc
sbb
push
int3
push
pop
mov
std
ficoms
push
ror
rcrb
iret
andl
imul
jb
sub
cltd
movsl
jns
shll
aad
fimull
cmpsl
ficompl
mov
xlat
jl
jae
leave
loope
mov
pop
fwait
jns
outsb
pop
nop
aam
xor
loop
dec
shlb
sub
cmp
in
or
nop
movsl
pop
test
hlt
imul
aam
xchg
into
rorb
inc
sub
cmp
incb
pop
jo
movsl
fisttpl
ja
clc
out
xlat
cmpsl
insl
cmp
sbb
clc
loopne
enter
jecxz
sbb
popa
push
out
lcall
dec
dec
popf
or
hlt
sub
mov
or
jbe
aam
bound
push
ret
inc
cmp
mov
jle
lds
mov
test
mov
push
sub
pop
jbe
iret
daa
cmc
sub
adc
loop
lds
jmp
mov
dec
into
ret
test
mov
leave
jne
sti
push
in
lods
dec
and
dec
push
or
es
fbstp
mov
movsl
adc
es
andl
fildll
stos
and
dec
lea
jbe
ds
adc
repnz
inc
fnstsw
loop
mov
inc
mov
je
fimull
vmulss
dec
insl
jne
es
call
lods
mov
and
cmpsl
jno
pop
outsl
sub
or
or
stos
jle
mov
lret
loopne
negb
test
and
icebp
sti
lret
push
push
int
jl
jbe
or
and
call
push
ret
mov
sbb
scas
push
addl
push
frstor
negb
outsl
rcrb
sbb
adc
test
push
loop
sbb
insb
clc
scas
pop
ja
iret
jns
fistpl
xchg
inc
fdivr
jl
daa
testb
fs
xor
push
push
test
sbb
test
mov
not
arpl
aas
call
cltd
clc
dec
pop
jb
or
lret
in
xchg
xor
repnz
mov
lahf
cmp
adc
scas
mov
mov
out
add
push
mov
pop
or
dec
xor
add
jp
int
and
cmp
mov
xchg
clc
pop
fcoms
ljmp
push
xor
dec
push
cmp
pop
mov
xchg
fimuls
test
fcompl
test
xor
or
pop
test
pop
mov
add
mov
jle
adc
lods
push
nop
bound
xchg
popa
dec
pop
push
mov
loopne
add
mov
daa
faddl
pop
loope
inc
jle
outsb
ja
lahf
add
mov
xchg
popa
out
test
lret
lahf
das
rcrw
ds
cmp
rolb
pop
std
cmp
jbe
lods
adcl
xchg
ret
xor
frstors
data16
inc
push
and
stos
jecxz
shll
and
jle
mov
inc
psrlq
and
jno
push
repz
imul
pop
je
mov
addr16
jns
movsb
cs
inc
aas
test
xor
test
daa
push
jns
aam
inc
out
test
scas
sbb
enter
xor
lods
push
inc
stos
cmp
sbb
or
js
jne
mov
mov
mov
inc
iret
je
mov
add
mov
out
inc
cmp
mov
leave
push
mov
cmp
fisttpl
clc
ret
repz
loopne
jb
push
and
and
mov
add
in
and
or
sahf
mov
mov
out
ljmp
add
jae
insb
push
subb
scas
movsl
dec
cmp
fistl
rclb
jl
std
bound
jns
imul
add
shrb
mull
addr16
mov
xchg
cli
mov
sarl
bts
fldenv
cmpsl
imul
leave
push
fiaddl
jnp
pop
out
sub
cmpsb
mov
sub
rcr
xor
and
pop
out
out
movsb
aaa
insl
enter
loopne
and
imul
mov
inc
dec
fists
outsb
mov
ljmp
inc
xchg
stos
rcll
aad
xchg
iret
cmp
repnz
mov
inc
sub
pop
add
adc
data16
add
xor
jmp
out
jle
fiadds
cld
add
imul
dec
ds
jmp
fistps
lahf
push
pop
adc
add
ret
std
stos
and
fcmovnu
cmp
loope
sbb
pusha
mov
push
push
daa
xor
push
push
int3
adc
mov
pop
push
mov
nop
mov
stos
les
mov
push
arpl
lods
lcall
das
into
jg,pt
jo
dec
les
lret
pushf
ret
cld
xrelease
dec
fisubrs
decb
insl
and
sti
or
cltd
arpl
sahf
jnp
and
test
lret
pusha
aad
out
jo
inc
xchg
sbbb
testb
push
fidivl
mov
lods
js
enter
add
fisttpll
sti
ljmp
xchg
test
mov
sbb
les
aaa
push
sub
jb
incb
inc
fsubr
xchg
insl
ds
sbb
bound
into
mov
sbb
in
xchg
xchg
loop
das
inc
clc
inc
dec
pushf
inc
add
shrl
testb
mov
xchg
sub
enter
in
pop
pop
xor
xor
push
mov
lea
mov
and
add
mov
jecxz
in
leave
xor
stos
das
add
pop
sub
mov
sub
hlt
int
mov
pushf
ja
jge
sub
jg
dec
in
aam
mov
js
lahf
jbe
mov
inc
out
xor
cli
cmp
jne
mov
ret
xchg
int
jmp
jb
frstor
jl
mov
dec
cld
or
sbb
out
inc
hlt
push
cltd
lock
xchg
mov
pushf
mov
cmp
jl
jmp
mov
lret
cmp
xchg
adc
outsb
iret
out
sldt
cmpsl
pop
cmp
andl
jne
add
mov
sti
dec
fs
mov
xchg
mov
sbb
jno
inc
sbb
pop
std
out
loopne
fists
inc
jno
or
jae
out
add
fldenv
xor
dec
addr16
sbb
add
push
mov
xor
dec
mov
xchg
movsb
xchg
push
lahf
rcll
les
pop
xchg
or
pop
je
cmc
push
mov
ret
lahf
or
pop
outsb
push
or
mov
cs
int3
arpl
das
imul
jnp
orl
add
out
pop
inc
sbb
popa
mov
jle
inc
clc
out
jecxz
popf
xchg
lods
sub
lock
lods
dec
sub
cmp
les
in
or
or
xchg
push
jae
ljmp
push
jge
sbb
je
push
lret
push
mov
stos
inc
add
push
pop
dec
pop
aam
push
pusha
bound
push
mov
push
xor
add
das
push
bound
xlat
orl
clc
pop
rcll
dec
in
pop
jle
mov
pusha
mov
pop
lcall
and
out
pop
dec
jg
push
jg
mov
add
test
dec
imul
cmpsl
shl
xlat
jl
mov
into
sbb
and
dec
sub
jnp
push
outsb
pusha
lcall
pusha
sub
sbb
outsl
jno
mov
rcll
aad
sub
dec
jnp
cs
sar
outsb
sub
mov
or
add
or
sbb
jl
push
repnz
xor
sub
or
push
enter
pop
mov
lods
rolb
or
pop
in
pop
dec
add
decl
out
dec
je
xchg
lock
fdivl
int3
outsb
jb
das
lock
cwtl
cmp
inc
push
nop
mov
decb
xchg
cmpsb
jge
dec
js
sub
and
mov
hlt
int
outsl
pop
scas
mov
push
fwait
pop
in
jne
stc
sub
mov
leave
cmp
inc
sub
rcrl
mov
es
std
call
pop
jge
cwtl
stos
pushf
shlb
aad
jns
cmpsb
xor
inc
aas
daa
mov
cmp
xorl
shll
mov
xchg
sub
xor
into
mov
test
loopne
aas
xchg
adc
ljmp
xchg
sub
push
pop
cld
insl
sbb
nop
out
and
outsl
rep
and
push
cmp
decl
call
inc
push
ret
mov
addb
dec
push
jp
ds
ds
and
sti
inc
push
test
push
jb
sti
pop
pop
out
xor
cmp
movsl
movsl
sub
into
in
lods
loope
sti
sbb
ds
jne
mov
push
scas
jmp
scas
sub
cli
popa
out
out
xchg
es
clc
xchg
pushf
lds
xchg
mov
mov
fnsave
insb
movsl
pop
fsts
cmpb
xor
leave
movsb
sub
push
orl
add
in
stos
rcl
lcall
int3
pop
sbb
test
xlat
outsb
add
repz
push
nop
clc
xchg
push
fisubrs
je
dec
daa
jl
sbbl
popf
jl
cwtl
or
cmp
adc
clc
push
fs
push
push
and
sti
or
imul
pusha
out
cmp
mov
xor
pop
fldl
add
cli
pop
cwtl
lret
jno
gs
cmp
mov
dec
cmp
rorb
insl
cld
mov
cmp
cmpsb
call
sub
dec
xor
cmp
jge
pop
pusha
jne
shlb
push
xor
pop
jns
push
mov
mov
imul
outsl
mov
cmp
test
dec
sbb
in
and
ss
mov
push
push
push
insl
pop
fisttps
mov
mov
sbb
inc
mov
push
movhps
es
xchg
rcr
inc
inc
je
mov
rcrl
cwtl
addr16
stc
pusha
shl
mov
shrb
pop
call
xchg
out
aaa
adc
in
addr16
ss
and
mov
jp
test
jg
test
inc
insb
fildl
push
insb
test
mov
cmp
push
mov
pop
jecxz
repnz
mov
add
cmp
imull
mov
push
mov
xor
test
test
fisttpl
hlt
popf
jbe
fmull
popf
imull
inc
sub
mov
push
jle
mov
sbb
cmp
and
jp
adc
sub
loopne
jns
mov
jl
push
je
into
xchg
jg
call
js
dec
cmp
shrl
repnz
int3
mov
cmpsb
cmc
test
add
aas
add
loope
xchg
addr16
and
sbb
xor
fcompl
fsub
outsl
cmp
popa
test
adc
mov
xchg
sarb
jmp
cmp
cmpsb
add
lock
adc
xor
stos
std
dec
and
lret
insb
int
movsl
arpl
sub
xor
push
iret
adc
pop
mov
mov
add
jno
rcrb
cmc
in
sar
movsb
mov
stc
push
in
fstps
sti
jo
ljmp
add
and
in
mov
aas
out
cmp
sub
es
aaa
jl
ds
in
hlt
dec
cwtl
xlat
mov
xchg
sub
pop
pop
adc
cli
inc
or
push
nop
sub
enter
dec
aaa
std
lds
adcl
lods
jno
fcmovnbe
loope
mov
xor
cmp
sub
fimull
out
cmp
je
nop
xchg
push
bnd
jbe
hlt
andb
dec
test
pusha
shlb
inc
cmp
ss
movl
adc
ret
cmp
sbb
inc
out
sub
add
hlt
fnsave
movsb
mov
push
mov
jmp
push
xchg
sbb
cli
dec
pop
mov
mov
cli
adc
inc
sahf
xor
int3
xor
aam
push
jmp
or
fldcw
cli
icebp
iret
lock
pusha
adc
xor
and
clc
and
jbe
test
neg
shrb
hlt
mov
add
gs
stos
cmp
dec
loopne
jecxz
popf
out
out
jns
sub
jne
gs
subl
movsb
dec
shlb
mov
sti
insb
mov
outsl
mov
daa
ljmp
fiadds
mov
inc
mov
ds
or
add
dec
jae
pop
imul
pop
adc
lcall
shl
inc
fcmovnb
je
push
mov
pop
and
in
mov
sar
aaa
push
out
mov
pop
lock
jb
mov
rcrl
dec
repnz
cmp
jmp
cmp
pop
outsl
sub
fmuls
icebp
data16
jno
fwait
add
jo
mov
imul
rcrl
add
cmc
aaa
lret
xor
and
sti
mov
inc
mov
ror
enter
ret
adc
cmp
sub
xor
lret
inc
and
jae
push
dec
test
rcr
enter
pop
mov
adc
push
fnstenv
or
and
adcl
lods
fistps
add
push
fbld
mov
js
dec
inc
dec
pop
fcoml
mov
je
shll
adc
lds
lds
sub
xor
scas
add
xchg
stc
jle
pusha
xchg
xchg
xchg
leave
push
arpl
push
movb
bound
jmp
inc
mov
insl
das
fs
lea
or
sbb
jb
stos
adc
sub
in
adc
pop
mov
test
ret
daa
mov
xor
mov
dec
jnp
lea
push
lret
jmp
enter
jle
cwtl
dec
out
outsl
and
cmpsb
into
jo
test
std
mov
loop
shrb
cmp
jb
int3
imul
addr16
and
sbb
jmp
outsb
es
mov
test
sti
ficoml
popa
sbb
adc
test
cmp
ret
push
xchg
rcll
loopne
mov
mov
stos
or
cmp
cmp
int3
pusha
clc
adc
insb
mov
inc
fildll
adc
pushf
jp
lods
lods
repz
cmpsl
shlb
inc
ds
or
xchg
arpl
movsb
pop
lcall
shlb
or
rep
adc
push
enter
mov
dec
lds
aaa
jbe
inc
pop
rcrl
mov
jmp
pop
popf
cld
leave
insl
pop
fbld
jl
stos
cmpl
xlat
test
xchg
sub
push
push
push
js
mov
adc
dec
pop
inc
xorb
imul
adc
ljmp
inc
jmp
add
call
and
mov
dec
shrl
xchg
dec
ret
push
shll
mov
lods
mov
jmp
mov
cs
jo
dec
dec
das
cmpsb
jnp
mov
sub
and
or
dec
sbb
xchg
das
push
sbb
ficoms
mov
pop
fcoms
pop
xchg
out
cmp
or
fistl
pop
ja
imul
lcall
inc
scas
mov
sub
out
in
test
pop
sbb
cltd
mov
jne
xchg
push
mov
dec
push
adc
or
push
movsl
ja
add
jno
mov
test
sbb
ljmp
or
jge
dec
lods
mov
stc
cs
jbe
mov
call
push
cmpsb
xchg
je
mov
jp
add
xchg
lret
cmp
inc
jno
lock
aam
mov
adc
jnp
and
pop
cmpsb
sbb
loop
pop
out
xor
mov
jle
fnstenv
movb
cmp
popf
aam
jp
movsb
xchg
mov
push
addl
jbe
fbstp
push
jg
push
cmpsl
adc
arpl
jns
outsb
pop
test
and
test
cmp
pop
jae
cmp
pop
dec
xchg
cmpsb
pop
loopne
call
dec
jp
cld
jns
fnstenv
in
pushf
cmp
sarb
inc
pusha
and
out
jno
cltd
ffreep
cmp
mov
ret
outsb
cmpsl
mov
and
mov
loopew
adc
xor
jno
iret
divl
arpl
jne
sub
pusha
jl
andl
dec
add
ss
mov
stos
ret
fstpt
mov
dec
call
dec
notb
sub
push
pop
cmp
aam
mov
mov
inc
cmp
xchg
mov
jae
cltd
jg
insb
lret
or
mov
xchg
fs
mov
inc
loope
sub
mov
in
jae
negl
arpl
stos
jae
notl
outsl
bound
pop
xchg
and
push
les
int
sarl
add
push
jmp
gs
andl
pop
xor
xor
shrl
fbld
cmpsl
fwait
je
jecxz
xlat
xor
mov
sub
ja
jnp
jecxz
mov
imul
adc
iret
jecxz
incl
dec
xchg
push
popa
sub
xchg
cmp
mov
ret
jecxz
jp
addb
push
adc
aad
test
pop
fwait
ror
mov
das
cld
xchg
movsb
ret
sub
shrl
ret
cltd
push
rcll
push
mov
push
in
ss
xchg
mov
or
sub
add
aad
pop
xchg
insb
loop
pop
jnp
pop
aaa
jmp
test
push
xchg
lods
mov
mov
and
xchg
out
repz
jns
lock
adcl
movsl
mov
insb
bound
sub
dec
push
inc
aas
test
mov
sub
fisttpll
ret
cmpsb
loope
subb
xor
ud0
mov
aam
push
dec
fidivs
ljmp
fwait
mov
adc
into
sti
xchg
push
dec
or
push
mov
into
jmp
adc
test
cli
outsl
adc
mov
adc
out
sbb
sub
jecxz
xlat
out
adc
imul
push
out
repz
cltd
in
stc
add
and
jnp
or
adc
fwait
sbb
push
rcrl
fstps
imul
pushf
pop
int3
sub
cmp
imul
mov
fstl
jmp
imul
inc
scas
les
dec
lret
xchg
enter
rcrb
cmp
addr16
lea
ds
mov
xchg
fcoms
pop
ss
pop
lock
out
aaa
jmp
popa
jae
mov
rclb
pusha
jb
insl
in
or
daa
test
sub
xor
stos
out
mov
fwait
cmpsb
insl
and
ret
push
dec
lock
ds
fs
cmp
and
add
xchg
imul
lret
inc
jmp
inc
push
mov
rcrb
adc
sbb
aaa
pop
adc
in
jp
arpl
xchg
push
add
sti
or
adc
mov
sbb
pop
xor
or
push
repz
push
loope
das
or
mov
mov
or
repnz
aam
mov
inc
jmp
out
hlt
jge
movsl
cmp
sti
notb
jecxz
in
repnz
xchg
and
push
stos
mov
enter
cltd
mov
imul
popf
fwait
repnz
clc
outsb
pop
and
out
js
push
lahf
inc
jo
pop
ret
inc
adcl
clc
xor
aaa
ja
dec
test
xchg
movsl
push
cmp
adc
imul
jl
test
test
and
and
in
push
mov
aas
jne
pop
int
jg
sub
aam
rclb
sub
or
pop
cmp
ret
out
cmp
cmp
daa
and
sbb
testb
movsl
sti
jg
cwtl
in
sbb
stc
add
cmc
pop
orl
outsb
cmp
xor
jmp
adc
or
call
or
adc
sbb
inc
inc
add
es
mov
inc
sub
xor
popl
xor
cltd
dec
movsb
lret
aas
push
fiadds
ljmp
or
ds
or
cli
outsb
push
fldl
fwait
dec
add
dec
pop
sti
nop
jl
or
nop
or
sub
stc
inc
into
xor
daa
push
out
add
jle
inc
mov
shlb
fcmovbe
fst
scas
pop
mov
push
int3
push
sbb
push
dec
ds
xchg
jecxz
aam
inc
loopne
dec
adc
or
aad
inc
inc
mov
cmp
cmp
int3
push
add
ror
dec
pop
cmp
nop
mov
sub
sub
hlt
sbb
jne
lahf
movsb
rorb
push
stc
inc
sbb
in
repnz
jae
sbb
xor
or
jae
jl
adc
scas
ficoms
arpl
sbb
push
inc
pop
test
out
mov
add
add
les
inc
sub
push
das
stos
and
sub
push
mov
fimull
sarb
test
dec
ss
sub
rorl
sub
sub
pusha
mov
and
push
cmp
mov
test
aaa
dec
icebp
pop
lahf
ljmp
push
xchg
cmp
aaa
adc
mov
xor
cmp
jne
pop
dec
fsts
sub
mov
mov
pop
je
adc
mov
fsub
adc
mov
or
add
jne
les
test
sub
imul
xchg
roll
aaa
das
add
push
push
cmc
jbe
pop
sub
test
cmpsb
movsl
inc
stos
cmp
dec
popl
mov
lahf
and
or
mov
push
pop
mov
je
cwtl
add
push
dec
sbb
sub
xor
xchg
inc
or
jg
fldl
adc
cmp
mov
inc
mov
dec
jb
xor
pop
mov
std
orb
outsl
sbb
inc
jae
jnp
dec
jl
mov
sub
dec
mov
pop
arpl
lods
into
mov
adc
sti
and
sbb
scas
fdivrs
mov
mov
stos
in
negl
lret
mov
lcall
dec
stos
and
mov
xchg
add
xchg
dec
mov
mov
adc
push
add
xor
xchg
sbb
lcall
ret
cmp
je
dec
dec
sub
insl
and
dec
loop
dec
mov
into
inc
cli
les
sub
ffreep
loope
shrl
sub
add
adc
arpl
cld
stos
jge
scas
mov
xchg
inc
mov
mov
in
in
test
in
inc
inc
push
ja
inc
push
arpl
dec
or
push
or
out
jp
andb
mov
push
cmpsb
das
and
add
inc
test
jle
sbb
mov
sbb
jne
sahf
push
aam
cmp
xor
aaa
unpckhps
push
jmp
or
sub
in
push
ret
inc
mov
jge
icebp
inc
jne
adc
jb
cmp
lret
push
arpl
cmp
addr16
in
pop
fdivp
jb
push
mov
leave
sbb
das
fdivs
jmp
repnz
inc
mov
daa
add
std
lock
call
pusha
mov
ja
mov
sbb
loopne
rclb
filds
or
add
pop
lods
aad
jecxz
loop
lahf
cs
mov
add
stos
pusha
cmpsb
jg
loopne
rcl
fnstenv
lret
inc
jo
xchg
pop
repnz
xor
mov
cli
idivl
outsl
cmp
xor
push
or
out
stc
out
xchg
mov
test
pop
int3
or
cwtl
insl
imul
mov
dec
push
aas
jae
scas
and
insl
movsl
insb
inc
test
sub
inc
je
test
fdivr
subl
sbb
push
mov
xor
pop
es
xor
xchg
into
sbb
aam
ret
xlat
push
pop
outsl
loopne
jmp
int3
js
nop
imul
into
mov
xor
fwait
cmp
adc
fidivs
or
aad
push
dec
ficoms
sbb
aam
jecxz
sbb
sbb
arpl
stos
mov
loope
arpl
mov
sbb
ret
movsb
push
leave
dec
xchg
adc
sub
xor
std
cmp
out
lods
jae
add
push
mov
rcrb
mov
les
in
cmc
adc
int
icebp
inc
mov
push
mov
sbb
sub
inc
pop
dec
mov
mov
sti
iret
inc
rclb
mov
inc
pop
testl
sub
lret
repnz
pop
xchg
add
and
icebp
aas
inc
push
adc
and
stos
lods
shll
push
mov
fsts
lea
lcall
sbb
insl
and
add
add
ret
jl
push
push
cltd
cmc
outsb
jle,pt
shl
or
ret
add
mov
and
imul
mov
dec
shl
int
out
out
jle
mov
int
mov
xchg
xor
mov
pop
xor
jge
push
add
or
jecxz
scas
adc
imul
sub
add
cmp
and
push
int
je
sub
add
inc
lods
mov
xor
push
popf
call
pusha
inc
fadd
inc
pop
shlb
fnstcw
nop
outsb
dec
aam
das
cwtl
movsb
cmp
pop
mov
insl
add
shll
hlt
call
out
cltd
dec
sub
stos
mov
lock
adcl
rol
cmp
ret
xor
imul
mov
loopne
sub
out
std
pop
imul
xchg
outsb
call
pop
inc
inc
lods
xor
push
scas
lods
stos
imul
shll
sbb
mov
test
push
daa
je
sbb
sbb
movsb
imul
jb
int3
inc
lods
imull
shlb
mov
jbe
mov
insb
xchg
jne
xchg
pop
iret
arpl
cmp
stc
pop
mov
dec
lret
mov
dec
lock
popf
ss
mov
fldl2e
or
mov
and
jecxz
cmp
test
shrb
sbb
movsl
mov
jo
les
mov
inc
dec
mov
jbe
mov
sbb
jg
push
adc
push
mov
push
mov
add
adc
adc
sbb
pop
movl
pop
imul
and
popf
pop
lahf
gs
loop
fldcw
in
or
pop
adc
push
je
shrb
fcomps
std
mov
loopne
jnp
push
dec
popa
lahf
popa
push
or
mov
enter
xor
ds
fidivrl
add
push
mov
mov
inc
data16
gs
sti
popa
enter
sti
out
ror
sub
fs
pop
sbb
data16
int3
mov
push
out
and
into
pop
sub
dec
jns
sbb
cmpsl
adc
cmp
in
mov
adc
mov
clc
fistl
jmp
or
pop
arpl
or
xor
dec
pop
ljmp
jae
daa
cwtl
push
cwtl
pusha
scas
xchg
cmpsb
aas
sbb
sbb
mov
int
add
aaa
les
adc
ret
add
ds
mov
sub
add
pop
add
push
into
imul
push
push
imul
lods
cmp
test
fnstcw
loope
loopne
loopne
or
aam
sub
scas
test
es
movsl
mov
dec
out
aaa
jno
push
and
decl
or
or
pop
pop
mov
mov
or
mov
leave
bound
pop
scas
pop
mov
mov
jns
mov
repnz
fwait
mov
mov
sarl
ljmp
test
jge
cmp
cmpsl
sub
jb
lret
aaa
fnsave
mov
push
arpl
or
int3
cld
xor
push
adc
mul
xor
jne
fisttpll
ljmp
pop
les
inc
sbb
imul
lods
hlt
mov
pop
ficoml
rcll
pop
mov
fmuls
scas
aam
xlat
fisubl
lret
cmpsl
push
icebp
in
fucom
and
sbb
mov
jo
or
sbb
inc
xor
je
mov
mov
inc
jmp
movl
call
cmp
sarl
sahf
mov
out
imul
adc
adc
sub
je
je
daa
sbb
nop
push
push
lret
sbb
aaa
and
pusha
fs
jge
xlat
lods
mov
pop
mov
xchg
cltd
ds
cmp
xchg
movl
fildll
rol
sbb
lds
fdivrs
fisubs
jmp
lea
xchg
mov
rcr
mov
sub
mov
add
into
cli
push
xchg
add
pop
int3
add
xchg
jb
mov
ret
loope
jo
jmp
and
mov
or
lret
inc
adc
pop
cltd
ret
cmpb
out
cwtl
push
jl
js
adc
aam
adc
adc
js
pop
and
popa
mov
fcomp
xchg
bound
push
adc
inc
xchg
in
add
mov
pop
inc
stos
adcb
and
js
xor
mov
int3
cmc
xchg
jnp
test
movaps
repz
loopne
pop
xor
lea
xchg
sahf
mov
pop
push
mov
and
gs
jae
cmp
push
and
push
mov
out
or
mov
dec
in
mov
push
jl
in
push
mov
aas
daa
mov
ja
push
clc
aas
or
push
lods
imul
mov
fwait
sbb
mov
inc
clc
adc
adc
mov
mov
sub
outsb
adc
xor
in
lret
xor
in
pop
mov
cmp
lods
mov
inc
out
iret
sub
adc
insb
out
or
sub
cld
xor
movsl
xchg
sub
add
sub
and
test
lds
and
imull
mov
and
in
or
fsts
and
ret
pop
push
ja
insl
pop
dec
in
hlt
push
cld
leave
inc
inc
pop
push
roll
add
in
pop
outsl
jle
jmp
pmaxsw
mov
fimull
ss
aas
cli
xchg
dec
mov
and
pusha
sub
cmp
dec
or
stos
lea
shl
enter
pcmpgtw
loopne
mov
xor
mov
subl
loopne
nop
arpl
jns
call
push
in
cmp
cwtl
pop
daa
insl
cld
sub
and
pop
arpl
push
fwait
jo
dec
fdivrs
imul
shrl
mov
jnp
jge
inc
xchg
inc
adc
adc
ja
adc
xor
sbb
sub
cs
adcb
lret
fwait
rcll
in
cmpb
xchg
and
jl
stos
cs
mov
jns
daa
mov
aam
lcall
sub
lds
sahf
imul
mov
jp
push
das
fistpl
nop
pushf
inc
cmp
lcall
dec
inc
inc
inc
js
mov
xchg
js
mov
pop
xchg
nop
xchg
mov
jne
and
jne
movsl
sbb
xor
sahf
and
fs
and
lea
sbb
mov
cwtl
shlb
add
mov
mov
ja
test
push
inc
dec
mov
mov
int3
sub
hlt
stos
inc
out
xchg
les
xor
xor
xor
jg
nop
jo
enter
out
add
cwtl
push
in
cli
testl
loop
stos
imul
lret
sub
stc
roll
adc
push
jbe
aaa
stc
pop
or
enter
fwait
stos
jecxz
sub
jecxz
das
and
outsb
mov
pop
push
bound
mov
sub
inc
jmp
test
test
cmpsb
dec
jl
cmp
push
sbb
adc
fs
mov
xlat
inc
sahf
sbb
les
shlb
cltd
pop
pop
in
pop
std
mov
fdivrs
cmp
add
lret
jg
and
rcrl
shll
ja
clc
add
addr16
shr
mov
jo
cmp
mov
leave
iret
fmul
in
adc
pop
jmp
les
inc
sub
insb
imul
pusha
inc
xchg
inc
bound
jne
sar
enter
push
dec
imul
pop
adc
sarl
push
pop
mov
cmovo
aas
arpl
shll
inc
dec
xlat
push
int
push
stos
lea
loopne
out
inc
cmp
xor
jbe
out
inc
rol
lea
stos
or
enter
rcr
test
sbb
sbb
and
imull
mov
mov
dec
jle
cld
push
jbe
mov
push
push
jp
xchg
xor
lret
fdivr
lock
scas
shlb
mov
rcll
daa
fwait
mov
jae
xor
xlat
pop
das
xchg
and
dec
scas
sub
loop
xor
aam
sbb
or
jmp
add
xchg
mov
fildl
mov
pop
dec
xor
pop
xchg
lods
in
lret
test
add
mov
pop
negl
incb
stc
cld
ljmp
das
inc
push
cld
adc
inc
mov
rorb
test
mov
jb
push
mov
or
jmp
pop
pop
idivb
pop
push
xchg
test
pop
aad
div
jne
js
mov
sahf
mov
pusha
add
jle
dec
sbb
xor
mov
sub
sbb
aam
hlt
cmp
sub
enter
scas
or
lods
and
das
or
ret
cs
mov
or
into
scas
in
push
xchg
push
pop
pop
sbb
shll
xchg
mov
xchg
aad
mov
std
cmc
mov
lret
leave
or
dec
jle
das
and
inc
mov
mov
dec
scas
out
outsb
mov
jnp
push
cli
shl
add
mov
xor
and
push
jne
pushf
call
mov
dec
out
add
shll
or
inc
and
je
add
les
aaa
bound
mov
out
or
loop
mov
sub
push
nop
fisttpl
push
ss
jns
xor
outsl
xchg
mov
ljmp
pop
sub
cmp
dec
mov
and
rorl
add
sub
scas
fmuls
aad
push
and
mov
punpckhdq
mov
test
mov
xchg
or
jb
cmp
xlat
mov
mov
mov
sbb
outsb
clc
xchg
aad
mov
inc
idivl
fs
ret
add
push
adc
inc
addr16
xor
fdivl
mov
mov
into
rcr
xor
data16
addr16
clc
leave
dec
xlat
cmpsl
cmp
xchg
mov
mov
push
jne
test
jne
mov
push
ret
jo
into
inc
jge
or
test
pop
lret
jne
loopne
mov
add
add
fs
in
inc
xchg
js
add
test
inc
rcrl
xor
pop
loop
inc
fldl
sbb
stc
dec
push
lock
mov
rcll
sub
leave
rclb
dec
mov
sub
mov
sbb
mov
test
fadds
outsl
xchg
rclb
adc
add
cmp
jge
popa
int
ljmp
adc
dec
sub
adc
fbstp
mov
adc
adc
ret
jp
pop
cmpsl
mov
movsb
inc
in
add
inc
nop
cwtl
arpl
jnp
popa
insl
out
gs
roll
stos
in
mov
negb
jne
sti
and
add
or
mov
ret
cmp
gs
lahf
jge
mov
lret
test
nopl
xor
bound
mov
inc
dec
sbb
je
das
imul
sbb
add
push
fdivs
fdivs
jns
and
push
pop
pop
fnsave
outsb
jbe
jp
or
in
loop
iret
lret
sarl
sbbl
or
pop
jo
cs
das
xchg
push
xor
jl
inc
pushf
jl
pop
std
lret
ret
add
out
cmp
insb
push
xor
mov
shrb
data16
sbb
in
imul
sub
ret
icebp
shll
adc
out
push
popa
rcrl
std
jns
imul
adc
pop
leave
movsl
jns
xchg
stc
mov
bound
mov
imul
or
xor
rdtsc
mov
pop
jg
cmp
jle
push
xor
in
xchg
adc
pop
inc
pop
add
lods
hlt
pop
cmp
pop
ja
push
imulb
ret
push
mov
call
add
inc
jge
test
es
inc
mov
fpatan
push
pop
mov
pop
test
jl
mov
out
arpl
and
leave
repz
inc
fimuls
sub
outsb
add
or
nop
sbb
sbb
and
mov
sbb
sti
dec
and
cli
mov
xchg
sbb
mov
pop
mov
ja
movsb
xchg
movsb
sbb
je
out
xor
push
test
xorl
mov
sbb
ss
push
into
out
stos
xchg
adc
in
xchg
dec
pop
mov
in
cmp
xchg
stc
sbbl
jno
cmpsl
lods
iret
mov
adc
xor
jns
iret
dec
out
cltd
lcall
xlat
adc
popa
lret
mov
fimuls
sub
cmp
mov
cs
and
jge
cltd
int3
dec
xchg
call
dec
sbb
jno
xor
fldenv
aas
out
jp
mov
push
sub
sar
xchg
popf
jns
pop
out
mov
leave
adc
test
xor
or
mov
jne
dec
adc
imul
and
xchg
pushw
xor
jg
push
cs
add
adc
popa
mov
or
jle,pn
dec
mov
rol
shlb
dec
cltd
xchg
adc
dec
xchg
push
repnz
cwtl
movsl
jnp
xor
insb
sub
fistps
or
inc
loopne
and
and
daa
imul
add
xchg
xchg
mov
xchg
test
sbb
sbb
sbb
mov
fimull
outsl
jo
add
enter
sahf
incl
sub
test
mov
addb
mov
insl
sub
and
ret
loopne
lea
pop
jnp
pop
ret
test
mov
mov
xchg
pop
bound
ja
ficompl
add
frstor
dec
or
pop
loop
scas
sbb
hlt
push
pop
xor
ds
cmp
mov
insb
lods
cmp
jmp
or
mov
and
dec
xchg
inc
push
pusha
ljmp
or
jbe
sbb
inc
jle
mov
pusha
lods
mov
gs
sub
xchg
sarb
out
push
insl
xchg
adc
pop
cwtl
adc
lds
xlat
lds
andl
in
mov
icebp
push
mov
cmc
xchg
nop
sub
leave
das
add
jp
add
adc
and
les
pop
aad
pop
out
lcall
repz
push
in
rorb
cmc
dec
and
push
jo
adc
call
int
pop
mov
fstpt
cmpsb
sbb
test
mov
adc
mov
and
je
ret
xchg
sbb
leave
and
pusha
adc
mov
pop
jecxz
dec
jo
bound
push
mov
mov
out
pop
hlt
scas
xchg
sub
mov
pop
test
push
addr16
bound
and
jl
sti
or
popa
mov
push
iret
pop
mov
sahf
lods
xor
inc
xchg
gs
cmp
ss
mov
jno
cmpsl
or
lods
pop
pop
xchg
stc
sub
cmc
dec
dec
xlat
rcll
das
loop
and
inc
cmp
mov
sbb
sub
decl
mov
loopne
pop
daa
mov
and
shl
or
fdivp
cltd
jle
mov
inc
out
inc
movsl
xchg
jb
or
xor
lods
imul
pop
insb
add
lods
mov
popf
xchg
shl
sarl
mov
jmp
push
lods
sbb
xchg
adc
hlt
psraw
imul
mov
sub
inc
cmpsb
loop
cmpsl
and
xor
out
and
dec
cmp
fcom
jmp
pop
nop
and
test
mov
in
daa
popa
fiaddl
rcll
push
xlat
outsb
pushf
sub
jmp
dec
mov
js
sar
daa
js
jecxz
ret
sti
dec
sbb
jbe
pop
push
rcrb
xor
scas
mov
nopl
xlat
xlat
and
into
inc
sbb
out
pushf
pop
imul
pop
shl
arpl
imul
in
sbb
push
mov
fists
xor
outsb
push
sub
xchg
mov
dec
in
loopne
cwtl
cmpsl
fcmove
in
stos
inc
cmpsl
or
and
cmpsb
data16
test
mov
mov
ret
pop
fstpt
hlt
or
and
jbe
in
out
mov
int
adc
lods
sub
add
test
rcrb
sbbl
clc
sbb
outsl
cs
inc
bound
mov
pop
push
lcall
test
mov
das
in
repz
je
in
repz
jle
pushf
pushf
jae
popa
loop
vpsllq
bnd
mov
and
daa
add
dec
dec
mov
out
out
cwtl
aam
int3
xor
pop
mov
mov
ret
hlt
jns
ret
repnz
pushf
sbb
jno
add
inc
repnz
jl
cs
cmp
ja
ret
push
outsl
insb
movsl
test
les
bound
fisttpll
in
jmp
fisubs
mov
jno
xor
in
fmull
popf
sbb
push
in
xor
rcl
inc
lahf
call
aad
dec
js
loop
cltd
or
fdivs
mov
outsl
and
jg
test
shrl
test
mov
inc
out
insl
add
es
sbb
mov
ss
out
push
imul
push
pop
out
dec
inc
or
sbb
out
pop
mov
sbb
push
decl
xor
in
xor
pop
shl
lret
imulb
ret
add
rclb
ds
pop
pop
insb
jl
jmp
ret
dec
xchg
fisttps
mov
or
push
jb
nop
rorb
dec
in
call
pop
mov
mov
inc
or
pop
out
fnstenv
mov
xchg
xor
sub
aas
adc
pop
push
repz
cs
mov
rclb
push
adcl
imulb
cmpsb
test
dec
test
jp
pop
push
icebp
pop
pusha
repz
xchg
sub
add
inc
sarb
pop
ja
push
sbb
adcl
inc
aaa
jne
mov
jg
enter
test
pop
leave
imul
inc
xor
out
jle
sti
dec
out
out
push
sarl
movsl
push
imul
outsb
pop
call
fsubrl
adc
pop
std
fs
fwait
icebp
enter
enter
sub
dec
inc
xor
bound
mov
mov
mov
inc
lods
daa
mov
mov
dec
and
sbb
adc
xor
mov
xorb
jge
aam
adc
mov
loop
adc
xchg
in
loope
in
popl
push
gs
cmpsl
inc
out
mov
adcl
orb
dec
fistl
icebp
popf
sub
mov
int
push
shl
repnz
imul
jge
fstps
int
xor
push
dec
sub
ficomps
inc
mov
fucomi
mov
insb
dec
xchg
add
mov
fbstp
fisubrs
push
loop
or
cwtl
int3
mov
js
adc
inc
and
lret
lods
std
push
into
adc
mov
cmp
pop
out
hlt
mov
pop
inc
mov
iret
push
mov
sub
jae
sbb
scas
xor
negl
jae
pop
sub
hlt
insl
dec
pop
jmp
in
das
leave
xchg
aad
and
jg,pt
jbe
add
push
or
mov
ror
jg
loopne
cmpsl
sub
jmp
xor
mov
mov
add
out
clc
xchg
xchg
or
cld
xchg
xor
int3
jg
gs
sbbl
push
enter
in
ret
stc
cmp
xor
sar
pop
insb
mov
std
cmpsl
shlb
subl
pop
dec
roll
insb
sbb
je
dec
mov
mov
leave
leave
test
out
push
jle
adc
loopne
jno
leave
in
in
mov
sbb
cmp
push
mov
and
jmp
or
pop
fisubs
mov
mov
push
xchg
xchg
mov
jl
hlt
out
pusha
add
mov
sbbb
scas
dec
push
xor
movsl
mov
push
adc
popf
dec
dec
sub
ret
bound
xor
dec
stos
and
push
adc
jmp
and
or
mov
lahf
inc
or
adc
cmc
and
jl
rcll
clc
fcoms
jno
pop
mov
dec
add
outsl
ss
inc
mov
shrl
loopne
repz
movsb
jo
adc
stc
fstps
and
jbe
inc
mov
mov
cld
pop
and
pop
inc
adc
imul
xor
into
jge
add
fstl
lods
mov
ss
jns
cmp
pop
xor
sub
adc
adc
push
insb
ret
jg
fxch
pushf
dec
jge
mov
fldt
push
mov
adc
xor
aas
dec
pushf
add
flds
dec
aaa
jo
adc
pusha
or
test
loopne
sub
xlat
mov
adc
sbb
addr16
sub
push
dec
mov
mov
stos
xor
stos
inc
or
inc
pop
inc
movsb
cmc
dec
popf
lahf
dec
icebp
fmull
cmp
fs
push
inc
pop
je
sbb
xor
inc
jp
clc
inc
lcall
push
subl
xor
outsb
loop
sbb
stos
outsb
add
xor
mov
mov
in
xchg
mov
xchg
sysenter
or
scas
mov
adc
xchg
loope
xor
insb
mov
pushf
cmc
pushf
xchg
jle
cmpsb
cmp
ret
xchg
mov
xor
roll
outsb
movsl
jbe
adc
sub
mov
cmpsb
ss
clc
js
adc
outsb
xchg
in
int3
addr16
fstp
test
or
lods
pop
cmpsl
dec
ljmp
call
cmp
cmp
mov
mov
dec
cs
in
sbb
pop
sub
push
and
aas
stos
and
cld
jbe
fisubrs
dec
ja
outsb
pop
mov
mov
lods
mov
pop
pop
popa
arpl
dec
jl
scas
mov
inc
push
test
in
fldcw
inc
push
jmp
mov
aaa
mov
in
fcomps
xor
add
sub
xor
sub
cld
fnstenv
cmp
xchg
stos
mov
shrl
mov
dec
xor
cwtl
insl
fwait
sbb
loop
mov
and
lret
daa
iret
jl
dec
pop
adcb
and
jbe
fldcw
push
jae
pop
fisttpl
std
push
push
pop
fwait
cmc
pop
push
jo
loop
adc
sbb
cmp
inc
pop
fldenv
stc
mov
imul
xor
or
aam
adc
mov
pop
cli
ret
iret
ret
imul
add
loop
sbb
adc
jge
cmpsl
cmp
pop
push
lock
pop
sti
dec
insl
cmc
and
pop
jg
fldt
and
movsl
nop
sub
stos
jno
call
lret
push
in
mov
stos
mov
adc
ffree
sub
arpl
sarl
xchg
sbb
hlt
jge
dec
insb
arpl
and
inc
mov
mov
or
int3
mov
jo
push
addl
sbb
and
sub
jae
sub
add
outsb
push
test
stos
mov
jb
jae
inc
push
pop
bound
les
mov
xor
mov
std
inc
cmpsl
jnp
aam
inc
adc
jnp
int
adc
pusha
dec
sbb
inc
imul
das
xchg
xchg
fdivs
adc
inc
sub
lock
pop
adc
push
fsubrl
data16
in
mov
inc
add
addr16
jp
mov
mov
movsb
lret
jo
mov
push
or
xlat
aaa
jo
jge
movsb
mov
sbb
sbb
jae
push
popf
es
jle
mov
mov
subl
ret
cmp
fldt
js
ljmp
dec
mov
test
mov
cs
sbb
loopne
iret
outsb
xor
aam
sbb
scas
rorb
bnd
int3
mov
adc
sub
jo
int
pop
mov
cmp
inc
mov
cmp
imul
jne
dec
sub
pop
int3
cmp
pop
dec
subl
fwait
outsb
cmp
in
xlat
jne
ret
sub
ret
dec
dec
aas
in
loopne
cmp
pop
lock
mov
sbb
lock
leave
sub
fwait
and
fsubrp
dec
inc
cmp
lret
mov
pop
aad
cmp
push
pop
push
idiv
aaa
add
testl
adc
xchg
rcr
in
aam
ljmp
shrl
iret
inc
outsl
jge
pop
inc
xchg
je
add
loope
loopne
xor
xchg
and
pop
scas
imul
pop
bnd
ljmp
pop
aad
or
jb
in
push
gs
adc
push
mov
sub
movsl
push
out
inc
sbb
das
inc
xchg
nop
inc
sbb
mov
inc
aad
daa
lcall
pop
fstpt
sub
dec
pusha
int
insl
dec
cltd
ret
inc
int3
mov
mov
sub
xor
and
das
inc
mov
xchg
scas
out
pusha
in
fcmove
inc
jae
pop
lock
inc
xor
icebp
inc
cmpsl
es
xchg
ret
jmp
ss
sbb
pop
bound
fildl
cld
or
jbe
mov
rorb
stc
cld
repz
adc
lcall
out
sbb
inc
stc
mov
cmpsl
fwait
push
xlat
sbb
shl
clc
push
or
jge
and
sahf
fwait
jae
je
xorb
into
mov
loopne
lahf
idivb
in
jbe
cmp
adc
sub
negl
into
pop
ljmp
or
xchg
and
loopne
cmove
dec
faddl
rorb
jne
adc
cmpl
in
and
pop
xor
add
xchg
jo
in
js
mov
pop
shrl
adc
mov
xchg
ja
adc
ret
ss
mov
xchg
inc
popf
xor
cli
int3
hlt
push
sub
test
mov
mov
fsts
jb
jb
cmp
adc
int3
insb
inc
mov
push
call
lcall
testb
cs
test
xchg
lahf
cmp
jg
mov
jno
nop
lds
sub
push
stos
inc
int
shl
sub
mov
jg
popl
ss
clc
loopne
nop
jl
cmp
das
outsb
adc
mov
dec
leave
lahf
jne
dec
pop
sti
in
mov
pop
ja
clc
mov
push
cmpsl
push
xor
scas
sarb
xchg
pop
xchg
dec
sbb
or
push
or
jecxz
pop
subps
pop
jnp
jo
sbb
iret
xchg
xchg
leave
shlb
push
adc
sub
adc
lret
sub
mov
inc
sti
aad
dec
mov
dec
lahf
sbb
push
cmp
je
sbb
fstpl
lods
insb
lahf
stc
clc
cmpsb
cmpsl
jbe
xlat
nop
movsl
aam
imul
arpl
fwait
popf
bound
cmp
xchg
lea
cli
nop
ss
jo
push
fstps
ret
nop
and
dec
cltd
mov
mov
push
mov
adc
scas
out
pop
shrb
inc
popf
ljmp
jle
das
cli
test
loopne
and
cmpsb
xchg
dec
xor
pop
add
jne
insl
nop
pop
aaa
push
outsl
mov
and
fldl
xor
movsl
sarl
jecxz
fistl
add
jns
jbe
xor
arpl
cmp
incb
aad
stos
or
and
mov
and
aas
or
pop
orb
mov
and
aam
push
sbb
dec
stc
lahf
mov
or
cltd
dec
lock
push
clc
test
cli
pushl
js
divl
clc
shrb
imul
jns
pop
add
ljmpw
outsb
std
mov
in
lods
gs
xchg
jns
sbb
roll
imul
cmp
xor
repz
xor
leave
and
sbb
aaa
jo
pusha
push
out
arpl
dec
pop
fbld
lea
push
mov
iret
sbbb
sub
lret
lods
or
mov
or
shlb
je
cld
or
je
mov
call
jle
out
mov
xchg
xor
int3
in
mov
mov
mov
sbb
pop
push
cltd
lret
test
add
ja
ficoml
mov
push
nop
repz
mov
ss
inc
lods
jno
fs
stc
pop
cmpsb
dec
mov
push
and
into
fdivs
and
mov
pop
cmc
pop
sub
lods
std
pop
jns
mov
cmp
test
mov
and
jnp
cmp
fdivrl
clc
add
stc
fcmovu
lea
cmp
jecxz
in
xor
clc
stc
push
popa
xchg
out
mov
data16
lret
lcall
sub
inc
and
or
loop
lret
dec
push
daa
xchg
rolb
cmpsb
or
mov
hlt
xlat
add
scas
ds
xchg
lcall
aam
jne
repnz
push
sub
in
add
repz
add
sbb
cltd
xchg
mov
lahf
fildl
pusha
pop
push
mov
sub
sub
dec
cwtl
xor
xchg
cmc
adc
mov
push
dec
xchg
scas
pop
mov
dec
inc
mov
inc
mov
xchg
mov
xchg
lods
sub
filds
adc
outsl
xchg
leave
addr16
cmp
xchg
out
jge
enter
rcll
sahf
outsb
jae
dec
xchg
loop
mov
outsl
in
jecxz
js
jne
aaa
push
lcall
loope
and
dec
out
std
dec
push
popa
dec
in
in
fstl
loop
pop
mov
xchg
out
mov
call
sub
pop
cltd
pop
mov
xor
xchg
and
fildl
or
in
jbe
insb
sub
xor
mov
cmp
mov
daa
dec
or
push
leave
cmpsb
inc
cli
sub
pop
or
test
pusha
jmp
inc
mov
xchg
push
pop
lock
lds
test
and
imul
fsubrl
push
mov
inc
dec
sarl
ret
lds
cmp
es
and
or
mov
fbld
adc
in
mov
clc
sub
mov
or
cld
out
or
frstor
out
mov
xchg
mov
dec
push
mov
and
mov
lret
mov
mov
adc
xchg
in
or
stc
pop
mov
cmp
or
mov
adc
dec
cmp
andb
cmp
dec
mov
xchg
adc
or
hlt
shrl
aam
int3
xor
scas
mov
sub
or
das
xchg
pop
lret
jns
xor
fmul
mov
ss
enter
and
rorl
and
pavgb
cmp
jge
cmp
jne
fs
pop
push
cmp
in
movsb
sbb
inc
push
sahf
inc
xchg
jmp
jo
js
pusha
xchg
sbb
add
sbb
or
fmul
mov
push
testl
sbb
lea
icebp
adc
cmp
fwait
mov
pop
push
jecxz
cltd
jns
dec
sbb
stos
cwtl
pop
incl
xchg
xchg
sub
int
and
lret
pop
ret
lods
mov
or
outsl
test
out
lahf
je
lea
rcrl
sbb
data16
addr16
ret
and
jle
in
clc
mov
xchg
and
xchg
int3
inc
pop
mov
rcr
adc
mov
loopne
out
popa
mov
imul
cltd
rolb
jmp
mov
cmp
out
add
jle
jecxz
cli
xchg
mov
cltd
mov
std
lea
xorl
ja
dec
xor
push
cmp
in
fsts
and
pop
loop
test
mov
xchg
arpl
dec
push
inc
into
mov
sarl
std
sarb
addr16
dec
lret
mov
xchg
out
pop
aad
mov
jge
mov
push
sbb
mov
jbe
mov
xchg
sub
xchg
mov
sti
pop
sbb
bndcn
jnp
dec
movsl
rorb
mov
outsb
sub
add
push
pusha
cmc
dec
into
lea
dec
adc
scas
mov
jns
xor
pop
sub
and
nop
gs
in
iret
cmp
int3
lea
stos
mov
orl
xor
popl
int3
stos
and
in
addl
jnp
inc
ret
xor
add
cmp
bnd
int3
sbb
stc
mov
aas
dec
ds
out
cmp
in
or
nop
insb
jge
dec
lahf
pop
jb
push
xor
adc
add
push
enter
mov
clc
dec
lret
cmp
push
andl
mov
mov
adc
and
in
je
inc
pusha
push
insb
jmp
and
aad
mov
das
jnp
movsb
xchg
outsb
fsubr
pop
insb
mov
pop
and
lahf
idivl
cmp
or
pop
out
out
cmpsb
xchg
movsl
cmc
outsb
dec
shll
push
pop
adc
popf
cld
loopne
loop
fs
sub
mov
cmp
stos
cmp
pop
adc
pop
movsb
mov
xchg
pop
out
addr16
adc
test
xchg
icebp
addr16
cmp
cmp
and
or
xor
popf
adc
nop
mov
sti
cli
xchg
pop
cmp
stos
mov
fstpl
xor
add
cmp
int3
rolb
cmp
js
scas
aam
pusha
cld
mov
jnp
push
daa
jo
or
rcl
lcall
and
xchg
fildll
jg
push
sbb
mov
pop
mov
or
jbe
and
cltd
out
in
sbb
dec
gs
aaa
xchg
push
pushf
aas
fwait
mov
ja
imul
add
add
ffree
int
test
inc
mov
pop
insb
or
imulb
or
leave
lret
add
mov
and
xlat
icebp
shl
daa
inc
dec
push
lds
cmp
out
ret
jp
mov
cli
or
addr16
xchg
push
insl
xchg
notl
xor
and
pop
add
add
dec
add
cltd
jns
clc
pop
das
xchg
xor
cli
add
add
frstor
xchg
push
idiv
mov
jmp
andb
xchg
push
inc
outsl
cmpsb
jg
je
mov
add
dec
jnp
addr16
dec
add
aas
icebp
aas
sub
xchg
lret
inc
int3
cltd
push
xchg
cmpsl
pop
jl
adc
aad
cmp
andl
add
ss
cmp
es
or
xchg
iret
mov
xchg
es
hlt
and
jnp
adc
pop
xchg
shrl
fsts
adc
adc
push
mov
push
xor
and
add
je
testb
sbb
and
ret
ret
or
fisubl
jbe
sbbl
ret
outsl
xor
cmpsb
int3
or
insb
xor
std
scas
rorl
imul
test
pop
vcvtqq2pd
gs
xor
xchg
sub
cmpsb
mov
push
pop
pusha
jg
or
mov
bound
inc
aas
out
pusha
sub
out
inc
repz
push
pop
bound
cli
pop
and
sub
and
lret
dec
daa
adc
sbb
aaa
push
adc
fisubrs
mov
pop
movsl
push
pop
adc
addr16
and
push
ds
sti
cmp
sti
repnz
stos
push
lret
ds
dec
xor
sub
scas
pop
mov
mov
lds
sbb
call
mov
addr16
sbb
adc
push
ficoml
sub
scas
ss
test
cmp
out
ja
fdiv
cli
adc
adc
popa
mov
int
jl
inc
lods
insl
cmpb
mov
jecxz
sub
fs
les
shlb
xchg
push
test
sbb
jmp
push
adc
push
cmp
xchg
inc
or
mov
inc
into
cmpb
push
dec
xchg
xor
mov
pop
aas
push
push
and
jecxz
rcr
sbb
dec
arpl
mov
lcall
or
fwait
cwtl
mov
in
sub
punpcklbw
cmp
xchg
cmpsb
sbbl
test
cmp
ja
jo
xchg
orl
or
cmp
push
dec
bound
xchg
push
popa
test
sbb
xchg
xlat
cltd
inc
dec
es
pop
js
daa
imul
jnp
gs
icebp
cli
inc
xchg
or
rcrb
gs
push
xchg
add
jb
cmp
loop
aaa
pusha
faddl
pusha
pusha
enter
out
shrl
fucomp
xor
enter
pusha
xor
dec
cwtl
clc
sbb
xchg
in
imul
sbb
ljmp
mov
sub
cvtps2pi
mov
shrb
shlb
and
fmuls
imul
in
enter
mov
lods
hlt
lahf
je
push
stc
jmp
mul
aas
lock
lock
les
dec
movsl
adc
sub
jnp
out
sub
mov
js
fistpl
xor
into
xor
sbb
mov
adc
lahf
add
enter
ljmp
pop
adc
into
jno
aad
ret
aad
sbb
cmp
hlt
dec
jle
mov
movsl
into
out
mov
push
pop
movsl
jmp
sarl
inc
cld
inc
fisttps
mov
dec
lret
or
push
leave
dec
fidivl
sti
mov
inc
dec
sub
daa
aas
cmpsb
mov
cmp
ret
xchg
rcl
je
loop
jg
push
xlat
imulb
lock
xchg
aam
in
add
fcoms
sbb
push
sub
std
sub
lods
out
and
jmp
add
mov
xor
sahf
cltd
jle
mov
xchg
cs
cltd
push
xchg
add
aam
xor
xor
idiv
mov
pusha
pop
scas
sub
out
pop
iret
and
or
lods
and
sbb
daa
insl
cli
cmp
xchg
and
call
mov
lret
adc
popf
sub
leave
lea
mull
pop
int
out
fnstsw
idivb
jmp
jbe
cmp
jo
popf
lock
rorl
insb
inc
std
sbbb
cmpsb
pop
stc
mov
mov
lahf
adc
cmpsb
icebp
bswap
adc
shrl
mov
mov
sbb
outsl
xchg
dec
mov
movsl
and
es
mov
testl
or
dec
add
clc
xchg
dec
mov
inc
iret
jbe
inc
cmp
inc
xchg
mov
jmp
hlt
pusha
mov
inc
mov
int
add
les
pop
jecxz
insb
xlat
mov
push
fldl
xlat
or
adc
sbb
popf
cmp
xchg
les
push
stos
or
xor
out
sbb
inc
outsb
cli
inc
pop
mov
add
mov
popf
xchg
stc
push
mov
fwait
and
in
loopne
pusha
ss
negl
cmp
dec
call
or
xor
or
jns
or
mov
xchg
mov
hlt
pop
pop
pushf
ds
iret
sub
xor
jecxz
sbb
leave
pusha
push
enter
test
lea
ljmp
lret
arpl
pop
sub
scas
mov
rolb
jecxz
pop
mov
repnz
or
flds
ds
movsb
xchg
bound
cmp
fiadds
cmpsl
cli
addb
push
int3
dec
mov
jb
ja
ljmp
cmovb
mov
xchg
daa
int3
xchg
xor
cmp
lods
xor
out
fistpl
jle
scas
xlat
xchg
movsl
mov
sbb
addl
cltd
sti
aas
nop
sbb
sti
aaa
sub
aaa
cmp
add
or
lock
add
lea
push
mov
mov
sti
jg
sub
xorb
sub
shrl
lods
test
andb
mov
pop
shl
cmp
push
repz
mov
ret
outsb
push
sti
push
pop
fistps
xchg
inc
mov
push
and
pop
out
imul
mov
jl
iret
mov
push
cmp
fidivrs
push
ss
cvtps2pi
js
fistpl
in
ljmp
xchg
insl
fwait
push
mov
or
sti
imul
shl
insb
fisubl
sub
adc
cld
dec
add
repz
leave
fdivrl
imul
mov
sub
jle
xor
mov
inc
in
es
test
jnp
popa
cmpl
fsubl
iret
mov
pop
test
inc
sub
jg
ja
lahf
les
and
mov
adc
push
pop
nop
jmp
dec
rorb
pop
js
call
cmp
pop
pop
mov
xchg
mov
pop
sarl
mov
mov
mov
idiv
mov
push
inc
jo
add
dec
and
sbb
les
xor
fmull
adc
pop
les
in
xor
outsl
push
and
imul
or
and
enter
andl
push
mov
push
pop
jnp
sbbl
clc
ljmp
or
add
call
leave
es
pop
xor
aas
in
testl
jecxz
mov
repz
imul
fscale
scas
aas
shlb
inc
add
adc
mov
mov
data16
cmp
push
stos
dec
and
mov
push
adc
inc
cmp
push
hlt
xbegin
shrl
les
mov
lret
in
pop
hlt
pop
xlat
inc
sbb
jl
push
cli
add
into
stos
pushf
lds
imul
push
scas
popf
inc
xor
test
jae
jecxz
lret
enter
inc
repnz
push
mov
inc
rorl
pop
push
fcomps
mov
cmp
mov
pop
ss
and
loop
nop
inc
xchg
sbb
mov
fdivrl
mov
js
nop
ljmp
sub
movsb
dec
enter
push
jo
cmp
in
sbb
in
add
adc
cld
out
jb
mov
pop
adc
cmp
mov
mov
xchg
push
notl
in
rcr
out
rcll
ljmp
add
decb
mov
sub
add
push
dec
xchg
or
push
push
xchg
mov
push
cli
mov
fistps
addl
add
repnz
sbb
cmp
mov
mov
sahf
lock
pop
fnstsw
addr16
cld
out
dec
stc
jb
pop
cmp
adc
dec
cli
jg
jecxz
and
loope
repnz
push
pushf
iret
ficomps
addr16
ret
or
cli
mov
loopne
adc
mov
lret
push
mov
xchg
xchg
mov
out
ffree
js
enter
mov
in
add
and
jno
and
ja
push
enter
sub
jp
pop
mov
fcomip
fcmovnbe
xor
sbb
mov
pop
sbb
inc
stc
xor
xchg
sub
aam
xor
pop
sahf
outsl
cld
inc
sbb
mov
mov
scas
inc
std
gs
jle
out
enter
jmp
inc
mov
push
sub
pop
popa
fistl
gs
and
iret
and
imul
fcomps
and
dec
out
jns
icebp
sub
dec
mov
push
std
or
jno
xor
push
rcl
lea
lods
sub
sub
jmp
dec
dec
rcr
cs
jecxz
inc
stc
lods
mov
jg
jmp
iret
adc
out
fdivl
das
push
out
test
add
cs
shl
push
out
idivb
mov
ss
repz
mov
sahf
jl
mov
inc
push
jnp
rolb
or
jnp
cmp
mov
int
insl
test
hlt
ds
pop
fs
add
sbb
aam
adc
pop
cmpsl
adc
movsl
lock
mov
cmp
jb
out
cli
xor
insl
js,pt
jne
lds
jecxz
push
imul
std
cs
sub
les
lgs
sbb
fs
mov
aam
adc
cmp
mov
outsb
jb
mov
or
stos
inc
mov
test
sbb
mov
call
jae
pop
movsl
cmpl
test
adc
int3
adc
xchg
cmpsb
popf
dec
fisubrl
aaa
jge
daa
xlat
or
cmp
push
jle
push
repz
adc
sbb
fwait
leave
aaa
pop
pop
nop
add
je
mov
jp
inc
push
out
mov
in
push
add
adc
cmp
or
jmp
mov
lock
jle
sub
fstl
imul
jae
adc
and
mov
out
xor
xor
jmp
cltd
fadds
sbb
and
mov
xor
dec
pusha
pop
mov
jle
mov
mov
sub
mov
in
cmp
out
out
jns
cmc
test
push
imulb
sub
xchg
daa
adc
mov
fistps
hlt
in
xchg
cmc
dec
rep
adcl
fs
xor
xor
arpl
inc
push
mov
pop
imul
pop
jg
cmpsb
and
mov
int
mov
insb
push
movsb
das
lret
jnp
jns
cmpsb
clc
je
inc
pop
cmp
adc
inc
xchg
push
sub
outsl
data16
or
xor
sub
sbb
push
and
ja
stos
jl
addps
jp
mov
scas
popf
sbb
insb
jg
mulps
sub
mov
mov
and
xchg
mov
push
mov
jecxz
adc
xchg
lods
js
pop
stos
cmp
cmp
inc
loop
mov
xchg
stc
inc
pop
push
loop
jmp
adc
and
testb
inc
inc
cmp
enter
fldcw
xchg
in
ljmp
out
cld
inc
or
sub
fistps
cmpb
out
sub
in
xchg
cmp
shlb
mov
sub
and
iret
cmp
inc
mov
jmp
inc
and
lret
sbb
sbb
addr16
xchg
insb
sub
popa
mov
ljmp
dec
je
shll
sti
sbb
hlt
jo
insl
mov
or
cmpsl
cmp
int3
cmp
jg
xor
fmul
ret
test
and
xchg
arpl
sbb
insl
and
push
in
cli
fnstenv
pop
mov
mov
and
jecxz
clc
pop
mov
push
add
pop
iret
mov
mov
jnp
insl
xor
sti
lds
jge
and
xchg
adc
int3
and
sub
adc
jo
adc
fimull
sbb
push
psraw
inc
xchg
cmp
push
ja
aam
jl
inc
lea
lahf
fists
inc
mov
dec
mov
jnp
adc
cmpsl
loopne
dec
cli
jnp
xchg
inc
mov
mov
fs
push
ss
or
push
mov
mov
arpl
inc
add
xchg
fiadds
sbb
mov
xlat
ljmp
adc
sbb
pop
out
sub
sbb
invd
cmp
daa
jp
arpl
push
xchg
push
mov
cmc
or
sbb
push
pop
pop
sub
fistl
pop
xor
cs
fbstp
iret
ss
inc
fs
fnstsw
xor
addb
xor
lods
pop
ds
adc
movsb
xchg
cmp
ljmp
add
push
rol
cmp
rdtsc
xor
lret
lods
inc
hlt
jbe
inc
inc
ljmp
fmull
xchg
in
and
fisubrl
aaa
arpl
arpl
or
mov
stos
xor
inc
add
and
test
iret
dec
adc
lcall
push
repz
and
dec
xchg
jnp
mov
mov
sbb
xchg
add
pushf
cmp
jcxz
cmp
cld
pop
mov
push
into
add
xchg
push
mov
insl
xchg
stc
insb
sub
jbe
jmp
push
push
test
sbb
lods
jl
push
mov
cmpsb
xchg
mov
mov
sub
arpl
pop
ja
lods
adcl
mov
repz
nop
lds
dec
xchg
inc
mov
mov
sbb
idivl
popa
das
mov
jne
mov
dec
in
cmpsb
cmpsl
pop
fsubs
mov
pop
insb
cs
mov
pop
mov
cli
jbe
fidivs
xchg
cld
sbb
stos
out
jp
push
sahf
sbb
jge
or
int
iret
out
fcomip
aas
and
pop
cli
mov
push
int3
pusha
aaa
popa
add
jno
cmp
dec
rorb
push
bound
xor
dec
lock
ror
and
push
inc
leave
jb
push
dec
or
repz
fcoml
outsl
fcomps
jo
cli
punpckldq
in
call
mov
sbb
xchg
sbb
sbb
es
cld
push
nop
cltd
dec
inc
inc
loop
mov
push
xchg
call
pop
jbe
adc
icebp
in
xor
loopne
sti
outsb
jecxz
sti
imul
test
repz
nop
enter
mov
inc
xchg
inc
sbb
xor
push
mov
inc
clc
ja
clc
xor
data16
jl
jns
adc
les
pop
in
enter
icebp
mov
pop
sbb
jb
insb
clc
dec
push
mov
pop
loope
popa
add
or
mov
dec
xor
fmul
nop
lock
jb
sahf
inc
inc
mov
loopne
ljmp
inc
movsb
add
dec
sahf
outsb
mov
mov
sub
mov
dec
shll
in
or
out
add
lods
dec
sti
mov
jno
out
jbe
lea
fwait
sub
jg
mov
daa
into
je
pop
popa
adc
rol
sub
xchg
cmp
xchg
lods
add
push
xchg
repz
cmp
xchg
sarb
movsb
stos
mov
mov
xchg
repnz
cmp
fadds
pop
cmc
inc
jne
and
push
or
mov
aam
mov
je
fbstp
in
xchg
in
mov
xchg
fdivrp
in
inc
inc
loope
inc
sub
pop
xchg
xchg
movsb
dec
insl
adc
cmp
movsb
pop
pop
sbb
es
lahf
xchg
mov
fadds
mov
movsb
test
cmpsl
and
jns
pop
mov
push
push
xchg
fstpl
int
mov
xchg
loop
adc
adc
mov
mov
ja
ds
rolb
std
dec
jecxz
pop
pop
insb
imul
mov
arpl
mov
call
stos
add
rclb
loopne
jno
gs
int3
in
sbb
call
push
shlb
cmpsb
mov
and
and
xor
or
sub
inc
xor
xor
lods
adc
shll
outsl
jge
dec
pusha
stos
push
stos
popa
mov
jne
cwtl
and
cltd
lret
arpl
cmp
fadd
xor
dec
js
es
dec
outsb
movsb
ficoms
push
inc
fbld
push
sbb
out
sti
idivb
ss
bound
out
xchg
mov
incb
pop
push
mov
push
faddl
sahf
inc
fstl
pushf
mov
xchg
push
mov
adc
push
fisttpl
push
jg
jl
mov
pop
out
sub
in
andl
hlt
loop
xchg
or
imul
aas
fwait
mov
pop
loop
mov
lret
pop
push
into
mov
jmp
dec
out
mov
mov
push
ja
dec
cs
popf
subl
or
or
gs
push
sub
es
push
dec
fisttps
add
test
lea
stos
inc
mov
or
sbb
pop
sub
jle
cwtl
bound
push
push
jecxz
lret
inc
mov
stos
pop
aam
out
emms
adc
cmc
ficoms
cmp
and
push
cmpb
cmp
adc
ss
test
pop
add
mov
sbb
lret
mov
pop
add
movsl
fistps
aas
stos
xchg
xor
mov
xchg
sub
add
xlat
loop
repnz
inc
sub
out
test
cld
cltd
xchg
mov
dec
stc
ljmp
aad
xor
clc
adc
mov
mov
out
push
cmpsb
cmp
rol
in
fsubl
sarb
mov
fldenv
push
or
ret
loopne
jno
sbb
stos
addr16
xlat
call
xchg
xchg
mov
mov
xchg
sub
inc
mov
xor
outsb
jbe
ret
stc
rorl
add
shlb
mov
setne
pop
shlb
and
and
or
or
imul
add
mov
aad
mov
mov
sub
lods
iret
ret
cmpsb
arpl
pop
mov
hlt
jb
and
in
mov
add
mov
push
push
mov
imulb
or
ret
dec
cs
mov
mov
dec
push
ds
sbb
add
fisubl
lods
pop
inc
jmp
adc
cmp
arpl
test
popa
int3
or
loope
dec
push
aaa
or
jne
jo
sub
popa
hlt
sbb
loop
fwait
jg
and
fldl
push
jg
and
testl
pop
cwtl
call
negl
mov
push
sbb
xchg
stos
xchg
js
jmp
mov
jecxz
out
jne
xchg
subl
shll
mov
or
jp
inc
dec
push
pop
out
sbbl
add
insb
ds
xor
push
aas
je
arpl
mov
sbb
push
mov
aaa
mov
add
jae
bound
lock
pop
pop
shll
xchg
dec
lahf
mov
enter
sbb
lret
insl
sub
pushf
shr
or
scas
subl
call
adcb
clc
pop
stos
mov
out
sub
inc
out
add
add
mov
and
mov
jmp
aam
int3
hlt
iret
loopne
test
cmpsb
xchg
test
ret
mov
icebp
ljmp
adc
nop
or
mov
mov
or
repz
aaa
push
xchg
mov
add
or
sub
cmp
cmp
fcoms
add
xor
test
jmp
out
push
dec
jb
addr16
ja
and
out
jnp
cmp
mov
stc
les
mov
sbb
das
cmp
int3
lock
pop
cmp
push
push
fisttpl
notl
daa
cltd
fisttpll
test
imul
adc
sahf
fbld
xchg
rcrl
mulb
les
adc
fisubrl
mov
fisubrs
and
leave
loop
dec
shrb
lds
int3
push
fistpl
divb
add
push
push
cmpsl
in
cwtl
push
cmpsl
xchg
sbb
mov
jae
ret
fwait
das
mov
push
sarb
out
ror
pop
je
sub
in
push
fcom
lahf
loopne
mov
sbb
int
out
lcall
xchg
sbb
sbb
pusha
lods
outsb
cmp
inc
pop
mov
pop
mov
shll
ss
jg
mov
inc
in
push
lea
pusha
inc
push
push
or
mov
mov
sbb
mov
movl
pop
ror
jp
cwtl
or
in
xchg
shrb
int3
ret
cltd
mov
inc
ds
repz
cwtl
jb
into
dec
lret
clc
daa
out
add
inc
or
pop
mov
iret
or
mov
in
sub
test
lods
and
mov
sub
mov
xchg
pusha
test
in
popa
out
std
nop
sub
jne
add
sub
fs
or
inc
adc
push
movsl
cld
pop
shll
je
repnz
shll
negl
cmp
cld
fnstenv
dec
test
jo
roll
jns
cmpsl
test
arpl
or
xchg
xchg
jmp
sbb
mov
jmp
and
xor
lret
or
cwtl
xor
sub
fucompp
mov
outsb
loop
scas
push
rcrb
pusha
stc
add
xchg
pop
push
into
xor
out
push
out
xor
push
sahf
xchg
push
in
rcrl
jecxz
fwait
jb
cmc
sub
insb
les
lock
jb
push
mov
repnz
and
or
popf
loop
mov
cmpsb
dec
push
lock
add
into
xchg
mov
push
adc
in
aam
mov
cmpsb
pop
inc
insl
dec
mov
mov
mov
inc
cmp
xor
mov
std
dec
or
mov
sub
mov
sbb
clc
popa
adc
js
aam
and
movsb
pop
add
pop
mov
jmp
xor
cmp
insb
push
fiaddl
mov
inc
jb
out
nopl
cmc
fxch
daa
mov
push
pop
pop
imul
lods
xchg
pop
mov
out
fs
jecxz
mov
add
scas
fisttpll
pop
and
jmp
mov
lahf
lds
ret
aam
mov
loope
pop
hlt
cmpl
sbbb
inc
pop
jno
xchg
mov
inc
les
daa
push
add
sbbl
mov
jle
push
inc
cld
add
cld
scas
push
push
or
mov
lock
push
nop
xchg
mov
cmp
in
cmp
scas
sbb
shll
push
push
inc
or
js
scas
xlat
add
mov
mov
adc
shrb
popl
popf
rol
lret
loop
lahf
daa
jno
cs
adc
cmp
cmp
test
sub
scas
xor
test
push
test
rclb
fisubs
outsl
out
sbb
sub
xchg
dec
adc
xchg
pop
inc
sbb
movsb
jg
pop
pop
and
xor
js
mov
adc
sub
mov
lds
cmc
cmp
pop
bound
adcl
mov
mov
fcmovnb
or
or
sbb
push
les
pop
xchg
daa
inc
adc
jo
xor
or
add
outsl
ret
call
jmp
xor
or
xor
mov
and
cmc
aaa
arpl
repnz
add
cmpb
es
mov
lock
jbe
jl
push
lods
test
enter
in
mov
pushf
jl
jnp
add
sub
jns
mov
add
hlt
leave
xor
rorl
mov
test
fidivrs
mov
or
iret
fbstp
sub
xor
mov
loope
pusha
cmpsb
dec
repz
fs
mov
jmp
jbe
inc
sbb
or
push
sub
pop
das
mov
nop
adc
shll
movsb
clc
xchg
and
xlat
fldt
cmp
shl
mov
mov
add
dec
push
cmpl
mov
sbb
jp
fnsave
rolb
cld
insl
loop
orl
stos
or
lcall
movsl
inc
clc
or
sbb
lods
xor
or
adc
pop
aam
lea
or
inc
cld
cmp
test
stos
sarl
mov
jmp
push
adc
dec
cmpsl
sbb
scas
movsl
into
cmp
test
mov
bound
sbb
jl
out
push
in
pop
fwait
add
or
loopne
popf
and
mov
inc
mov
fwait
in
out
loop
ljmp
mov
cmc
sub
jb
outsl
insb
ja
sub
mov
and
rcll
rcr
int3
ja
xchg
lds
sbb
frstor
mov
jb
sub
sub
inc
mov
decl
cli
repz
cli
divl
push
push
imul
aas
test
mov
sbb
mov
add
mov
jecxz
push
dec
ds
xchg
xchg
loope
cmp
cltd
sbb
in
sbb
xor
push
mov
inc
filds
sub
push
sbb
flds
sbb
ret
mov
pusha
ds
test
fidivrs
and
or
ds
cmp
loope
rol
fisttps
dec
aad
gs
xchg
mov
mov
shl
and
fcoms
or
cmp
cmc
jp
insb
pushf
lret
test
lds
icebp
fwait
or
pop
mov
cwtl
mov
cltd
fnstenv
mov
loopne
out
jo
pop
es
dec
jae
jl
repnz
test
add
inc
daa
inc
scas
inc
push
push
pop
jge,pn
jns
dec
aas
loopne
xchg
and
fdivl
push
fs
xor
movsl
sbb
cmp
sbb
insl
lret
stos
push
cmp
jp
push
sbb
ljmp
adc
ret
pop
sbb
and
aas
test
push
mov
adc
sbb
nop
ficoms
out
pop
rol
mov
in
xor
sbb
jge
jmp
mov
outsb
adc
cmpb
or
stos
xchg
cmp
leave
call
push
stos
pop
mov
jle
mov
and
je
fildll
jg
mov
mov
push
push
scas
dec
std
cli
mov
push
pop
aad
dec
cmp
mov
inc
push
sbb
cmp
inc
insb
mov
aam
sub
jmp
stc
jge
mov
nop
xor
push
lods
fisttpl
dec
stos
adc
cmp
fldcw
push
pop
xor
arpl
js
inc
test
sub
imul
sbb
clc
aaa
adc
cmp
add
sbb
cmpsl
test
out
pusha
jno
jge
cmp
call
shl
add
mov
cs
loop
ds
into
mov
enter
das
les
in
idivb
decl
je
enter
mov
sbb
addl
test
sub
pusha
cld
add
mov
in
push
test
scas
pop
out
dec
dec
out
leave
ret
sbb
roll
scas
and
iret
ljmp
and
int
jp
icebp
movsl
or
cmp
mov
shll
or
or
pusha
cmp
jo
cmp
in
cmp
inc
std
add
cs
lcall
stc
aad
and
int3
inc
insl
popa
or
sbb
test
sub
dec
xacquire
les
out
aam
xor
jo
loopne
out
and
cmpsl
inc
fs
hlt
xchg
int3
lahf
lret
leave
insb
dec
addr16
sar
hlt
add
xor
push
aad
adc
push
sub
add
hlt
xchg
mov
rcl
push
pop
mov
movsb
push
pop
insl
push
hlt
pop
test
adc
sub
fcomp
jbe
xor
dec
mov
fxch
cs
pop
sbb
inc
or
lea
mov
mov
das
ret
push
out
inc
call
mov
pop
in
mov
or
ret
and
xchg
arpl
push
adcb
pop
sub
pop
out
mov
dec
out
and
xchg
push
mov
pop
mov
loope
sub
push
and
or
test
imul
outsl
repz
xor
imul
clc
adc
mov
stos
aas
mov
arpl
jmp
loop
sti
testb
jne
inc
mov
andb
cmpsl
pusha
mov
inc
or
push
and
jl
xor
sarl
cmpsl
adc
push
xor
cld
sbb
mov
mov
pop
push
cmpsb
mov
jo
xchg
inc
and
ss
cmp
in
mov
sbbl
mov
mov
mov
lods
aas
lock
mov
stos
or
sub
dec
xorl
cmp
jo
pop
push
shrb
mov
mov
outsb
inc
repz
and
das
mov
test
ret
dec
add
ljmp
mov
add
sbb
pop
and
cltd
icebp
cmp
sahf
or
ljmp
int3
cmpsb
leave
dec
inc
push
in
repnz
jb
lret
pop
xlat
adc
iret
add
fs
sti
std
clc
mov
scas
push
cmp
xor
xchg
cmp
loopne
loope
sbb
mov
shll
aas
std
mov
lods
pop
stos
out
or
xchg
in
dec
test
or
mov
pop
jbe
mov
stos
inc
cmp
lret
mov
dec
mov
rcrl
aad
xor
es
jnp
xor
rolb
lods
sbbb
int
inc
das
cmpsb
push
and
imul
dec
mov
or
cli
mov
and
out
inc
into
out
cmp
cmpsb
cli
insl
jae
fists
pop
inc
stos
add
gs
sub
cmpsb
and
outsb
loope
imul
mov
stc
add
xchg
test
mov
iret
xor
imul
add
xchg
ret
cmp
jnp
mov
mov
mov
mov
shlb
jle
aas
mov
jbe
pushf
jne
daa
pop
mov
and
mov
dec
test
icebp
aam
rcll
loopne
fldl
jns
jae
out
stos
into
mov
inc
out
and
jo
sbb
dec
or
sti
pushf
jb
dec
mov
leave
jmp
ret
sbb
outsb
lock
into
fstpt
fwait
and
sbb
repnz
fsubrl
scas
jne
andl
bound
dec
addr16
push
in
fcomp
pop
loopne
movsl
jns
scas
pop
add
mov
sbbb
test
sbb
dec
pop
enter
sub
cmc
mov
data16
insb
aaa
dec
addr16
jae
mov
das
jns
sbb
pavgb
xchg
ja
dec
mov
mov
addl
adc
shll
adcb
mov
imul
imull
js
or
aas
pop
or
addr16
jbe
xchg
lret
bound
adc
mov
inc
fildll
jle
pusha
jle
scas
or
fisubrs
ret
mov
jns
cmpsl
jne
es
mov
adc
jle
xchg
sbb
xor
cli
cmp
pop
in
add
cmp
add
fsubrp
dec
dec
xchg
add
outsb
arpl
es
push
jae
pop
arpl
shr
sarl
dec
clc
inc
inc
test
inc
xor
das
mull
inc
or
mov
mov
cmc
aaa
repnz
pop
or
jecxz
xor
jl
inc
test
adc
xchg
fdivs
jo
xor
bnd
or
into
mov
mov
test
pop
test
sbb
testb
push
repz
push
sbb
shll
sahf
loop
stos
mov
loopne
mov
push
div
dec
aaa
int
xor
scas
ljmp
fbld
cld
stc
sbb
inc
push
mov
lods
cwtl
fwait
leave
test
add
imul
fists
stc
stos
arpl
sbb
movsl
jecxz
jbe
jns
nop
add
shll
fs
mov
and
pop
cmp
adc
leave
sub
pop
dec
popf
mov
addr16
sbb
imul
jns
xor
xor
stc
test
sub
out
mov
mov
icebp
incb
dec
xchg
outsb
je
adc
xchg
rcl
nop
test
pop
cmp
jbe
inc
pop
inc
sub
cmp
add
popf
fbld
dec
into
es
imul
mov
adc
pop
adc
mov
out
mov
fcompl
add
lods
mov
xchg
mov
mov
jns,pn
popf
inc
mov
jle
pop
pusha
inc
dec
mov
and
jecxz
rorl
in
popf
inc
mov
lods
daa
push
push
imul
and
or
popf
ja
jne
cld
mov
and
push
inc
ss
ret
es
cmp
in
mov
scas
cwtl
mov
xor
mov
xor
adc
inc
fisubrl
push
jmp
fdivrs
or
xchg
and
out
repz
sbb
cmp
ficoms
leave
imul
xor
mov
ss
lahf
push
adc
out
adc
imul
daa
lahf
ds
mov
addb
fsubl
loop
jo
dec
in
fmuls
xor
dec
in
pop
inc
mov
test
aad
and
jge,pt
adc
xchg
outsb
scas
xchg
cmp
dec
xchg
fs
stos
or
xor
cwtl
aaa
fisttps
in
ds
mov
repnz
push
pop
mov
push
or
pusha
in
or
sbb
push
pop
loopne
jmp
out
jb
pop
icebp
enter
mov
bound
jmp
pop
nop
jns
cmp
lock
dec
add
outsb
adc
sub
adc
sbb
rorl
mov
enter
xor
mov
push
lret
mov
lret
cmp
xor
mov
jbe
les
sbb
or
aam
fstps
inc
cmp
mov
mov
inc
into
inc
sarb
in
or
test
and
mov
mov
xor
sbb
jecxz
icebp
mov
les
call
insl
pop
aas
data16
bound
xor
mov
fisubs
call
lea
movsl
xchg
push
insb
roll
int3
pop
pop
mov
ljmp
jmp
pop
dec
lret
mov
xor
lret
gs
jb
push
mov
movsl
into
bound
aad
dec
mov
pop
in
xchg
xor
je
imul
xchg
xor
xchg
cmp
dec
loopne
lods
cwtl
dec
test
inc
sbb
or
movhps
dec
gs
clc
shl
scas
push
mov
testl
add
cmp
jmp
int3
cmp
add
jmp
mov
xchg
inc
iret
and
lock
aad
fisttps
push
iret
push
sbb
stos
into
sub
mov
xor
adc
mov
cmp
mov
and
mov
out
or
push
test
ss
in
and
lret
mov
dec
pusha
inc
in
adc
test
lock
arpl
fidivrs
addr16
lahf
arpl
rcl
movb
fadds
subb
or
jmp
adc
mov
jge
push
mov
daa
subl
mov
inc
bound
sbb
add
pop
pushf
pop
xchg
cli
xlat
mov
into
mov
jo
xlat
jno
pop
push
xchg
mov
aam
dec
rcrb
lret
in
pop
insb
add
mov
in
add
mov
data16
inc
add
add
dec
aas
mov
sub
cmpsb
xor
pop
loop
sbb
je
enter
int3
cmp
ss
addr16
or
and
ja
mov
lds
push
pop
inc
push
mov
mov
push
inc
pop
sub
dec
xor
push
imul
fdivrs
cld
incl
inc
dec
lods
jecxz
pop
fisttpl
dec
roll
mov
inc
jl
dec
sub
add
es
or
cmp
xor
leave
mov
sbb
adc
push
int
push
enter
cmp
pop
cwtl
iret
in
rolb
ffree
mov
push
es
pop
shrl
lret
mov
mov
fstl
jp
lds
negb
inc
pop
mov
pop
lds
je
mov
mov
add
and
xor
ret
sub
aam
xchg
or
cmpb
scas
mov
shrl
mov
stos
clc
cmp
popf
cmpsb
imul
jecxz
mov
jg
ret
jg
dec
lcall
mov
mul
enter
xchg
loopne
sbbb
mov
push
daa
es
mov
or
sbb
nop
push
mov
popa
mov
push
iret
mov
pop
mov
repnz
ljmp
mov
into
jo
jle
nop
xchg
pop
cmp
and
cmp
add
rolb
mov
pop
rclb
mov
inc
mov
inc
push
jp
jbe
addr16
test
mov
nop
or
rolb
xchg
fisubrl
mov
scas
xor
cmp
xor
insb
jmp
frstor
cmp
dec
fisttpll
call
and
push
mov
pusha
xchg
lock
mov
aam
mov
mov
xchg
nop
xor
popa
jle
int
outsl
int
add
jmp
add
sub
mov
inc
movsl
lods
push
jmp
push
cmpsl
ljmp
dec
adc
sbb
ss
punpcklbw
stc
lahf
sbb
dec
pop
int
push
and
std
repz
add
and
mov
xchg
imul
addr16
sarb
xchg
ret
mov
xchg
lods
mov
mov
fiadds
pop
cmp
mov
int3
fistl
push
lcall
lret
xchg
addr16
mov
pop
sahf
push
adc
mov
or
je
xchg
xor
aad
dec
cmp
jg
int3
cmp
jge
sub
je
push
js
push
loopne
xchg
ret
cs
inc
adc
xor
and
add
xchg
std
in
in
mov
cmpb
aad
adc
dec
popl
sbb
or
sbb
mov
ret
cwtl
inc
dec
loope
jbe
daa
or
lea
cmc
push
hlt
pop
fidivl
repnz
pop
mov
jns
ficompl
push
xchg
loop
pushf
jno
push
mov
cmc
lods
xchg
push
scas
cld
pop
mov
das
add
ret
inc
and
xor
pushf
mov
repnz
cmp
dec
inc
lahf
ja
xchg
mov
fsubrs
mov
lahf
fstps
rol
mov
popf
ret
jae
mov
dec
mov
call
mov
or
cmp
cmp
jp
insw
nop
imul
inc
push
lds
push
in
loopne
dec
cmpsl
jecxz
shr
jmp
sub
sbb
rorl
and
arpl
fdivl
inc
test
push
inc
fs
shrb
outsl
push
pop
mov
jbe
iret
repnz
sbb
mov
daa
xlat
cmpsl
dec
adc
aaa
xor
push
push
cld
mov
and
faddp
xorb
sahf
push
lock
cmp
mov
daa
sbb
adc
xlat
data16
inc
ret
imul
jg
sbb
xor
sub
cmp
pop
jns
js
jns
iret
dec
sub
xchg
jnp
push
jb
bnd
mov
xchg
xchg
imul
bswap
cld
insb
or
push
push
daa
sbb
nop
dec
inc
lret
insl
rcl
or
clc
stc
rol
movsl
dec
daa
sbb
cmpsb
lret
jmp
scas
inc
xorl
xchg
jle
jg
pop
fs
xlat
data16
popa
mov
inc
gs
cmp
mov
sbb
pop
jo
jle
push
movsw
or
push
in
lods
movsl
ds
mov
cmp
lods
sub
push
jbe
and
cmp
cmp
lods
add
movsl
sbb
xor
mov
sahf
mov
pop
or
adc
lock
jmp
jge
out
movsb
ret
test
sti
mov
mov
ja
jmp
shlb
or
add
sub
test
pop
jmp
inc
jbe
pop
mov
icebp
idivl
cltd
test
ret
cmp
pop
or
ss
imul
sbb
dec
or
sahf
xchg
repz
out
jo
pop
leave
push
lret
pusha
loope
add
push
cmpsb
mov
sub
xchg
in
sbb
int
fstps
add
scas
dec
fidivrl
test
and
dec
pop
jb
sbb
fimuls
gs
gs
mov
push
xchg
jmp
outsb
push
sub
test
fsubr
cmc
sub
mov
push
fmull
sub
nop
mov
xchg
jns
sub
xor
pop
outsb
and
repz
nop
add
pushf
or
mov
les
adc
dec
iret
mul
leave
push
fistl
cltd
sahf
hlt
lods
jae
fisubrl
or
xchg
fs
testl
sbb
xchg
cwtl
push
xchg
push
mov
xchg
cmpb
shr
pushf
iret
inc
adc
xor
mov
dec
sbb
xchg
aas
push
dec
xchg
mov
movsl
push
add
roll
adc
cmp
jle
loopne
popl
imul
out
push
hlt
and
xor
out
rorb
cmp
or
gs
aaa
push
outsl
aam
fidivrl
sub
pop
mov
mov
push
aad
pushf
mul
fwait
imul
dec
push
fistl
aam
fwait
sub
cmpb
adc
mov
and
test
cmp
cmpsl
xchg
fucomip
sahf
data16
mov
push
jg,pt
ljmp
xchg
pusha
pop
xor
scas
clc
sub
stos
xlat
push
subl
adc
cmp
lret
mov
sbb
loop
inc
call
inc
rcll
mov
jae
push
jl
lcall
xchg
scas
cmc
dec
xor
faddl
bound
adc
movsl
inc
xchg
out
aam
push
out
cmc
adc
xor
add
je
add
roll
ss
sahf
test
dec
mov
push
mov
mov
test
mov
pcmpeqd
add
push
popf
vcvttpd2dqx
and
stos
push
stos
cwtl
ret
cmpb
and
cmpsb
test
xor
push
mov
push
push
sbb
jmp
xchg
inc
shlb
cwtl
test
dec
das
dec
pop
add
xchg
das
add
in
aam
pop
fldl
inc
or
mov
popa
ret
lret
lock
movsb
cmpsl
sti
jnp
popf
xlat
xor
add
push
ljmp
lret
mov
popa
clc
sub
mov
ljmp
push
in
jo
js
sub
pop
pop
cmp
test
cmp
inc
and
push
and
sub
pop
sub
xchg
pop
les
xchg
add
ja
xchg
repnz
repz
push
addb
out
iret
popa
sbbl
js
mov
enter
leave
or
inc
jge
push
dec
jl
adcl
das
daa
sbb
sarl
adcb
ds
fwait
sub
loope
xor
mov
adc
jb
mov
mov
add
shlb
lods
mov
fwait
cli
mov
cmpsb
shl
sahf
scas
out
adc
sbb
cmp
inc
movsl
out
push
rorb
pop
ja
cmp
add
jmp
mov
shlb
pop
sahf
add
addl
pop
jle
idiv
xchg
mov
data16
jp
cmpb
out
sub
fdiv
jno
xchg
xchg
addr16
xor
arpl
fisubl
in
xchg
xlat
jns
and
push
jae
cwtl
mov
sbb
roll
adc
in
lods
sub
fsubs
cwtl
std
scas
imul
mov
jb
and
xchg
xor
out
icebp
andb
les
mov
xchg
mov
fildl
sahf
adc
clc
add
dec
jmp
jae
xor
mov
in
jge
lea
lret
aad
orl
stos
scas
pop
cmp
mov
adc
scas
xchg
sub
scas
cmc
or
test
pop
dec
pop
pusha
or
dec
add
mulb
xchg
jmp
xchg
mov
mov
pop
pop
dec
scas
jecxz
push
add
adc
inc
mov
sarb
je
pop
cmp
mov
jmp
jnp
les
mov
fidivrs
dec
cmp
xor
xchg
jl
push
jns
icebp
rcrb
icebp
xchg
pusha
mov
xor
in
jo
incl
int
xchg
outsl
add
sub
mov
sahf
aad
mov
pop
inc
test
gs
orl
ja
addb
out
jmp
xchg
dec
lea
inc
rolb
testl
jnp
mov
test
xchg
mov
mov
sub
jnp
rorb
in
adc
push
sub
test
call
xlat
or
lcall
jmp
scas
adc
popf
adcl
ljmp
xchg
cmpsl
xor
mov
aas
shlb
and
lret
sbb
mov
sahf
xor
pop
clts
inc
pushl
fdivs
and
mov
inc
sub
add
inc
cmp
xchg
dec
fsubs
push
lahf
xchg
cmp
jne,pt
and
mov
out
mov
fsubs
pop
add
clc
xor
fisubrl
pop
aas
in
add
out
jle
jne
mov
and
lods
std
fdiv
fwait
mov
pop
ret
push
int
sub
arpl
mov
mov
inc
mov
pushf
test
dec
jns
cmpsl
xchg
movsb
and
and
addr16
lcall
loopne
repnz
insb
and
add
push
sbb
and
idiv
and
sub
adc
shll
xor
std
aam
mov
and
sub
rcr
imul
and
cltd
imul
cltd
mov
and
cltd
pushf
outsb
call
xchg
or
test
fwait
js
dec
push
cmp
das
lods
enterw
mov
cmp
les
xor
mov
mov
pusha
frstor
ret
mov
repz
faddl
push
adc
fisubrs
int
cmc
ss
test
hlt
aad
push
call
pushf
push
mov
pop
iret
jecxz
mov
enter
mov
ret
cltd
pop
jecxz
lahf
push
pop
and
add
push
mov
sub
push
xchg
mov
rol
jl
out
in
dec
xor
jns
pop
push
mov
nop
cmp
loope
cmpsl
push
push
stos
stos
outsb
subb
mov
je
inc
enter
sub
push
ss
mov
mov
jp
lcall
xchg
push
outsb
aad
fisubl
bound
inc
mov
loopne
jbe
daa
pop
sarl
aam
jbe
mov
mov
sbb
stos
push
and
je
data16
jmp
jae
push
loopne
cmpsb
test
dec
shrl
push
xor
fwait
loop
das
inc
pop
stos
ja
mov
xchg
sbb
in
loop
xchg
subb
xchg
push
and
loop
mov
lahf
imul
mov
adc
loope
pop
sti
adc
push
mov
es
cmp
mov
lahf
cmp
sbb
add
popf
popf
lcall
enter
pop
xchg
add
mov
popf
jae
call
stos
inc
outsl
mov
scas
aaa
xchg
mov
call
shlb
out
enter
push
pop
mov
mov
mov
lahf
lods
push
sub
outsw
popf
outsb
mov
mov
xchg
jns
and
mov
repnz
mov
std
in
cmc
xor
or
aaa
mov
pop
push
test
imul
dec
pop
daa
dec
pop
out
sub
out
ret
cmp
add
pop
dec
jge
sar
pop
mov
fisubs
xchg
jg
mov
xchg
shlb
dec
mov
inc
sahf
and
out
sti
movsl
push
fimull
xor
outsb
push
and
fdivrs
jl
adc
mov
mov
jmp
out
push
jb
ret
inc
ja
push
movsb
lds
cmpsb
push
inc
out
es
xchg
aam
dec
stc
sbb
mov
cltd
int
cmp
jo
pop
xor
mov
jmp
pushf
push
arpl
xor
ljmp
int
ret
add
in
add
and
pop
or
inc
rcrb
xor
sub
sub
pop
loop
or
inc
dec
sub
pop
call
cltd
mov
rcll
pushf
jle
std
or
mov
xlat
sub
lds
ja
mov
sbb
sbb
popa
rorl
ja
jle
fcom
mov
cmp
pop
test
repz
and
cmp
sub
dec
mov
lret
les
stos
jg
jge
sbbb
ss
inc
test
jge
and
lahf
seta
sub
mov
dec
mov
inc
or
test
lods
out
mov
ja
faddl
notb
int
xchg
push
cmpsb
jecxz
xor
int3
shrl
das
outsb
ret
xor
cwtl
xchg
repnz
fldenv
lods
fsubp
aaa
sahf
adc
les
and
sbb
ss
loope
cs
das
mov
shlb
jns
ret
ret
ljmp
cld
jno
sub
mov
mov
cwtl
add
loope
mov
sub
dec
lret
xor
outsl
mov
out
and
ja
repz
lods
jno
jne
dec
das
or
mov
je
repz
aaa
xor
jg
outsl
add
lock
mov
mov
insl
mov
or
insb
adc
repnz
mov
daa
fimuls
mov
jnp
mov
mov
xor
repz
das
pop
clc
jo
jno
filds
pop
jge
test
xor
cmpsb
in
jle
jp
adc
popf
or
pop
int3
mov
mov
andl
orb
jp
jl
pop
adc
pop
fadds
rcrl
sub
xchg
mov
data16
es
cmp
cs
sub
pop
and
fcompl
jg
fs
add
xchg
ja
xor
push
in
xor
imul
dec
jnp
pop
adc
lock
lods
fisubrs
mov
mov
mov
mov
dec
shrb
inc
fmulp
cmp
shlb
xchg
or
lock
or
clc
adc
in
mov
fwait
push
repz
xor
aad
mov
mov
jo
stc
bound
test
push
and
outsl
aas
push
xor
lret
jmp
xchg
mov
sahf
out
dec
mov
bound
js
jge
icebp
mov
push
and
mov
jae
sti
fimuls
repnz
iret
in
inc
and
sbb
mov
out
sti
mov
add
and
inc
xchg
mov
cwtl
xor
loope
movsl
mov
push
insb
xchg
sbb
in
cltd
jge
push
scas
sub
add
aaa
cwtl
pushf
mov
push
add
cli
mov
cmp
adc
and
mov
add
pop
jb
fs
scas
cmp
ds
aaa
fildl
bound
xchg
xchg
fs
mov
mov
ss
aaa
out
arpl
roll
outsl
push
and
mov
xor
repnz
scas
jb
call
push
and
jae
jge
adc
outsb
stc
dec
pusha
xor
repz
dec
roll
jge
mov
arpl
mov
inc
and
pop
xor
rol
insb
push
inc
inc
dec
int3
leave
dec
jae
adc
insl
or
fmull
sbb
add
orb
xor
jg
dec
inc
loopne
dec
cmp
cmp
sub
les
jge
sub
xorl
mov
test
push
and
dec
and
pusha
xchg
adc
aad
loope
adc
cbtw
pop
dec
andb
sarl
push
call
mov
pop
hlt
mov
add
stc
xchg
mov
or
jecxz
fistps
and
push
xchg
in
jl
std
das
adc
pop
xorb
in
jg
mov
rclb
mov
sarb
fnsave
cmpsl
cmc
sbb
in
push
fwait
xchg
inc
xchg
mov
paddsb
and
or
fcmovnb
cmp
cmp
ljmp
ljmp
adc
cmp
ret
std
and
jno
xlat
into
inc
or
pop
fsubl
push
cmp
push
lret
shll
stc
rorb
or
scas
jmp
or
ret
xor
int
sbb
xchg
jecxz
push
cmc
mov
ds
call
orb
frstor
int
fs
shll
sbb
mov
mov
xorl
and
xchg
pop
or
adc
xchg
pop
movsb
push
fists
xor
lret
jmp
sub
pop
aam
cli
mov
jl
sub
xchg
stos
movsb
and
inc
ljmp
sbb
inc
jae
je
mov
pusha
add
lea
lahf
lods
and
rorb
push
dec
sub
jae
fsubrs
cld
aam
sub
xchg
loop
and
and
or
jb
lods
stc
lret
loope
ret
jo
cmp
bound
fs
pop
aam
mov
test
push
or
add
fldl
mov
sub
mov
fbld
sub
enter
jnp
xor
mov
xchg
jle
scas
pop
insl
add
sahf
jp
jp
test
push
daa
fwait
sbb
fldcw
das
frstor
stos
xchg
mov
imul
jns
adc
hlt
jbe
dec
xor
adc
push
out
or
mov
test
xor
cld
lret
mov
mov
mov
es
sub
inc
and
mov
or
add
aad
shlb
imul
dec
scas
lea
xor
stos
dec
sbb
inc
adc
gs
fdiv
mov
cmova
arpl
add
out
lods
mov
insb
shlb
loop
push
xchg
mov
mov
mov
cmc
or
sub
outsb
dec
mov
cmpsl
out
ss
fisubs
push
sti
push
mov
in
push
mov
fs
inc
leave
xor
fwait
xchg
cmpsb
daa
out
in
lahf
bound
fistpll
pop
pop
shl
inc
mov
ja
xlat
cmpsl
cmp
cltd
mov
sub
jnp
pushf
sub
pop
and
lds
xchg
repnz
inc
jp
jp
push
into
sahf
ffreep
xor
pusha
lahf
test
jmp
push
mov
sbb
lods
inc
icebp
js
rcll
and
pushf
add
xlat
add
test
xchg
pminub
stc
xchg
pop
lock
incl
mov
jae
in
sbb
xor
loope
pop
adc
insl
in
popf
sbb
inc
gs
lahf
adc
cmp
inc
out
stos
lods
loopne
fwait
jg
adc
jnp
inc
pop
lds
sub
dec
inc
cwtl
nop
jg
push
inc
mov
out
inc
xor
inc
adcb
icebp
pop
out
insl
in
in
push
adcl
insb
out
test
pop
cmp
jb
int3
aaa
push
pop
mov
mov
sub
stc
cmp
mov
testl
push
push
push
lret
jp
mov
repnz
daa
jns
outsl
sbb
sbb
in
nop
push
int
mov
mov
push
dec
push
cmp
push
sbb
push
movsb
hlt
xor
subb
sub
pop
int
sub
loopne
shll
iret
push
shrl
mov
je
movsl
push
adc
sbb
cmp
xchg
and
je
rorb
jno
daa
fwait
cltd
cmp
pop
dec
ss
jecxz
inc
imul
lods
testb
negl
test
arpl
mov
push
and
fbstp
loope
jl
pusha
pop
inc
xchg
dec
les
shl
jmp
cmc
jo
sub
cmp
mov
leave
decl
mov
hlt
and
loope
mov
ljmp
ret
mov
call
cmpsb
cmp
fs
incl
push
ljmp
popf
lea
test
mov
cltd
repnz
jg
ljmp
xchg
xor
dec
movsl
push
xor
mov
in
push
fisttpll
rorb
dec
scas
cmp
in
nop
loope
and
xor
call
sbb
rcrl
out
add
stos
dec
ficoml
inc
sarl
loope
out
sub
sti
arpl
xchg
imul
xchg
pop
dec
dec
outsb
add
xchg
xor
cltd
jle
loope
insb
ficoml
sbb
pusha
cmc
in
and
sub
loope
loop
sbb
adc
sub
je
or
sarl
jge
in
xchg
xchg
xchg
mov
dec
lea
lahf
add
sbb
xor
frstor
sub
leave
sub
xchg
lcall
cs
call
adc
add
inc
mov
loope
sub
fwait
push
push
and
addb
fimull
mov
imul
leave
sub
movsl
je
xorb
mov
lods
mov
stos
dec
xchg
adc
testl
pop
jns
das
mov
popa
loopne
mov
pop
sbb
jg
mov
divb
dec
adc
sbb
jl
push
das
cmp
fnstenv
cld
add
xlat
inc
or
inc
jb
arpl
push
scas
xor
bound
imul
or
fwait
sbb
jbe
mov
lock
aam
and
pop
fwait
into
out
xchg
pop
mov
std
sbbl
es
es
sub
cmp
jge
jmp
icebp
jo
dec
xchg
xor
scas
pop
mov
scas
jae
dec
mov
mov
inc
fcomp
mov
lock
pop
lahf
mov
bound
cmpsl
je
les
test
adc
inc
movl
mov
and
lea
aas
das
in
mov
cmpsb
lret
pushaw
add
cmpltps
std
scas
sub
mov
push
inc
into
clc
mov
aas
fwait
std
lods
pop
das
aam
dec
xchg
sbb
daa
ds
or
mov
gs
adc
pop
mov
mov
gs
xchg
out
jae
pop
cmp
push
cmp
mov
jmp
push
sub
sub
xor
andb
pushf
notb
pop
adc
pop
xor
push
cld
jmp
sub
mov
popa
popl
out
sub
insb
mov
xchg
sub
lcall
adc
mov
sti
ja
shlb
xchg
ret
jnp
rcll
ljmp
mull
xchg
adc
mov
call
mov
cmp
repnz
test
test
subb
jle
les
pop
int
mov
fcom
loopne
loop
mov
adc
call
mov
adc
dec
adc
mov
hlt
mov
sub
test
dec
inc
roll
xor
jmp
fsubl
pop
popa
ljmp
push
jecxz
xor
test
loopne
push
in
add
xor
push
pop
mov
pop
and
or
shl
iret
cmpsl
cmpsb
mov
ret
aas
jne
out
dec
inc
dec
adc
je
pop
inc
out
movsl
or
aam
int
aad
xchg
xor
sbb
stos
cmovp
xor
jmp
cmc
test
inc
sub
xchg
lahf
int
jle
inc
jns
inc
jb
ret
lahf
sbb
in
fs
mov
or
cmp
das
cmp
xor
not
les
dec
push
xor
js
mov
mov
stos
xchg
xchg
out
sti
icebp
andl
repz
sub
push
add
pop
mov
pop
bswap
lods
mov
lods
das
rorb
arpl
test
imul
mov
xchg
push
xchg
out
rcll
test
dec
movsb
maxps
mov
mov
pop
in
ror
mov
dec
jne
inc
cmp
lods
or
add
or
mov
xor
pop
fnsave
lods
cld
jl
and
mov
xor
popa
test
cmp
push
cmp
int3
jl
cld
outsb
cmpsl
cmp
lret
insb
jbe
xor
andb
fimull
inc
ret
aam
cmp
push
inc
pop
outsb
aas
xor
test
or
icebp
and
cmpsl
sbb
int3
jae
mov
xor
icebp
shl
fsubl
bound
mov
leave
pushf
loop
ss
popf
outsw
adc
lock
inc
aad
repnz
mov
inc
mov
xchg
xlat
addr16
or
add
push
repz
lds
inc
jb
and
inc
push
test
pop
movsl
aam
sbb
stc
movl
inc
outsl
jg
filds
in
enter
sahf
dec
lea
and
and
sbb
cld
in
cs
push
lods
mov
sub
ja
xchg
or
inc
imul
pop
push
mov
pop
cli
xchg
out
pop
mov
jl
nop
rcrb
fsts
addr16
xor
testl
nop
sbb
das
cmp
lods
callw
push
push
mov
out
cmp
fwait
outsb
int3
mov
jo
aas
das
mov
and
xor
popl
nop
popl
pushw
inc
cmpsl
mov
xchg
cmp
mov
cmpsl
dec
xor
inc
xchg
pop
add
in
sub
sbb
xchg
sahf
imul
xchg
in
in
sarb
stos
sbb
dec
sbb
lds
scas
sbb
dec
xchg
pop
sub
cld
push
push
insl
insb
cmp
addr16
xchg
adc
jecxz
testb
mov
movsb
test
push
or
hlt
mov
rorb
cli
imul
mov
ficomps
nop
cld
push
inc
and
cmp
stc
push
mov
adc
mov
sbb
sbb
test
push
jo
push
icebp
aam
data16
fstl
cltd
in
or
sub
out
push
push
out
lods
dec
out
enter
sbb
xor
mov
fidivrl
xlat
hlt
jmp
js
cli
mov
adc
test
dec
sub
mov
cwtl
sti
jo
scas
pop
lret
pop
sarb
push
clc
jne
rorb
je
out
add
int3
flds
rcrl
adc
add
push
cmp
imull
jle
enter
mov
stos
dec
xor
sbb
sub
sub
ljmp
pop
jle
ror
cs
in
sbb
sti
mov
stos
in
stc
fimull
lcall
lret
push
ss
sub
push
mov
sub
mov
lods
lds
and
mov
rcrb
cmc
data16
or
mov
clc
stc
outsl
mov
mov
imul
or
inc
sub
stos
mov
iret
pop
inc
rep
icebp
out
or
sbb
mov
int
out
and
push
inc
or
enter
adc
and
mov
xchg
movsb
call
cmp
push
sarb
frstor
aaa
shlb
rorb
fmul
aas
sahf
jns
cmpb
adcb
xchg
dec
mov
cmpl
push
pusha
jae
ja
or
add
subl
mov
push
xchg
jbe
adc
js
push
popf
dec
xchg
pop
cld
nop
test
mov
xorb
loopne
adc
adc
data16
push
fldcw
jg
inc
imul
xor
ret
rorl
add
mov
pop
or
arpl
iret
xchg
jno
inc
test
test
dec
or
lcall
dec
fmull
roll
xorb
loop
mov
cwtl
ret
xchg
ret
mov
imul
test
fdivrl
nop
jb
pop
push
je
jne
out
rcll
test
mov
add
xchg
sbb
xchg
divb
lock
pop
faddl
adc
adcl
fildll
adc
cmp
dec
jmp
bound
mov
std
es
int3
mov
bound
das
adc
pop
mov
pushf
test
inc
stos
scas
inc
mov
mov
jge
cwtl
jmp
inc
imul
sbb
cmp
inc
idivb
mov
addr16
lret
inc
les
mov
xchg
jae
xlat
xorl
fcoms
cmp
in
data16
jge
adc
test
leave
lods
stos
orb
cmp
mov
pusha
inc
sbb
xor
add
xor
jecxz
mov
dec
jnp
inc
adc
xor
imul
pop
stos
mov
aas
fwait
pushf
std
cs
xor
jb
sub
mov
nopl
sub
movsb
lock
jo
loope
xchg
xor
xchg
or
divl
sbb
or
jmp
mov
out
cmp
dec
sub
dec
cmp
pusha
inc
pop
mov
cmp
push
or
mov
lret
sub
arpl
inc
inc
adc
clc
sub
push
je
cs
xchg
cmp
cmp
into
test
jb
xchg
shlb
inc
cmpsl
fldl
icebp
sbb
hlt
mov
ret
aam
push
fwait
mov
xchg
mov
std
push
xlat
out
push
xchg
js
cs
and
xchg
dec
loop
aad
and
jmp
rol
sbb
es
sahf
lret
inc
fcoms
jne
push
mov
bnd
cmpxchg
xor
jle
fisubrl
jne
jmp
cmpsb
push
mov
dec
push
movsl
inc
jae
pop
add
cs
xchg
sbb
arpl
pop
pop
cmc
push
cltd
sti
dec
out
sti
add
repnz
xor
dec
test
jge
cmp
pop
lods
sbb
sti
xor
or
pop
xorb
dec
and
mov
or
mov
insl
xchg
mov
ret
dec
sub
mov
xor
or
jl
jae
ja
mov
inc
and
jge
sub
test
ja
je
jmp
push
lods
cmp
add
fwait
addr16
test
fstpt
cli
daa
insl
nop
xchg
std
jbe
jl
aam
insl
daa
mov
lret
out
repz
or
mov
adcb
loopne
in
sbb
or
cmc
jmp
xchg
mov
stos
addr16
sbb
pop
inc
lds
add
inc
push
pop
inc
adc
popa
cmp
jns
xchg
loopne
es
movsb
sahf
or
inc
xchg
adc
pop
jg
addl
lods
insl
lcall
insl
xchg
pop
je
inc
dec
out
sbb
pop
notl
inc
xchg
xchg
dec
mov
or
test
mov
jbe
faddl
testb
out
fildl
sahf
push
shlb
in
xor
je
mov
jmp
adc
repnz
pop
or
lods
arpl
jno
pushf
fs
xchg
nop
inc
fldt
jns
inc
test
push
xchg
jmp
push
cltd
dec
int
clc
mov
sbb
cli
mov
lahf
das
sahf
outsb
jle
lea
mov
into
test
lds
sub
hlt
push
ja
jbe
mov
ret
xor
leave
jne
in
inc
mov
out
mov
or
pop
call
jl
je
sbb
gs
dec
test
in
clc
ss
sbb
cmpsl
pop
pop
sbb
sbb
mov
test
inc
sub
and
cwtl
push
xor
stc
xchg
xchg
cmc
xor
lcall
ds
int
add
sub
cmp
lret
lea
cmp
jnp
movsb
sbb
pop
mov
jmp
push
dec
call
push
scas
rclb
clc
jmp
cmc
jmp
popa
sub
jae
fnstenv
test
je
and
sbb
fcompp
push
mov
mov
mov
cld
fisubl
aaa
imul
mulb
xchg
and
faddl
xchg
pop
push
dec
ds
cmp
add
dec
lahf
add
vsubss
mov
push
push
inc
pop
in
mov
in
scas
cmpb
sbb
test
jo
push
je
jno
xor
add
adc
pop
xor
lahf
jns
fadds
faddl
call
xchg
inc
mov
ds
imul
mov
loope
leave
clc
push
pop
pop
in
mov
insl
inc
sbb
nop
pop
sbb
push
cmpsb
ljmp
xchg
test
lock
xchg
cmc
push
inc
adc
sahf
cmpsb
repnz
aas
out
or
xchg
loope
pop
adc
pop
shrl
mov
add
mov
shl
aam
sub
sbb
pop
lahf
aas
sbb
in
repnz
mov
inc
out
and
dec
jo
jae
lds
stos
insb
push
mov
sbb
jl
add
lods
sbbl
imul
sub
mov
movsb
scas
mov
mov
movsl
mov
jbe
aad
mov
jne
sahf
mov
pop
sub
jb
scas
jb
loop
arpl
jb
xchg
lea
clc
lods
ret
adc
sbb
repz
inc
jmp
sub
int3
enter
adc
pop
push
mov
mov
push
adc
cmc
xor
stos
sbb
jb
jg
cli
jne
pop
in
and
sbb
mov
mov
adc
loope
std
push
aas
insb
cwtl
stos
jno
fsubrp
and
push
sub
aad
mov
add
out
xor
enter
mov
hlt
pushf
imul
sarb
xchg
push
fisubrl
and
cltd
cmp
cvtpi2ps
orl
mov
xchg
mov
adc
xchg
shrb
ljmp
sub
fidivs
rol
sub
pop
hlt
in
xchg
pop
dec
cmc
data16
or
daa
nop
xor
js
dec
popf
xchg
inc
xchg
cmpsl
mov
jecxz
enter
cltd
jge
imul
and
push
incb
xchg
cld
or
dec
fmuls
jbe
pop
cmp
mov
inc
in
sub
push
rcrl
movsb
and
mov
ja
adc
pop
bound
loop
mov
ficoml
in
andl
and
add
add
aam
xor
mov
cmpsl
adc
pop
repnz
sub
icebp
addr16
pop
mov
push
mov
sub
push
dec
popa
divl
and
push
push
nop
lcall
stos
mov
pop
ljmp
imul
in
jb
out
mov
add
outsb
cmp
sbb
stos
cli
stc
push
sbb
sub
mov
loopne
enter
inc
cmp
mov
out
push
inc
or
pushf
mov
inc
mov
cmpsl
call
mov
mov
mov
xchg
sarl
lods
insl
dec
sub
ret
sbb
pop
vsqrtps
mov
mov
fwait
lret
adc
lds
sub
gs
cmc
cli
aam
aad
jge,pn
sub
pop
sub
inc
mov
loope
add
or
mov
mov
repz
daa
ja
in
add
pop
ss
jmp
rorl
int
or
repnz
or
and
pop
or
aaa
cmp
adc
mov
enter
rcll
and
fisubl
pop
out
jle
jecxz
into
add
xchg
push
fbstp
sbb
sbb
movsl
adc
push
pushf
xor
test
scas
in
cmp
inc
or
cmp
mov
psrad
pop
pop
lock
fdivl
lds
stc
out
and
inc
popf
pop
mov
mov
cmc
push
aaa
cmp
xchg
pop
xlat
les
push
mov
lock
iret
or
mov
mov
inc
adc
and
mov
sbbl
xchg
lcall
add
ja
clc
pushl
test
addr16
insb
xchg
mov
je
loopne
jns
sbb
jbe
popf
js
or
mov
repz
arpl
mov
pop
fcomps
mov
inc
popf
or
cli
outsl
add
test
jl
pop
movsb
xor
into
pop
mov
pushf
test
lea
iret
xchg
or
or
cmp
add
or
movsl
test
pop
and
adc
into
push
cmpl
and
fldcw
pop
add
pop
int
stc
adc
pop
and
inc
push
mov
popf
adc
pop
xchg
scas
xor
out
mov
int3
stc
mov
xchg
mov
pop
ja
mov
mov
notb
out
cmpsb
lock
cmp
int3
adc
push
xchg
or
dec
das
xor
pop
sbb
mov
outsl
mov
xorl
gs
insl
cwtl
sbb
jo
cwtl
mov
outsl
inc
sahf
in
ja
icebp
arpl
out
jnp
popa
sbb
xor
fcoms
shlb
sub
popf
subb
sub
fdivr
out
pop
or
dec
sbb
std
jae
cltd
jp
sbb
shl
push
in
loopne
test
jne
dec
cltd
nop
stos
adc
jno
and
sub
and
dec
mov
xor
loop
ret
cltd
into
sub
inc
fdivl
sub
cmpsb
out
mov
push
rcll
jns
int
adc
dec
xchg
int3
push
loope
push
jge
jecxz
and
fiaddl
sub
ja
add
inc
cmp
popf
test
jnp
mov
sbb
dec
lret
push
push
fdecstp
xchg
mov
pop
inc
dec
pop
jo
mov
lods
add
insb
push
push
mov
push
lods
adc
repz
or
ds
in
ljmp
sub
aad
leave
pop
and
add
and
nop
or
lcall
pop
mov
or
xor
jne
iret
scas
and
js
ss
inc
call
mov
pop
loop
adc
xlat
shlb
xchg
lods
cmp
loopne
in
decl
mov
pop
cmpsb
es
dec
and
lods
xchg
xor
push
jo
sbb
fsub
inc
dec
or
push
adc
inc
outsl
aas
leave
lcall
ret
imul
faddl
ret
cmp
pop
mov
cmp
push
mov
mov
jns
sbbb
arpl
dec
jmp
jg
std
or
les
dec
add
or
lods
jge
cwtl
fucomi
std
mov
aad
mov
sti
mov
add
das
shrl
mul
jne
into
out
and
xor
adc
jns
push
cmp
loope
sti
add
mov
fwait
ljmp
insl
push
fwait
loop
jg
lea
mov
jl
out
push
repz
out
adc
push
lahf
push
es
xchg
movb
cs
cmp
xchg
xor
ret
mov
add
inc
xchg
cmp
aas
mov
jno
int3
add
out
pop
lret
shlb
aam
aaa
out
mov
cld
scas
gs
mov
mov
xor
rorb
pop
mov
repz
in
aas
aad
sub
xchg
rolb
sub
lds
push
and
jbe
jl
jmp
mov
sbbb
ds
cwtl
sbb
test
fisubl
imul
jl
bound
rcr
cmp
mov
inc
mov
jp
xor
lods
les
cli
xor
sbb
out
xor
mov
sbb
int
inc
flds
mov
jns
fnstenv
insw
inc
xor
jecxz
hlt
jg
loop
mov
imul
cwtl
mov
rorb
mov
ljmp
cmp
aad
cmp
mov
fimull
jg
dec
sub
xor
pop
mov
aad
out
jne
cld
inc
inc
xchg
enter
mov
push
idivb
inc
outsl
sti
push
push
in
popa
inc
scas
add
mov
cwtl
adc
testl
pop
lock
mov
dec
push
fs
fwait
cmpsb
mov
pop
jle
mov
push
adc
xor
je
pushf
xor
pusha
pop
pushf
xor
jo
frstor
sub
sarl
shl
cmpsb
mov
lds
or
adc
or
cltd
dec
mov
sbb
sbb
lds
bswap
sahf
test
mov
fildll
inc
add
mov
jno
imul
pop
pop
stc
ds
sub
addr16
out
push
dec
inc
sub
fldcw
fistpl
or
and
les
adcb
outsb
das
push
pop
bnd
add
aaa
jo
pop
enter
out
inc
arpl
notl
jbe
scas
pop
pop
mov
or
sbb
mov
adcl
dec
jmp
aam
mov
dec
and
pop
int
push
jmp
adc
mov
jl
mov
mov
bound
cmc
fnstsw
shll
xchg
cmc
rolb
in
mov
sbb
or
fcmovu
pop
mov
in
add
js
cwtl
add
data16
mov
out
loope
sbb
xchg
insb
cmp
cmp
xchg
andb
cwtl
lds
jne
or
dec
fcmovbe
mov
pop
sbb
push
jno
loop
mov
divb
loop
jecxz
adc
xor
data16
sti
icebp
jp
xchg
push
inc
jns
sbb
mov
out
lret
add
sbb
sbb
movsl
cmc
pop
cs
insb
pop
mov
cli
out
add
sub
xchg
fldl
movsb
das
cmp
sbb
pop
cmp
int3
int
cld
jp
icebp
fidivl
jne
xchg
and
mov
xchg
lea
adc
and
test
mov
es
jg
xchg
nop
ret
fnstenv
out
cmp
addl
lods
loopne
xchg
lods
popa
pop
push
sti
mov
or
test
inc
mov
lahf
lods
fldcw
jecxz
in
pusha
push
aam
jae
movq
sub
mov
mov
jne
roll
cld
cmp
insb
call
sbb
jns
mov
adc
icebp
out
lcall
js
pop
mov
mov
mov
lcall
cmpsl
add
push
in
xchg
les
or
pop
xchg
sbb
aaa
cmc
ret
lcall
mov
xor
mov
xor
rcrl
pop
pop
jns
lods
xor
sti
adc
sbb
rcrl
jnp
cltd
pop
bnd
push
ret
mov
push
cmp
adc
fildll
je
and
xchg
rcrb
ret
in
add
icebp
test
call
and
dec
add
xor
jge
pusha
xchg
xor
lds
mov
push
cmp
out
sbb
xchg
hlt
push
int3
add
out
in
xchg
sar
movsb
mov
fcoml
xlat
enter
stos
mov
push
sbb
iret
je
bound
outsb
icebp
cli
out
sbb
pop
nop
jg
xchg
aas
push
cli
push
gs
jl
or
hlt
cwtl
sbb
out
cmp
cmp
nop
pop
pop
scas
jnp
into
in
push
arpl
sbb
mov
lds
cmpsb
push
and
test
add
jb
iret
xor
cltd
aas
xor
ljmp
idivb
int
xor
fiadds
loopne
xchg
loopne
int3
cmpsb
mov
xchg
out
es
ja
in
shr
test
mov
data16
sbb
jne
pop
iret
movl
xorb
insl
mov
aad
push
nop
pusha
adc
ret
pop
sarb
mov
jb
and
test
adc
pop
jo
ret
xchg
and
push
scas
mov
aas
mov
gs
xchg
mov
cmp
inc
dec
sub
add
pop
mov
xor
enter
fwait
sti
mov
push
or
xor
xchg
test
out
dec
cli
mov
push
and
mov
shlb
aam
or
inc
out
xlat
jge
push
into
test
mov
inc
lcall
mov
ret
and
push
iret
pushf
repz
sbb
lods
cmp
xchg
xchg
mov
xchg
test
cmp
mov
in
cmp
mov
aad
or
pop
sbb
mov
dec
les
sti
in
xchg
es
mov
pop
jae
or
dec
notl
cmp
cltd
dec
cmp
test
lcall
out
xor
imul
pop
adc
aam
xchg
push
and
mov
mov
ret
adc
sub
mov
fidivl
std
jle
test
add
add
and
repnz
xchg
lea
ljmp
ficomps
repz
shll
mov
loope
inc
xor
repnz
inc
adc
sub
or
jge
in
outsb
addr16
repnz
popf
not
hlt
or
or
mov
mov
fistps
mov
aas
pop
push
jne
stc
shrl
scas
xor
or
pop
fsub
and
in
adc
cmc
cmp
dec
and
hlt
lock
addr16
push
pop
inc
cmp
adc
add
cltd
mov
lret
lcall
and
xor
and
add
push
rcrl
js
xchg
pushf
das
enter
mov
mov
sarl
add
rcrb
test
es
scas
jnp
cmp
lds
popa
push
lods
ret
lods
or
push
ja
lret
fmull
fidivrl
out
sbb
ds
into
stos
xor
dec
mov
faddl
dec
xchg
push
jp
outsl
outsb
je
mov
mov
and
rorl
cmp
lret
mov
sub
fiadds
ret
push
jno
outsb
mov
into
sub
mov
loopne
jno
xor
scas
jns
dec
outsb
push
sahf
aam
loope
push
xor
mov
sub
shrl
pop
icebp
and
mov
rcrl
push
call
imul
jge
mov
mov
lds
lret
mov
loop
mov
mov
mov
and
dec
in
cmpsl
out
mov
fsubr
js
repz
ss
stc
enter
adc
movsb
scas
js
inc
and
inc
jo
push
aad
addr16
jl
pop
aas
cmpsl
repnz
push
sub
add
push
jb
outsb
mov
push
and
es
xchg
push
inc
repz
or
enter
jno
xchg
shlb
out
jge
sub
pop
push
jne
inc
adc
jmp
sti
into
jb
mov
mov
test
or
dec
jbe
pop
dec
adc
scas
pop
fcompl
push
in
inc
add
sub
sub
jmp
adc
out
jno
mov
xchg
mov
sbb
sbb
mov
mov
stos
pop
ljmp
outsb
pop
pop
and
sub
inc
sub
inc
and
pop
fsubs
push
daa
mov
sbb
loop
ja,pn
int
in
sahf
cwtl
jo
enter
in
mov
sahf
jmp
xor
gs
xchg
adc
inc
sub
add
jg
push
xor
pop
or
out
xchg
jbe
fdivrs
and
mov
fs
or
add
adc
cld
out
ds
lcall
test
pop
icebp
js
jno
lcall
pop
jp
out
sub
jmp
xchg
std
sbb
add
pop
jmp
mov
xchg
mov
xchg
xor
sub
mov
push
add
add
xor
pop
fstpl
push
xchg
or
xor
mov
or
scas
pop
pop
test
mov
adc
dec
push
inc
rep
sub
jge
popa
xchg
fildl
sbb
cmp
lods
ret
fldl
pop
mov
and
out
sbb
out
adcl
clc
xchg
das
cmp
incl
rorb
jbe
imul
mov
mov
or
lcall
mov
add
arpl
cmpsb
aam
jb
push
test
push
mov
sub
testb
and
mov
mov
dec
mov
mov
cs
inc
int
pop
mov
push
rcl
ss
out
pop
dec
repnz
sub
pusha
mov
out
jno
or
test
pop
mov
pop
or
cmp
mov
xchg
daa
mov
stos
ss
lea
out
jg
test
mov
outsl
dec
mov
sbb
adcl
mov
scas
push
iret
mov
fldt
xor
je
adc
ret
mov
sub
cmp
int3
scas
add
xor
sub
sbb
cmp
ja
add
push
jnp
push
push
ret
insl
imul
out
jecxz
xchg
fsts
daa
psubsb
pop
push
cmp
stos
xchg
push
xchg
mov
mov
fldenv
fcompl
mov
ljmp
lahf
call
sub
cmp
dec
push
sbbl
lret
ret
mov
ds
ja
fidivs
jge
icebp
sub
mov
movsl
ret
sarl
call
pop
dec
mov
mov
sti
mov
and
cs
js
loopne
sbb
xor
or
das
lcall
xchg
pop
dec
and
mov
btr
mov
mov
insl
outsl
mov
arpl
mov
mov
xchg
mov
jbe
test
inc
pop
stc
je
or
rcl
sub
pushf
add
lea
cmp
jecxz
xchg
jg
cmp
lea
mov
xchg
add
nop
pop
mov
sub
pusha
loope
or
test
nop
and
mov
xor
or
int3
js
push
xor
sarl
cmp
xorb
int
mov
ret
rcr
ret
or
repz
adc
xchg
test
xor
or
pop
lcall
mov
in
dec
mov
rorb
inc
or
xor
and
and
xchg
lahf
mov
jno
ja
test
cwtl
lret
dec
outsb
rclb
gs
mov
and
rorb
out
arpl
in
xor
test
pop
fdivrp
dec
mov
cmpsl
push
ja
add
pusha
cmp
mov
nop
lret
ret
fistps
xor
je
sahf
push
pop
mov
call
jnp
imul
xchg
xlat
or
sarb
push
push
mov
fninit
and
out
out
test
jne
push
dec
loope
lea
xor
mov
loope
stos
push
mov
push
scas
pop
xor
jmp
mov
inc
sub
push
icebp
mov
cmp
pop
test
xor
fucomi
sahf
inc
test
mov
imulb
clc
pop
je
adc
data16
adc
arpl
in
mov
in
pop
mov
jle
out
iret
cmp
ret
mov
fcomip
outsl
mov
inc
das
fmul
dec
pop
jbe
ret
jg
mov
jbe
push
push
and
and
jb
adc
add
std
out
addr16
jno
add
mov
dec
ja
roll
movl
je
jg
dec
mov
mov
xchg
add
dec
call
daa
add
out
mov
cmc
pop
in
sub
data16
and
pop
add
les
int3
shr
jne
les
sub
and
push
push
or
fisubs
icebp
sbb
mov
hlt
cmp
cmp
and
pop
sbb
and
push
fnstcw
mov
mov
push
stos
mov
icebp
ja
cmpsl
popf
and
sarl
sbb
mov
xor
xor
addl
orb
out
jae
xchg
clc
ret
nop
rcrb
xchg
xchg
fs
mov
bound
pop
movl
cmp
loope
cwtl
filds
daa
mov
push
fidivrl
cs
push
dec
and
cmp
sti
ret
sbb
adc
aas
push
mov
or
inc
mov
add
pop
sub
hlt
mov
pop
test
and
push
scas
cltd
iret
mov
xchg
mov
in
jp
lock
add
mov
loope
mov
out
mov
lds
in
inc
movsl
ds
dec
cld
mov
mov
sarb
lahf
mov
and
mov
fimuls
idivl
or
dec
mov
psubb
jno
cltd
xchg
mov
add
sub
int
pop
mov
inc
test
sbbb
inc
push
arpl
cmpb
aaa
sub
mov
mov
inc
out
mov
dec
filds
lods
enter
nop
fbstp
sbb
inc
js
xorl
sbb
push
mov
arpl
sbb
jl
ret
into
retw
add
xchg
mov
and
mov
dec
mov
jge
xchg
jp
xchg
lods
xchg
ds
jle
in
icebp
mov
inc
xchg
les
jnp
jmp
jg
xchg
sbb
mov
fldenv
or
cwtl
push
lcall
xor
mov
test
aad
nop
and
lods
notl
push
test
aas
mov
sub
inc
push
and
and
out
das
xor
insb
scas
pushl
inc
dec
jg
pop
rclb
ds
lods
fisubrl
std
jns
mov
subb
lret
pop
cmpsl
cmpl
jp
mov
outsb
lds
add
repnz
fists
xchg
push
or
xchg
xor
cmp
loopne
jge
lods
mov
xchg
fwait
pop
ret
xchg
popa
fcoml
xlat
lret
push
xor
pop
inc
popa
sub
int3
mov
pop
sti
aaa
jae
lock
lods
stos
mov
pop
jne
notl
fistpll
fisubs
pop
push
test
xchg
leave
repnz
and
dec
jae
or
dec
ja
movsb
adc
sbb
adc
inc
push
xor
mov
adc
dec
cmp
outsl
inc
lock
xor
sub
mull
out
fstl
sarb
out
out
loopne
xchg
decl
and
clc
sbb
cmpsb
xchg
test
cmp
cmc
ds
lods
lea
scas
cmp
mov
xchg
into
rcrb
loope
je
sbb
es
jge
lea
mov
jns
imul
cli
jmp
inc
push
loopne
mov
cltd
sbb
fwait
lods
pop
cli
hlt
shll
dec
xor
mov
out
push
fisubl
pop
test
icebp
sbb
fst
lahf
sbb
inc
ss
icebp
pop
imul
ljmp
ret
fsubrp
call
jo
data16
pusha
pop
sti
fidivrs
adc
add
xchg
mov
dec
std
push
fldcw
sbb
outsl
cli
mov
mov
aad
jns
jns
pop
add
xchg
sub
cmp
popf
xor
rol
push
mov
mov
mov
mov
test
dec
repnz
jb
imul
jle
jl
aas
push
inc
pop
int
push
pop
inc
outsl
imul
pop
gs
cmp
in
addr16
xor
ret
inc
fdivrs
dec
popl
inc
stos
leave
cwtl
popf
sub
inc
sbb
out
pop
or
jns
cld
daa
mov
xchg
in
mov
sub
mov
out
mov
dec
jno
add
repz
push
sub
sbb
jae
test
mov
inc
in
xorl
insb
outsl
fildll
and
jl
mov
or
loop
mov
arpl
jge
push
pusha
push
mov
lret
mov
ffree
sub
out
adc
sub
gs
cmp
addl
sub
sbb
mov
fs
dec
mov
stos
mov
mov
shl
lcall
inc
in
es
cmp
ret
add
fcmovnb
addr16
outsb
push
rcll
inc
pop
es
inc
push
mov
dec
frstor
jno
and
sub
xchg
xchg
clc
and
and
pop
mov
andl
sahf
in
xchg
push
lea
aaa
lret
xor
scas
mov
pop
push
rcrl
xor
inc
mov
and
aam
ret
out
push
out
icebp
orb
lahf
push
inc
xchg
test
cmc
mov
adc
pop
mov
push
mov
cmp
mov
xor
fiadds
jp,pt
xor
movsl
test
dec
outsb
adc
lods
sbb
jle
pop
push
fidivrl
loope
xchg
fucomip
mov
js
xor
adc
popa
les
inc
loopne
cmp
fstpl
push
int
fwait
sbb
cmpsl
fiadds
ret
mov
popa
sub
stos
pop
sti
jle
loop
cmc
stos
ret
aam
jp
inc
bound
jle
mov
popf
push
data16
aas
cmp
add
and
std
cmpsb
mov
mov
pop
mov
cwtl
mov
xor
pushf
ret
int3
jl
js
pop
loope
iret
push
stc
roll
das
dec
inc
mov
and
ret
loope
add
lret
mov
dec
fwait
add
cmp
test
jae
das
dec
push
jp,pn
add
test
or
enter
les
pop
orl
fmull
pop
adc
adc
inc
jl
lds
sbb
push
mov
movsb
and
jo
mov
das
ret
or
mov
xor
imulb
mov
inc
or
mov
lods
fists
lea
inc
add
fdivl
xor
mov
inc
std
pop
mov
xchg
mov
xchg
xchg
arpl
lds
adc
and
fldenv
aad
das
sbb
cmpsl
push
data16
lea
push
orb
add
inc
jg
ret
jp
sbb
inc
jno
inc
lods
in
mov
aam
sbb
jmp
int3
pushf
adc
dec
popa
data16
test
inc
call
outsb
movsl
sub
mov
mov
adc
in
pusha
jge
std
fsts
push
push
test
cwtl
lcall
shrb
and
jb
inc
or
cli
sbb
and
cmp
cmpl
pushf
pop
popf
mov
je
dec
scas
andl
dec
icebp
jle
loop
inc
adc
push
imul
push
shll
outsb
push
mov
jl
pop
mov
mov
aam
xor
dec
adc
pop
jae
xchg
adc
push
scas
mov
rclb
jmp
bound
xchg
mov
out
into
adc
es
xor
jb
sahf
in
push
jp
fcmovne
push
cli
mov
jg
sub
mov
xchg
jb
fistpl
pop
ret
xor
add
cmp
inc
jns
nop
je
mov
push
jecxz
xor
xchg
lahf
jno
pop
dec
sbb
in
mov
test
add
fisubrs
push
subb
xlat
loop
popa
xchg
loop
and
pop
xchg
push
jnp
stos
cmpl
fistpll
movsb
mov
inc
test
mov
mov
fldt
lret
sti
xlat
out
lds
xchg
fs
mov
shlb
mov
js
mov
fistps
out
jnp
shlb
and
dec
inc
stos
popa
pop
adc
insl
and
mov
cli
in
cwtl
in
dec
in
push
pop
xchg
es
das
xchg
dec
mov
mov
loope
stos
xor
insb
bound
dec
xlat
test
test
sub
xor
push
test
icebp
push
jge
popf
sub
iret
adc
xchg
dec
xchg
ds
faddl
aas
imul
jge
push
xchg
push
insb
sub
jbe
xchg
or
xchg
mov
fs
xor
shrb
cmp
shlb
mov
leave
inc
sahf
test
inc
jge
aaa
in
push
ss
dec
push
inc
xchg
fsubrl
sbb
movsb
hlt
adc
cs
sub
xor
mov
sbb
inc
mov
jp
pop
or
test
mov
inc
sbb
ja
dec
ret
daa
test
pop
andl
mov
fidivl
cmp
xor
inc
sub
mov
and
popf
sub
out
fwait
loopne
and
in
test
pushf
mov
clc
movsl
jns
aas
mov
mov
inc
sbb
inc
std
and
pop
cmp
loopne
mov
push
test
and
int
push
pop
cltd
popa
arpl
in
mov
mov
movsb
lea
std
xchg
xchg
jle
out
mov
sub
cmpsb
sub
out
lods
dec
mov
xchg
xchg
sub
sbb
push
stos
ljmp
inc
mov
push
jp
scas
fbstp
mov
mov
inc
lahf
cltd
sub
lods
out
rcrb
test
pop
sbbb
cmp
cmpsl
in
jl
aaa
xchg
xor
aaa
ja
jp
ret
das
incl
mov
out
js
pushf
inc
jo
pop
loop
pop
xchg
mov
test
sbb
pop
shr
sub
mov
xchg
mov
push
and
loop
mov
push
data16
out
mov
dec
jnp
xchg
xor
or
push
cltd
push
xor
call
inc
push
dec
push
push
daa
jmp
test
in
dec
mov
fwait
jae
aad
cld
jo
dec
add
xchg
insl
lcall
dec
dec
xchg
popf
mov
xchg
sbb
mov
mov
mov
jae
test
js
adc
xor
inc
jns
jae
xchg
lahf
fdivr
pop
fnstenv
push
mov
bound
or
adcl
adc
rcr
pop
jno
stc
push
inc
xor
repnz
out
lds
xchg
dec
test
push
mov
jb
sbb
xchg
jae
xor
mov
inc
push
sub
mov
inc
shlb
aas
lmsw
not
xchg
sbb
add
push
shrl
lds
mov
sub
arpl
inc
out
mov
inc
jg
fdivl
push
mov
dec
dec
gs
btc
inc
push
jo
push
cli
dec
pop
imul
mov
cmp
movsl
adc
jle
negl
add
sub
stos
cltd
sbb
xlat
sbb
int3
add
add
repz
leave
xchg
xchg
daa
movsl
or
adc
cltd
and
jge
js
or
jne
cmp
mov
inc
cltd
mov
ss
lods
adc
or
sti
jne
push
repnz
and
push
je
mov
sub
xchg
aam
shrl
pop
dec
cmp
imul
cld
loop
int
jo
out
js
icebp
cwtl
pop
lea
and
pusha
fwait
inc
stos
inc
pop
pop
sub
cmpsl
sti
and
jg
ret
stos
inc
mov
shll
mov
daa
aad
push
out
push
int
xor
ss
scas
jl
and
frstor
cmc
test
cmp
jnp
push
pop
and
cmc
ret
sub
gs
ret
loope
xor
call
jne
shll
and
or
jae
adc
daa
mov
jo
addr16
mov
loopne
cmc
je
add
xchg
addr16
out
and
fsts
xchg
je
in
lret
cmp
ret
add
jge
mov
in
cmp
push
mov
jo
jmp
push
mov
add
inc
arpl
jge
jmp
outsl
dec
inc
imul
test
mov
pop
aas
dec
push
dec
imul
fnstcw
scas
push
sahf
mov
shlb
es
rcrl
dec
enter
test
movsl
out
int3
cltd
dec
sub
rorl
inc
loop
push
cwtl
mov
add
sub
dec
and
pop
mov
popa
test
fidivrl
ds
or
out
mov
sahf
jp
xchg
inc
add
pop
loopne
mov
mov
mov
mov
cmp
in
imul
aam
xlat
push
pop
adc
push
cmp
jle
adc
mov
ja
or
jmp
xlat
dec
and
mov
loopne
dec
mov
idivb
lds
push
xor
sub
cmp
mov
icebp
xlat
pop
lds
push
shll
adc
repnz
mov
push
test
lock
push
out
out
jge
push
xor
movsb
inc
jns
xlat
pusha
add
pop
mov
jb
shll
pop
and
jns
sti
adc
movsl
pop
in
fnstenv
jne
hlt
push
pop
ja
xor
stc
dec
sub
pop
adc
sub
jecxz
cmp
pop
mov
movsb
cwtl
mov
les
xchg
mov
in
cmpsb
sub
imul
lods
xor
ds
mov
inc
jg
push
call
gs
cs
jnp
pop
cld
cmc
mov
cmp
jmp
mov
pop
in
or
sbb
cmpl
jmp
mov
xchg
out
xchg
dec
inc
inc
fdivs
je
mov
sub
in
dec
dec
or
lcall
add
pop
push
mov
pop
mov
inc
mov
outsb
in
adc
scas
xor
push
cwtl
push
adc
rolb
push
leave
pop
sub
sahf
in
lock
lahf
and
pop
mov
aaa
inc
test
std
hlt
es
ret
push
xor
int3
mov
sub
cs
in
das
iret
fucomp
into
pop
pop
sub
jb
aad
mov
lods
data16
add
sub
imul
add
pop
addr16
push
and
lahf
subb
clc
xchg
pop
mov
dec
adc
insb
push
outsb
test
mov
and
frstor
aam
daa
pop
clc
leave
cli
mov
outsb
sti
sub
dec
add
inc
fmull
cmp
xchg
xor
nop
lret
sidtl
test
call
mov
mov
loopne
sahf
and
in
call
bnd
add
addr16
lods
adc
in
xchg
sub
pop
xor
add
aas
test
hlt
jns
mov
inc
add
es
push
xchg
mov
leave
mov
fcmovnbe
cmp
sbb
mov
xchg
adc
pop
lret
inc
ret
inc
iret
lret
and
pusha
push
loopne
sbb
ret
lods
out
inc
ret
push
sbb
xchg
push
and
jp
rorb
inc
lea
inc
lahf
mov
inc
sub
sbb
push
xchg
push
cmpsb
mov
xchg
mov
mov
fiadds
ss
mov
in
push
call
ret
rolb
and
leave
and
push
fsubl
sbb
lds
mov
jne
mov
cmp
orl
insl
mov
leave
cld
pop
dec
movsb
not
mov
call
xchg
and
adc
push
cli
jge
shrl
inc
or
test
mov
mov
pop
sbb
sub
dec
out
pushf
lods
lret
cltd
std
fsubp
mov
aaa
push
fcomps
jg
cvtpi2ps
push
push
es
jnp
fwait
add
pop
bound
cmp
call
data16
and
into
jle
adc
pop
imul
shr
xor
xlat
xchg
pop
jae
or
sub
bound
mov
push
mov
mov
dec
cmp
jno
sbb
ret
mov
mov
sub
adc
jb
shl
inc
les
add
cmp
cmpsb
addr16
fidivrl
dec
arpl
bound
mov
pop
shll
dec
or
mov
adc
icebp
int3
add
push
inc
sarb
lods
push
pop
xor
cmpl
ljmp
mov
fldl
push
repnz
or
cs
xchg
cmp
jbe
cld
std
push
out
xor
insl
push
inc
and
ljmp
sub
mov
pop
xor
and
movsl
int3
cltd
mov
add
sbb
daa
insl
mov
push
stc
stos
cmp
stos
lds
das
andl
lret
and
add
arpl
push
push
pushf
in
shrb
test
pop
mov
add
dec
data16
outsl
cmp
cmpsb
in
fcmovu
push
mov
cld
mov
add
lods
add
fildl
pop
dec
or
imulb
lahf
ss
sbb
scas
add
jge
fmuls
pusha
loop
daa
jno
xchg
and
fstpt
xchg
lea
mov
dec
xchg
into
add
mov
dec
mov
int3
lahf
jp
rclb
popf
bound
mov
stos
fmul
mov
ljmp
lock
mov
mov
fsubrp
daa
popf
push
mov
xchg
lods
lret
adc
scas
push
data16
jl
add
xor
gs
mov
push
xchg
cmc
subb
jns
fildl
mov
mov
ds
push
iret
xchg
cmp
ficomps
test
popa
fcoms
std
jb
or
stos
clc
mov
sub
jae
push
cmp
loope,pt
icebp
mov
push
fcmovu
jae
lret
jne
mov
lahf
fwait
imul
frstor
inc
jbe
loop
js
mov
mov
out
dec
js
scas
lods
and
push
in
enter
sahf
sbb
push
mov
incb
in
mov
gs
bound
sahf
dec
jge
fbstp
push
rorl
adc
popf
and
mov
jne
iret
dec
xchg
roll
mov
pushf
test
pslld
cmp
adc
and
add
adc
mov
push
aas
das
in
and
test
mov
or
dec
inc
imul
fimuls
inc
xor
and
pop
mov
dec
jecxz
shrb
int3
into
hlt
not
jnp
add
dec
lea
out
les
test
clc
sbb
sbb
sub
mov
fs
cwtl
xlat
filds
jl
in
or
js
mov
ficoml
cwtl
mov
cld
and
mov
sbb
in
test
out
test
fs
pop
scas
dec
in
and
cmp
mov
imul
dec
insb
gs
call
mov
lea
and
call
or
cmpsb
mov
add
mov
stos
jne
or
mov
mov
jp
push
lahf
push
adc
sti
pop
mov
sub
shll
popf
jmp
scas
push
stos
xorl
mov
rcrl
xchg
sub
and
loop
aam
lods
roll
adc
pop
inc
rcr
popf
lock
movsl
jl
pop
shll
push
in
mov
fadds
scas
add
pop
xchg
xchg
aam
pop
cmp
sbb
jbe
sbb
popa
mov
jge
xchg
lahf
jle
movsb
out
popa
rcll
jp
pusha
in
out
pusha
push
stos
es
ja
cmpb
xor
cltd
push
jp
jno
mov
lahf
inc
fidivs
imul
add
iret
push
push
cmpl
pop
rorb
cmp
dec
fucomi
jns
or
rolb
mov
jne
xchg
movsb
cs
add
pop
sub
stos
pushf
je
rorb
loope
out
mov
sub
ret
xor
mov
mov
xlat
fcoml
mov
jmp
in
sbb
jo
fisttpll
leave
sub
sub
push
sti
and
mov
xchg
fsubrs
lea
les
dec
pop
mov
popf
lods
out
xor
xor
outsl
call
cmp
cmpl
setno
mov
sbb
ss
xor
mov
cli
call
insb
or
xchg
jl
sub
pop
popf
dec
mov
out
lods
pop
fidivs
pop
scas
pop
pop
sub
pop
jp
dec
outsl
xorl
lea
aad
stc
sbb
jnp
xchg
xorl
push
std
subl
xchg
rcll
mov
loope
adc
imul
jp
ret
call
jle
scas
and
lods
push
nop
fstp
xlat
xchg
fcmovnu
clc
and
add
cltd
gs
inc
rol
rcrl
hlt
nop
xlat
adc
rolb
and
mov
xchg
inc
popf
outsb
sub
shl
xlat
movsl
xchg
lret
mov
clc
and
mov
mov
adc
mov
gs
outsb
pop
push
aaa
and
mov
xor
imull
pop
sbb
xor
pop
out
int
add
adcb
mov
dec
lahf
sbb
rcr
pop
fimuls
fdivl
in
pmullw
cmp
push
jl
push
jmp
and
popf
sub
loop
pop
xor
fiadds
jmp
gs
popf
push
cmp
xchg
das
xor
cmc
stos
push
jbe
xlat
movsl
aad
subl
je
pop
test
arpl
push
push
imul
and
icebp
rcrb
in
movsb
jge
pop
xchg
cmc
lods
popa
fwait
enter
insl
mov
or
mov
push
in
cwtl
xlat
jle
xor
dec
lea
sub
or
push
cmp
inc
ljmp
or
jmp
inc
jmp
std
inc
and
int3
mov
jne
mov
ss
int3
in
paddusw
mov
push
ficompl
adc
fiaddl
adc
lods
fwait
pop
mov
sbb
dec
pop
dec
jnp
xor
cmpsb
arpl
je
ja
int
add
cmp
adc
rcrl
enter
mov
push
jns
negb
mov
shll
pop
jno
jnp
stos
mov
mov
mov
into
add
mov
pop
in
hlt
or
dec
iret
sbbb
ficompl
dec
mov
andnps
clc
sbb
mov
lods
add
dec
dec
mov
sbb
adc
mov
or
push
je
jge
fildll
xlat
jns
xchg
jbe
sahf
mov
cmc
dec
imul
jle
sub
or
adc
or
mov
cmpsl
stos
popf
into
and
mov
push
inc
pop
ret
std
and
aas
and
rcl
mov
pop
inc
or
cltd
pusha
cwtl
and
cltd
loop
xor
sub
out
push
jp
xor
mov
sub
adc
mov
pop
lds
fwait
jo
inc
stos
subb
test
xchg
cltd
push
mov
and
fildll
mov
mov
jo
xchg
mov
or
cmpsb
add
cld
pop
sub
popf
minps
test
cmpsb
shlb
lock
mov
jae
dec
fldt
dec
mov
test
jbe
cmp
dec
jb
fisubs
insb
mov
int
xchg
cmpsl
lods
xlat
out
scas
aaa
jb
jo,pt
fwait
dec
push
daa
ret
inc
cmp
jmp
fidivrl
lods
arpl
mov
repz
mov
adcl
mov
push
add
js
loop
incl
pop
into
or
rolb
pop
dec
xchg
loopne
lea
int
rorl
inc
sbb
stos
xchg
pop
dec
push
das
push
aaa
shr
sti
inc
jns
scas
shll
scas
insl
popa
outsl
fnstsw
int
mov
xor
mov
jmp
xor
cmp
push
and
lods
dec
xor
jle
jl
mov
daa
and
xchg
negl
test
ret
or
jp
jmp
mov
dec
mov
movsl
js
xor
sti
clc
mov
daa
in
int3
loope
sub
aaa
daa
push
push
add
mov
jl
xor
das
push
push
imul
pop
pushl
mov
adc
and
clc
sub
fisubrl
adc
push
pusha
cmp
std
aad
jnp
sbb
jo
outsl
imul
scas
imul
cmp
pop
sahf
pushf
or
fyl2x
addr16
test
xchg
test
push
adc
mov
out
jecxz
push
xchg
inc
pusha
std
sahf
push
dec
mov
and
aas
push
leave
mov
leave
adc
sbbl
pop
les
std
inc
pop
mov
fldz
lock
adc
inc
aad
sub
idivl
bound
adc
rolb
pop
xchg
mov
js
and
adc
xorl
pushf
sbb
adc
hlt
and
jo
ficomps
adc
sub
stos
shrb
lods
push
dec
push
sub
jge
jg
xor
ret
mov
das
pop
popa
sub
push
add
mov
xchg
lret
dec
orb
adc
test
mov
sub
std
stos
mov
mov
and
popf
icebp
in
pop
imull
cmp
repnz
add
hlt
sbb
mov
add
cltd
popa
out
cmp
out
pop
sub
nop
mov
testb
jge
pop
cld
fildl
xchg
jo
push
xor
fisubs
mov
push
adc
rcrb
movsb
add
xor
cltd
lock
mov
and
iret
xor
testl
add
dec
xchg
cmpsb
je
xchg
sbbl
sub
pop
ljmp
sbb
shlb
pop
lock
stos
call
inc
cmpsl
mov
loope
dec
pop
in
or
cmp
mov
cmp
mov
stos
imul
sub
insb
aad
cmp
xor
push
int
rcrb
out
sbb
aas
idivl
test
ficomps
pop
fcoml
or
fs
mov
incl
outsl
cmp
jle
inc
ljmp
sbb
push
adc
sub
scas
or
in
adc
push
sbb
push
into
je
push
loopne
sbb
inc
paddusw
ds
in
push
fmull
ljmp
dec
xor
fcoms
pop
mov
inc
push
movsl
mov
std
push
jne
mov
adcb
test
outsl
int3
mov
movl
inc
inc
iret
sbb
test
sub
adc
add
adc
lods
enter
adc
cmp
call
dec
hlt
shlb
dec
pop
scas
decb
jmp
mov
or
cld
mov
or
outsb
jecxz
out
xchg
mov
mov
mov
stos
cmpsl
movsl
popf
mov
sarl
push
ljmp
aam
aas
pop
sub
scas
test
mov
cltd
jo
pop
fldl
lock
jbe
js
lods
ss
push
outsl
xchg
mov
or
ss
ja
add
aas
or
jns
orl
insb
addr16
movsl
pop
out
or
xchg
fwait
pop
xchg
cmc
out
rclb
adc
loop
mulb
adc
cli
enter
js
dec
add
sub
rcl
add
ljmp
shll
mov
cmpsl
xor
sti
popa
inc
mov
xchg
out
popf
adc
mov
cmpb
enter
sub
mov
xchg
add
mov
into
cmc
jecxz
and
or
lock
pop
adc
outsb
nop
lret
cs
into
inc
cli
addr16
sub
mov
dec
push
adc
mov
cmp
sub
jno
adc
enter
dec
mov
rcr
jl
jecxz
out
imul
jno
aaa
mov
insb
add
shll
or
sarb
aad
jecxz
cli
cltd
push
jo
sub
movsb
cmp
adc
aaa
xchg
stc
popf
push
test
push
nop
insb
dec
inc
clc
jmp
push
out
shlb
mov
in
mov
orb
lea
test
jnp
test
sti
jge
push
pop
mov
cmp
sbb
xchg
add
push
nop
adc
repnz
sahf
sbb
js
push
push
or
xchg
mov
cmp
xchg
je
fnsave
mov
jns
or
insl
in
jbe
xor
adc
xor
jp
push
xchg
stos
popf
lock
mov
inc
inc
rcrl
lea
adc
sub
in
test
hlt
xlat
mov
pop
hlt
mov
and
mov
ja
das
sar
lods
adc
mov
inc
mov
jmp
adc
jne
adcb
sub
bound
adc
sub
sbb
cmp
push
cli
and
cs
pusha
gs
jge
das
jmp
out
sub
lret
cmp
outsb
mov
sti
jb
sbb
inc
mov
and
and
mov
xlat
cmpsl
and
push
cwtl
jp
xor
mov
add
fs
adc
inc
sahf
adc
xchg
int3
outsb
notl
ss
call
jg
mov
sbb
shlb
mov
jne
push
adc
dec
xchg
xchg
in
push
pop
jns
movsl
push
out
mulb
sub
aaa
xchg
mov
dec
mov
fwait
outsb
xchg
mov
or
aas
push
xor
jg
mov
cmp
test
call
iret
jle
mov
inc
adcl
xchg
jbe
test
xchg
xor
into
dec
fcomi
xor
mov
dec
movsl
leave
push
cs
mov
jecxz
in
das
or
push
lods
outsb
push
xor
jg
das
xchg
mov
adc
loope
mov
addl
insl
mov
xchg
cmp
inc
mov
dec
mov
mov
pop
lock
pop
and
test
test
push
fmull
loop
lock
push
pop
outsb
mul
push
cmp
mov
push
sub
lcall
out
xor
xlat
icebp
leave
clc
jmp
mov
sub
push
addr16
rol
xor
nop
in
push
out
lret
inc
mov
in
mov
std
out
push
jp
pushf
sbb
add
cmp
stc
mov
sub
movlhps
adc
push
or
xor
mov
shll
push
and
jge
in
sbb
sbb
pop
mov
inc
lods
push
xchg
data16
in
xchg
mov
jl
ljmp
jbe
sub
push
rcll
or
lret
sbb
or
frstor
daa
cmp
pop
xchg
stc
fs
or
sti
xlat
movsb
sbb
shl
push
and
push
sub
sbb
mov
and
push
loop
roll
mov
dec
ja
fisttps
inc
test
stos
clc
inc
or
mov
rol
enter
movsl
cli
rcl
inc
arpl
xchg
enter
and
inc
stc
adc
mov
jle
jle
inc
adc
push
das
xor
popf
xor
into
dec
icebp
lret
loopne
jmp
mov
divb
jp
mov
lret
push
inc
decb
add
test
sub
call
clc
dec
mov
jge
xor
or
push
popa
dec
xchg
movsb
mov
jle
mov
enter
hlt
jecxz
dec
jnp
sahf
ror
test
lcall
test
jg
adc
hlt
inc
clc
pop
lret
mov
inc
mov
mov
jnp
push
nop
addr16
push
loope
or
ret
push
movb
pop
mov
shr
scas
add
push
or
push
or
xlat
and
push
ret
cmc
jnp
or
ja
cmp
jbe
pop
ret
push
adc
push
mov
or
aas
dec
push
data16
out
lods
je
inc
sbb
adc
jecxz
xor
fnsave
fstp
cmp
pop
mov
movsl
xchg
lock
xlat
js
mov
jns
fildll
cmpsl
adc
mov
int3
sbb
data16
es
push
repnz
jno
pop
push
lcall
push
jne
inc
lret
xor
cli
mov
lret
pop
ret
xor
jmp
inc
mov
xor
mov
jp
add
shlb
dec
or
jbe
xchg
mov
push
xor
push
add
add
xchg
bound
outsl
dec
xor
call
xor
fmull
push
iret
fnsave
sbb
lds
adc
test
mov
lahf
pop
pop
lds
stos
sbb
cmc
pop
cmc
mov
insb
nop
sub
add
je
iret
add
iret
shll
ss
into
bound
out
inc
fstp
or
jne
insb
js
cltd
lahf
jle
gs
aad
push
jmp
inc
cmp
pop
and
add
imul
push
mov
icebp
into
add
sti
adc
pop
scas
cmp
in
xor
cwtl
addl
enter
lret
and
add
test
sbb
cltd
ja
xlat
dec
adc
cmpsb
pop
pusha
fdiv
xor
insl
xchg
lahf
sub
icebp
loope
cmc
push
lock
cs
jmp
loope
xor
xchg
pop
mov
pop
mov
repz
xor
cmp
jge
loopne
mov
pop
out
aaa
aam
sbb
lock
popa
add
cmp
out
pop
stos
adc
add
in
push
push
aaa
sahf
test
jp
leave
add
pop
out
sub
or
xchg
push
mov
add
sahf
push
mov
aas
mov
aas
push
inc
addr16
cmp
push
lcall
xchg
pushf
rep
jae
sbb
push
jae
lods
adc
aam
and
dec
lock
and
pop
sbb
and
int3
mull
movsb
add
out
cmp
adc
and
xlat
aam
rolb
fnstsw
outsl
mov
mov
mov
cld
and
ficompl
jmp
xor
outsl
jnp
mov
push
sbb
fiadds
cmpb
bound
shlb
movsb
scas
fucomp
jae
mov
jle
test
stc
lahf
and
movsl
and
jae
popf
xor
ficompl
dec
iret
ret
xor
lahf
ljmp
mov
adc
ljmp
xor
or
sti
push
mov
mov
and
mov
sti
or
imul
inc
pusha
pop
or
and
roll
out
stos
mov
int3
fisubrl
dec
fidivrs
sar
stc
and
pop
push
pop
lea
mov
fwait
inc
lods
jns
or
aas
lea
out
divl
cmc
or
sbb
and
in
iret
inc
or
scas
pop
mov
mov
ljmp
shl
sbb
dec
or
dec
out
sub
int3
pop
jnp
testl
out
movsl
jne
orl
dec
fimull
adc
pop
shl
aam
insl
ret
push
test
shlb
jno
and
dec
mov
out
sbb
pop
jp
dec
xor
scas
jge
and
cld
cmp
push
imul
jo
push
icebp
loopne
mov
out
mov
add
cmpsl
gs
test
into
pusha
addb
leave
and
sahf
shll
icebp
lea
cmp
mov
out
enter
scas
jle
test
out
mov
jnp
inc
jno
xor
icebp
ds
and
mov
out
or
repz
add
adcb
dec
pushf
inc
aad
or
mov
and
xchg
in
scas
subb
faddp
ss
pop
push
popf
loope
mov
and
mov
jo
fs
out
inc
sbb
xor
or
or
sti
pop
aas
xor
mov
cld
int3
cmpsb
outsb
mov
mov
in
mov
test
stos
sti
ljmp
sbb
dec
insl
xchg
add
adcl
scas
mov
int3
xchg
movsb
mov
inc
dec
ja
mov
imul
mov
outsb
ret
insl
sbb
mov
or
jne
in
mov
insb
mov
bound
mov
jb
or
out
cmp
iret
cs
mov
dec
enter
mov
lret
rol
xor
hlt
lcall
fnstenv
sub
mov
outsl
or
iret
xchg
mov
fwait
mov
sahf
ljmp
je
adc
xor
std
test
sbb
sbb
pop
push
or
adc
lret
xchg
pop
pop
andl
cmpsl
mov
in
icebp
rcrl
aaa
mov
jge
jge
pop
push
push
ret
scas
xchg
cmp
push
push
fwait
lret
add
arpl
jno
mov
div
or
xchg
and
scas
popa
lcall
or
roll
xchg
mov
jg
xor
mov
mov
mov
out
pop
xor
andl
sub
cld
jp
mov
stos
int3
aas
adc
addb
adc
add
aam
pop
lock
mov
mov
fistpll
cmc
leave
pop
jae
jecxz
add
jae
cs
add
in
add
jne
out
dec
jo
sub
mov
adc
inc
cli
out
push
push
or
call
sbb
mov
or
push
cmp
push
repnz
pop
repz
mov
repnz
sub
add
push
movsl
mov
test
and
and
push
cmpsb
leave
sbb
je
sahf
lods
mov
xchg
mov
jo
jns
leave
xor
in
push
pop
imul
jp
inc
pop
cmp
pop
and
sbb
ljmp
xor
pusha
ret
fnstcw
cmpsl
mov
icebp
dec
dec
xchg
lret
sub
cmp
add
loope
pop
dec
rcr
mov
test
icebp
push
notl
sbb
test
mov
mov
jmp
das
xchg
push
lea
inc
push
push
lahf
push
out
jmp
jmp
pop
ljmp
lret
int
adc
lret
inc
cld
lods
outsb
sub
popf
das
sti
test
mov
mov
ja
dec
push
inc
add
inc
pop
mov
jbe
movsb
add
loopne
push
add
ja
and
shr
fbstp
fisubrl
incl
sbb
clc
cmp
in
mov
xor
in
xor
xchg
jle
dec
pop
aad
loope
dec
dec
leave
ss
negl
or
and
rolb
or
int
test
pop
jae
push
xchg
xchg
nop
xor
xchg
cmp
jp,pt
and
xorb
lods
loopne
iret
outsb
mov
ja
movsb
stos
mov
jg
clc
jno
xchg
mov
inc
dec
mov
aad
out
repnz
sub
data16
mov
test
sub
mov
xor
sbb
int
sti
jae
test
popf
push
mov
scas
mov
add
popa
in
add
inc
repnz
and
cmc
xchg
cli
stos
je
mov
pop
lods
movsl
pop
enter
bound
hlt
and
es
insb
flds
and
insb
ret
mov
pushf
cmp
push
inc
leave
lret
jns
out
daa
movsb
out
add
sahf
out
pop
pushf
mov
js
add
xor
and
lret
arpl
fidivrl
and
jno
xor
out
fstpt
cmp
scas
mov
jl
fdivs
popf
xor
pop
jns
and
ret
mov
mov
sahf
xchg
roll
jbe
pop
imul
insl
hlt
in
adc
dec
sub
mov
adc
scas
mov
aad
mov
xor
cli
mov
js
push
mov
cmp
in
mov
dec
xchg
lods
test
mov
imul
cmp
movsb
add
cmp
xchg
jo
or
test
scas
sbb
leave
jmp
mov
dec
cli
dec
mov
xor
insl
dec
ja
sbb
das
jmp
xor
mov
or
push
imul
in
push
icebp
clc
fdivs
movl
cmp
in
lret
gs
sti
loop
jg
add
testb
inc
adc
and
pusha
pop
mov
xchg
pop
gs
and
aaa
loopne
mov
mov
cld
fcmovnu
test
pushf
test
or
pop
fdivrp
in
sahf
dec
hlt
adc
in
jg
mov
and
or
repnz
sub
xchg
mov
adcb
mov
test
mov
test
stos
pop
in
xchg
outsb
cmpsb
ret
cmpsb
loopne
jl
adc
repz
repnz
cmp
scas
shll
ds
insl
and
addr16
mov
popa
and
sbb
out
repnz
mov
adc
lock
inc
add
cmpsb
add
das
jae
pop
mov
les
mov
sbb
dec
push
out
jbe
addr16
cmpsb
scas
xchg
jno
sarb
test
hlt
fdiv
adc
push
orb
jp
out
repz
dec
cld
mov
push
push
and
in
mov
cmp
addl
movsb
push
jb
js
sub
lahf
pop
repz
fists
pop
cs
andb
nop
cmp
mov
cs
adc
lcall
fadd
cmp
addr16
cmc
js
cltd
sbb
lret
pop
xor
outsl
mov
cmp
jmp
pushf
lds
push
or
test
mov
test
lcall
or
add
stos
test
inc
mov
ret
pop
sub
fnstenv
je
ret
call
jmp
ds
mov
int3
xchg
mov
push
pop
mov
loop
push
andb
aad
add
inc
cmp
cltd
pop
or
rolb
jbe
pop
test
gs
repnz
jns
je
xor
fmulp
or
outsb
push
std
dec
imul
outsb
push
or
es
or
repnz
ljmp
cmp
pushf
je
das
dec
xor
sbb
int3
data16
and
jo
mov
loopne
xchg
xor
mov
cmpl
sub
push
xchg
insb
fs
xchg
insl
xchg
mov
xchg
dec
and
xchg
jnp
repz
test
data16
roll
in
mov
sbb
sbb
out
es
and
push
mov
popf
adc
sbb
push
and
inc
xchg
fwait
mov
aam
notl
push
jnp
xor
cmpsb
sub
loopne
test
jbe
mov
jb
out
and
mov
jae
xchg
inc
mov
or
ja
sbb
mov
sahf
add
jg
daa
outsb
mov
ret
mov
fdivrl
or
xchg
push
adc
gs
dec
mov
jb
inc
mov
xor
pop
outsl
jb
mov
or
cld
cmp
jne
testl
or
inc
and
lods
sub
pop
dec
jae
fildl
js
add
or
push
or
shlb
add
sub
sahf
pop
inc
jnp
outsl
push
gs
and
sub
rclb
and
data16
pop
cli
inc
fwait
or
inc
pop
out
aas
cmp
movsb
xor
mov
out
ds
fsubl
fnsave
je
jns
cmp
pop
sub
mov
mov
mov
mov
cs
dec
imul
lods
mov
stos
sar
mov
add
lds
inc
les
dec
pop
clc
xor
imul
mov
adc
adc
mov
xchg
dec
mov
iret
sbb
sbb
cmpsl
stos
repnz
inc
insb
fists
sub
add
cmp
scas
add
xchg
daa
gs
fildl
pop
call
shll
test
shrl
popa
lret
lret
sub
sahf
adcb
push
and
clc
jp
inc
pop
clc
pop
outsb
cli
push
shlb
femms
pop
push
pop
mov
lea
lcall
lods
inc
mov
sbb
in
dec
jae
sub
adc
sbb
movsl
add
data16
jp
mov
pop
enter
inc
fucomi
ja
xchg
jno
lods
mov
das
xchg
inc
ljmp
dec
mov
mov
stos
xchg
sbb
in
or
mov
psubd
adc
xchg
into
out
push
add
lea
repz
scas
mov
ss
popf
enter
div
iret
or
daa
cli
iret
cmc
int
cmp
rcrb
cmpsb
inc
in
les
aas
xlat
mov
pop
jmp
sub
mov
call
out
into
mov
xchg
shlb
lock
mov
lahf
roll
pop
clc
jne
lods
mov
adc
arpl
inc
int
jbe
jno
xchg
icebp
jl
or
inc
cwtl
jg
lahf
cmp
or
fistl
jge
push
mov
sbb
ret
clc
pop
jmp
push
lret
pop
jl
push
leave
push
push
mov
hlt
ds
sbb
xchg
repz
mov
push
int3
rcl
inc
mov
adc
sub
adc
and
lcall
mov
dec
aad
lods
outsb
sub
nop
icebp
test
sbb
xchg
ja
cmp
dec
or
inc
insb
lahf
or
fwait
mov
xlat
call
mov
pop
push
cmc
push
push
xchg
or
bound
mov
jno
mov
rcll
ja
mov
lret
sub
out
xchg
stc
aad
pop
mov
lock
push
mov
pop
imul
push
es
dec
daa
mov
movsl
sbb
cli
inc
dec
ljmpw
xor
test
fstpt
mov
mov
sbb
shlb
test
mov
in
stos
testl
shll
pop
in
cmp
cmp
mov
jge
fisubs
jb
mov
enter
and
xchg
sub
ficomps
stos
cmpsl
xchg
inc
and
push
or
xchg
push
add
dec
push
xor
lcall
lock
mov
rcr
mov
sub
sbb
push
rcl
daa
sbb
ja
outsb
adc
movsl
add
call
push
jae
cli
xchg
lret
test
nop
jmp
pop
xchg
fst
lods
jecxz
cmc
xlat
out
or
outsl
dec
jge
mov
fildll
sti
fisttpll
xchg
push
jl
cltd
loop
xchg
xor
shrd
daa
out
imul
pop
pop
out
and
loop
sub
repz
xchg
std
sbb
call
inc
jb
je
xchg
inc
aam
ljmp
insl
and
pop
in
mov
dec
popl
out
repz
outsl
mov
fwait
push
movl
pushf
pop
xor
or
hlt
sbb
insl
pop
mov
mov
pushf
pop
aad
or
fwait
and
jnp
sti
pop
cmpsl
add
dec
insl
jle
mov
push
ror
cmp
bnd
xorl
cmp
adc
push
sub
and
xchg
adc
outsb
mov
dec
cmpsl
movsb
iret
jge
aas
dec
movsl
mov
scas
daa
ljmp
cwtl
inc
push
cmp
cmpsl
lahf
iret
lock
rol
adc
arpl
mov
inc
jecxz
xchg
pop
or
or
mov
fucomp
lret
mov
dec
pop
cmpsb
stos
adc
lods
test
lahf
imul
mov
pop
xchg
xor
adc
movsl
lds
ret
xor
ret
repnz
test
imul
dec
sub
cmp
adc
push
rcrb
sub
adc
pushl
pop
fstp
mov
imul
mov
lds
sahf
xor
insb
jp
sbb
cwtl
lret
fsts
xchg
adc
std
lods
or
adc
jnp
gs
adc
pop
cmp
inc
dec
cmp
daa
fidivs
add
sub
adc
xor
mov
lods
inc
add
in
lea
loop
inc
imul
jb
xchg
push
or
fdivs
sarl
rcrl
dec
out
cmpsb
add
xchg
loopne
test
inc
sub
or
hlt
out
int3
jmp
mov
out
inc
add
fs
nop
push
mov
xor
in
js
xchg
pop
hlt
imulb
ds
dec
sub
idivl
xor
cmpsb
xlat
stc
sbb
sbb
data16
outsl
xorb
loope
cld
inc
ret
loop
movsb
xor
sub
mov
sahf
lods
jecxz
cmp
pop
lock
sbb
mov
dec
repz
or
fstl
out
stc
stos
add
outsb
fmul
stos
lea
xchg
data16
xchg
jl
cmp
mov
call
fistpll
cmp
icebp
add
and
mov
adcl
ds
push
fadd
fists
push
test
in
push
test
aas
pop
in
imul
mov
pop
bnd
lods
xchg
ja
es
test
js
ret
sub
nop
loop
lods
in
fcoms
test
ljmp
movsl
ds
or
popa
push
cmp
imul
test
add
adc
ja
daa
bound
and
push
scas
popa
push
in
jns
sbb
lcall
jecxz
jl
mov
int3
dec
sub
movsl
ret
std
lods
data16
push
jbe
or
dec
pop
sub
loope
fs
int3
mov
outsl
daa
pop
push
mov
lock
stos
and
inc
pusha
cltd
adc
cmpsb
push
ja
mov
pop
push
dec
cwtl
scas
lock
cwtl
pushf
lret
push
bswap
mov
outsb
dec
negl
mov
hlt
pop
fbld
mov
fidivrs
mulb
push
add
xchg
subb
mov
pop
push
cs
inc
in
push
dec
fnsave
jno
shrl
loop
out
mul
das
mov
sub
xchg
xor
sub
incl
push
cs
loop
rolb
insb
jl
and
adc
mov
and
clc
leave
ds
out
jbe
push
roll
faddl
idivb
and
rolb
fidivs
in
adc
and
mov
jbe
fstpt
notb
mov
inc
pop
clc
fcoms
fwait
les
lock
and
imul
inc
daa
rol
jg
test
sbb
dec
xchg
aad
ror
and
jmp
push
xor
sbb
in
jb
dec
lock
sub
adc
test
scas
sub
mov
or
mov
mov
jecxz
aam
xor
popa
imul
xchg
xchg
es
bound
shrb
mov
sub
stc
scas
data16
sbb
dec
es
add
dec
aaa
mov
scas
std
adc
pop
imul
ror
jle
enter
sub
cmc
inc
repz
dec
push
stc
sub
inc
rcrb
pop
push
hlt
push
sbb
js
mov
rorl
mov
jecxz
test
rclb
xor
add
xor
inc
adc
xchg
push
push
and
stos
repnz
lahf
xor
push
movsb
push
aad
pop
outsl
xchg
mov
movsb
out
mov
shrb
mov
and
pop
inc
ja
cmp
mov
mov
popf
add
mov
inc
sbb
int3
or
lods
sub
cmpsb
ret
and
or
dec
imul
push
arpl
or
pushf
ret
mov
mov
push
scas
loope
or
push
mov
jnp
push
cmc
inc
inc
pop
je
lods
js
out
out
mov
loopne
mov
nop
and
xor
mov
sbb
pop
or
sahf
cwtl
bsr
pop
pop
sahf
lea
cli
cmp
add
dec
ss
xor
jb
add
pop
jne
xor
sub
sar
lret
lret
loope
xor
push
cmp
and
sub
or
in
iret
mov
inc
pop
push
cmp
lret
das
ret
nop
xor
pushf
or
push
repz
inc
stc
inc
add
mov
cmp
mov
or
jecxz
pop
mov
add
mov
test
pop
inc
aam
sbb
sub
out
sbb
sti
ds
mov
ret
xchg
and
push
sub
enter
icebp
data16
shr
ljmp
es
clc
mov
jle
jno
push
add
sahf
into
icebp
push
imul
icebp
mov
jno
push
add
mov
imull
mov
and
dec
mov
scas
enter
xor
insl
in
fcmove
pop
imul
push
sbb
sbb
lock
in
cmp
int
fdivrs
mov
mov
inc
inc
js
adc
lahf
rorl
loopne
clc
out
push
push
rolb
mov
push
fdivs
ret
pop
inc
push
lods
push
push
xor
or
iret
arpl
add
pop
lcall
nop
lea
xchg
mov
xor
push
push
pop
out
lret
adc
in
lods
stos
test
or
jg
xor
dec
decl
cmpsb
notb
ret
add
setb
call
xor
and
dec
add
or
mov
imul
bound
adc
mov
push
cmp
aas
xchg
sub
cmpl
ret
dec
aam
mov
arpl
xor
and
test
lods
mov
ror
arpl
out
enter
gs
pop
sbb
popa
nop
arpl
aad
subl
add
adcb
mov
push
loopne
push
cmp
push
mov
out
and
cmc
and
xchg
stos
lock
lock
loop
jo
scas
add
cltd
mov
jno
add
dec
adc
sbb
out
push
add
rol
loop
fstps
sub
cmp
inc
jo
mov
sbb
fnclex
mov
jecxz
mov
pop
std
xchg
filds
fmuls
outsl
jnp
rclb
mov
pop
lock
ja
xor
mov
js
daa
arpl
js
mov
mov
dec
lock
sbb
cmpsb
and
sbb
ror
movsl
adc
lcall
cmp
sbb
push
sub
loop
mov
sub
testb
lcall
sbb
sbb
fistps
pop
repnz
or
adc
jg
rol
and
pop
cmp
sti
dec
xor
dec
sti
xchg
sti
rcll
sub
push
mov
lds
incl
insl
xchg
xlat
rorb
xor
cmp
int3
dec
xor
addl
jae
sub
sub
sbb
ret
lahf
jns
pop
mov
xor
lods
pop
movsb
or
adc
cmpsl
and
jae
inc
mov
adcl
and
xchg
cmp
jl
jle
and
pop
mov
jge
cmpb
inc
sbb
pop
pusha
or
outsl
pop
aas
add
mov
cli
dec
push
sub
hlt
enter
add
ss
xchg
xchg
cmpsl
lds
mov
in
pop
mov
andb
mov
sahf
insl
popf
loop
pop
push
stos
in
mull
cmpl
sti
outsb
movsl
add
mov
push
mov
push
in
jle
sbb
adc
xlat
push
rol
inc
mov
inc
push
test
cmp
ja
pushf
lret
mov
int
lret
test
out
add
adc
mov
ljmp
sbb
dec
stos
dec
jle
std
rcrb
shrl
add
std
outsb
xor
lods
ds
sbb
dec
mov
stos
push
or
lods
in
xor
add
cld
out
adc
movsl
clc
xor
push
xchg
loopne
dec
jge
lods
xor
adc
pop
adc
jmp
sbb
jb
lods
sub
in
mov
push
jg
std
jbe
jge
dec
push
mov
sbb
insb
pusha
loop
aad
or
push
pop
xor
test
out
jne
fisubrl
paddsw
xor
lds
loope
fildll
pop
or
out
dec
mov
ss
mov
addr16
add
test
dec
mov
stc
inc
or
pop
insl
mov
inc
insb
es
dec
je
inc
outsb
lods
out
adcl
adc
cmovno
mov
int3
test
stos
pushf
les
mov
in
xlat
stos
mov
icebp
in
rorl
pop
and
sub
aaa
je
sbb
gs
jne
cmp
cmp
in
push
imul
push
push
aam
adc
adc
out
scas
and
mov
mov
sbb
mov
gs
orl
xchg
xchg
xor
inc
movsb
jae
push
faddl
mov
and
andl
adc
mov
adc
mov
mov
das
nop
clc
das
sbb
repz
xlat
adc
xor
xor
int
or
adc
mov
adc
es
push
pop
push
mov
cs
mov
inc
xor
and
andb
xor
filds
push
xchg
lret
mov
in
imul
pusha
iret
test
shl
and
inc
out
and
rcrb
icebp
adc
cmp
stos
pop
int3
andb
pop
stc
jb
repnz
ja
and
pop
dec
fs
inc
inc
sub
dec
outsb
cli
pop
lcall
add
mov
xchg
out
and
in
jbe
loope
negl
mov
fdiv
aas
enter
xchg
addb
leave
jmp
pop
jnp
push
or
or
jp
inc
and
arpl
in
std
loop
sub
shll
jle
jne
cmp
das
xchg
and
push
xor
mov
push
mov
or
mov
lock
mov
add
or
push
sbb
mov
xchg
mov
push
stos
dec
imul
push
pop
xor
inc
fidivs
ss
and
clc
shrl
call
popf
out
addr16
pop
dec
cs
stos
and
push
dec
lret
imul
leave
stc
std
mov
and
aaa
dec
push
movsl
imul
cld
dec
pop
lea
cmpsb
aam
popa
out
mov
xchg
push
stos
xor
in
mov
movhps
inc
xchg
xchg
movsl
adc
push
xchg
leave
test
daa
scas
js
inc
ljmp
fyl2xp1
adc
mov
and
aas
rolb
imul
out
gs
adc
adc
push
insb
and
sbb
add
sub
xor
jmp
adc
iret
jge
jle
mov
and
sbb
xor
add
xor
mov
sarl
or
gs
loopne
cmp
lea
js
mov
push
xchg
jnp
aad
data16
mov
or
jne
jns
std
fstpl
pop
cmp
insl
add
sbbl
jo
or
add
loopne
cmp
mov
cmp
cmpsl
pop
lods
mov
movsb
push
add
xchg
cmpsb
aad
cltd
pop
xor
inc
aaa
sarl
inc
xchg
lcall
sahf
lahf
push
movsl
push
sub
lds
lea
push
pushf
push
insl
and
addr16
imull
pop
jle
dec
sub
add
mov
lcall
fistps
push
cmp
cmp
jne
push
sti
dec
lds
mov
testb
push
inc
dec
cmp
jp
dec
add
adc
mov
and
mov
lods
sbbl
push
arpl
out
mov
jmp
cmpsb
mov
test
aaa
clc
ja
push
in
outsl
iret
stos
or
cmp
lahf
push
jg
inc
mov
xchg
push
scas
out
pop
cmpb
insb
jl
lcall
popa
push
jo
test
jecxz
adc
adc
stos
jle
add
daa
lds
int3
ret
movsl
iret
inc
push
leave
inc
sub
not
mov
pop
xor
add
mov
ror
jno
jns
cmpsb
ret
imul
inc
imul
lods
sub
xchg
iret
aaa
scas
cmp
xchg
cwtl
jae
fcomp
out
enter
jmp
fstl
xor
int3
aas
lods
lock
daa
pop
cld
jp
sub
stos
mov
mov
addl
sub
mov
lcall
mov
add
inc
cmp
push
lahf
mov
sub
jae
in
cmc
pop
cwtl
cwtl
lods
xchg
lods
push
lea
jp
fsubrs
addps
pop
rcrl
cld
ficoms
and
push
fstps
scas
mov
push
int
std
add
push
adc
repnz
fcmove
push
dec
xchg
inc
in
data16
add
sar
pop
mov
pop
mov
flds
subb
bound
lcall
shl
pop
dec
leave
mov
sbb
subl
sub
sub
inc
sub
xor
cmp
test
jno
add
das
cmp
aam
jbe
push
arpl
mov
sub
xor
or
roll
lock
add
mov
adc
std
in
xchg
leave
jl
shlb
out
jnp
ljmp
mov
xor
ror
xorl
or
dec
xor
push
cmpsl
mov
push
add
stos
decb
and
call
loopne
add
cmp
mov
loopne
mov
outsb
scas
je
cmc
adc
ljmp
cmp
flds
inc
iret
cwtl
adc
fstl
stc
pop
cwtl
inc
jp
jl
dec
xlat
push
test
sbbl
jge
movsl
insb
dec
cmp
inc
cmpsl
insb
cmp
in
and
stos
dec
sti
out
in
or
nop
sub
mov
test
or
mov
ficompl
xor
out
cmp
stos
xchg
cmp
push
dec
pop
jnp
pop
insl
sub
fnstcw
dec
mov
push
es
mov
outsl
adcl
imul
cmp
in
lods
das
and
add
int3
ljmp
bound
lods
les
sub
pop
pop
add
dec
sahf
mov
mov
add
lret
push
insl
mov
hlt
test
mov
mov
das
add
leave
inc
adc
and
jo
lods
or
xor
push
push
xchg
mov
cmp
lret
int
mov
je
outsb
and
arpl
sub
rcrb
mov
sbb
or
popa
popf
les
xchg
sub
jns
mov
sarb
subl
fsubl
mov
or
inc
mov
xchg
push
enter
pop
mov
push
adc
xchg
sbbb
ja
jnp
out
push
lret
dec
stos
mov
cmc
fidivrs
rolb
bnd
fdiv
push
lret
sahf
and
cmp
xchg
or
adc
addl
add
cmp
lds
fwait
std
dec
movsb
and
loop
scas
jle
ja
ficoml
sub
out
call
lret
sub
je
jbe
out
jecxz
push
ss
mov
add
mov
imul
pop
mov
into
add
cmp
mov
jno
clc
in
int3
push
ret
lahf
and
rcl
cltd
sbb
das
hlt
adc
into
out
in
outsl
push
sub
bound
push
scas
ret
xor
adc
fsubrs
push
mov
popf
xchg
jb
jo
sub
lcall
das
ja
and
mov
pop
add
inc
mov
shlb
cmp
xchg
inc
cmp
mov
ja
call
loop
jle
loopne
dec
mov
sbb
mov
clc
daa
data16
jns
rolb
push
push
dec
ret
inc
repz
jge
push
dec
call
shll
xchg
adc
jne
fstps
jp
xor
push
aas
adc
orb
sbb
cmp
add
or
mov
sub
push
gs
jl
jbe
and
or
mov
cmp
jnp
aad
xor
mov
ss
ljmp
cwtl
mov
popa
cli
js
shll
enter
xchg
jae
mov
fs
pop
jno
xchg
mov
add
cmp
testb
out
and
and
fiadds
daa
fpatan
rorb
test
or
pop
or
out
lret
cmpsl
testl
jb
mov
cmpsl
push
push
fbstp
sbb
sub
pop
xlat
aas
pop
inc
xchg
inc
jp
pop
cmp
lcall
or
arpl
andl
test
push
cmp
sbb
xorb
mov
sbb
scas
jne
test
andb
aam
fisubrl
mov
ret
dec
dec
in
ret
sub
sbb
ret
pop
cmp
in
or
sahf
lcall
cmpsl
popa
in
push
xor
insb
iret
gs
pushf
ss
adc
cmp
mov
rcr
cld
out
push
and
sbb
inc
insl
sub
addr16
lahf
pop
sbb
pop
mov
lock
insb
mov
gs
cmp
sbb
jb
cmp
lahf
ds
rorb
aam
movsb
fwait
out
or
sub
rorb
outsl
icebp
jge
sbb
mov
jns
lahf
fdivl
jo
std
in
jne
enter
lock
pop
mov
neg
mov
std
inc
lcall
stos
and
sarl
fwait
mov
ss
and
sub
inc
push
mov
jne
jecxz
mov
adc
mov
pop
push
jnp
push
xchg
mov
shrl
push
push
push
into
addr16
xor
adc
adc
mov
rcpps
xor
dec
inc
or
pop
adc
cwtl
std
jnp
ljmp
jbe
mov
mov
mov
mov
addr16
daa
cmc
sub
jae
leave
add
dec
jns
les
dec
and
imul
cmc
ja
adc
in
int3
xchg
fyl2x
adc
add
and
jp
pop
add
rcl
popf
sub
insl
fmuls
fwait
sub
jbe
cld
adc
xlat
add
in
sub
sub
cmpb
add
jge
testl
mov
nop
into
aaa
lret
and
inc
mov
xchg
ret
sub
sub
mov
cmp
sti
mov
inc
xor
xchg
mov
cli
cmp
imul
hlt
cmp
xor
inc
sub
mov
lds
xor
subl
adcl
sub
inc
and
mov
clc
lahf
mov
call
dec
fwait
call
cs
scas
movsb
adc
jae
fidivrs
cmp
out
mov
sub
jae
xor
bound
js
xor
test
stos
out
pop
lock
lods
mov
stos
dec
or
add
test
push
movsl
outsb
faddl
movsb
stc
punpckhbw
pop
pop
inc
testl
aam
push
inc
dec
aam
dec
pop
xor
adc
cmp
xor
fdivrl
lahf
mov
push
shl
dec
pushf
jb
std
xchg
jle
iret
push
mov
je
inc
xlat
repz
push
je
mov
add
enter
lock
dec
cmp
rol
popl
repnz
jo
stos
inc
mov
std
lahf
loopne
xchg
outsl
rorl
xchg
out
xchg
jg
add
adc
xlat
mov
out
lret
add
hlt
pop
in
repnz
out
out
sti
mov
movsl
daa
in
std
inc
and
imul
xchg
ljmp
jb
add
pand
fsubp
inc
jecxz
shl
cwtl
dec
or
hlt
je
cli
cmp
frstor
insb
and
repnz
fimull
xchg
and
inc
and
rorl
andl
cmp
add
mov
shr
ss
stos
sub
lods
mov
out
mov
fwait
lock
outsb
mov
lcall
fsubp
mov
in
jl
mov
shrl
and
push
pushf
xor
dec
dec
inc
loope
dec
enter
outsb
js
das
adc
scas
and
bound
jno
jg
enter
dec
lock
mov
sbb
cmp
stc
je
ljmp
dec
push
cs
mov
add
add
outsb
sub
icebp
lds
sbb
pop
popf
jae
inc
mov
cwtl
and
mov
cld
sub
stos
mov
dec
lods
test
imul
pop
cmp
cmp
enter
call
in
mov
inc
rcrl
sbb
or
ftst
lock
adc
pop
andl
mov
cwtl
cmp
nop
shl
popf
sub
adc
gs
adc
in
dec
lahf
cmp
and
jno
aad
sbb
sub
push
adc
bound
pop
xchg
inc
add
lcall
fdivl
mov
faddl
jo
push
mov
roll
cmp
int3
shr
adc
push
inc
es
sbb
aaa
cmp
hlt
sbb
cmp
inc
into
mov
in
push
insb
lea
xchg
add
mov
sbb
outsl
jns
insl
mov
rorb
ret
scas
pop
xchg
cli
mov
add
in
popa
xor
jo
test
xchg
hlt
incb
cmp
push
pop
add
and
cmp
push
movsl
or
xchg
and
adc
ret
xor
imul
xor
or
adc
fsubs
stc
es
stos
cmpsb
mov
jp
pop
or
push
jle
inc
enter
dec
mov
gs
xor
mov
inc
push
dec
sub
icebp
fistl
xor
add
mov
cmp
fwait
dec
sbb
lea
xor
punpcklwd
repz
aam
jecxz
jp
xchg
jo
shll
rcrl
nop
lret
or
mov
lret
mov
or
or
push
rcl
fnstsw
stos
inc
adc
mov
lret
sub
adc
movsl
push
xor
fnstcw
ret
out
cltd
out
push
sarb
in
or
sbb
or
jb
pop
mov
int3
mov
movsl
ret
aam
mov
dec
cmp
test
jmp
mov
or
jmp
out
loop
mov
dec
mov
pop
imul
jmp
fs
jae
decb
lods
mov
aaa
ja
fisttpll
adc
enter
imul
sub
pop
outsb
sti
sahf
ss
adc
mov
gs
xchg
into
push
adc
or
nop
mov
xchg
imul
mov
or
dec
adc
movsb
cmp
sub
sbb
mov
xor
fiaddl
fwait
leave
jbe
std
jo
scas
mov
enter
cmp
addr16
mov
pop
rorl
or
loope
pop
pop
shlb
dec
sbb
and
test
icebp
test
xor
js
mov
rorl
push
es
testb
jo
out
test
aad
jp
dec
daa
push
lret
loop
adc
mov
cmpsb
sahf
xor
inc
mov
xchg
mov
or
fdivp
mov
jno
cld
fs
arpl
pop
mov
dec
xor
lock
aad
add
dec
mov
dec
fildl
inc
aad
mov
and
mov
pop
lahf
lret
mov
popl
mov
scas
ja
push
and
sbb
or
inc
aad
inc
fadd
jno
pop
scas
rclb
and
add
inc
or
sub
add
mov
addr16
or
out
into
ja
lahf
dec
ljmp
xor
negl
jle
jo
push
jne
jbe
adc
fnstsw
mov
int
and
and
int
mov
push
mov
xchg
sub
jl
popa
shlb
xchg
imul
mov
dec
vhaddpd
and
jbe
pushl
loop
jae
inc
adc
cmp
cmp
lahf
lods
ljmp
mov
xor
push
xchg
and
mov
cmp
addr16
inc
in
lret
push
xlat
push
push
pop
mov
dec
movl
insb
jbe
imul
lds
or
jnp
push
jl
nop
insb
imulb
ficomps
mov
add
lret
neg
orb
roll
push
cmp
lods
cmp
add
scas
sti
xor
and
std
das
inc
insb
out
sub
test
push
jp
or
sub
mov
jne
xchg
in
inc
out
pop
mov
jge
xchg
pop
cmp
je
int3
lea
jl
or
mov
jb
cmpsb
xor
aam
sub
shlb
jae
stc
mov
lret
cli
xchg
mov
stos
add
ja
xor
push
mov
inc
jmp
popa
sahf
add
in
es
mov
xlat
inc
push
nop
lea
pop
pop
fnstsw
xor
jbe
mov
cltd
mov
mov
rolb
xor
cmpsl
icebp
add
mov
jg
lods
les
cmp
imul
sbbl
aad
cld
jns
push
sub
shlb
mov
mov
mov
mov
ds
in
push
in
cmpsb
loope
cmp
arpl
jmp
out
mov
les
add
sti
sahf
xlat
jb
add
jb,pn
loopne
mov
mov
fwait
or
ror
rolb
add
push
clc
test
test
inc
push
jecxz
mov
nop
adc
outsl
jne
daa
mov
push
xchg
push
sbb
cltd
add
fadds
pop
mov
jl
rclb
adc
mov
xor
mov
lret
add
cmp
les
iret
xchg
xchg
dec
bound
or
sub
pushf
outsb
lods
sarb
aaa
mov
fcmovnbe
repz
dec
xlat
mov
pop
cmp
jmp
fsts
inc
jb
mov
dec
xor
or
test
or
xor
out
or
adc
xchg
xchg
outsb
sbb
dec
jg
sbb
mulb
xlat
in
jmp
daa
lods
pusha
lds
cmp
xchg
cmc
sahf
jmp
mov
cld
mov
scas
shrb
leave
cmp
dec
cmp
jg
and
cltd
jb
test
inc
pop
call
push
adc
mov
or
call
sbb
add
inc
jo,pn
dec
cmc
xor
loop
call
xchg
inc
out
mov
push
or
jbe
push
or
in
loope
inc
mov
fmull
sbb
scas
pop
stos
out
sub
xchg
jmp
lods
mov
sbb
insb
mov
jbe
or
adc
adc
pop
in
push
fsubrp
or
shlb
scas
sahf
sub
mov
mov
push
fs
hlt
clc
call
cld
gs
add
mov
sbb
mov
adc
lods
lret
mov
into
clc
icebp
in
pop
ja
in
negb
xor
jns
iret
lcall
test
lods
inc
fidivrl
mov
mov
repnz
ljmp
lods
ss
sbb
pusha
imul
xor
jl
movsb
jecxz
sub
ret
push
sub
test
cmp
pop
push
shll
rolb
xor
pusha
mov
movsb
hlt
jp
sbb
sbbb
imul
lds
lret
pop
pop
jae
or
popa
cmpsl
adc
jb
add
gs
aad
pop
add
jbe
lock
xor
cwtl
sbb
cmp
stos
mov
movsl
daa
ret
jne
xor
aas
out
xchg
jnp
cmp
int3
mov
das
push
add
lds
imul
push
sar
shrb
jne
shl
xchg
or
dec
pop
div
add
add
or
mov
iret
and
mov
push
add
fdivs
push
push
xor
push
scas
mov
bnd
cmpsl
sahf
mov
lds
sub
jge
jecxz
cwtl
lahf
mov
sbb
xor
cmp
not
mov
xlat
sbb
fnstsw
iret
xchg
jo
ret
inc
xchg
xchg
jno
and
jge
out
push
aas
xlat
iret
or
dec
in
or
add
std
sbb
not
xchg
rclb
jmp
pop
and
jmp
aaa
aaa
lods
push
cmp
icebp
roll
inc
push
and
cmp
outsl
addl
insb
mov
mov
inc
mov
adc
fcmovbe
sti
sub
adc
sbb
add
outsl
dec
js
aas
or
fldenv
shrb
stc
pop
push
sbb
mov
cwtl
in
pushf
or
and
icebp
stc
xchg
adc
insl
jo
stos
push
cmpsl
lock
push
mov
mov
negb
mov
mov
mov
dec
cli
lods
dec
repnz
rol
sbb
popa
add
lret
mov
imul
jmp
dec
out
push
call
nop
fwait
addr16
dec
pop
movsb
fcompl
cltd
clc
sbb
sbb
sub
push
clc
xor
push
adc
sub
lcall
push
pop
stos
cld
sbb
fsubl
xor
ss
mov
mov
repz
pop
jg
mov
xchg
xorb
dec
and
fs
xchg
cmpsl
sub
jmp
loop
imul
popw
ret
lds
loope
xchg
sub
call
popa
xor
jmp
push
dec
push
and
mov
xchg
out
repnz
xchg
pop
pop
call
mov
xchg
mov
or
mov
fcom
xchg
dec
push
push
movsb
out
and
xchg
mov
push
cmpsb
mov
sub
xchg
jge
ljmp
mov
sbb
loopne
icebp
gs
daa
inc
pop
xchg
fistpll
mov
popa
lcall
sar
repz
imul
dec
insl
js
inc
andps
sub
ror
fisttpll
xor
xchg
jge
dec
movl
mov
test
and
loop
add
dec
sub
xchg
pop
mov
movsl
stos
sub
push
orl
mov
dec
dec
roll
clc
loopne
addr16
push
arpl
jne
or
xor
clc
aaa
mov
mov
mov
inc
sub
mov
popa
int3
sahf
adc
jbe
fcoms
scas
push
adc
pop
xchg
fsub
cmp
sbb
test
and
jnp
mov
int3
loope
gs
mov
mov
jbe
jle
call
sub
in
cmp
testl
lds
std
stc
dec
loope
push
shlb
pop
imul
cld
jb,pn
cmp
mov
dec
cmp
je
lcall
push
das
aam
out
sbb
incl
cmp
test
jno
cld
imul
sahf
adc
push
xor
mov
lds
je
loope
push
js
mov
cmp
inc
loop
movl
fnstcw
shrb
cmp
icebp
lcall
cmp
pop
xchg
not
stos
mov
jbe
xchg
lcall
pop
jl
mov
clc
cld
dec
cmc
fs
and
icebp
adc
in
ss
aad
das
mov
push
cs
xor
je
sbb
punpckhbw
rorb
fnsave
xchg
or
add
enter
sub
in
aaa
add
jg
mov
stos
hlt
inc
jb
add
inc
sub
roll
call
inc
or
mov
fisubs
jg
cmp
leave
adc
and
pop
mov
das
cmp
xchg
cld
mov
xchg
xchg
into
mov
testl
pop
lret
stos
aad
pop
dec
in
ror
test
push
mov
imul
aas
or
in
push
pop
mov
aad
loopnew
dec
ss
negb
bt
nop
lods
movsl
cmp
test
xchg
cltd
test
iret
in
mov
cmp
sbb
or
mov
push
cmp
cmc
mov
pmaddwd
mov
in
or
pop
push
add
dec
repz
sbb
loop
out
pop
shrb
push
js
sahf
adc
movsl
lods
xchg
push
das
mov
ror
aas
xor
push
ret
sbb
stos
mov
push
pop
mov
sbb
sahf
fisubl
jg
stos
aam
cmp
mov
addr16
fimull
xchg
ffree
xchg
idivl
xchg
mov
ret
jmp
lods
and
dec
inc
and
xor
inc
xor
fimuls
inc
xchg
xchg
mov
fidivs
test
xchg
mov
rcrb
lcall
jo
rcr
out
popa
cmc
pop
xchg
xchg
addr16
inc
loopne
adc
push
dec
shlb
idivl
pop
mov
or
aam
sti
mov
mov
imul
jbe
gs
mov
add
test
pop
adc
je
scas
test
inc
std
cmpsb
adc
mov
push
pop
loopne
jne
lods
xor
sbb
or
push
cmp
cmpsb
xlat
call
adc
ljmp
rcrb
push
ret
rorl
jb
and
andb
xlat
inc
hlt
jae
cltd
cmp
fildl
mov
or
sbb
ret
jne
cmpsl
xor
aaa
adc
gs
stos
into
push
mov
cmp
sbb
push
jbe
test
leave
std
push
xchg
insl
xor
jo
push
imul
dec
jns
dec
bound
jge
lahf
leave
dec
ret
daa
jo
ss
jecxz
mul
ljmp
and
clc
pop
aam
and
call
mov
ret
add
sub
xchg
into
pop
nop
scas
mov
cmp
dec
shlb
jl
cs
enter
inc
ret
rclb
and
push
push
mov
xlat
jo
outsb
es
outsl
addl
sub
imul
jg
into
lcall
dec
stos
jns
jle
int3
subl
sbb
mov
adcl
shlb
cwtl
or
aaa
inc
fcomp
popf
bound
xor
mov
popf
cmpsl
xor
cmp
incb
jb
dec
lret
cli
jae
lods
dec
dec
adc
sti
dec
cmpsb
lcall
adc
add
jnp
test
and
rorb
ret
xor
mov
jae
sbb
lock
mov
mov
cltd
jg
lods
cltd
dec
aam
pop
jb
std
cltd
fst
stos
popl
inc
leave
mov
lock
jg
mov
jo
cld
inc
or
adc
scas
dec
ss
mov
fsub
movsl
int
and
mov
hlt
outsl
add
jecxz
cltd
pop
add
adc
push
subb
out
adc
rcr
push
stc
std
inc
or
pop
adc
data16
insl
mov
mov
or
cmc
push
sbb
jo
jnp
inc
push
mov
neg
jecxz
outsb
scas
fstp
adc
pop
or
jno
inc
push
jg
lods
fldenv
aas
decl
cmp
jns
jp
push
notl
shlb
jae
inc
sub
push
lcall
and
loop
sub
ret
jne
shll
aas
mov
sbb
mov
xor
adc
test
jb
jb
inc
dec
add
pop
cmpsl
jne
mov
push
xchg
jmp
push
or
push
jne
lret
sbb
movsb
dec
aam
mov
pop
nop
mov
or
mov
je
aas
mov
or
cmp
pop
lahf
outsl
dec
xor
mov
out
push
fs
push
cmp
sbb
aam
or
inc
cli
and
inc
test
shl
push
mov
mov
cmpsb
sbb
jae
cmovo
or
dec
out
xor
push
loopne
lret
js
mov
arpl
in
inc
ucomiss
pop
push
adc
ret
sbb
jmp
push
fbstp
adc
test
repnz
lret
arpl
mov
sbb
imul
xchg
pop
inc
mov
movsl
sub
adc
push
sub
xor
daa
in
dec
cmpsl
adc
leave
sbb
es
xor
sbb
dec
dec
xchg
mov
mov
xor
mov
pop
jle
insl
add
call
jmp
cli
sbb
dec
jmp
push
add
jbe
sub
mov
sbb
fxam
fsubp
or
xor
test
je
mov
add
enter
mov
into
mov
aam
jg
movsb
push
aas
into
int3
dec
loopne
orl
sarb
enter
xchg
icebp
hlt
sbb
push
pop
sbb
repnz
xor
ret
addr16
insb
add
lock
repnz
gs
iret
aam
addl
popf
adc
sbb
addr16
mov
sbb
push
sahf
push
add
mov
imul
orl
jp
lods
lods
add
popa
not
ljmp
mov
js
and
sbb
repz
repz
add
push
fnstenv
push
call
rcrl
dec
shlb
jge
xchg
cmp
push
mov
fwait
inc
mov
sbb
mov
hlt
movl
mov
lds
inc
sbb
loopne
mov
into
sub
or
sbb
adc
in
mov
lock
cmpsl
scas
cmp
xlat
clc
jge
jnp
or
push
mov
sbb
sbb
ss
ljmp
xor
ja
xor
push
inc
std
test
fwait
mov
push
or
add
nop
in
pop
test
jne
xchg
aam
and
add
cld
repnz
iret
xchg
loope
imul
cwtl
into
mov
and
out
pop
xchg
sub
jno
push
in
call
stos
jmp
pop
iret
push
ljmp
movb
mov
movsl
add
aas
shll
ljmp
ds
mulb
inc
adc
ja
or
sbb
add
test
mov
test
dec
popa
pop
stc
dec
mov
fimuls
cmp
pop
jnp
add
daa
daa
addr16
fsts
and
pushf
pop
insl
into
push
sbb
dec
cmp
int
pusha
lret
jp
mov
xchg
fsubrs
in
lret
add
clc
and
or
push
or
fwait
std
push
arpl
arpl
dec
loope
fistpl
outsl
pushf
push
jp
call
clc
push
inc
add
cltd
icebp
call
test
dec
ds
push
ret
popf
into
jge
cmpsb
sahf
or
fmuls
std
pop
dec
arpl
mov
outsl
inc
add
fdivrl
mov
fadds
rcll
testl
and
int3
adc
sbb
adc
int3
and
jge
lcall
scas
pop
repz
je
add
mov
add
fwait
dec
stc
fmuls
add
push
jb
xor
test
jp
add
mov
mov
std
mov
jae
cmpsl
or
mov
popa
push
jno
cmc
jb
repnz
or
cwtl
inc
loopne
jno
sub
ret
dec
pusha
ss
aas
xchg
int
jge
insl
loope
repz
mov
mov
mov
or
scas
lahf
jg
lret
into
in
stos
xlat
push
push
xorl
sub
dec
mov
fnstenv
pop
mov
sbb
mov
mov
jle
js
dec
xor
lods
aad
arpl
add
or
mov
lds
xchg
ret
xchg
fnstenv
call
call
cmp
sbb
pop
xlat
push
lods
js
int3
jle
pop
inc
mov
mov
in
mov
lret
lds
push
lea
xor
push
fucomip
or
jne
mov
mov
mov
fisubl
cs
dec
push
jle
pushf
or
mov
daa
adc
insl
sti
cmp
xchg
daa
xor
adc
push
sub
scas
fmul
xor
sbb
cmp
rolb
ds
js
stos
fadds
push
cld
in
jno
imul
in
fwait
out
into
ljmp
pop
mov
push
ljmp
push
pop
sub
pop
pop
inc
out
sarb
lock
or
mov
lret
sub
ret
mov
sbb
lods
loope
ficoml
scas
sbb
adc
sbbl
fwait
push
clc
jnp
add
and
push
fisubrs
fdivs
pop
cmc
mov
pusha
xchg
pop
mov
arpl
inc
pop
sbb
cmp
fs
and
mov
movsl
mov
inc
add
fdivrl
popa
pop
mov
fists
adc
xchg
mov
and
out
or
mov
cmp
idivb
pop
stos
pcmpeqw
mov
cmpsb
adc
jae
mov
cmp
xor
loop
xor
sbb
mov
lods
rorl
pop
dec
les
sahf
sub
nop
mov
dec
push
lods
inc
inc
in
lea
andl
inc
cmp
jo
ret
pop
loope
cmp
enter
add
cli
xorb
mov
inc
inc
mov
sub
push
repnz
jne
cmp
or
test
enter
je
pop
mov
dec
rclb
out
pop
sbbb
icebp
stos
call
mulb
or
addl
jl
sti
or
dec
push
mov
pop
je
sub
xor
pop
loopne
subb
mov
aas
cltd
adc
inc
xor
cs
test
dec
aam
aaa
imul
mov
sub
shl
jbe
push
shl
aad
adc
stos
mov
xor
jo
mov
sbb
xor
stc
mov
mov
jae
nop
pop
lds
push
iret
push
push
or
fstl
and
xor
and
xchg
mov
rolb
lret
in
into
adc
fisttpll
sbb
cmp
push
pop
ret
icebp
and
pop
jne
push
dec
push
scas
push
int3
nop
movsl
mov
cmpsb
stos
mov
jne
adc
clc
insb
sbb
dec
pop
xchg
sub
imul
es
das
popf
xchg
mov
in
mov
dec
subl
adc
sbb
mov
in
idivl
or
jp
mov
psadbw
bound
jne
adc
lret
shll
sub
jbe
scas
mov
xorl
adc
pop
cld
mov
or
adcb
jge
and
das
cs
push
add
rorb
ja
push
ret
scas
rcr
mov
bound
mov
jecxz
inc
xchg
in
loopne
rcl
roll
sbb
push
cmp
xlat
cmp
sar
aas
std
push
inc
inc
stc
out
add
in
and
out
cmp
data16
dec
jecxz
repnz
scas
inc
mov
cltd
hlt
fimuls
lret
mov
push
test
out
mov
cmp
push
ficompl
sbb
xchg
imul
adc
jmp
loopne
mov
push
cltd
and
data16
and
cltd
cmp
cmp
aaa
lcall
lahf
add
mov
into
inc
insl
pusha
rorb
push
ljmp
mov
test
mov
loopne
sbb
push
jl
test
cmp
mov
sbb
imul
xchg
call
out
adc
jge
cmc
xchg
cmpsl
push
mov
cmp
js
cmpsb
cmp
mov
xorb
out
insb
cmp
adc
stc
in
insl
xor
test
fildll
fwait
mov
fcmovbe
enter
inc
movsb
mov
inc
scas
mov
xor
mov
dec
out
std
je
imul
xlat
xchg
mov
mov
jnp
inc
lds
sub
fs
outsb
mov
lret
mov
cmpsb
mov
xor
pop
out
inc
shl
push
push
fcoml
xor
jns
push
cld
mov
add
pop
andl
aad
xor
mov
addr16
imull
jnp
and
lret
clc
out
mov
imul
add
fs
call
adc
test
in
mov
into
mulb
push
sahf
idiv
imul
adc
jae
dec
add
cltd
mov
jb
je
sub
or
mull
and
idiv
mov
inc
call
int3
les
sub
or
fs
mulb
mov
jo
std
or
icebp
jle
jb
lods
mov
sbb
mov
sbb
mov
dec
jp
inc
cld
loop
dec
lods
nop
std
cmp
or
xchg
outsl
pop
jecxz
add
cmp
push
xor
cld
lock
mov
mov
ret
data16
sub
mov
scas
daa
jp
mov
movsl
cmp
pop
sub
imul
pop
mov
cmp
leave
sbb
imul
ljmp
lret
fwait
cmp
ret
and
shrl
mov
xor
push
stos
dec
mov
jl
dec
push
jmp
es
adc
inc
mov
ret
ss
jns
cmpsb
loop
sbb
ret
loopne
xlat
pusha
mov
in
aad
shrl
dec
mov
dec
jae
sbb
sub
add
stos
insb
arpl
repz
daa
inc
gs
and
mov
das
cmp
int3
jmp
dec
iret
pop
pop
stos
xor
dec
cmp
ret
enter
push
mov
shlb
popf
arpl
ljmp
aas
call
insb
mov
lods
xchg
mov
inc
andl
mov
fcoml
mov
dec
sub
std
aad
imul
shll
movsb
ret
daa
subb
jbe
sub
cmp
in
repnz
cmpsb
cmp
sbb
sub
pop
jno
mov
inc
loopne
hlt
xor
ss
out
loope
inc
div
push
lods
das
jbe
add
dec
popa
lock
or
mov
out
lock
jge
fistps
nop
test
sbb
rcll
test
push
addr16
or
push
cmc
movsb
scas
lods
in
test
jmp
push
ficoms
movzwl
xor
push
roll
test
lahf
fisubrs
mov
sbb
out
ds
in
sub
les
mov
loope
rclb
pop
test
jnp
lods
insb
fldt
mov
stos
add
sub
lret
mov
out
push
fiaddl
dec
in
fs
mov
cs
int
js
adc
adc
or
icebp
jle
xchg
mov
jp
mov
les
sub
shl
adc
aam
jmp
in
xor
leave
cwtl
pop
push
push
test
in
add
push
cmc
arpl
leave
push
dec
aaa
shl
and
dec
inc
inc
imull
push
sbb
jmp
push
aaa
cmpsb
pop
cmc
lcall
in
in
aaa
dec
mov
enterw
fdivrp
xor
xchg
cs
push
in
out
cmpb
lods
dec
mov
insl
ror
fisttpll
jmp
ja
xchg
adc
push
add
sbb
adc
xchg
mov
ret
push
mov
cmc
mov
xchg
addr16
jnp
cli
fidivl
mov
push
outsl
loopne
insl
xchg
inc
int3
leave
and
mov
enter
jo
shll
ss
and
sbb
push
sbb
xor
jp
hlt
jae
stos
mov
push
lcall
mov
sti
pusha
jo
movsb
jnp
ror
lret
test
sbb
add
dec
lahf
fs
jae
jno
add
in
clc
dec
sub
sarb
fdivl
notl
ss
fdivrl
rolb
sbb
sbb
out
push
jbe
push
sbb
ja
push
sbb
icebp
popa
scas
push
movsb
aad
lds
or
dec
mulb
xor
fcomi
iret
or
adc
mov
shrb
mov
or
inc
outsb
int
adc
xchg
stc
mov
inc
xacquire
divl
dec
movsl
into
iret
loope
cs
inc
jecxz
iret
jl
jb
sahf
and
test
or
mov
insb
testl
lock
fwait
ret
leave
xchg
enter
cmp
loopne
mov
sahf
test
jns
scas
cmp
shll
es
push
fimull
mov
fstpt
mov
jbe
inc
out
jmp
cmp
mov
inc
scas
jns
xor
push
mov
ljmp
inc
or
xchg
scas
cmp
ret
inc
push
inc
jbe
fldl2e
sub
sbb
adc
aaa
loopne
add
out
addr16
sub
xlat
push
icebp
fldl
stc
cli
ljmp
and
out
add
insb
cltd
loopne
xchg
mov
xchg
lret
pop
aam
and
cld
cmp
subb
in
sti
pop
test
fs
out
inc
fbstp
push
xchg
fidivl
add
pop
stc
push
push
iret
add
dec
push
jbe
mov
xor
add
and
lahf
icebp
xchg
pop
cli
in
jmp
mov
stc
pushf
sti
xchg
cmp
jp
mov
stos
and
jp
adc
je
imul
push
addb
jne
xor
shl
test
adc
lea
xor
and
add
clc
hlt
or
or
push
fistpl
inc
dec
cmp
mov
and
movsl
pmulhuw
and
xor
mov
orl
in
repnz
mov
outsl
in
pop
push
int
push
mov
sar
mov
lds
jg
inc
and
and
fiaddl
adc
iret
testb
aas
pop
cld
iret
sbb
xchg
aam
stos
fwait
cmc
les
lret
aam
push
scas
rorb
je
ficoml
repnz
imul
sti
mov
adc
daa
jge
or
mov
movsb
xor
sahf
scas
loopne
pop
adc
or
or
mov
or
iret
cmc
sbbb
xchg
and
adc
mov
pop
cs
push
out
loope
mov
out
inc
adc
pop
xchg
jl
data16
cmp
mov
mov
imul
dec
and
pop
roll
insb
push
fmuls
lcall
scas
xchg
cmp
out
lods
mov
dec
ret
sti
sub
pop
bound
lahf
js
cs
lds
sub
mov
adcl
call
pop
fdivr
or
cs
imul
ljmp
lock
cmp
and
inc
insl
cs
mov
lods
xchg
cmp
pop
jbe
cmc
fisttpl
mov
or
inc
sti
fisttps
mov
jno
pusha
pop
sbb
mov
lret
pop
fstl
addr16
sahf
call
imul
dec
nop
call
add
daa
push
js
test
shr
outsl
inc
mov
mov
imul
ret
pop
inc
dec
adc
insl
mov
insl
out
mov
iret
or
int
xor
rcrl
imul
lret
imulb
lods
rol
das
int
lret
dec
mov
xchg
dec
lock
rcrl
push
dec
or
mov
lods
inc
stc
ljmp
dec
dec
push
es
popf
sbb
push
insl
mov
adc
pop
out
mov
test
stos
out
mov
mov
fucom
pop
std
push
sbbl
inc
sbb
leave
cwtl
mov
adc
insb
mov
adc
dec
sbbb
fwait
outsl
inc
cmp
mov
fcompl
add
in
out
daa
out
or
mov
xor
or
xchg
xchg
jl
fscale
call
push
mov
aam
push
mov
das
cmpb
jbe
push
dec
jp
sbbb
pop
lock
jl
sub
lret
mov
outsl
pop
cmpsl
ret
pop
or
cmp
jmp
mov
lds
aas
pop
mov
enter
sbb
pop
bound
les
cmp
out
arpl
hlt
mov
lods
mov
aas
cmp
cmpsb
enter
loope
and
dec
xchg
dec
leave
mov
add
jne
xlat
pop
pop
sub
aam
mov
xchg
push
sub
jge
mov
adc
in
and
imul
sti
dec
and
out
in
data16
xor
xor
nop
addr16
cld
jp
push
add
mov
rcr
mov
xchg
mov
inc
adc
push
mov
outsb
cmp
sbb
lock
xchg
pushf
sti
loop
rorl
clc
and
lods
push
out
xor
lret
out
fmulp
movsl
jg
loop
insl
lret
mov
inc
xor
mov
std
push
int3
mov
dec
pusha
cmp
scas
pop
shll
ljmp
sahf
outsb
push
cmc
cli
lods
dec
mov
push
repz
push
jnp
fists
push
sub
cmp
stos
push
sub
cmc
leave
ret
inc
jecxz
push
lods
scas
adc
scas
sbb
xor
pop
mov
adc
cld
jnp
pop
test
dec
add
jge
and
mov
cmp
lock
pop
push
mov
jne
pop
mov
movb
iret
add
ds
ret
incl
jno
movntq
inc
and
push
mov
cmc
jae
cmpsl
mov
pop
inc
rolb
mov
jbe
in
mov
ret
or
imul
pop
xorl
sub
rep
or
and
shll
notb
push
in
cmp
mov
dec
add
xchg
fnsave
shl
jmp
mov
xchg
or
cmp
push
lahf
dec
pop
xorl
lea
outsb
dec
push
sbb
xor
mov
lahf
sbb
xchg
loopne
test
rorl
cmp
push
ret
notb
pop
sahf
or
ss
jae
fiadds
into
push
out
jno
fisttps
test
ja
ds
xchg
jnp
daa
mov
pushf
std
das
fwait
or
call
lods
sub
push
enter
push
lcall
add
js
mov
jne
xchg
decb
inc
idiv
mov
jp
int3
xchg
push
dec
add
mov
out
jo
cld
mov
xorl
inc
lret
inc
rcrb
negb
aam
imul
cmpb
ret
fcmovbe
lock
data16
out
cmp
cld
out
out
jbe
sti
or
push
pusha
call
js
pop
mov
mov
mov
jmp
lret
dec
mov
and
xor
cmp
push
iret
or
jmp
push
push
sbb
jg
push
xchg
std
aam
test
rcl
stos
enter
out
pop
mov
cmp
ds
mov
add
test
push
ds
adc
mov
cmp
sbb
inc
mov
lret
xchg
clc
push
inc
inc
mov
adc
sbb
pop
jo
and
stos
popf
into
inc
and
cmc
and
leave
mov
in
xor
mov
les
push
xchg
inc
sub
or
mov
mov
sub
dec
inc
es
nop
fidivrs
cmp
aad
leave
xchg
lahf
mov
or
sbb
and
bound
mov
sbb
cmp
push
sub
pop
dec
cmp
gs
shl
xchg
sub
sahf
mov
inc
add
imul
cmp
lahf
dec
js
add
jmp
cld
in
sub
dec
mov
sub
inc
mov
aas
sub
pop
mov
or
stc
mov
int
sbb
xor
or
fistpll
mov
out
adc
pop
cmpl
pop
mov
fldcw
push
fisttpll
dec
ret
test
outsl
popf
jl
lret
adc
adc
pop
xchg
or
je
jl
fistpll
and
loope
ja
repz
cs
xchg
movb
xchg
cmpsb
aam
sub
fs
sbbl
insb
and
cmp
cmp
and
mov
hlt
test
jbe
sbb
sbb
rsm
idivl
sub
hlt
mov
dec
add
add
push
xor
adc
ds
sub
pop
push
or
imul
rorl
pusha
mov
notb
jnp
or
outsb
rcll
dec
stos
jle
cpuid
pusha
push
pop
mov
dec
ja
outsl
outsb
shrb
insb
xchg
shll
sahf
add
cld
adc
dec
jge
fsubrs
cmp
mov
clc
sub
sbb
sub
xlat
hlt
movsl
lods
inc
jns
cmpl
and
mov
and
sub
xchg
xchg
add
in
mov
cwtl
mov
xchg
std
cld
adc
test
ljmp
add
icebp
sbb
xor
fsubrl
test
daa
mov
jno
inc
mov
sub
or
js
out
xor
std
jno
push
repz
inc
xchg
mov
inc
stos
outsb
loopne
cmp
sbb
xchg
adc
jp
iret
dec
inc
push
lock
sub
iret
scas
sub
inc
or
sbb
shrl
subb
scas
jp
jae
aam
or
adc
sub
dec
adcl
movsl
inc
mov
rcll
test
sub
mov
js
std
addr16
mov
push
mov
fimull
iret
sub
cmpsl
adc
cmp
call
rol
jns
lds
shll
dec
push
mov
mov
xor
in
pop
addr16
xor
add
cmc
sbb
xchg
jae
and
pop
loopne
xchg
jle
push
mov
sbbb
jns
nop
cmpsb
insb
adc
addl
roll
xchg
mov
filds
dec
es
push
sti
sub
popf
adc
inc
add
outsl
fisttps
imul
outsl
mov
push
repnz
int
fistl
shl
jbe
mov
jecxz
fsubp
mov
or
ret
lcall
sub
cmp
pusha
hlt
cmpsl
xor
addr16
xchg
pop
pushf
outsb
out
insb
and
xor
fcoms
xor
div
enter
sub
and
lods
out
shll
stos
mov
push
pop
bound
or
bound
je
cwtl
mov
and
pop
aad
sahf
add
xor
enter
xchg
push
cmpsl
push
mov
icebp
pop
shr
cli
aam
popf
mov
arpl
je
filds
ss
call
sbb
and
mov
or
xlat
addr16
add
cwtl
test
xchg
es
sub
inc
lea
jle
and
fstpt
loopne
into
pop
sbb
clc
pop
imul
ds
jle
arpl
or
dec
mov
rolb
je
gs
fimull
dec
inc
pop
or
add
mov
push
sahf
popa
ss
iret
adc
xchg
clc
jnp
addr16
add
pop
cltd
notl
xor
ret
add
pop
std
sub
js
mov
outsl
pop
enter
movsb
fs
mov
sbb
fucomip
jbe
and
xor
mov
jg
lds
mov
xchg
xchg
in
push
xchg
jno
mov
sub
test
loopne
testb
imul
in
mov
adc
mov
lret
pextrw
enter
jle
cmp
mov
call
jo
pop
aas
mov
lods
sub
push
and
arpl
xor
sahf
rcll
out
lahf
jmp
and
lcall
pushf
or
je
ret
inc
mov
jecxz
dec
aaa
addl
lea
lock
loope
test
cmp
orb
lret
je
pop
cld
push
inc
popa
push
xor
bound
fnstsw
inc
sahf
and
popa
leave
lds
push
dec
mov
pop
and
nop
jb
enter
lea
xchg
mov
adc
jp
filds
cli
inc
icebp
mov
cmp
ret
inc
pop
xlat
leave
cltd
gs
push
pop
insb
cmpsl
arpl
mov
in
cmc
pop
scas
push
icebp
mov
mov
iret
pop
and
faddp
divb
shrl
inc
push
cmp
pop
movsl
sbb
iret
push
mov
mov
mov
push
call
inc
xchg
mov
in
incb
aad
loopne
mov
xchg
lock
imul
adc
mov
jb
xlat
cmpsb
push
push
out
mov
stos
std
lds
mov
jmp
lret
fsubl
sub
rorb
movsl
mov
inc
xchg
lods
mov
movsl
jns
xchg
push
cmpsl
das
icebp
shlb
jmp
rcrb
cltd
xchg
mov
jmp
ret
mov
pop
popl
test
mov
push
push
int3
out
and
sub
dec
ret
jb
aam
in
stos
pop
xchg
push
push
mov
in
jno
cmc
jle
fcomps
sti
jb
jge
scas
mov
scas
push
adc
test
lcall
into
rcll
fidivrl
dec
stos
inc
imul
xchg
push
xor
not
cmp
dec
pop
repz
pop
and
mov
icebp
or
insb
hlt
addr16
pop
in
pop
dec
iret
sbb
imulb
loop
jg
js
fisubrl
repz
adc
lret
sahf
jmp
in
mov
dec
and
xor
cmp
es
or
ds
mov
ficoms
pop
mov
fwait
pop
xchg
pop
fstl
jns
fwait
cs
cwtl
pop
sub
sub
pop
inc
mov
lcall
mov
dec
xchg
andb
jo
or
sbb
call
aas
rolb
inc
data16
rcr
mov
pop
jp
fisttps
jmp
jne
cmp
aaa
in
xchg
rolb
cmp
sbb
stos
inc
cmp
push
scas
sbb
and
cmp
xor
rol
sbb
jg
mov
adc
into
push
and
dec
andb
stos
mov
ret
popf
int
push
lret
gs
jge
xchg
mov
js
data16
inc
adc
iret
xor
int3
fstl
add
outsl
shlb
jmp
jge
adc
lahf
jl
push
pop
pop
inc
js
push
jmp
adc
fmuls
incb
ljmp
mov
popf
or
sbb
add
testl
push
sub
shll
adc
or
jp
in
mov
pop
pop
mov
leave
lahf
data16
sub
int
fs
xchg
pop
sbb
outsl
pop
dec
imul
jnp
scas
xchg
fcmovnb
sbb
fidivl
out
and
in
nop
test
jns
xchg
adc
sbb
sbb
xchg
dec
cmp
or
xchg
daa
les
push
push
je
rcrl
or
lods
inc
xor
outsb
sub
roll
jg
push
mov
jne
ja
pop
test
mov
fmull
lock
cli
mov
or
mov
fsubrl
ret
sub
mov
ret
sub
scas
xchg
add
repz
dec
aaa
decl
dec
ror
in
outsb
call
mov
aam
call
xchg
das
insl
jg
fcoms
push
out
kaddb
divl
pop
inc
lcall
adc
idivl
cmpsb
mov
xor
xchg
gs
dec
cmp
mov
inc
push
mov
xor
clc
jmp
in
icebp
cmp
rcl
pop
mov
inc
fbstp
loope
mov
nop
ss
repz
mov
adc
cmpsl
aad
aaa
sbb
mov
sbb
rcll
das
loope
loope
dec
fucomp
push
aam
orb
lods
adc
lcall
inc
pop
lods
mov
cli
shlb
enter
test
sub
mov
in
movsb
clc
andl
testb
cli
xchg
inc
push
out
sub
sub
sub
mov
arpl
cwtl
jno
jg
in
std
sbb
cmp
jo
sbb
jg
out
inc
lock
movsb
xor
movsl
xchg
imul
cmp
cltd
jle
mov
add
mov
jge
daa
popf
fs
movsb
jbe
jb
nop
mov
or
mov
xchg
subb
das
jne
bound
mov
sub
jno
sti
mov
pop
loopne
pop
sub
cwtl
test
leave
add
xchg
ds
daa
or
adc
mov
mov
cmp
into
inc
mov
dec
push
sti
push
pop
inc
clc
dec
out
popa
adc
dec
inc
paddusb
rcl
adc
mov
dec
sbb
ja
loope
in
xchg
outsl
or
push
sbb
outsl
daa
out
repnz
push
sahf
mov
popl
pop
inc
push
jp
or
imul
ss
fdivs
mov
mov
ret
mov
pop
imul
sbb
sahf
inc
rolb
mov
fs
jns
out
mov
pushf
pop
mov
push
and
jns
add
jp
push
push
mov
lcall
js
dec
notb
mov
mov
pop
test
cwtd
pop
addb
int
add
push
je
fistl
push
mov
pop
add
and
fisubrl
xor
push
aam
xorl
lods
ss
flds
arpl
cwtl
cmp
mov
std
repz
pop
xchg
out
lock
inc
mov
or
push
push
inc
ds
imul
sbb
jbe
insl
xchg
fisttpll
mov
mov
mov
push
and
jle
xor
sbb
cmpl
loop
add
mov
lcall
stos
push
cwtl
pop
push
push
adcb
aam
xchg
push
adc
test
cmc
iret
pop
stc
jg
test
inc
jp
mov
cmc
add
loop
push
icebp
mov
dec
dec
fwait
cs
js
xchg
push
pusha
lcall
xor
idivl
xchg
sub
xchg
jno
cmp
adc
xor
pop
jecxz
push
cs
outsl
adc
sbb
mov
mov
icebp
sub
jo
popf
mov
outsb
inc
sub
stos
adc
jmp
lret
mov
mov
and
movsb
cmp
sub
xor
stos
les
mov
push
lret
adc
adc
in
push
sbb
sbbl
push
mov
sbb
xchg
xchg
outsb
clc
cmp
xor
xor
cs
idivl
ror
popf
xchg
pop
movsl
pop
add
jb
add
pusha
mov
push
repnz
mov
andb
jl
jbe
sub
xor
pop
add
add
push
cld
aaa
fwait
cmp
add
add
xchg
jp
pop
out
push
mov
dec
or
fildl
cmp
movb
push
daa
push
fdivs
dec
dec
cwtl
dec
ljmp
into
add
mov
lods
jg
cmc
imull
mov
push
mov
xor
jecxz
push
lock
hlt
xchg
sub
scas
subb
mov
jb
aaa
pop
lret
ss
mov
or
cmpl
pop
dec
push
add
fdivrl
stos
dec
aad
imul
popa
dec
fildll
cltd
pop
fidivl
mov
add
lds
ljmp
sub
jns
sub
sbb
fstpl
mov
das
cmp
mov
pusha
test
test
mov
sti
out
ret
jnp
cmp
in
addb
stos
sub
adc
scas
mov
aas
pop
rorl
sbb
rcrl
clc
xchg
sub
mov
call
pop
fsubl
das
lret
dec
fistl
sti
cltd
pop
aas
mov
sub
xchg
test
push
pop
pop
cltd
scas
xchg
arpl
arpl
xchg
push
mov
mov
sbb
test
sbb
aam
jecxz
inc
push
mov
mov
add
dec
sbb
mov
rorl
and
inc
in
neg
and
out
inc
xor
into
xchg
mov
shlb
cmp
jl
adc
inc
in
add
bsr
mov
xor
test
fwait
or
repz
pop
daa
cmp
pop
hlt
and
mov
jmp
and
sahf
push
data16
testb
mov
and
jne
lcall
xor
pushf
loopne
pop
push
sbbl
inc
push
jo
mov
add
mov
dec
mov
jae
mov
inc
mov
inc
sbb
jb
fisttps
es
int3
in
jo
mov
add
and
es
mov
inc
jbe
jp
lcall
popf
pop
and
push
ret
js
outsl
cmp
sbb
add
inc
pop
or
leave
inc
jmp
fdivrl
jnp
jb
and
icebp
repz
rcll
mov
outsl
cmpsl
fildl
sahf
aas
pop
push
mov
aaa
popa
dec
test
inc
loop
out
jmp
cwtl
int3
mov
lret
xchg
ror
rorb
cmp
cmpb
rolb
xlat
ss
jge
mov
xor
lock
mov
xchg
push
shl
daa
aam
rclb
adc
pop
and
cmp
pop
mov
mov
xchg
out
pop
sbb
lods
and
dec
fsubr
dec
sbb
adc
push
stc
add
jnp
add
jge
add
sub
adc
xlat
cmp
cmp
lahf
shl
js
movsl
hlt
int
mov
jp
push
mov
mov
cmpsb
cmp
pop
hlt
ret
fcoms
adc
mov
cmp
push
gs
loopne
jg
rorl
sahf
aam
sti
and
mov
scas
inc
inc
jns
add
or
lods
in
aas
jecxz
mov
ret
pushf
int3
mov
mov
dec
inc
lock
pop
orl
mov
jbe
push
lret
out
repz
jp
jno
es
xchg
jmp
sub
mov
cmpsl
xchg
loop
or
mov
out
movsb
xor
sbb
pop
xor
mov
lret
adc
sub
scas
xchg
xchg
mov
mov
scas
mov
sbb
lea
jmp
adc
xlat
inc
cmp
adc
leave
in
test
adc
gs
sti
stos
lock
pushf
hlt
dec
inc
add
inc
dec
cltd
repz
lods
bndstx
lods
popf
sbb
shr
ljmp
pop
cmp
stc
pushw
inc
arpl
jnp
push
aam
ss
mov
bound
test
aas
lods
xor
inc
and
scas
xchg
dec
popa
mov
add
inc
into
fldl
int
cmp
push
pop
inc
gs
and
dec
lret
adc
mov
dec
xchg
xchg
adc
lds
and
push
mov
lea
adc
iret
xchg
dec
push
mov
ds
add
daa
mov
add
push
add
sub
or
ficomps
dec
or
xchg
inc
pop
add
bound
ss
ret
subb
xchg
ror
xor
mov
xor
dec
out
adc
test
mov
inc
shll
shll
lahf
std
mov
icebp
or
aaa
adc
test
andl
push
scas
cmp
insb
add
push
xchg
jb
push
daa
xchg
popf
ficoml
rcrl
lds
repnz
pop
ds
jbe
xchg
mov
call
adc
fldl
arpl
mov
jns
pop
aam
out
sbb
stos
iret
daa
push
inc
repnz
push
and
in
fcmovne
cmpsl
adc
clc
or
push
sahf
or
daa
ret
gs
and
push
pop
aas
pop
push
xlat
xor
sub
fwait
pop
mov
jl
mov
inc
jge
push
vphaddwq
lcall
push
movsl
fildll
outsl
jne
mov
dec
dec
lret
mov
sbb
fwait
sbb
xor
into
or
inc
mov
scas
pop
popf
cltd
dec
movsl
fldenv
inc
pop
sbb
cmpsl
jmp
imul
sub
lret
and
fs
cmpsl
and
scas
adc
mov
popf
xchg
and
in
push
pop
push
and
pusha
stos
jmp
or
mov
or
lea
fwait
loopne
mov
xchg
mov
pop
mov
mov
inc
push
icebp
out
call
sbb
fdivrl
popa
shrl
mov
and
mov
mov
cmpsl
loopne
mov
mov
test
jbe
cld
int
add
nop
push
mov
and
inc
gs
sub
lcall
pop
mov
mov
icebp
sub
shll
mov
loopne
inc
in
test
dec
inc
push
ja
ss
adc
or
roll
dec
and
pusha
lds
lret
mov
mov
dec
dec
test
push
cli
inc
cmp
scas
and
mov
mov
cltd
test
ljmp
add
inc
adc
ss
xchg
sub
loope
mov
cs
movsb
sbb
dec
rcr
inc
mov
mov
dec
fmuls
fadd
xchg
hlt
mov
pop
jg
orl
sti
aas
or
sarb
sbb
js
push
das
adc
shll
ljmp
loope
daa
xchg
push
push
pop
jo
jne
cmp
sub
ds
ljmp
nop
xchg
sarl
out
dec
mov
or
out
shlb
mov
mov
aaa
scas
fwait
jnp
mov
ror
add
popf
fnstsw
gs
xor
in
pop
fbld
cmp
jae
sub
insb
fcom
decl
dec
xor
sbb
dec
dec
popf
loope
aad
fisubrl
loop
mov
popa
fidivl
jo
jge
sbb
rolb
mov
mov
adc
ficompl
mov
xchg
adc
testb
repnz
xchg
mov
sbb
loope
jbe
dec
mov
into
nop
jl
fcmovb
push
mov
add
sub
mov
xchg
in
push
or
or
sub
mov
imul
adc
repnz
jbe
sbb
xor
jle
sarl
push
rorb
enter
hlt
leave
mov
aad
dec
inc
lods
cmpsb
fucomip
test
sarb
mov
or
sbb
lret
mov
roll
and
in
and
jns
mov
repz
xchg
outsb
xchg
or
xchg
mov
fcomp
stos
or
aam
jl
cmp
pop
push
inc
sub
lcall
mov
jno
mov
pop
sbb
ljmp
fwait
iret
call
std
int3
icebp
jl
daa
jbe
pop
out
rcl
sbb
fmul
add
sub
repnz
xor
push
out
adc
ja
leave
push
inc
cmp
xor
fs
pop
cmpsl
xchg
ds
jecxz
ret
xor
das
fdivrl
or
orl
call
data16
sti
mov
or
mov
popf
mov
dec
loop
mov
idivl
jno
into
xchg
icebp
pop
mov
push
outsl
add
nop
rcrb
rcrb
stos
mov
std
xchg
aaa
rcrl
pop
cld
iret
mov
dec
dec
ja
popf
cmp
xor
in
mov
mov
ljmp
cmp
mov
jne
orl
das
out
outsb
pop
mov
inc
stos
repnz
mov
mov
imul
sarb
dec
pop
imul
dec
pusha
push
pop
call
cmp
sbb
mov
cwtl
fisubs
pop
aad
push
mov
rcl
dec
movsb
adc
fwait
inc
cwtl
jp
jl
adc
mov
je
mov
dec
scas
xor
test
aas
lahf
fmull
in
pop
and
in
rcll
fists
or
sbb
out
and
lcall
lods
gs
pop
aaa
ja
es
xor
fs
loopne
js
in
and
cmp
push
jg
adcb
or
sbb
clc
mov
imul
sbb
ret
mov
cvttps2pi
sub
pusha
fs
sub
imul
push
cmp
pop
xlat
dec
cmp
dec
adc
jno
adc
mov
cmp
bound
sub
or
and
cld
or
maskmovq
loope
icebp
cmp
in
cmpsb
or
pop
popa
jo
pop
sub
popa
dec
mov
ljmp
push
add
test
mov
xlat
rcrb
inc
jecxz
cmp
es
movb
cmp
push
pop
xor
imul
scas
and
lret
and
adc
cmp
loop
or
and
in
int
mov
add
cmp
pop
dec
push
clc
test
clc
cmp
adc
push
cwtl
leave
cmp
movl
or
lahf
and
fs
push
jle
repnz
ficomps
lcall
loope
mov
jno
sub
xchg
pushf
xor
add
sub
xchg
ds
imul
rcll
xchg
mov
ret
test
leave
test
adc
loop
dec
aam
int3
or
cmp
insb
and
ss
add
or
stc
pop
push
mov
sub
pop
inc
pushf
push
or
mov
mov
lahf
or
insb
pop
add
xchg
cmp
and
cld
inc
dec
outsl
shll
stc
test
ret
stc
push
push
sbb
add
insb
mov
adc
pushf
imul
sar
jb
push
mov
inc
orb
jge
inc
stc
pop
inc
mov
adc
roll
dec
fwait
dec
push
or
xlat
push
jne
pop
mov
movl
arpl
dec
mov
add
add
jp
imul
jle
xor
lea
ret
add
sbb
lcall
mov
out
jne
lds
sub
inc
in
mov
std
xchg
out
cmp
jns
cmp
or
jno
iret
mov
mov
jmp
sti
pop
loop
inc
repz
and
jge
inc
loopne
std
add
es
ljmp
inc
xchg
mov
stc
dec
push
push
push
loope
negb
mov
mov
mov
jae
sbbl
sub
lea
cmp
ljmp
loop
stos
nop
cmp
sbb
hlt
or
sub
pop
jno
cmp
inc
stos
movsl
push
ret
push
pop
call
mov
cs
xor
xor
ds
pusha
insb
mov
ficoml
push
pop
pop
cmp
vpsadbw
mov
xor
stos
mov
in
and
addr16
outsl
incl
lock
out
jb
mov
popl
imul
fnstenv
add
inc
leave
in
rcrl
mov
mov
ljmp
add
dec
sbb
and
movsb
add
stos
mov
cwtl
test
push
jg
cmp
out
adc
test
cld
out
cmp
lods
nop
rorb
lret
xchg
xchg
sbb
add
sarb
pusha
adc
pop
cmp
ficompl
pop
dec
fwait
pop
jne
jecxz
push
repz
pop
jg,pn
mov
pop
push
notl
lock
outsl
js
in
push
addb
push
nop
pusha
fbstp
mov
pop
loop
mov
pop
sbb
and
xchg
xchg
xor
xlat
outsl
push
bound
mov
fistpl
xor
insl
push
lock
push
or
xchg
push
cmp
out
and
lea
xchg
push
xor
nop
fbld
in
push
cltd
cmpsl
adc
sub
aas
aaa
xchg
push
mov
icebp
jb
pop
and
jae
and
cmpsl
aas
mov
repz
pop
jle
rorb
jmp
mov
inc
bnd
fisubrs
push
inc
out
lcall
lret
adc
in
sbb
and
and
fnsave
nop
xor
cmp
rcl
pop
pop
adc
test
test
mov
sub
nop
push
xor
subb
or
and
push
stos
mov
cltd
ret
push
test
fiadds
push
bound
mov
sub
mov
stos
cs
xchg
xchg
or
mov
mov
pop
xchg
out
sbb
pop
fucomp
cmpsl
scas
scas
jl
adc
lods
push
pushw
ja
imul
outsb
aad
ja
adc
lcall
roll
sub
das
mov
out
push
test
rcr
loop
test
xchg
and
dec
enter
das
int
xchg
jbe
dec
cmc
mul
out
cmp
cs
jns
ds
fldl
push
out
jp
ss
and
lds
repz
fbstp
sbb
jbe
sarb
dec
test
std
sbb
sub
adc
adc
adc
mov
movsl
xchg
shll
in
mov
and
sub
enter
insb
daa
std
enter
fmuls
add
pop
add
xchg
outsb
nop
lret
cmpsb
and
and
xor
dec
adc
jg
into
push
cmp
push
outsl
imul
pop
pop
push
scas
out
push
lret
jbe
mov
int3
pop
add
and
scas
movsb
aaa
xor
xchg
mov
scas
push
rol
sub
lods
out
pop
aaa
clc
sub
lods
sahf
in
orb
cmp
cwtl
ror
int
and
inc
shld
mov
xchg
loope
cwtl
sbb
dec
test
add
lods
add
loopne
push
cmp
mov
xorb
and
jl
inc
and
adc
lcallw
cwtl
in
fcomp
aad
icebp
mov
je
dec
adc
push
adc
cmp
rol
cmc
xor
mov
xor
or
out
sub
pop
out
xchg
pop
rorb
mov
subb
das
ja
push
and
xchg
das
imul
and
mov
mov
movsl
mov
mov
js
leave
push
ds
and
into
andb
inc
mov
nop
pop
push
push
inc
xchg
stos
lret
lret
fistpl
fdivl
pop
or
into
and
jecxz
les
flds
adc
sar
mov
in
xor
cltd
xchg
push
jl
push
dec
in
fidivl
fistpl
ja
mov
mov
mov
mov
xchg
bound
inc
inc
adc
sub
xor
mov
cmp
aas
arpl
mov
cmpb
and
lret
jno
pop
jp
push
sbbb
xchg
movsl
xchg
repz
mov
les
lret
mov
pop
jns
pop
rorb
xor
pop
xor
test
pop
mov
sub
jle
dec
and
or
outsl
cmp
dec
adc
lock
dec
jmp
push
sti
xchg
push
ret
push
scas
push
dec
in
popa
outsl
out
push
repnz
cmp
xor
mov
mov
mov
add
movsb
dec
mov
mov
mov
or
dec
adc
call
fs
push
jmp
int3
or
push
dec
fdivs
fisubrl
icebp
test
sub
icebp
pusha
push
push
cmp
gs
enter
testl
push
in
call
out
sbb
pop
inc
das
in
push
xor
test
pop
loopne
inc
in
hlt
cmpsl
movsl
sbb
jbe
add
sbb
jae
out
enter
outsb
sbb
cmc
mov
aas
jae
mulb
insl
add
and
xlat
sbb
cmp
mov
adc
mov
jnp
test
cwtl
imul
sub
mov
push
es
sub
add
pop
cmp
fs
and
adc
mov
push
pop
pop
sub
gs
lahf
push
in
cltd
sub
insl
push
cwtl
adc
popa
daa
add
movsl
push
movsb
and
sbb
mov
fwait
sub
add
into
and
pop
ret
notb
cli
mov
xor
adc
add
sbb
xchg
push
jecxz
aad
in
adc
ja
xchg
mov
lret
xlat
out
mov
mov
or
mov
pop
sahf
fstpt
call
and
addb
pop
mov
xorb
mov
or
inc
cmp
dec
xor
daa
jns
testb
adc
rorb
mov
ja
sub
sub
test
jbe
or
ja
out
mov
outsl
sbb
xchg
pushf
aaa
adcb
mov
sarl
mov
add
mov
out
das
subl
out
adc
out
push
jmp
push
clc
stc
leave
fisubrl
out
mov
and
sub
dec
fidivrs
test
mov
outsl
inc
xchg
jne
out
cmpsb
aaa
pop
push
rorb
mov
jmp
adc
pop
cmp
push
jecxz
dec
mov
shrl
pop
lret
pop
cltd
addr16
adc
mov
adc
sub
ret
cltd
pop
mov
mov
cmp
mov
cltd
dec
lret
movsl
in
add
dec
jp
pop
arpl
mov
mov
jg
inc
dec
pusha
mov
mov
sahf
add
loope
adcb
cmpsb
stc
sti
and
imul
frstor
push
mov
sbb
shrb
cmpsl
push
pop
in
popa
cmpl
jle
ljmp
fistps
xor
lock
mov
jp
xchg
into
cli
cmp
sti
jb
mov
jb
sub
cld
iret
add
mov
test
call
lret
pop
pop
fsubs
push
std
jmp
idivl
int
push
outsb
jmp
cmp
mov
and
xchg
push
loopne
lods
mov
fldcw
push
test
subb
scas
or
jne
cmp
shll
into
aad
mov
js
jb
imul
xor
jecxz
adc
aas
int
and
jmp
jno
xchg
push
addr16
cs
and
fnstcw
es
cli
push
lds
out
in
stos
push
or
std
push
mov
sub
loopne
push
xor
test
push
cmp
cmpsb
push
mov
leave
mov
insb
adc
xchg
cmc
out
push
int
jb
mov
repnz
add
fisttps
add
std
mov
dec
pop
in
jg
aaa
sbb
in
mov
pop
dec
ret
or
jo
sub
xor
xor
xchg
cmp
xchg
sub
pusha
pop
pusha
sti
jg
xchg
pushf
fidivrl
popf
and
xchg
pop
and
xbegin
sbb
or
sbb
cltd
out
stc
xchg
daa
aam
and
xor
aas
iret
or
inc
cwtl
lods
inc
aas
or
scas
push
sbb
lock
test
add
sbb
and
subl
jl
jle
fs
sbb
in
fiaddl
negb
fsubrl
push
in
ljmp
dec
rcrl
inc
xchg
fimull
lods
sub
pop
adc
jae
pop
cld
jns
xchg
out
sarb
movsl
add
js
pop
outsb
or
inc
pop
xor
mov
cmpsw
add
push
mov
out
push
mov
push
dec
xchg
jae
xchg
lods
add
rol
rorb
mov
mov
aam
push
pop
and
scas
stos
jns
pop
fmul
mov
es
mov
loope
in
xor
and
xor
add
cmp
mov
xor
mov
sahf
mov
jns
mov
dec
mov
das
int
loop
mov
fcomps
mov
add
mov
cltd
adc
lea
xchg
mov
mov
leave
and
jmp
mov
push
pop
or
sbb
push
shll
mov
ja
pop
inc
add
dec
leave
sbb
ds
pushf
ret
fnstenv
lods
int
mov
mov
pusha
aad
pop
clc
in
adc
cmp
cld
fildl
xchg
inc
lods
mov
or
mov
xchg
or
mov
lock
scas
int
jb
xor
mov
inc
push
fcoml
push
jns
fldcw
aam
dec
fimull
mov
imul
imul
jno
lret
xor
mov
jl
mov
stos
xlat
jns
sbb
inc
js
xchg
pop
les
hlt
fiaddl
data16
jmp
test
mov
fs
sbb
pusha
jne
sbbb
aas
out
enter
arpl
insl
dec
ret
cmp
sub
dec
lret
sti
pusha
jnp
inc
inc
mov
jge
xor
inc
inc
add
jae
and
dec
sbb
mov
in
scas
xchg
leave
mov
xchg
pop
das
xor
inc
xchg
fs
int
xchg
push
inc
xor
add
mov
lcall
cmp
xor
push
or
lahf
test
adc
or
sbb
fs
dec
xor
les
or
xchg
fwait
pop
cmp
xchg
aad
cmp
pop
push
inc
rcl
sti
rcrb
mov
push
add
cltd
lds
jne
shlb
push
xchg
stc
or
xchg
sub
fdivs
push
lcall
nopl
loop
pop
jmp
xor
add
cwtl
sti
orl
push
sti
sti
and
sarl
dec
mov
dec
pop
leave
cmp
insb
leave
inc
xchg
mov
leave
insb
fisttps
jg
push
push
xchg
lds
xor
sbb
frstor
arpl
pop
inc
fwait
arpl
ficoms
test
mov
sub
test
ficomps
sub
sahf
cmp
dec
cmp
les
adc
dec
je
call
sbb
pop
stos
sahf
sub
stos
imul
mov
fsts
xchg
cmp
mov
sbb
push
leave
lahf
movsb
cmpsb
sub
lock
cmp
sub
mov
sub
imul
mov
sub
ss
rolb
add
mov
cli
rclb
mov
jmp
and
dec
pop
ret
int
mov
inc
dec
push
ret
aaa
adc
mov
mov
jp
push
jl
sbb
jecxz
fcompl
sarb
iret
shrl
shrb
test
out
jge
sbb
rcr
cmpsl
aaa
setnp
loope
cmp
inc
lods
add
ficoml
cs
mov
dec
lods
and
sbb
add
insl
jns
fcmovbe
dec
lcall
inc
adc
mov
xorl
fld
sbb
or
xlat
jle
andl
aam
pushf
jmp
jp
xor
mov
mov
and
jno
xchg
inc
rcr
ljmp
dec
nop
fstpt
xchg
test
scas
loopne
sti
sbbb
sub
push
addl
fwait
bound
adc
inc
fisubrl
sub
imul
push
add
sub
push
ljmp
dec
movsl
loopne
mov
sbb
cs
dec
adcl
cmpsb
rcrb
pop
leave
sbb
out
roll
jl
loopne
fcomps
mov
insb
aad
and
test
pop
mov
or
movl
jns
push
sti
out
push
fdiv
ss
daa
or
out
sbbl
cmc
jae
lret
xlat
fildl
jl
push
mov
filds
push
test
dec
fldl
stc
pop
and
xchg
aad
sub
dec
sahf
pop
lock
fistpll
and
pop
hlt
sub
jecxz
jp
aaa
hlt
push
xchg
xchg
xor
dec
dec
sub
pop
fnsave
cltd
repz
sub
adcl
ret
divl
sub
sub
jmp
lcall
es
loope
addr16
inc
pop
pop
je
mov
push
clc
jmp
mov
add
in
jp
or
or
data16
ss
testl
cmp
loopne
push
or
push
or
cmp
shlb
jmp
jbe
mov
out
ds
sub
rcll
pop
add
inc
pop
sbb
andb
adc
inc
or
fcmovne
addr16
add
add
lret
pop
popa
pop
in
xor
enter
dec
lea
in
add
cltd
lods
sti
pop
fst
imul
loopne
fbld
cmpb
add
ds
mov
inc
test
xor
push
cli
lods
sub
cmpb
mov
xor
xor
fisttpll
mov
adc
and
xchg
push
push
imul
lcall
and
and
or
icebp
cmp
sbb
mov
movb
idivl
xchg
out
mov
clc
mov
mov
jge
cltd
insb
subl
adc
insl
pusha
std
mov
rcr
cmp
sbb
js
ljmp
ss
out
sub
stc
test
dec
mov
loopne
sbb
cmp
jo
std
jno
mov
pop
xor
inc
mov
jae
lods
scas
fucomip
and
cmpsl
leave
rolb
xchg
test
mov
repz
and
bound
and
add
jl
repz
roll
pop
std
movsb
data16
xchg
inc
lock
pop
xchg
or
adc
and
fwait
adc
mov
iret
aad
popf
mov
mov
out
in
xor
cmp
test
dec
pop
lret
mov
in
push
mov
popw
fdivl
or
push
sbbl
mov
testb
loopne
cmp
imul
sarl
mov
add
mov
sbb
js
add
fnstcw
mov
movsl
pop
mov
jb
jle
test
js
mov
arpl
dec
mov
lods
cmpl
push
or
cmp
flds
out
xchg
inc
lods
jecxz
or
dec
dec
inc
inc
jne
sti
push
push
pop
test
sbb
pop
add
sub
inc
jbe
pop
pop
mov
pop
fisttpll
push
repz
adc
movsb
push
pop
xchg
popf
bound
push
xchg
std
iret
sub
stos
pop
sti
scas
or
and
inc
add
sbb
scas
push
arpl
sub
dec
adc
test
int
dec
mov
cli
aaa
inc
pop
imul
adc
das
loopne
or
xor
xchg
loop
int3
repz
jno
xchg
push
fsubl
xchg
fcoms
cmp
out
sbbb
sub
shlb
sub
add
xchg
mov
sub
mov
in
dec
imul
lret
ror
test
mov
add
ds
test
lods
sub
mov
sub
mov
shll
cmp
jnp
or
aad
xor
sbb
pusha
mov
jns
push
test
jae
xchg
pusha
aad
jg
xor
and
sbb
mov
dec
repnz
jno
and
ss
test
lds
mov
aaa
push
jbe
iret
sbb
fcomi
imul
push
pop
mov
sbb
imul
ss
lcall
push
mov
jno
push
gs
mov
das
sub
loop
loopne
jge
lret
mov
popf
pushf
sbb
jo
dec
das
inc
dec
leave
mov
fwait
jne
or
xchg
adc
lods
sbb
lds
or
inc
mov
jmp
ror
loopne
xchg
lea
pop
or
rorb
adc
adc
push
dec
sbb
jbe
inc
cmpsb
into
inc
sbb
mov
lret
inc
lcall
imul
cli
jge
je
add
jge
orl
sub
mov
push
sub
jb
mov
js
repz
int3
dec
icebp
push
loope
jae
push
xor
or
push
insl
mov
out
cltd
test
pop
mov
and
xor
subl
sub
jge
repnz
or
lcall
ljmp
in
sbb
inc
xor
adc
mov
orb
and
cli
mov
cmpsb
fwait
mov
bnd
add
out
sbb
loope
or
fisubl
ljmp
mov
mov
movsl
mov
xor
int
or
sbb
mov
mov
lock
jecxz
add
or
fldcw
out
andnps
inc
es
adc
inc
mov
cli
test
push
ret
jle
push
jg
push
stc
dec
jecxz
adc
xchg
idivb
ret
push
aad
fabs
jns
lods
or
jns
pop
sbb
cmp
loope
and
adc
lock
or
insb
fbld
jle
sub
sub
js
pop
pop
aas
push
fistpll
push
mov
cmp
movsb
test
xchg
int
xor
jns
int3
mov
js
pop
xor
add
pop
fmul
les
das
xchg
stos
call
inc
jl
sar
jg
adc
inc
pop
or
pop
dec
xchg
test
sbb
or
and
push
insb
mov
xchg
inc
js
enter
test
add
sub
lret
push
cmp
fwait
ss
nop
dec
sahf
lret
es
adc
adc
xlat
adc
icebp
xor
xchg
mov
outsl
add
ss
pop
je
mov
in
sbb
addr16
ds
xchg
jo
cld
adc
fwait
mov
dec
and
je
adc
pop
das
mov
out
or
push
leave
sbbl
lods
or
mov
sbb
es
repnz
mov
cmpl
jne
mov
sahf
sbb
sbb
and
test
les
cmc
ss
loopne
cld
inc
inc
mov
inc
xor
cmp
lds
in
sti
push
mov
mov
cltd
imul
lea
mov
jmp
mov
fnsave
sbb
daa
cmp
mov
pop
testb
xor
jp
lods
dec
outsb
xor
jmp
sub
shlb
push
imul
lea
test
dec
jg
inc
ljmp
xor
mov
lds
or
enter
cmp
and
test
mov
add
or
xchg
ret
bound
adc
or
push
mov
mov
jge
pushf
cld
jb
fcomps
mov
jmp
push
jns
mov
mov
leave
pop
sub
xor
mov
push
inc
inc
stc
iret
iret
mov
fadd
icebp
xor
fnsave
jecxz
xor
adc
push
std
cli
mov
gs
fwait
fwait
mov
es
mov
add
xchg
cwtl
or
pop
rol
aad
mov
pop
inc
fst
and
or
sub
push
and
sbb
xchg
xchg
pop
push
stc
jo
mov
jo
insl
fadds
test
cmp
faddl
pusha
xor
lods
lds
push
sbb
adc
push
fdivr
or
popa
jg
add
stc
out
mov
push
pop
fnstenv
js
stos
xor
ret
jns
loop
lahf
mov
ret
sub
mov
mov
je
xor
popf
iret
and
pushf
sub
xchg
aaa
imul
shlb
in
inc
pop
aaa
mov
das
cli
divb
sarl
adc
clc
lcall
icebp
ja
iret
pushf
add
jo
cltd
stos
faddl
outsl
lcall
mov
and
dec
push
sub
xchg
and
ret
and
push
jbe
xchg
lret
jecxz
xchg
push
dec
cltd
in
ffreep
xor
cld
pop
fnsave
out
arpl
sub
xchg
das
loope
in
jo
mov
inc
stc
negb
push
xlat
jle
xor
ret
mov
arpl
sbb
add
scas
dec
lds
enter
sub
sub
insl
jmp
jl
pop
and
addr16
in
in
ljmp
jp
negb
cmp
jo
in
and
adc
sbb
insb
fimull
adc
add
in
inc
inc
jnp
mov
push
inc
std
jno
push
cmp
mov
test
mov
cmp
push
in
ret
push
sbb
dec
jmp
inc
out
fwait
je
scas
pop
xchg
popa
mov
stos
sti
push
mov
je
xor
mov
push
jb
mov
je
sbb
dec
xor
jne
shlb
mov
mov
pop
or
xor
or
aas
add
out
xor
pop
xchg
inc
inc
push
fstps
push
imull
aaa
push
xchg
mov
dec
adc
roll
cmp
outsb
xchg
loop
push
lods
xor
adc
rolb
pushf
xor
dec
sub
and
cltd
mov
sub
lods
loop
xor
sbb
test
aad
push
fidivrl
pop
icebp
pop
pop
xor
and
jbe
out
call
pop
adc
ss
roll
and
sbb
sub
test
add
inc
or
push
mov
rorb
aad
cld
addr16
mov
or
or
inc
xor
and
fcoms
mov
and
enter
jne
jg
xorl
addr16
or
js
aaa
xchg
push
or
shll
inc
int
mov
aad
jg
mov
adc
cmp
push
decl
bound
fs
dec
data16
ss
jmp
push
lds
out
imul
shrl
out
jne
xorb
test
xor
xchg
call
mov
lret
movsb
frstor
sahf
shll
mov
sub
sbb
push
loope
mov
cmc
and
scas
or
in
pop
mov
test
jp
imull
and
jmp
iret
mov
add
add
loopne
pop
cmp
pop
cltd
aaa
stc
push
andl
je
mov
lret
and
jae
add
jns
cwtl
mov
mov
insb
lret
sysenter
loop
jl
into
out
dec
inc
inc
jge
into
push
out
sbb
icebp
push
in
fsubrs
xchg
inc
mov
push
in
icebp
ja
cmp
lods
cltd
cmp
sbb
sbb
adc
std
xlat
mov
xor
or
sub
and
insb
dec
lcall
adc
inc
ds
mov
aaa
std
lods
jle
aad
dec
xchg
sbb
cld
adc
sbb
in
jbe
sbb
in
xor
mov
or
hlt
cmpsl
dec
pop
xchg
xor
mov
push
jmp
push
pop
ljmp
xor
mov
jo
sbb
sub
lock
jge
sub
lods
add
fcmovnb
fst
repz
fwait
pop
loopne
test
mov
jnp
xor
aam
xor
push
mov
mov
fwait
fbstp
rclb
test
inc
nop
lret
mov
cmpsl
xor
out
xchg
mov
and
scas
imul
je
cmova
ret
je
imul
hlt
dec
arpl
xor
sub
xchg
and
mov
push
xlat
and
sahf
mov
push
pusha
inc
xchg
jl
push
xchg
rolb
pop
and
int
repnz
push
ret
pusha
lods
push
adc
loopnew
inc
call
outsl
lahf
cmp
decb
fwait
push
insb
cs
aaa
in
gs
mov
pop
push
pusha
cmp
mov
adc
xor
adc
repz
flds
xchg
dec
icebp
negl
xchg
sub
lods
push
and
fs
or
fldt
dec
jno
in
es
push
sti
mov
ss
fbld
pop
cmc
fldcw
mov
fisubrs
adc
fnstenv
js
jo
add
movsl
xchg
dec
in
into
sti
call
jbe
out
mov
pop
mov
jecxz
rolb
mov
cmpsl
sti
pop
jo
push
push
lret
mov
jne
les
xor
mov
and
lret
jl
ret
and
lahf
loopne
cmp
jp
dec
xor
xlat
insl
xchg
sub
mov
push
rol
push
add
imul
xchg
mov
data16
inc
xchg
aaa
es
add
lock
fnsave
dec
add
mov
jp
bound
int3
xchg
and
xor
push
push
dec
orl
imul
xor
xchg
pop
mov
in
hlt
cld
popa
jns
orb
push
daa
les
xchg
pop
ret
cmp
push
xchg
in
xor
imul
arpl
mov
imul
dec
push
mov
lahf
idivl
shlb
sbb
fsubr
mov
int
int
loop
mov
aas
pop
loop
movsl
sbb
idivl
push
sarl
push
mov
aam
jecxz
mov
test
leave
sbb
mov
dec
cli
and
shrb
push
dec
out
mov
lahf
out
xor
cmp
in
mov
add
jo
ds
mov
rcrl
outsb
xor
xchg
frstor
push
insl
jle
insl
pop
sub
popf
fldt
inc
aas
sub
push
stos
mov
cli
add
repz
add
stos
add
nop
add
pushl
addr16
lock
rcll
test
sbb
push
cmpl
ret
imul
xchg
aaa
and
lea
jb
loope
cltd
cmp
ja
inc
outsl
cmp
pop
or
push
sbb
pop
loopne
in
je
inc
push
mov
test
sahf
pop
fmulp
in
jp
xor
cmp
xor
fcom
mov
inc
or
bnd
pop
cmp
loop
adc
mov
jle
cmp
dec
out
or
lock
xchg
sub
in
xchg
imul
mov
fcomip
shl
loopne
sahf
imul
xchg
lods
je
movb
mov
jge
or
jge
add
icebp
mov
mov
jge
sub
pop
dec
fistl
lock
inc
xor
mov
test
call
faddp
jg
cmp
clc
jb
fs
leave
repz
cmc
loop
insl
frstor
push
mov
add
movsl
dec
fistps
mov
js
mov
popf
repnz
insb
stc
sahf
cmpsl
adc
jb
cs
out
push
sbb
inc
dec
jmp
fiaddl
mov
inc
lahf
sub
jmp
add
inc
dec
out
mov
dec
xor
shll
or
and
aad
inc
mov
je
xor
or
jg
xchg
cli
dec
lret
insb
jmp
mull
les
notl
jp
int3
xor
aaa
push
mov
sub
out
jle
mov
jbe
fadds
mov
fidivl
divl
ss
adc
lods
ljmp
mov
mov
imulb
pop
or
push
xchg
les
or
cmp
and
adc
sub
xchg
xchg
mov
and
jg
scas
mov
out
mov
mov
mov
xchg
aam
add
cmpsb
aas
popa
xor
pop
mov
pop
mov
loope
mov
fnstcw
popf
out
repnz
pop
in
sub
sahf
dec
aad
sub
stos
lock
jl
jmp
es
mov
stos
fsubrs
dec
test
sub
shl
pop
mov
mov
jo
fcomps
mov
lret
clts
pop
pop
and
xchg
cmpsb
mov
out
stc
rorl
add
pop
pushf
cs
or
fistl
xchg
mov
cmp
daa
adc
jmp
mov
push
bound
out
jle
inc
mov
hlt
sub
mov
outsl
pop
repz
ret
jle
or
sbb
push
nop
mov
cmpb
rcll
cli
or
cmc
repnz
jg
aaa
inc
ret
sbb
arpl
xlat
sbb
mov
imul
mov
lahf
mov
push
xchg
aam
jns
fldenv
out
fst
lcall
shll
test
inc
testl
das
clc
xor
roll
dec
xchg
ljmp
mov
arpl
or
sbbb
lods
imul
movsb
mov
mov
mov
add
cs
addb
in
inc
int3
inc
lods
xchg
xlat
icebp
arpl
insb
cmc
mov
xchg
dec
nop
je
into
dec
lret
dec
jle
and
fs
push
ss
mov
or
inc
mov
sub
xor
jo
mov
fnstenv
into
sub
push
loopne
adc
sub
mov
jge
push
and
sbb
jno
dec
addl
stos
dec
addr16
filds
pop
add
push
rcl
popf
gs
inc
mov
fsubr
cwtl
daa
push
or
add
xchg
push
fisubrs
iret
loop
mov
das
dec
lea
nop
xchg
decl
xchg
imul
pusha
sbb
add
mov
and
add
jne
mov
test
fucomi
aad
lea
and
dec
repz
xor
in
xchg
pop
ret
sub
cmp
inc
cld
mov
and
dec
mov
jl
aas
inc
aaa
out
adc
loopne
mov
mov
jo
mov
test
pop
jp
aad
dec
xchg
cmovnp
mov
popf
sbb
dec
cmp
and
repz
outsb
mov
fsubl
stos
hlt
fucomp
xor
pusha
jns
sub
xchg
scas
mov
test
jle
ret
cmp
mov
frstor
fadds
lret
xchg
inc
outsb
jnp
adc
push
cli
dec
sub
xchg
test
mov
mov
pop
sub
cmovnp
pop
push
jl
or
push
cmp
dec
push
adcl
std
and
xchg
xchg
push
loop
pushl
pop
adc
dec
outsb
pop
mov
push
push
ror
popf
xchg
daa
sbb
push
popa
cmp
and
xor
push
push
xchg
int
lahf
shrl
hlt
xchg
fcoml
out
mov
inc
jl
ficoms
jge
loop
mov
sahf
stos
mov
pusha
sbb
pop
loop
pushf
cmp
dec
aad
xor
test
cmp
dec
mov
stos
popa
mov
mov
in
je
adc
iret
pop
fstps
cld
imul
cmp
ja
and
sbb
mov
xor
fildll
cmpsb
imull
inc
xchg
out
push
movsl
mov
xlat
daa
in
test
es
cld
inc
aam
or
mov
xor
sti
dec
jg
xchg
pop
sahf
xchg
and
xchg
add
lcall
stc
add
out
adc
addr16
jg
jo
pop
cmp
xchg
clc
sbb
xchg
dec
sbb
scas
dec
test
push
scas
daa
push
mov
jno
shr
mov
or
andl
jnp
xlat
ss
das
mov
mov
out
cmp
fsubrs
mov
rcrl
fsubl
jo
cmpsl
xchg
lcall
ret
out
inc
inc
decb
sub
pop
add
daa
cmc
jb
xchg
rol
xchg
movsb
dec
popf
sti
xchg
mov
movsb
cmp
popf
fidivrs
bound
dec
out
mov
pop
movsl
xchg
or
sbb
sub
ret
xchg
decb
cld
sbb
loopnew
add
dec
cltd
aad
xor
mov
cld
into
mov
fldcw
xchg
mov
dec
call
pusha
push
push
sub
mov
mov
and
int
data16
out
sbb
xor
popa
dec
in
sub
popf
mov
outsb
pop
sub
adc
imul
scas
inc
adc
mov
jmp
cmp
sub
popf
adc
dec
pop
sarb
mov
rorb
daa
fadds
mov
leave
inc
test
mov
ds
sti
pop
adc
sbb
lret
or
scas
push
daa
test
push
or
test
pop
outsl
stc
ss
iret
xor
stc
pushw
inc
mull
adc
loope
jae
lds
xchg
ja
ror
ret
and
add
xchg
cmp
scas
mov
popf
jo
pop
inc
mov
fisttpll
cmp
pop
mov
nop
imul
dec
and
mov
orl
push
xchg
cmpsl
es
test
or
dec
add
xchg
adc
mov
pop
and
outsl
mov
push
xor
and
jecxz,pt
mov
push
add
jns
dec
ljmp
int
cltd
negb
das
stos
stc
xchg
arpl
add
mov
pop
loope
and
ljmp
pop
jb
shrb
inc
dec
jp
out
test
pop
mov
mov
mov
push
dec
mov
in
add
sbb
stos
in
adc
and
in
out
xchg
cmp
repnz
in
sbb
push
jns
imul
or
fisubrl
sub
mov
outsb
cmp
scas
mov
lcall
popa
cmpsb
mov
mov
cmpsl
push
adc
lcall
out
scas
pop
stos
dec
lock
pop
data16
test
sti
add
jge
adc
jnp
mov
xchg
dec
ljmp
loopne
pop
jge
clc
pop
pop
lahf
inc
mov
mov
ds
push
mov
cltd
rcrb
inc
mov
or
lcall
mov
imul
xor
mov
xor
xlat
xlat
or
dec
or
sbb
mov
pop
jmp
dec
mov
sub
icebp
frstor
out
sahf
xor
clc
out
aam
add
add
int
jnp
enter
fbstp
jo
xchg
and
fnstenv
sub
fcompl
push
sbb
push
inc
sub
mov
ret
je
push
scas
inc
ret
mov
imul
sti
repnz
fisttpl
jl
push
push
add
lods
jge
xchg
fildl
icebp
jmp
xor
fisttps
arpl
pop
add
ficompl
in
popf
mov
sub
aad
mov
mov
mov
outsb
cmp
sub
orl
out
in
mov
dec
cmp
mov
in
pop
out
adc
xor
or
mov
rcrb
test
mov
pop
dec
gs
lcall
xchg
sub
das
loopne
shlb
pop
jae
sub
aaa
xchg
mov
inc
pop
popa
in
outsb
jg
ljmp
xor
sti
out
cmp
inc
fs
roll
lods
aas
push
andb
or
ret
divl
scas
lcall
out
test
add
imul
movsb
mov
nop
mov
cmp
decl
xchg
fwait
sbb
addr16
adc
hlt
cmp
jne
add
xlat
imul
sbb
and
fbld
cwtl
mov
add
push
ljmp
filds
mov
inc
push
mov
lds
lds
xchg
mov
sahf
into
scas
movsb
and
fidivrs
incl
inc
scas
jne
mov
xchg
stos
cmp
mov
mov
popa
add
cld
subl
insb
push
lods
push
add
fwait
in
pop
and
or
mov
rcrb
out
lcall
mov
jne
xor
stos
jo
cwtl
xor
xchg
mov
mov
les
loop
sahf
xchg
mov
popf
rcr
cmp
inc
adc
mov
stos
xor
xor
ret
mov
push
jb
jmp
popf
jge
xchg
sti
clc
das
mov
lahf
add
data16
out
insl
sbb
aas
enter
inc
add
inc
xor
std
pushf
dec
dec
in
and
mov
add
ja
scas
adc
sbb
sub
or
add
or
sbb
pop
int
inc
pushf
push
lcall
repz
mov
xchg
bound
sbb
dec
cmp
jl
sbb
inc
xor
shlb
notb
dec
pushl
xor
sub
xchg
push
mov
aad
ja
cmp
cmp
in
adc
inc
andb
push
ror
pop
push
cmp
lcall
push
add
sub
stos
popf
cli
cltd
inc
pop
dec
mov
icebp
outsb
test
jnp
daa
out
lds
mov
sbb
push
bnd
pop
sti
repz
adc
add
mov
sub
mov
jle
div
rclb
push
ja
cwtl
fisttpl
subl
push
mov
pop
jo
addl
push
and
cmp
orl
ss
cli
ror
xor
dec
scas
lret
jb
push
les
pop
mov
xchg
jbe
dec
push
sarw
lods
faddl
sbb
out
test
ret
lods
jnp
sub
sub
sub
cmp
cli
push
sbb
cli
inc
gs
mov
lahf
jecxz,pt
dec
dec
dec
jmp
scas
cs
sub
xchg
mov
adc
jle
jmp
xchg
sbb
les
lret
ds
je
shl
push
sbb
dec
pop
cmp
xchg
mov
call
mov
xlat
icebp
xchg
jo
mov
lock
xchg
leave
cmp
mov
mov
imul
cmp
shrb
dec
dec
shrb
inc
mov
mov
and
jno
out
sub
add
gs
cwtl
mov
jo
add
jnp
mov
xchg
sbb
adc
fwait
ljmp
shrl
lds
repnz
fbstp
and
cs
push
ret
add
and
mov
out
xacquire
jb
jmp
call
xor
cmpsb
lcall
sub
in
into
and
loop
out
xchg
out
jns
scas
xor
dec
mov
lds
inc
cmp
lret
movsb
cmpsb
add
jmp
xchg
xor
jno
jle
xchg
pop
adc
push
push
bswap
arpl
inc
stos
and
sahf
fldt
add
stos
mov
inc
lods
push
push
jg
cmp
jae
test
jl
aas
mov
jl
fdivr
nop
or
ss
hlt
testl
lock
pop
sbb
xor
lret
rcrb
stos
pop
in
adc
lock
cmp
push
cmp
in
fdivr
popf
sub
in
inc
cli
int
notl
mov
call
loope
lret
gs
mov
add
rorl
pop
dec
mov
ljmp
daa
insb
lods
mov
orl
out
push
test
int
stos
inc
sub
bound
mov
rclb
dec
mov
or
mov
sbb
lods
jae
hlt
xor
mov
mov
icebp
shl
scas
mov
fldl
aad
mov
imul
pop
int3
xor
jb
popf
sbb
sar
lret
filds
jl
lcall
lea
cmp
clc
jg
add
or
xor
sub
mov
jbe
std
call
divb
in
jmp
scas
xor
and
popa
sti
push
and
xchg
jo
jmp
int3
mov
pop
mov
hlt
mov
push
dec
out
adc
ss
arpl
and
push
adc
or
loopne
stos
mov
loop
push
dec
sahf
loop
shrl
test
lods
dec
dec
fsubrp
or
hlt
xchg
push
arpl
out
roll
xchg
sbb
sbb
inc
arpl
lds
inc
adc
jae
xchg
mov
xchg
push
fbld
or
rolb
gs
xchg
test
sub
mov
dec
adc
jmp
rcrb
std
cmp
jp
inc
inc
cmpsl
sbb
popa
pop
pop
or
aas
or
test
and
xchg
cmpsl
pop
jmp
mov
aaa
out
rcll
lahf
and
cwtl
xchg
imul
adc
pop
adc
mov
mov
mov
lret
enter
xchg
adc
sbb
dec
rorl
dec
dec
mov
loopne
mov
push
add
jg
bnd
inc
dec
mov
xchg
pusha
cmp
push
lock
mov
je
xchg
mov
out
fisttpll
loop
in
mov
push
push
adc
enter
cli
or
out
lods
clc
or
aas
enter
jle
hlt
clc
notb
in
sbb
imul
es
add
das
testb
pop
les
in
lahf
mov
repnz
and
int3
inc
fdivr
out
jp
lods
mov
push
lea
cld
out
mov
pop
ret
cmp
mov
sti
sbb
pusha
pop
mov
or
push
xor
pop
mov
imul
jo
iret
nop
mov
sahf
jle
dec
repz
push
shll
cltd
rol
rolb
push
fbstp
sub
push
std
and
pop
out
sub
jno
daa
rolb
xchg
or
push
stos
or
inc
popf
sub
mov
xlat
stc
out
cltd
ljmp
mov
sarb
mov
pushf
and
ret
lods
rcr
xor
mov
je
aaa
dec
pop
test
add
test
push
jne
dec
push
mov
popf
lods
gs
cmp
cmp
cmc
xchg
mov
out
sbb
cltd
xrelease
push
adc
xchg
inc
or
dec
xchg
fnsave
mov
out
and
cmp
lods
jno
outsb
push
movsb
addb
bound
loope
push
adc
fstpt
mov
pop
inc
test
sub
fs
fs
call
mov
push
mov
addr16
mov
inc
test
xchg
mov
cld
rorl
js
test
cmp
int
inc
dec
mov
loop
lods
cld
sbb
leave
sarl
jo
cwtl
insl
jbe
mov
clc
xor
cmp
mov
mov
leave
mov
lds
and
aam
lock
mov
cmp
in
sahf
jo
cld
sarl
or
loope
test
je
dec
mov
imul
out
stc
cmc
lods
test
cmp
push
adc
cmp
sbb
bound
xorl
popf
rclb
pushf
sbb
mov
cmp
fdivl
fidivrl
xor
sub
loop
xor
xchg
ret
lds
mov
sbb
mov
and
roll
lret
pop
stos
push
aaa
movsl
lock
and
mov
out
pop
mov
sbb
es
js
adc
ficompl
adc
mov
adc
lods
ds
ret
imul
adc
xor
fwait
or
sbb
or
push
imul
arpl
xchg
stc
pop
inc
sbb
icebp
loop
mov
je
mov
subl
loope
pop
push
pop
movsb
mov
and
pop
pop
adcb
fcmovnb
into
dec
push
rep
scas
mov
mov
jg
or
push
mov
adc
lea
xchg
jg
lcall
and
js
add
jb
pop
mov
out
test
and
in
jo
mov
xor
xor
fnstcw
cmp
dec
sbb
or
loopne
lret
pop
sub
pop
jmp
int3
out
xor
or
push
cmc
inc
arpl
out
les
adc
push
xor
stc
scas
test
jge
mov
repnz
hlt
mov
daa
pop
push
cmp
rol
pop
hlt
mov
adc
stos
jecxz
test
je
push
jae
ret
push
lds
out
aaa
jae
jecxz
fstpl
nop
cmpsl
or
lahf
xchg
inc
daa
ret
sub
add
int
fwait
mov
in
test
cmpsl
dec
sbb
xchg
lods
cmpsb
test
and
hlt
jg
movsb
outsl
lahf
or
push
cltd
out
push
mov
in
mov
cmp
xor
cmpsl
das
out
xor
pop
inc
call
repz
xor
test
jbe
sbb
sbb
dec
lea
push
pop
fnsave
divb
outsb
clc
mov
and
jge
lret
cld
jne
call
in
adc
mov
add
clc
inc
in
cmp
and
cmp
shlb
filds
jge
dec
je
xchg
mov
jl
or
mov
jnp
loopne
mov
js
outsb
push
adc
mov
dec
add
ds
push
and
cwtl
cmp
insl
clc
int
or
push
xchg
jmp
in
fdiv
mov
aas
shlb
jne
leave
aas
aaa
push
test
mov
and
jge
xchg
xlat
push
fmul
sbb
hlt
nop
push
sub
mov
stc
cmp
and
lfs
loope
mov
mov
in
xchg
dec
cld
test
test
mov
cli
mov
xor
call
cmp
mov
mov
add
inc
popf
sbb
mov
cmp
mov
pop
aaa
sbb
mov
cltd
push
sbb
roll
jg
lea
out
cmp
push
sub
cwtl
int
repz
push
std
jnp
call
mov
dec
loopne
std
xor
loopne
sub
stos
dec
stos
loope
rcl
outsb
sbb
icebp
jmp
mov
mov
lret
dec
add
popf
sub
in
into
out
mov
or
ret
dec
mov
insb
push
or
adcl
jge
cwtl
sub
stc
xchg
shrl
add
cmp
imul
push
mov
js
int3
or
adc
push
outsb
repnz
pop
inc
jge
addr16
cmp
mov
mov
inc
adc
xchg
cmp
fistl
xor
into
rcrb
dec
jno
scas
or
cmp
arpl
lods
sbb
sub
sbb
mov
cmp
xchg
mov
xor
shll
out
adc
push
insl
movsb
or
fisubrs
push
inc
js
addr16
jne
dec
sub
idivl
testl
add
insl
ja
and
out
std
ja
pop
pop
and
lret
icebp
dec
mov
ljmp
out
int3
stos
sbb
and
mov
das
mov
push
push
ja
mov
and
push
popf
dec
mov
fildl
inc
push
xor
push
insl
mov
cmp
dec
cmp
sub
lds
mov
lock
mov
cmp
cmp
push
ds
fidivl
mov
sub
sub
xchg
add
mov
hlt
mov
cmp
xchg
adc
add
notl
aaa
mov
int3
cmc
cmp
lods
sbb
adc
cmp
sub
insl
imul
jle
cli
popa
pop
jnp
incb
xchg
stos
dec
ljmp
js
sbb
clc
push
push
in
test
shl
mov
cmp
cmp
ljmp
es
int
xchg
cwtl
cltd
int
or
les
adc
pop
incl
mov
lock
test
push
lods
xchg
test
mov
ja
test
push
push
roll
ljmp
nop
sbb
and
scas
popf
mov
lcall
in
sub
adc
pop
pop
lea
mov
imul
mov
or
fsub
mov
rcll
repz
mov
ja
push
sbb
sub
addr16
icebp
cmp
jns
pop
mov
cmp
jbe
scas
xor
sbb
mov
lahf
mov
mov
sub
stos
pop
adc
push
push
dec
push
out
and
mov
call
xchg
sbb
or
popa
lock
mov
inc
and
ljmp
dec
aad
js
sub
dec
xor
cmp
cmp
pop
inc
mov
arpl
jg
cs
mov
pop
call
lahf
clc
popf
add
mov
mov
jae
cmc
or
dec
inc
movsb
fdivrs
adc
sbb
xchg
dec
fwait
fs
jo
test
cmc
imul
mov
jo
lds
repz
mov
mov
hlt
dec
das
aaa
push
jmp
insb
fldt
jb
iret
fdiv
aas
ror
stc
nop
in
cmpsl
sti
adc
stos
cltd
sahf
ljmp
das
mov
jl
sub
test
ds
jecxz
mov
pop
stos
lahf
inc
add
pop
push
mov
pop
lods
movsb
and
mov
popf
jmp
sbb
push
divb
data16
inc
inc
jno
pop
mov
je
nop
jae
or
xor
iret
mov
ja
in
leave
sbb
xchg
inc
sti
outsl
inc
cmpsb
mov
or
fisubrl
xchg
imul
rol
pop
lcall
jnp
icebp
pusha
mov
jae
test
jp
pop
push
arpl
gs
sub
cltd
fsubl
lret
out
call
fsubl
cld
pop
jb
push
rcrb
sbb
xchg
sub
push
jbe
push
stos
pushf
addr16
sub
mov
cmp
and
push
scas
sbb
cmp
lea
scas
imul
repnz
sbb
shll
pop
mov
xor
loop
out
push
mov
faddl
xchg
pop
lcall
push
push
ds
stc
orb
gs
dec
push
idivb
dec
cs
mov
sbb
adc
cmp
pop
push
pop
pusha
push
clc
xor
rclb
fld
lods
mov
aad
xchg
mov
jbe
mov
cmpsb
and
pop
xchg
mov
icebp
xchg
sbb
push
rcrb
sbb
jbe
and
sub
inc
dec
icebp
rol
push
testb
in
scas
jo
adc
xchg
sub
mov
into
and
test
scas
xorb
ret
push
dec
and
cmp
and
setle
nop
mov
pop
xor
inc
shrb
mov
test
adc
and
cwtl
adc
fldenv
jle
addb
out
icebp
ret
aas
cwtl
fs
ss
loop
in
jnp
scas
stos
frstpm(287
sub
and
inc
sahf
shrl
sub
dec
icebp
stc
fistl
sub
cld
sbb
and
decl
jl
icebp
jmp
xchg
scas
jb
push
call
shll
cltd
xchg
mov
or
sub
imul
mov
cmpsl
inc
pop
push
mov
mov
into
xor
push
inc
lds
add
test
mov
xchg
add
jnp
and
in
cmp
push
pushf
and
xor
clc
xor
mov
int3
sbb
frstor
scas
popf
sub
in
lods
add
cmp
and
jns
jge
stos
lahf
in
jge
inc
cli
aaa
cmp
testb
xor
cli
or
in
mov
nop
xchg
aas
inc
movsb
pop
dec
or
inc
enter
imul
loopne
test
stc
push
xor
xor
mov
mov
mov
shll
pop
mov
mov
mov
cmp
aam
add
je
sub
add
push
aam
push
cmp
scas
sub
in
je
or
jge
lcall
test
sbbl
ss
push
jbe
mov
xchg
mov
cmpsb
mov
cmp
add
into
mov
pop
lcall
outsl
leave
push
gs
or
in
mov
adc
inc
mov
lods
imul
or
inc
push
popf
mov
dec
inc
and
mov
pop
addr16
std
insl
aad
mov
push
fbstp
fstp
fwait
mov
sub
adc
jecxz
push
jae
bound
enter
sbbb
loopne
push
shr
pop
lret
icebp
scas
out
out
inc
dec
sub
mov
cmp
jo
es
push
inc
scas
repnz
and
in
shlb
cs
fs
sar
hlt
pushf
hlt
fwait
and
dec
fiaddl
iret
addr16
in
daa
lods
jns
push
outsl
add
dec
outsl
mov
int
xchg
aad
jne
sbb
mov
stos
and
mov
pop
clc
push
push
push
and
bound
ja
add
fcoms
test
lods
adc
test
xchg
mov
mov
movsl
dec
fldenv
aas
out
and
jb
cmc
fdivr
imul
test
insb
pop
ret
fsubrs
push
ljmp
fstl
outsl
cli
jp
cltd
cmpl
sub
aas
imul
mov
fstpt
sub
sets
sbb
mov
xor
repnz
adcb
add
in
sbb
pop
ds
sarb
sbb
sub
pop
mov
mov
xchg
dec
pop
rclb
fwait
xor
pushf
mulb
hlt
pop
add
xor
sbbb
popa
push
xchg
mov
mov
push
push
int3
xchg
mov
cs
js
jecxz
fsubl
xchg
cwtl
iret
xchg
fsubp
add
pop
xchg
dec
movsl
mov
mov
cmp
repnz
ret
or
js
pop
imul
mov
jecxz
mov
dec
sarl
lods
and
push
mov
xchg
in
mov
or
sub
mov
jg
jnp
leave
xchg
or
dec
rol
sarl
fsts
lods
push
stc
mov
inc
or
jnp
inc
rcll
sbb
mov
or
push
mov
les
es
ljmp
mov
push
rorl
dec
jge
xchg
jb
stos
xchg
inc
add
sbb
int3
js
cmp
dec
push
lds
sub
movsl
jle
in
lahf
lock
pusha
aaa
imul
movsb
icebp
sub
cmpsb
and
aaa
inc
sbbl
in
xchg
dec
vpmacsswd
jecxz
push
mov
mov
orl
add
pop
sbbb
pop
pop
lods
mov
insb
jbe
popf
cmp
in
test
rol
adc
gs
cmp
stc
ret
or
movsl
mov
sbb
pop
hlt
imul
mov
mov
loope
subl
repnz
das
in
nop
pop
stos
jo
cmp
outsb
sbb
ret
orl
jno
dec
xor
adc
sub
out
xchg
adc
inc
imul
in
xlat
push
shll
enter
insb
xor
xor
fistpll
cmpsb
imul
imul
js
cmc
pop
outsb
xor
mov
stos
cmc
mov
fnstcw
sahf
mov
mov
mov
scas
std
push
ljmp
xchg
movsl
or
push
xor
mov
adc
mov
jecxz
pop
out
jne
jmp
add
push
jb
js
pop
loope
push
xor
pop
movsl
je
insb
cmp
es
iret
icebp
xor
fs
mov
and
shl
jmp
mov
jo
and
sbb
jae
pop
xchg
call
pop
in
insl
sbbb
inc
sub
mov
jns
test
lahf
fsubl
rcr
push
dec
das
mov
push
addl
mov
ret
dec
mov
xchg
push
pop
jae
cmp
mov
sbb
sub
mov
dec
vmovsd
xor
sub
fildll
xchg
pop
add
mov
lock
mov
xchg
cli
xor
scas
inc
or
mov
ret
add
out
popa
popf
ficompl
adc
popa
cld
mov
fdivl
out
scas
sbb
or
cli
cmpsl
cwtl
pop
xchg
mov
xor
popa
scas
fcomi
out
psllq
mov
test
xchg
mov
movsl
pop
xor
mov
or
add
test
sbb
repnz
push
test
enter
mov
mov
mov
fs
in
fmuls
add
lods
or
sbb
imul
xor
pop
push
lea
imul
mov
stos
sahf
jge
inc
int3
movsl
push
adc
out
bound
push
inc
cmp
xchg
push
lahf
sub
out
daa
push
ret
cli
sahf
jne
mov
pop
roll
push
mov
adc
sub
jno
jno
sbb
in
fbstp
aas
lret
std
aad
push
xchg
daa
ss
gs
andl
or
or
mov
data16
hlt
or
push
fwait
push
and
ret
add
cmpsb
fisttpl
push
mov
js
testb
mov
fstl
repz
mov
or
and
xlat
jno
fisubl
enter
fdivl
mov
lea
fsubr
mov
mov
popf
cmpsl
daa
repz
ss
pop
into
aam
push
xchg
xlat
popf
sbb
push
xor
addr16
lods
pushl
pop
mov
sub
jno
jecxz
fiaddl
subb
and
movsb
push
xchg
movsl
repz
pop
cwtl
mov
push
or
pop
je
outsb
enter
sarl
ret
jl
ja
mov
sahf
add
fdivl
add
dec
push
sbb
sbb
and
mov
out
cwtl
xor
movsb
addl
dec
jae
cmp
adc
dec
popa
leave
orb
loope
movsl
hlt
pop
cwtl
mov
in
aam
pop
pusha
add
adc
adc
jnp
cwtl
add
je
clc
xorl
pop
out
push
aad
jo
nop
mov
jb
mov
call
nop
stc
dec
mov
std
divb
or
lock
popa
outsb
push
mov
push
sub
push
mov
sbbl
inc
adc
xlat
sub
lret
pop
or
or
adc
in
ret
mov
jns
imul
xor
out
loope
add
out
aad
ljmp
out
sub
mov
xchg
mov
loope
add
mov
inc
aam
sub
test
xor
stos
jmp
adc
loopne
je
movl
ret
ret
cmpsb
pop
cmc
enter
mov
sbb
or
leave
in
mov
and
fwait
sti
push
loope
xor
in
jecxz
cmpsb
add
loop
and
shrb
cmp
and
push
jne
inc
jl
inc
fcomip
jae
scas
push
push
pushf
cmp
orl
mov
shrl
and
jne
jns
mov
das
jae
out
push
int3
ret
ja
sbb
pop
bound
mov
xor
jecxz
mov
mov
iret
lods
jmp
inc
ja
jne
inc
push
stc
pop
and
fisubrl
dec
iret
fwait
add
sti
notb
insl
test
jbe
pop
mov
xor
pop
jl
inc
std
pop
jle
mov
jmp
add
mov
mov
divb
test
and
sbb
js
push
test
sbb
aaa
or
sahf
data16
lret
test
daa
in
jge
jbe
shll
ljmp
mov
and
dec
rorb
mov
mov
cwtl
leave
enter
sbb
cmp
sbb
lret
nop
push
insl
push
daa
mov
clc
dec
and
dec
lret
inc
xchg
or
lret
sarl
push
in
xchg
ja
add
and
pusha
rol
shl
pop
and
mov
jge
cmpsl
xchg
lret
push
sbb
push
cmp
push
popa
cmc
ljmp
shr
stos
js
or
pop
aaa
adcb
mov
mov
int
mov
jbe
push
jl
add
mov
mov
push
push
jp
shl
sbb
mov
dec
lcall
jg
jg
rorb
mov
push
dec
push
ja
in
test
lods
std
in
lods
dec
into
test
mov
pop
dec
jae
pusha
mov
stc
mov
in
mov
pop
lret
mov
std
pop
repz
or
sbb
add
add
xor
loopne
push
fcoml
lcall
mov
xor
sbb
pop
out
rcrl
addl
repz
mov
push
aas
sbb
rcrb
imul
pop
cmp
pop
mov
imulb
lret
sub
and
inc
inc
adc
std
inc
and
jnp
cli
imul
or
sub
orl
sahf
insl
add
jmp
and
mov
push
mov
inc
adc
movsl
and
lret
scas
mov
dec
jge
jl
mov
xchg
adc
das
mov
in
rcrb
fldenv
pop
subl
arpl
cmp
movsb
push
popa
adc
or
mov
mov
xor
jne
iret
jbe
jb
pop
pop
xchg
inc
sub
ss
pop
psubw
sbb
sti
jnp
pop
fwait
xchg
or
mov
out
jb
mov
mov
xorl
or
sbb
std
js
push
mov
mov
jnp
sti
sub
push
mov
in
insl
mov
out
pop
push
test
sbb
rol
dec
idivb
sti
scas
stos
sahf
mov
dec
inc
les
adc
loop
pop
arpl
mov
push
jbe
or
mov
rorb
popf
repz
xchg
pusha
rorl
pop
pop
fdivrs
movd
in
mov
clc
mov
aaa
addl
int
int
addr16
inc
loope
adc
xchg
in
in
pop
adc
inc
ljmp
xchg
pushf
mov
sbbl
lock
push
addr16
das
cmpsb
xchg
push
mov
sbb
jmp
test
out
stc
out
mov
add
fisttpll
lods
das
xor
loope
xchg
xchg
popf
addr16
cmp
in
push
cltd
mov
cmp
mov
pop
push
pop
or
movsb
jno
jo
clc
push
sarl
fucomip
lret
mov
sbb
loope
and
aaa
movsl
outsl
pop
jmp
mov
xor
jae
ror
jle
xchg
xchg
and
or
sbb
sub
lret
lds
cmpb
shrl
fidivs
outsb
fdivrl
mov
or
xor
test
pusha
add
shl
sub
mov
xchg
fistl
scas
inc
pop
dec
dec
inc
sahf
popa
dec
sbb
lret
sub
sub
jnp
xor
popa
xor
movsl
xchg
mov
mov
sub
mov
add
ret
mov
repnz
shll
xor
or
sbb
imul
mov
jnp
add
push
leave
popf
addr16
bound
push
inc
inc
es
rorb
enter
push
xchg
outsb
push
add
mov
cmp
jmp
pop
das
xchg
push
mov
lahf
leave
and
testl
mov
push
mov
or
ret
mov
sub
ljmp
scas
dec
push
push
jne
stos
pop
mov
int
in
xor
adc
incb
pop
xchg
fwait
push
cmp
jne
pop
fnstcw
sahf
or
mov
and
mov
dec
cmpsl
aaa
push
pop
fimuls
test
and
jno
nop
enter
mov
cmp
sub
das
push
or
dec
xor
mov
call
jns
roll
inc
mov
js
fwait
cmp
ljmp
ret
xor
mov
cmc
inc
jl
arpl
add
pop
daa
sub
gs
xor
stos
int
or
jae
sbb
mov
mov
mov
jl
out
dec
lods
aas
fs
xchg
push
sub
adc
cmp
and
loopne
pop
xor
or
jge
or
cmp
sub
jge
call
out
loope
pop
or
pop
fimull
test
cmp
or
arpl
jl
push
xor
movsb
scas
dec
cli
loop
lods
imul
mov
ret
popf
cs
pop
ja
loope
push
pop
jne
aas
ret
mov
out
sti
push
test
or
ret
xor
sbb
push
les
inc
pusha
sub
mov
sahf
loop
gs
push
nop
in
ret
fninit
jle
ror
fcomps
add
hlt
mov
jge
push
mov
fldenv
dec
fs
loopne
inc
es
pop
shll
fdiv
cmp
mov
movsl
cmp
jp
mov
cmpsl
and
out
cmp
test
loopne
fucomp
sti
inc
mov
mov
or
inc
in
lds
xor
inc
sbb
sbb
dec
in
rcr
mov
cli
lds
jnp
cmp
sbb
inc
or
imul
push
mov
mov
out
cmp
sbb
xor
jmp
dec
aad
push
jb
adc
cli
fs
or
inc
mov
ja
cmpb
in
xchg
sub
xchg
shl
adcb
lea
hlt
xchg
aad
out
and
ret
aas
mov
xchg
xor
pop
clc
mov
test
dec
popl
lods
cmpsb
push
pop
and
clc
pusha
pop
je
clc
and
mov
xor
imul
gs
xor
adc
sbb
outsl
test
cmp
push
xchg
ss
xchg
rorb
mov
or
xchg
popa
insb
pop
jmp
fwait
scas
cmp
std
in
add
gs
mov
in
dec
ja
sbb
add
je
orl
ret
stos
loopne
push
scas
xor
andl
rorb
xor
jmp
lret
pop
test
jmp
repz
dec
sahf
iret
shlb
into
mov
enter
cmpsl
fwait
imul
rolb
and
xchg
pop
mov
mov
jl
adc
aad
out
sarl
push
cmpsl
push
sbb
pop
push
mov
xor
mov
movsl
cmp
outsl
pusha
dec
dec
lds
add
mov
fst
pop
bound
repnz
sub
adc
jns
mov
popa
js
xchg
jge
test
loope
jb
in
mov
test
mov
sahf
jmp
dec
jecxz
sbb
sub
mov
dec
jnp
sub
cmc
mov
aas
movsb
iret
rcll
scas
lea
mov
bound
push
or
xor
adc
in
jno
push
mov
mov
cmp
add
mov
mov
cmp
jg
sbb
call
mov
fs
inc
jmp
dec
add
inc
jmp
mov
jnp
pusha
and
sbb
jo
push
mov
aad
filds
mov
pushf
testl
xor
imul
cmp
xchg
fsub
dec
cltd
push
adc
aas
clc
mov
mov
ja
int
mov
ficoml
cmp
xchg
mov
sub
pop
in
pop
and
je
inc
cmp
add
dec
sub
loopne
movsl
or
adc
lret
test
jns
repz
inc
adc
mov
rcll
add
es
inc
lods
repnz
dec
clc
lock
out
push
jb
test
mov
or
into
popf
inc
xchg
mov
add
popa
aaa
mov
inc
imull
orb
mov
xor
cmpsb
data16
dec
pushf
mov
mov
sbb
xchg
add
mov
cwtl
pop
loope
cmpsb
inc
mov
sbb
arpl
cmp
push
and
inc
call
lock
mov
pop
fbld
pop
hlt
fsub
mov
fisubl
push
push
add
js
dec
xor
add
imul
jecxz
push
pop
cmpb
mov
mov
adc
add
xchg
cmp
loope
xchg
stos
popa
adc
test
mov
dec
repnz
fistl
jl
mov
mov
lods
in
loop
js
add
in
inc
popa
mov
and
mov
xchg
in
das
das
outsl
inc
scas
mov
jg
mov
rcrl
mov
xor
lahf
mov
fs
jne
lea
mov
out
leave
jbe
inc
lcall
push
das
xchg
popa
imul
mov
and
test
dec
fidivs
int3
mov
mov
int3
inc
cmc
shlb
aad
sub
popa
jb
clc
lcall
lods
imul
shl
push
push
push
push
jbe
fisubs
push
in
dec
xchg
lret
lds
pop
aam
js
cmpsb
fwait
lds
jno
in
in
xlat
sbb
push
out
xlat
xor
cmp
ljmp
iret
lret
inc
loope
xor
jo
cmpsl
cli
cltd
das
cltd
shrl
mov
mov
jae
sahf
popa
mov
movsl
js
neg
adc
dec
xchg
mov
push
inc
iret
mov
dec
sbb
adc
sbbl
sbb
xor
xchg
cmp
sbb
add
push
test
push
shll
lahf
adc
dec
mov
lahf
stc
cwtl
adc
or
inc
loope
repz
mov
add
js
cmp
aam
int
pop
sub
loop
mov
inc
punpckhdq
sbb
mov
fdivr
xchg
mov
xlat
and
loopne
push
jnp
gs
imul
push
stos
leave
fiaddl
enter
scas
jmp
xor
lds
es
or
mov
int3
xor
mov
push
sub
sub
push
dec
mov
in
xchg
test
movsl
fisttps
in
subb
fidivs
push
inc
aaa
loop
inc
repnz
mov
jns
mov
imul
xchg
xor
cmp
fs
imul
or
inc
out
push
rolb
addr16
mov
mov
xor
push
pop
push
mov
ret
ljmp
mov
cld
fnstsw
test
mov
push
add
push
popa
fisttpll
clc
mov
imul
lret
insb
lock
test
fsubr
loopne
or
jl
pop
push
dec
aas
cmp
cmp
sbb
jae
pop
test
aas
gs
pop
xchg
xor
int3
pop
cmp
xchg
pop
rcrb
inc
lock
outsl
insb
dec
test
push
orl
pop
xchg
sub
xchg
outsb
jge
sahf
std
mov
adc
cwtl
mov
scas
cmp
push
mov
push
sub
clc
cmc
cld
ljmp
pop
add
cmc
push
testl
jbe
add
or
jno
data16
mov
jo
iret
mov
adc
test
loope
inc
mov
notl
out
movlps
push
or
and
es
push
lahf
sbb
and
sbb
jbe
nop
cs
xor
inc
mov
jp
sub
sub
adc
je
test
pusha
divps
std
inc
dec
xchg
stc
sub
and
add
inc
push
out
mov
iret
or
pslld
imul
inc
repz
jns
ret
push
sub
stos
cmp
mov
adc
out
mov
out
pop
sbb
push
addb
jb
xor
mov
add
insl
ss
jg
push
std
push
mov
loop
rolb
stos
inc
adc
pop
pushl
jle
aad
insb
inc
xchg
and
xor
or
das
out
push
cmpsl
mov
leave
lahf
xor
inc
mov
xchg
sbb
repz
jne
mov
outsl
push
pop
jle
jbe
xor
mov
stc
xor
sub
loope
pop
add
mulb
jno
mov
scas
fnstcw
leave
inc
xor
inc
pop
jl
jge
xor
or
pop
jl
mov
test
or
dec
inc
jp
pop
dec
jmp
jp
lock
mov
and
je
xor
push
mov
mulb
repnz
cmpsl
adc
enter
sbb
push
sbb
add
sti
push
jns
jp
xchg
loop
cmpl
sub
cmp
mov
push
inc
addr16
repz
repnz
pop
data16
frstor
cmpsb
mov
outsl
imul
mov
scas
cltd
cmp
sbb
fidivs
addr16
test
xchg
out
popf
and
push
jno
pushf
loop
inc
je
clc
or
sub
popa
sbb
clc
jmp
cmp
pop
jno
cwtl
mov
adc
xor
add
je
clc
bound
push
and
inc
jecxz
adcl
out
adc
das
xor
mov
and
jecxz
stos
clc
pop
sub
loopne
add
adc
orl
or
js
xchg
insl
adc
mov
rorl
sahf
daa
aaa
sub
lock
mov
lock
push
mov
fs
inc
sbb
sbb
cmp
scas
xchg
mov
xor
idivl
fdivl
stc
or
lea
xchg
pop
jmp
push
gs
sub
adc
lret
int
cwtl
scas
in
sub
or
stos
inc
sbb
mov
sar
fistl
cmp
xchg
mov
fwait
stc
cmp
inc
and
test
stos
and
gs
aam
or
repz
popf
repz
and
sub
pusha
push
jmp
rcll
pop
leave
pop
sbb
pusha
lahf
dec
cmp
jle
xchg
fists
mov
stc
pop
cmpsb
pop
test
sub
inc
add
fs
outsb
mov
ljmp
ret
xadd
xchg
bound
push
repnz
cli
dec
aad
and
jmp
mov
arpl
cmp
dec
repz
dec
ss
push
dec
pop
pop
sbb
adc
inc
insb
ds
cmp
cmpl
popa
inc
mov
hlt
push
cmc
xor
gs
adc
push
mull
repnz
into
jle
je
out
push
mov
jl
fwait
xlat
scas
scas
adc
push
mov
xor
das
repnz
adc
mov
push
dec
adc
fimuls
repnz
push
ret
pop
xchg
or
mov
rol
pop
cmc
fwait
add
cmp
jmp
inc
push
lds
insb
mov
pop
pop
xor
hlt
xor
cmp
out
rorb
sti
mov
rcrl
mov
sub
test
push
aad
jnp
shl
repz
sub
mov
jmp
stos
inc
xlat
fdivrl
xor
xchg
inc
cmp
add
push
jnp
loope
int3
jg
and
lret
pop
sub
aad
test
mov
das
ret
xor
inc
jecxz
xchg
shrb
xchg
in
bound
gs
imul
jno
inc
sub
leave
mov
mov
jnp
xchg
ficoms
cmp
lock
add
popa
cmp
pop
sti
nop
mov
mov
fstl
pop
leave
imul
push
out
jne
jo
aaa
dec
shrb
mov
shll
pop
ret
pop
test
cmc
mov
mov
inc
pop
fwait
jg
inc
orl
ljmp
sub
lret
test
mov
fadd
jmp
aaa
ds
and
bound
jae
rolb
int3
in
nop
ficomps
mov
adc
outsb
pop
cli
ficoml
dec
push
cs
or
mov
aad
add
or
aaa
push
xor
loope
dec
repz
push
adc
mov
divl
mov
cltd
test
xor
repnz
loope
mov
xchg
mov
outsb
xor
das
orb
jle
pop
aad
jp
xor
mov
stos
mov
and
shlb
pop
and
jmp
jp
aam
jg
icebp
add
rorl
daa
sub
and
loop
in
xchg
movsb
add
pop
or
mov
adc
arpl
inc
movsb
push
cmp
jae
mov
fld
hlt
mov
add
insl
sbb
testw
push
xchg
aaa
mov
iret
pop
ljmp
jb
mov
jae
ljmp
hlt
fucomp
jmp
cmpb
push
and
pop
cmpsb
and
or
in
mov
inc
addl
cmp
inc
inc
mov
stos
mov
imul
jmp
or
sub
loope
ds
mov
pop
lock
mov
and
imul
or
or
insl
adc
lods
mov
int
push
ret
and
stc
movsl
xor
push
xchg
add
mov
test
test
xchg
cli
jp
push
rorl
rcr
test
sbb
nop
sub
icebp
dec
dec
mov
cmp
push
dec
xchg
insl
shlb
inc
shlb
dec
imul
dec
pop
lcall
mov
add
inc
jmp
or
jecxz
xchg
lcall
dec
in
fidivrs
xchg
mov
fstpl
or
ret
in
cld
adc
ret
jmp
xchg
dec
lea
rcll
jno
sti
or
jne
scas
and
push
inc
repz
and
push
loop
movsb
nop
arpl
xor
cli
movsb
mov
mov
rcrl
pop
insb
mov
pop
es
scas
outsb
testl
pop
gs
cmp
ss
inc
jecxz
dec
pusha
xchg
lahf
hlt
jg
pop
call
call
roll
push
xchg
jmp
xchg
lods
int3
add
enter
push
test
sub
mov
clc
call
mov
jnp
aas
mov
fcomps
mov
xchg
hlt
mov
loope
std
jg
nop
mov
mov
sbb
mov
ret
fildll
push
test
xor
sub
cwtl
xor
cmpsb
sub
lds
nop
sub
sub
cmp
sbb
popa
in
adc
and
ds
mov
adc
das
lahf
cmp
jmp
popa
arpl
test
popf
jns
pop
rolb
fsubrs
adcl
xchg
in
ss
and
sbb
xor
lret
popf
pop
mov
sbb
xor
xchg
mov
add
test
out
mov
add
push
pushf
push
testl
pop
xchg
test
sbb
jae
add
adc
jge
push
mov
fdivrl
jns
movb
into
xor
es
push
insb
lods
aam
mov
clc
cmp
push
mov
push
clc
xchg
jle
mov
test
push
icebp
push
in
orl
and
sbb
mov
les
jge
enter
hlt
ja
fs
cmc
dec
inc
inc
jne
fidivrl
xchg
in
adc
mov
xor
fbld
add
fiaddl
lahf
dec
int3
fmul
leave
pop
das
leave
jbe
cwtl
aam
xchg
adc
mov
mov
sti
pop
mov
sbb
ja
xlat
push
mov
cmc
push
lcall
in
rolb
jg
popf
or
leave
data16
and
or
addr16
push
addl
ljmp
outsl
aaa
xor
aad
push
adcl
xor
or
push
pusha
fistl
scas
loop
jnp
test
movsl
pop
mov
out
sub
mov
mov
inc
dec
jge
lea
xchg
leave
jb
mov
cmc
cmp
push
mov
pop
pop
js
sub
fbstp
ret
int
jge
das
daa
sbb
or
dec
mov
gs
cmp
dec
dec
daa
dec
int
and
xchg
or
xor
push
jns
scas
call
test
push
dec
cmp
les
xchg
leave
and
int3
cmp
mov
xor
add
out
fwait
aas
and
mov
push
or
push
mov
inc
pop
std
pop
adc
and
dec
movb
sti
pop
mov
dec
ja
xor
push
mov
or
loop
jmp
fistpll
pop
aas
fimull
jl
mov
mov
jae
lahf
lds
mov
mov
call
push
sbb
decb
movsb
inc
add
loope
cmp
outsb
and
xchg
cmp
jp
push
push
push
leave
sub
mov
in
mov
cli
sbb
mov
or
cmp
pop
mov
mov
loopne
jne
push
dec
mov
pop
sub
dec
test
cmp
cld
add
xchg
movsl
out
clc
mov
pushw
popa
pusha
cmp
jg
sub
in
and
and
mov
jbe
inc
std
sub
dec
mov
xchg
mov
mov
jae
int
mov
dec
mov
sbb
fdivrs
sub
ret
rorl
lahf
mov
dec
mov
inc
mov
ds
out
push
pusha
andl
iret
xchg
ds
add
push
jb
adc
movsl
insl
and
jle
mov
jno
xchg
popf
shll
xor
aas
jno
je
jmp
call
mov
std
xchg
dec
pushf
jle
idivb
add
pop
push
pushf
icebp
lret
push
roll
arpl
loope
imul
add
and
insb
data16
pushf
outsb
mov
dec
ret
je
add
arpl
leave
dec
ja
jmp
xor
js
outsb
xor
mov
pop
mov
mov
lock
pop
inc
mov
repz
push
pcmpeqd
dec
paddw
enter
and
ficomps
je
rol
sbb
xor
pop
mov
mov
outsb
lahf
and
ljmp
lret
rcrb
mov
jns
imul
leave
add
sub
mov
aad
sbb
and
dec
xor
rcrl
fisttps
cwtl
test
mov
xchg
imul
fcmovnb
cmp
je
sbb
add
jmp
icebp
stos
xchg
sub
mov
mov
sub
and
call
mov
scas
bound
insb
xchg
mov
or
sbb
add
add
dec
mov
add
shlb
test
cmpsl
leave
std
test
jae
add
push
jge
pusha
lock
inc
push
xor
inc
out
adc
xchg
xor
xchg
lods
stc
rcll
imul
lahf
fcmovne
mov
leave
jle
test
pop
pushf
jge
rcrl
aam
lods
pop
dec
imulb
popa
repz
sbb
xor
mov
lods
push
aaa
rcl
or
pop
mov
jno
pop
and
stc
sub
pusha
add
mov
enter
enter
and
add
add
xor
pop
aad
gs
call
and
outsb
xlat
mov
and
lret
mov
push
sahf
mov
rcrb
imul
and
sub
mov
or
mov
push
jg
jmp
pop
sub
pop
xchg
add
jae
pop
out
outsb
fildll
xchg
push
mov
in
lret
jge
lods
and
cmp
or
leave
mov
pmulhuw
mov
arpl
sub
imul
adc
sub
inc
mov
cld
ss
lcall
mov
push
pop
out
mov
push
sbb
add
mov
ljmp
decb
js
or
xor
insb
mov
pop
mov
add
cmp
mov
mov
shll
push
pop
pop
pushf
and
scas
test
in
cmp
aam
adcb
idivl
lret
mov
adc
pop
pop
imul
bound
lahf
lds
stos
mov
sbb
das
and
xor
and
jnp
repnz
lcall
in
and
mov
xchg
iret
and
add
lahf
subl
add
fisubrl
int
add
test
add
enter
pusha
lock
adc
sbb
adc
xor
inc
jg
fwait
pop
mov
out
pop
push
vprotb
push
notl
mov
lock
mov
xor
lcall
mov
movsb
add
cs
mov
mov
rcl
inc
hlt
xor
inc
mov
pop
bnd
push
xchg
lds
mov
add
bound
mov
adc
inc
or
sbb
dec
stos
jnp
jb
jbe
or
fs
mov
hlt
in
dec
fwait
push
sub
loopne
mov
cltd
xor
fbld
mov
jge
pop
movsl
scas
fsubr
mov
test
popf
aam
pop
inc
outsb
fistps
dec
rcrb
mov
pop
dec
int3
pop
dec
mov
jne
xchg
mov
mov
dec
cs
cmp
outsb
fidivs
add
data16
adc
aad
push
mov
mov
dec
cld
push
or
arpl
data16
sub
insl
lret
add
sbb
int3
sahf
fcoml
stos
fistl
bound
fsubrl
out
icebp
test
arpl
inc
clc
mov
push
leave
push
push
sbb
and
sub
push
loopne
ljmp
mov
fimull
xor
scas
add
js
xchg
pop
insl
xchg
xor
dec
jge
pop
xchg
pusha
sbb
push
ret
lods
mov
nop
hlt
gs
clc
testl
dec
push
dec
das
out
inc
mov
xor
pop
test
aas
mov
mov
dec
scas
test
push
jo
mov
pop
pusha
cli
clc
push
jns
inc
xchg
adc
leave
call
fwait
pop
sub
out
fstpt
or
das
call
lret
inc
push
outsl
ss
cs
xchg
ret
aaa
xor
xor
mov
fistl
movsl
ja
sub
outsb
push
adc
insb
dec
mov
pop
sbbl
sti
lahf
adc
aas
push
mov
and
add
ret
aam
sti
jae
jbe
or
bound
jne
mov
mov
ret
cwtl
jle
jno
mov
inc
pop
mov
sbb
mov
or
push
mov
js
add
out
mov
pop
lods
popa
mov
and
dec
cmp
inc
cltd
push
cmp
mov
fbld
or
in
xor
and
loopne
push
mov
loope
jnp
dec
mov
in
xchg
mov
inc
dec
call
lea
cs
sub
push
push
xchg
jno
pop
insb
das
data16
push
neg
inc
mov
in
int
cmp
push
and
imul
ret
fs
sub
dec
jnp
popf
push
lds
jmp
cli
pop
mov
mov
js
lcall
mov
rolb
lret
fs
outsl
sub
or
aas
movsb
and
sti
jmp
cmp
push
lcall
mov
sbb
movsl
ss
push
pop
pop
jmp
leave
rcl
ret
add
movb
ljmp
lcall
sub
push
inc
pop
cs
lea
push
mov
jmp
out
and
xchg
sub
aam
cmpsb
inc
insl
hlt
dec
xchg
lahf
or
nop
xchg
frstor
push
call
pop
sbb
xchg
test
jmp
pop
call
js
dec
popf
mov
xor
notl
mov
mov
movsl
cmpsb
jmp
xchg
outsb
jns
sub
cmp
sarb
cmp
movsb
and
stc
push
dec
js
or
cmpsb
std
push
or
scas
icebp
scas
lds
cmp
xchg
jno
mov
push
mov
mov
inc
inc
xchg
test
inc
push
test
sahf
pusha
icebp
ret
shlb
test
clc
add
daa
add
cmpb
ret
inc
mov
les
mov
cmp
popa
out
inc
cld
mov
lods
inc
fdivl
movsb
icebp
push
jo
mov
pop
sahf
jnp
dec
xor
xchg
inc
mov
es
adc
out
add
pop
pop
mov
jmp
xor
jns
adc
cmp
sti
jo
cli
dec
js
jg
mov
xor
lods
adc
push
aaa
mov
xchg
imul
sbb
andl
mov
fisubl
repz
fs
and
jnp
and
jbe
xchg
mov
adc
and
leave
add
popa
enter
into
xor
mov
jnp
lods
daa
mov
add
mov
jb
test
lock
pop
ljmp
movsl
mov
aam
jae
dec
lahf
adcb
sbb
mov
pop
ss
fcomp
ljmp
mov
movsl
xor
mov
ds
jbe
jg
orl
mov
mov
imulb
cmp
leave
mov
fldln2
hlt
popf
pop
sbb
mov
mov
adc
or
adc
or
insb
mov
sub
outsl
fld
mov
outsl
jg
sub
imul
iret
aad
mov
mov
mov
hlt
mov
les
mov
sub
ficompl
shl
cmpsl
cwtl
aas
daa
cli
sub
pop
sub
push
push
sbb
dec
mov
jae
inc
sbb
jne
push
test
push
and
out
sbb
mov
je
xor
fs
popa
lock
pop
and
adc
popa
pusha
in
pop
js
pop
mov
xchg
mov
cs
scas
scas
jmp
ja
fsubrp
out
addb
fdiv
add
push
pop
xor
pushf
sub
pop
xchg
shl
shl
repz
in
inc
jl
jbe
dec
bswap
rcll
jmp
xlat
cmc
pop
mov
ficoms
mov
addl
push
cmp
fldcw
sbb
fstps
jg
cmpsb
scas
pop
lret
ret
sub
and
pop
es
add
jnp
sub
loopne
pop
push
or
loopne
mov
cltd
fistps
insb
addb
jo
sti
fsubrs
mov
or
fdivp
add
and
les
daa
jp
xchg
and
xor
ret
mov
repnz
pusha
icebp
pop
jno
or
into
push
les
or
ror
push
test
jp
in
mov
cs
xchg
mov
pushf
mov
xchg
rorl
xor
addb
lret
stos
pop
mov
mov
dec
lock
fcomps
xor
inc
mov
lahf
lock
rorb
push
push
imul
jbe
adc
movsl
sub
sub
fsubr
add
inc
repz
jne
ret
adc
fwait
mov
scas
jmp
mov
sti
js
sti
ret
jmp
lahf
outsb
test
or
mov
lret
arpl
mov
pop
loop
dec
int3
loop
pop
shll
pop
int
jge
movsl
adc
jge
fdiv
nop
fstp
push
je
sub
adc
ja
and
fucomip
repz
pushf
dec
daa
out
jb
mov
sub
sbb
js
jns
pop
lock
sub
jp
jno
int
add
imul
sti
dec
es
leave
dec
or
ljmp
cmpsl
mov
rcrb
nop
pushf
subl
jl
mov
jbe
out
imul
add
add
outsl
sub
fnstcw
sti
js
ror
xor
add
pop
lahf
inc
mov
fwait
loop
adc
xchg
dec
pusha
cli
push
insb
fistpl
mov
into
cs
in
and
hlt
pop
pop
inc
mov
dec
addr16
push
pop
sbb
js
test
jle
imul
adc
rep
outsl
nop
int
dec
inc
push
rcll
aad
mov
mov
adc
inc
daa
cmp
cs
test
ret
imul
jae
pop
aad
sbb
mov
cmp
jb
mov
push
cmc
insl
mov
xchg
lods
pop
shrb
mov
out
lods
gs
dec
stc
mov
je
enter
pop
aas
mov
test
aam
sahf
sub
push
repnz
iret
in
xor
imul
repnz
push
jg
ja
pop
inc
fsubs
cmp
test
jne
jmp
test
pop
and
inc
cmp
sahf
ror
fwait
jle
nop
addr16
and
inc
add
repnz
add
nop
fsub
in
or
rorb
daa
push
cltd
js
insb
xchg
enter
lock
ret
and
fidivl
mov
mov
out
lret
sbb
pop
cmp
pop
sbb
pop
imul
dec
andb
ret
fwait
cmp
xor
push
repnz
xor
xchg
sub
adc
lea
xchg
mov
adc
aas
in
cmp
pop
mov
mov
xor
sub
rcrb
clc
sub
sbb
inc
ljmp
sub
cwtl
int3
repz
ret
fisttpll
imull
dec
cmp
mov
cmp
dec
mov
stos
adc
bound
sti
mov
cmp
stos
push
push
js
cli
push
mov
add
aas
xchg
out
nop
aas
jno
xchg
test
ds
cli
or
ret
mov
fdivl
jo
pop
adc
add
xlat
aas
push
xlat
scas
xchg
into
aad
xchg
movsb
aad
in
push
inc
pushf
test
xchg
adc
mov
pop
cmp
je
stc
int3
cmpsl
push
dec
sbb
mov
mov
xor
adc
cmp
std
push
je
fisubs
iret
jecxz
arpl
and
hlt
outsl
mov
es
mov
mov
stos
hlt
jno
out
jnp
pop
out
inc
and
int3
jae
xchg
outsb
push
add
incl
mov
test
rolb
mov
fistpll
adc
xchg
fbstp
mov
in
in
pop
adc
les
xchg
add
push
jbe
mov
fiadds
pop
addw
ret
cmc
jge
jle
lds
pop
jg
cmpsb
inc
xor
xor
ss
loope
icebp
ds
repz
mov
leave
sarl
out
leave
scas
aam
dec
ljmp
and
inc
bound
xchg
enter
dec
push
sub
outsl
xor
popf
roll
pop
enter
inc
cmp
push
mov
sar
sub
outsb
jbe
mov
cmp
and
push
loopne
mov
repnz
loop
jmp
sub
sti
mov
das
in
test
dec
dec
into
dec
loop
mov
push
xchg
add
mov
mov
push
sbb
mov
sub
lock
inc
mov
mov
pop
loopne
and
xor
int3
inc
loop
mov
jno
jnp
push
push
sbb
leave
fists
adc
inc
push
dec
mov
sbb
sub
mov
pop
imul
sub
test
clc
cmp
push
mov
push
out
add
dec
movsb
mov
in
cli
test
mov
ret
test
mov
jmp
bound
hlt
sbb
int
int
or
sub
jnp
sub
movsl
stos
push
test
jae
les
lret
fadds
or
pop
adc
mov
into
fldl
movsl
in
mov
cmp
pop
lods
jge
lahf
mov
or
hlt
enter
adc
rcpps
clc
push
cmp
sub
in
adc
jmp
inc
xchg
and
pop
loopne
leave
movsb
movsl
mov
std
sbb
outsb
xchg
or
aaa
cmp
enter
jge
jnp
or
fcoms
pop
dec
addl
lcall
sti
aam
scas
call
cli
sbb
mov
add
movsb
xchg
or
jmp
pop
sti
cld
mov
jbe
std
imull
idivl
stos
xchg
cmc
add
dec
ficompl
mov
sbb
xchg
lret
mov
xor
in
shrb
or
sbb
ret
ret
sbb
loope
les
mov
pop
fildll
or
inc
fwait
mov
mov
cmpsl
fdivr
arpl
cmp
cmp
test
stos
repz
das
add
mov
bound
inc
mov
inc
sbb
lods
xor
loopne
and
and
push
xchg
mov
mov
inc
inc
mov
pop
and
cmp
shll
pop
xchg
xor
stos
and
cmc
mov
inc
pop
mov
in
fdivrs
in
cltd
pop
inc
cmp
mov
cmp
fldt
scas
aas
and
sub
inc
das
xor
dec
xor
mov
cmp
pop
test
jl
aad
jbe
and
aam
inc
fcoms
or
mov
cmp
sub
stos
sbb
jmp
xor
cmp
push
int3
push
imul
stos
push
dec
cltd
push
push
movsl
cmp
sbb
cltd
gs
or
nop
or
adc
push
mov
xor
int
cwtl
dec
push
mov
mov
mov
in
insb
div
pop
or
cmp
xor
add
lret
lahf
insb
pop
and
xor
dec
adc
in
stc
int3
loopne
sahf
loop
pop
mov
push
sbb
jle
lcall
scas
inc
xchg
cmc
shr
jge
addr16
pushf
je
dec
sub
push
jnp
imul
push
push
adc
mov
mov
arpl
ds
bnd
mov
shlb
ret
cmpsb
pop
sbbb
outsb
bound
imul
lock
fisubrl
jmp
dec
fs
nop
mov
mov
mov
cmpsb
stc
sahf
mov
xor
es
sub
push
es
and
push
insb
ret
out
int
lret
aam
clc
ja
mov
jg
bswap
inc
or
gs
adc
mov
xor
pop
jbe
adc
hlt
insl
sub
iret
iret
divb
btc
out
pop
mov
out
cpuid
bound
add
aad
mov
mov
ret
lock
jo
sbb
loop
dec
lds
imul
or
push
scas
jnp
inc
xor
je
lahf
popa
push
dec
jb
in
cli
sbb
xlat
and
pop
fsts
faddp
xlat
es
dec
and
and
std
dec
jae
call
and
sub
sub
pop
call
dec
popa
testb
jns
jl
aad
stc
bound
inc
in
popf
std
popf
popa
xchg
je
push
jns
xchg
xor
fcmovu
pop
ljmp
fldenv
xchg
jp
or
and
adc
fcomip
ret
mov
shrb
add
push
xchg
dec
cmpsb
or
jp
decl
mov
js
inc
scas
movsb
add
jecxz
mov
mov
adc
and
scas
push
dec
arpl
inc
and
or
mov
lods
mulb
test
cmp
inc
jae
sub
push
mov
test
add
pop
cmovl
dec
pop
cmp
outsl
ret
mov
jb
or
or
jnp
out
bound
jmp
mov
in
lahf
adc
and
loope
es
mov
mov
lret
cmp
jns
xor
cs
push
push
xchg
or
xlat
arpl
leave
push
fstpt
negl
cmpsl
aam
xlat
inc
loope
filds
fiadds
cmc
unpckhps
mov
jle
hlt
lea
rep
stc
loope
cs
sbb
cmp
aas
gs
daa
out
adc
cmp
push
in
fadd
xbegin
xchg
movsb
in
mov
movsb
dec
lret
and
sbb
bound
fmull
mov
adc
jns
movsb
dec
mov
aam
push
add
cmpsb
pop
notb
clc
or
out
sti
insl
jle
mov
imul
or
bound
lods
dec
nop
add
scas
or
lods
into
gs
and
push
mov
sbb
mov
xor
ret
add
xor
or
add
jne
inc
jb
aas
xchg
das
sar
cmpsb
xor
movnti
or
jg
cltd
in
stc
lret
repz
stos
mov
sti
mov
xchg
cmp
jmp
aam
sub
mov
mov
mov
pop
mov
mov
orb
xor
mov
mov
xor
jge
dec
jp
cmp
in
sahf
mov
cmp
jecxz
inc
sbbb
shl
adc
cli
leave
es
dec
cmpsl
insb
cmp
sub
jecxz
add
cmc
inc
mov
dec
push
loopne
jo
in
es
mov
mov
dec
adc
push
xchg
mul
inc
jmp
fldt
add
xchg
mov
adc
xchg
dec
ret
decb
inc
or
pop
loope
pop
jae
mov
cmp
mov
lcall
outsb
aas
je
out
or
push
xchg
jo
push
mov
push
and
and
jo
mull
insb
fsubs
jae
and
mov
rorb
and
sbb
insl
adc
std
xchg
mov
cli
aad
sarb
adc
mov
sub
xchg
inc
sub
out
cwtd
mov
test
xchg
out
outsl
cmp
in
or
and
sub
neg
mov
insl
je
loopne
imul
push
jp
add
or
mov
sti
inc
jno
mov
xchg
adc
ror
sahf
and
imul
lret
aam
stos
mov
adc
adc
jl
in
mov
and
les
push
pop
in
sub
pop
cli
cwtl
xchg
cwtl
test
push
loop
out
ljmp
push
addr16
sbb
rorb
pop
dec
and
lock
lcall
and
pop
jnp
mov
and
mov
sub
jle
fstl
mov
setnp
rclb
cmp
aaa
mov
jno
push
add
sub
gs
addr16
mov
les
or
xchg
jmp
outsl
mov
cltd
inc
pusha
mov
cmp
ret
and
dec
add
mov
fwait
test
shll
out
push
mov
fwait
jle
push
xor
jbe
clc
shlb
aaa
jge
push
xchg
gs
lea
cmp
mov
adc
into
inc
mov
push
mov
negb
outsl
scas
pop
jg
ficomps
loopne
xchg
in
mov
aas
scas
shl
xchg
xor
xor
lcall
lods
adc
inc
push
cmp
sbb
ret
int
loope
sub
lret
fists
add
add
pop
inc
mov
push
in
test
hlt
push
daa
fs
adc
gs
dec
ret
add
jmp
and
jp
test
mov
mov
daa
add
not
movsl
dec
mov
inc
push
sbb
ret
in
add
pop
or
call
insl
arpl
add
sub
fmuls
testb
add
xor
xorb
arpl
cmovnp
popf
xor
pop
push
push
and
xor
lret
jbe
scas
inc
dec
jns
xchg
cwtl
into
lock
push
dec
mov
fstl
faddp
cmp
fwait
js
or
mov
out
lcall
js
subb
lock
jl
insl
xchg
inc
jg
fldenv
aam
xchg
hlt
inc
lods
pop
jmp
fisubl
cs
adc
inc
xor
int
popa
dec
je
mov
ss
sbb
lahf
push
dec
inc
push
dec
sub
sbb
dec
fldl
lods
inc
cmp
cmc
mov
clc
outsb
mov
jno
loop
imul
push
movb
sub
push
call
xor
jbe
pop
push
sbb
fucomip
sub
inc
cmp
fwait
pop
rcll
inc
pop
add
inc
aad
jbe
insl
push
xchg
pop
xor
push
lret
jb
mov
out
jmp
fsts
je
ja
in
lds
std
adc
scas
push
adc
add
ret
ds
or
adc
stos
mov
es
addl
and
adc
mov
daa
cli
xchg
loope
int3
xor
iret
mov
stc
nop
lahf
push
int
imul
and
or
push
lcall
xchg
loop
cmp
push
fwait
or
dec
cltd
loopne
repnz
jge
daa
mov
cmc
lock
fwait
sbb
shlb
data16
jbe
pop
rol
repnz
ljmp
sahf
mov
jns
jp
cmpl
sbb
push
fldt
push
sub
inc
mov
mov
aad
out
les
xlat
adc
mull
mov
shll
dec
adc
fucom
test
data16
mov
ljmp
and
or
push
adc
inc
xlat
mov
test
cli
pop
call
shlb
and
jecxz
pop
sarb
or
mov
jns
imul
xor
cmpsb
sbb
stc
push
mov
dec
xor
xor
std
add
jne
in
nop
jbe
ret
adc
sub
pop
in
imul
mov
dec
xor
pop
pop
call
lods
fs
daa
dec
shll
add
lock
jo
les
jge
imul
and
andb
in
ja
in
test
jecxz
push
pop
or
cmp
imul
add
and
cli
addr16
je
mov
xchg
and
jae
repnz
sti
fwait
out
push
push
sbb
mov
aad
mov
sbb
test
das
popf
adc
scas
and
out
flds
cli
xor
xor
insb
sbb
sbb
inc
fcoms
pop
pop
mov
xlat
ret
into
faddl
cs
mov
mov
xlat
lock
pusha
push
push
inc
xlat
outsb
incl
fildll
inc
lret
xlat
mov
pop
mov
cwtl
and
sahf
and
sub
pop
in
push
rcrb
daa
sbb
mov
ror
mov
sbb
mov
jmp
cmp
imul
in
pop
push
inc
pop
inc
mov
push
mov
icebp
je
ds
xchg
out
push
xor
ret
add
pop
test
out
mov
pop
xor
jbe
pop
dec
adc
mov
in
pop
in
cld
mov
in
mov
jle
lahf
pop
jmp
fistl
mov
fstp
popf
push
xor
mov
xor
cmpsb
fmuls
addl
xor
daa
cmp
out
cltd
add
jnp
cmc
test
mul
adc
or
and
cmp
aas
int
out
push
out
adc
jmp
xchg
xchg
neg
ja
popf
add
roll
push
or
mov
cs
fsubl
mov
sub
loop
cli
push
xor
repnz
pop
xacquire
mov
mov
add
sbb
mov
stos
mov
inc
and
sbb
iret
les
cmp
cmc
dec
or
imul
sbb
nop
sarl
inc
mov
add
fdivl
push
xchg
push
sub
dec
popfw
inc
mov
jle
cmp
aad
movsb
jbe
cmp
xor
pop
and
cmpsb
sbb
dec
dec
enter
stc
cmp
orb
pop
scas
mov
fwait
loop
cmp
or
orl
das
ljmp
lcall
adc
pop
jecxz
out
imul
xlat
jg
and
mov
int3
rol
jo
jae
scas
lcall
pop
mov
call
stos
mov
add
jnp
lds
xchg
xchg
mov
lds
push
rol
cmp
push
and
imul
out
call
inc
testl
dec
imul
jle
int
jo
pop
jecxz
inc
stc
adc
xor
andb
out
mov
mov
or
and
jg
cmp
dec
out
aas
ja
sbb
js
mov
pushf
addr16
pushf
pop
aam
mov
daa
cmp
loop
insl
orb
and
mov
xlat
adc
xchg
and
ja
lea
and
sbbl
inc
jbe
mov
mov
leave
sbb
and
pop
cmp
fldt
test
push
jo
popf
xchg
jne
push
and
out
loop
stc
stos
push
mov
das
or
fistpl
das
out
pop
mov
xor
lret
mov
mov
iret
push
outsb
out
call
sub
sbbl
icebp
in
loope
or
je
test
or
inc
repz
xor
lods
mov
mov
xchg
pop
sbb
inc
dec
or
ljmp
push
fyl2xp1
mov
fnsave
mov
lods
out
add
stos
mov
repz
sti
mov
or
sahf
jns
add
insl
lret
ljmp
rolb
fcomp
adc
roll
and
pushf
into
push
nop
cmc
push
and
xchg
inc
aas
jb
push
xor
inc
pushf
popa
popa
in
daa
popf
mov
cmpsl
mov
push
hlt
add
push
push
fildll
cld
aas
dec
sbb
xchg
outsl
dec
lock
in
nop
jne
push
mov
aam
in
leave
or
push
imul
pop
lods
addr16
xor
add
dec
out
jge
testl
fsubrs
xor
fistpll
out
pop
stos
inc
inc
jge
xchg
and
adc
jne
sub
aas
sbb
pop
mov
push
mov
xor
push
test
popf
push
rcl
insb
dec
xlat
add
or
mov
pop
ljmp
ret
ss
fdivl
lock
push
insb
jecxz
lahf
push
cltd
mov
cmp
pop
imul
mov
push
pop
loope
push
inc
mov
inc
push
push
out
aas
mov
into
or
pop
push
inc
iret
gs
jo
sub
into
mov
push
dec
mul
pop
pushf
pop
add
mov
adcb
inc
and
stos
dec
cmp
xchg
sbb
mov
clc
nop
sub
pop
cmp
ljmp
ret
push
sbb
mov
insb
insl
lret
dec
fdivrs
jb
cmpsl
and
mov
lret
data16
addl
mov
and
enter
and
adc
jp
les
push
cmp
xor
jge
scas
rcrl
xor
adc
push
and
mov
ja
jmp
inc
stos
cld
dec
scas
mov
out
ret
mov
shll
mov
pcmpeqd
cmp
into
pop
shlb
das
jno
cli
imul
adc
sahf
loope
sub
push
testl
push
xor
imul
fidivrl
inc
xchg
xchg
xchg
jmp
jle
and
iret
fimuls
xchg
pop
in
mov
hlt
and
xor
fnstsw
iret
fdivrs
scas
arpl
es
loope
inc
in
jmp
mov
add
iret
std
mov
mov
lods
xchg
dec
popa
sub
mov
aad
xchg
movsb
and
jne
aad
syscall
mov
movsb
movb
inc
inc
aaa
adc
lret
mov
adc
jmp
push
movsl
and
xor
insb
pop
loop
loopne
lret
jmp
pop
and
insb
cmc
push
test
popf
stos
jne
clc
out
xchg
dec
mov
cwtl
push
cmpsb
adc
push
imul
pop
add
jge
and
sarb
mov
fisubs
out
xchg
test
xor
mov
xchg
popf
mov
bound
test
add
or
lds
ja
adc
add
dec
movsb
or
leave
incl
stc
mov
lahf
push
stc
or
dec
cmc
inc
ror
rcrl
xor
dec
and
iret
loopne
sbb
pop
int
sbb
lea
jle
mov
fiaddl
orb
sti
sbb
testb
sbb
mov
mov
cmp
lods
fwait
add
in
stc
mov
icebp
jp
mov
clc
aad
push
leave
sub
push
imul
in
cmpsb
scas
aad
cli
dec
nopl
cmpsb
add
out
jnp
dec
push
push
pop
mov
sarb
xor
data16
mov
cs
nop
stos
inc
mov
mov
inc
sub
mulb
adc
fbstp
push
icebp
push
stos
mov
stos
and
mov
lahf
xchg
ret
stc
test
sub
jbe
ud0
sahf
out
std
push
sub
test
sti
inc
lahf
mov
insl
in
and
mov
test
push
or
sbb
cmp
cmp
cmp
mov
or
je
daa
adcl
xlat
ja
imul
std
dec
mov
scas
push
xor
cmpl
mov
mulb
mov
xor
mov
ds
add
pushf
sbb
adc
stos
jae
mull
sub
mov
add
sbb
sbb
mov
jns
js
sub
adc
mov
aas
orb
push
pop
test
jo
lods
imul
pop
xor
fcomps
jns
xlat
jne
pop
and
xchg
jmp
pushl
leave
mov
movsb
add
popa
rolb
pop
pop
pop
lret
mov
arpl
inc
jp
lret
out
repz
ja
xchg
add
cmp
mov
jp
scas
jle
ffreep
js
sahf
repz
pop
imul
popf
aam
cs
scas
in
or
xor
push
out
outsb
fiaddl
mov
pop
dec
xor
aam
add
jl
jmp
roll
lock
xorl
lahf
mov
push
mov
sub
mov
cwtl
out
aad
add
lahf
mov
pop
sbb
stos
movsl
je
repnz
std
and
ja
call
and
idivl
cmpl
and
lahf
mov
int3
pop
lods
sub
xchg
xor
mov
jne
popa
xchg
mov
or
aaa
addr16
shll
dec
fwait
push
stos
lock
lret
jg
outsl
mov
push
mov
mov
push
scas
test
jecxz
enter
arpl
lret
add
shrb
adc
popa
push
or
mov
sbb
pop
stc
jns
lock
cmp
sub
and
int3
jbe
and
jns
std
mov
test
popf
mov
push
inc
xchg
xor
inc
imul
lea
push
push
inc
inc
jae
sub
pxor
ljmp
mov
cli
pop
dec
in
cltd
in
fsubrl
mov
xchg
outsl
mov
test
divl
jge
rcl
cmpsb
push
addr16
out
mov
cmp
pop
sbb
imul
push
ljmp
jo
ss
mov
mov
cmpsl
or
mov
lret
or
outsl
or
dec
sarb
mov
mov
sub
fstl
cmpsl
lock
xchg
daa
rcll
cs
mov
adc
and
cmp
ret
mov
enter
adc
in
aas
jno
pop
cmp
leave
test
mov
pop
mov
movsb
jecxz
sysret
data16
sbb
xchg
fwait
jp
pop
push
xor
mov
cmc
insl
pushf
mov
ret
popf
sub
daa
int3
outsb
pop
xchg
and
cmp
cmc
notb
lds
or
das
cmp
mov
pop
fs
cmp
xchg
mov
js
mov
mov
xchg
mov
add
jne
rdpmc
pop
or
rcrl
dec
bound
pop
pop
lock
mov
pop
jmp
lds
popf
xchg
xor
jmp
les
fistpl
fnstcw
ja
in
dec
mov
pop
cltd
inc
je
scas
xchg
outsb
imul
add
inc
sbb
jle
and
or
cmp
adc
and
fs
mov
add
aam
pop
insl
or
aam
test
pop
push
xchg
out
loope
loopne
iret
aas
mov
cmp
push
sbb
cld
adc
mov
mov
pop
in
xchg
testb
imul
mov
rcr
out
ja
mov
fs
inc
inc
sbb
sub
rclb
daa
movsl
mov
orb
call
ret
faddl
mov
ret
or
cld
std
push
jp
mov
adc
push
dec
jno
and
in
rcrl
jl
pusha
lret
cli
cwtl
dec
mov
inc
imul
add
loopne
imul
push
push
push
mov
or
int3
lret
arpl
adc
mov
cmpsb
rorb
in
negb
rolb
lods
sbb
xchg
pop
sahf
cmp
xchg
jae
fwait
jp
jns
push
sbb
or
ret
lods
cmp
inc
divb
push
inc
loope
sub
sbb
or
popf
cmp
inc
mov
ret
xor
das
xchg
add
shlb
js
je
outsl
xchg
jns
repz
mov
testl
mov
popf
adc
xor
test
sbb
xchg
xor
push
scas
mov
and
imul
dec
xlat
repnz
js
xchg
push
daa
repnz
les
daa
sub
mov
scas
push
out
push
rcrl
jle
mov
mov
adc
jmp
adc
sub
ljmp
call
enter
mov
in
inc
mov
popa
int
cmpsb
mov
ret
std
out
in
cmp
sub
sbb
adc
dec
rclb
lock
aas
dec
sahf
push
xchg
xchg
les
mov
imul
cmc
jnp
loope
movsl
mov
imul
mov
jnp
push
fst
xchg
in
fisttpl
decb
cld
adc
jae
rcrl
scas
xchg
into
imul
fcmovb
cmp
iret
adc
xor
xchg
xor
dec
cltd
pop
sbbl
cltd
pushf
stos
push
lret
fmul
iret
jmp
or
mov
in
pop
pop
outsl
insb
sbb
or
ret
pusha
dec
outsl
adcb
mov
jo
aaa
adc
addr16
je
sub
and
pop
iret
sub
std
jp
pop
push
xchg
push
xrelease
pop
push
xchg
fs
in
repz
cld
das
xor
and
inc
aad
out
push
adc
add
mov
push
mov
pop
cld
mov
push
pop
inc
decb
stos
adc
fs
ret
or
mov
aam
ret
xchg
imul
jle
std
push
adcl
dec
int3
fistl
in
out
gs
add
sub
adc
pop
xor
outsl
int3
ret
xchg
push
push
pop
pop
cmpsl
cmp
leave
xor
movsb
or
and
xor
aad
pop
sub
jae
imull
test
pop
dec
fdivrl
pop
lds
and
cmp
fiaddl
dec
xor
sbb
cmpsb
lods
ficompl
ja
or
push
rcll
and
lods
into
call
dec
mov
and
stos
das
hlt
lods
add
rol
sbbb
xor
sub
push
xchg
push
jp
js
jne
or
cmp
dec
push
and
mov
dec
mov
in
aam
imul
stc
fistl
in
or
int
mov
jecxz
xor
scas
mov
push
xchg
iret
jo
pushl
or
fadd
dec
pop
push
mov
inc
out
enter
filds
jbe
fisttpll
mov
roll
xchg
and
sahf
jae
mov
in
fidivrs
test
or
sub
cmpl
js
fdivrl
test
gs
frstor
mov
sub
mov
mov
xchg
adc
out
mov
mov
das
xchg
jae
mov
imul
test
js
lea
movaps
or
ss
popf
nop
mov
xchg
lcall
andl
scas
push
pop
xchg
in
inc
dec
or
dec
or
call
jbe
pop
lea
mov
push
xor
sti
cmpsl
sub
inc
in
sarb
or
lret
xchg
outsl
loop
mov
daa
cmpsb
out
mov
sub
dec
xchg
inc
dec
xor
out
cs
xchg
imul
xchg
cmp
ret
test
cmp
jne
jl
out
mov
cmpsb
test
loopne
xchg
call
sahf
xchg
divl
dec
mov
add
add
jecxz
xchg
bnd
test
in
jecxz
mov
ljmp
mov
adc
and
faddp
mov
mov
mov
ret
xchg
xchg
jmp
xchg
mov
ret
xchg
sbb
adc
das
dec
sti
insb
test
jo
push
inc
in
nop
push
mov
xor
mov
sub
shlb
andl
push
push
mov
adc
repz
jmp
ds
rolb
xchg
mov
jl
cmp
test
lods
insl
cltd
in
mov
in
xchg
inc
movb
pop
mov
cmc
stos
push
sahf
cmp
in
dec
push
xchg
mov
sub
int3
xor
sbb
xchg
cmp
fiaddl
sbb
dec
and
test
pop
jmp
sbb
fnstsw
adc
in
aaa
xchg
test
xor
sub
lods
fsubs
push
jge
jp
mov
adc
out
mov
xlat
dec
jae
test
sarb
lret
jnp
lcall
test
fldl
das
aaa
sub
push
out
jp
test
cmp
mov
adc
dec
inc
addl
insl
cmc
loope
and
inc
mov
xchg
jbe
ret
adc
inc
mov
sti
inc
push
cmp
xchg
xchg
inc
push
cmp
iret
xor
cmpsb
shl
jb
test
inc
imul
cmc
mov
int
inc
add
pop
dec
push
cmp
mov
leave
cltd
mov
adc
mov
xchg
mov
fwait
aad
xchg
or
add
fdivrl
and
fcompl
fisubl
dec
inc
add
add
inc
fcoms
sbb
inc
nop
iret
xor
cmc
insb
pop
dec
into
pushf
je
mov
enter
sub
in
ss
or
fidivl
aaa
pushf
fcoms
clc
xor
adc
push
xor
addr16
inc
push
xchg
jno
mov
pop
sub
or
cmc
pop
out
mov
mov
jae
cmpsb
jo
adc
mov
test
pop
mov
or
ljmp
or
shl
test
iret
cmp
jle
push
in
fistpl
push
stc
cmp
push
mov
icebp
pusha
or
xor
mov
fisubrs
rcrb
dec
mov
jno
jle
and
xchg
pop
and
popf
pusha
pop
mov
pushf
or
ficoml
outsb
inc
addr16
push
in
add
adc
jecxz
stos
sbb
sahf
adc
addr16
jecxz
addb
inc
adc
mov
mov
and
jae
mov
outsb
cwtl
add
push
stc
mov
addr16
or
xorb
inc
hlt
inc
pop
cltd
xor
push
sub
aaa
push
pop
push
add
sti
popf
test
push
fcomp
inc
jmp
aas
gs
das
mov
dec
jns
dec
add
or
dec
fcomps
sbb
lahf
push
dec
fiaddl
mov
cld
or
mov
and
mov
into
mov
inc
and
data16
mov
xor
jg
lods
sub
or
movl
inc
cmp
pop
rorl
xchg
dec
sbb
lods
in
mov
inc
bound
cmp
xor
jne
iret
mov
or
sbb
lods
or
ret
imul
leave
mov
data16
rcl
mov
aas
insb
push
inc
pop
cmp
xchg
dec
jg
mov
call
sbb
addr16
mov
add
adc
add
test
ret
mov
cli
subl
cltd
add
pop
fucomi
push
jb
sub
lea
sbb
flds
iret
int3
stos
aad
inc
xlat
xlat
subl
test
fdivrl
add
enter
aaa
cmp
push
xchg
clc
jb
sbb
inc
ret
jb
std
out
sbb
fs
xlat
ja
arpl
pop
push
test
push
cs
mov
jge
add
ljmp
add
aaa
inc
cltd
xchg
dec
arpl
jbe
ds
or
push
mov
mov
mov
dec
pop
imulb
cmp
cmpsb
scas
into
jl
test
lret
fwait
pop
mov
mov
dec
aad
subb
sub
test
lods
inc
push
add
xchg
add
scas
stos
mov
push
push
mov
mov
cmpsl
icebp
cmpsb
in
xchg
adc
jl
mov
add
or
cmpsb
and
fbld
cmpsb
sub
pop
das
add
dec
jl
xlat
icebp
add
addr16
xchg
cmp
push
pop
lahf
mov
aam
imul
daa
lea
jo
adc
pop
mov
mov
xor
xor
push
cmp
mov
insl
movsl
sbb
cmp
mov
xor
jl
add
test
xor
lahf
sub
nop
shll
pop
jle
shlb
inc
sub
push
fstpl
call
or
ficoml
and
lock
adc
and
xchg
push
add
jge
add
xchg
jno
jl
les
scas
cltd
fwait
xor
jae
push
sbb
sub
mov
cmc
xchg
mov
dec
jmp
pop
mov
imul
pop
rolb
or
mov
fiadds
cltd
lret
xchg
xchg
and
pop
sub
pop
jno
pop
sub
inc
outsb
cmpb
or
or
out
repz
jae
rorl
stos
mov
sub
fsubrs
into
mov
stos
js
ret
mov
icebp
xchg
ret
cmp
sarb
and
loop
stos
outsl
in
ja
fidivrs
push
sbb
outsb
idivl
sub
lret
repz
jge
jb
jo
das
mov
orb
fstl
call
push
jmp
int3
xchg
cmp
jecxz
orl
mov
mov
ljmp
jno
mov
or
loope
fidivs
shrb
lea
and
xchg
and
push
sbb
sub
int3
sbbl
jno
jne
lcall
in
push
mov
sub
leave
or
jo
jnp
jecxz
mov
loop
xor
add
es
mov
lea
jg
repz
repz
push
aad
or
scas
sub
in
mov
iret
shll
and
js
and
jbe
sbb
pop
test
mov
iret
mov
mov
outsl
idivl
jmp
cmp
xlat
xor
je
lods
mov
bound
gs
sbb
xchg
inc
outsl
jecxz
xor
bound
mov
pop
cmp
push
push
sbb
fisttpll
stos
push
loope
sub
test
sbb
push
jno
pop
mov
pop
test
movsb
fwait
cmp
in
out
add
stc
push
jno
adc
pushf
dec
jl
jl
xchg
push
iret
out
xchg
scas
loope
sub
inc
pop
push
cmp
lea
add
jae
out
in
ret
pushf
out
jecxz
or
imul
movsb
mov
arpl
loopne
pop
inc
stc
into
and
cmp
pop
stos
sbb
popf
add
pop
imul
outsb
sbb
pop
mov
bound
loope
shrl
loop
insl
imul
data16
inc
imul
and
out
call
mov
sbb
mov
dec
ljmp
fstpt
mov
std
sti
repz
test
add
pop
jno
es
jne
rcll
mov
repnz
add
xor
cmp
jo
test
popf
loopne
imul
cmp
pushw
adc
push
stc
push
mov
dec
test
scas
push
ss
mov
mov
insl
ljmp
xchg
out
sbb
ds
repz
mov
clc
cs
into
dec
movsb
xchg
bound
lea
inc
add
add
xchg
iret
out
out
inc
imull
mov
jne
out
jg
pop
les
xchg
jno
dec
pop
and
dec
sbb
lcall
mov
enter
adc
xor
cmp
hlt
xor
jae
mov
fisubl
imulb
out
mov
push
les
or
push
test
and
mov
adc
mov
adc
cvtps2pi
cmpsb
es
in
inc
loope
insb
outsb
incl
in
fsubrl
aaa
cmpsl
das
notl
out
mul
jge
lds
outsb
sub
jnp
ljmp
and
or
inc
shll
mov
enter
xchg
cltd
lock
jb
and
mov
mov
adc
cmp
xchg
sbb
mov
lea
fnstenv
add
loop
pop
mov
xor
test
add
jne
add
sbb
dec
fcmovb
cld
mov
lea
movsb
ljmp
jl
rcll
or
rolb
jl
std
ljmp
cmpsb
push
ret
aaa
lods
jb
push
pusha
das
mov
dec
or
popa
jne
mov
aam
loopne,pt
test
repnz
cli
cmp
mov
aas
cld
lds
add
pushf
adc
enter
iret
inc
push
push
pop
fmuls
and
fsubl
nop
xor
or
outsb
mov
jo
ror
dec
icebp
inc
lcall
xlat
pop
mov
cmp
push
or
pop
es
sbb
mov
xor
sbb
xchg
push
adc
je
iret
jae
gs
out
mov
cld
sar
scas
cmp
test
cmp
fists
rol
mov
lahf
ja
jmp
sti
loope
ret
mov
sbb
mov
mov
pushf
leave
fidivrs
ds
jecxz
aaa
jecxz
sbb
xchg
adc
lret
hlt
mov
stc
outsl
push
inc
pop
mov
ds
jl
xchg
rol
jbe
adc
inc
adc
push
add
cltd
stos
test
push
mov
and
sbb
stos
mov
and
and
aam
movsb
and
roll
mov
xchg
mov
xchg
mov
mov
sbbb
sub
into
mov
dec
lcall
jne
lcall
and
cmp
ja
inc
shl
pushf
xlat
shrl
push
jge
mov
inc
test
jo
push
cli
xchg
addl
loopne
xchg
sbb
mov
inc
xchg
push
lret
pop
push
xlat
or
movsl
jp
mov
dec
xor
and
xor
outsb
rolb
mov
mov
mov
fdivs
pop
dec
mov
ds
mov
mov
jb
inc
mov
jmp
dec
test
ljmp
sbb
adc
repnz
sub
push
out
inc
scas
cmc
jns
pop
xor
test
add
test
dec
pop
out
or
push
fbld
jp
cmpsb
rorb
fiaddl
mov
sub
xlat
data16
xor
mov
js
mov
scas
jg
clc
outsb
lahf
lods
fcmove
jnp
sahf
stc
imulb
in
and
mov
push
jmp
mov
pop
cmp
cmp
cmpsl
test
scas
mov
push
outsl
jns
jnp
mov
shll
add
jno
inc
mov
add
push
nop
xor
xchg
or
pop
adc
inc
cvtps2pd
dec
lcall
xchg
xchg
cltd
inc
enter
test
mov
movsb
outsl
lock
mov
sub
jns
mov
mov
dec
mov
push
pop
movsl
cmp
cwtl
insl
push
xchg
mov
cmp
xor
and
or
mov
lret
inc
fdivs
push
arpl
adc
jp
xchg
cmp
inc
add
xchg
mov
sub
xchg
sbb
test
adc
into
push
in
pop
adc
std
outsb
mov
cmc
jge
lock
xchg
insb
and
addr16
insl
jbe
inc
push
lods
inc
adc
imul
fs
movsb
dec
pop
or
push
int
pusha
jb
clc
dec
push
lahf
fisttps
xor
push
and
and
xchg
lock
xlat
mov
cwtl
mov
into
hlt
aaa
std
mov
shrl
xchg
rcrl
aad
pusha
adc
stc
mov
out
subb
ja
jnp
scas
mov
pop
pop
data16
add
sbb
pop
cmpsl
mov
xchg
out
dec
add
aam
jg
sbb
inc
gs
outsb
inc
sbb
icebp
test
add
cmp
imul
mov
mov
loopne
enter
ljmp
test
or
sbb
mov
clc
inc
daa
test
sbb
popf
jno
outsl
daa
mov
hlt
ja
movsl
push
pop
dec
jne
xor
mov
negl
cmpsb
jle
xor
cmp
pop
pusha
sub
and
sub
icebp
mov
insl
mov
mov
dec
lcall
inc
loop
push
rcll
jg
fsubrl
clc
xor
pop
leave
xchg
inc
leave
test
mov
push
pop
das
nop
xor
cld
cmp
sub
cmp
pop
dec
mov
jge
ds
lret
dec
mov
jo
rorl
out
mov
test
adc
xchg
stos
fisubs
rclb
sub
fdivs
cmp
push
stos
jae
xchg
mov
ficompl
aam
jmp
cmpsl
repnz
rcr
popa
cwtl
cmpsl
cmpl
leave
lock
cmpb
loopne
scas
inc
add
mov
incl
inc
jb
imul
clc
enter
loopne
test
iret
xor
stos
insb
rorb
ss
sbb
sub
xchg
jmp
sbb
into
mov
shll
dec
ljmp
out
scas
dec
imul
stc
xor
xor
cmp
rcl
in
xchg
xchg
sbb
inc
test
adcb
cmpsl
fdivp
add
dec
in
or
jge
lret
add
pushf
loop
mov
cmp
mov
out
cmp
sti
aaa
int3
mov
add
scas
sahf
sahf
pop
addr16
jae
xchg
popf
sub
stos
push
psubusw
andl
subb
sbb
pushf
cmp
stc
fmul
xchg
fs
fldenv
in
jnp
jge
enter
push
push
mov
add
syscall
js
aam
dec
xchg
xchg
xchg
out
lock
pop
aam
or
ljmp
xor
jb
pop
inc
fwait
clc
divb
les
xchg
adc
bound
in
push
push
outsl
xchg
or
fyl2x
xlat
adc
push
add
in
addr16
xor
sub
mov
xchg
inc
inc
xor
push
jbe
push
add
lods
xor
or
inc
fistpl
adc
mov
pop
mov
xchg
imul
fldcw
int
rcll
mov
rol
mov
xor
sahf
test
and
sets
sub
mov
jno
xchg
dec
mov
mov
daa
push
sahf
cmp
jnp
sbb
cld
rcrl
int3
les
sahf
gs
fsubrl
or
sub
sbb
sbb
or
je
lret
ss
xlat
cmpb
movsl
jno
add
ljmp
dec
outsb
in
test
cmp
pop
jmp
mov
in
cmp
in
push
xor
aas
sub
mov
das
pop
loope
fstl
dec
push
in
push
pop
out
add
outsb
aaa
adc
pop
xchg
sbb
stc
ds
addb
scas
pop
xor
cmp
imul
jp
aam
jbe
es
mov
add
ret
mov
cmp
movsb
fdivrs
daa
insl
push
ret
adc
loopne
loop
pop
aad
scas
bound
gs
add
popa
cwtl
pushf
jnp
push
cmpxchg
in
push
insl
aam
mov
into
std
sub
cmp
adc
fsubl
rol
cmpsl
inc
cmc
add
jge
mov
adc
sub
sbb
push
out
lahf
pop
dec
add
cmp
insl
add
or
jmp
sub
negl
daa
push
xor
idiv
jp
lock
inc
push
push
sbb
dec
or
jne
inc
cwtl
adc
xlat
call
add
xor
pusha
mov
xor
mov
inc
push
pop
iret
push
scas
mov
ret
in
push
stos
or
adcb
into
sarl
jle
loop
sbb
inc
xor
test
dec
sbb
lods
fstpt
jecxz
sub
mov
stos
jns
pop
and
or
cli
aam
cld
jns
add
inc
pop
addr16
paddd
xor
fidivl
movb
hlt
jp
mov
and
jmp
mov
ficoms
dec
push
add
jae
mov
imul
fildl
jb
inc
in
xchg
adc
iret
xchg
cld
and
dec
cmpsb
cmp
adc
loope
mov
cmp
outsl
enter
ja
rorl
xor
ror
fdivl
pushf
leave
enter
pop
and
fiadds
xchg
sbb
hlt
mov
mov
sub
adc
mov
push
lret
sbb
cli
dec
xchg
aaa
shrb
js
jecxz
hlt
mov
xchg
lods
addr16
jl
in
lock
cmpsb
inc
sbb
jb
rorb
sub
mov
or
into
mov
inc
pop
add
xchg
pop
test
das
and
jns
fwait
xchg
scas
outsl
pop
push
and
xchg
adc
fiaddl
mov
scas
xor
pop
into
dec
inc
and
testl
fdivrl
or
cmc
xchg
cmp
jl
xchg
loope
or
adc
or
jne
repz
inc
lret
int
adc
es
mov
mov
test
xor
jnp
inc
pop
lret
cs
out
or
out
in
dec
inc
repz
in
sbb
inc
repz
xchg
imul
pusha
and
out
sti
adc
sub
cmpsl
mov
push
mov
pop
pop
pop
jb
mov
bnd
sbb
in
sahf
adc
aad
mov
or
in
xchg
sub
sti
push
int3
mov
and
lret
inc
int3
push
sub
fstl
lret
int3
inc
jnp
dec
sbb
xor
scas
imul
adc
mulb
aaa
scas
mov
inc
dec
adc
ljmp
adc
sbb
dec
ret
xor
mov
movsb
lods
pop
xchg
mov
das
arpl
pop
inc
ret
fstps
shrl
sub
pop
cmp
lret
pushf
movhps
ja
and
fimull
or
adc
xchg
shrb
cmpsl
cmc
loopne
lret
int3
cs
or
scas
incl
lock
cmp
movswl
shll
scas
mov
push
pop
inc
cmp
cmp
filds
mov
ss
mov
sahf
leave
mov
mov
cmp
or
mov
call
cmpb
pop
sbb
xchg
xor
fisubrl
cld
jecxz
and
xorl
pop
inc
inc
push
adc
aas
in
and
xor
inc
cmc
xchg
pop
ret
mov
xchg
xor
lods
sbb
imul
mov
bound
sub
ss
test
aaa
pusha
popa
into
adc
and
fs
cmp
cmp
sub
jne
xchg
shlb
cmp
dec
outsb
das
mov
mov
or
xor
into
enter
imul
dec
ret
cmpsl
out
xlat
mov
repnz
pop
pop
sbb
inc
test
dec
and
dec
sub
mov
add
loop
or
out
mov
dec
sbb
jo
xchg
xchg
fimull
mov
dec
outsl
inc
mov
aas
lret
cmp
sub
push
jae
in
dec
xor
sub
movsl
aaa
pop
sbb
nop
or
movsb
fwait
sub
sub
ss
testl
lods
test
add
iret
sbb
jne
adc
and
cmp
das
push
sbb
adc
add
movsl
std
mov
push
iret
mov
test
clc
dec
xchg
push
loope
xor
scas
dec
add
shlb
mov
xchg
popa
imul
out
cmpsb
stc
adc
leave
xchg
mov
mov
in
cmp
lock
mov
call
xor
loopne
into
mov
add
dec
movsb
push
lock
orb
imul
adc
iret
ds
push
rolb
xor
pop
push
pop
mov
sbb
cwtl
push
inc
mov
mov
mov
mov
scas
clc
sub
xor
jbe
mulb
xor
sbb
cmp
out
jl
stos
loop
fdivrl
jb
lea
sbb
in
inc
cli
fstpl
stc
lret
fdivl
inc
xor
rcll
cmp
jg
push
cmp
mov
sbb
subb
inc
inc
in
push
sub
sub
pop
xchg
cmp
stc
repz
repnz
enter
shll
jns
in
mov
push
mov
fwait
loop
adc
xchg
dec
ss
flds
pop
jle
or
stc
scas
pop
loop
insb
daa
clc
cwtl
or
add
aam
adc
pop
aam
push
or
dec
add
and
repz
aam
mov
adcl
add
int3
inc
shll
mov
sub
sub
adc
ret
or
mov
push
add
pop
sbb
out
ljmp
xorb
xchg
hlt
ljmp
shrb
insb
mov
lret
and
mov
lods
xchg
and
fldcw
addr16
cli
and
mov
popf
mov
xchg
jp
pop
dec
scas
adc
mov
xor
xchg
mov
sub
mov
aaa
xchg
and
mov
adc
or
sti
sbb
daa
mov
jb
push
mov
nop
lcall
dec
fld
addr16
xor
push
mov
adc
cmp
divl
arpl
es
sub
pop
pop
xchg
mov
adc
rcl
fidivrs
cmpsb
push
dec
cmp
imul
fldenv
fdivl
bound
adc
insb
movsl
mov
enter
pushf
dec
cli
mov
test
cli
cmpsl
roll
in
insl
xchg
mov
mov
aaa
sub
sbb
data16
lahf
sbb
mov
sahf
sbb
pop
leave
dec
xchg
mov
les
mov
add
jno
mov
ret
outsb
sub
out
shlb
and
mov
ds
xchg
aad
gs
imul
cmc
add
shrl
jae
pop
js
jge
mov
jns
mov
push
xchg
pop
adc
mov
mov
cmpsb
push
mov
aam
dec
fwait
cmp
mov
jb
xchg
adc
aas
cmp
or
les
cld
cltd
push
adc
sub
xlat
pop
xor
adc
int
int
push
dec
in
jge
jo
inc
test
pushf
mov
sti
dec
sbb
add
fucomip
testb
test
sub
std
jge
jne
movsb
das
pushf
scas
loop
or
push
stc
decb
pop
xchg
push
sbb
ja
cli
cld
xchg
imulb
and
adc
mov
xchg
frstor
jle
xor
sti
insb
xchg
jo
aaa
aaa
adc
sbbl
fs
dec
mov
mov
inc
pop
fsubrs
cmp
pop
out
jmp
addb
and
and
xor
mov
outsl
xchg
inc
mov
pop
jb
dec
mov
loope
mov
cwtl
mov
out
popf
je
sub
in
xor
cmp
or
sbb
pop
cmc
fbld
or
mov
cwtl
int3
test
data16
inc
mov
mov
dec
mov
xor
push
xchg
je
lods
xchg
dec
xor
pop
mov
dec
pop
js
mov
fwait
cmp
lret
or
dec
dec
orl
insl
cltd
inc
mov
mov
fidivl
cltd
fdivrs
pop
xchg
dec
sub
test
adc
fldl
scas
cmp
mov
test
ljmp
jne
ss
mov
mov
aas
or
je
call
lods
fwait
loop
cmp
dec
inc
push
pushf
mov
iret
dec
push
aad
rorl
inc
loope
adc
jo
cmpl
repz
pop
xchg
int
rcrb
sbb
sbb
nop
sbb
scas
test
push
leave
push
sbb
mov
push
es
sub
xchg
inc
jne
fisubrs
mov
add
inc
andl
sub
das
xchg
inc
cmpsl
inc
add
cmc
dec
and
pop
inc
ds
fsubs
add
ljmp
jnp
push
cs
mov
and
js
imul
je
daa
pop
fs
imul
push
call
add
mov
inc
cmp
dec
or
xchg
xchg
dec
rcrb
popf
mov
mov
jg
repnz
add
les
mov
ror
cld
cs
dec
dec
pop
adc
mov
sbb
or
xor
jne
fnstenv
cwtl
cmpsl
shll
jo
cmp
pushf
xchg
and
xchg
jl
mov
arpl
iret
bound
xchg
test
cmp
scas
movaps
sub
into
testl
mov
cmpb
add
sbb
pop
mov
fsub
lcall
fwait
mov
sub
divl
call
hlt
ss
inc
pop
insb
pop
xor
mov
popa
ja
mov
mov
add
fcmove
pushf
mov
sahf
arpl
fmuls
cmp
pop
jge
sahf
iret
sub
inc
movsl
das
mov
cmpsl
or
mov
fwait
rcl
dec
test
sbb
push
and
insl
and
cli
sub
nop
xchg
sahf
sbb
out
xlat
loop
xchg
inc
pop
xlat
inc
roll
cltd
jae
ret
test
mov
mov
je
xor
jbe
idiv
pop
dec
movsl
push
and
mov
push
loopne
sti
jnp
stos
scas
inc
bound
sbb
je
cmp
pushl
data16
mov
ficoms
mov
and
test
push
daa
add
xchg
push
dec
mov
test
or
jp
ljmp
push
xchg
sbb
jo
js
pop
adc
mov
movsb
or
add
add
aam
repz
xchg
movsl
push
lods
popa
into
jnp
js
test
mov
xchg
or
jb
mov
sahf
arpl
shrb
jp
gs
jmp
ja
add
or
stos
ja
cmp
mov
icebp
out
adc
xchg
xlat
cmpsb
mov
jbe
int
dec
inc
add
mov
push
rclb
pushf
mov
dec
and
jle
fsubrl
pop
js
mov
mov
dec
loopne
dec
pop
stos
xchg
pop
mov
mov
int3
push
into
mov
lcall
aaa
loopne
dec
out
orb
push
fcoml
or
push
mov
fs
xchg
or
and
cltd
xor
das
inc
pop
mov
lea
xor
imul
xchg
mov
cld
push
cltd
stc
fs
js
int
repnz
loopne
pop
jl
test
out
addr16
adc
add
jge
sbb
add
add
aaa
xor
rcr
out
cmp
adc
sbb
mov
addb
cld
inc
pushf
stos
mov
cmp
aas
adc
pop
fwait
addb
mov
or
pop
pusha
jge
jl
or
mov
push
push
mov
out
shl
ljmp
adc
xor
lds
fcom
sbb
sbb
pop
iret
mov
dec
xorb
les
jo
add
and
std
push
nop
sti
push
xor
outsl
push
cli
cs
mov
iret
daa
loopne
std
mov
out
cmc
inc
arpl
inc
std
mov
sarl
test
pop
dec
lods
or
in
cwtl
ror
or
dec
movsb
rolb
fsubrl
mov
xlat
mov
push
popa
push
cmp
cmpsl
insl
dec
stc
xchg
or
insl
xchg
aam
and
add
inc
mov
js
cmp
mov
daa
int
xchg
dec
sbbl
adcb
sti
sub
mov
sbb
mov
adc
mov
aad
adc
arpl
jmp
daa
sbb
out
jne
sbb
lods
jae
in
cld
stos
xchg
stos
out
xor
fcmovbe
into
push
je
fstpl
xor
ljmp
ss
inc
add
xchg
call
movsb
and
int
test
and
aad
adc
and
add
cmp
inc
loopne
dec
adc
cmp
sbb
or
ret
scas
ljmp
mov
xor
adc
mov
sub
in
push
or
pop
cmp
mov
lds
mov
jns
lcall
out
push
roll
js
ret
mov
push
loope
out
imul
jmp
dec
push
jge
mov
jns
cmp
adc
mov
mulb
aaa
xchg
pop
jg
and
shrl
add
sub
adc
mov
jnp
or
lock
das
stos
mov
push
mov
fdivl
ja
sbb
arpl
fdivl
cs
push
lahf
movsb
imul
sbb
ljmp
cli
insl
mov
inc
repnz
mov
call
mov
in
dec
fisubrs
xchg
xor
into
and
sub
loopne
test
xlat
ret
shrl
cmp
rcrb
in
lods
mov
loopne
inc
arpl
test
mov
lret
fiadds
xchg
xor
out
pushw
popf
daa
sbbl
add
rcll
xlat
and
mov
push
fimull
xchg
xlat
inc
pop
fwait
loopne
je
dec
mov
pusha
add
mov
push
lea
jae
ljmp
mov
sbbl
test
inc
pop
fdivrs
insb
pop
adc
jbe
jo
in
mov
mov
lahf
ss
js
adc
pop
cmp
pushf
into
inc
scas
push
mov
daa
mov
out
cli
adc
sti
int
aad
sbb
xor
inc
adcb
cli
in
add
cmp
stos
and
adc
icebp
shll
sub
pushf
gs
imul
ret
jg
cs
test
in
enter
cltd
outsl
cmp
dec
xchg
cmp
arpl
lret
pop
icebp
sbb
jmp
sbb
mov
js
inc
mov
pop
das
ds
mov
push
stc
adc
test
or
xchg
adc
test
xchg
jg
loope
mov
pop
add
pop
fldcw
pop
jmp
push
mov
and
pop
filds
scas
mov
ror
hlt
inc
jmp
into
loope
xor
jnp
xchg
xor
pushl
xor
popf
pop
in
cmp
pop
xchg
push
xlat
lock
dec
fcom
xchg
test
in
ret
mov
inc
int3
jbe
loopne
push
mov
ds
push
sbb
dec
mov
sub
pop
test
mov
add
mov
gs
ret
ljmp
mov
call
lea
jmp
test
shll
adc
pop
cmc
scas
sti
mov
aad
fistps
bound
gs
sub
mov
pop
test
and
addr16
arpl
lods
pop
mov
xchg
push
pop
jmp
fldenv
arpl
inc
cwtl
out
dec
repnz
jge
push
add
fstpt
add
test
add
cld
test
add
nop
mov
sub
aaa
mov
in
mov
pop
aaa
int3
pop
mov
sbb
or
push
stos
sub
ja
ret
sub
or
popf
mov
shrb
scas
push
add
push
test
in
dec
sub
rcr
rorb
mov
loope
jle
lods
adc
insl
inc
fwait
mov
frndint
adc
jbe
orl
sbb
ja
inc
mov
movsb
xchg
dec
filds
xchg
out
mov
inc
stos
dec
inc
neg
add
xor
dec
hlt
loopne
push
daa
pop
sub
bt
jle
jmp
int
sub
imul
mov
dec
pop
cmp
adc
insl
pop
lds
movsl
insb
shll
mov
mov
xor
xor
bnd
dec
je
fld1
shll
xor
dec
addr16
imul
faddl
les
in
add
ja
cmp
stos
incb
jmp
mov
add
insl
scas
gs
fidivs
cltd
sbb
or
adc
and
scas
and
mov
movsb
inc
dec
or
ud0
and
or
dec
sbb
add
sbb
test
aaa
xchg
mov
gs
orb
xor
int3
mov
cwtl
lahf
inc
jp
dec
inc
insb
scas
sar
loope
jbe
mov
pop
imul
mov
pop
mov
sub
das
imul
das
jl
sub
mov
pop
add
xor
stos
out
test
or
push
out
mov
repnz
xchg
add
mov
or
nop
in
xchg
and
cmp
and
pop
jl,pt
mov
push
sub
stc
js
mov
imul
cmp
ret
repz
rol
mov
adc
repnz
aam
cltd
dec
dec
cmp
lcall
mov
pushf
pushf
sub
stos
sar
sub
jnp
in
aaa
pop
ljmp
scas
div
xchg
and
cli
rcr
mov
sbb
or
and
nop
out
lret
mov
lahf
hlt
lret
fadds
decb
jae
imul
jp
aam
jecxz
add
xchg
xor
rclb
outsl
in
dec
adc
repnz
fs
sub
xchg
lret
mov
stos
mov
push
in
jecxz
sbb
jbe
loopne
out
rorb
stc
fdivrl
les
je
add
into
jns
aam
lcall
rorb
sub
aas
lret
nop
cmp
cmp
imul
out
fucomp
mov
repnz
push
in
in
insb
mov
nop
pop
mov
adc
jp
daa
inc
rcrb
sub
jmp
lret
dec
cmp
jp
js
lods
stos
call
int
bound
sti
dec
push
jno
test
lock
xchg
pop
cmpsl
pop
rcrb
push
sbb
daa
shrb
add
lock
xchg
lea
aad
int3
rorb
jecxz
adc
add
xor
stos
push
ja
sub
mov
insb
loopne
inc
out
fldt
pop
ja
pop
cltd
or
or
xchg
cs
or
ljmp
aam
push
or
and
lock
cmpsb
pop
ja
mov
pop
sub
mov
inc
mov
and
fiadds
xchg
pop
flds
std
cmp
inc
mov
add
xor
lret
cwtl
and
stos
sbb
sub
push
mov
jnp
jns
pushl
lds
and
js
dec
pop
jne
fildl
inc
cmpsl
ret
dec
push
lods
xchg
jg
add
jo
sbb
das
xchg
movsb
pop
cltd
or
xchg
push
jbe
adc
adc
or
push
mov
and
pushf
fstp
fmuls
xchg
fsubrl
cmp
cltd
mov
jo
loopne
in
pop
xlat
inc
inc
fisubl
loop
int3
cmp
adcb
adc
js
ret
and
lea
divl
and
pop
push
xchg
mov
fiadds
iret
sbb
jg
dec
and
mov
stos
cmc
xor
bound
jno
aam
rorl
mov
movsb
and
in
outsl
or
mov
lods
outsb
add
add
addr16
stc
test
lock
xchg
lods
sub
out
jmp
mov
dec
dec
in
mov
sbb
imul
dec
push
jge
or
je
and
jo
das
mov
shll
insb
cmp
xchg
pop
cmp
adc
mov
mov
adc
nop
notb
mov
es
std
xchg
push
xchg
mull
jge
sbb
daa
or
cltd
cmp
loopne
jo
call
inc
in
clc
lods
jno
pop
ret
and
mov
not
jb
mov
loop
jnp
mov
gs
lods
adc
insl
mov
clc
rcrl
push
pop
jne
mov
dec
mov
mov
mulb
xchg
int
xlat
dec
dec
stc
sbb
mov
into
lcall
xor
sub
inc
sub
fwait
or
add
push
adc
mov
xchg
xchg
popf
dec
sarb
xor
sub
sbb
rcll
xor
aaa
xchg
push
cmp
or
lea
icebp
loope
fwait
push
cli
imul
push
jnp
fs
jns
std
pop
mov
dec
popl
or
inc
je
popf
daa
ja
insb
adc
imul
test
scas
jl
imul
lahf
repz
sbb
xor
dec
inc
or
push
xchg
push
push
les
sbb
ss
push
les
outsb
inc
ja
and
sbbb
push
jne
nop
es
std
xchg
cmc
jns
aas
pop
aaa
out
inc
outsb
test
insb
mov
cmpsl
idiv
fsts
mov
lcall
out
faddp
mov
push
icebp
inc
mov
pop
in
inc
dec
sbb
jle
rcl
push
bsr
pusha
aas
leave
movsl
inc
fisubrl
bound
pushf
pushf
ret
mov
cmovo
test
dec
filds
pop
insl
loope
push
stos
adc
push
les
xchg
mov
mov
adc
jmp
rorb
and
jmp
lret
xlat
js
outsl
push
sbb
and
cs
inc
sub
push
insb
in
push
inc
addl
sbb
jmp
cmp
sbb
inc
ret
or
dec
adc
jno
mov
mov
jbe
or
jg
xchg
sub
lock
imul
mov
adc
xlat
stc
lahf
pop
fwait
jne
ja
and
dec
orl
mov
and
sti
mov
or
addr16
xor
lds
adc
sarl
cmp
aaa
jbe
pop
jmp
nop
call
push
and
jg
cs
iret
fadd
dec
xor
sbb
push
sahf
sub
sti
jle
mov
xor
out
insb
mov
fstpt
inc
jns
popf
popf
push
pushf
pushf
sub
cmp
jo
ja
hlt
fwait
jle
mov
sbb
inc
rolb
arpl
push
bound
es
cmpsb
movsb
adc
pop
ss
dec
xor
push
sub
push
xor
lea
and
cld
mov
and
mov
jb
pop
mov
out
lea
jae
push
loope
fstpl
cmp
ficomps
lea
lahf
mov
adc
lahf
inc
enter
add
mov
inc
cmc
xchg
nop
or
mov
lods
mov
push
ret
sub
xchg
sub
stos
push
stos
inc
mov
insl
jp
sbb
xchg
xchg
mov
addr16
mov
push
ret
sti
mov
mov
xchg
loop
les
fs
lods
cld
mov
jnp
movb
add
cmp
call
les
mov
popa
mov
dec
das
ficoms
push
or
mov
icebp
cmp
xchg
xor
insb
and
jnp
adc
jl
fcomps
ljmp
jecxz
mov
push
stos
mov
mov
xchg
test
dec
jecxz
xchg
sub
sbb
arpl
pop
adc
or
ss
jns
jge
xchg
faddl
jle
inc
imul
sub
movb
shrb
inc
mov
mov
mov
mov
lcall
loop
mov
leave
cld
imul
jnp
addr16
lods
inc
mov
data16
xchg
mov
xchg
mov
aas
jg
add
insb
add
mov
xchg
in
xor
sbb
sbb
cli
push
xor
xlat
dec
dec
aam
pop
dec
negb
push
or
lret
cmp
rcll
inc
scas
arpl
push
xor
lods
inc
sbbb
xlat
test
lcall
aam
clc
mov
push
insb
mov
pop
xchg
lods
adc
test
push
aad
adc
mov
add
out
cmp
lea
pushf
push
push
shll
jns
popa
pop
je
xchg
pusha
orl
push
fidivrl
mov
dec
push
insl
in
jno
js
rcl
inc
hlt
int3
test
and
clc
in
lret
pushf
call
jp
rcrb
shll
pmulhw
std
cmp
arpl
sub
lock
ss
loop
outsl
adc
jnp
mov
es
stos
fbld
cltd
cltd
dec
jns
cmp
pop
dec
jo
mov
insl
and
popa
adc
adc
cmp
push
dec
loop
xchg
dec
mov
dec
adc
add
in
adc
pushf
sbb
pushf
jnp,pt
push
dec
outsl
ljmp
jne
ss
int3
adc
adc
adc
in
js
xlat
jmp
out
and
test
sub
jmp
pushf
push
gs
shll
sub
dec
jnp
inc
ss
xor
cmp
inc
mov
sbb
outsl
mov
aam
lahf
xor
or
lods
aaa
mov
xchg
insb
dec
les
enter
arpl
push
jp
mov
cmpsb
ljmp
add
inc
dec
nop
loope
fcoms
add
inc
mov
clc
add
cs
cmpsl
push
cli
push
lahf
adc
cmpsl
lret
in
out
sub
dec
bound
push
icebp
mov
orl
cld
or
roll
pop
jb
popl
xor
xchg
adc
dec
cmp
filds
aam
xchg
mov
cmpsl
or
sub
sub
cmp
cli
or
jl
push
test
adc
xor
xchg
dec
xchg
ret
adc
or
jbe
in
and
push
mov
fidivrs
in
sub
or
dec
inc
mov
hlt
test
inc
jmp
loope
xchg
out
mov
dec
stos
mov
jge
cmpl
in
sub
jbe
jbe
or
adc
push
xchg
push
push
xor
inc
nop
add
dec
sbb
add
xor
and
pop
outsb
inc
push
mov
cs
out
sub
cltd
adc
pop
add
aas
aam
jg
and
sbb
add
mov
roll
arpl
push
xchg
pop
push
mov
sub
mov
fwait
lea
nop
pop
imul
or
or
or
xchg
sbb
lcall
xchg
scas
test
sbbl
cmp
cmp
daa
cmp
jns,pn
mov
add
jno
xchg
mov
jo
cmp
cmp
sbb
hlt
mov
push
jle
mov
call
mov
or
popf
clc
repz
je
cmp
jg
lods
loope
repnz
rcl
sbb
lods
adc
push
jmp
lcall
and
fcmovnu
mov
adc
cmp
xchg
pop
xor
flds
pop
stos
rorb
in
inc
js
out
insb
sahf
pop
dec
adc
mov
pop
cmp
push
jns
mov
sub
jo
jecxz
sub
nop
or
lret
fstl
xchg
xor
fwait
scas
imul
add
xchg
sub
fists
pop
inc
add
cmp
xor
xchg
cmp
and
dec
xor
leave
in
adc
jo
mov
push
cmp
movsb
mov
push
jae
or
inc
outsb
cmp
adc
push
popa
lods
cmpb
cmp
sbb
jne
dec
dec
dec
pusha
lock
in
xor
shll
pop
fucom
sahf
sbb
or
lret
imul
sub
testb
push
popf
push
gs
out
imul
rcr
add
or
sub
xor
mov
popa
fistpll
dec
sbbl
sbb
leave
aaa
int
insl
jns
ret
sbb
movsb
lock
hlt
ja
roll
bound
jno
into
and
push
pop
fwait
mov
xchg
call
jno
clc
cltd
push
mov
in
out
xchg
fwait
sub
loope
sbb
out
cmp
pushf
pop
dec
loop
adc
cmp
lods
cmp
ret
pop
dec
hlt
call
sarl
bound
cld
jmp
lods
daa
adc
sbb
xchg
dec
xor
sbb
jl
loope
fildll
xchg
mov
sbb
cmp
mov
div
cld
xchg
es
adc
push
xchg
pop
xchg
les
jle
mov
xchg
js
pop
or
addr16
ret
ret
dec
pop
in
cmp
inc
fcmovnbe
test
pop
push
sbb
pop
lret
out
sub
dec
inc
mov
push
sub
sub
fwait
mov
fdivr
xlat
xchg
movl
insb
mov
pop
pop
movsl
mov
mov
scas
mov
hlt
jbe
lds
bound
movsl
popf
movsb
shrl
stc
fidivs
adc
ss
mov
les
push
jmp
ret
icebp
fidivrl
into
arpl
fucom
add
loop
push
ja
pop
inc
daa
nop
jle
jno
fwait
add
cmp
or
add
add
in
push
mov
dec
sarl
adc
sbb
or
ret
movl
call
push
or
rcrb
test
jnp
push
push
pusha
mov
add
dec
fsts
push
sbb
push
push
mov
arpl
adc
inc
pushf
mov
int
out
scas
jns
jecxz
mov
push
sti
push
ja
out
mov
xchg
rcll
outsl
or
rep
and
mov
xor
mov
addr16
enter
xor
sahf
cwtl
xor
add
jno
and
into
sub
inc
int
out
xor
xchg
stos
jbe
cmp
xchg
outsb
or
sbb
xchg
push
mov
and
xor
das
xchg
pop
mov
rcrl
push
lods
xchg
mov
mov
aas
iret
cmp
xchg
push
jno
ja
clc
in
push
inc
ljmp
jns
fwait
and
jnp
pop
dec
add
ds
cmp
ret
cmp
rcrb
jecxz
sbb
shl
cmp
push
addl
movsb
notb
adc
push
aas
mov
cmpsl
xchg
movsl
jge
popf
roll
add
cmc
and
sbb
mov
add
cmpl
xchg
std
or
jns
jmp
mov
mov
jb
sub
shll
ss
arpl
sbb
jp
sub
ljmp
pop
mov
xlat
sti
rolb
movsb
ja
push
notl
outsl
xor
and
loope
jo
icebp
mov
loope
std
je
jle
inc
cli
sub
icebp
loopne
decb
shll
enter
movsb
inc
add
push
add
dec
lods
push
push
popa
iret
dec
or
jbe
mov
mov
mov
pop
push
stos
dec
or
mov
mull
rcrb
adc
int
aaa
rol
sub
popf
mov
or
imul
pop
pop
jge
into
fnstenv
fucomip
cli
dec
xlat
mov
xchg
jge
pop
cmp
jnp
xchg
xor
cmp
hlt
inc
xlat
xor
push
pop
pop
cld
xorb
push
jg
hlt
out
xchg
ret
ficompl
dec
pop
mov
call
imul
clc
adc
mov
inc
push
inc
int
mov
hlt
lock
jns
stc
sub
mov
mov
add
cltd
push
fisubrl
push
mov
lds
imul
push
push
jno
outsb
push
into
imul
push
sbb
rcl
test
add
mov
or
and
xchg
ret
jp
out
jle
inc
stc
jle
ficomps
dec
fdivrs
fbld
jno
fistpll
ljmp
add
stos
je
sub
jg
inc
push
add
mov
fldl
movsb
test
data16
mov
stos
pop
inc
ss
cmpl
insl
sbbl
insb
jae
out
push
xor
jge
sbb
push
outsl
cltd
or
xor
inc
stos
or
cmp
mov
jbe
gs
jmp
mov
mov
dec
enter
pop
inc
cmp
andl
mov
xchg
insb
iret
mov
mov
jg
push
ret
mov
push
xor
xchg
and
xlat
and
clc
hlt
add
test
je
xor
dec
frstor
insl
out
push
xor
rol
repnz
jmp
sbb
popf
hlt
jl
loop
xchg
cmp
in
aaa
pusha
push
sbb
jp
push
xchg
and
pop
mov
out
mov
enter
xchg
popf
pop
push
enter
incb
std
adc
out
subb
cmp
pop
or
ret
sub
jbe
or
jae
xchg
das
jge
dec
js
pop
iret
inc
movsl
pop
mov
faddp
cmc
cmpl
cmpsl
mov
call
test
inc
rcrb
xlat
leave
movsl
and
sbbb
mov
icebp
jns
mov
nop
in
push
adc
mov
jnp
arpl
aas
dec
pop
aaa
dec
das
pop
and
call
clc
cli
mov
sbb
or
loop
adc
mov
daa
push
insb
js
sbb
lret
pushf
inc
ja
xchg
lods
gs
pop
jae
bound
mov
sub
sahf
or
adc
push
mov
jo
lret
or
ljmp
call
add
jmp
mov
js
jmp
jns
fistps
mov
in
pop
jns
jnp
add
and
fstpl
divb
and
or
sbb
clc
testl
insb
jecxz
popf
mov
sbb
xor
fs
aas
add
fwait
jecxz
int3
add
leave
cmpb
xchg
test
push
inc
jno
lds
shlb
jecxz
mov
xchg
push
xchg
and
push
cmp
sbb
je
add
ss
and
fisubs
dec
lret
lds
fcmovne
js
stos
cmp
xor
pop
into
out
cltd
pop
js
pusha
movsb
or
xor
or
out
mov
jne
pushf
pop
push
int
das
mov
ret
jecxz
stos
mov
mov
pop
popf
repz
cs
fcompl
inc
jg
and
pop
lret
lahf
scas
and
jns
push
or
sbb
xchg
lret
jno
popa
dec
repz
icebp
inc
iret
js
fwait
adc
pop
dec
mov
xor
lret
xchg
and
push
cmp
mov
cld
mov
loop
fcompl
and
mov
mov
push
and
int3
jns
aaa
pop
cmpsb
cmpsb
sub
into
dec
cltd
sub
mov
gs
jne
adc
adc
push
jge
call
push
inc
xlat
int3
cmp
test
mov
int3
aaa
push
out
repnz
fs
jno
fmul
gs
stc
sub
inc
mov
push
or
rolb
lods
or
push
add
push
xchg
pusha
fs
mov
mov
lret
mov
inc
cmpsb
mov
and
mov
lds
repnz
adc
mov
inc
sub
int3
xchg
inc
xor
xor
mov
add
xor
les
mov
lahf
xchg
lahf
xchg
out
add
scas
mov
jge
mov
sub
popf
outsl
cmp
data16
push
push
jo
dec
xchg
dec
mov
fbstp
in
pop
or
or
and
and
nop
fimuls
negl
mov
insb
inc
mov
mov
sbb
jecxz
jno
xchg
dec
mov
loope
pop
xlat
jecxz
xor
mov
mov
jae
into
push
push
pop
inc
jecxz
push
mov
ret
cwtl
inc
cwtl
mov
add
lcall
shll
ja
pop
push
addr16
mov
jnp
xchg
mov
lods
fadds
push
pop
jg
mov
fldenv
movsb
sbb
ret
inc
jge
dec
pusha
xor
bound
lahf
mov
adc
sti
bound
jp
into
jo
xor
or
cmp
iret
cmp
adc
test
push
imul
add
mov
sub
sahf
iret
test
adc
cmp
rol
and
popf
popf
pop
cmc
sbbb
or
push
in
popa
xchg
mov
ss
mov
pop
add
popa
pop
sarb
push
mov
jge
lock
gs
lock
mov
dec
push
das
push
leave
pushf
push
test
insb
push
cmp
xlat
int3
dec
cmpsl
call
adc
dec
mov
xchg
pop
rol
push
xor
jl
fistpll
insl
sti
xor
test
inc
cmc
xchg
scas
cmp
pop
sbb
sahf
lahf
and
lret
arpl
push
mov
lret
imul
das
and
imul
lea
or
scas
cmp
cmc
sbb
mov
jb
mov
push
mov
push
insb
push
push
mov
mov
mov
push
int3
xchg
mov
mov
sbb
shlb
or
cltd
icebp
jae
aas
cmpl
call
sbb
mov
hlt
or
inc
pop
cmp
mov
jp
and
rcrb
ret
xor
inc
or
cmp
xchg
add
mov
adc
test
jne
mov
popa
mov
ds
add
lds
sub
adc
mov
popa
sbb
and
push
or
mov
push
sbb
sbb
enter
or
mov
push
push
test
adc
test
ret
lock
test
jecxz
and
push
int3
rclb
fimull
and
stc
cld
cmp
fwait
mov
cmpsb
xlat
fstpt
shrb
cmc
shlb
cmp
xchg
ds
cli
filds
sbb
sti
jns
pop
pop
adc
jecxz
ss
mov
imul
inc
sti
push
jmp
adc
inc
and
cmp
pop
std
push
andl
xor
sub
lret
ljmp
mov
sub
sbb
or
sub
scas
pop
and
andb
orl
mov
aad
sarl
inc
out
jno
add
and
jle
insl
sbb
inc
add
lret
fcmovnb
adc
mov
sub
xchg
adc
incl
sbbl
pop
sbb
pop
and
aam
jmp
les
mov
push
jp
cmpsb
cltd
in
mov
mov
jge
push
xor
insb
mov
push
inc
in
setge
sti
loop
jns
or
inc
inc
mov
addr16
inc
int
jl
out
add
aaa
mov
push
es
call
into
je
iret
add
xlat
jb
sarl
inc
cmp
inc
dec
mov
push
stos
inc
rorb
loopne
inc
and
adc
mov
and
dec
and
arpl
jnp
in
adc
mov
push
gs
imul
push
lahf
pop
mov
jne
and
fdivs
mov
or
ds
push
jo
xor
daa
fmulp
daa
push
int
mov
adc
lods
inc
push
pop
dec
push
adc
jns
jmp
sub
insl
fsubl
stos
gs
jo
push
jae
mov
lock
rolb
push
daa
cmpsb
mov
cltd
mov
push
sub
out
cmp
iret
cs
je
fiadds
cwtl
cwtl
jno
mov
cmp
cltd
adc
sbb
mov
pop
call
xchg
lods
mov
xchg
pop
in
ret
sbb
ret
aaa
lea
cmp
xor
xchg
cld
inc
cmpsl
fldenv
clc
les
mov
out
adc
mov
shll
mov
mov
fwait
xchg
faddl
insb
daa
mov
or
sbb
jp
add
push
dec
mov
xor
xlat
jb
repz
adc
xor
mov
pop
iret
fildll
or
or
outsl
or
int
int3
cwtl
in
sbb
mov
enter
push
mov
iret
cltd
rcr
mov
loope
andnps
call
outsl
xchg
mov
das
pop
jo
mov
aas
mov
mov
jo
jne
pop
test
orb
fs
lods
cli
popf
rorb
lret
jns
icebp
mov
gs
inc
pmulhw
mov
inc
cld
mov
adc
pop
adc
xor
scas
mov
jb
xchg
push
push
xor
xchg
mov
xchg
stc
cmp
test
sbb
mov
pushf
test
call
push
inc
push
mov
scas
inc
jg
and
push
jae
loopne
mov
shr
imul
xor
adc
stos
aaa
pop
test
xor
lcall
frstor
pop
nop
add
add
cmp
jl
push
in
or
and
or
mov
outsb
mov
jns
mov
test
mov
push
jmp
out
pop
imul
mov
or
neg
shrl
pop
pop
dec
les
cmp
add
test
test
mov
sub
ljmp
cltd
mov
jge
out
pop
aaa
mov
sub
rorl
cmp
xchg
push
adc
push
sub
sub
scas
je
push
push
cmp
pushl
dec
aaa
push
mov
lahf
repz
xor
push
icebp
push
insb
int
fidivs
mov
scas
test
mov
inc
fsubrs
jmp
lods
test
dec
fnsave
out
in
sub
cmpsl
rcrl
out
cmp
jae
mov
pop
pusha
aas
inc
pop
dec
or
add
shl
add
gs
cli
adc
cld
jae
fadds
xor
mov
scas
lahf
int
pop
adc
jbe
mov
lea
out
scas
sbb
gs
sub
fstps
lret
arpl
mov
inc
cmp
mov
sbb
add
push
xchg
push
and
push
jl
inc
loopne
dec
jnp
pop
mov
mov
jb
cwtl
repnz
push
add
jnp
push
pop
push
cmc
clc
test
mov
mov
outsl
xor
mov
xor
insb
jbe
ja
and
xchg
loope
lock
push
cmpsl
xchg
stos
push
adc
iret
lret
aam
or
sahf
inc
sbb
lcall
or
cmpsb
ret
repz
mov
dec
sub
aas
inc
loop
push
or
pop
divl
lcall
jne
test
scas
or
lods
mov
xchg
xor
out
ret
mov
inc
arpl
push
sub
mov
cld
sahf
jb
dec
push
xor
mov
arpl
cld
paddsw
rcrl
std
mov
fildl
cmp
and
dec
jno
gs
gs
icebp
xchg
sub
xchg
mov
dec
dec
fs
sub
cmp
push
psrad
ja
xchg
and
push
sarl
fisttpl
xchg
enter
cmpsb
xor
xor
sbbl
ss
push
stc
adc
inc
into
test
xchg
pop
cmpsl
or
ret
scas
push
inc
mov
sub
pop
mov
and
cmpsb
dec
clc
dec
pop
and
xchg
jns
mov
and
into
fcomps
sbb
mov
inc
ror
in
scas
lret
fs
push
repz
dec
push
int3
mov
leavew
lods
mov
rol
stos
fnstsw
xchg
jne
or
push
test
out
add
ret
or
add
out
dec
popa
dec
sbb
xchg
add
push
cltd
pop
xchg
into
pop
hlt
sti
in
ja
rcrl
jmp
fdivl
mov
std
stos
add
mov
or
sub
stc
mov
add
push
lods
xchg
xor
pop
jg
icebp
cmp
sub
or
idivl
cld
enter
dec
sub
adc
xchg
imul
sub
loop
xchg
ficomps
fidivrs
fstpl
fcomp
add
scas
jecxz
jle
cmc
lret
or
aad
push
inc
inc
jae
das
loop
out
lret
fstpt
mov
fisttps
lcall
cmp
adc
pop
mov
xor
xor
inc
add
in
cmp
aad
jnp
dec
sub
mov
adc
leave
in
outsl
cli
scas
arpl
out
push
inc
adc
iret
loopne
cltd
mov
mov
outsl
rorl
mov
jno
bound
pop
push
shll
xchg
daa
cmp
adc
stos
sbb
pop
and
pop
push
adc
or
pop
cmp
fucom
aam
movsl
cld
rcr
incl
js
adc
stc
jo
insl
add
loopne
fisubl
adc
and
and
jno
sub
mov
sbb
aaa
mov
cmpsb
je
push
push
dec
add
jecxz
pop
fwait
aam
hlt
jle
int
push
xchg
ja
dec
push
dec
enter
aad
and
in
pop
pop
adcb
loopne
jle
jb
jecxz
stc
ret
or
pop
adc
shll
ss
add
push
mov
lock
mov
sub
inc
int3
adc
lods
pop
cmp
pop
inc
repnz
and
mov
out
nop
and
adc
fidivrs
inc
dec
sbb
lea
mov
int3
stos
inc
mov
ja
xor
leave
mov
ficomps
mov
dec
out
jl
mov
hlt
or
test
out
jae
popf
jl
mov
dec
inc
push
movsb
adc
jge
and
mov
je
imul
mov
cmp
lret
mov
ja
test
pushf
leave
rorb
add
scas
repnz
stos
inc
xchg
inc
loop
sub
inc
movq
arpl
inc
subb
stos
or
or
sbbb
mov
push
mov
jb
sbb
mov
sbb
rol
and
stos
addr16
sahf
sub
js
es
adcb
jl
cmpl
data16
jg
xchg
push
loopne
addl
cli
bound
sbb
inc
inc
into
mov
aam
cltd
mov
xor
adc
add
bound
or
mov
fimuls
popf
xlat
jae
iret
pop
lods
or
xchg
mov
push
out
test
dec
mov
cli
or
mov
inc
cld
addr16
mov
aas
pop
or
jge
xor
jno
mov
or
scas
lock
or
and
sahf
mov
mov
push
arpl
cli
stos
xor
or
jne
push
outsb
addl
test
jg
arpl
inc
jb
xorb
lods
jne
cmp
rorl
mov
fimuls
nop
cli
push
push
je
xchg
cmp
mov
dec
fidivs
push
jne
popf
inc
fidivs
push
data16
pop
mov
hlt
xor
mov
xchg
mov
pop
jge
insb
jge
jle
push
out
adc
pusha
fdivrl
push
mov
pop
jle
lds
lods
mov
int3
mov
mov
mov
add
fstps
std
fdivr
hlt
jo
add
dec
fsubl
mov
aam
dec
lcall
fadds
cmp
in
pop
js
xchg
mov
mov
int
insb
jp
fs
mov
cmp
test
test
shl
add
xchg
pusha
fldl
sahf
push
fildl
push
sahf
add
inc
inc
sarb
cltd
mov
out
rcl
scas
loopne
xchg
orb
mov
adcb
ficoml
stc
test
outsl
cld
leave
ss
leave
xchg
ss
hlt
insl
daa
in
or
mov
and
xchg
mov
imul
call
mov
shrb
mov
dec
pop
adcb
int3
addr16
sarb
cmpsl
in
dec
push
lret
js
or
fdivrl
mov
flds
jns
xor
mov
mov
inc
add
xchg
dec
sub
add
lcall
xchg
add
std
mov
dec
push
xchg
pop
fsubrl
mov
shrb
arpl
xor
adc
pop
xor
fdivrs
dec
or
add
test
and
inc
mov
mov
fldl
std
js
cs
jl
lret
jle
cli
push
cmpb
int
push
test
rcrl
mov
mov
dec
mov
int
iret
mov
inc
ret
ss
stos
xchg
out
clc
jmp
jns
sub
mov
fs
jbe
lods
xchg
sub
jb
pop
mov
push
adc
lods
jb
dec
and
cmp
je
dec
cmp
mov
and
imul
cltd
jae
out
inc
push
out
inc
mov
sub
xchg
addr16
gs
icebp
xchg
add
test
dec
mov
fnstcw
mov
push
data16
leave
nop
cmp
cmp
dec
incl
and
xchg
lret
mov
psubsw
xchg
stc
fmulp
jmp
aad
xchg
xchg
lea
mov
shll
sbb
inc
test
loopne
popa
daa
add
xchg
jnp
jge
mov
imul
imul
pop
inc
rclb
loop
imull
xchg
lods
int3
or
push
sbb
iret
add
xor
adc
mov
lea
sahf
in
fs
leave
into
iret
iret
add
scas
addb
or
mov
jbe
jae
scas
xchg
pop
pop
xor
adc
stos
adc
sbb
bsr
imul
inc
fistps
xor
out
sub
ret
imul
bswap
fucom
jns
jge
nop
shlb
push
or
sbb
jno
mov
dec
loop
rcr
fsubrl
xlat
push
cli
sub
iret
sbb
outsb
addr16
or
push
rol
push
sub
or
dec
cli
dec
cmp
out
or
movsl
loopne
in
imul
mov
ret
shll
clc
mov
adc
enter
ficomps
pop
lret
orl
jle
sbb
cld
pop
sub
add
test
mov
mov
or
shlb
jge
push
call
xchg
insb
cmp
adc
xchg
xchg
dec
dec
cmp
cmp
and
test
jge
fdivrl
insl
out
pop
adc
roll
bound
push
mull
push
fdivl
cld
or
lret
lods
imul
mov
xor
xchg
add
sub
pushf
or
sahf
stc
shl
push
lods
bound
aas
iret
ror
push
cmp
popf
pop
pop
xchg
dec
cmp
das
lret
xor
push
inc
loopne
mov
adc
push
xchg
lret
add
mov
in
addr16
jge,pt
test
loope
ljmp
inc
jmp
cmp
push
adc
or
or
xchg
dec
sub
mov
int
and
dec
mov
mov
push
or
pop
adc
mul
xchg
cs
ss
mov
mov
mov
mov
mov
es
xchg
test
jge
into
jge
movsb
stc
cmp
mov
ja
jbe
call
test
or
jne
mov
jle,pt
sbb
inc
test
ret
lds
dec
add
or
es
scas
div
pop
xlat
test
xor
and
mov
mov
xor
or
clc
jns
push
cld
test
insb
sbb
mov
std
fwait
outsl
lret
test
inc
daa
rclb
out
repnz
jns
loopne
cmpl
jae
sub
mov
xlat
push
icebp
mov
outsb
adc
daa
push
arpl
jle
and
sbb
repz
add
mov
xor
mov
arpl
in
jns
cmpsl
jg
adc
repnz
into
les
sbb
ret
sbb
stos
sub
jae
mov
out
mov
loopne
and
loop
leave
fdivs
outsl
pop
mov
add
lock
movsb
lds
xor
data16
pushf
jl
push
mov
je
pop
push
incl
mov
scas
repz
aas
sbb
push
dec
test
adcl
cmp
pop
out
rorl
add
cltd
dec
in
sub
rcr
and
popa
andl
pop
rcll
push
repz
jb
fs
aam
xchg
jnp
repnz
pop
mov
mov
push
add
mov
dec
fsubrs
pop
mov
jp
sbb
inc
jge
sbb
inc
push
loop
push
dec
push
push
popf
pop
jl
dec
je
loopne
iret
and
es
or
xor
cld
mov
enter
movb
adc
ret
mov
fcmovu
cmpsl
test
fs
ss
inc
inc
add
and
loopne
in
sbb
rcrl
push
or
dec
xor
dec
dec
xchg
adc
lds
shrb
testb
addl
jl
lcall
in
divl
pop
in
data16
pop
outsb
and
loop
and
movsl
imul
fistl
mov
or
test
icebp
fisubl
cmpsb
imul
push
in
xor
mov
or
push
inc
int3
xchg
ficomps
ljmp
pushf
xor
dec
push
in
push
aas
sahf
lock
mov
ja
xchg
movsb
mov
mov
sahf
lea
dec
mov
shlb
sub
sub
pop
adc
sbb
xor
roll
jecxz
hlt
push
and
js
cmp
lret
fdivrl
in
push
adc
push
lock
cmpsl
rcrl
adc
push
movsbl
pop
mov
rorb
xchg
sub
jns
ret
stos
mov
xor
out
mov
cmpsl
sub
insl
cwtl
fisttpl
ljmp
adc
mov
cmp
jno
lret
das
add
stc
or
cmp
xchg
sahf
mov
or
iret
mov
cmpsl
sbb
test
mov
push
cmp
pop
add
loopne
rorl
and
xchg
pop
inc
sbb
test
xchg
fwait
mov
pop
ret
incl
ds
in
aam
ret
insl
rorb
pop
and
loop
inc
inc
inc
adc
pop
inc
mov
push
xor
dec
stc
je
hlt
leave
xchg
dec
push
sub
push
adc
cmp
mov
and
lock
pop
aam
add
mov
ljmp
and
xchg
daa
fwait
repz
out
ljmp
test
mov
insb
les
mov
inc
sbb
aaa
pushf
lock
inc
sarb
loop
jmp
jno
jbe
movsl
and
imul
inc
cmc
xor
sbb
pop
hlt
jp
mov
andb
pop
push
lea
mov
mov
sahf
scas
mov
lds
je
std
dec
mov
jmp
test
push
shrd
and
adc
movsl
pop
lret
sub
shll
push
xor
and
sub
daa
cmp
mov
iret
or
in
mov
shl
int
std
int3
push
cs
imul
jo
mov
push
movsl
movsl
subl
faddp
xchg
ss
pop
dec
sub
cmc
push
fstl
xor
mov
mov
in
push
cltd
cmp
jns
cmp
out
push
xor
sbb
mov
mov
xchg
out
sbb
push
mov
jmp
fucomi
pop
rorb
lcall
mov
in
sarl
out
clc
test
pop
adc
inc
addr16
divl
cmc
imul
xchg
or
in
push
mov
push
inc
jb
and
jb
push
pop
addr16
in
pushf
push
jle
inc
sub
push
jl
repz
icebp
push
xchg
sbb
mov
call
dec
sbbb
fwait
call
test
test
jo
dec
imulb
mov
adc
fsubrl
push
jmp
pop
rorb
int3
imul
jmp
push
add
test
push
mov
or
push
jmp
mov
pop
xor
setl
jo
fsubrs
cltd
jns
push
push
push
cwtl
scas
and
cmp
subb
lcall
cmp
sub
std
ror
aas
lods
outsl
iret
inc
outsb
mov
inc
std
jmp
push
cmp
mov
cltd
rcr
jge
subl
sub
outsb
xlat
stos
bound
adc
andb
gs
cmpsl
mov
movsb
push
cmp
cmpsl
mov
lcall
add
sete
xor
mov
xchg
push
pusha
stos
pop
cs
repnz
fistpl
jg
pop
and
scas
add
outsb
cmp
push
mov
mov
leave
idivl
or
rcr
or
adc
fildl
xor
mov
cmp
push
aaa
insl
popa
sar
inc
clc
test
adc
mov
pusha
aad
loope
dec
sbb
or
scas
sub
adcb
out
in
inc
fsubs
stc
sbb
fcoml
addr16
out
xlat
dec
sub
adc
dec
push
mov
push
xor
cwtl
addb
loope
pop
or
dec
sti
movsl
movsb
flds
stos
insb
sub
dec
cmp
cmc
sbb
pushf
subl
and
sbb
push
roll
clc
cmpsb
cmpsl
push
jecxz
into
loop
adc
cli
mov
xlat
icebp
push
dec
add
dec
ret
ret
inc
and
leave
rorb
jno
shrb
push
add
adc
cmp
cwtl
xlat
out
cmp
repnz
mov
mov
push
or
cli
cmp
out
insb
pop
insb
add
adc
cmpsb
push
loope
or
jb
int3
clc
cwtl
jb
or
shr
lcall
fcompl
pop
sbb
fldcw
jmp
fcmovbe
and
repz
xchg
shrb
popf
nop
dec
xchg
cmpl
jmp
mov
ss
lock
bound
enter
xchg
dec
dec
xchg
jge
mov
pop
xchg
std
outsl
stos
test
arpl
mov
adc
cmc
sahf
scas
mov
pop
lahf
mov
shll
adc
loopne
out
in
es
add
jnp
mov
std
stos
add
shrb
je
sub
insb
cmpsl
sbb
ljmp
jnp
mov
mov
and
sbb
iret
jno
inc
popf
xchg
fucomi
xchg
add
pop
jmp
jp
out
ss
xlat
add
pop
cmc
push
jbe
add
subb
notl
adc
cs
cmpl
out
adcb
mov
movsl
lea
xchg
push
fwait
addb
sahf
or
movl
fs
jo
stos
out
jmp
pop
sub
shll
jno
push
xchg
jg
pop
pop
adc
enter
add
dec
xchg
shrb
push
push
into
scas
movsl
jl
push
sbb
fsubrs
and
dec
cwtl
movsb
pushf
imul
push
push
jns
insl
aas
adc
cmp
mov
push
ss
cs
jae
pop
xor
sub
mov
pushl
inc
cwtl
add
in
inc
out
jp
addb
dec
xchg
pusha
mov
pushf
inc
push
xchg
xchg
leave
mov
je
lret
popf
mov
int
dec
test
fstps
dec
mov
cmp
mov
add
addr16
dec
loopne
and
dec
inc
adc
jmp
inc
mov
fdiv
cmpl
cmp
shl
ljmp
sbbl
jno
mov
xchg
inc
jecxz
and
sbb
loopne
dec
pusha
outsl
adc
add
jnp
inc
cld
fiaddl
out
leave
xor
sub
pushf
iret
test
xorb
mov
mov
idivl
xor
dec
dec
push
int
cmpsl
jb
dec
sbb
sahf
mov
loopne
int3
adc
imul
mov
push
fwait
insb
pushf
cmp
push
xchg
jmp
ds
sub
pop
jl
in
jp
pop
add
jbe
xor
xchg
insl
mov
fisttpl
cmp
xlat
cmpsl
call
nop
xchg
outsb
std
cmp
test
cltd
dec
sbb
or
cmp
clc
leave
mov
movsl
adc
lret
fldenv
pop
push
test
lea
push
cli
jg
test
jbe
sub
add
cmp
add
push
xchg
sbbl
pop
or
data16
fsubs
stos
add
add
adc
mov
sbb
xchg
cmp
adc
notl
popa
fdivp
and
xor
xor
mov
jmp
inc
jnp
jp
cmpsl
cmp
aam
call
cmp
pop
sub
out
adc
ficompl
sbb
pop
pop
push
mov
imul
inc
shl
pushl
in
sub
dec
mov
mov
adcb
mov
outsl
inc
je
adc
fdivrl
and
jb
popf
lods
or
notb
and
adc
add
lods
and
les
fidivrs
in
jbe
mov
test
adc
inc
push
jb
pushf
jmp
sahf
loopne
xor
loope
mov
dec
insl
mov
fdivrs
adc
push
jge
or
es
popf
roll
ljmp
int3
sub
xor
pop
lahf
mov
sub
xor
mov
cld
out
je
es
mov
mov
inc
pop
lret
add
movb
gs
mov
push
aas
nop
cmpsl
push
push
jns
ja
jo
pop
in
add
sub
dec
stc
ja
int3
push
lock
lea
sti
aas
lea
and
clc
cmp
sti
ss
lret
sbb
cmc
nopl
into
xor
jae
push
cltd
enter
xor
lock
or
scas
int
loop
push
or
pop
xchg
mov
sub
ret
ljmp
adc
ret
stc
mov
lret
stc
fstpl
sub
dec
in
jo
int
hlt
push
inc
lods
cmpsl
push
sbb
cmpsb
outsb
je
mov
mov
sub
sahf
mov
vorps
add
repnz
mov
cmp
sbb
mov
shll
xchg
xchg
repz
fwait
cmp
nop
lea
adc
fisubl
pop
cmp
jno
adc
xchg
push
movsl
cltd
fdivrs
push
and
cmc
adc
cmpsl
jo
mov
mov
out
aaa
mov
xchg
in
int3
imul
lret
test
sub
fsts
jecxz
ret
xchg
lahf
outsb
mov
vcvtdq2pd
arpl
dec
sbb
in
lods
inc
inc
mov
xor
and
jp
xchg
pop
xor
int3
and
push
ljmp
jge
in
push
aam
ds
je
sbb
stc
in
lods
adc
test
lock
adc
xchg
dec
insl
imull
dec
lahf
push
xchg
push
out
sbb
cmpsb
jo
adc
sub
push
push
dec
in
lock
rolb
sub
mov
pop
inc
xlat
push
push
leave
add
lcall
push
dec
or
add
pop
xor
dec
xstore-rng
cmpsl
test
jno
add
add
cmp
jge
jae
xor
sbb
pop
stos
in
ficoml
scas
jb
cmp
test
sbb
xlat
push
or
jne
jge
imul
test
adc
xchg
adc
shr
xchg
jmp
call
shl
scas
js
dec
xorb
xchg
inc
lods
jp
dec
popl
push
mull
jne
or
fs
adc
dec
xchg
mov
xor
scas
adc
jl
imul
adc
notl
fiaddl
mov
jg
jecxz
dec
sub
roll
jo
mov
test
lcall
jmp
mov
aaa
gs
add
add
std
mov
push
fucomp
sbbb
cmp
sahf
mov
cmp
dec
push
ljmp
cltd
lock
fistps
sub
mov
push
xor
push
movsl
dec
add
lods
ret
stos
test
lret
loop
and
mov
xchg
aaa
pop
mov
inc
arpl
jnp
sub
add
fdivp
lock
or
inc
pop
jmp
and
pop
cmp
mov
es
cs
and
and
mov
lar
cmp
ja
xchg
mov
inc
mov
xchg
jmp
and
sar
daa
mov
pop
popf
gs
pop
ss
fldt
lock
std
cwtl
push
adc
pop
lods
sarb
jnp
adc
and
dec
mov
pop
outsb
in
pop
xor
adc
jne
mov
scas
pop
jmp
sub
data16
cltd
test
mov
lock
repz
int
mov
sti
lods
mov
push
push
mov
add
nop
mov
mov
mov
sub
mov
add
adc
cmpsl
jl
add
cwtl
xor
dec
cmp
xchg
das
in
adc
fsubl
and
xor
dec
or
or
and
aad
lahf
pop
jae
mov
cmpsl
add
repnz
xchg
repnz
lahf
jecxz
xchg
mov
jns
mov
sbbb
inc
push
mov
sub
mov
sub
or
fsubl
adc
or
xlat
test
xor
pop
jnp
insl
out
shlb
adc
imull
xor
fwait
jne
add
and
out
shll
sbb
popf
dec
inc
push
sub
gs
or
into
xor
mov
out
movsb
jb
andl
movsl
cltd
or
sbb
push
xchg
aad
stos
mov
stc
cmpsb
js
mov
add
int
pop
insl
call
jg
push
ret
ljmp
scas
xchg
into
jge
adc
pop
pop
mov
rorb
mov
pop
mov
enter
scas
int3
test
je
divb
push
in
pop
add
clc
pushf
stos
out
fmulp
xchg
je
or
test
fnsave
adc
lock
sub
out
add
add
lock
push
test
pop
mov
iret
add
pop
cmp
lds
nop
xor
xchg
ds
stc
mov
cmc
xor
add
cmp
data16
sahf
or
xchg
xor
pop
jecxz
loope
fldl
ret
icebp
jge
dec
sub
mov
jo
xor
in
lds
subb
pop
data16
jmp
xchg
rcrl
dec
mov
mov
rorb
jg
cwtd
xor
repnz
mov
inc
xor
movq
in
orb
push
outsb
sbb
mov
out
pop
xor
sub
add
mov
int
fidivrl
inc
xlat
mov
push
xor
gs
and
push
in
in
leave
xchg
add
push
pop
adc
adc
imul
xor
inc
jo
daa
push
add
lcall
mov
jle,pt
ja
add
imul
mov
arpl
lcall
ss
ds
or
mov
mov
pop
lret
in
mov
aad
mov
fidivl
xchg
stos
rol
dec
cli
sub
mov
xchg
gs
test
into
dec
pop
jge
scas
in
sub
popa
add
fwait
mov
xchg
cmpsb
and
test
adc
push
cmp
mov
xchg
xor
sbb
enter
push
sub
addr16
fsubrp
fs
cmpsb
xor
dec
decl
out
pop
push
fidivrl
and
test
fcmove
inc
popl
pop
pop
outsb
push
outsl
pop
out
imul
aas
inc
rorl
pop
xchg
or
stc
pop
lahf
data16
leave
inc
es
stc
lods
ficompl
les
and
pop
daa
mov
in
sub
mull
mov
jmp
int3
fs
lods
mov
in
sti
sti
mov
cli
xor
movsb
mov
mov
arpl
bound
or
mov
and
rol
add
pushf
adc
lods
add
add
and
adc
cmp
push
fisubl
mul
xor
pop
mov
mov
leave
int
imul
adcl
mov
adc
sbb
enter
aaa
outsb
xor
hlt
lods
lods
lods
data16
outsb
out
cld
sbbl
pop
and
scas
adc
arpl
xchg
pop
mov
pop
xor
filds
roll
xor
mov
push
scas
sbb
and
cmp
addr16
jmp
scas
sbb
lods
mov
pop
jg
jb
xchg
dec
loopne
call
cld
stc
inc
jo
sarb
mov
jmp
pop
pop
and
popf
jecxz
repz
add
pop
stos
testb
sub
es
pop
pop
out
fcoms
or
mov
mov
sbb
mov
mov
push
xchg
out
jg
xchg
enter
mov
shl
insl
hlt
imul
lock
mov
ss
test
cmp
fistpll
aas
lds
rolb
les
cmp
out
insb
out
inc
mov
lret
leave
dec
imul
lret
mov
sbb
dec
shlb
jbe
cmpsb
dec
inc
sbbb
popf
and
dec
stos
cmp
mov
xchg
mov
push
and
pop
push
jo
lahf
aaa
adc
jbe
loope
xor
xlat
xchg
cmp
test
orb
in
imul
icebp
mov
loopne
pop
add
adc
aam
jge
fcoml
mov
adc
mov
or
cmp
pop
je
shr
cld
orb
mov
or
cmp
loope
xor
xlat
mov
mov
pop
bnd
jp
cmp
jmp
decb
lock
sub
insl
pop
out
or
test
fwait
mov
addr16
inc
outsl
mov
adc
scas
loop
into
dec
or
in
cmpsw
jae
in
fwait
mov
jae
test
fcoml
jne
mov
inc
mov
movl
icebp
imul
sbb
sti
ljmp
jp
sbb
jb
ljmp
mov
clc
dec
test
dec
mull
pop
test
sub
xor
clc
addr16
cmp
jle
in
xchg
adc
lret
pop
lahf
insl
popa
dec
mov
outsb
rcrb
mov
inc
out
mov
arpl
cld
xchg
lods
adc
cmpsl
lret
xchg
mov
or
ja
push
jecxz
dec
int3
jl
imul
out
mov
mov
sub
and
cld
jmp
mov
sbb
and
imul
mov
xchg
ljmp
xchg
inc
lods
cmp
jp
pop
movsb
xor
rcrb
mov
rolb
repnz
dec
test
xlat
ds
aas
inc
adc
cmp
repnz
cmc
mov
push
jns
jo
dec
enter
xchg
cld
frstor
jo
fs
add
mov
insl
lods
fildll
jno
mov
mov
and
add
shlb
bound
mov
cs
jne
js
push
xlat
ret
mov
mov
loopne
out
cs
dec
mov
shlb
xchg
ret
cmp
jne
jns
mov
inc
mov
sahf
jge
push
popa
xor
outsl
lahf
rclb
and
sub
and
inc
in
xchg
push
and
insl
jno
dec
push
xor
pushf
cmp
pushf
xchg
sbb
cmpl
inc
cmp
and
mov
andb
add
pop
nop
cltd
dec
insb
xchg
jmp
aam
sbb
pop
sub
movsl
xchg
cmpsb
mov
fcomip
push
dec
jb
mov
or
push
jnp
jle
add
lcall
add
loope
enter
jbe
je
ljmp
lods
push
mov
push
or
mov
xor
lock
mov
jecxz
mov
ja
add
sbb
lock
xor
scas
mov
in
adc
hlt
sub
adc
leave
jmp
mov
cmp
push
push
fstps
sbb
sbb
pop
out
addb
sbb
roll
mov
and
xchg
mov
sub
add
arpl
out
xchg
aad
adc
sbb
mov
mov
jl
aam
ret
or
or
into
nop
push
testl
push
mov
cltd
pop
sub
xor
or
pop
jmp
into
cld
stos
adc
mov
pop
popa
mov
test
jp
mul
mov
nop
jle
mov
insb
sahf
out
mov
inc
icebp
dec
xchg
loopne
and
fadds
push
push
sti
dec
in
scas
sub
adc
mov
xchg
gs
xchg
mov
repnz
fimull
mov
int3
sub
mov
das
jns
and
repz
inc
mov
fimuls
pop
pop
push
adc
loopne
ljmp
dec
or
inc
mov
lcall
inc
push
pop
xor
cmpl
sbb
mov
or
shrb
mov
xor
sti
and
mov
cmp
sub
and
int3
mov
or
xchg
add
xchg
movsb
xchg
arpl
mov
pop
mov
stos
negb
imul
cmp
call
decl
xchg
adc
les
ret
push
push
fidivrs
cmpsl
and
cmpsl
mov
adc
scas
lods
jge
mov
pop
ja
push
stos
sub
mov
push
add
push
cld
out
add
int3
or
adc
jne
aaa
inc
sti
jae
out
scas
addr16
fs
pop
sahf
popf
cmc
adc
sbb
mov
xchg
mov
movsl
mov
push
pop
add
mov
ret
mov
pop
fldenv
pop
adc
call
cmpsl
fidivrl
xchg
loop
adc
sti
nop
mov
pop
push
xor
lcall
orb
lahf
push
mov
mov
cmpsl
rorl
mov
ss
fmulp
pop
adc
fsubl
jno
je
paddd
movsb
into
pop
lods
fiadds
inc
pop
mov
je
mov
sti
cwtl
lcall
or
out
loopne
pop
mov
pmaxub
adc
or
pop
pushf
aad
inc
jp
or
shl
xorb
pop
cli
cmp
jno
push
inc
test
sbb
adc
out
dec
pop
jecxz
js
imul
rclb
loopne
data16
add
lcall
mov
xor
sbb
into
popa
dec
aad
rep
icebp
adc
jecxz
fistpl
call
pop
int
sub
test
push
cmp
rcrl
pop
adc
and
jmp
adc
adc
cwtl
in
addb
lods
xchg
add
lods
cli
movsl
dec
inc
xchg
jns
adc
jns
aas
iret
push
jb
mov
mov
inc
fistpll
add
mov
mov
dec
pop
cld
flds
sbb
lahf
daa
movsl
shll
inc
std
mov
push
or
jge
stc
mov
lret
cmpb
int
cs
cmp
sahf
sbbb
add
mov
leave
push
lock
adc
andnps
mov
es
mov
les
js
andb
jle
pop
int
pop
xor
add
jno
ljmp
out
aas
push
mov
jo
pop
mov
imul
or
sbb
and
jno
fmull
xchg
inc
cli
testb
insb
push
icebp
pop
pop
cmp
fsubl
add
inc
and
dec
orl
xchg
ja
les
inc
jnp
mov
imul
push
xor
stos
repz
xchg
sub
mov
popa
loope
pop
mov
int
xor
popf
add
add
cltd
cmc
addr16
cmp
enter
in
stos
dec
int3
pushf
cmpsl
pop
ljmp
leave
pop
test
js
lea
sbb
fs
inc
jecxz
lods
lods
add
mov
fisttpl
xor
push
fdivl
jecxz
jns
cmpsb
push
lds
repz
pop
outsb
aaa
push
sbb
std
xchg
in
enter
loop
aas
push
xorb
push
push
xor
fsubrs
idiv
jl
shlb
lods
pop
dec
inc
and
xorl
cmp
sbb
add
loop
mov
dec
cwtl
push
adc
sbb
sahf
push
push
adc
aaa
adc
lret
mov
bnd
sbb
cmp
or
add
mov
movb
jge
or
xor
cld
std
adc
cmp
xchg
cwtl
std
por
leave
repz
mov
jb
es
test
mov
mov
adc
pop
cmp
xchg
in
mov
mov
addr16
pop
mov
mov
scas
mov
cli
lods
push
stos
addb
jle
cmpsb
ficoms
add
xchg
ja
aas
sbb
xor
test
imull
and
sbb
dec
inc
ss
mov
shrb
lret
push
sbb
cmp
xchg
adc
adc
dec
mov
mov
inc
lret
mov
fwait
cli
cmpsl
bound
push
mov
mov
fsubs
ljmp
and
push
mov
lret
pop
sub
jmp
mov
and
push
push
popa
cmc
mov
lcall
sub
mov
mov
push
out
das
cmp
lds
pop
in
int
jl
mov
sub
cmp
stos
testb
aam
mov
push
xor
cmpb
cmpsl
xor
cmp
pop
xor
cmp
pop
mov
ret
imul
or
mov
sbb
xor
call
cmpb
jge
push
add
jl
iret
das
iret
push
lahf
xchg
push
mov
xchg
pop
daa
adc
or
mov
fdivrp
cmpl
jb
xor
dec
mov
adc
cli
mov
movsb
cmc
jns
jp
mov
mov
fistps
jns
add
push
notb
insl
repz
out
pop
cmp
sub
hlt
cmpsl
sti
pop
adc
sti
push
xorl
xchg
call
xchg
movntq
iretw
dec
cld
scas
sbb
push
xchg
sub
xor
push
incl
xlat
add
pop
mov
gs
and
mov
xor
lods
jcxz
mov
mov
cmp
mov
pop
cltd
adc
mov
cmp
data16
dec
cmpsl
mov
scas
jbe
fsubrs
scas
popf
cltd
sbbl
add
leave
jno
bound
in
outsb
movsl
add
dec
insl
sub
inc
sbb
jl
push
fbld
jl
inc
inc
mov
sbb
in
loopne
loop
jl
dec
xor
lcall
ret
popa
or
sub
sub
sbb
xor
push
add
mov
push
or
loop
pop
repnz
mov
mov
jnp
push
push
pop
in
enterw
add
xchg
ljmp
mov
loopne
cmc
mov
bound
repnz
or
mov
movsl
test
cmp
mov
out
inc
push
push
and
adc
inc
lea
xchg
push
adc
cmp
int3
loopne
dec
pop
mov
rolb
inc
sbb
lea
and
cltd
jno
mov
inc
xor
mov
mov
leave
mov
es
or
aaa
sahf
sub
sbb
mov
xchg
ret
bswap
inc
pop
aad
inc
cmc
mov
dec
push
inc
lcall
into
jmp
sbb
xor
mov
sub
adc
test
sbb
sub
mov
out
jb
cwtl
aaa
dec
lret
jle
mov
fistps
addr16
jmp
inc
xor
mov
in
int
cmc
cmc
pop
or
and
addb
push
jnp
rol
cli
insl
enter
pop
movsl
or
aam
lcall
and
cld
dec
mov
and
insl
push
cli
popf
sbb
rcrl
leave
cwtl
xchg
ret
sbbb
mov
fistps
pushl
mov
push
addr16
je
and
sub
mov
rcl
fmull
add
and
repz
add
fldcw
fwait
mov
push
popf
sub
cld
sar
jge
in
sbb
push
in
jo
sub
les
fistps
lods
cmpsl
lea
cmp
jmp
iret
jo
outsb
lds
pop
bound
js
ljmp
push
dec
fmulp
cmp
push
leave
into
jmp
add
mov
rorb
pop
shlb
xor
stos
lock
or
push
xchg
mov
mov
ss
pop
sbb
in
jnp
adc
jbe
icebp
xor
mov
xor
xor
cmpsb
in
sbbl
sub
rcrl
icebp
jmp
cmp
add
cmp
dec
cmovns
std
fidivs
fildll
mov
out
cmpl
cmovo
loope
sub
shrl
xchg
in
out
fdivp
cmpsl
inc
lock
aaa
adc
adc
repz
dec
arpl
jnp
enter
fcmovnu
adc
push
fcmovne
aaa
xchg
sbb
movsl
jns
cmp
xorl
cltd
xchg
jbe
push
hlt
jg
dec
and
data16
into
pop
add
jne
ret
dec
imul
inc
inc
sarl
jmp
ss
pop
or
cwtl
xchg
mov
test
mov
fidivrs
and
push
outsb
pop
add
cmpsb
jbe
into
xor
mov
pop
mov
popa
inc
sbbb
jmp
pop
cmp
sub
jmp
sbb
add
les
ds
or
cld
shr
pop
popf
cmpb
bound
loopne
jecxz
icebp
cli
jne
cmp
in
push
in
lret
jmp
in
push
nop
test
cmpb
out
loop
lods
cmpl
or
movsb
xchg
jecxz
je
popf
push
aam
inc
movsb
jmp
mov
repnz
and
xchg
pop
iret
clc
cmpsl
inc
inc
cli
lret
imul
cmp
xchg
in
out
in
fnclex
in
sti
test
adc
xchg
outsl
mov
ret
and
xor
mov
mov
xlat
lretw
cmp
push
loope
aas
pop
aaa
je
mov
xor
sub
pop
inc
or
mov
insb
push
imul
and
insb
jno
ja
ret
repz
xchg
add
clc
das
xchg
xor
and
repz
inc
popa
push
sub
outsl
pop
insb
mov
inc
mov
cwtl
push
and
int3
pop
inc
and
add
sub
test
testl
xor
mov
clc
sbb
inc
push
sub
and
xor
fists
stc
adc
push
lock
int3
test
xlat
test
mov
nop
insb
cmpl
bound
and
jns
test
xchg
in
fdivrl
ja
inc
int
cltd
mov
mov
or
and
mov
mov
fbstp
dec
cli
aaa
and
imul
push
mulb
call
jmp
cltd
std
sti
loopne
imul
ljmp
dec
int
add
fstl
or
pop
divb
jno
cmp
cmpsl
shl
cs
pop
lods
jae
or
pop
aaa
cmp
daa
in
push
xchg
mov
in
scas
jp
and
xor
pop
lret
test
mov
xorl
mov
cmp
xchg
sub
out
inc
pop
lret
pop
xchg
push
pop
dec
rcrb
dec
clc
push
incb
frstpm(287
out
push
mov
rclb
mov
sti
rorb
xor
push
and
jae
mov
xchg
mov
jbe
mov
adc
cli
mov
test
rcrb
out
cs
in
test
jae
adc
out
push
push
pop
mov
hlt
inc
out
testb
and
orl
sbb
pop
xlat
stos
sbb
in
movsl
cld
jo
pop
enter
cld
rcrb
adc
aad
adc
adc
popa
cmp
loop
inc
sbb
jno
into
je
outsl
push
loop
or
fmuls
es
iret
or
insb
or
movsb
cmp
insb
sti
cmp
jae,pt
xchg
cmc
lods
ret
orb
fldenv
jge
iret
stos
dec
icebp
sub
imul
incl
adc
lods
xchg
adc
divl
cmp
xlat
loop
sub
pop
mov
sahf
adc
sbb
cmp
jge
lret
sub
cld
call
push
lods
inc
int
dec
test
xor
mov
pusha
sub
push
stos
loopne
dec
fisttpl
stos
rcr
data16
inc
fcompl
leave
jo
sub
cmp
pop
movsl
ss
push
xor
repnz
pushl
popa
hlt
mov
lret
mov
mov
in
mov
lret
mov
lret
in
lahf
sbb
ficoms
add
sbb
outsl
lods
out
push
pop
dec
adc
jmp
mov
adc
test
mov
call
fcomps
cmp
or
sti
gs
div
leave
out
out
jg
fmul
sbb
push
hlt
mov
insb
sbb
stos
das
stc
cmp
xor
jbe
cld
push
and
mov
xchg
inc
out
aad
outsl
cmp
ror
in
scas
push
xchg
inc
xlat
std
or
aas
lret
xor
or
sbbl
or
icebp
lock
ljmp
icebp
mov
outsl
lcall
mov
clc
adc
cmp
cmc
and
loopne
or
jmp
push
cmp
pop
clc
xchg
or
inc
sarl
mov
mov
adc
xor
mov
inc
jae
sub
testl
xchg
mov
or
cmc
inc
jp
inc
lahf
into
lock
mov
and
mov
cmp
data16
xor
and
fwait
pop
jae
cmp
jns
std
jecxz
cmp
fsubrl
sbb
push
js
sub
ret
loope
sub
jmp
add
loope
jbe
cmp
outsb
mov
xchg
mov
jg
jno
jl
ljmp
xor
mov
enter
jno
imul
les
sahf
cmpsb
xchg
jmp
and
int
and
jne
negl
outsb
pop
imul
xchg
addb
xchg
mov
xlat
mov
jle
leave
cmp
push
enter
xor
lods
sbb
or
add
jae
pop
fadds
daa
mov
cmp
and
and
dec
dec
xchg
subb
sub
push
jns
inc
lods
fmulp
cmp
xor
stos
pop
mov
mov
push
std
jae
inc
cmp
test
ljmp
add
mov
adc
mov
pusha
sbb
lret
loopne
in
mov
repnz
std
pop
mov
xlat
call
pop
add
xchg
jb
xlat
inc
xchg
ja
add
adc
jmp
pop
fidivs
imul
pop
shrb
daa
cmp
sub
outsb
dec
or
adc
push
ja
imul
pop
ds
cmp
fwait
fs
fs
iret
mov
aam
jmp
sub
out
ljmp
fldcw
cmp
inc
xchg
push
jae
hlt
movsl
mov
ret
pop
mov
movsb
dec
aaa
push
push
pop
mov
mov
jg
je
or
xchg
dec
jae
cmp
xor
jle
movsl
sti
xor
add
sbb
hlt
pop
pop
jbe
repz
add
addl
enter
jno
mov
insb
in
loope
mov
inc
inc
push
mov
mov
mov
cmp
popa
clc
xorb
pop
and
xchg
outsb
inc
outsl
clc
or
sbb
dec
outsl
cmp
dec
fdivr
push
test
into
lcall
adc
adcl
xor
sti
in
adc
inc
popf
mov
and
sbb
repnz
out
or
mov
push
adc
ss
xlat
aad
stos
idivb
xchg
mov
push
mov
pop
test
mov
jbe
xchg
out
in
push
lea
pushf
in
data16
std
js
std
daa
mov
jno
dec
xor
les
ss
mov
pshufw
jp
cld
or
hlt
popa
jecxz
imul
mov
xlat
das
cmp
sub
mov
inc
pop
out
iret
pop
add
lds
mov
imul
shr
mov
dec
gs
lock
xor
ret
lret
add
out
out
in
mov
xor
cmp
adc
cmp
inc
addb
mov
clc
outsb
addr16
xchg
mov
sbb
icebp
icebp
jbe
adc
mov
or
mov
add
push
jbe
jo
mov
das
cmpsl
nop
mov
fsubs
mov
add
and
lods
or
pop
xchg
sub
or
test
or
out
adc
or
or
adc
fldcw
mov
lcall
insb
sub
add
push
adc
popf
int3
adc
mov
cli
adc
sub
inc
pmulhuw
mov
leave
cwtl
sarl
jb
cmpsb
mov
pusha
pop
js
inc
push
mov
shrl
bound
or
clc
or
bnd
sbb
fisttps
ds
and
jnp
xchg
in
leave
out
lahf
outsb
out
lret
gs
cmp
nop
repnz
movsb
mov
imul
jmp
dec
jl
mov
mov
jo
cmc
jmp
loop
sti
mov
popa
ljmp
je
in
icebp
mov
push
sbb
jns
mov
inc
in
ljmp
movsl
sbb
cmp
into
push
cs
cltd
mov
adc
push
mov
js
insl
or
mov
xlat
pop
lret
xor
fld
faddl
fadds
pop
pop
fisttpl
fsubrs
std
js
pop
arpl
imul
mov
out
icebp
loopne
in
test
inc
xchg
imul
mov
aam
jno
xchg
adc
test
cld
psubsb
mov
flds
cmp
or
cli
and
aaa
or
movsl
or
mov
push
push
jg
addb
popa
lahf
add
dec
fld
dec
pushf
repnz
push
mov
daa
repnz
popa
adc
mov
sarb
iret
cmpsb
aaa
movsl
push
sub
leave
push
mov
sbb
jmp
mov
fildl
mov
ret
push
and
lret
mov
xor
sbb
push
mov
mov
sub
add
mov
xchg
and
sbb
sarl
outsb
popf
xchg
scas
je
call
int3
jg
inc
or
decl
arpl
push
loope
cmp
xor
dec
popa
ljmp
pop
sbb
fildll
xor
lcall
dec
push
data16
je
shll
adc
mov
cmp
lods
js
test
cwtl
inc
mov
push
jae
daa
lahf
mov
sbb
ss
xor
lea
mov
ds
and
repnz
fcomi
xchg
xor
lret
loop
xchg
fadd
loopne
outsl
std
ljmp
mov
dec
in
aas
sbb
xchg
sbb
cmp
fnsave
sbb
popf
scas
add
cmp
jns
sbbb
add
daa
mov
or
push
pushl
pop
mov
and
push
and
jle
fsts
lahf
mov
cmp
bound
push
fistl
mov
je
gs
loope
je
push
jl
aam
sbb
pop
xchg
xchg
fmull
lcall
sbb
sub
pusha
push
xor
jns
sub
sbb
mov
sbb
dec
push
dec
stc
sahf
add
out
int
scas
dec
push
int
mov
orl
adc
cwtl
pop
sarl
lahf
pushf
aad
push
loop
mov
das
bound
sub
test
je
enter
and
lea
jo
jecxz
ret
popa
push
inc
xor
push
in
and
scas
movsl
lret
rorl
clc
push
aad
inc
sub
fstpt
jl
insl
and
decb
imul
je
xor
xchg
xchg
fwait
add
cmp
sub
cwtl
addr16
test
sbb
mov
testl
mov
lcall
add
pop
lret
int3
jmp
lcall
leave
cli
xor
jmp
sbb
mov
xor
xor
stos
and
scas
add
movsb
into
iret
roll
pop
cmpsb
or
add
and
push
dec
add
jae
mov
cmp
repnz
lret
sbb
addr16
rcrl
inc
frstor
jp
lahf
dec
mov
or
fcomp
mov
mov
cli
jecxz
cli
ret
sub
or
xor
xorb
lock
sub
lret
divl
sub
aaa
loopne
xlat
repz
lcall
out
invd
lret
outsb
or
push
xor
add
subl
orb
lcall
jo
push
leave
jg
push
enter
jp
ds
sbb
mov
loope
dec
mov
xchg
test
adc
and
lea
sbb
add
std
bsf
icebp
dec
xor
mov
test
test
dec
clc
out
gs
aas
bound
ljmp
xor
push
lds
lods
int
xor
out
shrl
push
data16
cvtdq2ps
cld
xor
mov
sbb
negb
fisubrs
jae
and
xlat
xchg
push
inc
mov
jno
imul
adc
adc
push
xlat
sbb
ja
adc
leave
insb
pop
xchg
jge
xchg
fadds
push
or
add
movsb
je
fdivl
sbb
xchg
dec
push
xchg
test
imul
lret
lret
push
sbb
int
adc
movsb
fldt
mov
call
and
sahf
ror
mov
mov
mov
mov
sahf
outsb
addb
call
inc
cwtl
push
cltd
in
test
out
pop
xor
and
ret
sbbl
xchg
xchg
test
ja
loope
lcall
in
or
enter
call
add
jle
dec
xor
sub
outsl
les
jecxz
frstor
mov
fstps
lcall
es
xor
in
outsb
mov
mov
popl
jne
dec
les
mov
mov
cmpsl
rcl
mov
xchg
sbb
adc
pop
jne
lea
xlat
ja
jb
jns
lea
pop
push
mov
jmp
jne
sbb
ja
mov
or
insb
push
mov
fdivrs
fdiv
xchg
adc
orl
push
repz
test
sub
repnz
sbb
pop
jb
movsb
lea
cmp
in
pop
jne
stos
and
xorl
sahf
iret
mov
pop
lahf
fisttpl
inc
push
mov
aaa
ss
hlt
lods
mov
jbe
add
js
sub
out
daa
iret
adc
cs
daa
xchg
mov
lret
rcl
dec
xchg
sub
cs
adc
and
and
mov
rorl
popa
cwtl
jns
mov
sub
mov
das
test
mov
mov
xchg
sub
push
sub
xchg
xchg
ficoms
fdivs
inc
sub
aam
xlat
cmp
adc
ljmp
mov
dec
in
enter
gs
sti
jecxz
fidivrs
sahf
sub
gs
push
pop
loop
mov
push
icebp
ret
sbb
popf
pop
out
sbbb
sub
push
insl
movsl
es
and
insb
dec
addr16
add
lahf
popa
stos
movsb
inc
outsb
cld
pusha
int
cltd
xchg
pop
lock
repz
inc
fstp
shlb
popf
dec
rcrl
push
sbb
and
mov
and
xor
mov
shlb
pusha
pop
sub
rcr
push
sub
pop
ret
add
sub
pop
adc
inc
test
imul
mov
rorl
jae
push
add
mov
pop
jno
or
push
ret
ret
mov
sti
xchg
inc
fucomp
cwtl
mov
out
repnz
dec
adc
adc
shlb
cmp
adc
fwait
sub
lret
ljmp
adc
inc
push
fidivl
ljmp
sub
sub
ret
out
roll
andb
sti
mov
iret
fnstsw
call
adc
test
jge
loopne
push
cmp
outsb
sti
xor
mov
lods
mov
adc
jmp
sbb
mov
and
sbb
cmpsl
or
rcrb
xchg
push
and
decb
xchg
test
lcall
movsb
fcmovnb
aad
add
push
mov
dec
cmp
iret
cmpsl
mov
jnp
cmp
sub
adcl
add
dec
mov
cltd
out
out
in
push
jns
ret
hlt
daa
rcl
cs
and
hlt
jno
fisttpl
pop
setl
movsl
xor
outsl
mov
inc
inc
aas
xchg
test
std
rolb
call
add
ss
loope
scas
mov
cmp
andl
cmp
push
ret
pushw
daa
pop
jl
or
or
mov
dec
ljmp
std
enter
in
frstor
idivl
ds
dec
loopne
shll
lahf
je
cmp
ds
stc
jp
sbb
pusha
insl
mov
int3
pop
movsb
sti
out
pop
es
cmp
and
cltd
lods
imul
scas
mov
dec
mov
or
pop
pop
fbstp
hlt
or
or
ds
aad
jne
xchg
jnp
int3
cmpsl
test
pop
sub
jmp
sahf
push
sub
pop
imul
add
xchg
and
mov
cmp
clc
mov
mov
pop
enter
and
mov
mov
outsb
insl
xor
mov
and
nop
out
jnp
fnstsw
clc
daa
daa
in
cwtl
sub
movsb
or
jg
fwait
or
stc
addr16
mov
inc
cmp
push
sbb
ds
jnp
aam
movsl
add
js
add
and
mov
adcb
popa
call
xor
in
xor
icebp
std
cmp
jns
pop
cld
dec
ret
mov
xchg
cmpl
cmpsl
outsb
ljmp
jg
sub
or
enter
addb
mov
mov
dec
lret
sub
in
pop
nop
xchg
push
lcall
mov
adc
sub
pop
daa
fstps
dec
hlt
xchg
inc
dec
cwtl
cmp
shlb
dec
jge
inc
js
scas
jno
and
dec
and
nop
fstpt
push
ret
jp
test
psrlq
xor
div
pusha
add
sbb
cmpsb
adc
sbb
dec
cmp
mov
movsl
loop
out
notb
jle
faddl
mov
std
mov
daa
inc
outsb
test
mov
faddl
jmp
xor
inc
jge
sbb
mov
fldt
sub
fimuls
imul
les
lock
pop
mov
cmc
mov
pushf
inc
icebp
adc
pusha
in
ja
rorl
mov
daa
adc
pop
xchg
adc
xor
xor
lods
inc
enter
mov
sbb
das
pop
mov
push
into
xchg
or
inc
out
add
dec
shl
inc
fldl
jbe
lds
push
ffree
jge
cmp
mov
inc
cmp
cmpsl
iret
in
rorl
inc
pop
mov
aas
std
sub
add
sbb
xorl
pop
push
xlat
adc
pop
xor
fs
dec
in
xlat
std
loopne
cmp
pusha
jnp
adc
mov
xor
pop
iret
pop
dec
and
lret
mov
mov
mov
dec
pushf
fwait
in
or
dec
fimull
out
int3
aad
add
and
repz
add
xor
sti
ret
sub
push
stos
push
push
cmp
push
add
mov
sub
mov
fwait
xor
pop
push
test
fsubrl
push
subb
push
out
in
adc
and
adc
jns
add
rcrl
pop
or
mov
loopne
xchg
xor
in
mov
dec
in
out
push
outsl
divl
jmp
push
or
xor
or
pop
in
mov
insb
or
test
je
es
push
and
repz
sbb
or
bound
insb
aad
faddp
bound
xchg
push
clc
arpl
in
or
jns
jmp
lea
fnstcw
lcall
inc
cwtl
enter
dec
cmpb
lds
into
xor
lock
int
lods
sbb
inc
fstps
lock
popa
mov
lcall
shl
loope
ret
sub
mov
outsb
mov
xchg
add
push
mov
test
jg
fs
ja
fidivrl
mov
rol
into
dec
stos
xchg
mov
cmpb
cmp
ret
mov
or
xlat
mov
ror
xor
xchg
mov
clc
add
push
in
mov
cmpsl
adc
repz
fwait
in
repnz
aad
add
mov
mov
inc
outsb
jb
dec
xchg
xor
pop
pop
sbbl
ret
aaa
jmp
lea
cmpsl
ja
fidivl
lods
je
xchg
sbb
test
cmp
push
add
adc
data16
push
popa
std
cmpl
mov
adc
cmc
inc
or
sbb
test
int
adcb
out
mov
js
pop
xchg
mov
sub
mov
adc
movsb
xchg
fbstp
adc
jne
fbstp
stos
jns
add
push
aam
add
cmp
addr16
sar
or
cld
mov
sahf
and
mov
imull
call
xor
out
cmp
je
push
je
cmpsl
push
push
push
mov
push
and
dec
sub
into
adc
pop
pushf
mov
xchg
mov
add
jno
call
xlat
lock
push
pop
stc
in
in
inc
pop
leave
aam
cld
sahf
mov
and
sbb
cmp
adc
aas
xchg
push
in
push
in
jp
aad
xchg
pop
es
push
jl
enter
cmc
pop
jge
sub
nop
outsl
pop
loop
in
sbb
dec
gs
std
jb
sahf
and
mov
push
mov
lock
popf
mov
stos
leave
cmp
xor
xlat
loopne
jp
sbb
repnz
mov
push
cmp
cld
push
push
mov
iret
iret
add
and
inc
xlat
and
mov
call
mov
or
dec
loopne
in
insl
adc
fiaddl
mov
push
push
clc
fs
adcl
and
out
add
push
sbb
adc
inc
push
add
xor
insl
jns
loope
push
pop
adc
add
lods
addr16
mov
mov
or
test
arpl
or
shl
aaa
cs
hlt
pop
out
mov
sbb
add
mov
out
ja
sub
push
stc
shlb
xorb
mov
sbb
inc
dec
loope
lea
decb
mov
xor
pop
and
sub
subl
sbb
lret
addb
aam
adc
push
or
loope
pop
add
sbb
cmp
jb
nop
add
shll
and
dec
cmpsl
cli
and
aaa
bound
aad
fs
ja
das
cli
lahf
push
std
xchg
jge
shr
imul
push
pop
push
les
jg
and
pop
mov
aas
sbb
enter
scas
cmc
sub
dec
daa
cmp
cmp
fwait
std
push
pop
addl
xor
push
cmpsl
pop
popf
repz
scas
test
aaa
roll
cmpsb
imul
mov
inc
addr16
sbb
add
sbb
leave
mov
adc
dec
cwtl
outsb
mov
mov
popa
or
dec
insl
lret
in
dec
jbe
or
mov
pushl
jge
not
push
fisttps
mov
adc
enter
add
mov
xchg
roll
lods
dec
dec
sbb
sub
ror
xchg
movsb
aaa
js
fnstcw
push
js
jg
mov
test
push
or
or
dec
add
xor
das
pop
jp
mov
cmc
mov
sbb
cli
test
inc
int3
into
xor
xchg
jmp
xor
iret
xchg
lahf
cmp
push
jno
pop
movsl
sahf
jl
fiadds
int
cmp
inc
inc
or
mov
dec
jae
lea
insb
or
in
in
mov
sbb
add
add
fistpll
mov
aam
adcl
jae
inc
mull
jbe
push
jo
repnz
xchg
repz
mov
cmpsl
into
int3
test
lock
fwait
xchg
rclb
adc
cltd
inc
fldcw
sahf
clc
inc
xorl
shll
lahf
addr16
jne
adc
popa
fnstcw
mov
mov
mov
in
fisttpll
mov
shlb
inc
test
shlb
rcr
fstpl
add
insl
imul
cmp
es
aas
pop
sub
sbb
dec
xchg
popf
sahf
cmp
mov
dec
inc
xchg
xor
out
mov
int
xchg
cltd
mov
push
jbe
cmp
pop
mov
jg
aad
push
sub
sbbb
pop
jo
jnp
rcrb
xchg
lahf
or
stos
cwtl
movsb
rorb
pop
insl
rorb
xchg
leave
mov
mov
loopne
in
xchg
push
pop
in
push
pop
push
sbb
mov
outsl
incl
pop
lock
mov
leave
dec
and
pop
subb
clc
call
xor
add
je
leave
std
loope
push
xor
mov
bt
xchg
push
fcoml
test
cmp
outsl
jae
out
mov
out
adcl
sahf
test
pop
cmp
iret
xchg
jno
xchg
sar
and
mov
orl
dec
sub
push
stos
iret
ret
ficomps
shll
mov
loop
mov
jne
cmp
pop
or
rorl
jle
xchg
inc
dec
pop
push
and
fldl
inc
add
xchg
aaa
js
roll
inc
xor
xchg
arpl
sub
dec
enter
bound
js
and
and
jns
scas
mov
aad
xchg
sahf
cmp
ret
sarl
mov
into
xor
mov
cmp
movsl
mov
or
gs
pop
icebp
xor
pop
stos
sbb
imul
jae
dec
mov
adcl
pop
daa
cli
test
cltd
add
pop
or
push
bound
cmp
cmp
xor
test
add
pushf
sub
fdivrl
dec
aas
jae
popa
cmove
sti
icebp
popa
fwait
xchg
xor
sub
sahf
cmp
cltd
cltd
cmpsb
aaa
sbb
sahf
cmc
push
jg
xor
mov
mov
inc
test
mov
cmp
cmpsb
sub
inc
mov
pop
mov
shlb
decb
lock
and
ds
fildll
jmp
int3
lret
pop
or
dec
push
fisubrl
adc
call
mov
or
xchg
je
out
lock
in
gs
add
imul
lds
fstps
dec
lret
push
cmp
pop
xchg
xor
in
pop
mov
pushf
push
mov
xorb
jp
mov
jle
xor
cs
sbb
jg
fwait
xlat
sbb
addr16
shlb
mov
fwait
and
inc
dec
nop
xor
enter
cmc
adc
sbb
fdivrp
pushf
adc
out
std
xchg
fisubrl
push
lret
test
xor
cmp
mov
sbb
scas
das
lods
cmpsb
inc
ja
les
shll
pushf
push
aaa
out
mov
jge
inc
and
pop
in
mov
mov
sub
les
js
scas
pop
out
stos
fdivs
int3
mov
adc
mov
mov
into
cmpsl
icebp
jmp
xor
cmp
push
cld
in
ror
divb
leave
sub
mov
rcl
mov
xchg
push
in
icebp
cwtl
test
pushf
xchg
push
xor
cli
mov
xchg
mov
inc
mov
mov
mov
push
loop
dec
cli
data16
xor
cmp
sarl
movsb
sub
fidivl
gs
js
and
mov
test
cld
stos
inc
filds
lods
ljmp
adc
aad
pop
xlat
lret
push
lret
and
and
out
icebp
fistpll
cld
imul
dec
addl
stos
push
mov
data16
hlt
adc
mov
movsb
inc
and
or
sub
mov
cmpsl
popf
mov
in
pop
push
in
push
lret
mov
xchg
dec
mov
mov
lods
and
iret
jg
adc
outsl
xor
dec
mov
push
xor
cmpsl
sub
in
cmp
or
adc
pusha
rorl
fnsetpm(287
xchg
jmpw
jecxz
out
mov
js
dec
and
inc
out
insl
sub
lock
imul
mov
aam
test
pop
mov
lahf
sbb
adc
or
push
xchg
adc
jns
in
fiadds
cmp
xor
adc
cmc
add
das
mov
addr16
mov
int
cmc
sbb
dec
dec
mov
inc
loopne
mov
scas
iret
push
test
sub
repnz
pop
popa
mov
pop
or
mov
and
cmp
lcall
popa
dec
xor
arpl
sub
fcoml
sar
repnz
movsb
jno
xchg
push
pushf
adc
inc
les
test
scas
shll
xorl
adc
out
rcl
aam
clc
mov
stc
xor
push
xchg
xchg
xchg
sahf
cmc
call
int
flds
test
or
sub
dec
dec
stos
sub
adcl
mov
cmp
sub
add
std
mov
sub
mov
push
mov
mov
push
push
add
aaa
inc
jae
ja
xorb
fs
int3
testl
mov
shl
fisubl
scas
inc
inc
or
push
int
fisubs
sbb
inc
fisttpl
push
scas
and
roll
imul
cwtl
fs
xchg
into
mov
pop
sub
sbb
sub
cmp
mov
int
pusha
ds
xchg
sub
push
fstl
fildl
fmuls
push
mov
mov
cmp
sub
sub
pop
les
movl
clc
movsl
and
xor
pop
iret
std
lds
push
fldcw
test
mov
mov
push
sbb
test
push
pop
stos
data16
ds
fsts
sbb
xchg
dec
jno
fists
aaa
pushf
or
daa
cld
push
into
mov
add
arpl
pop
loopne
pop
and
mov
inc
lock
movsl
fdivl
xlat
les
xchg
push
and
stos
xchg
dec
ret
lock
dec
decl
and
inc
push
adc
sbb
mov
jle
les
dec
add
xor
dec
mov
adc
push
in
mov
neg
or
jne
sbb
ja
shll
cs
xlat
mov
xchg
mov
cmp
lahf
call
adc
mov
icebp
sbb
cld
nop
push
bound
xchg
sub
xor
cmp
push
and
pop
dec
mov
mov
mov
test
jnp
arpl
xchg
mov
sbb
in
push
sbb
fcmovnbe
loop
dec
fisttps
jae
jno
flds
lea
dec
repnz
sti
les
data16
loop
mov
lret
mov
jbe
jge
push
aas
mov
sbb
int
push
xor
popf
ss
movsb
mov
xchg
stos
mov
fidivs
into
dec
lock
aaa
xchg
cmc
jle
sub
inc
sub
mov
insl
or
mov
cmp
or
pop
dec
xor
xchg
stos
pop
mov
sti
sub
mov
and
adc
jecxz
jbe
mov
fbstp
lret
jmp
fnstenv
mov
ret
jbe
adc
add
inc
jnp
or
sti
adc
lock
push
ficompl
stos
pop
aas
pop
mov
jne
mov
gs
ja
adcb
aaa
sbb
stc
in
pusha
cmp
in
outsl
lcall
xor
aas
adc
shl
sbb
in
ljmp
xor
xchg
jp
call
roll
mov
aad
stos
cmp
mov
jg
imul
lea
adcb
popa
pop
shl
movsb
shl
in
pop
fisttps
add
cmp
and
rorl
repnz
sub
push
xchg
xchg
mov
sbb
cmp
sub
pop
push
andb
xor
lahf
je
addr16
or
jae
xor
in
sbb
je
and
xchg
and
mov
xchg
inc
icebp
enter
sbb
mov
sbb
lds
cmpl
mov
ja
mov
cmp
stos
out
cmp
iret
js
pop
sbb
cmpsb
in
inc
adc
pop
inc
inc
xorl
stc
adc
sahf
mov
orb
enter
popf
push
xor
gs
jno
ret
jmp
call
loop
xchg
mov
xor
jl
jb
loope
xor
or
int3
test
push
arpl
mov
jne
cli
shlb
aas
stos
movsl
imul
add
inc
dec
mov
out
lcall
jbe
iret
pop
cmc
add
xchg
cmp
jnp
ljmp
cmp
aad
push
sub
and
aaa
nop
sbb
add
adc
adcl
inc
dec
loop
inc
sbb
lahf
push
dec
int
and
out
scas
sbb
std
or
jb
out
ret
mov
inc
jne
cmp
jo
and
or
push
adc
jbe
nop
lods
mov
adc
ja
repz
mov
insl
mov
jno
aaa
mov
mov
inc
lods
out
shll
int3
xchg
aad
sar
push
push
mov
inc
leave
pop
cmc
ds
int3
mov
ja
push
cltd
push
push
mov
lds
or
sbb
mov
int3
stos
jg
roll
lcall
xor
ss
movsl
in
push
mov
inc
shlb
jne
fisubl
outsb
push
shrb
lods
aad
dec
cmp
xlat
cwtl
mov
pop
jno
add
xchg
scas
fsubr
in
jnp
and
rcl
mov
cmp
pop
sbb
sarl
lods
jle
ljmp
nop
add
popf
frstor
push
push
push
ret
mov
adc
dec
cmp
cmp
sub
repz
sub
nop
ucomiss
mov
dec
mov
repz
pop
add
or
icebp
iret
into
mov
mov
and
enter
in
xlat
ror
inc
xchg
test
fstl
jecxz
sub
mov
daa
repnz
std
mov
in
sbb
sbb
rorb
jnp
push
push
cmp
ljmp
loop
xor
or
inc
sub
lods
add
fldenv
aam
cmp
movsb
pusha
inc
jne
stos
lret
cmp
cli
dec
mov
cmpsl
daa
sbb
dec
and
insl
dec
jae
stc
or
push
cltd
shrl
mulb
inc
pop
inc
cmc
cmp
fs
loope,pn
cli
or
inc
dec
jle
pop
arpl
stc
sarl
adc
cmc
pop
out
shlb
test
pop
jo
hlt
fnsave
lds
dec
into
and
sub
das
push
push
popa
in
out
xchg
jne
fmuls
test
fcoml
and
push
and
cmp
sub
jg
or
mov
popa
sub
sbbl
xchg
enter
out
in
add
push
xor
out
pop
punpcklwd
mov
inc
mov
xchg
popf
mov
in
xchg
sahf
xlat
or
inc
and
lods
dec
inc
les
cwtl
cmpsl
pop
pop
mov
xchg
sti
aas
mov
out
pop
xor
add
arpl
pop
subl
cwtl
cmp
lods
in
shrb
fsubrs
sbb
lock
xor
jl
inc
sbb
xor
notb
outsb
push
stos
adc
and
jmp
mov
pop
lcall
pop
jge
pop
nop
pop
xor
fisubrl
fcompl
leave
cmpsl
inc
xchg
push
mov
mov
iret
or
pop
jmp
or
shrl
xchg
int
and
sahf
std
sbb
pushf
scas
mov
cmp
adc
pop
cmc
aam
mov
mov
testl
and
cs
lcall
inc
mov
int
rcr
loopne
in
addr16
mov
jmp
xor
repz
stc
stc
xorb
jmp
call
xchg
jge
lods
push
xchg
mov
ret
call
out
mov
and
in
jae
jae
and
adc
xchg
mov
mov
inc
pushf
and
cwtl
jle
repnz
andl
movsb
in
push
out
mov
push
repnz
ret
jg
rsqrtps
out
cwtl
or
out
sub
movsl
add
arpl
mov
rclb
xchg
sub
mov
shll
xor
inc
out
mov
inc
push
mov
mov
data16
push
pop
inc
popf
movsl
jnp
mov
ja
mov
inc
lods
push
addb
rcr
adc
inc
xchg
jae
dec
push
out
in
out
add
xchg
test
push
mov
hlt
aad
enter
xor
jb
add
dec
mov
test
inc
lcall
cmp
dec
adc
pop
lock
lock
mov
jp
popa
call
mov
clc
es
addr16
push
pop
fisttpll
lds
shll
mov
in
sub
and
add
push
mov
andb
pop
lret
sub
mov
rclb
add
cltd
sub
mov
adc
add
pop
sbb
dec
popf
das
xlat
sbb
push
nop
and
out
xor
in
and
fiaddl
sbb
sbb
xor
mov
pushf
mov
addr16
fcomps
xor
pop
pusha
imul
sub
jb
jb
lahf
out
mov
cmp
cmpb
jge
mov
mov
movsl
xchg
push
loope
addr16
outsl
xchg
push
jo,pt
adc
push
push
or
mov
sti
cmpsb
fcompl
imul
out
jmp
xchg
cmp
pop
and
adc
and
pop
mov
cmp
insl
pop
enter
xor
sub
dec
cwtl
inc
pop
daa
xor
sbb
out
mov
das
orl
imul
shll
mov
test
insl
xor
sbb
lods
adc
ds
jmp
cwtl
mov
jo
fstpt
cmp
dec
xchg
jbe
xchg
inc
add
sub
jno
mov
nop
repz
and
xchg
sub
je
sub
test
push
mov
das
xchg
lock
mov
pop
jmp
repz
mov
and
stos
pusha
stos
icebp
mov
ljmp
xchg
sub
pop
and
ja
insl
in
push
mov
popf
call
cmpsl
adc
mov
sub
pushf
pusha
adc
out
ljmp
outsb
stos
adc
jbe
int
adc
ret
out
jb
clc
cmc
loopne
jne
rcll
ja
cs
adc
mov
mov
rcrb
shlb
inc
push
xor
flds
adc
fwait
dec
data16
repz
push
push
inc
lahf
and
lcall
inc
int
adc
and
cmp
gs
dec
ja
popa
loope
jp
dec
jbe
push
mov
and
int
fcmovne
or
xor
dec
cmp
or
add
leave
addl
iret
jecxz
cltd
push
push
xor
nop
pop
mov
add
icebp
sub
int
sub
xchg
mov
jmp
sbb
pop
or
pop
ret
pushf
xor
xor
int3
lods
outsb
notb
jae
jg
sti
daa
add
int3
xchg
leave
mov
std
sbb
popa
xchg
bound
int3
aas
je
push
out
push
iret
leave
jbe
xchg
xchg
mov
in
cmpsl
sarl
sbb
pop
lea
jno
xchg
sub
jmp
jno
pop
int3
cmp
pop
cld
pop
cmp
and
sub
sbb
adc
or
sbb
xor
mov
enter
add
rcl
scas
inc
xchg
js
jecxz
push
iret
and
je
jmp
cmp
mov
dec
xor
jb
loop
in
cltd
mov
cmpl
cs
out
fucomp
sti
pushf
mov
popf
aad
clc
xor
addl
xor
leave
fbstp
ret
and
das
lock
roll
pop
lods
add
push
push
mov
ljmp
or
jbe
clc
mov
es
ljmp
xchg
pop
outsl
push
adc
jg
loop
into
push
in
andl
or
xchg
push
cmp
pop
adc
lods
in
clc
insl
filds
sbb
jge
or
mov
push
nop
icebp
sub
push
subl
dec
sub
sbb
adc
mov
pop
decl
icebp
add
js
cmp
out
xchg
dec
pop
sbb
pop
mov
lods
add
and
xchg
call
insb
lahf
dec
inc
sbb
out
jg
inc
in
xchg
and
lret
jl
xchg
daa
mov
and
pop
jp
lods
insl
xchg
sbbl
mov
mov
fs
jle
inc
sub
iret
rol
mov
xchg
mov
jbe
mov
dec
xor
enter
inc
rcrb
sub
jo
stc
sub
cmp
pop
repz
mov
add
jae
dec
cld
pop
insl
mov
add
mov
sub
shl
cs
int
inc
mov
jnp
mull
int3
lods
and
jae
xchg
push
les
nop
xor
inc
and
pop
lret
mov
jp
rcrb
sbb
pop
stc
or
adc
inc
inc
push
mov
icebp
mov
jmp
pop
push
sbb
mov
mov
in
mov
cli
xor
mov
mov
pop
fprem
repnz
ja
xor
out
sub
sbb
cmp
sbb
push
adc
jb
jmp
insb
aas
cmp
fnstcw
ja
or
cmc
mov
les
jno
jp
mov
icebp
cli
and
cmp
add
cmc
dec
dec
cs
adc
aam
push
inc
pop
shl
stos
push
popa
sub
mov
aas
and
jnp
je
sbb
int
imul
arpl
test
jae
subl
adc
cld
push
pop
cmpsb
shl
xchg
cld
or
shll
and
mov
xchg
mov
mov
ss
popf
lock
mov
cwtl
push
jbe
push
xchg
shrl
push
xor
push
mov
repz
stos
sbb
sub
sub
dec
mov
ss
xchg
xor
lahf
push
in
xchg
add
jl
pop
pop
xchg
adc
ret
ret
stos
pop
cltd
nop
outsl
or
mov
dec
aas
lea
cmc
jne
xor
sbb
inc
mov
lds
cld
in
js
lret
jnp
sbb
insb
sub
iret
fistpll
push
faddl
sub
lret
add
dec
dec
sar
adc
aam
push
add
clc
lds
popa
addl
cmp
sbb
xor
data16
imul
add
and
sbb
sub
lcall
nop
subl
or
xchg
jle
jno
imul
add
mov
lret
add
cmp
mov
stc
daa
pop
mov
add
xchg
pop
loopne
sbb
fmull
test
or
js
sbbb
jo
and
mov
fcomip
push
mov
rcll
push
stos
jg
movsl
dec
mov
sub
adc
and
sub
icebp
mov
pop
push
cs
iret
scas
mov
fstl
repz
sub
std
stos
stc
adc
movsl
xor
je
sbb
push
xchg
fmull
sbbl
dec
add
int3
leave
pop
cmpsl
sbb
push
jmp
subl
add
lock
cmpsb
xor
adc
mov
stc
cmp
hlt
or
mov
mov
ljmp
mov
push
je
test
scas
xor
cld
jbe
imul
mov
sub
out
in
inc
adc
xorl
out
repz
adc
fdivrl
lret
mov
int3
push
adc
bound
int3
sti
push
imul
push
adc
gs
xor
js
lods
test
jmp
xlat
outsl
xor
stc
xlat
mov
stc
stos
mov
lret
and
mov
mov
pop
mov
pop
jecxz
jnp
sub
cmp
hlt
icebp
cmp
out
pop
pop
test
pop
movsb
inc
ret
xchg
out
mov
stos
cld
inc
shlb
cmpb
inc
cmp
jl
jmp
ja
mov
push
adc
xchg
mov
adc
cli
int
push
xor
xchg
out
fdivl
dec
vcvtps2pd
sbb
stos
or
lret
sbb
cmp
inc
inc
push
mov
mov
adc
icebp
shll
inc
add
jno
mov
mov
loope
mov
pop
or
lods
fidivs
sub
xor
mov
and
pushf
stos
jl
or
sub
lahf
js
cmp
cmpsl
add
and
adc
je
leave
out
daa
inc
hlt
jbe
out
fcmovb
xchg
decl
xchg
mov
sub
or
and
sub
shrb
inc
pop
pop
repz
pop
fisttpl
sti
arpl
push
imul
lret
mov
jle
cmp
jg
loope
adc
shlb
mov
out
push
dec
push
or
sub
imull
push
xor
js
sub
mov
xlat
test
mov
xchg
stc
push
xor
leave
pop
jbe
add
adc
scas
adc
popa
xor
xchg
jae
inc
addr16
mov
pusha
xchg
push
xlat
data16
inc
inc
in
out
loop
clc
adc
adc
lcall
arpl
push
fcom
ret
push
scas
mov
add
mov
jnp
loope
mov
shlb
mov
into
jge
adc
or
inc
sbbb
aam
inc
jnp
jle
mov
cmc
mov
inc
dec
jbe
in
fisttpl
inc
adcb
outsb
fcoms
lods
insb
clc
aam
xor
mov
lea
xchg
and
jg
mov
mov
in
adc
ds
or
je
idivl
jp
add
mov
clc
lret
mov
dec
mov
push
mov
cmp
inc
int3
ljmp
cmp
cmp
pop
subb
jecxz
mov
mov
cmc
aad
inc
lret
dec
addr16
shlb
out
mov
jmp
inc
pop
xor
add
mov
fisubrl
out
aaa
or
sbb
push
or
mov
fcos
jne
fcmovu
mov
cmp
inc
add
ret
adc
inc
jle
adc
pop
fstpt
push
dec
bnd
jl
in
adcb
inc
int
inc
jp
out
xorl
and
xor
jmp
adc
stos
or
sahf
je
cmp
or
ja
jno
imul
and
adc
adcb
jae
lret
lcall
and
loop
push
pop
or
aad
ret
pop
cwtl
sbb
add
pop
jmp
sbb
pop
fsubrs
add
cmpsl
leave
mov
inc
jl
in
dec
sahf
das
sbb
jecxz
xchg
inc
stos
roll
gs
jns
movsb
sub
xchg
dec
xchg
test
push
call
pop
outsl
push
cmp
pop
mov
test
xor
enter
repnz
fucomp
out
mov
xor
cmp
insl
xor
mov
in
xor
stos
cltd
dec
sbb
das
sub
shlb
cltd
std
add
aaa
int
pop
push
test
inc
jbe
movsl
mov
xchg
jp
xchg
xchg
rol
out
test
and
inc
and
and
or
ljmp
addr16
loop
xchg
sti
sahf
adc
mov
jb
fbld
inc
test
sbbl
or
nop
mov
sub
lret
andb
cmc
sti
je
jmp
mov
mov
cmp
stos
cmp
and
cli
shll
aaa
pop
popf
shll
fiadds
out
outsl
jbe
push
cmp
sub
shlb
jmp
lock
jae
fisubs
mov
es
and
aaa
push
test
mov
pop
popa
mov
test
std
cmp
xchg
jb
jno
mov
lahf
outsl
dec
out
mov
bound
fstpl
in
cmp
and
and
arpl
push
inc
in
xchg
pop
jle
xlat
mov
imul
out
les
push
and
imul
mov
out
cmp
jae
pushf
jecxz
addr16
sub
adc
xor
or
call
inc
mov
negb
out
mov
jmp
mov
call
insb
fidivs
nop
xchg
mov
aam
popa
jl
mov
ret
mov
mov
inc
adc
movsb
addr16
mov
jnp
inc
dec
or
clc
jle
mov
mov
mov
mov
add
mov
imul
dec
cmp
or
cmpsb
add
mov
ja
lock
cmp
test
xlat
push
or
jge
jbe
ds
mov
xchg
std
and
jne
and
addl
in
ds
mov
fwait
xchg
push
ret
cmp
xor
pop
jle
or
insl
ja
scas
or
xchg
cmpsb
cmp
rcll
sarb
inc
aad
push
sti
es
rolb
ja
sbb
mov
sbb
popf
repz
imul
mov
add
lods
ds
ret
sbb
or
adc
sarl
fisubl
and
stos
jmp
adc
js
sub
fisubs
mov
pop
or
cld
frstor
or
xchg
subb
data16
push
xchg
xchg
mov
movsl
mov
push
xchg
dec
cwtl
cs
incl
int3
clc
jg
xchg
es
sti
and
js
sub
mov
sub
fsubp
ret
dec
ljmp
sbb
ss
push
mov
jp
dec
push
int3
and
outsl
jl
xchg
push
scas
lea
mov
jae
aad
daa
jb
dec
imul
arpl
xchg
adc
aas
push
xor
nop
mov
mov
out
push
pusha
in
pop
adc
sbb
pop
mov
shl
mov
inc
lea
sti
sbb
je
rcl
lret
or
mov
push
shl
aam
cmpsb
int
repz
gs
ja
jae
popa
adc
cltd
mov
shll
scas
lcall
jbe
pushf
dec
test
push
call
push
add
pop
pop
lret
xchg
sti
jge
fwait
xor
dec
push
sub
shll
out
xchg
xchg
std
imul
lods
call
push
faddl
ret
call
jge
ret
repnz
movsb
sub
inc
mov
or
and
dec
fisubs
daa
rdtsc
pop
mov
pop
mov
jno
popa
sub
mov
adc
outsl
mov
add
dec
mov
ljmp
aad
ja
adc
xchg
dec
addr16
data16
mov
pop
movsb
dec
cmp
push
xor
aam
xchg
repz
xlat
mov
sbb
adc
mov
int3
pop
in
sbb
dec
mov
loop
mov
aas
in
ljmp
pusha
jge
outsb
xchg
int3
shll
shl
pop
mov
loop
push
cli
xchg
pop
jp
out
out
pop
sbb
adc
sbbl
or
xchg
movsb
push
and
sahf
clc
ret
in
add
fildll
mov
enter
cmp
jp
dec
call
or
popa
pop
popf
testl
cmp
cmc
dec
and
xor
adc
insb
mov
or
mov
fcomip
cs
setns
sbb
into
fisubrl
sbb
cmp
ret
inc
add
data16
ret
mov
andl
lret
lea
push
jno
adc
and
ficompl
js
sub
xchg
test
std
in
mov
mov
push
jg
je
mov
daa
rclb
mov
jmp
cmp
scas
lea
jg
enter
sahf
rclb
push
out
icebp
pop
cmp
cmp
sbb
push
into
ja
movsl
dec
stc
sbb
mov
adc
xor
sub
xchg
and
mov
imulb
mov
add
jno
or
ds
stos
bound
repnz
mov
pop
hlt
repz
mov
xchg
data16
mov
bound
xchg
sbb
test
xlat
adc
ja
fwait
movsl
mov
push
mov
imul
xchg
push
mov
xor
test
mov
ss
sti
fsts
cltd
scas
and
inc
in
dec
icebp
sbb
push
xchg
push
loop
dec
rcl
sbb
repz
cwtl
mov
int3
mov
inc
mov
dec
test
cmpsl
addl
lock
es
mov
or
mov
aaa
cmpsb
mov
cmp
jmp
into
ja
dec
sbb
inc
in
jns
cmpsl
ret
add
xlat
pusha
shlb
lea
push
cmp
add
add
pop
jne
dec
or
lahf
scas
fcoml
idivl
sub
mov
pop
stos
cmp
jl
push
pop
cmp
cmp
es
popa
mov
and
je
mov
or
ret
sbb
lock
xchg
push
ljmp
push
in
dec
int3
xchg
cmp
inc
icebp
cmp
hlt
pusha
sarl
out
mov
xchg
imul
imul
test
imul
shrl
xchg
xor
enter
sbb
aas
fsubs
loop
lock
cmp
jl
pop
jg
ficoms
aaa
les
mov
pop
lahf
icebp
scas
test
test
jle
fwait
mov
daa
add
xchg
into
sbb
sub
add
lahf
aaa
or
call
lahf
in
lods
rep
mov
sub
test
shll
xchg
mov
repz
push
inc
add
jmp
push
inc
adc
mov
aaa
movsl
repnz
push
sub
jge
pushf
cmp
or
sub
call
sbb
rolb
cmp
imul
pop
xchg
enter
jne
xchg
push
clc
sahf
mov
sbb
mov
adc
movsl
stos
cmovb
leave
cmc
cmc
daa
cltd
jne
fldenv
cmc
loope
jno
adc
outsl
or
jbe
pop
and
inc
mov
sbb
mov
jne
cld
inc
in
cld
fstl
adc
rolb
mov
push
mov
lock
sbb
sbbb
sub
cmc
mov
mov
enter
add
push
stc
fisttpll
xchg
es
mov
pop
icebp
xor
scas
jecxz
jmp
push
mov
jecxz
lods
movsb
lahf
jecxz
mov
jns
pop
sub
xchg
pusha
push
push
add
ljmp
cmp
adc
mov
sub
fs
cmp
lcall
jb
mov
outsl
fisubrs
loopne
js
std
aas
lret
push
inc
bnd
add
std
leave
ljmp
lret
push
cmc
jg
icebp
enter
jnp
roll
sbb
mov
and
or
or
test
jl
stos
push
push
adc
xchg
icebp
pop
mov
test
repz
leave
je
out
xchg
mov
add
inc
pinsrw
popl
or
in
scas
sti
or
daa
xor
push
pop
ds
pop
or
xor
dec
and
mov
gs
jge
icebp
xchg
inc
fnstenv
cmp
sahf
add
pop
adc
adc
std
sbb
sub
arpl
lahf
add
jl
call
dec
xorl
dec
cmc
rorb
or
cli
adc
inc
mov
das
pop
mov
ljmp
repnz
ja
ficompl
shrl
iret
mov
push
pushf
mov
std
push
cmp
xchg
push
cmp
sbbl
call
push
mov
jp
pop
jae
xchg
daa
clc
out
or
movsl
add
push
xor
cmp
iret
sahf
sub
loope
imul
sbb
rcr
loop
fidivs
and
xchg
icebp
pushf
mov
into
repz
pop
inc
adc
sub
les
xlat
inc
mov
rcrl
mov
ljmp
dec
js
dec
loop
xchg
mov
roll
dec
hlt
nop
cmp
shrb
call
add
jo
adc
dec
mov
xchg
fisubl
jae
cmp
repnz
hlt
sbb
add
push
sbb
add
testb
pop
cmp
cmpsb
pusha
xchg
mov
sub
out
icebp
xor
mov
outsl
inc
pusha
mov
test
mov
add
lock
nop
sti
mov
xchg
cli
mov
shlb
fsts
push
movsb
mov
leave
dec
ja
cwtl
mov
dec
ljmp
cwtl
adc
push
out
imul
cwtl
cmc
test
out
pushf
test
and
push
push
sbb
cmc
movb
cmp
hlt
sbb
std
lods
xor
in
inc
xchg
cli
sbb
adc
xchg
or
pop
sbb
bound
mov
loopne
push
mov
rcr
push
pop
cli
movsb
push
popa
or
or
add
jmp
fists
and
xchg
add
push
lock
sbb
mov
test
into
aam
int
jle
insl
lods
das
movsb
jnp
cmp
xlat
cmp
add
lods
mov
dec
inc
fcomps
lret
mov
nop
mov
outsl
repz
cmp
fs
rcrb
push
cmp
je
adc
push
movsl
mov
and
sub
jp
movsb
push
cli
sti
sbb
adc
les
inc
inc
popf
mov
and
sbb
mov
cmp
pop
adc
fisttps
mov
inc
lret
sbb
adc
cli
pushf
leave
inc
sub
pop
push
xchg
or
add
out
mov
jb
push
push
push
scas
fs
nop
rcll
dec
push
out
pop
xchg
mov
or
sbb
ljmp
xlat
data16
test
push
or
xor
icebp
inc
jle
xor
fsubrl
cmc
ret
insl
push
xor
fcoml
dec
sarb
loop
sbb
jg
push
bound
aam
mov
sub
adc
jne
add
mov
sub
push
pop
aas
clc
cmp
es
lds
filds
inc
push
lret
or
test
sub
mov
mov
mov
xor
pop
cwtl
mov
or
sub
jge
insl
mov
xchg
mov
xchg
add
out
roll
lret
addr16
lods
adc
mov
pop
add
int3
mov
popf
movmskps
and
inc
push
add
push
ror
js
sbb
pop
in
shlb
adc
dec
icebp
sbb
inc
mov
cmc
xchg
sbb
aaa
loop
popa
dec
mov
inc
out
jne
fisttpll
or
fninit
mov
inc
xchg
icebp
push
pop
in
dec
jmp
hlt
jo
add
test
arpl
pusha
push
frstor
loope
ss
pop
push
mov
dec
pop
xor
fdivrs
mov
out
dec
and
mov
cmpsb
sbb
fsub
shrl
mov
inc
mov
sahf
or
hlt
test
aaa
xor
add
nop
cmp
mov
lret
cmp
stc
xchg
imul
orl
mov
nop
and
addr16
inc
adc
xor
mov
popl
mov
insl
repnz
xchg
loopne
pop
pop
ljmp
add
sbb
or
pop
add
stc
adc
cmpsl
fxch
into
addr16
pop
jbe
xlat
movsb
rorb
test
jmp
adc
jle
and
mov
rcr
xchg
push
mov
cwtl
push
jmp
icebp
cmc
lret
lret
push
inc
loopne
inc
sbb
push
stos
data16
xorb
xor
sbb
adc
mov
sbbl
test
mov
cmpsb
cmp
lock
movb
cmc
sub
into
out
inc
push
stos
outsl
jb
jmp
or
ja
sahf
mov
push
scas
or
aas
inc
in
xchg
je
pop
jp
movsb
sub
pop
jns
ss
mov
lcall
test
push
nop
inc
push
fwait
inc
mov
xor
ja
push
gs
dec
test
stos
out
mov
jmp
jmp
inc
adc
inc
pushf
xchg
jl
push
xor
insl
mov
stos
xor
sbb
in
lods
push
ds
addr16
adcb
std
in
outsb
jp
mov
and
gs
out
dec
inc
sbb
lods
in
sub
pop
aaa
aas
jmp
xchg
and
cltd
adc
cmpsb
rcrl
loopne
xchg
push
rcrl
pop
push
arpl
sbb
pop
xchg
sbb
mov
test
jbe
push
mov
pop
ljmp
in
call
gs
xor
lods
adc
xchg
stc
jb
xor
and
sti
inc
fistpll
push
xor
js
enter
jle
pop
cmp
push
pop
push
jg
xchg
aad
decl
out
sbb
push
cmp
xor
mov
insb
rcrb
stos
aad
pop
pop
clc
rol
push
cmpsb
lret
sub
lahf
jg
xor
sarb
push
jge
int
add
mov
adc
cmpb
xchg
mov
jbe
cmpsb
fimuls
ss
loop
sub
push
iret
pop
mov
out
and
mov
pop
out
or
xchg
sbb
shld
das
fxch
fs
fildll
xchg
pop
lods
sub
jns
push
out
lret
cmp
orl
mov
ja
or
inc
sahf
fstl
ja
jnp
stc
scas
jmp
or
and
lea
adc
dec
inc
dec
mov
add
jg
adc
push
inc
imul
sub
sbb
scas
enter
inc
cwtl
sbb
cli
stc
push
cmpsb
clc
lods
cmpsb
popf
mov
push
data16
add
add
mov
iret
xchg
sbb
cmp
mov
dec
pop
cs
mov
jecxz
fnstenv
iret
lock
insl
fs
int3
xchg
xor
cmp
mov
and
in
fldl
push
stos
sbb
insb
cmp
ret
cmp
push
lods
add
push
scas
adcb
inc
in
push
js
xchg
rcrb
push
pop
movsl
add
sub
int
and
adc
movsl
add
je
das
imul
sti
jl
mov
mov
aaa
in
popf
sahf
fidivrs
test
push
cmp
enter
popl
in
adc
movsb
sub
mov
stos
ret
cmp
lds
xchg
dec
outsl
outsb
nop
ret
fwait
xor
fbstp
and
xchg
in
jmp
jecxz
adc
fsts
push
loope
adc
data16
mov
xchg
mov
cwtl
inc
xchg
adc
stos
loopne
int3
dec
inc
or
sbb
sbb
mov
xchg
jnp
sarb
stos
sbb
scas
out
adc
add
cmpsl
sub
insb
fldl2t
lock
push
and
xlat
inc
add
das
xchg
lret
mov
mov
mov
lcall
divl
sbb
rolb
xchg
pushf
xor
inc
mov
sub
mov
push
inc
daa
mov
mov
sti
cmpsb
dec
adc
push
mov
or
lods
and
lahf
in
cmp
dec
addl
sub
fwait
add
in
aas
insl
mov
add
movsl
push
jle
call
pop
push
lods
sub
jnp
insl
int3
popa
rolb
int
or
sub
jae
add
test
insb
mov
enter
nop
sbb
adc
rcl
mov
into
cmp
pusha
mov
push
loope
sub
push
and
cmc
jb
cmp
sarb
into
sbb
popf
mov
ret
push
aam
push
inc
sub
or
push
mov
popl
cmp
jp
lahf
pop
lret
lods
jecxz
cltd
sbb
imul
pop
xchg
cltd
pusha
push
andb
js
scas
dec
subb
fucomip
loop
lea
mov
inc
das
mov
sbb
mov
mov
in
ljmp
arpl
repnz
and
out
cmpsb
mov
fdivrs
pop
imul
pop
or
movsl
cmp
push
mov
fimull
sub
inc
or
sarb
cltd
mov
dec
add
adc
in
bound
or
loop
fidivl
rorl
aas
mov
ret
icebp
sub
mov
adc
push
aaa
popf
aaa
pop
jp
jb
mov
ja
pop
jecxz
sbb
aam
jle
mov
fs
sub
test
xchg
jmp
in
addr16
mov
add
jno
aam
add
inc
std
jmp
hlt
lods
pop
ljmp
dec
cmpsl
xchg
enter
insb
out
xlat
mov
and
and
loope
repnz
pop
inc
std
push
dec
repnz
shl
ds
cmpl
out
outsl
nop
cmpsb
fimull
fists
lods
mov
cmp
inc
movsb
ds
das
push
out
outsb
stos
subl
aaa
cli
fcompl
outsl
ja
aas
add
pop
pop
dec
push
pushf
lcall
fadd
jo
jno
addr16
aas
sub
in
insl
add
rcrb
mov
sub
fdivrs
rolb
adc
jnp
sbb
pop
mov
test
iret
insl
or
cld
sarb
into
or
fnsave
pop
or
cmp
fnsave
sbb
arpl
dec
mov
jnp
pop
loopne
mov
cmp
dec
mov
loop
jbe
pop
mov
xor
test
pop
pop
call
jns
pop
je
fwait
int
loop
dec
sub
or
cwtl
cld
xor
in
mov
inc
es
fstps
jne
mov
add
out
ss
and
sub
cmpsl
cmp
sahf
hlt
pop
jmp
daa
sub
ja
mov
call
lock
mov
lods
sub
mov
aad
inc
push
js
xchg
shrb
xchg
push
jg
fisubrl
aaa
inc
push
rol
mov
and
cli
outsl
add
std
sub
imulb
inc
sahf
add
push
cmp
mov
fimull
in
sbb
fbld
aad
push
jmp
and
stc
mov
cmp
and
lods
xor
jmp
cmc
mov
inc
repnz
jbe
sbb
loop
fcomp
dec
xchg
in
push
cmp
lret
dec
addb
movb
jl
insl
data16
xor
add
adc
outsb
movsb
les
add
scas
je
mov
test
ret
mov
xor
inc
cmpsb
addr16
das
test
ret
test
repnz
and
testb
add
pop
cld
sti
mov
ret
ret
pop
push
loopne
sbb
xchg
adc
sahf
push
mov
and
btc
test
dec
jbe
rcr
adc
lret
dec
add
mov
les
gs
stos
xor
xchg
adcb
pusha
lea
outsl
out
cs
jge
inc
rorl
and
pop
cli
inc
sbbb
fidivrl
jnp
fldenv
mov
aaa
scas
idivb
pusha
cwtl
shr
mov
into
ret
push
pop
subl
jge
vmovlps
push
and
cmp
adc
jg
enter
and
mov
push
add
dec
test
cltd
pushf
leave
sahf
divb
dec
add
xchg
pop
pop
lock
lds
and
dec
outsl
jmp
test
inc
pop
pop
dec
mov
push
fmul
add
popf
fsubl
mov
jge
cli
popa
ds
inc
adc
sbb
push
xor
fldcw
dec
lock
mov
cmp
add
push
mov
sarb
fstpl
mov
add
xchg
sub
sbb
aam
push
add
fisttpll
icebp
mov
adc
inc
ret
lret
xchg
push
dec
pop
jecxz
lock
mov
movsl
cmp
movsb
andl
shll
sub
idivl
mov
pop
rorb
pop
xchg
or
sti
xchg
jl
test
cs
push
sub
shll
shll
inc
lds
stos
je
mov
push
shrl
in
shrb
mov
jns
test
add
movsl
push
cmc
inc
and
lret
bound
push
loopne
push
out
push
enter
cmp
insb
fistpll
clc
adc
sbb
xchg
stos
push
dec
jp
negb
rolb
cs
add
sbb
mov
dec
out
pusha
imul
sub
mov
inc
out
movsl
push
add
xchg
pop
pop
xchg
jmp
and
out
arpl
adc
xchg
adc
cltd
in
cmp
insb
scas
js
subb
lea
dec
cmp
jno
test
clc
popf
and
lods
cmp
jno
jecxz
in
mov
scas
adc
movsl
movsl
cmpb
jmp
in
rclb
rclb
loopne
pop
movsb
in
push
test
push
imul
pop
fsubl
adc
push
cmpsl
xor
roll
dec
push
adc
sub
jp
gs
in
out
or
or
or
inc
inc
add
inc
cwtl
fisubrl
push
dec
push
dec
cwtl
pop
add
dec
ss
mov
mov
ret
fiaddl
sbb
shll
repnz
push
or
loop
ss
sahf
bound
push
shr
out
out
mov
addr16
jno
sbb
mov
mov
jge
js
lods
faddp
mov
and
cvtps2pd
jge
push
loop
sbb
xlat
sbb
aas
sub
sbb
push
out
sbb
sahf
ret
dec
fisubrl
idivb
aad
push
inc
push
xchg
addr16
adc
mul
movsb
or
dec
insb
pop
or
outsl
loop
stos
dec
push
stos
out
push
cmp
pushf
cmpsl
dec
or
cs
or
psadbw
jnp
in
or
mov
cmp
jb
cwtl
int
cmp
xchg
fstpl
dec
clc
fldt
in
pop
xor
pop
jg
xor
rcrl
mov
xchg
mov
popf
dec
mul
popf
push
xor
movsl
pop
push
in
cwtl
pop
jle
mov
out
jae
mov
mov
or
adc
lds
sarb
sarl
add
mov
cltd
xchg
sti
cmp
insl
pop
pusha
inc
pop
aaa
sti
nop
adc
pop
mov
dec
mov
pop
or
sub
movsl
shrb
arpl
bound
adc
adc
jmp
pop
mov
and
popa
dec
sbb
insl
int
sarb
jo
mov
loop
bnd
fldenv
mov
pop
cwtl
pop
roll
cltd
rolb
scas
mov
adc
call
jmp
sahf
in
adc
xchg
insl
fldcw
je
rcr
dec
mov
es
xchg
hlt
sbb
dec
loop
push
fnstsw
daa
stos
sub
xlat
repnz
shl
jne
int
cltd
popf
arpl
scas
cmpsb
xchg
sub
sbb
fnstsw
stc
push
sub
outsl
mov
testb
mov
lret
stos
or
cmp
pop
xlat
rorl
int3
pop
jb
addr16
adc
pop
js
mov
jecxz
xchg
xchg
inc
jns
fwait
jle
jecxz
arpl
lret
mov
fs
cwtl
frstor
fsub
jge
push
ficoms
jnp
push
cmp
dec
inc
inc
xchg
jle
add
pusha
in
pop
sub
cmp
sarb
dec
dec
mov
les
insb
mov
add
xor
ljmp
add
jbe
xchg
cmp
int3
leave
scas
dec
mov
gs
int3
push
mov
aaa
lock
pushf
sub
shlb
filds
xor
adc
mov
xchg
fcmovne
out
jne
je
test
mov
sub
int
ja
aaa
out
dec
pop
adc
nop
mov
test
fisubrl
stc
sbb
push
test
rcrb
add
repnz
and
ljmp
and
sub
outsb
ja
std
mov
rolb
sbb
xchg
fisubrl
xchg
stc
test
and
int
xor
test
xchg
call
pop
sbb
fldenv
dec
add
imul
cs
pop
sub
mov
cmc
xchg
fisttps
mov
loopne
les
cmp
lahf
dec
dec
cmp
xchg
push
enter
or
dec
mov
lods
sub
negl
mov
shrb
std
inc
fisubrl
xchg
adc
sbbb
repnz
cmp
push
fimull
dec
call
scas
xorl
in
in
test
inc
aaa
pop
sbb
pop
out
rcll
xor
cwtl
xor
jns
and
jo
or
sub
scas
sub
push
cmp
sbb
sub
andl
cwtl
fstpt
mov
xlat
test
and
add
fstl
xchg
sbb
push
adc
mov
add
ds
stos
pop
popa
sub
les
add
sub
mov
xchg
push
mov
and
or
push
stos
outsl
arpl
in
or
jp
mov
jnp
mov
sub
or
out
out
inc
adc
mov
loop
mov
mov
in
xchg
add
aaa
test
cmp
pop
int
ja
inc
cmpsl
add
xchg
loopne
stc
pop
mov
inc
insl
or
cmc
out
sbb
mov
popa
loopne
dec
and
add
lods
incl
push
xchg
pop
jbe
int3
push
add
insb
lds
xor
jge
add
lcall
inc
push
sbb
test
stos
pop
daa
jp
or
sbb
stc
mov
inc
mov
or
mov
mov
xor
add
inc
jbe
add
inc
sti
mov
lret
add
dec
into
pop
std
jle
and
xchg
shrb
arpl
push
test
cmp
sbb
gs
call
nop
fs
inc
in
hlt
mov
lret
adc
out
aad
jmp
cmp
mov
pop
out
mov
fstpl
inc
lahf
jecxz
subb
pop
insl
divb
jp
mov
push
nop
dec
fdivrl
fwait
sub
push
ret
movsl
push
lcall
mov
cld
lods
shll
data16
cld
fistl
insl
jmp
or
popf
cmpl
xchg
insl
mov
sbb
push
ret
cmp
stc
lea
dec
fiadds
jns
std
daa
mov
sub
sbb
inc
ljmp
mov
jae
cmp
ret
out
dec
imul
pop
scas
ret
in
pop
cmpb
pop
cmp
rcr
mov
fwait
xor
cli
or
mov
nop
popf
push
mov
repz
les
pop
lret
jg
pop
adc
lds
push
jnp
fdivrp
or
adc
ret
xchg
cmp
add
sub
adc
scas
xor
and
pop
adc
cli
sub
fwait
jne
loope
and
in
xchg
add
jle
fwait
adc
dec
pop
dec
adc
mov
mov
pop
inc
mov
jb
call
lock
mov
andl
cmp
movsb
js
push
pop
xchg
pop
and
push
add
sbb
imul
cwtl
fiadds
or
loop
clc
add
int3
mov
andl
or
jns
sahf
pop
loope
sahf
cmp
hlt
mov
sub
cmp
and
jg
or
push
bound
mov
mov
icebp
fstpt
pop
andl
push
std
push
xlat
subb
dec
pop
dec
rcrl
push
push
sti
mov
jmp
jecxz
jmp
and
data16
or
push
add
mov
rcr
adc
mov
cmp
out
ss
icebp
pop
xlat
add
fwait
scas
out
cltd
mov
addr16
jnp
pop
or
in
dec
cmpsl
fnsave
sbb
movsl
icebp
mov
inc
xchg
mov
dec
add
lret
inc
cmp
or
dec
ss
xchg
or
xor
sbb
inc
mov
cli
pop
andb
in
add
aas
mov
xchg
shlb
mov
and
jp
inc
xchg
inc
mov
nop
mov
repnz
repz
and
pop
outsl
iret
data16
xor
in
adc
xchg
ret
fiadds
mov
jl
dec
daa
pushf
push
and
inc
scas
cmc
notl
aas
mov
cmp
mov
mov
jbe
ss
test
sub
xor
and
mov
push
sarl
sbb
dec
and
cmp
sbb
xor
cmp
addr16
rorl
sub
pop
jmp
and
mov
lods
mov
jbe
aaa
adc
faddl
lock
sub
ret
sub
dec
mov
cmp
mov
cltd
int
push
fwait
test
es
pop
jecxz
pop
and
inc
gs
orb
push
xchg
mov
jl
pop
data16
mov
sbbl
add
jg
pushf
jno
ret
sbb
icebp
pop
stos
push
leave
and
bound
add
cmpsb
in
cmpsb
or
mov
fwait
xchg
imul
xor
shrl
les
add
stos
insl
and
andb
dec
xchg
loop
sbb
pop
inc
ljmp
bound
or
add
pop
ds
lods
pop
mov
out
adc
loope
hlt
icebp
outsl
and
sub
je
inc
lret
pop
inc
loopne
pop
jbe
stos
or
data16
inc
cmp
mov
xchg
jno
xlat
stos
nop
mov
pop
push
sub
mov
mov
push
hlt
nop
iret
cmp
stos
int
roll
and
lret
mov
test
dec
mov
push
or
popa
xor
test
out
lcall
add
mov
inc
xor
lahf
pop
je
mov
or
jo
sbb
iret
insb
dec
bound
cmp
lds
add
push
fsubl
push
in
enter
leave
shl
mov
xorb
xlat
test
stc
add
dec
int
jae
fdivs
inc
int3
jnp
sbb
aaa
data16
imul
pop
ljmp
sbb
inc
dec
das
in
ret
leave
push
xchg
out
push
jo
ljmp
sub
mov
cmp
stos
jle
dec
sub
lds
mov
das
sbb
jmp
add
xchg
cld
or
push
add
inc
popa
mov
xchg
roll
dec
fcmovnu
jnp
sbb
push
orl
jo
sti
inc
movsb
aad
ja
jge
out
and
lret
pop
push
in
jns
push
adc
pop
jae
into
scas
mov
mov
lea
xchg
scas
mov
shl
sbb
sbb
mov
mov
push
pop
xchg
sub
cmp
sbb
mul
mov
mov
add
or
push
fdiv
in
aad
mov
cmp
sub
sbb
ss
xchg
out
pop
mov
dec
imul
push
sub
mov
ret
pop
cmpl
sub
out
pop
outsb
sbb
scas
cltd
outsl
xchg
dec
call
xchg
addr16
outsl
dec
aaa
mov
push
fstl
pop
jo
xchg
cmp
pop
out
pop
and
jbe
fs
in
pusha
fcoms
mov
mov
mull
lret
shrb
ds
xchg
rcrb
fcmovne
movsl
into
gs
dec
push
pop
fildll
out
icebp
stos
xchg
jno
inc
pop
call
mov
shr
adc
movsb
sbb
subb
fisttpll
xchg
add
addr16
xor
cmp
test
inc
mov
dec
mov
jo
fsubrl
scas
rorb
mov
push
push
push
or
roll
xchg
clc
jno
push
in
xchg
pop
and
xchg
jbe
dec
and
mov
int3
pop
sub
dec
lods
sub
pop
mov
mov
mov
cltd
incl
adc
dec
dec
shlb
fwait
mov
pop
popf
pop
lret
es
in
pop
cmc
or
fucomp
aas
push
lock
insl
pop
sub
jle
cltd
push
xor
sub
or
pushf
ss
adc
mov
nop
jl
repz
jno
shll
out
pop
inc
aas
scas
pop
fwait
mov
test
push
sub
shll
push
xlat
fstpl
push
ficompl
push
out
clc
jnp
and
std
inc
roll
inc
shll
shlb
ljmp
push
pop
jno
sbb
pop
xchg
add
faddl
idivl
jno
push
push
and
cmp
add
rcrl
aas
je
out
adc
leave
dec
xor
jno
lds
daa
mov
cmp
dec
push
daa
in
fnop
sbb
pusha
jae
clc
pop
mov
mov
cmpsl
aas
mov
cmp
push
push
jp
mov
add
add
cmpsl
push
aam
mov
sub
cmp
cmp
fldenv
cli
testb
push
pop
pop
sbb
add
cmp
mov
push
ljmpw
jle
mov
add
ds
cltd
push
inc
movsb
inc
fildll
or
dec
jecxz
cld
sub
rcll
xchg
addr16
xchg
outsb
xor
cmp
icebp
bound
hlt
repz
xchg
ss
xchg
xorb
inc
sbb
adc
jmp
das
add
mov
pop
cwtl
cmp
pop
push
in
ret
xchg
push
push
dec
cli
jbe
insb
cmc
insb
inc
dec
and
pop
cwtl
mov
es
cmp
adc
xor
popf
int3
test
sub
push
mov
dec
xlat
sahf
sti
into
cmpsl
xor
int
jae
dec
mov
gs
aad
out
cmp
mov
xlat
call
mov
xchg
pop
scas
enter
jnp
bound
mov
mov
mov
ret
aad
mov
leave
movsl
or
into
jns
or
and
iret
add
dec
stos
pop
lods
add
lea
dec
ljmp
or
pop
xor
sub
ds
sub
and
nop
add
sbb
mov
aad
loope
dec
in
xor
xchg
mov
xor
hlt
push
addl
jno
adc
mov
imul
mov
or
add
out
ds
shll
push
scas
or
into
push
shl
xor
bound
mov
loopne
aas
prefetcht0
cmp
and
pop
dec
xlat
cmp
pop
addr16
hlt
adc
out
pop
iret
sub
imul
dec
out
dec
adc
stos
test
andl
or
lods
mov
mov
xchg
mov
xor
cmpsb
sbb
and
stos
mov
add
in
int3
xor
pop
inc
mov
and
bound
sub
sub
mov
repz
pop
jnp
lock
jno
leave
push
gs
aam
and
cmpsl
xorb
out
or
test
sub
inc
xchg
or
and
push
ret
mov
dec
xchg
jl
pop
cmc
adc
sub
in
pop
xor
repnz
xor
scas
jae
dec
int
test
pop
inc
fcmovbe
roll
repz
dec
xlat
or
mov
cmp
pushl
int
scas
out
ret
iret
repz
adc
add
lea
xchg
leave
sbb
addr16
push
in
sub
mov
stos
inc
fistpl
shrl
jno
mov
adc
iret
lcall
movsb
dec
xor
pop
inc
dec
cmc
adc
jae
mov
cmp
daa
out
xchg
mov
xchg
adc
rcl
cmp
push
mov
jecxz
es
fldcw
addb
sbb
push
mov
jnp
rolb
pop
pop
shll
mov
xor
or
fnsave
sarb
fstpl
insl
xchg
pop
cld
stc
inc
repz
inc
cmp
stos
out
out
dec
into
and
jl
sbb
mov
daa
mov
mov
cmp
mov
aaa
ja
fwait
sbb
sub
imul
inc
push
pop
push
pop
pop
lret
lea
xchg
dec
push
mov
xchg
ret
sarl
xchg
scas
cmp
mov
rclb
push
sub
add
jne
push
icebp
jmp
sbb
xor
cmp
fcmovu
fsubrs
lods
pop
lea
rorb
fbld
xor
fisttpll
js
sbb
cmp
out
sub
adc
clc
es
sbb
sub
loope
pop
jo
lahf
adc
dec
push
iret
xchg
jle
sub
pop
pop
or
inc
jne
sbb
pop
aam
or
lretw
add
sbb
mov
pop
lods
addr16
lcall
mov
cmp
sub
pop
cmp
scas
enter
xchg
shlb
mov
mov
sbb
inc
nop
loope
fcmovu
aas
inc
insb
sub
push
adc
mov
lea
and
jecxz
aas
push
nop
out
das
shll
test
subb
lret
pop
loope
scas
ss
jge
mov
rorl
leave
or
xchg
cmp
rcll
mov
sbb
cmp
mov
pop
ret
push
outsb
ss
es
add
mov
cs
pop
mov
jge
push
and
stos
dec
add
fidivs
mov
jae
loopne
fcomps
repz
cmp
push
jns
xor
mov
mov
jecxz
inc
add
in
push
mov
sub
inc
cmp
movsb
sub
add
or
cmp
adc
inc
and
aaa
rorb
mov
adc
lock
push
sub
ljmp
movsl
call
gs
cli
addr16
std
lods
fldt
dec
shll
jl
incb
sahf
andb
mov
add
pusha
pop
icebp
dec
pop
mov
sbb
jns
test
sub
stos
sahf
jns
js
mov
jnp
popf
and
or
dec
push
xorb
ret
cmp
cltd
pop
inc
sub
insb
imul
inc
cmp
and
jmp
stos
mov
fs
inc
je
jg
imul
dec
xor
jle
mov
in
mov
xchg
test
mov
add
inc
push
jo
mov
cmpsb
stos
hlt
push
jno
xor
sbb
mov
xor
fs
cli
adc
lods
jecxz
mov
lret
js
mov
mov
outsb
or
jne
stos
pop
ret
lahf
bound
inc
ds
ljmp
test
or
mov
lds
es
stos
out
cltd
jg
scas
dec
xchg
fdivl
xor
mov
pop
and
popa
je
sub
sbb
ss
inc
xorb
in
in
ss
insb
das
insl
cltd
add
pusha
jae
test
js
add
data16
push
fcmovbe
sbb
mov
enter
mov
in
mov
arpl
push
push
rclb
jge
lds
dec
inc
mov
push
in
dec
sub
or
sub
and
adc
fcoms
daa
or
mov
dec
cmp
sub
bound
sub
stos
sbb
jmp
push
adc
lret
fwait
jno
jno
sti
test
adc
inc
sti
inc
fstps
fsubrs
jne
mov
sub
ljmp
sub
sbb
sbb
js
loop
jp
push
loop
lds
cmp
push
or
push
cmpsl
dec
std
xor
mov
les
imul
out
mov
pop
xor
int3
adc
mov
xchg
pop
jl
negl
mov
dec
loopne
in
mov
push
inc
test
fcoms
cmp
cmp
dec
xchg
cmp
out
mov
pop
aas
sbb
adc
jo
jle
sub
pop
repz
mov
sub
imul
scas
xor
pop
pop
mov
xchg
or
jae
push
mov
jbe
lcall
je
ja
pop
in
out
cld
jecxz
mov
pop
loopne
push
movsb
ja
sub
dec
ja
sti
xchg
in
pop
push
and
dec
rol
scas
clc
dec
ja
out
and
and
and
ja
and
mov
insb
in
cmpsl
xchg
xchg
dec
inc
pop
pusha
fisubrl
xchg
in
xchg
test
ss
mov
cmc
nop
dec
cmp
add
push
or
movsb
ret
arpl
stos
imulb
cmp
add
es
add
push
xchg
cmp
dec
aam
add
jns
pushf
sahf
daa
lret
shll
push
mov
and
pop
insb
mov
outsb
xorl
jle
lret
bndstx
test
jp
arpl
cmp
xchg
xchg
inc
icebp
lret
into
cwtl
cmp
sub
add
dec
outsb
daa
mov
sbb
std
inc
mov
int
sahf
add
xchg
xchg
scas
jmp
mov
nop
or
daa
js
xchg
pop
pusha
repnz
rol
aad
jo
aad
int
xor
mov
fbstp
jns
shll
stos
ja
lret
xor
incl
movl
arpl
mov
pop
mov
mov
scas
dec
aad
enter
mov
push
lcall
and
stos
in
cmc
test
loopne
pop
mov
clc
xlat
mov
inc
imul
cmp
roll
xchg
outsl
mov
xor
sar
ret
jae
test
pushf
push
xchg
hlt
scas
hlt
out
xchg
jg
and
xor
jg
fstpt
inc
push
dec
push
sbb
arpl
out
mov
jb
rcrl
imul
mov
adc
cmp
jle
cmpsb
xchg
lcall
outsb
insb
les
leave
mov
scas
lcall
insb
push
sbb
mov
dec
mov
dec
in
lahf
xchg
imul
cwtl
push
test
bnd
xchg
cmp
mov
cmc
lods
mov
add
out
psraw
push
into
sbb
in
js
and
xorl
ss
xor
jle
cmp
lahf
or
xor
leave
and
push
imul
push
inc
or
jbe
cltd
std
push
enter
adc
pop
pop
cltd
stc
daa
lea
jb
or
and
add
push
cmp
je
arpl
in
mov
xor
xchg
ds
push
cmp
mov
inc
lods
xchg
xchg
mov
aad
lods
xchg
es
and
add
sahf
mov
in
popf
xchg
mov
xchg
cmp
mov
in
sub
cmp
mov
pop
fnstcw
jp
in
push
fcoms
jp
cli
sbb
push
push
or
push
cmp
test
dec
dec
xor
insb
call
mov
jne
add
dec
decl
shl
ds
enter
add
mov
and
xchg
jne
push
cmpsl
hlt
jns
test
cmp
sub
cmp
movsb
dec
mov
push
out
cmp
movsb
lahf
clc
inc
fcmovu
mov
out
inc
aas
xor
cmpsb
xchg
bound
push
aad
aaa
mov
iret
jge
or
movsl
sbb
sbbb
movsl
scas
cmp
and
clc
jne
ret
decb
mov
sahf
inc
mov
pop
adc
pop
mov
scas
mov
das
inc
rclb
push
pop
fwait
imul
cmpb
add
loopne
fnstcw
jmp
dec
test
cmp
pop
dec
sbb
imul
dec
jns
ja
cmc
mov
mov
pop
pop
rclb
mov
out
sti
xor
das
add
jge
aad
cwtl
out
xlat
xchg
lahf
rcrb
aad
or
fisttpl
ret
stos
or
fidivrs
ret
xchg
pop
inc
xor
jne
loopne
fadds
jbe
push
lods
add
nop
dec
sub
push
aaa
xchg
adc
or
sbb
jmp
push
aas
out
jmp
adc
rorl
iret
insl
add
pop
bound
fidivl
mov
or
andl
mov
pop
xchg
movsl
fsubl
add
and
sub
sub
mov
divb
pop
fwait
mov
out
pop
fstps
jmp
das
sub
dec
cmp
sbb
das
mov
sti
dec
adc
sub
xchg
cmpl
int3
mov
pop
xchg
sub
sub
jmp
orl
mov
pop
adc
sbb
out
inc
inc
push
xchg
pusha
adc
cmp
xor
add
decl
or
cld
sbb
sar
out
cmpsb
iret
in
stos
or
mov
test
data16
sbb
je
push
in
ljmp
sbb
subl
notl
fildll
fidivrl
and
xor
and
stos
jbe
cmp
mov
outsl
fiaddl
lret
cwtl
lahf
loope
adc
gs
fidivl
mov
or
jo
mov
jb
in
and
imul
push
xchg
and
pop
lods
ds
pusha
aad
jno
mov
iret
lea
jmp
xchg
xchg
pop
push
push
adc
inc
enter
loop
lcall
mov
jae
shl
fs
dec
dec
push
call
gs
sbb
clc
out
test
movsl
mov
or
pop
leave
and
sub
sub
xchg
mov
in
or
jnp
pop
lods
and
xlat
adc
cwtl
cld
sub
sbb
lcall
popf
xor
arpl
push
sbb
pop
into
push
lods
loop
sub
js
popf
xor
int3
mov
scas
gs
repz
mov
xchg
fdivs
je
xchg
inc
cmp
adc
adc
popf
adc
mov
sbb
pop
out
mov
adc
cmpsb
movsl
lea
call
shrb
add
stos
push
mov
mov
inc
sbb
xor
cmpsb
shll
loop
xorl
lock
mov
mov
push
sbb
cmpl
andl
mov
test
cmp
xlat
dec
leave
add
iret
dec
adc
ret
xchg
add
sbb
pushf
aas
enter
adc
and
mov
loopne
cmp
xchg
out
js
adc
das
ss
cmp
add
movsb
pop
jno
lods
fistpl
insl
sbb
imul
shlb
cmpsb
mov
add
mov
dec
sbb
sbb
pop
inc
mov
pop
jg
sbb
fistpll
sahf
jge
ret
xchg
sar
imul
insb
mov
sbb
int3
shlb
adc
nop
out
lahf
mov
lret
cmp
dec
push
notl
leave
frstor
sub
jns
sub
add
into
jp
jmp
inc
arpl
in
cmp
pushf
push
arpl
add
jbe
movsl
jns
pop
adc
dec
lea
xor
mov
mov
shlb
xchg
mov
jne
js
pop
lcall
mov
outsb
cmp
in
lret
cmp
pop
mov
add
hlt
je
loopne
das
shrl
cmp
int
pop
xchg
int3
inc
rcr
sub
push
cwtl
or
and
mov
mov
push
add
adcl
sbb
xchg
inc
outsl
mov
push
inc
fsubs
mov
jno
mov
or
xchg
jbe
sub
pop
xlat
jmp
and
jp
out
js
ret
lret
lods
xor
mov
ljmp
sahf
push
mov
insb
add
add
lods
mov
mov
push
mov
add
mov
inc
push
adc
fs
adc
negb
sub
lods
jbe
pop
pop
pushf
push
xchg
stos
lds
insl
jno
xor
les
cld
in
lock
xlat
jns
xchg
aad
scas
movsl
and
push
or
lods
inc
adc
xchg
jbe
sub
pop
outsb
push
shlb
out
jl
add
out
enter
mov
in
out
push
fs
pop
and
std
outsb
cmpb
mov
div
cmp
jle
call
sub
sti
fstpt
hlt
shr
js
pushf
fwait
and
in
popf
mov
in
xchg
stos
jge
imul
dec
lahf
dec
int
mov
pop
std
sub
add
or
repz
clc
sbb
icebp
dec
fistpl
fidivrs
arpl
ret
jne
icebp
pop
push
mov
dec
js
dec
fsubrs
jecxz
add
mov
pushf
xchg
jge
cmp
mov
jns
jp
mov
test
das
ljmp
cltd
ret
lods
cmp
aad
ljmp
inc
jo
adc
mov
cltd
jae
sbb
and
fs
mov
lock
dec
lock
xor
inc
data16
mov
popf
idiv
test
sub
lcall
inc
pop
stos
jg
inc
shr
xor
lahf
and
cmpsl
jge
int
stc
repz
add
sbb
jnp
notb
push
fmulp
cmp
dec
iret
pusha
es
cmp
cmp
jb
mov
lahf
lret
jp
lods
adc
std
jle
sub
addr16
add
ja
cmp
popf
addb
jbe
mov
cmp
mov
jl
pop
mov
in
leave
loope
jmp
mov
pop
shl
mov
dec
jecxz
xchg
movsb
ret
cmp
push
stos
cmp
fs
cltd
push
aam
test
cmp
loope
pop
adc
fmuls
or
push
mov
jge
xchg
leave
rolb
in
jno
addl
adc
cmp
add
xchg
push
jmp
pop
xchg
inc
pusha
mov
in
dec
scas
pushf
clc
sub
sbb
and
arpl
mov
enter
xchg
stos
or
dec
mov
jp
fsubl
lcall
jae
test
icebp
cmpb
jge
xchg
cld
.byte
inc
