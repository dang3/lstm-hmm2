nop
add
add
insl
addl
popf
sahf
inc
lahf
movsl
cmp
or
mov
std
mov
rorl
lds
dec
mov
xchg
or
imul
push
adc
sbb
clc
jmp
xchg
lret
add
xchg
fsubs
adc
sbb
pop
mov
push
sbb
cmp
ljmp
inc
mov
sub
push
xchg
call
hlt
pop
data16
gs
test
adc
lods
jg
jo
test
mov
xchg
xchg
jno
cltd
mov
mov
movsl
jb,pt
lods
cmp
sbb
push
cmp
js
mov
cmp
ds
lds
repnz
nop
stc
push
call
push
jecxz
inc
or
movb
orl
or
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
mov
dec
cmp
je
ds
push
add
fimuls
cltd
in
or
hlt
dec
div
int3
or
dec
nop
push
add
dec
push
or
pop
adc
mov
dec
dec
mov
dec
aad
and
xchg
push
sub
dec
adc
inc
add
ss
add
mov
dec
add
pushf
push
add
ret
add
pop
jle
and
sbbl
add
popf
sub
movsb
and
test
push
xchg
dec
pusha
cwtl
popf
and
movsb
rep
stc
pusha
divb
int
push
mov
mov
movsl
scas
cmp
pushf
push
jmp
inc
out
dec
push
mov
fldt
push
das
jbe
loop
cmp
mov
lock
rcpps
mov
mov
mov
in
mov
mov
in
mov
cmp
das
fcoms
jno
xor
insl
mov
push
xorl
pop
and
pop
mov
inc
lcall
jnp
dec
rcr
add
insl
cmc
mov
xchg
mov
sbb
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
pop
jne
pop
mov
lea
mov
mov
push
sarb
lea
out
fcomi
mov
fidivl
mov
xlat
into
ficompl
adc
add
flds
xlat
insb
dec
test
icebp
mov
mov
mov
in
mov
mov
in
mov
addr16
jl
sahf
movsl
xor
pop
mov
mov
sub
xor
int
mov
sahf
das
xor
fisttpl
fs
add
out
push
push
jge
or
jnp
or
test
pop
jp
insb
test
iret
adc
stc
and
xlat
cld
jnp
mov
scas
clc
xchg
int
add
or
inc
add
ljmp
mov
es
xor
in
mov
pop
mov
loope
mov
xor
in
mov
mov
in
mov
mov
in
mov
iret
insb
loopne
xchg
inc
fidivs
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
cltd
fcoml
cmp
xor
in
mov
mov
in
mov
mov
in
mov
mov
pop
shl
xor
int3
iret
imul
mov
in
mov
daa
popa
jb
arpl
loope
sbb
loope
ja
mov
nop
lret
mov
in
mov
xchg
sub
adc
push
pop
lods
pop
fidivl
sbb
test
daa
adc
jp
xor
in
mov
pop
test
pop
lret
repz
xchg
mov
mov
lods
aam
or
iret
pop
xchg
push
xor
in
mov
add
xchg
sub
or
negl
out
lods
jle
je
inc
imul
rcpps
mov
mov
xor
js
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
pop
sbb
cmp
cmc
mov
in
adc
pushf
cmc
in
pushf
xchg
out
pop
mov
cmpsl
shrl
push
pop
out
jge
push
stc
xor
jmp
dec
cmpsl
or
fwait
sbb
scas
mov
xor
test
or
mov
fld
adc
js,pt
ss
imul
mov
cmp
imul
push
sub
fisubl
adc
bound
xchg
test
insb
dec
lock
fwait
addr16
cmp
cmp
cmp
or
das
push
jb
mov
int
and
ds
iret
rorb
xor
push
mov
cmp
push
sbb
imul
mov
ror
shll
xlat
fcmovnb
xchg
xchg
call
push
aad
bound
xlat
fs
pop
shll
mov
daa
test
stos
push
or
leave
frstor
enter
hlt
rorb
insb
adc
sub
pop
into
jne
pop
cmp
lods
push
mov
unpckhps
das
and
dec
cmp
imulb
sti
out
push
jns
popf
ret
inc
lret
inc
adcl
insb
mov
pop
int3
push
inc
bound
arpl
push
stc
int3
jne
pushf
fidivrl
pop
int3
inc
push
mov
outsl
mov
push
iret
movsb
jb
jnp
shrl
dec
sti
mov
cmpsl
push
sarl
jae
addr16
inc
dec
das
dec
rorl
push
adc
mov
push
test
test
mov
loopne
sbb
xor
push
stos
pop
pop
iret
jmp
add
inc
push
pop
mov
scas
and
inc
arpl
and
push
jp
shlb
add
ja
push
addr16
fs
in
out
jmp
jmp
popf
aad
jg
sti
adcb
cmp
push
jb
stos
xor
js
outsl
roll
mull
jmp
sbb
jbe
inc
add
add
push
int3
mov
cmp
dec
int
insb
decl
cmpsb
jb
fwait
push
add
push
call
scas
addl
lods
ret
jecxz
js,pt
in
aad
adc
jbe
xchg
enter
lea
lea
imul
rcll
ja
cmc
in
gs
fst
enter
jge
jg
push
pop
push
pop
mov
or
sub
cmpb
cmp
stc
add
xorb
ffreep
jne
xor
push
add
mov
addr16
mov
inc
popf
cmpsl
inc
aad
mov
adc
xchg
mov
xor
pushf
in
dec
pop
iret
xchg
push
adc
jns
sbb
int
mov
lret
fsubrl
dec
scas
mov
pop
push
stc
cs
cwtl
inc
pop
repnz
sbb
shll
out
pushf
inc
dec
or
ljmp
ret
pop
adcb
sub
and
jl
fldcw
push
adc
jmp
sbb
sbb
sbb
je
cmp
xchg
cmp
rcr
fdivrs
movsl
push
xchg
pop
imul
inc
call
lcall
xor
adc
enter
dec
pop
stc
cli
fiaddl
push
mov
je
jb
cmp
jecxz
ljmp
lret
jmp
and
or
ret
shll
sub
sti
loopne
mov
or
filds
out
inc
pop
dec
jge
pop
in
bound
or
and
jle
xor
ds
dec
js
sbb
inc
js
je
shlb
dec
or
add
pop
cwtl
cmpsl
clc
aad
sahf
pop
fs
stos
inc
in
or
popf
fwait
mov
push
test
loop
mov
or
jmp
sub
mov
push
push
cs
jne
sbb
pushf
fidivs
setbe
add
fabs
jp
push
and
fldl2e
jns
enter
jmp
movsl
sub
and
cmp
pop
pop
gs
cmp
cld
arpl
pop
and
iret
rolb
mov
pop
push
jb
mov
je
repz
or
addr16
icebp
es
dec
push
fs
je
push
repz
ficoml
ficoml
lds
mov
add
inc
mov
push
and
adc
push
pop
test
adc
fdivrs
fsubs
dec
outsb
int3
push
adc
dec
pop
sub
fstl
repz
or
cmp
inc
pop
mov
sar
out
or
add
arpl
rcl
push
call
gs
or
in
loope
jns
ret
jno
arpl
cmp
jb
pop
test
dec
dec
lods
pop
push
mov
adc
cmpsb
push
xor
icebp
sub
mov
mov
mov
aam
inc
hlt
and
jecxz
das
pop
inc
in
lret
push
mov
cmp
int3
inc
and
bound
pop
sub
mov
ja
mov
jmp
mov
jle
addl
movsb
jmp
aas
xor
imul
mov
test
std
dec
add
inc
mov
push
lahf
movsl
jbe
add
add
mov
cs
hlt
jae
sub
nop
or
mov
std
das
ja
aad
dec
in
adc
int3
push
jnp
xor
rcl
negl
test
lods
pop
js
leave
and
pop
jecxz
daa
push
mov
dec
lock
sub
jg
fcomps
adc
jg
sbb
loope
rcr
rcll
mov
insl
inc
lcall
xchg
pop
ret
lret
sub
lahf
push
mov
in
dec
incl
pop
sarb
mov
adc
sbb
sahf
inc
scas
add
int
jne
aas
cs
sbb
into
out
cmp
mov
mov
shlb
push
jae
sbb
mov
fmull
dec
xor
or
ja
and
mov
mov
cmp
cmpsb
hlt
sbb
mov
sub
xlat
or
mov
pop
mov
stos
sub
shrl
sbb
xorb
cld
jb
pop
out
push
or
test
jnp
mov
insl
imul
movsl
scas
cmp
cmp
aas
fnstsw
in
inc
add
xchg
filds
adc
aad
pop
sar
and
xchg
or
xchg
mov
xor
mov
das
push
mov
and
popf
je
cmpsl
int3
and
das
into
mov
pushl
pop
jmp
cmp
mov
jle
call
and
popa
jmp
out
es
cmp
mov
out
clc
out
mov
je
out
sbb
fldcw
imulb
sbbb
shl
dec
jp
push
enter
inc
aad
je
jno
das
mov
inc
mov
mov
pop
adc
mov
push
test
adc
mov
and
cmp
test
insl
mov
sbb
lret
sbb
pop
jg
jg
sbb
in
test
imulb
sbbb
mov
pop
call
mov
jnp
lret
ficompl
xchg
and
ret
adc
test
mov
cmp
xchg
gs
cmp
jp
mov
fsubr
xor
pushf
adc
sbb
std
add
jnp
cmp
sarb
inc
ret
inc
in
cwtl
and
jns
cmpl
fdivl
lea
int3
push
sahf
mov
adc
repnz
mov
addr16
imul
fnstcw
jmp
xchg
xor
repnz
dec
inc
divb
xchg
repz
in
xchg
nop
cmp
filds
adc
out
out
dec
inc
divb
xchg
repz
iret
in
lds
das
sub
fbstp
shl
test
xlat
outsb
jge
imul
repz
dec
xchg
sbb
sbb
inc
dec
das
movsl
jl
pop
mull
pop
pusha
arpl
jae
cmp
les
and
mov
sub
sbb
pop
sbbb
int3
jae
add
fsubs
dec
sub
in
sbb
cmp
inc
mov
mov
jns
xchg
lret
mov
repnz
scas
xlat
pusha
loopne
aas
jnp
or
fcmovbe
cmp
movsb
xchg
inc
hlt
aas
lods
push
iret
daa
adc
adc
xor
shrb
popf
pop
push
lahf
int
mov
stos
ret
pop
push
xchg
repz
cli
dec
jne
testb
sub
xor
dec
adc
mov
mov
pop
mov
push
in
je
cmp
nop
sbb
mov
dec
aas
test
and
loope
inc
and
jp
ljmp
shlb
mov
or
jecxz
or
jae
iret
and
out
mov
jg
jmp
jne
fdivs
rorl
js
ja
sub
mov
aam
aad
xchg
lods
cmp
and
sub
push
add
js
inc
xor
fistpll
fsubrp
loope
xor
leave
clc
cmp
pop
loope
fdivr
scas
in
fisttps
push
add
mov
je
adc
in
dec
mov
enter
sbb
sbb
cmpsl
xor
cwtl
in
aaa
jne
in
or
aam
andb
bound
jbe
cmc
and
dec
push
outsb
scas
xchg
imul
jne
ret
into
cli
ja
loopne
push
jo
push
cli
sti
xchg
clc
sbb
cmp
xorl
cld
add
adc
push
mov
mov
mov
sub
mov
stos
sbb
pop
into
js
and
sahf
leave
xor
stos
mov
or
lcall
loope
xor
imul
stc
lods
inc
lahf
dec
sahf
in
cmp
cltd
xchg
push
shrb
cld
and
jo
jno
push
xchg
fsubr
cltd
sbb
mov
aam
lods
gs
lcall
pop
insl
fwait
insl
inc
lret
jbe
pop
lods
sbb
ds
and
sbb
inc
jg
in
jno
add
jle
int
mov
aad
push
jge
aaa
mov
outsb
repz
out
icebp
dec
jp
add
stos
cmp
rorl
je
xor
cwtl
jne
push
mov
jecxz
cwtl
int3
jmp
loopne
sub
jle
movsb
mov
lahf
adc
mulps
popa
std
adc
adc
push
cmc
shlb
and
mov
outsb
repnz
cmp
mov
jecxz
jg
jmp
std
xchg
mov
jns
mov
addb
leave
outsl
sbb
mov
lcall
adc
subb
push
loopne
pop
push
jecxz
jmp
cwtl
test
int3
movsb
mov
lahf
adc
mulps
xlat
ss
add
ror
xchg
xchg
rolb
into
int3
add
nop
insl
pop
inc
adc
xchg
mov
push
adcb
cmc
outsb
add
add
test
jne
je
aas
jno
scas
insb
stc
pop
xchg
and
jp
sar
cld
cwtl
scas
lea
cmp
jo
sbb
dec
xchg
cmp
dec
adc
rcll
int3
cmc
shrb
jbe
adc
fstpl
mov
pop
mov
lahf
out
cmpsl
daa
int
mov
stos
ds
rcrb
outsb
push
dec
arpl
lock
mov
cmp
frstor
nop
sbb
lock
dec
jo
push
call
je
inc
sarb
in
and
in
in
cmp
addl
push
testb
pop
clc
jne
xor
int3
pop
mov
sub
sbb
or
stos
shlb
cld
lds
mov
out
lods
and
xor
cmc
xchg
add
fdivrs
push
lea
mov
push
mov
nop
out
jno
mov
pusha
movsb
push
and
lret
mov
lods
adc
adc
inc
in
dec
push
inc
xor
shll
je
mov
inc
and
loope
push
adc
outsl
or
jns
ss
pop
jle
push
mov
in
pop
mov
inc
cmp
xchg
int3
xor
push
stos
adc
push
add
mov
cmp
pop
imull
leave
push
jno
xchg
jecxz
mov
ljmp
std
notb
dec
movl
scas
jmp
pop
hlt
cli
dec
mov
ficompl
mov
or
in
dec
pop
push
push
cli
daa
sbb
sbb
dec
hlt
bound
hlt
popa
push
mov
pop
mov
cwtd
cmpsb
cs
xchg
dec
ss
jne
movsb
sub
in
ljmp
mov
addr16
fwait
adc
fldcw
add
jg
pop
mulb
xor
push
lds
jecxz
cli
jmp
and
sbb
outsb
mov
jmp
inc
shlb
add
lds
mov
repnz
sub
or
jns
cmp
mov
fildl
clc
in
cmpsl
fisttpl
aas
add
add
xor
cmpb
dec
imul
jae
stc
in
loope
mov
xor
jmp
in
jge
arpl
cmp
or
out
shl
jp
jecxz
and
cmp
pop
push
xchg
dec
stc
sbb
or
push
mov
jb
cld
movsl
xchg
paddsw
lahf
push
jno
sbb
dec
mov
jns
xor
repnz
sub
sbb
daa
ss
ret
rorb
xchg
push
das
dec
test
pop
scas
shlb
fdivs
xchg
push
jle
in
addr16
cltd
xchg
or
jae
jecxz
mov
inc
or
pop
gs
sbb
insb
test
insl
data16
xchg
xor
cs
sbbb
jo
inc
fisttps
pop
mov
ljmp
addr16
rclb
xor
js
lret
aas
cmp
stos
inc
and
scas
bswap
repnz
idivl
test
push
xor
jle
xchg
in
gs
cmc
mov
clc
scas
test
dec
movsl
adc
mov
push
inc
ret
add
cmp
orb
testl
mov
sbb
mov
inc
je
cmp
fs
pop
iret
xchg
dec
arpl
inc
jne
or
mov
pop
in
mov
sub
or
loopne
mov
pop
add
fdivl
movsl
lods
pop
sbb
xchg
stos
das
inc
imul
mov
movsl
pop
xor
mov
stos
sub
nop
push
mul
test
mov
cwtl
outsl
fldenv
xchg
addr16
movsb
leave
in
jmp
jecxz
mov
mov
mov
cmc
push
je
loope
pop
mov
inc
andb
cmpsb
incb
mov
cmpb
repnz
mov
daa
ljmp
shl
aam
xchg
xchg
cmp
and
clc
in
jns
ret
lods
rorb
mov
fwait
js
adc
movsl
roll
rclb
loopne
jno
loop
sub
xchg
jno
sahf
dec
or
sbb
pop
aas
and
pop
es
mov
and
jae
push
mov
shl
aam
out
leave
jnp
std
mov
xchg
lahf
jmp
adc
js
push
inc
inc
ds
add
enter
pop
cmp
ret
pop
cmp
lds
xorb
xor
fstl
ret
sbbl
push
imul
xor
mov
mov
or
imul
mov
int
jecxz
mov
jbe,pt
sti
pushf
jg
std
pop
push
daa
lahf
dec
pop
sub
push
adc
inc
pop
sub
mov
aas
jo
int
cmp
mov
lahf
call
ret
lds
add
rorl
insb
insl
dec
outsl
fidivrs
outsl
roll
es
out
xor
lcall
or
sub
mov
mov
inc
in
mov
push
fs
into
rorb
out
push
jae
js
sub
push
xchg
lds
shlb
dec
adc
iret
push
pop
adc
fwait
push
divl
sti
or
mov
shlb
loope
add
mov
cmp
and
xchg
and
faddp
les
jns
pusha
scas
movsb
pusha
dec
cmp
insb
mov
aas
out
dec
sti
test
repnz
pop
cwtl
sbb
mov
sbb
mov
sub
pop
mov
jnp
mov
std
pop
mov
sbb
iret
adc
rcll
mov
leave
cmc
push
sbb
pop
push
int3
rcr
jmp
mov
jp
mov
sub
mov
fadd
mov
sub
pop
stos
fwait
leave
call
or
jns
cs
icebp
das
lcall
scas
jmp
sahf
push
jbe
mov
dec
daa
test
sbb
cmc
adc
xchg
mov
adc
pop
cmp
enter
pop
inc
pop
cwtl
pop
popf
std
inc
and
pop
cli
sbb
mov
arpl
clc
jb
cmp
inc
adc
dec
call
push
mov
xchg
out
push
stc
pushf
push
inc
cmc
xchg
cli
ret
mov
push
inc
add
arpl
jp
ret
pop
pop
push
bound
jne
cwtl
xchg
inc
fsubrl
cmc
adc
test
push
xor
test
ljmp
paddsb
lcall
stos
mul
test
stc
jnp
pop
lcall
mov
xchg
jp
jnp
pandn
mov
pop
mov
xchg
pop
cmpl
sub
push
test
xchg
leave
scas
fbld
jle
pop
sbb
fdiv
sbb
push
jg
aam
xor
xchg
fwait
stos
arpl
jl
or
inc
or
icebp
cld
cmc
dec
pop
test
jle
mov
test
xchg
mov
aas
sbb
cmp
daa
ds
push
xchg
mov
ficomps
mov
scas
inc
fstps
dec
or
mov
xchg
mov
mov
lcall
loope
daa
add
gs
and
mov
and
es
sub
jp
mov
pop
xor
decl
jno,pt
jae
mov
decb
sbb
lcall
and
adc
test
popf
sti
mov
push
test
dec
push
addr16
and
push
fs
push
enter
les
imul
jno
mov
hlt
enter
add
inc
push
mov
daa
pop
movsb
mov
out
xor
jmp
xlat
aad
sti
daa
sbb
sti
sub
xorb
sbb
inc
mov
or
enter
mov
mov
inc
cmc
aam
out
ja
mov
test
das
pop
insb
jae
cmp
or
mov
sub
stos
or
lahf
mov
lods
mov
and
sub
mov
jecxz
fwait
mov
sub
xchg
iret
fsub
add
ret
ror
dec
addr16
stos
xchg
mov
pop
xchg
pop
pop
mov
and
or
push
int3
mov
ret
mov
jnp
decl
addr16
lret
int3
push
shrb
jmp
push
or
cmp
pop
jbe
fdiv
loope
adc
pop
test
mov
imul
jns
shlb
mov
inc
cmpsl
ja
or
inc
xchg
inc
negl
mov
xor
cmc
popa
jmp
mov
imul
push
in
push
cmp
in
imul
jbe
and
xchg
push
cmc
mov
pop
mov
mov
out
dec
arpl
mov
pop
les
pop
test
fists
xchg
sbb
push
xor
push
clc
lea
or
pop
push
sbbl
pop
pop
xor
jge
aaa
mov
mov
mov
dec
xchg
cwtl
cmp
bound
push
and
adc
or
js
or
imul
mov
call
sub
ds
jmp
inc
xor
push
cli
movsb
pop
inc
dec
inc
loop
loope
fisubrs
fwait
stos
push
adc
mov
loopne
into
push
pop
mov
xchg
in
dec
cmpsl
in
xor
xchg
sbb
adc
jmp
jno
adc
mov
mov
das
mov
mov
xchg
pop
rcrb
outsl
mov
cwtl
lea
push
pop
sbb
aad
pushf
in
out
xchg
pushf
subb
cs
lcall
inc
inc
or
push
gs
adc
jmp
ljmp
andb
bound
jb
pushf
dec
jecxz
stc
dec
jne
or
fcompl
pusha
arpl
dec
pop
movsb
sti
sahf
xchg
lret
xor
faddl
pop
push
inc
add
push
test
pop
add
inc
cmp
push
jle
cmp
jb
movsl
cli
dec
test
xor
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
int
push
test
add
jl
fidivrl
outsl
sbb
in
jno
data16
incl
mov
and
jl
cmpsb
pop
and
bound
int3
int
mov
mov
xor
and
pop
in
sub
xor
pop
out
mov
out
push
pop
test
in
ss
or
int3
xchg
mov
inc
push
ljmp
dec
jle
push
dec
pop
sbb
xor
in
mov
xor
pushl
nop
mov
js
movsb
fstps
xchg
ret
sar
push
cmp
xchg
jo
fsincos
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
push
clc
imul
push
jecxz
into
cmp
in
testl
pusha
jecxz
aaa
pusha
and
mov
std
pop
fldenv
lret
test
jns
sbb
pop
cmp
outsl
outsl
data16
xlat
mov
pusha
mov
push
mov
je
stos
es
mov
leave
stc
mov
sbb
jbe
aad
xchg
jne
mov
shr
insl
ss
pop
dec
insl
add
and
aam
leave
xor
imul
mov
std
dec
jmp
adc
jbe
sub
or
addb
or
das
lahf
inc
push
imul
lret
add
jbe
stos
sbb
aad
daa
mov
sub
pop
daa
imul
push
jge
mov
inc
xor
pop
cmpsl
xlat
sbb
cmp
mov
push
and
or
and
sahf
push
sti
add
xchg
sti
rcll
xchg
push
xchg
mov
pusha
push
push
xor
xlat
scas
mov
and
push
mov
imul
dec
pop
stc
jecxz
cltd
jne
rol
int3
stc
ret
mov
gs
pcmpgtb
jge
clc
mov
jb
fimull
test
inc
ljmp
add
andb
out
add
xor
mov
cmovs
adc
jle
fmull
mov
sbb
push
ret
mov
clc
pop
insl
fsubr
aaa
loop
das
shlb
xchg
daa
clc
inc
arpl
sub
mov
mov
mov
push
leave
inc
repz
mov
xorb
ret
sbb
push
cmp
mov
cmc
iret
xor
in
mov
or
jp
mov
ss
push
mov
negl
mov
pop
shrl
cli
jae
jge
mov
shlb
aas
fadds
testl
push
xlat
or
and
nop
pop
sahf
and
jo
mov
add
adc
cmp
ds
shll
adc
jg
mov
insb
sub
icebp
test
sbb
inc
dec
xchg
inc
mov
pop
jmp
repz
inc
dec
dec
dec
mov
popf
jecxz
aaa
imul
jp
push
cmpsb
lods
scas
lock
inc
out
mov
icebp
insl
sub
sbb
fsubrp
push
lea
adc
mov
daa
loop
movsb
sbb
or
popf
sbb
jg
pop
jp
testb
or
cli
push
fildl
adc
gs
stos
fnstcw
lds
repnz
lret
and
add
mov
aam
push
in
notb
lock
cltd
lcall
cmp
js
bound
mov
xchg
aas
or
mov
sub
cli
stos
in
aaa
shrb
add
mov
xor
nop
push
xchg
lret
out
lcall
rol
push
inc
mov
pushf
cmp
aaa
in
pop
das
nop
mov
jns
iret
les
jp
lds
inc
mov
loop
xchg
nop
cs
stc
popa
iret
push
dec
xchg
xchg
lock
mov
xchg
push
xor
sbb
stos
add
and
mov
insb
add
pushf
sbb
jg
inc
sub
fimull
es
jp
pop
mov
mov
cmc
ss
bound
ret
jno
scas
mov
dec
ljmp
out
xlat
jnp
out
sahf
adc
push
pop
cmpl
out
cmp
out
mov
push
jae
and
add
aad
ja
gs
cld
insl
lods
fdivs
fstl
dec
or
repz
daa
mov
cwtl
push
add
xlat
icebp
jnp
push
stos
mov
pusha
and
mov
xchg
push
lods
mov
sbb
mov
push
and
fcmovu
xor
cmp
jo
pop
jle
push
sub
shrb
xchg
sahf
mov
hlt
lcall
add
adc
cmc
or
pop
adc
filds
movsb
pop
std
lret
or
loop
xor
pop
jge
sub
lea
addr16
cmp
add
imul
mov
or
add
or
aas
pop
add
rcll
lret
jmp
aas
cwtl
dec
stc
adc
rcll
scas
or
xlat
ds
mov
jae
lret
aas
lea
fbstp
inc
pop
popa
loope
hlt
std
gs
pop
insb
xchg
fcmovne
jg
in
push
sbb
sbb
enter
or
add
pop
aas
add
test
mov
jle
or
es
jb
and
inc
lods
test
movsb
cmp
pop
sbb
adc
add
pushf
ja
popa
pop
pushf
push
incb
xlat
lret
lcall
dec
push
mov
iret
popf
addr16
repnz
mov
dec
xlat
and
sub
test
mov
or
lahf
jae
pusha
addb
lods
inc
movl
xchg
cmpsl
mov
cmpl
xor
mov
test
and
minps
mov
add
xchg
scas
pop
out
stos
xor
cmpsb
xor
test
sbb
adcl
stos
push
aaa
ret
test
ljmp
ds
mov
jle
ljmp
mov
inc
push
jle
adc
or
test
and
out
movsb
fs
jg
xor
imul
cmp
aad
shll
push
adc
sbb
mov
in
cmp
mov
out
in
je
dec
insl
push
push
jg
mov
adc
or
imul
inc
ret
jae
pop
sbb
inc
test
push
jae
into
jb
xor
shr
add
scas
popa
xchg
push
roll
add
push
bound
call
cmc
sbbl
stos
adc
push
jmp
jno
clc
enter
lret
push
iret
jl
das
int
jb
lahf
jae
iret
or
into
dec
fidivrl
pop
cmpb
push
loopne
idivl
stos
outsl
scas
push
or
xlat
mov
jae
inc
pop
fs
and
and
sbb
jbe
daa
sub
pop
mov
lods
mov
mov
mov
adc
scas
jo
cmp
inc
shll
rorl
dec
arpl
mov
loop
sbb
test
ret
add
pop
decl
lahf
push
add
mov
cwtl
fildl
push
mov
xchg
popf
cmp
ret
mov
mov
repz
xchg
jnp
mov
call
rolb
xchg
inc
enter
mov
sbb
mov
je
loope
or
addr16
or
mov
pop
mov
cli
insb
cmp
jae
lods
xchg
shlb
push
inc
push
xor
je
sbb
stos
and
popa
je
pop
mov
movb
mov
sahf
xchg
fidivs
outsb
sbbb
mov
scas
jnp
or
xchg
push
mov
cli
jne
test
jae
add
and
lock
ds
js
dec
pop
daa
jns
and
cmpsl
and
mov
sub
sub
jmp
aaa
aam
roll
sbb
int
jbe
cli
aaa
sub
xor
cmp
push
enter
ss
mov
dec
cli
or
xchg
inc
ljmp
je
dec
repnz
mov
mov
fimull
das
lret
sbb
cmp
test
sub
mov
push
test
add
fs
push
pop
mov
push
inc
mov
clc
inc
adc
xchg
cmc
push
fwait
adc
adc
jb
je
pop
mov
xchg
in
jecxz
push
mov
jle
fimull
xchg
imul
ss
in
dec
mov
sbb
mov
outsb
and
out
and
mov
mov
imul
int
sbbb
and
test
stos
xor
and
out
dec
pop
icebp
out
out
cmc
push
adc
stos
sub
insl
and
mov
sbb
out
and
das
subl
sbb
lret
add
cmp
das
and
adc
jo
dec
add
in
mov
jl
xchg
xor
les
lock
jnp
arpl
icebp
jl
scas
loop
xorb
adc
in
push
inc
fst
mov
jb
xchg
jg
lret
imul
and
jno
scas
filds
or
sub
jmp
jmp
fcmovu
cmp
dec
mov
in
shr
cs
jbe
in
stos
mov
jge
mov
mov
mov
sub
add
lret
jno
cmp
dec
mov
mov
dec
mov
mov
cmovl
pushl
sbb
xchg
inc
aas
mov
or
jb
push
fsubl
pop
mov
sub
mov
sbb
rol
mov
push
cmp
push
jmp
repnz
insl
negl
iret
cld
lods
xor
push
cmp
pop
fisubs
fimull
test
orb
popf
and
inc
inc
jg
enter
mov
push
sbb
gs
imul
mov
ds
fsubr
jecxz
lds
outsl
mov
aad
pop
lods
mov
out
adc
in
mov
sahf
aam
fwait
xor
dec
fiadds
mov
dec
cmc
sub
cmpsb
mov
daa
rol
daa
mov
repz
das
cli
cltd
and
cmp
cmp
mov
je
or
shrl
adc
push
fwait
insl
fistps
fucom
js
leave
mov
pop
scas
adc
mov
mov
and
jg
jns
pushf
je
mov
push
movsb
adc
cli
andb
fwait
cmp
popa
test
inc
adc
rorl
xor
hlt
frstor
jp
and
roll
adc
fstp
jns
mov
arpl
xchg
lds
fimull
mov
xchg
into
les
jae
andl
dec
sbb
sub
sarl
dec
push
addr16
jge
jns
push
in
jp
mov
sbb
rorl
insb
adc
fwait
sbb
enter
push
sti
sbb
sbb
pop
mov
or
cmp
movsl
mov
ljmp
lods
repz
xchg
cmpsl
xlat
pusha
lcall
sub
stos
mov
dec
cmpsb
cld
loope
sbb
inc
fsubs
popa
inc
ss
enter
shlb
xor
loop
pop
loop
inc
cs
sub
inc
imul
push
insb
push
lret
shlb
loop
mov
xchg
inc
adc
add
popf
sti
mov
xor
dec
add
cli
push
and
ret
aaa
fisttpl
bnd
xchg
pop
cmpsb
rol
icebp
sbb
out
add
sub
mov
inc
imul
test
daa
popf
daa
and
fisttpl
insb
xchg
xchg
bound
in
mov
leave
ret
shr
inc
mov
or
addr16
in
fst
ret
xor
mov
decl
xchg
jb
je
pop
mov
sub
pushf
popl
add
ret
cmp
jbe
jno
ss
xchg
mov
push
xor
jno
jle
test
shrb
lods
repz
xchg
loop
fst
iret
xor
stos
xchg
popf
mov
mov
or
popf
push
enter
loope
sbb
jae
decb
mov
repnz
aas
and
nop
mov
xchg
pop
push
testl
lret
sub
mov
xor
jnp
add
sub
jno
push
lock
xor
sub
lahf
pushf
push
faddl
cltd
cltd
hlt
push
add
jae
sub
mov
dec
ret
scas
add
cli
fistpl
ljmp
inc
idivb
fisttps
sbb
scas
rcrb
leave
mov
call
pop
pushf
stos
ficomps
mov
sbb
les
clc
outsl
aas
push
imul
lcall
pop
nop
or
xor
push
scas
movsl
dec
rorl
sarb
sbb
dec
sbb
push
cltd
mov
jbe
xchg
jg
xor
cmp
into
ret
popf
push
repz
push
pop
cmp
push
push
andl
movsb
sbb
pushf
xchg
fwait
jp
fstpt
in
push
mov
aas
push
in
add
xor
push
out
out
dec
aad
popf
imul
mov
mov
loop
xchg
inc
aad
lea
test
cs
xor
push
pop
stos
jp
push
sub
adc
imul
fmuls
jp
aam
sub
jbe
sbb
jae
mov
adc
xchg
test
pop
mov
es
push
add
push
cmp
cld
imul
or
adc
push
inc
mov
jo
push
test
outsb
fadd
scas
sub
cmpsl
pop
push
mov
sub
inc
push
cmp
dec
rol
sbb
loopne
add
movsb
pop
push
lahf
sti
inc
inc
push
xchg
mov
sbb
jmp
add
lcall
fwait
cld
cwtl
push
inc
addr16
je
mov
mov
cmp
and
add
xor
outsl
add
pushf
ss
add
jne
mov
into
cmp
adc
and
mov
outsl
outsl
add
cltd
mov
hlt
mov
aaa
fcom
js
mov
mov
cmpsl
adc
test
outsb
pop
pop
and
cli
outsl
fists
pop
push
inc
and
inc
test
mov
pop
dec
ljmp
jo
sbbl
mov
cmc
movsb
mov
icebp
jbe
fdiv
dec
popa
sbb
loop
int3
add
mov
test
idiv
add
sub
sbb
xor
cwtl
or
xor
add
sbb
sub
xchg
sub
jmp
mov
add
pop
sub
movups
loope
int3
stos
std
xor
stc
mov
ss
dec
jle
jmp
sbb
push
ss
shll
hlt
xor
xchg
add
pop
inc
outsb
and
movb
pushf
inc
enter
insb
jbe
mov
jo
out
mov
or
mov
lods
inc
xchg
lods
dec
mov
sahf
cld
cmpsl
jne
jg
xor
xor
mov
mov
cmpsl
mov
adcb
out
lods
sbb
lods
lret
inc
int
inc
out
cld
add
sbb
xor
roll
sbb
inc
and
inc
sub
mov
mov
leave
xchg
loopne
pop
in
es
lds
std
lcall
lds
push
sub
incb
pushf
inc
lock
movsb
mov
stos
push
cmp
mov
dec
cmpsl
popf
jae
adc
fwait
cmp
loope
jp
cmpsb
add
xchg
add
jbe
test
add
es
movsb
loop
lahf
fstl
push
cmp
loopne
dec
dec
sahf
cld
ja
inc
push
out
and
cmp
dec
mov
int
mov
mov
mov
sti
addr16
inc
mov
cs
shll
and
imul
fdivr
sbb
scas
push
shrb
and
shrb
and
pop
or
mov
add
fnsave
inc
dec
stc
add
testl
pop
xchg
dec
out
pop
popf
pop
or
shrl
mov
xchg
lods
xlat
xchg
and
loop
lea
gs
mov
and
test
pop
pop
popf
mov
xchg
sbb
test
mov
bound
dec
push
add
mov
mov
push
stc
xor
sub
js
pusha
mov
lea
ds
push
push
cmp
loope
int3
push
daa
xchg
jp
mov
fnstsw
xor
sub
jae
mov
bound
push
leave
add
push
xchg
popa
outsb
cmc
xchg
xlat
or
repnz
call
aad
das
cld
ja
cmp
mov
sbb
xchg
decb
pop
mov
cwtl
mov
int3
incb
fs
lds
mov
or
test
in
jg
xor
std
push
into
jmp
push
xor
sub
adc
sarl
jmp
ret
adc
inc
jne
test
pop
sarb
outsb
add
cmp
cmp
ffreep
imul
jge
lods
mov
cs
std
in
jg
outsl
fwait
mov
clc
dec
sbb
sbb
xchg
cmpsb
testb
jle
enter
pop
mov
int3
loop
xor
cmpsl
adc
lcall
sub
cmc
rorb
jno
dec
jecxz
dec
xchg
dec
mov
std
aad
cmp
shl
ret
xchg
std
sbb
pushl
jo
mov
push
and
mov
sbb
in
lcall
fsubl
les
movsb
scas
lods
pop
loopne
les
xor
sub
jl
stos
negl
scas
pop
aam
mov
lods
jne
sbb
add
mov
mov
jp
mov
and
stos
inc
hlt
dec
cwtl
xchg
adc
out
pop
adc
sub
paddsw
enter
in
or
fs
in
fdivr
cmp
popa
sbb
pop
in
rcrl
clc
test
xchg
in
push
test
stos
in
adc
push
sub
idivl
pop
scas
dec
xchg
xchg
xchg
movsl
cwtl
or
mov
sub
ds
iret
stos
push
inc
cmc
push
pop
out
adc
jg
std
inc
dec
and
arpl
leave
push
mov
xchg
in
rcll
cwtl
iret
ja
mov
cld
add
xlat
adc
inc
sar
leave
into
mov
lods
aad
cmp
loope
inc
stc
push
cmp
outsb
lds
inc
mov
xchg
fdivs
mov
xchg
push
les
adc
lcall
mov
sub
push
cwtl
jmp
xor
sub
pop
pop
inc
arpl
mov
xchg
mov
fnstcw
inc
scas
lods
mov
inc
sub
test
push
cmp
fwait
xchg
inc
cmp
or
aaa
iret
jno
movsb
inc
xor
push
xor
mov
imul
fstpt
add
js
fs
inc
orb
cltd
mov
add
je
jge
fdivrl
movsl
cmc
pop
pushf
stos
fisttpll
ja
fs
in
pop
shlb
test
sbb
pop
lea
pop
dec
aad
sub
mov
sub
imul
cmpsl
ds
xchg
jg
push
push
sahf
das
incb
add
jmp
pop
sbb
inc
inc
cmp
inc
push
pop
jl
dec
int3
mov
mov
jge
mov
cmp
adc
and
fstl
add
add
mov
push
lods
repnz
jns
enter
shr
adc
sub
fsubs
sbb
out
inc
out
sub
shlb
push
xor
fistl
cmpl
xchg
push
sub
test
ret
push
fstpt
ds
xor
and
leave
fildll
data16
gs
jbe
dec
out
jp
jne
cwtl
aad
sub
xchg
push
jns
imull
jno
add
add
das
aaa
pop
pop
cmp
std
xor
ss
push
enter
sarl
pop
jl
jae
mov
xchg
sbb
pop
ffreep
sub
and
out
lds
jle
push
pusha
test
dec
sbb
vfmsubadd132pd
rcrb
loop,pn
lcall
adc
in
sar
nop
insb
je
or
rclb
rcl
mov
imul
adc
xchg
faddl
xchg
ljmp
frstor
dec
and
in
in
xchg
shl
sub
mov
fwait
sbb
ljmp
push
ror
loope
lahf
stos
pop
sub
push
je
mov
stc
sub
outsb
out
les
jne
jecxz
mull
lds
test
fildl
lret
into
and
mov
and
pop
push
loop
pop
adc
pop
adc
dec
mov
iret
xchg
aaa
jo
loopne
aas
or
jae
mov
inc
aad
adc
inc
test
cmp
pusha
jp
push
sahf
bound
dec
cli
dec
fwait
popf
push
mov
mov
adc
inc
adc
outsb
sbb
pop
mov
stc
fldt
out
ds
jle
mov
sbb
es
aaa
adc
jle
sub
movsb
dec
mov
out
sub
lret
lea
fists
sub
or
setg
fdivrl
jecxz
xor
rcll
sub
pop
cmp
sbb
cli
pop
mov
insl
xchg
push
jmp
add
mov
es
add
out
ficomps
cmpsb
inc
insl
data16
shll
out
or
mov
push
or
adc
sbb
test
jecxz
push
mov
inc
test
pop
and
addr16
inc
dec
lcall
sbb
mov
aam
mov
sbb
xchg
mov
push
xor
stos
loop
in
dec
add
lds
stos
dec
pop
fwait
sbb
rolb
inc
or
mov
mov
enter
mov
cmc
mov
sub
fidivl
jle
mov
and
rcpps
mov
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
lcall
rcll
fisttps
cmpsl
iret
and
sbb
and
icebp
mov
mov
mov
in
mov
int
push
test
add
jl
fidivrl
outsl
sbb
in
jno
data16
incl
mov
and
jl
cmpsb
pop
and
bound
int3
int
mov
mov
xor
and
pop
in
sub
xor
pop
out
mov
out
push
pop
test
in
ss
or
int3
xchg
mov
inc
push
ljmp
dec
jle
push
dec
pop
sbb
sahf
insb
aas
xchg
pop
xchg
dec
int
int3
sbb
int3
or
and
sbb
jbe
mov
out
push
sbb
aaa
cmp
lds
xlat
stos
mov
add
sbb
mov
and
lcall
int3
psrad
je
hlt
push
sub
inc
xchg
jbe
cmp
cld
bound
and
dec
pushf
insb
repz
inc
mov
xchg
adc
xor
out
add
inc
adc
out
cpuid
sub
out
loope
pop
mov
je
xchg
sbb
and
xchg
pop
test
daa
test
xacquire
jo
push
shll
ljmp
outsb
ds
dec
in
hlt
test
add
mov
mov
or
jb
out
inc
push
xchg
fists
jnp
decb
push
aad
pop
popf
xlat
mov
pop
ret
adc
loop
jecxz
inc
lret
sbb
loope
insb
js
mov
pop
dec
sbb
test
leave
xlat
or
jns
es
subb
cmp
xor
mov
int
xor
enter
pop
cmpsl
repz
aas
rcrb
fucomip
pop
sub
or
mov
mov
cltd
movsl
aas
hlt
mov
jge
lcall
push
idivb
jno
das
jge
out
imul
das
cmp
lods
xchg
push
or
jecxz
inc
dec
pop
or
lea
cmc
cli
push
and
rcr
cltd
sub
sbb
repz
xlat
add
push
sbb
inc
cmpb
cmp
cltd
je
inc
fisubl
jnp
xor
push
in
mov
flds
sbb
dec
sub
aad
pop
cmp
push
xor
xchg
daa
sarl
sub
test
push
mov
dec
imul
test
push
dec
xchg
mul
mov
loope
sar
sbb
dec
sub
arpl
ret
inc
leave
shll
xor
mov
cwtl
cmpsl
mov
mov
or
jb
cmp
xchg
mov
or
xchg
or
cmpsl
push
add
out
rclb
test
push
and
mov
mov
clc
jae
in
and
ret
imul
jo
xchg
add
aam
pop
xchg
xor
mov
mov
mov
sti
and
popa
inc
sbb
mov
out
out
xor
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
adc
and
sbb
in
jecxz
insb
std
js,pt
cmp
sub
pushf
mov
push
repnz
jb
lret
mov
roll
mov
adc
dec
imul
ljmp
inc
in
push
mov
dec
push
cmp
fmuls
and
inc
arpl
fists
xor
lret
cltd
out
push
ret
fidivl
mov
std
dec
push
sbb
cmp
pop
add
and
jecxz
push
dec
cwtl
movsb
sub
push
jl
cmp
xchg
out
cmp
cmpb
std
lcall
xor
cmp
ljmp
push
testb
add
outsl
loope
pop
shrl
cwtl
aaa
call
push
xchg
popf
pop
cmpsl
pop
lret
adc
aam
in
outsl
push
or
mov
inc
jg
dec
pop
inc
andb
rorl
inc
jecxz
sub
jg
push
mov
dec
mov
mulb
and
sbb
pop
ret
push
adc
leave
adcl
scas
fstpl
xchg
jnp
inc
nop
out
cltd
dec
cmpsl
jbe
arpl
cmc
fs
int
ljmp
or
push
and
aaa
cmpsb
je
mov
pop
test
cmp
mov
or
mov
scas
call
je
aaa
shll
jbe
sub
shrb
cmc
std
lret
ja
sub
out
cmp
xor
ljmp
xor
push
lods
imul
test
jge
mov
mov
xchg
data16
sbb
pop
mov
movsl
stc
push
aaa
rcrb
adc
sub
mov
mov
cmc
jle
push
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
aas
inc
push
dec
or
add
movsb
jnp
and
addb
outsl
imul
and
dec
shll
xor
enter
xchg
mov
push
push
add
mov
or
mov
mov
jnp
ja
lock
aam
pop
mov
inc
add
sbb
outsl
xor
pop
jmp
out
dec
ds
fstpl
sub
enter
sbb
ret
daa
xor
or
mov
xchg
pop
mov
jge
pop
mov
jp
je
cld
jmp
stos
jne
jno
negl
pushf
into
jge
jo
addr16
mov
mov
cmpsl
sahf
fsubrs
js
out
mov
mov
or
fidivrs
push
xor
ja
xor
mov
mull
jmp
ja
sarl
ret
mov
and
cmp
filds
int
xchg
cmp
jge
dec
add
dec
es
rcrl
xlat
mov
pusha
jge
or
pusha
lods
andl
mov
shrb
lds
lock
sub
orl
imul
mov
rolb
mov
clc
mov
dec
iret
in
rolb
cmpb
mov
das
cltd
and
dec
and
mov
enter
insl
ret
je
xor
jnp
jno
movsb
inc
push
xchg
in
fwait
mov
je
xor
js
out
jp,pt
iret
rorb
jne
stos
and
sahf
jns
icebp
mov
outsb
dec
test
out
pop
inc
xchg
loopne
xchg
jmp
pop
inc
popa
leave
movsb
push
dec
and
cmp
jl
sub
push
sub
mov
push
adc
pop
xchg
and
clc
push
xor
ret
xchg
js
aas
pop
ret
aaa
or
mov
loope
jne
mov
adc
jnp
shll
sti
lcall
test
xchg
js
out
cmp
inc
pop
pop
cld
pop
pusha
lret
mov
imul
js
or
xchg
es
cmp
dec
aam
loope
xchg
lea
stos
bound
cmp
je
and
adc
xchg
mov
and
fsubs
aaa
js
add
shr
int3
enter
pop
lea
mov
and
jge
xor
mov
adc
rolb
test
clc
mov
in
fiaddl
mov
lds
mov
testb
loop
mov
test
push
cmpsl
shlb
jne
sub
pop
das
loope
push
xor
pop
dec
sbb
lods
adc
xchg
add
xor
or
pop
pop
adc
add
pop
loope
pop
jle
adc
jb
mov
mov
push
imul
inc
jecxz
out
push
mov
popa
push
pop
cs
cmp
add
xor
les
call
sbbb
xchg
push
jge
outsl
movsb
cwtl
cmp
pusha
or
push
sbb
aas
dec
scas
out
and
mov
pushf
jmp
jle
mov
ds
push
rolb
sub
push
mov
mov
dec
fwait
cli
adc
inc
fldcw
xchg
mov
dec
jo
push
addr16
fbstp
lods
push
sbb
mov
out
push
or
lea
push
cmp
dec
adc
lods
and
xlat
repz
mov
cmc
adc
jae
loope
lcall
or
rolb
ret
fistpl
aam
aas
stos
cmp
adc
add
aam
ret
inc
mov
negb
mov
jns
repnz
or
in
pop
jo
jb
sbb
pop
pop
xor
mov
mov
cmc
out
rcr
pop
daa
mov
and
adc
out
test
insb
or
int3
outsl
fstl
add
popa
je
rorl
bound
add
daa
push
mov
lods
jbe
int3
push
scas
lcall
icebp
loop
fs
and
outsb
enter
dec
sub
xor
cwtl
call
enter
stos
dec
std
mov
add
pop
jno
dec
loop
jp
adc
ja
pop
mov
push
in
push
sbb
add
test
push
lret
je
stos
rclb
xchg
ret
mov
jae
xchg
fwait
rcr
pop
lock
sub
outsl
inc
aas
sbbl
mov
cld
sbb
push
xlat
imul
cmp
and
push
jg
mov
sub
lret
idivl
mov
and
mov
cli
sub
and
test
fcomps
dec
lret
mov
push
inc
ds
ret
jmp
adc
push
les
xchg
jns
icebp
inc
sub
leave
xor
js
add
adc
jnp
jecxz
sub
pop
ret
mov
stc
sbb
pop
xor
in
imul
add
in
mov
mov
cs
sbb
mov
push
lret
insb
sbb
fdivrs
mov
not
test
pop
cmpsb
lds
mov
test
loopne
stos
sahf
pop
ret
push
sti
pop
and
enter
shrb
fs
test
xor
je
repz
mov
ss
dec
mov
out
enter
jmp
mov
jmp
mov
and
xchg
test
cli
sbbb
add
movsb
repz
mov
mov
and
mov
jae
mov
aad
pop
adc
mov
lods
lea
pop
xchg
neg
xchg
push
fists
dec
dec
popf
movsl
push
mov
fbstp
xor
push
scas
popa
mov
bound
sets
fcompl
test
clc
jbe
xchg
fisubrs
add
cmp
jp
dec
and
clc
cli
dec
pop
adc
popf
fmul
movsb
dec
lock
mov
adc
mov
hlt
int
daa
ja
call
leave
lods
pusha
addb
inc
mov
das
sbb
das
add
stos
shll
sub
sub
movsl
addr16
sub
imul
mov
jmp
mov
and
fldcw
push
mov
and
or
iret
test
push
loop
xlat
xchg
cmc
out
sub
sub
cmp
cmp
or
ja
call
leave
adc
pop
daa
xchg
rcll
bound
fwait
dec
stos
xor
xchg
push
sbb
jl
add
fcoml
das
outsl
cmp
jbe
gs
fdivr
pop
aad
lea
popw
rclb
xchg
lods
into
sub
dec
mov
add
insb
pop
scas
jae
ret
dec
sub
subl
or
arpl
cmp
aaa
aam
pop
xor
push
ror
cmp
loope
aam
int
mov
push
movl
pop
or
sub
xchg
and
xchg
xchg
icebp
repnz
add
pop
cmp
aaa
loopne
sub
add
ret
xchg
pop
jmp
imul
in
outsb
enter
pushf
sbb
stc
outsl
mov
mov
mov
jmp
mov
adc
cltd
jp
mov
inc
std
ret
aam
dec
leave
jp
pop
mul
sbb
push
mov
cmp
cmc
push
dec
ret
cmp
mov
push
add
divb
mov
in
loopne
cld
dec
and
lcall
sub
or
pop
int3
pop
sub
xchg
cmp
popl
mov
sbb
pop
mov
mov
fiadds
pop
add
js
lds
sahf
pop
fidivrl
fcomps
xor
repz
pop
and
push
push
or
repnz
add
push
nop
lahf
push
mov
push
xchg
je
pop
jge
pop
imul
stc
repnz
lret
repnz
xchg
pop
repnz
stos
loopew
cltd
mov
adc
or
add
aad
stc
and
add
sbb
insb
repnz
mov
jmp
xchg
mov
js
out
hlt
push
sub
ret
int3
rcr
imul
imul
dec
fnsave
cmp
out
ja
enter
jne
or
xchg
cmpl
aam
push
cmpsl
fisttpl
mov
cmp
leave
adc
sbb
pop
and
enter
mov
iret
int3
popa
insb
pop
mov
pop
jns
and
popf
mov
inc
imul
mov
sub
xchg
sbb
xchg
jl
mov
cwtl
jecxz
inc
cmpsb
inc
mov
iret
rcll
imul
mov
sbb
jns
cli
jne
sub
and
cmc
and
je
xchg
and
sbb
sub
xchg
xor
inc
adc
sbb
ficomps
fdivrl
cmp
dec
pushf
add
stos
push
mov
mov
cmpsb
testb
lock
out
inc
cmc
ljmp
sarl
dec
lret
int3
xchg
pop
mov
popf
and
xchg
mov
mov
adc
cltd
mov
int3
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
outsl
dec
jmp
je
and
push
mov
xchg
movsb
pushf
ja
jle
mov
and
sub
and
aad
ret
xlat
enter
xchg
lods
push
mov
adc
scas
pop
push
pusha
mov
jo
test
sti
dec
ffree
rorb
or
mov
ret
mov
sub
and
pop
clc
add
gs
cmpsl
cmp
xchg
sti
enter
loop
push
in
xor
ja
sahf
stc
pop
xor
inc
stos
sbb
mov
in
cld
les
or
xchg
cmp
dec
sbb
cmp
adc
insl
insl
cmpsb
push
mov
pop
push
pop
imul
pop
stos
je
ret
fbstp
sub
dec
adc
sbb
xchg
mov
leave
mov
and
add
lods
loopne
pop
int
cmp
addr16
sub
shll
or
pop
or
mov
mov
loop
enter
and
mov
dec
mov
push
mov
jle
bound
push
push
mov
jne
cmp
jnp
clc
cmp
mov
xchg
mov
xor
bound
dec
test
orl
or
stos
mov
fimuls
push
enter
into
mov
data16
dec
mov
out
push
mov
sti
loop
and
fists
jnp
or
mov
fldenv
pop
xor
aaa
xchg
xor
aaa
xor
jecxz
xchg
inc
fistps
jmp
mov
in
dec
mov
inc
push
mov
dec
pop
arpl
dec
bound
movsb
push
xor
add
sbb
sbb
pop
mov
out
xchg
mov
mov
aaa
movsl
sbb
or
je
jecxz
ja
fildll
enter
iret
mov
sub
mov
xor
pop
jno
call
xor
out
jecxz
ljmp
jb
stc
popf
adc
fs
and
sti
sub
mov
das
xor
push
xor
in
pop
inc
loopne
mov
mov
adcb
mov
adc
cld
adc
push
xor
leave
jne
test
jnp
inc
iret
and
daa
.byte
.byte
test
.byte
