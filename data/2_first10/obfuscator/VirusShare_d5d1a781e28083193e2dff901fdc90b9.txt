mov
data16
jmp
into
adc
sub
cs
jno
loop
add
inc
ret
rclb
cld
lcall
and
imul
dec
shlb
dec
mov
and
into
clc
mov
dec
sbb
cmc
cmc
sub
push
xor
inc
sbb
ss
mov
repnz
xor
test
or
push
mov
mov
dec
or
fdivs
dec
jg
fdivr
adc
movsb
mov
mov
dec
shll
push
adc
push
adc
sbb
lea
mov
daa
sti
adc
xchg
push
jmp
cmp
dec
aas
out
push
ficomps
mov
cmp
xchg
ljmp
sbb
cmc
pop
aaa
and
daa
in
mov
mov
outsl
shl
mov
jg
cmp
gs
addr16
lcall
sub
jnp
sti
hlt
jle
lea
add
sub
in
sub
outsb
ja
arpl
dec
hlt
pusha
addr16
push
ja
repnz
imul
ficoms
divb
jae
shrl
lea
test
ja
bt
jmp
lea
jb
pusha
cmp
pusha
movb
lea
jae
pusha
dec
mov
setbe
adc
and
mov
pop
rcl
shl
or
mov
stc
cmc
stc
xor
clc
push
cmp
repnz
lea
jg
pusha
pusha
pushf
lea
jne
cmp
bswap
bts
lea
mov
pusha
pushf
shl
mov
sub
bswap
pusha
lea
sub
stc
pushf
pushl
sub
cmp
cmp
pushl
popl
cmc
mov
cmp
pushl
jmp
pusha
pushf
movl
pusha
push
call
outsb
inc
cltd
testl
push
loope
xchg
shlb
xchg
mov
push
fcompl
and
adc
ret
cmpsl
inc
insl
clc
mov
adc
pop
add
movsb
flds
aas
adcb
inc
adc
aad
xor
and
stc
insl
rorl
xchg
xchg
dec
into
fcmove
loopne
push
test
mov
and
dec
adcl
xlat
ss
insb
xchg
sbb
clc
setle
sti
sub
jno
cmp
mov
mov
adc
mov
mov
loopne
daa
pop
lods
sub
lret
mov
fstl
cmpsl
push
sbb
fidivrs
inc
pop
jl
cli
sub
sahf
test
sub
outsl
mov
lods
movsl
dec
pop
stos
adc
push
not
stc
jmp
jne
movzbw
movsbw
movb
pusha
mov
pop
lea
pusha
jmp
cld
xchg
pop
stos
inc
stc
in
fsubrl
cmp
xor
rol
outsb
adc
pslld
cwtl
fwait
lret
push
in
aas
les
lret
push
pop
xchg
fwait
in
cmp
adc
add
cli
xor
incb
pop
inc
inc
inc
lds
mov
fsub
jge
cmp
jg
gs
rorb
xor
push
and
push
xchg
jae
loope
pop
xor
push
push
or
loopne
es
dec
pop
stos
mull
stos
push
call
push
jno
movsl
dec
enter
sub
cli
add
jo
rdmsr
pop
sbb
out
mov
or
insb
popl
and
mov
push
mov
dec
jb
mov
jle
into
xchg
add
insb
inc
dec
dec
ss
sub
mov
mov
pop
mov
cmc
push
sbbb
insb
xor
in
mov
or
inc
cs
shl
dec
pop
lods
leave
pop
imul
cmc
add
pushf
mov
push
pusha
lea
jmp
in
add
lcall
cmpl
push
sub
inc
push
hlt
out
ja
pop
lret
jne
mov
mov
xchg
mov
jg
test
lods
pushf
imul
stos
mov
call
sub
ret
mov
ja
gs
out
mov
sbb
lods
negb
lea
jne
jmp
inc
fisttpll
push
xchg
int
cmp
mov
mov
loope
cmp
and
mov
cmp
mov
push
notl
mov
xchg
sbb
xlat
les
movsb
fs
out
andps
sbbl
or
fisttps
jp
lods
xchg
jns
mov
mov
dec
jl
jb
jb
pop
pop
add
es
jg
out
sub
xor
and
mov
dec
pop
lods
lret
add
bt
push
mov
push
movb
test
movw
call
lahf
loop
push
pop
cmpsb
sbb
adc
hlt
dec
cli
mov
adc
jp
cmp
mov
jns
int
mov
jo
pop
lea
cmp
stos
adc
xor
outsb
xor
outsb
cmp
xlat
mov
adc
jp
cmp
xchg
lods
xor
popf
call
stc
call
dec
loopne
mov
shll
or
test
cs
andl
movsb
ds
cli
adc
scas
sbb
dec
aam
mov
mov
call
cmp
aaa
cmp
cmp
iret
aad
in
sarl
add
cwtl
xchg
mov
mov
mov
push
loopne
andl
in
adc
int3
xor
call
cmp
cmpb
pusha
mov
pushf
lea
jne
bsf
seto
lahf
stc
sub
bts
lea
mov
sub
pushf
add
rcl
sar
mov
test
stc
cmc
pushf
test
jmp
int3
popf
js
push
pusha
movl
pushf
movl
pusha
lea
jmp
lea
je
sets
pushf
rcl
bts
add
shl
jmp
adc
pusha
jmp
sbb
inc
sub
push
aam
inc
insl
and
jle
fdiv
cli
aad
scas
cli
out
stos
dec
test
sarb
mov
out
popa
jg
mov
and
movsb
pop
arpl
cld
adc
pop
loope
xchg
or
or
jnp
jge
or
jge
js
ljmp
inc
aam
sarb
aaa
neg
dec
pop
scas
int
add
cmp
call
call
int3
imul
mov
dec
or
es
add
iret
dec
or
aaa
sbb
cmc
int3
imul
lcall
iret
dec
or
das
ucomiss
or
add
sbb
int3
cmc
in
dec
or
add
data16
int3
mull
add
int3
cmc
mov
dec
or
add
int3
daa
or
inc
pop
mov
int3
shll
xchg
adc
iret
dec
or
add
int3
out
iret
dec
or
and
xchg
les
int3
out
iret
dec
or
and
shll
cltd
mov
add
dec
lock
int3
add
repz
fcmovne
dec
xchg
iret
dec
or
add
int3
push
mov
or
scas
outsb
mov
dec
or
add
or
xchg
int3
pop
add
dec
or
inc
out
in
mov
int3
aad
into
dec
or
push
ret
and
dec
or
sbb
sbb
int
int
or
and
int3
sti
jno
dec
or
aam
les
int3
insl
ljmp
cmp
int
or
and
adc
dec
or
add
int3
mov
into
dec
or
or
sbb
or
lahf
ljmp
popa
adc
int3
iret
jp
dec
or
sbb
rolb
adc
dec
or
pop
mov
lcall
or
add
int3
jge
iret
dec
or
add
int3
imul
dec
or
push
mov
fst
dec
or
add
jne
aad
or
shrd
std
iret
dec
or
sbb
mov
mov
dec
or
add
int3
lods
jg
dec
or
lock
into
dec
or
push
int
lds
dec
ror
dec
or
add
arpl
int3
std
fcmovbe
dec
or
add
add
pop
int3
dec
or
sbb
nop
movl
jmp
add
or
push
fisubrl
push
xor
mov
jno
mov
jne
mov
pop
and
xlat
cld
cmp
movb
mov
add
rorb
cli
jmp
ret
and
cmp
jno
push
aam
aaa
mov
mov
arpl
out
adc
out
push
das
jae
ds
imul
imul
cld
cmp
mov
dec
xor
pushf
mov
xchg
test
push
pop
or
adc
ret
bnd
cmpsl
jle
add
dec
pop
mov
lea
ja
push
imul
clc
add
mov
pusha
push
lea
jmp
lcall
divb
inc
lock
xor
insl
cmp
dec
adc
loope
inc
push
cmp
rolb
test
sub
pushw
jle
adc
pop
insb
xchg
addr16
aaa
mov
xor
mov
repnz
lret
cltd
lret
in
ja
lret
gs
dec
dec
stos
jae
into
adc
out
adc
cmpsl
faddl
hlt
cvtpi2ps
add
adc
dec
frstor
in
loop
movsl
das
mov
xchg
adc
mov
push
mov
dec
mov
xchg
jg
call
jg
mov
subb
out
and
and
sarl
mov
jae
dec
jnp
inc
dec
and
jns
jecxz
ret
mov
je
mov
sbb
push
jg
mov
cmp
mov
sub
daa
mov
movsb
jmp
sub
and
aad
outsb
jno
dec
incb
jecxz
loope
cli
in
ljmp
and
adc
dec
test
pop
jp
enter
pop
mov
lret
ljmp
decl
mov
add
xchg
int
push
add
push
lock
lret
test
xchg
sub
mov
aaa
pushf
enter
push
outsb
hlt
imul
or
dec
das
jmp
xchg
jno
lret
arpl
cmp
adc
xor
xchg
or
aad
mov
xchg
dec
and
outsb
push
fwait
addr16
lcall
loopne
add
or
ror
fsubr
mov
mov
stos
jns
fistps
pushf
xor
jnp
pop
mov
je
add
fildll
mov
or
add
jno
popf
xor
test
movsl
fadd
xchg
outsl
mov
sub
popa
inc
sti
sti
cmpsl
adcb
clc
xor
gs
mov
fstps
xor
push
in
mov
sbb
iret
fisttps
jle
fcomp
popa
mov
mov
adc
in
imul
mov
dec
pop
movsl
filds
shr
jl
in
mov
sbb
shll
fistps
iret
int
clc
sti
mov
jns
cmp
mov
add
xor
xor
sbb
mov
mov
xor
cmp
mov
in
repnz
xchg
pop
dec
mov
xchg
in
push
cmpsl
pop
ret
or
pop
subb
mov
ret
icebp
mov
repnz
aam
sbb
call
frstor
xchg
xchg
daa
in
call
xchg
xor
sbb
int3
out
mov
sti
popf
mov
and
jmp
cwtl
out
movsb
cmp
fsubrp
cmp
fucomp
icebp
push
scas
mov
testb
push
mov
push
gs
and
pop
es
int
jns
repz
shl
jecxz
jmp
jmp
or
pop
mov
js
or
jo
push
mov
pop
sbb
push
xorl
jge
sti
and
xor
or
adc
out
and
xor
nop
fnsave
stos
rclb
in
sub
out
xor
shl
scas
mov
in
fisttpll
out
jecxz
enter
mov
test
add
imul
push
test
rcrl
jl
push
test
out
in
je
decl
in
pop
test
shrb
inc
test
and
in
jg
dec
xchg
in
jnp
mov
dec
movsl
test
mov
lret
add
loope
cld
jg
mov
imul
add
enter
fs
jmp
movsb
aad
aad
xor
mov
mov
mov
loope
jo
clc
mov
mov
popf
aam
scas
mov
imul
int3
loop
inc
mov
out
rol
not
sar
into
imul
inc
sub
movsl
shl
lret
imul
inc
sub
rcl
repnz
in
aam
jmp
int
out
leave
imul
inc
sub
call
call
cmpsl
fsubs
lock
sub
xlat
shr
cld
les
cmpsl
shl
inc
sub
cmc
sar
cld
cld
imul
add
mov
jmp
in
stc
rcrl
adc
jbe
repz
inc
sbb
jbe
divl
xor
loope
insl
xor
adc
jae
lcall
sar
test
fs
and
js
mov
cld
out
xchg
lds
clc
lock
sbb
in
xlat
cwtl
outsl
sbb
jl
mov
dec
repnz
sbb
xchg
pop
icebp
add
je
jns
inc
mov
jp
mov
clc
aam
je
fsubrl
std
cmpsl
sub
mov
cli
leave
in
js
push
cld
in
inc
shlb
push
in
mov
popf
enter
in
lock
std
aaa
pop
jecxz
in
and
popf
and
rcrb
mov
outsb
loope
and
popf
lods
and
popf
addb
mov
and
loope
or
icebp
sti
jmp
cmp
mov
sti
loope
fs
cmp
std
mov
fs
enter
bound
fs
popf
jo
repnz
jge
loope
mov
das
adc
loope
inc
in
and
popa
sub
call
mov
mov
jmp
dec
out
shrl
out
fdivs
outsb
mov
fdivrl
pushf
mov
test
xchg
fstl
push
pop
sbb
fbstp
or
out
std
pop
out
pop
daa
imul
fstpl
aad
push
mov
out
pop
pop
outsl
jge
and
inc
in
pop
xor
mov
or
rclb
in
outsl
out
lods
push
sub
and
ds
bound
jecxz
sbb
test
mov
sub
mov
out
and
inc
push
loope
loope
cmp
jle
addr16
add
std
and
in
and
jl
xor
dec
shll
popf
sbb
cli
imul
sub
insl
mov
scas
mov
xor
stos
into
cmp
xor
fnstsw
cmp
adc
stos
ljmp
sbb
arpl
popa
fldl
adcl
mov
int3
dec
mov
dec
xchg
lock
or
outsl
sub
push
mov
repz
clc
js
jge
mov
xlat
arpl
imul
in
fisttpll
in
jo
shl
sub
stos
out
in
jmp
daa
pop
cmp
rorb
mov
rcl
aaa
sub
enter
repnz
sub
ret
inc
enter
and
jmp
loope
repz
int
popf
loop
outsl
clc
sub
fs
ret
sbb
clc
rcl
sub
es
movsl
xchg
lock
out
xchg
sub
jecxz
out
shrb
sti
and
aam
jns
out
fucomip
ret
and
int
mov
gs
movsl
fldenv
imul
jle
bound
popf
loope
push
lret
call
xchg
jecxz
je
in
sub
test
pop
ljmp
mov
add
push
movsb
inc
stc
mov
scas
les
loopne
fnsave
cmpb
in
and
inc
divb
mov
testb
mov
rorb
clc
xor
and
fs
popf
rep
adc
and
cmp
jno
in
imul
xor
stos
out
cmp
call
insl
in
or
cmpb
pop
adc
push
mov
inc
cmc
and
sub
enter
jecxz
popf
in
cmpsb
adc
lock
out
movsl
out
dec
loope
cli
ret
in
shl
adc
sti
je
loop
out
iret
hlt
rcll
addr16
daa
cmpsl
enter
mov
cmpsl
shlb
sti
ljmp
mov
pop
jl
jle
dec
ret
mov
hlt
repnz
dec
out
loop
lret
divl
rorl
insb
jmp
dec
out
push
out
add
out
es
stc
gs
mov
xlat
repz
pop
in
and
fcmovnu
sub
leave
popa
gs
mov
and
iret
enter
pop
xor
roll
pusha
shlb
es
mov
add
or
xchg
and
shll
loope
dec
out
shlb
and
cli
hlt
xor
lock
push
jecxz
sub
push
cld
loope
mov
pop
repnz
sbb
inc
lret
sbb
repnz
enter
mov
data16
lods
and
mov
jl
in
repnz
gs
in
loope
jmp
jb
test
jmp
hlt
mov
repz
mov
push
cmp
repnz
push
lock
clc
and
stc
out
in
inc
hlt
cld
fldl
enter
movb
mov
push
iret
fsubrl
icebp
pop
mov
call
cli
sbb
sbb
cmp
xor
es
hlt
loop
sbb
push
cs
jecxz
cltd
gs
ret
sbb
mov
push
sahf
hlt
pop
xchg
andb
mov
rorb
push
sbb
pop
movsb
or
sbb
nop
sub
fwait
ret
std
push
cmp
push
in
add
js
add
mov
cli
jg
loopne
jle
out
scas
out
and
scas
xor
jae
fisttpl
jecxz
jns
fs
dec
push
movsl
mov
int
fisubrs
xchg
out
imul
pop
mov
sbb
push
adc
sti
mov
sub
loopne
repz
cld
cmp
cmpsl
xchg
ret
push
popa
push
push
test
loop
jecxz
and
aad
jg
sub
fldenv
mov
scas
call
sub
push
out
mov
gs
loope
push
add
dec
ror
sbb
mov
cmp
and
notb
imul
mov
add
call
cli
jl
out
xchg
mov
mov
jecxz
dec
stos
push
cli
stc
push
out
fcmovu
out
mov
loop
add
popf
cmp
imul
xor
fidivrs
mov
push
xchg
ror
or
shlb
movsl
call
cmpsl
int3
mov
clc
sti
jns
mov
xor
inc
out
stos
std
call
xchg
in
loope
in
iret
sub
clc
cmp
sti
test
stc
and
xor
adc
ds
loopne
lret
insl
repnz
sub
sti
ljmp
add
movsl
dec
pop
add
hlt
lds
lock
bound
jb
jmp
and
fildll
loop
idiv
lods
mov
outsl
cmpsb
dec
hlt
and
inc
icebp
out
out
lods
aam
lcall
or
mov
icebp
cld
clc
sti
testb
and
mov
lea
lods
cmp
cmc
lock
mov
mov
lock
insb
mov
in
in
iret
test
push
add
lods
push
icebp
movsb
repz
negl
cltd
inc
std
out
es
cmp
test
mov
mov
mov
in
repnz
lock
add
daa
jno
mov
and
bnd
fcmovu
sar
add
and
xor
mov
xchg
int3
bound
insl
lods
jo
scas
jmp
aam
jne
mov
ret
lcall
sub
mov
test
cld
fldenv
leave
aam
scas
repnz
push
dec
loop
stos
fnstcw
sub
repnz
loope
out
lods
inc
imul
out
idivb
shl
add
add
imul
arpl
ret
inc
cli
aad
mov
lods
mov
in
movsl
icebp
cmpsl
mov
jl
scas
mov
sub
add
cmp
out
jp
cs
jg
xchg
mov
dec
outsb
mov
cmp
sub
bound
test
mov
xchg
gs
lods
cmp
sub
imul
repnz
test
jne
push
repnz
sub
jl
sub
inc
pop
rorl
ja
insl
lret
lock
repz
in
add
cld
mov
ja
xlat
popf
clc
cmp
movsb
movsl
call
mov
repnz
cmp
mov
mov
movsl
hlt
rolb
int3
sarb
jns
cmp
call
jmp
repnz
out
insb
lret
cmp
je
pushl
roll
fdivrl
out
movsl
ret
mov
cmpsb
adc
fnsave
cld
loop
ljmp
in
ljmp
aaa
out
jne
ljmp
and
fsub
scas
dec
out
fs
xchg
sub
bound
push
in
xor
pop
in
out
mov
jbe
jge
loope
in
inc
out
jmp
push
add
into
jbe
out
jae
loope
push
or
pusha
mov
divl
mulb
stc
xlat
cli
cld
mov
in
rorb
cmp
and
cld
test
icebp
pushf
subl
js
fnstsw
inc
scas
add
lea
fldl
pop
inc
js
bound
mov
fsubrs
lcall
mov
xlat
jecxz
popf
rcrl
inc
shl
mov
push
add
cmpsb
push
jns
sti
mov
js
push
call
test
jle
jmp
leave
in
cmp
arpl
hlt
and
nop
in
xorb
fs
icebp
call
and
sti
dec
mov
mov
out
jno
dec
in
sti
and
in
pusha
test
add
fisttps
pusha
jecxz
in
loopne
pcmpgtw
out
jl
cmpsl
add
popa
test
add
js
enter
inc
inc
push
and
mov
icebp
mov
stc
roll
gs
mov
pusha
pop
xchg
je
scas
ds
popf
stos
cmp
push
sbb
pushl
icebp
sti
jno
in
inc
mov
cmpsb
int
push
rclb
loop
xlat
xor
rclb
jno
sbb
aam
sti
imul
in
imul
mov
in
dec
icebp
jns
xor
js
sbb
and
fiaddl
jbe
fwait
test
repnz
sti
sbb
inc
js
ss
cld
movsl
lea
and
sti
push
js
test
lock
cmp
sub
sbb
lds
popl
fdivrl
add
mov
cli
jecxz
add
ret
imul
xor
inc
popa
ficomps
mov
mov
sub
dec
ret
xor
jns
sbb
adcb
out
sub
jno
mov
fldt
and
lock
int3
loop
loope
jle
and
mov
mov
push
aad
sbb
cmp
push
hlt
loopne
push
xchg
roll
loop
sub
fiadds
sti
loopne
mov
add
shrl
mov
adc
jmp
scas
jecxz
cld
gs
jmp
int
cld
aam
shl
int3
in
std
fiadds
cmc
cld
icebp
imul
inc
bound
leave
hlt
loope
enter
mov
test
arpl
in
mov
mov
inc
test
fcomps
mov
jnp
mov
mov
lock
popa
add
nop
or
and
pop
popf
std
iret
inc
repnz
cmp
std
enter
adc
repz
iret
jmp
jae
push
pop
xchg
xchg
ret
mov
inc
clc
cld
es
add
cmc
subl
mov
mov
dec
out
fsubrs
xchg
cmp
push
addb
mov
dec
ljmp
roll
mov
inc
out
out
xor
pop
std
sub
cmp
add
pop
push
and
xchg
add
cli
aam
fistl
jmp
in
stos
call
xchg
mov
mov
lret
popf
lea
jge
in
rcl
add
loop
mov
mov
test
insl
add
mov
cld
jae
in
add
mov
je
xor
loope
pop
sub
in
jno
lret
outsb
and
call
out
mov
jge
sar
in
mov
test
dec
sub
filds
cmpsb
not
mov
stos
mov
stc
jb
insb
xor
sbb
dec
das
mov
add
fistl
jg
jae
aam
mov
adc
loop
mov
sbbl
mov
dec
cmp
ljmp
fcmovnu
xchg
jno
cmp
loop
data16
xor
fnstcw
add
jae
push
and
dec
jo
sbb
in
mov
mov
push
or
clc
in
or
push
imul
inc
inc
fcmovbe
fs
andl
iret
imul
int
loop
popa
ficoml
subb
in
fistps
add
test
iret
sahf
xor
std
push
sbb
cli
jae
data16
lods
fsubp
mov
insb
popf
xchg
in
inc
out
jl
sarb
add
mov
scas
hlt
popf
repz
iret
sahf
movsl
std
fsubp
mov
ret
inc
or
mov
pop
mov
js
sti
sub
sub
mov
push
pop
aas
add
scas
lock
les
jb
xor
in
jae
testb
das
and
push
mov
imul
xchg
int
fldl
add
pop
and
daa
pusha
pop
out
imul
jno
sbb
mov
mov
jnp
jb
cli
pop
xchg
mov
insl
ja
mov
out
rcll
jge
or
inc
lret
adc
iret
sahf
fsubr
mov
cmpl
lds
and
es
mov
cs
pushf
jo
fcoms
stos
shrl
addr16
leave
dec
sbb
shrb
movsb
cltd
mov
mov
mov
in
ljmp
ret
jecxz
daa
mov
and
aad
lock
jecxz
gs
push
mov
enter
mov
inc
je
jb
aas
divb
pop
into
scas
cmp
lods
int
jae
loopne
cmpb
mov
fs
mov
jo
je
ja
sti
repnz
cmpsl
std
mov
gs
hlt
push
stos
jl
jmp
fildl
mov
shlb
cmpsl
jmp
jo
jae
imul
sti
repz
ret
gs
hlt
dec
into
adc
pop
gs
scas
in
xrelease
mov
cli
repz
inc
gs
mov
outsl
fs
mov
repz
iret
in
hlt
arpl
in
popa
push
out
repz
pop
pop
imul
ss
icebp
arpl
das
stc
add
lcall
sarl
jmp
mov
not
sub
sar
shrb
xor
inc
xor
sub
jo
and
out
enter
add
data16
jo
jmp
sub
or
imul
jb
ss
mov
xor
jl
int3
into
cmp
leave
gs
sarb
mov
out
jns
ficomps
push
xor
cmp
icebp
mov
std
mov
mov
mov
loop
mov
pop
mov
inc
jmp
insl
pop
pop
out
jns
mov
lret
jno
mov
out
loop
int3
repnz
push
scas
cli
fwait
cmp
mov
shll
sub
push
aam
jo
ja
jb
push
repz
arpl
or
rcl
mov
mov
mov
mov
mov
stc
nop
nop
gs
xor
movsl
fnsave
inc
jno
jnp
fdivs
mull
bound
jmp
lock
fstpl
ret
into
test
push
mov
ret
imul
xor
out
xlat
gs
fs
es
dec
movsb
cmpsl
shlb
call
aad
sub
sti
adcb
js
push
lock
mov
or
xchg
mov
mov
sbb
add
popa
pusha
popf
clc
hlt
fs
aam
jb
pop
inc
jbe
call
addr16
xor
sub
lods
mov
adc
loop
dec
out
fldl
jns
mov
out
in
jmp
scas
jecxz
insl
mov
inc
xlat
cld
aad
mov
ret
jl
xchg
mov
lahf
pushf
jnp
push
xor
js
cli
xor
ret
push
jne
jmp
arpl
testl
inc
leave
jb
pusha
push
gs
inc
stos
mov
jg
out
addr16
loopne
inc
lock
xchg
push
push
in
repz
rorb
sahf
repz
pop
push
stc
mov
xchg
ds
sbb
loope
into
in
daa
out
repnz
daa
lret
fildl
push
flds
pop
sbb
outsl
in
mov
mov
aam
sbb
push
inc
jg
jne
repnz
lods
add
cmpb
daa
jecxz
imul
ljmp
lcall
loope
arpl
out
mov
or
adc
pushf
mov
jo
sbb
pop
stc
dec
pop
dec
sbb
outsb
xchg
xlat
aas
cmpb
jno,pn
aaa
sbbb
cmpsb
lds
add
inc
cmp
in
addr16
adc
xor
xlat
lret
lret
test
jp
lahf
sbb
inc
pop
xor
data16
xchg
mov
loope
out
dec
sbb
fiaddl
jne
lea
lods
mov
xchg
cmp
call
jmp
dec
pop
dec
inc
rcrb
pushf
lea
ja
pusha
lea
jb
call
fcoml
int3
addr16
pop
push
test
push
mov
clc
cmp
cmp
arpl
cld
pop
sub
aas
jbe
outsb
sub
mov
pop
sub
adc
hlt
jg
outsl
loop
and
add
jns
pop
dec
lcall
cmp
test
test
cmp
push
shl
mov
test
cmp
pusha
sub
pusha
mov
rep
movzbl
mov
mov
pushf
push
lea
jmp
sub
bt
stc
jmp
shl
sub
or
sub
add
cmc
btc
and
mov
stc
mov
pusha
movw
repnz
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
sbb
les
les
pushf
cltd
push
mov
les
and
sbb
mov
sbb
and
mov
lahf
and
push
lahf
sbb
mov
les
aam
cmp
add
add
fs
ja
call
lahf
aaa
and
sbb
jecxz
popa
and
dec
test
repz
add
push
add
sbb
into
jmp
ret
mov
imul
pop
mov
jge
sarl
jmp
test
inc
inc
imul
jns
fs
loope
xlat
daa
xor
sbb
add
out
mov
fsts
and
jb
nop
movlhps
les
adc
dec
pop
dec
dec
xlat
loop
fs
sub
push
push
lahf
ret
ret
mov
pop
cmp
mov
pop
mov
call
inc
fs
jns
jg
ss
or
data16
push
xlat
test
data16
unpckhps
mov
aad
mov
push
scas
fsubp
cmovb
xchg
incb
dec
rcrb
rorb
lret
mov
sbb
push
aas
lret
sub
icebp
aas
dec
xor
rcrl
sub
mov
subb
notl
cmp
and
xchg
ss
lods
push
inc
cmp
jp
lret
jl
pop
and
sbb
xchg
jae
shll
dec
inc
add
push
mov
mov
dec
stc
in
and
adc
xor
lds
dec
pop
dec
fisttps
adcb
xchg
orl
xlat
fimuls
add
dec
loopne
and
push
mov
dec
pushf
iret
loop
pusha
jnp
mov
xchg
int3
jg
frstor
or
insl
xor
mov
int
hlt
clc
jmp
mov
sbb
cwtl
cmpsb
daa
add
sbb
mov
lahf
sbb
inc
insb
pop
mov
sub
jmp
push
dec
xchg
mov
xchg
mov
jae
out
or
or
loope
fwait
add
push
pop
mov
enter
imul
adc
hlt
ret
mov
pop
jno
test
stos
mov
cmp
incl
mov
sub
dec
pop
dec
sbb
test
or
sub
add
sub
push
arpl
loopne
out
jmp
sbb
pushf
push
jecxz
movsb
out
and
daa
fsubrp
xor
mov
ret
movsb
jbe
sub
out
lret
mov
or
lahf
test
mov
mov
sbb
fsubrl
out
lcall
mov
cmp
push
sarb
bound
adc
or
mov
adc
addl
repnz
push
jl
adc
push
repz
pop
sbb
test
cmpsb
inc
sarb
mov
add
or
jo
xor
dec
mov
or
dec
xor
sahf
mov
inc
shll
lcall
pop
pop
imul
jle
addr16
fs
jae
pop
and
inc
pop
addr16
push
test
push
decb
push
cmp
push
mov
mov
jne
out
dec
lcall
bswap
lea
adc
add
mov
in
loop
hlt
mov
and
ds
jp
jmp
jmp
stc
push
mov
mov
push
aam
mov
aaa
sarb
inc
mov
out
cs
pop
dec
out
cmp
push
in
enter
sub
int
cmpsb
test
cwtl
stos
ss
mov
mov
int
xchg
sarb
xlat
and
xor
adc
jmp
rcrb
cld
pop
xchg
ljmp
xchg
xchg
cmp
clc
mov
mov
pop
inc
addr16
push
sub
push
daa
lods
mov
scas
push
aas
inc
jne
imul
xlat
xchg
and
les
lret
ja
sbb
jne
jmp
test
pop
pushf
stc
cltd
aam
push
adcb
lret
lret
pusha
mov
pop
mov
fiadds
mov
mov
push
bnd
push
and
lods
or
je
shll
cmpsb
iret
jb
pusha
pop
out
jbe
fbstp
mov
add
lret
or
sub
jp
rorb
xchg
dec
pop
inc
sub
pop
imul
mov
daa
jb
push
or
jmp
mov
stc
sub
les
cmp
mov
dec
xchg
scas
int
mov
mov
cmp
xlat
and
mov
fmulp
push
dec
and
inc
push
jns
enter
lods
jnp
push
mov
lea
inc
sub
push
movsbw
lea
add
sbb
mov
sub
and
pushf
pusha
mov
push
pushf
jmp
clc
adc
divb
dec
pop
dec
inc
add
pop
insl
jo
xchg
or
add
lock
adc
daa
mov
inc
jp
imul
insb
adc
dec
mov
xor
dec
mov
es
xchg
leave
test
ret
inc
popa
inc
stos
mov
lock
xchg
jl
or
fbstp
pop
jbe
cmp
loope
dec
or
test
notb
pop
inc
mov
fcoml
push
xchg
mov
inc
incb
in
arpl
inc
xchg
inc
cltd
cli
jmp
mov
push
add
lock
push
mov
in
cmc
mov
aaa
jp
pop
xor
pop
mov
inc
cmp
test
jmp
stos
stos
adc
das
stos
in
cmc
pop
sbb
pop
xor
xchg
mov
dec
or
jp
call
pop
push
enter
addl
pusha
in
and
mov
push
sub
out
out
and
or
push
xor
inc
jecxz
cmp
inc
fldl
aas
adc
sbb
out
mov
adcb
cli
dec
and
out
xlat
pop
jle
mov
addl
aad
jecxz
pop
jbe
ja
lcall
and
cmp
cltd
push
mov
hlt
cli
mov
fisttpl
fwait
movsb
mov
loope
jecxz
es
jl
outsl
outsb
mov
mov
repz
or
cltd
test
clc
dec
pop
inc
and
and
jne
mov
pusha
pusha
movb
lea
mov
cwtl
lea
mov
movl
call
mov
cmpsl
add
lock
cltd
mov
cmp
cmp
cmp
xchg
in
pusha
mov
push
fs
insb
xlat
and
cmp
adc
aas
sub
loop
imul
mov
dec
iret
pop
ffree
sti
sub
test
xchg
pop
inc
or
rcrb
ret
dec
sub
test
inc
dec
xor
pushf
pushf
dec
pushf
rol
not
rcr
bt
bt
seto
ror
not
stos
pushf
jmp
jmp
jl
add
add
add
add
add
add
and
add
outsl
out
add
sub
incb
add
add
add
test
add
andb
movb
not
push
jmp
call
push
movl
push
call
jmp
inc
push
cmp
or
hlt
mov
and
or
mov
lret
lret
sub
vpshab
std
lock
mov
in
aam
pop
push
xchg
stos
shll
cmp
xchg
add
daa
jecxz
std
xchg
fs
push
jns
loope
xor
sub
sbb
mov
push
inc
push
cmp
adc
idivl
inc
fldenv
lret
outsb
jno
jmp
or
and
push
lds
ret
sbb
scas
dec
add
sbb
xchg
in
dec
cmp
add
jmp
addl
inc
pusha
jmp
bsr
shl
btc
push
aaa
pusha
daa
inc
lea
clc
rcl
pushl
sub
rcl
aad
btc
push
stc
pushf
aam
pusha
mov
shl
mov
rcl
jmp
xchg
leave
int3
mov
fmull
xor
loope,pn
mov
push
mov
or
cmp
jecxz
fbld
sbb
cmc
mov
mov
jecxz
cmp
sbb
lods
sbb
insb
rol
loop
pushf
or
sti
mov
imulb
cli
lret
aas
int
push
pop
aad
adc
pop
mov
jo
xor
mov
test
stos
in
pop
mov
roll
inc
pop
mov
fsubrl
in
hlt
loopne
jle
sub
pop
add
aaa
mul
pop
pop
dec
pop
inc
pop
or
and
in
lea
jbe
shr
push
shl
mov
rcl
adc
call
cmp
pushf
lea
ja
not
movsbw
lea
movsbw
pop
xchg
movzbw
pop
movsbw
not
jmp
movl
movb
push
pusha
lea
jmp
lahf
pushf
pop
jmp
mov
mov
pushl
ret
bt
cmpb
pushf
push
pushf
pushf
lea
jne
cwtl
inc
jmp
movl
pushf
mov
lea
jmp
movsbw
mov
jmp
lea
jne
daa
cmp
xor
shl
sar
cmp
aad
mov
cmc
add
xor
ror
mov
call
or
not
shl
pusha
mov
cmp
cmp
pushf
call
mov
lods
call
pushf
jmp
cmp
cmp
stc
add
call
sub
ja
push
push
lea
jne
push
push
lea
call
pushf
pusha
pusha
pushf
lea
jmp
mov
pop
dec
lods
and
inc
jnp
pop
fs
xchg
in
push
jmp
test
xchg
sub
dec
aam
mov
add
xor
pop
sarb
push
jmp
sbb
sti
xchg
push
and
dec
scas
bound
push
adc
xchg
ja
mov
mov
push
subb
mov
xchg
leave
loope
imul
ja
mov
xor
jmp
test
and
inc
lock
or
mov
add
inc
push
add
jge
mov
push
lcall
mov
mov
add
lret
hlt
daa
sub
cmp
pop
je
lahf
mov
rcl
mov
jl
mov
test
out
push
mov
xor
stos
and
pop
stos
jmp
lcall
sub
xchg
repz
aaa
call
pop
inc
xchg
mov
icebp
addr16
in
sti
ret
scas
push
std
test
hlt
iret
cmp
mov
mov
aad
clc
push
pop
sbb
ljmp
mov
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
imul
stc
add
pushf
push
pushf
lea
jmp
jmp
add
loopne
xchg
addb
movsb
scas
mov
cmp
jbe
push
adc
cmpsb
xlat
lock
xor
pop
push
push
test
xchg
inc
sub
add
mov
xor
movsl
fwait
dec
mov
add
hlt
xor
and
fidivrl
jmp
cmp
or
adc
inc
xchg
scas
pop
decb
mov
inc
add
in
test
and
lea
insl
jl
popf
fisubs
sub
cmp
insb
scas
jp
mov
jge
or
dec
cmp
push
insl
jle
pop
js
in
test
sub
andb
les
push
sbb
mov
daa
movsl
mov
mov
pop
inc
addb
jnp
pusha
arpl
sbb
sahf
pop
test
add
out
adc
dec
fsubr
mov
cmp
pop
mov
cli
popf
pusha
fwait
sbb
ljmp
jne
sub
je
jmp
les
push
xlat
and
testb
inc
repz
sbb
imul
mov
call
and
inc
xor
dec
pop
js
and
add
rorl
mov
mov
ss
jns,pn
iret
xchg
or
dec
push
sarl
addr16
inc
stos
xchg
push
mov
and
fscale
dec
pop
bound
pop
mov
mov
cli
adc
fcomi
fiadds
clc
dec
xlat
loopne
mov
add
add
sarb
jnp
mov
enter
push
idivb
cmp
add
arpl
hlt
add
mov
jae
adc
jnp
mov
insb
inc
xchg
mov
cmp
mov
lds
out
mov
cmpsl
cli
rol
xorb
pusha
fnstenv
add
jge
push
pop
iret
adc
pop
gs
fucomp
hlt
mov
arpl
into
xchg
loopne
mov
mov
movsl
scas
inc
pop
xlat
or
fnstenv
add
push
and
js
mov
ss
mov
mov
ja
nop
xor
popl
stos
push
test
cwtl
mov
push
inc
int3
jnp
mov
xchg
jnp
add
adc
aaa
dec
idivb
popa
dec
jecxz
sarl
in
jle
xchg
adc
ljmp
cmp
pusha
xor
sbbb
inc
pop
mov
jecxz
outsb
addb
xor
repnz
aad
arpl
mov
pusha
sub
std
insb
push
outsb
popf
cmpsb
ljmp
in
cmp
dec
sahf
mov
jg
cltd
je
movsb
lods
vandps
leave
sbb
xlat
test
std
mov
insb
in
inc
add
lea
sub
loope
out
cmp
adc
cli
or
bound
jns
mov
inc
cvtps2pd
jmp
mov
sbb
rcrl
dec
inc
hlt
jae
cmp
dec
pop
jp
ss
mov
stc
stos
stos
sub
sti
scas
test
lock
cs
popa
popf
ret
jbe
inc
mov
fbstp
mov
or
sub
es
inc
push
jbe
lods
or
xor
pop
jp
cmpsl
jb
mov
dec
xor
mov
pop
in
cmpsl
ret
sbb
sub
mov
add
data16
in
mov
out
jmp
imul
fucom
mov
mov
or
mov
push
xor
push
test
and
leave
loope
dec
mov
inc
rcrb
insb
dec
and
ret
dec
push
mov
imul
push
jge
xchg
rolb
loopne
add
inc
add
loopne
add
add
add
add
add
inc
add
add
add
add
mov
add
je
cmp
xor
stc
mov
shl
bsr
mov
sar
shr
movzbl
neg
mov
jmp
lea
je
push
lea
jmp
xlat
outsl
stos
aad
and
loope
std
popa
hlt
das
cmp
in
lret
stc
cmp
dec
das
repnz
inc
lock
movsb
or
mov
cld
ret
and
mov
adc
push
fldl
jl
aad
popf
rdtsc
nop
jmp
seto
movsbw
pop
push
bswap
mov
not
mov
movzbw
pop
mov
pusha
pushl
push
pushf
pushl
ret
movb
pushl
pop
mov
movsbl
lea
pushf
movb
pusha
movl
jmp
lods
movb
stc
jmp
repnz
mov
lea
jne
call
mov
cmp
push
movb
lea
ja
cmc
imul
pusha
add
pusha
lea
jmp
mov
lea
pusha
lea
call
pushf
call
pushf
jmp
mov
pushl
mov
push
push
pushf
mov
pushl
ret
setae
call
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
dec
cmpsl
mov
jne
adc
hlt
addr16
in
pusha
and
call
sub
out
mov
nop
call
ficomps
cmp
mov
aaa
xchg
push
fwait
movsb
or
cmp
sbbl
adc
cs
push
arpl
fstpl
xchg
push
je
jns
out
bound
incl
adc
cli
rcrb
imul
popf
and
dec
stos
subb
lea
mov
lahf
stos
mov
cwtl
pushf
enter
fdivl
dec
pop
jg
jge
stos
das
aam
movsb
sbb
inc
push
dec
stos
jns
sbb
cmp
addl
jge
jecxz
mov
popa
sub
lods
fldlg2
aad
jg
xchg
je
xchg
jmp
dec
stos
mov
cmp
cmp
int3
push
int3
or
imul
jle
jp
fnsave
mov
pusha
jmp
dec
dec
push
xchg
jne
inc
mov
cmp
sbb
adc
sbb
adc
push
adc
pop
hlt
retw
xchg
adc
xchg
mov
push
adc
mov
add
push
mov
sarl
dec
lret
pop
cmp
hlt
inc
leave
loope
add
lret
lret
loop
fsubrl
mov
aas
xchg
sbb
fimull
jle
jo
call
lea
jb
stc
cmp
ja
pushf
mov
pusha
lea
jae
stc
shrd
ror
mov
add
inc
jmp
rol
rol
mov
test
clc
bt
cmpb
push
movl
mov
lea
jne
daa
clc
bsr
sub
mov
movzbw
lahf
mov
pushf
push
push
pusha
lea
jmp
scas
inc
cmpl
shlb
test
bndldx
and
lret
cld
cmp
xor
mov
rorb
inc
mov
int3
and
loop
jmp
cmp
and
dec
call
enter
loopne
pushf
and
or
or
jecxz
loop
jae
inc
and
add
sti
pop
into
mov
cmp
pop
cmc
dec
sbb
cmpb
add
jnp
pushf
lea
jae
test
rcr
or
mov
btr
bt
mov
cmp
pushf
sbb
shl
mov
test
pushf
jmp
ja
push
pushf
pushf
movl
pushf
pushf
call
push
lock
std
std
test
insl
xor
sub
into
pusha
jo
add
lret
or
mov
pop
pusha
ss
inc
out
jl
jge
cltd
in
js
dec
andb
push
push
enter
fsubl
adc
test
loope
lahf
add
mov
inc
push
inc
adc
xchg
push
mov
mov
cmp
ljmp
inc
adc
jmp
pop
aam
js
stos
inc
out
cmpsl
lock
jnp
cmp
dec
repnz
dec
rorl
fwait
pop
inc
das
cmp
arpl
pop
inc
push
nop
ret
sub
push
imul
adc
das
sub
cltd
mov
sar
es
inc
arpl
inc
rcr
dec
inc
adc
dec
pop
jo
testb
cmc
jmp
not
shr
ror
rol
mov
rol
rcl
sbb
inc
add
jae
mov
call
pop
jbe
cld
mov
outsl
mov
cwtl
xor
cmp
and
cwtl
dec
inc
and
mov
rorb
push
ret
jle
pop
cld
loopne
jp
inc
cmp
lods
sub
add
int3
add
inc
xchg
push
jg
or
push
js
loopne
mov
sbb
cmpsb
mov
jo
cmp
sbb
fsubrs
cmp
les
inc
cmp
xor
xchg
ret
aam
pop
mov
or
sarl
dec
mov
add
push
lret
push
mov
scas
xchg
cmpsb
stc
cld
out
or
fwait
into
mov
addr16
jnp
ljmp
mov
dec
adc
inc
fwait
aaa
inc
enter
loopne
into
div
xchg
stos
cld
orl
ss
outsl
or
mov
jge
dec
and
mov
ja
push
jmp
repnz
xor
pop
or
loopne
sub
or
in
mov
or
aad
fmuls
pop
fs
jae
testb
jl
ss
stc
negb
jle
call
pusha
out
mov
std
add
mov
mov
sti
push
jecxz
insb
push
mov
jae
cmc
pop
cwtl
out
cld
ret
pop
movsl
mov
out
mov
jmp
popa
int
testl
js
xchg
and
pushf
shl
in
pop
insb
dec
mov
inc
test
pop
xchg
ret
ret
xchg
jno
addr16
push
add
dec
mov
cwtl
lahf
call
movb
push
movsbw
pusha
mov
bswap
lea
pusha
call
shr
bsf
shl
mov
bt
cmp
cmpb
jmp
bt
bt
and
test
cmc
stc
jmp
push
sub
push
daa
jo
dec
push
icebp
lods
dec
pop
insl
adc
mov
xor
ret
bound
cmpsl
push
xorb
and
out
inc
stos
mov
in
movsb
roll
mov
sbb
pop
lods
xchg
jns
dec
xchg
mov
sbb
int
nop
sbb
mov
in
and
out
jo
popa
popf
mov
ds
add
cmp
adc
test
jbe
and
mov
jb
xchg
rol
xchg
test
adc
fsubrp
les
pop
jne
aas
mov
xchg
or
out
dec
daa
out
mov
xor
fldcw
fcmovbe
fcomi
insl
cmp
dec
dec
fistl
mov
push
aas
jp
jmp
repz
mov
cmpsb
mov
push
sbb
jns
adc
mov
leave
loope
repz
les
mov
mov
cmp
inc
add
jbe
mov
sub
jl
push
dec
pop
je
xchg
out
lea
clc
mov
not
btc
add
jb
neg
mov
cmc
sub
stc
cmc
repnz
push
lea
jne
neg
sar
xor
mov
bts
sub
add
add
mov
call
push
cld
cltd
outsb
add
mov
inc
jae
dec
push
cmpl
mov
xor
das
test
mov
gs
pop
rorb
jb
dec
aad
mov
ret
inc
lret
mov
jo
cmpsb
nop
call
imul
add
xchg
xor
dec
mov
movsl
adc
or
xchg
or
leave
jb
pop
ja
mov
pushf
movw
mov
pushf
setnp
call
test
jmp
pusha
lea
jbe
rol
sub
movzbw
cmp
mov
mov
xor
rcr
mov
shl
stc
shl
rcl
add
jmp
push
mov
pushl
mov
push
pushf
pushl
ret
movw
lea
ja
jmp
iret
out
gs
int3
sub
adc
sarb
sbbl
push
cmp
clc
mov
mov
mov
aam
mov
pop
and
push
cmp
cmp
cmp
dec
cwtl
sbb
data16
loope
sti
std
jle
shrl
cmc
in
mov
and
loopne
addr16
stc
cmpb
xchg
adc
shll
cmc
sub
xor
sbb
dec
pop
jbe
xchg
bound
lret
inc
and
lret
outsl
adc
pushf
punpckhdq
lret
cmp
daa
scas
mov
push
fwait
lret
push
xlat
and
and
mov
cli
add
fistpll
or
imul
mov
pop
jbe
dec
sbb
call
or
inc
inc
xchg
push
mov
mov
add
cmp
cltd
lods
mov
cmpsl
js
sub
cmp
pop
xlat
and
stc
sub
cwtl
mov
cltd
fs
cli
sub
inc
bound
insl
mov
jno
div
push
cmp
stos
stc
cli
dec
pop
jbe
push
pop
push
dec
pushf
clc
push
jmp
pusha
lea
je
pusha
cmp
mov
mov
pushl
call
in
test
hlt
in
dec
rcrl
leavew
or
mov
lret
std
adc
mov
xor
inc
jno
pop
int
pushf
fsubl
mov
ljmp
popa
cmc
mov
dec
cmp
push
cmp
mov
pop
shll
dec
sub
call
leave
loope
xor
xchg
pop
adc
xchg
pop
xor
lods
add
ljmp
dec
sub
mov
cmpb
call
movl
push
lea
jmp
aaa
dec
xor
xchg
pop
push
enter
cs
xchg
pop
and
je
out
add
leave
mov
std
sti
mov
mov
mov
cli
icebp
sbb
add
es
xchg
lods
jo
lret
iret
lock
mov
sbb
jb
insl
rclb
sub
leave
mov
ret
mov
mov
add
pop
fadd
sbb
cmp
sti
test
push
pop
scas
leave
loope
js
adc
adc
xchg
je
cs
int3
loope
out
mov
daa
out
lds
or
push
inc
and
sub
inc
add
cmp
pushf
pushl
ret
adc
in
jecxz
dec
aas
add
aas
ret
mov
pop
call
dec
xchg
mov
jp
inc
in
inc
or
scas
xchg
aad
mov
lods
cmp
xchg
cmp
xchg
pop
xchg
repz
xchg
mov
adc
or
and
les
pushf
and
mov
and
sbb
lahf
sbb
les
pushf
cltd
push
mov
les
and
sbb
mov
sbb
and
mov
lahf
and
push
lahf
sbb
mov
les
aam
movsbl
lea
pop
mov
jmp
test
bt
jmp
call
pushl
mov
movb
lea
je
stc
add
pushf
pusha
pusha
lea
jmp
pushf
pushf
lea
ja
rcl
sub
xor
add
or
mov
cmc
mov
test
pushf
test
repnz
pusha
call
sbb
aam
mov
xor
jns,pt
psrad
mov
sarl
rcll
inc
and
cld
cmp
jne
sub
dec
imul
js
and
ds
pop
sub
add
xor
test
cmp
jbe
in
mov
sbb
bound
pop
jmp
mov
or
sbb
adc
pop
imul
scas
sarl
incb
js
ficomps
ja
imul
test
das
mov
xchg
jns
pop
cmc
xchg
add
cmp
push
xor
xor
mov
xor
ds
test
cmp
mov
cmpsb
dec
scas
cwtl
lock
cltd
or
push
leave
loope
cmpl
add
mov
cmc
sub
ss
jo
es
cld
pop
dec
pop
push
mov
dec
in
ljmp
inc
fstpt
xchg
pusha
jnp
test
test
push
xchg
shr
adc
jae
addr16
int
scas
stos
cmp
or
aad
cmpsb
cs
test
inc
enter
faddl
sbb
aad
xchg
ss
and
bswap
xor
mov
cmc
imul
add
xor
sbb
jl
pop
adc
mov
ja
iret
xchg
cmp
dec
mov
std
pushf
rep
dec
pop
push
cld
push
movsl
push
push
sbb
xchg
fiaddl
jl
push
or
and
insl
shl
sbb
adc
push
pop
into
fcmove
push
pop
sbb
mov
bswap
push
sbb
sub
add
pop
cmp
sahf
sub
enter
jo
xor
ja
insb
push
int3
es
or
dec
or
cmpsb
arpl
sub
test
xchg
stc
add
orb
movsl
pop
test
addb
test
add
ret
add
xor
lahf
ret
add
enter
rclb
lret
das
pop
dec
pop
insl
dec
pop
add
or
rolb
fucomi
cli
cltd
add
pushf
pushf
lea
jbe
test
jmp
push
aad
push
mov
mov
addl
out
imul
addr16
mov
test
insl
lret
push
aad
cmp
and
fmuls
mov
add
pushf
pushf
movl
call
cs
inc
in
icebp
push
push
xlat
jns
xor
lret
sahf
adc
sbb
pop
cmpsb
shl
orb
arpl
push
sub
dec
jmp
or
repnz
and
arpl
add
mov
adc
mov
mov
dec
jno
popa
mov
in
loop
in
shl
pusha
cmpsl
mov
xchg
dec
lcall
cmp
jge
add
test
sub
add
decl
add
lea
pushl
movl
jmp
rcrb
or
mov
inc
movsl
mov
xchg
push
xlat
mov
and
ret
stc
cmpsl
mov
push
fbld
les
fs
mov
mov
aaa
jae
sbb
aaa
mov
mov
adc
or
jnp
lret
push
lret
jmp
std
mov
jne
or
xchg
repz
inc
mov
sbb
fisttps
cld
sub
ljmp
push
xlat
movsl
xchg
fbstp
dec
imul
add
in
mov
incl
scas
es
push
push
stc
mov
outsl
mov
cs
sete
stc
mov
mov
bt
jmp
stc
sub
bswap
bswap
sar
shr
movsbw
bts
xadd
mov
pusha
bswap
shrd
add
sar
add
or
rcl
xor
mov
clc
shr
stc
test
cmp
jmp
xor
dec
mov
cmc
call
add
stc
test
jmp
pusha
pushf
lea
ja
call
jg
ljmp
rolb
clc
add
inc
filds
orb
push
jo
mov
lcall
lds
enter
fsubs
test
int3
dec
fistps
or
xchg
gs
and
sbb
push
divb
mov
push
or
push
xchg
in
add
mov
jmp
stc
jl
enter
stos
mov
add
inc
pushf
sbb
or
sub
daa
jnp
or
jge
push
cmp
loope
or
call
push
cwtl
xchg
movsb
js
loop
cmp
rolb
iret
xchg
push
xchg
mov
cmp
rclb
je
mov
add
ja
inc
sub
movsl
cmpsb
push
repz
popf
fsubl
movsb
shl
pusha
inc
js
test
bnd
daa
adc
xor
sub
push
dec
jmp
mov
sti
mov
mov
dec
xlat
push
sub
mov
cmp
ret
cmp
in
adc
pusha
rorl
pop
scas
addb
push
lods
cmp
outsl
and
ret
adcb
int3
jnp
or
ss
sub
push
cmc
sub
and
cli
cmp
jge
mov
mov
je
in
call
int
test
cld
icebp
outsb
sbb
ss
pop
fidivrl
xchg
rorb
test
movsb
scas
out
inc
int3
iret
jnp
loopne
sub
or
push
fildll
mov
jo
outsb
or
pop
popa
test
clc
pushl
popl
cmc
test
cmc
cmp
pushf
movb
pushf
lea
ja
bt
sub
cmc
movzbl
add
cmp
jmp
inc
fwait
sahf
imul
out
shll
xchg
mov
dec
rclb
icebp
push
dec
cltd
pop
mov
pop
and
call
loope
icebp
and
pop
jno
hlt
dec
xchg
xchg
xor
icebp
sbb
sbb
cmc
and
mov
or
xchg
leave
loope
mov
mov
dec
aas
fcmovnu
or
mov
inc
outsb
inc
or
mov
and
xchg
mov
add
call
pusha
lea
call
pushf
pushf
mov
push
pushf
lea
jmp
push
cmpb
pushf
jmp
jmp
mov
lea
lea
ror
sub
pushf
xor
lea
bt
pushf
cmp
pusha
sub
push
cmc
pushl
popl
call
lea
je
setle
setp
ror
mov
lea
cmp
add
shld
dec
or
not
mov
pusha
pusha
test
pushf
lea
je
dec
add
sets
cmp
pusha
mov
bt
add
bt
test
mov
movsbl
mov
cmp
cmp
call
pushf
test
bt
add
call
cs
jno
mov
stos
xor
scas
dec
cmp
mov
lcall
cmp
fmuls
cmp
fbstp
lds
jmp
cltd
sub
push
dec
in
stos
or
nop
addr16
push
dec
pop
arpl
push
sbb
mov
lea
jmp
pushf
jmp
test
cmp
pusha
lea
jae
movsbw
xchg
not
mov
sub
mov
adc
call
repnz
call
pushl
cmp
test
call
lea
je
cmc
call
call
lea
jne
setne
mov
movsbw
sub
sub
or
shl
shr
mov
mov
cmc
sub
cmc
push
stc
clc
pushl
popl
clc
cmc
stc
pusha
cmp
jmp
pushf
pushf
lea
ja
adc
sub
push
jmp
or
lret
pop
outsl
push
push
lods
push
jmp
mov
int3
xchg
in
lret
push
or
into
jmp
ljmp
mov
cld
cmp
xchg
std
js
or
sub
orl
add
sub
cmp
minps
cmpsl
ja
xor
pusha
xorl
xchg
mov
pop
xor
enter
sbb
mov
xchg
inc
and
addl
shlb
lds
dec
cs
stos
cli
or
pop
jp
loop
fbstp
shll
cmpsb
shr
imul
in
and
xor
xchg
dec
pop
bound
xlat
call
add
shl
cmp
aam
jo
adc
addl
mov
jg
jae
and
out
ljmp
test
jno
outsl
es
pushf
mov
es
dec
pop
gs
rorl
push
mov
fmul
pop
fnsave
pop
pop
jge
repz
adc
mov
fwait
sbb
cld
sbb
leave
test
cs
test
daa
js
sbb
iret
jno
adc
sbb
mov
pop
xchg
montmul
cmpsb
inc
adc
in
pop
or
push
adc
sub
repz
jne
clc
and
xor
leave
xchg
popa
std
pop
stos
or
inc
xchg
clc
imull
lods
outsl
fsubr
mov
mov
mov
push
lahf
gs
call
dec
pop
gs
imul
push
or
push
xchg
cmp
xchg
pop
push
sbbl
sahf
jg
mov
jp
imul
and
pusha
out
lods
std
xlat
xor
js
es
add
xlat
loop
mov
mov
clc
fwait
sahf
not
pop
int3
clc
sub
mov
xchg
push
mov
pop
xor
test
btc
shrd
shld
xor
dec
cmc
mov
inc
not
add
mov
adc
mov
cmp
stc
test
call
test
sub
call
sub
jmp
movzbw
dec
mov
clc
cmpb
call
call
pushf
stc
bt
not
bt
call
inc
sbb
leave
fdiv
push
mov
xchg
dec
inc
mov
test
xchg
sub
pop
sbb
int3
and
ljmp
push
mov
lock
or
fistpl
lcall
jl
stos
dec
or
inc
lret
lret
stos
or
or
push
cwtl
adcb
leave
add
adc
jne
ror
xchg
pop
or
pop
daa
lea
add
fs
push
lea
ja
neg
setns
inc
sub
test
add
xor
mov
jmp
pusha
pushf
lea
call
clc
cmp
jmp
lea
ja
dec
jmp
dec
loop
push
mov
push
push
xor
je
fucomp
jae
jno
push
sbb
mov
popf
das
pop
aam
xchg
or
mov
fistps
icebp
adc
mov
push
mov
insl
adcb
shlb
jne
cs
sub
dec
cwtl
scas
fsubl
jmp
dec
mov
cmp
jo
clc
adc
mov
sub
jle
xchg
jl
xorb
orb
dec
xorl
push
bound
stc
sub
dec
mov
jp
cmp
out
hlt
mov
addr16
pop
push
test
stos
stos
aaa
mov
stc
aam
rclb
pop
xchg
loop
test
adc
ja
mov
popf
faddl
nop
xor
cld
pusha
lcall
daa
cs
sub
cmpl
cmp
jle
pop
adc
fimuls
dec
stos
es
pop
data16
shlb
pop
call
fs
jae
pusha
bts
mov
shrd
movsbw
ror
mov
setl
mov
push
call
lcall
daa
mov
ljmp
das
sbb
scas
jle
in
gs
dec
fsubs
in
jae
sbb
outsl
inc
or
jo
dec
loope
call
sub
xchg
scas
dec
pop
data16
popl
stc
pushf
cmp
jmp
and
neg
inc
pushf
mov
bt
pushf
mov
mov
clc
push
pusha
repnz
pushf
movw
call
dec
mov
lods
jnp
dec
nop
sti
pop
in
push
movsl
sub
into
leave
les
sbb
lock
dec
mov
mov
mov
mov
and
es
mov
or
movsl
mov
in
sbb
jnp
lret
stos
iret
mov
in
xor
outsb
in
fcoml
out
cwtl
sbb
xadd
hlt
stos
sbb
adcl
test
loop
ror
in
cmp
bound
sbb
and
fs
jne
pusha
movzbl
pusha
pushl
mov
pushl
pushl
movb
lea
jmp
insl
test
mov
mov
mov
dec
or
sbb
out
xor
push
lahf
ficomps
movsb
insl
incl
push
mov
pop
push
cmpsl
xor
je
jle
imul
mov
jmp
fimull
into
std
or
or
out
fdivl
in
daa
push
pop
sahf
add
lods
pop
dec
popf
xchg
push
mov
jne
lock
test
push
popa
mov
out
mov
testb
shl
sub
rolb
or
adc
adc
sbb
cltd
jo
xchg
xor
rcll
mov
push
add
jmp
outsl
lcall
popl
shrl
out
popf
cmp
dec
pop
sbb
repz
negl
and
not
movzwl
not
lea
lea
movzbw
mov
pushf
lea
call
call
sub
jg
sub
jmp
sbb
mov
test
cmpb
push
pushf
pusha
call
push
jmp
test
dec
jmp
ljmp
xchg
add
add
jecxz
mov
pop
pop
sbb
push
nop
mov
sub
js
mov
cmp
cld
es
out
sbb
xor
inc
sbb
sti
sbb
xchg
loope
insb
rcrb
or
std
cmpsb
add
xor
call
shll
dec
lock
sbb
sbb
clc
bswap
add
or
bts
rcl
jo
mov
cmp
adc
or
rol
mov
jmp
lea
je
pusha
pusha
movzbw
mov
pop
lahf
mov
call
jl
mov
and
cmp
icebp
pop
mov
aad
mov
adc
xchg
pop
add
jp
fcmovnb
xchg
ds
xor
in
negl
xchg
sbb
or
lret
div
add
ret
add
sbb
bound
sbb
push
mov
data16
sub
dec
inc
mov
inc
cs
pop
loop
call
xor
xor
lock
jl
push
inc
sub
sbb
dec
add
mov
icebp
adc
stc
sti
inc
and
jne
sbb
dec
and
sbb
sbb
dec
mov
and
pop
or
xchg
and
cmpb
lds
sub
sti
out
imulb
add
movsl
push
in
mov
dec
and
xchg
and
push
out
out
stos
mov
fisubs
pop
add
pop
rcrl
push
jae
jbe
xor
pop
sbb
dec
push
sbb
out
xchg
ret
lds
nop
sbb
mov
xor
pop
xchg
decb
xlat
mov
loopne
sbb
jnp
cmp
imul
in
adc
lds
push
data16
out
sbb
mov
std
pop
sti
jno
lcall
pop
scas
xor
lock
loop
loop
add
dec
stc
out
pop
push
sbb
mov
icebp
add
int
sub
int
fwait
mov
inc
loopne
imul
shlb
lea
mov
int
xor
cmp
xor
sub
out
push
sbb
adc
and
cmp
out
in
movb
xchg
jno
push
popf
and
push
jmp
jl
dec
and
movsb
addb
jp
sbb
add
es
ror
cmp
repnz
into
and
jae
cld
mov
push
mov
jge
or
fwait
icebp
cmp
fbstp
cmc
cmp
loop
cmp
popa
and
xor
and
loop
mov
orl
in
insl
dec
push
arpl
popf
adc
frstor
andb
popf
arpl
cmpsl
jl
mov
fwait
mov
repnz
and
push
add
push
out
mov
mov
loop
xor
adc
in
lds
sub
mov
push
or
dec
jecxz
das
adc
mov
scas
cli
mov
nop
out
fwait
pop
in
cwtl
sbb
jmp
lret
mov
sub
cmc
repz
xchg
adc
inc
cmp
or
mov
push
jl
add
shr
cli
push
jns
cwtl
repnz
jae
adc
cwtl
lods
pop
xchg
push
mov
aad
push
dec
push
in
lahf
cmpsb
or
popa
mov
in
int
fisttpl
lods
inc
test
call
cltd
cmp
cmp
popf
repz
js
or
dec
int
mov
hlt
fldl
jnp
aad
add
pmaddwd
frstor
mov
ret
inc
pop
cmc
les
pushw
fmuls
arpl
test
frstor
jge
cmc
mov
in
aad
shll
sarb
mov
or
cmp
movsl
loope
test
les
fs
loop
cmpsl
add
pop
mov
loope
sbbl
movsl
jmp
popa
fucom
and
loop
shlb
mov
inc
ret
jecxz
adcl
jmp
int3
movsl
ret
popf
add
mov
aad
and
mov
cld
mov
jecxz
addl
ret
insb
cmpb
repz
sbbl
test
adcl
xchg
add
mov
xchg
repz
ret
jne
aam
repz
add
push
jne
mov
add
rol
jecxz
call
dec
rol
mov
lahf
and
imul
dec
stos
cmc
jae
icebp
pop
dec
mov
and
stos
loope
sub
dec
lret
rclb
xchg
test
call
add
imul
insl
jecxz
inc
shll
push
and
je
aam
or
xor
adc
ret
or
popa
fwait
sub
les
loope
mov
bound
or
in
mov
xor
rcr
jecxz
popf
aad
icebp
test
in
pop
ds
jge
push
push
loop
mov
insb
fs
ss
or
mov
in
bound
hlt
rcl
arpl
fistpll
insb
xor
lods
xchg
jne
out
sarb
ss
add
inc
out
push
sub
jecxz
add
out
movsl
stc
mov
adc
xor
jle
sub
lea
je
in
jp
mov
xorb
and
mov
push
pop
loope
inc
scas
testb
loop
shl
test
fsts
push
in
or
movsl
int
cmp
add
sub
repz
xor
cwtl
cmp
popl
flds
adc
int3
inc
xor
jbe
inc
xchg
inc
out
sbb
enter
inc
imul
out
dec
mov
adc
fbld
cmpsl
and
jne
adcl
inc
mov
add
sbb
loop
mov
ret
push
inc
xor
ja
inc
xor
les
cli
imul
cmpsl
in
xor
adc
inc
jns
in
loop
mov
cmp
push
in
loop
mov
icebp
lret
push
les
cli
mov
daa
mov
jmp
jo
lods
imul
pusha
fidivs
lea
xor
inc
cld
mov
jno
in
mov
dec
lret
xor
out
jmp
xchg
out
xor
ret
inc
leave
repz
push
inc
or
mov
xchg
jmp
mov
push
dec
outsb
dec
cmpsl
pop
jne
jp
inc
xor
or
addl
andb
push
roll
jae
test
loop
repz
jecxz
inc
dec
sahf
add
inc
pop
pop
mov
test
inc
lds
xchg
push
cmpsl
repnz
ffreep
xor
gs
jmp
in
imul
in
orl
pop
jl
inc
mov
xor
and
aas
out
scas
lods
dec
or
popa
add
push
test
mov
push
aaa
pop
xchg
and
repnz
clc
sub
in
stos
sbb
push
popa
cmp
jne
call
insl
lea
xor
lock
dec
je
imul
mov
dec
xchg
imul
cmc
nop
icebp
std
jo
xor
test
mov
clc
es
out
adc
test
or
mulb
loopne
sub
test
xchg
out
dec
movsb
imul
ja
mov
push
mov
movsb
test
ret
mov
dec
pusha
in
ret
in
std
xchg
popf
sti
cli
stos
add
popf
inc
cmp
mov
adc
je
sbb
nop
push
pop
les
jns
jb
sti
adc
xchg
push
shrb
cmpsl
loope
pop
sbb
ret
sbb
sahf
jo
bound
mov
shlb
inc
outsl
xor
and
and
adc
arpl
mov
xor
je
jns
mov
mov
xor
addr16
jns
std
add
sub
aas
je
sbb
js
and
cltd
jb
mov
cmpsl
shl
jne
and
add
pop
popf
or
in
nop
loope
cmp
push
in
lcall
sti
fnsave
in
and
popf
and
rcrb
push
pop
cmp
call
and
mov
in
and
loope
dec
mov
lods
test
loope
mov
roll
in
jl
mov
inc
mov
enter
in
fs
lds
jge
loope
loope
shll
in
inc
and
in
sub
and
xor
enter
push
test
shll
sbb
xor
xor
fbstp
adc
nop
cld
js
pushf
je
lock
scas
test
xor
ret
push
mov
ficompl
fistpll
or
out
pop
pop
out
loop
xor
shll
sbb
push
mov
mov
jge
out
inc
in
and
xor
sar
loop
add
ficomps
xlat
out
inc
pop
cs
bound
jecxz
lret
inc
fsts
addr16
cmc
dec
mov
jb
daa
push
out
lret
imul
sub
push
sub
inc
lods
lcall
int3
and
and
mov
popf
jmp
mov
add
frstor
mov
in
and
and
sub
bound
mov
cwtl
cmp
jns
cli
cmp
out
xor
lret
outsl
pop
push
popf
jmp
sti
fst
out
imul
jnp
ret
add
xchg
sub
arpl
jmp
movsb
shll
sti
shlb
popf
in
inc
fldenv
jecxz
pop
and
xor
push
in
shll
cli
or
push
xor
loop
enter
xor
shrb
push
lds
inc
out
jle
shll
mov
and
bound
add
cmp
movsl
mov
mov
outsb
dec
and
dec
sarb
push
cmpsl
sbb
inc
mov
movsb
and
insl
frndint
ret
sub
inc
sub
imul
js
push
push
call
aas
mov
cmp
pop
das
out
cmpsb
data16
cmp
and
cmpsl
stos
repnz
shr
rcrl
out
iret
fs
scas
in
sub
ja
sti
xchg
aad
sarl
fnstsw
mov
mov
sub
jmp
fucomp
popf
loop
int3
and
mov
loope
imul
sbb
insl
mov
cwtl
jmp
mov
popa
inc
cmp
movsb
test
pop
mov
pop
sub
gs
js
cmp
mov
fcomi
stc
mov
call
clc
shll
into
jecxz
rcrb
and
jecxz
insb
sbb
mov
cmp
mov
add
popf
jmp
call
xor
mov
je
sub
and
lods
movsb
jne
cmpb
push
pop
ret
pop
std
xor
shll
pop
popa
adc
and
jg
incl
mov
imul
fnsave
cmpsb
mov
insb
in
pop
push
pop
pop
clc
mov
dec
jge
cld
cmp
fstpl
inc
loope
les
loope
insb
mov
xor
loop
jb
lock
sub
mov
clc
movsl
and
add
scas
in
push
dec
nop
popa
arpl
arpl
aad
push
or
movsb
cmpsl
pop
gs
mov
in
fiaddl
sub
jl
mov
mov
jg
bound
cmp
stc
push
decb
adc
int3
jecxz,pt
and
lods
repz
fsubrl
test
icebp
mov
cwtl
mov
jno
add
push
pop
fs
cld
sub
and
add
ret
jo
arpl
imul
pop
jo
popa
je
hlt
in
loope
jp
test
lods
and
ret
andb
cmp
pop
xor
jecxz
repz
sub
je
loope
pushf
int
adc
pop
in
popa
rcrb
mov
ja
out
in
ret
cmpsb
mov
xchg
and
push
push
pop
loop
insl
call
mov
jo
cmp
mov
mov
or
cld
ret
cmpsb
call
pop
lock
pop
push
je
mov
loope
in
loope
int
in
negb
mov
push
enter
ret
lret
into
in
int3
repz
shl
subb
out
shll
fnstsw
icebp
mov
stc
shll
cltd
cwtl
repnz
mov
and
movb
and
ljmp
jno
clc
cltd
jecxz
popf
cli
scas
std
movsl
std
js
fs
lods
popf
ljmp
sub
repnz
in
fisubrs
lea
imul
loope
aad
scas
es
shlb
repnz
popf
mov
inc
cmp
movsl
leave
arpl
mov
arpl
cltd
sbb
not
fucomip
in
int
sbb
negb
mov
jge
insl
fdivr
mov
xor
stos
cmp
mul
js
insl
out
cmpsl
out
test
ljmp
rcrl
andl
cli
sbbl
fucomi
lods
not
xchg
addr16
in
sbb
inc
inc
inc
std
scas
jg
sub
mov
fildll
mov
add
mov
mov
cmp
imul
insl
mov
fldenv
imul
jle
mov
sbb
shrb
movsb
data16
imul
int3
fucomi
out
dec
into
mov
mov
mov
je
movsb
xor
xchg
int3
push
or
stos
adc
or
popa
cmc
aas
in
push
cmp
mov
out
lahf
js
ret
arpl
shll
xor
movsb
inc
lds
and
jae
and
adc
mov
mov
loop
loop
in
cmc
outsb
lods
xchg
push
jp
sbb
cltd
std
mov
sbb
xor
imul
enter
sbb
scas
mov
out
xchg
sub
int3
je
push
cmc
and
dec
jne
add
rcrl
sbb
inc
and
lods
or
cmpsb
arpl
inc
inc
and
popf
jl
cmp
mov
scas
cwtl
or
mov
sti
popa
mov
sbbl
cmp
inc
xor
andl
popa
arpl
and
and
loop
mov
xchg
xchg
mov
movsl
repnz
mulb
out
cmpsb
mov
std
jno
mov
mov
xchg
and
sti
lds
xor
mov
test
or
sbb
rorl
in
call
je
test
inc
lods
in
rorb
inc
dec
fsub
sub
mov
add
mov
push
jns
stos
out
jnp
lods
fdiv
int3
stos
shll
cmp
addr16
in
mov
gs
out
stc
js
pop
xchg
jecxz
aas
addr16
mov
aas
cmpsl
sbb
out
into
jg
xor
mov
mov
cmpsb
dec
out
ljmp
sar
fsub
mov
inc
xor
mov
push
iret
sti
sub
jns
das
les
inc
sahf
out
je
and
sar
jecxz
inc
fidivs
cld
mov
cli
xchg
in
xlat
je
and
fidivs
jne
scas
cld
out
inc
and
sar
fsub
mov
inc
xor
mov
fdivr
jns
out
aad
ret
and
xlat
ja
ret
mov
inc
and
mov
scas
out
shll
stc
xor
out
shll
ret
out
inc
and
xor
std
jns
out
fdivl
xor
and
shll
out
je
and
loope
shll
test
and
shr
push
fdivs
sub
out
out
jge
out
inc
out
aad
jecxz
ret
std
test
out
out
je
dec
loope
fadd
hlt
aad
inc
stc
daa
popa
adc
sti
lea
std
xchg
in
cld
pop
int3
pop
lds
xor
imul
fldl
mov
jmp
notl
roll
pop
imul
int
ret
repz
sub
fs
xor
mov
out
enter
pop
ret
jmp
xor
jnp
sti
icebp
mov
ret
out
dec
out
icebp
add
fistl
out
mov
int3
xorl
jae
out
jmp
aam
ret
out
jmp
inc
sub
jne
pop
out
loop
popa
loop
sub
jmp
les
lods
loope
out
jmp
fsubl
out
fldenv
add
in
jp
into
mov
enter
dec
shr
jae
out
loop
rcl
mov
int3
loope
fiaddl
out
fldenv
std
outsl
test
rcl
rcr
and
aad
outsl
insb
shr
mov
lds
and
das
out
push
mov
roll
call
das
ret
mov
jns
fsubrs
das
ret
loop
jecxz
xlat
shll
jmp
shll
jmp
movsl
call
lods
call
and
mov
out
jns
and
arpl
repz
cli
movsl
cld
aas
mov
lret
gs
push
cwtl
sbb
sbb
cs
rep
subl
ja
cmp
add
pop
lret
adcl
iret
leave
fsubrl
dec
out
iret
gs
sbb
loop
mov
fadds
sub
ror
idiv
pop
rol
jbe
out
movsl
lret
fstpl
call
fdivp
jne,pt
sub
std
cmp
decl
movsl
add
out
mov
xchg
pushf
cli
sub
mov
fiaddl
lock
clc
in
dec
fistpl
movsl
lds
enter
ss
in
ret
ds
shl
mov
push
mov
in
mov
sub
out
aam
push
loop
lock
push
xchg
and
sub
data16
ja
movsl
pop
cmp
ret
cltd
push
movsw
fstpt
lods
cli
mov
lods
and
dec
push
frstor
sub
jno
sub
jle
ljmp
frstor
insl
adc
stos
dec
jno
jne
clc
dec
mov
adc
add
mov
adc
aaa
ret
mov
xor
clc
jmp
or
sbb
sub
mov
push
idivb
ret
mov
arpl
loope
popf
out
in
add
xlat
sub
mov
pop
nop
les
js
ljmp
call
lods
repz
mov
shl
jmp
jmp
aam
hlt
outsb
mov
scas
out
movsb
sub
fildll
out
and
aam
in
mov
mov
out
and
xor
jle
jecxz
xchg
loope
sti
jmp
icebp
insl
arpl
push
cmc
xor
movsl
cmc
jmp
call
shl
xor
inc
out
fdivr
repz
push
in
cmc
cld
ret
jbe
ret
ljmp
hlt
rcr
jns
xor
pushf
out
cmc
hlt
dec
shll
cmc
mov
insb
stos
add
inc
into
cs
sub
clc
xchg
lods
cs
cmp
adc
pop
cmp
out
mov
mov
pop
cmp
mov
repnz
xor
inc
sub
xor
xor
mov
mov
cmp
mov
out
cli
adc
xor
jmp
cmp
cltd
cwtl
add
int
out
mov
pop
inc
xor
or
jge
cld
das
aad
pop
cmp
adc
mov
cmpl
std
test
insl
mov
aad
mov
pop
hlt
pusha
imul
sub
test
pop
jo
inc
push
adc
movsl
xchg
popf
out
jp
push
push
fdivr
jmp
cmp
inc
in
mov
fisttps
xchg
jecxz
inc
fwait
sub
cmp
stc
push
jmp
movsl
jl
mov
xchg
jno
fidivrl
imul
pop
call
test
sub
pop
out
jecxz
imul
scas
jecxz
mov
add
stos
jb
push
adc
jo
push
shl
movsb
lcall
push
lds
sbb
fsubrl
and
jb
push
rorb
jl
aam
scas
pop
ficomps
sti
loope
xor
fnstenv
sub
dec
int3
sbbl
xor
jl
faddp
das
mov
mov
cmpb
cmp
loop
scas
out
and
push
repnz
sub
mov
mov
push
pop
stos
std
je
call
sub
movsl
shrl
cli
aad
es
or
mov
mov
lods
lahf
daa
fwait
pop
pop
js
popf
push
int
pop
cmp
sbb
sbb
add
pop
outsl
sub
int3
clc
loop
cmp
xor
cmp
out
sub
xchg
mov
mov
or
bswap
sub
fwait
incb
xchg
jle
pop
arpl
pop
inc
dec
push
xchg
outsb
adc
popf
loopne
clc
js
out
adc
popa
push
popf
nop
xor
lret
subl
mov
push
cmp
push
and
pop
loopne
imul
loop
pusha
loop
popf
in
jl
loop
shll
sub
loope
call
push
ljmp
loope
sub
icebp
mov
fcomi
in
clc
popf
clc
sti
ljmp
movsb
movsl
repz
inc
mov
pop
mov
mov
ljmp
or
mov
out
mov
aaa
adc
aam
int3
push
lods
xor
cmp
sti
cmp
decb
cld
fiaddl
iret
out
loopne
and
movsb
add
lret
shrl
inc
rep
xor
aam
fbld
insl
xchg
rcr
lahf
mov
jp
inc
adc
mov
cli
sbb
ret
repz
loop
cmpsl
xchg
xchg
and
out
mov
hlt
rorl
cld
lea
mov
cmp
out
and
push
ret
outsb
hlt
arpl
add
mov
jl
mov
mov
push
push
jmp
repz
cmc
out
sub
bound
clc
ss
repz
out
and
sbb
xor
mov
jp
stc
imul
divl
jecxz
sti
mov
dec
clc
je
ret
out
mov
mov
add
orb
sub
loope
mov
add
sbb
jl
xor
lods
xchg
clc
jmp
jmp
js
fdivs
repz
testl
cld
sarl
sub
and
jecxz
adc
inc
enter
lods
repnz
xlat
jns
lock
jbe
mov
shlb
incb
mov
leave
loopne
enter
aam
ret
lock
and
dec
pop
cli
lods
jne
neg
mov
es
jl
ljmp
imul
enter
aam
sub
ss
mov
jecxz
out
and
xchg
loope
imul
jns
inc
inc
sub
out
and
push
icebp
outsb
mov
ffreep
dec
inc
xor
hlt
hlt
ret
jns
lock
and
rolb
inc
sub
mov
shlb
lock
cmpsl
mov
jecxz
clc
mov
dec
ja
lret
mov
ret
ret
xlat
stc
out
xor
sub
sar
mov
adc
std
xor
mul
icebp
xor
leave
jb
arpl
jl
icebp
cmpsl
iret
mov
and
push
outsb
mov
inc
fadds
add
loopne
loope
xchg
ljmp
loop
cmp
add
icebp
sbb
jg
cmp
stc
clc
jb
les
push
fxch
jmp
frstor
mov
inc
nop
mov
mov
lock
in
jl
ret
jmp
lcall
mov
pop
outsl
mov
push
cwtl
mov
lock
xorb
cmp
cltd
inc
fistpl
stos
xor
imul
inc
imul
mov
nop
mov
js
mov
mov
out
imul
in
mov
js
gs
cmp
insb
pop
loope
icebp
mov
out
sti
lea
jg
jmp
repnz
inc
mov
fbld
movsl
xchg
daa
out
call
sub
ds
xor
rclb
jno
sub
mov
jno
gs
popa
repnz
aam
and
int3
hlt
repnz
lods
enter
out
in
stos
shl
mov
repnz
or
loope
xchg
out
pushw
ret
ja
push
mov
push
cmp
not
test
clc
enter
shr
xchg
out
bound
outsl
jmp
repz
jge
dec
push
xor
sub
imul
gs
dec
in
aam
xor
xlat
push
mov
mov
in
mov
out
sub
mov
je
push
push
in
mov
test
mov
and
insb
add
hlt
and
jl
pop
ljmp
jne
popf
addl
in
loope
inc
cmp
ss
lds
dec
ja
pop
outsl
aaa
add
popa
call
mov
mov
mov
push
sbb
xlat
not
clc
enter
enter
push
fldenv
xor
scas
cmp
aam
push
and
xchg
out
imul
dec
imul
add
mov
imul
cld
add
xchg
and
cmc
xchg
sti
bound
clc
les
mov
mov
imul
movsl
add
fistpll
xor
lock
std
stc
ljmp
mov
dec
in
sub
pushl
out
inc
rcrl
push
dec
lods
cwtl
mov
sub
push
scas
out
popf
in
cs
dec
push
popf
data16
stc
mov
sub
jl
imul
cmp
jmp
cli
and
xchg
out
lret
xor
out
xor
out
xor
lret
add
hlt
out
mov
dec
xor
pop
addr16
jl
scas
or
enter
push
out
jo
mov
stc
lods
ljmp
jno
xor
imul
jl
shll
add
sub
cli
call
js
dec
mov
add
repnz
repz
push
pop
jmp
out
xabort
ljmp
nop
push
clc
repnz
mov
decb
leave
xor
adc
sub
imul
call
mov
pop
in
test
cmp
mov
ljmp
xchg
out
iret
gs
push
stos
push
jmp
or
jnp
sti
xchg
arpl
sar
mov
cli
ret
les
mov
out
mov
loop
in
hlt
sub
shl
out
fiaddl
and
pop
shrl
mov
add
dec
fimull
cmp
js
jae
hlt
sti
int3
add
or
mov
add
jmp
ret
mov
xchg
add
shlb
into
aam
cmp
out
mov
int
sub
add
les
fistpl
cmpsb
icebp
mov
divb
and
push
ljmp
out
into
and
aad
jno
lock
sbb
stos
fdiv
aam
scas
push
outsb
js
lret
xchg
cmp
dec
test
repnz
ret
ret
ljmp
jp
xor
xor
cld
xchg
fisubs
insl
adc
xor
dec
clc
movsl
jecxz
pushf
loope
lock
inc
shll
ret
int
jno
fdivrl
hlt
sub
mov
inc
cmp
int
jmp
call
out
out
mov
fstpt
out
mov
enter
ljmp
ret
stos
test
and
iret
mov
mov
mov
and
repnz
loop
sarl
add
mov
xchg
mull
clc
jbe
jb
int
or
loope
push
ret
outsb
nop
int3
shll
add
call
int
dec
je
stc
mov
lock
rcl
xor
and
xorb
js
enter
xchg
bound
ss
sbb
jns
cltd
mov
repz
std
sti
ret
add
cld
pop
push
cli
xlat
sahf
push
or
jns
mov
fldcw
out
imul
ret
rcrb
sub
repz
sti
lds
fidivs
mov
push
push
jae
lods
cld
pusha
inc
pusha
ret
lock
mov
push
cmc
out
or
mov
dec
lods
decb
leave
ret
iret
mov
xor
add
lods
mov
mov
into
and
push
xlat
outsb
mov
testb
insb
movsl
repz
mov
sar
roll
in
lahf
std
ja
cld
stos
enter
test
repnz
lock
into
int3
jl
adcb
add
int3
adc
iret
lea
lods
jo
cld
sub
loope
jne
js
push
jmp
out
stc
test
shl
repnz
shrb
das
loope
mov
je
xor
xchg
jns
or
shr
cmp
dec
or
cli
in
arpl
cmp
gs
xchg
test
or
je
inc
hlt
adc
fwait
xchg
mov
lock
dec
out
shl
stos
sar
lds
call
pop
test
jp
call
call
loop
xor
rol
lret
pop
and
popa
mov
loope
shrb
sub
mov
jb
inc
imul
ret
jno
cmc
inc
fcmovnbe
add
fcom
fld1
loopne
lret
call
loopne
mov
push
add
xor
repnz
mov
popa
sub
pop
fnstenv
shll
push
enter
outsl
hlt
xchg
xor
cmp
inc
into
lds
sar
sub
repz
int3
cld
loope
les
lds
dec
xor
je
and
inc
sub
cld
outsb
pushf
imul
insb
dec
fisttps
mov
add
inc
xorb
or
aad
rcl
push
mov
add
jo
clc
sub
in
pop
in
outsb
sbb
or
push
mov
adcb
popf
ljmp
mov
stos
xchg
mov
stos
mov
in
mov
xor
les
adc
xor
rcrb
out
rcl
loop
subb
cld
stc
xor
hlt
and
filds
andl
rol
jmp
sub
inc
leave
xchg
repz
xchg
pop
sub
ljmp
das
scas
imul
fs
fsubp
hlt
out
subb
mov
xor
lods
jne
clc
jns
mov
frstpm(287
popa
repnz
fisubrs
cld
mov
mov
js
in
dec
push
push
push
in
xchg
mov
gs
jbe
sbb
iret
dec
mov
rcrb
loop
aam
mov
inc
int
sub
jno
stos
call
mov
aam
lods
loopne
mov
ret
hlt
sarb
push
out
sbb
adc
stos
icebp
lock
out
lock
pop
shll
lock
cld
cmp
mov
je
hlt
sub
out
lock
dec
sti
icebp
sub
call
hlt
inc
fwait
inc
inc
fidivl
adc
divb
xchg
out
sub
dec
jbe
clc
roll
icebp
jg
jmp
test
mov
jecxz
test
lods
inc
out
jmp
mov
hlt
stc
clc
ret
aad
inc
test
enter
je
sahf
outsl
xor
dec
flds
leave
jmp
lret
and
mov
bound
mov
inc
imul
fidivs
hlt
std
movsl
ret
aam
mov
lods
and
ljmp
sti
stos
ret
enter
jnp
iret
xor
mov
in
cmp
dec
sbb
jg
mov
popf
hlt
mov
or
clc
mov
ret
rclb
cmc
xor
push
iret
fld
jns
mov
cli
jb
addr16
in
repz
lock
and
std
or
xor
repz
bound
cmp
rcrb
mov
dec
shl
cmp
je
ret
aam
clc
and
sub
pop
fs
repz
shl
xor
shll
lcall
lock
fcomps
mov
fcmovnbe
mov
cmp
hlt
and
inc
sub
cli
dec
shll
jecxz
jnp
movsb
xlat
in
insl
bound
xor
jecxz
aad
xchg
pop
adc
push
stos
cld
out
jne
push
mov
cmp
mov
pushf
jno
repnz
mov
mov
out
xlat
rclb
in
mov
fbld
and
jl
adc
inc
mov
adc
mov
lret
adc
xchg
jmp
sar
out
mov
fdivrs
movsb
arpl
pop
ret
inc
loope
jbe
push
out
js
or
sarb
ss
mov
popa
mov
int3
jl
int3
push
mov
daa
loope
push
repnz
out
out
push
aam
mov
or
and
mov
push
mov
ljmp
jmp
mov
xor
stc
cld
in
mov
in
adc
cmp
rcl
aam
jmp
negl
ret
shll
cli
ret
stc
mov
sub
xor
jmp
lret
insl
mov
pop
stc
xor
jg
jns
or
out
xchg
cmp
jo
lods
jle
sbb
add
js
or
add
jecxz
out
inc
xor
and
cmp
xor
scas
mov
mov
imul
xor
out
inc
xor
and
hlt
or
jae
jp
fstpt
lock
push
sar
mov
in
push
ret
and
repz
in
jle
xor
push
xor
sarb
push
popa
push
popa
bound
icebp
pop
es
lcall
loop
ljmp
sub
imul
push
dec
pop
int
fyl2xp1
ret
ficoml
mov
int
out
mov
xchg
test
ja
xchg
mov
xor
hlt
jns
xchg
shl
mov
push
mov
and
fadds
out
mov
and
lock
fwait
int3
aad
lret
fwait
pop
xlat
clc
ljmp
inc
lock
shrl
negl
inc
test
in
sub
mov
jo
out
imul
imul
mov
test
sub
lock
push
out
lods
jl
sub
pop
daa
fdivl
sarl
rcll
dec
sub
pop
daa
fdivl
sarl
rcll
sarl
lahf
mov
cmc
movsl
dec
sub
mov
insl
shlb
sarl
rcll
dec
sub
pop
daa
fdivl
sar
mov
push
movsl
dec
sub
mov
sar
cmp
sti
cmp
push
movsl
dec
xor
jo
xor
push
test
sub
lock
pop
daa
fdivl
jl
sub
pop
daa
fdivl
sarl
rcll
dec
sub
pop
daa
fdivl
sarl
rcll
rol
test
incb
and
imul
repnz
mov
sarl
rcll
dec
sub
mov
daa
fdivl
sarl
sub
cld
aad
xor
fs
inc
in
xchg
and
repz
push
mov
loope
test
sub
out
mov
arpl
and
hlt
test
jns
sub
mov
icebp
imul
imul
loope
movl
test
out
adc
mov
and
shr
imul
arpl
push
push
shll
add
mov
ret
scas
insl
jne
repz
sub
in
stos
addr16
hlt
jmp
shl
jne
hlt
daa
mov
cmc
cltd
mulb
mov
hlt
clc
fs
out
inc
cltd
and
mov
stos
stc
pop
lret
loope
mov
inc
lods
mov
enter
sub
mov
xor
cmp
dec
je
sbb
rorl
lods
hlt
lock
rep
hlt
or
mov
jmp
and
out
test
lods
dec
sub
sub
arpl
mov
jne
scas
dec
push
popa
je
stos
insl
outsl
sti
out
insl
mulb
test
in
pop
fdiv
dec
jo
jne
and
enter
out
dec
arpl
push
or
jmp
pushf
sub
xor
scas
rcll
hlt
push
imul
stos
cmpsl
dec
test
jmp
in
mov
lock
dec
cld
jg
jmp
add
jmp
pop
ja
add
stos
lret
lock
out
out
into
xchg
arpl
call
loopne
hlt
lret
xchg
repz
stc
jb
pusha
lcall
mov
repz
fsubr
mov
adc
fiadds
std
imul
ret
enter
fnstsw
ds
or
mov
add
jb
fidivrl
or
jno
push
insl
out
insb
cmpsl
xor
js
xlat
pop
mov
push
out
mov
hlt
xchg
divl
mov
rolb
sbb
popf
jno
popf
xor
lock
cld
clc
mov
jno
fists
lret
fists
inc
fwait
jle
pop
stc
in
mov
xchg
fists
stc
ret
and
lods
and
pop
xlat
call
daa
mov
add
jecxz
loope
mov
fsubrp
xor
stc
inc
call
shl
mov
out
xchg
iret
xchg
and
cli
hlt
imul
lods
push
ret
jmp
dec
in
rcl
sbb
fbld
mov
bnd
in
aam
fst
lods
jecxz
js
mov
das
mov
idivl
shl
mov
inc
flds
stc
in
fucom
jl
fwait
cli
flds
mov
inc
cld
icebp
insb
out
mov
loop
fsubrl
inc
sub
rcr
out
fidivl
mov
loop
xor
movsl
loop
jmp
mov
out
lock
imul
clc
in
lods
sti
xor
lcall
enter
popa
mov
out
cli
mov
jns
nop
dec
mov
test
icebp
fcmove
jae
int3
jbe
stos
sbb
jbe
xchg
shr
fstpl
out
fidivrl
pop
test
test
jecxz
ljmp
loopne
adc
popa
out
outsb
sub
rcr
add
icebp
jb
push
mov
sarl
fsubr
mov
shl
xchg
pop
sahf
loop
jo
int
fdivrl
push
sti
pop
icebp
inc
negb
imul
cmpb
pop
and
std
dec
sti
aas
cmpl
mov
gs
mov
push
fsub
popf
std
fmuls
leave
shl
in
std
js
cmpsl
cltd
fs
cmp
ret
std
imul
loopne
imul
loope
out
popf
jae
pop
mov
mov
mov
fsubp
add
jo
cwtl
mov
icebp
jno
fndisi(8087
aaa
hlt
fldl
cmp
addr16
orb
popf
lds
mov
in
mov
mov
clc
loop
sarb
jmp
sub
xor
in
mov
repz
repz
cld
rol
aam
pop
sub
fwait
cmp
stos
aas
icebp
adc
and
in
pusha
mov
adc
jl
stos
dec
popa
sti
push
jge
mov
aad
mov
push
xchg
loope
and
jae
inc
call
push
jno
shl
mov
sub
mov
lock
lds
arpl
fstl
fiadds
pop
js
bound
aam
loope
mov
loopne
iret
mov
sar
xorl
jp
xor
jae
in
dec
insl
ret
fsub
loop
lods
xor
mov
add
jno
sbb
jecxz
iret
outsb
call
pop
shr
out
mov
fadd
call
sub
bound
or
inc
ret
test
pop
push
mov
xor
mov
fstpt
in
loope
rcl
fisubrs
imul
sub
jg
popa
or
aad
loope
insl
out
xchg
leave
xor
in
test
fcmovnb
fs
aad
xlat
mov
mov
mov
sbb
inc
xlat
in
add
pop
inc
jno
fisubl
jp
imul
fcomps
fsincos
clc
jmp
fs
in
fimull
add
jnp
movsl
fsubl
rcrl
repz
mov
and
fidivrl
xchg
sub
popa
push
daa
push
gs
adc
out
jle
xlat
inc
imul
jae
out
das
pop
add
and
mov
mov
jae
pop
in
ds
xor
mov
inc
xlat
fucomi
mov
cmp
pop
daa
in
push
sub
insb
aad
in
pop
dec
clc
mov
or
pop
addr16
xchg
in
out
repnz
ret
fcompl
push
sahf
dec
nop
jl
lods
pop
lods
sub
pop
pop
sub
push
loope
inc
fdivrp
mov
ret
sahf
shll
fsubrl
int3
shr
out
bound
loopne
fld
jecxz
repz
in
insl
int
mov
sub
roll
fs
loope
and
jecxz
xor
mov
js
lcall
addr16
popa
cltd
iret
rol
outsb
mov
andl
or
fidivrl
jle
xor
sub
loop
push
cltd
mov
xor
jecxz
jge
cmp
jl
add
xor
jo
jae
insb
shll
pop
out
cmp
add
xor
addr16
and
or
pop
jno
cmp
lret
jmp
dec
loopne
xor
jb
stc
jno
int
mov
mov
cli
fsub
ljmp
push
sti
insb
add
ds
jecxz
xor
sbb
jne
dec
popa
adc
mov
sarl
cmc
mov
jnp
in
in
push
adc
fcmovbe
add
fldenv
loopne
test
mov
mov
movsb
gs
shl
xchg
or
repnz
in
int3
lds
and
mov
mov
test
out
dec
dec
xorl
mov
pop
and
repz
mov
mov
mov
int3
int
adc
xchg
jo
xchg
into
sbb
jmp
test
mov
test
and
jo
mov
in
xor
cmp
mov
cmpsb
fsubrs
int3
aad
jecxz
lret
push
jnp
pop
or
xor
ja
loopne
insb
notb
fsubrl
cld
fs
add
stos
ljmp
cs
and
cld
fstl
jecxz
mov
jecxz
pop
in
mov
and
mov
and
gs
outsb
in
movl
inc
pop
in
shl
rorl
dec
incb
lock
repz
aam
enter
roll
data16
je
push
fcomps
jb
inc
out
or
into
push
insl
aam
sub
mov
sbb
and
shl
mov
popa
in
inc
jecxz
mull
lock
lock
bound
push
repz
dec
stc
arpl
fs
sbb
cmpsb
cli
dec
inc
and
je
addr16
pop
push
and
push
cld
sbb
cld
push
aad
push
movsl
fwait
cmp
xor
std
movsl
in
jne
and
or
mov
icebp
pop
cmpsb
mov
in
xchg
mov
cmpl
push
bound
loope
je
mov
mov
add
call
mov
jp
ficoms
in
push
jae
push
sti
jmp
fld
jae
neg
mov
pusha
jecxz
pop
cmp
aaa
mov
std
popa
push
jl
and
fs
lock
fdivrp
cmpsb
mov
imul
ss
xor
test
mov
xchg
sbb
mov
gs
push
es
and
int
repnz
push
push
mov
sub
pop
enter
jno
sub
ret
scas
int
inc
scas
mov
je
hlt
sub
test
push
fists
jns
pop
test
std
ljmp
xchg
les
cli
push
lret
ret
icebp
and
in
dec
sti
clc
ret
dec
rol
jne
jge
je
xchg
hlt
popa
jge
test
xchg
shll
out
fbld
stos
es
jns
ljmp
sub
push
and
dec
cmc
push
xor
mov
in
dec
shlb
imul
xor
mov
mov
movb
sarb
bound
mov
movsl
mov
popf
sarb
popa
arpl
xlat
lea
negb
dec
sub
lods
stos
hlt
inc
and
imul
shlb
imul
outsb
clc
mov
movsl
add
shll
rol
test
sahf
pop
in
repz
hlt
loopne
xlat
sub
pop
inc
int
jb
sub
popf
jecxz
les
out
or
push
xchg
aam
loope
lock
jge
insb
xor
inc
dec
out
mov
pop
pop
xor
and
fcmovnbe
xor
jno
jb
fstpt
shr
insl
or
jecxz
inc
in
mov
lods
rcrb
xor
call
mov
pusha
mov
popa
pop
cld
test
in
out
pop
push
adc
and
ret
and
mov
arpl
mov
cld
insb
jecxz
adcb
popf
icebp
mov
loope
cmp
add
jmp
jnp
inc
cltd
cmpsb
dec
jns
arpl
fwait
mov
push
jns
lahf
popa
mull
cmp
cmp
mov
clc
cmpsb
push
call
in
add
frstor
xlat
daa
int
jecxz
jl
clc
incb
test
mov
mov
rcrb
mov
fistpl
push
or
push
movsl
cmp
or
or
out
inc
mov
dec
leave
mov
fcompl
cmpsl
cli
push
rcl
push
or
mov
mull
mov
inc
test
dec
iret
mov
popa
xchg
ret
push
js
mov
scas
in
imul
shl
cmpsl
jnp
push
dec
mov
insb
lret
sahf
repnz
lds
cmc
leave
jl
sti
mov
dec
jecxz
or
mov
adc
daa
sub
cmpsl
es
cmp
dec
in
js
cmpsb
jae
imul
lcall
shl
cmpsb
int3
xor
iret
rcr
fldt
mov
lds
icebp
in
lret
lcall
jnp
jno
xchg
es
jecxz
xor
jmp
jmp
push
jne
cltd
loop
clc
fbstp
adc
add
stc
add
jae
ljmp
imull
leave
cmp
js
fldcw
es
cmpsl
jb
movsl
bnd
das
movsb
test
cmp
daa
std
in
xchg
shll
sti
out
inc
fwait
in
insb
mov
popa
cmpsl
cmp
dec
subl
nop
cli
mov
and
inc
jp
mov
sbb
and
ret
xor
ret
fistl
or
cmp
lods
jmp
insl
sbb
sbb
test
popa
ja
mov
cmp
imul
add
sub
pop
aaa
popa
jae
dec
incb
mov
xchg
loope
mov
sub
cmp
rol
aam
out
mov
jne
and
cmp
dec
enter
cmp
cmpsb
xchg
subl
inc
jp
xor
sub
or
call
sbb
fistl
subl
fldt
or
pop
jno
sti
pop
add
gs
ret
push
push
pop
mov
in
mov
subb
inc
jmp
xchg
imul
icebp
in
call
mov
int
mov
shlb
lret
in
jecxz
loope
in
ds
imul
lds
sub
adc
orl
pop
jl
je
add
inc
addr16
adc
out
cmpsb
ljmp
and
xor
sti
ljmp
adcl
jne
pusha
mov
lods
je
jbe
or
repnz
mov
idiv
push
and
sub
jl
lret
clc
jmp
xchg
scas
jo
out
mov
lock
jno
js
loope
insl
fstpt
jecxz
inc
les
dec
hlt
dec
lret
jl
mov
add
sti
cmp
mov
lahf
rclb
mov
pop
fmuls
iret
imul
in
sbb
lds
icebp
insl
iret
cmp
fcmovb
cld
scas
push
jmp
dec
cmp
and
jmp
mov
es
jle
ds
xchg
enter
jp
jnp
in
fstpt
xor
inc
and
test
lret
test
xor
mov
stos
pushf
fisubrl
shl
hlt
add
jae
cmp
jecxz
cmp
xchg
push
das
int
ja
loop
out
cli
lret
pop
sub
or
push
cmp
jmp
jne
divl
xor
xor
push
xor
les
lret
xor
fcomps
mov
in
pop
and
mov
and
lods
lods
mov
and
outsb
push
shlb
popf
mov
adc
add
mov
loope
or
loope
jnp
cs
dec
jmp
fwait
sar
fwait
mov
dec
xchg
loop
int3
movsb
pop
iret
sbb
cli
pop
sub
and
insl
in
aam
call
pop
cmc
bound
and
cmc
or
jp
cmp
das
pop
loopne
add
dec
fs
iret
or
cs
daa
mov
mov
push
push
scas
idivl
out
rcrb
ret
sar
jno
jb
jns
enter
add
rclb
js
xor
jno
out
jecxz
sub
daa
push
add
fs
bound
or
jno
lods
popf
stos
and
out
sub
gs
jnp
decb
leave
clc
fildl
mov
stc
mov
xor
sub
xlat
repnz
ja
xchg
cmp
cmc
xor
push
dec
stc
mov
mov
xchg
cmp
shll
fsubrl
inc
or
pop
xor
sti
das
adc
ret
in
out
stc
daa
mov
and
es
out
xlat
push
andl
mov
movsl
mov
add
mov
es
mov
dec
fucomp
andl
aam
ljmp
out
sub
fnstsw
and
lcall
dec
hlt
bound
outsb
adc
mov
dec
cmp
popa
jbe
and
popf
in
jae
mov
adc
leave
insl
std
call
int
mov
aad
push
inc
fwait
xor
jmp
aad
pop
xlat
gs
insb
xor
inc
add
cmp
push
ds
nop
jecxz
xor
dec
jp
push
sbbb
add
and
aaa
out
imul
and
daa
lret
sub
mov
leave
pop
test
icebp
rclb
cmp
jl
pop
and
insb
sti
stos
aam
sub
jne
sti
pop
ljmp
cmpsl
xlat
aad
call
fwait
push
scas
cld
cmpsb
push
sub
pop
mov
sub
dec
idivl
push
ljmp
repnz
rclb
adc
xchg
insl
jmp
movsl
and
call
cmp
aad
mov
or
jno
int3
les
in
rcl
dec
mov
pop
test
iret
jecxz
mov
out
outsb
repz
pop
dec
jg
or
dec
call
fildll
rcrl
enter
arpl
add
divb
fstpt
jmp
scas
testl
xchg
popa
jp
mov
adc
jbe
roll
push
test
movsb
shll
dec
or
js
sub
inc
addl
push
icebp
xchg
inc
sub
mov
pop
and
adc
insb
mov
mov
push
in
stc
test
shr
lods
sub
call
dec
fs
leave
cli
sub
cwtl
jne
jecxz
xorl
popa
xorl
out
fcomi
jge
mov
mov
out
fdivs
or
cmp
xchg
movsl
and
pushf
ja
fisttps
inc
jmp
xchg
ret
test
sti
rol
mov
sti
mov
rol
call
imul
dec
jne
nop
mov
das
aam
lret
jecxz
ljmp
adc
cmpsb
imul
aad
cwtl
fdivrl
xor
aam
loope
divl
das
bound
xor
fcmovnb
adc
and
adc
push
movsb
pop
aam
in
lcall
lods
mov
inc
out
mov
sub
sti
out
add
les
mov
aam
dec
mulb
cltd
ds
stc
cs
jecxz
jae
or
in
mov
and
orb
jb
jge
iret
sub
cld
jl
dec
xor
sbb
es
mov
and
or
js
enter
inc
aaa
out
mov
cs
cmp
repnz
aam
xor
std
hlt
push
repnz
push
xor
sub
add
lahf
sub
jo
xor
jmp
inc
xchg
add
pop
add
jae
mov
stos
aam
inc
mov
push
test
enter
add
fldenv
int
loop
mov
sub
lds
mov
jg
imul
dec
pop
aam
imul
add
ds
sub
js
int
mov
and
imulb
movsb
das
cli
lahf
in
jmp
mov
ss
fcmovbe
pop
jnp
xchg
sti
mov
rcr
mov
scas
xlat
adc
fadds
movsl
into
outsl
dec
mov
frstor
fstpt
les
fs
stc
lods
pop
jg
and
movb
loope
push
gs
or
add
cltd
in
and
jmp
int
call
jmp
sub
sbb
fidivs
mov
push
inc
leave
lea
movb
cs
mov
jno
dec
fs
imul
and
in
push
cs
cs
roll
fcmovnbe
leave
push
cmpsb
xor
adc
test
fs
clc
mov
mov
push
shlb
xor
les
rol
lods
lods
jo
mov
jb
clc
xchg
xchg
popf
cmpsl
cwtl
rcl
xor
push
idiv
ret
inc
inc
inc
and
js
addl
jbe
xor
clc
js
fldt
fucomp
mov
out
jnp
stc
insb
in
shl
sti
cli
out
cmp
mov
adc
lods
les
mov
pop
fcmovu
clc
insl
mov
loope
sub
js
jmp
das
test
pop
les
test
addr16
dec
adc
sbb
mov
mov
js
pop
lods
lock
stc
ret
add
mov
cld
test
cmpsl
mov
in
adc
clc
mov
adc
cmp
xchg
push
movsb
jmp
xor
int
imul
cmc
icebp
xchg
mov
repz
push
test
mov
add
mov
sbb
xor
lahf
imul
jno
mov
fs
dec
xor
lods
mov
inc
xor
les
inc
adc
repz
test
sub
je
cs
shll
xor
in
jl
pusha
outsl
add
pop
aad
stos
into
cs
push
jne
add
sti
add
std
sbb
lret
fldt
orb
and
fadd
add
out
int3
stos
int3
aam
mov
jnp
fistl
push
jnp
fcmovb
pop
inc
leave
dec
je
mov
cmpsl
add
pop
mov
dec
aaa
and
inc
or
mov
test
jmp
stc
xor
inc
pop
cld
outsl
ret
jne
sub
xchg
xor
lea
cli
sub
mov
inc
pop
xorl
aas
std
cmp
in
in
fldenv
iret
loope
dec
std
lock
pop
add
clc
mov
mov
test
iret
adc
mov
imul
sti
inc
fldt
mov
sub
popa
test
mov
das
test
fsubrl
jmp
mov
jno
add
not
add
test
adc
add
test
jo
pushf
inc
mov
or
shll
mov
das
jl
fnstenv
mov
je
imul
aam
cli
cli
stos
shlb
lock
lock
dec
std
pop
jl
les
xchg
jg
and
mov
test
pop
jecxz
ret
mov
notl
mov
test
xor
insb
xchg
mov
mov
cmp
leave
xchg
mov
add
mov
fnstenv
push
test
pusha
push
popa
js
inc
push
popa
idiv
cmp
mov
pop
mov
aam
in
call
repnz
pop
mov
icebp
in
fldt
loop
lds
dec
sbb
jno
cmc
jge
scas
loopne
filds
mov
sub
les
ret
dec
and
shll
ds
pop
lret
ret
mov
cmpsl
repnz
inc
sub
in
in
leave
shlb
icebp
repnz
fisubrs
cld
sbb
call
fndisi(8087
shll
hlt
fnstsw
xorb
lret
in
rorl
pop
jecxz
popa
in
lods
fsts
in
roll
jbe
mov
adc
cmpsl
fisttpl
in
cs
jnp
jb
leave
insl
cld
dec
leave
repz
mov
sub
jne
pop
mov
nop
lds
and
jb
daa
loope
add
sbb
aam
mov
in
aam
data16
popf
jno
or
in
dec
fcompl
lahf
push
jne
lret
or
addr16
adc
jecxz
lods
push
fisttps
sti
jb
add
mov
js
adc
fisttpl
cltd
insl
xchg
xor
inc
lahf
sub
add
popf
xor
repz
lret
pop
insl
mov
inc
sti
adc
stos
int3
pop
orl
dec
and
ret
enter
mull
aam
dec
std
mov
xor
inc
pop
push
rorb
mov
dec
loop
sub
test
in
pusha
or
add
out
push
jae
mov
inc
stc
rolb
push
pop
push
stos
cmp
loope
es
mov
xor
pop
pusha
ljmp
mov
mov
stos
mov
mov
mov
and
pop
sub
insl
dec
popf
mov
rorl
shll
adc
mov
sub
in
sub
mov
daa
jno
hlt
jl
rcr
mov
int3
and
ja
rcrl
aam
lods
in
nop
call
lret
enter
out
rol
and
shr
insl
cli
mov
sahf
adc
lock
lea
push
stos
in
enter
fsubr
xchg
and
ficoms
push
shrl
mov
sti
sbb
inc
iret
push
jo
push
pop
out
ffree
bnd
clc
icebp
lock
popa
mov
es
ror
js
popfw
and
es
rcll
cmp
cmpsb
arpl
das
cld
dec
out
hlt
jns
loop
test
clc
bound
mov
cmp
jl
ror
inc
push
nop
push
xchg
fwait
daa
decl
insb
aas
into
xlat
inc
mov
aas
xor
out
jecxz
inc
popa
ss
dec
xchg
call
bound
orb
inc
outsb
repz
clc
les
jge
vorpd
fwait
xor
loope
push
sub
in
fsub
dec
adc
or
xor
leave
data16
and
inc
inc
and
outsb
jno
inc
es
mov
in
jmp
mov
or
movsb
loope
ret
xlat
mov
and
ficoml
sbb
and
inc
jmp
pop
jecxz
in
push
mov
jg
ror
fiadds
ficompl
jnp
loopne
lret
jb
jl
stc
or
push
push
popa
jnp
movsl
sahf
shlb
fwait
mov
mov
aam
add
aas
and
mov
addr16
and
fistpl
outsb
mov
xchg
xchg
arpl
mov
add
cli
pop
pop
mov
testl
stos
int
sti
pop
leave
inc
cmp
out
push
aaa
shll
xor
xchg
pop
jl
mov
dec
adc
rorl
fidivrl
fildl
pop
push
arpl
and
jge
gs
in
and
aam
xchg
call
incb
ret
adc
movsl
cmp
xor
push
xchg
or
adc
in
mov
jmp
ja
test
in
repz
in
sarl
shl
test
mov
mov
cmpsb
or
mov
nop
and
dec
fs
in
popf
movb
in
rorb
lret
jle
add
dec
and
pushf
test
push
adc
xchg
jnp
adc
mov
jmp
add
mov
cld
mov
cmp
jmp
je
and
push
sbb
hlt
lods
mov
adc
sub
push
fs
outsl
loope
stos
jae
push
lret
mov
outsl
repnz
adc
xor
mov
leave
sti
in
inc
stos
mov
int
push
mov
fildll
jecxz
mov
inc
das
and
mov
inc
push
sub
into
push
leave
sub
insl
movsb
aam
mov
popa
mov
enter
dec
sub
inc
aaa
or
pop
mov
fimuls
je
adcb
mov
pop
cmp
aam
ror
sbb
pop
in
shl
xchg
call
cmp
fldl
cmp
in
out
add
or
cld
cltd
loopne
test
inc
mov
adc
add
jge
addl
in
iret
repz
adcl
popa
call
mov
mov
dec
stos
jne
in
mov
cmpsl
fs
les
dec
mov
repz
mov
jmp
cmpl
and
xor
dec
xchg
stos
int
jmp
xorl
ret
mov
mov
sub
movsl
in
imul
imull
mov
cld
mov
xchg
mov
gs
hlt
fistpl
mov
subl
xor
mov
mov
ret
mov
shll
out
imul
mov
pmulhuw
mov
mov
mov
sti
addl
inc
mov
push
in
push
bnd
scas
pop
sbb
fs
pop
out
mov
mov
cmpsl
repz
idivl
jg
ret
test
in
inc
shlb
shll
in
pop
repz
ret
jecxz
mov
sti
mov
mov
jnp
jno
jne
hlt
jns
int3
lret
lahf
push
or
push
in
pop
hlt
lahf
cmc
fldt
mov
dec
test
pop
xchg
inc
mov
loopne
mov
lea
in
sbb
xchg
lret
iret
movsb
aam
mov
out
popf
jl
das
or
lret
pop
ret
out
fstpt
or
popa
imul
outsb
dec
cld
or
sar
lock
nop
dec
inc
jno
pusha
push
pushf
cmp
mov
int
or
push
mov
dec
fwait
sub
pop
repnz
cmp
rcl
pop
addb
adc
cwtl
lds
loop
mov
inc
int
sti
movsb
or
push
out
xlat
lahf
mov
fldt
lret
int3
leave
fldcw
jne
mov
cmp
repz
in
repnz
lock
xor
jmp
cmp
popf
ror
outsl
xchg
stc
push
shll
push
je
pop
scas
stos
js
dec
popf
jmp
cmp
and
mov
lods
or
sbb
imul
addr16
enter
push
sub
in
jl
cmpsl
adc
xchg
pusha
lea
sbb
fwait
cmc
ficoml
out
push
push
rcl
and
cmc
pusha
lea
in
pop
idiv
cmp
sub
xchg
dec
or
sti
aas
add
daa
call
pop
dec
and
ret
in
xchg
mov
fwait
aaa
movsb
mov
std
scas
jecxz
jne
and
das
jl
sbbl
in
push
push
inc
mov
xchg
shll
fstpt
daa
sub
stos
lds
nop
in
mov
add
lahf
xor
mov
sbb
xchg
push
jmp
and
enter
sub
sti
inc
jo
ret
pop
out
mov
fwait
mov
mov
cmp
and
cmp
xchg
jl
test
sbb
mov
loop
testb
xchg
clc
jecxz
dec
adc
xlat
sti
repz
pushw
call
cltd
and
mov
in
jg
aas
imul
rorl
outsb
xchg
xorb
lret
mov
xor
int
sti
lods
pop
lods
sub
dec
popa
lods
lea
fdivl
shlb
inc
or
loopne
in
mov
lock
or
fadds
mov
pop
adcl
je
fld
cmp
rcrb
rcr
rol
and
int
push
int3
inc
aam
lods
fldt
mov
fwait
xchg
sub
mov
xchg
push
pop
test
mov
pop
dec
js
mov
adc
fistl
fwait
ljmp
shll
jecxz
test
dec
mov
lret
cmc
leave
fisttpll
pop
mov
sti
sub
fistl
lds
stc
sahf
popa
insb
and
scas
popa
in
jmp
or
test
and
out
in
mov
sbb
cli
nop
cwtl
lea
mov
imul
fdivp
inc
xor
out
in
lret
stc
in
fwait
mov
jmp
out
dec
ret
push
dec
outsl
lret
inc
cwtl
scas
test
out
cmc
repnz
sti
pop
loop
lret
in
or
jo
push
rorl
mov
mov
loope
out
fdivr
popf
sbb
pop
movsl
push
fwait
dec
test
mov
fistps
arpl
add
out
mov
fucom
jmp
dec
pop
jb
imul
scas
loopne
fisttpll
fisubl
rol
xchg
das
fstpt
xlat
in
int
outsl
fucomip
xlat
push
fst
jmp
xorb
movsb
add
rcr
and
cmc
sbb
mov
lret
sub
addr16
push
clc
mov
sub
mov
add
xchg
adc
mov
pop
stos
fisubl
xor
ljmp
mov
fistl
sub
jl
add
xor
push
or
dec
cmc
fimull
push
mov
cmc
mov
iret
lock
not
mov
loop
cltd
push
std
out
fsubl
mov
stc
push
in
pop
int
dec
and
pop
xor
jecxz
rcrb
js
mov
in
jge
inc
and
jge
sub
sub
in
rcrb
stc
cld
mov
call
stc
loop
jg
imul
xchg
push
stos
fwait
cmp
pop
xchg
clc
pop
in
adc
mov
sbb
outsb
mov
mov
out
mov
add
mov
fnstsw
outsb
lret
pop
jmp
scas
jmp
nop
fpatan
cmc
cmp
popa
or
mov
test
leave
vandps
pop
movsl
xchg
stos
lock
dec
loop
or
ret
div
stc
push
xchg
jl
icebp
jno
insb
jns
repz
push
dec
or
ret
mov
std
fcomp
xchg
sub
add
mov
ret
fbld
aam
push
pop
mov
cmpsl
out
pop
movsl
adc
out
les
fnsave
pop
lods
gs
jne
xchg
lahf
dec
fwait
test
push
aad
xchg
jno
fwait
loop
imul
shr
mov
sbb
lods
pusha
xchg
jne,pt
sub
cmc
sub
xchg
rol
mov
or
stc
mov
and
lahf
test
enter
mov
mov
fwait
mov
sahf
mov
mov
sub
cmp
push
hlt
ja
test
aas
clc
mov
fidivl
adc
insb
fxtract
inc
decl
stos
lock
mov
addl
ret
insb
xor
cmp
ror
jp
clc
icebp
pop
movsb
in
mov
repz
ds
pop
inc
add
shrb
sub
popa
stos
gs
fwait
data16
and
dec
dec
sbb
add
test
and
mov
add
and
lock
add
test
and
pushl
pushl
ret
pushl
mov
movl
pushf
call
sbbl
and
insb
bound
and
sub
dec
add
insl
lock
outsl
push
jl
cwtl
push
mov
mov
mov
add
popf
jp
inc
call
dec
xchg
lret
sub
mov
xchg
scas
std
lods
lret
push
adc
mov
mov
repz
xor
mul
xor
adc
insb
imul
cli
dec
pop
leave
sbb
xor
push
push
fimuls
divb
out
pop
test
xchg
sbb
mov
leave
pop
imul
dec
mov
stos
leave
xor
jnp
inc
fmuls
pop
jns
out
lock
push
pop
rcr
popf
push
rorb
mov
cmp
mov
mov
dec
aas
or
lock
cmpsb
mov
sbbl
jb
shrl
shll
sub
imul
mov
lock
mov
fcompl
repnz
fisubrl
mov
jae
or
mov
dec
flds
inc
dec
jmp
mov
pop
enter
pusha
push
pusha
lea
je
call
into
cmpsb
cmp
or
lods
clc
sbb
loope
daa
fimull
adc
or
dec
or
push
ficoml
and
pop
xchg
pushf
mov
push
fnstcw
jle
add
aam
sbb
je
je
test
pop
in
leave
loope
push
stos
ss
push
shlb
sub
and
ret
enter
movl
mov
jmp
pushf
cmp
jmp
lea
je
cmc
sub
clc
push
cmp
pusha
push
lea
ja
pushf
stc
imul
call
pushf
pusha
lea
ja
setg
mov
inc
jmp
not
cmc
pusha
ror
clc
call
lea
jne
pusha
pushf
mov
stos
pushl
push
pushf
lea
jmp
out
pop
in
pop
cmpsl
mov
jnp
sub
inc
mov
outsb
sub
add
cmp
xor
int
push
sub
push
arpl
and
mov
loop
lcall
mov
cmc
lods
mov
push
xchg
fs
stos
dec
pop
lret
adc
int3
lea
jbe
jmp
shrb
dec
lods
ret
loop
inc
arpl
in
add
aas
cwtl
mov
mov
ljmp
pop
imul
sub
out
clc
dec
lfs
xchg
ljmp
in
inc
enter
data16
dec
outsl
lods
mov
sub
gs
loope
or
fiadds
sbb
outsl
inc
or
mov
mov
fistps
push
fldt
pop
lret
cli
pushf
call
pusha
lea
jae
stc
bt
stc
sub
push
movb
lea
call
pusha
pusha
movb
lea
jae
jmp
pushf
cmc
repnz
push
lea
jne
movzbl
bswap
not
movb
movzbw
not
push
bswap
lea
jp
pushf
pusha
movl
call
sar
bsr
not
mov
jmp
lea
je
shrd
movsbw
bsf
bsr
add
shl
push
rcl
rcr
mov
cmp
clc
add
clc
cmc
test
pusha
mov
bt
bt
mov
clc
cmp
call
movl
movb
pushf
lea
jno
push
pusha
lea
jmp
lea
ja
stc
xor
shr
dec
sub
stc
add
neg
shrd
cmc
movzbw
mov
setg
neg
rol
mov
bt
stc
clc
repnz
jmp
stos
add
cmp
jo
fwait
mov
insl
fcoms
xchg
insb
pop
xorl
jo
or
out
inc
cltd
or
dec
lock
fisubrl
ror
aaa
fnstsw
push
xchg
mov
xchg
in
pusha
std
lret
test
sahf
outsb
leave
loope
add
cmc
pop
cmp
inc
dec
aam
scas
add
mov
dec
inc
xor
rcl
adc
int
shrb
enter
dec
mov
dec
adc
sub
daa
xor
sbb
sar
cmp
cmc
sub
ficompl
inc
inc
std
mov
sub
inc
push
clc
cs
pushf
rolb
adcb
push
std
cwtl
imul
iret
cmp
cmp
out
jb
xor
out
jb
xchg
in
test
pop
rcr
dec
gs
sbb
faddl
ret
jno
movsl
jbe
xchg
sbb
cmpsl
xor
jno
inc
repz
mov
sub
insl
repnz
mov
jb
mov
fldcw
mov
push
cmp
mov
xor
fs
nop
hlt
das
dec
xor
lods
in
xor
mov
add
js
pop
or
jnp
xchg
sti
imul
pop
std
negb
cmp
lcall
push
xchg
gs
jne
dec
jmp
fwait
push
cmpsl
xchg
jmp
mov
sbb
pop
jae
popa
sbb
dec
pop
iret
jno
push
mov
mov
ds
cmp
add
fildll
movsb
loopne
mov
lods
cmp
mov
outsl
popf
cli
js
xchg
sbb
xchg
and
jmp
mov
hlt
fimull
addr16
dec
inc
add
inc
loop
jg
add
mov
sbb
imul
imul
dec
adc
fcomps
rcrb
sar
push
pop
insb
fstpt
inc
sub
add
iret
sbb
mov
mov
adc
push
mov
lea
rcr
neg
ror
mov
call
pop
mov
cmc
mov
push
push
mov
jge
scas
add
or
add
fwait
outsb
adc
or
mov
or
mov
sti
or
mov
idivb
bnd
sarb
xchg
call
popf
jnp
add
mov
xchg
push
stos
dec
xor
lock
xchg
xor
or
stos
pop
mov
inc
les
or
ficomps
mov
push
pusha
loop
int3
add
or
lods
out
cli
mov
dec
imul
push
pop
into
stos
mov
stos
stos
sahf
push
ds
fdiv
imul
andl
cmp
jnp
loop
xchg
pop
push
out
shll
xchg
subb
and
out
jne
fistl
add
adc
add
and
test
cs
pop
into
pop
or
pusha
jmp
movl
push
movb
jmp
pusha
call
dec
pushf
jmp
call
xchg
sub
out
mulb
mov
fsubrs
dec
mov
mov
out
inc
pop
mov
push
sub
inc
lods
push
cwtl
in
andb
cmp
and
cmp
bound
push
out
dec
cwtl
xchg
in
mov
mov
push
popf
xchg
xchg
bound
inc
push
dec
pop
shrl
test
pushf
cmp
jmp
cmp
jmp
push
jmp
mov
pushf
pushf
pushl
ret
jmp
jmp
shll
inc
sarl
pop
cmpsl
mov
fnstcw
daa
xor
pop
sbb
dec
aas
push
add
stos
aas
scas
xchg
fcompp
cld
cmp
lret
fsubrl
cld
mov
dec
mov
negb
daa
sub
lock
jnp
enter
pop
and
mov
push
push
leave
popa
cmp
sub
test
or
push
into
cmpsl
sbb
dec
fs
xchg
push
sbb
jns
in
or
mov
mov
iret
xor
imul
enter
loop
sub
scas
popf
test
xchg
enter
fcmove
dec
mov
les
adc
std
inc
lods
ljmp
stc
xor
int3
inc
inc
aad
ret
inc
inc
lret
mov
out
popa
lock
mov
pop
fdiv
out
adc
xor
pusha
mov
iret
sarb
and
aad
out
bound
rcrl
lahf
leave
cmova
jb
cmp
mov
pop
xor
cli
cmp
testl
pushl
push
adc
out
das
or
ret
xchg
adc
push
adc
lock
xor
xchg
sub
and
pop
arpl
sub
push
pusha
lea
call
call
or
movb
pushf
pusha
lea
je
ja
push
cmp
movw
lea
jne
jmp
fidivs
pop
mov
adc
dec
sbb
sbb
mov
ret
xchg
cmp
push
int
push
out
jae
add
or
sbb
jge
sbb
sub
mov
sbb
adc
aam
jp
push
pop
ret
stos
jl
lea
jae
pusha
movb
lea
jne
pusha
stos
pusha
lea
jmp
jmp
fdivl
stos
lods
ss
adc
or
in
or
fwait
dec
stc
nop
mov
les
adc
and
out
cli
inc
mov
sub
pop
mov
dec
pop
in
push
lcall
and
add
ret
sbb
cmp
fcmovbe
out
outsb
sub
imul
stos
test
repnz
out
push
push
cmp
pop
in
popa
shl
xor
push
sbb
dec
mov
mov
pop
push
push
mov
dec
pop
ret
sbb
jb
js
scas
jmp
ret
mov
add
in
or
rorl
sbb
mov
hlt
ss
sbb
cmp
loop
mov
js
sbb
sub
ret
aas
lret
es
dec
in
arpl
out
and
fimull
mov
adc
adc
cmp
stos
iret
lcall
ja
fstpl
xor
pop
ret
mov
popf
jg
mov
jmp
add
int
mov
or
cmp
or
cmp
pop
inc
insb
cltd
aad
xor
and
mov
adc
add
fs
mov
or
mov
stos
or
outsb
dec
pop
lds
mov
cs
mov
stos
pop
jmp
jmp
jo
jbe
adc
push
fisttps
test
xor
es
ds
lock
fldt
pop
mov
mov
add
mov
stc
sub
lods
mov
inc
inc
cmc
in
sbb
and
xchg
dec
mov
scas
inc
call
cmp
jge
add
loope
daa
mov
dec
pop
lds
das
lods
lea
je
jmp
jmp
test
sub
aad
shl
rcr
push
shrd
shld
bswap
pusha
mov
stc
setp
rcr
mov
bts
sete
xor
mov
aad
aas
xor
mov
bt
test
movl
pushf
pushf
jmp
pusha
or
movb
push
lea
jne
movzbw
mov
push
call
bt
btc
jmp
push
jmp
pushf
push
clc
imul
bt
mov
add
mov
lea
jmp
fnsave
stos
xchg
call
cld
out
sbb
cmp
push
gs
jecxz
stc
dec
das
push
adc
add
lock
test
std
push
subb
pushw
dec
imul
les
xor
and
or
add
pushf
pushl
movl
call
stc
repnz
call
pushf
mov
push
movl
push
call
lea
jne
inc
movsbl
cmp
mov
stc
clc
add
bt
test
movzwl
movzbw
shl
mov
pushf
add
call
lahf
ja
sub
xchg
mov
sbb
aam
push
push
push
lcall
ret
push
push
subb
sbb
roll
pusha
cltd
daa
lcall
sbb
repnz
test
int
fdivp
xor
fimuls
or
in
jnp
addr16
nop
jnp
addr16
or
xor
fcomps
in
fbstp
mov
add
dec
rcrl
imul
jo
inc
std
push
dec
pop
pop
add
aaa
pushf
lea
jne
setl
pushf
movb
push
pushl
lahf
lahf
mov
push
bswap
lea
jmp
call
sub
sahf
cmpsl
mov
outsl
cs
aas
ljmp
lods
sbb
mov
jne
aaa
cmc
mov
or
hlt
and
mov
pop
cmc
dec
fstpl
or
dec
push
in
lods
push
mov
xchg
pop
and
repz
std
and
js
jae
or
loope
mov
mov
xchg
or
mov
and
jl
mov
fcomip
dec
pop
leave
pushf
enter
not
adc
mov
clc
call
out
inc
lcall
cmp
scas
adc
insb
notl
ljmp
pop
jg
lds
out
inc
ss
ds
punpckldq
cmp
dec
inc
sub
sti
insl
std
push
push
lret
pop
mov
movsb
movsl
cmc
in
jmp
xor
cmp
rorl
mov
inc
rcrb
je
xchg
jns
addr16
insl
movsb
inc
sub
mov
pop
stc
lcall
daa
lods
jns
pop
or
flds
xor
hlt
fbld
cmp
mov
push
xor
fistl
push
mov
stos
into
test
popf
jp
jp
mov
dec
cmp
sahf
rcrl
bound
dec
jp
jl
sub
leave
loope
push
out
dec
cmp
push
adc
hlt
cmc
stos
test
rcll
out
ds
push
dec
pop
stc
ret
xchg
mov
add
das
push
push
dec
add
sbb
mov
push
cmp
xor
mov
adc
in
fwait
lret
xor
xor
fisttps
xchg
push
mov
push
jno
stos
jno
rcrl
adc
je
jmp
movsl
push
fstl
loope
flds
popa
sbb
add
mov
insl
and
sarb
adc
jl
add
xchg
in
adc
and
or
enter
out
sub
pop
sub
orl
nop
test
pop
lcall
loop
andl
sbb
dec
or
jle
cmpsb
aad
push
popa
pop
fwait
into
arpl
icebp
push
filds
scas
call
jno
push
repz
xor
pop
pop
nop
jp
test
repz
call
mov
icebp
ljmp
js
dec
testl
xchg
mov
stos
dec
pop
clc
stc
cs
pushf
pusha
movl
pushl
push
pushf
pushf
lea
jmp
movl
pushf
pushl
pushf
lea
jmp
dec
in
ret
aas
xchg
add
jb
mov
lahf
sub
sub
adc
mov
jl
loop
inc
jbe
jo
mov
sub
pop
scas
push
jecxz
mov
in
movsb
loop
or
loopne
cmp
fsub
dec
pop
sti
fmulp
sub
movzbl
call
add
dec
outsl
popa
fs
imul
add
ror
stc
jmp
pusha
push
lea
jne
dec
cmc
call
mov
movb
jmp
jmp
bt
ror
call
mov
mov
icebp
xchg
add
out
jns
pop
xchg
xor
ljmp
negl
lds
add
outsl
push
mov
in
decb
dec
jecxz
popa
fdivs
lods
jbe
pop
cltd
push
pop
jns
jb,pn
stos
cmp
and
inc
jne
test
jo
enter
icebp
es
ret
repz
xlat
lcall
mov
sbb
push
popf
mov
push
imul
xor
rcrl
iret
mov
push
sub
mov
sbb
xchg
jg
adc
aad
sbb
lock
lds
mov
lret
imul
cmp
loope
push
lods
js
mov
lret
cmp
inc
mov
in
adc
mov
dec
pop
cli
mov
push
loope
inc
add
popa
repz
mov
popa
mov
xor
sub
lods
xor
jae
inc
int3
iret
out
insl
es
les
mov
sub
mov
cltd
daa
repnz
cltd
sbb
fnstsw
mov
mov
xchg
dec
cwtl
push
lock
shll
xor
lea
mov
xlat
sub
adc
aas
mov
mov
jo
aam
andl
mov
cmp
cmc
es
mov
adc
jae
ljmp
ja
mov
cmp
rcll
xchg
cltd
pop
dec
pop
std
mov
inc
rclb
push
sbb
xchg
cli
sbb
mov
mov
sub
jge
jg,pn
sub
aas
jnp
mov
pop
out
or
or
cmpsb
jle
lods
nop
cmp
loope
jg
pop
cmpsb
insl
adc
push
ljmp
outsl
stos
mov
jmp
and
inc
ja
mov
dec
lcall
std
fisttpll
add
add
bt
mov
cmc
test
xor
clc
cmc
test
jmp
add
push
jecxz
shrb
ss
cmp
hlt
xlat
inc
lea
ret
or
push
aad
repz
fs
xor
int3
dec
insb
aam
inc
shrl
push
xor
mov
mov
dec
sti
mov
xor
sbb
mov
or
sti
ficoms
sbb
add
repz
xlat
mov
pop
cld
insl
mov
and
pushf
movl
call
push
fisubs
ss
inc
and
and
push
rclb
pop
dec
pushf
xchg
dec
add
jb
arpl
imul
push
bound
pop
or
in
cmp
jl
lcall
xchg
iret
mov
mov
test
test
sub
daa
sbb
xchg
xchg
push
pop
or
jmp
add
mov
xchg
xor
sub
pop
cld
sub
or
and
xor
and
pop
add
xchg
sub
cmpsl
cmpsl
outsl
jb
nop
stos
outsb
and
cmc
rclb
aad
imulb
push
cmp
lods
adc
push
flds
xor
enter
or
hlt
repnz
jbe
rcrl
or
test
push
rolb
xchg
in
cli
stos
dec
pop
cld
push
bsr
mov
not
pushf
shld
sub
mov
cmc
stc
or
pushf
pusha
pushf
lea
je
stc
pushf
push
cmp
or
movb
pushf
call
jmp
jb
lods
enter
test
push
mov
xchg
andb
push
xchg
testb
mov
test
es
sub
mov
cmp
call
push
cmp
jno
mov
repnz
inc
cmpsb
mov
inc
jl
test
dec
int3
mov
mov
dec
lret
imul
test
push
or
jmp
xchg
dec
arpl
xor
xchg
dec
ret
push
and
sahf
fsts
decb
mov
fimull
jbe
ss
shll
repz
push
xchg
mov
stos
mov
out
ja
loopne
ret
push
xchg
bound
mov
sbb
lock
sbb
sahf
cmpsl
mov
jno
adc
cmp
rcrb
jp
out
bound
loop
test
xlat
leave
loope
pusha
fsubrp
mov
xchg
addr16
sbb
cmpsl
jge
jnp
shll
dec
pop
std
sub
inc
movsl
pop
cmpsl
pop
mov
and
pop
mov
jb
sub
cmp
lret
sub
push
and
stc
add
popf
adc
dec
loopne
loop
daa
adc
lcall
inc
jb
js
lock
pop
sub
and
jae
inc
setle
inc
setb
mov
jmp
call
lea
ja
shl
xor
rcl
sub
stc
add
not
bt
btc
mov
bt
push
pusha
mov
clc
cmp
repnz
pusha
call
pushl
movl
push
pusha
lea
jnp
push
pusha
lea
jmp
add
lea
cmp
add
jmp
clc
movw
repnz
mov
jmp
call
push
call
push
push
push
pushf
pusha
lea
jmp
outsl
xchg
inc
push
or
lds
jle
in
aaa
sbb
add
mov
repz
push
cwtl
mov
roll
xchg
es
cld
fidivrl
adc
jecxz
repnz
outsb
syscall
add
iret
xchg
sbb
mov
sahf
jb
movsl
imul
jno
imul
mov
sbb
call
sbb
mov
faddl
sti
ss
iret
ds
add
pop
lock
inc
jne
movzbw
lea
pusha
push
movb
mov
pushf
mov
movzbl
movb
pusha
jmp
call
mov
bswap
push
setge
mov
mov
movsbw
mov
jmp
lea
pushf
pushf
pushl
call
pushf
call
mov
push
mov
pusha
pushf
mov
pushl
ret
pop
ja
aad
mov
push
jmp
dec
push
jle
les
lods
mov
mov
lret
add
lahf
mov
push
xchg
mov
cltd
jno
add
std
mov
nop
rcr
repz
cmp
je
or
jmp
int
shl
mov
loope
negb
cltd
std
dec
xchg
jae
leave
loope
push
stos
xor
stos
xchg
jo
cmp
mov
inc
push
and
cltd
mov
jnp
jno
aaa
dec
pop
repz
or
stc
sub
test
bt
pusha
cmp
pushl
popl
bt
add
jbe
pushf
cmp
cmp
pusha
call
add
mov
mov
clc
test
lea
jge
push
push
lea
je
pushf
cmc
add
cmp
cmp
jmp
jmp
add
pop
outsl
pop
mov
push
cmp
jl
stos
or
fidivrl
sub
lahf
leave
sub
and
mov
adc
xlat
and
pop
or
sahf
test
jno
push
aam
sbb
xchg
jo
or
mov
repz
fisubl
lea
ja
rcr
sub
clc
add
clc
bts
neg
mov
setp
or
sar
jmp
sar
pusha
mov
or
add
and
push
pop
mov
rol
add
dec
cmp
movl
call
movl
push
mov
lea
jmp
xor
pop
cmpsl
inc
adc
inc
sub
rorb
fstpt
test
cwtl
popa
cmp
aad
imul
jb
pop
push
mov
and
sub
jnp
lcall
popa
xorb
xor
setbe
in
push
fimull
repnz
pushl
jmp
pusha
mov
lea
jae
clc
bsr
shl
mov
shrd
mov
cmc
pushf
call
push
notb
dec
call
outsb
popa
mov
jecxz
push
sub
mov
lock
faddp
bound
scas
push
mov
js
cmp
mov
mov
rclb
xor
pop
jle
mov
push
out
lods
and
or
into
inc
xorl
jne
lret
fbld
sbb
or
mov
mov
je
leave
loope
add
inc
std
sahf
add
sub
cmpsl
pop
movsb
punpcklwd
std
lods
arpl
and
sub
pop
cmc
push
fdivr
xlat
stos
lds
mov
aas
xor
and
cmpsb
xor
mov
jne
dec
mov
xor
jp
popa
jb
das
int3
xlat
and
push
pop
stos
xor
dec
pop
cmc
push
in
int3
mul
arpl
pop
orb
pop
aad
push
xchg
xchg
out
and
jge
cmc
mov
dec
inc
and
les
or
repz
shll
pop
pop
cli
daa
outsb
mov
or
jp
dec
and
and
call
int3
das
dec
push
and
push
adc
fcoms
imul
jne
or
mov
fucom
mov
or
jg
add
subb
dec
pop
hlt
push
ret
roll
xchg
jne
roll
and
insl
pop
jnp
sbb
neg
pop
adc
andb
xor
xor
and
and
sub
xchg
mov
imul
mov
xor
xor
out
push
or
rorl
pop
out
mov
fwait
cld
aaa
cmpsl
mov
leave
loope
aas
decl
sub
mov
std
stos
nop
add
in
jae
sbb
out
ds
dec
pop
hlt
dec
pop
add
and
orl
cld
insl
push
pushf
movb
movl
pushl
lea
jmp
movzbw
movb
lahf
jmp
inc
push
jmp
movl
push
mov
push
pushf
mov
push
pushl
ret
mov
add
popa
negl
jb
dec
pop
outsb
pop
sbb
xorb
outsl
pop
data16
pop
addr16
into
es
jo
es
loope
mov
jge
or
cltd
mov
scas
sub
in
out
mov
lock
bound
sub
jle
and
mov
inc
lret
inc
rcll
jle
cld
or
or
mov
pushf
not
not
pushf
lods
call
adc
lea
pusha
call
pushl
pushf
clc
pushl
popl
call
movl
pushf
call
add
ror
sub
xchg
btr
mov
rcl
cmp
bts
test
mov
jmp
xor
cmp
dec
dec
push
std
jo
jbe
dec
pusha
dec
cmovnp
sub
insl
out
pop
fcmovbe
nop
shl
jb
scas
lcall
xchg
pushf
mov
mov
popa
jns
adc
mov
inc
push
pop
imul
test
scas
clc
jg
adc
pusha
ja
popf
insb
mov
outsb
sbb
out
fdivl
popa
mov
or
cmp
dec
lock
in
or
fwait
aas
gs
stos
sub
stc
mov
jae
jno
xor
cs
mov
dec
pushf
sbb
ja
add
pop
push
add
cmp
jnp
and
cli
flds
push
cmp
dec
dec
push
fsubrl
cmp
sub
mov
pop
hlt
imul
dec
pop
divb
lea
cwtl
not
mov
push
jmp
push
test
mov
rcr
bsf
mov
jmp
cmp
add
push
push
pusha
lea
jmp
lea
jb
pusha
cmp
push
push
push
lea
ja
push
sub
mov
add
sub
ror
cmp
pusha
mov
jmp
add
test
cmp
mov
addb
lods
daa
mov
adc
mov
mov
stc
scas
icebp
add
xor
jne,pt
adc
roll
mov
xchg
cli
imul
negb
dec
jbe
push
shr
lds
jnp
pop
inc
out
push
mov
les
shrl
add
movsb
iret
dec
arpl
and
shll
pop
mov
mov
sub
or
sar
or
scas
in
popa
mov
pop
add
sub
and
in
nop
inc
sti
std
je
sub
push
pop
adc
movsb
mov
outsl
mov
mov
mov
dec
pop
call
ja
push
stos
stos
mov
xor
inc
mov
sti
xchg
scas
add
sarb
mov
adc
xchg
js
emms
adc
and
fsubr
xchg
or
sbb
ss
jge
mov
mov
scas
push
inc
lods
jnp
test
xchg
push
lcall
mov
pop
and
dec
pop
call
pushl
cmp
call
adc
mov
ja
push
out
pop
leave
int3
daa
or
inc
mov
inc
mov
movsl
xor
movsb
adc
test
stc
test
lahf
mov
add
or
in
ror
inc
mov
sbbb
icebp
and
fcom
sub
inc
icebp
pop
push
aad
stc
jp
leave
loope
cmpl
pop
fdivrs
daa
dec
push
and
mov
daa
xchg
pop
jmp
outsb
jns
lcall
push
pushf
mov
dec
sbb
test
stos
shr
das
out
rcll
dec
mov
push
mov
inc
nop
ret
xor
stos
pushf
bound
fmuls
mov
iret
and
jge
loope
push
cmp
and
in
push
add
filds
inc
jae
sar
and
sub
inc
xchg
pop
sub
out
or
ficomps
jae
shrb
popa
call
pop
add
lods
push
or
cmp
dec
pop
jmp
sbb
sbb
jbe
ljmp
mov
mov
jno
iret
mov
sub
mov
inc
or
aas
xchg
cmp
cs
xor
cli
leave
pop
pop
cmp
sahf
sbb
mov
sbb
sbb
push
iret
push
scas
repz
mov
push
ljmp
lds
std
sub
mov
lods
mul
subl
sbbl
lods
or
decb
gs
sahf
addr16
sbb
pusha
cmp
lea
add
xchg
push
cli
inc
test
pop
add
lock
dec
cmp
mov
xchg
mov
xor
inc
mov
roll
xor
into
fs
inc
gs
mov
loopne
push
sbb
pop
add
push
cmp
xor
out
mov
sub
fldenv
adc
push
jp
adc
dec
fcom
mov
push
jnp
jns
aaa
out
mov
jo
cmp
arpl
pop
mov
push
mov
fisttpll
mov
int
pop
mov
mov
imul
lods
nop
addr16
cli
lds
push
mov
lds
pusha
and
iret
lea
stc
andb
adc
adc
xchg
xchg
jno
inc
jae
push
inc
xchg
in
xor
mov
pushf
fcmovnb
fld1
mov
mov
sub
fs
pusha
lea
call
pushf
call
mov
pusha
call
mov
movzbw
movb
push
lea
mov
jmp
pushf
xor
repnz
js
cltd
mov
or
pop
cmc
mov
out
adc
mov
xor
xor
movsl
je
cmp
and
push
cmp
xchg
orl
insb
cmpsb
sub
push
aas
idivb
pop
idiv
and
push
std
in
ljmp
inc
icebp
sbb
adcl
sub
or
ficoms
movsb
stos
stos
mov
add
gs
aad
jmp
scas
sub
pop
push
and
dec
xor
sbbl
pop
in
dec
cmpsl
insb
push
in
xor
lods
mov
push
and
mov
lcall
stos
xchg
xor
fstpl
shll
add
push
rorb
popf
inc
popl
sbb
insb
aam
xchg
cltd
repz
ret
jge
imul
mov
dec
pop
in
xlat
inc
lret
neg
cmp
cmc
mov
cmc
cmp
sets
lea
cwtl
mov
call
pusha
lea
jne
shr
xor
btr
mov
cmc
jmp
inc
and
shr
shl
not
xchg
adc
lahf
clc
rcr
mov
rol
stc
mov
test
jmp
fdiv
out
sbb
cmpsl
setne
pop
cmp
imul
lret
cmp
pushf
push
ret
int
push
and
and
popf
lea
addl
mov
sbb
int
pop
fwait
adc
enter
and
cmp
mov
bt
mov
movb
neg
push
clc
test
add
mov
bt
rol
cmc
bt
cmp
sub
cmc
stc
call
pushf
pusha
jmp
call
pushf
sub
add
rcl
dec
shr
mov
clc
test
pushl
call
shl
pusha
push
lods
pushf
dec
clc
pushf
test
clc
xor
call
clc
stc
shl
lea
mov
pusha
bt
stc
movb
cmpb
movb
jmp
call
ds
and
fadds
mov
pop
xchg
jo
sbb
movsl
mov
cmc
les
cmpsb
jge
add
rolb
mov
inc
add
loopne
test
test
cwtl
xorl
xchg
movsb
adc
pop
dec
pop
out
mov
ljmp
movsl
mov
push
inc
add
jae
xchg
incb
ja
outsl
and
cmp
inc
push
test
js
ja
clc
test
popf
loop
mov
or
lock
sbb
jns
jge
mov
push
jmp
stos
ficoml
daa
lock
pop
out
sub
rol
inc
mov
bt
pushf
call
mov
lahf
push
in
dec
sub
inc
mov
lret
cmp
pop
inc
jae
ds
or
xchg
inc
xchg
push
mov
out
xlat
adc
fistpl
aam
pusha
fs
sub
inc
push
arpl
testb
cltd
outsl
xor
stos
addb
mov
loope
mov
es
cwtl
or
add
scas
int
push
ret
xchg
xor
movhps
mov
dec
pop
loope
je
rol
mov
push
stc
movl
push
repnz
push
push
jmp
pushf
push
ror
cmc
pushl
pushw
popfw
pushf
mov
pushf
inc
jmp
into
mov
jmp
cmc
lock
sbbl
sahf
mov
cmp
mov
pop
xchg
xchg
push
xor
cwtl
mov
rorb
pop
xor
mov
xchg
mov
test
sub
xor
loope
das
cvtps2pd
xchg
mov
mov
sahf
lock
sub
cmp
in
adc
dec
pop
loope
or
or
dec
adc
lea
repz
pop
das
repnz
call
testl
pop
pop
adc
or
dec
jmp
push
in
adc
fpatan
sbb
jns
adc
pop
andl
xlat
fs
xlat
mov
jns
xor
dec
outsb
xor
pop
popl
push
std
in
xor
test
push
fdivl
sbb
pop
loopne
insb
sbb
jmp
inc
dec
inc
rcll
scas
stc
sbb
sar
pop
fstpt
test
bound
xchg
iret
cld
pop
andb
nop
mov
xorb
xchg
in
pop
pop
mov
movsl
lcall
popa
in
add
repz
mov
sbb
mov
push
cmp
push
jg
pop
std
push
loope
pop
pop
xor
sub
pop
loopne
push
cmp
xor
sub
inc
or
pop
shlb
jb
loope
fbstp
adc
std
add
push
stos
xlat
jp
push
in
mov
mov
push
mov
loopne
push
xchg
jle
pusha
movl
push
pusha
movb
movl
pushf
movw
lea
jmp
lea
je
pusha
mov
pushl
lea
jmp
pushf
mov
mov
lea
ja
push
mov
pushf
call
clc
repnz
jmp
jne
gs
xor
fs
insb
add
mov
int
inc
inc
inc
sbb
stos
popf
or
push
sub
lods
push
jge
mov
and
mov
pushf
aaa
inc
mov
outsb
mov
sub
adc
fisttpl
lea
cmpb
sarl
lea
imul
outsl
pop
leave
loope
sbb
xor
jge
aam
les
arpl
loope
daa
sahf
cmc
xchg
inc
mov
and
cmp
aaa
add
cmp
aam
push
adc
inc
push
pop
mov
sub
into
add
aas
or
je
test
dec
adc
test
in
loop
js
out
scas
dec
pop
loop
mov
stos
stos
mov
sbb
pushf
aaa
add
or
mov
aas
or
in
cmp
lcall
jno
sub
test
bound
pop
xchg
aam
mov
jge
aaa
push
in
xchg
and
dec
mov
pop
adcl
inc
lods
xor
imul
mov
pop
loop
bound
int3
push
xor
add
loopne
je
add
add
les
ffree
add
push
push
lea
jne
push
pusha
push
call
pushf
call
jb
push
dec
add
or
xchg
add
xlat
mov
jo
out
xor
loop
insb
mov
adc
adc
mov
jnp
enter
push
int
jg
popf
add
xor
mov
mov
xchg
sbb
test
sub
arpl
mov
shll
mov
push
jne
add
test
call
cmpsl
rcll
aad
push
jl
jle
divl
movsl
js
scas
sbb
cmpsl
in
popa
gs
and
xchg
cmp
pop
aam
push
lods
lret
repz
push
push
imul
push
sbb
out
ljmp
ds
jno
mov
xchg
xor
daa
in
loop
nop
mov
addr16
pop
addr16
fsubl
sub
cmpsb
push
sub
add
lods
test
pop
in
rcrl
cmp
pusha
call
pop
mov
rcrb
push
stc
test
mov
jns
das
cli
dec
movsb
popa
and
das
xor
xchg
notl
int
or
or
sbb
and
nop
adc
leave
popf
push
fidivl
popa
or
sbb
int3
rorl
mov
pop
dec
pop
in
lcall
lea
jne
bsr
setge
btr
pusha
mov
or
lea
jl
sub
or
lea
ror
bts
mov
pushf
pusha
call
pushf
clc
repnz
call
pushl
lea
je
jmp
bts
mov
cmp
cmpb
push
pushl
lea
jne
cmc
shrd
das
xor
lea
mov
push
pusha
mov
lea
jmp
inc
flds
and
jns
out
pop
cmp
ror
xor
fs
dec
in
add
sub
loop
and
jge
mov
mov
push
mov
ss
xchg
sbb
fidivl
icebp
je
imul
inc
sbb
cmc
leave
loope
cmpb
test
cmp
jmp
xchg
mov
sahf
popf
je
cli
mov
dec
pop
out
dec
pop
not
mov
neg
push
clc
adc
bsf
xadd
push
neg
mov
rol
pushf
shl
lea
mov
call
sar
aaa
setae
shr
mov
pushf
pushl
shl
jmp
lea
ret
jae
test
cmp
cmp
cmp
push
lea
jae
cmp
clc
cmp
jmp
mov
mov
cmp
inc
sub
cs
push
mov
scas
scas
xor
adc
or
sbb
stos
adc
ficoml
xor
mov
mov
test
into
jle
inc
fsubrl
test
cmpb
imul
xsha256
cmpsb
add
adc
daa
into
sub
outsl
daa
mov
mov
arpl
mov
pop
out
xor
pushf
movl
call
lret
inc
inc
rorb
aaa
and
in
cmp
fwait
jp
push
jmp
sbb
into
lret
scas
lds
dec
push
jecxz
pop
mov
adc
add
scas
outsb
mov
sbb
stos
dec
leave
ror
lret
arpl
pop
cmc
in
sti
subb
ljmp
ja
mov
scas
fbstp
mov
mov
adc
pop
out
sarl
and
jp
push
pushf
call
pusha
push
pushl
popl
mov
movw
pushl
ret
pushl
call
mov
pushl
movw
push
pushl
ret
movl
jmp
aam
aas
stos
pop
cmp
xchg
inc
aad
dec
cmpsb
dec
je
pop
adc
insb
jnp
dec
add
scas
std
test
xor
push
and
cmpsl
sbb
and
sbb
and
inc
mov
aas
push
inc
lods
fwait
shll
add
addl
dec
pop
cltd
pop
add
je
pusha
stc
pushf
call
inc
pushf
jmp
lea
je
cmc
stc
test
cmp
call
cmp
push
add
push
pop
pop
dec
fucom
cmp
stc
pop
mul
push
pusha
fwait
ds
xchg
adc
insl
ljmp
push
fcmovb
add
mov
mov
insb
lea
cmp
mov
movsb
fistpl
xchg
aad
and
movsb
pop
xor
addl
cwtl
cmp
ret
push
cmp
fwait
cli
sub
enter
add
or
ds
xor
shll
sbb
sahf
test
sbbl
shl
xchg
shl
jnp
add
pop
mov
mov
add
sbb
mov
mov
jne
rol
push
pop
hlt
dec
jmp
or
inc
shl
and
fwait
jne
stc
xor
movsb
js
out
push
xchg
add
dec
cmp
imul
pop
add
cmp
xchg
jmp
pop
and
xchg
and
jge
jo
popf
scas
dec
pop
cwtl
outsl
mov
lods
xor
adc
or
loop
adc
ret
data16
cli
pop
xor
into
ja
test
mov
mov
xor
push
subl
mov
mov
xchg
mov
push
bound
dec
addr16
pop
addr16
cmp
lcall
inc
adc
mov
push
dec
pop
fwait
stos
jl
pusha
push
lea
jne
btr
sub
call
cs
jmp
sbb
fs
xchg
cmp
dec
mov
sub
push
dec
jmp
arpl
cmp
mov
sub
out
imul
xlat
and
cmp
xchg
orb
or
inc
test
sbb
lret
jb
enter
xchg
ret
stos
xor
and
jb
push
mov
cld
mov
test
es
movsb
aaa
pop
sub
ljmp
cmp
mov
pop
cmpl
xlat
sub
pop
in
push
filds
and
std
add
iret
jnp
aad
les
sub
cltd
and
cs
pop
mov
cwtl
lahf
mov
shll
aad
sbb
jae
dec
push
push
imul
pop
xor
lcall
int
stos
lret
mov
ja
push
jmp
mov
mov
mov
jle
adc
push
mov
push
xchg
rcrb
subl
sub
adc
lahf
insl
mov
and
jmp
adc
stos
mov
jns
jg
aaa
mov
jl
cmp
and
dec
pop
lcall
add
mov
and
xchg
les
add
pop
dec
mov
addr16
mov
popa
dec
pushf
mov
shrl
addr16
sbb
into
mov
push
jp
jg
pop
in
stc
add
inc
pop
mov
pop
mov
dec
xorb
inc
dec
data16
leave
inc
jmp
cmpb
push
pop
leave
loope
sarl
stc
clc
aam
add
mov
arpl
push
dec
pop
popf
mov
clc
neg
stc
cmp
cmp
lahf
lea
setno
jmp
dec
fs
push
mov
rcrb
mov
je
lret
mov
cmp
sbb
xchg
xchg
ja
inc
jo
iret
mov
jb
xor
cmpsl
sub
adc
gs
mov
adc
push
inc
dec
inc
data16
fwait
test
loope
mov
push
fnsave
pop
and
das
inc
push
fs
fidivl
sbb
or
push
mov
jmp
pusha
movw
mov
push
pushl
ret
push
sub
push
or
dec
andl
mov
inc
das
shl
cmp
mov
je
mov
int
fnsave
cmp
add
mov
and
leave
xor
cs
aam
mov
xor
xchg
sbb
inc
push
fiaddl
push
inc
add
das
and
cmp
inc
sahf
inc
push
nop
dec
and
xor
shl
adcb
es
lret
jl
xor
std
jbe
out
push
mov
icebp
je
cld
outsb
je
lcall
fst
lods
xor
shrl
sbb
xchg
pusha
orb
cmpsl
push
addb
pushf
sbb
or
in
test
sahf
mov
jmp
add
ljmp
fld
push
std
sti
inc
mov
dec
dec
mov
mov
mov
mov
test
rolb
rcrb
ret
les
push
bound
push
aaa
mov
js
xchg
loop
arpl
outsl
lcall
out
jno
pop
popa
adc
mov
jp
fwait
int3
and
mov
or
les
cltd
sbb
pop
xor
and
add
cwtl
mov
xchg
jle
add
sbb
push
fs
ret
jp
or
js
cmp
mov
mov
dec
test
nop
aas
jmp
jp
and
cmpsb
test
dec
pop
lahf
out
cmpsl
xor
movsbw
rcr
mov
clc
stc
pushf
cmpb
pusha
pushl
lea
jne
cmp
shl
pusha
bswap
sub
bsr
bsf
ror
mov
clc
rol
neg
add
rcr
mov
call
test
test
pusha
lea
je
push
sub
pushl
call
jmp
mov
cmp
push
sub
sbb
das
dec
iret
xchg
roll
int
jbe
push
cltd
cmpsb
loop
push
adc
lea
bound
in
xchg
stc
cmpsl
fimull
lods
xchg
ficompl
or
mov
push
inc
dec
pop
sahf
pop
inc
sbb
sub
push
mov
cmp
out
pop
pop
pushl
rcl
adcl
pop
sub
mov
cmpsb
xorl
imul
pop
push
mov
cwtl
fnstenv
aas
dec
adc
xchg
dec
mov
xchg
sub
add
bound
leave
loope
jl
cmp
enter
fs
xlat
jp
in
mov
mov
aas
out
pop
sbb
sahf
or
stc
inc
sub
pushf
bswap
xchg
push
mov
pushf
call
lcall
pop
sub
inc
mov
les
sbb
js
dec
pop
push
pop
je
sub
je
popf
mov
in
outsb
lcall
jmp
dec
loope
fcoml
cli
loop
push
mov
lods
in
mov
out
outsb
lock
ja
popf
cmpsl
mov
mov
pushf
shll
mov
daa
xchg
sbb
push
out
int
push
mov
and
sti
jecxz
xchg
jae
lock
xchg
scas
mov
jmp
std
xor
decb
mov
mov
sub
adc
fsts
iret
mov
xchg
mov
movsl
jl
pop
dec
pop
xchg
mov
cmp
stos
stos
sarl
testl
adc
ss
ftst
mov
jo
dec
in
mov
test
outsb
inc
cld
popa
lds
jns
int3
in
in
and
add
call
inc
in
pusha
mov
icebp
mov
dec
sbb
andb
ds
adc
sub
ja
mov
cwtl
pop
sub
xor
xchg
jg
pop
xchg
pushf
jae
or
add
incl
sub
in
std
xchg
inc
fdivl
sbb
movsb
out
xor
mov
cmp
std
cmp
nop
mov
push
sarb
lods
sub
sarl
fnstsw
adc
fnstsw
aaa
mov
repz
adc
and
in
cmp
stos
xchg
movsb
mov
push
push
xchg
orb
cwtl
sbb
adc
inc
xchg
stc
lea
mov
in
lret
loop
rorb
lods
dec
pop
nop
jmp
stc
clc
cmp
call
xchg
imul
inc
push
adc
xchg
sub
icebp
sub
and
mov
jns
mov
jl
adc
lahf
int3
mov
or
jecxz
dec
adc
out
or
dec
pop
out
loop
xchg
pop
das
fnstenv
cmp
enter
and
aaa
push
je
xchg
das
js
mov
repz
scas
push
mov
mov
cmp
dec
add
fcomi
das
xchg
int3
jae
out
and
popa
outsb
mov
jg
popa
jb
in
idivl
rclb
sub
push
in
push
out
leave
pop
and
sbb
in
sbb
in
cli
mov
cmp
sub
aad
cmp
movsb
push
in
inc
int3
or
scas
sbb
stos
and
in
xor
cmp
iret
xchg
in
movsb
insb
ds
stos
aam
lret
push
stos
out
arpl
je
repnz
push
in
roll
xor
pop
lret
cmp
pop
pop
imul
popa
fs
sbb
and
fsts
mov
dec
push
jmp
cmp
push
ror
jmp
bsf
mov
jmp
mov
pusha
pusha
lea
je
call
pushf
mov
pushf
push
push
movb
pushl
ret
call
call
push
jge
jno
mov
push
sbb
ja
mov
repz
xchg
into
sti
jg
cmp
cmp
jbe
mov
push
cmp
dec
jne
xlat
and
call
dec
xchg
arpl
ljmp
test
insb
lret
mov
xchg
sbb
mov
pushf
cmpb
pushf
pusha
jmp
lea
ja
adc
cmc
sub
pusha
shrd
or
sub
add
shr
mov
rcl
shr
jmp
xchg
bswap
lea
movl
movsbw
pushf
jmp
pop
cmp
inc
aam
mov
jl
cmp
push
sub
ret
cmp
mov
lcall
xchg
jns
sbb
mov
jae
cmp
in
add
jp,pn
dec
je
test
into
xchg
scas
sbbl
and
sub
shll
dec
xchg
dec
push
mov
nop
rorb
dec
push
pop
fnstenv
les
cmpsl
mov
shll
push
outsl
and
outsl
mov
sub
pop
outsl
dec
pop
xchg
lods
jns
call
lea
jb
push
pusha
cmpb
pusha
lea
js
pushf
lea
jne
shl
cmc
rol
jmp
repnz
mov
call
in
test
cld
js
loope
cmp
shlb
mov
or
insb
sub
jbe
aas
xchg
test
mov
les
cmpb
fsubrl
addr16
mov
and
fisubrs
sub
popf
fdivrs
pop
pop
dec
pop
xchg
inc
adc
jp
bt
pushf
add
stc
jmp
add
ror
ds
sub
cmp
and
push
jg
adc
and
pop
addr16
sbb
imul
sbbl
inc
cmc
fdivrs
insb
shll
lock
cmp
jmp
dec
dec
pop
and
mov
xchg
mov
cmc
lock
xor
push
dec
mov
pop
jne
int
hlt
dec
mov
fimull
pop
push
push
pop
jnp
dec
pop
xchg
test
and
mov
cmpsl
ret
imul
fsubl
cmpsb
jns
pop
push
mov
ljmp
outsl
cwtl
jg
out
pop
mov
xor
inc
adc
sbb
imul
xchg
or
popf
rcrl
enter
in
ljmp
inc
cmp
or
pushf
jmp
pushf
mov
lea
je
adc
or
btr
bsf
mov
ror
sar
bts
add
cmc
sar
mov
call
xchg
outsl
ret
pushf
push
push
cmp
sub
sub
loop
jo
inc
xchg
cwtl
or
test
shlb
sub
add
fucomip
into
pop
daa
clc
push
xor
aad
jo
adc
or
scas
cli
mov
out
and
mov
cmpsb
mov
dec
aaa
pop
sbb
repz
aaa
mov
add
mov
popf
cld
lret
loop
adc
fdivs
push
push
jns
imul
ja
and
dec
pop
xchg
adc
call
sbbb
clc
mov
idivl
pop
jo
push
jno
lret
in
leave
test
xchg
mov
or
nop
fwait
push
leave
out
mov
jge
xchg
ljmp
pushf
sar
pop
jo
dec
inc
adc
mov
aaa
cmp
pop
jnp
mov
sarb
jle
and
int3
mov
mov
subb
aad
mov
sbb
lahf
xor
dec
pop
xchg
cmpsb
lods
pop
mov
bswap
pushf
setns
lea
jmp
pop
outsl
xor
xchg
dec
add
mov
aas
mov
adc
lahf
push
xchg
push
icebp
fiadds
lds
out
sbb
pusha
sti
outsl
ja
cmpsl
mov
testl
pushf
int
add
in
jmp
pop
sti
and
jbe
out
mov
mov
and
xor
imul
clc
test
cmpsl
dec
lret
ss
das
pop
dec
pusha
xor
push
imul
dec
pop
xchg
sbb
repnz
mov
pusha
push
lea
jne
not
movzbw
lea
movb
bswap
lea
push
mov
call
ffreep
std
sbb
push
jne
inc
xchg
xchg
push
push
mov
push
ss
cmpsl
sub
frstor
cmp
test
mov
or
lods
cld
adc
data16
sbb
fwait
mov
pop
push
dec
inc
pop
push
pop
pop
jecxz
repnz
sbb
adc
sbbb
in
mov
mov
dec
lods
inc
xchg
fwait
mov
mov
push
fstpt
mov
es
sbb
out
fs
add
int3
or
enter
mov
pushl
movl
jmp
repz
push
imul
testb
lret
jae
xchg
or
add
das
dec
xlat
lcall
mov
ret
and
aad
or
shlb
stc
push
add
adc
xchg
or
mov
in
dec
pop
mov
bound
mov
push
ds
imul
inc
sub
sub
ret
jae
in
xor
mov
and
cmp
inc
enter
jp
cmc
hlt
jg
in
pop
lods
mov
ja
frstor
lahf
sahf
push
sub
test
cmp
dec
rolb
pop
jecxz
inc
inc
cmp
lcall
xor
sub
jb
pop
mov
out
icebp
push
mov
push
out
fisttpll
jne
int
xchg
push
sub
cs
cld
and
stos
popa
lock
test
pop
mov
push
shll
push
jmp
cwtl
xor
push
fbld
cld
jg
lods
test
jbe
test
adc
ja
cmpsl
lods
imul
add
push
in
dec
rorl
sbb
or
jno
out
sahf
outsb
das
xchg
jge
mov
flds
movsl
scas
jle
loope
icebp
dec
sbb
repnz
xchg
sbb
cmc
pop
scas
and
out
pop
test
lret
cmp
mov
push
add
call
rcr
mov
jl
and
cmc
add
push
lea
jmp
lods
test
loop
mov
inc
adc
dec
inc
shlb
jle
xor
adc
shrl
adc
or
xor
push
mov
fmul
out
adc
or
jmp
or
imul
ficomps
inc
fdivs
or
adc
jb
adc
xor
mov
aaa
imul
jecxz
sub
mov
cmc
and
sbb
sbb
repz
es
cmp
popf
test
sub
xchg
in
mov
or
mov
add
lods
xor
mov
popa
lret
sub
repz
gs
xchg
pop
jmp
scas
sbb
jmp
or
or
cld
fs
les
push
xlat
and
xchg
dec
fwait
out
ljmp
push
inc
sub
adc
mov
int
jb
orb
les
hlt
outsb
addr16
insl
xor
outsl
jae
in
mov
pusha
lret
and
into
xchg
sbb
pop
mov
ss
fldcw
sub
sub
mov
dec
jo
sbb
xchg
mov
loopne
dec
iret
xor
in
out
sbb
cli
stc
scas
xchg
jp
lock
test
adc
dec
add
lcall
cwtl
mov
jp
add
xchg
loope
pop
pushf
push
and
or
xchg
xlat
cs
dec
data16
inc
mov
push
jbe
shll
aas
rcrb
xlat
or
xchg
dec
adc
lea
sbb
jg
add
loopne
inc
push
push
sahf
push
and
lods
fwait
mov
jno
or
sbb
sub
fnstenv
and
xchg
cltd
in
in
inc
mov
dec
je
popf
mov
scas
fs
lock
ret
dec
enter
test
push
pop
pop
mov
cmpb
pushf
aaa
inc
push
fcompl
test
sbb
inc
sbb
mov
repnz
sub
inc
or
cmpsb
xor
aam
mov
push
adc
mov
dec
pushf
cld
popa
jne
repz
les
pop
mov
mov
repnz
mov
es
sbb
adc
mov
pusha
aas
ret
push
popf
push
sub
mov
sub
add
sbb
mov
xchg
jb
orb
daa
jnp
or
mov
mov
imul
sub
bound
aaa
lcall
rcll
nop
push
iret
pop
lock
dec
scas
cmc
adcb
mov
xchg
cmc
clc
js
test
fistpll
mov
mov
push
push
cwtl
fwait
out
pop
inc
adc
push
hlt
iret
mov
xor
pop
jo
int
dec
out
xor
les
xchg
pushf
out
push
cmp
cmp
push
add
std
aad
jmp
pop
divb
xchg
jmp
ss
loop
fmulp
pop
sub
pusha
js
dec
mov
add
sahf
movsb
xor
dec
mov
in
sub
shr
ja
adc
push
or
arpl
xor
mov
push
sbb
inc
add
mov
pop
sbb
mov
outsl
enter
insl
iret
jl
mov
out
pop
pop
sub
cmp
in
cmp
jno
mov
fisubrs
dec
inc
dec
push
xchg
fsubr
lcall
stc
mov
jne
jge
ds
cltd
xchg
dec
xor
inc
cmpsb
outsb
mov
push
inc
pop
jo
popf
scas
aas
ret
sbb
addr16
pop
xchg
inc
test
push
lea
mov
in
les
sbb
enter
movsl
push
into
sub
mov
imul
adcl
jo
sti
fs
xchg
cs
std
xor
and
aad
popf
ffree
xor
push
scas
rcrl
fdiv
sbbl
push
and
call
cmpsl
pop
sbb
mov
mov
sbb
or
testl
add
cmc
jge
and
loopne
mov
mov
outsl
scas
push
pop
xchg
push
mov
sbb
pop
pop
daa
cmp
cmp
je
in
jno
aad
inc
push
cmpsl
in
int3
jmp
pop
insl
jle
xchg
pop
or
push
loope
cmp
and
repnz
inc
aaa
jp
filds
inc
push
mulb
pop
int
mov
sub
in
inc
fildl
jp
sub
lcall
je
dec
xchg
dec
push
and
pop
das
push
push
loope
add
sbb
mov
pushf
out
jbe
xor
dec
lea
and
clc
test
mov
adc
adc
cmp
sbb
andl
loop
xor
mov
add
mov
and
ficoms
inc
sbb
sbb
add
sub
lods
jnp
int3
pop
xchg
dec
and
mov
lock
mov
test
push
fistpll
filds
stos
lock
cs
jns
inc
enter
xor
sbb
mov
xor
movsb
pop
int
sub
inc
mov
dec
lock
test
or
loopne
jp
fldenv
pop
fistl
sbb
adc
pop
adc
add
ds
mov
gs
dec
sbb
bound
out
pushl
movsb
inc
mov
test
sub
inc
add
lahf
mov
pop
jmp
int
xorl
xor
dec
sub
push
loope
jbe
cmp
rorl
ret
es
movsl
icebp
mov
mov
lods
jecxz
scas
aad
xchg
jnp
push
pop
xchg
data16
pop
enter
call
outsl
lock
movsl
aad
add
and
or
je
mov
int
mov
lret
loop
mov
les
mov
in
into
test
daa
popf
lock
add
adc
mov
xchg
push
dec
cmp
mov
popa
in
jo
popf
out
sahf
jo
xchg
push
fsubrl
cmp
jmp
ljmp
mov
or
adc
shlb
rclb
mov
cmp
ljmp
cmp
subl
xchg
mov
pop
roll
mov
adc
dec
fmulp
loop
adc
adc
arpl
call
ds
lods
sbb
xchg
stos
and
ficompl
out
mov
push
mov
mov
or
dec
aam
lahf
push
movsl
cmp
mov
popf
lret
ljmp
lods
cmp
lret
add
sub
fimuls
fdivr
out
jmp
inc
dec
add
mov
sub
fnsave
cvttps2pi
pop
inc
fsubrl
add
imul
xor
inc
jl
xorl
int3
out
mov
sub
sbb
into
addr16
sbbl
jns
fs
ds
rcll
das
push
popf
mov
mov
adc
mov
cli
push
rcrl
push
mov
add
push
mov
bound
inc
mov
outsl
cmp
cmc
dec
push
ret
pushf
out
mov
mov
pop
adc
hlt
divl
mov
pop
inc
aas
fmul
xor
shll
jo
lret
int3
pop
pop
dec
and
adc
xlat
pop
test
dec
sub
cli
jge
or
xchg
lcall
dec
sbb
cmp
data16
xor
cld
fnsave
testl
push
inc
subl
nop
sub
aad
cmp
sti
sbb
or
jo
loop
inc
fsubrl
popa
fs
ja
call
adc
mov
cmp
mov
stos
push
jno
leave
jnp
ss
mov
adc
sub
mov
or
mov
adc
ret
loope
pusha
sar
pop
and
rol
add
bswap
sbb
mov
jmp
inc
stos
or
sub
mov
push
shlb
out
pop
daa
ja
lock
mov
mov
jb
arpl
orb
fwait
push
mov
inc
lea
sub
jno
mov
jle
pop
xchg
add
and
or
in
and
xor
icebp
mov
jbe
and
pushf
je
push
cmp
cwtl
movsb
ret
sbb
aam
std
ffreep
in
mov
ret
xchg
inc
mov
jle
cwtl
addr16
cs
addr16
push
nop
pop
or
jno
fmull
aam
aam
test
cld
fimuls
and
mov
pop
pop
push
daa
mov
into
fisttpll
dec
pop
cwtl
or
imul
jmp
cmpl
jecxz
xchg
adc
daa
ret
and
push
adcl
in
idivb
mov
jg
or
pop
fisttpll
pushf
dec
roll
or
xlat
shl
es
ja
cmp
pop
mov
repnz
add
dec
add
cltd
in
xor
ret
popa
outsb
call
lea
add
pop
inc
xor
mov
pop
push
sbb
pop
adc
out
lds
fcoml
scas
mov
das
popa
push
xchg
fstp
ret
mov
xor
daa
mov
cmpsl
pop
fidivrs
out
mov
and
leave
sbb
add
es
sub
cmp
adc
inc
mov
arpl
sub
jb
jo
addr16
fsts
loopne
das
xor
imul
sbb
nop
mov
into
xchg
mov
das
push
mov
adc
sub
fnstenv
mov
jae
es
imul
fisubl
mov
mov
pop
inc
add
cmp
and
mov
xchg
lret
xor
into
pushf
gs
add
inc
jp
shlb
push
sbb
or
pop
loop
leave
dec
rolb
leave
and
add
dec
jo
jp
cmc
jnp
cmp
lds
jecxz
es
fbld
pushf
or
rcr
sub
inc
or
xchg
push
or
data16
stc
mov
pop
and
xor
cmp
mov
outsb
cwtl
dec
lret
push
imul
push
lock
lahf
and
mov
dec
loope
fsubr
test
jmp
cmp
mov
mov
inc
sahf
mov
lea
mov
jb
fiaddl
add
mov
cli
mov
pop
xor
clc
push
push
repnz
out
mov
js
cmp
jns
das
cmp
imul
fs
mov
cmc
mov
lret
fs
mov
repz
push
fdivs
dec
mov
out
leave
and
clc
jo
lahf
ljmp
pop
js
cmp
mov
icebp
movsl
sub
sub
cmpsb
imul
cmp
sub
retw
loope
in
out
xor
mov
fnstsw
and
pop
shrb
fsubl
cmpsb
aas
inc
jge
inc
ret
and
push
into
fidivs
movb
out
gs
nop
mov
mov
aam
imul
pushf
hlt
mov
pop
cli
test
and
xchg
mov
test
addr16
add
sahf
movhlps
std
add
movb
loop
pop
loopne
pop
dec
push
testl
aaa
testb
mov
xchg
pop
mov
dec
fs
inc
lret
rorl
das
imul
shlb
cli
xchg
sbb
push
xchg
iret
out
mov
jge
rclb
sub
outsl
and
add
int
mov
mov
push
dec
insl
inc
insb
and
cmpsb
xchg
mov
xor
and
data16
cmp
pop
fnstenv
cmp
cmp
jmp
dec
jecxz
mov
loope
jnp
xchg
imul
or
aaa
stos
rcl
je
cmp
call
mov
out
mov
and
int3
adc
xchg
pop
nop
fistpl
jecxz
test
es
aam
subl
movsl
fwait
sbb
stos
test
fdivrp
dec
orb
adc
daa
pop
loopne
inc
cmpsl
fnstenv
jns
push
outsl
sbb
sbb
mov
movsl
jnp
ficoml
lds
test
push
mov
or
aas
imul
pop
xacquire
pop
roll
incb
or
jecxz
adcl
dec
add
adc
adc
in
imull
fdivl
jl
push
dec
xlat
outsb
fwait
iret
push
imul
mov
mov
push
ljmp
adc
mov
outsl
pop
cmp
sbb
cmpsb
sbb
push
sbb
ret
push
lret
ds
adcl
add
add
sbbl
jno
decb
or
sub
pop
jns
sbb
sub
pop
sbb
rcr
jno
addr16
push
ja
xorl
add
sbb
lahf
aas
fcomps
lret
decb
aad
cmp
jecxz
lret
adc
cmc
lahf
jmp
inc
loopne
jg
add
test
jno
outsl
shrb
sub
mov
outsb
dec
jo
or
xor
push
je
inc
jg
jns
push
jp
jbe
jp
sub
mov
hlt
or
cld
ds
and
mov
push
jo
cmpsb
pop
iret
hlt
aam
inc
ret
xchg
imul
inc
jg
mov
mov
jle
fcmove
sbb
cmpsl
aas
push
jbe
xchg
xor
xchg
fmull
xchg
data16
and
cli
mov
cmpsb
and
cwtl
test
int
in
test
mov
push
mov
aad
or
xchg
mov
pop
xchg
push
sahf
nop
cld
inc
roll
addr16
adc
outsb
cwtl
loope
mov
jecxz
std
jle
aas
mov
repz
add
loope
outsl
pushf
inc
shll
mov
repnz
dec
xchg
dec
scas
pop
mov
xchg
and
insb
push
fsubl
fsubl
xor
inc
and
imul
xchg
nop
addr16
cltd
xor
mov
inc
outsl
fimull
stos
stc
xchg
sbb
jp
xchg
add
xor
and
push
dec
loope
pop
jecxz
adcl
push
les
adc
mov
bound
or
ss
pop
and
hlt
ja
and
dec
stc
adc
sub
ja
rclb
push
sbb
cwtl
jecxz
repnz
jno
add
je
cmp
pop
mov
pushl
xor
ja
jg
push
imul
pop
pop
stos
jmp
cmpsl
stos
scas
dec
push
ss
mov
out
mov
pop
dec
inc
ret
push
pop
pop
rorb
mov
or
dec
pop
scas
sbb
mov
scas
repz
dec
jnp
aas
lea
and
es
xchg
aas
add
push
lock
pop
jge
lret
dec
rcrb
push
xor
inc
shrl
add
push
adc
roll
les
aaa
cwtl
out
fisubrs
sub
jmp
ds
dec
out
into
test
nop
aaa
fs
mov
cmp
pop
jns
jno
mov
inc
sub
inc
lcall
out
in
and
mov
call
push
xchg
push
imul
outsb
jecxz
jg
loopne
pop
stc
rolb
and
loop
and
mov
jbe
and
call
push
push
les
mov
repz
pop
aam
xchg
xchg
dec
pop
mov
shlb
lret
cs
mov
das
mov
dec
add
shlb
leave
into
dec
adc
sbb
stos
pop
push
sub
push
cltd
dec
pop
popf
int
je
dec
roll
jbe
pop
cmp
in
lods
push
cmp
stos
jl
lcall
or
scas
push
js
roll
mov
xor
mov
je
inc
movsb
or
addr16
mov
leave
xor
bound
mov
dec
push
sar
insl
jo
call
bound
out
mov
movsw
test
add
sub
pop
push
mov
mov
stc
outsb
dec
mov
loopne
negb
xlat
dec
pop
mov
fbstp
clc
mov
cmc
call
sahf
jbe
adc
inc
jne
mov
cmp
pop
cmc
fmuls
mov
insb
imul
push
cmc
sub
push
stos
gs
add
mov
lods
dec
fistpl
fimuls
orl
sysret
test
imul
out
enter
mov
mov
sub
sub
test
mov
push
sbb
out
sbb
pushf
sbb
je
repnz
mov
mov
std
and
mov
mov
mov
pop
sub
mov
and
es
dec
iret
lcall
and
nop
xor
jbe
fxch
popf
mov
mov
imul
fwait
sarb
adc
inc
pop
and
and
ljmp
js
int
jae
xchg
sub
and
clc
add
leave
loope
mov
or
nop
ss
movsl
fmull
mov
push
or
xorl
dec
pop
mov
lret
xchg
icebp
aam
mov
mov
add
loopne
notb
scas
push
mov
dec
inc
lret
mov
hlt
mov
movsl
add
roll
inc
mov
insl
in
jmp
stos
mov
mov
fnstcw
push
and
or
push
or
lock
ds
or
xlat
adc
xlat
loop
roll
mov
je
adc
mov
adc
xorb
inc
sbb
das
cmpsl
fyl2xp1
and
lahf
and
scas
out
fldlg2
pop
fldl
imul
cmp
scas
ret
test
mov
mov
pop
fstpt
ds
sbb
mov
sbb
mul
fsubl
pop
sarl
dec
jns
movsb
and
lock
icebp
mov
in
fwait
jl
xchg
mov
stos
lods
call
xor
outsb
out
pop
stos
imulb
pop
iret
mov
adc
scas
xor
scas
arpl
shr
je
push
xchg
pop
insl
jo
add
xchg
inc
mov
xor
jge
addr16
ja
iret
cmp
inc
cmp
inc
dec
mov
mov
rcrl
mov
cmp
xor
clc
scas
repnz
in
popa
lods
stos
mov
xchg
mov
sub
out
sub
fimuls
lock
add
mov
and
adc
out
dec
pop
mov
test
push
mov
xor
inc
andl
inc
popa
fdivl
xchg
stc
mov
add
rclb
iret
or
inc
les
cmp
cmpsl
repz
jl
xchg
jns
pop
push
xor
sbb
mov
mov
dec
fwait
nop
mov
mov
cmp
add
stc
push
pusha
movzwl
ror
movzbw
mov
cmc
stc
add
clc
test
bt
clc
mov
cmp
test
movw
movb
call
movl
pusha
pushl
movb
movb
lea
jmp
bt
stc
call
pushf
adc
pusha
pushf
lea
jmp
das
inc
add
insl
mov
call
das
mov
jl
das
mov
dec
int
popf
bound
xor
popf
lea
xchg
mov
sub
push
addr16
movsb
xlat
push
cmp
mov
xor
outsb
popf
mov
cmpsl
fdivrp
dec
pop
mov
insl
cmp
test
bt
jmp
shrb
add
daa
cli
push
mov
xor
xor
ret
jae
cmc
sub
out
test
pop
sub
test
sbb
push
outsl
loopne
and
jge
jge
jb
add
call
cmp
mov
aam
xchg
popa
leave
loope
push
ss
in
jno
jmp
lea
jne
xchg
scas
mov
xor
dec
pop
mov
sti
dec
test
pusha
stc
bt
xor
pushl
call
clc
clc
sub
stc
stc
cmp
pushl
jmp
pushf
call
dec
pushf
or
or
sub
shld
lea
test
bt
mov
sub
call
gs
loopne
in
adc
imul
mov
imul
jno
mov
inc
inc
mov
cs
loopne
xchg
pop
sub
and
xor
fstpl
sbb
mov
cmpsb
inc
xchg
sahf
test
loopne
repnz
sbb
in
add
sti
pop
outsw
call
cltd
mov
repz
leave
loope
adc
jbe
mov
mov
or
fcmovnb
mov
sbb
rorb
mov
push
int3
jecxz
scas
flds
or
mov
jmp
mull
mov
out
cld
cmp
pop
xchg
adc
shr
data16
and
cmpsl
xor
mov
mov
test
push
inc
sbb
mov
xchg
out
test
lods
xor
mov
sub
lods
dec
sbb
outsb
cmp
xchg
mov
insb
pop
cmp
lret
cmp
cmp
xchg
aas
mov
jno
outsl
mov
insb
add
jns
adc
push
dec
mov
inc
sbb
mov
imul
sarb
ljmp
xchg
sub
fwait
add
lds
mov
or
ljmp
or
lds
jmp
es
mov
and
inc
adc
testl
jb
rcr
movsb
cld
aam
xchg
xor
push
cmpsl
and
push
std
std
dec
mov
imulb
or
adc
or
or
jae
stos
inc
inc
adc
lds
add
les
in
ja
pop
outsb
inc
sbb
sbb
lock
dec
pop
mov
or
rolb
shrl
mov
mov
or
bound
sbb
dec
or
sahf
flds
lcall
cmp
stos
jb
push
cwtl
jle
push
pop
test
repz
addl
lahf
push
pop
sbb
popf
xchg
int3
cmp
inc
addr16
out
mov
int
mov
sub
jmp
jecxz
arpl
mull
xchg
mov
int
push
int3
dec
lods
das
sbbb
or
lldt
and
mov
push
iret
mov
lods
je
insb
sub
mov
add
hlt
andps
daa
dec
sub
ret
inc
lds
inc
roll
and
sub
inc
push
push
pop
test
mov
adc
aaa
jb
jle
dec
fdiv
in
add
adc
clc
pop
xchg
mov
ja
dec
mov
es
xchg
or
adc
jb
add
pop
lea
mov
inc
sbb
rorb
lods
add
cmpsl
adc
enter
jle
daa
in
out
cmp
shll
movsl
xchg
or
aaa
mov
bound
add
in
mov
xchg
test
shl
sti
into
add
enter
sbb
lcall
cmc
pop
cmc
dec
pop
mov
imul
les
dec
mov
push
cli
lea
sbb
adc
and
sbb
push
adc
jns
stos
ds
pop
mov
clc
mov
cmc
mov
mov
xchg
and
add
repnz
inc
shlb
mov
mov
and
and
and
ja
xorb
fwait
sbb
in
pop
lods
fwait
aas
loope
xor
jae
pop
lahf
sahf
cwtd
out
lods
push
mov
mov
push
dec
gs
or
adc
xor
add
daa
lods
pop
addr16
jmp
or
mov
mov
mov
xor
xchg
add
call
rol
rolb
sti
bts
shld
rol
bts
add
bsf
mov
clc
shl
mov
pusha
repnz
pusha
pushf
movl
pushf
lea
jne
bswap
movsbw
movb
pushf
mov
mov
not
lea
call
push
cmpb
pushl
lea
jne
aad
dec
mov
movzbw
xor
pusha
pusha
cwtl
mov
mov
movb
lea
jmp
mov
pushf
lea
jb
jmp
cmc
add
cmc
stc
pusha
movzwl
clc
pusha
test
mov
test
cmp
add
test
cmp
mov
clc
test
pushf
lea
je
stc
pushf
add
movb
clc
cmp
cmp
push
pushf
lea
jb
call
lea
call
je
pushf
mov
lea
jae
pusha
pusha
mov
not
jmp
add
test
movzwl
lea
inc
xor
mov
pusha
movb
pusha
jmp
cmp
pushl
call
mov
push
mov
jmp
add
dec
outsl
arpl
inc
jb
gs
iret
rol
jge
pop
mov
stos
ss
out
inc
rorb
and
imul
and
add
fcoml
push
std
sbb
scas
pop
mov
xchg
jl
mov
js
lret
imul
fldenv
out
xchg
pop
lret
mov
jp
sbb
adc
sub
dec
pop
mov
add
inc
and
or
add
setae
jmp
icebp
mov
xlat
push
cltd
int3
xor
test
loop
rorb
movsb
aaa
cli
sub
dec
outsb
xchg
sub
cmp
mull
cmp
jle
and
fucom
mov
mov
pop
loope
iret
daa
or
jmp
jne
je
std
iret
mov
stc
push
in
rcll
sub
stc
push
ficompl
leave
loope
shrb
lret
cmp
mov
ret
aad
jge,pt
imul
lods
and
pop
leave
sbb
mov
push
mov
sbb
orb
insl
jo
js
or
push
or
mov
repz
pop
mov
movsb
cmp
stos
je
std
sub
lea
fsub
sbb
ljmp
cmpsl
xchg
daa
add
pushl
into
mov
pop
inc
std
in
je
and
sub
dec
jl
pop
divb
loopne
dec
fwait
not
inc
lds
fmul
pop
pop
mov
pushf
xchg
jge
adc
pop
cmp
outsb
cmp
push
imul
popa
fildll
aad
incl
jle
imul
sbb
iret
shl
dec
imul
sbb
iret
ds
mov
mov
jae,pt
mov
xchg
mov
dec
pop
test
add
movzbl
or
bswap
mov
clc
cmpb
call
sub
bt
bt
clc
cmp
push
pushf
lea
jae
pusha
movb
pushf
movb
lea
jmp
pusha
pusha
jmp
movl
push
pushf
pusha
pushf
lea
jmp
movw
repnz
pushf
push
lea
jne
movsbw
pusha
setp
bswap
movb
call
mov
cmp
sub
lods
or
sbb
hlt
pop
push
push
add
ret
imul
pop
stos
call
mov
adcl
adcb
push
and
ret
dec
mov
jg
negb
movl
leave
loope
je
aad
push
pop
lcall
test
and
mov
hlt
sti
cmp
mov
push
add
mov
test
jmp
jp
sub
cmpsl
dec
lock
mov
pop
and
rorl
xchg
cmp
fcomps
or
arpl
push
ja
xchg
adc
and
sub
adc
mov
jecxz
jb
xchg
hlt
movsb
push
loopne
push
fsts
jge
fistpl
or
iret
mov
pop
stos
insl
clc
and
mov
rorb
push
add
incb
cld
push
add
mov
jo
stc
cmc
mov
sub
fmuls
adcl
lret
popf
fsubs
xchg
pop
cmpb
or
sub
insb
fiadds
lahf
lds
jae
cmp
and
das
rclb
and
insl
cmp
xor
ffreep
sbb
stos
add
pushf
lea
jne
jmp
clc
cmp
push
cmp
sub
bt
mov
repnz
jmp
sbbb
scas
filds
aas
out
sahf
sbb
dec
mov
mov
in
mov
mov
lods
pop
imul
mov
inc
dec
sbb
paddw
pop
dec
pop
mov
dec
sarl
sub
sbb
loope
iret
das
jp
lret
xchg
pop
cmp
repz
pop
push
test
ret
dec
push
aad
adc
pop
stos
cmpsb
lods
pop
call
lea
ja
cmc
pushf
sub
call
mov
dec
stc
cmc
xor
call
mov
daa
rol
ss
sub
ffreep
in
call
xchg
dec
cwtl
fbld
add
xor
dec
test
imul
cmp
mov
lahf
inc
in
dec
push
add
mov
vmread
mov
and
mov
mov
shl
pop
aaa
push
mov
inc
daa
inc
mov
jp
movsb
sar
push
imul
jle
dec
pop
stos
inc
push
jne
pushl
lea
jb
test
push
push
cmp
lea
jg
pusha
mov
lea
jae
not
pushf
btc
mov
bts
mov
btc
and
pushf
mov
pushf
test
cmc
sub
jno
xor
cmc
cmc
stc
pushf
repnz
jmp
lea
je
cmp
test
sub
pusha
cmp
bt
push
cmp
jmp
push
mov
les
xchg
addl
mov
mov
out
es
xor
inc
ja
xchg
out
adc
jnp
arpl
clc
and
std
xor
mov
or
in
adc
push
out
icebp
mov
dec
push
and
push
pop
dec
cltd
push
mov
sbb
push
js
pop
jge
repz
mov
adc
dec
cmpsl
xlat
loop
dec
int
stc
repz
jmp
and
add
dec
pop
lods
and
andb
stos
test
iret
repz
sub
push
jne
cmp
push
or
xor
cmp
xlat
mov
push
out
push
fisttps
xlat
and
sub
cmp
adc
push
imul
sub
mov
mov
das
movl
call
bt
push
xor
pushf
pushf
jmp
sbb
jno
mov
jbe
pop
fwait
xchg
mov
nop
rorl
pop
ret
aas
cmpsb
test
in
ja
adc
jne
and
int3
inc
mov
lods
jecxz
jl
or
jno
in
test
lds
xchg
fwait
xchg
movsb
imul
add
leave
loope
das
dec
inc
add
mov
adc
mov
lret
xlat
dec
rorl
lods
and
jmp
fdivl
push
rcrb
andb
mov
or
sbb
insb
lahf
int3
sqrtps
gs
stc
and
cld
imul
outsl
ja
sbb
dec
dec
lret
cmp
insl
mov
in
test
aam
std
loop
push
or
movb
std
push
ss
pop
scas
popa
adc
dec
add
jge
ret
sub
clc
jo
xchg
mov
andl
xchg
les
mov
sti
push
mov
mov
aam
repnz
in
rsqrtps
call
in
arpl
fbstp
js
jns
cmp
push
fistpll
jmp
xchg
xchg
cwtl
out
jne
push
adc
pop
scas
lods
jle
cmpsb
mov
push
jne
mov
ss
enter
xor
mov
cld
cmp
addb
frstor
push
push
fs
pusha
dec
adc
fs
pusha
sub
jecxz
fwait
psrlq
xlat
inc
shrb
test
jae
pop
cmp
push
gs
cmpsl
pushf
pop
push
pop
sub
fstps
and
adc
push
sbbb
dec
pop
scas
ljmp
jmp
inc
sbb
ja
movl
arpl
jns
lahf
and
shll
call
orb
stc
xor
out
pop
iret
out
inc
stos
mov
fidivrl
inc
call
ds
into
mov
sbb
movsl
pushfw
insb
insl
cmc
in
sub
dec
ljmp
sahf
test
pop
pop
mov
cli
or
mov
loopne
pop
adc
call
pop
scas
push
add
movb
mov
mov
movb
mov
pushl
ret
xchg
sub
ja
pop
into
push
aam
bound
and
push
sbb
inc
movsb
sahf
pop
pop
pop
out
inc
repnz
leave
push
lret
test
lods
dec
fsubl
push
pop
adc
out
subl
push
cld
shrl
movsb
push
inc
mov
and
cmp
cwtl
and
leave
loope
fistps
sub
call
subl
push
add
dec
scas
push
gs
jmp
dec
pop
mov
movb
movl
pushf
push
pusha
movl
pushl
lea
jmp
bt
movzwl
call
and
stos
call
stos
dec
fdivs
push
popa
dec
shl
lock
lss
fisubl
xor
lret
js
sub
push
mov
loope
je
pop
pop
pop
and
and
push
popa
cmp
test
jl
pushf
sub
push
inc
sbb
clc
cmc
push
mov
or
lock
dec
or
addb
in
into
adc
in
pop
mov
adc
mov
je
dec
pop
mov
movw
jmp
call
jl
add
add
add
add
add
add
and
add
outsl
out
add
sub
incb
sub
bsr
and
add
btr
bts
bsf
mov
jmp
inc
pop
dec
inc
xchg
fdiv
jnp
pop
ret
stos
push
stc
mov
mov
add
je
mov
fnstcw
cmp
xchg
mov
jb
and
and
mov
adc
iret
js
test
dec
push
movntq
cmpsl
sub
xchg
stos
xchg
outsl
pop
fprem1
in
jbe
jo
and
xchg
xor
sub
ja
push
out
test
test
cs
mov
mov
inc
push
add
and
rcr
cmp
xchg
je
and
punpckldq
push
sub
or
pop
xor
and
scas
stos
sub
sbb
fstpl
fwait
push
push
cmpsb
mov
mov
test
adc
jmp
popf
test
pop
add
pop
sti
test
xchg
test
dec
sbb
pop
rclb
pop
jnp
or
das
imulb
cltd
fs
xchg
adc
lahf
fcompl
jb
and
mov
fsubrp
push
mov
and
addr16
loop
mov
cwtl
scas
popf
inc
andl
daa
divb
sub
inc
adc
jle
or
jecxz
fnsave
and
mov
add
add
push
jae
jne
lcall
outsl
push
sbb
dec
push
mov
sbb
mov
stc
inc
outsl
cld
popa
arpl
dec
sbb
cmc
mov
push
aas
incl
shlb
lods
or
stc
enter
xchg
aas
sub
push
fisubl
xor
fisubl
pushf
and
pop
mov
or
or
push
sahf
leave
sbb
dec
sbb
mov
bt
bt
cmpb
jmp
mov
push
push
out
jae
xorl
pop
mov
mov
imul
cmp
adc
xchg
int
mov
pushf
jmp
sbb
int
data16
and
gs
dec
js
jecxz
mov
leave
test
ret
push
cmpsl
stos
jo
mov
lcall
int
dec
bound
push
pop
and
inc
dec
jmp
stos
cmp
mov
xchg
dec
pop
mov
add
add
lods
lock
or
ror
push
cwtl
sar
mov
inc
sub
inc
sbb
push
cwtl
or
push
bt
shrd
cmp
das
push
movsbl
btr
shrd
or
xor
movsbw
call
shr
jmp
scas
inc
imul
pop
mov
inc
lea
lcall
cmp
pop
xor
jl
pushf
das
lret
xchg
and
out
cmp
test
out
pop
adc
in
fsubr
push
mov
stc
in
mov
lds
dec
pop
push
call
ret
mov
scas
push
jae
jmp
add
cmp
fbstp
xchg
sub
das
movsl
in
aaa
mov
add
daa
es
xchg
loop
and
dec
pop
movsl
sbb
lea
jmp
mov
push
setae
not
lods
call
pushl
lea
jae
jmp
fbstp
jge
mov
pop
push
dec
mov
mov
popl
pusha
stos
sahf
mov
enter
imul
mov
push
in
ds
pop
in
lcall
pop
add
mov
movsb
movd
js
frstor
popf
or
inc
adc
inc
fsubrl
sub
out
insb
sbbl
mov
add
jmp
call
mov
mov
add
clc
mov
or
add
je
outsb
adc
mov
stc
jo
sub
pop
loopne
out
sbb
cmp
in
adc
sub
dec
popf
js
lret
jle
mov
push
sbb
sahf
test
cmp
into
push
mov
dec
lea
pop
punpckhdq
push
icebp
or
mov
and
out
xchg
xor
or
push
lds
sahf
gs
sbb
pop
cmpsl
push
add
stos
stos
idivl
xor
adc
les
cmp
xchg
fisubl
out
dec
mov
popa
lea
cmc
shrb
jne
fistpl
outsb
jle
add
or
aam
rcrl
fadd
xor
rcrb
push
dec
pop
cmpsl
mov
mov
pushf
pushf
pushl
ret
pushl
mov
push
push
movb
pushl
ret
daa
mov
stos
out
xchg
into
jno
lods
pop
repz
mov
fbstp
inc
and
add
cmp
lea
mov
xor
mov
insl
sub
outsl
pop
ds
shl
stos
out
pop
xchg
lods
jo
shrb
pop
lret
aaa
jle
add
mov
pop
cmpsl
inc
iret
pop
add
inc
js
je
jb
arpl
jae
call
shld
mov
pusha
sub
clc
jmp
pushf
pushf
lea
je
shr
sub
movsbw
cmc
or
inc
mov
mov
pushf
mov
clc
shr
cmp
mov
jmp
or
iret
bound
inc
pop
jno
ja
cmp
mov
ret
pop
test
outsl
mov
jg
adc
adc
push
push
test
js
ja
and
mov
out
cs
outsb
testl
loope
sub
fmul
adc
imul
sbb
lock
popf
push
xor
test
cwtl
dec
pop
cmpsb
pop
leave
aam
add
add
mov
cmp
lcall
lahf
rolb
mov
add
xchg
pop
and
mov
xchg
aam
lods
xor
mov
fiadds
dec
add
adc
jb
gs
in
xchg
cmpb
mov
outsl
sbb
push
ss
fs
cmp
cwtl
int
xor
arpl
pop
cwtl
mov
in
pop
mov
inc
arpl
insl
test
xchg
cmpb
dec
pop
jno
lds
cltd
in
aad
adc
repz
dec
pop
pop
jge
testl
cmp
fldenv
sbb
test
jmp
push
xchg
lea
es
insb
inc
aam
adc
sar
pop
data16
or
popf
inc
or
scas
cmp
cmpsb
mov
adc
sub
ja
and
pop
fiadds
nop
call
cmp
scas
mov
jns
mov
pusha
sub
mov
and
mull
dec
add
sub
outsb
pop
cmp
adc
lret
je
cmp
fisttpll
mov
shr
jmp
in
push
push
sar
lods
mov
rorl
mov
jnp
sti
jbe
mov
sub
popa
jne
aam
inc
and
clc
cltd
cmc
das
dec
mov
dec
pop
pop
cmpsl
stos
call
out
pusha
sub
push
pushf
pushl
popl
test
clc
jmp
movl
pushl
movb
mov
push
pushf
pushf
pushl
pushl
ret
lea
jb
cmc
cmp
pusha
pusha
jmp
test
pushf
sub
inc
cmp
lea
test
lea
add
call
push
xor
int3
pop
sbb
int3
iret
jb
add
push
sarb
in
or
cmpsb
adc
dec
arpl
out
clc
push
and
pop
mov
mov
repnz
inc
dec
mov
lock
pop
pop
fs
imul
imul
pop
testl
mov
andb
jnp
loope
pop
inc
insb
mov
leave
ret
pop
ljmp
addr16
sti
into
icebp
lods
cmpsl
shl
in
loope
dec
push
scas
scas
out
shlb
mov
mov
cmp
adcb
lods
mov
cmc
sbb
pop
cmp
inc
add
ret
or
data16
sbb
mov
inc
inc
and
pop
pop
icebp
es
cmp
mov
push
push
jmp
mov
jp
mov
push
mov
test
push
jns
push
shrb
cmp
scas
sub
cmp
inc
inc
test
sarl
cmpsl
adc
out
sbb
inc
and
mov
call
mov
push
and
popf
shlb
cmp
or
sub
addr16
je
out
dec
jo
pop
and
mov
sbb
dec
add
ja
call
cmc
xchg
pushf
lahf
add
sub
in
and
call
in
pop
mov
push
adc
jle
je
pop
sarl
pop
mov
cwtl
cmp
push
aaa
mov
aas
cwtl
and
dec
pop
pop
out
cmp
push
add
mov
stc
cmpb
pusha
mov
pusha
movw
lea
jne
neg
bt
sub
shld
bts
mov
bt
call
dec
pusha
lea
jne
pushf
and
bswap
mov
pushf
call
scas
pop
rclb
adc
pop
mov
repnz
mov
sub
icebp
scas
sub
fcmovb
sub
dec
lahf
mov
pop
jp
cmp
out
mov
adc
bound
xor
mov
add
repnz
jne
cmp
sbb
mov
ljmp
mov
add
push
mov
cmp
push
xor
dec
pop
pop
jg
repz
mov
lea
ja
sar
inc
call
pop
pop
cli
adc
pop
sub
mov
push
cld
aas
bound
jg
xchg
xchg
lahf
ljmp
movsb
mov
addr16
inc
mov
and
sahf
mov
push
jg
adc
popa
stos
lods
aas
lea
xor
popf
adc
sub
jl
push
inc
or
sub
ja
inc
insl
or
fs
divl
fwait
ret
out
mov
pushf
push
ret
dec
pop
pop
cmp
ja
rcrb
mov
lcall
cmp
and
mov
pusha
pushf
pushf
pushl
pushl
ret
clc
add
mov
pushf
ror
test
bt
pushf
sub
jmp
call
dec
movsb
out
push
popa
pop
jo
ss
xchg
lds
sahf
gs
lea
dec
mov
stos
decb
rcll
imul
aas
pop
rcr
test
add
mov
xor
inc
jge
sahf
repnz
push
das
xor
sbb
or
dec
and
or
ljmp
and
hlt
sti
loop
cwtl
iret
into
fnsave
inc
add
pop
adc
push
mov
pusha
pusha
mov
setno
bswap
not
bswap
movl
movzbl
not
mov
pushf
lea
jmp
pop
fbld
es
fdivs
xor
jecxz
lea
stos
mov
or
mov
inc
push
in
jl
or
xchg
fimuls
mov
in
les
cmp
and
sbb
cmc
jecxz
jb
repz
ljmp
mov
or
jo
adc
enter
inc
das
push
and
nop
out
sbb
pop
mov
and
int3
push
xor
pushf
pushf
lea
jmp
call
ja
ret
dec
dec
bound
in
orb
aaa
aad
roll
loop
jmp
pop
enter
mov
pop
push
dec
js
mov
or
cwtl
adc
aaa
add
stc
sbb
dec
ss
hlt
sti
mov
pop
push
in
out
or
lahf
or
lret
mov
and
sub
aad
mull
ret
mov
add
lahf
mov
fistpl
adc
test
adc
ret
push
loope
imul
mov
mov
dec
pop
pop
xchg
or
jmp
xchg
xor
push
sbb
in
jecxz
stc
lods
xchg
sbb
xchg
jb
or
cwtl
mov
or
push
insb
loop
push
mov
clc
adc
ja
lret
pop
inc
mov
movsl
cwtl
sub
mov
push
xor
cwtl
cmpsl
loopne
pop
pop
js
sub
aad
les
xchg
xor
push
sti
mov
cli
adc
mov
mov
dec
jg
push
decl
pop
lcall
add
cmp
mov
push
fninit
scas
mov
adc
stos
cmc
outsl
js
icebp
popf
lahf
rclb
call
clc
xchg
fnstsw
loopne
clts
add
sbb
xchg
leave
out
popf
popa
lods
fwait
sbb
lret
gs
lret
adcb
repnz
adc
mov
jb
pop
push
dec
fsubs
pushf
push
movl
pusha
push
lea
jmp
pushf
jmp
imul
gs
xor
cs
insb
add
pop
sub
call
pop
std
std
mov
outsl
cwtl
mov
ret
jnp
out
int3
iret
prefetch
bound
pushf
mov
pop
add
xor
jecxz
cmp
jge
sbb
mov
and
aam
push
roll
fldenv
test
aad
xchg
xor
fdivl
xchg
movsl
test
lret
mov
ror
jmp
adc
dec
out
stc
mov
jecxz
mov
mov
pop
shll
mov
cmp
sbb
cmp
dec
fimuls
fidivrl
jb
add
mov
shll
push
nop
mov
stc
out
adc
popf
inc
int3
stos
in
int
sbb
inc
ret
nop
outsl
jnp
inc
pop
jo
lock
sub
push
jmp
mov
and
and
add
imul
cmpsb
inc
daa
repnz
mov
pop
push
cmpsb
mov
inc
dec
pop
ss
fisttpll
push
ds
testl
mov
xchg
stos
sbb
fdivl
insl
sbb
mov
std
and
and
cli
repz
in
jg
mov
cmp
sti
jle
fidivl
adc
xor
aam
insb
sub
jle
mov
adc
xchg
dec
rorb
sbb
lods
cmc
dec
sbb
xor
add
mov
inc
and
push
xchg
into
movsl
jl
fs
insb
fbstp
mov
ficoml
mov
push
cli
in
mov
loope
out
pop
lods
mov
sub
adcl
in
cli
movsl
inc
push
jle
pop
fisttps
pop
push
call
les
adc
out
pop
scas
mov
xor
aas
push
call
mov
fwait
adc
daa
stos
out
xchg
push
jge
sub
rorl
and
in
or
cmpsb
cwtl
pushf
xchg
arpl
cmp
in
and
pop
out
test
xchg
jae
leave
xchg
xor
xchg
cli
push
push
hlt
ret
leave
xchg
dec
jecxz
add
rclb
arpl
inc
gs
xchg
cwtl
enter
add
fidivl
mov
add
jl
mov
inc
cmp
icebp
jle
add
popa
push
pop
cwtl
mov
mov
jb
ret
dec
pop
push
bound
cwtl
push
bound
lods
add
xchg
ss
xor
icebp
jle
sub
cwtl
mov
popa
fs
dec
add
jne
jecxz
loope
aaa
mov
or
push
cmp
data16
movsl
jle
popa
addr16
dec
sub
jb
jge
mov
shll
and
test
imul
rep
jg
insb
jge
pop
xor
adcl
ja
int
dec
pop
push
adc
es
inc
pop
xchg
push
push
push
fcmovb
push
pop
mov
jmp
clc
ja
cmpsl
insb
dec
test
add
lret
pop
add
cmp
popf
pop
dec
insl
mov
inc
movsl
scas
into
push
or
sar
jle
popf
pushf
int3
add
mov
ret
outsl
cmc
sub
mov
inc
aam
lret
data16
xor
xchg
mov
decb
cli
cltd
jo
cmpsb
adc
aas
es
lea
ja
push
pushf
push
lea
jb
pusha
pushf
bt
cmpb
mov
pushf
lea
jne
bswap
lea
mov
pushf
mov
pusha
lea
jmp
mov
sub
call
iret
sub
pop
mov
cmp
pop
pop
dec
jns
aas
and
clc
mov
mov
jno
iret
mov
cli
sub
gs
mov
ret
fsub
xor
sub
scas
in
and
xor
add
lahf
cmp
in
mov
fdivl
adc
leave
out
stos
xchg
push
gs
hlt
cmp
into
ljmp
mov
xor
sub
jecxz
scas
dec
pop
jge
push
sti
ret
lea
test
cwtl
sub
orl
adc
test
bound
pop
jnp
inc
mov
cmpsl
ds
dec
subl
jb
mov
dec
clc
aas
mov
aad
mov
fs
pusha
popf
pop
test
push
push
pop
bound
mov
int
mov
adc
das
lahf
loopne
stc
push
and
jne
adc
mov
xchg
push
or
adc
fcmovu
or
cmp
cwtl
inc
out
inc
push
mov
incb
xchg
aam
and
xor
cmp
adc
push
lods
jns
ret
into
xchg
call
jne
mov
push
add
leave
mov
shl
les
out
add
push
pop
xchg
mov
xchg
add
jmp
sbb
cli
xchg
sbb
adc
cmp
inc
pop
sbb
pop
je
or
sbb
dec
pop
push
xor
lods
arpl
add
jmp
sbb
sbb
adc
in
jb
xchg
inc
cmp
mov
test
dec
cld
stos
popf
leave
adc
cmc
jge,pt
push
loop
xor
int3
cmpsb
add
lods
xchg
pop
subl
aaa
and
mov
mov
pop
scas
or
mov
cmp
lcall
dec
mov
nop
sbb
test
rorb
std
and
addr16
inc
sti
pop
sbb
enter
add
negb
and
orb
dec
pop
push
lods
mov
stos
lods
pop
or
jb
nop
adc
loope
scas
insb
mov
clc
loope,pn
pop
add
jns
and
lods
fnstsw
cmp
loope
inc
jbe
xchg
sti
mov
int
dec
mov
in
inc
or
enter
stos
lods
pop
adc
mov
mov
movsb
and
pop
jbe
inc
cmp
lret
push
jno
mull
dec
shll
in
ja
outsb
jns
mov
scas
fwait
mov
mov
filds
push
and
in
aad
into
adc
rep
push
xor
scas
or
adc
mov
mov
outsl
lea
pop
xchg
xor
push
out
pop
or
pop
jnp
add
pop
aam
jl
jge
xchg
pushf
bound
xor
iret
imul
push
push
pop
jmp
lret
ljmp
cltd
arpl
sub
jge
popf
jmp
inc
pop
add
mov
in
cwtl
stos
pop
ret
idivb
xlat
jecxz
je
dec
ror
sbb
std
out
ret
test
int
insb
cmc
jl
and
inc
out
jge
movsl
inc
cmc
pop
jbe
insb
mov
add
sub
into
decb
push
pop
inc
mov
rcl
les
xor
loopne
lock
rol
inc
shr
call
lea
jne
sar
shl
sub
cwtl
lea
movsbw
mov
push
push
pusha
lea
jmp
mov
test
stc
xor
cmc
repnz
pushf
jmp
pushl
push
call
mov
not
xchg
mov
lea
movzbw
mov
mov
lea
jne
mov
pushf
jmp
jmp
call
or
inc
pop
push
adc
popa
cli
cmc
fdivs
adc
js
cwtl
jmp
mov
push
xor
mov
sbb
aas
inc
adc
addr16
rcll
push
mov
add
mov
jg
pusha
cmp
outsl
ficoml
popa
sub
xor
pusha
inc
xchg
in
adc
and
jns
add
sub
add
test
sub
je
inc
pop
xchg
into
add
ret
imul
lcall
aad
xchg
dec
or
dec
mov
jbe
dec
jp
add
imul
icebp
movb
lea
jmp
rcr
shl
test
sub
cmc
bsr
bts
add
rol
ror
mov
jmp
jmp
mov
pusha
stc
test
pushf
call
add
test
cmc
cmc
cmp
jmp
jb
std
shr
call
test
jae
add
lds
cmp
incl
cmc
shl
imul
out
cli
stos
xlat
and
xorl
mov
sub
sub
lods
inc
fmull
dec
cmp
stc
lea
ja
cmp
rcl
rcr
dec
sub
add
jmp
movl
pushf
lea
jmp
pushl
jmp
bt
push
stc
or
pusha
call
push
pushl
lea
jne
rcl
movzbw
mov
push
btr
sub
bsr
stc
bsr
neg
lea
test
sub
call
rol
bts
mov
pusha
push
stc
test
sub
pushf
repnz
mov
movb
pushl
lea
jne
or
mov
rcl
clc
clc
sub
rcl
rcl
mov
jmp
movl
jae
push
push
lea
jmp
cmp
push
call
je
scas
and
lods
fisttpl
adc
roll
xchg
add
sahf
repz
iret
lcall
jns
push
dec
push
sbb
bound
jns
fadds
out
xchg
imul
pop
push
mov
es
fldl
adc
xchg
in
adc
enter
stos
jmp
and
ljmp
dec
adc
dec
pop
push
pop
cmpsl
sbb
daa
push
mov
iret
ret
fwait
jp
jge
cmp
mov
dec
inc
mov
push
fstpl
push
push
push
xlat
and
stos
mov
mov
add
call
cmp
sarl
nop
fadd
mov
mov
add
dec
mov
shl
movsb
lea
je
pusha
not
movzbw
call
movntq
out
and
push
imul
and
movsb
pop
push
notl
xchg
test
push
testl
jne
mov
incl
sbb
test
pop
add
mov
test
sub
lahf
jnp
repnz
ss
jae
fwait
scas
lods
in
cs
mov
divb
jp
rcl
leave
ds
fbstp
into
add
jp
ret
in
ja
cmc
adc
xchg
mov
mov
orl
out
dec
inc
pusha
jge
repnz
add
repnz
inc
cs
hlt
setbe
mov
sub
adc
and
iret
int
xchg
mov
fs
jle
sbb
pop
mov
sbb
xchg
sbb
and
imul
sbb
outsb
int
mov
das
cs
mov
enter
lods
ret
adc
js
fmulp
sub
dec
pop
dec
daa
repnz
nop
cmp
push
dec
mov
stos
icebp
arpl
gs
ljmp
lock
call
mov
adc
jmp
adc
je
add
dec
adc
push
xchg
mov
pop
push
inc
lea
lock
out
pop
mov
loope
sub
push
push
jne
imul
leave
out
out
lea
ret
mov
add
movsb
and
js
push
sub
dec
pop
dec
mov
btc
rcr
push
mov
cmc
cmpb
call
pushl
pushl
mov
pushf
not
mov
movzbl
lea
mov
call
cmp
mov
cmp
pusha
test
push
add
movb
cmc
test
pushf
call
and
xchg
cmc
mov
sbb
in
arpl
sub
jp
sub
loop
and
add
cmp
icebp
jl
sub
fcomp
outsb
int3
shl
sbb
fidivl
or
add
push
nop
push
mov
xor
ret
pop
adc
pop
add
jbe
mov
mov
fsubp
test
imul
out
repnz
mov
dec
sbb
aad
mov
dec
jecxz
mov
cmp
adc
mov
in
sub
jns
pop
bound
jae
sub
and
add
sbb
test
mov
inc
and
dec
addr16
je
hlt
lock
out
cmp
ljmp
in
roll
leave
sub
xor
cmpsl
mov
sub
jl
pushf
xchg
js
pop
xchg
scas
ret
inc
dec
push
dec
fstpt
mov
dec
pop
dec
in
cmp
xchg
les
seta
lea
call
fnstenv
jge
std
mov
ret
stos
scas
adcl
sbb
and
jecxz
rcl
fildll
mov
dec
cs
sti
sbb
jle
rcr
lret
cmpsb
cmp
xchg
jae
imul
hlt
cmpsb
push
dec
leave
out
inc
mov
cmp
inc
out
sub
lods
adc
mov
jle
adc
repnz
rorb
pop
dec
mov
ret
jbe
int3
outsl
mov
cmp
mov
pop
imul
out
xor
cmp
add
or
xchg
std
mov
mov
sbb
out
push
dec
pop
dec
mov
sbb
inc
dec
ds
push
push
outsl
sarb
adc
mov
das
cli
sbb
clc
imul
ret
cmpsl
push
inc
lods
mov
add
scas
push
int
lods
cli
inc
sbb
lds
mov
push
in
xor
pop
test
mov
cli
loop
fcompl
flds
mov
fld
ljmp
data16
jge
xchg
xchg
pop
xchg
mov
ret
mov
stc
jo
dec
mov
pop
mov
daa
dec
pop
subl
xchg
fnstsw
dec
imul
adc
xchg
inc
rorl
shl
and
xchg
test
inc
pop
call
or
adc
enter
ret
xor
mov
shlb
sbb
dec
pop
inc
lcall
mov
push
aas
cwtl
mov
adc
orb
sub
sbb
and
mov
cmp
sti
outsb
or
es
xor
icebp
jg
and
push
imul
ds
dec
push
int3
mov
imul
testl
add
adc
outsb
sti
push
pop
out
popf
int3
sub
dec
dec
das
int
push
int3
je
jb
popf
int
dec
hlt
jns
add
adc
scas
fistps
dec
pop
inc
hlt
and
jle
push
mov
nop
sub
jno
outsl
loop
sarb
mov
and
dec
mov
xor
xchg
xor
xor
or
mov
push
lods
aad
dec
pop
mov
inc
out
inc
mov
ror
inc
fldl
ror
cli
jge
enter
jb
xchg
js
imul
cmp
decl
ficoml
add
shrb
xor
mov
stos
xchg
adc
cmpsb
pop
ds
xor
shll
pop
daa
jb
stos
xor
aaa
mov
repnz
push
rorl
cmpsb
out
xchg
adc
stos
sbb
push
jb
fidivl
orl
xchg
sub
push
jl
adcl
sub
dec
les
push
lds
fcomp
mov
cli
or
je
pop
bound
iret
lret
popf
es
inc
test
jb
inc
subb
push
dec
xlat
mov
jle
sti
mov
add
aad
leave
aam
push
insl
cmc
outsl
push
xor
jns
divb
stc
lret
cli
xor
push
dec
sbb
popa
pop
cmpsl
xchg
leave
jle
dec
cmp
cmc
pop
add
mov
dec
mov
or
dec
pop
inc
lods
mov
and
adc
inc
and
push
mov
pushl
ret
call
mov
push
mov
inc
fsts
repnz
xor
mov
insb
xchg
add
out
sbb
mov
cmc
push
scas
jecxz
mov
out
daa
or
pop
loopne
pop
dec
mov
pop
int3
jno
lret
push
xor
notrack
push
je
sbb
sub
in
lahf
jnp
jp
iret
nop
or
or
out
mov
test
fmul
dec
pop
inc
dec
xlat
loop
mov
xchg
loope
push
roll
add
adc
or
adc
inc
add
cmp
mov
add
subb
roll
mov
daa
aas
add
mov
sub
popa
movsl
add
testb
sub
pushf
push
xor
in
push
dec
in
cmp
lods
sar
dec
push
test
inc
xchg
jg
das
sbb
fidivrl
movsl
xor
jl
or
push
push
xchg
push
pop
pop
or
and
inc
ret
pop
cmpsl
adc
dec
push
insb
in
xchg
aam
and
sub
add
mov
and
ds
pop
and
imul
test
in
cli
lcall
lahf
cwtl
push
jb
mov
loop
insl
out
xorb
addr16
jns
mov
push
lahf
in
stos
mov
jg
ds
jbe
sar
xchg
scas
sub
icebp
adc
jbe
xor
xchg
repz
push
arpl
and
addr16
xor
out
push
sub
out
outsl
add
mov
jp
cs
sbb
xchg
insb
cli
cld
xchg
scas
loopne
jnp
adc
popf
movsbl
mov
jmp
inc
ss
fldln2
fs
andb
mov
addl
scas
ljmp
pop
inc
xchg
movsl
pop
jp
out
or
test
dec
ret
incl
int
mov
jns
mov
dec
test
ds
rolb
pop
jbe
pop
pop
es
out
je
pop
dec
test
das
scas
ja
pop
inc
movsb
scas
fwait
cmp
test
cmp
movb
jmp
movsbw
movb
push
mov
push
lea
pushf
call
movw
pusha
jmp
movl
pushf
lea
jmp
add
add
lret
dec
imul
sub
pop
mov
inc
push
pop
cmpsl
push
mov
in
sub
inc
and
daa
jb
add
dec
hlt
mov
push
mov
and
inc
push
test
jmp
mov
xor
les
pop
inc
dec
data16
push
add
add
leave
out
cmpsl
xchg
bound
or
xlat
repnz
ja
movsb
addr16
sub
lock
pop
dec
and
and
pop
inc
popf
mov
lcall
mov
push
mov
pusha
movsbw
pusha
bswap
mov
pushf
pushf
pushl
mov
pushl
ret
cli
xchg
mov
stos
push
jg
std
rolb
jns
xlat
jb
cmp
pop
jne
dec
cmp
cmp
inc
or
xchg
outsl
push
aam
cwtl
sbb
and
and
inc
rcll
xorl
in
xor
and
shrb
jp
mov
sahf
xchg
insb
xchg
rorb
inc
inc
pop
cmp
in
shld
mov
add
call
ror
movzbw
seta
sub
mov
bt
call
rcrl
and
movsb
adcl
in
sub
pop
push
and
stos
leave
adc
pushf
mov
sub
ret
out
int
or
xor
lods
xlat
and
dec
sbb
xorl
clc
sub
fcmovbe
push
xor
push
cltd
js
pop
lods
sub
movsl
and
inc
mov
pcmpgtb
lods
nop
push
sbb
popa
sbb
sbb
jae
dec
int3
lret
add
je
shrd
push
add
dec
cli
clc
cmp
icebp
popa
stos
mov
jmp
mov
adc
mov
add
jae
push
or
lods
iret
fistpll
pop
sbb
shrl
in
out
pushf
pop
cmp
pusha
andl
dec
fidivs
xchg
gs
dec
mov
adc
xchg
repz
cwtl
repnz
inc
arpl
or
xchg
addl
push
or
ret
aaa
lahf
dec
pop
inc
jl
popa
lea
jne
cwtl
pushf
jmp
pushf
movl
pushf
pushl
lea
jmp
and
adc
mov
call
or
call
or
shlb
addr16
jecxz
dec
in
lahf
mov
rorb
loop
fadd
mov
mov
fstpl
int
dec
mov
lds
orl
xchg
push
cmpsl
aas
clc
adc
lock
mov
scas
jbe
imul
xchg
test
repz
daa
or
xor
mov
cli
jno
fildll
adc
mov
daa
out
dec
pop
inc
cmp
shl
call
std
aad
pop
sub
push
adc
dec
lods
jb
mov
into
add
jne
dec
lahf
sbb
shrl
sub
mov
imul
out
sti
sbb
or
mov
std
aas
xor
and
rcll
js
inc
or
mov
test
clc
mov
int3
and
test
pop
or
lock
pop
lds
andb
pop
jns
mov
mov
push
jb
add
adc
xchg
out
jge
arpl
mov
mov
jnp
lock
pop
mov
mov
es
dec
bswap
inc
push
mov
cmp
daa
jmp
daa
sub
hlt
lea
dec
jo
repnz
in
int3
movsb
xchg
xchg
test
push
add
jp
out
fstpl
ljmp
dec
add
jo
es
hlt
jecxz
and
sbb
dec
pop
jns
inc
xchg
hlt
mov
mov
push
inc
dec
in
fwait
cmpsb
push
mov
bound
movsl
or
inc
shll
fildll
addr16
pop
cli
xchg
subl
mov
or
sbb
mov
dec
xchg
adc
rcl
mov
imul
daa
mov
popf
pop
mov
xchg
and
and
test
mov
je
jp
mov
dec
pop
js
xor
hlt
pusha
push
mov
lea
jmp
sub
pusha
rep
pusha
pushf
movzbw
mov
pushf
mov
movb
lea
jmp
xor
sub
push
test
or
pushf
aaa
lret
inc
add
pop
pop
popf
fmuls
pushf
sub
add
xor
ret
inc
cmpl
lods
out
jge
adc
or
das
shlb
inc
insl
and
imul
xchg
repnz
out
pop
mov
lcall
fcomp
das
xchg
roll
scas
lea
subb
pop
js
lds
jne
bswap
pushf
call
movl
pushf
pushf
push
movl
mov
push
push
lea
jmp
lea
je
je
clc
push
stc
stc
cmp
call
pushf
clc
mov
or
call
test
cmp
push
push
push
push
lcall
inc
pop
xor
sub
cmp
jl
fmull
orb
xor
inc
enter
cli
push
shlb
xor
scas
and
ds
mov
ss
sub
push
cmp
xchg
aam
into
push
push
cltd
in
cmp
push
cmpsl
sub
imul
sbb
in
lcall
mov
mov
mulb
cmp
jno
xchg
nop
sub
test
pop
cltd
mov
jle
dec
pop
jnp
sbb
xchg
sub
mov
pushf
pusha
push
pushl
ret
mov
cltd
outsl
arpl
mov
loope
lahf
subb
lea
cmp
loop
xchg
lahf
push
nop
mov
gs
cmp
lcall
adc
adc
mov
xchg
adc
insl
in
lahf
int3
mov
inc
outsl
pop
pop
mov
adc
adc
leave
out
adc
adc
pop
xchg
ret
incb
cld
mov
test
xchg
mov
pop
cmpsb
xor
lods
dec
pop
jp
arpl
mov
sbb
int3
lock
popa
hlt
pop
mov
mov
sub
stos
lds
cs
mov
cld
pop
inc
outsb
cltd
add
pop
xlat
and
push
pushf
lret
add
inc
and
inc
xor
pop
popa
rolb
lea
sbb
add
dec
pop
jp
or
push
out
push
cmc
mov
jne
faddp
push
loopne
popa
mov
and
fmuls
out
scas
in
adc
imul
ret
ds
adcl
adc
inc
pop
lea
scas
ds
daa
andl
popw
nop
loop
jl
and
pop
mov
jb
pop
jge
push
sub
sbb
scas
les
shll
mov
mov
pop
pop
mov
shll
xchg
xorl
push
imul
js
cmp
add
adc
push
lods
mov
cmp
jnp
mov
sub
rcrb
push
dec
sub
add
jge
inc
out
pusha
movl
lea
jge
push
pusha
movb
push
pushl
ret
fidivs
fldl
push
push
cli
popf
xor
fidivrs
lods
testl
or
leave
notb
fstpl
popa
outsb
stos
int
jge
pop
je
sbbb
and
adc
xchg
inc
popa
fmuls
cmp
jecxz
les
mov
jp
xor
popa
pop
lret
lods
adc
iret
or
sahf
iret
mov
pushf
sbb
loop
mov
mov
dec
cld
xchg
xor
dec
pop
jl
jmp
mov
cmpsb
mov
cmp
xor
xchg
inc
adc
lret
gs
mov
sub
push
sbb
shrb
test
dec
cltd
sbbl
ds
ds
mov
push
fwait
jge
xchg
mov
bound
xor
jbe
rcll
lods
test
pusha
jo
pop
test
lret
mov
dec
mov
dec
in
mov
mov
or
loope
mov
jg
cld
mov
loope
sbb
pop
sub
cmp
jo
dec
pop
jl
aam
push
pushl
popl
push
pushf
pushf
movb
pushl
ret
movl
pushf
movl
mov
movb
movw
lea
jmp
jmp
ss
or
lds
jge
addr16
and
sub
cwtl
fisubrs
inc
and
mov
or
test
jns
add
jle
mov
mov
mov
mov
enter
shrb
mov
sahf
bound
adc
mov
out
leave
xor
jl
lea
fstps
jp
mov
dec
jge
sti
push
and
dec
pop
jg
sbb
adc
test
mov
mov
icebp
hlt
mov
bt
shl
pushf
lea
sub
test
xor
btr
lea
stc
push
sub
pusha
pushl
popl
cmp
test
cmp
jmp
cmp
leave
ljmp
pop
icebp
int3
ja
inc
push
and
xor
popf
jns
in
loop
adc
shrl
mov
fldenv
xchg
ja
xor
mov
es
test
enter
push
scas
adc
jle
inc
in
xchg
leave
out
cli
subb
in
into
scas
xchg
sub
leave
mov
outsb
jge
adcl
out
fimull
jle
push
push
mov
lea
jne
jmp
testb
pop
lods
cmp
sti
push
loope
iret
mov
sbb
sbb
mov
iret
in
sbb
mov
lcall
clc
movsb
sbb
push
dec
pop
mov
push
pop
mov
jle
fucomip
mov
cmp
repnz
call
pusha
jmp
jl
and
fistpll
mov
jecxz
adc
leave
cmp
pusha
and
addr16
int3
adc
xor
out
fcmove
cmc
popf
pusha
adc
sbb
mov
add
scas
inc
int
sbb
pop
ror
xchg
lea
inc
je
inc
push
jg
scas
cltd
and
xchg
pop
sbb
mov
xchg
fs
rcr
imul
mov
fdivrp
lahf
mov
and
mov
imul
sti
push
sahf
and
ljmp
out
and
out
add
fwait
sbbl
movb
cmp
mov
add
and
and
fwait
leave
bound
jmp
add
aad
pop
cmp
push
pop
push
xor
mov
jecxz
sub
loopew
jae
pop
pop
or
icebp
dec
inc
daa
fcmovnu
jnp
out
roll
sar
stos
mov
pop
sbb
adc
jo
fstpl
adc
fwait
cltd
mov
pop
fs
lahf
cmp
call
jl
xor
sub
and
xchg
icebp
xchg
dec
outsb
in
cli
mov
mov
pusha
ret
int3
xchg
push
cmp
xabort
inc
in
vmovntps
dec
sahf
cmc
mov
pop
mov
std
ret
dec
pusha
stos
fdiv
xchg
fucomp
cmp
fistpl
xchg
mov
imul
shr
ds
lods
jne
arpl
adc
nop
cmc
fwait
insl
in
jecxz
sti
or
sub
cmp
jle
mov
cwtl
fwait
loope
mov
add
test
dec
inc
in
out
add
or
icebp
jl
stos
ljmp
jmp
mov
cwtl
int
shll
push
rolb
or
jmp
lret
xchg
lds
add
mov
mov
mov
in
sti
xor
scas
cmp
movsb
out
push
pusha
aam
mov
inc
aad
jne
std
pop
push
fistl
outsb
in
fwait
mov
int
mov
jmp
sub
jo
xchg
push
dec
add
or
in
xor
inc
jg
inc
insl
and
xor
mov
sti
cmp
insb
mov
in
jbe
idivb
shr
pop
push
adc
push
mov
push
sbb
fldt
sub
adc
mov
in
dec
xchg
imul
and
xor
out
insb
inc
je
cmp
pop
mov
and
fistps
lock
aam
mov
imul
in
adc
inc
dec
adc
pop
imul
add
mov
pusha
addb
or
push
fwait
mov
insb
out
fcomi
stos
inc
or
mov
mov
pop
cmp
push
and
mov
push
cmpsb
sbb
push
and
fiaddl
pop
or
add
in
loop
and
dec
jne
lret
and
ret
fidivrs
mov
loopne
xor
out
leave
dec
adc
ret
out
xchg
pushf
cmp
mov
mov
out
xchg
call
icebp
loop
mov
mov
loop
loop
adc
loop
mov
sahf
inc
adc
jl
dec
cmp
mov
add
movsb
fldt
arpl
mov
rep
enter
jge
imul
loope
xchg
mov
jg
cmp
jo
mov
mov
in
js
movb
shrl
xor
sub
and
adc
lahf
dec
into
int
push
mov
test
cwtl
fwait
imul
and
repz
cmp
sar
stc
test
in
inc
cmp
add
roll
popa
push
fistps
pop
popa
leave
push
shrl
pop
hlt
jl
addr16
cmp
mov
pop
and
fsubrp
call
pop
fldcw
dec
push
mov
dec
mov
push
pop
cmc
jmp
aad
cld
mov
xchg
pop
and
jne
mov
mov
idiv
in
loopne
out
jbe
lods
pop
faddl
add
ss
xchg
jl
out
loop
js
addb
pop
xchg
mov
stos
mov
gs
clc
roll
adc
mov
push
jp
jbe
push
arpl
icebp
clc
push
fwait
std
mov
insb
jmp
rcrl
movsb
dec
cld
cmc
out
shl
pop
adc
pop
int
and
mov
xchg
pop
and
dec
xchg
add
in
ljmp
std
push
pusha
iret
adc
cmovno
out
movsb
xchg
loope
popa
cwtl
mov
sbb
data16
add
loope
and
xchg
cmp
and
and
inc
int3
fs
in
push
add
into
pop
outsb
inc
push
out
cltd
lods
lock
xor
xor
sahf
pushf
mov
call
in
pop
push
shll
jmp
or
jl
icebp
jb
imul
shl
dec
sub
dec
repz
inc
fucom
lds
pusha
icebp
in
xchg
xchg
xor
movb
xlat
pop
mov
mov
inc
rolb
mov
jecxz
adc
push
enter
inc
sbb
mov
push
ret
test
dec
in
jecxz
mov
inc
mov
arpl
mov
test
test
dec
mov
xchg
inc
cmpsb
push
dec
repnz
sbb
lds
sbb
dec
jne
loope
ljmp
and
mov
shlb
movsb
out
xor
mov
inc
cwtl
dec
in
mov
and
and
push
jge
fidivrs
xrelease
mov
loop
lds
les
cmpb
out
cld
mov
popf
jne
push
dec
inc
cmpsl
out
aam
pxor
mov
fs
loop
test
dec
mov
loope
jl
xor
mov
jno
in
cmp
xor
xchg
test
stos
iret
in
jecxz
xchg
or
outsl
in
leave
mul
inc
push
lods
loop
lds
int3
in
std
idiv
lret
test
in
cmc
loop
cmc
bound
lock
ss
in
into
call
in
fucom
cmp
xchg
ret
pushf
mov
mov
repz
jno
in
in
ret
loope
sub
shl
dec
frndint
in
mov
xchg
js
movsl
cmc
mov
xor
sub
ja
fidivl
lods
iret
div
cmp
in
cli
and
in
out
mov
sbb
jmp
jl
sti
dec
cmc
cltd
mov
cmpsl
int
ljmp
adc
xchg
jmp
in
fmull
in
inc
sarb
ret
loop
rcl
and
rcl
in
sti
rol
sar
in
ret
jmp
lret
movl
in
jge
pushf
call
jecxz
fisubrs
and
mov
ret
stc
enter
cwtl
ljmp
jnp
shll
test
std
jbe
pop
stc
jmp
inc
out
js
xlat
jnp
add
in
mov
shl
sti
jmp
mov
shl
rcr
mov
in
inc
stc
and
mov
in
fnstcw
insl
iret
out
cmp
ror
repnz
mov
insl
imull
popa
js
scas
fisubs
leave
or
lock
in
hlt
sbbl
les
push
jmp
ret
shll
stos
rorl
or
add
in
fcmovnu
std
pop
pop
fwait
push
jbe
in
inc
int
sarl
pop
xor
mov
sbbb
and
xchg
ljmp
lahf
adc
add
dec
mov
out
aaa
std
mov
adc
jns
push
ljmp
cs
push
mov
loope
inc
add
pop
lock
mov
jb
pop
or
fwait
sub
and
pushf
jmp
leavew
xchg
fldt
shlb
xchg
sarl
das
jecxz
inc
cmpsb
loop
push
lods
adc
mov
filds
fcmovne
adc
stc
push
jb
movsl
popl
cmc
movsb
leave
imul
lods
rcrb
std
mov
in
movsb
nop
xchg
bound
push
fs
loopne
insl
je
inc
test
jo
loope
scas
lods
pop
mov
mov
fwait
in
push
sbb
push
jmp
cmp
dec
cmp
inc
fldt
aaa
out
cmp
mov
in
mov
les
in
cmc
ret
loop
aam
in
test
cmp
stos
sbb
repz
in
mov
lods
mov
jmp
xlat
out
cli
fwait
or
dec
pop
lock
in
add
ss
xor
mov
mov
mov
and
pop
push
jnp
lahf
jmp
and
call
jae
or
iret
hlt
out
fwait
mov
cmp
ja
jmp
cmpsb
xlat
clc
xchg
and
int
fcomip
stos
das
jmp
pop
aam
and
xchg
and
stos
or
leave
aam
in
mul
push
xor
inc
lea
ret
out
jle
loope
insw
pop
int
jg
and
jmp
std
fisubrs
idivl
lahf
cmpsb
les
pop
popa
jecxz
adc
mov
lock
lcall
test
in
fistl
cmc
add
jl
adc
icebp
xchg
xchg
pop
dec
test
adc
xchg
roll
sbb
jb
cmpsl
sbb
xchg
jo
sbb
pop
jg
and
lods
fbld
cmp
in
and
movsb
test
int3
sti
clc
into
dec
mov
push
std
out
pop
sub
fsts
cld
xchg
lret
xchg
popf
in
fwait
adc
ljmp
std
jmp
loop
test
push
cmp
fwait
sub
jbe
xchg
repz
xchg
stos
or
shr
cltd
rcl
outsb
addr16
pop
hlt
xchg
cmpsb
in
push
movsl
mov
popf
jecxz
add
and
inc
test
or
lcall
sub
cmp
adc
insb
jge
sub
loope
aam
mov
fistl
ljmp
shld
xchg
pusha
imul
ret
cmp
out
mov
shl
stos
mov
mov
int
mov
div
test
fbld
mov
movd
fs
orl
adc
sahf
cmp
shr
mov
xchg
jl
fwait
lret
mov
mov
jg
into
or
roll
test
and
inc
call
mov
dec
jae
xchg
inc
sahf
mov
and
stc
arpl
fistl
inc
inc
push
insl
cld
loop
js
int
popf
ret
lahf
inc
scas
fucom
xchg
jmp
sti
cltd
or
mov
pop
loop
xor
fs
cmc
out
bound
popa
fwait
aam
imul
in
and
adc
fistpl
aam
fiadds
add
jge
rcll
push
jmp
ljmp
xchg
repnz
lods
sbb
mov
test
push
jne
sub
inc
pop
mov
sbb
jmp
xlat
sti
jno
adc
bound
clc
inc
in
push
cwtl
xorl
scas
push
mov
pushf
fs
inc
sbb
mov
cltd
mov
mov
jns
xor
imulb
mov
repnz
ljmp
js
stos
ja
shrl
aad
js
mov
mov
in
fwait
mov
lret
and
into
lahf
and
ficoms
sub
cmp
xor
iret
ret
lds
sbb
sbb
mov
push
scas
ss
push
pusha
leave
cld
dec
mov
mov
lahf
sub
icebp
xchg
out
xchg
mov
mov
xchg
outsl
lods
mov
frstor
sti
push
sbb
adc
jge
mov
sahf
push
xchg
sbb
push
xor
jnp
loopne
mov
add
fadds
fdivs
aad
fwait
cmc
pop
mov
push
cmp
in
jnp
repz
outsb
pop
sbb
std
pop
adc
mov
xchg
push
ret
push
jmp
lea
xchg
loopne
fldt
inc
or
pop
in
fwait
cmp
ss
outsl
test
or
insl
dec
lahf
movsl
roll
mov
push
out
rorl
popf
mov
xor
ror
in
rorl
pusha
dec
jo
roll
movl
inc
and
push
cmpsb
out
out
inc
stc
pop
dec
fldcw
jge
js,pn
dec
dec
pop
ret
in
ja
cmc
sbb
ja
sti
jle
sbb
popa
aad
insb
cwtl
gs
dec
mov
push
imul
sub
inc
inc
xor
cltd
xchg
inc
in
fistps
inc
jo
ret
push
rorb
test
sti
nop
mov
lods
pop
stos
into
push
sti
cmc
std
mov
aaa
imul
in
pusha
shll
cwtl
mov
loopne
scas
push
push
addl
fwait
dec
pop
insl
push
insl
jge
jle
or
rclb
out
shlb
lahf
mov
jecxz
adc
repnz
enter
mov
lcall
pushf
insl
xchg
inc
repnz
add
nop
imul
imul
std
and
scas
mov
jo
pop
and
popf
sbb
mov
enter
pop
int
lea
aas
jg
je
fidivl
mov
adc
leave
xor
adc
cltd
pop
or
add
dec
push
jns,pt
shl
test
fcmovne
dec
popl
mov
into
loope
sbb
push
testl
sbb
and
hlt
andb
aaa
aas
cmc
mov
insb
push
jle
cmpsb
sbb
and
cmc
sti
ret
cmpl
js
pop
push
mov
cmp
lock
fcmovnb
inc
adc
cli
and
in
and
pop
jge
pusha
mov
pop
jns
call
out
push
pop
and
jecxz
aam
js
adc
in
pusha
pop
cltd
mov
or
out
icebp
and
jecxz
add
sbb
cmc
mov
cmpsb
les
pop
test
sbb
ss
mov
imul
test
into
adcb
jg
inc
jecxz
cmp
cmc
lea
in
rcrb
or
add
pop
and
in
popf
add
mul
sub
ss
out
push
std
push
push
and
test
and
imul
add
add
dec
xchg
shlb
fucom
jne
or
aaa
or
out
xlat
xor
sbb
jmp
push
push
pop
xor
lea
jmp
pop
out
das
xor
pmaxub
ret
dec
rolb
data16
cmpsl
cmp
ret
push
cli
xor
adc
jne
leave
out
dec
popa
in
fcmovne
mov
mov
lahf
xchg
std
fs
mov
insl
xor
and
jnp
jnp
rcr
push
mov
mov
and
push
xor
aam
xchg
iret
jno
sbbb
int
div
loope
mov
ret
mov
sti
popf
sbb
lds
pushf
aad
movsb
push
dec
add
lods
cmp
xor
loope
fwait
sahf
xor
sub
pushf
add
outsl
in
stos
mov
mov
dec
int3
imul
adc
call
arpl
mov
loopne
in
ss
movsb
cli
loopne
or
cmp
inc
divb
ret
adc
xchg
or
mov
fistpll
movsl
in
orl
jbe
test
movsb
cmp
sub
and
cmp
aaa
dec
adc
les
fnstenv
mov
dec
inc
inc
faddp
mov
enter
jnp
push
dec
sub
mov
inc
mov
sbb
fisubs
lods
hlt
ljmp
inc
push
mov
std
pop
xlat
or
pop
in
jne
out
js
mov
fnstsw
hlt
icebp
and
and
ret
loopne
jne
and
popf
inc
fwait
or
addl
xchg
sbb
rcr
and
mov
cwtl
rcl
mov
ret
and
add
xor
pusha
ret
mov
sub
movb
cmpl
and
push
mov
push
cmp
xchg
xchg
mov
fidivs
pop
scas
jle
push
pop
pop
mov
pop
mov
in
lahf
jno
xchg
shll
mov
mov
mov
test
and
push
mov
jmp
mov
ror
pop
imul
or
jne
jge
and
dec
test
dec
inc
andb
sub
sub
fadds
jmp
push
sbb
loopne
inc
fucomi
cmp
dec
xor
adc
xlat
insl
fwait
pop
push
xor
or
scas
add
pop
in
addb
or
sub
mov
inc
pusha
aam
leave
jecxz
add
cmp
cmp
adc
test
icebp
xchg
sbb
movsb
lods
fwait
cmp
rorl
mov
dec
jnp
and
aad
stos
add
mov
test
jno
sub
ljmp
xchg
lock
sbb
xor
fsts
out
xor
fldl
jns
hlt
mov
mov
sbb
popf
mov
das
pand
or
subl
jmp
in
mov
jb
scas
orl
add
sti
popf
ja
sarl
rdtsc
movsl
inc
imul
sub
jp
sub
jbe
cli
test
loope
pop
out
jecxz
clc
cltd
lret
hlt
enter
repnz
mov
pop
mov
and
inc
loop
fwait
outsb
sub
mov
fbld
sub
fistl
xchg
mov
mov
mov
lea
jmp
enter
xor
sbb
cmc
in
mov
cmc
pushw
xlat
inc
leave
adc
jb
adc
mov
mov
sahf
out
loop
jg
sub
jno
sbb
and
mov
in
in
mov
repnz
dec
icebp
jns
or
in
lahf
xchg
fdivr
repnz
andb
ret
inc
adc
in
add
mov
jne
ret
lock
cmp
fcmovnu
mov
push
rcll
sbb
lahf
adc
inc
mov
fwait
push
hlt
insl
mov
insl
push
pop
push
pop
loop
shl
fdiv
adc
je
lahf
inc
aad
lret
aas
mov
jo
fwait
jb
mov
daa
inc
in
and
sti
cmp
int3
je
mov
sbb
jmp
mov
iret
addr16
xor
mov
cmpsl
out
fcom
xlat
pushf
xchg
fbld
mov
into
push
inc
or
cmp
add
fisttpl
enter
jns
pop
je
and
cmp
sahf
imul
jae
xor
jno
add
pavgw
fidivs
adc
ret
mov
mov
jns
inc
aad
stos
xor
fcomps
shl
or
cmc
inc
lds
adc
int
addb
aas
notb
mov
pushf
push
add
dec
fwait
mov
push
int3
mov
out
sti
hlt
mov
mov
and
jge
jg
lods
sbb
mov
push
xchg
fcomi
aam
jo
fnstenv
out
js
repnz
fstpt
pop
sub
xchg
repz
test
push
jo
push
sti
fs
stos
loope
fwait
lret
aam
mov
or
sarl
and
add
xlat
aaa
or
add
push
std
sti
stc
shl
sub
lret
hlt
sub
loope
int3
dec
icebp
or
ror
cmp
jb
pop
jmp
or
mov
in
sub
clc
cmpsl
fwait
sbb
aad
call
and
subl
repnz
shl
mov
mov
aad
cmp
mov
cmpsb
std
sbb
add
push
fcmovne
mov
les
out
mov
pop
pop
mov
push
and
and
mov
add
mov
imul
pop
add
mov
mov
add
fcmovnbe
add
outsl
jp
in
into
cmpsb
jecxz
mov
outsb
popf
cmp
add
fmul
in
xchg
mov
and
loope
fildll
clc
aam
bnd
push
add
pop
in
adc
rcr
jg
loop
lahf
xchg
je
add
xchg
add
pop
push
inc
stos
lods
out
adc
test
mov
fstps
push
dec
scas
xchg
test
add
fistpl
push
cmp
sbb
stos
cmp
and
enter
inc
push
xor
dec
cmp
and
cmc
dec
rcr
sbb
mov
pop
cmp
int
pop
dec
call
pop
mulb
outsb
mov
jecxz
and
xchg
fldt
mov
sbbb
and
out
lds
call
mov
dec
mov
jns
jg
daa
in
cmp
pop
sbb
dec
jl
push
loope
ret
inc
cltd
sbb
cmp
movsl
jecxz
outsl
xchg
or
mov
idiv
aam
insl
mov
jne
sarl
fwait
test
add
andl
mov
add
arpl
test
mov
bound
cmpsl
pushf
mov
loopne
mov
leave
push
mov
aas
into
iret
jae
xor
mov
mov
lret
dec
ret
pushf
repnz
test
jmp
out
pop
fs
add
testb
mov
fldt
icebp
push
addr16
mov
mov
loope
sbb
push
mov
leave
adc
lods
stc
cltd
and
mov
popa
int3
dec
sub
andb
pushf
xor
jae
arpl
in
sbb
and
lcall
push
ret
lea
fwait
fs
imul
xchg
in
xor
cli
shl
cwtl
hlt
dec
stc
repz
shrl
and
hlt
pop
pop
adc
lds
mov
scas
idivl
bound
fnsave
sbb
sahf
les
dec
jmp
mov
les
jecxz
jge
inc
insb
sbb
mov
jmp
popa
push
pop
popf
cmp
sbb
push
inc
lods
fwait
test
push
and
add
mov
xor
push
xchg
or
in
mov
and
cmp
jg
mov
inc
pop
mov
stos
shr
xchg
cltd
call
repnz
mov
sti
pop
jmp
rol
leave
stos
lods
adc
pushl
call
jae
pop
mov
sar
mov
jae
int
loop
std
push
sbb
mov
daa
daa
push
loope
or
inc
push
jae
mov
pushf
in
xor
cmpsb
jb
js
loop
add
and
cmpb
in
or
lahf
push
mov
cmc
mov
fwait
add
push
mov
mov
inc
movsb
dec
jg
ret
lock
mov
cmp
inc
je
repz
std
imul
sub
fistpl
push
fdivrs
pop
jmp
imul
dec
ds
inc
rcl
and
and
cmc
dec
cmc
mov
scas
lods
pop
test
mov
dec
repz
repnz
stos
jnp
xchg
int3
sub
mov
leave
jae
mov
dec
jmp
sahf
and
fwait
in
loop
xchg
mov
pop
mov
and
ret
icebp
mov
inc
fcmovnbe
loope
sbb
jmp
movsb
in
adc
ss
pminsw
sub
in
inc
cmp
cmpsl
int
add
lcall
push
fwait
adc
xchg
ljmp
cwtl
mov
mov
cmp
sbb
mov
sti
lods
cld
scas
fucomp
mov
add
js
pop
mov
cmpsl
mov
add
jge
fcoms
cli
mov
sahf
out
repnz
jmp
dec
push
dec
pop
mov
mov
stc
mov
ss
lahf
movsb
push
fidivl
in
rcll
popa
fwait
sarl
xchg
ja
in
and
gs
pop
jecxz
xchg
test
mov
loope
call
loope
in
xchg
xchg
inc
xchg
dec
mov
jne
subl
pop
ja
jmp
push
cmpsl
or
jbe
scas
roll
cmp
dec
or
popl
shll
mov
int
xchg
xchg
xchg
fldl2e
in
adc
adc
xchg
and
sbb
sti
mov
clc
iret
push
mov
stc
leave
ss
lods
xor
arpl
xor
sub
xchg
leave
movsl
add
cmp
hlt
or
rcl
mov
in
adc
mov
mov
aas
mov
mov
push
mov
gs
imul
xchg
in
popa
pushf
dec
or
out
mov
lods
pop
popa
add
mov
xor
sub
fidivrl
loop
xchg
pop
lods
jae
in
sbb
out
outsb
adc
cmp
adc
scas
sbb
add
mov
mov
out
in
js
notb
adc
inc
shl
and
loope
and
mov
lods
fst
test
jns
in
int3
fldt
gs
sub
sbb
in
and
push
mov
and
jecxz
xor
and
lcall
push
lret
mov
mov
repnz
movsb
std
or
rcrb
pop
mov
aaa
ret
rcll
adc
dec
xor
adc
popf
iret
scas
std
repz
push
aam
dec
jns
and
cmp
stc
adc
enter
subb
dec
cmc
repz
es
fcompl
in
jecxz
pop
out
aam
in
insl
insl
cmp
fs
rcr
jnp
gs
gs
xor
sahf
outsl
pusha
je
push
add
mov
push
xor
sti
int3
popa
gs
nop
fucom
fdivrs
mov
push
and
movsb
iret
jp
popa
cmpsl
add
movsb
mov
std
hlt
pop
sahf
into
insb
dec
cmp
dec
ss
xchg
sti
clc
adc
paddsw
stc
cmc
dec
rol
in
jnp
cld
xchg
divl
ja
lock
out
jge
loope
add
sti
xor
popf
scas
xlat
fbld
adcl
lods
inc
int3
fucomp
movsb
sti
lcall
mov
pop
add
cmc
js
mov
shr
mov
test
insb
imul
adc
fxam
int3
dec
ljmp
lret
sti
xor
iret
inc
jg
and
adc
subl
jl
and
out
push
adc
and
cmp
push
mov
ss
cltd
shll
test
jbe
sti
inc
add
mov
mov
sub
push
loope
cmp
jge
lock
mov
nop
in
pop
mov
sbb
pop
xor
movsb
add
pop
outsb
in
sahf
add
push
in
mov
add
pop
add
mov
pusha
fdivrs
xor
insl
inc
int
dec
andb
pop
lret
adc
sub
fsub
fisttpl
shlb
fimull
rol
fadds
dec
divl
jne
lods
div
add
push
mov
loopne
fcomps
mov
ja
out
je
int
addl
ds
or
dec
iret
in
adc
dec
xchg
jl
sbb
and
mov
les
test
xor
sub
mov
out
fidivs
push
jmp
cmpsb
xor
out
sti
scas
popa
and
xchg
inc
add
xchg
pop
adc
mov
add
leave
mov
and
std
push
mov
fninit
test
addr16
test
movsb
xor
jbe
mov
fwait
jns
dec
lret
in
push
ret
imul
es
daa
jecxz
shrl
vpmaddwd
lea
dec
xor
sub
fidivl
out
cmp
sub
sti
mov
mov
mov
notb
mov
adc
cvttps2pi
movsl
fwait
cld
push
and
ret
flds
movsb
sti
gs
int3
or
xor
jno
int
dec
mov
add
in
stos
clc
loop
jae
mov
inc
call
in
repz
arpl
inc
inc
sbb
xor
mov
push
xorl
fsubrs
out
data16
inc
popf
push
sbb
repz
loope
push
call
shll
sbb
mov
lock
movsb
test
cld
pop
pop
repnz
mov
mov
jno
jmp
std
and
lret
iret
in
mov
lea
cmpsl
stos
mov
in
adc
arpl
pusha
xchg
popf
dec
ret
fcmovb
cmc
insb
fwait
lods
and
jo
scas
std
pop
cmp
imul
in
ljmp
gs
lahf
push
movsb
or
icebp
cwtl
xorb
fldt
inc
clc
or
add
pop
outsb
and
fcmovne
cmp
jno
mov
cmp
repz
mov
in
rorl
scas
xchg
and
mov
call
mov
inc
dec
sub
insb
cmpsl
inc
in
pop
cmpl
into
jl
xor
in
out
cld
loope
pop
sti
leave
push
fildl
fnstsw
xchg
sbb
stos
dec
add
cmc
movsb
popl
jge
and
add
pop
xchg
push
sbb
and
sub
push
mov
lret
imulb
adc
mov
pop
outsb
mov
lods
jmp
mov
sub
popf
xorl
lods
xchg
lcall
adc
dec
cmc
pop
pop
mov
daa
dec
icebp
gs
or
adc
jae
sbb
inc
insl
sub
sub
in
shlb
andl
mov
cmp
jg
push
aaa
cli
clc
int3
shl
sub
ret
incb
and
neg
mov
add
xor
test
insb
fwait
mov
popf
orb
les
ret
xchg
loop
pop
popf
shlb
shl
mov
cmpsl
js
stos
loope
in
mov
cwtl
fwait
pop
xor
call
int
cmpb
frstor
lret
add
out
sbb
push
push
sbb
sub
ljmp
bnd
in
pop
mov
fwait
test
jb
push
ror
push
idiv
dec
fnstcw
pop
cmp
in
imul
mov
loop
popf
xorl
sub
push
sub
popa
imul
or
sti
ret
sub
in
mov
out
dec
inc
cs
aas
in
shlb
push
lods
inc
sarb
push
bnd
leave
mov
dec
std
cmpsb
cmp
leave
std
sti
repnz
mov
sbb
sbb
inc
lcall
shll
int
xlat
stos
jno
clc
jb
imul
in
imul
lods
add
xor
decb
xchg
popa
popf
or
addr16
pop
popa
fwait
test
mov
mov
and
cmp
test
rol
fwait
mov
gs
mov
cmp
andb
mov
nop
sbb
push
rolb
addl
jae
repnz
and
out
mov
loop
test
js
aam
mov
jg
aaa
add
push
shufps
xlat
mov
lea
aas
jb
pushf
scas
mov
out
push
loop
xchg
add
jmp
and
or
enter
and
mov
sti
jbe
sub
outsl
mov
mov
lock
outsl
int
push
cs
cmc
jecxz
insl
sarl
inc
gs
cwtl
stos
xor
loopne
testb
movsb
or
jno
xor
mov
mov
jo
shrb
aam
pop
insb
xchg
mov
out
or
out
or
sti
aas
cmpsl
lret
add
mov
das
lods
in
or
jno
push
popa
shl
hlt
inc
fwait
into
sbb
arpl
shll
jecxz
aas
in
lock
inc
ljmp
mov
imul
add
sti
fcmovu
and
gs
pop
stos
xor
jp
ja
and
or
mov
loope
sub
stos
sbb
scas
out
jns
popa
iret
sbb
lea
xchg
das
les
cltd
cmp
mov
outsl
in
loop
dec
sbb
shll
rol
mov
mov
fwait
rcll
adc
inc
lock
fsubrl
repz
inc
mov
lods
xchg
mov
out
mov
or
fs
mov
mov
cmpsl
int3
sub
aad
addb
cmpsb
fcmovnb
sub
push
cmp
movsl
mov
out
lods
push
imulb
call
ljmp
xchg
mov
cld
loop
call
inc
lds
xor
rcrl
cwtl
add
and
fwait
pop
dec
stos
sbb
lods
cmp
add
wbinvd
aas
repnz
xor
lods
in
popa
mov
cmp
or
ljmp
dec
cmp
iret
rorb
sub
dec
mov
movsl
into
in
xor
in
sti
sbb
lret
outsl
testb
into
cli
or
dec
pop
push
mov
test
mov
mov
push
mov
test
add
imul
add
push
add
or
dec
pop
js
xchg
mov
ljmp
jecxz
inc
in
sarb
jno
loopne
mov
lods
sbb
mov
inc
dec
lods
sbb
shlb
out
fwait
push
xor
sbb
cmp
jns
pop
xlat
dec
test
add
inc
gs
imull
mov
mov
fcmovnbe
fsubrs
inc
imul
dec
pop
fstpt
test
test
fistpl
cmp
in
aam
fwait
inc
mov
loope
in
cmpsl
add
xchg
call
fadds
aam
jge
std
in
add
gs
in
pop
mov
xor
dec
cmp
sti
mov
pop
mov
aas
or
out
cltd
in
sti
or
pop
out
lret
shlb
repnz
fidivrl
dec
adcl
fmuls
add
fildll
push
sbb
jno
cmc
xchg
jle
or
lret
out
lea
cmp
jae
jae
adc
sti
mov
and
aad
cmp
jmp
dec
cmc
dec
sti
mov
xchg
repz
out
sbb
bswap
pop
je
xchg
jbe
popf
iret
imul
xchg
loop
ljmp
xor
jle
test
pop
mov
fsubs
jne
mov
test
icebp
fwait
stos
xchg
mov
les
loop
jne
orb
loope
jno
aas
lods
xchg
imul
in
sbbb
popf
push
adc
add
popa
inc
test
mov
in
arpl
std
addl
loope
ret
cwtl
in
mov
jne
mov
sbb
sbb
in
and
popf
lcall
mov
or
rcrl
stos
sahf
out
xchg
sub
pop
aam
ficompl
dec
fstpt
xchg
mov
orl
sub
pop
jns
stc
fs
loop
imul
pop
inc
cmp
enter
fisttpll
into
shrl
mov
push
fs
pop
into
fisttpll
or
movsl
aam
int3
jae
call
xchg
add
popa
adc
popf
mov
mov
lds
or
in
imull
sbb
ret
div
mov
push
mov
pushf
cmc
pushf
cmp
sarl
xor
mov
orl
loopne
jbe
and
enter
xchg
mov
xchg
dec
inc
xor
pusha
test
loop
fstl
mov
icebp
loope
fimuls
xor
xchg
mov
hlt
mov
lds
fwait
cmp
add
dec
or
xor
mov
mov
mov
notb
cmp
and
xchg
fwait
flds
bound
sub
test
enter
cmp
in
test
add
cmpl
iret
out
push
dec
push
pop
clc
test
ret
xorl
repz
jle
mov
inc
jnp
test
xchg
shll
mov
sbb
out
xchg
pop
lahf
outsb
lods
cmp
lock
sub
xorl
push
push
mov
inc
mov
push
cmp
sti
cmp
std
ds
cmp
jmp
fistpl
sbb
mov
xor
sbb
jno
pusha
adc
sub
and
lods
jbe
cmp
aaa
pop
jl
mul
pusha
inc
xchg
loop
cli
adc
mov
in
out
fcomip
push
bound
xor
insb
repz
xchg
icebp
xor
and
jne
sub
jmp
es
hlt
fwait
mov
int
adc
rcll
repz
fsts
out
int3
xchg
sti
xor
push
pop
in
fwait
cwtl
lahf
aam
inc
bound
adc
fiadds
sub
shl
adc
lods
xor
out
ljmp
and
or
xchg
test
push
pop
sbb
and
fldt
gs
xchg
xchg
into
mov
push
adc
inc
xchg
bound
out
xor
popa
mov
inc
mov
sbb
cmp
popa
in
or
dec
ljmp
test
fistpll
jbe
mov
dec
shl
in
rolb
sub
cltd
adc
rcll
test
repz
fstpl
iret
add
mov
add
mov
jnp
in
pop
shll
inc
sub
cmc
insl
cmc
sti
iret
and
mov
std
sub
xchg
cld
jns
push
adc
cwtl
mov
pushf
and
xchg
sbbb
fs
icebp
push
test
sub
inc
dec
movsb
jno
push
sti
out
sbb
pop
aad
gs
cmc
rcll
ds
sub
and
test
insb
lcall
jge
dec
fldcw
loopne
inc
out
fwait
subl
pavgw
mov
or
mov
jae
gs
push
mov
and
sbb
mov
out
icebp
inc
sbb
test
xchg
mov
sub
ret
repz
lea
cmpsb
je
aas
add
or
xchg
insb
cmc
and
xchg
cmpsb
mov
stc
pop
std
push
sahf
in
test
adc
arpl
sub
dec
sub
fldt
sbb
pop
enter
mov
and
enter
aam
sbbb
push
popa
in
cmpsl
call
into
mov
aad
ret
inc
fidivs
xor
sbb
adc
lods
hlt
inc
aaa
in
mov
push
pop
adc
adc
fwait
rclb
pusha
push
cmp
sti
and
int3
or
lahf
adc
dec
push
sub
shlb
pop
cld
popf
lahf
sbb
les
inc
jmp
sbb
sti
lret
mov
stos
std
mov
dec
cmp
popf
rcrl
dec
xchg
sbb
xchg
dec
out
pop
je
test
fcmove
mov
add
dec
push
push
add
sub
insl
xor
cmpsl
jb
dec
dec
repz
ret
lahf
sahf
xchg
sub
repnz
imull
xor
ret
and
loop
xchg
xor
mov
lret
out
aad
pusha
push
dec
insb
inc
sti
add
mov
std
orb
outsl
xchg
into
cmc
popl
jge
push
hlt
pop
add
push
jno
imul
cmpsl
ja
and
xchg
jecxz
dec
std
cwtl
scas
and
in
pop
jb
dec
push
mov
ret
mov
cld
xchg
mov
xorl
aaa
sti
mov
dec
into
test
lds
push
or
iret
inc
fsts
nop
xor
add
jmp
int3
dec
and
cmp
mov
pop
nop
test
aam
adc
sbb
repz
fmul
sub
lods
inc
jmp
xchg
lret
xchg
xchg
sbb
inc
sarl
cmpsl
pop
pop
jae
fnstenv
sub
jecxz
imul
adc
cltd
jge
iret
fisttpl
dec
push
sub
pop
jae
jb
aad
rcr
push
sti
mov
pop
es
add
add
sbb
fistl
sub
or
xchg
xchg
push
ret
leave
mov
bound
push
and
xor
xchg
stos
cmp
iret
and
jb
inc
fwait
sub
mov
add
cmpsl
shr
cmp
ljmp
scas
jbe
cli
sbbb
xor
mov
push
lods
xchg
repnz
fs
sbb
clc
out
push
ds
xchg
fisubrs
les
add
pop
xchg
xchg
lahf
outsb
lods
jmp
xchg
scas
movsb
iret
mov
movsb
dec
mov
dec
fisttpl
xchg
andb
fisttpl
f2xm1
sub
xor
inc
inc
add
test
outsb
out
in
roll
jge,pn
push
stos
ror
inc
sti
push
in
imul
shll
hlt
rcll
loop
pop
push
stos
adc
cmc
push
sti
int3
adc
rcrb
popa
lcall
aas
aad
mov
mov
iret
outsl
jns
fsubs
imul
inc
pop
xor
xlat
and
aad
rcrl
mov
test
jo
ret
mov
mov
pop
in
and
mov
adc
rcrl
or
gs
push
fwait
cmpb
leave
dec
mov
shll
imul
in
mov
inc
and
inc
cmp
or
sub
popf
int
fstl
sub
sbb
cmp
loop
push
cs
vaddpd
sbb
rolb
shll
xchg
inc
scas
jne
subl
in
pop
pusha
out
in
ja
ret
pusha
dec
jge
hlt
inc
sub
cmpsb
mov
lods
call
subl
ror
and
xchg
dec
jge
loop
cmpsl
popa
mov
rcrl
ret
push
push
pop
and
jb
jno
or
jecxz
or
sbb
cmp
outsl
or
fldt
mov
popa
rorl
in
fildl
jmp
sub
daa
das
inc
dec
jae
pop
jmp
daa
pushf
ret
std
and
jae
loopne
popa
jle
jge
push
js
dec
mov
xlat
dec
adc
fwait
fldt
loope
xchg
repnz
cld
sub
cmpsl
shlb
mov
xchg
lods
iret
int
imul
sub
scas
mov
bound
fistl
sub
cltd
aam
sub
xor
lret
mov
cmp
repz
imulb
inc
loop
xchg
xor
jmp
fwait
xor
cmp
aad
xlat
clc
ss
mov
mov
jae
mov
out
iret
mov
dec
fndisi(8087
pop
xor
lods
test
ret
dec
or
adc
popa
std
add
or
jno
xchg
popa
fisttpl
shr
pop
ss
out
mov
xchg
js
xchg
cmpsl
fstps
pusha
jmp
insb
outsl
insb
test
xor
adc
cli
cmpsl
fwait
push
sub
jb
inc
lock
dec
gs
in
stos
insb
test
in
push
lods
rolb
pop
rolb
gs
mov
cltd
pop
jno
adc
lods
nop
mov
mov
insl
cmp
clc
sub
xorl
mov
mov
xor
and
jl
xor
sti
dec
adc
sbb
or
ljmp
cmp
sti
int
pop
lret
jb
xchg
mov
adc
dec
add
add
jno
cmp
inc
popf
inc
les
test
pop
jle
pop
repz
insb
cmp
mov
ret
in
rcll
add
inc
cmc
out
rcr
shrl
ja
fwait
and
cmp
mov
shr
mov
loopne
pop
xchg
and
mov
sub
mov
sbbb
cmc
and
in
mov
and
push
xor
xchg
pop
addr16
jmp
cmp
loop
movsb
int
jmp
push
lods
pop
jge
xor
daa
jmp
or
add
in
or
dec
jmp
sbb
inc
lcall
aad
push
sahf
xor
mov
frstor
inc
xchg
jno
adc
in
cs
iret
testl
lock
mov
fwait
or
or
pop
inc
arpl
xchg
sbb
popa
push
cmp
cmp
addr16
inc
shlb
push
jnp
pop
iret
mov
sti
sbb
and
rcrb
lods
andl
adc
ljmp
cmp
in
rcrb
loop
cmp
addr16
outsl
in
test
lods
jl
jnp
mov
sbb
jne
pop
loope
cltd
and
dec
mov
dec
gs
std
push
repnz
pop
loopne
dec
dec
jns
inc
dec
movsl
pop
loope
push
sbb
fldt
sub
cld
add
aaa
loop
repz
sti
sub
mov
rcr
test
mov
mov
push
add
sub
ud0
xor
movsl
mov
jmp
in
fistpl
inc
fwait
test
pop
mov
or
fdivrs
fwait
dec
push
lods
cmp
int3
xor
push
out
lea
pop
xor
xchg
pop
cltd
leave
push
decb
pop
sub
mov
push
outsb
cmp
xchg
dec
rolb
xor
sbb
pop
and
cli
dec
or
int3
subl
pushf
inc
cmc
test
fstps
in
jecxz
insb
ret
stos
aaa
in
out
dec
adc
xchg
or
xor
into
pusha
lods
insl
sti
jle
xchg
jnp
sub
repz
fcmovu
jmp
add
out
mov
lahf
call
push
pop
pusha
jmp
in
testb
push
mov
mov
idiv
insl
jecxz
repz
clc
clc
mov
aam
sub
or
addr16
push
imul
insb
jno
mov
or
out
mov
mov
or
lret
std
mov
lret
mov
sbb
cmp
loopne
negl
push
and
mov
xor
leave
stos
jne
inc
andl
cltd
mov
mov
adcl
lret
mov
mov
loop
lods
mov
leave
mov
dec
inc
loop
xchg
or
push
cmp
dec
inc
and
loopne
repz
in
sbbl
aam
daa
lret
mov
xor
or
lock
cmp
ljmp
and
mov
jmp
lock
addr16
fs
cmpsb
repnz
lcall
mov
push
outsb
ja
push
mov
stos
sti
je
xchg
cmc
lds
add
xor
test
xchg
mov
cmp
arpl
push
out
dec
icebp
push
stos
lret
or
mov
jae
mov
mov
mov
and
ret
lods
or
pop
popf
cmpsl
movsl
xor
sub
and
divl
jge
adc
popf
out
pop
xchg
clc
jg
loope
or
sbb
jecxz
xchg
fsubrs
adc
fdivr
sti
mov
outsb
sub
cmp
xchg
std
jp
xor
fcom
push
or
mov
add
out
fldt
sbbl
in
cli
jmp
popa
in
fcomi
jg
popl
in
popa
xor
je
dec
loop
inc
xor
orl
lods
pop
mov
stc
xchg
mov
sub
sbb
push
fwait
adc
mov
icebp
mov
push
int3
and
testb
sub
and
iret
ja
aam
in
sbb
data16
xchg
les
fldcw
loope
leave
push
sub
fimuls
inc
xchg
stos
mov
adc
aam
add
dec
sub
jns
mov
ja
lods
fbstp
out
test
fimuls
int3
inc
mov
into
fistl
adc
ret
mov
in
mov
sub
xchg
and
add
cmp
or
test
rclb
test
xchg
andb
or
mov
fs
adc
pop
mov
rcll
mov
mov
pop
insl
mul
enter
stc
outsl
out
push
mov
dec
sbb
push
in
push
or
or
inc
enter
adc
or
inc
cltd
in
daa
and
cmp
lahf
xlat
inc
out
not
les
jmp
stos
cltd
cmc
stos
sub
aam
lea
mov
push
insb
addb
mov
into
xchg
pop
dec
icebp
lds
jmp
sti
ja
cmpsl
or
stos
out
adcl
dec
scas
jne
xchg
cmpsb
cli
fidivrs
sub
test
inc
xor
cmp
mov
adc
xor
sub
out
test
es
loope
mov
sub
in
movsb
es
psubusw
repnz
and
jl
bound
mov
fsubl
xor
push
push
std
jae
clc
rolb
scas
sarl
fwait
push
pop
fs
mov
mov
fdivrl
dec
in
hlt
shrl
das
imul
add
test
and
movsb
repz
je
jbe
jno
insl
inc
call
jmp
fstps
in
insb
fwait
repnz
xor
pop
and
pusha
ficompl
cltd
push
loope
pop
stos
lds
xchg
std
ret
sti
mov
xor
ss
dec
mov
in
fildl
jno
add
hlt
jnp
fstl
mov
dec
rcrb
mov
lods
push
sbb
and
cmc
jno
sti
mov
pop
adc
clc
js
sti
xchg
mov
jecxz
and
mov
pop
test
fwait
emms
movsl
mov
imul
mov
dec
jmp
jg
ja
pop
xchg
lock
adcl
sbb
and
mov
push
mov
lods
mov
mov
xchg
dec
pusha
pusha
hlt
out
push
push
sub
cmpsl
popf
cmp
pop
fcomps
arpl
jg
dec
mov
push
js
popf
popf
jne,pn
rcrl
xchg
shlb
in
jle
movb
scas
cmc
icebp
dec
addl
jb
addl
and
and
call
cmp
mov
jne
fcoms
mov
hlt
and
push
add
xor
mov
mov
nop
dec
jns
repz
jb
sub
test
add
inc
inc
std
cld
fidivrs
lods
fists
push
sbb
jnp,pt
fistl
test
lahf
iret
fstpl
sti
leave
mov
leave
mov
ret
fsubrl
movsb
dec
sub
xchg
aad
lret
ds
iret
jl
adc
data16
cli
xor
mov
js
fcmovnb
push
xchg
mov
enter
jae
std
addb
insl
xchg
aam
popf
xchg
ja
jg
mov
in
outsl
sti
arpl
jl
mov
mov
call
test
cmp
and
jno
cmc
andl
les
pop
popf
cmp
pushf
jl
incb
dec
dec
test
pop
insl
pop
jecxz
mov
sahf
js
mov
in
xchg
xchg
mov
adc
sbb
xor
loopne,pt
sub
pop
push
cmp
fdivl
mov
rcll
jecxz
testl
pop
gs
aam
lock
mov
fdiv
std
mov
mov
mov
add
xor
mov
mov
pop
dec
testb
mov
pop
lods
dec
ljmp
dec
leave
push
inc
das
test
sub
ljmp
mov
out
mov
lcall
cli
movsb
xor
sub
and
ljmp
mov
idiv
popa
into
push
sbb
in
movsl
mov
call
inc
mov
jecxz
lea
jo
inc
sahf
cs
and
scas
mov
or
stos
jae
filds
fwait
mov
mov
pusha
fcomps
mov
lcall
jle
jle
add
jo
sti
sub
or
stc
xor
inc
les
jmp
fcmovnbe
insb
rclb
or
out
xchg
fcomi
mov
stos
das
and
pop
or
enter
imul
push
out
pop
mov
cmp
ljmp
movl
mov
test
pusha
xchg
imul
into
sahf
cmp
out
or
dec
jmp
mov
or
jbe
sub
outsl
fcomp
push
cmpsl
and
aad
and
jbe
cmc
push
xlat
data16
fstpt
inc
test
call
sbb
and
mov
lock
xchg
lods
mov
xchg
in
dec
imull
mov
ret
adcb
xchg
test
and
inc
mov
mulb
cmpsl
push
pusha
mov
repz
lock
xor
lret
mov
sbb
and
in
or
jo
jecxz
pop
mov
xor
hlt
push
mov
ja
xchg
mov
insl
mov
cmp
std
adc
fsubrs
dec
das
pop
arpl
sub
loop
sub
shl
jae
leave
sbbl
rcrl
aaa
pop
sbb
cmp
sbb
cmpxchg
sar
jg
add
fwait
sbb
xchg
jno
push
sbb
push
fisubs
dec
hlt
cmp
aaa
push
mov
sbb
arpl
in
out
mov
jns
imul
mov
add
roll
popa
xchg
cmc
push
out
fildl
push
inc
ss
inc
mov
jecxz
inc
sub
cmp
outsl
cmp
push
add
jge
sbb
mov
out
aaa
movsb
sti
stos
xor
xor
dec
js
jle
fnsetpm(287
aad
fsubs
push
pop
cmc
lret
test
repz
and
js
push
jnp
mov
fwait
push
fldt
fildl
in
or
pop
fisubl
popf
psraw
xchg
shll
push
fwait
cmpsb
sub
add
jmp
fnstsw
cs
add
inc
xchg
ljmp
cmp
lret
and
sbb
add
lcall
dec
inc
and
cld
xchg
dec
and
xor
in
ja
xor
in
test
fwait
mov
add
popf
shll
sar
sub
gs
in
mov
or
pop
sub
sti
mov
adc
and
push
mov
stc
shlb
pop
enter
pop
imul
adc
or
js
add
xchg
loop
popa
push
rol
iret
jmp
jne
int
and
xchg
insb
leave
fldcw
fistl
adc
pop
and
jecxz
jo
pop
sub
adc
sahf
pop
and
call
sub
push
pop
inc
dec
dec
mov
fcmovnu
daa
iret
inc
inc
push
xlat
sahf
inc
rclb
fs
ss
sti
test
call
push
movsb
pushf
add
mov
bnd
cwtl
pop
in
adc
sub
hlt
and
cmp
or
mov
mov
sbb
ja
repnz
aaa
dec
rol
pop
push
insb
daa
jl
pop
stos
xor
or
sti
cmp
mov
mov
call
inc
fisttps
and
add
sub
sub
and
fstpt
jmp
ret
je
in
dec
gs
imul
vpmaddwd
add
dec
stc
loopne
testl
ds
mov
dec
fildl
loopne
xor
pop
cmp
pop
rcll
dec
mov
hlt
cld
imul
sti
sbb
mov
dec
out
fnstenv
pushl
mov
popa
fwait
test
pop
gs
mov
push
test
iretw
in
shrb
outsl
inc
lock
push
shlb
js
bsr
and
mov
repnz
mov
loope
pop
in
mov
pop
movsb
inc
xchg
lds
inc
movsl
fucom
into
aaa
push
pop
in
clc
mov
adc
movsl
in
pusha
pop
cmp
mov
mov
jmp
push
lds
ljmp
enter
test
xlat
mov
int
repnz
dec
sub
fwait
mov
inc
sub
pop
or
mov
repnz
dec
inc
push
dec
and
repz
outsl
divl
ret
ds
sub
mov
in
and
mov
and
xchg
jmp
xor
fwait
xor
xchg
sub
mov
mov
sahf
xor
ret
push
jae
xchg
aad
shll
lret
std
popf
jne
hlt
mov
or
push
adcb
ljmp
sbb
stos
push
pop
lods
dec
mov
sub
push
jno
sahf
lsl
fistps
push
fwait
jmp
push
insl
jg
mov
xlat
add
loop
sub
out
mov
mov
mov
test
pop
sbb
add
jae
les
pop
mov
pop
aas
mov
cld
ror
add
adc
cmp
enter
cmc
out
test
mov
push
cwtl
pop
je
das
je
jmp
insl
cmp
adc
mov
mov
popa
out
mov
stos
sbb
ret
ffreep
cmc
aam
iret
mov
hlt
add
or
pop
xchg
pop
in
shl
pop
iret
dec
add
in
aad
scas
lods
mov
push
push
and
push
mov
xchg
rcr
xor
jp
xor
fs
cmp
into
std
inc
std
push
and
and
cmc
mov
add
imull
cwtl
loopne
jb
pop
xor
mov
sarl
sub
fsubr
aas
xchg
xchg
outsb
std
xchg
insb
mov
mov
or
push
mov
xor
jp
gs
sbb
test
xor
popf
push
neg
stos
xor
push
in
jge
popa
mov
sbb
fwait
mov
xor
sti
bound
and
cld
mov
pop
lea
mov
insl
or
add
in
flds
in
ljmp
inc
mov
aad
mov
js
or
jbe
loop
push
imul
ret
add
les
push
adc
out
ret
adc
not
jmp
jge
xor
outsl
fwait
jnp
and
push
pushf
aam
pop
fistl
jns
popf
cmpsb
jg
sub
cmp
or
cld
ljmp
and
cmp
in
mov
sub
mov
rorb
xor
and
mov
or
fs
and
jecxz
xlat
xchg
icebp
jo
cmp
sbb
jg
insb
arpl
xchg
nop
outsl
pop
aaa
xor
push
xchg
dec
repz
jb
nop
xor
push
jecxz
sub
popa
inc
jp
test
inc
xor
lods
fisubrs
or
in
mov
cmp
jecxz
push
hlt
lret
fimuls
dec
mov
jbe
inc
push
xchg
inc
imul
fs
inc
call
nop
mov
push
ja
and
and
xor
out
mov
push
xchg
xchg
and
adc
mov
mov
loopne
xor
mov
movsl
cmc
in
fldt
mov
addr16
push
aas
movsl
test
sub
loope
fisubl
shrd
jl
cmp
xchg
or
jo
paddsb
xchg
push
adc
push
cmp
jmp
lea
jo
icebp
mov
xor
push
in
lods
popf
sti
push
sbb
xor
sbb
cmc
mov
enter
dec
test
cld
cmp
sub
xchg
sbb
inc
gs
aam
adc
movsb
mov
fldenv
cmc
fistl
jmp
sar
lea
jp
and
in
jno
and
subl
xchg
mov
add
rep
aaa
xchg
jecxz
sbb
sbb
push
rcrl
push
aam
xchg
fidivl
fwait
cmp
jb
out
jae
popf
fistl
jl
mov
cmpsb
and
add
loope
scas
xchg
lods
fisttpll
cld
int3
mov
mov
sar
fwait
test
dec
int3
pop
dec
outsb
fldt
movsb
xchg
clc
add
test
mov
inc
jge
lds
cmp
popf
inc
mov
les
cmc
hlt
fldt
adc
xor
movsb
jle
aam
and
aas
jmp
sti
cmp
push
icebp
out
les
and
cmp
mov
jb
inc
add
stos
mov
sbb
addr16
xchg
sbb
gs
lods
dec
pop
rep
pop
fldt
lock
std
dec
in
addr16
xchg
adc
gs
sub
mul
shlb
icebp
fwait
jecxz
outsb
ret
leave
jae
dec
imul
xchg
mov
std
fcmovnb
cmc
sub
sti
adc
cltd
adc
mov
adcb
movsb
pop
popf
mov
data16
jg
mov
in
and
scas
adc
sbb
push
lahf
mov
ret
push
or
sub
mov
or
in
jns
std
repnz
int
insl
or
pop
xchg
sub
jecxz
mull
iret
xchg
cld
int3
sbb
loop
popa
pop
adc
inc
pop
scas
or
adcb
adc
fstpt
mov
pop
test
imul
outsl
ret
in
lock
xor
loope
mov
movsb
mov
cmp
js
pop
ds
je
rorl
mov
pusha
fcomp
popa
mov
xchg
inc
or
xor
fmull
adc
mov
pop
xchg
pop
push
int
fstpt
outsl
nop
mov
fcom
repz
inc
add
pop
pop
push
int
fbld
cmpsb
mov
push
clc
jge
ljmp
repnz
rcll
mov
fs
jecxz
adc
movsl
clc
sbb
sti
sbb
add
into
stc
sbbl
mov
xlat
or
lods
sahf
out
cmc
adc
mov
dec
shrb
fnsave
cwtl
mov
bound
fimull
add
out
sti
mov
xchg
insl
cmp
sub
dec
lods
call
xlat
fsub
rcrl
aas
lods
fwait
cli
in
ja
push
aaa
rol
push
data16
movsl
push
enter
js
loop
out
stos
sub
cltd
and
dec
aam
pop
call
lock
clc
out
inc
push
xchg
imull
push
in
inc
das
fs
popf
mov
push
ret
xchg
xlat
jne
cmovne
fwait
repnz
cs
or
sbb
cmpsb
xor
jns
ret
std
mov
lret
inc
addr16
sahf
inc
adc
mov
mov
mov
pop
or
mov
imul
out
sub
aad
cld
bnd
in
inc
mov
push
ret
inc
jno
bound
dec
mov
mov
mov
hlt
sbb
xchg
movsl
shll
push
inc
scas
jecxz
fistpl
sbb
iret
sub
aam
dec
jmp
orl
xchg
ror
xchg
in
ja
and
xchg
lock
dec
std
les
mov
mov
mov
fwait
mov
cli
mov
xorl
lahf
inc
mov
fistpl
inc
das
mov
lret
add
inc
mov
mov
loope
addl
mov
push
aad
or
push
lods
pusha
and
push
into
mov
dec
pop
into
mov
jmp
fldt
sti
std
pop
push
mov
jmp
mov
jmp
jmp
cmpsl
popa
mov
sub
icebp
shrb
xor
xor
xchg
mov
insl
jae
and
loope
adc
fistl
loopne
mov
movsl
sub
mov
mov
and
push
xor
push
and
std
fwait
in
fnsave
cmovb
bnd
or
lods
dec
sbb
mov
imulb
shll
fwait
pop
clc
ss
popf
es
int3
mov
push
inc
cmp
fdivl
push
scas
shrl
mov
in
cmp
mov
imul
dec
mov
pop
cmp
in
xchg
pop
aam
ja
adc
dec
mov
gs
pop
lea
or
out
popf
cli
xchg
icebp
sbb
loope
hlt
icebp
push
and
push
in
int
test
jmp
lahf
and
jmp
gs
jle
mov
adc
arpl
sarb
adc
insb
pop
pop
mov
mov
jnp
jg
loop
adcb
je
fldt
out
sbbl
xchg
paddw
lahf
and
cwtl
mov
add
xchg
push
enter
jae
lock
mov
or
bound
push
xlat
mov
xor
dec
mov
dec
mov
xchg
sbb
lret
mov
test
in
popf
out
xchg
push
dec
sub
xor
dec
popa
fwait
je
rcll
out
in
push
in
add
cld
jb
roll
test
xchg
adc
cmp
call
mov
sti
shrb
mov
addl
flds
sub
lret
or
inc
shll
adcl
int
push
jp
xchg
scas
in
sbb
out
ljmp
adc
mov
stc
push
mov
addl
lcall
ljmp
xchg
cmp
mov
dec
repnz
test
jmp
in
lock
popa
cmp
popl
adc
lods
pop
hlt
repz
movsb
iret
in
in
lahf
adc
mov
mov
cld
mov
sbb
sbbb
mov
sub
jg
hlt
daa
inc
xor
sub
inc
pusha
fwait
xchg
mov
sub
sbb
in
das
push
mov
stos
cltd
dec
mov
push
mov
push
popf
mov
sti
inc
adc
test
fcmovnu
push
dec
loop
pop
aam
jae
and
sub
inc
mov
movsb
cmpsb
in
mov
popa
ret
movaps
cli
jle
mov
mov
and
std
inc
loop
pop
xchg
icebp
mov
sub
popa
rcrl
mov
daa
ja
call
sbb
ret
inc
movb
mov
in
xor
mov
pop
rorb
cmp
shlb
dec
cmc
cmp
out
repnz
mov
arpl
cld
jbe
sbb
in
out
out
push
xchg
leave
mov
mov
out
push
aaa
inc
mov
sbb
dec
in
mov
mov
sub
sub
sbb
sti
and
mov
or
xchg
and
inc
sbb
pop
adc
enter
bound
pusha
or
pop
dec
sub
aaa
in
pop
sbb
mov
scas
push
outsl
mov
leave
ficoml
dec
jno
or
mov
hlt
fsubs
in
cmpsl
mov
rolb
imul
mov
pop
pop
xor
movsb
fwait
ss
adc
mov
sar
fwait
cmp
xor
jae
lret
push
cmp
fwait
das
insl
inc
aam
cmp
call
pushf
dec
movsb
cmc
push
aam
pop
xchg
out
pop
push
lds
mov
xchg
fcmovnu
in
cmp
in
mov
mov
fwait
pushf
adc
cmp
xchg
xchg
sahf
dec
xchg
ds
dec
sub
sbb
movsb
mov
push
dec
cmp
sub
inc
sub
movsb
loop
mov
inc
fistpl
clc
pop
jecxz
iret
cmp
dec
loope
shrb
es
ret
cmp
aaa
sbb
inc
int3
dec
jae
sub
lds
mov
mov
fiadds
adc
fisubrs
pop
jb
xlat
out
je
sub
scas
rolb
xchg
das
lcall
sub
jge
or
push
inc
rcrl
outsb
ret
pop
std
dec
fwait
rclb
je
shll
lret
pop
clc
add
movsl
hlt
push
idiv
aaa
xor
push
in
popa
mov
and
fldl
loope
fnstenv
inc
pop
jae
lahf
dec
add
repnz
in
loope
add
cmp
adc
mov
sbb
or
cmc
jge
jnp
scas
lahf
jbe
aaa
sarl
lret
cmp
inc
dec
movsb
dec
out
push
or
lds
ficompl
movsb
jmp
and
sahf
xor
sti
xlat
mov
test
in
pusha
fadds
lret
inc
mov
add
or
rcll
cmpsl
or
jecxz
scas
pop
sub
jne
jne
jno
mov
int3
rclb
ja
mov
pop
sub
push
lods
pop
adc
ret
stos
hlt
nop
popa
and
rep
loop
stos
sti
mov
or
faddp
push
rorb
xchg
or
addr16
jp
inc
cld
mov
popf
push
stos
mov
inc
inc
lods
out
jle
or
sbb
mov
jbe
mov
jae
jecxz
in
mov
fcmovne
xor
fwait
and
imul
cmc
xchg
mov
and
or
pop
mov
sbb
sti
je
add
xchg
mov
popf
les
mov
adc
loop
sbb
lcall
dec
pop
popf
or
or
arpl
fwait
lcall
repnz
call
cmp
ljmp
sub
push
movsl
std
fwait
mov
repz
pop
orb
in
xor
mov
xchg
jb
push
cli
or
mov
dec
out
sti
sub
push
push
lret
movsl
loope
mov
les
ss
pop
std
xor
adc
mov
cwtl
ret
xor
loop
je
jae
lret
nop
scas
sbb
mov
mov
lahf
test
testl
mov
add
pop
dec
mov
and
xor
sub
out
mov
fnstsw
fst
movl
out
xabort
shlb
pop
or
in
ds
or
push
hlt
ja
repz
mov
popa
add
jge
sbb
outsl
jnp
jns
orl
inc
jecxz
nop
xchg
inc
inc
ja
test
shrl
and
out
outsl
jmp
icebp
xchg
and
pushf
fwait
cs
shl
dec
cmp
mov
add
mov
xchg
jb
push
lods
insl
fsub
dec
insl
inc
popa
sbb
sbb
pop
shl
nop
cld
sarb
lods
cmp
lea
sti
jmp
push
pop
mov
outsb
jo
xorb
jbe
xor
lods
fistpll
cmc
aas
out
fwait
mov
inc
cmp
mov
stos
repz
stos
dec
mov
add
jg
mov
inc
xchg
ljmp
loop
arpl
dec
loopne
in
mov
mov
loope
cmc
loope
xchg
xor
fmuls
jecxz
xlat
adc
daa
dec
xchg
inc
mov
jge
cmp
imul
loop
pop
jle
mov
jae
shl
lock
loop
push
xchg
inc
sti
lret
lret
mov
insl
cmpsb
in
popl
mov
std
xchg
and
fistl
imul
jbe
test
mov
mov
outsl
cmp
jg
mov
insb
lret
mov
push
stc
sti
add
push
jbe
lods
add
leave
cmp
movsb
push
lock
jle
sub
scas
and
aaa
cmp
mov
shlb
add
push
ja
cltd
stos
sub
pop
jmp
sub
dec
out
mov
std
ljmp
notb
stos
fxam
imul
lret
mov
mov
xor
xor
pop
mov
mov
xor
popa
cmc
inc
out
cwtl
push
push
fwait
std
in
test
inc
push
and
cmc
int
loope
fldt
xchg
jle
mov
in
icebp
fiaddl
popf
cmc
sti
adc
push
xor
add
fistl
lods
adc
leave
das
sub
mov
scas
test
lds
mov
dec
loope
pop
jg
mov
or
aas
movsb
les
xchg
jae
mov
xor
xchg
xchg
cmp
adc
push
iret
loope
repnz
jno
push
aad
push
andb
out
dec
cmp
scas
jbe
enter
lahf
sbbl
dec
mov
loope
leave
das
shrl
ret
fwait
mov
fldt
sbb
cs
repnz
cmp
sbb
push
mov
lods
pop
cmp
std
andl
mov
int
cwtl
cmpb
jecxz
xchg
sub
inc
sub
shlb
mov
mov
arpl
push
ds
sbb
icebp
iret
imull
sti
das
push
lcall
fcomi
test
aam
sbb
in
lods
leave
sbb
inc
mov
orl
popa
cld
ds
sub
ret
cmc
imul
ss
dec
ret
xchg
ds
and
pop
dec
iret
push
xlat
cmp
das
popa
pop
insb
push
pop
lcall
xor
lds
adc
icebp
inc
mov
int3
loopne
je
mov
sahf
sub
mov
std
dec
sbb
and
mov
movsb
les
dec
pop
cmpsl
les
cli
int
sti
loop
movsb
or
add
ss
inc
mov
dec
push
arpl
ret
xchg
push
loop
in
lock
push
push
pop
jl
cwtl
hlt
mov
adc
sub
lea
jp
ja
ja
sbb
scas
insl
inc
jmp
call
in
es
adc
or
outsb
mov
mov
or
fimuls
xchg
jmp
pop
inc
jb
loopne
pusha
in
cmc
fcmovnbe
lret
outsl
mov
mov
xchg
mov
repz
jecxz
aam
pop
neg
jns
jo
imull
hlt
or
pop
mov
jae
fwait
xor
cmpsl
push
rorl
mov
add
and
push
xchg
mov
stc
and
mov
push
add
idivb
fmul
push
out
inc
push
mov
sti
mov
js
aad
int3
fwait
repnz
mov
mov
pop
lret
push
scas
inc
jae
cmc
leave
pop
pop
push
sub
mov
or
in
sub
dec
movl
cmpl
movsl
lret
sub
dec
sti
inc
ficompl
fwait
in
je
jecxz
and
aaa
push
loop
jo
ret
call
in
fdivrl
mov
fnstenv
add
xchg
lcall
pop
sbb
repz
sbb
rolb
mov
out
adc
loope
lock
loopne
out
mov
adc
fdivp
test
sub
push
movsb
add
mov
push
xchg
ljmp
scas
cwtl
shll
mov
std
aam
fadd
shlb
mov
test
fmul
loopne
fcmovbe
push
dec
mov
ljmp
repz
das
out
mov
std
mov
les
or
adc
lock
das
icebp
fstpt
shll
inc
gs
mov
xor
andl
mov
loopne
jge
and
in
ror
mov
loopne
sub
sub
aad
std
lds
ret
pop
in
sti
aam
or
lret
cmc
jle
jecxz
mov
jl
cmpsl
fcmovnbe
test
sub
outsb
popf
mov
stos
ds
cli
add
in
sti
and
or
daa
mov
push
imul
jo
addr16
sahf
cmp
daa
mov
in
sarl
inc
mov
lret
pop
call
fwait
lds
dec
in
push
cmpb
mov
mov
fistpl
mov
movsb
cmp
push
sbb
mov
repz
pop
pop
jge
movsb
mov
and
fadds
lock
aam
xchg
fisubrl
jge
adc
xchg
loop
ljmp
rcrl
je
sti
xchg
mov
outsb
or
mov
mov
int3
push
sbb
decb
outsb
sub
fisttpl
outsb
sub
and
lahf
jno
mov
fcmovne
xor
divl
repnz
sub
fnstsw
mov
mov
add
lret
aad
pop
nop
test
gs
adc
ja
shll
mov
jns
out
xchg
dec
jo
stos
clc
mov
mov
mov
into
mov
adc
xchg
in
cmp
mov
popf
sti
dec
pop
cmp
add
ja
mov
or
jno
xchg
push
mov
sub
repz
out
mov
push
mov
aaa
call
xor
fstp
es
push
lds
das
lods
ror
fcomi
xor
adc
lds
stos
dec
outsl
and
inc
add
and
loop
xchg
mov
pop
stc
scas
xchg
ds
inc
mov
dec
jne
enter
rorl
xchg
adc
popf
stos
cmovb
les
push
pop
dec
in
outsl
mov
rcll
mov
loopne
mov
repnz
xor
add
or
push
enter
push
jp
jle
push
popf
sti
imul
push
dec
xor
test
cltd
fs
xor
fwait
mov
sbb
in
scas
mov
cmc
insl
fstpt
mov
jbe
pusha
hlt
clc
outsb
mov
fwait
ror
dec
mov
xchg
xchg
jle
test
pop
les
es
sbb
aam
lahf
test
fidivl
or
negb
loop
xchg
cld
imul
jge
pop
insb
adc
fstl
inc
and
jle
push
clc
dec
ret
inc
xchg
xor
out
jmp
in
cmp
pop
push
mov
jb
or
adc
dec
inc
cwtl
imul
leave
inc
sbb
sbb
cmp
adc
cwtl
loope
mov
dec
ss
iret
popa
jns
mov
inc
loope
push
repnz
jo
pop
cmc
imulb
xchg
rorl
iret
mov
scas
jae
pop
xor
push
mov
mov
and
cwtl
mov
sub
test
dec
jge
mov
fwait
nop
into
repz
les
fiaddl
sbb
sbb
leave
rcll
sbb
test
rep
sbb
add
js
jle
and
lahf
lret
push
aam
xor
js
mov
xchg
aas
bound
ror
push
dec
push
sub
testb
mov
jns
in
push
fcmovne
repz
mov
or
lods
cli
mov
cmpsl
in
jmp
mov
aam
mov
ds
pushf
dec
hlt
pop
jmp
cmc
icebp
mov
mov
push
and
fstpl
push
fisubrs
gs
add
fnstenv
pop
in
fiadds
add
cmc
aas
jae
mov
mov
shr
fstpt
xchg
jo
cmp
outsb
add
pop
cmp
xchg
add
cld
add
sbb
mov
shlb
fdivrs
xor
lods
sub
push
or
ffree
mov
cltd
push
insl
and
roll
sub
lahf
testl
fwait
ja
sub
xchg
or
dec
lods
or
mov
orl
push
pop
and
xchg
dec
mov
and
mov
sbbl
stos
jne
mov
dec
out
movb
inc
inc
stos
stos
sbb
andl
push
in
pop
pop
icebp
lcall
enter
dec
mov
daa
inc
jae
push
fiadds
ret
jo
cs
mov
adc
mov
pop
fs
fstl
dec
iret
pusha
adc
push
sbbl
xchg
xor
xor
xchg
outsb
popf
clc
dec
mov
mov
loope
call
push
pop
cmc
mov
clc
aad
inc
sbb
fcompp
mov
stos
push
mov
cwtl
mov
dec
mov
repz
fisubrl
adc
rol
cmc
dec
xor
iret
test
mov
ret
fwait
repnz
xchg
iret
jb
pop
loope
inc
and
jb
cmp
add
rcrl
fdivp
inc
dec
fcmovnbe
adc
enter
pop
shll
mov
push
jge
lea
ret
enter
arpl
jg
or
test
cmp
ds
push
iret
inc
xorl
jle
or
inc
pop
xor
insl
sbb
in
xchg
lods
out
pop
icebp
push
fucomi
push
add
jae
mov
cmp
fs
xchg
fs
fwait
mov
stc
jns
daa
adcb
fs
push
les
push
mov
loope
fucomi
push
out
inc
jmp
inc
shl
in
mov
daa
fdivrp
xchg
jno
mov
ret
mov
fldt
fistl
pop
jno
add
and
in
test
scas
scas
mov
stos
inc
mov
out
mov
xor
jmp
mov
popf
sti
cs
pop
mov
push
pushf
lahf
mov
test
xchg
test
sub
xchg
and
jo
incb
addl
popf
hlt
js
stc
je
jle
dec
cld
mov
cmp
adc
jbe
scas
jb
scas
sbb
mov
dec
mov
xor
jge
mov
push
inc
sarb
pop
cld
imul
aad
imul
rcrl
cmpsl
lock
dec
loop
sbb
mov
dec
cmpb
jo
int
popl
aam
pop
sbb
aaa
adcl
adc
andl
fnstcw
pop
leave
in
sbb
std
aam
pop
shr
pop
dec
xchg
mov
movsb
sti
scas
jb
jle
cld
cmp
pop
js
stc
rclb
mov
out
js
int
lds
pop
cmp
ds
cmp
or
fstp
fidivl
jo
data16
push
addr16
into
in
push
rorb
dec
out
stos
mov
adc
insl
es
mov
addb
lock
jnp
fndisi(8087
lahf
inc
lods
cmc
roll
cmpb
push
shlb
dec
add
ret
push
and
add
loop
sbb
xchg
jge
xchg
fnstsw
and
ljmp
pop
inc
adcl
loopne
inc
stos
jnp
iret
ja
sbb
push
out
scas
or
mov
testl
lahf
cmp
loop
inc
sti
xchg
repnz
popa
add
sbb
pop
xor
iret
arpl
sti
into
mov
not
in
adc
jp
jecxz
mov
pop
xchg
loop
cmc
sti
and
jb
jecxz
call
scas
jp
je
in
sbb
push
pop
pusha
pop
pop
int3
ret
jmp
jne
mov
pop
popf
jmp
sub
repz
sti
test
and
pop
pop
int
cmp
jbe
in
repnz
or
call
loopne
mov
sti
sbb
sub
jle
push
nop
leave
cmpsb
fcmovnb
adc
xlat
shll
jecxz
dec
test
push
enter
lea
adc
or
mov
xor
addr16
mov
cmp
xchg
movsb
setns
aam
push
mov
sub
outsb
popf
out
jb
jge
mov
call
xchg
lods
repz
imull
cmc
push
sbb
pop
outsl
in
dec
repnz
or
out
mov
dec
or
jp
push
test
or
movsl
mov
sub
lret
fsubr
fwait
lods
mov
lock
xor
lods
lahf
leave
mov
and
or
popa
sub
mov
loope
dec
fisubrs
sti
dec
ret
pop
or
and
add
xor
jno
push
ss
int
stos
add
jl
gs
stos
rcr
jae
mov
jle
lret
lcall
movl
rorl
les
adc
in
jl
jmp
dec
in
rcll
in
popa
insb
fbstp
mov
ret
inc
xchg
or
cli
movl
xor
push
inc
xor
pop
loope
fisttpl
xor
int
jbe
insl
dec
aad
sarl
xchg
in
fwait
cmp
int
movsb
cmp
loop
int3
cmpsb
in
jg
movsb
add
pop
fstpl
in
mov
add
adc
nop
jle
xor
insl
dec
adc
sub
mov
jns
shrb
pusha
mov
mov
cwtl
jmp
pop
push
sahf
repz
ja
sti
ljmp
or
or
addl
scas
cmc
mov
add
lock
leave
ds
mov
cmc
insb
ret
fsubs
icebp
clc
xor
and
roll
pop
jmp
repnz
and
sbb
icebp
xchg
or
pop
or
cmc
js
and
lock
cmc
lret
mov
jmp
cs
rcrl
push
jge
fisttpll
or
fmull
jecxz
pop
push
dec
rorb
and
xlat
xchg
mov
xchg
shl
xor
mov
jb
icebp
xor
aam
mov
push
mov
mov
in
and
cmpsb
sbb
stos
push
pop
popf
cmp
repnz
push
xchg
push
jb
mov
xor
out
fistl
mov
lods
dec
repz
push
out
lret
ret
test
adc
es
dec
jge
leave
mov
popa
js
ja
fmull
mov
jne
rcl
xorl
arpl
jno
mov
cmpsl
pop
lods
jne
lods
mov
mov
imul
mov
outsl
out
pop
cmp
ret
sub
cltd
jno
push
xchg
sub
js
nop
idivl
inc
inc
incl
cwtl
repnz
stos
and
jno
inc
das
xor
sbb
mov
loop
icebp
fldt
insl
or
popa
or
and
hlt
mov
out
mov
xchg
decb
out
nop
sbb
das
xchg
iret
lods
cmc
sarb
or
int
sti
and
mov
mov
push
jno
adc
fistpll
test
enter
sti
ja
adc
ljmp
outsb
aad
flds
out
mov
adc
pop
mov
jmp
push
icebp
imul
imul
and
pushl
sti
lock
xchg
in
sbb
sub
stos
mov
and
hlt
add
clc
leave
sbb
das
fildl
pushf
sub
aam
jo
jns
push
ja
mov
inc
push
dec
and
lret
iret
and
icebp
adc
lea
mov
xor
jge
xchg
inc
or
mov
mov
and
lret
out
addb
mov
inc
out
mov
loop
stos
ret
push
fisubrs
adc
pop
sbb
mov
aaa
lret
fidivs
add
jge
jle
pop
js
insl
lds
imul
out
xchg
dec
add
adc
mov
add
loopne
ja
ret
jb
push
gs
idivb
ret
popf
sbb
div
pop
test
ss
in
lret
dec
mov
jae
mov
outsb
adc
inc
add
mov
mov
adc
mov
aaa
cwtl
pop
fmuls
mov
rol
ja
fiadds
inc
or
push
aaa
xor
in
js
outsb
add
push
cld
sti
xor
push
push
adc
pop
sub
lahf
dec
inc
dec
inc
imul
xchg
xchg
and
mov
imul
add
mov
push
fists
xor
add
or
sub
stc
subb
mov
jecxz
jae
out
add
sti
or
fcmovne
mov
pushf
mov
mov
and
jnp
sub
fucomi
orb
cmp
dec
popl
sti
sub
leave
and
cmp
mov
push
test
iret
xor
or
aas
imul
es
pop
push
and
cmp
sub
aaa
ret
jmp
jmp
xchg
sbb
jbe
sarb
push
andl
test
ss
cmp
mov
iret
clc
lock
mov
mov
test
mov
ljmp
sbb
and
mov
and
lods
fwait
cltd
test
mov
aaa
sub
call
out
in
in
mov
and
and
mov
out
jmp
mov
cs
pop
sbb
jo
xcrypt-ofb
cmpsl
imul
stc
cmpsb
nop
add
sbb
popf
or
je
mov
ds
insb
in
nop
mov
addl
popf
fldl
jle
loop
sub
in
xor
sbb
sti
scas
xchg
popf
out
rcr
mov
sub
cli
test
lret
mov
divl
aad
nop
mov
outsl
inc
adc
pusha
ret
loope
vhaddps
jp
lret
push
es
cmp
mov
ljmp
mov
pop
xchg
mov
loope
push
add
mov
sub
adc
sub
loopne
xchg
movsl
int3
aad
call
dec
inc
fcoml
cmp
mov
jl
fs
and
jbe
rorb
add
ret
ss
test
sub
fadd
mov
xchg
das
les
dec
dec
sub
xorl
cmc
stos
aaa
sub
jb
or
popa
mov
imul
xchg
lret
les
mov
aaa
xchg
and
imul
adcl
pop
xchg
mov
add
inc
test
and
out
lods
loop
call
fdivl
sbb
fiaddl
loop
mov
frstor
mov
ret
mov
jg
fadds
ret
in
jno
xchg
lods
add
into
icebp
mov
icebp
shl
fldl
jno
push
pop
inc
jns
jae
lret
mov
jle
test
shr
stc
mov
lds
loopne
out
xchg
add
sub
dec
fisubl
xchg
test
push
inc
cli
into
jb
mov
and
fdiv
mov
adc
cltd
outsb
push
ja
jmp
loope
push
jo
inc
jmp
lret
sub
adc
gs
sarl
in
add
cs
and
fcmovb
fisubs
push
cld
xor
dec
test
mov
cmpsl
cmc
addl
repnz
xor
xlat
mov
shl
cs
je
sbb
out
lods
mov
push
int
pop
or
fadds
and
ss
pop
mov
cld
dec
mov
jo
lcall
or
jmp
cwtl
mov
in
arpl
pop
aam
xchg
mov
ret
mov
xchg
xchg
ret
xchg
pop
shll
jae
adc
stos
rorb
add
sub
ret
mov
out
add
add
fwait
in
test
data16
lea
dec
dec
ret
jge
lods
jp
mov
jge
cmc
daa
fisubs
jne
loope
and
out
ss
mov
adc
inc
jp
cmc
add
add
aas
inc
xchg
lods
sub
jae
shrb
aam
lcall
outsb
lret
test
push
push
mov
jae
cltd
add
cwtl
movsl
pop
stos
or
aam
in
cwtl
jmp
popa
inc
sbb
mul
loop
mov
sbb
fwait
and
aaa
popa
packuswb
dec
mov
loopne
fwait
fdivrl
jb
rcr
mov
sub
incb
pop
jo
popa
in
cmp
mov
stc
ficomps
ja
mov
shl
mov
ja
in
mov
pop
in
mov
mov
adc
push
jnp
fisttpl
data16
dec
out
xlat
outsl
iret
mov
push
pop
jecxz
adc
fucomi
mov
mov
ret
mov
push
lds
jae
xchg
push
mov
add
inc
in
xchg
idivl
dec
xor
lcall
aas
sbb
dec
dec
loop
ficoml
adc
lahf
in
pop
fstpt
shrd
lock
dec
adc
clc
pop
hlt
pcmpeqd
sbb
push
push
cmp
inc
aam
jne
add
or
jecxz
insl
or
cmc
cmp
mov
clc
xor
out
add
hlt
or
adc
lahf
xlat
add
or
std
mov
mov
fdivr
sbb
addr16
lock
add
idivb
adc
pushf
outsl
cld
sub
or
sbb
mov
stos
xor
fiaddl
fadd
lret
or
push
mov
mov
in
out
push
addr16
sub
push
test
stos
add
push
insl
xor
mov
int3
dec
fwait
pusha
mov
addr16
mov
movsb
mov
xchg
test
stos
lea
pop
les
loope
add
xor
mov
pop
lret
jmp
dec
shll
bt
push
cmp
ficoml
fildl
pop
pop
mov
jecxz
mov
in
mull
push
push
push
jl
ljmp
lret
xchg
gs
cwtl
test
jl
xor
mov
xor
mov
mov
jbe
dec
or
pop
ret
les
cmp
add
dec
add
mulb
adc
add
adc
push
cmp
jnp
mov
pusha
mov
sbb
adc
and
inc
fwait
mov
sub
nop
cmp
and
jl
mov
imul
shll
inc
mov
push
add
or
and
adc
add
cmp
dec
out
mov
ret
or
sbbb
lock
push
stos
lret
mov
xor
and
mov
aas
popf
sbb
lods
scas
sbb
test
add
inc
aaa
adc
aas
fldt
xchg
pop
lods
fwait
and
push
ss
push
in
ret
sbb
mov
lcall
hlt
fstpt
pop
xchg
in
fwait
clc
cmovp
imul
adc
repnz
sbb
iret
xchg
cmpsb
andl
jbe
xlat
cmp
cltd
lods
adc
roll
fwait
bound
jae
or
loope
fdivs
xor
imul
mov
shl
and
xchg
xchg
lea
and
out
out
icebp
push
add
inc
rcll
shll
pop
jno
stos
je
idivb
push
sti
push
add
mov
ret
sar
mov
sub
xchg
inc
or
scas
mov
mov
fwait
cs
cmc
adc
negb
cmpsb
sti
in
call
mov
pop
repnz
xor
adcb
fisttps
push
and
dec
popf
mov
dec
iret
sub
dec
pop
roll
mov
sub
mov
mov
ja
gs
mov
push
leave
rcrl
in
xchg
adc
inc
adc
fwait
fs
int
and
movl
cmpsb
xlat
les
popa
mov
loope
jno
inc
xchg
push
stos
stos
or
push
push
push
pop
test
add
cltd
dec
addl
pop
and
dec
in
sub
fnstenv
sub
xor
push
jmp
xchg
shl
pop
jnp
cmp
mov
fwait
inc
push
mov
inc
in
fsubl
in
lods
inc
cmp
fcoml
and
sarl
xor
das
mov
sbb
loope
add
inc
cmc
test
xchg
inc
nop
and
outsl
and
pop
and
xor
jp
push
std
int
sti
hlt
aam
jl
jbe
xchg
sub
sbb
xor
nop
pop
or
xor
mov
leave
inc
inc
jno
or
cmp
mov
clc
jl
and
ret
xchg
xor
jge
movsl
mov
mov
sbb
ss
imul
xor
cmp
pushf
inc
pushf
jbe
iret
cs
sub
sub
mov
cmc
mov
push
xchg
insl
cld
ss
filds
and
mov
and
aad
sub
loopne
sti
leave
hlt
xor
mov
cmc
fwait
test
jns
xlat
mov
jbe
dec
movsb
cmp
and
nop
inc
mov
jns
jae
outsl
inc
fwait
adc
sub
aam
out
mov
out
cmp
adc
shrb
test
or
adc
loopne
cmova
mov
ss
icebp
mov
icebp
out
lahf
outsl
jne
mov
stos
push
inc
pop
movl
fimuls
sub
sahf
rcrl
xchg
lret
and
repz
out
fildl
lds
loopne
hlt
lock
in
sbb
push
push
adc
fcomps
xor
dec
jle
push
dec
jns
mov
push
mov
scas
and
inc
fsubrp
jae
sbb
jnp
outsb
pop
orb
inc
test
add
insl
cmp
sub
cmp
or
add
push
iret
stos
dec
dec
cmpb
repz
fwait
dec
xor
fwait
dec
mov
ficoms
pop
lret
xchg
cmp
mov
push
or
aaa
movsl
dec
adc
out
nop
popf
pusha
ror
fbstp
repz
xchg
test
mov
idivb
fwait
movsb
roll
scas
mov
jmp
call
ja
xchg
or
jno
push
inc
pop
daa
dec
rcr
push
sti
cmp
bound
in
dec
cmp
movsl
testb
orl
xlat
cwtl
nop
mov
add
jp
test
dec
xchg
sti
test
rol
or
jecxz
xor
sbb
mov
lea
inc
stos
clc
rclb
gs
repz
mov
lahf
mov
dec
push
das
xlat
stos
and
add
xchg
mov
ret
inc
jne
adc
ss
sub
and
fnstcw
in
loope
mov
icebp
inc
and
or
aas
sbb
das
inc
loope
mov
leave
rclb
jne
aas
int3
clc
jnp
rcl
rorl
pop
push
push
inc
nop
sarl
adc
jb
push
inc
or
negl
test
fstpt
shlb
push
sub
cmp
jb
inc
fisubs
repnz
lods
cld
dec
in
sbb
iret
sub
testl
push
adcl
fldt
or
push
call
mov
add
cld
jecxz
xor
outsl
in
cmp
mov
fwait
shrb
cmc
jnp
sub
xor
icebp
scas
divl
stos
push
jge
jecxz
lods
cmp
add
mov
dec
je
xor
stc
in
dec
test
push
cmpl
inc
mov
pop
test
adc
xor
lock
roll
inc
movsb
test
ja
cmp
fwait
testb
jbe
ror
loop
jge
ret
dec
pop
ds
xchg
nop
fcomps
mov
test
add
sub
fwait
mov
pop
sub
pop
cmc
in
loope
insb
jbe
fs
xchg
stos
lods
pop
xchg
shrb
xor
sbb
in
cli
jno
push
pop
mov
movsl
and
sub
or
mov
pop
fwait
fstpt
sbb
pop
dec
mov
inc
or
xchg
lea
aad
and
xchg
push
mov
jne
push
mov
fs
and
jmp
cmc
loope
mov
jne
push
xor
clc
inc
sub
fdivrp
xchg
add
adc
jl
jmp
lods
addr16
clc
pop
in
sti
lahf
xchg
in
push
scas
aam
sub
mov
inc
cmp
mov
push
leave
cmp
into
insl
or
mov
andb
dec
and
stos
lods
dec
add
in
sbb
mov
jb
cmp
sti
push
push
jge
test
outsb
in
mov
pop
pop
push
jl
add
shl
stc
jecxz
popa
mov
shll
cmpsl
push
pushf
jns
lock
movsb
mov
jmp
sub
xor
rorl
sarb
jle
pushf
fcoml
lods
iret
loopnew
ret
enter
sbb
sti
and
cmp
fldt
sbb
dec
dec
stc
dec
dec
mov
ss
xor
inc
loop
aad
jl
add
repnz
push
xor
mov
and
fdivrs
es
mov
addb
les
push
outsb
in
ffreep
inc
loope
pop
movsb
xchg
cmp
jnp
mov
push
out
cmp
pop
xchg
pop
or
mov
lret
or
push
lahf
ds
sbb
dec
outsl
dec
jo
loopne
mov
out
and
cwtl
add
dec
push
test
std
pushf
inc
pop
sub
sbb
repz
inc
cmp
call
inc
nop
popa
and
fwait
sub
cltd
jbe
dec
js
je
ja
mov
cmp
hlt
dec
dec
pop
mov
add
push
xchg
pop
in
call
scas
ja
adc
jg
and
inc
hlt
iret
lea
cmp
push
or
scas
add
roll
hlt
stc
call
sti
adcb
dec
inc
js
movsb
fwait
mov
sbb
jle
mov
sbb
dec
in
xorb
in
out
or
stc
jp
sti
stc
insl
add
adc
fistpl
xor
xor
out
sbb
push
in
das
js
ret
scas
and
pop
xchg
sub
fdivr
int
sti
out
inc
mov
pop
leave
aas
fwait
sub
mov
ja
or
pusha
aaa
in
push
sti
sub
out
mov
sbbb
mov
xchg
je
addr16
mov
mov
push
and
popa
dec
cmp
dec
mov
imul
in
mov
mov
mov
packuswb
jg
add
or
push
shr
out
int
sub
test
fbstp
jbe
cmp
clc
fstps
push
mov
sbb
cmp
mov
rorl
mov
xor
cwtl
jae
pusha
ftst
or
adc
fildl
or
std
ljmp
sarl
stos
xchg
cmp
in
xlat
hlt
repz
fildl
lock
add
sti
rcrl
add
popa
outsb
mov
push
adc
sarl
adc
mov
fdiv
sub
pop
loop
adc
test
mov
mov
jns
lret
int3
sbb
cmpsl
fimull
and
jle
fldt
sbb
popf
out
aad
push
fcmovbe
gs
movsb
inc
cwtl
repnz
cmpsb
pop
jb
cmp
es
rcrl
dec
cmp
cmc
pop
lcall
xchg
clc
stos
dec
out
adc
fistps
dec
mov
aaa
in
pop
loop
jmp
push
lock
outsl
mov
jno
adc
inc
mov
jne
cmpsl
adc
add
daa
lock
xchg
data16
sbb
stos
mov
add
mov
xchg
lahf
or
test
ds
cmp
in
xchg
mov
pcmpgtb
and
stc
shrb
jb
and
jae
push
je
jbe
push
es
ret
aas
mov
lods
in
orb
movsb
xchg
sub
cmp
ret
add
popa
fsubl
sbb
fstl
mov
and
scas
icebp
and
xchg
pop
and
mul
in
xchg
xorb
jle
push
dec
in
sub
fwait
stos
inc
inc
fwait
pop
or
sbb
fs
lods
fwait
adc
ffree
incb
in
mov
inc
leave
jmp
xorb
jmp
andl
movsb
mov
inc
xor
sbb
mov
add
mov
add
add
js
mov
in
lds
sub
mov
mov
ret
sub
pop
test
rol
lods
add
sti
mov
cltd
or
mov
shl
in
mov
push
std
lret
stos
scas
in
adc
in
ret
xor
mov
mov
pop
mov
xor
push
inc
aam
mov
popf
add
fwait
add
add
and
mov
aaa
push
jno
xchg
xor
push
cmpsl
aaa
mov
stos
lock
iret
out
pop
xchg
mov
aaa
loope
out
test
dec
ret
mov
shr
fwait
stos
dec
stos
jae
xor
bnd
add
movsl
sbb
into
push
ret
mov
hlt
out
ds
sub
filds
shlb
adc
mov
and
cmp
adc
ss
add
les
or
or
aam
icebp
sti
cltd
scas
inc
fdivrs
punpckldq
loope
call
test
push
pop
cmp
mov
fwait
lret
sbb
xchg
adc
enter
xor
xchg
inc
or
mov
imulb
jns
push
pop
repnz
orl
jae
and
popf
dec
ret
loop
test
ljmp
sbb
mov
je
outsb
outsl
imul
cli
xchg
aam
mov
rolb
in
push
pop
sub
negb
repnz
push
add
jecxz
test
pushf
or
les
mov
xor
ror
les
fsub
push
jge
add
sub
push
shll
lock
cmp
enter
fiadds
jge
push
ja
test
push
lods
adc
shll
into
cltd
push
cmp
popa
push
jnp
insb
sub
loop
cmp
out
fisttpl
shrl
fmull
movsl
dec
js
fdivs
loope
dec
jne
aad
outsb
mov
movsb
jb
mov
pop
jge
cmp
mov
cmpsl
sbb
push
and
mov
mov
pop
pop
outsb
cltd
ja
clc
mov
xor
repnz
jp
mov
mov
dec
cmpb
mov
jmp
shrl
sbb
popa
fst
xchg
cli
pushf
fstps
jp
cmc
sbb
pop
std
pusha
fcom
dec
popa
sbb
dec
ljmp
xchg
psubq
push
pop
pavgw
mov
pop
xlat
mov
or
daa
xor
popa
mov
and
aam
pop
cmp
inc
ret
push
push
lods
add
push
test
scas
out
dec
aam
mov
sub
or
mov
mov
int3
jb
lret
in
call
not
paddsw
pop
xor
and
dec
cmp
imul
inc
lock
sub
jg
fwait
sub
adc
aam
in
cwtl
ljmp
stos
push
loope
into
data16
in
movsl
sbb
popf
loop
jge
add
in
pop
fbstp
inc
cwtl
lcall
mov
imul
cmp
dec
iret
imul
push
addr16
xchg
sbb
loopne
mov
pop
mov
mov
xchg
stos
js
mov
lret
jmp
cmc
push
add
addr16
aad
fcmovnbe
pop
fsubs
testb
adcl
sti
pop
addr16
mov
aam
jle
dec
mov
xchg
add
push
shr
inc
int
out
mov
xchg
fisttpl
xor
dec
fwait
lock
mov
add
mov
movsb
cltd
aas
push
xlat
gs
adc
aad
in
xchg
mov
nop
and
sbb
inc
or
test
pusha
push
in
add
add
adc
popa
push
dec
call
rorl
aam
out
lods
cmp
sbb
push
push
addr16
ds
movsb
js
adc
psrld
in
and
xor
xchg
dec
or
fwait
out
pop
pop
sub
mov
xor
nop
cmpsl
int3
jmp
sub
hlt
rorl
push
dec
leave
sub
and
dec
aas
lcall
shl
adc
aaa
out
or
push
cmp
mov
jne
dec
pusha
adc
pop
lret
mov
pop
sahf
cli
mov
inc
mov
rolb
mov
mov
push
cld
push
sbb
sahf
popa
sbbb
push
ret
jns
dec
jae
lret
dec
iret
in
mov
or
adc
mov
dec
sbb
pop
outsl
xor
or
scas
arpl
loop
jno
and
cmp
out
negb
in
mov
adc
xchg
andl
pop
sub
fwait
int
lods
test
mov
sub
jbe
repnz
add
add
loope
mov
aam
pop
pop
mov
mov
inc
cmp
add
pop
shll
fbld
fisttpl
adcb
subl
in
push
mov
xor
pop
arpl
ljmp
pop
loope
stc
aas
repz
pushf
jl
lods
mov
push
cld
call
out
cmp
jmp
enter
cmp
inc
and
mov
ret
std
dec
dec
ljmp
loop
cli
int3
mov
pop
adc
mov
aam
sbb
mov
xchg
mov
or
cmc
cmp
fcomip
dec
lret
push
shl
pop
rolb
int
rcrb
mov
iret
push
cmp
adc
fldl
cmp
lea
inc
dec
sbb
outsl
jmp
and
ljmp
add
mov
lds
ja
push
fisttpl
js
lods
loopne
dec
and
pop
dec
lds
inc
add
sti
cmp
jle
icebp
cmpsl
inc
adc
add
andl
in
jnp
outsl
inc
leave
mov
mov
and
jnp
and
shll
shlb
mov
pop
pusha
sbb
vmread
push
jmp
in
test
cmpsb
and
ds
push
or
loop
pop
orl
cs
imul
pop
out
xlat
das
shll
shr
loop
cmove
in
call
sarb
or
popl
dec
subl
mov
jbe
les
sub
xlat
mov
push
mov
dec
jle
cwtl
push
out
fistl
int3
fmulp
sub
mov
aam
mov
iret
lcall
sahf
nop
xchg
sarb
fsts
les
addr16
loop
push
shll
dec
in
roll
loope
std
repnz
mov
xchg
mov
aam
fwait
jmp
cmpsl
add
dec
sbbb
add
pop
and
dec
xor
popf
xchg
leave
loope
mov
loop
int
insl
js
xor
pop
dec
popf
pop
xor
loop
ret
loope
push
rclb
sbb
or
xchg
rorl
stc
js
sbb
ret
cmc
fwait
call
mov
push
mov
jmp
mov
or
orl
enter
ret
mov
jecxz
mov
pop
int3
es
add
divb
pop
add
push
in
xor
xor
loope
mov
fcomi
or
imul
fwait
mov
cltd
adc
sub
popa
sbb
xchg
bound
mov
mov
xor
mov
in
fwait
jmp
push
xor
inc
pop
jle
sti
cli
jmp
pop
bound
mov
mov
xlat
stc
std
sbb
mov
cmpsl
pusha
xchg
in
mov
js
iret
int3
mov
sub
cmp
dec
lock
push
fdivl
xchg
jecxz
fnstenv
dec
enter
ret
push
dec
sub
cltd
les
fwait
sub
mov
ds
mov
sub
shll
xor
pop
das
jp
mov
push
lahf
loopne
stos
addl
adc
icebp
jae
xor
sbb
xchg
add
fisubs
xchg
inc
push
lahf
xchg
or
test
add
outsl
hlt
clc
pop
push
mov
xchg
xchg
imul
arpl
jg
ds
loop
sti
out
inc
jg
pop
cmp
jae
jnp
mov
nop
outsb
fucomi
out
inc
xor
cmp
mov
shll
imul
inc
and
or
add
int
std
jmp
lret
lods
mov
clc
in
mov
imulb
mov
mov
mov
mov
loope
and
sbb
mov
and
xchg
dec
int
shll
or
mov
sar
or
rcrl
lea
subb
hlt
dec
pop
nop
mov
push
lds
ja
rclb
lahf
loopne
sahf
or
cmp
sahf
pop
jmp
in
mov
sub
dec
call
push
add
sub
inc
por
fucomi
sbb
stos
push
mov
stos
out
add
ret
or
sti
insb
jecxz
xchg
mov
fs
fdiv
movsl
gs
cmp
push
mov
aad
dec
mov
cmp
ljmp
ja
into
inc
insb
mov
call
mov
stc
scas
test
xchg
stos
sub
stos
mov
in
imul
sub
in
stos
inc
out
jge
test
lods
test
into
dec
jne
clc
pop
dec
scas
aam
popa
cmp
in
call
rolb
test
pop
xchg
push
sahf
outsl
iret
stos
pushf
test
testl
cmp
add
ss
cwtl
cmpsl
ljmp
xor
jg
fprem
nop
enter
or
xchg
popa
inc
shll
ja
sub
mov
sub
test
lds
inc
mov
icebp
jnp
sbb
ds
stos
icebp
sbb
ja
fistpll
push
mov
or
loopne
fwait
cmp
clc
and
daa
jecxz
cli
sub
inc
lcall
add
cmp
and
jg
loope
mov
outsl
xor
add
insl
pop
and
into
ja
pop
in
bndstx
jne
dec
into
mov
in
jae
cwtl
aaa
pusha
xchg
push
ss
add
dec
iret
cmp
pop
into
mov
stc
orb
rcll
cmpsl
mov
lods
push
sub
sub
jno
fldt
mov
push
push
jge
dec
push
mov
jae
stos
fisttpl
jmp
std
daa
mov
cmpsl
fwait
in
fs
dec
jmp
jae
jae
pop
in
mov
movsl
cmpsb
loop
jnp
jecxz
add
dec
or
adc
dec
fdivrl
fst
pop
or
sbb
in
popa
insb
loop
ret
int3
repz
mov
sub
int
test
xor
dec
fmul
cld
or
rolb
fidivs
sbb
cmp
sbbl
xchg
pop
clc
sub
and
movsb
pop
dec
pop
test
fldt
sbb
out
dec
xchg
mov
pop
dec
pop
pop
mov
jae
cmpsb
dec
mov
leave
or
ja
xchg
test
mov
ret
popf
fiaddl
fwait
nop
fbstp
jg
fimull
adc
add
loope
xchg
test
movsb
test
fcomi
dec
loope
dec
cs
orb
pusha
inc
in
add
fwait
push
fildl
in
mov
cmc
dec
mov
xchg
call
or
cld
out
dec
lock
mov
jne
ret
mov
std
imul
inc
sti
addr16
ret
mov
mov
inc
mov
rcrb
and
fildl
inc
test
mov
int
sub
push
sti
std
adcb
addl
test
cs
jb
sti
nop
test
bound
dec
xchg
test
js
jge
lods
push
in
and
mov
xchg
add
sahf
lahf
jecxz
ja
sti
and
pop
adc
lock
cmpsl
jns
mov
mov
das
push
jbe
mov
cmp
dec
and
pop
lret
aam
negb
pop
push
sub
fwait
xchg
mov
adc
sub
or
sub
push
das
xor
push
xor
lods
xor
cli
fistl
lea
les
and
ret
inc
xor
sbb
inc
sti
mov
loope
mov
mov
mov
sbb
das
mov
xchg
xchg
mov
fsts
jae
push
mov
jp
sub
test
adc
mov
adcb
les
pushf
mov
or
repz
or
ljmp
dec
cmp
pop
fs
mov
lret
jg
push
sub
adc
add
adc
iret
movsb
adc
lock
dec
sub
lds
jl
push
roll
mov
inc
push
lock
dec
mov
in
jbe
jecxz
mov
pop
push
shll
cld
repz
addl
mov
jb
or
data16
mov
mov
cld
insl
fcmovnbe
sahf
add
leave
sub
sbb
addr16
xchg
fcoms
ret
mov
fildll
push
or
loopne
push
mov
fwait
repz
sub
jle,pt
aam
and
push
jmp
xchg
scas
sub
stc
add
add
xor
mov
pusha
xchg
std
xor
and
call
fmul
mov
aam
aad
mov
xchg
mov
mov
js
imul
xchg
lock
loopne
sub
int3
gs
mov
mov
enter
inc
popa
jmp
xor
inc
jle
std
inc
stos
scas
pusha
mov
fcmovbe
int3
pop
sub
cltd
cltd
mov
repz
pop
sbb
sbb
or
xor
or
outsl
jbe
pop
pushf
in
andl
arpl
pop
in
jnp
pop
cmc
push
push
xor
iret
mov
mov
pop
in
or
mov
iret
leave
rcll
push
addl
push
mov
sbb
idivw
and
jl
mov
popa
sub
cld
decl
sbbl
pop
push
pushl
sbb
jmp
inc
cmp
sub
adc
push
xchg
mov
lea
lahf
xchg
mov
mov
jge
out
das
sbb
les
ds
mov
inc
movb
inc
mov
jae
sub
sti
bt
pop
in
or
test
lods
out
ljmp
jecxz
jmp
cmp
mov
movsb
nop
sbb
xchg
xor
xor
lods
and
inc
or
cmpsb
mov
leave
ret
ja
push
inc
pop
cmp
push
int3
inc
out
pop
push
sbb
sarl
icebp
jle
dec
cmp
imul
adc
ss
sti
jno
lods
sub
test
push
repnz
sti
mov
add
ret
daa
test
stc
into
out
cmpb
and
aas
xchg
and
cld
das
jno
or
mov
fs
mov
sub
sub
fistpll
push
lods
mov
jnp
push
sub
clc
lea
movsb
sbb
rcll
inc
push
stos
mov
jno
movsb
mov
fistl
std
aam
jmp
mov
sub
enter
sub
dec
dec
mov
ljmp
and
out
pop
ja
push
out
or
jb
sub
xchg
out
inc
mov
cmpb
cmp
sub
mov
pop
es
mov
sbb
repnz
subl
push
mov
ret
repnz
jp
mov
jno
cli
jge
fsubs
ljmp
hlt
dec
push
add
cmp
dec
or
xchg
lods
jns
leave
mov
adc
loop
iret
cmpb
sar
inc
add
jecxz
sbb
and
adc
inc
cmpsl
mov
lods
in
rcr
pop
nop
mov
jle
clc
cld
scas
loopne
pusha
mov
enter
loop
xchg
loope
insb
out
fsubs
aas
js
pop
add
test
sahf
sub
add
xchg
push
daa
imul
or
jmp
mov
mov
and
dec
ss
fisubrl
push
cmp
sbb
inc
pop
inc
jle
fwait
xchg
inc
inc
add
fisttpl
repz
xor
pop
push
mov
sub
cmp
jo
lcall
test
ss
dec
mov
sarb
dec
rcll
or
nop
out
sub
xchg
fsub
xchg
loope
pop
lahf
popl
out
add
mov
fcoml
push
ljmp
fwait
jns
or
ljmp
fucom
inc
sbb
popf
sub
out
loopne
inc
out
jnp,pt
xor
pop
mov
or
movsl
jle
ja
pop
adc
repz
and
imul
pop
and
sbb
out
or
in
add
das
iret
loop
sbb
cwtl
sub
movsl
dec
subl
lahf
cmp
out
xchg
push
sub
xchg
in
inc
aam
dec
das
stos
popf
fstp
jg
cmp
and
aas
adc
xlat
xchg
arpl
jns
rcrl
in
scas
sbb
mov
sti
cmp
mov
add
fsubrs
popa
fstpt
cmp
daa
movsb
pop
cld
loope
dec
dec
jno
repz
cli
lret
mov
out
aam
int
addb
fcmovnu
xchg
ret
ds
mov
cmp
popf
repz
sbb
out
sbb
and
inc
dec
jp
mov
jbe
in
xor
ret
sub
mov
test
push
or
sub
inc
popl
mov
pop
jb
fdivrl
loop
dec
mov
loope
pop
stc
jae
ficomps
cld
ret
scas
faddl
sbb
cs
in
into
lock
add
push
jnp
push
mov
ss
inc
out
loope
xchg
int3
and
pop
stos
clc
fldt
enter
ret
ds
dec
rclb
fyl2xp1
je
addr16
push
data16
mov
cwtl
mov
xchg
out
or
mov
hlt
add
fldenv
repnz
insl
inc
addb
ljmp
cmp
std
out
inc
pop
call
xorl
mov
je
mov
nop
cli
out
cmc
roll
xchg
movsb
jecxz
dec
mov
xchg
jg
cmp
mov
cmp
push
sti
cmp
cmc
pop
mov
jp
inc
xchg
push
xorb
or
jmp
and
jne
orb
ljmp
sarl
push
adc
xchg
dec
sub
xor
xor
repz
sti
pop
ss
rclb
pop
lret
jecxz
and
sub
test
or
mov
dec
jno
jnp
mov
addl
lods
mov
test
push
xlat
insl
jecxz
push
std
mov
pop
jnp
dec
xorl
shll
repz
dec
lret
sti
dec
movsl
jbe,pt
outsb
lock
cmpsl
xlat
jno
mov
sbb
mov
rclb
icebp
popa
fwait
and
dec
xor
pop
adc
js
dec
out
mov
and
fstp
lods
xlat
les
mov
cmpsb
je
inc
dec
cmc
jns
data16
sub
shl
mov
repz
dec
jle
pop
sub
and
jle
rorl
and
movsb
fistpl
test
mov
into
incb
adc
jp
lods
mov
loop
enter
mov
movsb
sbbb
pusha
popf
mov
fucomp
sti
mov
and
cmpl
jge
adc
inc
fdivl
cmp
into
cltd
push
movsb
subl
add
gs
pmulhw
cmpl
ret
movsl
stos
dec
std
jnp
cli
out
aas
out
sbbb
mov
cwtl
adc
cmp
sub
add
std
jecxz
xchg
and
pop
iret
xor
cmc
jp
inc
and
jbe
repnz
sti
and
lret
repnz
popa
fwait
rol
lret
xor
pop
bound
mov
ss
xor
ds
js
add
mov
imul
loope
in
jbe
xor
jb
rcrl
xor
bound
mov
add
sub
cmp
add
dec
cmp
out
or
pop
or
dec
mov
fistl
add
repnz
jl
ret
nop
dec
aas
clc
scas
in
jl
sub
sti
lahf
mov
test
clc
cmp
jl
iret
mov
movsb
fldt
loop
cli
ljmp
lret
xchg
popa
add
sbb
push
loope
notl
push
addl
data16
mov
sub
movsb
mov
pop
sbb
adc
mov
rcrb
sub
out
xlat
test
aam
jb
and
cld
orl
outsb
insb
inc
sar
call
addb
bound
cltd
popf
xor
rorl
sbb
adc
mov
xor
dec
insb
daa
mov
lods
pop
jl
lcall
or
loope
fisttps
cmc
sti
dec
dec
out
push
in
fistl
mull
lods
mov
pop
int3
pop
jb,pn
inc
adc
add
in
add
hlt
les
dec
cld
xor
and
xchg
rep
outsb
mov
je
mov
out
sub
clc
mov
bound
mov
leave
fildl
cwtl
pusha
les
pavgb
aam
lds
mov
sub
iret
jo
or
icebp
insl
dec
lock
out
mov
je
fistpl
loop
and
cmc
xchg
jecxz
jns
jmp
test
mov
mov
inc
hlt
ret
insb
adc
adc
mov
xor
out
push
out
int
test
xor
push
inc
stos
fstps
and
mov
pop
loope
and
sbb
mov
add
inc
jge
pop
push
xchg
cmpb
fimull
data16
add
inc
adc
push
and
jno
jecxz
pop
cmpsb
jmp
dec
lea
xor
push
xchg
stos
hlt
inc
ss
into
rclb
sbb
sub
jno
orb
enter
dec
pop
inc
dec
sbb
and
sbb
xchg
add
sarl
addr16
jb
xchg
fcomps
mov
mov
cmp
cwtl
mov
sbb
sbb
les
mov
push
add
movsb
dec
push
cmp
mov
xchg
shrl
xor
jmp
xchg
mov
mov
xlat
les
xchg
push
mov
jne
repz
jne
mov
lock
cmp
out
ja
xlat
mov
in
cwtl
sub
test
pusha
xlat
ja
ljmp
in
xor
loope
xor
pop
cli
idivl
xor
nop
dec
mov
cmp
aaa
and
or
andl
aaa
or
repz
subb
pop
fldt
jmp
fisttpl
pop
pop
sti
sub
dec
hlt
mov
fwait
out
dec
mov
int
scas
out
ds
fists
popa
fistl
mov
sub
lahf
daa
lcall
fdivs
clc
mov
das
xchg
pop
ret
push
pop
mov
pop
push
jae
mov
fisttpl
mov
push
push
popa
pop
sub
and
movsb
nop
rcll
xlat
fwait
mov
mov
lods
pop
test
mov
lret
icebp
shlb
push
jae
jns
pop
sub
lds
fldt
mov
mov
dec
dec
pusha
pop
mov
test
ja
cli
jg
fisttps
jo
enter
fildl
ss
adc
pusha
fbld
ret
js
aaa
push
lock
push
and
mov
fwait
imul
sbb
or
mov
pop
sti
adc
sahf
shlb
mov
or
aam
inc
push
jae
mov
xchg
out
inc
xchg
inc
mov
repz
inc
sbb
lods
lock
jp
jbe
sub
sar
gs
mov
adc
out
loope
rol
jecxz
mov
daa
ret
stos
xchg
ja
in
das
dec
and
mov
jl
movsb
lds
inc
mov
cmp
jge
int
mov
push
inc
enter
cltd
mov
sbb
js
ja
test
out
or
loope
add
sbb
mov
or
lret
or
fwait
mov
adc
jl
xchg
mov
inc
dec
pop
loope
aad
mov
rol
sub
jae
and
fistl
mov
and
fwait
jb
pop
mov
xlat
test
push
inc
insb
nop
sbb
mov
mov
inc
rcr
out
repz
shrl
ljmp
push
lock
test
inc
push
push
cmp
adc
xor
or
lea
mov
scas
inc
ret
xchg
orb
cmpsl
arpl
adc
push
pop
cmp
aaa
jbe
in
push
cltd
pop
movsb
sti
cmpsl
lock
xor
filds
and
test
cld
ljmp
sbb
jno
and
xchg
aad
adc
test
movsl
leave
jecxz
sub
icebp
clc
call
popa
xchg
pop
sub
lods
es
lods
ret
mov
ljmp
dec
mov
in
sbb
loopne
sti
mov
iret
pop
lretw
icebp
xor
add
loop
cmp
cmp
fs
popf
insl
imul
inc
subl
pop
ret
push
sbb
or
sbb
cmp
sbbb
push
jb
lcall
cwtl
sub
popf
jbe
sbb
and
pushf
sbb
jbe
in
fildl
mov
pop
adc
mov
and
add
lea
out
shlb
nop
mov
sbb
sub
movsl
cltd
lret
mov
mov
pop
hlt
sub
pushf
mov
mov
mov
jecxz
xchg
and
inc
lods
mov
and
push
lods
xor
and
cltd
jmp
scas
cld
xchg
cmp
fstpt
outsl
lods
push
loopne
ljmp
mov
rcll
xchg
cltd
adc
xor
dec
mov
jge
xor
clc
cmpsb
lds
fmulp
fwait
adcb
lahf
jnp
loop
dec
inc
popf
ja
cmp
inc
cmp
lods
loop
js
out
ficoms
pop
jmp
in
mov
jg
sti
mov
mov
jl
ljmp
lret
adc
test
mov
scas
aam
dec
mov
jp
jo
aaa
dec
popf
jecxz
repz
inc
sarb
test
inc
sub
test
push
xor
arpl
xor
aam
xlat
faddl
pop
cmp
jae
test
imul
dec
addl
jp
adc
jnp
je
push
ret
sbb
out
mov
stos
cmpsb
add
leave
out
mov
mov
stos
fistpll
rclb
mov
cmp
push
jno
inc
jl
jb
dec
popf
imul
stos
push
out
imul
jns
jecxz
push
andl
test
jl
push
ss
rorl
jne
test
and
pop
aam
in
mov
loope
aas
test
aas
jnp
push
dec
inc
and
jno
in
cmp
imul
dec
push
test
add
mov
mov
xchg
enter
xor
pop
mov
jmp
sar
add
cwtl
inc
adc
xchg
scas
es
or
dec
stos
insl
or
mov
popf
subl
mov
sub
sbb
adc
mov
sub
fadd
sub
aaa
push
sub
mov
mov
scas
loop
popf
sub
ljmp
nop
adc
mov
push
sarb
adc
fcomi
cmc
std
mov
in
pop
xor
sbb
icebp
pop
shl
pop
xor
sbb
clc
sti
shrl
cmp
fistl
dec
mov
movsb
xchg
add
add
negb
in
outsl
mov
fisubl
loopne
fwait
xor
and
stos
imul
jnp
and
dec
cmp
jp
clc
sub
stos
jbe
push
addl
sti
inc
xor
push
pop
xchg
add
rcr
cmp
or
fwait
push
aam
iret
adc
cmc
xchg
loopne
pop
roll
stos
fwait
out
push
popa
jns
scas
sbb
xchg
fldl
mov
lods
inc
repz
inc
lods
jne
dec
ja
mov
mov
bound
jge
dec
jge
lods
mov
or
adc
out
and
fwait
push
ja
lret
mov
lods
shr
sub
cmp
xchg
clc
pop
inc
in
inc
js
psadbw
pushaw
stc
in
and
pop
enter
jl
mov
jg
mov
push
xor
or
push
and
fildl
fs
or
js
out
sti
push
inc
in
out
fistpl
popa
mov
mov
cmp
mov
mov
int
or
jl
lods
mov
dec
in
je
in
and
and
push
xchg
jge
cld
jg
imul
xchg
mov
mov
lods
pshufw
arpl
fwait
sub
ret
lahf
adc
lock
lcall
mov
mov
xchg
bnd
enter
in
mov
push
xchg
push
dec
lock
adc
cs
mov
xorb
push
mov
and
adc
dec
movl
popa
fildl
mov
jmp
fldl
lock
insl
push
iret
dec
cmp
lahf
aas
test
aam
sarb
adc
lcall
push
sbb
inc
sarb
xchg
inc
mov
ret
xor
in
ja
arpl
fistpl
pop
mov
mov
mov
subl
xchg
aam
sbb
mov
lods
aad
pop
fwait
jle
ja
into
jbe
xchg
mov
jl
arpl
sarl
cmp
jecxz
cltd
and
pop
add
mov
mov
add
cmc
push
movsl
in
popf
fldl
cmpsb
pop
outsl
rol
icebp
lds
mov
sub
push
cwtl
jb
ja
fwait
jmp
xchg
sbb
push
and
pop
jge
fwait
jbe
loop
call
out
sahf
lods
push
insb
bound
mov
lods
ret
xchg
pusha
sub
in
les
jns
jmp
or
in
repnz
and
stos
insl
hlt
sub
mov
inc
in
cmp
addr16
ljmp
mov
pop
mov
push
dec
lret
adc
lods
add
inc
dec
xchg
xchg
jge
icebp
ficomps
ljmp
jno
lods
shrb
adc
lcall
cld
int
data16
mov
stos
xor
divl
icebp
push
stos
cmpsl
data16
dec
ret
jmp
loop
imul
push
leave
mov
mov
cwtl
push
popf
xchg
and
fiadds
outsl
loope
les
popf
cwtl
inc
mov
jg
int3
popf
mov
lods
jne
sarb
test
add
enter
leave
jmp
mov
stc
and
push
lcall
jecxz
call
fstp
je
pop
fldl
loope
popf
and
in
std
hlt
lret
outsb
lock
clc
shll
int3
inc
cmp
sbb
jl
out
mov
cld
nop
lds
fisttpll
push
daa
enter
out
push
test
in
adc
jp
in
fwait
int
mov
lret
mov
call
stos
sbb
add
lock
and
mov
mov
roll
jmp
call
fsubrp
push
or
pop
incl
loope
in
hlt
out
xor
dec
test
repz
std
movsb
aam
scas
inc
cltd
push
sbbl
test
mov
sbb
jl
dec
test
lret
sbb
or
cli
fs
in
inc
jnp
cmpsl
push
xor
popf
jecxz
adc
mov
loope
cmp
gs
and
mov
call
jmp
popf
loope
inc
roll
in
and
fwait
lds
out
pop
fs
mov
mov
push
imul
inc
sbb
mov
cli
sahf
stos
jle
pusha
mov
pop
in
shll
xor
fstp
popf
xchg
frstor
sbb
push
add
sub
jno
fidivrs
mov
into
cmp
inc
or
cmp
in
or
aam
in
xor
mov
pop
loope
andb
ss
mov
ror
ret
vlddqu
andl
addr16
cmp
test
cld
js
jle
or
in
fxch
aaa
insb
mov
dec
push
xchg
imul
pop
adc
and
add
loope
in
loope
les
insb
out
jecxz
mov
mov
fldl
jle
ficoms
lods
xchg
popf
iret
fucomp
dec
xchg
mov
movsl
xchg
fwait
inc
outsl
hlt
int3
in
adc
in
pop
push
jae
jecxz
std
xchg
les
loope
xor
or
das
ret
push
dec
call
push
mov
inc
ds
out
mov
int
mov
insb
xor
test
in
mov
and
mov
pop
icebp
cmp
int3
mov
mov
les
rcll
mov
adc
jecxz
and
dec
cmpsl
and
push
mov
or
cltd
and
rorl
xor
mov
xchg
prefetchw
pushf
loope
mov
jecxz
push
sbb
mov
pushl
popf
arpl
and
or
jbe
popf
aam
and
dec
in
xor
add
cld
push
int
in
or
cmc
or
mov
pop
adc
mov
repz
inc
push
push
and
lret
lds
or
in
sti
sub
in
shl
sub
in
hlt
lret
loop
mov
jecxz
lea
fisttps
into
int
ja
in
add
iret
int
fstps
in
pop
hlt
mov
and
mov
lcall
jecxz
pop
mov
mov
fiadds
or
push
or
insb
lcall
arpl
cs
rcll
or
xlat
loopne
call
in
leave
mov
xchg
repnz
sti
inc
jecxz
add
das
push
xchg
mov
cmp
mov
or
out
pop
cmpsl
push
loope
movsl
loope
dec
dec
outsb
popf
adc
out
mov
repnz
mov
jge
out
in
lret
shrl
xchg
aam
push
pop
fmulp
loope
mov
loopne
rcll
popf
test
inc
mov
jmp
data16
pop
mov
repnz
call
mov
into
std
mov
roll
and
dec
sub
cmp
push
iret
in
in
xchg
mov
xchg
inc
out
in
in
popf
mov
mov
out
std
outsb
and
dec
inc
xlat
jl
popf
addr16
jge
mov
test
push
push
fnsave
jmp
push
lret
sub
fisttpll
imul
inc
cli
aam
or
pop
cmp
leave
fsubl
pop
data16
shl
add
mov
jecxz
mov
mov
stc
or
xchg
jo
popf
xor
cs
je
xor
iret
popf
das
push
and
fistpll
in
in
pop
xor
xor
int
cmp
stc
push
inc
jmp
and
inc
lea
les
xchg
les
push
fimuls
in
gs
std
sub
into
cli
loope
jnp
jns
jge
ljmp
test
gs
adc
loopne
hlt
dec
xor
shrl
mov
or
insb
cmpsl
lock
leave
cld
jbe
mov
mov
and
sub
out
scas
pusha
cmpsl
xchg
ret
or
and
fmull
jecxz
xchg
test
lret
gs
and
fldt
loop
push
gs
mov
mulb
mov
fldl
mov
bound
or
adc
jo
in
sub
fld1
and
jns
mov
addr16
push
push
outsl
fcomip
inc
in
jle
xor
sti
and
faddp
fisttpl
sub
jo
aaa
notl
push
mov
push
cmpb
cmpsb
pop
rol
lods
lea
adc
insl
and
pop
inc
fstp
test
fucomi
loope
hlt
sub
sti
scas
ljmp
nop
lret
or
add
dec
aad
in
lds
jmp
add
stos
adc
testl
dec
mov
jl
and
cltd
xchg
loop
add
pop
jp
jno
popf
sarl
jae
xor
pop
es
repnz
addr16
aaa
xor
xor
xlat
loop
inc
adc
sub
inc
pop
les
cmc
cli
fs
ss
mov
jne
push
jno
popa
adc
sub
dec
pop
ja
stos
xlat
cmp
scas
rolb
sub
sbb
nop
aam
movsb
dec
adc
ss
mov
cmp
in
and
lahf
sub
pop
mov
sub
lock
pop
cld
jbe
test
lret
and
xchg
inc
dec
dec
sub
ljmp
popf
outsb
aad
loop
das
in
mov
xchg
rol
adc
out
fldt
sbb
xchg
stos
xchg
xor
in
aam
push
sti
mov
es
adc
or
push
xchg
fistpl
sti
inc
test
xor
je
inc
pusha
popa
loope
pushf
sti
imul
sbb
gs
push
in
ret
cld
xchg
cmc
push
mov
or
cmp
enter
push
stos
std
inc
xchg
cmpsl
leave
or
fwait
shll
ret
int3
inc
insb
lods
or
in
xchg
in
push
pop
add
cltd
xchg
or
ficoml
jmp
outsl
add
jb
repnz
in
xor
sbb
mov
in
insl
les
xchg
dec
xor
mov
sub
or
adc
les
iret
inc
pop
or
jle
jo
add
jo
into
jb
lods
fisttpl
mov
mov
out
addb
or
adc
inc
adc
lret
xor
iret
jmp
or
cmp
icebp
fwait
push
sbb
addb
inc
ja
call
repz
pushf
clc
mov
in
push
and
mov
dec
push
divb
in
ficomps
cmpl
ret
repnz
sti
aad
out
lahf
jp
movsl
mov
adc
testl
mov
ret
imul
clc
jae
fbstp
dec
test
adc
cld
mov
xor
pop
cli
aaa
std
roll
in
jbe
int
insl
jl
lret
adc
mov
ljmp
xor
test
addr16
jae
pop
jmp
add
ret
xor
xor
and
icebp
xchg
xchg
cmpsb
add
push
or
lea
idivb
jbe
or
imul
xor
mov
push
fnclex
add
dec
sub
mov
aaa
jle
in
push
je
add
mov
push
dec
ret
mov
dec
mov
jmp
jge
jae
add
push
push
fcomip
and
xchg
fdivrs
push
pushf
imul
in
outsl
and
jmp
out
psraw
loop
sbb
cltd
jb
push
and
repz
mov
imul
adc
rclb
mov
add
fcomps
push
ret
jb
or
dec
mov
xor
fcomps
lahf
jns
cmc
push
jge
pop
out
inc
hlt
push
push
push
test
cmp
mov
lock
shl
xchg
outsb
ret
pop
lods
pop
push
ja
push
dec
jbe
fwait
call
clc
fwait
lret
scas
sbb
pop
bound
int3
fcomi
xchg
push
xlat
mov
mov
cmp
imul
xchg
add
call
push
mov
push
ss
mov
insb
mov
and
xchg
hlt
jnp
icebp
xor
dec
push
mov
lret
in
mov
and
pop
icebp
shlb
dec
popf
sbb
daa
pop
xchg
fdivrs
or
test
loop
push
shlb
xchg
add
std
xchg
and
in
aad
jbe
ret
mov
pop
js
loop
cld
movsb
insb
mov
insb
in
mov
out
mov
icebp
lods
out
shll
adc
mov
xchg
ror
fwait
push
mov
loope
ret
add
jae
lcall
rcrb
sar
and
cmp
scas
push
sarb
push
pop
adc
push
ja
xchg
out
or
mov
and
pusha
mov
add
xchg
lret
jmp
inc
pop
int3
mov
dec
shrb
dec
mov
push
mov
mov
sbb
andl
cmp
dec
fdivrl
push
in
mov
adcl
es
and
xchg
mov
pop
inc
pop
loope
hlt
fldl
xchg
fistpl
and
in
cmp
and
adc
mov
nop
js
iret
cmpsl
xor
test
and
lods
fwait
cli
fadds
sbb
mov
shrl
sarb
add
xchg
bound
enter
in
in
add
in
jle
mov
cld
inc
lods
inc
inc
rol
cmp
or
lods
cmpsb
pop
in
lea
bound
aam
pop
xchg
fistpl
jb
orl
and
loope
out
inc
movsl
sub
and
or
and
and
cs
mov
fldt
shrb
aas
mov
aas
dec
scas
rcrl
sbb
dec
je
xor
and
fcomp
popa
xchg
jnp
xchg
aam
loope
gs
loopne
rcr
xchg
rclb
and
movsb
or
movsl
sub
lcall
pop
rcll
ret
push
mov
jo
cmp
lret
or
push
xor
sarb
adc
andb
in
ljmp
fistl
mov
add
cld
jne
loop
add
arpl
sahf
adc
shrb
jae
dec
fdivr
lea
lods
and
neg
sti
loop
adc
in
inc
mov
mov
ljmp
ds
test
sub
fiaddl
jae
xchg
ja
adc
jge,pn
cmpsl
push
lahf
sbb
mov
mov
dec
gs
stc
pushw
ljmp
out
and
push
inc
inc
icebp
and
fwait
pop
mov
mov
pop
pusha
inc
xor
adc
xchg
cmc
orb
push
jns
xchg
or
jmp
xchg
jmp
mov
imul
mov
pop
loope
xchg
jg
dec
cltd
mov
mov
dec
test
arpl
and
add
ja
and
insl
pop
cwtl
pop
jae
ret
jb
movsl
pop
movsb
xor
rcll
out
cmc
pushf
roll
sbb
sar
dec
mov
push
adc
in
mov
mov
pusha
fdivl
mov
xchg
gs
in
sti
dec
mov
jns
cmp
jecxz
es
push
ljmp
faddl
imulb
sub
aaa
lahf
das
sub
xor
cmc
jge
and
xor
test
or
cltd
pop
or
fsub
sti
mov
aam
adc
insb
fistpll
lods
fistpl
fisubrs
jae
fwait
das
in
sub
lods
aas
std
dec
pop
xor
sbb
fstpt
inc
jno
xchg
sti
sub
add
xor
imul
std
mov
loope
fcomps
mov
and
pop
fdiv
xor
pop
add
xor
fldt
inc
inc
call
out
lret
xor
and
add
ljmp
call
add
fsubrp
push
add
sbbb
xchg
out
cs
jae
jmp
push
out
fs
fwait
mov
lods
sub
rcrl
test
sub
out
add
push
mov
push
mov
xchg
adc
insl
mov
popa
loopne
push
mov
jge,pn
daa
lret
or
shrb
or
ljmp
test
ret
int3
popf
icebp
jno
push
push
cmpsb
shrl
imul
sub
push
cld
lods
sbb
popa
es
je
andl
clc
imul
fwait
sub
pcmpeqb
iret
sti
fwait
stos
int
pop
jp
fwait
sbb
pop
inc
test
lock
or
fdivrp
xchg
test
movsl
imul
jmp
push
mov
xchg
cmp
mov
and
pop
sub
or
sbbb
inc
in
int
mov
and
adc
stos
and
add
cmp
and
xchg
iret
xchg
adc
pop
adc
shll
mov
mov
lds
sbb
mov
sahf
out
sbb
cmp
fwait
xorb
shl
sub
lods
stos
mov
loop
movsb
adc
nop
ret
popa
cmc
pop
ret
mov
gs
push
jo
inc
insb
push
mov
jbe
loope
fwait
and
mov
leave
push
mov
popa
hlt
dec
mov
testb
mov
test
xor
jg
leave
fstpt
mov
stc
shrl
pop
sbb
into
dec
aam
pop
ret
sub
aam
out
sti
cmp
pop
adc
mull
adcl
ds
rcll
popa
mov
pop
pusha
and
aaa
enter
js
mov
idivl
adc
sbb
fwait
pop
or
fs
jne
arpl
ror
lea
fwait
cmpsl
xchg
jnp
sahf
roll
cld
sbb
mov
mov
dec
mov
rorb
jns
mov
jl
lea
mov
std
out
out
arpl
dec
push
mov
or
cmp
dec
pushf
adc
out
sub
adcb
dec
js
loope
xor
arpl
mov
inc
xchg
scas
add
lods
sbb
or
enter
or
cmp
xchg
std
sti
aad
sbb
sti
mov
push
hlt
add
subl
cmpsb
sub
push
pop
mov
adc
jno
iret
gs
dec
in
icebp
mov
stos
xlat
bnd
pop
mov
ret
in
jbe
pop
jbe
into
enter
aam
xor
call
dec
fisttpl
cmp
pop
fimull
xor
cmp
fld
test
leave
mov
cwtl
cmp
loop
inc
inc
std
enter
jno
cmp
mov
xor
mov
fisttps
sbb
add
fwait
xor
ds
fs
lea
aaa
add
xor
adc
push
pop
dec
movsl
fldl
jle
xorl
add
cltd
sbb
cltd
test
and
cmp
out
shrb
out
sbb
mov
pop
sbb
std
mov
int3
or
imul
adc
cmc
js
mov
icebp
out
push
and
in
cmp
sub
arpl
dec
jmp
inc
lret
inc
test
sbb
add
test
lods
mov
std
loope
je
in
pop
mov
xchg
and
or
jns
call
mov
out
sbb
idiv
inc
and
repnz
push
aam
mov
add
sbb
add
inc
in
dec
fdivrl
pop
sarb
cmc
add
add
movb
iret
test
or
adcb
or
pop
stos
fisubrs
insl
push
fucomi
cmp
rep
adcl
lock
dec
dec
jo
mov
fwait
inc
pop
arpl
fwait
ret
jb
aaa
fildl
push
jb
pslld
mov
in
pop
nop
pop
aas
xchg
divl
fucomp
sti
insb
cs
fisttpl
xor
cld
inc
lods
add
jno
or
loop
ljmp
pop
xor
mov
jno
push
icebp
ja
in
insl
out
and
or
xor
jl
ja
sbbl
push
or
pop
shlb
xchg
int
test
lods
dec
xchg
pop
cmp
out
xlat
xrelease
inc
cmc
mov
shufps
iret
pushf
ja
gs
loop
int
ds
push
lods
inc
mov
outsb
ror
cs
out
push
andb
push
in
jecxz
adc
loopne
jmp
mov
mov
jno
ljmp
stos
js
xor
sti
cmpsl
mov
xchg
ret
sbb
outsl
enter
cltd
ret
rolb
push
mov
adcl
fwait
pop
mov
icebp
cmc
add
ror
call
sub
dec
pop
push
lds
jns
jbe
mov
ds
cmp
mov
loope
push
lret
jno
rcrb
dec
cltd
and
inc
sarl
push
add
lds
addb
dec
stos
mov
mov
test
insl
mov
mov
iret
adc
iret
out
sarl
ja
push
jl
jg
leave
jb
sbb
aam
nop
mov
sbb
mov
fdivp
sub
dec
popf
jg
pop
jns,pt
bound
fwait
sbb
popa
lret
push
cs
shl
repz
jb
iret
and
adc
dec
or
or
subl
loope
imull
add
cmp
xchg
int
out
pusha
cwtl
mov
loopne
fildl
cld
and
xorl
dec
sti
outsl
adc
push
jno
or
imul
lahf
inc
dec
pop
shrl
aam
jne
cmp
xor
aas
nop
in
mov
pop
es
xchg
leave
in
xchg
test
cltd
ja
gs
dec
jae
mov
mov
lea
ja
hlt
cmpb
into
mov
lret
sbb
or
lds
daa
fisttps
jnp
imul
xlat
mov
movsb
xchg
out
jno
xchg
xor
fs
mov
pop
cld
fwait
lods
push
scas
aas
je
xlat
popl
or
ss
mov
cwtl
jmp
out
xchg
adc
fcomi
int
popl
stos
and
test
push
inc
adc
sub
cmp
xchg
xchg
fwait
sub
aaa
data16
xor
mov
jg
aas
jno
in
fcmovnbe
cmp
cmc
mov
pop
sbb
popf
push
sti
xchg
popa
int
mov
lock
xor
sub
jae
fwait
jmp
mov
mov
mov
sbb
cmp
loope
xlat
repz
into
xchg
mov
mov
mov
jg
mov
clc
ret
pop
xor
add
pop
enter
add
inc
std
repz
lock
fcmovnu
pop
mov
icebp
js
mov
in
sti
cwtl
or
jae
push
jns
adc
bound
pop
rcl
mov
jno
jg
jo
js
jnp
jecxz
cmp
xchg
inc
lock
clc
lret
and
xor
jle
neg
mov
and
cmp
ljmp
add
loope
push
and
mov
dec
or
imul
push
and
add
mov
fildll
into
loop
ret
jae
repnz
and
xor
push
dec
xchg
cmp
fldt
pop
nop
in
rclb
shll
xor
popf
in
mov
arpl
mov
mov
inc
stos
insl
movsl
push
dec
xchg
lret
std
sti
ja
stos
sbbl
fwait
in
aaa
outsb
pop
cmpsb
and
nop
mov
outsl
shll
or
lock
push
push
test
fwait
push
test
xchg
push
push
in
and
adc
mov
jno
or
xor
push
lret
sbb
fwait
loope
repnz
xchg
mov
push
push
dec
ret
hlt
jmp
fldt
ficoml
pop
negl
in
ret
inc
fwait
jg
push
add
inc
stos
jg
insl
mov
fwait
push
push
cli
sub
jle
sti
hlt
mov
bound
jns
in
fidivs
jno
dec
mov
push
pop
ds
sub
sub
jecxz
je
push
outsb
adc
adcb
jmp
std
sti
mov
fbstp
jae
lods
cld
sbbb
cld
xchg
std
test
lods
dec
sub
in
and
imul
xorl
and
ljmp
cli
adc
lahf
cmp
push
or
aad
in
or
sarb
or
nop
and
inc
int
stos
insb
mov
pop
in
sbb
loope
mov
mov
imulb
and
or
jnp
cltd
daa
lods
pop
je
xlat
fcmovnu
insl
xor
adc
lods
xor
nop
shlb
or
dec
push
jp
pop
lods
loop
xlat
dec
jo
loop
xor
xchg
mov
jb
jmp
xchg
mov
icebp
and
xor
outsb
pushl
test
mov
push
pusha
arpl
nop
mov
jmp
adc
push
dec
cmp
imul
ficoml
sbb
lds
call
aaa
dec
mov
sub
repnz
shll
dec
push
mov
mov
fwait
daa
xor
std
sbb
sbb
xchg
push
movl
pop
sub
push
stos
dec
test
pop
mov
xchg
sub
outsl
dec
cmpsl
addl
imul
pop
das
add
insb
inc
outsb
mov
repnz
inc
aas
in
out
mov
or
testl
rol
lea
lret
mov
iret
jno
sub
inc
pop
subl
or
mov
bound
dec
icebp
sub
push
data16
xor
pop
test
out
jnp
cmp
fwait
dec
stos
mov
sarl
pop
adc
das
pusha
push
nop
imul
scas
xchg
ja
push
jge
mov
push
cmpsl
push
in
shrb
sub
fcompl
pop
ret
mov
or
hlt
stos
repz
mov
mov
mov
push
xchg
adc
xchg
xor
test
push
add
pop
fisubrl
out
mov
gs
in
insl
xchg
cltd
das
and
cmpl
lret
jno
cmc
jg
ja
sbb
ss
sub
ret
fldt
pusha
rorb
inc
stos
sbb
dec
aam
jns
ss
jbe
sti
mov
xchg
jnp
lds
nop
lea
adc
ljmp
sahf
sub
jns
aas
cmc
xor
xchg
jmp
jns
dec
cmp
mov
fisubl
push
stos
xor
roll
push
mov
mov
push
add
sti
cmpsb
daa
movsl
jb
into
aaa
mov
push
adcb
xor
fimull
ja
jmp
arpl
mov
and
lods
subl
cmc
push
jl
adc
dec
adc
mov
jb
icebp
sti
cs
int
out
jbe
std
and
fabs
push
dec
cmpl
scas
inc
or
loop
cld
cs
inc
insb
jb
jp
mov
fbstp
add
enter
xchg
cmp
in
pushf
shll
daa
mov
mov
jge
outsw
xor
enter
or
sbb
xor
ss
mov
popl
and
dec
add
mov
shll
ljmp
jl
cltd
cmp
inc
xor
hlt
sarl
insb
inc
push
mov
mov
mov
hlt
mov
pop
cld
sub
cs
int3
leave
test
fwait
sbb
sub
fidivs
add
in
push
sti
int
jg
fisttpl
adc
sbb
mov
add
aam
sub
pop
fisttpl
jmp
int3
rep
mov
pop
out
jnp,pt
inc
or
add
test
jo
shl
mov
xchg
xchg
lock
and
data16
jle
or
and
mov
xchg
int3
dec
or
push
jae
or
inc
adc
mov
and
ret
inc
loope
or
test
add
or
fists
mov
ja
mov
popa
push
out
xchg
std
clc
and
or
popf
je
and
jb
cwtl
rorb
push
or
sbb
pop
jge
movb
cmp
in
mov
sub
add
loope
in
in
scas
stc
insl
repnz
ljmp
cmpsb
xor
les
and
psubsb
movsl
cld
xchg
test
outsb
inc
lods
add
mov
add
mov
xchg
icebp
jge
scas
or
cmp
push
dec
sbb
ja
bound
push
cwtl
pop
sub
or
push
lock
jae
fcompl
mov
pop
adc
dec
xchg
inc
in
or
push
cwtl
pop
and
fisubrs
movsb
pushf
xchg
cmp
dec
enter
sub
xchg
cld
jg
insb
test
or
mulb
mov
in
aad
jne
or
and
dec
dec
jmp
dec
mov
divl
aad
push
push
in
in
jno
add
cmp
fildl
xor
lods
lea
rolb
jle
popf
loope
dec
ss
scas
out
fwait
bnd
dec
cld
push
pop
pusha
sub
sti
xor
into
mov
andb
add
gs
xor
push
sbb
arpl
push
imul
inc
or
iret
sbb
mov
cwtl
push
adc
jmp
data16
and
lods
loope
and
pusha
lcall
cwtl
rcrl
mov
cmp
in
repnz
jae
js
push
mov
enter
push
in
movsl
insl
js
outsl
or
lock
mov
fbld
jge
ret
ja
scas
push
outsl
add
sarl
das
jae
shr
in
mov
pop
mov
xchg
dec
cmp
jnp
lds
leave
push
adc
jmp
and
dec
lock
sbb
mov
jp
js
xchg
and
mov
fisttpl
out
insl
fcoms
dec
sarb
outsl
fldt
ljmp
jmp
paddw
lock
mov
aas
pop
push
jle
xor
sti
or
xlat
jne
pop
or
pop
cs
arpl
adc
out
decl
jne
aad
or
jnp
mov
call
adcl
imul
repz
adc
leave
hlt
jae
add
sahf
cmc
push
sbb
stos
sbb
and
pcmpeqd
addr16
sti
outsb
inc
stc
dec
fwait
aaa
lret
mov
dec
jae
mov
in
fcmovb
and
and
sarl
pop
aam
scas
in
jae
int
pusha
cmp
xchg
jmp
adc
or
push
roll
orb
mov
mov
sbb
int3
shr
pop
out
pop
dec
std
std
xchg
dec
or
sahf
loope
sti
jmp
jp
jb
push
push
jmp
push
adc
jno
in
leave
dec
movsb
lods
inc
shr
jb
inc
jg
sbb
lods
jecxz
shrl
std
scas
sbb
lods
mov
or
pop
test
or
jo
jbe
fistl
inc
stos
inc
jno
pusha
lret
inc
xorb
inc
sti
punpckhwd
jo
pushf
je
add
mov
imul
sbb
lods
cs
orb
test
ss
sub
sti
mov
jg
sub
in
lret
xchg
lret
js
addl
mov
push
jne
arpl
int
or
dec
gs
jno
gs
push
mov
int3
xchg
lret
movsb
add
ret
fildl
decb
adc
jb
rol
aaa
push
dec
mov
jl
scas
flds
adc
loope
andl
fldl2e
xor
xchg
push
movsl
cmp
movsb
xchg
jne
imul
inc
mov
lahf
ds
je
fwait
mov
mov
mov
mov
js
pop
out
mov
fwait
inc
push
das
orl
test
aam
fidivs
add
pushl
cmc
xor
dec
popl
ret
sbb
xor
mov
dec
jp
bound
fwait
ret
into
fcomps
xor
std
dec
daa
scas
repz
lret
cmc
fldt
jl
mov
pop
mov
mov
cmp
sub
inc
aaa
arpl
xchg
push
gs
mov
es
popf
dec
sub
jb
popf
and
dec
mov
cmc
sti
xchg
add
rep
jmp
mov
fistl
popf
fildl
fucomi
dec
mov
jbe
mov
pop
stc
push
fwait
mov
jmp
jmp
xchg
test
sbb
cmp
in
inc
sbb
jp
dec
addb
push
data16
enter
ret
into
push
aaa
and
jmp
and
pop
push
cmpsl
jo
adc
xchg
mov
push
cmp
inc
mov
cmp
inc
add
xchg
stos
jo
aam
sub
jl
and
xor
aam
sub
rcl
or
inc
std
sub
xchg
fsubl
mov
dec
je
js
cmp
cltd
xlat
inc
or
xor
stos
cld
out
cld
sbb
fwait
xlat
lods
push
repz
xchg
or
push
cltd
dec
sub
ret
jp
cmp
loope
inc
out
xor
in
rcrl
xchg
adc
mov
rorl
sbb
pusha
or
xor
cmpsl
ret
in
sti
pop
mov
mov
stc
dec
je
leave
out
xchg
gs
xchg
dec
loope
clc
fwait
lods
loopne
repz
pop
xchg
mov
push
jb
lcall
inc
lret
pop
enter
sbb
jns
jb
add
sub
pop
scas
pusha
pop
xor
xchg
lahf
test
imul
mov
or
inc
loope
in
adc
mov
xchg
or
movsl
icebp
xchg
dec
sub
mov
and
aaa
es
pop
loopne
dec
and
xchg
jecxz
sub
push
xlat
ljmp
outsl
stos
pop
and
inc
add
out
stos
repz
aad
repnz
mov
push
cmp
adcl
ret
lock
jns
ja
into
mov
fwait
push
mov
in
inc
das
dec
mov
out
mov
dec
add
std
pop
mov
xchg
js
xchg
lret
cmp
fldt
popa
dec
cld
inc
lock
fidivl
into
jb
add
fisttps
mov
lock
mov
cld
test
lods
or
jae
int
mov
mov
addr16
xor
jbe
sarb
jp
push
out
and
jns
movsb
sti
je
inc
movsl
dec
push
cmp
test
gs
lcall
into
mov
push
stc
addb
insb
mov
inc
inc
out
lahf
repz
movl
hlt
gs
bound
in
or
push
cmp
sahf
mov
nop
add
xchg
sub
lock
xor
in
cmpsb
lods
popf
movsl
fldl2e
jge
jecxz
sti
xchg
lds
cmc
icebp
dec
ret
adc
lods
jo
pushf
xchg
fwait
mov
mov
xor
sub
adc
sbb
mov
loopne
lods
ret
lret
push
sub
cmc
pop
dec
jg
ja
sub
jmp
mov
push
jne
xchg
mov
jg
mov
loop
or
sti
mov
frstor
push
cmpsl
into
pop
hlt
push
and
cs
dec
int3
adc
inc
inc
dec
mov
cmp
xor
dec
icebp
jae
nop
and
lods
clc
std
cmc
cmc
fistl
jmp
loopne
stc
lret
xchg
loop
ffree
fldcw
fwait
out
sar
mov
and
sar
mov
loop
fwait
add
scas
cwtl
aas
dec
out
jnp
lock
mov
ljmp
mov
aam
cmpsl
popf
int3
clc
mov
movsb
sub
shll
dec
fstl
sbb
push
ja
push
cmc
loope
cmp
sub
test
clts
pop
ljmp
data16
mov
popl
test
mov
js
mov
in
fsubl
inc
cli
jne
daa
or
out
sti
xchg
sub
jecxz
outsb
inc
dec
ja
adc
push
lahf
cwtl
repz
aas
les
cmp
inc
ror
xchg
cltd
cmp
push
cmp
lods
jno
sbb
stos
jle
cld
pop
or
pop
jmp
rorl
and
lret
shll
cmp
push
mov
mov
or
stos
cmc
inc
xchg
jge
or
and
xor
setge
xchg
test
jecxz
sti
mov
in
out
cmpsb
into
inc
idivl
movsl
add
lods
or
addl
sbb
std
xor
and
shl
mov
fadds
out
inc
xor
add
push
scas
outsl
mov
xchg
add
inc
sub
ret
add
in
sarb
dec
cmp
push
mov
adc
sbb
jge
lcall
out
mov
hlt
push
mov
lods
push
xchg
out
or
aas
sub
xor
popf
in
cmp
aam
mov
loopne
loope
adc
jns
add
mov
cmp
inc
ret
push
and
xchg
sbb
aas
or
jmp
stos
gs
pop
mov
int3
jge
add
pop
ljmp
mov
loope
cmp
fwait
jne
sub
fdivp
data16
mov
mov
out
sub
ss
fisttps
jns
xchg
aaa
jns
jmp
insb
insb
inc
cmp
push
mov
fstps
aaa
inc
inc
imul
test
popa
es
out
sbbb
xchg
jmp
and
in
testb
pop
rorl
fs
jb
rcrb
sbbl
mov
ss
test
ds
scas
jae
cmp
ret
ret
sbb
add
popf
mov
jg
dec
sub
ret
rclb
sbb
sub
xor
lahf
outsl
jbe
in
fwait
pop
out
out
sti
pop
popa
aam
arpl
jae
jns
pop
and
js
int3
imul
inc
iret
push
sti
dec
cld
cli
dec
cmp
sbb
inc
aad
push
mov
push
imul
sub
push
or
daa
ss
insl
xchg
push
imul
mov
loope
pushf
jb
xchg
daa
gs
rolb
xchg
xor
pusha
mov
adc
js
lods
ljmp
popa
jecxz
mov
mov
push
mov
mov
stc
fadds
gs
jnp
sti
adc
adc
fwait
pop
test
add
sbb
xchg
ja
sub
add
push
xchg
jae
sub
or
add
enter
pop
and
mov
mov
or
jae
popf
movsl
popf
jle
pop
pop
xlat
push
push
jp
mov
sbb
ffreep
movsl
jl
fs
xchg
jnp
adc
jmp
dec
into
test
or
jbe
inc
xchg
dec
jno
dec
lret
enter
imulb
bnd
push
les
cmpsb
js
mov
fidivs
mov
jne
pop
stos
stos
jg
and
mov
dec
sub
jmp
mov
pop
jmp
xchg
ja
xchg
xchg
dec
jo
jno
cld
mov
pop
in
fisubrl
push
cmp
repnz
loop
sbb
push
mov
lret
xor
movsb
cmc
fistpl
andl
jle
std
std
arpl
adc
xchg
addb
or
mov
adc
add
xor
repnz
sub
pusha
xchg
xlat
xchg
mov
jae
adc
aaa
test
inc
jmp
jno
test
add
xor
andl
add
das
push
repnz
ret
xor
jo
ret
xchg
ds
xchg
call
int
imul
in
fmuls
sbb
pusha
add
aas
outsb
mov
inc
gs
test
mov
mov
hlt
jmp
add
xorl
inc
sahf
in
in
in
ret
sub
pop
jmp
cltd
enter
imul
xchg
sbb
andb
mov
sbb
jmp
insl
lret
or
jno
cmp
loope
lods
or
jecxz
hlt
mov
inc
repnz
iret
loope
mov
xchg
sti
inc
or
sbb
mov
and
xlat
or
repz
mov
es
outsl
jb
add
sub
mov
push
sti
add
add
xchg
fwait
les
inc
outsb
dec
mov
popa
jecxz
hlt
sbb
mov
push
and
or
or
test
xorb
or
aam
xchg
xor
adc
lcall
dec
jmp
lods
aam
add
fstpt
addr16
mov
add
sub
adc
nop
orb
mov
cmp
out
xchg
mov
bound
jbe
sub
ss
cmc
jno
add
xchg
ja
hlt
in
mov
mov
imul
nop
add
mov
fstpt
mov
mov
ds
or
arpl
lahf
dec
andl
out
xchg
jae
in
fdivl
xchg
repz
addr16
or
mov
aaa
mov
add
clc
mov
std
sti
jo
call
jo
sub
and
dec
and
mov
xlat
mov
pushf
push
subb
sarb
fwait
pusha
jbe
fwait
subl
pop
inc
mov
leave
fwait
mov
cmp
push
loopnew
int3
mov
test
int
and
jbe
jmp
iret
and
mov
xor
ret
xor
popf
mov
xchg
outsb
mov
loopne
popf
mov
xor
in
loop
popf
fwait
popa
dec
add
xor
sub
mov
mov
pushf
mov
dec
inc
sbb
sti
xchg
out
jb
clc
shl
ret
jp
in
sub
out
imul
les
push
adc
push
scas
adcl
out
roll
fisttpll
add
mov
orb
invd
test
xor
mov
adc
mov
push
dec
out
imul
jns
cmpsl
adc
xchg
in
sbb
cmpsb
mov
clc
rclb
lcall
popf
dec
out
es
popf
sahf
aas
mov
add
subl
leave
mov
pop
jno
xchg
cmpsb
out
into
xor
jmp
inc
mov
xchg
cmc
cmc
push
aaa
popa
inc
test
mov
inc
test
jnp
out
dec
insl
sub
call
pop
mov
ret
inc
mov
fmull
in
mov
inc
xchg
out
pop
stos
mov
je
lcall
in
adc
jbe
insb
stos
lods
xor
jb
addr16
int
fdivrl
push
dec
ret
dec
in
or
xor
mov
jg
adc
pop
and
aas
popa
movsb
or
stos
jbe
push
loope
loop
repnz
xlat
roll
popf
in
or
push
pop
sti
mov
hlt
pop
xchg
arpl
gs
stos
seta
pop
cmp
mov
clc
or
out
cmc
pop
out
std
fldt
sahf
push
mov
ss
icebp
aad
test
enter
jmp
jecxz
iret
xor
push
adc
lods
lods
xchg
mov
jle
cmp
lahf
test
xlat
mov
mov
popa
push
ja
stos
lcall
jb
arpl
repnz
push
push
outsl
or
lock
mov
roll
pop
mov
pop
stos
and
stos
sub
popa
push
fwait
push
inc
adc
enter
hlt
icebp
mov
jl
xor
fiadds
push
fsubr
in
sbb
and
iret
ret
sbb
add
add
scas
cmp
sahf
lahf
cli
scas
jmp
sti
mov
loope
fcomip
push
je
es
dec
xchg
stos
cmc
mov
mov
add
mov
in
in
ja
clc
and
push
mov
sbb
out
fidivs
push
pop
cmpsb
out
ja
dec
rclb
int3
xor
pop
xchg
cli
shll
and
cmc
inc
in
pop
ret
mov
xor
jne
js
in
add
test
jl
sub
and
sbb
inc
mov
and
xchg
int
out
loop
sub
lock
hlt
in
lods
xlat
cmc
cmp
and
ret
frstor
or
jo
fwait
xchg
add
mov
leave
mov
mov
andl
insb
out
les
inc
mov
jmp
mov
xor
or
cmpsb
inc
xchg
fbstp
and
ss
or
add
das
inc
fcompl
data16
and
add
mov
movl
ljmp
rolb
mov
add
pop
and
pop
fnstcw
add
cwtl
or
xor
cmc
ret
imulb
xor
jle
fstpt
in
lock
jno
popa
pop
in
hlt
or
xchg
push
sti
or
jb
and
mov
cmpsl
popa
mov
lods
push
repz
add
outsl
in
sbb
mov
jg
jle
loope
inc
xchg
and
pop
push
inc
aaa
popf
and
add
xchg
cmc
xor
dec
jecxz
sub
or
rep
stos
lea
jno
mov
cli
mov
jmp
sbb
sub
cmp
fidivrl
repz
dec
sti
lcall
int3
lds
mov
jge
int
in
sbb
fwait
sub
inc
roll
aaa
and
sbb
inc
jle
out
sub
sbb
or
sti
out
sub
shll
add
lea
pop
dec
adc
cmc
sub
xchg
mov
fwait
andl
daa
ret
es
inc
int3
xchg
fstp
aas
cmp
push
sbb
push
sub
lea
hlt
sbb
repnz
inc
je
dec
or
ljmp
loope
rclb
paddq
adc
xor
lret
enter
aam
and
js
shlb
pop
fsubrl
dec
out
sbb
pusha
mov
ret
insb
movsl
gs
and
pop
and
dec
sub
das
ret
sub
jle
lea
daa
jno
push
jns
xchg
adc
test
loopne
ljmp
mov
push
push
xchg
and
in
addb
xchg
ja
shll
push
mov
xor
out
hlt
mov
ret
leave
xchg
daa
mov
or
push
fstpt
pusha
je
push
fwait
adc
add
pusha
rcrl
cmc
shlb
test
out
sub
lods
ss
imul
lds
mov
fistps
inc
push
adc
mov
adc
xor
in
loop
dec
ja
gs
and
in
ss
push
dec
push
lods
push
xor
repnz
jb
fstpt
test
ret
push
popa
test
fisttps
xchg
mov
jmp
adc
xor
pop
fwait
sub
xor
dec
inc
insl
outsb
mov
mov
push
cld
outsb
jae
test
out
imul
cli
js
cmp
mov
and
mov
sub
mov
fdivs
hlt
jne
lock
adc
push
xchg
inc
cmp
pop
pop
jl
dec
sub
jb
cld
ja
adc
cmpsl
fwait
out
fisubs
ss
cltd
fldt
mov
sub
aam
cmc
push
mov
inc
loop
rol
push
aam
dec
movsl
dec
sbb
fildll
push
add
cmp
mov
add
add
cmc
test
arpl
imul
mov
loope
push
mov
cmp
mov
or
sub
nop
shll
inc
orl
jae
sub
sbb
xchg
mov
jbe
fdivrp
les
imul
std
pop
mov
popf
das
jmp
adc
mov
sub
sub
mov
mov
or
xchg
clc
or
cli
cmp
mov
mov
mov
mov
data16
cli
mov
shr
mov
pop
push
fucom
sti
addr16
lock
outsb
loop
adc
fwait
daa
and
and
adc
pop
mov
fwait
and
jle
and
neg
imul
mov
andb
push
shlb
inc
or
pushf
das
mov
sahf
mov
lea
jg
jbe
xor
push
mov
xchg
lods
sub
push
nop
fidivrs
add
mov
push
xor
dec
ret
xor
pop
mov
pop
test
sub
push
inc
in
test
jns
out
stc
sub
jb
xchg
fsubrs
addl
repz
js
mov
ret
loop
pop
lahf
mov
out
jnp
loope
in
sub
mov
lock
push
pop
ss
dec
cltd
fwait
pop
ficoms
iret
dec
fstpt
xor
int
int
loop
xchg
mov
inc
lret
mov
pop
and
sbbl
or
jg
imul
jbe
sbb
cmp
stos
repnz
jge
fwait
leave
pushf
repz
sbb
arpl
imul
inc
test
or
sub
jne
lcall
sbb
dec
loop
fldt
sbb
lods
lahf
stos
popf
das
into
inc
adc
dec
or
es
sarb
imul
jno
in
in
push
insb
mov
add
add
dec
sub
mov
loopne
and
and
cld
das
int
fldt
mov
mov
push
add
add
cmp
jp
rorb
fwait
adc
sub
mov
sbb
sbb
filds
sub
adc
push
sbb
dec
iret
mov
testl
xor
mov
pop
lods
sahf
rol
sti
sub
xchg
cmpsl
or
andb
or
mov
sub
sbb
rcll
clc
sub
insb
ss
xchg
out
loope
jecxz
ja
std
xchg
and
push
jl
add
out
sbb
jb
push
xlat
call
mov
hlt
mov
pop
das
stos
in
xchg
and
push
enter
dec
sbb
ja
push
in
xchg
fstpl
dec
push
ds
sub
pop
mov
rorl
ret
pusha
shr
je
or
lods
mov
icebp
dec
repz
add
daa
fcomi
pusha
imul
and
mov
push
rcr
lret
mov
aaa
rorl
popa
mov
sbb
shlb
shrl
adc
fldl
xor
bound
pop
jne
jecxz
dec
adcl
sbb
fs
add
jae
mov
sti
subl
out
xchg
push
outsl
mov
or
fwait
xlat
ds
or
pop
shll
insl
dec
cld
pusha
popf
ljmp
les
jbe
xchg
sti
jno
js
push
jne
mov
fistps
test
push
movsl
dec
mov
push
xor
jne
pusha
cld
push
xlat
mov
sbb
stos
lods
fcompl
add
pop
mov
js
mov
xchg
cmp
push
inc
inc
int
aad
add
fwait
lea
sub
mov
push
call
mov
pushf
sbb
and
orb
mov
std
ljmp
test
rclb
jl
pusha
pop
cmc
mov
push
inc
dec
ljmp
js
icebp
sbb
jno
mov
jne
outsl
mov
shl
scas
ffree
pop
adc
repnz
cmp
icebp
popf
xor
pop
sub
loop
mov
fisubrs
or
mov
pop
dec
mov
sti
ficomps
cli
inc
push
dec
push
lahf
fsubr
cmp
push
imul
cli
sbb
jl
ljmp
subb
andl
out
call
adc
lods
inc
leave
inc
pop
fucomp
pusha
adc
iret
lock
in
xor
loop
fwait
ljmp
lcall
sub
jge
fwait
mov
push
cmp
or
jbe
xorl
addr16
movsl
jmp
push
xor
in
mov
pop
inc
ret
js
mov
sub
scas
lcall
push
ficompl
popa
fadds
movsl
fidivrs
xchg
ja
cmp
fistpll
inc
mov
ret
ljmp
in
inc
sub
shlb
add
jb
mov
mov
lods
or
dec
popa
jecxz
cmc
aaa
inc
xchg
nop
push
enter
test
fwait
push
mov
ret
mov
mov
mov
inc
cli
mov
outsb
jmp
cld
sbb
and
popa
hlt
pushf
xchg
clc
loope
addr16
ret
dec
jne
push
xor
sti
mov
jnp
and
rcrb
adc
stos
fwait
mov
mov
xlat
add
xchg
xor
inc
mov
add
sbb
and
es
sub
mov
adc
adc
shlb
dec
fstps
adc
loopew
call
inc
jg
fnstenv
pop
add
ret
test
pop
das
push
scas
fiaddl
imull
cmpsl
movsb
test
adc
dec
mov
inc
mov
xchg
push
ss
gs
and
out
pop
dec
mov
or
les
pusha
cmp
imul
lods
adc
aam
push
xchg
lock
loopne
testl
in
ss
int
sub
fmuls
cli
dec
push
stc
sbb
movsb
xor
cltd
fwait
sub
loop
jmp
mov
and
xor
clc
inc
mov
and
dec
in
sub
jno
aad
cmp
pop
into
rcll
decb
shlb
or
mov
pusha
xchg
jne
mov
add
sbb
imul
pop
sub
outsl
loopne
or
iret
ss
test
pop
cmp
mov
arpl
dec
jo
mov
lret
inc
es
les
adc
pop
cld
fst
sub
and
mov
ja
aas
fcoml
inc
or
fwait
push
mov
xchg
cli
aas
imul
lds
jne
loop
movsb
repnz
adc
fidivrs
fldt
fwait
mov
or
and
loop
ljmp
push
jp
jle
iret
out
and
mov
div
push
sarb
jle
cmp
repz
pop
inc
add
iret
xor
add
and
call
inc
pop
test
jbe
lods
push
cmp
pop
cli
mov
roll
xchg
test
fisubrl
jecxz
or
pop
int3
cmpsb
mov
pop
and
scas
out
inc
add
mov
fcmovne
ja
push
add
test
imul
dec
repnz
shll
into
mov
cmpb
pop
int
mov
cmp
fwait
stos
or
out
repz
cmc
dec
add
icebp
mov
fwait
or
lea
ficompl
aam
lods
push
int
xchg
and
xchg
push
sbb
out
lahf
fwait
test
xor
push
ds
sbb
fwait
das
shll
fistl
sub
out
xchg
insb
rorl
in
mov
sbbl
lods
xor
fsubp
jge
jns
sbb
mov
jmp
jg
cmc
push
cmp
jge
cld
push
test
out
js
fwait
pop
add
enter
rcl
sti
xor
xor
lock
mov
repz
inc
add
mov
mov
and
sub
jno
movb
jp
repnz
bound
movsb
dec
xchg
xchg
cwtl
jno
xor
in
aas
ret
wrmsr
sti
and
sbb
xor
test
call
clc
sub
lock
repnz
mov
xor
rcrb
jno
mov
cmp
mov
sub
repz
xor
rcr
clc
xor
rcl
test
fwait
or
les
mov
mov
loope
and
loop
js
xlat
lods
fwait
fsubr
cmp
or
mov
inc
loop
xorl
clc
scas
mov
jae
test
sti
and
fisttpl
and
jne
jge
mov
sbb
es
fisubl
arpl
or
gs
jb
sti
mov
pop
mov
inc
lea
stc
inc
jg
mov
mov
and
inc
xlat
in
pop
xlat
imul
pop
outsl
push
xchg
roll
fs
inc
mov
aas
jne
pop
setp
push
icebp
stos
out
or
pop
mov
movsb
pop
jbe
or
les
repnz
arpl
clc
dec
xchg
out
or
jae
fs
inc
or
test
insb
lret
insl
pop
fdivrl
mov
push
xor
or
stos
fyl2xp1
mov
dec
les
sbb
arpl
sbb
iret
xchg
cmp
dec
inc
nop
test
loop
mov
adc
jecxz
cmp
add
add
test
sub
mov
jg
sub
dec
mov
out
je
push
scas
iret
lds
jl
gs
fisttpl
in
mov
pop
adc
cmp
ja
sub
jae
rcll
clc
scas
dec
in
add
sbb
ljmp
inc
dec
fistl
mov
sub
movsl
in
mov
loop
inc
das
xor
push
negl
in
jbe
ror
scas
cld
mov
test
push
nop
jmp
popa
sbb
fwait
cli
cmp
out
add
repnz
jbe
lahf
pop
sbb
ret
in
cli
es
hlt
aaa
mov
fisubl
dec
ja
cmp
ret
iret
ja
popa
aaa
add
fistpl
add
pop
push
xchg
aad
add
jbe
mov
adcl
notb
pushf
cmp
xchg
adcl
pop
repz
sarl
iret
xchg
outsb
push
mov
mov
jbe
add
ljmp
xor
mov
lcall
inc
mov
lret
pop
xor
xchg
mov
xor
jno
lock
in
cmp
mov
inc
jae
icebp
sbb
mov
xchg
xor
cmc
lods
test
test
fwait
out
sub
jnp
pop
scas
out
dec
dec
xchg
aam
lea
fsub
fldt
in
call
pusha
ds
jne
arpl
mov
dec
lret
fwait
pushf
dec
cli
add
lahf
pop
ficompl
fs
cmp
outsl
hlt
push
dec
or
mov
pop
mov
cmc
in
xor
mov
and
out
emms
shrl
js
dec
cmp
in
adcl
xorps
sti
sbb
into
movsb
xchg
or
aaa
or
lods
and
mov
jne
jg
ja
push
mov
rclb
or
ja
arpl
popf
mov
and
xchg
loop
mov
movsb
sub
pop
xchg
or
imul
pop
in
inc
aam
pop
cmp
aas
mov
std
sahf
jmp
push
jge
neg
jmp
es
loopne
and
lods
mov
jae
cmp
fwait
stos
test
adc
fwait
rcrb
ss
mov
lahf
ja
ja
or
mov
aas
and
das
popf
incb
mov
ror
lods
int3
iret
cli
dec
push
movsb
cmp
popf
jl
clc
or
loopne
and
jns
jl
imul
inc
cmpsl
pop
out
sub
push
out
pop
fisubrs
mov
mov
fwait
int3
rclb
ret
dec
stc
xchg
mov
mov
ret
sbb
pop
push
movsb
cmpsl
jecxz
into
ljmp
in
and
jmp
nop
jg
mov
mov
xlat
inc
lret
repnz
jge
cmp
in
fsub
shr
in
loop
jbe
ljmp
push
mov
inc
popf
popa
dec
imul
stos
cld
pop
jbe
repz
hlt
cs
mov
ret
loope
enter
movsb
aaa
jno
popf
push
dec
adc
test
inc
out
aaa
xor
lods
clc
popa
nop
push
jo
pop
loopne
subl
inc
xor
lret
sub
sbb
mov
movsb
out
rol
jbe
mov
mov
mov
call
daa
cmp
jnp
in
push
xor
rcrb
mov
mov
ljmp
stos
negl
mov
loop
ret
rcrb
inc
xchg
lods
mov
pop
sbb
jge
bound
test
stos
ss
jmp
fdivrs
sti
js
cli
push
push
rcrl
push
enter
jmp
fwait
sar
lods
or
jle
nop
and
jmp
in
cld
movsl
mov
daa
mov
fstl
or
fiaddl
push
pop
mov
pop
or
cmpsb
std
adc
jbe
add
lods
loop
sbb
xchg
or
test
sarl
dec
mov
int3
leave
stos
jecxz
fildl
mov
aam
cltd
pusha
add
jno
jns
sti
ljmp
inc
xor
icebp
rolb
fwait
sub
jae
mov
imul
dec
mov
add
mov
sub
or
xchg
add
movsb
mov
inc
ljmp
std
push
jns
rcrb
adcb
lock
inc
dec
or
mov
mov
sahf
scas
mov
fnstsw
and
mov
adc
inc
cmc
adc
and
aaa
scas
cmp
xchg
shlb
jecxz
ror
shl
and
push
gs
add
jo
cmp
ds
cmc
cmp
add
leave
sbb
es
push
jno
push
jae
mov
inc
jne
jnp
lcall
ja
mov
mov
mov
andb
jne
mov
push
fldt
jge
adc
out
aaa
sbb
sarl
mov
jecxz
stc
mov
pop
cld
gs
cmc
cmpb
into
dec
les
push
adc
popf
pop
mov
jns
push
pop
shl
xchg
xor
loopne
hlt
mov
sub
fwait
jmp
xor
je
or
sub
lret
ret
inc
and
rol
movsb
inc
pop
test
add
iret
or
or
int3
ret
fldcw
nop
pop
out
sub
ljmp
mov
cmp
or
fwait
call
sti
push
aad
cmpb
lcall
lods
sub
sbb
jmp
dec
movb
iret
dec
aad
jge
shll
lods
clc
loop
cli
mov
push
mov
scas
dec
fcmovne
pop
bound
in
sti
and
sub
pop
and
jmp
or
pop
iret
icebp
add
sarb
cmc
popa
fwait
outsb
xchg
xor
out
cmp
imul
xchg
dec
popa
fisttpl
lcall
push
mov
bound
lea
xchg
mov
lods
jl
ds
or
and
add
inc
pop
loop
push
jnp
and
fistl
cli
outsl
jle
es
lret
push
gs
inc
xchg
bound
cs
addr16
scas
inc
icebp
shlb
xchg
dec
fcoms
popa
stc
mov
ret
shlb
insl
out
inc
cld
ficoms
sti
lret
jp
vorps
repnz
jmp
inc
xor
loop
ljmp
sub
mov
sub
ficomps
aaa
fadd
push
push
popf
popa
cmpsb
mov
push
pop
in
adc
cwtl
hlt
sub
mov
push
pop
pushf
ret
stos
lea
sub
push
push
leave
xchg
sub
xor
push
add
insb
mov
push
jl
in
push
arpl
xchg
dec
out
xlat
mov
add
lahf
or
push
das
cwtl
into
sbb
push
in
sbb
xchg
push
cmc
or
aam
jno,pn
xor
aas
fisubrs
cs
mov
pop
sahf
mov
js
dec
push
mov
xchg
push
xchg
mov
add
pmaddwd
or
mov
cmc
mov
sti
mov
push
pop
mov
aam
dec
icebp
sub
rol
rclb
push
popa
iret
ret
mov
mov
lock
frstor
xchg
mov
sahf
push
push
xchg
out
iret
fmull
pop
std
std
fwait
test
repz
popa
adc
je
mov
lods
pop
lods
imul
and
js
in
inc
cmp
imul
imul
push
lds
fwait
sub
dec
stos
inc
mov
push
sbb
rclb
sar
push
shl
shll
cmp
loopne
push
cld
jo
mov
sbb
mov
loope
test
std
bswap
cmp
lret
icebp
or
mov
inc
pop
sub
jnp
xchg
xor
fwait
push
mov
dec
pop
gs
mov
adc
push
pop
scas
dec
lods
mov
jns
xor
out
mov
and
in
dec
pop
loop
enter
pop
jecxz
pop
mov
and
cmp
mov
das
stc
pop
xor
pcmpgtw
incb
popa
push
cmc
clc
sti
clc
pop
mull
lock
test
lods
jl
cmp
or
add
sbb
xor
leave
cli
mov
stos
out
jge
lods
push
jle
rep
pop
jb
or
adcl
cmpsl
jmp
loope
lods
adc
lods
out
scas
js
mov
xchg
dec
sti
pop
divl
xlat
movsb
mov
mov
shl
test
jle
lods
mov
fnop
stc
scas
jne
and
jl
pslld
dec
mov
les
jnp
cmc
ss
in
mov
sbb
or
int3
arpl
adc
and
dec
movsb
push
xor
shrl
dec
ds
nop
sbb
sub
cli
jmp
psraw
in
fwait
lea
inc
cld
stos
cmpl
mov
nop
sbb
fistpl
pop
sti
mov
sub
add
mov
imul
or
int3
jl
mov
ret
push
lods
push
push
pusha
dec
jne
fistpll
mov
sub
out
ja
sbb
data16
fwait
insb
xor
and
je
repz
sbb
or
das
xchg
cmovnp
das
test
jmp
dec
pop
in
in
jecxz
in
jbe
mov
ret
push
or
mov
fistps
or
inc
cld
cmp
push
bound
and
pushf
dec
out
cmp
xor
and
push
std
aas
popl
out
dec
shl
xor
arpl
mov
mov
cmp
hlt
xchg
adc
scas
adc
cwtl
test
fwait
iret
fisttps
mov
push
xlat
shll
xor
dec
jno
and
jb
mov
loop
xlat
sub
sbb
out
jne
insb
cmp
and
push
outsl
repz
jnp
cld
call
xchg
jae
cmp
mov
mov
jae
mov
std
mov
jmp
scas
push
sbb
xor
jl
fwait
mov
pop
in
gs
cld
xor
hlt
dec
xchg
and
or
mov
xchg
in
sbb
aaa
add
and
adc
insb
push
div
mov
lds
in
fistpl
or
mov
sbb
adc
xchg
movsb
icebp
adc
adc
stos
aas
mov
pusha
xor
and
in
sti
in
or
cmp
shlb
cltd
pop
xor
adc
imul
aam
sarl
stos
jae
xchg
xchg
popf
or
mov
mov
and
loop
xchg
push
or
aas
and
pop
jae
xor
mov
mov
loop
jge
push
cmpsl
add
inc
xchg
ja
bound
pushf
movb
fidivl
loopne
xchg
push
xor
mov
jg
mov
sbb
call
push
and
add
and
jge
mov
xchg
push
push
cli
pusha
fldt
jl
ja
cmc
mov
lcall
pop
push
or
lds
pop
adc
movsb
cmp
imul
pop
push
fistpll
mov
xor
cltd
cli
andb
mov
inc
sbb
adc
sub
jo
dec
scas
mov
sarb
cltd
jnp
mov
iret
mov
mov
push
mov
movb
fstpt
jne
inc
les
jecxz
jle
and
xchg
test
loop
std
lods
push
mov
idivb
cmp
icebp
fwait
aam
dec
test
addr16
sub
jge
mov
ss
dec
adc
jl
dec
ss
jne
out
mov
mov
dec
psubsw
mov
mov
and
je
dec
xor
sbbl
scas
lods
popf
sti
xchg
cs
mov
std
test
inc
and
or
test
sbb
xchg
into
jg
push
ja
add
aam
mov
or
jb
jae
mov
ja
popa
fldl2t
popf
ret
jbe
xchg
push
mov
mov
and
loopne
mov
shrl
sbbb
jl
imulb
lahf
loope
fildl
pop
cld
stos
cltd
xchg
sub
inc
and
sti
in
adc
jmp
push
adc
add
sbb
push
inc
push
xchg
add
mov
rcrl
test
iret
cmp
fimull
sbb
mov
fistps
fdivs
inc
outsl
and
sub
sbb
pop
push
inc
outsl
add
sahf
dec
rcrl
popa
loopne
jmp
sti
adc
mov
cmp
xchg
imul
pusha
cltd
pop
into
inc
xchg
sub
xor
int
pushf
pop
cmp
inc
subb
jg
xchg
mov
mov
xor
divl
test
jnp
int3
and
xor
lods
jle
rorl
dec
xchg
mov
fwait
add
dec
push
cmp
and
test
mov
or
fisttpl
dec
popf
add
mov
popa
outsl
mov
mov
push
fscale
fldenv
fwait
xchg
inc
movsb
fistl
mov
cld
cmp
mov
shl
add
push
fdivrs
xchg
add
aas
std
imul
repnz
sahf
cmc
movsl
push
cs
insb
jge
int
cmp
ljmp
xchg
push
sub
mull
pop
fsubrl
sbbb
fwait
and
repz
inc
std
jno
rclb
jns
enter
popa
sbb
inc
pop
adc
push
test
in
aas
pushf
sbbb
and
cmp
adc
fldt
sbb
mov
aad
mov
adc
sub
jg
les
mov
push
jl
stos
jb
pop
mov
callw
add
mov
cmovle
xor
add
popa
fwait
out
push
sub
pop
lds
or
xor
cmp
xor
and
inc
mov
xor
xchg
jne
fwait
out
shlb
jecxz
in
test
lea
ss
fldt
aad
cmp
jl
sbb
repz
icebp
ja
push
out
mov
dec
sahf
xor
cmc
cmc
inc
adc
adc
shl
jno
jb
les
xchg
cmp
xorb
sbb
lret
inc
xchg
js
mov
xchg
fwait
push
iret
inc
shl
test
or
push
jb
xor
cmc
jnp
fcmovnb
jp
adc
repnz
andl
xchg
push
clc
cmp
push
out
push
out
add
test
ja
sub
stc
xchg
sbb
insb
adc
lods
sbb
fmul
pop
aas
inc
inc
stos
jp
gs
cli
jecxz
mov
in
jecxz
insl
jge
push
in
xor
movsb
pop
loope
call
rcll
arpl
xor
sub
push
push
rolb
mov
inc
test
pop
fadds
sub
cmc
mov
ret
mov
dec
fs
stc
xor
sub
cmp
xchg
jb
jmp
fwait
lods
push
or
inc
or
and
dec
insl
sbb
xchg
or
clc
arpl
mov
sub
aad
xchg
push
lret
iret
mov
enter
mov
cmp
fldt
and
jl
hlt
jmp
mov
or
sub
add
cltd
sti
arpl
cmp
repnz
sbbl
addb
repnz
and
add
dec
fwait
es
pop
pop
push
dec
and
and
mov
mov
ret
jl
and
imul
fsubs
rorl
rcrb
orb
fsubl
repz
pop
imul
jp
out
adc
xor
fwait
shll
mov
int
cmc
sti
lea
push
popf
xor
push
incl
adcb
sbb
jl
outsb
lods
jbe
fwait
push
xlat
icebp
xchg
test
adc
cs
lret
in
fimuls
sub
push
sbb
mulb
ds
mov
or
jne
call
push
notb
add
js
add
cmp
add
xchg
notl
inc
xchg
aam
pop
cmp
jecxz
jne
arpl
sbbl
inc
pop
mov
lods
ret
ret
sub
mov
in
adc
lods
sbb
loope
les
lcall
adc
in
mov
add
scas
push
xchg
jmp
fmuls
push
scas
je
mov
and
push
pop
fwait
outsl
lahf
xor
dec
loope
pop
dec
dec
addr16
out
cmpsl
mov
cmpsb
or
fists
sbb
popf
cli
stc
cmp
jge
push
jle
push
pushf
cld
stc
xor
adc
mov
lods
pop
ljmp
nop
mov
arpl
cmc
push
xchg
in
pop
xchg
mov
pop
xchg
cmc
mov
dec
aam
jae
and
rcrb
movsb
or
mov
push
mov
cmp
lahf
rcl
fsubs
ja
jecxz
lcall
out
jae
nop
ret
push
clc
fcom
icebp
fucomi
mov
pop
movsb
pop
sub
pop
aaa
mov
fbld
inc
adc
aaa
sub
and
sub
iret
push
and
inc
repz
mov
and
pop
push
fisubrl
enter
dec
or
add
out
sbb
push
ss
mov
fcomi
dec
mov
pushf
nop
ffree
xchg
lret
add
pop
xchg
push
inc
in
imul
aaa
push
enter
push
addl
cmp
inc
lret
add
enter
lods
mov
xchg
jb
in
sti
mov
cmc
cmp
xchg
push
arpl
pop
sbb
add
out
ret
or
mov
pop
cmp
pop
jbe
sub
push
adc
rclb
pop
sub
adc
sub
xchg
mov
pop
mov
push
xchg
inc
push
inc
mov
lea
mov
xchg
dec
scas
rorb
mov
cmpsb
inc
rorb
ljmp
xchg
jmp
fildl
in
sub
sbb
pop
ret
add
and
incb
sti
mov
mov
sti
mov
jmp
stos
movsl
lods
movsb
xlat
jne
jnp
ss
pop
inc
cmc
xchg
add
push
mov
fwait
mov
jge
and
data16
popa
push
xchg
and
fmull
call
int
cmc
fwait
cld
repz
xorl
sahf
jl
aaa
or
xchg
and
and
xchg
cmc
mov
and
les
push
lret
out
ret
call
movsb
popf
mov
xor
popf
and
lods
shlb
negl
mov
xchg
out
cmp
mov
cld
adc
fnsave
cmp
add
push
and
cli
test
add
mov
fistl
sti
pop
xor
mov
movsb
dec
xchg
sbb
divb
mov
inc
pop
xchg
jae
lock
xchg
sub
xor
push
arpl
jne
pusha
sbb
xor
mov
cmc
cmp
sti
pop
iret
aaa
sub
jle
adc
jmp
fwait
jmp
mov
push
push
loope
mov
pop
push
or
lock
loope
xchg
scas
push
push
cmp
out
rolb
push
sbb
cmp
cs
pop
jl
and
fcmovu
xchg
repnz
rcr
stc
imul
jno
call
cmc
mov
idivl
lret
and
sbb
cmc
mov
pusha
lcall
dec
mov
mov
insb
sbb
add
fcomi
fdivrs
lret
loopne
dec
scas
push
pop
cmc
mov
rclb
fwait
lds
repnz
push
lock
xchg
jo
xchg
sahf
add
dec
sbb
les
cmc
shrl
mov
in
sti
lock
fiadds
call
out
inc
sub
cltd
mov
dec
dec
xor
xor
and
sub
idiv
cmp
pop
inc
hlt
add
lds
cmp
repz
pop
push
xlat
pop
in
inc
adc
and
jb
or
in
cmc
les
pop
cvttps2pi
dec
dec
movsb
cmp
jecxz
std
daa
movsl
fstp
iret
fistps
lret
out
lock
mov
add
std
ss
mov
loopne
mov
loopne
icebp
push
add
adcb
and
or
addr16
jecxz
shl
push
leave
mov
push
fstps
add
add
repz
mov
pop
in
cli
mov
fisttpl
dec
xlat
mov
mov
call
andl
jg
rorl
int3
lods
sbb
mov
add
andb
lret
inc
mov
mov
nop
xor
int
sub
mov
mov
xor
in
cwtl
mov
pop
or
push
adc
cmp
outsl
pop
dec
mov
sbb
mov
fildll
sub
add
mov
add
bswap
lods
cld
fcompl
mov
sbb
mov
or
jae
mov
fistl
adc
mov
cmp
fwait
cld
int3
sahf
push
mov
add
xor
adc
into
lret
lods
push
dec
mov
lods
lds
pusha
mov
sti
je
andb
repz
negb
bound
addl
jecxz
jg
stos
jle
dec
push
jnp
push
jle
sti
call
inc
int3
iret
xchg
hlt
pusha
mov
cmpsb
xor
cmp
and
mov
push
xchg
insb
sbb
mov
pop
jecxz
inc
enter
adc
and
leave
test
xchg
or
aam
aam
loop
lret
jne
cmp
pop
inc
out
cmc
sbb
fisubrl
push
mov
xor
xor
dec
jp
add
cmp
imul
lahf
and
sub
loope
jbe
xchg
lock
inc
cmp
sbbl
jne
sub
subb
pop
rclb
movb
jbe
adc
ja
js
push
mov
and
fistps
cmc
repz
pop
sub
or
pop
shrb
push
add
test
sahf
inc
cld
test
push
mov
in
fmuls
mov
mov
sahf
pop
xchg
ja
sbb
mov
jmp
enter
icebp
lret
ret
ss
cmp
and
std
sbb
mov
pop
add
adcl
push
shrl
pusha
into
icebp
in
int
mov
jbe
dec
mov
dec
lahf
in
cmpsl
fistl
idivb
sar
jl
xchg
dec
lods
inc
sti
mov
mov
and
cmp
test
sbb
cwtl
inc
pop
iret
lods
imul
push
rol
sahf
cmp
mov
cmp
jae
dec
ret
mov
rolb
mov
arpl
xchg
sub
mov
fnstsw
mov
cmp
cmp
inc
push
dec
mov
sub
push
push
imul
mov
sbbl
in
std
inc
test
jmp
inc
add
clc
bnd
dec
ret
lret
mov
iret
out
orl
sti
scas
popa
xor
rorl
loope
sub
shrl
or
aad
fldt
adc
inc
push
sti
test
repnz
jbe
in
repnz
fisttpll
mov
into
xchg
jecxz
fninit
fbld
orb
lock
jge
sbbl
dec
sahf
sbb
out
les
ja
add
jbe
add
push
mov
mov
lods
fstpl
stos
mov
adc
je
push
adc
cld
inc
aam
enter
outsl
pop
xor
dec
or
push
popl
shlb
aam
fwait
in
insb
push
mov
scas
into
fsubl
sbb
mov
mov
fwait
popf
mov
loope
addb
lods
adc
xorb
mov
jecxz
loope
sbb
sub
jp
stos
pop
fcomps
and
dec
jmp
mov
int
enter
in
test
jb
ret
stos
mov
cmp
jno
xchg
fwait
xchg
icebp
mov
clc
mov
mov
mov
push
mov
pop
and
popf
and
dec
repz
dec
insb
cs
adc
fmul
inc
add
lret
mov
imul
ret
stos
and
loop
pop
adc
xor
push
adc
push
jbe
or
push
fucomip
xlat
add
xchg
mov
mov
sahf
mov
pop
fwait
dec
pusha
pop
cmp
int3
add
xor
jns
pop
adc
mov
mov
loopne
cld
call
mov
mov
sahf
daa
cmp
jno
jbe
xor
add
imull
mov
fstl
or
fwait
loop
xchg
xchg
inc
mov
iret
push
clc
sbb
jb
lret
sub
pop
xlat
mov
pop
jg
loope
inc
mov
ja
popa
pop
or
xor
mov
cmp
xchg
inc
cmp
or
int
xchg
adc
dec
mov
push
jl
or
fsts
repz
cvtpi2ps
or
icebp
int
clc
fldt
cmp
push
filds
jecxz
movsb
mov
push
mov
push
ror
cmpsl
cli
ja
outsl
add
test
hlt
roll
rclb
pop
push
fneni(8087
lods
imul
cmpb
mov
stos
insl
cld
ret
aaa
call
add
push
sbb
repz
push
orl
neg
lock
dec
push
fwait
cltd
pop
sbb
imul
sub
sbbb
aaa
sbb
mov
fstpt
cmp
or
stos
clc
and
xlat
mov
mov
lock
lret
xor
xor
rcrl
or
pop
scas
mov
jnp
mov
inc
mov
loope
fwait
arpl
mov
imul
shll
test
lahf
mov
push
iret
sub
sub
je
sub
mov
jnp
add
dec
popf
sub
ret
jnp
xchg
out
fs
and
popf
mov
mov
test
insb
xchg
mov
and
mov
fucomip
dec
pop
insb
cmc
mov
js
mull
inc
shll
xor
dec
loop
dec
xor
pop
insl
js
mov
inc
subl
hlt
mov
inc
aam
xchg
or
or
or
sbb
pop
sti
aaa
sub
cmp
jmp
repnz
mov
fs
jl
iret
repz
xrelease
push
cwtl
movsb
jno
adc
lea
lret
pop
out
ljmp
adc
jp
or
add
mov
cmpsb
enter
in
out
stc
les
fstpl
stc
fldt
popf
jno
inc
cli
sbb
in
testb
fistpl
test
aaa
dec
test
aam
or
sbb
or
adcl
ret
dec
dec
sub
popa
idivl
dec
push
pop
repz
popa
test
fbld
push
sbb
ja
and
aam
push
push
mov
sbb
out
stos
mov
and
test
imul
cmpsb
xchg
movb
mov
int3
imul
or
xor
mov
jno
test
stos
mov
orl
test
cmp
jp
sbb
xchg
sahf
xorl
movsl
test
dec
adc
repz
ljmp
fsubrl
push
push
lds
push
pusha
lcall
mov
mov
jl
testl
sub
in
orb
mov
pop
adc
or
fimull
fadd
mov
cld
dec
pop
pop
ljmp
mov
and
mov
sbb
xor
fwait
es
sarb
inc
enter
xor
in
fwait
mov
adc
inc
call
xor
pusha
inc
sbb
fwait
scas
mov
lret
in
out
or
addb
xchg
fwait
cmc
mov
sub
popf
sti
mov
jae
pop
dec
inc
out
cmp
xor
dec
add
jmp
std
sbb
xchg
jae
loop
gs
aam
mov
push
xchg
cmc
mov
repz
call
shrl
rolb
movsb
add
scas
mov
mov
or
mov
sarl
push
pop
aam
mov
cli
jecxz
incb
mov
mov
sti
sbb
clc
fistpl
push
cmp
lods
iret
icebp
sarb
loopne
lods
insl
fisubs
jae
xchg
mov
mov
push
push
fimuls
adc
add
stos
cmp
orb
adc
mov
adc
dec
add
mov
cmpsb
sbb
scas
mov
test
jae
pop
cmpl
jecxz
mov
fldt
fwait
arpl
mov
pop
in
jl
addl
insl
mov
sub
scas
dec
mov
sbb
jae
lahf
sbb
les
lcall
fistl
or
xor
pop
popa
mov
shl
mov
adc
fwait
repnz
mov
jmp
dec
cld
lods
cmpsb
repz
rolb
sub
lods
jns
shrl
fs
jle
ss
mov
lods
iret
stos
idiv
adc
push
bound
cs
push
xchg
inc
loop
fwait
or
push
cmp
push
popf
push
adc
fwait
sub
in
in
add
outsb
lods
xchg
or
add
sub
icebp
mov
cld
in
insl
jae
loopne
xlat
in
push
shl
mov
jo
dec
fidivl
fwait
cmp
out
inc
movsb
push
icebp
xor
sbbb
leave
push
xor
pop
or
aaa
fwait
aas
out
cltd
and
jecxz
clc
mov
enter
jno
mov
sahf
push
std
sti
add
pop
add
testb
mov
xchg
out
in
pop
jae
gs
clc
push
outsl
sarl
mov
in
and
pop
jmp
lds
loopne
xchg
and
hlt
mov
pop
loopne
push
jae
shl
mov
inc
push
hlt
pop
dec
mov
sarb
test
gs
push
fnstenv
xor
or
and
inc
mov
fisttpl
inc
jae
in
and
out
stos
jo
inc
hlt
push
jb
pop
push
mov
adc
or
shll
xchg
adc
pop
adcb
sti
scas
cmc
mov
std
cmpsb
sub
jae
and
mov
sti
movsb
add
fs
cmp
mov
imul
sti
clc
push
aaa
jbe
in
xchg
bound
add
mov
jge
xchg
pop
adc
xchg
or
add
icebp
push
cld
or
push
pushf
add
mov
sbb
shll
imul
mov
leave
jle
xchg
sbbl
das
mov
loop
lods
cmp
fimull
fsub
out
js
mov
imul
pop
lock
lret
add
pushl
xchg
subl
xor
sbb
xchg
repnz
add
or
jge
fs
sti
xchg
test
test
ds
jbe
imull
fdivrl
and
bound
pop
xchg
xor
lods
int3
and
into
mulb
push
addr16
cmp
sahf
pop
sub
out
xchg
add
ds
adc
out
out
xchg
fucomp
cwtl
into
loopne
fstpt
pop
aas
sbb
jae
pop
fwait
mov
jo
and
mov
cs
in
or
or
jmp
icebp
std
movsb
or
xchg
stos
nop
insl
mov
ret
sub
jo
push
inc
inc
push
mov
fwait
push
push
mov
push
mov
inc
aaa
js
andl
jae
mov
std
dec
into
ljmp
sub
iret
pop
sarb
and
push
pop
in
and
mov
mov
popf
jl
into
or
jnp
rcrb
ret
mov
test
mov
push
shrb
in
fstpt
into
out
or
fwait
andb
rolb
adc
inc
push
repnz
orl
cmp
out
call
push
int3
add
adc
sti
mov
out
stos
scas
jne
dec
nop
ret
add
mov
xchg
ja
sbb
aad
mov
jle
inc
clc
movb
pop
loope
jge
loopne
sbb
or
xchg
dec
jmp
nop
sub
mov
pop
xchg
ret
push
dec
es
fisttpl
sbb
dec
repnz
fidivrs
mov
mov
outsb
pop
or
cmc
pop
sbb
ljmp
repz
jae,pt
test
shll
add
pop
std
xor
sub
std
add
ror
fildl
inc
or
cwtl
sti
xor
inc
std
pop
push
dec
loop
out
pusha
cwtl
pop
mov
in
mov
xor
mov
popa
xchg
adc
jecxz
pop
inc
mov
mov
and
scas
xchg
xor
sbb
ds
addl
out
sahf
cmp
push
push
push
pop
push
lahf
xchg
inc
outsb
sahf
push
lods
pop
fildl
fistps
jae
xor
or
jae
push
jnp
cmpb
lods
cmc
cwtl
or
jge
sti
lods
sub
cmc
cmp
movl
in
pop
iret
popa
or
cmc
pabsd
insl
sub
dec
iret
xchg
in
outsl
xchg
repz
push
mov
cs
insl
fwait
imul
jns
xor
out
fidivrl
pop
mov
mov
lods
pop
cs
add
jo
and
xchg
sub
lret
sarb
mov
aaa
add
cmpsl
jg
or
lret
cld
outsl
cli
jg
dec
xchg
test
xchg
dec
enter
in
mull
enter
sbb
jno
inc
push
jbe
dec
cmc
mov
hlt
test
and
lret
sub
jp
cld
imul
ja
pop
mov
fsubl
mov
pushf
xchg
aam
xchg
jmp
shl
addr16
or
cmp
bswap
xor
sbb
cwtl
stc
jle
dec
inc
insb
cmpb
xor
pop
sbb
xor
fs
in
mov
mov
lret
nop
jp
pop
ljmp
gs
xor
std
fimuls
sub
movsb
mov
dec
pop
movsb
data16
out
mov
jbe
imul
cmp
aam
out
xor
jmp
popa
push
jne
mov
and
cmpsl
repz
dec
repnz
push
xchg
or
pop
testb
xlat
sbb
jne
shrb
js
fldcw
movsb
int
mov
lcall
xchg
xor
sahf
cmpl
jecxz
and
xchg
fwait
mov
hlt
iret
lods
out
icebp
xchg
pop
faddl
cmpsb
sub
push
push
andb
js
or
add
add
inc
xchg
pop
divl
sub
cmp
add
pusha
divb
and
jbe
mov
mov
movsb
movsb
inc
cli
daa
std
mov
arpl
test
xchg
int
filds
and
mov
fadds
movsb
cltd
int
add
icebp
sub
scas
jae
pop
add
inc
divb
fsubl
push
inc
jb
cld
sbbl
push
popf
lret
sti
mov
or
sar
push
divb
mov
pusha
lret
or
or
xor
dec
xchg
sbb
mov
pop
xchg
cltd
pop
ret
mov
jnp
test
fistps
shll
dec
insl
mov
pop
sub
adc
or
or
cmpl
pop
xchg
enter
icebp
mov
lahf
jne
lds
push
subb
pop
and
sti
out
inc
or
push
gs
call
pop
jne
lret
and
icebp
scas
jmp
bound
adc
push
cwtl
pop
nop
lods
lret
and
daa
jge
push
fstpt
in
dec
popa
fwait
pop
daa
mov
adc
push
subl
repz
loope
std
mov
movsb
add
adc
inc
and
mov
or
jp
mov
in
aaa
mov
sbb
inc
and
les
push
push
adc
les
rcr
mov
loope
repnz
popa
pushf
dec
mov
out
jo
sti
mov
clc
les
xchg
outsb
js
or
frstor
cmp
ja
push
cltd
sbbl
leave
sub
ds
ss
inc
mov
test
jecxz
xchg
sub
ljmp
mov
clc
clc
fs
in
mov
popf
and
mov
int
push
dec
orl
sti
or
mov
lods
mov
xor
pop
xchg
pop
cmpsl
and
es
out
add
sub
addr16
cmp
dec
dec
or
test
jno
fmul
xchg
ljmp
pop
xor
adc
iret
aad
dec
inc
ret
sub
push
into
mov
ja
sub
and
lahf
addr16
jo
push
lods
cwtl
aam
xor
lds
test
mov
cmp
flds
call
lcall
pop
mov
sub
add
mov
gs
pop
mov
stos
imul
ret
enter
fidivl
xchg
outsl
sarb
pop
lock
dec
in
jle
push
dec
mov
movsb
lahf
or
cmp
xchg
pop
adc
popa
sub
out
es
in
cmp
ror
clc
pop
add
ds
ror
push
lcall
movsb
xchg
sub
inc
and
adc
sbb
pushf
movsl
divl
in
cwtl
inc
fstp
aaa
clc
xchg
in
lods
test
iret
inc
inc
add
add
pop
push
mov
bound
pop
int
enter
push
adc
int3
ret
sar
leave
add
stos
inc
pop
movsb
sbb
popa
adc
inc
cmc
xchg
popf
shl
dec
pop
sar
cmc
bound
xchg
pop
rorb
mov
in
xor
jb
adc
lret
jecxz
mov
test
in
rcrl
jecxz
je
sbb
pop
test
pop
iret
in
pusha
sbb
cmpsb
cli
sbb
pop
push
mov
cmp
inc
sbb
or
push
dec
sbb
data16
push
and
mov
fucom
inc
sub
les
mov
repz
movsb
in
jo
fdivs
xchg
sbb
les
mov
dec
mov
outsl
je
es
pusha
dec
in
mov
adcl
stc
ret
pop
repnz
inc
inc
mov
dec
push
sbb
shlb
mov
cmp
xlat
jecxz
in
std
inc
mov
pushf
mov
in
inc
jecxz
mov
jecxz
push
sbb
les
insl
mov
lock
and
mov
je
xor
or
mov
arpl
vpminub
push
xor
ret
push
dec
sbb
push
fmuls
sub
movsl
jecxz
in
sub
movsl
adc
aad
mov
out
mov
popf
iret
not
fst
shll
enter
les
das
lcall
imul
je
pop
ret
insb
cmp
pop
std
iret
mov
or
call
push
mov
inc
sub
dec
push
stc
aas
mov
lret
adc
jae
jne
loope
data16
movsl
and
jmp
mov
jmp
mov
iret
mov
fdiv
mov
in
decl
sbb
mov
pop
loope
mov
int3
clc
sar
pusha
inc
sbbl
fldenv
add
inc
jns
in
rolb
jae
in
mov
in
adc
enter
add
push
fcomip
mov
pushf
mov
jb
xor
in
fdivrs
mov
sbb
jmp
mov
and
popa
cmpsb
shl
inc
daa
pop
xchg
sahf
fidivl
jmp
outsl
dec
test
test
shr
inc
xchg
iret
pop
out
jne
in
loop
and
xchg
jge
iret
mov
rolb
jg
imul
push
mov
pop
insb
movsl
and
repnz
in
jle
mov
insb
sbb
xor
dec
lcall
je
fimuls
mov
xor
adc
or
fdivs
shl
jmp
pop
mov
sbb
lret
push
mov
mov
orl
scas
sbb
jne
pop
popa
sti
stos
push
and
test
scas
and
push
jl
leave
cmpsl
jns
insl
jecxz
mov
aad
adc
or
mov
sar
and
dec
mov
xchg
adc
jl
xchg
popf
cmp
xchg
or
sbb
inc
movb
jmp
gs
and
sbb
aaa
inc
cmpsl
test
adc
jno
pop
je
sbb
xchg
jo
inc
push
jae
xor
xor
mov
lods
jmp
add
aad
pop
fstpl
ret
mov
xor
mov
cli
ret
sbb
cmp
subl
sub
sbb
mov
and
sub
pop
aam
sbb
out
add
dec
imul
adc
jmp
test
testl
or
sbb
stos
pop
and
fld
add
lret
mov
sbb
push
fwait
divl
cmp
jmp
popa
in
dec
mov
movsl
jle
pop
in
pop
jns
cwtl
popf
and
cmp
inc
jno
fucom
dec
nop
stc
or
add
push
test
jnp
sbb
xchg
or
sbb
mov
adc
into
fdiv
popa
repz
add
sbb
push
imul
and
stos
mov
ret
add
pop
push
and
daa
test
sub
sbb
dec
fisubl
xchg
mov
cwtl
cmp
push
sbb
add
sbb
pop
adc
icebp
std
aaa
iret
or
xchg
xor
shr
xchg
stos
les
std
add
or
lods
clc
imul
in
jo
pop
xor
popa
sahf
out
in
xor
and
sbb
inc
cmp
fbld
sbb
jecxz
rol
xor
stos
inc
bound
popa
cs
cmp
cltd
aad
xchg
sbb
jle
or
cwtl
aad
int
jno
pop
sbb
jmp
movsb
and
int3
popa
pop
pop
pop
mov
lea
fsts
in
sbb
mov
mov
xor
mov
sub
mov
push
in
shll
movsl
les
sahf
sbb
mov
sbb
inc
mov
mov
in
shl
xchg
pop
inc
popf
add
or
test
fldl
sbb
xchg
push
sbb
push
adc
mov
cwtl
testb
sbb
test
fwait
scas
sbb
pop
call
popf
lret
and
pop
cli
notb
jge
pop
pop
std
and
testl
cmc
mov
push
mov
jno
sbb
frstor
les
jb
ret
mov
or
sbb
xchg
add
popa
popf
mov
sbb
jae
sahf
add
jl
adc
fwait
loope
xor
es
mov
mov
inc
adc
insb
fcomi
in
in
xlat
pusha
les
cmp
cmc
xor
shll
in
int
popa
in
push
dec
jecxz
sbb
xor
data16
stc
cmp
mov
gs
cwtl
pop
add
es
and
insl
pop
add
loop
inc
push
imul
dec
roll
int3
pop
jmp
enter
aam
or
test
adc
in
jae
and
mov
cwtl
jno
movsb
repz
popa
sbb
add
sbb
push
sbb
rorl
mul
xor
imul
int
sbb
sbb
sbb
push
xchg
xchg
lret
add
fs
lahf
ja
add
jle
std
imul
jecxz
jge
sbb
imul
inc
cmp
and
lods
fs
int
outsl
mov
push
mov
sub
cmp
in
aaa
xor
lret
pushf
les
stc
pop
sarb
test
lock
loope
xlat
push
sbb
add
jo
aad
jns
aad
lds
dec
sbb
cmp
and
cli
popf
fisttpll
int3
jle
enter
popa
out
es
mov
repz
jmp
pop
sbb
imul
negb
cmpsb
filds
fistpl
out
xchg
repz
in
adc
and
test
sbb
sbb
mov
jb
js
nop
jne
icebp
sbb
ret
add
inc
repnz
in
and
cs
in
push
adcb
lods
jge
lds
stos
xor
std
jb
pop
ret
sbb
xlat
inc
lea
xor
add
ss
ret
sub
jne
or
fstpt
les
enter
xchg
call
pop
sbb
stos
and
fs
repz
popa
sbb
clc
icebp
or
mov
jae
in
mov
fwait
mov
das
adc
out
in
mov
sbb
sub
nop
sbb
outsl
popf
push
shll
bound
scas
aam
std
nop
mov
clc
es
adc
mov
lret
jl
ficoml
inc
push
sbb
or
aas
or
leave
enter
xlat
push
add
in
jb
lret
ljmp
jo
sbb
daa
pop
sbb
leave
jecxz
shl
jae
mov
in
sahf
xor
mov
mov
in
xor
or
icebp
sbb
ret
cmp
xchg
ret
out
ficoms
out
adc
mov
mov
fnstsw
in
xor
int
cmp
sbb
rorl
in
sbb
lock
movsb
outsl
pop
pop
xor
repz
jbe
std
repz
sbb
lret
mov
dec
outsb
inc
pop
movsb
cmp
jns
std
jo
js
in
xchg
pop
cmc
and
roll
popa
test
sbb
sub
ret
jno
std
inc
insl
push
sbb
mov
add
cwtl
sbb
scas
push
aam
je
sti
jmp
add
jecxz
ljmp
sarl
mov
sbb
cmc
mov
xchg
mov
add
mov
in
enter
repz
sbb
lret
add
repz
sbb
scas
lret
repz
nop
jecxz
rcr
arpl
sbb
es
sbb
test
push
jb
and
mov
pushf
cmc
jmp
popf
push
test
cmpl
pop
fisttpll
fildl
imul
jmp
push
sbb
and
push
inc
xchg
movsb
xor
es
ret
sub
pop
add
sub
ffree
dec
in
mov
lods
sbb
popa
adc
and
sbb
mov
sbb
fdivr
xchg
sub
divl
mov
push
aam
ficoml
std
shr
aad
cmpsb
mov
mov
dec
popf
sbb
movsb
push
in
outsb
jle
push
sti
and
int3
enter
in
insb
roll
mov
inc
adc
sbb
xchg
bound
sub
jle
enter
filds
in
in
aam
ficomps
in
and
in
cmp
mov
dec
inc
sbb
cwtl
iret
ret
jecxz
popf
cmp
cmpsb
test
sbb
push
push
repz
outsl
cmp
mul
lods
cld
sbb
inc
ret
sbb
pushf
mov
mov
lcall
mov
scas
adc
outsl
mov
sbb
jnp
jge
pop
push
test
ret
add
dec
cmpsl
je
cmp
scas
fimuls
and
ret
sub
jb
adc
rol
fldcw
jmp
stos
mov
mov
adc
pop
pop
pop
in
loop
adc
shll
imul
fwait
in
jo
sbb
orb
xor
aam
or
test
sbb
loope
fs
sub
and
fldl
and
std
stos
lock
cmc
and
lret
outsb
in
aaa
fdivr
fildl
fcmovbe
cltd
lea
icebp
xor
test
mov
out
mov
stos
mov
sub
iret
add
out
fmul
fldt
jbe
adc
scas
movsl
bound
rorl
out
out
cmp
mov
inc
or
imul
into
scas
test
aas
sub
lock
gs
mov
sbb
cli
out
mov
scas
push
outsl
xchg
das
push
rep
out
fldt
pop
lds
jo
cs
out
in
shr
arpl
jns
loop
test
fistpl
bound
jg
add
out
xor
jb
inc
adc
add
shrb
enter
jecxz
mov
mov
xlat
fsubl
jns
lahf
shr
lock
out
mov
add
jo
movsl
sub
sbb
out
jns
add
add
xchg
out
scas
xor
inc
push
inc
out
das
out
idivb
xorb
scas
cli
sub
lods
mov
xchg
pop
shll
jl,pn
ror
leave
hlt
rep
scas
jmp
out
in
orb
addr16
dec
out
jo
add
xor
sbb
mov
outsl
nop
jno
mov
jb
test
out
bound
xor
jg
ror
hlt
mov
or
fsubl
test
dec
imul
scas
mov
jo
mov
push
xchg
dec
xchg
sbb
xor
jns
in
scas
les
push
mov
ljmp
insb
jb,pn
int
aad
rcrl
sub
mov
sarb
jmp
scas
sub
popa
and
clc
movd
les
add
jmp
mov
test
das
fbld
lock
jb
std
mov
rcr
xor
outsl
jp
into
das
fimull
jns
out
scas
sbb
bound
sub
mov
jecxz
fld1
clc
iret
push
inc
in
add
faddl
dec
scas
sub
outsl
pusha
bound
lock
jb
std
shll
fistpl
xchg
bound
cmpsl
out
mov
dec
mov
cmp
adc
das
or
jecxz
sub
das
rcr
popf
ret
scas
pop
outsb
inc
clc
bound
jmp
test
fdiv
scas
sub
jns
sahf
out
mov
aas
dec
xchg
fnsave
xor
out
test
fcomp
loop
scas
fdivrl
int
jecxz
pop
mov
sub
shrd
roll
outsb
jns
push
rclb
xor
hlt
out
jmp
jmp
iret
shll
sub
adc
xor
cmp
mov
in
cmpsl
lret
out
or
lods
dec
outsl
push
out
out
scas
insl
xchg
and
outsb
adc
je
ret
popf
sti
cmp
cmp
pop
add
shll
outsl
loope
insl
jb
cmp
arpl
in
es
xchg
call
jmp
fmul
cmp
xchg
lds
jo
scas
xor
bound
scas
sub
push
das
movsl
out
inc
shll
scas
outsb
shll
xor
inc
dec
xchg
lahf
ret
lods
sahf
add
stos
test
repz
shlb
scas
imul
push
flds
stc
scas
jns
add
jp
outsl
cltd
bound
pop
sub
add
outsb
out
jbe
iret
shl
jecxz
add
jmp
and
fwait
mov
popa
in
js
sub
outsl
xchg
bound
xorb
push
jo
xor
movsb
push
out
stos
scas
dec
inc
pop
jne
sub
mov
cmp
mov
dec
inc
pop
dec
lock
int3
push
loop
jmp
ret
lods
nop
imul
lock
in
mov
movsl
mov
add
dec
jnp
ljmp
movsl
mov
outsb
jns
out
cs
enter
stc
in
jmp
or
shrl
and
jno
add
lock
jns
repnz
clc
out
incb
inc
lods
leave
mov
repz
jns
inc
adcb
push
repz
jmp
mov
push
lock
data16
cmpsb
std
inc
xchg
data16
loopne
xor
jo
xor
add
lods
out
addl
mov
mov
enter
jecxz
nop
jmp
pop
dec
lods
test
imul
lock
mov
jb
inc
push
adc
cmpsb
sarl
and
scas
cld
outsl
xchg
repnz
add
xchg
fildl
scas
out
push
mov
out
mov
ret
and
pop
outsl
imul
stos
lock
inc
bound
pop
or
cmp
inc
pushf
jmp
enter
outsl
repnz
pusha
lock
subb
lock
mov
and
xchg
insl
in
sub
mov
loopne
icebp
jmp
stc
or
mov
cmp
inc
call
lea
call
push
pushf
lea
jmp
inc
pop
push
and
imul
push
mov
dec
stos
xchg
pop
addb
jns
and
mov
inc
mov
cmp
pop
cmp
in
adcb
fidivl
jne
jo
adc
and
pop
imul
xor
fsubl
lret
jle
dec
movsb
cltd
adc
mov
mov
lret
je
pop
bound
fs
jne
or
xor
lea
mov
pusha
pusha
push
lea
jmp
leave
sbb
add
adc
add
add
rcrl
add
jae
add
and
add
fstps
add
and
add
sub
add
add
jae
popa
addr16
outsl
js
add
adc
pushf
lea
call
pushf
lea
jb
push
pusha
pushf
pushl
ret
or
call
movl
call
pusha
pushf
call
repnz
jmp
mov
xchg
ret
imul
cltd
sbb
ret
jae
popa
add
push
dec
adc
pop
fcoml
jae
adc
shl
cmpb
mov
adcl
lods
jge
pop
ja
mov
jecxz
insb
sbb
imul
out
lea
test
mov
jle
lahf
jo
mov
loope
cmp
lock
gs
mov
cmpsl
dec
add
add
add
add
add
add
cmp
add
add
add
mov
lds
insl
fistps
cmpsb
out
popf
fcomip
movsl
push
bound
pop
sti
jbe
pop
cltd
and
fiadds
cmp
test
fldcw
xchg
loope
neg
sub
cli
jne
pop
je
dec
pushf
in
xchg
lret
in
mov
inc
inc
in
sub
jnp
mov
sahf
mov
or
mov
fsubr
test
push
xchg
lcall
scas
pop
push
push
insl
or
dec
lds
jle
push
mov
in
mov
xchg
movsl
nop
stos
cltd
cltd
je
cmp
cs
cmpb
or
or
pop
and
xor
mov
popf
cmp
xchg
lcall
ss
xor
aam
xchg
lock
push
pop
aaa
push
pop
fxch
lds
lahf
lods
push
pusha
clc
jl
cltd
mov
xlat
mov
movsl
push
into
dec
sbb
cmpsl
push
in
mov
lds
cmp
std
sahf
push
out
bound
das
pop
scas
xor
clc
sbb
push
adc
stc
test
jge
lds
in
or
inc
hlt
sub
mov
notb
insb
loopne
xchg
add
shufps
dec
outsl
mov
scas
or
into
mov
rcll
and
mov
cwtl
mov
or
adc
movsb
jle
xchg
xor
adc
xlat
cmpsl
sbb
and
jnp
push
push
aas
lret
jecxz
lret
ret
mov
push
repz
add
mov
sub
push
cmp
inc
sbb
movsb
xchg
das
xor
je
lcall
leave
in
aam
aam
gs
test
es
cmp
xor
push
mov
pop
dec
lret
sub
testl
adc
cmp
jne
filds
popa
dec
dec
out
jae
dec
mov
jecxz
stos
dec
jl
fldl
fisttps
cld
shr
fnstenv
lcall
xchg
inc
push
jg
inc
popf
mov
les
inc
push
xor
out
nop
jmp
push
mov
xchg
sti
ficoml
pop
push
jo
lods
mov
out
push
mov
js
testb
jg
jns
out
ss
jns
mov
sub
mov
lret
iret
cmp
cld
xor
into
pusha
iret
lods
cmpl
mov
out
sbb
push
mov
adc
sahf
in
dec
ds
mov
mov
or
xlat
fisttpl
shlb
xchg
int
or
es
jo
das
in
add
pop
aam
clc
in
mov
bound
inc
jbe
fisttpl
xchg
es
stos
push
mov
test
lds
inc
rorb
repz
inc
jle
fidivs
lds
push
daa
inc
mov
aaa
sub
add
popa
xor
inc
inc
jno
inc
mov
movsb
mov
push
je
xchg
mov
aam
push
cmpsl
lcall
jp
andb
daa
add
scas
mov
dec
movl
jmp
cmp
jae
dec
movsb
inc
adc
repnz
pop
and
xor
lahf
dec
loopne
scas
sub
push
and
outsl
js
lcall
pop
jge
rcll
aad
sbbb
adc
push
mov
mov
ljmp
movsb
mov
and
shrl
pusha
adc
in
mov
add
sbb
in
sbb
in
dec
xor
cmc
mov
mov
nop
pop
push
mov
aad
iret
dec
sbb
jae
ret
mulb
lds
out
adc
hlt
add
cmp
mov
xchg
iret
aam
jbe
mov
mull
loop
ljmp
push
les
push
or
or
sub
cmp
jo
aas
cmp
test
add
jne
mov
mov
mov
jmp
pop
adc
insb
outsb
jae
imul
mov
xchg
add
mov
in
mov
pushf
cltd
test
pusha
jmp
aad
xchg
or
cmpsb
xchg
daa
loop
push
lods
or
push
xchg
fnstcw
outsl
push
jl
dec
sub
outsl
push
dec
push
and
and
mov
pop
adcl
arpl
push
mov
es
xchg
dec
or
mov
push
xchg
arpl
movsl
in
testb
sarb
cwtl
push
cmp
jecxz
popf
pop
xor
fs
ds
mov
into
mov
out
iret
push
add
xor
out
mov
mov
pop
xor
adc
pushf
mov
lret
and
sbb
rcll
cmp
jecxz
loopne
push
aas
pop
fsubr
out
ja
movsl
cltd
mov
sbb
push
repnz
in
imull
faddl
movl
sbb
cmp
mov
mov
pushf
mov
adc
test
mov
addl
addr16
popf
jnp
fsts
jbe
jo
enter
sub
mov
xlat
sahf
cmp
lahf
je
pop
adc
aaa
daa
mov
add
xchg
lcall
push
cmpsb
movl
sub
dec
push
add
lods
js
mov
or
cmp
jns
dec
and
fisttpll
cmpsl
push
jns
lcall
dec
mov
add
das
dec
adc
stc
mov
add
ja
xor
jl
inc
pop
sub
test
add
lahf
mov
sub
rolb
add
or
push
xchg
xor
dec
sbb
xor
mov
fmull
cmp
into
call
inc
icebp
cwtl
loop
inc
sub
ja
xchg
mov
scas
mov
pop
out
rorl
scas
sbb
loopne
jg
in
imul
and
rcrb
loopne
stc
sub
shrl
push
jae
ljmpw
testl
push
int3
cmpsb
fld
sahf
mov
mov
jb
cli
inc
adc
fisubrs
imul
in
out
out
movsl
insb
mov
xchg
lods
out
int
fucom
mov
adc
repz
stos
lcall
lret
movsb
mov
or
push
mov
inc
std
or
pop
iret
pop
adc
and
lret
lret
lods
jl
adc
iret
sahf
test
insb
mov
fmull
inc
fimuls
dec
inc
push
popa
push
jns
push
inc
stc
and
fiadds
sbb
inc
iret
loope
mov
push
cmp
int3
lods
push
ja
bound
xchg
xchg
outsb
xacquire
popf
pusha
cmpsl
imul
in
jo
and
fnstsw
adc
jecxz
jo
ja
cmc
pop
test
jge
cmp
pop
fwait
sub
pop
scas
stos
cmc
das
test
js
or
cmp
idivb
fwait
pop
dec
sub
sahf
fwait
mov
int3
sti
fdivs
mov
roll
xor
cmp
xor
in
call
adc
mov
aaa
fs
push
mov
pushf
cmc
add
and
mov
jge
in
ja
lods
and
push
test
out
and
jge
or
inc
xor
or
cmp
lret
fldl
stos
arpl
cld
adc
and
sub
pop
movsl
mov
out
loope
movb
add
xor
dec
mov
mov
inc
cltd
addr16
enter
adc
or
hlt
cmc
mov
dec
jns
in
ds
aas
and
into
xor
sub
out
mov
lcall
ficoms
lods
outsl
pop
xchg
dec
lahf
pop
arpl
sbb
lock
push
mov
cmp
mov
cli
and
cld
inc
ret
dec
in
in
mov
mov
jmp
ret
or
imul
loop
pop
test
leave
jno
pusha
adc
sar
mov
inc
pop
pop
and
mov
mov
mov
scas
mov
fstpl
dec
daa
and
shlb
in
pop
lods
cmp
jns
push
divb
inc
jp
lcall
jnp
xchg
outsl
jle
sub
jmp
je
xorl
jg
push
xchg
jae
shll
and
pop
fs
cmp
fistpll
lock
jb
pop
cmc
mov
outsb
jbe
xorb
loope
daa
pop
out
stos
outsb
inc
mov
mov
xor
xorb
fildll
outsl
jp
or
ja
inc
or
gs
gs
lahf
jp
enter
jae
xchg
pop
stos
cltd
or
pop
mov
inc
xor
dec
xchg
dec
pushf
pop
jl
adc
clc
pop
sbb
adc
push
das
pop
icebp
push
xorl
out
mov
je
mov
cmpl
fstpl
or
cmp
mov
inc
hlt
jle
pop
iret
loope
push
lahf
rcrl
xor
or
in
fistpll
dec
call
jg
out
or
mov
int3
mov
nop
outsl
ds
push
outsl
cmp
stos
ficoml
ljmp
and
orb
push
inc
pop
jg
lcall
mov
clc
and
adc
mov
jns
mov
sbbl
fnstsw
lods
fsubrs
nop
jbe
mov
fisubs
loopne
xor
mov
loop
test
xor
dec
push
add
ja
in
inc
dec
iret
xor
xor
push
xor
xor
adcb
adc
xchg
jp
rcl
jbe
imul
and
sbb
sub
sbb
loope
cld
loop
and
jg
fsts
lret
lret
and
inc
nop
inc
xchg
in
jae
mov
and
aaa
push
fxch
mov
out
dec
push
in
lret
stos
jns
inc
andb
mov
in
push
jp
mov
adcb
or
mov
push
jno
mov
retw
and
push
movsb
or
adc
ljmp
jge
hlt
or
and
loopne
imul
aaa
jnp
mov
sahf
xchg
jg
push
insb
or
inc
pop
outsb
icebp
repz
push
rolb
jmp
loope
add
jbe
pop
or
js
inc
pop
iret
fisubs
aad
pusha
sti
adc
and
push
and
xchg
push
pop
dec
push
xchg
popa
push
rol
pop
daa
test
inc
std
in
cwtl
xor
push
arpl
mov
and
jecxz
rcrb
movsl
nop
push
cmp
push
dec
ss
add
sbb
mov
movq
scas
inc
adc
mov
cltd
mov
sub
xor
dec
movsl
or
dec
icebp
xchg
int
movhlps
das
mov
add
add
add
xchg
push
lcall
test
lcall
sbb
jmp
cmp
lea
push
jmp
mov
stc
push
bt
mov
push
bt
pushf
jmp
pusha
pushl
movl
push
pushf
pushl
lea
jmp
stc
cmc
pushf
cmp
pusha
lea
jae
bt
cmp
call
lea
jb
clc
bt
jo
bt
cmp
jmp
pushf
lea
jne
shl
shl
bsf
pusha
xor
mov
mov
pusha
lea
jmp
add
pop
pop
jbe
popa
dec
jae
je
imul
lahf
adc
insb
adc
inc
mov
pop
cmp
mov
mov
je
push
cli
add
ds
stos
hlt
jle
push
shll
movb
and
test
xchg
shll
or
inc
lea
push
jge
sti
cwtl
mov
push
call
test
cmpsl
inc
push
mov
pop
das
cmp
js
sahf
test
addr16
pop
adc
inc
incl
lea
pushf
mov
pushf
not
call
jmp
popf
jne
stos
je
adc
mov
jo
fimuls
jo
rol
mov
jmp
loope
push
andb
push
cmpsl
xor
lods
fmul
int3
lcall
xchg
mov
xchg
sahf
xor
test
dec
movsb
or
mov
dec
push
jno
adc
push
xor
adc
add
cwtl
fcmovne
pop
mov
fbstp
jp
sbb
mov
ret
cltd
repz
inc
jno
in
pop
repz
dec
andb
pop
in
dec
pop
adc
sub
into
sub
clc
cmc
stc
pusha
cmp
push
call
add
cwtl
aas
ret
or
sub
repnz
out
dec
iret
bound
andb
test
cmp
xlat
fs
cltd
sti
std
fwait
clc
nop
cltd
xchg
mov
pop
notl
xor
imul
lahf
lods
dec
push
and
add
inc
out
std
sub
cli
rcrb
inc
jg
jge
ret
sbb
pop
adc
loop
testb
iret
fiadds
sahf
mov
in
ss
push
sbb
mov
into
mov
cmc
add
mov
jno
js
int
mov
mov
fs
movsb
out
bndstx
mov
mov
lds
jmp
icebp
cmp
dec
mov
int
pop
adc
loop
jg
in
add
adc
pop
or
add
adcl
pop
mov
dec
shl
or
loope
shrb
cld
and
decl
mov
ja
es
push
xchg
jge
or
mov
lret
rcrb
inc
hlt
mov
mov
imul
jbe
iret
leave
out
pusha
sbb
outsl
mov
sahf
xchg
xchg
pusha
dec
iret
pop
mov
sub
inc
out
jbe
hlt
push
push
loope
dec
pop
adc
jl
std
lcall
mov
sbb
daa
test
cmp
insl
test
orl
lock
dec
sbb
mov
xchg
push
lahf
jae
mov
push
outsl
addb
push
mov
jb
testl
leave
out
mov
cmpl
fidivs
inc
test
ljmp
sbb
daa
jb
mov
call
cmc
ficomps
and
push
sbb
mov
cmp
sti
xchg
and
cmp
mov
sub
int
mov
je
sbb
xlat
and
push
cmpl
mov
sub
mov
add
cmp
shlb
pop
adc
cld
call
and
jne
pusha
sub
mov
and
sub
shl
or
stc
lea
cmc
test
sub
pushl
clc
clc
pushl
popl
bt
push
stc
stc
cmp
call
movb
push
lea
pushf
mov
mov
pushf
mov
jmp
pusha
add
btc
add
cmp
rcr
shr
xadd
bswap
movsbl
mov
bswap
add
pusha
mov
call
mov
call
push
lea
je
test
add
bt
stc
jmp
and
and
shl
mov
pushf
jmp
pushf
lea
jne
pushf
mov
not
movzbl
btc
lea
sub
xor
lea
pusha
pushl
stc
push
sub
pushf
jmp
pusha
lea
jne
mov
xor
lahf
movzbl
mov
push
pusha
pusha
pushf
lea
jmp
pop
aaa
loop
xchg
push
adc
jle
stos
xchg
sbb
lcall
pop
scas
imul
jno
lods
loop
insl
or
pop
mov
fadds
out
sub
push
loopne
stos
stc
out
cmpsl
xchg
data16
push
pop
jg
call
jno
xchg
push
sbbl
ljmp
mov
inc
inc
inc
bound
xchg
xchg
mov
dec
sarb
adc
or
add
arpl
fwait
mov
insl
fs
dec
pop
pop
pop
int
pusha
movw
movb
mov
movzbl
jmp
lea
je
pusha
movb
pushl
pushl
lea
jmp
add
push
mov
mov
pushf
lea
jmp
pushl
pushl
lea
jne
shl
and
sub
mov
push
pushf
jmp
pusha
call
mov
test
stos
loopne
negb
xlat
and
adc
sbb
cwtl
mov
cs
lods
add
mov
leave
mov
sbb
shrl
jl
jns
mov
loop
pop
lock
inc
lock
xor
bound
in
push
aaa
aas
aad
push
pop
scas
into
xor
adc
pop
push
mov
cmp
mov
mov
aas
or
cmp
jp
sub
xchg
cwtl
push
scas
mov
sbb
sbb
pop
and
dec
xchg
inc
mov
mov
inc
xchg
push
imul
sbb
and
lea
mov
out
sub
fldl
adc
out
add
repnz
sbbl
dec
pop
or
rorb
test
mov
pusha
inc
pushf
inc
pushf
movb
pushf
lea
jmp
repz
call
call
not
lea
call
cmp
sub
test
cmp
sub
je
cmp
neg
test
stc
pushf
bt
cmp
not
pusha
push
movw
lea
lahf
pop
movzbw
movb
mov
pushf
lea
ja
pushf
lea
jb
pusha
cmpb
call
call
cmc
pushl
popl
test
clc
cmp
cmp
push
jmp
pusha
pop
mov
mov
pushf
pushl
ret
jmp
jne
cmp
in
mov
js
push
or
and
fsub
push
mov
pop
dec
dec
adc
cmp
fs
jge
icebp
dec
fs
xor
hlt
fwait
ljmp
push
mov
cwtl
in
cmc
mov
xchg
adc
mov
out
sbb
xchg
ljmp
xchg
pop
xchg
inc
adc
js
xor
mov
jo
sahf
xchg
or
xchg
adc
fmuls
pusha
imul
lahf
push
jne
or
rorl
sub
jbe
sub
mov
lahf
fwait
lock
pop
mov
sbb
sbb
sti
mov
fnstenv
pop
push
cmp
push
movsb
js
shr
daa
push
jg
jmp
cmp
push
adc
mov
xchg
pop
nop
notl
mov
or
test
cmpl
rcr
call
jmp
movl
pusha
lea
jmp
pushl
lea
jne
jmp
xchg
movw
movsbw
pushl
popl
movsbw
mov
setle
push
call
mov
lea
ja
call
movw
jmp
pushf
cmp
xor
lea
jmp
push
push
pushf
lea
je
pushf
btc
movzbw
sub
add
clc
pusha
sub
add
shr
xadd
sbb
mov
and
and
stc
shr
add
bsr
not
push
pushf
add
sub
mov
jmp
sbb
jb
add
and
xor
rcrb
add
cmpsb
bound
ja
jge
cmpsb
dec
lcall
clc
loopne
loop
push
add
pop
adc
pop
mov
jne
popa
sub
adc
cmpsb
jno
jns
inc
adc
dec
xchg
sub
mov
mov
inc
pushf
ret
mov
adc
push
bound
sub
repnz
inc
xchg
pop
xchg
cmp
sbb
push
mov
cmp
dec
sub
fsubrs
mov
inc
addr16
jae
jbe
xor
bound
cwtl
jbe
add
mov
dec
cmp
xchg
mov
icebp
or
int3
daa
ss
dec
pop
or
pop
popf
mov
ds
stos
lods
pop
ret
mov
sbbb
mov
inc
stos
jge
mov
mov
mov
nop
mov
and
jl
adc
movb
insl
pop
mov
sub
mov
std
fbld
add
hlt
adc
pop
add
or
rcll
xchg
push
rcr
lods
stos
clc
push
popf
lret
xchg
xor
xchg
mov
xchg
and
fincstp
adc
sbb
mov
pop
subl
jns
sub
mov
xchg
pop
addr16
stos
pop
iret
sub
loope
pop
jmp
mov
out
jecxz
lods
fbstp
push
xor
out
add
xchg
xchg
inc
sub
sti
imul
dec
popf
and
mov
cmovg
test
mov
xor
pushl
ret
add
mov
movb
ror
cmc
sub
cmp
call
cmpsl
loope
ja
and
pop
pop
fidivrl
jne
test
xorl
subb
cmp
sbbl
lods
popf
add
sub
mov
dec
mov
fnstenv
es
pop
sahf
dec
pushl
leave
rorb
sbb
mov
pop
repnz
sbb
xchg
dec
pop
or
xchg
bound
test
bt
test
test
add
cmc
push
cmp
call
pushf
call
pushf
cmp
xor
cmp
repnz
push
pushl
lea
jne
movzbl
xchg
clc
sar
mov
shld
sub
btc
jmp
stc
cmc
call
jmp
jmp
lea
ja
bt
bt
bt
jmp
movb
lea
jne
setl
push
not
rcl
sub
pushf
call
sar
add
add
cmc
bsr
clc
mov
call
pusha
inc
pusha
lea
jmp
pusha
jmp
dec
lea
ja
push
not
bt
ror
movb
lea
call
pusha
stc
clc
clc
cmp
pushf
mov
lea
jae
call
call
jmp
mov
push
xor
sti
xchg
add
out
xchg
int3
push
inc
sti
lock
fcmovnbe
ret
inc
add
xchg
shlb
mov
sarl
jp
push
pop
es
push
and
out
xchg
pushf
repz
jno
xor
jnp
add
mov
iret
or
testb
jb
xor
dec
pop
sbb
shl
sti
xchg
mov
inc
in
add
cli
daa
cmpsl
fcmovnbe
std
js
mov
mov
orl
lret
jmp
sbb
pop
xchg
scas
repnz
ljmp
or
repnz
jecxz
sbb
sub
dec
pop
movq
shll
mov
bts
push
xadd
dec
mov
pushf
movzbw
pop
push
clc
add
push
lea
push
rcl
cmc
not
push
sub
push
cmp
call
mov
int3
gs
cmpsb
mov
fcmovu
call
mov
outsb
test
adc
cmp
sbb
cwtl
cmp
imul
and
aas
adc
add
push
pop
mov
popf
das
ljmp
fistpl
enter
dec
pop
push
lock
call
pusha
btr
dec
sar
mov
movw
cmp
bt
cmpb
pusha
movb
call
pusha
lea
jae
inc
mov
shld
stc
xor
mov
call
lea
jbe
rol
clc
mov
not
add
setle
test
bsf
mov
rcr
bswap
xor
add
shl
pusha
movl
shl
bsr
lea
mov
push
stc
cmc
cmp
call
pusha
mov
movl
jmp
add
inc
gs
outsl
fs
gs
imul
add
inc
out
movb
movl
pusha
movb
pushf
movb
lea
jmp
lea
jae
pushf
add
pusha
mov
pusha
movb
push
lea
jmp
test
pusha
xor
lea
jmp
pop
jmp
repnz
push
lea
jne
not
pusha
seta
movb
movsbl
mov
not
lea
push
pushf
pushf
pushf
movl
call
jmp
xchg
test
adc
push
sub
jne
mov
lds
inc
imul
ljmp
dec
lea
rcll
nop
adc
test
pop
stos
mov
sub
inc
imul
mov
mov
sub
or
mov
fnsave
icebp
clc
adc
add
xchg
mov
lea
ja
call
or
pop
cmp
mov
or
ja
aad
xchg
push
cmp
outsb
cmp
cs
outsb
adc
mov
test
xlat
and
lea
push
sbb
repnz
rorb
push
sub
xchg
sahf
xchg
in
dec
pop
add
jno
into
cmpsb
xor
aaa
jp
sbb
cmpsb
mov
xchg
and
cmpsb
hlt
movsl
cmp
xchg
and
push
and
and
lods
cmp
xchg
int3
mov
outsl
mov
sbb
add
out
dec
jnp
dec
pop
add
and
jne
rol
das
rol
xor
not
movsbw
push
mov
pusha
movl
pushf
pushl
lea
jmp
movsbw
mov
pusha
jmp
inc
setp
jmp
movw
call
ror
push
xlat
sbb
in
fcomi
mov
mov
sub
cmpsl
lods
and
jge
popa
jle
in
mov
xchg
cmp
dec
in
cltd
shlb
idivb
sbb
call
sub
lret
lcall
dec
mov
adc
sti
out
movsb
arpl
mov
dec
pop
add
xchg
mov
push
mov
pushfw
popw
sets
push
inc
dec
mov
call
test
push
jmp
movl
mov
mov
lea
jmp
pushf
pushl
ret
pushf
push
movl
pusha
movb
push
jmp
lahf
mov
pusha
pushf
pushf
movb
lea
jmp
pushf
pushf
movl
mov
pushf
movl
lea
jmp
cmp
push
pushf
lea
ja
dec
shl
shr
add
sub
movsbw
add
rcr
rcl
call
test
mov
cmp
xorl
sub
dec
pop
push
xchg
sub
adc
mov
lcall
inc
pusha
sub
or
mov
xchg
loope
daa
push
or
pop
add
arpl
lea
jne
or
mov
neg
and
btc
pusha
sub
adc
lea
test
sub
cmp
pushl
popl
test
test
bt
cmp
jmp
push
mov
lea
jb
jmp
lea
jmp
adc
fsubrs
adc
sbb
fiadds
incl
xchg
sub
nop
je
incb
jecxz
mov
decb
mov
call
ret
aaa
filds
sub
loop
imul
std
and
dec
pop
insb
xor
aaa
fldenv
inc
add
and
add
lds
add
mov
pushf
mov
pushl
movb
pushl
ret
pushf
pusha
jmp
xchg
mov
sbb
je
ljmp
and
fcomps
divb
or
pop
stos
ljmp
mov
stc
lock
push
in
cmp
pushf
dec
pop
add
call
ret
sub
rclb
ja
sub
adc
or
push
push
test
adc
push
sbb
pop
pop
xor
xchg
inc
push
sub
scas
lds
pop
jae
xchg
pop
cwtl
mov
dec
jecxz
lret
repnz
push
loope
lret
mov
ror
push
xor
mov
jecxz
into
pop
push
pop
test
nop
pop
test
out
sti
out
pushf
adc
mov
ja
lret
psubsb
in
fwait
ds
jbe
and
lahf
adc
insb
jmp
mov
leave
dec
pop
add
sbb
dec
push
push
push
pop
dec
call
daa
repnz
jo
xchg
push
mov
adc
in
ficomps
js
aad
int3
inc
push
movsl
adc
dec
aam
jb
fiadds
dec
mov
xor
nop
aas
loopne
push
jo
jne
or
jbe
inc
pop
adc
push
jecxz
in
cwtl
mov
sub
and
adc
in
insb
sti
loop
dec
pop
pop
movsb
jno
ret
xchg
stos
lods
push
in
cmp
sub
imul
xchg
jb
mov
sbb
cmp
pop
lret
fwait
mov
int
flds
jno
fwait
mov
pushf
mov
push
es
popf
mov
enter
adc
cmp
ret
pop
ljmp
repz
cmp
shr
bt
cmp
pushf
cmp
pushf
jmp
and
sub
rcl
pusha
mov
cmp
pushf
and
stc
stc
call
call
lea
jne
lea
movb
cwtl
push
call
in
push
push
movb
movl
pusha
call
jmp
pushf
mov
inc
lea
dec
inc
xor
neg
pusha
adc
xchg
add
aas
mov
jmp
out
cli
std
dec
push
adc
xchg
test
sbb
mov
outsb
cmp
xchg
mov
dec
gs
lcall
or
mov
jg
lods
push
mov
filds
lods
push
push
ret
jge
ds
scas
sub
in
out
outsb
int
push
push
cltd
mov
sahf
movsb
in
clc
sbb
bound
and
ficomps
dec
mov
jecxz
jae
test
repz
pushw
inc
popa
shll
ja
mov
imul
sti
xchg
push
inc
fcoml
mov
adc
add
cmpsl
fcmovnu
sbb
add
data16
or
jg
mov
popa
fadd
mov
mov
add
mov
pushl
xor
adc
fstp
pop
jp
in
sub
dec
pop
push
dec
adc
jmp
shrb
add
movsl
push
push
xchg
or
and
test
push
adc
movsl
push
cltd
mov
xchg
js
data16
pop
add
lret
shl
aam
xchg
arpl
adc
inc
into
popa
nop
xchg
js
mov
ja
mov
arpl
ja
push
and
inc
js
inc
loope
enter
neg
pop
lds
xor
int
sub
in
push
pop
stc
xchg
std
movsb
add
and
lods
rolb
enter
adc
repz
jno
mov
sub
pusha
iret
mov
dec
pop
cmp
inc
nop
pusha
call
jmp
pushf
movl
pushl
movl
pusha
lea
jmp
outsl
inc
sarb
push
lds
mov
xlat
repnz
mov
sub
sub
stos
mov
hlt
scas
int
adc
imul
xlat
and
mov
in
clc
icebp
sub
inc
in
movsb
shll
and
into
push
push
or
xchg
hlt
mov
dec
pop
cmp
fs
jne
lea
sets
btr
mov
btc
cmp
sub
sar
mov
cmp
sub
cmp
clc
cmc
bt
pushl
pusha
cmp
jmp
add
dec
cmp
popf
inc
jnp
dec
or
add
jp
jmp
jl
sub
cwtl
subl
rorb
or
pop
adc
sbb
mov
je
adc
adc
mov
xchg
cmp
push
pop
sbbb
add
mov
xor
and
sbb
mov
cmp
scas
add
lea
insb
jnp
fs
mov
add
orl
repz
addb
cmp
outsl
fdiv
jnp
mov
dec
and
and
leave
out
jbe
sbbb
lea
add
into
mov
ret
jp
rorb
inc
xor
dec
pop
cmp
cmp
adc
xor
aas
jae
jae
adc
inc
fadd
push
pop
push
stc
popf
sub
jbe
push
imul
or
insl
arpl
xchg
js
lret
stos
mov
xchg
add
sbb
aam
out
in
cmp
std
leave
sub
xchg
popf
pushf
test
filds
mov
lret
mov
aas
sti
push
adc
decl
mov
xchg
ret
inc
dec
aad
rcl
push
jae
lea
loope
stc
mov
sub
jmp
pop
popa
xor
scas
lock
cmp
ficoml
mov
sbb
adc
xor
xor
addb
clc
or
xchg
nop
inc
dec
push
mov
out
cmp
jmp
ret
xchg
adc
ret
push
jnp
test
cltd
and
push
pop
pop
push
dec
mov
fbld
jmp
ficoms
call
notb
in
cmp
mov
outsb
pop
inc
xor
lds
inc
jno
add
shl
pop
push
mov
push
jne
idivb
rorl
mov
lods
xchg
cmp
add
in
jecxz
pop
push
jnp
cld
es
cmp
fnsave
mov
inc
aad
xchg
jp
cwtl
mov
pop
xchg
movzbw
mov
sar
mov
pushf
mov
call
call
lea
call
ss
stc
int3
std
pop
cmpsb
jo
adc
inc
jle
push
outsl
xchg
xor
test
call
jecxz
test
fstl
sbb
mov
xchg
dec
adc
in
xchg
cltd
rcrb
xchg
pop
rcrb
test
xor
dec
pop
cmp
cmpsl
jmp
testb
nop
push
lock
idivl
and
jbe
mov
and
sub
repnz
mov
mov
in
aaa
pop
rorb
ljmp
jbe
jmp
add
dec
xchg
mov
fisttpl
imul
hlt
add
test
repnz
pop
add
aas
arpl
out
dec
mov
jne
xor
adcl
mov
sbb
and
cmpsb
lods
hlt
shl
icebp
cwtl
pop
mov
dec
fldenv
inc
inc
and
jbe
inc
add
fstl
mov
loop
nop
mov
bound
xor
sbb
jp
outsl
out
mov
jae
jmp
mov
push
or
sbb
push
xor
cmp
rcrl
mov
outsl
xor
int3
orb
push
inc
mov
inc
jp
sub
or
jge
int3
lea
pusha
orl
mov
lea
push
ret
jae
xor
add
outsl
jp
test
xchg
loop
mov
or
imul
xchg
and
sbb
dec
pop
cmp
push
mov
jle
pop
xor
imul
xlat
stos
inc
pusha
dec
push
jns
iret
adc
fists
mov
sub
xor
iret
cld
aaa
movsb
ds
cmpsl
cmp
pushf
iret
fwait
xacquire
mov
mov
mov
lods
mov
ds
cmp
imul
das
mov
lret
int
pop
mov
mov
sti
in
popf
movsb
imul
jg
cmp
push
dec
pop
aas
ret
mov
mov
fs
je
call
pusha
mov
movw
jmp
out
push
test
and
popa
xor
pop
dec
clc
and
movsb
addr16
sbb
cmp
pop
sub
mov
daa
adc
sbb
xchg
out
jnp
lods
sbb
insl
cmp
mov
cmp
in
mov
inc
inc
sarl
imul
mov
out
mov
xchg
test
insl
mov
dec
jo
inc
pushf
xchg
cli
leave
mov
aas
aaa
loopne
movl
call
mov
movl
movb
movl
pushf
pusha
push
lea
jmp
cwtl
mov
sahf
pop
insb
pop
sbb
mov
ret
mov
loope
jmp
repz
cld
adc
mov
shrl
jne
mov
cmp
jne
scas
out
and
xor
adc
lock
jge
push
fwait
and
imul
dec
push
mov
out
xchg
insb
test
sti
and
int3
inc
sbb
xlat
ficoms
clc
cmpsl
cmovg
test
enter
outsb
arpl
call
pusha
lea
je
test
stc
test
add
clc
cmp
pushf
pushf
jmp
push
cmc
neg
cmc
push
test
pushl
cmp
movzbw
movb
movzbw
lea
lea
mov
call
movl
lea
je
push
pusha
pushf
lea
jmp
cmp
and
test
add
pusha
pushl
pushl
pushf
lea
jmp
xor
pushl
pusha
repnz
mov
jmp
inc
cwtl
mov
mov
push
popf
mov
push
mov
mov
pop
sbb
mov
sub
adc
xor
fildl
cmp
dec
push
jg
jnp
scas
hlt
sub
mov
cmpsb
icebp
aaa
int
sbb
inc
cmp
adc
sub
and
movsl
out
sbb
ds
push
leave
out
call
mov
pop
sbb
dec
pop
fsubrl
mov
cmp
addb
shll
movl
pushf
pushf
jmp
pop
pushf
push
jmp
movsbw
lea
mov
mov
call
call
mov
lea
jne
not
clc
and
inc
xor
lea
movzbl
cwtl
lahf
mov
push
pushf
push
push
lea
jmp
pushf
mov
push
pushf
pusha
pushl
ret
das
sbb
push
lahf
pop
and
lahf
pushf
sbb
pushf
sbb
inc
cltd
mov
cmpsl
nop
xchg
mov
ja
jge
inc
xchg
push
negl
lahf
aam
cmp
imul
fwait
adc
lret
push
adc
mull
addr16
call
pop
loope
jmp
dec
cmpsl
addr16
mov
insl
mov
jmp
std
pop
xchg
fs
lcall
dec
ljmp
push
sub
in
pop
mov
lret
or
pop
inc
fnsetpm(287
stos
fbstp
dec
mov
push
aas
lret
hlt
dec
pop
or
push
mov
rorb
xor
jle
inc
and
xor
inc
add
inc
and
fdivrp
xor
movb
push
pushl
ret
mov
rcrb
dec
inc
or
push
dec
push
in
loopne
push
push
sti
pop
jg
iret
pop
push
pop
add
inc
lock
push
shl
xchg
into
insl
push
dec
pop
xor
jmp
mov
shr
mov
rcr
add
mov
test
pushf
bt
pusha
test
pushf
jmp
call
push
pushf
lea
jne
jmp
test
add
lea
jbe
ror
cmc
sub
test
pusha
mov
pushf
neg
cmc
movb
movw
cmp
movzbw
setne
lea
lea
jmp
lods
lds
cmpsb
push
cld
push
push
aaa
adc
fnstsw
cs
fld
int
cld
adc
mov
lret
xlat
and
cltd
cmc
popa
sub
or
push
jae
jnp
test
out
popf
xor
mov
frstor
xor
leave
and
mov
cmc
cmp
xor
jle
adc
lret
jmp
jmp
dec
cmp
data16
mov
mov
mov
xlat
and
mov
ror
shll
ja
adc
xorb
dec
fstpt
jno
dec
scas
xor
enter
xor
das
cli
call
pushf
mov
mov
lea
call
push
pushf
mov
pushf
adc
call
test
cmc
cmp
pushl
lea
ja
jmp
pusha
lea
call
clc
jmp
pusha
call
ss
jmp
push
repnz
mov
les
push
lods
shlb
cwtl
test
xlat
sbb
es
or
fiadds
arpl
cli
aad
pop
mov
pop
dec
or
push
inc
rorl
repz
inc
push
std
lods
fwait
ret
jg
out
push
pop
mov
mov
stc
jb
cmp
aaa
movsb
jmp
fcomps
pop
xor
fs
je
bt
pushf
sub
pushf
jmp
pushf
lea
jno
push
lea
jae
cmc
mov
bsr
mov
sub
test
bt
cmc
mov
pushf
xor
call
mov
stos
lods
xchg
push
negl
jmp
insb
outsl
fs
fbstp
sub
mov
rorl
mov
aas
es
pop
xor
inc
sub
js
xlat
inc
aaa
gs
into
jno
mov
mov
ret
imul
fildll
fxam
aad
loop
out
sbb
jle
inc
icebp
lahf
pop
fadd
inc
mov
rcrb
lahf
cmp
adc
out
sti
subl
lods
jge
jne
adc
jg
popf
xor
pop
cltd
sub
xchg
xor
mov
std
call
pushf
mov
clc
test
pusha
pushf
jmp
js
cmp
sarl
insl
push
mov
call
xlat
adc
enter
mov
pop
fwait
mov
push
inc
pop
je
xchg
int
adc
push
pop
loop
mov
leave
pop
nop
outsl
xbegin
cs
outsl
icebp
jbe
sbbl
xchg
imul
sbb
jmp
and
out
inc
mov
and
imul
sbbb
movsl
push
orl
mov
push
and
repnz
push
push
xchg
adcl
mov
mov
jae
lret
clc
pop
bound
pop
mov
call
orl
dec
rcrb
imul
insb
and
sub
mov
sti
jo
ficoms
loope
rorb
and
jb
in
push
inc
jg
arpl
add
add
mov
fists
jmp
ja
in
cmpsl
and
xchg
mov
sbb
out
dec
sbb
stos
cmp
movsb
nop
lahf
stos
jnp
stos
lods
addr16
xchg
mov
adc
push
jle
cmp
jmp
sub
add
jge
xor
pop
call
jae
inc
aas
or
pop
lods
xchg
pushf
mov
aas
cld
jmp
sbb
sub
cmc
lods
inc
bound
mov
mov
jne
cld
pop
push
lea
fstpl
dec
cmp
lret
mov
cltd
bound
jle
test
jno
lret
jne
xor
test
out
movsl
mov
pop
cmpsb
lods
pop
rolb
xor
jno
cvtpi2ps
adc
push
shlb
push
test
into
or
mov
adc
test
xchg
movsl
and
adc
addb
mov
lcall
sbb
aam
jne
cmp
push
sbb
adc
lds
mov
leave
inc
sbb
hlt
ret
adc
jl
dec
popf
dec
pop
add
loope
cmp
mov
lods
data16
cmp
push
std
mov
arpl
ret
sbb
cmp
add
aaa
ret
cmp
outsl
inc
es
outsb
popa
xchg
dec
or
pop
jbe
xor
xor
sub
fs
jl
xchg
add
std
push
hlt
in
pop
or
stc
add
les
adc
rcl
enter
ja
mov
inc
repz
lahf
xchg
xchg
cmp
dec
pop
sub
or
mov
adc
pusha
mov
call
pushf
cmp
jmp
sti
adc
movsb
loope
push
mov
mov
iret
mov
pushf
or
and
and
jg
cmp
scas
cli
pop
pop
mov
or
adcl
je
ss
sub
fimuls
rcpps
xchg
mov
loopne
pop
xor
shrl
dec
imul
inc
cmp
mov
sub
and
stos
mov
sub
pop
sub
push
xchg
push
sub
xchg
push
mov
mov
rclb
cmp
and
ljmp
jbe
int3
repnz
adc
dec
pop
xchg
dec
push
pop
dec
out
cmp
sub
lods
pop
or
or
adc
aaa
out
xchg
inc
jnp
or
mov
jno
xor
xchg
jle
or
repnz
fs
adcl
call
pop
call
mov
xor
mov
mov
cld
sti
xor
andb
lds
jp
pusha
jno
pop
sub
loopne
xor
mov
pusha
mov
push
jmp
clc
mov
rol
jmp
call
pushf
pusha
movb
lea
je
cmp
bt
jmp
call
xor
sub
mov
jmp
clc
movzbl
test
pusha
sub
pusha
cmc
sub
lea
jg
not
call
mov
jmp
mov
jmp
aaa
lea
clc
push
push
pusha
cmp
pushf
mov
pushf
call
movb
jmp
movw
jmp
pusha
call
jmp
call
mov
call
xor
test
xchg
jmp
shl
test
jmp
neg
mov
jmp
pusha
pushf
jmp
adc
add
movzbw
rcl
ror
and
and
add
bts
xor
sar
rol
adc
and
shl
rol
mov
pusha
pusha
sub
mov
jmp
pushf
movw
mov
pushf
pushl
call
mov
call
call
mov
pushf
lea
jmp
cmc
test
bt
sub
jmp
and
movzbl
push
pushf
jmp
call
call
mov
pushf
pusha
mov
pusha
pushf
mov
pushl
mov
mov
jmp
not
mov
movzbw
xor
mov
push
clc
not
clc
not
bt
test
call
cltd
cwtl
call
bswap
pusha
mov
bswap
push
cltd
mov
xchg
bswap
mov
cwtl
movzbw
bswap
lahf
mov
cwtl
bswap
call
push
pusha
mov
mov
pushf
lea
jmp
mov
pushf
mov
call
push
pushl
popl
pushf
push
push
push
lea
jmp
call
jmp
mov
pushf
popl
push
call
mov
pusha
mov
pusha
mov
mov
pushf
pushf
mov
pushf
mov
pushf
lea
jno
pusha
push
mov
call
repz
popl
push
jmp
shl
movzbl
sub
bt
lea
jmp
pushf
popl
movb
jmp
call
sar
mov
jmp
mov
push
mov
movb
pushf
lea
jmp
lea
call
movb
add
pushf
pushf
mov
pushf
pushf
lea
jmp
sbb
mov
bt
sub
add
mov
setg
mov
call
jmp
sete
neg
aaa
mov
inc
clc
bt
mov
jmp
pusha
mov
pushf
pusha
lea
jmp
push
jmp
pushf
push
mov
mov
movl
mov
pusha
pusha
call
clc
lea
test
bt
cmc
sub
cmc
cmp
cwtl
test
sub
jmp
pushf
pushf
call
pushl
std
cld
push
jmp
cmp
pushl
cmp
pusha
test
cmp
add
cmp
pushl
popf
pusha
pushf
push
pushf
lea
jmp
mov
lea
jno
mov
pusha
push
push
mov
call
jmp
call
pusha
pushl
popl
movb
push
lea
jmp
movb
mov
pushl
movb
pushl
ret
not
cmc
rcl
rol
movsbw
pushf
pushf
inc
mov
push
movsbw
bswap
sub
adc
jmp
pushl
call
jmp
jmp
jmp
mov
mov
lea
jmp
adc
cmc
sub
movsbw
movsbw
pushf
mov
movzbw
pusha
pushf
popl
movzbl
pusha
mov
call
lahf
mov
lea
bswap
pushf
not
mov
pushf
push
divl
push
pusha
jmp
jmp
mov
pushl
jmp
not
bt
push
sub
cmc
clc
and
call
push
sub
stc
bt
call
push
pusha
pushf
mov
call
pushf
mov
push
push
pushf
mov
pusha
jmp
mov
jmp
mov
jmp
call
lahf
movsbw
call
call
pusha
pusha
call
inc
cmc
aad
mov
cmc
pushf
jmp
jmp
movb
mov
mov
mov
pushl
pushf
movb
lea
jmp
movb
mov
pushl
mov
call
movw
jmp
movb
call
pushf
pushf
popl
call
pushf
mov
push
lea
jmp
call
pushf
jmp
mov
mov
mov
lea
je
push
pusha
mov
movb
lea
jmp
clc
test
sub
cmc
mov
cmc
test
add
pushf
lea
jmp
jmp
push
inc
sub
ja
push
clc
xor
stc
pusha
cmp
mov
jmp
mov
jmp
cmc
stc
sub
jmp
pushl
call
pushf
mov
mov
pushf
pushf
lea
jmp
mov
movl
lea
jmp
push
mov
push
lea
jmp
push
pushl
movl
not
push
stc
mov
rol
pusha
inc
test
movl
sub
bt
test
cmc
movb
mov
clc
cmp
call
pushf
movb
mov
push
pushf
pushf
lea
jmp
lea
pushf
jmp
jmp
dec
movb
push
rol
pushf
test
jmp
pusha
mov
pushf
jmp
mov
pushf
popl
pushf
call
push
pushf
lea
jp
mov
pushf
mov
pusha
lea
jmp
mov
pushf
mov
push
call
pusha
pushl
popl
pushf
pushf
pushl
lea
jmp
sub
push
ror
and
add
cmc
xor
rcl
ror
or
sub
seto
cmp
pop
shl
movzbl
push
call
movw
mov
cmp
cmc
bt
stc
or
jmp
clc
bt
sub
lea
jp
mov
pushf
pusha
movb
pusha
lea
jmp
jmp
mov
pushf
mov
mov
movl
lea
jmp
pushf
jmp
pusha
mov
pusha
call
ror
and
movzww
stc
xchg
call
lea
jne
sar
shrd
pusha
add
mov
pusha
test
jmp
pushf
pusha
mov
jmp
sub
shrd
mov
call
adc
bts
sub
mov
btr
jmp
and
cmc
bts
rcl
mov
btc
mov
bt
call
push
pushl
popl
movl
pusha
pushf
pushf
lea
jmp
test
add
call
pushl
popl
movb
push
pushl
pushl
lea
jmp
call
call
pushl
popl
movb
pushf
pushl
lea
jmp
jmp
push
mov
pusha
mov
pushl
call
lea
cpuid
call
add
movb
lea
jmp
pushf
push
pushf
mov
pushf
pusha
lea
jmp
xor
not
rcr
shl
notl
mov
bsf
mov
stc
pushf
clc
sub
test
call
dec
mov
pushf
bsf
xchg
not
mov
movb
not
mov
jmp
xor
push
push
pushl
mov
pusha
call
mov
mov
pushf
push
lea
jmp
mov
mov
mov
movb
pushf
lea
jmp
pushf
popl
jmp
pushl
pusha
call
mov
pushf
popl
mov
call
mov
pusha
push
lea
jmp
popl
push
pusha
lea
jmp
pushf
popl
pushl
pushl
popl
pushl
pushl
movb
pushl
lea
jmp
jmp
mov
movl
pusha
mov
call
movb
mov
jmp
cmp
shr
mov
mov
movb
pushf
pushf
jmp
lea
lea
rdtsc
mov
aam
xadd
pop
aad
pop
stc
pop
shl
pop
not
setae
aaa
popf
lahf
pusha
lea
js
pushf
mov
mov
pushf
mov
mov
cltd
cwtl
setle
mov
xchg
mov
movsbw
cltd
push
mov
bswap
jmp
jmp
pushf
push
pushl
mov
jmp
pushf
mov
mov
lea
jmp
mov
pushl
call
mov
pushl
pushl
push
lea
jmp
shr
pushf
pushl
push
mov
jmp
pusha
pusha
mov
pushf
mov
pushf
mov
jmp
mov
pushl
pusha
lea
jmp
bswap
mov
push
push
lea
jbe
mov
jmp
call
mov
mov
pushf
call
and
clc
cmp
call
push
mov
pusha
jmp
movzbl
pushf
cmp
mov
clc
add
push
movb
lea
jmp
pushl
popl
pushf
push
lea
jmp
mov
pushf
mov
movb
mov
pushl
lea
jmp
call
sub
clc
sub
cmc
stc
pushf
clc
cbtw
push
cwtl
pushf
jmp
stc
pusha
sub
cmc
cbtw
call
movl
mov
mov
mov
lea
jmp
call
sub
clc
mov
cmp
add
pusha
pushl
lea
jmp
clc
clc
clc
sub
pushf
clc
jmp
movb
lea
jo
pusha
pushl
popl
pushf
movb
movb
pushf
lea
jmp
pushf
mov
lea
jne
push
jmp
mov
pushf
mov
push
jmp
mov
jmp
jmp
movb
mov
mov
pushl
pushf
pushl
ret
lea
jbe
popl
pusha
lea
jmp
shl
xor
adc
dec
shl
not
movsbw
sar
add
rcl
cmp
shl
btr
movzbl
call
call
mov
movb
jmp
bt
ror
test
test
push
sub
jmp
pushl
pushl
popl
mov
pushl
push
lea
jmp
call
repz
popl
call
btr
mov
bts
or
mov
jmp
mov
movw
lea
jmp
mov
pushf
pushf
pushl
ret
call
mov
pushf
mov
pushf
lea
jmp
cmc
ror
movsbw
mov
call
push
jmp
call
lea
jne
ror
xor
bsr
xorb
setl
pusha
pusha
jmp
call
push
mov
movb
push
mov
push
mov
push
jmp
mov
pushl
lea
jne
bt
bsf
bsf
mov
pusha
and
test
bt
bt
call
mov
movb
repz
popl
push
pushf
mov
lea
jbe
push
pusha
lea
jmp
xor
call
mov
mov
lea
jmp
movb
call
call
call
repz
popl
pushf
jmp
mov
call
sub
pusha
call
jmp
stc
or
mov
mov
shr
mov
add
adc
mov
call
sub
call
call
push
mov
pushf
movb
push
lea
jmp
pushf
pushf
pushf
jmp
push
push
lea
jmp
movb
jmp
bt
pusha
add
bt
cmc
not
cmc
pusha
clc
xor
test
jmp
add
jns
add
cmp
cmc
test
shrd
call
add
push
pushl
call
ror
push
mov
bt
bt
stc
add
stc
mov
jmp
mov
rep
shrd
mov
clc
rcl
shl
mov
stc
clc
pushl
popf
pushf
pushf
pushf
lea
jmp
push
mov
jmp
push
call
call
mov
jmp
stc
cmp
add
cmp
shrd
call
dec
shr
add
pusha
sub
lea
sub
mov
jmp
mov
pusha
not
pushf
pushf
xchg
call
pushf
shl
mov
push
jmp
rol
push
pusha
call
not
bts
shld
sar
mov
lea
mov
bt
test
clc
add
call
push
push
pushf
repz
popl
movb
pushf
jmp
mov
movb
mov
pushf
movb
pushf
lea
jmp
jmp
ror
not
mov
sbb
dec
mov
bt
pushf
movb
mov
sub
push
jmp
rcl
mov
mov
sbb
sub
push
mov
pushf
bt
sub
cmp
cmp
pusha
bt
shr
jmp
add
add
pushf
mov
call
repz
popl
call
pushf
pushl
popl
movw
pushl
lea
jmp
stc
stc
bt
sub
call
movb
pusha
pushf
inc
pushl
push
push
call
jmp
pushf
popl
lea
jae
pusha
pushf
movw
pushl
popl
push
pushl
mov
mov
lea
jmp
mov
pushl
movb
push
movw
lea
jmp
mov
movw
repz
popl
pushf
call
call
mov
bswap
movzbw
pushf
not
mov
lea
ja
pusha
cld
cld
lea
jl
pusha
pusha
pushf
rep
sbb
stc
mov
mov
pushl
mov
std
clc
stc
pushl
popf
mov
movb
mov
movw
lea
jmp
mov
pusha
pusha
call
shl
aas
shl
lea
rdtsc
call
call
pushf
popl
pushf
call
xchg
call
pushf
pushl
popl
mov
lea
jmp
mov
push
mov
jmp
mov
pushl
lea
jmp
cmc
not
clc
stc
call
mov
pushf
pushf
mov
call
mov
jmp
movl
mov
push
mov
mov
pushf
lea
jmp
bswap
or
das
btr
mov
movzbw
mov
clc
jmp
stc
movw
and
lea
ja
pushf
mov
pusha
pushf
popl
push
push
pushf
pushl
popl
movw
mov
lea
jmp
adc
pusha
pushl
bt
movzbl
pusha
sub
pushf
bt
pushf
ror
cmc
push
mov
bt
xor
jmp
add
pusha
mov
movb
mov
lea
jmp
lea
ja
sete
mov
das
shl
lea
inc
sub
xadd
lea
clc
and
jmp
pushl
popl
push
pushf
pushf
lea
jmp
mov
bswap
bswap
std
lea
call
mov
jmp
pushf
pushl
push
mov
push
mov
push
lea
jmp
stc
sub
movb
mov
pusha
lea
jmp
call
mov
call
stc
sub
pushl
clc
mov
test
mov
push
add
movb
lea
jmp
cwtl
aad
bswap
mov
clc
test
add
pusha
movw
pushf
call
mov
call
lea
jno
popl
pusha
pushf
movl
lea
jmp
mov
pusha
call
push
jmp
pushl
mov
push
pushf
jmp
stc
rol
clc
sub
add
je
sub
jmp
pushf
popl
call
pushf
jmp
mov
movb
lea
jmp
inc
mov
cmc
and
btc
bsf
mov
call
mov
mov
mov
movb
mov
movl
pushf
mov
mov
lea
jmp
mov
mov
mov
pushf
mov
push
push
repz
popl
pushf
call
mov
movw
pusha
push
lea
jmp
lea
jne
ror
pusha
movb
test
xor
clc
pushf
bt
bt
ror
cmc
pusha
add
mov
pushl
clc
sub
pushl
cmp
bt
sub
call
mov
pusha
pushf
add
push
jmp
clc
push
xor
pushf
stc
stc
mov
mov
jmp
lea
jne
cmp
xorb
movsbl
push
mov
pushf
lea
jmp
pushf
mov
pusha
lea
jmp
cmc
pushl
pushf
or
mov
xor
call
mov
call
mov
pusha
jmp
mov
call
pushl
mov
jmp
call
mov
pusha
call
cmp
call
jmp
mov
push
mov
push
repz
popl
lea
jns
pushf
mov
jmp
push
pushf
call
mov
pushf
mov
pushl
mov
pushf
pushl
pushf
jmp
call
jmp
pusha
xor
rcl
shl
mov
pusha
not
rcr
setge
mov
clc
stc
sub
pushf
shl
pushf
call
jmp
cmc
add
call
mov
jmp
lea
mov
pusha
mov
pushf
mov
movb
lea
jmp
mov
movl
mov
call
cmp
cmc
clc
add
push
lea
jmp
mov
pushl
pushf
call
pushf
mov
pushf
mov
pushl
movb
movb
lea
jmp
test
pusha
add
jmp
bsr
bswap
rcr
mov
cmc
pusha
add
sub
jmp
call
cwtl
call
pushl
call
bt
ror
clc
add
mov
mov
sub
call
lea
daa
or
xor
mov
cmp
cmp
cmp
cmp
bswap
test
bt
pusha
xor
mov
pushf
rol
clc
cmp
pushf
add
jge
add
test
clc
not
pusha
push
xor
call
jmp
sub
call
bt
add
jmp
pushf
push
push
movb
mov
call
mov
call
mov
movb
pushl
push
pusha
pushf
popl
call
pushf
jmp
pushl
mov
pushf
push
push
mov
lea
jmp
mov
pushf
mov
pushl
pushf
mov
pusha
repz
popl
mov
jmp
mov
jmp
mov
movb
repz
popl
mov
mov
movb
mov
pushf
lea
jmp
add
pushf
lea
jbe
push
pushf
mov
pushf
pushf
lea
jmp
jmp
jmp
push
jmp
call
pusha
pushf
movb
mov
mov
lea
jmp
pushf
jmp
movb
add
mov
pusha
lea
jmp
mov
jmp
jmp
mov
jmp
pushl
mov
pusha
push
movb
lea
jmp
pushf
call
test
mov
call
popl
pushf
mov
pushf
lea
jmp
dec
call
cmc
pushf
clc
stc
ror
mov
xor
call
decl
movw
mov
lea
jne
call
pusha
mov
pushf
lea
jmp
mov
jmp
push
call
jmp
add
movzbl
cmp
or
xor
xor
not
call
call
pushl
pushf
mov
jmp
mov
mov
mov
pusha
pushf
jmp
push
movl
pushf
repz
popl
call
movw
mov
push
push
mov
pushf
pushl
pushf
repz
popl
pusha
push
mov
jmp
mov
pushf
lea
jmp
call
mov
call
pushf
mov
call
call
pusha
add
call
pusha
call
pusha
cmpl
call
inc
mov
ror
pushl
mov
jmp
clc
add
cmc
stc
movw
mov
shld
pusha
jmp
mov
pushf
lea
jmp
call
jmp
pushf
pushf
pusha
pushf
popl
pushf
pushl
popl
movb
pushf
lea
jmp
mov
pushf
popl
jmp
pushf
mov
call
mov
mov
mov
jmp
setp
mov
not
bswap
movb
pushf
mov
lea
movzbl
movzbw
bswap
mov
bswap
xchg
repz
popl
pushf
pushf
lea
pop
mov
xchg
pop
mov
lea
pushf
pushl
popl
dec
pushf
xchg
mov
movl
movzbw
jmp
call
mov
push
pushf
mov
push
jmp
pushf
bt
mov
pusha
mov
cmc
clc
sub
call
shl
aaa
aas
mov
shl
mov
test
add
pusha
call
mov
call
jmp
call
test
cmp
cwtl
cmc
sub
jmp
movb
pushf
rep
sar
cmp
mov
shld
mov
pusha
cld
pushl
popf
push
push
pushf
pushf
lea
jmp
jmp
sub
movb
call
mov
pushf
jmp
mov
mov
push
pushf
mov
jmp
mov
call
call
mov
call
mov
mov
lea
jmp
jmp
pushl
push
call
stc
and
pushl
pushf
pushf
pushf
mov
pushf
pushf
popl
pusha
pushl
call
mov
not
cwtl
setne
push
lahf
setb
mov
call
call
mov
call
not
shrd
aad
movsbw
mov
cmp
rcl
mov
push
sub
jmp
mov
mov
pushf
pusha
push
jmp
sub
push
pushf
call
cmc
clc
lea
jge
ror
jmp
cmc
shr
call
inc
bts
ror
bswap
movsbw
pushl
dec
inc
rol
adc
shrd
shl
lea
shld
xor
bt
ror
jmp
mov
call
mov
movb
pushf
push
lea
jmp
repz
popl
movb
mov
mov
call
add
ror
bswap
pusha
mov
add
je
cmc
sub
push
jmp
call
push
push
mov
pushf
pushl
pushf
pushf
lea
jmp
movl
jmp
call
sub
jmp
pushf
mov
movb
call
pushf
movb
repz
popl
pushf
mov
mov
mov
push
movb
mov
movw
lea
jmp
lea
jne
stc
stc
pusha
xor
call
jmp
mov
jmp
push
jmp
mov
mov
mov
pushf
pusha
push
lea
jmp
movzbw
clc
add
pushf
or
shl
test
lea
xadd
shld
inc
sub
not
shl
mov
shld
clc
setle
mov
bsf
not
add
sbb
rol
mov
movzbl
shl
rcl
add
shl
mov
shrd
rcr
not
call
mov
mov
movb
pushl
lea
jmp
pushf
pushf
popl
pushf
jmp
push
jmp
repz
popl
movb
jmp
mov
call
call
pushl
jmp
push
pushl
popl
pushf
lea
jmp
mov
jmp
call
mov
stc
add
pushf
pushf
mov
pusha
pushf
movb
lea
jmp
push
rol
rcl
lahf
mov
bts
rcr
sub
bts
mov
cmp
call
stc
sub
mov
call
push
mov
push
pushf
pushf
lea
jmp
jmp
pusha
sub
jmp
dec
pushf
mov
jmp
not
push
mov
jmp
pushf
lea
jo
repz
jmp
cmp
mov
cmc
shr
rol
mov
jmp
pushf
mov
jmp
cmp
test
pushl
xchg
pushl
push
cmp
sub
call
add
mov
sbb
rol
test
inc
add
setle
mov
pushf
mov
pusha
lea
jmp
pushf
lea
jns
mov
pusha
lea
jmp
sub
pusha
add
pushf
pushf
pushf
popl
jmp
mov
pusha
pushf
lea
jmp
seta
mov
call
pushl
movl
call
shr
xchg
dec
movsbw
mov
stc
shl
pusha
mov
call
push
jmp
mov
repz
popl
mov
call
call
bsf
or
rcl
mov
call
jmp
daa
mov
cmp
dec
mov
pushf
test
sub
stc
movb
pusha
call
call
pushl
movw
push
mov
pushl
mov
push
call
call
pushf
bswap
cmc
pusha
add
push
dec
push
mov
mov
pushl
ret
push
mov
jmp
shrd
shr
rcl
rcl
mov
mov
mov
jmp
call
lea
bswap
neg
cmp
add
rcr
ror
dec
shl
xor
cmp
bts
and
jl
xor
mov
clc
pusha
pushf
cmp
add
pusha
call
sub
jmp
pushf
mov
call
clc
rol
bt
test
mov
test
sub
jmp
call
mov
movzbl
push
inc
ror
clc
bswap
stc
jmp
jmp
pusha
mov
jmp
mov
push
mov
jmp
jb
pusha
movb
pusha
mov
mov
lea
jmp
inc
cmc
bt
sub
cmp
movw
test
mov
mov
sub
movl
pushl
mov
pushf
lea
jmp
call
pusha
mov
mov
push
pusha
push
mov
mov
jmp
mov
pusha
pushf
mov
pushl
call
add
test
add
xlat
add
add
inc
jp
add
cltd
add
pop
add
and
add
jae
inc
je
add
xor
add
sub
add
das
add
and
add
mov
add
xchg
add
loop
inc
nop
mov
add
faddl
inc
lea
add
sub
add
das
add
lock
popl
inc
xchg
add
ja
inc
jp
add
add
inc
jb
add
or
inc
jp
add
xlat
add
add
rolb
inc
jae
add
pop
add
pop
add
ja
inc
jge
add
daa
add
add
add
inc
jne
add
stos
add
pop
add
or
inc
je
add
xor
add
pop
add
adc
inc
jae
add
pop
add
loop
inc
mov
add
add
roll
inc
mov
add
out
add
pop
add
cltd
add
and
add
add
sbb
inc
jb
add
mov
add
mov
add
sbb
inc
xchg
add
pop
add
lock
dec
add
pop
add
lock
rolb
inc
jno
add
add
or
inc
xchg
out
add
rolb
inc
jb
add
or
inc
mov
add
roll
inc
xchg
add
stos
add
cmp
inc
adcb
inc
jb
add
jae
inc
xchg
daa
add
mov
inc
xchg
add
sub
add
jae
inc
jb
add
mov
inc
test
add
add
cltd
add
sldt
daa
add
pop
add
daa
add
ja
inc
mov
inc
xchg
add
pop
add
lock
mov
add
faddl
inc
je
add
lock
add
sldt
sbb
inc
jne
add
pop
add
xlat
add
mov
add
add
and
add
out
add
pop
add
xlat
add
add
inc
jae
add
add
inc
add
jae
inc
jp
add
pop
add
sldt
cmp
inc
orb
xchg
and
add
faddl
inc
jb
add
push
add
roll
inc
jp
add
mov
add
mov
add
daa
add
out
add
test
add
cmp
inc
xorb
inc
xchg
cmp
inc
jns
add
daa
add
adc
inc
jb
add
mov
add
popl
inc
jb
add
test
add
faddl
inc
test
add
push
add
or
inc
jbe
add
add
inc
jl
add
dec
add
dec
add
loop
inc
jbe
add
xor
add
dec
add
mov
add
mov
add
pop
add
add
inc
sbbl
inc
je
add
lock
test
add
popl
inc
xchg
jl
inc
jp
add
mov
inc
jb
add
jb
inc
mov
add
pop
add
mov
add
xchg
add
mov
add
and
inc
jb
add
call
add
cmp
inc
test
add
popl
inc
jns
add
pop
add
pop
add
faddl
inc
xorl
add
xchg
add
push
add
xlat
add
lock
daa
add
xlat
add
mov
inc
jns
add
stos
add
ja
inc
lea
add
or
inc
orb
xchg
jl
inc
xchg
cmp
inc
je
add
daa
add
popf
add
xchg
add
mov
add
mov
clc
cmp
jmp
push
mov
pushl
jmp
call
movb
jmp
