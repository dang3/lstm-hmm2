push
call
ret
ret
add
inc
or
leave
inc
xchg
jb
nop
cmc
jno
push
add
push
and
mov
loop
into
enter
daa
xchg
jge
cmp
add
aaa
push
and
jae
inc
mov
xor
xchg
loop
sbb
movsb
imul
repz
jp
js
push
bound
push
sbb
sub
dec
sbb
add
cli
out
sub
stos
xor
push
sbb
mov
xchg
ror
std
mov
jecxz
xorb
jae
repnz
repz
cs
and
mov
and
jg
test
shrb
sarb
jp
pop
fildl
je
rcrl
cli
das
and
shl
push
push
imul
inc
add
cwtl
mov
jl
andl
push
mov
shlb
add
aas
cmc
addb
stos
jns
and
mov
test
scas
test
xor
and
mov
sub
int
aad
or
repnz
sub
out
stc
scas
adc
add
les
xchg
xchg
xor
aaa
ficomps
call
insb
xor
xchg
adc
std
test
dec
add
jmp
nop
fisubl
mov
sub
jb
stc
ret
andb
js
push
cmp
jae
sub
in
cmc
pop
jnp
pop
lods
mov
pop
imul
or
les
jg
mov
and
and
pusha
xchg
call
into
pop
mov
popf
fdivs
mov
jbe
inc
repz
mov
cs
mov
dec
sar
push
or
pop
sub
push
daa
cmp
add
loop
in
out
sbb
add
pop
fwait
les
mov
mov
pusha
dec
nop
sbb
push
pavgw
dec
movsl
lret
xchg
mov
and
xchg
adc
inc
mov
stos
in
ja
jp
xor
and
mulb
or
cmp
or
xchg
xor
pop
pop
movsl
ljmp
aam
pusha
jge
sub
adcb
imul
lret
in
enter
or
mov
lret
dec
sub
mov
sarl
popa
movsl
cli
mov
insl
add
xchg
pop
shl
mov
xor
shrl
and
sub
stos
scas
ja
xor
cmpsb
and
pop
pop
add
mov
imul
mov
stos
mov
lahf
aaa
and
scas
addr16
xchg
and
popl
ds
mov
clc
cmc
out
cli
ds
mov
mov
imul
pop
xor
inc
inc
ret
mov
or
pop
mov
test
repz
lcall
movsl
inc
xor
or
and
cmp
fnstenv
sbb
scas
or
dec
pusha
xor
xchg
aas
push
lret
mov
push
mov
pop
sub
xchg
popa
popa
pop
fisubs
jge
clc
leave
ss
gs
push
in
fidivs
push
shll
movsb
sub
rcll
xor
jmp
fucom
cs
out
negb
cmpsl
popf
lret
push
out
daa
xchg
xchg
aas
jns
jb
adc
and
xchg
inc
popl
push
stc
cmp
sbb
sub
xchg
mov
in
out
mov
fcomps
or
mov
add
mov
and
hlt
jg
mov
push
jo
inc
jp
push
sbb
jno
les
fstps
in
fs
aas
repnz
andl
add
ja
xadd
lar
dec
add
es
std
daa
add
push
stos
test
mov
push
js
and
out
cmpsl
sarb
sbb
mov
adc
adc
ja
lods
pop
adc
dec
mov
mov
inc
mov
jl
loope
mov
add
andl
and
pusha
out
in
mov
cli
xor
xor
adcb
pop
nop
faddl
cmp
dec
or
add
orps
xchg
xchg
aaa
jno
mov
scas
fs
jae
in
fadds
pop
sub
std
push
out
repz
lret
jae
push
mov
inc
and
or
fmul
loop
pusha
xor
mov
mov
push
push
pop
jb
mov
fisubs
add
scas
add
lods
aad
push
fistpll
push
cmp
cld
pusha
ja
movsb
orps
push
aad
lahf
or
cltd
push
lds
test
mov
mov
jg
inc
mov
loop
jbe
xor
std
fwait
and
das
mov
movsl
daa
jns
mov
jno
sbb
mov
push
popa
loope
or
pushw
mov
xchg
scas
mov
pop
jge
stos
in
jo
mov
les
cmp
or
xor
mov
adcb
scas
setl
add
bound
stc
adcb
cmp
pop
es
and
movsb
int3
mov
sar
and
xchg
sbbl
push
dec
xlat
lret
xor
or
cwtl
sub
xor
xor
or
pop
sbb
adc
xchg
push
push
inc
and
mov
inc
adc
cmc
repnz
dec
xor
add
push
out
add
popa
movsb
adc
mov
cltd
dec
rcrl
shl
loope
jmp
jae
test
pusha
icebp
roll
sub
lods
cmp
inc
fsubrl
inc
dec
es
iret
sbb
dec
cmpsl
ss
xor
cs
push
push
cltd
push
fstps
jne
scas
push
cmp
sahf
inc
cld
xchg
mov
xorl
clc
outsb
push
jp
and
or
jle
cmp
test
je
aad
icebp
lods
addr16
lret
shll
sub
adc
fmuls
test
lods
lea
fdivr
in
mov
addb
push
dec
movsb
imul
nop
inc
clc
mov
jno
mov
push
imul
lods
xchg
cmc
mov
dec
inc
pop
cmpsl
mov
push
inc
les
lcall
movsb
scas
aaa
adc
pop
int3
loop
psllq
adc
es
scas
pop
mov
fnstsw
hlt
aaa
jp
aaa
inc
mov
cltd
test
mov
sbb
hlt
inc
aam
mov
and
xorb
xchg
inc
je
shlb
sbbl
cmpsl
push
ret
jb
dec
mov
dec
paddsb
lods
xor
cmp
imulb
add
dec
xchg
ljmp
push
rcrl
rclb
jnp
or
cmp
mov
mov
sbb
out
push
push
les
popa
xchg
and
jb
std
imul
ror
and
cmp
cmp
add
mov
add
shrl
in
arpl
out
inc
push
call
jp
pop
fwait
adc
xchg
mov
imul
sti
dec
loope
roll
pcmpgtb
ljmp
test
jg
mov
pop
adc
addb
or
mov
shlb
xchg
mov
cltd
int
add
pusha
sub
mov
outsb
lret
in
push
xchg
jge
xchg
lahf
pop
push
fs
and
mov
aam
mov
or
cmp
aaa
icebp
inc
mov
stos
ret
js
lods
push
and
imul
addr16
fists
mov
pop
cli
cltd
inc
mov
jge
leave
fistpl
fmuls
jp
popa
fmull
fadds
fidivrl
xchg
add
aaa
ret
daa
lahf
and
cmp
and
insl
push
sbb
sbb
cmp
mov
ss
cmp
mov
mov
sbb
xlat
cmc
test
lret
shrb
or
es
int3
xchg
bound
test
and
dec
mov
pop
mov
shrb
or
or
push
arpl
inc
pop
cmc
les
les
or
push
int
insb
sub
ret
movsl
dec
hlt
mov
ds
and
pusha
scas
or
daa
data16
pop
in
jg
test
adc
mov
loopne
imul
jge
and
mov
std
nop
mov
pusha
fcomps
or
sub
and
ljmp
inc
fsubrs
inc
push
js
dec
xor
sub
or
dec
icebp
mov
bound
jno
jecxz
rcrb
xor
in
cld
mov
xor
dec
jo
jecxz
or
sub
fdivl
repnz
sub
sbb
push
xchg
mov
scas
flds
sbb
pop
scas
or
jge
xchg
xchg
mov
cmp
icebp
int3
fucom
aas
addr16
dec
xorb
add
cli
mov
adc
inc
jb
sub
xorb
stc
insb
add
sub
out
xor
or
cmovo
fimull
stos
adc
sbb
das
adc
dec
lock
scas
sub
ret
in
cmp
ja
imul
and
push
push
repnz
in
sbb
cmc
mov
pop
scas
jno
dec
sub
loop
dec
xchg
inc
jne
or
push
pop
inc
leave
in
mov
pop
sub
jno
aaa
mov
rolb
pop
pop
mov
cltd
rcl
popa
add
inc
mov
jae
sbb
jmp
in
push
int
mov
mov
push
and
rorb
push
or
fdivrl
mov
lcall
push
push
mov
mov
ss
pop
mov
jge
and
pop
mov
mov
nop
dec
dec
imul
fisttpll
push
loopne
movsb
pop
ljmp
jae
ret
add
vdivpd
mov
in
dec
lret
push
into
and
mov
xor
push
aad
fiadds
sub
and
movsl
cli
ja
push
popf
mov
cmp
sahf
mov
je
fbld
arpl
push
loopne
pop
ret
sbb
js
loope
mov
xor
rcll
sbb
xchg
sub
out
and
daa
cmp
mov
int3
xchg
inc
movsb
cmc
in
xlat
mov
scas
lret
cwtl
push
addr16
adc
push
rcr
mov
xlat
ret
dec
shlb
fiadds
ret
pop
sbb
mov
dec
ljmp
adc
cmp
pop
int3
sub
roll
add
dec
cs
dec
add
out
pop
daa
imul
lods
int
cmp
mov
adc
sub
jnp
push
add
mov
mov
cmp
enter
mov
in
int
in
add
jge
ret
shr
in
mov
lcall
scas
out
push
test
mov
sbb
popf
movsl
shrb
out
mov
inc
xor
bound
aaa
dec
jne
cld
xor
repz
fld
mov
mov
rorl
push
rolb
fsub
addr16
lock
imul
call
or
and
in
mov
mov
jns
dec
scas
add
div
rol
dec
inc
nop
les
ud2
cmp
rolb
pop
xchg
cmpsl
mov
mov
daa
inc
lcall
dec
adc
out
pop
ret
lods
ret
cmp
jmp
jno
daa
pop
sub
bound
jne
cmp
loopne
enter
jle
rcr
jo
sub
adc
inc
mov
mov
pop
xor
xchg
inc
cmpsl
hlt
in
cs
jge
kaddw
std
add
cmp
sub
xchg
push
imul
xor
shrb
cmc
ret
cmc
xor
mov
icebp
xchg
push
sub
lret
or
cmp
mov
push
dec
scas
jae
fistpl
divl
popa
outsl
test
xor
add
lcall
into
sbb
pop
pushl
lcall
push
loop
std
push
or
fwait
jp
and
mov
sti
xchg
inc
testb
jp
insl
das
xor
test
jo
xor
sub
mov
movsb
repnz
sahf
outsb
and
fistpll
and
test
push
inc
jg
aad
je
into
dec
mov
xchg
and
ljmp
dec
cmpsl
cld
sbb
jb
addr16
mov
das
das
leave
mov
shll
mov
pusha
test
mov
sub
jnp
leave
pop
xchg
inc
jecxz
out
and
lret
lds
dec
stc
addr16
in
fmulp
cmp
popf
shlb
scas
iret
inc
stos
push
sub
and
push
sti
rolb
mov
sbb
fnsave
loope
sbb
adc
push
mov
add
inc
lods
les
push
jmp
ss
lret
ja
push
or
fiadds
pop
or
cmp
adc
aad
loop
cmp
inc
jo
in
sbb
add
sbb
push
sbb
rolb
sub
movsl
cwtl
scas
add
and
mov
les
jns
xchg
sub
xchg
call
inc
std
sbb
stos
pop
cmpsl
addl
cmpsb
jmp
or
jl
fiaddl
in
cmp
mov
mov
push
mov
iret
ss
cmp
pop
push
into
daa
pop
js
mov
je
dec
test
mov
loope
cmp
or
dec
mov
jae
adc
mov
and
lea
add
and
test
mov
jnp
fildl
ja
dec
jno
dec
pop
shrb
ss
push
ss
ds
lret
mov
sbb
sub
call
sbb
iret
xorb
outsl
cltd
movsb
dec
jle
or
cld
jmp
lret
dec
pop
and
jp
push
sbb
loop
jae
fnstenv
shr
fst
jg
lea
loop
outsl
push
rcl
and
adc
xlat
mov
das
bound
inc
roll
insb
scas
dec
or
inc
mull
mov
imul
enter
ret
test
xor
icebp
add
adc
jnp
insl
shrb
adc
bound
lret
xchg
mov
imul
es
dec
loopne
cmpl
loop
rorl
rol
or
lds
out
add
popa
movsl
mov
push
dec
or
sub
xchg
ja
sub
sahf
push
inc
in
pop
into
xchg
call
out
mov
das
cld
cmp
jae
mov
movsb
mov
iret
adc
adc
outsb
sub
or
mov
mov
mov
or
fimull
and
imul
sub
cmc
gs
leave
cmp
cmp
call
test
jg
out
mov
aad
rol
shl
inc
or
dec
call
inc
testl
shlb
mov
pop
jmp
or
push
or
mov
push
negl
test
out
movsl
mov
rolb
and
cli
sub
fstp
jmp
mov
les
adc
add
add
cld
sub
bound
add
or
stos
mov
jl
mov
adc
nop
mov
push
dec
add
dec
orl
push
adc
loop
dec
xchg
mov
loope
cltd
cmp
dec
push
jmp
cmpsl
jne
dec
mov
xorb
das
jmp
aad
dec
shll
inc
push
hlt
icebp
cmp
lods
lcall
orl
and
push
push
scas
fnstenv
insb
sbb
lahf
cmp
sbb
xchg
sub
push
xchg
pop
cmp
hlt
push
inc
or
aaa
sbb
mov
fstpt
call
sbb
pop
add
test
inc
dec
xchg
jmp
or
jmp
add
pop
mov
clc
mulb
add
and
cmpsl
dec
aam
mov
dec
pop
pop
push
mov
inc
out
jge
and
scas
stos
outsl
pop
push
shl
cmp
pop
int
addr16
push
sbb
xchg
popa
fwait
sub
adc
icebp
pop
shll
inc
stos
cld
xchg
daa
dec
jb
xchg
imul
mov
push
xchg
mov
push
sbb
ret
int3
push
mov
xor
lock
inc
cld
loop
sbb
pop
loope
and
jne
mov
out
and
std
fists
sbb
mov
imul
cmp
inc
mov
mov
add
jns
pop
sti
int3
lahf
inc
add
std
sbb
in
ljmp
inc
test
ds
sbb
ljmp
cmpsl
leave
subl
imul
scas
je
push
push
rclb
inc
or
cmc
aaa
push
aam
mov
andl
jg
bound
mov
or
or
enter
mov
fwait
push
inc
cltd
xor
aam
imul
dec
fnstenv
ror
mov
pop
inc
bound
sub
lods
dec
lcall
jge
addr16
shll
xor
js
outsb
icebp
jle
sbb
dec
pusha
movl
xchg
add
mov
dec
mov
sub
jmp
out
push
data16
gs
inc
aas
repz
inc
out
jne
dec
fsubs
mov
fst
loopne
pop
lret
mov
ret
lods
push
js
les
pop
movsb
xchg
mov
xlat
stos
lock
aad
xchg
lret
cmp
cmp
push
push
nop
stos
aas
aaa
repz
cmp
pop
cli
fcompl
mov
cld
cwtl
jl
or
pop
push
mov
shlb
mov
push
dec
xlat
clc
mov
push
inc
shrl
clc
enter
sbb
fs
push
mov
xor
mov
inc
jbe,pt
and
mov
mov
xor
movsl
push
fildl
stos
mov
test
push
jge
das
jbe
jnp
jp
das
add
lret
lea
hlt
mov
cwtl
lahf
mov
test
adc
clc
jnp
fistps
outsb
movsb
mov
or
dec
loope
fsts
or
out
ljmp
shll
xchg
lock
loopne
je
aad
test
mov
push
out
adc
scas
and
mov
das
or
cltd
stos
jb
lea
xor
lret
arpl
ds
adc
loope
pop
addl
jl
cmp
icebp
jmp
mov
or
push
fucomip
decb
out
pop
xor
inc
inc
scas
aad
fs
out
sbb
pop
jecxz
and
testl
adc
iret
adc
pop
sti
cltd
shll
ret
and
mov
jno
hlt
xor
into
add
fwait
sbbb
mov
mov
lcall
jg
xchg
bound
test
test
push
add
and
pop
notb
sbb
cwtl
add
fistpl
and
test
xchg
ds
ss
loopne
dec
mov
mov
inc
fcmove
jge
pop
outsl
in
repz
shrl
das
xor
imul
and
mov
loope
pop
jns
test
push
out
mov
adc
outsb
sbb
xor
inc
mov
mov
jle
mov
mov
push
inc
in
pop
sbb
adc
dec
mov
repz
xor
stos
iret
xchg
jb
and
push
clc
mov
in
mov
pop
pop
or
cmp
gs
stc
jg
psllq
adc
xchg
jmp
or
mov
decb
shl
sub
cld
clc
insl
in
je
jno
cld
lret
or
arpl
outsb
push
in
add
xor
jns
fimuls
cmp
clc
aam
inc
jno
cmp
xchg
or
jle
in
add
mov
mov
in
push
call
push
inc
in
movsl
xchg
cmc
push
inc
cs
mov
push
sbb
stos
push
test
sar
aad
pop
in
clc
mov
pop
add
cmpsb
xorl
cmp
inc
pop
nop
jp
push
cmp
pop
jo
jle
xchg
pop
cli
lds
jg
ret
fidivl
cmp
cmpb
or
add
gs
pusha
out
pop
push
das
int
inc
pop
inc
rol
insb
cmpb
cltd
fstpl
push
dec
and
cmp
cli
mov
mov
nop
dec
pop
lret
inc
pop
or
ja
jae
jo
pop
int
mov
mov
rcl
in
mov
data16
xlat
icebp
mov
div
in
in
jb
mov
pop
imul
clc
xor
jg
stos
je
scas
outsb
cmpsl
mov
ds
add
pop
mov
arpl
mov
rcrl
push
ret
addr16
jg
popf
adc
out
shll
jnp
mov
fs
inc
stos
testb
push
mov
cli
stos
call
in
cmp
xchg
insb
jmp
xor
in
idiv
add
dec
pop
das
ret
cld
jl
mov
xchg
sub
pop
xor
pop
xchg
add
cmp
scas
inc
shlb
xlat
shlb
dec
movsb
dec
lods
sbbb
pop
jnp
xchg
aad
test
mov
push
jne
addl
mov
or
adc
das
dec
mov
stos
mov
xchg
mov
xor
jae
or
mov
pcmpeqw
inc
sahf
adc
sti
xor
rorl
ret
lds
stos
fldl
dec
sub
pop
cmp
jno
pushf
xchg
enter
lret
subb
das
push
xor
sbb
int
pop
les
xor
in
mov
dec
lret
fildll
dec
lods
mov
and
inc
std
fists
or
cmc
and
aaa
aas
dec
mov
std
inc
ret
sahf
mov
xor
es
xchg
addr16
cli
enter
test
dec
add
pop
cld
xchg
jns
lock
xchg
and
jecxz
ljmp
push
stc
add
mov
enter
xchg
inc
pusha
pop
sub
lret
pop
jnp
cmp
xchg
test
icebp
push
mov
pushf
faddl
push
les
in
in
ret
mov
in
xchg
sbbl
or
mov
nop
pop
sbb
js
iret
jbe
sbb
adc
movsb
js
ljmp
xchg
not
xchg
jecxz
out
lret
adc
test
fisubrs
or
mov
adc
flds
stc
idiv
in
icebp
cmp
mov
or
jae
insb
imull
into
push
and
enter
dec
adcb
mov
fildll
lds
cltd
pusha
insl
aas
sub
into
daa
add
js
out
cs
dec
nop
jo
les
outsl
js
push
jg
xor
andb
leave
push
insb
push
mov
dec
xchg
push
pop
lods
lcall
and
push
adc
mov
xor
jae
mov
and
sbb
xadd
jmp
out
iret
mov
leave
pop
repz
in
add
mov
fnsave
xchg
test
jo
roll
pop
jmp
dec
pop
jge
shrb
push
addr16
or
mov
sahf
shll
xor
mov
jg
iret
adc
sbb
cmp
sbb
push
adc
xchg
sub
cmp
cmc
fdivl
in
cmp
in
stc
jnp
clc
jno
sub
leave
jae
or
jge
lret
jle
adcb
movsb
in
je
xlat
sbbl
in
dec
not
pusha
mull
sbb
and
js
cmp
cwtl
dec
dec
sbb
cmc
pop
jle
shrb
in
mov
pop
dec
cmp
xchg
call
scas
add
or
dec
mov
out
test
pop
sarl
inc
addr16
mov
inc
sbb
stc
aaa
in
into
xor
outsb
jp
add
mov
ret
lret
ja
bound
and
in
push
jmp
add
insl
sahf
mov
xchg
mov
loopne
jnp
sub
pop
fdivl
push
cmp
inc
pop
lea
insb
stos
dec
pop
sub
cmp
mov
jno
addr16
call
cli
in
and
dec
sub
gs
popa
out
mov
data16
lcall
pop
out
pop
popa
mov
mov
stos
dec
arpl
sub
push
in
aas
pop
and
fiaddl
cli
test
shll
pusha
dec
fs
jo
jecxz
pop
imul
mov
je
fisttpl
scas
push
cmp
mov
lds
movb
ljmp
cs
push
mov
xchg
pop
jns
or
test
push
clc
scas
mov
inc
rolb
adc
or
dec
push
mov
xchg
push
add
arpl
into
clc
lret
adc
cmpl
mov
fcoml
fistpll
push
notb
mov
dec
imul
jbe
fwait
sbb
pop
push
in
jle
data16
aad
std
xchg
pop
ss
out
and
pop
jle
pop
add
inc
pop
and
push
mov
jnp
xor
stos
imul
adc
nop
data16
adc
cmpsb
in
xchg
scas
test
out
cmp
out
lea
loope
xchg
setp
sub
cmpl
dec
cmp
and
xorb
pop
jg
jnp
cli
js
mov
hlt
xor
push
lcall
pop
ds
dec
push
repnz
ja
push
or
sbb
jno
xor
or
pushf
xlat
int3
leave
mov
negb
add
xchg
sub
sub
push
rcl
push
sbb
cmp
jl
jbe
cmp
or
mov
adc
pop
aad
xor
lods
ret
ret
int3
jmp
inc
xchg
mov
movsb
jbe
push
cltd
outsl
popa
or
fists
jns
int3
mov
aaa
mov
xchg
std
mov
pop
mov
pop
fidivl
lock
dec
nop
int
lods
and
mov
and
ret
jae
and
dec
push
lock
sbb
push
sub
adc
scas
xlat
dec
int
sbb
adc
push
das
jb
or
sub
mov
push
inc
mov
mov
ss
and
jmp
icebp
inc
mov
mov
push
and
test
jb
dec
cltd
fcomip
xor
jmp
xchg
pop
xor
jbe
cmpsb
mov
push
test
mov
adc
inc
movsl
daa
pop
push
movsl
stos
dec
mov
fneni(8087
dec
pop
cmp
push
cmp
aas
mov
loopne
dec
outsb
or
and
push
sbb
aaa
mov
dec
jo
arpl
push
cmp
in
mov
nop
clc
add
aas
xor
push
test
leave
sbb
xor
lret
notb
xor
cli
cmp
out
or
stos
push
cld
and
int
sbb
or
push
jle
pop
mov
in
jl
pusha
out
cltd
fsubp
test
ret
fstl
jo
aad
sub
xchg
inc
enter
push
push
mov
adc
stos
push
lods
jae
aam
rclb
ficoml
mov
cmp
ret
cmpsl
mov
adcb
mov
xor
push
mov
inc
in
push
dec
adc
popl
mov
sahf
sub
push
xorl
and
dec
nop
fiadds
aad
sub
lcall
sbb
in
xchg
ret
cmp
mov
loopne
iret
data16
cmc
call
ljmp
lds
das
es
fldenv
cltd
mov
mov
mov
xor
dec
imul
es
aaa
and
ficompl
in
pop
cmp
pop
sbb
jmp
repnz
aas
or
mov
sbb
inc
in
arpl
daa
adc
or
sub
lahf
bound
idivb
push
sub
icebp
mov
movsl
add
enter
jb
add
xchg
xchg
mov
xor
scas
pop
mov
in
xchg
mov
xchg
cmp
push
das
sbb
cmpsb
add
lods
js
inc
sub
xchg
test
and
pop
xchg
xchg
cs
adc
adc
inc
or
dec
add
sbb
cmp
and
jae
aad
mov
jno
mov
adc
ss
add
loope
outsb
mov
gs
push
hlt
in
movsl
push
xlat
xor
dec
test
adcb
add
xor
inc
inc
mov
lcall
hlt
cmp
test
or
repz
icebp
mov
sub
outsl
cwtl
inc
and
mov
mov
adc
test
rclb
adc
or
out
scas
mov
pushf
les
test
adc
xchg
jecxz
test
fsubrs
jne
add
mov
rclb
clc
dec
int
jo
sub
jecxz
jne
sub
sbb
jo
cmp
and
in
sbb
xchg
push
std
sbb
xchg
mov
fldln2
out
or
inc
movsb
or
lret
jno
sbb
int3
inc
mov
jbe
mov
clc
push
xor
inc
cltd
jne
outsl
aaa
inc
xor
jg
jae
stos
mov
adc
rcll
in
fildl
call
adc
push
out
pop
inc
repz
call
push
dec
nop
add
mov
repnz
mov
and
lock
push
dec
and
clc
push
mov
in
add
xor
cmp
fstpl
movsb
push
rcl
mov
xchg
lcall
ret
clc
testl
push
xchg
lcall
mov
jge
and
imul
in
ds
jl
fldcw
aaa
pop
enter
inc
aas
jge
ds
subb
nop
in
std
xchg
sbb
out
dec
push
sbb
cmp
push
imul
das
inc
jb
sbb
mov
pop
jl
mov
lds
into
loop
ror
add
jecxz
mov
test
ret
or
adc
sub
xor
dec
imul
movsl
lret
jecxz
mov
enter
popf
out
ret
jo
mov
shrb
cmc
das
std
outsb
mov
pop
xor
push
mov
and
pushf
cmp
cltd
jecxz
push
sub
call
inc
cmp
and
xchg
shl
and
das
and
mov
cmpsb
ja
popf
add
push
or
jecxz
loopne
mov
scas
or
add
andb
push
test
lcall
xchg
xchg
xor
sbb
aam
cli
dec
call
mov
mov
pop
and
arpl
cwtl
loopne
cmp
and
sbb
cmpsb
xor
sub
push
fnsave
inc
adc
jle
roll
mov
xor
shlb
sbb
and
sub
cmpsl
mov
jns
int
mov
mov
out
push
insb
mov
outsb
pop
sub
pop
lock
aaa
xor
or
lcall
or
xchg
xorb
rclb
roll
sbbb
push
pushf
jmp
hlt
push
jmp
ret
test
lods
push
loope
test
bound
xchg
clc
leave
add
pop
sub
pop
xchg
inc
sub
adc
rcrl
push
imul
mov
fldenv
lea
pop
jl
mov
fidivl
les
aam
mov
mov
sub
mov
out
xor
loop
inc
notl
sbb
repz
int
sti
dec
xor
and
mov
inc
mov
mov
shrb
inc
lahf
call
or
jb
sub
nop
shlb
movsb
jecxz
mov
ja
jno
jl
inc
push
xor
or
cltd
ud0
sub
xchg
arpl
inc
adc
icebp
dec
or
fisttpll
or
cmpsb
or
sbb
shll
inc
popl
add
adc
mov
test
xchg
jle
and
fcomps
loope
sub
out
mov
push
and
imul
test
imul
inc
fldenv
sub
movsl
aaa
sbb
fwait
ret
pop
fimull
ficoml
sbb
test
sub
jg
insb
call
push
mov
xor
arpl
sub
inc
adc
pop
jmp
mov
stos
and
inc
xor
pop
inc
mov
dec
xchg
dec
jecxz
pop
and
cli
mov
xchg
hlt
mov
and
and
inc
in
ds
negl
jle
cmp
push
jge
inc
loop
adc
xor
mov
xorb
in
pop
jns
sub
mov
mov
pusha
xchg
xchg
sarl
stos
in
mov
aam
lods
sub
pop
sub
out
fsubr
sub
xchg
mov
xor
push
scas
shlb
daa
cmp
xor
jo
jg
rorb
mov
addr16
jp
jecxz
loopne
aad
pop
cmp
push
std
stos
adc
bound
data16
lahf
xchg
inc
or
inc
je
xchg
inc
sub
sbb
shlb
and
call
xorl
mov
xchg
shll
pop
clc
mov
cmpl
in
fistl
mov
pusha
sbb
not
mov
fidivs
xor
jmp
aam
sub
jmp
and
outsl
cmp
in
std
popf
nop
or
pushf
jl
push
fisubl
scas
cs
inc
or
mov
push
subb
adc
test
rcrb
call
in
cmpsb
inc
lahf
stc
cmpsb
mov
aas
test
dec
inc
xchg
mov
aas
fbstp
or
arpl
aad
pushl
popf
es
repz
sub
popf
dec
push
roll
sbb
cmp
cwtl
add
mov
fsubs
adc
movsb
push
cmp
test
xchg
xchg
ret
mov
lret
sub
lds
pop
out
movb
icebp
jmp
add
add
pop
cli
xchg
rcl
sbb
inc
mov
jle
sbb
std
mov
repnz
cmc
mov
fldt
pop
dec
rcrl
mov
es
ja
xchg
inc
xor
notl
inc
inc
loopne
inc
notl
and
jle
test
aas
nop
out
in
mov
stc
sub
lahf
pop
mov
scas
icebp
cmp
jle
mov
jecxz
insl
xchg
inc
and
adc
jl
jb
sub
repnz
or
pop
and
cltd
add
pop
out
cmpsb
mov
push
and
mov
inc
stos
and
outsb
push
test
popf
xor
adc
int3
outsl
mov
pop
and
sbb
nop
in
arpl
xor
xor
insl
mov
fistl
repz
and
lock
inc
mov
ret
mov
pop
jge
jno
mov
cld
insb
leave
dec
fldl
add
push
jge
push
lret
jb
sbb
outsl
int
dec
mov
nop
mov
inc
stc
sbb
cmpb
ja
insb
inc
popl
adc
fcompl
divl
aam
cmp
mov
sbb
lock
stos
fildl
push
cmp
not
sahf
jle
fadds
or
pop
out
pop
jl
mov
les
cmp
btr
inc
insl
cli
outsb
ja
pop
icebp
pop
xlat
loopne
call
cld
es
or
lea
roll
imul
mov
stc
and
enter
sbb
jp
inc
push
sub
movsb
imull
fsubs
push
mov
out
push
das
and
xchg
fsubs
adc
or
push
incl
sub
pop
pop
inc
dec
jmp
mov
lcall
jl
adc
lock
and
cmp
leave
cmp
daa
js
gs
inc
sub
cmp
xlat
pop
in
adc
pop
arpl
push
jo
mov
out
dec
fldenv
cmpsl
call
cmpsl
inc
test
sub
sub
daa
pop
loope
popf
or
xchg
push
mov
popf
jne
sub
xchg
lods
xchg
jns
and
xchg
insl
dec
nop
test
insl
dec
iret
imul
divl
stc
jne
add
pop
filds
mov
xorb
inc
into
xor
mov
stc
push
sbb
test
pop
dec
das
lock
pop
movl
mov
fs
test
enterw
sbb
imul
adc
inc
arpl
mov
fldenv
lcall
out
xchg
jg
jmp
cli
cmp
je
xchg
enter
jns
xchg
nop
out
lahf
neg
jne
mov
and
xor
jnp
pushf
insl
stos
fs
jge
aam
je
out
ret
dec
ret
lock
cmp
cmp
cmp
push
arpl
cmp
stos
in
cmp
jle
push
jp
bnd
std
and
hlt
inc
dec
int3
shl
add
inc
jbe
shlb
movsb
cmp
outsl
add
scas
imul
ficoms
stos
push
dec
aad
sti
call
cmc
xor
mov
scas
ljmp
loop
cmc
in
das
rcrl
pop
sbb
push
lret
xor
and
jnp
andl
push
imul
jb
fstl
lcall
cli
lea
repnz
cmp
and
scas
pop
clc
dec
out
les
dec
out
jnp
dec
lds
ja
or
faddl
xor
jmp
add
aad
test
clc
sub
push
pusha
mov
in
adc
dec
jo
sbb
add
test
out
adc
xchg
xchg
stos
mov
mov
or
push
push
fistpll
mov
add
cli
call
aad
aas
mov
xor
clc
push
loopne
daa
je
es
mov
clc
imul
push
push
dec
xor
jl
sub
das
and
add
mov
dec
adc
pushf
and
and
pop
aad
inc
mov
int
mov
stc
sbb
add
lret
mov
test
cltd
jmp
jnp
enter
sub
and
test
imul
popa
bound
mov
and
loop
lcall
add
std
mov
addl
test
push
cli
and
sbb
movl
xor
imul
mov
gs
cmp
frstor
stos
push
and
jnp
xchg
aaa
pop
lds
cmp
orb
push
mov
fadd
or
test
lds
mov
adc
pop
lea
mov
ss
es
ljmp
into
and
xchg
or
mov
icebp
xor
sub
sbb
mov
les
push
jo
sub
push
ret
jge
nop
xor
push
pushf
addr16
mov
cmpsb
push
and
rolb
sbb
cmp
jbe
outsl
jecxz
psllq
add
dec
aaa
mov
adc
es
inc
jg
test
insl
shrd
icebp
or
ljmp
xlat
fcmovnbe
cmpb
movsb
adc
add
jp
int3
sahf
jno
out
xor
dec
adc
je
stos
jmp
or
imul
push
test
iret
out
stc
dec
push
pop
inc
ja
mov
dec
sub
loopne
sti
cmp
fsts
dec
cwtl
xchg
mov
sub
test
lret
pop
push
dec
push
mov
decb
mov
mov
cli
add
cmc
sub
xchg
xlat
imul
adc
sar
mov
mov
repnz
orb
adc
xchg
xchg
add
lahf
jecxz
lret
xchg
inc
stc
int3
mov
stos
andb
jg
xor
mov
into
and
mov
sbb
je
sub
jnp
mov
jne
jae
sti
lock
xchg
je
lcall
dec
xchg
xor
nop
test
or
pop
jae
or
jle
cmc
pop
ss
adc
outsb
test
adc
jg
out
jb
movb
jl
pop
xchg
int3
roll
or
call
in
scas
insl
imul
sub
xchg
jle
std
xchg
andps
xor
in
mov
cmp
gs
push
scas
test
pop
pop
pop
ret
test
js
push
test
loopne
jns
push
push
xor
sbb
xchg
or
fldt
cli
push
je
cmp
mov
fcomp
rorl
xchg
aam
add
push
inc
lret
pop
test
mov
add
out
outsb
jle
adc
es
adc
movsb
outsb
push
dec
pop
sti
fdivrs
negb
dec
lea
mov
sub
ficomps
popa
jo
cld
dec
add
mov
mov
daa
xchg
jbe
sahf
xchg
fcomps
inc
pusha
mov
call
mov
adc
loop
adc
lock
shll
xor
ja
loopne
cmc
jae
xlat
dec
addr16
xchg
mov
rcr
push
je
xchg
lret
lds
in
and
add
ret
jmp
add
test
cmp
push
push
mov
outsl
xchg
imul
cld
and
jb
insl
fildll
inc
scas
and
push
lods
xor
xchg
shll
dec
push
sbb
adc
mov
adc
outsb
sbb
stc
pop
jge
and
adc
add
imul
leave
mov
ja
loope
push
jbe
daa
or
sbb
sbb
pusha
je
push
cmpsb
dec
scas
leave
aaa
xor
push
cmp
in
in
bound
mov
imul
int
jbe
aam
jb
mov
jo
les
mov
sbb
std
push
adc
ds
cmpsl
and
pop
sub
jmp
mov
xchg
mov
jecxz
rcl
in
cld
int3
xchg
jnp
inc
push
dec
dec
sub
or
jmp
ret
out
pop
push
sarb
shr
xchg
cmc
test
scas
mov
mov
cmp
sub
jns
out
ds
decb
pop
lods
test
mov
sbb
rclb
fsubrp
push
and
push
mov
aaa
dec
pop
dec
dec
sub
push
sti
fildl
dec
xchg
test
mov
push
cmc
popf
sbb
sbbl
sti
loopne
add
dec
clc
xchg
popa
imulb
and
leave
mov
dec
ljmp
ss
or
adc
and
or
xor
ds
fwait
ljmp
fistl
imul
pop
out
xchg
ret
mov
sarb
mov
lock
ret
xor
ljmp
or
stos
test
push
mov
pop
stos
sbb
imul
inc
adc
movsl
adc
add
xor
nop
jle
mov
bswap
sbb
loope
sbb
pop
dec
cltd
inc
pop
out
stos
mov
sbb
adc
xchg
sub
pop
popa
addr16
aad
fmulp
repz
add
push
cmp
cmpb
mov
and
cmp
lea
out
sbb
and
xchg
adc
sub
push
dec
daa
lret
test
inc
xor
hlt
iret
jns
mov
pop
lds
leave
inc
dec
fwait
stos
ficoms
mov
jl
test
adc
stc
dec
mov
cld
test
xchg
and
fxch
cmp
fists
xor
adc
clc
lock
sub
jno
or
gs
aas
fnstsw
pop
jns
icebp
nop
stos
inc
pop
pop
jge
enter
push
or
xor
sbb
cmc
xlat
or
or
sub
movsl
xchg
sti
clc
adc
push
or
dec
int3
mov
inc
pop
mov
rolb
out
mov
fabs
adc
jnp
lea
shlb
push
fcmovnb
ja
imul
icebp
fadd
in
dec
cmp
jmp
negb
repnz
sub
xlat
and
inc
stc
xchg
mov
add
xchg
inc
mov
xchg
imul
xlat
std
rcr
cmp
hlt
xchg
jp
outsl
and
cwtl
cmp
mov
mov
sbb
scas
pop
sti
aam
stos
add
xor
cmp
sbb
ficoml
outsb
xchg
lcall
cltd
cmpsb
jo
or
sbb
jp
pop
mov
and
dec
dec
sbb
movsl
dec
pop
scas
xor
inc
outsl
jp
xchg
loop
test
std
and
out
mov
dec
mov
cmpsl
cmp
mov
add
popa
xchg
imul
push
loop
jbe
adc
out
lret
fcomi
lods
pop
repnz
pushf
sub
movsb
mov
mov
inc
minps
js
movsl
arpl
mov
int
je
adc
add
mov
insb
ljmp
jmp
sbb
push
ja
pop
out
scas
ret
mov
shlb
es
lods
xor
inc
push
into
adc
jbe
bound
sub
cmpb
int3
xor
mov
stos
push
imul
test
sub
lods
sub
and
and
sub
int3
mov
cmpsl
push
leave
loop
test
iret
mov
push
and
int
jge
push
lahf
sub
inc
stos
loop
push
imul
iret
fidivl
xlat
ret
xchg
xor
push
scas
aad
xor
xchg
inc
jecxz
pop
push
jge
sbbl
mov
popf
push
xchg
jnp
in
push
sarb
popa
les
sub
and
sbb
xchg
xor
or
xchg
sbbl
popa
jb
addb
or
mov
mov
dec
das
push
fisubs
movsb
out
movl
mov
mov
lret
inc
mov
imul
fiadds
push
jl
adc
and
les
xchg
or
add
ja
fdivl
out
jne
jecxz
jns
cltd
pop
jge
cmp
sti
inc
call
nop
sbb
pop
addl
jmp
push
jno
ss
das
add
js
ret
xchg
lcall
mov
cli
push
les
mov
out
mov
mov
push
adc
inc
inc
lea
shll
test
sbb
mov
mov
push
jns
add
sti
xorl
xchg
cmp
and
stos
inc
push
adc
int3
cmp
ss
and
int
inc
test
dec
pop
mov
mov
iret
xor
insl
daa
jge
roll
pop
out
pop
pop
sbb
popa
out
pushf
xor
gs
mov
push
mov
bound
out
xlat
xor
mov
sbb
cmpsl
clc
ja
xchg
in
cs
test
pop
imulb
xor
xchg
ret
leave
lods
mov
ss
int3
push
les
dec
pop
xchg
rclb
ja
shll
mov
sbb
and
mov
inc
loopne
ljmp
inc
pop
mov
addr16
or
jmp
mov
add
rol
mov
cmp
rcrl
lock
xchg
or
out
icebp
aaa
adc
out
out
imul
fldl
jae
outsl
aad
push
fwait
je
insl
popf
pop
dec
add
add
pop
xor
xchg
push
mov
inc
push
xchg
jno
movsl
shrb
test
or
xor
popa
lret
mov
sbb
pop
pushf
mov
mov
mov
fcmovnu
lea
sar
sub
cld
mov
mov
cmp
sub
movsb
fs
mov
cmp
inc
sbb
hlt
sbb
mov
inc
or
jne
imul
fisttps
sbbb
and
stc
movl
xchg
jo
pushf
xchg
repz
pusha
or
popf
ds
add
fcomp
sbb
push
decb
out
adcl
mov
rcrb
cs
cmp
out
inc
xorl
daa
call
ja
popa
dec
adc
and
jnp
mov
pop
popf
sar
sbb
jecxz
mov
dec
test
mov
mov
inc
sbb
mov
sbb
es
lcall
jbe
aam
dec
xor
pushf
test
xchg
adc
fldln2
nop
or
roll
fcomi
xchg
or
into
and
add
ja
xchg
test
sub
js
adc
or
and
sub
mov
mov
in
addl
or
call
mov
pop
js
ljmp
sbbb
rcrl
jg
pop
data16
lods
and
das
mov
ja
mov
andl
mov
in
test
jne
jae
out
xor
xor
out
aam
shlb
hlt
hlt
stos
js
test
stc
out
jle
fs
aaa
sahf
dec
and
push
jp
loopne
jle
repz
jg
cmp
enter
test
sti
fidivrs
loop
xlat
test
neg
rorb
sub
rcr
mov
aad
mov
adc
int3
jge
mov
ret
push
aas
add
mov
adc
leave
xchg
fstpt
lcall
repnz
fistl
jo
test
add
fs
lret
mov
ljmp
cmp
aas
xchg
push
lcall
fdivr
or
xor
inc
push
sbb
lods
enter
add
xor
popf
and
in
lret
gs
stos
outsl
mov
aaa
mov
adc
fadds
fs
mov
sbb
shlb
and
cmp
cmpsl
mov
stc
fistps
imul
out
les
ror
add
pusha
xchg
popf
pushf
loope
mov
or
dec
inc
sub
mov
cmpsl
or
das
faddp
movsl
bound
repz
xchg
inc
shlb
notb
rcll
iret
jb
cmpsb
aas
sbb
out
leave
sti
pusha
add
cld
adc
add
pop
xor
jo
outsl
loop
test
jge
inc
or
dec
sqrtps
andl
jl
mov
clc
cmp
shlb
lret
mov
cli
xchg
jmp
push
fmul
data16
out
xchg
scas
adc
arpl
ret
mov
ret
arpl
dec
lds
fdivrl
jo
fsubrs
and
vaddsd
push
cmp
and
mov
cmp
cwtl
pop
sub
mull
movsb
scas
xchg
and
push
sub
or
in
outsb
jno
jge
loope
sbb
add
test
lock
jnp
inc
ss
lahf
mov
addb
subl
les
cs
and
int
xor
or
loop
lods
inc
pop
push
test
or
cwtl
data16
sti
sub
hlt
add
inc
fdivl
rclb
cmp
sbb
movsl
xor
mov
lcall
mov
cmp
xchg
xchg
ljmp
dec
scas
mov
mov
or
inc
dec
repz
dec
mov
fsubr
lods
add
shrl
popw
adc
fsubl
int3
mov
fldl
fwait
repz
sbb
dec
ja
inc
jge
jge
cmp
mov
cltd
cmpsb
ficoml
or
test
test
cli
mov
loop
and
dec
int
xchg
test
popa
xor
fincstp
sbb
stos
loop
loopne
stos
cmp
xchg
mov
stos
addr16
jbe
push
mov
fwait
push
mov
pop
stos
ret
cmp
dec
pop
pop
pop
sti
cmp
jb
out
cld
repz
pusha
xlat
or
or
add
cmp
xor
bound
pop
adc
or
cmpsl
dec
or
mov
add
add
or
jle
cmp
or
lock
popf
aad
jae
shlb
sbb
imul
in
and
push
std
xchg
cwtl
adc
divb
test
stos
pop
mov
dec
aad
jp
lahf
rolb
out
das
sbb
ret
dec
xchg
into
das
cli
and
mov
dec
cmp
push
sbb
shll
or
pop
cmp
scas
or
out
or
insl
cmp
lods
jo
adc
les
jae
sbb
sbb
xchg
inc
leave
cmpsb
aas
xor
sbb
and
pop
fstpt
push
cmp
mov
in
xor
and
jecxz
inc
or
xchg
cld
lret
bound
orl
xchg
fiadds
ds
sub
xlat
outsb
jmp
shrb
add
or
incl
sub
decl
into
mov
sub
mov
sbb
scas
movl
mov
loope
cmp
pushf
testl
testb
fsubrs
inc
pusha
stos
fadd
and
inc
nop
mov
repnz
ror
xchg
mov
in
push
push
jb
sub
data16
dec
jb
pop
inc
xchg
fbld
test
push
xorl
movsl
ljmp
frstor
and
mov
mov
cmpsb
push
das
cmp
mov
push
call
cmp
mov
add
push
outsb
cld
in
sub
and
test
push
adc
cmp
int3
fildl
les
adc
mov
lret
lret
enter
sub
je
mov
jl
pop
ds
sbb
sbb
lcall
loope
loop
push
sbb
imul
push
cmp
sbb
sbb
xor
in
cs
inc
jae
mov
loopne
scas
fistpl
dec
imul
clc
ret
mov
subb
add
jo
inc
inc
mov
add
inc
xor
ret
addl
xchg
adc
pop
inc
cs
dec
stos
scas
loopne
idivl
cmp
sbb
sub
push
in
scas
subb
std
cwtl
lock
cmc
cmp
lock
jns
ds
mov
adc
inc
dec
cltd
push
enter
adc
faddp
jb
push
in
mov
add
xchg
adc
pop
fldl
dec
jb
mov
pop
push
shll
and
mov
out
push
jo
cli
inc
jns
mov
mov
xchg
dec
fstps
adc
ret
lods
mov
addr16
pop
das
xor
pushl
jo
xchg
adc
imul
outsb
lea
repz
mov
fistl
sbbb
ds
adc
inc
int
push
out
ret
pop
in
insl
mov
sbb
lcall
inc
xor
fdivrs
sbb
xor
add
fwait
stos
ljmp
arpl
push
shrb
lret
out
cmp
jne
pop
in
rcr
movsb
fcmovb
subb
sub
and
add
aaa
push
clc
divl
xor
inc
lock
pop
xor
mov
push
repnz
push
lods
push
fs
xchg
add
jnp
jno
sbb
dec
xchg
xor
jl
or
loopne,pn
mov
push
mulb
lds
sub
add
pop
arpl
xchg
fwait
xchg
lods
cmp
and
inc
fwait
mov
cltd
shll
mov
lods
int3
out
pop
mov
xor
repz
fs
push
loop
sbb
cmp
xor
sbb
mov
or
dec
neg
pop
cmp
cmc
orl
push
jge
ljmp
repnz
scas
mov
fsubp
xor
jno
cmpsl
xchg
add
jp
loop
movsl
inc
popf
inc
mov
lahf
jecxz
sbb
push
push
out
push
scas
mov
std
jge
into
inc
int3
adc
add
pop
bound
ds
inc
xor
stos
jbe
addb
int
repnz
icebp
cmp
mov
sbb
xchg
adc
icebp
jo
fcmovne
push
sbb
inc
mov
xchg
in
adc
jecxz
fs
mov
push
mov
aad
add
out
std
dec
jle
mov
xchg
test
pop
jg
dec
lret
mov
mov
out
mov
sbb
mov
dec
cmpb
into
dec
ret
mov
pop
pop
adc
push
scas
fdivr
xchg
mov
mov
inc
les
xor
inc
arpl
add
inc
insl
xlat
fdivs
rcr
insl
fisubs
xchg
sub
adc
sub
into
lods
lcall
lods
add
adc
or
mov
lret
leave
mov
mov
jbe
fildll
icebp
sbb
jl
sub
mov
in
push
mov
pop
sub
addr16
jo
and
enter
cli
je
mov
add
inc
repz
cmp
inc
fs
sbb
push
pop
push
clc
xorl
ror
xor
jg
les
movsb
or
lcall
es
xor
xlat
pop
mov
inc
mov
in
loope
adc
mov
push
jmp
outsl
jp
xor
jns
pusha
sub
data16
shrb
mov
inc
cmpsb
sbb
lahf
sub
add
lods
pop
jns
pop
movsl
push
aaa
cltd
sbb
or
inc
ds
test
inc
dec
idivl
ds
rcll
mov
ja
xor
int3
lret
push
fbstp
cltd
xchg
ja
shlb
add
adc
icebp
mov
ficompl
clc
mov
sub
test
outsl
jmp
sub
dec
cwtl
or
icebp
cmpsl
mov
pusha
sub
imul
imul
and
cmpsl
call
out
add
ds
cmp
lcall
sub
jmp
into
inc
mov
or
sbb
stos
adc
nop
jb
stc
sbb
and
sub
sub
test
jnp
fisubs
sahf
lret
dec
mov
lods
test
lods
das
shll
outsl
push
inc
xchg
aas
push
loope
fldenv
repz
mov
popl
clc
int
cmp
mov
cmc
subb
mov
outsb
cmpsl
ds
or
loopne
add
jmp
inc
inc
fstp
sbb
push
lods
mov
jle
imul
out
subl
add
mov
insl
dec
es
bound
xchg
sub
shrl
cmp
stos
xor
ljmp
daa
xor
jo
lods
push
popf
push
fnsave
mov
push
enter
mov
outsb
xchg
loop
and
xchg
mov
pop
jns
adc
mov
push
jmp
dec
sbb
inc
push
lret
sub
pop
push
adc
xor
dec
sub
loop
hlt
shll
dec
std
xchg
lea
shlb
insl
adc
scas
jo
xchg
test
xchg
loopne
negb
pop
add
out
xchg
test
dec
ja
stc
fdivrs
popa
mov
jge
ja
in
mov
pop
mov
arpl
pop
push
loop
push
dec
popa
or
add
push
arpl
fstpt
mov
jp
jge
aam
mov
cmpsl
pop
fwait
loope
dec
addl
jg
scas
sub
pusha
adcb
pop
mov
cmp
mov
sbb
push
leave
mov
pop
pop
adc
data16
mov
or
jp
jmp
or
fnstcw
inc
out
imull
iret
pusha
mov
aad
add
mov
cmp
repnz
sbb
jge
dec
lock
movups
mov
fsubr
mov
std
call
in
add
push
push
jg
aam
push
add
lahf
xorl
and
jb
mov
or
push
arpl
mov
lds
fxch
in
sbb
push
jg
icebp
mov
jb
lcall
movsb
mov
or
or
subl
ret
xor
push
out
mov
mov
mov
pop
or
mov
insl
xchg
add
dec
ret
xlat
pop
xchg
mov
jno
lcall
decl
cmc
out
jp
nop
mov
ja
insl
into
lcall
movsl
mov
add
imul
sahf
add
dec
or
xor
out
mov
ss
adc
adcb
scas
lret
xlat
repz
ret
add
jmp
sub
dec
cmpsb
mov
add
sbbl
popa
xor
idivb
adc
fildll
or
push
test
xor
lcall
jns
sahf
jecxz
les
aaa
rcrb
add
test
rcl
push
xor
inc
sbb
dec
mov
xchg
into
das
push
mov
clc
jne
adc
cmp
mov
sbb
mov
pop
pop
cli
imul
and
cwtl
cmp
loopne
mov
adc
jg
mov
pop
push
stos
inc
fists
cmp
inc
shr
mov
add
lret
pop
pop
gs
iret
outsb
je
lea
test
mov
xlat
sahf
lods
pop
push
mov
pusha
ss
jecxz
leave
mov
push
mov
jge
repz
sahf
data16
rolb
ljmp
xchg
shll
data16
arpl
jg
data16
int3
adc
cmpsb
sbb
je
sbb
jno
insl
ret
xor
popa
popa
test
fwait
mov
sbbb
push
add
popa
inc
cli
pop
xor
ret
sarb
push
or
mov
cmc
fs
in
or
insl
xchg
pop
pusha
icebp
rorl
mov
adc
jp
outsb
inc
sub
adc
stos
cmpsb
mov
mov
shlb
dec
sbb
stos
add
mov
mov
sahf
cmp
es
cmp
fsub
cmpsb
cmp
andl
pop
pushf
sub
out
rorl
mov
movsb
clc
arpl
lods
push
pop
aaa
jno
imul
pop
loopne
imul
cs
push
add
add
add
movsb
fwait
dec
lods
sbb
dec
or
test
pop
lcall
push
adc
pop
shrl
idiv
jbe
mov
pop
mov
fdivl
ss
pop
xor
mov
xlat
push
out
in
push
xor
mov
mov
adc
adc
nop
sbb
loope
cmp
outsb
pop
jg
push
out
loope
out
mov
jl
add
jecxz
lea
sub
movsl
mov
jb
insb
or
xor
insl
and
outsb
pop
test
sub
movsb
out
mov
sub
push
jp
sbb
rcrb
or
dec
mov
cmp
dec
xchg
xchg
clc
or
lcall
jecxz
mov
ffreep
cmc
sti
xor
ljmp
pop
out
je
fucomip
cmp
mov
frstor
mov
mov
sbb
adc
add
cmp
sbb
dec
movl
jg
xchg
push
fistl
jb
sbb
das
sti
dec
sub
lahf
push
popa
or
imul
mov
repnz
cmpl
sbb
mov
sbb
jecxz
mov
adc
lret
stc
cmp
or
and
xlat
dec
xor
fs
push
adc
adc
sbb
pop
inc
sub
jo
mov
mov
xchg
dec
push
dec
and
out
and
adc
add
mov
mov
cwtl
mov
pop
inc
xchg
fsts
xor
insl
test
pushf
adc
xor
or
adc
sbb
test
loop
cmp
or
pop
pushf
movsl
push
jbe
fwait
gs
test
enter
mov
fwait
push
cmp
jp
out
pushf
mov
xor
arpl
push
daa
fs
adc
int3
pop
jmp
les
daa
push
scas
jp
xchg
push
sub
arpl
pop
ror
and
repnz
xchg
fnsave
inc
ljmp
mov
fists
and
pop
push
loopne
push
fwait
push
or
pop
xchg
sahf
cli
dec
cmp
sub
dec
push
daa
mov
fdivl
xor
xchg
rorb
mov
scas
lret
push
test
pusha
in
ret
mov
xchg
repz
push
push
addl
call
je,pt
cmpsl
sbb
or
and
cmc
fnstsw
aad
out
je
add
mov
xor
enter
in
lds
sub
call
and
dec
pop
std
cmp
into
pop
imul
shlb
fildll
addl
mov
or
cld
aam
inc
adc
sbbl
shrb
jl,pn
and
xlat
clc
jp
cmp
ror
jo
stos
pusha
xchg
lret
lods
jl
fistps
in
fisubrl
std
mov
mov
cli
data16
mov
pushf
out
adc
mov
sbb
push
jnp
es
xchg
push
mov
test
inc
hlt
pop
jns
andb
sub
xchg
rol
popf
add
push
push
daa
jns
adc
leave
inc
or
enter
lock
in
stc
or
ret
imul
icebp
call
imul
xchg
jmp
push
sub
lods
mov
jge
cmpl
leave
gs
adc
scas
xor
mov
cmp
roll
push
push
fwait
inc
push
in
ret
std
or
je
aas
cwtl
nop
mov
or
aad
push
adc
roll
mov
mov
and
ss
xchg
jmp
xchg
rcrl
jnp
fstpt
xor
add
pop
dec
cld
es
xlat
ret
mov
push
into
and
mov
sbb
add
push
rcl
inc
xchg
xchg
cmpsl
or
test
add
fdivl
cmovbe
scas
das
inc
fwait
cs
ret
aad
and
add
xchg
cmp
pop
in
bound
mov
imul
dec
pop
mov
jmp
jnp
and
inc
test
andl
jp
dec
mov
out
mov
sub
inc
in
mov
pop
lcall
push
xchg
sti
xchg
sub
and
fwait
lret
push
imull
mov
not
iret
movsl
les
xor
add
and
mov
mov
and
shll
cmp
test
iret
xchg
repz
es
pop
in
pop
add
cmpl
imul
cmp
xchg
aad
push
pusha
rcl
dec
cld
adc
in
push
cmpsl
push
adcl
cmp
add
pop
and
pop
mov
pushl
aam
or
testl
enter
lret
xchg
push
rcll
inc
imul
xor
lods
adc
arpl
dec
outsb
sub
movsb
pop
icebp
enter
pop
mov
es
cs
scas
pop
ja
das
cmp
mov
pop
push
push
cwtl
pop
loop
fsqrt
push
or
mov
sbb
mov
jl
and
inc
test
mov
loope
icebp
inc
lret
jecxz
out
pop
or
adc
test
push
push
loop
out
repz
loop
negl
xor
push
js
data16
mov
or
mov
or
fyl2x
cmc
rep
ret
sbb
into
inc
pusha
ret
and
jb
stos
in
int
xchg
xchg
xor
mov
inc
arpl
imul
mov
lret
test
push
or
inc
dec
fiadds
enter
aas
aad
push
int3
in
sbb
jb
adc
cmp
xchg
in
das
pop
dec
shl
pop
ficoms
test
lods
mulb
dec
ret
rolb
cmp
inc
aad
fistps
gs
xchg
nop
fisubs
or
cmp
mov
mov
shll
push
or
sbb
add
jns
lods
mov
ljmp
popa
popf
or
or
loopne
movsb
into
mov
iret
psubusw
xor
mov
cmpsb
out
xchg
or
leave
mov
push
adc
xchg
repnz
loope
and
lods
int3
in
loopne
jp
leave
lock
push
int
inc
mov
add
mov
aam
dec
lods
push
xchg
xchg
or
loopne
addr16
stos
sbbb
repz
stos
js
lea
jb
sbb
sub
aas
pushw
adc
add
cli
jae
inc
jo
inc
sub
and
cmc
stos
rcrb
or
sub
repz
dec
cmp
cmp
cmovp
pusha
data16
jle
push
jo
icebp
jae
aad
or
movsb
pop
cwtl
aam
jbe
jmp
imul
mov
push
cmpsb
fldenv
and
leave
jns
adc
cmp
mov
repz
mov
jo
inc
mov
jmp
push
push
loope
xchg
and
fimuls
sub
add
xchg
mov
mov
push
mov
cltd
pop
xchg
in
mov
push
lahf
das
sub
les
xchg
iret
scas
negb
lahf
call
xor
or
inc
repz
lods
cmp
inc
into
mov
lea
in
pusha
jge
mov
stc
cs
jl
dec
lcall
insl
repz
pop
mov
mov
mov
pop
mov
jle
pop
into
pop
andl
adc
sub
test
pop
lods
mul
push
test
lock
imul
sub
xchg
enter
mov
sbb
inc
pop
fwait
dec
stos
mov
jmp
aad
and
push
lcall
xchg
insb
sbb
adc
dec
in
dec
cmpsl
call
pop
iret
int
inc
ffreep
js
pop
bound
push
xor
lret
lods
cmp
shll
mov
adc
ljmp
lret
in
mov
aas
mov
push
xlat
sbb
and
bound
jmp
sbb
mov
pop
fisubs
popa
stos
xor
dec
fidivrl
insb
inc
xlat
sahf
jle
jg
add
arpl
clc
xchg
dec
jecxz
sbb
test
cli
push
dec
sbb
xor
push
cmpsb
lods
pop
ss
push
movsl
xchg
jne
pop
jecxz
inc
test
xchg
mov
movsb
add
popa
adc
mov
sbb
inc
mov
lods
loop
movsl
sbb
inc
push
jae
dec
xchg
sub
mov
repz
lods
dec
xchg
hlt
add
insb
cmp
xchg
mov
add
test
jmp
jne
dec
or
stos
cmp
adc
xor
dec
sbb
sti
xchg
or
pushf
iret
ret
xchg
push
lock
pop
pop
in
imul
sub
mov
adc
jp
gs
mov
push
adc
mov
push
outsl
xchg
sti
cmp
movsb
or
mov
rcl
test
jl
cmpsb
sti
aas
in
mov
or
fcomp
cmp
pop
divb
add
push
shr
jg
mov
or
mov
ljmp
pop
add
push
cli
icebp
mov
inc
outsl
icebp
out
outsb
inc
sbb
sbb
lahf
sub
sahf
inc
mov
mov
pop
jecxz
add
in
push
xchg
inc
adc
dec
jns
and
rcl
push
pop
or
jae
add
das
lock
and
loopne
movb
push
lcall
sub
imul
ret
push
filds
fdivr
push
dec
pop
push
cld
jbe
pop
roll
push
jbe
arpl
daa
mov
ret
jg
addr16
call
cmpl
ljmp
scas
fnstcw
pop
add
jmp
out
dec
xchg
mov
icebp
arpl
hlt
pavgb
addl
repz
aam
lret
sbb
sub
mov
cmpsl
adc
shrl
and
sub
jne
out
inc
cmpl
dec
icebp
je
into
mov
adc
push
test
push
nop
cmp
test
inc
test
jl
pushf
adc
aad
shlb
cli
loopne
stc
dec
dec
das
mov
fmuls
mov
lock
mov
fcompl
push
cmp
jge
push
push
outsb
aaa
rcrb
nop
sti
push
dec
adc
repz
cmpsl
cwtl
mov
mov
aam
leave
loope
push
sbb
mov
cmp
pop
cmp
out
test
rorb
idivb
mov
mov
lock
lea
insb
mov
lock
notb
dec
xchg
jecxz
push
pop
cltd
sbb
mov
leave
dec
mov
cmp
aaa
pop
sub
daa
mov
popa
cmpsl
mov
ljmp
rcrl
xlat
jmp
orb
push
sub
xchg
das
cmp
fnstcw
sub
mov
imul
fimull
cmp
ss
dec
jns
pop
lcall
jmp
aaa
push
gs
pushf
sbb
adc
xchg
push
mov
test
sbb
pop
test
subb
or
ret
adc
sub
stos
lods
jno
jl
out
sbb
add
jmp
pusha
jecxz
jne
je
lcall
inc
sbb
cmp
pop
push
loopne
pop
jne,pn
xchg
mov
lods
dec
pop
xor
repnz
aad
xchg
dec
iret
lcall
jnp
mov
add
mov
pop
mov
xchg
movsl
repz
stos
pushf
dec
in
ds
and
push
out
in
ja
movsb
push
into
inc
out
and
aas
pushf
adc
sbbb
mov
push
lret
mov
mov
mov
sub
dec
int3
repz
clc
hlt
sub
mov
mov
stc
cmp
jp
pop
mov
lock
add
test
inc
mov
fsubrl
jb
cmp
push
mov
xchg
mov
dec
xor
idivb
xchg
jbe
sarb
fldl
xchg
mov
in
push
adc
shlb
int
and
fldt
call
hlt
loope
inc
cmp
popf
mov
out
dec
fldenv
dec
mov
mulb
ret
xchg
outsb
cmp
and
sub
xor
adc
scas
cmpsl
repz
lahf
inc
dec
push
jne
loop
mov
push
inc
sbbl
and
pop
cmpsl
jnp
xor
xchg
cwtl
sbb
or
cmp
sti
and
pusha
push
fs
pop
cmc
cmc
mov
testb
push
icebp
inc
pop
outsb
rcrb
fcompl
lds
or
outsl
int
push
or
jns
inc
pop
push
cmp
and
push
jno
orl
sbb
add
sub
sbb
mov
push
repz
repnz
cmpb
jge
lcall
cs
scas
push
mov
cs
mov
cmp
push
je
xor
bound
out
push
jecxz
punpcklwd
aas
mov
fisubrl
subb
divl
pop
sbb
nop
sbb
and
fcomp
mov
ret
roll
dec
scas
gs
inc
push
push
in
or
push
insb
cmpsl
cmp
and
push
jo
xchg
push
outsb
pop
inc
add
icebp
ret
outsl
aam
add
sub
dec
mov
mov
popf
mov
cwtl
ucomiss
xchg
adc
inc
rorl
push
adc
xchg
jnp
loope
adc
add
lret
popf
push
pop
cli
pop
dec
push
and
xchg
andb
es
pop
ret
lea
or
push
loop
or
leave
ds
inc
lcall
imul
div
popf
stc
xchg
hlt
leave
mov
adc
lds
loopne
cmp
and
shl
loope
in
cmc
mov
ret
stc
and
pop
outsl
push
mov
je
pop
mov
testl
fists
enter
add
push
cmp
nop
xchg
and
pop
pop
test
cmpsl
mov
stos
mov
jg
mov
mov
push
into
jno
mul
jl
and
cmp
aam
inc
fisubrs
xchg
sbb
mov
add
mov
cmc
daa
pop
cmpsl
push
imul
add
pop
out
nop
dec
les
or
notb
pop
mov
addr16
dec
dec
mov
dec
out
cmp
cmp
pop
and
adc
jb
into
popf
orl
jns
mov
icebp
mov
sub
lods
out
jecxz
loop
pop
into
mov
call
pcmpeqw
xor
nop
and
lret
in
xchg
or
cli
inc
mov
inc
sbb
stos
cmp
push
ret
push
adc
fisubrl
addr16
aam
xor
pop
sbb
ljmp
and
mov
or
loope
les
sbb
sub
xchg
pop
pop
addr16
sahf
and
test
sbb
pop
jp
pop
in
fmul
xor
mov
cmp
push
test
add
cld
stos
xor
mov
int
pusha
pop
or
pusha
xor
stos
je
dec
gs
push
std
inc
jg
sbb
mov
test
outsb
or
push
jmp
arpl
lds
lahf
nop
dec
mov
popf
adc
cld
daa
xchg
into
and
push
enter
mov
inc
cmp
mov
punpckldq
rolb
mov
adcl
add
cmpsl
lret
scas
sub
imul
pop
test
mov
in
mov
je
inc
mov
fdivl
xchg
xchg
mov
push
nop
jb
dec
test
sbb
rol
in
xchg
xor
int3
aad
lods
loopne
lcall
nop
repz
sub
mov
inc
push
movzwl
xchg
lret
iret
xor
es
setb
mov
sbb
in
mov
inc
clc
subb
inc
loopne
mov
sub
mov
fistps
stos
dec
pop
jmp
adcb
lds
cld
dec
cmp
xor
out
add
ret
dec
fistps
inc
and
dec
jne
int
mov
pusha
cwtl
gs
inc
nop
lret
js
rcrl
loopne
neg
jp
dec
data16
push
sbb
cli
leave
ds
int3
fisubrl
push
fsts
es
icebp
and
adc
and
or
and
in
ja
mov
inc
fistpll
repnz
dec
adcb
push
popl
jbe
mov
jecxz
int
fsubs
xchg
mov
sub
fs
mov
cmpsl
jbe
xchg
dec
imul
mov
jle
lock
aaa
pop
aam
or
adc
insl
or
and
rcll
stos
lahf
adc
or
std
loope
jnp
pop
cli
add
roll
cmp
inc
movsb
test
scas
mov
mov
mov
push
int3
push
jecxz
push
in
and
bound
xchg
mov
mov
insb
rcll
data16
jno
xor
imul
mov
inc
pop
adc
cmp
xor
test
es
adc
push
lahf
mov
dec
xor
xchg
ljmp
inc
test
mov
push
jnp
cmp
addr16
enter
sub
je
mov
push
mov
jg
inc
inc
stos
out
sub
enter
push
sub
addr16
jb
mov
push
cmpl
and
arpl
daa
inc
hlt
fimuls
xchg
leave
sbb
pop
jbe
dec
push
loope
pop
jbe
mov
in
jmp
test
dec
ja
push
mov
call
ss
notb
lods
sub
dec
lcall
add
sbb
scas
push
jle
dec
push
movsl
imul
push
adc
adc
test
jecxz
inc
jmp
std
addr16
push
jbe
pop
add
and
inc
lret
cmp
dec
push
fstps
in
loopne
adc
push
and
xchg
push
sbb
movsb
std
jp
js
push
inc
not
mov
test
xchg
fists
and
push
mov
mov
dec
fiaddl
testl
mov
insb
xlat
ljmp
outsb
push
adc
test
cmp
in
jmp
lahf
inc
mov
sbb
sbb
stc
mov
getsec
pushf
lods
cmp
xchg
loop
and
cwtl
cmp
pop
jp
jecxz
add
cmpsb
pop
jo
cmp
mov
add
test
and
out
add
stos
arpl
lret
rorb
adc
xor
mov
mov
test
fs
fnstsw
or
repnz
or
push
ud0
iret
pop
xchg
movsb
sub
loope
xchg
scas
adc
dec
adc
push
ret
mov
dec
dec
mov
loopne
push
popa
jns
stos
inc
mov
test
adcl
sbb
sub
xorl
mov
lret
dec
sbb
sub
pop
mov
and
aam
in
inc
int
sub
cmp
push
adc
sti
cmp
mov
jnp
dec
sub
or
adc
fstp
sbbl
pusha
stos
cmp
aaa
pop
adc
mov
loopne
ret
push
andb
stos
popa
cmpsl
rcll
xor
stos
jp
cmp
clc
push
jnp
and
aaa
fcompp
mov
xchg
dec
sbb
or
push
mov
adcb
outsl
icebp
jns
mov
out
faddp
jmp
movsb
lcall
leave
flds
and
sub
push
jo
or
lcall
mov
cwtl
xchg
jo
js
dec
and
sbbl
lods
mov
dec
cld
push
jmp
sahf
inc
outsb
mov
or
adc
mov
adc
sub
jbe
in
pusha
jno
icebp
inc
pop
jmp
orb
inc
xchg
jge
add
or
fstp
xchg
sarb
jecxz
cmc
sub
rcll
push
pop
and
add
outsb
scas
pop
jg
push
jns
push
cmp
sub
mov
adc
fisubs
adc
add
jbe
adc
inc
sti
cmp
data16
inc
ret
lock
dec
mov
cltd
mov
cld
es
cmc
test
jg
push
push
dec
jno
mov
lcall
shrd
fsubp
pop
add
ret
stc
xor
jb
mov
jle
or
ret
lods
cmp
jmp
or
js
arpl
repnz
sbb
mov
push
pop
xchg
shlb
imul
jo
mov
mov
sbb
test
mov
pop
aad
popa
sub
movb
xchg
pop
cld
cmp
push
xchg
shl
inc
addr16
out
nop
lret
sub
sub
icebp
adc
mov
pop
insb
scas
std
mov
js
cmpsl
jo
dec
mov
inc
or
push
add
push
test
in
pop
jbe
xchg
sub
cmp
addr16
jp
rcrl
push
insl
sub
xor
loope
jg
rol
addr16
outsb
ret
fcomp
or
pop
jp
mov
js
es
sub
les
inc
ss
jmp
mov
movb
xorb
mov
mov
jo
int3
jge
sti
fwait
mov
sbb
cltd
idivl
int3
cli
adc
jl
sbb
xor
imul
imul
call
ja
popa
cmp
lods
loopne
mov
mov
sarb
pop
pop
jne
cmp
xchg
int3
jo
mov
cld
leave
pop
outsb
shrl
loopne
repnz
push
jg
xor
daa
push
iret
push
cmpsb
mov
movsb
jnp
jbe
stc
scas
push
sub
leave
test
push
psubusb
pop
lods
add
cmp
sahf
jns
cld
cmp
push
lea
addr16
jno
fmuls
sbb
xor
nop
mov
jb
or
cmp
aaa
sahf
dec
mov
fsin
xor
aaa
stc
xchg
jecxz
pop
and
nop
addb
jnp
insb
sub
mov
lock
insl
scas
lcall
mov
in
mov
data16
jmp
mov
adc
stc
adc
pushf
push
mov
xor
shrl
decl
inc
add
pop
adc
call
inc
fidivrl
addr16
xlat
aaa
add
adc
inc
jo
mov
mov
mov
leave
push
mov
into
lock
inc
clc
or
mov
rclb
push
push
pop
js
nop
push
bnd
or
std
jmp
pop
fidivrs
in
sbb
in
jmp
or
cmpsb
dec
leave
lret
outsb
mov
cmp
jbe
dec
and
test
jmp
into
out
fiaddl
pusha
mov
xchg
pop
int
fs
packssdw
cmp
adc
mov
daa
icebp
push
int
jbe
in
xchg
outsb
dec
mov
push
xchg
and
xchg
popf
pop
subb
push
imul
xchg
repnz
add
movq
mov
adc
mov
push
mov
mov
inc
xchg
xor
push
push
in
je
daa
and
push
sub
cmp
dec
mov
or
xor
xlat
call
mov
xchg
xor
jl
addr16
jne
push
xor
mov
sahf
mov
or
cmp
faddl
add
dec
stos
ljmp
lods
loop
in
call
pop
cmp
adc
out
negb
adc
dec
jge
bswap
dec
test
or
or
cmp
jecxz
lret
int
popa
xchg
aam
jno
icebp
mov
cmpsl
push
adc
push
fdiv
dec
mov
sbb
inc
dec
and
das
add
push
es
shlb
mov
pop
sub
mov
mov
fnsave
mov
cmpsl
mov
push
xlat
jmp
insb
jae
repz
xor
adc
mov
and
xchg
lcall
xchg
xor
loopnew
add
jne
testb
aas
aad
loope
mov
xor
xor
ja
pop
idiv
pop
arpl
repnz
pusha
ret
sub
lock
sbb
xor
mov
subl
push
adc
and
mov
push
cld
mov
cmc
mov
mov
icebp
roll
iret
das
cwtl
in
sbb
mov
cwtl
xor
cmpsl
int
xchg
adc
fnstcw
sti
and
fcomps
jg
xchg
js
dec
shrb
int3
inc
imul
adc
rep
xchg
ror
js
nop
or
push
inc
adc
add
pop
int3
sub
xlat
inc
or
sbb
add
in
adc
fildl
enter
inc
adc
xchg
mov
stos
mov
mov
cld
push
or
mov
add
mov
mov
scas
xchg
movsl
imul
jno
imul
push
mov
out
loopne
js
jecxz
cmp
gs
cld
add
push
insb
aaa
adc
xchg
cmpsl
mov
cmpsl
sahf
dec
and
xchg
adc
mov
arpl
adc
or
cmp
not
xchg
mov
xor
sahf
mov
mov
add
pop
addb
into
xchg
push
movsb
loopne
mov
js
movsl
rcrl
out
lahf
arpl
and
lods
daa
fsubrl
in
push
stos
or
pop
dec
push
pop
push
push
scas
bnd
pushf
mov
pop
sbb
ffree
xchg
cmpsl
mov
lret
sub
add
insl
lret
stos
push
xchg
dec
imul
jmp
sbb
fcmovnb
add
sub
push
js
dec
lea
rcr
jp
and
std
mov
into
loop
dec
enter
fwait
cmpl
dec
aas
push
int
or
jp
push
pop
push
rcr
xchg
bound
xchg
fwait
mov
cmc
or
xchg
lea
xor
out
cs
fs
cli
mov
xchg
pop
cmpsb
shrb
adc
movsl
lods
xchg
xchg
hlt
clc
mov
loope
xor
sbb
and
mov
ja
addb
xor
iret
dec
add
out
jns
dec
or
in
pop
mov
insb
dec
cmc
ds
ss
push
mov
xor
rol
mov
push
clc
adc
mov
mov
into
add
mov
in
insb
orb
js
adc
loop
push
cli
rcr
sbb
les
mov
cmp
sub
lds
ret
fsubrs
jp
addr16
repz
stc
jmp
and
aad
adc
sub
stc
or
std
and
lds
cmp
add
dec
enter
shlb
fidivrs
mov
dec
mov
cmp
sbb
sub
mov
sub
addr16
pop
dec
fcompl
repz
xor
aaa
jecxz
rcrb
lahf
add
jg
stos
xorb
sub
xor
pushf
push
sub
jae
cmp
test
xchg
imul
fucomp
notb
xchg
dec
and
mov
mov
repz
aaa
xorl
pusha
icebp
dec
iret
push
push
mov
push
lds
push
mov
orw
jmp
in
inc
imul
in
cltd
sbb
inc
dec
sub
arpl
mov
jmp
int3
ljmp
cmp
fsubs
rcrb
scas
sti
push
mov
pop
pop
mov
mov
push
int3
inc
lock
sub
xchg
data16
std
filds
sarb
push
xorl
xchg
cwtl
fidivs
gs
mov
add
sub
xchg
adc
inc
push
add
mov
call
lods
jg
daa
mov
popf
dec
push
movsl
lcall
xchg
lret
mov
lods
sub
aas
out
in
in
negl
ds
call
divb
cmpsb
and
cmpb
aad
andb
gs
add
lret
jge
idivl
iret
mov
fadds
push
jne
fistl
test
pop
xlat
jmp
pop
mov
sbb
aaa
fcompl
xor
push
jb
xchg
lret
inc
leave
lds
jmp
nop
jg
sar
push
insb
xchg
pop
mov
scas
test
adc
pop
in
mov
test
mov
mov
dec
ret
out
pop
jae
mov
and
int3
and
popl
jp
outsb
sbb
inc
sbb
aad
pushf
inc
mov
pop
scas
xchg
outsl
sub
or
roll
xchg
icebp
dec
je
popa
mov
pop
arpl
fcoms
mov
mov
das
jmp
les
push
mov
cmp
ja
mov
imul
cmpsl
into
dec
pop
mov
mov
mov
repz
nop
arpl
push
ror
sbb
jae,pt
ja
add
xchg
xor
aad
cmp
aas
or
sub
or
movsb
inc
cmp
sub
xchg
xchg
fildll
xchg
or
xchg
pop
test
in
sbb
mov
pop
addl
cwtl
inc
lcall
cmpsb
roll
or
mov
lock
cmpsb
out
arpl
or
and
insl
jge
xorb
push
inc
scas
cmp
inc
mov
jle
pusha
jge
shl
mov
out
stos
mov
or
and
xchg
js
pop
cmpsl
dec
out
fsubl
fisttpll
lock
and
leave
xchg
out
jno
in
xchg
add
nop
call
sahf
arpl
push
mov
fistps
jp
jbe
aas
call
sub
fisubrl
ja
jns
mov
jns
jl
popa
fidivs
into
pop
xchg
clc
repz
xchg
outsl
bswap
das
gs
and
sahf
fdivs
sbb
push
push
dec
adc
sbb
sahf
sub
mov
cld
dec
add
inc
xchg
bound
rolb
int3
lcall
out
ret
pop
ret
loopne
insl
sti
out
lahf
inc
pop
fwait
push
or
shll
mov
mov
mov
xchg
push
lods
sbb
sahf
gs
push
xlat
push
mov
jmp
out
pop
push
adc
or
inc
mov
test
sub
or
aad
sub
stos
xorb
dec
pop
mov
cmp
dec
xlat
int
inc
and
sbb
testb
aaa
pop
jl
pop
data16
cmp
shl
imul
sbb
iret
int3
cli
sbbl
lret
cmp
fsub
imul
sbb
aaa
divb
push
and
insl
mov
in
inc
shrl
out
mov
sbb
sbb
pop
inc
insb
in
xchg
mov
movsl
aas
xchg
cmpsl
insb
arpl
mov
fcomps
movntps
jmp
mov
inc
mov
jnp
in
shll
mov
sbb
test
ds
or
pop
fstpt
or
mov
outsb
push
jge
dec
inc
push
testl
mov
dec
xchg
push
xchg
mov
or
mov
cmp
cwtl
push
mov
and
ss
outsl
hlt
scas
movsb
mov
xor
push
rorb
sbb
sbb
inc
and
jg
fs
mov
inc
inc
and
outsl
or
ja
jg
fs
lret
push
divb
pop
adc
sarb
and
sub
movsl
and
aad
mov
inc
inc
call
rsm
int3
jp
bound
mov
pop
popf
popf
stos
dec
pop
inc
xchg
xor
mov
jmp
cs
loop
int3
mov
sar
lahf
push
adc
push
pop
incb
fisttpll
imul
das
push
push
adc
outsl
xlat
movsl
pop
in
cmpsl
mov
in
lcall
and
movsl
add
lods
aas
inc
outsb
lea
repnz
aas
repz
imul
xchg
sub
bnd
lahf
enter
dec
iret
adc
test
out
sub
jnp
addr16
cltd
sub
push
cld
aas
test
or
sbb
dec
xor
push
in
mov
or
xchg
inc
lea
ljmpw
dec
xchg
xlat
stos
fiaddl
and
and
aam
aad
mov
ror
pop
inc
xor
cmp
inc
sub
call
jp
inc
lods
int3
push
shlb
push
sbb
adc
pop
fldl
sarl
gs
test
out
cmp
push
inc
cmp
clc
inc
loop
jp
lcall
ja
dec
in
test
int3
sub
xor
push
inc
ljmp
lcall
mov
adc
mov
gs
adc
scas
pop
xchg
xor
popf
gs
push
ret
jb
aam
addr16
fbld
ror
xchg
clc
cld
sbb
add
xor
test
sti
fdivl
mov
dec
xor
arpl
pop
mov
xchg
xchg
cmp
outsl
dec
pop
pushf
dec
es
mov
mov
xor
adc
popa
mov
jle
mov
mov
aam
scas
bound
jle
add
mov
shlb
dec
push
shll
in
imul
out
jle
jno
jb
sahf
mov
in
iret
mov
lock
inc
mov
inc
add
icebp
cmp
xchg
ja
pop
pop
and
dec
stos
mov
or
sub
rol
lods
cmp
lods
pop
cli
add
push
pushf
and
cmp
in
xchg
and
in
dec
push
movsb
lcall
andnps
adc
test
testb
mov
cmp
sarl
shrb
lods
push
stos
cmp
das
das
in
aam
test
jo
lcall
push
mov
divb
rorl
imul
and
testl
ss
addb
cmpsb
stos
imul
idiv
push
ss
aad
bound
loop
call
jge
lods
sbb
ss
sub
cltd
jb
mov
popa
fcoms
jb,pt
sbb
jmp
psllq
cmp
fadds
outsb
cmp
mov
rcl
mov
mov
fs
mov
mov
dec
out
cs
pop
imul
xchg
ljmp
xchg
in
std
mov
popf
mov
pusha
and
fucom
push
or
push
enter
mov
out
movsl
popf
neg
popl
add
push
inc
mov
aaa
test
mov
cmp
sahf
bound
cmc
mov
sbb
test
mov
or
pop
pop
mov
inc
jecxz
cs
mov
loop
rcll
push
inc
mov
xchg
loop
push
jb
add
pop
jecxz
clc
stos
jbe
call
mov
pop
sahf
jge
xor
fnstsw
pop
js
xor
jbe
or
bound
stos
mov
jge
pop
inc
pop
xor
cmc
aas
movsb
add
inc
xor
es
pop
pop
sub
xchg
adc
jbe
jno
fisubrs
xor
stos
notl
in
rolb
ret
cmp
ror
iret
lea
das
xchg
ficoml
push
leave
lods
sub
addr16
insl
loopne
add
repnz
loopne
ret
mov
test
loope
enter
xor
fisttps
or
aad
jno
xchg
sub
mov
push
mov
or
gs
and
mov
insl
lret
ja
jg
jne
divb
sbbl
mov
push
sti
int
icebp
pop
xchg
xchg
push
mov
lahf
in
lret
aam
lods
xor
push
enter
stc
cmp
mov
fdivrl
mov
cwtl
sar
sub
adc
xchg
jle
enter
mov
rcr
or
jge
ret
push
mov
mov
out
loop
fwait
add
aaa
nop
jo
pop
out
jp
mov
xchg
mov
adc
mov
mov
push
sbb
out
mov
pop
loopne
leave
mov
adc
repnz
insb
xor
in
sbb
xlat
inc
xor
dec
arpl
xor
dec
sti
ret
jle
adc
push
ret
leave
mov
idivb
out
cli
loopne
xchg
jno
enter
mov
jno
xor
cmp
movsb
cld
loop
sub
xchg
mov
das
outsb
jge
push
add
stc
fisubrl
cmp
xchg
movsl
cmp
lahf
and
fistpll
and
outsb
adc
xor
jecxz
test
test
mov
or
inc
loope
clc
mov
mov
dec
xchg
rorl
jge
inc
lahf
gs
push
out
push
adc
ret
cmp
and
or
cwtl
mov
scas
jns
aas
clc
lds
mov
and
into
cmpsb
dec
pop
rclb
or
das
int
hlt
pop
std
lea
fs
in
mov
icebp
shrb
mov
or
dec
sahf
sbb
inc
stos
cmp
insl
push
pop
jecxz
outsl
pop
rorl
push
out
lods
ss
bnd
aad
inc
cmp
xchg
iret
sbb
lret
inc
rcll
scas
sub
iret
jae
psubusb
sbb
in
scas
cltd
lcall
popf
lods
jbe
dec
aam
cmp
shll
mov
pop
imul
cmp
stc
jge
adcl
lahf
mov
loopne
rorl
movsl
and
pop
sarb
iret
jb
das
dec
cmc
inc
insb
leave
data16
bound
xor
orl
mov
test
or
orb
daa
dec
cmovbe
jo
js
and
mov
mov
dec
ss
movsb
fmull
mull
cmc
fsubs
jl
jne
jp
xor
jns
stos
stos
lret
pushf
loop
add
jne
pop
or
pop
test
jbe
inc
leave
fnsave
fs
cmp
sbb
sti
mov
fldl
or
repnz
test
mov
pop
cltd
leave
ror
hlt
loopne
xor
adc
leave
xchg
mov
or
iret
scas
nop
movsb
bound
cmp
pusha
test
xor
jp
xor
imul
testl
std
ret
repz
dec
cmp
mov
pop
add
outsl
lea
in
fs
push
es
lea
daa
enter
das
add
clc
faddl
mov
inc
out
jns
mov
pop
mov
and
mov
fcmovnbe
xchg
mov
and
cmp
mov
in
adc
lea
enter
int
jl
pusha
std
and
xor
cli
cltd
daa
xchg
mov
mov
xor
mov
imul
jle
jo
test
imul
bound
sti
dec
mov
ja
out
mov
cmc
lods
popa
fs
mov
xchg
sub
jmp
jne
shll
cld
xor
sub
adc
sbb
ss
pop
sub
aas
outsb
dec
push
jb
cltd
movb
loop
add
ja
mov
mov
sahf
xchg
lea
mov
add
sub
add
movsl
adc
ret
in
mov
or
or
mov
iret
bound
mov
inc
test
int
pop
and
lret
sub
sbb
inc
ror
xchg
pop
jbe
mov
setle
dec
stos
lea
sbb
cmp
xchg
iret
into
test
xor
pop
mov
fisttpl
inc
inc
dec
and
mov
aam
sub
xchg
out
pop
lods
stos
outsb
fsubs
jmp
movsl
cmpsb
in
mov
repnz
leave
or
popf
xchg
xchg
ss
mov
mov
mov
andl
fcmovne
push
enter
rcrb
sbb
mov
inc
loope
jl
jns
pop
adc
mov
cmc
movsb
mov
and
jb
icebp
cmp
movsb
add
xor
outsb
pushf
mov
icebp
mov
xchg
adc
popf
add
jecxz
dec
adc
jge
gs
jecxz
bound
test
mov
or
mov
push
xchg
call
push
leave
ret
lds
inc
sbb
mov
jl
loop
js
or
jp
add
in
cltd
cmp
pop
mov
cmp
fs
cld
in
inc
pop
popa
jb
xchg
inc
pop
xchg
mov
pop
jp
xor
add
lcall
in
inc
stos
aaa
bswap
out
and
fmull
insl
mov
cmp
adc
cmpsl
rcr
cli
cmc
mov
dec
ja
and
std
cmp
jmp
mov
cltd
sub
or
mov
inc
pusha
sub
pop
lret
mov
dec
pop
inc
jle
pop
inc
movsb
xchg
insb
movsl
jl
dec
icebp
push
sbb
dec
fsubrp
mov
pop
add
xchg
mov
int
iret
mov
mov
in
push
dec
add
xlat
adc
cmp
cs
jp
ret
into
bound
cmc
out
push
xchg
and
xlat
in
fnstcw
por
dec
repz
in
arpl
les
std
outsl
inc
je
jnp
adc
pushf
pop
lret
clc
xchg
push
aaa
fdiv
pusha
inc
jne
mov
lahf
mov
fidivs
ja
push
push
mov
jo
or
sub
pop
sub
xor
shrl
inc
aad
inc
sbb
and
jne
and
add
pop
pop
adc
insl
out
adc
dec
add
or
loopne
lods
lock
cmpl
lahf
push
inc
fimuls
fld
in
mov
mov
xor
outsl
daa
add
ds
jo
stc
inc
mov
jmp
int
pop
xlat
sbb
add
or
test
jmp
sbb
jge
ja
lods
push
fistpll
pusha
and
sbb
ja
xor
scas
inc
and
push
xchg
mov
adc
mov
push
shll
scas
sub
lds
fstps
fcoms
mov
sahf
sahf
xor
mov
sub
push
test
loope
adc
push
shrb
sbb
outsb
add
mov
pop
or
mov
pop
mov
sub
repz
das
int3
ret
insb
or
jecxz
lock
lea
push
ja
push
in
cmp
imul
jp
or
pop
mov
int3
fstps
popf
xchg
je
lods
or
adc
movb
jg
jl
mov
mov
pop
sub
or
push
inc
lret
ret
divl
push
mov
sbb
add
mov
xor
bound
add
test
loop
loop
les
hlt
xor
dec
dec
xchg
mov
je
mov
ds
lods
jl
or
push
mov
inc
mov
ljmp
in
mov
scas
fdivrs
xor
mov
test
lods
mov
dec
or
adc
clc
mov
lahf
push
add
mov
and
ljmp
cmp
and
sbb
or
loope
pop
jecxz
add
mov
fstp
sbb
js
sbb
ret
push
jmp
and
mov
and
push
push
jp
test
push
int3
test
lret
cmp
sbb
jbe
mov
sub
mov
xchg
in
sti
mov
mov
mov
movsb
push
out
repz
xchg
adc
dec
push
inc
mov
popa
pushf
jmp
ds
inc
dec
aam
loop
leave
rolb
outsl
repnz
or
xor
inc
addr16
inc
stos
mov
int3
bound
xchg
and
xlat
fcomps
xor
sub
sarl
inc
dec
or
imul
push
aaa
outsl
pop
mull
dec
ret
jecxz
sbb
dec
leave
mov
outsl
mov
cmc
xchg
and
mov
subl
insl
test
pop
mov
and
xor
data16
mov
push
or
or
xchg
and
mov
clc
pop
ret
jb
mov
ds
les
aaa
imul
mov
arpl
sub
in
cmpsl
addr16
xor
adc
or
push
jae
fs
test
inc
pop
jnp
iret
jbe
xchg
cmc
cmp
dec
adc
mov
or
loopne
xor
and
dec
fcoms
mov
cmc
cmpsl
sub
pusha
les
cmp
rorb
mov
negl
inc
bound
cmp
pusha
mov
lock
mov
or
loopne
mov
pop
add
push
pop
fcomp
adcb
jg
hlt
jmp
es
inc
mov
jp
pop
pop
ss
pop
inc
push
push
pop
bnd
inc
adc
clc
push
cmp
adc
out
popf
lahf
mov
mulb
sti
aam
mov
inc
push
lretw
adc
jnp
jbe
incb
jb
rorb
loope
jae
shrl
bound
mov
cmp
cmp
and
xchg
jae
cmp
and
addr16
xor
pop
pop
fcompl
jae
pushf
xor
scas
push
mov
xchg
mov
aad
pop
mov
into
dec
iret
mov
or
jbe
dec
lahf
mov
inc
gs
int3
push
sbb
out
sarl
sahf
movsb
aad
push
insb
movb
cmp
cmp
repz
inc
repz
adc
rcr
subb
push
push
dec
fmul
xchg
lret
rclb
mov
fisubrs
dec
mov
sub
ret
fimull
pop
frstor
pushf
pop
or
clc
dec
in
dec
cmp
sub
cmp
scas
jg
xchg
or
iret
sbb
sbb
lock
mov
out
dec
sub
mov
xchg
or
mov
push
jbe
sbb
and
ds
add
and
jbe
out
adc
int3
orb
in
inc
xchg
pop
cmp
adc
push
adc
jbe
sub
sbb
pop
push
xlat
push
inc
mov
xchg
jbe
and
or
popa
mov
shll
testl
lcall
add
fcom
jne
ljmp
adc
lea
in
mov
and
mov
push
dec
sub
mov
inc
lret
and
push
test
or
pop
inc
inc
das
jle
or
movsl
dec
fisubl
hlt
test
ret
daa
out
sti
pop
adc
mov
test
movsl
aaa
imul
insb
xor
xchg
movl
clc
pop
sub
xor
aaa
dec
movsl
inc
imul
in
ficoml
jecxz
pop
xor
inc
add
imul
mov
pop
lahf
or
in
aaa
pop
cmc
dec
push
lcall
incb
mov
adcb
cmpsb
mov
pop
xor
pushf
jno
and
dec
add
in
jns
mov
in
shrl
mov
mov
pop
inc
mov
pop
push
repz
in
sub
cmpsl
in
js
les
idiv
xor
push
iret
jae
gs
inc
dec
testl
add
lahf
jno
and
mov
in
xchg
pop
out
pop
xchg
ja
fs
push
mov
push
stos
mov
pop
push
push
mov
das
repz
addb
ss
or
and
fsubr
pop
xchg
rol
adc
xor
add
imulb
cmpsl
xor
dec
xor
jmp
loope
test
lret
clc
add
mov
jge
push
xor
dec
adc
cmc
test
dec
jecxz
mov
cmp
jb
jecxz
shrb
jbe
sub
pop
mov
mov
mov
mov
adc
add
sbb
xchg
mov
mov
mov
cs
xchg
movsb
sbb
into
rcrl
add
shll
sbb
jg
popf
rorl
push
es
lret
push
mov
addr16
jne
repnz
sub
mov
jl
push
mov
movsl
inc
jmp
adc
adcb
xchg
test
xor
scas
out
std
outsl
out
sbb
jl
mov
fsubl
fsts
mov
pop
push
inc
ror
je
testl
es
les
lods
add
mov
push
add
sarb
xor
push
or
fcmovu
pop
pop
cmp
push
push
mov
cmc
mov
ret
push
insb
add
inc
flds
adc
lds
jo
pop
pop
imul
fildl
popl
push
dec
pusha
mov
sbbl
ja
aas
ds
cwtl
loop
in
dec
cmc
mov
dec
xchg
pushf
clc
mov
and
ret
pop
mov
cmp
into
sub
add
lods
es
es
and
test
mov
mov
mov
jbe
cmp
data16
jne
incl
mov
xchg
std
testb
add
adc
mov
pop
xadd
adc
movsb
ror
stos
pop
jle
or
sub
mov
xchg
ret
clc
ret
jg
sbb
mov
sbb
loope
cmpsb
dec
cmp
xchg
out
stos
mov
stc
adc
aas
int
mov
rcr
int3
cltd
xor
ss
jg
add
push
dec
mov
cmp
pop
add
or
lret
xor
xlat
dec
ret
loope
loop
jns
add
or
outsb
mov
cmc
ss
xchg
pop
in
adc
xchg
inc
hlt
pop
int
xor
mov
mov
jae
adc
and
fs
mov
jb
sub
adc
jae
push
push
arpl
push
and
cmp
les
cmpsb
ret
mov
dec
push
add
outsb
lods
enter
push
or
jbe
jbe
aam
test
pop
and
add
or
insb
ffree
jecxz
mov
aad
adc
ss
jns
cmp
jbe
imul
push
pusha
mov
hlt
dec
or
gs
mov
dec
or
test
pop
das
xor
das
call
dec
pop
sbb
subl
cmc
jno
cltd
pop
shlb
pop
fsub
out
sbb
test
fdivrl
mov
mov
xor
shll
dec
in
aam
xorb
cmp
mov
fnsave
cmc
xor
in
out
xchg
mov
xchg
mov
into
js
sbb
lcall
ja
out
dec
repnz
inc
mov
dec
and
dec
cmpsb
fmul
cs
inc
ficomps
lea
sarl
test
lahf
fdivrs
andl
mov
jne
sbb
out
jge
cmp
fisubrs
lcall
icebp
xchg
popa
loop
push
repz
outsb
pop
mov
mov
mov
cmpsb
movsl
add
adc
pushf
push
adc
mov
mov
inc
adc
ds
bound
in
jns
in
xor
sbb
jno
daa
in
pop
adc
movsl
ss
lock
push
add
jno
mov
fsubrl
inc
int
ja
into
mov
shr
cmp
test
nop
cwtl
mov
pop
lods
and
lcall
test
pop
mov
sbb
in
jge
cmp
bound
stos
insb
rorl
inc
or
pusha
mov
mov
lea
and
mov
cli
add
je
xchg
xor
and
mov
sub
mov
push
stos
outsb
push
adc
mov
nop
cwtl
sub
das
pop
mov
test
movsl
xor
push
repnz
shrl
cmp
mov
mov
push
pop
fiadds
idivl
jo
fcoms
mov
gs
ja
xchg
dec
and
xorb
and
out
sub
xor
sti
cltd
stc
mov
jmp
call
aas
pop
clc
stc
add
fists
inc
inc
aas
cmp
imul
ds
mov
adc
lods
or
cmp
inc
pop
ljmp
mov
xchg
outsb
icebp
inc
ss
xchg
pop
xor
popf
sub
inc
dec
in
int3
pop
leave
inc
imul
dec
addr16
and
push
cltd
pop
in
xchg
adc
jb
data16
lock
enter
jb
pop
je
add
inc
sbb
cmp
mov
jecxz
loopne
test
sub
and
lock
orb
jg
dec
cmp
bound
push
mov
mov
lods
aaa
ja
ds
push
shl
push
clc
push
add
testb
dec
data16
inc
scas
movsb
mov
and
test
fnstenv
or
and
xchg
das
lds
movsb
cltd
mov
pop
loop
mov
loop
fimuls
test
cld
popa
repz
rcrb
cmpsb
and
in
into
mov
sub
pop
inc
das
repnz
mov
fwait
cli
dec
mov
rsm
jns
call
fcoml
lock
mov
xchg
dec
and
adc
repz
push
inc
push
sti
jo
push
or
pop
call
inc
outsl
inc
cmp
dec
mov
sbb
and
push
in
dec
add
les
ss
jge
in
ja
fmul
lret
imul
outsl
clc
pop
and
pop
mov
pop
addr16
pop
shrl
in
mov
sbb
fbstp
lret
sbb
xor
sahf
mov
xchg
leave
decl
idivb
aad
xor
xchg
jne
mov
out
sub
out
lock
in
pushf
pusha
cmp
jns
xchg
jp
and
xlat
dec
adc
stos
lcall
and
ret
jp
lret
mov
fisttps
mov
loopne
mov
popf
test
loop
mov
xor
jp
cmc
adc
out
sbb
xlat
test
insl
add
pcmpeqw
imul
stc
movsb
pop
mov
into
shr
sahf
cmpsb
sub
xchg
xchg
mov
inc
lods
int3
subl
and
enter
cmpsb
insb
aam
fs
stc
xchg
inc
dec
mov
mov
sbb
xchg
ret
lock
test
andl
out
lock
jg
lret
mov
sub
mov
pop
sub
push
shrb
and
int
mov
mov
pop
xchg
push
mov
pushf
leave
data16
lods
data16
cld
push
add
push
or
cli
dec
pop
pop
jle
fwait
adc
push
scas
pop
pop
imul
mov
je
popf
mov
add
fstpt
and
cs
dec
inc
mov
inc
mov
or
loope
shl
pushf
mov
popa
testb
adc
or
and
push
xchg
fisttps
in
lret
orl
fsubrl
xchg
mov
cltd
pop
xchg
subl
pop
out
adc
jmp
cld
or
jb
adc
sbb
xchg
push
xor
adc
loopne
push
dec
aaa
je
sbb
cmp
in
dec
jge
mov
les
sar
push
in
sub
xchg
add
lea
fmul
or
test
jb
lahf
roll
mov
repnz
jae
push
jp
cli
push
or
add
out
test
pushf
lock
xor
or
sub
mov
pop
pop
popf
pop
scas
clc
in
mov
cmp
icebp
push
dec
jecxz
jno
cmp
cmp
jg
adc
push
fldt
mov
cltd
aas
pushf
and
lods
push
mov
icebp
fdivrs
outsb
or
pop
dec
repz
cli
dec
sbb
xchg
push
push
mov
out
scas
stos
dec
sbb
inc
sbb
push
inc
push
jg
out
ror
jnp
push
mov
cwtl
fcoms
mov
mov
int
mov
outsl
jno
into
inc
or
mov
decb
adc
or
jl
sahf
insb
je
js
imulb
gs
ds
xor
mov
ss
lret
fwait
outsb
aas
std
xchg
testl
outsl
and
fstpt
loop
and
push
inc
adc
pop
xchg
cmpsl
addr16
mov
adc
lahf
pusha
cmp
insb
stos
cmp
sahf
push
and
imul
push
mov
jp
pusha
cli
fldcw
push
subl
out
jl
movsl
hlt
xor
adc
mov
lods
xchg
add
lahf
test
push
or
jp
int
stos
xor
sub
adcb
jecxz
sbb
pop
sar
xchg
ffree
fstpt
test
addl
dec
stc
xchg
cmp
subb
xlat
mov
cmpsl
push
cmc
xor
dec
fpatan
clc
pop
inc
std
push
xchg
jp
push
mov
sub
or
adc
jno,pn
push
xchg
pop
and
xor
andps
mov
insb
loope
cld
inc
fcomps
sub
cmpsl
shl
mov
or
in
das
sub
xchg
leave
test
dec
mov
and
leave
fst
jnp
cmpsb
imul
push
and
pop
jnp
cmp
aas
mov
cmp
das
mov
pop
and
cmpsl
add
lcall
dec
add
jae
notb
imul
xor
fcmovu
xchg
mov
mov
mov
scas
aam
aad
mov
inc
inc
int
and
xchg
or
imul
jno
insb
jo
push
push
jbe
mov
arpl
sahf
mov
out
xor
loope
stos
jns
mov
and
or
cmp
scas
mov
int
jle
idivb
add
pusha
adc
rorl
and
lret
inc
mov
arpl
dec
pop
sbb
movsl
faddl
jns
push
dec
shll
jp
xchg
or
arpl
jo
add
imul
xchg
andb
jecxz
add
mov
push
mov
inc
addr16
xchg
add
into
and
push
std
nop
or
or
pop
or
mov
mov
insl
and
ljmp
push
stc
jbe
lods
into
nop
insb
sbb
in
add
jmp
aaa
fisttps
jae
fidivrl
inc
sbb
push
xor
std
mov
inc
xor
jnp
add
bound
icebp
and
cs
rcrb
je
in
movsl
out
stos
dec
cltd
stos
mov
push
add
and
aad
jmp
or
mov
mov
rclb
sbb
inc
xchg
popa
loop
dec
jmp
xchg
dec
jmp
push
fisubrl
pop
aas
xor
sbb
lahf
cmp
cmpsb
or
test
mov
out
add
cltd
mov
fiaddl
in
add
mov
and
jp
and
pop
pushf
lods
test
or
jns
cli
into
push
push
adc
nop
add
fwait
out
cmc
push
adc
imul
jnp
dec
clc
inc
xor
push
jb
out
xor
mov
mov
push
addr16
into
push
adc
push
and
cmc
or
icebp
xchg
insl
call
jp
push
push
fs
mov
mov
or
xor
sarl
rorl
fnstenv
mov
push
mov
dec
jge
mov
cwtl
arpl
sub
pop
outsl
scas
mov
ja
sbb
mov
add
sub
sub
repz
stc
in
test
or
jae
mov
adc
xor
add
and
mov
inc
inc
arpl
pop
sti
push
lea
xchg
dec
xor
mov
pusha
enter
ljmp
loope
or
adc
dec
inc
mov
sub
sbb
dec
push
sub
or
in
push
mov
push
lahf
pop
push
lahf
push
jecxz
jae
xorb
test
das
pop
stos
nop
data16
add
lods
dec
sbb
es
mov
cmc
adc
fwait
es
dec
repnz
push
or
and
inc
mov
lahf
sub
push
jecxz
jns
shrl
mov
icebp
icebp
jg
jge
dec
addr16
popa
fsubrl
loop
sbb
fmuls
mov
data16
fsubr
mov
push
mov
leave
dec
inc
mov
cmp
pop
inc
fnstsw
jmp
push
mov
insl
mov
fldl
mov
xor
mov
pop
cwtl
insb
lock
gs
ret
mov
rcr
cmp
rol
icebp
inc
mov
lcall
xor
push
cld
js
pop
cmp
inc
add
cld
adc
or
scas
cltd
cwtl
pop
pop
dec
pop
jno
mov
push
scas
popa
jmp
aad
cmpsl
adc
mov
rclb
mov
fsubp
addr16
mov
adc
negl
push
cwtl
pop
icebp
push
xchg
push
jle
sub
stos
xchg
popa
mov
setns
lds
dec
pop
jnp
mov
into
jno
jns
push
cmpsb
js
mulb
dec
icebp
xor
fsubs
and
mov
cmp
fimull
xor
imul
push
mov
sub
loop
xchg
sub
jns
out
push
js
and
in
and
cld
ret
add
negl
jb
das
xchg
cld
jg
mov
icebp
loop
cmpsb
pushf
clc
jle
or
gs
adc
or
test
pop
mov
xor
dec
adcb
stos
jno
push
iret
inc
and
jno
add
mov
xor
test
xor
jo
movsb
mov
mov
mov
sub
mov
push
and
cli
add
lcall
loopne
mov
mov
rorl
pop
or
stc
push
adc
cs
inc
fildll
in
pop
mov
add
add
xchg
ljmp
push
popa
cmpsl
xchg
xor
stos
dec
pop
outsb
cmp
dec
rorb
push
sbb
dec
dec
lret
in
fcoml
clc
sbb
xchg
pop
aam
nop
sbb
cwtl
push
adc
testb
stc
adc
add
ss
lahf
ret
add
or
mov
mov
jl
xorl
pop
mov
out
jmp
sarb
and
adc
repz
mov
xchg
js
mov
lock
sbb
imul
inc
fstpt
int
push
jecxz
mov
add
xchg
in
in
add
in
xchg
sbb
xor
jo
xor
jl
jp
rorl
icebp
aas
adc
pusha
and
lret
pop
mov
mov
mov
notl
loopne
out
mov
jecxz
fucom
cmp
push
ret
jmp
jno
pop
jecxz
neg
mov
and
or
das
in
mov
shr
stc
and
add
dec
inc
cmp
hlt
adc
push
mov
jle
into
in
or
adc
rcrb
ret
and
loope
push
ret
dec
test
jbe
enter
loope
push
popa
jmp
std
adc
jne
jns
scas
mov
or
cmpsb
or
cwtl
scas
mov
addl
xchg
add
jecxz
push
es
mov
movsb
std
and
and
aad
mov
lea
orl
pop
dec
pop
loopne,pn
lahf
jae
or
cmpsl
pop
pop
inc
jmp
stc
xor
mov
xor
cld
jg
adc
sub
mull
stc
inc
inc
xor
out
fwait
shr
jp
scas
pop
pop
push
test
mov
stc
lret
jle
or
testb
push
cmp
es
push
decb
stos
test
test
sub
test
cmpsl
outsb
enter
loop
push
sub
in
inc
add
js
test
aas
mov
out
notl
stc
sti
xchg
leave
daa
xchg
fcmovne
inc
adc
push
inc
hlt
shlb
add
mov
aaa
cmp
cs
jmp
ja
dec
inc
call
popf
dec
stos
clc
push
imul
cld
shll
lahf
ja
outsb
scas
andl
out
adc
jnp
mov
loope
dec
mov
add
fiaddl
sub
in
dec
ja
sub
sahf
and
and
dec
inc
jo
addr16
test
dec
inc
xchg
ja
call
aad
scas
lret
cli
push
jns
shrl
xor
xlat
int
dec
dec
lret
shll
and
xchg
ljmp
rcl
push
add
dec
pop
lds
jl
repnz
jne
pop
mov
rcrb
add
loop
ds
test
mov
adc
jns
jge
push
jnp
jae
stc
dec
pop
aaa
imul
mov
enter
lods
inc
pop
int3
stos
into
mov
shll
movsb
test
ficompl
push
popa
pop
add
test
je
adc
push
adc
jge
enter
in
test
js
mov
cmp
loope
lea
in
or
es
daa
add
dec
dec
sub
push
scas
sbb
ja
jge
fwait
adc
push
mov
inc
inc
ret
inc
xor
loopne
mov
dec
mov
adc
push
rcrb
or
mov
repnz
insl
fwait
mov
and
push
adc
repnz
sub
insb
rcll
and
ffreep
inc
xchg
pop
xlat
push
xchg
popf
xchg
insl
cmpsb
lds
fs
imul
jbe
fscale
or
cmp
jns
cmp
data16
cltd
xor
cmpsl
push
sbb
in
outsl
cmpsl
fst
jbe
cmp
or
fsubrs
pushf
rorl
dec
pushf
test
mov
fcomps
mov
xchg
lahf
repz
movsb
enter
inc
cmp
adc
cs
sbb
stos
lret
adc
test
xchg
cmp
sub
out
and
in
sub
repz
sub
ljmp
fisubl
mov
repnz
dec
cmpsb
hlt
push
mov
punpckhwd
lock
iret
cmpsl
imul
dec
lds
jmp
mov
mov
ja
mov
mov
pop
es
out
lret
fucomi
dec
pop
xrelease
mov
test
mov
mov
lret
cmp
sti
repnz
push
mov
loop
jg
jb
das
ret
repz
dec
data16
fwait
ret
cwtl
push
ja
mov
adc
lods
xchg
repz
js
icebp
out
in
mov
popa
nop
sub
jo
insb
test
push
outsl
imul
sbb
je
inc
xor
xor
mov
adc
imul
pop
push
cmp
mov
and
dec
adcb
jp
sbbb
lcall
push
mov
insw
je
inc
out
insl
pop
push
xor
mov
push
mov
and
shlb
scas
out
jge
sub
jg
out
push
in
imul
xchg
fnstenv
pop
pop
and
imul
xor
mov
cltd
pop
loopne
pop
sbb
sbb
cmp
xchg
repnz
shll
lods
icebp
pop
or
cmp
lret
push
mov
mov
ss
mov
dec
cwtl
mov
cmp
in
daa
push
cmp
or
clc
pop
mov
pushf
sbb
jmp
repnz
sub
lret
or
testb
add
xor
pop
dec
push
ljmp
push
or
repnz
aad
popa
sbb
sbb
das
inc
jno
and
fwait
sbbl
repz
movsb
mov
sbb
lea
xchg
test
mov
push
lret
andb
insl
and
xchg
mov
pop
push
cmp
loope
loopne
mov
sub
das
lahf
or
int3
repnz
mov
sbb
sahf
lret
cmp
pop
sub
cltd
xchg
and
mov
lea
push
adc
adcb
push
clc
out
fsubrs
or
inc
mov
cmpsb
das
int
mov
pop
adc
add
and
leave
ret
cld
xor
icebp
test
and
cmpsl
jnp
or
xchg
mov
cmp
xlat
out
pop
movsl
jnp
iret
xlat
push
xchg
mov
loopne
ret
mov
aam
std
push
insb
jns
aas
movsb
outsb
xchg
pusha
cmpsb
sti
test
ljmp
inc
stos
fdivr
sti
shll
test
roll
int3
daa
stos
mov
dec
movsl
movsl
dec
cmp
testb
mov
nop
flds
inc
shl
add
mov
lret
jecxz
push
pusha
jbe
push
xor
mov
repnz
sarb
sub
aas
jmp
aaa
xor
xor
inc
in
add
popf
pop
sub
sub
inc
int3
repz
sahf
sub
cmp
lods
lret
jo
div
js
push
mov
dec
scas
xchg
lods
fimull
std
divb
mov
mov
add
xor
mov
inc
and
mov
into
xchg
push
das
sahf
xor
xor
or
sarb
push
imul
rcll
cmc
jecxz
mov
or
in
ret
cmovp
cmp
mulb
mov
mov
and
mov
add
push
sbb
adc
out
adc
push
adc
and
cmp
cmp
ds
mov
ja
or
mov
cmpsl
cmp
dec
iret
jmp
ret
aas
mov
jne
cmpsl
push
inc
cmc
fcomps
leave
ss
data16
test
cmc
mov
or
lea
xor
imul
icebp
in
cld
push
jle
mov
mov
arpl
xlat
xor
sub
ret
xchg
xchg
xchg
inc
cli
out
popa
in
or
sahf
dec
popf
sbb
aad
into
jmp
xor
adc
insl
jge
push
xchg
push
rcrl
sbb
sub
addr16
jmp
pop
sub
inc
or
cwtl
sbb
insb
adc
mov
ret
in
aad
inc
divb
lret
mov
repz
cmpsl
enter
sbb
imul
mulb
mov
cmp
arpl
push
neg
lcall
stc
lods
jbe
mov
jae
rclb
add
push
addl
jp
xchg
stos
pop
sbb
fs
xor
out
sub
fildl
dec
jnp
int
mov
call
push
or
jl
jle
loope
dec
xor
decb
sahf
lods
mov
add
mov
in
push
pop
dec
out
sbb
es
pop
das
jmp
mov
push
cli
jbe
jmp
and
xor
push
int
mov
mov
ds
jae
cmc
in
pushl
adc
xor
sbb
dec
xchg
pop
cmc
inc
or
sbbb
call
mov
movsb
mov
test
adc
mov
mov
push
jp
sub
shrl
shrl
leave
dec
shll
push
mov
xchg
adc
jbe
roll
lds
xor
aad
call
add
cmp
cmpsl
pop
or
fsubrl
fstpt
mov
pop
adc
inc
mov
jne
into
dec
loope
pop
sub
jg
dec
xchg
cmpsb
cmpsl
rdpmc
sbb
sub
mov
inc
jnp
icebp
cmp
mov
sbb
mov
mov
pop
mov
sbb
lods
ja
lcall
xchg
call
xchg
iret
iret
jp
hlt
clc
movsl
ja
cwtl
jl
fisttpl
mov
add
xchg
ret
mov
shrl
fnstenv
xchg
orb
dec
nop
loop
ret
out
dec
xchg
xor
js
scas
sbb
stc
or
flds
mov
lar
in
cmp
push
or
pop
cmp
cmpsl
lret
jno
mov
ja
sbb
jl
mov
cmp
fsub
rcrb
sub
mov
dec
scas
in
inc
ret
and
mov
loopne
loopne
cmp
cwtl
lock
lds
jbe
mov
sbb
in
push
popf
cmpsl
pop
jge
sub
hlt
dec
sbb
adc
pushf
cltd
xor
cmp
xchg
repz
push
aas
xchg
and
inc
cmp
xor
daa
sub
mov
xchg
fstl
pushf
pop
inc
sarl
push
rclb
mov
fcoms
dec
or
or
xchg
xchg
pop
cmp
push
mov
mov
and
ja
mov
fidivrs
push
sub
loop
mov
test
inc
push
dec
int
bound
mov
xor
test
loop
pop
prefetchwt1
dec
fs
testl
add
and
sbb
dec
pusha
xchg
push
rol
rcll
icebp
enter
pop
sub
pop
fcomi
jae
mov
cmp
push
pop
cmp
pop
sbb
js
and
outsb
xor
xchg
cmp
mov
lock
cmc
inc
pop
pushf
movl
mov
add
pushf
sbb
call
jbe
stos
adc
jl
sub
repz
js
sbb
dec
daa
fisubl
das
pop
out
jmp
xor
aas
fnstcw
jb
adc
inc
loop
mov
xchg
dec
test
sbb
xorl
lahf
leave
shlb
mov
jl
sbb
fs
shr
cmp
xchg
xor
cmp
js
iret
push
xchg
dec
ljmp
pop
push
test
cli
cmc
daa
jns
outsb
pop
int
das
xorl
push
test
jns
push
jle
cld
jns
insb
pushl
stos
sbb
repnz
sbb
and
ljmp
ss
js
ds
cmp
int
repnz
cmp
pop
sar
inc
fistpll
xchg
mov
sub
pusha
or
sub
test
rol
into
mov
or
stos
and
or
cmp
aas
xor
jge
enter
lret
fcoml
popf
lea
jle
clc
or
cli
xchg
lcall
jecxz
js
fstp
dec
repnz
push
xor
data16
fidivs
or
jg
xor
cmp
pop
cs
push
cmp
sub
mov
aam
mov
inc
xor
sahf
or
push
pop
shll
pop
xchg
ret
push
inc
cli
imul
inc
hlt
pop
mov
mov
loope
pop
imul
movsl
xchg
add
mov
mov
or
xchg
int3
stc
add
xchg
rcrb
filds
fisubrl
and
rclb
iret
sbb
xor
xchg
out
mov
xor
inc
data16
dec
cmp
ret
outsl
rolb
dec
shl
mov
in
ds
push
adc
pusha
mov
sahf
in
cld
fdivrl
cmp
xchg
jne
xor
add
jns
shlb
mov
imul
js
pop
push
imul
pop
sar
mov
aas
jg
out
sbb
mov
andb
add
push
outsb
mov
sbb
mov
jp
dec
jp
test
add
divb
popa
adc
sahf
sar
cld
ror
in
test
popf
fdivrl
nop
btr
adc
cmp
pop
and
scas
lods
inc
std
std
jecxz
add
push
pop
lret
stos
loopne
enter
insb
mov
jo
jp
and
push
js
pop
xor
xor
js
sbb
icebp
insl
lods
and
pop
push
lcallw
loope
imul
and
cmp
fstpl
std
sbb
sti
out
xchg
push
pushf
xor
imul
test
dec
dec
add
xchg
push
mov
mov
sbb
push
ficoml
clc
or
call
popf
aam
aam
outsb
aad
xor
hlt
cmpsl
or
ret
int
daa
lret
popa
inc
sbb
add
xchg
mov
int
loop
and
lods
iret
push
dec
cmp
int3
fildl
mov
int3
and
aad
ljmp
lods
mov
adc
sbbb
out
pop
je
fucomp
ljmp
xchg
fs
shrb
push
push
sbb
mov
fldt
mov
mov
inc
xchg
addb
aad
fsubr
repnz
ss
xchg
outsb
cmp
jnp
cmpsl
or
mov
add
cmp
push
mov
jp
jns
cli
mov
ljmp
mov
aad
or
cmp
ss
or
push
push
mov
mov
push
rcll
lcall
cmp
xchg
push
mov
mov
enter
inc
jnp
jne
dec
test
cld
pushf
add
sarl
sbb
mov
push
leave
xorl
sahf
add
cmpsb
xor
mov
cmpsl
aaa
movsl
push
mov
loope
xor
or
push
push
adc
lea
push
test
add
sbb
loop
pop
outsl
fucomp
je
jp
fs
lret
imulb
sbbl
sbb
mov
lods
sub
mov
jnp
cmp
mov
aam
movsl
daa
mov
push
dec
pop
and
das
loope
subb
mov
cmp
xor
mov
repz
in
repnz
mov
jecxz
push
pop
jae
mov
sarl
icebp
jecxz
pop
jecxz
scas
data16
pop
xchg
mov
or
imull
sub
mov
incl
pop
pop
xchg
mov
lock
xor
inc
jns
jp
jle
enter
decl
adc
pusha
addl
ret
or
mov
mov
adcl
imul
mov
fwait
nop
push
nop
adc
ret
out
je
inc
xor
add
testb
or
jecxz
scas
in
fidivs
lret
xchg
mov
lods
hlt
rol
fbld
xchg
mov
cmpsl
lods
pop
push
ljmp
clc
repnz
dec
mov
mov
adc
nopl
lds
cmp
icebp
sub
adc
jmp
sahf
cmpsl
ja
stos
shll
cwtl
js
push
inc
push
jp
movsb
fdivrs
and
inc
test
sub
stc
sti
fucomip
dec
inc
bound
and
push
inc
into
xchg
sub
movsb
sahf
out
sub
push
out
inc
rolb
fwait
pushf
adc
stos
sub
mov
in
in
rcrb
pop
sbb
movsl
cmc
js
push
inc
fsubrl
xor
arpl
add
fdivs
ljmp
lods
mov
jle
aas
sub
xchg
pushf
xchg
ret
pop
test
outsl
xor
jecxz
push
inc
imul
icebp
scas
push
ljmp
jmp
mov
inc
int3
push
into
xor
leave
data16
test
adc
xchg
xchg
sahf
inc
jns
sub
imulb
lahf
cld
mov
je
add
hlt
dec
lock
xchg
push
fisubs
stos
lahf
orl
mov
in
cmc
push
fcoms
or
pop
pusha
jg
mov
sub
jnp
xor
lods
fimuls
popa
jmp
stc
int3
lahf
data16
in
inc
test
mov
leave
loopne
inc
out
outsb
pop
mov
inc
mov
loope
nop
incl
bsf
imul
sbb
and
notl
lods
cmp
addr16
mov
mov
and
test
sub
pop
push
inc
scas
pop
fsts
inc
push
popf
dec
sbb
mov
test
std
adc
das
int
out
pop
or
in
mov
adc
mov
fisubrs
andl
movsb
je
cs
add
mov
outsl
push
inc
xor
out
or
add
fsubl
je
cmp
or
jbe
xchg
es
jbe
aad
pop
push
mov
sub
jge
jb
xlat
ja
les
fcompl
mov
into
movsb
std
xchg
adc
and
mov
push
add
mov
mov
scas
outsl
xor
movsb
popf
jno
cmp
inc
push
in
mov
mov
pop
movsl
adc
fsts
sbb
cmp
xor
adc
add
repnz
std
sti
xchg
bound
js
inc
loope
mov
loop
cltd
repnz
shlb
push
leave
xchg
pop
xchg
push
std
in
ja
xchg
or
test
or
push
fstl
cwtl
rcrl
push
sbb
jno
cmp
dec
mov
inc
andl
and
cmpsl
mov
mov
mov
mov
fs
daa
stos
fmulp
or
lods
xor
cli
movsl
sub
lock
ret
sbb
mov
lock
stc
insl
adc
sbb
in
push
fmull
and
jle
ret
shl
mov
mov
or
or
jmp
fucomip
xchg
fstpl
xor
add
cld
lea
sti
insl
mov
outsl
inc
mov
mov
cmp
insl
inc
xchg
bound
in
jbe
xchg
cmp
cltd
xor
jp
or
andb
push
fs
push
inc
int
cmpsb
fisttps
ret
pop
pop
in
mov
hlt
adc
xchg
cmp
cmc
xchg
xchg
into
adc
insl
adc
enter
daa
mov
jne
xor
adc
mov
adc
outsb
pop
shl
subl
jo
aad
or
mov
xchg
push
dec
xchg
sub
sbb
xchg
dec
sub
repnz
popf
adc
leave
mov
in
jp
mov
push
jbe
jno
cmpsl
insb
ret
inc
add
jo
inc
test
sub
push
aam
xor
sub
dec
dec
mov
mov
ret
in
inc
xchg
push
or
outsl
imul
pop
jno
xor
or
xchg
dec
std
adc
push
test
push
out
push
loop
jl
and
xchg
add
sbb
mov
push
jmp
popf
pop
hlt
jno
in
adc
inc
pop
push
push
inc
push
cmp
xchg
stos
adc
clc
pop
ficoml
jle
into
scas
add
jnp
xor
or
jns
frstor
push
xor
insb
mov
xchg
xchg
movsb
dec
mov
mov
adc
jb
mov
in
sub
imul
fcomi
das
cltd
mov
pop
fbstp
mov
daa
mov
mov
hlt
inc
in
xor
insb
jae
popa
loop
scas
mov
dec
jl
cltd
pop
call
cld
sub
push
das
out
lea
push
fincstp
mov
cmp
adc
sbb
push
adc
jp
and
push
inc
rcrb
dec
and
arpl
sub
shl
or
leave
daa
jg
cmp
ds
ljmp
and
popaw
inc
fstl
pop
inc
test
test
mov
xor
push
or
rcrl
and
in
inc
inc
lds
stc
push
sbb
adcb
fidivl
mov
jbe
cmp
scas
sub
xchg
sbb
and
inc
mov
js
flds
inc
fildll
enter
or
les
imull
sub
push
test
mov
scas
out
shlb
mov
pop
and
cmpsl
into
jno
add
cltd
cmpsl
and
dec
mov
fidivl
push
dec
es
mov
mov
pop
ret
dec
lods
popf
lods
pop
sub
pop
dec
inc
popa
call
xor
sbb
dec
ror
leave
dec
daa
rolb
popf
outsb
mov
push
lret
or
lods
fldcw
cmp
sbb
cli
nop
mov
fisttpl
imul
push
cmc
or
sbb
js
lret
adc
movsl
adc
fmulp
fimull
mov
enter
xchg
nop
xchg
mov
data16
add
mov
cmp
xor
add
push
lcall
mov
mov
push
lock
ret
xchg
pop
stc
hlt
add
xor
xor
cltd
push
fistl
testl
sti
test
pop
add
add
dec
les
cmp
push
rcrb
fldl
mov
inc
push
into
and
inc
imul
stos
rcrl
daa
int
cmp
push
dec
or
lcall
cld
cmp
mov
fnstsw
loop
mov
sahf
outsb
icebp
push
cmpsl
das
jae
mov
insb
jbe
ljmp
test
divb
int3
divb
sbb
add
dec
mov
pushf
dec
insb
push
add
mov
pop
pop
sbb
scas
insb
icebp
enter
cmpsl
mov
push
dec
inc
inc
loope
sbb
ljmp
out
or
neg
adc
nop
pop
imul
mov
cmp
mov
adc
fimull
loope
mov
arpl
adc
xor
jg
mov
push
add
loopne
call
repz
inc
mov
cmp
jmp
push
and
sbb
jp
sub
insl
into
pop
jno
lods
pop
sub
mov
push
loopne
ret
and
mov
stc
xchg
adc
rcrl
push
mov
sub
out
out
pop
repnz
jne
mov
jl
and
lgs
into
std
cmp
push
test
ret
push
das
adcl
ja
fildl
mov
lret
popa
dec
loope
push
jno
push
cld
int3
jnp
stos
add
mov
sbb
xchg
sbb
xor
dec
fwait
sub
jp
aam
push
adc
mov
jne
pop
mov
push
dec
jl
mov
fbstp
pop
movsl
fistl
aad
push
cmp
xor
cmp
sbb
shll
insb
or
mov
dec
dec
ja
sub
iret
xor
inc
test
push
dec
lods
rcrl
sub
push
mov
push
inc
adc
sub
pushf
out
xchg
mov
aas
jo
loop
jne
xor
push
mov
adc
cmp
cld
fs
dec
pop
sbb
pop
mov
popa
fwait
jae
inc
sub
loope
jo
adc
add
outsl
push
adc
arpl
cltd
sbb
mov
xor
sbb
add
aad
jo
xlat
addb
push
add
jmp
xchg
push
lcall
mov
into
jle
ljmp
mov
cs
fsubrl
je
lahf
cltd
dec
ret
mov
mov
test
xchg
dec
lcall
pusha
mov
sub
je
out
cmc
cmpsb
dec
jo
jg
cmc
dec
sub
pop
arpl
or
push
popl
movsl
push
xlat
adc
dec
insb
push
icebp
pusha
cmp
insl
mov
mov
add
dec
cmc
inc
mov
push
fs
testb
enter
mov
mov
mov
inc
pop
lcall
jne
xchg
jno
lods
jmp
push
fs
lcall
xorl
pop
mov
xchg
stos
lock
xchg
jp
jg
push
mov
cld
movl
adc
mov
test
dec
fbstp
add
shl
ret
pop
lds
jmp
or
mov
addr16
arpl
mov
sub
xchg
mov
test
gs
rorl
dec
jle
outsb
movsl
inc
cmp
movsb
inc
jecxz
js
mov
daa
or
imul
int
outsb
jb
xchg
sbb
jno
je
shl
xchg
xor
xchg
into
stos
sub
xor
mov
test
sbbl
inc
in
push
fwait
jb
inc
xchg
hlt
stc
fs
fwait
dec
rorb
cmp
in
test
jmp
adc
xchg
sbb
mov
sub
ljmp
arpl
aad
dec
sbb
les
pop
push
push
pop
repz
in
or
into
insb
popf
xchg
sbb
std
mov
cmp
fwait
jae
pop
ret
mov
insb
add
insl
stos
movsb
adc
or
sti
xchg
mov
bound
jae
inc
jnp
test
pop
jne
jg
ljmp
sub
jae
sarb
and
pop
add
mov
adc
mov
cwtl
cs
in
or
jno
xchg
int3
insl
pop
daa
add
xor
and
inc
sbb
push
push
sti
mov
or
push
pop
mov
ret
shrl
ljmp
outsl
out
xor
in
enter
and
mov
push
popa
sub
adc
scas
mov
mov
call
xor
jp
js
stc
add
subl
pop
jecxz
dec
das
rorl
sbb
decl
loope
xor
add
fdivl
movsl
add
push
test
je
lcall
cmp
out
adc
xor
mov
leave
pushf
lahf
or
sbb
inc
insb
push
fistpll
cs
mov
imul
sbb
in
add
jae
and
pop
add
cmp
jae
and
ror
cmp
dec
loop
mov
xchg
and
or
leave
inc
cmc
push
nop
lcall
shr
out
mov
shrl
mov
fisubrs
nop
jg
filds
sub
and
jo
ljmp
popf
stc
into
aaa
fs
jnp
lods
aas
outsb
jmp
insb
outsb
jg
divb
cmp
xorb
xor
lret
ret
pushf
and
ds
sub
push
dec
test
daa
filds
and
add
push
add
or
sub
push
jge
ljmp
and
repz
negb
sbb
sub
inc
ficoml
movsl
sahf
nop
xor
cmc
sahf
or
fstpt
insb
adc
aas
mov
ss
ds
cmpsb
lods
sub
xorb
xchg
aaa
or
subl
arpl
adc
jo
rep
out
fwait
inc
mov
sub
adc
xor
push
inc
mov
shlb
xchg
mov
popf
gs
xlat
fcmove
add
je
lods
movsb
or
inc
jae
add
iret
test
pushf
dec
lret
loopne
jg
fistpl
cli
movsb
xor
fdivs
jae
sub
xor
mov
pop
rorb
jmp
lcall
mov
hlt
repz
add
inc
sbb
mov
nop
push
popf
cmpsb
sbb
cmpsb
in
push
jle
sub
mov
mov
fidivl
jmp
lea
pop
aam
cs
cltd
xchg
leave
fnsave
mov
mov
scas
in
or
out
xchg
pop
bt
jb
mov
xchg
int
sub
outsl
aas
mov
ss
add
ds
out
mov
fisubs
cmp
shrl
mov
jnp
cmp
xchg
or
adc
sbb
pushf
not
sar
inc
fildl
imul
jnp
out
xchg
lahf
mov
mov
adc
pop
sbb
es
push
or
xorb
das
adc
leave
mov
mov
sub
addr16
clc
sub
add
mov
rcll
inc
imull
and
xchg
out
and
fwait
xchg
or
jo
sbb
mov
dec
adc
hlt
rorb
or
lock
mov
les
fstps
fldt
lods
jne
fistps
sbb
pushf
pop
icebp
lret
enter
pop
pop
loopne
insb
cltd
dec
and
cmpsb
xor
pop
shll
inc
insb
fsub
and
add
mov
fnstenv
lods
orb
sbb
xchg
mov
xor
sarl
adc
lods
std
dec
sub
xchg
dec
adc
jg
pop
pop
test
inc
das
ret
mov
mov
sbb
push
lock
mov
out
push
fldenv
jmp
fwait
mov
dec
fnstsw
outsl
xor
cs
xorb
cmc
dec
cwtl
pushl
loop
addr16
inc
push
or
mov
ja
sti
rcll
xor
push
or
cmp
in
dec
push
mov
pop
sarl
dec
shlb
inc
push
jbe
push
gs
outsl
mov
inc
inc
les
jno
cwtl
mov
dec
add
mov
xchg
xor
cmp
das
call
jo
mov
push
bound
mov
cld
jle
pop
sahf
mov
movsl
lahf
ret
in
jmp
jne
inc
aad
orl
std
incl
and
mov
mov
pop
gs
add
daa
mov
leave
or
and
lcall
lods
cmpsb
sub
mov
cs
dec
dec
jmp
lahf
lods
add
add
repz
cs
jle
daa
cld
movsl
mov
inc
inc
inc
cmp
mov
mov
inc
push
sub
xchg
loopne
lea
popa
rorl
mov
xlat
leave
outsl
movsl
add
and
sub
xchg
mov
adc
push
aad
inc
push
xor
cmp
mov
andb
jle
sbb
inc
ret
loope
mov
xchg
and
mov
mov
mov
xor
sub
cli
and
mov
pop
lret
or
je
xor
stos
pop
push
sub
push
adc
test
cs
cmp
sbb
ret
popa
ret
aad
pop
pop
jae
jmp
push
aam
rcrl
inc
arpl
call
cld
test
pop
mov
mov
cmpb
push
push
repnz
sbb
pop
fbld
pop
xchg
adc
divl
jg
addb
cmp
dec
jo
cmp
mov
jle
push
sbb
rcr
dec
stos
jb
mov
pop
and
hlt
inc
and
bound
jecxz
enter
fisubrl
leave
adc
mov
clc
mov
leave
jne
lea
icebp
mov
data16
push
popa
xchg
sub
je
in
loopne
sub
loopne
shrl
or
jne,pt
add
xchg
leave
lret
cmc
mov
mov
sahf
daa
negl
inc
cmpsl
and
xor
lret
popf
sarl
js
loop
add
cmp
sti
mov
push
push
or
rcrl
outsl
add
outsl
pop
adc
aam
xchg
mov
cmp
mov
mov
stos
xor
jg
test
push
or
popa
cmp
pushf
icebp
roll
mov
dec
cmp
fwait
addr16
mov
popl
jb
mov
mov
or
dec
shll
lods
pop
xor
or
xorb
ficompl
jmp
xor
pushf
inc
int
sbb
mov
fistps
sub
sbb
test
add
xchg
or
stos
addl
cltd
test
mov
es
stc
and
xor
xchg
mov
aad
sub
mov
mov
mov
inc
sbb
test
scas
xor
jns
or
dec
pop
fisubl
sub
jle
xor
fstpt
movsl
ds
cmc
jecxz
int3
outsb
cli
lock
mov
mov
pop
das
out
jno
jmp
mov
mov
jb
sbb
mov
xor
lcall
lahf
jns
pushf
cmp
stc
ret
imul
out
shlb
xchg
movsb
aad
lea
test
push
ret
popa
mov
roll
in
xchg
ret
lods
jno
mov
shlb
int
lcall
dec
inc
popf
leave
sbb
dec
push
cmp
insb
ja
scas
pop
sbb
jp
fmul
cmp
cmp
cmpb
dec
mov
imul
xor
ja
cmp
and
outsl
mov
dec
mov
lret
filds
sahf
push
pop
cmc
imul
adc
cmp
insl
js
shll
jle
inc
movsb
aam
push
cld
push
in
pop
mov
push
loope
enter
xchg
clc
or
sbb
jge
or
orl
adc
sbb
cltd
or
jecxz
call
jecxz
dec
addr16
add
shrb
je
mov
xchg
stc
lods
cmpsl
mov
jl
aaa
cmp
dec
cltd
outsl
lahf
cmp
fdivs
xchg
notl
cltd
xchg
adc
sub
sbb
add
imul
testl
std
mov
nopl
push
fidivl
push
icebp
ficoms
fisttpll
mov
out
dec
loope
pop
lcall
cmp
jae
test
pop
in
je
lods
sub
aad
sub
incb
movsl
mov
pop
xchg
fisubrl
sbb
test
stos
push
cmp
jge
pop
xor
scas
cmp
and
mov
push
mov
fadds
or
mov
xor
sti
or
jbe
int
sbb
in
aaa
pop
pop
es
cs
sub
mov
stos
jae
stos
pop
and
icebp
push
outsb
pop
fs
adc
push
sbb
mov
xchg
nop
neg
scas
scas
dec
mov
shl
mov
imul
sbbb
sbb
sar
jle
cmp
aam
test
pop
in
mov
xor
ds
pop
shll
xlat
mov
inc
inc
cmc
mov
cltd
inc
mov
faddl
stc
test
jmp
mov
inc
or
add
sbb
bound
jmp
ret
mov
pop
sub
sub
xchg
push
sub
pop
mov
pop
out
ret
jbe
pusha
mov
imul
inc
xor
std
sbb
push
andb
push
mov
dec
or
sub
or
and
out
mov
mov
mov
imul
pop
jge
aas
mov
pop
in
stos
pop
fstl
pop
cmpsb
dec
mov
pop
movsl
dec
push
or
in
test
insb
jp
cmp
cmp
mov
addl
push
popa
in
push
pop
in
and
jno
sub
pop
idiv
inc
push
push
and
pushf
sub
xor
ss
push
jmp
inc
pop
and
pop
pop
push
lock
stc
cmp
aas
loop
lret
int3
cs
push
add
jmp
jge
inc
dec
insl
dec
scas
jns
lcall
das
ljmp
daa
sbb
or
mov
loop
inc
lods
sti
push
push
ret
popf
scas
ficompl
mov
adc
std
mov
pop
sub
icebp
jle
stos
aaa
jl
pop
pop
js
mov
movsl
adc
push
push
js
aas
out
xchg
inc
mov
and
mov
mov
aas
leave
test
jg
cwtl
xchg
pusha
mov
sub
lahf
int3
xor
mov
jns
xchg
std
out
dec
pusha
pop
mov
or
push
cmp
pusha
arpl
cmp
aam
cltd
jmp
cld
push
pop
rcll
mov
inc
or
sub
outsb
lods
arpl
pop
int
pop
fs
mov
or
mov
mov
xchg
pop
movsb
xchg
les
or
lock
dec
jnp
pop
pushl
movsl
icebp
mov
mov
scas
sbb
int3
stos
pusha
inc
mov
insb
lret
mov
subl
mov
pop
mov
loop
xchg
cmp
rcr
mov
sbb
imul
sahf
cs
mov
out
mov
jb
pop
and
lcall
jecxz
xchg
pop
data16
mov
inc
ds
mov
inc
jno
add
mov
mov
sbb
jae
movsl
cmp
dec
sbb
mov
je
add
pop
movsl
xchg
mov
ss
in
or
xchg
jnp
jnp
cmc
adc
mov
push
test
outsl
sarl
xor
repnz
push
ret
bound
in
jl
and
lret
pop
popa
shr
imul
sti
mov
aaa
push
insb
add
pusha
mov
js
out
popf
jge
push
pop
movsb
sbb
push
jge
lods
stc
push
and
sbb
inc
mov
inc
ds
mov
fadds
iret
je
jp
iret
push
fwait
push
push
sbb
xchg
dec
cld
shrl
mov
loope
lds
jbe,pt
fldt
jg
cli
movsl
pushf
unpckhps
or
cmp
mov
inc
or
and
stos
lret
movsl
push
je
mov
rcll
push
ljmp
mov
shrb
or
xchg
adc
and
rorl
jnp
mov
push
cmc
out
hlt
push
xchg
rorb
pop
lahf
xor
mov
sub
mov
xor
fsubr
mov
pop
rorl
lea
mov
cli
jge
add
into
mov
dec
cmp
dec
clc
adc
jno
lret
scas
xlat
and
and
mov
in
xchg
xor
js
ror
sub
adc
in
and
cmp
loop
or
pop
rorl
test
cmp
mov
js
test
call
and
cltd
mov
lds
jb
in
push
repz
mov
ja
mov
ljmp
xor
push
adc
pop
fs
shlb
fs
pop
jnp
inc
and
and
add
lret
jle
in
inc
pop
sbb
loope
rol
stc
fsubrl
sti
mov
out
dec
loope
xchg
data16
mov
mov
pop
movsb
daa
and
push
insb
mov
and
cltd
or
lods
outsl
subl
lret
imul
sbb
push
popa
loope
mov
or
outsb
sti
inc
in
lds
stos
enter
mov
lret
add
xchg
mov
testl
xchg
add
mov
and
push
lahf
mov
pop
loop
cmpl
or
in
inc
lret
pop
subb
pop
sub
jge
mov
xchg
pusha
jmp
bound
rorl
push
out
jmp
subb
das
dec
roll
mov
fcmovne
and
mov
jmp
adc
call
or
imul
mov
mov
and
out
fldl2e
inc
lret
cmpsl
or
sbb
mov
cltd
and
out
pop
mov
icebp
lea
xchg
loope
xchg
addr16
jae
loop
movsb
ret
inc
test
xor
push
mov
std
or
xchg
mov
push
or
xchg
sti
pop
sub
and
xchg
jmp
dec
inc
pop
mov
add
and
nop
sbb
lcall
pop
shlb
xor
int3
outsl
loope
jp,pn
pushf
jmp
push
hlt
pusha
mov
dec
leave
mov
pusha
cltd
cwtl
add
add
pop
sbb
lret
vucomiss
jp
pop
or
pop
dec
pop
cmp
lret
jecxz
dec
jl
scas
jns
push
enter
adc
nop
adc
cmp
orl
dec
xor
push
stos
insl
test
repnz
push
decl
and
sbb
inc
jmp
push
fstl
xor
mov
int3
ss
in
mov
mov
lods
xchg
fildll
dec
jns
fld
loopne
add
rcll
sahf
hlt
cld
and
test
cmp
cmp
dec
inc
hlt
or
das
outsl
pop
call
add
mov
lahf
inc
scas
aas
xlat
icebp
xchg
out
cmp
test
sbb
mov
icebp
pop
add
xor
add
orb
jnp
int
mov
adc
rorb
fsubrl
xor
xor
jnp
push
clc
leave
repnz
bound
jo
jne
cs
add
xor
add
sbb
int
fmul
xchg
icebp
sub
jae
jb
sbb
pop
jl
mov
xchg
push
mov
ret
loop
repz
aad
jle
imul
insb
aad
mov
sarl
xchg
mov
inc
inc
pop
cmc
jbe
pop
lea
mov
movsl
lret
popf
imul
pop
sub
cli
jl
popa
cwtl
outsb
or
mov
jb
dec
icebp
push
mov
mov
rcl
lods
add
push
lods
sbb
xlat
cwtl
sbb
je
fwait
lret
jae
xchg
outsl
fidivl
aam
sbb
xchg
orl
xchg
sbb
pop
xchg
and
inc
mov
pop
inc
mov
rorl
fcmovb
cld
xchg
sub
sub
xchg
jmp
test
cmp
push
mov
sbb
mov
lods
hlt
xlat
dec
mov
ret
push
into
out
leave
test
jb
in
xchg
mov
mov
or
lret
cmp
fsubr
sub
cmp
jp
lods
mov
aam
dec
fbld
mov
sarb
fsubl
cld
mov
lea
push
mov
dec
lret
cmpsb
lret
and
lahf
rcr
stos
sbb
in
pop
jo
xor
adc
js
mov
mov
jmp
sahf
add
jno
adc
imull
jae
mov
and
in
stos
sti
inc
fisubs
test
xor
pop
push
lods
mov
xchg
xchg
lcall
inc
repnz
xchg
mov
mov
mov
push
pusha
cmc
xor
pop
inc
inc
inc
mov
mov
addb
xchg
gs
icebp
xor
or
cmc
shll
xchg
xchg
or
cs
jae
stos
fimuls
add
mov
sarb
imul
push
mov
fdiv
cmp
bnd
xchg
mov
cwtl
jle
dec
cmp
je
out
fdivs
jae
cmpsl
icebp
insb
dec
dec
es
or
dec
adc
hlt
add
jmp
add
xor
in
das
lock
sbb
jge
pusha
nop
popf
insb
xchg
jmp
xchg
mov
xchg
testl
mov
out
out
inc
jmp
int3
push
xchg
call
clc
enter
or
into
outsl
dec
push
test
jmp
insl
icebp
sub
pop
popa
ret
outsl
ret
sbb
shr
add
lcall
ds
cmp
adc
sub
jo
pop
cmc
xchg
lret
call
adc
sbb
cld
and
adc
mov
xstore-rng
cmpsl
add
aaa
int3
push
mov
mov
scas
add
adc
ja
xor
notb
jnp
ljmp
sub
inc
dec
pop
stc
jecxz
sub
adc
prefetch
in
mov
orb
ret
mov
mov
or
loopne
cmpsb
lret
ja
mov
or
fldenv
sbb
subb
icebp
inc
mov
xor
add
sub
rcll
repz
sub
mov
mov
xor
out
sub
add
inc
dec
nop
js
sub
adc
lods
fnstenv
jno
cmc
icebp
ret
arpl
movsl
sub
and
in
fs
mov
xchg
mov
xor
push
rcrl
daa
loop
and
jnp
daa
push
inc
cltd
jecxz
xchg
jmp
std
mov
pop
lea
sub
insb
mov
push
testb
fists
addr16
dec
inc
jne
testl
jae
adc
pop
push
int3
pop
jno
insb
dec
adc
inc
arpl
leave
movsl
pop
adc
inc
lahf
cli
shll
xchg
gs
jnp
js
dec
fstps
divl
push
adc
lds
movsb
mov
int3
rcrb
ret
lret
sub
jecxz
loope
mov
xchg
frstpm(287
mov
clc
and
jg
cmp
popf
shll
fisttps
sbb
dec
sbb
pop
bound
push
int
cld
add
insl
push
and
jecxz
stos
les
icebp
adc
fldcw
loopne
xchg
mov
cs
inc
push
test
mov
xor
jmp
xchg
in
call
pop
adc
test
in
jb
pop
arpl
mov
stos
in
sub
in
mov
mov
add
push
fcompl
sub
ja
dec
in
mov
iret
test
enter
outsb
inc
fwait
mov
pop
mov
jb
pop
pop
ds
fwait
or
mov
in
push
mov
pop
pop
cmpb
mov
cmp
cmpsb
mov
inc
lods
pop
mov
lcall
imull
in
ret
xchg
lahf
dec
dec
scas
dec
gs
int3
fnstcw
rorl
popf
mov
test
pushf
xor
addr16
mov
mov
lea
sub
enter
testb
insl
fnstsw
stc
lods
xchg
mov
inc
cld
push
push
ret
xorl
mov
mov
sahf
mov
mov
mov
adc
sbb
and
jns
aaa
mov
pushf
test
push
out
incl
imul
cmp
ret
jge
dec
sbb
push
or
jne
add
fwait
lods
ret
push
jmp
cmp
lret
mov
push
jo
push
outsl
push
into
cmp
sbb
shlb
icebp
mov
das
pop
hlt
pop
enter
lea
pop
mov
push
push
xor
jno
xchg
sbb
stc
cmpsb
imul
pop
insl
mov
cmc
add
cld
es
jno
mov
movsb
sahf
sub
inc
test
xchg
cwtl
and
jecxz
pop
add
nop
push
mulb
push
in
les
xchg
in
fsubp
inc
mov
icebp
add
mov
fwait
lock
xor
js
xchg
xor
loopne
mov
imul
out
mov
lds
jp
iret
jge
stos
aad
push
sbb
stos
daa
jl
and
addr16
xlat
repnz
inc
xlat
lahf
push
xor
scas
pop
add
loop
outsb
xchg
mov
adc
pusha
mov
push
sub
push
repz
xor
test
push
pop
test
andb
std
pop
push
mov
dec
daa
mov
jle
je
jns
mov
inc
jbe
lcall
cltd
rcll
jbe
push
adc
mov
sbb
aam
cltd
and
aam
jg
or
repz
fsubs
jno
jge
ds
push
mov
xor
lods
mov
imul
int
xchg
push
xchg
xorl
sbb
sar
mov
out
mov
scas
bound
jmp
mov
loope
inc
inc
sub
push
js
insb
pop
ds
mov
push
xchg
repz
mov
aaa
cltd
test
notl
xchg
mov
mov
xor
sub
sbb
roll
fistps
shll
pop
out
fnsave
cwtl
sub
aas
add
mov
dec
push
xchg
pusha
cli
ja
or
mov
jae
push
cmp
outsb
and
out
scas
rcr
pop
jl
mov
lcall
pop
rcll
or
icebp
jno
xor
mov
popa
scas
sti
pop
xchg
loopne
bound
push
push
push
cmp
nop
cmp
adc
lods
roll
xchg
movsl
mov
xor
xor
and
sbbl
shlb
daa
movsl
das
cmpsl
add
add
mov
and
push
adc
add
or
cmp
dec
xor
sub
xchg
leave
subb
add
push
push
mov
frndint
ss
jb
push
mov
test
stc
cwtl
cli
inc
dec
adc
sub
ds
imul
dec
lods
pop
mov
cli
leave
sub
mov
into
mov
imul
cmc
fwait
lea
dec
scas
repz
pop
imul
xchg
mov
mov
pop
push
movsb
lcall
aas
mov
adc
call
faddl
fcomps
call
loopne
outsb
shr
mov
adc
sbb
xchg
in
sub
mov
fidivs
popl
or
mov
ret
lds
or
jae
sub
push
sbb
pop
mov
mov
orb
insl
and
inc
inc
arpl
out
push
push
cmc
and
xor
outsb
adc
mov
fdivs
clc
stos
mov
mov
cld
movsl
inc
pop
sbb
sbb
mov
imull
dec
or
in
cmp
pop
jne
outsl
adc
or
inc
xor
pop
daa
jo
push
mov
pop
fisttpl
mov
cmp
pop
les
pop
pusha
test
or
nop
out
and
xchg
dec
in
push
jl
outsb
xchg
lods
mov
rcrl
int3
mov
sub
es
xor
push
add
pop
testl
imul
gs
push
out
ss
sub
ficoml
mov
clc
push
mov
xchg
pop
pop
ficoms
mov
jb
xchg
dec
mov
xor
ret
pop
cmpsb
bound
popa
in
xchg
imul
es
xchg
mov
cld
pop
mov
sbb
xchg
loop
test
movsb
adc
add
fimuls
aas
loopne
xchg
fwait
lods
push
and
in
jmp
loopne
mov
mov
out
lret
add
call
or
adc
pop
push
fdivr
push
into
gs
lods
pop
and
sub
mov
adc
bound
cmpl
xorb
divl
sub
push
pusha
fadds
mov
add
xchg
xchg
rclb
in
in
cmp
inc
xchg
pushf
stos
mov
mov
mov
fadd
clc
dec
pop
imul
and
cwtl
into
cmpsb
inc
aam
lcall
scas
test
mov
mov
push
fidivl
out
push
xchg
cmp
mov
gs
mov
movsb
fsubrp
arpl
movsb
sub
stc
push
movsl
cmp
cmp
pop
mov
jb
cmp
mov
and
mov
dec
std
pop
lods
cmp
hlt
addr16
addl
sbb
stos
and
sarl
xchg
shlb
push
addr16
jl
iret
mov
lcall
mov
pop
xor
out
push
sub
test
xlat
or
in
js
cmp
cmp
sahf
fistpll
stos
mov
test
sahf
aad
aad
mov
dec
push
sub
xchg
and
sub
cwtl
jo
ja
push
mov
inc
fistpll
push
inc
mov
repnz
push
fwait
mov
inc
xchg
ss
ljmp
push
jmp
icebp
or
popa
lcall
jno
pop
sbbb
shlb
and
arpl
pop
sbb
mov
clc
mov
xor
dec
push
xlat
ss
pop
xchg
cmc
stos
push
sarb
push
inc
fucom
dec
inc
push
xchg
subl
pop
xor
ljmp
cmp
adc
mov
clc
repnz
scas
cmp
cmpb
cmc
mov
push
insb
std
dec
xchg
dec
fcompl
int3
xor
jbe
fists
js
enter
outsb
outsb
push
ret
out
fisttpll
movsb
fs
xchg
insb
ljmp
imul
sbb
jbe
cmp
or
sub
mov
cltd
rcr
pop
push
rorl
lret
or
or
add
sub
mov
sahf
movlps
mov
sub
in
cmp
pop
repnz
int3
jecxz
loope
fcomps
iret
or
push
cmp
push
push
test
decb
xchg
dec
or
loope
push
in
repz
or
cwtl
sub
ret
inc
cs
ljmp
jle
adc
scas
and
out
gs
pop
pcmpeqb
pop
sbb
dec
add
ja
jae
lahf
int
addr16
stos
mov
add
and
int3
mov
aaa
out
or
hlt
das
inc
hlt
cld
jmp
mov
in
cld
inc
daa
jle
popa
xor
ficomps
jp
inc
push
rcrl
sahf
mov
push
pop
and
adcl
arpl
sub
int
mov
cli
test
push
es
pop
aas
mov
cmp
mov
scas
push
pop
cmp
pop
mov
add
sbb
in
shlb
popf
repnz
pusha
xor
mov
jg
icebp
insl
mov
sub
adc
mov
jecxz
lahf
cmp
mov
xor
xchg
xor
lret
aas
mov
gs
jle
jle
fnsave
scas
mov
sub
sub
add
test
sbb
loopne
fs
mov
imul
xchg
insl
and
add
pop
push
repnz
aad
cmp
mov
jge
sub
pushl
push
add
add
jp
int3
rcrl
and
push
dec
xchg
mov
sub
lea
lret
jns
add
sbb
adcb
daa
mov
mov
xor
add
out
inc
jg
stc
mov
adc
in
aas
push
stos
cwtl
xor
adc
adc
jp
insl
and
dec
sub
xchg
out
call
xor
lock
sbb
sbb
int
lods
fstpl
sbb
mov
add
and
mov
sub
push
cmp
sub
cld
andb
lahf
xor
cs
inc
fldz
mov
xlat
mov
bound
sub
test
mov
sti
pop
push
mov
lods
insb
clc
repz
in
push
mov
imulb
xor
xchg
jbe
or
rcr
mov
enter
int
les
mov
cmp
xor
xchg
aam
jbe
aad
pop
pop
pusha
xchg
scas
sub
xchg
pop
xor
and
cld
or
and
sahf
dec
sub
adc
inc
add
aas
inc
xor
push
sbb
inc
outsl
pop
cmc
cwtl
and
jp
mov
jnp
pushw
push
rcll
mov
mov
xlat
ja
add
xor
stos
movsl
mov
movsb
lods
loopne
xchg
inc
cmpsl
add
xchg
push
mov
rcll
scas
insl
inc
mov
test
shl
push
insb
xchg
sub
mov
pop
insl
cmpsb
dec
jae
adcl
mov
sbb
cwtl
and
sub
and
mov
gs
sbb
aam
mov
aad
or
lcall
add
sbbl
scas
xor
rorl
clc
mov
xor
sub
ficompl
xchg
dec
push
jb
jge
add
and
inc
dec
icebp
dec
mov
jne
xchg
jmp
fstp
jp
mov
xor
andb
insl
fs
shrl
or
lss
mov
pop
fbld
pop
jb
sbb
mov
push
xchg
outsb
mov
jmp
xor
jns
push
xchg
enter
mov
popf
mov
pop
fstpl
loope
xlat
into
dec
sbb
pushf
jnp
and
lock
cld
ficompl
aam
xor
pop
idivl
lods
mov
cld
gs
add
inc
adc
xchg
cvttps2pi
fs
aas
addb
loop
mov
repz
orl
xchg
test
cmp
hlt
or
iret
mov
push
lods
xchg
test
add
xchg
push
adc
jb
int3
js
icebp
push
lds
sbb
xchg
dec
in
dec
jge
or
or
mov
inc
lock
leave
popf
jne
dec
fildl
sub
dec
xchg
jo
arpl
cmpsb
inc
js
sub
fsubrs
xor
and
lods
xor
loope
daa
xlat
aam
xchg
lods
mov
adc
and
gs
xchg
dec
xor
pop
daa
loope
xor
cld
adc
fstps
imul
bound
inc
xor
fcomps
dec
cwtl
sar
in
aad
cmp
aaa
ds
xchg
popf
xchg
imul
lahf
and
cmp
push
adc
xorb
stos
cli
mov
nop
cmp
inc
pop
pop
jge
lret
pop
mov
cmp
out
fnstcw
imul
sub
iret
sub
out
iret
shl
aam
leave
inc
jle
jae
orb
inc
dec
rcrl
les
or
lods
add
leave
dec
aam
loop
stos
cld
xor
sbb
and
clc
cmp
shrl
pusha
xlat
dec
pinsrw
xor
insl
inc
pop
mov
incb
aas
mov
lret
xlat
mov
shl
std
jge
pop
enter
pop
add
stc
inc
jg
fwait
and
sbbl
push
dec
shl
inc
push
lods
nop
movsb
negb
lock
adc
cmovbe
divb
sbb
lods
sar
xchg
push
mov
es
ds
xchg
fwait
and
mov
mov
in
lcall
pop
clc
jo
dec
sbb
sbbb
add
call
movsb
enter
mov
inc
repz
inc
cld
mov
dec
adc
das
cli
sbb
mov
cmc
mov
mov
loopne
inc
sbb
inc
fisubs
inc
mov
push
pop
xchg
push
test
sub
adc
sbb
loop
jp
sub
cmpxchg8b
leave
sti
cmpsl
lock
mov
cmp
jl
fs
xchg
pushf
cmpsb
mov
outsl
loopne
in
je
jbe
sub
cmpsl
cmp
les
lock
test
enter
cmp
push
jle
out
iretw
loopne
out
call
insb
lods
fadd
mov
push
test
hlt
out
cmp
sub
ret
addr16
les
cli
fs
les
data16
push
idiv
int3
sbbl
pop
jne
loop
std
cmp
xchg
cmp
movsb
add
mov
inc
int3
and
add
jnp
push
mov
ljmp
jns
leave
mull
inc
arpl
sbb
or
mov
sub
push
push
cmp
inc
and
fldcw
cwtl
into
pop
les
xor
pusha
shr
add
rorb
sahf
inc
pop
repz
jle
mov
lcall
dec
iret
mov
int3
cmpsl
out
mov
and
add
in
mov
popl
fcomps
test
add
jle
test
mov
rcr
dec
mov
ficomps
dec
jnp
jmp
cltd
hlt
mov
mov
lahf
push
data16
pop
dec
xchg
mov
gs
pop
insb
inc
xor
xor
and
fsubl
or
daa
mov
rcll
sbb
mov
outsb
cs
lahf
es
inc
pop
lcall
and
fiaddl
mov
loop
sbb
xor
dec
fcoml
jge
data16
ja
or
push
xchg
xchg
lcall
loop
sbb
xchg
out
ret
mov
aam
cmp
dec
push
in
dec
adc
dec
lahf
test
mov
stos
cld
xchg
pop
fildll
in
adc
cmp
insl
jb
fldenv
lods
jle
jbe
or
dec
xor
mov
aaa
pop
xor
inc
add
sub
add
test
adc
adc
das
and
test
cmp
mov
leave
xchg
pop
adc
mov
jo
daa
inc
pop
out
aaa
sbb
lcall
mov
out
mov
xchg
sbb
movsb
cmpsb
pusha
cmc
sti
jl
cld
iret
ss
or
test
sahf
shll
xor
jbe
dec
add
aas
aad
jmp
cmpsb
shl
push
add
ficompl
xchg
xlat
push
and
repnz
pop
sub
test
lds
das
popa
fsubl
or
pop
add
repz
adc
jmp
test
xchg
xor
fwait
pop
or
push
aam
and
push
bound
adc
pop
cwtl
or
add
ret
lahf
mov
sahf
fnstenv
into
das
xor
ljmp
repnz
cmc
cmpl
pop
pop
and
push
enter
imul
das
js
cmp
cmp
mov
shl
jno
xchg
fisubrs
std
or
mov
hlt
stos
sbb
xor
enter
pop
cmp
xchg
das
cmp
fstpt
push
push
scas
cmp
loop
es
and
add
fsts
xchg
outsl
mov
notb
mov
fwait
mov
add
pop
pop
lret
je
sti
fninit
leave
cltd
cmpl
dec
jo
pop
lret
add
xlat
sbb
adc
das
jbe
fdiv
mov
loop
xor
adc
scas
sbb
xchg
push
sub
loope
pop
pop
xchg
dec
movsl
repnz
mov
cmc
and
mov
jl
mov
pop
scas
lcall
aad
sub
cld
inc
mov
xchg
gs
mov
xor
push
mov
adc
adc
xchg
and
jle
jl
add
mov
xlat
sti
xor
lret
cmpsl
rclb
mov
push
adc
jb
dec
adc
lahf
call
mov
cltd
mov
jl
cmpb
jns
cld
push
jnp
ds
cmp
hlt
sub
xor
sub
xchg
ja
jb
inc
ja
outsb
fstp
shlb
mov
outsl
dec
rorb
and
bound
rcrl
sbbb
addl
pop
and
mov
xchg
fidivrs
hlt
push
xor
lock
daa
enter
push
insl
or
cmpsl
out
cmp
stos
mov
pop
adc
or
add
stc
xchg
sbb
mov
mov
sub
xchg
jno
stc
lock
pushf
fidivs
mov
pop
mov
mov
cmpsb
mov
mov
adc
mov
sbb
cmp
jp
cmp
clc
xor
fmul
add
into
or
push
mov
inc
mov
lds
sar
outsl
ret
jbe
pop
in
gs
sbb
dec
filds
mov
add
push
dec
push
mov
add
in
xchg
dec
scas
push
add
in
mov
jae
pusha
lret
push
popa
xor
shll
fcmovnbe
xor
dec
dec
mov
ret
sbb
push
inc
sub
fisubrl
pop
gs
outsl
mov
mov
mov
sbb
jo
xchg
aaa
sti
push
adc
mov
sub
jp
push
sti
cmpb
loop
mov
fisubrl
push
and
dec
cmp
push
jne
rorb
pop
out
lret
stos
repnz
xchg
addr16
fnsave
add
adc
mov
xchg
in
ret
pop
push
sub
in
cmpsb
mov
pop
xchg
or
mov
insl
leave
gs
test
or
in
enter
dec
int3
xor
imul
jecxz
rorl
and
push
les
adc
gs
daa
sub
mov
jge
nop
cmpsb
data16
sahf
bound
fidivs
out
inc
daa
sub
mov
or
xchg
gs
fwait
jle
filds
lahf
idivl
out
mov
pop
mov
shll
clc
jb
dec
loop
fwait
popf
jns
pop
adc
fnstsw
jecxz
fs
sbbb
mov
mov
mov
inc
pusha
add
mov
leave
fildl
pop
sahf
sahf
loope
xchg
mov
inc
pusha
sbbl
jno
fldl
and
cwtl
gs
xchg
out
push
xchg
cwtl
dec
lea
pop
xor
pop
ja
je
mov
loope
into
test
cmp
aad
out
pop
adc
imul
dec
call
lahf
aad
xchg
dec
mov
pop
mov
jl
and
push
add
movsl
jnp
inc
pop
cmpb
or
mov
inc
into
lods
push
lods
scas
sub
daa
lds
push
jmp
clc
push
mov
xor
jp
sahf
push
out
add
lock
add
xor
pusha
mov
rcrb
sbb
push
test
ljmp
xor
js
idiv
imul
lods
xchg
sahf
addr16
lods
adc
fisttpl
or
fisttps
dec
pusha
cmp
dec
xlat
loopne
lds
mov
pusha
nop
insb
mov
sub
in
push
test
mov
arpl
mov
sub
in
sbb
sbb
and
clc
xchg
sarl
xchg
inc
mov
push
stos
rorl
cmpsb
out
notb
cmp
push
add
inc
out
sub
cmc
push
gs
push
iret
and
mov
xor
cltd
mov
push
xchg
push
mov
push
jl
adc
rcr
pop
jae
sub
mov
sub
and
shrl
push
loopne
pop
dec
or
stos
hlt
adc
fisubl
sub
or
int3
mov
out
mov
ljmp
xchg
ss
fwait
and
cmp
shl
xchg
inc
pop
push
loop
and
jb
push
pop
lret
xchg
xchg
push
xchg
mov
in
ja
push
mov
mov
ljmp
test
sti
jecxz
cmc
sbb
sbbb
add
cmpl
cltd
leave
adc
pop
adc
movsl
scas
cmpsb
scas
cmpsb
shl
fistl
jnp
and
push
xchg
inc
lea
fstpt
nop
fstl
aad
cmpsl
sti
paddusb
inc
xchg
ss
mov
cmpl
std
cmpsb
popa
jo
ret
stos
mov
jno
clc
push
jp
pop
jno
shl
fs
add
ds
out
scas
add
xchg
jne
xchg
inc
push
push
test
mov
imul
cmp
dec
aad
push
push
sub
sub
jns
std
mov
dec
sub
enter
fdivrs
imul
repz
aad
add
add
rcl
sub
push
mov
jmp
cmp
pop
push
cmpsl
cmp
insb
mov
decb
fildl
adc
imul
or
cmp
sub
outsl
sub
sub
sahf
rorb
ret
fsubrl
add
inc
mov
loope
lods
mov
and
divl
insl
pop
jno
xchg
push
mov
xor
cltd
pop
and
mov
mov
icebp
mov
cmp
test
xchg
fdivs
xor
js
in
outsb
pushf
sbb
sahf
popa
or
insb
ss
jl
sub
cmc
add
imul
xor
add
lret
mov
data16
movsl
insb
mov
sub
jle
jge
add
aas
scas
xlat
fdivrs
jge
mov
inc
mov
movsb
int3
mov
ret
negb
pop
sub
fsubs
dec
faddl
and
imull
dec
addr16
insb
mov
fistps
mov
push
jp
enter
out
cmp
sbb
dec
icebp
je
shll
rclb
cmp
jbe
lods
loope
jo
lods
test
sti
lods
lcall
rcr
fsubrl
fimull
sbb
and
insb
jl
adc
pop
mov
mov
inc
in
xchg
adc
jp
xchg
pop
movsb
sahf
xor
inc
sub
mov
movsl
jnp
sahf
xchg
stc
pop
fcoms
sub
jnp
cld
lret
or
pop
mov
lods
icebp
pusha
mov
mov
mov
jl
jge
pop
or
or
enter
out
push
test
mov
add
mov
mov
pop
lret
sbb
cmpsl
test
sub
enter
ds
or
test
test
jecxz
push
lods
iret
call
cld
pop
in
fcoml
jge
out
mov
mov
cmp
push
sarl
popa
dec
es
lds
pop
loop
xchg
ds
out
inc
mov
add
mov
cli
push
cmp
in
mov
lods
gs
cmp
divl
movsl
lea
aaa
out
xor
mov
pop
sbb
lea
xor
xchg
sidtl
cmp
pop
or
adc
dec
popf
jmp
sbb
push
inc
ljmp
mov
in
movsb
push
adc
clc
and
loop
pop
jno
loope
ret
push
je
mov
or
jg
sti
mov
ret
mov
or
fisubl
mov
pop
fs
jmp
jns
pushf
sub
mov
gs
xchg
add
out
push
push
dec
xorl
cmp
push
xor
jnp
xchg
pop
inc
ret
fldl
mov
pop
fmull
inc
mov
fldt
inc
outsb
add
negb
jecxz
in
call
dec
sub
mov
popa
dec
int3
inc
cmp
out
push
lahf
pushf
jo
pushf
aad
cmp
pop
in
jle
xor
in
dec
xor
lahf
int
addl
arpl
mov
cmp
int3
ret
es
test
enter
pop
popa
jns
aas
sub
bound
jnp
or
jmp
bound
outsl
insb
mov
test
mov
test
xchg
ljmp
xchg
push
js
popa
xlat
xchg
es
jae
adcl
sbb
xor
ret
pop
push
sahf
bound
mov
subb
scas
mov
cmpsb
test
lret
pop
mov
and
lock
rcrb
scas
fidivrs
jae
inc
std
mov
dec
adc
jns
jge
mov
cmpsb
mov
addr16
mov
loopne
xor
outsl
dec
xor
loop
arpl
push
imul
inc
loop
insb
insl
sbb
out
push
aas
mov
ljmp
frstor
pop
ret
jns
cmc
jl
jmp
xor
leave
push
jl
ja
pop
cmp
xor
jne
inc
std
insl
jae
sbb
mov
mov
adc
mov
pop
mov
nop
push
lahf
mov
pop
fidivl
rol
mov
movsl
test
adcl
nop
pop
cmp
push
popf
js
movsb
ja
xor
ja
mov
cmp
lea
push
gs
jns
mov
inc
out
rolb
filds
xor
loope
add
jle
scas
loop
mov
cmp
dec
sub
or
jno
leave
inc
push
les
arpl
lods
mov
add
test
inc
jno
imul
filds
roll
sub
mov
inc
push
cld
jnp
xor
xchg
loopne
push
and
movsl
mov
pop
mov
iret
icebp
mov
aam
out
movsl
push
cmp
sti
jle
mov
add
icebp
add
cmp
xlat
pop
jmp
fisttpll
inc
mov
cmpsb
push
inc
or
vmulss
fbld
fildll
cmp
sbb
mov
pop
call
mov
das
pop
icebp
jmp
push
pop
rcr
lds
dec
pop
in
movsb
add
inc
mov
int3
in
icebp
ss
aam
jo
ret
sub
xchg
pop
mov
stos
les
in
cwtl
or
or
mov
push
mull
aad
mov
cmc
lcall
hlt
add
fadds
out
pop
shrl
ss
xor
push
mov
mov
dec
vpcmov
add
imul
jg
sub
xor
mov
fmuls
dec
sub
stc
arpl
inc
sub
push
movsb
repz
xor
mov
cmp
faddl
mov
les
push
movsl
mov
ret
cwtl
mov
xor
jle
and
or
bound
loope
mov
push
and
push
adc
or
inc
or
mov
fnstsw
cmc
andb
loope
loop
cltd
mov
xor
cmpsl
jb
jbe
in
loope
push
lret
clc
stc
inc
repz
out
orl
popa
inc
mov
mov
mov
jmp
push
and
mov
push
test
cltd
adc
ja
cltd
sub
cmp
imul
adcb
inc
mov
icebp
out
jns
aas
fwait
mov
shll
xor
aam
pop
sbb
int
hlt
cmpsb
orb
sti
in
add
jno
es
mov
and
mov
fcomps
test
mov
xor
dec
rcl
notb
mov
sbb
dec
outsb
adc
icebp
sbb
inc
and
repnz
jb
cwtl
jne
add
add
cmp
jecxz
mov
adc
dec
jno
test
int
add
sbb
mov
imul
sub
jp
cwtl
xchg
xchg
xchg
dec
xor
pop
push
mov
lock
loope
scas
push
xor
and
pop
das
cmp
jno
add
mov
flds
dec
clc
mov
push
sarl
sub
stc
mov
add
lods
sahf
inc
scas
aaa
ds
shrl
mov
mov
pop
iret
push
and
cld
jle
test
adc
cmp
idiv
stos
imul
jmp
adc
xchg
je
xchg
inc
mov
rcrb
cs
jmp
enter
adc
mov
outsl
dec
es
push
js
dec
enter
xlat
das
lahf
test
clc
rcr
xchg
mov
push
pop
inc
popf
in
jmp
push
mov
push
fwait
test
fs
add
icebp
into
subl
xor
push
mov
or
adc
mov
xchg
lret
fsubrl
push
stos
sub
push
pop
sub
xchg
movsb
lahf
aam
mov
ret
aas
sub
xor
je
xor
imul
out
lods
imul
jnp
lods
mov
jp
and
xor
sbb
and
dec
test
incl
xchg
xor
push
mov
inc
sti
lahf
int
ljmp
imul
loopne
dec
sub
inc
adcb
or
push
fisubrs
into
push
aam
sub
ja
emms
or
mov
jge
cmp
jno
out
loop
sbb
push
int
call
mov
dec
push
add
add
pop
pop
and
sub
xor
fdivr
mov
hlt
stos
fdivs
not
data16
rolb
sbb
fdivr
packssdw
or
mov
out
aaa
out
xor
and
loop
push
sub
cmp
xchg
aam
push
int3
call
into
int
aam
fimull
cwtl
dec
shll
sub
lret
add
addl
xchg
rcl
fdivr
movntq
arpl
mov
xor
shll
xor
aam
mov
xor
xchg
clc
jo
pop
sbb
popa
jg
sbb
pop
arpl
xchg
or
inc
pop
or
mov
movsl
adc
adc
adc
test
xlat
mov
mov
into
stos
frstor
nop
lcall
mov
fsubrs
mov
out
les
and
pop
cmp
jecxz
or
xchg
dec
lds
test
mov
add
or
aad
sub
inc
rol
cmc
jb
jmp
aaa
lea
call
mov
lahf
mov
or
fwait
sub
dec
pushf
xchg
andl
jno
xor
aaa
rol
sbb
nop
push
dec
mov
mov
gs
iret
aas
add
fwait
popa
popa
xchg
fstpl
push
aaa
lods
dec
idiv
jae
les
imul
cld
js
imul
ret
imul
jnp
and
and
fnstsw
pusha
stc
arpl
cld
mov
mov
outsl
andl
dec
xor
xchg
push
dec
cltd
sti
out
xchg
and
pop
lods
lea
and
mov
xor
fcomps
sub
movsl
ja
add
sbb
aam
and
sub
iret
dec
call
je
stos
push
daa
lret
push
or
cmp
cmpsl
inc
push
daa
jmp
jae
add
xor
pop
xchg
jge
jnp
push
jbe
outsl
and
inc
jge
mov
insb
xor
xchg
jb
mov
push
orl
bound
int
popaw
rcrb
sub
dec
movsl
icebp
or
je
scas
shll
jnp
ret
or
cs
mov
cmc
js
xchg
ds
jb
fwait
add
push
sbb
jo
popa
xchg
scas
jmp
stos
fiaddl
ret
xchg
sub
cmpl
add
lea
adc
std
outsl
push
test
call
sbb
mov
rcrl
mov
aad
xor
push
adcb
pop
xchg
aad
testl
and
mov
gs
sbb
fimuls
iret
test
add
xchg
in
test
cmp
fldenv
and
or
xchg
jno
lret
mov
mov
pop
sub
ret
das
add
insb
push
fsubs
or
jb
mov
push
xchg
inc
push
sbb
jne
add
mov
add
stc
imul
in
mov
ja
negb
test
inc
mov
sbb
fstp
into
mov
fbld
dec
dec
cmp
rorb
inc
adc
sarl
cmp
imul
lock
scas
xchg
push
lcall
mov
push
lret
mov
dec
lods
jle
mov
jmp
iret
xor
aam
add
or
insl
sub
inc
lcall
sbb
pop
xchg
arpl
pop
shrb
shrl
push
mov
inc
leave
loope
cmpsb
sub
push
hlt
inc
icebp
mov
xorl
dec
pop
mov
add
lock
mov
call
es
dec
mov
out
xor
mov
jo
mov
daa
push
inc
xchg
ja
xchg
fildll
cli
lods
and
pop
out
push
mov
fdivl
jl
ss
test
popa
fildl
add
and
xchg
jecxz
adc
lret
xchg
xchg
fildll
addr16
jo
popf
mov
pop
fwait
gs
dec
cmp
les
leave
pop
cmpl
xor
push
int3
lods
cmp
mov
adc
lods
imul
pop
gs
out
pushf
dec
xchg
shrl
adcl
aam
mov
fcomps
arpl
pop
mov
incl
inc
pop
fdivrs
jno
je
js
sar
jp
pop
out
loope
mov
in
sub
jecxz
imul
push
adc
cli
mov
mov
aas
divb
mov
mov
mov
add
mov
testb
out
xor
sub
mov
sti
ficompl
vpsubw
cmp
aad
pop
test
mov
push
popa
lcall
sub
movsb
adc
push
ss
adc
ljmp
iret
mov
push
jge
sub
dec
andl
or
std
mov
out
hlt
cld
jo
aam
xchg
push
pop
ficoms
xchg
clc
mov
insl
push
pop
jo
add
loopne
decb
stos
lea
xor
mov
rolb
xor
ss
nop
push
dec
je
sub
rcrl
into
cmp
cmp
xchg
push
outsl
cmpsb
push
jmp
jmp
xchg
fldenv
jge
sarb
and
pop
popf
call
popf
mov
ds
xor
push
imul
push
out
mov
xchg
pop
pop
pop
mov
dec
rorb
stos
icebp
fsubrs
dec
adc
xor
outsl
dec
sub
pop
pop
das
cmp
mov
aaa
or
sbb
or
inc
sub
fwait
mov
nop
in
adc
jns
xor
sti
jb
je
in
fucomip
addr16
xchg
pushf
rolb
movsl
mov
popa
aaa
ss
lods
xchg
sub
aad
stos
xor
sbb
adc
adc
add
xchg
adc
test
mov
stos
test
popa
mov
pop
adc
rcll
jae
mov
push
popa
dec
push
leave
mov
rcl
jmp
call
fsub
mov
cltd
or
xchg
pusha
mov
xchg
call
bound
xor
lcall
sub
lret
cs
xchg
add
int
fmull
enter
or
ret
mov
in
push
pushf
push
cmc
adc
inc
insl
jp
xor
shl
add
int3
mov
cmc
sub
movsb
jmp
mov
scas
gs
js
push
sub
ja
dec
lahf
jbe
aaa
pop
mov
push
out
xlat
hlt
sahf
ss
mov
aaa
pop
and
and
inc
lods
call
nop
cs
push
sub
xchg
out
hlt
mov
js
xor
ret
inc
shrb
xor
movsb
in
xor
sbb
cmp
xor
loop
pop
movsl
sbb
mov
jecxz
mov
xchg
pusha
fstl
inc
inc
popa
sub
mov
mov
adc
sub
push
shrl
xor
push
lahf
jmp
sti
ljmp
add
incb
mov
mov
sub
incl
ret
push
ret
je
jnp
cld
aad
and
fbstp
std
cltd
mov
test
mov
or
cltd
xor
push
dec
pushw
push
mov
xchg
ja
xchg
in
ds
pop
ljmp
mov
push
and
and
inc
dec
cld
sub
inc
notb
out
lock
and
ss
jb
sub
mov
icebp
and
cmp
stc
or
nop
adc
push
jecxz
je
ret
mov
mov
sub
flds
inc
lret
add
adc
xor
ret
or
sub
mov
pop
test
cmp
fs
js
push
loope
popf
or
jns
clc
xchg
jnp
pop
cltd
jb
jbe
int3
push
mov
inc
movl
js
repz
jbe
idivb
test
popf
cmp
fistps
sub
push
add
inc
pop
push
xorl
ss
mul
add
add
inc
rorb
xchg
test
shll
add
loope
jle
iret
mov
test
sub
popf
mov
int
test
out
add
jne
jne
push
test
push
inc
sbb
aam
stos
xchg
add
fnstenv
push
and
and
mov
xchg
fisttpll
sbb
cmc
out
fisttpll
movsl
shll
mov
loope
in
mov
add
daa
jae
nop
shll
aad
jp
loopne
xchg
dec
mov
mov
jae
shrl
cmp
enter
in
push
aaa
mov
mov
in
mov
daa
add
repz
or
cmp
inc
jo
jp
mov
imul
pop
stos
movsb
xchg
jl
xchg
or
psrld
aad
fisubs
pop
xchg
push
fimull
roll
fiadds
mov
into
cmp
popa
rorl
or
inc
adc
sahf
push
push
imul
les
aad
loop
push
jmp
mov
loopne
mov
push
add
dec
mov
sbb
or
jle
stc
rclb
jle
sbb
mov
insb
push
fisubrl
mov
pop
sbb
xchg
int
pop
mov
push
jae
in
arpl
cmp
fcmovnbe
arpl
aam
and
iret
mov
movsl
add
pop
cs
cmp
dec
daa
xchg
or
jmp
sub
xchg
lret
pusha
sahf
push
mov
adc
xlat
mov
mov
enter
out
aam
and
movsb
fwait
negl
es
cli
pop
aam
fisubl
jb
mov
ror
daa
jmp
mov
add
hlt
addb
mov
pop
xchg
lahf
inc
sahf
mov
les
adcb
lods
sahf
dec
jbe
rcll
mov
inc
daa
fistpl
push
cmp
scas
mov
mov
push
push
inc
push
adc
pop
dec
cmp
lods
mov
xor
and
loop
xchg
sub
mov
jecxz
xchg
mov
sub
in
mov
fdivs
icebp
dec
push
pop
out
jns
ja
and
ljmp
out
pop
ja
push
mov
jl
jo
jg
dec
sub
xchg
dec
cmpsl
cmpsl
shrb
xchg
xor
adcl
call
hlt
mov
into
js
jecxz
lods
xchg
bound
adc
inc
enter
xlat
cltd
jmp
xor
ds
mov
pop
andl
sbb
push
dec
add
test
lock
mov
sbb
jle
clc
mov
sbb
pop
sub
scas
mov
or
add
std
xchg
push
je
bound
push
ficoml
stos
data16
mov
std
in
popa
and
add
xor
xchg
xchg
jo
sbb
dec
and
sti
cmp
movsb
scas
les
push
xorb
int
mov
jmp
add
addb
pmulhw
push
jg
and
scas
pusha
jecxz
dec
mov
jb
push
je
insb
inc
cmc
add
and
repz
imul
xchg
mov
out
test
shlb
sub
outsl
ret
cmpl
mov
cmp
sbb
dec
xchg
popa
in
or
inc
add
aam
mov
xchg
test
mov
test
les
or
inc
push
les
lea
test
shll
sub
add
jo
xchg
pushl
pusha
pop
dec
sahf
inc
cmpsb
int3
fisubrs
fldt
dec
ljmp
lcall
and
lret
movsl
cmc
pop
xchg
lea
data16
inc
stos
mov
mov
ss
dec
scas
aad
jno
cmc
inc
data16
push
and
inc
sub
xchg
jp,pn
pop
push
xor
and
cmpsb
sub
lods
aam
and
scas
pop
sbb
mov
inc
imul
stos
rorl
call
mov
fwait
mov
test
ds
push
pop
outsb
test
cli
inc
and
mov
into
add
and
xor
or
aaa
xor
int3
xlat
movsl
ret
adc
cli
jecxz
int3
inc
cs
dec
or
arpl
aam
test
in
jno
sbb
loope
jg
sti
pop
mov
aam
pushf
mov
ja
jg
adc
fstpt
aam
inc
testb
ljmp
bound
dec
mov
pop
fwait
mov
mov
xlat
imul
push
push
shll
aad
sub
iret
std
cmp
jne
push
adc
pop
lock
inc
jno
or
aam
cmpsb
ja
mov
xor
and
dec
cmp
lcall
pop
sbb
outsb
addr16
les
or
push
sub
pop
dec
pop
ja
pushf
loop
daa
imul
cmp
xchg
push
sub
ds
cli
xchg
cs
in
lret
icebp
adc
dec
pop
mov
or
fstpl
add
push
jno
test
pop
mov
push
outsl
push
inc
iret
stos
hlt
pop
and
je
xchg
add
ds
jae
ret
jge
xchg
fiaddl
mov
scas
das
outsl
and
push
aad
iretw
clc
sub
div
pop
das
call
xor
jmp
jl
fwait
mov
or
xchg
lahf
mov
lret
imul
mov
and
jns
pusha
dec
mov
arpl
fildl
push
mov
cmpsl
out
sbb
pop
das
sbb
xlat
mov
out
or
test
out
cmp
push
sub
fimuls
cmc
push
lret
popa
jecxz
push
int3
jno
leave
rcll
xchg
adc
movsb
cmp
fcomp
push
call
popa
loopne
pop
fnsave
add
das
bound
iret
cmc
or
ficomps
data16
mov
adc
sbb
or
xchg
cs
lret
add
lret
jb
jp
mov
ret
pushf
ret
dec
pop
add
test
sub
imul
pop
nop
dec
mov
mov
cmp
outsl
stos
je
aad
cwtl
dec
xor
in
popf
push
xchg
mov
adc
push
lock
lock
xlat
push
iret
dec
push
jnp
adc
and
push
fwait
int3
sbb
cmpsb
jb
arpl
jno
jecxz
xchg
shll
sub
and
clc
cmp
add
addr16
jns
addr16
push
movsl
iret
sbb
popa
mov
cwtl
mov
aam
shl
adc
xorl
lcall
gs
shll
mov
imul
inc
and
enter
sar
gs
addr16
roll
inc
ret
dec
or
add
xlat
imul
scas
sub
dec
sub
push
aas
mov
cmc
aaa
xlat
ja
jp
outsb
cmp
jecxz
or
sub
mov
cmp
das
cs
imul
pushf
outsl
fsubl
or
bnd
jle
into
lret
shll
in
popa
sti
dec
and
mov
xchg
push
mov
xor
addr16
xlat
clc
add
mov
scas
adc
jg
jmp
in
ljmp
lock
jmp
fimull
mov
dec
fsts
fistpll
mov
push
je
pushf
arpl
mov
mov
scas
dec
addr16
js
enter
pushf
push
xchg
imul
jl
mov
xchg
jl
in
lret
push
ljmp
pop
mov
sbb
xor
insb
lea
mov
ret
fsubl
orl
xor
pop
mov
cmpsb
lods
xlat
inc
popa
mov
outsl
jl
jecxz
in
mov
sbb
cmp
adc
pop
lock
xchg
adc
jl
enter
jbe
cld
cmp
rcl
adc
pop
divl
inc
mov
pop
xchg
jne
sbb
out
push
mov
push
mov
pop
lock
mov
inc
push
sub
xchg
test
in
notb
rclb
psubusb
test
incl
push
shll
sub
mov
mov
pop
repnz
iret
mov
mov
sub
push
out
pop
push
mov
sbb
jle
testl
lea
sub
push
ds
fnstenv
out
push
xchg
mov
outsb
sar
sbb
out
das
out
push
imul
adc
pop
push
js
rcrb
addr16
sbb
mov
sbb
imul
mov
lods
cmc
mov
mov
xchg
jb
notb
clc
test
sub
mov
mov
mov
test
lods
dec
push
pop
xchg
dec
mov
bound
rol
sbb
cmpsb
jns
or
sbbb
rolb
dec
pop
and
jae
jnp
mov
xchg
mov
mov
movzwl
push
mov
inc
dec
sub
mov
aas
stos
lcall
shll
xchg
das
aaa
mov
loope
add
mov
in
adcl
lret
test
lret
je
mov
push
pushf
dec
xchg
xchg
stos
pushf
ljmp
lock
popf
inc
xorb
mov
fwait
sarb
daa
mov
punpckhbw
sti
mov
xlat
push
pop
rcll
jg
insb
int
jle
adc
pop
xchg
mov
lret
pop
xchg
mov
dec
adc
mov
js
shrl
sub
lahf
test
cmc
sahf
xor
add
loope
hlt
lahf
pop
arpl
mov
lds
movsl
divb
xchg
int
call
jne
push
fidivs
int
jle
or
ja
mov
lods
mull
andb
pop
jge
aaa
xlat
out
icebp
aad
pop
aas
pop
sub
pop
inc
outsb
mov
rcll
mov
jge
sarb
adc
and
push
xchg
sub
xor
push
ljmp
shl
sub
out
in
sub
idivl
ss
loop
mov
cmp
mov
dec
mov
xchg
mov
loope
pop
jl
cmp
mov
and
int3
dec
xchg
fldcw
sti
fldl
adc
cwtl
out
jle
jg
jge
jns
cmpsb
daa
mov
xchg
mov
inc
loopne
stos
add
cmp
test
out
insl
jle
lea
rcl
cs
enter
mov
pop
mov
fmuls
test
mul
push
xchg
or
out
in
cmp
jle
adc
test
cwtl
pop
inc
sti
dec
dec
sub
notb
in
xor
sarb
push
xor
cli
pop
dec
or
mov
js
addr16
mov
mov
decl
out
cmp
std
mov
cmp
or
mov
fildll
bound
stos
dec
mov
cmp
mov
jp
and
push
out
mov
inc
jmp
jmp
or
lcall
pop
in
ffree
test
xor
inc
shrb
outsb
inc
and
lds
xor
mov
push
mov
pop
mov
cmp
fidivrs
cwtl
mov
test
ds
xchg
pop
sti
cmp
push
sub
inc
dec
push
stos
rcrb
push
in
popa
xorl
mov
mov
rorl
push
ss
cmpsl
cmp
cwtl
xor
cmp
lock
mov
test
xor
or
sets
jno
cltd
cmpsb
fimuls
push
xlat
rorb
addr16
cmc
xchg
xor
js
aad
and
add
mov
movsb
sbb
ds
out
mov
mov
mov
movsb
add
dec
sbb
shlb
or
popa
or
lods
xor
lret
out
push
cmpsb
push
into
movsl
lea
mov
xor
movsl
add
or
jo
mov
fldcw
cs
popa
xchg
xchg
push
or
pop
fistl
mov
xor
leave
ja
push
dec
xor
int3
xor
mov
mov
push
xor
sub
mov
dec
sub
or
inc
jo
js
cld
dec
mov
aam
mov
xchg
orl
cmp
aam
jb
xchg
xor
xor
pushf
subl
sbb
dec
sub
loope
xchg
fdivl
lahf
xchg
jecxz
insb
mov
dec
loopne
sahf
push
pop
pop
inc
aam
mov
cmpsl
hlt
imul
pusha
push
push
mov
mov
incl
hlt
shll
test
mov
in
cwtl
or
aad
lret
or
sub
and
mov
lahf
loopne
sub
push
das
pop
ja
xchg
mov
dec
or
lods
movsb
xor
gs
jge
push
cmp
mov
sahf
lods
outsb
notl
ja
cmp
jo
mov
pop
jns
fwait
imul
mov
shll
iret
dec
add
jp
in
sahf
xchg
in
sbb
test
pop
fcoml
repz
cmpsb
push
push
fists
ret
jg
cmpsb
and
xor
push
sub
xchg
es
les
pop
mov
adc
or
fmulp
sbb
bound
repz
test
push
pop
aam
loop
jbe
es
addl
cmp
call
je
lret
loopne
js
aad
lock
or
push
mull
test
and
sub
clts
arpl
push
mov
cmp
dec
loopne
rep
clc
movsb
imulb
sbb
enter
jns
xchg
mov
aam
xorl
lods
sbb
xor
mov
push
lds
mov
cmp
test
sbb
lods
inc
push
pop
mov
jecxz
mov
mov
xor
xor
mov
mov
mov
jp
stc
lcall
sub
mov
and
sbbb
aam
sub
stos
inc
and
jno
movsb
scas
mov
icebp
xor
je
fiadds
fnstsw
cmp
xchg
mov
stc
int3
imul
cltd
cmpsl
and
pop
jo
mov
cmp
aaa
ficoml
aas
enter
int
and
cmp
pop
jl
je
jnp
add
pop
mov
fnsave
roll
sar
fcomi
cmpsl
push
fsts
adc
sahf
xchg
add
cltd
ja
push
dec
adc
pop
ja
push
loop
fwait
xchg
imul
shl
dec
outsl
nop
xor
popa
stos
jle
in
pop
sti
popf
stos
add
imul
repz
mov
or
leave
fstl
outsb
adc
cmp
jmp
mov
inc
mov
mov
addr16
movsl
lock
dec
movsb
cwtl
sub
insl
sub
jns
jecxz
xor
inc
xchg
mov
scas
fmuls
adc
cli
jg
lcall
inc
sub
add
pop
xchg
rcll
into
aam
inc
and
inc
out
mov
aas
xor
xchg
jp
pushf
push
lret
pop
jns
or
xor
mov
in
mov
xchg
aas
lea
fdivl
fidivs
cmp
or
idiv
add
or
inc
push
icebp
inc
or
test
movsl
mov
icebp
cmp
jbe
mov
out
xlat
pusha
and
xor
lahf
push
mov
cmp
inc
jne
data16
stc
dec
lcall
jmp
ds
pop
daa
and
and
mov
inc
cltd
popf
mov
ficompl
add
cwtl
add
notl
repz
ret
lds
dec
je
lods
push
mov
mov
push
cmp
xchg
jnp
pop
sahf
cli
rclb
inc
sub
mov
aam
jmp
pop
rol
popa
inc
lea
sbb
aaa
push
xchg
xchg
cmp
adc
clc
jg
mov
fistps
dec
arpl
movsl
cld
adc
xchg
in
in
lds
out
sub
dec
xchg
xlat
push
and
ds
js
cmpsl
aas
loop
jmp
mov
ja
rcll
xor
xchg
lahf
mov
sub
or
add
or
adc
push
jnp
popa
aad
cmp
rolb
cmp
repz
data16
adc
inc
mov
mov
pop
jmp
out
cld
inc
jae
pop
mov
add
adc
adc
add
cmp
aad
jae
xor
fsubr
xlat
jle
out
fstpt
push
scas
sub
mov
test
pushf
push
sub
in
push
outsb
cmpsl
inc
mov
push
cli
fldt
pop
add
inc
mov
arpl
xchg
xlat
lsl
hlt
aaa
adc
ret
push
js
mov
or
mov
sbb
xchg
inc
pop
cld
pop
in
dec
repnz
mov
mov
jns
mov
pusha
ljmp
adc
inc
mov
fwait
iret
lea
les
xchg
and
das
sub
sti
lods
rclb
mull
rcrb
out
out
daa
and
insb
call
lods
nop
dec
ret
cmp
les
xchg
cli
lds
das
roll
js
push
sbb
pop
sbb
subl
cmpsl
dec
jg
xchg
push
imul
jmp
sub
sahf
inc
stc
les
add
lret
pusha
push
fiadds
mov
mov
sbb
sbb
inc
movsb
mov
stos
lret
inc
add
mull
shrl
mov
inc
neg
mov
jae
lcall
push
or
out
loope
cmc
fcmovnbe
adc
sbb
mov
imul
add
jbe
enter
xchg
push
pop
xchg
ss
les
test
sub
inc
cmp
adc
fbld
xchg
dec
cs
mov
cmp
mov
sub
stos
out
repz
mov
push
aad
outsl
nop
or
push
jns
jno
pop
aad
push
scas
sti
pop
sti
rolb
and
sti
sub
ss
insl
lret
cmp
inc
dec
fwait
sbb
fiadds
adc
outsl
and
push
ds
jg
daa
sub
outsl
push
gs
xor
add
and
insb
sub
sub
add
push
call
std
sbb
fmulp
decl
xlat
xchg
and
fimull
sti
pop
pop
into
pop
mov
ja
adc
xchg
mov
mov
mov
fwait
xchg
cmc
mov
dec
mov
lret
subps
lea
mov
orb
fadd
pop
and
jbe
mov
jo
xor
sub
and
adc
jge
push
sbb
push
mov
jbe
sub
or
adc
out
jnp
jge
xchg
dec
jmp
jmp
sbb
pop
xor
scas
aas
test
lcall
xchg
shld
or
ror
int
cmp
gs
and
fcmovbe
cltd
jle
addr16
cmp
sub
xchg
push
mov
leave
pop
scas
xchg
fstp
test
sbb
ffreep
ljmp
dec
pop
mov
sub
adc
xorl
and
jle
push
loop
sbb
ss
add
enter
data16
and
inc
popf
fcoms
out
movsb
pcmpeqb
or
ljmp
nop
xor
aam
dec
cmpb
mov
fs
int3
mov
cwtl
mov
lds
inc
xchg
lock
adc
test
push
out
push
xor
into
dec
call
out
dec
xor
mov
jmp
cmp
ja
jo
stos
pop
dec
inc
jecxz
mov
xchg
aas
inc
cmpl
sbb
pop
pop
mov
and
fstpt
jnp
jmp
push
test
out
cltd
ficomps
fcomi
rclb
push
ja
inc
xchg
dec
fstpl
adc
aam
outsb
dec
sbb
shl
fistl
jmp
pusha
sub
add
jns
cmp
inc
adc
xor
mov
ret
ljmp
xchg
adcl
inc
or
sahf
inc
ficoml
in
movsb
pop
fsubrp
add
and
fbstp
push
movsb
fs
sub
imul
jge
sbb
adc
cwtl
mov
aam
add
rcl
cmc
push
mov
popf
aas
adc
xchg
add
ret
sbb
les
pop
int3
push
and
mov
gs
shrb
dec
xchg
popf
add
in
cmp
xor
nop
pop
xchg
loop
ds
iret
rorl
and
or
out
mov
cs
lods
sbb
push
push
rcl
jns
xor
orl
push
cmpsl
pop
repz
in
pop
mov
ljmp
shll
movswl
jmp
jbe
ds
sbb
inc
imul
inc
stc
or
mov
jg
aas
jl
add
aas
fbld
sub
xor
xor
cmp
out
scas
call
cmpsb
pop
enter
rep
dec
xor
dec
mov
int3
dec
mov
cmp
mov
test
sub
adc
xchg
stc
sub
mov
loop
or
lods
in
mov
jecxz
gs
inc
stos
fsubs
testb
stos
stos
jbe
xchg
jns
and
jmp
adc
dec
divl
out
mov
stc
mov
xchg
xor
and
cmp
adc
rorb
mov
mov
push
movl
mov
dec
imul
es
mov
cmpsb
xor
lods
shlb
pop
ljmp
sub
jns
popa
scas
pop
icebp
xchg
xchg
rorb
inc
dec
arpl
lods
or
pop
out
aad
dec
jmp
in
dec
sbb
pop
dec
mov
pop
mov
movaps
cld
pushf
cmp
cwtl
leave
or
dec
fwait
xchg
xchg
sbb
icebp
ret
sbb
test
pop
lahf
movsb
pop
je
mov
pop
mov
sbb
and
pusha
cmp
xorb
cli
insl
jmp
mov
aas
fisubl
ret
and
pop
lds
xor
pop
lds
das
push
vphaddbd
push
shl
int
xchg
outsb
imul
adc
sarb
rcrb
outsl
push
in
jne
jne
scas
push
lahf
inc
loopne
mov
push
pusha
dec
mov
in
mov
loope
sub
push
sbbb
dec
push
negb
jg
mov
dec
dec
stc
push
rcr
jnp
pop
into
push
popa
std
push
xor
mov
rcrl
aas
stos
scas
mov
mov
js
test
cmp
add
mov
jnp
pop
add
add
fcoms
sub
add
loopne
fistpl
std
shlb
pusha
dec
push
out
outsb
clc
daa
adc
sbb
pusha
jbe
fimull
pop
xchg
cmpsb
pop
mov
push
pop
shll
or
xor
lret
jmp
hlt
iret
xor
xor
fadds
lcall
int3
fcoml
cmp
cmp
add
mov
cmc
out
lods
cmc
lock
sbb
mov
pusha
fistps
in
jmp
stos
es
pop
jnp
out
mov
aam
mov
ret
lock
inc
inc
inc
mov
mov
in
out
xchg
inc
inc
aaa
push
or
gs
inc
fnstsw
je
pop
adc
sub
movsl
sbbb
fwait
cmpsl
push
fwait
mov
add
mov
and
insb
fbstp
mov
push
sbb
vhaddps
insl
pop
in
mov
mov
test
loop
inc
std
mov
or
inc
aam
js
push
jns
and
shrl
and
sbbb
in
sbb
stc
and
int3
mov
jne
xor
mov
push
add
pop
sbb
clc
int
mov
cmpb
and
xchg
out
inc
cmpsl
outsl
dec
mov
inc
loope
out
sbb
cld
mov
pop
loope
rorl
cmp
inc
shlb
xchg
loopne
daa
xchg
jbe
xlat
cltd
mov
loope
int3
mov
insb
and
clc
stos
punpcklbw
fcompl
ret
addr16
enter
fnstsw
jb
mov
push
jne
mov
jno
mov
lds
mov
popf
pop
inc
cwtl
push
pop
outsb
outsb
mov
xor
jle
outsb
cmp
cmp
jle
jg
mov
lods
call
push
jbe
int
mov
ret
jne
dec
ficoml
in
in
xchg
fcom
jmp
jae
out
hlt
cmpsb
jp
imul
into
shll
pop
dec
cmp
or
sbb
bnd
lods
push
loop
test
xchg
or
or
mov
adc
inc
cmp
das
inc
dec
das
pop
repz
pusha
mov
loop
pop
fists
xor
or
push
lret
cltd
cmp
jg,pn
sbb
icebp
dec
mov
in
and
sbb
ffreep
mov
mov
jecxz
pop
ljmp
in
mov
movsb
jg
out
icebp
gs
faddl
xchg
imul
lock
jmp
xchg
fwait
adc
in
adc
adc
ljmp
push
jo
adc
sbb
mov
mov
test
movsl
lcall
jg
mov
mov
mov
imul
or
scas
iret
jne
cli
outsb
or
aas
cmp
inc
dec
pop
shll
insb
ret
aaa
out
cmp
mov
mov
mov
dec
fadds
fwait
movsb
jae
mov
ret
insl
adc
popf
lret
push
mov
sbb
dec
push
mov
filds
popa
jge
mov
sub
sub
rclb
in
mov
sahf
fldlg2
pushf
mov
lahf
fisubl
aad
jns
fisubrs
ret
and
int3
or
rcll
lods
ficoms
test
dec
inc
pushf
push
mov
shl
push
in
sub
addr16
notb
cli
pop
in
sub
mov
iret
jb
xor
aad
push
mov
lret
sbb
mov
pop
jge
jnp
xchg
or
adc
lret
add
xorb
mov
or
jo
fnstsw
jp
and
loope
dec
mov
sahf
cmpsl
sub
adc
jb
pusha
mov
xchg
sahf
adc
mov
inc
push
enter
mov
mov
mov
xor
in
jnp
push
fstpt
int
inc
mov
mov
and
jmp
in
mov
sub
sbb
push
int
cmp
in
ss
jmp
cmp
jp
jle
mov
jge
pop
xchg
leave
push
jno
cmp
sub
out
cmp
pop
mov
test
mov
mov
movsb
pop
jb
hlt
out
sbb
dec
mov
mov
xchg
fnstenv
jge
mov
mov
jle
sbb
xlat
push
ljmp
pop
inc
or
and
xor
fsts
jl
addb
xchg
sub
push
dec
pusha
loopne
xchg
cmpsl
das
push
pusha
ja
sbb
cltd
scas
adc
xchg
mov
jge
inc
xchg
xchg
aaa
loopne
scas
mov
xchg
sbbb
pop
test
xchg
mov
sbb
jns
jle
cs
and
and
xor
ja
push
bswap
frstor
rclb
lret
mov
daa
add
repnz
add
pop
out
fnstenv
out
jl
push
mov
sbb
sub
popf
add
das
push
mov
fdivl
xchg
ja
js
sbb
mov
out
dec
out
push
and
ljmp
jo
xchg
add
lea
mov
je
sbb
xchg
cmp
adc
inc
out
lea
loop
fwait
xor
lock
lret
stos
js
outsb
cmc
cmp
loopne
pop
out
cwtl
adc
push
lret
es
aaa
sub
mov
ja
xchg
pop
jmp
mov
pop
dec
mov
mov
lcall
cmpsb
call
pop
ss
pop
xlat
ja
and
xchg
insb
or
sbb
push
popf
lods
cwtl
sbb
popf
je
dec
push
test
clc
lret
leave
out
xchg
inc
or
inc
andb
mov
mov
pop
or
jbe
jae
push
leave
loop
mov
or
xor
enter
xchg
cli
push
xor
mov
pushf
mov
in
jnp
std
scas
jo
in
dec
mov
push
pop
adc
shll
test
in
dec
in
mov
sub
leave
pop
pop
into
fdivrl
shrb
mov
in
mov
or
add
and
fmuls
mov
mulb
testb
dec
push
mov
add
aas
mov
fadd
sti
std
out
lcall
sbb
cmp
shll
popf
mov
cwtl
sub
nop
stc
les
mov
daa
inc
xor
movsb
movsl
aam
mov
pop
iret
push
lahf
clc
or
iret
push
aad
icebp
cmp
mov
add
adc
sbb
sub
les
fwait
jns
push
enter
out
insl
xchg
cs
mov
test
nop
push
push
add
cmovg
and
inc
movsl
fisttps
push
hlt
andb
aad
adc
movsl
lods
call
dec
or
cmpl
push
mov
dec
or
daa
dec
enter
cmc
pop
gs
cmp
lds
test
or
clc
repnz
add
xchg
cwtl
sub
pop
sub
lods
add
xchg
in
inc
fidivl
xchg
dec
and
imul
lahf
mul
test
aad
pop
fs
sti
in
std
dec
lea
shlb
adc
and
dec
call
addr16
jne
cmp
fidivs
dec
jle
call
sub
fwait
lcall
xor
test
sar
and
and
mov
jge
add
hlt
mov
das
mov
outsb
jns
fisubs
scas
mov
loopnew
sahf
out
xchg
inc
inc
mov
lcall
push
out
fsts
scas
int
lea
cmovl
cmove
and
dec
or
ja
push
mov
pop
les
sub
and
cmp
iret
pushf
cmpsl
mov
enter
pop
xor
out
rcr
or
jnp
jae
je
pop
jae
xchg
aam
cmc
shlb
and
dec
incb
pop
add
pop
lahf
clc
xchg
push
imul
xchg
outsl
xorl
ljmp
scas
sub
adc
test
push
loopnew
xchg
or
push
or
lods
and
sti
idivl
popa
movsb
and
inc
xor
push
adc
fdivs
and
aam
mov
enter
sti
add
in
jecxz
cmpsl
movsb
ss
adc
mov
repz
out
les
cmpsl
pop
adc
cld
cmp
jb
subb
xor
adc
les
in
popf
or
jne
mov
jne
cmpsl
sub
xchg
cmp
add
mov
adc
and
mov
cmpsl
dec
xchg
out
push
call
movsl
mov
push
divb
push
lahf
pushf
out
das
cli
inc
scas
cs
cmp
push
push
add
xor
xor
lds
mov
mulb
xor
repnz
jp
jae
shrb
xor
roll
inc
jge
int
cmc
pop
add
shlb
stos
hlt
sbb
out
fcmovb
je
jge
shrl
xor
add
jno
fcoml
push
jbe
and
aaa
pop
inc
sub
dec
dec
test
dec
sub
lcall
aaa
push
test
outsl
add
xchg
stos
cmp
imulb
xchg
xchg
adc
and
inc
pop
je
in
out
dec
pop
das
xchg
pop
push
sub
fdivl
add
clc
dec
push
add
dec
mov
ret
insb
jge
cwtl
inc
addr16
inc
xor
jns
into
lcall
aam
add
outsb
inc
shrb
push
stos
ja
xchg
into
arpl
xchg
lret
xchg
xchg
sbb
pop
and
dec
les
mov
repz
push
jo
xchg
mov
or
cmp
add
mov
dec
aaa
lods
add
mull
jo
mov
mov
fldcw
pop
gs
dec
jmp
add
mov
or
nop
mov
lret
push
mov
lcall
cli
ds
imul
cld
lea
sbb
pop
dec
hlt
sbb
dec
jns
xchg
adc
inc
sbb
mov
pop
sbbl
pop
cmp
sahf
stc
repnz
adc
cld
enter
addr16
popf
jns
xchg
push
lods
dec
roll
leave
shll
push
mov
inc
fiaddl
inc
fstl
cmp
in
inc
into
xchg
inc
in
xchg
ret
sbb
jns
mov
sub
jle
stc
push
inc
out
loop
shl
ds
fmull
jae
xor
jnp
stc
sbb
mov
nop
ret
sti
push
dec
mov
sbb
sbbl
add
cld
test
sbb
pop
js
divb
inc
loopne
imul
pop
cmp
dec
mov
repz
pushf
xchg
pop
push
addb
mov
dec
jp
es
pop
inc
imul
in
es
loopne
repnz
push
popa
and
mov
aam
pop
push
lds
xchg
push
mov
mov
lock
mov
adc
roll
push
push
mov
mov
add
pushf
loopne
mov
pop
cmc
icebp
out
push
in
scas
cs
jge
dec
mov
fs
pop
lock
cmpsb
fidivs
popa
sbb
cvtps2pi
orl
out
dec
xchg
fwait
mov
lods
sti
loope
ljmp
rorb
xchg
in
andl
pop
lds
xlat
repz
fisttps
shl
pushf
dec
inc
adc
xchg
xchg
xchg
rcll
ret
ljmp
xchg
mov
aas
mov
inc
xor
pop
or
cmp
sbb
shlb
outsl
lret
pop
je
jp
movsb
push
je
call
mov
insb
pusha
scas
mov
pop
add
dec
cmp
cmp
fwait
add
adc
movl
push
xchg
xor
pop
inc
jnp
mov
xchg
and
dec
cmp
push
lret
push
or
add
aas
mov
xchg
icebp
pop
mov
sub
mov
xacquire
ret
into
repnz
dec
sbbb
iret
sub
ret
push
cmp
add
lods
push
mov
cltd
out
pop
ret
lahf
xor
daa
mov
sbb
or
imul
scas
mov
mov
rorl
cli
xlat
dec
sbb
ret
enter
lods
imul
sub
push
scas
setbe
mov
xorb
imul
subl
in
fsubrl
lret
or
xlat
sub
xor
mov
imulb
mov
inc
inc
mov
mov
sub
mov
ret
sbb
xor
inc
sti
hlt
pop
push
cmpsb
or
mov
notb
arpl
jg
inc
adc
push
push
test
add
cmp
push
push
lds
sub
pusha
mov
cld
scas
aad
add
orb
in
and
xor
psubw
push
insb
int3
sbb
cld
cmp
sub
adc
lret
shl
push
xchg
push
dec
mov
mov
subl
out
sahf
lods
adc
subl
cmp
test
jb
out
lret
aas
testl
mov
test
lock
stos
test
pop
out
stos
mov
sub
cmpsl
das
aaa
inc
pop
mov
pop
adc
repz
imul
mov
popf
test
mov
call
les
outsl
loopne
add
pop
adc
stc
cltd
in
xor
xor
jno
xchg
mov
mov
daa
jnp
sti
mov
rcrl
loope
iret
es
mov
jge
cs
add
mov
sub
dec
jge
mov
adc
icebp
in
popf
stos
cmp
or
xchg
shll
enter
push
sub
fdivrs
and
push
fstpl
clc
adc
xchg
fiaddl
outsb
insl
or
dec
pushf
hlt
icebp
push
mov
jno
or
lods
daa
jo
sti
and
movsb
int3
fdivr
inc
jno
push
lret
cmpsb
stos
cmp
pop
pop
imul
sbb
sub
push
out
xor
addr16
adc
fcoms
bound
lcall
in
aam
test
in
cltd
dec
xor
call
sbb
adc
addr16
jge
pop
mov
mul
mov
cmp
dec
xor
inc
jmp
mov
mov
aad
sbb
mov
std
aad
mov
and
incl
testb
fstl
or
test
jecxz
mov
lods
pusha
pop
mov
sub
shlb
iret
outsb
xchg
push
adc
pop
cmpsl
stos
ror
jg
mov
cwtl
rcrb
mov
cli
mov
daa
sub
xlat
mov
push
mov
or
jns
xchg
cmc
pop
xor
flds
sbb
lock
out
ret
dec
loope
sub
out
mov
xchg
repnz
in
xor
sub
movaps
outsl
pop
into
loop
pop
adc
scas
jmp
mov
mov
lods
js
lods
data16
mov
xor
ljmp
cmp
jb
push
mov
cmp
fbld
adc
sbb
pop
int
dec
aas
adc
loopne
imul
test
scas
pushf
and
scas
insl
cli
push
pop
xor
testb
push
mov
notb
xor
aas
loopne
or
sbb
ret
sub
cmp
mov
das
or
push
mov
jb
adc
lcall
mov
sbb
add
fs
push
xor
rcr
xlat
sbbb
pop
mov
out
jecxz
lcall
lds
mov
pop
jae
int
cmp
icebp
push
pop
mov
mov
shll
jl
mov
mov
fimull
aam
mov
sbb
and
in
mov
xchg
lds
or
lret
or
inc
or
mov
ja
push
sub
cli
test
mov
add
call
nop
mov
ret
pushf
in
mov
cwtl
stos
mov
mov
cltd
push
sub
sbb
pmuludq
ret
scas
pop
lcall
dec
adc
adc
push
jp
xor
dec
mov
loopne
loopne
out
leave
and
jmp
add
jmp
inc
daa
std
push
sub
mov
ror
jg
inc
cmp
dec
and
adc
in
xchg
stc
dec
cwtl
and
rol
cmp
test
fisubs
dec
dec
mov
xor
mov
push
int3
andb
push
xchg
mov
arpl
pop
popf
mov
out
jbe
shlb
shlb
mov
mov
test
pushf
jns
mov
mov
mov
call
into
inc
shl
scas
sbb
sbb
shl
mov
and
xlat
or
test
pop
inc
ja
mov
mov
fisubrl
shrl
nop
lds
mov
aas
arpl
adc
inc
push
es
dec
push
and
xchg
notb
out
and
insb
mov
push
sub
frstor
mov
dec
cmp
mov
xor
jo
sahf
call
sub
das
sbb
test
adc
call
aaa
jecxz
lret
leave
loope
mov
lret
scas
add
gs
inc
jae
inc
mov
lods
insb
notl
imul
lock
cmp
mov
add
cmp
sbb
imul
test
xchg
mov
push
jmp
pop
add
sub
adc
inc
inc
movsl
inc
sub
leave
mov
imul
cmp
imul
gs
cmp
xor
hlt
in
jecxz
lahf
mov
in
sub
xchg
rorl
push
out
scas
lcall
cmp
lret
cmp
lahf
sub
or
adc
sub
push
xlat
xlat
outsb
mov
enter
mull
and
test
dec
sub
in
cwtl
sbb
dec
jecxz
repz
cmpsb
out
mov
rorb
fs
and
push
loopne
mov
lods
out
xchg
fwait
sti
dec
enter
xchg
sub
stos
or
fldl
push
icebp
test
movsb
add
xor
clc
mov
daa
pop
push
ss
aas
scas
repnz
test
pop
add
js
jge
out
mov
push
and
push
out
jl
test
pop
jp
push
rcrb
mov
cmp
push
nop
icebp
out
cwtl
jl
lds
pop
mov
or
inc
mov
testl
push
data16
in
jbe
test
lds
xchg
lods
mov
pop
mov
cli
push
cmp
mov
lret
jbe
in
sub
xchg
mov
adc
or
mov
fcomps
mov
or
ja
lods
inc
es
scas
iret
lcall
pop
mov
imul
shl
cwtl
add
pop
loop
inc
sub
test
popa
cmp
mov
mov
fstl
lods
int3
add
imul
fdivrp
lds
push
div
adc
sbb
and
or
mov
testb
movsb
xchg
sbb
rolb
cli
rclb
jne
sub
mov
ret
repz
mov
mov
std
push
or
sbb
sub
or
mov
sbb
nop
pop
iret
push
xchg
mov
push
inc
push
dec
bound
adc
sub
pop
mov
lds
aam
or
rorb
add
aad
sbb
mov
lods
daa
insb
add
mov
das
int
imul
pop
fwait
cmp
movups
sahf
xchg
out
imull
dec
pop
bound
or
es
cli
mov
pop
fwait
mov
int3
mov
xor
mov
insl
movsbl
push
out
das
inc
xchg
add
mov
mov
push
dec
shrb
adc
xchg
mov
mov
mov
mov
pop
mov
jne
in
jecxz
mov
mov
pop
add
jns
xor
mull
jle
adc
inc
mov
push
push
or
enter
das
push
call
rcr
dec
push
mov
pushf
gs
cmp
popl
inc
push
scas
push
cltd
imul
mov
add
inc
mov
lcall
cltd
enter
cld
sub
repz
cmpsb
cmp
mov
shlb
and
movsl
mov
dec
sub
or
in
movsl
jmp
mov
lcall
out
adc
divb
jae
hlt
fisubl
or
dec
xorl
shl
stc
inc
repnz
cld
fcoms
lret
fdivrs
push
aaa
sub
pop
xor
sub
sbb
ss
je
sub
repnz
cmpsl
add
jnp
ret
in
out
idivl
aas
popa
cwtl
inc
hlt
adc
movsb
xchg
xchg
aas
pop
cmpsb
dec
cmpsb
mov
add
test
imul
ss
add
inc
and
mov
jnp
loop
movsb
or
mov
mov
cmp
fcmovu
gs
xor
adc
das
inc
mov
pop
sbb
dec
pause
xorl
mov
cwtl
mov
cs
pop
or
fs
out
add
cmp
loop
pop
outsb
mov
fcmovbe
inc
pushf
xlat
lock
scas
pop
pop
sub
pop
cmp
xor
push
and
cmpb
pop
cmp
jmp
scas
xchg
push
jbe
leave
mov
add
repz
xor
adc
aas
imul
jmp
inc
aas
ljmp
shl
fistps
add
dec
xlat
jae
xchg
dec
jecxz
add
addr16
ret
sub
cmpsb
roll
mov
xor
sbb
jae
push
or
xchg
call
loope
icebp
dec
shlb
inc
cld
jg
jl
push
push
sub
mov
adc
push
pop
inc
and
fwait
mov
je
into
sbb
mov
sub
std
outsl
repz
arpl
mov
insl
iret
outsb
jnp
stc
jb
divb
adc
incb
pop
mov
xor
jp
pop
cmp
push
or
mov
pusha
add
movsl
fnstenv
inc
dec
inc
xchg
shrl
leave
dec
outsb
or
pushf
dec
popa
cmpl
in
jne
lret
push
xchg
mov
inc
call
or
movsl
cmp
sub
dec
std
mov
fiadds
lods
mov
sub
dec
dec
jl
push
pop
mov
cs
decb
pop
mov
jnp
xor
loopne
jl
test
aad
adc
pop
cmp
pop
push
jnp
lret
cmp
xchg
mov
or
and
mov
mov
dec
roll
adc
fcmovnb
sbb
rorb
je
int
ret
cmp
sub
and
push
inc
les
xchg
pop
or
cs
xlat
jecxz
jge
xchg
stos
popa
jae
xchg
add
stc
test
call
test
mov
fimull
sbb
jl
pop
add
cmp
mov
add
cmp
stos
inc
adc
inc
jmp
add
movsl
mov
mov
dec
test
add
pop
mov
jno
lret
pushf
loopne
sub
pop
push
inc
add
sbb
or
pop
je
mov
push
or
mov
iret
icebp
test
int
jns
pushf
jl
cmc
pop
xor
cmp
sbbl
mov
aad
xor
push
sbb
push
or
rcr
aad
aad
sbbl
into
and
mov
ljmp
pop
cmc
inc
sub
inc
popa
push
mov
je
mov
fnstcw
sahf
sbb
mov
test
movsl
pop
cs
sub
outsl
jle
push
xchg
out
adc
sbb
xor
fs
push
ja
mov
xorb
movsl
popf
jnp
cwtd
inc
cmpsl
outsb
cs
aad
outsb
mov
sub
push
scas
mov
repz
ljmp
xlat
arpl
scas
fwait
mov
in
mov
xchg
mov
cmp
stc
jge
dec
or
repnz
jne
fimuls
xchg
adc
sahf
cmp
aam
and
mov
cmp
iret
add
sbbb
ja
mov
lds
push
and
push
sub
and
jb
loop
addr16
loopne
mov
dec
xor
or
pop
out
add
mov
insb
jo
insb
mov
lds
lock
jae
and
out
jno
ljmp
and
outsl
outsb
mov
shl
jno
mov
mov
fisubrl
push
jb
adc
out
mov
cmpb
sbb
mov
sub
sar
sbbl
sbb
mov
mov
inc
sbb
or
sub
or
outsb
outsl
fcoms
rcll
inc
gs
rcll
push
mov
popa
dec
sub
sbb
push
cmpsb
gs
cwtl
insl
jne
inc
cwtl
cmp
or
xchg
sub
mov
ljmp
aam
xchg
or
lret
rolb
xor
inc
adcl
jae
addl
fimuls
push
aas
sub
aaa
and
rolb
jle
xor
inc
mov
fsubs
push
mov
fisubrs
insl
push
pop
cli
xchg
insb
insl
mov
mov
push
hlt
mov
add
cltd
mov
adc
lock
jae
popf
imul
lods
ljmp
fldcw
mov
jno
lods
nop
in
inc
leave
sbb
and
test
push
insl
jl
lock
or
ljmp
inc
lock
ss
test
adc
in
mov
sti
leave
mov
in
mov
shrl
and
inc
sub
mov
pop
pop
mulb
pop
jmp
idivl
hlt
jmp
inc
xor
mov
test
jbe
xlat
clc
and
mov
xlat
cld
mov
add
adc
aam
add
cld
jo
xchg
cmp
inc
sbb
cmp
ljmp
push
xchg
outsl
sbb
sbb
addr16
leave
add
cmp
lock
sbb
or
mov
inc
inc
cmpsb
pushf
outsl
xor
iret
push
pop
out
jp
insl
mov
idivb
repnz
lret
jnp
into
cmpsl
push
call
adc
push
push
mov
jle
lods
repnz
or
fsub
sbb
and
jecxz
movsb
filds
jno
add
push
rcl
icebp
movsb
inc
test
movsl
or
sbb
fisttpl
dec
push
cmp
jecxz
lret
imul
add
je
xor
frstpm(287
fcomps
dec
shl
dec
mov
push
dec
sbb
add
add
sbb
pop
fiadds
jne
jnp
sbb
dec
mov
sub
mov
nop
lds
orl
mov
inc
gs
add
xchg
mov
imul
ja
imul
jb
and
ss
popa
xchg
push
adc
mov
gs
sahf
ror
aad
jo
data16
ss
sub
cmpsl
push
mov
jno
sbb
lods
pop
ds
imul
mov
pop
mov
pop
ficomps
stos
pop
cmc
push
cmp
icebp
sub
mov
popf
inc
cld
out
mov
mov
inc
ret
and
sahf
loopne
rolb
sbb
popa
pushf
xor
jle
inc
jle
jno
sbb
loop
dec
cld
xchg
dec
mov
outsb
xchg
mov
bound
clc
mov
in
rcrb
xchg
add
scas
hlt
mov
mov
push
fprem1
imul
insl
mov
test
pop
stos
and
and
imul
jmp
les
mov
fstpt
and
data16
stc
and
push
or
mov
inc
pop
movsb
sbb
dec
icebp
cld
lods
sahf
sub
mov
and
push
jecxz
repnz
mov
adc
popf
pushl
jl
int3
dec
jle
mov
frstor
outsb
pop
ljmp
dec
pusha
std
jnp
fsubrs
dec
mov
movl
insl
lock
fdivrs
jg
in
out
mov
js
je
jbe
sub
push
out
inc
inc
popf
fildll
mov
jmp
cmp
mov
and
repz
jb
or
and
xchg
lcall
jp
push
xchg
push
mov
aam
pushf
out
sahf
inc
cmpl
mull
fcoms
incl
dec
test
push
mov
cmp
bnd
jnp
add
cmpsl
ret
and
int3
xor
bound
rorb
or
xor
cmp
test
xor
and
in
and
es
lea
push
xor
jnp
cmp
les
mov
and
popf
mov
xchg
mov
lret
loop
and
dec
push
push
out
stos
hlt
icebp
and
add
cmp
cli
inc
aas
sbb
add
lret
xor
sub
xor
xor
or
aaa
aam
test
add
xchg
movsl
lret
ror
xchg
rolb
inc
inc
push
in
dec
inc
int3
out
gs
ja
je
add
dec
jecxz
cmc
add
and
cmpsb
mov
rorl
int
push
sub
inc
stos
loopne
icebp
imul
sahf
cwtl
dec
scas
lea
pop
fimuls
pop
pop
xchg
mov
and
xchg
xchg
push
sbb
inc
pop
icebp
cmpsl
jns
mov
inc
ja
xchg
lahf
gs
rorb
inc
mov
orb
xor
mov
xor
xor
dec
js
imul
xchg
mov
ds
fwait
mov
jbe
inc
cmp
ss
mov
ss
or
push
dec
popf
arpl
jns
stos
dec
and
in
adc
mov
mov
mov
push
adc
add
jp
sbb
pop
ss
jl
cmp
movsl
push
pop
cli
dec
mov
xor
movsb
mull
add
push
mov
cmpsl
sbb
push
gs
push
fmulp
sub
xor
xchg
and
push
fists
shrl
cld
xchg
inc
mov
lret
or
xchg
sar
cli
cmp
pop
sahf
mov
outsb
xchg
in
popf
roll
js
sbb
fimuls
dec
insl
mov
in
xor
xchg
mov
inc
xchg
mov
pop
popf
int
adc
or
mov
add
stos
jp
mov
shll
mov
mov
lahf
jnp
sbb
mov
mov
pusha
popf
or
and
call
lea
adc
xor
js
mov
sbb
mov
xor
test
arpl
popf
cltd
pop
in
clc
mov
cli
mov
xchg
cli
scas
cs
ja
sbb
push
adc
outsb
aad
jp
sbb
out
cmpsb
and
xchg
and
popa
or
pop
xchg
enter
out
adc
mov
jno
and
mov
test
pop
pop
mov
int3
fdivs
gs
dec
add
xor
loop
inc
outsl
and
sub
ret
and
scas
outsb
xchg
pop
gs
dec
mov
sbb
xor
das
imul
adc
cmp
inc
xchg
pop
mov
mov
mov
inc
mov
push
push
out
sub
xchg
in
jge
push
mov
ret
mov
out
push
cld
cltd
push
push
add
loop
cltd
or
das
out
ljmp
aam
out
jmp
xchg
inc
lret
push
mov
push
xchg
repz
std
push
and
or
decb
pop
pusha
test
das
push
xchg
xchg
leave
jb
push
push
inc
or
lods
lods
sarb
cwtl
cmp
fxch
mov
subb
mov
out
addr16
mov
or
sbb
popf
push
and
mov
hlt
push
imul
outsb
xor
lret
loop
push
jmp
add
leave
mov
and
test
scas
lock
add
xor
push
jns
push
jecxz
cmp
sbb
sub
mov
je
and
icebp
xchg
adcl
jae
lahf
jae
call
sub
dec
sbb
xchg
pop
mov
sbb
pop
popa
in
jl
push
and
fldenv
inc
dec
les
movsl
jae
movb
clc
xchg
mov
jns
xor
sbb
xchg
rcrb
daa
fdivl
arpl
ficompl
rclb
aas
push
insl
movsb
mov
fstpl
jne
jecxz
push
sbb
xchg
pop
adc
cmpsl
xchg
test
test
aad
cmp
jecxz
mov
mov
sub
cwtl
insb
data16
push
xchg
or
xor
lcall
jnp
push
loop
bound
es
lea
jnp
sbb
push
mov
lds
jno
jle
cmp
bound
jns
jle
popf
xchg
jo
mov
test
mov
leave
jecxz
mov
jno
shlb
adc
ret
add
adc
and
fs
push
inc
mov
movsb
in
dec
push
push
and
jl
ss
or
mov
movsl
int
xor
or
sbb
xlat
jae
add
fisubrs
mov
pushf
mov
push
outsl
in
lock
or
test
fs
scas
mov
inc
push
lret
out
aaa
mov
push
push
jl
ror
aaa
inc
or
mov
inc
imul
andl
jbe
mov
mov
sbbb
sbb
inc
jne
cmp
icebp
cs
int3
gs
push
pop
addl
sub
fistl
outsb
in
cmp
jge
xchg
push
mov
pusha
inc
mov
push
jne
mov
not
fldenv
loope
daa
push
cmp
out
xchg
movsl
adc
fs
sub
out
xor
rclb
mov
xor
adc
notl
jnp
xchg
cs
rcrl
or
mov
xchg
stos
jb
pop
xchg
xchg
in
out
pop
sub
test
fwait
cs
aam
mov
out
mov
daa
lock
sub
pop
mov
mov
adc
cmpsl
cli
lds
or
cmovae
dec
mov
addb
sti
subb
cmpsl
lods
subb
mov
push
fldenv
push
and
popf
xchg
push
jne
lret
stos
push
sub
out
and
add
jns
test
sbb
outsl
jns
push
cmpsb
cli
add
insl
sbb
cmp
sahf
add
adc
or
std
dec
jle
adcl
je
push
cmp
shlb
loop
sub
pop
sarb
shll
mov
mov
pop
mov
push
popa
or
pusha
mov
cwtl
inc
das
stos
sbb
fistpll
inc
js
data16
add
stc
push
push
nop
div
cmp
dec
lods
mov
in
cltd
cltd
dec
ss
mov
xchg
and
lods
lcall
shll
andl
mov
fcomps
popa
fidivl
and
mull
in
clc
test
out
or
jmp
mov
jp
rorl
mov
movsl
jbe
cmp
cli
sub
test
std
gs
aad
mov
xchg
stos
add
mov
mov
xchg
stos
imul
call
mov
dec
inc
out
push
cmp
push
movb
and
and
sbb
dec
push
adc
adc
mov
dec
mov
or
mov
lcall
idivb
lock
movsb
mov
imul
mov
mov
rolb
mov
lcall
jmp
das
sbb
sbb
lret
push
movsl
test
dec
jg
cmp
sub
push
stc
stc
push
scas
sbb
loopne
dec
pop
inc
mov
pop
fwait
or
push
frstor
mov
mov
mov
push
test
dec
pop
es
negb
mov
push
xor
mov
inc
jle
xor
mov
pop
insb
decb
cmp
in
outsl
cld
mov
inc
fistl
fwait
out
and
insb
lods
test
mov
jnp
daa
movsl
pop
dec
mov
mov
sahf
call
cmp
push
fistps
stos
adc
sub
pop
dec
lret
cwtl
cmc
cltd
mov
xchg
xchg
adc
lahf
dec
mov
dec
xor
inc
out
adc
loop
sbb
shll
push
adc
sub
into
mov
fsts
add
cltd
and
xor
js
mov
inc
xor
repz
leave
inc
sub
scas
arpl
xchg
ja
adc
cld
cmp
push
mov
inc
add
lcall
sahf
mov
cmp
cmp
in
cli
adc
mov
test
std
rorb
sbb
mov
js
addr16
repnz
dec
add
iret
test
pop
cmpsb
stc
dec
cld
popf
insb
jo
xchg
std
pop
dec
sub
sbb
imul
test
xchg
imul
fadds
int
mov
repnz
sub
jae
setno
shll
cmp
scas
sbb
adc
aas
inc
add
daa
jl
fnstenv
mov
push
test
push
ds
inc
xchg
add
mov
pop
sbb
cs
mov
addr16
int
test
or
cmp
and
in
mov
ja
sub
mov
pop
or
out
rcr
push
mov
cmpsl
cmpsb
xchg
or
cwtl
fsub
pop
int3
adc
test
mov
scas
js
cld
sarb
mov
pop
repnz
lea
in
roll
sbb
push
lcall
mov
xor
pop
ljmp
add
movl
xchg
mov
ljmp
insb
in
ss
xchg
lahf
and
shrl
pop
aaa
neg
jno
sahf
sub
ljmp
in
aaa
je
in
addr16
adc
pop
out
mov
cmp
enter
sub
or
ds
mov
fyl2xp1
sub
int3
push
lea
lret
mov
lock
sahf
dec
sar
shlb
or
stos
or
push
and
cld
leave
loopne
mov
insb
stos
sbb
sub
mov
adc
fdivs
ss
xor
xchg
sar
xor
mov
mov
inc
sbb
jo
test
mov
push
jb
lret
dec
sbb
ret
cmp
mov
cmp
mov
jb
mov
push
cs
pop
loop
and
shlb
pop
adc
hlt
movsl
lea
es
in
fs
xchg
sub
jb
call
xchg
push
mov
mov
sub
mov
or
cmp
roll
cmpsb
and
stos
jno
mov
out
dec
lods
cmp
cwtl
adc
push
pop
ss
ret
gs
xor
and
cmp
pusha
dec
xor
cld
push
cmp
pop
aaa
imul
xchg
imul
cmp
xor
lret
and
es
sbb
lss
mov
stos
sub
enter
pop
mov
sarl
das
scas
pop
in
push
xchg
dec
aad
xchg
xlat
pcmpeqb
mov
mov
or
adc
cmpsl
sub
pop
mov
clc
jb
push
jbe
mov
cs
lret
xorl
stc
xlat
lret
mov
pushf
xor
fcmovnu
jns
fs
sti
mov
and
fwait
cmp
into
cmp
push
mov
sub
jge
jno
mov
mov
popf
loop
repz
fnstsw
ds
std
aad
sti
mov
jb
cmpsb
lcall
dec
fldt
call
push
add
mov
jbe
add
push
mov
loope
xchg
sub
icebp
addl
in
sub
imul
cmp
cmpsb
mov
xchg
out
jno
inc
scas
mov
hlt
outsl
mov
push
dec
lahf
lahf
out
jmp
mov
sbb
fwait
adc
insb
addb
jge
addl
pop
pop
cmpsl
pop
mov
clc
mov
leave
jno
imull
adc
popa
add
jns
xchg
inc
mov
sub
jp
mov
xchg
sbb
lods
cli
ja
sahf
add
xlat
or
das
popf
mov
inc
push
xchg
adc
or
cmpsb
adc
sbb
ret
mov
sarb
push
jnp
xor
xor
xchg
jnp
inc
jo
shrl
mov
cwtl
sbb
shlb
rcrb
jmp
loopne
mov
add
fadd
jmp
cld
push
je
pavgb
cwtl
cmpsl
pushf
inc
aaa
orl
fdiv
cmp
in
cmp
push
add
dec
movsb
jb
imul
inc
dec
xorl
jo
sbb
add
inc
stos
mov
xor
jge
push
mov
in
sarl
rolw
push
sub
or
out
push
add
pop
xor
aad
cwtl
or
cmp
dec
adcb
mov
out
jl
mov
adc
fdivs
xchg
inc
and
in
adc
scas
rolb
push
mov
jae
sub
into
push
clc
dec
mov
cmp
inc
mov
fisubl
loope
mov
mov
stc
stc
ret
es
out
lahf
jmp
aas
inc
pop
and
or
cwtl
push
mov
ja
or
test
jns
stos
mov
push
mov
pop
aaa
lcall
jbe
lahf
leave
mov
or
add
mov
daa
cmpb
mov
repz
push
movsl
fcmovnbe
add
mov
scas
mov
pop
pop
lcall
pop
or
cmpsl
outsb
mov
in
adc
cwtl
or
xchg
cmc
jl
daa
enter
insb
mov
lret
pop
xor
dec
pop
pop
ficoms
mov
cld
jo
cmp
mov
cwtl
inc
jns
out
and
shlb
stos
mov
adc
ret
push
xor
call
sti
push
dec
sub
es
cwtl
mov
enter
fincstp
enter
cmp
push
or
cs
pop
data16
sarb
xor
test
pop
cmp
mov
push
add
cmp
rcr
jg
mov
ret
mul
leave
jb
or
push
movsb
mov
inc
lods
adc
pop
xor
xchg
mov
xchg
push
orl
hlt
in
mov
adc
lea
cmp
add
adc
icebp
and
movl
mov
shl
push
cltd
jl
aad
jbe
xchg
popa
inc
sbb
push
fbld
popl
cmp
xchg
sub
adc
outsb
cli
cmp
xchg
and
icebp
xchg
mov
fists
ljmp
or
fs
lret
icebp
cmp
jmp
ja
push
mov
push
lods
dec
ret
and
mov
or
and
xor
sub
icebp
les
cmp
xor
add
ljmp
adc
jp
cmpsl
mov
add
ljmp
inc
xor
jne
jg
js
out
add
push
push
push
cmp
pop
jnp
mov
dec
repz
jge
mov
sub
scas
aad
mov
pushf
add
jp
ret
sub
fs
inc
push
cltd
fimuls
mov
xchg
xchg
push
dec
dec
dec
push
adc
push
and
and
adc
stc
pop
push
in
mov
pusha
xor
cld
mov
out
gs
int3
sub
cmc
ror
xchg
dec
mov
adc
inc
mov
cltd
outsl
cmpsl
rolb
mov
pop
push
test
lock
out
dec
add
ja
jmp
rorb
pop
xchg
aad
ss
outsb
aaa
sbbl
jbe
fsubr
lret
repz
inc
andb
mov
aas
popf
and
sbb
loopne
xor
test
jmp
sub
cmp
scas
jl
mov
inc
add
arpl
in
jb
cmp
rol
cmp
pop
lea
fimuls
dec
mov
repnz
pop
or
dec
sbb
or
cltd
sub
vcvtsi2sdl
mov
ret
loopne
mov
or
push
jbe
pop
cmp
cmp
pop
jp
and
dec
adc
push
lods
push
pop
mov
xor
int3
int
mov
mov
int
sbb
cmc
lods
mov
add
add
iret
std
mov
mov
xor
fwait
mov
in
fdivl
in
std
dec
addb
push
fidivs
into
dec
mov
pushf
subl
mov
push
mov
or
push
sarb
adc
xchg
sbb
xor
divb
pop
sbb
imul
aas
pop
pop
add
fdivl
adc
cmpsb
pop
out
je
je
int
iret
mov
pop
loopne
pop
lds
sub
xchg
leave
adc
jns
sbb
mov
mov
xchg
mov
inc
ds
and
sub
int
sub
push
fs
mov
mov
add
mov
int3
push
in
or
fwait
test
mov
inc
sub
ds
jnp
mov
push
jbe
mov
pop
sub
cmc
pop
cmp
xchg
scas
filds
test
addr16
dec
mov
stos
xor
or
cmp
xchg
pop
or
imul
and
clc
dec
adc
inc
call
data16
ret
inc
flds
jg
push
mov
push
fiadds
mov
cmp
mov
xchg
push
xchg
xchg
cmp
in
ja
je
mov
jnp
cmp
sub
or
inc
push
and
mov
les
xchg
test
sub
xchg
push
fdivp
movsl
popf
stos
and
lock
frstor
int
int3
ja
mov
dec
dec
and
loopne
ficomps
or
in
popf
dec
cwtl
mov
mov
push
dec
scas
mov
cmpsl
loop
cmc
and
leave
aaa
and
pop
xchg
adc
add
fimuls
movsb
mov
push
arpl
repnz
ds
addl
aad
jge
hlt
mov
mov
and
je
leave
or
repnz
sbb
fisubrl
dec
popa
es
sbb
and
outsb
and
cmpsl
test
jmp
pop
es
lahf
shll
or
fs
mov
or
jp
pop
mov
inc
and
push
test
fwait
xchg
jp
mov
adc
xlat
mov
xor
ljmp
pop
jg
pop
cmpsb
jns
fisubrl
mov
out
mov
cmp
fs
jne
jp
adc
imul
call
in
push
fcmovnu
stos
clc
adc
out
lret
lahf
or
jecxz
aaa
push
popa
push
jo
fisubl
dec
ljmp
mov
mov
sbb
xchg
push
add
fadds
lock
sub
cmpsb
test
scas
stos
leave
mov
rolb
mov
xor
mov
add
add
lret
add
dec
lahf
sti
jmp
add
int
mov
adc
xchg
cwtl
daa
stos
mov
out
jmp
jl
mov
cmp
jnp
js
pushf
fsts
mov
lock
scas
std
addr16
outsb
sahf
pop
jmp
pop
nop
and
and
mov
aad
fisubl
cld
cld
dec
inc
or
ret
mov
jbe
and
ret
inc
jmp
fmuls
cmp
jb
adc
aad
push
cwtl
xor
pop
jp
xchg
jae
or
inc
or
lcall
fldt
mov
mov
sub
mov
arpl
jb
mov
ret
sbb
mov
bound
fnsave
mov
jp
or
jnp
pop
adc
mov
mov
dec
enter
mov
sbbb
hlt
cwtl
jnp
pushf
adc
stos
adc
cltd
adc
xchg
ljmp
nop
sub
adc
or
dec
pop
inc
lods
xchg
ret
pop
mov
stos
jmp
jns
or
mov
sub
jno
rorb
mov
cmp
in
rcr
sbb
push
stos
add
dec
cs
add
sbb
dec
jg
inc
and
lret
jo
das
jns
ret
ret
sbb
mov
xor
stc
cmp
push
stc
jg
neg
sarl
sbb
pushf
dec
add
stos
xor
mov
or
test
cmp
gs
mov
imul
sbb
xchg
lods
outsb
sub
enter
pop
mov
pop
pop
jmp
dec
lret
jg
jb
xchg
repnz
jbe
sbbl
adc
jge
hlt
mov
cmp
nop
lcall
ds
pop
add
imul
loope
fisttps
jo
mov
add
mov
js
andl
ja
adc
dec
in
ret
sbb
lcall
inc
stos
mov
jge
stos
jmp
or
nop
sub
test
push
jmp
xlat
in
fnstsw
je
mov
stos
fwait
xor
adc
cmp
fyl2x
dec
das
out
orl
xlat
lahf
dec
pushl
xor
loop
js
sub
enter
addr16
dec
cltd
fidivrs
pop
adc
outsb
pop
mov
pop
fdivp
in
fs
mov
ret
pop
adc
jae
and
addl
dec
inc
mov
hlt
mov
mov
push
xchg
mov
insb
xchg
xchg
inc
xor
and
xor
cs
cmp
in
in
mov
adc
mov
sbb
stos
mov
repz
push
mov
push
jmp
stc
pusha
mov
int
xchg
imul
js
mov
push
testb
jge
call
filds
sti
mov
lcall
insl
fcompl
rcll
std
rcl
lods
iret
xor
add
cld
js
xorb
jle
ljmp
xor
inc
push
adc
out
faddp
cmpsl
mov
push
add
mull
push
clc
rcrl
mov
mov
lcall
xchg
aam
mov
add
cmp
mov
pop
aas
std
test
push
call
xor
cmp
out
push
inc
sarl
xchg
lods
mov
inc
movsb
fs
and
dec
jno
aaa
test
in
jnp
or
icebp
jg
mov
out
or
in
push
ret
sti
cmp
or
cli
mov
rcl
arpl
jl
xchg
enter
pop
push
and
add
lret
mov
clc
jne
aam
pusha
add
stos
push
in
sti
mov
and
sti
ljmp
push
ds
mov
jge
movsb
mov
sub
cmp
insl
and
test
fwait
push
fsubl
in
push
imul
imul
aam
push
mov
xchg
movb
jmp
rorb
mov
xor
add
pop
mov
and
lods
jae
fcoms
mov
inc
xor
ds
mov
rclb
mov
out
xchg
inc
jp
loope
xor
out
lea
sub
imul
movsb
cmp
je
dec
push
stc
aad
push
xor
fisubl
addb
stc
pop
sbb
test
jmp
mov
sbb
repz
mull
ja,pt
mov
cmp
lret
adc
cmp
mov
dec
adc
mov
test
out
add
mov
lods
jno
xchg
call
lods
mov
push
cmp
pop
nop
icebp
pop
or
sub
in
aam
add
inc
test
ficomps
lahf
stos
rclb
add
jae
imul
pop
rcrl
rcrb
push
out
pop
leave
or
nop
xchg
test
add
xchg
inc
leave
popa
cmp
jno
fwait
jo
fimull
stc
mov
mov
sub
cmp
mov
push
mov
stos
nop
fcomps
dec
sbb
cmp
xchg
jp
inc
xchg
je
push
cmp
shrb
stos
adc
out
push
or
xlat
mov
test
push
and
pop
int
hlt
inc
sub
lods
mov
xlat
push
lret
add
mov
int3
mov
mov
enter
cli
or
xor
mov
jp
gs
ret
pop
mov
aas
mov
out
pop
call
mov
adc
mov
movsl
jp
sahf
jno
loopne
cmpsb
pop
insl
and
mov
les
dec
mov
and
js
scas
adc
ds
cld
sbb
out
adc
and
scas
aas
pop
push
fmuls
lds
in
sub
into
pop
test
cmp
adc
loope
mov
pop
int
loop
enter
xor
pop
mov
or
insb
sub
sbb
jge
data16
mov
scas
call
sbb
repnz
push
and
pop
bound
push
jae
test
mov
xchg
dec
enter
mov
jecxz
mov
add
lret
or
jp
lock
jbe,pn
fistps
cmp
xor
cmp
scas
sbb
inc
daa
aaa
pop
dec
jbe
push
mov
add
imul
xchg
ds
xor
mov
push
mov
sbb
mov
cwtl
inc
jle
jge
push
loopne
pop
xchg
gs
hlt
mov
mov
xchg
enter
cmp
sbb
mov
cld
or
mov
dec
les
test
in
mov
pop
xchg
mov
pop
lret
mov
mov
add
jmp
sbb
lret
add
sbb
test
push
lods
cmp
ss
pop
decl
sbb
sbb
mov
repnz
leave
nop
jo
inc
mov
dec
xchg
js
icebp
dec
into
rolb
stc
and
dec
mov
jnp
xchg
cmpsb
dec
jg
sbb
adc
ja
mov
jnp
pop
stc
test
in
mov
xchg
xchg
sbbl
pop
nop
cli
dec
cmc
and
popa
sub
addr16
movsb
subl
icebp
add
cmc
call
cli
rcrl
and
xor
adcb
cli
or
sub
bound
inc
loop
or
movsb
inc
int
fidivs
aas
js
fiaddl
call
outsb
xchg
jno
mov
out
in
sub
pop
inc
stos
das
fadds
adc
dec
fisubrs
fs
inc
pop
or
pop
insb
in
jno
loope
pusha
outsl
sbb
dec
xchg
mov
cli
je
pusha
xchg
movups
sbb
bound
sbb
popa
add
mov
cmp
mov
lods
mov
shlb
xor
lods
add
jmp
mov
jp
stos
push
mov
adcl
push
sub
inc
je
stos
es
xor
push
cmovns
out
push
mov
mov
stos
pusha
dec
xchg
ljmp
mov
mov
sbbb
xor
ror
mov
dec
ret
xchg
push
std
paddq
and
sub
imul
fwait
push
lret
lods
or
filds
mov
cmp
into
push
out
int
scas
push
cs
hlt
adc
push
fwait
jmp
add
in
sbb
push
adc
mov
push
ss
pop
leave
jp
scas
lcall
test
adc
shlb
jecxz
fstps
stos
lahf
mov
and
push
mov
xchg
mov
or
xchg
sbb
popa
pop
inc
idivb
movsl
pop
stos
fcmovnb
rorb
fistl
pop
or
mov
addr16
iret
adc
outsl
test
xchg
test
jns
leave
fnstcw
lret
loop
add
sub
mov
in
add
sub
fildl
arpl
pop
clc
into
call
jl
mov
push
cmpsb
shlb
sub
mov
xor
test
jo
mov
stos
dec
repz
inc
dec
iret
and
mov
sbb
enter
push
jmp
insl
cmp
pop
gs
pop
orb
and
mov
push
ficompl
and
cmp
into
rcrl
int
cmc
cmp
dec
subl
jmp
push
push
data16
sub
fs
jbe
sbb
pop
pop
lods
lods
decl
or
mov
or
cmp
popl
sbb
inc
mov
sbb
and
sbb
xchg
in
sbb
inc
cltd
and
daa
add
fistps
int
and
inc
lds
and
xchg
cs
xlat
hlt
pop
loopne
movsb
ss
push
pop
xchg
bound
mov
enter
sub
xchg
sub
les
xor
cli
mov
or
pop
dec
xor
aad
popf
pop
iret
adc
mov
repnz
rorl
sub
adc
add
xlat
cmp
ljmp
push
mov
mov
and
xor
fmull
and
pop
bswap
pop
mov
cmp
outsb
addr16
addb
jo
cmpl
aas
movb
adc
push
cltd
sbb
xchg
add
orl
idivb
push
jmp
rclb
rolb
cwtl
or
idivb
sub
pop
fistl
adcb
ficomps
xor
dec
mov
inc
ja
inc
movsb
jp
jnp
pop
xor
addr16
adc
adc
scas
sbb
out
in
jmp
or
test
and
stos
icebp
inc
xchg
imul
push
xor
dec
hlt
or
cmp
mov
and
jae
inc
pop
xor
xchg
mov
jo
cmp
cmp
cmp
push
out
je
repz
lods
outsl
nop
gs
push
add
imul
insl
cs
jno
mov
movsl
mov
jb
jo
inc
push
adcl
aam
jbe
sbbl
mov
sub
sbb
pop
xorl
daa
push
push
jns
push
sti
jecxz
adc
iret
pushf
inc
clc
cmp
movsb
test
rcll
das
mov
rcrl
cmp
pop
or
dec
xchg
pop
pop
fsubrl
cmpsl
sub
mov
add
stos
xor
adc
and
inc
lods
sbb
jno
fldenv
fbstp
xchg
pop
ficoms
pop
dec
popf
jecxz
test
in
sub
cmp
mov
fmuls
dec
lahf
test
arpl
adc
push
add
mov
xchg
xor
lods
fwait
sti
in
and
sbb
jne
repnz
sbb
lcall
cld
cmc
pushl
jns
test
lahf
xchg
push
loope
jp
xchg
add
aaa
cwtl
repnz
mov
fldcw
enter
sub
xchg
xor
xor
lret
scas
push
mov
mov
movsb
and
sbb
cmp
add
jp
pop
mov
xor
data16
and
or
sbb
imulb
mov
ss
xchg
fldl
or
scas
lods
dec
stos
and
inc
adc
std
ret
push
test
lret
and
cmp
xchg
mov
mov
xorb
into
cmp
xor
lock
add
int
scas
nop
fwait
xchg
nop
test
xorb
adc
fwait
add
cwtl
orl
and
sbb
into
or
cmpsb
sub
adc
inc
pushf
ret
movsl
popf
stos
test
lods
ror
mov
aaa
dec
iret
in
or
and
jnp
inc
incb
adc
mov
pop
icebp
movsb
stc
mov
xchg
dec
test
push
or
xor
push
xor
push
std
les
inc
pop
repz
sub
addr16
pop
push
sbb
cmp
insb
mov
cli
cltd
cmp
not
pushf
sub
cmp
ljmp
mov
dec
xor
pop
ret
jno
and
sbb
arpl
out
dec
in
lods
shlb
dec
lods
jb
pop
dec
push
bound
outsb
and
lock
lret
push
and
test
push
mov
push
adc
mov
dec
mov
jp
mov
mov
imul
gs
imul
fwait
mov
subb
int3
aaa
or
cltd
inc
jge
pushf
push
pop
jo
mov
cmp
jno
jne
mov
iret
cmpsl
outsb
pushf
ljmp
sbb
icebp
cs
mov
push
adc
cmp
mov
iret
je
scas
push
arpl
in
icebp
cli
call
push
push
out
into
clc
mov
mov
std
cmc
nop
call
lret
mov
sbb
or
xor
pop
mov
enter
cmp
gs
loope
mov
jae
in
mov
pop
lret
icebp
ret
clc
sub
cltd
or
rcrb
sbbb
int
stos
mov
loopne
sbb
outsl
push
jg
outsl
cwtl
bound
aaa
and
ss
fucomp
pop
nop
sbb
mov
or
mov
stos
loop
das
out
fildll
ficoms
int3
pusha
dec
and
das
sub
lahf
cld
scas
mov
imul
xchg
cmc
mov
sub
movsl
adc
jno
scas
push
push
adc
cmp
mov
bound
mov
mov
imul
lea
mov
adc
pop
adc
aad
jmp
xchg
pusha
add
xchg
cmp
incl
fsubs
jbe
mov
loopne
scas
cmp
xchg
dec
das
and
stos
cmp
sbb
dec
cmp
jbe
jp
shrl
cwtl
ds
mull
lea
and
decb
jle
and
outsb
push
ds
xor
out
push
xlat
je
mov
sub
push
pop
push
je
je
xchg
mov
lret
mov
fs
cmpsb
push
sub
jl
daa
rcll
dec
jns
sub
sbb
sub
inc
xchg
imul
sub
jno
jmp
aad
cmpb
hlt
jb
sbb
xchg
cltd
into
push
in
push
cs
or
pop
push
and
mov
aad
jae
testl
jecxz
decb
inc
push
adc
jg
mov
lahf
lods
mov
cmp
das
inc
or
push
test
sbb
cmp
dec
fidivs
push
das
sbb
or
in
orl
push
adc
and
mov
insl
stos
jnp
loope
addr16
and
aaa
test
fwait
mov
xchg
and
lods
mov
inc
jne
fsts
or
enter
pop
push
fdivrl
pushf
dec
pop
iret
mov
shll
xor
xchg
adc
in
ss
leave
in
xchg
jp
mov
into
leave
rorl
icebp
daa
pop
loope
sub
or
or
mov
std
push
insb
popf
and
arpl
mov
in
push
and
jne
jecxz
xchg
gs
push
inc
mov
icebp
dec
push
aaa
jns
jmp
cmp
test
pop
jb
fcoms
clc
fistpll
lea
push
sbb
mov
mov
mov
push
clc
aas
pop
fisubl
pop
out
decb
and
arpl
mov
pop
cli
les
pusha
mov
xlat
mov
test
cmc
ds
nop
pop
pushf
clc
cltd
popf
push
push
rcll
into
or
outsb
jnp
mov
adc
lods
inc
push
push
leave
lds
mov
loope
push
sbb
pop
data16
imul
pusha
fs
int
push
out
mov
xchg
mov
jecxz
and
mov
fxch
and
mov
out
icebp
and
push
fisttpl
pop
mov
push
xor
shll
xchg
and
inc
cmp
in
sbb
out
jmp
ss
inc
sub
call
loopne
jg
lock
dec
outsb
outsb
rorb
mov
mov
or
out
mov
lock
inc
aam
lds
ret
int
stos
test
dec
aam
test
shrl
sbb
push
adc
inc
call
lea
clc
loopne
ljmp
dec
push
pop
or
or
push
mov
jo
dec
mov
sub
jecxz
mov
add
mov
sarl
cltd
andb
inc
mov
std
mov
pop
xor
push
popf
jp
int
adc
xchg
cpuid
addr16
frstor
mov
arpl
sbb
movsb
das
int3
sub
daa
fnsave
inc
sub
cmp
cmp
xlat
lea
dec
mov
mov
cmp
inc
xor
inc
aas
shll
sbb
jge
arpl
stc
pop
adc
push
adc
jmp
add
or
es
pop
imul
cmp
jle
pop
out
jge
fadds
sub
inc
jmp
adc
mov
lods
pop
sub
ret
es
scas
xor
ss
cld
jmp
fldcw
gs
jecxz
mov
test
jno,pn
mov
xor
fs
ret
inc
lods
jb
mov
shr
xor
fistl
and
jae
jne
scas
cwtl
xor
dec
mov
mul
mov
inc
addr16
push
js
cmp
lods
das
xchg
nop
in
movsl
in
xchg
push
xchg
imul
pop
pusha
clc
xchg
add
cmpsl
enter
decl
popf
add
push
inc
xor
enter
cmp
mov
lods
dec
aas
adc
clc
out
xchg
fidivrl
sub
and
jp
or
lcall
sbb
jb
and
cmpsl
or
cltd
xchg
popf
push
lret
outsb
dec
gs
jge
mov
and
xchg
sbb
mov
inc
mov
push
dec
inc
loope
insb
adcl
inc
lods
pop
lret
inc
mov
popa
jmp
fistpll
sahf
in
loopne
inc
add
jp
sbb
daa
cmpsl
cs
movsb
inc
xor
sub
push
ss
or
push
xor
xor
clc
sar
xor
enter
stc
fwait
cmc
adcl
add
mov
sarb
mov
mov
ss
addl
lods
jge
push
jg
mov
sarl
fbld
js
mov
inc
push
scas
daa
and
sub
mov
sbb
shr
outsl
push
cmpsl
icebp
out
or
mov
xor
ret
es
cmp
mov
or
test
push
mov
dec
fsts
jnp
jmp
in
lea
sbb
sub
shr
dec
sbb
lret
scas
jecxz
xchg
lret
cmp
mov
mov
loop
call
sub
ret
sti
lods
xchg
sar
cld
pop
pop
pusha
jmp
hlt
insl
ja
dec
inc
insb
mov
mov
cmp
lods
pop
test
std
jg
test
or
loop
in
sbb
rol
ret
stos
push
mov
out
je
pop
push
es
les
stos
mov
mov
sahf
pop
dec
push
in
outsb
push
and
clc
pop
mov
mov
and
mov
push
repnz
scas
enter
jnp
imul
call
enter
imul
xor
enter
inc
cli
xor
sub
cwtl
xor
mov
aas
sbb
mov
or
je
nop
push
jns
lret
dec
xor
ds
popa
pop
cmp
fldenv
fld
ljmp
jae
enter
ja
lock
jmp
call
jae
and
stc
mov
test
lret
cli
cli
leave
imul
jmp
js
out
fnstcw
xchg
popa
outsb
movsl
or
mov
sub
mov
mov
pop
xor
sub
and
dec
test
in
jg
jae
frstor
in
mov
repnz
je
inc
in
cli
lds
inc
mov
mov
push
test
fsub
mov
jns
sbb
cli
pop
xchg
push
ss
ret
scas
andl
clc
fiadds
shll
jl
mov
jo
and
call
jmp
inc
cli
sub
xchg
ret
mov
stos
notl
or
arpl
jb
cli
call
xor
jns
jno
xor
into
inc
mov
mov
sahf
sub
pushl
dec
push
push
repz
fwait
loop
push
pop
push
xchg
or
iret
pop
ljmp
lods
adc
clc
shrl
ss
ss
nop
mov
dec
negb
adc
cmc
loop
inc
outsb
repz
fdiv
outsb
loop
inc
and
xchg
adc
nop
int
lret
gs
loop
mov
je
orl
out
icebp
and
cli
pop
pop
or
nop
cmp
jae
shrb
jns
push
outsb
and
xor
lea
sub
cwtl
xchg
clc
cmc
test
cltd
lret
icebp
movsl
dec
sbb
lret
pop
push
pop
push
dec
adc
pop
arpl
cwtl
sbb
hlt
aad
push
ret
pop
ret
dec
outsb
mov
ja
xchg
push
xchg
add
sti
or
hlt
xor
testb
fs
test
mov
mov
or
shrb
cwtl
jne
out
hlt
mov
ds
dec
roll
sub
cmc
xor
outsb
pushl
movsb
inc
faddl
mov
popa
and
ds
fdivs
jb
pop
pop
pop
push
popl
mov
xor
repz
mov
and
mov
adc
adc
cmp
rcrb
js
rcrl
popa
fcmovne
pop
xlat
mov
sbb
mov
pop
inc
pop
jp
lds
out
loop
or
mov
test
pop
test
adc
mov
shlb
adc
sbb
and
xchg
add
inc
jbe
jmp
leave
sub
sbb
add
jge
rcrb
xor
inc
shrl
cmpl
inc
add
pop
sbb
xor
fs
repnz
cmp
xlat
addb
pop
pop
inc
jge
or
mov
jp
cmp
aas
fbld
cmpsl
in
or
icebp
sub
mov
cmp
das
adc
insb
cmpsb
cmp
or
enter
jp
pop
in
fisubrl
fucompp
xchg
push
jg
cli
push
ret
mov
in
mov
jecxz
or
dec
xor
sbb
scas
mov
sub
dec
sbb
notl
repz
lea
std
jle
dec
cmp
and
adc
sahf
test
push
push
push
movsl
jge
xchg
mov
lahf
xchg
cmp
mov
pop
fnstcw
push
mov
inc
jle
xchg
push
xchg
pop
mov
sub
and
js
int3
mov
dec
fimull
xor
movsb
imul
mov
jae
xchg
out
stos
iret
out
pushf
adc
xlat
dec
aas
inc
int3
sub
sti
lret
fwait
pop
call
in
mov
lock
push
mov
mov
lea
ss
jecxz
imul
and
push
pop
js
lea
loopne
mov
movsb
or
scas
push
jg
cmp
or
divl
fwait
aam
mov
mov
test
cmp
or
mov
xlat
cs
xchg
jnp,pn
and
sbb
xchg
fnstsw
push
cltd
and
jnp
pop
push
push
in
imul
aaa
ljmp
cmp
push
mov
je
testb
inc
jge
sahf
fcoml
daa
jnp
xchg
addl
cltd
clc
clc
pop
sbb
sbb
mov
xchg
jnp
out
dec
repz
movsl
inc
es
fmul
inc
xor
mov
mov
orl
xchg
push
jecxz
incb
sub
xchg
sbb
outsl
rcr
or
pushf
and
in
std
adc
xor
pushf
and
shlb
cs
popf
mov
rcll
add
ljmp
loope
fimull
ja,pt
jp
pushf
insl
sbb
push
imul
movsb
push
jecxz
mov
xchg
imul
fimuls
dec
loopne
xchg
pusha
daa
mov
sbb
mov
outsl
xlat
inc
cwtl
add
repz
jecxz
cld
sbb
sarl
daa
xchg
pop
inc
ret
shl
fisttpll
ret
out
pop
mov
xchg
movb
subb
cmp
fidivrs
jle
sbb
movsl
lods
jle
fmull
jge
xor
cli
das
test
push
adc
das
negb
enter
jge
and
jo
dec
fbstp
push
pop
push
ret
mov
cmova
arpl
icebp
rcrb
mov
xchg
pcmpgtb
jb
popa
data16
and
add
enter
sar
mov
lret
or
adc
push
sub
popf
and
fbstp
pop
sub
shr
mov
sbb
aad
sbb
cltd
fdiv
imul
sarl
ret
ret
mov
and
call
mov
sbb
mov
sti
jbe
adc
enter
shrb
pop
rcrb
leave
jne
cmp
aam
sub
cmp
int
iret
aad
rorl
xchg
sub
lods
iret
dec
xchg
popa
out
adc
imul
fists
rolb
lods
loop
pushl
insb
or
and
add
addr16
mov
fidivrl
imul
jb,pn
or
push
pop
sahf
push
cs
enter
xchg
fcom
cmpsl
sarb
lret
mov
inc
dec
pop
ftst
inc
or
inc
mov
mov
pop
fs
mov
or
mov
xor
xchg
int
xor
repz
sahf
pushf
add
mov
cmpsb
dec
in
rep
xchg
and
inc
pop
enter
daa
pop
cmp
xor
iret
testb
xor
sbb
sbb
push
lret
sub
sbb
repnz
je
push
lds
imul
dec
mov
inc
adc
sbb
sbb
je
fidivrl
mov
aas
fwait
nop
pop
cwtl
or
fcmove
pop
push
ret
push
mov
int3
popf
out
adc
xchg
pop
jp
sar
rcrl
mov
sbb
pop
and
in
jge
push
and
cmpsl
pop
lods
out
out
push
adc
push
push
dec
jl
arpl
test
lods
pusha
mov
arpl
test
mov
into
sbb
inc
xchg
daa
jmp
jne
int
push
jnp
xchg
inc
pushf
pushf
mov
insb
stc
cltd
add
and
or
add
and
xor
aas
adc
jmp
push
jp
loopne
lret
jmp
pushf
jns,pn
fidivrl
dec
sarb
mov
iret
scas
loope
das
fwait
or
out
push
or
sbb
out
xchg
jne
dec
xor
adc
outsb
std
mov
dec
add
das
scas
xor
pushf
push
out
pusha
sbb
sahf
movsl
jae
test
cmp
insl
jle
daa
inc
adc
divb
push
popa
std
ret
cmp
inc
adc
test
gs
cmpsl
jl
xor
sbb
jp
mov
sbb
mov
insl
push
test
or
push
and
dec
lock
outsl
xor
iret
mov
mov
arpl
jmp
add
or
cmp
nop
loope
outsl
jno
subb
aad
hlt
and
cltd
ja
cmp
inc
inc
ljmp
lods
xchg
jnp
cli
shl
xchg
in
fmulp
ds
mov
or
jne
push
in
jae
int
sbb
shlb
dec
mov
xorl
mov
mov
inc
test
repz
out
sub
dec
and
scas
mov
and
scas
mov
fsts
imul
imulb
mov
push
adc
test
inc
adc
jp
cmpsb
scas
push
cmp
cmpsb
or
pop
sbb
sbb
lock
sbb
mov
roll
int
pop
xchg
dec
push
mov
roll
aas
cmp
movsb
notb
cld
sub
out
inc
insb
mov
cltd
test
test
lahf
aad
popa
cmc
outsb
adc
pusha
rcrl
mov
pminub
imul
movsl
ss
cltd
or
dec
adc
aaa
cmp
test
lret
push
insl
pop
js
push
iret
sahf
mov
hlt
pop
cs
sarl
testl
jmp
std
push
movsl
jge
fcmovne
ds
popa
insl
outsb
cmpsb
lea
pop
aas
fisttpll
and
jb
dec
cmp
jb
lret
jg
push
dec
or
cmp
xchg
inc
sbb
xor
aad
sub
xchg
mov
mov
das
xor
add
mov
pop
mov
cmpsb
or
pop
out
dec
jecxz
xor
ror
pop
cwtl
pop
ror
in
out
popl
mov
mov
inc
es
iret
js
push
lock
lea
lods
js
ljmp
stos
arpl
cmpsl
dec
dec
aas
fs
jl
cwtl
pop
out
sbb
test
mov
jmp
lret
mov
scas
jbe
mov
pop
pushf
icebp
leave
stos
inc
mov
gs
or
inc
dec
mov
pop
movsl
mov
lahf
sub
icebp
insb
sub
inc
lret
jg
scas
mov
jle
imul
cmp
gs
mov
out
jg
add
in
insl
pop
dec
scas
jne
cmp
ret
fcmove
daa
mov
inc
sbb
lcall
jb
mov
add
popa
xlat
inc
das
aad
pop
stos
fadd
int3
inc
test
scas
pop
adc
sbb
xchg
mov
shll
mov
divb
repnz
stos
pop
popf
shll
push
dec
test
xor
pop
in
js
stc
xor
or
xor
push
bound
stos
lahf
xlat
insl
cmpsl
jmp
xlat
mov
pop
jno
xor
test
orb
lcall
xor
jge
cli
int
jg
stos
push
jno
mov
int3
into
dec
lcall
jb
push
xchg
push
ret
bound
sbb
cmp
pop
sbb
xchg
jge
sub
in
sti
scas
mov
xchg
mov
pop
in
out
mov
idivl
movl
shlb
xchg
add
adc
iret
jl
or
lock
mov
jp
jmp
pop
push
lds
and
stos
dec
push
fiaddl
lds
pop
test
xor
dec
mov
inc
ja
loope
mov
popf
data16
push
mov
stos
int
and
adc
pop
xchg
fadd
or
mov
lods
addr16
mov
subl
add
outsl
out
inc
jnp
lahf
in
loopne
into
add
test
shll
sub
es
js
aam
pop
add
mov
push
sbb
and
jae
cmp
cld
mov
ret
outsl
push
cmpsb
xchg
in
pop
sub
ss
add
xor
add
jmp
and
add
ss
jne
or
sub
xor
test
pushf
xchg
scas
in
sbb
pop
push
in
push
jmp
jecxz
add
mov
stos
ret
pop
lods
mov
sbb
insb
adc
cltd
aad
in
lods
push
pop
lahf
ja
movhps
out
mulb
or
jp
inc
int3
mov
int3
pop
je
sahf
dec
cmpsl
fcoml
mov
dec
push
add
lret
add
lret
ret
clc
dec
mov
push
ja
sub
loop
add
sbb
out
scas
aaa
fwait
dec
stc
sub
dec
idivb
sbb
fsubp
icebp
add
leave
adc
lahf
fadds
or
or
call
push
aad
dec
outsl
icebp
cmp
mov
lret
push
or
jle
push
and
add
sbb
lahf
sub
arpl
lock
cltd
rorb
push
or
pop
rorb
and
insl
out
xchg
lods
xor
push
inc
jnp
xor
out
adc
adc
or
rorb
cltd
xor
or
cmc
lcall
cwtl
imul
sub
inc
rorb
cmp
xor
adcb
mov
adc
push
jno
popl
sbb
int
jp
mov
das
mov
pop
imul
xchg
adc
fsubl
mov
fmuls
mov
jb
int3
sbb
clc
add
xor
jge
push
cmp
push
cltd
cmpsl
mov
xchg
loop
push
jne
cmp
mov
arpl
sub
sub
inc
and
pop
loop
xchg
enter
leave
pop
xchg
sbb
les
ljmp
xorl
cmpsb
fsts
add
sub
sbb
aas
cld
mov
shl
sti
and
mov
pop
inc
imul
loop
jmp
pop
outsl
dec
mov
mov
inc
xchg
in
lret
inc
loopne
sbb
out
xlat
int
push
xchg
lods
pop
cld
or
es
jl
pop
mov
sbb
mov
leave
mov
cmc
outsl
scas
popf
push
lcall
aad
fcmovnbe
mov
leave
scas
jo
push
inc
jbe
adc
jmp
sbb
cmp
sbb
mov
inc
jmp
lock
cld
in
cld
inc
sub
ja
xchg
sub
in
mov
lcall
or
lahf
out
out
out
out
into
add
xor
stc
add
adc
iret
mov
pop
xor
mov
iret
jne
push
sbb
outsl
inc
xchg
mov
fwait
pop
nop
jne
fsubs
mov
shl
cld
loop
add
xchg
cld
shr
shll
add
movb
adc
fcompl
scas
movsb
mov
jmp
lret
stos
repnz
dec
inc
nop
test
jo
test
iret
mov
fisubrs
add
mov
insl
bound
inc
add
push
ja
fdivrl
push
xchg
in
movsb
aas
lea
push
inc
inc
sarl
and
adc
icebp
mov
lds
dec
fwait
jb
stos
sub
push
push
stos
in
xchg
mov
andl
push
outsl
sti
or
sub
fnsetpm(287
cmp
push
push
xor
sub
cli
cmpsb
add
aam
xchg
jle
inc
lret
popa
into
rcrl
jno
pop
inc
shr
dec
lcall
xorb
mov
mov
iret
and
ss
fstpl
js
mov
or
add
xchg
icebp
pop
xchg
xchg
add
addb
jg
or
lds
lock
outsb
daa
andb
fsubrl
cmp
mov
add
mov
mov
jb
jo
into
inc
leave
mov
bound
iret
pop
jb
nop
arpl
rolb
push
adc
and
and
mov
jl
in
stos
or
popf
mov
xor
roll
in
adc
in
add
dec
jnp
pop
scas
pop
push
push
fstps
jecxz
out
push
mov
sbb
dec
sbb
iret
add
dec
jle
push
sub
jbe
test
add
mov
xchg
into
je
pop
imul
mov
lods
ret
imul
mov
push
push
test
sbb
test
push
mov
xchg
or
push
jmp
aad
out
test
testb
aaa
sub
add
ja
adc
push
cmp
popa
dec
lahf
mov
cmp
mov
and
aam
out
add
add
cmc
in
js
push
stc
xor
pop
in
inc
rorl
mov
mov
add
jp
jo
mov
cli
jle
shll
pop
das
mov
jno
cmpsl
adc
out
push
sub
xor
mov
lahf
test
push
subl
xchg
mov
pop
jae
xchg
sub
in
mov
mov
jns
loop
jge
jns
das
dec
insl
pop
pusha
jge
test
std
push
mov
test
into
or
in
push
jmp
pop
push
negl
xor
xchg
in
mov
xchg
loopne
ret
fldenv
cld
xchg
insl
jge
test
cmpl
xchg
std
ret
mov
sub
mov
push
in
int
incl
jp
or
cmp
push
call
jg
loopne
push
push
jmp
adc
dec
inc
and
cld
icebp
ret
arpl
icebp
call
call
push
out
adc
outsb
cli
and
shrb
std
fisubs
sbb
test
test
jp
mov
imul
mov
dec
xchg
mov
pop
mov
add
and
pop
gs
inc
js
pop
pop
adc
lods
push
andl
add
lods
out
ficomps
inc
out
or
nop
sbb
in
dec
jmp
data16
push
sbb
mov
xchg
jle
jle
or
adc
sbb
flds
ljmp
jmp
or
ds
out
stos
in
sub
push
lods
mov
rcrl
repnz
xor
push
cld
add
cmc
loope
push
mov
inc
repz
aas
adc
enter
pop
sbb
push
adc
test
pop
imul
jne
out
add
ficompl
call
icebp
mov
out
push
push
jne
sub
scas
mov
and
cmp
test
sub
sbb
pop
aas
mov
lahf
insl
sbb
xorl
imul
pop
lret
mov
sub
cltd
repnz
xor
int3
push
push
cmc
mov
dec
dec
mul
xor
lods
xchg
fldl
mov
push
testb
insl
xchg
add
jle
fnstsw
or
je
adc
int3
mov
jne
mov
mov
sub
and
aad
andl
fnstenv
dec
leave
push
repnz
or
or
inc
dec
pop
push
shufps
xchg
xchg
test
cmc
adc
adc
mov
movsl
fmuls
sub
mov
movsb
or
cmc
cli
xchg
enter
aas
ljmp
xor
adc
int3
in
push
inc
adc
aam
mov
out
aam
push
ficompl
rcr
cmp
es
inc
mov
pcmpgtw
and
jmp
dec
stos
jnp
inc
fldcw
into
out
repz
adc
cmp
orl
mov
rolb
push
mov
inc
outsl
jo
xor
fwait
lock
movsb
fsubrl
stc
mov
daa
aas
jmp
js
sbb
mov
add
inc
xchg
jbe
lods
aam
lret
mov
jb
xchg
xlat
rcrl
imul
xor
ljmp
add
mov
out
je
pop
pop
or
jnp
cmp
addl
or
mov
jb
push
mov
icebp
rcrl
mov
sbb
outsb
ja
popa
dec
icebp
lahf
push
in
aad
pop
mov
push
popa
data16
xor
or
pop
adc
ss
jle
insl
jge
shrb
jo
lds
lret
xor
stc
shr
mov
cs
sbbl
lcall
mov
cli
xor
push
int3
push
popf
dec
and
testb
ret
mov
pushf
lock
dec
pop
push
ljmp
jmp
testl
insb
mov
xor
push
add
push
inc
xchg
subb
sbb
or
and
or
imul
jno
or
popf
decl
xchg
lret
std
adc
xchg
aas
lds
ss
sub
mov
popf
jmp
les
ret
mov
pusha
rcll
std
bound
mov
pop
cmpsl
outsl
fisttps
cli
cld
cmp
gs
stos
xchg
lahf
enter
ficoml
mov
repnz
das
adc
shll
call
add
mov
iret
add
in
scas
ds
dec
int3
mov
mov
inc
fldt
rorb
or
popf
add
or
sarl
push
dec
fsubs
adc
lret
lods
and
mov
xorl
sarb
and
mov
pop
and
pop
int3
pop
sbb
mov
mov
int
sarb
mov
pop
clc
xchg
mov
add
push
jp
cmp
inc
scas
test
bound
arpl
das
mov
lret
int
pop
je
hlt
jne
sub
inc
pop
loope
mov
jno
mov
jecxz
fs
and
jg
or
inc
cmp
sti
call
inc
shlb
clc
jl
add
jecxz
lret
adc
mov
push
fwait
pop
js
push
and
jns
iret
fs
adc
inc
mov
mov
hlt
pop
or
jne
addr16
mov
pusha
ret
or
and
adc
fwait
cltd
fs
pop
cld
in
call
dec
loop
and
or
mov
addr16
inc
xchg
add
push
punpckhwd
inc
adc
fdivl
les
btw
jp
subb
push
jb
mov
ret
or
push
bound
std
lods
lods
inc
or
outsl
mov
mov
inc
xchg
push
xor
imul
jne
rcr
ja
jl
leave
pop
orb
fidivrl
xchg
lock
and
jg
push
repnz
popa
sub
jecxz
cld
xchg
repnz
clc
mov
mov
sbb
pop
stos
daa
shlb
fisubrs
xor
lcallw
loopne
jmp
mov
xor
jo
popa
fdivs
dec
mov
int3
mov
adc
arpl
lret
jl
frstor
xchg
daa
fcmovnb
dec
or
gs
mov
fdiv
jns
aad
int3
in
pop
int
repz
xor
pop
jne
mov
cld
inc
jmp
jmp
int3
stos
iret
out
mov
push
repnz
add
xor
ret
stos
push
out
pop
cs
jns
jbe
adc
scas
test
fst
push
and
hlt
pop
mov
insl
cli
out
inc
adc
mov
out
xor
mov
push
sti
clc
adc
lret
jle
cmp
dec
hlt
adc
das
insb
sar
cmp
pop
js
lcall
mov
and
push
add
scas
mov
inc
jge
mov
cs
sub
cs
inc
adc
lret
cltd
and
sbb
xchg
push
fucomi
call
test
mov
aas
iret
lret
pop
loope
cmp
rol
push
popf
inc
sahf
xchg
ret
insb
lcall
insl
xchg
mov
sbb
lea
imull
push
cwtl
and
std
imul
mov
sbb
mov
mov
in
stos
jb
pop
mov
sbb
and
push
pop
cltd
in
scas
leave
push
push
or
int3
mov
decb
call
cmp
mov
lea
aaa
adc
bound
fiaddl
cs
pop
subl
js
shr
or
into
imul
aam
inc
xchg
pop
add
add
das
dec
push
js
lsl
mov
xchg
dec
inc
mov
ja
lock
ret
pop
jl
cmp
cmp
jecxz
jle
push
inc
sub
pop
adc
and
fsubr
popf
mov
cwtl
mov
nop
mov
orl
and
inc
cld
or
adc
pop
dec
lret
push
mov
pop
int3
dec
cli
scas
add
orl
in
loop
das
aam
movsl
adc
mov
xor
mov
sbb
insb
pop
in
jmp
jno
cmp
mov
and
dec
xor
and
push
jg
dec
pusha
out
push
sbb
roll
in
cld
dec
inc
outsl
inc
and
int3
xchg
cwtl
movsl
movsb
jle
imul
out
mov
fcmovnb
in
inc
push
or
cmpb
into
jae
leave
pushf
test
data16
or
dec
icebp
sahf
data16
test
loop
jns
mov
adcb
pop
sub
aas
xchg
adc
or
ds
push
repz
sbb
fs
test
inc
pop
xchg
cwtl
sbb
ret
ret
test
aad
fldt
push
rclb
loope
aas
stos
cmp
jae
jecxz
call
and
movsb
lds
out
jae
inc
scas
mov
pop
out
push
std
subl
adc
loop
push
fdivrs
pusha
ja
xchg
xchg
addr16
or
fistpl
fidivrs
outsb
lret
repnz
jnp
rcrb
jl
mov
mov
and
cltd
ret
and
or
gs
fcompl
jbe
dec
mov
aaa
sbb
push
mov
and
mov
and
dec
adc
dec
mov
mov
fdivr
push
add
clc
bound
mov
xorb
mov
not
outsb
scas
pop
or
mov
pop
lods
pop
xchg
out
mov
lods
push
mov
je
xlat
movsl
xchg
test
js
push
mov
addr16
add
push
stos
iret
test
and
mov
jmp
inc
mov
dec
xlat
outsl
call
and
icebp
jecxz
fisubl
daa
ds
cli
shr
jnp
cmpsb
xchg
mov
iret
jne
adc
insb
xchg
lods
into
inc
ret
mov
aaa
xchg
das
mov
aas
mov
inc
stos
data16
jb
out
xor
lea
fadds
mov
pusha
cmp
adc
mov
in
sub
inc
fsubrp
outsl
sbb
adc
pop
push
loope
rcrl
repnz
add
inc
fucomp
jmp
rol
and
mov
xchg
xor
mov
or
mov
test
bound
inc
movsl
cmpl
and
sbb
scas
mov
insb
stc
popf
fimull
into
cli
xor
out
lcall
icebp
lret
cmp
movsl
sub
lret
bnd
pop
cmc
imul
inc
jne
sbb
xchg
mov
das
notl
icebp
cmp
sub
add
lcall
rcrl
imul
gs
es
incb
cmp
xor
add
or
xchg
subb
fadds
ss
pop
loope
mov
sahf
rorl
mulb
xchg
aaa
cmp
jae
dec
mov
xchg
push
mov
cli
jg
xor
xchg
cmp
cmc
sbb
aad
dec
sbb
dec
jge
test
jmp
movsb
mov
in
mov
ret
adc
jne
test
lahf
add
mov
mov
hlt
dec
sbb
cmc
sbb
cwtl
loop
push
push
push
cwtl
dec
movsl
mov
xchg
xor
insb
aaa
cmp
mov
fs
daa
mov
sbb
outsb
jne
mov
cmp
adc
dec
pop
flds
mov
je
jo
fstps
xchg
notl
lods
mov
or
mov
out
cmp
jbe
repnz
in
movsb
cltd
xchg
fisttps
push
jmp
push
mov
inc
addr16
xchg
adc
out
lods
hlt
dec
insl
scas
mov
pop
pop
sub
sbb
in
jbe
scas
inc
jbe
xor
xor
xchg
scas
outsb
or
dec
inc
dec
scas
fisttpl
and
lret
pop
lds
lret
movsl
in
ss
sub
or
iret
mov
daa
setnp
lret
dec
aam
mov
cmp
sbbl
rclb
xchg
arpl
mov
iret
cmp
test
lret
pushf
movsl
xor
test
mov
fmul
xor
arpl
push
mov
cmp
mov
je
add
cs
push
stc
cli
mov
dec
jmp
push
aaa
jecxz
push
sbb
cltd
mov
orl
inc
sbb
push
repz
aad
dec
xor
test
sbb
push
sbb
out
mov
rclb
pop
push
mov
xor
sub
xor
pop
shrb
mov
std
mov
push
cmpsb
lods
fdivrs
push
orl
out
mov
adc
out
pop
fdivp
cmp
aas
xor
test
push
mov
scas
icebp
adc
push
pop
addr16
cld
scas
mov
pusha
les
mov
xchg
cmpsb
aas
sub
add
pop
mov
sarb
loope
insl
mov
add
aam
rclb
sub
push
in
lock
adc
shl
fstpt
push
sahf
sbb
xchg
adc
test
inc
push
shll
clc
addb
js
repnz
mov
call
xor
mov
jns
add
cli
sti
dec
mov
xor
ss
xchg
leave
cmp
jp
sub
mov
jmp
push
popf
mov
cmp
xchg
adc
inc
jecxz
loope
lret
jns
das
lods
jl
call
imul
push
or
out
std
imul
les
push
cmc
push
sbb
lds
push
mov
out
sbb
icebp
pop
cmp
jae
addr16
mov
mov
jno
sbb
cmpsb
and
out
pop
jmp
cmpsl
sub
jbe
mov
and
xlat
imul
enter
xchg
cmp
shrl
ds
xor
loope
inc
repz
imul
ljmp
pop
sahf
sbb
or
shrb
mov
fs
mov
inc
fisubrs
xchg
add
repz
cli
out
mov
inc
sub
xchg
pop
mov
jb
subb
lahf
xchg
popa
sub
lods
sub
dec
or
jle
lds
mov
sub
dec
test
add
test
addr16
xchg
add
jno
adc
cld
jae
mov
xchg
push
adc
cmp
test
inc
sbb
xchg
mov
cltd
int3
in
push
negl
inc
mov
dec
cs
pop
pusha
pushf
aad
adcl
jmp
mov
int
dec
and
rorl
xchg
mov
pushl
cmp
mov
jmp
ret
nop
mulb
pop
lahf
testb
rcrb
in
xlat
sbb
inc
adc
rcll
popf
jmp
fcomp
jne
xchg
push
mov
sbbb
out
sbb
add
inc
int
dec
mov
call
bound
and
jge
mov
or
mov
dec
cld
sub
bound
stos
ror
hlt
sbb
testb
lret
xchg
add
cli
push
int3
or
xchg
pop
cmc
push
adc
xor
xchg
pop
loope
cltd
add
insb
icebp
jmp
sub
lcall
sbb
push
xor
movsl
sub
fldt
add
push
mov
sub
xchg
jp
test
push
aam
pop
push
shlb
gs
idiv
inc
inc
jne
enter
arpl
jecxz
orl
xor
xchg
and
js
sub
or
imull
adc
aaa
icebp
inc
sbb
stc
fadd
data16
or
daa
push
sahf
sub
add
mov
insl
inc
or
loop
inc
mov
lock
pop
stos
hlt
push
or
aas
mov
repnz
or
aaa
roll
repz
and
xchg
test
jmp
or
inc
pop
repnz
sarl
push
mov
ret
mov
sub
adc
sbb
push
inc
push
mov
dec
and
js
movsb
or
fistl
dec
cmp
fs
add
sbb
mov
lock
dec
mov
stos
dec
add
mov
dec
test
cli
cmp
cmc
mov
je
cli
scas
cmp
pop
shrl
call
ret
xchg
push
sti
loope
mov
rcrb
cli
inc
loopne
mov
push
imul
iret
jecxz
xor
mov
adc
in
out
les
or
and
rclb
xor
outsb
fcompl
int
cmc
inc
jbe
push
mov
or
ret
and
add
jl
push
add
lea
data16
cmpsb
into
shlb
aas
daa
sbb
add
negl
push
divl
cmp
and
movnti
int3
shrl
adc
movb
push
icebp
ficompl
mov
scas
cmp
mov
xchg
rcrb
in
pop
iret
mov
mov
jne
xchg
dec
stos
scas
pop
stc
insb
shll
ss
jne
inc
pop
mov
mov
shr
jl
pop
add
pop
mov
xchg
push
shrb
mov
and
sbb
xchg
xor
rorb
jmp
push
cli
ret
fwait
sbb
push
popa
or
pop
cltd
xor
clc
xchg
sbb
mov
xchg
fidivl
daa
lods
add
mov
push
mov
xorb
lcall
mov
xor
adc
dec
pop
ret
or
and
xchg
or
lret
mov
dec
inc
push
or
mov
jns
outsb
ret
sub
pusha
sbbb
sub
or
ret
jle
hlt
jmp
adc
pop
mov
sub
sbb
int3
outsl
rorb
ret
or
fisubl
cld
ror
scas
cmp
add
cmpsb
sub
int
cmpsl
nop
jb
and
lock
or
pop
out
pop
jo
cmpsb
xchg
and
and
sub
nop
cli
sbb
adc
xchg
cwtl
les
adc
imul
mov
mov
or
push
int
pop
xchg
inc
pop
test
mov
mov
mov
sarl
cwtl
push
outsb
mov
cmpsl
push
adc
pop
lret
jecxz
popa
addr16
out
push
mov
in
cmpsl
xchg
sbbb
jne
mov
dec
xchg
ret
mov
xchg
in
mov
xor
cmp
and
jnp
fs
fisubrl
adc
andl
aaa
jns
inc
push
or
pop
jg
and
mov
sub
pop
dec
decl
test
xchg
mov
dec
out
adc
jge
pop
lds
sbb
loopne
repz
andb
pop
icebp
sub
lods
out
mov
lods
cmc
dec
popa
xor
push
ret
lret
adc
or
push
sbb
sahf
cmp
in
imul
push
in
sub
pusha
cmp
cmp
and
and
jle
pop
popa
cmp
lea
lahf
sbb
adc
pop
stc
add
insl
fbstp
adc
xchg
xor
jnp
add
jns
inc
adcl
mov
nop
push
stos
cmp
pop
pop
ficoml
mov
insl
cmpsb
aas
sub
into
inc
sbb
cmp
imul
inc
movsl
ret
pop
mov
repnz
stc
inc
loope
mov
nop
sub
hlt
pop
and
push
xor
rcrb
push
pushf
enter
es
push
mov
inc
pushf
cmp
sahf
clc
cmp
push
fs
aaa
pop
out
out
incb
or
cmpsl
sub
loop
mulb
daa
icebp
call
fnsave
pop
xchg
and
ljmp
mov
mov
imul
ficoms
mov
push
mov
mov
call
rorb
imul
xor
cmp
sbb
mov
stos
mov
ljmp
out
rcl
popa
repz
push
ret
lds
mov
fstps
dec
in
rcl
or
out
sbb
lock
insl
ds
xchg
pop
pop
inc
jecxz
hlt
lds
int
insb
test
cmp
lock
fcoml
mov
lock
fcoms
stos
stc
xchg
pop
scas
shrl
jb
or
xchg
pusha
pop
or
sbb
and
repz
loope
call
mov
jns
scas
ljmp
jle
test
mov
fnstenv
adc
aaa
mov
fsub
data16
sahf
and
gs
mov
cmp
pop
xchg
lret
jl
fcmovbe
scas
mov
test
arpl
cmp
leave
or
sti
lea
leave
xor
pop
adc
test
imull
inc
insl
dec
outsb
mov
leave
or
js
lret
loop
pop
or
add
dec
mov
outsb
mov
cmp
rolb
dec
decb
stos
add
es
and
jno
pop
mov
pop
push
scas
in
and
push
outsb
pop
mov
jmp
inc
mov
aad
adc
push
test
das
loop
scas
pop
inc
lcall
imul
mov
arpl
mov
push
or
mov
inc
fisubrl
or
push
gs
mov
jb
mov
inc
mov
sub
mov
jecxz
daa
push
jmp
and
imul
cmp
cmp
push
loope
jb
inc
pushf
and
pushf
dec
addr16
movb
fistpll
jo
xor
lahf
mov
stos
jp
xchg
dec
js
icebp
mov
insb
pop
lret
cmp
fs
mov
cmp
cmc
dec
ds
aam
dec
rolb
push
cmp
lds
mov
sbb
iret
shrb
lcall
xchg
pop
cmp
std
push
in
aas
movsl
push
imul
sub
xor
lds
sub
pop
mov
andl
into
fnstcw
and
cmpsb
fbstp
lock
in
add
adc
lds
jb
push
lret
add
jnp
push
test
out
rol
mov
inc
jge
lds
inc
clc
jae
repz
ljmp
sarl
pop
cmp
xor
mov
das
inc
cmp
mov
push
xor
popf
test
frstor
inc
mov
outsb
and
adc
mov
call
xchg
bound
mov
je
mov
ja
into
jnp
sti
test
cmp
mov
push
sub
cmpsl
inc
mov
jb
fildl
shl
adc
mov
mov
dec
jmp
push
movsb
stos
xor
pop
xchg
adc
mov
gs
imul
or
jb
das
pop
push
pusha
dec
cmpsb
cmp
movsl
mov
pop
mov
jb
or
out
xchg
pop
mov
and
jl
xor
jl
mov
lret
ficomps
inc
fdivrp
inc
cmc
test
shrl
pop
pop
jno
adc
jne
test
testb
and
adc
xor
add
ret
popf
aas
popl
xchg
mov
mov
xchg
mov
pop
cmp
shl
dec
mov
mov
dec
cwtl
sbb
loope
out
sub
lret
rcr
push
fdivs
fcomi
inc
dec
push
sub
leave
fdivs
test
loope
jmp
push
mov
hlt
or
or
xor
ret
jno
cmpsl
cltd
mov
sbb
and
mov
roll
stos
orb
mov
xchg
sub
mov
push
sti
subl
pop
jne
cmp
cld
push
mov
add
mov
push
pop
cmpl
loop
xchg
jl
dec
dec
jmp
add
ret
cmpsb
mov
fbstp
xlat
mov
sub
dec
rorb
xchg
in
je
push
orl
jnp
sahf
arpl
adc
mov
push
jge
in
test
movsl
dec
popf
les
ffreep
in
sbb
aad
mov
mov
or
xchg
xchg
std
xchg
add
and
xchg
enter
jl
xor
cli
stos
out
xchg
dec
cmp
xor
gs
test
cmpsb
mov
ljmp
mov
incl
dec
lock
mov
pop
or
cld
jno
mov
fcmovu
call
cmp
push
dec
repz
rep
mov
sarl
loopne
cmpsb
stos
push
in
cmc
dec
sub
mov
in
xor
inc
dec
sbb
pop
icebp
leave
adc
jp
fwait
or
xchg
and
icebp
leave
je
push
pop
pusha
sbb
jl
iret
enter
xchg
push
jbe
push
sarl
in
sahf
loope
nop
add
xchg
pushf
rcrl
push
push
scas
xor
inc
adc
lds
adc
sub
mov
into
in
xor
aam
push
scas
fldenv
pop
mov
cmp
push
leavew
push
les
dec
xchg
inc
test
and
adc
xor
pop
aam
pop
ja
repz
adc
test
lea
fdivrs
jb
rcrl
cmpsl
xchg
xlat
mov
mov
scas
jns
repz
adc
sbb
mov
mov
mov
lret
mov
or
ja
xchg
lock
sbb
push
cmp
mov
pop
stos
xchg
inc
lods
inc
pop
call
int3
fstl
sub
mov
loop
push
jmp
lods
rcll
iret
inc
pop
jl
xor
add
cmp
pop
popl
je
mov
push
jae
inc
test
aad
push
xchg
xchg
jbe
jne
inc
insl
cwtl
dec
jle
ss
test
sub
std
sbb
and
adc
sub
into
dec
loopne
fnsave
mov
aas
test
dec
clc
push
adc
sbb
int3
mov
inc
pop
mov
mov
dec
repnz
add
enter
loopne
xchg
pop
pop
ret
xor
cmp
stos
lret
popf
dec
test
cmpsl
ret
fs
mov
call
jge
cmp
repnz
and
lea
jle
mov
scas
add
pop
sub
adc
lds
iret
outsb
insl
cmp
pop
pusha
js
or
les
loope
inc
pop
xchg
xor
or
pop
cmp
in
das
jnp
shrb
jbe
sbb
jno
and
inc
sbb
adc
dec
ja
and
push
test
jne
outsl
mov
dec
inc
sbb
test
mov
stc
rol
pop
pop
mov
movsb
mov
mov
andl
sahf
inc
mov
sbb
cltd
add
lret
pop
enter
sbb
sub
or
mov
sar
jb
adc
jb
or
mov
bound
sbb
inc
xchg
imul
pop
mov
insb
and
cmp
insl
test
pop
mov
dec
jge
mov
cmpsl
pusha
popa
fld
mov
pop
adc
stc
adc
repnz
cmpsl
div
xor
adc
mov
cmp
dec
lret
pop
or
popa
int3
push
xor
aam
jns
xor
jns
out
xor
gs
cwtl
loope
mov
adc
dec
leave
push
adc
xchg
in
mov
frstor
xor
rcll
inc
mov
jg
cmp
push
inc
shrb
lahf
xchg
shll
or
pop
insb
shll
mov
mov
cwtl
fistpl
or
mov
ljmp
push
push
inc
jg
iret
cwtl
rolb
mov
notb
push
cmp
dec
inc
ror
dec
pop
bound
push
stos
insl
pushf
sbb
test
push
mov
mov
xchg
and
sub
and
add
movsl
push
mov
push
mov
shl
jge
lock
mov
and
mov
divb
push
inc
rorb
and
sbb
leave
pusha
mov
push
jl
shl
mov
push
mov
jg
cmp
call
cld
jo
push
rorl
cpuid
stos
sarl
scas
jge
neg
fst
mov
ljmp
adc
and
outsl
fs
cmpsb
call
or
mov
sbb
jg
fldl
ret
jns
cmp
int
out
jge
jae
xor
add
daa
lods
add
icebp
jge
js
cltd
dec
pop
adc
loop
bound
imul
dec
lea
jb
add
xchg
dec
add
sbb
dec
inc
sub
jp
int3
js
pop
dec
cmpsb
jg
mov
sahf
rorb
test
lds
imul
dec
mov
dec
xchg
lret
adc
out
movl
mov
add
pop
insb
bswap
mov
adc
pop
stos
adc
test
popf
loop
push
sub
out
nop
mov
js
cld
add
jle
sbb
flds
xchg
mov
push
sub
pop
cmpsl
xor
roll
or
mov
iret
add
sbb
dec
pop
test
aam
push
and
imul
dec
arpl
ja
jp
in
pop
sbb
test
lea
pop
dec
sub
pop
pop
out
test
fdivr
cmp
clc
mov
push
ljmp
push
rcrl
mov
fildll
jb
sbb
fnsave
sub
je
add
shl
mov
push
mov
mov
add
add
andl
stos
aam
xor
pop
lock
or
dec
or
scas
jmp
aad
es
int
push
fsub
xor
sub
faddp
xor
movsb
ret
or
mov
lods
fisttpl
test
xchg
cmpsl
cli
iret
inc
addr16
mov
adc
aam
out
cmp
popf
icebp
inc
adc
shll
cwtl
rcrl
insb
pusha
xchg
cmp
mov
jp
dec
outsl
daa
inc
pop
cmp
arpl
repnz
pop
adcl
mov
mov
sbb
and
repz
bound
xor
hlt
mov
jmp
ret
hlt
or
or
sub
mov
cmp
sbb
dec
es
add
mov
jnp
pop
loopne
imul
out
hlt
jge
aaa
shll
test
cmp
mov
cld
jns
add
sub
stos
pop
xchg
jmp
insb
out
xor
adc
ja
shll
insb
adc
sti
mov
cmp
inc
jno
loopne
insl
mov
or
hlt
sbb
or
add
int
xchg
repz
sub
jns
cli
mov
xchg
jnp
aaa
push
iret
sbb
les
adc
popa
mov
stos
sub
imul
iret
jo
repnz
jle
sbb
xor
mov
in
xor
sbb
add
mov
add
push
adc
jmp
xchg
fs
shrl
pop
jo
push
jne
ja
dec
add
xchg
xchg
jmp
ja
xor
xchg
pop
xchg
inc
adc
mov
inc
fs
pop
adc
aas
imul
lahf
pop
fcmovu
pop
sbb
cmp
cmpl
and
addr16
mov
adc
inc
push
sub
aas
js
add
iret
repz
outsb
jecxz
shl
dec
fwait
sbb
inc
std
hlt
fsubl
pusha
xor
outsl
xor
fstl
jp
pop
mov
dec
xchg
lea
jmp
lock
mov
decl
sahf
add
jnp
enter
or
test
outsl
pop
xchg
lret
lods
aas
add
jno
adc
gs
cmpsl
mov
add
std
jl
xchg
pushf
inc
imul
push
adc
cmp
xorb
sahf
pop
push
mov
sub
es
pop
scas
test
fdiv
mov
adc
xchg
cli
adc
mov
js
jecxz
in
testl
lds
xor
outsl
cld
and
add
cmp
pop
aad
push
iret
out
insl
les
adc
loop
and
xor
mov
xor
je
cmp
push
jnp
std
out
out
xchg
jecxz
pop
push
enter
cs
xchg
mov
orb
das
and
imul
xchg
out
test
mov
ljmp
ret
mov
ss
dec
pushf
sbb
adc
lret
mov
sarb
adc
ja
xorl
mov
imul
lock
or
iret
fistpl
cmpsb
dec
sub
dec
sbb
pop
and
push
inc
shlb
fimull
dec
insb
daa
das
imul
pop
or
out
leave
xor
cmp
pop
adc
push
ljmp
insl
ljmp
inc
stos
or
push
inc
faddl
sbb
inc
sbb
mov
movsl
xchg
aas
lods
sub
mov
loop
add
fidivrl
fwait
adc
mov
cmpsl
ja,pt
pushf
out
andl
gs
cmp
xor
dec
fldt
mov
inc
dec
je
jmp
sahf
in
mov
fisubrs
fs
mov
cld
jmp
push
lea
int
inc
mov
dec
imul
iret
ror
inc
in
rcr
fldl
push
aad
add
xchg
add
sub
jno
add
inc
out
cmpsb
in
mov
mov
pop
jnp
call
xchg
cli
push
mov
jns
bound
out
inc
shld
inc
iret
ret
dec
mov
xchg
xchg
cmpsb
xor
in
jmp
clc
mov
jmp
jg
clc
int
outsl
int
adc
js
mov
int
push
ds
mov
popf
or
dec
push
pop
rorl
out
lret
in
sbb
clc
push
cmpsb
dec
push
jmp
rorl
xchg
sbb
bound
test
xor
add
push
xchg
cltd
push
out
xor
das
cmp
lods
xchg
jg
and
lahf
pop
insb
faddl
lods
mov
push
in
sub
sbb
repnz
das
dec
push
and
shrl
xchg
fcmovnb
rcr
cmpsl
es
inc
xor
jp
test
repz
cmp
test
jns
push
mov
out
mov
and
or
cmp
inc
cs
js
dec
mov
adc
xchg
jnp
cmp
testl
cli
mov
and
out
mov
jns
or
bound
je
xchg
aas
pop
mov
loope
mov
xor
cmp
sti
add
xor
ja
mov
or
out
aas
add
test
es
out
divl
shl
mov
dec
or
push
aad
imul
out
xor
sbb
mov
movsb
inc
jo
sub
pop
push
cmp
and
pop
xchg
cmp
sbb
xchg
pop
sbb
xchg
push
bound
movl
bound
ljmp
sbb
pop
pop
mov
mov
jb
or
or
js
mov
add
insb
pop
mov
sbb
sahf
jo
or
cmp
into
mov
sbb
push
sbb
repz
aam
int3
lcall
mov
lea
mov
ljmp
xchg
dec
ds
xor
mov
inc
fsubrs
test
jg
jo
mov
xlat
or
inc
mov
inc
jle
pop
xchg
gs
push
push
mov
shrb
xchg
int3
cs
mov
and
jl
call
ficompl
psllw
in
jmp
adc
push
mov
call
lods
repz
pop
repnz
sbb
add
nop
cmc
lret
sub
mov
and
mov
pop
loopne
sub
test
in
jp
lret
push
xchg
jmp
push
push
push
pop
mov
xchg
jecxz
inc
in
sub
jle
mov
stc
cmpsl
lret
sbbb
sbb
xchg
cmp
test
dec
adc
mov
cmp
aam
mov
sub
pop
popa
pop
in
int
and
xchg
cmc
xchg
pop
rcr
mov
repnz
out
ret
cmpxchg
outsb
mov
insl
xchg
aam
add
cwtl
lret
mov
jns
xor
or
js
mov
inc
inc
shr
popa
ds
push
pop
fisttpl
iret
iret
cmc
fsubrl
pop
sarl
sbb
repnz
mov
mov
clts
aam
cmp
sbb
icebp
cli
cli
xchg
push
inc
jb
and
stos
inc
adc
outsl
clc
daa
jne
pop
dec
insb
mov
inc
dec
dec
sbb
out
fldenv
dec
jb
in
sub
or
cmp
enter
mov
je
int3
in
sub
into
adc
test
loop
fdivrs
std
jg
xor
test
inc
scas
cmp
fcomp
stc
xchg
sbb
popa
cld
lret
fcmovne
adc
push
mov
out
dec
rclb
cmp
and
mov
push
mov
lock
pop
push
addr16
sbb
lea
xor
mov
xchg
in
jmp
inc
xchg
inc
add
pop
jle
insb
mov
mov
inc
xor
push
sbb
lret
js
or
cmp
mov
push
in
test
or
or
movl
or
adc
in
add
fcompl
inc
cs
mov
into
lock
stos
push
sub
fsub
cmp
or
cwtl
mov
das
add
lcall
iret
ss
enter
push
scas
imull
call
mov
mov
dec
mov
cmp
inc
jmp
clc
mov
in
dec
jns
push
in
xor
mov
mov
mov
popa
stos
ret
js
ljmp
push
sarb
pop
mov
mov
test
or
sub
pushf
sbb
mov
mov
mov
in
stos
lods
outsb
dec
inc
or
add
xor
or
cmp
popf
out
xchg
xor
mov
cmp
pop
scas
insb
sbb
adc
stos
sti
or
loopne
pop
push
shl
cmp
cmpsl
jns
mov
and
dec
outsb
popa
add
xchg
push
sbb
or
stc
mov
data16
adc
scas
mov
sub
inc
mov
repz
xor
cmc
xor
and
cmp
push
xor
inc
cmp
es
fmuls
dec
jle
or
mov
push
fiadds
aad
stos
sub
popl
hlt
movsb
push
inc
je
popa
sub
loopne
adcb
sbb
scas
mov
mov
arpl
mov
xchg
bnd
or
mov
mov
push
imul
imul
mov
pop
repnz
movsl
mov
lods
test
bound
and
xor
sub
pop
out
sub
xchg
mov
cltd
sub
push
leave
jecxz
jecxz
xor
scas
cmp
add
inc
adc
ds
push
popa
xor
rclb
pop
in
adc
sbb
mov
pop
lea
lods
mov
and
jo
mov
mov
in
adc
pop
into
pop
fbld
xchg
lcall
dec
jnp
adc
in
mov
repz
out
test
mov
mov
xor
shlb
sub
push
mov
in
in
mov
popa
ja
fdivr
outsb
lock
pop
hlt
sub
push
shrb
movsb
mov
out
ret
sbb
mov
push
xchg
addr16
jnp
cmp
or
lcall
ret
test
in
mov
lret
sub
pop
dec
dec
push
cli
lock
nop
cmp
adcl
iret
mov
cmpsl
pop
sbb
sbb
push
orb
mov
cmpsb
leave
out
imul
ja
sub
or
stos
lock
xbegin
pop
sbb
sti
cmp
loope
push
ja
pop
popa
inc
inc
add
shrb
int3
jmp
cmc
pop
add
dec
xchg
addr16
inc
push
imul
iret
cmp
mull
mov
int
inc
push
loopne
sub
inc
das
jecxz
xchg
push
cmpl
mov
into
out
dec
out
and
and
or
in
cmpsl
sbb
jg
jo
xorl
les
or
mov
mov
das
outsb
insl
xchg
mov
jo
xchg
mov
or
inc
jle
nop
push
lahf
out
lock
cli
jb
fisubrl
mov
std
jb
push
jne
rcrb
push
lods
les
aaa
cld
dec
cmp
xor
push
mov
outsb
jg
mov
dec
jne
xor
xchg
mov
es
aas
adc
iret
loope
and
or
add
test
ret
inc
popf
pushf
into
cmp
mov
lea
sbb
dec
test
add
lcall
jge
lahf
mov
rorb
int
mov
dec
repnz
mov
faddl
lret
in
pop
in
or
xchg
cwtl
dec
cmp
loopne
mov
ss
adc
sti
inc
jmp
fdivrl
lds
fildl
insb
shll
inc
mov
sub
adc
test
gs
add
clc
xor
jmp
sti
lock
std
mov
shll
mov
mov
movsb
aad
in
dec
push
out
pop
add
aam
mov
pop
aad
leave
or
cmp
xchg
bound
xchg
mov
pop
xor
mov
outsb
inc
hlt
cmpsb
imul
pushf
addr16
sbb
into
in
cli
add
cmp
into
dec
inc
lock
iret
push
lahf
pop
jl
sub
cmp
xchg
test
jl
lds
inc
in
lret
lds
push
aad
dec
out
shl
mov
decb
fsubs
add
popa
adc
cmpsb
jns
inc
pop
cld
bound
je
sahf
cmp
jmp
shlb
scas
mov
scas
xor
xor
insb
test
sarl
xchg
cld
fmuls
aas
pusha
xchg
add
inc
jge
adc
imul
lret
fildl
ja
push
sub
mov
sahf
scas
mov
push
push
je
lods
add
xchg
in
inc
mov
sub
push
push
cmp
int3
xor
inc
mov
adc
std
add
mov
mov
jnp
out
push
out
repz
adc
popf
lret
sub
fcoml
cvttps2pi
jo
bt
shrl
sti
cmp
mov
xchg
xchg
cmp
test
in
in
fdivl
fs
and
cli
sub
pop
sub
and
lds
dec
cmp
outsb
into
mov
add
sub
xor
and
adc
adc
pop
out
add
sub
hlt
pusha
add
sub
ficompl
jae
ljmp
dec
out
jg
xor
movsb
sbb
jmp
sbb
sbb
je
daa
stos
pop
ss
mov
jnp
imul
out
xor
and
ret
ret
sub
in
jmp
fimuls
push
mov
add
sahf
out
sbb
aaa
loopne
and
loop
xchg
sbb
xchg
pop
lds
sbb
movb
lcall
cli
rcrb
push
push
pop
js
pop
or
mov
add
cwtl
cwtl
mov
mov
add
in
fsubs
cmp
xchg
push
xchg
sub
fwait
sub
push
adc
out
or
push
xchg
pushf
mov
jae
insb
cmpsl
movups
icebp
adc
xor
mov
out
cmpsb
aaa
or
in
mov
icebp
jne
push
cs
mov
aas
pop
ficoml
jnp
mov
ret
mov
xchg
inc
pusha
mov
mov
cmp
xchg
mov
adc
mov
cmp
cmp
lock
xlat
push
inc
mov
test
add
fdivs
sbb
sbb
sbb
repnz
and
push
jle
lods
imul
jns
add
lock
jg
jo
sub
sbb
test
fsubrl
int
sar
jge
arpl
mov
and
cmp
aam
stos
movsb
inc
stos
test
imul
iret
imul
sbbb
jl
pop
push
mov
jns
mov
fistl
cmpsb
rol
push
inc
test
pop
lds
aas
ficoms
dec
loop
aas
cmp
adc
push
shll
push
cmp
pop
jecxz
pop
popf
cmp
clc
sub
out
or
xor
inc
std
dec
sbb
and
ja
adc
mov
stos
movsb
dec
scas
pop
jbe
pop
mov
mov
bound
push
cli
mov
xor
xchg
sti
mov
push
cmpsl
int
xor
pop
std
in
push
bnd
addl
xchg
cmp
int3
adc
shll
pusha
jp
sbb
enter
jnp,pt
cmpl
mov
inc
call
cli
out
cmp
xchg
xor
out
or
push
mov
xor
roll
test
js
loope
dec
icebp
shll
jle
std
data16
jp
pop
inc
push
testb
cmp
int
js
sub
mov
les
sbb
jmp
xlat
sbb
and
jne
frstor
ret
aam
negb
dec
jl
xor
fwait
out
mov
jmp
or
hlt
aaa
ret
xchg
ljmp
lret
add
movsl
js
ljmp
cmp
mov
insb
xor
mov
repnz
jns
mov
push
xchg
xor
gs
ficoml
leave
lret
xchg
fs
jns
mov
into
test
addr16
into
push
xor
push
pop
scas
adc
iret
fadds
movsl
add
adcb
ljmp
out
fwait
sahf
nop
xchg
repz
dec
xor
jbe
je
bound
lock
inc
cmp
jp
je
insl
sbb
cwtl
cmp
or
sbb
cmp
lret
mov
lods
mov
push
cmpsb
sbb
mov
decb
stos
sub
inc
sbb
or
lods
ljmp
mov
xchg
vandnps
cwtl
push
repz
push
faddl
push
stc
or
js
repnz
jbe
popa
sti
xor
mov
lret
test
lret
sbbl
shll
mov
outsb
insl
jns
inc
orps
dec
cmpsl
or
pusha
stos
jecxz
lahf
add
sbb
xor
mov
inc
jp
jmp
inc
aam
testb
lret
pop
push
xor
in
or
clc
lcall
inc
orl
test
out
xchg
mov
test
cwtl
cs
push
mov
cli
rcll
movsl
neg
lahf
pop
jmp
rcll
loope
inc
sub
xor
dec
scas
iret
lock
test
mov
ljmp
lods
es
mov
jl
add
popf
pusha
sub
xchg
adc
fisubrl
decb
in
stc
cli
fistpl
mov
mov
xor
cmp
add
push
pop
aas
inc
lret
xor
mov
sahf
out
push
adc
lcall
in
xor
std
push
adc
jecxz
and
push
mov
nop
call
lds
stos
lods
les
mov
sbb
mov
pop
jne
or
mov
mov
in
lods
lock
mov
jae
mov
icebp
pop
mov
fldcw
mov
test
repnz
loop
jno
add
pop
mov
sub
jno
xor
xchg
pop
adc
xchg
or
xchg
outsb
call
sahf
movsl
cli
jnp
cmp
pushf
push
dec
mov
jl
push
out
xor
je
push
xchg
add
rorb
mov
out
xor
dec
xchg
mov
inc
mov
mov
adcb
pop
cmp
push
xor
dec
sub
lahf
nop
jge
xor
test
sbb
imul
cmp
js
sbb
jp
cmp
inc
sub
cmp
call
jo
test
shll
daa
dec
leave
hlt
es
add
sub
mov
mov
mov
mov
ja
mov
outsb
ret
push
push
arpl
inc
daa
lret
pop
sbb
xchg
js
mov
dec
sbb
out
call
mov
sbb
ja
cmp
mov
or
add
push
or
stos
adc
adc
ffree
sub
popa
jl
in
mov
xchg
push
sbb
shrl
cmp
mov
sarb
out
icebp
push
fbld
hlt
push
cmp
nop
jge
xchg
loope
mov
mov
mov
sub
fcomps
pusha
int
mov
jmp
jno
cld
jmp
mov
sbb
cmp
cs
lods
das
fwait
inc
test
mov
popf
inc
cmpsb
mov
sub
mov
mov
fdivr
ss
test
pop
movsb
fdivrs
hlt
xor
les
pop
xchg
lret
cmp
sub
hlt
scas
add
repnz
icebp
test
fsts
dec
cmc
vpcomgeuq
mul
xchg
shll
cs
aam
addr16
pop
xor
mov
out
popa
dec
popa
call
les
dec
les
mov
mov
xchg
test
or
lds
daa
inc
mov
out
cmp
sbb
inc
push
das
ljmp
lret
xor
int3
fwait
sarl
inc
cmp
outsl
jecxz
mov
fsubl
push
test
mov
rorb
push
int
in
mov
lret
aam
sub
jnp
test
fstpt
cmc
popf
sbb
and
fsubl
inc
scas
pop
add
and
dec
out
cli
pushf
and
pop
out
nop
adc
fcomi
repz
int
sub
je
shrl
pop
pop
dec
fcomps
clc
mov
inc
das
sub
xchg
jg
add
in
mov
pushf
mov
jbe
add
mov
je
or
insb
sub
push
inc
sub
popl
cwtl
pop
and
int
and
fsubs
xor
mov
repz
outsl
xchg
sub
imul
xchg
pop
out
testl
imul
pop
cmpsb
mov
dec
dec
sbb
popa
pop
popf
mov
or
push
ficompl
jmp
sub
inc
lea
outsb
filds
dec
ret
pop
mov
stc
mov
pop
and
sub
xchg
outsb
mov
ljmp
repnz
cmp
inc
jae
xor
add
xor
fisubs
int
pop
xor
mov
mov
movsb
xor
cmc
adc
jns
add
add
push
leave
negb
push
outsb
mov
movsb
lds
test
xchg
arpl
xchg
xchg
cwtl
jge
pop
jge
in
mov
call
sub
fisubs
test
inc
sbb
and
add
clc
sar
in
lds
ljmp
push
insb
mov
test
outsb
or
dec
addr16
sbb
das
cltd
cmpsl
insb
mov
sbb
and
insb
test
push
add
pusha
mov
sbb
jbe
mov
xor
in
and
xchg
inc
loopne
push
cmp
add
mov
ds
lret
addb
in
jecxz
cmp
and
and
push
adc
and
mov
jb
dec
leave
push
popa
repz
and
pop
cli
mov
push
popa
xchg
dec
call
mov
vunpckhps
out
je
je
divb
into
push
add
inc
push
int3
sub
pop
mov
in
xchg
jle
push
and
sbb
mov
mov
test
outsb
imulb
ret
push
adc
sub
dec
xchg
std
cmp
add
and
fildll
shrb
jbe
jp
arpl
jae
mov
pop
xchg
xor
aad
and
xchg
sub
mov
push
add
mov
or
neg
leave
addr16
sub
or
lds
daa
mov
loope
pop
lds
mov
cltd
jmp
mov
stos
jg
jne
xor
std
ds
scas
fistpll
repz
sti
aas
inc
cld
stc
jp
mov
or
pushf
into
push
jo
jno
cmp
jb
das
mov
shlb
clc
jl
daa
test
mov
call
add
test
mov
div
out
or
out
loopne
push
push
pop
inc
das
and
adc
lds
stc
lods
fwait
push
jo
add
pop
jne
jp
mov
push
mov
adc
popf
inc
rcll
dec
pusha
mov
sbb
add
dec
jns
dec
int
fistpll
pop
rcl
ss
and
sub
pop
inc
scas
insl
nop
sub
dec
cs
cmp
push
or
push
arpl
in
inc
dec
rcrb
mov
stc
xorl
adc
in
jno
inc
mov
roll
inc
xlat
xor
mov
jmp
jp
jne
clc
lcall
push
sbb
pop
xor
and
insl
jbe
les
xchg
ret
out
out
sbb
sub
pop
int
test
lds
xor
scas
fstpt
cmp
sub
icebp
fimuls
pop
aad
leave
and
inc
fistpll
repnz
pop
pop
cmp
iret
sub
ret
jle
mov
add
cmpsb
xor
adc
pop
or
push
jnp
sti
mov
sahf
pop
flds
mov
dec
sbb
xor
stos
xchg
inc
jg
sbb
xchg
sbb
addl
outsl
or
cltd
mov
movsb
jecxz
jo
pop
pusha
or
sub
negb
pop
sbb
dec
mov
xchg
add
iret
push
mov
mov
test
jno
scas
xor
lret
repz
inc
mov
pop
mov
xchg
mov
sub
dec
adc
pop
jle
xor
stos
icebp
dec
push
dec
mov
pop
xor
repnz
sub
mov
inc
pop
and
push
jmp
push
les
adc
shll
jne
ret
adc
int
xchg
sbb
xor
loop
cmp
cmp
sbb
imul
push
orb
jb
and
bound
cmp
leave
lods
notl
add
scas
sti
jne
jecxz
and
sub
mov
adc
sbb
out
xor
lcall
daa
rclb
mov
mov
dec
push
jae
inc
cmpsl
ljmp
ja
or
scas
push
jl
insl
mov
jbe
movsb
leave
dec
in
inc
inc
mov
lea
mov
cs
lock
cmpb
pushf
into
jle
rorb
mov
dec
inc
and
xchg
aaa
push
inc
pop
enter
das
icebp
inc
pop
jle
or
lods
stos
cld
xor
ss
fidivrs
je
insl
ja
clc
call
call
aaa
pop
movb
js
mov
mov
subl
sub
inc
lods
mov
les
fcoml
or
jecxz
or
fsubrs
movsb
cmp
or
out
dec
shll
fistps
xchg
mov
mov
sahf
enter
xor
arpl
ljmp
mov
xor
fwait
add
mov
jmp
scas
mov
and
xor
and
shlb
jne
mov
nop
dec
lret
or
lods
scas
movsb
sahf
test
mov
adc
mov
mov
xchg
jnp
rcr
jno
pcmpgtb
mov
fnstcw
movsl
push
sbb
pop
jo
sbb
dec
lock
fcomps
repz
aad
xor
push
xchg
xor
mov
shll
cmpsl
pop
mov
iret
xchg
inc
cmpsb
add
daa
sarl
lret
popf
inc
push
out
cmp
pop
cmp
lods
or
ss
int3
leave
xor
dec
aaa
sbb
cs
mov
rcrl
xchg
ret
fndisi(8087
or
in
in
jp
insb
fsts
imul
fst
das
in
out
pushf
pop
mov
outsl
adc
mov
movsb
mov
sbb
mov
mov
mov
sub
ljmp
mov
stos
rcr
mov
and
cli
xor
out
stos
mov
push
mov
jl
and
and
cwtl
jle
jmp
insb
dec
adc
or
imul
iret
add
mov
std
cmp
lock
jmp
sti
jae
pop
clc
lds
mov
pop
insl
movsl
mov
imul
dec
mov
aas
pusha
and
mov
testb
pop
outsb
dec
xchg
das
mov
inc
or
jecxz
movsb
mov
mov
mov
loop
scas
orb
jns
inc
pop
sbb
push
jb
test
gs
in
test
add
fs
stos
cmp
xchg
popa
add
test
jb
cmpsb
aaa
mov
pop
lahf
outsl
rol
inc
es
cmp
dec
mov
in
icebp
nop
mov
js
fbld
imul
cld
mov
inc
and
sub
jg
mov
push
and
add
lods
xchg
xchg
xchg
js
imull
rcrl
cmpsb
cmp
test
in
cs
dec
and
cmpsb
or
shll
jecxz
mov
push
repnz
jg
mov
or
shl
bound
cmp
sub
dec
les
push
divb
mov
cmp
pop
inc
sbb
jp
ljmp
and
ja
dec
mov
into
lea
jmp
mov
popa
loopne
test
push
sbb
fsts
pushf
test
xor
in
js
xchg
aam
cmp
cmp
inc
fcmovbe
jmp
loop
mov
xchg
repz
mov
inc
inc
aas
orl
push
ljmp
loopne
test
cli
cwtl
imul
add
insb
add
mov
xchg
daa
scas
inc
push
shlb
sbb
jae
imul
inc
push
ja
sbb
mov
pop
ljmp
inc
jge
into
xor
xorb
popf
imul
cmpsb
imul
dec
lods
insb
aad
fwait
or
push
jne
stos
cmp
mov
aas
xor
in
pop
jecxz
xor
dec
cmp
xor
or
adc
jnp
add
and
insb
cmp
cmp
mov
subb
lahf
dec
mov
call
jg
hlt
inc
xchg
xor
cmp
into
pop
sub
pop
cld
sub
dec
sbb
cltd
add
inc
xchg
lock
and
js
ret
jns
and
dec
mov
popf
pop
sbb
mov
inc
das
mov
dec
push
out
sub
inc
mov
stos
stos
ret
or
sbb
repz
scas
ss
iret
lcall
push
loopne
fwait
daa
add
dec
adc
je
jb
incb
cld
jb
test
lcall
fimull
push
loopne
into
enter
out
je
movsb
cmc
stos
adcl
loopne
dec
mov
stos
cmp
in
mov
aaa
push
mov
pop
pop
adc
and
das
dec
arpl
pop
orb
and
add
addb
jg
int
pop
push
cmp
lea
enter
test
fistpll
add
fdivs
fldl
cmp
or
mov
or
push
and
movsb
popf
jle
pop
fists
xchg
cmp
test
push
or
and
lea
bnd
jge
iret
dec
cmp
push
shlb
and
xor
push
jl
test
push
jo
test
leave
add
loop
lock
sahf
lcall
shll
jae
ret
sub
jne
jg
mov
shr
mov
sti
popa
pop
fimull
add
insb
cmp
orl
insb
std
insb
mov
hlt
mov
inc
call
orl
jnp
mov
jecxz
jno
into
std
jb
push
and
xchg
dec
add
es
fucomip
jae
addb
add
test
inc
xor
dec
sub
push
adc
or
mov
jo
out
std
aaa
or
rclb
in
addb
xchg
insb
sub
fsubr
aam
sub
push
cmc
pop
cmpl
adc
insb
icebp
cs
mov
xor
cmc
push
enter
shrl
leave
or
mov
push
js
stos
cmp
xor
call
orb
pop
adc
popf
mov
or
jp
mov
mov
xor
xchg
xlat
jmp
sbbb
in
pop
pusha
stos
jne
js
arpl
outsl
cmc
popf
shl
in
mov
cmp
mov
mov
mov
mov
imul
call
jl
add
in
adcl
subb
push
fwait
insb
lock
mov
lahf
inc
fistpll
lock
and
dec
xchg
sbb
sub
and
call
push
or
mov
mov
push
cld
dec
mov
inc
or
mov
sub
pop
lods
stc
sbb
repnz
or
xchg
in
jb
repnz
push
inc
mov
clc
fcmovne
fs
sbb
xchg
fwait
cmc
daa
mov
mov
les
ljmp
ret
repz
push
inc
pop
jo
pop
jne
and
daa
aad
fildll
rcrb
xlat
sub
addr16
sbb
cmpsb
cmp
daa
gs
test
iret
imulb
jl
inc
in
dec
js
mov
push
xchg
mov
and
mov
mov
or
mov
adc
jmp
inc
outsb
add
nop
clc
pop
in
pop
xchg
inc
loop
sarb
sahf
ds
ja
test
dec
dec
xorb
add
dec
addb
mov
mov
loope
mov
xchg
aas
jb
pop
mov
lahf
sahf
idivb
dec
call
ret
pop
add
mov
inc
out
dec
mov
pop
nop
lahf
fisttpl
lret
sbb
push
movsb
mov
int
sub
les
mov
jle
scas
inc
loop
pop
aas
mov
lock
ljmp
stos
inc
pop
filds
xchg
jle
movd
aad
cmp
cmp
sbb
mov
rcr
shlb
test
enter
fidivl
add
shlb
ror
sti
or
xchg
int3
mov
mov
into
cwtl
and
repnz
in
cmp
push
sub
dec
lahf
ret
cmpsb
mov
xlat
jmp
in
pop
scas
inc
out
and
mov
arpl
arpl
push
mull
insb
fadd
outsl
imul
mov
mov
ljmp
icebp
mov
xchg
cmp
xchg
jns
cmpsl
push
test
xchg
mov
xor
mov
sub
lret
lods
jo
out
mov
aas
sarl
gs
mov
push
add
and
inc
push
pushf
pop
cmp
add
mov
stos
cs
mov
test
cmc
xchg
mov
test
pop
mov
test
jnp
loopnew
push
xor
jp
lods
stos
mov
mov
xchg
cwtl
mov
or
arpl
push
push
cmp
mov
nop
jecxz
push
in
add
push
adc
sbb
leave
sbb
mov
shll
mulb
push
arpl
fimull
sbbb
es
data16
xor
mov
xchg
test
jne
inc
sub
repnz
outsb
lret
mov
test
repnz
sbb
movsl
nop
dec
pop
lods
ret
fdiv
mov
jle
jge
pushf
aas
stos
rcrl
hlt
je
add
mov
fwait
dec
pushl
bound
arpl
and
into
aad
icebp
shlb
and
ss
push
pop
cwtl
lds
jns
dec
adc
add
jp
ss
psubq
inc
insl
xchg
mov
shll
add
repz
les
jge
lret
push
jne
fldt
adc
jmp
mov
mov
xchg
cmp
cmc
cmp
jge
mov
sub
fnsave
sub
mov
jp
adc
lcall
into
jnp
data16
jl
pop
pop
cmpsb
mov
pop
jno
inc
inc
test
testl
ss
push
adc
fbstp
addr16
sbbl
sub
or
es
fiaddl
nop
xor
roll
mov
fdivrs
jge
pusha
call
inc
xchg
test
and
push
les
stos
xchg
pop
sub
and
jo
mov
popa
shll
loop
mov
lock
push
fbld
mov
popa
pop
dec
fwait
ds
test
xchg
nop
aad
or
or
dec
mov
bound
mov
loopne
xor
test
sbb
int
push
mov
mov
cmp
aas
gs
daa
cmp
inc
into
sahf
inc
xchg
es
aad
mov
mov
jge
xchg
dec
sbb
sbb
sbb
xor
sbb
bound
adc
dec
or
jbe
push
adc
xchg
cmp
scas
cmpsl
scas
lahf
pop
inc
stc
sti
mov
jns
jle
dec
scas
xor
push
and
jmp
pop
inc
popa
mov
dec
inc
jno
mov
rcll
sbbl
push
and
xor
loop
and
faddl
loop
jp
sub
nop
arpl
xor
mov
jnp
mov
cmp
fists
jno
cmc
loope
enter
or
test
pop
jg
cld
mov
jg
dec
mov
and
test
clc
jns
or
movsb
orl
popf
inc
sti
and
arpl
std
dec
fildll
pop
js
cmpl
in
push
jno
xchg
sbb
into
aaa
ret
lods
xor
std
enter
mov
stos
jne
sahf
cli
cmp
mov
jno
mov
loope
lods
sbb
sbb
and
daa
cmc
or
jmp
sbb
jo
mov
popa
cmc
cltd
scas
and
std
jne,pt
mov
fnsaves
ret
jl
mov
movsb
stos
emms
jbe
icebp
shrl
mov
fcomi
push
push
mov
xchg
ds
repnz
sar
fcoms
sar
or
mov
inc
or
jg
in
pop
push
mov
jl
or
data16
cmp
movsb
iret
fcomi
add
leave
aas
test
jno
xchg
cmp
xchg
subb
dec
jns
pop
xchg
cmpsl
add
sbb
push
aaa
cmpsl
add
arpl
and
cmp
jnp
xchg
cmp
mov
lods
mov
adc
pop
aas
test
hlt
inc
xchg
xchg
loop
or
mov
filds
jne
inc
hlt
in
pop
pop
jb
fildl
push
fdivl
dec
ja
and
fnstcw
xchg
arpl
push
inc
cmp
adc
jno
movsw
test
add
sbb
jae
test
out
ja
sub
aad
in
add
insb
test
arpl
out
test
lret
movsl
stc
frstor
fs
mov
les
or
adc
or
dec
testl
leave
adc
fst
shl
xchg
mov
in
sub
push
inc
add
ret
push
adc
loope
popf
arpl
or
std
shll
out
inc
int3
inc
mov
ret
pop
push
imul
sbb
xchg
les
push
sub
test
mov
pop
cmp
popf
stc
add
or
fs
imul
xor
push
adc
movsl
ret
xor
shlb
ficompl
lds
adcb
mov
sub
sbb
js
adc
loopne
xchg
sub
and
fadd
sbb
out
ret
out
sub
add
cld
jo
fcomps
jae
or
or
pushl
inc
enter
inc
movsb
fldcw
leave
loop
std
lret
repz
mov
sbb
add
daa
mov
cmp
lahf
mov
stc
pushf
testb
push
clc
mov
mov
in
push
fnsave
scas
xor
rclb
movsl
sahf
cmpsb
dec
addl
xor
test
cld
fstps
out
xor
cmp
loope
or
sub
ljmp
ds
int3
mov
push
fcompl
mov
les
ret
inc
jno
push
movsl
jnp
mov
and
fisttpl
mov
out
push
mov
ds
mov
js
mov
subb
stos
jb
pop
mov
subb
cmp
je
push
mov
fs
mov
arpl
fsubp
fcomi
xchg
or
ljmp
inc
adc
xor
shrb
dec
call
jmp
test
adc
or
sub
movsl
sti
xchg
mov
outsb
test
int3
dec
push
iret
fadds
insb
movsb
xchg
sbb
movsl
xor
inc
bound
push
sub
enter
mov
jo
dec
mov
stc
nop
adc
adc
popa
push
mov
inc
push
xchg
aas
and
xor
pop
aaa
leave
ljmp
ret
sub
fldcw
sahf
push
outsl
jne
pop
lock
mov
mov
jbe
cmp
in
ficomps
ja
pop
jnp
test
aas
cmp
and
jecxz
orb
mov
pop
xor
push
mov
movsl
jle
shll
andl
push
imul
gs
push
test
fs
rorb
rorl
add
outsb
push
sbb
mov
push
sub
movsb
jne
fwait
jns
and
mov
ljmp
sub
mov
or
or
mov
xor
jp
dec
arpl
add
pop
loope
cs
stos
popf
test
xchg
in
sub
sbb
stos
inc
push
aaa
pmaxsw
jns
xchg
imul
push
outsb
mov
stc
ficoml
out
cmp
sti
sbbl
add
lret
sub
negl
cmpsb
push
loopne
dec
push
pop
pushf
icebp
and
sub
stos
fstl
out
arpl
inc
sub
mov
jge
adc
jecxz
mov
cmp
jno
adc
cmp
test
jbe
or
ret
das
cmpsb
insb
xchg
repnz
loopne
mov
cld
mov
xchg
shlb
pop
cmp
mov
mov
cmp
popa
cwtl
inc
mov
into
adc
imul
jbe
cmp
inc
mov
and
push
in
pushf
stc
pushf
imul
fs
int
nop
lret
push
test
mov
lahf
test
insl
jl
setle
add
lods
pusha
loopne
mov
in
mov
and
loop
xor
fisubl
addr16
xor
mov
jge
jecxz
mov
adc
jb
mov
jne
cwtl
js
jg
jp
sbb
cmpsl
les
sbb
call
inc
loope
adc
test
dec
xchg
scas
xorl
aad
mov
decl
mov
add
xchg
enter
pusha
mov
inc
lods
fwait
mov
cmp
mov
jae
jns
scas
push
inc
xchg
aaa
xchg
div
pop
dec
inc
ja
mov
cld
cwtl
mov
xchg
mov
fisubs
bound
and
lds
insl
jecxz
inc
lods
push
cmc
dec
imul
dec
mov
adc
fidivl
imul
push
pop
scas
movsb
adc
out
rolb
xlat
test
loope
test
xor
lods
adc
fdivr
pop
mov
sbbb
inc
cmp
jae
mov
into
and
cmp
push
adcl
addr16
jmp
scas
iret
ja
sub
repnz
pop
mov
fisubl
mov
iret
xchg
roll
addr16
dec
shlb
pop
outsl
and
or
mov
jecxz
lea
or
in
cwtl
in
dec
mov
dec
sbb
or
aam
lods
bound
mov
mov
mov
out
xor
inc
and
rclb
roll
dec
addr16
ret
inc
repz
dec
adc
mov
cs
xor
inc
ss
pop
fsubl
cmc
hlt
or
out
cmc
xchg
mov
jge
test
imul
push
cld
add
cmp
xchg
pop
aaa
arpl
jg
push
sub
mov
test
xchg
push
xor
dec
and
aad
lret
mov
adcb
push
addr16
push
mov
add
call
pushf
jl
or
adc
lods
or
iret
in
inc
push
add
xor
mov
sar
mov
add
add
cwtl
or
xchg
enter
mov
push
lods
es
xor
cmp
fs
gs
aaa
enter
paddusb
mov
std
xor
fwait
mov
fists
add
mov
popf
std
dec
outsb
jge
cmpsb
xchg
ljmp
icebp
jno
mov
or
pop
jae
mov
mov
shll
xor
inc
jle
mov
gs
inc
cmp
out
cmp
pop
in
in
ficompl
xchg
ret
adc
xor
or
in
sbb
nop
outsb
adc
lods
rolb
push
scas
data16
sbb
sub
scas
fisubrs
xor
fisttps
xchg
ja
repnz
rcl
ficomps
inc
lret
mov
xor
sbb
dec
push
maxps
pop
aad
add
dec
outsl
das
and
out
cld
mov
and
mov
inc
pop
jbe
hlt
dec
sti
sub
fcomi
dec
and
sub
mov
or
xor
inc
adc
mov
outsl
or
cmp
mov
or
clc
add
call
inc
addr16
add
dec
push
push
adc
sub
push
inc
sti
imul
rcll
add
mov
cmp
push
jp
lahf
decl
xor
inc
testb
pop
popl
test
cmc
cs
adc
outsb
ja
test
lods
sahf
int3
scas
mov
or
rcrl
jno
mov
xchg
sub
imul
mov
xchg
and
movsb
pop
movl
mov
xor
pop
push
xrelease
fmull
sbb
xchg
xchg
sub
cmpsl
fsubr
sub
cld
lds
jbe
jg
mov
push
xor
lcall
inc
and
pop
or
popa
fnstenv
and
imull
and
and
jb
push
fistpl
insb
jbe
mov
test
cwtl
test
scas
mov
cmp
sbb
adc
mov
iret
mov
jecxz
and
push
jp
imul
inc
aad
fsubl
daa
cld
es
add
ret
cmp
shrl
xchg
mov
or
add
pop
cmp
push
pop
or
jg
and
loopne
repnz
movsl
into
in
xor
or
mov
mov
mov
cmp
mov
ljmp
orb
cmp
dec
rorl
mov
daa
xor
addl
lds
xor
fnstenv
jo
dec
mov
outsl
xchg
in
mov
xchg
dec
push
sbb
lret
jmp
mov
mov
cmp
xor
jl
int
jge
int
mov
push
mov
fldl
mov
sbb
pop
mov
mov
inc
fistpl
jns
push
inc
xchg
dec
leave
add
fildl
inc
mov
aam
xchg
repz
gs
fwait
jmp
popa
mov
cltd
cmp
popa
fwait
add
and
xor
aas
stos
or
xchg
mov
movd
push
add
pop
mov
pop
das
testl
mov
lods
mov
repnz
repz
mov
jns
int3
or
loopne
lcall
jmp
mov
movsb
and
add
int3
pop
ss
jg
ds
pop
xchg
dec
inc
sahf
outsb
and
das
loopne
stos
xor
ljmp
fisttps
mov
insl
xchg
push
lods
out
sbb
sbb
orl
cwtl
popa
fimuls
addr16
out
jb
scas
loopne
add
mov
dec
mov
sub
push
ret
enter
push
mov
sbb
dec
lods
icebp
cld
outsl
imul
shlb
loope
faddp
mov
push
jne
jl
inc
stos
pop
roll
sub
push
adc
loop
sub
outsl
inc
mov
and
aam
stos
ret
ds
inc
pop
mov
add
rorl
jecxz
int
mov
mov
pop
add
mov
jo
test
ficompl
xor
lods
cmp
in
fwait
bound
lcall
rcrb
add
add
and
stc
jae
movsb
adc
mov
inc
sub
negl
fucomip
outsl
leave
es
pushf
jmp
push
in
inc
or
mov
leave
mov
push
repnz
xlat
ljmp
cmp
movsl
sub
sub
dec
fstpt
lret
scas
sub
leave
jmp
pop
popf
jle
dec
in
lcall
das
sti
leave
inc
inc
mov
xlat
movsb
jecxz
lret
lea
lock
jno
notl
movsb
pusha
aam
sbbl
mov
mov
xchg
mov
mov
adc
push
inc
mov
xchg
fs
imul
enter
jb
loope
or
cmp
jge
mov
push
push
jle
aam
lret
mov
sahf
ret
sbb
ljmp
jmp
sti
test
jg
push
sub
adcb
sbb
shr
add
ljmp
icebp
in
mov
jo
mov
or
call
sbbl
inc
xchg
bound
in
jl
insl
sbb
sub
enter
out
xchg
mov
xchg
les
xchg
out
mov
cwtl
sub
sub
push
fimull
or
cmp
cmpl
dec
shlb
sub
mov
xchg
inc
andl
push
repz
add
stos
hlt
adc
xchg
jb
insb
xchg
mov
lea
jb
jns
push
imul
add
imul
push
loope
loope
jno
movsl
es
dec
in
adc
mov
push
ret
sub
push
jg
test
push
mov
mov
sub
in
ret
xchg
cmpsl
dec
xchg
lret
mov
or
cmpb
in
rolb
or
je
inc
mov
addr16
fcmovnu
add
or
mov
add
addr16
mov
lret
sub
xchg
aam
cmp
stos
test
sbbl
xor
push
outsb
mov
cmp
or
push
mov
and
inc
dec
cwtl
gs
inc
xor
adc
push
sub
gs
and
fbld
fstl
es
in
push
imul
inc
repz
dec
xlat
lods
cmpsb
dec
scas
mov
mov
pop
inc
jnp
popf
xchg
insl
jno
or
lea
xchg
hlt
lods
jle
fidivrs
mov
xchg
in
or
and
repnz
mov
xlat
sbb
lods
fwait
adc
inc
jle
dec
into
outsb
jle
stos
dec
shrl
lea
pop
and
mov
mov
lahf
pop
fsts
mov
cwtl
sbb
int3
std
jne
adc
lock
and
in
add
dec
mov
xchg
lods
lcall
xor
jmp
nop
and
cld
push
sub
add
cmp
in
xor
enter
adc
jnp
adc
aas
xlat
fs
shll
fs
cmp
dec
xlat
lret
mov
sbb
cmc
mov
xchg
fstpl
stc
fs
lcall
and
enter
lock
mov
pop
scas
sub
hlt
jle
hlt
mov
scas
das
jg
and
mov
mov
cmp
inc
cmp
xor
sub
scas
loopne
int3
fimuls
imul
test
jb
iret
data16
in
xor
or
xchg
xlat
inc
sbb
cmpsl
hlt
mov
pop
inc
push
xchg
out
and
mov
pop
add
cmc
mov
fdivs
ja
clc
pop
aas
mov
jmp
mov
adc
popf
xchg
xor
lret
cmpsb
ficoml
lea
dec
mov
and
xor
out
add
mov
or
in
jl
shl
push
mov
push
adc
adc
stc
push
loop
inc
jbe
out
lret
out
push
sahf
add
xchg
mov
cmp
dec
daa
push
rcl
cmp
loope
out
enter
enter
ss
and
imul
or
mov
dec
mov
and
test
push
sbb
cmp
mov
lock
lock
sub
rolb
cld
push
out
mov
sub
cmpb
push
pop
mov
sub
adc
xchg
xchg
sub
mov
lds
repnz
or
dec
repz
fcmovbe
dec
cmp
inc
icebp
adc
lea
popa
mov
xlat
mov
jno
mov
clc
lret
mov
pop
jae
inc
sbb
inc
out
mov
mov
push
sbb
rcrl
inc
xor
adc
dec
jl
icebp
sbb
dec
and
int3
shrl
xchg
add
adc
pop
cli
pop
in
popa
cmp
sbb
sarb
loop
mov
int3
adc
test
out
in
push
call
jmp
cmc
out
dec
dec
lea
adc
push
jecxz
subb
rep
repnz
sub
stos
sbb
cmp
int3
imull
ficoml
out
and
imul
in
lcall
lret
and
scas
xor
push
cmc
mov
xor
movb
mov
and
movl
aaa
and
add
rcr
in
mov
inc
test
xchg
push
mov
out
mov
lods
divl
es
dec
lahf
pop
adc
mov
push
xchg
out
cmp
add
roll
jns
test
stc
arpl
fstl
inc
pusha
and
inc
add
push
dec
inc
mov
pop
lock
rcll
inc
pop
iret
push
mov
mov
shll
leave
ja
xchg
pop
push
out
inc
cmp
jle
jmp
jp
mov
jo
sbb
inc
adc
inc
xor
or
out
aam
aaa
fists
cmp
insl
fwait
outsb
cmpl
fistps
jb
out
xor
fsubrl
mov
cmp
inc
xchg
shrb
loope
les
push
icebp
fisttpl
cmpsl
jbe
jle
cmpsl
jb
scas
jg
inc
ret
inc
scas
rep
pop
leave
mov
sbb
xor
push
stos
xchg
addr16
xor
jl
dec
js
push
rcrb
out
lret
and
lods
adc
push
push
pop
ja
xchg
sub
aaa
out
xor
sub
lods
xlat
mov
sub
leave
sbb
fwait
mov
inc
mov
inc
jg
addr16
jmp
cld
mov
xchg
xor
pop
cmp
inc
clc
imul
or
outsb
and
mov
adc
add
fnstsw
dec
mov
out
popa
lret
add
jmp
jmp
fisubrs
aam
cltd
fstpl
sbb
cmp
testb
jg
push
and
xor
call
in
arpl
pop
sbb
sbb
test
xor
icebp
test
andb
xor
sub
mov
xor
negl
lods
mov
push
icebp
and
cltd
sub
sbb
mov
jb
aaa
sbb
in
std
lahf
mov
lods
adc
pop
mov
ljmp
mov
je
cmpb
ljmp
les
dec
cltd
outsl
orl
loopne
lods
cmp
cmpsb
push
call
popa
sub
xchg
cmp
xor
xor
mov
sub
push
aad
mov
add
test
xlat
dec
cmp
sbb
mov
arpl
push
dec
divl
in
es
orb
dec
jle
mov
inc
mov
push
jmp
cmp
out
fcomi
out
inc
je
and
jl
or
or
xchg
mov
loopne
loopne
fisubrl
outsl
xor
xchg
sbb
lahf
sub
daa
in
jl
movsl
inc
lret
loopne
std
mov
cmp
movsb
sbb
xlat
bswap
sub
ja
leave
testl
divb
ljmp
pop
test
push
in
hlt
pop
fnstenv
inc
cs
jp
test
push
paddsb
bnd
xor
and
add
cltd
shrb
jns
sti
outsb
call
sub
mov
movsb
out
gs
pop
out
cmpsb
cmpb
xor
inc
cmpsb
mov
xlat
xchg
int3
jns
sar
pop
int3
cltd
imul
cmc
test
mov
mov
pop
in
jl
push
test
xchg
cmp
pusha
push
or
push
lcall
xchg
cli
mov
adc
and
or
or
stos
adc
rcrl
popa
pop
jnp
pop
ret
das
push
fsubr
jb
popf
mov
ljmp
cmp
push
lods
cmp
push
sub
shl
addr16
push
pop
shlb
mov
jmp
mov
sub
adc
inc
add
daa
lods
fdivs
cmpsl
scas
pop
ret
int
stos
mov
test
shl
ret
dec
mov
rorb
pop
jb
mov
mov
jnp
mov
or
clc
inc
andb
xchg
cmp
jnp
jle
fs
popf
outsl
out
lcall
dec
insb
clc
out
test
push
es
roll
pop
dec
adc
xlat
and
jmp
lcall
fistl
mov
jmp
outsb
scas
add
cmpb
sarl
xor
ss
test
jge
mov
jle
push
jp
sub
jns
sub
aas
inc
xor
jnp
repnz
push
sbb
adc
call
xchg
cs
jmp
loope
es
orb
stos
sub
call
pop
jo
lds
cmp
cli
sahf
pop
dec
mov
jno
dec
add
ret
sbb
xchg
enter
jg
xchg
mov
add
pop
sbb
test
xchg
push
sbb
out
jmp
stos
sti
xor
repz
dec
xchg
mov
and
xor
and
xchg
pop
jecxz
loopne
xchg
loope
xor
xchg
in
bound
rcr
xchg
cli
inc
dec
mov
sahf
jecxz
jge
xchg
jns
sbb
sahf
lahf
push
in
mov
xlat
adc
test
lds
dec
mov
out
xor
sbb
adc
cmp
jmp
jmp
cmp
cltd
cmp
jo
es
out
daa
lock
cmp
scas
xchg
push
or
add
push
std
leave
ret
iret
aad
add
imul
push
sub
popf
out
scas
fiaddl
pushf
ret
pop
xchg
out
sub
flds
loope
jae
mov
jne
mov
and
rclb
or
in
xchg
adc
popa
push
repnz
cltd
mov
dec
mov
mov
mov
xor
out
sub
mov
push
adc
mov
push
jbe
mov
jnp
stos
ficoml
cmp
mov
jbe
dec
stc
insb
push
mov
pusha
mov
xor
dec
pop
mov
insl
scas
iret
add
lahf
push
pop
sbb
loop
push
push
mov
lds
das
js
popf
pop
jge
lahf
scas
loopne
out
mov
mov
iret
daa
mov
sbb
mov
jmp
mov
and
std
sti
sti
scas
div
xor
popf
add
adc
test
push
loopne
pusha
and
mov
jb
ret
sbb
mov
push
inc
pop
hlt
jmp
and
xchg
lds
dec
dec
jbe
sub
jae
lret
nop
ret
push
aas
shl
dec
enter
ljmp
icebp
fisubrl
out
ljmp
pop
ret
inc
xchg
out
push
inc
bound
mov
aas
dec
aaa
lahf
adc
shll
or
ret
xor
ret
rol
stos
jno
mov
fwait
mov
adc
push
push
jne
mov
lock
daa
stos
mov
vmovdqu
adc
xor
aam
lds
sub
mov
or
cmp
cmc
and
and
popf
pop
test
jns
ja
movsb
inc
xor
loope
arpl
adcl
sbb
sbb
lods
mov
stos
pop
cmp
xchg
or
push
cli
iret
rcrb
insl
insl
xor
jl
mov
ja
ja
cmp
dec
loop
call
xlat
jecxz
sahf
pop
mov
inc
cmc
push
testl
orl
rcll
mov
and
popa
push
insb
dec
push
aad
add
or
adc
adc
or
loopne
and
and
loop
sub
cmp
test
movsb
pop
lea
inc
sbb
clc
stc
fwait
push
icebp
adc
push
xlat
cmp
insb
xor
in
adc
sbb
xchg
sub
call
cli
cmp
nop
daa
xchg
sbb
daa
push
xor
dec
inc
ss
cmp
adc
or
dec
outsl
push
pop
mov
mov
subb
js
cmc
pop
adc
repnz
pop
call
cwtl
leave
aad
test
cli
ss
xchg
outsb
mov
jmp
cmp
pop
sbb
ja
dec
stos
rolb
push
xor
fnstcw
pop
out
enter
js
inc
mov
stc
cmp
xchg
adc
pop
push
adc
jg
xor
scas
cmp
pop
loopne
loop
add
in
jne
push
aad
mov
push
cltd
xor
mov
lret
shl
mov
fidivs
lods
or
mov
je
and
js
push
push
cmp
es
and
add
lahf
out
lock
xor
lret
xor
cs
mov
jns
out
dec
out
insl
inc
lods
push
sbb
xor
addl
sbbb
push
sbb
lock
lret
fnstenv
daa
pop
xchg
add
das
jns
jl
dec
imul
mov
fbld
aam
push
outsb
scas
mov
jmp
xor
mov
jo
xor
and
imul
pop
xchg
popa
fisubl
jo
adc
xchg
mov
pop
jmp
adc
mov
and
aas
xchg
subl
mulb
repz
mov
fcoml
notl
fcomps
push
mov
ret
popa
jl
push
fdivr
in
fxch
scas
dec
movsl
sbb
dec
xchg
lahf
test
jecxz
fwait
adc
mov
int
ret
xchg
mov
lret
ret
movsl
push
fwait
jbe
xchg
push
clc
mov
ja
pop
xchg
test
mov
jmp
sbbl
sbb
sbb
out
fidivrs
mov
fldl
mov
add
jl
cmp
je
and
sub
jmp
aad
test
push
shlb
pop
mov
cmp
pop
jns
and
or
jmp
enter
cltd
rcrl
test
lds
sub
add
aad
xorl
inc
sub
sub
sbb
push
or
xor
mov
jmp
mov
std
stos
add
popa
btc
pop
mov
cmp
aas
jno
gs
test
test
out
dec
repnz
lods
or
jle
sbb
jecxz
aam
xchg
out
lock
xchg
mov
or
push
in
jb
cmp
cmpl
movsl
int
pop
dec
and
add
pop
dec
and
in
cmpsb
shlb
nop
xchg
insb
lcall
mov
pushf
shll
rcll
adcb
rorb
in
lea
adc
fsubr
dec
outsb
loope
setnp
shlb
add
dec
sbb
sahf
ljmp
aas
int
jnp
xchg
aaa
das
negl
daa
pushf
aad
add
jne
inc
hlt
lret
or
add
pop
pop
jg
sbb
popa
and
mov
fsubrs
dec
sbb
aad
outsl
fadds
lret
cmpsb
pop
cmp
fimull
xor
cmp
cmpsl
mov
popf
adc
cli
cmpsb
sahf
xorl
nop
adc
fs
push
dec
and
mov
cld
sub
int3
rcll
push
mov
mov
cs
jns
xchg
pushf
adc
lock
pop
icebp
cld
sub
lods
xchg
sbb
into
xchg
dec
and
pop
rcr
iret
inc
jl
stos
mov
js
decl
jbe
jge
jecxz
adc
push
cmp
popw
mull
sbb
in
int
arpl
lret
mov
fwait
loope
mov
cmpsb
out
add
inc
cmp
mov
int3
or
sbb
mov
clc
pusha
in
bound
mov
pop
iret
loopne
push
dec
cmp
push
mov
mov
test
cmp
inc
insb
mov
pop
mov
hlt
fdivr
insl
push
hlt
outsl
xchg
cmp
sbb
xchg
in
xor
jmp
sbb
inc
in
fisubrs
mov
xchg
cmp
lcall
push
pop
cvtdq2ps
pop
sbb
xor
pop
dec
clc
jp
mov
mov
xchg
xchg
mov
or
inc
cwtl
sbb
cmp
push
xchg
sti
data16
sub
jnp
xchg
sbb
clc
aas
sbb
imul
scas
es
mov
cmp
fstp
cmpsb
lock
lahf
mov
xor
lret
xchg
push
insb
sbb
xchg
pushl
jle
addr16
push
insw
or
push
mov
inc
loop
lret
imul
loope
test
icebp
repnz
shrl
jnp
imul
dec
pop
idiv
scas
cmp
mov
inc
rcl
cmp
rcrl
ja
xor
fsts
xor
movsb
and
cmp
jae
loopne
inc
fs
dec
shrl
or
inc
push
xchg
inc
es
or
cmpsb
inc
das
test
sub
adc
cwtl
xchg
cmp
sub
sub
fwait
pop
into
sti
leave
mov
in
or
xchg
pushl
push
fs
addl
mov
add
jl
cmp
ja
ret
loop
mov
xchg
roll
jmp
ret
mov
shrl
scas
xor
mov
jnp
lock
icebp
lea
mov
xchg
fstpt
mov
or
das
sbb
dec
sbb
pusha
jmp
das
movsl
icebp
loop
pop
dec
loopne
mov
sub
cld
xor
into
nop
in
dec
and
fidivs
pop
mov
dec
jge
push
pop
or
xor
ds
xchg
xor
adc
lret
pop
or
or
sub
popa
insl
cmpsl
mov
and
int3
dec
shll
cmp
cli
ljmp
dec
fsubl
sub
test
inc
stos
lea
push
cli
sbb
insb
inc
stc
shll
mov
mov
pop
out
sbb
pop
sub
jecxz
xchg
ljmp
xchg
ds
mov
cmp
mov
mov
pop
push
jo
xor
std
movsb
push
ficoms
fistps
sub
stc
scas
push
call
add
cmp
es
outsl
roll
mov
xchg
push
jmp
sbb
and
adc
cs
cmp
aas
lods
add
lret
sub
xlat
sbb
test
and
imul
aad
scas
and
pop
lcall
adc
mov
mov
pusha
jae
push
clc
aad
rdmsr
push
dec
mov
cli
dec
aad
fildl
mov
add
ret
jbe
std
cmp
std
outsl
or
pop
mov
and
adc
xor
jbe
cli
jle
jmp
movsb
sub
lcall
mov
pause
aaa
test
mov
mov
shr
movsb
jbe
mov
div
mov
and
fcmovb
fwait
push
cmp
pusha
call
std
stc
xchg
fnstsw
inc
outsl
pop
mov
xor
outsb
push
xor
cs
cmpsl
mov
scas
xor
shll
inc
outsb
fwait
stos
jp
pop
ret
fstpl
in
xchg
sti
fmul
andl
lahf
aas
pop
daa
adc
loop
shlb
cmp
cmp
imul
scas
mov
add
repz
or
aad
dec
ret
add
cmp
mov
data16
xor
push
rcrb
jmp
rol
inc
enter
jno
shll
movsb
jbe
jae
adc
aaa
pop
push
push
sahf
fisttpl
insl
mov
jno
lock
in
xchg
bound
mov
bound
leave
rcrb
fcmovne
mov
lock
loop
pushf
xchg
add
in
adc
mov
or
inc
sbb
test
jge
add
push
jb
sub
stos
in
das
mov
push
xchg
mov
push
fs
push
sbb
into
or
mov
sub
roll
div
jne
cmpsl
inc
mov
inc
stc
ja
jge
mov
int
out
sbb
clc
stos
mov
subl
xor
and
fidivrl
jge
mov
mov
in
add
pop
std
push
push
xor
dec
sbb
dec
sbb
push
lea
cmp
gs
push
mov
push
add
ljmp
movsl
xchg
cmpsl
xor
or
sub
xor
sbb
mov
inc
mov
or
repz
shll
inc
jg
sbb
pop
pop
test
add
mov
mov
into
and
mov
mov
cmpsl
mov
jns
adc
dec
pushf
sub
test
fldl
int3
mov
sti
push
pop
add
int3
sbb
pop
add
add
leave
insb
testl
adc
test
jecxz
cs
cs
cs
cmpsl
mov
ror
aam
cmp
push
pop
mov
andl
mov
loop
xchg
test
push
fwait
ds
pmaxub
mov
mov
mov
movsl
outsb
push
repnz
mov
cli
dec
mov
into
and
inc
jecxz
jl
add
push
inc
ret
sbb
mov
xchg
mov
mov
std
dec
inc
jbe
push
adc
int3
xchg
dec
pushf
hlt
call
mov
push
push
push
dec
cmpsb
and
pop
cmp
rorl
or
sbb
int3
int
xchg
loop
lfs
fsubl
mov
dec
fmul
pushf
sbb
add
and
and
gs
xchg
mov
gs
add
stc
ret
xlat
out
mov
mov
pop
cmpsl
shrb
lcall
adc
and
mov
dec
mov
jle
push
mov
or
pop
fbstp
das
ljmp
cmpsl
and
sub
iret
subl
xchg
mov
lock
notb
or
inc
pop
pop
mov
adc
shrl
pop
clts
push
cmp
mov
sbb
cmp
outsb
jle
ror
gs
sbb
sub
test
adc
mov
loopne
pusha
push
add
pushaw
test
call
mov
push
lods
jbe
repnz
xchg
adc
adc
addb
adc
shlb
into
ffreep
call
push
push
outsb
out
loop
xchg
adc
pusha
and
sub
cmc
ret
xchg
ret
mov
inc
inc
sahf
cmpsl
and
mov
jns
push
mov
add
adc
in
sbb
sahf
push
shr
out
sarl
test
inc
pop
inc
and
jle
stos
push
adc
dec
aas
mov
pop
or
cmp
dec
pop
ud0
push
xchg
mov
pop
mov
xor
push
and
pop
call
jo
mov
inc
scas
test
add
js
mov
insb
jno
stc
mov
inc
in
add
adc
aaa
dec
ret
jmp
lods
pop
inc
add
or
dec
mov
mov
je
pop
adc
add
pop
ficoml
jl
push
or
rcrb
divb
adc
lock
test
xchg
jle
jae
lds
jbe
cmp
repnz
imul
inc
cltd
int3
xlat
dec
sti
push
jbe
push
mov
cs
lret
std
sub
mov
loopne
daa
imul
sahf
int
xlat
or
xchg
jecxz
sbb
ja
xchg
jae
ret
pop
cld
rorl
jecxz
scas
mov
jecxz
out
shlb
call
dec
jns
dec
cmpsb
pop
sub
push
movsl
stos
scas
scas
push
jno
std
fmull
xchg
out
sbb
fsubrp
pop
jae
cmpsl
sti
std
movsl
int
mov
daa
lock
ret
arpl
pop
sub
pop
mov
jmp
rcr
cmp
call
inc
subl
cs
push
les
xor
jmp
add
iret
or
xchg
push
mov
mov
push
jno
jg
mov
jecxz
sbb
inc
pop
mov
cmp
loop
icebp
mov
push
push
jnp
dec
or
dec
add
xchg
int3
das
fsubs
lcall
pop
xchg
insb
mov
pushl
fcmovu
hlt
lahf
jecxz
mov
mov
roll
ds
clc
mov
add
movsb
sbb
sbb
lret
and
sub
nop
sbb
dec
dec
and
fnsave
dec
movsb
push
cmc
inc
and
mov
lock
rclb
pop
in
and
jbe
pop
mov
int
sbbb
jne
out
cmp
movsl
ja
in
scas
rolb
or
mov
test
cld
sbb
sub
lret
movswl
mov
or
sub
in
pusha
xor
test
mov
pop
dec
iret
push
sub
jno
stos
mov
jge
cmp
lods
mov
outsl
fmull
jns
aad
inc
pop
push
lock
gs
push
adc
or
sbb
jb
ret
mov
jmp
enter
jns,pn
notl
inc
sub
sbb
cmpl
sbb
arpl
call
lret
xor
sahf
in
sti
daa
sub
sahf
mov
inc
add
and
lods
movsb
movsb
push
sbb
and
adc
sub
out
sub
aam
testb
dec
pop
popf
xchg
cmp
arpl
shrb
xchg
movsb
and
mov
and
dec
cs
adc
adc
pop
dec
pop
push
test
xchg
int3
cmp
pop
gs
idiv
push
pop
cmp
sahf
sub
xchg
mov
add
fwait
imulb
movsb
pop
push
test
hlt
and
pop
or
lods
std
shrl
jg
das
lret
fistl
repnz
aaa
outsl
popa
xor
mov
das
lret
cmpsb
ret
jbe
cmp
bound
lds
mov
std
mov
je
lahf
test
inc
fstps
fcoml
mov
mov
mov
mov
test
loope
mov
xchg
adc
data16
stos
subl
push
jne
adc
arpl
push
fnstenv
mov
fs
fldcw
xor
test
movsb
inc
cmpsl
mov
jecxz
xor
or
lock
xor
pushf
sbb
push
in
pop
sti
fcmovnbe
sub
jmp
fistps
jns
insb
arpl
jno
lock
rorl
shll
jecxz
add
xchg
mov
jmp
jbe
frstor
outsb
cmp
scas
jne
sub
xor
notl
xchg
sub
fcomps
mov
std
cmp
popf
pop
jo
pop
push
add
das
jmp
call
insl
addr16
inc
adc
nop
sbb
pop
or
hlt
cmp
and
cmc
adc
and
sbb
xchg
ds
jno
leave
xchg
adc
ds
xchg
dec
insl
jp
push
jae
sbb
fdivr
jbe
loope
jecxz
cmp
mov
xor
out
pop
cltd
push
out
and
jnp
clc
aas
inc
push
jns
push
jnp
xchg
repz
ror
test
out
dec
popf
dec
cmp
ljmp
add
pushf
inc
imul
mov
fisubrl
mov
roll
xchg
cmp
fs
mov
cmp
add
icebp
jnp
lcall
lret
xchg
pop
shrl
lahf
aad
mov
int
in
add
flds
daa
or
jns
lds
jbe
in
arpl
sarb
movsb
jne
xor
push
sbb
loope
xlat
ret
dec
pop
addb
sub
repnz
in
psubsw
fcoml
cs
mov
push
mov
in
testl
jmp
inc
push
lods
mov
dec
orb
in
pop
jnp
adc
hlt
fs
imulb
adcb
xchg
or
neg
inc
test
lods
fisttps
inc
lds
fs
adc
insb
nop
jae
lret
sub
sub
out
push
push
lods
adc
je
pop
in
idiv
fimuls
dec
mov
push
inc
lret
xor
in
mov
mov
jp
dec
mov
repz
imul
or
addr16
push
lret
pop
fld
test
cmp
leave
jmp
hlt
add
xor
cmc
inc
cmpsb
xchg
outsb
test
fcmove
xchg
loope,pn
sub
cmp
repz
scas
sti
loop
adc
fidivl
mov
lea
subl
xor
pop
mov
test
lahf
int
sub
push
xchg
pop
xor
int3
repz
loop
dec
cmpsl
mov
or
pop
insl
into
dec
popa
call
push
mov
and
xor
push
and
lcall
fndisi(8087
aad
mov
into
cmc
adc
or
add
or
or
sub
test
clc
sub
fiadds
mov
inc
and
push
add
push
sbb
xor
nop
outsb
rorl
cltd
pop
inc
filds
dec
mov
ja
ret
femms
and
cltd
loopne
xor
movsb
inc
shll
mov
testb
dec
sti
loop
out
ja
lea
aaa
stos
sub
push
cli
push
into
xchg
dec
pop
icebp
jle
js
or
outsb
movsb
mov
lock
jb
jge
jo
stc
sub
jns
in
aam
stc
mov
das
or
inc
cltd
push
adc
test
fists
inc
xchg
fxrstor
jo
cmp
sub
mov
pusha
xor
add
movsl
mov
lret
mov
test
aaa
mov
or
lahf
sub
push
jl
ds
push
mov
xchg
shrb
jb
scas
xor
cs
xchg
addr16
in
test
rcl
mov
int
arpl
xchg
sbb
and
inc
out
fsub
add
daa
lods
das
movsl
fs
ds
lret
adc
fistps
sub
and
xor
and
inc
movsb
insb
sbb
mov
push
pop
xchg
in
arpl
lret
push
cli
je
test
cmp
inc
loopne
stos
sti
iret
and
lret
push
jb
push
bound
mov
adc
push
shl
cli
je
insl
xchg
cltd
sub
in
mov
jae
loop
test
adc
mov
lret
mulb
jl
ss
hlt
lcall
hlt
xchg
cmp
dec
jp
push
add
mov
cltd
jno
pop
xchg
rolb
sbb
cltd
push
jle
inc
das
out
sub
xorl
scas
push
dec
and
movsb
nop
xlat
mov
pop
and
inc
stos
repnz
xor
inc
add
movsb
xor
push
insb
mov
outsb
roll
adc
test
shr
xor
hlt
sub
dec
jno
in
into
pushf
adc
add
jae
dec
imul
fs
push
dec
mov
callw
push
or
mov
rcl
xchg
fldcw
loopne
cmp
jae
add
sahf
xchg
or
mov
pop
jno
and
xor
pop
add
icebp
inc
and
pop
xor
inc
pop
repnz
out
aam
sahf
loope
xor
cmc
xchg
xchg
test
out
xchg
ror
lods
cmpsl
inc
xor
out
mov
dec
xchg
adc
adc
adc
lds
orb
xor
scas
xchg
out
int3
mov
loop
imul
mov
ljmp
into
enter
jecxz
xchg
lret
push
mov
push
xchg
cli
sub
push
adcl
pop
push
lret
mov
add
push
mov
xchg
leave
sub
dec
sbb
xchg
adc
inc
mov
push
cmp
jle
insl
in
fistpll
cmp
cld
aas
rol
cwtl
ret
push
jle
push
push
pop
lock
ret
cs
sub
and
sbb
cwtl
out
jge
fnstcw
jge
scas
lretw
test
mov
push
sahf
xor
stos
xor
scas
cld
in
lret
jo
cmc
mov
in
hlt
lret
mov
aas
scas
mov
andb
mov
dec
fsubrs
test
push
sarl
cmc
mov
mov
xchg
cmp
fisubs
out
sbb
cmp
xchg
add
js
cmp
adcl
lahf
mov
inc
cmp
sub
push
outsl
push
adc
jno
mov
push
push
mov
insl
push
add
mov
mov
pop
sub
push
mov
dec
jle
ds
scas
popf
add
adc
pop
lea
je
test
xchg
xchg
cmpsb
es
xorl
test
fdivl
cltd
fistps
add
adc
ret
test
mov
dec
inc
xor
pop
xor
dec
dec
cmpsl
insl
ret
mov
cmp
mov
mov
and
and
rcr
jge
and
and
aam
and
out
mov
sbb
in
fstpl
xlat
fistps
cmp
pop
mov
and
sbbb
mov
andl
iret
and
jbe
inc
cmp
test
mov
shrb
in
xchg
jns
rcl
lea
enter
jle
icebp
cmp
xor
cmp
jbe
dec
mov
inc
rcl
std
addr16
sbb
jp
je
dec
data16
inc
rcrb
pop
lahf
hlt
add
add
cmpsb
or
les
lea
adc
dec
flds
aaa
fidivrl
movsb
xchg
jnp
outsl
jmp
repnz
fistl
fistps
mov
fld
and
arpl
xchg
insb
aaa
clc
aam
idiv
push
movsl
xor
or
dec
and
lds
xchg
imul
cmpsb
jle
or
and
cmpsl
xchg
inc
clc
or
xchg
mov
out
pop
sbb
inc
hlt
jnp
push
repnz
out
scas
cmovle
lcall
sbb
cld
jle
cmp
add
repnz
arpl
and
mov
in
fmuls
adc
aad
xchg
adc
sbb
addb
js
sahf
js
mov
jns
icebp
xchg
jge
mov
or
mov
or
jno
adc
les
fimuls
cmp
loope
push
ds
pop
mov
mov
mov
xchg
jp
sbb
jle
and
subl
or
hlt
les
mov
jo
xchg
sub
ficoml
push
inc
dec
xchg
sub
add
push
cli
rcll
inc
cs
test
fildll
ret
sub
popf
shrl
nop
mov
enter
jb
or
ss
imul
or
int3
add
xchg
jmp
pop
pop
sub
push
mov
xchg
out
xor
mov
sub
or
sub
xor
fsts
movsl
adc
cmp
addr16
mov
sarb
push
nop
lods
push
icebp
push
dec
subl
push
mov
sbb
movsb
mov
aas
clc
adc
or
inc
popf
or
out
js
mov
jno
and
mov
add
mov
pop
insl
fldl
mov
fs
add
cld
jne
mov
in
test
out
leave
es
pop
add
andl
rcrl
xchg
lea
mov
push
loopne
xor
cmp
das
mov
jne
pusha
movsb
pusha
lret
jb
push
aas
ljmp
mov
aaa
adc
hlt
gs
jbe
insl
nop
push
mov
adc
jl
cmc
ds
inc
clc
mov
ja
in
enter
fdivrl
cbtw
testb
enter
sbb
stos
mov
lret
sarb
jnp
test
push
repz
mov
dec
xchg
sbb
in
movsb
mov
jb
int
ss
adcl
flds
push
mov
jecxz
fdivr
into
mov
lret
and
mov
test
div
cmp
data16
sti
loope
test
or
sarl
pop
adc
cmp
mov
jo
ret
pop
loopne
call
and
and
adc
or
or
into
add
mov
xchg
movsb
jl
scas
xchg
in
out
and
jmp
ret
jno
jo
mov
lock
inc
lcall
cli
cmp
mov
fisubs
xor
mov
cli
push
push
pop
jl
iret
sbb
movsl
dec
xchg
pop
lods
or
repnz
in
pop
push
inc
shl
sub
fsubrs
rolb
xor
fistps
fwait
xchg
or
gs
add
clc
mov
push
ja
add
pop
ds
jae
rclb
ja
sub
jmp
notb
gs
cmp
fcoml
mov
push
scas
mov
or
shll
rcll
test
movsl
push
cmp
xorl
out
xchg
imul
dec
dec
and
push
js
xchg
into
jmp
pop
cs
push
jno
js
popf
xchg
push
divl
pop
dec
pop
js
dec
mov
jp
jo
pop
jnp
ljmp
xchg
mov
sbb
dec
jecxz
or
repnz
or
sub
aaa
into
adc
mov
dec
dec
hlt
inc
cli
sbb
xor
pop
push
xchg
push
jb
out
mov
push
movsb
loopne
xlat
cmp
les
insb
rclb
inc
out
inc
jae
pop
mov
cmp
push
outsb
fsubr
jb
popf
xor
push
adc
addr16
call
and
out
test
inc
faddl
rolb
mov
mov
push
mov
jp
and
imul
stc
rol
dec
adc
repnz
push
and
int
lods
les
insl
es
sub
mov
popa
cmp
fwait
pop
push
mov
push
adc
popl
fwait
or
lea
pop
mov
sub
es
jb
or
push
shl
les
bound
scas
inc
outsl
or
sub
push
loopne
mov
add
inc
lret
mov
add
sti
xchg
fwait
iret
lea
push
xor
out
pop
shrb
rcrb
daa
lahf
fwait
loope
clc
xor
nop
ficoml
ffreep
mov
popf
outsb
mov
pop
and
mov
cmp
fsubl
push
pop
scas
jnp
and
popf
jne
popa
or
xor
sub
push
movsl
mov
clc
sub
add
leave
push
mov
je
jb
adc
xchg
mov
out
fildl
icebp
adc
es
push
mov
xchg
mov
idiv
mov
scas
sbb
xchg
int3
das
icebp
cwtl
ret
push
and
nop
cmp
sbb
xchg
xchg
pop
jb
lret
cld
loopne
mov
push
orb
ja
lods
mov
mov
sub
mov
std
out
adc
jg
push
or
or
jno
ds
fs
repz
adc
imul
lods
mov
mov
in
out
lret
cmpsb
bound
cld
dec
push
xor
je
test
add
mov
repnz
fidivrs
jns
cmp
adc
push
out
inc
pop
mov
pop
sbb
pushf
add
inc
ja
adcl
xchg
dec
inc
testl
push
dec
popf
add
movsb
das
mov
pop
mov
faddl
iret
outsb
jo
mov
push
mov
push
int
xor
stos
add
leave
call
add
ret
xchg
xchg
inc
sub
pop
rorl
add
cmp
dec
inc
inc
sbb
ret
adc
xor
cmp
sarl
jne
addr16
outsl
dec
mov
dec
and
dec
cltd
pop
adc
lret
imul
js
dec
mov
popa
sbb
int3
add
imulb
hlt
xchg
popa
xchg
arpl
jecxz
mov
xchg
and
inc
mov
xchg
lea
mov
cmp
imull
insb
cmp
repz
jb
cmp
hlt
or
ds
into
push
and
pop
mov
aaa
sbb
out
sub
dec
sti
jns
mov
xlat
mull
or
aad
mov
out
push
loopne
push
insl
jne
push
in
adc
dec
add
popf
inc
xchg
ret
dec
mov
sub
cs
and
mov
lods
sbb
adc
neg
sub
jmp
mov
mov
hlt
stc
mov
push
decb
repnz
pop
mov
inc
ror
data16
hlt
sub
aas
nop
inc
mov
push
in
mov
ss
adc
cwtl
ret
les
ud0
xchg
jno
or
out
into
xor
sarl
mov
mov
cs
bound
inc
frstor
add
mov
pop
in
sub
lock
mov
ficompl
lret
addr16
in
lret
cmp
pop
inc
add
popf
sbb
lcall
xchg
jno
jae
mov
mov
mov
addr16
mov
and
jns
loop
mov
adc
enter
pop
out
inc
push
mov
in
loopne
pop
inc
sbb
add
adc
out
add
mov
outsl
popf
xlat
adc
outsw
loop
add
jp
and
pop
add
push
imul
sahf
shll
or
add
scas
xchg
bound
add
pop
xor
sbb
cmc
shrb
out
cmc
add
dec
stos
xchg
cmp
sbb
loopne
dec
inc
sbb
mov
imul
stos
sbb
jo
push
addr16
fsubl
and
sub
icebp
int
xchg
sub
inc
ret
adc
xchg
cmp
rcr
std
mov
ror
shl
xor
mov
lods
dec
out
scas
sahf
push
push
jge
pop
lods
inc
push
pushl
xchg
adc
add
cld
hlt
mov
adc
xchg
inc
and
add
les
jle
into
dec
jmp
mov
pop
add
dec
xor
sbb
cmp
stos
rorb
jl
pop
or
sbb
or
sbbl
xor
dec
aad
lock
iret
xor
test
test
orps
mov
add
xchg
jo
sbb
sub
push
cld
or
loopne
jp
xlat
jb
insl
sarl
mov
ret
mov
pop
xorl
cld
xor
mov
adc
cmp
add
lods
fstp
fsubr
les
mov
js
ds
out
xor
sub
xor
push
mov
xchg
fldl
popf
adc
jle
jp
sub
jge
push
add
jb
sub
out
rcl
fldenv
jecxz
repz
cwtl
in
scas
in
add
rol
inc
cmp
pop
push
or
shlb
stos
fdivp
call
cs
mov
push
mov
or
sub
and
pushf
xor
popf
or
inc
daa
mov
mov
mov
jge
fs
pop
mov
lahf
mov
sbb
sbb
xchg
aas
lods
insb
std
fwait
mov
mov
aad
cmp
mov
lea
clc
jns
roll
push
pop
pop
dec
out
test
adc
test
iret
stos
cmp
mov
outsl
dec
xchg
gs
dec
dec
leave
in
cmp
hlt
mov
push
ds
cmp
inc
jmp
ficompl
pop
and
sahf
or
mov
mov
jns
push
fwait
pop
adc
lcall
sub
test
jl
xor
xchg
xchg
jnp
inc
lds
add
add
push
cs
mov
ja
cli
mov
stos
jae
rorb
mov
cmp
int3
cmc
sub
ljmp
lret
mov
mov
pusha
outsl
xor
mov
pop
mov
mov
push
int3
popa
movd
enter
sub
addb
data16
cwtl
jnp
movsb
push
mov
mov
sub
mov
push
rcll
or
inc
pop
mov
divb
cld
cmp
clc
sub
dec
lods
int
pop
push
push
outsl
iret
push
and
gs
ljmp
dec
mov
mov
inc
push
shl
jae
push
fdivs
jmp
adc
xchg
sub
sub
adcl
sti
or
pop
add
into
sti
out
mov
pop
scas
ljmp
ss
mov
cld
mov
sub
adc
pop
subb
and
jmp
xor
jp
das
shr
rclb
ret
push
dec
pop
dec
push
fistl
jb
sahf
push
lret
movsb
dec
scas
lret
arpl
jl
pusha
stc
sahf
es
sahf
bound
inc
stos
dec
aas
mov
jl
cltd
and
loope
outsb
inc
addl
divl
loopne
sbb
inc
mov
shrb
inc
fs
lret
xor
dec
shll
adc
stc
adcb
push
leave
jne
in
cmpsl
mov
xchg
loop
push
jne
rcrl
and
lret
sub
iret
or
mov
hlt
mov
std
fwait
cmc
xor
sbbl
jns
mov
popa
mov
xor
dec
in
and
addl
jle
lock
xlat
insl
out
mov
and
pop
out
xlat
jnp
jnp
dec
inc
es
jle
inc
aaa
popa
mov
ja
setg
stos
push
and
cwtl
jno
or
movsb
xchg
aas
xor
adc
sub
xor
add
lock
shr
mov
icebp
sahf
int3
lock
dec
inc
sbb
sub
fidivrl
ret
push
test
lret
ret
push
jmp
daa
xor
ficompl
and
sub
jp
shlb
sbbb
mov
or
jl
sub
cmp
mov
mov
xor
inc
ret
mov
lock
adc
pop
cmp
push
insb
out
jle
dec
cmp
int3
push
add
negb
push
fidivrl
repnz
mov
dec
daa
out
xchg
bound
push
pop
std
mov
add
inc
nop
xor
cmpsb
mov
and
pop
and
mov
and
add
xchg
in
aas
push
pop
leave
inc
sbb
mov
outsl
nop
divl
fcompl
hlt
sahf
mov
xchg
shrb
mov
push
push
lods
pop
sub
xchg
mov
pop
cmpsl
inc
in
test
mov
pusha
movsl
mov
mull
sbb
popf
xchg
and
out
dec
in
mov
push
lods
mov
mov
stos
out
cmpl
lcall
movsl
mov
gs
fwait
adc
movl
xor
jle
lret
sub
xor
push
cmp
repnz
int
and
shlb
cmpsb
call
mov
and
scas
inc
pushf
push
mov
aam
mov
dec
subl
xchg
mov
mov
xchg
fwait
mov
scas
shl
nop
push
sbbl
ret
mov
cld
popl
sahf
mov
test
lds
aaa
mov
aad
push
aad
adc
adc
xchg
ss
ljmp
cmp
ljmp
nop
cli
test
xor
pop
imul
dec
add
and
cmpsl
dec
cs
push
add
mov
inc
push
ret
mov
and
dec
sub
mov
or
repnz
add
or
scas
mov
pop
push
mov
andb
pop
or
jp
pushf
pop
pop
push
test
scas
inc
jle
insb
out
inc
fistps
daa
sahf
stc
mov
and
imul
fs
push
xlat
sub
pop
sbb
inc
in
and
ljmp
hlt
das
dec
dec
inc
push
enter
cmp
dec
icebp
dec
clc
movsb
push
aad
add
aas
sbb
data16
in
pushf
cmp
mov
movsb
sbb
bound
dec
inc
add
mov
in
jnp
and
sub
fisubrl
out
xor
mov
outsl
fwait
or
shll
mov
xchg
xchg
lahf
jmp
jo
daa
fs
xor
imul
icebp
fisttps
jno
push
inc
test
lods
dec
push
push
mov
and
cmp
bound
stos
mov
imul
ljmp
cli
mov
enter
cli
shll
mov
mov
out
call
cmc
gs
bound
push
adc
push
ljmp
jle
je
ret
shlb
fdivr
dec
and
lcall
push
test
add
popa
lea
test
push
jo
xchg
imul
jbe
or
icebp
jns
xorb
mov
dec
leave
js
adc
sub
fsubl
xor
ret
insl
cmpsl
dec
cmp
ss
dec
xchg
popf
adc
push
xorb
popf
bound
push
add
leave
idivb
pushf
das
ss
inc
mov
cmp
rcr
loopne
addr16
mov
dec
pop
cs
aad
jae
in
loope
xchg
sbb
shl
or
or
idivb
test
dec
inc
xchg
xchg
pop
pop
ja
das
cli
aad
out
fcmovnbe
inc
adcb
cmp
jge
adc
pusha
jp
ret
cwtl
pop
fisttpll
xor
sbb
in
cmpsl
xlat
ja
mov
outsl
mov
pushf
dec
push
in
fildl
push
ret
hlt
stc
sar
inc
loope
add
xchg
je
jmp
or
mov
jbe
sub
fnsave
ja
push
addl
jns
xchg
inc
sahf
dec
and
cmp
sbb
mov
mov
cmp
pop
fstpl
stos
xchg
out
cmc
ret
dec
adc
push
push
or
xor
and
adc
outsl
int
ljmp
push
sbb
repz
add
cmc
fwait
cmp
xchg
mov
fldt
adc
add
adc
inc
cmp
mov
push
mov
cmpsb
sbb
loopne
in
aam
add
pop
roll
clc
mov
pushf
xor
nop
mov
sbb
ljmp
pop
and
hlt
and
das
mov
or
and
or
cmp
subb
cmp
xor
add
mov
lea
sbb
xor
sub
int3
nop
dec
pop
pop
aam
call
xchg
dec
fdivr
and
xchg
xor
shr
dec
lcall
into
mov
hlt
enter
sbb
rcrb
sub
pop
imul
imul
push
dec
xchg
jb
scas
add
arpl
inc
mov
jo
sbb
hlt
inc
jne
sti
pop
out
adcl
push
mov
cmp
cli
sahf
xor
mov
or
xor
addr16
fwait
shr
int
xchg
popf
lods
mov
xchg
jmp
clc
dec
pop
ja
mov
pop
pusha
pop
or
push
cmpsl
jecxz
cli
aaa
repz
stos
std
scas
popl
and
int3
pop
mov
pop
outsb
dec
push
or
jno
int3
div
sub
and
rep
pop
pop
pop
ret
popf
lret
std
add
or
outsl
jge
addr16
stos
stos
rorb
test
mov
pop
pusha
inc
xchg
fdivrl
mov
cmp
cmp
and
sub
jle
test
in
push
jmp
mov
pop
inc
and
addr16
pop
lret
sbb
je
pop
stc
ret
mov
mov
cmc
xor
mov
push
pop
gs
cmp
out
cld
sub
insb
insl
mov
mov
cmp
lret
pop
fadd
lret
je
nop
jp
adcb
cmc
mov
xchg
ret
into
rcrb
sub
inc
pop
inc
sbb
push
xchg
lock
fcmovne
test
into
ljmp
scas
popa
in
ja
adc
inc
addr16
and
aad
lods
pop
mov
je
xchg
sub
sti
enter
lds
imul
je
adc
sub
sub
xor
push
jne
inc
mov
jl
and
sarl
lret
lahf
lds
or
or
cmpsb
xchg
imul
stos
fisubrs
sub
lea
jne
inc
ss
enter
cmp
mov
adc
push
mov
cmpsb
shrl
push
sbb
inc
fcoms
andb
scas
test
lds
mov
push
dec
and
ja
addb
je
js
mov
sti
lcall
call
aam
dec
cmp
es
pop
les
ss
test
push
out
inc
sahf
xchg
or
icebp
cmc
sub
inc
aam
add
xchg
ja
movsb
push
bswap
sub
jo
stc
dec
adc
in
push
test
setb
mov
test
mov
xchg
jp
cmpsb
jl
add
sub
sbb
mov
imul
push
scas
lahf
mov
push
adc
push
mov
jns
mov
push
push
lret
cmp
jb
pushf
insb
inc
and
lahf
xchg
aam
jge
adc
scas
push
cmp
stos
shr
mov
fldcw
movsb
sbb
cmp
pop
xor
pusha
aad
scas
prefetch
mov
pushl
mov
mov
mov
sbb
popf
out
jae
scas
push
xor
pop
mov
imul
cmp
iret
inc
jmp
mov
and
jl
outsb
xchg
or
mov
popf
les
fstl
add
mov
mov
jp
push
sbb
lea
mov
mov
out
lcall
mov
out
loopnew
sub
or
dec
jmp
pop
shlb
imul
sbb
insl
jae
popa
arpl
push
dec
xor
or
mov
jge
lds
lds
fmul
aad
jb
dec
or
test
mov
xchg
push
loop
adc
outsb
xor
pop
sub
repnz
fistpl
fcomps
hlt
cmpsb
jbe
jae
nop
mov
sbbb
mov
mov
pop
push
stc
out
fisubrl
inc
pop
cmp
std
shrb
in
pop
imul
leave
cld
push
fmuls
and
pop
jp
mov
cmp
push
mov
fwait
push
or
or
adc
mov
xor
test
repnz
inc
gs
in
inc
cmpsb
xchg
mov
mov
dec
cmc
test
push
inc
add
xlat
inc
dec
insl
dec
lcall
xor
fcomps
push
lcall
push
fdiv
out
in
insl
in
insl
fdivrp
nop
int3
sahf
mov
repnz
notl
fcoms
push
scas
roll
dec
shrl
shrl
repnz
jns
mov
push
popa
sub
mov
in
push
mov
sbb
xchg
sbb
dec
push
push
cmp
pop
push
in
stos
cld
or
in
shll
cli
shll
ljmp
imul
aas
sbb
sub
pop
push
pushf
loop
push
mov
outsl
sbb
and
dec
push
stos
pop
dec
cltd
jae
sub
pop
out
mov
test
call
inc
pop
mov
fistpll
push
test
fwait
mov
enter
and
and
lea
pop
sub
jno
jmp
jecxz
mov
sub
push
cmp
in
push
out
shrl
loopne
sbb
rcll
hlt
and
mov
fimuls
cmpsl
stc
xor
adc
mov
pop
mov
cli
adc
repnz
fisttpll
xor
loop
pop
mov
jnp
loopne
adc
lea
push
jp
mov
xchg
subl
loope
lahf
push
push
dec
cmp
dec
lea
push
enter
data16
xor
add
test
in
sarb
addr16
or
out
fimuls
push
and
imul
xchg
inc
outsb
add
jb
inc
in
icebp
pushf
adc
xor
imul
pop
mov
testb
lret
mov
cmp
mov
outsl
pushf
push
mov
scas
cmp
and
xor
xchg
dec
pushf
inc
push
js
and
and
ret
lods
jge
loopne
mov
mov
jge
cmp
push
cltd
loop
or
add
mov
scas
jge
popf
mov
pop
adc
dec
stos
shlb
adc
shl
and
shll
dec
nop
sub
subl
or
xchg
push
and
out
jo
pop
mov
jmp
dec
arpl
push
enter
hlt
sub
adc
xchg
cmc
add
bound
fistpl
rorb
mov
in
push
in
outsl
sub
inc
repz
cmp
inc
xchg
adc
inc
subb
insb
insl
xor
push
mov
add
mov
pop
movsl
jb
mov
cmpsl
jns
iret
int3
add
out
rclb
cmp
dec
mov
loope
call
or
inc
fs
mov
xor
mov
in
not
and
lds
cmp
in
push
cmpb
addr16
sub
xchg
arpl
and
je
mov
out
mov
mull
sbb
xchg
jmp
mov
stos
xlat
lea
popa
mov
lods
loope
cmp
mov
lods
cwtl
push
aas
std
sub
addl
out
inc
sub
cltd
jbe
cltd
pop
call
adc
jne
jge
sub
add
movsl
outsl
iret
out
mov
cmp
lret
cmp
ds
movsl
fldenv
das
fildll
adc
ret
sbb
insl
gs
repnz
sub
mov
jb
push
cmc
bound
adc
jno
cmp
inc
imul
inc
loope
aam
mov
setle
fisubs
cmp
push
xor
notb
dec
xlat
pop
aaa
cmp
xchg
mov
int
loope
sub
and
mov
cs
add
fidivrl
and
hlt
mov
or
adc
lahf
jne
cmp
ja
and
aas
in
std
jg
into
mov
test
sub
lea
pop
mov
or
adc
jo
inc
pop
bound
ss
xchg
xor
js
mov
movsb
cmp
fsts
pop
repz
dec
cld
xorl
jle
or
shll
test
repz
dec
mov
imul
mov
lcall
loop
enter
cli
xor
sub
pop
jno
push
mov
and
movsb
xchg
and
lods
sub
and
inc
and
je
std
mov
sub
xor
out
data16
loope
out
ljmp
mov
out
jmp
add
sbb
daa
jns
push
dec
jge
dec
sub
or
xlat
cmp
pop
dec
add
xchg
add
add
xchg
scas
jmp
sbb
imul
mov
sbb
je
and
dec
add
and
jl
jo
jg
movl
jl
pop
cs
lock
dec
jg
repnz
and
add
lret
mov
cmp
dec
mov
popl
stc
dec
aad
movsl
sub
xor
cmp
jnp
mov
lret
or
mov
rcl
rcrl
add
mov
insb
daa
arpl
aaa
into
data16
adc
test
lahf
lahf
ss
stc
adc
adc
inc
lret
addl
cs
cmpl
int3
and
outsl
pop
inc
shlb
inc
jns
mov
adc
in
loopne
inc
xchg
jg
out
orb
xor
pop
sub
lea
xrelease
xor
add
loope
jecxz
xor
test
je
rolb
outsl
dec
xor
push
lret
mov
sbb
das
mov
lods
jp
mov
es
dec
xor
outsb
sub
movsl
inc
push
mov
filds
ja
xor
loope
popa
jecxz
jl
scas
push
or
mov
addl
xchg
sub
jge
icebp
mov
jmp
add
pop
shl
sub
push
sub
adc
test
lock
in
mull
xor
adc
loop
lds
adc
push
or
sub
inc
popf
push
aam
daa
int3
sbb
fstpt
out
icebp
cmp
mov
xchg
stos
jnp
mov
je
imul
mov
xor
and
sarl
fadds
mov
add
nop
xchg
jb,pn
stc
insb
fiadds
xchg
sbb
mov
inc
adc
push
or
push
insb
loope
negb
pop
movsl
ds
and
xchg
sub
lcall
mov
sbb
sub
mov
insl
add
divb
adc
mov
add
push
inc
mov
mov
shll
in
jl
mov
shl
lock
loope
mov
test
push
fstpt
adcl
icebp
xor
shll
jg
rorl
xor
mov
ss
pop
pop
cmpl
pop
imul
jb
in
fbld
and
das
andl
fidivs
notl
dec
loope
andb
dec
xor
sub
xorb
jle
fsubp
push
out
repz
sub
sub
insl
push
push
in
bound
jbe
push
mov
hlt
sbb
mov
notl
push
push
clc
mov
ljmp
je
stos
mov
and
pop
xchg
das
ficoms
loopne
loopne
pop
push
jb
inc
xor
addr16
mov
pusha
mov
pop
imul
mov
ja
xchg
dec
outsl
jo
outsl
mov
idivl
test
shrl
push
lret
jecxz
push
rclb
bound
inc
shlb
dec
loope
add
faddp
cli
imul
je
jne
outsb
jnp
pop
mov
cs
xor
pop
mov
mov
pop
scas
sbb
or
lahf
dec
xchg
mov
xchg
js
cli
mov
aaa
jmp
and
pushf
lods
movsb
inc
mov
add
pop
stc
std
aad
loop
imul
inc
dec
scas
pop
xor
aam
lahf
shll
dec
mov
inc
pop
cwtl
and
insb
ja
cmp
outsb
mov
negb
ret
loop
iret
cmpsl
orb
loop
mov
lahf
test
scas
lret
jnp
xor
jge
sbb
pop
js
out
push
pop
and
stos
mov
mov
add
adc
xchg
shll
jl
xor
mov
cltd
xchg
aaa
xor
aas
push
sub
adc
outsl
fnsave
nop
xor
movb
ret
lea
adc
repz
pushf
das
sub
dec
test
xchg
pop
inc
fcoml
out
sub
add
sbb
out
cmp
call
push
fnsave
push
xchg
out
notb
mov
daa
cmc
cmp
fdivrl
popf
test
jns
mov
gs
xchg
lcall
push
inc
ja
mov
jle
sub
pop
js
dec
cmp
xchg
mov
xchg
sub
jp
lret
lret
push
or
hlt
xor
test
stos
pop
jbe
mov
mov
scas
dec
mov
pusha
pop
push
mov
sbb
outsl
out
sahf
cwtl
scas
mov
inc
jne
mov
fnstsw
xchg
flds
or
jnp
mov
mov
mov
test
sbb
std
leave
adc
or
shrl
inc
in
pop
rcrb
xchg
mov
cmpsl
sbb
inc
fdivl
mov
js
cwtl
xchg
aam
pop
jo
mov
add
popf
sahf
xchg
cli
cmpsl
inc
xchg
outsl
in
or
inc
pusha
xchg
shll
out
in
mov
sahf
daa
arpl
cs
ja
imul
sti
xor
inc
outsl
or
add
nop
mov
jmp
popf
pop
arpl
mov
sbb
addb
mov
sub
inc
push
imul
cmc
fdivrl
std
popf
aas
mov
mov
mov
daa
jnp
jnp
scas
xchg
mov
add
inc
jo
icebp
or
popf
ret
loopne
scas
mov
mov
inc
loope
jno
gs
out
js
cs
out
stos
sub
cmp
cmp
insb
mov
push
imul
std
negb
fildll
mov
fcomp
sbb
sub
mov
cmpsb
fisttps
stos
pop
mov
dec
adc
inc
inc
fisttpl
sarl
or
push
fsubp
jle
xchg
pop
or
test
lods
sub
or
jl
ds
out
push
loop
push
jge
out
or
fists
mov
jle
and
cli
into
inc
sub
outsb
pop
data16
pop
xchg
push
cmp
int
sub
shll
or
pushf
in
inc
inc
jnp
arpl
leave
push
or
and
fdivl
mov
out
inc
ja
loopne
lret
mov
and
popa
es
les
jo
ds
inc
lcall
push
das
testb
scas
es
mov
mov
subl
mov
lret
inc
mull
xor
adc
jo
add
in
push
fisttpl
rclb
lahf
or
dec
enter
ja
xchg
mov
popa
add
xchg
int
ret
and
mov
mov
mov
fwait
push
and
pop
xchg
ret
push
out
mov
sbbl
fs
ficomps
or
movsb
lods
loopne
inc
lods
inc
or
and
cmp
jbe
and
aaa
mov
sbb
mov
test
data16
add
test
jns
stc
mov
cmc
hlt
aaa
jge
pop
sbb
insl
ds
sbb
xchg
mov
rol
lea
push
mov
out
dec
test
jle
push
movsl
adc
repz
xor
pop
stos
xor
out
repnz
or
xchg
jns
stos
test
or
jae
in
add
pop
xchg
mov
jecxz
fildll
xchg
or
sub
mov
xor
xchg
adc
or
cltd
call
nop
xchg
or
stos
aam
je
imul
mov
dec
loop
int
dec
xchg
xor
push
das
int3
insl
push
hlt
or
or
out
ret
mov
aas
hlt
adc
aam
lods
cmpb
mov
cwtl
jns
jns
jle
idivl
mov
sar
insb
std
dec
mov
xlat
sbb
mov
inc
add
push
in
imul
cmpb
stc
pop
sub
cmp
jo
movsl
adc
bound
rol
xchg
dec
pusha
pop
popf
or
xorl
inc
xchg
and
movsl
inc
pop
cli
call
cmpsb
mov
xor
push
std
jbe
fisubl
aas
aaa
test
mov
jnp
aaa
or
jb
int3
jb
addb
jg
cmp
pop
add
add
and
xchg
repz
mov
jle
adc
js
cmpsb
or
mov
sarl
push
fs
or
push
push
adc
daa
jg
xchg
stos
mov
jnp
imulb
and
insl
mov
stos
jl
cwtl
cltd
adc
jl
jp
stos
and
pop
test
xor
adcb
cwtl
sub
sbb
lret
push
jbe
xchg
xorl
je
stos
mov
repnz
lds
inc
xor
push
lods
xor
cmc
lret
movsb
sub
pop
mov
ja
mov
mov
in
mov
lahf
fisttps
js
cmp
pushf
pop
adc
out
mov
push
or
adc
mov
sahf
int3
in
xor
icebp
mov
xor
or
repz
push
mov
inc
in
les
add
shll
fwait
mov
xchg
test
test
movsl
add
das
or
gs
pop
lds
xchg
add
jnp
mov
push
int3
jbe
mov
jns
sahf
pusha
in
lcall
das
mov
lds
or
clc
movsb
data16
sbb
stos
mov
loop
mov
clc
bnd
and
std
arpl
mov
lea
dec
scas
xchg
imul
xlat
in
cmp
sub
mov
int
shrl
sbb
add
js
mov
dec
pop
xor
sub
pop
ret
in
and
pop
repz
lret
jnp
cmp
loopne
pop
fsubs
mov
cmp
jne
lds
cmp
sahf
leave
mov
jge
insl
jns
fcoms
mov
rcrl
mov
pop
repz
or
mov
or
pop
jle
adc
jle
dec
or
lcall
bound
jno
movsb
pop
adc
nop
lret
pushf
xlat
pop
push
push
xchg
mov
pop
arpl
mov
setp
pop
into
repz
push
jne
ja
push
shr
pmaddwd
pusha
lods
jns
inc
subb
push
shr
call
push
loopne
jp
aaa
push
jecxz
pushf
loopne
sub
fists
xchg
adc
pop
or
mov
cmp
pop
stc
in
mov
or
dec
cmpsb
mov
test
loop
movsb
add
dec
jne
icebp
iret
mov
mov
mov
rcrl
ja
inc
gs
dec
jae
mov
add
out
mov
js
scas
sbb
and
sub
sbb
push
push
push
jge
sbb
fcompl
adc
pop
adc
jle
cmpsl
in
pop
jae
aam
pop
sub
cwtl
sahf
popf
leave
js
xchg
lret
jno
cli
or
push
jbe
das
test
jb
jo
lds
xchg
jne
sub
push
pop
jge
lret
add
xchg
leave
out
mov
push
inc
add
into
in
and
add
mov
mov
les
in
adc
fdecstp
rcl
out
das
stc
ret
loope
in
jno
sahf
aas
dec
adc
push
push
inc
popa
cmp
adc
add
std
cld
jg
xchg
mov
jae
mov
dec
repnz
inc
in
pop
add
sub
fwait
xor
fiadds
in
out
sbb
jbe
iret
in
or
xor
jo
jmp
mov
jno
addr16
jnp
jbe
popf
in
xchg
sahf
lret
pop
and
push
xchg
mov
rcrl
push
and
mov
cwtl
loopne
sbb
add
inc
cmpsb
inc
movsl
mov
cltd
lods
daa
ret
test
cli
adc
jae
xchg
push
ljmp
adc
add
daa
out
stos
add
rorb
in
inc
jg
fsubs
add
cmp
sbb
loopne
push
xchg
js
push
push
pop
cmc
test
icebp
test
jns
call
jo,pn
xchg
pop
daa
test
mov
cmp
pop
cs
sub
mov
neg
in
mov
popf
xorps
mov
add
add
mov
or
stos
ds
push
dec
xlat
mov
push
icebp
add
mov
mov
mov
repnz
sbb
xchg
das
cwtl
loope
mov
cmp
pop
int
dec
movl
add
ret
outsl
mov
insl
push
jae
xchg
in
xchg
mov
mov
in
mov
add
dec
test
jmp
pop
xchg
bound
clc
jecxz
sbb
push
sti
push
sbb
add
push
stos
stos
add
fwait
add
fimuls
call
aaa
fcmovnu
jbe
icebp
cmp
aaa
inc
inc
push
cmpsl
mulb
or
daa
dec
bound
mov
in
mov
and
push
aad
jge
push
cmc
xlat
push
scas
sbb
or
pop
sbb
lods
xchg
pop
popf
je
and
imul
in
sti
ljmp
mov
out
fdivp
mov
inc
adc
inc
push
rolb
add
arpl
mov
nop
pop
or
in
sub
sbb
pop
cmp
sbb
mov
test
sbb
and
fwait
mov
cmpsl
std
xor
adc
add
inc
push
xor
xchg
mov
insl
lcall
mov
cmp
jbe
ds
arpl
or
add
push
lea
testl
jno
aas
out
rcrl
cwtl
jne
orb
and
andb
xor
mov
jno
insb
sub
pop
call
in
movsl
xor
sti
xchg
inc
stc
sbb
in
insl
popa
stos
fisubs
cmp
das
mov
or
sbb
dec
pop
inc
mov
shrl
imul
push
push
add
inc
or
imul
xchg
mov
jbe
jnp
nop
adc
inc
in
loopne
sbb
mov
aam
lcall
es
pushf
add
push
pop
pop
add
xchg
dec
jge
cmp
pcmpeqd
xor
adc
shrl
out
outsb
out
cmp
movsb
testl
or
lock
movsl
shll
popa
js
icebp
pop
data16
dec
loopne
out
or
lahf
mov
mov
arpl
les
insl
enter
fidivrs
in
jae
fwait
pop
enter
cmp
sub
and
jge
jl
jbe
mov
xchg
imul
xchg
fwait
adc
pop
lods
jmp
xor
cmp
movsl
sub
and
cmp
mov
in
jmp
lret
mov
sub
adc
jl
sbb
mov
pop
adc
and
loopne
std
inc
pop
mov
inc
aad
sahf
sbb
inc
push
call
cld
mov
mov
adc
dec
out
leave
mov
data16
or
pop
stos
incb
lods
cli
nop
repz
outsl
test
push
idivb
fs
and
sbb
std
mov
mov
xchg
adc
xchg
dec
ja
mov
jmp
js
mov
mov
fwait
cmp
je
jne
stc
mov
cwtl
and
pop
cmpsl
scas
pop
addl
ja
lods
outsl
cmp
xchg
lret
and
out
xchg
sbb
insl
mov
push
mov
faddl
adcl
push
lret
push
pop
rorl
pushf
jle
pop
add
test
shrl
mov
mov
imul
test
sbb
les
imul
sub
jmp
fdivrs
fdivrl
insl
sub
jbe
nop
jmp
scas
push
leave
outsl
pop
pop
add
dec
cmpsb
inc
scas
mov
out
sbb
insb
add
std
mov
pop
pop
hlt
ljmp
enter
push
sub
or
sti
icebp
cmc
fisttps
sbb
sbb
mov
xchg
scas
xchg
mov
sti
dec
xor
mov
and
test
pusha
adc
outsb
insl
mov
stos
inc
test
adc
push
stos
push
inc
xchg
jecxz
mov
sub
jns
dec
outsb
fnsave
lret
mov
add
aaa
jp
subb
jbe
mov
mov
mov
dec
adc
dec
movsl
loopne
enter
adc
dec
and
cmp
sub
sub
xlat
mov
je
xor
push
sbb
mov
dec
cwtl
xchg
mov
dec
add
insb
push
and
or
jno
sub
xchg
pusha
out
rcrb
fsubr
adc
mov
outsl
pop
call
xor
adc
mov
out
xchg
movsb
mov
aad
ja
popa
out
fcmovne
push
xor
jge
stos
out
scas
enter
js
aam
arpl
cli
out
test
xchg
stos
xlat
xor
sti
add
inc
in
mov
adc
dec
hlt
leave
jb
jp
and
inc
sbb
pop
mov
imul
mov
es
loope
inc
jbe
and
push
scas
loope
js
cmp
ret
mov
cmp
cmovbe
cmp
paddusw
rorb
enter
gs
dec
aas
cmp
inc
pop
into
mov
lods
inc
cmp
bound
xor
fsub
sbb
push
adc
jmp
aad
cmp
aas
push
mov
pop
movl
hlt
les
mov
imul
stos
inc
mov
shll
nop
icebp
fiaddl
sti
mov
rcl
mov
pop
jnp
sub
mov
shlb
addr16
je
lods
gs
rcll
rclb
pop
in
lret
loope
pop
push
sub
adc
incl
movsl
xor
sub
aas
test
in
aaa
mov
jmp
xchg
and
imul
mov
xor
pop
mov
orl
test
fdivl
cmp
cmp
repnz
inc
jle
in
cld
sbb
mov
test
pop
add
mov
jmp
jb
and
sub
and
xchg
ret
jns
fld
push
hlt
ss
or
je
inc
fimuls
out
cmp
pop
out
scas
mov
cmp
imul
xor
jbe
dec
sarl
lock
mov
or
inc
jg
inc
repz
dec
inc
jmp
or
gs
push
xchg
decl
jb
imul
mov
test
sti
add
cmp
pop
adc
mov
cli
mov
push
mov
mov
incb
mov
inc
xchg
mov
insl
push
les
scas
int
loop
adc
sub
aaa
loop
xchg
adc
pop
xor
cmp
xor
movsb
mov
sbb
add
test
mov
xchg
jne
repz
js
repnz
and
jl
and
mov
pushf
aad
test
cs
movsb
cld
popf
adc
or
dec
mov
pop
shll
pop
aad
movsb
loope
lods
and
fcmovne
push
fnstsw
push
out
data16
shrl
sahf
std
cmpsb
mov
enter
adc
imul
test
jnp
mov
ljmp
aaa
push
inc
xchg
jae
das
xchg
jmp
push
push
mulb
outsb
and
call
and
incb
jns
push
sbb
cmpsl
or
test
insl
int
not
fnstenv
xchg
ss
xchg
rcr
sub
test
xchg
fsubl
aas
mov
inc
cmpb
jge
pop
movsb
xlat
out
icebp
or
insl
into
clc
into
mov
mov
cmc
xchg
pop
mov
push
mov
sbb
outsl
lods
std
lcall
dec
cld
mov
rcrb
mov
lret
stc
jg
ret
ret
mov
xor
mov
xchg
enter
aaa
adc
shlb
lret
xchg
aad
sub
fcmovb
fwait
insb
sahf
shrl
dec
sub
sub
lods
mov
insl
enter
pop
xchg
sub
push
ffreep
mov
stos
push
lea
add
dec
jge
sub
adc
or
pop
pushf
dec
fisttpl
push
push
dec
pop
mov
push
adc
scas
jl
shlb
xor
cmpsl
pop
pushf
xchg
test
fcompl
sub
bnd
sarl
jmp
jl
in
jecxz
lea
fld
pusha
hlt
push
inc
sub
lea
and
aas
xchg
mov
fsub
enter
mov
inc
stc
mov
inc
pop
sub
jmp
push
pop
clc
sub
adcb
xchg
mov
inc
loopne
mov
push
ja
pop
cli
sbb
mov
dec
pushf
mov
jne
fmull
aas
add
ljmp
mov
loopne
and
enter
stc
mov
dec
inc
psubusw
sub
cmc
nop
test
jecxz
pop
add
cmp
out
outsb
scas
inc
jmp
sub
xchg
incl
fwait
enter
mov
mov
ret
repnz
pop
push
ficoms
sbb
cs
xchg
int
jnp
jno
lds
loopne
jmp
pushf
out
xorb
loopne
sbb
aaa
mov
out
lahf
out
xor
and
mov
cwtl
and
je
dec
leave
push
mov
shlb
sub
cld
loopne
pop
sbb
dec
xchg
in
popa
into
cmc
and
jecxz
jo
xchg
sub
xchg
adc
push
mov
lret
repnz
jnp
ljmp
adc
xor
push
push
and
and
xor
adc
mov
mov
pop
adc
mov
add
jp
enter
or
cmp
inc
sbb
inc
ds
cmp
xchg
cltd
jnp
js
mov
popf
xor
jnp
sub
mov
mov
fiadds
loope
lret
push
mov
scas
cmpsb
cmp
mov
mov
mov
xchg
and
sbb
sub
cmp
or
arpl
test
xchg
dec
rcll
sbb
incb
lcall
cmpsb
xor
in
incb
jp
fs
lods
add
out
imul
mov
mov
outsb
lods
xor
add
inc
in
fwait
or
sbb
xor
add
lret
ljmp
dec
fnstcw
or
cmp
or
jbe
cmc
jo
jo
or
lods
jb
fidivl
mov
jo
jmp
xor
mov
jmp
jb
mov
xor
inc
jbe
cmp
fsub
mov
mov
mov
mov
inc
pop
adc
movsl
lods
jmp
dec
jno
lods
jns
scas
dec
cmp
imul
push
lock
cmp
cwtl
test
push
pop
iret
insb
sbb
cwtl
mov
int3
popa
inc
dec
out
jl
add
dec
mov
mov
push
or
inc
inc
mov
psubq
adc
mov
add
cmp
inc
xchg
mov
dec
push
mov
fisubs
xor
sub
movsl
and
mov
xor
adc
cmp
add
xchg
incl
push
push
cwtl
jno
lock
push
pop
dec
and
xchg
xor
mov
je
cmp
cwtl
adc
dec
jle
xchg
imul
iret
mov
fimuls
push
test
scas
mov
je
push
mov
xor
aad
shlb
cwtl
pop
addr16
xor
in
stc
mov
or
jo
scas
clc
inc
in
inc
sbb
nop
bound
ret
adc
adc
mov
scas
les
push
outsb
out
inc
xchg
push
jmp
aam
lret
sarb
lea
stc
pop
jns
int
mov
mov
pop
sbb
or
xor
clc
push
adc
mov
mov
xchg
mov
iret
pop
sub
data16
and
and
jg
inc
cmp
ss
and
mov
or
cs
adc
cli
popf
mov
ret
inc
push
sbb
pop
icebp
call
leave
adc
in
sub
gs
cmp
adc
lret
sbb
sbb
xchg
xor
scas
jl
inc
push
in
push
push
push
mov
pop
sub
fxch
lock
popf
fucomp
push
push
lock
je
pop
jl
add
subb
pop
insb
in
rcrb
inc
shlb
mov
out
mov
in
pop
inc
push
ss
cmp
jae
adc
push
ljmp
mov
enter
mov
int
adc
and
imul
sub
bound
jb
mov
cmp
jp
lcall
pop
leave
imul
pop
mov
and
mov
lcall
inc
insl
cmp
fldl
add
ds
pop
cmp
cs
repnz
cmpsl
stc
call
shlb
test
fs
insl
push
adc
or
stc
cmp
dec
test
rcrl
stos
mov
pop
movsl
pop
inc
xchg
int
fcmovne
mov
frstor
stos
insl
push
ror
adc
push
incb
pop
out
fcoml
int
add
add
nop
xchg
dec
mov
cmp
movsb
jnp
outsb
cmp
stc
adc
jg
mov
dec
xchg
push
loope
jae
je
ret
push
cli
ljmp
adc
fldl
adc
clc
dec
pop
lret
lea
pop
push
lods
in
adc
test
push
mov
stos
push
xor
adc
add
pop
mov
mov
inc
ds
data16
pusha
inc
je
sbb
jle
andl
mov
adc
aas
lods
inc
nop
dec
fldl
outsb
les
inc
scas
fcompl
xlat
mov
test
mov
mov
or
mov
decl
xlat
gs
and
jb
daa
ds
mov
jo
push
ja
iret
push
addr16
xchg
aaa
lock
pop
rcrl
adc
cld
addr16
decb
out
lea
cmpsb
icebp
divb
leave
push
sub
js
push
in
insb
sub
insl
xor
loopne
inc
xchg
in
mov
push
mov
jns
add
orb
sbb
mov
push
cmp
mov
jo
insl
inc
dec
inc
push
mov
cmpl
pop
insb
stos
lods
mov
mov
pop
xlat
mov
ret
xor
inc
fidivl
dec
jge
xchg
jl
jne
movsb
adc
jo
int3
xchg
adc
cmpsb
lret
or
lds
ds
les
lahf
push
arpl
xchg
mov
and
mov
lahf
fcompl
call
icebp
and
mov
cmp
push
sbb
mov
movsl
cltd
outsl
test
xor
push
push
xchg
pop
xchg
cs
jg
neg
sahf
mov
mov
bnd
das
push
xor
push
push
mov
dec
add
scas
arpl
dec
inc
daa
std
add
xlat
mov
scas
add
andl
pop
inc
inc
and
es
cmc
js
inc
xchg
sbb
scas
pop
sbb
add
les
ja
ret
aas
clc
inc
jbe
cmc
jo
pushf
daa
insb
jmp
inc
lcall
add
je
stos
insl
movsl
mov
cwtl
inc
rorl
jno
repz
mov
das
mov
pop
xchg
in
mov
jge
xchg
jo
data16
fistpl
negb
mov
shll
dec
mov
inc
cmp
call
and
insb
mov
aas
pushf
out
sbb
fwait
dec
aam
sub
cmp
dec
aas
cmp
jl
pushf
mov
dec
test
jmp
imul
jnp
scas
dec
pop
cmp
xchg
mov
xor
movsl
es
mov
cmp
pop
push
jmp
lods
loope
mov
std
add
data16
and
sub
test
jae
add
cmp
mov
add
dec
das
stos
add
adc
inc
and
cli
jg
test
cmpsl
xor
mov
jb
lret
int3
mov
iret
repz
out
pop
out
jb
dec
jne
test
outsl
popa
loop
sarb
out
aaa
mov
sub
mov
std
enter
xor
aad
mov
push
adc
pop
add
std
mov
mov
pop
rorl
nop
scas
ret
sahf
loopne
outsb
dec
mov
lds
mov
xor
mov
rcl
in
adc
mov
test
test
cmpsl
jbe
fstpl
push
enter
ja
sub
xchg
repnz
test
cmp
jo
movsl
out
loope
mov
popf
and
push
jmp
cmpsb
das
inc
dec
jno
sub
dec
hlt
jo
inc
mov
loopne
and
pop
repz
mov
sahf
lods
xor
test
dec
call
or
test
cltd
add
pop
sub
jmp
iret
pushf
mov
fldcw
adc
imul
and
xchg
push
repnz
aad
seto
out
cld
jmp
lret
es
xchg
and
mov
pop
mov
push
arpl
test
pusha
mov
addr16
daa
pop
rorb
pop
dec
mov
push
pop
shrl
shl
loop
out
push
push
pusha
ficomps
sbb
inc
push
inc
outsb
psrlq
int3
rcll
push
mov
in
dec
mov
cmpsb
repz
cmp
cli
jle
sbbl
pushf
jns
psubw
daa
cmp
fiaddl
fsubrl
sub
lahf
inc
sbb
lret
pop
sbb
push
aad
push
pop
and
fwait
push
aam
orl
xchg
mov
xor
or
xor
mov
repz
sbb
push
in
jns
sbb
jb
addr16
or
mov
jo
xor
xorb
clc
and
imul
in
push
inc
and
cwtl
movsl
pushf
mull
sbb
pop
sbb
mov
xchg
inc
popa
out
push
adcl
adc
dec
cmp
mov
sub
sbb
ret
scas
inc
arpl
xor
mov
bound
dec
sub
sub
dec
adc
sub
push
xor
and
scas
lret
iret
mov
add
push
add
and
movq
xor
fadds
jp
cli
push
jmp
in
ja
fs
cli
xlat
mov
sub
je
mov
xor
jno
loope
mov
or
mov
repz
les
xor
sub
pop
rorl
mov
sahf
repnz
arpl
adc
fdivrs
push
adc
mov
fnsave
aam
mov
mov
sbb
fmul
adc
add
in
mov
std
dec
add
push
and
sahf
inc
push
popa
pop
orb
cld
add
adc
pusha
popf
jge
jbe
aaa
pop
or
aas
fstps
push
mov
or
and
outsl
mov
push
add
out
mov
dec
pop
hlt
dec
mov
imul
std
mov
xchg
sbb
pop
inc
add
rcll
sub
inc
stos
jmp
pop
jns
cmp
pushf
orb
dec
cmp
loop
mov
insl
jnp
push
ja
sub
jge
jb
mov
sbb
movsl
xchg
gs
mov
in
mov
jp
add
adc
push
data16
xor
jbe
ja
cwtl
mov
lcall
jae
inc
sbb
xor
andb
xchg
dec
jmp
movsb
insb
jae
sbb
ret
stos
or
jae
jbe
fimuls
fcmovne
jle
pop
cmc
inc
xor
jns
dec
sahf
jge
repnz
xchg
mov
repnz
mov
fs
jne
mov
jbe
fnstsw
and
pop
or
addr16
fldenv
xlat
add
xchg
inc
cmpsl
xchg
and
push
sbb
mov
fisttpl
jl
or
cwtl
push
jno
push
mov
fcompl
push
int
sahf
hlt
sub
dec
clc
or
mov
dec
fimuls
insb
outsb
jnp
sbb
inc
stos
jle
adc
inc
pushf
sub
pop
shr
cmp
pop
cmp
nop
mov
mov
mov
sub
jle
mov
jp
mov
loop
jae
arpl
xchg
mov
jns
repnz
or
jge
int3
jo
into
push
mov
mov
push
std
in
jecxz
push
std
sbb
fdivrl
adc
sbb
sbb
ret
fmull
inc
bound
addr16
add
add
add
fwait
ret
push
mov
hlt
ret
stc
leave
out
dec
ds
dec
ds
mov
inc
fucomp
ss
and
fimuls
fisubrs
shr
scas
in
and
jp
and
mov
or
in
pop
jle
lea
xor
pop
xor
subb
mov
cmc
adc
cmc
clc
imul
dec
xor
in
pop
push
sub
xchg
std
or
ss
stos
push
add
rep
push
repnz
push
ss
dec
addr16
mov
mov
add
sbb
adc
jno
jnp
cli
push
inc
imul
orb
in
push
jle
cmp
inc
jnp
push
jecxz
jle
lret
stos
das
aaa
sbb
fs
inc
xchg
out
idivb
hlt
and
sahf
cmc
popf
bound
subb
lahf
les
cli
xchg
ljmp
fimull
lahf
mov
jle
mov
push
shlb
dec
sub
inc
iret
and
loopne
and
mov
aas
dec
push
or
push
lahf
cmp
loop
dec
insl
fistpll
rolb
popf
mov
inc
sub
cmp
xor
adc
lcall
cwtl
jns
mov
push
bound
lea
and
sub
addb
pop
lock
push
lea
icebp
gs
sarl
adc
inc
in
scas
dec
mov
xor
and
adc
jne
into
pusha
mov
shlb
loope
pop
decl
adc
clc
push
nop
inc
pop
dec
ss
out
jo
mov
pop
jmp
and
xchg
mov
pusha
ljmp
ss
enter
or
mov
aaa
loop
or
adc
dec
xor
cmp
lret
out
fdivs
in
mov
ljmp
cmpsl
call
js
cwtl
dec
repnz
stc
add
mov
sub
popa
sub
clc
cmp
adc
in
sbb
clc
gs
push
push
jmp
or
pop
push
les
push
xchg
mov
inc
or
jno
cwtl
into
add
pop
inc
test
mov
in
cmp
pop
das
cmpsl
mov
das
insl
je
or
subb
push
jnp
sbbb
cmp
sbb
pop
dec
pop
mov
insb
sub
mov
ds
addb
orl
mov
sahf
outsl
loope
mov
repz
and
mov
sbb
and
imul
mov
scas
cs
mov
or
mov
mov
lret
and
jmp
fistps
sbbb
add
xor
mov
push
shl
push
cmp
mov
mov
lods
push
cmp
cmpsl
mov
fildl
int3
stc
sbb
in
std
and
es
jb
cmp
mov
scas
arpl
into
ljmp
dec
out
cmp
pop
and
enter
fnsave
outsb
push
popf
mov
hlt
rorb
and
out
imull
lret
and
push
sbb
ss
xor
out
pop
test
into
sti
and
mov
test
and
fisubl
dec
fidivrs
int
adcb
lock
mov
jle
fidivs
push
dec
lock
xor
call
push
push
fidivl
aaa
decb
or
mov
inc
cli
xchg
push
jmp
repz
add
bound
mov
jo
sub
push
aam
cmp
mov
or
mov
test
xor
mov
mov
sbb
cmp
inc
out
mov
and
add
mov
arpl
rcr
adc
xor
stos
pop
push
push
mov
popf
les
xor
outsl
or
or
xor
adc
jge
dec
aas
jmp
sub
or
add
xor
fisttpl
leave
mov
ds
loopne
dec
cwtl
push
sbb
xchg
scas
cmpsl
rcrb
lret
lcall
jns
fwait
in
mov
jecxz
shll
scas
lret
add
jne
rcrl
push
mov
sarb
sti
cmp
adc
mov
into
pop
leave
adc
repnz
stos
mov
cmp
push
and
bound
xor
and
xchg
jle
adc
mov
popf
xchg
test
or
adcl
adc
icebp
negb
cmp
xor
icebp
mov
jbe
and
arpl
pop
jno
and
xchg
notl
adc
adc
ja
or
subl
loopne
or
shl
or
inc
in
add
jg
dec
dec
pop
xchg
notb
add
enter
dec
pushf
arpl
arpl
mov
outsl
or
dec
shrl
xchg
jge
int3
aaa
jno
adc
popa
in
popa
pop
sub
in
mov
xor
addr16
fbld
sub
lret
leave
adc
inc
sarb
movsb
mov
clc
dec
js
or
jecxz
fsubrl
fsub
lock
insl
repnz
cmpsb
addl
fnsave
pop
xor
nop
push
xchg
shlb
fnstenv
dec
sbb
or
rcll
cmc
cmovne
push
pop
push
xadd
adc
jmp
mov
and
add
mov
ret
fidivrs
xor
adc
cmp
idivl
push
sbb
sub
es
mov
mov
xchg
jmp
mov
jmp
mov
xchg
sarl
stos
imul
icebp
dec
mov
cmp
inc
es
test
loopne
mov
mov
push
fst
out
dec
mov
sub
inc
push
iret
fimull
outsb
xor
cmpsl
xor
lret
pop
pop
imul
pop
mov
scas
loopne
repnz
mul
ljmp
notb
xlat
sub
in
ljmp
sub
int
lret
jg
enter
dec
lret
dec
dec
aaa
xor
and
jnp
popa
sub
std
sbb
pop
and
jle
enter
mov
pop
sub
ret
shll
mov
xchg
cmp
push
push
xchg
ss
pop
mov
test
or
xchg
or
out
pop
mov
add
js
popf
movsl
fs
inc
mov
mov
mov
jmp
stos
cld
cli
adcb
dec
sti
les
sbb
sub
mov
adc
pop
inc
push
hlt
iret
jge
cltd
pop
out
pop
scas
fiadds
cpuid
sub
out
nop
lods
lds
lret
add
or
inc
fs
test
std
loope
mov
cmp
xor
aad
hlt
push
shl
cmp
aad
hlt
loop
push
push
jle
aaa
jg
jmp
cmp
je
enter
insb
xchg
or
test
dec
subps
cld
imulb
test
aam
mov
xor
cld
pusha
and
int3
inc
inc
adc
and
aas
xchg
sub
adc
addr16
andb
pop
aam
loope
leave
sahf
push
nop
popf
mov
sbb
or
pusha
jbe
push
int
xor
sub
pusha
into
dec
mov
loop
lods
fwait
push
mov
mov
push
pop
or
nopl
sbb
mov
dec
and
cwtl
lret
movaps
aas
add
and
popa
sarl
xor
sub
ss
stos
es
jecxz
or
xor
mov
enter
dec
mov
mov
jmp
lods
inc
mov
xchg
push
push
inc
ficomps
jmp
push
add
and
inc
addr16
ret
inc
sbb
add
insl
mov
xor
xchg
movsl
jle
lods
add
pop
call
mov
adc
sbb
movsb
jo
push
mov
icebp
hlt
or
sbb
sbb
xor
adc
aam
ds
insl
cmp
out
xor
xchg
dec
xor
mov
dec
shrb
and
pusha
ljmp
or
pop
popf
movsl
xchg
movsb
pop
fldenv
repz
nop
pop
xor
frstor
mov
dec
fwait
dec
add
push
sbb
push
mov
stos
push
add
out
scas
popa
cmc
or
rcl
cmp
insl
push
out
adcl
int3
adc
xchg
dec
lea
pop
pop
data16
jmp
cld
pop
or
addl
jno
test
out
xchg
cmc
mov
ficoml
xor
push
popa
cmpsb
hlt
cmp
gs
or
lods
rol
cli
inc
mov
dec
sub
test
and
mov
mov
or
out
dec
stos
push
ljmp
add
mov
cld
dec
jae
ljmp
jge
mov
cmp
fs
mov
in
dec
fdivl
ljmp
popf
repnz
lahf
sarb
call
mov
xchg
nop
jbe
int
sub
inc
ljmp
mov
cs
mov
sti
adc
cmpsb
mov
sub
push
lret
fisttpll
sbb
sbb
pop
cwtl
lds
int3
mov
insb
or
xor
push
lret
push
sbb
and
in
out
repnz
fistl
or
sub
movsb
loopne
jns
jo
jb
fsts
jae
cmp
out
movsl
push
sbb
push
adc
mov
out
js
dec
ss
adc
add
cli
dec
hlt
xchg
sbb
jl
push
andb
mov
xchg
je
incl
cld
stos
addr16
dec
mov
push
dec
inc
inc
repnz
mov
addr16
les
mov
js
lahf
leave
fcoml
scas
cltd
sbb
mov
jo
adc
and
jnp
sbb
lahf
repnz
jle
sbb
in
cmpsl
xor
mov
jae
stc
pop
mov
aaa
xorl
cmp
rorb
rcll
into
ret
or
pushf
push
jmp
in
cli
enter
push
xchg
int
mov
add
or
mov
dec
xchg
aad
xchg
mov
or
xchg
dec
dec
push
clc
sub
lret
fnstenv
out
shr
xor
sti
fwait
call
lahf
xchg
dec
xchg
rcrb
gs
enter
das
mov
mov
and
pop
mov
stos
sbb
cmp
and
movsb
mov
es
fcoml
les
loopne
aaa
mov
dec
fiaddl
inc
xchg
out
xchg
lods
dec
inc
cmc
outsb
insb
popf
fadd
mov
and
and
fisubrl
sub
cmc
pop
and
cmp
push
mov
xor
jle
push
adc
mov
mov
xchg
dec
xorb
mov
stos
loopne
xchg
cmp
rcll
pop
jge
adc
xchg
repnz
dec
or
loopne
fcompl
in
add
jo
cmp
testb
pop
pop
lods
in
mov
outsl
and
jp
aam
cmp
outsb
xchg
fdivr
mov
adc
sbb
cmp
sub
pop
fiaddl
insl
mov
jecxz
je
ljmp
jmp
cmp
push
jl
xchg
in
rcr
push
mov
xor
pop
adc
or
push
adc
add
sub
sbb
jg
rorl
inc
sub
dec
testb
repnz
jl
sbb
imul
inc
out
imul
pop
jg
hlt
fsub
lods
mov
sahf
stc
adc
and
mov
jno
push
negb
adc
rclb
popf
stc
lea
rcl
movsb
call
adc
nop
pushf
inc
cmpb
jae
cmp
in
pusha
adcb
push
stos
cmc
jns
dec
dec
pop
sbb
adc
pop
and
loope
movups
jl
jbe
or
cmp
push
out
xchg
in
add
cmpsb
xlat
jae
dec
in
jne
js
les
or
pop
dec
cmc
xor
lods
pop
sub
and
adc
adc
movsb
jo
test
insl
sbb
pop
xor
and
sub
cmp
cld
jle
pop
rcr
in
and
fcoml
stos
fscale
shrl
cmp
xor
and
xor
lret
mov
jne
gs
popf
fs
es
cmp
push
das
shl
jmp
scas
lds
aas
les
push
push
xlat
sbb
cmp
shl
incb
imul
call
clc
sub
and
imul
mov
add
mov
inc
cli
out
push
sahf
pop
sti
pop
stos
push
out
in
mov
rolb
repz
mov
dec
cmp
xor
sbb
push
aad
pop
xchg
imul
ret
push
stos
push
mov
mov
mov
pop
add
ret
lea
sub
rolb
push
xchg
dec
movsb
pop
cmp
das
xor
pusha
sarl
in
fcomps
xchg
pop
leave
dec
adc
outsl
pop
sub
push
adc
gs
or
cmp
xor
daa
notl
popl
sahf
insb
lods
mov
jmp
cwtl
push
or
stc
jg
add
fstl
cmc
test
out
cs
out
inc
aam
mov
push
pop
push
ja
pop
ret
push
insb
test
les
mov
jl
sbb
das
enter
pop
das
cmpsl
push
scas
push
ficoms
bnd
push
decb
es
or
daa
push
stc
popa
lock
or
lret
mov
daa
out
scas
cmc
jg
mov
pop
mov
loop
add
pop
enter
stos
jb
fimull
les
xchg
in
ja
shl
xchg
shrl
mov
and
outsb
sbb
push
sbb
jmp
jnp
and
popa
push
mov
or
orb
dec
addr16
cwtl
repz
sub
xlat
xchg
cmp
adcb
bound
mov
fsubs
xor
sahf
cmp
daa
mov
xorl
jb
push
pop
bsr
cmp
dec
dec
adc
cmp
xchg
out
sub
cmp
xor
push
imul
mov
sbb
scas
fcmovbe
inc
int
rorb
xchg
sahf
ficoms
incb
cmp
sub
pop
mov
jno
in
inc
pusha
xor
fdivrl
mov
out
mov
lahf
add
orl
add
fsubl
sbb
mov
gs
cmp
fdivs
xor
loop
or
popf
outsb
jne
mov
push
add
cwtl
or
sti
sub
cmp
jno
xor
adc
push
add
int3
jg
lahf
pop
mov
pop
xor
inc
enter
scas
push
fs
scas
aad
movsl
sub
mov
sbb
sar
loope
push
mov
lret
xchg
sarl
push
frstor
jg
mov
imul
lds
ljmp
pushf
cmpsb
cmp
subb
aad
xchg
dec
rorl
add
xchg
sbb
dec
xchg
sbb
shrl
stc
cmp
scas
rcl
int3
cltd
fisubrl
mov
push
repnz
push
mov
fisubs
jg
mov
shll
push
mov
xchg
inc
xor
xchg
loopne
pop
pop
mov
dec
ljmp
frstor
sub
fnsave
jo
fsubl
sub
xchg
pop
es
push
clc
bound
and
sbb
mov
movntq
out
sub
xor
mov
jle
jno
sbb
jnp
sbb
stc
dec
fdivl
test
data16
inc
xchg
lcall
enter
sahf
sub
cmpsl
cmp
xchg
loop
xor
adc
fwait
mov
leave
inc
jecxz
stc
repnz
or
rcl
pop
push
aas
leave
sbb
in
sbb
je
dec
loop
push
and
aam
cwtl
cmp
add
adc
cmp
stos
push
aaa
inc
xorb
or
sub
enter
dec
push
cwtl
mov
in
jge
and
adc
outsb
and
les
imulb
sbb
jb
je
rclb
arpl
iret
mov
pusha
sub
xchg
mov
push
cmpb
test
and
sbb
inc
gs
jae
jge
aas
jae
sti
lret
and
mov
insl
dec
and
push
enter
or
push
pop
bnd
mov
fisubs
mov
dec
xor
xchg
fs
jne
ret
jne
mov
sub
popa
adc
in
sub
arpl
pop
cmp
dec
mov
pop
mov
jecxz
push
sbb
fwait
andl
and
xor
imul
bound
lods
mov
cld
cmpsl
addr16
daa
lret
pop
xor
cli
fldl
insb
imul
mov
mov
hlt
inc
in
in
xchg
iret
popf
mov
mov
jne
hlt
scas
adc
out
mov
je
shl
insl
xor
and
shl
iret
pop
les
std
jns
lock
arpl
movsb
add
daa
mov
xchg
iret
test
cmpsl
pop
sbb
repnz
in
or
orl
outsl
fldl
adc
dec
xor
imul
xchg
insl
pop
test
xchg
enter
pop
enter
xor
aam
jno
xorb
sub
xchg
sub
addr16
jge
mov
push
xchg
cmp
mov
test
jle
push
gs
cmp
xlat
je
dec
mov
mov
lea
das
inc
mov
clc
in
mov
push
mov
shrb
ljmp
adc
cwtl
jmp
lds
sbb
jae
dec
mov
jmp
mov
popa
into
lods
push
pop
call
arpl
or
adc
xchg
jns
mov
fdivrl
jae
hlt
jp
mov
fdiv
dec
arpl
daa
jecxz
fildll
faddl
mov
mov
in
into
scas
inc
xor
icebp
loopne
push
scas
sbb
stc
insl
insb
popa
stos
adc
jnp
sbb
stos
sbb
jnp
mov
stos
lret
mov
and
repz
movsl
ja
aaa
ss
repnz
sbb
jns
call
xchg
into
ds
add
dec
and
inc
push
sbb
int3
daa
shrb
mov
pop
out
inc
lret
mov
or
movsl
je
lret
mov
mov
lock
pushl
ret
inc
scas
cwtl
jge
leave
add
jl
dec
test
aad
mov
sti
mov
repz
mov
dec
xor
pop
stos
insb
loop
fstps
stos
mov
loop
test
int
mov
daa
dec
pop
ja
ss
imul
sbb
int3
dec
jo
push
lret
insl
mov
stc
sub
mov
pxor
xchg
push
loope
sub
jb
scas
mov
insl
mov
daa
dec
xor
sub
and
push
ss
jno
mov
jo
enter
stos
inc
and
std
testb
scas
inc
pop
jbe
cmp
fimull
outsl
das
setge
cmp
push
dec
jns
out
mov
das
sti
push
inc
call
or
dec
jo
xchg
lods
mov
jmp
dec
lea
mov
mov
and
cli
ficomps
xchg
xchg
lock
or
sahf
xor
js
pop
jns
xchg
fs
loop
dec
dec
sub
fs
test
pusha
pop
jp
xchg
cmp
cmp
mov
pop
xlat
fistl
cmc
jecxz
add
pop
shl
inc
cld
dec
or
outsl
and
add
lcall
cltd
cmp
dec
or
hlt
jne
jae
repnz
aam
out
sbb
int
inc
pop
cmpsl
pop
scas
leave
jge
jl
mov
ljmp
out
push
rorl
sti
mov
mov
shll
or
adc
mov
dec
jbe
pop
nop
je
sub
movsb
icebp
repnz
push
and
adc
jl
ljmp
sub
popa
das
rcll
lods
enter
fwait
push
mov
xor
mov
mov
mov
cld
stc
dec
push
xchg
dec
cltd
mov
jb
sbb
fdiv
imul
in
out
shll
cmc
rcr
add
and
shr
xchg
pop
jne
mov
mov
xchg
push
aad
es
arpl
fxch
push
iret
xor
pop
scas
cmp
aam
inc
loope
shr
mov
ds
lods
jo
push
insb
leave
xor
mov
aad
push
adc
jle
mov
xor
lea
leave
rcll
icebp
testl
gs
scas
xchg
cmc
push
stc
mov
xchg
ljmp
ljmp
jb
fistl
fcmovnb
pop
stc
popf
outsl
fwait
lcall
push
out
xor
pshufw
cmp
out
jb
sub
mov
insb
int
cmp
push
jnp
cmp
rcll
imul
lds
or
add
test
in
ljmp
pop
mov
loope
sahf
lcall
faddl
sub
inc
push
std
pop
packssdw
arpl
pop
inc
or
in
mov
lds
push
lahf
sbb
jl
icebp
cmp
push
pop
insl
js
xchg
sbb
dec
xchg
or
lods
jmp
mov
or
and
mov
enter
mov
pop
xlat
cli
hlt
imul
adc
lods
paddb
cltd
sub
cwtl
cld
xchg
loope
fs
cld
rorl
or
std
mov
leave
lret
rcl
jle
loope
fstpt
pop
shll
cwtl
lahf
imul
inc
or
jae
mov
mov
push
shll
adc
xor
lods
jg
imul
data16
sbb
pop
scas
int3
ljmp
outsb
outsl
sbbb
mov
and
test
add
dec
movsl
aas
mov
aaa
mov
cld
data16
fs
dec
addb
push
aas
jecxz
mov
pop
cmc
jnp
xchg
aad
je
das
popf
outsb
pop
ja
icebp
xchg
mov
mov
repz
popf
nop
clc
pop
cmp
roll
subl
dec
mov
pushf
cmp
out
addr16
add
mov
add
cs
mov
enter
daa
out
rcl
dec
add
sub
jecxz
jl
xor
push
fbstp
inc
jo
push
add
cld
ds
and
ret
and
insb
adc
shr
mov
pop
mov
jl
idivl
xchg
icebp
xor
ss
cmp
bound
push
jmp
das
lods
push
dec
fwait
inc
lcall
outsl
fucomi
xor
inc
mov
and
popa
mov
sbbl
and
lds
xchg
push
call
xchg
arpl
cmpsb
pop
mov
xor
ret
xor
repz
dec
xchg
ficoml
out
push
roll
mov
xchg
cli
dec
or
sarl
xchg
addr16
mov
ljmp
dec
lds
scas
jo
stos
xchg
out
xor
stos
adc
adc
std
imul
pushf
mov
inc
mov
cmp
jl
test
mov
jnp
and
loop
push
cmp
pusha
shll
lea
stc
outsl
movsb
cmp
outsl
ljmp
cmp
jmp
inc
movsl
adc
int
dec
jne
insl
fwait
sbb
pop
mov
xchg
cmp
lea
jno
push
movsl
test
pusha
or
dec
cmp
adc
mov
rcrl
mov
sbb
jmp
cmpsb
sub
bound
add
and
adc
mov
stos
fdivrs
mov
repnz
mov
mov
int3
out
cmp
inc
mulb
adc
fimull
aam
sti
or
mov
repz
fcomip
adc
in
outsb
js
adc
mov
inc
mov
mov
incl
test
shrb
stc
aad
or
pop
aaa
fidivs
pop
pusha
xchg
inc
aas
pop
fdivrl
mov
and
lock
cmp
fwait
push
add
mov
clc
mov
mov
mov
jl
sub
aas
sbb
pushf
and
fcomps
sub
xchg
dec
jge
push
or
fildll
bound
dec
push
dec
pushf
xchg
cmc
xchg
mov
xor
ss
mov
add
or
das
inc
cmpsb
mov
and
sub
sub
int3
inc
push
rcrl
sbb
push
xchg
ficoml
sbb
popa
inc
shrl
pop
cwtl
mov
lods
xor
pop
xchg
push
ret
or
stos
in
testl
in
pop
in
xchg
or
push
mov
fmull
int3
leave
mov
inc
call
cmp
add
pushf
gs
push
iret
jno
iret
in
add
scas
sub
add
inc
hlt
and
add
test
out
pop
pop
mov
push
jae
dec
sbb
push
cld
inc
leave
adc
pop
clc
sbb
test
fistpl
repz
pop
jo
enter
mov
jg
loopne
mov
sbb
pop
ss
clc
jnp
adc
adc
outsl
or
jns
jp
loop
jge
or
in
movsb
jp
ds
add
lcall
mov
or
and
dec
or
mov
fnstenv
cmp
shrl
sarl
sahf
rcrl
adc
popf
xchg
sub
test
ror
popl
cltd
daa
mov
lcall
xchg
cli
lcall
icebp
out
mov
icebp
pmullw
fucom
push
mov
repz
or
pop
popa
push
into
mov
cmc
fwait
jmp
and
pop
inc
pop
sarl
es
mov
mov
adc
cmp
push
dec
fs
mov
dec
sub
pop
mov
test
cmpl
mov
mov
and
pop
mov
mov
aaa
aas
scas
xlat
xor
jne
clc
mov
add
in
pop
inc
inc
adc
push
into
scas
rclb
pop
mov
jne
mov
adc
pop
or
jns
arpl
pushf
iret
mov
jbe
sbb
mov
and
sarb
data16
jl
notb
adc
aam
mov
jge
es
push
cmpsb
pop
js
cmp
clc
xchg
out
xchg
out
or
dec
aam
stos
pop
cmc
gs
cmpsb
fadds
aaa
or
add
iret
cmove
mov
mov
push
movsl
ret
xchg
add
pop
ret
gs
cmp
xchg
push
xchg
inc
mov
cmp
bnd
shrb
xor
movsb
fildl
jl
xor
mov
test
sbb
jmp
rcl
mov
inc
imul
ljmp
lret
pop
sub
sub
dec
ret
xchg
mov
fldenv
insl
jle
dec
jp
mov
inc
xchg
call
out
repz
mov
inc
ret
scas
jge
lock
lds
stos
or
stc
pop
insl
insl
lahf
es
out
js
fs
mov
out
push
jle
out
cmp
inc
shll
leave
clc
pusha
jle
dec
test
sbb
insb
rolb
stos
aam
xor
sbb
cmp
stos
insb
out
or
dec
dec
stc
inc
push
xchg
inc
or
ds
jbe
jbe
jl
je
js
pushf
lds
pop
jge
mov
mov
lret
mov
dec
movsl
dec
and
repnz
shrb
cmp
and
jnp
shlb
insl
push
shl
nop
fwait
cmpsl
jno
pop
fadds
jmp
inc
push
mov
enter
andl
aas
inc
cmpsb
dec
mov
iret
loop
adc
inc
test
das
out
adcl
lea
or
out
cmpsl
adc
jle
sub
leave
jmp
jg
mov
pop
and
int
aam
cmc
pop
lea
lea
mov
scas
jle
cmpsl
sub
movsb
dec
mov
gs
lahf
mov
cmp
cmp
aaa
imul
jle
loopne,pt
pusha
pushf
lcall
rcr
inc
les
pop
pop
or
jae
mov
popa
mov
xor
sub
inc
mov
ja
adc
push
push
xlat
jg
sub
into
cwtl
jmp
adc
lds
lcall
dec
call
inc
rcl
pop
add
or
lock
gs
movsb
pop
pushl
das
xchg
jmp
add
outsb
adc
adc
bound
dec
cmp
loop
or
xor
jo
das
repnz
xchg
out
mov
or
es
int3
xchg
iret
add
fwait
test
int3
mov
cmp
cmp
imul
test
adc
jp
xchg
push
push
in
xchg
add
inc
push
sahf
xchg
mov
push
jb
lds
ror
popa
fs
sahf
in
add
mov
lret
jp
dec
push
fisubs
cmp
pusha
or
mov
mov
test
mov
iret
add
out
push
xchg
xchg
ret
fisubrs
rcr
or
leave
insb
cmp
addr16
push
push
add
in
sbb
cli
cmp
jb
sbb
or
jge
adc
sti
pop
cmp
in
cld
pushf
ss
and
pop
jmp
stos
push
jg
inc
and
jno
add
mov
out
add
and
add
inc
push
xor
push
inc
out
mov
sub
cwtl
xor
lods
cmp
xchg
push
pushf
or
stos
ljmp
xchg
aas
sub
arpl
dec
stos
xchg
inc
mov
jbe
scas
cmp
into
or
sub
sub
jge
scas
test
ret
out
mov
repnz
scas
gs
add
or
adc
cmpsl
xor
mov
inc
shrb
or
pusha
dec
push
push
xchg
jbe
and
pop
inc
bound
insb
lds
jecxz
imul
cltd
bound
add
out
dec
out
mov
cmpsb
and
inc
dec
lods
adc
mov
xor
and
std
mov
cld
and
pop
jp
scas
test
pusha
or
jnp
mov
insb
fnstcw
xchg
sarl
adc
bound
xchg
mov
stos
sub
dec
pop
lds
inc
fnstenv
fisubs
pop
push
mull
add
in
int3
inc
filds
cmpsb
outsl
je
adc
adc
aam
xchg
push
sbb
or
ficompl
call
jno
in
push
lods
sbb
daa
lods
xor
mov
inc
ficoml
push
fucomp
jmp
mov
cltd
loop
clc
rcr
jne
stos
adc
lods
lock
lret
sti
leave
dec
mov
or
and
sub
daa
out
ret
test
mov
sub
mov
insb
and
shl
mov
or
sbb
test
pop
lea
cmp
xchg
jns
xor
xor
cmp
int
shl
and
sub
rcrb
fstpl
inc
and
test
leave
int
add
push
jb
jne
pop
lret
adc
mov
mov
movsl
ret
xchg
mov
aaa
and
jo
jg
rcl
insb
jae
adc
jmp
adc
xor
aam
lret
shrl
xchg
test
hlt
jmp
fdivp
lret
jp
rcr
fisubrs
pop
xchg
aaa
dec
mov
pushf
mov
out
jnp
subl
push
sbb
inc
pop
push
subl
jb
test
jns
jl
pop
pop
iret
imul
jmp
xchg
dec
push
sahf
jb
test
jnp
fsubl
sub
sti
sbb
or
stos
repnz
jmp
ljmp
movups
addr16
jmp
pop
jge
or
pushf
pop
outsb
test
push
aam
mov
mov
scas
not
or
insb
adc
rclb
and
lods
pop
in
cmpsl
push
jne
jb
movsl
outsb
fstpt
jmp
push
test
cld
pop
or
pop
mov
insb
repnz
pop
push
add
movsl
push
scas
or
data16
jmp
fmul
pop
imul
dec
frstor
repz
loopne
stc
pop
mov
pop
ret
dec
lds
or
sbb
lahf
lods
xchg
push
je
stc
mov
push
mov
jbe
sbb
jbe
outsb
xchg
sub
stc
sub
je
inc
stos
cld
test
cwtl
mov
shlb
divl
gs
xchg
ret
fidivs
push
jbe
lret
cmp
cli
scas
pusha
dec
repnz
dec
push
repz
push
sub
call
push
aaa
cld
jecxz
inc
fdivrl
pop
push
jb
outsb
mov
inc
outsl
mov
dec
in
pop
adc
fiadds
es
lahf
aam
or
jo
push
out
sbb
lea
jb
jle
movsl
test
lret
and
sub
pop
mov
out
jns
stos
push
inc
add
mov
dec
insb
ret
lret
and
test
stos
cmpsl
outsb
cld
lods
cmp
lea
cmp
ja
mov
int
rclb
movsl
inc
popa
rcr
sbb
cmp
aad
pop
aad
das
or
jbe
sub
jb
popa
data16
sbb
es
push
outsl
ret
imul
data16
push
mov
push
mov
lret
push
pop
repz
pop
lcall
loop
dec
add
nop
ja
mov
cmpb
jno
insb
incb
bound
ja
adc
repnz
dec
jp
subl
mov
sbb
mov
inc
jae
leave
inc
push
movsl
mov
jle
jmp
or
fldt
xor
mov
mov
push
or
xor
pop
imulb
push
push
rcrb
fcoms
jmp
dec
inc
mov
stos
jecxz
xchg
lds
or
cmp
movsb
outsb
aas
or
les
jnp
lods
mov
imul
imull
mov
fiaddl
pop
leave
pop
mov
movsb
xor
or
adc
out
mov
sbb
cli
mov
mov
je
jmp
sub
mov
lcall
stc
es
inc
lods
jne
ret
add
lret
loope
jns
fists
movsb
js
movsb
fildl
repz
cmpsl
pop
mov
jecxz
jmp
adc
and
mov
mov
mov
int
sub
in
fdivrs
jecxz
fdivr
cmp
fdivl
into
pop
cmp
ss
addr16
xchg
les
loop
dec
pusha
jae
bnd
in
jmp
js
push
stos
lahf
mov
or
mov
xor
imul
mov
aam
xor
out
add
dec
mov
dec
outsb
rcrb
xor
push
dec
cmc
orl
mov
mov
xchg
jno
xchg
sub
cmpsb
jp
insb
pop
dec
mov
loop
mov
aaa
es
sub
iret
les
sbb
jbe
sbb
lods
xor
inc
or
sarb
enter
cmp
and
popa
ljmp
and
jne
or
mov
outsb
psraw
int
mov
inc
movsl
in
in
fnop
lea
push
ljmp
fs
xcrypt-ofb
cmpsl
lods
cltd
fdiv
mov
cld
lock
adc
imul
outsb
ja
filds
pop
add
jge
xor
or
add
negb
rcr
cli
lahf
pop
incl
daa
mov
pop
sbb
mov
push
mov
lods
xor
clc
loope
mov
movsl
popf
ds
xor
cwtl
rclb
jb
adc
dec
fdivl
mov
push
movsb
leave
aaa
and
daa
or
psubsw
mov
sti
adc
cmp
sub
lds
inc
cltd
fsubrl
ret
icebp
sub
sub
or
pop
pcmpeqd
call
test
mov
ret
adc
and
xchg
mov
or
xor
inc
cmc
or
sub
lods
out
push
lcall
mov
shlb
push
ds
in
ret
imul
lret
mov
and
idivb
inc
stos
les
jnp
or
xor
stc
scas
inc
outsl
dec
pop
mov
adcb
insb
imul
shrb
add
xchg
dec
push
push
sub
mov
pop
aaa
jecxz
ret
sub
or
mov
pop
sub
sub
pop
and
lods
dec
icebp
loop
jecxz
pusha
nop
and
mov
add
mov
call
inc
inc
imul
cwtl
cli
dec
in
scas
negl
repnz
and
cmp
cmc
push
or
push
mov
cmp
aam
loope
inc
inc
pop
inc
adc
mov
addr16
jnp
in
mov
ss
or
sbb
push
mov
jnp
scas
dec
js
dec
sahf
or
ds
rolb
add
icebp
cmp
or
outsl
xor
adc
in
imul
bound
push
mov
mov
stos
jnp
push
mov
into
push
fwait
push
sub
inc
mov
dec
mov
stos
mov
out
mov
jno
leave
jecxz
dec
xor
lahf
sbb
pop
jl
repnz
push
inc
lret
cmpsb
pop
dec
ss
push
es
ret
push
mov
nop
xchg
mov
jmp
loopne
nop
and
push
add
cmp
out
adc
xchg
popa
aas
ret
lea
cmp
clc
psubusw
pop
rclb
bound
inc
push
xor
pop
adc
insb
mov
insl
loopne
add
out
aam
jae
or
mov
scas
lahf
xchg
inc
sub
cmp
xchg
inc
inc
inc
pop
dec
cs
movsl
inc
sub
mov
dec
pushf
xchg
pop
xchg
pusha
addl
push
xor
inc
pop
dec
mov
aam
test
push
in
sub
and
dec
sbb
rol
cmp
inc
pop
jo
aad
jp
dec
aad
push
stc
dec
fbstp
cltd
jl
fwait
cmp
xchg
xchg
ljmp
add
mov
pop
mov
mov
push
pop
push
inc
mov
adc
mov
movsb
into
lret
pop
sbb
and
mul
jbe
jecxz
cltd
jle
popf
cld
icebp
enter
cmp
mov
cmp
in
int
call
xchg
inc
ja
int3
sub
and
jb
mov
sub
and
xor
dec
stos
je
outsb
lock
call
scas
mov
sbb
adcl
xchg
das
aad
testl
sbb
inc
fisubrs
stos
add
mov
dec
sbb
add
jg
mov
sbb
shrl
adc
or
outsb
je
cmp
pop
mov
into
sbb
mov
xor
loop
stos
jne,pn
mov
sbb
inc
pop
inc
push
lock
bound
mov
stos
mov
adc
dec
jae
adc
in
xor
insb
xor
mov
fcmovnb
mov
test
jae
stc
stos
sbb
das
leave
leave
sti
sbb
cli
cmp
lds
dec
mov
push
pop
insb
xchg
inc
jg
push
add
insl
into
pop
xor
stos
sahf
dec
ret
test
mov
das
dec
iret
popl
xchg
hlt
cmovae
test
insl
rorb
int
mov
mov
xor
or
in
fadd
int3
inc
inc
in
mov
dec
xchg
mov
outsb
in
rorl
pop
stos
pop
adc
and
subl
adc
cmp
test
mov
es
scas
pop
pop
call
xchg
hlt
lods
cld
stc
cmp
lds
movsl
xchg
mov
fs
mov
sub
out
push
adc
mov
add
push
dec
movsl
cwtl
scas
shll
mov
pop
lds
popf
lcall
cwtl
mov
loop
add
inc
stos
ja
and
fnsave
popf
dec
lret
or
inc
mov
addr16
pusha
in
cs
shlb
and
pop
xorl
xchg
and
lret
inc
test
pop
adc
js
rcr
ror
imul
and
sub
fistps
xor
lds
fcoms
ss
lods
dec
and
jne
outsb
mov
push
add
hlt
int3
call
movsl
stos
js
push
pop
jge
push
shrb
aad
insb
xor
test
jl
shrb
push
test
loope
fnstcw
cmp
lret
stc
cwtl
jbe
aad
sub
push
mov
loop
adc
aaa
xchg
shl
cs
push
and
movsb
out
cmp
aaa
push
lret
decl
fidivs
jno
inc
xlat
js
or
and
out
add
jnp
mov
add
xchg
dec
push
das
insb
mov
push
xchg
mov
push
ret
adc
add
loope
bound
les
cmpsl
dec
or
push
fstps
ja
or
cwtl
jecxz
xchg
pop
mov
xchg
xor
aam
lcall
jecxz
mov
cmp
push
inc
or
sbb
mov
xchg
pop
dec
fidivrl
and
mov
cmp
dec
mov
inc
ds
test
mov
mov
push
lret
stos
imul
and
std
xlat
fisttpl
xor
mov
mov
sahf
aad
add
subb
ja
in
data16
outsl
addr16
pop
clc
or
orl
insl
jg
inc
push
and
jnp
das
cmp
loop
sbb
in
jae
sbb
ja
inc
xchg
xchg
fwait
inc
adc
dec
lds
adc
popf
jmp
xor
lret
call
lds
ljmp
loope
push
pushf
add
mov
arpl
inc
sbb
cld
aaa
int
pop
pop
mov
jbe
notb
sahf
stc
push
adc
lods
out
sub
push
and
nop
cmc
cld
imul
movsb
or
mov
mov
rclb
or
xchg
jbe
fisttpl
lret
lods
mov
mov
inc
stos
sub
sbb
orl
rcll
jno
mov
addb
sub
mov
ss
mov
fidivrs
add
inc
fisubrs
cmp
subb
or
cmp
lret
pop
add
subl
in
test
sbb
cld
gs
push
imul
mov
shrb
mov
jae
imulb
shl
in
in
inc
mov
adcb
xchg
cmp
call
xchg
jl
inc
xchg
cmp
jmp
daa
pop
enter
cltd
or
aad
cmp
and
lods
add
stos
int
cmp
add
jno
sub
leave
lret
les
es
lret
nop
jnp
test
or
xor
jne
popf
pop
in
adc
mov
fstpl
inc
add
mov
fstpl
inc
js
jo
push
pop
mov
testb
mov
lods
mov
xor
mov
aad
gs
loope
mov
sti
mov
es
mov
push
sbb
jns
lahf
xor
xchg
dec
xor
shlb
xchg
out
pop
push
fs
inc
push
mov
pop
sub
sub
pushf
lret
xchg
pop
call
jb
mov
fsubp
icebp
test
cwtl
xchg
mov
stos
mov
cmp
test
mov
sbb
and
mov
into
btr
and
mov
std
sub
sarb
jge
ret
cmp
in
dec
lret
push
cmp
mov
xorl
cmp
xchg
pushf
mov
fldenv
out
insb
into
xchg
xchg
lret
ja
add
add
in
jae
rcr
inc
int3
add
out
test
mov
imulb
andb
ret
in
adc
dec
bound
push
cltd
out
xor
lock
stos
insb
daa
pushf
adc
orl
cmpsl
test
roll
loop
rorl
or
clc
and
outsl
jbe
push
daa
dec
fisttps
test
idivl
je
mov
lret
pop
fsubl
sub
push
mov
aaa
pop
icebp
repnz
inc
cmp
lock
mov
xor
pop
fbstp
mov
sbb
outsl
aaa
pop
cmp
xchg
das
sub
dec
push
sbb
aas
adc
pushf
inc
ret
ret
aam
add
lea
adc
push
xchg
or
sub
push
test
mov
std
cmp
clc
incl
test
mov
sub
lahf
clc
xor
mov
jnp
and
jmp
pushf
stos
jb
aas
jge
mov
in
std
daa
pop
les
inc
mov
mov
cmpsb
sub
mov
call
lret
popf
dec
push
ja
pop
sbb
and
jo
outsl
inc
xor
es
test
mov
fidivl
lods
div
pusha
mov
mov
push
in
outsb
fcmovb
jle
adc
xor
test
xor
and
pop
adc
lcall
movsb
and
mov
jp
xor
adc
push
jns
sbb
sbb
add
cmpsl
arpl
ja
dec
std
movbe
cmp
lock
lods
pop
add
cmc
and
dec
fisttps
push
stos
push
jl
xchg
xchg
lret
fists
mov
fdivr
xchg
icebp
pop
loope
fldenv
les
lock
rcll
sub
ret
pop
mov
pop
and
xchg
sbb
sbb
sbb
aad
popa
push
mov
ror
adc
cwtl
std
ja
in
rorl
pushf
inc
dec
dec
xchg
cmpsl
fsubrl
ljmp
js
sahf
push
inc
inc
mov
sbb
jnp
jne
sub
cmpsb
mov
loopne
daa
mov
outsb
out
repz
dec
cltd
sbb
xor
push
int
repnz
arpl
shll
orl
mov
mov
dec
daa
mov
movsb
or
sti
adcl
xor
adc
dec
orl
push
cmc
sarl
push
movsb
pop
scas
and
cli
jmp
jp
push
add
mov
pop
and
jle
pop
fidivrs
clc
int
inc
xchg
out
mov
and
sub
cmpsl
adcl
dec
lret
iret
jp
add
std
sbb
pop
cmp
ja
adc
sahf
or
mov
mov
jecxz
mov
mov
arpl
cwtl
out
xor
adc
sub
in
pop
jnp
stos
stos
popa
push
pop
push
sti
loop
aam
fs
mov
repz
inc
jmp
sub
cmp
and
stos
mov
jecxz
xor
lods
dec
jecxz
mov
jno
pop
pop
pop
fldcw
jnp
push
jg
in
mov
fldenv
loopne
insb
ret
cmpsb
imul
lds
pop
pusha
sub
pop
mov
xchg
insb
xchg
fsubrl
ja
xchg
inc
inc
inc
pusha
scas
push
jg
sub
popf
scas
cmpsb
jecxz
mov
xchg
push
xcrypt-cfb
cmpsl
and
or
loop
clc
jns
clc
outsb
jb
mov
or
movsl
adc
into
fimuls
imul
roll
jne
mov
call
data16
cli
out
push
cmpsl
rcrl
push
cmp
insl
mov
ds
pop
push
in
dec
lcall
mov
xchg
lret
stos
mov
jmp
loope
aam
rcrb
in
push
rcrb
mov
cld
das
xchg
push
or
ret
cmp
cmp
fstl
repnz
rol
pop
inc
out
sbb
loop
mov
icebp
sti
test
mov
and
stos
push
lcall
add
sub
rolb
loop
mov
out
lahf
leave
add
push
test
mov
aad
loopne
pop
push
std
outsb
xor
inc
aas
sbb
push
mov
arpl
add
aam
js
pop
repnz
loopne
fs
out
adc
cmc
popf
repnz
mov
std
xorl
clc
dec
out
jge
addb
mov
in
outsl
jb
sti
cmpb
mov
push
in
push
xacquire
fbstp
rcrl
movsl
cmp
xchg
xchg
aam
cs
xor
mov
rcll
scas
adc
aas
fcomps
or
sub
mov
mov
ret
fwait
lods
stos
iret
pop
cs
mov
pusha
arpl
pop
cltd
rcrl
sbb
push
add
dec
push
push
or
inc
push
loope
clc
pop
in
popa
lret
add
test
mov
mov
stos
insl
cwtl
cmp
movsb
lock
sbb
or
ja
pop
pop
mov
sarb
js
push
inc
and
fimull
add
mov
ficoms
popa
lods
mov
mov
pusha
and
pop
push
and
inc
fadds
inc
mov
cmp
add
mov
sbb
ja
xorb
orl
popa
sub
stos
inc
xchg
in
jo
scas
js
adc
clc
and
xorl
mov
inc
mov
adc
jbe
stos
adc
out
aad
cmc
mov
pop
lods
mov
cmp
jns
cmpb
into
sarb
popa
ret
lods
push
mov
arpl
sbb
loop
dec
ret
push
sub
add
je
outsl
lds
in
sarl
pop
inc
adc
iret
addl
xchg
push
jecxz
sbb
lock
sbb
scas
inc
sub
loop
aaa
fcomps
out
push
or
sub
cmp
cmpl
dec
aad
pop
push
mov
psraw
lds
mov
nop
xor
push
lea
inc
xchg
adc
jecxz
into
xor
jo
bound
sbb
dec
sub
cmp
sbb
dec
push
movsb
sbb
adc
out
lods
add
xor
sbb
sub
ds
jg
jp
push
mov
fiadds
adc
mov
sbb
xchg
inc
int3
ss
pop
mov
inc
mov
jg
xchg
fisttpl
sbb
mov
jb
enter
addr16
fwait
sub
jl
push
imul
jb
inc
or
loop
orb
mov
push
xchg
push
pop
xor
lods
cld
jne
jl
sub
mov
cmp
xor
xchg
les
aaa
cmp
div
mov
xchg
push
add
or
add
push
push
rcrl
adc
lcall
pusha
lea
dec
lret
out
sti
aas
data16
aam
add
call
shrl
xor
sbb
pop
adc
jbe
out
movsl
xchg
je
pop
or
in
icebp
ror
inc
inc
fldl
inc
test
inc
or
fwait
add
jmp
ret
gs
cmpl
mov
fdivl
or
movsl
jno
enter
ret
add
cmc
mov
or
arpl
push
out
xor
mov
inc
test
jecxz
mov
cli
jl
ss
mov
pushf
insl
aad
inc
rol
mov
mov
mov
pop
rcrl
xchg
cmp
or
sub
pop
mov
rcr
popa
insl
es
jl
pusha
test
scas
int3
pop
cmp
mov
mov
lds
fidivl
imul
inc
jmp
fstl
out
jge
mov
or
sub
dec
stos
in
es
inc
mov
aam
mov
add
xchg
fadds
pop
and
out
sub
call
adc
mov
popa
mov
aad
xor
stos
orb
and
iret
jle
pop
rorb
imul
cltd
or
in
sarl
xchg
cltd
push
jp
and
xlat
mov
dec
mov
xchg
push
add
rcrl
xchg
aad
cli
pop
mov
pop
int
das
ret
pop
xor
push
pop
adc
xchg
call
mov
jmp
es
aas
and
lcall
lahf
int3
fstpt
jne
dec
xchg
insl
inc
cmpl
jge
or
iret
mov
rorb
je,pn
xchg
lret
mov
mov
insb
ja
sbb
sbb
mov
sub
outsl
cmp
imul
push
repz
test
rorb
stos
aaa
adc
imul
cld
or
addb
inc
mov
xchg
shll
xchg
sub
mov
cmp
test
mov
mov
sti
push
in
out
pop
mov
pushf
jp
mov
fcomip
mov
and
xchg
dec
mov
and
loope
and
je
dec
dec
push
aas
cmp
inc
push
push
pusha
mov
int3
scas
pop
dec
sub
cltd
hlt
mov
pop
int
mov
jno
cli
pusha
repnz
dec
outsb
repz
sbb
sbb
movsb
hlt
mov
lret
or
fldl
lea
gs
lods
jle
repz
loop
inc
lods
sub
push
adc
fldenv
or
xchg
add
sahf
sub
sbb
xchg
push
inc
jns
repz
sbb
fadds
fisubrs
sbbb
mov
cmc
xor
fists
xchg
xlat
jmp
sub
out
out
mov
call
xor
xor
shufps
sub
out
xorl
mov
push
adc
mov
cs
pop
pop
or
and
and
xchg
inc
inc
subl
enter
bound
or
cltd
sti
jle
neg
imul
test
xor
xchg
out
mov
add
or
mov
xchg
xchg
in
lock
jg
mov
decl
pop
in
pop
cltd
push
test
jns
mull
outsb
dec
push
inc
push
xor
imul
or
jo
pop
insb
cmp
push
cmp
repnz
mov
pop
add
sbbb
and
cmp
dec
jecxz
add
test
jp
push
xor
repz
or
jmp
insb
iret
fistpl
sub
cmp
arpl
aam
mull
and
cmpsl
dec
mov
adc
sti
sub
sbb
add
in
jmp
outsb
arpl
xchg
and
das
dec
pop
and
cli
das
mov
push
lahf
daa
adc
or
xor
mov
or
xchg
sahf
jp
cmpsb
nop
xchg
scas
push
sub
and
test
repnz
mov
gs
lods
fistl
xchg
inc
mov
xor
in
cltd
or
or
movl
sti
movsl
xor
clc
subl
mov
sbb
sub
cli
inc
mov
int3
pop
mov
cmpsl
cmpsb
clc
sbb
push
std
stos
movsl
mov
lock
mov
jo
in
test
pop
sub
aad
mov
les
push
push
ljmp
xchg
dec
xor
push
fcoml
outsl
cwtl
aas
pushl
cmp
push
sbb
imul
inc
mov
inc
mov
add
adc
std
inc
pop
dec
xchg
mov
ret
mov
mov
in
xlat
or
cs
xlat
cmp
mov
xchg
pop
pusha
in
sub
mov
in
arpl
movl
into
mov
jb
mov
sbb
insb
cmp
and
scas
dec
idiv
stos
cltd
rolb
out
pop
fimuls
popf
dec
lcall
pop
sbb
dec
jne
sub
dec
imull
in
jno
jg
das
push
mov
shll
call
jbe
lea
push
jg
outsl
dec
jae
ja
cmp
jo
mov
inc
push
cmp
cmc
or
sbb
adc
lock
lea
mov
adc
les
inc
jns
xlat
sbb
dec
cmpsb
hlt
stos
popa
sub
rorl
sbb
sbb
pop
pop
mov
inc
lret
test
rcrb
push
rclb
push
aaa
movsb
imul
xor
xchg
pop
test
jge
xor
dec
into
adc
fcomps
in
cmp
sub
fiadds
and
fs
mov
push
mov
addr16
mov
push
jb
jp
out
jmp
adc
adc
outsb
out
cmc
jge
cwtl
nop
push
pushf
rcrb
mov
repz
sub
fnstcw
shrl
xchg
ja
jecxz
xor
insl
cwtl
stc
repz
jle
pop
icebp
imulb
push
mov
fwait
outsb
mov
xchg
inc
jno
inc
aam
hlt
sub
lret
and
hlt
cmp
mov
shll
lds
std
or
cmc
jbe
scas
mov
ret
sub
insb
push
test
sbb
gs
dec
push
sbb
push
dec
out
loop
mov
scas
lret
imul
add
fmulp
sbbl
push
cmp
xchg
and
xchg
shrb
or
xchg
cmp
sbb
lods
jg
fwait
add
ficompl
sub
js
mov
data16
es
faddl
in
cwtl
mov
daa
movd
scas
std
mov
mov
inc
push
sub
and
roll
add
add
add
add
gs
data16
insb
lret
aad
les
mov
in
int
cmpsb
addr16
adc
adc
loopne
int
iret
out
mov
lods
imulb
arpl
sub
fisttpl
or
insw
outsb
movl
pop
lods
das
int
mov
rolb
fwait
mov
dec
dec
cmpsb
int3
cmpsb
cmpsb
cli
out
sub
aaa
cmpsb
dec
dec
or
pop
push
push
pop
cs
pop
test
sar
adc
mov
mov
push
pusha
mov
gs
or
lock
je
xorb
pop
sahf
mov
scas
subl
ljmp
mov
jbe
aas
push
pop
hlt
ret
aad
out
aas
inc
lahf
adc
or
cmp
test
not
test
test
jg
sbb
dec
rclb
or
fbstp
push
cmp
repnz
xor
pop
mov
jb
sbb
inc
mov
xchg
jbe
push
dec
test
xor
add
pop
fistps
pop
adc
outsl
push
mov
sar
imul
lods
push
and
icebp
scas
mov
jo
xchg
inc
imul
fs
ds
push
shll
cmp
dec
jnp
or
xor
mov
pop
loopne
jae
fmull
adc
jp
in
ljmp
sbb
jae
out
es
mov
xchg
xor
fistpl
push
push
mov
sbb
xchg
fucom
xor
ss
xor
shl
mov
cltd
repz
xchg
aas
add
out
cmp
cmp
dec
jp
sbb
fildl
loopne
and
stos
negl
outsl
les
dec
and
fwait
push
sti
xchg
add
dec
pop
sub
addb
jno
sub
mov
iret
add
xchg
in
xor
pop
mov
pushf
mov
out
mov
pop
or
pop
aam
std
fwait
mov
popf
divl
mov
stos
ja
cwtl
stos
and
and
cli
cli
push
mov
push
movsl
pop
mov
mov
pop
lea
popa
fistps
nop
inc
mov
add
xor
pusha
loop
dec
add
mov
jl
mov
les
sar
mov
add
les
rcll
outsb
pusha
mov
inc
imul
int3
mov
dec
or
cmp
xor
cmp
lahf
dec
jb
fcmovbe
xchg
push
iret
xlat
mov
cmp
cmpsl
dec
and
test
das
enter
or
and
mov
mov
adc
dec
ja
sub
fistl
hlt
inc
add
mov
or
push
pop
xchg
mov
fstl
sti
or
lcall
sti
adc
hlt
aad
fadds
inc
in
sbb
cmp
out
mov
pop
pmaxub
inc
inc
stos
push
jle
je
add
and
sbb
lock
jnp
das
popf
imulb
inc
mov
add
shlb
loope
mov
add
leave
and
in
sbb
lahf
insl
or
pushf
outsb
jo
pop
xor
rcl
gs
in
cmp
inc
jno
jae
xchg
dec
push
sub
scas
cmc
shll
pop
ds
mov
jne
and
inc
out
sub
mov
ficompl
test
pop
cs
daa
inc
and
and
js
mov
fcmovne
jb
jbe
dec
mov
pop
inc
jmp
adc
push
in
adc
scas
test
sub
fsubrs
push
xlat
cmp
cltd
inc
mov
cld
dec
xor
pop
lret
sub
cs
out
in
adc
xchg
push
push
jne
cs
inc
in
sub
cltd
sbb
scas
sti
inc
fdivl
das
incl
xchg
cli
pop
fdivr
add
xchg
dec
cmp
cmp
mov
sbb
add
xchg
xorb
mov
mov
xchg
out
adc
mov
hlt
xchg
push
add
loop
pop
push
movsl
mov
pop
xchg
dec
pop
and
and
ss
iret
dec
push
aam
in
leave
insl
sub
cmp
pop
shrb
and
cmp
add
decl
popa
mov
cs
inc
mov
and
or
push
sub
test
jle
xor
sbb
xchg
mov
jns
sub
in
xchg
scas
lcall
out
ret
fmuls
arpl
outsb
sub
test
mov
rdtsc
scas
clc
sub
rcll
push
in
cld
dec
imul
dec
fwait
in
fcmovu
mov
or
cli
inc
cwtl
rcrb
pop
int
inc
mov
add
repz
stc
data16
shll
iret
push
push
sbb
in
cmp
add
or
dec
adc
jg
cmp
lahf
dec
imul
mov
or
sbb
mov
xor
push
sub
inc
xchg
movsb
adc
repz
inc
jl
les
into
cmp
or
xchg
data16
sbb
enter
out
movsl
sbb
js
shrl
cmpsb
dec
jg
lret
pop
stc
enter
adc
cmpsb
inc
rolb
mov
leave
push
xor
mov
into
pushf
pop
pop
arpl
aam
and
pop
stos
pop
mov
or
push
mov
dec
mov
repnz
cmp
rol
pop
jnp
pusha
and
rcrl
aas
paddb
mov
push
xor
push
outsl
and
pop
cmp
in
je
mov
iret
mov
stc
leave
lcall
mov
dec
mov
jl
pop
mov
call
cmp
out
subb
xchg
push
inc
in
jns
in
in
insb
xchg
jno
cmpsl
jae
in
pop
into
addb
jne
int
and
ficoms
repz
ds
leave
iret
jl
sbb
cmpsl
and
stos
push
push
outsl
stos
cmp
data16
adc
clc
add
nop
insb
nop
addr16
das
cmp
idivl
outsb
pop
popf
jg
dec
jns
sbb
xchg
aam
sbb
icebp
mov
cli
sbb
xorl
xchg
mov
fdivrs
loop
jecxz
mov
cmp
push
frstor
push
cltd
or
shr
aas
sbb
push
sub
insl
lds
adc
push
inc
push
in
mov
jecxz
push
pop
and
lds
pusha
mov
add
fisubl
mov
pop
lock
gs
ret
inc
inc
mov
int3
sbb
insb
mov
lret
orl
jle
repz
xor
xor
pushf
ljmp
jmp
fbstp
mov
inc
xor
repz
jbe
fisttpl
push
push
pop
pop
add
lret
xchg
cmp
ret
or
xor
and
cmp
daa
inc
fs
sbb
mov
sti
loop
scas
mov
gs
cmp
iret
mov
mov
lock
sti
rcrb
push
inc
mov
jns
popf
fisubs
shll
lcall
add
push
shlb
xchg
xor
pop
mov
imul
addb
fsubrl
gs
aas
and
loopne
dec
aam
or
add
loopne
pop
mov
out
pusha
bound
push
rorb
insl
sbb
dec
shll
daa
sub
jge
gs
lcall
sbb
lods
cmpsl
pop
push
sub
addr16
dec
test
out
or
push
or
enter
sti
mov
jmp
cltd
cld
and
sarb
pushf
add
jns
repz
dec
jae
sti
inc
adc
lods
shrl
mov
pop
or
decl
jne
sahf
mov
dec
scas
or
mov
gs
jbe
pop
addb
test
pushf
push
mov
test
cmpsl
clc
adc
roll
or
inc
sub
mov
jbe
mov
jo
scas
scas
add
addr16
adcl
mov
fisttpl
aam
sarb
cmp
sar
mov
dec
sbb
or
scas
icebp
nop
mov
push
in
int3
pop
push
sub
imul
mov
adc
insl
cs
lahf
mov
sbb
jl
in
inc
xchg
sbbl
push
or
filds
jg
clc
sbb
add
stos
lahf
cli
jge
and
sub
popf
or
lods
scas
rolb
cli
in
inc
aaa
adc
sbb
lret
scas
xchg
push
loop
test
aas
mov
das
mov
jo
aas
stos
adc
test
dec
jp
sub
cmc
loop
or
les
loop
or
fldl
pusha
mov
add
js
hlt
cmp
inc
xor
xlat
pop
fwait
add
shll
xchg
movsb
test
loop
jle
mov
popf
pop
cmp
push
pop
pushf
add
insl
xchg
insb
fxch
mov
movl
addr16
cmp
outsb
or
jno
jl
push
sahf
leave
xchg
jl
or
pop
pop
mov
push
loopne
outsl
std
xchg
int3
pop
movsl
loope
push
dec
add
outsl
mov
popa
jle
sti
fisttpl
adc
mov
movsl
and
and
imul
aad
repz
adc
in
mov
push
lret
jbe
xchg
inc
sahf
add
cli
push
pusha
dec
jle
xchg
rol
mov
in
lret
mov
sub
pusha
lret
add
push
addb
xchg
pavgw
scas
xor
push
pusha
dec
lea
sahf
aas
fs
icebp
jge
outsb
add
sbb
hlt
fnstenv
xchg
dec
push
mov
movsl
pop
xchg
daa
mov
dec
pusha
cmp
loop
fdivrl
jp
repz
pop
jnp
nop
test
out
xorl
cmc
push
stos
xor
arpl
push
and
cmp
fwait
push
das
or
into
mov
or
mov
cmp
scas
lea
fcoms
fs
cmpsl
loop
lds
mov
pop
mov
jno
cmp
cltd
filds
jno
orb
mov
insb
call
push
cmp
loop,pt
clc
xor
sahf
push
mov
push
in
or
int
test
sbb
push
icebp
paddsb
mov
fwait
enter
push
iretw
pop
xchg
push
add
pop
bound
aad
mov
sub
iret
scas
push
ret
dec
add
dec
lahf
arpl
or
xchg
cmp
rorl
into
push
gs
lods
decb
out
pushf
mov
loope
xchg
iret
mov
lcall
iret
adc
das
sub
cltd
data16
xor
and
das
ret
inc
inc
insb
mov
lock
adc
mov
push
xchg
je
mov
lret
cmp
push
mov
je
out
jns
lahf
xor
cld
dec
push
enter
xor
pop
jg
shrb
leave
inc
ss
test
xchg
sub
xchg
cmp
sbb
jle
into
fmull
xchg
xchg
cmc
pop
sbbb
xchg
adc
pop
mov
test
mov
lcall
jne,pt
cmp
adc
jl
js
jl
jo
fcmovnbe
push
xor
cli
ffreep
jbe
cmp
aas
dec
and
cmp
or
jmp
jmp
sub
cmpsl
pop
stc
mov
add
lods
fnstcw
jmp
jb
fists
jg
xchg
pop
add
fprem
sub
sbb
add
shrb
in
xchg
sub
sub
push
lds
sbb
dec
pushf
push
xor
xchg
fstpl
or
pop
push
sarl
adc
outsl
jl
mov
cmp
inc
lahf
mov
adc
dec
xlat
fists
aas
fimuls
xor
adc
push
ret
fisubrl
jno
addl
ljmp
test
cld
xchg
mov
mov
adc
mov
shl
sti
jle
sub
fdivrs
fcoms
jno
aaa
ror
aam
push
sbb
dec
cmp
in
jmp
ret
pop
jle
inc
cmp
addr16
loop
imul
mov
fdivrs
stos
mov
adc
orb
popf
pop
scas
adc
call
push
push
pop
pop
clc
cltd
push
inc
add
add
pop
iret
pop
in
add
mov
sbb
and
cmp
inc
sub
das
aas
adc
fs
jae
hlt
out
add
and
fs
jbe
cmpsb
mov
or
sbbb
and
cwtl
scas
push
es
jmp
add
lret
lds
cs
cmc
movsl
or
pop
in
stos
adc
mov
jge
rolb
sbb
insl
arpl
xchg
sub
leave
push
std
pop
push
cmpsl
icebp
jo
addr16
aam
xchg
mov
mov
sub
js
pusha
inc
pop
lods
int3
iret
testb
hlt
inc
mov
push
xor
mov
loop
add
push
inc
xor
lds
or
loop
push
inc
xchg
jecxz
lcall
dec
inc
out
jg
fldenv
pop
jb
shr
xchg
jae
rcrl
dec
out
jbe
shrl
ja
add
pop
push
inc
mov
or
cmpsb
sub
cmp
loopne
out
pop
jnp
push
mov
xor
sbb
rorb
mov
fmull
push
scas
ret
or
pop
testb
jae
sub
clc
jge
mov
mov
stos
shlb
inc
out
loope
mov
loop
xlat
or
mov
sbb
cmp
and
or
add
iret
ljmp
cmp
mov
int
ret
jno
mov
jp
cmp
arpl
fidivrl
add
bound
aad
lods
aas
js
cmp
aad
push
mov
and
xchg
sahf
addb
adc
ffree
hlt
lods
aad
dec
fcmovu
cmpsb
mov
sahf
inc
inc
cmp
xor
jb
jp
dec
sub
fs
imul
stc
cmp
mov
add
push
mov
or
in
pop
pop
sbb
fcompl
in
mov
lcall
addr16
test
hlt
insb
mov
or
outsl
call
sbb
cld
jle
cs
std
stos
fdivrp
mov
jbe
cld
lods
xchg
inc
jnp
dec
aam
mov
cwtl
sbb
call
mov
mov
or
push
xor
push
js
adc
ret
push
push
mov
lea
inc
push
sub
ja
xchg
repnz
xor
loopne
in
mov
xor
and
fmuls
cmpsb
sub
xchg
mov
imul
repnz
and
pop
pop
xor
dec
into
inc
inc
testb
into
test
xor
test
fldt
sbb
sbb
dec
shl
push
ret
mov
insl
xor
test
jge
adc
ljmp
lcall
lods
xchg
test
sti
pop
jns
dec
pop
xor
mov
mov
xchg
dec
popa
sub
add
movhps
cmpsb
mov
shl
mov
stos
shl
mov
arpl
pop
xor
cmp
lds
fimuls
stos
pop
push
ret
imul
cmc
inc
aad
jns
mov
dec
movsl
in
jge
rorb
mov
xchg
sub
fsubl
push
jbe
push
mov
sbb
push
sbb
push
in
add
stos
out
and
and
stos
pop
jge
xor
add
shrb
mov
repnz
mov
dec
ljmp
and
add
clc
sub
ret
test
imul
sbb
add
sub
in
pop
xchg
jnp
or
jmp
mov
and
outsb
push
sub
fcomps
jmp
sbb
mov
or
mov
hlt
sub
loopne
push
jl
mov
cmp
dec
push
or
cli
loope
add
inc
popf
xor
mov
or
xchg
inc
pop
mov
sub
dec
cmpl
pop
xchg
nop
iret
xchg
mov
clc
xor
xchg
mov
mov
int3
sti
mov
or
add
flds
mov
jp
and
sbb
inc
adc
add
mov
mov
clc
mov
push
xor
loope
jg
fisubs
adc
xlat
add
les
inc
dec
insl
pusha
and
aas
aad
lret
sbb
sbb
daa
std
stc
lret
lcall
mov
testl
leave
add
outsb
pusha
addb
shl
add
clc
fists
stos
jmp
or
add
adc
aaa
es
out
mov
imul
mov
jno
das
testb
add
lock
call
lcall
inc
dec
push
aam
inc
xor
cmpsl
lahf
cmp
mov
imul
cmp
cmp
inc
lods
cmpsl
into
add
out
ja
mov
xchg
sbbl
cmp
push
pop
test
jbe
gs
js
sub
jle
mov
inc
std
outsb
push
test
jno
stc
mov
sbb
cli
inc
xor
pop
mov
pop
mov
lret
mov
xchg
movsl
pop
jle
inc
mov
stos
inc
or
cmp
lahf
jae
dec
xlat
and
dec
push
adc
rolb
sahf
fidivrl
xor
cld
jmp
addl
inc
cmc
fsubr
out
xchg
pop
test
enter
pop
jg
imul
lds
aaa
push
mull
std
cmpsb
lods
pop
mov
or
adc
inc
xchg
dec
cmc
hlt
rcrb
pushf
sbb
jp
jno
or
mov
in
in
repz
les
andl
or
sub
mov
push
push
push
pushf
imul
jmp
sbb
pop
les
dec
lock
call
adc
mov
jmp
xchg
cs
outsb
mov
mov
test
ret
sbb
bound
push
test
aad
aaa
ljmp
sahf
lcall
js
dec
mov
outsl
pop
data16
loop
xor
in
cwtl
fs
incb
rolb
addr16
out
packuswb
push
insl
or
aad
div
cmc
mov
aaa
andb
rorl
add
sbb
jle
push
sti
jbe
xor
pushf
jo
sbb
mov
call
loopne
stc
or
jo
stc
cli
pop
scas
mov
in
or
imul
ds
cwtl
mov
mov
or
std
int3
mov
add
outsb
sbb
ror
scas
ss
out
push
sahf
shl
jg
mov
jnp
loopne
adc
stos
fdivs
jb
sub
lret
xchg
pop
jecxz
inc
push
cmpb
sub
cld
mov
mov
setg
scas
outsl
lock
call
xor
jg
fwait
outsl
clc
mov
mov
xchg
jbe
xor
enter
mov
enter
or
mov
push
adc
scas
cld
mov
sub
mov
sbb
jo,pn
pop
push
aaa
cmpsb
data16
hlt
pop
in
add
xorb
add
test
iret
and
xor
xchg
cmp
xlat
jmp
add
jae
jne
addr16
adc
sahf
or
jp
jbe
test
cmp
cmp
mov
or
xor
bound
pop
sbb
in
inc
xor
adc
pop
push
popl
adc
sbb
pop
pushf
rcrb
sti
pop
pop
mov
stos
ret
sbb
add
cmp
cmp
pop
push
inc
or
jmp
xor
out
test
iret
mov
dec
adc
loop
cmp
dec
sub
jbe
fsubrp
mov
icebp
js
sub
in
mov
mov
rolb
aad
mov
or
fdivrl
sub
cld
sub
push
sub
adc
cmpsb
imul
leave
inc
jmp
repnz
jg
loop
cmpsb
lock
rclb
stos
stos
pop
push
mov
dec
xchg
cltd
add
insl
test
bound
and
mov
push
jp
mov
fdivrl
scas
je
repnz
js
lock
out
xchg
xchg
mov
aad
inc
dec
clc
lods
fistpl
ffree
pop
dec
dec
aas
ss
mov
pop
jge
jae
mov
sbb
icebp
mov
fsubl
sbb
mov
dec
aas
inc
cmpl
mov
jge
xchg
test
loope
ret
push
into
cs
jae
jge
sub
aaa
add
aaa
mov
arpl
dec
daa
and
jle
popa
push
jo
jae
and
push
unpcklps
lret
jmp
and
sahf
insb
hlt
in
xor
mov
mov
orl
andb
sbb
push
mov
ss
cmp
and
xor
data16
int3
bnd
aas
mov
imul
sbb
cli
aas
mov
stc
add
xor
int
popf
mov
notb
xor
adc
cmp
scas
push
aad
sub
ljmp
sbb
js
mov
mov
mov
push
push
xchg
dec
jge
pop
addl
das
mov
dec
sarb
js
psllq
jns
and
dec
orb
inc
lret
mov
xor
inc
push
xchg
or
dec
ds
inc
lea
movsbl
jp
jmp
add
xlat
clc
arpl
ror
fistl
and
xor
ljmp
mov
push
sub
mov
mov
mov
push
testb
cli
jae
mov
sub
rolb
gs
cltd
int
addr16
adc
imul
rorl
stos
mov
sub
or
or
pop
mov
ljmp
adc
sbb
std
sub
and
mov
nop
xlat
push
or
sub
inc
dec
sbb
fbld
leave
int
xchg
jns
scas
or
or
fisttps
je
pushf
filds
mov
repnz
in
add
outsl
xor
push
mov
xorb
sub
push
int3
int3
aas
shrb
or
mov
mov
sahf
fwait
and
cwtl
jecxz
inc
adc
aas
call
clc
mov
lds
cwtl
jmp
fsubl
dec
jge
add
sbb
sbb
sahf
dec
movsb
xchg
mov
popf
pop
pop
sbb
call
push
mov
das
xlat
push
cld
xor
xlat
add
jns
in
mov
push
xor
call
fsubs
or
sbb
insb
bound
ret
pop
outsl
pop
fidivs
add
cli
mov
mov
scas
repnz
xchg
jae
sub
cmp
mov
ret
push
jecxz
mov
fyl2xp1
dec
xchg
loopne
sbb
mov
pop
inc
imul
js
sbb
xor
daa
push
jp
add
mov
cs
aad
xor
cmpl
mov
jge
sti
adc
mov
xchg
cld
jbe
adcl
xchg
inc
xor
cmc
fcmovne
pop
push
or
vcvtpd2psx
bound
shll
push
mov
inc
sbb
adc
lcall
iret
push
lds
icebp
test
in
movsb
dec
adc
sbb
mov
mov
cs
std
inc
push
mov
mov
dec
and
mov
adc
rcll
mov
div
mov
inc
cli
xchg
push
aam
xor
mov
stos
shlb
sbb
jne
or
jle
jle
pusha
xchg
mov
clc
in
pusha
pop
insl
add
lods
push
scas
sarb
push
lahf
fnstsw
inc
fsubr
insb
or
inc
cmpsb
mov
imul
inc
les
ds
mov
les
aaa
cmp
fcoms
popf
adc
mov
jl
jo
xor
in
jb
xchg
jp
popa
loop
stos
addl
pop
xchg
pop
iret
roll
push
mov
xchg
mov
sbb
inc
adc
xchg
pop
xchg
mov
popa
loope
pop
insl
inc
aam
and
jg
adc
popa
inc
push
gs
push
jb
add
cmp
cli
or
in
push
mov
jmp
test
pop
push
or
jp
sti
dec
stc
addr16
push
leave
movsb
or
stos
stc
push
fwait
push
fnstsw
push
jp
sbb
add
dec
aas
mov
sahf
hlt
mov
lea
je
cld
jno
jecxz
add
or
add
sbbl
pop
mov
dec
mov
icebp
iret
adc
in
cmp
int3
aaa
dec
negl
cmp
push
arpl
aaa
xchg
scas
jecxz
cld
aam
mov
and
pop
mov
xchg
sbb
push
movsl
jl
outsb
fs
xlat
dec
push
cmp
jbe
aaa
sti
pop
dec
mov
cmp
sub
int3
xor
mov
jo
test
insb
cmp
std
sbb
outsb
cmp
jno
cmpsl
movsb
icebp
test
sti
test
sbb
pop
lahf
jge
dec
aam
mov
cwtl
lcall
sbb
lcall
inc
xor
pushf
sub
sbb
inc
sahf
test
scas
mov
decb
mov
and
mov
in
xor
mov
je
cmpsl
mov
test
add
sbb
adc
stc
sahf
jae
sub
lea
arpl
stc
subl
and
dec
arpl
sub
dec
shll
decb
inc
pop
cmp
psubsb
pushf
cmp
cmp
add
cmc
out
push
jae
pop
or
ss
inc
loopne
sbb
icebp
xor
es
mov
cs
push
mov
gs
pop
or
pusha
es
xchg
in
inc
lret
pop
push
test
sub
lret
or
dec
dec
pop
sub
xor
mov
cvttps2pi
cmp
pop
xchg
dec
movsl
dec
cmc
add
or
sti
outsl
sub
mov
sub
sub
stc
lods
sbb
or
mov
jne
pop
push
repz
push
mov
mov
rcll
xchg
ja
xor
mov
std
es
idivb
mov
jp
iret
push
pop
or
and
and
cmp
xor
adc
fdivrs
in
mov
mov
xor
push
popf
inc
mov
jle
sub
jl
sub
lahf
cli
add
lods
adc
rorl
insb
inc
hlt
lret
jg
daa
lods
xor
inc
das
sbb
outsl
sub
cmpsb
adc
ja
int
test
or
cmp
rcrb
cmp
dec
pop
es
or
mov
jmp
or
popf
xchg
fbstp
or
nop
pop
test
mov
inc
fmul
pop
ja
and
ja
fidivrl
adc
mov
in
cltd
mov
scas
add
into
mov
adc
int3
push
xchg
sbb
or
hlt
sbb
xchg
cmpsb
int
xchg
mov
and
xor
ret
xlat
xor
das
inc
popf
dec
mov
mov
mov
outsl
bound
mov
rcrl
scas
sarb
sbb
add
and
mov
ss
jl
xchg
sub
lods
jg
push
xor
fcomi
cmp
in
mov
cmp
inc
push
out
aam
and
xchg
jbe
dec
movsb
mov
mov
callw
ljmp
jnp
dec
outsb
sbb
xor
out
adc
sub
cmp
push
in
imull
mov
into
cltd
sub
jbe
or
xor
imul
push
subl
adc
dec
inc
aam
jns
insb
sub
pop
cmp
movsb
loope
incb
pop
dec
mov
mov
shlb
pop
iret
cmp
shl
jns
data16
sub
mov
fdivr
popf
mov
je
sbb
and
pushf
fistl
testb
popf
jp
mov
jns
cmpsb
pop
adc
pop
push
mov
xor
cmp
cmp
lds
cltd
stos
mov
lret
xor
fisttpll
mov
int3
aam
xor
jl
dec
inc
cs
adc
adc
inc
jnp
ret
fdivrl
fcmovbe
dec
in
xchg
and
gs
push
push
test
shr
insb
stos
mov
or
fnstsw
testl
and
mov
sahf
mov
cbtw
cltd
out
xor
mov
sahf
mov
lods
sahf
push
lcall
fiaddl
filds
mov
dec
sbb
cli
jmp
xchg
lock
mov
les
lcall
fldt
in
pop
mov
jl
aad
sahf
add
adc
arpl
jno
das
adc
xchg
fs
xor
mov
aaa
pop
mov
cmp
inc
gs
in
cmp
lret
imul
dec
sahf
mov
fwait
lods
sahf
addr16
adc
mov
mov
push
or
pop
out
inc
pop
mov
cmp
ret
les
xor
cmp
mov
push
mov
aas
adc
pop
push
fwait
mov
roll
sbb
ret
fsubs
mov
dec
icebp
arpl
push
mov
push
adc
imul
das
pop
scas
cwtl
das
cmc
mov
jb
push
lcall
or
sub
inc
inc
and
inc
icebp
les
pop
cli
jb
inc
fsub
inc
pop
and
sbb
outsb
adc
add
das
orb
stos
inc
pop
dec
mov
je
roll
mov
test
iret
mov
mov
or
das
xchg
cmpsl
jmp
cltd
inc
adc
and
push
jne
mov
push
into
push
inc
and
repz
mov
movsb
dec
inc
inc
bound
push
xchg
into
loope
fs
sbb
sarb
lret
sbb
and
xlat
inc
jae
or
add
dec
aad
inc
cmp
es
in
mov
or
xchg
es
mov
fucomip
subb
outsl
clc
shll
push
pop
mov
ret
ret
hlt
inc
and
dec
inc
ret
jecxz
cmp
bound
jno
aad
das
cmp
dec
and
aas
ficoml
nop
sub
add
fildl
out
sbb
cmp
push
mov
cmp
or
fwait
repnz
test
loop
repz
xchg
test
shll
das
stos
aam
inc
insl
test
xchg
mov
push
stc
shlb
pop
iret
mov
sti
jg
pop
bound
lods
cltd
fscale
scas
pop
lret
mov
test
outsb
cmp
pop
and
xchg
push
push
push
mov
popf
inc
mov
fs
daa
outsl
fwait
je
ret
lea
jbe
mov
sarb
xchg
test
push
cs
xchg
test
test
mul
into
pop
mov
push
dec
hlt
xor
loop
arpl
insl
imul
jo
repnz
test
jno
mov
imul
out
cmp
cmp
push
sbb
ret
jb
mov
adc
jae
ja
in
shl
lcall
xor
add
pop
fmuls
daa
sub
cmp
outsl
insb
dec
arpl
dec
xchg
jbe
lods
js
sub
pushf
mov
adc
mov
xchg
into
mov
es
fwait
jl
loopne
in
add
cmp
push
cmp
push
icebp
mov
pop
mulb
cmc
jb
jmp
sub
mov
lret
add
ljmp
inc
fsubs
movsb
icebp
sahf
imul
sbb
nop
dec
pushf
pop
adc
and
adc
sub
pop
sbb
mov
ret
mov
aas
pop
push
sub
adc
iret
ret
mov
adc
scas
sub
or
xlat
xlat
pop
sub
fwait
out
iret
sub
mov
fcmovb
outsb
movsb
adc
dec
aas
insl
scas
fiaddl
cmc
push
adc
xchg
inc
cmp
ficompl
adc
mov
rol
and
les
sbb
fsubl
inc
lods
xor
aaa
sbb
mov
movsl
mov
cli
sbb
iret
mov
mov
dec
fcomps
dec
in
inc
imul
loope
push
loop
xor
lret
adc
repz
cmc
or
cmp
mov
mov
sbb
push
mov
inc
int3
sbb
xchg
adc
movsb
lods
stc
cltd
sbb
jnp
inc
cmpsb
xor
and
in
mov
cwtl
push
addr16
mov
popa
je
lock
jmp
pop
inc
outsl
je
push
add
push
cld
pop
daa
repnz
or
sbb
jb
fcmovbe
imul
xchg
incl
mov
push
or
nop
ds
sub
icebp
ror
aad
sysexit
sbb
xchg
imul
cmp
les
inc
push
sbb
mov
adc
and
inc
fists
ret
loopne
loop
rcll
and
test
insb
mov
insb
int
and
lahf
adc
xor
out
pop
mov
inc
add
jne
xor
hlt
xor
mov
xor
inc
hlt
and
mov
pop
repz
push
xchg
cmpsl
jmp
dec
adc
fdivrs
dec
adc
imul
call
int3
movsb
out
rcr
into
xor
pop
mov
mov
out
daa
fiaddl
sbb
dec
jne
call
arpl
inc
je
mov
inc
shll
mov
mov
xchg
adc
fisubs
out
push
xchg
pand
stos
mov
or
xchg
and
and
hlt
aaa
lcall
pop
call
add
push
jno
les
xchg
insl
dec
and
popa
stc
xlat
xor
lret
mov
out
jne
jne
cli
mov
aam
cmp
repnz
outsl
xorl
ds
scas
test
in
mov
hlt
lcall
mov
rcrl
test
sbb
hlt
mov
jne
fs
insb
inc
icebp
int
test
ja
sub
xchg
es
sub
or
hlt
and
sub
movsb
scas
fldl
clc
movsb
xchg
sbbl
test
cli
jb
adc
push
xor
or
add
daa
mov
in
xor
shll
iret
shrl
sub
or
mov
ds
jmp
test
sbb
cmpsl
push
dec
cmpsl
int3
loop
lcall
xchg
mov
jge
lods
loopne
mov
pop
call
stc
jno
sub
daa
lret
dec
aaa
xor
jmp
in
jle
sub
loop
add
bound
lret
aas
shrl
sti
nop
xchg
add
jb
icebp
mov
aam
xlat
nop
fmuls
arpl
mov
decl
push
or
pop
leave
xor
cld
push
or
incb
shlb
dec
pop
mov
push
lcall
pusha
les
xchg
jns
xchg
pop
and
add
inc
shrb
enter
and
lcall
pop
outsl
push
and
push
push
mov
test
push
xchg
aaa
lcall
ds
inc
push
movsb
cmp
vstmxcsr
fwait
push
outsb
jae
filds
pop
dec
xchg
sbbl
pop
and
add
mov
mov
push
adc
shl
jmp
push
mov
aam
int3
pusha
inc
scas
adc
or
out
pushf
dec
xchg
pop
jns
mov
jae
outsl
sbb
add
mov
adc
fimull
out
and
add
sahf
mov
pop
xchg
mov
divb
enter
sub
dec
mov
aas
mov
jl
pushf
lcall
bound
fidivrs
fs
xchg
xorl
cmpsb
lock
mov
jbe
sub
stos
mov
inc
inc
sub
jle
jno
push
dec
pop
sarl
push
sub
gs
daa
sub
inc
test
je
mov
cmp
inc
jl
sbb
ljmp
ret
mov
daa
mov
xor
push
test
arpl
pushf
lock
mov
fwait
out
gs
add
and
dec
and
cli
pop
shrl
adc
mov
andl
pop
mov
iret
fcmovnbe
imul
sub
cmc
mov
xchg
mov
outsb
gs
xchg
or
in
pop
pop
and
shl
lea
push
lret
adcb
jae
jo
scas
adc
or
stc
repnz
in
sub
addr16
or
fsubr
lret
ret
fidivrs
adc
push
dec
mov
push
fsubs
xchg
and
in
test
pop
push
out
cmp
cmp
cs
or
sub
into
xchg
es
pop
scas
repnz
push
loopne
ret
sbb
mov
cmp
lods
fstl
sbb
out
mov
cli
push
jmp
push
call
cmp
insl
add
sbb
xchg
or
popl
push
mov
mov
add
cs
nop
icebp
jns
out
stos
mov
aas
in
ret
inc
xor
lcall
clc
repz
adc
xor
fs
mov
popa
xor
add
in
pop
iret
sti
subl
mov
dec
dec
pushf
and
mov
movsb
cmp
cmc
fdivp
cld
addr16
mulb
loopne
cld
jae
mov
inc
adc
xor
or
dec
push
mov
cmp
sbb
mov
imul
mov
lret
es
push
movsl
dec
ret
loop
add
jnp
jno
mov
mov
pop
mov
jae
je
inc
or
push
xchg
mov
sbb
cs
inc
fcmovu
fcoms
mov
aaa
mov
out
xchg
jp
adc
pop
je
iret
jge
scas
mov
rcrb
inc
loope
inc
repnz
popa
inc
mov
push
pop
mov
jae
pop
dec
mov
pop
mov
cmp
dec
xor
dec
inc
ljmp
jnp
pop
xor
lret
mov
add
or
jb
lcall
int3
das
lcall
iret
xchg
out
pop
outsl
iret
xor
rcl
cltd
mov
outsl
pop
or
aaa
push
dec
popf
push
xor
xchg
mov
lds
mov
out
pop
movsb
lret
loop
lods
jb
sub
xor
and
xchg
iret
adc
adc
push
call
cmp
fcoms
fsts
mov
cmpsl
adc
dec
arpl
cli
jb
aas
cld
outsb
dec
pop
dec
dec
cmc
aad
sbb
mov
daa
xchg
jge
xor
jb
inc
es
mov
das
pop
or
inc
out
scas
inc
lea
push
cmpsb
jecxz
movsl
mov
dec
pop
es
pusha
outsb
jns
fs
push
ss
leave
pop
push
cli
mov
or
adc
shrb
shrl
stos
inc
cmpsb
cs
inc
pop
lret
movsl
imul
lods
xor
les
or
xor
mov
ret
iret
mov
fstps
mov
push
push
inc
mov
sarl
in
xchg
andb
test
cmp
stos
mov
inc
jle
xchg
ja
popf
cli
lcall
loope
jb
inc
cmp
cmp
stos
leave
gs
push
jecxz
push
add
mov
cmpsl
jb
jnp
mov
dec
pop
adc
popa
xor
jmp
mov
cli
scas
xor
hlt
adc
imul
mov
popf
sub
mov
lock
ljmp
cmp
xchg
fadds
std
popa
pop
xor
jecxz
dec
and
sbb
xchg
movsb
cmp
inc
push
xor
mov
fs
dec
inc
sub
xchg
cmc
jge
call
adc
scas
sub
test
movsb
add
lea
adc
xor
ds
je
cmpl
idivl
inc
mov
sub
insb
dec
jge
test
sbb
mov
insl
cld
stc
dec
pusha
jge
xchg
cltd
call
mov
sbb
ds
pop
js
push
shlb
jg
divl
mov
cmp
lods
nop
push
sarl
adc
shrb
iret
xor
leave
push
mov
or
cwtl
stc
jne
cmp
imul
hlt
test
test
lcall
dec
or
jecxz
pop
aaa
mov
fistl
push
addb
mov
test
adc
incb
fisubrs
fwait
fs
pushf
nop
outsb
pusha
jno
xchg
rcll
cmp
je
mov
clc
mov
cli
call
pop
in
insl
mov
mul
cmpsl
cwtl
mov
mov
mov
fwait
sbb
lods
test
pop
scas
mov
fwait
dec
popa
imul
adc
inc
adc
sbb
std
xchg
add
cmp
cmp
inc
lcall
nop
mov
stos
test
dec
xlat
mov
push
mov
hlt
and
fstps
sarl
imul
fsub
int3
mov
pusha
pop
movsb
out
push
dec
out
iret
cmp
sub
insb
push
push
xchg
dec
cmp
jns
pop
sub
mov
jge
out
js
testl
mov
dec
lea
pop
xor
rorl
mov
add
adc
int
movsb
dec
xchg
dec
or
loopnew
and
pop
jmp
sbb
push
cmp
pop
sub
add
popa
repz
frndint
xchg
sub
or
or
mov
cmpsl
sub
sbb
jnp
inc
push
fiadds
in
js
addl
std
cltd
dec
inc
imull
push
mov
sbb
mov
in
pop
je
mov
ljmp
cmp
arpl
sbbl
and
add
stos
sti
cmpl
ret
inc
cmp
sbb
push
gs
loopne
outsb
mov
dec
outsl
movsb
adc
outsl
mov
les
xor
dec
out
or
push
pop
lret
ret
push
mov
test
xor
es
in
rorl
inc
in
mov
or
mov
lcall
cmp
ret
stc
rcll
push
sbb
stc
enter
inc
je
sarb
ss
sbb
pop
jns
adc
out
jecxz
or
aaa
or
jb
pop
push
das
les
icebp
inc
inc
sbb
je
sbb
add
pushf
and
das
mov
imul
pop
mov
jne
stos
mov
mov
push
xchg
sbb
nop
jns
shl
repz
rcll
mov
pop
or
mov
sbb
pop
cmp
imul
xchg
daa
mov
pop
fiadds
push
add
sub
aas
repz
or
int3
stos
add
push
inc
fdiv
pop
sub
mov
outsl
sbb
int
mov
cmp
mov
repz
stos
fistpl
icebp
sbb
inc
sbb
push
sti
pop
sbb
movq
mov
cmp
stos
inc
mov
adc
mov
jge
xchg
in
and
lock
lods
mov
ljmp
jo
xchg
or
jl
or
mov
push
adc
lea
adc
fxch
add
fsts
ret
insb
pop
xchg
adc
stos
loopne
jl
sbb
dec
sahf
test
fdivp
jne
jecxz
ret
jecxz
add
nop
adc
mov
loop
and
dec
scas
or
adc
dec
mov
adc
repz
push
out
rep
jbe
icebp
ret
xor
mov
or
out
and
inc
out
xlat
cs
cwtl
lea
out
dec
dec
stc
das
adc
sbb
ds
mov
scas
adc
js
mov
icebp
stos
xchg
jo
adc
jbe
mov
push
cmp
push
lock
lcall
add
insb
gs
lods
cld
xchg
rcr
xlat
pop
out
mov
aaa
fistpl
mov
sbb
or
jnp
adc
lcall
adc
aaa
into
lcall
lods
cmp
push
jne
add
xchg
sub
popa
mov
xchg
aad
inc
nop
lods
push
stos
popa
loope
sbb
rcrb
or
icebp
test
int3
inc
inc
or
jg
ds
lret
jae
cwtl
movsb
sub
pop
add
mov
outsl
test
xchg
inc
or
adcb
mov
jl
cmp
fs
dec
jnp
add
mov
jl
push
mov
adc
enter
push
imul
jbe
bound
arpl
dec
pop
aad
pop
jno
stos
sub
and
or
cmp
fsts
aaa
add
push
ljmp
jb
loopne
jmp
push
inc
fistpll
pop
shll
clc
ja
lahf
push
mov
sar
sbb
lret
shrb
sbb
pop
pushf
dec
nop
addr16
aas
popf
scas
mov
roll
pop
jecxz
outsb
stc
js
lods
cltd
pop
push
sub
addb
insl
cmp
or
sub
sbb
fisubrl
fisttpl
push
in
mov
pop
mov
mov
sub
std
stos
sub
push
les
or
stos
adc
sbb
mov
inc
push
push
neg
test
movsb
pop
pop
test
mov
inc
jg
push
and
test
into
jno
scas
insb
mov
adc
loop
push
repz
imul
cmc
ret
mov
iret
decl
jb
scas
enter
pushf
mov
cmp
cli
mov
push
enter
mov
inc
cmp
adc
mov
in
flds
or
shrl
mov
repz
mov
and
mov
nop
xchg
sbb
ror
loopne
es
std
jmp
dec
lds
cmc
lods
cmc
pusha
imul
cld
and
mov
subl
add
sbb
xchg
and
stos
aam
jbe
jno
in
lods
mov
std
int3
mov
andl
enter
mov
or
aaa
aaa
cli
mov
adc
or
pop
mov
mov
loop
ss
ss
jge
mov
lds
ror
push
das
xchg
mov
and
push
inc
push
pop
fistpl
cmpsb
mov
or
fiaddl
jp
scas
cmpsb
std
loopne
and
or
lcall
cmp
icebp
stos
stc
push
fiadds
enter
add
add
lods
mov
xchg
adc
lods
bound
cwtl
sub
loop
les
mov
gs
sub
ja
and
inc
mov
xlat
xchg
dec
jg
out
or
xor
mov
jno
ja
insb
andb
and
stos
push
xor
fcompl
cmp
xchg
inc
cmp
pushf
out
push
fistl
sub
mov
ret
arpl
or
jecxz
and
xchg
dec
inc
jge
clc
jns
sbb
mov
cltd
insl
jb
and
and
push
sahf
arpl
xchg
jo
push
add
push
cmp
push
jge
sbb
cld
lods
aam
clts
enter
push
adc
sbb
push
bound
scas
cmp
stos
xor
sub
mov
ds
push
arpl
jbe
mov
jns
js
aas
mov
xchg
mov
mov
pop
incl
test
mov
or
push
dec
adc
mov
sti
fstpt
sbb
add
xchg
nop
jg
and
popa
fcomps
fimull
sbb
loope
push
stos
mov
dec
popa
call
pop
fistl
sti
xchg
xor
dec
jns
lock
dec
es
ret
sub
hlt
xlat
in
jge
sub
xchg
outsb
clc
push
out
sub
int3
pop
jns
adc
sub
adc
and
in
add
push
es
inc
xchg
sbb
fsts
movsb
dec
es
sahf
jmp
fxch
mov
xchg
and
dec
sub
fs
cld
jae
push
test
lea
or
lret
fildll
cwtl
adc
xor
loop
lahf
outsb
std
fidivrs
out
inc
rclb
lock
lods
add
incb
pop
dec
sub
into
dec
stc
outsl
dec
mov
cld
movsl
xchg
pop
aad
lret
sahf
imul
sbb
aam
jne
mov
lds
scas
das
shrb
pushf
into
adc
shrl
lods
lcall
fdiv
mov
hlt
cmp
test
out
fwait
sbb
inc
mov
dec
mulb
sbb
jmp
add
jb
or
inc
into
sbb
inc
addr16
aam
mov
push
rorb
shrb
imulb
insl
arpl
shll
jb
outsl
popf
and
mov
xchg
pusha
and
push
cmpsb
es
push
or
fwait
negl
outsl
pop
mov
sbb
aas
sbb
lea
adc
cld
ss
inc
call
popf
xor
loopne
push
xchg
pushf
cmc
pop
xlat
addr16
cmp
scas
int
js
adc
push
add
movl
leave
xchg
cmp
outsl
in
test
mov
rorl
adc
push
out
pop
scas
sub
or
fnsave
cs
inc
stos
adc
scas
jo
push
test
jmp
rcl
jecxz
push
ljmp
sbb
add
fimuls
je
jae
insl
inc
push
cmc
ds
xor
xchg
daa
pop
pop
leave
fwait
roll
pop
insb
mov
popf
lea
jl
and
add
cmpl
and
jbe
lods
pop
std
mov
bound
sbbl
xchg
sub
out
push
push
xor
in
mov
adc
mov
iret
mov
lods
pop
andb
xchg
mov
fsubrl
ds
or
mov
jo
xor
jnp
seto
testb
or
push
mov
rcrl
dec
and
loop
mov
das
das
outsl
sub
fcomps
in
xor
push
sbb
dec
test
xchg
cmpsb
pop
call
cmp
jl
dec
dec
fists
scas
mov
stos
sub
xchg
orb
mov
aaa
inc
cmp
lds
orb
pop
setbe
popl
stos
xor
mov
clc
push
cmc
xchg
in
xor
push
dec
pop
pop
rcr
add
stc
icebp
push
popf
sub
cmp
sahf
fldl
and
mov
outsl
mov
gs
cmp
push
cmp
and
testb
cli
imul
pop
sbb
fnstcw
jnp
mov
mov
fisttpll
sbb
inc
pop
adc
in
cmpps
dec
stc
pop
jg
call
mov
mov
sti
xchg
mov
hlt
stos
xchg
mov
daa
pop
and
mov
inc
push
jg
pop
or
stos
jmp
movsl
xor
movsb
sbb
cmp
cmp
push
lods
stos
mov
rclb
lods
decl
adc
xor
inc
xchg
push
in
jae
leave
adc
in
stc
test
cmc
es
jns
adc
in
data16
and
int
mov
pop
mov
adc
sub
movsb
dec
or
mov
jne
je
les
xchg
mov
mov
push
push
lcall
pusha
into
jmp
adc
inc
shrb
cmp
push
das
je
push
std
mov
jb
shll
add
add
inc
out
mov
aad
in
dec
xor
jbe
dec
lods
mov
adc
push
adc
subb
pop
mov
imul
jge
movsb
rcrb
adc
mov
jg
sub
sarl
push
shll
xor
inc
sahf
mov
inc
jl
rolb
pop
cmp
inc
pop
fistps
pop
adc
jno
push
gs
rclb
inc
cmp
push
dec
jg
int3
test
mov
cli
add
addr16
xchg
push
inc
dec
and
insl
lcall
out
lock
and
int3
std
cs
inc
mov
loop
notb
mov
push
int
aas
loope
imul
push
lock
ja
cmp
icebp
jae
nop
xor
mov
notb
icebp
inc
cwtl
call
enter
into
leave
dec
cltd
or
iret
std
dec
addr16
dec
add
dec
scas
mov
push
std
and
nop
sub
sbb
push
lock
mov
push
jb
movb
dec
insl
icebp
mov
sbbl
mov
icebp
jne
adc
and
mov
mov
dec
push
cltd
jns
in
and
mov
xor
adc
mov
lds
lods
dec
scas
ret
mov
enter
out
xlat
inc
fadds
mov
jle
iret
cmpsb
lods
pop
scas
scas
add
lock
in
aaa
lds
outsb
dec
mov
pop
popa
pop
add
pop
cmp
stos
mov
mov
fidivrs
push
and
dec
sub
aas
dec
jae
cmp
mov
daa
call
push
out
test
lds
cmp
pop
jns
sub
es
aas
adc
mov
dec
mov
popa
ficomps
jnp
insl
popf
mov
cmpb
push
mov
fsubrl
mov
mov
popf
pop
shr
stc
inc
or
xchg
ficomps
int3
add
aad
and
aad
out
fstpl
sbb
mov
push
push
jle
jne
mov
adc
mov
push
dec
push
pushf
inc
mov
push
cld
lea
sbb
call
jo
xchg
js
lds
fnstsw
pop
pop
movsb
stc
sbb
repz
or
mov
in
pop
lods
and
ret
mov
cli
push
xchg
lea
jbe
mov
jl
pop
push
imul
mov
add
loop
popa
cmp
mov
xchg
daa
shrb
rcll
push
iret
and
test
sbbl
jl
aad
out
cs
imul
xchg
pop
stc
dec
jecxz
std
jne
sbb
data16
daa
inc
aam
fistl
xchg
repnz
stos
xorl
rcrb
inc
mov
cwtl
sub
lahf
mov
push
sub
pop
adc
pusha
jnp
push
sahf
adc
cltd
daa
jb
cmp
xor
sub
mov
jne
fistl
jmp
push
or
repnz
push
sbb
cli
fisubrl
roll
xchg
pop
mov
cmpsb
pop
rol
jne
mov
outsb
fcompl
inc
loop
test
xchg
add
mov
adc
daa
adc
adc
xor
leave
aam
jmp
negl
daa
in
xor
lea
clc
push
dec
xor
mov
dec
xor
lahf
sti
sbb
jns
mov
jl
mov
push
and
adc
or
in
push
mov
lods
mov
and
scas
xchg
aad
mov
fs
cli
popa
repnz
ret
fadds
sbb
sbbb
pop
iret
mov
pop
outsb
insl
pop
imul
cmp
add
bound
mov
inc
pop
mov
ljmp
xlat
mov
mov
pop
bound
je
sbb
dec
mov
mov
js
xchg
mov
leave
xchg
cmp
ret
dec
cmp
pop
sbb
mov
fcmovne
mov
lock
xchg
xor
jmp
orb
jne
loopne
sbb
lods
fistps
jno
sbb
mov
adc
sarl
xchg
adc
pop
push
push
jg
add
xchg
mov
jecxz
xchg
mov
xchg
mov
js
int
push
jns
xor
mov
aaa
xchg
gs
fs
lods
mov
mov
mov
dec
jo
aad
stos
mov
out
push
icebp
into
int
in
dec
push
xorl
xor
outsl
test
arpl
or
jo
jmp
push
pop
push
mov
iret
jbe
and
adc
jle
adc
adc
adc
in
xor
aad
loopne
mov
cli
out
fiadds
jl
gs
adcl
push
insl
gs
add
and
idivb
int
sti
jp
sbbb
out
ret
int
shll
cmp
mov
sub
cmp
xchg
outsb
nop
inc
mov
movsl
cmc
jl
cmp
sbb
mov
pusha
adc
jp
sahf
stos
iret
mov
shlb
cmp
mov
leave
arpl
mov
add
mov
sbb
mov
inc
adc
sbb
lcall
arpl
add
call
repnz
fcmovne
fadds
into
mov
mov
mov
push
push
bound
int3
add
dec
popa
dec
shlb
lret
add
mov
xchg
popf
les
test
mov
mov
xor
xor
and
popa
or
and
ljmp
inc
inc
ret
dec
dec
pop
and
or
sub
mull
sarl
leave
lcall
dec
pop
shll
cmp
bound
fists
mov
or
mov
ret
out
sub
push
inc
adc
adc
sub
scas
idivl
xlat
sbb
jecxz
jo
cmp
xchg
pop
daa
mov
repnz
add
mov
jno
cmp
jns
in
add
push
int
and
jbe
push
push
jge
es
adc
push
jl
lock
cmpsl
push
lock
out
xorb
into
push
int
js
xor
das
lcall
psubd
push
or
mov
mov
push
cmp
ror
cmc
jge
add
cmp
into
push
nop
test
cli
mov
test
mov
into
stc
mov
bound
stos
and
rolb
repnz
inc
xor
xchg
jns
lahf
fstl
pop
clc
sub
into
fcomps
in
cmp
and
imulb
adc
cmpsl
out
mov
xchg
pusha
repnz
rorl
and
aad
aas
add
les
sti
pop
pop
push
xor
and
mov
adc
jge
out
or
aaa
add
xchg
add
dec
jmp
pop
movsb
mov
loop
sub
sub
add
inc
ret
xchg
fcompl
enter
push
lahf
js
vmovlps
imul
mov
fldcw
push
aas
pop
fisttpl
dec
pusha
ficomps
int3
les
or
dec
jb
push
lds
and
mov
les
adc
or
inc
fcoml
je
enter
push
jae
adc
bound
scas
fs
js
dec
lret
fistpl
jmp
xchg
fwait
jg,pn
es
dec
xchg
dec
mov
mov
aam
mov
xor
js
mov
lcall
add
test
pop
popf
jno
aam
inc
sbb
stc
cmp
mov
dec
adc
push
mov
push
and
push
ljmp
jne
cmpsl
push
mov
aaa
fs
jp
mov
add
add
popf
mov
add
adc
int
in
bound
sub
cmpsl
add
outsb
mov
cltd
cmp
stos
add
fcomi
inc
nop
mov
repz
push
fwait
sub
sbb
sbb
sbbb
lret
sub
data16
dec
jb
nop
shlb
dec
lock
jne
adc
aam
xchg
dec
adc
sti
pop
test
push
ret
or
add
mov
lods
rorl
sbb
sub
cmc
fimull
cwtl
mov
sub
fdivr
es
inc
push
sti
ret
out
test
pop
adc
pop
xchg
sbb
out
ss
or
xchg
push
ret
outsb
cmp
pop
push
fsub
sub
or
pop
push
test
mov
cmpsb
fs
jmp
xchg
push
cmp
fnsave
pop
arpl
push
and
das
imul
jb
pop
dec
rcrl
lahf
and
xor
cmpsl
add
push
aad
cpuid
rolb
das
mov
in
sub
dec
sahf
scas
fstps
mov
dec
mov
xorl
xchg
and
mov
inc
shl
iret
cwtl
cmp
sbb
xchg
jg
mov
lret
call
jae
xchg
dec
pop
popf
ficompl
mov
fs
hlt
jecxz
sti
inc
xchg
pop
les
mov
mov
mov
push
fists
nop
pop
mov
orl
jle
adc
jae
fwait
mov
and
xchg
mov
jae
jae
jecxz
or
xor
xchg
pop
mov
cs
inc
inc
push
pop
jl
sub
lcall
lods
test
dec
sbb
dec
lods
daa
stos
sbb
mov
dec
fsincos
addb
dec
lods
das
testl
fists
mov
std
std
and
push
rorb
dec
lds
out
mulb
push
or
jg
and
xchg
out
sbb
pop
loop
add
fsub
imul
inc
movsl
cli
test
enter
add
loope
xor
lret
xchg
hlt
lds
js
fwait
aam
mov
cmc
dec
in
mov
sub
sub
sbb
loope
xchg
jo
pop
and
inc
pop
jmp
fldcw
ljmp
jne
fld
mov
movsl
mov
push
jbe
sbbl
mov
pop
jno
adc
ja
push
dec
pop
inc
fcomi
das
cmp
mov
add
push
out
std
add
push
adc
add
out
repnz
lods
test
stos
adc
ret
lea
dec
gs
push
xchg
sbb
add
out
in
pop
sub
scas
movsl
mov
xor
ds
ret
ja
dec
scas
dec
mov
sub
jb
lcall
inc
int
int
fistpll
push
pop
pop
jnp
jp
xlat
mov
xchg
or
scas
in
out
mov
pop
lret
imul
scas
xlat
nop
fadds
jns
xlat
cmc
and
mov
jae
push
sub
push
jecxz
cli
lea
enter
cmp
push
in
es
mov
add
rep
into
sbb
mov
int3
lcall
sub
pop
int
pusha
pop
lea
mov
add
mov
xchg
scas
js
add
pop
not
in
ds
xchg
in
cwtl
mov
sahf
arpl
mov
cmc
mov
push
gs
cmp
inc
mov
add
add
dec
icebp
cmpsl
xor
add
mov
mov
testb
and
and
sbb
xor
xchg
pop
lcall
jmp
fnstcw
mov
int
aaa
dec
or
mov
ret
add
xchg
sarb
mov
push
cli
loop
push
cld
stc
test
insb
imul
add
nop
pusha
adc
rolb
sti
cwtl
int
sbb
repz
sub
gs
xor
xchg
adc
push
scas
mov
or
pusha
outsb
cld
xchg
ficoml
in
adc
mov
jns
enter
add
mov
imul
xchg
out
movsb
stc
cmpsb
dec
dec
leave
std
mov
scas
push
scas
inc
loope
das
imul
mov
pop
aaa
mov
inc
js
cltd
add
jo
into
mov
fcoms
mov
adc
push
xchg
mov
mov
pop
push
scas
add
jecxz
pop
sbb
das
int3
divl
mov
or
clc
aad
hlt
mov
jae
inc
sub
ret
icebp
jecxz
lds
lds
dec
es
movsl
faddl
dec
jo
insb
cmp
or
inc
cmp
dec
jnp
jno
adcb
cli
fiaddl
jl
mov
cs
pushf
or
jge
sbb
add
and
leave
jae
xchg
arpl
popf
add
aaa
jbe
bound
or
mov
pop
shrl
mov
aaa
push
js
lock
cmp
xorl
xor
fs
inc
pusha
sbbl
inc
sarl
idiv
in
cmp
sub
xor
mov
loope
dec
inc
jp
push
pop
lahf
or
cwtl
sub
pop
pop
jge
shl
idivb
out
sbb
and
xor
cmp
xchg
sub
sub
rolb
xor
mov
filds
insl
mov
sbb
xchg
push
stos
adc
adc
pop
push
inc
lds
popa
xor
and
dec
mov
out
pop
outsb
or
aam
mov
fwait
push
pop
rcll
xor
sbb
leave
and
in
or
adc
lahf
or
or
sti
push
fsubl
mov
jecxz
out
sbb
js
sub
jno
aas
cmp
enter
jmp
out
stos
sub
pop
in
pushf
test
adc
out
inc
std
jnp
hlt
shrb
inc
insl
jne
test
xchg
out
ljmp
pop
fimull
popf
xchg
mov
rep
sar
jmp
pop
into
ss
lret
push
or
pop
movsb
mov
mov
adc
loopne
imul
sub
lods
mov
pop
cmp
mov
push
jmp
jmp
lret
push
mov
inc
add
pop
mov
lret
dec
push
hlt
es
sti
push
add
sbb
test
addr16
jp
inc
xchg
jnp
or
pop
aad
arpl
aam
mov
out
lods
shll
roll
mov
jo
adc
add
repnz
les
bound
mov
mov
sbb
ljmp
pop
pop
xchg
mov
bound
cwtl
xchg
divb
inc
outsl
jmp
filds
dec
arpl
iret
arpl
jle
push
dec
mov
scas
jb
das
or
jne
pop
int3
cmp
cltd
cmp
sub
out
push
push
and
dec
xor
cmp
or
and
xchg
jmp
push
xor
out
ret
pop
test
movsb
ja
cmp
dec
fimull
in
xchg
or
popf
inc
push
in
sarl
mov
inc
dec
call
dec
mov
mov
lret
pminsw
xor
jmp
mov
stos
cmp
sbb
imulb
pop
outsb
inc
lcall
xor
jne
add
std
and
ffree
js
das
aaa
into
lock
xor
mov
es
cmp
orb
loop
cmp
imul
xor
stos
pop
pushl
dec
mov
scas
mov
pop
mov
aam
cmp
dec
subb
and
sbb
jae
or
rcll
cwtl
test
mov
gs
in
loop
shlb
fst
or
or
fmul
enter
repz
mull
dec
stos
loope
jge
sub
shrl
mov
stos
xchg
sbbb
rcrl
push
and
movsb
xlat
out
mov
lods
and
mov
push
sbb
push
mov
fcmovne
and
and
in
inc
mov
stc
adc
pop
push
sbb
jle
sti
mov
mov
pop
popa
movsb
loope
pop
pop
xlat
mov
jns
testb
mov
mov
jno
daa
dec
addl
movsb
inc
mov
adc
cli
aam
push
inc
mov
xchg
aaa
jecxz
outsb
inc
cmc
das
cld
jl
sbb
lock
add
add
mov
popa
mov
ljmp
inc
pop
cmc
pushf
jbe
cmp
aam
das
pop
add
shll
pusha
cmpsb
jmp
mov
mov
inc
cli
dec
popf
fstl
mov
out
pop
xor
lret
jne
daa
mov
xor
in
negl
imul
pop
xlat
sbbl
cmp
orb
inc
loop
aad
cmc
adc
outsl
lea
pop
imul
pop
out
js
push
mov
cmp
es
xor
adc
sti
fimull
dec
jne
xchg
add
cld
add
push
pusha
sub
stos
adc
movsl
lret
cmp
mov
rep
inc
sbbl
incl
mov
xor
ror
sbbl
sbb
movsbl
imul
jns
repnz
jl
inc
repz
mov
xor
pop
stc
mov
aaa
push
xchg
arpl
das
movsl
sub
sub
cwtl
cmpb
xchg
or
fwait
gs
push
shl
inc
and
popa
ds
push
xor
pop
mov
sbb
ja
jp
ss
scas
sbb
cmpsb
loopne
pop
iret
pop
sbb
add
int3
or
sub
dec
jp
jg
negb
push
mov
rorl
iret
xchg
in
iret
push
and
push
ficoml
add
jge
call
or
mov
mov
not
inc
pop
pop
xor
xor
lock
jmp
sub
cltd
ret
or
sbb
in
add
popl
cmp
outsb
ljmp
mov
and
daa
scas
daa
inc
xchg
nop
dec
mov
rcr
in
mov
cli
dec
push
push
jge
mov
andb
xchg
test
fdivr
test
cmp
mov
popf
sbb
pop
mov
dec
or
loope
mov
test
mov
adc
xchg
jle
cmp
inc
lahf
movsb
loope
jns
rcrb
into
jnp
push
popf
fsubrp
andb
push
push
inc
push
push
push
fldpi
gs
outsl
pop
call
mov
and
cmp
sub
inc
jne
inc
xorl
or
lods
dec
inc
incl
adc
fcoml
xlat
pop
jmp
jne
adc
pop
add
ds
push
mov
sub
loope
shl
dec
fsts
out
xor
jns
mov
cmp
insb
pop
inc
enter
or
mov
mov
pop
inc
xor
loope
pop
stos
sarl
pop
lcall
xchg
ror
pop
enter
mull
jmp
addr16
xor
adc
nop
mov
test
aas
push
cmp
push
sahf
lock
pop
mov
test
dec
scas
pop
fstpl
xor
xor
bound
and
push
push
sbb
rcl
rolb
push
out
repz
mov
cmp
xchg
popf
cmp
push
sub
stos
or
and
lahf
aaa
pop
sti
jno
lods
mov
pop
xchg
sbb
add
push
push
jg
ja
pop
test
movsl
cmc
push
ljmp
xchg
pop
pop
dec
cmpsb
dec
orb
not
out
aad
lods
popf
inc
add
mov
sbb
mov
fwait
mov
sbb
aam
fwait
xor
in
sbb
mov
loopne
mov
sbb
stc
mov
mov
les
xchg
push
xchg
cmp
mov
movsl
fisubrs
cmpb
inc
xchg
xchg
pop
mov
jp
xchg
xchg
dec
out
sarl
inc
push
mov
cmp
push
cmp
pop
sarl
and
push
push
xchg
cs
mov
test
inc
pop
mov
into
mov
mov
fst
pop
loopne
dec
sub
sub
lods
mov
into
dec
movsb
outsl
add
fmuls
shll
arpl
pop
fistl
jbe
call
push
faddl
outsb
ds
ja
cmp
xchg
lret
adc
push
fwait
dec
rcll
gs
mov
xchg
or
daa
loop
push
bound
xchg
sahf
sbb
iret
leave
jo
inc
mov
fucomp
jg
aaa
rclb
or
adc
scas
adc
cwtl
sub
je
cmp
mov
rclb
out
push
outsl
inc
or
dec
push
repnz
ret
jae
aas
sbb
mov
leave
jno
cmp
sub
jae
movsb
lods
ds
dec
sti
stc
push
xchg
add
mov
xchg
aas
jns
cmp
neg
jge
add
mov
clc
fcmovnu
add
outsl
jne
leave
mov
lcall
sti
and
mov
mov
cmp
push
mov
je
or
mov
xor
jbe
pop
xlat
pop
add
lods
popa
sub
imulb
mov
push
daa
cmpsl
cld
sub
sbb
repz
pop
add
clc
adc
push
pop
jg
cmp
mov
sub
out
mov
push
mov
cmp
adc
jno
ja
jg
mov
clc
test
push
outsl
addr16
out
or
imul
fcmove
jge
cwtl
test
inc
or
dec
push
dec
pushf
or
cwtl
bound
out
fidivl
dec
push
and
iret
jp
icebp
fdivrs
loopne
or
jbe
lds
outsb
cmpsl
jns
mov
dec
in
xorb
dec
sub
dec
stos
jecxz
sub
jp
xchg
mov
fdivs
jp
daa
dec
imul
rep
repz
sbb
add
das
cs
stos
pop
add
fsubs
lahf
insl
call
popf
or
lea
inc
pop
les
xchg
mov
mov
dec
and
push
lahf
inc
dec
xorl
push
xlat
push
dec
xor
cmp
push
popa
sbb
rorl
mov
aam
adc
cwtl
cmp
fs
push
inc
inc
in
std
int3
outsb
movsb
stos
jg
jle
push
ds
push
inc
popf
lds
sbb
pop
cmp
pop
push
xor
enter
adc
or
mov
pop
push
leave
add
xchg
lret
cld
mov
ja
xlat
mov
stos
push
incb
push
add
or
mov
inc
mov
sbbb
pop
or
je
divl
push
aas
xor
jo
ficoml
lret
test
shll
adcb
ljmp
enter
pop
jae
test
lahf
pop
cmc
push
sbb
pop
pop
pop
daa
jmp
jb
push
hlt
stos
fisubrs
add
mov
mov
scas
inc
sbb
lea
add
pop
cli
cmp
stc
xlat
in
mov
cmc
faddp
mov
es
popa
mul
hlt
and
push
in
out
add
negb
sub
out
xor
scas
aas
aad
lods
imul
rcrl
dec
jecxz
int3
dec
mov
adc
cmc
jbe
int3
push
pop
xor
push
xchg
or
loope
xchg
mov
je
push
xor
cmpl
xor
repnz
sbb
std
cld
sub
xchg
iret
imul
popf
scas
push
testb
cmp
imul
xchg
pop
jmp
rorl
insb
cwtl
addr16
mov
cs
pop
mov
pop
stos
mov
sbb
sub
outsb
loopne
jge
mov
daa
xchg
pop
std
dec
daa
mov
addr16
xor
out
cmpsl
aas
mov
inc
mov
push
repnz
add
rclb
inc
pop
mov
dec
aas
jns
repz
pushf
cmp
enter
xchg
push
cmp
out
cmp
jns
xchg
cltd
ss
insl
rorl
and
daa
push
addr16
fidivs
aad
push
xor
imul
xchg
jbe
push
sti
jl
mov
in
or
sub
out
pop
or
leave
mov
cmp
leave
mov
add
call
push
xor
negl
mov
push
add
inc
add
into
sub
mov
jp
or
adc
call
aaa
add
ljmp
xlat
inc
cld
sbb
pop
dec
or
fs
fistps
out
lods
xor
mov
std
into
mov
loop
bound
scas
or
mov
repnz
roll
int3
lds
jb
add
sbb
dec
cmpb
repz
lds
lahf
dec
xorl
in
std
push
cmp
nop
les
rorb
or
pop
nop
popf
and
pop
jmp
arpl
pop
lods
jnp
xchg
xor
roll
dec
dec
daa
addl
push
cmpb
fisubrl
pop
inc
jnp,pt
push
add
roll
arpl
insl
push
mov
repz
loop
cltd
push
sbb
out
nop
push
sub
mov
sbb
push
arpl
push
xchg
roll
mov
xchg
decb
mov
adc
mov
sbb
cmc
dec
adc
iret
stos
popa
mov
xor
dec
scas
pop
jge
mov
je
ja
mov
cmp
test
pop
lahf
scas
and
dec
or
add
jnp
jecxz
test
es
sub
dec
pusha
inc
push
in
push
mov
mov
inc
add
cwtl
arpl
aad
xor
jo
jl
mov
or
imul
cmpsb
cmp
fstpt
xchg
jae
test
dec
push
bound
stos
data16
jmp
dec
shll
ja
jg
add
mov
push
cmpb
int3
xlat
mov
scas
sbb
stos
cmp
dec
xchg
inc
sti
push
inc
popf
xchg
fmuls
lock
push
mov
mov
jmp
cli
jo
add
lds
loop
fwait
or
push
pop
inc
dec
jo
inc
mov
inc
xchg
or
ja
mov
pop
xchg
fbld
sbb
gs
dec
mov
jbe
push
jmp
adc
or
add
add
push
dec
push
xchg
inc
jp
and
sbb
inc
dec
and
sbb
rcrb
jl
int
into
or
or
int3
ss
push
sub
jbe
pop
xchg
mov
loope
or
mov
in
mov
add
les
mov
jmp
sub
fistpll
push
mov
sub
or
out
stc
xor
dec
xchg
xor
outsl
loope
cltd
mov
fnstenv
mov
add
mov
jo
cs
or
push
jl
dec
js
xchg
jns
sti
arpl
test
jg
and
mov
in
add
stc
lret
mov
fadd
mov
roll
inc
arpl
cld
scas
shlb
movsb
jmp
hlt
lcall
pop
add
daa
popf
inc
arpl
xlat
ds
mov
mov
or
xchg
test
insb
and
fwait
sub
fistl
outsl
pushf
lods
clc
jno
into
fsubl
lahf
mov
adc
push
das
cmpsb
pop
jg
mov
dec
cld
notb
mov
movsb
aam
add
push
jmp
pop
lahf
cmp
push
sbb
adc
xor
fwait
in
popf
stos
sbb
push
xchg
xchg
das
push
jl,pn
ret
pop
popf
addr16
aam
mov
repnz
lock
push
adc
lcall
call
push
xchg
inc
mov
inc
mov
fwait
add
push
int3
in
out
add
mov
xchg
insl
popf
rorb
imul
xchg
mov
sub
inc
inc
out
fst
jp
cmp
test
inc
jae
jmp
or
add
enter
cmpsl
dec
or
inc
rcrb
cld
scas
les
push
iret
push
jne
insw
lcall
lods
xor
cli
xchg
lods
fildl
adc
leave
out
test
and
cmp
jecxz
test
repz
out
push
addr16
lods
lds
push
loope
push
ss
mov
or
loop
inc
cmpsb
and
mov
loop
out
inc
push
dec
shl
push
push
fs
mov
pop
add
adc
aas
sti
sbb
repnz
lret
push
aad
in
sub
xor
cltd
pop
jns
inc
in
aaa
inc
sbb
ror
and
add
or
loopne,pt
in
mov
mov
sbb
push
inc
and
xchg
mov
cmpsb
push
stos
lret
add
idivl
cs
add
mov
adc
mov
das
mov
xchg
mov
pushf
xor
dec
inc
aas
pushfw
sbb
mov
add
out
cmp
pop
or
dec
inc
mov
fldenv
pusha
inc
dec
jnp
push
movsb
insl
mov
popa
add
push
in
cmp
mov
jl
imul
loopne
xor
js
push
mov
sub
fwait
sbb
stos
in
js
andb
outsb
dec
mov
movsb
jns
xchg
push
xor
mov
nop
cmp
fs
repz
push
dec
adc
outsb
pop
scas
mov
mov
les
mov
push
sbb
add
jmp
loope
mov
and
inc
ja
adc
or
inc
adc
mov
adc
fdivs
roll
sti
lods
js
rcr
imul
or
mov
shlb
les
enter
mov
jmp
leave
sbb
sbb
fisttpl
mov
push
mov
paddsw
nop
add
popf
dec
jmp
xor
mov
pop
test
and
inc
std
sub
and
out
cmp
mov
mov
cld
popf
ret
pop
mov
test
jl
insl
or
sub
in
dec
ljmp
sub
fimull
fs
mov
stos
pop
push
xlat
lds
aas
dec
aad
imul
xchg
dec
mulb
cmp
jne
loopne
push
jns
call
push
mov
fcompl
cwtl
xor
lcall
cmp
cmc
jb
mov
nop
mov
mov
or
insb
sarb
dec
jmp
fs
std
add
xorl
test
ret
and
cmp
cld
xchg
ja
insb
sbb
movsb
int
aad
shll
cmp
xor
lock
pop
pushf
and
push
cltd
enter
arpl
sub
sti
xor
outsl
add
imul
in
loop
into
push
lahf
cli
imul
movsl
mov
aas
mov
push
mov
cmp
sub
mov
out
sub
xor
push
pop
sti
outsb
cmp
js
and
stc
stos
push
mov
ret
mov
movsb
mov
add
ja
enter
imul
mov
ja
push
jle
daa
stos
xor
push
adc
out
shll
push
jb
jns
fcoml
jmp
lock
loope
jae
sub
add
andb
jae
imul
mov
imul
sub
adc
fcmovu
pop
dec
dec
leave
lahf
clc
ja
xchg
adc
inc
cmpb
inc
packsswb
repnz
loop
cmp
clc
mov
pop
popa
mov
mov
test
mov
test
sub
add
into
loopne
or
enter
mov
mov
fdivl
xor
and
insb
test
inc
jne
roll
aam
jbe
push
pop
js
fwait
mov
or
pop
jmp
cmpsl
pop
push
push
int3
rolb
sub
jmp
xchg
xlat
ror
cld
int3
jle
fldcw
addb
mov
jns
pop
mov
std
push
andl
orl
or
xchg
loop
xchg
lcall
push
cwtl
xor
mov
sbb
adc
push
ficoml
jmp
fildll
lret
dec
cmp
jl
pop
jl
cmp
sub
jo
xor
in
and
cmpsl
scas
cmp
je
pop
push
loope
push
mov
in
loope
pop
jp
add
test
mov
pop
inc
xor
mov
loop
mov
fdiv
movsb
ja
fcoml
stc
jle
inc
decb
pop
or
sub
shll
sub
movsl
arpl
nop
pop
rorb
mov
sub
jne
ret
mov
call
aas
jle
loop
xchg
adc
push
cmc
add
insb
push
pop
inc
shl
mov
pop
cmpsl
fidivrl
fst
popa
xchg
jmp
stos
inc
lds
add
dec
mov
jg
in
fs
push
add
loop
loope
jo
subl
adcl
fadds
or
fwait
pop
ja
es
jne
push
push
xlat
xchg
int3
rolb
clc
dec
dec
jae
push
pop
ja
or
aam
xor
test
mov
xor
add
js
inc
adc
xlat
movsl
fisubrs
out
out
pop
cmpsl
pop
xchg
cwtl
jmp
cmp
cli
fistpll
clc
outsb
push
jecxz
xor
jp
fs
lods
pop
add
push
ja
dec
lret
adc
into
cmp
repz
outsb
push
pushf
lds
incb
loop
add
sub
push
dec
inc
push
out
xor
mov
push
in
cmpsb
mov
in
or
pop
xor
rorb
xchg
cltd
ss
lods
sbb
adc
sbb
into
xchg
pop
rolb
dec
dec
cmp
out
sub
nop
je
push
cmp
jo
adcb
nop
xchg
push
shl
mov
mov
push
add
xor
std
pop
shll
push
cmp
jl
dec
fsubrl
cmp
aas
xchg
and
pop
int3
sbb
mov
mov
add
pop
sub
add
ret
pusha
int
dec
add
push
sbb
mov
std
stos
xchg
mov
cmp
out
add
or
sahf
push
lret
enter
jg
in
jno
mov
ds
cli
ljmp
add
data16
or
dec
and
cwtl
pop
mov
sahf
fs
push
faddl
sub
hlt
dec
xor
dec
jp
cmpsl
aam
pusha
xor
cmpsl
sbb
inc
mov
bound
sbb
mov
mov
out
add
repz
call
lock
pop
fyl2x
xor
arpl
or
mov
pusha
aaa
sbb
dec
or
pop
ja
rorl
jns
cmp
cwtl
push
push
addl
imul
inc
iret
push
or
in
test
pop
xor
sub
out
adc
out
sub
imul
loopne
call
pop
into
popl
sti
mov
mov
mov
jp
out
aad
aad
sbb
add
jno
jecxz
ret
pusha
push
inc
add
clc
das
mov
or
jge
adc
sub
adc
jg
adc
mov
adc
and
jmp
lcall
in
or
je
push
fxch
je
adc
stc
sub
push
jmp
pop
dec
cs
cmp
mov
jg
lea
ror
les
shlb
xchg
pop
sbbl
mov
mov
mov
out
xchg
enter
cltd
jne
jae
sbb
jmp
inc
data16
pop
repnz
pop
scas
ret
nop
loopne
dec
fnstsw
jb
pop
mov
orl
inc
inc
fstpt
jp
sbb
insl
insl
push
jle
arpl
in
daa
icebp
in
push
push
sub
or
dec
jno
mov
push
fistpl
cmp
pop
push
sbb
lret
mov
sti
fs
mov
dec
mov
int
adc
movsb
nop
xor
enter
xchg
insl
mov
mov
pop
addr16
pop
mov
dec
dec
bound
inc
jns
mov
shll
in
imul
fstl
in
jle
out
out
fs
mov
pop
shl
mov
mov
mov
lock
call
fnstcw
rcrl
sti
add
push
push
push
mov
mov
enter
arpl
lds
xchg
test
mov
xchg
add
insl
mov
int3
loope
or
dec
fidivs
xlat
cltd
xchg
add
lods
mov
iret
rclb
mov
mov
inc
mov
arpl
xor
xchg
jmp
popa
imul
inc
lods
xlat
push
imul
and
mov
filds
jo
ja
xchg
jmp
cmc
add
pop
jp
mov
push
mov
cltd
xor
iret
subb
pop
in
inc
or
out
bound
or
insl
cltd
dec
push
out
sub
push
mov
push
sub
insb
jge
out
mov
test
mov
jb
dec
adc
xchg
gs
cmp
iret
jo
aad
int
gs
mov
leave
pusha
sarb
mov
jbe
xor
push
jl
movsl
pop
push
arpl
jp
mov
aam
sub
or
in
push
sub
loopne
iret
cmp
lret
push
arpl
jo
lret
xlat
outsb
jnp
stos
add
jb
ret
fld1
es
mov
inc
inc
sahf
push
lods
sub
pop
cmc
mov
xor
dec
mov
std
xchg
rcll
add
daa
int
jo
pop
aad
ljmp
sub
push
ret
mov
in
jb
push
mov
outsl
popa
lret
cltd
mov
sbb
imul
popf
adc
data16
mov
cmp
outsb
or
popa
push
jae
test
cmp
pop
jle
mov
out
pop
add
dec
mov
mov
add
sbb
popf
fisttpll
testl
nop
rorl
or
pop
jne
push
insl
lret
xorl
les
rep
and
xor
repnz
push
or
push
test
test
jnp
jl
push
jl
ficomps
lcall
xor
js
push
xchg
es
clc
jmp
shll
loop
fwait
ljmp
test
ss
pop
ret
pop
loopne
xchg
add
insb
mov
clc
mov
push
in
pushf
lret
lret
pop
jmp
fdivl
pop
xchg
inc
dec
mov
mov
stos
in
push
je
or
fcomip
inc
mov
in
push
rorb
or
jp
jo
xor
mov
jge
and
imul
push
push
push
adc
push
test
ret
test
fwait
imul
or
sbb
shll
cmpsb
je
xor
jno
orl
sbb
dec
int
jno
xchg
fdivrp
js
mulb
cwtl
cmpsl
fbstp
mov
xor
xchg
dec
cltd
xchg
pop
lret
arpl
dec
inc
push
add
push
xlat
pusha
push
mov
cmp
mov
bswap
cwtl
lock
ss
clc
xchg
cld
lock
jecxz
rorl
xor
mov
mov
xchg
mov
xor
add
into
test
stc
movsl
pop
inc
sbb
ja
shrb
sbb
test
insb
mov
xor
mov
ret
jge
in
pop
mov
pop
dec
push
and
mov
inc
sbb
aam
mov
movb
out
cli
test
mov
push
inc
jge
push
lea
jecxz
imul
and
fsubr
cltd
fdivrl
inc
sbb
les
push
repz
adc
lret
pop
xchg
sub
test
bound
push
add
mov
fsubrp
cmc
aas
xchg
pusha
push
scas
mov
nop
scas
cltd
mov
and
dec
out
loope
test
test
sbb
or
mov
xor
vorpd
lcall
scas
jnp
cmp
mov
mov
rcrb
imul
mov
or
gs
mov
pushf
lret
fldt
or
xchg
daa
or
inc
shlb
lret
movups
jnp
ds
loope
loop
or
mov
adc
and
ret
je
dec
out
push
incl
lods
adc
mov
sahf
fdivrs
pop
jbe
cmpsl
or
xchg
xchg
add
or
inc
xchg
shufps
call
push
iret
std
outsl
stos
mov
je
data16
mov
or
ficoms
mov
outsl
ret
jbe
loop
stos
xchg
jno
pushl
es
push
pop
push
in
stos
in
iret
cmc
test
add
sbb
out
cmc
in
push
outsl
mov
sbb
sti
jb
cmc
jae
xchg
cwtl
cmp
addl
mov
inc
xor
jge
addr16
mov
stos
xor
sbb
cmp
int
cmp
shrl
rcrl
fwait
movl
sub
inc
scas
xchg
xchg
push
ss
push
xor
add
push
dec
fwait
xchg
out
jl
sbb
out
fstpt
sub
cld
mov
jae
lock
cltd
and
mov
adcb
mov
in
mov
mov
cmpsb
or
inc
jge
or
pop
fbld
or
sbb
push
lsl
push
sub
sbb
clc
mov
adc
add
inc
pop
in
ja
xor
inc
adc
mov
add
rcll
pop
loopne
inc
fcoml
add
loope
js
xchg
in
in
or
js
stos
test
test
int
loop
movsl
or
call
xchg
cmpb
push
bound
inc
test
insl
xor
dec
call
or
aaa
enter
mov
loop
ss
jg
fidivrl
mov
hlt
push
pop
nop
or
scas
adc
pop
mov
popa
inc
sub
lahf
outsb
xor
add
or
cmp
clc
adc
scas
dec
adc
dec
mov
cmpsl
fwait
in
add
lods
xlat
mov
cli
mov
lret
repnz
cmp
push
dec
mov
xchg
mov
sub
daa
pop
xchg
jmp
dec
test
fidivrl
inc
shlb
mov
pop
int
xchg
dec
sub
pusha
xor
repnz
sbb
sti
pop
push
mov
test
mov
xchg
mov
test
lret
ror
push
lcall
cwtl
inc
sub
scas
insl
outsl
jae
mov
popl
fs
bound
push
neg
dec
cmc
jmp
sbb
jno
push
and
sbb
fcmovbe
sub
jg
test
xchg
mov
add
jge
jle
int
sbb
dec
xor
cmpsb
mov
xor
mov
sub
adc
rol
xchg
shrb
sub
add
insl
enter
jno
popf
dec
fdivs
jl
ljmp
faddp
in
ljmp
jl
jg
test
ljmp
pop
push
imul
or
out
pop
mov
xchg
out
jb
xor
das
pusha
lods
dec
sbb
push
pushf
dec
loop
in
mov
mov
sbb
xchg
push
popa
mov
jp
clc
pop
sbb
in
mov
aam
sbb
lcall
sahf
jno
xchg
pop
lcall
roll
das
int
sbb
aas
jo
cs
int3
cld
cmp
jbe
dec
data16
sub
mov
inc
xor
mov
iret
in
cwtl
cmp
shrb
add
jmp
mov
dec
ret
hlt
mov
inc
outsb
dec
xchg
loop
or
cmp
mov
cltd
in
lods
sub
loope
shrb
cmp
and
loop
test
push
sbb
fidivs
hlt
imul
xchg
div
mov
sbb
xor
cld
js
imul
les
mov
nop
sbb
adc
push
fidivs
in
sbb
pop
or
or
sbbl
stc
jl
mov
ds
loop
push
ja
shlb
push
xchg
dec
gs
fnstsw
scas
sarl
stos
xlat
je
pop
aas
ja
adc
inc
xchg
cmc
loop
arpl
repnz
jbe
mov
jg
fldcw
mov
pop
lods
outsb
sbb
call
arpl
repnz
jmp
mov
adc
cmp
push
rep
and
push
xchg
dec
loope
xor
leave
repz
push
cmp
movsb
push
test
fidivrl
sbb
sbb
or
add
loop
add
fxrstor
and
pop
pop
mov
pop
xchg
sub
cmpsb
jb
jno
mov
dec
push
add
jns
stos
or
in
jnp
orb
ficompl
or
add
cld
adc
adc
adc
xor
add
in
addl
andl
movsl
loop
and
xor
pushf
and
pop
push
jnp
popa
mov
adc
xchg
xchg
push
aad
or
xor
fists
sbb
fimuls
add
scas
sub
mov
adc
scas
dec
call
outsl
dec
sub
inc
sbb
mov
or
xchg
rcrb
or
xchg
mov
add
pushl
rcr
test
xchg
das
aad
je
push
in
ficoml
xor
mov
fwait
cmp
inc
cmpsb
cltd
int3
xor
enter
sub
mov
fdivl
mov
mov
mov
pop
dec
mov
into
mov
out
adc
push
cmpsl
fsubl
push
lret
shrl
cmp
test
xor
lcall
push
mov
or
daa
xchg
pop
push
movsb
dec
icebp
sub
adc
fildll
pusha
leave
fsubrs
or
cltd
popa
jl
jmp
xchg
fiadds
ja
dec
data16
shrl
clc
cwtl
mov
rcrb
repz
push
inc
aas
add
pop
push
cmp
ds
push
nop
and
and
pop
orl
inc
mov
mov
push
and
in
adc
loopne
jns
test
shll
pushf
lock
iret
cwtl
cmpl
outsb
lcall
dec
xor
arpl
cmp
lret
mov
jns
add
outsb
push
pop
add
or
xchg
mov
mov
test
inc
mov
sub
mov
inc
scas
lret
call
out
dec
bound
add
push
xchg
adc
roll
jns
lret
insl
mov
cltd
or
sub
js
pusha
movsb
mov
mov
mov
cmp
fstpl
in
push
pop
mov
sub
or
jg
addr16
outsb
jmp
fwait
aas
xchg
mov
movsl
and
sti
ret
cwtl
mov
enter
insl
and
xchg
dec
and
mov
cmp
lods
push
cmp
stos
push
xor
mov
cmp
or
std
xchg
xchg
clc
lock
js
popf
sbbb
daa
or
ret
fcoml
push
ret
scas
pop
sbb
rclb
data16
ds
push
aaa
add
pop
pusha
inc
push
lea
scas
xor
mov
cmpsb
xor
aaa
pop
pop
daa
into
stc
loope
inc
pushf
aaa
push
dec
sub
sahf
sub
enter
das
pop
push
sti
sbbl
lds
xchg
dec
mov
mov
ret
das
mov
mov
stos
adc
data16
mov
push
xor
in
aad
sub
in
push
aam
test
jae
dec
iret
fwait
and
divl
imul
add
inc
aad
std
imull
sarl
call
add
push
mov
aaa
sub
xor
aas
arpl
bound
into
sti
sbb
pop
outsb
xchg
mov
cmp
dec
std
cwtl
ds
adc
or
mov
lret
decb
popf
insl
outsb
pop
rorl
push
rcll
data16
jle
xchg
mov
neg
inc
xor
push
in
loope
xor
dec
jae
xor
addr16
shl
rorb
stos
cmpsl
fcmovne
cmp
lret
out
mov
in
ljmp
jp
test
pop
xor
pop
sbb
shlb
aaa
repnz
pushf
push
mov
arpl
into
jo
stos
imul
add
mov
lock
mov
mov
mov
mov
std
sbb
inc
pop
testb
dec
or
mov
or
pop
cmp
enter
scas
aas
and
rcrb
fs
push
or
adc
lahf
scas
stos
pop
inc
sub
in
and
jnp
inc
cmp
pushw
xchg
and
lret
adc
sub
push
aas
shlb
mov
stc
pop
mov
fstpl
dec
aaa
adc
imul
clts
mov
xchg
insl
test
and
cmp
sub
mov
pop
push
and
sub
dec
dec
mov
loopne
xchg
jg
xor
loop
xor
lahf
rcr
push
out
sub
test
add
es
jmp
es
in
lea
cmp
pop
push
adc
sti
push
or
lods
add
ret
xor
xor
pop
sub
fsubr
lea
jae
je
imul
cmp
imul
bound
imul
sbb
sbb
or
int
xchg
imul
xorb
stc
test
sub
push
loope
in
ljmp
or
popf
test
mov
xchg
push
or
or
fiaddl
movb
mov
jne
adc
shr
test
mov
cmp
cmpsl
add
push
dec
mov
pop
jge
bound
xlat
ds
stos
adc
xchg
nop
mov
into
or
ljmp
xchg
xadd
jno
mov
sbb
lret
iret
jnp
test
lcall
xchg
repnz
or
loopne
or
xchg
aad
cmp
xchg
jecxz
xor
addr16
fs
je
xchg
sti
push
or
test
inc
push
out
inc
jp
dec
int3
add
push
rcl
jmp
push
mul
mov
int3
arpl
into
pop
les
pop
mov
inc
cwtl
fcomps
mov
xor
fadd
pusha
pop
push
add
movsl
das
ljmp
sti
xchg
or
push
loop
out
xor
xor
add
pusha
push
sub
push
cmp
pop
mov
jge
or
pop
sub
xlat
fsubrl
push
test
sbb
adc
pop
aaa
or
mov
mov
or
rcrl
out
add
push
jae
sbb
sbb
jp
xchg
mov
out
inc
xlat
in
stos
xchg
and
movb
repnz
cli
je
adc
sub
pushf
pushf
lods
repnz
insb
dec
test
cmc
out
xor
test
add
mov
lahf
jnp
imul
sub
push
rcr
xor
ja
jbe
mov
outsl
sub
adc
push
inc
js
mov
pusha
addb
mov
pop
sub
outsl
pop
sbb
test
imull
jg
mov
push
iret
movsl
pop
adc
mov
sahf
inc
jae
and
mov
mov
mov
in
mov
mov
mov
xchg
jmp
enter
adc
pop
ds
hlt
insl
add
lcall
dec
xor
test
inc
mov
jae
push
xor
lcall
push
mov
pop
inc
cmp
aad
jge
pop
push
les
aas
outsl
lds
nop
in
in
mov
cmp
inc
xor
and
mov
filds
push
xor
cmp
lods
out
hlt
outsl
mov
push
dec
enter
sub
push
aas
sbb
outsl
and
mov
hlt
mov
sub
lods
scas
push
rcll
fsts
test
push
aad
pop
lock
pop
nop
jae
sar
leave
cltd
fadd
push
adc
outsb
and
sbbb
inc
out
mov
ret
sbb
dec
pop
hlt
mov
jge
push
les
xor
xor
jmp
jne
shrl
call
cmpsb
shrb
add
xchg
add
adc
mov
int3
push
add
xor
sbb
inc
xor
roll
pop
add
je
scas
and
jb
out
cltd
clc
mov
pop
push
lds
lods
lret
es
aaa
out
push
xchg
sbb
addr16
inc
ret
mov
pop
ret
icebp
mov
pop
loope
dec
insl
xchg
fst
pop
cli
cmp
loopne
pop
inc
je
stc
cmc
lcall
in
test
das
pop
cmc
out
mov
shrl
lcall
inc
mov
int3
mov
adc
adc
and
fidivl
idivl
jg
xor
push
outsl
add
push
out
cltd
jge
xchg
or
lret
cld
lret
fcmovbe
jecxz
xchg
call
ljmp
int
cs
into
add
cli
popa
mov
ds
pop
fstps
push
dec
add
mov
imul
rcrl
test
xchg
out
jnp
aam
je
jg
add
xchg
shlb
dec
jns
cmp
sub
in
fisttps
mov
sbb
xor
ret
inc
jl
fisubl
xchg
nop
lret
and
movsb
pop
xor
cwtl
int
add
dec
ds
mov
mov
dec
push
out
and
mov
push
xlat
mov
inc
movb
arpl
jmp
sbb
or
fistpl
pop
mov
test
leave
mov
pop
cwtl
lods
dec
pop
and
paddd
xor
leave
test
ret
daa
sub
push
pop
outsb
test
dec
js
mov
inc
jo
movsl
push
in
xor
roll
xchg
sub
and
pop
mov
negl
mov
lcall
orb
ror
loopne
mov
call
repz
push
test
or
mov
aam
andl
std
in
pop
cmp
jg
mov
scas
inc
aas
shr
gs
aam
sub
fwait
jl
aas
mov
test
xor
pop
sbb
sub
mov
mov
fwait
push
jns
std
sub
lret
and
ds
sbb
popa
fincstp
rcrb
xor
cs
fcompl
je
pop
gs
cwtl
adcb
xor
push
push
test
js
adc
and
cltd
imul
dec
in
add
lock
push
or
aad
lahf
lea
push
ss
out
outsb
add
add
fisubs
xor
adc
int
pop
ds
out
test
cli
inc
test
lcall
outsl
sbb
cld
push
dec
mov
or
aam
notl
mov
lea
bound
stos
arpl
gs
dec
push
sub
add
mov
mov
shlb
xor
movsb
push
mov
jle
cmp
cmpsl
jae
cmc
dec
mov
ficoml
xchg
imul
add
push
xchg
jp
xchg
sub
xor
dec
xchg
in
lret
sbbb
cmp
imul
rcr
mov
lret
sbb
pop
movsb
add
add
iret
xchg
inc
shrl
std
lods
add
inc
push
dec
imul
std
sti
call
mov
adc
jae
xchg
mov
adc
add
xchg
mov
aam
fs
clc
cmp
inc
add
push
jge
push
mov
mov
push
nop
std
xor
add
cmp
data16
in
fmul
add
stos
loope
pop
or
adc
add
pop
fcmovnu
movsl
push
dec
fdivrs
push
sbb
fildll
jmp
xlat
push
pushf
inc
pop
pop
xchg
mov
cmp
mov
imul
push
push
repz
dec
xchg
jne
ss
enter
pop
xor
fidivl
push
lods
repnz
jle
dec
fldl
test
pop
xchg
shlb
repnz
mov
sbb
mov
jbe
lea
cmp
mov
fwait
jecxz
jmp
mov
push
fiadds
adc
loop
cmp
mov
orl
jmp
sbb
data16
out
iret
sbb
pusha
sti
add
dec
idivl
je
and
dec
push
jge
data16
popf
mov
pop
in
mov
and
loope
xor
add
cmpsb
cmc
sub
in
push
cmp
insl
mov
dec
lcall
jmp
pop
cvttps2pi
je
imul
push
stos
xor
pop
sub
insl
ret
pop
fistpll
xchg
cli
outsb
lahf
or
in
pop
adc
je
dec
enter
sub
scas
inc
out
mov
stos
cs
sub
daa
outsl
push
loopne
repz
out
add
ret
cmp
lahf
fbstp
push
sbb
inc
in
pop
mov
sub
cmpsl
push
jl
xorb
sbb
dec
sbb
out
aam
mov
out
cmc
subl
push
insb
dec
mov
test
loop
lock
push
and
xchg
js
stc
clc
imul
jae
imul
std
cmp
push
in
bound
mov
jnp
fisubs
xchg
mov
mov
test
dec
xlat
mov
stc
push
xlat
mov
xchg
inc
jb
push
pop
adc
loope
int3
test
cmc
pop
testb
mov
int3
mov
dec
jge
lods
dec
cmp
imul
jmp
jmp
lret
mov
mov
and
mov
mov
push
std
mov
add
mov
stc
cmp
dec
insl
jb
arpl
nop
adc
sub
adc
xor
dec
pop
jp
and
mov
hlt
mov
imul
pop
dec
je
xchg
sub
sahf
add
cltd
lahf
dec
js
xchg
adc
fwait
fwait
into
sbb
jg
sub
pop
jge
aad
sub
xchg
sbb
push
sub
in
sti
out
das
inc
js
inc
xor
or
sbb
or
pop
push
mov
aaa
sub
xchg
mov
jl
jp
dec
inc
js
inc
aaa
fnstcw
imul
sub
in
cmpsl
jbe
insl
xchg
add
leave
fmuls
cmp
imul
or
adc
clc
shr
cwtl
or
jns
jl
xchg
xor
adc
stos
mov
stos
add
xlat
xchg
mov
and
bnd
cwtl
mov
jp
cs
mov
lret
int3
loop
repz
sbb
mov
pop
jp
stc
push
mov
xchg
aas
push
sahf
filds
push
dec
or
gs
insb
dec
xchg
mov
fildl
mov
ss
ja
mov
adcl
push
dec
jno
pop
out
pop
xchg
addr16
add
adc
jg
das
dec
fmul
xchg
or
add
lods
fsubp
and
mov
sbb
or
rcl
pusha
pop
insl
sbb
xlat
fists
and
mov
mov
inc
push
inc
scas
jecxz
leave
push
pop
jb
addr16
scas
pop
xchg
push
rorl
sub
push
jnp
iret
popa
dec
aam
jecxz
pop
xchg
xchg
leave
and
call
lcall
stc
adcb
push
sbb
mov
flds
imul
jp
inc
addl
mov
add
cs
cld
push
test
mov
xor
aas
cmp
test
xchg
pusha
test
fdivs
xor
aaa
inc
dec
shlb
arpl
imul
mov
repnz
stc
hlt
and
gs
add
sar
sub
cld
in
popa
mov
jo
scas
xchg
push
int
es
jno
xchg
and
les
push
test
aad
cmc
bound
test
add
imul
mov
clc
jae
xchg
das
mov
cltd
cmp
test
sbb
call
or
and
in
add
js
mov
sti
dec
xor
loope
or
push
add
mov
cmp
dec
mov
ja
popa
rcl
out
loopne
pop
out
out
out
ljmp
arpl
repz
jo
mov
push
je
or
lods
call
cmp
in
cld
xor
aad
cmp
loope
cmp
add
mov
sarl
sub
adc
xchg
xor
int
mov
popa
pop
jge
inc
or
mov
mov
inc
int3
dec
cmp
hlt
das
int
push
gs
push
cmp
push
call
pop
js
stos
or
mov
adc
fisttpl
fldlg2
test
xchg
push
pop
scas
orb
add
cld
mov
pop
sub
jns
and
ja
dec
and
cmp
dec
add
or
pop
shrd
xchg
scas
popf
enter
xchg
add
cmc
dec
mov
adc
lret
lahf
mov
out
jno
cmc
adc
add
sub
sarl
les
dec
sarl
dec
dec
fadd
add
jae
js
pop
or
lcall
mov
call
dec
out
es
lahf
xor
cmp
mov
jb
leave
dec
std
fs
addr16
or
cmc
je
xchg
xchg
mov
jnp
add
addl
cli
lock
xor
nop
fstps
mov
jp
orl
lret
jg
cmpsb
fwait
aas
orl
and
int
es
xchg
mov
rclb
dec
mov
ret
sti
call
dec
popa
call
aad
xchg
loope
pop
in
mov
pop
loop
inc
sti
mov
sti
adc
repz
mov
fcoml
pop
push
or
push
ret
repnz
mov
jg
adc
stos
xlat
mov
rorl
shrl
and
movl
test
jle
sti
xor
cmp
cltd
add
jl
inc
lret
inc
adc
lret
scas
xchg
or
sbb
fldcw
mov
push
out
sub
mov
bnd
negb
cltd
into
rolb
icebp
inc
or
xlat
repnz
stc
cmc
and
pop
aas
lcall
mov
lds
mov
xchg
sbb
repnz
sarl
dec
adc
loopne
dec
fdiv
aaa
xor
mov
xchg
iret
imul
and
xor
xor
and
daa
xor
push
push
shll
in
mov
or
shlb
cltd
int3
add
test
jg
outsb
mov
lea
dec
mov
xchg
jl
ds
dec
dec
inc
jp
cld
sahf
dec
mov
enter
pop
es
fnsave
inc
out
call
shll
enter
push
scas
mov
out
mov
sahf
xchg
inc
jle
add
xor
enter
dec
dec
push
fbstp
dec
push
shll
loope
data16
in
dec
sub
cmpsl
gs
bound
mov
gs
pop
jb
int3
push
dec
out
mov
icebp
mov
inc
dec
test
lods
mov
adc
and
shlb
mov
jecxz
in
fabs
ret
test
inc
subl
cltd
scas
add
test
ljmp
or
lret
pop
adc
jp
loop
outsb
out
mov
sub
repz
out
js
jg
xor
hlt
popa
lret
lahf
mov
and
inc
out
xchg
dec
stc
aam
cmp
fs
cmpsb
cmp
mov
inc
push
cmp
ja
jmp
aaa
mov
push
test
cs
push
mov
bound
adc
xchg
jbe
out
sbb
loopne
xchg
les
les
sub
pushf
mov
es
fstpl
outsb
cmc
dec
ljmp
jmp
test
lahf
mov
push
sbb
or
jnp
and
scas
dec
imul
leave
push
fidivrs
jo
pop
pusha
enter
push
add
or
loop
or
scas
test
or
stos
and
adc
adc
out
int
fnsave
dec
test
scas
mov
out
xchg
cmp
inc
int3
cli
rcrb
xor
adc
sub
dec
inc
dec
gs
iret
jnp
add
mov
outsb
mov
out
sti
outsl
arpl
ficompl
sub
repz
jecxz
mov
rcrl
dec
jmp
daa
flds
jp
jl
push
adc
arpl
add
add
mov
mov
movsl
rcrb
imul
add
aas
lret
adc
adc
das
in
push
inc
std
pop
adc
adc
lock
push
jo
fsub
add
rcrl
cmpsb
out
cld
ret
mov
inc
in
pop
pusha
loop
inc
rclb
ss
fiadds
xor
or
fstl
mov
jge
insb
test
ss
inc
xchg
adc
pop
leave
iret
in
jl
sub
int3
mov
mov
js
test
sub
mov
addr16
aad
lret
push
mov
lret
fcompl
cmp
cmpb
notb
mov
sbb
popf
pop
xchg
pushf
lret
add
xchg
mov
and
push
cmp
jnp
cmpl
cld
mov
sbb
loope
ficomps
imull
mov
mov
sub
and
mov
pusha
std
xor
pusha
sbb
mov
and
sub
mul
inc
hlt
cmp
xor
inc
lahf
cmpsl
dec
push
add
or
cmp
mov
adc
stc
mov
insb
mov
in
orl
push
add
dec
test
pop
sub
cli
xchg
loopne
mov
and
xor
out
add
les
mov
sub
addl
push
les
sub
xchg
dec
shl
push
adc
scas
or
fisttpl
mov
lcall
mov
fstps
js
mov
sbb
dec
shrb
scas
fldenv
xor
lahf
push
lock
cwtl
loope
pop
push
cmc
shrl
lahf
insb
cltd
cld
in
mov
sbb
aad
shlb
cwtl
pop
xor
int
jp
sub
push
push
cltd
fisubs
push
lods
mov
or
mov
sbb
or
mov
mov
xchg
pop
popa
cs
ret
sub
cmpsl
scas
lea
outsb
xchg
xchg
fistps
lahf
enter
mov
into
sbb
std
gs
cli
bound
sahf
lret
icebp
sub
sub
ljmp
cmp
jne
stos
jbe
jb
fmuls
sti
mov
mov
aaa
test
mov
dec
inc
ret
xor
jae
jae
adc
out
xlat
mov
cmc
sbb
in
adcl
push
gs
pop
loope
inc
stos
inc
mov
xor
mov
pop
mov
test
xchg
pushf
ret
inc
jne
mov
enter
out
jle
pop
or
jmp
into
inc
pop
xlat
test
or
lds
push
pushf
in
gs
or
add
movsb
inc
xor
lods
cmp
lock
sbb
jnp
pop
in
xor
enter
sbb
push
ds
dec
dec
inc
cld
dec
cmp
or
mov
sbb
adc
ja
mov
xor
cmp
inc
les
cmp
test
negl
lods
fld
xchg
loopne
outsb
inc
push
jno
jl
mov
adc
icebp
bound
pushf
and
mov
xchg
sbb
mov
cld
xchg
cmp
lret
push
movsb
je
dec
movsl
lods
loop
pop
cmp
pop
add
xchg
rclb
jo
lea
xchg
add
add
les
popa
repnz
xlat
or
and
pop
mov
mov
fdivrl
sarb
sub
xchg
push
loop
push
mov
mov
inc
dec
and
out
iret
pop
stc
mov
rdtsc
call
fmulp
xchg
dec
mov
cli
push
std
lret
xor
and
jge
and
loopne
mov
push
cmp
mov
outsl
mov
es
lock
fcomip
inc
add
mulb
mov
repnz
push
cmp
sbb
ss
sbb
jo
cmpsb
shrb
shl
adc
xchg
js
jecxz
lods
or
adc
sub
cmp
mov
xor
stos
xor
lea
pop
ret
push
popf
test
push
push
cmp
insl
lret
jg
and
psubb
xlat
cld
or
arpl
or
push
pusha
xor
xor
inc
dec
push
and
dec
xchg
sbb
mov
inc
xchg
pop
pop
inc
push
std
ds
mov
dec
imul
stc
push
mov
aas
cmpsl
int
pop
sbb
fdivl
sbb
or
popa
mov
inc
lahf
fistpll
mov
and
jg
adc
andb
hlt
int3
pop
pop
insl
push
subb
movsb
hlt
rorb
stos
jns
xor
in
push
es
xor
sahf
je
stos
adc
jnp
sbb
imul
mov
sub
sub
mov
xchg
je
mov
cmp
pop
xor
out
push
sub
enter
add
lods
dec
push
dec
fldenv
and
and
and
push
out
imul
xor
and
ret
imul
sbb
adc
dec
out
lods
sahf
sbb
push
xor
and
sub
addr16
loopne
cld
sbb
rcll
xchg
out
out
in
orl
shlb
or
adc
xchg
rolb
pop
push
sbb
ret
jmp
jns
std
lahf
fldl
pop
cmp
mov
add
sub
iret
dec
jmp
cmp
std
testb
insl
pop
leave
leave
les
mov
dec
movsl
filds
call
gs
ss
pop
fst
cs
scas
or
sbb
dec
xchg
lea
imulb
pop
pop
jne
and
xorb
stos
cmpb
mov
sbb
test
and
in
aaa
pop
xchg
mov
arpl
xchg
lcall
scas
fstps
ss
aam
mov
push
sbb
inc
ficoml
sub
xor
push
test
repnz
pop
loope
sub
lods
adc
lock
push
xchg
jb
or
dec
inc
mov
shl
xchg
sub
inc
mov
push
push
call
pop
jge
add
mov
mov
add
inc
test
mov
in
insb
movsl
adc
cmp
lret
stc
push
in
cmp
sub
push
push
xlat
adc
xchg
xchg
mov
cmp
pop
jg
inc
daa
fisttps
in
in
shrb
sub
jo
sti
stc
iret
xchg
pusha
jb
bound
sbb
or
repz
mov
cmpsl
and
push
gs
mov
test
scas
jmp
inc
add
sub
popf
dec
pop
mov
mov
fstpl
xchg
imul
stc
std
negl
mov
mov
mov
fwait
sub
xchg
cmp
cs
xor
jne
xchg
mov
mov
mov
xor
dec
ficomps
xor
aaa
clc
fcomp
or
dec
fiaddl
or
cmp
cmp
pusha
out
jp
dec
iret
cmp
into
lcall
sub
mov
add
nop
jb
jmp
mov
lahf
fcmovbe
sarb
pop
mov
xor
dec
push
into
fs
mulb
inc
clc
xchg
movsb
jp
std
pop
loope
pop
mov
maskmovq
notl
or
rclb
fwait
jae
mov
in
mov
lods
pop
scas
and
xor
add
fsubr
out
and
popa
pusha
nop
fidivrs
jp
stc
ljmp
inc
mov
or
shl
lea
arpl
xor
movsb
inc
jmp
inc
outsl
pop
jbe
push
push
cmpsb
mov
mov
sub
xor
insl
mov
jmp
into
inc
fsubr
jge
imul
and
xchg
out
and
cmp
imul
stc
mov
lock
outsb
ret
xchg
mov
lock
and
js
cli
lods
pop
sub
xor
dec
outsb
fcmovnu
xor
xor
das
out
or
pop
movsl
xchg
cmp
scas
pop
jnp
push
int3
addb
je
jnp
or
sahf
mov
and
cmovs
fxch
popa
xchg
dec
push
cmp
jge
into
loopne
popf
push
add
or
pop
mov
imul
mov
ret
repz
in
mov
push
mov
push
inc
sbbl
add
mov
and
adc
test
roll
mov
outsl
jno
and
lock
call
xchg
sarl
pop
adc
mov
inc
fs
jecxz
aad
es
mov
fprem
stos
pop
add
push
out
frstor
mov
out
pop
pop
inc
mov
jl
sub
es
adc
adc
xor
xlat
add
jne
fidivl
outsb
neg
fdivl
mov
sbb
jl
popa
xchg
add
dec
jmp
mov
mov
in
pop
mov
xchg
add
xchg
addr16
dec
incb
pop
xchg
rorb
lahf
xlat
lock
sub
les
leave
aam
pop
outsl
cwtl
pop
je
jae
inc
addr16
lds
xor
sbb
arpl
inc
xchg
shl
in
and
lock
testb
popf
popf
cmp
dec
mov
mov
mov
sbb
movb
cmp
fidivl
loop
xchg
inc
xor
jno
jae
add
dec
hlt
fsubrl
insb
adc
and
adc
adc
inc
push
inc
dec
icebp
fwait
repz
bound
fsubrl
add
lar
jmp
outsl
out
int3
and
in
adc
pop
cmp
pop
inc
fldenv
pop
test
or
ds
xchg
or
icebp
in
xchg
mov
add
fidivrs
jg
push
mov
in
repz
xor
jae
push
mov
mov
les
xor
rclb
pop
add
idivl
js
les
mov
mov
cld
mov
xor
adc
cmp
pop
lea
xor
je
and
hlt
scas
mov
pop
xchg
out
or
adc
mov
xor
negl
xchg
loopne
sub
mov
cltd
popf
pop
push
cwtl
mov
sarl
shlb
sbb
cli
push
out
fimuls
mov
mov
adc
cltd
mul
loop
movb
ds
dec
or
int
scas
aam
sub
adc
mov
test
repnz
cmp
lcall
jge
test
fildl
or
bound
dec
mov
psubd
sub
aam
aad
sub
cltd
mov
shrl
cmp
push
repnz
dec
sbb
add
jmp
leave
cmp
mov
mov
cmpsl
insl
cmp
inc
pop
lret
xchg
inc
add
pop
cmc
fsub
adc
adc
insb
not
iret
ds
mov
and
cli
bound
and
dec
nop
jmp
push
lea
inc
adc
xchg
jle
push
xchg
mov
sub
rorb
fwait
sub
mov
icebp
std
lea
xor
cmpsb
mov
or
add
dec
nop
loopne
sbb
dec
std
in
sub
jb
in
repz
pop
jl
push
xchg
push
dec
cmp
popf
fcomp
and
ds
pop
mov
sub
jbe
jle
cld
dec
out
pop
rcl
das
sub
int3
ret
popf
pop
or
xor
cmpsb
xchg
enter
loope
jp
out
test
lret
jae
lea
dec
push
add
int
pop
xchg
pop
jg
pop
enter
fxch
sub
mov
fbld
in
and
testb
mov
inc
dec
mov
and
xchg
ss
in
cmpl
out
jne
push
fmuls
dec
jle
fdivp
int
lret
inc
inc
inc
adc
popf
cltd
sti
sbb
sub
adc
push
nop
call
xchg
mov
push
pushf
nop
adcl
cmp
lret
lock
je
loope
push
jae
flds
movsl
test
pop
mulb
sbb
sahf
imull
inc
inc
jmp
jb
hlt
mov
cli
pusha
lds
popf
xor
adc
pop
add
fldt
sub
sbb
sub
shrl
cs
jp
ret
in
daa
xchg
fs
inc
lcall
sbb
data16
in
psraw
ja
lock
jecxz
les
aaa
xlat
mov
push
in
xchg
mov
fimull
adc
int3
out
jmp
jno
push
lock
jbe
cmpsl
in
ds
mov
dec
mov
and
or
push
out
push
mov
loop
xchg
pop
jnp
roll
mov
xchg
and
mov
stos
test
lds
cli
popa
push
cmc
or
inc
xchg
jno
shll
mov
cltd
popf
mov
push
mov
pusha
xchg
out
test
mov
jp
inc
mov
out
sub
xor
shrb
movsl
push
lock
mov
push
xor
jbe
jae
lahf
test
mov
xlat
cmc
bound
fisubs
push
repz
gs
sub
sub
push
jg
pop
cmp
lret
fs
clc
movsb
sti
jb
cmp
fnstcw
rol
mov
push
sahf
cs
cmc
popa
mov
or
xchg
iret
cmpsb
push
jle
adc
push
inc
mov
push
fsubl
js
ret
cmp
cwtl
mov
mov
and
or
mov
jno
add
in
fldl
iret
addl
inc
xchg
cltd
and
popf
xchg
inc
pop
out
jl
cwtl
jge
movsl
pop
xchg
sahf
movsl
fisubs
xchg
ss
test
jmp
mov
rcr
xchg
fwait
sub
jno
and
pop
fidivl
out
clc
pushf
jb
and
lock
ds
sub
cmpsl
push
and
lods
pop
xchg
nop
pop
jge
bound
dec
mov
repnz
or
or
sbb
popf
insl
push
or
scas
xorl
mov
jno
jo
lock
stos
fisttpl
xchg
outsb
das
push
js
fisttps
xchg
sub
jmp
sbb
out
ss
fdivrl
lods
inc
inc
mov
fbstp
cmp
xor
fisttpl
push
sti
call
frstor
ficoms
insl
sbb
cwtl
or
ss
dec
adc
push
xchg
hlt
or
imul
mov
or
js
int3
rclb
imul
push
inc
aas
pop
push
pop
push
pop
cmp
test
sub
push
daa
orb
and
repnz
jge
ds
nop
push
test
mov
add
xchg
lods
push
call
loopne
adcl
icebp
jne
fsub
fisubrs
pusha
push
scas
ficomps
dec
xor
mov
lea
lock
pop
xor
sbb
clc
mov
cs
mov
aaa
fnstcw
mov
fcomps
rcl
mov
xchg
pop
sub
pop
and
push
mov
shll
inc
clc
cmp
cmp
sahf
loopne
add
push
lcall
rolb
imul
and
xchg
in
sti
xchg
fdivs
pushf
scas
std
out
jno
adcb
inc
mov
cmpsb
stos
mov
pop
stos
mov
ds
or
std
loop
iret
int
sub
adc
lret
loope
xlat
cld
sbb
pop
rclb
push
dec
inc
mov
jb
fstpl
xchg
mov
out
clc
add
sbb
push
and
loop
sbb
int
inc
xchg
or
notb
xchg
iret
lret
test
inc
test
int
mov
outsb
mov
mov
pop
xor
cmpsl
and
in
mov
inc
call
inc
inc
movsb
xchg
imull
pop
lret
or
test
mov
aaa
cld
stos
lret
gs
pushf
jbe
and
dec
jp
es
mov
add
pop
aad
shl
jp
jno
shrb
push
int
ljmp
inc
and
outsb
cmp
jns
jge
bound
pop
jecxz
lods
aam
test
sub
roll
jnp
out
cmp
adc
jl
imul
les
fistpl
xchg
and
pop
je
or
mov
dec
xor
add
fildl
mov
jns
sbb
adc
das
clc
pop
int
mov
add
push
sub
movl
cld
and
sbb
cmp
popa
negl
or
or
data16
sti
add
fstpl
and
sarl
xchg
ss
inc
pusha
mov
adc
leave
jl
push
mov
imul
sarl
mov
jb
ficoms
pop
jg
cmp
stos
cmc
xchg
imulb
cld
into
push
fldt
adc
shl
cwtl
pop
dec
testl
push
push
aad
add
fisubl
insb
xchg
out
add
lret
sarl
mov
cmp
mov
icebp
test
mov
enter
xchg
lods
into
inc
sbb
pop
sbb
mov
cmpsl
inc
rorl
and
or
aam
test
incl
jp
cmp
cmpsb
test
insl
jle
cmp
pop
xchg
pop
xchg
mov
scas
pop
hlt
sbb
hlt
rcl
inc
sbb
jmp
adc
mov
cs
cld
stc
loope
mov
pop
or
add
mov
movsl
and
dec
sbb
cmp
imul
pop
and
lods
and
pop
sub
mov
js
mov
gs
in
inc
sbb
popa
sub
lret
and
push
jmp
jle
push
shl
fcmovne
mov
fisubrs
pop
mov
or
mov
mull
inc
movb
dec
icebp
sub
xchg
andb
int
fwait
insl
jne
test
repz
mov
rorl
push
mov
iret
rcll
aas
dec
add
xchg
ds
data16
or
aas
adc
cmp
jg
out
ret
mov
cmp
jmp
in
push
es
push
out
mov
ret
outsl
nop
adc
jo
inc
xor
push
lahf
sarl
mov
popf
jge
ret
add
push
and
hlt
popa
dec
push
rol
inc
mov
popa
add
clc
pop
orb
stc
add
lret
sub
lods
xor
adc
les
in
sar
sarb
lret
mov
push
mov
lcall
mov
sbb
fisubrs
mov
sbb
push
fistl
rcl
pusha
sbb
push
cmpsl
popa
inc
push
or
outsb
mov
push
lock
ja
enter
movsb
inc
mov
rcr
jl
xor
test
js
push
lahf
fnstcw
mov
mov
nop
push
jae
sub
lds
xor
js
int3
aad
rcrb
fisubl
jle
mov
sub
lret
add
mov
push
dec
cli
das
incb
or
push
dec
or
stc
leavew
cwtl
sbb
dec
addb
pop
test
shrb
xchg
shll
movsl
icebp
mov
aas
pop
xchg
cmp
push
cli
icebp
fnstcw
or
xor
pop
push
jne
scas
dec
rclb
sbb
insb
push
push
mov
mov
fists
frstor
out
nop
popa
jbe
call
xchg
rclb
js
jb
jp
rclb
in
in
jb
dec
es
mov
das
stos
ret
fucomi
js
add
shll
out
dec
push
das
jge
mov
aam
mov
rcrl
xor
outsl
or
xchg
or
cmp
addr16
mov
enter
dec
xchg
and
data16
cmpl
sti
or
test
imul
int3
mov
mov
pop
jecxz
into
jb
mov
push
popa
imulb
mov
fs
mov
sbb
xor
push
cmc
lock
sbb
mulb
cmpsb
repz
in
push
adc
push
repnz
hlt
xor
inc
rcrl
xchg
fadds
mov
xor
mov
movntq
out
icebp
jae
incb
fs
mov
sub
paddw
jbe
rorb
mov
sub
outsl
cmp
nop
cwtl
and
add
jmp
sbb
shll
icebp
call
mov
xlat
movl
adc
xchg
je
lret
aad
ret
test
push
inc
addb
aaa
rcrl
dec
cmp
out
push
pop
mov
mov
push
adc
orb
in
cmpsl
stc
adc
das
pop
xor
test
adc
shll
mov
mov
xorb
lret
dec
pop
push
jb
mov
sub
sub
dec
es
cmp
or
bound
xchg
inc
jecxz
stos
leave
add
ret
push
inc
jecxz
mov
jns
stos
ret
enter
mov
pop
sbb
xor
xchg
cmp
push
out
loopne
adc
leave
add
xchg
das
jl
sti
in
xor
adc
test
out
cmp
andb
inc
sub
push
mov
jg
lods
sbb
pop
adc
sarb
test
push
shr
sbb
in
mov
jecxz
dec
std
mov
jo
dec
fwait
outsl
addr16
insl
in
gs
gs
jg
nop
cmpsl
insl
add
xchg
bound
cltd
rorl
shlb
xchg
push
inc
out
pop
call
adc
outsb
cltd
mov
pandn
test
scas
mov
jbe
lcall
mov
in
mov
std
xchg
arpl
dec
out
xor
es
int3
mov
cmpsl
lods
insl
fisubrl
iret
xchg
sbb
lock
push
adc
or
loopne
test
dec
dec
jne
inc
sbb
xchg
pop
jnp
and
adc
mov
mov
dec
aam
sub
inc
mov
mov
xor
cltd
xlat
jae
pop
mov
inc
cli
outsl
pop
out
call
fsubl
mov
mov
push
mov
cli
adc
icebp
fcoml
push
sub
mov
icebp
add
adc
or
lds
sbb
dec
xlat
mov
jbe
and
push
sti
in
lcall
test
cs
mov
aaa
outsl
sbb
xchg
and
cmp
pusha
in
mov
sbb
jae
mov
loop
cltd
ljmp
nop
push
cmp
adc
sub
add
jb
nop
push
mov
daa
push
pop
ret
mov
mov
sub
lahf
test
cli
xchg
movsl
jmp
mulb
cmp
pop
out
mov
mov
movsl
cmpsb
out
mov
or
faddl
out
mov
imul
cli
sbb
push
sub
mov
xchg
rclb
movsl
push
popf
in
xor
test
jge
jge
clc
aad
jb
and
push
mov
xchg
xor
lret
dec
or
dec
addr16
mov
outsl
dec
push
xor
lods
xlat
adc
addr16
ret
jo
stc
pusha
pop
and
dec
int3
jle
sub
add
or
rcrl
data16
sbb
pop
jnp
andb
mov
call
test
in
subb
lahf
fs
and
cmp
fisubrl
adc
in
cld
jno
mov
cmp
or
jbe
stos
sbb
mov
dec
jo
sbb
data16
xchg
in
pop
cmp
xchg
xor
shr
dec
cltd
mov
xor
xchg
add
fstpt
stos
lock
pop
shrb
add
rorb
jg
lret
mov
das
inc
daa
testl
iret
icebp
or
dec
push
and
test
fs
and
sub
lret
xchg
mov
add
jecxz
repnz
jg
enter
add
add
pushf
xor
jmp
jb
lods
loope
hlt
popf
cli
push
mov
push
jg
or
lods
and
daa
cmp
sti
mov
imul
and
imul
movsl
sti
sti
xchg
adc
sub
and
pop
aam
sbb
imul
push
sub
mov
outsb
mov
sbb
sub
cmp
sub
sbb
jne
inc
insb
and
mov
lret
rolb
sub
cmp
sbb
dec
mov
nop
mov
and
push
hlt
cwtl
mov
out
adc
pop
sub
sub
int3
jnp
jns
iret
movsb
repz
arpl
lahf
inc
cmpsb
gs
aam
inc
imul
loop
jge
xor
popa
pop
pop
sub
cmpsl
xor
jb
es
sub
push
cmp
pop
fcmovbe
mov
mov
mov
ljmp
jmp
sub
mov
rorb
cmp
mov
push
dec
push
sbb
sbb
jbe
or
sub
jns
add
add
fucomi
sbb
std
fs
cmp
pop
or
popf
in
addr16
push
mov
sub
into
jl
lds
out
mov
xor
out
sub
jmp
daa
push
jecxz
filds
mov
scas
jae
mov
or
cmpsl
mov
and
bound
daa
mov
pop
push
loopne
shlb
and
sub
in
inc
mov
pop
mov
jnp
shr
ret
xor
jae
inc
push
jl
inc
cmpsb
pop
push
mov
xchg
mov
or
jle
jp
data16
in
sbb
cmp
movaps
popa
lret
mov
adc
sub
or
mov
mov
mov
mov
stos
insl
push
loope
pop
adc
ljmp
in
cmp
lahf
mov
sti
dec
sti
xor
and
sub
aam
out
in
loop
sahf
ffreep
sub
jnp
xor
mov
fs
mov
jl
xchg
insl
lods
and
lea
cli
jo
mov
js
push
outsl
mov
loope
rorb
pop
outsl
shl
rorb
mov
push
xchg
in
mov
stc
lahf
ljmp
xchg
pop
xor
sbb
pop
enter
daa
mov
aaa
inc
mov
shlb
fdiv
shlb
cltd
xlat
mov
push
test
test
clc
sub
std
xlat
mov
inc
cmc
and
fsts
and
in
sbb
mov
xchg
shrb
fwait
movsb
xchg
popa
lds
pop
jmp
fiadds
lahf
adc
stc
aas
hlt
jle
ss
jb
sub
add
sub
push
out
and
stos
mov
jg
ja
cmp
dec
inc
mov
inc
das
xor
jnp
mov
pop
dec
jl
jge
and
into
sbb
jecxz
lds
push
push
cmp
and
ja
sub
pop
inc
sbb
mov
mov
cld
sub
xor
xor
sar
dec
addr16
popf
das
pusha
sbb
sti
cltd
lret
inc
or
cmpsb
xor
adc
sub
test
test
push
leave
pop
into
outsb
in
mov
cmpsb
add
pop
jg
fwait
sub
cmpsl
bnd
cmp
repz
adc
loopne
pop
inc
nop
add
adc
ds
bound
add
and
lods
fdivr
jle
push
push
and
push
out
adc
gs
andb
mov
fstp
std
pop
cmp
loope
push
push
test
jae
pop
dec
xchg
sub
adc
dec
xor
push
loop
adc
push
add
loope
in
sub
mov
lock
sub
out
sbb
cmpb
mov
cmp
in
loope
add
jnp
cmpsb
imul
imul
jg
jg
repnz
fincstp
hlt
cli
adc
pushf
xchg
sub
in
clc
cmp
cmp
movsl
mov
aad
adcb
jmp
or
gs
clc
faddl
or
ficomps
xchg
jle
mov
nop
hlt
loopne
jnp
rcll
pop
or
shr
or
ret
jbe
dec
js
sbb
sbb
cmp
fmuls
jle
pop
insb
pop
pusha
das
test
fnstcw
mov
add
pop
inc
insl
sbb
out
fcos
fsts
shll
insb
push
movsb
je
shll
ja
fisubrl
mov
lds
cld
xchg
stos
dec
mov
rcrl
mov
inc
mov
pop
dec
push
jno
cli
fstps
aaa
push
xor
negb
pop
push
arpl
sub
test
adc
add
push
and
cli
das
or
mov
dec
push
or
mov
xor
jnp
pop
and
pusha
aas
dec
fsubl
xor
xlat
push
mov
adc
sbb
jmp
push
orl
cld
rol
and
adc
ja
jp
lahf
pop
cmpsb
nop
test
and
and
jmp
shrl
insb
mov
inc
cli
int3
cwtl
rcrb
add
sti
mov
dec
sbb
mov
push
cmpsl
out
xchg
and
in
lret
and
lcall
enter
inc
leave
lahf
add
push
aam
xor
xor
lret
stos
xchg
jmp
pop
jno
ja
aas
out
repnz
mov
rcr
cmp
inc
or
adc
call
jg
fstpt
outsl
cmp
mov
sub
cmp
aam
ljmp
test
push
pop
cmp
sub
jns
push
arpl
test
in
add
pop
std
xchg
cmc
stos
lods
fdivl
pop
lahf
pop
mov
mov
repz
paddsw
ja
in
or
mov
daa
jae
gs
push
add
cmpsb
into
pop
popf
nop
mov
in
lcall
cmp
aas
dec
mov
in
xor
mov
out
jo
lret
mov
leave
mov
es
cmpsl
call
es
es
jo
pop
sub
adcb
mov
sub
out
mov
es
mov
shlb
xchg
fmul
xchg
test
aas
cmp
popf
fldl
inc
cmp
cwtl
mov
rorl
mov
dec
xchg
out
cs
dec
cmp
in
stc
pop
mov
dec
cmp
add
in
in
pop
faddl
daa
cmp
scas
inc
clc
lret
pop
stc
cmp
jle
mov
pop
sub
shlb
cvtps2pd
push
sbbl
cmp
arpl
xlat
push
mov
stc
hlt
int
push
pop
jge
cmp
jg
loop
lea
adc
in
xchg
addl
in
sub
data16
in
jb
mov
cli
lahf
mov
leave
dec
sbb
out
inc
mov
rclb
sbb
in
iret
mov
pmaxub
sub
in
mov
inc
inc
and
fabs
lcall
jne
frstor
test
pop
ja
popf
sbb
mov
push
sub
add
jbe
shll
xor
out
jle
inc
idivl
mov
mov
fadd
out
cltd
call
pusha
xor
mov
das
jbe
sub
cmpsb
cmc
sbb
cmp
push
jecxz
push
push
adcb
mov
xchg
sbb
cmp
imul
shl
mov
xlat
arpl
je
xor
adc
stos
dec
fsubr
popf
adc
push
dec
fdivs
stc
add
push
fcomps
dec
hlt
mov
xchg
mov
ja
cmpsb
adc
movsl
mov
mov
xchg
sub
mov
push
enter
ljmp
xchg
aam
inc
pushf
mov
ss
stc
sarl
int3
xor
push
xor
push
push
nopl
fdivrs
dec
inc
aad
cli
out
sbb
dec
add
dec
dec
xchg
jge
int
adc
and
sbb
imul
inc
mov
mov
mov
cli
es
dec
cmpsb
mov
and
push
shll
scas
xchg
ja
mov
jne
cmc
popf
jo,pn
push
xchg
inc
xor
popa
lcall
cmp
add
out
ffreep
lcall
xchg
pop
push
stos
test
inc
jge
add
xchg
mov
adc
lods
into
fwait
jge
sub
xchg
add
outsl
xchg
xchg
pop
out
push
test
cmp
dec
add
cmpsb
rcl
mov
jl
jge
dec
gs
jge
cmp
inc
int3
jecxz
cld
mov
mov
repz
jp
inc
addr16
pushf
leave
fisttpll
xchg
test
testl
shlb
xchg
fadd
addl
adc
fdiv
push
xchg
and
pop
push
push
inc
rclb
jnp
mov
xchg
and
mov
lcall
sti
adc
inc
addr16
or
push
nop
int
movsb
jmp
pop
sbb
inc
xchg
ja
clc
xorl
mov
jmp
push
push
xor
inc
insb
mov
js
push
inc
push
mov
addb
xor
pop
and
pop
adc
cmp
add
dec
mov
pop
xor
lret
cmp
xchg
repz
inc
add
daa
std
imul
jae
out
test
push
xchg
xchg
call
cmc
sbb
adc
jbe
jns
add
rorl
mov
xor
mov
lods
and
inc
popa
out
loop
cmp
pop
jo
pop
mov
outsl
sub
or
stos
mov
push
dec
xor
adc
dec
mov
in
shll
cmc
sub
xor
outsl
xchg
jp
int3
cld
clc
mov
and
cmpsl
jo
lock
cs
nop
das
fmull
enter
xchg
test
aam
xor
mov
dec
rorl
cmp
or
insl
insl
test
add
cmpsb
dec
xchg
sub
jmp
pop
xor
stos
xor
lods
inc
pop
in
in
fldl
lcall
add
ja
inc
ja
inc
and
xchg
nop
mov
scas
inc
mov
xchg
mov
lock
bound
out
adc
mov
aas
xor
dec
stos
inc
xor
mov
dec
bound
mov
jle
sarb
adc
shlb
lret
stc
sub
xchg
loope
mov
jp
dec
sub
and
cmc
addr16
mov
je
cli
in
shrl
stc
sub
pcmpgtd
and
dec
scas
dec
push
jno
pop
inc
xor
cli
arpl
sbb
rcrl
or
sub
sbb
dec
jp
xchg
ret
lock
aas
addr16
xchg
xchg
cmpsl
jp
enter
pop
mov
adc
lret
pop
daa
push
pusha
das
mov
adc
clc
adc
daa
inc
frstor
sar
inc
mov
rorl
lret
pop
xor
lods
add
jb
add
cwtl
xchg
xchg
nop
adc
sub
xchg
arpl
iret
mov
lahf
pop
cmp
push
ja
dec
xchg
dec
and
xchg
sub
cs
movsb
loop
cli
mov
push
lahf
pop
hlt
cmpsb
xchg
notl
jmp
mov
xchg
cmc
fldlg2
sub
shrl
mov
jp
sub
hlt
fdiv
data16
stc
insl
cli
sub
iret
ss
xchg
add
scas
sti
iret
clc
fstl
aad
cld
or
xchg
dec
sbb
sbb
mov
clc
daa
cmp
inc
lods
sub
or
cmp
add
in
or
push
sbb
out
add
or
insl
sub
test
push
test
imul
shrl
outsl
ror
out
stc
mov
mov
and
mov
dec
lret
inc
xor
pop
and
jl
jmp
popf
mov
adc
sbb
dec
dec
fidivl
xor
and
pop
xor
aam
xchg
loope
ret
insl
ss
adc
add
xchg
add
dec
loopne
add
sub
out
fwait
dec
jae
pop
pop
jecxz
mov
clc
cs
add
xchg
mov
imul
loope
jle
and
cmp
or
rcll
add
int
lea
subb
mov
leave
mov
les
xor
dec
push
jge
xchg
dec
xchg
add
dec
ljmp
and
add
roll
std
pop
lods
into
xor
divb
movb
ucomiss
lret
pop
xchg
jg
push
or
fidivrs
fcompl
ja
mov
mul
pusha
mov
dec
mov
nop
movsb
jb
pushf
loopne
xlat
sub
push
stc
sub
nop
out
push
rcll
sub
ja
ficompl
popa
movsl
fidivrl
int3
out
cmp
jno
out
testl
xchg
sbb
lahf
xchg
add
sbb
cli
outsb
jge
std
and
mov
xor
pop
xchg
pop
enter
stos
inc
sbb
inc
dec
add
aam
adc
and
mov
dec
add
jns
sbb
adc
adc
pop
xchg
notb
add
mov
push
mov
add
js
xchg
push
jg
dec
ljmp
jbe
ret
movsl
pop
xor
inc
cmp
mov
fs
add
das
in
mov
mov
xchg
pusha
addr16
neg
fdiv
pusha
ret
xlat
jmp
or
shrb
xchg
mov
call
mov
clc
jb
lret
pop
add
inc
mov
sub
stos
adc
sbb
pop
outsl
bound
popa
pop
pop
xchg
adcb
or
aaa
fstpl
cmp
ret
jge
mov
pop
incb
repz
and
inc
sahf
sbb
mov
in
movsb
insb
rclb
dec
fidivl
addr16
cli
or
push
inc
vpsubsw
mov
fsubs
pop
out
xchg
daa
jns
ficompl
xchg
adc
mov
jmp
loope
lds
mov
mov
shr
sub
jno
or
std
loope
jecxz
mov
sbb
pop
adc
sbb
dec
sbb
cli
lret
outsl
sbb
mov
cmpb
rorl
inc
ss
repnz
sbbb
xchg
or
pop
aad
cs
mov
arpl
stos
arpl
mov
pop
jge
jmp
imul
int
fistps
mov
mov
out
jl
jecxz
aaa
out
xor
sti
jle
cmpsb
sub
jno
push
test
add
push
fiaddl
int
mov
pop
mov
adc
out
push
dec
test
push
mov
jo
inc
mov
daa
pushf
sub
adc
jge
push
adc
sbb
fwait
jl
fildll
and
cli
arpl
push
xchg
fldcw
add
mov
mov
jnp
ss
xchg
mov
adc
mov
jns
adc
add
ljmp
aas
jo
neg
mov
mov
sbb
cmp
add
subl
or
test
mov
and
dec
xchg
or
out
xchg
gs
into
dec
stc
cmp
jp
jg
adc
mull
cmp
xchg
or
or
fcmovu
or
mov
sub
ja
add
mov
push
push
inc
shll
push
pop
xor
xchg
jo
or
sbb
sub
or
sub
insb
inc
and
clc
dec
fimull
lods
in
fdivp
iret
jmp
mov
aad
mov
lds
sub
out
sub
out
arpl
fimuls
xchg
mov
lds
and
cmpsb
lea
dec
cli
or
stos
xchg
push
insl
cmp
jae
cs
pop
xchg
test
adc
xchg
xchg
pop
pop
fwait
pop
jb
sbb
dec
insl
mov
mov
push
ds
pop
ret
out
push
dec
cmp
pop
push
push
repz
leave
push
cmp
mov
movsb
mov
ret
fimuls
arpl
dec
mov
and
into
test
cmp
aad
arpl
and
sbb
out
das
call
rcr
add
ficompl
lods
push
cmc
dec
pop
add
fbstp
outsl
jne
jae
add
test
pop
test
iret
pop
or
paddd
in
pop
push
mov
mov
fcomp
jmp
ss
repnz
sarb
outsb
mov
scas
cwtl
es
dec
andl
lock
push
lock
sbb
rcr
les
aaa
mov
leave
push
mov
test
cld
lahf
sbb
push
jbe
hlt
cld
cmp
imul
adc
pop
stos
mov
popf
jno
push
add
pusha
pop
mov
hlt
int
inc
push
ret
jp
negl
push
push
leave
fidivl
push
stc
push
pop
test
xor
test
xchg
clc
daa
je
mov
inc
aas
xor
sbb
popf
inc
test
pop
icebp
iret
xchg
push
outsl
inc
test
fiaddl
mov
icebp
scas
inc
adc
mov
mov
cmp
mov
addr16
add
fmul
mov
inc
pop
lea
push
xchg
push
movsl
push
jbe
cmp
sbb
decb
es
add
sbb
lret
sbb
push
xchg
mov
dec
fiadds
outsb
and
xor
fsubrs
int3
fldt
ljmp
sub
cmp
inc
mov
sub
adcb
xchg
cmp
pop
push
js
ljmp
mov
mov
pop
lret
cmovbe
mov
clc
out
add
and
or
push
stos
idivb
dec
in
or
mov
ljmp
lcall
inc
pop
fs
testb
pop
pushf
aam
popa
xchg
lds
mov
mov
fldenv
fs
lds
xor
jmp
mov
mov
push
xchg
inc
jnp
jns
mov
ror
mov
jae
push
test
xor
pop
cmp
add
movsb
sbb
inc
push
movsl
mull
mov
add
mov
bound
dec
add
flds
mov
int
pop
pop
mov
cmp
pop
xor
ret
jae
in
add
adc
arpl
in
addr16
outsl
xchg
xor
inc
mov
test
xor
jae
or
xlat
pushf
lds
xor
or
or
pop
daa
cmp
sub
mov
jmp
xor
je
fldl
ret
dec
pop
push
jp
roll
nop
arpl
cmp
sub
pop
clc
or
inc
in
divl
shlb
mov
dec
outsl
jbe
cli
out
push
xor
int
and
addr16
out
movsb
in
rolb
sbb
pop
fcoml
iret
xchg
xchg
aas
sti
or
out
imul
mov
shlb
jp
ficompl
jae
mov
mov
imul
mov
ss
and
lret
pop
movsl
mov
sub
mov
scas
xchg
adc
fwait
add
rcll
std
rcrl
fcoml
inc
repz
js
inc
pop
js
stos
push
in
out
into
push
out
dec
pop
cwtl
jns
lret
popa
or
dec
arpl
lcall
cmp
xor
mov
jnp
push
loope,pt
icebp
lret
or
lcall
std
push
cmpsl
xor
cmp
test
cmpsl
cmp
dec
sbb
cwtl
mov
mov
gs
clc
std
fwait
pop
add
ret
push
jbe
imul
imul
pop
loop
arpl
loopne
in
dec
std
sbb
clc
or
arpl
fs
sbb
xchg
push
icebp
out
inc
cmp
mov
ja
scas
call
mov
in
icebp
xor
jecxz
ja
xchg
jns
inc
sbb
ds
inc
popa
ljmp
mov
sbb
pop
fidivs
loop
sub
cli
and
jnp
aad
daa
add
mov
add
mov
incb
andl
decb
mov
int3
in
or
aad
fdivrp
and
cmp
adc
mov
mov
scas
pusha
xor
fs
std
jp
in
sti
push
dec
out
inc
in
push
jp
push
loope
mov
pop
and
insl
inc
or
or
nop
test
stos
test
pop
movb
jle
cmp
outsb
inc
dec
pusha
pop
out
cmp
cmp
stos
push
adc
cld
xchg
pop
mov
adc
xor
mov
dec
enter
adc
xchg
ffree
pushf
pop
sub
sub
dec
fs
out
outsb
test
call
mov
data16
xor
jecxz
icebp
ret
insb
js
push
mov
cmp
ljmp
jb
sbb
adc
lcall
pop
push
sti
sub
mov
adc
add
cmp
adc
test
mov
xor
inc
xor
mov
xchg
mov
inc
add
aam
sbb
aas
nop
and
jecxz
and
sub
sahf
jmp
fldt
or
aaa
jo
push
in
sbb
movsl
and
mov
insl
inc
inc
or
sbbb
mov
adc
adc
jg
or
push
xchg
xor
adc
push
xor
inc
aad
cmp
or
pminub
jmp
ret
xchg
shl
jmp
jo
or
adc
scas
scas
mov
or
test
fwait
mov
push
lea
jge
insl
xchg
sbb
pop
sbb
stc
sbb
jns
lds
adc
adc
icebp
subl
fldl
loop
pop
mov
push
add
add
test
gs
mov
stos
mov
jo
cmp
outsb
jp
bound
mov
movq
and
js
mov
enter
jbe
sub
jp
add
xchg
mov
xchg
lret
lcall
jo
push
mov
pop
add
sbb
push
dec
fs
pop
pop
cmpsl
xor
scas
sub
cmp
mov
lods
sbb
sub
std
inc
or
vfrczps
ffreep
je
rcrl
jo
ljmp
jp
call
inc
int
inc
cmpsl
mov
sbb
jg
mov
xchg
aad
lcall
xchg
push
bound
and
fwait
cmp
decl
loop
adc
movsl
dec
pop
mov
int3
mov
add
out
xor
lock
scas
mov
adc
xor
adc
test
cmp
cld
popf
xor
rolb
lea
mov
cmp
push
mov
arpl
sbb
ds
adc
in
mov
lahf
cmpb
aad
mov
int
sbb
test
mov
pop
ret
mov
and
je
xchg
daa
lret
cmp
ja
pop
add
aas
mov
inc
xor
cmpsb
les
sbb
push
jo
cmpsb
add
loop
ja
adc
and
push
cwtl
loopne
jmp
add
push
dec
arpl
movsl
addr16
xchg
fidivrl
mov
outsl
push
out
xor
pop
lcall
mov
lods
jbe
stc
shrb
cmp
mov
jae
jge
js
xchg
jp
push
push
sbb
push
lahf
push
mov
jl
imul
add
mov
and
data16
push
mov
xor
movsb
add
pop
leave
mov
pusha
daa
test
mov
adc
js
icebp
mov
inc
popa
cmp
mov
fldenv
sub
inc
imul
shlb
mov
adc
fdivr
cmp
ret
adc
fstps
pop
xor
repnz
fimull
pop
mov
push
mov
cmp
pushf
and
mov
mov
mov
and
dec
es
insl
scas
movsb
push
xchg
sti
push
ja
push
fcompl
jbe
xchg
fmull
and
rolb
insb
movsl
jnp
mov
xchg
or
ja
lcall
xor
scas
jnp
sub
mov
mov
popa
push
gs
scas
aaa
mov
dec
pop
sbb
xchg
push
mov
and
xchg
call
mov
shlb
mov
push
subb
inc
push
jmp
dec
out
pop
imull
cmp
xchg
dec
popf
ja
call
pop
jge
mov
adc
mov
pop
jno
sub
jne
mov
pop
cltd
xchg
add
enter
xchg
adc
data16
push
push
pop
test
sbb
sbb
movsb
or
mov
xor
jbe
xchg
jle
cmp
fcoms
xchg
les
aam
mov
sub
fdivrl
and
add
lods
out
cwtl
int3
fwait
insb
push
inc
dec
xor
or
popf
xor
push
adcb
popf
pop
ret
cmp
push
hlt
mov
xchg
cs
scas
stos
adc
pop
dec
xlat
lods
cmpsb
daa
sbb
leave
mov
imul
loopne
lock
xor
xchg
add
push
mov
cld
dec
add
mov
ret
aad
mov
mov
sbb
repz
mov
dec
add
daa
fs
fisubrs
adc
fstpl
leave
adc
dec
mov
inc
fdivl
and
mov
addr16
or
test
mov
imul
or
sub
xor
ljmp
in
rcrb
ljmp
movsb
pop
add
into
rorl
pop
js
pop
mov
push
outsb
dec
repnz
jo
cmpsb
scas
jo
cmpsb
in
cmp
jns
fists
sub
int
push
jns
imul
sbb
jmp
mov
jne
in
mov
inc
mov
push
repnz
sbb
lea
fcompl
out
xor
dec
xor
push
mov
jne
mov
stos
test
lret
push
mov
jb
xchg
movsl
clc
or
lahf
into
inc
jbe
and
cmc
push
test
adc
sub
out
mov
js
adc
sub
out
sbb
add
aam
adc
lahf
outsl
dec
mov
dec
testl
lcall
and
shlb
pop
jecxz
xor
clc
je
or
out
and
lock
hlt
in
xor
ds
dec
out
hlt
sub
mov
dec
in
push
icebp
push
mov
jbe
or
add
insl
push
xor
mov
mov
mov
scas
lret
cld
int
push
push
loope
sub
sbb
push
notl
dec
jg
insl
loop
insb
or
mov
rorb
inc
out
imul
jno
adc
xchg
iret
jb
xor
pop
or
cmpb
mov
ret
mov
xor
xlat
add
xchg
in
lods
add
sbbb
push
not
scas
arpl
inc
test
and
sbb
mov
sti
insl
test
lock
xchg
test
lods
mov
sbb
cmp
aas
jp
daa
mov
xchg
sub
cli
sub
xchg
xchg
and
jno
stos
cmp
in
aaa
lock
xchg
jb
bound
sbb
lods
cld
pop
sub
jns
movsb
add
push
push
int3
icebp
sub
inc
adc
or
add
inc
rclb
outsl
adc
ds
xorl
and
jle
cmp
and
bound
jns
stos
mov
mov
sub
add
pop
call
sub
in
sbb
ss
xor
push
loope
sub
mov
stos
lcall
dec
lret
jae
xchg
stc
fld
mov
and
rorb
rorl
add
push
mov
mov
out
xchg
cmp
add
sbb
add
lods
cmp
clc
cmpsl
add
stc
loopne
push
ss
sub
push
pop
push
mov
aaa
jo
sbb
add
add
mov
jg
cmp
fbld
xchg
rolb
rclb
stc
dec
mov
clc
push
jge
inc
cmp
cltd
in
lods
push
inc
push
jg
add
adc
mov
pop
mov
fcomps
je
lods
push
dec
out
repz
mov
inc
and
hlt
push
sub
lods
push
je
lret
sbb
jbe
pop
mov
dec
scas
stc
mov
aas
mov
or
divb
inc
cwtl
jne
or
pop
repz
cmc
pop
in
xchg
das
popa
or
movsl
sahf
test
inc
or
xchg
loop
std
lods
lea
mov
insb
dec
or
or
mov
sbb
dec
cmp
pop
insb
xchg
popa
cs
dec
loope
pop
xchg
outsb
jns
iret
scas
repnz
loope
aas
sbb
or
ret
adc
sti
cltd
push
jno
mov
xchg
or
fmuls
xor
or
push
shlb
fdivs
mov
dec
sbb
nop
xor
adc
jecxz
mov
push
stos
lock
popa
movsb
cmpsl
jp
lret
inc
or
in
inc
mov
xchg
jbe
fnstenv
jecxz
inc
enter
into
out
inc
andl
ds
in
push
std
enter
adc
pop
sub
mov
in
mov
int
ret
stc
movsb
mov
cmp
ret
dec
pop
cmpsl
mov
imul
scas
dec
jmp
cmp
pushf
dec
pop
cmc
in
insb
fs
fidivrs
adcb
cmp
sti
popf
insb
ret
lea
lret
imul
jmp
dec
lret
mov
enter
dec
sahf
adc
data16
fcoms
mov
out
lea
std
std
in
test
pop
imul
test
xor
cld
call
mov
insl
or
test
sub
jnp
jo
add
pop
test
add
ficoml
cs
add
and
pop
push
jle
xchg
jp
testb
mov
mov
lahf
jns
imul
jnp
je
mov
or
leave
pop
je
sarb
mov
xchg
gs
mov
mov
mov
loop
movsl
cwtl
orb
es
cmp
cmp
jae
inc
adc
adc
test
std
in
inc
fcompl
insb
ret
dec
enter
xor
mov
scas
xchg
aad
cmp
popf
dec
xchg
sub
adc
repz
gs
xchg
lock
mov
sbb
cmp
es
imul
sub
lods
push
xor
adc
aaa
scas
mov
bound
mov
aad
icebp
push
sub
xor
cmpsl
mov
xchg
imul
push
sub
ljmp
ret
ja
imul
or
jp
inc
dec
pop
test
mov
sahf
out
mov
in
aad
inc
lcall
cld
stos
xchg
jge
pop
ret
subb
xchg
clc
lea
aad
ret
std
cmp
cmp
or
adc
adc
test
test
or
xchg
mov
jns
popf
fidivs
fnsave
pop
lea
sbb
fwait
or
inc
mov
ret
adc
dec
add
xchg
into
notb
in
fs
in
sub
inc
repz
sbb
std
hlt
inc
cmp
jne
xchg
jp
push
mov
int3
mov
mov
test
push
je
imul
daa
jne
ja
cli
or
pop
mov
popf
mov
mov
outsb
test
hlt
or
sahf
sub
adc
fstpt
jns
sbb
inc
add
mov
js
push
mov
in
aas
jl
push
es
mov
in
mov
mov
jb
dec
push
jnp
lds
fadds
xchg
push
fwait
jno
sahf
test
add
mov
and
xchg
mov
ja
dec
das
cwtl
mov
cmp
inc
movsl
sub
pop
mov
ret
fstpt
mov
and
push
sbb
jg
orl
fs
add
sub
or
xchg
add
push
jae
aas
jo
pop
mov
lods
rorb
xchg
jl
in
rcr
stos
inc
and
je
in
xchg
mov
lods
jbe
jecxz
xor
rcrb
mov
stc
add
sbb
push
in
out
mov
inc
add
fcoml
fldcw
push
lds
je
mov
outsl
jecxz
std
je
rclb
pop
or
clc
jmp
push
xor
xor
dec
aas
sub
lods
lret
scas
push
inc
xchg
stos
loope
repz
jp
mov
inc
iret
cmc
cmp
rorb
fimuls
fldt
sbb
push
stc
or
insl
shlb
pop
add
fnstsw
jb
push
or
mov
inc
sbb
jmp
cmc
test
sbb
mov
loope
imul
sub
nop
mov
fsubrs
add
orb
cmpsb
xor
cmpsb
rcrl
sub
lods
repnz
mov
cltd
sbb
shrl
ret
bound
fwait
xchg
mov
and
adc
mov
adc
inc
les
and
xchg
xchg
sbb
jbe
icebp
lock
xor
push
add
add
push
aas
or
adc
sub
sub
lea
mov
mov
filds
add
repz
sbb
sub
stos
or
push
jne
movsb
fmul
fcoml
add
pop
cmpsb
repnz
xor
xchg
pop
pop
and
xor
ljmp
pop
pop
sarl
pop
push
addr16
jbe
or
sub
xor
js
pop
dec
shrb
push
mov
adc
in
rorb
add
inc
sbb
cmp
xchg
inc
fisubrs
xorl
jne
loope
and
and
pop
pop
inc
je
sbb
std
mov
cmp
pop
mov
inc
mov
dec
mov
dec
push
jno
into
psubb
jecxz
pop
push
ss
jp
cmp
mov
mov
scas
cmp
je
out
test
leave
push
xor
aam
mov
int
lods
xor
or
icebp
xchg
add
or
or
mov
shll
ljmp
loop
xor
aad
jp
mov
rolb
sbb
aam
xchg
sbb
out
movb
enter
in
dec
inc
xchg
mov
dec
pop
jecxz
rol
imul
dec
cmp
das
pop
out
push
nop
push
cltd
sub
sub
fdivl
push
push
or
out
mov
pop
cmpl
adc
lods
mov
push
push
adc
inc
gs
lods
jnp
into
lock
adc
and
lods
or
ret
lret
fists
in
cmpsl
sarl
in
dec
fwait
popf
push
fucomip
out
les
stos
int3
and
cmc
shl
data16
les
or
cmp
dec
jae
dec
mov
push
push
rorb
and
mov
xchg
xchg
shrl
or
mov
and
cmp
or
pop
inc
push
or
jmp
dec
repz
dec
dec
mov
add
inc
scas
pop
add
xor
gs
call
jmp
repnz
sahf
jbe
add
sub
mov
scas
xchg
and
inc
leave
movsb
idivb
daa
xchg
push
fdiv
in
dec
int3
imul
sub
cltd
xor
clc
out
mov
fstpl
mov
call
int3
in
pop
in
in
int
imul
pop
sahf
mov
push
lret
aad
clc
push
pop
mov
xchg
pop
lahf
int3
jbe
stos
sbb
xchg
xchg
adc
ds
jp
lock
int
jae
mov
mov
jge
inc
lds
and
add
xor
cmpsl
push
jecxz
movsl
daa
inc
scas
pop
sti
mov
push
dec
test
jbe
repz
xchg
mov
add
adc
imul
fsubr
push
out
fdivl
mov
push
dec
stos
sar
shrb
jg
mov
fstpt
pop
mov
mov
pop
sbb
xor
mov
ret
enter
xchg
adc
aam
lods
pop
pop
or
mov
lds
loope
mov
inc
or
or
pushf
stos
sti
jb
or
fnstcw
sub
xor
leave
fcomp
inc
pop
mov
pushf
dec
mov
mov
mov
push
sub
int
or
mov
jb
cmp
mov
and
addb
pop
in
out
xorl
lea
lds
std
sub
ss
cs
and
sub
jb
sbb
push
inc
dec
and
mov
shr
xchg
push
jo
fildll
push
hlt
inc
sbbl
popf
push
mov
xchg
and
sub
les
adc
hlt
mov
jno
adc
insl
je
call
in
lret
mov
clc
pusha
rcrl
cmp
int3
rcrb
push
ret
inc
mov
repz
inc
adc
imul
cmp
das
jns
sub
fsubl
mov
cmp
mov
push
das
jbe
adc
push
push
arpl
sub
push
mov
and
arpl
ja
imull
dec
out
mov
gs
pusha
mov
ss
xor
xlat
and
add
cmc
gs
jnp
insb
push
dec
xchg
xchg
xchg
mov
push
pop
jg
mov
sub
sub
stos
sbb
pop
sub
out
xor
jmp
adc
stos
rorl
mov
loop
pop
push
add
dec
push
adc
and
aaa
push
mov
add
nop
leave
scas
adc
je
xchg
out
sarb
outsb
test
or
cs
add
lret
xor
mov
rcll
and
int
insl
inc
cmpsb
stos
ss
adc
stc
dec
mov
jge
xchg
lods
aad
fndisi(8087
or
ds
cli
dec
stos
fiadds
pop
vunpcklps
and
popf
int3
cmp
cwtl
daa
jae
pop
shrb
rcll
in
xor
pusha
push
mov
fwait
add
mov
int
sbb
and
inc
pop
sub
mov
or
sub
push
xchg
ljmp
ds
dec
jle
jnp
mov
inc
rcrl
xor
fisubs
sbb
outsl
inc
orl
test
mov
jne
nop
cmp
test
arpl
mov
into
es
outsl
pop
stc
int
add
mov
sahf
icebp
out
pop
and
cmp
pop
negb
aad
cmpsl
jmp
sbb
test
std
jp
jnp
xlat
mov
in
int3
bound
dec
in
pop
sbb
sahf
lods
cmpb
push
lea
fbld
xchg
xchg
sbb
ds
mov
inc
add
push
cld
sub
mov
movl
sub
bound
test
scas
push
repnz
jbe
lods
jp
out
xchg
push
push
cs
lods
pop
dec
popf
mov
imul
mov
cli
fstpl
cmp
js
lcall
test
cwtl
ja
std
adc
pop
sub
cltd
lea
test
jo
and
stos
punpckhwd
arpl
movsl
mov
add
lret
fs
push
or
sub
stos
loope
pop
fsubr
pop
mov
inc
jnp
ljmp
insb
std
lods
or
test
xorl
loopne
sub
dec
das
in
out
push
les
pop
push
stos
cmpsb
mov
xor
test
sbb
repz
cmpsl
das
fwait
lcall
jnp
jbe
dec
int3
mov
and
fldl
jne
jmp
fs
inc
add
push
mov
add
inc
sbb
mov
cmc
cli
ja
jne
loope
adc
xchg
out
stc
mov
jmp
jb
sbb
popa
lods
mov
or
ja,pt
cwtl
sub
cmpsl
dec
inc
mov
ret
lods
leave
cmpsb
repnz
sub
jge
cmp
mov
xchg
adc
scas
icebp
cmpsb
lock
mov
ljmp
mov
out
lds
dec
jnp
fdivl
xchg
ljmp
hlt
adc
out
push
es
mov
rcrl
sbbl
outsl
shr
xchg
loopne
stos
shrb
jae
inc
scas
loopne
adc
sbb
shl
insb
int3
jge
fwait
pop
adc
mov
add
pop
popf
dec
mov
inc
fisttpl
jne
sub
push
and
std
ja
repnz
cltd
test
nop
sbb
ds
nop
scas
test
jns
xchg
ljmp
nop
add
lret
sbb
mov
inc
jl
scas
jmp
pop
in
pop
popa
imul
or
jmp
rcll
inc
pop
xchg
test
into
cli
movsb
push
dec
sbb
lret
stos
stos
dec
in
sarl
out
sahf
cmp
imul
pop
push
cmp
fstl
xchg
int
and
adc
jmp
pusha
lods
nop
sti
dec
enter
stos
call
pop
mov
lock
push
dec
shr
bound
mov
imul
ja
pusha
mov
ret
pop
scas
sbbb
mov
mov
and
mov
insl
hlt
lods
mov
xchg
test
push
fldl
cmpsl
adcb
sub
pop
addl
cmc
dec
ljmp
je
lret
mov
adc
and
add
pop
pushl
inc
inc
daa
sbb
ja
cmpsl
dec
jg
jno
xchg
fs
in
arpl
adc
or
std
jmp
xchg
outsb
lret
sbb
jl
hlt
dec
popa
int
popa
cmpsb
sarl
lahf
push
jp
out
or
dec
pushf
adc
sti
mov
sbb
jb
rcrb
js
fcomps
cltd
jl
movsl
ret
icebp
jne
out
adc
add
movsb
mov
mov
inc
loope
cs
imul
addl
sbb
icebp
test
mov
jno
into
adc
push
inc
imul
ret
dec
pop
icebp
jns
xor
in
decb
cmp
adc
sub
push
int3
pop
lret
fistpl
push
mov
jle
and
mov
in
jns
jnp
sub
lret
xchg
dec
or
leave
popl
add
pop
inc
mov
push
pushf
aaa
out
cmpsb
xchg
xchg
std
jp
adc
inc
popa
out
scas
mov
push
push
cld
sbb
enter
insl
jp
dec
dec
movsl
test
cmpsl
ds
xchg
scas
mov
push
push
adcb
fcoms
sahf
scas
inc
xchg
jno
push
into
pusha
inc
pop
push
jno
out
dec
into
mov
sub
stc
shll
xor
sbb
sbb
in
out
rclb
iret
rclb
daa
sub
das
mov
pop
movsb
xchg
mov
jl
ds
mov
loope
mov
imul
nop
inc
xorl
ja
sub
cmpsb
enter
jle
stos
or
fstpl
scas
lea
sbb
sub
insb
mov
fimull
mov
aaa
dec
fwait
addr16
out
dec
mov
in
lcall
ret
adc
call
dec
xchg
xchg
and
sarl
pop
lds
popa
out
adc
test
inc
pushf
dec
inc
lahf
shrl
lcall
sub
divb
mov
lret
xor
repnz
pop
pop
lret
fnsave
lret
inc
push
and
scas
in
adc
xor
or
xchg
sbb
cwtl
jmp
jo
loopne
in
inc
and
mov
or
push
pop
js
loopne
dec
outsb
mov
cmp
mov
mov
dec
movsl
or
out
pop
or
int3
mov
pushf
jge
mov
jnp
loop
movsb
js
adc
out
push
movsl
movsl
add
test
fs
stos
in
pop
mov
cltd
push
xor
test
fstps
sbb
push
negl
pop
cmp
jns
mov
add
popf
arpl
inc
xchg
cmpsb
sub
rclb
in
and
ds
mov
aad
test
int3
sahf
or
mov
fmul
jbe
mov
pop
outsl
dec
cmpsb
outsl
or
push
add
daa
lahf
and
dec
lret
mov
out
ljmp
push
inc
rolb
cmp
pop
pushf
mov
sar
sub
mov
clc
jae
subl
imul
out
vmovq
lea
in
dec
cmp
push
mov
mov
cmc
pusha
xchg
popf
adc
cmc
push
iret
sti
xchg
in
ljmp
or
ljmp
test
cmp
or
jo
push
loope
dec
movsl
or
movsl
cmpsb
ret
xchg
push
ljmp
or
cmc
xchg
ret
mov
cmp
inc
ja
or
hlt
pop
xchg
xor
lret
push
pop
or
out
mov
lock
mov
sub
ss
adc
into
lods
dec
mov
movsb
adc
mov
sub
sbb
pop
jge
lret
jb
xor
movsl
xor
pop
and
sbb
test
xor
ljmp
xor
ffreep
sbb
stc
int3
cmp
pop
xchg
test
push
out
adc
jl
or
pop
cmp
dec
mov
addr16
imul
add
sbb
ret
pop
loope
xlat
frstor
das
or
shll
fimuls
xchg
pop
inc
enter
dec
push
mov
in
cmp
mov
stos
sbb
mov
movsb
sbb
pop
out
sub
cmp
js
dec
sbb
adc
mov
popa
daa
add
jg
or
cmp
scas
and
push
js
adc
cld
int3
push
adc
out
add
jns
xor
xchg
ss
ss
daa
lock
insl
adc
insl
jp
mov
xor
fwait
xchg
xor
rcll
ja
sahf
sbb
mov
and
in
out
dec
cli
push
add
inc
call
popf
cmpb
jns
pop
outsl
ss
lret
inc
cmp
outsl
movsl
into
movsb
outsl
xchg
ret
subl
pop
mov
in
push
mov
movsl
inc
mov
inc
lret
xchg
mov
push
pop
mov
lcall
cmpsl
sbb
mov
mov
out
fnstenv
pop
sbb
lea
adc
sbb
mov
test
fdivrs
mov
mov
es
xor
shlb
das
xlat
mov
arpl
jne
hlt
push
jns
xor
push
decl
popa
sbb
sbb
mov
aam
mov
aaa
mov
test
pushl
or
jmp
pop
decb
mov
lret
outsb
and
pop
pop
jne
movsb
daa
jmp
pop
cmpl
add
inc
int
das
and
fldt
fxch
sub
popf
aaa
pop
sub
dec
lds
push
stos
test
lret
mov
mov
dec
pusha
inc
fsts
and
inc
outsb
push
cmc
enter
imulb
cmpsb
pop
xor
ret
adc
cmp
loop
and
test
je
out
mov
xor
mov
sub
in
movsb
or
xlat
inc
adc
shll
shrl
adc
and
imul
rcr
repz
scas
arpl
inc
stc
outsl
pop
xlat
xor
out
fdivrs
imul
xchg
call
pop
leave
stc
xchg
dec
sbb
mov
inc
test
sqrtps
adc
lea
bound
cmp
push
cmp
xor
push
jp
outsb
push
data16
cwtl
xor
sarl
jae
pop
test
int
aam
lret
mov
inc
fnstenv
mov
add
sub
inc
clc
aas
jns
cmp
sbb
push
fimuls
loop
out
imul
jae
xchg
adc
mov
stc
push
mov
xor
xchg
loope
js
adc
lods
inc
pop
in
jecxz
les
mov
loopne
sub
sbbb
sbb
inc
arpl
xlat
sub
push
fldenv
pop
sarl
mulb
jl
mov
stos
imul
sbb
xchg
arpl
cmp
dec
mov
and
addr16
push
je
negl
negl
ljmp
gs
sub
mov
pop
pop
jo
cli
lock
push
add
pop
stos
sub
pop
sbb
loopne
out
into
jns
push
in
bndstx
or
cmpsl
sub
aaa
int
xchg
or
dec
dec
xor
incl
gs
fisttpl
xor
stos
add
mov
dec
mov
sbb
push
and
aaa
in
fadds
jne
lret
out
jae
test
test
pop
lock
es
and
test
adc
jecxz
repz
in
test
sti
sub
shlb
add
lret
aam
repz
cmpsb
jl
pop
loope
xor
aaa
add
pop
fstpt
fcmovnu
test
lcall
jnp
or
data16
inc
decl
push
add
ss
add
sbb
jne
cmp
xchg
lods
sahf
fcoml
lods
xor
sbb
push
stos
pop
stos
cmpsb
and
cs
mov
imul
xor
sarl
call
loopne
incb
xor
push
mov
mov
pop
jb
pop
mov
dec
loop
movsb
loope
dec
stc
scas
rcrb
mov
out
sub
jl
xlat
lods
lock
wrmsr
ficompl
outsl
and
adc
lds
jecxz
pop
call
mov
lcall
pop
jno
icebp
ret
mov
loopne
lret
fnstenv
jns
mov
mov
lock
fsts
add
xor
sub
rorb
add
inc
mov
outsb
add
loop
jbe
fwait
negl
out
jp
mov
push
jnp,pt
loop
and
cli
outsb
cmp
xchg
xor
notl
clc
out
js
mov
and
or
push
and
fiadds
mov
adc
xchg
in
imul
push
adc
mov
out
and
pusha
pop
pop
push
and
pop
out
jae
cmp
mov
xor
cmc
les
push
ret
arpl
fists
inc
ret
arpl
mov
dec
mov
cmp
fnstsw
aas
scas
xor
pushf
or
sarb
add
jne
adc
pop
ret
fsubrl
cld
add
lahf
sbb
mov
inc
ds
lret
jne
cmp
add
jno
outsb
paddusb
and
in
inc
in
pop
daa
loopne
cmp
insl
ret
cltd
mov
pop
mov
mov
cmp
mov
add
arpl
inc
outsl
andl
or
push
jge
fsubrs
hlt
inc
push
cmp
cmp
mov
mov
fidivrs
in
rclb
add
daa
ds
mov
sub
out
faddl
or
pop
mov
scas
and
pop
inc
out
sub
cmc
jle
lcall
imul
out
fimull
js
lods
fs
inc
pushf
pop
test
inc
cltd
js
dec
scas
test
insb
addb
cmp
rcr
cmpsb
dec
scas
dec
mov
movl
int3
dec
ret
insl
testl
push
loope
jmp
jnp
jge
icebp
popa
inc
mov
cmp
enter
lahf
add
movsb
sbb
in
adcl
jnp
fadds
sbb
pop
cmpsl
outsl
fisttpl
dec
jle
or
test
adc
leave
mov
mov
dec
dec
andb
sbb
dec
mov
xlat
inc
lock
mov
mov
xorl
cmpl
lret
mov
fmulp
cld
out
xchg
call
mov
xchg
push
sub
mov
and
rorl
pop
sub
movsl
sub
and
test
ds
adc
push
shlb
pop
adc
jnp
mov
out
jle
mov
sub
mov
jae
loope
fs
pop
add
out
and
xchg
adc
stos
stos
mov
daa
imul
test
and
fisubrl
inc
cwtl
mov
outsb
fmuls
sbb
dec
in
mov
fisttpll
lea
out
dec
inc
cmp
aam
inc
fistpll
std
enter
pop
mov
out
sub
cltd
out
mov
pop
pop
fdivl
inc
cltd
cld
mov
fwait
loope
mov
loop
imul
or
xchg
cmp
aaa
test
cs
push
lea
scas
aas
sbb
inc
call
sarb
xchg
and
idivl
ja
or
int
insb
movsb
ret
cmp
in
mov
jne
fldcw
cs
sbb
push
jae
jg
xchg
shrb
or
rol
sub
outsb
jb
iret
pusha
xor
ret
outsb
inc
aaa
sbb
loopne
and
inc
sub
ja
icebp
mov
add
ficompl
clc
or
addr16
lock
out
mov
paddusw
in
js
and
or
inc
int
into
arpl
pop
jb
mov
xchg
xorl
mov
cmc
sub
cmc
push
outsb
push
sbb
or
aam
test
rcl
sbb
shrl
pop
icebp
or
cmp
repz
loope
test
dec
dec
cmp
addl
subl
jo
xchg
rorb
add
ja
jmp
dec
pop
xchg
xchg
lea
xor
xor
mov
setno
dec
or
loop
sarb
xlat
mov
jo
pushf
sahf
mov
inc
mov
mov
push
pop
and
lods
mov
clc
hlt
cwtl
jge
repnz
xor
push
xchg
shrl
outsl
pop
sub
lds
sti
repnz
sbb
les
sub
xorl
shrl
mov
iret
fists
loope
sar
push
inc
lods
das
leave
sti
loop
jmp
mov
mov
jo
dec
adc
movsl
and
sub
in
mov
mov
ljmp
inc
push
jnp
xchg
lea
or
test
out
or
adc
xor
popa
sbb
sub
loope
hlt
pop
je
outsb
test
pushf
out
faddl
cwtl
icebp
fmul
sarl
xor
mov
mov
rcll
rorb
cmpsb
jns
popa
mov
inc
push
sti
dec
inc
sti
xchg
push
sbb
mov
pop
arpl
loopne
mov
imul
out
roll
stos
lods
dec
pop
insl
out
dec
dec
pop
repz
jge
popa
sbb
outsl
inc
or
test
in
inc
and
mov
inc
test
pop
jno
ret
mov
pop
mov
fldt
ds
or
push
sti
jge
pop
std
pop
cmp
pop
cmp
iret
xchg
mull
lods
insb
aad
ret
adc
pushf
movsb
mov
ja
and
testl
rclb
nop
xor
fcoms
sub
movsb
popf
dec
sbb
cmpsb
addr16
xor
mov
sbb
test
xor
xlat
mov
cli
ds
js
insl
jb
lds
push
testl
cmpsl
dec
lds
cwtl
or
in
dec
pop
push
xor
aad
ja
push
pop
ds
push
and
mov
les
mov
in
and
lods
aas
repnz
subl
mov
mov
rcrl
sub
cmpsb
outsl
mov
cmp
frstor
mov
xchg
push
mov
dec
dec
clc
add
pop
add
dec
mov
mov
xlat
and
popa
sbb
pop
fucom
cmpsl
stc
fcomp
inc
sahf
je
mov
push
mov
jge
repz
mov
xchg
add
mov
fisubrs
shrl
xchg
and
inc
ret
xchg
insb
xchg
push
jb
jnp
call
or
mov
mov
ror
push
outsb
hlt
xchg
jmp
mov
stc
in
insb
jle
ret
and
pop
gs
int3
adcb
cmp
mov
popa
push
imul
fcompl
xchg
pop
aaa
pop
stos
push
jbe
and
adc
push
imull
add
rcrl
mov
cmp
rolb
add
push
pusha
in
int3
mov
mov
inc
lods
push
push
pop
dec
inc
fiaddl
fs
and
rol
sti
pop
cmpsl
push
mov
arpl
lahf
les
jbe
stc
daa
push
sub
ffree
adc
rcll
fcomip
insl
not
xchg
mov
pop
jge
mov
sbb
jmp
addb
pop
fadd
fimuls
data16
sbb
scas
fistpl
sub
jo
xor
push
pop
sub
adc
sub
jne
pushf
test
cli
scas
adcl
jg
pop
xchg
js
xor
fsubrl
in
push
sub
jbe
pop
insl
jmp
and
push
sub
push
fdivr
test
fdiv
mov
xchg
mov
ss
pop
push
dec
loopne
mov
push
mov
pop
mov
aam
add
jp
ja
out
outsb
adc
pop
leave
test
scas
fcom
or
lret
insb
aaa
fwait
addr16
lds
inc
cwtl
add
repnz
gs
or
sarb
outsl
int3
mov
loopne
inc
jl
mov
cmp
inc
push
and
cmc
nop
test
add
adc
dec
lods
fldenv
cli
xor
push
lods
loop
cmpsb
jge
lcall
sub
es
sbb
mov
les
xchg
out
dec
jmp
xchg
jl
mov
adc
outsl
mov
dec
loopne
cmp
mov
setae
jle
dec
mov
dec
jecxz
mov
cs
mov
add
popa
insl
inc
jno
or
jl
push
sysret
lcall
loopne
dec
adc
in
fidivrs
test
pusha
lods
cmc
insb
outsb
jl
xchg
sbb
lret
pop
pop
pop
sbb
icebp
cmp
and
sarb
mov
into
jo
sbb
push
pop
loopne
mov
mov
ror
push
or
xor
int3
push
lea
mov
sbb
or
or
and
jns
cwtl
rorl
xor
mov
test
addl
push
out
cltd
mov
cltd
lods
sbb
flds
and
sahf
rcll
lret
hlt
jmp
cmp
call
adcb
mov
mov
and
shlb
or
and
add
cmp
js
sahf
ja
rolb
xchg
ja
insb
push
cmp
cmp
mov
adc
pop
lea
add
imul
mov
push
sbb
inc
pop
mov
xor
cmpsl
icebp
push
jo
shr
inc
out
xor
mov
jae
dec
push
in
lea
lret
xchg
test
daa
test
xor
jge
cltd
inc
movsl
mov
jmp
sbb
jle
popa
dec
ficoms
jne
sub
jnp
xchg
sahf
sbb
mov
or
xor
dec
in
movsl
inc
ss
or
call
data16
int3
cmp
cwtl
test
or
pop
mov
ret
fmulp
lods
gs
jg
dec
out
mov
xchg
gs
lret
and
push
inc
xchg
push
jl
cwtl
add
xor
xor
sarl
test
lahf
das
jge
dec
sbb
mov
loope
data16
mov
mov
xor
ljmp
ljmp
jmp
jmp
xchg
nop
in
add
jbe
lock
out
out
test
push
push
sub
shll
push
adcl
scas
dec
cmp
out
cs
push
jo
repz
stos
rorl
ficoml
std
movsb
mov
push
cmpsb
pop
pop
gs
mov
add
in
imul
push
ficoml
push
or
dec
xor
or
cmp
insl
push
dec
dec
lret
lret
jge
stos
mov
mov
pop
xor
outsl
push
lahf
push
mov
adc
and
add
pusha
push
btr
pop
call
mov
scas
add
dec
mov
pop
adc
inc
loope
xor
into
sub
cmp
xchg
mul
mov
adc
mov
lds
stc
loop
popa
add
cmp
push
mov
jo
dec
add
dec
push
dec
pop
push
int3
xchg
dec
sahf
int3
xor
mov
xchg
arpl
std
cmp
or
sti
in
out
xlat
mov
lcall
mov
pop
add
add
xchg
cmpsl
dec
sub
sbb
inc
xchg
push
mov
add
inc
divb
and
out
sbb
adc
daa
inc
add
sbb
mov
js
in
pop
js
sbb
add
repnz
in
jne
test
sbb
das
push
pop
add
mov
and
inc
mov
stos
call
lret
push
mov
mov
xchg
sub
push
add
sub
sbb
imul
test
mov
out
fstpl
cmpsb
notl
mov
pop
mov
jns
inc
test
js
dec
or
mov
mov
adc
jmp
das
loopne
add
test
mov
add
je
dec
mov
fwait
pop
jmp
fs
bound
ret
cmpsb
in
mov
mov
stos
push
movsb
clc
ja
cmp
popf
pop
les
xor
out
es
pusha
daa
xor
sbb
into
pop
xchg
jle
incb
jl
aad
cmp
out
out
push
movsw
insb
jg
adc
adc
scas
lods
mov
jmp
in
cmpsb
inc
push
mov
subl
leave
adc
xchg
jns
hlt
xchg
xchg
out
mov
xchg
mov
mov
cli
shl
arpl
dec
inc
das
mov
or
push
pop
push
lret
dec
insl
iret
jns
lods
cmp
and
out
out
xchg
inc
jg
xchg
jg
cmp
mov
adc
add
cli
pop
mov
pop
mov
mov
cltd
inc
sti
test
add
xchg
inc
push
push
lret
adc
dec
mov
xor
repnz
push
jne
mov
xchg
xor
jne
fdivl
add
lret
dec
sub
inc
mov
popf
aam
xor
ss
std
rcll
fs
jecxz
mov
fcomps
ret
add
sar
sub
fidivs
aaa
popf
add
imul
dec
dec
push
fs
data16
flds
fs
loop
sub
mov
and
sbb
pop
dec
aaa
fsubrs
fidivl
les
loopne
mov
mov
roll
xchg
mov
cmpb
or
in
leave
sarl
add
outsb
pop
lock
dec
bound
outsb
fistpl
or
adc
ds
mov
dec
notb
loopne
scas
push
mov
add
inc
test
mov
negb
xor
mov
xchg
mul
not
push
cltd
test
push
sbb
inc
jnp
sbb
xchg
xor
sub
lret
loope
dec
and
cwtl
ficoms
adc
add
mov
xor
xor
cmpsl
mov
aaa
in
inc
adcl
push
pop
sbb
pop
in
xlat
cltd
fisttps
pushf
imul
add
sbb
in
call
dec
stos
movsl
lock
fsubrl
xchg
les
mov
ja
adc
push
jbe
add
or
dec
jecxz
clc
cmp
lods
scas
inc
mov
sub
mov
xchg
add
movsb
repz
cmp
sub
out
push
insb
shlb
sbb
inc
lahf
mulb
mov
popf
lahf
cmc
imul
xchg
sbb
in
inc
inc
addb
push
add
ud1
lret
xchg
push
mov
xchg
jg
cmp
push
aaa
fldenv
dec
jp
ror
adcb
and
mov
je
aad
pop
add
iret
popa
aaa
xchg
popw
sub
jle
adc
mov
xchg
xchg
mov
mov
into
xchg
mov
lds
mov
sbb
push
mov
mov
roll
and
jo
gs
pop
add
imul
or
aad
and
push
into
aas
sub
sub
outsb
inc
sahf
lods
gs
and
js
inc
int3
aas
jo
or
adc
fistps
out
aad
xor
ret
inc
hlt
into
fisttpll
dec
mov
sbb
xor
out
mov
loopne
and
add
mov
in
cli
and
call
push
loopne
mov
out
adc
xor
cmp
cltd
mov
push
out
shrb
das
fnsave
xlat
dec
jecxz
ljmp
dec
pushf
or
mov
xchg
int
jle
pop
inc
sbb
add
or
adc
xchg
repnz
inc
fnstenv
inc
sbb
adc
in
mulb
and
call
inc
sbb
add
adc
test
mov
fwait
mov
add
jae
enter
test
or
inc
out
leave
daa
std
push
ss
arpl
and
popf
stos
subl
sahf
xchg
in
push
mov
testb
xor
jb
out
sbb
xor
rol
addl
pop
rcrl
jno
loope
dec
bound
or
out
dec
pop
test
pushf
inc
fcmovnbe
add
lret
fists
xchg
sbbb
dec
mov
ljmp
push
cld
cmpl
adc
stos
push
mov
adc
aad
push
test
mov
push
xlat
sbb
jmp
xchg
push
lret
ds
add
xlat
bound
std
inc
pop
xchg
out
out
repz
push
push
fldenv
lods
js
inc
in
add
pop
mov
jb
sahf
pop
movsl
mov
jns
jbe
stos
sbb
push
shll
out
lret
xor
xlat
pop
mov
je
aas
inc
push
cmpsl
mov
insl
pop
dec
movsl
mov
ss
leave
and
popa
add
xchg
mov
sbb
inc
or
xchg
inc
mov
cmpsl
jae
test
cmp
hlt
and
jo
mov
mov
aaa
test
lea
or
idivb
mov
pusha
fwait
jno
push
inc
cmp
xchg
lahf
hlt
push
out
lret
sub
inc
aam
fisubl
mov
or
dec
and
stos
aaa
jb
test
mull
cld
xor
popl
add
movsb
mov
mov
push
mov
pop
jae
add
mov
add
jle
testb
sahf
clc
sbb
adcl
sahf
jne
lods
jae
scas
rcrb
add
arpl
add
pop
lds
cltd
push
xchg
inc
jbe
cmc
lcall
cmp
sub
icebp
mov
or
adc
daa
cmp
leave
stos
push
pop
push
sub
and
push
fldl
das
adc
jl
lods
pop
movsb
hlt
push
dec
loop
andb
pop
int3
and
ljmp
movsl
pop
enter
xchg
faddl
shrb
je
ret
std
insb
inc
ret
mov
test
sbb
test
add
mov
jo
int
jns
dec
mov
lods
dec
pusha
xor
inc
out
dec
hlt
sbb
dec
adc
fcompl
popf
and
dec
pop
sub
insb
in
sub
sub
mov
in
jge
in
cld
sub
adc
and
mov
mov
sub
adc
jno
pop
mov
mov
out
sub
sbbb
pop
mov
jno
out
into
or
das
cmc
or
pop
adc
or
subl
cli
lret
rclb
sbb
shrl
mov
leave
imul
cmp
or
popa
pop
adc
or
jbe
adc
sbb
xchg
stos
outsl
push
scas
pop
jmp
sbb
call
fimull
dec
adc
xchg
out
add
sub
mov
jnp
icebp
out
cmpsl
jle
pop
test
jae
inc
sub
mov
xchg
jge
test
shll
loope
cmpsl
insb
les
fcompl
mov
daa
push
push
leave
js
cmpsl
adc
xor
xchg
icebp
std
testb
and
or
adc
jge
shrb
dec
in
movsb
arpl
sbb
pop
pop
movsl
outsl
lds
imul
lret
xor
rcll
mov
mov
negb
push
dec
mov
test
push
or
int3
push
cmp
sub
fdivrl
dec
das
data16
jbe
dec
mov
pop
or
dec
fdivl
sub
adc
jecxz
xchg
add
clc
sbb
sbb
adc
sbb
xchg
roll
int
fsubrl
push
out
adc
pop
and
repz
cmc
add
mov
mov
int3
push
shrl
mov
test
in
sub
xchg
xor
push
and
xor
push
jecxz
inc
test
push
pop
out
cmp
lret
loope
lahf
adc
add
dec
cltd
imul
jl
mov
jle
ja
jg
xor
xchg
xchg
popf
aas
adc
mov
pop
and
outsb
xchg
cmpsb
cmp
mov
bnd
sti
sub
sub
jmp
call
mov
and
sbb
jp
jl
xchg
flds
xor
cmp
mov
mov
scas
mov
jmp
mov
loop
cwtl
mov
jno
arpl
pop
jo
aam
push
xor
and
jae
sbb
pusha
mov
in
or
call
enter
push
jmp
dec
into
idivl
xor
daa
mov
add
push
dec
xor
cs
mov
stos
cmpsb
aad
xor
pop
xchg
js
push
cmpsl
push
adc
outsb
sbb
dec
xor
push
lds
fxch
cs
repz
pop
inc
pop
cmpsb
shlb
cmpsb
cli
stc
mov
pop
aad
xorb
cmpsl
js
shlb
cmc
lahf
xchg
adc
aaa
inc
rorb
cmp
mov
out
xchg
push
testb
out
aas
xchg
pop
jle
xor
push
movsb
pop
sub
les
xchg
xchg
mov
sbb
subb
pop
fpatan
shlb
push
iret
adc
mov
pop
cmp
cmp
test
pushf
incb
jbe
mov
or
mov
mov
cmp
mov
xor
lret
mov
lods
push
sub
in
sahf
call
mov
and
push
inc
lods
bound
xor
push
xchg
mov
mov
aam
rorl
jns
lock
inc
int3
lret
in
das
int
pop
nop
cmp
mov
hlt
cmp
dec
inc
sahf
adc
xchg
scas
cwtl
pop
test
mov
push
mov
test
xchg
jmp
mov
dec
mov
xorl
dec
shll
call
push
and
push
or
mov
mov
push
mov
mov
in
pop
rcll
pop
call
sub
sub
or
xor
pop
bound
fsubrl
xor
clc
jns
adc
mov
nop
inc
cmc
pop
stos
mov
inc
xor
xor
cmp
fnstenv
cwtl
jne
jns
rorl
add
shl
push
into
sbb
push
mov
call
stc
inc
inc
imul
mov
pop
or
loope
out
sub
insl
or
outsb
cmpsb
xchg
push
push
imul
xchg
iret
roll
int
scas
mov
aam
and
dec
sub
push
xchg
sub
lds
pop
or
jl
and
cmpsb
enter
aad
sub
dec
push
iret
pop
sar
mov
outsb
or
jp
mov
pop
js
or
rolb
ljmp
xchg
rcrb
pop
popa
imul
aad
xor
jb
cmpsb
mov
xor
mov
add
std
filds
push
scas
insb
decl
shrl
or
sub
aam
xor
sub
rorl
rcrb
cmp
push
rclb
inc
sub
leave
nop
or
adc
cwtl
psrld
xchg
repz
subb
xchg
cmpb
ds
je
xchg
or
pop
jae
or
hlt
push
jmp
mov
mov
rcr
pop
sub
pop
xor
dec
data16
sbb
jle
pop
xchg
mov
jns
inc
int3
lods
sbb
out
push
jbe
adc
xchg
cwtl
fld
mov
adc
or
jmp
cmp
ror
mov
into
or
in
add
std
das
pushf
sbb
bound
insb
cmp
lcall
test
fwait
lcall
movb
lret
inc
cmpsb
mov
sbb
rolb
insb
into
cmp
sti
push
mov
icebp
test
push
or
or
dec
mov
in
jge
scas
mov
push
jecxz
test
jnp
cmp
and
pop
jg
dec
outsl
pop
in
mov
ds
xchg
lock
lods
das
jbe
cvtpi2ps
popa
push
sub
bound
insb
in
inc
push
jnp
mov
and
or
add
pop
lock
cmp
es
cmp
sub
cs
cmp
andl
dec
jns
push
out
mov
popa
fs
adc
push
outsl
adc
jae
in
test
mov
sbb
dec
cli
dec
pop
mov
mov
loop
adc
cmpl
or
pop
push
xchg
sub
scas
xchg
aam
inc
popf
jmp
insl
call
out
add
lock
sub
lds
hlt
aas
mov
inc
inc
lods
inc
push
mov
mov
jbe
addr16
cmp
push
stc
xchg
ret
or
xchg
mov
iret
daa
dec
loop
jecxz
icebp
pushf
repz
out
test
subb
insl
fnsave
mov
xchg
lret
jmp
int3
add
xor
mov
xor
lret
adc
mov
cmp
mov
push
sub
mov
lods
test
adc
cmpsb
es
imul
cmp
jg
test
sbb
adc
jmp
lahf
clc
mov
pushf
int3
shl
inc
jne
xchg
mov
mov
or
mov
mov
stc
fbld
pop
adc
dec
stos
sbb
popa
push
in
sub
sbb
mov
push
mov
js
jmp
dec
inc
sbb
mov
mov
mul
fcom
mov
or
push
fs
xchg
mov
rorb
mov
lcall
mov
loope
and
mov
add
mov
cs
movl
sbb
dec
insl
dec
ljmp
call
inc
push
lahf
dec
out
xor
xchg
fstps
pop
mov
outsl
push
sbb
mov
dec
jecxz
std
sbb
cmp
sbb
popf
sub
mov
js
pop
add
stos
sahf
cld
cld
adc
mov
xor
xchg
jae
inc
or
clc
repnz
enterw
jae
sub
pop
sub
xor
shlb
xchg
jno
sub
sbb
aam
andb
sub
rcrb
testl
cbtw
inc
add
cmp
push
dec
add
sub
mov
fstpt
out
lret
shll
add
loopne
fildll
mov
cmp
fistpl
dec
sbb
cmpsb
pop
pop
push
hlt
leave
stos
add
sub
jns
stos
cmp
jg
in
pop
bnd
or
lock
xchg
fstpt
mov
int
shl
jnp
cld
jp
or
jno
mov
push
or
imul
jge
enter
and
dec
insl
in
pushf
add
insl
aam
adc
aaa
repz
pop
pop
mov
pop
out
lock
lret
xor
aas
push
push
pusha
push
xor
push
fwait
jno
sub
aad
and
mov
xchg
loop
or
loop
fstpt
mov
aaa
leave
sbb
ret
cmc
mov
adc
xchg
inc
out
inc
loopne
repz
push
dec
adc
sbb
push
pushl
orb
aas
ret
inc
dec
mov
mov
jno
push
sub
inc
out
xchg
nop
mov
ss
jg
rolb
add
jg
mov
test
divl
ret
test
and
jge
xor
aaa
push
add
in
push
jg
sub
xchg
insl
rcll
cltd
hlt
lea
mov
aad
push
inc
xor
out
and
movsl
clc
lea
and
sarb
pushfw
in
push
rcrl
and
jne
mov
aaa
lds
jl
lods
sarl
xchg
push
add
mov
adc
cmp
lahf
jecxz
pop
mov
jo
xchg
imul
enter
dec
mov
push
out
mov
adc
repz
lea
xchg
repnz
das
lret
push
push
and
push
jns
mov
ret
pop
jns
jecxz
jl
insb
cld
cmpl
xchg
push
push
es
mov
decl
push
popf
xchg
in
test
xchg
imul
mov
mov
fnstcw
inc
jecxz
add
andb
and
fstpl
jle
xchg
addr16
ret
inc
inc
mov
push
movsl
lret
adc
add
xor
stos
test
inc
xchg
fdivrl
xchg
xor
loope
push
div
add
xchg
icebp
push
idivl
xor
addr16
sub
mov
and
scas
cld
push
hlt
xchg
arpl
mov
jne
inc
addr16
xor
push
mov
or
lahf
sub
shll
mov
decb
xchg
lods
dec
adcl
out
andl
dec
xchg
ret
repz
and
sbb
int
adc
clc
dec
cld
mov
imulb
jne
dec
jmp
in
push
test
mov
push
cli
inc
mov
aad
test
dec
andb
arpl
add
pop
in
jge
add
ss
jp
test
sub
xchg
cmpsl
idiv
xchg
lret
icebp
add
stos
inc
or
lcall
dec
inc
xchg
sub
jae
mov
je
movsb
cmpl
shlb
mov
and
leave
movsb
mov
ja
adc
mov
mov
jecxz
call
sub
or
cmpsb
hlt
mov
sbb
mov
cs
dec
lret
icebp
dec
lds
jne
paddq
test
outsb
jmp
adc
dec
aaa
movsl
les
cwtl
and
dec
out
out
jp
xchg
sarb
ret
mov
fmuls
repnz
int
sub
popa
sti
cwtl
cmp
fcoml
ret
aas
inc
fxch
daa
shll
lret
jecxz
jmp
test
mov
pop
insl
inc
rcl
loope
pop
aas
test
sbb
out
jns
dec
pushf
std
xchg
ds
shl
jl
jne
xor
push
inc
rolb
xchg
sub
push
test
out
jb
sti
mov
out
enter
xchg
pusha
lods
dec
lods
pcmpgtw
cli
add
add
pop
push
mov
push
push
cli
movsl
ds
lret
mov
sub
ficomps
jle
out
lods
clc
lret
sbb
movsl
and
pushf
xor
imul
cmc
cmp
xchg
or
xchg
sub
out
aas
lods
mov
and
jmp
dec
ficoml
shll
frstor
into
inc
mov
jns
push
dec
leave
sub
cmc
or
mov
scas
stc
pop
mov
add
cs
mov
dec
xlat
fildl
les
adc
ljmp
mulb
sbb
pop
push
mov
dec
cwtl
push
insl
popf
xor
jge
and
pop
shl
sbb
cmpsl
aas
sbb
xchg
push
jae
test
repz
mov
or
sahf
cmpsl
jae
test
mov
sarl
lods
enter
iret
insb
add
push
ljmp
or
sub
repz
add
das
add
sub
ret
loopne
mov
inc
mov
out
sbb
sbb
lcall
jb
push
out
cwtl
cmp
stc
call
test
sub
push
ror
mov
pop
ret
cmpb
insl
xchg
push
ja
cmp
and
jo
mov
rclb
aas
and
ret
inc
aaa
mov
push
xlat
xchg
cmc
sbb
and
inc
mov
fistps
mov
jg
and
jecxz
sbb
cmp
add
shrb
dec
or
shll
sahf
ljmp
lret
ret
xchg
outsb
lods
or
cmp
xor
xor
mov
out
mov
jne
push
dec
stos
addr16
pop
lret
test
add
push
xor
adc
and
imul
jl
sub
pop
lret
les
aaa
pop
in
aas
and
and
das
jecxz
das
ljmp
or
imul
lret
inc
stos
stos
loop
scas
mov
push
cli
andb
movsb
cmpsb
loopne
pusha
int3
sahf
sub
sbb
lods
not
adc
or
pop
jns
popa
jg
popl
cmpxchg
jge
lcall
nop
cmp
in
sub
in
daa
jbe
dec
mov
jmp
jg
sti
test
call
dec
add
inc
lock
test
xchg
rolb
jle
in
xchg
or
cld
pop
mov
sub
test
and
cs
sub
mov
stos
mov
push
inc
jl
sub
mov
mov
insb
xchg
cs
lock
int
dec
sbb
xchg
test
or
fs
shlb
jbe
nop
lahf
cmp
je
idivl
mov
xchg
fcmovnu
mov
inc
into
outsl
mov
test
adc
push
fisubrs
notb
clc
sbb
jne
push
cli
pop
cmc
pop
aaa
adc
outsb
pop
mov
push
mov
addr16
popa
mov
out
mov
lods
push
sub
je
sti
and
xor
mov
mov
scas
dec
jo
mov
xor
jmp
push
in
insl
and
mov
and
push
and
out
int
incb
pop
mov
and
pop
orb
push
xorb
sub
xchg
jns
in
insb
inc
scas
jae
cmpl
ret
ja
mov
in
shlb
add
faddp
mov
scas
jecxz
push
push
int3
js
sbb
lock
push
push
adc
in
aas
imul
outsl
push
ret
xchg
or
les
outsl
mov
jle
call
pop
fxtract
dec
lret
pop
mov
cmc
dec
xor
mov
jo
sub
sarb
mov
call
cmp
pop
jg
mov
add
mov
addb
fisubrs
ret
cltd
push
in
jbe
mov
outsb
into
idiv
test
or
mov
adc
outsb
push
cli
cmc
push
loopne
xor
add
rcpps
orb
addr16
adc
or
int3
cli
sbb
cmpsb
inc
imul
rcrl
sbb
pop
fdivrp
lret
loopne
pop
ss
sub
mov
add
or
test
sub
pop
mov
jmp
xchg
out
inc
push
sahf
pushf
mov
dec
lods
add
lods
add
mov
and
imul
mov
loope
xor
push
inc
jo
cmp
push
jbe
xor
shlb
push
jmp
loope
pop
push
aad
fdivs
fidivs
sub
push
aad
subb
jmp
push
insl
bound
adc
mov
sbb
insl
addr16
dec
push
das
sub
icebp
aad
nop
insb
cmc
iret
pushf
inc
stos
ljmp
cltd
jns
add
cmp
sub
jbe
dec
sub
adc
jns
js
repz
jp
jo
xor
out
mov
stos
and
scas
lock
sbb
sahf
fnstenv
lcall
sbbl
pop
mov
pop
pop
jo
push
test
jg
jbe
adc
mov
mov
fdivrp
and
pop
out
mov
test
pop
cmp
and
dec
inc
mov
aas
repz
push
cs
call
bound
adc
cwtl
lock
push
sar
rclb
insb
outsb
sbb
sahf
mov
enter
mov
daa
pop
jne,pt
cmp
and
mov
xor
sbb
mov
xchg
lods
iret
mov
push
pop
setnp
mov
push
loopne
pusha
fwait
out
ja
in
push
sbb
dec
call
cmpsl
test
pop
faddl
test
push
mov
xchg
ja
lods
fptan
inc
push
cmp
pop
cmc
lds
cvtpi2ps
inc
add
gs
cmc
ret
xor
lret
ljmp
es
dec
into
push
fimuls
ret
aad
lds
push
movsb
mov
stos
into
or
inc
fs
inc
sub
jns
inc
xchg
sbb
mov
daa
or
lret
mov
test
sub
fldt
pop
imull
fs
negl
hlt
cwtl
pushf
out
jo
cld
add
inc
dec
inc
or
or
dec
cmp
jle
aad
sahf
inc
mov
in
lret
adc
fs
and
mov
pushf
adc
popf
xor
pop
push
add
stc
sti
jb
and
mov
loopne
ljmp
sbb
dec
popf
mov
jo
mov
add
push
cmp
sbb
and
ss
add
ljmp
cmc
clc
push
or
adc
and
xor
jb
adc
daa
iret
and
leave
out
sub
cmpsl
addr16
and
mov
lods
in
push
fldl
mov
mov
pop
jg
cmp
icebp
xchg
and
xor
aad
in
fldl
push
std
xchg
cwtl
lret
cwtl
pop
pop
into
and
cmpsb
out
ret
mov
push
jbe
adc
into
das
outsb
lds
pushw
sub
sub
outsl
inc
mov
stc
xor
es
mov
push
sahf
and
push
cmp
sbb
mov
mov
es
lret
sbb
into
in
mov
lock
cmp
or
stc
jne
cmpsb
ja
stos
lret
test
xchg
in
jae
xlat
sub
push
test
roll
inc
add
lret
mov
sarl
pop
add
jecxz
insl
jp,pn
cmc
dec
cmp
testb
ret
mov
mov
jae
shlb
add
cmc
in
push
std
out
xor
fwait
inc
fmulp
adc
push
clc
je
cli
and
in
or
mov
jmp
xchg
add
sahf
addr16
enter
dec
xchg
shlb
cmc
fwait
aam
add
cld
in
mov
pop
xlat
cmp
mov
add
cmp
push
jle
movb
loop
sub
in
mov
out
or
incb
dec
stc
repz
mov
inc
jno
mov
movsb
aaa
shrb
inc
pop
stc
push
xor
cmp
ljmp
mov
fisttpl
add
cmove
pop
push
cwtl
lods
jo
cmp
mov
sbb
mov
shll
fdivl
xor
sbb
mov
push
inc
lcall
jnp
hlt
and
icebp
dec
jo
shrb
mov
mov
jg
dec
jno
int3
dec
mov
dec
aad
or
and
pop
stos
cvtpi2ps
xor
mov
call
add
int3
daa
xchg
scas
pop
mov
mov
vxorpd
lock
adc
and
lock
sbb
jle
fadds
mov
jmp
iret
jle
cmp
jmp
popf
mov
scas
shlb
cwtl
sbb
inc
idiv
das
sub
fs
jae
adc
pop
and
stos
pop
sarb
jbe
stos
mov
out
roll
leave
inc
mov
lds
inc
stc
arpl
aas
cld
and
cmpsl
sti
and
icebp
mov
and
movsb
cmpsl
cmc
lods
and
mov
xor
comiss
dec
movsb
dec
push
lret
lea
inc
jg
int
rorl
aas
ds
pop
push
jg
dec
outsb
pop
mov
xchg
mov
push
repz
out
out
clc
addr16
dec
jg
shlb
sub
xchg
mov
and
daa
mov
sub
aam
pop
mov
mov
fs
push
xchg
dec
push
push
jl
push
mov
inc
arpl
mov
pop
je
pop
stos
pop
cmp
xor
nop
push
dec
adc
or
les
sub
iret
rcrl
cli
dec
stos
mov
mov
adc
idivb
aaa
mov
popf
mov
lahf
sbb
ret
js
hlt
imul
add
into
cmp
dec
jp
mov
cs
jle
push
call
iret
out
pop
push
mov
push
pop
in
xchg
jnp
push
sti
and
mov
push
leave
pop
mov
in
adc
cmp
jb
iret
out
mov
jns
xchg
inc
jne
dec
adc
push
jnp
loopne
in
mov
pslld
out
lahf
movsb
and
lahf
xchg
push
dec
pop
hlt
gs
mov
sbb
sahf
jae
in
loop
aas
sub
cmp
xor
jmp
pop
loope
pop
ds
test
cmp
xchg
lcall
jl
leave
mov
icebp
daa
jmp
aam
jmp
int
sahf
orb
or
inc
push
pop
xchg
adc
cli
out
inc
xor
sbb
fisubrs
cmc
ja
popf
iret
dec
jb
jb
pop
ret
pushf
xlat
sub
lds
xor
sub
mov
pop
ficoms
xchg
loop
dec
fisubrl
push
and
xchg
sub
jbe
cltd
push
loop
cmp
and
test
sbb
pop
scas
popf
cli
push
xchg
pop
lods
loope
in
xor
loope
add
mov
push
sarb
dec
in
pusha
insl
out
lcall
xchg
jg
sahf
jbe
data16
cmp
ret
inc
mov
stc
fidivrl
movsb
xchg
pop
xchg
mov
xchg
pushf
arpl
inc
inc
jb
stos
cmp
dec
push
pop
dec
or
mov
ret
test
test
inc
adc
dec
test
adc
stc
aas
sbbl
lods
jl
lcall
jecxz
fildll
mov
adc
push
mov
in
hlt
leave
sbb
add
loope,pn
rcrb
ret
bound
push
pop
cmp
pop
mov
mov
jmp
pop
into
ds
test
add
push
cmpsb
std
sbb
fdivrp
or
jns
xor
jg
lret
int
sub
mov
das
jno
mov
int
add
fsqrt
mov
push
fcomp
addr16
push
push
call
cmp
sbb
inc
adc
mov
xchg
add
sub
and
and
dec
mov
gs
addr16
or
push
in
adc
mov
scas
mov
push
mov
cmp
cmpb
sub
clc
or
rcll
outsb
int
adc
ds
test
xor
inc
push
aam
mov
jae
cmp
mov
mov
into
test
aad
pop
lock
inc
adc
loopne
sub
adc
jno
inc
stos
nop
lods
push
cld
sahf
pop
push
xlat
and
push
out
loope
xchg
rorl
data16
pop
push
inc
mov
das
stc
icebp
push
and
stos
dec
cmp
mov
mov
inc
stc
push
push
aad
push
push
and
sti
pop
adc
pop
insl
loop
cmpsb
sub
ljmp
ret
adc
fdivrl
insb
clc
icebp
add
scas
pop
pop
popa
or
lea
daa
es
sub
popf
mov
cmpsb
lret
or
fcmovb
jle
sbb
inc
scas
mov
cmpsb
shl
pop
inc
mov
mov
enter
mov
iret
stc
popf
adc
loope
xorl
inc
mov
xor
sub
and
test
push
sbb
xchg
roll
mov
bound
push
jmp
vmovhps
push
mov
fwait
xor
push
push
inc
cmp
mov
mov
and
je
enter
into
or
imul
pop
subl
fildl
mov
mov
xor
notb
das
push
add
cmc
sbb
stos
cld
push
lods
inc
loope
jmp
lret
aaa
xchg
cmp
pushw
pop
mov
xchg
out
push
insl
xor
mov
push
mov
out
push
cmpsw
mov
push
shrb
xlat
and
test
add
or
pop
push
jecxz
bound
bound
js
gs
inc
insb
xchg
dec
dec
mov
sti
enter
rcrl
clc
jle
sub
faddp
inc
ret
ret
mov
push
gs
xchg
or
out
mov
pop
shll
ljmp
cmp
cld
bound
adc
imul
mov
popf
cmp
lret
push
movsl
sub
mov
push
mov
xchg
adc
fsubr
cs
mov
push
mov
adcb
fistps
sbb
cmpsl
inc
sub
jo
push
cmp
push
sub
aas
mov
mov
loope
outsl
xor
cmc
mov
cmc
push
ja
and
inc
sarb
jb
insb
mov
inc
addl
xchg
repz
mov
std
jns
leave
in
sbb
neg
adc
adc
sbb
mov
je
and
or
stos
jge
pusha
in
test
call
int
les
jg
enter
xchg
or
sbb
rorb
fs
sbb
or
popf
mov
mov
pop
cmp
inc
xor
insb
xlat
fadd
loop
fwait
inc
cltd
add
push
out
mov
pop
test
sbb
sbb
daa
mov
pop
xchg
dec
jae
mov
dec
pop
call
inc
adc
push
movsb
fwait
adc
add
shlb
adcl
stc
add
std
mov
and
jg
xor
ljmp
adc
out
jle,pt
icebp
aas
cmpsl
scas
mov
mov
int3
loopne
fldenv
adc
insb
mov
add
pop
cmp
inc
lret
negb
dec
jnp
adc
jno
arpl
mov
push
jp
fwait
mov
cwtl
test
push
cltd
out
cltd
inc
insl
pop
mov
inc
out
xlat
xchg
fs
and
sub
mov
inc
rcrl
pop
sub
int
outsl
out
mov
push
cmp
xchg
sub
jne
stos
notl
mov
mov
pop
test
add
ss
pusha
addr16
in
mov
mov
cmc
divl
or
jge
push
out
fdivs
xchg
jb
inc
xor
or
cmpsb
pop
ret
adc
sub
add
push
fcomi
dec
pop
out
lods
push
cmpsb
fs
insb
lret
add
mov
mov
push
add
xor
push
fs
pop
test
cld
loope
int
pop
and
cmp
inc
fiaddl
xor
lds
mov
adc
mov
ret
cwtl
cmp
mov
scas
lea
mov
inc
add
mov
cmpsb
repz
or
cmp
addb
sti
xchg
mov
dec
in
out
out
push
mov
mov
jbe
out
addr16
decl
push
push
add
pop
clc
and
mov
int3
pop
inc
sbb
icebp
imul
imul
lcall
aas
push
inc
faddp
sarl
mov
or
push
and
shll
lock
dec
sub
jl
lock
mov
adc
add
stc
sahf
testl
push
or
out
shlb
sahf
mov
aas
fcomps
mov
int
ds
call
xchg
lea
mov
sbb
inc
shlb
xor
lret
push
ldmxcsr
and
mov
mov
sub
pop
sbb
das
add
jge
iret
add
loope
jl
xlat
cmp
jl
fs
mov
fisttpll
cmpsl
scas
pop
inc
pop
lods
mov
rcll
lret
pop
lods
rcl
push
mov
adc
inc
iret
imul
lds
sbb
clc
dec
dec
xchg
sub
je
cmpsl
jp
lret
inc
xchg
mov
pop
out
fucomi
orb
pop
jno
jg
push
pop
mov
xchg
push
and
into
mov
inc
pop
sub
out
loopne
cmpsb
or
jo
pop
pop
mov
mov
fistpl
or
inc
or
jno
mov
dec
fnstenv
shll
jno
jp
inc
jb
or
cli
jmp
fldt
repnz
sub
mov
jmp
fs
xchg
stos
popf
psubd
cltd
test
mov
or
push
dec
push
cltd
adc
insb
fmuls
icebp
mov
or
mov
sar
add
cmp
dec
adc
inc
sbb
fistpl
add
mov
ja
scas
iret
mov
mov
aad
cmp
or
ret
cltd
aaa
repnz
out
pop
dec
cmpsl
addr16
lods
pushf
insl
imul
das
dec
adc
cmove
ljmp
inc
fbstp
adc
push
sub
mov
pop
sbbl
loop
cmp
ss
xchg
rcr
lods
adc
aaa
leave
pop
fwait
repz
mov
lahf
sbb
pop
je
inc
test
hlt
inc
out
ds
arpl
push
ljmp
je
pop
or
mov
dec
xchg
xchg
push
pusha
enter
mov
adc
jl
push
es
inc
icebp
repz
aas
and
adc
mov
rcrl
imul
jp
xor
or
ja
loop
xor
lahf
and
ljmp
adc
test
push
add
and
cmpsb
divb
push
loop
out
cmpsb
decb
into
push
xchg
stos
sbb
int3
into
stc
pushl
movsb
cmp
pop
gs
push
outsb
adc
pop
pusha
lods
push
lret
loopne
xchg
sbb
mov
mov
xor
mov
jle
inc
jnp
adc
add
push
jo
cmp
cltd
push
cmp
mov
dec
jle
andb
xor
cmp
pop
fstpl
repnz
or
mov
mov
push
out
loopne
scas
orb
sti
cmc
inc
in
add
or
mov
adc
lock
push
jno
sbb
push
push
xchg
pushf
or
call
mov
mov
dec
dec
cmc
test
inc
sbb
shr
adc
movsl
pop
out
dec
xlat
inc
xchg
loop
mov
imul
xchg
cmpsb
test
repnz
pop
xchg
inc
das
in
lahf
gs
bound
cwtl
mov
pop
lea
fidivl
int
iret
clc
imul
adc
cmp
push
jp
in
push
mov
dec
inc
jo
out
in
shlb
and
push
adc
push
ja
cld
shl
dec
fcoms
pop
jnp
inc
add
or
pushf
mov
test
pop
repnz
gs
fwait
xchg
adc
xor
push
enter
lods
and
inc
and
xor
mov
scas
scas
or
add
nop
cli
push
das
testb
es
movsl
ss
mov
test
xlat
cwtl
pop
or
inc
inc
or
divl
inc
pushf
imul
push
std
int
in
popf
ds
outsl
repz
mov
dec
adc
mov
add
xchg
and
shl
outsb
push
div
out
inc
dec
ror
stc
sub
mov
shll
jbe
sti
xor
and
jns
push
or
push
inc
ret
test
dec
ret
inc
push
dec
rcrl
and
sbbl
adc
pusha
adc
xor
dec
arpl
mov
xchg
mov
pusha
scas
call
xor
jb
cli
cmpsl
lods
jp
mov
sbb
jp
mov
rolb
in
adcl
lock
aad
push
stos
ja
faddl
hlt
cld
rolb
lds
test
push
xor
fldpi
cmp
xchg
je
daa
data16
stc
mov
adc
dec
jg
test
aad
cmpsb
cmp
add
pop
adc
sahf
movsl
test
pop
sub
in
pusha
into
add
ljmp
and
repz
lret
call
pop
sub
pusha
stc
dec
in
sub
repz
loope
mov
pop
clc
mov
xchg
jbe
mov
inc
push
push
mov
in
ja
arpl
mov
sub
xchg
stos
outsl
mov
and
inc
xchg
mov
mov
cs
sbb
out
cwtl
inc
mov
nop
stos
lea
jne
inc
test
jnp
jp
repz
cs
lahf
adc
jp
sbb
call
add
push
pop
int
xor
dec
lds
mov
or
cmp
sub
mov
pushf
int
sub
jbe
rclb
pop
mov
xor
or
adc
outsl
inc
inc
cld
xor
in
mov
add
ret
mov
mulb
iret
sbb
insl
or
popa
sub
hlt
mov
mov
pop
or
outsl
pop
pop
inc
inc
xor
xorl
aaa
mov
adc
pop
cmc
aas
data16
call
aad
xchg
lods
lea
jl
push
xchg
out
push
loop
cld
gs
int
call
sub
int3
test
push
cltd
je
adc
add
mov
sub
scas
scas
pusha
mov
pop
mov
fcomip
scas
inc
xor
push
aas
pop
push
clc
dec
dec
add
mov
inc
js
mov
xchg
ss
lds
push
or
pop
rcll
sar
cmp
lret
jo
dec
jnp
mov
loop
in
js
lret
sbb
xchg
ret
rorl
es
mov
mov
outsl
and
sbb
test
ljmp
popa
outsl
mov
jg
lods
fistpl
test
adc
aaa
fidivl
cmp
cmp
inc
xchg
adcb
test
jnp
inc
or
stos
outsb
and
lock
in
out
mov
jno
ret
sahf
cmp
ja
popa
sub
sbb
popa
and
xchg
inc
or
bound
stc
inc
leave
inc
sbb
xchg
arpl
or
out
or
dec
mov
jmp
arpl
sub
notb
fisubs
mov
mov
xchg
mov
add
loop
in
int3
inc
into
daa
pop
xchg
jns
mov
jmp
fsubr
daa
or
and
aas
inc
jns
sub
mov
notb
dec
add
xchg
dec
subl
dec
push
dec
jp
test
xor
adc
sbb
adc
jl
test
in
mov
das
test
mov
and
or
mov
mov
fwait
call
or
xchg
into
and
movsl
cld
out
pusha
sbb
ljmp
cmp
sub
out
push
xchg
xor
lods
out
pop
inc
sub
aas
push
mov
push
xchg
push
sub
add
stos
adc
lock
pop
mov
rcrb
repnz
push
inc
mov
lea
call
mov
mov
cli
sbb
jp
push
pop
dec
aam
ljmp
inc
xor
nop
scas
shl
or
aad
dec
jg
jns
pop
cmc
adc
push
mov
add
aaa
jecxz
mov
mov
ficoml
mov
cld
cmp
and
xchg
mov
daa
js
adc
adc
xchg
jnp
jle
lods
push
add
or
jg
imul
xchg
jno
pop
pushf
xchg
lds
mov
rcrl
mov
gs
dec
dec
mov
in
iret
mov
sbb
mov
ja
popl
aam
pop
pop
jg
mov
ss
in
or
pop
es
scas
test
int3
movsb
cmp
push
pop
daa
nop
jae
mov
or
in
gs
in
ss
int
pop
lods
ret
outsl
and
mov
and
mov
pop
repnz
xor
sub
adc
cwtl
pop
push
mov
mov
mov
mov
lcall
cmpsb
arpl
mov
ss
inc
adc
adc
push
and
mov
loopne
jae
addb
mov
fnsave
fisubl
call
popf
sti
xchg
aaa
dec
ja
mov
pop
imul
icebp
ljmp
fwait
js
repz
gs
xchg
icebp
lods
cwtl
jae
push
push
jb
adc
mov
aam
inc
pushf
dec
lds
inc
xchg
cmp
aad
sub
mov
hlt
aas
push
or
or
push
jo
fisubs
negb
in
mov
cmpsl
cmp
mov
cmc
js
lret
stc
out
mov
loopne
lret
rorb
ss
xchg
pop
arpl
ja
pop
xchg
in
vpmulhw
jg
xchg
xchg
ret
lea
negl
and
mov
or
das
loope
pushf
sbb
xchg
sbb
lods
test
mov
inc
lahf
pop
ja
or
std
xchg
jecxz
cmc
add
daa
pop
jg
mov
jp
loopne
lret
pop
popf
xchg
fmull
mov
and
jmp
aad
and
mov
iret
cmp
sbb
mov
add
aam
fwait
push
jg
sbb
negl
pop
lock
fisubl
les
push
in
fistpl
sbb
xlat
imul
xor
pop
jbe
sub
mov
sbb
rcrb
test
jg
and
mov
pcmpeqw
clc
push
lret
jle
cmp
ror
mov
sbb
adc
and
lods
les
sub
stc
push
xchg
add
or
fisttpll
mov
mov
repz
dec
mov
fisttpll
mov
fdivrl
xlat
push
and
iret
xchg
sarl
xor
ja
inc
jecxz
cltd
rorb
stc
xchg
popa
dec
cmp
sub
mov
add
xchg
das
sbb
pop
mov
rorl
cltd
dec
in
cmp
inc
mov
faddp
mov
cltd
cld
adc
int
inc
lock
je
lret
popa
gs
push
pop
add
cmp
in
mov
addr16
or
repz
jle
lods
nop
fldenv
jb
jb
add
xchg
mov
scas
add
xor
gs
jle
pop
cmp
or
and
mov
movsl
inc
inc
jb
popa
clc
inc
in
mov
inc
jg
cmp
mov
mov
outsb
lods
sbb
and
cmc
inc
lea
mov
push
and
lods
jmp
and
jl
xchg
jb
clc
sahf
ss
addr16
dec
pop
and
lret
rep
out
pop
cltd
shll
mov
enter
insl
es
in
scas
popa
in
add
hlt
mov
push
movb
outsl
pop
cmp
xchg
lret
jae
xchg
adc
sti
xchg
loop
push
cs
test
sub
xor
sbb
nop
test
dec
out
stos
mov
mov
lock
lods
rorl
mov
sti
push
pop
cmpb
add
sub
and
outsl
outsl
jb
outsb
dec
shll
mov
out
rcrb
inc
adc
cs
aaa
repnz
sbb
add
roll
insl
arpl
gs
neg
das
adc
jle
scas
scas
das
pop
lret
fidivrl
cmp
loope
inc
hlt
adc
jne
imul
and
sar
mov
pop
dec
or
adc
popf
xchg
adc
clc
mov
js
out
das
lds
or
popf
adc
jae
pusha
stos
adc
sbb
xor
sub
shlb
lods
dec
or
pop
jmp
and
jns
movsl
lds
shlb
push
sub
and
rcll
push
mov
dec
inc
in
lahf
out
mov
adc
sbbl
pop
adc
push
adc
push
xchg
ss
mov
ret
stos
cmp
or
xor
push
mov
and
cwtl
mov
push
inc
mov
push
repnz
push
imul
jg
and
repz
fwait
dec
rcrl
std
addl
sbb
jns
mov
sbb
stos
stos
dec
dec
lret
mov
jp
inc
dec
gs
jne
shl
les
loopne
sub
jne
jnp
mov
insb
lods
pushl
cmp
cli
lret
pusha
repnz
outsb
and
xor
ret
mov
repz
jb
ljmp
push
inc
in
jl
scas
mov
xor
pop
inc
mov
int
mov
jle
mov
in
xor
mov
dec
sub
pop
push
or
daa
in
lds
fdivs
mov
pop
adc
sbb
ror
pop
mov
iret
xor
insb
clc
test
int
ss
sahf
int
lods
jge
push
adcb
int3
ja
mov
adc
leave
into
add
add
pop
movsl
xor
pop
sbb
call
mov
xor
lds
adc
cs
mov
hlt
sub
xlat
in
ret
and
subb
pusha
loop
subb
xor
xchg
int
mov
mov
cmpsl
inc
repz
clc
stos
fisubs
rcrl
jg
ja
fisubrs
fdivp
lahf
and
xor
jns
dec
and
pop
mov
arpl
lods
sar
pop
and
imul
popf
pop
scas
sbb
dec
lods
lahf
pop
in
ret
mov
push
mov
rcrl
jne
sub
ja
cmc
lahf
ljmp
cmp
adc
movsb
and
ret
je
rolb
les
orb
mov
dec
inc
outsl
lock
or
xlat
push
shll
inc
xor
push
insb
or
icebp
rcrb
jp
in
xchg
push
or
sbb
jecxz
fdivl
mov
inc
dec
adc
adc
cmc
scas
sub
inc
in
fcmovb
jge
adc
lea
xchg
into
xchg
jmp
bound
mov
cltd
mov
mov
mov
cmp
clc
xor
xchg
das
js
stc
out
xor
ficompl
adc
or
repz
arpl
sbb
jns
jmp
testb
insb
ret
mov
in
hlt
addr16
stos
pushf
push
lods
mov
cmp
mov
dec
cmp
add
stos
andl
jecxz
mov
add
inc
add
xchg
mov
jg
pop
pop
or
xor
mov
out
mov
pop
adc
mov
filds
insb
repz
xor
aaa
cmp
fucom
push
ljmp
mov
jne
ret
out
push
fptan
lahf
dec
or
mov
cmp
fidivrs
dec
sbb
pop
jns
neg
pop
daa
xor
inc
test
mov
mov
mov
sub
jnp
and
mov
shll
xor
dec
add
jo
xchg
hlt
sub
fstpt
push
push
mov
sub
cmp
ja
pop
lds
mov
inc
sub
sbb
repz
and
popf
mov
pop
add
fucom
jl
stos
sti
and
xchg
push
ds
frstor
inc
push
sti
dec
jns
mov
adc
mov
jg
push
jl
loop
mov
pushf
lods
pop
xchg
mov
imul
or
mov
clc
insb
jle
xor
movsl
loopne
inc
push
adc
lea
stc
mov
or
sbb
mulb
mov
imul
add
fs
jp
jns
or
stos
pop
pushf
and
jmp
xor
outsb
jno
adc
pop
dec
xchg
fdivp
push
sbb
mov
add
repnz
inc
fcmovnb
and
adcl
imul
cmp
mov
mov
addr16
jo
fistl
shll
ror
int3
xor
test
dec
sbb
ret
repz
jmp
push
lahf
add
hlt
mov
cmp
xchg
inc
mov
adc
mov
insl
lds
insl
dec
addr16
imul
stos
xor
or
add
adc
and
in
loopne
in
bnd
inc
jbe
sub
mov
je
sbb
int
pusha
ret
rcrl
mov
pop
fnop
add
fcoml
test
push
sahf
mov
push
aam
inc
inc
repz
add
bound
xchg
lahf
sbb
sbb
jle
dec
daa
xchg
add
cmp
jns
jb
cld
push
negb
dec
mov
jo
xchg
or
sbb
mov
outsb
lret
jbe
inc
xchg
mov
ss
inc
rorl
std
ss
and
ret
aaa
add
std
inc
cli
cmp
jmp
mov
push
cmpsb
pop
out
and
cs
sbb
lret
fistl
dec
xchg
outsb
or
lea
std
lock
cmpsl
scas
andl
jle
pop
int3
cmp
and
jmp
lock
jnp
push
daa
loope
push
fwait
xchg
frstor
sahf
sarl
scas
cmp
dec
data16
dec
lret
sub
inc
jnp
cmc
pushl
lret
int
push
and
dec
or
mov
jne
pop
push
push
or
jno
fnstcw
je
add
lret
imull
hlt
cmp
jne
jmp
pop
enter
xchg
mov
push
icebp
mov
push
add
lds
xchg
outsb
mov
ret
cmp
dec
enter
sub
mov
flds
movsb
movsl
jno
jo
cmp
scas
sub
jp
xor
filds
push
mov
mov
aam
xchg
je
mov
mov
cmp
test
push
popf
adc
lea
mov
sub
jne
and
cmc
sub
dec
add
add
mov
adc
adc
fwait
jb
daa
add
add
mov
add
gs
jbe
popf
js
cli
fnsave
jp
in
jle
cmpsb
nop
mov
loopne
sub
sub
xor
sub
mov
addb
test
scas
pop
dec
subl
sub
lock
lcall
lea
sbbb
jl
pop
decb
or
icebp
cmpl
pop
cmp
icebp
ljmp
cmp
mov
fcomps
cltd
lds
dec
aas
pop
test
sbb
dec
dec
sbb
and
stc
jecxz
sarb
sbb
mov
pop
push
movsb
jo
or
push
sti
notl
jp
push
jg
xchg
cmp
push
cmpsl
xlat
fldl
cmp
lods
xorl
test
cmc
sub
and
cmp
scas
push
cmp
adc
xchg
lods
or
sbb
push
xchg
jnp
xor
jecxz
test
sub
sub
pop
ret
jg
andb
mov
mov
inc
xor
ljmp
repnz
std
mov
pop
add
mov
addr16
jge
jae
aad
add
lds
fldcw
stos
frstor
mov
popaw
dec
add
cmp
inc
pop
jmp
push
lods
filds
movb
or
idivl
cmp
mov
aas
cmp
and
in
mov
sub
mov
xchg
movsb
clc
push
xor
cmp
and
stos
xor
cli
xor
cld
lcall
popa
xchg
cmc
xor
aas
xchg
and
insl
test
inc
sub
sarl
gs
inc
jo
cltd
inc
iret
outsl
call
aas
push
push
fadds
pushf
xchg
jle
std
sub
aad
roll
mov
mov
mov
lods
popa
ss
push
aaa
jne
xchg
jp
or
mov
shlb
pop
sub
test
and
out
sub
fdivp
adc
fcomi
sarb
rol
ja
in
mov
dec
aas
inc
xchg
push
icebp
daa
sarb
cs
repnz
add
jbe
jb
inc
ss
aas
aas
jecxz
lret
ljmp
popf
mov
lcall
sbb
test
inc
mov
and
ds
sub
mov
adc
xor
jne
cmp
jb
fistps
loop
mov
ljmp
jnp
out
pop
lods
fimuls
jb
faddl
ss
jnp
subb
hlt
pop
std
sahf
jno
rcrb
nop
lret
and
xlat
xor
ljmp
push
cmp
aam
lret
es
dec
out
aas
fs
mov
rcll
xor
pop
xchg
push
andb
aas
js
pop
cmp
pop
mov
out
outsl
pop
aam
sbb
leave
out
or
push
lret
loopne
xor
dec
outsl
pop
pop
in
or
shll
stc
mov
mov
adc
lcall
bound
pop
mov
or
rorb
xchg
inc
jge
mov
mov
movsl
add
push
or
push
iret
inc
cmp
mov
es
or
fisubrl
jne
es
mov
and
push
nop
enter
cli
or
mov
mov
stc
push
js
xor
lds
sbb
mov
mov
mov
push
aam
inc
or
mov
pushf
mov
sbb
roll
lret
sub
fstl
and
cltd
pop
add
imul
push
enter
stos
test
cwtl
jo
fcompp
cmp
and
xchg
pop
jns
test
add
pusha
mov
mov
and
pop
pop
and
icebp
data16
mov
int
jg
cld
repnz
ljmp
mov
shl
ljmp
pop
rcrl
add
inc
and
outsb
incb
icebp
xor
jns
ds
mov
jp
test
sub
daa
mov
mov
ljmp
cltd
xchg
xor
into
inc
jb
sub
shr
sbb
inc
mov
pop
pop
xchg
cs
popa
jae
loope
loop
inc
cmp
mov
in
mov
cmp
inc
mov
pop
aas
test
pop
jp
lods
fisubrs
pushf
stos
mov
insb
rcr
add
sub
mov
inc
sahf
inc
popa
fnstsw
cmc
sbb
aam
jg
pop
xor
add
cmp
mov
stos
rorl
sub
push
cmpsb
or
pop
es
inc
aas
test
aas
out
ljmp
xchg
xchg
mov
inc
push
ret
push
aad
fsts
lret
dec
lret
jecxz
jmp
xchg
sub
jle
xor
shr
fdivr
arpl
loop
dec
jo
push
jne
jo
jl
imull
addr16
xor
flds
and
jle
aad
lret
clc
mov
xor
imulb
push
push
xchg
loope
push
leave
insb
mov
dec
mov
lods
hlt
sub
aad
daa
int3
das
ss
bound
mov
push
hlt
sub
xchg
jb
cmpsl
fwait
arpl
xchg
sbb
rorb
push
subb
sbb
push
mov
ret
aad
push
sbb
mov
adc
movsl
idivb
dec
sbb
push
jnp
cmp
sbbb
call
pop
fsubrs
imul
js
mov
repz
sub
testb
dec
ss
push
xor
adcl
ret
inc
and
mov
fs
inc
das
mov
sub
add
outsb
hlt
inc
add
push
add
dec
mov
sbb
in
mov
and
pushf
mov
xchg
dec
xchg
pop
scas
pop
or
pop
inc
cli
lea
pushf
cltd
roll
push
cli
mov
pop
jns
sub
dec
sub
mov
mov
xchg
cmp
mov
ljmp
clc
outsb
ds
in
or
sub
xchg
push
pushl
mov
test
stc
rolb
mov
sbb
xchg
pop
psubq
xchg
jp
fidivl
push
jne
cmpsb
push
inc
xchg
xor
push
xchg
or
sbb
gs
fdivrl
sub
pop
leave
test
push
lods
push
adc
xchg
push
pop
jbe
push
filds
in
cmp
cmp
dec
mov
adc
add
imul
adc
addb
add
push
subl
dec
cs
adc
dec
fdivrs
outsb
sbb
orl
mov
push
rcr
jp
in
shrb
push
inc
mov
or
xchg
dec
and
aas
iret
dec
push
inc
inc
pop
cmpb
xchg
mov
xor
sbb
addr16
xor
cltd
xchg
fiaddl
outsb
xchg
aad
ret
pop
xor
cmp
mov
and
jmp
sbb
shll
cld
popf
call
loopne
stos
mov
mov
cmc
rolb
sub
aam
lret
add
xchg
int
and
sub
pop
mov
xor
mov
fidivs
in
jmp
sti
inc
shrb
and
add
and
adc
inc
lea
test
lds
or
jle
cld
xor
and
outsb
out
xor
popf
cltd
or
test
cs
call
pop
cmpb
ja
mov
sub
dec
int
mov
out
int3
and
shl
scas
ror
gs
fsubl
fmull
push
ret
or
push
add
cmp
into
xchg
dec
sub
repnz
lods
xchg
test
and
imul
sub
or
dec
into
pop
xor
cs
adc
push
mov
dec
ja
cmpsb
nop
inc
sub
movsl
xor
repz
dec
out
mov
out
jno
flds
lds
addr16
mov
push
jno
out
push
clc
scas
stos
jmp
jns
popf
adc
ret
in
subl
xchg
xchg
out
aas
ja
cld
repnz
aad
popa
in
and
and
inc
mov
inc
cmp
inc
test
sar
adc
mov
xor
push
or
fcomps
sub
pop
popa
push
inc
sbbb
push
mov
es
xor
push
stos
mov
and
xor
inc
lret
adc
sbb
sbb
mov
mov
icebp
stos
lods
inc
jne
pop
test
sbb
or
jns
scas
push
test
mov
hlt
push
fwait
out
push
inc
cwtl
aad
dec
pop
movsb
pusha
cmpsb
mov
xchg
lret
and
mov
and
rclb
test
xchg
cli
sbb
add
add
xor
pusha
dec
pop
ret
dec
pop
loope
mov
sahf
std
mov
int3
pop
cmpb
imul
lret
sbbb
in
and
mov
sub
push
enter
fimull
push
scas
ds
add
imul
xor
lock
sub
add
xchg
add
dec
ret
aaa
inc
xor
out
shl
enter
enter
pop
hlt
in
mov
in
pop
cmp
and
ja
xchg
xchg
outsb
outsb
add
mov
xchg
and
neg
aad
cld
and
jo
xlat
cmpsl
mov
mov
mov
xchg
mov
fisttpll
xor
sub
sbb
pop
and
and
rcr
adc
loope
mov
test
cmp
movsb
mov
mov
std
ret
out
pop
arpl
and
in
or
jmp
lods
pop
mov
inc
ret
ffreep
push
mov
lods
and
mov
mov
xchg
adc
jl
pop
or
sar
outsb
into
addr16
cmp
add
push
push
inc
sbb
ret
outsb
insl
addr16
pop
outsb
sub
mov
cmpsl
lret
pop
movsl
jmp
scas
mov
mov
add
mov
ss
xchg
push
mov
fxam
mov
mov
mov
dec
inc
leave
outsl
popf
hlt
or
xchg
loope
jnp
inc
insb
add
pop
fcmovnbe
or
sub
jl
clc
push
and
lahf
pusha
sbb
mov
enter
repnz
mov
imul
jecxz
les
dec
adcb
call
aad
sub
push
sbb
sbb
pop
out
pop
adc
push
insb
jnp
push
mov
jle
mov
sbb
std
scas
xchg
cmp
dec
mov
jae
mov
mov
inc
mov
loop
lea
movsb
sub
push
cmpsl
cld
jb
sbb
inc
cmpsl
adc
mov
lahf
or
out
movsb
leave
xor
outsb
pop
xchg
cmp
and
cs
pop
out
jecxz
mov
int
lret
push
sub
sub
jmp
pop
cmpsb
shrb
xor
jecxz
xchg
mov
dec
dec
pop
ja
cmp
xchg
repz
dec
ja
inc
and
push
std
mov
push
mov
enter
clc
and
mov
pop
cltd
aad
jge
inc
cmp
rcr
clc
inc
pusha
outsb
mov
sub
xor
push
inc
cmp
cwtl
in
sub
lea
outsb
xlat
jg
sahf
push
cmp
aad
stos
lret
sub
repnz
scas
sbb
xchg
mov
mov
mov
inc
push
lods
sbb
dec
mov
push
into
aaa
xchg
js
or
outsl
push
movsl
int3
mov
test
add
fwait
in
int3
in
sbb
pop
or
mov
xor
jle
jecxz
repnz
jmp
repnz
out
add
sarb
dec
in
cmc
mov
xor
paddusw
ret
or
fisttpll
mov
jb
jno
inc
iret
fimull
add
hlt
and
leave
faddl
mov
shll
sbb
xchg
xor
push
xor
call
ljmp
int
ss
jg
mov
adcl
popa
mov
movsl
sahf
jno
adc
cmp
sub
je
inc
jle
cltd
and
mov
inc
std
mov
loopne
cwtl
inc
xor
or
je
rep
xchg
das
pushf
out
rol
xor
jb
mov
loop
xchg
stos
out
cmp
scas
inc
scas
fiaddl
cmpsb
addr16
inc
push
decl
popa
xchg
or
jae
in
xor
push
mov
int3
push
aas
mov
fcomp
ljmp
mov
lret
mov
stos
enter
mov
adc
int
xchg
insl
in
or
addr16
adc
cwtl
lods
dec
sub
call
mov
aaa
xor
inc
inc
adc
in
movsb
jle
mov
das
sub
xchg
adc
fwait
and
jno
add
aam
scas
lret
mov
hlt
repnz
je
insb
add
and
in
inc
je
sbb
in
xchg
push
stos
dec
jae
cmp
mov
loopne
inc
mov
adc
mov
inc
inc
jl
fbld
or
lcall
fsubr
jne
testb
mov
lret
imul
enter
jmp
mov
test
adc
and
lock
push
fsubrs
cmpb
sub
call
in
xchg
add
clc
xchg
fcomps
lcall
je
outsb
inc
out
in
dec
out
int3
pop
sbb
xor
jnp
pop
and
sbb
cwtl
das
inc
shlw
insb
push
cmp
xor
mov
or
push
and
xor
xchg
mov
mov
xchg
in
inc
sbb
aad
fs
inc
xchg
popf
lret
in
or
jp
or
sbb
adc
mov
inc
inc
lods
sub
insl
sbb
push
lret
cmpsb
xor
pop
mov
movsb
xlat
mov
lret
loopne
pop
adc
pop
dec
adc
fbld
pop
repz
aad
fildll
icebp
ljmp
cli
outsl
mov
and
jp
adc
rol
out
sbb
adc
jl
inc
sbb
pop
popa
into
das
mov
or
ljmp
rolb
pushf
jecxz
std
sub
cmp
mulb
mov
leave
push
mov
inc
adc
roll
out
lcall
sbb
in
jmp
pop
pushf
cs
pushf
mov
cmp
bound
stc
jge
hlt
adc
jb
ret
test
sbb
shrl
xchg
push
jle
shrb
jns
jb
mov
jge
mov
cmpb
jmp
pop
test
sub
cmp
xlat
cmc
cmp
and
aad
sahf
cmp
sub
rcr
cmp
imul
fstl
adc
lcall
test
inc
lea
mov
lret
sub
mov
sbb
lods
add
sti
mov
mov
inc
rcrl
cmp
fwait
cmc
xor
jge
sahf
lahf
push
shlb
movsb
arpl
mov
mov
stos
adc
jnp
cmpsl
jmp
add
addr16
or
add
push
lcall
daa
sub
out
mov
adc
cmp
mov
ss
push
dec
xor
ss
or
pop
mov
aas
cwtl
jns
cmovae
jo
filds
loop
mov
stos
add
addr16
push
ror
adc
sbb
sub
mov
xor
sub
push
xor
cmp
sbb
movl
jbe
xor
jle
jp
or
and
leave
pop
push
inc
push
es
mov
inc
fs
sub
movsl
dec
sub
fnstenv
fisubl
fnstcw
stos
mov
fldenv
ss
in
dec
stos
orb
cmp
nop
push
andl
cmpsl
push
test
push
push
ret
ds
scas
inc
cli
add
mov
movsb
jp
out
push
test
add
lcall
jge
or
dec
inc
mov
fistpl
adc
lret
mov
adc
hlt
lods
ror
mov
testl
and
and
stos
jbe
inc
daa
outsb
je
cmp
cmp
and
idivb
mov
pop
sub
inc
in
andl
sub
dec
or
stos
into
popa
xlat
in
ret
mov
test
xor
in
fdivl
and
mov
daa
daa
push
sub
push
adc
outsb
std
mul
sarl
js
pop
cmovbe
mov
rcr
mov
cmpsl
push
push
dec
mov
inc
insl
mov
in
jns
xor
fsubl
xorl
movsb
out
lret
mov
test
repz
sub
clc
jle
and
ret
sbb
pusha
outsl
ficoms
mov
dec
cld
leave
cmp
sbb
iret
lods
aam
addr16
and
std
dec
out
movsl
movsl
sbb
scas
jb
jae
cmpsl
mov
pushf
je
and
push
jbe
xchg
add
mov
xchg
out
out
mov
pop
xor
adc
iret
xchg
int3
inc
push
xchg
in
loope
mov
adc
js
out
and
sbb
int3
int
mov
jmp
in
xchg
sub
aam
mov
mov
iret
cmp
cltd
dec
xchg
loopne
pop
mov
aad
cmp
loopne
outsl
sbb
lcall
mov
xchg
pop
cmp
xor
and
ljmp
insl
push
lods
call
fucomp
fwait
cmp
outsb
sbb
fstpl
dec
fistpll
pop
mov
in
mov
add
mov
int
mov
dec
aad
xchg
lret
adc
hlt
jb
inc
in
mov
call
and
sbb
jle
push
test
pop
cmp
divb
push
je
in
sub
mov
inc
jno
jmp
pop
ja
ret
mov
jl
aad
fimull
xchg
movsl
out
insl
mov
push
cmp
mov
lea
xchg
xlat
add
pop
popa
mov
sbb
gs
test
repnz
add
aad
fcoml
imul
cmpsb
sbb
adc
inc
jae
pop
cmp
mov
sbb
cld
ret
cmpsl
cwtl
sbb
jo
dec
sbb
and
mov
inc
cmpsl
xchg
and
cmp
jecxz
and
xchg
adc
cmp
pop
cmc
andl
xchg
push
push
lock
test
data16
ja
mov
mov
and
add
in
repnz
pop
xor
mov
stos
xorb
shll
inc
shlb
push
push
fistpll
lea
pop
sar
ljmp
mov
into
iret
sbb
push
in
lea
call
andl
in
bound
cs
movsb
mov
jmp
xchg
gs
fnstcw
enter
mov
insl
test
pop
int3
packssdw
test
arpl
sub
roll
imul
push
mov
push
mov
lret
mov
and
pop
dec
sbb
call
jns,pn
jl
jno
sub
jns
movsl
sbb
pusha
cmp
lock
sbb
mov
jmp
and
inc
sbb
aad
xor
jmp
int
mov
mov
adc
jle
inc
in
xchg
nop
sbb
push
loope
and
lcall
sub
push
lods
fstpt
mov
pop
xlat
sahf
or
roll
sbb
inc
lea
and
faddp
enter
pop
nop
cmpl
sbb
xchg
lods
fdivl
aas
jecxz
push
xor
pop
fnstcw
push
cli
or
aas
jne
pop
fwait
sbb
sub
fwait
jle
xor
xlat
loop
adc
mov
inc
int
ja
push
int3
xchg
add
divb
add
lds
sub
fsubr
jno
xor
enter
xchg
cmp
lret
ds
in
ror
inc
and
out
adcb
lods
jp
add
pop
dec
nop
pop
pusha
inc
cmp
sub
mov
jb
jne
and
add
xlat
sbb
jo
push
fsubrl
jno
push
into
adc
nop
mov
pop
insl
mov
ljmp
ss
jle
jnp
mov
mov
push
ficomps
add
cmp
add
mov
pop
int3
ficompl
or
pop
ret
aad
mov
push
sub
xlat
push
mov
ja
lret
mov
data16
pusha
testb
cmc
sub
sbb
cmp
sarb
inc
sbbl
and
pop
int
out
notb
push
xorb
or
dec
mov
mov
je
cmp
test
mov
mov
inc
hlt
and
inc
xchg
orb
rcrl
dec
fwait
or
mov
mov
jecxz
xor
mov
bound
dec
sti
stos
repz
cmp
dec
fsubl
fs
add
jp
push
xchg
data16
bnd
mov
cwtl
push
jg
sbb
push
stos
out
int
mov
mov
lahf
fwait
xchg
mov
sub
mov
adc
sub
pop
adc
loop
mov
sbb
fnstcw
cmc
and
insl
cmp
testb
and
daa
pop
pop
pop
lahf
popf
lahf
mov
fs
sbb
mov
or
lods
fdivrl
mov
mov
imul
rolb
out
pop
loop
les
fildll
xchg
insl
es
aam
sti
out
clc
ss
sbb
mov
cltd
sub
mov
jne
repnz
lock
gs
push
jb
mov
aad
push
test
mov
mov
pushf
adc
and
cmp
dec
mov
xchg
or
push
dec
sub
sbb
cvtps2pd
push
mov
sub
loop
shlb
push
inc
lock
fsubrl
pop
loopne
and
sub
jb
fs
std
lahf
mov
push
ret
xchg
or
lcall
imul
cli
fstpl
imul
cli
and
jo
dec
pushf
loope
and
iret
pop
mov
mov
roll
mov
mov
jbe
mov
or
push
clc
pop
in
mov
push
hlt
pop
sarb
sbb
add
addb
sbb
push
mov
mov
outsl
push
cmp
sti
sti
dec
and
xor
jmp
sub
stos
pop
aad
jmp
andb
enter
ss
imul
ret
sub
xor
mov
pop
stos
xor
xchg
mov
mov
outsl
pop
pushf
xchg
mov
mov
cltd
push
and
add
pop
add
xchg
add
or
test
and
iret
out
popa
push
mov
jo
lds
pop
out
push
lcall
pop
mov
int3
mov
lahf
sbb
sbb
cmpsl
pop
xor
inc
sub
in
aaa
ret
inc
push
cmp
or
xchg
nop
mov
push
and
arpl
cmp
int3
lret
and
bound
cmp
test
insb
ljmp
sti
xor
cwtl
add
cmp
mov
push
dec
inc
pop
jecxz
xchg
jecxz
mov
mov
enter
dec
mov
inc
xchg
lahf
xor
sub
mov
lds
pop
mov
xchg
adc
cmp
push
repz
shrl
pop
xchg
jno
es
fsubp
mov
stos
fsubrs
xor
insb
dec
add
mov
cmp
hlt
imul
pop
adc
je
adc
cmc
nop
lcall
mov
push
xor
sub
std
push
pop
ret
out
adc
xchg
mov
test
push
push
adc
fwait
ss
sub
js
icebp
fs
jne
add
movsb
out
xchg
inc
hlt
ret
lea
mov
mov
jae
cmp
and
and
mov
sarb
mov
cmovae
je
dec
mov
push
ret
jno
and
jbe
in
sbb
add
sbb
jp
push
jp
clc
fstps
mov
clc
imul
xchg
pop
xchg
shrl
push
mov
roll
cmp
int3
jecxz
push
inc
iret
dec
negl
sub
xchg
das
lods
mov
imul
or
lds
and
mov
std
sbb
xorl
mov
pop
aaa
imul
inc
mov
mov
sti
xor
mulb
mov
and
fwait
jne
xor
jae
cmp
mov
fdiv
xor
lods
mov
push
test
mov
add
mov
xchg
cld
mov
lds
sbb
fidivrs
mov
ds
mov
inc
in
stc
je
and
adc
aad
cmp
lods
cs
cmp
movsl
xchg
push
cmc
jle
loope
mov
fcoms
sbb
shll
aas
adc
sarl
stos
mov
sbb
sbb
or
mov
mov
xlat
inc
push
in
fildll
push
dec
mov
lds
movsb
cmp
mov
out
test
inc
xchg
sub
lods
fcompl
shll
jne
cmpsl
mov
inc
pop
push
or
sub
int3
xlat
lea
clc
enter
mov
pop
into
dec
sti
lea
jmp
mov
fyl2x
jb
jnp
jnp
xor
mov
repz
cmp
popf
loopne
lahf
faddp
mov
xchg
cmp
imul
aad
pushf
mov
in
shlb
mov
out
cmpsl
stc
pop
jno
pop
jo
sub
inc
cmp
xchg
out
outsb
into
repnz
adc
dec
xchg
jp
xchg
rorl
cltd
addl
sub
jmp
addb
popa
mov
int
in
test
je
mov
mov
mov
in
or
fcoml
fdivp
jge
adc
shll
aad
cmp
add
cli
push
push
inc
inc
add
and
iret
cmpsb
sub
fistpl
mov
inc
out
jl
xchg
or
incb
imul
pop
sub
xor
sbb
xor
inc
cltd
add
pop
mov
out
xchg
leave
leave
xchg
pop
jbe
mov
test
mov
fbld
push
sbb
xchg
fs
in
inc
adc
mov
movsb
ret
jge
dec
cmp
test
hlt
movsb
movsl
cmp
sub
testl
xlat
dec
ds
testb
add
pop
in
adc
movsb
cmpsl
in
mov
sbb
xchg
mov
jl
jg
push
cmpsb
xor
daa
hlt
jb
push
push
and
push
cmc
jl
mov
pop
cmp
inc
cmpsb
or
mov
push
cmpl
pop
cld
lock
out
addr16
lea
subb
stos
lahf
cli
jnp
dec
pop
push
push
adc
imul
test
ja
mov
xchg
push
lds
iret
mov
sub
sub
fildll
dec
inc
xchg
mov
pop
sub
lds
pop
int3
cmpsb
test
mov
cmovns
popf
jmp
aad
daa
xor
jp
xlat
xor
and
lret
and
mov
inc
rolb
jns
leave
sub
sub
fwait
sti
mov
sbbl
mov
rcrl
imul
jo
imul
int3
sub
dec
mov
jle
enter
lea
ja
mov
ret
pop
push
sub
lret
and
repz
pop
xchg
call
xchg
cmp
rorl
rcl
sub
mov
das
mov
add
xchg
inc
test
movsb
sub
pop
xor
cmp
dec
icebp
inc
fbld
enter
adc
jnp
fstps
xchg
jle
sub
in
or
out
xchg
add
outsb
aas
test
adc
fstps
lock
fiaddl
push
fwait
data16
clc
sarb
add
mov
dec
lock
jge
and
sub
dec
inc
stos
ror
inc
sti
cmp
cs
imul
jmp
mov
in
cld
fldl
stc
in
dec
arpl
pop
cmp
jo
mov
cmp
cmp
pop
in
jnp
or
and
in
jl
shrb
pop
xlat
das
sti
fldl
insl
insl
jge
or
xor
popf
inc
inc
pop
pop
push
jp
stos
shlb
mov
or
testb
push
jne
add
adc
ss
out
push
xor
adc
dec
mov
push
sub
push
adc
call
lods
lahf
aad
and
lods
repz
stos
in
jne
repnz
pop
xchg
insb
pop
mov
mov
pop
jmp
xor
cmp
mov
ret
leave
into
lret
in
enter
or
push
in
insl
or
sbbl
popa
out
sbb
pop
xchg
xor
stos
int3
leave
je
ret
or
ret
mov
sub
fnstsw
out
push
enter
mov
xor
out
movsl
bound
ss
test
xchg
jne
mov
add
cltd
push
or
jge
xor
adcl
test
inc
pop
pushf
cmpsb
scas
test
arpl
sub
fcomi
cwtl
lahf
push
add
out
inc
jae
ljmp
add
or
pusha
adc
inc
mov
cltd
lods
cmp
mov
jb
mov
rclb
testl
cld
ljmp
push
aam
inc
push
test
lahf
jnp
pusha
outsb
mov
aad
sub
mov
ds
pop
ja
jge
iret
in
leave
xchg
ds
mov
sbb
out
push
leave
cmp
fmuls
adc
jno
jg
mov
cltd
imul
ja
daa
fldl
cmp
add
in
xor
imul
mov
xchg
mov
ret
and
ljmp
loop
dec
jp
inc
repnz
pop
lret
xchg
andl
hlt
aam
repnz
or
jmp
ret
jmp
mov
adc
insl
mov
clc
call
mov
lea
leave
ss
jmp
xchg
or
cmpsb
sarl
loopne
cmp
xchg
scas
test
jae
nop
sar
scas
mov
push
or
fldl
fs
inc
jle
lahf
mov
sub
jg
jle
cmpsl
je
icebp
loope
inc
leave
icebp
mov
push
jbe
js
call
push
dec
jo
fsubs
inc
jl
insb
sbb
xlat
scas
mov
adc
mov
mov
xor
loope
jg
mov
mov
sbb
dec
or
shrl
inc
sbb
daa
sub
lods
leave
imulb
repz
ss
rolb
divl
je
mov
xor
mov
cs
incb
fsubrs
shlb
dec
lret
push
int3
jns
sub
and
shl
pop
shll
sbb
outsl
lcall
cmp
or
dec
jo
dec
and
jne
ret
std
cli
test
mov
add
imul
dec
js
mov
cwtl
push
std
ficomps
fsubp
jl
cmc
xchg
mov
shlb
inc
xor
adc
mov
mov
imul
xor
dec
adc
lea
stos
jns
jne
adc
out
scas
add
lods
jge
cmpsb
mov
xor
cmc
push
sbb
pop
cwtl
stos
dec
mov
mov
pusha
stos
movb
lcall
jb
iret
mulb
mov
add
and
daa
es
orl
hlt
xlat
insb
mov
or
into
ficoml
call
cs
ds
lea
dec
jns
dec
mov
mov
mov
xchg
fwait
mov
jg
test
addr16
aam
fnstcw
repnz
les
sub
cli
mov
call
adc
jecxz
xchg
into
push
or
addr16
decl
inc
add
inc
in
inc
mov
inc
pop
push
pop
dec
inc
push
and
aaa
int
jp
sbb
jns
mov
lcall
lret
dec
or
xorl
int3
xchg
divb
jb
dec
xchg
jle
bound
xchg
sub
aaa
pop
jns
inc
add
inc
xchg
mov
xchg
push
lcall
adc
gs
sahf
mov
mov
ret
push
aad
in
xchg
cld
jnp
or
loopne
cmp
push
cli
push
xchg
pop
xorl
mov
jle
into
pmuludq
fistps
pop
fdivrs
leave
mov
pop
dec
sub
jp
dec
jl
adc
scas
iret
cli
sbb
ret
lods
loope
call
arpl
and
daa
imul
sub
add
mov
notb
push
add
sbb
xchg
mov
add
test
ja
pushf
jmp
mov
cmp
push
pop
inc
outsl
fs
vmovntdq
js
xor
cmpsl
adc
cltd
mov
xor
jecxz
mov
xor
notb
je
in
adc
orl
xchg
pop
data16
repz
mov
pop
into
hlt
dec
inc
mov
arpl
and
mov
jp
mov
data16
push
in
jmp
mov
out
sbb
inc
pop
cli
in
and
lret
adc
fnstenv
sbb
inc
fcomps
pop
cmp
je
imul
sahf
pop
nop
xchg
dec
xorl
jno
mov
daa
ret
cmp
and
rolb
inc
popf
xor
xor
dec
mov
inc
out
movntq
out
sub
ret
repnz
adc
outsl
adc
lret
push
pop
xchg
pop
sbb
incb
push
or
cwtl
jno
movsb
test
jle
push
and
inc
inc
or
cmc
fmul
imul
cmp
cmpsb
cltd
jmp
popf
movzwl
mov
xchg
lods
call
dec
sar
hlt
dec
mov
or
and
shrb
loopne
dec
cmp
ror
push
and
pop
mov
aas
std
int3
sub
enter
lods
inc
aaa
int
xchg
aam
and
push
imulb
push
movsb
mov
cmc
pop
stos
fnsave
push
pushf
adc
movsl
out
lahf
push
outsl
mov
pusha
mov
mov
int3
jbe
or
jnp
shll
int
jg
add
stos
cli
das
popa
sub
xchg
dec
lcall
fisttpll
or
pushf
shlb
and
mov
subb
leave
sub
jp
lret
clc
and
cmpsb
xchg
fwait
lock
pusha
fwait
cs
scas
in
iret
cli
sbb
jae
jge
mov
mov
cmp
addl
add
mov
push
inc
push
or
jmp
sbb
aad
adc
sub
jmp
add
in
mov
addr16
add
ficoms
shlb
inc
push
mov
sbb
mov
loop
pop
mov
sbb
cmpsl
xor
movsb
clc
imul
and
dec
or
add
mov
adc
movsb
mov
das
pop
adc
test
out
jo
mov
dec
mov
aaa
out
push
popa
sub
mov
jb
ja
mov
add
xchg
mov
rol
mov
fsubs
imul
fwait
jnp
pusha
or
scas
sbb
icebp
sub
loope
pop
xchg
mov
lds
lods
cld
xchg
pop
or
inc
aaa
mov
int3
adc
pop
fisubrl
or
data16
pushf
sub
cmp
fsubrs
mov
fs
stc
cmp
cwtl
cmpl
pop
jnp
inc
addr16
and
sbb
jle
andb
pop
sysenter
add
inc
xchg
fcomi
cli
sub
lret
pushf
mov
mov
bound
iret
pushf
add
mov
insb
shlb
aam
outsb
loope
cmp
xor
dec
cld
xor
lock
push
cmp
xchg
mov
sub
inc
mov
aaa
mov
sub
into
test
out
out
movsb
adc
adc
popa
ljmp
or
es
daa
aaa
add
mov
dec
inc
pop
cltd
mov
sub
sbb
cli
jb
add
jae
std
insb
push
push
jae
into
cmc
xor
pusha
aas
leave
mov
int3
ljmp
mov
out
pop
aas
gs
mov
incl
nop
test
push
in
daa
fidivrl
sbb
and
pop
inc
movsb
mov
jb
arpl
rcll
mov
popa
in
and
nop
outsb
outsb
push
testl
repnz
jle
push
add
sub
push
or
shll
pop
inc
adc
jl
xchg
sub
push
push
fdivrs
jo
push
dec
sub
divl
mov
push
test
xchg
lret
mov
into
and
int3
jnp
mov
cld
imul
mov
xorb
push
ret
and
sbbl
leave
add
leave
nop
test
insl
xor
mov
fwait
pop
jns
ret
add
pop
insb
pop
or
stos
mov
in
inc
lret
pop
cmp
sub
mov
dec
jb
pop
push
xchg
mov
adc
mov
adc
js
lea
adc
jmp
js
cmp
sbb
xor
pop
xor
jo
roll
xchg
dec
das
bound
inc
inc
push
add
xchg
xchg
mov
jmp
lds
push
test
mov
in
lret
push
cmp
inc
cld
in
movsl
in
mov
push
mov
divps
sbb
mov
fildl
gs
movsb
push
out
repz
xchg
xor
out
lahf
jo
add
or
mov
or
imul
bound
cmp
ss
sti
push
pop
pop
sbb
mov
cmp
into
sahf
in
mov
jle
sub
xor
rcrb
pop
push
dec
pusha
cmpsl
jge
xor
fists
push
jb
xchg
shrl
sub
ret
sbb
cmc
lahf
pushl
xchg
xchg
pop
push
fldenv
das
ljmp
insl
adc
push
daa
leave
push
sub
adc
and
push
adc
lahf
pop
cltd
dec
insb
imul
fsubs
shlb
ret
les
mov
loop
lahf
cmpsl
sub
stos
nop
mov
popf
fistps
pop
dec
inc
pop
imul
jb
mov
xor
iret
add
xlat
inc
arpl
xchg
cltd
iret
loope
xchg
loopne
gs
push
mov
cmc
sub
cmp
sbb
xor
ljmp
xchg
clc
xlat
push
fwait
inc
sbb
sbb
out
gs
or
addl
mov
in
or
sbb
daa
mov
aas
inc
jnp
in
mov
cli
mov
dec
pop
dec
test
pop
mov
xchg
mov
inc
dec
and
pop
ljmp
mov
ret
pushf
dec
aam
mov
imul
or
repnz
insl
sub
sub
mov
xor
mov
xchg
sti
pop
pop
adc
mov
xchg
subl
or
mov
mov
je
ljmp
adc
adc
mov
mov
pop
pop
add
std
cmpsb
fwait
arpl
inc
into
xchg
adc
scas
fldenv
jo
lea
dec
cli
stc
outsb
pop
mov
ds
mov
dec
movsb
jmp
jle
xchg
stos
std
out
addr16
ret
std
out
rcrl
outsl
and
popl
pop
dec
fs
pop
xchg
xlat
push
fistpll
pop
xchg
jecxz
adcl
xchg
movsb
shr
imul
or
fidivl
dec
in
aam
mov
orl
je
imul
pop
jecxz
and
fldcw
repz
push
ja
xor
inc
in
xchg
lcall
sbb
mov
mov
add
inc
mov
mov
imul
or
fisubrs
das
dec
test
inc
adc
shrl
fwait
fs
mov
and
xchg
je
in
in
dec
or
clc
xlat
sbb
aas
pop
xor
pop
add
enter
xchg
js
and
pop
pop
adc
fisttps
add
add
test
fsubs
inc
lds
ret
cmp
fnsave
cld
push
in
mov
cmc
dec
pop
and
jbe
roll
inc
pcmpgtd
cmp
push
lcall
test
sbb
dec
jo
icebp
and
hlt
add
loop
push
sub
push
jo
js
ret
inc
lock
pushf
es
mov
or
cmp
loop
add
in
nop
int3
mov
repnz
out
outsb
push
sahf
adc
repnz
mov
lahf
rclb
or
lret
insb
mov
xor
repnz
and
xchg
pop
test
jl
mov
test
or
popf
cmp
jmp
sbb
or
add
jo
and
lret
ror
jns
sti
mov
xchg
out
test
mov
sar
test
cmovp
cmp
sar
sub
add
lret
xchg
stc
jg
mov
cmp
mov
jge
inc
fisttpl
sti
inc
mov
mov
jbe
imul
mov
push
inc
call
idivl
lds
fdivrl
sub
inc
lds
pop
inc
loope
jp
add
mov
fldcw
add
mov
cltd
int
enter
mov
clc
inc
push
rcrb
outsl
adc
test
and
int
into
jns
dec
lret
jns
movsl
jg
call
add
push
cwtl
xor
inc
adc
fwait
mov
or
jne
or
jne
mov
push
div
repnz
arpl
pop
out
lds
mov
sbb
pusha
or
dec
jl
das
mov
add
adc
xchg
push
sbb
sbb
sbb
icebp
cwtl
data16
lods
insl
scas
or
lock
mov
jne
xchg
jns
cld
add
xor
inc
clc
or
repnz
dec
sbb
mov
dec
adc
sahf
shl
lods
push
pop
cmp
add
out
cmpsb
sub
push
xchg
mov
push
push
mov
inc
adc
dec
dec
dec
incl
sbb
pop
adc
out
push
add
add
stc
bound
and
mov
clc
and
bound
jle
fisttpll
sub
dec
xor
jo
fstps
lds
les
inc
or
cltd
fwait
sbb
pop
cmpsl
mov
and
mov
or
push
sbb
lahf
cmp
mov
dec
mov
loopne
or
mov
dec
push
jecxz
cmc
cltd
adc
in
outsb
mov
or
add
push
jbe
mov
inc
aaa
cli
aad
out
aaa
jp
adc
cmc
or
mov
cmpsb
mov
jmp
xor
popf
push
loope
movsb
mov
jns
sbb
out
xchg
or
jge
push
lods
pusha
mov
adc
and
test
ret
ja
shl
xchg
loop
xlat
cmpsb
cwtl
jne
add
inc
adc
insl
sahf
test
push
jle
gs
mov
mov
popa
push
out
fdivrl
adc
loope
pop
andb
lret
movsl
add
or
cmp
out
mov
fldl
ret
dec
sahf
jecxz
inc
imul
shrb
shrl
push
dec
mov
adc
into
in
jno
iret
test
xchg
push
daa
push
or
ds
xor
or
test
xchg
add
or
imulb
movsb
shl
mov
jge
aas
mov
xlat
lahf
xchg
mov
mov
cli
mov
mov
das
jns
pushf
repz
inc
jae
or
push
shlb
sbb
aaa
lcall
pop
jmp
jecxz
add
jl
pop
dec
adc
dec
mov
or
adc
jg
cwtl
push
pop
in
inc
sbbl
mov
cmc
mov
or
cmc
and
repnz
jecxz
stc
add
pop
je
lret
dec
lock
xchg
mov
cmp
pop
jbe
arpl
sbb
repz
cmpsl
mov
out
jge
mov
inc
mov
sti
pop
xchg
cmp
pushf
imul
in
xor
rorb
jnp
icebp
dec
pop
mov
es
jae
out
push
lret
sub
sub
repz
sub
xchg
outsl
and
xchg
stos
lds
mov
aaa
inc
jle
pop
fistps
repnz
adc
adc
lock
fistl
jb
adc
adc
mov
jmp
or
push
mov
adc
mov
jecxz
loop
inc
xchg
fs
fildl
fcmovb
std
loopne
inc
cmpsb
je
std
mov
xor
mov
leave
loope
fabs
push
cmpsl
cmp
data16
mov
dec
out
mov
lahf
cmp
cwtl
jo
cmc
sbb
outsl
popf
loopne
int
adc
shrb
xchg
sub
mov
gs
or
mov
mov
stos
hlt
xlat
scas
or
out
add
add
pop
mov
lock
mov
lcall
fistps
pushl
jbe
cmp
arpl
mov
push
mov
push
sub
dec
mov
das
imulb
push
or
popa
bound
and
lret
jns
and
and
xchg
adc
adc
fisubs
aas
xchg
mov
mov
ret
cli
pop
jns
aad
aad
pop
and
xchg
test
cwtl
lods
enter
clc
mov
clc
out
je
sti
call
dec
jmp
call
and
inc
xchg
test
js
mov
xor
adc
adc
pushf
dec
sarl
hlt
js
push
cmp
ds
insl
jecxz
ficoms
pusha
mov
dec
push
sti
movsl
call
rcrb
in
sub
or
movb
mov
add
or
out
pop
mov
push
lods
stc
adc
repnz
jl
push
test
adc
dec
test
cmp
dec
fidivl
andb
ljmp
or
lods
mov
sub
add
push
and
push
pop
xchg
pop
jle
pushf
out
bound
mov
outsb
xchg
sub
cmpsb
lock
adc
movq
dec
in
mov
leave
fisubs
mov
movsl
sbb
lock
pusha
call
xchg
cmpsl
jecxz
sbb
mov
push
in
pop
push
pop
out
xorb
movsb
outsb
mov
pop
icebp
aas
push
loop
jns
lds
sub
mov
test
clc
fisubrs
sub
frstor
xchg
int3
sbb
or
movsb
dec
push
or
inc
mov
stos
push
stos
shll
aam
lahf
cmp
inc
pop
pushf
push
out
les
dec
sbbl
out
add
pop
xchg
das
fucomip
mov
test
pusha
xor
lahf
fucomp
xchg
faddl
mov
push
scas
cltd
and
xor
pop
xchg
jns
enter
movsl
add
xchg
xchg
or
pop
push
and
xor
or
dec
ds
mov
imul
dec
shlb
sub
es
jp
fsubp
dec
fwait
shlb
adc
nop
in
lcall
mov
jle
jnp
mov
xchg
lods
push
in
mov
cmp
cmp
outsl
loop
aam
fldenv
pusha
lock
outsl
add
jmp
adc
leave
add
cmc
loopne
mov
mov
lock
add
mov
and
jg
adc
shrb
imul
sbb
cmp
inc
mov
icebp
jne
lds
jmp
sub
pop
out
dec
dec
in
sub
push
jbe
pop
add
lret
test
stc
adc
pushf
out
adc
lret
bound
pop
hlt
mov
xchg
mov
stc
or
adc
stos
fidivrs
je
daa
sbbb
mov
cwtl
lock
movsb
lcall
cld
lds
mov
loop
aad
dec
sbb
add
cmp
xlat
rorb
cli
std
insb
out
test
pop
in
jbe
addr16
inc
dec
inc
les
dec
rorb
icebp
or
pushf
mov
rolb
xchg
daa
cmpsl
lods
jo
fdivrl
aad
out
arpl
push
rolb
sbb
inc
mov
cld
rorl
in
push
push
and
loop
mov
xor
mov
adc
mov
pushf
cmovno
lods
sbb
bound
shlb
add
jge
lcall
sub
ss
test
jo
jb
adc
das
nop
aad
dec
mov
or
or
xchg
add
stos
xor
pushf
push
xchg
insl
mov
scas
hlt
aaa
loopne
test
mov
aas
fstpt
cmpsb
aaa
sbb
fneni(8087
mov
adc
jge
push
and
xchg
test
popf
jne
dec
xchg
jmp
adc
int3
push
scas
lds
pop
lea
lcall
lret
mov
and
rclb
icebp
test
in
and
dec
std
enter
stos
ds
movd
cs
hlt
jp
stos
lea
dec
cli
jmp
scas
cmp
mov
test
mov
mov
loopne
or
and
roll
mov
add
pop
adc
jp
out
fisubs
mov
fdiv
xor
ja
mov
rclb
adc
mov
pop
cmpsl
sarl
stos
divb
in
sub
jg
push
push
mov
inc
les
enter
adc
fcompl
sbb
xchg
loope
push
bound
push
sub
fwait
pop
xor
mov
lock
jmp
push
inc
mov
mov
fists
int
jae
shlb
out
in
and
lret
add
sub
sbb
fimull
lods
sub
gs
call
jge
or
stos
mov
ja
jbe
out
sub
aaa
mov
shrb
jge
sbb
lds
push
out
es
mov
nop
and
jae
scas
int3
orb
push
mov
or
xchg
mov
fldl2e
cs
or
sbb
adc
out
xor
jns
lret
gs
sub
lret
add
jne
cmp
mov
xchg
add
pop
cmp
and
xor
and
mov
sbb
das
mov
dec
add
dec
add
clc
leave
pop
xor
jnp
dec
xor
xchg
outsb
pop
mov
out
int3
lock
cmpsl
pop
add
or
inc
sbb
mov
xchg
mov
inc
out
mov
mov
js
mov
inc
pop
adc
repz
fmuls
enter
rclb
fldt
mov
jo
in
jns
loop
cmp
push
cmp
add
mov
cmp
leave
pop
xchg
shll
xor
lahf
jne
add
repnz
pop
add
mov
cwtl
pop
adc
popa
test
push
mov
pop
pop
push
mov
push
pop
jns
inc
inc
mov
fwait
test
mov
in
jb
into
subb
jmp
mov
cmp
je
lret
xchg
mov
xchg
xchg
out
cmc
mov
push
xchg
bound
cmp
sahf
fs
adc
popa
jno
and
sbb
jg
jmp
adc
lea
dec
fwait
aad
imul
ja
pop
stos
in
mov
push
push
mov
pop
sti
and
out
pop
lods
jnp
sbb
jns
add
shll
rcrl
inc
add
dec
dec
mov
cmp
jno
cmp
xor
mov
xchg
lock
gs
sub
jp
dec
aas
fs
call
xor
sbb
repnz
mov
pop
rol
leave
or
insl
add
outsl
aam
jae
outsb
push
xor
jns
push
mov
lods
fwait
enter
aaa
pop
jg
popa
stos
andb
push
imul
push
lahf
jecxz
out
scas
leave
adc
mov
jno
mov
jle
or
and
jb
sub
lock
add
push
aaa
das
mov
fdiv
test
ret
jnp
jns
popa
fbld
popf
gs
les
add
lods
adc
ret
cmc
cmp
repnz
push
fildll
mov
sub
fsubrs
adcb
out
fnstsw
sub
data16
sbb
popl
leave
sbb
rorl
xchg
cmp
lret
mov
inc
pop
sarl
dec
and
push
jno
sti
inc
mov
cmp
pop
insl
sbb
cmp
out
lret
inc
bound
add
sbb
jmp
dec
dec
jecxz
xchg
push
pop
js
std
mov
jg
sub
ret
fsubrl
cmpsl
xor
adc
int
test
mov
sti
nop
cmp
popf
and
add
movsl
rcrb
roll
add
ja
gs
jns
or
push
pushl
test
xor
ret
xor
lret
icebp
push
ss
dec
imul
adc
xchg
sub
aaa
xor
inc
mov
popf
sub
mov
jecxz
faddl
sub
incb
push
es
add
ds
jg
xor
rolb
outsb
cli
pop
pop
xor
mov
xchg
xor
push
insl
and
roll
pop
addps
adc
dec
out
fwait
jne
popf
jne
push
imul
leave
aas
ret
push
lds
xlat
xchg
xchg
pop
mov
sub
mov
shrl
push
int
stos
xor
stos
xchg
outsl
sbb
data16
cmpsb
cmp
ffree
cmp
fmuls
outsb
fistl
das
in
xor
adc
adc
add
cmp
push
movsl
cmp
or
sub
add
mov
mov
inc
sbb
or
mov
ficompl
loope
ja
xchg
out
pop
mov
fmuls
adc
or
mov
xchg
cmp
push
fwait
pop
inc
sbbl
popf
faddl
mov
mov
xchg
pusha
mov
rcr
pop
dec
xchg
or
pop
adc
mov
lcall
repz
stc
loopne
ret
repnz
ret
push
arpl
push
fisubrs
pop
mov
test
cltd
mov
in
dec
ljmp
cmc
sub
movsb
out
jo
rcr
cmp
mov
call
adc
cli
xor
adc
xor
cmc
mov
push
cmp
xchg
repnz
mov
movsl
jl
insb
xor
jp
mov
mov
sub
out
mov
js
jp
or
dec
dec
pop
lret
adc
shrb
add
fwait
and
movsl
inc
scas
repnz
and
imul
lahf
les
loop
imul
dec
and
or
negb
jle
cld
das
mov
mov
aas
sbb
mov
xchg
daa
fldcw
dec
jle
ja
movsl
jae
movsl
mov
outsb
xchg
js
cwtl
loop
shlb
aam
test
ds
push
nop
ja
std
sti
mov
dec
adc
push
fsubs
aam
aam
out
pusha
dec
out
xchg
je
gs
in
pop
arpl
repz
cwtl
iret
jle
xor
inc
aaa
jb
add
hlt
jmp
loop
test
push
int
xchg
sub
mov
jae
clc
xor
bound
mov
cltd
mov
bound
cmp
outsl
arpl
mov
je
adc
mov
jl
push
push
ja
and
cmpsb
and
xchg
shlb
adc
xchg
out
or
jo
inc
xchg
out
xchg
lods
es
negb
add
aaa
cli
jg
mov
and
mov
sub
jne
push
clc
repnz
test
mov
adc
cmpsl
stc
mov
repnz
leave
fcompl
loop
push
sti
pop
dec
mov
mov
mov
jg
rolb
mov
inc
outsl
lods
test
mov
mov
or
lret
cltd
daa
push
jne
dec
or
pop
add
outsl
popf
shrl
mov
in
sub
pop
jns
xchg
pushf
sub
setns
jns
mov
ret
orb
mov
popl
stc
hlt
or
lcall
aas
aaa
dec
jne
cmpsb
cmpsl
adc
jp
dec
je
loope
inc
insb
push
dec
push
add
inc
cld
insl
mov
mov
push
fcomp
lcall
inc
enter
mov
lds
xchg
ret
addr16
dec
jg
or
aad
shr
cmp
push
or
fdivl
or
xchg
aad
push
sarb
or
addr16
cld
inc
fstps
cltd
adc
xor
or
in
into
cmc
mov
push
mov
dec
mov
std
cli
movsb
push
inc
rcll
out
fbstp
mov
push
xor
xlat
iret
popf
mov
sub
rclb
les
dec
out
push
arpl
cld
dec
sub
sub
jge
pushf
fcompl
lods
ss
shll
rcr
cwtl
jo
push
ds
push
scas
jle
je
inc
mov
lods
repnz
push
push
out
jns
arpl
xor
pop
xchg
aas
push
sti
pushf
pushf
shrl
mov
mov
movsb
xor
add
xor
pop
pop
jne
mov
jne
jg
stos
hlt
push
popf
xor
ret
sub
push
pmulhw
mov
out
push
push
pop
fsubrl
dec
add
lahf
aaa
js
into
or
cmp
push
mov
in
into
ret
jl
mov
mov
mov
mov
jno
push
gs
icebp
mov
pop
and
stos
mov
cmp
push
mov
or
fldt
or
out
push
movsb
add
cmp
and
pop
or
sbb
add
ljmp
add
or
mov
push
loope
pusha
shr
sahf
dec
repz
insb
rorb
xchg
shll
sbb
mov
cwtl
loop
xchg
mov
cwtl
leave
clts
sub
xchg
dec
xchg
mov
xchg
dec
cli
mov
test
xchg
ret
inc
scas
jp
jns
inc
push
inc
rcrb
cwtl
xor
add
xchg
mov
cmpsb
out
jge
sub
cmp
mov
jne
das
pop
sub
fimull
scas
mov
or
xor
dec
arpl
lods
mov
jecxz
dec
inc
cmp
mov
cltd
xor
inc
sub
push
sbb
sub
cmp
mov
xchg
scas
sbb
xchg
pop
ljmp
xorb
dec
sysret
and
or
imul
rcrl
ss
mov
xor
call
int3
jecxz
inc
jbe
xor
and
jnp
jnp
cmp
insb
int
xor
push
mov
arpl
jno
mov
inc
dec
mov
iret
jno
xor
aaa
pop
cmpsl
movsb
xor
insl
mov
jns
fistl
mov
dec
call
pop
inc
cmp
scas
repnz
mov
jecxz
adc
add
pop
xchg
jmp
sub
into
test
insb
mov
in
test
shll
jbe
loope
iret
sbb
sbb
and
fwait
and
daa
jb
cmpsl
shrl
adc
add
mov
ret
mov
mov
mov
push
cmpsl
loope
sbb
sbb
std
rol
mov
test
add
test
jecxz
mov
int3
ljmp
fidivrs
and
mov
push
or
push
xchg
ss
stos
push
popf
jb
add
or
hlt
push
mov
xchg
dec
outsl
jge
mov
xchg
inc
cmpb
ds
cli
outsl
stos
andl
jecxz
xchg
sbb
and
stos
iret
roll
dec
int3
lods
insl
mov
aad
inc
pop
xor
fwait
mov
mov
jmp
int
daa
lret
pop
mov
or
inc
inc
repnz
pop
ss
inc
sahf
jmp
out
mov
sbb
cmpsl
imul
xor
jp
sbbl
xor
adc
push
and
jbe
xchg
pop
aam
push
scas
lahf
shrl
add
dec
xor
pxor
jo
int3
sbb
out
shrl
xchg
jmp
cmpsl
lds
cmp
aaa
adc
enter
cmpsl
sahf
cli
xor
lods
xchg
cltd
mov
cltd
inc
jns
adc
outsb
inc
inc
orl
mov
add
push
jecxz
mov
loop,pn
int3
inc
lods
add
fists
xlat
imul
rolb
ss
sar
out
sahf
sub
sahf
jae
inc
add
test
cmp
jp
aas
in
lock
jnp
inc
into
add
mov
sub
aad
ss
shlb
clc
pop
mov
adc
divl
jo
cmp
ret
jne
inc
and
xor
in
mov
jmp
xor
pop
jmp
pushf
enter
andb
adc
shrb
inc
jb
pop
xor
sub
dec
scas
sbb
or
cmp
lea
addb
imul
popf
sbb
pop
push
xchg
mov
out
inc
leave
call
aaa
nop
stc
ss
popf
add
lock
data16
cmp
fs
and
xor
loop
stos
jnp
aas
andb
aam
push
or
add
xlat
lods
mov
imul
fsubrl
xchg
icebp
dec
push
into
outsb
insb
or
mov
outsl
mov
cs
out
ret
pop
push
mov
lock
pop
dec
int3
inc
dec
cltd
xchg
xchg
ja
int3
insl
add
mov
lcall
movsl
int3
sub
sbb
add
jae,pt
clc
xor
stos
pop
sbb
icebp
pop
divl
imul
pop
gs
jbe
fistps
pop
scas
sub
push
mov
test
stc
sub
mov
sub
into
inc
in
adc
add
mov
ds
lods
decb
das
xchg
dec
movsb
xor
test
mov
push
pop
dec
dec
cli
adcb
loope
mov
test
loop
ljmp
ds
popa
push
imul
movsl
test
dec
orb
cmp
mov
mov
rorb
out
test
notl
dec
adc
int
sbb
add
add
pop
jle
pop
mov
pop
enter
mov
mov
aas
jmp
mov
in
ljmp
push
gs
dec
cmp
lds
inc
inc
stc
in
fisttps
fildl
pop
and
cmp
cwtl
push
jl
mov
mov
mov
inc
cmp
pop
push
scas
fcmovnu
into
clc
xchg
add
adc
jns
lods
aam
and
orl
mov
nop
mov
sbbb
mov
inc
jnp
outsb
jns
loopne
imul
imul
fldt
cmp
popf
or
xchg
pop
insl
add
fadd
fnsave
popf
sub
sarb
dec
jb
aas
jl
pop
push
sbb
push
cmp
sti
std
std
pop
and
jecxz
lcall
clc
fistl
adc
inc
mov
scas
lcall
cmp
mov
and
adc
pop
rolb
out
mov
or
and
jo
call
xor
jno
inc
div
cmpsl
sti
add
rcll
lcall
stos
lret
movsl
imul
cmpsb
sbb
dec
adc
jecxz
mov
mov
mov
test
inc
push
sbb
pop
out
cmp
out
mov
adc
stc
lds
iret
fsubl
enter
ljmp
loopne
push
outsb
dec
out
push
shrl
pop
and
pusha
adc
sbb
push
dec
fldcw
test
movsl
pop
mov
call
sbb
fsts
cmpl
in
push
pop
cmp
lods
pop
sbb
stos
adc
iret
dec
popl
enter
xor
pusha
xor
lahf
cmpsb
aam
cmpsb
adc
fldpi
dec
mov
lods
stos
xor
and
je
push
adc
jp
ficoms
outsl
insl
mov
ror
repz
lret
adc
add
xchg
inc
addr16
pop
jns
and
xchg
bound
push
jo
ficomps
and
cmp
xor
sbb
add
mov
insb
sub
fiadds
lea
jbe
mov
mov
adc
mov
mov
out
mov
mov
dec
jnp
and
imul
mov
sarb
cmp
int
leave
dec
fcomi
fmuls
or
or
push
mov
repz
add
loope
test
repz
adc
jle
pop
lcall
mov
mov
insl
inc
cs
enter
add
adc
ficomps
or
and
jbe
stos
lds
outsl
clc
jne
cmp
stos
inc
aam
sub
int
fwait
cmpsl
jno
push
aad
pop
in
mov
or
das
movl
mov
push
repz
shlb
mov
sbb
faddl
icebp
scas
pop
es
inc
mov
mov
ss
ret
push
adc
jae
adc
jb
std
hlt
ds
mov
push
cmp
bound
mov
inc
incl
xchg
adc
cld
cltd
mov
das
hlt
dec
jae
popa
pop
inc
push
dec
cmp
das
fdivs
mov
test
xchg
sub
bound
push
shr
jecxz
and
imul
cmp
test
loope
icebp
jae
jecxz
repnz
cmp
add
jmp
int3
mov
add
jecxz
sbb
sbb
out
mov
or
sti
movaps
push
xchg
or
cmp
cmp
fnstenv
cs
rol
arpl
lahf
xor
push
push
cmp
scas
or
aaa
loope
pop
sbbl
repnz
enter
cmp
inc
repnz
adc
add
xor
dec
aad
mov
aam
xchg
mov
loopne
mov
les
insl
int
outsl
jl
test
adc
jnp
dec
push
arpl
sub
mov
sub
outsl
sti
jns
jp
sti
push
movsl
cld
cmpsb
mov
cmp
dec
mov
in
imulb
mov
repz
lret
je
jb
mov
mov
test
imul
or
ret
dec
xor
jle
sbb
pop
insb
mov
cmp
add
sub
hlt
adc
xchg
and
popf
in
cmp
and
mov
adc
scas
mov
dec
out
negl
sub
sarl
aad
pop
lret
or
jp
lods
sub
add
jne
push
in
xchg
out
fwait
cmp
sub
repnz
in
xor
dec
mov
cltd
cmpsb
jnp
mov
pop
push
mov
fbld
and
inc
divb
leave
nop
idivl
nop
imul
imul
cmc
fldenv
das
lods
movsl
pop
inc
rolb
sahf
mov
or
mov
imul
xor
subl
addr16
sbbl
pushf
stos
addr16
mov
pop
fisttps
ljmp
adc
pop
adc
pop
fisubs
icebp
loopne
add
dec
mov
pop
jge
lret
cmpsb
dec
push
repnz
nop
mov
or
sbb
mov
inc
lods
push
mov
adc
cmp
xorb
cmp
test
test
add
and
bound
mov
inc
cld
rclb
out
dec
sub
xchg
scas
mov
jbe
test
test
loope
cltd
jae
gs
ret
jle
sbb
mov
leave
hlt
stos
push
stc
mov
add
ret
popa
push
roll
add
pop
or
push
cli
ret
push
sbb
ret
outsb
mov
adc
cmc
lahf
mov
and
xchg
sbb
addl
mov
adc
inc
or
mov
mov
sti
out
xchg
lcall
int
fistl
rdtsc
int3
add
xchg
in
stc
loop
stos
jmp
int
sbb
insl
iret
out
lods
jo
jne
test
stos
inc
jle
jo
outsb
mov
or
test
mov
push
xor
inc
or
mov
jne
push
mov
or
push
je
adc
cwtl
aam
je
jmp
out
xor
sbb
mov
cmpsb
cmp
aas
lds
aam
cs
cmp
xor
add
pop
rclb
fdivl
cwtl
pop
arpl
mov
ja
loop
iret
cmp
aad
and
and
imul
push
mov
xchg
rcll
fs
lock
arpl
sbb
stc
mov
cwtl
add
test
imul
mov
lods
push
jmp
cltd
pop
xchg
stos
push
pop
sbb
cmc
dec
sti
loopne
xor
sub
loopne
mov
orl
add
adcb
pop
xchg
dec
push
mov
ljmp
iret
mov
fisubs
shll
push
shll
in
jg
movsb
xorl
das
inc
subb
inc
xor
lea
cwtl
lcall
iret
mov
mov
and
push
movsl
add
ret
idiv
pop
in
call
test
xor
pop
xchg
cmpl
lcall
mov
das
or
adc
push
out
sub
add
inc
sbb
xchg
push
popf
sti
insb
pop
popa
insl
faddl
push
pop
or
or
sbb
sahf
add
jle
xchg
sti
xor
aad
rorb
push
jecxz
lahf
inc
xor
cltd
addb
inc
adc
insb
subb
pop
es
pop
xchg
mov
mov
sbb
xchg
ss
out
sub
mov
inc
mov
das
push
push
jne
cmpsl
or
add
pop
sbb
mov
dec
loopne
push
mov
dec
in
nop
sub
or
mov
add
fldcw
xchg
scas
into
testb
iret
mov
push
pop
cmp
push
and
inc
xor
sti
inc
add
lods
mov
ror
out
mov
adc
fldenv
loopne
lcall
mov
lds
cmp
fwait
les
enter
push
int
idivb
add
dec
adc
sti
jecxz
xor
cmp
push
sbb
mov
pop
shrl
ret
arpl
ljmp
stos
mov
repz
mov
shrb
popf
js
jg
mov
jbe
sbb
cmpb
xchg
mov
lock
and
mov
add
push
aad
xchg
pop
ljmp
or
or
aaa
adc
lahf
in
scas
mov
jecxz
push
roll
aaa
xchg
jg
stos
or
or
mov
mov
and
loopne
es
jno
jecxz
push
cmp
pop
push
pop
mov
jecxz
les
stc
sahf
xchg
sub
std
icebp
sub
mov
outsl
mov
push
mov
and
and
sti
push
sbb
jg
imul
adc
repnz
daa
in
cmovg
fstps
push
jne
push
stc
mov
fldl
push
sub
outsl
xor
mov
jo
gs
movsl
movsl
iret
push
push
pusha
pop
or
mov
pop
orl
in
jne
scas
inc
movsb
mov
inc
ficomps
jge
jno
bound
fnstsw
xchg
adc
xor
sbb
pop
mov
clc
mov
cld
test
out
xorb
pop
adc
repnz
cltd
xor
add
adc
and
add
sub
jbe
imul
cld
push
inc
xchg
dec
scas
cli
mov
xor
insl
insl
ret
test
test
std
std
loopne
jge
stc
inc
movsl
hlt
or
loope
mov
xchg
hlt
mov
cltd
out
icebp
stos
push
rcrb
xchg
add
jle
sub
and
ret
stos
push
jp
mov
jmp
mov
lcall
jae
xchg
fs
mov
xor
cld
mov
test
lods
push
inc
popf
or
iret
dec
dec
push
fisttps
data16
aam
jp
xchg
xlat
and
push
repnz
inc
or
leave
pop
outsb
jp
adc
xchg
jge
insb
adc
lret
mov
push
jle
or
push
xor
int
lret
mov
lret
mov
test
mov
xchg
dec
lret
add
or
loopne
dec
jecxz
cmovs
shl
mov
xchg
in
pop
jp
dec
jmp
xchg
test
fcmovnbe
enter
mov
add
sti
xchg
pusha
pop
jo
outsl
lods
xchg
adc
add
jle
inc
cltd
sbb
cmp
nop
nop
pop
lahf
push
loopne,pt
cmc
jle
jo
movsl
bound
push
xor
loop
mov
mov
imul
incl
mov
lahf
and
pop
cmp
iret
mov
leave
and
sub
fcompl
call
and
test
dec
mov
leave
mov
push
pop
call
adc
in
push
test
icebp
ret
and
ds
xchg
or
mov
and
ret
and
lret
mov
mov
test
dec
loope
pop
in
jns
jns
out
mov
inc
mov
push
hlt
adc
loop
dec
jno
shlb
or
das
dec
gs
dec
jno
shrb
mov
stc
in
fidivrs
dec
rorb
xchg
in
push
push
testb
std
mov
jae
push
fs
lods
imul
dec
scas
in
les
pop
ret
pop
cmp
pop
adc
into
mov
or
ja
xor
pop
fwait
cld
pop
dec
into
jmp
xor
cli
push
je
adc
call
into
bound
inc
hlt
xchg
xlat
inc
dec
loopne
mov
dec
test
inc
xlat
aas
shl
jo
sub
push
imull
push
cwtl
mov
sub
cmpl
inc
outsb
push
and
loopne
adc
push
pop
outsb
mov
daa
add
iret
sbb
mov
mov
dec
mov
fs
push
xlat
jmp
shl
sbb
stos
xor
inc
imull
sbb
es
jmp
icebp
push
cld
push
pop
xor
inc
jns
movsb
dec
lcall
mov
push
fdivl
ljmp
test
bound
inc
js
test
aaa
outsb
xor
es
push
mov
mov
addr16
cmp
jbe
enter
int
mov
mov
pop
cmp
test
hlt
icebp
xchg
mov
in
pop
psubb
pop
mov
xor
xchg
adc
xchg
sub
dec
jae
inc
pushf
pop
shlb
and
jb
aas
cwtl
or
inc
cmp
cmp
incl
pop
mov
xchg
cmp
or
push
mov
adc
popw
in
data16
sbb
mov
jne
inc
mov
ss
outsb
sar
imul
jae
dec
ss
stos
dec
vmwrite
lret
stc
data16
lods
bound
mov
pop
xchg
dec
jbe
out
add
jnp
inc
cmpsb
outsl
lcall
jmp
jg
sbb
scas
unpcklps
jno
dec
or
fwait
insl
idivb
adc
lods
cltd
aam
sar
mov
pop
popf
ljmp
pop
mov
gs
xchg
stos
leave
sbb
cwtl
sar
jecxz
fmull
and
das
add
lret
cmp
and
mov
and
out
lret
call
xchg
les
jnp
ror
cld
sbbb
clc
cmpsl
sub
shlb
inc
and
sarl
dec
mov
push
icebp
mov
not
mov
push
mov
mov
cmp
outsl
push
scas
xor
mov
dec
mov
enter
or
das
out
scas
inc
xor
loopne
xor
lods
sti
inc
xchg
out
in
cmp
repnz
add
cs
push
enter
movsl
fadd
xchg
mov
jp
dec
fmuls
testb
ljmp
add
mov
fisubl
ss
inc
jl
jno
sbb
mov
jnp
mov
cmp
pop
stos
pop
divl
mov
test
test
cmp
jne
jno
pop
or
mov
mov
xlat
hlt
jns
hlt
fnstenv
inc
rcrl
inc
imulb
insl
inc
lds
popf
js
movsb
aas
call
int3
sbb
add
xor
testl
xor
in
adc
fidivrs
fadd
ss
rolb
xor
call
jae
sub
adc
daa
pop
shrb
xchg
push
xchg
push
add
adc
icebp
pop
jmp
bound
rorb
add
and
sbb
adc
or
push
sti
arpl
push
sbb
lock
cmp
dec
cmp
mov
rclb
popa
jg
jmp
fldt
sub
push
dec
mov
lods
push
imul
mov
jge
mov
jno
jbe
mov
bound
adc
pop
aam
cmpsb
clc
out
jg
pop
lds
cmp
pop
mov
pusha
jnp
xchg
jecxz
in
int
rcr
pop
lret
mov
stos
sarl
popf
jb
mov
mov
in
sti
inc
cld
mov
cmp
pop
push
jno
in
xor
pop
sbb
pop
lret
movsb
shll
imul
cmp
xchg
push
or
xchg
fcoms
imul
daa
cmp
cmpb
pushf
or
cmp
adc
in
call
lret
sub
cld
ret
stc
das
ret
cmp
lret
stos
xlat
stos
sbbl
out
inc
mov
jb
lods
pop
sub
imul
jmp
rclb
push
lcall
das
and
outsl
add
daa
inc
mov
dec
mov
aas
aas
push
inc
dec
inc
mov
mov
lret
enter
dec
pop
jecxz
cmp
mov
cs
out
js
scas
mov
mov
dec
out
add
and
add
inc
push
push
mov
sbb
jle
and
jb
dec
jb
pop
repnz
mov
je
xchg
pop
bound
adc
and
dec
test
xchg
xor
pop
hlt
mov
repnz
aas
mov
loop
pop
jp
imulb
nop
ds
mov
adc
sar
jecxz
adc
loopne
inc
pop
sbb
mov
dec
in
cmpsb
cwtl
fstpl
dec
xchg
and
sbb
movaps
enter
push
cli
insl
xor
inc
mov
or
push
mov
lret
adc
rolb
cmp
xor
push
fdivl
inc
cmp
popa
ret
or
mov
jnp
addr16
lea
lahf
adc
sbb
inc
pop
aam
lods
hlt
push
xchg
jns
es
js
or
int
jmp
shlb
xchg
adc
jns
or
fcoms
inc
int3
dec
push
jmp
aam
dec
aam
aas
push
jns
into
jne
mov
push
ds
out
fsubrl
and
fcomi
ljmp
andps
repz
pop
das
pushf
es
pop
cli
test
push
lret
xchg
popa
push
test
cmp
xchg
cmp
pop
jmp
pusha
insb
fidivrl
leave
into
imul
inc
add
icebp
insb
mov
jge
ret
shll
or
lcall
jnp
xor
into
mov
dec
xchg
mov
dec
mov
fcom
sub
sbb
add
push
aam
std
sarl
lods
pop
fdivp
adc
xchg
stos
jno
shll
cmp
push
rorb
js
or
cmpsl
or
rorl
sub
bound
cwtl
loope
xchg
adc
cmp
pop
aam
push
fidivrs
push
xor
repnz
fadds
aaa
iret
jo
shrb
loopne
mov
cmp
mov
cmp
ds
fldt
jp
xchg
int
push
test
bound
push
sbb
mov
mov
sbb
mov
pusha
xchg
cmp
sbb
mov
jnp
jp
pusha
lahf
inc
shlb
dec
subb
jl
in
ret
push
inc
inc
cli
push
popf
scas
imul
je
mov
insb
mov
mov
adc
sbb
jge
dec
enter
movsl
test
mov
mov
outsl
lods
jnp
ss
nop
dec
mov
and
mov
push
fcoml
mov
into
cmp
push
cmpsb
movsl
push
js
test
es
cmp
out
or
enter
pop
xchg
sahf
and
push
push
and
scas
lcall
pop
or
xchg
mov
cmc
pop
stos
jl
in
add
sub
push
cltd
push
cmp
pop
gs
jb
mov
jae
repz
jg
loopne
dec
test
ret
xlat
andl
lea
adc
xchg
mov
fs
arpl
fbld
mov
mov
adc
in
or
sub
cmpsl
pop
and
fidivs
jno
test
adc
mov
mov
insl
addr16
push
fsubrl
jle
xchg
sub
push
ja
ds
xor
mov
and
rcl
sub
xlat
adc
dec
xchg
push
sti
repz
push
pop
imulb
xor
fwait
or
fisttpl
and
js
notl
fisubl
xor
gs
js
cmp
aam
rorb
add
push
inc
popa
fildll
xchg
repz
jecxz
popl
sbb
shll
push
or
adc
aaa
mov
mov
lret
mov
sbb
es
push
aas
mov
xchg
mov
push
imul
stos
stos
ja
push
xchg
aam
daa
scas
scas
mov
jno
mov
lea
lret
cmpsl
and
rcl
jo
out
mov
sub
fsubrp
and
mov
fsts
inc
sub
leave
push
in
xlat
sbb
nop
jp,pn
fistpl
cmp
mov
out
clc
call
cmp
mov
add
push
ret
adc
push
inc
mov
jecxz
jp
out
dec
iret
jge
sub
mov
sbb
cmp
or
test
push
pop
call
out
pop
inc
sub
mov
cmpsl
scas
ja
mov
and
xchg
pop
push
outsl
in
insb
push
inc
push
jl
push
lods
stos
lds
fwait
insb
cmc
ret
xor
iret
daa
pop
push
add
jecxz
mov
push
xchg
jmp
lock
outsb
outsb
jbe
and
cmpsb
fbld
xchg
mov
je
mov
and
or
scas
sub
idivb
jns
test
in
push
rclb
fldcw
lea
aaa
leave
into
in
pushf
push
sahf
dec
inc
sbb
lods
or
pop
insb
insb
mov
in
pop
cmp
pop
fldcw
orl
test
fwait
decl
orb
movsl
jo
fwait
addr16
pop
popf
sub
icebp
insl
inc
aaa
xchg
sbb
mov
loope
repnz
fstpt
pop
xor
lds
and
imull
mov
inc
adc
and
xchg
aam
mulb
mov
sbb
js
mov
push
scas
mov
out
inc
out
sar
mov
push
imul
push
pop
xor
scas
gs
push
aad
pop
adc
cmp
mov
jnp
sbb
dec
pop
push
lea
fistl
outsb
sub
das
es
std
xchg
mov
popf
lcall
xor
std
sahf
cmp
pop
xchg
dec
push
call
dec
cmp
or
pop
shll
mov
outsb
popf
or
ret
add
sub
ja
push
xor
aad
aam
xchg
mov
outsb
pop
mov
push
popl
sbb
out
inc
xor
lret
cmp
hlt
cmp
mov
pushf
lcall
mov
aas
and
aad
movsb
mov
inc
xchg
ficomps
addb
or
jb
aaa
loopne
inc
inc
push
sub
cltd
dec
xchg
std
ss
gs
pop
clc
cmpsl
jno
inc
out
sbb
jo
lds
negl
adc
xor
push
xor
sahf
mov
popa
xor
jnp
and
jae
js
std
pop
push
sbb
cmp
inc
xchg
and
adc
out
pusha
ret
push
dec
lods
jns
push
sub
add
jnp
xor
sbb
movsl
or
shl
and
and
jmp
lea
pop
pop
adcl
aaa
jo
xor
xor
inc
cltd
scas
sub
xor
jmp
jp
mov
push
or
cmp
jae
mov
fldenv
aas
adc
mov
das
cwtl
idivb
mov
xor
mov
scas
cmp
mov
inc
scas
fwait
lcall
xchg
or
fadds
inc
cli
fistpll
or
push
push
push
cmp
sarb
and
xchg
adc
jb
dec
ja
adc
out
stc
mov
jns
sbb
fsubp
lods
mov
ja
pushf
pop
aam
fadd
lods
mov
in
add
add
push
outsl
cmp
into
lret
or
adc
jns
or
mov
xor
jmp
pop
dec
lds
jne
xor
sbb
rolb
sbb
pop
into
mov
lret
or
xchg
ljmp
rorb
out
aaa
mov
inc
push
xchg
sbb
adc
or
ret
cmp
sbb
out
das
push
mov
dec
mov
in
jae
outsb
arpl
andl
incb
sbb
push
jg
loopne
xchg
adc
lret
cmc
mov
push
mov
stos
cld
mov
sbb
cli
ljmp
daa
mov
in
push
mov
cmpsl
xor
and
pop
rclb
test
sub
dec
inc
pop
or
push
repnz
repz
sahf
xchg
cmc
cmp
fwait
notb
sbb
sub
lds
fsts
mov
jnp
fcomps
fstpt
cwtl
bound
and
cmp
inc
jne
push
jns
faddp
in
inc
mov
cmp
cmp
pop
sub
and
in
out
sub
sarb
inc
mov
mov
sbb
stos
aad
scas
divl
mov
in
leave
lock
dec
arpl
cmc
dec
or
xchg
fldenv
mov
mov
scas
jp
andl
jge
scas
int
and
xor
cmp
sbb
fists
xchg
mov
lcall
sbb
fbld
movsl
out
mov
push
cmpsl
pcmpeqd
lcall
xor
lds
push
xchg
nop
fistpll
setne
jmp
xor
mov
mull
cmp
xor
enter
jbe
and
mov
xchg
lret
js
xor
jne
push
xchg
mov
mov
icebp
xchg
dec
adc
adc
or
das
jbe
jle
popf
repnz
fadds
cmp
sarb
idivb
jmp
hlt
add
xor
push
jecxz
stos
jns
fdivrp
setge
in
cwtl
shrl
inc
es
mov
test
clc
mov
test
jne
in
sahf
pop
ljmp
jmp
scas
std
jns
dec
mov
lds
pusha
pop
add
outsl
inc
add
and
and
dec
cmpsb
loope
or
loope
mov
lods
mov
and
orl
lods
scas
pop
mov
mov
out
sti
sbb
into
aas
nop
test
test
cmc
mov
sbb
js
stc
cmp
xor
push
les
xchg
sti
sub
pop
test
repz
or
daa
cmc
pop
cmp
lods
sti
popa
jp
fsub
sub
repz
push
fbstp
xchg
jge
cmp
repz
push
out
lods
cmpsl
dec
loopne
and
sub
xchg
mov
xor
push
adc
fidivrl
into
xor
loop
stos
xlat
negb
clc
sbb
cli
aas
sti
hlt
push
lock
je
add
jle
test
or
sti
sarb
mov
aad
cs
mov
imul
mov
test
shl
out
inc
enter
mulb
push
rcll
inc
inc
cmp
cmp
jmp
ljmp
or
cmovne
cmp
add
pop
jno
lds
mov
adc
pushf
ficoms
or
xor
mov
inc
popa
mov
movsl
add
jmp
rclb
mov
push
and
mov
sbb
mov
addb
call
sarb
pop
rcrb
mov
dec
mov
pop
xchg
adc
jb
mov
repz
pop
add
imul
mov
insl
das
iret
mov
shrl
adcb
test
test
or
das
mov
inc
sarl
in
or
add
jmp
sub
dec
push
fadd
pushf
cmp
or
xor
gs
pop
mov
in
aad
lcall
adc
xor
mov
int3
xorb
cmp
mov
inc
sub
or
mov
out
fisttpll
nop
fnsave
push
and
sub
lock
stos
mov
pushf
cwtl
or
inc
sub
popf
jmp
push
push
jmp
mov
sub
push
push
dec
addr16
cs
aaa
sub
pop
push
mov
mov
leave
pop
dec
aaa
fwait
test
and
test
xchg
les
das
ret
jnp
pop
adcb
movsb
xchg
outsb
scas
mov
mov
sub
popa
in
test
das
push
insb
jns
jbe
loope,pt
cli
mov
fistpll
mov
shr
lret
cmp
popa
or
movsb
loope
cmc
in
mov
in
fs
loop
mov
cmpsb
adc
mov
or
imul
cmp
mov
dec
cmpb
adc
jmp
fildll
repz
xchg
push
and
fidivl
mov
jmp
xor
stos
pop
mov
sub
dec
jecxz
add
adc
test
out
push
data16
mov
dec
pop
mov
lahf
push
cmp
frstor
jb
iret
jg
stc
dec
jecxz
xchg
das
pop
mov
fidivl
xchg
loopne
cwtl
loop
cmp
hlt
sub
add
dec
and
adc
sub
jl
rorb
ret
incl
outsl
shlb
dec
mov
cmpsl
js
pusha
jnp
dec
adc
test
mov
sub
int3
mov
mov
rolb
cmp
cmc
push
pop
push
bound
or
adc
mov
fstpt
fidivl
push
pop
jecxz
dec
dec
sbb
out
jmp
fs
arpl
adc
lock
out
cmp
sub
xchg
into
xor
mov
jnp
jno
add
xor
or
mov
or
cld
mov
popa
daa
jae
and
sub
ja
shlb
cmp
cmp
mov
fisubl
or
sti
pop
cmpsb
or
sub
mov
inc
mov
ja
lahf
hlt
js
ja
cmc
sub
repnz
push
sbb
cmpsl
inc
and
sarl
fstpl
xor
pop
mov
jns
cmp
cmpsl
rorl
ret
je
das
gs
dec
out
inc
icebp
mov
mov
inc
rorb
mov
mov
cmp
push
dec
dec
inc
pusha
inc
add
or
mov
fildl
and
loop
in
je
gs
inc
out
mov
mov
push
inc
icebp
pop
jmp
rcpps
faddp
in
inc
pop
mov
jae
push
and
out
aam
push
adc
pushf
out
mov
add
bound
add
jnp
inc
adc
sbb
adc
adc
loope
fbld
push
int3
aad
dec
fbstp
sbb
cmp
repz
add
test
mov
ret
xlat
mov
dec
mov
les
mov
fisttpl
arpl
push
add
inc
sbb
test
add
jno
xchg
or
inc
push
push
sub
pop
mov
stc
rorb
ss
jle
inc
int3
call
cmpl
shl
lds
xor
and
dec
popf
insl
mov
call
mov
insl
add
adcb
xor
shll
dec
movl
or
mov
rcrb
into
js
xorb
sub
jbe
xchg
mov
push
jmp
and
aam
loope
stos
xchg
imul
inc
mov
je
jl
push
mov
stc
mov
gs
enter
sbb
jns
flds
test
add
loop
cmpsb
jmp
sub
sbb
jmp
pop
mov
and
adc
lea
mov
int
sti
movb
insb
xchg
mov
sub
and
cmp
shlb
in
imul
push
inc
jge
jo
mov
insl
pop
shrl
add
pop
mov
jno
xor
ss
push
in
mov
es
xchg
cld
fxch
inc
out
inc
popf
lods
repz
inc
or
dec
or
addr16
cwtl
xor
or
mov
mov
jnp
cmp
in
lea
or
mov
jno
in
test
outsb
jb
das
repnz
mov
outsb
mov
mov
sbb
aaa
pushl
cmp
inc
leave
xchg
fnsetpm(287
xor
test
pop
xchg
out
leave
icebp
out
mov
jle
inc
cmp
inc
mov
xor
inc
jp
mov
pop
lods
pop
cmpsb
mov
mov
mov
and
jnp
mov
push
cmp
pop
shrd
lcall
jns
shlb
push
mov
cmpsl
orl
loope
cmp
inc
ss
cwtl
add
fists
outsb
out
jp
xchg
leave
aaa
divb
rcrl
add
lahf
es
push
mov
lahf
iret
or
mov
xchg
xor
ret
sarl
int
mov
sub
lcall
cmp
and
xorl
cmp
xor
adc
xchg
icebp
fisubrl
loop
push
push
cmc
pop
pop
cmp
sbb
mov
sbb
mov
fdivrs
jne
lods
pop
fs
int3
inc
xchg
xchg
cmp
lds
sarl
cmc
fists
out
push
scas
lret
and
and
out
arpl
add
mov
pop
fmul
and
mov
push
pop
sub
pop
or
xchg
lcall
pop
movsb
imul
test
mov
mov
add
and
std
orb
ja
int3
fisttpll
push
cs
adc
inc
mov
cmpsl
xchg
mov
mov
xlat
shrl
out
ljmp
loopne
lret
aas
jecxz
shll
dec
cld
jbe
stos
ds
fadds
add
push
ljmp
lods
add
cmp
hlt
imul
jo
lea
por
dec
cltd
pop
add
repnz
pop
out
out
and
fdivrs
jb
push
loopne
and
cmp
push
sub
movsb
xchg
popf
rcr
movsb
pop
cmp
repnz
push
pop
mov
orb
mov
mov
lock
jecxz
inc
adc
imul
push
call
pop
rcrb
mov
ds
enter
mov
aaa
xor
leave
cltd
mov
addb
hlt
or
xchg
cs
cmpsl
ret
xchg
js
add
dec
rorb
sub
sbb
stc
out
pusha
lock
jo
pop
daa
jb
fldenv
push
sahf
adc
dec
mov
cmp
pop
rolb
pop
push
popa
mov
jle
cmp
lods
fcoml
repnz
das
arpl
mov
jp
push
dec
clc
daa
jle
shll
pop
mov
or
mov
out
testb
xchg
jno
mov
and
dec
adc
int3
adc
sahf
and
sub
xchg
adc
stos
pop
cs
sbb
das
dec
clc
stc
and
mov
push
es
fs
pop
sub
add
std
call
xor
cmp
add
lods
push
push
in
xchg
dec
lret
cltd
in
in
jl
dec
insb
call
adc
jg
inc
in
fcoml
jle
sbb
outsb
pop
dec
mov
sub
push
loope
pop
fucomip
arpl
idivl
icebp
cmp
or
repz
mov
jnp
sub
es
xor
test
not
mov
mov
jl
imul
mov
sub
sub
imul
fwait
add
int
in
fs
js
sar
call
adc
testb
rolb
xchg
xor
test
mov
sarb
mov
fadd
shrb
pop
sahf
or
sub
dec
aaa
stos
mov
jo
sub
lods
scas
stc
push
xor
hlt
mov
roll
js
and
mov
ficoms
rclb
lret
or
mov
outsl
fistl
push
push
mov
test
dec
je
cld
inc
jb
aaa
mov
js
loope
lods
insl
xlat
mov
push
pop
push
xor
cltd
pop
repz
in
mov
bound
outsl
sub
push
push
mov
xor
int3
mov
pop
fildl
ficoms
mov
adc
arpl
fbld
or
fdivl
sub
xor
lahf
push
popf
push
aam
dec
fildl
inc
mov
push
mov
mov
pop
xchg
imul
sub
cmp
jnp
inc
pop
test
out
mov
in
ret
pop
testb
in
pop
push
lcall
rcrl
push
aad
in
pop
cmp
push
xor
test
jmp
loope
js
aas
test
rorb
and
in
cmp
leave
pop
in
cmp
xchg
neg
inc
cmpsl
filds
push
xorl
fstpl
lret
sub
push
es
jmp
inc
inc
fwait
mov
out
popf
lea
cs
add
in
rorl
dec
cmpsl
push
inc
cli
sbb
jmp
sub
cwtl
rorb
imul
xchg
dec
jecxz
cmp
mov
loope
repnz
dec
imulb
cmp
loop
inc
fisubrl
xchg
mov
jl
adcl
loopne
pop
ja
rcl
and
inc
insl
and
dec
out
out
ds
dec
mov
lea
mov
dec
icebp
xchg
out
cmp
jl
or
mov
adc
push
mov
xchg
xor
cmp
pushf
je
push
adc
mov
push
adc
xor
adc
mov
movsl
call
adc
hlt
pop
jp
sbb
pop
xchg
repz
jl
cwtl
cltd
lods
jnp
sbb
mov
movsb
jecxz
cmp
sbb
sub
mov
sub
push
and
mov
jbe
adc
inc
sbb
hlt
test
and
addr16
movsb
jl
xor
movsl
daa
sbbb
insb
mov
aam
push
fnstenv
xchg
faddp
push
mov
fistpll
cld
mov
loopne
outsb
sub
adc
mov
aam
pusha
jno
inc
movsb
pop
push
dec
out
cmpsl
stc
dec
push
dec
jge
jnp
inc
js
jp
push
into
lea
aad
sub
pop
clc
loopne
adc
inc
cmpsb
call
sbb
fsubrs
sahf
scas
jg
adc
scas
jno
sbb
lock
call
loope
je
fsts
pushf
pop
clc
mov
mov
inc
or
fwait
xor
test
mov
pop
loop
add
adc
scas
data16
or
xchg
scas
jmp
int
jmp
mov
adc
mov
fsubs
mov
lock
movsl
jp
pmaddwd
xor
add
cmp
cmp
and
sub
test
sub
xchg
mov
xchg
loop
rcrb
dec
in
jp
inc
jmp
pop
mov
out
data16
sbb
and
xor
cmp
mov
dec
or
cmp
aaa
and
sub
nop
mov
mov
jle
out
cmp
sbb
shlb
mov
pop
push
in
xchg
push
lds
ds
lods
pop
jae
push
or
clc
and
movsl
rcl
mov
sbb
test
jge
sbb
pop
movsl
xchg
nop
inc
gs
cld
cli
pop
dec
xor
cmp
cmpsb
sbb
je
sbb
leave
fdivrp
jns
and
push
mov
arpl
sbbb
push
repz
fbld
out
lret
cwtl
ret
xor
sub
cltd
bound
xor
push
in
data16
lods
ret
push
enter
ja
scas
xchg
xor
arpl
jns
cmpsl
jnp
daa
fdivs
push
pop
rcrl
mov
negl
stos
leave
dec
xchg
cmp
mov
push
jge
fwait
dec
inc
mov
mov
stc
jbe
js
push
adc
pop
push
mov
lods
push
mov
rol
xorl
adc
aam
dec
or
cwtl
xor
xchg
or
in
jb
and
push
push
inc
orl
pop
outsb
addr16
std
inc
pop
in
add
jecxz
inc
pop
call
das
stc
xor
div
pushl
sbb
add
push
cmpsb
pop
inc
mov
inc
add
push
faddl
push
sub
xchg
int
dec
mov
cltd
cmp
arpl
decb
xlat
fnstcw
add
mov
cmpsb
mov
mov
xchg
pop
mov
repz
jge
aas
fdivrl
adc
loopne
outsl
cmc
mov
inc
hlt
popl
popf
xor
sub
ret
cltd
insb
loop
or
fbld
xor
negl
xor
jge
sub
push
adc
imul
loope
sbb
leave
cmpsl
dec
push
addb
xor
jmp
jb
inc
jmp
icebp
imul
inc
push
test
cmpsb
lahf
call
add
mov
xchg
insb
mov
fmulp
cmc
mov
adc
cmp
inc
sub
loope
mov
inc
or
std
mov
idiv
add
into
je
jb
loop
and
lret
push
aam
test
jae
rcrb
test
push
sub
jp
pop
jge
test
push
fidivl
imulb
dec
call
mov
dec
mov
fidivs
and
dec
stos
add
xchg
js
dec
pop
cmp
cli
into
cmp
aaa
fimull
push
int3
movsl
nop
inc
mov
rclb
rolb
sbb
mov
fidivs
dec
sub
sbb
lock
cmp
and
pop
add
pop
adc
movb
xchg
call
notb
out
jno
sub
xchg
stc
cmp
nop
aam
das
jns
std
and
dec
push
daa
shll
ljmp
imul
push
out
out
jg
jb
mov
cmpsb
inc
and
outsl
push
movsl
xor
xor
jle
adc
mov
std
jo
and
sbb
in
mov
xchg
stc
fwait
scas
push
cmp
dec
out
data16
pop
mov
in
sahf
mov
inc
data16
mov
mov
sar
repnz
push
loope
pop
sbb
mov
pop
push
flds
xchg
fcomi
mov
insb
sub
inc
pavgb
push
push
cmp
fdivl
mov
push
dec
mov
and
sub
sub
mov
push
lds
loopne
lods
sti
cmpsl
xchg
ja
mov
dec
dec
mov
test
inc
jmp
jmp
inc
insl
pushf
xchg
adc
pop
loopne
cmc
mov
add
jmp
les
sbb
dec
lock
nop
mov
xor
xchg
bound
pop
mov
and
or
xor
inc
adc
in
cld
outsl
out
sbb
dec
xorl
and
frstor
xor
pop
mov
mov
jae
add
inc
sub
aam
outsb
psubsb
lds
push
mov
or
and
sar
xor
stos
dec
jae
push
es
popa
or
insb
sbb
sbbb
lods
push
add
push
push
push
cld
pop
push
jp
lock
pop
ret
outsb
add
mov
sub
or
xchg
inc
scas
enter
mov
jecxz
sub
out
pop
mov
cmp
and
mov
ret
mov
ja
int
xor
xlat
addr16
jb
and
aad
ja
push
sarl
stos
mov
jp
mov
cmp
jb
icebp
lahf
xor
dec
add
test
push
dec
fimuls
jbe
xor
fsubrl
xchg
sub
fists
fs
sub
cwtl
xor
sub
out
mov
jno
jl
push
sbb
pop
sahf
mov
adcl
imul
insb
stos
ja
scas
int3
mov
pop
mov
inc
idivb
or
aad
cmp
in
lea
imul
or
imul
cmpsb
js
dec
lahf
shll
mov
dec
bound
push
cmp
popa
dec
iret
add
loop
jl
outsl
lods
fs
inc
add
mov
sbb
aam
pop
ret
sti
xchg
jl
in
push
les
mov
adc
in
sub
cs
in
xchg
fs
clc
xor
gs
loopne
pop
mov
jns
popa
mov
mov
cltd
add
iret
jmp
shlb
sti
pop
add
sub
hlt
popa
mov
sub
jo
jecxz
out
or
scas
mov
push
jo
push
push
push
repz
xor
loope
push
fidivrs
into
icebp
fsub
jb
cwtl
icebp
mov
scas
xor
cmp
sub
out
jecxz
imul
lods
test
daa
push
cmovns
pop
ljmp
jecxz
mov
add
std
int
jp
clc
imul
xor
jae
ds
pop
xor
aam
out
mov
mov
mov
pusha
pop
adc
mov
sub
inc
js
xor
into
outsl
adcb
or
mov
je
pop
fdivr
lcall
cmc
push
adc
adc
insb
ret
js
cltd
fistl
orl
fcoml
jle
das
mov
xor
notb
xchg
jbe
pop
cwtl
jne
adc
sub
out
mov
jg
mov
inc
movsb
pop
jecxz
jl
xchg
outsb
sub
rol
enter
mov
jmp
enter
sbb
adc
pop
movsb
xchg
sub
dec
icebp
and
test
pop
sub
ret
dec
mov
sub
stc
push
inc
cmp
xor
jl
movsl
jecxz
out
or
popa
jmp
xchg
pop
or
imul
xchg
mov
sub
or
out
outsl
add
sub
ja
add
mov
cld
adc
das
and
fdivrs
adc
jge
mov
loope
shr
cmpsb
sbb
and
sti
inc
push
je
inc
out
push
push
and
jg
lcall
lahf
clc
fldlg2
jae
out
aam
pop
xchg
xor
pop
mov
xchg
cmp
or
mov
imul
dec
cmp
popa
repz
inc
fidivs
testb
icebp
out
fisttpl
jg
inc
in
out
mov
aad
je
ljmp
lods
mov
fwait
test
sub
lret
int3
and
les
ljmp
ds
loop
pop
cs
ret
jo
iret
lds
lds
inc
fildll
and
dec
cmp
mov
dec
add
loop
mov
jo
push
ds
xchg
jle
xor
adc
in
mov
or
pop
mov
xor
xchg
dec
xchg
xchg
fisttpl
push
and
mov
mov
out
shrb
mov
enter
and
icebp
push
ficompl
ds
jo
mov
subb
cmp
xchg
pop
dec
inc
adc
pushf
and
xor
nop
mov
cmp
or
sub
loope
cmc
inc
nop
cmpsl
ffreep
aam
dec
inc
cmpl
enter
push
sarl
xor
and
mov
jmp
jg
pop
cmp
cmp
xorb
int
lea
div
and
xlat
loope
mov
int3
lods
es
push
sub
stos
hlt
mov
cwtl
sub
sub
scas
sub
cs
popa
into
jmp
jmp
or
xor
push
adc
out
out
push
mov
mov
js
in
mov
dec
test
bnd
ret
dec
outsl
jge
int
and
cmpb
mov
sub
jge
movl
stc
xor
lret
push
sbb
adcb
inc
dec
hlt
out
xor
jns
mov
nop
cmp
or
pop
mov
les
mov
adc
fs
pop
and
xchg
dec
adc
jp
dec
lods
pop
and
push
pop
fstpt
cmp
cmp
xchg
in
ror
jbe
jo
lods
rorl
dec
xor
int3
mov
and
lds
gs
into
push
scas
mov
roll
je
pop
mov
cmpsl
mov
push
cli
popa
xlat
or
rolb
and
mov
push
out
sbb
jecxz
or
outsb
pusha
jge
dec
push
jb
push
cmp
jns
sub
mov
cmpl
xchg
fcomp
mov
mov
jnp
adc
das
popa
imul
hlt
in
jecxz
out
sti
hlt
ljmp
imul
xor
int
outsl
dec
adc
aas
xor
movsl
xor
or
adc
mov
xchg
pop
dec
cmpsl
cmc
jnp
sar
in
scas
pop
xchg
pusha
fidivs
mov
adc
pop
inc
xchg
es
jmp
mov
fisttpll
test
mov
lret
xor
mov
xlat
pop
jb
outsb
xor
ficoms
mov
out
sub
add
pop
mov
test
xchg
sbb
popa
adc
aad
shlb
cmp
cmc
incb
scas
mov
mov
xchg
insb
fcmovb
adc
and
arpl
adc
cld
mov
out
faddl
and
xor
dec
imul
bnd
cmovae
pop
sub
mov
mull
into
mov
pop
push
inc
cmp
addb
cltd
rolb
inc
jb
xlat
pushf
test
mov
or
test
push
icebp
out
test
push
mov
sub
or
pop
test
orb
aam
push
push
push
aam
add
int
mov
or
jbe
loope
sub
pop
cmpsb
and
xchg
inc
shl
dec
pop
jbe
mov
xchg
adc
int
cld
xor
mov
fsts
movsb
into
ljmp
adc
jnp
and
popa
jmp
jo
xchg
or
addr16
jg
test
out
ja
cli
fcmovu
or
dec
mov
inc
mov
and
daa
mov
insl
or
sbb
loope
divl
imulb
xor
cmp
nop
movsb
mov
mov
mov
xchg
movsb
fisubs
jae
dec
mov
sbb
sbb
lahf
cmc
insl
call
add
jae
push
mov
cmpsl
pop
jns
mov
mov
das
fbld
pop
flds
push
mov
dec
aam
jno
push
pop
aas
inc
jecxz
and
xchg
stc
lret
jns
push
adc
hlt
cmp
mov
adc
stc
adc
sbb
into
nop
arpl
dec
jle
orb
fsts
sbbb
lods
cs
fyl2xp1
jge
xor
lcall
or
jg
loopne
push
adc
incb
pop
jns
or
dec
movsb
xchg
mov
fs
adc
into
sahf
or
mov
aas
out
lea
dec
bound
enter
loope
dec
jle
lds
popa
fstps
popf
xor
jge
push
jnp
insl
lods
lds
push
pop
push
inc
mov
daa
mov
jmp
xor
mov
fwait
cmp
ss
sahf
es
jno
jb
add
or
xchg
sbb
xchg
push
popf
inc
mov
icebp
sbb
push
mov
fwait
imulb
adc
outsb
mov
jno
push
stc
or
inc
sub
repz
adc
lods
jae
inc
dec
pop
lcall
xor
lods
loopne
shrb
lock
aaa
xor
and
push
xor
and
dec
hlt
loop
dec
lods
jl
shl
aas
aaa
or
sarl
jb
mov
in
dec
mov
ret
cmpb
xor
movsl
cmc
test
out
ret
sbb
stc
in
lods
jge
loopne
mov
lret
push
nop
jb
test
push
add
cmp
add
stos
scas
jno
push
sarb
mov
jl
mov
xor
cmp
scas
sarb
pusha
push
push
jbe
pushf
or
hlt
ja
aaa
cwtl
mov
inc
aaa
and
gs
pop
push
mov
inc
shll
mov
pop
jmp
push
je
shld
cld
ror
flds
inc
inc
adc
cli
xchg
pop
push
mov
mov
push
bound
dec
push
push
xor
inc
pop
daa
cmpsw
push
or
icebp
ss
decb
mov
jmp
movsl
dec
adc
mov
adc
push
pop
sbb
fsubr
cmp
adc
icebp
lock
adc
div
gs
pop
mov
mov
lret
ficoms
add
inc
std
cld
sarb
dec
fsub
sub
pop
mov
subl
adc
adc
stos
div
mov
mov
or
pop
add
bnd
pop
adcl
jmp
or
ja
mov
jns
adc
mov
cld
hlt
aam
sbb
xchg
adc
fstpt
loop
and
add
aad
enter
pop
cmp
mov
xor
push
or
iret
repnz
jno
mov
icebp
ds
aam
decl
add
lret
addr16
mov
mov
fimuls
bound
xchg
mov
out
and
mov
addb
xchg
xchg
inc
cmc
mov
push
inc
stc
inc
clc
arpl
and
adc
daa
shlb
inc
push
popf
or
adc
dec
das
stos
push
in
loop
dec
out
les
aas
ss
aas
movsl
push
jne
mov
ret
push
jno
jg
xor
sbb
mov
jge
lods
out
out
das
pusha
mov
into
scas
daa
ret
das
mov
push
pop
dec
fs
or
popl
outsb
movsl
mov
fs
mov
push
aas
scas
push
xlat
sub
daa
dec
stc
out
aas
add
in
add
enter
imul
sti
xchg
mov
jo
dec
nop
cmpsl
and
daa
jbe
enter
mov
lea
dec
lcall
test
cmp
xchg
movlhps
adc
dec
pop
mov
xchg
sbb
in
pusha
lea
mov
push
bound
popf
lahf
out
and
cmp
loopne
jmp
and
arpl
or
xchg
fdivrs
xor
mov
jae
les
pop
push
pop
and
mov
xchg
test
rcrb
lret
imulb
sub
ds
mov
pop
sbb
add
mov
movsb
cwtl
in
pushf
lret
or
in
xor
mov
mov
dec
sbbl
pop
test
xchg
add
rcrl
mov
adc
mov
fs
popa
movsb
inc
or
cmp
mov
pop
imul
mov
sbb
punpckhbw
popa
lcall
std
cmp
jecxz
mov
sub
or
cmp
inc
ja
xchg
es
mov
pop
out
xchg
outsl
push
pusha
pop
hlt
dec
or
imul
cmp
adc
cmp
dec
je
int3
pop
pop
imul
inc
mov
fiaddl
aas
mov
fucomp
sub
lods
pop
sarl
enter
sbb
push
sub
mov
pop
or
arpl
mov
test
pop
ljmp
shrb
mov
add
js
sbb
rcrl
or
ficoms
xlat
sbb
test
dec
cmpsb
inc
jecxz
cld
xlat
and
fdivr
daa
sub
ret
out
popf
jmp
add
les
out
pop
notb
xchg
dec
mov
std
lods
mov
inc
inc
jne
loope
xchg
cmovne
inc
sub
int3
divb
fsubl
dec
jmp
mov
cltd
bound
iret
out
jae
cmp
fidivrl
imul
jb
dec
lret
hlt
cmpsl
imul
xchg
mov
push
jp
lcall
mov
loop
push
push
jo
pop
xchg
les
fistpl
inc
sbb
pop
icebp
mov
xchg
xchg
or
sbb
xchg
or
loopne
fisttps
dec
imul
out
out
mov
insb
ss
nop
leave
push
inc
test
jp
xchg
lret
fucomi
ds
xchg
adc
enter
or
xor
ljmp
sbb
movsb
and
and
xor
add
push
mov
xor
cmp
das
push
push
lahf
fcomps
dec
js
lcall
cmp
lds
mov
jns
sub
ret
mov
lahf
or
fcmovbe
sbb
mov
ds
loop
subl
and
sub
pop
dec
pop
add
mov
repz
xor
push
int3
adc
scas
push
add
jno
add
mov
and
arpl
out
lret
ret
xor
pop
xchg
mov
ret
push
movsb
or
inc
jl
in
mov
pop
stos
jbe
jmp
cld
clc
loopne
lret
mov
nop
adcl
iret
or
mov
xor
fs
xor
aaa
les
arpl
pop
les
sub
ljmp
out
add
xchg
xchg
lods
jbe,pn
sbb
pop
sub
ss
rolb
fwait
out
loopne
cmp
cmp
sti
aaa
mov
fists
testl
outsb
adc
scas
test
xchg
xchg
sub
int3
and
xchg
inc
fidivrl
pop
dec
pop
add
pcmpgtw
push
cmp
sahf
xor
push
outsl
ljmp
jecxz
lds
mov
fwait
mov
jno
add
int3
cmp
adc
and
sub
xor
push
icebp
lahf
and
testl
cmp
cwtl
into
imul
dec
lret
in
insb
dec
and
aas
jbe
aas
xor
pop
inc
cmp
add
jg
sbb
cli
daa
loop
sar
cmp
inc
pop
add
cmc
fstpt
in
sub
jecxz
in
arpl
cmp
adc
in
xchg
xchg
inc
sbb
or
and
cmp
movsl
es
ljmp
or
fistpl
inc
int3
sbb
in
push
jp
loopne
jns
mov
js
sub
cmpl
or
push
leave
adc
adc
in
mov
rorl
push
and
adcl
mov
sti
lods
jmp
push
in
and
or
hlt
addr16
jg
shll
lds
xchg
inc
shl
inc
sti
cld
mov
inc
xchg
sub
ret
repnz
les
and
in
sub
sbb
std
popa
pop
add
pusha
sbb
add
add
dec
jne
ret
dec
and
sub
stc
ds
dec
adc
mov
andb
sub
push
shlb
pop
clc
jp
dec
xor
cmp
in
popa
push
call
lds
lods
clc
mov
cmc
sub
cmp
xor
mov
mov
or
sub
mov
xchg
push
sahf
jb
jl
out
push
sub
pop
hlt
sub
push
adc
cmp
les
dec
sahf
inc
mov
add
sub
jnp
nop
arpl
jmp
xor
jne
cmpsl
xchg
lods
push
arpl
ss
mov
mov
inc
add
xorb
adc
mov
jbe
inc
test
jno
pop
sub
xor
xchg
aam
lret
or
sbb
push
aam
lahf
mov
cmc
sub
adc
loop
cwtl
add
mov
mov
enter
push
rorl
lret
jp
pushf
call
pop
push
mov
outsl
fildl
loop
xchg
xchg
add
sbb
jmp
ret
xchg
and
inc
inc
jp
xchg
dec
pop
aad
fisubrs
cli
ja
inc
sbb
cli
mov
cmp
fxch
xchg
bound
stos
lea
push
mov
jae
imul
sbb
outsl
push
or
popa
sarb
push
cld
pop
dec
sarb
or
movsb
and
imul
ljmp
adc
xchg
mov
rcrl
xor
sbb
dec
inc
pop
and
xchg
pop
leave
js
jne
pop
pop
inc
mov
or
repnz
jmp
sub
fdivrs
push
sbb
dec
mov
mov
jo
xor
mov
testb
hlt
push
enter
xchg
xor
mov
inc
push
mov
lods
daa
out
jnp
push
push
cli
movsb
xor
sbb
hlt
cmovp
mov
xadd
add
jle
xor
in
xchg
push
xchg
push
addb
adc
insl
push
xor
int3
fsubr
rolb
push
pop
add
and
cmp
adc
sbb
dec
mov
popa
imul
mov
inc
pushf
push
shrb
pop
xor
fnstsw
xchg
test
sub
dec
out
ret
sahf
enter
add
les
dec
jmp
js
test
inc
adc
inc
dec
popa
mov
lahf
imul
adc
xchg
lea
loope
data16
add
push
int3
movsl
sub
test
lods
jb
lea
or
dec
loopne
je
cmpsl
xchg
sub
ja
mov
mov
popa
pop
sub
mov
out
out
lcall
mov
ficoms
cmp
inc
out
idiv
push
fdivrl
cmp
popa
sahf
xchg
aaa
cmpsl
test
scas
loopne
or
sbbl
cld
pop
ret
repnz
stos
insl
leave
xchg
push
inc
push
cmp
shll
jno
xor
inc
cmp
jo
mov
pop
and
mov
lcall
icebp
push
or
test
js
push
sub
dec
dec
cmp
jp
notb
int3
mov
xor
mov
or
xor
pusha
sar
sti
std
adc
dec
cmc
daa
xor
add
ret
inc
js
xlat
xor
std
mov
or
push
mov
and
inc
stos
jb
mov
or
xchg
adc
jno
inc
jge
xchg
loopne
aad
aad
bound
lods
ret
cmp
and
push
mov
mov
ja
push
sub
roll
subb
sbbb
lods
aas
sbb
dec
mov
leave
mov
test
fucomip
mov
in
shll
pop
mov
aad
cmp
pop
push
stos
dec
xchg
push
in
pop
add
bound
adc
push
int3
ljmp
mov
sbb
into
mov
xor
sbb
aaa
leave
fnstcw
hlt
jb
jle
mov
push
movb
and
aaa
jno
fstps
sub
stc
jo,pn
inc
mov
push
or
pop
les
or
or
xor
mov
hlt
inc
sub
and
push
jno
insb
jne
mov
add
or
fidivrl
sub
imul
jp
fldt
push
jo
dec
push
inc
std
sbb
and
adc
and
test
jns
sub
jo
into
push
pop
sbb
movsb
in
popf
fs
push
sahf
popa
add
push
cmp
andb
adc
sub
test
jle
repz
cli
lea
inc
mov
sub
movq
lea
pop
mov
out
jbe
ret
dec
or
mov
les
mov
fldenv
mov
imul
sub
xor
xchg
int
ret
testb
inc
pop
and
outsl
sbb
cmp
sarl
aaa
outsl
aaa
pop
in
outsl
xchg
arpl
pop
inc
das
mov
mov
xlat
jg,pn
xor
mov
cmp
or
nop
mov
pop
pusha
jmp
test
xor
jl
js
xchg
imul
int3
pop
shr
sbb
sub
mov
sub
or
pop
xchg
mov
ret
cmc
loopne
inc
sbb
pop
pop
insb
cmp
and
rolb
repz
cmp
test
ficomps
lahf
in
sbbb
xchg
outsb
push
fwait
outsl
popf
inc
int
loop
adc
pop
adc
shr
xchg
jmp
dec
addr16
xor
or
sub
int
ror
mov
jno
dec
sti
divb
cld
or
shrl
cmp
sti
in
push
mov
mov
adc
into
pusha
pop
pop
cmpsb
jbe
out
out
rorl
push
jno
enter
push
lock
inc
test
mov
jns
pop
nop
xchg
inc
inc
lds
cwtl
das
leave
dec
sahf
test
dec
sub
push
test
cmc
ss
dec
lds
mov
jne
dec
cmp
dec
or
jbe
pop
lock
xlat
sbb
or
test
or
lock
enter
sub
test
xor
ret
jo
repnz
push
push
out
arpl
xchg
jle
pop
ret
cmp
shll
popf
jbe
mov
xchg
jecxz
push
sbb
jmp
and
mov
mov
inc
push
push
pop
orl
push
jmp
mov
in
push
outsl
pushf
mov
jg
mov
mov
or
lret
add
and
and
and
pop
adc
xor
xchg
lahf
lea
rorl
pop
dec
mov
xlat
xor
out
push
or
ds
bound
in
lret
int
ret
jecxz
aad
daa
and
jne
cmovp
cmp
or
into
jae
mov
mov
or
repz
mov
mov
sahf
iret
dec
fs
xchg
add
add
std
test
call
mov
std
and
xlat
test
lds
das
push
fucomip
test
mov
mov
mov
inc
mov
xor
inc
dec
lahf
roll
push
inc
mov
leave
js
add
fs
adc
dec
lea
mov
adc
sbb
aas
ss
ss
adc
jl
jge
xchg
pop
popf
xor
cmp
gs
bound
in
push
lret
or
xchg
bound
in
push
shlb
push
sbb
xchg
sub
rclb
cmpsl
scas
mov
sbb
fstpt
add
aas
ljmp
adcb
testl
jl
sarb
cmpsb
pop
mov
rolb
nop
jg
xchg
inc
adc
scas
loopne,pt
push
jle
lahf
out
es
lret
cmp
int
inc
mov
inc
cmp
cli
mov
fsubr
dec
xor
xor
retw
xor
call
mov
mov
or
in
test
or
dec
pop
pop
or
popf
fidivs
dec
iret
inc
sbb
jae
sbb
es
decb
movsl
mov
sbb
push
xor
lock
jno
jg
add
inc
mov
xchg
mov
pusha
lock
jecxz
test
push
andb
push
jmp
mov
nop
aam
or
sub
lret
mov
add
insb
and
mov
ret
js
repnz
stos
lahf
inc
pop
or
rcrl
ficomps
gs
mov
or
sub
xor
push
jns
enter
out
cltd
incl
lock
popf
xor
and
dec
xchg
rolb
adc
ljmp
mov
cmp
insl
repnz
sub
push
pop
stos
cmpsl
cmpsb
sub
mov
push
imul
mov
mov
pushf
dec
mov
test
cs
push
push
inc
push
nop
jbe
cmp
pop
xchg
insl
jo,pn
xor
xor
lock
jl
mov
jnp
jno
dec
sbb
or
shl
sbb
add
sbb
je
out
mov
sahf
xchg
jno
or
cltd
mov
leave
or
mov
lret
out
call
mov
loope
push
fmull
jnp
andb
fldenv
jmp
and
sahf
mov
fisttpll
cmp
cld
xchg
pop
inc
lcall
imulb
sbb
adc
push
mov
dec
and
mov
add
sti
sub
ja
push
mov
add
das
call
test
dec
inc
jle
or
shrb
dec
rclb
mov
add
xor
pop
pop
mov
repz
cmp
ljmp
pop
sub
ret
mov
sub
in
in
arpl
mov
xchg
dec
and
js
xor
push
lea
fiaddl
cmc
je
push
sub
xchg
mov
cmp
pop
pop
lret
stos
add
popa
sub
cli
dec
push
inc
cltd
andb
mov
or
inc
imul
adc
push
mov
outsl
aam
out
mov
jle
push
adc
xchg
add
push
inc
jmp
adc
int3
into
fsubrl
jle
stos
push
clc
and
decb
in
nop
imull
into
and
add
push
xor
in
fyl2x
jge
or
imul
cmp
mov
sar
popl
xor
sbb
fildl
or
pop
sbb
cmp
ja
push
movsl
inc
lea
jp
andnps
or
xchg
jb
jp
shlb
inc
inc
and
cmp
jmp
roll
cmp
cltd
adc
push
test
aam
pop
inc
in
aad
mov
dec
pop
scas
shl
clc
test
mov
mov
jl
test
push
out
sbb
cmpsb
fs
mov
lock
mov
in
scas
jg
pop
jae
sbbb
jns
lea
pushf
lcall
push
dec
xor
jbe
sti
repz
pusha
dec
out
outsb
jmp
fcompl
fistl
add
hlt
ja
inc
cmp
push
cmp
xchg
sarl
outsb
pop
repz
adc
jo
js
stos
mov
test
nop
adc
lods
sbb
mov
xchg
push
xor
outsb
imul
dec
add
aad
popa
cmp
jo
imul
enter
jne
push
stos
cmp
xlat
or
pop
sarl
xchg
sub
push
xlat
les
mov
mov
lcall
jecxz
icebp
inc
mov
imul
rclb
xor
ja
outsb
call
andl
pop
jae
and
jg
ljmp
repnz
mov
lods
les
mov
in
xor
dec
dec
mov
rorb
aas
sub
inc
mov
xchg
bound
mov
repnz
loopne
aaa
shll
cmpsl
shl
dec
insb
jg
mov
bswap
add
dec
into
lret
call
lods
outsb
test
gs
mov
mov
pop
mov
jbe
cwtl
ljmp
lock
mov
add
hlt
mov
add
cmpsb
test
js
fwait
negl
imul
sbb
xor
outsb
fisubs
or
mov
jl
adc
jbe
push
sub
push
cmp
mov
rorb
shr
mov
lock
sbb
adc
les
insb
and
xchg
mov
mov
stos
jo
mov
xchg
rolb
scas
cmpsl
push
add
scas
xchg
add
stos
imul
int3
add
jno
add
jno
nop
add
outsb
or
movsb
jnp
in
dec
arpl
test
insl
add
cmp
je
fcomps
mov
push
daa
mov
push
fld1
test
xor
xor
push
and
cmp
pop
aas
cs
xchg
mov
lock
std
inc
or
ljmp
popa
adc
jo
xchg
mov
and
adc
dec
push
push
dec
xchg
pop
add
aas
adc
inc
rorb
jo
insb
push
inc
mov
jnp
mov
xchg
mov
fdivl
sub
xor
sub
xchg
jl
mov
insl
dec
xor
movsb
sub
andl
dec
pop
imul
out
cmpsl
test
arpl
loop
sti
imul
cmp
mov
xor
rcrb
push
adcl
adc
add
push
arpl
loope
adc
add
inc
jae
add
jb
sbb
xor
aad
push
into
push
out
inc
orl
xor
add
add
ret
xor
fwait
loopne
jo
sar
or
mov
cli
sub
mov
arpl
bound
sti
cmpsl
lret
or
int3
xchg
push
cmp
jno
mov
sti
in
jne
lods
pop
pop
mov
in
movsl
xchg
scas
adc
mov
xlat
pop
aas
cwtl
push
test
add
cmp
push
pop
call
hlt
adc
dec
adc
jmp
ja
mov
cmpsb
pop
arpl
or
sbbl
jnp
push
add
popf
ret
sahf
xchg
mov
cmp
cmp
jl
push
mov
pop
push
lods
cmp
push
add
cmpsb
jbe
push
out
je
xchg
jbe
add
jge
js
mov
cld
add
cmp
aad
loopne
jns
out
jg
test
mov
xchg
outsl
filds
or
add
add
mov
nop
imul
mov
adc
movsb
jge
enter
std
sahf
inc
adc
das
fwait
push
adc
sub
inc
mov
in
lret
mov
cli
imul
arpl
scas
mov
cltd
xchg
sti
mov
loop
inc
jno
lods
push
jle
fdivrs
mov
xchg
cmp
inc
aam
push
out
push
cltd
ds
mov
mov
repz
sub
mov
push
sbb
fincstp
sub
inc
nop
lds
fsubs
add
adc
add
mov
xchg
dec
cs
insb
call
push
pop
lret
mov
add
dec
lock
and
mov
inc
stc
repnz
dec
loope
mov
pop
or
pushf
gs
cmc
aad
jmp
sub
push
cmp
push
xor
sbbl
mov
mov
sub
mov
jp
loope
imul
sbbb
fiadds
xor
call
mov
mov
push
call
insb
popa
cmovns
repz
mov
mov
stos
test
ret
js
adc
fdivrl
xor
mov
jecxz
scas
cmp
das
in
pop
in
xchg
mov
xlat
shll
imulb
ret
shlb
mov
jl
loop
std
in
fwait
daa
loop
push
andl
mov
lods
cli
add
daa
push
scas
ret
push
jge
inc
movsl
repz
sbb
ljmp
sbb
shll
pushf
shl
leave
sub
mov
in
pusha
arpl
jno
add
popf
in
jae
aad
lret
popa
std
sarb
mov
imul
popf
push
xchg
or
ss
out
out
adc
jb
fisubrl
jns
cmp
jecxz
out
mov
mov
daa
ret
adc
test
adc
xchg
add
pop
leave
cmp
test
pop
push
xchg
inc
repz
adc
push
iret
or
loop
pop
dec
adc
mov
add
lods
pop
iret
xor
sbb
sub
mov
rcll
lods
xchg
mov
stos
daa
jnp
dec
mov
les
or
shl
mov
sub
cmp
mov
rcrl
jne
rorb
cmp
cmp
insl
push
bnd
rcrb
cwtl
lcall
jnp
dec
scas
ljmp
jne
sbb
loopne
scas
repz
add
inc
pop
push
push
or
dec
mov
jl
fwait
inc
mov
inc
xchg
pop
adc
into
fwait
gs
sub
mov
aad
movhps
fstps
jmp
adc
inc
jno
add
repnz
lea
cld
xor
mov
fdivl
and
sbbl
add
pop
add
cmp
or
out
mov
sbb
fs
cld
and
dec
mov
dec
inc
pop
mov
fidivrs
fistpll
and
dec
sub
cmp
gs
aam
sbb
or
cli
loop
or
sbb
xlat
mov
notl
or
adc
pop
dec
xchg
sbb
pop
fs
pop
lret
xchg
imul
add
inc
jbe
repz
add
mov
ficoms
sarl
in
clc
popa
outsl
lods
adc
addr16
push
fwait
adc
xchg
ss
sti
lahf
and
out
add
xchg
inc
pusha
loop
inc
in
cmc
testb
lods
sbb
enter
clc
daa
fnsave
sub
dec
test
push
push
shll
inc
lahf
mov
adc
repz
mov
push
mov
rcll
loop
push
xchg
mov
popa
movsb
inc
pop
outsl
xchg
cmp
leave
jno
out
fs
cmpsl
push
repz
add
int3
pop
aad
daa
js
sbb
out
leave
xchg
incl
jne
jmp
jmp
orl
cwtl
inc
sti
sbb
sub
lahf
add
sahf
push
adc
or
add
movsb
jnp
jns
xchg
test
out
cmp
mov
sbb
jo
shlb
or
bound
jge
inc
sbb
inc
insb
sbb
adc
loop
sbb
and
pop
and
and
std
scas
fiadds
ret
imul
les
idivb
and
mov
cmp
xchg
push
push
cmpsl
bound
push
out
shll
or
enter
push
mov
mov
mov
test
lret
mov
sub
hlt
add
push
or
bound
incb
mov
lods
scas
frstor
or
jle
pop
out
ret
mov
pop
push
shlb
sub
sbb
dec
push
iret
sahf
int
or
in
lahf
les
push
jge
xchg
mov
mov
imul
mov
jecxz
mov
sub
aam
mov
cwtl
jge
adc
icebp
cmpsl
stos
cld
mov
aas
cmp
stos
std
jns
or
mov
scas
ficoms
push
seto
jnp
imul
fstpt
inc
sub
into
mov
cld
sub
ds
pop
jae
add
mov
inc
inc
mov
xchg
xchg
ljmp
ret
mov
add
test
roll
loopne
dec
or
jp
jns
cmp
data16
lahf
sbb
jmp
or
jns
jnp
gs
lret
dec
jecxz
fnstsw
call
push
add
loopne
lds
fnstenv
add
ss
ret
nop
lahf
orl
jae
in
sub
add
mov
in
out
push
je
adc
dec
jecxz
int3
push
mov
cmp
sarb
clc
add
out
xor
xchg
aad
leave
call
aaa
xchg
jns
mov
fcoms
mov
outsb
pushf
shll
clc
inc
repz
jne
fists
add
mov
dec
fnstenv
sti
fsubl
sti
add
fistps
lea
mov
mov
je
lahf
adc
lock
jbe
mov
cmc
mov
call
mov
in
cmpsb
in
leave
push
sub
jecxz
mov
inc
test
adc
hlt
push
push
into
rcrb
test
mov
sub
xchg
pop
out
arpl
and
jns
addr16
loop
in
add
or
lods
ja
inc
iret
aaa
pop
pop
xchg
in
inc
adc
pop
xchg
mov
pop
inc
and
mov
out
push
add
mov
stos
out
and
iret
adc
testb
and
mov
fisubs
icebp
mov
mov
jmp
iret
pop
push
push
inc
jp
test
pop
jns
das
ja
push
movsb
enter
or
jp
xchg
pop
cmpsl
pop
aaa
fcoms
pop
outsl
mov
jp
addr16
mov
stos
mov
cld
dec
sub
aad
mov
lock
scas
repnz
pushf
mov
pop
repz
push
pop
into
stos
pushw
dec
outsl
pop
in
fisttps
arpl
leave
mov
out
and
inc
out
xchg
inc
push
rcrl
in
ret
lahf
cmp
mov
sub
adc
mov
es
jno
hlt
in
loop
mov
jbe
and
adc
dec
call
out
loope
mov
ljmp
mov
in
outsl
das
or
scas
pop
or
and
fsubl
repz
fsts
rclb
lret
rcr
mov
ljmp
in
pop
or
push
mov
pop
test
in
lahf
sarl
and
add
gs
addb
jmp
mov
lret
mov
imul
mov
xchg
std
mov
popa
xchg
sub
loopne
push
daa
es
popf
into
popa
fidivrs
ja
insb
out
cmp
lods
sub
mov
inc
cmp
minps
imul
lret
dec
in
in
jl
aaa
popa
cwtl
pop
ljmp
xchg
mov
and
subl
loop
lcall
inc
loope
cmpsb
loop
push
mov
sub
sub
adc
lds
push
adcl
mov
pushf
add
xchg
push
push
jb
jae
arpl
mov
lods
push
bound
or
mov
push
cmpsl
cmp
mov
into
mov
mov
or
cwtl
pop
inc
out
push
sub
out
insb
mov
fnstcw
pop
std
mov
aas
jne
movsl
insl
int3
mov
ss
cs
push
push
rorl
shlb
and
repnz
mov
scas
mov
jne
and
mov
jg
mov
lret
jge
hlt
push
jle
xchg
bound
and
xor
sbb
and
pushf
pop
ds
adc
outsb
icebp
xchg
adcb
iret
or
mov
pop
stc
in
sub
ljmp
mov
mov
push
out
cmp
aam
insb
and
mov
push
mov
data16
nop
lcall
adc
lds
ret
mov
bound
push
pop
push
pop
add
xchg
push
adc
cmc
mov
pushf
mov
in
fdivrl
shrb
dec
jg
xor
sbb
in
popa
push
mov
je
adc
jmp
sbb
sbb
or
in
mov
add
test
cmp
jo
loope
or
fwait
bnd
sub
inc
cs
dec
sbb
xor
pop
aaa
push
cmc
pop
sub
xor
leave
dec
leave
lret
push
imul
mov
add
mov
push
loope
lcall
sub
cmovne
xor
mov
lds
ss
movsb
scas
ret
push
aam
jp
inc
jmp
pop
pushf
push
cmp
or
mov
lock
mov
std
mov
out
rcr
std
movsb
mov
push
cmp
jmp
cltd
sahf
push
ds
jo
push
jo
push
jbe
out
dec
cld
pop
imul
dec
lcall
fcom
cwtl
jae
pop
inc
dec
sbb
shl
aam
popa
adc
pop
jmp
testb
idivb
dec
mov
mov
mov
lds
push
fs
mov
sbbb
daa
xchg
lret
inc
popf
insl
jecxz
dec
mov
jle
out
mov
cld
stc
lcall
scas
xor
roll
mov
mov
push
or
or
mov
sbb
add
arpl
dec
ds
xchg
inc
icebp
pop
pop
popa
lahf
ss
popf
test
mov
outsl
loopne
inc
aad
add
movsl
dec
inc
stos
dec
add
testl
adc
sbb
movsb
push
or
and
pop
jle
sbb
cmc
push
push
pop
scas
repnz
fwait
lret
inc
sbb
aaa
rorb
repnz
fdivrl
mov
insb
and
adc
mov
mov
cli
mov
enter
or
jns
adc
loope
mov
mov
and
add
idivb
sub
xchg
icebp
aaa
push
jns
scas
mov
negl
rcrl
fcoml
or
pushf
pushf
fcoml
movsb
fldlg2
jo
dec
cmp
popf
in
pop
inc
jg
ljmp
sub
pusha
mov
pop
push
sub
add
hlt
cmp
dec
xlat
repnz
add
out
popf
into
xlat
inc
mov
ja
cmovge
test
pusha
add
stos
aaa
cmp
int
clc
shr
cmpsl
popa
or
cwtl
inc
lods
loopne
nop
jmp
or
pop
pop
adc
loope
xor
jns
xchg
jo
leave
and
sbb
inc
iret
cltd
ljmp
fcomps
std
in
pop
data16
leave
sbb
and
dec
fwait
test
insb
call
sbb
mov
inc
data16
fs
cwtl
jg
mov
in
inc
outsb
cmpsl
mov
fwait
adc
push
ds
cmp
inc
sub
xchg
jo
mov
add
loop
mov
push
mov
mov
push
mov
inc
lock
iret
sub
fldl
out
adc
mov
daa
bound
push
pop
mov
adc
jecxz
data16
arpl
call
push
fcoms
imul
jo
sahf
xchg
fwait
pop
adc
pop
aas
pop
addr16
mov
das
popa
sbb
mov
mov
push
vmwrite
mov
cmp
loope
sub
cs
lahf
fadd
test
sbb
lahf
adc
xchg
push
and
iret
arpl
cmp
adc
mov
popa
rclb
dec
mov
dec
or
ror
imul
out
cmp
xor
cltd
mov
jns
arpl
push
das
inc
dec
and
les
mov
adc
and
and
dec
rorl
mov
mov
xor
xchg
push
pushf
dec
pop
jbe
or
sar
or
jnp
addr16
pop
push
lahf
mov
xor
mov
cmpsb
ja
es
stos
mov
adc
xchg
pusha
mov
jl
daa
loop
in
lahf
mov
lds
or
adc
and
add
stos
adc
out
push
fwait
push
pop
cmp
jb
shrb
mov
lods
inc
adc
les
repz
int
sarb
push
leave
call
les
leave
mov
imul
movsl
jo
xchg
push
mov
push
jno
dec
mov
fnsave
mov
or
subb
test
mov
mov
push
into
popa
dec
adc
fldpi
fbstp
outsb
or
bound
adc
cmpsl
adc
fwait
mov
inc
xor
ljmp
push
icebp
cmp
je
mov
add
push
outsb
fwait
out
cmp
sbb
jg
daa
lahf
cmpsl
nop
lcall
fstpl
cmp
xchg
fldl
xor
shll
add
push
push
jle
stos
sbb
add
pushf
daa
sbb
and
push
pop
pop
scas
cmp
dec
sub
sbb
and
sub
ljmp
jbe
pop
cmp
cwtl
sub
add
and
int3
mov
scas
lahf
jg
push
mov
push
dec
aad
in
inc
lds
xchg
dec
fs
dec
and
je
fmull
lret
mov
loop
add
xor
into
push
add
rcrl
pop
cmp
adc
sti
addb
sbb
push
loop
ret
mov
lds
sbb
pop
pop
mov
sbb
add
dec
dec
cmpsb
pusha
pop
xchg
add
sbb
add
pop
mov
repnz
mov
aam
jb
and
xlat
jnp
lods
sub
lret
mov
jg
rol
cmc
out
negl
sarb
mov
adc
mov
xchg
repz
or
push
dec
cwtl
push
add
sub
jo
push
mov
mov
addl
inc
or
sti
dec
fwait
in
jp
fisubs
pushf
xchg
rcrl
inc
and
mov
mov
repz
fstp
es
push
pop
mov
mov
aas
cmp
scas
mov
hlt
push
insb
pop
jnp
push
aaa
popf
into
loopne
jp
movsl
jae
xchg
pop
cmp
sub
lahf
arpl
outsl
mov
cs
out
ja
mulb
aaa
cltd
movsl
add
jp
rcr
xorl
sbb
adc
mov
inc
imul
int3
mov
ljmp
xchg
jnp
xchg
mov
jo
stos
fucomip
test
sub
lret
jb
sbb
pop
iret
sti
mov
cmp
in
popf
adc
les
push
lods
sbb
pop
push
cmp
in
lock
jbe
inc
cld
outsb
jnp
xor
jecxz
lahf
cmp
add
mov
std
sub
push
and
andb
test
bound
pop
add
cwtl
and
mov
mov
mov
cmp
lret
add
mov
xchg
stc
hlt
clc
push
fwait
cli
add
iret
cs
lcall
popa
pop
bound
stc
cmp
inc
out
inc
mov
add
push
lds
mov
jmp
es
mov
dec
fidivrl
dec
sbb
or
cmp
cmpl
dec
in
dec
add
push
mov
adc
pop
jg
int
fs
into
push
sbb
lods
xchg
insb
fstpl
mov
paddb
sub
push
out
test
mov
jne
fists
jg
add
add
negb
xchg
dec
stc
lret
sub
mov
je
xchg
dec
gs
sub
outsb
pop
test
ljmp
inc
fisttpll
sub
xchg
insb
jbe
push
xchg
xor
rorl
pop
mov
cmp
jg
ds
ja
dec
ds
in
and
loopne
out
push
cmc
rclb
sti
bound
add
add
clc
je
xchg
jo
pop
sub
mov
popf
aaa
out
cmp
mov
mov
adc
pop
or
xchg
lods
push
fs
sub
jnp
repz
imul
xor
cli
push
sub
mov
outsl
clc
push
and
xchg
or
xor
testl
jns
out
push
dec
cld
add
scas
push
cmpsl
or
sub
cmc
aas
aad
jnp
cmpsl
push
cs
int
jecxz
mov
mov
in
in
inc
repnz
sub
cmp
sbb
sub
popa
leave
pop
cmpb
insl
or
scas
and
sub
sub
xchg
ja
jg
xchg
push
cli
or
scas
mov
scas
sbb
out
or
lahf
mov
cmp
mov
push
daa
inc
jp
dec
and
daa
orb
scas
mov
xchg
mov
sbb
out
dec
cs
jns
mov
xchg
inc
js
iret
insl
pushf
fcomip
cmp
push
loope
loopne
cmpsb
mov
popf
push
dec
mov
into
sub
leave
cmpsl
fdivl
xor
pop
sub
cltd
stc
pop
cmp
imulb
sbbb
cli
or
adc
pop
punpckhdq
imull
mov
stc
push
dec
xlat
iret
in
fldenv
add
or
jns
push
mov
lods
shrb
out
bnd
cwtl
jne
mov
add
sbb
inc
xor
movsb
dec
lods
inc
aam
cli
aaa
test
fcoms
icebp
arpl
ja
pop
push
int3
or
fmuls
out
dec
dec
add
arpl
xor
test
icebp
lods
sub
lcallw
lods
scas
lds
outsb
repz
arpl
loop
xchg
jnp
mov
xchg
adc
mov
stc
and
sub
cli
cmp
out
in
ds
enter
mov
pop
aad
sbb
fildl
pop
fiaddl
push
fcmovnu
mov
or
loop
loopne
fstl
loope
xor
inc
inc
xor
and
scas
testl
int3
movb
mov
lods
insl
in
scas
xchg
cmp
sbb
data16
or
cmp
jmp
push
jbe
jo
pop
ds
push
ljmp
xchg
sbb
and
inc
or
or
sub
out
outsb
loope
rcr
xor
clc
jo
jnp
jl
cmpsb
imul
mov
lds
dec
jb
cmp
pop
push
mov
inc
and
hlt
push
push
lock
mov
sub
scas
mov
and
iret
mov
movsb
nop
sbb
jnp
insl
addl
pop
aas
cltd
sub
aaa
or
adc
fcmove
and
hlt
fwait
leave
das
imull
xchg
jg
xor
jle
sbb
out
pop
mov
mov
outsb
jo
and
sahf
cmp
pop
mov
cmp
xchg
sub
mov
movl
cmpsl
and
arpl
pop
xchg
lcall
rorb
dec
pop
test
subl
shlb
inc
or
subb
outsb
cmpsl
cmp
dec
loope
pushf
inc
shlb
xor
mov
sub
enter
xor
insb
inc
xchg
add
xor
lock
jne
repnz
test
pushf
adc
sbb
fidivs
lock
adc
cmpsb
and
add
out
push
andb
decl
ja
mov
or
pop
jge
jmp
sub
outsl
add
jne
lds
addr16
movl
sub
push
sbb
inc
mov
arpl
mov
jnp
xchg
sahf
dec
stos
and
and
mov
xor
push
sub
dec
sarb
enter
sbb
movb
mov
popfw
mov
add
mov
or
ret
imul
dec
inc
ja
xor
pop
mov
or
pop
sub
xchg
dec
loope
inc
int
sub
insb
pop
ret
inc
into
add
hlt
lods
cwtl
adc
push
ret
jnp
movsl
cmp
mov
jae
shr
gs
arpl
inc
jb
sub
cli
outsb
gs
jb
addr16
test
dec
in
jbe
dec
bound
and
mov
xchg
pop
dec
inc
lahf
call
inc
inc
iret
ljmp
xchg
adc
dec
sbb
cld
lods
clc
push
iret
loopne
sti
addr16
jno
cmp
shlb
pusha
arpl
xchg
hlt
outsl
mov
das
dec
shlb
cmp
and
in
pop
inc
dec
shlb
mov
fcmovnu
fisubrs
cli
push
inc
gs
lea
sub
sbb
fs
test
cltd
dec
sub
aad
dec
jae
or
sub
aad
jg
loop
insb
or
int3
icebp
jl
jno
enter
stc
pop
or
mov
orb
mov
fsubs
lods
testl
mov
xchg
dec
in
push
jmp
xor
cwtl
mov
fbld
cmc
xchg
aad
pop
jp
fbld
es
out
sahf
insb
jl
and
push
sarb
push
mull
fidivrl
nop
addr16
addr16
clc
cltd
jg
mov
mov
insl
sub
fidivrs
ret
inc
cwtl
push
inc
out
push
mov
or
or
cld
ja
and
jmp
ss
xchg
inc
xor
mov
iret
call
jae
dec
ret
adc
add
jmp
cs
xchg
dec
cmpsb
bnd
std
adc
cmp
add
or
cld
cltd
jp
into
sub
sub
pusha
add
xor
dec
sahf
inc
jo
mov
sub
int
rclb
adc
popa
dec
loope
in
sub
jmp
add
pop
iret
fcomip
push
aam
mov
inc
daa
push
into
pop
test
movb
js
and
or
push
outsl
iret
into
add
jns
add
gs
and
xlat
cmp
shll
dec
imul
repz
jnp
inc
inc
xchg
or
das
jle
pop
repz
and
roll
push
stos
mov
ljmp
icebp
mov
sahf
ret
mov
cmp
jno
icebp
fistl
sub
notl
mull
loope
ret
xor
and
mov
ret
mov
xchg
sbb
fidivl
pop
mov
iret
jmp
popf
inc
inc
adc
int
fdivrl
das
pop
adc
pop
push
jne
sbb
or
data16
or
int3
jo
xor
cmpsb
stos
aaa
push
xchg
push
pop
aas
pushf
dec
lock
sub
inc
xorb
loopne
xchg
imul
jge
jbe
xor
in
and
bound
xchg
gs
sub
xchg
pop
xchg
imul
out
dec
inc
fcomps
in
scas
push
test
fldcw
mov
sarb
idivl
mov
out
in
adc
stos
push
mov
jne
jo
jg
mov
add
sub
inc
fcomip
or
cmp
int3
fisubl
loop
repz
pop
cli
clc
and
sub
lds
rcll
incl
mov
bound
jb
or
lcall
xchg
jecxz
push
jecxz
xchg
outsb
and
repz
push
adc
leave
in
iret
push
addr16
add
ss
test
sbb
mov
in
sti
lret
lret
push
push
cmp
sti
das
aam
test
jl
xchg
xchg
mov
sub
mov
fnstenv
in
insl
push
push
cli
daa
daa
rcrl
aaa
mov
xor
add
inc
ret
dec
dec
dec
pop
push
popl
cmpsb
lds
in
pop
iret
fbstp
push
cwtl
popa
lock
mov
mov
fstpl
mov
mov
xor
pop
pop
jge
push
or
je
add
mov
mov
ficoml
mov
jnp
jne
jge
push
inc
ss
lods
imulb
fstpt
ja
xor
filds
mov
insl
fucomi
test
out
lods
push
or
sarl
xor
inc
int3
mov
pop
add
add
loope
push
js
mov
inc
cwtl
shll
xor
outsb
jmp
adc
add
sbb
aam
cmp
pop
ret
pusha
mov
je
rcr
xor
dec
ss
fs
into
xchg
pop
lea
jge
daa
and
fdivl
pop
push
jmp
mov
shrl
mov
scas
pop
jnp
lds
add
push
mov
imul
sub
adc
inc
and
or
nop
jno
sbb
xchg
push
rolb
incl
pusha
pop
int
stc
push
out
adc
test
cld
sbb
xor
sti
cvtdq2ps
mov
ds
fldl
push
mov
mov
inc
fdivr
mov
mov
mov
test
xor
cmc
mov
aas
mov
sbb
hlt
in
rcrl
xchg
idiv
test
lods
ror
addr16
in
pop
out
adc
in
jge
mov
test
or
outsl
inc
orb
ss
xor
je
aad
dec
insb
js
mov
push
in
outsb
dec
lcall
fildll
scas
add
inc
das
stos
jmp
jb
pop
sbb
adc
ret
dec
stos
add
sub
inc
cli
mov
add
mov
repnz
pusha
shrl
adc
out
jmp
cmp
sysret
scas
push
inc
out
imul
mov
jp
mov
pop
fxtract
add
out
dec
clc
movsb
test
ja
mov
lea
xchg
shr
shll
mov
sbb
incb
sbb
or
into
pop
jg
xor
test
rolb
cmp
rcrb
mov
cwtl
addl
cmp
sbb
imul
pop
sti
movsb
divb
test
sti
jns
ss
out
lods
in
dec
xor
aad
mov
dec
and
das
inc
inc
push
mov
movsb
sti
frstor
out
mov
xor
insl
cmp
inc
lret
out
stos
xchg
std
push
mov
out
scas
icebp
test
xlat
mov
mov
cli
scas
mov
push
mov
pop
nop
adc
mov
sbb
adcb
xchg
push
fwait
jle
inc
lds
mov
test
jecxz
ljmp
sub
cmp
and
scas
push
mov
xor
data16
xor
dec
hlt
mov
xchg
out
stos
mov
xchg
out
mov
fbld
mov
pop
lret
jo
gs
xor
xor
scas
pop
adc
sarl
add
xorb
push
or
mov
jns
aam
cld
test
mov
lea
mov
rcll
push
idivb
cmpsl
pop
sbb
out
insb
sub
aaa
aas
cmc
insb
adc
outsb
scas
inc
imul
inc
and
insl
inc
push
insb
sbb
js
add
pop
dec
jo
lock
test
ret
out
mov
gs
popf
push
shll
int3
pop
push
into
sub
xchg
insl
dec
lret
add
bound
ja
cltd
mov
ret
aas
movsl
test
je
sub
jmp
push
rcr
and
mov
inc
ss
mov
in
xlat
insl
or
dec
sbb
push
out
pop
inc
xor
pop
sub
mov
pop
xchg
es
mov
movsb
push
push
jmp
test
sbb
nop
or
inc
fabs
cld
lahf
push
xor
jne
shl
in
xchg
xlat
add
popa
lahf
icebp
jne
jl
xchg
jmp
aaa
ret
dec
cmp
mov
aam
int3
xor
and
inc
fldcw
fistpl
leave
bound
pop
scas
sbb
xchg
sub
in
repz
push
andnps
fmull
xlat
lock
cmp
adcl
je
shlb
in
mov
scas
aad
sbb
aam
pop
xchg
rcrl
icebp
dec
cs
xor
add
inc
mov
out
dec
pop
adc
fstpt
add
xor
je
add
xchg
mov
cmp
sbb
mov
arpl
xchg
sub
jecxz
adc
enter
mov
xchg
fisubs
test
int
jle
adcl
add
sbb
std
pop
insl
fmul
jno
mov
dec
mull
test
cld
outsb
or
mov
jge
cld
sti
lret
aam
loope
dec
rclb
test
clc
xchg
ljmp
adc
shll
sub
dec
mov
sahf
cli
stos
scas
add
scas
js
enter
fbstp
ficomps
add
insb
jae
cmp
pop
aas
push
and
pop
and
pop
es
or
lds
dec
out
sub
add
mov
mov
inc
and
jne
mov
mov
sbb
divw
int3
xchg
xchg
dec
std
or
cmc
push
mov
out
lret
out
popl
add
rolb
mov
in
insb
lret
push
pop
sub
fwait
sub
mov
xchg
aas
lds
repnz
into
xchg
loop
test
into
aaa
mov
inc
cmpsb
xchg
adc
test
lahf
adc
stos
cmc
add
rol
mov
mov
jl
clc
mov
test
pop
popa
fcoms
pop
or
cmp
inc
into
jg
subb
sbb
lret
enter
sub
xchg
or
pop
xor
not
mov
or
filds
add
mov
push
push
rsqrtps
mov
daa
and
sub
daa
dec
pop
jge
xchg
push
xor
orb
xchg
orl
mov
into
in
pusha
pop
cmp
rcrb
inc
sahf
dec
std
imul
dec
xor
adc
mov
sub
hlt
sbb
xchg
or
repz
xchg
out
jae
out
andb
or
sub
shrl
mov
push
loop
popf
lahf
aas
xchg
push
divb
pushf
js
inc
divl
xchg
insl
pop
mov
iret
in
pop
push
inc
das
sahf
cmp
inc
in
inc
adc
test
rclb
mov
movsb
out
lods
fstpl
add
loopne
pop
enter
sub
push
fcomi
test
mov
out
xchg
xchg
lahf
mov
loop
push
stos
xlat
sarl
cmp
js
cmp
cmp
mov
mov
xor
inc
jp
mov
pop
fpatan
addl
shl
andl
pop
je
jae
fwait
push
negl
sub
mov
lahf
jle
movsb
or
push
out
into
out
mov
cli
lds
xchg
stos
jbe
push
dec
cwtd
pop
pop
icebp
mov
sbb
enter
pop
sbb
loope
sahf
dec
add
cli
cmp
push
xchg
imulb
sarl
clc
or
push
xchg
push
int3
hlt
pusha
stc
jne
fstpt
fstpl
ljmp
push
pop
bound
ret
add
mov
dec
popa
movnti
sbb
enter
shrl
lods
int
mov
inc
mov
inc
sti
mov
push
mov
dec
inc
stc
mov
or
loopne
fisubrl
jbe
mov
cmpl
cld
fisttpl
std
rcr
das
inc
pop
and
cmp
in
cmpsl
push
mov
jecxz
cmpsb
ja
aam
and
cmp
dec
sti
jbe
fcoml
cmp
cwtl
pop
pop
xchg
ds
adc
mov
movsl
loopne
push
xor
sbb
xor
rcl
or
inc
sub
inc
scas
xor
out
lret
push
dec
cmc
add
or
out
mov
sub
insb
jae
jb
or
jp
arpl
xchg
inc
ficomps
jbe
int
out
fwait
inc
xchg
mov
mov
gs
dec
mov
pusha
enter
mov
inc
es
jo
movsb
lds
fdivs
lods
stos
fidivs
jmp
into
or
test
mov
mov
sub
push
jno
aas
adc
js
push
clc
xchg
mov
and
aaa
mov
jp
aam
pop
sbb
and
sahf
test
push
xorb
dec
js
mov
fistpl
xor
push
mov
sbb
xchg
ret
stos
add
pop
loope
jg
xchg
push
icebp
mov
mov
mov
xchg
repz
cli
fdivl
lcall
sti
lahf
ljmp
out
cmp
inc
cmpsb
push
pop
fldt
hlt
jno
movsb
cmpsl
add
adc
test
mov
mov
lcall
mov
test
jmp
xor
inc
int
xor
hlt
xlat
add
icebp
or
ret
cmp
jns
in
sub
jb
sahf
aas
cmc
xor
xorl
lcall
daa
loop
shrl
mov
popf
mov
lock
dec
inc
adc
idiv
out
jg
into
pop
bound
push
loope
xchg
jmp
mov
int
jl
cli
daa
insl
sub
mov
shll
jmp
jne
push
pusha
and
testl
loopne
movsl
bound
jb,pn
les
int
stos
and
cmp
mov
pop
mov
andb
adc
mov
pop
mov
jp
xlat
xor
out
sbb
cltd
int3
ret
scas
out
push
mov
mov
ss
in
inc
mov
les
imulb
mov
cs
push
xor
cwtl
and
call
push
in
js
mov
jmp
sti
cmpsb
add
aaa
xor
int3
cltd
imul
jno
andl
dec
mov
nop
mov
mov
xor
mov
xchg
xor
xchg
ljmp
jne
mov
inc
adcl
jle
fists
lock
pop
mov
push
cmp
cmp
popf
cmpb
xchg
pop
inc
push
add
cmp
pop
jo
jle
lock
js
inc
scas
inc
push
ja
lret
inc
pusha
and
aad
mov
and
test
dec
dec
inc
loop
shrb
lods
dec
push
lds
push
outsl
cmpsb
mov
rcll
xchg
push
fnsave
dec
test
maxps
push
test
inc
pop
cwtl
xchg
jb
dec
mov
xchg
and
sarl
shl
jle
mov
mov
outsb
cmp
in
sahf
lods
push
push
neg
cmp
and
in
sbbl
sub
dec
sub
push
push
pop
push
subb
sub
arpl
mov
xchg
dec
push
fisttps
lods
test
cmc
in
mov
push
sahf
sub
ret
int3
ds
es
test
outsl
notl
and
imul
lcall
cltd
cmc
push
testl
or
inc
lods
aas
jge
sbb
xor
scas
mov
push
cwtl
mov
incl
lock
outsb
cmp
rclb
data16
add
add
rcll
mov
jne
test
xor
das
dec
inc
ja
or
ljmp
push
mov
cmp
lock
in
aam
fadds
jge
jae
data16
pop
adc
lods
imul
xor
mov
xor
xchg
or
push
xchg
sahf
outsl
inc
or
mov
xchg
loope
jae
sub
sub
insb
roll
and
sub
jae
and
cs
mov
dec
aas
sub
sbbb
movsl
sbb
pop
sub
adc
lret
or
xor
test
and
pop
adc
rorl
xor
push
out
sbb
or
sbb
mov
or
dec
xchg
mov
push
insb
lods
lret
into
mov
mov
inc
push
xchg
lcall
cmp
mov
inc
lds
fs
jge
ss
dec
xlat
xchg
mov
mov
fcomps
cmp
push
lcall
stc
sub
mov
icebp
lahf
sarl
xchg
int
aam
pop
mov
clc
rclb
xchg
mov
outsb
xchg
sub
aad
inc
mov
jo
std
xchg
cwtl
cmp
xchg
adc
ds
pusha
mov
fucomi
sub
js
and
fstl
gs
pop
sarl
mov
and
add
mov
xor
test
sub
sahf
mov
in
jp
inc
repnz
jno
jb
sub
pop
xchg
stos
cmp
insb
sub
stos
adc
mov
xor
les
test
insl
xchg
sarl
call
push
mov
addb
push
mov
push
fiadds
or
jmp
inc
fisttpll
jb
add
fisttpll
mov
xor
mov
mov
push
iret
mov
jne
scas
ljmp
scas
shlb
cld
cmp
test
cli
push
add
xor
and
dec
pop
repnz
sti
cs
subb
rolb
cmp
out
lock
pop
fadds
popf
sbb
popa
push
pop
xchg
xchg
mov
dec
ds
or
mov
mov
lock
nop
sub
adc
lahf
cmp
xor
jle
popf
daa
add
pop
xor
out
js
cwtl
jecxz
lea
push
cmpsb
testl
xor
push
mov
sub
add
rcll
repnz
cmc
xor
mov
test
sarl
out
jne
scas
xchg
aad
mov
cmpsl
adc
int
push
sbb
mov
adc
xchg
lcall
and
mov
xor
roll
and
and
jbe
sbbl
pop
cmpsb
mov
cmc
xchg
mov
dec
inc
pop
fwait
pop
inc
cmp
cli
mov
mov
lds
shlb
push
jo
ret
xchg
adc
ret
int3
insl
jnp
jbe
rclb
xchg
loopne
js
in
adc
fidivrs
cmp
inc
sbb
add
jmp
add
or
mov
mov
jbe
pop
subb
cltd
in
mov
into
repnz
and
jmp
mov
hlt
cmc
outsl
mov
test
mov
sub
inc
push
inc
ja
dec
jl
shlb
jns
notl
adcl
sbb
negl
icebp
or
add
mov
mov
call
aaa
xorb
xor
push
jns
adc
pop
mov
and
pop
icebp
sub
mov
and
ret
imul
mov
sub
jg
cwtl
mov
clc
push
arpl
icebp
push
lret
ljmp
movsb
push
data16
sahf
in
fcmove
dec
cmpsb
js
orl
mov
idivw
popf
pop
xchg
mov
fdivrs
rcrl
cmp
loop
sub
jp
mov
pop
cmp
sub
mov
adc
or
and
pop
int
aad
mov
jb
adc
mov
cwtl
mov
mov
ret
jmp
clc
into
ficoms
cmp
push
or
xchg
in
inc
test
cmp
jb
sbb
or
push
test
mov
sub
bnd
sub
xor
and
sbb
scas
and
cmp
and
pop
insl
sbb
nop
js
xor
cmp
cwtl
dec
mov
cmp
push
jns
add
jp
cli
or
mov
and
push
sub
mov
jnp
test
sar
xchg
jge
add
stc
rclb
addr16
xlat
dec
cmp
pop
fwait
sbb
add
pop
or
lods
cwtl
push
aas
iret
inc
jbe
addr16
test
mov
mov
mov
sysenter
addr16
lahf
xchg
xchg
ss
into
sti
mov
or
imul
and
out
sbb
mov
int3
dec
in
and
sbb
fcompl
mov
xchg
pop
xchg
dec
lods
pushf
ss
out
cmp
pop
or
sahf
arpl
fistpl
aam
mov
arpl
xchg
adcl
push
push
mov
pop
or
adc
push
ljmp
sbb
jge
jge
es
cwtl
add
icebp
mov
lret
je
lods
pop
insl
lods
imul
nop
mov
push
jecxz
sbb
or
inc
decl
aam
xor
sbb
add
out
inc
pop
pop
mov
data16
mov
dec
lahf
cmp
nop
loop
add
add
mov
sbb
mov
mov
lcall
ss
jnp
or
flds
dec
mov
add
and
push
push
in
sub
and
push
fiaddl
xchg
xor
test
cltd
and
push
jo
add
mov
push
repnz
pop
xor
cmp
and
dec
pop
ds
mov
mov
dec
xor
xchg
pop
pop
pop
xor
shlb
or
and
pop
test
jae
jno
call
adc
in
mov
sbb
cmc
test
xor
mov
mov
stc
sbb
call
cmp
int3
int
adc
fisubrs
cmc
es
mov
or
lods
inc
xchg
xor
loope
xor
lahf
pop
testl
mov
jns
bound
rol
out
dec
sub
stos
push
clc
fidivrs
dec
cmp
add
or
cmc
cmc
lahf
xor
loop
loope
pop
je
cmc
lea
movsb
mov
mov
fnsave
loop
jo
stos
push
addl
imul
push
pusha
adc
mov
pop
aas
push
aas
insl
inc
in
outsb
jae
fstl
aad
out
cmp
mov
dec
enter
test
cmp
fsubrs
and
iret
pop
mov
cmp
dec
jns
mov
pop
cmp
xchg
mov
or
lahf
mov
xchg
xchg
push
lea
push
les
mov
pop
shlb
sbb
ret
push
ljmp
stos
jge
jmp
js
cld
sbbb
xor
aam
mov
cmp
mov
xchg
add
aas
dec
adc
and
cmc
sub
leave
mov
push
sbb
mov
pop
int3
pop
cmc
adc
fnstenv
xchg
add
push
sbb
mov
nop
and
imul
iret
cs
imul
push
pusha
movsb
adc
ds
addr16
in
ds
jno
sbb
cld
ljmp
scas
popf
popf
out
lret
repnz
add
mov
dec
mov
xor
fmull
adc
pop
push
mov
fstpt
mov
mov
outsb
imul
test
or
subl
fimull
ds
and
test
iret
pop
push
jecxz
stc
stc
into
adc
xor
sub
push
repnz
jmp
jmp
je
mov
iret
andb
leave
test
cmp
jno
inc
in
scas
imul
sub
jg
fsubs
and
and
push
mov
ret
pop
pop
movsb
in
mov
pop
xchg
jge
mov
dec
stos
add
sbb
iret
lock
pop
mov
inc
in
jp
jb
sahf
aaa
jl
lret
mov
out
mov
mov
jp
sbb
pushf
and
mov
sub
stc
push
add
in
fiadds
push
and
pop
pusha
into
fcoml
call
outsb
aaa
mov
in
mov
mov
insb
xor
sbb
jb
cld
push
mov
outsl
out
idiv
push
dec
xchg
stos
in
adc
push
icebp
mov
adc
enter
jmp
dec
ja
mov
je
test
fistpl
loop
loope
fdivrl
int3
pushf
jb
aam
pop
adc
fcomp
subps
sbb
mov
xchg
or
fldl
loop
dec
loope
cmc
std
mov
adc
xor
fiadds
xchg
cmp
xchg
xchg
sbb
bound
cmp
fidivl
cmp
mov
leave
push
shrl
shrl
mov
sub
and
rcr
mov
test
movsl
lock
test
fisttps
xchg
test
mov
and
adc
mov
loop
cwtl
push
adc
and
mov
mov
aam
gs
mov
pop
ficoml
leave
fstps
outsl
jg
cs
iret
pop
clc
adc
sbb
arpl
mov
lahf
adc
sbb
mov
ja
into
call
aad
std
rclb
pop
or
lods
push
dec
ret
dec
cli
test
dec
inc
mov
out
lods
addl
insl
push
shlb
mov
mov
lret
xchg
sahf
add
daa
loopne
push
dec
xor
push
iret
loopne
sub
mov
imul
popa
lret
inc
jo
adc
dec
imul
cmp
push
mov
or
repnz
mov
and
xor
pop
pop
and
add
or
jo
dec
enter
cmp
mov
lock
inc
sarl
popa
bound
xor
insb
sub
mov
add
dec
cltd
sahf
or
push
mov
dec
xchg
mov
cmp
or
pop
mov
cmp
hlt
jg
jnp
loopne
popa
push
adcl
test
das
stc
adc
mov
pop
scas
adc
iret
or
and
loop
orl
and
leave
jb
cmpsl
roll
repz
ret
cmpsl
movsb
sub
pop
je
sub
sub
xor
iret
dec
push
aam
cmpsb
rcl
pop
and
stos
or
cmp
pop
inc
or
ja
xchg
repz
cld
inc
push
into
mov
repz
ret
fiaddl
xchg
xchg
inc
es
adcb
jnp
mov
in
inc
xchg
ja
adc
sbb
stos
or
dec
aas
dec
rorl
xor
sbb
decb
outsb
rcr
ret
or
xchg
jne
stos
in
mov
cmpl
lds
mov
hlt
outsb
push
into
repnz
sarl
mov
sub
mov
adc
cmpsb
stos
lret
movsb
push
stc
dec
stc
adc
aam
sti
push
push
xor
ja
ficoms
xchg
xor
shlb
adc
je
pop
pop
rcll
repz
mov
pop
pop
push
mov
mov
xchg
cmp
rcrb
xor
pop
pop
int3
mov
aaa
xchg
rol
cs
dec
adc
repnz
adc
xor
sub
add
in
inc
adc
into
mov
into
and
mov
xchg
add
cmovl
mov
fistpll
ja
sub
xchg
inc
repnz
dec
xchg
or
popf
push
fwait
das
cltd
xchg
jmp
outsl
mov
jecxz
push
sti
and
popf
xchg
in
push
mov
pop
pop
movsl
shlb
jno
fucomi
mov
es
cmp
pop
scas
int3
cmp
ds
xchg
scas
out
shl
outsl
ret
and
sub
outsl
das
add
add
ret
aaa
sub
stos
xchg
mov
fcomps
xor
xorl
lcall
pop
and
loope
xchg
stos
and
mov
xchg
mov
cmp
push
add
sbb
mov
stos
shrl
mov
mov
mov
xchg
rolb
sbb
shll
daa
lds
mov
mov
lock
in
push
cmp
movsb
and
cmpsl
cld
or
adc
fsts
pop
cltd
xor
and
add
sub
jp
xor
mov
adc
xchg
xchg
mov
mov
gs
mov
dec
outsl
jb
jnp
pop
mov
sub
or
jnp
push
inc
daa
imul
cmp
repz
xchg
mov
scas
inc
cmp
push
xchg
mov
dec
sub
mov
push
and
add
pop
inc
shlb
sbb
cmpsb
or
js
inc
add
movsl
push
mov
and
xor
sarl
loop
add
mov
ja
mov
jl
or
ss
iret
xchg
cmp
push
mov
subl
mov
sbb
adc
mov
pop
sub
mov
mov
leave
pop
addr16
ja
xor
inc
les
inc
push
add
int3
movsb
push
cmp
push
ljmp
and
daa
outsl
cli
mov
sub
add
jp
mov
jns
push
inc
imul
lahf
mov
lahf
xorb
cmc
test
nop
out
xchg
pop
pusha
xor
dec
jne
rorl
out
and
cmp
mulb
dec
out
jns
or
pop
aas
out
jnp
and
int3
sbb
mov
mov
xlat
fnstcw
xchg
add
or
jo
jne
xor
sub
jno
sub
ss
mov
inc
lods
push
pop
in
scas
gs
push
jge
lahf
in
pop
cltd
dec
xor
leave
add
pop
fmul
inc
cmp
arpl
sahf
xchg
shll
sbb
sub
xor
outsb
xchg
xor
cmc
push
cmp
cmp
imul
push
xchg
shr
shll
je
jns
dec
int
scas
mov
adc
xor
inc
pop
adc
xor
and
enter
dec
arpl
inc
cmp
popa
out
jp
mov
and
testl
mov
das
movsl
icebp
stc
push
sub
sahf
in
cmp
enter
mov
push
hlt
dec
mov
out
inc
orb
sbb
cmp
mov
cmp
mov
push
lret
jl
push
xchg
pop
cwtl
cmp
sbb
fisubs
add
arpl
ret
mov
outsb
inc
cmp
es
inc
outsb
leave
jne
ljmp
push
mov
cmp
sbb
loopne
sbb
mov
adc
mov
mov
pop
cmp
push
sub
sbb
pop
mov
push
jecxz
in
inc
enter
dec
daa
shld
cs
jo
cmpsb
mov
pop
pop
sbb
cmp
mov
xchg
fbstp
or
inc
cltd
push
aad
mov
orb
ja
xchg
incb
jae
js
shlb
shlb
les
mov
orl
scas
enter
out
sub
hlt
mov
sub
sar
or
js
push
repnz
adc
xor
pop
add
bound
imul
out
pusha
or
into
xchg
jne
jns
ja
sub
push
adc
gs
mov
jae
fwait
adc
cmp
mov
out
pop
pop
icebp
cmp
mov
je
aam
in
mov
cmp
dec
iret
pop
jno
cmp
mov
push
jp
imul
lahf
pop
sahf
popf
mov
dec
fmul
fsubrp
inc
push
lahf
jle
mov
and
ljmp
and
pop
pop
lock
adc
daa
dec
lds
sub
xor
hlt
mov
ljmp
sbb
add
pop
push
hlt
ret
jmp
mov
outsl
jle
stos
inc
data16
iret
push
aas
ret
adc
in
xor
rcr
lahf
add
jns
test
pop
mov
jnp
xchg
in
xchg
repnz
sub
add
test
daa
xor
dec
adc
jne
js
xchg
and
roll
dec
cmp
pop
or
pusha
inc
call
sbb
in
add
xor
pop
roll
xchg
jp
into
shr
jp
aaa
xchg
dec
dec
dec
mov
mov
cli
lret
sub
add
mov
outsb
mov
mov
divb
cmp
xchg
lret
fists
test
fisubs
test
push
popa
sbb
imul
jbe
mov
pop
stos
mov
xor
mov
test
xchg
jp
xchg
xor
pusha
cld
mov
gs
je
sahf
pop
or
dec
lock
mov
mov
dec
xchg
add
adc
xor
cwtl
inc
and
sub
push
xor
mov
fstpl
mov
adc
and
mov
lret
mov
dec
insb
push
add
inc
dec
and
and
and
repnz
in
xchg
lods
jno
enter
sub
addr16
fmuls
sub
dec
cmpl
push
inc
jl
adc
add
enter
add
fldl
or
daa
loop
dec
lock
jnp
out
mulb
pop
cmp
sbb
fdivr
push
jp
call
jno
loopne
cmc
in
sbb
sbb
sub
ja
pop
mov
sbb
xchg
mov
pop
lret
and
lock
vmwrite
adc
std
mov
jb
mov
inc
cmc
cmp
pop
shl
enter
lret
sti
in
sbb
push
lahf
call
adc
aam
shlb
push
push
or
pushf
jecxz
aas
dec
addr16
dec
dec
das
out
add
adc
insl
jmp
fs
aaa
cs
pop
insb
mov
cmpsl
test
rorb
and
out
mov
jmp
adc
and
or
cmp
fcomip
in
pop
push
or
jns
push
cmp
sub
xlat
sub
ss
cmpsl
inc
mov
sub
or
mov
pop
stc
mov
sahf
mov
mov
ja
fcmovbe
sbb
fildll
mov
loopne
in
imul
xor
mov
aaa
addl
xchg
leave
xor
jne
mov
jb
inc
bound
cmp
sub
std
cmc
jle
in
push
repnz
scas
popf
cltd
sub
test
inc
in
xchg
dec
sbb
xchg
mov
stc
dec
push
js
in
mov
lcall
pop
pop
rcrb
pop
sbb
pop
jle
popa
ret
fcomp
jle
icebp
sub
xchg
pop
sub
adc
sti
cmc
add
iret
dec
cmpl
push
push
xchg
rorl
je
adc
push
int
pop
scas
push
fildl
mov
popf
rorl
adc
mov
addb
aam
stos
pusha
xlat
insl
scas
loope
push
push
push
dec
orb
repz
adc
cmp
push
xchg
sbb
push
mov
pusha
sbb
inc
lds
fchs
mov
fistpl
or
pop
popf
cmpb
push
in
cmp
cmc
js
aaa
js
stos
test
imul
ds
cld
lea
das
add
cltd
test
dec
out
jmp
pop
out
xor
push
push
mov
ja
cltd
in
rep
cs
testl
enter
xchg
push
scas
cmp
push
cmp
jno
outsb
or
mov
jle
pop
out
fucom
das
adc
dec
fistpl
popf
addb
pop
ljmp
or
and
stos
out
lock
inc
insl
pop
sub
leave
inc
jl
add
scas
cmp
adc
sbb
mov
test
add
in
addr16
inc
inc
mov
push
push
stc
lds
cmpb
cmc
out
xor
sub
mov
jns
inc
movsl
jne
add
mov
cmpsb
dec
into
mov
mov
add
xor
into
adc
int
push
push
lret
iret
xchg
add
je
pop
mov
add
sub
addb
cmp
pop
cmpsb
fbld
push
pop
dec
sub
nop
inc
xor
mov
hlt
mov
mov
fimuls
mov
movsb
xchg
xchg
outsb
adc
mov
aaa
orl
inc
sub
mov
sub
jg
add
push
and
mov
fmul
xchg
hlt
jmp
cmpsb
es
imul
test
das
test
push
pop
fistl
inc
call
outsb
fxch
sbb
cld
mov
jno
ror
fcompl
nop
jmp
add
les
fs
inc
or
sub
xchg
add
jle
fdivr
lock
mov
adc
ja
mov
loope
xor
sbbb
jo
fsub
lcall
push
or
cli
or
cmpsb
dec
dec
inc
fcoml
dec
adc
idivl
sub
mov
addl
sbb
adc
and
ljmp
or
push
cmp
lret
sub
push
xor
cld
ficompl
mov
pop
fsub
mov
loope
xchg
sbbl
jle
xchg
jns
movsl
shlb
ret
cli
push
out
lods
push
mov
push
mov
sbb
rcll
xchg
ljmp
pop
jle
add
pop
and
out
and
stc
mov
xchg
testl
lds
adc
xchg
push
pop
imul
push
icebp
xchg
adc
pop
inc
jl
push
xlat
xchg
mov
lock
mov
push
sahf
jae
jnp
xlat
aaa
loopne
shll
shll
add
sub
or
sbb
ret
sub
out
stos
pop
stc
mov
xor
popa
cmp
mov
or
fwait
inc
mov
insb
pop
sbb
xor
pushf
out
sbb
jp
push
testl
movsb
cmp
pop
mov
or
addr16
inc
dec
pop
popf
ja
imul
push
rorb
notl
lods
dec
jbe
lock
lea
cwtl
inc
aad
dec
xlat
clc
adc
js
imul
jecxz
dec
jmp
mov
mov
lock
adcl
lock
insb
dec
sub
and
int
xchg
sbb
leave
inc
push
movsb
dec
jae
xor
mov
dec
or
insl
jmp
mov
stc
lods
mov
xor
push
jnp
mov
xor
jbe
popf
xor
mov
cmpsl
nop
out
out
cmpsl
movsl
xor
shrl
adc
test
repz
popf
pop
mov
mov
push
mov
mov
stos
sub
jmp
daa
nop
pushf
and
mov
sbb
push
cmc
stos
jno
ficompl
dec
fdivrp
lea
cltd
mov
jns
insb
and
push
orb
xchg
and
hlt
shrl
sbb
jo
mov
mov
pushf
sbb
int
inc
xchg
stos
test
in
xchg
pop
pop
outsb
xor
mov
cmp
mov
aas
cmp
adc
popf
lds
repnz
xor
insb
push
addr16
mov
sub
inc
sub
jno
pop
fucomp
adc
icebp
out
je
lcall
movsl
jge
fcompl
ret
fadd
mov
test
add
aas
push
jge
dec
xchg
cmp
mov
lods
xor
fwait
or
xchg
pop
jge
rclb
icebp
mov
xchg
scas
mov
inc
or
mov
movsb
push
mov
xor
adc
jns
rcr
loopne
cmp
xchg
mov
push
sarb
movsl
cmp
repz
out
scas
in
inc
dec
mov
jno
mov
idivl
movsb
dec
dec
enter
stc
mov
mov
pop
rcl
int3
xchg
dec
and
mov
xor
loope
sbbb
sbb
mov
inc
dec
inc
push
pop
test
jle
jp
fs
sbb
jo
mov
andl
sbb
outsb
lock
mov
out
push
mov
add
push
mov
adc
addr16
mov
xchg
mov
jae
jae
pop
or
dec
movb
out
push
adc
les
push
mov
lret
or
stos
pop
and
mov
lock
add
sub
lret
dec
mov
push
daa
test
pop
popf
mov
out
jne
sbb
push
scas
push
shlb
and
xchg
jne
repnz
mov
sti
pop
or
xchg
ljmp
push
std
arpl
mov
fs
loope,pt
subb
fs
push
xor
adc
mov
pop
xchg
push
imul
shll
xchg
gs
rclb
fldt
ja
lcall
push
mov
repnz
xchg
pop
add
decb
pop
outsb
cmp
stc
dec
in
cmpsb
inc
mov
iret
ficompl
xorb
mov
mov
test
jnp
je
xor
adc
mov
push
pop
and
test
in
mov
ret
ret
pushf
test
mov
lcall
mov
jmp
adc
push
out
mov
sub
xlat
push
jp
ficoms
xchg
or
imul
mov
shlb
call
je
jecxz
jg
xchg
test
fs
adc
outsl
mov
or
ss
sub
loope
aaa
arpl
lcall
fwait
pop
pop
sti
loope
call
cmp
js
push
scas
push
mov
adcb
scas
xor
lret
cmp
sbbl
jle
sbb
iret
sahf
push
push
daa
mov
cs
mov
mov
test
adc
loop
or
addl
repz
ds
jmp
roll
push
mov
out
jmp
mov
pop
jg
jne
outsl
jecxz
pop
pop
dec
jne
inc
and
mov
jg
sbb
dec
lret
sub
scas
test
nop
mov
frstor
pop
cmp
mov
push
pop
push
out
xlat
mov
andl
cmp
xchg
pusha
xor
sub
mov
jns
lcall
cmc
pushf
lahf
rcr
jle
shll
cli
or
repnz
dec
or
push
cwtl
add
mov
jae
mov
cwtl
sub
add
xchg
cmc
mov
aad
pop
lea
jmp
mov
fmul
enter
fucomi
cmp
push
addr16
notb
loope
fs
sub
in
dec
aas
mov
jle
cli
roll
xor
dec
lret
mov
movsb
jne
les
movsb
mov
cmp
cltd
cmpsl
lahf
push
std
shl
shr
ja
insb
and
add
in
or
or
movsl
pop
inc
jae
xor
dec
cmp
into
movsb
push
mov
mov
inc
pusha
sbb
sub
rorb
fldt
fdivrs
cmovno
mov
lock
push
inc
mov
std
and
test
aas
pusha
enter
cli
sbb
jb
jp
outsb
add
push
hlt
stos
add
mov
movntq
out
add
or
jno
xor
arpl
pop
out
or
xchg
gs
mov
pushf
cmp
adcb
push
arpl
sbb
jecxz
adc
xchg
mov
data16
pusha
and
call
in
push
adc
shlb
rolb
fisubl
popa
int3
add
xor
mov
pop
in
fisubl
mov
addr16
popa
cltd
add
aad
xchg
lock
or
cltd
inc
sahf
fdivrs
jecxz
mov
push
aaa
add
fsubrp
mov
adcb
fdivs
mov
push
das
lret
jnp
adc
adc
cmp
or
add
test
leave
icebp
sub
xchg
inc
mov
scas
nop
mov
ds
or
pop
mov
and
and
ja
mov
movsl
test
iret
hlt
xchg
sbb
push
jb
add
cmp
pshufw
popf
push
addr16
cmpsb
add
mov
into
sbb
and
fbstp
dec
sbb
int
dec
lret
cwtl
or
cmp
movb
rclb
push
xchg
sub
out
and
push
jns
mov
mov
aam
xchg
jmp
push
scas
adc
gs
int
and
mov
js
cltd
sbb
in
sbb
int3
push
jp
ficoml
push
mov
sbbb
fimuls
dec
pop
cmp
jae
xchg
adc
aas
arpl
ret
lcall
fbld
xchg
rorl
pop
outsb
mov
js
xchg
fadds
xor
ret
lcall
repnz
les
push
test
fs
out
jo
jp
lock
jno
mov
lcall
mov
pop
movsb
jge
push
fcomi
scas
insb
mov
arpl
lret
mov
in
scas
shlb
sub
mov
xchg
mov
xchg
mov
mov
addb
stos
dec
in
dec
jne
jae
inc
mov
xchg
inc
lds
fimull
ja
fsts
push
mov
add
xchg
jb
cmp
aas
or
dec
mov
aaa
jecxz
lods
mov
push
xor
mov
jnp
and
insb
test
xchg
lahf
pop
inc
inc
icebp
sbb
adc
adc
jge
ss
cmp
push
xchg
inc
jmp
jae
fimull
bnd
lock
sbb
cmc
cmpb
cmpsl
insb
iret
add
pop
shrb
xlat
cmp
jbe
add
mov
icebp
icebp
xchg
sarb
and
lcall
imul
or
add
mov
xlat
outsl
sub
cltd
ja
mov
cld
popa
and
inc
movsl
das
in
dec
jg
nop
pop
and
cld
fldcw
adc
arpl
aam
push
js
jo
jl
push
lods
cmpsl
pop
pop
ret
stos
sub
les
test
popa
sbb
sub
dec
xchg
fisubs
dec
sub
add
push
aaa
cmpsl
jg
test
imul
cmp
lds
das
mov
or
imul
sub
dec
js
shl
pop
movsb
es
sub
sbb
stc
iret
pop
inc
mov
xchg
scas
imul
dec
dec
in
stos
dec
and
fstp
imul
mov
mov
xchg
cli
rol
in
js
pop
mov
jmp
addr16
iret
cwtl
jnp
cmp
xchg
dec
dec
loop
insl
shl
std
jg
lahf
addr16
cmovge
sub
pop
in
out
lret
sub
adc
fsubrs
out
sbb
mov
mov
cld
int
call
mov
sbb
arpl
mov
mov
movsl
mov
or
lock
out
rol
mov
movsb
lock
imul
lock
adc
fisubrs
xchg
popa
cmpsb
cmp
test
and
mov
fisttpl
divl
loop
jns
push
shlb
xor
push
stos
or
xchg
and
int
ficompl
lret
lea
jb
or
enter
push
ja
lock
sub
xor
sbb
xchg
lock
mov
ss
sub
movsl
lret
in
addr16
popa
push
lods
cmp
push
and
or
cmc
xchg
test
outsb
lods
shl
movsb
cs
inc
icebp
mov
jne
sub
push
mov
out
sub
inc
leave
add
mov
dec
push
jp
mov
xchg
jno
xchg
cmp
jle
cmp
bnd
inc
fs
int3
int3
lret
inc
aaa
sub
mov
rol
mov
stc
jae
mov
pop
in
inc
test
xor
mov
aad
or
outsb
push
inc
pop
pop
sub
mov
mov
mov
jmp
sbb
sub
popa
jnp
sub
popf
imul
roll
xchg
xchg
ret
or
leave
push
push
aas
out
loope
cmpl
repz
rep
add
xchg
sbbl
inc
add
xorl
bound
imul
xchg
and
push
test
and
inc
or
gs
mov
pop
ja
in
and
pop
jnp
mov
sbb
jecxz
aad
fimuls
arpl
notl
mov
scas
inc
test
jg
inc
cmp
gs
test
lods
xor
mov
mov
in
lea
xor
add
pop
leave
adc
pop
add
push
adc
pop
bound
add
dec
cmp
sarb
fsubs
aas
mov
adc
mov
ja
out
xchg
mov
movsb
sub
rolb
in
movsl
mov
into
stc
sbb
call
cmp
mov
iret
xor
sti
andb
insb
mov
aaa
movsb
jle
das
jl
nop
stos
divps
dec
fimuls
insl
je
je
pop
and
cs
lret
dec
in
fisubs
rclb
xchg
sbb
or
ss
pushf
sub
jnp
xchg
stos
out
or
add
dec
mov
iret
jne
push
sbb
data16
daa
loope
pop
mov
dec
aaa
xchg
loopne
mov
test
bound
sahf
ja
ljmp
into
sbb
ljmp
leave
push
dec
ret
mov
mov
sub
ret
mov
mov
or
xchg
cwtl
fwait
not
js
xor
pop
or
dec
inc
je
push
ljmp
popa
or
les
imul
cmp
int3
jo
pop
or
sar
rcl
adcl
mov
mov
or
sbb
outsb
nop
loop
sub
push
loop
dec
lods
cmp
or
and
lea
sub
gs
jne
dec
sbbl
push
sbb
push
mov
sub
pop
add
arpl
mov
sbb
in
jbe
mov
in
adc
mov
xchg
mov
pushf
push
jle
sbb
jg
enter
and
pop
leave
outsb
inc
test
pop
xchg
inc
out
out
cmp
icebp
sbb
in
mov
sahf
test
mov
mov
in
add
stos
pop
mov
pop
dec
ret
adc
push
lods
inc
dec
sub
and
dec
push
test
cld
ja
mov
jp
into
push
mov
loopne
enter
mov
stos
and
pop
daa
ljmp
inc
int3
xchg
in
push
insb
jo
xchg
rolb
ret
or
out
inc
inc
into
das
mov
mov
iret
sub
and
and
inc
fsubrl
rep
sahf
push
push
push
leave
inc
xchg
or
push
out
jmp
xchg
dec
ficomps
dec
mov
push
mov
loopne
icebp
or
aas
lcall
hlt
iret
sbb
fwait
loope
jno
mov
sub
test
jo
stos
lock
mov
cmp
inc
mov
cmpsl
notl
jp
insb
lods
inc
jae
push
push
aad
into
enter
insl
int
cmpsb
lret
loope
lods
cmpsb
ds
leave
dec
adcb
leave
mov
std
mov
cs
repnz
cmp
pop
sbb
pop
rcll
les
and
push
pushf
loop
sub
inc
ret
out
imull
testl
popf
repnz
dec
adcb
in
aas
or
add
rclb
cmpsb
shlb
int3
pop
int3
mov
daa
sbb
push
cmp
cltd
mov
push
shrl
in
loope
xor
movsb
sub
in
shl
loope
dec
aam
dec
push
and
xchg
das
add
push
mov
test
and
lds
xorl
pop
aad
lret
inc
mov
test
adc
dec
jmp
xchg
jle
popf
sbb
pop
jnp
add
dec
sbb
bswap
add
addl
xor
lods
xchg
pop
test
in
scas
jns
icebp
add
adc
xchg
shrb
mov
daa
xor
jle
xor
aam
repnz
jle
icebp
sbb
ret
ja
adc
lahf
cmp
adc
lods
movsl
cmpb
or
sbb
imul
cmp
es
daa
cmp
mov
xorl
daa
inc
mov
add
jns
stc
insb
lea
xor
push
std
fsts
pop
bswap
inc
mov
lods
mov
xor
ret
ret
push
enter
mov
leave
scas
test
jno
sub
fs
mov
cs
sbb
lret
pop
fdiv
add
into
out
pop
or
xor
adc
into
xor
into
jne
data16
sub
lock
insl
mov
push
shrb
fwait
pop
or
int
add
fwait
pop
jg
rcrl
sub
fnsave
dec
xor
andb
movntq
ret
mov
cmpsl
js
lods
pop
insl
shl
push
testl
xchg
jge
lret
mov
shlb
xchg
ss
or
mov
add
add
popf
fistpll
outsb
dec
inc
js
add
adc
dec
cmp
xchg
jp
ret
daa
les
daa
fsubrl
sbb
daa
jb
aam
repnz
popf
ficoml
mov
data16
sub
and
mov
ffreep
mov
inc
jecxz
xor
es
add
mov
mov
inc
mov
mov
xchg
inc
mov
mov
xlat
scas
iret
and
and
es
es
pop
mov
jmp
and
addr16
dec
lea
orb
pop
mov
mov
add
lock
loope
sti
push
jno
mov
mov
dec
mov
xor
fisubrl
mov
mov
push
adc
sub
add
add
jb
mov
bound
pushf
push
pop
dec
cmp
xor
stc
adc
xchg
dec
movl
out
or
scas
and
mov
nop
insl
or
ljmp
inc
and
cwtl
inc
push
push
mov
mov
int
and
adc
test
cltd
sbb
push
and
add
pop
icebp
mov
and
test
int3
and
cli
bound
cmpb
lret
push
pop
pop
arpl
and
std
in
stos
and
jbe
sub
cld
scas
imul
lock
test
pop
jne
cmpsl
icebp
fsts
push
jmp
out
cmp
xchg
adc
sbb
push
arpl
lods
inc
add
popf
mov
loope
loope
adc
fistps
subb
aas
ljmp
scas
ss
mov
scas
mov
pushf
dec
adc
test
ljmp
fsubrl
inc
hlt
dec
dec
xchg
popf
xorl
loopne
push
push
cmpl
jge
push
jg
outsb
in
addr16
insb
mov
or
cmpsb
or
mov
fidivl
mov
mov
leave
nop
add
outsb
in
mov
inc
sbb
imul
adc
pop
mov
mov
add
aas
dec
cmp
jge
and
outsl
jp
shl
inc
lock
push
mov
fcoms
ljmp
addr16
inc
cmp
int
movsb
mov
jmp
stos
sarb
push
pusha
mov
leave
enter
add
out
test
dec
sub
stos
ret
repz
call
or
push
pop
xor
arpl
add
popf
mov
outsl
shrb
dec
pusha
loope
jge
or
pop
imul
stc
fadd
and
add
add
dec
mov
fdivrl
inc
loope
repz
aad
mov
cmp
mov
repz
mov
dec
daa
sarl
sub
push
mov
jae
jge
xor
mov
cwtl
inc
std
cwtl
or
orl
xchg
in
test
sbb
nop
lret
mov
aaa
pop
jo
popa
or
int
cltd
add
ret
add
in
push
ljmp
aad
mov
nop
out
fildll
cs
sub
jae
jb
movsl
incb
adc
mov
sbb
mull
lds
push
jmp
ljmp
subb
rcrb
hlt
adc
push
mov
hlt
call
xchg
loop
adc
notl
movsl
lretw
jmp
ror
cmpsb
dec
jnp
inc
bound
outsb
xchg
and
dec
loop
mov
mov
ret
orb
nop
lods
lahf
js
popa
xchg
pop
sub
movsb
leave
jne
icebp
inc
stos
movsl
pop
push
pusha
ret
data16
dec
stos
fadds
dec
mov
xlat
cli
shll
sbb
pop
sbb
push
push
out
fists
fs
insl
stos
push
or
stos
cmpsl
sbb
cmp
scas
mov
sbb
aaa
insl
fistl
test
add
ret
test
mov
loop
sti
int3
mov
aas
sub
xor
and
orl
scas
out
insl
jecxz
arpl
lods
and
jle
aaa
pop
mov
sub
mov
mov
xor
imul
sar
dec
int3
and
les
stos
xchg
flds
jns
sub
mov
in
ds
sti
inc
in
sbb
mov
rdmsr
cwtl
cmpsb
dec
dec
mov
add
jmp
in
pushf
into
and
dec
dec
adc
push
ja
idivl
dec
jo
movb
dec
ret
cmpb
mov
pop
add
test
pushf
out
inc
outsl
push
xchg
test
aam
and
sbb
or
lcall
and
inc
dec
andb
jns
push
mov
mov
add
adc
cmp
lea
aas
notb
sub
sti
lret
sub
les
clc
repz
and
pushaw
ja
sub
sub
mov
mov
mov
inc
pop
iret
and
stos
test
cmp
cmp
in
push
sub
stos
xor
cwtl
shll
cmpb
repnz
es
leave
outsb
out
push
int
dec
push
adc
sbb
cmpl
add
pop
lcall
pop
dec
jno
sub
ljmp
cld
sarl
hlt
fdivr
adc
ljmp
loopne
rcrl
test
pop
inc
jnp
push
fstpt
jno
sub
out
push
jmp
popa
sub
inc
test
ljmp
cli
mov
sub
fsubl
leave
dec
inc
cmp
pop
pop
psrad
fwait
push
mov
ss
mov
adc
iret
or
repz
jp
sub
mov
dec
gs
es
and
mov
cwtl
mov
pop
xchg
dec
lods
enter
ret
push
push
dec
push
or
add
repnz
addr16
out
xchg
adc
pop
ja
pusha
mov
adc
inc
lds
lret
mov
jecxz
ret
lret
add
and
xor
fistps
int
js
mov
data16
jne
cmp
sub
or
pop
pop
and
repnz
dec
xlat
push
inc
dec
fstpl
fcmovu
cmp
jbe
mov
mov
idivb
xor
sar
and
and
sub
and
cmp
in
mov
add
vunpckhps
push
dec
in
aad
dec
jb
jne
sbb
iret
inc
aas
and
popl
adc
int3
push
mov
out
ror
neg
dec
sbb
push
test
pushf
push
xor
mov
data16
push
or
xchg
mov
jecxz
mov
lcall
test
pop
out
xor
pop
fists
jnp,pn
jmp
mov
xor
in
mov
sub
jo
xlat
mov
xchg
scas
insb
push
enter
sub
popa
mov
mov
add
sbb
jg
arpl
ficoml
pushf
jbe
push
rcrl
rorb
mov
roll
aas
xchg
lea
sbb
test
mov
push
and
cmc
sbb
ds
xor
jns
shll
enter
xlat
jbe
in
mov
and
dec
jno
pop
push
mov
pop
mov
lds
js
idivb
xor
stc
repnz
insb
inc
mov
cli
ja
add
push
xchg
pop
sub
jno
mov
inc
cmp
xchg
sbb
xor
outsb
cmc
std
adc
inc
shlb
cmp
scas
pop
pop
test
jl
test
adc
xchg
lods
in
mov
inc
negl
mov
or
fmuls
lahf
mov
sub
cmp
nop
inc
or
pop
mov
mov
push
fs
cld
inc
idiv
and
push
push
shlb
mov
icebp
sub
test
sbb
addr16
sbb
insl
scas
and
and
outsl
js
pop
imull
popa
push
mov
push
rorl
int3
dec
mov
xchg
test
add
call
fnstcw
out
out
repz
xchg
inc
jns
push
and
iret
mull
lock
jne
repz
cltd
cmp
aad
insb
aad
mov
cld
pop
xor
pop
cld
sti
mov
or
xor
scas
mov
out
add
mov
jl
fs
mov
movsl
in
xchg
and
pop
mov
mov
loop
lret
xchg
aam
cld
xor
es
outsb
gs
add
pop
outsb
add
insb
movsl
pop
push
lahf
jg
insl
or
fdivp
cmp
sub
or
iret
mov
aad
mov
xor
adc
pop
xchg
dec
outsl
sub
ret
push
insl
jl
pushf
test
scas
xor
mov
dec
inc
iret
xor
add
xor
lahf
add
call
inc
and
pusha
std
xor
jl
add
mov
push
lods
mov
or
pop
aas
xchg
dec
les
or
mov
jmp
sbb
dec
loope
sbb
mov
fists
lock
mov
out
inc
push
ret
ret
fistpl
and
inc
inc
xchg
adc
adc
pop
xchg
pop
or
lahf
inc
es
stc
lock
je
push
jae
cmpsl
mov
inc
cmp
cmp
ret
mov
jp
mov
push
sahf
xor
nop
in
scas
leave
pop
lahf
inc
jbe
sbb
fmuls
pop
fldl
mov
scas
xor
cli
lcall
pop
les
or
jne
push
mov
cmp
mov
scas
aas
mov
fildll
mulb
flds
and
fucomip
jnp
adc
cmc
out
sub
mov
shll
xor
cmc
xor
pop
insl
scas
lret
rolb
into
enter
sbb
cmp
sbb
shll
icebp
sbb
mov
xchg
pop
jnp
xorb
xlat
ja
stc
loop
push
pop
daa
ja
pusha
inc
xor
call
xor
lods
sbb
test
cld
xor
xchg
push
xor
jp
arpl
xchg
mov
inc
clc
in
cmp
iret
mov
xor
cwtl
pop
dec
aaa
fstps
inc
std
fwait
cwtl
pop
negb
xchg
mov
rcrl
sub
pop
mov
ljmp
xchg
mov
out
negl
mov
push
push
adc
repz
pop
jno
es
inc
pop
push
inc
pop
sbb
mov
cmp
mov
andb
arpl
ss
int
bound
addb
dec
and
xchg
iret
into
push
mov
sub
std
cmp
ljmp
jnp
insl
in
mov
fiadds
cmp
and
call
repz
mov
loopne
inc
pmaxub
cld
push
jle
cld
sbb
fiadds
sti
ds
pop
mov
fwait
call
les
dec
adc
stos
sub
sub
mull
or
je
pand
inc
inc
jne
icebp
inc
in
pop
and
aam
sbb
mov
sbb
sarl
rcrb
xor
ret
adc
js
or
scas
pop
addr16
test
pop
mov
pop
xor
cmp
icebp
sbb
shll
mov
bound
push
push
lods
cwtl
lea
test
inc
push
ret
enter
push
mov
jo
jnp
imulb
xor
or
adc
shrb
nop
push
mov
pop
out
sub
mov
sub
xchg
cs
cmp
loop
cmp
movsl
push
and
xlat
in
lods
xor
pop
mov
jecxz
daa
and
mov
loope
push
iret
jne
andb
sbb
cld
xor
sbb
dec
jne
or
mov
mov
cmp
mov
xor
xchg
mov
rcr
ja
pop
cmp
rcll
inc
movsl
sarl
aam
adc
push
fs
mov
inc
cltd
adc
xchg
xor
inc
rcll
ret
fldlg2
sub
mov
inc
add
nop
mov
adc
fisttpl
mov
lret
add
pop
dec
cmc
push
lock
push
je
jno
and
jmp
jl
xchg
xor
test
xor
ds
cmp
pcmpeqd
sbb
pop
inc
adc
sti
out
shll
fnstsw
clc
cwtl
js
jle
xor
scas
sub
cmp
stos
aas
or
sbb
cmp
jl
mov
mov
xor
xchg
push
into
loop
aas
sbb
stos
jb
inc
sub
ljmp
repz
ds
insl
movsl
repnz
push
sbb
cld
cmp
out
add
negb
lds
inc
inc
adc
incb
mov
mov
xor
xor
push
mov
ret
inc
xlat
fdivl
insl
sbb
push
pop
sub
mov
cmp
push
cmpsb
std
mov
scas
stc
sahf
jl
mov
or
sbb
popa
pop
and
xor
mov
push
or
insl
sub
adc
dec
scas
add
aaa
sbb
ds
inc
movsb
punpckldq
loope
add
pop
mov
and
inc
aas
sbb
mov
sbb
rcrl
and
mov
enter
test
xchg
add
push
sbb
and
dec
or
push
idivl
cmp
fisubrl
test
mov
dec
call
xor
sub
cld
sub
shlb
mov
mov
adc
es
lods
mov
push
pop
repnz
cmpsb
fstl
adc
cmp
sub
sti
gs
sbb
cmp
sbb
add
mov
xor
sbb
roll
xchg
or
or
mov
xchg
xor
lret
mov
outsb
or
adc
add
sbb
pop
data16
enter
iret
mov
pop
inc
fbld
stos
add
cmc
scas
or
ret
test
inc
mov
dec
xchg
inc
push
and
sahf
test
pop
ljmp
cmp
ja
imul
or
push
fbld
loop
push
lret
mov
jae
int
ds
or
add
add
pop
rolb
sub
ds
add
lock
test
ffree
xor
movhps
in
mov
lcall
cmp
dec
int3
insl
ror
sahf
mov
pop
imull
pusha
or
inc
or
mov
in
jg
lods
jmp
cwtl
dec
int
inc
in
jnp
mov
imul
push
jnp
ljmp
cli
pushf
sub
std
enter
pop
lea
sbb
mov
and
pushf
or
test
or
cmp
xlat
push
addr16
push
mov
mov
or
sti
cmpsl
dec
xchg
inc
paddsw
cmp
mov
mov
sub
out
mov
pop
sub
insl
add
daa
pop
movsl
add
out
ds
adc
adc
mov
and
or
pop
fcmovnu
daa
pop
jmp
mov
adc
ljmp
daa
jno
lds
pop
dec
mov
sub
mov
adc
add
inc
mov
aas
and
push
mov
fprem
iret
jae
sbb
jecxz
adc
lock
adc
xlat
lcall
loop
push
out
divb
rol
sti
push
int
xor
and
pop
mov
aam
sub
push
inc
ror
fistl
nop
leave
loop
jge
pop
fdivl
jp
outsb
mov
out
ret
jecxz
sub
or
adcl
fwait
and
push
and
jae
aam
cmp
outsl
sbb
adc
adc
sub
cmpsb
cmpsb
mov
ljmp
into
or
lahf
sbb
icebp
dec
cmp
icebp
scas
xchg
ficomps
iret
lcall
cmp
xor
loop
movsb
xchg
lock
push
cmp
cmpsb
aaa
pushf
mov
pop
push
mov
add
add
testl
es
mov
mov
cmp
fwait
pop
jo
fwait
test
out
aad
xchg
xor
pop
popf
out
xchg
mov
push
mov
mov
orl
dec
popf
dec
push
adc
cmpl
jae
stc
mov
mov
push
pop
in
shl
jl
jmp
push
fistps
inc
mov
in
add
xchg
insl
inc
xlat
jle
shll
fs
and
sub
adc
dec
cmp
cmp
inc
lcall
enter
daa
mov
xor
push
sub
inc
pushf
add
js
shll
mov
cld
jge
cli
and
arpl
jo
mov
cmpsl
shll
xchg
xchg
popa
cmp
shrl
pop
push
enter
xor
in
imul
and
jp
movsl
jb
pop
dec
pop
shlb
cmpsl
lret
xchg
arpl
push
jb
mov
xor
ret
jecxz
arpl
pop
ljmp
rorb
mov
aad
mov
sbbl
lods
mov
cmp
inc
int
aas
inc
pop
insl
lea
mov
iret
imul
xlat
inc
xor
or
xchg
jl
in
push
push
lcall
lock
in
out
pop
dec
fadds
rol
fisubrs
lret
aam
xchg
movsb
pop
xor
or
cld
arpl
test
or
sbb
scas
test
rorl
sub
push
movsl
add
xor
fdivrl
push
and
sbb
adc
out
dec
xor
inc
mov
adc
lcall
imull
lock
jl
test
into
mov
sub
push
or
das
inc
and
push
cli
test
lret
mov
push
adc
popf
out
ljmp
outsb
sub
jbe
stc
or
shlb
lea
jne
out
mov
gs
jb
lds
lret
mov
adc
mov
and
iret
jp
push
mov
pop
call
test
sarl
push
push
push
dec
das
sub
je
xchg
ret
js
jle
push
mov
sbb
lret
mov
stos
lahf
push
xchg
sub
hlt
sub
xchg
int
addr16
sub
or
out
fidivl
std
mov
sub
shr
enter
jecxz
aaa
daa
push
pushf
dec
jne
adc
movsl
leave
sbb
xor
iret
adc
mov
jb
iret
fadds
je
les
and
fwait
je
shrl
dec
mov
inc
push
add
adc
push
int3
int3
sub
shll
pop
xor
add
cmpsb
int3
xor
scas
cmp
adc
dec
iret
inc
test
popa
add
mov
cmp
mov
mov
pop
ret
inc
fcoms
adc
and
push
and
inc
scas
aas
push
push
shlb
fisubl
outsl
mov
lcall
clc
fidivl
sahf
das
mov
cld
dec
or
ret
mov
or
imul
xchg
cmp
jge
cmp
adc
icebp
pop
shll
out
mov
lods
adc
jmp
popf
mov
and
push
push
ljmp
leave
aaa
mov
filds
xchg
adcb
roll
xchg
or
addb
sub
ficoms
stos
lcall
pop
push
mov
fists
test
adc
fisttpl
push
ror
jp
push
mov
mov
dec
dec
mov
ret
jecxz
adc
mov
mov
dec
sbb
iret
fstpt
lock
sub
add
jge
xor
dec
add
dec
cmpsl
repz
xor
xchg
test
outsb
mov
jp
jmp
adc
mov
pop
push
jbe
scas
mov
psraw
sub
js
aas
adc
pop
mov
sbb
dec
jecxz
add
or
lahf
ficomps
sub
call
xchg
cmp
stos
subb
sbb
pop
push
loope
ficomps
insb
push
subl
push
nop
mov
test
jno
jbe
mov
mov
or
jns
jg
xchg
shlb
movsl
cmp
std
xchg
ljmp
call
cwtl
add
pop
faddl
cmc
dec
lahf
lahf
pop
addl
adc
push
inc
imul
lods
xor
in
inc
pushf
sahf
or
movsl
lds
ss
stos
xchg
cmpl
cltd
jle
pop
std
adc
add
sub
stos
adc
rcrl
arpl
dec
dec
jecxz
inc
shl
add
scas
movsl
pop
jnp
dec
jae
fwait
mov
push
fstpt
stc
out
cmpsb
aas
adc
insl
in
xor
sub
bnd
add
add
mov
lock
sti
mov
jbe
fwait
jnp
aaa
lds
insb
jbe
adc
test
cli
jl
push
adc
pop
mov
xlat
rolb
insb
roll
insl
in
inc
xchg
rorl
insl
movsb
out
outsl
outsb
mov
push
pop
inc
ds
stc
bound
bound
cmp
jbe
int
dec
jg
loope
out
cmp
inc
jo
je
sbb
adc
aas
lods
jg
xchg
inc
sub
mov
mov
hlt
dec
dec
cmp
or
lods
push
andl
xor
mov
push
je
mov
repnz
xor
into
mov
roll
mov
pop
aas
mov
pop
ljmp
pop
jp
jne
daa
mov
iret
sub
pop
pop
imul
mov
test
cmc
push
dec
ret
movsb
adc
dec
sbb
jae
cmp
sbb
je
daa
insl
lea
jo
mov
adc
sbb
jb
into
sub
cmc
add
inc
shlb
iret
aam
or
in
not
cmp
jp
adc
mov
mov
or
jb
aaa
mov
outsb
xchg
fcomps
jecxz
das
push
adc
call
dec
lcall
or
pop
addb
cmp
lds
or
add
or
bound
pusha
loope
pop
pusha
xchg
popf
sub
sbb
loope
xchg
mov
adc
pusha
lahf
pop
jge
out
xchg
mov
in
test
or
addr16
and
sahf
mov
push
call
inc
sub
and
inc
mov
test
inc
movsb
mov
cmp
out
sub
sub
sbb
loop
push
sbb
lods
call
lock
mov
dec
hlt
jmp
fdivp
divb
cmp
sbb
int3
rcr
outsl
add
outsl
push
fadds
hlt
icebp
jno
or
sti
sub
arpl
mov
sub
dec
xor
dec
dec
fwait
pop
dec
scas
dec
addr16
mov
movsb
or
jp
jo
mov
add
jbe
or
in
dec
cmpsb
pop
fsubrs
sahf
sub
mov
adc
cmp
insl
pop
sbb
mov
outsl
ljmp
mov
dec
loop
pop
jno
fsts
fnstenv
push
pop
sub
cmp
cmpsb
adc
popa
loop
dec
imul
shlb
cmp
sbb
xor
xor
xor
fimull
dec
push
test
xchg
xchg
cmp
ds
iret
xchg
fucom
in
jns
and
clc
push
fsubr
adc
aad
xor
push
mov
push
and
jl
xchg
aas
ja
or
in
les
pop
sub
lods
movsb
xchg
jns
faddp
ds
jae
ss
pop
aam
jae
xchg
fwait
lock
or
std
loopne
shrl
fidivl
shll
xchg
xor
out
icebp
cs
in
jo
mov
fisttpll
out
pushf
fadd
es
arpl
mov
jne
xchg
sbb
push
pop
adc
incb
jmp
xor
or
mov
insl
cltd
mov
std
imull
pop
arpl
push
jg
imul
scas
push
pop
xor
ret
or
inc
stc
mov
dec
push
sti
mov
test
push
cmp
add
or
inc
sub
xchg
leave
lahf
inc
mov
add
pop
and
in
xlat
xchg
push
movsl
shlb
pop
je
arpl
adc
xchg
and
leave
rol
cmp
or
push
pop
lret
jo
popf
negl
inc
inc
push
push
incb
lahf
cltd
mov
sbb
lock
call
mull
and
mov
xchg
popw
xchg
dec
mov
subb
and
adc
out
popf
push
mov
roll
cwtl
pop
sbb
repz
mov
inc
and
test
iret
popf
les
and
mov
mov
scas
sub
jo
test
dec
mov
push
mov
addr16
imull
sti
out
aas
xor
or
mov
jo
jg
mov
pop
pushf
jae
mov
shll
lret
cmp
mov
popa
add
fnstenv
sbb
rcr
mov
inc
pop
std
ds
mov
sbb
orl
jno
enter
test
scas
jbe
pop
sahf
dec
ja
rcrb
cltd
add
aas
clc
pop
pop
aas
in
xor
movsb
stc
xor
mov
cmc
and
mov
stos
test
sbb
jns
repnz
outsb
pop
mov
sbb
push
ss
les
pop
in
mov
inc
cmp
xchg
dec
xchg
fistps
lcall
test
iret
rclb
mov
and
scas
push
mov
cmc
out
cmpsl
xchg
bound
movsb
dec
aam
fnsave
xchg
cltd
jne
jl
mov
bound
das
mov
jmp
mov
mov
in
and
test
cmp
or
fbstp
lcall
icebp
daa
add
stos
cmp
jmp
movsb
push
push
adc
loop
and
mov
jge
dec
loope
insl
lret
nop
je
aas
sub
push
aad
fnstsw
ljmp
sbb
cwtl
fcompl
lret
push
mov
mov
xor
pusha
ret
xor
dec
std
shlb
testl
test
jle
ja
movsb
mov
jns
ret
sub
inc
pop
sahf
mov
jl
gs
dec
pop
cmpsb
or
cmc
idivb
cmpsb
pusha
sbb
inc
test
in
pop
mov
mov
xchg
loopne
out
jl
mov
add
dec
adc
sbb
jmp
mov
mov
adc
push
insl
jle
out
scas
pop
mov
mov
cld
imul
jmp
pop
gs
xchg
sub
les
pusha
std
sub
sbb
adc
jb
xchg
sbb
mov
mov
cmpl
jg
fisttpl
shlb
ljmp
sbb
add
and
inc
jns
pop
mov
mov
jmp
mov
fdivl
mov
jb
cmp
adc
aaa
mov
mov
adc
cmp
fsubs
cwtl
stc
sub
mov
lea
lea
sub
sub
in
add
inc
jl
je
mov
mov
mov
paddusb
dec
jbe
cmp
pop
stc
add
xchg
mov
jne
sbb
jge
shlb
mov
push
test
fiadds
addb
and
xlat
dec
and
and
mov
pusha
xlat
inc
jg
xlat
test
mov
cmc
fs
fiaddl
nop
and
aad
dec
adc
or
fimuls
mov
aad
loopne
test
mov
mov
adc
lret
arpl
mov
jecxz
stos
clc
dec
ja
adc
mov
sbbl
sub
xor
daa
push
mull
stos
cmove
int
cmpsl
imul
sub
inc
and
jmp
rsqrtps
mov
dec
std
stos
outsb
inc
jno
lods
insl
sti
dec
stos
push
out
xchg
leave
enter
mov
cmp
or
ja
sbb
adc
test
fs
xchg
lret
xchg
int3
cs
jecxz
push
mov
mov
add
push
sub
loop
je
push
jne
jp
jne
cmpl
imul
fmuls
fcmovbe
push
scas
jno
sub
ja
gs
cmc
dec
jne
movsl
push
aad
xchg
push
jns
add
push
in
rorb
clc
loopne
mov
aaa
cltd
ss
shrb
mov
lret
fisubl
fmul
stos
pop
sub
fnstsw
mov
in
inc
add
mov
lret
or
and
mov
pop
mov
icebp
mov
stos
and
jge
xor
or
sti
jmp
loop
jecxz
mov
ficomps
sub
icebp
pusha
shr
pop
push
aam
jno
xchg
mov
mov
aas
adc
sbb
mov
std
add
es
push
out
lods
pop
push
or
cmc
pop
in
mov
dec
cmpb
cmpb
je
repnz
jg
clc
dec
xchg
xchg
add
jmp
icebp
jle
mov
cmc
mov
test
pusha
pop
out
mov
jle
mov
movsl
jns
and
fmull
es
or
xorb
pop
add
xor
lcall
clc
popa
and
icebp
nop
lret
xchg
test
cltd
pop
ljmp
js
push
and
push
cmp
aam
fcmovne
loop
test
add
daa
scas
sub
int3
pop
mov
stc
andb
lods
fnstenv
rcrl
daa
cmpl
hlt
fxtract
mov
std
xchg
imul
mov
sahf
push
in
test
sbb
xor
push
lea
mov
addr16
cmp
test
sub
xorps
imul
movsl
mov
mov
out
jle
aas
les
or
mov
iret
data16
push
pop
ja
push
rcrb
cmpl
dec
mov
test
in
cwtl
insl
addb
notb
sub
cli
idivb
jo
dec
fisubrs
adc
jo
inc
test
dec
jno
aas
lods
es
jae
cltd
mov
inc
pop
sbb
inc
adc
cmp
mov
push
push
jo
stos
jns
es
jmp
push
inc
mov
das
sti
pop
mov
push
aad
xchg
mov
mov
xchg
cmp
stc
jne
sti
push
dec
lea
mov
sbb
or
data16
js
clc
or
test
aam
cmp
jnp
sbb
inc
jl
sbb
lret
sbb
hlt
lret
lret
outsl
mov
repnz
sbb
pop
sahf
fcompl
stos
adc
cwtl
sub
mov
mov
out
in
xchg
sarl
mov
cmpsl
enter
fisubrl
jb
dec
or
in
dec
or
add
insb
and
movsl
cmp
out
push
jb
sub
std
pop
pop
mov
xchg
and
faddp
mov
jo
mov
pop
pop
jo
jmp
inc
jg
daa
inc
or
mov
push
dec
inc
aas
test
push
inc
push
add
dec
sub
lods
aam
icebp
and
cmp
and
repnz
sbb
add
push
int
adcb
xchg
cmp
lods
dec
adc
push
jmp
imul
adc
cmpsb
sub
dec
cmp
xor
lods
xchg
loope
pop
mov
out
xor
lods
jnp
insb
mov
cmp
sbb
shll
lea
adc
out
call
adc
push
incb
push
stc
scas
shlb
adc
jo
push
mov
dec
cmc
out
jbe
pop
push
pop
cli
sbb
cltd
lock
into
xchg
push
sbb
daa
mov
std
pop
js
mov
adc
pop
icebp
mov
pushf
jbe
pop
jns
jecxz
out
jmp
pop
jbe
stc
movsb
fldenv
or
repz
ret
dec
or
and
popf
jge
jne
fs
icebp
pop
and
cmp
inc
xchg
out
out
rcrl
js
jbe
leave
jecxz
scas
iret
xor
fwait
gs
fmull
mov
outsb
out
int
pop
bound
cld
test
and
xchg
in
out
jmp
ret
mov
icebp
jp
cmp
pop
inc
rorb
insb
into
inc
and
out
add
jg
out
add
inc
jg
sub
vmovaps
jl
inc
testb
inc
and
mov
inc
sti
mov
data16
inc
scas
and
mov
dec
subl
push
or
addr16
test
mov
shrl
push
adcl
rcrb
push
call
aad
in
ss
xchg
sub
fbld
scas
mov
hlt
fisubrl
mov
inc
dec
scas
mov
xor
cld
mov
test
cmpsl
lahf
sbb
daa
xor
subb
adc
out
je
pop
popf
mov
dec
mov
push
movsl
shll
mov
inc
and
mov
shll
aas
movsb
xchg
or
aas
decb
sub
pop
and
inc
sahf
sar
inc
cmp
aaa
movsl
jecxz
push
xchg
push
enter
and
fistl
jbe
ret
mov
xor
icebp
inc
fisubs
les
mov
lods
enter
addl
insl
mov
pusha
pop
in
notb
push
sbb
cmp
mov
cmp
adc
out
idivl
rcrl
mov
cmp
jno
enter
or
jmp
iret
sbb
mov
jmp
stc
fcoms
sarb
jne
in
sbb
das
loopne
fidivrs
ljmp
lds
fiaddl
outsl
pop
cs
push
js
adc
xchg
jbe
jns
inc
pop
adc
int3
cmp
jo
ljmp
cmp
jns
in
mov
inc
addl
lea
xchg
div
add
outsb
ljmp
mov
loopne
mov
cmp
adcl
repz
mull
or
sbb
iret
inc
add
pop
js
clc
xchg
stos
or
pop
fldt
iret
pop
ss
aam
leave
sbb
mov
iret
dec
sbb
shl
sub
inc
sti
mov
addr16
cli
inc
hlt
add
jo
ss
pop
and
cmpsl
adcl
stos
adc
xchg
or
pop
mov
pop
jmp
mov
mov
aas
stc
loopne
push
lahf
jg
add
mov
mov
out
push
xlat
aas
cld
jae
dec
mov
pop
mov
adc
fcmovu
sub
adc
lret
add
mov
fisttpll
jp
loopne
cli
mov
data16
out
push
jo
mov
imul
inc
jge
jge
or
pop
push
stc
dec
pop
mov
bound
inc
mov
ficompl
inc
dec
inc
pop
or
test
push
movsl
cwtl
mov
cmp
int3
mov
sbb
jl
pop
pop
sahf
dec
aaa
or
mov
dec
dec
iret
and
mov
mov
sbb
and
cmp
push
cmpl
shll
cltd
aad
jb
fadd
rclb
inc
scas
push
sub
lahf
shr
cmc
xor
xchg
fldenv
mov
in
test
add
adc
stos
jne
lea
ljmp
mov
xchg
addl
out
data16
sbb
adc
loope
inc
sahf
loopne
mov
ss
cmpsl
pushf
aad
mov
push
xorl
inc
js
loopne
pushf
gs
xor
and
xor
cmp
les
leave
outsl
inc
gs
jns
push
pop
pop
inc
cld
dec
mov
xchg
jnp
insb
sub
and
jo
mov
push
fcompl
jl
lcall
imul
fisubl
mov
xchg
push
pop
cmp
xchg
and
lea
adc
hlt
push
enter
imul
in
cmpsl
inc
adc
inc
add
pop
jge
test
jbe
push
and
push
or
cmpb
pop
in
cmp
lret
fcmovnb
out
adc
nop
xchg
aas
or
sub
les
pop
add
insl
fdivs
ret
sarl
mov
bound
insl
mov
repz
pop
repnz
out
lret
jmp
jb
jo
popf
sub
xor
pop
daa
nop
xor
push
xchg
mov
dec
shlb
out
jmp
inc
fstpt
hlt
push
mov
nop
sbb
out
and
push
sbb
stos
push
jb
pop
xlat
cld
out
xor
aaa
add
gs
pop
fiadds
mov
pop
out
fadds
and
fnstcw
mov
enter
mov
xor
insl
mov
push
cs
in
xor
adc
add
xchg
fcom
ja
jl
aam
fnsave
push
push
dec
pop
jno
and
jb
lcall
pop
jp
mov
xchg
outsl
setb
out
cmp
inc
xchg
cmc
les
out
test
ror
notb
or
mov
sarb
je
sbb
std
test
xor
xorl
lahf
push
and
lret
sbb
sub
pop
or
adc
xor
push
out
es
or
pop
mov
mov
jae
out
mov
sti
negb
inc
scas
xchg
fildll
sub
mov
iret
mov
dec
mov
loope
add
mov
inc
in
cmpsb
mov
sub
or
subl
outsl
sub
xchg
sbb
jno
xor
movsl
jb
or
out
jns
movsb
or
adc
xor
hlt
mov
and
inc
jno
mov
jmp
mov
aad
out
nop
sub
testb
mov
cmp
pop
mov
das
xchg
push
mov
sti
dec
or
push
loopne
rclb
imul
addr16
std
stc
sbb
hlt
test
push
pop
lock
pop
and
dec
les
cmp
push
test
aas
dec
jns
lods
dec
popf
jns
or
cmp
cmc
mov
fsubrs
addr16
sbb
sbb
pop
cmp
inc
cmp
sub
into
pop
shll
rol
cwtl
andb
or
sti
ffreep
inc
add
sub
push
sbb
sbb
ror
dec
cmp
addr16
push
into
push
mov
and
push
mov
pop
push
orb
jg
hlt
dec
sub
imul
push
mov
aaa
xchg
insb
xor
pushf
and
add
add
push
enter
dec
out
pop
scas
mov
ds
lret
test
push
and
test
shlb
inc
mov
aad
cmp
repz
jno
fdivrl
call
lcall
fstpt
test
dec
in
mov
fidivrs
mov
mov
scas
inc
sbb
imul
jle
in
push
in
enter
insl
aad
jbe
in
pop
inc
inc
xor
movb
out
and
fildll
ljmp
into
cwtl
lcall
inc
pop
jp
and
test
sti
sbb
or
cmpsb
dec
xlat
pop
insb
inc
pop
jae
dec
jno
mov
stos
cltd
sub
mov
dec
mov
jno
in
sbb
rorb
stos
jle
cmpsb
stc
stc
mov
movsb
cmc
mov
sbbl
rcll
add
inc
or
cmp
sbb
iret
mov
int3
fs
sub
imul
mov
inc
mov
jle
mov
jne
xor
and
andb
dec
idivb
clc
or
enter
mov
testl
push
mov
add
sahf
inc
int
cmp
dec
ficoml
sub
dec
mov
xor
pop
pop
mov
mov
push
cmpsl
mov
pop
rorb
dec
fcoms
push
lods
aaa
int3
std
test
in
in
movsl
repz
dec
push
loope
popa
push
into
insb
mov
mov
cmp
into
xchg
testb
iret
adc
and
adc
out
mov
fdivs
adc
mov
push
std
push
adc
inc
pop
or
in
lret
lock
ret
push
testb
jmp
adc
data16
cmp
or
cmp
fdivrs
rcrb
psllq
xchg
jecxz
xor
cmp
pop
dec
ja
insb
sti
je
sbb
and
ljmp
and
loopne
cmp
popa
mov
cmp
enter
shl
xor
mov
jno
repnz
pop
cmp
mov
jecxz
fnstcw
mov
ds
add
leave
xchg
push
sti
and
stos
and
gs
xchg
pushf
or
aam
popf
outsb
push
aas
dec
mov
mov
cmpsl
bound
adc
xor
cltd
adc
mov
mov
push
add
inc
or
mov
mov
bound
pop
xor
jbe
repnz
pop
xchg
xchg
fstpt
xchg
push
jnp
xchg
mov
data16
jnp
jae
xchg
pop
call
or
je
pop
orl
stc
lock
andl
pop
mov
popf
sahf
pop
sbb
dec
bound
xor
jmp
cli
dec
fsts
es
jae
idivl
js
fwait
cmp
pop
orl
ret
pushf
lahf
mov
adc
std
pop
dec
mov
jge
out
push
xchg
or
or
sbb
mov
out
pushf
shl
pop
or
adc
lahf
jp
add
mov
cmp
jge
aas
daa
push
push
mov
sbb
cmp
sbb
lea
daa
je
dec
leave
cmpsl
repnz
adc
mov
sarl
jmp
mov
subl
and
icebp
fistl
fmuls
or
ret
xchg
arpl
fdivrs
and
shlb
call
lock
stos
mov
xor
dec
lods
xor
xchg
or
mov
loope
pushf
dec
push
xor
push
xor
outsb
mov
mov
movsb
test
ret
nop
call
fidivrs
push
xor
inc
pop
or
xor
aam
jno
sbb
fstl
decl
orb
in
jge
mov
mov
aam
sbb
rcl
icebp
dec
mov
inc
mov
push
outsb
mov
lret
jecxz
dec
cmp
sbb
call
frstor
nop
mov
sub
decb
enter
out
or
sahf
adc
int3
pop
jns
fdivrs
inc
cwtl
adc
mov
imul
cmpl
dec
pop
loopne
outsb
xchg
jno
add
imul
jbe
scas
jmp
push
push
std
add
mov
loope
inc
xchg
adc
add
xchg
in
and
xor
arpl
xchg
loop
pop
jg
and
std
cmp
in
mov
push
ret
cld
arpl
or
je
mov
pushf
push
jne
jb
jl
ljmp
mov
imul
push
test
xor
adc
or
push
mov
pop
adc
aad
pop
outsb
and
shlb
ss
scas
and
in
dec
inc
sahf
push
daa
lahf
jo
dec
mov
push
popf
cld
inc
dec
test
in
dec
insb
aaa
adc
aas
stc
cmp
rol
outsl
data16
adc
clc
std
je
xchg
cmc
jbe
enter
xor
imul
lea
aam
mov
mov
sub
aam
inc
andb
dec
push
sub
sub
rorb
inc
mov
inc
cli
push
jae
pop
rcrb
inc
inc
lock
cmp
aas
lret
dec
mov
push
or
jns
sub
test
out
sbb
sbb
insl
cmpb
fmuls
repnz
mov
or
test
inc
arpl
fsubrs
icebp
mov
ss
mov
cwtl
inc
add
push
mov
mov
out
lds
notb
xchg
xchg
mov
insl
dec
ja
stos
leave
pop
jecxz
ror
scas
ja
aad
scas
pop
dec
mov
sbb
clc
aas
xchg
sbb
cmp
pop
fbld
test
jns
insb
int3
roll
add
jbe
in
inc
je
mov
mov
call
lock
popf
imul
xchg
adc
mov
int3
dec
xor
mov
mov
fnstsw
jnp
pop
fldt
test
fs
mov
fcmovb
jmp
cld
insb
push
out
fsubrl
in
xor
mov
adc
dec
jno
or
xor
subb
adc
hlt
movsl
ret
dec
xor
inc
inc
movsl
call
sbb
xchg
sub
movsl
push
ss
clc
push
out
sti
sbb
notl
in
jae
mov
xchg
sub
jge
mov
mov
inc
mov
xor
and
inc
or
add
adc
adc
in
pop
xchg
fstpl
xor
mov
in
test
scas
adc
cmpsb
push
iret
int
pop
dec
dec
es
cmp
sub
mov
out
popf
inc
and
pop
repnz
xlat
imul
cld
jge
cli
sbb
shll
bound
mov
push
push
ficoms
out
dec
push
ret
pop
movsb
shlb
and
shl
mov
dec
insl
pop
push
and
jecxz
mov
lea
add
xchg
ret
xchg
sbb
adc
cmpsb
xchg
lea
jno
stos
mov
cmc
loop
test
inc
or
pop
pusha
mov
sub
pop
inc
scas
jnp
test
pop
push
test
xor
pop
jo
je
pop
adc
lret
fsubl
inc
pushf
inc
adc
adc
or
add
icebp
cmp
test
xor
cmc
pop
pushf
mov
mov
shrb
mov
fs
std
loopne
rcrb
repz
xlat
clc
out
vmovd
push
popf
xor
andl
or
mov
lods
xchg
inc
mov
das
test
aam
push
pop
add
cmp
push
mov
pop
cmp
loopne
inc
jmp
loope
fwait
xor
xchg
in
cmc
data16
xchg
addr16
jle
lcall
fcomip
test
add
dec
rorb
pop
mov
inc
add
pop
loopne
xchg
ja
ret
loopne
sub
cmpsb
out
addr16
dec
mov
sub
gs
pinsrw
lret
popa
pop
rorl
dec
sahf
jb
adc
adc
mov
cmp
das
ja
lea
inc
cltd
add
pop
dec
inc
pop
mov
xchg
addr16
and
rcl
or
in
pop
andl
push
pop
or
ret
fs
jg
mov
stos
cmc
sub
test
das
test
gs
testl
xor
test
add
adc
shll
pushf
fisubl
inc
mov
movsb
jle,pn
mov
adc
out
pop
lds
inc
sbb
int
fsts
pop
pop
adc
cs
mov
movsl
mov
mov
nop
or
cwtl
dec
pop
les
mov
jns
pop
pop
sti
push
adc
push
cmpsb
into
nop
adc
daa
and
je
cmp
adc
idivb
shl
out
jnp
mov
adc
cs
testl
jae
xor
mov
outsl
bnd
xchg
cmp
sarl
lods
push
and
hlt
add
jns
ret
push
mov
dec
cmpl
add
cmp
loope
dec
repz
xor
add
pop
push
stc
push
insb
cmp
call
lds
lods
movsb
cli
cs
test
xchg
fs
fs
sbb
and
mov
cmpsb
jecxz
fs
xchg
ret
enter
cli
mov
cltd
xorps
pop
outsb
dec
or
or
jnp
pop
ds
call
insb
push
mov
lods
xlat
shrl
xchg
xchg
push
push
in
je
ret
add
or
cmp
dec
push
repnz
xor
stc
fcompl
pop
mov
or
movsb
ljmp
adc
cmp
xor
out
fwait
mov
dec
push
in
iret
ss
jl
test
sub
and
inc
fnstsw
pop
xchg
pop
xor
inc
xor
mov
mov
push
leave
scas
repz
push
xchg
cmpsl
je
jle
xchg
outsl
inc
inc
add
mov
pusha
addr16
jmp
lcall
stos
mov
jmp
jne
test
dec
inc
sub
sbb
aaa
dec
adc
fistps
xlat
in
jecxz
mov
push
stos
dec
push
sbbl
call
mov
dec
aaa
insb
into
pop
loopne
or
jnp
mov
ja
leave
jbe
stos
cmp
sbb
lea
stos
fisttpll
call
add
cmpsb
nop
inc
inc
push
xchg
nop
xor
mov
mov
xor
cmpsl
dec
jmp
and
popa
ss
jns
aad
lods
inc
in
cmp
or
mov
out
loopne
sub
in
subb
jae
rcrl
jns
mov
lret
stc
std
or
sub
mov
addr16
popa
dec
out
jecxz
inc
sub
ljmp
fcoml
pop
jg
mov
xchg
scas
xchg
inc
js
sub
xchg
and
cmpsl
rcll
popa
in
call
or
dec
push
ljmp
lcall
in
in
and
clc
xor
xlat
sub
add
cltd
popa
insb
nop
cmp
push
rcrl
cmp
jp
push
and
arpl
inc
wbinvd
in
push
ja
xor
lret
or
arpl
fwait
xchg
and
pop
jnp
jg
mov
shll
inc
das
fcmovu
popl
movsl
sub
aam
out
sbb
sbb
addr16
outsb
dec
mov
loop
mov
cmc
lret
movsb
std
jle
cmp
aaa
sar
xorl
push
std
push
gs
scas
outsl
cmpsl
push
mov
loop
popa
mov
cs
cmp
cmpsl
popa
notl
or
les
dec
inc
shll
adc
in
int
iret
gs
mov
add
hlt
movsb
sahf
call
dec
push
dec
mov
add
pusha
dec
and
mov
out
pop
inc
and
xor
lods
adc
mov
ja
add
mov
es
add
into
jecxz
mov
cmp
mov
push
loop
aad
sbb
fs
hlt
jae
clc
popa
out
xchg
sti
sbb
add
jmp
bound
icebp
inc
pop
dec
jo
mov
mov
dec
xchg
loopne
push
orl
nop
add
test
sub
js
rclb
dec
jp
sbb
mov
mov
xchg
movsl
sbb
inc
xchg
leave
incb
xchg
push
push
repnz
cmp
jecxz
mov
test
fsubrl
or
push
outsl
arpl
sbb
out
sub
mov
xchg
or
jecxz
or
sbb
movsb
pop
add
lahf
cmp
push
xchg
lret
iret
cmp
jne
adc
adcb
cli
cli
jo
or
shrb
push
xchg
mov
sahf
lods
imul
jecxz
iret
xchg
cmp
cld
fcoms
test
mov
sbb
or
es
mov
in
insl
add
pop
sti
sbb
pushf
mov
jne
sahf
aad
into
popa
loop
mov
aam
in
sub
sahf
jp
add
cwtl
es
addr16
pop
mov
push
mov
rcll
aam
push
adc
les
and
cmpsb
or
dec
add
dec
xor
sti
pop
sub
push
mov
pop
and
cmpsl
scas
inc
mov
push
mov
jne
xchg
stos
and
jmp
cli
out
mov
dec
push
xadd
aaa
pop
repz
mov
push
sub
jae
and
lahf
out
loope
scas
mov
dec
sbb
cld
sub
pop
sub
dec
pop
ret
or
daa
mov
jne
cmpsb
outsl
scas
out
inc
lret
jbe
cmp
sub
add
mov
mov
and
xchg
popa
roll
mov
dec
stos
out
jo
jle
pop
jecxz
fucomip
cmp
xor
add
push
xor
mov
xchg
call
popf
sub
std
cld
orl
dec
mov
pop
adc
movsb
pop
jo
mov
and
xchg
lahf
insb
sbb
cmp
enter
in
and
pop
jl
sti
int3
hlt
pop
xchg
xchg
pop
mov
push
dec
dec
hlt
mov
push
or
sbb
pop
pop
imul
cld
popa
jl
test
arpl
mulb
in
or
insl
fisttpll
pusha
xchg
or
mov
loop
test
adc
sbb
xlat
lcall
std
or
mov
fidivrs
or
mov
sbb
mov
mov
daa
adc
or
arpl
testb
sub
pop
push
fstpt
clc
mov
fadds
sub
mov
cltd
cli
pop
mov
push
aad
jle
test
or
aam
dec
lea
stc
sahf
mov
test
mov
adc
pop
mov
lahf
adc
pop
mov
jo
xchg
scas
les
aad
incb
jecxz
adc
xor
or
mov
sbbb
jle
xchg
imul
dec
xor
ds
in
out
aam
cmp
xlat
push
pop
adcl
sbb
adc
xchg
test
addl
pop
mov
enter
mov
adc
rorb
and
icebp
cwtl
jmp
and
jb
or
test
cmpsl
outsb
lods
mov
les
add
adc
jl,pt
shl
adc
fimull
scas
pop
shlb
scas
sub
cmp
jecxz
into
aad
loopne
out
es
pop
cwtl
inc
inc
sub
adc
or
sbb
fnstsw
orl
push
out
or
pop
push
sti
push
xor
mov
sbb
xor
xchg
or
cmp
add
jle
sbbl
inc
addr16
sub
cmp
loop
fwait
imul
je
enter
shll
fwait
and
or
test
cmp
scas
xor
sbb
xor
aas
mov
test
jecxz
push
dec
pop
xchg
sarl
dec
xlat
loopne
scas
jp
enter
sbb
jae
movsl
pop
push
and
cmp
mov
call
push
or
add
js
call
loop
add
or
movsl
test
pop
push
sbb
ret
popa
scas
or
inc
pop
insl
jnp
cmpsb
xorb
adc
mov
ja
xchg
and
cltd
test
loopne
stos
mov
xchg
sbb
dec
in
xchg
pop
cmp
aam
rcl
adc
insb
sub
out
stc
enter
idivl
clc
cmp
mov
push
add
aas
xchg
mov
fiadds
ds
push
rcl
in
pop
jne
xchg
jb
ljmp
sbb
inc
int
mov
faddl
push
cmp
ret
mov
test
push
sub
sbb
sbb
and
push
adc
cmp
xchg
or
rcrb
shrb
adc
lret
add
movsb
shll
outsb
mov
push
orb
cmp
mov
xor
xor
jmp
cld
dec
fcmovu
insl
mov
idiv
add
inc
ret
mov
je
dec
in
add
fs
dec
xor
jp
push
xchg
cmpsb
fcoml
mov
cli
andb
sub
std
or
das
mov
into
pusha
test
int3
lods
in
mov
add
mov
push
fimuls
add
clc
icebp
pop
jb
push
sub
movsl
cmp
mov
xchg
mov
pushf
cmpsl
sbb
js
push
movsb
adc
cmc
dec
adc
mov
test
clc
imul
das
mov
mov
popa
fldl
sbb
adc
jb
mov
cmpsb
repz
jo
mov
scas
dec
cmpsl
mov
sahf
fmuls
mov
jno
popf
popf
adc
cmc
in
clc
push
add
push
aaa
popl
push
sub
mov
cli
mov
addr16
push
push
pop
sub
inc
sti
pop
xor
adc
mov
mov
lret
and
aaa
fimuls
pop
cld
cmp
push
ds
shlb
adc
and
fadd
je
cmp
fs
add
push
fiaddl
pop
xchg
mov
and
roll
jle
mov
es
cmpsl
xor
xchg
mov
adc
sub
pop
fstl
or
out
fptan
mov
and
std
mov
lret
loop
repz
lea
mov
jmp
pop
das
pmaxsw
addb
lret
les
mov
mov
fildl
lret
stos
jo
test
jle
dec
adc
push
inc
xchg
cltd
sbb
fists
or
test
sub
push
mov
aaa
cmp
xchg
dec
mov
inc
pop
push
dec
jb
inc
dec
fisttps
mov
push
rclb
ss
jecxz
test
sbb
mov
mov
mov
pop
mov
mov
mov
outsl
std
sub
in
insb
or
enter
dec
cwtl
les
movsb
push
push
push
adc
jg
mov
xchg
movsb
imul
sub
push
jmp
out
mov
jno
sub
stc
add
pand
and
cwtl
sbb
iret
int3
jo
popf
or
aam
loope
pop
les
xchg
test
dec
popf
adc
add
icebp
ficoml
mov
pop
mov
mov
mov
fs
rolb
adc
fucom
out
es
pop
or
mov
sbb
pushf
mov
xchg
cwtl
jo
inc
enter
mov
in
and
cmc
lods
faddp
les
scas
jecxz
and
mov
stos
imul
test
add
mov
shrb
inc
pop
mov
mov
incl
xchg
aaa
push
adc
sub
sub
adc
loope
push
xor
mov
push
or
std
cld
popa
out
loopne
or
mov
test
mov
xchg
rclb
dec
push
jg
fidivrl
sti
xchg
int3
adc
out
adc
pushf
cs
into
cmp
ret
sbb
sarl
mov
sbb
xbegin
adc
adc
xor
jnp
lods
int
sbb
mov
jp
data16
xor
rorb
jae
mov
gs
rcll
push
add
push
dec
and
cmp
and
jecxz
stos
push
pop
push
loope
fidivs
sub
jnp
mov
dec
test
lret
mov
subl
add
stos
loope
subb
sub
xchg
mov
pop
dec
js
rolb
insl
or
rcll
xchg
pop
push
jmp
mov
out
pop
jg
pop
mov
int
std
mov
aaa
subl
les
idivb
jle
xor
in
xchg
lock
in
mov
cmp
adc
xchg
insl
ss
push
sub
adc
add
loopne
mov
xchg
mov
pop
jns
dec
sbbl
sub
xor
sbb
push
cli
dec
outsb
and
pop
xor
dec
cmp
inc
push
scas
dec
jge
aad
in
stos
int3
inc
mov
imul
xchg
dec
data16
adc
dec
je
pop
sbb
or
push
cltd
mov
fbstp
out
out
ss
shlb
in
push
or
in
xor
mov
push
aad
fwait
ds
movsl
adc
mov
adc
call
into
ja
cmpsb
jne
imul
xor
ss
das
jae
xchg
fdivrs
dec
adc
xor
mov
or
lea
sub
sbb
cmpsb
add
adc
push
lods
push
sub
cmp
call
dec
ljmp
xchg
popa
inc
and
in
test
cli
cmp
stos
div
push
das
add
inc
aad
push
out
jnp
fldl2t
jno
int3
movsl
sahf
jecxz
or
daa
jnp
cld
iret
out
decl
and
js
mov
in
shrl
fmul
lods
lret
pop
fidivs
movsl
es
cwtl
in
xor
add
jl
lods
mov
sub
cmp
rorb
add
mov
gs
pop
shll
lods
xor
enter
mov
mov
fucomp
out
push
xchg
jnp
jle
popa
dec
push
add
inc
movsl
int3
dec
jo
dec
pusha
test
xor
insb
pop
adc
in
repz
jnp
jne
imul
leave
pusha
jbe
popf
in
ret
ss
sub
push
lahf
int3
jle
inc
pop
adc
adc
fistl
cmp
mov
inc
stos
imul
into
push
inc
mov
mov
mov
mov
xor
mov
push
mov
mov
dec
aam
lret
scas
push
xor
mov
dec
cmpsl
xor
rolb
mov
dec
jae
xor
adc
mov
mov
addr16
aad
adc
in
push
movd
push
xchg
cmp
and
test
aas
lods
fs
cmp
inc
push
push
rol
push
xchg
out
inc
add
das
inc
cmp
ret
sti
jg
cltd
out
mov
xchg
test
adcb
adc
sub
mov
jmp
mov
scas
mov
jns
popf
mov
cmp
inc
ret
dec
dec
fisttpll
adc
pop
ret
pop
jae
ret
ret
addr16
daa
ret
nop
jecxz
movsb
loope
mull
dec
dec
ficoml
out
loopne
xlat
or
lcall
cmpsl
push
jbe
jge
imul
sbb
or
cmp
mov
js
fmuls
add
mov
mov
mov
sbb
mov
cli
incl
outsb
std
cmpsl
dec
jo
pop
sbb
cs
mov
jne
mov
xchg
imul
mov
cwtl
mov
shlb
das
loopne
ret
cmp
cli
jmp
and
test
int3
cmp
rorl
adc
shrb
fldenv
inc
ljmp
jle
sub
mov
mov
or
adc
inc
mov
arpl
loopne
mov
adc
in
nop
ja
in
add
mov
adc
mov
arpl
cld
jns
lahf
xor
cmc
xchg
push
aaa
or
sub
push
imul
mov
fdivl
out
adc
xor
or
lret
jecxz
xlat
fnsave
pusha
repnz
mov
dec
mov
cmp
mov
cmp
push
and
xchg
adc
xor
int3
aad
cmp
mov
sub
stos
incl
rcrb
stos
fstpt
in
popa
push
movsl
ja
in
sbb
fldt
outsl
addr16
pop
cs
mov
and
sbb
add
inc
sti
or
ds
mov
daa
movsb
inc
pop
push
lret
jge,pt
outsl
inc
mov
movsl
clc
mov
lock
adcb
test
or
roll
fucompp
daa
and
movsl
test
jmp
mov
ja
jp
daa
ss
lret
mov
dec
test
mov
cmp
adc
add
xchg
movlps
shll
add
imul
mov
xchg
movsb
arpl
inc
ret
cmp
push
pop
dec
sbb
inc
and
ljmp
and
jo
sbb
jl
jbe
repz
bound
ja
std
inc
iret
jno
pusha
lahf
fyl2xp1
lahf
pop
mov
and
inc
mov
cmp
outsb
mov
mov
aam
hlt
adc
neg
out
sbb
in
sub
and
inc
ds
add
add
and
mov
dec
mov
mov
mov
adc
orb
xlat
sti
pop
sub
mov
push
test
push
or
cmp
push
fcmovb
adcl
xchg
push
and
push
jae
dec
clc
fwait
idivl
ja
sbb
out
dec
daa
cmpsb
xor
pop
into
imul
xor
cmp
adc
shl
repnz
cmp
mov
cs
mov
push
inc
pop
xchg
add
add
jbe
aas
je
cmpsb
mov
fiaddl
leave
xor
ss
and
movsl
pushf
or
cld
scas
dec
push
int3
adc
daa
mov
stc
adc
pop
in
loopne
subb
add
out
js
inc
out
sbb
movsb
adc
insl
xor
cli
sbb
ja
jno
adc
jae
adc
fimuls
gs
xchg
test
fstl
push
mov
and
sub
adc
stos
inc
mov
mov
std
movsb
jbe
popf
jg
das
push
sub
jmp
mov
push
adc
mov
xchg
hlt
fdivrl
xchg
je
outsl
push
into
and
xchg
test
loopne
add
sahf
adc
dec
cmp
inc
jbe
mov
mov
and
push
mov
dec
les
pusha
shll
out
pop
push
aam
ret
cmp
es
addr16
pop
ja
leave
inc
cmp
jmp
dec
outsb
mov
mov
sarb
mov
push
in
push
cmp
xchg
xchg
and
inc
jbe
cmpsl
dec
sbb
lgs
lods
dec
mov
mov
xchg
sbb
fdivs
daa
das
inc
push
inc
mov
out
jg
cmp
jns
jle
sbb
fdivl
iret
sbb
add
inc
or
jb
arpl
fistps
xchg
cmpsl
mov
call
mov
scas
icebp
xor
adc
mov
shlb
mov
test
lods
fistl
negl
push
fidivs
mov
push
imul
push
xchg
jmp
add
in
rorb
pop
jns
dec
dec
aad
xor
sbb
test
and
jge
mov
sbb
xor
and
mov
push
loope
mov
pop
sub
rcl
lcall
bound
out
dec
movsl
fmull
push
push
shll
pop
jae
cmp
mov
mov
adc
push
pop
cmp
fldl
test
adc
mov
cs
adc
dec
add
pushf
sbb
push
nop
adcl
jne
ja
ss
fsubrp
dec
sub
and
pop
js
adc
push
inc
arpl
popf
push
lret
mov
cmpsl
aas
jl
sub
cmp
and
lret
mov
dec
loopne
in
les
scas
imul
dec
into
jge
push
or
test
fstl
ret
leave
lods
jp
mov
mov
inc
cmp
and
int3
xor
cli
mov
sbb
test
rcll
clc
inc
mov
aad
wrmsr
xor
fists
add
mov
sub
jle
inc
sti
dec
icebp
push
pop
cld
mov
cmp
and
mov
popf
ss
mov
push
shr
mov
fstpt
mov
xchg
in
jae
stos
call
inc
sbb
pop
jno
iret
cmp
inc
insl
shl
pop
ja
repz
xchg
dec
mov
pop
inc
xor
je
movsb
inc
arpl
mov
movsl
inc
fmuls
je
jle
add
and
inc
shlb
pop
xchg
fnstenv
inc
inc
in
add
mov
xchg
aas
xor
and
push
aad
out
xchg
imul
orl
mov
dec
lock
jae
sub
xor
in
negb
pushf
xlat
shrb
mov
leave
out
test
or
fsubr
pop
mov
dec
adc
inc
mov
cli
cmp
fisttpl
mov
dec
cmp
xor
mov
stos
push
faddl
cmp
paddsw
push
dec
fst
shrl
and
scas
icebp
iret
dec
pop
xchg
and
inc
pop
jne
in
push
and
pushf
sub
dec
cmpb
adc
sub
fimull
sbb
sbb
cmp
add
das
sub
loopne
cmp
sbb
push
xchg
arpl
loopne
shrl
cmc
pop
inc
and
loopne
push
in
xor
jle
addr16
popf
movsb
in
out
pop
dec
lret
in
stos
xor
jns
mov
inc
xor
cltd
xor
and
adc
cwtl
cld
popl
jbe
dec
test
add
mov
sbb
ja
insb
rcrl
hlt
cmp
push
jb
pop
orl
ret
rcll
mov
xlat
dec
jns
mov
lcall
mov
or
ret
faddl
push
pop
test
pop
stc
ja
pop
pop
sbb
lcall
xor
dec
mov
push
mov
out
sbb
xchg
xor
stc
incl
mov
pop
sub
test
jo
jg
sbb
mov
mov
in
xor
mov
mov
pop
pop
mov
or
fucomip
cld
iret
dec
mov
shll
notl
push
lea
lods
mov
into
lods
outsb
fmulp
repnz
pop
stos
das
mov
adc
mov
add
movsl
xchg
or
fwait
nop
jmp
or
push
jns
lret
inc
push
arpl
int
hlt
dec
lret
outsb
add
arpl
pop
inc
cmc
testb
cmc
and
insl
cmp
push
lds
outsl
push
pop
insb
pusha
push
mov
push
popa
ret
cmp
cmp
ret
popa
xchg
lds
inc
leave
pop
mov
mov
mov
gs
jo
sub
jo
pop
movsb
mov
cmp
push
arpl
lds
xchg
stos
jle
pusha
cmp
out
mov
cmp
mov
adcl
stos
dec
mov
jle
adc
jg
inc
outsl
fmul
sbb
jbe
adc
aad
and
iret
stos
mov
arpl
iret
nop
cmp
jmp
in
jle
scas
test
push
xchg
cs
in
cmp
es
adc
mov
push
push
inc
cld
dec
outsb
les
out
and
mov
aad
ja
stc
call
xchg
cmc
sub
pop
aaa
mov
jo
cvtps2pi
lcall
push
rcr
push
sbb
dec
dec
xor
cmp
mov
insb
jno
aas
scas
xor
iret
inc
aam
cwtl
loop
ret
mov
daa
iret
mov
pusha
out
cs
pop
jo
jae
insb
sub
sbbl
in
mov
and
pop
jmp
pop
mov
loopne
fimuls
and
lds
push
jg
scas
jb
cmpsb
or
sub
push
fimull
mov
movsl
dec
das
call
pop
fisttps
call
and
cli
inc
adc
inc
fwait
sbb
mov
push
jecxz
jo
dec
fsubrp
cmp
popa
lea
push
fbstp
or
test
add
cmpsb
add
test
add
sahf
and
pop
sub
mov
fisttps
xchg
stos
xor
mov
mov
pop
mov
xchg
bnd
popf
mov
xchg
xorb
jecxz
sub
adc
xor
movsl
lods
push
inc
mov
pop
cmp
or
pcmpgtd
mov
push
push
inc
xor
xor
adc
fldl
adc
lahf
mov
insb
ss
ljmp
pop
dec
mov
lock
cld
cmp
sub
in
sbb
je
mov
js
lret
xchg
fs
jnp
pop
pop
cmp
sahf
lret
orb
jecxz
mov
jl
je
int3
and
insb
push
imul
push
shlb
insb
fsubs
inc
mov
ret
or
push
mov
test
clc
in
pop
pop
aad
jmp
inc
ja
fsubrs
pop
xor
cli
clc
lcall
fwait
and
fiaddl
sub
sbb
jbe
pusha
jmp
sbb
sbb
xchg
cmp
mov
sub
jno
outsb
jb
mov
push
mov
scas
out
pusha
or
leave
xor
xchg
jnp
loopne
dec
lea
shll
outsl
ret
rclb
addr16
adc
nop
mov
stc
in
mov
sbb
cli
mov
pop
push
xchg
adc
mov
jbe
mov
fldt
ficompl
ljmp
mov
mov
pop
jne
cmpsl
scas
sbb
int3
popa
adc
outsl
fists
xor
jg
dec
test
lods
fwait
testl
mov
fsubrp
xchg
cld
mov
outsl
inc
mov
cmp
imul
sbb
inc
add
sbb
add
stos
sti
fidivl
shlb
lock
jp
test
xor
out
int
xchg
jmp
adc
cmpsl
jnp
mov
pushf
cmc
aad
mov
and
outsb
mov
mov
cmp
mov
mov
jmp
loop
or
sub
fcompl
or
jae
pop
icebp
lcall
ficompl
call
or
ja
xchg
leave
adc
repz
cmpsb
inc
imul
push
mov
int3
fwait
shll
jb
ds
andl
mov
sbb
jb
pop
outsl
ljmp
jbe
dec
pop
dec
sbb
imul
or
stc
mov
dec
mov
pop
inc
pop
sahf
mov
int
fldl
or
nop
aas
and
push
aam
sub
xor
les
loope
cwtl
cmpsb
stc
mov
xor
push
jl
xchg
in
xchg
loopne
inc
push
jge
xor
repz
dec
data16
mov
sbb
mov
adc
popf
les
bound
jmp
add
cwtl
pop
movsl
test
sbb
xchg
mov
xor
push
jle
inc
xchg
mov
xor
arpl
call
sbb
add
adc
imul
aaa
push
and
aas
push
mov
cmpsb
adc
inc
mov
xchg
add
fwait
aad
pop
inc
clc
hlt
lods
repz
test
daa
mov
push
fs
outsl
cmp
or
call
idivl
ret
xorb
mov
mov
xor
stos
js
rcrl
mov
test
pusha
das
xchg
or
pop
flds
pop
cld
mov
pop
inc
mov
aas
mov
sbb
lret
rolb
ror
mov
xchg
cltd
xchg
cmpsb
adc
idivl
xchg
jle
fsubrs
pop
mov
movsl
mov
int
hlt
pop
mov
mov
jmp
pop
leave
xlat
movsl
mov
push
xor
dec
xchg
sbb
xchg
jmp
out
xchg
or
mov
outsl
ret
test
shr
mov
jmp
stos
cs
and
or
aad
sub
jb
in
xchg
inc
fisttps
subl
pop
aas
mov
cmp
aam
jg
cmp
jne
movsb
loop
sub
adc
push
push
mov
push
sarl
mov
jnp,pt
jno
mov
or
test
mov
pop
fimull
xchg
test
movsb
pop
mov
int3
pop
xchg
pop
pop
fimull
or
dec
lcall
decl
fnstcw
cmpb
push
jp
fucomi
fidivs
add
inc
mov
cwtl
ret
fistl
ss
push
mov
and
rcrb
ret
pop
pop
mov
mov
xchg
lahf
test
mov
mov
js
mov
ljmp
sbb
inc
movsl
imul
loope
mov
cmp
or
sti
jbe,pn
imul
lods
pop
iret
cmpsb
push
popa
pop
mov
adc
call
lock
lcall
xor
cmp
in
xchg
std
adc
in
cmpl
shl
mov
and
incl
cmp
data16
inc
lcall
insl
xchg
jmp
mov
insl
enter
or
mov
mov
icebp
addb
hlt
and
mov
mov
push
out
pop
daa
pop
adc
adc
inc
ret
pop
lahf
push
mov
lock
aam
sub
fcomps
pop
add
movsb
xor
lods
inc
mov
mov
jae
arpl
dec
jge
mov
leave
mov
xor
out
jmp
or
imul
inc
push
test
popf
test
sub
push
popf
fisubrs
filds
imul
sub
and
rcl
scas
psubb
jo
adc
leave
sarb
mov
xor
inc
std
les
sbb
outsb
fbld
xor
out
xor
rcll
testb
jp
mov
fnstsw
mov
stc
sub
add
xchg
cmp
notb
adc
cld
xchg
mov
sub
xor
and
movsb
inc
pop
out
stos
or
es
lock
aas
cli
or
push
xchg
out
cmp
xor
xchg
sub
mov
pop
mov
scas
lds
js
mov
adc
push
mov
aaa
mov
add
sahf
sub
mov
mov
xchg
bound
inc
jmp
aad
jl
aad
or
dec
mov
xchg
and
arpl
mov
shll
or
push
iret
scas
aad
test
or
xchg
lods
je
mov
pop
pop
and
jae
inc
mov
jae
dec
push
push
int3
adc
dec
jnp
mov
flds
jb
mov
js
xor
movsl
push
cmp
jne
addr16
add
mov
std
xchg
dec
movsb
push
cmpsl
add
dec
fdivrs
fstl
push
jge
cmp
mov
outsb
adc
sti
test
xlat
movsl
data16
sbb
and
sub
or
sbb
cs
inc
sbb
push
negb
and
out
mov
lock
push
xchg
loope
pop
mov
push
push
roll
fwait
out
out
outsb
cmp
stos
in
jns
jge
push
or
stos
les
mov
xchg
push
push
and
into
jbe
loop
adcb
in
stos
lock
dec
call
repz
sarb
mov
sub
subl
lods
or
lcall
add
rorl
adcb
repz
jo
scas
mov
cwtl
mov
into
sbb
mov
pop
mov
sub
push
ret
sbb
xchg
sbb
ds
sbb
inc
aas
jb
insb
add
sub
ja
jecxz
mov
jp
cltd
cld
sub
sbb
fwait
xor
int3
push
daa
jg
pop
xor
sbbb
xor
test
daa
fisubs
adc
aas
jo
sub
xchg
mov
adc
jns
and
xchg
xor
push
sbb
lcall
mov
clc
aam
inc
xor
xor
cs
pop
stos
mov
idivb
les
scas
lods
int3
cmp
loopne
repz
repz
gs
aad
pop
arpl
cs
icebp
mov
test
leave
push
cwtl
jmp
or
jecxz
xor
ljmp
push
pop
and
push
pop
das
cmp
clc
hlt
hlt
imul
je
pop
insb
mov
pop
mov
mov
test
ss
mov
fnsave
inc
or
addb
loop
and
dec
loopne
mov
pop
adc
dec
lcall
aad
cmp
repnz
das
push
ss
fucomip
jne
je
jns
filds
jae
adc
xor
push
pop
inc
scas
pop
ja
stc
bound
cmp
jae
out
out
icebp
sub
js
sahf
and
jne
sub
mov
cmp
scas
lahf
inc
loopne
adc
test
pushf
and
mov
mov
mov
add
loopne
cmc
fimull
lret
pop
xor
gs
jmp
and
cmp
inc
sub
mov
jne
cwtl
ja
add
ljmp
loop
sahf
mov
or
cmpsl
pop
add
push
insl
jbe
lret
xchg
out
in
mov
add
inc
add
aas
xor
rcrb
cmpsb
testb
fnstenv
sti
ss
mov
mov
popa
roll
loope
dec
jp
out
shld
mov
mov
sub
gs
lret
cltd
push
imul
sbb
mov
jae
pop
sub
cmpsl
loop
sub
cwtl
xchg
pop
sub
lods
in
sbb
xorb
imul
inc
lock
dec
xchg
add
pop
xor
incb
fisubrs
jne
scas
leave
push
inc
sub
std
pop
cmp
scas
xor
jnp
mov
lock
mov
sbb
into
into
add
lcall
hlt
pop
dec
sti
add
jno
pop
mov
aaa
movsl
movsb
test
mov
xor
test
aas
imul
outsl
mov
jg
sub
inc
loop
sbb
mov
add
cmpsl
push
stc
cmp
pop
adc
push
sbb
cmc
xchg
dec
sbb
jge
inc
add
mov
sti
cwtl
cli
jmp
iret
sub
test
mov
shlb
popa
jbe
pop
lahf
xchg
das
mov
in
test
and
pusha
rorl
lret
add
das
push
aas
pop
loop
loopne
lret
insb
ret
xchg
scas
pop
dec
mov
pop
xchg
and
add
jae
xchg
jecxz
add
lahf
jecxz
mov
repnz
cmpsl
popf
add
mov
lods
in
jmp
jmp
lea
cmp
and
mov
fs
xchg
xchg
sbb
rorb
add
sahf
adc
fstp
and
notl
loop
test
cmove
cltd
insl
rcll
pop
ret
orb
gs
jle
les
pop
mov
jecxz
or
xchg
cmc
negb
dec
mov
test
insb
dec
or
xor
xchg
or
in
mov
call
mov
xlat
cmp
aad
xor
sub
test
fcmovnb
xchg
sbb
aad
adc
xchg
xchg
or
mov
cmp
stos
clc
add
fdivl
dec
lods
pop
mov
pop
decb
enter
fcomps
or
test
jl
mov
pop
scas
cmpsb
mov
repz
add
loop
test
sub
mov
mov
xchg
lods
fstpt
sahf
imul
loope
mov
cmpsl
add
test
call
and
dec
dec
movsb
leave
fldcw
ds
mov
or
push
mov
loop
lahf
cwtl
cwtl
and
pop
dec
jnp
or
scas
dec
and
jnp
pop
rcl
cs
mov
stos
subb
cli
shll
loope
add
push
push
stos
sbb
mov
jecxz
fsubs
data16
add
adc
xor
aad
sbb
xchg
jecxz
fstpl
push
test
inc
jle
aaa
lock
lcall
hlt
inc
in
cwtl
outsb
pop
test
aam
jl
adc
icebp
ljmp
stc
xor
xor
xchg
out
std
std
sahf
insl
mov
inc
pop
jo
fcompl
mov
xor
js
add
and
push
jnp
jb
mov
les
test
cwtl
pusha
cli
jno
jg
jmp
in
insl
jno
arpl
mov
pop
shlb
mov
mov
lods
inc
pop
and
lahf
repnz
iret
movsl
sub
xchg
cmp
inc
mov
popf
jmp
test
jp
aad
adc
jae
jno
test
sahf
mov
add
imul
lcall
out
mov
xchg
pop
dec
fldenv
jb
push
daa
sub
mov
int
clc
xor
in
adc
mov
outsl
jecxz
popa
inc
sahf
jg
cmpsl
adc
mov
daa
flds
sub
outsb
mov
or
incl
sbb
or
pusha
js
xchg
popa
xor
out
loop
call
xchg
popa
adcl
inc
scas
fdivrl
in
push
je
ret
bnd
in
jge
xlat
sub
lcall
cmp
jecxz
dec
mov
aas
xchg
cmp
cmpsl
push
or
mov
jns
test
test
xor
jmp
lret
cmc
mov
pushf
add
cwtl
cmc
dec
xorb
xchg
push
pop
in
mov
xchg
mov
enter
pop
lahf
and
sbb
notb
or
mov
or
fwait
out
mov
jne
adc
and
loop
aad
mov
adc
insl
lret
mov
imul
inc
rolb
pop
mov
cmp
hlt
mov
adc
testb
addl
insb
test
mov
sbb
loop
shlb
xchg
lds
fstl
sub
imull
inc
xchg
sub
aad
lods
jne
jecxz
pop
pop
test
cmp
popa
pop
in
jmp
outsl
jge
fisubrs
imul
ret
xchg
or
dec
pop
sbb
sub
mov
es
loope
mov
popf
sbb
mov
xchg
loopne
ja
hlt
mov
in
mov
mov
in
shll
dec
scas
clc
inc
sbb
stc
pushf
pop
subl
xor
xchg
imul
mov
and
sbb
iret
std
sub
mov
adc
cmpsb
lock
xchg
dec
cmc
rclb
or
sahf
rcrb
dec
test
shlb
frstor
shrl
sub
dec
lcall
mov
ret
in
pop
push
push
xchg
lds
sbb
inc
and
mov
ljmp
mov
dec
test
sub
gs
xor
lcall
repnz
xor
jb
push
stc
mov
lods
popa
aaa
cwtl
incl
add
xchg
jmp
pusha
add
jae
and
mov
pop
lods
sub
setle
push
fwait
leave
cld
popf
ds
insb
mov
add
pop
xlat
jmp
jbe
and
xchg
test
les
mov
ror
sub
or
mov
mov
add
sbb
incb
and
cmp
mov
cmp
inc
dec
sbb
fldl
and
mov
xchg
cmpsl
add
sub
jbe
clc
test
pusha
fwait
xchg
dec
push
fdiv
adc
and
adc
je
push
repnz
xchg
cmp
push
sbb
in
or
mov
sub
ret
mov
loopne
inc
ret
adcb
lret
lock
movsl
push
or
or
jmp
lods
out
or
iret
stos
movsl
test
push
jl
pop
xor
sbb
inc
push
unpcklps
mov
adc
mov
cmp
mov
xor
or
gs
out
jg
sub
adc
fstps
inc
mov
ss
mov
ret
int3
cli
add
stos
mov
stc
cs
stc
cwtl
cltd
add
xchg
or
jge,pn
push
or
popa
adc
cmp
mov
mov
mov
loopne
out
inc
incb
and
push
pop
subl
int3
scas
push
pop
clc
xchg
enter
mov
mov
fsubr
cmc
mov
xlat
inc
mov
icebp
dec
sub
pop
xor
lods
sbb
and
push
movsl
lret
sbbb
ljmp
loope
ret
jnp
mov
mov
outsb
xchg
sahf
sub
mov
mov
sbb
or
std
scas
negb
test
push
adc
xchg
je
shll
out
fstpt
scas
lock
divl
adc
pop
sbb
cli
pop
add
or
icebp
fninit
movsb
call
cmc
pop
cmp
pop
in
dec
mov
sti
shll
xor
mov
sti
test
adcb
fldt
cmp
leave
in
ret
ret
sbb
imul
data16
jnp
dec
mov
insl
int
xchg
and
mov
fsubrs
aaa
push
negl
inc
dec
inc
pop
js
push
addr16
cmpsl
mov
xor
adc
add
add
adcb
pop
into
or
dec
lea
add
xchg
out
gs
pop
dec
pop
in
fistpl
out
lock
xlat
sbb
push
int
push
sarb
or
xchg
cld
add
aad
sub
inc
int3
add
adc
filds
scas
movsb
test
and
insl
into
scas
push
mov
inc
ja
push
insl
nop
add
sbb
jmp
sti
and
loop
hlt
int
pop
fcmovnb
fnstcw
mov
mov
cmp
add
mov
je
aaa
or
sbb
xchg
adc
jns
test
sbb
dec
xchg
in
push
adc
shll
std
lahf
cs
jecxz
adc
inc
lret
sub
xchg
push
push
pop
xchg
addl
lock
sub
sbb
and
lret
push
push
icebp
add
inc
adc
fimull
iret
xchg
lret
aam
mov
mov
inc
sbbl
mov
sub
movsl
iret
adc
jnp
adcb
pop
lcall
test
mov
mov
lds
lock
xor
mov
and
in
push
nop
lds
pop
aam
adc
sub
mov
or
inc
cmp
inc
shrb
subl
jge
mov
jae
xor
xor
sbb
jno
push
iret
data16
lret
mov
lds
data16
fucomp
mov
mov
xchg
repnz
xchg
mov
pop
pop
lods
push
popf
cmp
or
ss
jle
xchg
push
scas
or
movsb
fs
cmp
mov
testb
sbb
xlat
fnstsw
cmp
and
jne
sub
sub
push
push
movsl
and
imul
testb
or
scas
lcall
pop
ds
sub
ret
pop
sub
inc
test
das
jp
sub
sahf
push
cmpsb
popf
xchg
int
inc
mov
inc
xchg
lock
shrl
fstpl
outsb
sub
test
loopne
imul
cmp
dec
cmp
adc
rol
test
xchg
lods
add
mov
or
mov
push
into
jp
adc
sbb
and
arpl
or
nop
add
test
sbb
cmpsl
and
iret
lea
inc
mov
pop
inc
loopne
sub
push
push
push
in
in
clc
pop
pop
mov
cmp
insb
loopne,pn
sbb
and
mov
dec
cmpsl
out
xchg
cmp
jecxz
adc
xor
pop
adc
fwait
dec
jle
mov
cmp
jnp
inc
in
imul
mov
push
add
or
add
jns
cmc
fsubr
and
gs
push
dec
adc
push
aad
or
out
jb
inc
lcall
mov
aad
ret
lods
divb
push
ret
mov
inc
xor
add
push
jge
popf
add
jb
setl
iret
loop
push
ja
add
test
mov
pop
addr16
mov
pop
xchg
sub
push
xor
cs
lret
stc
int3
ffreep
jno
lea
lock
mov
push
repnz
gs
bound
xor
jp
cmc
and
insl
stos
pushf
fucomp
mov
cmp
rcll
enter
or
stos
sub
lahf
jnp
add
push
inc
int3
sub
pushf
ja
dec
imul
cmp
arpl
outsl
adcl
inc
lds
scas
pusha
mov
or
ljmp
xor
leave
or
pop
push
loopne
lods
imul
icebp
pop
adc
test
popa
outsb
jne
xor
outsl
lret
push
mov
fldenv
mov
aaa
out
jmp
sbb
xor
arpl
sti
push
xchg
ja
dec
inc
xchg
pop
popa
inc
cmpsb
mov
pop
sbb
leave
push
lret
cs
es
repz
outsl
or
mov
in
ljmp
ja
stos
pop
inc
fsubrl
adc
lcall
or
loop
mov
or
xchg
pop
test
cmp
and
cmp
add
pop
jno
adcl
mov
test
cld
fcmovb
outsl
mov
sbb
pusha
or
pop
cmpsl
mov
arpl
icebp
cmp
xor
mov
adc
test
shlb
fimull
cltd
inc
out
adc
mov
push
mov
hlt
in
push
push
sub
loop
inc
adc
cmp
mov
jnp
xchg
into
jae
fldl
push
jl
sub
xor
and
and
es
test
xchg
lds
sub
insl
popa
lods
lock
push
pop
cld
add
fwait
inc
jnp
loopne
pop
ljmp
xchg
mulb
dec
jle
notl
xchg
divl
ds
popf
jne
pop
mov
ljmp
aam
ret
inc
mov
fnstsw
test
lods
adc
jno
call
mov
pop
stos
cmpsl
pushf
mov
outsl
xchg
inc
nop
adc
int3
lods
and
mov
xor
orb
inc
pusha
sti
dec
cmp
addr16
mov
dec
addr16
ret
nop
dec
fstl
cmpsb
pop
xor
pop
inc
loopne
aam
sbb
std
jnp
inc
jmp
jae
out
mov
inc
cmp
clc
push
fcoml
and
pop
das
sbb
lods
insb
fs
and
ret
fcomip
in
sahf
adc
test
push
subl
add
mov
xchg
frstor
sub
cmp
mov
xor
insb
sub
nop
push
or
push
mov
incb
xchg
roll
sub
stc
xor
pop
dec
and
mov
jmp
lods
cltd
jnp
pop
adc
mov
pop
push
pop
jp
js
push
sub
and
lret
enter
sahf
pop
into
mov
fidivs
in
jns
jns
jle
lock
adcb
aam
out
lahf
mov
out
and
dec
xchg
sbb
mov
push
aam
jle
cmpsl
sahf
ljmp
dec
mov
push
xor
lea
pop
cmp
push
or
shll
jne
cld
gs
nop
imul
mov
insb
sbbb
xchg
je
xchg
inc
mov
xchg
or
jno
push
add
push
loope
icebp
lret
dec
fdivrl
aam
lods
lahf
scas
pop
movsb
arpl
jmp
out
mov
inc
orl
adc
and
movsb
orl
pop
cli
mov
adc
xchg
int
xor
movsl
lret
xor
mov
repnz
shll
lock
sub
int3
mov
ss
adc
sbb
or
fstl
dec
inc
test
shl
aas
sub
sub
add
jmp
lea
jbe
inc
lock
int3
daa
jns
inc
lds
mov
in
adc
pop
jns
stc
in
push
push
dec
jg
xchg
hlt
jae
xchg
xchg
lcall
and
je
fs
gs
lea
incl
xchg
lahf
or
loope
ds
push
inc
or
pop
jo
test
mov
setl
mov
hlt
cmp
pop
pushf
in
mov
dec
test
shll
fsubr
stos
cmp
adc
cmp
dec
xor
fdivl
mov
addr16
inc
fistps
stos
xor
pop
std
test
cmp
fsubl
or
mov
sub
mov
fdivrp
lods
or
cmp
pop
rcrb
movl
dec
shlb
loop
lret
cmpsb
jge
pushf
dec
sub
jns
push
pop
pop
es
dec
popf
mov
lcall
jne
aam
xor
je
or
jge
sub
das
jp
pop
call
or
test
xchg
aas
int3
das
mov
push
repz
jns
cmp
push
mov
ds
in
adc
test
test
or
dec
mov
jle
xchg
adc
xlat
mov
out
pushf
outsb
adc
or
add
popf
xor
insb
leave
es
or
lods
push
add
xchg
inc
add
fs
jb
lock
jg
rol
or
mov
fisubs
lods
sub
jno
jecxz
xor
ljmp
repz
mov
cmc
xor
push
in
lods
leave
shlb
lea
inc
lods
lret
sub
dec
call
adc
adc
aas
add
xor
cmp
movsl
adc
mov
bound
mov
lret
aad
and
cmpsl
mov
outsb
lock
mov
aas
jmp
hlt
aam
jp
jbe,pn
je
out
mov
mov
and
cmp
mov
inc
push
loop
stos
cmpb
jbe
stos
cld
push
cmp
sahf
call
add
in
inc
sub
adc
rolb
gs
in
mov
sub
push
add
cmp
jle
mov
scas
adc
or
sub
arpl
adc
movsl
add
or
mov
jg
add
push
dec
mov
dec
hlt
test
ret
add
clc
or
addr16
sti
testb
cs
cltd
add
mov
push
push
insl
push
and
mov
xchg
pushf
cltd
fimull
xchg
cmp
das
adc
xor
dec
mov
xchg
je
scas
int
gs
sub
inc
sahf
loope
dec
loope
mov
adc
testl
and
add
xchg
mov
jb
arpl
inc
hlt
mov
mov
ss
inc
pop
sbb
jge
jb
push
or
pusha
popf
ljmp
or
lea
shrl
popa
add
xor
xchg
fwait
imul
or
inc
jp
adc
popf
pushf
or
loopne
in
pushw
mov
mov
sbb
or
mov
in
imul
pushf
xlat
pusha
sbb
imul
rol
test
mov
mov
popa
inc
xchg
fnstsw
out
jae
xchg
and
dec
lahf
nop
xchg
ljmp
inc
inc
sbb
movl
popa
mov
and
aam
dec
lods
push
adc
push
pop
sub
idiv
scas
or
notb
cld
movsb
sub
in
mov
mov
push
les
data16
dec
push
dec
mov
pushf
jne
inc
dec
adc
lock
cmp
es
sti
movsl
sbb
dec
jecxz
lret
test
mov
fidivl
mov
cmp
jb
sbb
mov
into
mov
leave
into
jp
in
sub
call
jns
imul
sub
daa
mov
jbe
daa
stc
mov
jmp
cmp
jno
cmpsb
xor
inc
or
push
shll
mov
pop
add
pop
mov
outsb
pop
insl
mov
mov
mov
daa
fcmovnb
or
ja
out
adc
rep
xor
mov
adc
xchg
mov
or
loopne
loope
bound
popa
pusha
sahf
fnstcw
std
ret
test
inc
je
sbb
pop
fsubrl
jl
jbe
popf
dec
popf
enter
ret
cmpsl
cmp
mov
add
or
mov
mov
fisubrs
shll
mov
push
jns
and
push
popf
sub
xor
cmp
pop
mov
lret
sub
jge
dec
pop
xchg
dec
fidivl
sbb
push
mov
and
cltd
lret
push
or
pop
sub
jnp
add
shrb
int
inc
mov
mov
dec
pop
adc
xchg
mov
jae
imull
mov
pop
mov
scas
or
jns
xor
jg
xchg
push
popa
sbbb
mov
insl
xor
rclb
inc
jb
xchg
and
jmp
xor
push
jno
mov
aam
pop
js
imul
push
movsb
sub
cwtl
cli
pushf
push
repnz
outsb
xor
insb
ljmp
hlt
pop
fbstp
xchg
xor
outsb
les
xchg
in
repz
mov
push
repz
xchg
ret
xchg
js
jbe
fadds
pop
xor
cltd
pop
std
mov
sub
loope
mov
in
divl
out
xchg
push
addr16
jmp
fldcw
out
lahf
les
lods
test
pop
or
data16
push
scas
pop
pop
lcall
mov
cmp
push
lea
pop
fisubrs
sahf
lea
mov
xchg
or
mov
adc
jle
loop
and
pop
fistl
sahf
mov
es
xchg
inc
iret
shl
scas
xchg
clc
sub
and
add
add
dec
mov
adcl
jle
push
push
xchg
mov
shll
jb
fsubrl
mov
jle
adcb
fcoms
test
jg
push
sbb
jne
mov
xor
fs
dec
test
lret
repz
mov
and
dec
mov
mov
shll
dec
pushf
outsb
fwait
dec
xchg
rcrb
iret
pcmpgtb
push
je
xlat
jge
push
push
sbb
and
ja
add
aaa
std
cmp
jmp
mov
pop
out
add
sub
leave
int
sub
push
mov
push
mov
push
jmp
loopne
loope
int3
frstor
pop
cmp
shrb
and
push
fstpl
and
popa
add
lods
aam
push
xor
jb
popf
or
mov
cmp
push
mov
xorl
jmp
outsb
test
or
je,pn
std
aaa
mov
dec
cwtl
xchg
lds
jmp
cmp
jle
jb
loope
fs
xchg
sarb
pop
rolb
js
std
nop
sub
mov
mov
mov
stos
shl
js
cmpsl
hlt
inc
in
mov
adc
cmp
out
mov
xchg
pop
jecxz
lods
xor
test
jge
sbb
enter
lock
and
jle
add
mov
int
outsl
jl
adc
xchg
inc
out
cmp
jae
sar
mov
in
aaa
add
ret
mov
jecxz
add
addl
xchg
stos
lcall
lret
xlat
jae
adc
sti
dec
test
mov
adc
stos
pop
std
xor
push
outsb
pop
ja
sub
fxch
jl
and
mov
inc
daa
popf
adc
movsb
rcrb
dec
pop
or
push
clc
cmpsb
pop
and
dec
cmp
std
pop
insb
pop
addr16
aaa
mov
out
or
loopne
cmpsb
pop
sbb
xchg
mov
mov
inc
xchg
push
fs
jae
in
xchg
insb
jns
push
push
sti
cmp
repnz
js
inc
movsb
test
cmpl
push
ljmp
nop
das
push
push
cmovnp
mov
mov
aas
inc
and
dec
push
fldenv
xchg
push
aad
adc
pop
aam
pop
sbb
xor
jmp
aad
mov
cmp
rorl
cltd
xor
sbb
fmuls
mov
aaa
ret
dec
ja
xor
fwait
and
inc
test
jg
inc
push
or
mov
in
cmc
outsb
cmc
or
shrb
stos
cld
stc
jle
das
sbb
push
sub
popa
mov
push
xchg
dec
scas
and
jno
stos
cli
loopne
xlat
movsl
jmp
sbb
xchg
out
push
or
add
push
fmull
pushf
je
adc
cli
add
sahf
mov
arpl
cmc
lock
and
mov
add
pop
pop
mov
std
inc
xor
scas
and
popf
sub
add
xor
int3
xchg
mov
or
cmp
shll
jo
dec
or
test
xor
sbbb
loopne
mov
adc
js
lret
out
dec
and
xchg
ret
pop
enter
jge
cmp
xchg
outsl
push
popa
push
popf
lcall
pop
and
mov
add
lahf
push
and
fs
ljmp
jp
fisubrl
aam
cmp
ret
push
xor
notb
sbb
or
xchg
mov
dec
ss
push
xchg
xchg
jg
or
sub
das
push
mov
push
push
out
ljmp
mov
jl
ret
cmc
repz
or
add
cmp
in
sub
mov
fbstp
sub
dec
daa
mov
dec
cli
mul
rolb
std
ljmp
out
ficomps
je
jb
jmp
or
inc
int
mov
mov
icebp
cmp
callw
mov
lea
xor
inc
push
mov
out
adc
jno
ljmp
pusha
cmc
imul
or
and
mov
jnp
addr16
dec
mov
ret
jns
xchg
add
pop
ja
sahf
lods
out
sub
sbb
cmp
cs
shrl
popf
xchg
mov
xchg
adc
xchg
pop
adc
lcall
adc
push
mov
adc
xchg
or
repnz
mov
inc
dec
stos
xor
fsubrl
in
out
cmp
push
scas
out
daa
or
ret
sbb
mov
add
adc
std
xchg
in
push
cmp
fstl
jne
push
pop
dec
adc
inc
inc
inc
push
and
push
mov
es
fwait
lcall
ret
lods
inc
sarl
and
xchg
test
adc
fidivl
dec
and
or
cs
cld
xchg
cli
or
es
cli
xchg
and
arpl
or
xchg
inc
mov
dec
into
jns
hlt
out
adcl
sbb
mov
mov
and
xor
cmp
and
sbb
ret
loopne
popa
outsl
rcrl
fst
and
push
mov
ret
dec
pop
lret
lret
push
push
xor
gs
or
movsb
jge
push
clc
inc
xorl
or
mov
cmp
mov
test
pop
ja
inc
mov
sub
jle
cmpb
fidivl
xchg
lods
in
mov
mov
add
xchg
mov
add
arpl
inc
mov
mov
cmp
dec
jbe
inc
inc
incb
pop
sub
push
mov
outsb
retw
mov
dec
call
pop
ror
scas
sti
mov
sub
out
les
dec
jmp
cmp
fisubrs
pop
aas
cmp
mov
repz
jbe
and
inc
pop
fsubl
sahf
or
nop
sbb
cmp
ljmp
adc
nop
add
sbb
push
xchg
or
jae
cmp
add
jg
andb
ret
iret
adc
shl
fisubrl
adc
push
or
fldcw
push
pushf
and
and
fimuls
add
call
or
sbb
les
popf
mov
xchg
into
mov
sahf
jp
push
fisttpll
ud0
mov
jnp
dec
leave
jbe
push
out
loopne
mov
sbb
rclb
aam
out
jl
push
add
jmp
xor
pop
ljmp
repz
mov
insb
inc
xchg
xor
shll
cmp
adc
xor
orb
push
mov
push
in
sub
ljmp
rcrl
xlat
xor
cli
xor
or
test
and
dec
mov
test
stos
ret
repnz
dec
or
inc
jle
xchg
cmpsl
cmp
and
outsb
xchg
stos
pop
sbb
ds
mov
in
add
xchg
cmc
sahf
shll
add
out
dec
xchg
mov
rclb
xchg
xchg
pop
popa
jns
ret
lock
dec
sub
inc
adc
or
or
daa
and
fcmovnb
cwtl
jns
fisubrs
mov
adc
jnp
jg
loop
es
in
add
inc
jns
push
mov
outsl
add
mov
cmc
je
mov
lods
pop
adc
cld
scas
jge
push
mov
mov
xor
lock
fdivrl
int3
mov
sub
mov
in
xor
cmp
ja
cmc
xchg
rolb
dec
cli
and
sysenter
lea
shrl
bound
xor
arpl
popf
pop
cmc
mov
daa
es
cmpsb
add
mov
pop
mov
jb
in
jmp
dec
add
out
push
jns
mov
ficompl
xchg
add
push
insb
into
popa
popa
push
jae
mov
in
fcmove
or
dec
jge
lock
test
jo
mov
ss
das
dec
sub
jne
mov
cmp
add
push
cmpsl
movsl
xchg
mov
jg
push
jecxz
push
or
sub
jo
lock
repz
jg
mul
mov
jle
jno
shl
push
test
adc
xor
sahf
arpl
pop
xchg
xchg
daa
sub
out
jp
rcrb
cmpb
cmpsb
ja
push
mov
pop
mov
sbb
mov
pop
mov
and
lahf
mov
mov
rcrb
lods
out
jo
jmp
cmpsb
sti
dec
mov
add
jmp
or
lret
jns
sarl
enter
inc
jg
dec
shrb
fistps
sbbl
xchg
ds
cmc
push
pop
push
push
pop
mov
jl
lea
int3
loopne
jmp
nop
in
mov
dec
lods
dec
test
dec
mov
fists
in
push
sub
dec
pop
fsubrp
dec
scas
or
jmp
shr
dec
adc
test
fld
dec
or
mov
pushf
mov
notl
xchg
push
xchg
mov
mov
dec
add
and
pop
xor
fwait
nop
push
in
mov
mov
enter
repz
into
pop
sub
nop
fwait
shlb
call
loopne
daa
sbb
jmp
sbb
or
sub
mov
lods
or
fisubrs
xchg
inc
and
mov
lcall
pushf
cmp
scas
mov
jne
or
mov
arpl
loop
adc
shr
inc
inc
shlb
xchg
in
xor
mov
add
mov
mov
scas
cld
cmp
lret
add
movsb
pusha
outsl
pusha
add
sbb
sbb
jg
ret
daa
pushf
in
or
fdivrs
mov
lcall
lods
cld
int
call
and
hlt
icebp
add
jmp
loopne
cmpsl
loopne
mov
sbb
aad
repz
cld
pop
mov
in
ja
sbb
mov
push
mov
pusha
scas
xchg
jbe
jne
or
cltd
sbb
mov
inc
jae
xor
push
ffreep
sbb
out
push
pop
mov
js
aas
mov
cmpsl
mov
mov
add
jbe
jb
jnp
les
push
fists
mov
in
push
or
xor
pop
stc
jp
ss
jne
les
call
out
std
pop
push
int
mov
movsl
push
cmp
or
jbe
movntps
xchg
repz
lret
xchg
xchg
jne
mov
insb
fcomps
pop
sub
pop
add
dec
lock
insl
xor
cmp
inc
and
jbe
ss
push
push
or
outsl
jg
sub
dec
mov
sbb
jle
and
jp
ljmp
inc
push
mov
sub
push
in
and
mov
pop
gs
jns
ret
add
imul
or
test
cmp
pop
push
inc
iret
test
mov
fidivl
gs
dec
xorb
stc
std
aaa
inc
mov
dec
fidivs
shl
stos
mov
fldt
popf
xchg
inc
les
lods
cs
fwait
jbe
push
data16
sub
cld
sarl
xchg
pop
mov
mov
shrl
subl
inc
cmp
mov
inc
push
cmpsb
bound
and
popa
inc
cmpl
dec
movsl
dec
std
lahf
or
add
mov
insb
div
mov
add
aas
cs
ja
call
lahf
sub
and
aas
jae
das
loope
and
dec
pop
fstps
xchg
sub
fnstenv
mov
sbb
jnp
adc
ret
icebp
xor
xor
aad
aas
cli
sbb
fucomp
push
pop
jmp
lret
ret
aaa
push
test
es
int3
out
daa
popa
iret
scas
in
test
stos
mov
test
and
xlat
scas
mov
ljmp
mov
mov
outsl
cmp
pop
xor
out
cmpsb
aas
inc
xchg
xchg
adc
mov
xchg
in
data16
int3
jp
xor
jo
cltd
inc
je
or
jbe
arpl
cltd
std
mov
dec
adc
sub
ret
mov
xchg
lret
fucom
das
mov
dec
mov
das
jb
mov
adc
mov
adc
popa
mov
gs
cs
cmc
and
push
inc
fisttpll
jno
xchg
stos
add
mov
sbb
dec
lods
sti
jae
in
sbb
data16
push
dec
xchg
push
dec
int
cmc
sub
mov
xorl
and
out
or
push
ret
inc
insl
and
push
and
lahf
and
mov
sahf
out
cmp
sbb
mov
and
inc
pop
lock
loopne
test
xor
and
pop
js
pop
mov
leave
les
pop
test
lods
mov
call
and
cs
mov
test
mov
add
jbe
imul
add
jnp
rorl
loope
sarl
dec
adc
and
cmpsl
pop
arpl
and
fcoms
jae
add
xchg
pop
out
loope
mov
into
sbbl
and
lds
and
add
stos
mov
jb
cmovno
cwtl
addl
gs
sahf
aaa
lcall
push
iret
pop
or
in
mov
stc
push
mov
push
test
in
mov
xlat
xor
sub
popf
mov
mov
ljmp
outsl
cmp
push
mov
or
sub
xchg
test
pop
aaa
outsl
iret
jae
jno
je
cltd
xor
cmpsb
or
std
and
cmpsb
jmp
rcrb
out
jae
movl
dec
inc
dec
test
lahf
rorl
jnp
push
pop
push
pop
stc
mov
cli
inc
xchg
adc
adc
scas
ja
xchg
add
adc
sbb
fsubl
and
or
ljmp
mov
lahf
mov
mov
mov
aad
push
repnz
pusha
jmp
push
push
xchg
mov
out
mov
push
jg
xchg
fisubrs
sub
cmp
mov
pop
sub
push
push
xor
sub
pushf
in
div
inc
pop
cmc
sahf
push
jg
dec
scas
inc
movsl
test
imul
pop
fists
testl
sub
sub
pop
and
mov
jle
xchg
icebp
stc
outsl
inc
sub
mov
mov
mov
inc
test
cmpsb
ja
xchg
ret
push
mov
rorb
js
push
dec
mov
push
aam
arpl
inc
xor
or
push
test
push
push
push
cli
sub
leave
cmp
cs
insb
mov
ret
xor
jne
imul
mov
cs
cmp
out
adc
stos
ja
dec
xchg
repz
aad
sub
nop
cmc
jo
xchg
add
pushf
orb
xchg
sub
andb
xor
enterw
insl
bound
int
aad
adc
rcrb
popf
jge
idivl
das
cwtl
mov
in
mov
int
lods
adc
dec
lahf
jl
test
cmpsl
push
jns
push
xchg
fcmove
loop
iret
mov
sbb
pop
stos
rorl
orb
mov
lock
dec
dec
dec
push
push
mov
test
xchg
shr
cwtl
jo
mov
jno
in
enter
movsl
push
mov
insl
and
inc
aaa
mov
lret
cmpsb
out
nop
mov
lods
jo
mov
mov
add
mov
push
adc
lock
xchg
push
into
jae
push
dec
jg
outsb
and
sarb
ret
lret
push
out
sti
fs
test
mov
jge
test
in
ljmp
xchg
xor
add
dec
enter
andb
fisttpll
scas
nop
or
xor
fs
out
adc
cmp
cli
sub
int
push
push
into
adc
ret
lahf
cmp
std
lret
jno
mov
lock
stc
push
hlt
jge
lds
cmpsl
push
and
push
jae
sar
cs
fwait
sahf
inc
xchg
mov
out
or
out
dec
outsb
add
orb
insb
sbb
jbe
pop
mov
lds
xor
popf
dec
mov
mov
dec
insb
or
sarl
inc
andb
pop
xchg
fiaddl
cld
js
insl
add
pop
pop
mov
rcrl
sub
mov
add
jmp
sbb
mov
mov
into
sbb
mov
stos
or
mov
test
jbe
loop
pop
or
jns
cmp
leave
sub
loopne
dec
adcb
jns
ret
or
inc
mov
aad
add
int
out
loope
or
sbb
cld
leave
inc
pop
lcall
sub
mov
popf
sbb
testl
inc
push
jne
ss
jmp
mov
popa
clc
into
sbb
sahf
scas
and
insb
dec
pop
jge
out
gs
sbb
inc
lcall
pusha
sbb
sbb
clc
cmp
dec
adc
mov
outsl
in
hlt
gs
push
cmc
out
movl
aas
jb
dec
sub
mov
rolb
adc
leave
bound
stos
mov
lret
js
rorb
pop
popa
sti
rcrb
loopne
pushf
lods
pop
cmp
jecxz
in
outsb
fistpl
ss
and
je
js
pushf
rol
enter
lret
jmp
pop
inc
loopne
cmc
xchg
jecxz
inc
jmp
adcb
std
stos
jno
rcll
shrl
inc
loop
jb
jae
ficompl
shll
into
cli
sbb
jns
jmp
push
inc
ljmp
mov
cmc
orl
push
adcl
xchg
jg
jbe
leave
xchg
cld
fwait
adc
rcrb
add
fldcw
repnz
jle
sub
jg
sbb
push
jle
je
mov
mov
adc
out
mov
add
cli
cmp
adc
mov
out
subl
sti
add
dec
leave
loopne
xchg
fcomps
xchg
xor
fs
pop
hlt
insl
pop
xchg
arpl
mov
sti
out
mov
and
mov
loope
mov
jno
lahf
jnp
sbb
xchg
es
mov
call
push
mov
sub
adc
mov
cmp
lods
xchg
lahf
cmp
push
loope
in
je
cmp
mov
addr16
and
loope
pop
pop
push
add
xor
out
sub
pushf
pop
sub
icebp
xor
push
push
add
repz
fstl
rorl
cs
xor
mov
es
adc
fwait
mov
cmp
dec
pop
mov
cmpsl
mov
ds
jecxz
sti
fs
dec
nop
pop
jbe
push
xor
push
or
jle
mov
rcrl
jnp
out
sub
mov
inc
add
jno
mov
aaa
fildl
mov
pop
xchg
push
lods
cmpsb
mov
mov
pop
rcrb
ljmp
pushf
fcomps
dec
repnz
mov
add
jno
push
ss
jnp
sub
shufps
incl
lret
xor
xchg
add
popf
aad
pop
scas
push
sarb
adc
dec
lret
inc
sbb
aam
call
cmpsl
in
lock
and
ret
push
dec
sbb
add
repnz
sbb
aad
jg
out
add
cmp
idivl
popa
add
hlt
rorl
jnp
int3
pusha
jne
sbb
enter
mov
in
cltd
push
mov
lods
adc
aaa
and
dec
mov
mov
cmp
lock
mov
sbb
insl
cli
pop
cmp
inc
ret
xor
call
add
push
imul
adc
xor
sub
aam
or
test
xor
dec
les
lds
mov
dec
sbb
dec
fcoms
push
movsb
mov
fs
gs
loopne
aad
jo
inc
lods
out
and
mov
outsl
lds
jnp
dec
movsl
inc
shll
jnp
xlat
nop
jb
shrl
jp
jnp
xor
inc
ret
mov
push
sbb
data16
repnz
push
jne
fmuls
lods
pop
push
mov
push
adc
inc
ret
push
fs
inc
sbb
or
xlat
stos
dec
mov
jo
jmp
adcl
push
lcall
jae
call
push
test
push
les
int
pop
adc
rorl
negl
pop
xchg
dec
fisubrl
pop
adc
sbb
mov
cmc
sub
lret
scas
mov
or
leave
addr16
push
sbb
or
pop
push
cmp
hlt
inc
sub
push
sbb
ret
mov
loopne
fwait
add
pop
stos
push
or
mov
add
adc
in
call
cmpsl
and
daa
push
lock
shrl
jbe
xor
and
incb
push
adc
lea
ds
and
dec
or
mov
and
imul
fst
xchg
dec
jo
in
mov
aam
pop
xchg
mov
lret
inc
sbb
xchg
adc
xchg
jns
mov
aaa
outsl
ss
add
addr16
pop
xor
jns
clc
and
xor
sbbl
lahf
pop
lods
and
mov
cmp
push
sahf
hlt
imul
aam
dec
add
pushf
jg
add
sbb
adc
stos
cmp
cmp
fsubr
and
and
inc
sub
cli
mov
or
or
adc
sar
jne
inc
loopne
test
push
mov
xor
iret
jmp
jp
mov
icebp
rcll
jp
inc
jecxz
daa
cmp
movsl
cmpsb
add
add
repnz
xor
lods
lea
add
mov
add
mov
outsl
stos
adc
mov
shrl
push
lods
sarl
add
fimuls
sbb
jbe
rorb
xlat
loop
xchg
test
mov
jbe
push
bndstx
pop
lret
fbld
xlat
clc
mov
fwait
pop
fsts
or
xchg
mov
repz
cmc
jns
ds
push
mov
cmp
jo
outsl
dec
outsl
mov
ss
cmp
sub
lock
or
adc
cmpsl
and
adc
mov
or
insl
cmp
outsb
out
mov
roll
scas
test
fistpll
adc
nop
inc
stc
sbb
xchg
inc
mov
lret
cmp
insl
add
cmp
cmp
mov
pop
repz
mov
xchg
les
inc
inc
add
pop
dec
test
int
mov
out
aad
jno
fistl
add
add
shll
jmp
mov
pop
rcl
popl
int3
fidivs
xor
lahf
pop
xchg
out
mov
imul
add
jbe
pop
push
xchg
push
add
jg
gs
adc
repz
jo
in
xor
inc
mov
dec
jnp
mov
je
les
sbb
sbb
add
pop
pushf
movsl
jnp
xchg
mov
subl
dec
dec
std
fs
jmp
ficompl
jge
mov
lea
aad
xchg
sub
out
call
jecxz
push
xor
hlt
je
hlt
sub
inc
ret
and
popa
bound
and
or
int3
lcall
adc
cld
mov
or
adc
mov
cmc
aam
sahf
fwait
xor
insl
dec
jbe
orb
jl
shll
sbb
fildl
or
repz
mov
xchg
xor
mov
mov
sbb
push
sub
sub
sahf
ja
outsb
sbb
mov
loope,pn
stc
ja
cmp
insl
dec
and
xor
fdivrl
xchg
push
roll
push
in
js
mov
js
mov
dec
cs
dec
hlt
fisubrs
dec
outsb
divb
jne
mov
sbbl
adc
enter
mov
sub
push
push
adc
sarl
sub
inc
inc
jae
out
cmc
gs
xor
jne
cmp
mov
mulb
fsubl
hlt
adc
xchg
and
lahf
mov
or
sbb
mov
push
dec
and
test
or
cmc
jmp
mov
int3
es
scas
lods
lret
mov
js
mov
mov
inc
outsl
sbb
loopne
cmpb
rorl
xchg
and
mov
imul
or
xchg
iret
movsb
pop
nop
push
inc
inc
lods
adc
push
cltd
push
xor
adc
jae
pop
aam
out
lcall
xchg
fwait
lret
call
lret
sub
leave
mov
lea
dec
mov
push
stos
std
cmp
cli
inc
push
dec
cmpsl
adc
cld
inc
lcall
mov
in
push
xchg
push
into
push
cmp
gs
mov
loop
xor
jecxz
jmp
sbb
popa
adc
cs
loope
mov
ja
lret
clc
inc
pop
cmp
cltd
jb
int3
mov
or
cmpsb
pop
or
jbe
cwtl
mov
jmp
outsb
popa
test
sti
xlat
stc
dec
sub
daa
jle
pop
add
lahf
mov
shld
adc
push
mov
and
fidivrs
adc
daa
pop
xor
movsl
aaa
mov
xchg
shlb
jecxz
jge
sub
lea
sub
in
jp
lahf
mov
outsl
enter
lea
adc
out
sbb
push
mov
mov
and
shl
test
mov
sub
pop
xchg
outsl
pop
adcl
jne
mov
pusha
xor
shlb
xchg
or
outsl
js
fdivs
iret
sbb
lds
cld
dec
sub
add
leave
push
inc
mov
cmp
popf
jecxz
lock
push
add
mov
xchg
dec
xlat
jg
xchg
sti
test
adc
jns
test
pop
rolb
ret
inc
sarl
push
sbb
xchg
cmp
popf
popw
inc
mov
fdiv
sbb
mov
jae
or
test
adc
adc
inc
jp
and
sub
xchg
jge
loop
imul
je
mov
xchg
inc
inc
ja
hlt
jb
push
push
pop
xor
dec
lds
iret
sahf
imul
jle
mov
mov
aas
test
bound
push
add
scas
testl
aaa
lock
mov
shll
mov
pop
stos
in
inc
testl
jo
hlt
cmp
or
mov
xchg
mov
int
or
adcb
lahf
aad
pusha
add
xchg
cmp
sub
inc
push
push
lcall
pushf
bound
push
and
bound
ja
addr16
daa
jle
ds
daa
xchg
popl
out
stc
mov
ss
sbb
jno
and
add
cs
movsb
pop
out
dec
movsb
and
outsl
scas
test
insl
insb
xchg
cli
lea
push
movsl
mov
mov
aas
aam
ficoml
arpl
sti
sub
cmpsl
cli
sbb
jmp
flds
xlat
adcl
cwtl
jmp
movsb
into
and
push
je
ljmp
fidivs
into
test
adc
jo
add
jo
insb
or
test
enter
or
or
hlt
jmp
enter
mov
sub
cltd
mov
rcrb
cmpsl
les
cmp
push
in
xchg
jns
pushf
sbbl
call
scas
xorl
adc
ss
stos
fstl
enter
mov
icebp
xor
cmp
adc
pop
push
enter
xchg
dec
shll
sub
sbb
adc
jb
test
add
mov
mov
xchg
xor
cmp
ss
in
cs
jl
popa
jns
arpl
rcr
push
loopne
sbb
mov
enter
cmp
push
fists
jecxz
mov
data16
xchg
push
lock
stos
inc
das
sub
jne
mov
pop
fsts
fldenv
aad
pop
mov
ret
sub
cmp
jg
aad
adc
jle
movsb
dec
inc
xchg
push
repz
pop
inc
push
adc
enter
cmp
or
add
fnstsw
or
sub
jge
inc
adc
jno
shlb
push
pop
out
cmp
lea
xchg
dec
popa
test
jmp
sub
leave
call
ret
addb
movsl
xlat
aad
xchg
cli
xor
inc
and
ret
pop
sbb
inc
lcall
popa
jb
test
cmp
pop
dec
pop
sbb
dec
icebp
aas
push
flds
mov
jle
out
jle
in
dec
pushf
adc
sti
or
mov
pop
dec
sub
add
sbb
ljmp
and
jae
es
sarb
adc
aas
lods
pop
push
bnd
push
stc
in
and
stos
das
imul
jmp
sbb
fwait
push
jnp
pop
into
ja
mov
out
push
pusha
into
lds
mov
cmp
or
mov
iret
mov
push
mov
stc
movsb
add
mov
or
test
cmp
jmp
pop
push
cmp
loop
and
push
hlt
pop
test
pop
pop
test
xchg
xor
rclb
pushf
icebp
adc
and
mov
les
loope
xor
roll
xor
xchg
xchg
cmp
sti
push
pop
xor
and
xchg
or
push
add
mov
out
clc
ret
cmp
imul
sti
push
push
mov
stos
cmovle
pop
stc
add
mov
lcall
lret
mov
mov
fs
cmpsl
les
aaa
fcoml
add
fdivrl
jns
ret
mov
stc
mov
xor
scas
sub
cs
mov
outsb
fisubs
mov
push
rol
xorb
into
sub
push
mov
loopne
pushf
imul
nop
lahf
add
jle
pop
jae
push
test
jns
fsubrl
out
dec
cmp
mov
adc
in
pushf
adc
mov
cli
int
or
xor
and
fstpl
mov
xor
cmpsb
xchg
lret
jecxz
ss
mov
mov
or
das
testb
movsb
mov
adc
mov
xchg
sbb
aaa
sub
jns
mov
sbb
push
inc
xor
lock
out
js
mov
imul
and
xchg
jge
popa
jmp
sbb
lcall
scas
push
jmp
shrb
imul
nop
test
roll
test
test
insl
sbb
jo
cltd
sahf
dec
sarl
push
das
push
jbe
dec
xchg
imul
das
inc
push
jg
je
xchg
fstps
xchg
icebp
jg
hlt
call
xchg
imul
stos
stos
jo
push
int3
sbbb
and
xchg
icebp
jns
add
out
xor
icebp
out
movsl
not
push
push
outsb
push
clc
scas
and
imul
cmp
nop
and
push
sbb
in
lcall
xor
leave
jae
aad
mov
cltd
add
xor
xor
repnz
bound
inc
sub
push
and
add
stos
leave
push
fistpl
iret
popa
repnz
adc
js
mov
mov
setno
adc
xchg
mov
lcall
out
mov
std
cwtl
jecxz
out
sbb
iret
dec
out
push
mov
jle
jnp
cmp
mov
add
clc
mov
push
test
mov
ret
or
shrb
dec
inc
xor
inc
jnp
push
in
xor
xor
call
adc
add
idivb
pop
cwtl
jecxz
lret
mov
movsb
and
movl
sbb
jmp
aam
xchg
cmp
loop
cmp
popa
out
call
add
mov
aaa
jmp
mov
outsb
xchg
dec
adc
lret
in
inc
jbe
adc
or
call
repnz
mov
xchg
cwtl
leave
or
jo
sub
in
ficoml
mov
adc
faddp
sti
fbstp
inc
and
popf
mov
insl
out
mov
pslld
aad
out
in
mov
inc
xchg
scas
outsl
into
aad
leave
cmp
push
or
push
out
hlt
aam
push
and
mov
and
mov
push
jo
cmp
push
xchg
xor
sub
lock
ljmp
jge
xchg
or
pop
fsts
fsts
add
xchg
int3
adc
xchg
mov
lods
jg
or
int3
cmp
int3
xor
add
mov
sarb
cli
ss
add
pusha
mov
or
inc
aas
mov
xchg
jo
cld
xchg
push
pop
pop
inc
inc
fdiv
out
es
fadd
out
add
in
sbb
clc
pusha
fldl
xchg
clc
mov
in
adc
call
jo
and
add
test
mov
into
sub
jnp
lock
cmpsb
mov
subl
mov
jne
xorl
fbld
fsubs
inc
fchs
pop
push
sbb
cmp
sub
outsb
mov
stos
movb
inc
jmp
xor
hlt
test
imul
xchg
lahf
lret
push
loope
orl
push
cs
or
mov
aam
jmp
pop
repz
pusha
mov
imulb
aaa
pop
mov
lock
mov
mov
out
dec
mov
pop
jns
cmp
adc
or
mov
or
lret
cwtl
cmpsb
push
add
pop
mov
cmpsl
adcb
adc
mov
push
mov
ficoms
adc
mov
pusha
mov
xchg
pop
je
sub
jbe
xchg
sub
js
push
inc
jno
pop
adc
lods
shlb
popa
in
pop
mov
outsl
icebp
inc
insl
arpl
jnp
dec
roll
sbb
out
push
xchg
fcomp
es
test
or
jae
popf
aas
popa
in
lock
cmpsl
ja
rorl
jbe
pop
adc
push
add
jl
mov
jg
rcrb
sub
addr16
imul
fwait
cmpsl
pop
push
pop
pop
sub
push
mov
jnp
lods
add
pop
mov
push
xchg
inc
es
pop
outsl
xor
adc
xchg
scas
dec
cmp
movl
arpl
out
cltd
mul
sub
les
lods
fs
jne,pn
push
lods
testb
pop
mov
jbe
mov
mov
sti
nop
xchg
int
loopne
sahf
cmp
fstpt
out
pop
fstl
dec
xchg
pop
mov
dec
pop
decb
addr16
pop
repnz
mov
fwait
das
push
inc
xor
movsl
popa
push
gs
mov
cmp
sbb
cmpsb
sbb
popa
mov
lea
roll
dec
sub
inc
fistpl
repz
repz
and
push
push
test
lock
and
shll
outsl
pop
rorl
mov
sti
rcr
inc
inc
sub
cltd
push
ljmp
cwtl
icebp
mov
pop
lret
in
shll
test
scas
jmp
dec
je
sbb
dec
pop
jae
pusha
jbe
js
gs
jl
into
adc
int
test
cld
push
data16
adc
adc
lods
jbe
dec
and
adc
mov
add
imulb
pop
movsb
pop
outsl
fmull
stc
addr16
add
stc
xchg
test
dec
mov
out
add
fiaddl
ljmp
imul
aad
or
dec
punpcklwd
adc
pop
dec
or
push
jbe
dec
lds
sub
mov
dec
cld
fldenv
scas
dec
pop
std
loope
jae
sar
push
push
jae
jno
rcll
mov
cmp
lods
cmp
pop
mov
push
cltd
ljmp
or
mov
mov
test
and
fnstsw
fs
mov
adc
inc
loope
ss
sub
pop
dec
arpl
pop
int3
inc
pop
mov
js
jno
hlt
add
push
aaa
int
xchg
and
cmp
push
jle
pop
cmp
adcl
out
add
inc
cmp
inc
push
lret
sbb
xchg
iret
out
push
dec
stos
test
fwait
out
lcall
mov
inc
mov
cmp
bound
or
mov
inc
test
int3
aas
inc
shl
enter
mov
mov
shll
scas
imul
mov
jmp
pushf
mov
inc
hlt
xchg
mov
in
jo
lods
out
cmp
sbb
jns,pn
mov
adc
and
add
adc
push
sub
xor
jns
insl
cmp
mov
fs
rep
mov
jae
sbb
jecxz
or
sub
adc
sbb
mov
pop
cmp
jg
lret
hlt
pop
and
daa
pop
test
vmovntps
popa
pusha
out
pop
xchg
jecxz
sarl
sbb
leave
icebp
or
dec
cmp
fdivrs
mov
or
mov
out
push
and
xor
or
ret
xor
rolb
xchg
inc
pop
leave
shlw
pop
jns
movsl
stos
fmull
leave
loopne
mov
mov
inc
cmpsl
jae
inc
std
and
xorb
fnstcw
ds
out
fldl
stos
mov
out
hlt
subb
mov
into
xchg
jbe
push
xchg
xor
inc
lds
add
or
lods
aas
xchg
shl
pop
cwtl
jmp
jbe
mov
movsb
push
push
cltd
inc
mov
nop
pop
add
lods
shl
stos
pop
cmpsb
outsb
jp
clc
mov
sbb
std
lock
mov
daa
sarl
jmp
cmpsl
cmp
sti
movsb
enter
adc
fsub
pop
pop
xchg
and
sbb
push
ljmp
jo
lahf
bound
mov
aaa
push
hlt
mov
fiaddl
sahf
repz
loop
test
imul
bnd
enter
jl
sbb
int
int
jae
scas
cwtl
xchg
lahf
pop
out
imul
test
insl
inc
jl
aad
fcmovu
jae
insb
mov
mov
xchg
in
jbe
mov
jl
subl
jl
int3
pusha
add
mov
mov
out
add
scas
in
jnp
cmp
fsubrs
add
sub
pop
sbb
movsb
add
mov
xor
push
bnd
or
imul
leave
pop
imul
add
filds
lea
in
mov
gs
mov
lfs
sbb
iret
jno
nop
sub
in
in
pusha
sbbl
aad
push
test
pop
cmp
lret
xlat
imul
sbb
mov
fstp
adc
mov
sbb
imul
loope
mov
loopne
xor
popf
icebp
fistpll
inc
nop
loope
jp
sbb
xor
fldenv
shlb
adc
dec
xchg
and
xchg
call
movntps
aad
lretw
pushf
in
and
lods
shl
test
xor
mov
jns
hlt
add
cwtl
stc
dec
mov
pop
shr
xchg
xorl
mov
pop
mov
xor
test
pop
and
pop
and
movsb
bound
mov
mov
repnz
popa
jge
add
stos
int3
add
xchg
fs
adc
cltd
dec
sub
bound
stos
and
xchg
fisubl
cmp
lods
loope
into
fwait
mov
in
test
mov
int
das
fwait
xchg
dec
out
jge
dec
jl
enter
rcrb
test
in
xchg
loope
mov
add
inc
les
stos
xchg
xor
stos
mov
jmp
push
pop
dec
jae
fdivs
je
dec
or
fnstcw
inc
pop
cli
and
bound
mov
pop
cmp
inc
cmpsl
mov
arpl
xor
mov
cltd
dec
shl
lds
call
imul
and
add
imul
in
pop
aas
lock
std
xchg
xor
sahf
push
cmp
aas
adc
jne
mov
bound
sahf
dec
cmc
cmp
lcall
loopne
dec
xchg
in
fists
jo
cmp
and
xlat
pop
lret
dec
and
int
lea
xor
sbb
pushf
cld
int3
ret
ret
cmc
push
xchg
cmp
mov
stos
push
inc
inc
push
dec
xchg
insb
iret
sbb
out
test
sarb
push
xchg
mov
das
lcall
jecxz
sahf
das
xchg
pop
mov
sbb
xor
cmpsb
stc
andb
sbb
rcrb
cwtl
sti
add
jmp
roll
imul
int3
mov
xor
mov
inc
or
pop
in
jmp
das
mov
jmp
push
jmp
cmp
push
add
inc
fldcw
ds
insl
dec
mov
fisubrl
ljmp
mov
mov
sbb
mov
cmp
pop
in
mov
ja
cmp
xchg
lea
mov
sahf
add
int
insb
mov
or
jbe
push
dec
cmp
stos
mov
popa
or
push
daa
iret
das
icebp
movsl
out
outsl
rcrl
dec
test
sbb
xor
loope
loop
rolb
cmp
pop
scas
enter
pop
mov
mov
pop
push
add
jo
mov
xchg
sarl
js
std
imul
icebp
inc
mov
sbbl
ss
jne
jne
ljmp
xchg
sub
bound
daa
jb
xor
rol
hlt
cmp
fimull
add
cmpsb
gs
aaa
add
lret
stos
pop
adc
in
adc
dec
xchg
jo
mov
pop
sub
dec
or
mov
repnz
xchg
imul
dec
mov
shrl
repnz
out
imul
dec
loop
ss
cmp
and
test
pop
sub
mov
mov
or
stc
int
push
stos
loope
push
lret
cmp
nop
mov
add
inc
hlt
mov
jmp
call
ret
cmpsb
mov
lds
inc
mov
sarb
dec
jge
int3
add
adc
sub
outsb
addr16
and
sub
add
sub
push
test
sti
mov
roll
int3
scas
or
es
push
loope
sub
mov
mov
decb
adc
cmp
stc
out
popf
add
pop
sub
ja
sub
pop
push
push
xor
mov
out
dec
pushf
cmp
mov
in
adc
aam
fildll
and
xor
les
popf
out
daa
sti
div
sbb
or
jl
insl
adc
hlt
or
dec
push
icebp
call
int3
jmp
stc
jg
push
int
loope
loope
sarb
add
push
call
mov
fidivrs
outsl
bndldx
push
mov
bound
sub
and
mov
push
fs
aam
dec
push
mov
adc
orb
dec
jl
arpl
cmpsb
push
scas
pop
push
mov
in
in
mov
inc
jecxz
call
xchg
and
loope
mov
dec
mov
pop
loope
ret
stc
push
jge
cmp
mov
fucomip
cmp
pop
lahf
cmpsl
je
inc
cmpsb
mov
xchg
and
pop
js
xchg
inc
mov
cmpsb
sti
lcall
mov
jo
push
dec
add
mov
xchg
jns
and
and
sbb
xchg
jge
lea
stos
pop
sbbl
cmpsb
adc
jns
das
ljmp
cmpsb
push
dec
mov
pop
xor
sub
or
hlt
fwait
jl
mov
mov
sarl
sbb
fcomps
xor
hlt
in
hlt
cmp
pop
push
inc
je
psubusb
rcrb
lods
ljmp
je
pop
pop
sbb
loopne
out
mov
cmp
dec
arpl
mov
dec
je
aad
pop
leave
aad
and
stc
jl
cs
adc
shrb
fstpl
cmpsb
sbb
pop
hlt
push
mov
mov
push
sti
inc
movq
xor
and
xlat
sub
jne
repnz
dec
sbbl
jns
std
ret
sub
xchg
lret
cmp
test
addr16
and
add
in
and
arpl
loope
mov
jecxz
jmp
xchg
imul
adc
push
subb
stc
cld
inc
jne
test
shlb
or
xor
cmp
mov
imulb
jns
cmp
ret
adc
mov
movb
mov
int3
lahf
adc
or
fldt
xchg
test
pop
push
xor
pop
mov
cli
sbb
rol
das
in
lea
test
adc
push
xor
shll
loopne
out
iret
fcoms
push
mov
cld
stos
pusha
mov
lods
jne
xchg
call
pusha
iret
jbe
xchg
data16
pop
rcrb
lahf
sbb
std
xor
push
push
test
in
jne
dec
xchg
jo
bnd
mov
jmp
dec
pop
jae
stc
popf
fcoml
mov
mov
jmp
loope
push
push
mov
shrb
sub
xlat
sahf
inc
push
scas
pop
push
mov
xchg
sub
mov
cmp
xor
jne
mov
idivl
pop
xor
scas
daa
sahf
punpckhdq
test
ds
in
pop
stos
mov
sbbb
and
cwtl
ljmp
lds
stos
mov
or
mov
inc
mov
and
adc
push
and
xchg
lahf
cmc
jbe
dec
mov
das
lea
mov
in
sbb
adc
jmp
jl
xchg
push
xchg
cmp
leave
and
xchg
push
data16
shl
ss
insb
and
mov
and
and
or
push
add
repz
sbb
mov
frstor
or
js
cmpsb
mov
in
lret
enter
mov
pop
mov
sahf
push
icebp
xchg
out
lock
lcall
xor
rep
inc
jle
das
icebp
shlb
add
inc
insb
push
orl
mov
movlps
or
xchg
mov
test
pop
push
daa
sub
xchg
xchg
cmpsl
lods
mov
pop
fsubl
das
push
push
inc
and
incl
nop
out
ljmp
and
sbb
pop
jl
push
mov
pop
in
int
sub
add
jecxz
push
jns
mov
adc
fwait
cmp
leave
sub
es
lahf
sub
jo
hlt
mov
sbb
pop
inc
adc
dec
cmp
stos
stos
jecxz
xchg
scas
add
movl
cltd
je
cld
mov
pushl
int
xor
pop
mov
sbb
mov
loope
and
bound
mov
rcr
shlb
cmp
call
xlat
rcrb
xchg
jno
aam
jno
or
mov
popa
adc
scas
inc
faddp
sbb
xlat
xor
test
movsl
push
and
rcr
mov
jle
test
pop
je
fimull
sahf
mov
int
inc
mov
pop
daa
cmp
lods
xchg
push
sbb
fwait
xlat
xor
sti
cltd
sahf
mov
adc
les
daa
or
aad
add
in
and
les
cld
arpl
push
repz
out
rcr
dec
fcoms
sbb
loop
mov
mov
imul
rorb
push
mov
cmpl
and
add
pop
pop
dec
jbe
mov
cltd
xchg
lcall
and
mov
cmc
cmp
cmpsb
mov
subb
jge
scas
scas
lods
add
xchg
dec
ds
popf
stc
out
cmc
inc
xor
add
dec
xor
cmp
dec
xlat
dec
mov
inc
add
cs
pop
mov
lock
cmpl
cli
into
xchg
into
sub
xlat
or
shr
pop
mov
add
cli
jmp
jmp
aad
sbb
pop
pushf
xor
cmpsl
repz
pop
test
inc
inc
dec
adc
sti
fadd
pop
and
mov
mov
cmp
cmp
stc
fisttps
stc
add
pop
cwtl
mov
xchg
into
repz
mov
fwait
or
or
pop
es
mov
fldcw
bound
mov
pushf
loop
fildl
push
cli
xchg
dec
mov
pop
out
cmpsb
adc
lahf
addr16
jo
pop
sbb
pusha
icebp
bound
ret
pop
mov
pop
xor
imul
aad
loope
sub
call
scas
cmp
push
test
xor
in
add
pushf
aam
mov
xchg
ficomps
pusha
push
loop
cli
dec
and
mov
imul
aad
xchg
xor
test
sbb
or
ljmp
test
adc
adc
or
sbb
pop
ds
mov
cmp
jmp
test
mov
pop
or
and
sarl
ljmp
push
mov
mov
dec
and
jo
data16
cmp
jmp
cmp
js
pop
movsb
lcall
hlt
or
xchg
hlt
mov
fidivs
mov
rorb
jmp
mov
shlb
fs
jno
xchg
nop
adc
push
mov
outsl
std
push
mov
pop
push
pop
in
filds
push
inc
loop
add
sub
inc
sti
mov
in
jmp
fsubl
enter
mov
jecxz
nop
movhps
inc
and
outsb
xchg
lea
mov
lods
or
ffreep
popa
aam
dec
jmp
cmp
fsubrs
sbb
out
mov
sbbb
lcall
or
dec
mov
test
or
sbb
sti
and
inc
jns
sub
std
in
mov
sub
jae
movl
sub
inc
lcall
stos
mov
mov
jl
sub
and
pop
jbe
xchg
mov
dec
jnp
and
enter
repz
cli
xor
sbb
divl
lcall
adc
pop
pop
loop
cld
mov
push
das
lcall
adc
push
scas
dec
inc
and
or
subb
jg
faddl
or
js
hlt
je
xor
cmpsl
inc
lcall
sbb
jbe
fcmovnu
repz
outsl
repnz
sub
mov
cmpsb
cwtl
cwtl
filds
rorl
jb
jns
ret
xor
pop
mov
int
jbe
add
jno
and
jge
cld
cltd
sarb
or
jns
mov
popa
inc
push
addr16
loop
outsl
dec
inc
xlat
mov
inc
dec
push
sbb
adc
or
shll
and
lret
test
xor
test
cmpsl
or
jge
cld
cmp
xlat
mov
jg
addl
mov
mov
ja
push
mov
jno
sti
in
shl
jbe
adc
xchg
xlat
bound
xchg
inc
les
mov
jne
aad
cmpsl
test
sub
push
inc
sub
cmp
add
inc
and
es
mov
aas
push
jge
es
adc
or
mov
and
stc
and
mov
lods
mov
mov
pop
sub
mov
scas
ror
jecxz
jecxz
out
mov
shlb
xor
mov
or
or
ficompl
test
push
in
inc
add
call
dec
sbb
push
arpl
jl
les
idivl
push
add
loop
testl
jg
mov
pop
xchg
push
cwtl
cmpsl
xchg
cld
loopne
mov
aad
cmp
xchg
loop
xchg
and
fsubl
popf
mov
mov
pop
lock
fs
cmp
shl
push
lcall
jb
les
push
scas
jge
and
loop
std
cmp
shlb
mov
rcrb
movsb
sub
jae
add
push
mov
shrb
insb
jle
mov
jno
pop
imul
jns
and
mov
inc
jle
pusha
scas
mov
pop
and
iret
ds
imul
xor
and
and
add
insl
fstp
stc
inc
or
cmp
sub
or
cmpsb
adc
fcos
dec
sub
push
sub
inc
jmp
jl
jle
push
rolw
lcall
adc
xchg
fwait
xor
pop
cmp
js
adc
imul
popa
repnz
cli
insl
testb
pop
xchg
sbb
loopne
jg
inc
imul
fsts
clc
xor
jge
xchg
dec
mov
mov
mov
out
xchg
aad
adc
pop
movsl
aad
jecxz
aaa
movsl
pop
jge
sub
inc
and
push
into
repnz
nop
sub
or
icebp
pop
arpl
sbb
jae
notl
insb
pop
sbb
in
push
pop
std
fucomi
rcl
pusha
pop
popf
ss
mov
aaa
push
jge
pop
rcr
fsts
xor
jecxz
mov
mov
fnstenv
into
mov
mov
fwait
pop
aaa
cltd
xor
or
insl
adc
pushf
lods
pop
cmp
popf
nop
out
pushf
hlt
mulb
outsl
nop
or
pop
lods
enter
xor
xor
mov
push
nop
repnz
sub
mov
cmp
adc
adcb
add
cmp
cmp
push
push
jge
pop
lahf
into
lds
cwtl
inc
fmul
sahf
scas
and
or
inc
pminsw
lds
mov
inc
int3
jae
lea
test
std
xor
adc
and
jmp
daa
xor
cmp
out
xor
inc
xchg
add
push
mov
add
lock
das
popa
cld
mov
mov
push
jle
jb,pn
ret
adc
sbb
xlat
sbb
pop
popa
push
mov
lahf
lds
xchg
jle
adc
sub
pop
lahf
cmp
pop
outsb
inc
mov
ret
cmp
add
jne
pop
xchg
test
or
clc
insl
aaa
scas
out
jge
push
loopne
sub
insb
out
dec
mov
scas
hlt
mov
jp
mov
mov
mov
cld
sbb
lea
xchg
fstpl
cwtl
testb
lahf
test
mov
mov
add
sbb
fwait
mov
adc
nop
cmp
inc
adc
adc
pop
jbe
fldl
jmp
jae
jl
xor
pop
bound
pop
outsl
test
das
sar
sub
xor
insl
pop
pushf
sarb
or
jmp
inc
sub
mov
push
add
and
sbb
cmp
call
call
orl
xor
cmp
jmp
cmp
outsl
ret
or
jg
std
addr16
push
push
into
mov
adc
pushf
fisttpl
scas
sarl
add
sti
mov
mov
sbb
cmpsb
in
arpl
adcl
je
jmp
incl
lahf
xor
inc
pusha
inc
flds
rcll
nop
in
inc
push
cmpsb
test
nop
sub
or
pusha
addr16
popf
fs
fwait
xor
inc
jl
xlat
fcmovu
jmp
xor
xchg
rolb
push
fmull
mov
data16
or
lds
and
mov
cmpsl
cltd
rcrl
mov
mov
dec
mov
in
push
icebp
orl
das
int
mov
mov
jno
in
push
outsb
cwtl
stos
sahf
inc
fcomi
mov
out
mov
scas
cld
stos
adc
jae
adc
cltd
mov
cmp
xor
pop
sbb
leave
add
add
add
arpl
push
int
dec
je
rcrb
jae
mov
cltd
sbb
rcll
test
push
lcall
pop
in
stc
or
push
lret
jg
jl
mov
lock
jb
mov
lret
stc
xor
or
imul
mov
lcall
mov
shrl
push
push
xchg
js
fadds
sbb
xlat
xor
cli
sahf
int3
lcall
xor
dec
jecxz
popa
mov
jae
popa
nop
adc
cli
fnsave
andb
flds
and
push
inc
fucomi
sbb
and
adc
fs
iret
xchg
xorb
in
mov
sbb
lcall
add
push
shl
and
js
into
dec
push
stc
bound
cmpsl
or
mov
repnz
jecxz
out
das
mov
scas
sub
push
mov
cmp
mov
sub
inc
rcrb
gs
xlat
and
adc
and
cmc
cmc
mov
mov
sar
sbb
into
cmp
add
lret
enter
inc
xor
lret
jno
test
fisttps
sbb
or
es
push
pop
inc
xor
sbb
cmp
rcll
daa
pop
mov
push
rep
dec
dec
jne
xor
push
xor
scas
hlt
inc
adc
pop
mov
pop
inc
ret
aam
hlt
iret
je
pop
adc
movl
cmp
mov
pop
jne
ja,pt
sbb
xor
fsubl
and
inc
data16
xchg
or
or
and
out
xchg
loope
fidivl
iret
repz
sub
pop
cwtl
int3
push
add
sbb
push
in
movl
lods
lods
jne
sub
dec
in
lods
jecxz
addb
cli
jnp
out
jns
ror
nop
push
cli
cli
hlt
xlat
mov
mov
popa
cmpsb
sbb
xchg
fstpl
xchg
ljmp
cmpsl
inc
adc
or
and
cmp
mov
leave
addr16
mov
out
lods
sbb
mov
lock
imul
out
das
in
push
push
test
inc
jno
push
arpl
lock
out
imul
imul
scas
adc
xor
fs
insl
lods
fbld
cs
cmc
adc
dec
and
inc
mov
mov
ds
hlt
mov
das
aad
arpl
push
inc
in
stos
jbe
mov
fildll
or
stos
and
pop
adc
mov
or
jecxz
ficoml
enter
push
push
lret
jo
inc
fstpl
ljmp
sbb
pop
sbbb
pop
and
mov
pop
test
mov
adc
inc
mov
ret
mov
adc
out
jno
add
adc
loopne
sbb
call
mov
cs
mov
in
imul
pusha
xor
fmull
in
out
addl
mov
stos
or
or
mov
mov
dec
mov
adc
sbb
sbb
sahf
jecxz
out
sub
cs
arpl
xchg
pop
ja
enter
mov
fnsave
gs
mov
int3
push
mov
add
ret
xlat
fidivl
imul
orb
call
data16
or
scas
fidivs
mov
jne
add
xor
inc
push
mov
push
push
loope
cmp
aad
push
movsl
xor
push
dec
and
dec
clc
sbb
cs
movsl
push
sarb
mov
cmc
sub
cld
aas
test
sbb
jl
adc
xchg
fstps
sbb
rol
push
jg
daa
push
or
pop
mov
and
gs
lds
js
pop
jno
pop
sub
and
push
pop
and
jge
cld
push
repz
xchg
pop
push
sahf
add
pop
adc
or
push
lret
adc
clc
xor
loopne
jl
arpl
loop
mov
out
cmp
lods
mov
inc
or
pop
pop
xchg
mov
add
test
dec
jns
jae
clc
pop
push
fistps
xchg
and
ffreep
mov
pop
sbb
xchg
or
lds
jecxz
es
cmp
mov
lock
ds
std
adc
jp
push
in
jmp
sbb
pop
pand
in
push
test
and
dec
pop
fs
test
xchg
dec
jnp
das
push
sarl
int3
add
inc
cmp
jle
cltd
xlat
les
mov
insl
adc
xchg
inc
push
jecxz
popf
fwait
iret
push
pop
js
popa
ds
cmp
dec
ret
add
mov
xchg
mov
mov
and
insb
movsb
fcomps
lahf
dec
cli
fstl
add
push
jns
ljmp
sbb
cmc
scas
scas
hlt
fistl
ds
hlt
dec
lahf
fldcw
push
mov
movsl
mov
faddl
fistl
push
test
adc
pop
xor
jbe
bound
jb
mov
ds
dec
push
ds
fsubs
imul
xlat
cltd
mov
xor
in
and
jb
fwait
mov
int3
inc
mov
orl
scas
push
faddl
xor
cmpsb
xchg
scas
sahf
arpl
sbb
sbb
or
pop
into
scas
pop
add
pop
test
mov
data16
stos
aam
sbb
mov
mov
test
mov
add
xor
xor
dec
aad
mov
stc
out
xor
lock
cmc
in
adc
sbb
in
jb
sarl
loopne
cmp
dec
sbb
jge
xchg
loop
and
pop
cltd
lret
pop
sub
mul
inc
mov
mull
rolb
ret
push
push
xchg
pop
je
cltd
lds
push
out
test
test
imul
addr16
arpl
or
and
dec
push
in
xchg
cwtl
shr
jp
stos
call
push
dec
imul
into
add
shrb
ja
inc
xchg
cmc
push
call
inc
mov
xor
imul
addr16
xlat
add
scas
xchg
enter
and
xchg
faddp
loope
int
sarb
pop
jp
int3
push
syscall
push
jmp
lret
inc
fs
mov
adc
xchg
lea
repnz
or
cmovno
sbb
mov
dec
jl
adc
fnstenv
sub
xchg
loop
lock
daa
cmc
xchg
inc
andl
dec
pop
cmc
jge
mov
fnstcw
xor
cmpb
add
xchg
jbe
bound
fcoms
aam
out
mov
enter
xchg
test
arpl
or
sbb
jne
jns
jb
sub
push
loop
data16
mov
stc
lea
xchg
add
les
movsl
jno
adc
xchg
sti
cmc
nop
pop
xchg
ds
xor
push
xchg
inc
fcmovu
rcrl
nop
pop
inc
push
sbbb
test
je
push
loop
sub
inc
sbbl
lods
cmpb
push
xor
das
inc
fadds
sub
push
movsl
mov
add
sbb
cmpsb
sbb
rorb
decl
adc
lea
lds
cmpsl
or
push
ret
push
mov
dec
xor
fwait
xchg
orb
test
inc
push
xchg
xchg
mov
in
sbb
inc
jge
int3
iret
out
mov
jns,pt
cld
int3
addr16
imulb
xchg
jae
push
pop
adc
lahf
push
jp
or
push
dec
sub
jle
loope
sahf
int
fadds
imul
enter
in
mov
clc
or
push
arpl
push
lret
cmp
and
out
push
ja
ljmp
jns
add
fisttps
loope
lret
std
dec
pop
test
or
jo
outsb
mov
nop
jns
push
testb
iret
in
jne
inc
and
dec
mov
inc
pop
cmp
sbb
in
stos
xchg
popa
jge
data16
mov
jg
jne
lods
imul
daa
dec
cwtl
mov
mov
fcompl
jne
push
lea
mov
in
clc
add
sbbb
in
adc
loopne
adc
jns
xlat
cmp
xlat
dec
ljmp
mov
sub
and
dec
cwtl
data16
and
sub
fcmovb
jns
xchg
adc
test
fstpl
mov
dec
and
daa
rorb
sbbl
adc
addl
pop
sub
sbb
sub
pop
and
and
negb
sub
xchg
cmc
pop
dec
xor
outsl
stos
mov
add
and
jge
repz
addr16
add
pusha
adc
jp
xor
insl
or
xchg
mov
add
in
aaa
bound
xor
cmp
lcall
in
sbb
std
and
std
stos
mov
shll
mov
lahf
push
lret
loope
or
mov
mov
fwait
cmp
popf
inc
paddsb
std
fs
xor
inc
imul
cmp
iret
jne
in
mov
sti
push
out
dec
je
xor
push
pop
mov
into
xor
dec
add
xor
test
aam
aas
adc
sub
rol
pop
sbb
or
cmp
daa
test
jecxz
and
inc
in
int3
jle
dec
and
movsb
shlb
cmc
sub
jbe
lods
gs
adc
cmpsl
clc
nopl
ljmp
ss
add
aad
xchg
and
orb
jnp
dec
push
pop
dec
into
push
icebp
repz
fldt
in
sbb
sbb
imulb
cmc
xchg
dec
xor
icebp
pop
xor
fld1
adc
or
test
and
icebp
cwtl
mov
lret
ljmp
fistps
jecxz
test
push
pushf
mov
mov
mov
inc
arpl
adc
push
mov
out
arpl
outsl
cmp
xchg
sub
lea
mov
sbb
xchg
stos
sbb
fwait
xor
enter
daa
xchg
pop
mov
imul
fisubl
in
cmpsl
mov
inc
sub
sbb
pop
ret
sub
mov
mov
push
ret
in
add
pushf
xchg
stos
jecxz
jns
push
jnp
sbbl
cld
and
cwtl
popf
xchg
xor
push
sahf
dec
jno
pop
arpl
mov
mov
out
add
outsb
adc
fnstcw
addl
push
sub
cmp
push
mov
mov
mov
cli
xchg
inc
into
jns
hlt
push
mov
test
mov
push
in
dec
mov
fdivrs
mov
sub
mov
mov
push
inc
and
stos
movsb
movsb
imul
movsb
fucomi
adc
lret
fistl
push
je
cmpsb
leave
jae
mov
loope
subb
jg
in
adc
mov
push
jbe
mov
add
pusha
add
test
push
scas
jbe
cmp
dec
fistpll
jecxz
mov
mov
rorl
sbbl
stos
ret
and
mov
xor
inc
loope
sahf
mov
ja
mov
push
cs
out
add
or
xchg
inc
pop
cmp
sub
dec
mov
sbb
pop
ffreep
adc
int
xor
push
lret
movsb
daa
mov
xor
cltd
push
or
loopne
repz
sub
dec
fcmovb
pop
dec
pop
sahf
cltd
or
mov
out
dec
xchg
add
and
pop
outsb
clc
jb
push
nop
clc
lods
sub
pop
pop
nop
lahf
mov
adc
in
jno
and
fwait
push
mov
test
cmc
std
jb
js
xor
mov
out
ds
and
iret
sbbl
push
inc
push
lods
or
std
cmpl
stos
push
lret
mov
add
jmp
shll
mov
leavew
movsb
movsb
je
sbb
sbb
add
jl
int3
aam
fstp
mov
xorl
sub
sub
repnz
push
call
jo
mov
pop
repnz
lods
mov
sbb
xchg
push
inc
push
rcrb
ds
std
jo
or
das
mov
shlb
sbb
sbb
je
xchg
mov
xchg
inc
sarb
popa
in
test
push
js
sub
adc
jne
mov
repnz
xor
cmp
and
push
stos
add
aam
jnp
inc
std
push
insb
dec
loop
fbstp
lret
cmp
fistl
xor
pusha
fildl
repz
xchg
mov
cltd
lods
adc
scas
arpl
xorl
push
lret
cmp
pop
sub
sbb
jnp
sub
jl
xchg
out
shl
bound
push
inc
sub
sub
mov
push
sub
pop
sub
cmpsb
test
pop
repnz
add
mov
jno
add
jl
push
jae
push
cmpsl
sahf
cwtl
movb
and
add
cli
mov
xor
push
fimuls
les
jns
cwtl
jb
push
mov
sub
test
sbbb
adc
lret
sub
pop
sarb
rorb
jo
push
sub
lea
jg
xchg
movsb
sbb
out
sbb
push
xchg
icebp
mov
and
fcomp
or
or
mov
sahf
adc
sub
out
mov
xchg
or
pop
mov
inc
inc
mov
lods
xor
inc
rorl
sub
ljmp
ds
dec
int
lret
loopne
xchg
cmpl
add
or
repnz
dec
cmpsl
loope
inc
mov
ljmp
mov
sub
or
test
mov
mov
lahf
into
lret
add
jnp
sbb
cmpb
dec
mov
mov
popf
fistpll
ds
xorb
xlat
inc
stc
out
sub
in
sub
data16
popf
mov
cltd
cmp
cld
inc
xchg
and
and
cmpsl
add
jmp
mov
mov
imul
maxps
dec
xor
jp
cmp
lds
adc
pop
mov
add
cmp
push
dec
call
cs
lea
or
fwait
leave
mov
xchg
push
mov
addl
sbb
cmc
jne
dec
jno
rol
add
pusha
call
andb
ss
sbb
cmp
lcall
pop
ret
xlat
mov
ja
inc
ds
jns
lods
clc
ds
or
jg
mov
push
vmread
jnp
pop
sub
lock
sbb
jle
and
jmp
shlb
fiaddl
out
dec
fistpll
mov
filds
mov
lds
add
inc
pop
sub
in
adc
insl
test
outsl
mov
mov
aas
outsl
shl
xchg
jp
adc
push
mov
pushf
jbe
adc
sbb
or
mov
test
sarl
xlat
mov
in
pop
imulb
mov
mov
push
cmp
inc
in
adc
pop
rclb
add
push
loope
cmp
jg
cmp
mov
lock
jnp
mov
xor
xchg
mov
and
insl
cltd
mov
outsb
scas
adc
ret
cmp
ljmp
orw
dec
bound
jl
inc
sbb
aad
inc
jae
int3
inc
sbbb
data16
js
insl
push
xor
scas
adc
dec
out
iret
mov
in
movsb
fcmovnu
es
out
ss
fnstcw
loope
mov
cmp
sub
add
mov
cld
jns
mov
popa
iret
xchg
clc
push
or
lcall
mov
adc
test
pop
pop
jbe
pop
jl
pmaxub
inc
dec
fsubl
jl
test
lods
andl
iret
push
add
shl
inc
cmovnp
jp
fmul
ja
leave
orl
mov
clc
sti
and
mov
ficomps
int3
pop
loopne
nop
mov
out
sbb
shll
push
fwait
pop
jl
loop
lcall
movsl
jp
mov
push
bound
and
cmpl
fdivr
mov
movsb
sub
push
test
in
pusha
dec
push
ja
xor
adc
imul
cmp
rcrl
mov
jle
mov
imul
mov
fbstp
out
clc
ljmp
in
xchg
mov
insl
ficoms
add
or
incl
pop
popa
outsb
and
and
arpl
xor
sarl
in
shll
fcmovbe
mov
sbb
testb
pop
cmp
lahf
repz
gs
or
pusha
inc
mov
stos
jp
inc
stos
xor
xchg
pop
add
adc
dec
inc
dec
sbb
int
hlt
test
movl
or
push
imul
or
popa
mov
clc
xchg
jno
lahf
in
cli
subl
push
pusha
mov
in
arpl
lret
js
mov
push
dec
test
pop
lret
cmp
sub
out
ljmp
and
test
out
cltd
or
fdivrs
mov
inc
lock
mov
fisubrs
xchg
xor
mov
cmpsl
lds
mov
adc
push
adc
jnp
cmp
sub
pop
stos
movsb
jl,pt
inc
orl
jmp
insl
inc
cltd
push
or
adc
sub
cmp
or
inc
mov
aas
and
xor
test
mov
pusha
daa
leave
mov
push
mov
inc
lods
stc
push
push
mov
or
jmp
inc
push
xchg
dec
lret
adc
insb
or
cmc
mov
jne
imull
jge,pt
cltd
in
pop
sahf
fstpt
into
push
adc
pushf
jl
mov
scas
out
sub
jecxz
call
xor
mov
fwait
and
adcl
repnz
lret
ret
je
out
js
xor
and
pop
inc
sarb
lret
data16
dec
and
stos
mov
gs
mov
outsl
mov
daa
pop
pop
dec
or
and
inc
outsl
aam
scas
pop
mov
dec
int3
shlb
add
and
add
fcmove
movsl
sbb
inc
rclb
and
ds
loopne
inc
mov
inc
andb
mov
mov
decl
out
fiaddl
cld
xor
cmpsl
imul
mov
cmp
ss
sub
and
sbb
xchg
mov
ficoms
push
inc
jo
insl
out
clc
fimuls
into
push
push
rclb
jae
mov
repz
cli
push
add
insb
push
or
ficompl
adc
pop
xchg
fisubrl
cmp
and
andl
icebp
cmpsb
cwtl
clc
nop
test
add
xchg
jno
xor
xorb
push
test
dec
movsb
push
shr
sbb
mov
bound
adcb
mov
xchg
iret
or
cmp
mov
jae
pushf
cli
xchg
pop
loope
scas
cli
mov
into
subb
std
dec
dec
pusha
jns,pt
cmp
mov
rcll
mov
stos
pop
jo
and
inc
call
mov
push
and
lret
sbb
leave
push
sbb
inc
push
insb
xchg
loop
mov
inc
sar
sti
dec
int3
xchg
mov
aas
xor
ljmp
popa
and
pop
push
ss
cmp
cmp
mov
xchg
mov
out
sbb
lods
mov
xchg
rorb
shrb
out
xchg
add
jno
outsb
add
mov
out
out
cmp
lret
xor
insl
lret
pop
aam
sbb
mov
jp
nop
adc
pop
rclb
enter
test
ja
cs
dec
or
sti
inc
stos
inc
xor
stos
fcmove
adc
jp
add
push
push
adc
or
xor
push
out
dec
jg
dec
int
push
push
sub
enter
imul
mov
jbe
adc
addr16
push
or
and
mov
jecxz,pt
out
out
aas
jno
inc
adc
arpl
push
arpl
outsb
mov
mov
inc
mov
cmp
in
push
jb
and
fnstcw
fidivl
sub
jg
add
lds
pop
and
dec
jo
add
out
sub
in
test
shrb
ss
imul
sbb
insb
push
xchg
pop
or
out
lcall
xor
sub
outsl
push
mov
pop
imul
loope
inc
rcr
mov
iret
loope
nop
cmp
insb
mov
into
mov
inc
lods
mov
sbb
inc
js
or
iret
push
inc
lahf
adc
fiaddl
nop
pushf
xchg
aas
aam
cmc
sbb
xor
loope
dec
or
dec
leave
stos
push
xor
das
jg
nop
xchg
imul
in
inc
push
xlat
xlat
jmp
lahf
push
jns
clc
mov
test
or
in
data16
les
xchg
push
scas
sbb
test
je
fistpl
test
and
ret
mov
rclb
adc
aas
adc
sub
or
bound
xchg
aad
rclb
push
pop
insb
lret
lea
divl
aaa
sub
in
pushl
mov
push
dec
push
sahf
mov
sarl
jb
mov
mov
jbe
mov
cs
sub
push
ss
adc
push
add
cmp
shrb
out
repz
pop
je
stos
and
das
sbb
dec
mov
pop
jb
gs
push
mov
fdivl
rclb
aas
in
js
pushf
call
xor
inc
scas
dec
repnz
sub
dec
jmp
jmp
scas
push
es
cld
es
mov
shll
jg
movl
mov
sub
sbb
cmpsb
jb
dec
dec
insb
repz
inc
add
aas
xchg
out
jns
jl
pop
lock
outsb
into
aaa
fldcw
push
das
mov
sub
pop
mov
aad
push
fsubr
mov
and
ret
lods
sbb
out
call
push
js
cmp
dec
inc
xchg
cmp
dec
jg
out
mov
call
or
scas
movsl
insb
out
or
test
add
sarl
js
ds
push
xchg
inc
cmp
adc
dec
lret
xorl
lcall
inc
jle
iret
daa
pop
sub
sub
and
cmpsl
sub
mov
into
loope
sbb
jmp
bound
fistps
leave
jnp
mov
sbb
fsubrs
out
sbb
mov
mov
add
dec
mov
addr16
push
xor
clc
mov
ljmp
ret
lds
xchg
or
insl
in
lods
and
in
or
mov
dec
iret
out
jo
jbe
dec
pop
jmp
mov
shlb
hlt
push
test
mov
adc
in
call
jge
mov
inc
xor
adc
sub
das
xchg
add
jle
negl
inc
mov
ljmp
adc
mov
xor
andb
sub
stc
push
mov
mov
sub
roll
mov
aam
nop
jno
push
test
inc
sub
mov
js
inc
lret
push
xchg
mov
clc
sbb
mov
pop
enter
out
mov
mov
cli
xor
xchg
out
push
cmpsb
dec
sub
clc
sub
dec
mov
sub
mov
out
ja
dec
test
pop
mov
pop
xchg
loop
adc
cmp
shr
adc
dec
mov
sbb
push
cs
xchg
lret
and
arpl
cmpsb
fnstsw
ljmp
lea
pusha
xlat
repnz
inc
lock
pop
imul
sbb
call
test
les
sub
adc
push
cmc
out
adc
sbb
lds
into
icebp
dec
test
lahf
lret
fwait
leave
mov
lock
add
push
jge
mov
dec
jp
add
outsb
push
mov
lret
inc
push
pop
scas
sbb
insb
cwtl
ss
xor
subl
mov
dec
movsb
loop
testb
xlat
loope
sbb
push
mov
push
adc
es
mov
mov
and
mov
ret
xchg
add
cld
je
or
pop
cmc
js
icebp
cmp
cld
or
push
adc
jnp
sub
pushf
mov
shlb
data16
dec
mov
into
xor
sbb
cmc
jmp
push
shll
dec
jge
dec
dec
imul
cmp
sub
leave
xchg
test
adc
mov
lcall
sub
mov
mov
ja
mov
sub
dec
fwait
cltd
fcomi
xor
rorl
outsb
xchg
or
and
ficomps
imul
scas
add
call
psllw
jne
data16
sbb
sbb
call
or
inc
rorl
rcl
xor
icebp
std
aaa
in
xchg
or
faddp
adc
ret
add
js
xor
leave
inc
or
pop
ja
adc
jge
push
push
ds
js
fs
add
repz
add
cwtl
hlt
cmp
push
lcall
mov
dec
dec
mov
dec
pop
nop
and
dec
xchg
mov
push
mov
cmc
mov
fs
lahf
lret
inc
in
cmp
repnz
xor
ret
int
int3
out
sbb
dec
jl
lcall
adc
push
scas
jg
push
cmp
cmp
mov
into
mov
push
push
ss
push
leave
dec
inc
cmp
xchg
ljmp
xor
xor
roll
dec
xorl
mov
test
cmp
lret
filds
push
ret
test
sbb
mov
mov
dec
and
add
outsl
int
or
push
cltd
and
shl
ss
jae
popf
or
addr16
dec
or
imul
pop
rcr
jmp
out
ds
inc
xor
clc
lock
jb
push
dec
fincstp
dec
stos
rcrl
daa
out
and
in
inc
mov
cmp
imul
xchg
jmp
insb
ljmp
dec
test
fimull
ret
xchg
cld
pop
je
in
js
mov
mov
lahf
jb
or
das
inc
lock
ljmp
mov
adc
mov
stc
mov
pop
inc
aaa
mov
cli
dec
test
ss
mov
call
pop
or
dec
das
je
inc
test
sbb
sarl
and
fbstp
iret
push
arpl
imul
lret
aas
out
test
sbbb
inc
cmp
cmp
popf
test
mov
mov
aaa
and
mov
cmp
aad
xchg
pushf
or
lea
mov
movsl
pop
out
rcll
push
mov
popf
mov
ss
xor
ds
add
test
xor
in
subb
inc
scas
add
sub
dec
xor
std
sbb
xor
cmp
inc
or
les
cmpsl
mov
jbe
mov
lahf
add
shrb
and
cmp
cvtpi2ps
lret
inc
fistps
aam
std
icebp
insb
inc
aam
cmp
sub
push
popf
lods
insb
sub
fsubs
in
mov
arpl
sub
and
pop
loope
jbe
loop
stos
icebp
aad
add
fs
pop
cld
imul
push
dec
inc
fincstp
into
push
out
in
pop
xor
ror
int
mov
lcall
or
and
fwait
out
das
in
in
lock
aas
pusha
mov
sub
int3
cmc
mov
mov
dec
xor
jmp
repnz
std
adc
shll
sub
jo
out
mov
dec
pop
push
sbb
enter
mov
push
andl
mov
stos
pop
jno
fs
cs
sub
sub
call
dec
repz
subb
xlat
shlb
aam
mov
xor
test
adc
inc
dec
sub
sbb
push
inc
sarl
push
shl
jne
test
aam
add
or
sub
addr16
gs
sub
loope
data16
mov
sub
cs
jmp
ja
push
add
cmp
aam
inc
push
xlat
pop
mov
mov
movsb
clc
sbb
sub
inc
xchg
or
sub
in
add
xchg
mov
and
cs
ret
or
mov
push
and
mov
enter
int3
jo
cmp
or
in
inc
enter
dec
push
and
mov
loopne
and
aam
push
cli
int
rolb
rolb
ja
stos
sar
sub
sti
add
inc
mov
mov
mov
fsubp
push
inc
aas
das
fxch
xchg
and
into
imul
gs
mov
sbb
inc
dec
lea
popf
and
out
xchg
mov
push
jle
ret
sbb
les
mov
and
inc
fidivrl
test
cmp
xor
jo
shl
inc
scas
mov
mov
inc
xor
jg
into
repnz
imul
push
pop
sub
jb
loop
and
push
divl
push
sub
outsb
add
cmpsl
cld
call
and
int
inc
mov
pop
out
adc
or
dec
mov
jnp
lds
ret
dec
sbb
pop
mov
xlat
mov
xchg
jns
push
pop
mov
pushf
clc
add
fisubrs
inc
xor
push
clc
lcall
insl
cltd
fimull
adc
push
ret
jno
aam
jns
outsb
fimuls
cmpsl
icebp
xchg
into
cmp
sbb
pop
jl
pushf
dec
pop
sub
aas
mov
push
pop
pop
test
rcr
inc
imul
fcoms
jnp
insb
filds
mov
pop
inc
out
sub
pop
cmp
add
mov
mov
xchg
cs
pop
push
popf
mov
cld
cwtl
jne
add
loop
outsl
imul
es
jmp
test
aad
rcrb
xor
movsl
adc
add
test
popf
mov
test
pop
mov
out
in
mov
or
add
pop
inc
je
cmp
int
xchg
pop
mov
dec
test
or
adc
xchg
add
nop
frstor
cltd
hlt
les
in
push
mov
or
or
scas
add
jle
hlt
pop
in
xchg
jae
pop
out
call
xlat
cmpsb
mov
sbb
fadds
fwait
iret
inc
andb
scas
gs
int3
in
push
mov
mov
sub
popa
fdivl
out
add
xor
sti
ret
imul
cld
loopne
mov
outsl
inc
push
les
call
push
pop
out
sub
stos
inc
add
ds
loope
cmp
push
jg
xor
push
dec
jae
xor
ds
popf
mov
jns
rclb
xchg
popf
mov
xchg
dec
loope
sub
mov
test
or
rolb
or
lock
push
lar
mov
jb
test
jbe
pop
adc
stos
sbb
int3
cmp
push
and
mov
adc
std
mov
shlb
mov
add
fwait
jecxz
or
adc
pushf
lea
inc
out
or
pop
mov
mov
push
push
and
outsl
out
inc
mov
inc
movsb
push
das
hlt
lret
push
jmp
jl
sub
test
call
xchg
mov
fistl
rorl
fs
and
add
movb
jbe
stc
dec
push
movsl
xchg
xchg
lret
lcall
xor
mov
scas
pusha
in
push
jmp
call
arpl
sub
sub
fsubr
xor
mov
lds
popl
mov
jae
stos
aam
cltd
fsubrs
popf
popf
icebp
pusha
xchg
shrb
jg
jle
xchg
sub
cmpsl
ficoml
jo
ds
pop
ja
adc
cs
jnp
inc
add
push
repnz
test
sti
nop
push
pop
dec
rcrb
rclb
sbb
mov
add
test
pop
insl
fdivl
push
inc
lods
mov
js
push
pop
mov
out
cmp
fdivrl
loope
jno
add
sbb
mov
fcomi
cld
or
lods
iret
xor
fs
adc
and
push
mov
fwait
cmpsl
push
jne
dec
in
add
xor
ja
fwait
in
add
fsubrl
inc
jmp
mov
add
jl
pop
fdiv
pop
jnp
shrb
out
mov
test
pushf
std
sub
cld
sarl
call
out
jnp
jle
xchg
out
inc
movsb
lock
punpckhwd
push
cwtl
hlt
lahf
enter
mov
push
sub
mov
add
mov
and
sti
movsl
push
sbb
sub
mov
mov
xlat
test
lret
ja
pop
sub
push
add
data16
fs
or
ret
mov
fnsave
negl
xchg
push
xchg
loop
jg
add
rcrl
insb
dec
sbb
sarl
or
xchg
popf
jno
addr16
int3
xor
pop
divb
andl
testb
cmp
push
xor
stos
mov
sub
xlat
in
jbe
popf
inc
xchg
fnsave
jne
inc
js
adc
sub
ja
mov
cmc
scas
scas
mov
bound
lea
dec
push
out
mov
ficompl
rolb
push
pop
push
and
int
cs
inc
addr16
mov
clc
loop
inc
mov
bound
pop
push
inc
shr
sbbb
idivb
inc
cmpsb
popf
or
adc
popa
out
lcall
into
xchg
sub
mov
mov
push
repnz
sub
pop
test
mov
test
mov
add
mov
sub
lock
jns
mov
mov
and
ret
enter
xor
mov
pop
movsl
fstps
loope
sub
xorb
and
rorb
outsl
sub
pushf
repz
xchg
cmpsl
cli
jl
inc
jbe
scas
mov
lret
or
rcrl
mov
ja
jmp
testl
in
push
stos
pop
mov
push
pop
mov
mov
cmp
pop
sub
cmp
ds
nop
fdivrp
imulb
aam
iret
enter
lahf
pop
xor
imul
mov
nop
aaa
shll
dec
xchg
mov
and
mov
les
push
out
xor
data16
xchg
aam
inc
jae
lahf
dec
mov
push
aad
in
add
daa
add
in
dec
test
push
cmp
iret
test
pop
push
adc
xchg
jl
mov
outsb
mov
xor
lddqu
inc
imul
or
int3
ljmp
mov
insl
mov
stos
add
sarb
jg
enter
insl
dec
jo
dec
push
cmc
ja
inc
cmp
arpl
sub
int
mov
ficompl
test
idivb
shll
aad
mov
add
call
lret
cmp
adc
inc
jae
xor
enter
push
das
or
mov
dec
jno
aaa
shlb
rcl
ja
xchg
jmp
std
mov
mov
cwtl
cwtl
or
adcl
mov
xor
mov
rorb
mov
faddl
dec
loopne
jns
stos
mov
xchg
dec
add
xor
loope
or
loope
sbb
mov
lahf
imul
es
jo
shll
mov
rcrl
sbb
cmp
adc
inc
push
pop
cmpsb
outsl
rolb
adc
nop
js
scas
xchg
sub
mov
sbb
jmp
add
movsb
rcll
adc
sbb
jmp
push
jmp
imul
fld
scas
mov
mov
test
ret
fsubrs
mov
or
mov
or
cmc
scas
jne
arpl
and
xchg
sub
int
cmpsl
popa
jp
xor
jo
ss
add
inc
popa
test
mov
mov
inc
ret
imulb
mov
hlt
xchg
jb
dec
adcb
and
lahf
shlb
sub
or
sti
xor
lods
xchg
ret
aam
loope
mov
les
jno
mov
hlt
add
rcll
add
cmpsl
arpl
jns
add
sub
cmc
sbb
xor
mov
inc
mov
xor
lret
or
pop
das
jbe
jmp
or
push
inc
fs
test
push
shrb
in
dec
daa
out
sbb
sub
out
std
test
xor
add
sub
pop
xchg
push
popa
ret
fnstsw
xchg
arpl
cld
ficoml
mov
xchg
mov
lds
loope
mov
in
fdivr
js
cld
cmp
push
add
sub
je
or
cltd
push
in
in
stc
arpl
sti
stos
push
loopne
pop
loop
sub
mov
push
pop
sub
lock
nop
ljmp
test
jge
popf
add
and
push
fisubrs
out
scas
fwait
adc
sbb
dec
xchg
push
push
repz
rorb
push
xor
movsb
lds
filds
test
leave
fidivl
loop
jle
imul
popa
pop
inc
out
push
or
sub
inc
ret
and
das
push
mov
mov
jge
fwait
insl
dec
mov
jno
dec
std
dec
lds
sbb
addr16
cli
ja
mov
add
icebp
arpl
jb
cwtl
test
cli
mov
maxps
jo
out
into
fcoms
inc
js
fiaddl
fcoml
jo
aaa
pop
jp
add
xor
out
out
pop
jnp
cmp
loope
dec
cs
cmp
enter
push
mov
add
inc
in
lsl
sti
jp
cli
enter
cmp
pop
inc
add
adc
insl
ror
jp
mov
in
jp
imul
fwait
lret
adcb
arpl
cmc
mov
push
sub
xor
mov
das
push
lcall
push
and
xor
mov
lcall
sbb
mov
inc
test
test
stc
aaa
addr16
add
test
arpl
and
in
cltd
callw
icebp
xabort
xor
add
fs
ret
and
jmp
sbb
aaa
pop
push
lahf
sbb
push
jnp
ljmp
iret
and
xlat
data16
loope
movsl
test
les
test
lret
push
dec
movsl
push
ss
add
jbe
mov
mov
arpl
xchg
sub
insb
stos
xor
push
addr16
shlb
mov
hlt
in
adc
shll
arpl
adc
or
sbb
dec
imul
icebp
fdivr
or
pop
leave
mov
jge
lahf
fsubs
pop
mov
xor
das
cmpsl
das
arpl
cmc
repz
aas
and
aad
jmp
or
test
push
mov
loope
inc
sub
and
mov
in
lds
cmp
cld
out
jg
sbb
sar
sub
call
cmpsb
mov
loope
jecxz
cwtl
or
pop
dec
jne
mov
push
pop
xchg
jnp
add
aad
add
rolb
mov
hlt
xor
inc
mov
lods
mov
mov
cld
mov
in
das
jae
and
pop
cmpl
or
mov
cmp
idivl
sbbb
sub
xchg
stos
stos
imul
jl
push
mov
outsb
loope
push
aad
in
push
inc
int3
test
lods
xchg
dec
jne
and
fstpl
jne
pop
fdivl
repnz
xchg
cmp
dec
add
push
push
movsl
fnsave
stos
loopne
add
push
jae
shrl
push
sub
pusha
cmpb
adcl
sbb
loope
popf
test
inc
cmpsb
add
dec
stos
add
sbb
adc
test
jo
mov
push
and
pusha
adc
lcall
mov
aad
and
or
les
xor
fstpt
mov
xor
mov
out
fmulp
mov
jo
push
cli
lea
mov
hlt
and
imul
mov
inc
out
push
mov
jge
in
leave
or
dec
in
test
or
mov
pop
pusha
mov
cwtl
push
pop
cli
mov
xor
call
out
scas
xor
subb
stos
xor
das
xor
cmp
cli
fs
sbb
out
dec
pop
ds
or
pop
in
jg
mov
mov
add
pop
outsl
inc
outsb
xchg
pop
xor
sub
loopne
mov
imul
sti
das
mov
mov
pop
outsl
or
mov
lret
push
pop
jmp
push
notl
cmpb
aaa
mov
int
inc
mov
int
sub
movsl
mov
pop
lahf
sar
push
loope
daa
call
adc
jmp
jns
call
dec
cmp
and
arpl
pop
mov
movsl
scas
inc
repnz
cmp
pop
inc
add
aad
inc
andb
fisttps
nop
mov
xchg
shl
and
rolb
sahf
xchg
xchg
repnz
sbb
popf
jo
fistl
cmpsb
scas
mov
rcrb
ljmp
cli
ja
mov
fwait
das
mov
pop
mov
mov
and
aad
lea
fldl
addr16
jmp
push
mov
loopne
faddl
cli
mov
aaa
dec
sub
add
push
test
fldt
jmp
pop
je
jb
adcl
cmp
cmpb
jecxz
in
ljmp
mov
xchg
lcall
repnz
popf
adc
adc
fsubr
movsb
mov
adc
jg
sub
push
and
insl
inc
icebp
rolb
mov
sbb
stos
xor
ss
xor
les
sbb
mov
sbb
fcoml
sub
data16
loop
sub
leave
int
push
jbe
mov
in
sbb
jg,pn
mov
out
cmp
inc
xor
xchg
insl
dec
or
mov
fstl
shrl
les
push
sarb
jg
push
negl
xor
jne
es
sti
out
sarl
stc
sbb
add
mull
push
dec
adc
mov
lock
int3
test
push
sbb
stc
test
jno
cmc
insb
pop
clc
idivb
stos
sbbb
xchg
jnp
sti
mov
xorl
out
aam
dec
dec
js
sub
push
test
je
fs
xor
push
mov
repnz
ret
aad
jmp
push
xchg
lret
sub
xor
sbb
pop
dec
push
in
in
loope
jne
pop
inc
idivl
adc
shlb
sti
jo
sub
pop
rol
lcall
js
and
xor
loop
adc
shrb
xchg
sahf
es
mov
xchg
loopne
fisubrs
dec
cmc
push
jnp
inc
push
xchg
popa
pushf
xchg
cltd
lahf
sub
loopne
mov
ja
pushf
xchg
xor
pushf
xorl
pushf
imul
bound
rclb
add
push
cmp
aaa
cmp
ret
icebp
add
data16
push
inc
jle
and
aam
or
mov
jmp
jp
arpl
hlt
cmp
sbb
jno
push
xchg
fst
shl
mov
mov
clc
pop
and
jle
movsl
mov
stc
add
test
mov
not
xchg
xchg
lds
push
mov
jp
in
sti
cli
jns
scas
repnz
fstl
mov
out
idivb
sbb
jbe
dec
mov
mov
sbb
xor
mov
adc
rcrb
mov
aad
mov
pop
movsl
sbb
sub
sbbl
push
aas
in
push
imul
jp
repz
int3
out
and
jle
lods
mov
push
and
jmp
add
adcl
js
xlat
mov
push
cmpsw
stos
sbb
cld
cmp
loope
imul
dec
movsb
cltd
das
cmp
rcrl
clc
xchg
jg
cmp
mov
mov
mov
mov
outsl
xlat
out
fldenv
das
call
ficoms
test
inc
mov
pushf
and
inc
pop
pushf
addr16
push
jmp
mov
inc
push
mov
and
and
shl
push
arpl
xchg
pop
push
mov
pop
add
sbb
mov
mov
mov
and
addb
fmuls
mov
pop
movb
int
fcomps
addr16
pop
int3
lcall
or
adc
sahf
out
push
sti
gs
int
add
mov
add
xor
xchg
daa
lods
jg
shl
mov
scas
add
rcrb
push
ljmp
in
pop
int
outsl
in
xchg
fwait
xchg
inc
sahf
addr16
push
in
in
push
sub
ja
test
add
ret
fstpt
push
pop
xchg
insb
shlb
mov
int3
pop
pop
push
sub
pusha
jne
mov
sub
dec
push
jl
pop
add
push
ja
imul
jb
test
arpl
in
add
mov
ja
mov
mov
addb
jmp
test
mov
fwait
ror
aas
pop
sbb
icebp
xchg
jmp
pop
xchg
jp
outsl
loope
aas
hlt
sub
dec
in
pop
mov
adc
pop
fsubl
mov
ja
dec
aaa
test
mov
xchg
cltd
popf
add
jp
test
cmp
xchg
test
jp
jge
js
pop
push
or
push
pusha
ljmp
adc
daa
xchg
into
jae
js
pop
les
cmp
cmp
enter
or
mov
lods
cmp
insb
sbb
mov
cli
xchg
mov
pop
or
pop
sti
loope
test
cmp
mov
icebp
cwtl
mov
dec
cmc
lods
sbbl
sti
gs
mov
and
repnz
pop
add
sbb
adc
rolb
scas
mov
pop
add
add
sti
icebp
in
outsl
inc
push
xchg
cmpsl
push
js
mulb
lea
mov
adc
js
pop
outsl
repz
mov
outsl
mov
pop
popf
sti
mov
test
iret
mov
push
shlb
es
mov
fildl
jne
addr16
lods
sbb
decl
addb
in
push
inc
dec
cmp
dec
adc
jo
outsb
sub
test
iret
nop
cld
inc
call
int3
sub
jle
mov
cmpsl
mov
pop
pushf
dec
loopne
dec
dec
pop
popf
sarb
fimull
sahf
inc
popf
xchg
outsl
mov
or
jb
push
pop
dec
pop
js
push
int
mov
pop
repnz
mov
or
jne
cmp
jb
pop
cwtl
sub
cmp
mov
xchg
xchg
insl
aad
pop
frstor
test
pop
xchg
or
or
clc
xor
push
and
or
mov
dec
imul
sbb
add
jg
cli
fst
cmp
fisubrl
xorl
push
xchg
pop
pop
xchg
dec
addr16
inc
icebp
fldenv
clc
pop
jle
xor
adc
inc
mov
shlb
xchg
aad
add
cmpsb
inc
mov
fs
xchg
pop
sub
xchg
mov
repnz
cld
mov
pop
mov
sbb
shll
mov
sbb
cmp
inc
dec
mull
clc
mov
hlt
and
jl
dec
rcrb
adc
test
addb
adc
mov
idivl
daa
inc
push
inc
jno
or
mov
idivl
sbb
rcr
xchg
stos
xor
lret
ss
push
cltd
and
mov
out
loopne
das
jl
hlt
das
addr16
lods
xchg
dec
sbb
fdivl
jmp
ds
xchg
out
mov
xor
mov
xchg
neg
sar
or
les
andb
push
leave
sub
push
cmp
sbb
push
push
sahf
shl
lret
outsl
cmp
je
xorl
mov
cmp
xor
sar
aad
sub
xchg
mov
insl
lea
cld
cmpsb
or
ret
ficomps
test
pop
or
rcll
dec
fimuls
cmp
add
cmpsl
call
pop
hlt
movsb
and
push
inc
pop
jb
fwait
xor
sqrtps
pop
pop
mov
into
sub
hlt
and
sub
das
out
add
adc
insl
or
sub
fisttps
cld
sbb
mov
loop
sbb
test
xlat
mov
shrb
cltd
test
dec
inc
subl
push
inc
ret
lret
rcr
adc
push
in
add
jae
or
lods
pop
push
dec
dec
hlt
cmp
dec
or
pop
pop
ficoml
jo
sarb
mov
mov
jb
std
sub
mov
mov
pop
shl
shlb
add
and
test
adc
xchg
test
jno
xor
test
testl
push
shr
or
cmp
and
mov
int3
push
scas
lds
add
lock
out
mov
loopne
jns
push
sbb
hlt
mov
fsubrs
rclb
icebp
js
ds
movl
pushl
ret
mov
sar
sbbl
loop
loope
loop
or
jae
call
sarb
and
ds
imul
out
mov
mov
jbe
mov
pop
nop
ja
or
inc
rcrb
rcr
in
in
inc
fs
cmp
dec
dec
mov
fwait
imul
add
ds
adc
rorl
xor
xchg
mov
imul
xchg
mov
es
or
imul
sub
ljmp
mov
test
int3
das
mov
data16
movsb
loope
insl
xor
loopne
jnp
jno
fisubrs
iret
xor
into
add
loop
mov
flds
push
inc
pop
fldl
inc
daa
or
testl
fstpt
push
sbb
dec
push
jbe
xor
mov
nop
cmp
jge
sub
or
jno
mov
xchg
popl
and
scas
das
and
hlt
pushf
ficomps
mov
pop
xlat
jae
mov
hlt
test
dec
cmpsb
mov
push
dec
sar
in
lret
xchg
mov
or
std
or
jp
nop
xchg
xchg
mov
xchg
xor
dec
ljmp
test
adc
xor
mov
jae
mov
pop
add
ret
mov
test
xor
int
lods
nop
jecxz
ret
iret
mov
arpl
push
ds
jmp
push
mov
xchg
push
pop
sub
ret
scas
adc
fisttpl
or
cmp
ret
ljmp
dec
mov
out
cwtl
and
xchg
mov
shr
test
mov
jp
aas
and
ficompl
fwait
xorl
xor
leave
dec
adcb
data16
push
dec
dec
cli
mov
ret
and
mov
push
pop
sarl
jg
popf
push
and
adc
int
ror
sub
cli
in
js
push
dec
jmp
in
inc
and
dec
shrl
inc
xchg
pop
jae
sbb
mov
out
out
add
xor
fdivrl
cmp
fdivr
pop
jge
imul
jae
hlt
std
ljmp
lods
sbb
mov
std
loop
add
repz
adc
sbb
dec
push
sbb
mov
fildll
xchg
daa
cltd
int
pop
and
jp
jnp
aam
es
rclb
jns
and
les
insl
inc
lea
xchg
xlat
mov
roll
and
pop
push
jle
ss
xor
mov
push
jl
clc
cmpsb
test
inc
daa
stos
or
pop
mov
dec
jle
pop
int
jp
lds
and
lods
inc
fwait
into
pop
cli
dec
cmp
pusha
push
cwtl
sub
jl
clc
or
inc
dec
shrb
movsb
imul
lds
or
out
cltd
and
imul
aas
je
repnz
pop
sbb
nop
cmpsb
add
cmpsb
stc
mov
sbb
or
adc
jno
pop
jp
dec
out
pop
xor
ret
inc
mov
mov
int3
or
xchg
lret
push
mov
data16
sahf
pushf
ja
xor
pop
fwait
push
mov
pop
dec
adc
xchg
cmc
xor
push
fadds
adc
loop
popf
test
in
mov
out
mov
cltd
ficompl
int3
lods
xchg
jmp
fdivrl
gs
cmp
sub
jns
or
xchg
and
add
cmp
fwait
push
mov
cltd
in
cmp
push
mov
push
push
ret
cmp
fs
lea
cli
mov
mov
aam
outsl
add
popf
dec
inc
and
or
int3
pop
push
mov
adc
leave
jp
push
arpl
xchg
or
std
pushl
jns
jl
ds
add
out
mov
push
mov
dec
sub
pop
jns
hlt
inc
jo
bound
sahf
and
xor
adc
cmp
hlt
flds
bound
push
rorb
push
mov
ficoml
dec
dec
and
mov
mov
mov
mov
pop
xchg
push
test
dec
gs
inc
sbb
out
ds
sbb
cmpsl
inc
shlb
dec
pop
int3
mov
mov
mov
or
movsb
cmp
push
xchg
xchg
cmp
jp
cltd
addr16
lods
mov
fcmovb
lods
enter
and
xchg
push
icebp
aaa
int
pop
or
add
test
add
dec
lret
ds
repnz
jle
mov
les
inc
sbb
test
xchg
scas
fistl
cmp
xor
lret
mov
aam
xchg
imul
jge
push
fucom
dec
and
sti
scas
and
pop
sub
in
sahf
jne
in
push
mov
out
jns
pop
lock
xor
arpl
xor
lret
sbbb
dec
cmpsb
add
mov
pop
mov
cld
cli
push
std
aam
push
inc
rcrb
fbld
pop
test
nop
mov
pop
add
jo
cmp
pop
mov
inc
pop
orl
adc
ror
sbb
pop
jl
dec
push
popa
les
add
insl
jo
pop
ss
cmp
insb
bound
sub
inc
mov
jecxz
fnstsw
mov
sbb
popf
ret
pop
xlat
jbe
data16
mov
mov
test
adc
jo
xorl
lock
inc
xchg
pop
xor
negb
mov
or
jbe
es
adcb
pusha
adc
xchg
scas
out
mov
sbb
mov
xchg
cs
test
inc
xor
repnz
mov
fs
ds
jns
enter
dec
xor
jl
xor
cli
pop
js
jle
movsb
iret
gs
jne
jmp
clc
cmp
sub
mov
jo
cmpsb
movsb
in
popa
lods
add
ret
je
jg
into
imul
repz
dec
lods
add
push
jb
mov
xchg
mov
sahf
push
xor
mov
push
es
xor
in
jle
stos
and
sbb
ret
lcall
dec
fs
iret
push
shll
xchg
mov
cmp
inc
inc
and
and
mov
sub
adc
cmp
mov
mov
pop
or
xor
sahf
add
xchg
or
cmc
pop
mov
mov
add
loope
addl
test
addr16
mov
sbb
mov
sti
inc
or
cmp
xor
add
testl
sbb
pusha
movsl
xor
mul
fwait
push
mov
int
push
xor
and
shl
dec
imul
mov
or
pop
fucom
and
shl
out
and
icebp
xchg
add
mov
addr16
xchg
pop
add
fists
lds
cmp
mov
aaa
test
push
shrl
pop
fs
imul
sub
xor
and
adc
aam
sbb
cs
inc
xchg
lcall
sti
inc
xchg
lods
cld
lods
mov
pop
scas
loop
rcrb
jg
daa
push
out
stos
mov
xchg
ja
push
sti
lock
xchg
nop
into
mov
and
bound
cmp
pop
daa
mov
mov
mov
pop
rorl
mov
jmp
and
lock
or
sub
or
and
hlt
mov
mov
sbb
push
or
out
xchg
mov
sbb
lods
sub
mov
xor
mov
adc
or
sub
pmuludq
and
das
sub
js
and
out
add
push
xor
js
daa
push
je
call
mov
adc
mov
add
and
cmp
mov
out
add
iret
rolb
sbb
cmp
insb
sub
pop
xchg
das
jo
mov
aaa
jb
arpl
ss
int
aad
push
or
pop
es
jbe
jge
test
jno
pop
bound
mov
arpl
lret
stos
pop
lcall
outsl
xchg
mov
stos
and
dec
ja
mulb
mov
inc
fistl
adc
jge
sub
push
or
cmpsl
jg
cmp
outsb
mov
out
mov
rorl
ret
push
mov
xchg
add
pop
ror
jle
nop
add
xor
in
dec
movsl
add
sbb
in
mov
sbb
push
out
test
ss
mov
stc
jle
into
push
cmp
cmc
ja
loope
repnz
ljmp
cli
fcom
fimuls
hlt
stos
ja
inc
icebp
nop
xor
ljmp
not
leave
mov
int
scas
pop
call
lret
jae
pop
jp
cmpsl
and
add
imul
out
jmp
sbb
sub
jg
mov
mov
mov
movsb
cmp
add
sbb
xor
out
lea
divb
lock
cmpsb
dec
int3
sbb
dec
pop
bound
inc
xchg
lds
mov
and
enter
imul
push
scas
enter
sbb
adc
pop
cmc
jne
gs
lret
dec
jl
lcall
xchg
pop
push
pusha
mov
push
mov
je
xchg
pushf
icebp
inc
fldenv
outsl
imul
and
test
loope
pop
push
movsl
push
int3
push
int3
scas
cs
sub
mov
xchg
pop
inc
xor
pop
jne
or
movsb
arpl
xchg
lret
xor
pop
pop
stc
imul
mov
sub
xchg
add
loop
push
push
gs
xchg
gs
push
jp
xor
stc
and
pusha
sbb
cmp
in
mov
push
loope
xchg
jle
lret
pop
dec
sbb
jae
dec
into
mov
into
fs
aad
jno
xor
sbb
mov
mov
pop
int3
idivb
nop
jl
ret
pop
push
cmp
or
out
aad
int3
test
add
xchg
sub
test
push
sub
dec
mov
xchg
xor
testb
movl
sub
js
jbe
cmpsb
pop
lock
aaa
mov
inc
testl
cmp
in
mov
cmp
jnp
and
sub
pop
orb
push
out
and
js
and
cmp
addb
into
psraw
pusha
call
xor
mov
push
pusha
sahf
push
mov
cld
idivl
sbb
movsb
insb
scas
clc
lcall
arpl
rcrl
pushf
lret
xchg
jl
mov
lea
or
adc
cmc
mov
sub
jge
mov
lds
xor
inc
cmp
lahf
dec
sbb
push
int3
mov
ret
push
imul
into
faddp
mov
leave
dec
enter
ret
and
int3
fnstcw
cmp
push
aaa
jp
lods
es
mov
les
das
and
or
pop
ja
hlt
js
bound
movsl
outsl
stos
stos
in
jae
cmpsb
mov
mov
and
push
clc
outsl
mov
mov
pop
add
lock
and
jl
inc
pusha
pop
lock
fdivl
or
dec
dec
cmp
ljmp
pop
incb
add
add
out
mov
mov
fisubrl
cld
jl
pop
adcb
sti
sbb
jmp
fbstp
lcall
cwtl
pop
dec
or
jae
notb
pop
ss
jl
mov
pop
aas
in
cmp
cltd
jae
add
pop
push
adc
sbb
jb
dec
pop
adc
dec
into
testb
icebp
add
ret
mov
out
loopne
and
out
push
in
fstps
cmpsl
adc
ss
and
dec
sbb
lret
jb
cmp
aam
nop
adcl
imul
sub
xor
jmp
call
sbb
pop
jo
test
cmpsb
pusha
shlb
inc
or
fdivl
rcrl
lahf
sbb
xor
loop
cmp
dec
pop
dec
mov
mov
inc
or
or
adc
xor
cs
outsl
mov
repnz
in
inc
lods
mov
adc
mov
shlb
ljmp
fsubrs
sbb
repnz
in
inc
push
adc
daa
sbb
icebp
add
inc
ss
call
push
push
jge
mov
mov
hlt
repz
push
adc
out
pop
addr16
sarb
adc
ss
cmp
leave
enter
pop
or
mov
cmpsl
fstps
daa
lock
gs
sbb
testl
add
sbb
xchg
inc
add
daa
js
jne
xchg
mov
fs
xor
movsl
mov
jne
mov
divl
insl
lods
push
rcr
insb
lea
cmp
shrl
xor
loopne
inc
mov
or
fsts
loope
int3
les
jl
pextrw
add
mov
scas
adc
mov
inc
adc
xorb
xchg
in
imul
fld
adc
inc
cwtl
adc
lock
nop
or
inc
test
inc
adc
mov
dec
xchg
xchg
outsb
out
lret
and
scas
push
and
mov
sti
pop
sbb
sbb
inc
push
jg
testb
ja
mov
lcall
fucomp
pop
pop
cmpl
pop
add
test
pmullw
push
cmp
jmp
hlt
cmpsb
pop
pop
incb
popf
xchg
scas
stos
sbb
loope
mov
loope
lds
jnp
or
aas
cs
push
adc
repz
sbbl
lahf
mov
or
push
sbb
mov
and
sub
xchg
pop
pop
iret
jecxz
dec
adc
mov
dec
mov
test
mov
jmp
jp
sarl
imul
or
push
lcall
dec
mov
movsb
cmp
and
mov
jp
lcall
cmp
enter
xchg
pusha
loop
mov
fbstp
jl
mov
add
sub
daa
inc
mov
or
inc
adc
dec
repz
xchg
mov
push
lods
push
test
iret
dec
pop
insb
std
or
fwait
inc
mov
ds
divl
cltd
outsb
jb
movsb
mov
out
imul
movsl
pop
cmpsb
xchg
scas
dec
inc
stc
jno
in
test
test
rcrl
and
push
fst
xor
pop
mov
xor
mov
dec
push
ret
lret
jb
xorl
sti
jb
inc
fsubrs
cmp
push
lock
sbbl
dec
lods
push
movsl
out
jl
movsb
cwtl
xchg
popa
aaa
outsl
fucomi
shlb
out
std
sub
jecxz
adc
pop
jp
xchg
xchg
mov
scas
fmull
ds
pop
mov
dec
shr
jg
add
mov
and
dec
push
add
pop
inc
jno
dec
and
clc
clc
sub
xor
stc
mov
mov
and
shll
cmpsl
dec
cmpsb
mov
jne
dec
das
inc
mov
push
and
xchg
jecxz
hlt
or
fwait
ja
xchg
addr16
pop
dec
adc
pop
iret
jno
and
outsl
cmp
xchg
repz
andb
ficoms
cld
out
xchg
mov
sti
rorl
cmp
mov
lock
test
repnz
out
lea
sbb
jecxz
jo
sbb
jmp
adc
pop
xchg
inc
fiadds
cs
xor
ret
push
repz
fadds
dec
or
out
movsl
lahf
inc
mov
nop
icebp
lcall
mov
mov
or
loopne
pushf
add
adc
aas
add
mov
fs
mov
adc
mov
cmp
and
push
mov
inc
das
pop
sbb
pop
xchg
mov
xor
push
nop
mov
iret
sahf
bound
stos
add
aas
repz
in
xchg
sahf
sub
shlb
out
xchg
mov
outsl
scas
je
aam
filds
jle
gs
jp
nop
les
push
pop
test
stos
dec
jmp
hlt
faddl
or
pushf
add
xorl
cli
or
lea
movsb
dec
mov
pop
xor
jbe
pop
daa
pushf
mov
mov
leave
inc
push
es
pop
push
dec
mov
sahf
mov
mov
sub
mov
pusha
xchg
xor
xor
ficomps
xor
pop
sbb
fs
call
ljmp
mov
pusha
and
sbb
jno
sbb
fsubr
cli
jge
xchg
icebp
hlt
fmul
scas
cmc
xor
enter
test
scas
push
cmp
add
out
mov
lods
out
icebp
sbb
lret
pop
call
fsts
sub
sub
int
cmp
push
jg
jg
mov
mov
in
add
mov
adc
and
cli
push
subl
mov
jp
push
test
mov
fs
lret
sub
mov
mov
jecxz
testl
leavew
jnp
inc
sar
dec
lret
or
jno
push
fnstenv
jecxz
jecxz
cli
push
pusha
cmp
add
jbe
adc
jl
jo
inc
pop
stc
or
outsb
stos
lods
movsb
stos
pusha
pop
repnz
cmc
mov
js
xchg
mov
popf
jl
movsb
scas
jmp
push
pop
repnz
addb
cmc
nop
sbb
xlat
add
push
xchg
pop
and
ds
dec
pop
or
jnp
outsb
or
sbb
fdiv
push
std
inc
dec
psraw
js
jle
mov
das
mov
mov
outsb
adc
daa
lret
lret
in
sbb
mov
dec
pop
pop
nop
insb
scas
and
lea
lds
stos
sbb
nop
outsb
mov
repnz
mov
outsb
gs
jbe
int
je
je
xchg
sbb
sti
pushf
push
lret
sub
fsubrl
xorl
mov
adc
mov
push
imul
popf
scas
rorl
add
aad
stc
adcl
int
cltd
push
mov
jle
lret
and
ficomps
loopne
sti
push
push
and
and
push
push
jbe,pt
aad
jnp
fcoms
outsb
mov
add
subb
cwtl
dec
cmp
test
mov
inc
aad
or
lods
pop
iret
inc
mov
xchg
jle
call
mov
push
rorl
inc
adc
outsb
inc
ljmp
lret
loop
scas
inc
cmc
jnp
xchg
mov
test
mov
inc
fwait
nop
or
gs
add
scas
jmp
bound
clc
mov
or
int3
cmp
daa
data16
push
or
mov
daa
into
fldl2t
loop
enter
mov
jl
test
inc
and
outsb
jp
adc
xchg
add
jnp
pop
loopne
mov
stc
out
adc
nop
outsb
cmp
fadd
js
cld
push
ljmp
xchg
xchg
gs
sbb
mov
shr
stc
mov
sub
aad
push
dec
cmp
hlt
enter
fucomi
movsl
push
ss
pop
mov
push
adc
test
add
push
pop
scas
idiv
lret
or
mov
hlt
mov
pushf
xlat
decb
aam
xlat
rcll
stc
movb
fisubs
mov
jl
cmc
mov
cmc
mov
xchg
ror
sub
mov
and
aam
adc
inc
add
dec
pop
shlb
loopne
movsl
outsb
inc
jns
in
ficoml
and
mov
mov
ja
add
and
shl
sbb
arpl
hlt
mov
adc
mov
xor
adc
aad
ja
inc
je
out
pop
jecxz
popf
mov
jns
test
js
add
mov
mov
aaa
push
and
in
mov
fstl
sbb
data16
xchg
inc
mov
push
out
pop
fidivl
pop
sbb
xorb
xor
mov
notb
xchg
cmp
inc
hlt
or
xchg
fadds
add
cmp
frstor
pop
int
xchg
out
mov
out
jg
jae
in
mov
xchg
sbb
add
or
out
inc
sub
pop
xchg
mov
cli
xchg
das
sbb
pushl
sbb
xor
fildl
inc
sub
sub
lahf
dec
jne
into
cmp
xor
inc
scas
xchg
scas
or
or
leave
jns
xor
in
int
and
jnp
mov
cmpl
dec
enter
add
int
jle
pop
and
xchg
lods
jne
cmp
xorb
inc
xor
in
je
push
push
aam
sarl
add
pop
orb
jne
scas
sbb
xlat
movsb
adc
aas
and
sub
fwait
imull
mov
test
dec
jg,pt
mov
dec
xor
mov
lret
stos
add
mov
sbbl
test
xor
outsb
popa
cmp
add
mov
add
in
cmpb
test
or
jbe
inc
mov
push
mov
cmp
sub
jle
pop
movb
sub
sbb
pop
cmc
fnstenv
idivl
mov
inc
add
pushf
jl
out
adc
cmc
ja
adc
push
movsl
inc
and
leave
xchg
inc
in
jg
shrb
out
js
or
sub
cld
pop
lret
sub
inc
mov
cmc
mov
lock
cmpsb
lock
push
iret
int3
fisttpll
add
nop
sbb
sbb
mov
sbb
jns
into
jp
xchg
xchg
add
mov
fdiv
sahf
push
inc
mov
add
lock
imul
or
xor
out
out
clc
pop
test
pop
add
int
pop
mov
fnstcw
fnstenv
ret
pop
test
subl
loop
aad
je
jg
mov
jmp
sahf
mov
jns
pusha
and
jmp
sub
push
lock
cmp
in
sub
add
and
adc
dec
icebp
sbb
push
sub
rclb
mov
or
pop
fs
push
sbb
add
lahf
cltd
int
in
hlt
mov
xchg
mov
int3
ret
scas
stos
jl
sbb
andl
jmp
jns
insb
sbb
sbb
pop
rcr
in
xor
arpl
in
insb
mov
sbb
loopne
inc
pusha
mov
xchg
test
inc
stos
mov
out
pushf
jno
cmp
pushl
dec
leave
adc
test
arpl
loope
pop
sbb
ja
lret
out
fwait
mov
ficoml
pop
data16
cmc
or
dec
or
leave
test
sarl
int3
sbb
push
aam
pop
movsb
cmp
leave
lock
jno
push
lds
cmp
pop
adc
sbb
inc
fs
aas
xchg
mov
cmc
int
nop
sbb
xor
xchg
cmc
xchg
cmp
fadd
sub
cmp
outsl
push
fstps
lcall
insl
fidivs
jno
fidivl
adc
mov
les
rorl
aaa
pushf
jo
ljmp
or
cltd
jle
jecxz
mov
or
pop
mov
movsl
dec
daa
sub
ds
enter
xchg
sbb
into
jl
pop
std
test
stc
inc
mov
mov
pop
jnp
sbb
push
insb
xor
icebp
mov
push
xor
arpl
loopne
lret
cmp
testl
es
pop
adc
std
aas
sub
mov
dec
insl
lret
lret
pop
inc
mov
jecxz
add
pop
mov
push
or
iret
inc
lock
xchg
cmc
sub
push
jle
sub
stc
adc
cmp
sbb
lret
cwtl
or
mov
push
test
xchg
pusha
cmp
mov
push
loopne
xlat
cmpsb
pop
pop
cmc
or
out
stos
test
enter
jb
push
cmpsb
sbb
jge
adc
and
mov
popl
in
sbb
mov
push
data16
or
repz
addr16
stc
dec
and
popf
mov
clc
jp
mov
add
sbb
sbb
inc
xchg
jle
lea
in
stos
outsb
add
mov
xchg
xchg
loope
or
sub
push
sarb
sbb
neg
lcall
lea
cmp
call
es
and
cwtl
jnp
popl
sub
aam
cwtl
lret
inc
sqrtps
sti
in
jo
push
cmp
adc
fmul
xor
fst
pop
cmp
stos
jg
dec
cmp
adc
pop
push
sub
inc
dec
add
loop
shl
push
sbb
sub
xor
push
out
inc
addr16
jnp
and
sbb
sbb
xchg
mov
repnz
ds
and
ret
stc
mov
and
je
divb
push
dec
lods
push
jnp
lret
lods
mov
lcall
xlat
loopne
push
push
adc
mov
mov
or
rcrb
cmp
shrl
dec
sahf
push
pushf
call
mov
out
mov
xchg
mov
cld
dec
and
stos
xor
addr16
dec
inc
or
xor
stos
jge
jne
adc
xor
mov
jge
sahf
and
jecxz
inc
mov
hlt
push
xor
lret
data16
out
imul
cmc
inc
repz
stos
adc
inc
stos
xor
inc
lods
mov
sub
push
mov
adc
popl
out
pop
lock
mov
and
ljmp
ret
movsb
test
pop
sbb
sarb
pop
call
add
push
adc
lret
outsb
ds
je
pop
mov
loope
add
mov
adc
adc
cmp
ret
push
cmpsl
out
std
movsb
rorl
xlat
adc
inc
sbb
int3
pop
add
mov
movntq
out
and
pop
aaa
add
addr16
and
sub
xor
aas
fwait
push
xchg
mov
mov
ljmp
push
gs
popa
push
stc
adc
nop
push
scas
pushf
jecxz
mov
jecxz
and
mov
in
pusha
arpl
xchg
arpl
repz
push
push
jmp
dec
push
adc
jo
jp
inc
fs
scas
int
sbb
or
mov
push
and
cmpsl
test
inc
lea
stc
xchg
mov
nop
jmp
lods
dec
std
add
or
mov
xchg
rcrb
lds
mov
xchg
mov
mov
inc
push
cs
in
lock
mov
or
add
ret
jg
fcos
ret
xor
daa
inc
mov
cmc
inc
lea
ja
cwtl
inc
call
mov
and
rcll
dec
cmc
or
jbe
mov
inc
inc
mov
xor
xchg
dec
rorb
inc
ret
cmp
adc
sbbl
int3
mov
imul
jl
sahf
mov
mov
xchg
push
push
mov
imul
pusha
mov
movsb
jns
cmpl
lret
popl
jno
les
pop
fistpll
mov
pop
and
and
jmp
mov
pop
adc
sahf
mov
clc
mov
mov
inc
jns
scas
daa
out
aas
mov
popf
lcall
push
test
mov
mov
ds
clc
rol
subb
test
arpl
adcb
inc
pop
and
dec
scas
loop
inc
jle
sbb
ja
in
sub
inc
jne
cli
fwait
pop
int3
sbb
nop
je
clc
int
and
loope
not
push
iret
inc
dec
movsl
adc
out
shl
add
add
inc
mov
jl
out
sbb
into
fcomps
stc
or
jmp
fwait
in
cmpsl
inc
and
js
push
test
cmp
push
test
cmpsb
jp
dec
dec
xchg
jg
jb
test
sti
pop
push
xchg
pop
sub
enter
xor
cmp
std
fs
cmp
sahf
outsl
pop
andb
sbb
push
xchg
sbbl
in
pop
pop
in
push
fldt
push
mov
int
adc
xchg
aam
mov
hlt
inc
mov
movsb
add
popf
mov
sub
in
xor
push
sbb
pop
xchg
adc
and
out
in
movsl
addl
xor
and
push
xchg
nop
sbb
mov
sarb
and
xchg
icebp
loopne
push
inc
mov
and
out
outsb
adc
sbb
jg
popf
out
pop
shl
scas
jl
mov
ret
jnp
xchg
lret
pop
cmp
mov
test
pop
insl
jbe
arpl
popa
sub
inc
xchg
sbb
mov
rcrl
cmp
mov
imul
add
mov
mov
add
adc
mov
test
test
cmp
stc
mov
fisubrs
fnstenv
sub
xchg
pushf
je
cmp
mov
push
xchg
add
lock
jmp
sbb
sbb
out
leave
mov
lods
ljmp
fsts
cmove
inc
mov
xor
mov
dec
sbb
into
pop
push
inc
lock
adc
nop
stc
subl
jo
mov
jnp
xor
and
fcomi
push
xor
cmp
sar
jmp
nop
jne
add
mov
jns
and
sub
sbb
xchg
xchg
fs
mov
xchg
adc
out
sti
mov
mov
xchg
repnz
adc
mov
jnp
shrb
nop
push
insl
add
movsb
into
and
adc
or
subb
sarb
jecxz
sub
and
fcomi
test
jnp
popf
xor
push
sbb
shrb
scas
jns
mov
mov
inc
mov
mov
mov
int3
imul
sbb
jbe
sub
push
loop
push
addr16
outsb
push
jne
cmp
mov
inc
xchg
cli
sarl
cs
mov
leave
or
popa
adc
repz
enter
mov
outsb
lock
jb
in
mov
add
push
sub
imul
add
out
out
pop
pop
jo
mov
insl
mov
and
fsubrl
mov
add
dec
inc
inc
xchg
js
inc
cmpsb
enter
mov
testb
sbb
ret
mov
sub
sub
movsl
outsb
cmp
repnz
xor
xorl
stc
movl
mov
inc
dec
rcr
lahf
mov
jl
aad
push
inc
leave
mov
divl
xor
into
mov
cli
fs
xchg
cld
xchg
aaa
jo
fadds
inc
mov
insb
enter
pop
dec
movsl
jns
imul
push
addr16
inc
scas
les
xchg
jno
shlb
das
rcrl
arpl
mov
jns
int
aas
in
aam
scas
fdivl
lcall
cmova
shlb
dec
enter
add
jecxz
addb
mov
out
ret
test
mov
inc
mov
cmpsb
gs
test
mov
arpl
aas
adc
fs
mov
cltd
lock
pop
in
push
mov
out
inc
or
popf
jo
xchg
push
outsb
ljmp
inc
int
jae
and
cld
mov
arpl
cli
jns
jno
movsb
mov
aaa
shrb
jle
cs
inc
xor
scas
pop
out
dec
jle
cltd
adc
mov
sbb
sbb
xchg
sti
pop
movsl
shrb
cpuid
je
popa
sub
cmp
leave
loop
aad
adc
shll
push
daa
sub
ret
loope
jp
pop
push
in
pushf
aaa
je
das
ds
mov
or
stos
mov
iret
push
xor
scas
adc
xchg
int
push
pop
sarb
xchg
xchg
hlt
jg
faddl
aas
sub
jnp
or
test
sbb
outsb
inc
push
xor
jmp
popl
test
cmp
inc
pop
jae
xor
add
cmpl
cvtdq2ps
sbbl
sbb
out
out
popa
mov
aaa
or
and
jl
push
arpl
fimuls
inc
js
jl
jmp
repnz
ds
jg
rol
sbb
test
ret
adc
repz
data16
mov
push
jge
lods
mov
xor
cmpsb
sbb
mov
loope
and
mov
inc
mov
aad
jmp
mov
mov
lods
sti
mov
pop
xchg
rorb
ss
adc
lock
and
jmp
in
jnp
loopne
je
inc
stos
sbb
outsb
shlb
sahf
icebp
mov
sub
int
jb
jecxz
xchg
cmpsl
sti
dec
xor
cld
mov
cmpb
pop
lahf
enter
insl
mov
add
xor
pop
adcb
adc
inc
hlt
sbb
adc
or
inc
in
lods
les
push
imul
mov
mov
pop
pushf
mov
mov
adcb
dec
mov
add
je
push
sahf
dec
mov
mov
or
xchg
mov
je
cmpsb
xchg
movsl
std
iret
imul
add
cwtl
iret
fsubrl
ficompl
pop
mov
loopne
or
mov
inc
sbb
and
les
into
test
leave
fwait
xor
fmuls
or
lock
popa
cmpsb
lods
repnz
popa
adc
adc
inc
jno
mov
int3
stos
and
pop
lret
xchg
dec
js
sbb
xchg
sbb
sbb
dec
movsl
popf
fcomip
xchg
lea
aaa
or
jmp
and
scas
and
movbe
sbb
jne
inc
jl
or
jb
mov
rorl
inc
das
jno
inc
and
or
sbb
push
mov
inc
test
mov
add
mov
aas
mov
or
icebp
fisubl
fisttpll
out
jb
rorb
adc
or
out
pop
leave
and
xchg
adc
insb
dec
mov
pop
pop
mov
jp
push
cld
xchg
pop
xchg
je
xchg
sub
mov
sub
fchs
pop
mov
xchg
mov
clc
call
loop
sbb
cli
xlat
jmp
ficoms
mov
arpl
cmp
fcompp
cwtl
mov
xchg
lcall
ss
push
cld
sbb
scas
mov
mov
popa
sub
out
push
and
fldenv
xor
pop
mov
fldcw
ds
sahf
dec
iret
arpl
addr16
aas
ds
mov
push
pop
int3
mov
stos
ja
sub
lret
sahf
sbb
pop
pop
stos
aaa
cmpsl
jno
adc
test
or
or
add
jge
xchg
in
ret
fxch
out
or
push
dec
cmc
arpl
push
cmp
pop
repnz
mov
push
push
xchg
mov
mov
or
adc
leave
xor
ljmp
call
mov
xchg
jns
push
enter
daa
sbb
stos
jg
inc
imul
fsubrl
cmp
int
sahf
jne
cmc
int
mov
fnstenv
xor
lea
push
push
mov
enter
pop
cmp
and
pop
mov
lods
movsl
int3
or
sbb
arpl
imul
inc
repz
sahf
and
shll
in
pop
sbb
mov
push
dec
mov
push
adc
push
add
mov
xor
cltd
push
add
pusha
pusha
mov
imul
cltd
shlb
xchg
xor
stc
pop
adc
pushf
pop
mov
stos
shr
bswap
iret
pop
cs
pop
aas
and
fs
push
mov
inc
mov
or
xchg
push
fadd
cli
xor
ret
andb
mov
cmp
inc
xchg
test
xchg
or
addr16
pusha
cmp
cmp
mulb
cmpsb
mov
rcll
pop
sbb
les
cmp
mov
mov
xor
fisubrl
das
adc
daa
xor
ret
mov
call
and
rol
movntq
fst
pop
push
cwtl
xchg
test
rcll
aam
xchg
sub
into
or
cmpsl
sbb
fists
movsl
andl
in
shlb
mov
mov
addl
jle
and
subb
dec
test
ret
sarl
pop
jae
jb
pop
js
add
lds
mov
inc
das
ficompl
jp
xor
movsb
test
lea
call
xor
pop
add
mov
shll
cmc
push
cmpb
cmp
lds
pusha
xchg
or
adc
push
xor
mov
inc
outsl
imul
mov
cwtl
sti
test
lds
jne
leave
outsl
adc
xor
out
cmp
rcl
shll
adc
dec
loopne
mov
mov
xor
sbb
adc
jns
push
adc
bound
lea
mov
outsb
rclb
pop
mov
pop
sub
sbb
and
mov
inc
test
and
lds
xchg
push
push
cmp
add
adc
loop
mov
mov
popf
dec
in
jl
sarb
mov
push
repz
cmp
jmp
repz
add
adc
inc
in
cmp
fs
mov
pop
sbb
andl
ja
mov
xchg
push
hlt
negl
aam
jmp
inc
mov
pushf
cs
lds
es
sbb
test
and
dec
inc
popf
lcall
cld
push
repnz
sbb
ret
push
gs
ljmp
fwait
xor
sub
das
mov
xorl
sub
test
dec
lds
cmp
into
cmc
ss
pushf
nop
pop
sub
mov
in
data16
jmp
cmp
add
lock
pop
dec
push
jg
adc
dec
das
adc
movsl
aad
xor
xlat
jecxz
sbb
inc
andl
movsb
push
cmp
call
lcall
or
les
shl
in
pop
xchg
es
scas
add
xchg
or
imul
stos
test
stos
out
cli
inc
imul
negl
sub
or
inc
ss
xor
pop
idivl
dec
rcrl
outsl
push
jnp
ret
mov
lret
mov
adc
and
dec
sarl
adc
cmp
subb
dec
rorl
or
sbb
adc
cmp
inc
cmp
test
pop
cmp
or
orl
lods
pusha
or
cmp
test
sub
decl
jo
scas
push
sbb
pop
nop
arpl
jns
and
ss
mov
cmp
pushf
data16
xchg
adc
movsl
loopne
pop
les
pop
pop
jmp
xchg
fsubr
stc
popa
or
sub
gs
mov
or
scas
mov
test
outsb
sub
loop
fisubrs
outsb
scas
imul
mov
push
adc
jge
pushf
mov
or
stc
dec
mov
jns
test
sub
inc
cwtl
idivl
mov
jb
add
cmp
pop
rcr
cld
push
sub
out
mov
test
cmpsl
insl
jno
adc
sbb
mov
push
aas
inc
outsl
add
imul
jge
adc
repnz
push
pop
roll
sub
dec
outsl
and
cmp
push
sbb
xchg
mov
adc
xor
mov
jg
adc
pop
mov
push
add
mov
jae
push
xor
sbbl
mov
popa
cld
jecxz
gs
lret
fs
jb
js
sub
xchg
das
cmc
xor
pop
pop
sti
jecxz
push
enter
mov
or
stc
sub
jge
aad
test
ficomps
sbb
push
mov
push
fcmovbe
stc
push
rclb
push
test
mov
xor
dec
sub
xchg
and
sbb
ss
mov
xor
mov
pop
mov
je
gs
js
cmp
mov
mov
in
mov
mov
das
xchg
mov
testl
sub
xchg
mov
pop
push
inc
pop
cmc
rolb
xor
sbb
pop
dec
xchg
mov
dec
jns
sbb
insb
mov
mov
aas
imul
xchg
jg
jns
xor
loop
sbb
jge
shrb
dec
mov
mov
outsb
jle
ss
popf
lahf
fimuls
pop
mov
movsl
pusha
out
mov
sbb
jae
push
in
fmul
sub
push
outsl
enter
xchg
jnp,pn
mov
ret
outsl
enter
adc
mov
or
mov
repz
sub
jbe
into
add
pop
adc
push
imulb
mov
sbb
enter
rcll
out
mov
fnstenv
subb
add
jp
lret
repnz
xlat
add
jle
mov
rcr
fs
incb
xor
and
mov
in
cmpsb
fmul
push
rcll
ret
gs
dec
shl
xor
push
push
leave
cld
cmpsb
mov
out
cld
rcr
xchg
lds
pop
adcl
insb
pop
mov
adc
cmp
cmpsb
ss
lahf
test
push
mov
cmp
stos
inc
inc
stos
cwtl
mov
scas
pop
leave
nop
mov
int3
data16
or
in
outsb
cmp
inc
mov
cmp
adc
mov
je
decb
push
cmp
xchg
fcompl
cs
daa
cmp
cmp
lock
adc
movsl
lock
push
xor
jl
in
sbb
cmpsb
outsb
ss
push
and
outsb
icebp
das
in
inc
dec
jb
imul
lods
xor
rcll
mov
push
fdivrl
fwait
sar
loopne
jmp
push
inc
fcomi
mov
mov
js
or
mov
pop
mov
cltd
mov
xchg
adc
sti
cmpsl
aam
in
out
mov
andl
xchg
push
ss
addb
std
loope
lret
outsb
gs
fstpl
xor
xor
bnd
xor
and
loop
scas
mov
out
cmpb
ljmp
cmp
iret
jmp
or
ljmp
lret
pop
mov
bound
mov
cmp
pusha
adc
lock
mov
scas
cli
cld
dec
aam
hlt
imul
clc
adc
and
out
pop
repz
xor
inc
insl
sarl
cmpsb
add
mov
sub
pop
pushf
add
aad
cmp
ljmp
mov
cwtl
push
iret
out
pop
rol
inc
outsl
mov
rcl
sti
push
xor
test
dec
xor
jp
js
aam
or
cmpsb
std
xchg
cmpsb
decl
insb
pop
and
hlt
pop
inc
jg
aad
pop
test
cmpsl
xlat
xor
xcrypt-ctr
cmpsl
fsubl
adc
cmp
in
pop
ljmp
je
mov
incb
imul
jae
das
mov
add
out
imul
lret
daa
outsb
mov
es
out
add
or
or
enter
jge
push
mov
pushf
int
inc
out
mov
stos
mov
jl
or
sbb
fdivrl
pop
cli
mov
pop
xor
xor
mov
out
jl
shl
dec
ret
xchg
add
add
or
cmpsb
push
jmp
xor
iret
popf
inc
dec
ljmp
push
xor
push
repnz
push
jl
cld
dec
xchg
stos
push
add
xor
or
test
xchg
mov
pop
or
inc
flds
div
add
pop
filds
mov
sbb
pushf
loop
pusha
or
lret
leave
mov
jae
push
shl
xchg
imul
insl
icebp
jl
sbb
push
rclb
aaa
in
add
xchg
sbb
ret
lock
pop
mov
dec
adc
imul
and
sti
repz
adc
ss
xchg
rorl
stc
popf
es
jle
cmc
test
xor
mov
mull
dec
xchg
jg
push
dec
push
mov
loop
mov
adc
test
in
lret
and
push
jns
push
add
push
orl
push
xchg
mov
inc
inc
push
push
jae
shrl
cmpl
or
push
pushf
lahf
jb
jmp
cmpsb
inc
mov
fwait
out
add
cmpb
pop
in
lahf
imul
sbb
inc
inc
outsl
icebp
pop
dec
lea
mov
and
xor
aaa
aas
loop
sti
js
test
call
call
movsl
cmp
jecxz
cwtl
lahf
push
icebp
sbb
pop
cmpl
mov
push
xchg
or
mov
icebp
mov
cmp
adc
lods
dec
pop
aam
scas
mov
sahf
scas
add
imul
dec
in
adc
sub
sbb
dec
jae
cld
es
call
loope
ss
inc
or
push
adc
cmpsb
or
inc
ds
inc
push
jg
xchg
in
adc
push
frstor
test
addr16
or
cltd
xor
imul
lods
pop
sti
pushf
dec
mov
testl
dec
aam
sub
jno
inc
jae
inc
mov
shll
jo
andl
daa
outsl
out
and
cmpsl
mov
mov
push
push
ror
out
loopne
insl
dec
add
je
xchg
loop
and
fdivl
mull
fs
xchg
sub
scas
push
inc
inc
push
mov
aas
test
ret
rclb
sub
adc
add
mov
ret
into
cmp
addb
mov
mov
mov
pop
les
xchg
int3
add
fsubrl
dec
gs
sub
aaa
aas
or
push
add
dec
rcrl
out
lahf
and
fstl
sti
jecxz
sar
mov
add
push
arpl
add
into
xchg
cmc
mov
cli
insb
out
pop
int3
fstl
sub
push
ret
cli
daa
dec
sbb
dec
mov
jmp
and
adc
mov
rcll
mov
test
dec
jnp
test
xlat
fsqrt
mov
fists
sbb
dec
bound
jnp
or
call
mov
adc
scas
out
test
jae
cmp
imul
hlt
or
daa
push
rcll
mov
arpl
or
gs
lret
dec
lcall
icebp
std
fucomi
mov
mov
ret
shl
xor
add
insl
jmp
mov
mov
push
repnz
adc
sbb
lds
add
jl
jecxz
dec
jp
lock
pop
pop
lret
and
jne
sbb
sbb
out
cs
lret
aaa
sbbl
inc
out
sbb
and
and
mov
jge
sub
subb
jb
or
mov
fidivs
dec
scas
cli
jno
inc
stos
lock
xor
push
jl
add
sbb
lea
adc
push
cmp
inc
pop
and
dec
and
pop
daa
cmp
iret
sti
rcr
js
pop
xlat
dec
les
ret
mov
adc
fdivrs
sbbb
cmp
ret
dec
notb
push
scas
xchg
pop
xchg
adc
addr16
xchg
xchg
jmp
sub
iret
sub
or
dec
push
lahf
lret
shll
and
xorl
ret
dec
push
lods
sub
xor
mov
stos
test
ret
outsb
lds
nop
imul
push
push
xchg
push
dec
fmull
jns
out
or
sbb
mov
jo
insl
and
mov
scas
jbe
and
cmp
jge
mov
sbbb
ficoms
fcomps
subb
or
inc
fdivl
fdivl
dec
mull
cli
leave
ret
push
les
sub
imul
add
pop
imull
shrb
cmpsb
jns
add
ds
fs
cmp
rclb
mov
sahf
outsl
or
push
add
js
ss
mov
fbstp
xchg
sub
fstpl
nop
cs
loop
int3
test
jp
add
int
jecxz
sbb
add
fmul
pop
push
jmp
jmp
js
dec
mov
or
xor
outsb
mov
jno
sbb
jbe
xchg
sbb
test
mov
enter
ja
push
cmp
xor
stos
repz
cs
les
and
je
pop
sbb
outsb
pop
popa
daa
nop
mov
clc
sub
gs
out
push
fiadds
pushf
fnstenv
pop
out
xchg
in
sbb
mov
not
je
inc
lods
ds
mov
xor
mov
sbb
lcall
shrl
adcl
xchg
pop
jecxz
rol
cmp
repnz
aas
nop
movsb
adc
outsl
fsubrp
push
cmp
sbb
in
cmp
xor
and
leave
jnp
or
ret
mov
stos
cmc
aam
dec
push
mov
ds
into
mov
push
mov
mov
fiaddl
fstl
frstor
pushf
enter
stos
mov
or
inc
or
pop
aam
in
insl
pop
lret
bnd
mov
cltd
pop
sub
test
or
ret
cmp
cwtl
jns
sbb
mov
fcomi
les
add
outsb
xor
add
xchg
push
fwait
mov
mov
push
test
addr16
es
aas
xchg
sbbb
arpl
mov
add
dec
pusha
into
xchg
mov
adc
mov
sub
xchg
mov
mov
mov
das
std
jge
or
add
xchg
ss
into
sub
lahf
sub
xchg
mov
ljmp
cwtl
lock
push
iret
cli
mov
jg
repnz
scas
ds
push
lods
pop
outsb
push
aad
and
jge
push
add
xor
mov
add
and
fsubrs
dec
mov
jmp
xor
cmpsb
divl
lods
int3
lock
pop
popf
or
xchg
imul
cmpsl
cmp
jbe
inc
and
add
jo
movsl
cltd
or
popl
jne
xchg
cs
mov
sub
push
add
xchg
sub
or
std
mov
mov
testl
test
sub
sbb
shr
mov
or
es
xchg
xor
lea
mov
hlt
mov
xchg
mov
in
daa
dec
xchg
push
clc
mov
fs
jno
lds
xor
lock
stc
mov
aas
gs
and
xchg
cmp
enter
sub
pop
xchg
inc
inc
mov
sbb
js
sbb
cmp
fidivs
mulb
daa
int3
push
jae
or
mov
je
and
mov
arpl
fwait
adc
lcall
imull
into
jmp
das
out
iret
and
or
push
or
sub
push
mov
mov
mov
sbb
dec
in
push
dec
push
ffreep
mov
pop
push
xchg
cmp
movsl
push
mov
mov
test
aad
adc
and
sbb
jl
xlat
sbb
mov
iret
pushl
lock
jb
in
mov
testl
repz
xchg
lds
sar
push
sbbb
jmp
jno
notb
dec
out
jae
add
or
mov
rolb
loope
ret
in
mov
je
inc
andl
lods
arpl
lret
arpl
lods
xchg
fidivrs
dec
shr
inc
ds
outsl
in
push
cli
clc
fdivr
xchg
fistps
pop
jne
mov
cld
loopne
repnz
adc
loop
int3
sbb
sbb
sbb
mov
fdivl
push
xchg
jnp
pop
mov
les
xor
push
aas
dec
and
or
outsb
cmp
push
push
ja
sub
fidivrs
lds
inc
call
mov
add
test
dec
sbb
mov
mov
xlat
stos
jmp
jbe
cmpsb
inc
movsb
jp
add
mov
xor
fsubl
dec
movsl
mov
dec
jecxz
pop
insw
sub
sub
xchg
or
xchg
out
mov
loope
outsb
mov
lret
pop
mov
cmp
cmp
dec
inc
sub
or
sti
lds
inc
bound
pop
aad
mov
pop
pop
test
sbb
fcoml
mov
enter
sbbb
or
dec
dec
sbb
test
or
mov
cli
xchg
outsl
sub
test
jns
xchg
sub
inc
xor
bound
adc
shll
inc
mov
lock
xor
fcomip
inc
test
add
mov
or
loopne
inc
std
out
inc
stc
aam
ret
jae
fcomp
popf
and
leave
sbb
and
pop
mov
lea
popa
sti
mov
push
cmc
adc
repz
imul
pushf
stos
push
leave
jbe
pop
ss
add
ffree
add
nop
lret
pop
xchg
adc
sub
subl
sub
nop
insb
fwait
insl
in
insl
rolb
mov
insl
pop
dec
movsl
cmpsb
mov
aas
or
mov
cmpsb
pop
sti
sbb
sub
add
xchg
and
sbb
pop
cld
bound
mov
xchg
inc
xor
ds
xchg
je
and
cwtl
jle
outsl
ja
inc
xchg
push
lods
jmp
jge
add
lea
jecxz
push
or
insb
testl
pop
loopne
push
dec
jl
push
mov
popa
outsb
mov
in
andl
or
and
notb
mov
iret
cmp
xlat
push
sbb
sub
pop
test
andl
cld
in
cmp
rolb
cmp
xlat
outsl
add
jge
mov
mov
mov
repz
aaa
aas
test
ds
iret
adc
aad
ds
adc
sub
ror
lcall
lds
fistps
mov
xchg
inc
addl
std
addr16
sub
xchg
dec
es
dec
cmp
cmp
shlb
lods
adc
lret
imul
push
inc
mov
movsl
adc
rolb
gs
outsl
fistl
push
movl
push
sahf
outsl
es
mov
fistl
movsl
nop
aad
sub
adc
cmp
insb
push
jg
cltd
daa
sbb
lock
adc
push
aas
or
inc
in
das
into
and
pop
popl
in
ret
daa
aaa
out
bound
xchg
cs
mov
jecxz
fldcw
mov
pusha
dec
test
inc
loop
lods
inc
int3
lahf
or
addl
lret
cmpsb
cld
sti
loope
fwait
sbb
cmp
and
mov
lcall
addr16
gs
iret
push
push
xchg
dec
movsb
push
cmp
out
xor
fsubl
xchg
mov
inc
cmp
pandn
scas
aas
in
fisubs
popf
pop
stos
mov
clc
cwtl
in
js
and
pop
inc
push
cmp
cmc
sbb
push
xorl
sarl
sbb
lods
mov
and
mov
sbb
inc
push
cs
mov
fwait
stc
icebp
and
mov
sbbl
and
out
cs
pop
mov
mov
sahf
in
adc
repz
xor
std
cmpsb
orl
jl
hlt
mov
mull
loop
pop
mov
movsb
movsb
and
add
push
jle
jmp
ljmp
loop
daa
jns
out
add
xor
imul
add
inc
divl
loope
pop
mov
add
scas
sub
popf
sbb
inc
mov
pop
mov
roll
jnp
jns
pop
pop
fistl
inc
adc
fidivl
mov
inc
dec
xor
cmp
in
xor
cld
push
push
add
xchg
cmp
in
rcrb
mov
add
pop
into
add
mov
test
lcall
lods
push
push
data16
dec
or
xchg
sbb
xchg
xor
test
cmp
xor
in
mov
popf
shll
ja
mov
mov
fsts
or
and
jno
lds
lods
pop
add
fdivrs
inc
not
aas
stc
call
int3
call
xor
loopne
dec
cmp
das
andb
xchg
pushf
mov
call
xor
stc
gs
push
lcall
in
jnp
push
pop
mov
mov
dec
mov
pop
loope
push
cmc
ljmp
shr
pop
xchg
fwait
imul
test
jno
popa
jb
or
sub
jecxz
lock
add
popf
add
aad
enter
dec
loop
pop
shll
fs
lds
pop
test
fisttpl
arpl
scas
ds
movsl
cmc
shrb
loop
mov
aas
stos
adc
xchg
push
ret
adc
ljmp
or
sub
fbld
sub
xchg
jg
sub
push
mov
dec
dec
aad
cwtl
sar
test
cmp
mov
popf
cmc
or
mov
fsubl
cmp
in
push
loop,pt
inc
je
fsubl
dec
mov
dec
mov
xchg
js
dec
lock
lds
adc
jg
dec
push
aas
xchg
inc
call
or
lahf
xor
xchg
loope
outsl
push
lea
mov
cmp
daa
aaa
js
and
mov
fistps
in
mov
lret
xchg
dec
ss
rol
outsl
dec
popa
and
xor
pop
ret
xchg
cmpsb
mov
jb
fnsave
insb
test
xchg
xor
in
mov
mov
cmp
or
lcall
inc
xchg
push
test
xchg
lcall
sbb
imul
sahf
xchg
pusha
andb
rcll
sub
cmpl
push
mov
iret
sbb
in
leave
and
stos
test
pop
xor
mov
shlb
add
push
push
cmp
push
add
add
mov
sub
lods
test
lds
push
clc
cltd
dec
dec
push
addr16
popa
sub
nop
das
stos
lret
mov
inc
mov
push
jb
scas
adc
test
repz
lea
addr16
stos
or
mov
pop
in
push
rcrb
adc
jns
mov
dec
sbb
xchg
ret
je
or
inc
ror
loope
mov
repnz
push
mov
push
movsl
dec
inc
sbb
jp
or
test
bound
jg
fcmove
mov
and
push
ja
mov
and
popf
jl
stc
in
inc
test
roll
lods
mov
mov
adc
mov
mov
or
mov
sub
stc
push
and
clc
inc
pop
push
push
cmp
lods
mov
xchg
aas
add
iret
pop
cmp
mov
pop
and
sbbb
shrl
ljmp
arpl
sbb
aaa
jle
sub
and
lea
negb
or
jb
pop
repnz
pop
test
mov
add
adc
push
call
cltd
adc
cmp
sbb
xchg
push
xor
lahf
rclb
mov
mov
ret
cmp
push
stos
out
sbb
and
addl
into
nop
js
xor
lcall
out
lret
andb
aas
pop
es
ss
and
ret
sbb
sbb
pop
jne
shrb
fidivrs
fadds
cmp
sbb
lea
jb
add
xchg
in
xchg
mov
push
push
movsl
out
push
xchg
call
mov
imul
dec
pop
xor
flds
xchg
lods
inc
sbb
mov
movsl
xlat
jae
dec
and
les
popf
icebp
pop
js
daa
sbb
stc
sbb
sbb
loope
xchg
inc
popf
dec
dec
popa
mov
jp
clc
mov
cmp
cmpsl
pop
inc
inc
jmp
xchg
scas
pop
pop
push
and
adc
daa
insl
pop
xchg
and
flds
loop,pt
xchg
pop
mov
inc
enter
cmp
in
push
je
xchg
lret
das
es
pop
xlat
ljmp
ret
add
enter
ja
mov
or
mov
sbb
cmp
adc
mov
push
mov
test
mov
push
and
stos
pushf
hlt
lcall
push
addr16
push
jo
test
addb
clc
insl
addr16
xor
mov
jo
sub
jp
pushf
sbb
inc
mov
add
cld
mov
and
add
lret
xchg
mov
mov
int
loope
and
add
icebp
cmp
inc
lea
add
jl
pop
mov
clc
xchg
inc
and
repnz
ljmp
cmpsl
jmp
fcmovb
or
mov
fisubl
or
out
jp
xor
cmp
shrl
out
fstpl
ret
cli
out
xor
loopne
adc
dec
mov
hlt
mov
jns
into
lea
mov
or
pop
xor
and
pop
and
xor
insl
data16
cmpsb
andb
fmull
lcall
mov
xor
ja
pop
xchg
pop
pop
test
cli
aad
cmpsl
pop
sbb
test
lds
cs
jmp
les
fists
ret
jae
xor
mov
arpl
outsl
insb
mov
stos
outsl
ret
ss
aad
call
repz
ret
mov
gs
lods
or
fptan
xor
imul
xor
xor
mov
cmp
mov
fidivrs
jg
test
push
inc
subb
jbe
jmp
sbb
add
lods
xor
scas
push
xchg
jns
push
xor
mov
sarb
sub
pop
aaa
lock
xchg
dec
and
stc
cmp
lods
rcrl
jmp
mov
pushl
rorl
in
daa
outsb
push
fdivrl
repz
jle
mov
cmp
shrb
test
or
fists
mov
shl
mov
clc
jmp
jecxz
jl
cli
sbb
sbb
nop
out
mov
int3
jnp
fldcw
arpl
arpl
testb
movl
stos
ret
pop
imul
xchg
xor
repz
jge
sahf
arpl
mov
mov
lcall
mov
push
cmp
add
repz
fndisi(8087
repz
in
pop
jnp
ror
cmpsl
icebp
xor
push
stos
dec
jno
sub
lods
cs
mov
and
popa
scas
sub
xchg
add
jne
mov
and
xor
add
mov
movsl
in
sahf
test
lcall
pop
push
cwtl
or
aas
out
xor
add
mov
fisttpl
push
push
xor
dec
push
lea
cmp
or
dec
inc
lods
mov
add
xchg
xor
add
mov
cmc
pop
push
xor
mov
pop
mov
jmp
mov
adc
loope
inc
xchg
popa
arpl
hlt
mov
and
push
lock
pop
mov
repnz
push
dec
mov
sub
movsl
imul
sbb
in
ret
outsb
imul
int3
sbb
cli
dec
or
cmp
mov
rorl
or
cmpsl
mov
pop
test
ljmp
jnp
xor
leave
sarl
lock
jbe
ljmp
mov
cmp
mulb
xor
insl
lods
cmp
fdivl
xor
xor
inc
sbb
sub
mov
aas
xor
xchg
imul
inc
aam
or
add
or
lods
imul
push
push
test
pop
add
inc
mov
jne
mov
or
xchg
mov
add
repnz
xchg
push
and
aad
popf
jb
das
mov
bound
mov
mov
fwait
cmp
sbb
mov
outsl
mov
dec
cli
cmp
loopne
sub
movl
pop
xlat
outsb
xchg
sahf
jg
xchg
mov
push
jbe
ja
xchg
pop
out
lahf
das
jae,pt
decb
adcb
notl
popa
cli
jns
fcompl
or
mov
aad
xadd
call
push
cld
sub
push
andps
test
push
int
sahf
xor
xor
xor
sub
popf
clc
sub
ficompl
loopne
xlat
popf
xlat
cwtl
das
loop
repnz
sarb
push
jae
jbe
push
dec
inc
jae
push
outsb
pop
stos
and
dec
addl
or
fdivs
mov
cwtl
and
push
out
test
add
in
cmp
addb
cwtl
mov
stos
and
insb
dec
jge
fsubs
adc
shrl
clc
and
mov
arpl
adc
and
pop
pop
jg
in
push
mov
dec
pop
shll
ficoml
lret
or
and
cld
mov
es
pop
in
sbbl
jl
adc
shr
xor
cmp
or
repnz
repz
push
inc
loop
mov
stos
mov
jno
test
aaa
mov
fidivrl
addr16
mov
aam
push
fcoml
and
es
shll
in
fisubl
jp
test
rcr
icebp
lods
popf
mov
mov
int
in
in
xchg
adc
inc
negb
into
sub
adc
fsubs
sub
sub
mov
test
pop
daa
insl
lahf
dec
push
jb
test
xchg
orl
jl
mov
aas
adc
aaa
dec
and
ja
lock
aaa
les
das
hlt
mov
shlb
dec
sub
adc
lret
aad
dec
cmp
sti
lret
mov
out
or
cmp
dec
adc
imul
pusha
rcrl
test
push
fldcw
pop
pop
ja
repnz
mov
push
add
mov
shr
or
sub
xchg
ja
subb
mov
icebp
stc
jge
aas
popa
int
and
enter
jnp
popa
fwait
pop
xchg
jecxz
inc
pop
test
rol
int3
inc
xchg
mov
mov
pop
gs
clc
mov
sarl
xchg
out
mov
fadds
adc
sub
dec
mov
aaa
lds
cmp
mov
cli
shll
nop
push
dec
xchg
and
add
fimuls
sub
mov
leave
xchg
iret
sbb
push
dec
sbb
js
insb
jp
stos
dec
imul
out
fcomip
inc
js
idivb
hlt
out
mov
pop
inc
lock
movsb
jbe
lods
popa
enter
pop
mov
mov
scas
mov
fcmovne
insl
pop
fstl
lcall
pushf
mov
pop
fcomi
gs
insl
jnp
in
jecxz
nop
movb
add
mov
pop
sub
daa
mov
sti
mov
xchg
test
mov
add
mov
pusha
lret
mov
lret
cmpsb
sbb
stos
pop
xor
xor
mov
xchg
repnz
dec
cli
ss
push
jo
jge
notl
mov
dec
jnp
jle
fidivl
jecxz
ror
sbb
sbb
mov
xchg
add
icebp
ret
enter
mov
outsb
clc
jle
sub
or
out
fwait
sarl
pop
loope
jmp
push
mov
xor
and
mov
nop
mov
cmp
mov
and
inc
xlat
dec
jecxz
repnz
into
pop
adc
scas
test
xchg
jb
aas
fistl
in
sbb
aas
mov
mov
int3
call
fisttpl
clc
push
imul
lcall
sub
test
push
enter
aad
xor
jns
fnstenv
dec
jmp
mov
mov
push
xor
xor
ja
dec
mov
cmp
sub
sub
mov
fcomps
mov
dec
in
ficomps
lcall
or
sbb
inc
push
test
sub
mov
push
gs
xor
scas
jbe
jne
shrl
fstps
jl
xchg
xchg
mov
inc
pusha
or
inc
jmp
in
xchg
xchg
imul
and
jae
outsb
out
pop
dec
aas
insb
xchg
outsl
popl
out
jbe
out
and
jno
mov
sbb
adc
jl
or
lcall
adc
psubsb
dec
xchg
fildll
lock
dec
pop
jb
aaa
xor
test
inc
cmpsl
setb
fwait
sti
mov
imul
push
mov
test
push
dec
pop
ds
push
or
sub
push
jle
xchg
xchg
jge
fs
stc
stos
cmpsl
loopne
jecxz
shlb
lea
andb
sbb
lds
cltd
inc
inc
dec
adc
jge
idivb
xchg
cwtl
cltd
in
fabs
repnz
sub
inc
inc
idivl
add
dec
push
push
test
loop
push
pop
fstl
push
stos
mov
imul
add
jne
adc
push
sub
add
lods
testb
mov
scas
mov
sbb
hlt
or
ljmp
jbe
pop
cmc
je
dec
mov
push
pop
sub
gs
or
xorl
ficomps
or
mov
mov
mov
testb
test
mov
sbb
xor
pop
sarl
into
lock
daa
and
in
jb
shrb
adc
bound
int
mulb
addl
sbb
loope
ret
andl
mov
cld
mov
stos
dec
loopne
xchg
clc
add
fsubrs
xor
mov
loopne
xchg
jg
push
dec
iret
fstpl
call
sub
xor
jb
fwait
xchg
dec
pop
lret
and
sub
mov
mov
xor
adc
and
adc
or
fldl
xchg
mov
inc
lock
icebp
sub
cmpsl
inc
fldcw
cmc
adc
mov
and
mov
xchg
dec
sbb
popf
and
mov
arpl
cmp
orb
jmp
bound
and
test
pop
les
popa
lods
dec
mov
xor
pushf
inc
and
pop
in
test
cmpsl
xchg
sbb
lds
clc
dec
scas
test
jns
mov
push
outsb
sub
movsl
das
mov
imul
dec
push
lock
cld
ret
mov
cmp
mov
mov
dec
mov
je
ret
into
fnstsw
ret
popf
pop
out
lock
jge
mov
jg
xchg
inc
mov
push
lret
dec
cmp
adc
inc
aas
jmp
xchg
int3
ljmp
daa
dec
pop
mov
lock
in
and
mov
xchg
inc
pop
xchg
aaa
push
mov
xor
add
fldt
jmp
inc
test
adc
call
add
aas
ret
fisubrl
ss
jae
pop
sbb
inc
adc
adc
push
push
mov
movsl
sub
out
orl
xchg
xor
fildll
in
xor
cmp
movl
aad
dec
mov
rcrb
loop
or
fucomi
push
sbb
push
insb
clc
popa
adc
or
push
push
and
xor
cmp
xchg
cmp
mov
fdivs
add
popa
ja
xchg
sub
cmp
pop
ljmp
mov
movsb
outsl
je
movsb
rol
pop
mov
add
mov
in
loop
pop
sub
movsl
cmp
and
adc
sbb
xacquire
cld
lret
push
and
lock
inc
dec
push
push
mov
xchg
adc
pusha
xor
fistps
jecxz
adc
icebp
lods
aaa
push
add
and
jecxz
pop
inc
enter
fdivrl
ret
scas
fistps
in
scas
loopne
cld
stos
outsb
pop
les
nop
mov
fstp
sub
dec
lcall
jne,pn
or
push
xchg
insb
xchg
xchg
loope
mov
and
sub
out
lahf
and
imul
nop
jno
push
inc
ret
cmp
stc
insb
mov
pop
mov
andb
sub
or
pop
in
sbb
xchg
add
push
jle
out
add
movsl
cmp
cli
sub
test
cmp
push
pushf
push
pop
pop
repnz
mov
dec
push
cltd
sbb
push
stc
mov
push
push
pop
push
enter
not
mov
or
mov
push
insl
mov
jmp
or
cs
xor
mov
adc
popf
mov
mov
push
push
push
pop
test
or
xor
or
xor
test
js
decl
xor
shlb
ret
xchg
sub
pop
pop
repz
incb
nop
xchg
jno
lds
in
xchg
and
xchg
pop
imul
or
pop
adc
ss
hlt
mov
loope
fistl
lea
xor
mov
fistpll
push
xchg
pop
stos
addr16
xor
jl
cli
and
lods
adc
or
daa
popf
pop
cmp
add
jnp
dec
cmp
push
mov
in
xchg
enter
xchg
mov
ss
push
aam
add
out
mov
adc
dec
ja
adc
inc
bound
decb
inc
scas
je
inc
mov
imul
sti
sub
nop
sub
aad
pop
push
in
fcomps
fildll
iret
shlb
and
jmp
dec
lea
lcall
lods
iret
add
ret
dec
aas
out
outsl
push
or
jo
pop
inc
mov
decl
repnz
in
jl
add
mov
xor
mov
mov
ret
add
shl
push
test
lods
mov
add
jecxz
jecxz
add
cmpsl
sub
mov
mov
cmp
cld
adc
push
mov
fisttpl
ljmp
scas
test
cmp
mov
mov
popf
push
pop
mov
xchg
ja
cmp
fbld
dec
dec
xchg
ret
sbb
xchg
xchg
lahf
pop
cmp
mov
std
mov
fbld
outsb
xchg
push
ret
mov
push
mov
add
into
inc
sub
and
add
jp
shll
sahf
ja
in
ret
out
mov
call
mov
stc
push
mov
lods
jae
cmc
repnz
adc
xchg
add
jno,pn
pop
ficoms
jnp
mov
mov
stos
aas
and
loope
dec
int3
cmp
mov
xor
and
pop
addl
xchg
out
and
test
roll
iret
sahf
shrl
sub
xchg
pop
dec
add
outsb
xchg
pop
imull
stc
jns
jmp
pop
fcmovnu
jns
sub
or
push
dec
in
and
ret
ds
out
icebp
cmpsl
add
dec
inc
dec
in
adc
inc
jb
addr16
push
loop
fadds
lret
in
shr
popf
xchg
mov
movsb
mov
aad
jno
xchg
lahf
leave
mov
ds
xor
xchg
ret
or
lahf
mov
and
cli
sbb
dec
bound
push
and
cwtl
xchg
fstpl
dec
pop
xor
mov
mov
insl
jecxz
or
lea
test
stos
rcl
outsl
in
push
rcrl
pop
or
je
ss
aam
mov
dec
or
cmp
es
dec
adc
sbb
loop
and
lods
push
xlat
pop
inc
enter
aad
or
lds
arpl
insl
inc
lcall
jae
pop
dec
dec
out
cs
adc
pop
add
xchg
jg
jl
insb
dec
leave
aam
sub
shll
dec
push
xor
mov
ss
enter
xchg
and
inc
test
pop
in
push
movsl
mov
jbe
push
fisttps
in
inc
shrl
jnp
or
int
push
add
or
xchg
xor
cmp
jmp
dec
popa
divl
xchg
xor
pop
jb
ss
lock
movsb
lock
loopne
mov
popf
lock
sbb
fiadds
pop
push
add
bnd
adc
cmp
in
and
xor
jns
dec
test
dec
sbb
xor
or
cmp
inc
jo
fists
dec
jecxz
pop
dec
rcrb
xchg
daa
decl
stos
xchg
fistl
jge
addr16
cwtl
jne
sbb
mov
fcmovnbe
jns
sub
out
scas
jl
xchg
or
mov
insb
cmp
cmp
adc
or
mov
mov
out
xorl
es
call
dec
iret
jae
xlat
xchg
adc
fsubl
xchg
scas
paddw
and
cwtl
leave
inc
push
sbb
dec
sub
popf
scas
xchg
insl
psrad
scas
xchg
sub
jnp
bound
mov
jle
add
arpl
sub
icebp
dec
xchg
loopne
add
xor
mov
mov
icebp
cs
sbb
jp
imul
mov
jp
ret
and
lea
xor
movsl
mov
push
test
xchg
push
adc
lods
movsl
ljmp
push
subb
rolb
xchg
push
add
cmpsb
jnp
pop
sbb
xchg
sbb
in
jle
jg
aam
xchg
jg
mov
mov
out
subl
lds
loop
mov
adc
lea
insl
nop
and
push
xor
mov
jnp
arpl
push
ret
pop
sub
adc
xchg
jmp
lods
stos
call
sti
test
jecxz
sub
and
jbe
gs
push
std
test
adc
push
out
negb
outsl
mov
fsub
outsl
repz
ja
sbb
js
dec
in
mov
lcall
push
orl
and
iret
mov
jecxz
adc
sarb
jae
sub
stos
jne
push
dec
jbe
adc
jp
mov
or
insb
icebp
sti
cmc
mov
rolb
push
xchg
ret
lock
mov
adc
das
mov
fldenv
xor
xchg
popa
lret
sub
xor
aaa
and
inc
adc
xchg
fcmovu
ss
cmp
push
jo
xor
push
xchg
mov
mov
das
rclb
dec
inc
lcall
mov
inc
mov
push
repz
add
push
js
testb
jle
js
mov
xchg
add
push
adc
mov
aas
jle
push
sub
in
out
les
pop
push
notb
cmpsb
es
mov
faddl
mov
bound
add
sbb
ret
stos
cli
lock
pop
scas
push
xchg
sbb
gs
inc
inc
out
add
insb
inc
mov
add
sbb
popa
adc
int3
sbb
out
inc
dec
mov
jmp
push
cmp
mov
mov
mov
inc
outsb
popf
pop
enter
lret
pop
stos
cmp
jo
pop
pop
xchg
and
mov
mov
in
cmc
rolb
xor
lock
mov
dec
push
and
ss
ret
int3
int
pop
in
stos
mov
aad
dec
popf
push
xchg
ret
loope
insl
cmp
ljmp
aam
mov
rcll
insb
sbb
push
mov
movsl
shll
jmp
dec
lods
jne
sub
push
xchg
dec
xchg
outsb
inc
xchg
mov
mulb
mov
push
adc
mov
push
popf
mov
pop
pushf
xchg
inc
mov
out
decb
popf
mov
and
dec
adc
imul
mov
daa
or
insl
sti
out
xlat
adc
jge
popf
xor
adc
sbb
sti
inc
dec
adc
xor
inc
and
push
stos
pop
push
mov
xchg
cmp
mov
push
jne
cmp
push
ja
enter
pop
scas
aas
cli
repz
enter
in
sub
lcall
int3
pop
into
std
xchg
cld
inc
pop
sub
lret
sub
dec
lods
int3
pushf
mov
lahf
xchg
pop
ret
jnp
xchg
jp
mov
mov
mov
sbb
sub
xor
out
jno
fwait
sub
fsubrl
mov
dec
cmc
aaa
loop
sub
mov
mov
iret
sbb
mov
mov
cmpl
imul
lahf
mov
sub
pop
xchg
cmp
lea
fnstcw
and
dec
inc
cmp
add
stc
jecxz
in
mov
pop
out
jl
or
fistpl
pop
xchg
cmp
pop
cltd
or
cmc
fiadds
dec
lods
nop
inc
jle
mov
mov
daa
lea
xchg
pop
mov
lret
shrb
and
push
cmp
jge
fld1
cwtl
std
test
inc
mov
pop
mov
fisttpll
pop
xchg
fcompl
int
loope
test
cs
mov
sbb
xlat
arpl
imul
imul
imul
jo
sub
xor
mov
mov
cmpsb
lock
std
inc
jo
and
sbb
arpl
adcb
bound
fimuls
mov
dec
xor
jb
in
mov
out
mov
inc
add
pop
pop
rcrb
mov
mov
xchg
popa
push
add
mov
outsb
mov
bound
and
xchg
adc
and
aad
lret
sti
xchg
xchg
dec
push
ds
push
les
cmpsb
repnz
loopne
aas
mov
xlat
mov
sub
mull
leave
inc
sub
adc
fdivl
inc
jecxz
push
dec
pop
jae
xchg
xor
inc
or
adc
sbb
pop
bound
cltd
mov
lods
and
dec
js
out
aas
inc
xlat
ret
in
or
fs
mov
ja
mov
out
int3
sub
adc
loope
push
in
xor
mov
mov
push
nop
pop
andl
stos
icebp
sbb
leave
cmovle
sub
and
insl
sar
sub
mov
and
lods
add
sbb
ss
and
mov
mov
insb
and
clc
push
aam
clc
rorl
add
testl
dec
push
ja
dec
mov
dec
pop
divb
ret
addl
cmp
pop
adc
xchg
or
ret
and
sahf
fidivrl
shl
jge
mov
cmp
ljmp
test
call
scas
stc
sarl
pop
aad
lods
jecxz
sbb
outsb
pop
pop
mov
fwait
cwtl
lock
or
ror
das
jbe
outsb
and
int3
incb
icebp
inc
loop
imul
fwait
push
nop
mov
push
and
push
cmpsb
pushf
cltd
ficoms
pop
dec
pop
fwait
adc
sbb
insb
xchg
cmpsb
.byte
cwtl
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
inc
add
sub
add
mov
add
addb
add
add
add
enter
sbb
or
and
add
add
add
lock
addb
add
add
add
or
add
in
cld
or
xor
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
in
popa
jb
xchg
shl
arpl
mov
adc
pop
loope
sub
mov
push
gs
jge
mov
bsf
rcll
adc
adc
mov
es
popl
and
test
jo
xchg
xchg
push
fdivrs
iret
or
clc
jns
call
daa
popf
hlt
loop
jb
cmpsl
outsb
pop
or
xchg
lea
insl
scas
and
aam
ficompl
outsl
bound
loopne
xorl
sub
test
sub
dec
or
popf
cmp
push
pop
lahf
xor
fidivrs
out
andb
mov
rorl
stos
and
pop
mov
xchg
mov
pop
mov
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
xchg
popf
adc
jbe
push
push
pop
pop
pop
jmp
adc
push
das
cmp
sbb
shrb
add
or
add
daa
aam
jb
inc
jns
pop
insb
xor
add
jmp
call
jmp
sbb
pop
pop
mov
xor
mov
sub
add
mov
mov
call
cld
test
or
add
addl
jle
sub
mov
push
mov
pop
pop
sub
jmp
cmp
dec
loope
hlt
sbb
add
add
jne
mov
jmp
js
mov
and
inc
push
nop
mov
lret
call
cmpsl
push
std
repnz
sar
lahf
in
mov
fcoms
test
mov
pop
pop
jmp
fstl
and
sahf
jg
xchg
clc
adcl
inc
add
call
mov
mov
adc
test
dec
add
orl
icebp
sbb
clc
cmpl
inc
add
les
in
cmp
movsl
leave
lret
out
add
dec
mov
in
sbb
pop
adc
rcr
dec
jle
scas
std
mov
xor
loope
out
sbb
inc
mov
sbb
inc
add
jle
dec
adc
pop
ret
mov
std
test
andl
add
lret
into
pop
outsb
insb
cmp
hlt
push
push
xchg
xorl
fldcw
add
mov
push
xor
jns
pop
arpl
ss
scas
and
mov
int3
fwait
leave
mov
sub
jle
dec
int
into
je
mov
push
xchg
mov
cs
js
pushw
jmp
aam
imul
test
adc
sbb
pop
cmp
stos
add
mov
sti
cs
mov
push
loopne
ja
std
aad
fimull
divl
dec
sbb
icebp
push
xchg
mov
pop
xchg
dec
xor
data16
push
xchg
icebp
inc
cmp
icebp
push
xchg
imul
ljmp
add
mov
shrb
fwait
mov
out
mov
mov
repz
ss
enter
sbb
dec
pop
jle
cmpsb
shll
jno
dec
aam
loopne
loopne
mov
and
xor
or
ds
sbb
test
movsb
lea
out
xor
das
sbb
cli
hlt
clc
push
test
daa
test
mov
loopne
stos
mov
jmp
or
in
insl
adc
ds
stos
lea
push
lret
lret
lahf
pop
shl
mov
fistpll
jecxz
mov
repz
dec
jno
xchg
lret
adc
shl
test
sarl
push
add
add
icebp
cmp
cmp
jo
gs
outsb
out
lret
push
dec
or
ds
or
test
jno
jbe
in
cmp
loop
sbb
dec
outsb
jmp
pop
push
ds
push
xchg
jl
mov
jl
mov
insl
fimuls
jno
push
xchg
jecxz,pn
push
sub
pusha
dec
ret
inc
es
push
and
dec
test
mov
sub
and
or
orb
mov
and
scas
movsl
sub
and
or
subb
push
xchg
push
xchg
push
popf
sbb
add
push
fs
rcrb
jnp
mov
pop
xchg
loope
clc
mov
xchg
dec
xchg
mov
jns
push
xchg
sbbb
push
dec
sub
push
dec
sbbb
js
call
inc
inc
xor
cmpsl
xchg
leave
sahf
ja
push
cwtl
or
push
jecxz
out
pop
xchg
xor
shrl
sub
adc
push
xchg
test
jl
push
addl
push
and
std
fsqrt
js
push
jecxz
jecxz
xchg
js
add
push
push
xchg
jecxz
xchg
push
xchg
aaa
test
and
sub
sbb
xchg
enter
mov
dec
jp
fnstcw
jnp
push
jecxz
and
mov
mov
or
pusha
dec
push
mov
jl
sahf
mov
or
arpl
fwait
not
les
out
pop
xchg
and
mov
push
xchg
int3
outsb
xchg
mov
jecxz
iret
fnstcw
jnp
push
jecxz
dec
and
cwtl
push
push
xchg
int3
sbb
push
mov
xchg
mov
sbb
jecxz
popa
mov
sub
or
push
cwtl
or
and
adc
lock
xor
xlat
orl
mov
or
jg
or
push
lds
mov
xchg
int3
lret
int3
or
fiaddl
mov
std
pop
pop
or
or
mov
daa
inc
clc
addr16
insl
rorl
loop
xchg
mov
add
daa
inc
clc
addr16
insl
shrl
pop
rolb
lods
xchg
dec
push
lods
mov
js
arpl
or
or
mov
jnp
xchg
xchg
jp
sbb
out
mov
xchg
lods
mov
js
arpl
or
or
mov
push
xor
mov
mov
mov
js
arpl
mov
lds
mov
add
repz
dec
ficompl
or
pop
rolb
lods
xchg
push
push
lods
mov
js
or
into
ret
or
mov
or
xchg
mov
mov
add
push
cmp
xlat
popf
andb
fstpl
push
orl
xchg
ds
push
and
es
fstpl
push
orl
shrl
push
popf
sahf
or
add
imul
or
push
or
push
xchg
xor
add
andl
enter
mov
shl
sti
push
inc
into
push
das
or
mov
ja
push
push
xchg
lock
or
and
lods
fcomp
test
jge
mov
pop
sti
xchg
inc
add
sub
xchg
sbb
mov
cli
or
push
sar
inc
xchg
and
inc
sbb
jne
lods
add
mov
push
mov
pop
test
pop
pop
mov
xchg
outsl
mov
and
ja
dec
fmuls
push
cmc
les
or
popf
insb
push
lea
hlt
test
jns
push
outsb
pop
push
daa
ljmp
mov
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
pop
xchg
inc
xchg
push
xchg
push
xchg
mov
xchg
push
xchg
push
or
push
xchg
push
xchg
push
xchg
push
xchg
movb
jp
and
movsb
aas
xchg
mov
xor
andb
push
lods
mov
mov
pop
test
mov
jne
sub
pusha
lods
mov
pop
mov
pop
jnp
mov
ret
adc
hlt
loopne
loop
jne
nop
pop
cmpsl
out
cmp
push
or
out
scas
jg
in
mov
stos
mov
lods
dec
push
mov
xchg
jno
jp
fdivrs
pop
ds
int
sub
cli
push
jnp
mov
mov
fnstenv
pop
jae
sarb
push
mov
ljmp
cmp
insb
xchg
fdivl
add
outsb
xor
add
and
scas
jp
push
ljmp
mov
fmull
das
dec
inc
xor
sub
mov
lods
sub
adc
cld
ret
pop
cmp
notb
adc
test
roll
xchg
inc
inc
fcom
jae
xor
test
ja
cltd
inc
push
cltd
jns
inc
in
outsb
push
mov
lds
in
jae
stos
inc
fchs
adc
popf
xchg
xorl
clc
shll
xchg
test
cwtl
jno
roll
push
adc
in
imull
adc
mov
jo
mov
xor
push
dec
dec
inc
test
pop
dec
sub
add
jns
sbb
cmp
xchg
out
imul
mov
push
mov
mov
scas
fnstenv
mov
pop
ds
mov
movsl
stos
fisubl
sub
scas
loope
and
aas
inc
mov
call
movsl
inc
and
jl
sub
jg
call
mov
xor
push
adc
pop
xor
or
repz
or
outsb
lods
aad
mov
cmp
or
and
imull
jnp
mov
test
jbe
or
push
push
rclb
cltd
sti
and
adc
mov
dec
pop
adc
iret
xor
push
mov
fdivs
mov
xchg
pop
int3
cmp
outsb
aas
pop
adc
lds
push
pop
int3
and
data16
or
cmp
popa
daa
jmp
add
xor
adc
push
cmpb
cmp
pop
push
pop
mov
inc
push
pop
mov
push
mov
adc
andb
jbe
mov
pop
xchg
push
jmp
mov
mov
inc
cmpsb
push
pop
push
mull
dec
jle
mov
mov
cwtl
movsl
ret
and
cmpl
dec
and
jb
inc
shll
test
or
sbb
and
add
add
add
cld
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cld
or
hlt
sti
or
cwtl
cld
or
mov
or
movsl
cld
or
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
cld
or
add
add
fdivr
or
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
enter
mov
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
test
jne
out
add
outsl
mov
aas
xlat
in
lahf
dec
lcall
out
push
mov
call
into
xor
clc
jecxz
inc
in
jbe
stos
dec
jns
push
loope
sub
or
and
mov
sahf
loop
mov
scas
mov
loope
mov
pop
subl
cld
mov
jle
inc
cmp
push
in
adc
cmp
cli
xor
inc
out
cmp
push
sub
pop
je
mov
insl
ljmp
outsb
and
mov
sbb
imul
sbb
push
es
dec
ret
pop
add
fcmovnbe
mov
pop
in
aas
dec
fsub
cltd
repnz
add
ret
idivb
mov
ds
sbb
cmp
cld
sbb
cmpb
xchg
test
ss
cwtl
arpl
add
push
mov
pop
ror
jl
adc
add
popf
test
fimuls
int
outsl
leave
int3
xchg
out
test
mov
pop
loopne
mov
and
mov
xor
xchg
sub
aad
scas
adc
popa
sub
pusha
call
xchg
adc
mov
call
xchg
shufps
in
jge
fdivrs
fwait
mov
ud0
mov
out
stc
sub
pop
push
mov
shll
add
ss
mov
push
cmpl
scas
cmp
push
push
mov
enter
jg
cltd
repnz
xchg
cmp
mov
out
and
orb
movsl
loope
cmp
outsb
rorl
mov
push
in
ror
dec
mov
adc
leave
insb
lahf
out
dec
fcmovnbe
xchg
sbb
lods
xchg
call
jge
dec
cmp
mov
cwtl
sarl
push
pop
or
scas
cwtl
lods
cs
cld
sti
fwait
cmp
jle
and
imul
cmp
cmp
xchg
adc
call
mov
ds
pop
in
mov
cmp
jg
xor
hlt
call
inc
enter
aad
fldl
icebp
imul
jecxz
aam
popw
addr16
cwtl
xchg
andl
jno
mov
popa
nop
rolb
imul
pop
movsb
mov
inc
addl
pop
sub
push
ljmpw
test
pop
sub
iret
xlat
cmp
test
test
mov
add
mov
pop
cmp
test
mov
aas
arpl
imul
ret
pop
xor
in
pop
fsubrp
push
add
rorb
lret
shlb
repnz
mov
daa
sub
sub
pop
mov
pop
inc
addr16
dec
inc
fnstcw
test
or
or
imull
call
fwait
pop
ffreep
cmc
pop
xchg
mov
xchg
xor
cmc
dec
movl
mov
fsubp
lret
xchg
leave
or
adc
adc
jno
imul
outsl
ljmp
inc
mov
loope
jp
xor
cmpsl
lods
in
jg
inc
bound
rcrl
push
dec
in
dec
sub
enter
int3
into
sarb
js
xchg
or
testl
sbbb
jne
in
mov
sub
out
aas
dec
xor
sbb
les
lea
gs
dec
pop
call
stos
sti
test
xor
xchg
sub
dec
sbb
repnz
fisubrl
test
in
inc
test
sub
sahf
pop
lcall
and
orl
xor
aad
push
rol
mov
mov
add
push
or
femms
dec
sub
arpl
cmc
push
fs
es
add
dec
insl
pop
sbb
sbb
shll
ljmp
xchg
add
int
dec
andb
enter
les
xchg
jb
and
out
jle
mov
notl
pop
jge
fdivl
lods
inc
jge
xor
jnp
in
ffreep
dec
subb
lds
add
adc
cli
sbb
sbbl
pop
push
aam
pushl
xchg
in
in
cmpsb
push
xor
inc
mov
in
sub
adc
jecxz
leave
sub
mov
lods
icebp
jb
push
imulb
sub
push
jp
mov
rcrb
inc
stc
cli
mov
ss
adc
outsb
xor
aad
mov
dec
xchg
ds
xor
jo
cmp
imul
add
dec
or
fiadds
mov
pop
and
repz
fldenv
es
outsb
push
hlt
cld
hlt
rcr
push
pop
xor
sbb
inc
loop
mov
mov
into
pushf
popa
mov
dec
add
cwtl
cmp
jae,pt
sub
dec
adc
outsb
xchg
out
scas
inc
push
inc
add
rorl
or
dec
add
push
out
push
mov
xchg
insl
cmp
cli
out
pop
dec
test
int
jns
hlt
and
sbb
push
xchg
cmp
xchg
sub
rcrb
pop
xchg
add
mov
das
mov
loope
ret
loop
cltd
jns
sbb
sbb
xchg
adc
jl
lock
sbb
mov
movsb
xchg
mov
pop
int3
mov
mov
adc
add
dec
outsl
je
shr
in
inc
mov
fwait
mov
call
negb
imul
jbe
sbb
jg
adc
das
clc
outsb
or
adc
scas
hlt
xor
mov
xchg
repnz
stc
xor
cmp
jbe
mov
test
jb
xor
out
std
add
sub
mov
adc
ret
cmp
cmpsb
xchg
lcall
sbb
or
adc
mov
dec
test
je
adc
lods
xchg
sbb
fsubrs
hlt
adc
mov
iret
in
add
leave
mov
push
and
sub
xchg
into
shll
mov
test
adc
mov
rorb
xchg
jge
fadd
cltd
sbb
pop
sub
lea
add
test
inc
into
cs
into
in
lea
mov
data16
inc
fnstcw
movb
outsb
loope
repnz
mov
std
and
pop
ror
bnd
add
cmp
fistl
popf
pop
movsb
push
xchg
push
shrb
sti
lret
imul
std
xchg
jne
push
mov
inc
aad
cmp
cli
mov
or
inc
mov
cmp
jge
out
out
scas
lods
seto
push
ficompl
mov
mov
pusha
repnz
xlat
sbb
roll
lret
xorl
test
repnz
pop
mov
je
mov
mov
fwait
push
lret
and
out
mov
or
js
mov
push
shlb
mov
add
pop
sbb
enter
pop
adc
inc
mov
inc
sub
add
pop
cs
bound
and
fisttpl
adc
jge
jmp
jns
std
in
jg
xchg
mov
fldl
cwtl
mov
enter
xor
or
call
jno
dec
shr
add
mull
mov
cld
notl
jnp
add
jmp
shlb
push
iret
addr16
movsl
jbe
or
out
xorl
mov
popa
int
into
sbb
add
or
pop
aaa
mov
lea
fidivrl
mov
imul
repnz
add
add
cmpsb
flds
add
and
fdivl
mov
push
test
pop
sub
mov
clc
mov
scas
cmp
shl
mov
push
dec
icebp
sbb
test
test
sahf
sbb
cmp
sbb
adc
loope
xchg
enter
mov
mov
inc
shll
push
cmp
movsb
into
adc
lret
add
in
test
jge
xorl
icebp
das
scas
gs
test
xor
pop
mov
pop
mov
push
jno
adc
aad
das
lret
sti
cmp
adc
out
dec
push
mov
cmp
jmp
mov
imul
jp
sbb
pop
push
mov
jmp
jl
enter
sarb
lods
push
push
out
mov
insl
xor
xchg
xchg
jnp
pop
dec
mov
sub
test
lds
popf
dec
js
rolb
inc
outsb
mov
xchg
jmp
or
xor
lea
insl
push
cmpl
dec
in
loope
popa
data16
sbb
inc
push
jecxz
fimuls
out
das
data16
sub
mov
orb
ds
aaa
cmc
xor
xchg
mov
shll
scas
sub
jge
xlat
adc
xor
adc
ret
mov
mov
daa
sub
icebp
pop
repz
in
scas
mov
leave
xor
je
xor
call
sub
jmp
jecxz
xor
pop
das
rorb
popl
pop
mov
stos
xchg
jmp
dec
call
pop
pop
inc
pop
adc
andb
mov
fadds
mov
lret
or
out
scas
add
inc
and
pop
daa
xor
sbb
sub
shrb
in
in
jns
movsl
outsl
stos
aad
push
insl
pop
mov
pop
enter
mov
dec
mov
sbb
