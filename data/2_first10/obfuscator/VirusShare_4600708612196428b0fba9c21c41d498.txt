push
call
ret
ret
adc
and
adc
outsl
and
in
loope
xor
shll
leave
mov
or
scas
dec
mov
mov
sbb
add
out
pop
or
xchg
outsl
mov
stc
movsl
call
push
pop
sbbb
xchg
xor
sub
lock
es
enter
mov
and
xor
mov
imul
sub
pushf
lahf
roll
dec
add
daa
cltd
mov
xor
cmp
call
add
and
xchg
pushf
adc
inc
test
iret
notb
es
mov
xchg
mov
and
or
and
inc
push
aad
and
jl
and
pusha
inc
mov
add
out
add
je
sbbl
dec
popa
and
push
jecxz
or
in
push
xorb
lcall
mov
iret
sbb
or
cmp
cmp
sub
and
shlb
jae
push
cwtl
ds
or
hlt
jb
jge
add
rclb
mov
or
jg
out
push
std
xor
dec
mov
push
rep
shll
mov
aad
sbb
mov
pop
out
cwtl
adc
daa
adc
icebp
fdiv
mov
ljmp
pushf
cmp
jbe
int3
fists
cmp
cmp
std
dec
xor
shl
xchg
add
mov
mov
xor
mov
enter
jge
adc
sbb
stos
xchg
inc
subl
leave
adc
or
xchg
xor
lcall
sub
div
sbb
sub
xchg
roll
jbe
test
lahf
das
jmp
loop
test
int3
cmovg
ret
push
mov
not
sti
sbb
aad
cmp
jno
dec
inc
shll
insb
test
jbe
mov
add
je
pusha
in
or
clc
xor
int
inc
int
jae
aad
and
mov
dec
lret
aaa
iret
ds
mov
imul
je
roll
dec
ret
cmp
adc
dec
or
xchg
into
push
sbb
add
add
mov
test
jne
xlat
dec
cmp
lock
xchg
mov
out
and
add
aam
lret
or
jge
or
pop
push
and
stc
aad
and
imul
pop
push
adc
sbb
movsl
mov
jp
cmp
xchg
loop
lahf
mov
add
fcoml
fsub
cmp
xlat
jle
ss
xor
pop
pop
sbb
or
sahf
shll
popf
mov
divl
lea
stc
adc
repnz
nop
dec
jo
mov
mov
jecxz
shr
sbb
mov
and
dec
sarl
aam
mov
and
je
dec
out
mov
add
int
jb
sahf
jecxz
mov
mov
or
pop
pcmpeqw
mov
js
mov
pop
lret
cmp
les
cmpb
jecxz
jp
push
push
jmp
sub
add
aaa
inc
nop
adc
xlat
push
aad
mov
mov
adc
cmc
cld
enter
add
mov
ljmp
add
mov
fscale
sbb
adc
sub
int
inc
js
pop
pop
sub
scas
dec
int3
imul
insb
mov
sbb
xchg
push
arpl
pop
push
jecxz
fildl
stos
je
mov
pop
int
mov
test
xor
testl
sub
xor
mov
pop
clc
js
mov
in
dec
stos
push
jo
imul
lea
fdivrp
mov
cmpsl
pop
fninit
cmc
sub
cmpsl
bound
ja
jl
cwtl
xchg
mov
xchg
in
xchg
pop
inc
sarb
pop
in
mov
inc
xor
push
inc
jns
dec
out
pop
fstpl
fiaddl
pushf
ds
inc
daa
dec
iret
xchg
fcomi
inc
mov
stos
ljmp
cmova
popa
and
push
ja
jno
in
rcr
or
add
jnp
xor
cmpsb
fwait
cltd
sbb
cld
enter
hlt
xor
jae
outsl
ret
push
xchg
xchg
mov
insl
mov
mov
push
jb
jmp
mov
sbb
out
push
push
jbe
xchg
pushf
mov
cwtl
lock
es
push
shrb
mov
mov
mov
cltd
lods
imul
mov
fsts
pop
inc
std
pop
sbb
xchg
dec
popa
push
mov
add
and
sbb
sbb
fstpl
pop
idivb
lods
inc
popa
stos
jp
mov
mov
leave
fs
decb
stos
add
ret
push
sub
leave
cmpsb
popf
mov
push
sbb
ret
les
xchg
iret
jno
xor
lds
sbb
movsb
push
enter
shrl
lea
dec
cmpb
push
mov
jmp
aad
or
pop
cmc
cmpsl
addr16
insl
cltd
fs
orl
shll
sbbl
push
jb
push
inc
fwait
test
pop
lcall
scas
stos
sbb
xlat
aad
cli
mov
sub
xchg
popf
pop
mov
dec
jge
aas
jbe
lret
sbb
jg
fiaddl
cmp
inc
fistl
rcr
jecxz
cmp
mov
jb
aaa
or
push
stos
lret
pop
movsl
testb
xchg
push
insb
sarl
add
in
in
adc
xchg
cmpsb
mov
inc
clc
std
or
pop
test
test
loop,pt
inc
mov
fistps
pop
jmp
mov
rolb
xchg
push
ds
sahf
xchg
daa
adc
fs
or
mov
lret
lods
call
stos
out
jl
push
cld
fst
or
or
movsb
cld
test
lods
pop
popa
incb
push
xchg
mov
std
xchg
fwait
xor
jne
jl
outsb
lret
rcr
or
push
sti
cli
pop
add
cmp
sarb
mov
subl
dec
addps
jg
iret
bound
bound
clc
faddl
mov
adc
mov
insb
inc
dec
cmc
lcall
inc
cmp
mov
fcoml
push
xor
inc
mov
clc
dec
dec
orl
mov
inc
mov
flds
pop
aam
xchg
ljmp
sarl
andb
or
xor
mov
outsb
outsl
cmp
jne
jle
mov
nop
pusha
and
cmpsl
adc
cmc
iret
scas
scas
push
jae
sub
xchg
in
rcr
sub
jnp
mov
stos
lods
lret
sbb
cli
push
xor
push
stos
mov
test
outsb
sbb
insb
push
sti
movsb
aam
sbb
inc
sub
push
imul
add
dec
sbb
icebp
pop
xchg
push
test
inc
.byte
.byte
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
mov
add
add
add
pushf
or
orb
add
or
orb
add
es
addb
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
js
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fadds
add
lods
popf
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
loopne
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
adc
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
add
add
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
jl
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
mov
add
pusha
cmpsl
cmp
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
cmp
add
add
add
add
add
add
inc
add
add
movsb
or
rolb
add
add
add
dec
add
add
add
cmp
add
add
add
add
add
add
je
add
mov
or
in
add
or
inc
add
inc
add
dec
add
inc
add
add
add
cmp
add
add
add
add
add
add
scas
add
add
add
add
add
inc
add
dec
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
out
add
push
add
add
add
inc
add
inc
add
add
add
add
cmp
add
add
add
add
add
add
sbb
add
cmp
add
add
inc
add
inc
add
dec
add
inc
add
add
add
cmp
add
add
add
add
add
add
push
add
add
scas
or
rolb
add
add
inc
add
dec
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
fsubrs
add
add
inc
add
dec
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
mov
add
add
add
add
inc
add
inc
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
repnz
add
or
rolb
add
add
add
inc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
es
add
or
rolb
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
add
test
add
js
or
test
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
rolb
and
add
inc
add
inc
add
inc
add
inc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cld
add
add
add
add
cmp
add
add
add
sbb
jmp
add
add
add
add
sub
add
push
push
add
jl
add
movsb
push
add
int3
push
add
hlt
push
add
sbb
add
inc
pop
add
insb
pop
add
xchg
pop
add
mov
sldt
in
add
or
add
xor
add
pop
or
cmp
add
test
add
lods
or
cmp
add
aam
add
cld
or
cmp
add
and
add
dec
or
addb
add
je
add
pusha
cmpsl
cmp
add
add
add
add
add
add
hlt
add
or
in
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
loopne
or
in
add
add
cmp
add
add
add
add
add
add
inc
push
add
int3
leave
or
js
add
pusha
cmpsl
cmp
add
add
add
add
add
add
insb
push
add
inc
int
add
add
add
cmp
add
add
add
add
add
add
xchg
push
add
cld
rorb
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
rorl
add
add
cmp
add
add
add
add
add
add
in
add
or
or
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
or
add
adc
or
enter
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
fcomp
or
call
add
add
cmp
add
add
add
add
add
add
pop
pop
add
rcr
add
add
add
cmp
add
add
add
add
add
add
test
add
mov
add
add
cmp
add
add
add
add
add
add
lods
pop
add
je
or
faddl
add
pusha
cmpsl
cmp
add
add
add
add
add
add
aam
add
push
loop
add
add
add
cmp
add
add
add
add
add
add
cld
pop
add
and
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
call
add
add
cmp
add
add
add
add
add
add
dec
or
add
jmp
add
pusha
cmpsl
cmp
add
add
add
add
add
add
je
add
js
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pushf
or
add
icebp
or
sbb
add
cmp
add
add
add
add
add
add
les
add
inc
cmc
or
cmp
add
pusha
cmpsl
cmp
add
add
add
add
add
add
in
or
add
or
in
add
add
cmp
add
add
add
add
add
add
adc
add
testl
add
cmp
add
add
add
add
add
add
cmp
add
mov
or
mov
add
add
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
rolb
or
les
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
int3
or
sub
add
sub
add
push
or
sbbb
inc
add
add
inc
add
dec
add
inc
add
inc
add
push
add
add
add
cmp
add
add
add
add
add
add
add
add
xchg
add
add
add
add
inc
add
push
add
dec
add
push
add
inc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
add
add
push
add
add
add
inc
add
inc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
push
add
dec
add
inc
add
inc
add
insl
add
add
add
add
mov
add
test
or
addb
add
cmp
add
add
add
pop
add
jg
add
or
cmp
add
or
cmp
add
pop
or
cmp
add
xchg
add
scas
or
cmp
add
or
cmp
add
decb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
or
add
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
jbe
add
push
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sahf
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
or
add
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
out
or
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
ds
adcb
orb
dec
add
dec
add
dec
add
dec
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
leave
or
adc
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
add
add
add
and
sbb
add
add
test
add
add
pop
leave
or
movsb
leave
or
nop
cli
push
icebp
sbb
xor
xor
add
or
pop
pop
xor
cmp
sahf
ljmp
mov
add
or
sub
sbb
add
call
xor
fwait
xor
add
bound
paddsw
stc
push
repnz
sub
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
fimuls
mov
add
or
mov
movsl
pop
cwtl
dec
les
and
cmpsl
pop
jg
in
mov
cmc
lret
xchg
or
xchg
pop
sbb
jno
incb
sub
push
sub
fnstenv
subl
cmp
or
dec
and
mov
inc
and
cli
pop
xchg
cli
pop
jns
nop
sarl
out
cltd
cmpsb
inc
enter
sbb
sub
mov
pop
mov
dec
jle
popf
into
sbb
cmpb
inc
jmp
mov
iret
xchg
xor
inc
inc
ljmp
push
xchg
aad
sbb
test
xchg
cmc
out
xchg
xor
and
lcall
push
bound
cwtl
mov
or
dec
pop
push
insb
sub
sub
mov
push
adc
sbb
cmpsl
andl
and
lret
clc
cmp
pop
sub
enter
mov
and
push
sbb
fs
sub
dec
daa
movsb
mov
mov
mov
dec
cwtl
hlt
loopne
and
adc
push
push
out
andl
sbb
sahf
dec
and
mov
adc
jmp
icebp
xchg
push
pop
in
sarb
outsl
dec
adc
jne
stc
aas
pop
sbbb
mov
jmp
ja
out
sub
and
fdivr
out
xchg
push
xor
lods
aas
notl
sahf
clc
mov
ret
xchg
inc
jge
fwait
in
gs
jno
and
fisubrs
mov
in
scas
insb
pushf
ret
dec
inc
std
xchg
das
je
push
dec
inc
jne
jp
mov
xchg
clc
imul
xchg
mov
add
mov
into
cmp
icebp
lea
enter
je
pop
dec
cmp
push
pop
inc
popf
fldl
pushf
xchg
inc
xor
scas
mov
enter
testb
add
cmp
mov
adc
xor
inc
mov
shlb
sub
movl
test
les
push
fs
shrb
jb
call
sahf
jo
repz
jge
cmp
or
jg
adcb
or
ljmp
loopne
test
push
mov
mov
cmp
jno
icebp
xor
sub
xchg
push
loop
in
in
cs
mov
or
mov
movsl
and
sti
ljmp
add
cmp
enter
or
pop
adc
mov
pop
cmp
jg
iret
icebp
out
loopne
test
dec
in
test
cltd
rclb
aad
movsl
pop
cmp
es
mov
push
arpl
js
inc
inc
add
push
andl
pop
or
pop
push
mov
add
adc
es
cmp
fsubr
add
rcrb
push
and
xchg
jno
cwtl
pop
jae
cld
mov
rorl
adc
gs
inc
lret
movsb
imulb
mov
rclb
std
cmp
cli
push
xor
out
xlat
pop
cmpl
sub
sbb
pop
outsb
pop
addl
aaa
mov
sahf
fmuls
mov
dec
add
dec
sbb
dec
aad
xchg
push
jo
and
xchg
mov
or
sub
push
xor
mov
xor
stc
mov
xchg
lods
mov
or
pushf
dec
jae
sahf
xchg
int
and
add
js
imul
and
mov
es
mov
jae
jno
xchg
pop
push
lea
ja
dec
or
inc
sub
stc
xor
push
xor
jmp
lea
push
pop
push
lret
dec
cld
fs
and
imul
iret
or
enter
sbb
ret
jle
icebp
pop
cmc
mov
or
ret
jo
jns
mov
push
fdivs
adc
xchg
sbb
sarl
int3
xchg
inc
cwtl
lret
leave
or
adc
popf
imul
jmp
sub
dec
push
push
jl
or
add
mov
jns
inc
and
pop
stc
lods
cwtl
enter
pop
pop
xchg
or
mov
push
pop
enter
xlat
roll
add
xor
dec
sbb
jl
std
mov
jg
mov
rolb
clc
flds
sti
fisubrs
push
movzwl
popa
dec
ss
mov
push
sbb
std
fbstp
js
xchg
sbb
test
iret
gs
rorb
clc
xor
cmp
testl
gs
push
push
mov
push
lds
mov
subl
test
or
xchg
popa
negl
pop
aaa
lret
mov
mov
sbbl
sbb
fwait
jns
or
pop
and
mov
mov
mov
fsubrs
inc
outsl
push
xor
scas
sub
popf
adc
xor
xor
sbb
leave
push
insb
lods
test
or
mov
xor
pop
push
mov
push
fwait
jb
sub
je
add
push
push
xchg
cmpsb
sub
or
pop
adc
jno
insb
jecxz
orl
jg
addr16
pop
cld
fildl
pop
xor
xchg
xor
dec
jmp
les
loopne
mov
jo
outsb
mov
lret
nop
xchg
fsubp
jb
jmp
add
arpl
jecxz
aam
jge
pop
js
hlt
or
cmp
pop
sahf
imul
out
rcll
aaa
mov
jae
inc
sbb
pop
xor
sub
fildll
mov
push
dec
jbe
sbb
leave
mov
loope
test
add
fs
in
sbbb
push
sbb
mov
mov
pop
rcrl
sbbb
repz
mov
push
or
xchg
inc
xchg
pushf
cld
or
jmp
mov
sub
sahf
mov
xlat
xchg
sub
jno
in
lahf
arpl
xor
mov
sbb
push
xchg
adc
lea
cmp
shl
or
mov
inc
lcall
out
sub
cld
int
jnp
pop
sub
int
pop
roll
gs
dec
int3
dec
push
mov
shlb
jl
lock
bound
popf
adc
add
cmp
mov
je
fisubrl
mov
leave
nop
pop
xor
add
sbb
jnp
or
into
mov
cld
push
repnz
movsl
mov
jp
arpl
test
xor
push
cmp
and
cmp
aaa
jge
lcall
cs
jb
lret
fmuls
sub
fsubl
jg
mov
xchg
jnp
ss
shlb
roll
inc
es
mov
lods
push
lret
pop
stos
cmp
in
jp
mov
das
shlb
cs
mov
adc
push
inc
lock
ficomps
bound
fadds
mov
jns
aad
pop
jno
mov
ret
cmc
mov
mov
divl
dec
dec
aam
fsub
in
inc
mov
cmc
out
stos
fldcw
xor
pop
pop
adc
adc
jno
clc
xor
icebp
xor
mov
and
ficoms
test
mov
dec
sub
stos
xor
adc
jl
jp
jecxz
insl
lret
roll
mov
sub
repnz
fisubs
xorl
fmull
mov
imul
daa
mov
insb
fcom
cmpsl
mov
adc
std
out
mov
popa
fsubrs
xor
mov
ljmp
lods
addl
inc
insb
loop
fs
mov
int3
and
mov
lret
xor
out
fmuls
xchg
inc
sub
push
mov
lds
pusha
std
and
inc
int
jae
jle
es
mov
fsubp
popa
dec
sub
inc
out
test
xchg
adc
iret
jg
jecxz
popa
or
jp
sbb
fimull
jne
inc
nop
sub
adc
lret
lock
pop
dec
sbbl
into
lcall
and
push
gs
inc
xor
cmp
cmp
movsl
fsubs
rcll
xchg
xchg
ret
lods
jecxz
cli
xor
and
test
iret
dec
out
inc
xor
inc
xorb
adcb
mov
and
test
push
push
hlt
or
add
popf
xor
scas
inc
ss
and
xchg
mov
or
add
shr
loop
and
in
arpl
xchg
adc
lret
cmpsl
jg
pop
or
adc
mov
ror
fistl
add
imul
aas
ljmp
sub
das
inc
fisubs
cmpsl
adc
xor
test
jbe
push
mov
push
outsb
adc
adc
subb
adc
ror
test
outsl
add
adc
sbb
and
rclb
or
loop
xchg
test
or
pushf
dec
mov
pop
and
loop
mov
repnz
mov
mov
cmpsb
push
test
mov
ret
sbb
shll
jg
test
mov
mov
std
pop
cmpsl
mov
stc
cmp
decb
mov
pop
push
push
push
fmuls
push
pop
scas
mov
mov
and
mov
pusha
mov
ret
adc
jo
inc
jle
lcall
sbb
add
in
clc
rcr
inc
mov
mov
in
les
mov
je
jbe
sbb
std
jle
add
sub
sbb
and
or
fs
jno
pop
test
icebp
adc
xor
andl
add
pop
and
mov
inc
rolb
rorb
rcrl
rolb
je
ljmp
stc
inc
xchg
mov
rclb
pop
cwtl
mov
mov
sub
stc
pop
xor
push
or
lret
push
out
jge
sub
inc
push
jmp
mov
adc
xor
add
das
mov
enter
pop
pop
xor
sub
loop
shrl
add
ficompl
ficoms
xor
aas
add
outsb
dec
packssdw
adc
push
pop
xchg
jg
or
and
aaa
mov
gs
sub
inc
lock
js
call
push
fsubrl
mov
je
je
push
sbb
aas
aas
pop
dec
mov
cmp
adc
or
xor
adc
fistps
lock
mov
loop
bound
das
push
imul
and
call
inc
mov
stos
mov
popa
lcall
leave
cmp
std
cmp
adc
push
sbb
cmpsl
test
xor
js
std
jge
xchg
cltd
aad
out
inc
ljmp
fcoml
addl
in
and
sub
outsl
push
inc
cmpsb
push
mov
jae
sbb
cmpsb
mov
loope
sub
mov
cmc
test
mov
mov
push
std
test
cmp
dec
mov
int
lock
mov
jbe
or
dec
sub
sub
or
lcall
and
loop
movsb
jg
add
xor
adc
fbstp
rclb
in
mov
incb
mov
movsl
sarb
and
pop
mov
sbb
loope
cmp
pop
daa
xchg
stc
cwtl
pusha
ljmp
cld
mov
stos
adc
mov
leave
ljmp
out
mov
push
scas
icebp
jns
sub
xchg
add
aaa
fcmovnu
test
mov
pop
inc
or
cmc
mov
iret
push
inc
mov
cmp
out
fisttpl
cmp
sahf
xor
pop
shl
int3
dec
hlt
sbb
ss
sbb
dec
lahf
jl
les
pop
in
cmc
popf
adc
pop
in
jmp
inc
mov
push
leave
cltd
dec
sbb
repnz
and
cmc
das
pop
xor
outsl
xor
or
inc
test
aas
outsl
lods
out
cltd
sbb
mov
sub
pop
mov
clc
sar
inc
sbbb
or
sbb
pop
lcall
jo
jmp
fnstcw
mov
iret
xchg
mov
leave
orl
jmp
xor
repz
sbb
fisubl
jns
sbb
or
xchg
sbb
and
pop
and
add
xchg
sub
out
mov
xchg
lods
lock
decl
mov
std
mov
mov
sbb
lock
es
out
repz
pop
loop
mov
adc
dec
and
jp
or
je
dec
test
mov
xor
leave
pop
cli
subl
hlt
pop
loope,pn
mov
iret
adc
stos
fistpl
shll
push
mov
addr16
scas
arpl
fsubrp
pop
add
and
cmp
cltd
fbstp
mov
pop
xchg
into
or
iret
aas
test
add
in
sbb
sbb
sub
mov
out
shll
cli
aaa
in
stos
lock
add
ret
mov
arpl
pop
movsl
push
pop
xchg
push
hlt
xchg
jo
xchg
push
fsubrl
push
andb
dec
xchg
scas
pop
movsl
cmp
inc
out
or
cmpsl
mov
mov
bound
in
lret
dec
cli
fwait
add
pop
jmp
inc
rorl
xchg
push
stos
pop
bound
ret
inc
inc
sbb
mov
inc
jb
mov
addr16
cmp
inc
xchg
cmpsb
sbb
sbb
lret
jmp
es
adc
mov
stos
dec
lea
sbb
fdivr
jns
shlb
roll
ret
adc
add
sbb
jp
mov
or
push
xor
and
fcoml
inc
mov
mov
cmp
sub
fwait
scas
pop
jmp
mov
or
pop
pop
mov
xor
adc
ljmp
jae
ds
dec
mov
adc
fstps
push
sub
pop
mov
xor
call
or
jo
mov
push
pop
mov
jle
xchg
mov
or
icebp
push
pop
cltd
pusha
vhsubpd
lods
adc
test
inc
cwtl
pop
hlt
std
dec
es
roll
fadds
sbb
adc
int
sbb
orl
into
push
jp
bound
movsb
stc
std
out
outsl
adc
dec
cmpsb
rep
mov
mov
loop
out
push
fnstcw
and
inc
or
adc
frstor
test
mov
test
inc
insb
fucomp
out
mov
cmp
daa
adc
lea
in
sbb
or
lretw
int
or
jns
and
xlat
jmp
rolb
ljmp
enter
je
mov
add
and
push
fsts
and
data16
pop
popa
pop
call
pop
lret
mov
popf
lea
xchg
in
das
testl
loope
xchg
imul
adc
pop
stc
cli
mov
std
sub
orl
jle
push
jmp
loopne
test
jne
outsl
push
pop
mov
cmpsb
lods
jl
stos
repnz
cs
lcall
pop
stc
dec
inc
push
lahf
test
mov
inc
mov
loop
gs
jo
inc
mov
faddl
xchg
sub
pop
cmp
sbb
mov
jnp,pn
jl
inc
mov
jno
sbb
add
cmp
fs
sahf
sbb
pop
fadds
push
test
or
in
jmp
mov
roll
jl
lahf
repnz
mov
mov
in
and
add
and
adc
cmpsb
outsl
adc
ljmp
hlt
and
or
mov
cmp
jo
adc
mov
lods
call
and
popf
aad
insb
mov
xchg
sub
jns
lcall
cmp
jmp
rorb
sbb
jmp
jb
mov
std
lea
cmp
sbbb
cld
dec
mov
xchg
sbb
in
clc
loopne
jp
cmc
blsfill
xor
or
fsubrl
lcall
adc
repz
pop
dec
mov
sarb
fidivl
xchg
pop
arpl
pop
dec
clc
and
scas
adcl
sahf
subl
iret
jp
pop
pop
sbb
sbb
mov
js
mov
pop
fsub
or
aas
pushl
or
dec
ds
push
sub
scas
xchg
in
pop
fimuls
in
ret
dec
mov
xchg
cmp
mov
jg
jae
je
and
sar
shr
pop
addr16
adc
mov
add
jp
nop
xchg
outsb
stos
add
aad
dec
stos
icebp
call
cmp
pop
or
mov
arpl
cmp
insb
pop
repnz
or
sahf
in
mov
add
repnz
enter
fmuls
enter
push
jns
inc
mov
mov
call
dec
and
lods
jnp
sub
push
fchs
inc
or
sbb
jo
rol
inc
xchg
jb
xchg
push
test
pushf
mov
or
jae
enter
out
fs
ret
aas
test
push
lds
aas
sysret
fwait
ds
jnp
pop
add
sbb
shrl
pop
pop
jo,pt
dec
cmpsl
xchg
jnp
div
inc
call
jae
lcall
mov
cmp
shl
jbe
push
inc
ja
and
or
in
mul
lds
mov
jnp
mov
xor
pop
mov
and
mov
das
add
test
push
and
in
add
movsb
test
xorl
daa
sub
fnstcw
push
mov
lcall
xchg
stc
mov
je
mov
out
jnp
aam
jmp
push
sahf
movsl
iret
pop
cmpsl
stos
and
sub
data16
sub
cld
shlb
mov
shrb
xchg
pop
mov
xor
xor
add
lahf
test
mov
mov
in
movb
testl
push
inc
hlt
int
pop
lret
decb
sub
dec
lods
testl
add
or
ljmp
cmc
or
rcl
ss
xchg
sbb
ss
xor
cmc
lods
jmp
pushf
mov
xchg
xor
test
add
xchg
fcomp
les
cmp
adc
push
cmpsl
inc
rcrl
xor
jb
fmul
mov
adc
jns
cs
and
push
test
xor
popf
push
pushf
push
jp
cli
test
sub
pushf
pop
xor
je
push
and
push
and
cmp
pop
inc
scas
mov
cmpsb
daa
push
scas
std
push
cs
dec
sub
xor
push
mov
ret
fdiv
mov
test
movsb
add
sub
loopne
or
cmpl
mov
arpl
cs
mov
xchg
das
adc
clc
adc
test
cmp
add
aam
imul
xchg
sbb
scas
sahf
dec
dec
and
add
jae
jecxz
and
aas
fbld
add
int3
lds
or
xorb
lock
mov
push
add
push
sbb
test
jo
or
cli
arpl
cmp
sub
inc
xor
push
and
shlb
cwtl
shrb
cld
add
xor
push
and
out
inc
pop
adc
push
mov
lods
mov
xchg
inc
ljmp
mov
loope
sti
push
adc
sub
sub
iret
dec
out
fmulp
cmpsl
pop
xchg
out
pusha
inc
adc
dec
jo
lcall
sbb
fs
pop
pusha
cmp
mov
jmp
or
dec
sbb
jo
xchg
pop
in
shll
es
sbb
dec
jl
out
pop
outsb
mov
inc
xorl
sub
out
jecxz
addr16
outsl
sbbb
jae
loopne
js
mov
pop
mov
fs
jge
mov
push
imul
xchg
mov
mov
pusha
cld
dec
xchg
mov
sbb
iret
push
inc
ss
test
dec
jno
lock
and
jo
add
mov
adc
mov
and
cli
sub
sbb
jb
mov
push
jns
mov
mov
xor
jbe
insb
cmp
push
fisubs
jge
and
cli
mov
into
add
rorb
sahf
loop
test
dec
dec
push
shl
jno
add
jmp
arpl
pop
notl
dec
dec
push
fbld
mov
gs
loopne
push
les
scas
daa
push
pusha
inc
inc
xchg
mov
jmp
jmp
mov
mov
add
mov
sti
mov
and
pushf
call
jo
sarl
mov
lret
mov
jmp
movsl
dec
push
jo
dec
xchg
arpl
inc
push
andb
shld
out
addr16
enter
mov
mov
dec
mov
lcall
adc
loop
xchg
xor
sub
inc
std
sub
adc
popf
dec
out
pop
imul
loopne
out
ja
lcall
lcall
mov
in
push
sahf
adc
mov
lret
cmp
fldt
mov
les
mov
pop
push
ficoml
mov
bound
js
jmp
mov
jnp
or
adc
fnstsw
ja
dec
fwait
imul
cwtl
mov
lcall
push
clc
adc
and
nop
in
icebp
sub
pop
lret
enter
enter
bound
xor
lods
add
adc
xchg
xor
stos
jmp
scas
dec
pop
dec
lahf
in
pop
mov
pop
xchg
shrl
cli
sub
fsubs
ss
rclb
scas
arpl
insb
mov
cmp
repz
lret
or
mov
fwait
gs
rcll
std
iret
inc
mov
adcl
and
xor
fs
sbb
lods
pop
test
add
sub
and
je
pop
iret
push
hlt
jecxz
cli
jmp
ljmp
fisttps
repz
xchg
in
mov
cmp
cmp
movsl
jp
test
std
sbb
sarb
incb
jae
cmp
clc
xchg
fcomi
push
arpl
dec
and
cmp
mov
fistpll
or
pop
adc
mov
call
out
lock
mov
push
mov
into
mov
test
dec
out
aaa
adcl
dec
push
pushf
lock
jp
aad
push
adc
and
and
sbb
test
aad
or
inc
pop
je
mov
push
outsl
pop
dec
imul
sub
int
pushf
arpl
pop
xor
cltd
jbe
popf
in
cmp
ds
aam
cwtl
mov
sbb
ficomps
test
adc
cmovp
pop
stos
adc
in
test
idivb
int3
repz
into
push
cld
adc
mov
int3
mov
xor
push
jae
in
ret
pop
sbb
mov
ljmp
jmp
je
out
xor
insb
cwtl
fwait
adc
and
sahf
mov
dec
insl
mov
arpl
test
inc
pushf
fcmovnb
test
fiadds
adc
int3
cmpsb
repnz
jbe
sbb
shlb
mov
and
pop
pop
xlat
aaa
les
das
mov
push
sub
ljmp
frstor
sahf
jge
call
clc
xchg
mov
adcb
loopne
inc
scas
push
cmp
icebp
stc
adc
jae
lcall
pop
insb
mov
jle
mov
xor
fwait
dec
cltd
pop
and
enter
xlat
js
ja
jae
sarl
rol
leave
inc
inc
push
xor
fxch
cmc
loope
mov
rorb
gs
pop
in
jb
repnz
push
into
mov
and
rclb
les
mov
mull
push
icebp
xor
insl
dec
fistpl
adc
mov
pop
jns
cmpsb
into
sahf
test
jo
dec
sbb
cmp
add
pop
gs
cltd
popf
adc
jmp
popa
push
int
push
mov
add
cmp
sbb
sbb
pusha
pop
adc
xor
and
sub
mov
inc
lds
shr
mov
inc
xor
test
xchg
jo
jo
mov
cmp
xorb
xor
push
pop
or
sub
mov
mov
popa
adc
cld
cmc
jae
jge
or
adc
ficoml
jle
mov
sbb
out
mov
or
pop
popa
jo
scas
shlb
sbb
test
mov
push
pop
enter
mov
sbb
adc
jns
aad
fldl
mov
loope
mov
test
mov
cmpl
rol
ret
jns
jmp
cmpsb
lcall
pop
movsl
adc
and
std
mov
sbb
scas
mull
sub
fadds
sub
dec
repz
cwtl
sti
pop
iret
out
and
scas
test
lahf
fbld
fdivl
and
ja
and
xchg
sbb
and
out
sbb
jp
dec
lods
es
or
daa
inc
mov
jbe
push
imul
and
loope
fiadds
cltd
in
clc
shr
sbb
mov
outsl
clc
cmpsl
sub
imul
add
mov
pop
jg
loop
movsl
adc
pop
push
fisttpl
cmp
jno
mov
cmp
popa
sub
fnstcw
sbb
dec
push
jnp
popa
xor
daa
mov
push
add
mov
sub
out
inc
dec
ja
test
addr16
stc
nop
mov
mov
addl
jo
mov
fcmovb
jb
pop
xchg
lcall
lods
divl
and
jge
daa
jecxz
outsl
mov
dec
cmpsl
push
xor
into
jmp
xor
mov
mov
lods
sbbl
xchg
mov
mov
fimuls
in
xlat
sub
mov
movsb
mov
jb
mov
jp
in
insl
out
inc
sub
mov
sbb
add
jae
push
xor
or
or
push
sbb
adc
mov
jbe
arpl
mov
jae
xchg
cmp
int
int
sbb
subb
enter
sti
mulb
xchg
lret
xor
out
loop
mov
call
xor
mov
mov
add
and
mov
cmp
aaa
pop
push
jns
and
cmp
pop
push
fwait
ja
push
push
pop
xor
jecxz
pop
and
jb
dec
sbb
push
scas
std
js
pop
out
push
and
aad
cmpsl
pop
mov
cmp
shlb
test
lea
xor
rol
addb
xor
jnp
cli
movsl
out
sub
pop
dec
enter
in
nop
jns
push
outsb
inc
mov
mov
fldcw
xchg
mov
std
iret
inc
lcall
aam
fstps
sub
xor
testb
xor
mov
testb
cltd
pop
cli
pop
fabs
imul
ja
add
jge
aad
cli
mov
jns
adc
js
inc
adc
add
cmp
cli
push
js
mov
das
sub
or
pop
ror
lahf
mov
dec
jl
out
push
inc
xor
loopne
insl
cli
xchg
xor
or
add
lcall
stos
push
xor
cmp
gs
xchg
mov
inc
fwait
sbb
movsb
xor
jecxz
and
xor
sub
mov
dec
dec
xchg
iret
test
mov
lea
cli
in
cwtl
mull
dec
daa
loop
and
stos
adc
pop
push
adcb
sub
push
fdivrl
in
jns
nop
jg
xor
inc
or
sub
push
adc
sti
mov
insl
shlb
dec
loopne
adc
ss
xchg
or
in
xor
je
cmc
into
jbe
out
pop
sbb
push
jge
push
cli
dec
sbb
lods
add
inc
out
mov
into
cli
add
sahf
push
adc
jg
push
scas
cmpsl
jns
movsb
in
bound
test
outsb
leave
in
nop
and
jne
arpl
hlt
insb
dec
jl
cli
and
xchg
ret
sub
xor
xchg
dec
call
mov
mull
aad
adcl
pop
lret
outsb
inc
jmp
sub
add
mov
push
fldenv
daa
mov
adc
movsb
jb
daa
xor
or
arpl
mov
pop
sarl
mov
sbb
dec
daa
sti
or
orl
les
pushf
imul
dec
test
dec
xchg
call
xor
pop
fdivs
lods
add
ss
jno
dec
mov
gs
jg
jmp
shrb
aad
ret
stos
test
and
lds
add
imul
mov
pop
inc
andb
or
int
or
fyl2xp1
sub
insb
push
incl
or
fdivl
jnp
sbb
xor
fwait
mov
insl
mov
stc
xchg
push
mov
mov
jecxz
cmpsb
fdivl
ds
cmc
dec
aam
das
sub
dec
pop
and
push
pusha
popf
movsb
sahf
decb
sbb
xchg
pushf
imul
dec
and
fwait
lea
sub
loopne
stc
sub
add
sbb
xchg
or
mov
xor
cmp
xchg
repnz
push
int
sbb
or
xchg
fbstp
mov
sub
pop
inc
je
add
fnstenv
les
in
add
or
ret
push
loopne
popl
movb
test
fsub
inc
icebp
xchg
mov
call
mov
and
sbb
mov
addr16
mov
lea
in
push
test
jp
out
sbb
bound
or
mov
data16
mov
outsb
out
cmpl
mov
movsb
shll
pop
pop
adc
pop
aam
imul
inc
aas
rol
jno
fwait
sbb
mov
mov
xlat
cmp
adc
sub
push
inc
stos
inc
shl
mov
add
stos
xchg
add
pop
inc
faddp
movsb
push
sbb
cld
sbb
adc
and
imul
leave
mov
fistl
or
pop
pop
dec
je
mov
sbb
xor
jno
fstps
shr
jg
pop
jns
mov
xchg
fistl
pop
rclb
in
cmp
lds
ss
rorl
mov
lcall
mov
xor
xor
mov
aas
scas
cmpsb
mov
imul
shr
mov
out
shrl
out
or
sub
push
mov
push
push
inc
push
xor
jb
fxch
push
and
mov
dec
push
test
add
inc
icebp
push
mov
loop
bound
arpl
push
mov
iret
inc
add
pop
lods
jnp
ss
divb
lods
mov
pop
push
repnz
mov
lret
lret
jl
cmpl
pop
addr16
pop
idivl
and
mov
pop
int3
and
xor
add
sbb
fstpt
and
and
jge
xor
aas
clc
or
sub
into
fisubs
out
leave
add
dec
cmc
stos
and
popf
aad
pop
adc
sbb
inc
repnz
frstpm(287
imul
push
add
lods
adc
rorl
orl
sub
aas
mov
cmp
fcomip
movd
mov
add
int
in
insl
cmp
xchg
sbb
aaa
jne
push
enter
nop
arpl
insl
push
arpl
les
jp
add
mov
sub
movsb
fisttpll
xchg
inc
cltd
int
or
loope
out
imul
fmuls
jae
sub
lods
test
mov
insb
mov
push
repz
loopne
out
sub
and
fwait
aad
dec
outsl
filds
lods
mov
mov
jo
mov
repz
cmp
fwait
lods
dec
sbb
mov
out
pop
sbb
inc
stos
mov
pushf
rol
xchg
mov
fcoml
xchg
ss
pop
gs
sub
not
arpl
ja
cmpsl
pop
jnp
jno
inc
mov
clc
dec
sub
adc
ss
enter
jo
icebp
ret
fbld
add
popa
icebp
daa
or
ss
mov
sbb
and
popa
push
ficomps
jae
gs
adcb
enter
dec
mov
cmpsb
das
sti
je
cmp
jecxz
sbb
jle
shl
jg
es
mov
xor
aas
loop
mov
ja
xor
das
rcrl
in
div
arpl
lret
sbb
stos
push
mov
insl
cmp
mov
xchg
repnz
pop
inc
orb
jg
je
push
push
shlb
loope
sahf
lds
stos
test
lahf
mov
push
inc
mov
aad
icebp
sbb
std
push
xor
or
sahf
xchg
insl
cmp
fdivrl
ret
mov
and
incl
xchg
lods
xor
push
sbb
aam
lcall
or
aad
ret
pop
dec
mov
fsubs
cwtl
ljmp
add
add
das
pop
pop
push
jp
pop
adc
mov
lcall
rorl
loop
mov
fimuls
xchg
in
cwtl
sbb
mov
out
test
xchg
popa
sbb
mov
fistpl
imul
les
sub
shll
sub
and
call
cmp
push
inc
aam
ret
les
push
cmpsl
sbb
jb
and
or
xchg
or
loop
cli
lret
ja
mov
test
mov
mov
cmp
pop
mov
mulb
lods
or
push
mov
call
lock
mov
push
gs
dec
add
push
inc
push
cld
sbb
mov
ficoml
xchg
dec
cmp
aam
mov
add
movsb
jmp
je
dec
jge
pop
movsb
sbb
lahf
cld
inc
add
mov
xor
dec
inc
icebp
add
ror
inc
mov
xchg
xchg
lret
fldl
push
push
cmp
pop
and
jp
sti
inc
jp
jnp
sub
hlt
ss
loopne
sbb
and
ja
fistps
xchg
shrl
and
inc
mov
mov
mov
push
repz
mov
mov
imul
xchg
dec
leave
rcll
out
fistpll
fsubs
jnp
jo
lcall
cmp
mov
out
inc
addr16
dec
jb
or
mov
into
or
or
dec
or
int3
cmp
cmpl
ja
mov
sub
scas
dec
xlat
mov
inc
aam
les
jmp
das
mov
fnsave
test
mov
mov
cmp
add
dec
sub
in
lret
jb
add
lods
imul
adc
jb
outsl
push
xchg
cmp
shlb
xor
mov
add
xor
adc
sub
hlt
xchg
jecxz
inc
test
cmp
in
aam
or
ja
inc
std
loopne
xchg
or
test
sbb
jno
int
xor
out
pop
fcoml
imul
jnp
pop
push
icebp
push
cmc
ds
pop
push
lret
loope
test
dec
adc
clc
dec
push
inc
dec
mov
js
bnd
jnp
jno
adc
aad
sbb
sahf
or
push
jb
inc
adc
shlb
pop
pop
fdivrp
ds
push
test
int
roll
lds
negb
adc
sahf
mov
pop
jo
jno
ret
aam
dec
out
daa
fdivs
repnz
popf
ja
es
js
cltd
cmpsl
sbb
or
adc
xchg
pop
bound
push
inc
pusha
mov
dec
or
adc
and
xor
out
stc
xor
repz
jl
mov
or
insl
inc
std
stc
shrb
lahf
add
jg
in
dec
add
lret
jns
sti
xchg
xor
and
adcb
xchg
adc
fnstsw
arpl
sub
ljmp
push
mov
rorb
sbb
jle
jne
aas
push
daa
hlt
shll
outsl
sub
xchg
xlat
arpl
sbb
cmpsl
xchg
gs
jno
xchg
inc
mov
fisttpl
shr
inc
sbb
mov
imul
cltd
scas
mov
inc
stos
ja
aam
cmp
int
jle
shrb
aad
and
mov
aam
sub
push
push
cmpxchg
inc
lea
repnz
mov
mov
dec
lahf
aam
cmpsb
mov
or
sbb
jg
daa
inc
dec
push
enter
xchg
sub
mov
or
push
shrl
sbb
fsubrs
cs
xchg
movsb
mov
jle
jmp
xchg
lret
mov
clc
lret
addr16
jno
adc
push
inc
and
add
cli
pop
adc
aaa
and
jmp
jne
and
pusha
sqrtps
pop
enter
hlt
push
push
aam
xchg
fcom
pop
shll
push
out
ffree
push
cs
mov
push
lahf
cmp
int
movsl
xor
pop
jnp
fisubs
pushf
leave
insb
mov
test
mov
sbb
xchg
std
ret
jp
call
mov
or
mov
bound
jno
push
mov
ds
mov
mov
cltd
hlt
fwait
fwait
or
inc
in
sbb
push
data16
subl
jbe
mov
dec
dec
mov
xor
mov
lret
push
sar
insl
ljmp
sub
and
cmp
dec
lock
sbb
ljmp
adc
pop
insb
xlat
ljmp
jl
jno
xor
into
ret
xchg
in
fimuls
lahf
out
jge
push
std
xor
sbb
mov
mov
icebp
adc
mov
push
adc
or
lds
add
lcall
jne
ror
jns
inc
and
adc
add
jmp
or
iret
push
and
xchg
sub
sbb
insl
inc
push
or
loop
mov
mov
pop
loopne
out
xchg
out
stc
cli
push
jecxz
faddp
xchg
dec
stos
int3
outsl
je
in
imul
xchg
cli
pop
loop
mov
pop
xchg
fldcw
push
sbb
xor
cltd
push
xchg
leave
xor
pushf
shlb
repnz
mov
test
loop
test
mov
mov
pop
cwtl
mov
inc
test
inc
or
push
out
ljmp
inc
xor
jl
push
xchg
cltd
stc
subl
scas
jl
stos
push
mov
in
mov
sbb
pop
sbb
sar
or
sub
ret
dec
xchg
out
je
dec
dec
cwtl
or
enter
fs
inc
or
xor
mov
insb
inc
lret
pop
popf
cmp
popa
add
call
xchg
imulb
cmp
and
lret
cmpsb
jns
adc
jg
outsl
pop
insb
loopne
rcrb
pop
out
push
sbb
mov
inc
mov
ret
fwait
jne
or
push
cmp
jp
cltd
dec
xor
out
fs
sub
insb
fdivrs
addr16
xchg
xchg
out
lock
dec
popa
dec
xchg
rcrl
push
sbb
jecxz
inc
insb
mov
mov
pop
cld
mov
sbb
cmpsb
test
push
or
mov
cli
mov
xor
rcrb
or
sbb
clc
xchg
cwtl
ja
pop
lret
mov
mov
aad
adcb
cmp
sbb
lods
arpl
imul
repnz
add
xor
jb
jecxz
iret
xor
ss
fs
or
icebp
repz
fists
fisubrl
jecxz
and
jne
insb
inc
and
inc
aad
jg
std
sti
adc
mov
xor
sub
mov
iret
dec
cmp
stc
and
hlt
sbb
bound
loopne
js
fwait
js
insb
scas
cmc
shlb
adc
insb
test
dec
inc
xchg
stos
fisttpl
mov
aad
ret
ljmp
ds
xor
pusha
inc
in
mov
jns
lcall
imul
sub
pop
sbb
sarl
push
push
and
add
inc
mov
xor
cld
lea
popa
push
or
dec
orb
cmpl
mov
fistl
pop
mov
sub
aam
or
xor
jnp
insb
lahf
pop
fistpll
mov
clc
repnz
adcl
add
xor
loopne
sbb
push
adc
jno
sbb
xchg
clc
add
subb
imul
xlat
push
mov
fsubs
out
mov
inc
adc
push
adc
fsubrs
mov
push
loop
and
lock
dec
stos
scas
out
add
out
and
imul
sbb
hlt
inc
mov
mov
shl
inc
cmp
pop
sub
aas
out
lret
add
flds
daa
cvtps2pd
push
sti
mov
adcb
sbb
addr16
inc
jle
pop
xchg
shll
sub
jl
pop
adc
jmp
into
ds
loope
scas
sbb
cmp
lds
std
pop
or
push
and
test
loop
jno
mov
imul
shlb
mov
adc
push
outsl
pop
mov
xchg
dec
xor
loop
push
push
jo
faddp
js
jnp
mov
jl
in
ret
loopne
xor
cmp
pop
in
inc
mov
xor
and
push
fcomps
ja
test
mov
jl
push
pusha
jne
jle
mov
mov
in
aaa
xchg
mov
pop
mov
mov
push
stc
inc
sub
psubq
adcb
das
xor
push
fisttpl
and
mov
push
add
daa
adc
loope
addr16
ss
pop
sbb
cmp
imul
rcpps
testb
mov
jge
push
inc
adc
inc
fwait
imul
nop
or
mov
xor
dec
jl
jl
leave
push
dec
adc
clc
out
icebp
mov
gs
int3
sarl
data16
inc
stc
jae
fs
out
subl
inc
lret
rcrl
daa
xor
mov
sub
add
xchg
xchg
in
nop
xor
jl
test
xlat
pushl
xor
mov
leave
push
data16
subl
mov
cmp
xor
mov
sbbb
loop
jmp
pop
sbb
jo
fwait
out
mov
outsb
rolb
in
fisubs
loopne
jae
fwait
lock
iret
sahf
cli
push
negb
ret
out
scas
int3
pop
sbb
addb
imul
push
popf
cmc
pusha
pushf
adc
les
dec
pop
popf
mov
pop
test
jl
popa
not
out
sbb
repnz
negl
std
jne
sbb
leave
jb
cmpb
dec
lahf
xchg
xchg
insb
in
iret
jno
pop
inc
insl
int
pop
popf
mov
adc
mov
jo
mov
decl
cli
dec
leave
clc
pop
lret
push
and
into
pop
arpl
mov
and
movsl
stc
stos
mov
in
in
push
dec
sbb
imul
ret
inc
lods
push
cmp
inc
mov
shll
push
xor
pop
pop
shlb
cwtl
lods
mov
insb
dec
dec
stc
repnz
and
jno
rcrl
inc
es
and
sub
cmp
inc
jo
dec
sbb
mov
insl
inc
dec
bnd
jnp
cs
lods
lds
add
js
xchg
fildll
fcmovu
mov
enter
mov
jl
jecxz
test
pxor
movsl
inc
pop
xchg
enter
ret
decl
stos
in
or
jl
leave
push
xchg
cmc
icebp
jb
rorb
hlt
in
xchg
mov
fcom
or
inc
pop
xchg
sub
jp
inc
lock
lea
sbb
mov
jmp
mov
push
call
cltd
cmp
pushf
mov
and
test
jo
inc
mov
out
inc
pop
xor
mov
call
lea
jbe
lcall
mov
sub
ret
jg
into
scas
imul
aaa
push
pop
das
jmp
ret
stc
and
pusha
inc
repz
rorb
adc
pop
repnz
les
test
test
test
in
jp
and
sahf
scas
test
adc
stos
out
xor
sbb
push
jl
repnz
xor
fwait
push
inc
dec
pop
xor
xlat
dec
push
mov
jecxz
jmp
adcl
scas
outsb
aad
mov
repnz
xor
cmpsl
and
je
ss
stc
dec
pop
cmpsb
fnstcw
movsb
fstp
and
iret
fiaddl
push
jge
add
mulb
aam
mov
in
push
xchg
sub
imul
ss
call
sub
push
mov
jg
mov
mov
jne
pop
movsb
dec
and
sbb
mov
jb
sahf
xchg
pop
mov
roll
pop
addb
or
lcall
loop
inc
and
fstl
sbb
movsb
dec
mov
test
int
aam
lret
lods
popa
repz
call
inc
mov
xor
fisubrs
add
push
or
push
mov
mov
dec
xchg
and
dec
push
mov
jl
mov
pop
push
daa
into
pop
je
iret
pop
sub
sbb
push
stos
shll
sbb
clc
repz
push
pop
mov
lret
inc
imul
ret
fwait
inc
xchg
and
or
mov
testb
push
movsb
inc
outsb
or
aas
mov
xor
scas
arpl
rcll
mov
imul
mov
and
mov
push
jnp
ret
popf
push
adc
or
cmp
jl
fildll
jno
push
push
jno
aas
sahf
jg
lods
pop
or
andb
mov
fcoms
js
or
fs
or
and
pop
sub
mov
pop
lea
cmp
or
test
sbb
lds
cmp
sub
and
sub
adc
dec
dec
popa
gs
push
and
fs
sbb
cmp
lock
dec
xchg
call
imul
jp
cmp
stc
cmp
lds
outsb
sbb
into
imul
cmpsb
leave
push
stos
test
cmc
lds
dec
mov
push
push
sub
in
add
das
jmp
into
fldt
sbb
pop
stos
mov
fs
repnz
cltd
push
sub
or
cmp
mov
fldcw
pop
daa
fcmovu
shlb
or
cmp
sahf
xor
sbb
pusha
stos
je
lds
dec
fwait
lods
xor
sbb
pop
inc
or
dec
adc
fsubrl
inc
movsb
addr16
mulb
andl
arpl
pop
jb
arpl
sbb
xchg
mulb
lret
sbb
sbb
bound
hlt
push
mov
addb
lods
fidivs
inc
dec
popa
jmp
push
sub
popa
scas
outsl
ds
scas
mov
xchg
cs
or
xor
jmp
mov
jl
sti
out
sti
cmp
cmpsl
pushf
mov
sti
cmp
popa
pop
test
das
mov
mov
adc
lret
jne
stos
mov
data16
cmp
push
mov
sub
jo
test
sub
fldcw
push
fstpt
mov
mov
jecxz
nop
outsb
ljmp
xor
out
fsubl
lahf
cmp
ret
jo
fcomp
xor
mov
and
xchg
cmp
jmp
adc
push
push
adc
mov
icebp
in
sub
fwait
inc
or
pusha
pop
loope
mov
adc
inc
xor
testb
test
pushf
push
ficoms
lahf
jnp
mov
mov
dec
xor
pushf
outsb
jge
jp
test
pop
jg
mov
outsl
xor
push
adc
mov
mov
adc
inc
pop
mov
push
add
call
cmp
push
mov
mov
add
cld
std
scas
push
fadds
andb
ret
ret
push
xchg
pop
cld
fcompl
loope
jae
mov
sbb
xor
adc
int
and
inc
repnz
call
cmp
cmp
jne
icebp
inc
pusha
frstor
mov
push
scas
pop
pop
jl
aaa
pop
mov
repnz
sarb
imul
outsb
mov
cmp
adc
inc
or
in
int
pop
or
pop
add
or
gs
mov
out
pop
add
in
mov
mov
or
xchg
imul
in
les
mov
xor
in
push
inc
cmp
mov
mov
in
jecxz
fnstenv
pushf
pop
sub
adc
movsl
xchg
cld
mov
cld
inc
leave
sbb
xor
sub
pop
mov
scas
call
stos
data16
roll
movsl
xor
nop
mov
sar
push
jmp
mov
cmp
mov
xchg
push
sbb
push
jbe
dec
fs
jmp
mov
sbb
inc
push
cmp
fistpll
dec
inc
andl
pop
push
jb
push
lar
pop
call
push
jge
mov
xlat
jl
imul
or
cmc
jmp
jnp
ljmp
lahf
mov
push
lea
dec
dec
mov
test
mov
mov
sub
ljmp
jns
cmp
mov
test
cld
inc
fisubrl
fwait
dec
out
sbbb
sbb
es
inc
mov
jg
sbb
xor
cmp
int3
repnz
in
sub
xchg
jecxz
add
loop
icebp
push
arpl
fs
jecxz
sub
in
mov
mov
roll
sub
sbb
add
fmul
jb
push
call
add
stc
pop
push
cmpsb
stos
cwtl
ss
mov
or
les
scas
movsb
fldcw
popf
fldenv
xchg
pop
lahf
sub
es
addl
push
sub
stos
xchg
inc
push
cmc
lock
or
jne
unpcklps
push
inc
fchs
cs
xchg
aam
cltd
int
incb
pop
cs
xchg
out
mov
lahf
sbb
adc
int3
jne
jmp
pop
arpl
popf
mov
push
lea
movsb
ljmp
mov
jb
push
and
cld
ror
inc
push
les
das
push
cmp
inc
inc
lds
sub
or
and
mov
sbb
cmpsl
inc
mov
imul
sbb
pop
lahf
jne
clc
pop
push
xor
push
pop
adc
lret
cmpsl
aaa
mov
cs
mov
mov
shll
arpl
das
dec
stc
push
adc
mov
outsb
jno
dec
xor
insb
les
mov
shlb
mov
add
sub
iret
inc
sub
pop
add
push
es
xchg
test
fidivl
daa
rolb
fldt
and
pop
clc
cmpsl
roll
stc
gs
pop
loopne
sbb
mov
mov
fstps
jae
xchg
aas
imul
clc
divl
jne
in
sub
mov
inc
pusha
sti
ret
jb
push
xor
push
and
adc
cld
push
inc
addl
inc
cwtl
xchg
or
mov
test
push
leave
stos
push
insl
sub
adc
push
or
mov
mov
fcomps
pop
leave
movb
fwait
inc
dec
mov
xor
push
push
xor
faddl
jne
or
push
mov
mov
xor
lret
imul
and
mov
push
shrb
xchg
push
sti
loope
jge
and
icebp
xor
sbb
xor
jg
fs
xor
lret
adc
stos
mov
adc
call
in
fiadds
or
jne
push
mov
rcl
mov
cwtl
repnz
test
inc
in
pop
push
bound
call
jge
xlat
mov
stos
repnz
cmc
cmpsb
push
and
cmp
push
adc
orl
sar
xchg
cmp
ja
pusha
imul
les
cmc
or
xlat
shll
inc
int3
xchg
enter
dec
sbb
jecxz
test
xor
jge
test
pop
pop
push
push
ds
sbb
add
dec
cwtl
mov
sahf
xchg
and
mov
mov
sub
sbbb
add
test
data16
lods
shll
fwait
xchg
push
xor
movsl
pop
inc
pop
test
xchg
dec
dec
clts
shl
sbb
ret
pop
into
pop
or
jg
jmp
outsl
push
out
sub
xor
adc
sbb
fisubs
out
std
xor
push
call
mov
push
push
fwait
and
sti
and
xchg
push
inc
js
std
subb
or
mov
cltd
push
ljmp
adc
mov
pop
ja
cmp
pop
ror
enter
jge
js
lcall
fwait
popa
cmc
inc
rcll
pop
rorb
add
movsl
pop
data16
xor
push
jmp
insb
xchg
cmpsl
test
fucomi
or
shl
mov
setbe
sbb
ret
stos
and
ljmp
mov
mov
cs
ja
pop
in
xchg
push
data16
mov
in
inc
adc
jae
jg
add
ret
mov
sub
int3
notl
and
call
inc
mov
stc
fwait
lret
ficompl
lcall
out
and
sub
sbb
mov
sbb
ljmp
pop
jg
shll
fldt
lret
movsb
inc
sbb
negb
inc
fwait
cmc
jmp
cltd
mov
or
rcrl
jecxz
xchg
in
sbb
sbb
dec
xor
adc
pop
jbe
rcr
dec
data16
cmpsl
ss
jmp
jb
inc
sbb
lcall
pushf
fs
out
hlt
call
mov
enter
loope
pop
aad
mov
repnz
sub
pop
ror
insl
stos
lret
inc
data16
mov
adc
pushf
pushf
and
stc
shrl
pop
jmp
ficompl
jo
aad
addb
std
ljmp
mov
aam
jcxz
nop
cli
loope
cmp
mov
xor
jne
push
loopne
jns
cmpsb
fs
movsl
jp
rol
or
adc
es
int3
sub
sbb
mov
in
popf
stc
rcll
hlt
dec
icebp
popf
sti
es
fnsetpm(287
and
bound
cmp
jnp
andb
push
inc
inc
ret
cmpsb
call
rcrb
sub
les
mov
movsb
mov
push
fsubs
add
test
xor
pop
test
mov
and
cmpsb
es
mov
orb
and
sub
inc
and
fisubrs
mov
in
push
sbb
xor
mov
cmc
js
mov
xor
mov
mov
movl
xchg
aam
lahf
push
inc
fstpt
jle
and
cmp
and
cmp
mov
roll
sbb
inc
sub
inc
out
repz
movsw
out
imul
jno
add
push
add
sub
jg
inc
and
fwait
call
rolb
jle
call
movsl
gs
ds
or
sbb
ss
inc
xor
movsl
push
shlb
adc
mov
lods
mov
idivb
xchg
cli
dec
les
loopne
in
pop
sub
stos
mov
jo
nop
pop
jns
mov
fists
or
stos
pop
dec
ja
dec
push
mov
inc
mov
sti
lahf
or
mov
and
shll
sbb
sti
mov
hlt
and
adc
sub
clc
sbb
mov
sbb
aam
lret
cld
hlt
and
jnp
pop
shrl
sbb
xchg
or
sub
out
add
adc
mov
sub
xchg
sar
rcl
jnp
jp
and
out
stos
test
dec
jge
inc
ljmp
pusha
pop
mov
mov
xor
popa
mov
scas
in
adc
or
jmp
jno
mov
sbb
jl
add
std
inc
das
aaa
cmc
shl
cmp
cmp
inc
lcall
scas
loop
ja
inc
push
add
out
aaa
mov
sbb
pop
mov
jmp
in
cltd
sarl
xor
iret
xor
inc
js
aaa
dec
fsubl
dec
cmp
add
mov
imul
pop
je
mov
pop
aas
leave
rcr
in
arpl
mov
out
pusha
mov
pop
or
mov
dec
inc
icebp
add
gs
outsl
or
sbb
cmpsl
xlat
enter
dec
fsubs
enter
inc
sarb
sbb
sub
adcl
call
test
js
sbb
jmp
pop
push
arpl
je
rclb
and
jmp
cmp
and
mov
or
inc
add
in
iret
sbbl
sub
addr16
pop
cmp
lea
mov
int3
jmp
lock
cmp
and
mov
jns
aam
adc
fs
arpl
bound
cmc
push
cmp
inc
lock
push
sub
ficomps
mov
sti
fs
inc
sbb
inc
or
sub
pop
push
cmp
mov
repz
aaa
mov
cmp
jnp
in
push
push
pusha
jmp
insl
fdiv
test
aad
cmp
adc
sbb
push
shrl
cmp
fldl
mov
leave
movsb
or
and
inc
imul
fwait
outsl
dec
mov
sarb
push
test
sub
jno
data16
cmp
mov
rcrb
add
push
fnstsw
ss
mov
dec
mov
stos
inc
arpl
jge
shr
xchg
dec
leave
int3
popa
xchg
das
dec
sahf
and
outsl
sub
sub
mov
in
jo
adc
insb
pop
add
mov
mov
into
lock
fsts
mov
xor
inc
xlat
mov
dec
inc
cltd
inc
repnz
push
xchg
pop
imul
sbb
aaa
jns
xchg
inc
sbb
mov
jg
sbb
scas
mov
jo
adc
bound
test
or
and
inc
jmp
shlb
pop
movsl
fstl
jns
sbb
adc
push
pop
adcl
sbb
insb
mov
nop
es
mov
jl
sub
sub
imul
mov
fwait
inc
xchg
push
sbb
sti
mov
jle
fnstcw
pop
movsb
test
shlb
xchg
sub
and
jns
call
imulb
outsb
pop
outsb
sub
pop
fimull
andl
loop
add
sub
or
je
outsb
into
lock
jmp
insb
incl
xor
adc
and
imul
ljmp
push
bound
sbb
push
inc
or
push
outsl
movsl
mov
icebp
cld
pop
xor
lock
into
jmp
sbb
cmp
mov
xor
mov
dec
sbb
mov
cltd
mov
sub
mov
daa
std
adc
mov
cmp
dec
add
les
push
clc
lock
jecxz
sbb
xchg
push
cli
or
fnstenv
mov
stc
test
stos
repz
test
mov
sub
insb
adcb
mov
insb
xchg
mov
fs
movsb
dec
mov
lret
mov
mov
sarl
in
mov
cli
cs
addps
imul
dec
mov
imul
dec
scas
imul
shll
adc
shl
cmp
sti
push
mov
fwait
dec
dec
pop
pop
jmp
jnp
leave
pop
roll
hlt
pop
or
shrl
push
loop
imul
pop
ret
cld
xlat
mov
hlt
pop
sbb
mov
ds
xor
dec
sbb
lret
mov
push
mov
stos
arpl
adc
js
test
push
or
pop
push
sub
call
cmp
inc
ficoms
les
in
push
outsl
push
mov
aaa
test
xchg
push
cmp
imul
adc
or
idivl
xchg
nop
fimull
adc
mov
push
mov
mov
fnstcw
push
jbe
fsubrp
bound
push
pop
loope
ja
lds
sarl
loopne
jl
xor
roll
cmp
iret
popf
xchg
mov
js
add
aam
inc
sub
mov
cld
cmp
xor
inc
or
clc
leave
mov
sub
sub
fs
or
mov
sahf
ret
and
popa
mov
out
and
insl
mov
lods
cmp
inc
ds
mov
mov
fstps
icebp
inc
mov
push
mov
cmp
mov
adc
test
jne
cmp
sar
mov
add
push
nop
push
dec
icebp
xchg
and
cmpsb
sub
call
mov
push
clc
cmp
xchg
enter
jnp
fcomps
pop
adc
pop
cmp
cmp
add
sub
arpl
mov
mov
loope
mov
xor
xchg
mov
lods
jmp
outsb
sarl
pop
cmp
pop
jmp
mov
cmpsl
xor
dec
call
cmpsl
sub
pop
jb
dec
repz
pop
std
mov
jo
mov
xor
mov
xor
xchg
lods
jnp
or
or
pop
push
cwtl
pop
enter
cmp
xor
add
cmp
mov
and
xlat
push
add
xor
out
inc
mov
xchg
or
mov
out
jne
call
sbbb
jecxz
repz
pop
lea
pop
rcrl
popw
in
adc
jno
cmpsl
cmc
mov
cmpsl
pop
mov
ret
lods
fcmovb
jge
out
pop
push
fisubs
ja
mov
in
enter
dec
push
repnz
pop
pop
cli
mov
jmp
imul
sti
ljmp
addr16
mov
jmp
mov
xacquire
fdivr
pop
adc
ss
pop
inc
aas
faddl
cmpsb
in
xor
cli
daa
dec
and
xlat
mov
dec
xchg
cmp
cmc
and
call
mov
lret
push
xor
scas
xor
cli
ds
sub
or
push
std
mov
add
loopne
mov
jge
jbe
movsb
xchg
jp
add
push
inc
mov
cwtl
push
sbbb
aas
mov
jmp
into
sub
js
push
lahf
inc
flds
call
lea
mov
xchg
xchg
inc
fstpl
jle
push
fld
mov
dec
test
in
and
adc
fsubrs
movsb
sbb
movsb
popf
or
mov
dec
cmp
fwait
shl
mov
out
cltd
adc
xor
clc
repz
outsl
pop
and
lret
movl
insl
and
sahf
and
imul
imul
jb
and
add
and
lea
jb
add
mov
aad
int3
int
or
clc
add
shlb
lret
pop
daa
repz
stc
push
sti
aaa
sti
sub
lock
cltd
test
lret
dec
js
jne
ret
aad
dec
mov
pop
xor
sub
lcall
test
in
cwtl
add
sar
jle
repz
dec
cld
and
dec
xchg
jmp
push
rcl
loope
cmp
inc
mov
cmp
pushl
mov
or
stos
lods
std
ljmp
enter
rcrl
lcall
movb
dec
cmp
rolb
add
adc
add
push
test
cmc
stc
push
jmp
pop
sub
add
int3
jns
push
pop
lea
sbb
xchg
test
stos
pop
fucomi
shrl
adc
inc
cmp
inc
xchg
mov
push
mov
insl
in
dec
cmp
push
dec
xchg
xor
mov
and
add
andb
mov
dec
push
sbb
push
or
cmpb
jae
mov
fimull
ss
js
pop
cmp
ss
in
pop
mov
add
loope
jecxz
add
bound
in
ss
fidivrs
ss
aaa
sbb
repz
jb
mov
and
mov
loop
cmp
cmc
jge
push
scas
bound
sbb
pop
mov
sbb
inc
lcall
sbb
ret
sub
jg
sbb
fimull
loop
ds
loop
outsl
add
stos
sbb
jo
sub
mov
scas
daa
push
mov
dec
xlat
add
mov
push
sub
pushf
nop
stos
jge
addl
test
pop
jp
xor
jmp
sub
push
stos
dec
ljmp
adc
cld
and
mov
insl
dec
mov
mov
sub
pop
mov
mov
mov
int3
xor
in
or
out
sbb
pop
outsl
rcrb
loopne
in
sbb
gs
movsl
jnp
stc
daa
inc
int3
inc
orb
jns
xor
addr16
cld
movsb
cmove
ljmp
adc
xor
enter
xchg
cs
dec
sub
adc
fisubl
sub
jmp
xor
jmp
out
shl
and
jge
inc
mov
cmpsb
leave
mov
and
cmp
add
popa
cs
dec
test
int
sbb
xchg
jp
adc
lods
pop
gs
gs
cmc
mov
lahf
fldenv
dec
adc
sub
mov
add
sbbl
inc
std
or
lods
pop
sbb
sbb
push
stc
data16
test
insb
jo
pusha
sub
testb
stos
mov
adc
xchg
pushf
push
stos
cltd
sub
repnz
dec
out
mov
cmc
aas
fdivs
fdivrs
ficoms
call
ja
gs
cmp
sbb
outsl
int3
xchg
ret
scas
aad
bnd
sbb
jge
leave
adc
sti
mov
dec
cmpsb
mov
call
push
call
test
out
add
movsl
sub
mov
or
mov
jl
ljmp
stos
cmp
sub
sub
inc
sbb
push
pop
pop
aaa
insb
icebp
fwait
add
mov
mov
inc
mov
jbe
add
imul
mov
mov
aas
addr16
test
push
out
pop
mov
fwait
xor
pushf
sub
scas
mov
data16
cmp
test
pop
fidivrl
lods
sbb
jp
pop
xlat
dec
dec
push
andb
jl
xchg
mov
inc
or
fcompl
inc
jne
xor
fs
jnp
shlb
insl
aad
testl
xor
ret
pop
sbb
xchg
inc
mov
adc
ljmp
out
push
inc
mov
dec
dec
jno
js
mov
int
xor
mov
dec
sbbb
xor
das
pop
faddl
popa
cltd
xchg
std
ss
and
or
jp
inc
push
adc
pushf
in
les
pop
lock
lahf
xchg
push
stos
push
jl
loop
pop
cmpsb
loop
mov
sbb
test
cld
cmpsb
pop
cmp
push
mov
and
jge
lock
out
sub
and
rorl
leave
fxch
adc
aad
aam
stos
out
rcll
cltd
pop
sbb
xchg
lret
int
ja
sar
push
roll
popa
push
pop
jns
arpl
mov
mov
sub
pop
in
mov
jmp
push
enter
and
js
push
and
loop
dec
arpl
aaa
mov
or
fnstsw
xor
mov
fwait
imul
jbe
and
sub
cld
loopne
frstor
dec
movsb
addr16
in
test
xor
sub
push
dec
mov
cwtl
loope
fld
sub
daa
push
or
adc
push
push
fdiv
or
adc
lret
sbb
iret
sub
int
int
scas
jp
das
ret
xchg
add
and
shll
imul
fdivp
adc
adc
and
jns
jo
push
push
fistps
orl
cmp
fidivs
xchg
push
outsb
push
inc
push
out
cmp
jns
out
gs
in
mov
fnsave
mov
sbb
adc
lods
bound
sub
xchg
pop
xlat
push
push
jle
and
xchg
sbb
popf
lock
push
ljmp
and
test
inc
popf
add
pushf
xor
lock
outsl
popa
xchg
loope
nop
sahf
lret
xchg
mov
add
dec
ret
ja
loopne
mov
test
imul
xchg
subb
test
rclb
dec
int3
pop
dec
mov
sub
adc
pop
shlb
je
scas
lock
jbe
aad
jb
sbb
test
enter
hlt
sahf
int3
push
cmc
inc
lcall
mov
popa
push
mov
push
loopne
mov
cld
adcl
jnp
and
sarb
or
dec
mov
rorl
add
ss
inc
push
add
lea
inc
jg
dec
inc
inc
xor
in
ljmp
pop
scas
mov
push
push
pop
xchg
pop
adc
fsubr
bound
lret
imul
cli
aam
cmp
or
lea
xor
addr16
ljmp
insb
push
loopne
mov
pop
popa
sbb
dec
out
and
aas
movsb
mov
cmp
pop
inc
pop
push
cmp
loopne
repnz
into
mov
push
add
xchg
out
xor
bound
repnz
pop
das
jmp
das
out
push
mov
outsb
scas
pusha
and
push
aaa
fwait
ljmp
add
xchg
adc
stos
shl
sbb
mov
push
or
and
add
mov
dec
cld
jno
repz
xchg
dec
inc
decb
sarl
mov
cmpxchg
mov
xchg
lcall
dec
cs
dec
inc
xchg
test
out
sbb
scas
mov
test
fs
ficomps
jo
js
repz
xchg
ret
fisubl
adc
pop
arpl
or
nop
xor
mov
iret
or
inc
cmp
or
adc
add
filds
stc
pop
jae
sbb
hlt
repnz
repnz
mov
stc
dec
inc
movl
pop
in
jl
xor
dec
pop
stos
mov
adc
xlat
cmp
push
xlat
lret
scas
arpl
jmp
scas
mov
sub
sub
test
adc
jl
adc
aad
xor
xor
fwait
inc
es
add
das
out
jmp
subl
lods
in
mov
pop
inc
test
into
xor
jbe
sbb
or
shrb
mov
gs
out
dec
sub
ljmp
sub
fildll
repz
mov
orb
mov
ja
leave
cwtl
push
dec
idiv
pop
loop
imul
sub
mov
push
xor
xchg
mov
mov
icebp
add
dec
stos
popa
pop
pop
mov
test
xchg
hlt
push
dec
adc
push
daa
pop
xor
push
sub
mov
jnp
inc
cmc
pop
in
and
and
or
cmpsb
ret
cmp
ja
mov
test
loop
dec
enter
dec
inc
pushf
mov
outsl
in
jl
roll
mov
in
push
dec
fbstp
je
and
insl
sbb
mov
mov
push
fidivl
out
ljmp
xor
push
arpl
cmp
pushf
mov
fdivr
pop
and
push
imul
in
add
jb
xchg
ucomiss
jg
aas
jne
arpl
mov
xchg
xchg
jne
adc
das
mov
or
jno
add
push
bound
jl
scas
or
testb
add
gs
insl
unpckhps
fwait
repnz
addb
cs
push
push
cmp
je
enter
inc
jbe
cmp
sbb
es
mov
mov
adc
ss
jle
inc
scas
js
movsb
cld
test
cmp
mov
push
ljmp
dec
mov
imul
fdivs
outsb
mov
mov
mov
xor
fnstenv
xor
int3
das
mov
mov
aaa
or
mov
pop
mov
cld
in
cli
imul
jg
jle
fnstenv
rorb
rclb
mov
sbb
sub
push
cltd
xor
adc
pop
cltd
xor
cmp
dec
jnp
push
sub
fs
aaa
or
in
mov
push
add
adc
xchg
mov
pop
jl
mov
jle
mov
mov
lds
ljmp
iret
repz
sub
pusha
fstl
push
mov
pushf
dec
xchg
out
lods
test
push
xchg
pop
aaa
cmp
aad
pop
push
in
or
pop
sub
js
subb
int3
and
mov
nop
fisttps
mov
xlat
cmpsb
mov
inc
daa
test
xchg
lcall
lea
shlb
ret
xchg
sub
push
sbb
lret
ret
xor
fstpl
sub
adc
xor
pop
scas
jns
push
pop
data16
and
mov
pop
daa
pop
mov
mov
lea
push
add
or
jg
mov
jno
enter
mov
push
mov
jbe
std
cmp
jbe
sbb
ret
dec
inc
in
mov
mov
jecxz
cs
or
add
scas
stc
psubusb
xchg
adc
sub
pop
cwtl
rclb
int
lods
xorl
jnp
push
je
sbb
jl
inc
cmp
lret
mov
data16
clc
repnz
rcll
xchg
inc
pop
mov
xchg
mov
or
dec
sti
push
stc
jge
loope
pop
iret
int3
add
sarl
ret
xchg
ret
in
rclw
pop
or
pop
mov
mov
inc
mov
stc
enter
daa
or
mov
push
aaa
out
notl
xchg
inc
sub
push
jecxz
test
sub
mov
and
stc
inc
pop
or
inc
out
in
inc
cmp
sahf
mov
incl
shll
xchg
stc
xor
aas
jo
int
popa
sbb
xchg
test
cmp
xchg
sarb
jno
add
mov
or
adc
cmp
cmp
imul
pop
rclb
dec
movsl
cmp
push
sbb
mov
push
inc
sahf
cmc
push
adc
mov
sbb
mov
jo
or
jecxz
aas
out
cmc
push
lock
jg
stc
lods
cmc
xor
call
push
mov
ret
sahf
imul
add
adc
in
mov
adc
cmpl
scas
mov
roll
or
jbe
fs
aaa
xchg
xchg
mov
mov
or
icebp
fidivrl
mov
adc
ss
cmp
jno
fcoms
das
and
addr16
cmpsb
fsubrl
push
sub
ljmp
cmpsl
and
outsb
daa
out
inc
iret
mov
sub
cmp
dec
pop
insb
sbbl
gs
ljmp
cmp
fcomps
and
xchg
xchg
aas
mov
mov
idivb
inc
or
dec
fisubs
outsb
sarb
int
adc
stc
test
aad
xor
int
and
push
imul
mov
push
mov
je
push
fistpll
jno
push
add
adc
mov
rol
dec
mov
push
cmp
xchg
jno
sbb
aaa
mov
adc
xchg
sarl
add
dec
push
sub
mov
push
dec
jno
sbb
mov
stos
pop
sbb
adc
mull
jmp
ret
sbb
dec
fimuls
jne
aad
dec
sbb
fsubrs
out
and
and
lods
and
stos
jecxz
lcall
or
aad
mov
and
cmpsl
lret
mov
stos
push
imul
ror
cmp
jl
mov
js
js
xchg
xchg
pop
xor
xchg
inc
adc
insl
xlat
pop
fwait
scas
push
gs
sub
xlat
xor
dec
rorb
das
lods
cmp
cli
pushf
loop
adc
cs
mov
shll
push
cmp
xchg
rclb
xchg
jne
bndstx
inc
int3
xor
push
xor
or
push
and
jle
and
xchg
aaa
mov
rolb
lahf
xchg
fsubs
repnz
jb
arpl
idivl
jle
in
or
es
iret
sub
pushf
or
aaa
mov
jbe
mov
mov
dec
mov
sbb
and
loopne
sub
rol
testb
aas
icebp
add
adc
test
xchg
nop
cmp
sbb
pop
jo
insl
add
mov
subl
call
mov
in
fistpl
cmp
cmp
pusha
pop
sbb
push
gs
rolb
aaa
imul
sbb
repnz
cli
mov
pop
push
sahf
je
adc
xor
and
jl
fsubr
pop
lret
mov
addr16
repnz
in
or
mov
fs
aaa
sub
sti
imul
pop
mov
mov
or
outsl
cmp
mov
adc
pop
out
xor
dec
add
push
repnz
bound
sbb
xchg
jmp
testb
loope
test
adc
shr
cmp
ljmp
xchg
inc
arpl
test
push
shr
jg
and
mov
cmp
mov
and
mov
adc
mov
les
clc
sub
xlat
or
push
fistpll
imul
adc
call
and
orl
or
fdivrl
inc
bound
aam
jns
sbb
insb
dec
cs
call
negb
lahf
pop
sbb
fucomip
jle
jg
ds
inc
dec
adc
or
sub
cmp
adc
fwait
cwtl
adc
shlb
cmp
nop
outsl
or
loopne
mov
lods
xchg
mov
sti
mov
xchg
mov
push
inc
popa
scas
aaa
add
sub
movsl
mov
and
std
fsubl
ds
imul
dec
sbb
adc
ret
xchg
jg
cmp
nop
in
pop
pop
jl
lods
cmp
and
stc
jne
jl
lahf
je
jecxz
das
cltd
mov
pop
mov
idiv
mov
sahf
scas
loopne
cld
pop
xlat
sahf
xor
aam
fcoml
outsb
pop
sbb
int
insb
adc
inc
scas
mov
and
jne
add
jmp
push
dec
dec
mov
rcrb
test
jne
call
fistpl
repz
movaps
mov
and
lock
and
push
sbb
pusha
rcr
repnz
addl
jne
push
test
pop
insl
mov
rcrb
mov
rcr
jns
mov
sub
stos
jle
insb
jg
pop
lds
and
arpl
pop
jp
pop
xor
or
jg
int3
mov
push
inc
in
data16
sahf
xor
jns
cmp
adc
inc
pusha
xchg
lret
dec
mov
cmpsb
cmpsb
pop
std
sub
sbb
mov
enter
xchg
je
pop
roll
ret
jecxz
push
hlt
out
push
adcl
in
sub
lcall
mov
inc
popa
add
mov
rorl
les
push
xchg
je
js
pop
aas
adc
sbb
xchg
push
lds
add
jae
test
or
cmp
push
xchg
jb
jecxz
adc
imul
xor
inc
das
jns
and
cld
dec
xor
sbb
popl
fnsave
cld
mov
aad
pandn
or
xor
rcr
cs
cs
dec
cmc
lret
jge
lock
and
sbb
xor
lcall
mov
insl
movsb
test
fucomip
movsl
pop
outsl
ljmp
lahf
popa
adc
xor
mov
lods
add
int
xchg
mov
mov
leave
xchg
push
in
mov
cmova
xlat
sub
insb
pop
push
sbb
mov
push
add
xchg
js
test
xchg
mov
xchg
or
inc
mov
jbe
cltd
add
mov
pop
jb
pop
scas
dec
mov
or
cmc
pop
sbb
sbb
xchg
cmc
mov
dec
mov
add
inc
sar
mov
pop
stos
pop
pop
mov
xchg
lock
pop
test
pop
aas
jno
mov
jbe
add
mov
sbb
xchg
sarl
xchg
sub
adc
push
mov
mov
stos
hlt
test
test
push
or
xor
mov
inc
fldl
push
and
in
hlt
dec
pushl
mov
mov
mov
mov
ja
pop
and
pop
mov
cmpsl
out
outsl
xor
xor
call
cmp
icebp
sbb
adc
pop
push
and
test
xchg
int3
addb
pop
dec
enter
push
cmp
stc
jle
popl
pop
push
insb
sub
or
xor
jns
mov
lret
ja
push
jno
adc
pop
fdivrl
dec
cmpsl
xchg
lahf
mov
in
aad
dec
and
dec
xor
dec
dec
jg
das
pop
ss
pop
xlat
adc
popa
pop
mov
jnp
push
add
add
xchg
outsb
jl
or
adc
mov
orl
mov
push
cmp
and
adc
mov
cmc
or
fiadds
loope
imul
adc
mov
cmp
rcr
in
jns
pusha
dec
xor
push
lahf
es
loop
in
pop
push
inc
insb
mov
push
push
insb
jnp
fidivrl
mov
arpl
loop
ljmp
push
push
rcrl
cmp
pop
dec
lahf
adc
mov
sbb
adc
push
fbld
or
mov
out
mov
or
orl
and
aam
inc
push
inc
in
js
sub
leave
inc
or
popf
push
or
add
clc
icebp
jno
sub
xor
cld
and
inc
enter
mov
dec
fcomi
and
rcl
dec
pop
lock
sub
call
cs
aas
bound
cmp
mov
cltd
xchg
pushf
mov
js
adc
cld
subl
fnstenv
xor
jl
sbb
pop
ret
roll
in
lea
movsb
xor
shlb
js
out
sbb
mov
scas
loope
xchg
lods
dec
dec
adc
iret
lret
test
pop
pop
aad
sub
scas
aad
jno
loop
add
mov
push
dec
sti
pop
pusha
mov
orl
fstp
test
mov
ss
movsb
mov
jl
mov
dec
push
or
mov
push
sub
popf
outsl
sarl
mov
pop
out
pop
clc
in
add
aaa
mov
scas
add
loope
jge
pop
iret
inc
imul
out
movsl
pop
inc
or
cwtl
fldl
fimuls
dec
dec
enter
ficoms
rorb
jmp
mov
cmp
or
pop
sbb
rcrl
push
push
push
mov
ljmp
xor
and
shl
cs
mov
or
outsl
jnp
call
stos
je
insl
int3
sub
xchg
pop
add
in
arpl
shrl
loopne
adc
sbb
dec
push
test
jns
xor
jnp
bswap
loope
fwait
int3
adc
lds
out
inc
push
nop
adc
loope
negb
add
icebp
addr16
aas
imul
inc
je
xor
cmp
lret
fists
jle
ret
dec
in
jno
jno
ret
pusha
mov
negb
cli
push
fwait
subl
sub
or
in
push
addl
das
inc
lret
in
repnz
push
cmp
and
dec
dec
pop
mov
jbe
mov
pop
or
les
cmpsb
lcall
mov
add
and
lds
push
cmpsl
cmc
cmp
adc
xchg
pop
mov
push
addr16
lods
mov
test
jb
mov
sarl
cld
or
or
lods
loop
out
je
andb
in
inc
push
and
or
cmp
mov
lds
dec
imul
sbb
lods
test
and
mov
pop
outsl
dec
or
out
hlt
jo
std
jmp
out
fs
jb
movsb
adc
call
jno
inc
fsubs
frstor
jmp
jbe
push
cwtl
aam
icebp
inc
subl
xor
sbb
test
or
mov
add
nop
adcb
in
out
mov
scas
imul
sub
in
cmpsl
cmpsl
mov
add
push
ja
pop
mov
outsl
jle
pop
gs
shrl
add
sbb
jns
xorb
mov
push
orl
jno
sub
stos
add
mov
xchg
mov
test
test
xlat
dec
jmp
lret
mov
adc
push
or
and
mov
pop
cmp
cs
inc
jl
fiaddl
ljmp
shrd
imul
imul
pop
jno
ds
xor
pop
jae
pop
nop
ret
cs
dec
sahf
cld
mov
jae
mov
mov
js
mov
jle
out
or
or
xor
stos
jns
and
ljmp
inc
and
xor
sbb
mov
mov
fs
out
adc
ss
xchg
scas
jno
or
cmp
mov
insb
iret
sub
mov
jecxz
iret
testb
sti
add
dec
or
push
scas
addr16
mov
fstl
push
push
xchg
add
pop
xchg
in
gs
fwait
push
loope
arpl
jbe
push
iret
and
sub
nop
scas
jne
pop
loop
mov
stos
pop
jne
mov
imul
push
subb
xor
mov
xchg
xor
aaa
jns
testl
jecxz
fwait
adc
in
mov
int3
sub
xchg
fstps
pop
pop
mov
iret
xor
in
clc
sub
dec
push
adc
mov
xchg
cmc
lods
lahf
push
fwait
aad
flds
insb
sbb
xor
aad
or
shlb
jae
outsb
xlat
cmp
mov
mov
add
jecxz
lock
adc
stos
push
fldt
lods
jecxz
mov
push
dec
and
mov
mov
mov
jmp
cmp
push
and
popf
xchg
imul
repnz
arpl
fisubrs
jge
jno
neg
mov
add
in
add
mov
cld
xor
sti
xchg
or
loopne
mov
jae
xorb
insb
rcl
ficoml
fmull
pop
jnp
js
bound
inc
int
jns
pop
sarl
jne
mov
cmc
icebp
stc
in
movsb
mov
push
out
cmc
das
mov
lret
sbb
push
push
lcall
adc
in
sub
aad
adc
lea
push
cmp
pop
push
cmp
fnstsw
adc
or
sub
ret
sub
pop
and
or
sbb
mov
sbb
stos
cwtl
sbbb
daa
add
dec
fisubrs
out
fdivrs
sbb
xchg
sahf
les
pop
mov
xchg
rorl
ret
mov
mov
mov
neg
fisubrl
test
js
fidivl
popa
pop
out
pop
xchg
test
mov
mov
sub
lods
loope
inc
inc
inc
push
sbb
sahf
xor
arpl
std
or
bound
xchg
mov
mov
fbld
icebp
lods
out
loopne
or
loopne
adc
imul
mov
inc
push
arpl
and
push
xor
jge
jns
jle
loop
loop
cmp
inc
mov
fs
inc
inc
and
std
add
lahf
inc
xchg
imul
push
test
jl
insl
ret
aad
inc
jge
stos
loope
mov
pop
ljmp
mov
jl
test
scas
fimuls
popf
mov
not
mov
mov
gs
jecxz
xchg
xlat
jbe
or
lock
mov
mov
xchg
sbb
and
imul
cwtl
shlb
xor
or
mov
ret
and
gs
pushf
mov
popf
cmp
jecxz
push
pusha
mov
or
cmp
mul
mov
ja
aaa
test
mov
or
test
in
push
push
ds
xor
enter
mov
dec
push
loope
pop
xchg
pusha
iret
jae
mov
dec
pop
ret
push
xchg
or
cs
dec
adc
add
aas
jno
loop
iret
jmp
add
dec
sbb
out
es
lcall
xor
dec
mov
rolb
fdivrl
sbb
ljmp
pop
lock
ret
sub
mov
jmp
test
lahf
lods
cmp
shlb
or
mov
mov
call
ret
scas
cmp
shll
jne
shll
in
notb
pop
lret
scas
fdivrp
adc
mov
repz
and
pop
movsl
jle
stos
xor
sbb
xchg
mov
mov
outsl
shrb
jg
movsl
dec
in
lods
xor
fidivl
mov
stos
call
mov
and
nop
and
cmp
aad
cmpsb
mov
xchg
js
lock
pop
xchg
push
and
adc
jae
sbb
lahf
cmp
xlat
popf
negl
loope
imul
mov
cmp
out
push
sbb
xchg
jmp
mov
out
pop
mov
pop
xor
sub
lret
or
push
in
imul
bound
dec
jp
jg
xor
jp
jecxz
ja
and
or
sub
int3
xlat
and
fcompl
sbb
dec
ret
mov
bound
scas
mov
loop
mov
push
dec
push
ret
fstp
lret
xor
jae
add
jp
pop
imul
xor
enter
jmp
ja
mov
in
sbb
js
leave
popa
adc
loope
insb
orb
ljmp
cmp
frstor
jl
fnstsw
int
es
and
xor
ror
rorl
dec
dec
mov
popa
out
mov
ret
gs
daa
pminsw
xchg
inc
mov
adc
pop
add
xchg
gs
cmp
wbinvd
xchg
repz
xchg
pop
pop
inc
adc
les
and
inc
out
pushf
sbb
shlb
push
add
cmpsl
nop
xor
sbb
sub
pop
mov
push
xor
aam
and
sbb
add
sbb
sbb
jge
and
lods
loope
sbbl
insl
cmpsl
jge
test
test
or
push
dec
enter
lret
aas
mov
aaa
xor
icebp
fcmovnbe
int
lea
loop
stos
sub
mov
sbb
xor
mov
pop
sti
sbb
fwait
cmc
sbb
pop
call
mov
push
cmpsb
cmpsl
movl
scas
adc
jbe
pop
pop
or
into
in
in
mov
imul
pusha
xchg
mov
adc
testb
mov
and
mov
insl
adc
int3
movsb
lea
shrb
sbb
es
lcall
cmpsb
and
xor
push
jp
cmp
inc
adc
inc
adc
xlat
loopne
lret
scas
insl
test
popf
fwait
aas
mov
ljmp
scas
lret
loope
xchg
sbb
inc
xchg
pop
out
cmc
lahf
jnp
jle,pn
jae
lret
sbb
jae
inc
jbe
sub
xlat
jl
cmpsl
sbb
push
dec
popa
scas
xchg
xorl
and
inc
pop
push
mov
mov
cmpb
pop
data16
jo
or
sahf
push
jo
idivl
ret
dec
aas
hlt
jbe
loope
mov
ret
xor
cltd
xchg
sub
push
xor
imul
nop
insb
inc
mov
lahf
add
mov
lock
fldl
sbb
inc
add
xchg
int3
dec
xchg
sti
add
mov
xchg
fisttpll
lret
add
loop
fdivrp
sub
pop
int
and
sub
dec
xor
inc
push
nop
pop
bound
scas
adc
fwait
dec
jecxz
jle
push
jae
mov
jae
mov
test
and
push
xor
or
shll
and
cmpsb
pop
popf
loop
nop
jge
scas
arpl
imul
xor
enter
test
mov
xor
cwtl
mov
mov
femms
cld
adc
inc
mov
idiv
jecxz
inc
call
stos
in
push
push
pusha
sub
push
stc
dec
xchg
sbbb
push
imulb
daa
test
mov
fidivrl
insl
or
xor
xor
cmpsb
cmpsl
int3
xchg
loope
subl
push
repz
mov
or
mov
popa
sub
lods
xor
xor
shrb
pusha
and
sahf
stc
mov
jns
mov
mov
mov
pop
fs
out
mov
inc
sarl
mov
xor
adc
out
push
scas
mov
shrb
shl
adc
mov
or
in
push
pop
imul
test
ss
icebp
pop
into
sub
sbb
jns
adc
inc
push
push
sti
cld
int
shr
pop
pop
sub
outsb
adc
xchg
scas
mov
jne
mov
bound
cltd
test
ror
xor
scas
in
mov
adcb
cli
mov
add
push
add
ficoms
cld
sbb
ret
jmp
cmc
push
xchg
fldl
sahf
fdivl
cld
int3
xchg
push
jg
push
movsb
push
cmc
ds
test
xor
lret
test
push
jne
aad
js
adc
mov
stos
and
in
loope
into
jae
jmp
lahf
pusha
fwait
idivb
dec
repnz
addr16
decl
js
jo
ja
pop
adc
loope
jl
push
push
fdivr
xchg
imul
icebp
js
cmc
or
movsb
pushf
lcall
add
jp
dec
test
adc
jmp
pop
sarl
mov
xchg
ja
pop
mov
clc
xchg
cwtl
jae
adc
ljmp
mov
sub
repz
cmc
xchg
shll
in
push
jmp
push
cmp
dec
cmp
and
cmp
mov
mov
hlt
gs
adc
imul
ljmp
inc
addl
aam
jne
jns
mov
ret
mov
std
or
ljmp
aam
outsl
es
mov
mov
pusha
enter
xor
dec
sbb
scas
sub
shll
fsubrs
push
add
and
aas
xchg
scas
xchg
or
pop
rorl
adc
xchg
adc
gs
push
sti
bound
inc
dec
and
jg
push
sbb
sbb
push
mov
repnz
imul
sbb
jmp
cltd
outsb
jmp
iret
insl
loopne
inc
stos
repnz
and
pusha
movsl
adc
movsl
mov
cli
pop
or
popf
popa
push
out
sub
je
movsw
insl
dec
or
das
decb
mov
inc
popf
adc
dec
shl
nop
mov
daa
mov
adc
data16
bound
pop
pop
fisubs
and
lods
xchg
ffree
mov
pusha
cmc
pusha
adc
push
jbe
outsl
xchg
inc
inc
ja
push
adc
mov
mov
popa
scas
out
cwtl
add
pop
cs
add
inc
xchg
push
test
lods
dec
xor
aad
pop
js
fcoms
popf
sbb
cmc
lods
mov
jle
icebp
add
rcr
and
test
add
inc
or
and
push
cmc
xchg
jns
sub
jmp
sub
iret
test
ficompl
add
inc
and
sub
es
ret
neg
loop
dec
or
fldenv
xor
lret
icebp
test
pop
lds
adc
insb
loop
push
rorl
dec
hlt
xchg
or
mov
fcomip
jo
add
xchg
add
int
call
fwait
and
jnp
add
push
ret
lods
lds
roll
lahf
inc
stos
adc
scas
popf
lods
adc
negl
push
bound
jmp
cmp
loopne
pop
and
mov
ret
movsb
or
jo
sbb
negb
lret
push
ljmp
jns
jl
fxch
jno
push
ja
push
jge
and
jle
stos
stc
test
les
cli
loope
pop
xlat
das
mov
popa
fimull
push
outsl
repnz
cmp
inc
addl
sbb
mov
fisubl
rorl
cvtps2pi
xchg
shl
and
sbb
push
jl
xor
cmp
mov
mov
insb
sbb
test
addr16
sub
add
mov
xor
mov
int3
or
push
test
in
add
xor
add
sarl
lds
add
lahf
jnp
dec
adc
fidivrl
mov
bound
fwait
shl
clc
out
inc
dec
push
loop
int
or
daa
jle
cmp
cmp
and
dec
data16
insl
cli
mov
mov
lea
arpl
pushf
scas
cs
jmp
mov
mov
jp
aaa
inc
fbstp
xchg
jbe
cwtl
jo
push
neg
pusha
loope
ja
mov
arpl
push
sbb
push
jno
sub
ficompl
xchg
dec
test
lods
mov
mov
or
jle
in
sti
inc
mov
mov
cmp
push
jb
sub
test
xor
jmp
lahf
push
aam
shrb
out
ficomps
pop
lret
push
adc
sbbl
rorb
addr16
into
xor
fcomps
or
inc
and
sbb
mov
jmp
inc
repnz
sbb
push
out
adc
sbb
push
js
hlt
xor
jnp
push
cmp
insb
or
lods
mov
insl
outsl
notl
cmp
cmp
push
ss
inc
adc
jns
fisubrl
lock
fimuls
sti
xchg
ret
insb
push
imul
jo
mov
ror
sub
and
or
fisubrl
stos
jmp
rorb
jbe
test
clc
add
in
add
inc
mov
mov
pop
icebp
jl
sarl
xor
fcoms
stos
mov
inc
adc
mov
pop
or
and
repnz
insb
out
jb
lahf
in
les
fimull
xchg
fldl
mov
int
jb
sub
aad
fxch
stos
cmpsl
insl
fld
cmpsl
jle
out
in
ja
imul
div
out
mov
jne
data16
cmp
sub
mov
mov
and
pop
and
or
int
jge
xor
jecxz
cmc
sub
push
jae
lret
jo
jb
leave
dec
insl
adc
mov
mov
les
les
push
loope
or
loop
inc
iret
add
cmp
in
jbe
inc
add
cmp
inc
ds
jo
arpl
add
cli
movsl
mov
test
xchg
addr16
push
aad
nop
inc
add
popf
cmp
scas
test
stc
mov
int
inc
stos
lret
js
dec
imul
aam
inc
mov
push
cmp
pop
xlat
outsb
jo
ljmp
pop
mov
mov
jns
jg
push
pop
pop
push
sub
ret
movsl
dec
push
mov
mov
sti
lds
and
mov
shll
or
int3
cs
cltd
cmp
and
ror
pop
rolb
push
stos
push
pop
stos
xor
nop
xchg
mov
je
lods
shll
fmull
cltd
fsubrl
inc
xchg
adc
data16
xchg
pushf
cmp
loopne
cmc
sub
jle
jl
mov
pop
or
xchg
jg
andb
hlt
shr
lret
push
mov
add
test
cmp
add
mov
scas
std
lcall
xor
mov
jmp
pop
test
ds
faddp
cs
dec
mov
dec
sbb
push
iret
mov
fldt
shll
push
in
xor
lods
test
scas
pop
shr
push
and
inc
jne
bound
mov
mov
fistpl
dec
mov
test
add
sub
push
shlb
jecxz
into
fdivrl
enter
mov
pushf
xchg
mov
cmpsl
shlb
test
imul
rcr
pop
mov
xor
loopne
jl
mov
sbb
fists
add
out
dec
mov
loop
aam
xchg
cld
iret
jb
insl
mov
sub
jle
popa
mov
push
cmp
push
sahf
fistl
jmp
int
out
sbb
dec
pop
daa
xor
stc
test
jl
and
stc
push
xchg
jmp
dec
lahf
loope
cmpsl
loope
inc
in
mov
js
in
adc
cmp
rclb
cwtl
not
int
or
or
test
sbbb
jnp
jge
popl
sub
insb
aad
jbe
rcrl
xchg
stos
insl
icebp
aam
add
lret
dec
enter
int3
scas
mov
insl
dec
gs
pop
aaa
or
pop
mov
or
aam
fs
fcmovnb
fsts
test
rcrb
sub
push
loope
stos
shlb
fucomp
outsb
jge
ja
xor
lret
and
fstpt
cmp
adc
fstpt
push
and
push
scas
imul
divb
loopne
and
xchg
inc
sub
adc
aad
push
mov
mov
fnsave
int3
fcmove
mov
dec
sbb
mov
decl
push
pusha
adc
dec
sub
mov
ds
jnp
mov
dec
mov
and
addb
and
mov
pop
mov
adcl
cmpsb
cmp
sub
imul
xor
addb
and
cmpsb
divb
add
mov
mov
lods
and
mov
sub
iret
jno
cmp
push
and
lcall
test
or
jns
lret
lods
jmp
inc
test
jle
out
lcall
push
scas
xor
xor
sahf
pop
fisubl
push
xchg
ret
shll
mov
movsl
xchg
dec
adc
fistl
xchg
or
or
pushf
rclb
push
mov
pop
decl
addl
mov
mov
pop
cmc
in
xor
mov
out
gs
stos
fsub
cmp
jg
sbb
mov
and
rclb
hlt
dec
pop
cmpsl
ret
cs
mov
mov
xor
push
scas
inc
rcll
xor
cld
in
push
cmpsb
add
incb
add
and
pop
popa
xchg
mov
jg
mov
mov
dec
bound
cmp
jb
and
inc
jne
lea
or
jns
inc
push
and
sbb
push
mov
and
sbb
jp
ret
fldt
and
inc
mov
sub
cmpsb
add
daa
xor
jecxz
jle
or
int
or
xor
icebp
jo
mov
jb
xchg
push
or
bound
data16
lahf
sarl
mov
dec
into
scas
pop
pop
xchg
fidivs
sarl
cmp
into
xlat
cmp
mov
push
cmp
mov
rorb
jp
repz
sbb
mov
lcall
rcrl
push
xchg
adc
les
mov
data16
call
cmpsb
packuswb
and
xchg
cwtl
lret
insl
flds
or
xchg
mov
inc
mov
mov
lahf
and
adc
and
sbb
sub
mov
and
aam
push
push
inc
in
in
xchg
mov
pop
in
arpl
adc
add
push
dec
dec
or
lods
out
jmp
call
inc
cltd
cmp
pusha
dec
rclb
dec
icebp
mov
mov
orl
outsb
push
fcomi
push
xor
add
std
inc
dec
xchg
add
cmp
repnz
add
cld
cmp
and
mov
nop
scas
sub
cmpsb
pop
enter
fdivrs
mov
ja
add
inc
mov
adc
mov
aas
mov
mov
bound
scas
push
xor
js
jbe
mov
test
shlb
adc
js
mov
push
push
sbb
fimull
inc
cmp
mov
xor
aas
push
sbb
inc
test
sahf
aaa
jno
arpl
jbe
enter
xlat
arpl
test
inc
cmp
es
imul
inc
jns
andb
negl
cmp
cmp
aaa
mov
sub
int
pusha
xor
fxch
jns
sbb
imul
or
sbb
mov
pop
in
sti
mov
loopne
fs
ss
repz
out
imul
mov
stos
js
xchg
xor
repz
mov
les
lock
aam
shl
mov
fsub
mov
inc
repnz
int3
sbb
xor
data16
xchg
lods
or
test
and
scas
popf
fdivl
or
mov
mov
stos
xchg
lock
inc
push
jle
push
arpl
mov
push
sti
leave
ror
arpl
sub
sahf
cmp
xchg
cld
ljmp
jp
jbe
rolb
mov
push
aad
sub
jecxz
cltd
xchg
inc
sbb
push
xorl
les
cmpsl
xchg
dec
cmpsl
in
mov
imul
dec
mov
mov
jle
lea
outsl
jp
xchg
pop
scas
stos
and
psraw
xor
or
xchg
sahf
add
xchg
lods
scas
xchg
dec
in
sbb
xchg
aas
cmp
dec
xchg
es
mov
cltd
mov
dec
push
lahf
int
jmp
test
sahf
cmp
sbb
leave
inc
mov
jge
daa
lock
ljmp
movswl
jnp
fcmovnbe
in
xchg
mov
ja
repz
sub
ss
dec
xlat
notl
mull
mov
stc
and
sti
fnstcw
int3
push
fsub
stos
dec
into
ljmp
jecxz
sub
pop
dec
sbb
adc
dec
jbe
outsl
fwait
ljmp
lods
aam
push
mov
addr16
sbb
cld
test
mov
icebp
mov
push
cs
in
pushf
out
pop
cwtl
repz
cmpsl
movsb
dec
sub
inc
sti
lahf
leave
cld
cmpsl
or
jecxz
jo
mov
aad
inc
jne
fiadds
dec
cmp
sbb
es
cmpsb
lret
add
mov
or
ret
pop
orl
int3
or
ja
sub
or
and
add
enter
jle
cmp
jmp
xchg
loope
lcall
in
adc
cmp
xchg
pop
out
ljmp
inc
aad
call
je
repnz
mov
mov
lret
mov
gs
out
repnz
imul
add
dec
mov
or
sub
in
mov
cmp
pop
push
xchg
je
jo
lods
rol
icebp
popa
dec
cmpsl
push
or
mov
insb
mov
addb
mov
out
jg
sub
into
or
into
add
mov
out
adc
mov
fistpll
lods
sbb
sub
mov
push
test
xor
cmp
inc
enter
clc
push
iret
test
pop
stos
pushf
out
mov
in
mov
pushf
inc
mov
aas
mov
add
nop
movsl
push
pop
dec
mov
pop
cmc
in
in
mov
mov
and
sbb
lods
jnp
fcoml
and
out
int
fsubrs
inc
les
jbe,pn
xor
hlt
dec
push
pop
rorl
orb
aaa
sub
mov
pop
les
mov
fldcw
fildl
insl
mov
fiadds
jns
or
add
bound
add
cmp
and
fwait
xchg
jmp
int3
leave
leave
adc
xor
xchg
push
and
std
ja
bnd
push
arpl
sub
movsl
orb
cmc
mov
shlb
mov
mov
mov
push
bound
repz
pop
or
int3
xchg
jl
popf
mov
mov
out
stos
pop
xor
int3
lea
rorb
shl
jl
mov
sbb
push
lock
into
aad
stc
dec
sbb
xor
sahf
mov
dec
jmp
pop
and
mov
mov
xchg
pop
test
pop
inc
notl
push
inc
std
and
and
add
inc
inc
leave
outsb
cmp
jb
jg
adc
shrl
faddl
adc
iret
mov
push
push
or
sbb
mov
test
lods
jle
mov
imul
int
pusha
mov
imul
fildll
adc
loope
cmpl
lea
cmpsb
sub
sbb
nop
add
dec
mov
or
sbb
sub
inc
sbb
fs
in
cmpb
in
sbb
inc
mov
sbb
mov
mov
cmpsl
add
inc
popa
jae
test
sarb
adc
sbb
mov
and
andb
fidivrs
mov
mov
rcl
or
movsb
push
add
xchg
xor
adc
push
and
jns
cmpsl
repnz
xchg
lods
xchg
dec
xlat
or
aad
or
sub
icebp
lds
outsl
sti
jnp
aas
push
mov
mov
jo
imul
es
fsubrs
lret
jmp
xlat
dec
or
inc
jmp
push
mov
jmp
xchg
js
popa
inc
xor
gs
xchg
push
lahf
call
dec
ret
and
or
jae
mov
jle
adc
cltd
jecxz
cmp
gs
adc
daa
ja
call
jnp
or
cmp
fnstcw
push
loope
out
or
stos
mov
push
mov
xor
xor
std
popa
sub
mov
add
lcall
shll
in
and
mov
mov
and
je
les
fbld
lods
mov
jecxz
add
jnp
pop
out
scas
xchg
sti
imul
test
repnz
add
lret
xchg
mov
mov
dec
xor
mov
xor
and
pop
or
push
stos
fisubs
mov
shlb
push
jo
and
mov
mov
mov
xchg
add
enter
dec
mov
mov
ficoms
jnp
call
or
pop
mov
insl
pop
pop
inc
aaa
aaa
data16
movq
arpl
lret
push
jbe
icebp
mov
stos
sub
outsl
shlb
jle
push
ret
cld
pop
and
aad
mov
loop
push
mov
xchg
in
mov
jo
cltd
sub
les
jo
inc
lahf
adcb
lods
inc
lds
inc
xchg
pop
inc
mov
add
idivl
xlat
pushf
out
clc
jle
es
jo
ljmp
push
lods
fimull
shl
lcall
cmc
xchg
mov
push
shlb
mov
cmpsb
test
mov
jb
stos
imul
lock
or
mov
push
imul
mov
div
outsb
and
sbb
pop
movsl
fcompl
adc
ljmp
cld
sub
jle
jle
nop
arpl
outsl
test
adc
pmaxsw
add
mov
clc
ds
mov
jnp
out
xor
stc
mov
or
sub
popa
jae
mov
aaa
arpl
clc
pushf
mov
adc
enter
sub
push
jbe
scas
out
sbb
xchg
in
jne
aad
roll
mov
icebp
scas
movsb
jge
insb
adc
loopne
das
inc
or
or
lock
jbe
add
cmc
lods
inc
push
outsl
aas
imul
lcall
adc
sbb
in
std
lods
aas
popf
inc
popf
and
and
out
lret
imul
imul
cmc
pop
inc
aam
and
lret
lret
loope
jo
shl
rolb
xor
jl
mov
xor
xlat
mov
cmpl
and
jp
pop
dec
out
pop
jge
sub
push
jnp
push
lods
rcll
rol
ds
jb
cmp
adc
idivl
out
popf
dec
xchg
cmp
outsl
jl
mov
test
rcrb
xchg
fadds
and
ret
popf
pop
jno
shll
sbb
test
lods
das
xchg
lcall
cltd
or
test
sub
add
imulb
push
mov
xchg
jg
jbe
test
push
xlat
mov
lock
add
push
mov
fcomps
push
mov
dec
gs
clc
xlat
xchg
popw
xchg
lods
lods
mov
ja
inc
push
push
mov
add
leave
or
dec
inc
cli
pop
push
mov
jmp
mov
cmc
stc
ljmp
loopne
fcmovb
adc
jge
xor
mov
mov
or
sbb
or
iret
repz
xchg
mov
pop
stos
movsl
mov
cli
out
inc
leave
xchg
cmp
push
jne
cmp
movsl
or
scas
rolb
mov
repnz
cwtl
mov
adc
or
push
or
sahf
into
or
mov
dec
mov
xor
fnstsw
aaa
out
daa
test
cmp
mov
sbb
mov
out
imul
das
in
mov
idivl
dec
loope
lods
int3
push
icebp
lahf
fwait
sarl
xsha1
cmpsb
leave
in
ficoms
jne
out
gs
xor
xlat
inc
mov
out
sbbl
pop
cmc
mov
push
adc
push
sbb
mov
and
pmuludq
leave
int3
xlat
filds
cmp
test
cltd
mov
cld
sub
imul
push
push
mov
sbb
mov
loop
xchg
push
ss
divb
mov
addr16
imul
mov
cmpsb
scas
outsb
sub
stos
jns
mov
shrb
scas
je
lods
push
mov
dec
sbb
mov
std
mov
xor
or
push
mov
insb
inc
lods
lods
aas
xchg
mov
addl
sub
leave
jbe
mov
fidivrs
xchg
adc
adc
fwait
lcall
inc
add
sti
xchg
cwtl
mov
pushf
call
sub
jge
adc
lock
jge
xchg
mov
repz
pop
in
outsl
xchg
ret
mov
fwait
lcall
xchg
adc
ror
adcb
inc
dec
or
out
cmp
and
mov
cltd
sbbb
fidivs
stc
test
stos
stos
inc
les
mov
inc
adc
adc
arpl
lock
notl
test
dec
xchg
mov
loope
push
mov
sub
imul
lret
xchg
test
mov
out
mov
xor
out
repnz
leave
pop
or
movsb
adc
push
pop
scas
push
cs
ds
fisubs
xchg
pop
jl
aad
ds
gs
in
loopne
insb
in
popf
mov
data16
cmp
sahf
hlt
lock
sub
faddp
fs
push
push
insl
sbb
aad
push
jp
inc
int3
in
pushf
inc
das
into
sbb
mov
dec
aaa
mov
jle
cmp
out
jl
mov
dec
popf
add
inc
and
dec
mov
cmp
xor
jmp
adc
xor
sbb
xchg
jle
jp
outsl
xor
push
sahf
sbb
pop
mov
lahf
mov
push
ret
out
fdivrs
push
lds
cmp
mov
xor
negb
cmp
jmp
or
inc
out
mov
mov
pushf
sbb
scas
cld
rcll
jnp
xchg
sbb
mov
cmp
pop
into
sbb
jle
shlb
cwtl
cmpsl
adc
rclb
push
into
fimuls
lcall
mov
jns
and
out
adc
nop
roll
push
mov
inc
leave
aam
popa
mov
pusha
stc
lock
push
push
pop
fldcw
xchg
mov
stos
lods
mov
cmpl
pop
push
lea
cs
addr16
test
loope
push
mov
push
xor
int3
ficoml
jbe
mov
jg
xor
std
mov
push
push
or
xchg
add
or
bound
jmp
es
loopne
js
jo
jl
mov
imul
fbld
mov
ja
imul
push
mov
gs
adc
daa
mov
dec
jbe
push
std
xchg
jne
xor
add
fcoml
notl
add
adc
mov
sub
fsubl
fdivrp
popa
ljmp
loopne
inc
aam
scas
jnp
cmp
sahf
cmp
pop
jbe
outsl
adc
pop
xor
push
sub
xchg
lret
push
push
sub
add
cmp
mov
mov
or
enter
cs
jmp
or
in
sub
mov
lahf
cmpsl
mov
or
push
daa
inc
mov
aad
lock
push
adc
mov
dec
cmp
mov
jo
outsl
cmpsb
pop
jns
pusha
repz
subl
or
movsb
mov
sahf
movsb
mov
or
loopne
xchg
lods
adc
and
add
je
stc
mov
mov
dec
stc
lds
ja
push
pop
sub
add
aaa
dec
in
inc
stc
outsb
cmpsb
pop
or
loopne
ret
xchg
jmp
push
sbb
gs
pop
sbb
mov
shrb
and
pop
shlb
push
pop
out
je
lea
push
and
mov
icebp
mov
push
xor
push
mov
jae
jmp
test
inc
repnz
arpl
icebp
xchg
or
into
mov
push
xor
cmc
or
lock
cmpb
dec
xor
mov
rcrl
xchg
cmc
jb
mov
aaa
dec
xlat
mov
outsl
dec
fstpt
adc
mov
or
lods
aas
adc
mov
into
lock
inc
xchg
and
test
pop
sub
jle
mov
jo
sti
and
inc
push
les
iret
in
scas
call
int3
lcall
mov
lds
mov
cmp
sbb
popf
push
lods
mov
mov
iret
aad
bound
gs
sub
das
in
xor
rclb
fildl
pop
fidivl
push
add
pop
jge
imul
je
jb
bound
pop
jg
dec
mov
loope
lret
stos
rcll
inc
adc
in
cmpsl
out
mov
xor
stos
jle
mov
inc
jl
xchg
mov
sti
xor
cld
inc
push
out
bound
sbb
mov
push
mov
cwtl
gs
in
push
xor
ret
ret
pop
mov
je
sbb
scas
xchg
mov
repz
in
ds
scas
fldenv
add
daa
mulb
cmp
add
push
pop
es
pop
dec
pop
rcr
xchg
jge
lods
fidivl
mov
lcall
jae
je
mov
insb
sbb
and
push
ljmp
mov
dec
xor
pop
stos
movsl
movsb
js
mov
mov
jbe
aad
or
xlat
in
adc
jle
jne
mov
ljmp
jno
mov
jle
mov
and
sbb
pop
push
insb
jp
jnp
ret
pop
std
repz
movsb
and
sub
shll
jnp
lret
or
out
ljmp
xor
cmp
xchg
xor
shlb
movsb
inc
cld
gs
fstps
push
scas
insb
inc
sub
push
cld
and
mov
inc
lds
add
cltd
rcrb
dec
aam
imul
mov
insl
enter
sbb
out
popf
mov
shll
adc
pop
cmp
sbb
js
je
loopne
jp
jecxz
cmp
mov
and
jle
inc
mov
ja
adc
sub
and
fmull
ss
cmp
adc
pushf
xor
fnstenv
cld
test
push
adc
lock
or
cs
ror
por
mov
repnz
or
sarl
mov
scas
aam
or
push
push
mov
int
shll
sub
inc
add
out
arpl
call
clc
in
xchg
aas
mov
insl
dec
sub
push
call
or
lcall
ja
cld
lcall
into
call
fs
fildll
cmpl
inc
or
push
pop
add
jnp
movsl
xchg
pop
mov
repnz
adc
push
lock
adc
mov
jg
inc
sub
cmp
or
jo
loopne
sbb
repnz
int3
popf
mov
push
je
xor
or
lcall
lcall
mov
cltd
outsl
stos
mov
ret
inc
rcll
shlb
mov
jnp
inc
ljmp
fadds
les
mov
aam
mov
cli
gs
mov
sbb
mov
and
xchg
pushf
push
adc
sub
jne
test
pop
inc
out
leave
scas
cmpl
aad
fmul
jg
sbb
xor
ret
das
cwtl
adc
rclb
es
inc
xchg
leave
pop
fnstcw
inc
xchg
sub
sub
xchg
outsl
xchg
lret
xor
mov
stos
mov
jo
and
mov
stos
lahf
fwait
push
das
in
xchg
sti
jne
neg
lds
pop
add
push
jne
insb
push
push
movsb
jae
lret
pop
fstps
mov
xchg
xchg
movsb
and
jg
cmp
fdivrp
mov
pop
movsl
xor
fmuls
in
ret
push
aaa
nop
arpl
call
xchg
movsl
out
pop
imul
insl
cmp
mov
sub
or
in
dec
mov
cmp
stc
int
mov
movsb
shlb
test
push
cmp
sti
sbb
test
push
xor
jmp
addr16
jecxz
stos
add
or
sub
leave
inc
mov
or
sub
lock
mov
jbe
mov
jmp
hlt
lahf
mov
cmc
stc
push
adc
bnd
xor
into
mov
les
cmp
and
insb
push
adc
pop
push
dec
xor
ljmp
jmp
in
aaa
adc
pop
imul
push
in
subps
pop
addr16
pop
xchg
jge
and
ss
lods
fwait
sarb
pop
xchg
loope
insl
es
xor
adc
push
xor
lahf
popa
rcr
mov
popa
in
lret
out
inc
or
fisttps
insb
lea
in
loop
sbb
push
jno
fwait
out
jae
sbb
js
xor
jo
jecxz
xchg
shll
mov
data16
or
mov
xor
loop
inc
scas
xor
outsl
pusha
dec
pop
mov
sub
js
sti
push
and
dec
test
mov
adc
fldenv
cmpsb
add
in
xchg
movsl
clc
inc
cld
mov
fs
inc
mov
sbb
cmp
das
movsb
add
fistpl
es
push
out
ds
das
and
jno
lock
add
push
iret
pop
lds
xorb
lock
cwtl
xchg
xchg
test
xor
leave
cmp
add
mov
popf
add
sbb
mov
mov
pop
push
pop
dec
popa
jo,pn
sbb
pushf
xor
adc
scas
adc
mov
xchg
cmp
push
in
js
mov
cmpsl
xor
jl
ja
push
shrl
andb
js
add
lret
shr
insl
pop
mov
mov
sarb
hlt
mov
lret
inc
jne
mov
les
sub
dec
sub
xor
jmp
icebp
fwait
gs
jnp
xor
jp
sub
into
shll
lods
dec
popa
and
popf
neg
int
push
sub
xchg
push
xor
pop
mov
add
pop
lahf
mov
jns
pop
and
mov
insl
lods
add
lds
push
das
pop
andb
pop
xor
iret
jnp
enter
pop
push
addb
sahf
xor
cs
push
pop
or
popa
cmp
push
mov
test
jp
repz
adc
push
out
add
xchg
scas
outsl
js
add
fmuls
jg
adc
xchg
pop
stc
inc
fs
js
adc
rcrb
jl
adc
mov
lea
in
push
js
dec
les
ja
jg
int3
aam
lret
mov
inc
ret
pop
mov
adc
adc
mov
inc
push
xchg
cmpsb
lods
dec
mov
pop
pop
jbe
dec
lea
xchg
or
jl
mov
lea
or
stos
jae
xchg
jo
dec
addr16
cli
or
adc
inc
shr
push
lock
addr16
push
gs
mov
jbe
and
test
lock
cli
clc
adc
es
xchg
lret
insl
inc
and
shll
lret
repnz
icebp
imul
jae
cmp
adc
sbb
sbb
push
jae
pop
sbb
neg
mov
fwait
mov
lock
adc
cld
push
leave
mov
ficoms
repz
scas
leave
jge
or
fisubs
out
xchg
sub
inc
push
pushf
imul
call
mov
in
xchg
test
mov
fsubp
shlb
pop
loopne
xchg
or
dec
mov
orb
pop
mov
push
sub
nop
add
push
mov
cld
or
jecxz
jg
les
dec
pop
jns
in
and
mov
stc
pop
ja
cmp
push
push
fdivrs
mov
andb
inc
sahf
into
bound
cmp
aas
push
test
cmp
push
push
aaa
fiadds
xchg
rcrb
in
push
dec
fidivs
lcall
in
jecxz
adc
lea
xchg
inc
das
mov
les
xor
fistps
and
mov
popf
cmpb
dec
aam
pusha
add
pop
push
xlat
into
mov
pop
jae
jle
sbb
lods
pop
jmp
push
fdivs
negb
test
cwtl
cmpsb
das
cmp
push
ja
rorl
cli
notb
rcrb
rclb
rorb
shll
iret
inc
fsave
mov
and
sub
cmp
or
popa
sbb
outsb
sbb
ja
stos
adc
xor
ss
mov
xor
pusha
push
inc
movsb
cmp
clc
sbb
xchg
leave
sub
popa
adc
notb
outsb
fs
inc
ret
cmp
int
fstps
jmp
push
jmp
mov
sarl
mov
sbb
int3
negb
and
push
push
pop
adc
enter
push
and
adc
dec
sbb
jno
adc
push
aas
lret
adc
into
das
mov
jmp
sbb
sbb
outsb
dec
sbb
shll
stos
daa
scas
cmp
shl
ficoms
pop
jbe
mov
jnp
adc
sub
mov
pusha
inc
rcll
stc
inc
jl
fmuls
cmpl
mov
add
or
inc
and
mov
stos
sub
xchg
into
jnp
lds
rcrb
mov
mov
loope
or
adc
dec
stos
push
xlat
roll
sub
jbe
jmp
sbb
pop
push
sub
mov
imull
xor
push
jae
fldenv
jg
aaa
mov
popf
imul
cmpsb
sahf
xor
push
xchg
pushf
andb
fistps
imul
pop
sub
push
mov
jns
push
push
xor
sub
push
pop
mov
jbe
xchg
icebp
mov
scas
pop
sbb
inc
popf
rolb
dec
xor
imulb
inc
mov
int3
adc
lcall
xchg
sub
xor
fadds
cwtl
test
and
xchg
dec
sbb
inc
sub
testl
mov
sub
jmp
pop
jns
add
xchg
lea
cmp
cmp
push
sbb
xadd
nop
dec
cmp
in
pop
mov
mov
jns
xchg
sbb
adc
out
mov
enter
xchg
inc
mov
mov
lods
lcall
inc
adcb
paddq
outsl
xorl
adc
insb
lea
xchg
push
sbb
dec
xchg
mov
lret
push
fs
fs
jl
jecxz
jae
scas
cmp
out
rorb
lcall
mov
popf
daa
pop
scas
sbb
shrb
or
sbb
inc
or
inc
movsb
cmp
stos
dec
mov
lock
aad
push
dec
js
adc
scas
dec
xchg
dec
lods
cmp
scas
or
jo
mov
dec
mov
inc
repnz
icebp
cmc
adc
push
mov
xor
lret
mov
mov
scas
lret
mov
jge
fdivs
dec
fisubrs
mov
in
shlb
out
aad
ja
cmp
xor
or
repz
cmp
loop
ret
aam
push
ss
shll
jl
arpl
subl
xchg
dec
ds
xchg
push
loope
fstpt
inc
push
cmp
stc
mov
push
push
loopne
aaa
bound
pushl
mov
js
dec
int
mov
mov
pop
repnz
clc
orb
cwtl
mov
push
mov
ficoms
jl
pop
cs
push
jbe
lret
cli
fiaddl
aas
and
lret
jg
push
pop
lods
rcrb
cltd
fsubr
stos
std
add
orl
std
push
fdivl
add
jns
ret
sbb
sbb
jne
leave
xlat
imul
jge
inc
inc
por
mov
push
lock
add
aad
out
jae
adc
or
fidivrs
stos
stos
or
and
imul
mov
test
loop
fmuls
out
dec
add
or
notl
stc
mov
fs
ret
or
mov
test
jae
and
and
fldcw
mov
jo
out
int3
add
mov
jg
in
mov
xchg
scas
insb
pop
add
xchg
ror
je
jbe
mov
stos
dec
arpl
jae
cmc
push
addb
lcall
mov
mov
ficompl
lods
ret
dec
lods
jno
or
xchg
pop
sbb
mov
sbb
js
imul
insl
pusha
shr
popa
ja
jmp
add
add
jnp
adc
out
movsb
in
les
xchg
test
push
inc
mov
inc
pop
hlt
xor
sbb
loope
out
push
sbb
jmp
movsb
ret
mov
and
fst
mov
stc
pop
fxam
inc
pop
mov
xor
divl
mov
mov
std
sbb
cmp
addl
test
aad
pushl
int
outsb
xor
sbb
arpl
inc
xor
and
fisubs
test
pop
mov
sbb
and
int3
in
fsubrs
out
popf
fnsave
dec
push
mov
cmc
in
gs
frstor
pop
dec
stos
icebp
or
imul
sbb
xor
pop
test
ljmp
cltd
popf
repz
fimuls
jecxz
fsubl
or
daa
and
daa
and
stc
outsb
mov
pop
out
pop
or
push
fcmovnu
test
lods
xchg
pop
mov
jge
inc
andb
into
stos
xor
ss
jmp
sbb
sti
icebp
mov
pop
shlb
dec
test
push
push
push
jecxz
insl
adc
test
cmp
xor
js
andb
nop
dec
lods
jle
jge
cmp
into
sbb
into
xchg
repz
ljmp
iret
push
dec
add
jle
inc
cmp
push
jae
xor
aam
out
movsl
pusha
call
lahf
popf
cwtl
icebp
adc
inc
xchg
inc
popf
aam
sbb
xchg
mov
int3
xchg
pop
and
std
mov
and
sub
add
sub
scas
imul
mov
sbb
enter
fists
mov
ds
testb
pop
test
imul
enter
es
push
arpl
cmp
stc
jge
in
inc
mov
mov
mov
mov
xor
mov
push
out
ret
in
push
ret
imul
fstl
pop
shrl
add
fptan
rorl
xor
mov
lds
pop
or
mov
sub
call
hlt
fucom
dec
pop
fdivl
lret
pushf
in
fwait
sbb
cmp
std
xchg
loope
lock
out
ret
adc
mov
sbb
fstps
lock
fbstp
jb
sub
cmpl
lcall
push
mov
in
pop
sub
jle
lret
mov
dec
and
pop
inc
cmp
mov
dec
test
jmp
fadds
add
pop
pop
cmpsb
push
movsl
cmp
shll
paddusw
andb
pop
xor
jge
xor
mov
cmp
repz
mov
arpl
dec
lahf
pop
mov
push
xor
mov
dec
test
arpl
adc
xor
cwtl
popa
sahf
bound
daa
lods
sahf
sti
rcrl
jg
loope
inc
sarb
xor
xor
rcr
ss
sub
mov
xchg
mov
adc
les
es
sbb
js
cmpl
pop
fisttpll
rolb
lods
pop
xchg
sub
pop
xchg
icebp
stc
das
sub
test
adc
inc
push
int
pop
mov
mov
xor
sbb
adc
jae
push
in
pop
or
push
cmp
mull
xor
fmull
pop
out
mov
ss
es
dec
lret
push
pmaxsw
inc
jns
int3
cmp
or
push
fadds
sar
sub
aad
cmpsl
pop
aam
push
push
fs
test
loope
jo
mull
or
sahf
ficoms
pop
in
popa
cmp
imul
std
push
push
sub
adc
in
mov
xchg
inc
cmp
aad
ja,pn
push
call
sarb
add
arpl
mov
cmp
das
or
sti
jmp
lcall
mov
push
add
rorb
pop
push
xor
add
pop
xchg
das
jecxz
sub
fisubs
int3
xchg
lcall
jo
jnp
xchg
pop
data16
xchg
das
push
and
mov
mov
repz
push
call
jns
inc
and
adc
xor
pop
xor
lret
fs
pop
aad
lds
dec
jo
test
aas
pop
sbb
dec
jle
js
inc
push
mov
add
xor
aas
aaa
hlt
jno
outsb
aam
add
hlt
pop
cmp
shll
mov
lret
movsl
insl
divb
stc
pusha
pop
sub
mov
mov
in
aas
stos
in
sahf
lahf
jmp
pop
adc
sbb
sub
scas
inc
aad
cmp
in
rcrl
js
pushf
lock
adc
das
idiv
ja
daa
dec
repnz
and
pop
shrb
clc
xor
jbe
lds
ja
loope
lcall
inc
loop
ficoml
aad
stos
imul
inc
dec
jbe
jns
or
sub
pop
dec
inc
mov
js
add
pop
add
in
mov
inc
mov
sub
mov
xor
ret
dec
xlat
cs
pop
in
loop
push
ljmp
or
addl
sub
pop
push
fsubrp
aam
and
cmp
fldenv
addr16
imul
lods
dec
adc
sub
ret
loop
out
adc
pop
xor
das
lock
fidivs
push
lock
stc
sbb
cltd
xchg
aaa
rcrb
sub
mov
jmp
mov
or
pop
arpl
into
pop
inc
mov
aad
jecxz
sbb
lods
aam
mov
dec
push
jno
mov
clc
inc
pop
mov
push
insl
movsl
inc
lock
scas
push
dec
cmp
mov
fsubl
dec
or
in
mov
and
shll
dec
cmove
ja
jae
sub
push
in
add
sbb
pop
outsl
shlb
test
xor
clc
push
mov
daa
test
es
mov
fcmovbe
out
sahf
sub
popf
jle
cli
xchg
cli
ret
aas
xor
push
fstl
dec
loope
bound
lret
lcall
xor
jmp
push
lods
adcb
test
or
cmpsb
mov
out
or
add
or
jns
jno
mov
inc
mov
addr16
sahf
sub
hlt
xchg
push
xchg
sub
xchg
sbb
movsb
xor
gs
xchg
out
andl
dec
mov
mov
ret
xchg
int
mov
lcall
in
ja
je
add
xor
xor
out
xchg
mov
fisubrs
mov
push
gs
mov
mov
mov
ljmp
adc
mov
and
cltd
cwtl
pop
xor
in
fmull
inc
iret
loopne
mov
gs
xor
mov
sti
or
and
fidivs
push
dec
sub
fldl
mov
push
jmp
xchg
cwtl
inc
xchg
xchg
mull
in
clc
mov
inc
mov
cmp
jecxz
mov
inc
mov
sbb
add
mov
bound
lods
cmp
icebp
movl
mov
lods
fucomip
jnp
mov
jg
repz
cmp
push
adc
scas
insl
call
push
loopne
addb
mov
decl
and
lods
xchg
ss
dec
add
stos
dec
or
test
cmpsl
cltd
fsubl
testb
rcrl
dec
ja
pushl
nop
add
xchg
jmp
push
test
repz
or
mov
push
outsb
and
stos
xlat
adc
xlat
bound
xchg
sub
jmp
neg
out
fldl
addr16
inc
lods
sub
jecxz
fwait
leave
bound
xchg
xlat
out
pop
out
scas
dec
xlat
inc
pop
dec
add
pop
cmp
lods
pushf
das
ljmp
inc
or
adc
cwtl
mov
scas
cmc
leave
cmp
add
mov
outsb
pop
adc
out
aad
pop
hlt
pop
sub
es
rcl
repz
xor
cmp
or
mov
insl
inc
ret
xchg
adcb
add
sbb
ja
cmc
popa
dec
imulb
std
sbb
lahf
cmp
cmp
adc
cmp
inc
cli
jno
lret
ds
and
cli
bound
adc
sbb
shll
test
call
cli
pop
sahf
fisubs
push
mov
or
int3
add
or
or
sbb
sbb
xchg
fldl2e
out
aaa
add
mov
sbb
mov
arpl
hlt
jne
xor
cltd
fcoml
jne
rcrb
ret
sub
cmc
or
push
dec
adc
dec
into
ja
rcll
pop
leave
jnp
jno
pop
aam
ret
jg
ds
nop
xor
jns
push
add
dec
shl
arpl
inc
xchg
mov
out
mov
push
sub
loope
add
in
xchg
aad
cmp
xchg
add
sarl
adc
or
cltd
push
adc
rep
aaa
jne
fbstp
xchg
mov
pop
inc
jbe
xor
ja
dec
add
sbb
and
mov
jmp
cmc
stc
imul
push
pop
sbb
pop
repnz
pop
adc
cmpsl
push
cmpsb
xchg
jl
adc
pop
daa
repz
mov
mov
mov
push
sub
jecxz
jle
pop
fldcw
or
xlat
xor
test
cmp
inc
push
mov
cmpsl
mov
adc
mul
jns
lret
adc
xchg
cmpsl
lret
scas
insb
icebp
jmp
add
jb
dec
mov
sub
test
lea
mov
mov
xchg
imul
pushf
movsb
test
mov
dec
jne
cmp
adc
xor
jp
cwtl
add
stos
fisttps
cmp
push
js
adc
in
mov
in
call
call
out
xchg
or
arpl
popf
das
pop
arpl
int3
lock
or
pop
mov
jne
inc
shll
lret
daa
lods
lahf
jns
cmp
jae
subb
dec
cmp
sub
in
out
jmp
dec
cmp
xor
push
cmc
inc
int
pop
adc
mov
dec
sbb
subl
divl
lret
fidivs
jecxz
out
repz
xchg
adc
mov
dec
in
inc
xchg
sub
mov
mov
in
popf
lret
pop
and
arpl
sub
ficoml
lea
dec
inc
lods
push
jge
mov
test
or
mov
dec
dec
sub
movsl
xor
icebp
dec
cltd
sub
testl
cld
aaa
and
insl
cwtl
cmc
lret
leave
arpl
pop
sub
fldcw
xchg
fmull
dec
jae
jns
fstps
fcomps
cmpl
sub
push
or
pop
sub
xor
test
out
mov
inc
ljmp
and
cmpsl
ror
pop
jne
pop
or
jno
pusha
add
fcoml
or
loop
push
xchg
fists
loope
out
hlt
sbb
int
ds
mov
push
in
mov
stos
inc
pop
xor
push
mov
jle
mov
or
push
xchg
ja
shlb
or
sbb
add
jbe
in
scas
into
mov
jae
jno
cmpsb
cwtl
test
les
mov
jo
mov
cli
sbb
in
jle
aaa
pop
mov
push
js
call
insl
cltd
lods
and
popa
negl
cmp
lods
xchg
mov
aam
jecxz
cmovp
xchg
push
and
mov
xor
jge
clc
and
mov
xchg
lret
adc
scas
test
cmp
into
lahf
icebp
repz
and
pop
dec
sub
fadd
addr16
pop
or
mov
pop
push
add
mov
sti
rorb
mov
jg
inc
out
pop
jae
fnstenv
add
icebp
jo
mov
fadd
pop
mov
imul
lds
or
enter
icebp
mov
inc
rsqrtps
rclb
movsl
aaa
jmp
mov
pop
addb
sub
mov
aam
scas
adc
jae
fdivrs
sahf
pop
push
and
stos
into
popa
mov
les
fistps
sbb
test
push
cmp
inc
sbb
dec
pop
mov
or
js
addr16
test
pop
inc
es
rep
and
imul
cwtl
cmc
out
jbe
cmpsb
int
jno
jb
push
sbb
les
jl
pop
cltd
mov
fbstp
ljmp
outsb
or
in
lods
popf
stc
ds
mov
mov
jne
insl
jbe
in
addl
stos
fcoms
push
inc
lahf
cld
lcall
pop
bound
int3
push
andl
xchg
jo
cmc
jmp
dec
xlat
test
in
test
ret
xor
jo
mov
fistpl
or
rol
lret
leave
pop
jae
pop
ds
ret
adc
loope
aad
push
movsl
push
cmp
insb
sbb
sbb
mov
inc
mov
pop
int
push
pop
mov
lods
mov
inc
out
inc
rcrl
cs
lea
repz
push
inc
cmp
out
mov
push
mov
inc
or
orl
jo
jecxz
mov
les
sub
jno
stos
rcll
das
ljmp
repz
cmp
sti
sub
ds
sarb
mov
pop
cmpsb
pop
jno
fidivl
add
dec
pusha
adc
xchg
aaa
mov
mov
sahf
adc
les
sub
std
xor
sub
cwtl
push
xchg
mov
dec
out
fucomp
lea
push
lock
hlt
xor
dec
pop
outsl
ficompl
jl
mov
sahf
ljmp
loop
and
movsl
xchg
adc
inc
cmp
sbb
out
leave
rclb
adc
shll
adc
call
pop
clc
sbb
aad
mov
push
in
adc
push
push
cmc
mov
pop
inc
out
sbb
xor
cmp
push
cmp
xor
setp
gs
lock
mov
pop
jp
jbe
add
stos
dec
mov
cmp
inc
sbb
mov
aam
movsb
flds
incb
incl
mov
data16
sahf
mov
xor
pop
movsb
lcall
xor
mov
sbb
dec
mov
push
push
pop
fchs
aas
cltd
mov
mov
loope
pop
inc
cmp
nop
mov
aam
xchg
fwait
jecxz
dec
mov
jo
adc
push
movsb
gs
lea
mov
popa
and
sub
shlb
jge
adc
lods
xchg
in
dec
fidivs
mov
imul
lds
adcl
stos
lods
mov
mov
cwtl
inc
jno
dec
dec
mov
and
mov
in
sbb
ds
mov
mov
pop
xchg
incl
cmp
dec
inc
cmpsl
and
bound
push
in
cld
ret
pop
xchg
push
pop
movsb
aam
jbe
inc
pop
loopne
inc
icebp
and
mov
gs
and
std
pushf
int
jge
mov
sbb
sbb
jl
push
out
xchg
sub
test
inc
lods
mov
mov
inc
fwait
mov
adc
mov
xor
lods
sbb
jno
test
xchg
add
cld
int
push
adc
adc
mov
jle
pop
mov
movsl
pop
and
fsubrs
mov
xor
xor
in
xor
cmp
scas
dec
fidivrs
push
or
or
daa
mov
mov
mov
xchg
fistpl
push
fwait
dec
or
cmp
inc
lcall
sub
mov
sub
lahf
cmpsb
loope
push
mov
pop
into
inc
jecxz
jmp
movsl
stos
push
sbb
ret
nop
jge
pop
addl
loope
push
fnstenv
cmpsb
mulb
fnsave
push
xlat
testb
out
mov
insl
or
pop
fsubrs
or
arpl
push
stos
xchg
xchg
mov
pop
nop
icebp
fiadds
mov
jb
inc
jmp
popf
cmpb
pushf
pop
test
ret
shl
jecxz
inc
cs
fimuls
testb
dec
and
in
sub
adc
es
cli
xchg
add
imul
or
in
loopne
jl
dec
push
aam
cltd
or
sbb
lcall
xchg
shlb
cmp
incb
pop
inc
inc
and
mov
push
iret
test
fldl
bound
hlt
imul
fdivrl
or
div
lock
push
addr16
ss
or
cli
jmp
dec
cmp
ljmp
cmc
mov
fwait
mov
aas
and
ret
pop
aas
or
ret
xchg
mov
adc
cmp
in
mov
push
cltd
test
sbb
sub
and
xchg
loope
sbb
pop
or
stos
aam
lock
and
shll
jo
mov
mov
mov
ja
and
jle
lds
in
stos
inc
jb
mov
out
cmc
mov
divl
push
adc
sub
ja
xor
pop
fucomip
repnz
jns
bts
mov
outsl
jecxz
dec
clc
negl
xchg
mov
cmpsb
cmpsb
scas
pop
cmpsl
adc
in
iret
push
sbb
adc
loopne
mov
xor
fidivrs
lret
and
jg
aam
add
jnp
sbb
xlat
push
mov
mov
iret
sbbb
std
jp,pn
xchg
flds
jns
iret
in
inc
imul
mov
imul
mov
cmp
push
push
pop
nop
push
test
pushf
imul
lea
lret
ljmp
inc
inc
mov
cmpsb
and
sarb
or
das
and
lock
int3
imul
loopne
test
xor
jbe
sub
nop
jle
mov
outsl
imul
insb
sbb
add
out
xchg
adcb
sahf
mov
rcrb
lods
ljmp
es
dec
mov
std
cld
scas
pop
mov
out
stc
outsl
jbe
push
es
dec
test
cmp
pop
fwait
out
ret
test
pop
push
mov
mov
sub
push
lea
mov
jbe
insl
repnz
pop
mov
mov
popf
mov
shlb
add
mov
fildl
and
push
lods
adc
mov
add
cmp
fs
mov
rorb
adcb
jb
mov
pop
jl
sbb
in
mov
sub
hlt
ss
pop
xchg
pop
fsubs
leave
popfw
pop
mov
in
sbb
pop
sbb
fmull
push
rolb
jl
dec
cmpsb
ljmp
mov
das
fisubrs
pop
in
jns
icebp
cmc
mov
mov
fdiv
jae
add
lods
fwait
add
pop
jb
ss
cwtl
es
int
mov
sub
xor
mov
cmp
sub
leave
pop
popa
inc
ja
jmp
sub
not
mov
mov
inc
ljmp
jns
and
mov
sbb
xchg
pop
dec
inc
sub
out
lods
xchg
cmpsb
cmp
enter
pop
je
adc
jnp
cmpsl
stc
inc
in
gs
aas
pop
jle
rcrb
test
jg
jge
and
xor
lea
cmp
adc
xor
push
adc
sub
sub
fdivl
pop
or
push
or
test
repz
dec
test
inc
xchg
mov
xchg
sub
stos
mov
or
sbb
xchg
sub
ja
lahf
mov
mov
lods
mov
push
or
inc
push
add
pop
imul
out
dec
out
lss
sti
jp
push
add
push
pusha
cmp
lock
les
inc
jb
or
cmp
testl
lds
push
mov
and
idiv
push
addr16
rcr
sub
loopne
sbb
jmp
dec
lods
add
dec
rorl
scas
cmp
subb
ret
into
fs
xor
imul
out
out
fucom
nop
inc
jg
out
popf
cmpsl
cs
fs
loope
pop
adcl
add
mov
mov
cmc
adc
or
rclb
xlat
je
scas
jae
mov
pop
inc
nop
cmc
fcoms
adc
movsb
imull
push
and
jb
insl
push
bound
mov
sub
cmp
nop
and
test
fwait
dec
add
mov
cmp
ret
sbb
outsl
pop
divl
aas
push
sub
in
mov
jo
sbb
sub
inc
ret
js
lods
mov
imul
out
repnz
imul
pushf
dec
jne
adc
arpl
imul
das
pop
add
mov
inc
out
cmpl
ja
arpl
nop
stos
imul
rep
iret
out
mov
and
xor
cltd
sub
negl
adc
repz
sbb
or
jp
mov
sti
jmp
rorb
cs
cs
xor
fsubrp
jge
repz
pop
mov
mov
mov
or
popf
push
mov
addr16
mov
stos
icebp
cmp
dec
mov
cmpb
inc
adc
fadd
stos
in
sti
mov
pop
xchg
xchg
xchg
jae
in
xchg
into
jae
jae
and
rolb
jb
add
mov
aad
js
outsb
cs
jns
sahf
push
psubb
lock
mov
sub
add
add
and
out
in
popa
fisubrl
jecxz
rorb
mov
orb
pop
ret
movsb
loope
outsl
xor
cltd
fstpt
test
mov
pop
sar
adc
cmp
add
adc
nop
mov
adc
or
ret
xchg
fdivl
addb
hlt
jbe
rcll
add
hlt
stc
push
bound
jmp
push
sub
inc
lret
inc
cld
enter
outsl
fs
pop
repz
add
into
cmp
rcll
dec
orl
jp
insl
xchg
xorl
sbb
sbb
shl
outsl
lods
pusha
and
mov
icebp
xchg
lock
dec
call
lods
xchg
cmpsl
add
push
jle
insb
sub
stc
in
out
insl
test
outsb
loope
ja
loopne
inc
outsl
xchg
stc
pop
inc
jnp
icebp
xor
jns
aad
lret
outsb
cmp
cld
mov
inc
inc
iret
sbb
jle
fcoms
add
fdiv
rol
push
ss
jle
hlt
into
mov
les
mov
arpl
dec
cmp
fimuls
xchg
inc
cmp
or
lcall
sbb
dec
sbb
inc
dec
mov
into
sub
inc
xor
lock
repnz
and
push
lds
push
jmp
inc
in
xorl
imul
push
sub
test
loopne
or
fidivs
sbb
mov
sub
fwait
adc
das
xor
enter
push
imul
aad
test
test
sbb
pop
inc
ficoml
divl
out
filds
data16
repz
lods
add
sti
xchg
mov
xor
test
daa
mov
cmp
xor
lret
in
sub
hlt
mov
mov
xor
fs
cmovnp
iret
sub
and
dec
xor
xchg
out
sub
xchg
cmp
aad
jno
inc
add
jbe
add
les
xor
rcrl
pop
movsl
mov
inc
rcrl
mov
mov
mov
mov
mov
aas
scas
sbb
pop
cmpsb
and
call
xchg
ss
scas
out
scas
xchg
sbb
fisttpl
xchg
mov
test
inc
and
xchg
or
fnstenv
add
pop
sub
cmp
fcoms
rorb
sbb
adc
fisubrl
sbb
inc
mov
pop
addr16
mov
sub
cmc
pop
insb
mov
xor
mov
mov
dec
movsl
xor
test
test
nop
push
stos
and
ss
insb
fadds
cmp
daa
arpl
das
repz
insl
jg
icebp
xor
pop
push
mov
mov
inc
fwait
pushf
test
xchg
ret
sti
loope
fildll
dec
sbb
orl
adc
sbb
inc
popf
adc
and
or
sub
and
pop
mov
and
adc
rcl
mov
cli
mov
xor
pop
sbbb
pop
loope
stos
sub
or
pop
pop
inc
daa
aad
pop
test
aas
jb
mov
adc
stos
or
outsl
adc
cmp
call
pusha
pop
fs
mov
ret
ljmp
sarb
mov
shl
imul
jae
in
stos
xchg
mov
xchg
xchg
sub
push
adc
pusha
push
jbe
ja
hlt
or
movsl
dec
add
insl
stc
jbe
dec
in
inc
xor
xchg
rorl
sti
xchg
cmpsb
fs
arpl
loop
push
inc
loopne
bound
fists
add
pop
lock
pushf
lds
push
dec
jno
cli
add
std
subl
pop
hlt
in
testl
inc
movsb
xor
add
or
lods
mov
pop
enter
sub
adc
je
jle
mov
push
mov
mov
pop
push
add
fyl2xp1
shrl
js
sub
cmpsb
or
leave
or
sbb
movsl
push
cmc
jl
fiaddl
fisttpl
mull
std
and
orb
mov
outsl
adc
scas
insb
scas
jg
sub
mov
adc
mov
pop
into
imul
lret
rorl
nop
push
and
mov
adc
rolb
or
xchg
jns
negl
sub
shlb
jbe
mov
pushf
in
scas
subl
inc
faddl
sbb
dec
inc
cmp
inc
mov
lret
push
push
call
sti
sub
xor
and
xor
push
fidivl
ret
mov
and
push
xchg
push
pop
popf
ljmp
mov
mov
mov
lds
loope
popa
cld
cs
dec
cmp
roll
je
shll
imul
mov
test
or
or
and
mov
in
ljmp
dec
sti
test
jne
inc
rcll
dec
adc
dec
inc
push
xorl
fcmovnb
sbb
cmp
in
ret
and
inc
jno
scas
lret
or
in
and
jmp
lahf
loope
mov
add
sub
sub
push
sub
int3
lods
js
fiadds
hlt
mov
je
jecxz
sbb
jb
out
imul
and
in
jne
in
sbb
pop
jb
add
enter
loopne
popa
lock
lahf
add
mov
adc
add
daa
inc
movsl
dec
mov
cs
je
loope
das
inc
lods
jmp
pop
mov
jle
push
repnz
mov
xchg
xor
pop
int
aaa
push
fstpl
push
mov
inc
cs
mov
aam
push
popf
jmp
or
loop
decb
cwtl
ficomps
repnz
mov
sbb
fsts
sub
mov
cmp
mov
call
addr16
ror
into
ss
sub
push
into
push
iret
cmpsl
je
fisubl
pop
jmp
push
addl
lret
daa
cmp
loope
lahf
out
aad
mov
lret
test
mulb
notb
adc
xchg
and
stc
stos
sub
int3
adc
andl
xchg
enter
fildl
out
sub
or
lret
mov
push
or
mov
in
or
mov
sbb
jbe
mov
inc
outsb
inc
ret
dec
ret
outsl
das
dec
push
push
nop
fstp
sbb
sbb
pop
movsl
out
xlat
xor
lea
ret
das
mov
in
mov
jnp
xor
dec
sbb
sub
popa
fucomp
add
fsub
out
loop
outsl
or
add
mull
mov
sbb
orps
popf
cld
daa
mov
xchg
arpl
pop
xor
addb
cli
add
cmp
sbb
mov
adc
les
fcmovb
scas
jbe
sahf
pusha
test
aam
inc
stc
adc
pop
stos
bound
lock
in
pop
xchg
idivb
jno
repnz
add
or
inc
clc
fxtract
cmp
cmp
movsl
jge
or
mov
clc
aaa
adc
jne
pop
jo
pop
cltd
lods
sub
insl
adc
int
adc
xor
or
lret
mov
out
lds
cmp
dec
pop
dec
mov
clc
cmp
mov
mov
cltd
icebp
aad
sub
loope
dec
insb
cmp
sub
cmp
xchg
je
cltd
les
dec
aad
and
lea
jb
xorb
jbe
xchg
cmpsl
mov
gs
mov
dec
sbb
push
pop
sbb
imul
lods
sbb
imul
orb
lret
cmc
jno
adc
or
pop
push
push
ds
mov
es
pop
loope
in
or
pop
fmuls
in
ja
subl
rclb
aaa
jae
into
add
jle
mov
pop
mov
in
das
rcrl
aaa
shrl
xchg
pop
mov
inc
imul
jecxz
lret
pop
ffree
ret
mov
js
aaa
subb
xchg
sbb
sbb
or
icebp
sbb
push
cmp
push
sbb
daa
nop
xchg
iret
fcoms
mov
ss
fdivrp
jle
daa
xchg
imul
ret
jnp
pop
mov
fnstenv
mov
es
jno
lods
adc
mov
sub
xchg
sub
ret
inc
fld
lds
out
fwait
lret
iret
inc
mov
lods
inc
cltd
movsl
push
movsb
scas
cmc
xlat
push
scas
jp
xchg
and
sbb
hlt
leave
test
test
movl
cmp
xor
and
enter
fcoms
xchg
popf
mov
lods
adc
jl
icebp
xor
int3
pop
andl
pop
mov
add
pop
mov
nop
sbb
test
jno
lods
sti
adc
lods
or
lret
mov
dec
jge
mov
insl
ja
rcrl
lods
loop
fldcw
and
inc
rcrl
xor
sub
stc
into
fldenv
inc
or
jo
in
scas
xchg
into
lret
mov
dec
fsts
inc
inc
scas
jmp
sbb
out
add
orl
sub
jmp
insb
inc
add
add
push
lcall
sub
outsl
mov
mov
push
sbb
les
rorl
xor
js
out
insl
push
out
jno
loop
dec
jnp
fadds
fldt
addr16
outsb
cmp
xchg
pushf
movsb
jg
dec
lds
jl,pn
xor
xchg
loop
mov
jge
jae
inc
sbb
mov
jecxz
add
pop
popf
dec
adc
jg
xchg
dec
in
jb
jp
dec
repz
aad
mov
or
int
divl
adc
negb
xchg
add
jg
cs
sbb
scas
and
or
push
pushf
xor
ja
pop
jmp
js
push
dec
ss
cmp
out
scas
xchg
mov
xor
stc
hlt
lods
sub
jne
std
jmp
mov
mov
inc
mov
int
lock
dec
les
rolb
cld
mov
outsl
adc
call
and
pop
mov
jmp
xchg
cmp
ror
jl
movsb
pop
xchg
rolb
cmc
ljmp
stc
jle
divl
lods
adc
push
fsubr
in
inc
stos
aaa
jo
adc
cmp
movsb
dec
mov
mov
outsb
add
in
mov
cmp
sbb
pop
adcb
xchg
xchg
stos
xor
sar
sahf
dec
call
lahf
std
xchg
push
or
in
das
and
inc
xlat
ret
sbb
mov
cmp
mov
inc
fisubrs
sti
push
adc
aas
ret
movsb
rorl
scas
in
ja
cwtl
std
xchg
rcr
mov
cmp
xchg
sbb
mov
mov
add
jno
pop
add
in
sub
lods
shl
and
sbb
or
bnd
in
loopne
inc
es
mov
sbb
lret
call
xchg
sbb
mov
mov
push
jl
xchg
or
xor
xchg
cmc
sbb
or
inc
cmpsl
mov
xor
lcall
push
push
xchg
loope
and
fldl
les
pop
mov
fstl
test
pop
rolb
les
js
test
xchg
and
jmp
cld
ljmp
mov
cmp
and
add
cmp
push
out
mov
mov
cltd
fdivrl
inc
stos
mov
pusha
add
lcall
push
xchg
repnz
dec
dec
ret
and
sbb
cld
cmp
sub
jb
idivb
imul
nop
add
jmp
jnp
lcall
mov
push
xchg
fwait
nop
jecxz
cmp
insb
test
cli
jnp
pop
dec
outsb
andb
dec
or
push
mov
or
jnp
and
aas
fidivs
dec
xor
mov
inc
cwtl
imul
and
fidivrs
adc
loop
daa
cmp
adc
pushf
test
mov
ljmp
pop
push
fs
lods
sbb
cltd
inc
aas
jne
imul
outsl
leave
mov
mov
sbb
mov
call
dec
out
cmp
cmpsb
xor
dec
jle
mov
outsl
popa
clc
adc
xor
cmp
outsb
cmp
int
inc
sub
out
sahf
nop
rcrl
inc
jg
or
cmp
lahf
cmp
cwtl
jg
dec
add
adc
push
push
aas
sti
jnp
add
lods
gs
dec
sub
mov
adcb
jecxz
sub
int
cmc
sbb
arpl
es
je
cmpsl
mov
hlt
xor
sub
mov
xchg
cli
or
push
ss
jl
sbb
es
xor
into
mov
es
and
lret
imul
xchg
hlt
scas
int
lds
xchg
jb
mov
xor
mov
loop
dec
je
pop
xchg
movsl
dec
outsb
xchg
std
and
sub
pusha
cmp
stc
and
mov
insl
iret
jg
jl
pop
imul
xchg
stos
ret
cltd
rcrl
rclb
sbb
arpl
add
cmc
aad
mov
into
outsb
sub
add
rcl
scas
cmp
jae
sub
sbb
popf
and
sbb
and
and
cmp
fsubl
out
cmpsb
lret
inc
xlat
pusha
lds
mov
lret
rcl
inc
cmp
cmp
dec
insb
push
cmp
xor
jp
jge
frstor
sbb
ss
repz
xor
pusha
or
inc
scas
lret
testl
sbb
js
and
pop
pop
jmp
repz
stc
popa
xchg
inc
fs
xchg
mov
mov
aad
xlat
jecxz
push
pop
les
fists
shl
je
rcrb
rcrb
push
ret
mov
adc
popf
jns
sub
jae
jmp
sahf
sbb
pushf
aas
mov
ret
mov
aaa
jne
cmp
fldt
add
inc
lahf
lods
sub
jno
cli
rorb
xor
fcmovnu
fnstsw
mov
fs
jp
or
stc
xor
adcl
loope
xchg
add
mov
jne
fs
cmc
jb
mov
mov
aad
push
out
test
push
mov
xor
jle
jb
jecxz,pt
std
mov
mov
popa
out
inc
gs
rcrb
xorb
mov
jle
das
mov
pop
dec
ret
push
mov
bound
mov
inc
jb
test
push
aam
loope
sub
push
insl
pop
testb
sbb
jo
in
es
push
adc
movsl
in
arpl
cmpsl
sbb
int
or
inc
scas
sbb
and
ss
scas
enter
arpl
and
push
enter
test
adc
je
jae
jb
dec
cmpsb
and
iret
xor
int
sti
jo
jle
jecxz
mov
fmul
insl
aas
es
jno
fcoms
rclb
sahf
jno
jbe
mov
jae
push
or
addr16
imul
mov
sbb
cmpsl
push
adcb
pop
sarb
adc
aas
jle
mov
mov
cmp
push
cmp
punpckhwd
into
xchg
jg
or
jnp
fldcw
cmp
mov
sub
inc
jb
icebp
pushf
jmp
fsts
xchg
scas
hlt
inc
cmpsl
jb
fldln2
jo
dec
gs
dec
lds
cltd
ret
xchg
into
push
arpl
lret
lds
xor
pop
mov
xor
cli
push
jns
je
jbe
sub
xchg
sahf
loope
fisubs
cld
sbb
cmp
push
test
rorb
jmp
cmpsb
or
popa
push
jecxz
filds
mov
jae
jge
inc
cmp
fsubrs
push
gs
cs
mov
dec
dec
ja
dec
scas
pop
inc
lods
mov
and
push
insl
test
icebp
cltd
sbb
and
or
in
and
cmp
or
enter
cmc
mov
jp
add
sbb
test
cli
xor
add
jmp
push
out
shrb
mov
outsl
dec
sbb
sahf
cld
aaa
pop
rcll
clc
popa
int
and
aas
inc
mov
cmp
and
sub
pop
xchg
shl
lret
add
outsl
gs
mov
shrb
pop
xchg
and
sbb
dec
push
sub
setl
flds
mov
out
and
sub
or
repz
and
mov
daa
sub
jo
jg
xor
inc
pop
push
addr16
stos
es
ret
sub
and
sbb
and
inc
jg
clc
sub
or
xchg
js
fisubrl
inc
dec
out
test
idivb
fbstp
rorl
movsb
sbb
subb
xor
ficompl
push
loopne
es
jbe
call
int
cmpsl
sub
in
ret
ss
rorb
mov
push
movsl
popf
xchg
xor
pushf
sbb
inc
xchg
sub
fldcw
loopne
in
xor
inc
std
push
fdivrl
fadds
stos
scas
dec
xchg
pop
mov
stc
fists
push
test
add
in
mov
cmpsl
cmpsl
repz
adc
mov
roll
xchg
sub
lahf
add
mov
push
dec
movsb
mov
inc
addl
aas
notb
loop
pop
stc
out
and
mov
jl
or
xchg
xor
ljmp
movsl
mov
dec
lods
adc
into
pop
jo
jl
push
hlt
fistpl
shr
shl
or
popf
sar
repz
push
cmpsb
pop
add
xchg
lret
stos
sarl
lods
out
xchg
mov
vmovhps
xor
out
xor
in
das
loopne
mov
in
stc
lds
add
repz
sbb
xchg
repz
scas
or
sbb
icebp
test
sub
mov
int
jp
dec
xor
pop
adc
or
dec
arpl
mov
jo
cmp
int3
push
in
in
movsl
test
push
test
arpl
inc
mov
hlt
stos
stos
push
adcl
fcomp
inc
adc
xor
mov
mov
xchg
mov
add
shll
lea
test
xor
addr16
lret
ss
and
cmp
faddp
mov
test
cmp
and
cmp
pushf
cltd
fldt
mov
mov
push
hlt
loope
inc
mov
jg
cmp
push
jge
insl
out
xor
push
sbb
or
xchg
popf
cmpsl
mov
sbb
lock
out
xchg
push
in
int
lret
ja
enter
out
dec
in
into
adc
hlt
movsb
inc
xorb
imul
push
stos
pusha
inc
clc
add
aad
push
mov
outsb
in
jbe
scas
fstpt
inc
mov
or
sub
mov
mov
and
sub
orb
xchg
cmpsl
push
mov
movsl
adc
dec
inc
add
pop
add
loope
mov
mov
cmc
shrb
sarb
mov
ljmp
adc
sub
mov
notb
mov
stos
test
adc
xor
in
jnp
and
push
push
repnz
test
mov
xchg
cmp
and
hlt
dec
inc
es
pop
xchg
cmp
mov
add
into
int3
xor
jb
mov
out
sbbb
xor
or
ljmp
outsb
add
push
out
in
das
and
out
nop
cwtl
test
sbb
adc
adc
mov
push
pop
xchg
jmp
adc
subb
jmp
mov
adc
les
nop
xor
into
mov
cmp
gs
lock
cmc
xor
adc
andl
mov
loop
popa
mov
adc
add
pushf
aas
fstpl
sar
fidivs
outsl
pop
fsubr
add
repnz
sub
lock
sub
add
xor
sub
jbe
cwtl
ds
pop
int3
mov
pop
pause
mov
ljmp
xlat
dec
and
int
inc
fldcw
js
scas
mov
xor
pop
jno
js
or
fwait
jp
insl
cmp
or
push
jae
push
int3
adc
push
sub
sub
fistpll
clc
imul
dec
repz
stos
jns
es
pop
dec
in
out
add
cmp
pop
popa
jg
aad
roll
jne
or
or
loop
jl
lods
push
popf
xor
movzbl
and
loope
pop
mov
cmpl
ds
xchg
sahf
push
push
add
rdtscp
outsl
lea
or
leave
or
lcall
push
add
jns
mov
cwtl
aaa
mov
aad
inc
cmpsb
cmpsb
pop
adc
std
cmpsl
pusha
shl
push
mov
and
jnp
add
fisttpl
int
insl
out
insl
jno
or
cs
insb
aad
addr16
xchg
inc
xorb
dec
incb
cmc
ss
push
pop
lods
lds
shll
popf
push
xor
xchg
mov
or
pop
dec
cltd
dec
jl
mov
push
test
enter
xlat
mov
rcrb
std
jecxz
pushf
dec
pop
pop
aad
js
popa
jns
into
mov
pop
cmp
movsb
xor
jns
mov
fbld
aad
fucom
imul
push
in
add
sub
lds
sub
lahf
add
fildll
sbb
inc
cli
cmp
loope
mov
sub
nop
sub
mov
xor
in
add
lret
iret
and
cs
out
das
xor
aad
xor
jecxz
pop
add
popa
xchg
push
imull
adc
adc
and
push
mov
inc
push
sub
imul
popa
lods
adcl
dec
cltd
inc
pop
sub
in
jle
aad
subb
mov
pushf
lds
cmc
add
push
fmuls
pop
addb
push
out
cmp
sbb
mov
outsl
mov
jmp
sub
or
xor
test
cmp
repnz
movsb
decb
pushf
and
mov
js
mov
sub
adc
icebp
add
sub
sbb
inc
test
mov
shrl
sbb
sbb
xor
sub
arpl
test
add
pop
js
repz
push
lock
pop
mov
inc
push
loope
fnstsw
dec
arpl
repz
out
in
or
mov
ret
insl
push
sub
jl,pt
or
lahf
scas
lods
fsubl
mov
mov
pop
and
add
jns
cmpsb
cmc
xor
push
and
or
fisubrl
fsubrl
push
mov
inc
scas
popf
lock
jl
or
cmp
out
or
lret
out
and
sbb
jno
mov
call
cs
sbb
inc
and
ret
test
sub
mov
or
add
mov
push
popa
xor
cmp
jbe
insb
outsl
rcrb
xchg
iret
loop
xor
in
cmp
aam
leave
nop
inc
push
stos
les
sub
cmp
sub
dec
adc
test
cld
and
push
lds
jp
jo
jp
lods
nop
mov
mov
stc
inc
js
insl
pop
out
cld
cmpsl
mov
xor
pushl
stos
pop
sti
jnp
dec
ret
in
cld
orl
mov
shlb
mov
push
mov
jo
push
xlat
and
inc
enter
xchg
push
push
mov
lret
dec
addr16
rcrl
fisubrs
gs
aad
push
mov
sub
mull
imul
mov
imul
jmp
adc
sbb
adc
cmp
or
lret
adc
pop
jge
ja
jmp
sahf
cld
std
push
push
sbb
clc
fidivs
subl
in
jo
leave
or
dec
push
js
mov
pop
cmp
mov
sbb
dec
jno
xor
jge
adc
jg
out
mov
in
sbb
imul
jge
lcall
mov
adc
jle
in
insw
ret
ret
test
pop
xor
pop
and
or
and
sub
dec
bnd
mov
lret
cmp
in
xchg
push
into
test
jecxz
in
fistl
daa
mov
and
movsb
add
dec
cmpsl
push
notb
pop
or
xchg
mov
fsubrl
lret
cld
or
outsb
or
hlt
pop
add
loope
stos
adc
sub
jmp
cmpb
jp
or
dec
insb
mov
jp
xor
stc
lock
loope
push
cmp
test
mov
xlat
add
aaa
clc
lcall
pop
mov
sbb
sbb
jb
dec
mov
sahf
jle
fcomps
add
lret
inc
loopne
push
imul
test
mov
add
adc
sahf
pop
jae
jb
add
inc
and
jmp
jmp
sub
add
xchg
inc
or
dec
cmp
pop
movsb
inc
out
cmpsb
cmp
and
loop
xchg
sahf
cmp
rolb
repnz
push
xor
inc
cmp
imul
into
mov
jo
mov
pusha
mov
mov
clc
lcall
lret
icebp
sub
lret
fadds
dec
cwtl
lret
test
lods
fs
adc
std
and
data16
fistpll
xchg
add
test
movsb
out
mov
mov
sub
cmp
test
movsl
jnp
sarb
add
mov
data16
mov
test
icebp
adc
and
popa
je
push
mov
mov
mov
add
cs
out
push
xor
lcall
cltd
cmpsb
aaa
sub
repz
or
test
cmc
sub
ds
and
nop
jb
cmpsb
gs
bound
cmp
mov
xchg
fs
xor
call
and
mov
lea
inc
icebp
stos
pop
jns
mov
pop
pop
add
inc
call
in
inc
lahf
cmp
jg
xchg
jo
sbbb
in
xchg
cmpsb
adc
lret
test
mov
loop
sbb
shrl
add
test
mov
pop
adc
aas
sub
jmp
enter
jg
shll
inc
adcb
ss
cmpsb
sbb
jns
aam
loopne
mov
rcll
mov
fadd
inc
test
les
ljmp
repz
and
pop
inc
jnp
rcr
je
out
and
orb
cmp
sbb
int3
movsb
leave
popa
xor
mov
mov
pop
sbb
jmp
dec
xlat
and
push
mov
adc
cli
sbb
insb
clc
xorl
lods
jae
test
inc
loope
xor
dec
bnd
mov
bound
mov
repz
cmpsb
push
out
sub
jbe
mov
jno
popa
aas
aad
mov
stc
dec
and
xlat
xor
push
jo
jbe
pop
insb
mov
lret
mov
mov
mov
popa
jecxz
sub
testl
xchg
test
dec
out
jmp
pop
fcoml
std
inc
neg
cltd
push
adc
sub
rolb
int
push
xor
cmp
adc
mov
sub
lcall
insl
decl
dec
outsl
lock
in
mov
cwtl
lods
inc
mov
xchg
insb
aad
and
dec
add
stos
loope
sub
mov
add
jecxz
mov
aam
std
mov
rcr
or
or
pop
loope
imul
or
ret
lds
clc
inc
push
int
mov
adc
cltd
xor
inc
mov
insb
mov
test
lret
mov
or
stos
fsincos
ret
daa
out
cld
movsl
outsb
stos
in
xor
sub
and
outsb
loopne
ja
lcall
addr16
cmp
iret
lret
addr16
mov
and
inc
lret
push
push
outsb
imul
out
push
mov
ret
lret
add
mov
xchg
sti
adc
xchg
xchg
outsl
mov
mov
mov
sbb
mov
sbb
loopne
push
dec
lds
inc
je
and
jg
mov
adc
xor
push
mov
hlt
push
sbb
or
scas
ss
adc
subb
clc
daa
jns
or
addr16
pop
and
sub
mov
cmp
add
mov
in
mov
mov
leave
jbe
sub
ds
ffree
and
dec
out
into
in
clc
pop
roll
mov
sbb
ss
pushf
mov
scas
push
adc
pop
mov
movb
std
sbb
inc
sub
cmp
aas
ret
sbb
int3
adc
and
idiv
test
sub
sti
lea
sarb
jns
xchg
jae
shll
mov
mov
rorb
aas
loop
mov
xchg
ds
addr16
mov
push
mov
add
mov
mov
idivl
in
mov
scas
ret
jecxz
or
pop
add
or
in
jne
int
int3
imul
addr16
jne
inc
mov
add
mov
sub
scas
mov
push
shll
add
rcrl
add
xchg
adc
push
sub
das
or
mov
and
cmp
xchg
stc
and
adc
fidivl
push
pop
leave
push
push
cmp
jp
mov
pusha
shlb
shl
sti
cmp
test
cmp
popf
sbbl
mov
adc
mov
push
cmp
push
push
pop
pop
imul
push
adc
test
dec
lods
ret
repnz
les
jl
mov
pop
in
or
popa
aam
loopne
scas
movb
icebp
inc
xchg
call
shrb
xchg
outsl
jbe
divss
dec
ret
rorl
cmp
push
mov
cmpsl
ja
outsb
or
adc
and
mov
jge
cmp
in
push
std
jns
or
cwtl
cltd
mov
negl
shlb
mov
out
in
sub
add
add
loopne
dec
daa
loop
lods
or
inc
nop
std
repz
stos
jle
aad
adc
int
ret
std
jecxz
pop
cmp
mov
xchg
fcmovnb
ja
adc
dec
call
mov
cmp
cli
push
xchg
xor
and
cmc
xchg
pop
sbb
jmp
inc
in
pop
pop
lret
mov
sti
mov
iret
mov
jb
adc
dec
enter
mov
push
or
mov
movsl
scas
sahf
push
or
and
cwtl
and
jle
dec
inc
lcall
adc
out
nop
sbb
mov
clc
ljmp
shll
das
in
dec
outsb
xchg
ja
push
inc
mov
ficoms
addr16
jo
incb
jge
or
add
inc
dec
jo
iret
jg
mov
cmpsl
cld
popa
push
and
inc
lret
pop
push
ljmp
cmp
mov
sahf
and
aam
jge
mov
shll
mov
scas
aam
sbb
push
popa
sub
ret
mov
add
pop
inc
pop
outsl
in
xor
jle
lret
mov
mov
jmp
inc
leave
xchg
jp
out
jmp
jl
outsl
test
dec
pop
mov
movsl
xchg
and
nop
push
add
icebp
jb
ret
xchg
mov
cmpb
lods
sti
push
and
lahf
pop
xchg
cmp
test
and
hlt
outsl
mov
out
xor
imul
add
sbb
jmp
outsb
es
adc
bound
mov
sub
vsubpd
rorl
cli
mov
sti
ret
movsb
int3
fistpll
jle
subb
pop
xchg
call
and
adc
jg
call
into
add
jns
movb
pop
hlt
sub
int
jmp
stos
rcrl
inc
lahf
jge
ss
decb
sbb
pusha
mov
pusha
pop
xchg
daa
lret
loop
fwait
js
aas
jmp
dec
add
xchg
and
jo
or
popa
jecxz
std
dec
mov
or
movsl
repnz
pusha
mov
mov
aam
or
fdivr
xor
movsb
cmp
arpl
addl
out
inc
jecxz
xchg
fwait
bound
jno
int3
ja
movsb
adc
adc
add
cmp
test
hlt
push
add
dec
insb
js
leave
ja
rcrl
jp
cmp
nop
test
mov
xor
clc
add
push
push
add
mov
or
push
pushf
inc
int
adc
and
ss
mov
iret
jmp
or
xchg
add
push
mov
dec
imul
xchg
dec
ja
cmp
incb
mov
sbb
xchg
mov
mov
xor
dec
out
fimuls
inc
outsl
int
insb
sbb
pushf
sbb
pop
enter
test
adc
mov
mov
hlt
fs
jmp
or
dec
adc
xchg
mov
movl
xorb
mov
loope
iret
jmp
lock
mov
xchg
insl
ljmp
into
test
das
add
cmpsl
cmc
mov
pop
sahf
stos
pop
sbb
lods
push
adc
mov
imul
xchg
pushf
mov
sub
jle
hlt
ffree
sub
jns
test
mov
dec
mov
mov
mov
out
mov
or
cmpsl
int3
xchg
ss
pop
shl
and
or
mov
pop
pop
lcall
leave
cmp
inc
xor
dec
insb
mov
push
sub
cmpsb
mov
adc
popf
xchg
mov
notb
push
aad
scas
adc
adc
bound
std
xor
and
cwtl
push
jbe
pop
daa
xchg
push
aas
nop
arpl
in
lods
sub
pop
lret
int3
dec
daa
sarb
arpl
cld
cmpsl
dec
pop
pop
clc
xor
outsl
push
adc
std
addb
sub
movsb
ret
rol
mov
pop
cltd
sub
xor
out
mov
xor
out
push
ss
jge
sbb
inc
ret
push
mov
or
std
fs
dec
sub
jnp
cld
mov
outsl
in
or
and
insb
lds
cld
dec
std
out
cltd
lcall
cpuid
in
rclb
dec
xor
lds
cwtl
ret
push
dec
addr16
push
mov
adc
adc
sub
stos
outsl
sub
mov
jb
jp
cmp
jns
daa
aam
push
ret
xchg
mov
mov
inc
dec
jno
push
push
out
xor
clc
cs
pop
inc
pop
jne
pop
push
inc
dec
fcmovnb
pop
addr16
popf
sub
and
insb
pop
mov
or
cwtl
cmp
inc
es
inc
and
testb
push
outsb
add
shrl
bound
jb
pop
lret
lods
imul
out
adcb
jb
sarb
imul
lret
popa
fidivrl
adc
fs
push
jno
cmp
stos
out
rcrl
arpl
jge
xor
repnz
xchg
jne
pop
shrb
inc
cmp
and
insl
shll
popa
cli
or
mulps
cmp
ret
insl
leave
flds
ffreep
dec
mov
mov
jnp
outsl
scas
out
mov
imull
lahf
inc
mov
jne
sbb
add
inc
pushf
mov
cmpsl
pop
push
mov
sbb
cld
das
es
bound
xor
ds
jbe
pop
ja
pop
dec
popa
xchg
das
rcrb
xchg
xor
mov
stc
inc
push
scas
das
adc
xor
fdivr
adc
or
insb
and
adc
mov
into
leave
pop
add
adc
push
mov
imul
jns
xor
fmul
adc
subb
jp
jg
ret
add
adc
push
stc
and
test
into
mov
fs
das
or
mov
lcall
add
sti
sub
or
aas
rolb
int
cmpsl
inc
call
repz
in
test
popa
cmp
push
fildll
mov
inc
mov
lcallw
and
ret
lods
jnp
loope
xorb
and
adc
cmp
sub
movsb
stos
xchg
cmp
mov
push
sub
push
pushf
pop
pop
daa
mov
sbb
push
adc
jb
cmp
lret
jge
orb
mov
sub
sbbb
inc
jl
into
inc
jge
jae
and
call
cmpsb
xchg
xor
adc
inc
xor
fistps
mov
ja
and
cmp
cmp
or
xchg
mov
push
mov
out
add
mov
loop
nop
ret
scas
scas
dec
adc
inc
fldenv
dec
movl
dec
cmp
pop
pop
sbb
cmp
mov
ficoms
fisubl
movsl
enter
aad
imul
jge
push
xchg
std
add
notl
mov
mov
ja
rclb
pop
shlb
mov
add
fsubl
dec
out
out
loop
xor
das
push
sbb
xor
add
cmp
in
in
or
out
jl
jge
ds
sti
inc
or
mov
mov
ja
xorl
ficompl
je
mov
je
mov
push
jmp
xchg
cmp
popf
mov
mov
push
sti
push
push
or
orl
pop
lods
inc
xor
xchg
and
inc
xchg
es
add
xchg
sbb
sub
push
pop
test
gs
adc
notb
jp
lods
xchg
adc
mov
orl
and
or
adc
xor
scas
js
xchg
xorl
gs
pop
xorl
jns
mov
out
popf
dec
mov
adc
fimull
mov
dec
sbb
xchg
lret
or
hlt
mov
cmp
loop
sti
subb
xchg
dec
sahf
pop
dec
or
pusha
cli
adc
and
les
sahf
pop
adc
mov
and
scas
jl
mov
das
pop
ljmp
shr
mov
adc
ret
imul
int3
cmpsl
ds
sub
pusha
mov
mov
pop
fcoml
shll
adc
ret
bound
clc
mov
rcrb
mov
push
leave
inc
cmp
shr
sbb
and
dec
dec
mov
sbb
pusha
and
lretw
lret
jb
xchg
in
movsb
mov
rcrl
cmpsb
test
or
je
pusha
mov
or
data16
movsl
out
mov
pop
and
and
mov
ljmp
mov
out
pop
push
es
xchg
and
xor
out
mov
ja
cwtl
aam
jp
out
cmp
mov
cmc
dec
shl
cs
les
sbb
rcl
push
mov
fistl
les
add
outsl
sub
and
adc
lock
scas
shll
inc
sub
mov
mov
ja
xor
orl
push
filds
testb
dec
inc
movsl
fcomi
cmp
mov
jle
andnps
mov
cs
mov
or
mov
xchg
push
push
subl
push
xchg
out
adc
lcall
jmp
and
inc
imull
daa
test
das
mov
and
movsl
lret
xchg
pop
lret
push
cmc
cltd
aam
xchg
pushf
or
movsl
fwait
push
dec
incb
pushf
jge
lock
int3
mov
aad
lret
push
jo
xor
cmp
sub
or
lahf
div
outsl
sti
fwait
pop
lcall
push
das
sbb
outsl
xchg
clc
imul
clc
nop
mov
mov
jne
lret
loope
xchg
push
inc
int3
mov
pop
lods
sbb
enter
pop
std
push
aad
rorl
cmpsb
cs
sahf
fnstsw
sub
cmovno
jl
jno
mull
mov
add
dec
bnd
outsb
xor
dec
xchg
add
dec
mov
push
dec
lods
inc
mov
push
pop
inc
mov
pop
mov
cmp
in
pop
insb
rcrb
cmc
cmp
inc
add
mov
mov
add
jle
sbb
cmpl
sbb
fisubrs
lcall
xchg
adc
aas
mov
jno
adc
add
incl
xor
inc
cmp
sbb
gs
sbb
les
inc
data16
sbb
ljmp
xchg
sub
ja
adc
shrl
and
xchg
subb
and
push
pushf
popa
cwtl
cmpsb
addr16
mov
mov
dec
pop
add
scas
xchg
dec
incl
push
icebp
xchg
xor
jp
or
dec
lock
jne
ror
aaa
movsl
scas
mov
push
repnz
or
cld
jp
adc
inc
aaa
stos
sub
fmulp
daa
mov
in
fldt
jmp
lret
lock
sub
push
cmpsb
or
mov
insl
shl
sbb
cmp
es
es
push
sbb
xor
dec
gs
pop
int
orb
daa
cmp
repz
imul
les
lods
mov
mov
mov
mov
and
ret
fdivl
mov
test
repz
bound
mov
mov
rclb
outsb
or
shrl
dec
jbe
push
andb
daa
adc
xor
sbb
test
stos
pushf
out
repnz
addb
lret
xchg
jg
add
aaa
inc
push
xor
popl
pushf
daa
xor
sbb
fdivrs
cmp
push
and
adc
xor
insb
jo
pushf
push
mov
outsb
lret
outsl
and
aad
pop
inc
das
aaa
mov
sbb
jb
cmp
iret
jb
inc
mov
cmp
jno
adc
les
xor
cli
push
les
out
adc
mov
stc
pop
cld
and
push
xchg
inc
cmp
mov
pop
addr16
gs
dec
xor
and
push
ds
mov
or
mov
aad
cmp
aaa
mov
cli
cmp
xchg
arpl
jnp
loopne
xchg
ret
hlt
mov
mov
xor
pop
sub
jecxz
leave
xchg
xchg
popa
inc
fildl
out
push
int
mov
gs
ja
in
arpl
push
mov
into
dec
and
adc
mov
push
cltd
or
sub
scas
push
xlat
xlat
push
inc
dec
sbb
inc
mov
mov
cmp
test
or
aad
test
xchg
ss
dec
pop
stos
inc
xchg
xor
push
out
mov
jne
jg
jmp
push
ret
mov
adc
add
imul
addl
pop
cmp
cltd
add
push
dec
inc
out
push
insl
push
into
mov
xor
lcall
outsl
je
jnp
adc
sub
bound
cwtl
ljmp
aam
mov
or
xchg
rcll
push
push
push
in
stc
mov
mov
es
sub
or
sbb
loope
ss
dec
xor
idivb
inc
mov
stc
test
inc
mov
or
int3
jno
fmuls
andl
mov
dec
test
orl
adc
and
cmp
lds
sub
shl
adc
rcll
or
pop
loop
das
sahf
xor
push
mov
pop
xchg
jmp
push
or
xor
xor
mov
push
addl
dec
cmpsl
sub
add
scas
loope
shrb
or
mov
mov
add
rcrb
mov
icebp
sahf
lcall
roll
ss
mov
into
in
imul
jp
sub
lods
mov
cmp
rcrl
add
or
lcall
pusha
lahf
push
xchg
cmp
pop
mov
fcomps
jl
in
bound
mov
loope
cwtl
iret
aaa
push
rcl
mov
and
pop
add
pop
and
sub
std
bound
repnz
add
test
pop
mov
adcb
mov
pop
jle
add
stos
test
ss
or
pop
mov
xor
hlt
outsl
testb
xor
sar
test
cli
xor
std
mov
testl
je
lret
pop
push
bound
xor
lret
dec
inc
xchg
xorb
mov
out
js
js
ret
pop
ret
pusha
xchg
shl
push
loopne
jne
repnz
ret
pop
push
xor
insb
iret
mov
clc
dec
mov
stos
sbb
or
pop
cmp
xchg
sub
push
xlat
in
fsubr
es
popf
jp
xchg
inc
push
and
loop
xchg
xor
pop
stc
sbb
iret
nop
fsubr
divl
arpl
mov
pop
mov
rcrb
jo
mov
pop
adc
rolb
test
mov
cmc
mov
and
dec
jnp
movsb
inc
dec
cmp
into
stc
push
dec
stc
movsl
mov
enter
insb
lret
stos
push
pop
shll
mov
sub
inc
pop
rcrb
and
icebp
and
js
or
mov
add
mov
lds
shll
sub
cmp
in
xor
cltd
dec
push
ja
call
hlt
mov
cwtl
movsl
loope
pop
pushf
mov
cwtl
push
jb
sbb
aam
cmpb
imul
imul
leave
or
sub
adc
xchg
test
add
inc
movsl
into
lea
xor
xor
push
lret
outsl
mov
or
sbb
push
push
xchg
dec
pusha
lods
push
addr16
das
jge
push
lea
dec
je
mov
push
xor
lods
das
fistpll
mov
jge
mov
movsb
aad
dec
or
fwait
in
mov
mov
addr16
push
xchg
andb
out
fiaddl
add
loop
je
into
loope
cmc
lds
cmp
dec
mov
enter
sub
insl
dec
in
mov
cmc
fsubrl
mov
pop
mov
lahf
les
dec
ljmp
and
psubusw
adc
mov
jno
mov
xor
pop
ss
lds
stos
add
pop
mov
sti
fucom
scas
das
sbbl
scas
mov
xor
dec
ds
mov
adc
fs
or
xor
les
imul
ret
and
cltd
adc
shl
sbb
jmp
imul
mov
or
dec
pop
sbb
sbb
jg
femms
lods
jl
mov
in
rcrb
xchg
outsl
push
mov
or
or
or
mov
rcr
pop
cld
pop
xchg
enter
inc
push
gs
stos
adc
inc
int
push
loope
mov
es
out
mov
negl
fidivrs
jnp
lock
and
cli
fs
adc
xlat
aas
mov
fldcw
les
inc
cmp
adc
sti
hlt
jb
pop
pushw
nop
js
lahf
adc
cmp
ss
push
pop
xchg
mov
mov
out
dec
gs
add
mov
push
cmp
popa
aam
enter
ljmp
push
jnp
pusha
xchg
xlat
add
pop
scas
mov
out
outsl
sbb
pop
pop
test
roll
pop
dec
call
inc
les
subl
lret
push
mov
scas
jbe
pusha
pop
lods
dec
lret
int
mov
and
mov
mov
dec
mov
ljmp
out
mov
sub
adc
or
pop
ljmp
add
and
dec
inc
xchg
imul
sub
subl
shlb
mov
adc
mov
insb
jbe
cli
in
sahf
xor
idiv
pushf
imul
fwait
dec
jp
cmc
outsl
cwtl
scas
cld
push
shll
andl
add
orb
xchg
jmp
mov
stos
loopne
xchg
int3
xor
repnz
loop
scas
xchg
mov
sub
mov
sbbb
shrb
loop
movsb
jecxz
sub
in
pop
mov
fists
cmpsb
sub
push
dec
je
arpl
test
pop
mov
cld
std
jp
data16
push
inc
adc
jmp
nop
dec
pop
cmp
push
addr16
jp
and
dec
call
cmpsl
jmp
mov
sbb
lock
mov
movsl
cmc
dec
push
dec
je
and
cli
jecxz
loop
mov
es
adc
pop
mov
sbb
mov
or
es
push
mov
js
sbb
sub
jne
ret
out
sub
pop
mov
and
fstpl
or
pop
hlt
push
or
dec
in
jl
notl
mov
int
popa
add
jae
lock
mov
jp
mov
cmp
imul
pop
lods
cmpsb
xor
jmp
and
or
test
jecxz
and
ss
fstpt
in
arpl
ljmp
dec
fidivs
setae
shrl
dec
cmp
mov
mov
movsl
pop
pop
add
xchg
scas
or
gs
mov
push
lahf
in
repz
xor
push
lock
sub
movsb
ror
or
repz
jbe
dec
lahf
inc
jl
mov
fisttpll
mov
and
dec
mov
lret
and
mov
mov
out
dec
dec
nop
add
mov
cmpl
popa
fcompl
dec
and
xchg
pop
jge
test
sub
leave
sbb
popa
jecxz
outsb
adc
xor
xor
loop
push
ret
jg
pushf
mov
and
lret
test
inc
mov
fisubrl
push
gs
pushf
iret
pushl
fisttpl
aas
mov
les
inc
mov
mov
pop
stos
pop
mov
mov
je
cltd
scas
mov
pop
lock
enter
mov
jb
xchg
xchg
and
sahf
or
xchg
sub
mov
pop
loope
clc
std
and
or
das
cmp
daa
adc
or
mov
adc
iret
mov
adc
adc
mov
into
jnp
jns
ja
cmp
push
add
push
call
and
pusha
orw
inc
decb
add
sub
movsl
or
and
dec
bound
jno
jno
or
out
clc
jo
aas
mov
xchg
adc
test
iret
cmp
pop
scas
fsubl
or
dec
push
dec
cmp
adc
das
jmp
adc
pusha
dec
jmp
dec
inc
sbb
ljmp
push
push
jle
out
add
and
iret
dec
pop
rclb
pop
loopne
cltd
aad
into
jnp
xchg
std
popa
ficomps
jmp
adc
dec
sahf
mov
out
ds
les
push
and
in
jge
and
xchg
aas
in
out
sbb
xchg
mov
push
mov
add
jo
flds
test
rclb
cmp
add
popa
xor
outsl
je
sub
inc
ljmp
or
pop
mov
fldl
cmc
sti
sub
ret
out
cs
cmp
mov
int3
ret
lea
or
xchg
insb
ds
jb
or
jge
add
aam
pushf
lods
push
xchg
or
jne
lret
adc
cmp
and
enter
adc
out
divb
pop
not
test
loope
pushf
rcrl
pop
divb
sub
xor
mov
lods
sbb
xchg
aad
xchg
bound
push
inc
xor
int
inc
popa
lcall
stos
pop
mov
sbbl
int
rcrb
test
cmp
loop
inc
negl
mulb
jo
mov
fs
ljmp
jp
jl
test
jg
lods
sbb
mov
shll
popa
daa
into
push
ljmp
and
or
inc
adc
push
xchg
cld
out
fcmove
lret
dec
fildl
cmp
fdiv
nop
sub
add
lods
jnp
in
or
adc
lcall
ja,pt
sbb
pop
test
sub
in
jns
popf
cmp
push
cltd
out
rcrl
out
arpl
clc
imul
aam
fsubs
mov
aam
andb
or
xor
subl
mov
xchg
aaa
mov
adc
or
nop
rorb
mov
out
dec
std
inc
xor
cmp
aad
into
ret
imul
es
mov
dec
in
cld
pop
shll
sti
fsubs
fmuls
xchg
lock
inc
mov
push
sub
icebp
xor
mov
or
pop
js
jmp
pusha
movsb
fsubl
mull
mov
sbb
jb
std
sub
ficomps
or
jmp
push
xor
ss
mov
jo
call
or
or
mov
mov
lahf
inc
jae
test
push
cmp
stc
cltd
lea
push
leave
mov
jg
stos
ja
outsb
xchg
jmp
mov
push
gs
xchg
pop
mov
push
pop
pop
add
sbb
push
scas
imul
add
xor
mov
push
jg
test
cmp
sbb
pop
lds
cmp
neg
fs
outsl
test
call
mov
sbb
icebp
xor
inc
ljmp
and
push
mov
imul
es
mov
xor
repnz
pop
add
inc
ret
and
sbbb
cmp
jbe
jnp
mov
scas
lret
into
arpl
and
cld
add
pop
fdivrs
jge
mov
std
jmp
ret
or
jle
inc
out
inc
sub
inc
dec
sub
xchg
pop
mov
pop
stos
fimull
pushf
stc
xchg
ds
fistl
lods
stos
lahf
jo
inc
cli
ljmp
test
outsl
adc
subb
dec
add
test
call
add
adc
sbb
cltd
test
mov
inc
lea
dec
clc
jl
mov
ficomps
sti
lods
sub
pop
cmpsb
adc
jle
out
jnp
dec
insb
pushf
inc
jge
fnstsw
dec
pop
cmp
mov
mov
in
aam
addr16
movsl
sub
pop
jno
repnz
mov
mov
movsb
sahf
or
or
cmp
test
xchg
jecxz
imul
mov
test
popa
adc
dec
xor
pop
out
push
push
jp
xchg
adc
lods
mov
cmovnp
jbe
and
xchg
imul
mov
mov
and
pop
call
imul
lea
or
dec
fwait
rcrb
xchg
lods
daa
sub
int3
inc
xchg
test
in
dec
inc
ret
xchg
cltd
pushl
stc
dec
incl
sbb
xlat
scas
dec
xchg
xor
push
test
fstl
jge
aas
xchg
mov
std
or
push
test
out
xor
cmp
xorl
shlb
fcoms
xchg
jmp
leave
mov
sbbb
bound
mov
shl
das
inc
divl
push
fildll
test
sub
inc
dec
mov
dec
add
xor
inc
sbb
jle
clc
inc
roll
bound
pop
popl
pop
out
jno
pop
sbb
sub
mov
adc
push
xchg
add
xorl
xchg
loope
fiaddl
pop
push
mov
cmp
or
into
lods
xchg
adc
cmovns
add
mov
or
imul
mov
mov
dec
mov
jbe
sub
mov
mov
insb
mov
notb
call
push
scas
fmuls
sbb
adc
cmc
mov
and
inc
out
xor
jp
addr16
dec
arpl
or
xchg
fldl
push
and
jnp
test
xlat
into
mov
sub
sbb
aas
cld
mov
adc
xchg
xor
jns
pop
popa
cwtl
inc
lea
xchg
cmp
xchg
xorl
cmp
ret
jb
dec
popl
mov
lock
cld
cmp
lods
sub
sti
out
mov
fisttpl
mov
loop
cmp
addl
mov
add
dec
test
sar
lds
lcall
push
xchg
jne
test
aaa
enter
imul
shrb
and
xchg
hlt
enter
shr
pop
mov
fldl
out
cmp
pop
adc
inc
dec
scas
sub
int3
pop
add
scas
xlat
clc
pushf
ret
aad
loope
mov
iret
xor
scas
clc
adc
mov
mov
push
pusha
mov
ja
icebp
inc
ja
icebp
adc
or
lea
pop
std
lea
inc
test
inc
scas
sub
jl
jmp
mov
dec
out
xchg
mov
fsubr
fs
push
jge
cli
xchg
rcl
pop
dec
xor
sub
mov
adc
jb
sub
jno
and
mov
cli
ja
inc
jnp
dec
cmp
jo
pop
or
insb
mov
outsl
leave
dec
jmp
xor
pushf
pop
icebp
loop
out
lds
xchg
add
xor
in
inc
fldenv
xchg
nop
pop
test
xchg
adc
lahf
arpl
enter
repnz
ror
shrb
mov
dec
repnz
cmc
pop
out
imul
addr16
ds
call
mov
cmp
xchg
jb
mov
repz
push
jmp
ljmp
mov
lahf
inc
nop
jecxz
imul
in
insb
dec
jno
add
movsl
xchg
xchg
rcl
loop
sbb
ss
les
xor
fistl
pop
call
sub
sbb
in
out
int
ljmp
inc
les
add
push
in
cmp
das
fucomp
inc
mov
popa
push
jae
mov
mov
xor
loope
push
rorl
xor
and
loop
outsl
dec
adc
and
scas
insb
test
test
or
push
xor
daa
adc
xchg
fstpt
jno
cmp
cmp
lahf
cltd
ficoml
or
mov
push
pop
push
cmp
ljmp
lods
arpl
xchg
sbb
add
mov
lods
negl
mov
ret
lods
dec
push
jmp
in
std
dec
sbb
imull
add
lods
bound
lock
sbb
or
in
mov
pop
loopne
les
mov
sahf
cmpb
jo
shll
xchg
daa
dec
mov
pop
xor
push
mov
xchg
in
sbb
addr16
loope
mov
popa
ret
pop
xor
movsb
and
mov
sbb
mov
and
cmpsl
mov
adc
cli
cmp
lret
or
mov
dec
xchg
pop
popa
xor
das
or
out
jle
lds
aam
inc
push
cmp
mov
inc
lcall
mov
aam
outsl
pop
mov
inc
inc
mov
mov
add
inc
and
int3
dec
sahf
aas
dec
imul
push
push
sbb
cmp
lcall
rcr
clc
inc
stos
and
mov
roll
ficompl
push
pop
cld
call
inc
cmpsb
dec
add
push
xlat
xor
mov
neg
xorl
arpl
bound
jmp
mov
push
push
pop
or
inc
gs
repnz
push
sub
lods
cmpsb
jo
xchg
push
jp
arpl
loope
repnz
adc
sbb
popf
inc
sub
outsb
add
sub
adcl
outsl
notl
push
cmpsb
pop
push
loop
jno
into
and
mov
test
lods
pushf
push
sbb
mov
out
repz
aas
push
cmp
mov
bnd
in
cmp
mov
sysret
std
pop
mov
xchg
test
or
pop
or
in
cmp
inc
mov
rolb
sub
pushf
out
movsb
fnstenv
imul
pop
mov
repnz
sub
cmp
insb
adc
and
int3
subb
into
ja
pop
push
mov
ds
xlat
in
inc
mov
or
adc
lcall
add
or
fiaddl
jb
adc
pop
dec
icebp
sbb
and
test
sahf
loopne
dec
les
xchg
stos
inc
push
mov
mov
in
mov
jns
movsb
leave
inc
mov
leave
xor
push
mov
fcompl
xchg
pop
xor
imul
call
jno
test
jg
les
lock
add
xchg
cs
or
cli
sub
mov
dec
aas
outsb
xor
scas
loopne
push
in
jns
je
insb
arpl
lcall
pop
inc
sbb
test
out
cmpsb
in
mov
pop
xchg
push
xor
and
add
stos
mov
mov
sarb
mov
fisubrs
inc
cmp
mov
xor
xor
pop
mov
jp
shlb
popf
shlb
test
mov
repz
or
icebp
pop
xchg
ds
test
outsl
clc
sti
popa
jae
pop
add
jle
pop
js
sarb
sbb
cmp
or
es
lea
pop
mov
xor
dec
inc
adc
inc
cmp
jns
mov
lods
mov
pop
jmp
mov
sbb
stos
pop
push
clc
and
mov
movsb
sti
sub
sbb
xor
pusha
popf
aas
insl
mov
je
or
or
or
flds
loopne
enter
shll
mov
sbb
xchg
mov
and
outsb
mov
cmpsl
push
fidivs
or
int3
sbb
inc
pop
out
or
aad
mov
dec
int3
cltd
mov
negb
into
pop
or
ja
lcall
adc
sti
push
mov
pop
mov
stos
pop
lods
jb
or
repnz
mov
xchg
dec
push
jns
cmpsl
push
xchg
lahf
faddp
test
ds
inc
or
in
subl
mov
xor
sahf
xchg
mov
jmp
pop
adc
mov
xor
xchg
out
lret
mov
out
int
push
out
push
loopne
leave
fcmovne
cs
jp
or
mov
adc
cmpl
lcall
cwtl
dec
cmpsl
imul
dec
mov
jmp
fstps
popa
cmpsb
cmp
lds
mov
in
movsb
insl
lcall
adc
push
or
fnsave
test
cmp
stos
inc
adcb
pop
rol
xchg
inc
push
divb
xor
push
sub
roll
lods
int
sbb
clc
gs
jmp
out
or
or
test
pop
stc
pop
loope
and
mov
jp
mov
lods
sti
insb
in
jmp
mov
xor
test
je
jmp
rcrl
aas
stos
push
push
sub
jl
add
dec
mov
push
xchg
sub
pmaddwd
xor
and
pop
push
cmp
aad
enter
orl
les
push
test
pop
and
xor
sbb
push
mov
mov
inc
mov
adc
push
js
aas
lahf
in
xor
test
mov
stos
arpl
pusha
mov
or
or
push
push
inc
nop
pop
cmp
mov
pop
jnp
sub
loope
add
mov
aad
adc
xor
popa
addr16
pop
roll
add
out
xor
inc
xor
enter
pop
cwtl
in
push
stos
inc
pop
cmp
mov
xchg
sbb
or
add
shll
or
jmp
mov
xchg
cmpsl
rolb
dec
in
fistpl
and
mov
scas
xchg
mov
pusha
inc
je
es
push
loop
jae
lds
mov
rcr
push
mov
dec
and
push
cmp
cmp
bound
and
push
add
fisubrl
cwtl
sub
cmpsb
movsb
sub
xchg
lods
or
adc
sub
xchg
jle
jbe
adc
mov
arpl
arpl
ds
inc
outsl
fldl
fdivrl
or
dec
iret
repnz
icebp
mov
loopew
xor
outsb
sbb
jge
faddp
and
mov
and
push
sub
jp
out
jl
popf
shlb
jnp
mov
push
push
add
aaa
in
inc
mov
pop
add
dec
dec
mov
push
jae
fdivrl
nop
pop
sarl
es
in
bound
scas
jge
push
lahf
push
cmp
mov
sti
cmp
mov
mov
bound
push
sarb
mov
jne
repnz
out
in
push
dec
pushf
scas
jnp
repnz
sti
adc
xor
test
jnp
or
int3
push
repnz
jbe
xor
cwtl
pop
jmp
std
pop
gs
shl
rorb
cmpsl
dec
mov
mov
pop
cmpsb
push
lcall
mov
jp
sbb
inc
leave
jae
inc
sbb
dec
scas
cld
xor
inc
push
xchg
mov
iret
test
rcrb
cwtl
loop
mov
mov
shll
mov
dec
jecxz
loopne
sarl
cmp
scas
pop
rcrb
push
test
cmp
and
mov
or
test
inc
push
mov
mov
mov
push
mov
mov
lret
fiadds
jge
dec
jp
leave
jg
xchg
push
ljmp
les
loopne
imull
repnz
pop
bound
jmp
lahf
pop
dec
jne
jl
and
stc
arpl
or
call
je
push
xchg
les
pop
or
jnp
aad
out
in
or
push
pop
push
es
add
jecxz
inc
push
add
mov
adc
jns
sahf
mov
push
mov
dec
in
mov
mov
repnz
mov
mulb
sub
rcrl
cmc
ret
cs
imul
dec
fyl2xp1
out
jmp
rorl
mov
pop
and
add
dec
nop
xchg
imul
loop
lea
nop
sbb
imulb
nop
sti
jp
sbb
mov
fs
add
add
call
ss
dec
inc
push
insb
in
loop
dec
jmp
das
add
lret
pushf
imul
jmp
xchg
sub
cmpsl
jecxz
imul
adc
aas
push
mov
cmc
insb
test
das
mov
fdivrs
popa
ret
shr
cld
add
repz
lock
pop
icebp
sub
dec
jmp
ds
cs
mov
or
ficompl
or
outsb
test
pop
add
addr16
sub
aad
pop
nop
stc
and
xchg
out
jp
pop
jmp
inc
mov
data16
or
das
sbb
sub
mov
cmp
pusha
dec
imul
add
bnd
xchg
push
shrb
shll
pop
xor
dec
push
or
inc
daa
push
jae
mov
loope
sbb
jns
cmp
push
shr
data16
cmc
inc
movsb
jg
jne
sbb
daa
lahf
push
mulb
adc
ficoms
mov
div
push
sbb
xchg
and
lods
xrelease
rcr
je
inc
jmp
push
hlt
jbe
push
pop
outsb
cmp
repnz
imul
call
lods
pop
jb
pop
xchg
outsl
sbb
sbb
sub
icebp
xor
jns
adc
insb
pop
js
pop
std
sub
sbb
jg
adc
rcrl
add
fwait
lock
enter
lcall
bound
jb
jecxz
movsb
lret
cmp
mov
clc
xor
push
sub
mov
fsubrs
mov
mov
pop
iret
loopne
out
pop
dec
in
adc
sbb
cmp
fwait
decb
rcrl
mov
adc
pop
mov
mov
cmpsl
leave
clc
mov
imul
sbb
fdivrl
mov
loop
bound
into
cs
mov
pop
stc
imul
sub
mov
cmp
shrl
sahf
ret
into
les
fnstcw
mov
xor
ja
nop
dec
inc
scas
outsb
insl
clts
inc
pusha
mov
jnp
es
lods
mov
cmp
jne
loope
movsl
mov
imul
sub
and
imul
or
fistps
scas
ja
sahf
sbb
rcrb
adc
xor
mov
sbb
movsl
sbb
lret
leave
cmp
sub
sub
sbb
mov
shl
mov
fxch
imul
sub
loop
sahf
jne
out
ja
xchg
or
push
pop
or
sub
mov
pushf
std
aas
sahf
aas
roll
dec
in
mov
cld
cli
pop
testb
cld
inc
push
daa
xor
ljmp
cmc
enter
cmp
repnz
lret
or
aad
sub
mov
jb
mov
movsl
pushw
sbb
mov
scas
mov
sub
push
je
mov
sub
xchg
outsl
xchg
push
push
and
repnz
push
jno
movsb
rcr
xchg
shr
outsb
mov
jmp
shrb
aas
inc
mov
mov
jge
xchg
push
or
in
frstor
mov
fcomi
lods
xchg
lods
lods
and
mov
icebp
mov
movsl
imul
mov
and
push
mov
mov
mov
rcl
mov
imul
sbb
sbb
mov
adc
not
inc
jg
and
adc
sub
addr16
mov
push
jb
push
pop
stc
pop
cmc
pop
test
mov
ja
or
cmpb
decb
cmpsl
fnstenv
add
xor
pop
pop
mov
jl
inc
xchg
dec
in
movsl
rcrb
sbb
cmc
ljmp
pushf
mov
ret
leave
sbb
sbb
and
pusha
fisubrs
push
rolb
sahf
and
mov
sbb
inc
cmp
cmpb
loop
xchg
out
inc
pop
mov
xchg
sbb
ror
les
mov
jle
jnp
decl
ljmp
ljmp
addl
lahf
aad
dec
insb
push
and
leave
repnz
mov
stc
push
adc
imul
mov
mov
cmp
adc
adc
inc
xchg
mov
mov
xor
mov
ret
rolb
mov
inc
repnz
adc
mull
xchg
pop
daa
xchg
adc
mov
jns
jmp
ror
adcl
mov
gs
cmpsl
push
aad
paddw
ja
fadd
cmc
divb
hlt
cmpsl
insb
sbb
mulb
sti
mov
cmpsl
aas
lods
sub
popa
adc
je
ljmp
xchg
xor
pop
test
mov
stc
sub
call
xchg
dec
mov
outsb
lahf
mov
add
jp
pop
adcb
adc
loope
jg
test
xlat
xor
jmp
je
into
jl
and
imul
js
add
xorl
daa
in
mov
fldcw
or
jbe
hlt
movsb
lret
rorl
jbe
ja
xor
shll
xchg
insb
xchg
pavgw
xsha1
cmpsb
int3
ret
decl
mov
mov
lock
fimuls
mov
mov
jecxz
paddusw
loope
push
push
cs
aas
xchg
cmp
clc
xchg
shrl
cld
pop
mov
mov
mov
xchg
mov
push
xor
jbe
mov
lcall
jmp
and
xlat
mov
aaa
rorl
movsb
add
cmp
out
and
pop
sub
subb
dec
cmp
fsubl
pop
scas
sbbb
adc
cmc
mov
dec
hlt
push
add
xor
js
ret
jns
mov
mov
stos
outsl
mov
sub
or
mov
mov
test
movsb
sbb
cwtl
movsl
inc
int
and
fiadds
stos
and
decb
mov
sbb
dec
fisubrl
push
out
pop
lret
inc
mov
add
pop
out
movsl
add
or
mov
jne
sbb
outsl
call
dec
loop
mov
pop
cwtl
ret
mov
pop
idivl
or
cmc
inc
ret
cmp
int3
xchg
xchg
add
fdivs
jg
rol
pop
stos
mov
mov
jb
dec
jo
mov
in
jmp
add
push
pop
xchg
xorb
in
dec
rorl
mov
aad
dec
mov
scas
daa
lods
mov
int3
js
pop
pop
negl
in
sbb
and
sbb
out
mulb
orl
cmp
fwait
and
cli
leave
test
mov
fdiv
pop
filds
loopne
mov
ret
sbb
jp
adc
dec
mov
fwait
test
cmpsl
scas
cmp
pop
mov
insb
lret
rolb
mov
xchg
icebp
dec
roll
scas
ror
and
push
mov
sub
jp
shr
movsl
flds
out
cmc
inc
hlt
les
mov
das
inc
cld
jnp
sbb
out
or
xor
pop
add
stos
fs
add
frstor
negl
or
movsb
nop
out
iret
fmul
xchg
pop
mov
shll
dec
outsl
cmp
shrb
adc
dec
in
push
ret
mov
dec
leave
xchg
inc
dec
sbb
mov
iret
inc
add
push
cmp
cmp
cmc
cmp
hlt
fnstsw
jecxz
jge
testl
mov
add
stc
mov
test
push
mov
cmp
pop
sub
inc
lcall
cmp
adc
inc
or
sub
sbb
sub
xchg
leave
sbb
xchg
int3
repnz
and
xor
xchg
out
mov
cld
mov
addr16
in
cmp
xor
jecxz
imul
ljmp
cld
std
inc
dec
jle
in
setno
dec
loopne
ss
adc
das
in
hlt
inc
loopne
cmp
enter
xor
or
mov
push
adc
push
call
cmp
dec
adc
mov
cmp
adc
jb
mov
xchg
dec
cmp
sahf
test
fbstp
test
sbb
fs
jbe
xor
adc
xor
fs
xchg
aam
dec
sub
push
add
jmp
aas
movsb
movsl
sub
mov
xchg
test
mov
xor
xchg
es
lret
sub
mov
lds
fwait
xchg
mov
pop
data16
fistpll
incl
fsubs
fimull
sbb
jo
icebp
in
test
dec
push
outsb
xor
cmpsl
gs
dec
cwtl
push
test
push
js
mov
test
fs
xchg
jge
mov
sub
into
sub
lods
push
scas
das
outsb
test
dec
test
xor
repnz
and
mov
xchg
mov
jo
cmp
insb
inc
xor
out
iret
lcall
xor
popf
adc
int
xchg
fmuls
xchg
outsb
ss
shll
xor
xor
aam
mov
js
or
cmp
shr
mov
fwait
hlt
testl
xor
in
movsl
and
les
add
push
ss
aad
gs
push
jecxz
or
xor
push
call
fidivrs
insb
scas
xchg
add
dec
insl
dec
int
icebp
inc
push
test
test
out
push
mov
jmp
dec
pop
sbb
aaa
inc
adc
sub
cs
out
shl
sarb
push
subl
mov
sub
hlt
mov
add
lret
inc
or
aad
cs
pop
mov
pop
dec
shll
loopne
fcoms
sbb
mov
int
xor
int
mov
xor
cmp
cld
xor
cmc
rol
pop
cmpsb
nop
push
rolb
movsb
xchg
inc
mov
xchg
psadbw
sub
fdiv
push
test
clc
jo
pop
fs
dec
dec
adc
sub
pop
mov
cld
xchg
cmc
adc
fs
lock
jne
xchg
mov
and
jb
mov
cli
mov
shll
xchg
inc
je
mov
inc
inc
dec
sti
adc
sti
rcll
popf
cmp
add
adc
or
cmp
xor
loopne
adc
xchg
jae
xchg
xchg
mov
mov
dec
das
inc
xchg
daa
xlat
push
xchg
pop
lea
dec
cmpsl
fistps
mov
in
jne
jecxz
out
jge
mov
xchg
aas
mov
push
jae
push
movsl
mov
lret
daa
mov
xchg
inc
movsb
add
int3
inc
cmp
pop
popa
aam
imul
inc
add
inc
pushf
in
or
adc
mov
fldcw
outsl
cli
push
fstl
into
push
xchg
pop
mov
std
in
sub
cmp
lcall
jl
pop
std
jne
call
mov
jbe
out
or
inc
inc
or
jecxz
lds
xor
mov
fadd
fstps
arpl
mov
add
rorb
es
jne
outsb
into
or
jae
xchg
testb
push
pop
rcrb
pop
movsb
rcrl
add
jo
fcmovnb
flds
nop
push
dec
cmp
xlat
dec
leave
mov
mov
jno
add
jmp
ret
push
jmp
mov
call
fldl
out
or
int
xor
lods
adc
pop
pushf
xchg
rorl
mov
adc
cmpsl
sti
daa
inc
mov
sti
or
jae
outsl
xchg
add
into
sti
in
push
addr16
pop
enter
mov
sub
addr16
scas
iret
cmp
repz
gs
lret
mov
xor
sub
mov
dec
push
mov
xchg
xor
xchg
cwtl
fbstp
inc
sti
cmpsb
pop
sbb
mov
add
mov
lret
xchg
icebp
mov
xchg
cwtl
pop
mov
mov
icebp
mov
outsl
out
aad
xlat
sub
les
sahf
ror
ljmp
pop
clc
ds
adc
daa
popf
ljmp
ret
dec
daa
dec
icebp
pop
pop
pop
xor
orl
lret
out
sbb
repz
jle
lcall
sub
repnz
pop
lcall
sahf
sti
adc
insl
xor
test
stos
pusha
sub
sub
cld
or
imul
add
mov
xlat
test
xchg
cmpsb
fcmovnu
cwtl
cmp
inc
int
test
test
test
in
insl
jmp
aam
jl
js
rcr
cltd
cmp
pop
lret
ljmp
adc
dec
pop
mov
fld
mov
xor
cs
test
jp
jge
lret
dec
movsl
loopne
pop
call
jg
push
mov
mov
inc
pop
sbb
push
push
mov
frstor
adc
aas
sti
rcr
aaa
in
inc
fwait
pop
sub
movsb
lds
mov
mov
lret
iret
inc
test
cmp
cmp
fstpt
imul
mov
sbb
mov
in
clc
scas
cmpsl
inc
fcmovbe
mov
adcb
mov
xchg
cld
ljmp
inc
or
fs
in
leave
outsl
outsl
mov
pop
xor
js
lret
stos
insl
push
out
cli
aad
sub
jns
jle
jno
and
or
loope
mov
pop
arpl
out
int3
jb
push
popa
sbb
dec
lret
push
out
adc
cli
out
mov
sub
jge
and
push
cmc
adc
push
xor
lret
or
int3
mov
mov
pop
xchg
scas
inc
pop
sbbb
cwtl
bound
mov
dec
xor
orl
and
sub
hlt
dec
jle
xchg
lods
mov
popf
jae
add
mov
cwtl
insb
jne
pop
fwait
push
adc
out
adc
imul
mov
jecxz
mov
push
mov
push
add
sahf
aad
jb
das
pop
pop
ret
pop
test
shrl
xor
mov
ficompl
jb
imul
dec
nop
push
movsl
add
mov
cmpsl
jae
jae
testb
xchg
insb
lret
sbb
stc
and
ret
in
hlt
dec
fdivp
sub
test
push
sbb
lret
or
add
jmp
push
inc
inc
lcall
aad
adc
ret
cli
pop
sarb
rcr
add
shrl
ret
out
mov
mov
shll
mov
mov
dec
inc
test
nop
cmp
jle
cmpsb
add
push
pushf
sbb
outsl
je
dec
mov
cwtl
or
mov
xor
push
dec
bound
es
gs
loop
and
xchg
mov
fmull
dec
mov
lea
mov
xchg
mov
sbb
xor
loope
jb
test
jecxz
movsl
sub
adc
daa
inc
leave
jmp
or
push
adc
cmp
cmp
add
mov
dec
shrl
dec
inc
cmpsl
out
pop
clc
cmp
cltd
inc
jo
loope
repz
xchg
mov
pop
adc
insb
jo
dec
xor
add
mov
into
enter
inc
out
neg
popl
fsubp
sahf
jno
pop
neg
sbb
loop
lret
adc
sbb
xchg
xchg
enter
scas
pop
arpl
cmp
or
stos
sbb
loopne,pn
or
sbb
jne
xorl
js
out
dec
jne
mov
or
stc
popa
and
mov
out
or
cmp
xor
imul
lahf
mov
mov
sbbb
std
shll
xchg
xor
and
push
cmp
mov
es
pop
notb
mov
push
dec
ljmp
rcll
addr16
sbb
jmp
xor
push
push
add
test
loop
push
xchg
cmpsb
dec
mov
cmp
stc
push
pop
jge
pop
sub
out
popa
xchg
jne
out
xor
adc
imul
xor
cmp
inc
lret
std
xchg
out
xchg
loope
pop
sahf
jne
cwtl
xchg
push
fwait
insl
dec
add
cmp
inc
pusha
orl
xchg
test
and
gs
in
nop
jns
pop
mov
cmc
popa
xchg
aam
aaa
sub
inc
js
mov
enter
pop
fsubrs
loopne
shl
inc
and
lods
sub
add
and
rcrb
sbb
push
add
add
pop
cmp
adc
ficompl
fistl
fbld
sti
ret
lahf
dec
add
fcomps
sub
jb
push
pop
ret
xchg
ret
xor
or
and
enter
idivl
inc
fists
lds
push
jmp
mov
cmpsb
xchg
pop
sahf
icebp
lods
insl
call
adc
int
movb
call
sbb
sbb
xor
cmp
mov
std
sub
xor
data16
sub
or
sbb
adc
push
sub
gs
in
stos
cmp
sbb
lods
outsb
push
bound
test
dec
fildl
jb
aaa
ret
and
xchg
repz
pop
dec
insl
dec
lods
das
sahf
neg
xor
scas
inc
js
and
cmp
xor
enter
xor
adc
lcall
sbb
imul
loopne
in
xchg
inc
iret
fwait
negb
adc
dec
and
clc
inc
add
mov
mov
pop
je
or
lock
add
mov
jp
rcll
shll
outsl
mov
repz
iret
lea
cwtl
sahf
xchg
inc
mov
mov
pop
into
aas
lcall
andb
into
aas
sbb
push
adc
xchg
mov
loopne
ds
or
in
xchg
movsl
add
test
xlat
xchg
ret
cli
out
pop
call
add
push
cmp
inc
jae
lods
call
add
inc
mov
pop
jecxz
mov
enter
scas
cmpsb
pop
insb
test
out
adc
and
dec
or
xchg
addr16
dec
fcmovu
adc
out
jg
insl
sub
cmp
test
mov
push
jo
int
insl
adc
mov
xor
pusha
mov
add
lret
add
shlb
popf
jnp
pop
xor
pop
jecxz
or
adc
cmp
jno
pop
xchg
jns
add
jne
scas
adc
mov
stc
sbb
enter
push
cmp
por
sbb
fbstp
out
ss
test
repz
add
les
adc
mov
and
ss
mov
push
mov
ljmp
popa
sahf
les
jbe
js
xor
fsubrp
mov
xor
sub
fldt
pop
rorb
xchg
inc
int
or
mov
pushf
jle
mov
pop
sbb
lds
hlt
out
xchg
mov
and
mov
jg
mov
test
ljmp
mov
pop
push
xor
test
mull
push
jae
mov
jecxz
bsr
js
lret
add
pop
dec
mov
rolb
pop
fistpl
out
test
adc
insb
mov
dec
pop
push
push
push
mov
cs
or
jnp
sub
in
and
cltd
add
lods
jbe
addr16
jbe
lock
dec
dec
add
mov
call
xchg
pop
cmc
mov
icebp
sub
mov
dec
lea
ret
cltd
divb
or
enter
and
mov
sub
fimuls
inc
sbb
or
push
mov
sub
dec
psubq
xchg
fwait
inc
push
dec
into
fmuls
popa
fnstsw
pop
xchg
stc
xchg
popa
push
iret
jge
inc
sub
mov
xchg
mov
pop
scas
mov
dec
pop
sbb
xor
sbb
adc
hlt
lret
popf
or
arpl
mov
sbb
lahf
or
add
xchg
adc
or
or
push
mov
adc
repz
pop
in
sar
xchg
mov
push
test
adc
xchg
mov
add
push
xchg
add
pushf
das
jge
adc
xor
adc
stc
push
pop
mov
dec
fidivrl
fwait
inc
fisubs
jle
mov
out
jo
lret
inc
mov
sbb
insb
shl
es
lret
icebp
push
mov
roll
sarb
mov
mov
xchg
mov
mov
fwait
sbb
ja
repz
and
out
sub
loop
cs
aaa
ret
xor
mov
aad
xor
les
test
fdivrs
sub
lahf
pop
addr16
mov
cltd
and
jne
xchg
data16
xor
sub
les
sbb
fimull
push
movsb
shl
xor
movsb
movsb
imul
test
pop
pusha
jne
clc
dec
je
sbbl
adc
push
or
add
mov
push
repz
xchg
mov
ret
dec
sub
add
incl
outsb
push
not
movsb
jg
ja
dec
fs
fs
sub
enter
or
sbb
ja
mov
pusha
push
mov
dec
push
inc
scas
inc
repnz
jns
inc
clc
mov
push
or
jg
inc
into
push
mov
push
shrb
aas
jno
inc
inc
add
dec
add
lret
add
jle
out
bt
mov
sarl
sub
xchg
int
lods
xor
mov
arpl
cmovb
jnp
push
daa
sub
orl
pop
popf
addr16
lock
jae
adc
push
fcmovnb
inc
lcall
fildl
stc
stc
inc
and
adc
faddp
jno
int
ljmp
mov
insl
enter
mov
test
adc
ja
iret
adc
mov
jns
sub
cmp
mov
add
add
adc
xchg
adc
xor
je
mov
decl
push
subb
push
rcrl
cmp
sub
lcall
pop
lods
aam
gs
cltd
cmp
mov
test
rolb
mov
in
and
jno
insl
lcall
enter
jae
paddq
ret
sbb
jecxz
aaa
pop
mov
sub
cmp
in
out
pop
fs
mov
repnz
push
andb
fs
fld
enter
ss
dec
pop
cmp
xchg
insl
ret
pop
fidivs
push
cmp
jno
cld
push
repz
sti
sti
stos
pusha
xchg
xchg
incb
xor
jl
pop
pop
mov
int
dec
faddp
mov
push
adc
out
sti
push
xchg
push
repnz
mov
decb
sub
scas
scas
jg
in
or
mov
repnz
xchg
ss
and
lret
cmp
xor
stc
ret
psubw
adc
out
mov
into
push
rcrb
divb
insb
xchg
int
pop
daa
in
mov
je
xchg
stos
jbe
pop
movsb
roll
jg
test
xchg
aas
sbb
sub
xchg
insl
gs
xchg
shrl
mov
jae
aam
nop
cmp
imul
add
or
push
neg
jg
xor
adcb
out
outsl
fdivrs
jne
rol
out
daa
popa
hlt
mov
push
xchg
jmp
xor
out
add
ss
call
pop
adc
js
int3
les
or
xchg
bound
pop
inc
sub
ss
sahf
mov
in
jp
lods
push
in
divl
push
sahf
sbb
jo
inc
mov
add
add
lret
into
mov
aas
aaa
pop
mov
fs
shl
ds
addr16
sbb
stos
outsb
and
leave
ret
clc
imul
push
leave
mov
cmp
mov
mov
mov
imul
outsb
add
jae
icebp
sub
xor
push
pop
push
movsl
mov
cmpsb
aad
mov
je
aad
push
shlb
cld
xchg
mov
data16
jmp
inc
fstpt
inc
mov
jmp
mov
dec
jae
testl
mov
cmp
call
lds
pop
inc
ljmp
imul
out
cld
call
xlat
rclb
push
fwait
lock
push
ficompl
or
stos
jb
pop
or
jno
xchg
loope
xor
cmc
in
pushf
adc
cmpsb
cmp
dec
mov
iret
jle
cmp
ret
ror
cwtl
mov
mov
sbb
cmp
pop
add
daa
cmpsb
push
out
lret
decl
inc
daa
and
cli
mov
out
push
and
push
jg
pushf
push
or
pop
mov
hlt
mov
mov
mov
mov
pop
ficoml
in
push
xchg
scas
jle
iret
jo
lcall
adcl
mov
pop
ficoml
jo
or
rorb
fwait
out
sub
cmpsb
inc
add
clc
cmp
repnz
test
lret
fdivrs
fcmovnu
dec
dec
bound
cmpsl
rdtsc
mov
jno
pop
pop
dec
lock
insl
mov
lods
push
pop
out
or
shl
xchg
and
push
and
push
sbb
xchg
ds
out
add
jns
inc
out
bound
es
mov
fs
adc
cmpsb
jg
or
mov
test
xor
cwtl
testb
int3
mov
xor
push
out
push
jg
sub
in
add
xor
pop
push
cmc
mov
mov
pop
pop
mov
xchg
fnstenv
fldcw
sub
sbb
fnstsw
mov
les
xstore-rng
cmpsl
ret
shll
and
xlat
jle
mov
out
lods
cli
jbe
sbb
inc
jle
jo
or
push
lds
push
xchg
pushf
lahf
rcr
loop
sahf
pop
das
stos
xor
push
xor
dec
xchg
adc
dec
sbb
inc
hlt
xor
xchg
jmp
or
xchg
jno
sub
fs
cmp
dec
lahf
test
sbb
inc
in
lret
push
fistpl
cmp
fcompl
in
sti
push
mov
sub
sbb
mov
and
js
add
sub
hlt
pop
add
mov
aas
inc
xchg
fwait
rcll
int
sub
cli
aaa
lods
sbb
je
cmp
insl
int
inc
jae
fimuls
std
insl
pop
imulb
inc
ret
dec
les
aas
inc
inc
ret
push
push
cli
in
jge
sbb
cltd
idiv
sti
add
push
sti
repz
scas
inc
mov
mov
ljmp
loopne
cmp
ficompl
inc
or
cmpsb
pushf
cmp
cwtl
sbb
pop
dec
jmp
push
adc
jne
leave
sub
adc
mov
data16
dec
popl
jl
popa
popa
sub
mov
push
and
test
es
jp
adc
mov
mov
mov
rcl
cmp
jecxz
jmp
lods
daa
dec
add
ror
enter
jnp
push
out
fcomip
hlt
jnp
dec
cmpsl
dec
sbb
lods
fildl
movsb
rclb
mov
adc
cmp
or
add
mov
push
shl
or
push
dec
sub
and
mov
push
dec
mov
mov
js
dec
and
adc
inc
test
stos
cltd
jp
sbb
ficoml
sbb
pushf
es
inc
iret
dec
insl
sbb
cmp
add
call
jne
xchg
push
jns
mov
daa
push
in
push
in
scas
xlat
fistl
pop
cld
in
test
movsl
dec
sahf
es
pop
xor
jle
and
push
xor
dec
das
mov
cmp
sub
cltd
lahf
mov
mov
jno
rcr
cmp
dec
push
sbb
pushf
pusha
ss
adc
lahf
pop
sbb
arpl
fsts
cs
pushf
aad
cltd
dec
loop
cmp
loopne
mov
inc
push
in
mov
mov
mov
lods
fidivl
arpl
sbb
leave
jo
pop
notl
in
jle
adc
stos
adc
push
or
xchg
fsubr
sti
dec
jp
xchg
push
push
iret
loop
mov
or
mov
pop
repz
add
xchg
clc
sbb
imulb
mov
inc
pop
jl
sbbb
cmp
or
sub
icebp
testl
leave
mov
adc
fcmovnu
arpl
jge
mov
xor
mov
xchg
inc
out
je
and
stos
lret
sub
fwait
movl
scas
int3
or
fmuls
xchg
ficomps
fstl
js
jne
dec
cmp
xchg
add
mov
jle
incb
inc
xchg
repnz
xor
loop
pop
mov
push
std
push
scas
popa
in
lds
stc
fs
dec
divb
xchg
adc
fcmove
push
addl
std
sub
fsub
pop
mov
test
lret
lcall
cmpsl
xchg
mov
fidivs
and
dec
fidivl
js
lods
ret
push
lods
xlat
shrl
sbb
mov
push
dec
dec
mov
imul
rcll
sub
mov
fs
outsb
sub
xor
repnz
jne
scas
lods
int3
mov
jo
mov
mov
cmpsl
out
stos
mov
cmp
add
push
jge
fwait
divb
sti
out
jl
cltd
xchg
das
ret
or
mov
push
inc
lcall
mov
sbb
inc
cmc
xchg
xor
stos
and
nop
sbb
arpl
int
sub
sub
pop
mov
test
xchg
jl
pusha
into
sbb
js
mov
lret
sbb
mov
push
imul
cld
add
xchg
rorb
leave
dec
xor
cmp
lahf
mov
popa
pop
jnp
sub
pop
adc
jbe
loope
ret
mov
jae
lea
subl
adc
test
jecxz
and
push
push
inc
mov
int
jns
xor
push
xor
jl
das
scas
cmp
mov
add
btr
sbb
cmp
mov
mov
or
icebp
adc
ficompl
adc
mov
mov
lahf
or
das
shll
mov
dec
scas
test
sub
inc
fdivrl
lea
push
data16
mov
mov
rol
dec
mov
subl
and
in
mov
into
shr
jecxz
insl
jno
fisttpll
or
mov
nop
andl
dec
out
push
stos
lds
mov
push
negl
bound
pop
insb
pop
mov
cmp
sub
pop
movl
aad
loopne
or
movsl
iret
dec
push
ja,pn
int
jnp
insb
out
sbb
pop
ret
ss
icebp
hlt
movsl
aad
sbb
cld
test
scas
in
stos
mov
jns
icebp
in
adc
jbe
push
mov
shrd
idivl
sub
aaa
fcmovbe
loope
lock
mov
lds
mov
bound
xor
add
xchg
cmpsl
repz
jne
jl
push
xor
pop
pop
popf
fstp
in
pop
push
mov
leave
xchg
lret
jg
fimuls
cmp
inc
lahf
xchg
jg
sahf
das
pop
in
xchg
out
sti
xchg
push
jg
ret
sub
cmp
dec
mov
shrl
into
jle
clc
jle
add
jbe
sub
ret
mov
aas
jle
imul
pop
mov
and
imul
in
into
repnz
and
sarb
xor
shlb
jbe
jns
sub
mov
imulb
xor
jae
aam
fs
xor
push
sahf
pushf
mov
loope
push
and
cmp
add
mov
into
mov
fsubs
aad
pop
inc
pop
xor
cmpb
xlat
inc
and
xchg
mov
sbb
inc
push
adc
push
sub
fisttps
int
xlat
shrb
das
loop
test
mov
dec
in
jae
mov
aad
mov
cld
cmp
dec
daa
jmp
mov
sbb
or
xchg
or
dec
ficomps
test
arpl
or
aaa
mov
leave
or
pop
cmp
push
xor
mov
mov
cmp
lods
out
fwait
es
icebp
push
sbb
mov
sub
shr
into
cli
fs
xor
mov
mov
ss
icebp
cmp
pop
add
xor
dec
repz
aaa
movsl
adc
mov
or
pop
repz
adc
out
adc
push
xchg
in
mov
mov
pop
push
rol
or
jge
mov
das
sub
jbe
les
and
pop
sbb
jg
add
in
cmpsl
or
inc
loop
sbb
push
stc
add
push
cwtl
pop
aad
mov
cmp
jle
ret
xchg
or
in
int3
rclb
scas
outsb
sbb
cld
int3
test
sub
push
push
mov
lods
negl
or
pop
pop
enter
roll
or
mov
stos
or
push
jge
out
popf
xchg
jp
das
les
das
dec
js
inc
repnz
cmpsb
test
popf
lods
out
cltd
fmull
repnz
push
inc
dec
insb
mov
mov
pop
mov
dec
pop
jns
gs
ss
sti
inc
inc
and
pop
stc
adc
push
cwtl
mov
rcrl
add
cmp
fs
mov
push
dec
sbb
ret
or
sbb
add
mov
jne
lahf
ja
rorl
pusha
in
mov
fs
xlat
adc
pop
in
sahf
aad
lea
and
pop
sbb
scas
scas
push
aaa
sub
rcrb
cmc
in
andl
mov
cmp
ret
sbb
push
jecxz
imulb
rcl
mov
scas
push
sub
jae
mov
sbb
popl
jne
pusha
out
inc
fldcw
sub
out
dec
rcrl
imul
out
ja
mov
hlt
sub
adc
mov
push
xchg
aam
enter
cmpsl
enter
pop
aad
jg
jne,pn
nop
lock
negl
xor
ret
pop
bound
into
jmp
jle
mov
mov
into
jne
aad
mov
repz
and
roll
inc
pushf
inc
shll
mov
outsb
add
fiadds
xchg
outsl
cmp
push
add
mov
outsb
cmp
fiadds
jne
inc
xchg
sti
jo
iret
and
fidivrl
pop
add
and
or
pop
imul
jp
xchg
sarb
test
imul
lods
nop
mov
sbb
cwtl
clc
bound
cmpsb
lock
mov
push
push
scas
push
out
das
xlat
pusha
jo
jecxz
pop
push
jns,pt
clc
mov
mov
lds
mov
add
mov
mov
push
jg
pop
stos
inc
inc
jmp
movsl
test
adc
out
xchg
pop
mov
dec
cltd
fadds
pop
mov
dec
test
xor
adc
insl
push
fwait
cld
xor
xchg
shr
and
insb
or
xchg
add
or
jmp
push
fisttpl
lcall
mov
jb
sub
adcb
push
push
stc
mov
push
push
addr16
aam
sahf
mov
inc
outsb
xchg
dec
pop
xorl
and
dec
pop
aas
stos
pop
pop
cld
push
out
inc
shll
fs
jl
loope
mov
jae
and
popf
loopne
push
in
jecxz
push
adc
pop
daa
aas
cmp
push
mov
lods
jge
inc
nop
insb
mov
and
test
iret
arpl
dec
cmp
repz
sahf
cmp
sub
das
into
pop
int
pop
iret
iret
mov
sbb
stc
fcomip
sub
in
ja
cs
sub
push
clc
cmp
aas
test
sbbb
fisttps
pop
outsb
lock
mov
jl
int
ret
roll
sahf
and
adc
fwait
inc
cmpsl
outsb
push
stos
in
dec
add
nopl
pand
pop
popf
push
jle
frstor
mov
insl
push
andl
lods
sbb
sub
xchg
es
jg
xor
sahf
jns
mov
movsb
bound
inc
pop
jmp
cmp
mov
icebp
mov
ja
xchg
andb
test
cmc
jo
push
push
mov
scas
xor
stos
cld
inc
rolb
cmp
xor
sbb
bnd
lcall
sub
imul
add
cmpsl
pop
lods
and
sar
jns
xor
xor
mov
ret
adc
add
mov
dec
icebp
data16
sti
pop
cmpsb
arpl
fidivrl
xchg
mov
stc
pop
gs
sub
outsb
cmp
mov
negb
jp
std
cmpsl
mov
clc
es
add
testl
mov
jne
push
int
xchg
nop
cltd
jg
sub
stc
lods
int3
dec
mov
iret
adc
lret
es
add
mov
loop
adc
adc
fwait
cmp
rorl
mov
cs
sub
mov
and
pusha
and
jecxz
push
xchg
daa
xor
cmp
daa
sti
mov
stc
in
lahf
je
es
cld
loop
outsl
mov
cmp
into
pop
test
lret
inc
movsl
add
fmuls
aaa
jl
or
fmuls
leave
or
inc
mov
out
clc
nopl
xorb
dec
loop
sahf
cmp
scas
pop
rorb
adcb
notl
sub
adc
sar
enter
jmp
in
scas
movsl
stos
imul
movl
mov
pop
push
adc
cs
add
mov
xchg
xor
movsl
add
scas
sub
cld
je
sarb
ss
jle
les
shrb
or
js
sbb
mov
or
mov
xor
adc
sbb
cmpb
outsl
ret
int
bound
jg
cmp
into
mov
add
sbb
sbb
pop
lahf
cltd
movq
inc
sub
test
jb
out
aaa
xor
inc
daa
out
loop
mov
icebp
iret
repz
sub
sub
aad
jns
loope
sub
movsb
enter
and
outsb
lahf
xchg
pop
mov
or
stos
dec
inc
pop
repz
jle
in
add
mov
sti
jl
aam
es
cmp
dec
push
mov
lea
sub
adc
pop
das
dec
sub
clc
jecxz
gs
fdivrs
rorb
pusha
inc
mov
dec
mov
fwait
aam
and
inc
sbb
mov
xor
bound
and
xchg
inc
enter
pop
add
dec
call
inc
rcll
and
addl
xchg
pop
loope
aad
stos
faddl
sahf
into
sub
mov
sub
mov
cmp
xchg
data16
shrb
and
lock
cmp
out
jo
roll
dec
shrl
lret
int
xchg
in
sahf
push
cwtl
pushf
insb
hlt
sbb
divl
xchg
adc
xor
enter
lock
fst
cmpsb
mov
fnstenv
add
je
mov
lahf
ljmp
cwtl
jns
mov
cmp
lea
push
repz
and
cmp
mov
lret
and
neg
sbb
xchg
jl
ret
loope
cmp
mov
mov
mov
stc
push
jmp
inc
fnsave
jb
out
pusha
jmp
mov
inc
shrl
push
add
push
pop
in
xchg
loop
scas
and
mov
pop
adc
pop
lahf
mov
push
push
loopne,pn
rol
ja
sub
inc
pop
movsl
mov
cmp
sti
fisttps
js
es
mov
cmpsb
and
in
mov
mov
cmp
cmpsb
cld
jecxz
push
mov
hlt
mov
or
jl
das
sbb
cmpsl
and
pop
fcoms
xor
jmp
cltd
icebp
rolb
out
sub
ret
int
mov
repnz
mov
jae
lods
test
and
cltd
add
shl
data16
outsl
mov
jp
add
jns
or
xor
push
es
sahf
or
pop
sbb
aad
test
cmp
cmc
cmpsl
lret
and
imul
push
push
scas
mov
jno
call
sbb
xchg
lahf
push
bound
sub
mov
or
test
push
cmpsb
lret
pop
inc
fs
jl
push
insb
dec
jne
enter
adc
aas
int
test
pop
xchg
mov
in
sbb
sbb
lahf
dec
sub
adc
mov
inc
push
aad
loope
jg
pusha
movsl
cmp
insl
jb
add
inc
int3
sbb
xor
inc
jp
push
sbb
sbb
sti
jno
orl
jg
push
int3
leave
fnsave
std
adc
sbb
shlb
daa
fs
aaa
mov
sub
sbb
cld
cmc
outsl
inc
push
pushf
insb
clc
insl
mov
lods
push
aad
and
fnstsw
adc
cli
dec
xchg
push
mov
insl
xchg
mov
cmp
into
repz
push
pop
sub
xor
jne
mov
fcomps
dec
lret
repnz
or
jl
loop
lret
mov
pop
mull
imul
jmp
jg
pop
fs
addr16
scas
gs
jge
adc
inc
fwait
push
mov
sar
clc
or
mov
aas
mov
mov
idiv
xor
popf
mov
push
sbb
repz
clc
pop
aad
push
lret
jb
jbe
mov
mov
ljmp
movsl
pop
jl
sahf
ret
cmpsb
mov
ljmp
pop
test
dec
psubsb
lcall
push
loop
cmp
add
movsb
push
or
sbbl
or
jmp
lock
inc
xlat
pop
lret
into
xchg
imul
call
or
aaa
sbb
jge
cwtl
stos
sub
mov
in
stc
shll
mov
dec
dec
outsl
push
dec
mov
lods
pop
jl
push
mov
std
sbb
jne
push
data16
lcall
cmp
mov
or
pop
cmp
cwtl
ds
daa
enter
test
sub
inc
and
inc
je
push
in
sub
lret
mov
pop
cmp
xchg
add
rcl
pop
mov
push
and
fstps
sti
push
push
or
mov
and
std
sahf
out
mov
iret
test
mov
in
xor
movsl
inc
lcall
push
sarb
jno
mov
sarb
out
cmp
scas
jmpw
sbb
les
mov
cmp
and
inc
loop
dec
call
xorb
repnz
or
nop
loop
lock
adc
gs
sub
xlat
sbb
pop
imul
dec
or
mov
dec
jo
std
imul
sub
xor
int3
or
int3
hlt
inc
loope
cmp
add
mov
dec
mov
cs
dec
int3
and
add
pop
test
icebp
lcall
jbe
popa
fisubrs
stos
fs
daa
xchg
jns
lcall
mov
addr16
sbb
push
cli
mov
cmpsb
add
pop
push
fucomip
stos
push
fcmovu
dec
pop
jns
test
cli
add
sub
dec
das
out
nop
inc
lods
push
inc
inc
aam
pop
add
pop
or
pop
lock
add
aas
sbb
xor
insl
mov
sti
mov
dec
jg
in
pop
jb
mov
lret
inc
insb
adc
xor
ja
inc
in
dec
ja
testb
mov
adc
xchg
nop
movsb
cmp
mov
cld
or
mov
jae
loop
lret
pop
and
jecxz
gs
inc
imul
xchg
dec
jg
popf
sbb
cmp
and
es
loopne
push
push
sub
jecxz
les
addl
aas
repz
xor
jl
cmpsb
leave
outsb
lahf
enter
cltd
in
aaa
lcall
sbb
repnz
fs
jge
stos
lahf
mov
add
inc
es
mov
pushf
pushf
sub
cmpsb
in
cmp
and
push
push
insl
mov
cmp
shlb
push
jne
scas
shrl
fldt
std
dec
mov
aam
mov
fiadds
lods
test
leave
fnstenv
or
mov
jl
mov
das
xor
imul
dec
test
roll
inc
xchg
test
cld
xchg
sub
sub
and
pop
in
add
sbb
lcall
scas
sub
mov
adc
imul
pop
fimull
sub
mov
pushf
aam
xchg
test
into
jns
jge
cmc
pop
or
dec
cmpsb
jb
mov
arpl
aas
fisubrl
jg
dec
mov
sbb
dec
roll
iret
add
out
lidtl
or
or
sbb
popa
xorb
jp
or
adc
fsubs
mov
jo
lds
sub
pop
push
xor
push
xchg
mov
adc
sub
inc
push
push
sbbb
bound
outsl
addr16
push
dec
xchg
daa
xor
push
sub
stos
push
popf
cmp
adc
add
lock
xchg
mov
pushf
sub
adc
jge
stos
das
add
push
sub
ljmp
inc
adc
inc
mov
je
sub
movsb
ljmp
insb
into
add
inc
call
pop
pop
test
inc
rcll
ja
shlb
add
jae
jl
xor
js,pn
dec
add
mov
repnz
icebp
pop
sub
stos
xchg
std
dec
lock
int3
cs
mov
sub
mov
inc
aam
rclb
bound
inc
cmp
mov
adc
sahf
lds
iret
cmp
xor
fcomps
sbb
jnp
ja
pop
xchg
sub
call
cmp
add
icebp
fcomp
sub
leave
lret
dec
aas
lahf
cmp
aas
mov
or
cmp
dec
sbb
xor
leave
imul
roll
call
int
out
insl
lock
xlat
push
out
out
adc
dec
aad
and
sbb
jg
xor
and
and
xchg
out
mov
mov
mov
mov
lock
mov
adc
dec
inc
imul
lods
imul
ds
popf
inc
mov
xor
or
pop
jns
sub
jecxz
cmp
xchg
std
add
jl
mov
jb
push
jle
push
sarl
and
mov
cli
xor
in
call
imul
xchg
mov
stc
sub
inc
sub
mov
scas
divb
xor
nop
jecxz
loope
andl
jg
std
and
negl
sub
imull
bound
repnz
mov
lock
pushf
mov
xchg
ret
dec
jbe
leave
popf
ret
fs
inc
fdivp
mulb
xchg
push
in
bound
mov
outsl
push
push
loopne
add
aaa
dec
js
jp
dec
cmp
mov
push
sbb
dec
hlt
outsl
pop
lret
mov
mov
imul
les
out
adc
scas
add
lahf
ja
dec
inc
mov
pop
imul
pop
xchg
movsb
cmp
cld
xchg
push
or
sbb
mov
cmc
dec
loope
stos
sbb
iret
cmp
add
dec
mov
mov
xchg
fisttpl
jo
pushf
jle
mov
ficompl
adc
push
pop
xor
out
inc
mov
sub
aas
sbb
inc
push
push
sbb
loopne
icebp
sbb
xchg
das
jmp
xorl
add
inc
mov
sbb
xchg
jne
xchg
out
jg
push
push
arpl
inc
push
push
dec
sub
pop
xor
lret
enter
mov
adc
imul
xchg
pop
xchg
xchg
jl
repnz
bound
adcb
fdivrl
stc
aas
mov
in
sub
lahf
mov
sub
push
lret
arpl
xor
shrb
push
cwtl
push
mov
cmpsb
or
jl
hlt
dec
orl
xchg
jecxz
sbb
push
loopne
outsl
in
cwtl
popa
int3
out
and
lcall
aam
mov
outsb
in
jnp
int
ret
aad
push
ljmp
lahf
add
inc
cmp
aam
and
repz
out
mov
andb
dec
add
movsl
je
movsb
in
add
dec
xchg
dec
push
cmp
in
scas
movb
outsl
or
cmpsl
jnp
add
dec
add
mov
sbb
aad
sub
push
aam
hlt
lahf
jmp
inc
pop
loop
repnz
aaa
lods
mov
outsb
loopne
mov
popf
ja
cltd
mov
cmp
cmp
imulb
sub
xor
int3
into
gs
scas
jae
icebp
fs
cld
sarb
mov
or
mov
cmpsb
mov
es
lods
subb
inc
xchg
adcb
jae
call
or
enter
insl
cmovb
notb
add
xor
into
mov
popf
sub
and
inc
sub
cmp
mov
ljmp
mov
test
dec
pop
dec
mov
repz
dec
stc
clc
arpl
mov
stos
pop
mov
shrb
mov
movsl
push
fs
inc
xchg
stos
sub
jne
rep
int
pop
aaa
xor
testl
mov
mov
out
cmp
adc
cmp
rcl
mov
mov
loopne
out
inc
ljmp
sub
cmpsl
gs
movsl
test
xor
cmp
and
mov
xchg
or
sbb
mov
hlt
adc
les
addr16
sbb
imulb
sub
push
and
xor
push
iret
int3
dec
mov
jmp
aad
xchg
pop
sub
je
mov
mov
pusha
add
arpl
js
fsubrs
and
jecxz
and
div
pusha
adc
outsb
jno
lock
jecxz
ds
add
cmp
imul
push
rcll
inc
jl
mov
out
push
nop
mov
push
mov
mov
inc
dec
sbb
dec
pop
ror
mov
lods
jno
mov
lds
mov
scas
mov
fucomip
aas
shrl
fisubrl
fstpl
ja
jb
and
add
test
out
mov
mov
lcall
pop
insl
mov
xchg
cmp
mov
data16
push
adc
stc
ja
jnp
or
insb
mov
clc
xchg
mov
hlt
push
insb
xor
cs
xchg
fildll
adc
loop
fwait
xor
or
add
inc
fmull
and
popf
pop
decb
push
xchg
movsb
ss
mov
rcr
or
adc
in
cmp
pop
jnp
sarb
xchg
enter
sbb
outsl
fldenv
rolb
lock
and
loope
bound
fdivs
data16
mov
mov
ds
outsl
negl
add
aaa
lahf
fcom
stc
popf
shrb
lcall
cmp
int
jo
dec
sbb
pusha
ja
jge
gs
mov
cld
dec
inc
and
add
and
shrb
or
pusha
or
fidivrs
fwait
outsl
push
fwait
shrb
mov
data16
into
inc
mov
jne
pop
imul
pop
ficoms
xlat
loopne
in
adc
mov
push
dec
sahf
add
popa
jbe
nopl
call
push
mov
arpl
mov
repnz
xorl
stos
inc
scas
insl
jg
rcr
cmpsl
jns
jle
bnd
enter
ret
movsl
clc
mov
cmp
mov
xor
roll
dec
inc
imul
iret
jbe
or
jnp
jl
mov
into
mov
push
mov
xor
jp
xor
sub
pop
daa
int
mov
cmc
iret
nop
jns
sbb
jmp
js
mov
popa
jl
or
enter
push
lcall
xor
jb
arpl
pushf
lret
sub
and
ret
and
or
push
lcall
add
filds
in
testl
imul
out
mov
or
enter
mov
ja
sar
dec
pop
add
inc
sti
outsl
jl
lods
icebp
imul
shrl
mov
hlt
add
aam
push
aad
dec
inc
sub
push
sahf
mov
sub
inc
cmp
roll
pop
nop
sub
xor
mov
stc
xor
jae
insl
loopne
sub
push
in
fsubs
xchg
aam
xor
add
imul
add
adc
lea
shll
stc
push
addr16
cwtl
gs
inc
cwtl
jnp
push
insl
nop
jg
orb
mov
in
cmp
out
into
test
mov
sub
dec
sahf
add
cltd
inc
pop
fisttps
mov
pop
inc
pop
in
stc
pop
dec
add
or
add
xor
xchg
in
repnz
mov
fwait
sbb
pop
jmp
mov
xor
in
sub
mov
pusha
sbb
pop
sarb
cmp
pop
jb
std
es
ds
leave
inc
mov
inc
fidivrs
lret
icebp
lahf
test
lods
loope
xlat
inc
or
sbb
movl
xchg
lret
mov
fdivl
fildll
inc
mov
or
xor
imul
out
jne
cld
daa
call
jnp
stc
lcall
repz
jmp
cs
lret
ja
adc
mov
mov
sahf
inc
jle
mov
adc
cltd
cmp
fcom
scas
cmp
out
push
repz
jo
lahf
ret
fsubs
xlat
sbb
jp
test
pushf
stc
jmp
xor
mov
and
leave
jae
stos
sti
cmp
mov
inc
pop
fimull
scas
jmp
cmp
out
sahf
sub
cmpsb
aad
push
inc
je
mov
jge
sub
iret
movsb
adc
imul
bound
lahf
and
outsb
call
sbb
xchg
or
dec
push
popf
mov
cld
pusha
ret
xor
pop
scas
and
push
ja
or
mov
lcall
xlat
fiaddl
add
jge
xorb
stos
or
pop
cmp
aad
stos
mov
adc
fwait
mov
pop
add
mov
roll
push
mov
loopne
fldenv
fldcw
sub
pop
sbb
nop
fistl
xchg
jae
fnstenv
inc
and
leave
mov
mov
mov
sub
in
pop
int3
popf
nop
jmp
leave
mov
mov
aaa
lcall
leave
pop
cmp
dec
loopne,pt
mov
mov
in
test
adc
jno
mov
test
fmuls
addr16
addl
call
popf
lds
cld
outsl
not
xchg
cmpsl
neg
out
xor
stos
xchg
pop
lret
jmp
add
xor
repnz
push
and
sub
nop
nop
cmc
sub
xchg
fs
fs
jl
shlb
test
pop
pop
lock
ja
inc
jp
aad
cmp
add
clc
nop
aad
sarb
insl
or
es
jmp
mov
lcall
add
jmpw
xor
out
cmp
push
inc
cmp
xchg
pop
adc
stos
lret
xchg
sbb
dec
mov
mov
daa
in
leave
dec
sbb
aas
data16
pop
sbb
xchg
xor
lcall
lods
dec
xchg
rcl
bts
call
rorl
sbb
and
lret
inc
inc
add
negl
fistl
cmp
aam
stos
out
stos
fwait
push
sub
dec
out
es
xchg
cmp
mov
pop
and
and
cmpsb
inc
cmp
repnz
pushf
jnp
ljmp
adc
push
inc
cmp
shrl
stos
leave
jae
cli
call
mov
movsb
fcmove
jae
divb
jle
jns
dec
mov
pop
add
jmp
sbb
fnstsw
jne
add
inc
jnp
add
push
cld
mov
gs
adc
sbb
sub
das
inc
sbb
out
cmp
jno
fwait
jg
out
add
cmp
jbe
sub
daa
lods
outsl
jmp
xchg
xchg
lret
fwait
cmp
outsl
mov
mov
push
pop
fmuls
cs
clc
out
sbb
outsb
inc
xor
push
imul
sub
mov
std
cmpsb
movsb
jp
inc
pop
pusha
std
pop
jge
sub
cmpsl
inc
xor
call
jp
pop
and
das
decb
inc
sar
bound
lods
int3
or
mov
rolb
sub
push
inc
xchg
aam
iret
inc
jl
movsb
adc
cmp
or
mov
test
loopne
cmove
sahf
cmc
rol
adc
mov
and
pop
mov
movsl
mov
or
sahf
push
jns
shl
loop
xchg
and
rcrl
sti
mov
stos
pop
add
pop
and
and
out
push
mov
xchg
push
call
jae
dec
gs
negl
pop
lcall
inc
dec
add
lea
mov
scas
aas
fs
push
aas
lret
push
xor
test
clc
push
cltd
aas
or
arpl
mov
jp
leave
jno
mov
in
mov
scas
pop
sbb
fcmovnbe
sbb
cld
inc
cmpb
sahf
pop
mov
dec
cmp
push
loop
rcrl
mov
aam
mov
mov
fistps
push
or
lock
pop
pop
xchg
fs
jnp
xor
xchg
call
addr16
jbe
push
pop
and
jmp
mov
jne
jp
loop
rorl
inc
cmp
or
add
rcr
mov
jo
sar
pop
movsl
scas
mov
arpl
or
ja
andl
lds
adc
lock
fnstcw
dec
mov
pop
sub
cmpsb
cmp
jle
dec
mov
fdivrl
xchg
sbb
repnz
insb
cmp
add
js
orb
mov
andb
jl
enter
js
test
fnstsw
mov
mov
mov
push
jl
pop
roll
push
mov
rdtsc
loopne
andb
cmp
pop
stc
mov
and
enter
push
sbb
insb
ss
scas
mov
mov
sub
mov
mov
jns
jmp
mov
and
test
out
je
adc
jns
stos
fs
sbb
and
rcrb
in
xchg
and
jmp
cmpsl
sub
inc
insb
push
xorb
adc
dec
push
cmp
jmp
out
sub
adc
lret
push
test
fidivrs
and
insb
inc
out
mov
push
mov
adc
inc
mov
insl
test
push
in
test
adc
jp
or
adc
das
outsb
repz
sbb
push
pop
push
outsb
jle
in
inc
fwait
mov
enter
jae
sti
push
xchg
jmp
sub
mov
repnz
add
pop
push
enter
clc
push
dec
mov
sub
add
mov
out
stc
fadds
pop
add
sub
aaa
mov
cs
nop
stos
popf
sbb
stos
fs
add
out
jnp
xor
hlt
pop
pop
jmp
adc
mov
fldcw
repnz
jbe
daa
sub
jns
imull
test
mov
jbe
xor
imul
add
jne
mov
fisubs
jmp
push
lret
test
jne
pushf
mov
jne
jmp
cmp
sub
and
adc
mov
push
in
movsl
out
adc
inc
test
cltd
push
aaa
or
pop
js
int3
fs
cwtl
dec
lds
rclb
mov
ss
hlt
mov
xchg
cli
push
gs
and
dec
sbb
or
arpl
push
fstp
jp
sahf
xor
or
dec
adc
or
pop
gs
test
sub
xchg
jmp
call
add
jmp
xchg
push
adc
push
jg
test
mov
bound
add
mov
out
push
push
jp
sbb
inc
popf
pop
jo
aaa
jp
cld
lret
mov
out
pop
mov
or
cs
sahf
enter
jmp
jno
add
popa
add
ljmp
arpl
aad
enter
clc
fiaddl
inc
jle
pushf
daa
ja
repz
pusha
jge
cmpsb
jnp
enter
push
arpl
cwtl
cmpsl
lret
xchg
inc
into
shlb
push
fldenv
cld
aad
sub
mov
vrcpps
adc
dec
lret
data16
pop
fdivrp
pusha
ss
in
add
repnz
pusha
mov
sbbl
mov
dec
add
adc
adc
es
shll
fsubl
pop
cmp
inc
inc
and
mov
out
sbb
pop
mulb
orb
push
mov
lods
and
faddl
popf
jle
cld
daa
ret
shlb
push
aam
mov
orl
clc
pop
insb
cwtl
mov
xor
inc
fs
mov
movsl
mov
inc
xor
pop
pusha
sbb
out
sbb
lods
and
and
daa
cmp
in
xchg
mov
cmp
xlat
fisttpl
adc
jnp
and
xchg
mull
std
adc
add
inc
inc
jne
aad
lcall
jno
push
pop
fninit
mov
xchg
mov
mov
sub
sbb
sarb
inc
xchg
cmpsl
xchg
je
repnz
xchg
sub
ret
movsb
lret
imulb
dec
push
add
or
ljmp
dec
das
inc
pop
jle
fstpt
sbb
cli
lods
push
stos
mov
repz
xchg
rorb
pop
push
cld
sarb
sub
clc
or
dec
mov
mov
stos
sahf
jbe
std
nop
stos
aad
add
je
pop
je
xlat
test
sub
and
sub
push
pushf
cltd
ljmp
mov
test
out
imul
shll
inc
jp
and
mov
shll
cmp
lock
ds
cmp
iret
cmp
mov
mov
std
in
inc
mov
andl
xor
push
inc
sahf
sub
cmp
jns
adc
mov
sbb
lcall
xchg
inc
int3
xor
test
inc
xchg
scas
lahf
dec
movsl
pop
stos
sub
sub
push
xchg
nop
fs
mov
repz
mov
sub
loop
dec
adc
lret
add
aas
imul
js
xlat
mov
sub
loopne
xchg
sarl
mov
mov
dec
dec
adc
jmp
lcall
add
test
stos
andl
icebp
iret
xor
or
scas
pop
movsl
sbb
xor
aad
pop
push
xlat
test
sbb
mov
adc
aaa
xor
mov
mov
fidivrl
mov
pop
dec
rcrl
mov
fwait
cli
popf
pushf
scas
sbb
pop
imul
push
fcoml
push
sub
push
bound
popa
pop
sbb
add
out
xchg
rcll
out
sbb
mov
movsl
pop
sub
stc
jp
jmp
sub
push
xchg
or
lcall
add
cmc
xchg
xchg
insl
es
movsbl
fcmovu
cmpl
sbb
cwtl
mov
scas
jge
rorb
ja,pn
cmp
xor
mov
dec
aas
adc
mov
test
sub
xchg
aas
pop
cltd
or
and
insb
pop
fcmove
les
adc
add
cmp
push
mov
fmuls
lock
sbb
jnp
sarb
xchg
cli
je
jg
stc
daa
sahf
clc
mov
sbb
sbb
hlt
adc
shr
dec
lcall
call
repz
je
fcmovnb
dec
pop
insb
mov
mov
or
les
scas
cmpl
sahf
and
mov
aam
movsb
mov
dec
jno
add
xlat
pop
pop
lods
outsb
push
sub
sub
js
frstor
ret
adc
out
jmp
fwait
test
into
je
pop
and
call
sbb
mov
and
mov
mov
stos
mov
add
cli
xchg
or
mov
or
push
push
add
mov
xchg
imul
mov
sub
enter
lahf
adcl
test
imul
add
shrl
aad
push
inc
js
imul
popf
loop
pop
and
mov
loope
testb
imul
aas
add
aaa
or
stos
jo
pop
mov
ret
pop
je
and
daa
add
ror
sbb
popa
cwtl
cmp
out
adcb
outsl
mov
push
cli
or
mov
mov
in
adc
jne
jne
xor
lret
dec
fiadds
add
jae
xlat
es
mov
lahf
addr16
pop
add
stos
push
mov
cmp
pop
in
inc
mov
fnstenv
test
in
and
cmp
jmp
ret
adc
pop
mov
arpl
mov
in
jge
cld
jno
mov
daa
push
jns
stc
jae
mov
lahf
in
push
adc
cmp
dec
jle
add
rcl
dec
inc
mov
fwait
sbb
cmc
add
xor
lret
jp
stos
push
mov
jle
pop
ror
cmpsb
dec
cmp
repnz
ret
cmp
cmp
push
push
lods
jle
out
jbe
scas
mov
jmp
mul
adc
jb
jnp
test
sbb
sub
jmp
inc
out
and
sbb
pop
fwait
xor
pop
add
stc
sbb
and
lcall
mov
xor
in
cmp
insb
int3
repz
xchg
cs
jns
push
shl
cmpsb
jmp
fisubrl
enter
add
mov
mov
pop
jb
add
adc
and
leave
pop
or
loop
mov
pop
jg
ret
sub
pop
addl
cld
jb
lock
fwait
pop
or
add
xchg
je
out
xor
pop
nop
fisubs
int
ret
jae
add
outsl
xor
into
pop
std
fcomps
in
lcall
imulb
int3
inc
psrlw
push
pop
dec
add
aam
pop
aam
insb
mov
push
call
xor
mov
adc
imul
push
sbb
xchg
add
xor
fwait
in
dec
in
adc
in
pop
adc
inc
into
mov
inc
xchg
jae
scas
cmpsb
adc
into
xchg
je
inc
dec
cltd
shlb
jge
adc
cwtl
adc
cltd
movsl
add
dec
jns
imulb
adc
inc
ret
aas
add
xchg
test
in
clc
mov
and
sub
aas
jae
scas
xchg
cwtl
inc
clc
hlt
push
into
mov
lcall
xchg
xchg
jnp
xor
push
fs
cmpsw
iret
sub
stos
push
inc
mov
lret
xchg
movsl
test
fistps
pusha
ljmp
out
cmp
mov
lods
cmpsb
pop
out
push
test
aam
sbb
nop
test
adc
cli
int
xor
es
test
or
adc
lock
mov
mov
xchg
and
lret
inc
ret
insl
sbb
xchg
sub
subb
dec
rcll
int
clc
jns
and
push
cmc
cwtl
or
mov
or
push
lods
ficompl
imulb
pusha
jg
lret
fcomps
addr16
aaa
int
inc
push
jnp
test
aad
daa
pop
imul
and
mov
inc
push
mov
sahf
test
mov
repz
aad
outsl
lahf
jge
cltd
mov
jb
xchg
sahf
xorl
dec
mov
test
push
pop
jae
out
dec
dec
xchg
movsb
lret
jmp
push
int3
lahf
and
outsl
xchg
fidivs
cli
push
lea
mov
mov
or
mov
incl
dec
int
fnstcw
inc
jge
cmpb
ja
aaa
mov
xchg
rcr
sbb
xorb
scas
jecxz
xchg
hlt
cmp
xor
pop
imul
adc
clc
mov
sbb
jg
int
cmp
xchg
pop
mov
pop
push
data16
xor
repz
cmp
and
test
push
pop
popf
and
sub
push
mov
mov
pop
push
xchg
mov
mov
fistl
push
push
mov
stos
xchg
out
push
fwait
sub
mov
push
fdiv
push
mov
dec
pushf
xor
cmpsb
and
cmpsl
dec
push
or
sub
pop
sub
and
aaa
pop
xchg
cmp
aad
cmpl
jnp
mov
popf
xor
mov
jns
outsb
stc
xor
into
inc
xor
aas
out
aam
shrb
dec
aam
aad
lret
ss
mov
pop
jnp
test
jmpw
cmpsl
fmull
faddp
insl
js
xchg
stos
imul
jle
push
push
jmp
ja
xchg
push
out
mov
cmp
push
insl
xchg
jle
mov
xchg
fisubl
xchg
push
fxam
pop
mov
fsubs
fs
out
cmp
push
dec
faddp
sub
aas
or
fsubl
test
addl
sbb
add
movsb
jnp
int
add
push
sub
testb
push
xor
inc
arpl
ss
pop
loopw
jmp
in
mov
jbe
ljmp
and
add
clc
andb
test
mov
push
aam
push
ret
mov
cmp
mov
aas
cmpsb
cmp
jae
es
lret
mov
sahf
push
mov
test
aas
out
fs
fidivrl
sbb
cwtl
xchg
pop
push
in
push
adc
out
dec
loop
stc
pop
je
idivb
sub
int
xchg
push
xchg
inc
aad
jmp
pushf
aad
or
cmpsl
arpl
pop
dec
out
pop
popa
imul
jnp
inc
cmc
sub
out
adc
gs
mov
aas
or
xor
push
pop
mov
adc
sti
sbb
inc
loope
jecxz
iret
mov
cmpsl
mov
adc
jle
mov
xchg
mov
std
repz
mov
push
mov
mov
jl
inc
push
insl
cmp
es
push
push
out
mov
ss
fiaddl
in
add
pop
jno
jp
and
stos
loop
mov
mov
add
into
xor
popf
xchg
adc
dec
mov
inc
arpl
mov
add
push
adc
into
in
mov
and
aad
out
and
addr16
pop
stc
dec
mov
or
cmp
inc
sub
cmc
lea
lcall
sub
fildll
xchg
int
andb
jle
mov
jbe
test
jl
out
mov
scas
xchg
dec
repz
pop
xchg
stos
mov
pop
xchg
sbb
inc
xor
out
xchg
jmp
clc
adc
inc
jl
hlt
xlat
inc
sbb
test
add
orb
fstps
test
fsubr
ret
fucomip
icebp
inc
sub
xchg
sub
adcl
rcr
pop
outsl
rcrb
xchg
in
xchg
out
dec
or
imul
ljmp
fldenv
jl
add
loopne
pop
loope
loope
pop
mov
xor
xchg
or
sub
cmp
sahf
and
add
pop
mov
adc
mov
inc
push
movsb
sahf
push
mov
cmpsl
sub
push
mov
mov
lahf
insb
fmull
mov
jge
ja
lahf
xchg
insl
lods
or
in
lods
fisttpll
or
int3
inc
mov
dec
imul
dec
and
push
in
fmuls
jns
xchg
push
and
cwtl
mov
push
xchg
aam
push
ja
cmp
dec
adc
fadds
leave
and
js
outsl
stos
in
xchg
popa
and
xchg
int
ds
pop
in
add
pop
movsb
or
js
add
sar
fdivrl
cld
sub
or
pop
pusha
loop
in
sbb
insb
mov
test
push
mov
cmp
jo
leave
inc
addr16
and
arpl
jg
push
icebp
lods
push
push
loopne
add
daa
push
out
lea
or
ret
mov
test
sub
popa
and
test
frstor
sub
add
sti
mov
cmp
je
test
or
sub
jle
add
cltd
call
or
sub
mov
xlat
push
hlt
in
push
cmc
ja
pusha
sbb
adc
adc
fisttpl
data16
xchg
pushw
xlat
jae
jnp
xor
stos
int3
and
push
xchg
dec
mov
in
gs
dec
sbb
cmp
mov
repnz
jno
rorb
sbb
sbb
rcrb
int
jecxz
sbb
adc
mov
cmpl
shl
pop
dec
loop
mov
or
mov
dec
cltd
lods
mov
xchg
imull
jecxz
test
leave
push
sub
sub
pop
ljmp
rcll
xchg
faddp
jp
mov
jge
push
add
inc
dec
dec
rorb
cld
clc
sbb
cmp
stos
je
xchg
icebp
mov
enter
cmp
push
push
pop
or
rcr
pushf
rclb
jno
sub
and
or
dec
xchg
lds
pop
mov
jle
adc
loope
pop
aad
xchg
in
sbb
dec
fs
mov
sbb
stos
js
daa
insl
push
fwait
nopl
std
nop
ficompl
jmp
mov
pop
sar
pop
std
or
sub
xchg
loope
mov
pop
pop
pop
cmp
cltd
sbb
mov
std
mov
jl
fimuls
lds
and
lea
mov
jl
jnp
add
lods
jae
stc
leavew
clc
into
pop
sbb
sbb
shrl
xchg
jl
aas
cmp
mov
imul
ss
mov
adcb
stos
scas
daa
out
mov
or
in
je
fisttpll
test
cld
shrb
rolb
call
jo
cwtl
test
aam
loop
adcl
mov
jae
inc
js
pop
push
and
cwtl
int
push
push
test
xchg
xor
push
jg
adc
mov
jg
insb
mov
sbbl
mov
dec
xchg
fisubs
or
aaa
aas
popa
mov
cli
push
int3
push
or
shrb
sbb
test
stos
lcall
daa
sbb
movsl
jmp
in
vprotw
rolb
push
xor
adc
cmc
add
xchg
adc
lods
rclb
mov
xchg
je
out
sbb
inc
lret
aad
scas
and
icebp
sbb
sbb
pop
mov
pop
mov
cs
jmp
push
arpl
je
mov
xchg
aad
or
iret
pop
cmp
inc
dec
jmp
ficompl
ja
cmp
test
mov
daa
out
test
out
cmp
or
repnz
mov
pop
inc
adc
cmp
jle
push
sub
addr16
outsb
les
sbb
shrb
sarb
xchg
cmp
fcmovne
int3
rolb
xor
enter
test
scas
icebp
cmp
repz
mov
add
mov
xchg
mov
mov
test
add
leave
inc
mulb
sti
lods
idivb
or
mov
cmp
in
fwait
dec
pop
jge
repz
jle
lock
bound
xchg
sahf
scas
jg
and
jecxz
cwtl
or
es
cmp
push
lahf
adc
lock
adc
out
orl
stos
mov
sub
repz
or
inc
pop
and
jnp
xor
imul
pop
push
cmp
in
insl
lcall
pop
push
xchg
jne
shrb
xchg
fsubp
push
mov
fwait
decb
fcmovnb
pop
jle
jp
scas
iret
sysexit
lret
int3
or
aas
into
addr16
jle
cmpsl
jne
sarb
pop
pop
or
push
lret
sub
cli
mov
lods
mov
sbb
fs
fsubr
test
outsl
rcl
cmp
inc
xor
mov
jmp
mov
jmp
xchg
lds
inc
lcall
loope
mov
in
in
out
in
push
ds
out
fbstp
mov
cs
jno
lret
insl
add
jecxz
fcmovnbe
sbb
addl
cmpsb
scas
arpl
mov
ss
push
mov
lahf
dec
pop
dec
dec
cmp
pop
push
add
cmp
push
and
add
xchg
push
fadds
cmpb
je
xor
mov
sbb
out
cltd
xor
inc
and
mov
xchg
popf
mov
mov
fdivs
mov
cld
add
stos
lock
mov
jl
ljmp
jl
out
adc
out
sub
test
ja
incb
in
rep
cmp
ja
mov
sub
mov
jl
out
mov
mov
cmp
lret
ficoms
sub
int
dec
mov
sbb
out
cli
divb
pop
mov
pop
cmp
leave
test
push
movsl
sub
leave
inc
pop
or
loop
lds
hlt
not
push
repnz
rclb
js
adc
sbb
leave
das
xlat
jle
and
fwait
mov
xor
fisttpl
and
xor
icebp
push
movsb
mov
movl
dec
es
push
and
xor
out
sub
and
xchg
loope
xchg
mov
add
add
and
xor
test
xchg
stos
and
add
mov
xchg
popa
outsl
jg
insb
cmc
scas
in
mov
fdivrl
sbb
dec
push
fistpl
sub
dec
inc
cmpsl
mov
add
loop
leave
dec
sti
bound
mov
cmc
shrb
test
fwait
add
push
sub
clc
push
and
or
les
pop
cmc
xchg
sub
mov
fwait
ret
adcb
mov
lock
je
mov
cs
lahf
and
addps
aad
pop
mov
mov
shl
mov
nop
adc
xchg
adc
push
push
fisubrs
ja
mov
lds
inc
add
lods
ficompl
movsl
mov
sbb
add
out
mov
push
jge
sub
dec
int
es
pop
enter
xchg
add
mov
pop
pushf
cs
xchg
lea
cmp
repz
ljmp
xchg
in
test
cmp
mov
sub
frstor
aas
inc
dec
mov
push
ror
adc
pop
cmpsb
ds
inc
mov
cmp
insl
rcl
push
adc
add
mov
add
xchg
icebp
push
dec
fdivs
jno
pusha
xchg
std
or
aaa
sub
mov
and
in
ficompl
fmull
outsl
popw
fldl2t
add
jbe
call
mov
adc
push
push
mov
or
dec
int
or
jne
cmp
pushf
push
inc
mov
je
insb
dec
call
test
lock
cmp
fst
adc
inc
xchg
clc
mov
rclb
imul
js
cmpsl
int
or
inc
cs
faddp
pop
cmovp
pop
out
shll
out
sbb
cmp
mov
cmpsl
insb
jno
es
push
mov
mov
scas
or
lea
rorb
into
int3
popa
movsl
cmp
cmp
lret
xor
mov
mov
ss
gs
sbb
xchg
sbb
mov
xchg
rcr
jmp
mov
cmp
fidivl
mov
or
dec
jge
jp
push
or
jmp
xchg
jbe
fdivrp
leave
xor
mov
nop
add
jns
mov
adc
cmp
loopne
dec
shll
push
dec
or
and
mov
mov
pop
mov
ret
add
pop
data16
sub
push
inc
jge
in
dec
movsl
xorl
test
cmp
xchg
aam
movsb
xchg
mov
jp
sbbl
imul
aad
adc
icebp
scas
sub
loop
push
cs
shll
or
fcmove
push
imul
fisttps
mov
sbb
jge
cld
add
out
pop
loopne
or
ja
repnz
fldt
test
add
das
xor
lea
es
inc
ret
cmpsb
jge
jo
stc
leave
nop
test
aas
jb
sbb
mov
insb
jp
sbb
xchg
sti
sub
fsts
or
insb
arpl
aas
clc
cmp
lea
or
clc
jl
in
cld
leave
xchg
js
into
out
fwait
cld
out
lea
jns
cmp
inc
mov
or
mov
sub
add
loope
push
lds
cld
outsl
das
aam
sbb
into
mov
aad
sub
xchg
fstl
addb
add
inc
std
sub
fcomp
pop
xor
jp
sbb
cs
lods
data16
adc
lret
movsl
jnp
mov
sbbl
inc
and
add
mov
cmp
jmp
rcll
adc
lret
mov
mov
pop
fistps
cmp
push
xchg
mov
push
repz
ljmp
adc
push
mov
sub
dec
or
sbbb
enter
pop
pop
adc
int
adc
inc
lods
leave
dec
aad
cmp
inc
mov
jo
dec
mov
ljmp
rcr
rcrb
push
or
and
les
push
fbld
or
psubb
or
stos
int
jo
daa
cltd
mov
ficoms
imull
jl
jno
ret
sbb
pop
or
add
inc
enter
jle
loope
inc
out
cmp
push
fwait
ds
shlb
imulb
dec
loop
pop
inc
in
dec
push
xchg
sbb
and
pop
mov
sub
mov
pusha
mov
mov
push
mov
or
icebp
shll
adcl
daa
mov
or
mov
out
xchg
divl
mov
xor
lds
repnz
xor
mov
lret
mov
sbbl
loopne
aam
adc
xchg
xor
testl
stc
sbb
enter
inc
xor
incb
pop
nop
push
add
stos
sbb
out
scas
ja
cmpl
mov
mov
push
xchg
xlat
lcall
push
jmp
roll
dec
sbb
dec
lahf
pop
push
or
lcall
add
and
push
adc
cmp
hlt
out
and
dec
jb
rcrb
or
cmp
ret
adc
xor
sarb
dec
mov
divb
mov
mov
out
mov
push
insb
jle
inc
push
push
imul
xchg
jl
sbb
movsl
in
mov
jecxz
sahf
int3
aaa
out
mov
cld
or
adc
shll
jne
cmp
mov
adc
jp
and
scas
movsl
dec
fsub
mov
cmpsl
mov
inc
xor
std
pop
dec
jecxz
mov
int
cltd
in
out
adc
mov
push
hlt
cmpsl
out
xchg
jmp
pusha
xchg
push
dec
test
mov
fwait
mov
pusha
mov
xor
adc
add
sub
and
movsl
xchg
lock
out
test
xchg
xor
mov
sub
adc
ds
push
mul
push
imul
orb
inc
daa
lods
into
sbb
pop
jmp
lahf
jne
pushf
sub
imul
nop
mov
adc
test
fsubrl
lds
push
xchg
mov
popf
xor
int3
mov
in
sbb
out
xchg
adc
or
aaa
xor
mov
incl
add
adc
outsl
stos
pop
test
mov
andb
jp
inc
lahf
test
pop
jno
aaa
cmc
arpl
into
pop
jmp
jb
repz
xor
push
or
mov
or
mov
fisubrs
dec
push
repnz
test
pop
adc
and
and
iret
in
movsl
scas
push
icebp
mov
pop
pop
cli
cmp
rclb
sbb
or
pop
loope
push
jge
and
jge
cmp
xchg
jae
mov
xor
mov
xor
push
xor
imul
jo
data16
mov
out
mov
cmp
gs
stos
lret
daa
mov
fcompl
adc
in
mov
sbb
mov
cmpsb
cmc
cmp
xchg
mov
mov
iret
inc
daa
xor
sub
jmp
pop
xor
inc
push
jl
aaa
pop
cmp
inc
jl
xchg
adc
adc
stos
cltd
cmp
push
push
xor
insl
sbb
jge
movsl
dec
xchg
dec
mov
dec
lahf
sub
shlb
mov
pop
ret
aaa
nop
jae
sbb
or
inc
rcrl
out
dec
lcall
movsl
divl
mov
stos
push
jmp
mov
inc
push
int
mov
in
mov
sub
call
push
jmp
out
jno
movsb
mov
pop
dec
jae
stc
in
lret
imulb
mov
ljmp
jecxz
cwtl
outsb
cmp
sbb
push
sahf
xor
xchg
roll
test
sbb
aad
sub
cmp
icebp
push
inc
mov
pushf
fldenv
mov
daa
push
adcl
mov
shr
ds
jb
mov
sahf
andb
mov
mov
test
jle
adc
jno
aas
cmpsl
push
mov
ss
push
lcall
movsl
jge
sbb
push
gs
out
lret
test
fisubs
add
xor
insl
lods
nop
popf
mov
pop
xchg
movsl
jg
or
cmp
mov
loope
add
dec
inc
add
mov
pusha
je
mov
push
push
sbb
inc
xchg
insb
xor
out
int
rorl
out
fs
pop
pop
aam
inc
mov
add
add
add
dec
mov
push
out
gs
fwait
out
pop
mov
mov
rclb
outsb
mov
idivl
call
pop
shlb
dec
adc
push
adc
mov
xor
mov
sbb
push
jge
push
sbb
or
cmp
shl
in
aad
xchg
push
push
int
mov
fildll
mov
sub
inc
dec
sub
inc
adc
mov
xchg
inc
popf
out
data16
stc
push
fnstsw
push
rolb
dec
cmp
or
jge
sub
dec
inc
loop
inc
hlt
xor
add
dec
lock
xchg
xchg
mov
push
or
xchg
ja
aam
dec
push
pop
rorb
in
loopne
push
lret
mov
lret
testb
jb
aas
jne
sbb
adc
xchg
and
sti
ljmp
out
push
stos
fnstsw
mov
ljmp
ret
xor
adc
clc
test
sbb
ds
cli
insb
and
xor
call
cmpsb
daa
add
mov
dec
test
lods
adc
pop
cmp
inc
addb
into
sub
dec
lds
sbb
or
push
in
xlat
sbb
rcrb
sbb
test
and
addr16
adc
in
and
adcb
lock
mov
cmp
shr
shrl
xchg
mov
mov
inc
jno
mov
adc
mov
loop
addr16
repz
push
les
cmp
xchg
pop
push
mov
mov
add
daa
rcl
int
jle
test
divb
xor
imul
testb
idiv
xor
nop
es
or
xor
insl
aam
xchg
or
cmp
dec
sti
xchg
rcll
loop,pn
push
ljmp
xchg
push
fadds
adc
adc
or
jo
push
stos
stos
repnz
jmp
clc
adc
jne
sbb
notb
mov
jp
mov
dec
aam
rcl
cltd
ds
pushf
dec
mov
insb
imul
mov
or
xlat
out
push
mov
icebp
pop
addr16
dec
mov
jbe
mov
mov
pop
daa
leave
lahf
addl
shrl
push
mov
xlat
jns
hlt
xor
adc
dec
outsl
inc
lahf
pop
pushw
xor
add
mov
jno
adc
pop
loope
test
lea
call
das
loop
inc
fdivl
mov
push
shl
imul
adc
inc
inc
inc
push
sbb
lea
mov
mov
loope
addb
movsb
rclb
scas
sub
pop
out
aas
mov
test
push
push
repnz
ss
rcll
and
dec
dec
push
out
enter
mov
mov
and
push
imul
push
aam
sbb
sub
push
into
fadds
sahf
or
inc
lods
jl
je
addr16
xor
fdivrl
mov
in
inc
in
sbb
insb
and
inc
add
movsb
cltd
movsb
mov
insl
std
jl
sbb
or
clc
push
sub
mov
arpl
mov
push
out
aad
fisubl
jge
imull
fistps
pop
icebp
fnstcw
std
mov
mov
fstpt
unpckhps
nop
insb
fidivrs
js
popa
addl
mov
or
add
xlat
adc
or
add
mov
movsl
loop
xchg
inc
inc
cmpl
cli
mov
jmp
lds
xor
sub
shlb
add
pop
and
xor
cmp
imul
es
cwtl
adc
bound
es
adc
fucomip
nop
rcll
cmpsl
loopne
sbb
test
push
out
es
out
or
mov
jns
scas
rorb
popa
stos
jge
push
pushl
cs
leave
and
mov
xchg
xor
or
aad
mov
cld
imul
and
add
jg
mov
call
and
push
sub
mov
or
xchg
and
out
add
popa
push
mov
pop
xchg
test
ret
cmp
out
std
pushf
roll
push
cmpl
mov
and
les
mov
test
pop
mov
cmp
or
sub
aas
and
pop
push
cltd
xor
das
xor
stos
iret
sbb
jg
outsl
fstps
push
loope
adc
dec
movsb
inc
bound
mov
pop
loopne
jbe
xchg
fstl
loope
lcall
xlat
push
lcall
mov
xchg
jnp
orb
int
push
ficoml
lea
sub
pop
shl
fmull
jbe
sti
fsubp
pop
jno
aas
jl
sub
add
int
lods
xchg
js
mov
stos
sbbb
mov
and
jl
ficoml
sub
push
mov
xor
in
xchg
inc
rcrl
andl
fstcw
test
or
daa
lods
je
add
xchg
rorl
sub
mov
xchg
xchg
fisubrs
cmp
test
sti
pop
addb
dec
lret
insl
mov
leavew
jnp
mov
inc
mov
and
add
cmp
mov
loope
mov
cmp
push
ret
xchg
push
cmp
insb
call
xor
and
jp
inc
les
push
mov
xor
ficoml
sti
das
rcrl
imul
mov
data16
pop
mov
mov
fwait
push
div
mov
mov
jns
daa
mov
mov
insb
mov
call
xor
cs
cmp
jge
aas
sbb
and
enter
pop
loopne
xchg
gs
push
jbe
stos
cmp
mov
cwtl
lods
test
mov
xor
sub
fistps
lcall
mov
xor
cmp
adc
data16
inc
pop
and
aaa
cwtl
cmp
dec
xor
mov
into
sti
enter
loop
cld
sub
xor
or
decl
push
mov
je
das
iret
clc
daa
popa
shlb
add
lcall
xchg
adc
sbb
dec
into
cmpsl
push
rclb
arpl
test
les
inc
lods
mov
mov
fwait
cld
fbstp
dec
outsb
and
xor
lret
fmuls
stc
gs
scas
add
rep
ret
adc
pop
orl
or
insl
lcall
lcall
mov
out
mov
int
lods
pop
cli
pop
pop
adc
or
or
cmp
sbb
xchg
push
cltd
lods
xchg
jns
pop
test
or
dec
mov
dec
xchg
inc
add
pop
fidivrs
or
inc
jg
pop
jne
xchg
mov
pop
fdivrl
sar
test
push
add
sub
and
cmc
pop
subl
out
insb
pop
ljmp
mov
xor
cmp
in
mov
lods
mov
lret
push
jae
xchg
jl
xor
cmp
fidivrs
int
xchg
notb
into
xchg
in
mov
inc
imul
xchg
pop
insb
push
adc
sbb
outsl
shll
dec
push
shl
sbb
je
fldcw
xor
xchg
push
call
mov
shll
repnz
cmc
into
pushf
adc
xchg
xchg
or
aas
movb
fldenv
out
sbb
dec
shlb
pop
jne
jae
inc
test
rclb
xchg
pop
pushf
jbe
aam
mov
adc
pop
jp
mov
mov
stos
dec
idivl
lahf
jbe
adc
jg
xchg
xchg
pop
mov
pushf
adc
mov
add
fadd
pop
mov
cltd
and
jb
sub
arpl
data16
mov
shll
inc
ja
add
in
inc
data16
sarb
mov
push
iret
mov
sbb
lret
mov
inc
loopne
mov
cmc
sbb
mov
inc
pop
inc
sar
movsb
ja
shlb
lcall
add
push
outsl
aaa
call
inc
daa
push
popf
push
add
lret
jmp
dec
ja
repz
sbb
xor
add
push
sub
dec
insb
clc
fisubrs
adc
popf
sbbl
icebp
mov
and
cmp
jne
sub
and
lcall
inc
les
sub
popl
cmpsb
imul
hlt
in
fldl
sbb
sub
sbb
or
inc
popf
ss
jecxz
loopne
leave
test
pop
sbb
call
lret
lret
pop
jl
popa
add
push
xchg
xchg
mov
pop
or
sbb
mov
mov
loopne
jnp
sti
testb
pop
jb
rorb
xchg
lods
inc
cmp
push
add
movsb
jge
test
addr16
dec
adc
repz
adc
inc
outsl
push
and
sbb
xor
sbb
sbbb
dec
cmp
xchg
aas
xchg
mov
bound
inc
dec
or
sub
sub
shll
lret
inc
jmp
cmp
adc
test
or
xchg
mov
ja
lret
cmp
mov
mov
pop
mov
push
xor
mov
out
cmc
or
and
add
lods
jb
data16
enter
arpl
inc
dec
popf
push
mov
xlat
mov
cmpsb
or
jl
je
cli
out
cld
aaa
lea
mov
out
into
mov
sbb
in
rolb
inc
mov
push
aam
out
aad
int3
dec
bnd
xchg
in
ret
xchg
nop
xor
mov
ret
push
in
ror
aaa
dec
sub
cmpsb
add
pop
jae
mov
push
cmp
sbb
mov
add
xor
adc
mov
pop
mov
arpl
and
xchg
add
jp
cli
bound
adcl
jno
pop
xor
jmp
lret
popf
icebp
loope
add
mov
ljmp
lds
in
or
or
adc
pop
mov
mov
pop
dec
ss
imul
nop
mov
ss
mov
roll
jno
mov
sub
cmpsb
push
pop
add
pusha
jl
sbb
frstor
leave
or
insl
fnstcw
in
mov
fsubrl
aam
inc
sbb
or
xchg
push
xchg
insb
ljmp
jmp
xchg
pop
xor
mov
rcll
jmp
jecxz
roll
int
std
xor
shll
test
add
push
xchg
jnp
aad
adc
xor
pushf
jne
mov
test
inc
gs
jne
mov
push
mov
or
push
ljmp
xchg
pop
add
mov
test
xchg
jo
jbe
jmp
in
pop
call
stos
mov
add
fidivs
sbb
jmp
sbb
shll
loope
xchg
enter
popf
fsts
push
enter
sbb
xchg
jnp
jo
or
rolb
sarb
cmp
mov
sbb
cmp
or
push
push
xor
adc
les
add
mov
aaa
inc
xchg
dec
add
fst
lret
and
inc
movsl
daa
pushf
rcrb
push
and
adc
cmpsl
loop
pop
addl
shrb
add
mov
in
dec
dec
aaa
jae
outsl
sub
cmp
fdivrs
cmp
cmc
jb
fwait
repz
fwait
in
fidivl
pop
inc
mov
xor
stos
mov
scas
mov
insl
sbb
mov
jl
lcall
inc
jae
js
xchg
je
or
mov
notb
jecxz
rorb
xchg
add
es
sahf
mov
hlt
rclb
outsb
pop
sub
je
or
xor
sbb
lcall
xor
mov
lcall
stc
mov
sbb
arpl
pop
mov
mov
icebp
lahf
test
inc
rorb
es
pop
popl
cmp
inc
outsl
movsl
lods
sub
lcall
mov
xor
test
icebp
cmp
fdiv
icebp
in
insl
addr16
sbb
dec
push
and
pop
push
pop
jns
xlat
ret
mov
out
adc
xchg
dec
xchg
add
shll
sbb
shl
mov
xchg
xor
lock
test
jae
and
add
int3
inc
xor
lea
and
pop
xchg
hlt
add
dec
and
mov
ja
sti
adc
and
sub
cmpsl
cmc
mov
jg
divl
lret
cmp
and
sub
mov
xor
push
and
testl
jne
movsl
adc
test
xor
std
sub
imul
inc
stos
dec
adc
shrb
jl
mov
mov
add
pop
movsl
mov
mov
cmc
push
dec
pop
sahf
rcll
cmc
imul
mov
push
sub
lods
push
jle
adc
jae
in
lahf
mov
or
xor
cmp
xor
clc
shll
dec
cmp
std
mov
xor
push
frstor
jb
pop
cwtl
pop
lret
stos
iret
push
sbbb
add
mov
mov
inc
push
push
mov
leave
ljmp
sbb
loope
in
and
cmp
sub
mov
stc
stc
push
push
xchg
in
or
lahf
lods
addl
pop
add
add
dec
movsb
push
mov
dec
add
negb
xchg
cs
rcrl
test
push
mov
lods
mov
dec
jns
cld
pop
into
and
cmp
clc
enter
jns
mov
or
in
push
and
or
ret
mov
repz
fisubrs
push
gs
arpl
fstpt
inc
inc
mov
adc
push
mov
xlat
mov
loopne
or
jno
xchg
imul
sub
ficoml
bswap
xchg
sbb
mov
insl
shrl
xor
xlat
cmp
gs
push
aam
repz
pop
hlt
or
jg
pop
pop
lret
cmp
jle
and
mov
stos
dec
or
std
xlat
xchg
mov
push
jnp
fnstcw
xor
cltd
pop
lsl
adc
sub
faddl
icebp
in
xchg
fists
dec
mov
fidivrs
push
loope
mov
pop
int
in
stc
mov
dec
out
sahf
loop
xchg
pop
or
dec
inc
test
bound
int
mov
mov
or
cli
inc
push
imul
mov
cld
xcrypt-ctr
cmpsl
sbb
mov
lods
jae
stos
subl
roll
sti
fcompl
cmp
mov
xor
inc
xor
add
mov
cwtl
testl
cwtl
cmp
jge
pop
mov
fadds
jp
js
mov
rcl
sahf
hlt
xor
adc
popf
pusha
int
pop
pop
pop
mov
out
es
sbb
sti
sub
iret
and
push
data16
mov
insl
inc
sub
nop
jns
iret
or
mov
lock
sub
mov
insb
pop
pop
pop
lahf
loope
jl
jmp
xchg
fnstenv
add
xchg
aad
repnz
sbb
loop
cmpl
push
pop
adc
push
mov
sub
popa
xchg
jnp
xchg
fimuls
mov
inc
push
repnz
ret
mov
notb
lret
push
dec
xchg
rorb
cmpsl
rolb
mov
jmp
adc
mov
and
jge
iret
pop
adc
jnp
cmpb
xor
cld
mov
mov
sbb
cs
lods
sbb
xchg
in
xor
js
loop
xchg
add
nop
in
mov
jl
adc
mov
cmp
out
xchg
push
adc
ss
pop
in
pusha
outsl
or
repnz
sub
ds
inc
lcall
or
orb
imul
arpl
and
pop
jno
shrb
lock
sub
dec
adc
sub
ret
aad
jp
fimull
rorb
shlb
bound
in
imulb
cmp
imul
adc
mov
push
outsl
pusha
mov
mov
test
mov
mov
jp
out
repnz
inc
push
in
insl
out
pushf
daa
filds
fs
jae
imul
dec
aam
lcall
mov
xchg
jge
inc
mov
insb
xchg
or
call
fucom
stc
out
mov
sub
and
ret
jle
lret
dec
add
push
or
jge
xchg
ja
xor
mov
jge
push
push
pushf
insb
xor
jge
cmc
sbb
push
push
pop
adc
xlat
std
jmp
fcoml
mov
and
movsb
daa
jbe
jge
idivl
jne
add
enter
cmpsb
cld
out
in
mov
loop
fsubl
inc
dec
cmp
cmp
jo
test
shrb
mov
pop
push
ljmp
mov
ficompl
sub
xchg
and
sub
inc
push
in
lods
push
adc
scas
xchg
imul
int
inc
add
mov
jle
sbb
sub
out
pop
and
fwait
adc
clc
adc
xlat
fnstsw
call
push
ss
dec
imul
outsl
outsl
cmp
loope
lds
mov
addl
xor
ret
nop
stc
lods
outsl
sub
cltd
fidivrl
dec
fsubrl
cmp
mov
mov
arpl
bnd
and
cmp
sub
xchg
aam
jns
cmp
inc
sub
arpl
mov
imul
cmp
and
adc
push
mov
fisubrs
mov
imul
xchg
enter
inc
jno
inc
mov
das
xchg
cli
and
fsubl
pop
lret
cmp
adc
loop
add
pop
jle
xchg
inc
inc
lods
mov
pop
daa
in
fildl
or
mov
shrl
scas
sub
jp
test
neg
iret
inc
loop
fsqrt
xchg
bound
mov
hlt
das
add
ja
stc
iret
fnstenv
xchg
jae
addb
mov
out
addb
shll
loope
lods
cmc
cmpsb
out
adc
sbb
shll
adc
rorb
push
div
xlat
test
jo
stc
hlt
sbb
adc
call
inc
int
or
lea
push
mov
add
lea
pop
pop
addr16
orb
out
jl
sub
out
negl
hlt
cmp
cmp
xor
mov
aad
mov
mov
sbb
imulb
addr16
sub
xor
jl
mov
sbb
ss
mov
ffree
add
jecxz
mov
pop
sub
mov
or
mov
ss
pushf
test
aam
pop
hlt
xchg
jb
addr16
dec
mov
mov
out
xchg
roll
mov
mov
imul
andb
lds
les
mov
sbb
in
clc
fcomi
jl
sub
pop
imul
repz
sub
fsubrl
stos
add
sbb
sbb
adc
lds
daa
sub
dec
test
cli
stos
mov
hlt
push
stos
fsubr
in
push
jbe
sub
pop
inc
inc
sahf
cmp
inc
mov
xchg
ret
mov
sub
push
sub
fstpl
lds
cmp
xchg
mov
inc
xchg
mov
loope
out
and
cmp
inc
fnsave
aam
cmp
add
push
imul
popf
popa
int3
movsl
or
fs
xchg
jno
mov
fucomip
leave
push
add
push
mov
dec
dec
int3
js
jge
dec
cmp
jp
pop
test
shr
jg
test
insb
and
int3
mov
adc
xchg
popa
jle
add
dec
les
jae
push
imul
sub
inc
mov
xchg
in
push
inc
repz
sub
sub
ds
sub
jp
popl
movsl
call
lea
negb
not
shr
cmp
jmp
iret
bnd
push
cmp
scas
inc
outsb
sbb
out
outsl
hlt
iret
push
sub
mov
mov
inc
sahf
int3
sbb
push
cmpb
rcll
push
mov
inc
inc
addr16
outsb
mov
stos
or
imul
adc
icebp
scas
pop
and
das
out
xchg
lahf
pop
and
mov
daa
nop
inc
test
insb
int
hlt
into
mov
mov
jp
xchg
fisttpl
imulb
incl
or
rolb
jnp
bnd
bound
xor
fsubr
addr16
mov
ror
mov
mov
add
lock
xchg
fldl
jmp
popa
int
inc
clc
loop
fldt
cwtl
xor
sub
cli
sbb
daa
int3
daa
push
das
outsl
xor
sbb
jle
xchg
cmp
mov
gs
loope
push
mov
hlt
pop
xchg
jbe
insl
pop
fldl
cwtl
repnz
stos
lret
mov
out
adc
sbb
dec
push
mov
lret
movsb
std
pop
shrb
fstl
xor
int
call
and
mov
sbb
test
inc
or
lock
jecxz
insb
lods
xchg
jg
cmpl
nop
stc
mov
inc
jnp
movsl
xchg
addb
test
sti
inc
jmp
iret
lea
cmp
dec
adc
inc
pop
sahf
cmpsl
add
xchg
pop
movb
cs
cmp
jbe
dec
pop
jmp
jns
out
adc
dec
roll
loopne
jno
rorl
sbb
sarl
daa
std
cmp
mov
stc
sub
mov
push
pop
fisttpll
int
xlat
jl
hlt
mov
pop
jns
enter
decb
xchg
xchg
or
dec
xchg
lret
push
sbb
sbb
cmp
imul
sbb
aas
adc
shlb
xchg
jmp
mov
ss
std
sub
fdivr
sti
adc
xor
hlt
lahf
push
dec
into
add
ss
out
xor
enter
aad
mov
aad
loope
add
or
xor
iret
pop
aad
push
icebp
addl
ljmpw
mov
dec
pop
mov
mov
out
movsl
outsb
xchg
xor
push
ret
mov
xchg
stos
and
pop
sbb
xchg
push
test
mov
xchg
insb
dec
divb
fs
cmc
pop
pop
push
jge
sti
sub
incb
pop
mov
orl
es
dec
xor
cltd
push
xchg
ljmp
mov
flds
jnp
test
sub
scas
aad
push
es
mov
in
cld
or
xchg
push
repnz
test
cmp
das
jmp
cmp
cwtl
or
mov
xor
cmpsb
sahf
icebp
lcall
xchg
jg
je
cmp
repz
mov
push
insb
pop
and
xor
addr16
lahf
hlt
int3
xlat
jg
out
sbb
push
inc
mov
cmp
jge
sbb
clc
dec
xor
lret
lcall
mov
sub
cs
jno
pop
xor
or
mov
stc
jl
sub
xlat
xor
inc
lahf
jae
xchg
shll
mov
divb
into
mov
add
insl
jae
xlat
mov
and
sarl
cli
cmp
ret
xchg
sbb
mov
aaa
or
dec
js
sahf
jmp
test
clc
xchg
jns
xchg
lds
loope
sahf
inc
ficomps
xchg
movsb
lods
outsb
outsb
mov
outsl
shrl
cmp
xchg
adc
outsl
fwait
imul
cmp
fnstsw
jg
daa
mov
mov
add
cli
je
push
out
ret
and
dec
mov
add
sbb
jne
cwtl
mov
rcl
inc
inc
push
cs
bound
cli
mov
mov
xlat
shlb
ret
fdivs
fs
cmc
or
inc
push
push
and
call
fisubrs
aas
add
pop
std
lahf
mov
rcrb
sbb
xor
mov
aad
jne
arpl
xchg
add
mov
inc
cmp
cmp
sbb
movsb
pop
mov
cwtl
push
cmpb
test
rorb
in
cmpsl
or
je
jb
cld
xchg
call
jge
popf
adc
jb
into
aad
call
pusha
dec
fidivl
sub
call
gs
addr16
lea
je
sub
cwtl
pop
and
mov
mov
dec
mov
add
pop
ret
test
pop
mov
dec
lds
lds
sub
ja
pop
and
fistl
addl
fs
pusha
lcall
lcall
sbb
out
inc
aam
andb
jge
lret
shrl
aaa
fisubl
inc
loop
aam
mov
xchg
or
jbe
jb
stos
push
sahf
aas
xor
dec
mov
xchg
shr
push
movsl
inc
fdiv
and
mov
sub
sbb
fildl
verr
jno
mov
fildl
in
xchg
movsl
movsb
sub
inc
fidivs
inc
lcall
ficomps
pop
out
cmovle
jbe
sbb
sbb
dec
aaa
mov
adc
dec
aam
rorb
mov
pop
jmp
lods
mov
mov
inc
xchg
mov
cltd
xchg
mov
inc
sub
jmp
aad
inc
add
cmp
imul
dec
sbb
mov
cmp
sub
div
clc
leave
mov
sbb
in
adc
ljmp
lcall
add
cmpb
lcall
lods
rcrl
scas
xor
test
popf
lds
xchg
mov
cmp
loope
pop
dec
xor
cwtl
lock
adc
sbbl
mov
and
inc
push
sahf
je
or
mov
call
mov
je
push
int
or
push
pop
rcrl
cs
pop
sbb
insl
inc
out
xor
push
les
push
aas
leave
inc
ds
mov
jg
and
int3
mov
popf
push
in
in
stos
inc
push
aas
outsb
rcll
xor
sub
mov
arpl
xor
in
fidivs
pushf
popl
xor
adc
cmp
dec
out
imul
dec
inc
mov
xor
push
mov
inc
je
sti
movsl
push
aad
mov
cmpsb
daa
push
mov
mov
jmp
inc
or
mov
enter
mov
jg
movsl
jle
lock
pop
sbb
aam
jnp
pop
jl
pushf
hlt
call
in
pop
fists
test
mov
out
int
push
mov
cmp
loop
lods
dec
push
subb
mov
cmp
fstpt
and
in
push
jl
stos
cwtl
fldt
fistpll
jb
hlt
lcall
jnp
or
pop
in
popf
cmc
lock
int3
jl
pop
mov
push
mov
daa
mov
aas
cmpsb
stc
loopne
test
in
jb
scas
in
push
lret
pop
testl
push
jle
das
add
jl
rcll
icebp
mov
cmpsb
jns
jne
mov
sbb
pushf
xor
pop
cltd
aad
movhps
mov
jmp
les
or
movsb
movsl
fidivs
jmp
sub
dec
stc
xor
cld
inc
xor
cli
pop
lret
pop
mov
cmp
cli
inc
push
movsb
inc
int
jp
insl
lock
dec
mov
push
xor
push
hlt
int
sti
inc
data16
pop
and
scas
push
push
mov
int
mov
push
jge
aam
lcall
or
insl
aas
int
test
lock
or
int
push
jnp
sbb
ds
xor
sbb
add
loopne
imul
or
leave
push
pop
nop
jns
dec
mov
in
xor
mov
stos
or
pushf
sbbl
gs
mov
inc
cltd
fsts
hlt
cmp
xor
pop
enter
push
lds
les
inc
sub
dec
subb
push
out
jnp
movsb
scas
data16
mov
fstpl
push
pushf
dec
sbb
push
aad
adc
mov
or
mov
outsl
test
sarl
stc
arpl
pop
cld
lcall
in
adc
cmp
mov
loop
gs
orl
je
test
fstl
cmp
cmp
shll
adc
daa
mov
mov
sarb
jnp
mov
lock
je
imul
sbb
mov
imul
jns
mov
imul
mov
sub
scas
aam
jnp
xchg
mov
jno
mov
dec
push
jmp
roll
mov
push
mov
sub
cmpsl
push
adc
jnp
sbb
jg
clc
adc
sbb
xchg
push
out
push
cmp
xor
xchg
xchg
sub
lahf
cli
dec
iret
adc
sub
ljmp
in
mov
jns
into
notb
mov
push
xchg
lds
inc
lea
pop
outsl
push
xor
adc
push
mov
pop
jecxz
mov
movsb
xchg
arpl
push
loop
js
sbb
add
inc
aad
add
rcl
mov
cmp
leave
xor
pop
push
mov
mov
popf
sub
test
sub
and
xchg
xchg
lcall
sbb
inc
enter
popf
cmp
jns
mov
xor
xlat
dec
mov
lods
lods
sbb
and
dec
mov
xchg
fistpll
sub
and
sbb
and
jne
sbb
loope
sbb
adc
mov
pusha
mov
jl
inc
cltd
fidivrs
xorl
inc
cmp
loopne
lods
xor
push
mov
inc
popf
loope
adc
lcall
imul
xor
ljmp
shlb
jecxz
mov
mov
sub
rcll
add
js
mov
mov
push
xchg
add
fwait
pop
adc
dec
jmp
add
push
adc
mov
push
xor
dec
mov
out
insb
sti
aas
movsl
mov
inc
mov
filds
jae,pn
in
fwait
jl
jb
sub
cmpsb
jne
and
and
cmpb
jae
cmpsb
push
es
xchg
mov
push
dec
aad
mov
stos
sbb
stos
add
mov
stos
xchg
xchg
mov
cmpsb
dec
les
in
jae
add
test
mov
popa
sub
sbb
mov
add
xor
xchg
shlb
push
jne
push
aad
xor
repnz
inc
sbb
and
cld
jns
push
int
push
add
mov
inc
mov
xor
or
aad
roll
loope
jp
stos
daa
mulb
bswap
push
adc
xor
jns
sbb
and
jns
sbbl
kaddw
inc
mov
mov
out
xchg
rcrb
mov
cmpsb
xchg
pop
pop
sub
testb
xor
sbbl
icebp
xlat
sub
lods
mov
push
or
xchg
push
movsl
test
or
mov
xor
daa
aam
xor
leave
sbbl
mov
fldl
xchg
out
jg
or
insl
add
add
xor
test
mov
cmpsb
cmp
into
in
or
int3
mov
dec
jbe
xor
imul
adc
pop
xchg
dec
mov
pop
add
and
pushf
test
fwait
inc
mov
aam
test
enter
pop
aas
adc
mov
icebp
dec
cmp
mov
jg
cmpsl
gs
inc
gs
into
push
xor
mov
js
je
nop
fldenv
imul
repnz
sbb
in
outsl
xchg
rcrb
daa
or
ds
jb
mov
fdivrl
insb
psubb
jno,pn
loope
outsl
and
das
mov
sub
outsl
push
jmp
jo
xor
pop
pop
repnz
dec
cwtl
and
fildl
ljmp
lods
shll
push
and
push
mov
int
cltd
or
jne
push
mov
ljmp
icebp
mov
test
push
cmc
repnz
subb
cmp
sahf
test
enter
ficompl
mov
je
lods
int
out
outsb
jae
pop
rcrl
ret
inc
adcl
cmp
mov
sbb
or
xorb
xor
popa
add
stos
ljmp
cmp
xlat
mov
xlat
enter
sahf
inc
mov
jb
mov
imul
cmc
jmp
jnp
sbb
pop
inc
ret
pop
cs
jle
test
mov
cmp
mov
out
call
mul
and
fidivrs
vcmppd
aaa
add
or
pop
in
inc
sbb
or
fisubrl
or
mov
mov
insb
repz
sub
mov
int
mov
dec
xchg
cmpsl
xchg
push
mov
inc
and
adc
shrl
outsl
ds
in
pop
xor
cmp
stos
xchg
fsubrl
dec
push
push
sarb
mov
adc
pop
inc
adc
sti
rorb
adc
adc
push
jns
fiaddl
cmpb
movsb
push
pop
jo
fsubp
lods
cmc
mov
adc
lret
jnp
sub
aaa
enter
sub
push
stc
adc
pop
push
out
sub
adc
xor
adc
outsb
fldcw
adc
adc
jg
cmp
int3
cmp
lods
pop
add
out
rclb
cmc
ret
test
sub
mov
aam
int
fsubrl
pop
sub
cmc
js
adc
mov
sbb
xchg
jp
lret
mov
mov
or
rorl
dec
ja
iret
pop
call
add
jecxz
psubd
or
or
adc
test
fstps
and
and
dec
lret
lcall
nop
call
or
mov
mov
mov
mov
dec
cmp
mov
adc
lock
dec
pop
inc
movb
test
shrl
movsl
out
pop
push
dec
shrb
int3
jle
in
push
jne
jbe
aaa
mov
push
ja
movsb
jbe
loopne
push
mov
lock
or
int3
lds
daa
mov
imul
mov
mov
xchg
push
fstpl
pop
insb
sub
ja
je
ja
sub
adc
enter
and
imul
cmp
push
cmpsl
sub
in
arpl
sbb
mov
sub
sbb
cmp
pushl
cli
std
push
insb
xchg
jl
jmp
xchg
gs
js
lret
mov
pop
out
dec
xchg
mov
jb
pop
dec
ss
idiv
dec
inc
in
pop
js
out
add
repz
pop
sub
fcmovnbe
orl
addr16
mov
sub
pop
xor
cwtl
inc
movsl
data16
xlat
aad
lcall
or
loop
sbb
dec
insb
jmp
and
shrl
or
jg
dec
inc
mov
push
cmpsb
imulb
fmull
push
mov
fstl
negb
andb
xchg
addr16
mov
push
and
jle
int3
mov
pop
push
xchg
int3
ret
cmpsb
test
sarb
xor
shlb
daa
movsl
mov
fisubrl
jp
cmp
pop
imul
aas
in
test
adcl
repnz
mov
dec
aam
lds
or
xchg
data16
jbe
aas
mov
cwtl
aaa
sub
mov
add
andl
imul
vmread
cld
pusha
repnz
movsl
test
jmp
insb
pop
test
ds
lock
mov
popf
fyl2xp1
inc
push
jae
mov
jecxz
add
sub
inc
pop
les
popa
scas
pop
jl
je
cs
loope
xchg
fidivrs
sub
sub
fs
mov
mov
push
hlt
icebp
adc
test
inc
lods
roll
roll
in
sub
ror
imul
push
pop
test
fldt
daa
sbb
int3
mov
popf
insb
lahf
cli
mov
push
inc
repz
fwait
ds
mov
and
test
jp
push
outsl
xchg
push
ljmp
xor
push
push
and
jmp
dec
mov
std
and
xor
fisubl
je
adc
flds
ror
adc
mov
dec
adc
or
inc
adc
fwait
andl
xor
lret
jae,pn
clc
jg
test
ss
push
jge
pop
idivl
mov
test
lea
gs
mov
or
inc
push
adc
pop
xor
shll
rolb
push
cltd
loopne
xchg
imul
mov
ljmp
cmp
sub
ret
push
das
xchg
mov
nop
and
aad
mov
movsb
pop
std
jo
test
pop
pop
movsl
lret
sub
sub
fcmovnbe
jbe
jecxz
jns
or
and
inc
fistpl
fwait
push
push
xchg
add
aaa
dec
pop
push
repnz
push
cli
in
add
push
leave
hlt
sahf
xor
mov
push
mov
cmp
fwait
push
push
sub
dec
mov
push
xor
sub
or
out
mov
jnp
inc
inc
xorb
adcl
int
adc
orl
adc
cmp
or
mov
or
jmp
lcall
inc
sti
in
leave
out
test
neg
daa
add
sbb
cmp
and
mov
jl
dec
xchg
xchg
cld
imul
mov
cmp
push
out
popf
clc
mov
scas
mov
xchg
sbb
negb
mov
scas
roll
jle
mov
sub
dec
lock
pop
pushf
mov
lock
cmp
fisubl
xor
add
dec
dec
sarb
xor
jge
mov
and
sbb
nop
push
mov
push
jmp
imul
jae
add
inc
ss
adc
push
repnz
cmp
outsl
leave
jne
cwtl
pop
js
lret
mov
and
insl
cmp
idivl
imull
pusha
ds
pop
inc
stos
fadd
addb
jne
pusha
push
scas
jb
xchg
cld
pop
movsb
pop
push
xor
out
test
xchg
adc
mov
int
scas
pop
mov
jge
pop
mov
int3
shll
jae
inc
ja
xchg
mov
add
sub
insl
shrl
fs
out
mov
rorl
shlb
push
jge
sbb
xor
movsb
out
sub
adc
ljmp
int3
gs
leave
cltd
lods
rcr
ja
adc
das
out
cwtl
dec
cs
arpl
push
inc
ja
xchg
rcrl
mov
imulb
add
punpcklwd
add
in
out
aas
or
loope
icebp
aad
movsb
ljmp
push
sbb
imul
cmp
out
out
push
or
push
imull
lret
mov
es
push
test
fldcw
cld
scas
ljmp
data16
pop
into
jg
xchg
mov
xor
out
pop
test
cmp
fwait
outsl
xor
pop
or
stc
xorl
dec
out
in
xor
daa
mov
dec
das
jge
and
mov
fstps
into
aaa
popf
cltd
jns
inc
mov
pop
pop
inc
fsubrl
in
loop
in
inc
jmp
jne
sub
sahf
mov
shlb
orl
outsb
jnp
push
mov
xlat
pop
lods
pop
stos
mov
push
leave
sub
xchg
push
or
xchg
cmp
inc
and
jae
dec
lahf
sbb
jp
cmp
out
mov
pop
jnp
aas
movl
push
xchg
pop
lret
cwtl
inc
int
outsb
andl
xor
xchg
add
mov
cwtl
ficoml
out
add
jae
cmp
jle
xor
mov
icebp
and
xchg
jnp
push
leave
aas
ret
daa
fs
repz
adc
in
ds
cld
mov
xchg
jge
sbb
add
enter
dec
iret
fldenv
jl
jl
dec
fsubp
nop
xor
fwait
scas
out
dec
mov
ret
jp
fcmovnu
into
cmpsl
fs
cli
mov
mov
dec
gs
mov
std
inc
fsubl
fnsave
inc
std
lahf
xor
mov
mov
arpl
push
sbb
push
adc
fistl
sbb
mov
in
xchg
push
xchg
aam
push
aad
and
inc
jae
pop
xor
lcall
insl
cmp
fadds
sbb
push
and
xor
dec
jp
jecxz
cmc
xchg
bound
adc
faddl
daa
ss
pop
insl
lahf
in
dec
inc
sub
bound
cmpsb
lret
pop
and
xchg
xor
mov
fiaddl
outsb
sub
fnstcw
ss
xchg
add
into
ja
sub
imul
cmpsl
rcr
sbb
mov
pop
push
push
or
xor
mov
ret
mov
test
add
hlt
sub
rcrl
data16
push
xchg
inc
jle
into
xchg
mov
inc
data16
and
sarl
xchg
inc
dec
nop
sbb
out
pop
scas
push
bswap
push
mov
aam
data16
insl
pop
js
sti
mul
pop
ss
cmp
xor
jmp
addb
cmpsl
mov
or
jns
or
xor
or
lods
jmp
jecxz
hlt
jnp
dec
stos
adc
cmc
in
xchg
inc
flds
jbe
daa
push
fs
call
pop
js
mov
fdivl
xchg
repnz
mov
mov
xchg
mov
adcl
ret
dec
imul
add
daa
stos
or
aam
dec
faddl
shl
fidivs
cwtl
aad
iret
ror
fisttpl
pop
jb
arpl
in
lret
test
jns
cmp
or
mov
cmp
jne
out
xchg
push
fistl
std
jmp
sub
cltd
inc
mov
cmp
arpl
popf
out
jb
xchg
aad
and
mov
sub
inc
hlt
sti
movsb
and
mov
pop
dec
cmp
out
daa
popl
xchg
jne
and
std
lds
jae
maxps
shlb
orl
sub
out
or
mov
mov
ja
sub
aaa
xor
or
arpl
cmc
or
test
lahf
shl
ror
adc
fstps
lret
lods
sbb
mov
test
insl
xchg
jecxz
not
lods
pushf
dec
xchg
pop
mov
nop
sti
pop
sbb
rorb
cmp
test
movsb
mov
jg
loopne
je
pop
add
aad
fcomip
cmpsl
mov
mov
jle
scas
les
loop
sbb
das
cwtl
std
push
scas
xchg
fbstp
jp
sahf
push
aad
xchg
push
iret
or
xlat
jb
mov
lds
int
loope
pushf
fdivrs
add
rclb
or
fidivl
cmp
in
adc
repnz
fbstp
popf
cmpsb
xchg
sarl
ret
sub
xchg
mov
mov
lret
js
clc
adc
out
bound
fsubs
xor
repnz
mov
mov
call
je
test
iret
mov
or
or
push
aaa
cmpsl
aam
fincstp
enter
shlb
in
pop
add
adc
out
lret
cmp
rcrl
inc
adc
xor
mov
or
inc
cmc
cli
push
mov
push
pop
xchg
sub
push
jmp
cs
xchg
push
and
xor
adc
lds
aam
pushf
or
sahf
ud0
repz
je
lea
push
pushf
in
jnp
jecxz
lds
in
icebp
outsb
and
mov
sub
mov
pop
push
and
shlb
nop
adc
xor
pop
mov
shl
out
mov
jecxz
ret
jl
sub
out
xchg
mov
xorb
cmc
lock
repnz
int
xchg
mov
push
test
dec
cmp
jmp
inc
movsb
cmp
push
dec
push
movsb
mov
mov
xchg
les
jnp
jns
lock
mov
fmuls
mov
pop
inc
fs
fsubr
mov
and
lret
fucom
sahf
push
imul
popa
inc
pop
add
and
pop
test
xor
sbb
cltd
leave
dec
jno
pop
lods
jmp
add
cld
out
sbb
inc
scas
inc
ficomps
mov
sub
and
xor
hlt
inc
dec
and
inc
mov
pop
add
xchg
push
out
push
adc
enter
iret
pop
popf
push
js
enter
cmp
gs
inc
rcrl
lahf
das
mov
sbbl
testl
sbb
inc
in
jp
aas
mov
fs
add
call
add
aad
sub
or
je
sub
push
sti
mov
adc
cld
pop
sbbb
stc
fistpll
insb
push
cld
cmpsb
int
inc
sub
mov
jg
loop
and
es
cwtl
aad
dec
xchg
push
inc
scas
adc
repz
dec
xor
and
fcmove
adc
pushf
insb
mov
pop
cmc
and
push
ret
in
lret
dec
add
or
cld
iret
xchg
ficomps
mul
ljmp
cmp
push
aaa
cmp
fistpll
adc
sbb
pop
inc
ljmp
cli
fsubl
mov
mov
push
mov
das
aad
cmpsb
jecxz
push
xchg
fdivs
xchg
add
mov
ss
xor
ss
mov
ss
xorb
push
pop
pop
push
add
in
fdivs
pop
ficoml
fdivrs
aam
mov
jmp
mov
and
cld
scas
iret
into
mov
push
pop
aas
pop
dec
aaa
jae
push
mov
scas
adcb
mov
cmp
ljmp
rcll
jle
mov
std
pop
repnz
push
lea
dec
mov
call
or
iret
sub
xchg
or
push
in
or
and
int3
push
fucomi
scas
push
in
push
mov
ljmp
lds
xchg
nop
mov
loopne
shlb
or
xadd
nop
jns
addr16
out
lds
jnp
and
rcl
add
bnd
stos
push
shrb
jae
mov
test
pop
fidivl
sub
repz
push
cwtl
push
adc
xchg
fimuls
or
popa
mov
int3
sub
xchg
enter
das
mov
fcmovne
fwait
imul
insl
adc
loopne
inc
pop
adc
into
pop
mov
xchg
notb
inc
leave
les
arpl
outsl
pushf
and
iret
or
enter
out
rorl
cmp
push
or
mov
fnstcw
push
jle
es
iret
popl
rcr
lret
adc
fwait
lea
pop
inc
das
sbb
mov
add
imul
xchg
cld
adc
test
push
jne
add
rol
in
xchg
adc
mov
inc
fcompl
je
std
sbb
aaa
mov
sbbl
shlb
in
int3
mov
bound
mov
outsb
popf
out
push
mov
and
cmc
fimuls
cmp
into
dec
in
mov
in
mov
orl
hlt
inc
repnz
in
lods
mov
scas
fnsave
sbb
mov
lret
sarl
push
repz
iret
mov
fisttpll
out
lods
mov
jmp
popa
mov
imul
iret
jne
adc
sahf
mov
push
aas
icebp
mov
divl
sub
pop
pop
lods
sbb
jecxz
incl
jne
mov
pusha
test
jae
aaa
test
or
gs
xor
cmc
push
loope
mov
or
jbe
and
mov
xchg
cmp
fstps
test
push
xchg
inc
fsubs
clc
sti
test
lret
sti
in
out
sbb
aam
sbb
push
cmp
stos
mov
xchg
pusha
mov
or
push
dec
iret
dec
rolb
and
ficoms
lds
fwait
stos
and
pop
push
cltd
or
ljmp
sub
jecxz
mov
push
mov
mov
push
and
mov
fsubr
jnp
lret
jp
cmpsl
rolb
out
xor
sbb
adc
cmp
mov
fildll
lods
push
arpl
in
ds
stos
aas
shlb
testl
jno
nop
and
adc
pusha
icebp
dec
cmp
insb
dec
jo
jge
out
cmp
nop
cli
clc
sti
cli
and
sbb
xchg
insb
cli
and
fcompl
repnz
ret
shrl
repz
ret
iret
call
add
cmp
push
mull
jge
js
lcall
xor
js
cs
push
xor
mov
in
mov
and
or
in
arpl
shlb
int
jmp
xchg
push
or
xchg
imul
lea
nop
inc
adc
sub
push
xor
dec
mov
or
ja
call
mov
daa
hlt
mov
adc
mov
add
push
pop
sub
jecxz
fcoml
jmp
ss
in
and
jl
lds
xchg
lods
mov
lcall
andb
roll
decl
inc
or
lods
std
aaa
push
inc
jg
pop
push
sbb
aaa
rcrb
shrl
pusha
mov
dec
xor
sub
or
or
ret
dec
sar
clc
xor
inc
cmp
mov
cltd
mov
add
jne
jbe
mov
xor
shlb
adcb
sbbl
jge
push
cs
mov
mov
xor
lods
xchg
orb
ret
adc
cli
sub
jb
sbb
dec
pop
stos
dec
out
jnp
mov
inc
xor
adc
ret
int3
mov
push
aam
lods
adcb
cli
test
push
fs
out
jge
sbb
xlat
xor
insl
jg
out
lds
stc
in
pop
subb
adc
pop
rcr
push
jg
test
repz
and
fdivs
push
xchg
push
sbb
imul
dec
dec
add
out
jbe
mov
out
loop
pop
enter
push
mov
aam
aas
daa
mov
and
lahf
push
push
xchg
sub
insb
push
xchg
push
lods
mov
jle
fsubrs
fwait
xchg
xchg
setbe
push
dec
sub
movsb
sahf
ret
outsl
loop
or
push
cltd
cmc
mov
sti
test
lahf
out
and
cmc
jecxz
xor
adc
add
ds
sbb
xchg
pop
xor
xor
sti
xlat
lock
add
bnd
int
push
lcall
mov
das
std
leave
outsl
jle
or
inc
cmc
xchg
mov
push
add
push
shll
in
in
lds
cmp
int3
movsb
mov
je
nop
aad
outsb
or
daa
out
mov
popf
mov
inc
out
xchg
sub
and
bound
xchg
xchg
aam
mov
pusha
enter
loopne
test
pop
fnstcw
inc
ljmp
jl
fisubs
and
jg
or
xor
push
mov
sbbl
lea
test
popa
cs
insl
outsl
xor
mov
sbb
call
mov
push
sub
ljmp
add
rorl
lds
push
or
icebp
mov
dec
jp
scas
lds
daa
cmp
cmp
jge
ficomps
out
lock
fisttpl
jnp
jb
icebp
sub
in
cmp
xor
xor
cmp
es
out
arpl
add
push
adc
mov
jno
dec
jbe
cmp
mov
aas
dec
lods
push
frstor
ljmp
mov
lret
cmpsb
mov
xchg
or
js
lods
push
mov
mov
je
sub
push
cld
mov
jb
pushf
daa
dec
filds
loope
push
xor
ja
adc
jle
pop
xchg
test
fisttpll
sbb
icebp
jae
test
aaa
mov
aaa
repnz
insl
js
rorb
xchg
ljmp
jg
push
repz
ficoms
jb
out
popf
call
jl
iret
jo
add
adc
mov
xchg
popf
out
imulb
jne
push
cmpsb
xchg
cwtl
inc
in
xorb
and
stos
scas
int3
mov
pop
andb
shlb
pop
js
lahf
inc
push
or
inc
mov
sbb
es
leave
jo
pop
repz
out
ret
inc
shll
mov
or
and
sub
sbb
stos
or
and
add
lea
pop
test
push
test
jo
xchg
push
xor
sub
push
mov
out
pop
loopne
mov
mov
sub
or
filds
ljmp
jns
cltd
sti
repz
in
sbb
in
xor
jmp
adc
cltd
shll
sub
repnz
or
and
dec
ret
cs
arpl
in
cmpsb
imul
enter
int3
in
lret
dec
mov
pop
pop
mov
jp
sub
in
inc
xor
mov
sahf
ja
mov
out
ret
push
fmuls
xor
adc
mov
sti
int3
lret
fistpll
jns
and
sub
lock
dec
and
ds
cli
or
addr16
xor
jmp
shl
dec
cli
ljmp
aam
xor
sbb
popa
jp
clc
sub
scas
push
xchg
mov
movsb
xchg
push
mov
xor
sahf
imul
std
imull
aam
pushf
outsb
inc
push
std
outsb
daa
mov
sarl
xor
pop
leave
sbb
or
into
sub
mov
jecxz
xlat
jmp
les
fcomps
adc
imul
jmp
push
pop
outsb
jmp
test
jmp
mov
xchg
data16
mov
out
jl
lods
xchg
xor
fidivl
pop
push
loop
or
jp
or
insl
sbb
ret
out
push
xchg
and
or
icebp
or
cwtl
jmp
stos
les
filds
stos
pop
ljmp
cmp
push
outsb
stos
ficoms
sub
pop
sarl
and
push
xchg
jecxz
adc
push
cli
cmp
inc
mov
out
fwait
jne
cmp
movsb
sbb
shlb
mov
cwtl
jp
sti
negb
dec
pushf
jns
stc
dec
add
add
add
add
lcall
outsl
pusha
cmp
in
lds
jb
mov
je
popa
aaa
jmp
aam
cli
pop
lret
cmp
test
sti
sbb
fs
cmp
dec
jecxz
sbb
adc
mov
clc
add
xor
jp
data16
andb
mov
dec
pop
sub
stos
fwait
inc
mov
push
sub
sti
lock
call
loopne
bound
inc
mov
mov
jl
and
jo
mov
aaa
add
inc
lcall
nop
push
in
es
sbb
sub
add
jno
in
pop
clc
xor
sahf
pop
fiaddl
sbb
pop
pop
lcall
sub
adc
je
xchg
pop
sbb
xchg
out
mov
sub
pop
xchg
xor
in
test
nop
ret
cmp
or
add
dec
xchg
lcall
pop
fsubp
daa
arpl
shll
jg
xchg
ret
daa
mov
jmp
icebp
mov
shrb
or
sbbl
and
les
fisubrs
cs
lea
push
mov
loop
xor
addr16
adc
mov
xor
jecxz
push
mov
je
add
mov
stc
cs
mov
inc
add
jnp
sbb
arpl
sahf
std
daa
or
fstpt
fsubrs
cmp
inc
cmc
jge
dec
imul
cmpsl
std
adc
xchg
lods
aam
addr16
movsl
lods
bound
ss
mov
cmp
mov
mov
insb
div
cmc
pop
clc
nop
push
push
dec
out
popf
mov
adc
lahf
mov
ljmp
inc
inc
jl
outsl
mov
hlt
mov
push
or
ret
xorb
xchg
cmp
dec
fadds
cltd
mov
aaa
sti
jp
xchg
mov
test
jb
loopne
xor
hlt
sahf
mov
mov
pop
mov
jp
fists
mov
je
hlt
aaa
sub
cs
mov
jno
mull
dec
xorl
lret
out
inc
xor
stos
and
jo
ljmp
sub
inc
dec
enter
mov
and
orl
dec
cmp
cmpb
jmp
sti
adc
mov
jmp
test
jp
jge
mov
or
mov
stos
or
stc
jge
xchg
ret
xchg
add
cmp
in
jle
sbb
lds
xchg
repz
mov
jae
hlt
dec
into
popa
fisttpll
and
xlat
inc
aas
cmpsl
std
sbb
arpl
imul
or
or
mov
inc
mov
iret
or
mov
dec
adc
ror
fdivrl
and
mov
gs
mov
xor
cld
lods
out
mov
sahf
push
popf
and
add
sub
push
or
jbe
adc
and
xchg
cmp
lods
rcl
cmp
mov
add
imul
fiadds
lcall
inc
adc
aam
les
xchg
aaa
nop
sub
pusha
xor
rorb
fdivrp
mov
mov
lock
or
mov
shll
and
das
push
rolb
cmpsb
or
lods
dec
dec
mov
or
mov
lds
sub
mov
mov
pop
pop
xchg
jle
xchg
jno
jmp
sbb
mov
push
dec
cmp
sub
dec
imul
enter
jle
sub
nop
inc
push
mov
dec
and
xor
add
je
inc
mov
pop
jnp
cli
mov
jp
add
xchg
test
es
aad
sbb
fdivrl
ret
cmp
call
jecxz
ret
icebp
inc
nop
mov
mov
push
mov
in
icebp
sub
sbb
mov
dec
addr16
dec
and
aad
fnstenv
jns
mov
imul
pop
dec
cmpsl
jle
push
roll
jg
lret
sub
cs
lds
jecxz
or
dec
stos
cmp
movsb
test
pop
stc
imull
sub
repz
mov
xchg
fidivrl
out
mov
imull
hlt
mov
lds
js
mov
sub
popf
pop
jb
sarb
int
add
xlat
pop
cltd
rolb
jne
xchg
test
xchg
jp
ret
push
xchg
sahf
sarl
mov
cmp
sbb
mov
push
cmpsb
rcll
jae
xorl
xor
xchg
push
lret
repz
lret
and
mov
adc
aam
jno
jmp
dec
xchg
mov
pop
mov
popf
mov
mov
sub
clc
cs
test
push
xchg
push
dec
bound
icebp
arpl
dec
xor
mov
pop
jle
ss
orl
test
inc
repnz
mov
lret
mov
mov
insl
jle
stos
jmp
aam
xchg
ss
inc
xlat
fs
fidivrs
push
inc
testl
aaa
xchg
or
data16
aas
jg
lea
or
negb
jl
lea
hlt
xor
cmpsb
outsl
sbb
lahf
pop
into
clc
test
mov
aad
icebp
mov
or
fiadds
mov
imul
inc
jle
sbb
xchg
jl
mov
fmuls
sub
lret
les
sti
pop
xlat
inc
pop
mov
push
loopne
into
sysret
sub
imul
and
push
jl
and
in
adc
clc
sbb
loopne
inc
cmp
mov
idivb
sbb
mov
jge
inc
mov
test
cmp
push
mov
scas
addb
or
xchg
ret
fdivl
nop
dec
dec
sti
and
test
cmpsl
dec
cmp
cmp
pop
shlb
fldl
cltd
lods
out
xor
cmp
in
daa
add
data16
movsl
popf
fstpt
call
mov
js
aam
push
mov
mov
push
mov
rolb
mov
mov
adc
insl
or
sub
cmp
imul
dec
je
jae
test
shl
cmp
cwtl
push
add
mov
sub
lcall
mov
movsl
xchg
sbb
repnz
push
mov
mov
call
pop
mov
aad
shrl
imul
fsubrl
insb
add
jp
mov
xlat
mov
cmc
repnz
mov
ds
pushf
gs
es
mov
cwtl
sub
leave
and
xchg
movsl
outsl
rolb
es
inc
pop
sub
sarb
in
imul
push
push
aas
cmp
scas
or
dec
adc
xor
ja
cs
mov
into
pop
rcl
adc
aad
sbb
sarb
cmp
pop
or
shr
push
mov
aam
dec
xchg
lret
pop
add
inc
add
and
pop
xor
pop
pop
dec
mov
and
jnp
mov
out
pop
inc
push
je,pt
int
sub
iret
push
rcrb
jl
inc
mov
rolb
or
cs
ljmp
inc
push
or
pushf
sahf
lea
lret
mov
inc
cmp
test
add
inc
adc
xor
cmp
mov
loop
mov
or
pop
jge
jp
xlat
in
lret
negl
mov
out
aad
xchg
fcoml
mov
mov
push
sahf
push
xchg
cmc
push
fdiv
mov
pop
jecxz
sub
mov
lret
xor
or
mov
or
mov
cmp
pop
sahf
lahf
sub
arpl
add
push
int3
out
jns
inc
mov
faddl
mov
mov
andl
pop
jb
mov
push
mov
test
jno
orb
fiadds
cmp
jge
lahf
je
test
cmp
out
sub
repnz
push
mov
leave
mov
sbb
mov
xor
mov
inc
add
ffree
cld
sbb
xchg
jp
pop
jno
jp
xchg
cmp
dec
sbb
mov
out
ljmp
inc
daa
fcoms
xchg
xor
mov
fbld
xchg
nop
jno
loop
arpl
aas
test
gs
xchg
sbb
jb
mov
les
out
pop
push
arpl
dec
inc
push
shl
dec
mov
cmp
cmpsl
jmp
sub
mov
aaa
adc
ljmp
sub
or
or
repnz
jae
pop
jle
add
fldenv
popf
jnp
mov
sbb
incb
sub
mov
or
xor
or
movsb
mov
or
sbb
inc
std
std
les
movsl
xor
inc
ss
movsb
fstl
mov
xorl
or
mov
cmpsl
pop
mov
into
sbb
mov
pop
pop
push
cmp
and
mov
es
test
mov
mov
inc
fsubrl
mov
xchg
mov
mov
enter
nop
jg
xchg
insl
aaa
lret
inc
pop
or
lret
clc
popf
xor
sbb
xor
mov
cs
dec
jns
mov
xorl
stos
arpl
nop
adc
insl
sbb
stos
dec
adcb
aad
lcall
fwait
lahf
mov
nop
inc
xchg
mov
cmp
out
mov
es
push
rcr
movsb
adc
inc
xchg
lods
das
mov
adc
mov
imul
sub
add
sbb
ds
adc
pop
xor
cmpsl
pop
mov
rorl
adc
das
movsb
fimuls
pop
dec
int
xor
pop
xor
ds
sbb
cmovl
mov
in
ss
movsl
ja
aas
bound
sub
enter
scas
sbb
or
cmp
shl
imul
fs
adcb
mov
and
mov
shlb
xchg
and
dec
loop
mov
pop
insb
sahf
sti
jb
orb
jecxz
in
imulb
sub
cmpsl
rorl
push
dec
stc
cmpsl
xchg
sbb
mov
daa
sbb
insb
mov
and
xchg
bound
push
out
cld
lahf
inc
std
sbb
imul
in
push
sbbb
sub
jno
cmpb
push
out
fcomi
enter
sbb
data16
jecxz
inc
subl
jbe
movl
sub
mov
sub
ret
ljmp
and
push
shl
and
cmc
insl
add
jle
mov
les
rolb
clc
hlt
jg
mov
frstor
and
inc
lcall
xchg
ds
das
cmp
xchg
out
mov
rclb
push
and
iretw
xor
stos
in
repnz
dec
jg
scas
mov
mov
mov
mov
or
fucomi
int
adc
mov
scas
popf
shll
ds
push
push
jae
addr16
push
mov
fidivs
mov
dec
jmp
or
fcom
jecxz
out
out
pop
int
mov
js
push
ja
push
jae
jne
mov
mulb
clc
ja
mov
leave
aaa
cs
jns
adc
dec
iret
insb
ss
cmp
movb
sbb
xor
fistpll
fs
and
dec
outsb
xchg
mov
mov
bound
arpl
ds
xchg
mov
xor
lcall
xchg
pushf
dec
add
add
aad
xchg
ret
or
in
inc
add
jnp
add
orb
jno
xchg
sbb
dec
es
fdivs
inc
sub
or
aad
pushf
stos
jl
arpl
xor
call
mov
mov
pop
pop
call
mov
cmp
fnstcw
add
fwait
push
sbb
pop
and
push
sahf
pop
sbb
notl
clc
jmp
dec
push
aam
xor
test
jp
jns
sbb
arpl
pop
mov
outsl
jbe
mov
sbbl
scas
outsb
xchg
pop
out
jnp
fists
adc
ja
xchg
push
push
jp
in
add
jge
loope
inc
nop
xchg
add
dec
rcrl
push
inc
inc
mov
test
cmp
mov
fwait
jmp
in
and
test
pushf
in
in
andl
cltd
sub
jmp
in
shll
jbe,pt
lahf
rorl
pop
inc
mov
mov
xchg
test
out
aas
loop
and
and
ja
lock
jg
pop
fwait
and
push
pop
inc
out
in
pop
dec
mov
dec
bound
cmp
dec
out
ljmp
push
xor
into
call
roll
pop
mov
pop
fidivl
cs
cmp
dec
xorl
inc
cli
mov
adc
dec
cmp
out
jmp
mov
xor
popa
and
out
das
ds
sbb
or
push
mov
jge
push
out
cmpb
aaa
arpl
mov
arpl
pushf
cpuid
dec
mov
sub
fcomps
jnp
outsb
out
pop
into
out
rolb
pop
mov
ds
xchg
dec
mov
addr16
jge
in
push
add
mov
mov
xor
mov
jl
adc
jns
or
mov
sub
jle
mov
sahf
lods
movsl
jns
cmpsl
arpl
pushf
mov
clc
xchg
dec
outsl
or
add
sbb
dec
add
fldenv
inc
stos
ret
and
push
push
push
cltd
xchg
ret
xchg
or
sahf
jp
dec
pusha
stc
addl
push
pop
or
mov
mov
push
sub
xor
fwait
ret
dec
popf
mov
roll
cmp
mov
sbb
push
mov
shrl
push
xchg
cmpl
in
fsts
push
push
in
add
xchg
xor
cmp
adc
loopne
cmp
and
bound
xor
jl
mov
jp
stos
stos
pop
pop
les
insb
testl
imul
push
pop
out
or
scas
cmp
cmp
xor
ja
fldenv
out
stos
mov
xchg
adc
fdivrp
js
pop
sub
and
push
outsb
pop
lea
fxam
add
dec
add
shrl
jge
jae
dec
jne
mov
xchg
cmp
cmpsl
xchg
add
hlt
xchg
test
add
std
fildll
mov
cmp
std
sbb
and
sub
iret
shl
inc
mov
adc
adc
fwait
arpl
mov
movsl
shlb
pusha
sar
dec
adc
lods
and
sub
outsl
sahf
jle
ljmp
fbld
nop
stos
lds
imul
push
into
and
pusha
mov
sbb
out
adc
ja
add
dec
rcrl
push
fsubrs
jo
push
jp
mov
mov
ret
test
mov
je
lods
pop
pop
shrl
sub
mov
pop
cwtl
dec
stos
imul
cmp
popa
or
push
mov
and
dec
in
add
test
andb
push
push
sbb
sub
and
jns
or
fnstcw
add
daa
mov
clc
ljmp
dec
aad
xor
xchg
nop
ljmp
cld
stos
aas
scas
mov
notb
test
test
inc
or
sbb
and
orl
add
out
addr16
inc
mov
stos
icebp
ja
rolb
sbb
pop
fadd
fisubl
test
xor
inc
mov
cwtl
lcall
fnsave
sahf
dec
das
in
movsl
repnz
call
push
jg
fimull
and
add
lret
push
adc
mov
add
push
insl
test
in
out
fiaddl
or
and
adc
jl
cmp
xchg
mov
push
loope
mov
mov
push
inc
mov
push
xor
cmp
mov
movsl
xchg
call
push
jnp
lea
xorl
jmp
lahf
pusha
inc
mov
loopne
sti
test
inc
pusha
sbb
cmp
mov
inc
inc
out
push
fwait
ljmp
mov
mov
rorl
dec
inc
push
xlat
jle
nop
add
jns
push
add
push
jg
sbb
mov
push
adc
gs
sbb
or
jge
sti
testl
jns
pop
add
repz
pop
out
mov
sbb
jbe
mov
push
push
test
cmp
out
adc
and
adc
and
push
or
adc
aad
mov
jl
hlt
movsl
inc
pop
push
add
clc
adc
aas
jge
dec
ret
xlat
cmpsb
mov
mov
dec
mov
cli
fchs
repz
and
dec
inc
pop
adc
add
popl
inc
cmpb
in
loopne
mov
inc
lods
rorb
xchg
int3
mov
aas
scas
jbe
or
jns
lcall
sbb
daa
ret
pop
add
imull
jg
sbb
cmp
mov
xor
repz
cli
adc
in
lods
movsb
jp
add
mov
pusha
test
jmp
insb
ftst
cs
cs
sbb
and
out
out
out
xor
and
sbb
lea
rcr
xchg
cmp
or
dec
pop
mov
enter
dec
cmp
push
sbb
decl
dec
add
xor
sbb
aam
jp
in
fisubrs
mov
fnstsw
sbb
cmp
notl
pop
pop
aad
jae
dec
fistl
shlb
mov
lods
mov
and
sarl
adc
xchg
test
fndisi(8087
cmp
adc
mov
jno
leave
roll
push
out
mov
lds
dec
pop
rclb
neg
sub
iret
into
jle
mov
mov
xlat
add
stos
push
cmpsl
mov
and
inc
mov
inc
pop
sbb
and
cld
xchg
mov
out
xor
popa
inc
adc
sbb
xchg
in
xchg
or
push
imul
das
mov
xor
lret
lock
loope
lcall
push
jnp
mov
aaa
call
mov
inc
push
test
xor
xor
jmp
ficomps
mov
and
xor
js
lret
mul
sbb
lods
lahf
in
sti
fs
aam
inc
into
jne
mov
jb
hlt
mov
out
lret
popf
jmp
ret
cmp
pop
jbe
es
adc
int
flds
mov
mov
outsb
addl
push
sbb
mov
js
push
loopne
lret
mov
jbe
mov
push
das
fiadds
adc
fldcw
insb
movl
inc
pop
movsb
mov
ret
lods
sub
insb
mov
push
movaps
xchg
mov
jg
je
adc
mov
mov
add
jb
push
add
mov
por
jae
fdivrp
adc
add
mov
lret
shrl
or
and
bound
and
and
pop
xchg
fwait
dec
lea
add
movsl
mov
mov
in
fldcw
jnp
imul
dec
and
divl
xlat
xchg
shr
adc
das
cltd
popf
cmpsb
clc
test
jae
mov
or
sbb
arpl
mov
pusha
mov
xlat
adc
xlat
or
sbb
sub
sbb
aaa
push
adcl
fmul
adc
int
test
sbb
fwait
push
ds
in
xchg
add
xchg
ret
and
pusha
add
adc
scas
xchg
sub
mov
add
mov
and
call
test
pop
mov
and
add
xchg
sbb
jo
into
sahf
jl
clc
out
inc
test
push
sub
das
rclb
ja
test
cmp
xchg
push
and
cmp
xor
inc
int
mov
scas
jo
dec
outsl
xor
frstor
xor
aaa
cmpsb
mov
stos
or
aaa
xchg
add
roll
sub
cmp
xor
mov
movsb
push
mov
loop
scas
cwtl
sub
lret
xchg
sbb
jle
in
ljmp
fcomps
mov
add
push
dec
ret
add
test
jo
jmp
and
inc
orl
das
pop
in
aam
or
add
insb
push
int3
inc
pop
cmp
adc
mov
fadds
loop
jmp
in
jo
rcrl
mov
xor
push
xchg
out
xchg
sub
mov
push
lods
es
push
mov
mov
lcall
rorb
cmp
mov
mov
ss
mov
js
and
xchg
jle
mov
es
test
sbb
mov
dec
push
inc
xchg
les
in
inc
xor
mov
cli
add
add
xorb
sbb
push
dec
or
or
ljmp
ret
add
jp
mov
dec
das
jle
sub
jns
enter
lods
inc
add
test
ljmp
cmp
lods
pop
pop
cld
das
and
xchg
fcomp
dec
or
ljmp
cmpsl
sub
pushf
mov
jae
into
ljmp
insb
cmpb
adc
mov
xchg
cli
mov
in
mov
cmp
data16
icebp
mov
movsb
and
mov
add
pop
int
dec
jne
ret
push
xchg
insl
shr
fstpt
fldenv
shr
push
push
add
call
negb
ds
mov
icebp
leave
pop
xchg
jnp
xor
hlt
mov
loope
test
push
aaa
out
cmp
sub
popf
cmp
lret
aas
cmpsb
mov
push
int3
dec
loop
xchg
or
outsb
test
mov
cli
ss
insl
push
aas
rcrl
sub
inc
jmp
cmp
xchg
jno
add
andb
lock
sub
inc
xchg
pop
push
dec
fwait
inc
popa
shlb
jo
push
hlt
mov
outsl
and
fsubl
fcoms
enter
daa
pop
push
xchg
add
cmp
int
xor
xchg
xchg
aas
pop
push
dec
xor
es
xor
iret
push
jl
push
pop
insl
addr16
lods
dec
mov
jbe
aad
sbb
repz
and
in
xchg
jp
jne
push
enter
xor
inc
cwtl
dec
sub
fs
push
cltd
mov
push
inc
mov
ja
adc
push
out
and
imul
je
test
in
test
push
inc
imul
inc
repz
jl
add
in
movsb
pop
and
stos
xor
gs
cmp
sbb
dec
sbb
push
adc
or
push
mov
les
xchg
xor
mov
movsl
xchg
movsl
or
lock
call
lock
insl
stc
lret
lea
test
les
dec
pop
lahf
push
dec
push
mov
lock
sub
adc
and
sbb
popa
loope
cmp
lcall
neg
add
mov
es
fcomp
mov
in
cmp
cmpl
mov
cmp
jg
mov
dec
xchg
dec
ffree
movhps
je
or
pop
cld
push
pop
mov
xchg
out
add
mov
mov
shr
mov
adc
out
ficoms
les
in
sub
and
out
push
insb
mov
push
adc
cmpsb
mov
sbb
movsl
fld
push
sbb
shll
repnz
push
loope
je
jns
rorl
loope
pop
cmp
mov
jg
mov
fidivrl
scas
sbb
push
insl
sbb
lcall
push
movsl
push
fcomip
lret
sti
popa
push
lock
xchg
ret
sarb
add
pop
int
xchg
sbb
jmp
jno
test
ret
mov
je
lock
ljmp
inc
aas
mov
in
inc
rol
adc
bound
shrb
xchg
bound
sub
imul
imul
pop
rclb
jmp
fdivrs
jnp
movsl
lcall
lahf
aaa
lods
adc
mov
mov
sub
xchg
xchg
xor
test
inc
add
pushf
lcall
xor
call
adc
xchg
and
lret
add
imul
cwtl
push
cltd
pop
outsb
je
pop
lret
or
in
popf
and
loopne
sub
idiv
sbb
je
lods
scas
and
cmp
out
lcall
mov
call
inc
jecxz
mov
push
push
push
iret
mov
std
shll
cmp
icebp
mov
push
cmpsb
les
btc
ret
cmp
aaa
insb
cmpsl
cmpsb
xchg
rolb
or
cmp
pop
mov
sbb
aam
pop
fucomp
outsl
push
dec
jbe
pusha
or
pop
mov
mov
test
fistpll
or
out
call
or
dec
out
ret
mov
sub
addr16
scas
add
xor
mov
loop
rolb
mov
pop
xchg
push
orb
sub
test
mov
xchg
jbe
ficoms
stos
mov
inc
mov
movsl
add
dec
jb
cmp
ret
sub
enter
dec
pusha
mov
shlb
sub
test
cmpsl
subb
sub
dec
jmp
mov
pop
push
push
in
push
popf
sub
outsl
stos
jle
cmp
and
pushf
shlb
ret
dec
or
push
aam
sub
xchg
mov
xchg
dec
push
cs
daa
add
mov
xchg
add
jmp
mov
aam
dec
cmpsw
enter
xchg
ret
movsb
mov
sub
cmpsb
push
mov
in
lods
push
daa
mov
mov
test
sti
sub
movsb
add
bound
lds
ljmp
add
loope
xorb
jg
movsb
jnp
andps
mov
mov
dec
cmp
add
idivl
dec
pop
cld
mov
push
pop
sbb
mov
mov
fcom
das
ss
mov
lret
lret
lret
cmp
scas
push
jmp
fnsave
mov
push
jne
mov
mov
cmp
sub
and
mov
sarl
imulb
lret
dec
add
out
bound
mov
push
or
dec
test
cmp
inc
jl
dec
shll
insb
fisttps
sub
pop
shll
cmp
cwtl
sub
outsl
pop
xor
push
ss
clc
push
cmp
and
test
inc
shr
xchg
ret
mov
xchg
sbb
fprem1
and
add
push
aaa
dec
enter
popa
xlat
cs
rol
aaa
jae
push
loop
push
pop
test
lea
repnz
pop
jl
hlt
jl
orb
add
test
outsl
xchg
mov
fidivrl
and
inc
ret
je
icebp
adc
das
mov
shr
movsl
sets
pushf
sbb
cmpl
addl
iret
imul
shll
xor
clc
int3
lock
ljmp
rorl
aaa
cmp
adc
movsl
stos
sub
dec
push
mov
dec
mov
push
cmp
push
arpl
xchg
sub
rcrb
xchg
lret
mov
xor
inc
fs
xor
shll
sub
cmp
or
mov
scas
mov
pop
lahf
loop
pop
jbe
call
cmpl
push
arpl
fucomi
cmc
push
push
in
fwait
or
mov
dec
fstpl
loop
cmp
in
adc
repz
mov
daa
call
cli
adc
js
imul
inc
cli
fldt
out
mov
jge
adc
shl
out
stc
dec
pop
adc
and
fimuls
adc
cmp
xorl
push
adc
pop
jnp
out
mov
sub
hlt
ja
add
or
sbb
aas
dec
daa
popa
sub
movsl
scas
pop
jo
adc
fldt
loopne
xchg
cmc
ss
aaa
fdivrp
and
flds
mov
jne
sbb
sub
fldt
cli
sub
sbbl
xor
push
lret
movsb
jp
arpl
jb
xor
sub
cltd
push
aam
ss
jae
aas
xor
dec
jne
repnz
adc
sahf
cmp
fists
cmpsl
cli
cmp
pusha
push
push
pop
lea
pop
xchg
pop
jb
add
ror
xchg
jmp
inc
repz
pusha
pusha
out
jo
aaa
insl
imul
imul
fistpl
adc
mov
adc
dec
inc
pop
cmpsb
and
sahf
cmc
popa
xor
jp
push
in
inc
cld
fdivp
idivl
cli
aad
and
nop
add
jge
into
mov
mov
pop
jb
xchg
mov
arpl
lds
push
call
scas
les
outsl
xchg
mov
and
int3
int
mov
inc
add
call
jae
push
out
pop
fistpl
xor
lret
mov
add
pop
mov
and
leave
xchg
or
mov
sbb
dec
jge
je
aad
inc
cmc
add
movsl
adc
insb
add
jbe
xchg
pop
iret
out
inc
fistpl
push
inc
push
mov
mov
mov
push
push
hlt
leave
mov
test
fidivl
pop
les
sbb
xor
sub
adc
pushl
lea
cmp
pusha
test
pop
mov
and
out
icebp
sbb
das
add
pop
ret
popa
jmp
das
inc
xor
leave
jo
arpl
push
daa
ss
xchg
rorl
adc
notb
aas
cli
bound
jnp
les
xchg
cmp
out
pop
push
xchg
xor
push
cmc
pop
dec
lcall
and
add
xchg
lds
stc
pop
movsl
and
roll
push
xchg
cmp
mov
mov
aas
pop
mov
mov
outsb
cmp
fidivrl
push
fsubrs
sub
push
sub
sarb
jle
arpl
cmp
in
aad
ret
inc
ret
test
inc
mov
insb
or
add
notl
cmp
cwtl
mov
jbe
adc
push
enter
or
ds
pop
push
mov
xchg
in
push
jmp
aad
push
sub
cs
int
pusha
jle
pushf
jecxz
outsl
inc
lret
jbe
subl
jno
cld
dec
daa
dec
insb
clc
or
push
inc
dec
xchg
jge
xor
das
iret
lcall
sub
sbb
sub
adc
adc
data16
nop
mov
and
pop
lods
mov
mov
sub
adc
sti
add
pop
mov
aas
mov
sub
cmp
lahf
cmp
outsl
movsb
xor
mov
loope
cmp
xlat
repnz
push
iret
stos
mov
lcall
or
push
mov
push
imul
cmp
shlb
xor
push
or
out
mov
dec
lret
mov
dec
enter
lods
push
aad
loopne
iret
cmpsb
add
add
sub
insl
cmp
xor
jbe
popa
dec
cmc
jb
ljmp
add
out
mov
adc
or
movsl
popf
mov
pop
adc
rcr
mov
pop
stc
xlat
sbb
sub
jg
fldl
sarb
int
push
fdivp
in
outsl
insb
popf
dec
xchg
scas
ret
sbb
inc
xchg
cmp
subl
enter
scas
inc
cmp
inc
ja
pop
adc
inc
loope
out
leave
xchg
stos
pop
mov
in
inc
insb
out
push
mov
and
mov
jae
xor
push
xchg
pop
pushf
xchg
test
outsb
sti
out
xor
sub
push
stc
gs
xor
addb
or
fstps
jae
mov
or
lods
sub
shll
xchg
and
lds
int3
cmc
imul
je
popa
popf
clc
mov
xchg
lea
sbb
push
aad
stc
sub
sub
outsb
mov
push
pushf
pop
mov
sub
out
shlb
mov
or
je
movsb
xchg
mov
lahf
mov
sub
dec
cmpsl
lahf
xor
or
mov
sahf
xchg
enter
pushf
cmpsl
pop
xchg
pop
lahf
mov
lcall
enter
mov
outsb
xchg
imul
jecxz
adc
xchg
stc
sti
add
push
add
arpl
jecxz
inc
addr16
mov
ds
in
movb
cmpl
sub
mov
inc
mov
pop
sbb
add
adc
arpl
inc
popf
js
scas
idivl
and
push
cmc
mov
fistpll
fldcw
aas
mov
mov
in
cwtl
es
sub
adc
mov
lret
or
pop
pop
push
dec
adc
ds
aaa
imull
scas
mov
scas
push
sbb
ja
lcall
movsb
arpl
cmp
inc
lcall
jnp
aad
insl
cmp
pop
das
lea
cmp
sub
scas
and
push
int3
int3
xor
mov
cmp
imul
lea
scas
mov
int
insl
xchg
rcll
push
dec
les
or
dec
and
push
pop
mov
pop
push
mov
lods
dec
pusha
mov
xor
loop
sub
adc
lahf
fstps
jo
sbb
orl
ficompl
inc
add
xchg
xchg
popl
cmp
ss
add
pop
inc
xchg
adc
cmc
repnz
or
xor
cmpsb
nop
or
sbb
mov
adc
cmp
xchg
sub
mov
xchg
jmp
inc
cmp
cmpsl
int
cmpsl
adc
mov
pop
nop
leave
in
cmp
cmp
inc
cli
mov
mov
or
add
icebp
cmc
mov
or
sub
push
pop
loop
das
jns
and
adcl
shll
cmpsb
or
jnp
rcr
mov
in
imul
enter
in
cmpsl
insb
loop
sub
jo
shll
andl
shll
je
mov
fildl
mov
or
jo
fcomip
loope
and
adcl
leave
lock
and
mov
call
mov
insb
xor
sbbl
lret
pusha
mov
dec
jmp
in
ljmp
fildll
adc
ja
mov
or
std
aaa
mov
adc
repz
loopne
xor
std
mov
push
xor
lret
aad
fstp
dec
pop
ja
push
cmpsl
test
xchg
scas
or
xor
out
fstpt
mov
jb
aas
mov
aam
add
add
xor
mov
les
cmp
das
mov
cs
mov
lret
int3
leave
xlat
sub
inc
das
insl
movl
push
fmull
lock
les
into
out
add
push
pop
cmc
pop
scas
mov
icebp
inc
push
stos
and
cmc
dec
jnp
test
in
xor
lcall
repnz
fstpt
mov
or
sbb
outsb
cmpsl
jae
enter
push
push
divps
mov
stos
xlat
cmpsb
cmp
sub
and
mov
addb
mov
jg
icebp
jg
mov
fwait
in
adc
in
mov
cli
dec
pop
cmp
fstl
mov
add
xchg
fistps
das
aaa
hlt
xchg
sti
xor
movsb
shll
nop
lods
fdivrl
push
ljmp
lods
jnp
mov
fidivrs
cwtl
ja
imul
xchg
or
sub
jb
sbb
jne
mov
test
imul
aaa
aam
dec
xor
sub
in
stos
shll
int
out
adc
insl
es
stos
cmpsb
outsl
ds
xor
sub
outsl
nop
call
pandn
and
call
sbb
jb
or
sti
sahf
lods
nop
repz
rcll
inc
inc
nop
pop
jl,pn
and
test
jns
movsl
pop
loopne
and
fcomps
fiaddl
ss
repnz
and
loope
loope
pop
sub
xlat
cmpsb
sub
and
sti
dec
mov
in
push
lret
gs
inc
jp
mov
int
dec
inc
push
sub
fdivrl
xchg
pop
xor
aad
pop
outsb
jge
clc
in
jno
pop
jo
arpl
je
mov
es
xchg
cld
and
lea
add
hlt
sbb
jb
cmp
popf
mov
lret
daa
ljmp
jbe
jl
out
sub
jg
cltd
cs
jbe
dec
xchg
cmc
jmp
mov
add
lds
sub
ljmp
out
sbb
es
dec
popa
lock
cld
mov
push
ds
mov
pushl
push
xchg
xchg
loopne
add
stos
fcompl
div
sbb
mov
pop
or
in
mov
mov
sti
decb
repnz
dec
xor
inc
aaa
aas
mov
arpl
hlt
sub
jno
je
sub
xlat
mov
or
lret
push
lahf
sub
cwtl
jne
inc
out
or
xor
add
ja
roll
daa
mov
push
pop
lods
iret
mov
pop
out
popa
push
jle
iret
popa
test
add
cs
mov
arpl
dec
mov
int3
xchg
or
mov
lahf
sarl
adc
jo
cli
cwtl
xor
add
pop
jb
xchg
clc
cltd
and
mov
xor
cmpsl
std
add
fdivrl
xorl
movsl
pop
in
dec
imul
push
push
fisubrl
mov
loop
jbe
dec
inc
jp
mov
jne
stos
hlt
scas
ja
cld
in
jb
inc
icebp
mov
vminps
subl
lcall
add
imul
adc
sbb
or
mov
dec
pop
fs
dec
fsubl
out
icebp
cmpsb
dec
xor
jno
leave
popf
daa
cmc
dec
sub
daa
pop
xor
dec
or
jno
int
push
and
aam
jae
cmp
or
fwait
push
int3
dec
xchg
jne
sub
mov
std
mov
js
jle
xchg
int3
mov
inc
mov
out
xchg
mov
roll
mov
arpl
jbe
adcb
clc
mov
sbb
pushf
jp
loop
push
jmp
mov
imul
pop
xchg
and
mov
xchg
jbe
ds
enter
inc
and
insl
mov
mov
out
mov
nop
gs
mov
decl
adc
push
das
push
scas
dec
int3
cmp
lods
mov
in
dec
idiv
ret
mov
lret
pop
lods
ljmp
jecxz
push
inc
bound
outsl
shll
adc
cld
and
pop
ret
test
mov
stos
out
test
sti
pop
in
outsb
mov
icebp
mov
pop
mov
dec
or
inc
mov
pop
lods
js
data16
mov
int
xchg
pop
jb
jle
push
jnp
lea
cmc
fsts
cmp
imul
adc
add
into
mov
insb
push
test
xchg
cmpsb
fwait
pop
mov
pop
xorb
pop
xchg
out
gs
fisttpl
cltd
mov
and
and
mov
popf
adc
inc
jb
mov
sub
ss
xor
and
scas
and
aam
sub
xchg
gs
push
mov
iret
popa
mov
dec
or
jp
rcll
imul
sub
jbe
xchg
outsb
repnz
loopne
inc
push
fidivs
gs
xor
push
lea
sub
sbb
into
or
repnz
xor
cmpsb
push
aas
pop
jne
adc
or
xchg
xorl
movsl
imul
adc
mov
adc
dec
aas
adc
xor
jno
pop
scas
pop
std
mov
inc
das
mov
aaa
iret
xor
push
cmpsl
mul
jg
imul
iret
testb
jecxz
cli
mov
dec
stos
cmpl
jno
jle
or
pushw
dec
xlat
dec
jns
rcll
pop
xchg
jne
shlb
mov
lea
push
into
or
adc
cmpsb
pop
jge
xor
ljmp
sbb
inc
push
lds
sub
and
movsb
dec
xchg
mov
testl
out
sarb
lea
xchg
jne
into
gs
jle
imul
or
mov
xchg
inc
adc
icebp
inc
mov
nop
xchg
push
hlt
lods
mov
mov
popf
dec
roll
jnp
inc
in
mov
pop
inc
inc
and
dec
mov
xlat
loope
ss
data16
lds
ljmp
xlat
dec
sbb
mov
leave
popf
jp
mov
lods
stos
mov
stos
je
pop
push
mov
int3
mov
mov
pop
or
flds
lods
mov
cli
stos
pop
movsb
jmp
stos
sbb
rorb
enter
add
fsubs
lret
pop
cmp
in
pop
cmp
pop
in
out
stc
mov
mov
pushf
or
inc
ds
inc
push
push
shll
xchg
sub
or
popf
subl
das
push
nop
test
loopne
pop
rolb
mov
outsl
pop
lar
andl
mov
out
push
out
pop
lcall
rcr
lret
jge
mov
test
pop
and
cmp
mov
dec
sub
jno
popf
int
mov
inc
push
xor
inc
cmpsl
adc
cmp
inc
adc
dec
inc
cmpsb
lds
inc
cmpsb
and
or
mov
rcl
sbb
das
or
repnz
adc
ss
repz
jp
test
xchg
jb
mov
out
es
inc
sahf
adc
and
test
pop
mov
dec
push
pop
int3
adc
xor
sbb
or
lcall
mov
cmpsb
scas
cmp
xchg
daa
xor
enter
repz
xchg
sub
and
vpminuw
decl
pop
add
sbb
sub
xchg
movsl
movsb
outsb
mov
cltd
jns
icebp
outsl
sbb
pop
xor
fwait
xchg
js
pop
roll
imul
lock
addr16
scas
jg
and
mov
int
pop
cld
lea
mov
out
mov
ss
mov
inc
cwtl
sar
aas
dec
mov
sbbb
mov
or
ds
jnp
mov
mov
pushf
cmpsl
adc
ds
outsl
movsl
pop
enter
lret
lahf
imul
lds
daa
xor
mov
imul
arpl
cmp
out
ret
daa
mov
dec
movl
mov
fisubrs
imul
push
inc
mov
subb
nop
ret
sbb
aaa
iret
cmp
outsl
inc
pop
lcall
or
fmull
andl
mov
pop
xchg
xchg
and
jge
int
jmp
fs
cmc
ret
pop
sub
fcoml
repz
cmp
imul
xchg
fadds
imul
movsl
jmp
or
sub
mov
sub
and
mov
loopne
stos
insl
cmpsb
stos
xor
sbb
outsb
inc
mov
fwait
xchg
dec
mov
inc
push
xchg
lcall
js
call
push
std
sub
mov
movsl
lret
jno
push
xor
adc
rolb
pop
pop
sbb
xor
ret
sub
negl
push
js
lret
inc
fwait
adc
loop
sahf
pop
fucomp
cmp
insl
call
int
lcall
sbb
leave
sub
popa
adc
fiaddl
imul
add
jmp
mov
mov
xchg
pop
and
sub
jg
aaa
xor
std
push
es
lock
cmp
cmpsb
ret
mov
jae
enter
jge
int3
fs
lret
sub
popf
push
cmp
aaa
pop
test
inc
int
push
sbb
xor
dec
cmc
jbe
and
repnz
rolb
mov
pop
lea
shl
mov
aam
push
loopne
pusha
aad
adc
movl
inc
fsts
pusha
or
lods
cld
iret
mov
repz
mov
inc
leave
and
in
lods
add
mov
pop
push
into
adc
iret
jbe
sbb
fs
mov
xchg
leavew
dec
xchg
pop
sbb
movsb
divb
xlat
rorb
fildl
or
or
lret
in
addl
inc
fisttps
xchg
push
pop
and
pop
fdivl
mov
adc
inc
ficompl
mov
nop
pop
inc
frstor
stc
test
out
mov
aam
das
dec
xchg
sti
sub
shrl
insb
mov
cwtl
pop
ljmp
div
jmp
fucomi
sti
adc
idivb
lods
adc
jle
or
shll
fildl
mov
scas
lds
test
cmc
jbe
inc
nop
rolb
push
cs
pop
inc
mov
jmp
mov
push
int
xchg
insl
pop
xchg
push
jb
pop
push
lcall
jmp
fadds
and
std
out
iret
mov
jp
imul
orl
scas
inc
pop
mov
push
enter
and
adc
and
jl
sahf
inc
in
and
cmp
negb
cmp
mov
aad
sbb
pop
dec
xchg
pop
cmpsb
mov
xor
dec
sub
cmp
xor
stos
lcall
clc
daa
into
dec
jmp
pop
pop
out
nop
rcll
and
jbe
jg
mov
aas
sub
lahf
add
rcrb
push
or
fwait
push
lods
lret
ss
dec
sti
pop
jnp
dec
adc
popf
inc
fstpl
sub
clc
rol
negl
adc
rcrb
loop
in
push
sub
mov
cmp
mov
repnz
movsl
outsl
insb
arpl
std
outsb
shlb
scas
fcmovnu
or
ljmp
rorb
xor
stos
stos
cmpsl
jmp
sbb
popa
loopne
mov
test
xlat
mov
inc
jno
imul
popf
sbb
scas
call
mov
gs
outsl
arpl
inc
dec
ret
sbb
mov
and
nop
negb
popf
int
xchg
lcall
push
inc
aam
add
test
add
jno
cmc
sub
out
mov
or
fldcw
mov
inc
incl
in
outsl
mov
inc
or
cmp
sub
adc
es
xor
xor
xchg
insl
repnz
into
or
cmp
adc
sbb
xchg
mov
test
in
enter
cmpsb
sub
out
and
add
fdivrs
push
or
shlb
pushl
mov
sub
and
sbb
jae
push
in
push
enter
xor
insl
in
fyl2xp1
cld
pop
lock
mov
pop
stos
lock
and
out
mov
cmp
dec
cli
jp
or
adc
cmp
lret
push
test
or
fldt
ds
jo
aam
mov
sbb
mov
or
mov
cltd
ja
gs
lock
rcrb
push
or
inc
or
pusha
lahf
jl
inc
stos
fldl
mov
push
dec
push
add
ret
push
loopne
mov
imull
lock
outsb
aad
mov
dec
shr
out
jno
add
out
mov
jg
push
xor
lods
rol
f2xm1
pushf
mov
add
nop
mov
cli
sub
sbb
cld
je
xchg
mov
jge
mov
dec
jmp
jmp
andb
stos
jns
fdivl
xchg
loop
pop
xor
movl
ljmp
jno
push
dec
stos
lcall
cmp
mov
jne
or
mov
inc
lods
pop
pusha
jne
lahf
outsb
add
xchg
or
adc
xchg
pop
push
mov
ja
cmp
mov
cmp
in
lods
cmp
sbb
mov
in
jb
arpl
sbb
insl
push
mov
imul
dec
mov
mov
mov
and
subb
leave
pop
sbb
out
aaa
mov
push
pop
aam
adc
or
or
shlb
adc
loop
sub
mov
out
push
loop
sbb
lea
and
jmp
cltd
dec
or
mov
sbb
fdivl
fwait
push
fisubl
sbb
jmp
xchg
push
scas
pop
jmp
arpl
call
out
aad
cli
std
sub
mov
repnz
les
mov
mov
add
cmp
arpl
lods
xchg
pop
ds
fbld
jae
mov
and
cmp
mov
jg
add
pop
ret
cmc
jle
rorl
popf
mov
mov
fstpl
int
pushf
test
and
add
or
fstl
add
lret
mov
mov
jmp
dec
dec
lcall
jnp
popf
push
xlat
es
add
mov
outsl
or
icebp
add
cmp
sbb
dec
push
inc
mov
je
daa
sbb
sbb
xchg
popa
into
int3
repz
push
mov
adc
addr16
xchg
cltd
mov
repnz
cmp
stc
or
mov
repnz
push
test
cmp
in
test
lds
aam
cmp
out
push
fstps
or
lods
leave
mov
hlt
pusha
sub
subl
rcrb
sub
lea
cmp
repz
out
outsl
push
xchg
xchg
jg
cmpxchg
inc
cs
mov
add
clc
inc
sub
jae
mov
push
push
dec
movsb
jb
sbb
push
in
aam
lahf
scas
out
popa
pusha
ds
cwtl
testl
mov
cltd
in
dec
add
push
adc
mov
clc
inc
adc
loope
int
int3
loope
pop
or
mov
lahf
loop
js
in
test
and
pop
scas
cmp
xchg
lret
push
shll
pop
inc
jmp
pop
jb
daa
add
cmpl
or
pusha
mov
sti
push
xchg
test
add
out
sub
shrb
cmpxchg
sub
iret
cmp
bound
ljmp
inc
enter
jp
xchg
pop
dec
les
xor
add
lea
inc
movsl
jns
xor
push
mov
inc
or
jno
push
int3
dec
fadds
cli
dec
std
int
daa
rorl
mov
dec
adc
pop
cmp
push
pop
jge
bound
or
sub
sti
xchg
insb
repz
xor
rcr
aas
out
imul
data16
aam
add
mov
mov
fwait
inc
cmpsb
pop
pop
jns
pop
cmp
pop
push
xchg
fidivrs
cmp
xor
outsl
and
faddl
adc
add
mov
mov
xlat
nop
stc
inc
faddl
icebp
inc
addr16
pop
add
jge
push
inc
les
pop
mov
push
fldcw
repz
outsl
xchg
or
in
negl
fmull
je
cltd
sub
sbb
sbb
rcrb
pop
mov
je
mov
dec
or
push
mov
enter
and
pop
mov
mov
xchg
sub
aaa
lods
aam
hlt
sub
loopew
push
jb
loop
cmpsb
adc
lock
dec
mov
test
mov
mov
sbb
in
les
out
xor
push
out
pop
lahf
sahf
mov
or
lcall
cwtl
cltd
mov
xchg
pop
xor
or
sbb
pop
loope
dec
sub
scas
loop
cmpsl
mov
xor
jg
cltd
mov
dec
imul
inc
jmp
and
rclb
ret
imul
pop
imul
adc
in
cmpl
or
mov
push
test
xchg
loopne
push
out
movsl
inc
ficoms
dec
push
add
sub
jle
lret
push
sub
push
sub
ss
and
mov
mov
fs
ret
inc
add
sbb
jl
cmp
pop
sub
dec
sub
cltd
jmp
xor
daa
addl
xchg
adc
lods
jnp
icebp
adc
jnp
pop
ds
xchg
add
mov
enter
sub
inc
xchg
shll
iret
std
mov
dec
pop
mov
fsubrs
pop
out
or
adc
sbb
les
aaa
inc
pop
jnp
ja
sbb
pop
ljmp
jns
sub
test
je
in
push
dec
xchg
aam
xor
notl
or
test
pop
xchg
adc
jp
cmp
call
or
pushf
sub
gs
cld
or
test
inc
sbbl
insb
orl
arpl
fwait
mov
stos
jle
jb
adc
clc
add
loope
fucomip
sbb
aad
mov
jp
fisubs
dec
jns
iret
inc
subl
int
inc
jp
and
xor
fnstsw
mov
and
cmc
cmp
jmp
or
das
push
fimuls
jle
cs
movsl
aaa
icebp
push
bound
adc
or
push
mov
pusha
sbb
test
cmp
mov
les
gs
sti
pusha
push
fs
inc
testl
cmp
adc
sub
sbb
add
jne
mov
jl
pusha
xor
jg
push
add
mov
ret
jge
daa
jnp
cwtl
push
adc
push
push
addr16
add
inc
xor
push
push
int3
dec
test
lahf
push
xchg
push
jno
xor
ss
and
test
dec
out
pop
loope
push
mov
mov
scas
inc
iret
xchg
aaa
lret
call
sti
sbb
jecxz
rorl
dec
ret
xor
stos
mov
in
adc
fmul
sbb
sbb
pop
cld
fldl
cltd
shll
ljmp
mov
jmp
inc
nop
test
dec
jb
push
inc
or
xchg
mov
dec
imul
idivl
and
jle
sti
jmp
adc
add
inc
mov
pushf
out
cmpsb
sbb
iret
mov
imul
cmp
loopne
mov
cmp
ljmp
shll
dec
mov
inc
fisubrl
je
xchg
xlat
icebp
and
lods
mov
test
cmp
mov
or
add
adc
jle
rcrl
testl
jge
jae
cmpsb
push
repnz
movsb
ja
int
dec
bound
cmp
fcmovnb
int3
aad
adc
and
call
sbb
repnz
fs
lods
lods
xor
cmp
mov
pop
ja
bound
testb
dec
lods
jns
pop
iret
pop
cmp
fisubrs
adc
jo
or
jle
dec
lods
fwait
and
sbb
sub
jnp
and
pop
cmove
nop
rorl
dec
mov
mov
xlat
mov
lret
pop
inc
and
jns
inc
cmp
mov
adc
gs
jp
jecxz
lret
scas
pop
mov
in
into
popf
xchg
add
test
cmp
test
bnd
rcrl
movsl
outsl
testl
ret
add
xor
mov
fistpl
test
stc
in
pop
stc
mov
xchg
pop
jnp
fsts
add
cmp
jp
rclb
mov
or
arpl
popa
daa
cmp
sub
in
mov
inc
dec
sbb
adc
push
xorb
inc
insl
movsl
adc
test
pop
loop
rcr
push
pop
or
sub
jno
cmpsl
sbb
ret
inc
mov
jbe
mov
icebp
jae
pushf
call
popf
mov
ss
pusha
data16
sbb
jb
andl
rcrl
pop
push
shrb
outsb
sbb
push
aas
xor
push
mov
movsl
mov
mov
shll
bound
ja
push
cltd
sub
movsb
in
push
sub
xchg
cmp
fcomi
xor
icebp
mov
ja
call
jnp
imul
or
into
fildl
mov
ret
bnd
in
inc
inc
pop
cmpsl
push
in
int
roll
xor
cmpsb
pop
aaa
cmp
inc
pushf
jl
jge
sbb
or
and
divl
lods
in
popf
les
jns
movb
push
jge
shrl
pop
test
ss
fs
out
rolb
xor
inc
fsubrs
jl
mov
cmpsl
xor
mov
pushf
pop
and
jmp
mov
dec
sub
lret
xchg
cmp
loopne
xchg
shr
cmp
xchg
hlt
push
sub
imul
jne
fdivrp
popf
les
dec
insl
aad
push
pop
or
vrsqrtss
sti
xchg
fimull
jmp
hlt
les
int3
mov
xchg
sarb
popa
cmp
sbb
add
ja
stos
sub
pxor
and
scas
loopne
fwait
xor
jne
push
xor
adc
dec
lahf
push
push
repz
cmpsl
sub
in
add
jns
pop
mov
mov
cld
add
sbb
lods
mov
dec
mov
add
mov
stc
imul
mov
xor
scas
inc
pushf
cmp
add
test
dec
lock
outsb
pop
test
orl
cmpb
test
push
iret
mov
sbb
lods
mov
push
pop
enter
dec
sbb
roll
jns
adcb
pop
pop
stc
idivb
or
imul
inc
mov
push
inc
mov
push
xchg
pop
add
dec
test
mov
jnp
pop
test
push
mov
pop
mov
cmp
scas
pop
cmp
scas
out
and
and
jmp
test
adc
adc
and
dec
add
imul
shrb
xchg
scas
mov
jge
nop
into
ss
aam
out
inc
mov
push
arpl
icebp
imul
test
aad
rcll
cli
xchg
aad
lea
popf
popa
cli
inc
sbb
out
xchg
xchg
pop
aam
or
mov
hlt
sbb
ja
cmp
ret
outsl
ljmp
js
push
or
sub
std
andb
loop
add
sub
negl
lds
sbb
dec
xlat
sub
sub
adc
xchg
inc
aaa
mov
mov
jbe
pop
pop
pop
fnstcw
jo
imul
aam
or
sti
out
cwtl
loope
xchg
and
fisttps
lcall
adc
shlb
pushf
adc
cltd
cwtl
mov
push
in
push
fwait
mov
xchg
jg
sarl
xlat
sbb
push
jb
mov
inc
outsb
mov
or
repz
mov
out
add
addr16
and
pop
dec
andb
mov
aaa
hlt
enter
gs
xchg
add
cmc
hlt
or
mov
push
dec
add
int
mov
sbb
pop
stos
sub
inc
xor
data16
imul
inc
sti
cli
int3
xchg
nop
mov
lahf
mov
cmp
sub
and
movsl
push
dec
xor
mov
repnz
cmp
fldpi
popf
mov
or
inc
mov
pop
adc
fdivrl
icebp
outsb
jno
pop
mov
add
pop
test
fdivr
and
sub
clc
or
mov
inc
out
add
sbb
repz
cs
ss
ret
cli
xchg
xchg
fdiv
frstor
movsb
dec
sbb
dec
jns
in
pop
outsl
icebp
ficompl
scas
push
inc
mov
daa
jg
mov
pop
es
push
pop
mov
movsb
mov
fimull
cmc
scas
sub
imul
pop
push
mov
mull
jge
cltd
jae
out
fneni(8087
adc
bound
stc
int
mov
ds
xchg
mov
outsl
imul
jl
mov
data16
jg
ds
fldl2e
sbbl
out
xchg
cmp
insb
daa
std
sub
jo
imul
aad
cmp
and
push
pushf
sti
aaa
cltd
xlat
mov
dec
out
invd
push
orb
cmc
xor
fwait
sub
cmp
cltd
cmp
or
rorl
pop
ds
sti
sbb
lcall
mov
loopne
mov
dec
repz
and
popa
xchg
pop
pop
and
dec
out
inc
jae
lds
mov
and
pop
mov
pop
cli
lret
jecxz
mov
enter
xchg
enter
sti
adc
ficoml
sub
pushf
nop
xchg
mov
imul
mov
aam
xchg
xchg
outsb
ret
adc
out
sti
movsb
movsb
mov
scas
orl
subl
loope
decl
lret
in
push
and
popf
mov
cmp
pop
adc
push
and
xchg
or
je
add
xchg
mov
xchg
mov
or
es
cld
adc
inc
jbe
fidivrs
negl
call
fcomp
enter
mov
cmpsl
cmp
dec
jns
jecxz
dec
add
cmpsl
nop
jne
lods
nop/reserved
xchg
or
aas
sbb
imulb
jne
add
scas
and
jne
xor
pop
scas
push
imul
inc
test
enter
xchg
dec
popf
popa
or
out
xor
cmp
pop
in
mov
inc
mov
xchg
xchg
in
fistl
xor
dec
inc
inc
sub
or
push
cs
idivl
in
outsb
jne
pop
mov
insl
loopne
fwait
int3
lods
and
aaa
out
dec
orl
hlt
sub
mov
dec
je
add
les
repnz
pop
cmpb
fidivrs
cmpsl
icebp
jmp
js
or
shr
jmp
push
xlat
lret
popa
add
sub
or
mov
repnz
repz
pop
jmp
lea
ljmp
les
jl
xchg
pop
outsl
jg
in
rol
fcmovne
dec
cmc
popf
movb
cmpsb
sub
jecxz
iret
jo
and
cmp
sti
add
test
test
dec
int3
sbb
push
test
and
adc
pop
data16
and
cmpb
and
bound
adc
scas
dec
mov
int
out
pop
addr16
in
xchg
jno
xchg
rol
ror
cmp
rcrb
lods
imul
mov
inc
stos
sbb
push
sbb
dec
or
or
push
into
cmp
aad
cs
sub
lea
or
test
and
repz
std
cmc
leave
lods
mov
into
push
lods
mov
ja
mov
das
push
mov
jnp
outsl
mov
fs
test
mov
lret
fisttpll
mov
cmpb
out
decb
into
or
jecxz
xor
pushl
cwtl
inc
jle
inc
lds
push
cmc
mov
jns
push
test
mov
lahf
mov
jmp
mov
out
adc
sub
jb
or
pop
mov
sbb
or
mov
push
jbe
push
adcb
lahf
decl
icebp
je
clc
fidivrl
orb
stc
scas
addb
fidivrl
cld
das
jno
push
outsb
pusha
lock
std
push
or
mov
xchg
inc
stos
mov
ret
mov
cltd
jmp
mov
inc
xchg
ror
sub
adc
adc
jae
mov
mov
adc
cmp
scas
nop
lods
mov
lds
adc
stos
adc
popa
dec
mov
dec
or
and
mov
fisttpl
xor
add
fstpl
mov
cmc
fs
adc
push
or
xchg
roll
mov
jp
stos
dec
hlt
out
leave
fdiv
dec
push
je
inc
mov
enter
and
lcall
mov
cmpb
hlt
pop
jecxz
nop
iret
or
xchg
add
and
pop
push
inc
das
mov
jns
mov
add
rcll
cmp
das
and
mov
aaa
repnz
cli
or
sbb
push
dec
movq
mov
mov
shrb
xor
lds
inc
out
dec
fcmovu
dec
mov
mov
stc
pop
jecxz
mov
sahf
hlt
mov
mov
loopne
sbb
push
or
pusha
mov
and
mov
fnstsw
das
pop
nop
stos
adc
je
lret
inc
or
jno
jnp
nop
jo
sub
adc
push
fstpt
scas
movsl
xchg
ds
or
hlt
and
mov
scas
das
pop
mov
mov
push
xor
daa
mov
xor
stc
out
dec
push
mov
insl
mov
int3
rol
hlt
adc
sbb
pop
mov
int3
shl
lock
adc
pop
pop
adc
lods
loope
adc
out
xchg
mov
mov
rcll
jmp
std
dec
mov
jp
loope
and
sarb
sti
xchg
in
cmp
cmp
in
or
sbb
sbb
sub
in
cmpb
and
and
je
cltd
or
push
outsb
insb
out
into
jmp
pop
mov
jo
mov
cld
in
sub
jns
push
dec
jecxz
xchg
mov
pop
push
and
push
cmpsl
add
inc
or
mov
adc
jb
cmpsl
das
fadd
push
jle
lret
jl
test
gs
mov
inc
pop
lods
add
push
rcrl
addr16
cmpsb
jge
sub
aas
dec
jnp
mov
push
aaa
mul
jle
add
cld
lods
push
inc
cltd
mov
jne
inc
push
js
cmc
add
inc
mov
push
negb
ljmp
imul
pop
leave
pop
clc
stc
cmpb
addr16
mov
ljmp
out
out
jmp
pop
dec
insl
rorb
xor
lea
insl
in
push
cltd
popa
lcall
jle
push
pop
and
ss
repnz
adc
negb
push
int
lods
shll
cltd
call
jno
mov
inc
in
push
loope
jnp
std
add
mov
inc
cli
sahf
adcb
xor
cs
gs
inc
cmpsb
jl
clc
jcxz
bound
inc
int3
cmp
dec
inc
inc
das
loopne
push
aaa
leave
mov
and
lahf
or
out
repnz
shll
stos
jp
fs
out
leave
sub
fisubrl
pusha
sub
sub
cmp
shrl
loop
push
jo
push
xor
es
mov
mov
mov
js
shrl
inc
jp
and
pop
outsb
adc
pusha
inc
inc
loop
cmp
js
sbb
push
mov
negl
push
dec
cwtl
std
nop
sahf
dec
lcall
inc
rcr
movsb
pop
aad
in
add
xor
clc
xchg
popa
push
sub
hlt
mov
addr16
lods
movsl
cmp
mov
or
push
adc
inc
and
rorl
leave
fs
je
pop
inc
gs
and
jmp
imulb
inc
dec
pushf
push
out
mov
xor
enter
push
sbb
jmp
ja
xchg
pop
lret
jmp
jp
ljmp
jne
out
dec
jae
push
sbb
adc
jle
test
mov
subb
sti
pop
push
jno
jmp
adc
les
pop
inc
ja
dec
jmp
addr16
cmp
sub
jo
push
jae
orl
loop
push
ljmp
outsl
sub
push
test
adc
xchg
movsl
and
inc
cmp
xchg
cltd
jl
sbb
cmp
cld
xor
and
push
mov
xchg
push
mov
and
xchg
scas
icebp
in
xor
pusha
dec
in
aad
sbbl
enter
push
lods
ret
daa
out
xor
push
hlt
sti
jle
fists
push
sub
mov
es
ljmp
ficoml
jecxz
fildll
lea
pop
out
pop
imul
xchg
mov
imul
jle
enter
mov
test
or
aas
and
push
jns
ja
jnp
adc
jge
stc
xor
sub
sbb
arpl
loope
jg
add
cld
jns
stc
pop
jle
mov
pushf
outsl
shrb
fsubr
xchg
out
jno
enter
xchg
lcall
cld
or
cmp
mov
ljmp
and
stos
sub
dec
out
mov
mov
lahf
fwait
jbe
fs
cmp
ret
out
sbbb
call
push
les
jns
inc
add
sub
xchg
rcl
xor
bound
pop
xchg
mov
add
js
mov
imul
fisttpll
stos
loop
xchg
popf
ja
jne
lret
ret
fst
pop
and
iret
in
fcompl
out
mov
xchg
adc
mov
add
pusha
or
or
lret
inc
xchg
lret
xorl
cmp
fiadds
jge
lods
sahf
pop
mov
and
test
inc
jb
testb
mov
mov
mov
sti
ret
sbb
test
lret
cs
fidivrs
inc
and
mov
dec
sbb
push
aas
lahf
xchg
in
repnz
fisubs
out
js
lods
cmp
inc
fadd
lea
adc
orl
mov
mov
outsl
out
jne
sti
push
adc
push
lcall
add
mov
leave
sbb
sub
aam
jno
sbbl
or
xchg
into
jns
mov
mov
mov
xor
jecxz
sahf
pop
orl
cwtl
sub
shll
daa
shll
lea
pop
cwtl
mov
fwait
in
pushf
xor
dec
aaa
pop
pushf
xchg
mov
inc
shlb
or
out
jae
daa
pop
out
adc
xchg
pop
xchg
loope
hlt
sbb
inc
or
mov
sahf
fisubrs
jnp
push
mov
mov
hlt
lods
es
lret
push
test
xor
jl
dec
mov
ljmp
or
lods
jg
and
mov
repz
mov
mov
inc
jnp
sbb
xchg
jp
lcall
loope
xchg
ret
xchg
and
inc
insb
lahf
fldl
xor
shrl
lea
cmp
adc
add
inc
mov
dec
push
adcb
mov
inc
xchg
xchg
pop
xchg
sub
xchg
pusha
mov
out
or
xor
xlat
push
cmpsb
or
xchg
mov
push
mov
lds
mov
aas
ror
jae
xor
pop
clc
adc
lods
ja
push
add
jo
arpl
mov
push
or
pop
in
dec
xchg
pop
mov
hlt
jle
inc
and
sbb
inc
leave
mov
cli
jb
aaa
xchg
push
and
mov
pop
and
jp
idivb
mov
sub
jns
add
push
and
jg
les
mov
push
or
test
mov
jno
out
jae
out
cmp
push
jp
pusha
out
aam
jnp
std
dec
mov
pop
lea
insl
in
and
dec
std
scas
repnz
or
cmc
arpl
xchg
pop
sub
scas
add
mov
add
leave
and
xchg
push
or
inc
or
cmpb
or
sbb
or
xchg
mov
sub
rcrb
out
xchg
jecxz
lods
scas
adc
mov
mov
xchg
mov
cld
inc
loope
cltd
dec
inc
inc
mov
adc
fsub
lock
ja
or
add
and
adc
mov
xor
xchg
sub
inc
testb
mov
out
dec
xchg
xchg
pcmpgtd
hlt
and
cmp
xchg
mov
push
push
decl
test
dec
repz
sahf
arpl
mov
jp
xchg
push
in
or
je
es
mov
sbb
mov
add
inc
sbb
pop
mov
lahf
sahf
das
jmp
sbb
inc
mov
insl
xor
daa
imul
test
and
loop
mov
mov
bound
daa
mul
das
cmp
aaa
inc
out
lcall
sub
repnz
aas
lar
add
pop
mov
shl
or
insb
mov
dec
xchg
jl
push
mov
sub
aam
in
cmpsl
fwait
pop
jae
sbb
pop
pop
xchg
jne
rclb
xchg
xchg
push
mov
fidivrs
lret
or
fst
mov
je
notb
sbb
out
out
pusha
dec
add
inc
daa
or
or
outsb
mov
push
fld
fdivr
add
pop
decb
call
xor
mov
clc
out
mov
mov
mov
pop
sbb
dec
jmp
fmull
bound
or
and
pop
or
test
sbb
pushf
mov
jg
xor
je
jne
sbb
and
mov
push
mul
mov
sub
inc
and
arpl
int3
imul
or
inc
loop
pcmpeqd
xchg
mov
insb
lods
aas
inc
into
mov
fbstp
mov
shrb
iret
shl
xchg
cmp
fsubrs
out
sti
roll
cmp
fwait
add
fmulp
cmp
orl
cmpsb
mov
loop
fnstsw
xchg
jl
fwait
sbb
or
push
push
cmp
push
xchg
cs
jnp
mov
fldenv
movsb
jb
inc
lret
jb
push
out
push
pop
lret
gs
mov
adc
sub
xlat
rolb
xchg
jne
mov
das
repnz
loope
test
int3
push
xchg
leave
hlt
negb
push
cmc
mov
push
lock
fists
xchg
fcos
adc
js
dec
xchg
push
scas
ljmp
fadds
sub
lret
or
push
sub
ds
sbbb
push
clc
jmp
fistpl
leave
mov
pop
outsl
pop
sub
adc
inc
nop
test
xchg
cmpsl
cwtl
sub
inc
sbb
mov
test
movl
add
inc
scas
test
fidivrs
sbb
jb
xchg
vmwrite
rol
mov
jecxz
add
out
sarb
fcomi
enter
fwait
push
sbb
pop
push
out
lret
inc
or
test
or
pop
iret
lret
adc
dec
daa
das
jge
and
clc
inc
xor
xadd
or
push
mov
sbb
adc
test
jno
jnp
frstor
fidivrl
or
sti
in
test
mov
pop
pushl
imul
mov
ret
movsb
test
and
add
jl
sbb
test
lods
mov
push
xor
push
push
pop
add
pusha
or
and
xlat
dec
call
sbb
mov
sti
pop
sub
out
inc
and
shr
aad
and
xchg
adc
lahf
xchg
and
sahf
and
jge
addl
pop
fiaddl
adcb
ss
mov
aaa
aam
mov
jnp
mov
insb
out
xorb
jo
inc
nop
shrl
dec
in
jns
sbb
xchg
stos
loopne
movsl
jge
pop
lds
mov
ds
mov
jo
push
pop
push
mov
dec
dec
add
cmp
inc
jns
pop
mov
sbb
xlat
ja
je
dec
and
or
ljmp
mov
pusha
scas
adc
cmc
outsl
mov
out
add
jp
stc
jb
pop
lds
ljmp
sbb
sub
iret
mov
mov
cli
sub
stc
loopne
mov
fidivl
aas
hlt
movsb
push
ss
rcrl
mov
xchg
sti
lahf
xor
sub
es
mov
lds
mov
leave
mov
add
add
push
sbb
lods
jno
fs
mov
in
fcomp
roll
jnp
xchg
cmp
mov
ret
ret
vpmulhw
cltd
xchg
xor
push
call
sbb
push
mov
mov
nop
sar
mov
dec
ljmp
in
cwtl
push
mov
mov
inc
out
cmpsb
in
xlat
mov
mov
iret
add
push
lret
mov
arpl
push
sub
fsub
dec
mov
jecxz
es
inc
sahf
xchg
and
testb
mov
dec
add
cmp
dec
sar
pop
inc
sub
pop
mov
cmp
sub
leave
jmp
xchg
fs
movsb
pop
and
fidivrl
mov
cmc
pop
mov
cmp
cltd
flds
dec
pop
xor
xor
push
fmulp
add
cmp
mov
add
push
dec
loop
inc
inc
add
movsl
jecxz
outsb
dec
cmpsb
xchg
ja
jns
push
mulb
outsl
rolb
xchg
fstpt
fwait
or
add
out
dec
add
ds
cmpsl
popa
cmp
sbb
pop
mov
mov
insl
out
pusha
fbld
jmp
jl
loop
addr16
mov
xor
jo
test
mov
mov
jne
mov
cmp
sarb
mov
out
out
bound
cmpsl
xchg
jle
add
and
pop
aas
mov
mov
into
xchg
xor
cmp
jl
out
cmpsl
bound
out
je
call
or
mov
push
stos
les
aam
lods
push
jbe
xchg
mov
call
push
and
push
out
add
push
popa
rolb
add
loop
movsb
gs
pop
inc
movsb
mov
ret
add
cli
cmp
sarb
inc
mov
dec
cmpsl
orl
pop
adc
mov
in
and
and
pushf
popa
cs
je
popa
testb
mov
rorb
loopne
mov
pop
repnz
enter
xor
adc
lds
stos
mov
insb
pop
lock
data16
aad
stc
popa
js,pt
cmpsl
adc
imul
test
mov
push
cmp
xchg
ret
mov
push
into
and
jge
leave
dec
lods
aaa
sbb
hlt
and
jmp
lock
mov
pop
mov
sbb
cmp
jbe
aam
dec
pop
jge
scas
enter
inc
adc
mov
push
jecxz
imul
adc
movsb
mov
or
xchg
lcall
cmpsl
jno
sbb
xchg
adc
mul
popf
fisttpll
push
clc
jecxz
fcmovb
pusha
out
stos
in
add
addr16
xor
imul
sahf
ds
imul
test
sub
and
mov
das
shl
mov
mov
call
and
out
cmp
rolb
jbe
mov
daa
mov
movsb
inc
push
popa
xor
add
and
pop
ss
aaa
and
idiv
rclb
sti
nop
pop
fwait
lea
mov
int3
xor
nop
inc
ja
xor
sub
mov
cs
into
movsl
les
adc
cmpsl
and
pop
jle
adc
jae
mov
inc
sub
add
cld
stc
fldcw
lods
jo
pop
loope
out
and
test
imul
lcall
push
pushf
xchg
mov
fcoms
cmp
adc
aaa
loopne
and
je
lea
dec
jae
pop
lcall
or
fs
sbb
pop
icebp
mov
adc
ja
enter
js
and
dec
dec
inc
sbb
stos
test
mov
in
ret
dec
lock
inc
jp
xchg
cmpsl
push
cmovne
or
fldenv
cmp
fs
xor
pushf
repz
pop
pop
scas
mov
push
int3
mov
out
test
jg
jno
adc
xor
jmp
data16
sbb
inc
add
testl
sub
or
mov
fimuls
repnz
je
mov
cmp
loopne
lret
cwtl
jno
gs
xchg
pop
stos
add
mov
mov
add
pop
push
inc
notl
and
dec
mov
pop
jae
sub
push
pushf
cld
mov
and
xor
push
adc
mov
lock
mov
pushf
cmp
mov
addl
aas
sbb
jns
faddl
jo
cltd
icebp
push
fadd
andl
ss
aas
fsubs
mov
ljmp
clc
jne
jns
jle
repnz
pop
fistl
aas
lods
cmp
in
pop
in
jmp
mov
lcall
mov
cmp
das
loope
scas
lahf
icebp
fistpll
jae
into
out
add
ja
cmp
add
sub
cmp
gs
addr16
mov
jecxz
add
dec
cmp
cmpsl
add
xor
pop
pop
mov
mov
mov
jmp
mov
lcall
mov
dec
lret
jmp
lods
inc
inc
fldl
aaa
fwait
out
or
aaa
mov
add
sub
repz
inc
negb
lret
imul
mov
adc
adc
adc
mov
lods
hlt
add
dec
lock
orl
or
icebp
push
cli
dec
pop
adc
adc
sti
fnstenv
imul
test
xchg
lcall
push
mov
xor
insb
shr
cmp
dec
insb
adc
xlat
aas
and
inc
movsb
sbb
les
pop
fnsave
mov
and
push
dec
mov
xorb
sbb
ss
jmp
outsl
fistl
shrb
in
lock
imul
xchg
xchg
jno
repz
ss
lock
mov
inc
loope
pop
dec
sub
inc
sbb
test
lds
fldln2
loope
mov
mov
out
idivl
sbb
push
sub
add
and
loop
in
icebp
adcb
fwait
mov
call
cs
stos
mov
adc
or
movsl
test
dec
cmpsb
mov
maskmovq
movsl
test
lcall
xchg
fadds
jnp
or
mov
fldenv
dec
fs
sub
dec
mov
add
fnstcw
jo
dec
repz
into
jmp
sub
sbb
int3
and
sub
mov
fcoms
or
mov
seta
jnp
and
push
in
cmpsl
pop
testb
pushf
in
and
hlt
int3
subl
mov
cmp
xchg
dec
mov
lahf
push
jmp
xchg
pushf
ljmp
lret
dec
clc
xor
out
mov
lea
mov
sti
mov
fs
sub
and
push
cld
addr16
aam
xchg
js
pop
sub
mov
xchg
stos
jo
push
imul
inc
pushw
mov
fildll
inc
and
mov
xchg
insl
xorb
int
repnz
lods
call
out
pushf
stos
outsl
and
inc
rolb
xchg
push
sbb
mov
sub
mov
add
add
mov
std
pop
movsb
xor
mov
push
mov
icebp
lret
aaa
rcrl
or
stos
fidivl
dec
adc
cwtl
dec
mov
fwait
and
repz
mov
push
fwait
daa
jno
and
test
stos
daa
cmc
subl
data16
lahf
jae
je
les
add
sarb
js
mov
out
adc
sub
and
add
es
movsl
out
mov
lret
outsb
pop
push
outsb
mov
js
jnp
mov
jnp
xchg
out
addb
loop
insl
aad
out
decb
mov
push
add
fadds
push
fidivs
out
xor
outsb
rcrl
adc
mov
jecxz
ret
loopne
insb
mov
push
or
xor
adc
scas
xlat
cmpsl
daa
adc
mov
jbe
icebp
lods
fisubrs
in
inc
jmp
mov
and
mov
scas
jecxz
das
jecxz
scas
nop
push
inc
push
inc
mov
sbbb
mov
lret
sbb
lods
mov
mov
add
daa
sbb
xchg
imulb
aaa
or
sbb
scas
adc
fucom
push
ds
xchg
loope
daa
xchg
test
adc
jg
dec
loope
xlat
mov
lret
mov
shl
and
pop
inc
or
push
push
dec
ja
pop
mov
mov
rorl
xchg
gs
jmp
inc
or
fld
sbb
push
xchg
icebp
lret
fldt
or
dec
out
cmc
xlat
loope
and
pop
cld
lods
xchg
push
dec
outsb
andb
pop
pop
hlt
push
pop
inc
clc
lcall
push
push
adc
stos
inc
std
inc
lods
lret
iret
xchg
call
jno
movsl
dec
pop
cmp
js
loop
int
int3
pop
in
nop
aad
mov
push
xor
scas
cmp
mov
cwtl
mov
add
or
jge
mov
pop
les
int3
mov
test
cmp
mov
pusha
pop
adc
sub
dec
test
mov
sbbb
push
add
aas
push
stos
mov
sbb
jle
and
or
insl
mov
sbb
notl
add
push
shll
lcall
lret
sbb
pop
xor
das
dec
test
inc
pop
jmp
xor
rcr
cmp
out
repnz
pop
call
sub
sub
test
push
push
loop
push
dec
pop
js
mov
loop
push
fs
test
icebp
or
out
pop
in
or
xor
popa
test
test
lods
outsb
dec
inc
hlt
ss
int
rcrb
xchg
cli
subl
mov
mov
rcll
in
mov
dec
sub
push
dec
scas
lret
push
cmp
or
sahf
cmp
or
cmp
mov
fbstp
in
call
inc
or
inc
daa
sbb
in
push
ret
cmpsl
sub
daa
xlat
xchg
in
cmpsl
cmp
scas
dec
jle
flds
sub
shlb
push
jmp
fistpl
movsl
and
in
adc
sbb
dec
push
ss
push
jp
adc
jns
imul
pop
xchg
push
repz
movsb
rorl
cli
pusha
cwtl
pushf
xchg
sub
inc
pop
inc
sbb
mov
mov
push
sysexit
jo
jl
inc
mov
hlt
int
push
xchg
into
xor
and
sbb
repz
cmpsl
push
jae
aas
mov
out
push
mov
xor
sub
lahf
out
mov
stos
movsb
jp
cwtl
pop
and
xchg
leave
sbbl
shlb
out
les
ss
sub
jo
mov
mov
inc
or
mov
out
or
dec
or
mov
adc
sbb
ja
sub
pop
push
lret
cli
out
aaa
xchg
lcall
and
in
adc
mov
or
fistpl
pop
push
cmp
pop
xlat
xchg
ds
clc
cmpsl
or
rcrb
lret
mov
fwait
loop
xchg
adc
imul
dec
fcompl
popa
lds
mov
fisttpll
icebp
repz
push
lcall
add
add
outsb
push
lret
mov
jnp
push
aas
jle
lea
ss
loop
xchg
repnz
mov
mov
insb
repz
sbb
dec
fiadds
fnsave
adc
inc
scas
clc
in
lock
xor
push
ret
stc
dec
push
push
mov
rcrb
dec
ds
push
cmc
mov
shrb
int
mov
push
add
xchg
or
sub
rcrl
lret
cmc
fistpll
dec
mov
addr16
into
mov
ljmp
sub
xor
andb
outsl
aam
pop
pop
push
jnp
xor
jge
adc
lcall
lahf
jnp
mov
imul
enter
addb
xchg
cmp
pop
or
lock
sbb
jno
loopne
cmp
push
popf
scas
mov
aad
cmp
das
loope,pt
insb
shrl
cmc
push
inc
icebp
push
stos
pop
in
xor
xchg
outsb
sub
test
jb
or
and
xlat
loop
xchg
dec
nop
jmp
mov
mov
imul
sbb
push
xchg
or
adc
or
pop
adc
inc
jne
jno
insb
pushl
xor
mov
adc
xor
inc
test
and
dec
or
arpl
cmp
jg
aaa
out
adcl
xor
fdivl
push
xor
or
rcl
mov
adc
xor
add
sti
insl
out
stc
ja
add
xchg
pop
inc
xor
dec
pop
mov
jae
out
jne
leave
jns
push
fldcw
sti
out
xchg
mov
int3
mov
clc
bound
xor
xor
sahf
cmp
dec
dec
fwait
les
or
fnsave
shrb
or
sub
mov
packssdw
lea
dec
lcall
daa
and
add
add
fimull
bound
xchg
mov
xor
aaa
mov
incb
mov
shll
pusha
subl
fwait
add
mov
call
out
shll
xor
jp
lret
sbb
pop
filds
add
sub
sahf
dec
xor
mov
movsb
test
arpl
mov
push
pushf
xor
mov
outsb
cli
and
rol
jmp
sub
and
cltd
dec
mov
cmp
sbb
lahf
je
push
jg
or
cmp
or
xchg
add
sub
or
push
cmp
push
mov
in
into
xchg
sub
jb
int
pop
int
out
or
adc
jecxz
inc
push
ret
fbstp
mov
movsl
push
insl
and
jp
mov
jge
movzwl
sub
ds
jae
in
jo
xchg
sub
mov
and
lods
cld
lock
hlt
xor
dec
push
xchg
sub
out
xor
outsl
adc
xchg
addr16
mov
jge
sub
aad
push
pop
shl
imul
inc
mov
dec
sahf
inc
push
icebp
test
xchg
jb
jle
mov
cmp
xlat
jge
rcrb
mov
icebp
jne
adc
popf
or
or
imul
push
jge
xor
jg
das
fidivrs
xlat
mov
in
push
jp
ljmp
ficoms
loopne
and
int3
adc
xor
mov
int
and
in
sub
out
mov
xlat
fwait
mov
insl
inc
jo
mov
jge
inc
test
jle
inc
aam
add
cmp
cmp
in
pop
mov
aaa
mov
mov
cmc
pop
aaa
inc
int
adc
fimull
jb
mov
jbe
stos
dec
das
ja
inc
cli
pop
addr16
push
bound
xchg
push
insl
jns
xor
cld
orb
push
sub
push
dec
cmc
xchg
jmp
or
stos
jbe
andl
or
adc
and
push
outsb
jl
jle
push
lcall
lods
sbb
inc
cmpsb
push
imul
fwait
imul
push
shrl
sarb
out
outsb
in
mov
xor
repz
and
lea
nop
cmp
push
inc
cs
push
pop
out
sub
add
cmpsb
inc
dec
testl
xlat
cltd
pop
cmp
xor
jg
xchg
arpl
cltd
icebp
dec
xor
push
js
pop
repnz
inc
inc
call
cwtl
mov
aam
push
rclb
sub
outsb
sub
pop
push
js
faddl
xor
icebp
add
cld
push
popa
xchg
loope
and
es
stos
adc
dec
and
sbb
adc
push
jno
fidivs
pop
ja
xor
int
test
repnz
fdivp
dec
dec
mov
bound
insb
xlat
outsl
push
imul
test
ficoml
push
icebp
dec
loop
sub
ret
loope
and
mov
cmp
mov
int
mov
xor
bound
js
cltd
fistps
push
repz
mov
inc
inc
lods
rcll
sbb
jmp
mov
inc
pop
push
cmp
cmpsb
popa
leave
jbe
movsl
rcrb
fdivs
mov
cmc
inc
repnz
int
cmp
daa
fildll
adc
push
fidivrs
into
jg
and
or
and
cmc
out
inc
cld
push
jne
lahf
inc
sub
mov
jmp
xchg
inc
inc
divl
les
pop
mov
xor
fwait
cmp
shrl
vpunpckhqdq
mov
fwait
jg
xlat
push
dec
push
sti
pop
xor
cwtl
cmp
stc
cmp
mov
cmp
push
or
xor
jb
mov
inc
sahf
cmp
or
xorl
ret
shll
pop
inc
lret
xlat
lods
xchg
adc
gs
sbb
sub
ret
push
push
scas
lods
stc
push
jno
pop
or
mov
pop
jbe
mov
push
push
popf
xchg
mulb
rcrl
mov
shl
fdivl
rorl
push
shrl
xchg
out
bound
add
push
xchg
mov
addl
jmp
out
jle
pop
sbb
push
mov
lds
sub
push
push
aas
adc
lock
sub
idivb
mov
sub
sub
pop
ret
aad
stos
pop
jne
pushf
adc
inc
pop
cmp
int3
not
jo
fcompl
insb
inc
ret
daa
sahf
outsb
push
sbb
jb
roll
cmp
mov
xchg
ja
mov
rclb
cmp
mov
loop
xor
inc
rcrb
pop
mov
insb
jns
xor
jo
out
pop
test
sub
or
lcall
xchg
aas
sbbb
pop
push
mov
pop
fimull
repz
in
loope
bound
mov
xor
sbb
shlb
mov
vmovaps
lret
sub
mov
cmp
sbb
xorb
mov
cmp
inc
inc
mov
cmpl
cld
mov
push
pop
sbb
sbb
in
stos
lret
jb
sub
jecxz
daa
sbb
lock
pop
xchg
addr16
cltd
inc
sbb
ret
jmp
dec
adc
nop
pop
jmp
sub
iret
dec
mov
scas
or
das
mov
sub
inc
data16
inc
pop
or
jle
jno
mov
psubb
mov
sbb
xor
outsl
mov
jg
dec
lds
jmp
cmpsl
int
or
xor
repz
test
add
dec
aam
push
xor
loope
test
pop
stos
mov
pop
adc
test
movsb
fidivrl
mov
out
mov
push
and
int3
jnp
lret
sub
das
jle
cld
jnp
sub
cmp
sub
adc
pop
je
aad
sub
pushl
mov
rolb
fldenv
cmpsl
lret
es
out
push
mov
mov
xor
test
mov
xchg
push
sub
cmp
xlat
movsb
mov
idiv
xor
test
sub
outsl
mov
lods
jae
ss
fbstp
bnd
out
fnstsw
push
shrl
sub
loope
sbb
and
adc
out
sub
popl
loopne
je
es
in
aas
or
xchg
xor
into
cmp
mov
pop
adc
fisubs
push
and
mov
dec
mov
pushf
insb
mov
test
push
pop
or
mov
pop
adc
in
xchg
arpl
hlt
mov
xor
aas
inc
cmp
mov
das
pop
adc
inc
jne,pn
inc
or
aas
imul
sarb
das
inc
push
out
xor
insl
push
lahf
sbb
mov
pusha
cmp
mov
jnp
add
je
test
dec
mov
scas
xor
xchg
adc
daa
push
stos
xor
and
pop
test
inc
lahf
pop
xor
addr16
xlat
adc
shrb
mov
sar
mov
pop
add
lods
mov
mov
lds
iret
sbb
les
in
clc
imul
xorb
in
mov
call
xchg
inc
clc
add
jp
dec
sbb
lret
in
inc
int
dec
mov
mov
adc
pop
push
decb
jmp
dec
test
lret
mov
mov
jmp
inc
repnz
pop
push
test
pop
and
push
mov
push
xchg
popl
pop
inc
cmp
xor
dec
push
and
xchg
dec
fildll
xchg
rep
dec
lock
xchg
mov
les
mov
repz
out
mov
sti
and
xor
inc
clc
inc
mov
adc
mov
push
push
test
inc
jle
xor
add
add
cmp
push
repnz
pop
add
xchg
xchg
xchg
push
dec
jmp
in
enter
out
cld
pop
leave
ret
andb
mov
les
movaps
lret
ret
fnstenv
push
imul
scas
or
fcoml
mov
outsb
inc
jmp
jne
inc
daa
mov
mov
imul
mov
mov
adc
jecxz
pop
or
push
sbb
push
adcb
idivb
mov
clc
icebp
inc
stos
sub
fadds
or
repz
pop
adc
sub
fs
mov
push
jo
dec
or
xor
pop
cmp
mov
daa
movsb
mov
popf
fdivrl
popf
push
cld
lretw
dec
lahf
dec
inc
les
adc
int
jo
out
pop
testl
mov
and
into
and
jae
mov
fimull
pop
std
xchg
add
cmp
cwtl
out
jg
test
mov
mov
jne
mov
sahf
adc
or
or
jmp
popa
pusha
cmc
cmpsl
xlat
add
xchg
ljmp
and
sub
cwtl
sub
imul
jns
jne
pop
adc
pop
mov
jno
push
or
jle
lret
push
jbe
cmc
jae
push
gs
dec
hlt
aad
imul
inc
sarb
pusha
inc
sub
shrb
loopne
inc
cmp
push
inc
jp
push
push
mov
sbb
fildl
test
or
aaa
insb
mov
outsl
mov
pop
mov
pop
sti
pop
in
jnp
cmp
inc
mov
sarb
dec
in
pop
sbb
insl
les
mov
jbe
push
adc
xchg
daa
sub
inc
iret
mov
and
xchg
enter
sbb
add
outsl
dec
mov
jbe
mov
pop
loope
sbb
inc
mov
cmpl
testb
jne
les
mov
push
xchg
dec
push
aam
lea
mov
jb
inc
jae
dec
popf
adc
xor
adc
test
or
mov
xchg
cmp
in
xchg
add
movsb
lods
enter
or
hlt
mov
and
jo
mov
jno
pop
mov
sti
add
cmp
pop
sub
cmp
mov
fisubrs
int3
or
jae
dec
sbb
cmp
jno
inc
mov
inc
pop
and
cmp
push
fsubl
leave
divb
sbb
fwait
dec
cli
stos
clc
in
es
mov
imul
mov
lret
inc
sbb
jae
mov
shll
xchg
push
movsb
sbb
popl
fstpl
scas
bound
cwtl
sti
scas
push
cmp
int
jb
push
loop
mov
and
mov
or
dec
inc
inc
jp
lock
shll
hlt
dec
sub
andb
xchg
lret
push
dec
xor
aaa
xchg
xor
xchg
mov
out
pop
out
stos
and
test
movsb
xor
hlt
cmp
cmp
in
insb
adc
lcall
fwait
out
or
push
sbb
shl
lahf
nopl
inc
push
add
sarl
adc
call
out
xchg
mov
xchg
and
ficoml
sub
hlt
adc
loop
xchg
fstpt
push
xor
dec
test
hlt
mov
and
adc
mov
lcall
xchg
fs
mov
add
xchg
and
jle
lock
pop
mov
scas
push
movsb
sahf
and
sbb
xor
xchg
test
xchg
push
mov
lods
mov
and
add
rcll
jecxz
out
xor
jb
pop
mov
addr16
jg
fisubs
adc
insb
fsubrl
mov
dec
jne
clc
sbb
xchg
call
sbb
sti
adc
dec
adc
imul
mov
jno
mov
dec
cmpsl
push
pop
or
iret
mov
or
push
repz
mov
rorl
out
cmp
aad
push
dec
sub
loop
or
adc
push
fdivrs
jg
bnd
jp
or
sbb
add
fstps
adc
mov
les
push
mov
outsb
lock
fwait
pop
mov
gs
xor
lea
sbbb
mov
sub
pop
mov
xor
std
loop
out
cltd
jg
lcall
jmp
in
daa
jbe
sbb
lret
mov
scas
cmc
mov
repz
gs
ljmp
push
xor
jbe
inc
and
mov
movsb
imul
pop
jmp
jmp
lret
inc
and
sub
cs
cmp
fld1
loope
mov
cwtl
out
aaa
mov
mov
xor
inc
xor
dec
dec
out
out
xor
mov
inc
nop
xchg
xchg
scas
xorl
xchg
lret
sbb
sbb
enter
in
ret
hlt
xchg
decl
idiv
loop
cld
call
pop
sahf
test
sbb
sahf
out
add
aad
lds
inc
pop
cmp
stc
gs
aad
sbb
xchg
imull
mov
mov
mov
std
jmp
lcall
or
loopne
daa
stos
push
dec
gs
jbe
xor
cltd
lods
out
fisubrl
mov
jns
pop
push
arpl
rolb
pop
fcmovnbe
in
pop
mov
adc
xor
sahf
out
sbb
ret
sub
mov
daa
xor
fld
mov
dec
xchg
sbb
lods
fwait
insb
or
mov
ljmp
push
shl
int3
lret
push
pop
and
sbb
push
jns
mov
mov
stc
pop
sbb
push
lock
push
lret
inc
push
inc
dec
mov
sbb
cld
mov
cli
leave
dec
sbb
lods
sbb
adc
shrl
jno
push
push
lds
push
push
dec
and
pop
push
lock
jno
ja
clc
out
es
lcall
in
fwait
pop
iret
push
ja
data16
or
fucomp
lcall
clc
and
push
pop
clc
sbb
mov
push
js
xor
rcrl
mov
sbb
mov
ret
out
fsubs
scas
mov
jmp
pop
hlt
and
mov
xorb
push
shl
xorb
jl
sub
scas
int
std
daa
ror
mov
enter
mov
xchg
cmpsl
adc
jbe
clc
out
pop
ret
pop
test
cmp
cmp
push
cmp
xor
cld
jmp
jne
sbb
sbb
das
dec
mov
int3
xor
aam
fisubs
cli
and
xchg
push
iret
loope
je
jp
adc
push
icebp
cmp
mov
sbb
adc
jp
xor
sbb
mov
leave
adc
mov
in
stos
inc
ret
aam
clc
lcall
inc
xchg
mov
xchg
les
push
aad
fcmovnbe
or
jle
sub
cmp
stos
sbb
std
or
pop
mov
mov
in
push
xchg
mov
je
jns
push
cmp
call
xchg
push
mov
mov
or
add
iret
xlat
inc
xchg
addr16
fwait
sbb
cwtl
add
icebp
jno
mov
sbb
sbb
jecxz
repz
sahf
popa
rol
in
inc
mov
xor
add
jne
or
mov
adc
push
cmpsl
and
lds
xchg
fistl
lock
mov
cs
jecxz
mov
fldcw
jo
hlt
mov
sbb
maxps
jb
fcoms
sub
iret
repnz
cmp
fdivl
outsl
dec
imul
out
mov
stos
mov
adc
call
mov
xor
daa
aas
fwait
addr16
push
jge
push
cmp
mov
cltd
pushf
rol
sub
andb
mov
fisubrl
push
push
and
aaa
rorb
add
push
orl
xchg
orl
pop
lea
je
shlb
addr16
push
mov
xor
faddp
rcll
ficompl
jnp,pt
aas
sbb
loopne
ret
fwait
add
mov
loop
pusha
rcrb
xor
enter
push
push
push
repnz
dec
test
mov
pop
mov
loope
pushf
lea
sbb
js
arpl
xchg
test
test
or
sahf
jecxz
bound
xchg
fcomps
jmp
rorb
rorl
or
ss
loop
jmp
test
cld
mov
push
scas
pop
fstpl
les
or
fwait
push
fcomps
push
inc
sarb
jge,pt
ret
adc
sbb
or
arpl
inc
outsl
into
push
pop
pop
mov
roll
aam
sti
adc
or
lds
dec
add
aam
jp
ror
in
jbe
jnp
nop
fwait
addr16
cmp
lahf
lock
clc
fmul
xor
hlt
inc
ljmp
adc
out
ljmp
pop
push
lock
loopne
or
inc
add
loopne
insb
and
sub
push
mov
test
fldl
stc
cmc
xor
adc
inc
sub
bound
int3
rclb
mov
sti
push
in
adc
icebp
pushf
ret
and
cli
lret
xor
enter
mov
xchg
pop
mov
mov
bound
push
pop
cmc
pop
inc
adc
inc
xchg
fildll
jnp
xorl
insl
pop
or
in
and
in
into
jmp
and
xlat
movsl
mov
loop
repz
fcompl
in
cwtl
std
dec
lcall
je
or
fnsave
daa
mov
outsl
pop
repz
dec
lock
xlat
inc
int3
popf
jns
stc
push
insl
cmc
mov
add
add
xor
add
lds
jmp
lcall
dec
cmc
data16
lea
fwait
cmp
test
call
fstpl
dec
add
inc
jmp
jle
pop
mov
pop
flds
mov
daa
mov
movsl
rol
pop
cmpsl
dec
pop
int3
mov
or
ret
push
subb
jnp
inc
adc
cmp
mov
dec
cld
out
lock
mov
push
or
data16
cmp
jb
xor
nop
xchg
xor
lret
loop
pop
stos
adc
xchg
dec
cmp
add
lods
ja
inc
inc
mov
enter
ss
push
mov
xchg
stos
pop
adc
fstpt
sbb
es
mov
add
out
das
xlat
sbb
push
pop
fs
dec
adc
cmc
and
gs
jae
lods
lods
ja
xchg
mov
loope
jmp
xor
xchg
adc
lds
movsl
rcr
cli
fcmovne
lcall
mov
inc
add
inc
movsb
add
aam
adc
div
js
shll
ja
mov
sub
fcomp
inc
call
fld
xor
testl
sti
or
xchg
shrb
outsb
sub
push
inc
dec
lock
adc
cmp
jae
lods
xor
inc
bound
or
or
cmc
sbbl
push
repz
sub
inc
stc
inc
pop
sub
scas
imul
and
or
das
outsl
jle
sbb
jmp
xchg
mov
adc
add
jmp
rolw
daa
inc
mov
mov
mov
dec
xchg
aam
enter
lea
jo
cwtl
test
aaa
mov
push
add
cs
sahf
movsb
xchg
mov
xchg
scas
call
cli
fsts
aaa
xchg
inc
inc
dec
cmp
fildl
stos
cmp
pop
dec
or
ljmp
loopne
xor
stos
fs
mov
cmp
inc
leave
xlat
jbe
mov
or
and
adc
and
in
mov
mov
jbe
ret
lods
push
jmp
arpl
repnz
cmp
cwtl
xor
lock
outsl
cld
sub
outsl
xor
push
jb
sub
cmp
in
out
inc
loope
mov
test
adc
cmp
push
dec
cmp
push
mov
add
jbe
inc
jno
push
or
jnp
xchg
imul
cmc
jecxz
and
jl
jnp
bound
dec
jno
ja
xor
sbb
mov
cmp
jae
clc
sub
mov
jae
pop
xor
jl
jmp
loopne
ss
sbb
or
subb
jae
int3
fs
or
fs
push
fstl
ret
mov
cmpsl
mov
fsub
jge
outsl
and
icebp
es
movsb
inc
addl
cmp
imul
mov
stos
arpl
jmp
orb
test
and
sbb
adc
ret
ljmp
loop
movsb
xchg
sbb
ret
xor
mov
in
mov
popf
shlb
loop
imul
repz
mov
and
mov
test
push
pop
jns
jmp
aad
mov
movsb
adc
addr16
frstor
pushl
aam
pop
mov
mov
add
je
push
and
lods
push
pop
mov
test
mov
inc
dec
cmpsl
fwait
dec
sbb
dec
jno
sub
sbb
and
dec
test
jmp
and
sahf
lock
icebp
sbb
cmpsb
ficompl
push
cli
cmc
xor
in
or
pushf
pop
into
out
fsubrl
jns
cmc
lss
push
mov
popf
adc
inc
sbb
out
das
adc
push
xor
nop
xchg
lock
rorb
fcoms
push
inc
pmulhuw
dec
or
rorb
or
fs
cmp
mov
jno
jne
arpl
xor
aas
repnz
push
outsb
out
push
push
and
mov
outsb
and
lret
sub
fldt
aaa
imul
fdivr
pop
jae
mov
push
daa
pop
push
pop
push
dec
or
mov
inc
or
xor
shlb
sub
lods
mov
sub
adc
cmp
call
adc
into
xchg
jae
mov
jb
sbb
jnp
gs
xor
test
repnz
int
out
push
outsb
outsb
sub
mov
sbb
popa
rorl
lock
lods
ret
arpl
loope
icebp
mov
fsubl
call
adc
inc
mov
mov
mov
fsubrl
xor
cli
sahf
xor
cmp
scas
test
jle
mov
adc
mov
mov
push
test
pop
dec
mov
aas
fdivl
das
mov
inc
clc
add
mov
cmp
ja
cwtl
ja
test
push
jae
into
dec
cmc
push
xchg
and
mov
push
adc
push
mov
movl
adc
mov
and
aas
ret
bound
enter
iret
push
mov
mov
xchg
adc
std
shrb
sbb
xchg
sub
mov
imul
lock
jbe
cmp
push
and
adc
mov
std
negb
pop
dec
mov
leave
jns
xchg
popa
push
lahf
adc
std
fwait
dec
xor
sub
repnz
mov
xchg
int3
roll
cmpsb
mov
adc
fistpl
xchg
enter
nop
fdivl
adc
insb
mov
pop
lods
enter
test
das
pop
loop
mov
lcall
lcall
mull
ljmp
xchg
mov
daa
jae
les
add
clc
add
and
dec
sbbl
sub
or
movsb
aam
fstp
ret
aam
mov
push
mov
cwtl
gs
mov
inc
xchg
inc
mov
dec
push
into
adc
pop
dec
lcall
insl
add
ror
pop
add
fistpl
jl
dec
jne
insb
fnstenv
fisttps
pushw
jns
mov
out
out
add
jecxz
sbb
inc
or
add
lods
xor
inc
mov
mov
inc
pop
mov
frstor
movsb
mov
cmp
ffreep
xchg
addr16
in
push
inc
push
adc
scas
jmp
mov
xchg
inc
fsubrs
pop
mov
inc
add
outsl
push
push
cltd
les
sbb
mov
mov
cmp
out
daa
outsl
leave
repz
jo
mov
pop
dec
mov
mov
xlat
scas
ror
sbb
sub
push
adc
inc
pop
dec
and
xchg
aam
push
cwtl
mov
adc
rcrb
dec
xchg
mov
xor
nop
ljmp
popl
xchg
jg
lret
inc
or
cs
shrl
fsubs
mov
jp
sub
nop
imul
mov
into
aad
inc
mov
ds
adc
jb
cltd
sti
cltd
ja
rolb
lds
jg
clc
int
jg
sbb
mov
jp
add
fsubs
insb
js
nop
leave
repnz
ret
xor
loopne
inc
popa
lcall
shll
pop
mov
sub
mov
push
mov
and
sub
mov
data16
fcoms
test
sbb
push
sub
pop
or
xor
in
daa
cwtl
in
adc
jb
mov
lods
pop
mov
fdivrl
cmpsb
scas
or
sbb
cmp
push
inc
inc
dec
or
clc
jae
push
mov
fs
add
mov
orb
test
pop
sbb
mov
jp
out
sub
pop
dec
outsl
data16
loope
int3
and
in
mov
add
push
mov
jbe
xchg
ljmp
push
cltd
repz
fstps
sahf
pop
fsubs
shrb
xor
pop
dec
dec
test
fidivrl
xchg
add
mov
out
cmovp
sbb
mov
sahf
mov
aaa
test
sahf
sub
ret
and
jg
sbb
adc
push
cwtl
movsb
mov
jne
mov
daa
bound
push
int3
dec
xor
aaa
add
outsl
pop
nop
push
or
aaa
pusha
add
add
mov
addb
sub
add
int
leave
in
mov
popa
insl
xacquire
nop
out
popl
dec
movsl
sbb
in
andl
lcall
pusha
jp
inc
in
mov
adc
iret
xor
fmull
cs
hlt
aas
inc
stos
xor
add
dec
in
xchg
std
inc
adc
adc
push
cli
adc
or
dec
mull
insl
outsb
cmpl
pushf
es
mov
xchg
shrl
popf
push
in
addr16
movsb
xor
fildll
dec
fsubl
push
cmc
or
fcomps
outsb
int
sbb
fwait
outsl
add
mov
cmpsl
call
lods
adc
test
inc
xchg
sbb
xor
mov
fnsave
cld
sbb
mov
push
jnp
cmpb
fwait
push
or
ljmp
arpl
out
add
hlt
pop
pop
pop
inc
out
out
shld
pop
je
inc
xlat
test
xor
pop
andb
and
sti
mov
rclb
push
cmp
xor
cmc
daa
ficomps
rcrb
nop
cmpsl
leave
rcrb
inc
xchg
cmp
sbb
xlat
stc
pusha
inc
lds
test
sti
iret
ret
aam
dec
decb
fists
shrl
jl
adcl
push
mov
in
out
ret
cmp
mov
aas
movl
jge
addl
rclb
mov
jae
inc
popf
cli
mov
fsubrp
push
push
inc
data16
cmp
cltd
adc
jo
insl
pop
inc
mov
scas
sub
int
mov
cmp
movsl
lds
mov
push
dec
popf
mov
fsubs
inc
iret
cs
pop
and
sbb
decl
push
xchg
cmpsb
faddl
ja
mov
pop
push
ljmp
jno
push
xchg
ret
sub
mov
aad
rcll
out
repz
cmp
and
loope
out
lds
inc
add
xor
jns
imul
lds
in
pop
pop
push
cmpsb
inc
xor
push
out
pop
aam
or
pushl
vcvttpd2dqy
pop
iret
push
push
int
sub
add
dec
test
cmp
idivl
mov
lcall
cmp
popf
mov
clc
pminub
or
sub
xor
cmpsb
lret
fnsave
mov
adc
xor
mov
loope
arpl
add
fbld
lret
mov
mov
jmp
sbb
data16
ja
sub
mulb
jmp
pop
xlat
mov
call
fbstp
xchg
cli
imul
nop
adc
shlb
sbb
mov
cs
and
into
lret
clc
mov
sbbl
std
das
aas
loopne
jecxz
fbld
nop
lods
nop
mov
adc
pop
insl
push
mov
int
dec
adc
add
mov
and
insl
cltd
push
jge
int3
and
lods
out
daa
lcall
jns
xchg
cmpsl
push
sbbb
addb
adc
in
test
lea
int
repz
mov
es
jge
jns
push
arpl
mov
dec
inc
xlat
pop
add
xchg
cmovs
jo
sub
roll
test
sbb
sub
leave
aas
mov
jno
cmp
imul
aad
push
push
int
andl
and
xchg
xor
cli
or
pop
lahf
iret
lods
jne
stc
mov
jb
mov
jg
xor
mov
call
aad
aad
mov
out
ja
mov
sbb
jg
cs
cltd
int3
das
in
imul
int3
mov
pop
or
insl
and
cmp
and
sub
loop
sbb
or
push
mov
dec
push
xchg
inc
xchg
jns
mov
leave
add
icebp
adc
jb
aaa
jl
fbstp
mov
inc
inc
add
pop
xlat
mov
imul
pop
idivl
pop
jne
ja
call
out
cli
mov
jp
in
dec
cli
dec
mov
in
call
repz
test
push
rcrb
jl
cmp
out
xor
aam
inc
inc
cmp
jb
sub
lahf
mov
dec
xchg
sarl
cmp
daa
dec
in
xor
cmp
ljmp
test
std
dec
arpl
lods
xor
cmpsb
and
pop
mov
jmp
sahf
and
pop
in
lcall
jl
adc
test
add
and
adc
push
inc
push
push
aam
flds
fistpll
push
adc
data16
into
sbb
fsubs
divl
mov
fldenv
movsb
call
mov
movsb
jns
jmp
pop
stc
push
rcll
mov
add
pushf
mov
jne
negb
xchg
ss
inc
insl
inc
cmp
ret
pop
js
jo
in
dec
addr16
mov
lret
jbe
jle
and
mov
sbb
mov
divl
xchg
inc
xor
sub
pop
notb
pop
out
test
xchg
shrl
popa
mov
pop
xchg
mov
mov
movl
jmp
outsb
enter
xchg
movb
lret
xchg
subb
stc
mov
stos
divl
xrelease
lea
sahf
lods
or
jmp
insb
js
jmp
int
inc
jp
stos
pushf
mov
fcmovne
xchg
adc
xchg
jl
mov
stos
outsb
ss
pop
pop
inc
push
add
cmp
arpl
adc
fistl
pop
roll
lods
mov
cmpsb
mov
inc
jmp
in
adc
sub
dec
push
mov
test
arpl
push
rep
aaa
add
fnstcw
cmovl
inc
shlb
inc
sbb
pop
adc
mov
aaa
mov
loope
push
sub
loop
fiaddl
sub
lea
into
push
repz
adc
fldcw
mov
or
daa
xchg
mov
cmpsl
in
xor
mov
push
mov
outsb
inc
out
lock
adc
lret
mov
adc
jl
pop
xchg
icebp
mov
cld
das
adc
xor
or
cwtl
or
jb
sub
icebp
lods
cmp
pop
sub
stos
in
cli
jecxz
add
jne
dec
dec
inc
jge
in
mov
dec
call
inc
mov
jbe
mov
push
repnz
add
mov
xchg
jge
mov
cmpb
or
dec
jg
testb
inc
fcom
cmp
sbb
shlb
pop
in
fcoml
shr
in
ds
xchg
jle
jl
rcll
cli
pop
pop
insl
int
repz
xorb
push
mov
clc
dec
adc
sub
stos
fcmovbe
jecxz
sahf
sbb
sarl
or
jnp
hlt
std
stc
push
mov
mov
mov
dec
add
rcll
fisubl
jg
mov
lret
push
nop
adc
mov
mov
dec
sub
or
adc
mov
mov
xchg
cld
pop
xor
mov
stc
lcall
and
insb
enter
xor
popf
pop
daa
in
dec
push
mov
test
out
mov
fwait
out
or
sub
mov
mov
sti
adc
hlt
jl
mov
xor
in
leave
cmc
cli
inc
sbb
rcrb
push
dec
fwait
inc
in
loopne
dec
sahf
jmp
cs
sub
dec
je
les
inc
mov
mov
mov
ret
mov
outsl
mov
in
mov
addl
push
sbb
out
push
mov
mov
sub
bound
mov
mov
pop
xlat
mov
lods
xchg
dec
rorb
pop
xchg
mov
ret
adc
or
int
jp
mov
cltd
psraw
push
fdivr
xor
sbbb
jnp
je
dec
push
ret
add
add
fists
ljmp
bound
jmp
xchg
std
addr16
xchg
dec
ret
mov
inc
mulb
cmp
movsb
std
mov
js
and
mov
mov
pop
mov
inc
stc
push
inc
imul
enter
sahf
mov
add
pop
mov
and
loopne
rorl
xchg
adc
inc
xor
mov
repnz
lret
add
daa
mov
repz
ja
in
add
push
int3
mov
push
inc
mov
mov
dec
popa
sub
jmp
es
mov
popf
add
inc
pop
mov
cmpsl
and
pushf
repz
cld
push
sbb
or
add
movsb
jl
in
cs
mov
pusha
sub
movsb
push
fildll
insl
repnz
add
jbe
jg
andl
push
push
mov
in
mov
mov
shll
pop
xchg
std
sbb
fiaddl
ret
pop
push
je
ret
xchg
mov
xor
or
jbe
push
js
or
inc
push
fisttpll
repz
out
or
loopne
push
cmp
lahf
mov
call
xchg
outsl
adc
scas
xchg
lds
and
outsb
dec
jae
shl
ret
pop
mov
jno
push
lock
mov
fcoms
hlt
inc
les
cld
dec
dec
popa
push
xor
es
mov
cmp
push
push
mov
loop
fildl
fldt
pop
xor
push
aas
sub
lods
lock
imul
dec
loopne
je
sub
dec
dec
sbb
out
loopne
inc
add
sti
insl
and
repz
les
out
adc
jmp
mov
sbb
outsl
sbb
mov
inc
stos
adc
jmp
stos
xchg
das
outsb
lods
sbb
aaa
or
fs
insb
nop
clc
xlat
ds
out
mov
dec
ljmp
add
jmp
sub
mov
mov
rolb
push
xor
sbb
hlt
cld
fwait
pop
dec
fs
stos
sub
das
dec
jbe
sub
bound
cmp
sub
aad
jns
rcrl
aaa
sbb
inc
aad
in
xchg
cmp
repnz
test
cwtl
adc
movsb
push
sarb
lcall
mov
fwait
stos
nop
jno
xor
and
pop
fidivs
dec
push
lds
out
add
cmpsl
sbb
jge
mov
movsb
dec
push
andl
lds
mov
inc
outsl
jnp
rorb
divb
ficomps
aad
ds
mov
inc
enter
xor
lds
adc
cmpb
push
pop
arpl
adc
hlt
xchg
jl
call
mov
repnz
push
hlt
mov
daa
outsb
insb
inc
xor
shr
fildll
mov
xchg
ja
adc
ljmp
xor
shll
sub
popf
inc
pop
imul
cltd
bound
data16
data16
xor
xor
push
pop
pop
bound
outsl
je
xchg
in
imul
test
movsl
xor
dec
es
and
lahf
inc
xchg
les
ret
adc
mov
jmp
inc
sbb
inc
sti
rcl
xchg
mov
jae
out
repnz
pop
pop
fdivrl
pop
or
inc
gs
aam
incb
mov
int
inc
xor
maxps
adc
cmpsb
fwait
cmc
pop
insb
mov
push
xor
lds
push
sub
cmp
mov
dec
mov
dec
xchg
cmc
mov
repz
int
fnstsw
daa
fmulp
pop
pop
mov
daa
jb
jle
in
xchg
repnz
sarb
aas
aad
xchg
push
in
adc
jle
mov
imul
mov
mov
or
int3
push
insb
xor
xchg
ret
jns
aad
scas
insl
xorb
and
add
sbb
jmp
sarl
pop
jg
mov
add
cmp
dec
jae
test
lret
imul
outsb
testl
popf
mov
outsl
push
sbb
mov
pushf
mov
mov
mov
push
call
lds
hlt
cmpsb
sub
clc
pop
das
fimuls
stc
subl
push
jne
into
shrb
push
rcr
stos
inc
xlat
push
adc
push
and
popf
lods
out
sti
mov
incl
mov
iret
shll
mov
pop
inc
js
xchg
std
dec
or
pop
sbb
pop
inc
xor
imul
dec
xor
test
jl
scas
cmpsb
mov
lret
scas
out
ds
dec
mov
pop
pop
add
stos
and
pop
and
mov
sbb
test
aam
scas
adc
cs
dec
bound
sub
cmp
insl
push
pop
out
xor
cmp
dec
adc
jne
nop
push
mov
insl
popa
pusha
xlat
inc
push
mov
push
or
repnz
jb
mov
jb
cltd
push
xor
test
aam
xor
cmpsb
dec
sbb
sbb
inc
rcr
adcb
aas
js
push
jae
add
push
push
mov
sub
bound
fldt
jne
cmp
cwtl
loope
mov
test
mov
pop
jg
ds
sti
insl
xor
fdivs
mov
dec
popf
dec
mov
sbb
mov
dec
xchg
mov
les
sarb
scas
sbb
mov
scas
lods
push
jmp
sbb
ds
data16
sbbl
lret
add
cltd
and
gs
xchg
push
fildl
lods
into
push
sub
mov
or
push
scas
lret
adc
sbb
jecxz
js
lret
mov
cltd
call
dec
or
push
dec
jmp
inc
mov
data16
and
loope
and
mov
sub
pop
jnp
push
push
rcl
cmpsl
mov
bound
sbb
adc
sub
push
nop
dec
xchg
xchg
xchg
fwait
cmp
xor
sub
cltd
leave
cmpsl
pop
fldcw
icebp
cs
add
ds
mov
cmovl
jmp
aam
mov
insb
jmp
push
sbb
push
stc
fildl
into
or
subl
add
jl
jge
or
clc
adc
push
inc
lret
aaa
xchg
cmc
pop
enter
jno
xchg
jb
lods
pop
cwtl
jbe
cs
adc
jl
rorl
pop
test
dec
clc
jne
pop
push
ljmp
sbb
rcl
rorb
fisttpll
loopne
mov
mov
leave
leave
pop
and
sbb
push
dec
daa
insb
pop
dec
mov
out
roll
cmp
add
push
mov
loop
ret
pop
cmp
inc
dec
jne
cld
test
rcr
lret
iret
sbb
mov
cmpsl
loope
in
cli
push
xor
mov
jbe
lahf
shrb
cmc
cs
jle
inc
adc
lods
or
cmp
pop
cmpsl
jbe
mov
popa
sub
int3
sub
add
nop
lock
enter
cmp
rcrl
cmpsb
or
les
jae
add
pop
inc
je
cwtl
cltd
or
mov
outsb
or
adc
shlb
dec
lret
xchg
ret
das
sub
in
out
pop
pop
lods
rcll
enter
insb
gs
or
stc
mull
ret
mov
cmp
pop
add
pushf
ret
jg
gs
int
adc
sub
jne
imul
push
sbb
inc
pop
jecxz
jnp
jns
pop
cmpsb
pop
adc
jbe
data16
inc
mov
adc
and
jecxz
mov
xchg
test
push
mov
cmp
mov
into
iret
jg
jno
jb
pop
int
sbb
jg
xchg
js
mov
mov
repnz
inc
jmp
dec
bnd
pushf
dec
sti
cs
mov
pop
inc
or
xor
push
sbb
jno
cli
call
add
fadd
add
add
in
test
cmc
pop
ror
nop
xchg
cli
mov
loop
jbe
call
nop
add
mov
xor
xchg
imul
push
lds
mov
pop
imul
sub
leave
sbb
rorl
sub
stc
jmp
pop
stos
pop
inc
mov
or
jmp
pushf
pop
arpl
jle
scas
shrb
imull
pop
xor
test
mov
inc
loop
add
aad
ljmp
mov
adc
push
adc
xchg
add
out
sbb
hlt
dec
loop
sbb
fisubrs
std
addl
rcrb
and
movsl
and
sub
mov
xchg
mov
sbb
repnz
xlat
pushl
xlat
sbb
xchg
pop
bound
rorl
clc
dec
cld
jp
cmp
mov
xor
lcall
aaa
pusha
sbb
xor
aad
inc
push
pop
lock
notl
push
xchg
mov
pop
lcall
ret
out
addr16
push
jge
inc
pop
jne
lods
lods
ret
mov
in
pop
pop
or
and
jbe
or
xlat
dec
cmp
mov
fisubrl
jno
daa
insl
ret
movsb
cmp
stos
mov
into
mov
add
mov
repz
mov
mov
hlt
ljmp
arpl
jp
fdivr
in
or
icebp
adc
mov
aam
jno
dec
cltd
clc
popf
xchg
xor
int3
test
jge
push
mov
sbb
jge
dec
fistl
iret
push
nop
lret
ljmp
push
mov
sbb
rcrl
aad
mov
stc
sbb
mov
and
cmpsb
nop
add
push
push
mov
movsl
lahf
jg
jmp
mov
test
sahf
add
adc
bound
lds
push
outsl
lds
pop
and
out
mov
dec
or
sbb
in
ficomps
pop
mov
cmp
movsb
add
xor
jmp
pop
inc
push
pop
out
xchg
imul
mov
popa
push
dec
sbb
imul
push
js
mov
mov
cmpsb
inc
cwtl
jmp
lcall
scas
loope
je
insb
popl
dec
out
and
adc
jns
in
stos
aam
push
fisubrs
int3
shr
sarb
fs
xchg
lods
gs
les
adc
adc
inc
or
lret
add
dec
iret
cld
enter
insl
cmpsb
lods
adc
popa
jae
sbb
jge
lahf
pop
in
push
ljmp
jnp
ret
push
cmp
mov
movsl
out
imul
bound
imul
out
lock
out
divb
cmpsb
cmp
insl
jbe
or
popa
xchg
push
jae
pop
ud0
mov
in
sahf
pop
inc
jmp
push
int
scas
in
mov
cmp
and
out
in
pop
or
sub
in
gs
outsb
cmp
jmp
mov
cli
imul
xor
inc
decl
or
in
pop
mov
lcall
dec
mov
or
sub
fdivrs
out
jle
lds
xor
test
pop
ret
inc
cmc
cmp
mov
xchg
push
or
test
xchg
aad
pop
sbb
leave
mov
addb
mov
clc
xchg
inc
inc
add
fcompl
push
insl
icebp
scas
mov
fcompl
mov
adc
fsubrl
out
jbe
mov
mov
adc
icebp
jae
mov
adc
lods
cmp
mov
std
fs
xchg
pop
fs
push
test
mov
inc
gs
cwtl
int
xchg
jle
adc
and
push
cli
notl
and
inc
cmc
call
movsl
out
data16
pop
xchg
stos
or
arpl
subl
test
sub
shll
iret
pop
repz
lret
punpcklwd
stos
popl
shlb
inc
insl
or
add
add
mov
pop
adc
sub
sub
cmp
dec
fnstenv
or
scas
jb
movsb
mov
mov
nop
jmp
aaa
add
rcrb
pop
xchg
movsl
dec
in
jns
pusha
je
xor
add
mov
sbb
mov
setno
jmp
inc
mov
and
inc
inc
mov
lcall
mov
sub
movl
and
xlat
test
cwtl
pusha
cltd
push
mov
and
lods
fimuls
aam
idivb
adc
jg
call
mov
add
mov
jb
fstpl
inc
arpl
add
mov
sbb
imul
imull
sub
pusha
cmp
sahf
sbb
movsb
ds
cmpsl
mov
mov
lahf
cmpsl
jge
cld
enter
stc
or
inc
aam
adc
ja
call
mov
ljmp
mov
fisubrs
test
and
cwtl
lods
loopne
fsub
imul
lahf
and
std
xchg
jne
les
outsl
in
xchg
mov
and
enter
icebp
sti
popf
mov
and
test
push
adc
mov
gs
mov
push
rorl
ficompl
leave
aas
sbb
jge
cmp
std
mov
inc
sub
pushf
ljmp
inc
and
mov
mov
das
neg
loop
dec
jle
sbb
jae
loope
inc
jae
hlt
adc
mov
mulb
stos
popa
adc
stos
dec
testb
sub
mov
inc
sub
cltd
ret
cmp
insb
popa
xchg
enter
cmp
jmp
adc
in
mov
mov
add
popa
adc
pusha
sub
hlt
jno
or
adc
outsb
mov
pusha
cmp
imul
int
sarl
insl
jmp
subl
test
mov
push
adc
xchg
jl
sbb
xor
mov
ss
movl
fsub
subl
and
add
dec
lret
jno
fs
add
mov
jp
mov
push
push
mov
lcall
sub
sbbl
jmp
shll
ljmp
test
add
lods
inc
adc
jb
cmp
ja
in
out
pop
xchg
and
es
sbbl
cltd
sub
cwtl
mov
xchg
out
outsl
imull
decb
lcall
inc
in
dec
jo
pop
inc
ss
mov
rcr
testb
lcall
pop
lret
jno
xor
cmp
mov
xchg
jnp
test
and
pop
and
inc
vmread
insl
adc
jae
sub
xchg
fdivrl
sub
cli
movsl
hlt
push
and
mov
sbb
xchg
loopne
rorl
or
adcb
aas
pop
and
adc
adc
adc
je
pop
sahf
and
inc
out
and
mov
in
imul
mov
test
or
sub
mov
outsb
cld
mov
test
sbb
xor
stos
pop
ret
adc
int3
jne
insb
rsm
inc
jnp
adc
inc
cli
and
and
scas
xor
push
ret
cmp
xchg
mov
mov
mov
pop
mov
add
fnstcw
sbb
jmp
push
pop
popl
ret
cmc
je
jnp
xchg
in
mov
mov
inc
leave
push
pop
fsubrs
lods
psrad
and
setno
ja
rolb
mov
lcall
and
dec
jmp
pop
dec
mov
out
bound
fnstenv
xchg
xchg
lahf
jmp
popa
jb
jae
inc
loopne
fsub
inc
data16
push
addl
mov
sub
and
cmp
das
rorl
icebp
rcrl
int3
pop
adcb
pop
scas
push
sbb
inc
xchg
mov
fstps
outsb
sub
js
fcmovb
movsl
int
dec
push
fstpt
cmp
cmp
scas
fmuls
jp
inc
adc
ret
ss
std
jb
arpl
adc
push
mov
mov
mov
ret
fsubrs
cmpb
pop
inc
insl
or
cmp
add
mov
xlat
ret
outsb
sar
cmpsl
cmp
sbb
aaa
add
sub
int3
in
mov
arpl
lcall
mov
test
ret
or
cmpb
rorb
int3
or
arpl
cmp
fmull
nop
inc
or
inc
cwtl
mov
testb
icebp
mov
scas
mov
repz
sti
fisttps
cmp
jo
push
fcmovne
ja
lahf
sbb
mov
sbb
push
popa
in
mov
mov
xchg
lret
push
mov
lock
outsb
test
inc
inc
faddl
pusha
icebp
inc
cmp
aaa
cmpsl
xchg
pop
stos
pushf
stc
mov
xorb
jle
xor
and
mov
sarl
push
fldl2e
mov
mov
jns
push
into
jbe
movsl
cwtl
jnp
test
inc
out
push
idivl
mov
lock
shlb
xor
sahf
cmp
inc
pop
and
fnstcw
rolb
pop
mov
adc
mov
mov
mov
add
enter
adc
out
fmuls
outsb
cmp
roll
inc
sbb
inc
cmc
pop
stos
pop
add
dec
insb
or
push
xchg
cmpsl
cltd
in
in
mov
or
xor
jbe
lods
pop
mov
jnp
dec
in
cmpsl
push
xor
js
pusha
and
xor
push
pushf
data16
ss
lods
jns
mov
lock
push
and
or
add
jmp
mov
jl
cmc
mov
out
mov
jg
cld
rep
daa
sbb
dec
test
das
lahf
popf
sub
int
mov
sbb
mov
daa
cs
fidivl
mov
out
push
cmp
leavew
cmpsl
xor
lods
mov
or
dec
arpl
or
sub
cmc
pop
or
addr16
xor
insb
ds
aas
or
mov
and
out
xor
inc
or
or
ret
ror
shll
lods
sbb
mov
and
out
mov
inc
sub
mov
push
mov
fsub
pop
jp
pop
xchg
push
jns
movsb
movsl
insl
dec
jg
es
inc
dec
loope
sub
mov
jns
sbb
push
jmp
outsl
lahf
aaa
xlat
mov
cwtl
and
fwait
ret
push
mov
mov
mov
loope
shlb
andb
or
es
inc
testl
pop
pop
xor
inc
inc
pop
xor
push
daa
mov
sbb
pop
or
mul
adc
hlt
mov
jnp
mov
xchg
pop
cmp
hlt
mov
add
sti
test
mul
in
mov
imul
push
adc
call
stos
sbb
rcrb
negb
xchg
push
xlat
das
out
arpl
aaa
add
pop
repnz
push
lock
lret
mov
pop
jae
inc
mov
xchg
arpl
push
or
bound
fists
jecxz
inc
add
mov
into
fmul
or
xchg
mov
xchg
into
sahf
mov
int3
and
andb
aas
je
xchg
stos
jl
push
loopne
rcll
inc
cltd
mov
popf
xchg
push
push
push
xor
or
add
fbld
mov
xchg
call
adc
pop
cmp
test
aaa
test
cs
repz
inc
aaa
addr16
push
stos
lret
clc
mov
ljmp
das
outsl
push
xchg
mov
or
enter
sarl
and
icebp
pop
adc
xor
push
pusha
mov
stc
push
xchg
jmp
outsl
jle
mov
lahf
adc
js
lea
push
in
inc
mov
sub
xor
mov
pop
fstpt
mov
je
outsl
xor
mov
dec
clc
je
jmp
fwait
jg
mov
xchg
outsb
mov
stos
lds
adc
pop
lahf
add
test
cmp
movsl
mov
mov
and
shrb
push
fiadds
out
cmp
out
inc
pop
sub
popa
pop
add
inc
out
leave
add
dec
into
test
aam
or
cmpsl
push
sahf
cmp
int3
addl
in
inc
pop
jle
test
push
mov
cmc
test
push
and
icebp
loopne
aad
add
cwtl
cmc
jb
xor
loopne
jmp
xchg
xor
jb
mov
int3
sub
jo
loope
in
faddl
mov
jnp
xchg
and
jo
push
sub
in
aam
sub
add
or
jne
cs
adc
popf
jge
sub
cmp
and
dec
jae
dec
mov
mov
aas
stc
push
mov
repnz
aad
aam
add
push
in
lret
sub
push
sbb
mulb
mov
jno
cs
mov
andb
mov
mov
dec
push
fistpl
nop
lret
xlat
in
push
lret
sub
ret
push
test
push
lds
jl
xchg
sbb
test
faddp
sbb
test
repz
mov
add
mov
jb
icebp
push
mov
inc
into
sbb
ret
fsubrl
sub
popa
sarb
push
cmc
sub
aad
jl
inc
mov
sub
decb
pop
pop
imul
and
es
jbe
jne
ret
dec
pop
out
sbb
sbb
into
dec
pop
add
mov
fstpl
js
insb
mov
or
sahf
gs
out
sahf
pop
dec
pop
push
xchg
cmp
xchg
iret
cmp
out
aam
clc
test
stos
xor
pop
lahf
fdivl
mov
dec
xor
int
fiaddl
int
int
popf
pop
inc
cmp
inc
sti
jae
mov
mov
loopne
mov
jmp
push
in
push
sbbl
fisubrs
add
push
stos
and
or
xor
movsl
sahf
adcb
out
push
movsb
inc
sub
pop
dec
or
xchg
lds
inc
ss
jp
jg
fs
lcall
xlat
pop
push
push
add
lods
pop
rcrl
push
add
gs
ret
aam
jo
cmp
mov
push
inc
shll
xlat
add
xchg
xlat
push
cmp
std
fsts
pusha
xor
fdivl
int
addr16
scas
repz
rorb
imul
fisttps
pop
fsubrs
cltd
sub
out
pop
loopne
decb
jne
push
and
test
hlt
mov
mov
cmc
mov
out
test
jnp
and
inc
pusha
cmp
jl
js
fbstp
xor
mov
xchg
into
fldcw
push
xchg
repz
mov
mov
pushf
add
jo
mov
loope
jl
or
scas
pop
popf
or
or
test
dec
or
ficomps
xchg
mov
sbb
and
add
out
lea
iret
stos
cwtl
fsubrl
push
insl
add
jne
std
adc
test
enter
std
jb
rorl
jmp
sbb
dec
enter
dec
flds
inc
ljmp
and
cmp
loopne
test
mov
jbe
mov
mov
imul
int3
sbb
pop
xchg
jae
cltd
push
inc
pop
testb
push
mull
out
movl
jne
enter
cmc
mov
iret
mov
rcl
inc
or
in
js
mov
or
icebp
or
jp
cltd
pop
cld
inc
shlb
mov
xchg
xchg
shl
mov
sub
loopne
jae
dec
mov
leave
ret
or
pop
jns
leave
sub
add
inc
roll
push
jnp
pop
popf
loope
push
cmpsb
or
test
ret
std
sti
dec
or
mov
and
or
mov
add
stc
psrlw
xchg
inc
adc
and
push
mov
pop
mov
add
sub
and
cmpsl
dec
and
xchg
pop
add
fisubrl
sarb
movsb
dec
movsb
mov
jp
fildl
outsb
push
inc
popa
pop
xor
xchg
rol
jg
add
stc
jb
mov
leave
aam
jl
insl
stos
leave
sbb
int3
fidivrs
movsb
cmp
cld
pop
incb
pop
pop
je
mov
leave
hlt
lods
xor
out
ljmp
into
roll
lret
fcomps
cmpsb
cltd
clc
mov
and
pop
adc
enter
outsl
sbb
imul
daa
cmp
repz
or
frstor
lcall
pop
ds
aas
push
out
push
push
into
decl
dec
jne
xchg
pop
xor
js
inc
cwtl
and
fisubl
in
cld
xchg
repz
aam
movsb
sahf
inc
mov
push
es
cmc
scas
gs
sub
cmc
mov
je
shrb
leave
fcmovnb
or
pushf
test
sub
xchg
adc
pop
add
cmp
xor
or
ja
je
sub
jno
dec
sub
fisubl
popf
je
sbb
pop
cmp
das
call
push
mov
icebp
jg
pop
ja
in
lahf
scas
mov
ljmp
xor
add
push
test
and
dec
stos
dec
cmp
jmp
jl
sahf
push
xor
mov
and
jb
pop
negl
call
scas
xorb
ds
ret
xor
into
xchg
cmp
imul
mov
xor
and
or
sbb
clc
sub
dec
scas
fmuls
push
xchg
les
jge
cli
sub
adc
jo
jno
and
aad
pop
add
addr16
jne
scas
imul
adc
pop
push
incb
not
mov
and
pusha
ret
icebp
icebp
pop
jnp
mov
dec
andb
test
rcl
je
jg
les
mov
xor
call
nop
mov
jne
xor
xor
sbb
or
outsb
mov
xchg
and
adcl
out
dec
jmp
or
dec
ljmp
xor
lds
and
call
pop
xlat
movsb
jbe
sbb
pop
movl
fimuls
xor
xchg
adc
in
scas
xchg
push
sti
cmp
push
stos
adc
mov
mov
or
and
pop
enter
jo
pusha
sahf
and
fmuls
cmc
push
xchg
inc
add
das
cmp
jno
mov
xor
addl
push
inc
and
and
scas
jl
adc
stos
rcll
jbe
nop
jl
xor
push
push
sbb
je
push
add
dec
into
push
xchg
mov
ss
or
jbe
iret
and
lea
cmp
dec
adc
mov
movsb
mov
mov
test
sbb
loope
ljmp
out
push
les
mov
or
in
xlat
je
rcr
add
add
test
cmp
sub
mov
xchg
test
test
negb
and
ror
mov
inc
mov
jl
mov
dec
xor
or
push
fmull
lcall
cmp
sub
xor
jge
mov
sub
mov
mov
push
aaa
inc
cmp
xor
loop
push
popf
mov
pop
in
pop
call
js
insl
idivb
pop
add
stos
mov
fs
mov
lret
xchg
dec
fidivrl
pop
imul
fstl
inc
mov
test
jl
jg
sub
test
xor
ret
add
xor
add
or
jl
inc
imul
xlat
lret
sub
pop
fdiv
sbb
mov
iret
dec
cmpsb
mov
lods
fstpt
push
pop
orb
into
movsb
adc
clc
orb
loope
push
cmp
sahf
xchg
and
and
push
in
mul
in
and
sub
inc
int3
lcall
shll
addb
cmpsb
inc
stc
xchg
ljmp
inc
sarl
xchg
dec
andl
sahf
shrl
out
inc
or
xchg
sbb
sub
ror
or
test
cmp
lret
xchg
or
in
mov
mov
add
xchg
testl
jp
add
pop
movsl
aas
iret
ss
cmpsl
pop
xor
hlt
mov
rorb
repz
adc
or
enter
jae
icebp
jmp
mov
sub
repz
icebp
pop
mov
push
pusha
cmp
xchg
adc
inc
into
push
sbb
insb
shll
inc
test
mov
xchg
add
mov
push
mov
fdivr
sti
sbb
xchg
mov
mov
push
insl
std
cmp
pop
movups
call
push
es
mov
cmp
ret
lret
xor
jns
js
pushf
jecxz
xor
ficomps
ja
pop
dec
repz
in
ret
sbb
push
sti
jns
jmp
iret
push
leave
fsub
pop
jb
mov
hlt
std
jmp
lods
jb
pop
movsl
push
ficoms
push
cmp
push
stos
jno
fisttpl
sbb
jge
cvtdq2ps
loope
sub
fnstenv
add
addr16
pop
push
push
sbb
or
jae
pushf
pop
inc
sbb
mov
push
ret
sbb
imul
cmp
and
repz
scas
pop
cmpsb
out
mov
rorb
loop
sysexit
decb
arpl
and
movsb
lcall
imul
jb
lods
push
fimull
daa
pop
cmpsl
mov
mov
mov
movsb
lods
es
or
movsb
mov
hlt
cmpsl
push
adc
lcall
push
mov
ds
add
add
bound
loop
adc
mov
pop
sub
mov
imul
pop
sub
lds
lcall
mov
sahf
movsb
xor
mov
cmpsl
fmul
sub
sbb
out
lock
mov
mov
jns
mov
repz
fdivr
dec
rolb
stos
lods
orl
mov
mov
mov
xchg
dec
scas
mov
sete
outsl
not
cwtl
ja
jne
dec
xor
inc
and
call
filds
pop
jno
aas
idivb
sub
ss
inc
inc
add
inc
mov
fucomp
inc
sub
mov
and
push
push
fwait
mov
pushl
push
adc
sub
out
lea
mov
loopne
insb
out
mov
dec
cld
out
jno
test
or
and
popa
inc
out
cmp
inc
clc
in
adc
imul
into
lock
decl
adc
mov
insb
dec
sbb
push
inc
pop
and
cmpsl
out
lret
inc
fldt
pusha
cli
adc
jbe
test
iret
xor
js
movsb
sbb
push
inc
mov
std
push
jecxz
bound
cmovns
push
jg
insb
cmp
add
inc
xchg
and
mov
in
mov
sub
aas
add
add
mov
mov
dec
xchg
iret
pop
sbb
jno
mov
and
lcall
test
jb
bound
xor
mov
js
dec
rcrb
scas
pop
fmuls
lahf
xor
sysenter
out
loope
or
adc
dec
pop
jecxz
cli
jo
xchg
xchg
rcr
sub
push
cmp
xor
pop
xlat
mov
mov
js
mov
mov
jecxz
adc
ja
pop
sbb
xor
in
popf
subl
xchg
mov
aaa
inc
not
mov
push
add
sbb
add
subb
movsb
mov
sub
nop
xlat
lods
push
and
aad
add
lcall
std
dec
push
pop
xchg
sub
shlb
dec
out
mov
push
aaa
dec
push
cmp
std
mov
mov
sbb
je
es
fistl
call
dec
shll
mov
je
pop
popf
adc
jno
xor
push
sub
push
pop
into
xor
pop
pop
lock
xor
pushf
andb
or
outsl
ja
aam
test
aaa
inc
mov
insb
mov
cld
fwait
push
pop
inc
inc
fwait
ss
cmp
das
jnp
mov
mov
fs
inc
int
popa
and
fwait
clc
test
mov
push
mov
xchg
jecxz
test
in
lret
fmull
mov
dec
decl
and
xchg
xchg
cmp
insl
jmp
test
inc
jns
enter
iret
adc
test
jmp
test
xchg
out
or
xor
dec
mov
and
in
popa
ss
jge
aas
push
xchg
stc
imul
add
mov
shl
push
mov
jb
loope
mov
and
push
orl
jg
js
scas
mov
push
les
and
dec
lahf
cmp
xchg
lahf
and
lahf
das
adc
movsb
xor
pushw
jne
mov
in
mov
mov
jmp
cmp
xor
sbb
pop
mov
sbb
in
push
lahf
and
dec
mov
repnz
leave
decb
adc
jne
sti
push
mov
xorl
xchg
xchg
aas
sti
pop
jno
and
cmp
aad
aas
jmp
and
data16
mov
sub
jmp
ss
jnp
outsb
sbb
into
insl
ret
mov
xchg
mov
sub
mov
and
pusha
inc
and
int
or
jb
in
daa
test
and
and
push
ror
cli
mov
and
cltd
xchg
jb
leave
sub
inc
out
xchg
popa
sbb
cmpsl
in
jne
test
sub
push
pop
push
jb
xchg
cli
repnz
nop
sub
or
movsb
sub
lahf
pop
in
jnp
inc
out
pop
mov
dec
jne
subl
stos
push
into
sbbl
ss
lret
mov
jnp
fldenv
and
insl
sahf
pop
adc
sub
insb
jg
in
jne
mov
push
stos
lcall
stos
fsubs
daa
cmp
hlt
cmc
dec
mov
rorb
mov
into
test
mov
push
in
fstl
or
roll
cmp
jmp
or
adc
cmp
push
push
add
test
cltd
nop
jo
pop
ja
lods
add
fldcw
push
and
jns
jnp
dec
sub
fmull
mov
push
test
loop
loop
clc
pushf
icebp
call
adc
sub
dec
cltd
mov
dec
sbb
pop
sub
cltd
jge
leave
fistpl
mov
out
cmp
lods
mov
mov
sbb
push
or
fsubl
in
jg
mov
sbb
sahf
sub
mov
fcomip
jnp
jno
xor
cmp
push
jecxz
mov
out
xchg
out
dec
push
fucomip
fnstenv
mov
mov
into
cli
dec
fs
subl
lret
sbb
add
pop
daa
shr
into
int
xchg
xor
adc
lret
and
jae
int3
and
sub
or
ret
sbb
push
in
pop
pushf
pusha
sub
loope
mov
outsl
jno
adc
jo
outsl
push
push
jle
cmp
or
test
ja
jmp
sub
into
xchg
cltd
pop
loope
cltd
mov
xor
mov
inc
dec
loope
adc
test
les
xor
and
and
pop
into
loopne
out
leave
gs
or
jnp
jno
test
daa
fdivrl
sbb
fnstcw
fsubrl
repz
mov
enter
std
xchg
aas
rcrl
inc
push
push
push
xchg
cmp
xchg
pop
jl
dec
daa
hlt
ret
dec
inc
push
and
ds
cltd
andb
mov
inc
or
mov
stc
and
xchg
orb
cmc
cld
fstl
xor
mov
ffreep
jo
xor
xchg
mov
adc
jle
pop
cmp
jge
test
sbb
movsb
add
js
xchg
inc
mov
test
loop
rcrl
fisubl
js
cmp
jne
jp
lea
cli
jnp
rolb
pop
adc
or
fsubs
adc
xor
xchg
mov
imulb
adc
mov
sarl
mov
mov
and
or
lret
jno
pop
pop
fmul
cmpb
dec
jg
pop
lea
js
fldt
ret
pushl
fisubrs
mov
sub
roll
popf
mov
xor
scas
pop
xor
out
jl
or
out
mov
mov
fistpll
arpl
daa
jne
inc
cmpsl
dec
movsl
movsb
lods
lock
add
in
and
sti
mov
je
add
push
shr
adcl
or
lahf
jnp
jecxz
sbb
test
pop
movsb
lahf
adc
dec
jl
out
cmp
push
and
rcr
fiaddl
rcll
jnp
or
test
push
in
pop
add
push
stos
ljmp
sbb
leave
jle
pop
inc
daa
add
cmp
outsb
mov
push
mov
xchg
into
xchg
gs
test
xor
out
leave
fs
xchg
jge
or
dec
add
add
mov
mov
adc
or
pop
rolb
xchg
cmp
mov
sarl
xchg
lods
add
inc
pop
lahf
xor
sub
js
shl
cmpsl
mov
jecxz
inc
and
pop
je
in
fsubs
cmc
pop
inc
out
cwtl
clc
ret
mov
lds
outsb
xor
enter
add
movsl
cmp
aad
das
adc
mov
fs
jmp
add
or
cld
push
or
sbb
or
out
or
dec
jmp
cmp
lret
mov
and
jmp
ja
ficomps
bound
xlat
xchg
dec
inc
pop
ret
pop
adcl
loope
arpl
test
rol
xlat
xor
mov
into
pop
push
jmp
subl
ret
xchg
dec
je
mov
movsb
jo
rcrl
dec
aam
arpl
jns
mov
aaa
int3
sub
cmp
ja
out
jle
movsb
in
inc
sbb
sbb
clc
out
dec
les
pop
nop
mov
lret
fwait
mov
leave
and
jne
mov
mov
push
mov
pop
ljmp
xchg
cmp
loope
mov
sarl
popf
xor
xor
je
dec
ret
inc
xchg
pop
stos
mov
dec
xor
bound
pusha
push
push
cmp
jns
loop
test
fs
jne
jl
xlat
sub
rorl
mov
sub
lods
imul
mov
into
mov
dec
add
mov
mov
test
pop
lahf
scas
mov
adc
pop
es
mov
jp
ds
or
arpl
and
pop
orl
cwtl
inc
dec
add
orl
xorb
and
icebp
outsl
add
sub
sub
cmp
or
or
or
xchg
shlb
leave
xchg
inc
movsl
int3
cmp
leave
aam
mov
sbb
mov
xchg
xchg
and
xlat
in
dec
or
stc
inc
enter
pop
dec
xchg
mov
test
ds
insl
out
fsubrs
sbb
mov
mov
inc
mov
cmp
insl
push
and
pop
loope
sbb
arpl
xchg
xchg
movsl
call
mov
enter
lea
mov
adc
dec
jno
push
dec
mov
shr
rclb
mov
mov
mov
fcmove
pop
adc
sbbl
leave
movsl
ja
adc
rcll
jnp
xor
cmp
or
jle
push
repz
loope
aad
and
test
pop
sbb
fcmovb
in
and
dec
iret
mov
cmp
inc
xchg
mull
hlt
mov
dec
and
mov
out
fwait
gs
inc
push
in
cmpsb
and
mov
xchg
lods
arpl
loop
add
or
mov
out
pop
in
scas
daa
stc
cs
sahf
movsb
rcll
adc
loop
into
add
push
add
sbb
loope
dec
fwait
mov
fldt
lods
pushf
loopne
mov
outsl
inc
jmp
jl
mov
xor
xor
int3
mov
lahf
stos
stc
mov
test
pop
push
adc
mov
push
cmc
add
inc
out
xchg
fistpll
repz
mov
call
repnz
fdivr
cmp
dec
pusha
lret
lods
jb
or
push
adc
xchg
jbe
add
sbbl
shr
dec
fldl
lahf
into
mov
inc
cli
imull
push
ror
test
xor
dec
dec
sahf
sahf
push
jg
insl
sbb
aaa
pop
arpl
pop
pop
out
rcrb
sub
les
mov
ss
sbb
outsb
inc
push
xor
ret
adc
mov
dec
ret
and
cwtl
pushl
sbb
sbb
push
and
into
cmp
test
loope
jno
out
jne
test
je
add
cld
fyl2xp1
mov
enter
mov
les
clc
cmpb
cwtl
ret
in
sbb
cmp
adc
jmp
cmp
jmp
jb
scas
jbe
xchg
ret
xchg
sbb
popf
sbb
xlat
sub
mov
pop
pop
and
mov
xor
fdivrs
push
mov
stc
mov
xchg
add
js
negb
out
mov
xor
rcll
int3
jne
in
xchg
nop
cwtl
shr
xchg
test
cmp
push
and
bound
ret
stos
movsb
sbb
mov
xlat
shr
iret
roll
cmp
jo
adc
adc
ljmp
je
repnz
mov
sub
pushf
jmp
xchg
inc
jl
xchg
xchg
scas
mov
add
dec
sbb
mov
call
ljmp
jno
mov
pop
gs
cmpsb
push
cmp
arpl
shrb
outsl
cli
pop
xchg
add
dec
xor
adc
dec
mov
scas
nop
xor
and
and
movsb
out
sar
and
pop
jbe
loope
mov
pop
int
lods
pop
in
pop
addr16
dec
and
jge
or
sbb
or
dec
add
mov
pop
xor
arpl
pusha
sub
mov
push
pop
stos
fnstcw
shll
pop
adc
hlt
or
outsl
jmp
mov
jo
jp
pop
push
sbb
cmc
loope
mov
jnp
fsubl
ret
inc
out
mov
xchg
nop
aad
xor
dec
push
mov
les
ror
dec
imul
js
adc
push
sbb
fldcw
mov
jmp
lods
fstl
fidivl
push
dec
add
pop
mov
mov
cwtl
xor
loopne
jecxz
movsb
cmpsl
and
cmp
xchg
jecxz
xchg
mov
add
sbb
out
inc
pop
out
xorl
inc
cld
mov
cltd
int
push
and
or
movsl
mov
sub
xor
out
out
scas
jbe
mov
in
test
and
bound
loop
sbb
aaa
leave
jno
cmp
xchg
out
jne
sbb
inc
xchg
pop
mov
inc
jle
xchg
cmpb
imul
xchg
dec
addb
ficoml
push
fs
mov
in
lds
xor
adc
sub
out
cs
ljmp
fsubp
add
stc
dec
pushf
cmc
into
test
pop
push
jo
jns
add
mov
repz
add
add
lods
outsb
cmc
sbb
repz
push
ds
sbb
jb
popa
mov
leave
pop
adc
jae
pop
mov
dec
cs
jmp
stos
loope
cmpsl
adc
ret
pop
shll
insl
mov
and
mov
sub
loope
push
lar
je
movsl
loop
add
into
fildl
pop
jge
imul
faddl
mov
pop
mov
inc
arpl
test
pop
movsb
and
sahf
add
daa
orb
cli
pop
out
add
clc
mov
cmp
pop
imulb
popa
addb
orb
std
push
negl
das
out
scas
popa
jp
scas
shlb
jecxz
push
or
lahf
icebp
xchg
mov
adc
push
scas
movsb
push
inc
das
dec
sahf
jne
shrl
stc
adc
mov
stos
orb
cmp
adcl
jo
jne
mov
xor
cld
clc
bound
sahf
pop
mov
mov
testb
push
add
repz
ss
arpl
xor
and
fs
cs
xor
cltd
and
pop
cwtl
jnp
int3
lods
jb
xchg
hlt
scas
pop
ret
sbb
orb
xor
lds
jno
incb
dec
or
out
jg
mov
stos
ficoms
out
sbb
inc
pop
xchg
mov
dec
imul
out
movsl
or
lret
xchg
jbe
out
xor
arpl
inc
dec
daa
xor
xchg
dec
rcrb
push
mov
lret
pushf
ret
in
mov
mov
call
int3
sbb
jae
int
sbb
jge
test
xor
mov
pushf
popa
outsl
jecxz
shl
xlat
cmp
xor
push
xchg
jle
xchg
jp
dec
scas
xchg
frstor
cmp
sbb
xlat
jecxz
stc
ljmp
call
ljmp
sbbb
icebp
int3
in
mov
inc
lods
lods
sti
lahf
lret
mov
idivb
outsb
sub
lret
lret
inc
xor
shll
cmpsb
ja
mov
out
fcmovne
in
jl
mov
std
mov
lods
mov
mov
lret
leavew
es
dec
cmpsl
fcoms
adc
xchg
sbb
and
jno
outsb
push
inc
pop
lods
jp
mov
jp
adcl
aaa
cmpsl
and
mov
fcmove
sahf
pop
push
scas
imul
sti
fwait
out
inc
fdivrs
cmc
rcl
lods
fs
fdivl
shlb
ror
test
pop
cltd
ja
loop
push
mov
inc
jae
xchg
push
int3
int3
xchg
sub
mov
scas
xchg
int3
pop
sbb
stos
push
lock
ljmp
inc
or
mov
push
loopne
sub
rolb
cmp
add
xlat
inc
xor
or
lds
jbe
ret
fcompl
ljmp
outsb
xchg
scas
add
clc
es
daa
inc
add
pusha
pop
pop
push
pop
adc
inc
fs
scas
pop
xor
repz
dec
aad
adc
xchg
push
jge
cli
push
in
jo
pop
dec
stc
sbbb
cmp
ret
fldcw
and
pop
dec
or
mov
sbb
sub
mov
cmp
mov
mov
js
xchg
and
fdivp
in
clc
sub
pop
xor
dec
cltd
sub
rol
xchg
push
insl
add
fsubr
hlt
xor
repnz
adc
sub
dec
dec
push
fdivs
mov
add
or
ret
lret
inc
or
fisubrl
das
jle
stc
xchg
sub
leave
push
fidivl
push
push
push
push
hlt
ret
js
mov
sbb
icebp
adc
insb
push
gs
subl
jp
loopne
xor
sub
push
add
mov
test
add
mov
add
sub
xchg
dec
lods
pushf
pop
ss
repz
fucomi
and
dec
ret
inc
jmp
lret
movsb
in
push
cmp
fisubl
or
xchg
jno
sbb
mov
test
xor
inc
cmpsb
mov
icebp
push
xchg
jge
xor
sub
in
in
add
adc
dec
std
shll
dec
rorb
daa
cli
dec
inc
mov
je
js
push
jp
pusha
jne
sti
dec
loope
mov
aas
shll
iret
lcall
push
test
std
lods
mov
jno
cli
ret
lods
dec
push
pusha
outsl
out
pop
push
xchg
jecxz
jae
sti
scas
pop
out
fistps
dec
scas
stc
cmp
cmc
cli
jge
xlat
in
and
mov
sahf
in
shl
icebp
and
adc
pop
stc
mov
in
and
fsubs
lret
sub
fcomps
add
fists
mov
out
sarb
push
pop
push
sbb
imul
add
cmp
xchg
add
xchg
fistps
inc
jge
adc
xchg
jg
inc
in
pop
mov
fdivr
push
cmc
and
aas
and
inc
cmc
cmp
ret
fidivrl
insl
adcb
xor
cmpsl
pop
fwait
jbe
push
inc
push
popa
lcall
testb
cmp
addr16
movsl
jno
xor
ret
adc
dec
mov
rorb
pop
repnz
loopne
jne
shrb
xchg
je
inc
push
in
out
add
ja
mov
jb
shrl
out
jbe
push
cmpb
into
cmp
scas
pop
scas
inc
jecxz
test
pop
mov
xchg
ror
dec
aas
adc
movsb
test
test
xchg
mov
mov
into
pop
fistps
orl
call
repz
sbb
sbb
sbb
jp
imul
fistpll
add
pop
sbb
and
mov
jbe
popf
xchg
jno
dec
addb
ja
je
nop
inc
out
sahf
les
lock
adc
popf
xchg
push
loope
aam
cmp
push
cmpsl
lcall
cli
insl
sub
enter
and
int3
push
das
addr16
imul
fistpll
xlat
lods
xor
pusha
nop
insb
js
xor
pop
loope
add
xchg
sti
adc
xchg
js
mov
sub
ljmp
rorl
sbb
mov
in
jno
mov
push
push
push
ljmp
test
xchg
leave
aas
loopne
jecxz
stos
cs
hlt
mov
or
jnp
push
gs
sbb
xchg
push
jmp
std
push
mov
sub
jae
into
das
leave
arpl
std
jmp
test
pop
sbb
xchg
bsf
shrb
jge
int3
rcr
or
xor
inc
rcr
loope
inc
aad
mov
int
cld
jecxz
fldcw
jge
xor
inc
inc
jne
cli
pop
jbe
xor
mov
cmpsb
outsb
mov
xor
or
cli
cwtl
fbstp
movb
pop
stc
sbb
es
xchg
xlat
xchg
lds
fs
stc
rolb
stos
outsl
sub
inc
dec
leave
push
inc
subl
mov
push
insl
lret
sub
or
stc
xchg
jmp
fmul
int
dec
pop
sbb
fwait
cs
fildl
jne
jbe
mov
push
xchg
hlt
rol
xor
std
fidivrs
outsl
push
and
xor
out
jle
mov
xchg
xchg
pop
cmp
inc
xchg
xor
push
pop
mov
mov
sbb
test
adcb
das
sbb
adc
sub
inc
repnz
into
lea
adc
cmp
xchg
sub
adc
sub
incl
je
ds
xchg
xchg
and
int3
leave
clc
fs
sbb
repz
or
sbb
adc
aaa
repz
and
pop
add
jle
fidivs
add
testb
or
addr16
adc
mov
jl
jmp
push
xchg
inc
outsl
aas
push
test
call
cs
mov
filds
into
repnz
scas
hlt
stc
pop
jl
std
jmp
sbb
xchg
test
mov
call
add
push
and
imul
dec
loop
inc
stc
enter
sar
pop
push
call
loopne
jmp
lds
stos
cli
inc
jb
jmp
sbb
fsts
leave
loope
jnp
add
dec
and
jno
jns
sbb
cmp
push
sti
das
popf
out
push
out
jnp
je
pop
mov
leave
or
fwait
mov
divl
or
insb
insb
nop
sbb
sbb
xor
dec
push
cli
xchg
xchg
dec
in
int
into
push
stos
cld
out
aam
cmpsl
jb
sbb
adc
xchg
push
mov
ret
or
dec
ret
xchg
jo
cmp
shld
ret
xor
ja
cmpsl
repnz
andl
sahf
mov
xchg
mov
mov
xchg
or
cs
mov
sbb
lock
aam
inc
mov
in
ret
add
xor
ljmp
xor
xchg
push
pusha
mov
sahf
jecxz
testl
fistps
pushf
fdivrl
stos
mov
mov
jle
inc
jb
out
and
pushf
stos
add
xchg
iret
and
and
dec
or
dec
lock
rcr
popa
jbe
ss
addl
in
pop
push
ret
xor
jl
pop
gs
pop
xchg
outsb
repz
fidivs
pop
aam
pop
mov
and
lret
repnz
jecxz
sbb
ret
cmpsb
popa
pop
dec
dec
mov
mov
pop
jecxz
divb
in
and
fwait
lea
aaa
add
push
inc
sbb
das
lret
mov
xlat
xor
fistpl
mov
dec
mov
hlt
mov
fldpi
and
cmp
inc
xchg
cld
jmp
mov
sti
int
mov
sbb
lods
fdivs
lock
adc
sar
cmp
jecxz
frstor
in
xor
lds
push
pop
sbb
stos
adc
mov
xchg
xchg
dec
movsb
out
pop
movsl
dec
jns
and
lcall
push
lock
cltd
sub
lcall
xchg
gs
jecxz
mov
mov
cmc
push
push
jne
stos
add
xchg
out
daa
lret
ret
mov
adc
xchg
cmp
xchg
push
adc
loopne
push
data16
inc
push
call
shlb
aaa
push
in
jle
pop
les
fcmovu
dec
jmp
cwtl
jo
cmp
in
sub
sbb
mov
repnz
fidivrs
in
out
push
xchg
push
mov
jno
inc
push
orl
pop
mov
jno
ja
mov
btrl
fidivs
test
aas
push
sbb
push
mov
or
pop
mov
jns
mov
rorb
rorb
sub
pop
jg
inc
hlt
pop
inc
aaa
cltd
dec
out
js
repz
push
out
dec
or
xchg
mov
test
arpl
cmp
mov
inc
dec
cmpsb
adc
data16
aas
push
pop
and
mov
test
fldcw
int3
sbb
xchg
jo
sub
xorl
repz
outsl
stos
or
mov
mov
cmp
cmpsl
in
cmp
jae
sbb
daa
test
cmp
pop
mov
sbb
mov
mov
xchg
jge
pop
ret
sub
aam
aas
loopne
push
les
mov
sbb
stos
int
mov
jecxz
fistpll
nop
xorl
cli
mov
out
cwtl
jecxz
fnstsw
test
jp
aam
mov
xchg
pop
mul
mov
mov
out
sub
insb
fcomi
int
push
dec
popf
out
std
mov
xor
or
loop
or
gs
cmp
imulb
push
loopne
inc
in
pop
mov
shl
xorb
or
out
mov
mov
sahf
mov
pop
rorl
mov
xchg
and
pop
gs
lods
mov
mov
sbb
push
fstpt
sub
notl
movsl
std
sti
or
insb
shlb
stos
es
adc
pop
inc
in
jo
xchg
mov
inc
pop
adc
mov
or
jbe
sbb
sub
test
arpl
mov
push
out
push
pop
cmpsb
das
ja
dec
xchg
sti
inc
outsl
test
mov
cmp
into
jmp
jns
out
push
out
add
in
inc
pop
jmp
fists
sub
orl
icebp
test
addb
add
movsl
pop
jne
addr16
hlt
xchg
jg
ja
or
clc
icebp
ds
scas
pop
xchg
jno
xor
or
into
mov
mov
xor
insl
fwait
out
push
fs
int3
adc
xchg
push
icebp
add
cld
cltd
aad
pop
mov
hlt
mov
ret
cs
jmp
sti
inc
push
test
jle
push
popf
scas
outsl
lock
and
bound
lcall
test
add
lretw
bound
loope
xlat
mov
xchg
stos
mov
insb
test
jle
mov
jge
test
or
rolb
xor
cmc
cmp
loopne
movsb
mov
sbb
pop
int
std
loop
mov
xchg
in
mov
lock
lret
cmpsl
and
ret
mov
jg
add
adc
cs
or
pop
sbb
mov
mov
jl
sub
outsb
inc
jp
sbb
inc
not
in
and
xor
or
cmp
movsb
es
mov
cmp
stc
shrb
lret
lods
pusha
and
imul
adc
fadds
pop
xchg
loopne
repnz
xor
rcrl
mov
out
push
mov
sbb
sub
out
jp
mov
push
jge
ficoml
and
push
push
mov
jne
jl
mov
dec
pop
cmp
je
and
cmp
cwtl
loopne
leave
mov
xchg
cmp
sub
sub
lods
mov
in
prefetcht2
adc
popaw
push
sub
outsl
stos
test
push
ret
mov
pop
xchg
mov
rcll
sbb
pop
cmpsl
call
loopne
jnp
int
or
aaa
pop
rol
xchg
sbb
dec
cli
adcl
add
dec
hlt
aas
add
jmp
addr16
cs
lret
and
add
pushf
jne
negl
and
decl
flds
sbb
add
imul
or
loope
mov
fs
loopne
gs
in
xchg
and
das
cmp
push
std
movsb
test
or
insl
push
push
mov
mov
inc
test
mov
or
lahf
fildl
sbb
ss
cli
adc
or
sarl
sbb
adc
jp
ljmp
or
lds
pusha
mov
loop
adc
xor
mov
lock
rorb
sbb
xor
loopne
inc
mov
or
mov
sbb
and
lahf
repnz
notb
and
outsb
scas
cmp
loope
add
jo
adc
sub
push
repz
scas
push
jmp
cltd
mov
xor
outsl
xor
push
leave
addr16
repz
lret
mov
push
insl
adc
stc
xchg
fdivrs
ds
and
xor
push
or
hlt
pop
mov
mov
mov
pop
xchg
pusha
lods
sti
lods
mov
xchg
or
jo
lds
aaa
icebp
sub
outsb
ds
sbb
sbb
jbe
push
mov
pushf
rolb
mov
subl
mov
hlt
or
xchg
dec
loop
sub
pop
add
push
stos
jecxz
mov
push
pop
sbb
xchg
scas
adc
push
add
je
es
pop
popf
xchg
addb
test
sbb
cmp
pop
ja
or
jecxz
lret
repz
cmp
mov
arpl
fldt
popa
xor
jo
sbb
out
cmp
inc
jle
outsl
xchg
push
pusha
stc
aas
leave
xchg
pop
push
sahf
add
jne
jo
dec
push
lret
inc
xchg
mov
mov
and
ja
in
fld
mov
imul
decl
adc
arpl
aad
test
dec
cwtl
dec
xor
int3
scas
sbb
daa
ret
dec
sbb
ret
dec
pusha
loopne
cs
sub
mov
call
mov
in
push
out
ret
adc
add
loop
data16
pushf
mov
adc
dec
mov
and
stos
fsubrs
mov
mov
sub
loop
out
add
or
sbb
or
xchg
cltd
lea
pusha
fs
xchg
daa
inc
or
adc
or
fs
hlt
flds
mov
xor
sbb
cmp
adc
add
inc
in
cmc
pop
push
aad
mov
jg
sbb
dec
insl
xchg
sti
in
xor
dec
aad
leave
or
sub
out
mov
aam
jmp
xchg
push
out
add
aam
mov
lahf
cmp
mov
fmull
sbbl
mov
xchg
jp
inc
add
outsl
mov
les
mov
stos
dec
dec
jbe
push
jecxz
sub
les
fs
call
push
add
loopne
lret
push
je
sbb
popf
xor
cmp
and
imul
popa
ja
and
xchg
daa
dec
jmp
sti
dec
mov
les
mov
sub
jmp
sub
push
mov
ljmp
mov
stmxcsr
rcrl
push
scas
lret
cmp
mov
xor
inc
inc
dec
jnp
jmp
sbb
adc
jmp
mov
adc
or
loope
or
jae
mov
in
ficompl
int3
xchg
sbb
sbbb
cltd
mov
adc
adc
pusha
ret
and
repnz
jl
in
adc
into
pop
cmpsb
or
fstp
rolb
mov
jmp
lea
aas
fstps
fildll
push
xchg
dec
xchg
sarl
jmp
sbb
jecxz
cmp
xor
leave
xor
and
jl
int
mov
incl
jne
cltd
pop
lods
sarl
cmp
push
sub
mov
cmpsb
mov
mov
lods
out
ret
fmuls
mov
push
mov
mov
add
movsb
sbb
push
mov
push
lods
loopne
iret
and
outsl
dec
pushf
push
jle
sbb
xor
jp
push
inc
push
loope
fadds
or
daa
xchg
aaa
inc
adc
dec
jl
pop
dec
pop
insb
push
and
pop
push
jno
dec
loop
lods
imul
pop
rolb
mov
sbb
das
push
sbb
cmp
pop
cmc
xor
lock
out
lret
shll
mov
and
lea
sahf
lods
movsl
cmc
stc
loopne
cs
test
pushf
icebp
jl
xchg
leave
cmp
fimull
movsb
dec
das
inc
repnz
in
push
out
pop
adc
cwtl
loop
js
or
mov
outsl
dec
aas
pop
imul
sub
mov
push
inc
jns
inc
mov
lods
and
mov
call
mov
dec
and
ret
sbb
cmpsb
adc
dec
ret
sub
inc
insl
pushf
mov
mov
ljmp
pop
test
xchg
dec
ret
inc
js
dec
addr16
loopne
dec
out
mov
stos
cltd
js
add
les
movsb
cmp
mov
aam
mov
jmp
fdivl
pushf
pop
mov
and
add
loopne
test
aas
repz
add
idiv
mov
and
sti
jno
into
mov
sbb
cs
push
lds
adc
movsb
nop
flds
lea
dec
ljmp
jge
adc
aaa
cltd
jge
repz
push
inc
ljmp
out
ret
subb
mov
jge
sub
nop
mov
out
cltd
fcoml
cmc
les
xrelease
or
jecxz
dec
xchg
sbb
std
ficoms
dec
sub
imul
iret
ds
push
and
sbbb
sbb
or
test
sbb
pop
add
pop
mov
sbb
mulb
mov
out
in
xchg
sbb
jo
cld
mov
gs
jno
dec
xchg
adc
adc
dec
xchg
jecxz
movsl
mov
in
int
add
fwait
loopne
mov
imul
out
outsl
aaa
mov
xchg
int
xor
aas
test
dec
popf
mov
push
dec
add
xor
out
and
mov
divl
mov
in
mov
shl
xor
repz
bound
and
movsb
pop
ror
shll
xor
bound
and
lret
mov
mov
and
repnz
inc
adc
sar
xchg
mov
filds
in
dec
sub
lods
inc
aaa
mov
jne
gs
pop
subb
js
jg
sub
pusha
test
and
jb
pcmpgtd
aam
or
cmp
test
push
fldenv
or
in
push
adc
int
inc
stos
fwait
mov
jns
test
ja
sub
leave
mov
leave
pop
loop
ret
pop
iret
es
jno
in
ret
fwait
sbb
les
jp
and
cli
movsb
popa
movl
shrl
int
mov
adc
adc
sub
pushf
sub
mov
cmpsb
jl
lods
fstps
xchg
pop
xor
mov
ss
dec
sahf
pop
dec
fs
inc
aad
faddl
xchg
add
ss
push
cmc
adcb
dec
mov
xchg
and
or
cmp
jno
inc
pop
jne
xchg
inc
roll
addr16
into
ljmp
cmpsl
pop
lea
jp
in
push
pop
loope
aaa
or
cli
insl
mov
dec
repz
ret
ret
sub
cmp
lahf
jb
movsb
rorb
pop
jecxz
dec
pop
data16
mov
adc
inc
lods
mov
rol
sub
mov
adc
test
jne
adc
jge
sahf
pop
dec
fucomp
pop
in
push
fisubrl
pop
xor
or
cmpl
inc
loop
inc
popf
sub
sbb
sbbl
je
fwait
pop
shll
cli
adcl
les
jmp
pop
int
cmp
xchg
cwtl
dec
jnp
jae
ja
scas
cmc
out
lods
lock
mov
xor
rcrb
dec
movsl
insl
int
ficoml
das
cmc
adc
sti
push
sub
cmp
jge
popf
mov
testb
icebp
je
cmp
adc
lret
jo
dec
loope
iret
int3
ret
sub
arpl
shlb
mov
loop
dec
pop
mov
sub
pop
dec
shll
mov
xor
cltd
xchg
cmpsl
push
mov
mov
lret
jo
add
and
das
aad
aaa
test
push
xor
xor
fwait
iret
mul
or
mov
int3
lret
add
or
and
mov
fiadds
fwait
inc
add
pop
inc
xchg
pop
jg
mov
sysret
gs
add
mov
lds
loope
mov
dec
sbb
adc
dec
mov
mov
jg
add
shrl
rclb
pusha
loope
jp
mov
sti
mov
cmpsl
rclb
hlt
mov
dec
inc
data16
sbb
ja
mov
les
popa
fwait
mov
inc
sub
pop
push
lods
imul
sbb
arpl
sti
or
adc
scas
ljmp
movsl
idivb
daa
ja
ss
aam
adc
inc
or
sti
or
push
fnsave
subb
pusha
sahf
sahf
mov
mov
aad
cwtl
pop
in
pop
push
addr16
or
int
xchg
sbb
aad
shrb
xor
jne
or
aad
inc
ds
fdivrp
popa
idivb
or
mov
fcoms
mov
adc
ja
push
add
add
adc
cld
cmp
pop
xchg
ja
out
inc
jne
mov
bound
les
jle
stc
and
xchg
leave
and
rorb
xchg
out
jge
imul
hlt
sub
adcl
jbe
pop
repnz
add
inc
popa
mov
cmp
jne
js
lcall
and
mov
ss
pushf
mov
mov
adc
xor
mov
shl
cld
jae
inc
cmp
mov
call
dec
mov
cmp
cmp
push
push
mov
and
lret
adc
mov
shrb
add
sbb
shll
js
mov
add
pop
lods
lods
inc
pop
out
dec
ret
das
sbb
hlt
test
mov
adc
insb
xchg
jmp
movsl
in
testl
lock
dec
xchg
mov
ret
fistl
jl
sahf
push
test
pop
add
cld
jmp
in
cmp
or
cli
xchg
sti
and
xchg
xor
xlat
mov
imul
lods
mov
imul
in
inc
test
cmc
shlb
test
pop
or
scas
cmp
pop
call
add
xor
jecxz
aaa
push
pop
pop
mov
ja
je
jno
sbb
jmp
and
leave
pop
sbb
cmp
aam
fs
cmp
repnz
xchg
ret
push
mov
popa
cmpsl
mov
loope
mov
xor
sbb
pop
enter
xor
fsubrl
sbb
cmp
add
repnz
imull
jl
dec
cmc
cmp
xchg
xlat
mov
loop
add
mov
enter
cmp
adc
push
lods
pop
push
dec
push
jge
add
fwait
test
jp
xchg
dec
lea
pop
push
and
arpl
dec
sub
xchg
add
lock
cmp
add
pop
push
xor
and
xchg
movsl
andb
jbe
int3
mov
repnz
xlat
mov
pop
sbb
fstpl
aas
cmc
ficompl
xchg
lock
pop
aad
mov
xchg
cmp
dec
ss
mov
ud2
dec
inc
repz
jl
xchg
and
or
pop
fcomip
fs
jg
sbb
nop
popf
mov
pop
outsb
js
mov
cwtl
xor
and
mov
cmp
sbb
add
push
shrb
in
lds
jp
cli
imul
mov
or
inc
mov
pop
fldcw
dec
cmp
dec
sbb
jg
pop
pop
mov
jno
add
adc
inc
loope
cli
adc
jecxz
rcr
std
clc
or
mov
sarb
dec
jnp
or
sti
gs
icebp
xlat
fists
dec
movsl
loope
cmp
jecxz
sbb
add
jb
fcomps
aaa
gs
sbb
roll
inc
xchg
mov
cmc
jmp
push
fmul
enter
and
mov
fwait
mov
pusha
push
pop
mov
cmp
cmp
ret
ljmp
push
adc
and
mov
add
rorl
fisttpl
test
add
and
pop
mov
lahf
ljmp
inc
sbb
imul
lahf
cltd
adc
sub
lret
pop
and
leave
inc
scas
mov
movsb
jnp
jg
pop
lret
aad
jnp
sbb
pushf
dec
inc
dec
mov
test
cmp
and
or
jge
clc
lcall
lea
cmp
scas
bound
fcoml
xor
push
ljmp
cmp
sahf
fsub
js
into
jnp
clc
push
arpl
cmpl
std
in
loop
or
add
inc
jno
daa
jecxz
dec
sbb
push
xchg
aaa
adc
imul
cwtl
fcomp
bound
inc
pop
mov
pusha
cmpsl
test
sub
sub
sahf
and
outsb
jne,pt
dec
stos
xchg
orb
fimuls
adc
sbb
dec
ss
ret
insb
cmpsl
xor
sarl
sub
repnz
fdivs
lods
inc
loop
sbb
or
or
jne
lods
sete
subl
or
push
xchg
mov
pop
sub
mov
add
or
lea
jle
bnd
imul
jle
inc
xchg
cmpsl
in
xor
in
arpl
lret
adc
xor
cwtl
scas
jge
add
or
and
xor
xchg
and
adc
mov
cmpsb
repnz
movsb
cmp
sub
xchg
mov
int3
dec
sub
imul
leave
mov
cmpsl
es
xchg
loop
lea
inc
mov
jecxz
xor
ror
inc
inc
stos
test
fbld
jns
pusha
xchg
cltd
cmp
mov
pop
add
inc
js
aam
or
push
es
imul
lea
cmp
jbe
push
cwtl
and
out
ss
dec
in
push
repz
cmp
nop
loop
sbb
mov
mov
stos
cmpsb
jns
adc
xchg
fucom
movsb
push
jbe
imul
pop
ficompl
inc
dec
lea
rorl
aaa
dec
dec
cmp
repnz
nop
fsubrs
fs
xorl
mov
cmc
scas
lock
pop
inc
inc
aam
shrb
cli
sbb
mov
adc
mov
je
cmp
mov
loope
xor
xchg
pop
jg
in
xchg
and
dec
pop
jne
call
mov
mov
pop
fidivrl
scas
push
shl
fildll
data16
in
ret
aas
mov
push
in
mov
lahf
movsb
sbb
std
jl
sar
pop
enter
sti
jp
stc
push
jb
scas
pop
iret
pop
ficompl
adc
ret
je
loopne
jle
jns
movsl
fiadds
adc
add
mov
mov
fwait
mov
sti
in
inc
mov
jbe
push
push
xchg
xor
adc
dec
or
xrelease
test
xchg
pop
mov
je
enter
es
xor
out
ds
jno
adcl
jb
imul
inc
addr16
mov
cltd
sbb
je
and
sbb
and
add
in
jbe
sbb
les
push
or
nop
in
cmp
xor
and
and
int3
rcrl
push
popf
mov
and
mov
into
imul
ss
jbe
xchg
bound
in
repnz
push
adc
es
rolb
repnz
inc
daa
or
mov
test
push
jecxz
cltd
ss
out
mov
mov
add
pop
mov
push
imul
fcomps
orl
leave
es
in
fidivl
add
leave
pop
loopne
jno
cmpsb
adc
add
lock
jne
jle
int3
clc
repnz
cmp
inc
pop
xchg
mov
add
xchg
pop
inc
jle
scas
mov
mov
add
sti
and
fs
mov
test
in
mov
mov
mov
fistps
aam
adc
adc
dec
addl
nop
adc
lods
test
aaa
sbb
ds
cmp
pop
loope
jmp
jno
cltd
add
mov
repz
inc
mov
bound
mov
pop
mov
inc
jmp
sub
pop
dec
mov
jno
roll
pop
pop
xchg
or
add
aam
cmp
mov
pop
fwait
shll
xlat
jmp
dec
dec
rorb
ret
jle
jmp
into
mov
and
xlat
incl
and
sbb
and
test
fsubs
mov
test
lret
mov
insb
rcrb
fisubrl
addr16
mov
add
aad
add
jo
ss
scas
xor
xor
stos
loopne
lret
data16
xor
mov
jns
incl
dec
or
dec
into
mov
sub
pop
movb
jg
imul
jmp
push
ret
pop
hlt
popa
leave
orl
dec
adc
sbb
es
shll
push
test
adc
cmp
or
pop
lret
movsl
pushf
addl
imul
and
adc
sbb
cmp
and
in
cmp
xor
fldl
in
mov
ret
in
hlt
incl
jmp
dec
cld
arpl
iret
imul
out
cli
jo
add
dec
out
fmul
mov
aaa
je
xor
jge
jge
xchg
xor
mov
push
jge
mov
dec
push
sub
ret
pop
shrb
push
push
mov
jge
cmc
ljmp
bound
mov
into
inc
and
add
and
sbb
std
xchg
data16
stos
sub
sub
xchg
push
pop
cmp
sbb
aad
jecxz
push
sbb
aas
fsubl
or
inc
loopne
push
jmp
dec
test
xchg
xor
and
jo
pop
jo
and
sub
in
int
inc
mov
cmp
rcrb
add
aas
jnp
jb
test
cmp
sbb
jno
or
lret
sbb
inc
popf
clc
push
fsubs
ror
sbbb
add
out
mov
imul
pop
orb
mov
and
push
cwtl
lret
adcb
loop
xor
mov
rcr
fwait
or
add
jns
add
les
dec
dec
pop
jmp
xor
decb
cmc
pop
lods
push
xchg
cmp
aaa
dec
inc
or
aam
jl
popf
adc
push
xor
pushf
add
pop
ja
clc
push
lock
pop
ret
mov
mov
sarb
cli
push
lret
lds
scas
mov
pop
or
sarl
nop
xor
in
arpl
pop
mov
iret
push
adc
xchg
sti
ss
std
std
jp
cmp
test
inc
and
xlat
popa
adc
loop
call
out
ss
testl
push
cmp
neg
push
arpl
or
xor
call
xor
lea
int
inc
pop
mov
fdivp
fdivrs
push
add
notl
mov
test
cmp
jle
negl
test
les
pop
dec
arpl
adc
and
pushf
push
add
jg
and
inc
dec
je
jae
push
lahf
movsb
and
mov
inc
xchg
jo
adcb
pop
dec
cld
and
aaa
aas
xchg
xchg
bound
mov
push
popf
imul
xlat
and
sbb
and
out
jmp
andb
jo
sti
and
lahf
stc
mov
lret
ljmp
xor
or
push
lcall
dec
imul
nop
orb
jecxz
add
pop
add
repz
add
cmpsl
shrl
jmp
and
ret
add
mov
sbb
imul
je
ffree
or
aas
or
push
pop
sbb
jo
add
push
in
cmp
imul
lret
cmp
mov
out
add
aad
mov
and
es
lahf
gs
push
inc
inc
xchg
pushf
ret
aad
iret
std
mov
dec
cmp
push
outsb
jno
mov
xchg
stos
enter
inc
scas
adc
or
inc
lds
sub
sub
jbe
imul
cli
fs
mov
xchg
mov
rcrl
imul
mov
and
insl
or
out
ss
jnp
or
mov
jns
test
push
adc
sbb
mov
aas
daa
cmpsb
sbb
or
stos
jmp
adc
out
mov
aas
xor
mov
out
jmp
sbb
adc
fimuls
xchg
mov
hlt
xchg
fwait
inc
scas
subb
icebp
dec
cmp
cli
sbb
ret
add
and
xchg
cmp
int
ljmp
sti
js
mov
je
push
cmpsb
insl
outsl
test
cmpsb
int
out
fadds
cmp
fdivrl
mov
jo
je
lret
test
lcall
test
inc
insb
adcl
mov
dec
shll
mov
sub
data16
pop
or
push
pop
pop
jp
jbe
pop
pop
jbe
sti
and
sub
cwtl
and
xchg
cmpsl
pop
int3
ror
lret
aaa
sub
in
sbb
ja
in
mov
scas
je
mov
pop
sbb
xor
mov
push
test
nop
daa
jbe
stc
gs
mov
mov
inc
or
and
mov
adc
push
pop
mov
jo
rcl
push
out
popa
jle
sub
fdivl
lret
movsb
fnstsw
rcrl
nop
insb
mov
filds
sub
and
test
cli
xchg
bound
mov
test
mov
mov
sbb
ret
sbb
hlt
add
pop
je
rclb
into
fisttpl
dec
mov
cmc
xor
outsb
fisttps
ja
popf
lahf
fimuls
xchg
adcb
iret
insl
and
aad
test
pusha
das
arpl
inc
xchg
jge
js
cmp
add
imul
xchg
js
push
push
in
pop
fcomps
xor
push
imul
aam
std
push
inc
ror
mov
in
mov
adc
pop
add
insb
add
lcall
sahf
xchg
jmp
push
cld
jne
fisubrs
addl
mov
test
mov
fmuls
jno
xlat
es
add
rcrl
and
push
dec
aaa
inc
sub
out
jno
cld
and
int3
lcall
add
out
int3
leave
xchg
fimull
pushf
mov
stc
lahf
cs
scas
xchg
addb
mov
mov
shrl
mov
pushf
in
scas
mov
aad
bound
loope
stos
fucomi
jl
repz
cmp
ret
xchg
xor
ret
js
mov
in
insl
mov
pusha
pop
ret
xchg
popa
dec
cwtl
pop
in
xchg
mov
shlb
iret
jbe
rcrb
roll
cmp
int3
xchg
scas
sub
dec
jne
and
jne
sti
fnsave
bound
test
fcoml
adc
test
and
pop
mov
jne
push
mov
mov
nop
jo
adc
aad
or
push
mov
stos
adc
cmc
adc
mov
test
sbb
cmp
dec
xchg
xor
icebp
data16
mov
int
push
stc
pop
clc
xchg
sub
pop
xchg
loopne
fdivp
cmp
movsb
inc
icebp
rolb
mov
mov
ljmp
pop
cmpsl
lea
int3
movsb
and
jmp
adc
scas
mov
mov
out
repnz
or
xchg
test
dec
adc
mov
sub
xor
mov
push
pop
imul
std
dec
fwait
or
or
mov
data16
push
jl
sub
inc
mov
adc
xchg
sub
loop
cmp
dec
sub
and
nop
int
inc
sub
lcall
insb
icebp
mov
pop
idivl
std
aaa
add
sub
divl
mov
mov
pusha
cmp
das
fldl
add
sbb
push
dec
sub
pusha
cmc
rcr
insb
push
dec
sub
lret
adc
fisttps
adc
add
nop
les
pop
jp
and
inc
lods
inc
mov
pusha
cld
insl
incb
pop
and
push
xchg
inc
aam
mov
adc
jle
inc
int
inc
mov
xchg
cmp
ljmp
pushl
inc
dec
jg
pop
xor
nop
push
push
jp
add
int
mov
push
jl
insl
fsubl
sbb
xor
jns
aad
in
fisubl
xchg
repz
dec
jl
int3
push
push
add
mov
mov
push
push
aad
dec
leave
fisubs
cmp
dec
or
imul
add
je
dec
js
std
jns
call
mov
rcrb
xor
sbb
popf
push
sub
xchg
pop
in
je
dec
fdivr
push
cltd
sub
mov
rcll
xor
int
sub
jp
pop
pop
sarl
jae
push
fldt
cmp
xchg
cmp
addb
dec
ds
sbb
mov
mov
adc
jne
idivb
jbe
push
insl
xchg
shlb
divb
inc
sub
stos
cmp
shrb
hlt
pop
mov
mov
ja
mov
sbb
bound
sbb
jecxz
xchg
imul
subl
jmp
mov
sbb
repnz
push
das
fsts
inc
in
mov
lds
xlat
repnz
push
in
mov
pop
aas
jne
cmpb
mov
mov
mov
jecxz
dec
add
xchg
inc
aaa
xchg
xor
popf
xchg
outsl
sar
cs
cmp
pop
sub
mov
or
mov
cmovns
psrlw
std
pop
clc
lds
xor
or
cmpsb
ja
out
test
push
sub
cmp
push
aam
mov
jmp
fcoml
lcall
sub
inc
adc
stos
loop
mov
insl
fists
add
dec
xchg
xchg
push
ficoml
lret
and
lds
mov
scas
mov
pop
jl
iret
and
lds
sbb
popf
jne
nop
sbb
repnz
cmp
cmp
data16
push
nop
add
xchg
mov
into
rcll
scas
int3
arpl
mov
mov
mov
cmp
mov
mov
mov
mov
divb
movb
jge
test
aad
mov
das
pushf
shll
inc
lret
dec
add
rorb
sub
in
xchg
mov
xor
pop
cld
scas
lahf
fdivrp
in
sbb
into
leave
xchg
andps
sbb
xor
sbbb
cli
fimull
mov
fwait
int3
loopne
pop
outsb
roll
stos
leave
push
fcomps
aaa
jb
cwtl
mov
mov
lcall
xor
jle
ret
dec
dec
mov
mov
add
push
fbstp
les
or
mov
mov
insl
fisubs
stos
mov
add
xchg
mov
add
cmpb
sub
stos
arpl
popa
je
sub
mov
sub
lcall
dec
hlt
int3
fdivp
sbb
cmc
xchg
xlat
popf
push
xchg
mov
sub
push
vhsubpd
es
cltd
inc
sbb
bnd
mov
sbb
push
sbb
sbb
inc
dec
loope
jp
repz
and
sub
adc
sbb
xchg
icebp
and
sub
push
push
cmp
push
stos
dec
inc
sbb
mov
mov
enter
out
das
dec
or
loopne
aaa
leave
lock
mov
pushf
xor
and
in
add
fbld
sti
pushf
push
jb
lods
mov
jl
mov
call
push
mov
pop
mov
and
rorl
push
cmp
pop
test
mov
push
dec
dec
out
lods
popa
clc
mov
dec
rcr
add
out
dec
jo
imul
mov
ds
cs
pop
rcrl
repz
dec
jecxz
ror
leave
adc
fmull
xchg
adc
imulb
mov
inc
cmp
add
pop
sbb
insb
push
cmpsb
dec
arpl
and
cmp
rorl
ror
pop
enter
inc
mov
repnz
sbb
inc
sbb
setb
aad
xor
pop
dec
sub
nop
inc
movsb
mov
js
repnz
sub
lret
jmp
in
sbb
popf
loop
test
mov
scas
mov
sahf
testl
xor
loopne
sub
cmc
test
mov
xor
sbb
or
xor
movsb
jnp
push
sbb
sub
sbb
cwtl
mov
sbb
or
int
xor
lods
lds
out
into
push
push
movsl
cld
popa
jae
sbb
cwtl
arpl
outsl
inc
mov
sbbb
inc
jecxz
jecxz
sub
sti
inc
roll
repz
movsl
out
mov
fld
and
shlb
mov
xor
mov
rcrl
idivb
ror
into
pop
or
mov
popf
jae
lock
ret
mov
xor
rclb
frstor
fs
leave
out
mov
mov
call
sbb
test
mov
mov
pop
mov
int3
adc
ss
mov
rcrl
adc
mov
shlb
mov
pop
mov
cs
lret
dec
jge
mov
mov
scas
add
cmp
xor
or
es
cmp
repnz
ja
adc
hlt
les
arpl
push
push
mov
pop
clc
dec
xor
cmp
push
call
adc
out
filds
xor
pop
and
mov
pushf
sbb
and
cltd
sub
lcall
lods
xor
xor
cmpsb
push
dec
mulb
sub
add
xor
jae
adc
mov
pcmpeqw
arpl
out
push
orb
push
xchg
popf
mov
mov
in
inc
nop
add
in
pop
scas
xor
mov
cmpsb
sbb
cmc
or
push
sub
add
out
pop
cmp
inc
dec
in
pop
mov
adc
jnp
orb
test
dec
shll
mov
arpl
add
adcl
shrl
aaa
roll
lret
bound
or
hlt
rclb
scas
imul
inc
mov
push
lods
pop
int3
je
fdivs
pop
repz
sbb
fcomps
adc
xchg
fidivl
or
push
sbb
adc
mov
lock
dec
call
imull
sbb
pop
neg
xchg
mov
sbb
mov
add
add
lret
pop
gs
sub
xor
in
or
mull
sub
jne
subb
lret
ja
lcall
int3
arpl
mov
mov
fldl
popa
or
mov
arpl
lock
sbb
sbb
out
push
pop
mov
dec
iret
nop
xlat
add
gs
pop
cltd
movsb
testl
repnz
lahf
jbe
mov
outsl
xchg
push
lret
push
and
adc
pushf
sub
imul
dec
icebp
sub
int3
mov
inc
inc
je
je
int
mov
jb
or
fstl
lea
loopne
dec
inc
pop
arpl
dec
xor
push
sbb
out
add
in
push
movsb
stos
in
add
mov
hlt
inc
and
add
ljmp
xchg
ret
sbb
mov
jmp
outsl
popf
scas
dec
inc
enter
popa
adc
aad
adcl
jmp
insl
in
out
push
sbb
jge
and
loopne
sub
fs
pop
cwtl
out
mov
xchg
dec
adcl
xor
test
insl
movsl
cmp
xor
dec
in
sbb
fwait
dec
or
xor
in
dec
fildll
push
inc
xchg
mov
out
rorb
sbb
popf
ret
add
add
mov
push
ret
scas
add
dec
xchg
push
stc
in
in
sbb
cmp
sbbb
lock
les
icebp
mov
mov
sbb
adc
jno
iret
insl
js
mov
pusha
lods
test
mov
ret
dec
cmp
sub
jl
xchg
jne
test
sar
mov
pop
shll
sub
outsl
aas
cwtl
cmpsb
jle
orb
dec
or
scas
sbb
aas
mov
xor
mov
insl
xor
push
dec
xchg
scas
cltd
push
test
shlb
jge
lods
pop
rclb
xchg
data16
pop
stc
xor
fcmovnu
repnz
iret
mov
iret
mov
fadd
outsl
push
ss
mov
push
scas
cli
xchg
ret
pop
sbb
pop
iret
test
sub
sbb
inc
adc
into
aam
out
addb
push
jg
jle
sbb
mov
ret
es
jmp
xchg
xchg
adc
loop
aad
jp
lods
push
jns
pop
cmpsl
inc
out
push
jle
aam
out
push
sarl
insl
push
ja
cmp
cmp
or
xchg
cld
subl
push
push
push
imull
popa
mov
sahf
jo,pn
or
push
insb
xorb
repnz
jns
test
hlt
sahf
dec
xor
daa
xor
push
lret
or
push
mov
rorl
out
je
push
push
imul
jb
cmp
or
out
xor
dec
clc
lret
pop
push
fdiv
xor
jbe
leave
into
int
and
sub
cmp
sub
sbb
and
orb
inc
das
mov
xchg
xchg
arpl
nop
hlt
dec
push
jmp
lods
les
cmp
out
xor
mov
push
insl
lret
push
mov
mov
jecxz
icebp
addr16
pop
mov
je
pop
ds
testb
mov
dec
mov
in
insb
movsl
rclb
mov
or
mov
xor
xor
lock
loope
cwtl
loop
sub
out
pop
inc
xor
jmp
movl
or
mov
sub
push
pop
pusha
jl
jmp
and
je
push
rcrb
in
lock
das
add
xchg
xor
fisubl
xchg
xor
cmp
cs
cmp
push
lahf
movsl
out
jo
mov
inc
xchg
sbb
fldenv
xchg
dec
or
icebp
sbb
ds
sub
jnp
in
pop
imul
inc
test
cmp
dec
push
stos
pushf
pop
decl
push
int3
clc
cmp
fsubrp
add
lret
jmp
lea
callw
xor
push
jnp
pop
shr
sarb
es
dec
dec
mov
fstps
out
push
jmp
daa
fildll
add
mov
pop
insl
xor
cmc
daa
fsub
dec
sub
scas
pushf
repz
sub
ret
mov
cwtl
fmuls
cmp
stos
ret
mov
jp
and
gs
ret
jp
sbb
out
sub
fwait
leave
test
out
adc
pop
jb
xchg
pop
adcb
or
sub
fwait
push
jno
arpl
pop
sarl
jo
pushf
cmp
and
mov
orb
fwait
jno
dec
push
pop
mov
aaa
jnp
popa
push
mov
outsl
mov
mov
mov
jnp
lods
mov
cld
lods
cmp
adc
bound
jg
push
outsb
es
aaa
out
rcr
xor
loop
imul
pop
sub
cs
lock
jg,pt
test
mov
lods
mov
clc
pop
add
imul
or
and
stc
sub
testb
pop
mov
lds
dec
adc
sahf
stos
icebp
xchg
push
mov
or
cwtl
lret
mov
test
imul
arpl
iret
sbb
mov
adc
cld
or
mov
push
mov
cld
cmpsl
push
imul
cmp
add
aaa
or
or
jb
adc
lret
sub
mov
sbb
add
add
push
sub
cltd
lahf
mov
cmpsb
xchg
scas
les
lods
lds
mov
sti
cli
pop
inc
nop
inc
loope
and
lock
adc
xor
int3
add
cmp
sub
stc
pop
outsb
xchg
notb
push
repnz
inc
mov
addr16
jae
daa
and
repz
cs
lahf
mov
push
es
scas
pop
sbb
jmp
nop
mov
out
fnstsw
aas
dec
sub
jns
push
dec
cmpsb
jnp
out
or
out
dec
mov
in
hlt
fstps
xchg
cmp
dec
fs
add
es
cli
push
test
sahf
pop
dec
aas
inc
jle
lods
lods
sub
in
fcomps
cli
rcrb
or
jo
lods
loop
fcom
adc
fldl
push
rcl
and
mov
sub
imul
xchg
adc
dec
and
in
jo
sbb
ss
popf
mov
cli
dec
sbb
cmpsl
add
inc
stos
enter
add
mull
rcrl
pop
bound
cmpsb
test
out
das
mov
xchg
sub
push
mov
test
mov
adc
or
or
addr16
ljmp
mov
cwtl
in
daa
pop
ljmp
fwait
xor
or
or
clc
adc
stc
fwait
inc
out
out
fsubl
insb
add
jo
xchg
xlat
xchg
icebp
xor
mov
daa
sbb
mov
enter
xchg
cs
xchg
lahf
insb
xchg
aas
mov
pushf
dec
icebp
int
ret
push
scas
daa
sub
adc
loope
clc
add
push
orl
out
add
sub
sub
imul
test
jl
aam
cmp
stos
das
fwait
cmp
dec
divb
mov
scas
dec
sarb
cmpsb
adc
mov
mov
out
shrb
cmpsl
popa
jecxz
fstpl
mov
ljmp
inc
shr
dec
sbb
xchg
pop
bound
pusha
in
scas
ficoms
icebp
out
lret
adc
pop
jp
sbb
lahf
cmp
popa
icebp
inc
pop
pusha
dec
dec
clc
sbb
dec
sbb
cmc
mov
add
mov
jmp
cmc
pushw
mov
ja
pusha
xor
push
jne
scas
inc
cmp
inc
and
clc
push
mov
push
pop
add
addr16
loop
mov
mov
lods
xor
push
aaa
pushf
pushf
xchg
push
int3
sub
pop
setg
pop
fsubr
insl
xor
in
mov
xchg
out
pusha
fcmovnbe
movsl
cmp
jnp
iret
lods
xchg
aam
add
scas
or
inc
and
pushf
sti
push
aaa
orb
sbb
xchg
xchg
ret
adc
bound
cmp
xor
push
lea
test
adc
ret
outsb
rorb
xor
andl
sbb
jnp
lcall
mov
in
in
lret
pop
ja
xchg
in
mov
orl
lods
test
imul
and
adc
sub
mov
pop
test
pop
xor
stos
flds
loopne
pop
mov
popa
lds
jmp
inc
aad
xchg
addr16
pop
movsb
and
fld
lcall
pop
mov
or
dec
stos
imul
push
sti
or
leave
out
add
or
mov
inc
lcall
mov
enter
enter
into
sub
inc
push
xchg
fistpll
pop
fistl
vprotd
add
lret
test
pop
lcall
and
test
mov
push
mov
in
lock
pop
bswap
stos
mov
not
mov
lods
jmp
lock
add
movsb
inc
iret
push
cmp
push
out
jne
add
jecxz
mov
xchg
or
loope
inc
out
insb
int
imul
push
jne
adc
mov
add
adc
add
jecxz
adc
or
lea
mov
pop
int
mov
push
sub
cli
aam
idivl
inc
ret
fnstsw
cli
ret
xor
shll
lock
jmp
fwait
pop
pop
adc
push
arpl
jne
into
shl
cwtl
test
insb
add
mov
jb
aad
push
sti
loope
fimuls
iret
movsl
or
fstl
add
jle
pop
jle
sub
subl
mov
aad
mov
fstpt
mov
sub
test
imul
cwtl
sbb
mov
cltd
adc
cmp
stc
lcall
iret
scas
aas
loope
xchg
mov
clc
xor
dec
adc
nop
ret
jecxz
push
sbb
insb
int3
dec
movsb
or
push
mov
inc
out
xlat
pop
push
pop
cmp
mov
cmpsb
cli
dec
pop
imul
insb
cmp
sub
add
push
das
xlat
push
test
bound
push
repz
subb
out
push
jo
adc
pop
mov
repz
arpl
dec
or
pop
mov
aam
and
cmpsl
mov
cmp
mov
mov
sub
int3
aam
or
xlat
jns
or
pop
stos
shll
pop
ljmp
jle
add
fisttpl
clc
adc
sub
adc
ja
imul
es
je
cmp
ret
insb
mov
pop
dec
mov
fsubl
push
cwtl
in
mov
rorb
ja
orl
lahf
mov
jae
mov
int3
movsl
adc
aad
or
push
pop
cmc
inc
enter
test
sbb
test
gs
stc
roll
jecxz
iret
adc
mov
push
pop
xchg
sbb
in
jbe
clc
dec
enter
stos
push
fdivrs
sbb
add
and
shll
xor
adc
arpl
sbb
test
xor
shrl
mov
dec
dec
mov
mov
jge
lock
stos
mov
push
push
mov
test
pop
inc
cmpsb
or
sbb
pop
shrb
add
mov
jp
dec
push
xchg
jge
xor
inc
std
imul
int
mov
stos
xchg
ds
xor
push
inc
lods
cmp
test
in
or
out
popa
xlat
add
push
fwait
out
push
xchg
mov
test
int
push
and
inc
addr16
insb
imul
lods
scas
sub
push
mov
push
jmp
or
fists
lret
adc
mov
xchg
in
repnz
ret
cwtl
sarb
lods
mov
hlt
aaa
shl
mov
pop
mov
xchg
insl
imul
rcl
aad
cltd
imul
and
cld
subb
pop
and
pop
lods
das
shlb
sub
inc
mov
or
fwait
push
sbb
cmpsb
inc
mov
and
xlat
js
lds
jle
jns
frstpm(287
outsl
and
push
faddl
aaa
cmp
xchg
jae
xor
leave
mov
addr16
mov
sub
mov
mov
mov
xor
pop
lcall
or
sub
daa
lods
cmc
sbb
int3
ja
mov
mov
xchg
dec
insl
stos
hlt
fstl
inc
sbb
xor
aad
cmp
mov
xchg
xchg
inc
inc
cmp
mov
fucomp
mov
xor
push
jns
movsb
push
cmp
sub
xor
mov
decb
pusha
mov
ds
fiaddl
call
cld
bound
and
je
and
jle
orb
inc
push
mov
in
lret
pop
adc
scas
fidivl
sbb
push
sahf
in
mov
iret
pop
jle
cmp
jbe
test
jle
dec
int3
pushf
nop
repz
call
pop
ficompl
pop
cmp
cmp
push
mov
aas
pop
insb
mov
sarb
sbb
xchg
jmp
fcos
das
xchg
adc
ja
test
sti
popf
sub
cmp
push
popl
pop
loopne
std
pop
test
inc
lcall
dec
ret
mov
lret
jmp
aaa
push
dec
sbb
pop
pop
sub
mov
xor
loop
ljmp
nop
imul
ja
adc
pop
xchg
lods
sarb
pop
and
scas
sub
es
repz
icebp
and
xchg
inc
sub
inc
lret
jns
mov
out
xchg
cli
stos
push
leave
or
mov
adcb
or
mov
jnp
push
xchg
xor
outsl
xchg
push
in
mov
ret
test
sub
or
mov
jns
insb
jle
pop
call
adc
rclb
ret
sub
bound
mov
js
add
les
adc
repz
mov
jecxz
mov
mov
mov
scas
loope
xlat
jg
pop
orl
cmp
jo
in
in
mov
ss
test
sbb
gs
sub
dec
pop
into
aam
repz
les
push
ret
xchg
mov
out
mov
cmpsb
lds
pop
insb
sub
flds
or
daa
lods
and
pop
mov
mov
and
xor
pop
add
test
xchg
repz
popf
dec
xor
pop
pop
dec
xchg
hlt
mov
data16
inc
push
enter
test
divl
rcl
cmp
inc
add
lret
sub
fucomip
xor
xchg
jne
xchg
ljmp
add
xchg
xchg
mov
cmp
sub
push
mov
icebp
mov
cmp
pushf
arpl
cmp
xchg
shrb
dec
and
js
xor
fnstenvs
lahf
push
push
maxps
pop
xor
mov
xor
mov
les
add
adc
push
jae
stc
dec
push
lock
cmp
or
lds
xchg
mov
lods
out
cwtl
pop
std
gs
es
adc
pop
mov
loop
inc
jmp
push
push
lock
lcall
fwait
std
out
shl
jne
lods
fstpl
ret
xchg
jbe
sub
xor
loope
ret
aaa
call
cli
add
bound
sti
ficoml
jmp
mov
push
add
enter
xchg
inc
icebp
sarb
std
mov
lds
repnz
test
data16
sti
cmp
mov
clc
xchg
insb
and
and
pop
shll
jmp
and
inc
add
mov
mov
add
mov
xchg
loop
pop
mov
outsb
stos
jne
jnp
jl
jnp
pop
sbb
in
lcall
jnp
imulb
xlat
js
testb
std
lahf
popf
scas
fnstenv
repz
rorl
jge
or
lret
cld
push
fimull
inc
imul
mov
inc
cs
xchg
loope
and
fldl
pop
inc
mov
int3
or
adc
scas
inc
mov
mov
inc
cmc
pop
xor
cmc
pop
arpl
fidivrs
add
jmp
loop
cmp
jg
cmp
xchg
ja
jge
dec
ds
xlat
mov
int
mov
inc
dec
push
sub
je
call
outsb
cmp
or
jle
and
xchg
iret
push
out
iret
inc
sahf
jmp
out
movsb
stc
and
or
int
in
pop
insl
cltd
movsb
das
mov
loop
fsubrl
loope
repz
jno
out
ljmpw
in
scas
fwait
xchg
es
scas
xor
iret
jns
lret
adc
mov
repnz
int3
mov
gs
imul
cld
stc
jle
sbbb
mov
out
sub
ja
or
adc
repz
ja
push
pushf
test
xchg
add
xchg
mov
int3
adc
jae
mov
pop
daa
adc
ljmp
mov
pop
cmp
push
in
mov
xor
dec
xor
fnstsw
sbbb
ret
pop
sub
leave
call
rep
sub
ret
cmpsb
mov
and
imul
mov
int3
out
cmp
js
sub
dec
in
xor
xchg
xor
test
call
pop
inc
movsl
add
mov
inc
ljmp
fs
sbb
push
pop
stc
enter
pop
pop
jno
inc
mov
jle
enter
mov
dec
insb
rolb
je
inc
cmpsl
pop
cmp
subb
ret
int3
adc
js
mov
in
dec
icebp
xlat
pop
add
xchg
add
add
and
je
ja
je
sbb
cmp
cld
js
mov
pop
lret
or
out
cli
loope
push
sbb
idivl
rorb
dec
out
dec
mov
pop
jnp
sub
add
push
push
stc
aam
mov
mov
jmp
mov
nop
inc
es
or
lods
ret
jae
in
stc
sarl
arpl
jno
data16
inc
pop
jnp
rcrl
or
and
aad
xchg
in
iret
mov
mov
adc
cmp
leave
jb
or
andl
or
cmp
aam
cmp
mov
out
push
mov
add
push
mov
imul
mull
lea
lfs
imul
cmpl
push
xchg
out
dec
aam
movsl
pusha
ret
sbb
cs
xor
lcall
dec
push
inc
push
mov
fcoms
push
push
int3
clc
xor
negb
lock
mov
pop
or
xchg
jae
cwtl
inc
jo
add
mov
popf
inc
and
in
dec
sub
adc
mov
inc
ficomps
or
dec
push
sahf
fsts
xchg
add
es
bound
mov
sub
mov
inc
mov
pop
iret
repz
fwait
rol
jns
push
xor
cmp
inc
les
xor
test
jnp
fists
cmpsl
jo
sbb
or
jno
mov
outsb
ja
mov
mov
pop
mov
xchg
aas
in
push
inc
loopne
pop
loopne
sbb
pop
std
sbb
mov
idivb
gs
sbb
cmp
mov
dec
rcl
mov
cmpsl
cltd
test
sahf
cmpsb
repz
mov
test
pop
and
and
insb
rcrb
lods
push
cltd
adcl
into
jbe
out
data16
adc
jecxz
movsb
test
add
mov
fs
arpl
adc
xchg
cmp
rcl
jae
pop
fs
imulb
and
lods
imul
mov
cmp
in
test
loopne
adc
dec
jns
stos
push
add
jo
lret
jnp
aam
aas
addr16
pusha
jmp
or
gs
jmp
ds
mov
je
in
mov
jo
mov
adc
push
or
push
add
jmp
insb
and
mov
aam
addr16
xchg
jno
add
insb
pop
push
out
enter
sbbl
je
imul
imul
test
cmp
outsl
sub
in
lods
push
in
popa
ja
inc
mov
repnz
mov
imulb
mov
xor
in
bound
pop
mov
and
mov
push
insb
out
cmp
shl
stc
out
loope
rcll
xlat
leave
shl
repnz
jno
daa
cmp
cmp
jle
out
mov
subl
scas
shll
jg
sbb
lcall
stos
mov
mov
testb
cwtl
aad
lea
xor
sbb
sub
clc
adc
fistpll
movsl
test
loopne
push
push
sbbl
push
jno
cmp
lret
pop
stos
xor
call
jno
std
test
mov
cld
jmp
sbb
push
repnz
and
stc
jmp
push
adc
inc
push
mov
int
adc
xchg
out
andl
mov
fisubrl
shll
pop
fdivs
scas
sbb
pop
mov
mov
test
test
lahf
or
add
xchg
add
add
in
add
inc
ja
xlat
enter
mov
mov
mov
out
jbe
andb
push
pop
push
xchg
ds
push
and
mov
arpl
into
inc
push
outsl
mov
inc
xorb
cltd
sti
pop
mov
jg
aam
scas
cmp
fidivl
adcb
cmp
mov
and
loope
movsb
outsl
mov
inc
repz
aas
mov
sub
shlb
jnp
xchg
xlat
mov
imul
xor
cmpsb
inc
in
jle
or
out
pop
in
jmp
push
imul
jle
notl
das
fidivl
idivl
xchg
je
ret
out
xchg
idivl
adc
mov
addr16
loopne
dec
mov
pop
jge
and
les
sbb
add
jns
cld
out
rorl
and
ss
lods
addl
inc
rolb
je
xchg
pop
int3
sbb
mov
testb
outsb
adc
gs
into
xchg
mov
stc
push
mov
adc
jmp
add
push
push
add
dec
movsb
xchg
mov
cmovs
mov
fs
mov
ficoml
add
dec
jl
sbb
fsubrs
mov
mov
push
xor
jns
mov
inc
add
out
or
sbb
dec
in
fsubrl
aaa
stc
sarl
das
pop
test
punpckldq
mov
lods
cs
sbb
mov
mov
adc
add
dec
scas
or
sub
hlt
mov
inc
mov
shll
es
lret
mov
jmp
cmpsl
mov
js
jg
jbe
push
and
nop
or
aam
aam
jo
mov
test
adc
orl
ljmp
pop
arpl
addr16
stc
repz
mov
mov
dec
jb
ljmp
mov
sbb
lret
cmp
and
aas
dec
jmp
out
imul
out
rcrb
mov
out
jo
mov
and
cld
push
mov
mov
xchg
jmp
jbe
aas
xlat
mov
inc
les
js
push
xor
dec
pop
push
rol
ror
xor
setns
dec
and
push
adc
imulb
mov
xor
movsl
hlt
mov
push
dec
add
push
cld
mov
roll
pop
aad
cmpsb
ss
mov
insb
dec
ja
aaa
out
mov
fstps
xchg
dec
mov
cmp
or
or
pop
jl
adc
test
jl
aas
jns
push
stc
jnp
adc
stos
iret
xchg
xor
or
test
cmpsl
xchg
jle
mov
push
movsl
test
xchg
loopne
push
mov
push
jns
push
repnz
inc
shlb
dec
mov
cmp
cmpb
push
cmp
popl
loope
mov
das
popf
inc
dec
xchg
xchg
mov
shlb
pop
mov
pop
mov
jnp
cs
add
outsb
loopne
in
hlt
mov
std
sti
lds
cmpsb
jne
jl
repnz
ret
inc
jnp
xchg
jno
mov
mov
cwtl
lock
in
stos
jecxz
pop
test
jl
mov
adc
and
imulb
out
aas
and
out
inc
pop
cmpsl
pushf
in
sbb
push
sbb
dec
dec
mov
jno
mov
outsl
cmpb
icebp
xor
mov
mov
xchg
int
stos
arpl
mov
arpl
mov
clc
loop
mov
cmp
ja
mov
mov
decb
mov
mov
popf
loopne
in
loopne
sbb
jg
inc
xchg
mov
jae
loope
call
add
sub
rclb
popf
sbb
addr16
lods
popf
xchg
in
push
dec
fisubrl
and
sbb
hlt
pop
in
sbb
adc
daa
mov
decl
xor
add
jae
jne
outsl
movsl
dec
repz
sbb
adc
dec
je
int3
adc
fimuls
push
fbld
es
lahf
jmp
push
sbb
jno
mov
adc
clc
sbb
push
mov
adc
push
mov
mov
fsubrs
cltd
ds
outsl
add
sti
mov
and
push
pusha
outsl
enter
ds
or
cld
jmp
les
sub
addr16
mov
sahf
std
divb
dec
outsb
cmp
add
mov
ret
outsb
sub
xor
push
in
pushf
pop
sbb
lret
sbb
xchg
xchg
mov
xor
mov
xchg
enter
and
test
pop
pop
leave
imul
jo
push
ljmp
gs
inc
mov
mov
das
aad
inc
insb
imul
jns
and
pop
js
cmp
test
ret
outsb
fwait
mov
push
lcall
mov
fstpl
xchg
xchg
ret
cltd
dec
and
pop
popf
insl
fnstsw
test
mov
aaa
xchg
and
outsl
jnp
adcb
xchg
jle
jle
jne
fnstsw
mov
and
jecxz
popf
lret
loop
lret
aas
xor
mov
dec
fcoms
cld
sub
and
ds
movsb
lahf
push
loope
push
pop
aas
mul
addr16
jmp
cmp
sub
sbb
arpl
das
adc
stos
push
sbb
leave
add
inc
xor
notb
sbb
mov
xchg
jp
pop
cmp
insl
mov
xchg
xchg
stc
ljmp
add
push
in
sbb
push
adc
sarl
ja
repnz
jmp
dec
cmpsl
testb
or
or
ss
iret
dec
dec
sbb
sbb
xorl
pop
mov
mov
mov
addb
hlt
adc
jb
addr16
scas
cmp
test
xor
test
lds
mov
push
and
imul
push
std
pop
cmp
mov
test
mov
add
call
sub
adc
mov
and
pusha
cld
bnd
sti
mov
sbb
push
push
inc
cmp
test
aas
pop
out
inc
iret
sbb
mov
pop
pusha
std
and
sbb
call
dec
push
es
xchg
inc
jne
or
aaa
test
dec
cs
outsl
pushf
call
xchg
test
sbb
push
cmpsb
sub
in
test
cmp
insb
fisttpll
xor
cld
push
mov
fwait
ljmp
ret
sbb
andb
insl
test
jae
sbbl
mov
xor
popa
and
mov
btc
xor
mov
fadds
or
cmpsb
xor
mov
xlat
pop
cmc
dec
pop
pop
pop
icebp
cmp
imul
pop
sahf
adc
insb
cmp
sbb
mov
adc
jbe
push
and
loopne
dec
sub
inc
test
inc
jecxz
push
shlb
int3
popf
dec
adc
xchg
js
pushf
or
inc
insb
cld
jns
cmp
in
iret
pop
and
or
mov
in
mov
test
rolb
mov
inc
xor
sub
mov
dec
inc
outsb
pop
push
and
ljmp
jnp
popa
daa
push
sbb
sbb
push
sbb
rcrb
movsl
xchg
imul
cmpb
jmp
leave
pushf
cmpsb
mov
addl
cmp
pop
cmp
jae
cmp
pop
and
adcb
mov
mov
out
jno
movsl
les
mov
sub
mov
xor
lea
out
hlt
in
and
cmp
popa
xchg
mov
lret
sbb
ret
imull
pusha
or
mov
sub
std
aad
cmpsb
cs
jmp
cmpsb
pusha
and
mov
mov
adc
xchg
daa
lret
dec
insb
sbb
mov
mov
mov
into
sbb
dec
out
inc
rclb
push
mov
mov
pop
enter
jo
fwait
icebp
fwait
add
sub
movsb
jnp
aam
mov
in
jnp
jle
das
mov
jle
nop
dec
cld
xor
rclb
jl
test
inc
in
repz
add
leave
filds
xor
push
rol
sbb
rcll
and
aas
push
mov
es
je
sbb
fcmovu
ret
dec
mov
adc
test
rcrb
sbb
adc
ja
dec
and
push
fcomps
stos
insb
mov
popa
dec
lahf
jno
pop
icebp
push
lods
sarb
mov
pop
fisttps
enter
jecxz
fisubl
mov
jae
dec
mov
dec
adc
mov
jmp
add
lea
inc
sti
sbb
jo
adc
addr16
pop
sbb
mov
mov
rorb
out
sub
and
inc
ficomps
xchg
int
ljmp
pop
rclb
movsl
rorb
lahf
cmp
bound
sub
push
inc
in
sti
push
test
stos
jle
sub
inc
aam
jl
int
xor
dec
mov
mov
hlt
leave
js
mov
out
mov
xor
xor
mov
outsb
sti
dec
in
and
or
mov
cmpsb
insb
jle,pn
mov
ljmp
into
xlat
stos
mov
mov
bound
ss
pop
fdivr
jp
xchg
sti
add
dec
adc
aam
lcall
mov
dec
mov
rolb
xor
xor
push
pop
lret
scas
mov
icebp
testl
addl
mov
flds
jbe
and
in
cmc
and
call
movsb
or
cmpsl
xorb
adc
or
jmp
add
cmp
sub
lds
xchg
pop
loopne
loope
sub
lret
nop
mov
jmp
inc
adc
sbb
lret
jg
sti
ret
xchg
out
jbe
sbb
sub
shll
xlat
mov
pop
pop
fdivrs
scas
subb
and
add
xlat
push
in
in
jae
adcl
in
outsl
aam
lock
xor
pop
test
test
filds
dec
sbb
inc
xchg
fiadds
xchg
push
out
mov
mul
push
insb
dec
xchg
adc
shrb
test
fists
sti
inc
cmpsb
jmp
jo
jg
clc
popf
and
xor
mov
lcall
scas
pop
inc
ja
aaa
cli
or
sahf
mov
add
or
mov
adc
pusha
ficomps
cmp
ret
lea
push
adc
and
cmp
clc
inc
cli
mov
mov
es
or
fstpl
xchg
in
pop
fcomip
ds
cs
inc
aad
mov
aaa
andb
int3
inc
mov
push
mov
xchg
dec
cmpl
inc
lock
cmp
sbbb
jecxz
mov
adc
inc
dec
xor
repnz
flds
sar
xchg
push
xchg
mov
fdivl
lods
pop
lahf
cmp
and
inc
arpl
sub
pop
pop
loop
mov
filds
out
ret
pop
jae
xchg
das
add
and
adc
mov
sub
jl
gs
gs
or
adc
in
iret
push
arpl
mov
mov
fs
inc
mov
or
repz
inc
fistpll
add
mov
into
cmpsb
idiv
aad
imul
xchg
jmp
ret
stos
mov
ficompl
sar
or
repnz
jg
pop
shrb
dec
inc
adc
and
mov
psllw
push
das
loopne
cmp
mov
lahf
pop
mov
cltd
jl
clc
cmpb
rorb
sub
ret
out
test
xchg
jle
popf
jb
lahf
mov
mov
out
and
and
in
into
leave
sub
jp
repnz
pop
or
outsl
mov
lret
xlat
inc
sub
push
icebp
xchg
add
in
inc
jbe
add
mov
mov
mov
icebp
push
xor
add
pop
and
mov
xchg
inc
jl
fwait
popf
mov
mov
fdivrs
adc
imul
mov
imul
imul
mov
rol
cltd
leave
aam
inc
adc
imul
hlt
js
popf
adc
jp
mov
mov
pusha
in
xchg
push
jb
adc
mov
add
push
loop
stos
inc
loopne
lods
dec
fcmovnbe
iret
add
dec
xor
mov
out
int
out
xchg
and
jns
repz
test
in
out
add
cmp
ss
inc
mov
xchg
shll
mov
add
aam
jno
shrb
fisttpl
movl
lea
cmpsl
test
shll
cwtl
cmc
movl
adc
mov
insl
pop
fsubrl
stos
sub
fbld
inc
test
add
mov
jmp
fsubl
inc
xchg
roll
fcoml
adc
sbb
stos
movsb
cmpsl
and
test
mov
fildl
push
pop
scas
out
adc
dec
dec
pop
push
mov
mov
repz
or
adcb
or
xor
inc
aaa
jbe
cmp
push
ss
mov
pop
mov
mov
test
push
add
pop
cmp
adc
in
imulb
pop
xor
inc
bound
in
dec
add
jne
inc
cmpsb
add
dec
mov
arpl
rcrl
push
jmp
das
lcall
dec
xor
lahf
rclb
xor
daa
mov
fsubrl
inc
inc
daa
hlt
jg
lahf
cmpsl
push
daa
xchg
fadds
shrb
add
adc
add
stos
pop
repnz
sub
sub
mov
test
cmp
mov
popf
pop
push
cmpsb
inc
ljmp
mov
int
xchg
push
dec
push
filds
lret
imul
arpl
mov
es
jl
xchg
adc
cmp
and
inc
in
mov
mov
sbb
dec
dec
lcall
aaa
and
inc
jg
enter
ds
in
mov
xlat
jl
dec
cmpsl
push
jb
popf
mov
xlat
leave
call
stc
dec
xchg
add
pop
sub
fsubs
pop
ret
movsb
dec
push
jmp
nop
dec
mov
lcall
fistl
loopne
xchg
jb
shrd
push
and
es
aad
ficomps
mov
popa
cli
fwait
mov
jae
pop
fists
fucom
and
pop
mov
and
clc
in
and
fucomi
jns
addr16
ja
sti
stos
or
sbbb
jb
or
xchg
lock
sti
popf
scas
add
scas
loopne
push
inc
jmp
stos
push
test
sbbb
ja
mov
mov
js
popf
xchg
and
movhps
fidivl
xor
sbb
gs
cmp
fidivl
mov
in
jno
adc
pushf
loopne
mov
in
inc
in
aam
sbb
pop
shrb
sbb
cmc
cmp
mov
ja
clc
cmp
mov
repnz
push
dec
andl
xchg
push
xchg
cmpsb
xchg
outsl
sbb
out
push
mov
in
cld
cmp
iret
inc
iret
and
test
ret
sub
test
pop
fwait
call
mov
xchg
xor
sbb
adc
test
fwait
data16
push
movsl
mov
out
scas
loopne
ss
cmp
adc
mov
clc
cmp
xor
or
subb
aas
enter
push
jne
push
mov
cmpsb
adc
testb
sti
out
gs
mov
aas
loopne
adc
adc
mov
lods
ljmp
inc
inc
mov
xor
pop
pop
scas
jecxz
ret
mov
jecxz
push
aad
cmp
iret
or
or
xchg
mov
adc
loop
push
and
jae
pop
fcoms
dec
cmp
add
shl
jmp
jp
fcomps
mov
cld
jle
mov
stos
xchg
push
inc
add
inc
stc
pop
lea
and
mov
cs
pop
sbb
nop
and
setbe
icebp
push
or
add
scas
aas
arpl
in
mov
inc
data16
cmp
xor
mov
sub
mov
gs
fcompl
ja
and
push
out
push
std
mov
fst
xor
nop
test
imul
fisubl
inc
loop
and
dec
adc
xchg
fsubrs
lcall
add
sbb
lods
in
ja
in
out
in
mov
sbb
jg
xchg
lods
movsl
xchg
cwtl
cs
imul
xchg
aad
jnp
mov
jne
jp
xor
data16
dec
testl
mov
enter
daa
aam
mov
fmuls
loopne
inc
inc
mov
imul
sbb
enter
push
test
and
jne
lcall
push
mov
inc
push
jmp
stos
adc
int3
in
outsb
shrl
and
or
cwtl
add
jne
repnz
mov
xchg
pop
lea
dec
orb
sbb
mov
fs
jg
mov
test
cwtl
pushf
add
dec
inc
xchg
call
jp
insb
sub
lock
pop
mov
pushf
xor
dec
ljmp
stc
mov
fcomps
inc
fcoml
bnd
out
mov
fsub
insb
xor
rorb
insb
btc
pop
mov
in
lret
data16
pusha
push
dec
iret
inc
leave
adc
std
mov
cltd
cs
xor
testl
fcomps
and
xchg
jo
cwtl
outsl
jb
loope
lret
ljmp
xchg
xor
pop
inc
jl
xchg
mov
outsb
jmp
lds
loope
call
loop
jbe
in
xchg
cmp
sub
or
cmp
adc
movsb
push
jns
pop
insb
mov
rorl
out
fs
movsl
mov
shrb
fisttpll
push
push
mov
push
mov
lock
stos
stos
mov
cltd
in
push
jg
fucom
mov
adc
cmp
sub
imul
add
imul
fldenv
mov
mov
mov
rcr
fucomi
pop
lds
xor
js
and
push
add
repz
sub
pop
ret
or
jne
xchg
push
mov
sbb
inc
dec
ja
jnp
fs
sub
popl
out
mov
mov
imul
stos
jae
scas
inc
jle
cmp
pop
and
adc
pop
jge,pn
jae
inc
lret
push
in
fwait
ljmp
jp
movsl
sbb
out
fldl
aad
enter
roll
xchg
sti
fpatan
add
xor
mov
ficoml
pop
mov
incl
fsubrl
movsb
leave
insb
iret
cmp
test
mov
dec
jne
adc
jae
test
jg
and
push
std
jns
xlat
add
inc
mov
out
sbb
jo
mov
push
aaa
push
sub
mov
jnp
pop
add
push
xchg
sub
adc
jo
mov
jnp
pushf
aaa
mov
mov
jg
dec
or
imul
pop
dec
sub
jb
xlat
jp
adc
mov
cmp
std
leave
test
in
lock
add
inc
pop
ds
push
push
xchg
popa
subl
lds
stc
mov
js
in
xor
pushf
call
movsl
inc
mov
sbb
scas
hlt
call
xchg
insl
cli
jae
add
cmp
add
je
movsb
or
mov
push
pcmpeqw
inc
mov
mov
push
fcoms
les
jl
je
lahf
push
stos
mov
sbb
pop
or
pop
xor
fwait
add
cmpsb
dec
rolb
jb
ficomps
mov
xorb
add
rcll
punpckldq
add
es
into
das
fdivrl
popa
xchg
xor
lret
fwait
sub
inc
stos
ja
xchg
mov
sub
jne
adc
lods
scas
or
mov
aaa
lock
fnsetpm(287
imul
mov
fwait
sub
test
das
and
push
mov
ret
ss
add
jecxz
mov
fs
push
cltd
popf
ljmp
xor
aad
mov
pop
gs
test
std
xchg
dec
mov
dec
int
lods
pop
movsl
call
out
jge
loope
dec
mov
mov
imul
pusha
sbb
pop
sub
dec
es
mov
push
cmpsl
jb
push
mov
jns
dec
clc
adc
add
sbb
gs
xor
insb
in
push
push
sub
cmp
mov
icebp
out
push
jmp
sahf
mov
pushf
mov
sbb
or
xor
pop
je
lods
mov
inc
das
scas
out
sbb
mov
add
mov
negb
fsubl
pushf
cwtl
or
sub
push
aas
jle
cmpsb
mov
or
cmpsl
shrl
add
pop
mov
shll
inc
mov
ljmp
loope
outsb
jbe
cmp
out
or
or
xlat
ds
xadd
jge
inc
jo
push
mov
xchg
loopne
jge
insb
pusha
mov
mov
inc
adcl
out
push
dec
xor
xchg
xor
sbb
sbb
jp
push
add
mov
jnp
pop
sbb
push
enter
or
pushf
mov
pop
pusha
repnz
mov
push
mov
jg
shlb
nop
ljmp
dec
cmp
pop
dec
out
and
xlat
andl
and
pop
pop
mov
push
and
jl
andb
xor
outsl
pop
insb
aas
mov
inc
add
add
xlat
inc
fdivl
dec
fidivs
inc
jle
lea
sub
fstpl
mov
cmpsl
jp
mov
mov
lods
pop
test
inc
mov
ds
mov
add
jge
shr
ret
es
pushf
pop
add
fidivrl
cltd
pop
test
push
test
subl
notb
lret
insl
in
cmc
xchg
fisubrl
ljmp
push
cmp
xchg
dec
add
adc
cmp
imul
mov
repnz
rcll
stc
test
push
push
std
ret
xchg
in
out
divb
cmp
jb
pop
adc
mov
xchg
fdivrs
adc
lcall
stos
jns
cmp
push
pop
popa
pop
jge
aaa
fnsave
xchg
inc
clc
pusha
lret
jge
fbld
pusha
mov
fbld
dec
jno
add
inc
pop
pop
fcmovnb
dec
cmpsb
leave
cs
fidivrl
push
sbb
inc
lock
dec
pop
xorb
jmp
out
addl
cs
mov
jge
and
pop
or
mov
and
iret
mov
mov
pusha
clc
cmpsl
stos
mov
gs
lcall
adc
call
xchg
xor
mov
pop
repnz
sbb
mov
cmpsb
notl
out
stos
adc
loopne
int3
jecxz
daa
push
jp
subb
test
popf
mov
mov
iret
xchg
cmp
mov
jbe
push
jmp
mov
adc
sub
andb
repnz
nop
cwtl
push
sbb
mov
pop
pop
cmc
jg
lcall
jnp
daa
sub
mov
adc
push
scas
mov
idivb
and
cmp
xchg
lods
clc
pop
shrb
push
sti
lret
lret
xchg
movl
pop
lds
outsl
repz
cmp
xchg
mov
fdivr
imul
mov
mov
cmp
or
gs
inc
pop
mov
cmp
iret
lds
fs
inc
push
jmp
mov
fstpl
adc
mov
pop
insl
sbb
div
xchg
adc
lret
mov
pop
mov
outsl
push
mov
jle
dec
dec
cmp
jno
aam
mov
insb
roll
fimuls
lock
stc
lahf
loope
adc
rcrl
push
into
pop
jno
jmp
psrlw
jb
movsb
outsl
xlat
mov
cmpsl
pop
fldcw
das
xchg
add
dec
dec
dec
shrb
add
xor
pusha
pop
cmp
or
out
mov
into
out
daa
test
jb
stos
stos
cmp
sbb
and
mov
sbb
loope
xchg
mov
pop
vcvtps2dq
xchg
cmp
mov
inc
aad
inc
sbb
mov
push
mov
loopne
mov
sub
std
int3
mov
fsubrp
push
inc
and
mov
lock
sbb
inc
adc
das
jo
test
std
sbb
pop
or
loop
jbe
inc
fwait
loop
data16
mov
xor
shl
fsubrp
inc
aas
mov
mov
out
cmp
subl
repz
and
ret
filds
and
jbe
shll
ret
nop
lret
cwtl
int
sbb
push
pop
xchg
pop
orb
fs
lock
push
mov
fidivrl
pop
fisubl
call
jmp
sub
sub
xchg
or
sbb
scas
out
and
rorl
mov
mov
lods
daa
xchg
les
insl
popl
stc
ja
jne
and
cmp
cld
adc
movsl
xor
enter
jns
lret
and
mov
ss
xor
jnp
jl
sbb
mov
adc
ljmp
shlb
add
jns
mov
test
fdivrs
adc
into
jns
loopne
jp
arpl
dec
inc
imul
adc
xchg
adc
lcall
sarl
pop
add
jp
lea
cmp
mov
in
push
add
mov
add
push
lods
push
mov
jbe
add
sbb
ja
xchg
ja
push
movl
jae
dec
dec
mov
out
bound
hlt
stos
sub
xchg
in
loopne
loope
adc
adc
lods
fs
pop
cmp
pop
mov
fwait
cwtl
pop
and
cmp
js
ficoms
jg
in
xlat
push
shl
sub
mov
lret
test
mov
jo
xchg
sub
push
pop
ljmp
add
les
or
aam
int3
mov
xchg
fidivl
test
shll
mov
les
lcall
mov
sarb
push
push
and
mov
adc
xchg
out
cmpsb
inc
pop
or
aaa
jge
popf
mov
or
mov
mov
lret
sti
inc
rolb
rclb
jp
arpl
ficoml
xchg
movsb
mov
pusha
jp
adc
or
ss
loope
clc
and
fisubl
mov
mov
inc
sub
pop
int3
pop
xor
adc
dec
mov
push
je
jns
out
push
test
push
push
push
movsb
sbb
jecxz
mov
insl
or
push
imul
mov
fst
xor
xchg
arpl
pop
fstpt
pop
pop
enter
mov
in
pushf
and
pop
sbb
mov
cld
xlat
mov
outsl
enter
loopne
iret
stos
xchg
iret
cld
push
xor
adc
xchg
pop
jno
inc
xchg
dec
mov
ret
xor
cmp
fiaddl
inc
clc
dec
xchg
xchg
add
inc
test
scas
adc
xor
jnp
cld
xchg
inc
mov
mov
lret
sti
adc
push
das
int3
clc
movsb
or
inc
scas
sub
cld
stos
sub
xor
push
xor
aas
out
adc
enter
lret
sbb
mov
out
or
sbb
cmp
in
in
pop
cld
or
pop
fsubrl
xchg
mov
rolb
call
rcr
jecxz
sbb
ljmp
loopne
sub
xchg
in
push
icebp
js
pop
insb
sbbb
test
or
shll
das
shrl
addl
mov
mov
adcl
rol
test
jmp
and
cwtl
ss
pop
sub
lock
xor
mov
enter
vxorps
push
out
mov
cmpsb
in
stc
je
popf
adc
lock
iret
or
outsb
int
add
inc
in
cltd
cmp
cs
movl
xchg
dec
ss
mov
mov
push
dec
push
iret
pop
pop
jne
in
mov
dec
aad
jge
xor
dec
add
cmpsl
sub
cli
mov
mov
pop
test
jae
scas
jecxz
cmpsl
mov
decl
aaa
sti
sub
loope
testl
mov
inc
inc
push
jnp
xchg
pop
push
je
xor
sahf
movsb
cmpsl
lahf
aam
dec
pop
sbbl
fisubrl
rolb
imul
fnsave
repnz
imul
dec
adcb
outsb
mov
fcmovu
imul
pushf
mov
xor
mov
xor
mov
lods
repnz
jmp
fidivl
ja
lret
jne
xor
movsb
pop
mov
js
in
mov
push
pushf
lea
mov
lcall
cmp
jmp
daa
pop
mov
jle
gs
xor
rcll
push
scas
cmpsl
cltd
mov
call
inc
sarl
repz
fucomip
push
mov
dec
sbb
pop
xorl
xor
pop
mov
mov
je
push
pop
clc
add
into
cmp
aaa
xor
repnz
mov
imul
xchg
add
mov
lahf
iret
sbb
sbb
add
imulb
cltd
pop
add
adc
and
inc
test
loopne
gs
sahf
nop
push
lahf
icebp
mov
push
ja
pushf
popa
shrl
cmp
int3
pushf
mov
mov
flds
adc
pop
jle
dec
mov
int
imul
bound
inc
cmc
mov
mov
add
mov
push
push
push
xor
and
lea
mov
jae
adc
int
ljmp
popf
lock
inc
test
mov
and
lcall
pusha
push
sbb
popa
mov
lods
test
lea
mov
insl
sub
push
xchg
or
adc
mov
xor
repnz
sahf
cmp
mov
fldcw
and
inc
popa
mov
mov
fidivl
pop
movsb
dec
inc
mov
lahf
rorb
dec
leave
maxps
bound
insb
jmp
aam
adc
inc
lret
inc
aaa
or
shlb
or
test
lods
fldenv
int3
push
push
nop
mov
popf
repnz
int
repnz
jne
or
cwtl
pop
lock
fstpt
rorb
xor
mov
mov
mov
xchg
push
aam
bound
inc
cltd
pop
push
cmc
lcall
mov
pop
jp
sub
jae
dec
adc
mov
mov
mov
fcmovb
push
std
mov
mov
mov
inc
xchg
mov
lea
cltd
in
nop
mov
sub
dec
pop
int
ret
scas
fbld
jge
mov
push
pushf
out
adc
cmp
fstl
outsl
mov
in
or
shll
decl
push
push
and
jge
mov
sti
jo
roll
stos
jns
jp,pt
hlt
jne
nop
xchg
push
jno
popa
push
sub
xor
inc
push
push
popa
adc
imul
jno
cmp
or
pop
xor
jle
cmpsl
dec
mov
filds
sub
sbb
movsl
enter
or
in
jle
xorb
mov
mov
pop
sbb
dec
int
sub
jecxz
pop
mov
daa
movsl
mov
cmc
sub
push
imul
imul
loopne
adc
pop
stos
jno
imul
fstp
and
rcrl
jbe
loope
lock
xor
cmpsb
pop
add
fbstp
out
enter
popa
sbb
xchg
and
pop
lret
cmp
idivb
lret
xor
lea
sbb
std
movsl
cmpsb
test
in
imul
push
mov
push
ret
rcrb
xor
mov
mov
scas
xchg
lock
inc
cli
ret
or
popf
les
arpl
ljmp
int
insb
pop
inc
xlat
sbb
fnstcw
mov
ljmp
sub
pop
out
and
jg
add
insb
rorl
push
out
adc
pop
or
dec
and
lods
push
push
orl
sarb
inc
stc
pop
scas
and
adcb
cmpl
ds
cmpsl
jae
test
mov
adc
das
stos
mov
pop
iret
sti
ds
or
adc
sbb
es
inc
xor
mov
in
hlt
mov
mov
cmp
xor
mov
push
add
lea
and
push
mov
jae
sbb
fisttps
addl
inc
pop
pop
pushf
aaa
jmp
ds
inc
push
add
mov
in
push
in
arpl
lods
bound
out
inc
in
cld
lahf
ret
xchg
inc
repnz
daa
lcall
cmpsb
shl
push
fdivrl
mov
scas
mov
inc
es
push
insl
dec
ret
and
ds
cmp
stos
or
or
es
in
fbstp
lods
jnp
mov
mov
jge
mov
cli
outsl
jmp
add
cld
int
out
push
push
sbb
cli
mov
jnp
fists
push
and
int
or
popw
cmp
hlt
adc
pusha
popa
mov
sub
jmp
pop
jmp
aaa
lods
jg
movb
enter
jecxz
push
xlat
shll
jno
add
mov
repz
mov
das
adc
bnd
sub
cmp
or
out
sub
fsubr
cmc
push
dec
movsw
in
cmpsb
mov
cwtl
push
add
mov
stc
dec
push
dec
icebp
dec
xor
in
loopne
cmc
add
xchg
mov
push
pop
ljmp
adc
leave
popf
clc
mov
pop
js
pop
lahf
shrl
out
and
mov
sub
mov
dec
sub
int3
jns
bound
xor
pop
fxch
shr
mov
xor
and
icebp
icebp
notl
popf
cld
jp
xchg
cmp
xchg
push
add
lcall
push
sub
inc
mov
stc
dec
add
scas
aas
cmp
sbb
jp
xor
pop
fiaddl
ret
pop
jo
and
inc
mov
mov
test
subb
jb
xchg
in
popa
cmp
mov
orb
test
sbb
test
xlat
aaa
push
ret
xchg
in
pop
inc
lahf
jl
inc
inc
pop
imul
and
clc
fisubrs
jge
mov
int
xor
gs
insl
mov
push
ficompl
into
push
jne
in
movsl
xchg
mov
xor
loopne
inc
leave
inc
pop
adc
fdivl
int3
xor
cmp
jns
pusha
sub
cmp
inc
testb
xchg
ja
push
shll
xchg
movsl
decb
adc
sbb
dec
push
out
xchg
mov
out
and
ja
sub
sbb
rorb
mov
fsubs
push
add
pop
dec
dec
cli
cmp
hlt
shlb
iret
xchg
push
loope
mov
pusha
shll
dec
scas
cmp
test
cmp
clc
xlat
out
pop
dec
test
imulb
xchg
imul
sbb
jbe
in
pop
jns
std
arpl
and
dec
mov
or
scas
jg
jnp
push
and
xlat
lods
sbb
cwtl
test
jle
xor
jmp
add
dec
jmp
idivb
mov
repnz
lock
negl
pusha
or
xchg
icebp
jecxz
fstl
xchg
mov
fadds
push
xchg
sub
adc
xchg
pop
repnz
jecxz
jns
dec
aad
lods
mov
mov
sub
rcl
sar
je
aas
outsl
dec
scas
enter
repz
loop
jne
push
mov
or
data16
sbb
test
pop
in
xchg
lahf
mov
ret
push
cmp
loopne
mov
jmp
fstpt
pop
adc
test
stos
and
test
mov
loopne
adc
jmp
outsl
and
shlb
and
and
imul
gs
lock
push
inc
sub
inc
cmpb
mov
dec
stc
adc
scas
jle
aas
or
dec
inc
aad
sbb
aaa
iret
ss
ret
adc
xchg
lds
add
sbb
pop
push
dec
mov
mov
stos
subb
dec
shr
jo
xchg
inc
stc
mov
hlt
sbb
fcom
pop
cwtl
sub
mov
or
repz
jnp
add
sbb
jp
mov
sbb
ret
std
cmpb
pop
dec
sub
push
mov
or
outsb
dec
pop
inc
cmp
jb
cmpsl
into
icebp
pop
in
sbb
pusha
lret
outsb
add
andl
stos
inc
rcrl
bound
out
xchg
out
xor
dec
pop
ror
xor
xlat
call
sub
mov
rolb
mov
push
push
jnp
xor
frstor
cmpl
xchg
call
scas
xchg
or
ficompl
test
sub
int3
fcom
jg
mov
das
jmp
je
and
ljmp
dec
jbe
jle
push
jae
xchg
in
in
out
shrb
add
cmc
jg
pop
lods
and
out
js
adc
out
sahf
jp
inc
pop
in
lret
cltd
pop
insl
lds
ret
in
gs
ficompl
int
mov
int3
fwait
mov
pop
mov
push
add
pop
add
jp
divl
aad
in
cs
jmp
lcall
nop
dec
mov
fistpll
sub
imul
jns
ljmp
out
fwait
out
sbb
iret
mov
das
roll
jge
jae
negb
xchg
add
shl
or
fs
mov
xor
fisubrs
or
int
iret
ljmp
inc
xchg
ja
stc
loope
loopne
mov
push
outsl
andb
shll
sbb
mov
imul
mov
lcall
adc
scas
mov
jge
loop
ja
testl
imul
mov
jno
push
inc
jnp
inc
mov
loop
sbb
fisttps
jle
loope
push
xchg
push
mov
xlat
dec
cld
std
loopne
movsb
or
jp
rolb
jo
scas
add
xchg
addb
sbb
das
cmpsl
cmc
push
in
fisubrs
xchg
xchg
les
and
shrl
or
mulb
sbb
xor
cmp
push
loop
fs
repz
inc
adc
xchg
xchg
addr16
or
int3
push
in
jno
outsb
jl
aaa
stos
lret
jb
mov
pmulhuw
std
push
mov
bswap
es
mov
lahf
or
and
das
sub
sub
mov
mov
icebp
lds
xorl
lcall
push
and
push
pop
jmp
push
scas
cwtl
je
in
fisttpl
ljmp
addw
popf
scas
mov
push
adc
loop
roll
pusha
dec
popa
pushf
std
shlb
or
pop
inc
fwait
add
cld
sub
mov
sti
outsl
xor
out
mov
pop
or
mov
sub
shll
dec
outsb
lods
sub
adc
nop
or
xchg
pushf
fisubs
push
xchg
xorb
divb
adc
pop
aam
movsb
insb
xchg
ss
add
xor
add
mov
int3
test
daa
cmp
ja
mov
std
fwait
push
inc
hlt
movl
jo
clc
add
push
add
insl
rcrb
pusha
pop
push
dec
bound
adc
dec
imul
push
popf
push
popf
jno
cmpsl
int3
in
mov
out
outsl
ja
loop
push
jl
jb
and
out
adc
loope
sahf
shlb
inc
gs
add
arpl
push
sub
aad
mov
mov
xchg
mov
add
stos
mov
enter
pop
push
inc
ja
arpl
ja
clc
dec
push
ret
loop
adc
xchg
mov
xchg
or
mull
xor
mov
fadds
inc
xchg
insl
sahf
fidivs
gs
orl
hlt
and
dec
add
and
in
push
and
push
stos
pop
ret
push
push
push
mov
notl
lcall
and
mov
push
lock
mov
push
jo
push
jne
xor
push
stos
xor
pushf
xchg
bound
push
cmp
rcrb
ret
andb
mov
jno
adc
movsl
rorb
add
dec
aaa
push
mov
loopne
ss
push
push
loope
rolb
jo
sub
dec
dec
push
test
cmp
mov
or
aas
cwtl
cli
outsb
inc
ret
push
pop
adc
les
pushf
cmc
popf
idivl
or
mov
dec
notl
mov
sbb
fsubl
in
popa
adc
fidivl
jne
arpl
sub
enter
inc
sti
xor
out
jbe
mov
ljmp
pop
jb
fisubrl
fst
js
sbb
orl
sar
das
test
add
xorl
rcrl
push
sbb
std
adc
scas
adc
push
dec
mov
fldcw
pop
mov
cli
inc
imul
jecxz
xchg
gs
adc
or
nop
jbe
stc
faddp
leave
repnz
cmpsb
and
mov
fsubr
sbb
scas
and
adc
jnp
mov
mov
rcll
loopne
push
stos
inc
and
jb
pop
in
addr16
mov
popf
pop
pop
push
push
cltd
out
out
xchg
test
fs
cmpsl
mov
sub
call
xchg
popf
mov
cmpsb
mov
fidivs
cld
push
stos
mov
inc
push
leave
outsb
push
mov
and
mov
aas
mov
jmp
or
adc
ds
or
out
mov
inc
ss
inc
cmp
pop
inc
in
cmp
mov
imul
inc
pop
int
mov
mov
daa
fsubrl
mov
dec
sti
aaa
ja
add
push
repz
sar
shl
mov
or
mov
icebp
jne
insb
dec
and
rcrl
or
mov
add
cmpsb
cmpsw
and
test
add
and
outsb
push
cwtl
scas
or
push
or
and
iret
xchg
in
push
ja
roll
scas
cmpsb
adc
jbe
inc
or
cmp
adc
rcrl
fldenv
mov
sub
and
lods
push
inc
test
fdivrl
lret
cmc
inc
ret
ret
repnz
loop
pop
lock
inc
ret
movsl
stos
xorl
xor
mov
xchg
xchg
mov
sbb
rolb
push
call
sbb
stc
sub
outsl
xor
test
and
sub
xchg
jnp
cltd
fwait
jo
rcrb
push
xlat
mov
inc
test
jns
push
cmp
push
pop
loopne
sbb
nop
push
cmp
std
pop
testb
xor
sti
xor
ja
mov
pop
mov
popa
dec
lods
or
cmpsb
mov
lea
mov
popf
stos
mov
jnp
enter
fstpt
jecxz
xchg
jne
or
movl
push
outsl
gs
adc
insl
cmp
or
insb
movsl
movsb
out
xor
insl
mov
jo
cld
and
push
push
adc
movsl
mov
push
stos
dec
mov
jp
inc
fistpll
xchg
and
jge
es
xlat
sub
xchg
adc
mov
inc
mov
dec
fcmovnbe
dec
or
pop
xchg
pop
pop
test
loopne
inc
outsb
dec
mov
pop
sbb
pop
or
sbb
in
mov
pop
cmp
push
sbb
clc
push
inc
nop
mov
dec
bound
jmp
or
imul
jl
add
sbb
mov
sti
outsb
jmp
mov
and
repz
push
adc
in
je
or
xchg
xchg
cmc
mov
pop
movsb
push
loopne
sub
cmpsl
push
stc
mov
cmc
inc
pop
cmpl
aad
ljmp
push
bswap
mov
sub
aam
cmp
jmp
jae
pop
add
sahf
out
mov
loopne
dec
cmp
rolb
movsl
xchg
and
push
or
xor
sbb
negl
xor
fdivs
arpl
inc
sarb
fldcw
pop
decb
add
xchg
rcrl
enter
and
jg
push
xor
aad
sqrtps
cmpl
outsl
outsl
sbb
lea
movsb
push
shrl
inc
hlt
inc
jne
push
pop
pop
inc
add
and
shlb
push
sub
adc
cmc
cvtps2pd
imulb
push
and
mov
inc
ljmp
or
in
mov
xor
call
xchg
and
push
xor
dec
shlb
out
or
into
jo
pop
sub
dec
lea
ljmp
or
mov
cmpxchg8b
push
movsl
lods
mov
xor
mov
adcl
jp
mov
pop
orl
pop
nop
dec
ret
and
adc
jmp
and
push
test
hlt
loope
pop
stos
adc
push
out
push
shl
inc
or
ljmp
ss
push
out
cmp
xor
int
clc
ja
mov
xor
jns
pop
rorb
shll
movsb
mov
fwait
push
jno
movsl
pop
cmp
aas
sbb
pop
push
xchg
leave
and
aas
pop
xchg
mov
loop
push
xor
sar
cmp
cmc
aam
test
xor
mov
mov
outsb
adc
call
push
sbb
insl
lods
dec
fistl
mov
test
adc
ret
stc
jg
xlat
bound
decb
popf
push
sbb
movsl
jmp
mov
mov
or
js
cmc
adc
cltd
inc
outsb
fbld
add
lahf
cld
lods
iret
cmpl
stos
fists
pop
inc
inc
lret
mov
movb
pushf
in
inc
sahf
inc
stos
aam
cmp
fmulp
push
fstpl
lds
sub
pop
push
and
add
mov
mov
das
inc
insl
add
aad
inc
xchg
cmc
inc
push
xor
fistps
mov
loopne
dec
mov
stos
adc
movsb
lods
movsl
out
cwtl
popa
push
je
in
cwtl
sahf
adc
lods
std
inc
mov
movsb
and
addb
add
sbb
cmpsl
push
subl
sbb
adcl
add
inc
daa
push
out
insl
mov
sub
jp
cltd
dec
test
out
adc
inc
cmp
xchg
daa
data16
adc
test
inc
xchg
push
inc
inc
lret
or
and
jle
dec
sbb
or
cmp
dec
leave
std
fwait
int
shrb
fwait
clc
in
mov
int
lods
popa
out
jbe
les
xchg
js
sarl
add
mov
mov
fwait
sti
mov
aaa
sub
xor
jb
insl
orb
cmpsb
sub
test
push
pop
xchg
loope
inc
js
fistpll
pop
scas
clc
aaa
lods
cmp
inc
mov
clc
out
dec
jno
cmpsb
dec
sbbl
dec
fxam
mov
out
fldenv
hlt
lret
call
int3
lds
push
mov
ret
cli
inc
cltd
mov
pop
fs
pop
cmp
push
ja
inc
insl
js
sbb
addr16
adc
add
rcll
push
add
out
or
mov
add
pop
loop
mov
add
movsb
rcrb
dec
xchg
mov
mov
jl
jbe
mov
loop
icebp
cmpsb
fs
jae
adc
mov
jl
inc
out
shll
push
jg
pushf
cmp
dec
xchg
mov
push
ret
jl
fimuls
cmp
leave
lcall
lods
divl
in
mov
xchg
pop
in
sti
and
xchg
lret
xchg
mul
xor
push
dec
leave
fsubs
push
dec
movzbl
pop
add
mov
dec
fsubp
fwait
jae
lahf
pushf
and
push
mov
fnstsw
int
push
jo
and
mov
inc
nop
ficompl
lods
stos
pop
and
xchg
in
das
cmp
imul
leave
fs
xor
sub
stos
stc
in
cmp
cwtl
rcrl
cmc
cmp
pop
js
daa
sbbb
int
das
cld
mov
rcll
fldcw
es
xchg
push
jge
scas
out
idiv
push
mov
aaa
pop
mov
adc
aaa
enter
lock
fs
cmc
cmpsl
push
mov
jmp
imul
push
jl
sbb
mov
push
push
mov
bsf
cld
sub
ljmp
or
cmp
loop
fistps
jecxz
nop
or
mov
mov
xchg
fs
leave
push
push
mov
sbb
popa
sahf
mov
hlt
int
jmp
lret
inc
rolb
push
test
dec
ss
push
andb
adc
fldt
pusha
xchg
movsb
ss
xor
cmp
cltd
outsb
ficoms
out
cmp
xor
cmp
add
or
mov
sar
or
xchg
cs
sub
mov
or
icebp
movsl
jbe
outsb
xchg
clc
ss
cltd
push
mov
fdiv
xor
arpl
faddl
rcll
cs
pop
fistps
mov
jl
mov
incl
jg,pn
or
pop
int
add
loopne
sar
cmpsb
jae
cmp
imul
xor
push
adc
adc
imul
pop
or
or
jne
popf
adc
xor
adc
jecxz
xchg
scas
in
adc
or
inc
dec
jecxz
idiv
data16
pop
pop
lahf
sub
and
mov
lds
jp
pop
push
in
ret
imul
repnz
sahf
f2xm1
ljmp
lcall
jnp
mov
mov
pop
push
mov
sub
lods
sbb
data16
outsb
data16
cs
repnz
adcl
jecxz
scas
xor
mov
pop
in
xchg
out
push
pusha
mov
inc
insb
push
icebp
cmp
lret
mov
push
xor
cld
xor
outsl
pop
lea
jae
addb
pusha
add
sub
inc
fwait
xlat
fcompl
fisubs
ja
fs
and
pushf
jl
mov
push
cld
adc
xor
jp
inc
mov
adc
mov
out
mov
fmull
push
call
xor
sbb
lds
sub
dec
pusha
ret
pop
cmpsb
pop
pop
pusha
jg
mov
clc
mov
sub
rcrb
test
and
xchg
movnti
cmpsl
mov
or
xchg
add
aaa
imul
inc
scas
es
lret
std
lds
pop
test
adc
xchg
mov
cwtl
dec
insb
push
sbb
out
inc
xchg
js
out
push
pop
in
or
add
inc
add
cmpsb
cmp
popf
xchg
fldt
stos
dec
in
and
xchg
add
or
mov
mov
data16
sti
stc
or
sahf
test
add
lods
add
dec
ret
push
aam
or
add
mov
inc
les
sub
in
mov
test
enter
jae
pop
add
push
in
xor
jle
cli
jbe
ror
jp
test
dec
pop
shrb
or
push
cmpsl
pop
shlb
pop
add
or
aaa
arpl
mov
xor
mov
popf
or
and
pusha
mov
xchg
lcall
or
clc
ljmp
xorb
push
negl
inc
aam
lods
pop
jnp
fsubrp
pop
jmp
jecxz
pop
xchg
or
lds
push
cmpb
into
lock
sbb
xchg
cmp
int3
mov
jbe
push
dec
xchg
inc
adc
jae
daa
sub
mov
out
jge
sbb
jmp
mov
sub
jne
or
insb
stos
lods
sbbl
cmpsl
mov
xchg
pop
pop
aam
shlb
xlat
in
pop
dec
lcall
lret
push
adc
lcall
add
call
push
mov
jl
lahf
pop
ja
ffree
dec
push
fdivrl
shrb
enter
and
xchg
mov
fiadds
and
aaa
mov
sbb
xor
shlb
or
test
mov
pop
or
scas
cmp
jbe
pop
sub
pop
inc
dec
nop
gs
jno
je
push
pop
cmp
lret
iret
jle
mov
stos
jg
int3
out
pop
jmp
js
rclb
shr
cwtl
popl
imul
mov
scas
cmp
cmp
js
imul
nop
jmp
xchg
mov
pop
xchg
sbb
xchg
sub
fildl
cwtl
add
je
or
cmpsb
imul
out
testl
cmpsb
mov
sub
sub
in
lea
jle
adc
xor
adc
shrb
in
aaa
xor
mov
mov
pop
imul
ret
int3
add
test
adc
popf
push
or
data16
aad
ficomps
negb
jo
bound
pop
rorl
mov
loope
in
xchg
fcoml
or
mov
in
xchg
xor
xchg
dec
out
in
decb
ja
inc
jge
and
sbb
les
clc
jns
or
in
or
aad
adc
mov
pop
sti
jo
cmp
sub
je
sbbb
clc
push
ss
or
data16
movsb
jb
sub
mov
shrl
std
or
ss
sub
dec
push
sbb
pop
sbb
xchg
icebp
push
aas
clc
inc
repnz
dec
cli
sub
lds
cld
add
test
push
inc
loope
mov
aam
fs
cmpsl
push
sbb
fisttpl
push
sbb
shr
sti
imul
lods
xchg
cmpsl
outsb
pop
mov
dec
inc
xor
out
in
jp
lret
iret
and
jecxz
jge
xor
adc
lds
cmp
repnz
mov
pop
test
adc
pop
add
into
or
cmp
loope
aam
outsl
jg
jne
inc
lds
rcl
inc
loope
add
call
out
lcall
in
jg
icebp
cli
imul
jae
popa
pop
mov
invd
test
pop
xor
pusha
pop
lret
test
test
add
xchg
jbe
dec
pop
in
inc
sahf
fmuls
stc
mov
xor
or
ljmp
mov
iret
cwtl
jbe
and
xchg
cmp
insb
test
das
mov
jne
mov
xchg
sbb
adcl
mov
fstps
stc
in
and
pop
insl
cltd
push
mov
negb
aas
pop
xchg
mov
cmp
dec
aam
cwtl
mov
sub
imul
fisubl
inc
loop
pop
and
dec
fstp
mov
or
nop
xchg
mov
dec
data16
mov
and
mov
sub
fs
add
vmulps
lcall
mov
fcoml
ljmp
incl
jns
iret
hlt
and
test
xchg
push
xchg
popa
jnp
push
xchg
es
orb
push
sub
mov
mov
sub
push
lea
add
jge
repnz
pop
mov
sti
fs
test
cmp
pop
adc
cmp
lret
fs
or
add
aad
sti
roll
cmp
pusha
in
sub
or
icebp
movsb
dec
xchg
add
lods
es
adc
cli
xor
jmp
scas
stc
mov
and
inc
push
mov
popa
sub
pop
add
fidivrl
shlb
sbb
aaa
mov
sbb
inc
xor
setnp
xchg
out
and
inc
jle
sbb
pushf
daa
clc
test
or
pop
mov
sarl
dec
jo
call
push
mov
xor
dec
push
pusha
sbb
pop
sub
dec
lods
pop
mov
push
cld
popa
test
stos
stc
and
jae
clc
lods
sarl
arpl
movsb
adc
mov
loope
mov
sti
pusha
and
cmp
or
bound
lahf
dec
cmpl
mov
lcall
push
cli
push
lods
or
pop
adc
jmp
fldcw
pop
jle
imul
and
addr16
test
sub
mov
dec
jl
insl
lods
push
push
dec
loope
mov
mov
movsb
jg
sub
xlat
sbb
xchg
inc
aaa
sbb
outsl
test
dec
ficomps
icebp
push
ds
loopne
lret
ja
jge
scas
push
xchg
push
sub
clc
insl
ret
add
fcoms
fsubrp
out
orb
addr16
pop
push
inc
repnz
in
adc
adc
sti
xchg
xchg
icebp
iret
rcll
pop
sbbb
mov
pop
xchg
jnp
sub
push
mov
sbbb
jno
lahf
sub
jb
imul
shlb
xor
lea
scas
lret
icebp
stos
xchg
sbb
cmp
dec
mov
loopew
fiadds
and
icebp
inc
cwtl
add
loope
jns
inc
adc
notb
or
movsb
inc
clc
jle
sub
or
add
adc
cmp
clc
filds
cmc
out
ja
in
mov
leave
mov
divl
cmp
push
sbb
mov
lea
loopne
xor
lret
hlt
xchg
xchg
cli
test
xor
push
and
adc
mov
push
and
ret
inc
cli
xchg
fs
dec
std
loop
imul
das
mov
push
mov
sbb
or
jo
cmp
jmp
mov
xchg
pop
jle
dec
insl
pop
mov
mov
push
pop
or
pop
mov
icebp
push
bound
sbb
cmp
arpl
pushl
rcr
cwtl
cmp
mov
xor
clc
mov
push
or
push
flds
cli
pop
ljmp
cmp
mov
sbb
cli
lea
pop
imul
adc
xor
jle
sbb
das
cmp
in
cmpb
inc
pop
lcall
daa
fwait
xchg
xor
or
rcr
mov
ret
sarb
xor
mov
movsb
sub
and
xor
sbb
inc
lret
and
out
lea
xchg
std
add
cltd
adc
popf
scas
adc
mov
std
mov
fnstenv
imul
mov
push
mov
or
xor
pop
jmp
xchg
ret
lods
pusha
aam
pop
loope
add
fcoml
cmp
sbb
and
jl
ja
xchg
pop
xchg
or
lock
adc
fistps
fimuls
ret
add
inc
subb
sarb
xor
sub
cmpl
imul
push
mov
fnsave
inc
xchg
mov
xchg
out
popa
fs
sub
sbb
jl
push
lret
xchg
jge
xor
push
mov
push
ret
imul
mov
lret
cmpsl
add
push
xor
xlat
shrb
outsl
cmpb
xor
or
jb
in
sub
cmp
cld
pop
mov
xchg
cmp
jb
cld
push
imul
stc
pop
lret
int3
fisttps
out
repz
ficoml
shll
adc
popf
pop
sarl
and
imul
cmp
mov
sbb
jecxz
call
mov
xchg
dec
dec
ljmp
inc
and
mov
stc
data16
pop
dec
sbbl
dec
inc
dec
outsb
add
mov
outsb
stos
lock
jle
push
adc
pop
cmp
mov
pushf
inc
cmp
cs
fiaddl
pop
mov
sbb
in
mov
dec
rorl
icebp
add
pop
bnd
inc
roll
adc
hlt
sbb
or
mov
cmp
lret
jb
cld
inc
or
sub
cmp
sbbl
inc
sbb
insl
sub
lahf
mov
mov
insl
mov
cmp
jge
cli
jmp
sub
xchg
jmp
cmpsb
mov
lods
xor
ffreep
jmp
mov
mov
into
mov
fists
mov
cli
xchg
jge
mov
test
fwait
inc
jl
mov
add
mov
ljmp
inc
movsb
rcll
dec
cmc
cmc
sbb
imul
loope
push
cwtl
lock
xchg
test
hlt
adc
fs
mov
push
jne
sbb
pop
outsl
out
je
imul
dec
fisttpl
fwait
sar
sbb
enter
or
push
cltd
inc
mov
jnp
mov
mov
sub
jae
cs
dec
jmp
lcall
push
pop
mov
or
jo
sub
imul
jmp
pop
mov
sub
push
cmpsl
or
xchg
mov
jne
adc
loopne
sbb
push
mov
add
rol
aad
sbb
and
sbb
rorl
add
fistps
addr16
sub
pop
cmp
addr16
jae
xor
pop
lahf
xchg
mov
mov
popf
jg
sub
js
repz
mov
test
cld
lret
negb
inc
addr16
jle
fcmove
mov
xor
ret
jg
cmc
pop
dec
inc
scas
pop
inc
les
add
and
inc
mov
pop
movsl
mov
out
fidivrs
push
lods
ds
mov
push
cwtl
push
rolb
out
or
push
lret
arpl
leave
outsb
push
xor
pop
enter
xor
pop
mov
push
cs
mov
add
sbb
rolb
imulb
add
lds
inc
dec
test
in
or
loop
fdivp
inc
sub
push
add
mov
sub
mov
in
pop
cmp
aas
xlat
adc
test
ljmp
cwtl
out
int
repnz
push
push
test
stc
jl
cs
mov
ret
rcll
and
aad
sbb
push
aad
insb
lcall
popa
ffree
xor
cltd
inc
jae
mov
mov
dec
mov
mov
jp
into
sbb
and
sub
push
data16
sti
inc
pop
and
leave
lcall
inc
mov
lret
addr16
mov
mov
stc
scas
or
dec
mov
jg
xor
mov
jmp
xchg
xchg
xchg
shr
jae
and
loopne
cwtl
bswap
xor
dec
int3
into
add
xor
cmp
cmp
outsb
lcall
xchg
sbb
xor
push
xor
add
insl
xor
xlat
or
add
adc
movsl
xorl
mov
sbb
sahf
ds
jns
or
test
dec
rolb
jl
add
aad
cwtl
dec
xor
stos
in
mov
cmc
pop
mov
jmp
pop
dec
pop
repnz
std
je
jmp
cltd
and
xchg
mov
xchg
mov
dec
sarb
mov
lea
inc
push
mov
addr16
aad
pop
sub
jae
xor
fisttpl
sbb
mov
lods
shlb
icebp
mov
or
popa
xchg
lea
sbb
insl
pop
mov
stc
fmulp
lock
adc
aad
mov
in
dec
scas
lock
pop
jmp
jg
shlb
repz
mov
jmp
aam
xchg
iret
jge
jne
xchg
test
outsl
jne
dec
movsl
pop
aas
std
cwtl
aad
nop
jge
into
lds
flds
push
je
mov
fwait
and
in
sbb
enter
and
pop
or
push
mov
push
fidivs
cmc
cmp
shll
pusha
push
mov
sbb
or
insb
inc
jo
mov
sub
pop
lret
xchg
sub
orl
pusha
mov
adcl
hlt
pop
mov
icebp
jne
loop
sub
add
ret
and
xor
mov
leave
and
leave
push
fisubl
pop
jl
lds
dec
add
test
adc
sbb
mov
add
jl
adc
shrb
cmpb
test
xchg
leave
sti
jbe
rclb
mov
pushf
add
pop
pop
sbb
sbb
popf
push
outsb
push
xchg
jo
repz
xor
pop
imul
fldl
xor
fs
and
icebp
dec
fwait
push
gs
pop
add
xor
xor
imul
int
orl
push
test
jecxz
ret
add
mov
test
xor
fbld
hlt
jecxz
inc
push
sub
add
das
push
std
sub
mov
or
add
push
mov
mov
jmp
ljmp
fistpll
jmp
xchg
adc
mov
fs
xchg
lods
push
jge
cmp
lret
jmp
addr16
xchg
xchg
in
js
dec
les
and
sub
testl
and
repz
fs
sbb
and
add
jbe
add
ret
imul
in
outsb
fyl2xp1
push
jno
cld
xchg
sub
sahf
dec
je
mov
mov
fstps
mov
jbe
addr16
cwtl
loopne
popf
incl
lods
and
pop
pop
mov
mov
and
push
addr16
cwtl
adc
lods
pushf
sahf
repz
sub
pop
ret
inc
fsubs
add
push
and
pop
add
ja
cs
dec
xchg
stos
cwtl
outsb
int3
dec
mulb
jg
faddl
sbb
sub
je,pn
xor
popa
sbb
shrb
xchg
ja
push
inc
add
cmp
lds
stos
jno
cmp
sub
or
ret
mov
mov
or
shlb
test
cmp
jg
sarb
popa
test
das
out
inc
popa
scas
push
andl
mov
insb
jmp
shrl
mov
test
sahf
lods
mov
jne
mull
push
inc
outsb
adc
in
stos
push
out
scas
mov
dec
jnp
cmpsl
filds
mov
lock
icebp
pop
add
imul
imul
cmp
pop
mov
mov
out
es
pop
ja
adc
sub
test
mov
mov
sub
mov
mov
mov
xor
and
mov
mov
push
shl
and
mov
clc
loope
pop
shr
subl
mov
inc
das
xchg
sar
into
xor
mov
xor
mov
rorb
dec
pushf
mov
push
jmp
cmpsb
mov
cmc
mov
rep
cmp
push
icebp
bnd
pop
sub
lock
rcrb
pop
ds
cs
aad
jge
pop
mov
mov
push
xor
inc
cmp
jno
mov
pop
xor
pop
out
jle
push
jb
xor
jmp
mov
jle
adc
mov
out
sub
adc
repz
in
test
dec
cmp
fsubs
imul
or
aaa
aaa
inc
outsb
ljmp
pop
or
sbb
das
mov
shr
mov
xchg
mov
xor
cmp
imul
adc
mov
xor
lds
clc
out
jae
push
xor
lock
jno
push
push
jge
mov
imul
lods
fimuls
or
mov
imul
and
in
and
push
jae
add
fstl
ret
icebp
lods
iret
ficompl
mov
imul
push
ja
jns
enter
mov
and
cmc
out
xchg
cmp
sahf
insb
xor
repnz
push
icebp
leave
jnp
aad
xchg
lret
fisubl
fists
ds
lcall
push
push
aas
xchg
loopne
stos
popf
push
insl
test
mov
out
sbb
loopne
push
dec
out
add
sahf
push
movsb
cmpb
jbe
cmovge
add
sub
mov
ljmp
sahf
lock
aad
lods
mov
xchg
jg
jb
sub
mov
mov
mov
inc
clc
imul
mov
jne
fdivrs
stos
fdivs
call
out
xor
shrl
rcrb
or
loop
xor
outsl
pop
pop
pop
and
lahf
ret
xor
pusha
inc
sbb
cmp
mov
ja
mov
pop
xorl
mov
icebp
lds
aaa
hlt
adc
fildll
mov
ret
add
mov
and
imul
add
mov
stc
fwait
xor
dec
push
fldt
or
int3
mov
fs
sti
repnz
movsl
lret
daa
pop
dec
stos
mov
adc
xor
cmp
gs
push
push
test
pushf
dec
scas
push
shll
or
outsb
cltd
xchg
mov
aam
mov
sbb
xchg
int
sbb
outsl
shrl
les
lods
stos
xchg
or
insb
fistps
or
rorl
jae
xor
jns
aas
mov
pop
mov
sbb
out
cmp
ret
outsl
in
push
or
adc
or
pop
rorb
cmp
push
lods
fisubrs
pushf
add
dec
aam
mov
inc
dec
pop
imul
insl
outsl
jge
std
or
adc
xor
mov
shll
lcall
sbb
sti
or
test
xlat
mov
sub
cli
cmpsl
push
mov
pop
dec
dec
xchg
hlt
dec
idiv
cmp
pop
lds
imul
pop
fsub
mov
popa
pusha
pop
fwait
sbb
cltd
and
std
es
outsl
out
iret
cmpsl
stos
mov
test
push
shlb
push
mov
rolb
push
int3
jns
cmp
sub
mov
pop
nop
test
fldcw
insl
stos
insb
xchg
mov
sbb
fdivrs
imul
lret
addl
jmp
sub
outsl
add
inc
sbb
fwait
push
and
jno
in
addr16
incb
or
adc
test
sahf
rorb
pop
jns
fs
sarl
mov
or
outsl
cld
adc
mov
jecxz
jle
scas
nop
cmp
ret
arpl
out
inc
fmull
pop
lds
jl
jne
inc
movsl
mov
dec
cmp
mov
int
pop
lret
clc
jo
jns
addr16
push
push
int
xchg
mov
sbb
mov
pop
pop
xchg
mov
xor
mov
inc
add
test
bound
jae
shlb
sar
pop
and
mov
xchg
pop
mov
jle
out
mov
cld
in
stc
sbb
cmp
jno
repz
mov
je
test
addl
cmp
imul
in
cmp
fnsave
cmp
cmpsb
hlt
or
test
inc
in
mov
pop
cmp
sbb
ljmp
loop
sub
sbb
scas
roll
outsb
lret
xchg
xor
mov
xor
inc
cmpsl
ffreep
xor
subb
jecxz
cmp
imul
in
adc
jbe
mov
in
xor
jne
mov
popf
or
leave
cmp
xchg
mov
test
rcr
and
lods
pop
cwtl
loope
in
xchg
movsl
stos
std
icebp
mov
ja
mov
inc
jns
jnp
movsb
or
sbb
inc
dec
out
fidivl
xor
pop
fisttpl
hlt
lods
aam
inc
or
push
mov
stos
jecxz
pop
mov
sbb
addr16
xchg
cmc
xchg
xor
pop
push
test
inc
add
cmp
sti
mov
lds
in
cld
outsl
jecxz
mov
loope
push
std
mov
sub
push
lock
pop
mov
dec
mov
jb
add
push
pop
leave
dec
xor
push
mov
stos
icebp
xchg
push
sti
pop
pop
mov
popa
orb
xchg
mov
movsl
fsubs
icebp
nop
lahf
daa
in
mov
call
rclb
dec
add
push
and
sbb
jle
xor
imul
movsb
aas
jnp
dec
pop
pop
stos
ja
fdivrl
push
xor
pop
stc
xchg
xor
aaa
loop
test
cwtl
aad
not
push
pop
mov
stc
int3
lahf
outsb
inc
popf
jo
inc
pushf
jp
sub
fwait
add
and
dec
ds
outsb
xchg
sarb
cmp
mov
mov
mov
dec
xor
or
cwtl
and
and
pop
or
ffreep
mov
iret
mov
scas
push
dec
fs
pusha
int3
pusha
movl
and
pop
daa
dec
shll
cmpsl
fstpt
xchg
add
cmpsb
lcall
xorl
inc
dec
andb
pushf
pushf
or
mov
inc
jbe
and
rorb
and
sub
mov
sbb
hlt
add
mov
sbb
mov
xchg
test
test
mov
inc
aad
adc
jno
or
test
adc
add
std
jb
lock
rorl
rorb
jae
inc
and
fistpl
adc
and
lock
push
inc
or
imul
inc
addr16
xchg
pop
cmc
mov
mov
and
or
inc
pop
adc
dec
pop
mov
pop
sub
jne
push
popa
push
dec
push
lcall
or
imul
insl
jnp
test
add
pop
notl
jns
xor
insl
adc
mov
test
subl
test
cmp
cmp
das
imul
cmp
mov
mov
sbb
iret
cmpsb
loope
lret
scas
lods
mov
hlt
ss
pop
cmp
outsb
sbb
jbe
inc
in
adc
and
fsubs
inc
lret
inc
jge
aaa
pop
sahf
lock
lcall
and
push
ja
arpl
dec
hlt
push
pop
jno
jmp
inc
rorl
mov
push
sub
insb
cld
repz
icebp
rcl
shll
fwait
push
cmp
das
aad
mov
or
fnstenv
xchg
popf
push
addb
xor
jg
sub
ljmp
cmpsb
xchg
movd
flds
sbb
xor
or
aam
sbb
pop
mov
out
jnp
xchg
les
push
lock
hlt
ret
inc
mov
mov
inc
adc
icebp
mov
sbb
into
or
jbe
add
cmp
test
inc
adcb
loop
push
inc
mov
cmpsb
mov
aas
lea
cmp
hlt
mov
mov
sbb
bndstx
out
add
and
pop
pop
mov
xchg
movsb
nop
lret
mov
jae
out
shlb
test
mov
and
push
out
xor
ret
jge
popa
add
sub
cli
rorl
dec
popf
jo
js
mov
sarb
and
jecxz
pop
movsb
and
xlat
and
xlat
addb
xchg
lds
mov
add
arpl
fdivrl
mov
loopne
lret
lods
jmp
adc
sbb
imul
push
iret
shlb
pop
fnstenv
cs
cltd
add
inc
xlat
fwait
xchg
sub
lea
cmp
dec
pusha
sbb
adc
shl
lret
in
bound
jns
mov
in
repnz
fists
sub
push
sbbb
sbb
adc
loopne
and
jp
mov
sar
add
loope
fists
mov
insl
xchg
outsb
xor
lock
mov
or
cmp
loope
jbe
sub
sahf
inc
mov
xchg
jne
jno
mov
mov
leave
push
arpl
xor
shlb
stos
out
jb
dec
mov
sbb
mov
add
fmuls
mov
repz
hlt
cmpsb
mov
dec
pop
mov
xchg
out
and
xchg
scas
dec
cmp
cmp
jno
pop
add
xor
jg
xchg
test
xor
mov
pusha
push
mov
je
rcrb
aam
rcll
and
xchg
mov
ret
xor
push
sbb
adc
pop
mov
hlt
aad
daa
pop
mov
lock
inc
sbb
scas
cmp
xor
fisubrs
aam
inc
add
xlat
inc
push
adc
decb
push
add
arpl
mov
adc
xor
fldl
loope
cmp
mov
rclb
repz
les
mov
mov
push
stos
xchg
pop
jecxz
or
imul
cmc
int
mov
xchg
jns
xor
into
mov
in
jg
scas
and
jbe
xor
movb
repz
or
scas
cmpsb
jp
push
and
mov
adc
fistps
std
mov
lods
xchg
loope
push
ss
xchg
add
pushf
jns
in
cmp
and
arpl
and
mov
push
mov
pushf
imul
inc
shlb
cli
mov
scas
or
pop
ja
jle
ja
jg
xor
fisttps
xlat
out
cmp
dec
mov
adc
daa
lcall
int3
inc
lret
fists
popa
or
push
loop
std
mov
out
dec
mov
jno
cmp
sbb
stos
scas
sbb
les
xchg
dec
pop
out
pop
sub
pop
mov
pusha
push
pop
xor
lret
push
adc
push
cltd
dec
icebp
cmp
adc
dec
mov
mov
jno
xor
mov
std
add
jns
add
lahf
push
sti
mov
adc
fcmovnu
les
dec
dec
ret
mov
pop
cmpsb
jge
lahf
sub
es
leave
push
hlt
fs
cmpb
and
mov
in
aas
pop
mov
fmulp
dec
scas
orb
push
add
and
mov
inc
in
push
dec
jecxz
pop
xlat
push
jnp
lcall
clc
push
aaa
push
rclb
cmp
pmulhuw
pushf
stos
lods
sub
push
inc
lods
mov
fs
fdivrp
xlat
add
lcall
mov
xchg
jp
mov
icebp
fimuls
jge
jo
lods
je
adc
cmp
pextrw
mov
or
sbb
shlb
arpl
test
adc
push
out
test
inc
mov
out
mov
push
das
out
or
outsb
jp
daa
push
inc
inc
jnp
sub
std
jl
cmp
rorb
cmpsb
es
outsb
cmpsl
pop
and
pusha
mov
pop
loope
mov
lahf
xchg
fbstp
mov
aaa
mov
roll
rcr
or
push
push
mov
sti
rcl
pop
clc
into
lods
fcmovb
push
jle
lea
dec
adc
vmread
cli
push
in
aam
cmp
and
pop
insl
cltd
xchg
testl
in
mov
jecxz
cmpsl
sti
dec
mov
cmc
mov
xor
xor
rorb
lods
lods
jmp
imul
and
fadds
cli
aaa
adc
sbb
int
push
sub
cli
test
jle
popa
jns
addl
ret
jb
jno
sbb
add
sti
push
add
mov
or
adc
inc
cli
shll
xchg
loopne
pusha
push
push
rclb
adc
push
push
sub
push
mov
mov
fstpl
push
and
push
call
or
fidivl
xchg
jnp
sahf
icebp
jmp
xchg
pop
adc
stos
fwait
adcl
imul
sbb
sbb
sub
inc
add
stos
mov
nop
cs
roll
sarb
addr16
push
mov
js
ja
mov
push
mov
iret
outsb
test
scas
xchg
sbb
loop
push
or
scas
stc
in
subb
mov
lock
ds
mov
or
xor
popa
jl
bound
inc
xor
xchg
ljmp
iret
fstps
jbe
sub
cmpsl
adc
subl
das
mov
scas
ret
lods
push
xor
test
inc
jo
pop
xchg
mov
ss
outsl
sub
shr
sub
mov
rolb
inc
or
pop
daa
sbb
sbb
push
sub
add
sti
std
cld
pop
pop
test
aas
cmp
pop
push
rcl
sub
push
enter
ljmp
cmp
push
sub
cmpsl
sub
add
insl
or
mov
pushf
mov
in
mov
cld
lcall
stc
jne
push
add
inc
aas
mov
pop
mov
mov
popa
dec
cwtl
fbld
ss
adc
out
cwtl
in
in
gs
iret
ja
dec
shrl
sub
daa
pop
dec
data16
mov
push
mov
movsbl
mov
push
jae
pop
loopne
not
je
jns,pn
stc
int3
je
xor
repnz
shl
and
inc
mov
hlt
push
or
add
mov
loop
dec
into
or
orl
ret
outsl
outsl
add
or
jmp
pusha
scas
orl
ret
mov
repz
inc
clc
lea
push
fs
and
mov
adc
aad
pop
and
in
jb
stos
lods
loopne
ret
cmp
mov
adc
mov
cmc
outsb
mov
mov
dec
mov
test
mov
out
sahf
pop
adc
ficompl
cmp
or
repz
xor
mov
xchg
shl
adc
cmp
nop
cmp
mov
pop
insb
add
lock
mov
fsubp
sbb
repz
jne
je
movsl
and
pop
add
fisttpll
push
sub
mov
ret
popa
sub
adc
mov
dec
pop
psubsb
rol
or
dec
jb
xchg
and
rcll
push
es
icebp
fsubs
adc
inc
aaa
insb
sbb
arpl
or
nop
adc
aas
add
enter
movsb
xor
add
mov
out
mov
sbb
test
das
adc
mov
dec
sti
daa
adc
mov
cltd
adc
sbb
dec
sarb
loop
sbb
cmp
pcmpeqb
mov
cmp
shlb
push
idiv
in
ljmp
pop
and
shll
loopne
adc
xchg
mov
lret
pop
in
cmpsl
ds
shlb
mov
xchg
mov
mov
xchg
cmpsl
out
stos
sbb
pop
divl
sahf
xor
jmp
jl
push
push
test
les
imul
je
fadds
cmp
enter
lret
xchg
push
aam
or
aas
sub
int3
xchg
jp
pop
or
js
pandn
mov
jle
iret
lods
dec
sub
sub
pop
adc
cs
mov
add
pop
lea
add
add
inc
dec
lods
dec
fisubrs
mov
out
jg
loopne
pop
movsl
jecxz
nop
inc
dec
mov
out
scas
out
inc
mov
sub
std
push
inc
ja
mov
mov
cld
fwait
mov
mov
cld
adc
test
jae
jnp
out
addr16
iret
imul
xchg
fincstp
mov
loope
push
cwtl
push
ds
sbb
aam
jp
outsb
sbb
sahf
mov
xchg
inc
sar
loope
call
subl
push
rolb
push
jbe
and
enter
mov
out
js
mov
jns
add
jge
lds
in
lret
cmp
fiadds
scas
mov
mov
into
popf
push
pop
pop
sbb
pop
xlat
roll
push
push
lret
rcrb
popa
in
add
jmp
int3
lea
loopne
andl
lahf
dec
xchg
rolb
cli
dec
cmpsl
cli
jbe
add
pop
je
lds
sub
pop
into
mov
mov
jno
mov
pop
outsb
nop
lods
mov
jl
lcall
sub
dec
mov
xor
lock
jbe
sbb
push
mov
std
add
test
cld
mov
dec
loope
movb
pop
insl
es
adc
sahf
fadd
inc
sub
xchg
mov
push
stc
xor
mov
push
add
jg
popl
sub
adc
ss
fsubp
push
out
mov
lret
je
mov
mov
repnz
loope
lea
sbb
inc
loop
cld
mov
jno
mov
push
or
jbe
xchg
out
dec
arpl
stos
in
call
loop
bound
lcall
aam
add
sbb
rol
stos
jle
fldt
sub
nop
stc
sahf
add
mov
shrl
mov
pusha
dec
js
mov
movsb
fwait
imul
sbb
cmpsl
pop
xchg
das
mov
dec
fcomip
test
aam
push
xor
cmpsl
sbb
push
je
or
sbb
loopne
leave
mov
xchg
sahf
jbe
mov
jp
or
rcrl
fstps
mov
cmpsl
mov
in
loopne
mov
in
pop
add
aam
stos
cmp
mov
sbb
adc
inc
aam
jno
jg
cmp
pop
adc
int3
push
lcall
xorb
outsb
or
xor
push
sbb
and
adc
sarl
jge
movb
outsl
mov
aas
nop
pop
mov
iret
cmp
dec
or
ds
add
mov
lods
mov
and
adc
or
xchg
push
jl
lock
test
imul
ret
pop
movsb
imul
push
cs
in
je
inc
inc
adc
push
cmp
repnz
mov
jge
repnz
adcl
pop
and
and
mov
push
ja
add
and
ljmp
or
push
push
out
fisubrs
cwtl
add
push
aad
dec
cld
mov
mov
fnstsw
mov
in
lods
adc
sar
das
inc
or
mov
repz
inc
shr
mov
ds
stos
repnz
outsl
out
dec
mov
pop
inc
repz
pxor
xor
ss
cld
xchg
add
jle
int
fwait
xor
arpl
movsb
adc
nop
pop
xchg
movsl
nopl
cld
scas
enter
push
mov
push
out
mov
inc
es
pop
fsubrl
xor
out
iret
sbb
rcll
and
aaa
or
or
xor
aas
pop
pop
fistl
in
sub
cmp
aaa
push
jecxz
fidivrs
push
pop
cmp
lods
movsb
mov
ret
push
into
pop
mov
and
and
xor
mov
and
add
das
and
dec
or
sbb
mov
or
cmp
in
subl
popa
lret
in
mov
jo
or
mov
xlat
dec
daa
ror
stos
add
inc
rolb
mov
std
adc
stos
add
loop
push
mov
mov
roll
mov
push
in
movsl
xlat
dec
pop
fstpl
dec
shlb
iret
in
xchg
sahf
imul
push
dec
js
push
subl
adc
jnp
cmp
dec
xor
lods
cmp
fwait
mov
jp
xchg
sbb
cld
punpckldq
bound
or
sub
stc
mov
push
call
sti
xchg
add
es
pop
cmpsb
lods
xchg
push
xchg
orl
sub
inc
sub
popf
dec
cmpsb
imul
pop
xchg
out
sbb
xchg
mov
adc
test
sbb
jb
lea
bound
aad
popa
cmp
sahf
addw
sahf
aad
dec
push
sub
inc
inc
inc
jo
ljmp
push
outsl
test
in
mov
push
ja
in
add
fcomps
xor
xor
ds
shlb
decl
aad
daa
loope
fstpt
xor
jo
loope
cld
outsl
xor
pop
sahf
fcoml
cld
cmp
xchg
pop
fsubl
imul
lcall
ss
rorb
outsl
fsqrt
les
iret
inc
xchg
fdivs
popf
shrl
add
in
sbb
cli
push
rorb
push
xchg
scas
sbb
adc
in
xchg
mov
adc
xchg
lret
push
rolb
pop
std
call
popa
test
push
mov
mov
mov
das
xor
ss
fs
scas
fistl
mov
shll
pop
jo
in
dec
cs
scas
test
scas
cli
scas
stos
add
xchg
into
or
inc
call
jecxz
push
pop
adc
push
mov
imul
outsb
out
cmp
xchg
mov
cltd
add
filds
push
xchg
insl
jno
outsb
ja
hlt
push
daa
inc
cmpsl
cmpsb
pop
pop
in
pop
pop
inc
cmovns
imul
in
loop
inc
xor
std
js
and
adc
stos
sbb
clc
enter
cld
ret
ss
mov
movb
and
cwtl
pop
cmpsl
sbb
gs
cmc
or
loop
je
xor
jo
mov
cwtl
cmpsb
into
shrb
sbb
scas
pop
rol
jnp
popf
add
fcom
cmp
pushf
xor
dec
push
cmpl
xchg
das
cmpsb
cs
cmp
jns
pop
mov
aam
imul
sub
push
outsb
mov
xchg
xchg
mov
jge
fs
and
bound
jl
cli
jl
xchg
jno
test
and
cli
imul
add
pop
out
subb
sbb
cmp
and
test
repz
and
or
cwtl
and
fwait
add
outsb
clc
mov
mov
imul
aam
xchg
icebp
pop
into
xchg
cmp
popf
xlat
popa
pop
scas
sbb
fcoml
mov
fstpl
das
arpl
sets
cmp
out
inc
test
inc
dec
stos
shll
mov
out
cwtl
leave
pop
loopne
push
addl
mov
or
roll
pop
xchg
xchg
dec
pop
scas
repnz
cmpsl
xor
xor
xchg
shrb
lret
loope
loop
jae
or
fwait
xor
sti
mov
fsub
jl
mov
adc
pop
cmpsl
dec
icebp
daa
rclb
cmpb
pop
cmpsl
cwtl
je
push
loope
inc
dec
mov
push
or
mov
push
rolb
jo
stc
lret
test
or
push
and
sub
lock
mov
xor
pop
mov
rcrl
dec
push
xor
insb
in
push
xchg
mov
jae
dec
movsl
jecxz
repz
les
lret
shlb
ja
mov
int
data16
in
subb
inc
int3
fnstenv
ds
or
push
mov
hlt
xchg
jo
or
fwait
das
and
xchg
xor
icebp
mov
pop
jecxz
mov
adc
popa
and
arpl
jmp
mov
aad
out
repz
inc
es
sub
adc
jo
jo
std
sbb
popf
xor
and
movsb
inc
jb
sbbb
sahf
push
sub
add
addr16
cwtl
mov
push
fwait
inc
cltd
adc
je
mov
xchg
popf
pop
adc
mov
and
in
out
adc
iret
jge
xchg
out
test
xchg
cmp
jmp
sub
addl
pushl
ret
sbb
loope
mov
in
jmp
stc
nop
cmc
lods
into
scas
dec
rcrb
popa
jp
jp
mov
or
out
in
inc
cld
lea
cmp
adc
ds
mov
roll
dec
gs
test
loope
out
inc
int
into
push
mov
xor
adc
test
mov
jl
sub
pop
and
sti
mov
push
inc
loope
sbb
or
loope
mov
shr
xlat
paddd
mov
adc
xchg
lods
pop
xor
fdivs
loope
shl
pop
std
stos
test
mov
clc
arpl
jne
or
insb
dec
bound
push
push
jae
sahf
or
mov
xorl
sti
mov
setne
cmc
ljmp
xchg
xchg
nop
adc
js
je
cltd
xchg
or
dec
xor
test
leave
cmpsl
xor
adc
enter
loopne
adc
out
inc
sub
scas
xchg
lret
rorl
or
popa
rclb
mov
clc
ret
push
loope
js
int3
aas
cld
lahf
jg
push
cltd
sbb
iret
mov
sub
mov
pop
out
out
imul
cmp
adc
fdivrs
sbb
sti
adc
and
cmpsb
leave
repz
jo
cmp
mov
fisttps
pop
pop
bound
add
repnz
jno
pusha
imul
daa
ret
pop
jge
dec
or
jecxz
adc
and
mov
divb
daa
sub
jno
inc
push
mull
add
lret
test
sbb
push
dec
push
sar
mov
mov
jno
xchg
mov
dec
push
xchg
in
jl
xor
pop
mov
insb
in
cmpsl
sub
enter
pop
out
and
jmp
pop
shll
lea
cmpsb
sub
mov
mov
hlt
sbb
push
xor
ljmp
mov
jo
popa
mov
ss
jbe
pop
cs
sbb
out
sub
lret
mov
int
pop
aaa
sti
outsb
mov
inc
iret
xor
mov
outsb
pushl
mull
push
sub
or
rcr
mov
pop
mov
insb
lea
pop
or
in
test
mov
adc
lds
insb
shr
into
dec
mov
pop
pop
ret
mov
lcall
in
pusha
ljmp
in
mov
mov
adc
clc
icebp
sub
cmp
lods
pop
repnz
inc
fs
xor
push
lcall
inc
mov
mov
dec
xchg
push
icebp
sub
loopne
jg
stos
les
cmp
inc
and
ja
cld
insb
lcall
jo
imul
push
mov
popf
imul
mov
xor
sti
popa
xchg
inc
int3
jle
icebp
adc
mov
push
sub
push
mov
loope
out
mov
bound
push
adc
incb
gs
sub
leave
sbb
xor
mov
and
lcall
push
call
rcrl
ret
mov
in
xor
push
add
sahf
mov
adc
or
push
push
dec
scas
add
rorl
in
mov
mov
sub
mov
pop
add
outsl
shll
ss
add
mov
xchg
lods
mov
jl
sbb
fcoms
in
pushf
xchg
cmc
out
scas
insb
sti
and
mov
xchg
cwtl
push
sarb
out
ret
icebp
fdivrl
jmp
mov
add
mov
ret
test
lret
xor
int
data16
lock
std
xchg
jg
ljmp
in
add
loopne
sbbl
xor
inc
testb
cmpb
fstpt
in
test
popa
ljmp
adcl
repz
adc
insb
xor
sub
xor
in
ss
jb
fmulp
pop
out
cmp
jge
shll
call
sub
lret
dec
jb
or
in
xchg
rsm
push
xlat
jbe
cmpsb
sub
sub
mov
cmp
sbb
xor
adc
ja
sbb
pop
or
jns
aam
push
inc
iret
loop
outsl
pusha
clc
mov
inc
mov
incl
add
das
sub
popa
xchg
xlat
sub
int
in
fildll
inc
or
popf
cmpb
cmp
les
inc
insl
ret
sub
subb
add
dec
jnp
inc
and
mov
xlat
sahf
dec
dec
inc
lea
lods
subb
lahf
popa
nop
mov
insb
mov
mov
sbb
fsubrs
sti
xchg
gs
es
pop
int3
imul
sbb
test
mov
adc
cmpsl
jmp
inc
cmpsb
movsl
pop
xchg
subl
in
and
dec
lcall
mov
sbb
insb
scas
outsb
dec
iret
nop
stc
out
jns
ficompl
push
pop
mov
push
sarl
pop
divb
int
iret
and
dec
addl
addr16
cwtl
hlt
sbbl
nop
imul
ljmp
inc
push
sbb
xor
xor
arpl
in
int
xor
jb
jp
outsl
mov
mov
pop
sbb
cmp
pop
iret
and
jae
jno
fs
cmp
mov
inc
mov
dec
call
out
lods
pop
lds
addb
lods
add
add
inc
pop
xor
sub
addr16
imul
ja
pop
sub
pop
push
popf
sbb
adc
xchg
int3
and
aas
fs
sbb
pop
mov
sub
movsl
sub
repz
sbb
jg
enter
addb
stc
fisubs
and
jmp
inc
jecxz
sbb
mov
jecxz
and
adc
inc
shl
imul
jo
mov
inc
xchg
idivl
test
pop
outsl
dec
or
test
pop
cmc
aam
jp
loope
lcall
mov
loopne
ret
lret
or
rorb
mov
add
out
inc
dec
xor
cmp
adc
loopne
pop
sub
inc
xor
aas
mov
inc
cmp
lcall
jae
or
mov
dec
nop
add
mov
add
adc
pop
adc
dec
adc
mov
testb
ficomps
mov
mov
pop
rorb
xchg
loope
cmp
xchg
cmc
inc
cs
jns
cltd
rclb
mov
inc
dec
mov
icebp
adc
cmp
mov
dec
nop
hlt
lock
je
jecxz
es
out
dec
jl
lahf
loope
int3
cmp
clc
sub
imul
pop
pop
idivl
sti
scas
xchg
mov
sti
cli
cmp
mov
mov
sub
lahf
cli
or
pop
adc
rolb
loopne
cmp
call
jae
outsl
xor
inc
add
out
call
jge
inc
sub
les
clc
jge
cmpsb
jns
mov
adc
and
insl
adcl
lea
psubb
ljmp
das
int3
adc
jns
xor
into
inc
add
daa
arpl
mov
xor
mov
jne
mov
mov
jecxz
mov
daa
mov
out
outsl
mov
mov
cmp
andb
dec
cmp
dec
test
adc
jns
and
pop
test
dec
ret
jbe
jge
mov
xchg
das
mov
inc
mov
push
sahf
dec
mov
xor
and
in
fwait
jns
jmp
jns
dec
movsl
mov
out
aad
mov
fsubr
test
adc
xchg
insl
addr16
sti
push
or
and
mov
push
and
mov
sbb
daa
sbbb
pop
dec
dec
bound
addr16
dec
out
and
mov
jne
dec
adc
les
mov
adc
icebp
insl
mull
jno
mov
dec
cmp
push
clc
fldl
sbb
cmp
mov
mov
movsl
rcrl
sub
imul
sbb
push
or
cmpsb
fcomp
insb
mov
loopne
adc
mov
pushf
mov
and
or
mov
sub
sub
orb
push
iret
sbb
and
xor
sbb
xchg
sub
mov
lcall
dec
xor
loope
mov
int
hlt
addr16
xchg
push
shlb
mov
sub
test
fwait
inc
aam
jge
cmp
push
popf
pop
xor
push
out
inc
pop
mov
jmp
cmc
mov
outsl
insb
xor
sub
jbe
mov
cmp
sub
or
loope
jge
inc
movd
in
in
je
sbb
push
jmp
jno
cmp
test
xchg
or
push
scas
xor
iret
lds
mov
pop
jne
loopne
shrb
pop
sbb
pop
xchg
fcoml
inc
test
lds
imul
xchg
fimull
cs
ret
jmp
pop
dec
sub
rclb
insb
pop
cli
stos
fmuls
mov
cmp
adc
test
cmpl
jae
mov
int3
das
loop
fwait
mov
mov
cmpsb
fs
repz
dec
into
jmp
sub
mov
stc
int
sub
xor
mov
ficoms
mov
xchg
cmp
mov
popf
and
pop
dec
or
cld
pop
call
mov
imul
mov
lahf
fcoms
aam
push
jbe
jno
jns
adc
and
jne
out
pop
xorl
sbb
imul
outsb
push
or
loop
movsb
pop
addr16
xor
jle
ret
es
xchg
xor
out
xchg
cmp
js
fistpll
pop
pop
push
adc
jbe
cmp
add
sub
sub
mov
lea
cmp
push
jbe
mov
gs
inc
enter
enter
inc
push
loope
int3
clc
dec
mov
jns
into
add
mov
fdivl
inc
in
shrl
xchg
repz
pusha
test
cwtl
adc
inc
jbe
dec
insl
out
ja
adc
repz
out
xchg
add
jae
mov
mov
imul
jge
push
cmc
sub
js
nop
ja
xchg
popa
mov
adc
test
dec
or
dec
nop
leave
or
cwtl
mov
aas
cmpsb
xchg
mov
daa
testl
repz
ret
mov
jns
add
clc
lahf
or
add
lret
rcll
in
pop
pop
and
pop
inc
loop
mov
std
sub
ds
inc
sbb
nop
mov
fidivrl
outsb
adc
pop
les
daa
pop
mov
pop
pop
jmp
or
adc
rcrl
lods
mov
ss
push
inc
sbb
or
jno
xor
je
mov
dec
mov
mov
fsubl
out
xor
mov
pop
cmp
inc
lds
xor
push
pusha
popf
lahf
xchg
jne
jge
pop
lock
lret
iret
aaa
jmp
mov
nop
icebp
pusha
cmp
pop
xchg
pusha
dec
mov
add
hlt
fbld
push
inc
or
insl
faddl
xor
out
inc
xchg
call
push
fsubrl
in
sub
xchg
cmpsb
insb
inc
jo
rolb
dec
mov
aam
mov
lret
dec
daa
add
sbb
mov
mov
orl
divb
mov
int
in
pop
dec
fstp
add
add
fcomps
and
sub
or
int
xor
aad
jmp
clc
stos
cmp
mov
jns
cmpb
rcrl
negb
jno
inc
in
fchs
scas
es
pop
mov
sbb
xchg
out
flds
fdivs
cltd
pop
dec
insb
cld
movl
jmp
jl
loop
mov
jne
or
sbb
aam
imul
mov
sbb
xchg
xchg
lods
dec
or
cld
jnp
xchg
aam
cmpsb
sbb
xor
lahf
test
insb
sub
rorb
jmp
xor
neg
idivb
loop
call
mov
push
rcrl
leave
mov
sahf
xorl
pop
sbb
dec
mov
sbb
cmp
inc
sahf
mov
lock
add
xchg
add
inc
jns
shll
sbb
add
pop
icebp
jns
sbb
leave
adc
int
in
aas
out
push
pop
scas
jp
xorl
pop
inc
dec
rclb
sbb
mov
pop
and
pop
fisubrl
mov
mov
cwtl
lock
in
sub
data16
outsl
neg
movsl
mov
cltd
pop
cmpsl
mov
jb
dec
fwait
jle
dec
fistps
ret
shlb
cmpsl
addr16
sbb
addr16
leave
inc
mov
rcll
scas
lret
pusha
pop
xor
outsl
mov
inc
sub
dec
adc
insb
add
dec
push
mov
daa
out
inc
sbb
test
push
leave
inc
push
scas
cmp
lret
les
fidivrl
enter
ds
dec
jl
icebp
or
xchg
lahf
dec
imul
movsb
and
ret
imul
push
pop
and
adc
xchg
gs
aas
jmp
aaa
inc
pop
xor
xor
ja
testl
or
int
scas
popf
jmp
sub
scas
sahf
mov
cwtl
pop
jne
aam
pop
mov
cmpsb
addr16
lock
mov
push
call
ds
lds
xchg
clc
maxps
imul
mov
stc
cmp
cltd
and
add
sbb
add
jle
sub
xor
ret
or
in
mov
into
dec
stc
mov
ja
jp
dec
pop
fcoml
or
push
or
or
lret
sahf
xchg
mov
lock
loopne
xor
pop
scas
cmpsl
bound
dec
jmp
ror
loop
shll
mov
mov
mov
jl
popa
cmc
je
test
add
fwait
sbb
subl
sti
fmuls
bound
repnz
sbb
xor
mov
fidivrs
jae
lret
push
and
xchg
push
xchg
xorl
xor
adc
push
sbb
and
xchg
pop
jo
out
add
jge
lret
jge
sahf
fdivrl
dec
lahf
int
fldcw
sarl
icebp
mov
xor
adcl
push
cmp
sarb
pop
mov
in
out
jmp
mov
roll
mov
mov
or
popf
dec
jb
popa
in
lods
sahf
lock
iret
xor
cmp
popa
xor
nop
mov
ret
ficompl
popa
rcr
and
mov
insb
inc
or
and
gs
mov
mov
sbb
ljmp
jbe
ljmp
adc
xorl
aas
cwtl
cs
xchg
nop
sub
std
mov
icebp
inc
scas
cld
mov
cltd
aas
cli
dec
push
push
jg
cmpsl
inc
mov
imul
cld
mov
scas
pop
or
in
xor
inc
das
mov
js
int
sbb
dec
insb
xorb
cmpsl
mov
loope
testb
or
and
call
out
outsl
add
fnstcw
aas
ljmp
mov
in
out
in
dec
cmc
pop
lret
lds
sbb
adc
ljmp
mov
rcrb
dec
test
gs
mov
es
ds
repz
bound
xorl
or
insl
ret
repz
dec
sbb
int
inc
xorb
ss
in
adc
dec
sub
xchg
bound
pop
sahf
imul
jge
adc
mov
imul
decb
or
mov
adc
int3
je
sub
lret
icebp
mov
add
pushf
fsubl
pop
in
ss
ja
repz
pop
rcll
mov
jge
jbe
dec
pop
aam
xchg
xchg
std
pop
xor
dec
lods
dec
xchg
mov
aam
mov
fs
pop
jmp
inc
shl
push
xlat
lods
push
and
sahf
test
fimull
rclb
pop
inc
mov
inc
gs
jp
mov
pusha
gs
jae
lss
cmc
pop
mov
adc
jae
push
sub
sub
jne
add
sub
adc
loopne
in
pop
and
push
shll
lret
inc
shll
cmp
cmp
mov
cmovns
ficoml
cmc
jbe
xlat
pinsrw
sub
adc
gs
push
clc
xchg
sar
dec
mov
pop
imul
popf
in
daa
pop
dec
or
xchg
pop
adc
das
sahf
lret
cmpb
or
inc
inc
aam
push
cltd
dec
lea
cltd
das
inc
jae,pn
std
pop
inc
nop
cmp
lahf
xchg
outsb
push
xor
jae
cmp
push
xor
out
in
subb
std
inc
sub
std
dec
loop
adc
lds
loopne
inc
es
lock
jg
out
xchg
mov
and
or
sbb
jg
test
cld
or
mov
jne
lea
scas
jnp
and
push
cs
scas
rclb
fs
mov
roll
pop
xchg
add
adc
out
pop
cli
inc
aad
jmp
fwait
xor
in
push
fadd
gs
cmp
aad
jle
dec
dec
aaa
testl
das
inc
xchg
cwtl
mov
xor
and
jecxz
push
mov
test
and
cmpsb
sub
jg
adc
mov
fidivs
in
xchg
fsincos
sbbb
test
push
fiadds
addr16
jbe
adcl
xor
inc
cld
jbe
mov
mov
xlat
push
adc
cmpsb
repnz
imul
cmp
cwtl
daa
out
or
jns
jp
dec
ret
or
push
cmp
mov
fimuls
or
imul
add
push
push
push
mov
jne
add
lods
loop
movsl
in
insl
dec
add
mov
mov
xchg
push
enter
rorb
jle
xor
out
loope
mov
insb
daa
and
fwait
dec
sbb
inc
mov
adc
push
dec
push
xchg
mov
mov
sarl
adc
cmp
xor
cmp
das
xor
sub
cltd
sbb
pushf
outsl
inc
jo
mov
inc
dec
insb
mov
mov
dec
rorl
xor
stos
add
adc
decb
fwait
lcall
adc
aaa
sbbb
fcomi
push
mov
jae
das
mov
stos
and
scas
cmc
mov
ds
pop
testb
mov
scas
push
add
into
pop
loope
insb
add
ffree
jno
in
test
loopne
xchg
lock
inc
movsb
mov
outsl
fldenv
in
out
outsl
and
sbb
repz
inc
fstpt
and
aam
data16
gs
cli
enter
mov
jge
test
lds
hlt
test
dec
mov
push
push
cmp
adcl
movsl
dec
out
loopw
aas
bnd
pushf
in
out
mov
jns
std
mov
xor
pop
popf
push
add
push
loop
imul
ljmp
xchg
mov
out
popa
sahf
inc
fbld
cmpsl
jecxz
inc
mov
fcomps
lds
add
inc
adc
mov
sbb
or
rolb
aam
enter
scas
call
adc
add
dec
dec
xor
insl
stos
cmp
rcll
fdivs
inc
push
push
jb
out
push
adc
dec
dec
out
mov
adc
jb
xor
stos
sub
jbe
imul
mov
adc
xchg
iret
jnp
les
pop
inc
push
and
xchg
lcall
ffreep
push
cmp
jne
pop
mov
repz
pop
pop
dec
sbb
fildl
mov
pop
cmp
or
test
push
cmp
jne
adc
shlb
jmp
lea
testl
mov
or
test
push
imul
lods
jl
cmp
jbe
pop
jo
bound
call
ja
push
imulb
pop
dec
cmp
push
inc
loope
push
push
movsb
lret
scas
testb
cmp
mov
aad
push
in
in
ret
js
in
roll
mov
and
loope
sbb
xlat
sub
cwtl
push
pushf
dec
adc
loopne
fbld
iret
mov
icebp
js
testb
inc
xorb
ljmp
test
mov
hlt
pop
movsb
shll
pop
xchg
int
filds
cmp
divl
ret
push
inc
jno
popf
rcrl
jns
sbb
cmp
fld
lret
jbe
cs
iret
stc
cmp
clc
push
xchg
out
scas
push
jmp
scas
mov
mov
ljmp
xor
mov
mov
incl
in
les
jnp
push
out
pop
pop
jnp
hlt
adc
sub
mov
jae
pop
fmuls
in
mov
lds
push
jno
push
mov
popf
cmc
cs
adc
sbb
ret
cltd
enter
inc
mov
mov
xor
cmp
jge
pop
popa
mov
cmp
mov
inc
scas
jp
popl
hlt
sbb
mov
rcrb
cmc
cmp
xchg
ret
jge
test
sub
mov
addb
clc
lods
sahf
int3
sti
aad
imul
and
or
mov
jge
mov
and
jmp
push
xor
mov
mov
inc
jle
sub
adc
mov
sbb
xor
loop
cld
sub
jge
gs
sub
imul
mov
adc
mov
sub
and
test
out
es
jge
push
cmp
mov
loope
ret
mov
push
sub
fsubl
sbb
testb
or
or
push
xor
xor
call
fwait
pop
inc
pop
pop
pop
sti
adc
das
pop
jp
push
or
mov
pop
mov
mov
sbb
aaa
cld
xchg
jge
sub
mov
int
data16
aad
jo
jmp
lods
add
jmp
scas
or
fisubrs
mov
pop
jbe
mov
shll
adc
push
mov
ret
dec
fwait
loope
dec
testl
push
ds
das
loop
fisubrl
je
adc
mov
js
sub
pusha
es
popf
test
and
jnp
pop
out
mov
pop
xchg
outsb
pop
aas
fadds
int
mov
jbe
and
mov
mov
andb
mov
sbb
push
inc
int3
mov
jmp
arpl
adc
mov
popf
jnp
or
outsl
icebp
js
lret
xchg
std
mov
cwtl
inc
cmp
idivb
test
or
push
sub
cltd
or
xchg
inc
cmpsl
repz
lcall
pop
stos
fdivrl
bound
scas
mov
fsubs
pop
adc
xchg
or
jo
mov
cmp
inc
mov
cmp
xor
fmulp
mulb
imul
popa
xchg
xchg
les
lcall
mov
inc
mov
int
jno
sbb
add
nop
enter
push
cmc
jo
stos
xor
adc
sbb
inc
sub
aas
mov
rolb
cmp
out
or
cmp
mov
ss
or
push
push
inc
xor
cmp
out
cmp
inc
pop
inc
gs
lret
dec
arpl
xor
dec
bound
inc
add
sahf
stos
mov
jmp
mov
ss
shlb
es
sub
cmpsb
xor
adc
sbb
mov
imul
ljmp
pop
xor
cs
ret
hlt
dec
or
mov
imul
icebp
mov
or
add
leave
mov
adc
fdivrl
inc
fimull
pop
leave
dec
add
sbb
jecxz
sbb
rcrl
scas
pop
ljmp
and
lods
sub
push
and
push
iret
fstpl
js
sub
pop
jno
shl
outsl
rcrl
outsl
mov
jnp
fcmove
xor
inc
repnz
mov
mov
stos
ja
push
mov
add
and
jb
jmp
jp
jo
test
pop
add
mov
mov
xchg
scas
jmp
and
repz
ret
aas
cmpsb
sbb
insl
jp
dec
mov
ds
xchg
adc
jp
popa
sbb
loope
bound
sbb
lcall
jg
rolb
icebp
rol
fdiv
sahf
movsl
repnz
or
mov
daa
test
insb
inc
mov
loope
xlat
aaa
std
push
mov
int3
jb
rcrb
sbb
inc
aam
ja
pop
addr16
jno
sarl
enter
jne
test
dec
adc
lahf
xchg
push
les
sbb
sub
popf
or
arpl
mov
imul
scas
sahf
adc
push
insb
mov
icebp
cmp
push
rolb
shl
xchg
mov
outsb
sti
mov
hlt
mov
cmp
dec
rcl
int
push
jns
ret
cltd
lcall
cli
jecxz
inc
jo
mov
xlat
into
mov
shll
minps
out
jo
mov
mov
push
lret
out
push
test
int3
aad
dec
jmp
sbb
mov
insb
fnstcw
xor
push
xor
ror
cld
pop
sbbb
sbb
andl
xchg
aaa
mov
pop
in
jle
aas
xchg
fwait
jecxz
mov
inc
ret
call
dec
add
frstor
ja
sub
outsb
ss
add
or
mov
outsb
mov
adc
in
pushf
cltd
imul
outsb
add
add
outsb
adc
or
mov
scas
dec
popa
test
loop
sahf
sub
imul
cmp
mov
and
inc
xor
hlt
jno
testl
and
ret
mov
jne
shl
adc
mov
add
fnstsw
mov
lea
push
aaa
cmp
and
mov
mov
adc
mov
pop
pop
out
jne
mov
mov
hlt
or
or
add
shr
inc
jb
out
jl
adc
fs
mov
xor
pop
stos
mov
movsl
scas
pop
push
pop
lock
out
divb
fidivrl
stos
jp
test
and
in
and
push
sub
xchg
cmc
out
fcmovne
pop
mov
fidivs
data16
xchg
add
pop
inc
jl
push
jmp
jnp
cwtl
scas
pop
jb
sbb
scas
rcrl
fadds
jnp
jb
pop
repnz
and
ds
leave
adc
jb
fisttpll
cmp
jmp
sbb
xchg
and
bound
fldcw
negb
mov
sub
cmpsl
sbb
out
mov
aam
mov
mov
fwait
push
mov
sahf
mov
lea
outsl
scas
fcos
xor
int
push
test
movl
nop
test
jne
sbb
push
or
pop
repnz
cmpl
popf
pop
push
int
sbb
cs
mov
pop
xor
mov
inc
dec
inc
aas
in
xlat
cmpsb
jne
cmp
dec
sbb
jg
mov
xchg
adc
int
movsl
fmul
shll
push
je
pop
inc
xlat
std
inc
cmp
incb
pop
push
adc
dec
mov
je
jle
xchg
test
loop
scas
insl
inc
pcmpeqw
push
jno
fsub
pop
mov
jmp
xchg
sti
es
lea
mov
mov
sbb
scas
xor
inc
xchg
in
int
aaa
mov
aam
in
push
mov
push
andl
hlt
mov
pop
mov
mov
cltd
cs
and
add
rcll
test
mov
insb
jno
add
pop
jmp
in
sti
jno
and
xor
xor
cmc
ja
sub
push
jo
je
pop
stos
dec
lret
ljmp
jns
inc
adc
lret
xchg
stos
mov
inc
xor
test
nop
or
ret
sahf
imul
hlt
or
cli
in
fdivr
push
sbb
lock
lods
push
shrb
out
add
out
mov
adc
jle
fdivrl
movsb
push
mov
sub
xchg
mov
in
cmc
movlps
mov
xchg
cs
mov
insl
jae
or
lods
push
mov
dec
inc
lcall
mov
fs
lret
fcmovbe
mov
roll
stos
mov
sub
lods
jle
repnz
mov
cmpsl
mov
shrb
sbb
push
stc
cmpsl
into
ja
and
icebp
push
lods
pushf
sbb
or
std
ljmp
push
xorb
imul
jb
into
nop
add
iret
xchg
repz
fimull
in
movsb
mov
mov
pop
mov
cmp
cs
sub
mov
out
mov
sbb
fisttpll
outsb
in
sbb
sbb
mov
arpl
or
scas
psubd
ret
shll
xchg
jne
loopne
add
outsl
fiadds
gs
mov
pop
lcall
stc
lock
xor
test
adc
js
push
cmp
test
xor
sub
sbb
xchg
int
ret
clc
cld
outsl
fucomi
test
cmpsb
in
loopne
xchg
sbb
jb
roll
pop
aas
cmp
cmc
mov
gs
or
out
sub
sbb
mov
push
test
xchg
mov
adc
out
ss
push
divb
movsl
sbb
cmp
xchg
lea
xchg
sbb
dec
imull
adc
xor
mov
fidivl
mov
xchg
push
dec
add
sahf
negl
sbb
sbb
xor
lock
or
es
jnp
adc
pushf
sub
or
add
inc
sub
mov
stos
shrb
lret
pusha
das
mov
test
fidivrl
mov
std
lods
in
ds
leave
xor
daa
nop
jmp
push
pusha
call
xor
push
mov
int
sarb
or
sub
mov
scas
ljmp
lcall
lret
lock
sbb
xor
inc
in
mov
scas
jnp
cmp
in
lret
dec
mov
or
adc
in
outsb
fs
repz
pop
xchg
xor
dec
loopne
inc
pop
adc
cwtl
nop
aaa
mov
lods
add
nop
rcrl
sub
outsl
scas
mov
clc
addr16
shrl
cmp
pop
fildll
das
add
dec
mov
loope
add
fcomp
imul
push
mov
xor
scas
cmp
mov
mov
add
inc
vrsqrtps
movsb
dec
inc
lret
shll
inc
insl
or
cmp
mov
and
mov
pop
inc
stos
adc
ss
or
dec
imul
or
xor
sbb
jne
xor
repnz
push
clc
test
fdiv
cmp
mov
jmp
inc
xchg
pop
inc
sti
sbb
scas
pop
jnp
xchg
jns
sbb
or
cmp
andl
add
xor
je
lea
pop
je
add
aas
cmp
lds
xchg
roll
or
das
in
xchg
adc
push
jae
cmp
ret
in
sarb
ret
and
fxch
ljmp
jecxz
fwait
rcrb
leave
sub
or
leave
jns
fsubp
mov
dec
rdtsc
jp
jno
sub
idivl
data16
imul
cmp
pusha
sbb
mov
pop
lock
lods
ljmp
fcomps
mov
adc
adc
pop
fnsave
in
stos
jg
or
cwtl
std
add
imul
cltd
or
icebp
aas
pop
ret
push
lds
xor
inc
xchg
cltd
aam
lret
pop
das
arpl
les
insl
push
add
inc
pop
push
dec
xchg
mov
inc
out
fdivrs
outsl
arpl
das
fcomip
adc
push
add
inc
ret
lock
pop
bound
mov
subl
xlat
pop
xchg
test
sub
fisubs
mov
and
sub
mov
mov
cmpsl
and
mov
mov
test
jg
pop
fldt
lret
mov
insb
jb
sbb
testl
add
pop
jg
in
stc
fdivrl
dec
sbb
sub
hlt
imul
in
ffree
inc
add
mov
aas
pop
mov
cmp
repnz
pop
adcl
pop
dec
and
les
push
outsl
pop
int
imul
lods
sub
sti
aam
sbb
mov
fstps
mov
test
jle
jae
mov
and
add
insb
lret
fucomi
dec
jo
dec
jne
jb
ret
mov
or
test
daa
or
mov
sub
das
mov
inc
adc
push
data16
popf
adc
call
sbb
loopne
pop
xor
jo
aam
in
mov
dec
jle
out
scas
pushf
sub
xchg
inc
bound
mov
testb
fsubrs
xchg
push
adc
stos
clc
pop
je
popa
xor
movsl
xchg
imulb
out
les
jns
jae
dec
xchg
mov
scas
pop
lea
sub
jb
mov
stc
in
out
dec
sub
mov
nop
push
adc
outsb
ss
aas
xor
subb
fwait
add
jge
jle
mov
inc
test
dec
jnp
push
out
mov
aas
and
ljmp
push
rcl
cmp
add
sub
sbb
dec
xor
int
movb
sub
cmp
xchg
fwait
jne
xchg
mov
xchg
addr16
mov
xchg
and
add
outsb
pop
xorb
je
inc
pop
and
dec
jg
jns
sub
xor
mov
rcrb
add
sbb
arpl
hlt
xchg
out
add
out
movsl
test
jmp
aaa
dec
mov
cltd
call
push
inc
popw
push
mov
push
clc
push
cmp
bound
pusha
xlat
and
ds
incl
jmp
pushf
push
mov
mov
out
push
test
and
repz
jno
xor
jnp
cmp
mov
inc
rorb
adcl
daa
xor
inc
dec
cmp
add
cltd
xchg
mov
inc
fnstenv
mov
lods
mov
pop
and
into
rcl
mov
mov
cmp
shrb
adc
int3
and
push
push
push
addr16
cld
push
xor
data16
popf
arpl
mov
sbb
mov
pop
or
sub
mov
inc
rorl
addl
mov
cmp
or
insl
inc
fwait
add
mov
addr16
or
add
lods
aam
js
pushf
cmc
aam
xchg
orl
aam
scas
mov
out
lock
mov
xchg
inc
loop
or
dec
cmp
mov
mov
popa
lods
xchg
and
dec
test
icebp
and
es
lahf
mov
rolb
sbb
sub
lret
push
lods
fmulp
dec
xchg
cmpb
hlt
and
xchg
daa
mov
xchg
jg
mov
lcall
xor
out
aaa
mov
push
xor
xor
mov
aam
mov
in
leave
pop
jmp
int3
mov
sahf
xchg
mov
out
stc
push
dec
sub
scas
cmc
imul
adc
in
imul
iret
pop
adc
xchg
popf
jl
insb
inc
iret
mov
jae
dec
sti
mov
scas
test
fs
scas
push
add
push
inc
ror
test
fstl
lret
imul
jecxz
insb
inc
lret
mov
into
sbbl
xchg
dec
ret
fnstsw
sbb
pushf
outsl
sti
in
je
call
adc
sbbl
cmpsl
xor
fisttps
lcall
outsb
cmpsb
or
insb
negl
cmp
cmpsb
dec
daa
scas
andb
decl
or
cs
jmp
jl
pop
shl
sti
les
pop
mov
jg
pushf
movsb
dec
cwtl
enter
xchg
and
mov
pop
je
mov
or
int3
push
into
mov
mov
outsl
jecxz
xor
ja
push
jns
push
jmp
fcomp
sub
les
out
mov
and
xchg
and
test
subl
fildl
push
pop
sbb
rol
jne
xor
int3
ja
lret
push
and
xor
sti
rorb
imul
test
xor
sti
or
mull
es
dec
sub
dec
adc
dec
sbb
inc
mov
mov
scas
inc
push
push
inc
lea
incl
jo
popf
mov
test
int
mov
cmp
sbb
test
cmp
loopne
insb
mov
mov
int3
dec
das
subb
inc
push
sbb
jnp
fs
out
inc
test
ret
xchg
xchg
jecxz
iret
mov
xchg
pop
fmul
xchg
push
in
lret
sub
sub
es
push
push
test
in
push
inc
lahf
cmp
inc
pushf
out
xchg
xor
stos
cwtl
mov
jb
pop
je
jecxz
jns
jbe
fildl
xchg
push
mov
imul
fwait
repz
movsl
cmp
mov
gs
popa
cmpsl
and
mov
scas
popf
sbb
rolb
cmp
gs
lock
cltd
scas
sarb
pop
pop
and
jg
dec
fldenv
dec
pusha
xor
movsl
shl
notb
icebp
fidivrl
push
js
push
jecxz
sbb
rcrb
test
mov
cmp
mov
inc
int3
repnz
insb
call
xchg
sub
enter
mov
jl
je
outsb
loope
pop
push
jg
push
add
push
jg
cmpsb
dec
popa
cmpsl
ss
xor
xlat
mov
cmp
mov
adc
movsb
and
dec
push
or
fildl
out
xor
mov
adc
xorb
hlt
fcomip
repz
mov
adc
xor
dec
test
nop
push
pop
insb
pop
in
pop
out
negb
pop
insl
bound
dec
xchg
out
jl
rcrl
gs
xchg
fisttpll
fwait
pop
aas
lods
mov
roll
fsts
repz
test
les
jne
out
pop
aam
mov
add
aad
cmp
sub
es
fstp
xlat
loop
ret
fstl
xor
int3
mov
repz
mov
aas
andps
mov
inc
xor
inc
addr16
mov
lret
sub
xchg
jo
sbb
ret
xlat
mov
mov
fsubrs
fsubl
or
inc
or
push
movb
mov
int3
xor
je
movsb
daa
scas
xchg
shr
adc
fdivs
jmp
ss
pop
fxtract
aas
or
scas
jp
sub
scas
stos
push
jnp
hlt
add
mov
fwait
add
lahf
insl
out
fmul
mov
adc
popa
xor
mov
aad
jo
cld
fldcw
jbe
ds
add
jnp
orl
inc
xor
sbb
mov
out
call
repnz
rclb
fwait
mov
dec
movsl
enter
les
sub
sahf
gs
loop
movsl
popl
add
lods
shll
addr16
inc
jp
cli
stos
popf
dec
rclw
icebp
imul
jno
and
cmp
xchg
cld
loop
or
and
xchg
rorb
and
int3
push
mov
and
stos
push
sbb
clc
idiv
cmpsb
push
mov
lods
mov
add
xchg
dec
push
mov
lods
aam
out
or
xrelease
pop
in
je
aas
inc
inc
in
jg
scas
pop
inc
into
adc
loop
test
dec
add
inc
dec
stos
xchg
mov
and
je
jo
ljmp
push
mov
into
stos
filds
mov
inc
inc
sbb
and
cmp
mov
mov
out
aaa
cmc
in
push
lods
mov
lret
jle
pusha
in
inc
dec
fistps
lret
addr16
orb
pop
iret
sbb
sub
mov
ljmp
pushf
push
test
mov
aas
xchg
xchg
push
or
lret
ret
xor
out
daa
fwait
push
adc
cmp
xchg
jne
shll
mov
ret
mov
cltd
inc
xchg
add
sarb
pop
rcrb
inc
icebp
mov
shr
mov
das
leave
push
or
outsb
mov
mov
imul
aad
loopne
jno
pushf
mov
xchg
outsb
cmpsb
dec
sbb
gs
aam
adc
lcall
jno
lcall
roll
pop
fildl
mov
sub
mov
lods
mov
imul
mov
cmpsl
push
push
inc
in
lea
mov
mov
xor
mov
pop
mov
or
sbb
adc
adc
push
mov
jl
mov
add
jb
mov
pop
push
in
sub
js
int3
mov
stos
sub
inc
pop
inc
aam
scas
mov
push
scas
scas
cmp
pop
iret
std
add
test
adc
push
adc
icebp
inc
fmull
xor
int3
push
test
insb
cltd
xchg
inc
outsb
test
xor
pop
arpl
mov
inc
push
jmp
mov
sub
sbb
adc
pushf
bnd
sub
addr16
dec
xor
imul
xchg
data16
bound
adc
lahf
addr16
test
xchg
adc
shlb
dec
xor
cmp
cwtl
mov
and
cmpsb
sub
mov
adc
dec
and
ss
std
xlat
cmp
dec
test
in
sbb
stos
mov
xor
test
loopne
push
cmp
or
dec
push
mov
loopne
repnz
pusha
das
jle
lods
fisttpll
ret
test
xlat
adc
push
leave
pop
mov
into
lahf
scas
stc
scas
xchg
cmpsb
xor
and
cmc
in
jb
scas
push
sbbb
jg
bound
outsl
shl
and
or
inc
pop
sbb
adc
movsb
imul
scas
jp
popa
bound
push
fmul
sbb
out
ficompl
ret
and
arpl
nop
jns
outsl
cs
dec
cmp
leave
push
pusha
inc
test
sbb
int3
inc
sbb
movsl
insl
ficoms
out
int3
cmp
cmp
das
add
lods
push
push
or
movsb
aas
push
aas
test
fsubl
pop
jp
mov
mov
adc
sbb
inc
mov
mov
adc
inc
mov
or
roll
in
js
xchg
mov
sbb
rcl
or
ret
adc
stos
repz
xchg
xchg
push
data16
cltd
movsb
insl
mov
icebp
sbb
orb
adc
iret
decl
pusha
jg
stc
ljmp
daa
or
test
out
push
in
or
sarb
repz
add
add
or
mov
mov
add
dec
popf
sbb
and
pop
xor
sbb
xchg
ja
jecxz
iret
test
adc
sti
xor
or
aad
out
add
xchg
scas
stc
lea
leave
jg
and
mov
jne
in
push
xor
push
das
out
add
fidivs
sti
add
dec
cwtl
lea
lods
loopne
out
add
xchg
or
in
cvtps2pd
fildl
push
adc
push
inc
js
mov
adc
repnz
arpl
int3
aaa
cli
loop
dec
sub
mov
dec
add
mov
xor
sahf
ret
iret
cwtl
and
in
lods
xchg
mov
fwait
jecxz
sbb
jno
jae
mov
mov
dec
fstp
mov
les
bound
add
aaa
clc
mov
sbb
cmpsl
adc
or
aad
jae
ret
or
xchg
lds
fisubl
outsb
lods
fiaddl
push
sbb
pop
xchg
xchg
loope
sbb
jmp
dec
aas
outsb
arpl
sub
in
add
jno
aas
mov
popa
lret
adc
decl
xchg
mov
ljmp
outsb
repz
clc
lcall
sub
or
cwtl
pop
js
adc
pusha
mov
xor
sbb
lods
stos
xchg
add
cmp
jle
adc
push
xor
push
mov
jae
aam
ret
mov
ss
add
push
int3
lods
pop
enter
mov
ds
sti
arpl
hlt
stos
mov
mov
mov
or
nop
inc
sbb
xchg
cltd
add
jo
inc
pushl
push
push
sbb
mov
and
pop
mov
fsubl
mov
in
leave
ds
or
aam
js
enter
dec
nop
mov
ljmp
sti
inc
int
mov
call
popf
adc
mov
cltd
push
cwtl
mov
jbe
jecxz
adc
and
jae
jl
sti
icebp
mov
mov
fwait
inc
ds
test
cmp
out
gs
sub
sbb
out
andl
xchg
jle
into
dec
insl
mov
sub
mov
jnp
fmuls
lahf
mov
inc
cltd
jb
mov
pushf
add
add
shrl
stos
or
or
aad
aam
sti
loopne
pop
int3
call
sbb
idiv
out
sar
call
dec
mov
rcll
iret
inc
sbb
mov
pop
sbb
and
sbb
into
shrb
xor
in
jmp
mov
push
or
adc
mov
mov
and
inc
pop
xchg
mov
mov
cmp
push
jb
popf
shr
out
pop
int3
out
jnp
fildl
sbb
or
repz
sbb
incb
jno
out
stos
dec
sub
jp
fmul
jno
xchg
mov
inc
dec
sub
cmp
xchg
pop
jecxz
fisubs
xlat
int
inc
or
pop
es
fdiv
test
ret
and
adc
push
pop
shll
mov
jnp
loopne
idivl
adc
out
jns
ficoms
pop
pop
lahf
stos
pop
fldcw
sub
es
fwait
pop
out
dec
xor
mov
fldl
mov
adc
lds
sub
popa
cmp
dec
ret
negl
inc
mov
mov
and
pop
imul
lret
dec
in
xchg
mov
jne
or
fists
ds
adc
jbe
les
dec
in
mov
testl
sbb
shr
and
or
xor
sub
sbb
jge
aad
and
fsub
inc
xchg
imul
push
insb
dec
imul
sub
icebp
or
lea
push
pop
out
add
pop
add
push
lahf
xchg
push
pop
jge
pushf
lods
scas
mov
xchg
pop
aas
in
dec
add
xchg
inc
adc
dec
loop
out
adc
inc
dec
push
sbb
shrl
mov
aaa
push
add
dec
jns
iret
fisttpl
mov
jl
mov
outsl
mov
rcr
icebp
jg
sub
mov
outsl
jp
std
clc
fs
sub
dec
mov
and
insl
xchg
shll
out
xchg
mov
or
je
mov
pop
sbb
mov
and
rorl
pop
lods
xchg
dec
jmp
jne
cli
movsb
push
rcll
ss
inc
xchg
jns
imul
clc
test
cmp
shl
hlt
pop
pop
jne
sbb
jg
ja
cmp
out
popl
pusha
mov
xchg
xchg
test
popa
repnz
out
es
sub
jbe
lret
aas
xchg
mov
inc
mov
test
and
push
adc
push
xchg
ficoms
dec
xlat
cmp
push
imul
loopne
gs
ret
jle
adc
cltd
dec
mov
test
out
adc
dec
inc
in
outsl
das
cmp
rep
popa
cmp
imul
cmp
addr16
push
and
jno
pop
jae
dec
mov
xchg
mov
inc
adc
xlat
adc
adc
dec
scas
stos
mov
in
xchg
test
xchg
gs
rol
pop
les
inc
jne
mov
jp,pn
jmp
push
or
mov
sub
aad
cmp
xchg
out
mov
fs
jge
mov
push
mov
mov
int3
sbb
dec
cs
das
mov
inc
mov
jne
adc
xchg
mov
jle
sti
inc
out
jle
fcom
cmp
lahf
mov
jmp
fcmovnb
rcl
cmc
or
and
mov
imul
fwait
repz
fsts
testb
in
xor
sbb
jle
push
jl
mov
xchg
or
xchg
dec
jp
imul
outsb
sti
push
mov
mov
xchg
cmp
clc
jge
push
dec
shld
jge
sbb
lcall
sar
lahf
addl
aam
subb
adc
mov
cmpsl
mov
rorl
fidivs
jle
adc
mov
xchg
stos
jecxz
into
stos
xor
mov
jmp
mov
aaa
pop
mov
dec
pop
out
push
add
dec
pop
inc
stos
daa
mov
popa
and
loopne
jno
xor
je
pop
fldcw
jge
dec
ret
gs
add
fsubr
jle
dec
aam
shl
push
add
jge
call
daa
xor
std
fmul
cmp
stos
or
mov
lret
cli
test
imul
push
inc
shll
mov
adc
imul
and
dec
iret
sbb
js
and
mul
pop
add
sub
outsl
xchg
ljmp
cltd
lea
dec
cmc
or
xor
sub
iret
xchg
sbb
mov
mov
push
rcrb
inc
fcmovnu
cld
adc
mov
mov
dec
lahf
mov
xchg
jb
jbe
clc
stc
add
test
dec
je
test
movb
leave
or
ss
outsl
cli
aas
in
fldl
jecxz
add
mov
push
jno
in
fiadds
loopne
adcl
js
xchg
cmp
xchg
adc
xor
jbe
mov
in
mov
jno
or
int
in
jae
adc
jno
push
jl
aaa
or
pusha
sbb
jmp
mov
push
push
out
dec
jg
aaa
aas
fidivrs
mov
pop
imull
nop
fildl
cmpsb
icebp
js
jae
dec
int3
push
push
fs
xchg
psubb
int
inc
incb
lods
arpl
cmp
adc
or
out
sbb
or
cmc
and
out
mov
mov
jmp
and
jl
int3
jmp
push
lcall
mov
leave
pop
mov
scas
shrb
pop
rolb
roll
mov
leave
mov
cmp
mov
mov
xor
faddl
sti
push
and
push
sub
fwait
add
lcall
xor
clc
inc
xchg
ljmp
or
sahf
sbb
test
and
outsl
call
in
add
nop
jnp
dec
sbb
outsl
lahf
sub
dec
out
cltd
pop
jg
xor
push
dec
and
mulb
adc
sbb
test
push
jo
and
mov
call
sub
loop
and
and
or
and
imul
xchg
fisttpll
movsl
adc
test
cmp
push
les
sub
or
jg
shll
int3
fwait
mov
bound
test
lret
es
adc
int
jo
dec
inc
adc
push
lods
add
dec
mov
popf
jg
das
mov
dec
das
push
fdivs
inc
fstpl
mov
sbb
call
inc
cmp
ret
ljmp
pop
mov
xchg
daa
jg
push
lods
push
mov
insl
inc
lcall
insb
jno
inc
cs
mov
mov
inc
mov
ss
outsl
mov
push
mov
push
add
or
jp
ja
scas
je
and
push
lret
mov
lds
popf
mov
mov
push
xor
cmp
or
cmp
fiaddl
lock
dec
out
cmpsl
lret
mov
xor
sub
dec
jl
out
aas
cli
adc
inc
sub
dec
mov
lods
pop
into
cwtl
roll
cmc
das
in
adc
xor
dec
test
xchg
fldenv
adc
pop
in
lahf
add
mov
or
xor
fidivrs
or
repnz
aad
shrl
jg
repz
push
stc
sbbb
les
jbe
xlat
daa
pop
xchg
stos
sbb
push
jge
cmp
rolb
lret
cltd
clc
out
add
sbb
inc
jb
jb
call
popf
ss
and
lock
jb
test
cmpsb
add
imul
dec
cmp
jle
jb
aaa
test
gs
push
mov
jge
pop
pop
mov
jb
cmp
icebp
dec
adcb
pop
pop
dec
sub
pop
sub
jle
mov
lahf
cmpb
push
cmp
or
mov
pop
jne
test
and
jl
fwait
xchg
pop
shrl
jb
outsb
mov
dec
push
push
adc
test
mov
mov
lods
push
xchg
add
das
pop
mov
mov
std
add
and
gs
data16
inc
mov
xor
lret
sbb
out
fwait
mov
or
jle
fldenv
bnd
adcl
mov
and
aam
adc
mov
imul
aas
test
fidivrs
lret
sbb
outsb
xor
jns
cmp
inc
push
sub
pop
call
mov
push
cmp
push
sbb
jl
in
adc
daa
jg
add
jp
inc
pop
jp
xchg
arpl
add
cld
les
out
cmpsl
add
sti
cmc
daa
ja
push
loopne
hlt
mov
cmpsb
cs
inc
and
inc
adcl
ss
in
jns
cmp
jns
xor
lahf
sbb
ret
pop
mov
aaa
and
pushf
mov
cmp
pop
popl
dec
push
pop
insl
push
add
xor
adc
dec
cmpsb
push
mov
lahf
in
or
test
js
lock
imul
enter
push
stos
jle
pushf
ss
sbb
sbb
pop
fildll
and
mov
inc
xchg
adc
cmpsb
fs
push
mov
aaa
or
xchg
mov
mov
jns
imul
cmpsb
mov
push
rclb
xchg
ret
xorl
and
cmp
cs
jne
scas
std
loop
das
jo
add
sub
or
fisttpll
sahf
add
cmp
int3
mov
ret
mov
int
dec
and
inc
xchg
mov
mov
dec
mov
xchg
aas
jg
cmp
nop
insl
movl
push
inc
xchg
filds
inc
push
mov
fcmovbe
cltd
mov
loopne
shlb
dec
mulb
test
daa
mov
push
xchg
daa
sbb
stos
outsb
popa
xchg
mov
std
inc
cwtl
mov
fidivl
jge
lcall
mov
dec
lock
cmp
cmp
inc
dec
cmp
inc
sub
push
pop
inc
out
push
lea
inc
dec
inc
cmp
in
sub
mov
xchg
adc
orl
fdivrp
add
xchg
inc
lcall
sti
es
pop
sbb
fimull
outsl
test
inc
cmp
sbb
mov
pop
xchg
mov
xor
pop
adc
xchg
fdivs
rcll
sahf
nop
mov
ret
test
in
dec
mov
in
imul
fdivl
insb
mov
fidivs
cmp
or
ljmp
out
cmp
mov
rorl
mov
lret
pop
inc
adc
cli
popa
inc
cmp
gs
add
xor
xor
arpl
rcll
push
mov
mov
movsl
push
and
xchg
out
xlat
fiadds
jno
pop
negl
jp
xchg
mov
sub
lret
jns
sbb
inc
xchg
adc
in
pushl
sub
sbb
ds
mov
add
mov
mov
cmp
ljmp
jno
push
sub
lret
mov
stos
js
and
inc
hlt
jnp
cmp
jecxz
xchg
push
mov
push
leave
mov
pop
pop
mov
mov
cmp
aad
sub
gs
sbb
je
mov
inc
mov
std
adc
dec
pusha
add
daa
jge
mov
inc
sub
and
inc
cmp
test
movsl
dec
cmp
addl
push
stos
mov
inc
adc
pop
in
xor
mov
add
popf
dec
sbb
imul
xor
add
mov
jmp
test
imul
jo
cmp
out
or
xlat
pop
adc
and
mov
pop
mov
pop
mov
cmp
push
jno
sbb
pop
xchg
push
sub
sahf
arpl
shl
pop
xchg
pop
or
insl
inc
mov
adc
push
mov
imul
mov
fwait
rolb
inc
fcom
inc
mov
clc
aaa
rcr
jmp
lret
dec
jbe
jecxz
inc
cmp
xor
adc
cmp
fdiv
imulb
sbb
out
or
pop
mov
insl
scas
mov
fstl
xchg
jecxz
in
sbb
xchg
sub
outsb
repnz
pushf
dec
aas
and
and
sub
cmp
and
cmpsl
cwtl
imul
jbe
xchg
repnz
ljmp
das
xchg
jg
pushf
add
inc
das
out
ds
js
lods
dec
cmp
xchg
fadds
mov
adc
in
jl
cmp
add
mov
add
lea
mov
les
dec
jg
pop
cmp
insb
dec
jl
push
cwtl
xor
fs
imul
sub
pop
cmovs
pop
test
push
fimuls
adc
and
cmp
sbb
or
arpl
divb
shl
aad
stos
push
loope
cmp
pop
cmp
pop
xchg
dec
inc
aam
lea
cltd
movsl
mov
fstl
sub
in
push
and
ret
push
int
out
ds
push
incl
dec
push
out
loope
sbb
pop
jmp
repnz
out
adc
cld
sub
subl
jo
sarl
call
push
xor
mov
adc
and
jl
mov
mov
mov
cmp
xchg
in
es
adc
pop
xchg
jg
jmp
iret
push
scas
out
xchg
stc
cmc
sub
cltd
incb
addb
adc
add
mov
pop
and
mov
lds
jg
bound
ljmp
dec
xchg
insl
mov
clc
fistpl
je
mov
mov
dec
test
ds
fbld
leave
or
loop
iret
inc
sub
ret
xchg
mov
jl
fiadds
xlat
cld
insb
xor
mov
pop
push
loope
scas
sbb
cmpsl
inc
xchg
les
add
repnz
loop
into
lods
mov
pop
int
inc
ja
xchg
add
and
stos
mov
repnz
dec
add
inc
push
dec
mov
push
add
insl
inc
outsl
xor
cmp
lods
repz
jl
add
lret
leave
xchg
cld
jg
setge
pusha
inc
dec
sbb
and
stos
dec
rcrb
pop
das
sbb
xchg
scas
cmp
or
in
aaa
arpl
add
dec
add
add
cmpl
idivb
sbb
ret
xchg
rcrb
xchg
outsb
mov
sti
fwait
movsl
mov
pop
addr16
inc
in
push
sahf
loop
outsb
cmc
push
popf
addr16
or
sub
aas
cld
xchg
ljmp
shl
lods
je
cmpsb
and
lock
jge
sbb
xor
repz
pusha
fisttps
jns
not
sbb
pop
daa
ds
jnp
jp
sarl
stos
enter
cmpsl
sbb
and
add
jecxz
and
imul
or
sti
negb
mov
rcr
jecxz
loopne
rcr
out
mov
or
xchg
lds
call
stos
popa
push
sub
sub
ret
sub
xor
lea
xchg
int3
jp
mov
inc
mov
inc
inc
dec
jb
scas
lods
sbb
xchg
and
out
aad
mov
js
pushf
out
jg
lret
pop
dec
cltd
stos
cld
scas
and
repz
xor
fmuls
dec
fidivs
push
jmp
pushf
enter
addb
clc
dec
push
add
rol
pop
clc
mov
push
dec
mov
in
mov
popa
fsts
repnz
insb
outsl
sub
add
pop
gs
push
push
adc
cltd
xchg
int3
xchg
push
imul
xchg
xor
enter
test
jle
push
push
push
xor
dec
addr16
ret
cmp
push
mov
adc
fldl
adc
mulb
test
mov
mov
leave
out
adc
xlat
pop
inc
inc
pop
jae
arpl
mov
fldcw
add
xor
jne
mov
xlat
adc
int3
scas
lret
rcrl
insb
int3
in
sub
cli
or
aaa
mov
sti
daa
ja
lcall
sub
or
inc
push
ret
iret
fisttpll
pop
hlt
mov
out
out
loope
and
cmp
or
mov
in
sbb
and
dec
jmp
fnstsw
push
or
sub
repnz
mov
jecxz
lcall
and
flds
adc
pop
mov
and
repz
scas
and
xchg
add
stos
scas
add
xchg
fnstenv
ljmp
xlat
mov
shrb
xor
pop
mov
aad
or
nop
inc
shr
add
outsb
mov
mov
daa
out
stc
sub
stos
lds
inc
stc
sub
out
jb
cmp
in
mov
push
pop
enter
push
push
sbb
push
gs
cmp
or
lds
mov
dec
push
and
sub
mov
pop
sub
mov
or
aas
sub
push
pop
xor
outsl
xchg
push
cmpsb
popf
in
int
and
add
mov
or
jge
cmp
adc
icebp
dec
jb
in
mov
mov
gs
jmp
sbb
mov
popf
movsl
and
cmp
dec
jle
xor
popf
jo
push
fnsave
mov
push
mov
xlat
sahf
jp
enter
mov
add
dec
test
dec
dec
addr16
jl
stos
cmpsl
or
xor
mov
xchg
dec
insb
pop
mov
pusha
adc
aam
mov
sub
and
or
inc
rorb
pushf
out
in
pop
mov
mov
jae
jb
bound
dec
ret
xchg
mov
fwait
jmp
sbb
and
cmp
sub
sbb
nop
daa
mov
sarb
hlt
xchg
inc
sbb
les
scas
xor
rcrl
sahf
fimuls
ja
mov
loopne
imul
jae
je
mov
fcoml
dec
popf
push
hlt
push
lret
sbb
or
clc
mov
loop
and
and
mov
xchg
push
push
rcll
cmc
lret
mov
ds
jnp
push
aam
xchg
push
cmp
adc
mov
cs
sub
sti
lcall
mov
and
or
lods
push
push
mov
jecxz
mov
adc
xchg
aad
jp
or
fs
les
nop
add
sub
aas
or
pop
cmc
jnp
loop
jg
ljmp
outsl
pop
inc
fldcw
das
or
jbe
sbb
xor
or
fistl
dec
add
push
loop
cmpsb
mov
idivl
dec
ds
repz
jbe
leave
add
adc
jns
cmp
fdivrl
call
xchg
sbb
add
shrl
push
adc
mov
dec
out
les
ror
jno
mov
mov
arpl
mov
push
pushf
fmull
ds
dec
and
or
outsl
insl
push
jne
iret
lret
sarl
dec
or
xchg
fcmovu
adc
or
sub
in
xchg
cmp
loop
add
sub
pusha
xor
sub
sti
adc
pop
xlat
dec
or
or
lcall
cld
imull
push
stos
push
or
clc
jle
cmpsb
sub
out
mov
imul
mov
pop
popa
scas
add
das
repnz
inc
xchg
jmp
mov
dec
jmp
jge
daa
loopne
out
jo,pt
dec
sbb
ficompl
pop
inc
loope
stos
fadds
cmp
push
pusha
adc
cmp
mov
inc
bt
and
imul
fbld
sahf
push
rclb
pop
xor
xchg
faddl
fwait
lret
dec
aas
mov
repnz
push
cmp
pop
stc
mov
push
fdiv
mov
jge
cmp
cli
leave
in
das
or
addl
ja
xchg
out
xchg
hlt
cmp
pop
test
ret
dec
pop
mov
jnp
lds
jno
sub
shll
pusha
jmp
stos
fscale
out
jbe
cli
imulb
and
mov
fmul
jl
adc
clc
ret
cs
adc
pop
lea
insl
out
into
add
jmp
xchg
roll
bound
insl
in
rcr
fs
inc
pop
sbb
das
or
inc
sub
call
mov
dec
rcrl
dec
dec
or
rolb
fstp
ret
shr
call
pushf
mov
sub
mov
aaa
mov
or
add
adc
pusha
push
icebp
jno
std
aam
xchg
mov
and
mov
mov
jle
push
fisubrs
insb
out
cltd
or
mov
cmp
ja
mov
add
dec
sub
and
xchg
mov
pushf
into
add
mov
sub
inc
les
repnz
jns
sbb
in
fiadds
in
mov
movsl
jo
dec
cmp
flds
loopne
insb
xor
daa
movsb
out
dec
out
cmp
pop
xchg
cs
push
hlt
rcll
lcall
icebp
enter
fsubrs
popf
mov
xchg
addr16
fwait
jp
dec
iret
add
jmp
subb
cmp
lret
ss
mov
mov
xor
dec
sub
fwait
sbb
xor
mov
icebp
xchg
jb
mov
js
add
shrl
insb
icebp
jge
xchg
pmaddwd
jo
ret
mov
lcall
stc
rclb
xchg
adc
fcompl
cmp
or
pop
ljmp
push
pusha
cmp
outsl
outsb
mov
loopne
jnp
sbb
rcll
adc
add
pop
arpl
inc
xor
and
out
jb
pop
pop
ret
ss
mov
das
stos
outsb
es
popa
sbb
cmc
mov
in
aad
push
jle
bound
in
int3
lods
scas
call
repnz
stos
loope
sbb
addr16
or
dec
mov
sub
mov
inc
and
dec
imul
and
cmp
inc
jge
jae
outsb
ficoml
sar
cmp
pusha
add
pmullw
ficompl
rcll
daa
cld
adc
fmull
xchg
pop
cmp
cmp
mov
pushf
xchg
xchg
mov
loop
dec
mov
xor
loop
cli
and
adc
lcall
cmc
cmp
and
or
push
repnz
xchg
cs
or
out
jns
int
data16
loopne
push
ljmp
add
xor
push
loop
inc
shrb
rcrl
pushf
adc
int3
pop
xchg
jne
testb
and
imulb
test
pop
cmp
outsl
popa
arpl
sahf
push
mov
gs
imul
mov
ja
xor
mov
je
movsl
mov
mov
pop
add
in
stc
pop
out
ret
adc
scas
mov
dec
jne
xchg
sbb
sbb
push
sub
sub
nop
or
mov
push
inc
or
mov
jns
pop
sbb
nop
stos
ds
cmc
shll
adc
xlat
in
xchg
adc
aaa
imul
scas
adc
movsb
fistl
insl
sbb
xor
in
popa
mov
cmpsl
lret
mov
scas
icebp
cltd
shl
sahf
dec
inc
pop
rorl
mov
lock
nop
pop
jae
and
or
mov
je
pop
sbb
aaa
js
jecxz
push
push
jbe
push
or
outsl
arpl
jg
dec
addl
inc
aam
adc
push
ds
out
rcll
pop
xorb
fbld
aaa
and
inc
dec
or
cmp
mov
or
xor
int
mov
jge
enter
das
pop
jle
popf
mov
mov
pop
out
push
stos
dec
ret
and
pusha
stos
dec
lret
je
fisubrs
sbb
orb
or
or
loope
sub
fcmovu
arpl
ja
ljmp
push
loopne
hlt
lock
imul
xor
mov
jle
xchg
repz
stos
out
inc
loope
inc
push
sub
test
sti
imulb
dec
insl
adc
cwtl
jg
pop
outsb
cmp
ja
adc
leave
adc
test
call
push
outsb
lret
mov
xchg
incb
hlt
fwait
cli
iret
fsubs
pop
xor
ds
std
cwtl
sahf
push
jo
lock
call
je
and
jecxz
lret
mov
sub
inc
mov
gs
push
nop
popa
in
out
push
jmp
pushf
or
mov
add
fs
lcall
sbb
dec
sub
repz
mov
bound
sub
repz
cmp
mov
cmp
mov
les
lcall
int3
jnp
push
dec
jne
popa
sub
shll
xor
icebp
adc
mov
adc
aas
mov
cld
lahf
inc
sub
jle
push
xor
or
sbb
pop
ss
pop
and
cmpsl
fldenv
jl
cmp
pop
loop
fsubs
or
mov
cmp
dec
mov
icebp
cs
cmpsb
test
adc
jmp
ret
and
add
inc
push
inc
test
xor
fcomi
add
bound
or
repnz
cmp
jle
or
push
movsl
aas
shrb
call
adc
cmpsl
xchg
ljmp
call
out
ret
sbbl
push
imul
ret
push
cmp
sbb
repz
sbb
inc
mov
mov
jge
push
pop
daa
ja
pop
das
xchg
jp
inc
pop
rcrb
sahf
mov
xchg
jb
jne
movsl
add
cmp
popf
adc
pop
enter
jp
mov
fs
jmp
fdivrs
inc
mov
sti
sbb
mov
ficomps
push
jmp
nop
out
idivb
adc
nop
aam
ljmp
xchg
and
mov
gs
sahf
sbb
or
and
pop
lods
ja
ja
scas
imulb
aas
jbe
sub
pop
lret
sbb
aas
lock
shr
push
loope
pop
mov
xchg
inc
cmpsb
arpl
cmp
scas
mov
out
push
lahf
mov
mov
in
xchg
stos
inc
dec
repz
xchg
jmp
push
jg
push
pop
mov
subl
jp
testb
clc
clc
int3
push
stc
out
popf
pop
out
hlt
sbb
pop
fxch
frstor
push
imull
je
inc
sbb
pushf
cwtl
lea
aaa
insl
adc
mov
or
sub
pop
inc
cmpsl
add
hlt
push
cltd
or
mov
inc
cmpsb
jo
mov
dec
mov
fwait
xor
sti
or
jp
outsl
and
jp
call
add
lcall
lret
sbb
pop
fucomp
cmp
adc
fldt
jg
rcrl
and
hlt
dec
cmp
fnstsw
cli
test
or
adc
jb
mov
inc
mov
gs
jp
cmpb
into
test
loope
pop
jmp
sub
sub
or
das
imul
aaa
clc
adc
arpl
ror
fisubrl
pop
inc
mov
xchg
mov
rcl
dec
outsl
inc
enter
mov
cli
out
adc
clc
or
stos
adc
push
sahf
faddl
lret
mov
cld
jle
out
cmp
pop
xor
cmpsb
pop
jbe
icebp
sub
xor
or
aaa
push
xor
outsb
mov
sahf
xchg
xchg
test
pop
push
push
js
cltd
pop
lret
cmp
movsb
and
pop
add
and
jb
inc
ds
xor
jg
jbe
in
xlat
jge
sub
in
jecxz
sahf
in
ljmp
and
les
dec
lahf
loopne
cwtl
cmpsl
or
gs
pop
leave
movsb
jo
push
jecxz
dec
repz
std
shlb
push
push
lahf
repnz
fsubs
es
orl
insb
fbstp
test
mov
sub
int3
mov
and
push
pop
pop
leave
mov
cmc
das
flds
jno
sub
ffreep
add
dec
push
xchg
push
testb
inc
inc
push
xchg
inc
jno
or
mov
lds
cld
sub
pop
inc
and
mov
xlat
in
loopne
cmp
push
or
cmpsl
pop
arpl
pop
es
jl
mov
push
xchg
sub
mov
adc
adc
lock
call
mov
jle
add
xor
insb
cmp
std
push
aad
inc
jns
cmc
jmp
xchg
dec
sbb
sub
bound
jae
divl
fidivs
jecxz
mov
sbb
aas
or
call
into
dec
jecxz
shr
mov
shrb
ja
add
jecxz
cmp
dec
outsb
or
xchg
push
sub
sub
push
inc
ret
gs
movsb
fnstcw
mov
or
sti
mov
test
mov
dec
jp
je
xor
cmp
les
jb
mov
outsb
das
xchg
jl
pop
mov
pushf
enter
out
jp
mov
pushf
add
push
pop
mov
push
mov
rclb
sti
sti
dec
sbb
jbe
xchg
sarl
xor
pmuludq
mov
push
sbb
jg
cmc
cmpl
in
dec
lods
sbb
rcll
out
daa
mov
inc
scas
jg
test
mov
mov
xor
daa
ret
pop
mov
int3
inc
add
or
ret
rclb
dec
adc
dec
xchg
or
dec
mov
call
xor
dec
ret
arpl
lret
sbb
dec
stc
ss
scas
xor
lock
stos
sub
xor
sbb
sahf
loope
jle
mov
stc
cld
arpl
mov
mov
sub
mov
add
stc
and
and
imul
popa
mov
popf
andnps
mov
inc
pop
hlt
fisubl
pop
jl
in
inc
jo
xchg
sub
or
jnp
push
pop
loop
or
adc
loope
fstl
jle
inc
pop
add
div
cmp
leave
repz
movsl
adc
loop
leave
xor
add
rcl
test
mov
imul
lahf
scas
xchg
pop
adc
and
stos
ds
mov
jb
push
test
xlat
xchg
fs
lock
pop
sbb
pusha
stos
and
mov
scas
ret
call
cmc
adcl
andl
fcoml
aam
jg
mov
daa
mov
test
cmpsb
lret
ss
test
scas
mov
xchg
pusha
and
insl
pop
mov
jecxz
test
inc
stos
xor
xchg
ja
or
int3
pop
jmp
je
nop
adc
call
xor
fistl
pop
ficoms
inc
mov
fstpt
fsubp
out
and
mov
jns
pop
inc
lea
jmp
push
mov
inc
sahf
loope
or
cmp
add
leave
sbb
test
pop
xchg
jg
sbbl
sub
xor
ja
push
lods
jae
jmp
xor
mov
mov
imul
mov
in
rolb
lock
das
movsb
sub
ret
push
stc
in
ret
mov
rcrb
mov
icebp
js
js
rcr
fisubrl
in
sbb
jmp
xchg
xchg
jb
dec
popf
shl
inc
es
xchg
int3
iret
mov
push
adc
cltd
cltd
sub
fidivl
push
xchg
nop
les
call
or
inc
cmc
xchg
jecxz
adc
cmpsl
inc
mov
jno
out
lret
mov
int
flds
fnstcw
sub
pop
gs
addr16
jle
mov
gs
decl
inc
xchg
cmp
push
push
enter
shll
pextrw
mov
test
rclb
fs
xchg
in
inc
shl
xchg
cmc
pusha
sahf
adc
xor
xchg
xchg
ja
push
rcll
mov
int3
or
add
jmp
decb
mov
dec
and
pop
cmp
cld
stc
add
mov
aaa
sbb
mov
clc
loopne
movsb
mov
inc
fisubs
dec
inc
dec
call
adc
jmp
mov
dec
xchg
clc
sarb
mov
or
inc
pusha
push
mov
cli
fnstenv
jo
or
mov
or
pushf
mov
jge
and
add
outsl
fisttps
gs
inc
mov
dec
loope
into
test
rolb
test
jg
ficoml
and
daa
js
adc
leave
insb
sahf
pop
rcrl
test
inc
mov
add
lods
std
push
data16
fwait
push
and
insb
add
scas
cmpsl
cli
call
or
push
lea
in
and
insb
test
aam
pop
jns
popa
insb
xchg
mov
jl
fmull
pop
fwait
fwait
dec
jnp
mov
dec
movsl
rclb
xchg
sahf
mov
and
inc
mov
gs
aad
adc
mov
notl
jnp
pop
xchg
mov
push
pop
push
loopne
mov
test
adc
andl
fnsave
jmp
xchg
shll
in
jbe
push
fistl
jne
aam
xchg
lods
repnz
inc
mov
movsb
sbb
imul
call
jbe
ss
push
push
loope
or
test
aaa
add
jge
sbb
mov
mov
mov
dec
lcall
fstps
js
cmpsl
leave
jmp
ret
insl
jno
imull
and
scas
out
pop
jnp
dec
shrl
and
mov
cli
lret
mov
add
cmc
inc
lea
mov
inc
aas
or
test
mov
je
rorl
dec
lret
add
pop
scas
adc
roll
popf
shr
pop
dec
pop
mov
mov
dec
outsb
in
sbb
test
or
lods
imul
arpl
and
scas
inc
jge
ss
test
mov
sub
sbb
pushf
imul
out
add
sbbl
push
subl
cmp
mov
loope
sbb
ret
nop
lock
int
iret
adc
mov
sub
lods
jmp
in
jp
cli
fcmovnbe
cmp
push
and
stos
cld
subb
out
popa
dec
lcall
push
jmp
addr16
adc
mov
mov
std
adc
pushf
daa
mov
add
xor
or
addr16
xchg
cli
push
ljmp
and
sub
dec
iret
add
out
test
push
in
cmpsl
rorl
movsl
cmp
mov
aaa
cld
and
popa
mov
cltd
adc
dec
cmc
in
in
mov
fsubl
cmp
adc
and
push
fsubr
xor
jns
ror
lock
or
jne
fsubs
das
sub
ds
xor
xor
jns
push
cmp
aam
sub
lock
sbb
out
mov
cmp
sub
fcomps
mov
sbb
push
das
xor
cmpsl
sti
int
jae
inc
inc
clc
mov
jo
jge
mov
arpl
pop
sub
and
jnp
push
mov
xor
inc
or
mov
jmp
jo
imul
push
shrl
pop
arpl
test
out
sub
arpl
or
mov
in
cli
adcl
fidivs
pop
dec
lret
cmp
aaa
cmp
loope
xlat
aad
shlb
fwait
jb
loopne
inc
fstl
dec
mov
mov
fs
loopne
sbb
mov
in
xchg
sbb
mov
test
xor
dec
pop
scas
xchg
sarb
sbb
sub
daa
xlat
fimull
shlb
and
aas
mov
add
and
std
ja
xchg
repz
ficoml
adc
lret
lods
ja
xor
lret
cmp
mov
jne
icebp
inc
cmp
and
call
iret
pop
xchg
mov
insl
or
pushf
sub
cmp
xchg
cltd
cmovl
and
mov
and
mov
add
outsl
adc
andl
loope
sar
mov
dec
pop
lods
and
dec
xor
in
and
jg
sbb
movsb
jg
mov
adc
lcall
and
mov
xlat
dec
add
mov
cwtl
and
cmpsb
cld
push
mov
inc
sub
fs
pop
inc
pushl
enter
mov
stos
rorb
dec
mov
cwtl
add
daa
out
inc
inc
nop
ljmp
out
xor
iret
lret
mov
incb
mov
push
cmp
jl
sub
daa
int3
xchg
mov
sub
loope
loope
xor
out
inc
xor
or
add
mov
mov
pop
lret
inc
mov
idivl
inc
or
sub
sub
mov
je
mov
andl
sti
or
lods
mov
xchg
gs
adc
pop
mov
or
cmp
ds
dec
sbb
orl
adc
inc
jg
loop
fisttpll
cs
ljmp
mov
jle
push
xor
pop
sarb
jp
cmpsl
sub
test
arpl
xchg
ds
repnz
push
adc
xchg
popf
mov
cmovae
push
add
rclb
fisubl
mov
in
jl
mov
xor
mov
test
jnp
or
push
subb
mov
mov
jo
js
xor
lods
fwait
xor
sub
mov
pop
sub
fistps
xlat
jne
popf
sbb
jmp
outsb
inc
xchg
cmp
test
lods
push
inc
mov
inc
daa
outsb
mov
dec
push
xor
decb
or
enter
mulb
sub
cmp
inc
dec
lods
rcrb
or
scas
xor
mov
jbe
mov
ds
stc
hlt
adc
lret
mov
xor
hlt
and
lret
adc
push
aad
pop
ret
mov
bound
es
aaa
sub
mov
ror
push
shr
int3
jmp
mov
push
push
xchg
clc
inc
sbb
aas
inc
jne
frstor
dec
mov
in
scas
xor
sub
xchg
xlat
push
je
imul
inc
lcall
in
in
fisubrl
shrl
mov
dec
mov
xlat
or
out
leave
sbb
outsb
lock
insb
add
and
jbe
mov
lock
lret
mov
mov
mov
xchg
test
inc
aad
mov
sbb
test
cld
int
xchg
jns
and
push
cmp
js
mov
fdiv
adc
ja
adc
out
xor
adc
sub
hlt
xchg
xchg
cmp
orb
enter
inc
mov
loope
and
movb
push
or
clc
jne
das
shl
mov
dec
lcall
int
dec
data16
jb
jp,pt
pop
jne
sbb
scas
mov
mov
mov
adc
lea
ret
int3
or
aas
push
push
jg
inc
shlb
add
stos
jle
bound
sahf
scas
cmc
out
out
jb
je
lret
fbld
push
mov
inc
mov
cmp
mov
sti
or
and
lods
into
bound
idivb
adc
into
mov
inc
mov
sbb
sub
es
arpl
mov
addr16
fwait
mov
insl
or
clc
pshufw
cmpsl
sbb
lcall
mov
aam
xor
test
mov
xchg
pop
mov
fimuls
shl
insl
add
sarl
sbb
xor
push
aam
push
inc
and
xor
and
adc
or
adc
and
mov
ret
and
add
mov
add
mov
scas
imull
mov
jns
out
in
cmp
hlt
dec
es
aam
rcr
xchg
jno
sbb
mov
sub
orl
adc
cmc
das
mov
lahf
ffreep
push
out
int3
mov
add
leave
mov
jae
pop
fdivr
add
mov
mov
inc
jb
das
popa
orl
repz
pop
outsb
add
clc
cwtl
and
cmp
xchg
add
pop
imul
add
inc
ss
fs
sbb
mov
nop
pusha
ss
lret
test
lcall
add
in
add
rcr
sarl
inc
pop
mov
dec
xor
insl
shll
std
cld
adc
adcb
mov
jae
mov
add
aaa
cmp
adc
cmp
mov
outsb
push
xchg
mov
int3
adc
lods
insl
jg
jns
pop
mov
mov
fisttpl
sbb
popa
scas
movsl
lret
sbb
sub
sbb
and
popa
add
sarl
and
out
fimuls
fcoml
inc
pop
movsb
dec
jmp
xor
ret
sahf
icebp
xchg
mov
in
or
imul
imul
cmpsl
xor
imul
or
fsubl
ror
loop
mov
sbb
mov
cmpl
sub
jb
adc
sbb
sub
fcomps
clc
repz
add
test
sbb
dec
sarl
aad
xchg
out
and
icebp
js
or
leave
and
clc
or
add
mov
xchg
mov
mov
mov
push
repz
mov
popf
xchg
xchg
mov
mov
jbe
push
dec
hlt
in
dec
pop
testb
inc
adc
mov
add
jno
rcrl
into
or
jne
push
ss
adc
jae
jns
dec
aas
ficoms
ss
outsb
or
push
mul
imul
fwait
mov
inc
icebp
cmp
jg
jne
in
push
fwait
push
imul
mov
fwait
cli
scas
shll
jbe
or
add
ds
lods
or
pop
add
cltd
xor
mov
nop
xchg
adc
cwtl
out
xchg
cmp
push
cli
cli
mov
sub
dec
jnp
and
xchg
inc
and
mov
sub
dec
sbb
cwtl
jnp
stos
mov
lea
loope
lahf
and
lret
shl
ror
nop
lcall
cltd
xor
ret
xchg
jo
lds
jbe
cmp
sub
lcall
cltd
clc
test
cmp
loopne
loope
daa
and
stos
imul
ss
push
push
xchg
orb
andb
fists
data16
cmp
lret
mov
nop
xchg
mov
ljmp
mov
das
xchg
fisttps
cmp
lret
nop
cwtl
or
and
jecxz
xlat
bound
jge
xchg
ja
popa
and
sub
out
sti
ds
inc
popa
sti
sbbb
test
mov
cmp
fisttpl
sub
and
xchg
mov
mov
mov
aad
adc
lcall
es
sub
pop
sarl
stos
ljmp
adc
xchg
fsubrs
pop
fwait
mov
push
stos
ret
mov
jmp
add
lret
out
push
dec
or
push
pop
or
xor
scas
adc
aaa
jg
subb
or
inc
adc
dec
sbb
inc
push
inc
in
fxch
push
es
dec
ljmp
ja
xchg
sub
fidivs
cmp
in
push
rcll
sahf
fs
jo
or
mov
ret
fwait
mov
out
jnp
jns
stos
xchg
addr16
pushf
xor
nop
push
in
adc
add
pop
mov
ljmp
fsincos
out
call
jmp
pop
xchg
popf
nop
data16
mov
sub
jl
push
or
sbb
jl
and
push
rorb
add
pop
imul
cmp
cmp
sub
xor
mov
and
xchg
push
mulps
addr16
pop
std
aad
aam
cli
movsl
repnz
xchg
lods
mov
jns
add
pusha
lcall
mov
ret
jle
push
lock
or
or
aaa
mov
jge
dec
mov
fildll
adcb
shlb
inc
divb
xchg
push
cmpsl
fcompl
adc
out
xchg
jne
in
movsl
add
adc
jb
jp
fdivrl
std
adc
xchg
lcall
or
add
dec
xorb
mov
int3
mov
pusha
leave
imul
lahf
sbb
dec
imul
adc
int3
dec
or
cmpsl
jne
data16
inc
repz
stos
sub
insb
dec
stos
inc
push
pop
inc
lods
sahf
in
sub
mov
outsb
adc
cmp
imul
push
sub
fmuls
in
adc
out
lods
test
insl
inc
repz
push
pop
mov
sub
mov
repz
and
push
dec
scas
xor
rcrb
leave
sub
dec
sti
add
pop
mul
iretw
sbb
push
inc
dec
jo
js
fs
jmp
out
pop
cltd
mov
imul
fdivs
imul
scas
in
cmpsl
loop
jno
addl
push
enter
scas
fdivr
mov
pop
xchg
and
inc
mov
cli
xor
addl
notl
xchg
sbb
cmp
adc
push
adc
or
pop
mov
cmp
call
out
aam
hlt
clc
sbb
jns
xor
outsl
scas
repz
push
or
sub
in
dec
jp
movsb
add
out
sti
pop
sub
cmp
pushl
mov
push
lret
inc
jmp
dec
mov
dec
mov
loopne
int3
outsb
sbb
cmp
in
xlat
icebp
call
cmpsb
sbb
idivb
mov
jnp
push
movsl
shr
jno
fisubrl
mov
dec
int
and
pop
pop
mov
fwait
push
pop
xor
pop
xor
fs
xor
in
push
inc
jle
fwait
sti
shlb
cs
and
movsb
pop
lret
add
push
add
roll
cwtl
gs
hlt
test
mov
fisubl
xor
mov
pop
lcall
add
call
pusha
jecxz
nop
add
xchg
dec
mov
je
out
loopne
push
add
mov
cmp
aam
or
pop
stc
faddl
lahf
stos
pop
cld
leave
cmpsb
pop
shrl
mov
es
sub
push
and
in
dec
mov
ljmp
mov
testl
addr16
icebp
jge
ficomps
fs
in
xchg
repnz
and
jb
shrb
jle
enter
lods
sub
lret
cmp
sbb
ljmp
push
addb
jo
pushf
je
push
mov
insb
cmp
mov
inc
cmp
pop
add
cli
inc
ret
sbb
in
or
les
adc
adc
test
test
and
inc
xor
pop
push
dec
push
dec
les
pop
ds
mov
push
cmpl
iret
add
mov
pop
cld
fimuls
jmp
jb
push
mov
xchg
dec
les
das
test
lret
cmpsb
fcompl
test
idivl
fmul
push
mov
jmp
xchg
and
pop
sub
pop
dec
inc
lods
fisubs
add
mov
out
xchg
sub
mov
mov
mov
dec
xchg
jno
push
clc
inc
and
out
dec
fcmovbe
xchg
neg
mov
xlat
dec
push
or
jge
push
ud1
mov
sahf
sbb
in
testb
push
inc
outsb
test
or
outsb
cs
sahf
dec
repnz
popf
dec
adc
shlb
mov
jmp
movsl
xor
arpl
or
cmpsb
adc
adc
shrl
orb
repz
mov
mov
xchg
add
xchg
xor
repnz
cmc
arpl
cld
repnz
push
test
stos
pop
inc
jno
rolb
add
enter
cmp
into
js
sub
sbbl
add
push
xchg
adc
repz
sahf
push
cmpsl
cmp
inc
jge
jecxz
push
movsb
into
push
sub
pop
loope
adc
movsl
add
push
adcl
addl
mov
mov
fs
cmpsb
iret
jne
sub
lock
pop
subl
lret
das
sti
add
imul
push
pop
mov
cmp
loop
and
in
mov
adc
jo
enter
sahf
pop
les
fistl
xchg
push
nop
jmp
nop
ljmp
aas
xor
mov
jb
ja
lret
pop
xor
cmc
mov
dec
inc
xor
repz
adc
stos
nop
push
and
mov
mov
mov
jge
inc
push
sub
loopne
bound
cmp
les
jbe
leave
push
lock
sub
dec
ret
push
popa
push
cmpsb
stos
cmpsb
cmp
call
in
out
out
push
sbb
sub
ds
pop
mov
pop
out
shll
adc
iret
xchg
mov
fs
std
sti
dec
push
ficomps
push
jge
test
fwait
xchg
imul
xlat
and
pop
xchg
pop
and
sub
pushf
clc
push
out
repz
xchg
aam
iret
xor
mov
int3
gs
adc
sub
mov
aam
xchg
repnz
or
cmp
mov
mov
mov
mov
test
lock
or
jns
mov
push
inc
outsb
dec
cmp
shlb
or
imul
sbb
cmp
mov
test
adc
mov
lret
addr16
les
in
mov
cmpb
mov
popf
ja
xchg
xchg
cmp
aam
cmp
in
repz
lcall
push
and
xchg
cmpsb
dec
adc
stos
scas
push
into
testb
lods
and
add
mov
cld
inc
mov
jb
test
mov
add
xchg
ljmp
lret
xor
xor
cmp
push
dec
cmp
xchg
mov
pop
sub
out
inc
in
push
pop
sub
adc
dec
js
cmc
pop
jmp
pusha
inc
xorb
fwait
ljmp
dec
or
mov
jae
push
xchg
sbb
call
test
das
sbb
decl
sub
cmpsb
xchg
dec
lea
push
adc
add
xlat
clc
movsb
outsl
mov
icebp
fwait
cmp
mov
loopne
mov
mov
ja
mov
pop
cmp
or
divl
sahf
and
outsb
and
cmp
test
jns
xor
mov
dec
imul
sbb
rclb
mov
mov
and
insl
gs
ljmp
pop
iret
stc
jnp
mov
enter
sahf
in
jno
ss
mov
mov
add
test
mov
jg
and
movsl
rcll
adc
push
dec
cltd
mov
int3
mov
or
out
es
out
inc
out
call
mov
inc
scas
into
inc
pop
addr16
ret
call
jmp
xor
mov
xchg
out
cmc
outsl
fdivrl
push
hlt
cmp
outsb
mov
jns
movsb
mov
out
clc
mov
inc
mov
cmp
stos
insb
xor
outsl
out
sahf
adc
lahf
lock
daa
xchg
rcr
stos
jmp
xchg
jne
or
mov
fdivrl
sub
push
add
xchg
pop
mov
adc
cltd
repnz
mov
pop
sarl
lret
cli
int
and
sub
aad
push
stc
inc
inc
add
cmp
call
imul
cmp
arpl
or
dec
xchg
jne
jno
mov
scas
jae
imul
divb
inc
test
loop
pop
das
js
stos
sbb
pop
jecxz
cmpsl
cltd
and
fnsave
popa
test
shrb
pop
nop
push
xchg
enter
pop
sbb
or
enter
push
cli
arpl
mov
cmpl
and
test
cmc
int3
daa
and
mov
pop
rcrl
pop
add
jge
cmp
scas
push
xchg
adc
lahf
jmp
pop
cmpsl
dec
sub
xlat
jle
repnz
pop
hlt
push
jno
lods
cmc
mov
mov
xor
mov
subb
popa
lods
xor
repnz
cmpsl
scas
sub
inc
and
fcom
jae
jmp
pop
hlt
lods
or
mov
std
fs
xor
sahf
idivl
clc
cwtl
xchg
dec
fadd
pop
inc
push
dec
xchg
xchg
outsl
mov
sbb
int3
cli
in
fildl
push
or
inc
ret
jge
repz
jb
in
or
adc
dec
shrb
jl
outsb
pushf
aaa
cmp
cltd
ja
fs
fwait
into
sub
test
sbb
test
xor
jmp
mov
cmp
shr
push
test
mov
popf
jp
sahf
cmp
sub
fimuls
and
jb
cli
and
pop
andl
mov
cld
add
xorb
cltd
lret
pop
loopne
test
push
jecxz
nop
mov
mov
js
lods
enter
in
xlat
xchg
push
push
push
js
daa
adc
adc
pop
or
jle
xor
sbb
scas
inc
mov
ret
cmp
xchg
jb
fildl
push
inc
sahf
outsb
test
jae
add
push
mov
xchg
stos
fldl
sbb
stos
loop
jno
push
adc
fs
mov
cmpsl
xchg
and
jecxz
cli
mov
cmp
xor
jmp
lds
cmpsl
repnz
inc
pop
xchg
fcom
bound
daa
int
ficomps
push
push
je
insl
mov
ret
aad
hlt
ss
inc
cmp
loop
push
cmp
subl
lret
leave
sub
dec
push
sub
cltd
pop
cmc
pop
xor
xor
popf
ljmp
add
dec
loopne
mov
aad
les
add
mov
xor
mov
or
fadds
ret
mov
icebp
aas
pop
pop
cmpsl
test
inc
in
or
ret
out
jg
subl
ljmp
rcl
pop
push
data16
dec
movsl
cld
imul
jnp
scas
push
jl
cmp
dec
xchg
or
sub
dec
nop
stc
insb
loop
out
push
add
pop
pop
daa
jnp
sub
repnz
enter
cmp
push
lock
adc
not
push
sbb
inc
adc
outsl
mov
add
mov
mov
repz
pushf
xchg
jns
mov
jnp
pop
xchg
mov
outsl
or
fidivrl
mov
cmp
sbb
jmp
popf
push
cmp
fstl
cmp
sbb
pop
test
xor
mov
out
xor
xchg
fwait
xor
loopne
push
js
cmpl
orb
push
js
xor
pop
int3
dec
and
filds
pop
test
or
dec
jp
jns
rcr
jae
sub
jge
fs
cld
sbb
lock
cltd
inc
push
push
adc
scas
fsubs
stos
add
out
mov
jl
jmp
jecxz
add
mov
call
bound
mov
cmp
push
cs
push
vpshaw
lods
adc
adc
dec
loopne
xor
mov
imul
mov
inc
xchg
ja
cli
jno
mov
xchg
and
xor
and
in
dec
cwtl
dec
cs
jns
das
lret
and
dec
jae
inc
pop
gs
fstpl
fsubl
push
cld
jne
fwait
push
lds
testl
insl
sbb
mov
xor
push
mov
jb
ss
cmpsl
mov
in
dec
andb
lods
dec
scas
and
cmp
fimuls
inc
stos
pop
cmp
scas
addr16
test
movsl
loop
mov
lret
inc
sti
out
pop
push
mov
cmp
imull
inc
push
cli
xor
imul
jmp
pop
les
mov
inc
push
jmp
xor
inc
pop
add
flds
mov
jbe
xlat
outsl
fbstp
push
xchg
out
sbb
mov
sbbl
aas
jmp
mov
enter
call
lahf
mov
push
push
and
arpl
push
adc
mov
mov
jecxz
cmpsl
cli
xchg
inc
lods
xchg
mov
and
mov
mov
sub
int3
jp
lret
dec
dec
pop
pop
push
out
mov
shl
imul
stc
push
inc
js
jnp
data16
jg
aam
cli
xchg
insb
ja
push
out
insl
test
jae
or
out
mov
stc
out
add
mov
cmc
xchg
xchg
inc
or
lcall
clc
in
fsts
inc
mov
ss
movsb
fcompl
xchg
inc
addr16
mov
lret
cs
and
test
push
shrb
ss
pop
inc
add
mov
mov
sbb
stos
shll
adc
aam
call
fs
mov
xlat
sbb
pop
adc
mov
push
mov
inc
and
jp
inc
push
and
in
stos
addr16
mov
pop
xchg
mov
sub
out
mov
lods
js
imul
xchg
insl
push
mov
outsb
sbb
stos
es
pop
or
push
lahf
mov
mov
push
or
ret
mov
sarl
lods
sahf
inc
pop
and
test
jne
push
jl
test
add
int3
ret
aam
aas
cmp
in
xchg
fldcw
mov
xchg
fbstp
xchg
add
pop
jne
pop
inc
mov
mov
dec
nop
test
xchg
ds
inc
popf
mov
mov
mov
insb
mov
dec
pushf
dec
and
jge
push
pop
imul
movsb
jno
sub
orb
out
pusha
imul
inc
mov
inc
sbb
mov
pop
outsl
xor
mov
and
cmp
mov
sbbl
jl
sub
cwtl
push
js
jmp
fidivrs
pop
fidivl
inc
push
in
and
xor
xchg
ficoms
and
jp
xor
sbb
jae
adc
test
adc
cltd
repnz
cmpb
and
sub
add
jno
xchg
jns
ret
push
loopne
pushf
xchg
enter
fmulp
out
fists
and
les
push
push
scas
rorl
jns
shlb
add
jne
flds
push
or
dec
push
fwait
inc
add
push
test
scas
mov
or
jnp
mov
imul
cs
mov
fcmovb
push
sarb
dec
cltd
incl
es
mov
add
das
and
mov
shrb
or
aad
pop
push
incl
rcrl
pusha
pop
test
cli
xchg
xchg
ss
xor
mov
mov
xor
xor
ret
ret
out
and
insl
xchg
cmp
testb
pushf
std
inc
leave
sub
sbb
xor
cltd
inc
movsl
sahf
pop
xchg
adc
adc
sub
push
mov
dec
push
cltd
ljmp
jg
mov
loope
mov
fisubrl
xlat
shrb
add
fwait
xor
push
imul
leave
sub
ss
jmp
sub
arpl
cmc
sahf
imul
aad
jo
sarl
mov
push
mov
sub
mov
rolb
pop
ss
jo
repnz
xchg
sar
test
mov
lods
lods
dec
mov
int
lods
xor
inc
jnp
outsb
mov
mov
ds
mov
sbb
push
jbe
and
pop
fdivrs
ja
sbb
jo
lret
xchg
add
mov
mov
push
mov
decl
mov
jnp
lret
mov
ror
xor
in
mov
adc
cmp
mov
xor
mov
int3
hlt
mov
cmpsb
or
push
jns
adc
icebp
mov
pop
test
sbb
int
ja
test
sub
sbb
mov
call
fistpl
outsl
xchg
adc
mov
psubd
push
and
jg
ljmp
insb
test
xchg
pop
push
movsb
inc
popf
aaa
fwait
xchg
mov
es
sub
scas
adc
fstpl
xchg
cmp
and
loope
cltd
jp
orl
outsl
sti
insl
sbb
jp
mov
sbb
cmp
pop
insl
leave
pop
outsl
xchg
in
mov
pusha
xchg
daa
outsl
xchg
lret
sahf
sbbb
pop
adc
sbb
or
mov
mov
mov
jns
dec
leave
jle
cmp
pop
jmp
filds
lock
sbb
inc
dec
cmpb
jg
daa
push
fbstp
sbb
fsubr
lcall
dec
push
gs
stos
adc
jge
les
outsb
xor
mov
fistpll
adc
outsb
gs
mov
hlt
aam
outsl
push
mov
xor
in
inc
or
pop
ja
xchg
out
inc
and
push
not
fnstcw
ljmp
add
xorb
cltd
imul
lret
jo
cmp
mov
daa
cld
sbb
mov
sub
cmpsl
pop
lods
rcl
push
ret
outsb
jbe
ja
out
jg
sbb
nop
sub
add
jne
mov
jns
loopne
xor
dec
test
mov
imul
sub
pop
out
call
stos
cwtl
sbb
mov
notl
or
std
das
sub
mov
sahf
mov
ss
loopne
and
adc
add
inc
fisubl
xor
jle
cmp
add
nop
int3
inc
mov
lods
movsb
or
movb
pop
dec
in
mov
sti
fcmovnb
xchg
adc
outsb
repnz
arpl
je
fstps
movsb
dec
sub
mov
dec
cwtl
ja
inc
iret
lahf
iret
jge
xchg
in
push
sub
cmp
es
push
add
arpl
test
sbb
sbb
mov
pop
mov
in
and
inc
test
mov
stc
adc
xor
pusha
push
adc
ffreep
or
ret
jne
inc
xchg
adc
xchg
dec
mov
mov
fsubs
xchg
in
sbb
movl
fnsetpm(287
mov
mov
roll
xor
cmpsl
daa
es
mov
pop
sub
cmpb
out
sub
xor
push
and
xchg
xor
mov
xchg
inc
pushl
and
call
mov
gs
imul
sti
xchg
or
stos
xchg
xchg
jle,pn
pop
stos
arpl
out
cmpsl
cmpsl
jae
jg
sbb
push
shr
mov
in
lods
leave
cld
mov
std
cs
loop
cmc
lahf
add
mov
inc
sbb
icebp
push
push
les
add
push
sbb
push
jg
cmpsl
outsb
push
jmp
mov
inc
xchg
test
jne
mov
push
ret
data16
dec
icebp
pop
mov
lods
sarl
sub
add
sub
lea
aam
insl
imul
in
rcll
addl
orb
push
cs
or
das
dec
mov
int3
in
faddp
inc
aaa
cli
stos
scas
fidivrl
aaa
insb
cmp
dec
inc
dec
jmp
sub
cmc
xor
dec
in
mov
jl
sub
addb
aaa
imul
fimull
inc
mov
ficomps
pop
and
aaa
mov
jno
xchg
mov
js
aam
or
insb
cltd
jo
jnp
popa
repz
sbb
adc
je
orl
pop
scas
push
or
mov
mov
clc
dec
lock
or
push
testl
rep
push
or
adc
fwait
pop
adc
push
xchg
clc
iret
loopne
repnz
or
dec
mov
dec
sub
lret
mov
xchg
xor
mov
call
or
cmp
mov
orb
sti
xor
fs
jno
mov
mov
push
outsb
sub
dec
loopne
addr16
loopne
xorl
jo
popf
mov
cmpsl
in
out
imul
jns
add
in
mov
and
aad
jbe
cmpsb
fdivr
not
arpl
cmpsl
add
jmp
dec
cmc
imul
adc
sbb
imul
cmc
push
inc
dec
mov
iret
gs
sbb
xor
test
ret
push
inc
jo
shll
push
int
dec
lahf
adc
xchg
sbb
test
ret
rcr
add
test
adcl
sub
ret
mov
scas
sbb
mov
fdivl
and
out
pop
mov
pop
imul
arpl
sbb
push
mov
jb
push
cmpl
mull
dec
notb
mov
notl
or
add
push
gs
sub
pop
gs
xchg
mov
inc
xchg
repnz
and
sbb
and
fsubrl
out
sub
scas
aas
jb
ret
popf
add
outsl
jbe
and
mov
add
xlat
adc
jg
mov
int
inc
stos
sbb
insl
cmp
and
jl
subl
pusha
shr
xchg
sub
cltd
jg
and
push
dec
fwait
mov
cmp
mov
pop
repnz
or
test
dec
pop
stos
test
and
outsb
sub
adc
movsb
insl
hlt
mov
add
cmp
add
xchg
adc
inc
clc
cli
jl
and
imul
aam
clc
cmp
scas
cmp
cltd
mov
lret
cs
dec
lret
inc
cmp
jbe
enter
sbb
or
push
jle
div
mov
dec
int3
aam
sub
add
subb
outsl
pushf
dec
push
arpl
mov
cmp
inc
mov
rol
push
mov
aas
enter
aam
and
imul
or
cmp
mov
mov
aas
cmpl
or
scas
push
xor
push
rep
xchg
mov
sub
jo
cs
xchg
ljmp
roll
adc
mov
xor
mov
out
sbb
fwait
sub
xchg
stos
push
sub
dec
sti
adc
push
jle
pop
sbb
nop
pop
into
mov
lds
cwtl
pop
scas
in
adc
stc
sarl
push
pop
mov
dec
and
fdiv
dec
sub
jno
call
test
xor
push
mov
rorb
push
push
pushf
cmp
or
xchg
mov
popf
imul
mov
pop
or
jb
dec
pop
test
xchg
jmp
pop
mov
das
push
or
xor
xchg
push
inc
cmp
xchg
dec
jp
add
cmp
push
inc
enter
fidivrl
or
push
int3
or
dec
ffree
xor
or
fs
insb
mov
lret
sub
stos
mov
in
or
bound
push
lock
cli
sub
lea
inc
jne
and
inc
pushf
pop
in
and
fsubl
pusha
popa
jns
ljmp
repz
xchg
outsb
pop
jg
repz
fnstenv
mov
out
xlat
lods
jge
cmc
inc
imul
mov
ret
mov
inc
stos
mov
into
and
xor
shlb
loop
mov
or
in
sub
push
mull
les
ret
push
xchg
faddp
jecxz
scas
mov
js
push
lret
and
pop
push
mov
cltd
lret
push
or
xor
adc
imul
pop
dec
ret
add
shll
int3
test
push
inc
mov
pop
xchg
push
cmp
pop
mov
stos
jae
test
sbb
fdivrp
test
sub
or
ret
mov
pop
rcr
cs
inc
pop
mov
cli
pop
std
sarb
or
xor
pop
adc
in
fcmovne
jecxz
lcall
repz
xor
mov
shlb
dec
mov
test
jno
imul
dec
fisttps
dec
data16
fs
xor
mov
sbb
sbb
pop
add
rcll
sbb
add
pushf
cmc
outsl
ficomps
ror
test
cmp
les
add
jge
inc
fiaddl
add
push
lret
add
sbb
je
pop
mov
iret
or
push
outsb
sub
xchg
xor
mov
repnz
stos
nop
movsl
inc
cmpsb
je
in
movb
jnp
fldl
shlb
fistl
or
mov
xchg
das
xor
mov
push
je
icebp
jp
push
sub
mov
xlat
mov
int
mov
pop
mov
inc
data16
mov
push
mov
pop
xlat
js
mov
sarb
push
fsincos
loopne
leave
push
call
sub
es
fisttpl
int3
xchg
adc
push
jne
pop
or
scas
cli
in
inc
fdivr
aas
ja
add
jle
call
test
pop
nop
in
pop
jbe
push
and
shll
xchg
jo
push
jle
mov
aaa
iret
clc
sbb
jle
nop
imul
xor
or
mov
push
popa
jnp
xor
mov
sbb
ret
mov
xchg
jge
fdivr
lret
bound
cmp
and
lock
pop
mov
jle
cmp
sbb
clc
sbb
push
xor
jb
or
lahf
push
out
jae
repnz
sub
fisubl
fsubrl
cmp
cmpsl
push
pop
dec
jnp
push
lret
popf
adc
es
das
orb
push
int
fildl
mov
ret
sub
xchg
pop
cltd
adc
and
xlat
dec
push
mov
les
ljmp
incb
push
std
jnp
jge
mov
mov
xchg
mov
and
push
xor
dec
push
fcoml
mov
gs
sbb
lahf
adc
sbb
sub
and
or
jmp
inc
sahf
lret
push
inc
inc
dec
fwait
sahf
sbb
inc
loope
mov
xor
in
sbbb
add
sub
rol
lods
decl
mov
sub
test
jo
lods
cli
push
xchg
repnz
fdivrs
aaa
push
dec
or
out
lcall
cmp
scas
push
mov
mov
mov
sub
xlat
repnz
daa
stos
popf
sub
lock
mov
popf
mul
push
xlat
das
mov
je
das
adc
mov
pop
pop
add
rclb
adc
divb
xor
push
or
mov
mov
jmp
sub
aam
jbe
je
es
sbb
das
mov
int3
es
dec
in
lea
or
cwtl
pusha
or
aad
lods
push
ljmp
add
mov
sub
add
fstps
mov
fildl
gs
or
int3
and
sbb
cwtl
enter
fsubs
mov
cmp
mov
adc
or
scas
xor
cmc
sbb
dec
add
pop
mov
lret
sub
jl
fs
imul
jl
div
mov
xchg
xchg
xchg
loope
adc
or
cltd
xchg
inc
adc
and
mov
dec
xor
pop
les
pop
push
adc
stc
stos
lods
xchg
int3
popf
scas
roll
adc
lods
mov
or
mov
push
imul
lock
cld
xor
push
adc
fimuls
gs
mov
repnz
lds
xchg
sti
and
std
rorl
daa
lods
jae
inc
push
les
mov
frstpm(287
pop
or
in
lahf
shll
mov
jp
test
cmp
push
xchg
aad
xor
cwtl
mov
addr16
idivb
or
fadd
lahf
outsl
ret
pushf
dec
fiadds
ret
add
mov
mov
jmp
push
out
test
pop
jg
clc
add
fst
or
jo
sbb
cwtl
mov
add
mov
sbb
pop
xchg
dec
mov
out
push
jge
push
out
push
push
dec
sti
insl
ret
lods
fstl
in
fcmove
or
bound
push
out
dec
and
and
sbb
sti
rolb
lret
mov
lahf
inc
dec
xchg
or
in
lcall
imul
outsb
jno
rorl
sub
mov
mov
inc
sub
test
dec
in
lcall
push
pop
nop
lahf
aas
or
pushf
lret
aam
xor
sbb
adc
outsl
xor
xchg
xchg
mov
mov
loop
mov
fucomi
jle
push
fwait
pop
fcmove
cmp
push
dec
call
sbb
in
stos
dec
or
lods
insb
call
test
lods
lods
inc
out
cmc
mov
lahf
xchg
pop
pop
rcrl
rcl
inc
xchg
cmp
mov
xchg
ds
fwait
lahf
sbb
fadd
cs
and
in
shr
xor
sbb
aad
xlat
lock
fstl
mov
xchg
mov
jp
fmull
cmp
or
ret
or
sahf
lea
cli
xor
dec
inc
xchg
cmpsl
cld
lock
sar
gs
fidivs
aad
or
daa
gs
and
sti
fiaddl
adc
push
xor
adc
jno
inc
or
fwait
sbb
sub
aaa
lret
push
lcall
movsl
mov
and
jecxz
cmp
xor
hlt
push
lods
mov
jne
loope
mov
mov
push
inc
pop
in
and
jecxz
or
add
jmp
xor
in
lds
mov
lcall
test
mov
add
enter
adc
jmp
loop
mov
sti
pop
aas
fwait
in
sub
hlt
sbb
jecxz
add
popf
iret
mov
inc
xor
roll
inc
cmc
xchg
in
cmp
push
push
push
xor
stos
pop
scas
jo
add
stc
ret
roll
mov
sub
mov
fisttpl
stc
js
lcall
rclb
lods
jecxz
stos
cmp
or
jnp
xchg
push
mov
dec
sbb
mov
xlat
stc
popf
hlt
push
iret
subb
jecxz
popa
dec
movsb
push
inc
aam
jmp
stos
int3
gs
mov
xchg
add
lcall
lock
push
push
popf
ja
push
mov
mov
inc
dec
sub
sub
add
adc
movsl
ja
loope
pushl
test
aad
jno
ss
xchg
cmpsl
sarl
nop
add
mov
adc
stos
mov
mov
insl
aam
sub
push
sbb
std
jp
std
and
repnz
stos
jp
cs
push
out
outsl
jmp
push
adc
movsl
scas
adc
aas
outsb
jbe
loop
xchg
out
jo
sbb
popf
add
ss
in
in
cmp
rcrb
xor
push
mov
sub
xchg
mov
mov
fisttpll
and
and
leave
add
lods
repz
out
xchg
pop
lret
in
cwtl
pop
fisttpll
mov
imul
dec
or
mov
pop
hlt
push
andb
mov
loope
mov
sub
ret
dec
cwtl
cs
mov
and
jb
add
jp
mov
push
lret
mov
mov
addr16
xchg
outsb
popf
rolb
inc
lods
push
fwait
into
pop
fabs
ss
fdivl
jecxz
out
aas
test
lret
mov
adc
mov
cld
aad
shll
xchg
outsl
mov
inc
xor
fs
mov
es
frstor
adcl
jmp
and
int3
cmp
in
imul
adc
in
xlat
and
jnp
std
mov
fidivs
xchg
xor
idivl
cmc
mov
push
push
inc
adc
in
jle
mov
cmc
sbb
or
sub
std
add
aaa
int3
in
dec
out
add
cli
fimuls
clc
ss
dec
nop/reserved
sti
popa
leave
push
fdivl
xchg
push
dec
ds
push
pop
hlt
add
cmp
popf
testl
and
fucomi
sbb
and
imul
mov
and
xchg
mov
leave
adc
xchg
xor
fsubl
inc
sbb
scas
stos
mov
les
dec
mov
and
jne
rolb
xor
lahf
cmc
aad
cmp
add
imul
add
mov
lods
out
push
pop
push
out
sbb
call
mov
out
cmp
subb
and
test
cmp
hlt
xor
mov
pop
dec
leave
add
push
and
pop
xor
sub
push
fstpt
jno
push
dec
sub
addr16
or
xor
add
test
mov
jae
loopne
push
mov
fistpll
cmp
pop
xchg
scas
or
jb
inc
fcmovb
out
inc
leave
loope
xor
adc
cli
fldt
outsb
dec
shlb
xchg
dec
pop
sbb
dec
sub
scas
pop
mov
and
scas
cmpl
inc
insb
sbb
loope
add
xor
cltd
insb
movsb
mov
mov
data16
mov
pop
push
or
stc
mov
fsubrp
push
pop
mov
jo
fsubrs
cmp
jae
sbbb
js
xor
ljmp
mov
aas
cmp
roll
adc
stos
mov
jmp
mov
fldcw
and
stos
or
shll
enter
push
stos
lds
xor
and
mov
std
std
pop
jne
cs
mov
lcall
and
sbb
jnp
inc
shll
pop
cs
outsb
pop
mov
lock
jne
xchg
xchg
in
in
mov
outsb
fstl
fadd
mov
or
loop
lock
xchg
push
frstor
lcall
mov
pop
call
dec
adc
xor
cltd
adc
rcll
shll
ljmp
test
xchg
addb
shll
push
mov
das
ss
push
pop
jne
lea
test
test
mulb
lcall
mov
jno
xor
cld
pop
jmp
les
mov
sbbl
rcrl
popf
cmc
mov
add
outsl
fdivs
xchg
outsl
repnz
adc
scas
pop
stc
fsub
adc
dec
add
mov
jns
out
je
or
sbb
pop
fdiv
or
pop
lock
hlt
sub
aas
push
inc
scas
clc
dec
loopne
sub
data16
aad
out
pop
pop
mov
cmp
jne
mov
cmp
scas
dec
pusha
xchg
cmp
xor
faddl
xor
stc
outsl
sbb
cmp
xorl
mov
sub
mov
sti
and
xchg
xchg
inc
add
add
xchg
sbb
enter
xchg
mov
cmc
cmp
cmpsb
mov
inc
lret
xor
jp
in
call
or
pop
in
test
enter
shl
cmpsl
adc
jno
push
push
and
adc
repz
test
clc
inc
pop
adc
fwait
sbb
hlt
push
or
or
mov
cli
inc
and
lea
xchg
mov
xlat
daa
scas
movl
mov
loope
or
fnstenv
xchg
sarb
dec
push
mov
insl
adc
aaa
rorb
mov
push
cmp
je
jp
mov
std
leave
pop
stc
mov
sub
fs
lcall
shl
or
ss
mov
fldenv
or
jnp
stos
lea
in
add
push
push
scas
arpl
cmpsb
adc
xor
out
xchg
orb
negl
movsl
loope
push
pop
sbb
and
popf
gs
mov
mov
mov
xor
lds
sahf
popl
sti
push
jg
xchg
imul
cmp
jecxz
inc
pop
inc
sub
pop
xchg
out
push
loopew
inc
jbe
aam
in
aam
pop
cwtl
xor
aad
mov
fmull
sbb
mov
fucomi
mov
fisubrs
out
pop
pop
xor
daa
lcall
lahf
inc
sahf
nop
and
in
mov
pop
add
in
mov
imul
pop
popf
ljmp
test
inc
fcoml
sbb
cmp
and
in
jne
imul
mov
imul
and
jns
mov
mov
stc
jae
xchg
pop
stos
int
lock
add
xor
xchg
xchg
xor
jbe
cmc
jae
jno
mov
inc
fucom
dec
pop
int
mov
mov
inc
scas
test
jne
cmp
dec
out
xchg
aad
mov
imul
inc
pop
sbb
sub
in
in
push
xchg
clc
cmp
les
imul
adc
js
dec
lea
jl
std
in
test
les
push
or
pop
daa
xor
jae
lods
push
scas
or
aaa
jmp
push
pusha
test
aaa
jmp
mov
adc
xchg
cli
mov
shr
sub
enter
jne
add
es
in
insb
cli
imul
mov
xor
jge
jp
fldcw
pop
ja
jl
movsb
xchg
sbb
out
xchg
sub
in
cmp
cmp
mov
test
or
mov
sub
jmp
out
or
sub
inc
pop
pmaxsw
or
jl
or
fldl
mov
mov
inc
out
or
imul
jmp
movsb
jae
pop
xor
ljmp
jb
pushf
add
jmp
xchg
repz
int3
push
mulb
sar
aaa
add
adc
add
out
into
and
fbld
dec
and
insb
push
push
cmp
insl
fstl
stos
cltd
add
prefetch
xor
jb
lea
mov
dec
jne
mov
push
and
push
loop
sub
push
push
or
and
mov
cmc
jp
aaa
into
dec
add
subb
fstps
popa
cmp
test
pop
rclb
mov
enter
push
mov
mov
orb
push
jne
lea
adc
add
sbb
jecxz
inc
mov
lret
subl
ret
push
aam
inc
dec
ret
lods
shrl
sti
leave
cmp
add
jecxz
xchg
dec
and
icebp
push
push
dec
push
sub
jmp
dec
xor
dec
rclb
inc
das
cmp
enter
aad
ror
and
arpl
cli
jl
in
fidivrs
or
mov
jnp
mov
adc
sbb
sbb
leave
ja
lods
cmp
add
outsb
cmpb
mov
mov
shl
cmp
cs
or
push
or
loope
pop
clc
cmpb
insb
call
sub
xchg
cld
lods
mov
cmovg
or
jl
rorl
es
and
cmp
sbb
add
mov
dec
dec
jle
stos
in
loop
ds
xchg
out
test
iret
cmpsb
cmp
jmp
sub
cmpsl
or
cli
jge
hlt
lcall
add
dec
sub
mov
es
shlb
pop
xor
inc
lods
arpl
enter
out
decl
jge
lods
inc
fwait
pushf
test
push
and
mov
add
push
ret
movsl
dec
fstpt
je
scas
pop
nop
cmp
add
loopne
mov
pushf
jp
cmovb
dec
andl
icebp
daa
imul
cld
and
test
and
pop
daa
ja
outsl
enter
scas
pop
repz
pop
icebp
int
adc
lcall
roll
inc
push
std
clc
xchg
jne
mov
inc
stos
clc
loop
or
sub
cmp
call
inc
xor
inc
and
mov
aaa
mov
into
outsl
lcall
mov
push
inc
aaa
push
into
pop
fidivrs
out
pop
and
ja
xchg
bnd
add
iret
inc
popf
enter
or
dec
push
xlat
popa
sub
adc
xchg
popa
dec
mov
jmp
jae
push
xor
push
xchg
push
push
and
pushf
sbb
adc
mov
cltd
lret
xchg
loop
adc
adc
add
inc
push
loop
jmp
arpl
fcoms
push
loopne
cld
ja
or
in
mov
mov
mov
pop
adc
insl
sti
out
pop
mov
mov
xor
test
jae
les
in
inc
push
test
jmp
cmp
repnz
stos
cwtl
mov
inc
imul
mov
int3
mov
cmp
mov
outsl
enter
lcall
iret
push
popf
fwait
xchg
push
dec
sub
jmp
mov
push
mov
dec
mov
xchg
mov
adc
mov
mov
filds
outsl
mov
aaa
pop
mov
aad
pusha
mov
pop
movsb
leave
unpckhps
mov
pop
and
inc
or
sbbl
sub
stos
sub
in
mov
pushf
dec
xlat
adc
xchg
imul
cs
hlt
inc
mov
in
shll
scas
sub
psrlw
fisubrl
push
call
cmp
iret
add
imul
lods
mov
add
andl
jnp
xor
sti
jmp
in
sahf
jne
mov
iret
pop
orb
jmp
mov
into
pushf
imul
lea
call
push
mov
sti
jae
add
mov
pop
in
adc
pop
or
pushf
js
xchg
fists
xchg
outsb
jno
repnz
xchg
jg
xchg
mov
loopne
mov
cmp
and
ljmp
jo
xor
fnsave
fisubs
dec
adcl
bound
pop
fsubs
idivb
outsl
nop
notl
sarb
push
ret
cwtl
ss
popf
and
and
inc
xor
or
mov
push
icebp
adc
jge
xor
or
or
dec
cmp
push
gs
adc
mov
arpl
lds
outsl
into
bound
jl
mov
ljmp
or
jns
push
nop
leave
push
pop
sub
pop
push
rorl
mov
jnp
add
adc
imul
shl
jne
jb
xchg
jp
into
xor
sub
cmp
jne
sbb
pusha
or
fisubrl
mov
insb
dec
xlat
shl
nop
daa
adc
pop
sub
scas
fnstcw
and
lcall
xchg
dec
ret
rolb
mov
in
mov
fnsave
cwtl
cli
add
stos
dec
xchg
es
aaa
jb
and
addr16
mov
sub
cmpsl
lret
jmp
xorb
lods
ret
cmp
pop
pop
jae
and
or
cltd
push
adc
xor
dec
test
js
outsb
pop
and
aam
jno
sub
lds
xorb
mov
mov
je
popf
sub
enter
sbb
lods
xor
jp
inc
mov
aas
test
xchg
push
inc
out
push
pusha
les
pusha
cli
sahf
pop
adc
imul
add
mov
icebp
lds
or
dec
pop
or
stos
add
xchg
loopne
jbe
and
mov
aaa
adc
into
pop
jp
jb
mov
incb
mov
ret
insl
fnsave
xor
jp
ja
ficomps
jbe
cmp
mov
ret
loopw
loopne
ljmp
bound
cmp
cli
fidivs
mov
pop
jnp
push
arpl
movsl
inc
and
cmc
jl
xchg
in
inc
movsl
int3
fiadds
int3
adc
mov
std
sti
adc
enter
push
aas
xor
pop
aam
fstp
mull
jne
das
out
popa
sub
loopne
and
jl
lods
mov
xchg
movsb
or
gs
test
mov
idivl
mov
jecxz
sbb
in
add
dec
icebp
mov
mov
inc
or
or
stos
xchg
add
loope
and
push
pop
lods
aas
notb
scas
sub
dec
cmp
jmp
and
pop
jecxz
gs
arpl
out
repz
xchg
add
pushf
daa
ds
push
push
shrb
fiaddl
rolb
out
lock
xor
xchg
xchg
lcall
or
xor
pop
push
sbb
pusha
pusha
fcmovu
push
inc
mov
add
fucomp
mov
lret
mov
mov
jmp
mov
xchg
mov
lret
or
popf
pop
or
scas
fisubs
and
andb
jno
jne
pop
icebp
cmp
lcall
inc
push
lret
movups
jle
loop
clc
loopw
mov
dec
sub
mov
xor
mov
shl
sbb
and
fdivr
sub
cwtl
lcall
mov
mov
dec
or
adc
adcl
cmp
xchg
mov
pop
mov
lahf
fisubs
mov
into
shl
nop
das
iret
push
iret
xchg
inc
push
sub
mov
and
ror
aaa
pop
jae
adc
mov
jmp
dec
test
fdivrs
mov
pushf
pop
call
xchg
push
adc
jno
xor
pop
jbe
pop
dec
or
inc
cmc
mov
add
shr
out
cmp
sbb
out
call
sub
cmp
jle
fistl
add
addr16
push
dec
or
aas
nop
mov
or
ret
cmc
jle
mov
adc
test
rcl
out
sub
int
inc
hlt
cltd
js
mov
xchg
cmp
and
sbb
adc
xchg
and
sbb
je
xchg
pop
gs
mov
or
sub
mov
pushf
jb
enter
sbb
lahf
sbb
push
add
lahf
out
push
jns
movsb
pop
outsl
jle
inc
cmp
in
inc
push
sarb
lahf
out
xor
inc
imul
adc
sub
lds
int3
popf
jb
mov
mov
je
sbb
addr16
shl
addl
mov
push
pop
lods
push
dec
jp
cmp
out
cltd
lock
and
loopne
pop
dec
bound
mov
pop
jmp
inc
xchg
aaa
fsqrt
sbb
dec
outsl
inc
dec
mov
mov
sbb
test
insb
push
mov
fbstp
test
sbb
fwait
in
jl
in
mov
sahf
aad
enter
pushf
lea
inc
mov
adc
aam
cmpsl
scas
mov
pop
inc
es
test
dec
and
jbe
leave
jbe
push
inc
push
test
jecxz
repnz
xor
sar
das
dec
mov
scas
in
mov
push
outsb
cmp
xchg
imul
inc
lcall
jmp
or
cmpl
movsl
jp
out
add
mov
ljmp
push
pop
pop
mov
lds
pop
mov
shr
sub
dec
out
shl
sub
and
sti
outsl
insb
sahf
ja
push
push
shr
xchg
dec
dec
xchg
mov
dec
repnz
push
pop
sbb
popa
pop
xchg
xchg
jp
pusha
add
inc
repz
popf
sbb
dec
sub
add
sbb
mov
sub
dec
std
lods
cltd
cli
sbb
inc
dec
insl
loope
es
test
lahf
scas
adc
out
jno
mov
xlat
or
and
mov
mov
cmpsl
add
ret
jo
clc
or
mov
xchg
inc
cmp
mov
js
in
mov
jmp
dec
mov
inc
sub
add
and
loope
cmc
out
mov
or
inc
inc
cmp
test
xchg
addr16
pop
xchg
icebp
ss
mov
pop
add
scas
adc
andl
mov
sub
imul
or
xchg
sub
int
cltd
sub
inc
push
jmp
cld
pop
cmp
aam
loop
mov
fildll
repz
out
push
sub
mov
xchg
sub
cmp
push
mov
jno
jne
stos
out
daa
cmp
loopne
pusha
fdivrl
cmpsl
sub
les
or
nop
pop
mov
pop
xchg
mov
xchg
mov
ret
add
dec
hlt
pop
sbb
push
daa
rcll
stos
inc
push
sbb
xlat
adc
push
mov
or
enter
loopne
imul
xorl
adcl
lds
cmp
sbb
popf
out
push
push
stos
push
ds
cmp
popa
sti
xchg
std
sbb
push
mov
pop
unpcklps
sahf
add
rcll
pop
xchg
repz
cmp
ret
rclb
ret
ficompl
push
lock
jp
mov
clc
adc
mov
pop
dec
jecxz
jecxz
pop
pop
adc
adc
push
addr16
push
loop
pop
int
rcl
mov
push
jns
hlt
cmp
aam
cmpl
mov
bound
sub
fldl
sbb
imul
divl
popf
add
xor
div
jg
fsubrs
nop
and
add
shlb
or
int
inc
dec
or
sub
aas
mov
notl
pusha
cmpsl
jge
sahf
dec
popf
mov
push
push
xor
ljmp
push
mov
jb
iret
and
pop
cmp
xor
mov
stos
xor
mov
add
ss
xchg
je
sbb
fstps
insl
cmpsb
movsl
or
mov
bnd
mov
jp
dec
fs
adcb
cli
je
mov
cmpsl
jne
cwtl
and
mov
out
sbb
pushf
mov
roll
or
mov
dec
iret
dec
daa
ret
mov
inc
or
vpcmpeqd
ds
inc
dec
out
dec
lahf
xor
lock
mov
sbb
pop
out
push
push
or
mov
inc
cli
dec
in
sub
lods
lcall
add
inc
imul
scas
int
dec
mov
and
js
sbb
or
inc
sub
mov
cmpsb
lds
outsl
jecxz
push
repz
bnd
jbe
sbb
in
mov
sbb
gs
push
cltd
push
cmp
and
lret
cltd
shl
mov
jbe
test
pop
sar
and
clc
jns
rclb
adc
mov
lret
pop
sbb
dec
xchg
cltd
popf
mov
cmp
inc
lea
add
ret
jb
xor
and
gs
out
adc
pop
sbb
andl
cs
add
push
ljmp
insl
incb
sbb
fildll
push
add
push
xlat
data16
push
leave
stc
movsb
push
fbld
or
pop
pop
mov
xchg
lret
inc
fildl
or
xorb
and
test
jnp
out
cmc
fsubrp
adc
or
push
mov
inc
mov
mov
lcall
push
hlt
shrl
mov
lock
sbbl
inc
lret
push
xchg
rorb
add
mov
adc
rcr
inc
icebp
push
nop
fidivrl
lret
ret
inc
jp
cmp
and
popa
gs
cli
cld
daa
in
leave
sbb
leave
cmpsb
and
push
in
xor
divb
push
pop
sbb
popf
mov
cli
enter
mov
xor
clc
jp
sub
jmp
sub
frstor
dec
pusha
mov
mov
pop
jp
je
rcrl
ss
std
fstl
jle
loope
mov
dec
adc
jge
pop
sub
or
mov
cld
adc
xor
mov
ficoml
aaa
imulb
orl
sti
xlat
jmp
stc
cmp
add
xor
jb
lds
xor
gs
addl
repnz
mulb
mov
push
insb
int
push
das
movl
pop
sbb
push
stos
push
jno
xchg
push
and
jle
jg
pop
and
xchg
mov
mov
jno
out
dec
push
pushw
mov
jge
jp
dec
xor
xchg
sarb
insl
lret
loope
imul
or
fistps
xchg
and
and
mov
bound
imul
and
stc
insb
xchg
in
jae
add
dec
sub
adc
in
mov
mov
loop
mov
leave
int
dec
sub
icebp
rcrb
test
js
inc
stos
push
cli
cmp
out
cmp
cmc
test
push
jmp
pop
idiv
out
es
pop
lods
incl
cmp
pusha
or
popf
mov
sbb
fs
jnp
daa
nop
sub
movsl
loope
enter
xchg
ret
stc
adc
xchg
inc
jnp
les
mov
jl
std
mov
cmp
jae
in
test
push
dec
cmc
sub
mov
push
stos
cmc
sub
pop
dec
dec
arpl
movb
jp
inc
inc
adc
fldt
or
int
push
pop
ret
jo
cmp
pop
outsb
aaa
cs
enter
subb
cwtl
std
inc
xchg
lcall
inc
dec
and
inc
mov
inc
xchg
cmp
inc
pop
adc
xchg
xor
out
add
lcall
popf
out
mov
dec
mov
je
rep
out
mov
loop
mov
insb
and
cli
add
sub
cmp
and
loop
pop
ret
push
add
dec
mov
test
mov
aaa
scas
pop
xlat
jecxz
in
mov
push
sahf
or
ss
rorb
cmc
mov
cltd
mov
xchg
jo
cmp
jge
clc
adc
pop
inc
or
out
sbb
fwait
pop
out
ljmp
mov
jnp
shrl
fwait
add
movsb
xchg
adc
jg
int
fidivs
mov
cltd
std
add
dec
addr16
push
stos
repz
ss
cmpsl
inc
cmp
addr16
in
push
scas
pop
mov
pop
fsubrs
push
sbb
or
loopne
fldenv
mov
mov
mov
hlt
call
mov
xor
or
lock
mov
mov
int3
ret
ljmp
les
sarb
es
std
adc
jae
loopne
xchg
lret
adc
jbe
in
jl
int
or
sahf
popf
sub
jecxz
fidivrl
push
or
data16
in
or
jecxz
pop
jmp
pop
xchg
fwait
or
pop
push
fs
sahf
or
aas
mov
jp
adc
sbb
xchg
pop
or
lahf
mov
mov
dec
cwtl
jo
scas
iret
cmp
inc
mov
sub
cltd
testl
sub
fxch
call
add
mov
lret
dec
xor
dec
xor
or
sbb
adc
test
jp
cmp
aam
iret
mov
es
xchg
pop
push
fstl
add
cmp
mov
add
cmp
jmp
movsl
dec
sbb
mov
mov
shrb
push
and
out
rcrb
lcall
jbe
aaa
xor
and
mov
and
xor
add
xchg
test
aam
mov
mov
or
cmp
mov
push
mov
int
into
xchg
xor
xor
xor
add
and
inc
xchg
adc
fs
jp
mov
or
movsb
test
sbb
fdiv
in
cld
cmp
push
adc
or
adc
cmp
jbe
mov
xor
sub
cmp
xchg
outsl
pop
dec
test
mov
or
mov
fidivrl
sbb
push
cld
shll
cmp
sahf
jo
jmp
insb
inc
movsb
stos
pop
sbb
das
sbb
push
dec
std
shrl
test
add
test
popa
into
pop
mov
or
test
sgdtl
fadds
sub
jle
dec
addb
cmp
and
inc
or
ljmp
mov
xchg
movsl
jns
sbb
aaa
jb
sbb
push
jp
jmp
or
jnp
pop
cs
jae
test
jnp
mov
inc
mov
mov
insb
gs
idiv
jecxz
push
incl
and
xor
cmc
xor
imulb
lea
inc
or
movsb
lds
mov
and
ja
sbb
push
and
and
sahf
mov
lahf
popa
cmpsl
pop
pop
add
stos
pop
iret
sbb
xor
or
add
mov
sub
negb
lea
and
push
fwait
cmpsb
addr16
mov
scas
jno
adc
incb
bound
negl
xchg
les
lods
inc
xchg
test
inc
dec
jbe
sub
jl
cwtl
and
inc
ret
xor
adc
jae
cmp
add
cmp
std
or
ljmp
xchg
mov
dec
lret
xchg
int
ja
shl
sbb
nop
pop
xorl
jnp
test
mov
sahf
mov
and
cmp
dec
jle
movsl
into
xor
jbe
lret
inc
or
xor
and
adc
push
je
insl
fistps
cmp
scas
xor
fmull
inc
adc
sub
sbb
or
push
or
das
mov
rolb
out
cmpsb
mov
mov
imul
stc
or
movsb
call
cmp
mov
mov
push
andb
push
xchg
loopne
in
sub
sbb
jo
lret
xorl
into
mov
cld
xchg
push
and
mov
orb
out
jg
mov
xchg
adc
ja
pushf
inc
cmp
cli
and
mov
dec
aaa
xorb
push
loop
push
insl
shl
dec
jns
popf
jp
xchg
adc
mov
push
jne
xchg
mov
mov
add
je
adc
adc
cltd
sbb
mov
mov
das
mov
lret
mov
leave
sbb
jg
hlt
test
insb
mov
outsb
in
add
leave
cmp
aaa
ret
gs
mov
pop
add
lock
add
dec
mov
negl
cmpsb
out
movsl
outsl
pop
in
mov
pushf
cmp
jge
or
sbb
adc
xchg
push
or
out
std
dec
add
mov
sbb
cmpsb
dec
lret
cmp
xor
mov
xorb
add
aas
mov
push
leave
pusha
inc
cltd
xchg
lods
clc
cld
xchg
sub
xchg
push
sti
push
push
cmp
ficomps
test
divb
push
ljmp
sub
mov
xchg
and
cmp
mov
jb
jno
in
push
adc
insl
mov
sbb
jg
xor
pop
mov
lock
xor
dec
dec
dec
ja
and
push
xlat
lods
daa
dec
adc
enter
add
xchg
sub
jmp
pop
in
cld
aas
fstpl
mov
add
add
or
jge
cld
aad
dec
imul
jb
lods
mov
pop
aam
jle
imul
hlt
sbb
adc
leave
mov
inc
into
lcall
inc
pop
jnp
cmp
sub
lcall
cwtl
inc
psrad
mov
jns
sbb
inc
xor
jmp
in
jb
push
iret
iret
mov
adc
dec
in
mov
insl
and
xchg
arpl
sbb
je
cmp
adc
icebp
arpl
mov
mov
push
fdivl
imul
daa
push
sbb
loopne
jmp
sub
inc
cli
int
pop
xor
pop
pop
mov
lcall
lods
sbb
or
pop
leave
out
out
add
jb
mov
jecxz
pop
mov
sbb
fs
add
sti
in
inc
aam
call
cwtl
pop
mov
xchg
fistps
andb
out
push
inc
sub
cmp
push
loope
jns
out
shll
dec
outsl
jecxz
jae
add
scas
loop
jnp
sub
clc
jns
mov
pop
inc
jge
xchg
cli
or
mulb
mov
dec
fidivrs
lea
in
push
xor
sbb
push
inc
jle
jg
push
or
xchg
mov
add
cli
and
or
cmpsb
movsl
lds
fisttpl
sbb
adc
add
std
mov
push
movsb
les
push
inc
movsl
aam
roll
addb
jle
insl
loopne
pushf
xchg
add
or
cwtl
mov
loop
fidivrl
jbe
push
sbb
sbb
fwait
es
jl
in
mov
scas
jo
scas
dec
dec
mov
out
dec
aam
ffreep
loopne
mov
mov
pop
ja
inc
adc
and
or
pop
popf
jg
xchg
sub
sub
pop
iret
and
sub
pop
adc
and
add
mov
or
mov
push
out
subb
filds
mov
das
ficompl
lods
popa
sbb
sub
and
mov
ljmp
mov
mov
fdivrl
or
pushf
cmp
insb
pop
cmp
lods
mov
into
mov
ja
stos
mov
fwait
popa
aam
sar
push
inc
sub
mov
or
dec
adc
pop
xor
mov
inc
inc
mov
jge
jbe
mov
pushf
xor
mov
cmpsl
push
mov
sub
sub
fnsave
jmp
in
outsb
xchg
dec
push
jmp
sub
sbb
sar
sub
xor
or
xor
cltd
dec
pop
sbb
cmpsl
lds
add
xor
pop
cmpsl
or
shll
jnp
adc
xchg
cltd
popa
call
or
ficomps
loop
cltd
pop
cld
dec
mov
pop
jle
mov
sub
mov
push
out
fwait
lret
arpl
mov
loopne
adc
out
mov
stos
xor
jl
jae
in
xor
movsb
jne
idivl
fists
sti
xchg
mov
in
dec
dec
add
mov
movsl
sbb
push
cmc
inc
cmpxchg
sar
adc
cmp
cmp
rcl
add
sahf
jg
shlb
pop
xchg
sub
xor
rcr
mov
loope
cmp
lret
icebp
mov
push
xchg
ljmp
xor
cltd
mov
pop
push
inc
cs
xor
dec
pusha
loop
fmulp
movsb
or
jp
dec
cmpsl
push
call
mov
inc
pop
test
ja
into
movl
jae
adc
or
mov
mov
imul
mov
mov
jne
aas
es
clc
pushf
jl
je
std
aaa
and
in
out
shrl
mov
rcrl
stc
jb
dec
loopne
idivb
mov
dec
in
mov
fwait
lret
push
sub
or
addr16
inc
int3
adc
pop
xor
inc
icebp
das
nop
sbb
xchg
dec
jae
or
and
jmp
and
imul
cli
xor
addr16
ss
adc
fbld
sub
sbb
push
aaa
dec
mov
push
mov
addl
movsl
xor
or
ud2
lock
nop
mov
push
or
daa
mov
orb
fldcw
rolb
out
out
mov
jg
cmp
int
mov
pop
or
mov
popa
mov
and
data16
add
mov
andb
fists
pop
ljmp
cmpsl
sub
lcall
or
dec
jl
lcall
lcall
push
sti
push
mov
mov
push
lcall
sbb
ss
daa
ja
iret
inc
or
or
cs
inc
leave
xlat
dec
insl
mov
jg
filds
push
sub
pop
mov
adc
mov
inc
jp
cmp
pushf
lods
sar
dec
xchg
xor
mov
pop
mov
xchg
xchg
xor
add
ja
inc
mov
fistps
adc
call
dec
mov
push
mov
lea
mov
pause
mov
scas
lock
out
lods
lahf
jp
xor
scas
pop
idivb
xor
mov
inc
dec
lret
xchg
jb
dec
mov
inc
sbb
fs
negb
lods
movsl
outsl
fmull
pop
insl
xor
negl
scas
jno
mov
cs
out
xchg
fsts
mov
fdivrl
addr16
mov
mov
stc
inc
pop
cli
push
aad
dec
cwtl
jnp
mov
adc
pop
stc
pop
jne
aad
push
dec
lods
int
je
push
push
cs
xchg
je
push
gs
push
or
out
jo
sahf
xor
xchg
xor
shrl
inc
bound
sub
inc
mov
sbb
xor
push
jbe
in
aas
repz
rol
jae
pop
test
nop
xor
push
inc
inc
cltd
jns
jmp
loop
jg
dec
cmp
push
int
bound
add
sarl
fninit
dec
pop
add
cmpl
mov
jnp
sahf
inc
aam
ficoms
insl
pushf
pop
inc
jns
call
jne
cltd
enter
push
adc
jg
cmp
shlb
jl
mov
pop
cltd
sbb
push
sbb
cmc
les
cltd
fs
jb
mov
add
and
popa
call
sbb
cmp
add
sub
adc
sub
mov
cmp
mov
imul
sbb
outsl
sub
cmc
out
stc
sbb
cmc
cwtl
fnstenv
enter
adc
out
push
lret
fcoms
out
push
and
leave
jecxz
mov
icebp
rcpps
and
adcb
dec
pushl
fsubrs
scas
jle
sarl
cs
xor
jecxz
iret
push
mov
test
cmpsl
sbb
mov
xorb
xchg
mov
sbb
ss
pop
notl
insl
pop
jp
movsb
hlt
int
push
imul
roll
js
mov
popa
mov
ficompl
mov
out
and
shrb
jge
sub
mov
sbb
aas
push
scas
adcb
jnp
jno
and
inc
in
dec
jl
inc
dec
lds
xchg
mov
data16
push
push
jnp
cli
rclb
push
mov
pop
ds
dec
add
rcrb
or
sub
testl
enter
sarb
and
jne
daa
stos
fisttpl
xor
inc
pop
loopne
xor
jmp
loopne
rcl
scas
mov
lret
insb
leave
fidivl
mov
inc
fcomps
lds
or
jl
fwait
push
fwait
mov
movsb
xor
hlt
mov
popf
cmpsl
jo
pop
lock
xchg
into
pop
insl
jl
insl
shlb
mov
inc
iret
jmp
sub
hlt
dec
or
test
cmpsb
mov
mov
es
push
in
xchg
cmp
cmp
dec
dec
xor
mov
push
loop
and
cld
sbb
push
fprem1
xchg
sbb
mov
arpl
pop
clc
cmpsl
add
call
jmp
mov
lret
ljmp
lcall
and
inc
cmp
pusha
lea
setbe
cwtl
adc
jle
dec
imull
and
lods
fiaddl
push
scas
out
dec
sub
xor
icebp
cs
gs
cmp
mov
push
xor
xchg
clc
es
inc
fistpl
loope
pop
fstl
imul
xor
xor
add
mov
test
dec
pushf
cmpsl
adc
xchg
aad
jg
jo
pushf
fildll
xor
cmp
push
fdivs
inc
xchg
data16
daa
test
xor
jmp
repz
movsl
pushf
cld
je
or
inc
jmp
hlt
lahf
out
inc
mov
inc
lods
jb
mov
xor
arpl
in
jmp
jbe
das
jnp
inc
ds
test
push
adc
repz
mov
mov
sbb
shll
xchg
out
cld
sub
cmp
mov
je
out
sbb
scas
imul
aas
out
mov
xor
jne
in
nop
lds
icebp
mov
mov
cwtl
pop
mov
mov
popa
add
roll
out
or
outsl
lods
cltd
int
adc
loope
in
cmp
pop
in
cwtl
enter
aas
inc
xor
push
fldcw
jns
sbb
add
popf
int3
scas
dec
pop
mov
punpckhdq
pop
cmp
cmp
cltd
out
mov
lods
pop
or
fistps
aas
pop
adc
sub
inc
lret
test
nop
sarl
popf
or
mov
xchg
push
shl
push
push
jno
mov
mov
mov
push
jae
enter
in
out
pop
lds
popw
icebp
mov
and
pop
mov
scas
ss
test
loope
adc
add
xchg
xchg
ljmp
adc
addb
adc
push
repnz
in
lea
les
pop
movsl
cmp
xchg
mov
mov
jbe
mov
test
cmc
icebp
pushf
inc
sbb
mov
addr16
addl
bswap
imul
dec
movsl
pusha
icebp
xor
or
mov
cmp
mov
shr
cmp
jmp
test
fisttpll
mov
mov
and
add
mov
jp
icebp
xchg
inc
cltd
popf
jb
filds
fcoms
mov
pop
inc
cmp
inc
jno
mov
fldt
mov
xchg
roll
in
test
pop
int3
jle
mov
sub
lahf
push
mov
mov
xlat
jno
and
cmc
jle
adc
out
xor
dec
xchg
and
dec
aas
sti
mov
fsts
mov
cmp
roll
push
aam
mov
scas
jge
jl
pop
inc
jle
je
xor
jg
adc
out
push
rcrl
xor
ret
mov
push
lock
into
sub
inc
jp
pop
push
mov
imul
cmc
xlat
push
dec
into
fsubl
mov
or
daa
movsl
or
jp
add
mov
inc
sub
and
dec
xchg
out
insl
imul
dec
mov
aad
cmp
mov
mov
dec
pop
sub
addr16
jno
stc
sbb
or
or
cmp
dec
push
push
push
push
outsl
outsl
int3
mov
jge
int3
roll
scas
lahf
les
jae
add
aas
test
std
or
leave
and
sub
pushf
fimull
xor
lods
test
xlat
popa
xchg
ss
enter
sub
clc
dec
xchg
inc
or
fisubrs
ficompl
data16
xlat
stos
xchg
popf
dec
dec
mov
mov
test
mov
cmpsb
push
pop
xlat
in
inc
and
cmp
and
lcall
or
fwait
cmp
mov
and
fwait
andl
arpl
fldl
out
mov
jp
outsl
sub
sbb
push
idivb
inc
insl
sub
jg
xchg
lret
adc
or
out
jg
daa
cmpsb
insl
push
fisubs
lahf
pop
lahf
sbb
jmp
mov
mov
add
xor
xchg
sahf
mov
sbb
cli
cmpsl
push
subl
sbb
scas
mov
repz
in
adc
jmp
dec
or
test
int3
mov
repz
sbb
sub
clc
add
arpl
test
pop
jp
movsl
leave
outsl
insb
fcoml
or
cmc
sub
xchg
jg
mov
out
xor
sar
outsb
scas
xor
mov
lret
mov
das
mov
jecxz
scas
sbb
sub
imul
mov
jmp
ret
repnz
sbb
mov
dec
sahf
movsb
lds
fstl
pop
mov
repnz
std
into
jnp
jbe
repnz
dec
xchg
xlat
call
adc
outsl
testb
addr16
or
pop
mov
rcr
rcr
jmp
ja
sbb
push
lret
stos
mov
cmp
call
pop
adc
push
and
xchg
in
push
xchg
sub
adc
aaa
pop
sbbb
or
loop
loop
std
in
jno
popa
mov
mov
sbb
add
push
arpl
jnp
lds
mov
das
rcr
jns
in
cs
jg
push
pop
inc
push
sbb
mov
lds
sub
sti
cmpsl
and
pusha
das
ret
add
cmc
mov
adc
aas
push
cmp
andb
aas
sub
sbbb
push
sbb
or
dec
jge
rcrb
movsl
fcmovnb
in
mov
stc
ja
inc
mov
aam
adc
repz
xchg
out
shl
sub
or
xor
into
sub
push
or
cmp
orb
push
std
inc
mov
ss
test
or
jae
mov
mov
add
movsb
sub
jl
dec
cli
inc
dec
fidivs
lcall
jmp
pushl
out
cld
out
pop
das
mov
es
cmp
rorl
adc
cs
jno
pop
pushf
jbe
xchg
add
orb
out
push
shrb
xchg
aam
insl
add
iret
adc
push
xor
in
xchg
sbb
ljmp
shrl
nop
xchg
in
xchg
xchg
pusha
jmp
je
pop
dec
cmp
mov
aad
or
jle
arpl
inc
arpl
mov
pop
pop
adc
test
negb
sub
int3
ficoml
in
pop
push
dec
dec
add
mov
dec
lods
sbbl
shlb
aad
inc
adc
mov
xchg
jle
mov
shr
lret
test
out
lods
push
mov
aam
movsl
xor
dec
and
test
pushf
fs
sbb
dec
lcall
cld
and
jne
shrb
das
ds
out
pop
cmp
in
cmp
insl
test
out
int
or
mov
movsb
sbb
notl
mov
inc
dec
pop
add
cmpsb
sub
or
test
dec
add
and
ror
sbb
mov
adc
fdivs
pop
cmp
push
cmp
mov
push
and
aas
sarl
jo
orb
sub
pop
test
dec
and
or
push
ljmp
cmp
xlat
jo
fistl
lods
ja
xor
dec
imul
imul
mov
adc
adc
lock
cmp
or
or
loop
cmp
in
jl
push
lods
pop
ljmp
mov
hlt
jne
ds
test
out
in
popf
sbb
inc
lret
out
jb
das
dec
adc
jmp
cmp
jg
fwait
pop
subl
shrl
push
cmp
ds
stc
mov
sbb
jne
sub
push
int3
fisubrl
sbb
rcl
enter
ret
stos
ja
and
or
and
add
hlt
xchg
imulb
notl
fistpl
mov
sbb
jae
test
pop
pop
lahf
fldenv
add
dec
add
out
test
sbb
aad
add
push
insl
lea
dec
jecxz
add
das
xchg
or
fisubrl
js
pop
in
jnp
neg
push
in
xor
push
div
shr
es
mov
dec
sbb
mov
or
mov
out
leave
in
dec
addr16
inc
jmp
aam
imul
les
mov
inc
xchg
loopne
push
push
mov
das
or
push
pop
mov
xchg
inc
dec
test
sti
scas
pop
ja
arpl
sbb
dec
jl
push
aad
mov
cmp
xchg
outsl
xchg
lahf
sub
test
dec
pop
jl
jecxz
push
pop
scas
mov
aaa
fwait
push
adc
cmp
repnz
stc
sbb
sbb
fucomp
scas
and
mov
or
sbb
popf
out
and
lea
mov
mov
jecxz
cmc
or
add
push
adc
js
test
sub
pop
dec
jecxz
mov
xchg
out
and
pop
mov
int3
pushf
test
stos
mov
lock
pop
inc
testb
ja
or
ficoms
mov
lock
xchg
jmp
dec
xor
inc
mov
pusha
clc
ljmp
cmp
xchg
add
repnz
pop
addb
mov
push
xor
mov
outsb
incl
mov
stos
movl
or
xchg
je
icebp
dec
xchg
pop
push
in
lods
scas
aaa
or
in
adc
add
xor
dec
rcrb
repz
insl
push
lcall
sub
or
push
into
icebp
xor
cmc
shrl
mov
outsb
imul
mov
xor
cs
or
xchg
jmp
lcall
push
dec
les
push
adc
xchg
push
subl
jns
ljmp
xor
ret
ja
xor
ljmp
int3
push
fwait
ss
dec
pop
xchg
lods
xchg
or
or
push
mov
popf
rorb
lcall
or
or
xor
push
ja
daa
shrl
xor
pop
mov
fwait
push
or
inc
inc
xor
jb
jo
lret
jb
jp
les
mov
cmp
inc
jnp
scas
mov
mov
xor
and
mull
outsb
mov
ret
testb
mov
sti
jno
add
mov
lods
cmc
andb
mov
cmpsb
mov
shr
into
scas
xor
mov
mov
mov
stos
xchg
cmp
orl
scas
xchg
loopne
clc
jg
popf
mov
pop
outsb
loop
push
mov
and
jne
or
js
pop
je
push
push
cmp
dec
mov
pusha
push
dec
jae
mov
xchg
leave
pop
repnz
icebp
fcompl
mull
mov
out
mov
stc
mov
xor
jecxz
leave
mov
lret
mov
int
outsb
and
sub
mov
jg
xchg
bound
sub
mov
sub
xchg
cmc
js
out
mov
outsl
adcb
aas
hlt
rcrb
shll
xor
xor
imul
dec
out
cmc
cmp
lret
pop
sbbb
out
xchg
out
cmp
pusha
xchg
or
pusha
out
push
cmpsl
sahf
ret
mov
inc
mov
js
fidivrl
mov
xlat
push
cmp
cmc
jg
pop
out
mov
pop
mov
int
and
cmp
mov
push
sbb
outsl
adc
mov
sbb
cltd
inc
jge
add
mov
pop
adc
or
adc
push
aas
and
ljmp
ljmp
sbb
push
fsubl
stc
stos
inc
mov
and
test
out
int3
mov
lret
std
leave
sbb
xchg
cmpsl
lret
stos
jge
shll
je
dec
mov
xchg
mov
lahf
stos
cmpsb
ss
lods
popf
pop
ret
or
bound
imul
mov
js
sahf
dec
jne
ss
stos
push
daa
mov
xchg
mov
dec
mov
mov
hlt
push
imul
mov
xchg
popf
inc
mov
xor
xor
jnp
add
sub
sub
shll
test
and
cmpsl
pop
pop
scas
add
leave
sub
push
push
leave
out
mov
cltd
pcmpeqw
sub
xchg
inc
jmp
or
push
push
sub
lret
and
xchg
addr16
inc
cmp
bnd
or
les
scas
fldcw
xchg
mov
xchg
int
dec
insb
mov
jnp
cli
inc
lcall
push
gs
xor
pop
xchg
clc
jmp
addr16
push
push
xor
lds
in
imul
dec
mov
lret
mov
adc
xor
add
xor
mov
out
xor
enter
xchg
adc
jge
lahf
cmp
xor
lock
repnz
ret
or
xor
add
shll
push
dec
xchg
lods
cs
push
in
dec
test
shrl
jne
dec
inc
notl
xchg
aad
std
push
pop
adc
shrl
xchg
sbb
sub
dec
fnstsw
pop
loop
ja
pop
inc
nop
insl
mov
pop
sbb
out
adc
push
pop
inc
cmpsl
ss
addr16
loopne
xor
jmp
adc
fsts
and
fisubrs
icebp
mov
and
xor
push
pop
dec
or
jge
lock
cmc
out
jne
dec
repz
test
xchg
add
cs
scas
fcmovnu
lret
cld
rclb
aam
dec
jl
or
in
mov
sbb
mov
mov
in
xor
imul
dec
mov
dec
mov
sub
clc
add
out
pop
movsb
add
enter
push
fildl
adc
sub
pop
je
pusha
outsb
stos
mov
pop
sbb
xor
cld
pop
xchg
mov
pop
xchg
pushf
fcompl
icebp
and
cli
mov
mov
movsl
scas
adc
clc
or
mov
sub
or
jno
dec
jnp
sub
shrb
aad
mov
gs
jno
mov
mov
adc
in
mov
rol
mov
xchg
adc
jle
sbb
mov
dec
loopne
imul
test
lea
push
or
addl
cwtl
outsb
jecxz
dec
fldenv
test
xchg
call
mov
xchg
inc
out
add
dec
cmp
repz
add
mov
int3
imul
aas
push
xor
xchg
mov
rcr
push
clc
fadds
sbb
stos
jle
fwait
inc
scas
cmp
inc
dec
mov
cmp
dec
push
mov
fisubl
xchg
lock
pop
sbb
mov
push
aam
insl
xor
out
popf
inc
pop
fstl
xor
in
int3
sub
cmp
push
movb
loop
sbb
adc
sub
pusha
jae
xchg
push
mov
fldt
iret
aad
xor
xor
imul
add
jb
mov
or
pop
or
push
push
sub
fldenv
orb
jl
jg
push
rorb
adc
mulb
sbb
inc
mov
test
push
sub
jae
add
hlt
sbb
push
repz
in
xor
xchg
xchg
xchg
push
sbb
stos
pop
dec
fisubs
xchg
loop
ds
arpl
adcl
dec
sub
mov
notl
addr16
jbe
andb
lret
sarl
mov
mov
fnsave
sub
push
cmpl
push
aad
cmp
mov
cltd
inc
das
fmul
loopne
mull
dec
pop
or
lahf
daa
or
bound
insb
add
sbb
adc
ja
mov
es
sti
add
xchg
scas
lds
pop
and
mov
sbb
nop
jle
ss
fwait
add
mov
push
shr
loopne
das
loope
in
ffree
scas
out
fldcw
fisttps
jge
repnz
push
imul
idivl
ss
inc
lahf
mov
lock
jbe
fstps
pop
mov
pop
inc
push
xchg
xchg
ret
sbb
inc
jp
or
les
dec
cmpsl
xchg
inc
in
in
cltd
xor
pop
cltd
adc
add
out
push
mov
xor
xchg
adc
mov
shrl
xchg
or
jnp
icebp
mov
lea
cmp
xor
jno
jae
inc
mov
adc
loopne
pop
cltd
mov
xchg
lock
arpl
aad
int3
lret
xor
xor
mov
pop
lahf
movsl
int
sub
push
dec
stc
mov
sbb
adc
test
sbb
push
fdivl
test
clc
arpl
lcall
or
ss
or
inc
out
sbb
push
hlt
sti
sbb
or
inc
jne
push
aaa
sbb
or
adc
ljmp
mov
push
je
sbb
pusha
xlat
lock
in
mov
mov
pop
push
fimull
mov
push
jp
sbb
cmp
pusha
int3
ror
and
add
sbb
add
xchg
mov
jmp
adc
inc
int
pop
xor
lods
fcmovnb
pop
inc
and
xchg
aas
and
pop
xchg
clc
iret
adc
sub
sub
inc
loop
arpl
pop
scas
repz
mov
jae
cmpsb
cli
push
daa
cmp
mov
sbb
push
cmp
iret
lods
pop
repz
add
fs
aad
out
or
or
fsubs
js
adc
les
sbb
add
xchg
mov
loop
pop
test
in
inc
divl
mov
out
fsubrs
sahf
add
push
or
gs
inc
push
loop
push
jbe
stos
into
sbb
push
aas
pop
dec
clc
loope
enter
sbb
arpl
sbb
push
mov
push
add
xchg
xor
xchg
jge
aam
jl
jmp
xchg
xchg
pop
cltd
sbb
or
out
cmpsb
xor
movsb
das
out
inc
cmc
mov
jnp
or
loopne
repnz
sbb
push
dec
sub
mulb
push
adc
push
push
xchg
cwtl
sti
test
xlat
xchg
and
ja
sbb
sbbl
mov
dec
sub
test
push
arpl
adc
in
push
loopne
pop
sub
sarl
call
fs
mov
test
movsb
ja
cmp
test
sub
jp
inc
xor
jne
xchg
adc
lods
xchg
sahf
icebp
and
pop
ret
add
enter
jle
add
xchg
ds
adc
fstps
clc
outsl
gs
mov
xchg
push
sti
adc
rorl
pop
insl
daa
nop
or
adc
in
mov
dec
scas
in
mov
push
push
stc
pushf
mov
jne
mov
mov
jo
xor
cmpsl
pop
cmp
jmp
iret
rcll
xor
jb
insl
mov
add
pop
in
int3
cmp
and
dec
xor
inc
pop
int
dec
mov
shrl
fnstsw
pop
mov
loopne
into
leave
imul
test
bound
mov
mov
pusha
dec
ficompl
sahf
xor
idivl
icebp
bound
ficompl
jo
xchg
iret
jl
clc
sub
daa
rorl
jl
xorl
loop
mov
mov
pop
inc
out
loopne
jecxz
mov
mov
ja
adc
mov
push
inc
push
inc
daa
cmp
push
push
xchg
xchg
or
inc
sub
lahf
repz
add
fucomi
inc
inc
out
sub
and
pop
aad
pop
fmulp
fisubrl
pusha
sbb
dec
andl
add
fyl2xp1
loop
test
cmp
or
sbb
xchg
shrb
xchg
cmpsl
pop
mov
jle
jo
rcll
mov
push
inc
or
add
ret
pop
test
lock
lret
adc
lahf
mov
not
lea
in
or
push
fists
mov
jl
or
arpl
and
mulb
js
mov
inc
popf
iret
pop
lret
pop
mov
add
loop
cmc
push
out
cmp
call
das
dec
mov
mov
and
enter
loope
xor
dec
push
push
jge
loopne
sbb
rclb
inc
mov
aas
xor
shll
push
lahf
xchg
aam
jne
or
or
adc
pop
xchg
add
cmc
pop
lock
pop
cld
pop
fimuls
cmp
lds
sti
in
push
jge
mov
out
and
or
sub
fwait
jl
jb
cmp
inc
and
mov
sbb
repnz
or
mov
pop
ret
insl
mov
jo
sub
sbb
ja
xor
push
fcoml
xor
out
fdivrs
cmp
cwtl
sub
cld
mov
mov
lock
data16
adc
inc
scas
push
test
mov
scas
push
mov
mov
dec
xor
jbe
in
movsb
fsub
adc
cmp
cmp
sbb
jl
dec
in
cmp
inc
xchg
loopne
mov
orl
inc
xchg
mov
jnp
js
push
cmc
add
mov
xchg
gs
inc
or
ret
rorl
arpl
loopne
rcll
lret
xchg
sbb
inc
sbb
adc
pop
xor
enter
dec
mov
jo
mov
jo
or
sbb
mov
cmp
adc
mov
jg
scas
and
cmpsl
or
lds
push
mov
cltd
aam
mov
xlat
icebp
data16
sahf
pusha
ss
fdivrs
cltd
iret
sbb
test
mov
jecxz
test
fs
mov
repz
mov
rclb
mov
sbb
mov
dec
fmull
cmpsb
inc
test
jbe
xchg
jle,pt
pop
pop
dec
jmp
iret
dec
pop
lds
mov
call
arpl
sbb
aad
or
mov
dec
mov
ljmp
jmp
pop
mov
pop
fstps
test
aam
cmpsb
ficomps
out
stos
sbb
push
adc
lea
xchg
push
rorb
enter
xchg
sub
stc
inc
stos
or
jle
fidivl
pop
enter
test
and
mov
inc
sub
in
in
fimull
mov
push
mov
mov
sub
fucomi
add
jbe
test
sbb
jmp
inc
mov
nop
je
jle
sahf
lods
mov
inc
repz
mov
adc
test
xor
jnp
mov
adc
fldt
push
push
mov
lds
fcoms
inc
mov
mov
adc
push
cmpsb
dec
shlb
inc
jno
decl
sbb
push
pop
inc
push
sbb
pop
loopne
push
push
dec
int
insb
sub
jp
pushw
jns
nop
pop
cltd
inc
mov
mov
orb
fwait
bound
sub
jb
sub
inc
add
jnp
inc
sahf
stc
dec
mov
pop
mov
jp
add
jge
xor
leave
ljmp
jbe
mov
rorb
xor
fdivrs
data16
dec
icebp
sub
mov
aam
xor
xchg
ja
dec
dec
lods
js
sbbb
pushf
jbe
xor
xchg
clc
into
stos
ja
mov
jecxz
xor
mov
imul
leave
mov
popa
orb
adc
pushf
jo
xchg
xor
loope
add
mov
sub
les
fistpll
jmp
pop
pop
cltd
xor
adc
lods
xor
xor
out
lock
jns
movsl
mov
fs
pop
mulb
aas
lahf
mov
or
stos
int
rcrb
jecxz
pushf
dec
push
sub
push
lahf
dec
mov
mov
sti
mov
and
xchg
loope
adc
fstpl
imul
cs
js
and
in
arpl
out
xor
mov
das
lcall
enter
push
and
push
or
shr
sti
dec
cmpsb
jle
mov
xchg
pop
cmp
jl
stos
test
rcl
fiadds
mov
repnz
pop
push
es
sub
pop
icebp
ds
or
dec
movsb
fidivrl
int
fs
fcompl
add
stos
nop
fldl
ficoml
fcoml
and
inc
jno
hlt
xchg
shlb
addl
dec
and
lcall
pop
xor
addb
movsb
adc
or
pop
in
push
scas
test
outsb
adc
arpl
sub
jge
jmp
shlb
mov
xor
out
lea
xor
xchg
mov
aaa
mov
jg
aas
cmp
adc
sahf
mov
push
ret
and
or
roll
popa
inc
mov
cs
mov
add
inc
jecxz
adc
out
jo
push
jecxz
shrl
mov
xchg
int3
cmc
mov
dec
inc
clc
sub
cmpsl
fidivl
xchg
lds
mov
inc
add
push
push
lahf
lea
add
iret
int
pop
outsl
and
dec
or
andb
lahf
or
sub
push
rep
dec
rclb
cmc
push
roll
cmpsb
jmp
xor
out
xchg
inc
mov
mov
jns
scas
mov
mov
cld
inc
or
sub
nop
sub
pusha
mov
pop
lret
inc
mov
sar
ret
orl
sbb
xor
sub
repz
mov
dec
push
loopne
leave
adc
int
pop
sbb
mov
jmp
test
dec
addl
cmp
cltd
or
adcb
rorl
rcrb
lock
cmp
ljmp
and
push
cmp
movsb
pop
push
in
fcomps
jp
ficoms
mov
pop
mov
adc
mov
outsl
pop
jmp
hlt
clc
inc
jae
sbb
sbb
sbb
imul
test
cwtl
test
push
mov
cwtl
xor
stc
mov
sti
fisubrl
mov
jmp
xlat
push
out
mov
and
mov
aas
cmpsb
xor
sbb
mov
pop
inc
fwait
xor
push
icebp
ret
adcl
cli
lea
lods
loop
int3
ss
fadd
in
sbb
sub
ljmp
repz
and
mov
in
stc
mov
or
cmp
push
mov
daa
into
mov
dec
out
push
dec
mov
scas
xor
test
push
push
xchg
cmpsb
adc
push
in
cmpsl
or
pop
pop
movsb
sbb
scas
decl
xor
mov
cmp
pop
pop
lods
fdivrs
inc
add
xor
vpackssdw
or
dec
pop
in
sbb
xor
and
mov
xor
out
pushl
xchg
incl
add
xchg
push
mov
test
pop
dec
lods
mov
test
popa
outsb
push
lods
movsl
shll
and
ja
sub
js
testb
mov
hlt
mov
movsb
jbe
popa
test
dec
sub
aad
cmp
sbb
xchg
ja
push
or
cmpsb
test
loope
mov
inc
push
mov
test
jne
dec
addr16
loopne
cmp
pop
es
int
ss
cmp
sub
dec
iret
xchg
mov
idivl
pop
outsl
roll
fs
sbb
fdivrp
inc
pusha
bound
pop
jne
enter
enter
pop
aaa
frstor
xor
add
sub
or
jmp
repz
shl
les
push
lahf
mov
jmp
cs
out
adc
jp
add
jge
fbld
popf
add
nop
xor
divb
mov
lahf
mov
lret
es
lahf
ret
cltd
sbb
imul
and
ret
fildll
cmp
ja
in
ljmp
lret
daa
je
andl
push
mov
cmp
out
sub
std
dec
dec
mov
mov
popf
fidivl
xor
fsub
lahf
fmull
cmc
repz
sbb
and
push
roll
nop
push
out
hlt
sub
aas
push
cmpsb
addr16
mov
jae
lret
fisttps
pop
xchg
addr16
and
mov
adc
xor
icebp
jae
jp
je
inc
int3
in
mov
fcoml
push
jecxz
push
cwtl
sbb
movsl
inc
pop
dec
mov
cmp
jbe
jae
adc
mov
mov
or
mov
adc
xor
mov
adc
ss
icebp
aam
inc
in
loope
fs
mov
les
cmc
pop
and
mov
gs
sub
add
popf
pop
testl
pop
scas
scas
fidivrs
cli
fsin
insl
mov
cmp
je
outsl
mov
jmp
out
shr
jno
jmp
lods
mov
mov
jle
mov
popf
ficompl
or
push
mov
cmpsl
je
adc
sub
dec
scas
xchg
frstor
dec
popa
inc
rcr
mov
sbb
push
dec
test
add
shll
lahf
and
scas
sahf
mov
jp
outsb
mov
xchg
mov
testl
int
ds
mov
dec
adc
imul
pop
lret
xor
mov
les
push
out
and
out
cmp
xchg
jb
sub
sti
push
mulb
pop
sub
inc
cmpsl
dec
imul
xor
dec
push
push
out
ss
mov
xchg
xchg
pop
xchg
add
gs
lock
xchg
into
pop
xchg
sbb
sub
mov
ds
push
pop
mov
enter
jle
sbb
push
push
imul
dec
mov
fcmovu
add
outsl
or
pushf
and
ja
inc
cld
jnp
bound
out
sbb
sarb
and
jl
and
fwait
aam
jp
push
cld
jp
push
bound
imul
testl
mov
sahf
lret
adc
les
add
mov
nop
popa
ret
add
ss
outsl
mov
inc
and
sub
mov
loope
test
pop
loop
cmp
movsb
or
repnz
inc
push
mov
ljmp
in
inc
dec
sbb
jmp
add
clc
and
xchg
test
mov
outsb
inc
iret
add
frstor
pop
xchg
push
and
rcrb
mov
lret
icebp
das
pushf
movsb
inc
pusha
push
dec
push
int
fdivrs
jb
dec
jb
pop
stos
int3
cmpl
mov
rclb
cwtl
lea
mov
sbb
cmc
add
pop
das
insl
fidivrl
mov
lds
out
jns
or
mov
stos
push
xchg
mov
jbe
bound
cmpsb
cmp
insb
or
leave
xchg
ror
push
ljmp
mov
popa
vmovntps
ljmp
sbb
cmpxchg
push
inc
das
and
add
mov
xor
jg
pop
jae
adc
adc
imul
push
inc
rorb
jne
adc
fcoms
push
adc
js
mov
repnz
test
lds
inc
ljmp
or
cwtl
xchg
outsb
cltd
movsl
xchg
test
cmpsb
ja
es
testl
lock
adc
push
imul
movsl
adc
xor
cld
sub
iret
sti
sbb
jmp
je
adc
test
out
or
das
xchg
xor
cld
mov
fcomps
je
sub
or
mov
sbb
aas
jno
mov
xchg
cmp
loopne
push
in
ret
xchg
sub
divb
jbe
sbb
stos
adc
rcrl
adc
push
movsl
inc
mov
repnz
xchg
jns
jns
stos
jnp
sbbl
dec
imul
inc
js
lea
mov
ljmp
adcl
insb
lcall
and
mov
mov
xchg
cmp
hlt
or
push
pop
jmp
scas
and
pop
lods
scas
and
sub
adc
test
mov
jmp
gs
out
icebp
ret
dec
ret
mov
xorl
xor
mov
cli
test
cmp
inc
je
stos
xor
int3
test
jle
leave
push
enter
adc
gs
cli
dec
xor
popa
ss
pusha
stos
sbb
insb
adc
mov
push
sub
ret
shrb
cmpsb
dec
push
mov
push
out
push
aaa
mov
mov
aaa
push
mov
in
jbe
outsb
pop
pop
filds
mov
inc
in
out
outsb
subl
sbb
cltd
jg
jnp
mov
movsl
add
scas
xor
xchg
push
fmul
into
rclb
mov
push
aad
push
dec
in
lods
mov
xchg
mov
mov
pop
jl
test
cmp
push
sbb
jae
inc
jne
push
leave
push
nop
js
sub
inc
faddl
xor
push
sub
mov
int
cwtl
xorl
fdivrs
sub
and
mov
outsl
jge
shld
adc
call
dec
mov
xor
jae
mov
mov
fstps
jns
jns
cltd
loope
cmpsb
jp
sti
jp
gs
sub
sub
push
or
and
lds
popf
inc
xor
jno
and
or
movsb
jmp
xchg
loope
ja
lahf
sub
dec
cmp
repz
and
jle
popa
push
lock
lcall
jge
test
in
pop
and
cmp
mov
jecxz
add
mov
cmpsb
add
std
dec
mov
mov
add
das
xchg
mov
push
fs
xchg
dec
neg
imul
xchg
aas
into
jle
or
in
aaa
jbe
sub
push
push
jns
dec
cmpsb
push
fdivs
cli
enter
in
push
shlb
inc
sub
pop
das
lahf
mov
push
dec
push
movsl
inc
xor
lds
fwait
movsl
mov
add
mov
push
or
dec
fcmove
repz
popa
or
test
xor
mov
mov
pusha
dec
pop
aaa
push
mov
mov
mov
jne
scas
xchg
xchg
cmp
dec
test
dec
or
or
into
cmp
inc
arpl
and
dec
push
mov
sbb
aaa
jp
jns
xchg
int3
movsl
mov
notl
xchg
mov
jae
mov
out
repz
mov
fiadds
dec
or
xor
aaa
js
and
ja
insb
inc
popa
pop
mov
in
and
in
negl
push
addl
cli
pusha
insb
adcb
call
mov
xchg
iret
cmp
ljmp
push
fidivrl
repz
sbb
sbb
jbe
ds
push
gs
sbb
add
ret
mov
xchg
insl
sbb
das
and
xchg
iret
loop
mov
adc
sbbb
mov
fwait
sbb
mov
mov
shlb
clc
out
ja
in
std
sahf
push
ja
call
cmpsl
stos
xchg
into
pop
jnp
mov
pop
push
stc
xchg
lea
in
shrb
inc
stc
gs
xchg
test
push
in
clc
and
std
mov
aaa
shll
aas
in
into
dec
test
aam
stc
pop
xchg
int3
rcr
and
in
bnd
cmpsb
cmp
jns
lock
cmp
adc
or
mov
push
inc
and
xor
aad
fdivl
enter
cmp
ss
dec
xor
xor
lcall
jle
xor
cmp
loope
inc
flds
cmp
aam
iret
pop
pop
xor
sarb
out
mov
adc
sti
ja
fistpll
mov
movsb
in
jne
xchg
dec
mov
incl
mov
clc
jbe
loope
pushf
mov
pop
insl
mov
push
scas
sbb
and
fdivrs
les
testb
mov
xchg
add
pop
mov
jg
mov
pop
xor
testl
sbb
inc
shl
imul
jle
xchg
in
xor
mov
or
popa
push
dec
imull
mov
andl
jge
dec
mov
addl
adc
push
jno
fcoml
dec
mov
test
sub
mov
or
mov
fstpt
test
or
sub
cmp
inc
ljmp
daa
stos
int3
shrb
lret
je
fsubs
pop
adc
jge
jnp
xor
sbb
push
mulb
xor
clc
push
push
cld
mov
mov
jno
jb
scas
jo
or
pop
mov
mov
dec
lea
stos
dec
mull
add
ds
jl
jnp
mov
add
ds
xlat
xor
pop
imul
push
cmpsl
andb
mov
in
add
mulb
xor
and
mov
inc
and
and
xor
mov
hlt
pop
jne
pop
sub
sub
xchg
or
shr
iret
and
stos
add
mov
loop
in
out
pusha
imulb
or
roll
or
stos
pop
xchg
inc
scas
stc
test
je
addr16
pushf
jge
xchg
mov
rcll
imul
lds
test
enter
jnp
mov
jecxz
sbb
or
jae
sub
movsb
test
jne
or
cmp
imul
ficompl
mov
sub
aam
std
pop
fwait
mov
inc
mov
xchg
les
mov
movsb
sbb
hlt
out
and
js
std
in
adcb
adc
ss
ja
dec
pop
aam
je
out
mov
xor
js
scas
pusha
pop
mov
std
adc
pop
push
pop
test
lds
lahf
mov
in
jecxz
jmp
nop
enter
push
add
or
ret
jl
push
fisttpll
mov
sbb
or
dec
loope
cmp
stos
shl
ljmp
push
xor
xchg
push
sti
cmpsb
mov
xor
jne
ss
pop
enter
pop
mov
xlat
stos
jne
loope
ja
xchg
jl
mov
test
pop
sarb
mov
insl
sbb
iret
inc
leave
pop
push
lahf
popf
push
jp
mov
dec
push
and
lods
cmpsl
jle
xor
jmp
jb
loope
xchg
test
loope
push
loop
cmp
mov
xorl
mov
cmpsb
cmpl
icebp
pop
dec
cwtl
jno
inc
pop
add
daa
jecxz
inc
nop
push
push
mov
nop
xchg
aas
fldl
mov
sub
sbb
bound
push
mov
pusha
push
sti
stc
adc
dec
dec
out
leave
test
data16
jle
outsl
mull
or
cli
adcl
frstor
xchg
or
test
add
dec
mov
dec
mov
clc
adc
dec
movsl
push
lock
out
sub
adc
dec
cmp
mov
inc
movsb
es
ret
fisubl
xchg
dec
lea
or
sub
mov
sar
int3
add
jg
mov
adc
fs
ja
and
andl
dec
lods
adc
inc
call
clc
addr16
fs
pusha
adc
rcrb
inc
sbb
lods
jg
movsb
cmpsb
aam
cmp
jmp
lret
mov
add
and
xlat
inc
jle
in
dec
adc
lods
adcb
sti
pop
sti
test
pop
lds
clc
addl
ljmp
dec
dec
jnp
mov
out
inc
ret
dec
pop
sbb
pop
inc
add
sbb
xchg
inc
inc
stos
push
xchg
mov
and
cwtl
pusha
mov
cmpsb
adc
pop
add
ds
sbb
mov
ret
mov
mov
mov
jae
insb
dec
add
or
or
mov
mov
jle
out
jno
cmp
fnstenv
adc
add
aad
sbb
and
xchg
mov
insb
inc
mov
lret
xchg
test
gs
jmp
enter
repnz
mov
xor
daa
ss
popa
frstor
cmpsl
in
sub
inc
call
xor
mov
sub
mov
cwtl
sub
and
adc
cli
lret
mov
adcl
ret
in
inc
sbb
stc
out
sahf
xor
cli
decl
cmp
test
add
data16
inc
jp
push
rorb
fs
adc
outsl
ds
fsubl
or
mov
in
sub
stos
and
out
nop
inc
sub
stos
and
subb
sbb
xchg
lds
jg
mov
xor
jno
adcb
pop
repnz
imul
outsb
push
cltd
int3
add
sahf
push
add
cmp
cs
cli
jno
sbb
cmp
ss
mov
or
outsb
enter
jmp
in
jmp
repnz
jno
imul
mov
loope
adc
xchg
cmp
jb
ret
mov
cld
mov
jnp
fimuls
inc
cmc
inc
or
push
mov
popf
fadds
test
rclb
push
imul
ret
pop
ja
push
xchg
mov
std
inc
add
jmp
jl
sub
sbb
adc
mov
das
aam
add
sub
cli
enter
adc
enter
je
mov
adc
pop
test
imul
cmp
cltd
aaa
or
and
rorl
inc
lods
es
jmp
test
jne
xchg
test
cmp
cli
aaa
pop
hlt
loop
filds
xor
jne
addr16
out
inc
dec
fiaddl
sbb
hlt
aad
repnz
jne
pushf
cmp
fisubl
jecxz
in
cmpsb
in
jnp
jg
cmp
leave
fidivs
cli
or
add
cmpsb
dec
mov
insl
int
inc
imul
fnop
and
add
mov
into
jnp
cld
popf
mov
loope
and
shlb
jne
push
pop
inc
jns
inc
mov
adc
imul
fisttpl
data16
jns
jmp
ja
mov
jecxz
test
cli
cs
jp
adc
lock
stos
in
and
sbb
push
xchg
push
pop
iret
pop
inc
test
push
mov
outsb
jo
das
hlt
cmp
and
les
xchg
pop
jl
dec
xchg
shll
mov
stos
xchg
inc
les
cwtl
mov
and
inc
or
push
ret
inc
je
dec
dec
lds
cmp
xchg
ds
cmpsl
sub
pop
inc
xor
mov
mov
mov
dec
jmp
imul
popa
ret
das
lods
jl
sub
cmpsb
adc
frstor
imul
mov
xorb
push
adc
dec
sbb
loopne
or
cmp
call
inc
xchg
push
popa
mov
out
add
lcall
mov
xor
sti
xor
fcoms
mov
test
das
sbb
mov
add
lahf
lret
negb
or
sub
dec
pop
adc
push
cmpsl
in
fcomps
pop
or
sbb
ror
fchs
test
xchg
and
jb
mov
mov
pop
xchg
scas
in
cmp
jns
pop
cmp
mov
push
sbb
or
adc
int
paddsb
fcmovbe
and
cmp
push
rorb
movsl
mov
aad
add
mov
xchg
mov
or
ret
pop
mov
sti
sub
out
jb
in
sub
inc
cwtl
mov
pop
cmp
movsb
bound
push
fstpl
xchg
sub
imulb
shlb
or
inc
xchg
adc
xchg
jle
xlat
loope
pop
mov
mov
sub
in
cmp
mov
call
outsb
jnp
nop
cmc
lret
les
shlb
jg
rcl
arpl
inc
inc
jmp
into
nop
bound
cmpsl
ucomiss
add
loopne
stos
or
and
mov
aas
or
sub
adc
outsl
jne
mov
rcrb
xchg
push
push
int3
std
sahf
dec
out
ror
and
lret
data16
push
ret
xchg
mov
and
and
xor
or
lods
jg
mov
push
in
push
xlat
or
inc
les
xor
pop
insb
adc
lahf
pop
aas
ds
pop
sahf
repz
xchg
xor
test
mov
inc
or
or
cwtl
jne
sub
fnstcw
sbb
in
mov
iret
and
pop
es
scas
jo
into
mov
pop
in
cli
shlb
adc
inc
xchg
jp
cltd
pusha
and
out
orb
stos
clc
es
sub
xchg
sub
sbb
dec
aas
push
pop
das
repz
shrl
jbe
hlt
jmp
push
dec
pop
popf
jns
jle
push
les
and
stos
mov
sar
pop
sbb
and
cwtl
in
mov
xchg
lret
cmp
lret
pop
das
mov
fistps
add
loop
lds
cmp
mov
push
pop
xchg
push
cwtl
pushf
push
daa
adc
out
xchg
stos
xor
mov
out
lahf
add
pop
cmpsl
mov
or
sub
mov
outsb
in
stos
fwait
jmp
cmp
add
inc
in
add
scas
push
xchg
mov
repnz
inc
call
mov
test
jno
movsl
push
repz
lods
xor
mov
sub
ret
aaa
lret
jp
adc
pop
in
cmc
test
sub
and
jnp
test
outsb
push
and
sbb
test
dec
cmpsl
mov
es
pop
clc
mov
in
fbld
sub
mov
sbb
das
push
shrl
dec
push
dec
inc
jge
xchg
ja
fdivrs
sbb
les
pushf
mov
js
add
cmp
movsb
ficompl
push
scas
popa
addl
sub
lods
je
movsb
push
punpckhbw
fsub
aaa
add
loop
sbb
fwait
and
mov
sahf
sbb
outsb
dec
addb
movsb
stos
jmp
cmpsb
data16
incl
rcrl
xchg
sti
mov
xlat
mul
push
pop
adc
fmull
xor
movaps
pop
xor
sbb
je
popf
jl
loop
pop
xchg
dec
jle
jl
dec
or
push
sbb
xor
test
aas
sbb
lea
dec
ficoml
ljmp
pop
pop
sbb
rcrb
lea
mov
mov
xchg
cmp
clc
and
cmp
sbb
loope
dec
jge
scas
jle
gs
lret
loopne
fs
push
add
mov
loope
push
in
cmp
push
outsb
mov
mov
xchg
jg
or
mov
add
adcb
fcmovnb
pop
shlb
inc
sbb
out
int3
movsb
aaa
pushf
pop
outsl
cmp
aaa
xchg
xchg
loop
pop
fisttpll
lods
push
rolb
push
pop
scas
stos
or
xchg
sbb
icebp
cltd
stc
push
jns
nop
pop
fcoml
jecxz
push
cmp
sbb
xchg
adc
push
cli
xor
push
inc
pop
and
arpl
inc
push
jnp
xor
push
and
out
cmpsb
mov
mov
push
inc
insl
or
test
push
lcall
pusha
out
or
in
pop
rcl
push
sbb
repnz
cs
addr16
pop
rol
sbbl
cmp
adc
lcall
popf
mov
popa
fildl
int
mov
add
movb
jge
sbb
mov
inc
repnz
fnstcw
jmp
push
ss
dec
lcall
xlat
xor
insb
arpl
push
clc
les
inc
repz
sub
call
nop
cmp
jge
fs
scas
out
test
imul
negl
leave
or
insb
aaa
gs
or
mov
insb
lds
popf
ja
sbb
test
fists
jl
and
inc
lock
out
inc
and
ror
or
int
aad
cmp
call
ds
pop
cmp
lcall
les
out
cld
or
xchg
out
cmc
push
insb
mov
adc
xor
inc
scas
and
add
cwtl
or
mov
sbb
add
outsl
lock
shlb
cmc
mov
ja
xor
cmp
aaa
and
jae
sub
add
bound
fld1
push
add
adc
fwait
call
add
in
dec
cwtl
push
pop
out
scas
repz
cli
jecxz
clc
or
lea
inc
ss
push
xchg
xchg
jge
sbb
sub
std
sub
mov
ficomps
aam
and
mov
pop
test
loope
fadd
mov
mov
leave
scas
jae
jmp
shl
sarb
add
push
lret
mov
pop
sbb
out
xchg
adc
mov
mov
push
cvtps2pd
ss
pop
idiv
xor
in
jno
fisttpll
xchg
fwait
mov
xlat
sub
cmp
sbb
test
sbb
insb
mov
fidivrl
add
outsl
rcrb
push
icebp
xor
or
jne
rorl
sub
push
pusha
mov
mov
mov
jl
cltd
dec
adc
pop
inc
orps
dec
push
out
pop
sub
jl
mov
push
inc
pushf
pop
mov
inc
std
into
adc
mov
int3
jecxz
cmp
or
inc
loop
cltd
fidivrs
pop
xlat
sbb
loope
aaa
mov
ss
lea
mov
push
clc
stos
dec
mull
xor
mov
mov
cmp
jge
dec
and
pop
enter
or
mov
sbb
sub
jno
pop
insb
mov
cmp
or
mov
mov
in
mov
subl
mov
add
fs
and
push
sarb
stos
dec
rcl
add
rcr
jp
and
jns
fidivrl
jnp
in
add
mov
sub
stos
loopne
pop
insl
test
inc
insl
sub
jno
inc
test
stos
lods
shll
jmp
stos
or
mov
or
cwtl
pop
or
lods
inc
icebp
enter
xchg
and
lahf
enter
and
ret
sahf
negl
sub
xchg
fistl
sbbl
int
dec
xor
inc
adc
push
jns
or
sbb
cmpsl
xchg
pop
dec
dec
jno
inc
dec
push
xlat
sar
adc
insl
bound
or
lret
idiv
in
mov
test
dec
xor
or
and
shrl
mov
ret
sbb
adc
jmp
sub
xor
shrl
jno
add
push
cmpsl
mov
push
lret
popa
sbb
jp
mov
repz
mov
fimuls
adc
xor
lahf
jg
fsubrl
pop
inc
mov
inc
mov
sub
xchg
pop
in
or
std
jns
lods
xor
mov
out
inc
ljmp
push
loopne
xor
push
cwtl
inc
jbe
push
sbb
add
cltd
xor
pop
test
lcall
sbb
mov
neg
lods
mov
fistl
jp
testl
dec
loopne
iret
mov
roll
roll
push
sbb
daa
loop
sub
notl
ljmp
pusha
xor
mov
push
pusha
data16
call
ret
or
mov
lock
mov
aaa
push
lahf
outsb
ja
bound
scas
push
or
xor
scas
adc
pop
dec
jmp
push
ja
xchg
dec
and
cwtl
leave
xchg
jle
gs
adc
nop
sub
iret
notl
and
push
inc
dec
xor
inc
add
das
lock
cmp
sub
jg
aas
iret
xor
add
test
sbb
pop
cltd
stos
inc
jb
dec
into
ds
dec
push
jno
or
xchg
xor
std
cmp
mov
and
cld
les
loopne
add
xor
mov
ja
js
js
scas
xor
repz
xchg
repz
add
scas
lds
int3
cwtl
test
cltd
adc
and
insb
int3
mov
jne
dec
sbb
add
push
inc
sbb
loop
dec
out
insb
cmpsl
push
pop
cmpsb
jp
popf
cli
xor
gs
lock
mov
imul
lods
mov
ret
pop
inc
xor
nop
xchg
sub
fsts
icebp
push
and
dec
mov
out
pop
adc
and
jo
sub
stos
in
pop
inc
sbb
xor
xlat
pop
lods
jg
mov
icebp
in
pop
testb
arpl
cli
add
fstl
cmc
xor
ja
nop
and
ljmp
in
cmpsb
xchg
int3
inc
dec
add
cld
sub
test
notl
mov
sub
pop
addl
xchg
mov
fwait
push
bound
fcomps
rol
cmc
pop
lds
pusha
jl
push
mov
repz
out
mov
jns
mov
jb
iret
sbb
ljmp
dec
jle
in
dec
adc
add
push
mov
pop
ss
adc
enter
sbb
ja
mov
notb
mov
shlb
adc
inc
add
xor
call
pop
or
or
je
mov
mov
xor
push
jns
sbb
mov
cmp
rcrl
into
xchg
hlt
pop
dec
mov
sbbb
imul
adc
sbb
push
cmp
push
leave
shr
mov
insb
sbb
push
pop
adc
pushf
fcoml
push
lds
xor
push
pop
cld
pop
push
and
imulb
mov
push
jl
add
sbb
dec
clc
sti
in
jbe
popf
sub
in
sbb
fisubl
lahf
cmp
jnp
xor
loop
out
mov
dec
dec
in
cs
mov
movsl
mov
jl
cmp
xchg
jo
ja
addr16
cli
cmp
inc
fists
inc
mov
cmpsl
cmpb
jecxz
cmp
add
mov
lods
mov
ja
xor
jb
jle
inc
mov
pop
test
adc
pop
xchg
pop
imul
cwtl
ja
adcb
xchg
pushf
inc
std
add
icebp
sbb
xor
xchg
andl
les
aam
fidivl
jecxz
pop
push
xor
jbe
mov
fdivrs
sub
xor
test
cwtl
inc
jmp
jbe
mov
pop
sbbb
into
adc
cmpsl
out
xchg
adc
mov
mov
jns
pop
sub
mov
sbb
je
push
jo
sahf
jnp
pop
popa
out
dec
push
das
les
movsb
mov
rclb
inc
adc
mov
inc
fiadds
fsubp
xchg
aas
fxtract
sbb
xor
jo
lcall
out
rcr
or
mov
rol
test
push
roll
out
mov
int3
sbb
cmpb
inc
mov
cs
push
push
mov
out
into
inc
mov
mov
mov
or
rorb
fsts
add
loop
lcall
arpl
push
inc
lea
aam
pop
les
mov
lds
cwtl
dec
in
nop
jo
jle
and
sahf
mov
adc
and
push
test
cmc
ficoms
nop
lcall
xchg
out
push
jp
bound
lcall
xlat
out
pop
call
daa
sbb
mov
adc
cmp
scas
jo
cli
stos
sbb
addr16
pop
sbb
shl
arpl
repz
test
cmp
popa
mov
pop
and
fldl
cmp
repnz
inc
jmp
test
inc
lea
into
lods
in
enter
xchg
es
xchg
movsl
jno
and
sbb
ds
movsb
push
aam
ja,pn
mov
daa
lahf
in
lret
sbbl
add
and
inc
lods
inc
outsl
adc
bound
adc
jge
test
outsb
pop
rolb
lret
jl
and
xchg
mov
pushf
lret
lds
pop
and
mov
repz
push
aaa
inc
or
jp
mov
xchg
jo
cmp
les
inc
sub
jp
push
and
fucomp
jmp
rol
adc
dec
outsl
adc
insb
and
add
and
insl
mov
inc
addr16
sbb
sti
or
fldenv
loope
pop
jno
dec
adc
aam
in
or
cmp
jecxz
pop
rolb
xor
inc
push
fsubrl
adc
push
sbb
popf
mov
mov
test
mov
mov
and
mov
popf
cmp
rcll
sarl
xchg
addr16
xchg
dec
das
and
mov
ffreep
xchg
push
inc
mov
xchg
xchg
lahf
inc
cld
and
es
mov
cmp
scas
sbb
and
sbb
pop
fistps
xchg
into
repz
popl
dec
adc
pop
fyl2x
mov
std
cmp
sub
cmpl
dec
and
lret
pop
addr16
mov
sub
cmp
ret
lret
xor
stc
push
cmp
fists
inc
cs
jmp
jl
inc
fs
sub
push
mov
mov
jg
jno
daa
mov
inc
dec
jg
insb
add
or
js
jo
and
sbb
sti
rorl
shll
test
insb
xchg
leave
je
clc
fwait
mov
leave
sbb
inc
push
jae
pop
test
jns
jg
test
push
cmpsl
mov
mov
into
and
lret
fsts
test
inc
sub
loopne
in
addl
std
movsb
pop
shr
jo
scas
pop
addr16
cmp
sub
add
jns
shll
testb
icebp
mov
or
fsubl
xor
fcmovbe
jbe
mov
repnz
mov
sub
popf
and
mov
dec
pushf
in
sub
sub
inc
xchg
cli
outsl
xor
rcrb
xor
sti
pop
aam
jbe
mov
lock
out
in
lock
adc
mov
xchg
mov
cwtl
es
jb
repnz
jg
rcrl
inc
mov
mov
and
cmp
stos
sbb
movq
xchg
ret
arpl
adc
or
movsl
add
mov
data16
cmp
xchg
int
xchg
cmc
pop
and
inc
roll
outsb
mov
mov
xchg
xchg
sub
in
insl
jmp
rorb
pop
out
or
jmp
mov
sbb
mov
jnp
push
mov
cmpsl
scas
mov
push
or
insl
and
sahf
add
inc
mov
outsl
int3
dec
sbb
into
cs
xchg
das
outsl
add
pop
cmp
jne,pn
mov
in
fdivl
rol
test
imul
mov
add
or
icebp
lods
fadds
movsl
cmp
aad
in
pop
rorl
mov
scas
outsb
cmp
aaa
push
pop
pop
sub
inc
dec
dec
mov
jecxz
jae
je
insb
jmp
nop
lahf
mov
out
fdivrl
pushf
rorl
jo
jge
adcb
sbb
cmovb
lcall
popf
push
repnz
xor
aad
cmp
inc
sbb
stos
sbb
mov
cli
lret
mov
add
mov
jmp
lcall
fists
or
mov
loop
mov
cmc
mov
jp
cmpsl
sbb
push
inc
jle
mov
jl
push
imul
lret
inc
cmp
inc
xchg
sbb
add
addr16
jbe
pop
xchg
sub
xlat
mov
pop
aas
out
lods
sub
je
xchg
imull
sub
jl
mov
outsl
xchg
adc
fisubs
add
pusha
iret
add
sbb
pop
dec
mov
push
dec
mov
dec
mov
subb
data16
ljmp
inc
pop
xchg
xlat
adc
test
inc
jns
int3
adc
and
jp
xor
dec
jl
jle
jmp
mov
jmp
inc
pop
mov
cwtl
iret
vpaddw
dec
out
inc
jae
xchg
out
push
das
sbb
in
xchg
imul
xlat
push
lods
dec
lahf
cmp
pop
jg
jnp
jecxz
cli
sbb
or
mov
mov
mov
push
loop
rclb
sub
or
inc
adc
cmp
mov
addb
sbb
xor
int3
stos
cmpsl
and
sbb
xchg
scas
icebp
xor
int
xor
mov
mov
and
add
rorb
rorb
xor
adc
dec
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
add
es
mov
cmpb
cwtl
mov
fstps
call
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
mov
pop
mov
add
movzwl
mov
mov
pushl
mov
pop
or
add
mov
add
mov
add
mov
push
call
mov
int3
adc
pop
call
xchg
ror
into
out
cld
test
out
add
mov
pop
sub
jne
movzwl
jmp
loop
xor
cmp
dec
loope
hlt
sbb
fucomi
test
fstpt
mov
and
inc
push
nop
mov
xor
and
or
fucom
jo
pop
mov
imul
inc
add
pusha
out
push
les
mov
lock
rorb
pop
jo
sahf
mov
and
cwtl
mov
push
cmp
push
mov
or
addr16
imul
or
xchg
push
test
xor
cld
or
xorb
loope
je
pop
or
jecxz
out
mov
pop
ja
or
push
data16
lock
mov
sub
incb
pop
mov
pop
lret
or
pop
sbb
jmp
or
mov
xchg
pop
or
popa
rorb
fidivrl
xchg
adc
mov
dec
adc
cmpsl
sbb
mov
mov
mov
fstpl
sar
test
dec
adc
xchg
insl
add
lock
stos
and
push
mov
jmp
lcall
jmp
xor
loope
scas
push
out
stos
lea
lock
add
pop
sub
dec
mov
icebp
out
mov
cs
push
push
loop
adc
push
test
jg
jmp
cltd
jg
icebp
adc
jmp
cltd
add
mov
icebp
das
movsb
jp
or
out
scas
and
jp
loopne
lock
xor
mov
jmp
movsl
imul
mov
jae
mov
das
jmp
movsl
xchg
cmp
pop
imul
inc
push
gs
pop
inc
dec
adc
xchg
ficoms
xor
jns
inc
push
insl
jns
ja
xchg
fildl
das
sbb
adc
in
lcall
mov
outsb
fdivs
push
or
mov
sub
mov
rcrb
sti
out
ljmp
push
pusha
push
test
pmaddwd
popf
push
fnstenv
mov
outsl
cs
push
mov
cs
jl
sarl
or
in
sbb
xlat
addr16
xor
mov
test
test
or
mov
inc
adc
xchg
push
or
push
aaa
es
xorb
cwtl
and
ret
mov
dec
stc
in
push
or
sub
sub
movsb
mov
mov
or
and
jns
xchg
push
cwtl
sbb
fwait
pop
dec
mov
sub
stc
add
mov
sub
imul
lcall
xchg
adc
je
adc
dec
mov
insb
loopne
add
pop
cmpb
lcall
jae
sarl
sbb
or
inc
leave
sbb
jp
inc
movsl
inc
push
inc
insb
jae
cmpsb
rcll
inc
insb
or
in
mov
adc
insb
adcb
popa
movsb
xchg
mov
jnp
inc
sub
inc
insb
mov
mov
adc
aad
aam
test
call
inc
adc
push
insb
nop
push
inc
addl
mov
add
inc
insb
cmpb
addb
xchg
mov
pusha
adcb
pop
adc
adc
dec
add
sarb
pop
lea
xchg
shlb
adcb
testb
mov
or
adc
adc
fisttps
inc
insb
hlt
jl
imul
inc
mov
dec
adc
adc
or
adc
mov
insb
sbbb
mov
adcb
pusha
adcb
movsb
lcall
js
inc
insb
adc
xchg
adc
cmp
xlat
mov
mov
rorl
ljmp
jae
rcr
adc
rclb
inc
outsb
adc
dec
inc
adc
mov
pusha
adcb
xchg
popf
ret
push
mov
loope
pop
movsl
enter
arpl
ret
and
inc
rcr
adc
adc
incb
addb
testb
imul
movsb
bound
xchg
inc
insb
testb
dec
and
inc
insb
cmpb
adc
push
adc
insb
adcb
adc
mov
mov
lcall
std
pop
pop
inc
mov
push
pop
out
cli
in
out
add
shlb
add
sbbb
mov
push
pop
out
xchg
xchg
mov
adc
out
add
shlb
add
cwtl
xchg
lcall
mov
mov
push
or
cs
cmp
mov
push
pop
out
lcall
mov
iret
lock
insb
mov
mov
push
or
cs
cmp
mov
push
pop
out
std
std
lds
arpl
aam
adc
insb
mov
mov
push
or
cs
cmp
pop
inc
mov
push
pop
out
std
std
or
jg
aaa
adc
aaa
jno
adc
mov
xchg
push
roll
inc
insb
adcb
xchg
lcall
mov
mov
push
or
cs
and
sti
or
inc
mov
xor
adc
aaa
xor
xchg
test
jb
in
fstpl
jnp
or
adc
adc
cld
push
push
iret
sbb
push
leave
sti
lea
fstpl
jnp
or
adc
ljmp
mov
adcb
adc
mov
inc
dec
adcb
insb
lea
imul
inc
add
mov
insb
sbbb
test
dec
stos
jecxz
decb
sbbb
mov
repz
insb
sbbb
insb
cmp
insb
adcb
dec
adc
movsl
andb
dec
outsl
mov
insb
adc
pop
push
nop
out
pop
jle
icebp
imul
pop
stos
dec
arpl
adc
push
mov
loop
push
ret
shll
dec
notb
adc
xorb
xor
dec
inc
jo
mov
into
xchg
aam
cs
std
mov
or
shrb
and
out
inc
push
dec
mov
fnsave
insl
sbb
pop
pop
jb
pop
shrb
add
inc
insb
adcb
adcb
adcb
adcb
adcb
adcb
lret
add
incl
rcll
inc
insb
adcb
adcb
adcb
adcb
adcb
fidivrl
insb
adcb
adcb
adcb
loope
ret
xor
add
dec
imul
xor
movl
imul
mov
or
cld
adc
les
popa
sbb
scas
dec
popa
pop
out
cli
ds
xchg
rcl
int
movsb
pop
xchg
sbb
sub
adc
inc
inc
fmul
loopne
mov
inc
mov
sub
dec
cmpsb
push
sti
popf
or
push
dec
mull
ret
pop
in
test
aam
popa
cs
pop
inc
jg
mov
or
sbb
push
fisttps
and
cwtl
into
stos
movsl
push
or
repnz
int
pushf
bound
cmp
mov
jae
adc
dec
out
sub
outsl
mov
scas
mov
mov
mov
adc
sbb
in
or
xchg
jg
lcall
ficoms
push
lods
and
cwtl
data16
inc
jae
sti
outsl
sti
inc
mov
jnp
ja
clc
jle
out
xorl
and
xchg
fidivrs
pop
pop
add
lods
out
push
inc
or
ficompl
daa
stos
test
sub
jmp
and
lret
lret
divl
mov
lds
xchg
fisttpl
add
xchg
cltd
cltd
or
popa
mov
cmp
push
pop
xchg
cmp
cld
mov
sbb
mov
add
mov
sub
adc
xchg
cmpsb
sbb
inc
out
dec
mov
adcl
imul
sbb
xor
rorb
ret
in
cmp
mov
pop
mov
push
aam
fs
push
fmuls
dec
scas
push
fisubl
cltd
and
mov
das
cmp
mov
jne
ja
sar
in
lcall
or
addb
adcb
insb
pushf
xor
xor
stos
pop
mov
pop
or
dec
pop
xchg
sbbb
ret
movsl
push
xor
das
je
sub
dec
dec
pop
mov
mov
push
adc
gs
push
adc
pushf
adc
mov
jl
cwtl
ja
jl
movsl
ret
jo
cmp
jbe
outsb
inc
add
daa
xor
andl
test
pop
daa
push
ds
out
mov
ljmp
dec
ja
bound
xchg
mov
cmp
mov
xchg
sub
mov
add
push
inc
jo
lock
pop
dec
jnp
scas
fsubl
mov
dec
pop
cli
mov
xchg
out
cmp
or
push
cmp
xchg
test
or
sbb
xchg
adc
les
mov
jmp
add
add
or
add
add
dec
add
dec
add
xor
adc
dec
add
in
adc
cmp
adc
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
adc
hlt
jmp
add
in
adc
movsl
in
adc
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
in
adc
add
add
fsubr
adc
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
rcl
xchg
and
daa
add
push
jno
loop
decb
sub
mov
jecxz
adc
xor
imul
test
test
in
xor
push
sbb
dec
cmpsb
cmpb
cs
repz
dec
cmpsl
pop
stos
test
mov
mov
pop
repz
stc
cmc
or
dec
shrb
sbb
pop
jo
jnp
shlb
and
push
fildll
pushf
mov
hlt
pop
faddl
hlt
sub
push
cld
rcr
dec
mov
xchg
or
mov
insb
mov
adc
mov
ret
shll
inc
out
xorl
fldt
adc
jp
fildl
cmp
lea
mov
xchg
nop
xor
dec
dec
fldcw
push
es
repnz
mov
mov
mov
inc
notb
outsb
addb
jae
pop
roll
mov
xlat
pop
sbb
arpl
into
insb
cs
cmp
sub
fsubs
cmp
ret
fisttps
fidivl
lea
xchg
lods
mov
mov
out
pop
popa
sbb
mov
pop
xchg
and
cltd
fwait
dec
push
into
iret
clc
jo
adc
lret
loop
subb
dec
inc
add
xchg
in
inc
jnp
rolb
pop
push
mov
das
adc
test
in
add
jbe
mov
xor
adc
add
push
sbb
pop
xchg
inc
int3
mov
jae
xor
or
inc
sti
nop
out
xor
add
int3
cs
jg
test
cmp
jae
jnp
and
and
popa
inc
or
sbb
jbe
or
adc
or
sub
dec
jo
cltd
sbb
loope
pop
pusha
xchg
xor
idivl
add
push
adc
and
adc
xchg
ret
jno
je
int3
jnp
mov
ret
jl
xorb
out
mov
xor
push
jns
adc
push
push
loopne
add
fmull
dec
and
das
pop
jbe
loop
mov
adc
pop
inc
dec
sarb
jno
mov
dec
aaa
pop
sbb
fsubrl
in
jmp
loope
test
sbb
daa
aaa
mov
mov
test
enter
out
add
in
xlat
mov
push
or
call
imul
call
sbb
pop
jmp
popa
scas
test
pop
mov
pop
outsl
cmp
xor
jbe
mov
add
dec
add
movsb
cmc
cltd
xor
cmpsl
add
or
jns
lret
mov
xor
mov
push
mov
movsb
dec
cltd
js
sub
popf
popl
add
je
stc
pop
sub
sbb
sbb
xor
inc
xchg
imulb
int
adc
mov
mov
lds
addb
shl
mov
push
repnz
mov
jl
add
sar
outsb
lret
cmp
stos
fwait
cmp
adc
dec
pop
inc
js
jl
sub
cmc
sub
xor
add
lret
js,pt
dec
dec
dec
in
aaa
sub
lcall
cmp
mov
jle
jge
fdivrs
xchg
lds
pop
and
mov
or
imul
jns
popf
xor
mov
mov
sahf
clc
push
ds
adc
scas
mov
in
add
loopne
jne
mov
int3
push
daa
cmpsb
test
jle
adc
sub
gs
sub
mov
scas
test
movsb
xor
inc
push
out
adc
ljmp
notb
pop
jbe
pop
imul
xchg
jle
fwait
xor
push
imul
out
shll
scas
out
push
mov
out
pop
inc
bound
aam
cmp
addl
jecxz
adc
mov
inc
sbb
addb
or
test
mov
or
mov
jle
fnstsw
nop
or
aaa
cmp
scas
sub
add
arpl
push
lds
jne
mov
jp
sbb
aas
jae
pop
lsl
sbb
xor
movl
adc
psrlq
ds
sub
dec
mov
dec
dec
call
add
arpl
lds
mov
ret
sahf
xor
test
adc
sub
push
mov
imul
scas
mov
add
sub
mov
rol
fs
les
test
int3
ret
push
test
pop
jecxz
aam
mov
sahf
push
push
test
out
bnd
or
add
js
cmpsb
dec
xorl
sub
add
cltd
pop
xor
add
and
sbb
cmc
and
and
outsb
insb
and
xlat
das
popa
mov
ss
inc
dec
ljmp
and
or
and
call
ljmp
jae
test
std
push
mov
fcomp
mov
jle
push
jg
jnp
iret
in
cmc
jmp
pop
fcomip
inc
cmp
ss
pop
divb
in
xchg
fmul
xchg
outsb
cmpsb
movsl
fdivrl
outsb
sub
scas
sahf
push
cwtl
xchg
add
and
sub
outsb
dec
gs
sahf
jno
mov
jl
push
ljmp
sahf
into
into
jno
and
das
insb
sub
mov
fdivs
test
inc
cld
xchg
cmc
in
add
push
and
and
mov
cs
shrb
jae
push
cmp
mov
add
jae
into
adc
xchg
divl
aad
sti
mov
sub
mov
out
neg
or
mov
in
mov
fildl
loop
mov
or
mov
mov
push
arpl
addr16
and
call
push
xchg
jg
and
es
fisttpll
sahf
jle
xchg
mov
imul
dec
mov
sbb
push
add
lcall
sahf
js
xchg
nop
xchg
mov
mov
ja
add
enter
std
mov
int3
push
add
jecxz
loope
cmp
filds
test
pop
jl
add
add
cmc
cmp
incl
loop
int
mov
jl
jp
adc
cmpsl
xor
mov
jnp
in
pop
sub
and
sub
test
adc
dec
stc
cmp
sub
fildll
mov
cmp
mov
cmpb
push
mov
adc
or
mov
xchg
in
cmpb
or
dec
ja
add
sarb
sbb
and
shll
xor
push
jo
inc
outsl
mov
pushf
adc
push
movzwl
or
or
xor
scas
xchg
mov
mov
mov
jl
cltd
sbb
fwait
push
in
pushf
andb
mov
lret
mov
xor
cltd
aaa
or
xchg
cmp
mov
or
push
std
adc
pop
push
imul
ret
data16
loopne
and
test
jmp
stc
mov
in
and
cmp
dec
xor
ljmp
pop
into
mov
xorb
push
int
fwait
sbb
ja
adc
dec
mov
sbb
xchg
leave
cwtl
xchg
push
cmp
xchg
cmpsb
jg
aas
dec
lahf
jge
adc
das
and
repz
dec
sub
xor
cmp
xor
scas
jns
rorl
out
jmp
jge
pop
psadbw
lds
jae
mov
mov
push
cmp
jnp
xchg
pop
sbb
int3
scas
inc
rcl
xor
xchg
dec
and
add
or
out
xchg
shr
fs
sbb
and
sahf
aam
and
shl
gs
add
add
insb
lods
out
sbb
push
mov
arpl
std
lret
andl
sahf
lcall
mov
jecxz
out
arpl
jnp
cwtl
stc
imul
sub
or
xor
sbb
enter
aaa
fstps
loope
adc
cmp
cmp
dec
rcrl
xor
push
dec
dec
push
or
ljmp
sub
ja
push
dec
outsl
stc
jp
inc
mov
aad
sti
inc
maskmovq
divl
xchg
mov
inc
cmp
insb
or
pop
push
in
dec
lcall
inc
repnz
inc
sti
xor
lcall
pop
scas
mov
loope
scas
lods
ja
jae
sarb
and
loopne
insl
sbb
jg
pop
das
jge
scas
sub
cmp
cmp
mov
push
mov
jo
cmovg
cltd
out
add
mov
cld
jmp
daa
repnz
cmpsl
and
xchg
push
mov
mov
xchg
push
add
lahf
test
mov
rcll
jns
xchg
es
dec
sub
add
lock
stos
aad
mov
std
sub
imul
xor
mov
fwait
mov
push
mov
xor
ds
leave
mov
rclb
out
rorb
fwait
jg
repnz
mov
jbe
js
xchg
push
lcall
lret
lods
in
push
repnz
repnz
icebp
mov
xchg
and
cmp
mov
dec
push
cmpsb
je
mov
sbb
enter
push
xchg
mov
jne
outsl
lds
sbb
mov
cwtl
push
clc
ret
mov
jbe
inc
outsb
and
jnp
cmpsb
cli
jp
jge
aaa
lea
sbb
out
inc
stc
inc
sbb
scas
loop
adc
sub
aaa
popf
inc
xlat
or
push
pop
inc
out
js
ret
rol
cmp
shll
push
shll
sahf
cmp
mov
rorl
pop
mov
mov
xor
cltd
inc
xor
cs
int
adc
in
push
mov
pop
push
sub
xchg
aad
dec
cwtl
dec
jp
sbb
pop
push
lcall
and
xor
or
call
inc
xchg
ss
shll
cmpl
loopne
sbb
push
or
jmp
mov
xlat
cs
subb
adc
repnz
jle
xchg
fisubl
pusha
enter
fbld
push
inc
std
mov
or
jne
rcll
dec
movsb
mov
mov
inc
xchg
xchg
jno
sbb
mov
add
xor
xchg
sub
test
sbb
or
dec
testl
inc
mov
or
jg
add
and
dec
inc
ret
xchg
shlb
jae
xchg
pop
xchg
test
cli
cwtl
pop
jns
pop
repnz
stos
je
lahf
sarb
imul
in
imul
sub
cmp
icebp
pop
dec
test
pop
jp
mov
loop
xchg
cmp
add
jo
mov
inc
cmpsb
adc
cltd
int
and
cs
out
cmc
shlb
stc
push
rcl
loope
out
and
jle
sub
aam
ss
mov
movsb
frstor
lock
aaa
shrb
enter
dec
notb
cmpsb
aam
fcmovnbe
push
lods
sub
leave
inc
mov
cltd
ljmp
mov
pusha
push
cmpl
xchg
je
ficoms
pop
loop
inc
mov
push
mov
mov
mov
xchg
xor
ret
or
jmp
sbb
or
push
fstl
rorl
sub
jmp
out
mov
jbe
aam
shr
dec
arpl
fwait
movsb
jno
fwait
adc
lret
mov
in
rcll
imul
or
dec
dec
cs
mov
ret
mov
mov
sbbb
rolb
ret
js
push
ds
cli
aas
or
cmpsl
sub
push
add
jne
cmc
lods
cmp
jle
test
stc
xchg
pop
dec
and
mov
ss
xchg
into
lods
xor
popf
mov
xor
and
insb
sahf
cmp
lahf
nop
push
xchg
push
loope
fs
pop
push
das
mov
das
pop
mov
jnp
add
lea
push
xor
ja
adc
call
add
enter
jns
mov
xchg
mov
xor
pop
test
pop
sahf
xor
fwait
inc
xor
mov
xchg
mov
dec
push
sbb
pop
jg
lahf
mov
sbb
sbb
xchg
mov
shl
inc
jnp
bound
rolb
pop
out
adc
cmc
mov
in
es
mov
mov
add
dec
cmpsb
add
xor
loope
push
jmp
pop
sbb
jecxz
adc
iret
xchg
pop
scas
xchg
dec
js
sahf
cmp
sub
inc
aas
add
scas
cmp
mov
adc
cs
lds
negb
push
stc
push
xorl
push
mov
loope
leave
fs
pop
xor
iret
in
movsb
roll
je
dec
in
mov
fnstenv
or
shl
inc
lds
inc
ret
mov
mov
sub
xchg
shll
int3
add
lcall
dec
in
mov
leave
xchg
bound
or
insl
lcall
es
insb
cmp
jl
mov
sbb
jge
xrelease
inc
cmp
sbb
jmp
outsl
mov
adc
icebp
push
mov
pop
or
ret
push
mov
push
or
enter
ficomps
push
mov
in
ret
mov
clc
xlat
dec
fwait
sub
setp
jae
add
and
mov
enter
or
xor
jne
jg
adc
xchg
mov
pop
gs
dec
clc
jbe
adc
and
ret
movups
pop
pop
cmp
pusha
mov
mov
push
add
mov
clc
mov
pop
push
pop
sub
xchg
fucomip
arpl
add
adc
es
bnd
xchg
jae
out
fidivs
cmc
cli
and
mov
repz
std
sbb
bnd
xor
add
stos
xchg
out
jl
push
nop
popf
js
cwtl
push
icebp
or
sbb
xchg
aas
gs
cmpsb
cmp
std
pop
outsl
lcall
icebp
dec
into
in
mov
dec
jb
push
sub
sbb
push
subb
mov
xchg
in
adc
in
scas
mov
sbb
xchg
push
xor
push
cmp
mov
shr
jle
dec
pop
movsb
mov
enter
jb
mov
inc
std
icebp
dec
cmpsl
adc
roll
sub
xchg
dec
add
in
add
and
out
sub
fnstenv
adc
pushf
inc
cmp
pop
sub
mov
push
idiv
outsb
shl
jecxz
stos
in
and
mov
outsb
jbe
insb
and
sbb
repnz
in
xor
stos
xor
inc
enter
lahf
mov
std
cli
mov
mov
pop
pshufw
int
movsb
dec
pop
inc
mov
push
sti
add
push
outsl
repz
xchg
aaa
pushl
sarb
or
inc
jbe
ret
sub
notl
jb
arpl
pushf
cmpl
jmp
cmp
das
shll
gs
stos
pop
dec
sbb
jne
inc
andl
std
lods
inc
mov
sub
repz
lea
cld
pusha
xor
cmp
or
rcr
pop
pop
and
or
pop
sub
push
jmp
iret
xor
lcall
cmpb
jno
lcall
inc
push
sub
jbe
fs
xor
sbb
vpsubusw
aaa
sub
cmp
add
jg
xchg
pop
sbb
mov
stos
fdecstp
mov
out
add
or
add
adc
sub
mov
sbb
cmp
inc
popf
outsl
cmp
cmp
push
mov
mov
insl
ja
push
xchg
mov
xlat
sub
cmp
jmp
xchg
test
ja
or
iret
aad
add
inc
jmp
mov
in
jmp
sbb
pop
jo
adc
adc
in
xchg
jl
xor
pop
insb
nop
sbb
xchg
sti
push
pop
jne
mov
cs
sar
ficomps
outsb
sbb
cld
mov
outsl
mov
pop
dec
jns
das
movb
mov
nop
std
insb
jle
mov
jmp
mov
outsl
ss
or
sub
rcr
es
je
daa
pop
scas
cli
mov
data16
jae
cmp
adc
sbbb
jbe
pop
xchg
cmpsl
aam
dec
xor
inc
test
cwtl
pop
inc
aaa
xor
mov
cmp
int
xchg
in
sar
sbb
jmp
mov
imul
test
adc
loope
cmpsb
icebp
div
jnp
in
enter
loop
and
jo
pushf
mov
imul
out
inc
xor
movsl
out
pop
in
leave
mov
out
movsb
rol
mov
pop
fsub
mov
sbb
fwait
sub
jl
add
inc
mov
roll
sbb
subb
dec
and
pop
lods
and
ss
cwtl
mov
sbb
push
outsb
fwait
lds
push
cltd
popa
scas
fldl
in
adc
aad
xor
cmc
je
fildl
push
cmp
adc
movsb
out
gs
fwait
repz
les
stos
aad
and
jnp
jle
out
popa
ja
sub
cmc
out
mov
pushf
daa
xor
loop
fs
xor
xor
fistps
pop
aad
and
sbb
inc
pop
and
cltd
jne
jns
xorl
sbb
or
adc
sub
mov
sar
gs
push
pop
push
mov
cmp
insl
jbe
jl
add
rorb
or
jle
pop
cmc
or
push
shlb
jmp
out
stc
add
mov
xor
push
arpl
cld
xor
fstpl
bound
sbb
sbb
jns
push
loopne
fnstsw
sub
push
out
sub
push
mov
cmp
cltd
in
out
adc
adc
testl
add
js
adc
cli
icebp
frstor
pop
jns
mov
add
pop
hlt
sbb
outsb
es
call
stos
xchg
fadd
mov
gs
cmp
fbstp
inc
pop
js
outsl
mov
mov
int
jg
lret
ja
std
cmc
mov
jg
in
and
xorb
fwait
testl
or
cli
or
push
cltd
cmpsb
adc
push
addr16
cmpsb
imul
jp
int
xchg
lock
jns
mov
shlb
inc
sahf
fcmovbe
out
push
psllw
loope
ljmp
cmp
movsl
aam
jge
idiv
std
das
xor
test
push
xor
icebp
loop
pop
int3
adc
sti
jl
dec
je
push
push
shll
add
sub
and
flds
xor
sub
int3
scas
fidivl
push
or
pop
sbb
dec
jae
mov
das
popa
or
pop
mov
sub
jno
scas
rcrl
mov
fsubs
sbb
pop
ljmp
test
or
lahf
sub
mov
mov
sahf
stos
cmpsl
insb
cmp
mov
sub
push
imul
addl
psubusw
fstp
lds
or
inc
scas
imul
cwtl
aam
jecxz
adc
add
xor
int3
xchg
push
inc
cmovb
data16
add
pusha
xchg
out
mov
clc
cmp
xlat
cmp
sbb
xchg
lea
mov
aas
int
fwait
mov
insl
inc
xor
std
ljmp
addb
repnz
popa
mov
xor
mov
mov
mov
outsl
jg
xchg
call
dec
dec
les
call
jp
xor
xchg
xchg
dec
fsubrp
push
inc
ds
mov
ss
fs
push
xchg
mov
inc
or
push
jl
xchg
test
sub
shrl
xlat
sbb
stos
pop
adc
xor
cmp
jl
and
adc
mov
imul
pusha
mov
sbb
push
and
cmp
inc
fwait
jnp
lcall
lods
mov
and
shr
lea
fs
ret
test
imul
mov
xchg
inc
lock
lds
inc
shl
movsb
jnp
insl
fisubl
out
xor
cli
cmp
fisubl
sbb
cmpb
hlt
mov
push
outsb
pop
sub
mov
adc
adc
stc
dec
mov
shl
mov
jl
xchg
es
roll
mov
cmpb
mov
imul
dec
pop
cmp
jle
add
lock
xchg
in
bound
shll
sub
mov
xchg
cmp
ficompl
and
insb
fwait
push
mov
sahf
sub
push
pop
jo
push
push
dec
push
popa
fwait
or
jo
imul
scas
dec
out
cmpsb
clc
frstor
mov
sbb
push
jo
les
xor
lret
push
lea
stos
xor
mov
fsubrl
dec
xchg
jns
adc
dec
adc
std
test
jg
pop
pusha
punpckhwd
add
jle
rcrb
adc
test
lock
cmp
mov
and
fnstsw
push
sub
xchg
jge
lahf
lea
ret
sbb
cltd
and
jnp
inc
clc
popa
and
mov
lcall
jp
rcll
or
imul
push
mov
mov
repz
dec
pop
shll
test
mov
data16
arpl
push
mov
sub
outsb
retw
in
xchg
jo
lea
scas
jp
sarl
jns
and
repnz
sub
inc
data16
mov
cwtl
pushf
cmp
aad
jbe
jecxz
cmpsb
or
loope
cs
inc
arpl
daa
pusha
repz
or
adc
test
cltd
mov
movsl
sahf
xchg
aas
sbb
ret
sti
cmp
shll
ja
add
pop
sub
imul
xchg
insl
jge
inc
jmp
cld
adc
int3
inc
bound
test
xor
mov
pop
dec
inc
sbb
std
les
jns
cmp
aas
pop
xchg
xchg
xor
xor
cltd
xchg
rorb
jmp
jb
jbe
lahf
push
sbbl
jbe
and
inc
pop
mov
fisubl
lret
pop
out
adc
ja
icebp
sahf
outsb
push
cmp
add
add
je
outsl
mov
orb
jecxz
push
mov
mov
cmp
xchg
pop
aad
sub
pop
push
ljmp
jp
sbbl
arpl
mov
movsb
jmp
inc
xlat
push
sahf
imul
inc
int3
sti
dec
fsubp
roll
add
sbb
lods
lcall
bound
xor
cli
cltd
pop
and
mov
inc
nop
jne
push
fisubrl
mov
shlb
jnp
inc
mov
inc
fisubrl
pop
inc
cmpsb
nop
nopl
cmp
push
shrl
add
ljmp
jle
sub
sarb
xchg
lea
cmp
xor
repnz
cmp
mov
mov
lret
fiadds
lcall
and
push
push
loope
push
xor
inc
or
jno
cltd
add
adc
and
cwtl
clc
mov
iret
jne
sbb
fmull
outsl
incb
stos
stos
imul
jmp
jmp
enter
and
sub
loope
inc
inc
aad
int
adc
out
shrl
frstor
jb
test
iret
out
cmp
ds
mov
xchg
mov
add
lahf
or
adc
ja
jae
ja
insb
hlt
aaa
sti
imul
mov
rcll
mov
cmp
pop
das
jmp
mov
add
ficompl
lahf
sbb
pop
movsl
loop
std
add
or
aam
js
jle
sbb
sub
call
lcall
cmp
pusha
int3
insb
sarl
hlt
xchg
adc
xorb
inc
and
xor
sbb
pop
jnp
jp
dec
in
add
jg
test
inc
test
xchg
out
and
cltd
dec
aam
stc
sub
out
rorb
pop
mov
clc
out
push
popl
subw
and
or
into
loop
adc
pusha
push
in
dec
cmc
push
subb
and
out
insb
jnp
sbb
xor
ljmp
jns
aad
or
lahf
mul
pop
jecxz
push
lcall
outsb
out
popa
mov
filds
dec
movsb
sbb
ja
adcl
xchg
dec
and
push
int3
xchg
icebp
sbb
mov
inc
sbb
icebp
movsl
ss
jnp
in
adc
in
push
or
lods
out
movsb
xor
clc
push
jnp
adc
xlat
sbb
mov
loopne
pop
stos
out
stc
call
fdivrs
add
sbb
fcmovu
jae
addr16
dec
pop
jne
fbstp
movsl
mov
adc
inc
je
pushf
imul
stos
sbb
or
iret
sub
pop
insb
inc
xor
jb
jns
cwtl
rcrl
sub
push
sbb
push
inc
lods
outsb
dec
add
sub
iret
mov
mov
push
je
cmp
shrl
and
mov
xor
sub
mov
sbb
xchg
mov
sbb
cmpsb
fstl
subl
and
test
scas
xor
ljmp
les
in
aas
fidivl
bound
pusha
ja
ret
lea
inc
pop
int
xchg
andb
mov
push
pop
mov
xor
jg
mov
mov
out
ljmp
fisubrl
xchg
arpl
std
sbbb
in
xor
jne
push
or
gs
cmc
int
rcll
cmp
jmp
sub
mov
fsts
call
bound
and
add
jae
ds
sysret
mov
mov
jbe
ss
mov
bound
jns
and
inc
lods
mov
pop
adc
scas
xchg
xlat
xor
sbb
pop
sbb
sbb
xor
ljmp
inc
push
xchg
icebp
inc
sbb
cmpsl
jmp
dec
dec
rcr
mov
negl
dec
xchg
movsb
test
inc
cli
dec
mov
inc
icebp
pop
lret
adc
adc
inc
jmp
adc
mov
aad
xor
cmc
jle
insl
sub
movl
cmp
aas
mov
xor
push
jg
jo
fisttpll
inc
hlt
fmull
xor
imul
cmp
jb
ljmp
stos
loope
cwtl
jns
or
repnz
mov
repnz
gs
movsl
jmp
xorb
aad
jo
loopne
xchg
push
ror
xor
jbe
mov
in
outsb
jle
popf
inc
lods
sarb
mov
mov
xlat
test
lods
sub
lds
call
imul
push
outsl
jge
mov
xchg
je
add
xor
adcb
stos
and
test
mov
sub
cmp
xor
lahf
imul
sahf
and
dec
rsm
mov
mov
adc
orl
mov
lea
aaa
arpl
mov
mov
jns
or
push
in
sbb
jmp
xchg
inc
add
pop
and
in
mov
iret
mov
mov
clc
std
sub
into
or
push
xor
mov
fwait
movsl
jns
nop
pop
or
dec
enter
xor
mov
fsubrp
xchg
jnp
ja
xchg
inc
or
jge
xor
xor
xchg
push
pusha
cmp
cmp
fcomps
aas
mov
pop
jge
loop
pop
sbb
cmpsl
adc
inc
pop
in
adcb
pop
inc
xchg
mov
test
sahf
outsb
jae
mov
aas
mov
inc
popf
cmpsl
std
mov
out
mov
push
or
sbb
popa
inc
xor
or
movsl
outsb
flds
xor
bndldx
sub
mov
repnz
push
mov
lock
ret
add
fwait
and
in
sub
add
lea
xchg
lods
adc
jno
mov
cmpsb
fnstcw
adc
les
xchg
xchg
push
cmc
mov
fsub
sbb
sbb
adc
mov
add
subb
push
and
sbb
push
cmp
andl
test
aaa
loopne
icebp
xchg
scas
push
or
pop
das
repz
or
fwait
int
xor
cmc
push
fstl
adc
mov
int3
enter
dec
jbe
ja
xchg
outsb
or
shlb
in
mov
sub
mov
aam
jmp
xchg
out
outsl
push
lret
cmp
outsb
sub
fldl2t
outsb
jns
popa
mov
pop
xorb
cmp
lret
jge
sub
or
mov
shr
mov
xor
outsb
insl
out
push
xor
jo
jg
ret
pop
xchg
rolb
mov
loopne
mov
fwait
add
or
jb
adc
popf
js
data16
or
xchg
mov
xchg
in
dec
and
test
pop
mov
adc
jbe
mov
loopne
ds
add
mov
cmp
adcb
popa
push
fidivl
xor
dec
fwait
aaa
or
xabort
dec
dec
jmp
inc
push
xor
adc
dec
ja
rorb
sbb
ja
add
lret
int
std
mov
sahf
outsb
psadbw
mov
test
push
in
stc
test
cs
or
ffreep
rorb
out
scas
dec
fsts
sub
push
jl
jne
rep
cli
dec
and
mov
add
fidivl
sarb
and
sbb
testb
or
popa
push
enter
sub
pop
lods
add
xchg
or
push
cmc
sub
test
or
or
push
mov
push
leave
xchg
cmpsl
adc
fninit
sti
xor
mov
push
push
xchg
jbe
adc
lahf
or
test
sbb
or
jnp
testb
adc
jmp
push
cmc
cli
lret
rcrl
add
leave
xchg
sbb
sahf
mov
push
pusha
inc
xor
cmp
popf
mov
sub
setns
ficoms
adc
push
push
shr
aaa
inc
shlb
dec
out
jno
lret
mov
jb
mov
popw
jmp
ds
or
in
lcall
jge
and
mov
in
or
icebp
pop
out
mov
fildll
add
push
or
in
jge
pop
in
es
adc
jne
xor
popa
stos
or
movsl
sub
lahf
adc
es
sbb
push
es
xchg
dec
dec
out
enter
jge
xorl
into
sub
insl
xchg
pop
dec
and
outsl
jl
loope
xchg
xor
cmp
repz
adc
jle
mov
add
sarb
jno
in
sbb
mov
cld
in
int3
jg
loopne
rcrb
jmp
outsl
sub
out
add
pushf
test
daa
dec
push
sub
sbb
pop
cmp
cmp
cli
cltd
leave
pop
mov
or
jbe
add
clc
mov
ret
fsubl
mov
lahf
daa
sub
mov
fcmovbe
sbb
pop
test
and
add
push
jecxz
mov
leave
pop
xor
call
ja
jns
cmpsb
jg
mov
sbb
nop
repz
adc
mov
outsb
mov
popa
xchg
out
xor
and
jnp
movsb
inc
clc
sbb
loop
xchg
int
dec
adc
shrl
mov
adc
data16
xchg
cmp
mov
dec
push
int3
inc
inc
inc
jns
inc
inc
outsb
popa
outsb
rorl
xor
loopne
notl
pop
jle
pop
xchg
fiaddl
mov
jl
jb
out
jg
sub
mov
cmp
in
jmp
sti
arpl
repz
cs
sbb
sub
push
mov
sbb
outsb
mov
loopne
xchg
pop
sbb
shrl
xor
mov
or
insb
fldenv
mov
aaa
imul
and
and
xchg
imul
inc
mov
mov
mov
dec
subl
pop
and
mov
jle
out
pop
mov
pop
out
cmp
adc
push
imul
mov
dec
andb
xor
sub
int3
mov
bound
inc
push
sbb
fldl
sahf
mov
pushf
dec
fildll
mov
cmp
add
mov
mov
jge
movsb
adc
adc
mov
sub
sbb
movsl
push
lret
dec
sbb
jmp
mov
jo
out
orl
fwait
in
je
dec
shl
cmpsl
pusha
js
sarb
mov
inc
pushf
pusha
fstpt
adc
rclb
sub
pusha
in
mov
sbb
scas
aas
test
push
or
xchg
xlat
or
cs
adc
loope
xchg
pop
mov
mov
cltd
dec
loope
arpl
jle
lea
pop
mov
xchg
out
push
enter
mov
jns
popf
aam
popa
jnp
pop
add
cmp
movsl
adc
mov
xor
jge
je
pop
lcall
ret
aam
fcomps
sbb
push
int
jbe
jne
repz
sub
gs
xchg
int
fistps
test
pop
outsl
enter
pop
jl
mov
xchg
aas
dec
pop
jle
ss
or
clts
repnz
push
sub
mov
dec
push
xchg
sbb
or
mov
orb
dec
pop
int3
addr16
das
ret
jno
dec
inc
bound
lcall
xchg
mov
sub
mov
jle
add
out
clc
pop
rorb
or
push
push
lock
xor
cmpsb
xor
iret
movsb
stos
pop
cmp
daa
dec
mov
hlt
pop
and
xchg
and
lcall
repz
fldln2
rcrb
movsb
outsl
adc
jo
pusha
pmaxsw
int
push
cs
mov
or
sbb
mov
test
cmpb
aas
pop
cmp
sub
imul
dec
xchg
adc
sub
pop
ss
mov
mov
ret
push
pop
outsl
fsubl
lods
and
mov
mov
push
pop
or
cld
mov
std
andb
das
jmp
and
mov
adc
cmp
dec
push
lahf
xchg
or
push
push
xchg
or
and
aas
cmc
cli
dec
sub
popl
insl
test
lcall
shlb
mov
rep
push
js
pushf
mov
fwait
les
xor
push
ja
out
inc
jle
sub
jecxz
add
mov
aad
jmp
xchg
mov
jle
sbb
xchg
cmp
std
jne
dec
iret
xlat
mov
xor
push
push
in
mov
push
xor
rclb
and
cltd
aas
sbb
pop
fstps
or
out
push
jmp
mov
or
xor
out
arpl
pop
sub
cmp
jg
imul
push
stc
enter
mov
dec
xchg
pop
fs
sub
jno
ror
mov
cmc
mov
xchg
pop
int
cmp
jae
dec
and
jns
ret
pop
xchg
sbb
adc
std
test
pop
jo
outsl
ds
jo
repnz
aam
push
stos
xchg
popa
sti
fstps
push
add
mov
add
cmc
lret
clc
out
out
pop
ret
push
mov
in
xor
icebp
push
adc
int
popf
mov
xor
pop
ret
inc
push
aaa
dec
fmull
dec
xchg
lods
stc
clc
push
std
addr16
add
insl
mov
mov
xsha1
cmpsb
lret
xchg
cmp
sub
aaa
pusha
ja
into
add
scas
xchg
mov
lods
xchg
jb
adcb
je
shll
jecxz
popa
mov
int3
add
sbb
mov
sbb
pop
adc
jg
roll
mov
push
sbb
push
imul
pop
adc
mov
test
dec
mov
and
xor
xchg
pop
inc
imul
and
mov
mov
xchg
xchg
mov
xchg
mov
repz
call
cmpsb
xlat
out
pop
in
hlt
sub
mov
cltd
int3
adc
mov
or
out
les
loop
mov
xor
inc
test
push
aam
sub
jbe
into
sub
fndisi(8087
scas
push
mov
mov
cmp
stos
out
jae
mov
outsb
clc
aaa
cmp
repnz
int3
dec
leave
pop
leave
cwtl
inc
xor
cmp
cltd
data16
xor
jae
call
dec
mov
mov
jge
xchg
mov
stc
aad
pusha
mov
xchg
push
pop
mov
stos
xchg
xchg
jae
popf
cmp
rcll
fisubs
jg
imul
imul
je
nop
imulb
inc
in
and
cld
loopne
jle
lods
loop
or
sbb
stc
in
pop
xor
sbb
mov
fmuls
fmuls
xchg
test
aas
cwtl
sete
push
jb
stc
mov
cmp
aas
pusha
cwtl
push
mov
xchg
mov
cltd
loopne
int3
xchg
xor
scas
pop
adc
in
ds
mov
scas
outsl
sub
call
sub
sbb
lcall
arpl
arpl
push
shlb
pop
imul
mov
jne
daa
rol
jo
adc
popf
or
xchg
push
cwtl
ret
or
rorl
pop
cmp
adcb
ss
adc
cltd
and
or
mov
jns
mov
lock
adc
mov
stos
push
iret
mov
ret
mov
pusha
rcr
js
and
test
imul
mov
lock
inc
push
fnstenv
add
popa
fcmovnb
dec
xorl
inc
inc
std
fistl
jmp
sbb
sub
cmpsl
bound
or
jp
pop
jl
mov
push
pop
fldenv
push
push
inc
sbb
div
cmc
aaa
or
mov
pop
outsl
test
es
test
jb
inc
pop
xchg
jb
and
push
sub
cmp
stos
mov
lods
xchg
popa
dec
pop
scas
popf
insl
mov
and
mov
aaa
addl
mov
nop
jmp
push
push
dec
fs
arpl
out
cmp
adc
jae
or
pop
rol
add
lret
lds
jo
mov
mov
sub
arpl
scas
lcall
jnp
push
lret
pop
fdivl
xor
push
dec
scas
mov
cld
and
cmp
push
pop
int3
cltd
stos
jne
in
xchg
ss
roll
and
popf
ds
jmp
sbb
jae
push
inc
add
fsubs
test
mov
repnz
scas
push
insb
ret
scas
or
cmp
cmp
lret
add
in
out
fistps
cmpb
add
jno
pop
repnz
insb
add
xchg
sbb
stos
xlat
mov
mov
push
fidivrl
sub
notb
push
ffree
dec
push
shl
stc
loopne
sbb
pop
or
jae
ret
pop
icebp
and
xor
cmc
inc
sbb
mov
int3
popf
movsl
js
mov
out
xor
cmp
movsl
mov
dec
or
dec
adc
fcom
test
xchg
scas
xchg
test
xchg
or
or
sub
int
xchg
lea
jg
popa
jne
js
mov
daa
dec
fldl
repnz
mov
lahf
mov
cmp
lods
setle
xchg
mov
pop
xchg
mov
in
aad
sbb
lcall
add
push
xchg
add
cmp
dec
les
mov
dec
dec
das
mov
insb
mov
cmp
je
push
push
test
loopne
popf
push
sbb
rcrb
or
add
jle
icebp
stos
cmpsb
addr16
aas
andl
xchg
fsubl
je
dec
dec
cmpsl
pop
stos
sub
dec
repz
into
enter
pop
and
ljmp
jae
fistpl
mov
lret
testl
pusha
outsb
inc
inc
aas
xchg
dec
and
xchg
add
insb
push
jg
adc
dec
adc
sbb
add
lea
cwtl
gs
repnz
jp
ret
test
fisttps
scas
push
cwtl
hlt
js
cmpsl
test
add
xorb
push
sub
add
jle
cwtl
ret
mov
add
sub
mov
out
cmp
lods
mov
mov
lcall
cmpsb
fpatan
sub
and
xchg
scas
fwait
call
jbe
inc
idivb
dec
push
jne
inc
mov
xor
and
stc
gs
sti
xchg
stos
jge
fs
das
insb
push
call
mov
jns
xorb
fsubl
dec
mov
outsb
arpl
adc
popa
in
into
mov
inc
mov
in
cmp
fimull
xlat
lds
int
jne
mov
pop
insb
jp
mov
daa
loope
mov
fdivl
leave
mov
jg
cmc
cli
add
call
pushf
stc
pop
xchg
cmp
jo
pop
adc
aas
add
lret
and
jae
pop
sahf
and
adc
xor
and
incl
call
insl
push
popf
add
sub
out
rolb
pop
xor
and
adc
xorl
es
stos
pop
outsb
xchg
imul
iret
and
pop
in
jnp
xor
lret
repz
pop
jge
mov
pop
push
push
cli
mov
mov
popa
xor
decl
mov
loopne
adc
flds
mov
ss
lret
dec
xor
lcall
ljmp
icebp
pop
aaa
std
add
cmp
arpl
loope
ds
xlat
lcall
cmp
in
insl
adc
mov
inc
push
xchg
sbb
test
sub
scas
aam
lcall
out
sbb
push
inc
call
and
ja
clc
orl
adc
inc
dec
out
outsb
ds
inc
fcmove
dec
and
mov
xor
mov
inc
mov
dec
pop
mov
loopne
in
mov
pop
dec
push
push
outsl
call
or
or
out
mov
add
cmp
mov
fwait
mov
in
mov
in
out
jbe
xor
sub
jp
scas
jg
push
inc
jecxz
ss
inc
jb
popa
data16
xchg
push
icebp
cmp
inc
sbb
mov
nop
sub
dec
add
pop
sub
enter
mov
xchg
cmpsl
pop
jne
push
test
jae
daa
cld
jmp
scas
sti
and
add
inc
loop
jg
jns
test
orb
push
movsl
mov
movsb
jae
insb
insb
out
scas
mov
imul
gs
fidivrs
call
pop
jns
popa
sub
test
test
fs
pop
dec
cmc
clc
inc
mov
dec
xor
pop
in
les
and
cmp
fisubrs
xchg
pop
jb
mov
stos
ficoml
das
mov
xor
mov
cmp
jecxz
cs
lcall
add
rcll
pop
cvttps2pi
push
push
mov
xor
subl
sub
mov
lcall
cs
or
or
mov
testl
pop
cmp
into
flds
pop
sahf
ss
jp
cltd
test
adc
add
sbb
xlat
xor
popa
dec
mov
divl
and
adc
inc
addr16
aaa
jle
jnp
push
mov
hlt
mov
fucom
loopne
ja
dec
arpl
add
idivl
or
fldt
inc
je
xchg
clc
fistps
mov
bound
clc
cmp
mov
xor
cmpsl
mov
mov
lods
cmpsb
and
into
sub
xor
out
dec
dec
mov
lahf
cmp
xchg
xor
rorb
movsb
mov
mov
addr16
outsl
daa
jg
ret
bound
and
inc
mov
icebp
jge
mov
cmp
imul
in
cmp
popfw
push
xor
sti
cmpsb
imul
cli
xchg
fwait
cmpsl
fsubrl
pop
shll
popa
cwtl
outsl
std
pop
or
shl
sahf
iret
mov
xchg
xor
lcall
or
arpl
inc
lea
repnz
mov
inc
and
cltd
loop
mov
mov
je
sbb
adc
jl
sbb
mov
or
adc
or
dec
ja
jb
push
in
sub
xchg
scas
adc
mov
arpl
mov
add
sub
push
incb
and
add
out
ficoml
out
mov
cmpl
jbe
call
in
movsl
div
arpl
mov
pop
aam
mov
loope
ret
ret
cmp
cmpsl
mov
cmp
cmc
adc
movsl
cmp
sub
scas
jns
test
jno
imul
push
out
stos
add
enter
jle
xor
imul
nop
push
mov
inc
imul
jmp
jg
rorb
pop
lret
div
in
push
aad
ds
movsb
xchg
jno
push
inc
mov
mov
push
das
fwait
arpl
dec
sarb
cltd
mov
inc
mov
add
aas
sarb
mov
scas
mov
movsb
inc
mov
mov
push
and
dec
scas
js
push
inc
stc
adcb
cmp
lods
sub
test
repz
adc
sbb
pop
add
cmc
std
mov
inc
xor
test
mov
mov
in
add
out
mov
sbb
dec
cld
xchg
call
mov
sub
dec
mov
mov
pop
push
test
jns
enter
outsl
mov
pop
xchg
mov
or
dec
iret
ret
outsb
fdivs
jne
lock
xchg
or
popl
mov
pop
jmp
stos
mov
movsb
adc
xchg
sti
fistpll
lock
mov
scas
dec
mov
mov
aad
stc
lods
xchg
outsb
xor
pop
mov
jl
pop
push
xor
sub
sub
mov
adc
pop
ret
movsb
decw
aas
inc
pop
adc
mov
shrl
fldln2
sarb
js
das
popa
and
pop
jae
dec
push
repnz
mov
xor
xchg
push
lods
cwtl
cmp
xor
pcmpeqw
cwtl
jae
outsl
push
out
movsl
mov
in
xlat
mov
pop
jg
cli
cmp
aad
sub
in
outsl
push
and
ds
and
pop
int
pop
leave
jle
fsubl
mov
cmp
mov
pop
aaa
mov
std
not
loope
lret
push
jb
cld
inc
push
mov
cmovl
push
nop
dec
cld
lods
jnp
lds
loopne
lock
mov
je
scas
rcll
pop
add
mov
jbe
shlb
push
dec
and
mov
mov
sub
push
xor
fisubrl
mov
jae
add
mov
xor
or
mov
and
dec
ss
mov
repnz
dec
pop
add
push
and
dec
movsb
and
scas
loop
in
push
sahf
jnp
xchg
jbe
insb
leave
push
fnsave
stos
fisubs
mov
pop
test
scas
out
mov
dec
mov
push
in
rol
sbb
stos
jae
mov
sbb
push
iret
xchg
hlt
pop
xchg
ficoml
aaa
gs
lods
les
fwait
xor
pop
pushf
cs
pop
int
stos
faddl
js
pop
movsb
iret
xchg
lea
stos
mov
jge
popf
in
roll
popf
aaa
add
xchg
inc
xchg
lahf
mov
test
jns
loop
xor
pop
jl
data16
cli
js
sub
inc
pop
icebp
mov
pop
stc
jnp
jge
cli
ljmp
into
int3
jmp
icebp
dec
mov
negb
push
cmp
mov
lock
sbb
add
sahf
xor
adc
jno
mov
mov
push
les
jmp
push
test
push
xor
fidivrl
stc
add
rcrl
xchg
push
gs
testb
jge
xor
lock
fadd
mov
mov
outsb
add
sbb
sbb
outsb
cmp
vmaxsd
lods
mov
mov
lods
jae
repz
data16
dec
cmc
xor
fcmove
movsb
lods
in
dec
in
ljmp
sbb
shll
cmpsl
ljmp
pop
mov
mov
clc
xor
movsb
mov
pop
pop
add
cmpsl
sub
sahf
jns
dec
scas
push
mov
pop
dec
popf
dec
dec
enter
sbb
stc
xor
adc
lret
jl
test
dec
negb
push
jg
shrb
dec
adc
cmpb
jne
nop
in
push
sub
lea
push
cmp
clc
cmpsl
jl
push
mov
sbb
repz
jecxz
mov
mov
adc
daa
xor
pusha
xor
nop
xchg
adc
lods
inc
or
lahf
add
dec
adc
dec
xchg
idiv
daa
int3
out
sbb
popf
pop
pop
fcmovb
and
cmova
imul
imul
sub
out
sti
push
int
xchg
outsl
lds
xor
addr16
cli
in
sbbb
pushf
sub
fistl
mov
jmp
adc
add
mov
xchg
ljmp
cli
fxch
mov
fcompl
jbe
ret
lock
fnstenv
and
push
lret
mov
inc
lods
mov
iret
inc
jp
call
pop
pop
or
mov
outsb
inc
and
adc
add
ret
inc
add
jno
out
xchg
push
inc
lods
cmpsb
leave
aam
inc
loopne
ds
pop
fcoml
cmp
call
mov
mov
lret
or
sti
push
xchg
mov
lahf
pop
cmpsb
inc
pop
mov
cli
jl
aam
add
cmpsl
enter
pop
push
adc
movsb
sbb
out
ss
out
lea
sbb
jae
stos
or
mov
dec
push
shr
in
leave
mov
mov
jmp
dec
pop
mov
loop
add
jnp
incl
xor
xchg
loopne
gs
stc
push
int
imul
cmpsl
jge
test
mov
add
mov
les
ret
dec
push
hlt
setb
int
lahf
sbb
daa
cwtl
adc
out
push
arpl
jns
adc
icebp
loop
ror
icebp
xchg
cmpsb
pop
lea
or
mov
test
and
xor
jb
shrl
sbb
dec
movsl
ror
ljmp
and
sarl
xor
popf
or
shrb
ss
cmpsl
cmp
pusha
pop
nop
adc
aam
fidivs
lods
int
rsm
lea
add
stos
mov
pop
test
test
cmc
push
mov
lods
jle
cmp
repnz
into
scas
xchg
notl
cltd
pop
xor
push
repz
mov
ljmp
mov
jne
pminsw
divb
stos
ficoml
xlat
test
out
jae
add
aad
aaa
push
data16
lret
mov
push
inc
xor
cltd
popf
cmp
cmp
fimull
out
bound
pop
jae
imul
and
sub
shlb
mov
ret
mov
mov
mov
sbb
lcall
nop
pop
cwtl
in
cwtl
rclb
cmp
mov
rcll
ficoms
push
sub
xor
mov
jg
inc
sbb
leave
ret
daa
sbb
pop
xchg
scas
adc
test
test
inc
push
and
fldt
sub
in
xor
call
ds
jmp
pop
push
and
add
sbb
mov
test
cmp
push
add
iret
or
sbb
and
push
sbb
push
leave
lea
mov
in
push
loope
ret
lds
jo
lods
int
lret
sub
je
lods
inc
jmp
mov
dec
rcrw
xchg
xlat
ret
bnd
or
fcmovb
mov
sub
dec
fdiv
or
mov
shll
sbb
imull
mov
mov
into
push
clc
lcall
ror
or
fsubl
push
jns
dec
dec
mov
xor
ja
adc
repz
add
sahf
adc
inc
xchg
cmp
mov
stc
lock
movsb
cmc
js
ficoms
jmp
sub
xchg
dec
lock
leave
daa
les
or
jb
repz
mov
mov
xchg
xchg
sub
lret
fxch
jl
add
inc
jns,pt
cmp
mov
sarl
mov
sub
or
mov
movl
in
stos
pop
mov
xchg
cmp
out
cltd
lea
sub
xor
mov
daa
lahf
movsb
push
gs
inc
xchg
cmp
inc
xor
xor
std
call
clc
inc
xchg
pop
dec
ret
sahf
aam
cmp
mov
add
xchg
scas
gs
lock
call
cld
push
cltd
inc
push
inc
daa
sbb
test
pop
lret
and
hlt
notl
xlat
and
out
jmp
ret
imull
jne
test
or
add
and
jge
jecxz
sub
andl
dec
leave
mov
jl
shl
add
arpl
sbb
ret
outsb
loop
xchg
pop
xchg
ljmp
aad
iret
leave
xchg
outsb
sbb
pop
mov
add
push
push
stos
jne
test
sub
sub
xor
clc
mov
cmpb
adcb
fmull
popf
sti
pop
add
cmp
pop
out
in
lahf
mov
inc
test
xor
loope
pop
fidivs
adc
bound
subb
call
sub
and
pop
in
jl
pushf
pop
fimuls
pop
mov
scas
jp
data16
dec
pop
icebp
add
leave
adc
iret
or
push
clc
lcall
stc
xlat
cmp
xor
icebp
pop
js
inc
rcll
push
xorb
call
xor
je
mov
push
ds
pop
push
push
shrl
call
arpl
jl
adc
popa
xor
mov
sbb
adc
push
std
xchg
xchg
add
xor
adc
mov
sarl
ficoml
mov
or
nop
ja
add
je
mov
and
and
and
mov
cld
adc
adc
or
or
bound
sahf
pushf
push
adc
gs
dec
test
inc
inc
mov
cmc
and
cmpsb
jmp
or
xchg
or
mov
inc
call
repnz
sbb
bound
cld
jbe
add
ret
test
ds
stos
int3
fists
pmaxub
jbe
outsb
fidivrl
dec
addr16
int3
dec
arpl
pop
addr16
mov
in
xor
xchg
ja
mov
mov
jo
clc
dec
add
mov
and
ds
bound
rclb
xlat
add
mov
or
das
sidtl
cmpsb
jae
pop
xchg
nop
dec
lret
nop
sahf
adc
mov
mov
mov
sbb
and
cmp
cmp
scas
adc
xchg
push
xchg
push
cltd
loop
dec
or
sub
popf
arpl
or
aad
push
mov
aas
sub
jno
xchg
insb
and
out
pusha
sub
push
adc
mov
add
dec
lock
add
mov
out
mov
lahf
int3
pusha
push
sub
fnstenv
jns
cli
xchg
dec
es
xlat
lods
cmp
fstl
mov
ret
stc
xchg
cmp
stc
inc
movsb
push
decl
mov
jle
ja
inc
flds
std
into
cmpsb
pushf
adc
popf
popa
or
data16
test
xchg
mov
mov
and
ds
dec
jl
cmp
lock
adc
jnp
add
das
jle
stc
fsubs
add
or
imul
xchg
test
ss
dec
lret
push
popa
mov
daa
std
dec
fsubrp
test
or
scas
jne
or
testl
fdivl
pop
jnp
call
jnp
inc
les
mov
rcll
outsb
push
jmp
push
bound
pop
leave
jmp
cmp
adcl
pop
testb
jns
pushf
mov
insl
insl
loop
adc
jmp
rolb
pop
rcrb
popf
lret
mov
mov
sub
int
out
push
shll
stos
push
add
fisttps
push
in
decb
pop
lret
je
fidivl
xchg
dec
pop
sbb
dec
lcall
sbb
cmp
mov
imul
pop
pop
and
pushf
cmpl
pop
sub
pop
adc
sar
dec
or
jg
nop
decl
mov
into
aad
jl
pop
ficoml
outsb
rolb
xchg
jae
mov
push
es
push
adc
xor
std
adc
les
je
cld
lret
adc
xor
jmp
mov
cltd
mov
outsl
lahf
jne
or
loopne
dec
mov
stos
xor
sbb
testl
or
ret
adc
cmp
aam
test
popa
out
ds
ja
test
arpl
int
ror
push
jo
jno
pop
ret
cli
inc
push
jl
pop
add
cwtl
push
jl
fcoms
shlb
repz
fstpt
lock
cli
inc
dec
jo
addr16
adc
pop
mov
mov
jbe
xchg
jne
movsl
xchg
popf
add
xor
repz
cmpb
sbb
call
jo
mov
dec
ja
mov
cmpsb
jb
add
lret
pop
add
subl
sarl
xchg
insb
daa
out
jns
mov
xchg
lret
mov
mov
inc
mov
pop
push
pop
pop
shlb
stc
xchg
push
or
sub
xor
daa
jl
scas
daa
jecxz
cli
jg
dec
shrl
lods
push
sub
ljmp
out
ss
outsl
imul
popf
mov
lret
push
icebp
push
push
test
andl
mov
loope
pop
test
aad
addr16
subb
loope
cmpsb
jmp
cmpsb
movsb
xchg
repz
xchg
mov
ljmp
xchg
xlat
addr16
int
xor
inc
jecxz
repnz
ja
add
mull
fisttpll
jle
lcall
pop
push
inc
movsb
icebp
inc
and
xor
push
cmp
sti
out
dec
mov
movsb
pop
mov
mov
add
xchg
pop
ss
into
xchg
insb
outsb
ficoms
cmp
ret
pop
jne
outsl
ret
test
push
data16
pop
int
rol
mov
addr16
jns
pop
shrb
mov
add
adc
pop
jae
dec
pop
mov
orl
mov
sbb
jno
jp
adc
das
outsl
inc
or
pusha
cmpsl
lods
mov
gs
dec
lock
fwait
stc
pop
and
adc
into
inc
xor
pop
and
mulb
pop
mov
mov
mov
pop
mov
or
mov
adc
mov
inc
inc
sarl
add
xchg
cmpsb
leave
shlb
mov
cmc
cmpsl
sub
adc
xor
and
mov
mov
scas
jp
mov
out
xchg
shr
ja
testb
movsb
lock
daa
dec
icebp
sbb
imul
sub
stc
cltd
inc
imul
push
mov
nop
sbb
xchg
mov
ja
stos
mov
push
pop
pop
mov
mov
lea
jns
pusha
clc
jmp
xorl
adc
xchg
add
jle
scas
jg
or
loope
sbb
mov
pop
cmp
inc
movsl
jne
adc
mov
or
jmp
pushl
fdiv
cmpsl
pop
sbb
mov
xor
mov
dec
fucomp
out
addl
repnz
mov
fwait
push
inc
test
inc
adc
mov
movsb
mov
mov
and
lret
popf
dec
adc
pop
hlt
jbe
lods
das
movsl
test
ja
xor
xor
mov
dec
shll
out
sbb
jno
jl
insl
mov
aas
jmp
mov
icebp
mov
and
lods
repz
cmp
sahf
lahf
inc
dec
jmp
aad
lock
lret
mov
push
xchg
or
lcall
mov
gs
adc
loope
sbb
in
fstl
inc
nop
mov
cli
or
and
icebp
pop
call
sub
xchg
lods
mov
in
test
pop
dec
fisubrs
cmpb
stos
mov
and
and
js
mov
xor
lods
ljmp
mov
movl
imul
scas
xchg
mov
dec
decb
jp
insb
jns
fadds
nop
add
cmpsl
out
adc
sbb
daa
js
pushf
insl
push
pop
int
aad
inc
mov
repnz
or
insl
xchg
sbb
add
insb
movsb
outsb
cmp
insb
mov
add
sub
pop
lea
pop
pop
dec
sahf
lock
mov
dec
arpl
xchg
dec
xchg
cwtl
sbbb
jmp
int
pop
and
insl
shlb
jl
ljmp
sub
dec
rorl
rcrl
adc
hlt
xchg
dec
cmpsb
imul
fs
push
mov
lea
add
sahf
in
andb
push
test
int
jecxz
aad
adc
jbe
dec
mov
cmp
out
xchg
mov
pop
rclb
mov
or
ret
mov
pop
adc
pop
data16
xor
mov
sub
and
and
mov
sub
mov
xor
aam
jnp
inc
fwait
daa
jmp
jae
jnp
add
repz
adc
sahf
push
jo
push
sarb
adc
lods
into
jmp
movq
in
sbb
adc
add
jne
clc
push
sbb
sahf
adc
and
jb
movsb
or
xchg
fwait
adc
stc
pop
mov
cs
clc
pushf
jns
shll
jg
fcoms
cs
or
pop
inc
sti
das
push
sahf
cmc
lds
aad
xor
shl
faddl
mov
mov
mov
xchg
push
xchg
sub
xchg
xchg
into
fstl
cmpb
push
sbb
bound
cld
add
fmuls
dec
adc
dec
cmp
lret
sbb
xchg
scas
adc
pusha
out
in
xchg
pop
push
fisttps
int
jg
sub
mov
inc
pop
clc
adc
mov
icebp
js
das
mov
test
push
cmp
lds
mov
pop
rorb
sbb
dec
add
mov
mov
pushf
cmpsl
mov
int
in
pop
push
sbb
mov
mov
jns
dec
xchg
inc
adc
and
loope
aaa
pop
in
cmp
icebp
in
jle
lods
hlt
and
mov
imul
ret
cmp
push
jnp
jecxz
shrb
sbb
mov
ficoml
mov
lcallw
cmc
out
bound
dec
mov
sub
cmp
push
divl
inc
in
add
jge
mov
push
in
nop
hlt
ja
roll
pop
pop
outsb
call
or
jns
fcomps
fwait
jb
jmp
cs
push
dec
dec
adc
stos
inc
push
pop
jl
cmc
cmp
fisubrs
dec
pop
sbb
sarb
jg
fisubl
inc
mov
cmp
mov
fs
sub
sub
push
pop
xor
sbb
push
imul
scas
push
divl
sub
addr16
pusha
mov
mov
xor
pop
jl
push
fdivrs
adc
insb
mov
addr16
ljmp
imul
clc
sarl
sahf
mov
out
jo
enter
mov
aas
movsl
hlt
movsl
dec
cmpsl
int3
sub
movsl
fld
ds
scas
adc
stos
test
ret
jns
lock
movsb
sbb
xor
das
movsb
out
loope
pop
and
cmp
cmp
jg
cmp
sbb
adc
adc
dec
sarl
pop
mov
out
sub
pop
das
pop
mov
inc
aam
into
sbb
sub
inc
mov
aad
cwtl
in
inc
rcr
mov
cmp
pushf
lret
or
sbb
push
sub
cwtl
into
xor
aam
scas
movl
cmp
cwtl
inc
int
lock
mov
movsb
pop
out
iret
cltd
mov
mov
push
sahf
and
push
jns
sbb
in
dec
or
sbb
dec
pop
add
add
xor
sbb
and
lahf
out
aaa
pop
sbb
push
icebp
cmp
pop
adc
insb
insb
pop
jo
push
inc
call
scas
nopl
out
cmp
push
popf
ret
test
push
cli
jns
push
mov
dec
sarb
dec
cwtl
aas
pop
inc
mov
push
mov
aad
mov
scas
std
pop
inc
dec
jb
pop
sbb
add
fcomi
into
in
push
or
je
insl
sub
xchg
cmp
xchg
scas
push
sbb
pop
loopne
mov
imul
pusha
outsb
in
cmp
pop
popf
mov
andl
and
stc
hlt
into
sub
pop
shll
push
scas
out
cli
xchg
mov
nop
ss
push
xor
pusha
xchg
jmp
pop
inc
dec
andb
xlat
cmp
les
adc
sahf
gs
mov
sub
sbb
daa
adc
or
int3
int3
xchg
cmp
sbb
nop
mov
and
fidivrs
rcr
push
arpl
clc
cltd
repz
lock
pop
sub
mov
sbb
pop
inc
cld
mov
add
movsb
jp
push
ret
cmp
sarb
addb
out
test
adcb
xlat
xchg
out
xor
dec
inc
cmp
ljmp
test
xor
loopne
mov
mov
xor
popa
loope
push
cmp
lcall
pop
shlb
jno
aad
mov
xchg
sub
jecxz
mov
out
add
sbb
idivl
lods
mov
jecxz
sub
adc
iret
adc
repz
imul
imull
fiaddl
inc
mov
add
pop
jb
rcll
push
in
out
pushf
fdivs
out
in
call
loopne
ds
loope
add
inc
push
shr
sbb
fsts
inc
and
faddp
sub
mov
mov
adc
add
inc
xlat
add
dec
dec
adc
push
fs
in
out
jno
mov
push
inc
cwtl
add
cwtl
out
xchg
mov
into
xor
xlat
add
cmpsl
rcll
or
std
xchg
inc
add
roll
popf
lock
mov
xchg
orb
cmp
xor
cmpsb
aam
jecxz
pop
repnz
and
dec
xor
mov
ret
or
popf
mov
mov
cltd
adc
or
scas
adc
cmpsb
les
mov
dec
mov
insl
subl
push
inc
inc
sub
fadds
scas
xor
repz
das
push
push
cltd
pop
jle
mov
popf
aam
mov
pop
test
push
enter
pop
jecxz
int
addr16
mov
xchg
sub
adc
sahf
sbb
mov
xchg
repz
or
add
jns
inc
jmp
cmp
pop
repz
dec
cmp
mov
movsb
jbe
cmp
lcall
fs
fsubrs
js
push
mov
mov
push
pop
xchg
test
loopnew
insb
push
xchg
inc
push
dec
push
hlt
and
mov
push
pop
sub
pop
sbb
popf
sub
mov
adc
jl
jne
jns
in
test
rcll
mov
or
mov
xor
push
aaa
ljmp
cmpsl
dec
hlt
fs
push
xor
fwait
call
mov
push
lcall
or
dec
jmp
cwtl
mov
js
xchg
aad
or
jbe
ret
cmpsb
pop
std
xor
test
pop
in
nop
dec
dec
xchg
cmpsb
push
jp
dec
push
fstpl
add
push
inc
popf
xorb
or
dec
out
test
dec
out
dec
cld
mov
ret
mov
fucom
cmpsl
daa
or
repz
jecxz
out
sbb
int3
incl
xchg
xchg
js
iret
test
lods
in
js
aaa
stos
xchg
ficomps
fildll
jecxz
fcomps
iret
xlat
mov
leave
jbe
pop
xchg
and
outsb
lods
jbe
jl
fucom
mov
repnz
lret
fstpt
setg
dec
and
adc
outsb
roll
and
popa
mov
pop
mov
in
xor
jecxz
out
or
rcrb
fbstp
stos
push
pusha
es
mov
lcall
push
mov
mov
movl
sub
lret
popa
cltd
cltd
mov
clc
das
mov
mov
nop
lods
fwait
lock
inc
imul
clc
dec
sbb
pop
add
sbb
fdivrs
in
jae
mov
in
call
xchg
xchg
popa
add
push
neg
cmp
push
add
dec
push
into
adc
aas
dec
popa
loope
xchg
cmp
xor
movsb
inc
add
leave
hlt
push
leave
add
xor
jno
dec
int
mov
sbb
loop
and
xorb
int
aam
test
bound
cmp
aad
iret
jo
mov
mov
mov
jg
xchg
scas
lcall
cmp
int
sbb
data16
adc
xor
xorl
mov
add
cmp
lahf
outsl
and
mov
mov
in
ds
lea
pop
mov
sbb
ret
vpmaxsw
out
out
pop
inc
add
rcr
aas
inc
out
adc
cmpsb
es
sbb
cmp
sub
pop
clc
jl
les
and
cmpsl
loopne
xchg
mov
xchg
enter
in
pop
into
jg
pop
arpl
push
cmp
or
jne
mov
arpl
shlb
test
dec
daa
xchg
sti
movsb
test
adc
scas
mov
in
sub
jns
or
lcall
push
push
subl
adc
enter
xor
or
lea
sub
andb
ljmp
jnp
cmpsl
add
fiaddl
lcall
sub
jbe
xchg
pop
cs
loop
clc
scas
push
cs
mov
mov
dec
and
xchg
fsub
xchg
lock
or
jae
ret
sub
insl
sbb
dec
rcl
sbb
mov
add
pop
ja
mov
add
les
mov
sub
sbb
frstor
shlb
cwtl
andl
test
cld
and
outsb
mov
or
mov
mov
jg
out
sbb
adc
mov
cmp
pop
xlat
sbb
pusha
lea
popl
sub
pop
movsb
pop
jne
movsl
insb
popf
push
sti
arpl
ret
dec
lods
xor
inc
sbb
test
imul
es
xor
popf
andb
movsl
sub
push
cwtl
mov
mov
das
scas
jne
lock
cltd
out
fs
subb
adc
das
and
incb
adc
cld
cmp
in
or
cmp
push
push
sahf
pop
mov
repnz
dec
das
mov
pop
mov
xchg
push
mov
iret
movsl
push
mov
inc
cltd
popa
scas
cmp
inc
push
sti
push
outsl
fwait
push
add
or
or
inc
shlb
movsb
mov
push
push
push
out
rorl
pop
lock
in
inc
shrl
test
addb
cs
jmp
adc
xchg
lret
dec
xchg
rclb
jl
inc
sub
jns
pop
jns
lret
mov
push
mov
nop
loop
add
cmpl
xchg
add
out
or
in
push
jne
sub
pop
sbb
sbb
mov
hlt
mov
inc
fnstsw
xchg
xor
test
stos
enter
cld
inc
inc
js
and
xor
fbld
add
aam
mov
mov
out
mov
jle
mov
popa
push
cmp
cmpsl
inc
jg
and
jle
cmp
and
jp
std
subl
push
sub
pop
test
jns
mov
dec
add
add
add
scas
mov
cld
dec
out
adc
xchg
dec
lock
mov
push
sbb
mov
in
mov
in
addr16
lods
lret
xchg
lret
mov
mov
arpl
pop
pusha
cli
inc
lods
or
cmp
idivb
test
int
das
jbe
clc
out
jb
cltd
push
jecxz
in
clc
push
sub
jnp
loopne
mov
test
jbe,pt
pop
push
mov
sub
icebp
jp
cmp
lahf
sbb
and
sar
push
scas
sbb
push
in
mov
mov
sbb
pop
adc
sbb
cmpsb
test
xchg
sahf
pop
add
std
loope
adc
push
les
scas
in
dec
cltd
fbstp
mov
sbb
or
inc
jb
jo
cld
bound
mov
and
cmp
mov
inc
in
jno
mov
adc
push
clc
xor
sub
dec
sub
xchg
mov
mov
rcll
dec
repz
cwtl
xchg
bswap
jg
sbb
xchg
fdivs
jne
jl
adc
pop
mov
pop
es
jno
call
dec
sub
xor
cmp
loopne
lret
xor
dec
cmpsl
and
icebp
and
in
cmp
jae
les
ds
addr16
movsl
cmpsl
mov
daa
dec
int3
pop
push
mov
loopne
jnp
cmp
das
cmp
popa
jge,pn
pop
push
mov
arpl
clc
add
orb
add
test
push
push
lret
js
mov
dec
inc
mov
or
enter
mov
das
imulb
lods
jnp
inc
cli
lods
dec
adc
cmp
jno
mov
adc
mov
dec
cmp
pop
sub
mov
cld
rcr
dec
add
imul
out
mov
and
and
mov
pop
pop
notl
jg
xchg
inc
jnp
inc
mov
mov
movsl
cmc
xor
pop
enter
pop
pause
push
scas
bound
pop
cmp
sub
enter
pop
test
jl
cmpsl
clc
sub
mov
rcrl
pop
fstl
cmp
ds
in
mov
adc
fwait
or
mov
sub
mov
mov
hlt
dec
outsb
cmp
xchg
mull
jns
lcall
icebp
sub
shll
cltd
sbb
inc
sbb
mov
enter
pop
call
cmp
iret
push
sahf
xchg
fstpl
pop
scas
insl
mov
jo
insl
xchg
frstor
fs
shll
inc
sub
and
add
xor
ret
xor
lods
mov
int
js
mov
push
and
push
pop
xchg
sbb
gs
lcall
and
mulb
ja
and
jmp
stos
jns
and
mov
mov
or
mov
xor
mov
xchg
ficompl
dec
outsl
jne
or
jno
les
mov
stc
sbbl
add
into
ret
lods
jnp
mov
push
fs
fimuls
dec
mov
stos
bound
fistpll
aad
rcrb
xchg
xchg
fcomip
aad
and
call
repz
iret
dec
rcrb
jno
push
loop
fs
add
addl
xchg
pop
mov
sub
mov
dec
and
xchg
rcl
arpl
adc
inc
adc
dec
jge
push
and
stc
adc
and
imul
loop
insb
mov
dec
xor
fnstenv
cli
and
xlat
jmp
pop
mov
outsb
xor
mov
data16
ret
in
inc
mov
fbld
movsb
jecxz
inc
or
pop
stc
insl
push
mov
push
push
mov
pop
mov
inc
dec
scas
int
cltd
insl
repnz
jmp
push
es
pop
imulb
pop
push
movsl
ret
or
adc
sbb
addr16
std
sbb
jae
stos
and
jae
push
push
loop
int3
or
pop
inc
jg
and
leave
pop
inc
mov
dec
and
pop
cmp
push
stos
aas
and
dec
cmc
ljmp
mov
mov
or
push
mov
sarl
dec
inc
pop
inc
adc
mov
repnz
mov
es
adc
loop
mov
lods
sbb
subb
mov
loope
dec
or
int
out
pop
fldl
sbb
das
sub
sahf
ja
pop
push
sbbl
arpl
popa
out
icebp
push
dec
bound
loope
jae
pop
push
gs
aam
pop
lods
mov
call
mov
fisttpl
inc
jo
push
fnstsw
pop
ret
mov
fdivs
subl
jp
push
in
cmp
dec
cltd
inc
xchg
jns
lahf
jmp
loopne
jns
mov
loopne
lods
mov
hlt
xor
cmovno
inc
xchg
lret
sbb
movsb
test
push
or
xor
lret
adc
and
ljmp
push
out
fstpt
push
sbb
sub
adc
in
sbb
push
xor
ja
and
insb
ret
mov
push
fsubp
jmp
xchg
ret
lds
pusha
cltd
sub
insl
aam
pop
pop
mov
lds
push
mov
push
add
into
and
and
sub
mov
mov
popa
push
add
mov
add
jg
fmuls
loopne
xorw
movl
cltd
xchg
jbe
cld
xor
cmp
or
xchg
pop
aam
mov
rclb
mov
imul
mov
cmpsb
add
mov
hlt
xchg
jb
lods
inc
rorb
cmp
sbb
dec
and
mov
cmpsl
movsb
aad
push
into
jae
shlb
movl
dec
sbb
or
lea
inc
lods
inc
jmp
jle
mov
xor
negb
in
lea
lret
cmp
pusha
pop
jmp
adc
in
sbb
ds
mov
mov
das
inc
xchg
push
sti
in
out
test
inc
mov
sbb
mov
mov
jg
cmc
or
addl
jne
xchg
pop
std
cmp
or
cmp
push
out
lret
xchg
repz
movsl
out
and
adc
jns
lcall
sbb
sbb
in
lea
xor
mov
js
data16
inc
nop
popa
mov
cmp
inc
decb
loop
pop
add
ds
pop
add
in
out
push
dec
pusha
mov
jae
or
pop
ljmp
ret
xorl
sub
lock
jl
xor
cld
dec
mov
enter
jb
insb
js
stos
xchg
aas
mov
cld
mov
rcll
andb
xchg
lahf
ds
aam
int
adc
mov
jl
idiv
sbb
add
insb
or
out
mov
lret
data16
adc
cmp
stos
sti
inc
pop
xor
jg
or
incb
scas
lock
adc
ja
xor
push
push
in
sub
xchg
les
in
fs
in
jb
mov
push
push
daa
daa
and
dec
mov
hlt
push
xchg
in
jne
pop
sub
mov
lahf
cli
or
mov
std
xchg
mov
dec
add
call
bound
mov
inc
adc
repnz
push
subl
inc
xor
mov
xor
lea
sub
cmp
dec
xor
shlb
mov
loop
icebp
push
out
mov
arpl
test
imul
mov
clc
std
jbe
imul
and
rorb
cltd
ret
popf
mov
cmp
and
adcb
jne
paddusb
clc
sub
movb
jp
mov
int
mov
icebp
stos
cmp
leave
scas
push
dec
dec
push
dec
sti
mov
mov
cwtl
xchg
testb
aad
jl
xchg
les
xchg
out
or
mov
jns
imul
andl
xchg
imul
push
pop
mov
mov
jmp
inc
mov
loope
js
xchg
imul
jne
aaa
or
push
in
sbb
rclb
xor
mov
adc
fcmovne
cmp
jecxz
jl
and
xchg
test
lahf
addr16
sub
divl
dec
and
push
inc
popf
stc
jp
pop
push
test
insl
mov
inc
lcall
pop
mov
pavgb
into
pop
dec
push
mov
cltd
outsb
jge
adc
push
xlat
push
push
pop
adc
pop
jge
or
mov
jb
js
jae
aad
or
push
iret
mov
xchg
jecxz
aaa
addr16
test
sub
dec
or
ret
gs
fstl
push
mov
xor
inc
pop
in
dec
add
lret
xor
sbb
fcoms
mov
in
push
cmp
hlt
push
dec
jns
cld
jne
jns
repnz
hlt
push
sbb
cmpsl
mov
in
add
in
xchg
loope
mov
hlt
orb
inc
mov
pop
outsl
repz
pop
sbb
sub
flds
into
cmp
inc
movsb
push
and
jbe
sbb
or
popf
dec
inc
inc
cmpsb
cmc
pop
insl
ret
scas
add
es
lods
test
dec
mov
jo
leave
and
xor
sub
sub
jae
ja
mov
xchg
outsb
mov
insb
bound
or
cwtl
push
and
jge
inc
dec
pop
stos
dec
cmpsb
sub
xor
test
rcl
add
xor
add
sub
arpl
addr16
arpl
inc
add
pop
testb
xchg
sbb
push
in
cli
jg
fwait
jg
sbb
xor
and
ss
and
jnp
sahf
ret
mov
jno
and
cld
and
inc
jp
ja
jecxz
and
and
inc
push
mov
cld
popf
or
pop
cmpsb
adc
mov
sarb
xchg
push
pop
in
mov
in
int3
fidivrl
ds
and
test
aad
sub
out
cmp
test
sub
inc
mov
daa
pop
orl
rcl
into
pop
sarl
pop
popf
xchg
jnp
mov
nop
sbb
popa
jae
jecxz
jge
pop
add
mov
mov
mov
dec
ljmp
scas
sub
and
fdivl
and
nop
mov
xor
cmp
xor
fstps
and
pop
call
or
mov
or
xor
fs
je
pop
inc
hlt
pop
or
rcll
sbb
mov
cwtl
bound
dec
hlt
xor
sbb
mov
push
mov
sbb
push
push
jmp
mov
shll
inc
adc
popf
rcrb
push
sbb
sub
aaa
sahf
fisubs
jno
push
mov
jb
gs
sub
or
jg,pn
test
pushf
aam
lods
pop
arpl
outsb
mov
stos
mov
inc
mulb
cs
je
pop
in
mov
and
lods
fstpl
adc
push
dec
sbb
addr16
mov
cmpl
fsubrl
arpl
jg
and
addr16
push
daa
fbstp
pop
lods
shr
das
cmp
aad
cwtl
into
jno
stc
sti
mov
xchg
xor
dec
or
mov
mov
pusha
jg
roll
enter
sub
push
shrb
push
out
pop
int
add
dec
call
xor
fdivrs
in
sub
nop
shrl
es
or
xchg
and
movsb
sbb
cmp
xchg
mov
sub
lret
jg
stos
push
dec
orl
popf
scas
negb
mov
sti
call
cmc
xchg
or
hlt
icebp
inc
les
in
cmp
into
icebp
popf
icebp
pop
mov
pop
xchg
inc
lock
sbb
push
lods
out
cmp
push
pop
mov
jge
inc
push
stc
or
and
in
sbb
add
nop
cli
add
and
or
fxch
xor
out
dec
mov
mov
jne
arpl
mov
sub
push
cltd
shl
sbb
stc
dec
orl
push
mov
fmul
int3
jl
rorl
or
shl
loop
fcmovu
xor
add
xchg
aaa
and
jne
cwtl
add
mov
dec
add
mull
test
xor
and
cwtl
adc
mov
clc
je
ret
jecxz
and
or
lods
sub
test
mov
add
jl
pop
xor
movsb
push
inc
push
cltd
mov
and
mov
ret
mov
arpl
adc
fidivs
xor
push
popf
xor
or
xor
adc
ficomps
nopl
sti
rcrb
popa
in
sbb
setp
mul
mov
mov
mov
shlb
adc
repnz
and
push
mov
mov
lea
mov
cmpsl
fdivr
testb
xchg
mov
aad
inc
xchg
cmp
int3
pop
ljmp
xor
repnz
lds
pop
mov
loope
adc
loopne
fisubrl
or
and
jb
xor
leave
fldt
fsubrp
sub
addr16
mov
es
inc
jecxz
mov
mov
adc
jecxz
test
xchg
or
daa
popa
xchg
mov
stos
dec
cmp
outsl
mov
jb
push
int
and
push
repnz
cmp
pop
sub
dec
inc
arpl
fwait
aaa
adc
out
jb
jnp
or
cmp
mov
ret
push
insb
cli
cmc
test
mov
and
out
scas
jns
adc
int3
cmpsb
lret
or
sbb
inc
out
xlat
mov
jl
push
out
pop
sbb
fwait
out
push
adc
xchg
sbb
mov
xor
inc
lea
xchg
pop
cmp
cmp
dec
xor
shrb
fstpl
mov
mov
xor
les
movsb
xchg
push
xlat
aaa
outsl
push
push
insb
cmc
dec
pop
dec
lea
fs
leave
mov
lret
dec
inc
shl
std
or
mov
cmp
popa
scas
lea
les
sbb
dec
shl
aad
cmp
fidivrl
insb
pop
jecxz
sarl
imul
stos
jno
or
stos
inc
pop
mov
movsl
dec
xor
ret
fs
dec
cs
mov
jne
mov
aaa
aas
pop
sbb
sbbl
adc
xor
lcall
fbld
mov
mov
ss
xor
dec
jg
insl
shrl
aaa
repz
bound
mov
lret
pop
lcall
sbb
and
mov
les
addr16
sbb
inc
pop
mov
mov
sub
bnd
xchg
movsl
mov
dec
or
or
adc
mov
fcoms
mov
cmc
adc
and
cmc
imul
adc
mov
pop
mull
pusha
add
fst
inc
enter
xchg
shrb
sub
mov
and
jbe
or
add
scas
cltd
pop
sub
lret
out
rcll
pusha
pop
mov
int
mov
rclb
imul
dec
orl
fs
addr16
in
xor
jecxz
mov
lods
dec
sub
lock
adc
test
jno
cmp
cmpsl
mov
leave
and
jbe
loop
jae
mov
adc
inc
repnz
fwait
jnp
jb
aas
test
pusha
outsb
mov
das
repnz
jle
push
mov
inc
out
sbb
sub
mov
insb
fwait
repnz
pushf
mov
xor
shrb
popa
in
movsb
add
pop
pop
jle
dec
std
pop
push
sbb
mov
or
cmp
adc
dec
sbb
fisttps
xchg
dec
push
dec
aam
ljmp
loopne
mov
aaa
mov
cmp
sbb
adc
dec
les
test
daa
xchg
xchg
iret
jle
lahf
movsb
mov
fldt
or
add
and
cmp
sub
sbb
imul
and
loope
mov
cmp
pop
xlat
dec
dec
inc
inc
hlt
push
xlat
pop
lock
cwtl
or
adc
nop
sbbb
movsl
int3
push
xchg
pop
fdivp
lret
adcb
into
subl
pop
xorl
inc
fmul
mov
adcl
mov
insb
sub
sub
jl
add
addr16
pop
pop
sbb
popa
movsl
call
jnp
lahf
sub
jae
test
sub
sbb
int
imul
insl
jmp
repnz
jl
push
enter
fisubrl
adc
cli
out
xor
xor
mov
push
enter
or
bound
sar
xchg
push
sbb
repz
mov
setns
xor
sbb
test
jge
and
jb
aas
mov
cmpsl
pusha
sub
adc
ljmp
test
leave
sub
mov
mov
cmpl
popa
lret
pushf
gs
out
cmc
dec
add
cmp
sub
ficomps
lahf
shl
bound
cmpsb
mov
pusha
inc
dec
orb
call
les
enter
xor
mov
lret
add
cmp
fdivrs
lahf
int3
mov
lahf
mov
cld
push
xor
push
mov
or
pop
pop
insl
pushf
pop
cli
mov
leave
push
mov
mov
insl
fmull
cmp
jb
xchg
dec
stos
insl
jmp
mov
mov
mov
fsubr
push
mov
aas
add
aad
lea
les
sbb
dec
sbb
mov
std
mov
or
lock
fnsave
aaa
arpl
lds
stos
stc
repnz
repz
xchg
fidivl
add
cmp
into
lds
push
pop
call
dec
sub
inc
in
lods
popf
test
ljmp
add
repnz
pop
jge
inc
pop
mov
popa
cmp
add
loopne
mov
into
and
push
dec
in
sub
mov
add
cwtl
or
dec
xchg
sbb
cmp
jle
std
clc
mov
shll
cmpsl
popf
mov
and
call
push
adc
xchg
mov
loopne
mov
mov
jmp
dec
xor
test
cmp
dec
lods
ret
hlt
out
in
out
adc
daa
and
test
js
ds
stc
lods
xchg
stos
lods
adc
cmc
leave
sahf
dec
dec
mov
aad
sub
mov
jle
ret
addr16
mov
xchg
es
jl
faddl
rcll
sbb
push
mov
pop
dec
lret
or
stos
ljmp
xorb
mov
push
in
bound
call
inc
pop
dec
dec
movsl
jne
push
mov
jae
adc
dec
iret
xor
stc
in
pushw
in
sub
insl
jbe
shrl
popf
xor
test
sub
mov
lret
or
adc
stc
rclb
shl
stos
repz
int3
movsb
gs
mov
das
push
in
mov
jmp
adc
arpl
mov
fnstcw
sbb
cltd
fdivs
adc
mov
insl
decb
mov
cmp
ret
daa
out
imul
out
out
fwait
mov
ret
or
and
ljmp
mov
and
push
rcr
ret
cmp
jae
std
daa
imul
imul
jg
mov
sbb
cmp
idivb
mov
icebp
xor
inc
or
sub
jg
nop
loope
jg
not
int3
xchg
fstpl
mov
xchg
test
and
xchg
and
and
jmp
sahf
dec
inc
ds
pop
jp
lds
pop
jl
and
adcb
pop
cmpsb
xor
cmp
jnp
push
sub
add
sub
sub
imul
jmp
lahf
mov
lea
test
test
push
jge
shll
ret
cwtl
lahf
inc
add
cld
mov
outsl
insb
lret
pop
add
xor
das
cmpsl
bound
sbb
sub
dec
add
mov
repnz
fsts
clc
ljmp
fcomps
inc
int
mov
outsl
jo
xchg
subl
sub
ljmp
push
int
imul
loope
jb
ja
pop
out
hlt
mov
jmp
lret
test
inc
hlt
dec
adc
pop
lret
and
fisttpll
rorb
sti
cli
fidivl
push
test
mov
or
loope
push
cmp
xor
out
gs
ljmp
rolb
sbb
aam
cmc
movsl
pop
push
outsb
dec
pop
mov
sbb
dec
sti
cmp
aaa
imul
xchg
adc
aad
es
imul
cmp
sarb
test
or
push
jl
jp
ffreep
dec
xor
push
in
in
fimuls
icebp
sub
mov
push
inc
cltd
mov
cmpsb
fadd
xchg
lods
test
mov
cmp
inc
in
xor
jle
push
pop
test
mov
xchg
shrb
mov
xor
iret
ret
lcall
adc
mov
fs
or
mov
loop
lds
pop
inc
cmp
mov
xor
orl
mov
add
out
xorl
mov
and
cmpsl
test
sub
fucomi
push
popf
mov
xchg
jl
mov
mov
jecxz
xchg
repnz
jns
jle
inc
sbb
inc
or
push
adcb
lahf
or
out
enter
subl
mov
mov
mov
pop
jnp
and
mov
xor
dec
in
pop
fcoms
scas
aad
mov
push
inc
cli
mov
cld
push
cmpsb
inc
dec
cmp
jge
mov
imul
sti
sbb
sahf
sub
sbb
push
mov
jle
mov
or
cmpsl
ljmp
cs
rorl
loopne
mov
jae
push
dec
sub
enter
mov
pop
push
frstor
lret
shl
ljmp
dec
push
popa
addr16
ja
or
and
in
dec
cmpsl
cmp
gs
ss
sub
loop
jg
fs
cmp
popa
mov
xorb
in
push
jecxz
js
cmpsl
mov
sub
or
jecxz
pop
mov
cmp
stos
push
shrb
in
cmp
and
xor
shll
pop
xor
xchg
cld
pop
lds
nop
or
sub
push
imul
push
pop
mov
mov
mov
push
sbb
aas
loopne
nopl
or
xchg
or
adc
push
jns
cmp
das
mov
cmp
cmp
dec
jge
mov
stos
out
cmp
test
sub
and
cmp
ret
mov
pop
push
cmp
movsl
sarb
xor
dec
pop
xchg
and
popa
lcall
pop
jbe
mov
jb
xchg
imul
adcl
pop
aad
pop
and
mov
cwtl
push
or
aam
andl
hlt
cs
push
cmp
sub
xchg
rcr
ret
mov
out
into
fisttpl
cmc
pop
inc
xchg
and
rcrb
mov
mov
xchg
push
adc
cmp
mov
cli
ret
movsl
dec
pop
lret
je
jmp
push
test
adc
xlat
mov
sub
gs
out
repnz
sbb
fdivp
sti
mov
test
mov
insl
mov
adc
fwait
arpl
popf
lret
cmpsl
dec
lret
test
inc
xchg
cmpsl
popf
movsl
jge
dec
loopne
push
fmul
out
cltd
cmp
lds
orl
xchg
aaa
inc
lods
loop
js
mov
cmpsb
cmpsl
lea
pushf
sbb
lds
adc
adc
sub
xchg
addr16
pop
es
sub
cmp
adc
adc
inc
xchg
xor
in
out
lods
push
inc
movsb
in
sbb
jae
outsb
outsl
clc
jae
fmuls
fadds
andb
xor
negl
out
out
cld
sub
outsl
int3
mov
dec
mov
mov
cs
mov
mov
js
pop
jecxz
jnp
lret
popf
adc
mov
jge
enter
movsl
lret
lds
mov
sbb
cmc
pop
orb
fnstenv
push
mov
pop
call
vcvttss2si
mov
dec
push
adc
call
inc
flds
mov
dec
ja
mov
sub
and
push
nop
mov
test
pop
mov
lret
cmp
cmp
xchg
cltd
dec
mov
popa
cmp
jns
in
scas
int
dec
mov
push
pop
int
and
adc
lahf
jb
ret
movsl
sbb
pop
lods
mov
or
lea
cmp
add
mov
gs
xor
push
test
add
xchg
pop
in
pop
mov
mov
sub
jbe
sub
jns
jne
dec
cltd
cmp
pop
fistps
out
xchg
sar
movsb
popf
test
ficoml
iret
insl
test
stos
cli
push
cwtl
ret
mov
inc
add
mov
mov
jnp
ds
cmpsl
test
and
mov
je
fimull
popf
loop
push
cmpsb
xorb
sbb
mov
xchg
movsl
jb
mov
mov
xchg
push
jnp
loop
cli
dec
lods
insb
subb
adc
xchg
cmp
jge
push
mov
je
pusha
aad
lea
push
test
in
push
and
repnz
pop
int3
out
cmp
push
hlt
inc
sbbl
fwait
sub
or
loop
dec
jae
xchg
movsl
pop
adc
fcmovu
popa
jo
scas
xor
fisttpl
fsts
in
mov
cld
pop
xchg
dec
aaa
test
arpl
adc
cmp
mov
add
jne
cltd
xchg
in
pop
add
pushf
ds
loop
es
clc
jo
or
inc
fwait
push
inc
mov
mov
cmp
jns
cwtl
lods
mov
mov
inc
mov
cltd
sub
clc
mov
pop
leave
push
add
repnz
dec
push
xorb
pop
or
push
mov
lea
cmp
jge
fidivrs
fwait
mov
in
dec
and
or
movsl
insb
mov
push
outsl
push
jo
mov
popf
js
jns
imul
or
sbb
sub
sbb
or
mov
movsl
test
jp
push
gs
inc
es
arpl
cmpsb
sbb
mov
mov
inc
mov
fdivrs
into
out
repnz
sub
insl
push
xchg
xor
enter
sbb
sti
gs
pop
inc
fldcw
cmp
cmp
xchg
arpl
fisubs
add
cmp
test
push
push
or
push
xor
hlt
js
xorb
sbb
sub
call
mov
cmpl
xchg
loopne
test
and
aaa
and
add
cmp
dec
stc
mov
daa
jl
or
addr16
mov
mov
or
roll
xchg
mov
pop
or
jnp
popa
push
push
int
jge
or
xchg
cli
jb
call
jp
cmp
jge
add
xor
and
xchg
divb
mov
pop
pop
cmp
pop
mov
loopne
pop
fs
rol
push
incl
mov
popa
addb
sbb
popa
push
aam
adc
cmp
and
or
push
xchg
leave
mov
add
adc
fnstcw
add
pusha
xor
mov
scas
mov
cmpsl
pop
inc
gs
rorl
aad
dec
xor
fs
push
enter
out
xchg
xchg
xor
jno
or
mov
push
mov
test
mov
lahf
sahf
out
xchg
jle
add
and
sti
stos
data16
fisubrs
fstpt
pushf
fxch
shrb
shll
fiaddl
rcrb
scas
bound
ljmp
cmp
orb
ss
push
iret
ja
inc
shl
pop
insb
mov
inc
add
aad
out
push
les
push
lock
das
dec
dec
push
jg
pop
or
sbb
jne
cmp
push
xchg
cwtl
test
shl
pusha
pop
dec
lcall
mov
inc
push
in
nop
add
push
repnz
popl
dec
int3
add
and
ljmp
cmp
loope
inc
jp
dec
mov
inc
inc
xchg
repnz
std
push
subb
add
lods
sar
mov
arpl
mov
lods
push
jg
dec
and
enter
fdivs
inc
lock
sub
mov
repnz
jae
icebp
sbb
aam
aam
xor
call
lds
lds
mov
shll
pop
mov
dec
in
mov
int
insl
dec
loopne
sub
and
es
stos
jns
push
cmp
cwtl
repnz
mov
or
rcr
insl
xor
mov
inc
sub
add
lahf
xchg
repz
adcb
in
in
stos
jo
fisubrl
insl
jbe
out
inc
jecxz
jo
jmp
shr
jb
fiaddl
mov
mov
arpl
sbb
icebp
pop
xchg
test
mov
incb
aas
js
dec
push
and
mov
lret
xchg
enter
inc
inc
movq
stos
divl
cs
shll
mov
inc
mov
push
gs
ss
cmp
cmpb
xchg
psadbw
push
cmp
push
ret
inc
in
ret
pop
pushf
push
sarl
push
xchg
lods
push
imul
add
pop
mov
sub
xor
and
movsb
jg
sub
xor
mov
mov
jo
leave
cmp
lret
hlt
cltd
pop
dec
sub
js
imul
movsb
cmp
fwait
loop
imull
fstpl
adc
in
xchg
std
adc
cs
dec
adc
jl
inc
push
mov
add
test
pop
push
or
repnz
dec
xchg
sti
test
mov
jmp
sahf
inc
add
gs
ja
lcall
shll
daa
daa
inc
movsl
dec
jle
xor
je
outsl
sub
lods
jns
mov
mov
or
mov
out
test
sbb
sarl
mov
adcl
and
jmp
jb
mov
movsl
in
ficomps
ljmp
jno
in
push
lock
imul
push
mov
rcll
push
push
popf
call
mov
push
sbb
test
insb
mov
add
in
inc
popa
jl
jl
fsubl
mov
lds
pop
dec
loopne
pop
xlat
loopne
js
lret
cli
in
pop
xchg
int
imul
adc
mov
sub
lods
jge
pop
jp
rorb
insb
sbb
jo
scas
dec
cmp
dec
jae
pop
push
divb
outsl
fnstenv
cmpsl
inc
jg
mov
mov
faddl
inc
aaa
mov
pop
cmpl
mov
mov
mov
out
aas
adc
test
and
aad
or
mov
jle
adc
mov
jmp
dec
popa
or
xlat
push
fdivrl
adc
pop
adc
cmp
fistpl
sub
mov
popf
test
rol
out
push
cmp
andb
inc
mov
mov
scas
sub
cmp
lock
dec
sub
pusha
call
push
into
xor
and
imul
enter
push
sub
test
xor
jge
push
adc
sbb
adc
mov
stos
addl
je
in
pop
stc
pop
imul
jnp
push
int3
loope
subl
xchg
imul
data16
daa
dec
repnz
fimull
mov
scas
pop
pusha
icebp
testb
hlt
mov
movb
push
cmp
repnz
frndint
out
jns
ds
mov
or
hlt
shr
inc
movsb
xchg
repz
mov
adc
jnp
push
data16
cmp
pop
adc
sti
mov
idivb
lods
mov
fsts
push
nop
lret
xor
into
rcrl
lret
cmpsb
sbb
jge
add
test
and
lds
xchg
jbe
shll
in
fisubl
mov
add
fistps
ds
dec
pop
pusha
jns
xchg
jp
sbb
clc
cmc
xchg
xor
hlt
or
dec
push
stos
rcrb
movsl
lahf
xor
pop
jnp
adc
int3
imul
pop
or
mov
pusha
fwait
cmp
xchg
dec
in
das
and
in
cld
mov
sbb
sti
mov
mulb
ds
cld
imul
orl
sar
aas
mov
inc
das
xor
stc
add
xchg
loopne
cmp
add
adc
mov
xchg
add
sbb
push
dec
push
ss
filds
or
idivl
fistpl
mov
andl
test
sub
imul
xor
pop
ret
jmp
sub
pushl
cmp
mov
out
jne
js
leave
test
pop
jnp
sbb
pushf
cwtl
xorl
pop
nop
aaa
stos
jb
mov
inc
add
add
cmp
popa
pop
pop
xchg
and
arpl
in
push
xor
push
pop
out
fs
fs
push
push
xchg
inc
insl
outsl
push
insl
xchg
into
mov
addr16
mov
push
orl
rorl
into
jnp
std
sti
ds
div
arpl
or
aam
push
and
dec
test
dec
popa
rcl
das
sarb
scas
icebp
sahf
jbe
jp
dec
fwait
push
out
insb
pop
push
sbb
push
mov
test
sub
cmpsb
out
in
mov
inc
stc
adc
fidivl
out
cmp
jae
xlat
aad
mov
mov
mov
cwtl
pop
test
sahf
leave
mov
es
or
xchg
inc
push
mull
mov
shl
push
jge
sar
outsl
mov
fildll
decl
je
sti
adc
sbb
in
ret
pop
xchg
aam
inc
iret
gs
adc
xchg
push
daa
sbb
cmpsb
or
scas
std
fsubl
dec
dec
pop
in
dec
je
mov
repnz
dec
bound
inc
repz
stc
out
stos
push
cs
sub
addr16
sar
inc
repz
sbb
mov
mov
push
mov
or
sub
add
inc
sbb
frstor
js
cmp
out
shll
xlat
xchg
push
gs
lret
pop
cmp
hlt
int
push
mov
push
rcr
push
cmpsb
dec
mov
movsl
mov
lahf
popa
das
dec
out
mov
mov
loop
cmp
outsb
sbb
orb
movsl
stos
shrb
adc
fidivs
outsb
psrad
mov
jecxz
jge
enter
xchg
and
and
jge
pop
cld
mov
and
mov
or
sub
aad
mov
pop
sbb
jo
arpl
adc
fwait
enter
mov
sub
gs
add
xor
mov
stc
mov
adc
adcb
dec
mov
xchg
imul
mov
or
aam
add
jecxz
pop
test
stos
fcom
fisubrs
data16
je
mov
or
test
xor
mov
or
fbstp
pop
mov
clc
rsm
mov
pop
repnz
jecxz,pt
mov
test
flds
lods
pusha
sbb
mov
into
lods
enter
int
jmp
mov
popa
negl
lds
add
dec
add
mov
pop
jbe
mov
pushf
xlat
popf
push
lea
sub
loop
cli
inc
loopne
mov
push
cltd
cmp
adc
jno
data16
xchg
test
aam
movsb
mov
mov
fdivrl
push
jnp
inc
pushf
add
filds
xchg
aas
inc
cmp
sub
push
stc
leave
lret
repz
mov
aad
std
inc
inc
nop
dec
ja
pusha
and
test
lds
jo
leave
fimull
out
pop
adc
or
arpl
pop
jne
cmp
jns
add
or
cmp
repz
dec
sub
ja
push
aam
jno
test
mov
mov
adc
test
cwtl
sahf
ds
movsb
sub
mov
fdivrp
rolb
push
push
pop
jecxz
mov
fisttpl
push
adc
pop
mov
nop
xchg
test
negl
mov
mov
mov
adc
mov
ljmp
jb
sbb
movsb
add
mov
jno
mov
cmpsb
aam
les
aam
cli
mov
movsl
xor
rorb
loopne
adc
ret
sbb
inc
sub
xchg
xor
paddd
push
sbb
fidivrl
aam
in
sbb
and
mov
mov
lock
sbb
daa
sbb
add
jp
outsl
pushl
cmpsb
xor
leave
rcr
pusha
mov
bound
mov
sbb
jo
mov
jbe
fildll
xlat
es
sub
add
mov
dec
inc
mov
mov
int
fwait
add
popa
pop
sahf
imul
xchg
test
pop
inc
inc
outsl
cltd
insl
mov
push
cmc
xchg
sbbb
dec
mov
dec
js
xor
mov
cmp
outsb
int
jno
out
pop
adcb
mov
push
jns
insb
pop
adc
lods
bound
setno
lcall
mov
mov
jg
add
mov
inc
aad
push
mov
in
int
test
popf
mov
mov
inc
xor
sub
add
pusha
add
in
and
gs
mov
mov
jb
cmp
push
dec
pop
mov
cmp
ljmp
inc
mov
sub
call
pop
in
mov
leave
push
test
jae
pushf
pop
sub
push
or
loope
push
ja
gs
xchg
xchg
addl
shr
cmc
dec
addr16
or
xchg
pop
aam
ljmp
les
ret
negl
jge
mov
mov
fdivl
mov
xchg
int
mov
push
mov
mov
push
cmp
lahf
jle
popf
adc
adc
sub
jge
cmpsb
lods
cmp
imul
pushf
movsl
mov
adc
and
pusha
push
iret
or
xchg
sub
mov
push
push
popf
mov
xor
loop
sub
sub
inc
xchg
insl
addr16
or
icebp
pusha
mov
in
inc
mov
out
jge
scas
push
aad
jp
sub
xor
mov
sbb
xor
mov
xchg
fisubrl
pop
insb
pop
rolb
in
out
or
or
divb
in
and
or
xchg
stos
insl
pop
stos
pop
pop
jo
nop
mov
icebp
aad
and
ds
mov
in
das
dec
lods
test
jge
sbb
mov
movb
es
cmpsb
int3
das
add
inc
dec
cmpsb
pop
popf
daa
fisubl
sub
cmc
sbb
and
inc
repnz
aad
ds
or
out
jb
enter
out
or
xor
dec
int
mov
dec
mov
jmp
mov
push
and
scas
out
xor
insb
test
or
cld
xchg
mov
dec
lret
int3
xor
iret
fadd
jge
mov
mov
mov
lods
mov
sbb
add
jl
mov
sbb
dec
xchg
mov
sbb
adc
enter
pop
idivb
mov
add
push
ret
inc
pop
adc
adc
dec
mov
xchg
loope
fdivl
adc
push
pop
fisttpl
in
xchg
jge
shlb
xor
push
xchg
jbe
and
adc
xchg
mov
fiadds
in
xchg
negb
mov
or
cltd
fnsave
loopne
add
inc
sbbl
mov
loopne
js
pop
jno
and
pop
subb
cmp
lcall
sub
cs
lods
out
fisubrl
leave
or
test
seta
pop
leave
mov
dec
pop
dec
test
push
sahf
dec
mov
lahf
out
leave
outsl
add
jg
push
cmpsl
cld
bound
inc
cltd
fnstcw
and
jmp
jae
sbb
les
mov
xchg
push
sub
or
push
mov
adc
or
push
lds
mov
jnp
leave
xor
push
xor
std
cwtl
xor
cmpsb
xchg
pop
jns
jl
dec
inc
or
push
and
mov
and
jle
add
sub
xlat
xchg
xlat
lahf
addr16
call
std
mov
sahf
xor
fstl
mov
outsb
pop
aaa
lahf
xchg
in
add
and
push
subb
xor
in
dec
lds
sub
pop
arpl
cwtl
std
into
adc
push
jle
sub
sbb
negl
mov
cmpsb
or
bound
lock
sbb
jno
push
push
xchg
jp
subb
fs
repz
loop
andb
jns
push
test
test
sti
inc
push
gs
jecxz
int3
and
insl
jo
data16
dec
je
inc
enter
mov
xor
mov
mov
dec
or
mov
pop
pop
jnp
pusha
jb
or
pop
push
mov
fistpll
and
scas
and
mov
in
sub
cmp
lahf
ret
ficoml
inc
in
push
or
jb
add
aas
and
inc
outsb
jp
sbb
test
inc
mov
push
pushf
cwtl
add
and
lret
dec
enter
xchg
push
pop
mov
dec
pop
xchg
cmp
mov
jne
or
sahf
dec
in
data16
lea
mov
out
xor
cmpsb
jnp
inc
mov
push
fwait
inc
fwait
repnz
dec
outsb
inc
cmp
pop
jb
inc
sbb
dec
jo
cmp
movsl
inc
ret
pusha
mov
scas
and
movsl
mov
fnstsw
and
push
inc
fwait
sti
and
push
les
repz
fsubrp
lahf
pop
xchg
std
inc
jl
sub
xchg
xor
inc
repz
lods
or
sub
xor
outsb
aad
shll
mov
xor
imul
mov
imul
push
cmp
xor
ficoms
mov
ffreep
rolb
mov
dec
shlb
xor
mov
in
fcompl
popl
mov
add
jmp
test
repz
sub
sbb
adc
jne
xchg
sahf
mov
sbb
sahf
loope
mov
sbb
adc
ss
push
es
js
inc
lock
add
mov
xor
or
sbb
sbb
mov
pop
insb
imul
fs
sahf
and
and
mov
into
cmc
fists
mov
and
and
ret
or
stos
faddl
into
adc
jbe
mov
push
lahf
in
jl
mov
push
push
add
loope
mov
aam
pop
out
pop
mov
jmp
mov
mov
dec
sub
fadds
fwait
test
mov
push
or
adc
jne
mov
iret
dec
scas
and
mov
xchg
sbb
daa
fiaddl
adcb
popa
imul
mov
cmpsb
mov
mov
test
dec
push
mov
gs
outsl
repz
sbb
adc
sbb
lcall
or
repnz
inc
mov
sbb
repz
xchg
rclb
dec
xchg
mov
imul
test
inc
mov
add
or
xchg
or
out
lock
loopne
mov
sahf
jg
outsb
fbstp
mov
cld
pop
mov
jo
cmp
scas
mov
push
and
iret
ret
mov
inc
mov
mov
xor
sarl
mov
dec
data16
daa
fdivrs
pop
cmpb
mov
mov
into
or
cltd
adc
stos
pop
mov
mov
pop
sbb
shrb
mov
fidivrl
or
and
out
in
inc
out
and
stos
xor
sub
pop
lock
popf
dec
adc
das
mov
sahf
jns
jbe
push
jnp
dec
pop
outsb
lret
je
test
std
loope
dec
jb
fcoml
push
push
repz
mov
sbb
xor
fucomip
rclb
mov
fstpt
jl
fidivl
adc
mov
mov
mov
mov
adc
mov
adc
int3
cmp
lock
mov
gs
out
push
lret
sbb
mov
arpl
adc
jp
jmp
test
jo
push
aaa
ljmp
int
jo
cli
in
jg
fsubrs
sbb
jno
cmpl
rolb
cli
out
pop
shr
push
push
pop
mov
insl
pop
inc
cmp
rcrb
mov
dec
lret
mov
test
adc
icebp
jo
and
pop
xorb
mov
pop
mov
mov
adc
push
jae
and
sarl
call
repnz
pop
jno
movsb
push
enter
fs
jecxz
into
lock
jbe
dec
mov
xchg
and
cmc
lret
add
jae
jne
hlt
je
mov
pop
fistpl
addr16
jp
bound
pushf
xor
adc
hlt
jae,pt
pop
mov
sahf
mov
dec
dec
mov
dec
dec
xor
dec
sahf
mov
cwtl
xchg
pop
cli
push
sbb
les
les
sbb
rcrb
out
shl
pop
mov
mov
mov
sbb
xor
pop
in
mov
jbe
cmc
es
cmp
adc
out
test
dec
sbb
mov
dec
or
dec
hlt
or
push
fwait
pusha
clc
or
adc
pusha
and
js
cltd
ret
je
sti
popf
jne
jns
jecxz
xchg
push
xor
les
jle
adc
jae
out
fadds
inc
dec
adc
inc
mov
ljmp
aam
inc
jbe
sbb
cmc
sbb
sbb
in
dec
pop
test
movsl
mov
je
lods
mov
adc
push
inc
mull
pop
mov
pop
lds
cs
pop
cwtl
xchg
mov
int3
jne
out
push
in
mov
inc
adc
ret
dec
repnz
inc
fisubl
or
add
inc
xor
dec
lods
inc
daa
xorb
xchg
clc
mov
sub
decb
jo
dec
pushf
or
inc
aad
xchg
cmpb
leave
into
fidivl
fisubrs
add
das
pop
repz
lret
sbb
dec
jp
sub
loopne
and
push
fwait
paddw
ds
or
push
mov
test
sbb
pop
fwait
push
adc
fyl2x
sub
xchg
adc
lock
imul
lea
lahf
xor
inc
sub
aad
and
addr16
add
mov
fcompl
pop
rcll
scas
scas
int
xor
fdivrl
push
pop
xor
jge
call
inc
pop
lcall
xchg
jmp
sbb
hlt
addl
cmpsl
xor
and
adc
mov
xor
jno
into
ljmp
faddp
add
lcall
call
pusha
ja
sbb
sub
cmp
jo
lods
add
repz
adc
aas
push
out
jbe
mov
or
lds
sti
ss
xchg
arpl
jle
arpl
movzwl
cltd
sar
sbb
popf
outsl
stos
jne
subl
pop
push
pop
and
in
add
push
jmp
pusha
rcll
pop
xchg
cmp
xor
sbb
adc
and
pop
push
sbb
mov
aad
mov
jge
jns
test
mov
cmp
lahf
pop
mov
stos
imul
outsl
mov
hlt
jb
stos
jmp
xchg
sub
jno
loope
xchg
xor
stos
daa
pop
call
iret
cld
xor
cmp
sbb
lods
lcall
add
cmp
add
addr16
imul
mov
xchg
jmp
imul
popf
call
paddw
xchg
adc
shll
aad
jno
leave
mov
roll
inc
movsl
cwtl
xor
loope
ja
stc
push
mov
lret
pop
jbe
hlt
add
mov
adc
add
enter
nop
je
jg
ret
or
or
in
push
jbe
mov
sub
add
lds
sarl
aam
insl
lret
inc
call
scas
and
shll
jl
or
sbb
xchg
mov
mov
mov
cld
dec
jae
mov
and
pop
scas
xchg
mov
ja
dec
mov
imul
xor
inc
cld
pushf
pop
mov
fistps
add
gs
lret
mov
mov
push
test
std
lret
sbb
mov
cmp
pushl
and
enter
mov
sub
or
or
pop
adc
mov
sbb
xor
sbb
inc
out
test
insl
clc
adc
scas
push
rol
hlt
cld
imul
adc
shlb
push
xor
ficomps
sub
jns
push
push
add
xor
pusha
out
das
lcall
cmp
lods
adc
jns
test
dec
jg
dec
inc
aas
and
push
int
cmp
lahf
jne
xchg
fdivs
nop
add
fisubrs
scas
mov
jbe
adc
cmpsl
sub
inc
sub
cs
xchg
xchg
mov
aas
mov
in
cli
les
out
movl
mov
or
jno
sub
pop
dec
imul
in
shlb
fbstp
inc
inc
pushf
sbb
xchg
iret
and
lahf
dec
jg
lock
mov
cld
push
pushl
mov
add
leave
sbb
mov
and
xor
inc
or
cs
cmpl
mov
mov
fists
mov
xchg
dec
jmp
and
jno
add
ss
in
outsb
and
lock
dec
fsubrl
std
jl
xchg
jbe
mov
repz
mov
outsb
cmpb
gs
stc
cmpsl
mov
add
cmpsb
xor
pop
pop
push
and
jge
dec
add
fs
lods
jge
inc
jae
gs
enter
ficomps
sub
sub
xchg
xchg
stos
iret
std
outsl
sbb
neg
icebp
dec
and
inc
adc
bound
lret
xchg
arpl
inc
add
icebp
gs
push
or
xor
inc
add
push
mov
cwtl
inc
and
in
test
mov
lret
pop
pop
adc
pop
or
mov
pop
jne
aaa
mov
inc
jb
push
push
jl
rcr
xor
xchg
xor
mov
push
ffree
cmpsl
aas
and
mov
in
rcrl
in
jge
xor
add
mov
inc
inc
mov
inc
mov
inc
push
xor
rolb
add
mov
pop
mov
push
int3
icebp
adc
aam
xlat
xorb
cmc
sbb
jmp
in
std
leave
xor
mov
out
push
je
sub
pop
dec
and
xchg
je
insl
addr16
sti
push
mov
rcll
jns
rcl
pop
adc
ss
iret
push
pusha
stos
jl
and
pop
insb
inc
cmp
out
adc
lret
dec
fwait
fdivp
mov
push
add
popa
movsb
jmp
mov
imul
aaa
sbb
stos
icebp
cli
outsl
or
dec
ljmp
push
xlat
movsb
into
mov
push
shl
sub
sbbl
jle
mov
cmpsl
xchg
adc
mov
sub
dec
sub
imul
rcll
xchg
cltd
mov
ds
roll
cmpsl
jno
fwait
mov
push
scas
dec
or
mov
fnstenv
jno
cmpsb
mov
xchg
add
aam
test
mov
xchg
dec
mov
xor
movsl
cmp
int
inc
xor
mov
cmp
jb
fiaddl
call
mov
jle
cs
inc
lret
or
inc
pop
lea
mov
and
shrb
or
mov
jmp
loop
adc
test
jae
daa
call
lods
mov
mov
sahf
inc
mov
sahf
es
cmpsb
adc
lea
pop
mov
push
xchg
das
jecxz
mov
sbb
pushf
clc
test
push
fsts
xchg
mov
sbb
and
repz
cmp
add
stc
mov
xor
or
clc
mov
or
test
jg
loope
xchg
cmc
sub
testl
jne
pusha
inc
fs
jne
aaa
test
rclb
aad
cmpsl
pusha
aam
cmp
mov
cmp
aad
and
cmp
mov
push
scas
repnz
cmp
mov
dec
xlat
cli
inc
loopne
fsubl
mov
mov
xchg
pop
sbb
int
loope
jecxz
jo
xor
arpl
lahf
mov
jne
outsb
stos
push
lods
mov
mov
in
int
add
xchg
mov
fsubrs
hlt
push
push
jecxz
lds
in
cwtl
xchg
mov
insb
and
xor
mov
leave
push
nop
cmp
lret
or
adc
stos
lahf
cmp
jle
notl
push
and
mov
out
fstpt
pop
scas
data16
mov
inc
or
jns
jb
mov
fdiv
xor
jns
das
pop
and
ljmp
dec
xchg
fisttpl
insl
pusha
adc
jecxz
adc
cmp
gs
cld
cs
and
cmpsl
mov
dec
pushl
mov
les
sbb
pop
cltd
mov
inc
rorb
lock
lahf
pop
or
loope
dec
movsw
or
aaa
push
jecxz
and
pop
repnz
pop
scas
test
add
pop
push
aad
mov
test
pushf
dec
movsb
addr16
mov
ljmp
adc
mov
ljmp
inc
shl
sub
xor
std
inc
insl
sahf
cmpsb
dec
pop
xchg
into
stos
lods
cmp
xor
data16
adc
popf
sub
pusha
xchg
mov
jno
jmp
adc
push
sti
jmp
add
mov
jp
sbb
mov
ljmp
push
test
and
bound
and
adc
mov
push
pop
ss
lret
or
mov
cmpsl
sub
arpl
jp
inc
fs
mov
pop
enter
xor
aam
cltd
lock
sbb
repnz
fdivrl
adc
mov
leave
scas
xor
pop
xor
sbb
and
pusha
ficompl
push
loopne
or
mov
dec
and
clc
shlb
lahf
scas
xor
sub
cltd
lret
ret
jb
jns
push
rcrb
jnp
pop
jnp
cmpl
rcrb
pusha
cmpsl
ficompl
jecxz
cmp
dec
pop
jg
cmp
outsl
js
or
and
ja
fidivs
mov
pop
xchg
push
insl
xor
jbe
leave
jg
xor
inc
push
cli
stc
icebp
mov
and
dec
loop
xchg
stos
push
dec
daa
jge
add
add
aaa
adcl
or
loopne
aam
push
test
leave
mov
or
in
les
dec
sbb
out
nop
out
jno
sti
jp
mov
popa
xor
cwtl
aas
adcb
sub
cmpsb
fcom
sahf
mov
sti
imul
out
orb
push
cld
xor
mov
aas
cmc
lcall
inc
imull
mov
dec
jecxz
xlat
mov
pop
ja
pop
push
movsl
xor
arpl
in
inc
in
push
cld
xor
jns
or
lret
pop
test
push
addr16
xlat
dec
and
daa
test
loope
adc
push
lahf
xchg
lea
pushf
cmp
test
mov
pushf
add
add
jle
sbb
shr
add
xor
mov
or
or
push
divb
mov
ss
fdivs
dec
or
push
mov
out
inc
movsl
and
ret
and
and
bnd
and
loope
adcl
and
cwtl
mov
sub
out
sub
shlb
test
lock
daa
inc
negl
cmp
fstpl
xlat
das
jmp
arpl
loopne
or
iret
cmp
jbe
stos
adc
inc
pop
or
xor
cmpsl
cmp
imul
popa
ret
sti
mov
popf
inc
int
fadds
xchg
inc
push
inc
mov
test
cmp
orb
and
push
repz
fdivrl
ret
andl
outsb
inc
jno
dec
cld
loopne
pop
inc
jecxz
sbb
repz
jmp
cmp
fs
dec
popf
stc
jg
scas
xor
xchg
jl
mov
sahf
dec
jl
mov
ljmp
sbb
std
mov
xor
inc
dec
xchg
inc
stc
push
arpl
push
subb
enter
jno
imul
leave
fmulp
inc
pop
icebp
fwait
imul
pop
int
popa
mov
xchg
iret
scas
fcomps
int3
ret
test
sub
jp
in
push
dec
push
sub
div
roll
outsb
loopne
cmpsb
jg
loope
jg
or
xchg
movsl
in
hlt
dec
fs
or
mov
push
stc
shr
push
sahf
dec
dec
fucom
mov
xor
das
pushf
cld
and
cmp
xlat
mov
jo
and
cmp
call
inc
ret
imul
xchg
into
ds
xchg
pop
inc
leave
xchg
or
shrb
outsl
xchg
push
pop
in
xorl
and
adc
xchg
into
outsb
push
pop
add
push
ds
imul
aad
pop
or
xchg
fstl
out
int
shlb
fisubrl
movsb
sahf
xor
or
scas
ss
jmp
dec
loope
hlt
adc
xor
sti
pop
hlt
lret
mov
dec
pop
adc
dec
adc
rorb
push
nop
scas
push
cld
fisubrs
xor
xor
push
sbb
sbb
jmp
xor
inc
and
lods
jb
decb
lock
lds
sbb
dec
push
inc
add
pop
sub
add
call
xchg
icebp
jge
jo
pop
pop
aad
inc
sub
loopne
aas
mov
repnz
fstl
scas
adc
jmp
int3
jne
test
inc
xor
sbb
push
int
xor
sbb
xchg
aas
add
scas
stc
imul
add
ror
jo
stos
or
xchg
mov
mov
mov
jle
pop
jl
scas
pushf
jmp
and
pop
ja
mov
lods
out
jge
cmp
adc
inc
mov
inc
sub
enter
rol
sub
in
sbb
xor
inc
jg
jnp
ljmp
test
dec
cmpsl
ja
mov
sbb
sbb
add
insl
mov
int3
movsl
mov
mov
xor
xchg
xor
je
and
lahf
add
mov
jle
add
sub
mov
fldl
into
mov
into
pop
lods
imul
xchg
sbb
into
adc
adc
sbb
xor
pop
xor
xor
rclb
test
inc
dec
icebp
scas
call
in
js
and
aas
loopne
test
cmp
dec
movsl
fucompp
or
xor
push
cmp
out
fmull
jo
cld
sbb
jns
fistl
out
jb
js
xor
sarl
lahf
les
and
mov
jnp
fwait
cwtl
movb
sbb
and
iret
popa
shlb
xor
pop
jl
int3
daa
fistpl
cmp
test
jge
jno
shrb
cmpsb
jo
aas
insl
pushl
fs
or
add
pop
push
cli
stos
mov
jge
es
mov
pop
xor
or
pushf
sbb
fld
out
and
cmp
jmp
inc
add
add
imulb
mov
gs
adc
and
je
fldcw
ficoms
lahf
xchg
push
test
sbb
jp
filds
adc
in
fs
adc
cmp
mov
add
xchg
popf
cmp
xor
adc
jnp
stc
pop
sti
jecxz
jns
mov
dec
sub
xor
stos
push
jnp
mov
mov
push
jle
hlt
test
mov
leave
mov
or
dec
aas
test
test
or
ffreep
movsb
push
cmp
bound
pop
fucomp
sub
sub
sbb
out
mov
or
iret
lret
xchg
insb
sub
mov
or
sbb
sbb
movsb
test
mov
sub
jle
lock
in
test
adc
mov
outsb
mov
cs
jae
mov
in
push
dec
cltd
ja
rep
stos
stos
or
mov
cmpsl
adc
xchg
bound
test
inc
test
insb
int
sub
sbb
outsl
jo
sbb
pop
push
scas
fcompl
dec
add
sub
inc
xchg
push
arpl
fsts
ffreep
pusha
mov
fisubs
aas
cmpsl
orb
push
push
aas
pop
fldcw
pop
cmpsl
std
mov
xchg
jg
pop
popa
sub
sub
add
loope
adc
imul
or
lods
xchg
outsb
daa
lret
dec
fs
sti
imul
jb
fbld
pop
je
sub
add
call
cmp
arpl
xchg
pop
sahf
xor
pop
pop
scas
pushf
and
pop
loop
dec
pushf
popa
lahf
lcall
cmp
out
adcl
pop
mov
inc
bswap
int3
sub
rcrb
outsb
sub
push
push
add
mov
xchg
add
mov
insb
push
push
movsl
push
lods
test
fmuls
mov
movsl
and
sbb
lcall
fcomi
inc
jl
ret
lods
test
int
loop
out
pop
pushf
or
cmp
mov
or
add
fsub
push
xchg
adc
aam
popf
mov
decb
adc
xchg
decl
sbb
xor
sub
das
data16
rorl
aaa
ljmp
ja
mov
das
or
adc
sub
ja
inc
bnd
xchg
in
xchg
jae
or
roll
adc
sahf
mov
mov
push
aas
ret
push
insb
imul
or
mov
lret
cmp
jnp
mov
jp
adc
mov
stc
in
sub
mov
popf
hlt
fisttpl
push
mov
leave
xor
shrl
test
pop
dec
cs
add
scas
inc
adc
insb
lret
dec
add
mov
loop
dec
jb
lods
stos
xlat
sub
add
inc
xor
sarl
add
or
mov
dec
xchg
out
xchg
mov
enter
dec
xor
pop
adc
mov
leave
xor
int3
xor
stos
das
cmp
jae
icebp
clflush
in
ljmp
in
pop
adcl
inc
jl
ror
sbb
roll
enter
imul
mov
xor
rorl
and
or
fldl
sbb
ja
stos
or
cwtl
into
add
aas
sub
inc
fisttpl
jge
xor
rclb
outsl
sbb
data16
jg
adc
mov
dec
ret
adc
sbb
out
xor
sbb
jge
adc
addb
sti
pop
xchg
fidivrs
sar
fnstsw
inc
inc
shll
in
das
call
imul
pop
mov
cwtl
cwtl
add
fistpll
jne
pop
cmpsb
push
fstl
jp
xor
ja
push
push
out
pop
mov
sbb
mov
outsl
mov
pop
mulb
mov
neg
pop
out
icebp
mov
inc
xor
arpl
subb
mov
int
sub
xchg
push
adcb
mov
outsb
in
dec
loop
mov
mov
and
aaa
ds
fiadds
fbstp
sub
enter
mov
int
mov
dec
repnz
test
mov
pop
dec
aad
ror
popa
xor
xor
push
push
mov
mov
jmp
pop
popf
sub
mov
xlat
fnstcw
imul
cwtl
mov
ds
mov
jle
jmp
inc
xor
fdivs
test
dec
sub
mov
jnp
loop
ror
cmpsl
sbb
fcmovne
insb
dec
in
lock
dec
nop
cli
and
into
arpl
adc
lds
loop
mov
jp
pop
mov
je
insl
out
lods
add
xlat
dec
mov
test
shl
mov
inc
push
mov
xor
jle
pushf
mov
ret
push
push
jb
fwait
mov
jnp
push
push
popf
insl
cmpsl
lahf
mov
lds
loope
sbb
pop
xor
pop
sub
mov
fucomip
mov
arpl
hlt
aam
fcomp
loop
scas
or
adc
insb
ja
push
mov
dec
lahf
sbb
push
and
int3
xchg
inc
jmp
repnz
push
je
cmp
ja
scas
shl
setle
cltd
hlt
xor
cmpsl
cmp
or
xchg
out
pusha
push
in
icebp
add
jo
out
mov
sbb
mov
inc
xor
adc
mov
fsubrs
imul
pop
push
cmp
sbb
in
dec
inc
xchg
pop
das
cmpl
inc
mov
inc
push
dec
mulb
adc
inc
test
xchg
ret
lea
or
dec
lea
clc
mov
mov
aaa
xchg
movsl
cmp
mov
lcall
push
test
insb
cmpsl
jg
aas
cmp
daa
fwait
sbb
out
add
in
mov
movsb
outsb
jg
fcomi
push
xchg
les
inc
pop
sbb
inc
xchg
adc
inc
mov
mov
out
fsubrs
and
cmp
jmp
mov
inc
inc
enter
or
lcall
cmp
shl
dec
inc
arpl
inc
xchg
enter
jmp
sbb
mov
or
cmpsb
inc
push
int
outsb
lds
jle
mov
lahf
ret
add
shlb
jle
in
shl
lods
popa
cmp
ss
xor
xor
or
scas
dec
mov
pop
scas
pop
jno
in
sub
aaa
push
mov
out
mov
lock
pusha
xor
push
int3
jo
mov
sbb
mov
scas
rcrb
cmp
scas
dec
pop
rorl
test
jecxz
sub
fidivs
pop
dec
inc
enter
fsubr
sbb
xchg
leave
mov
cmc
push
push
lods
test
pop
mov
test
data16
mov
jbe
imul
xor
mov
jae
mov
mov
push
ja
jge
cs
mov
int3
addr16
test
xchg
insb
hlt
jmp
out
pop
adc
aas
cmp
adc
lea
inc
imul
mov
sbb
add
addl
jae
sbb
pop
adc
ficoml
push
push
mov
cs
daa
pushf
adc
push
adc
sub
add
iret
push
cwtl
out
out
pushf
fists
pop
cmc
inc
jmp
mov
repz
jmp
orb
add
int
out
add
inc
movsl
jae
sub
xor
scas
stos
andb
push
or
xchg
mov
jbe
shlb
fadds
pop
repz
shrb
jge
std
fwait
or
orb
das
ret
movsb
scas
je
cmp
xchg
xor
adc
into
mov
sub
xor
in
out
dec
adc
jmp
cli
xor
cmp
xor
mov
cmp
dec
push
sahf
jo
push
call
mov
and
adc
pop
mov
cwtl
out
jnp
inc
fisubs
mov
push
jmp
push
jecxz
shr
in
sub
pusha
dec
lret
cmc
jno
mov
imul
pop
adc
ret
or
add
stc
testl
cmp
and
sbb
xor
inc
ja
pop
and
push
ret
push
out
scas
mov
faddl
lret
cltd
nop
xor
xor
out
inc
scas
pop
sahf
and
clc
cmp
push
and
cltd
xor
pusha
jne
mov
xor
data16
pushf
add
loopne
sub
xor
call
push
addl
imulb
loopne
popa
xor
enter
jbe
jb
divl
movsl
cs
rcrb
and
inc
lods
ja
sub
dec
and
arpl
fistpll
pop
addr16
jmp
lods
movsl
je
lock
sbb
aaa
lret
test
data16
icebp
xchg
and
sarl
pop
xlat
aas
cmp
lret
aad
sub
jp
push
stos
mov
mov
push
xlat
xchg
dec
ja
gs
mov
mov
or
or
in
dec
fidivl
call
lret
xor
xchg
cltd
stos
cmc
inc
add
paddsb
jns
arpl
or
addl
jns
jge
inc
inc
inc
mov
inc
adc
or
xor
lret
inc
movsb
aas
and
mov
bound
jno
in
fstpt
and
insl
pop
sub
cltd
scas
mov
pop
jnp
popl
mov
cltd
cmp
push
or
cwtl
mov
sbb
sbb
sbb
mov
fs
inc
cmc
lahf
push
sub
or
addl
divl
in
repz
jmp
loopne
inc
sub
mov
movsb
sbb
das
ja
loop
jb
out
out
aad
addr16
aaa
inc
into
popf
mov
mov
fs
lds
push
push
lret
jno
mov
fs
jbe
pop
dec
and
mov
je
or
es
pop
jg
sub
lods
int3
aas
xor
aaa
std
dec
ficoml
push
cld
and
int
std
jmp
or
subl
testb
xor
hlt
cmp
push
cmpsl
pop
iret
and
adc
push
stos
andb
or
scas
dec
bound
divl
lret
xlat
lret
lret
add
jns
pop
mov
and
dec
inc
pop
pop
sbb
arpl
mov
pop
test
in
cld
cmp
add
jecxz
shrb
mov
cmovge
mov
shll
and
std
fistpl
cmp
lock
and
fwait
in
ficomps
and
into
cmp
fdivr
daa
sub
mov
ret
pop
in
sub
ffree
sub
int3
test
push
jle
test
xorb
cmpsl
push
cmp
mov
sahf
push
movsl
mov
cwtl
dec
or
les
inc
jae
push
jbe
cmp
or
lahf
andnps
and
fmul
xchg
push
mov
xor
popf
or
jne
pop
testl
sub
aad
add
xchg
ds
lea
shll
lret
popf
ja
addr16
inc
sbb
jnp
clc
icebp
inc
aad
jge
mov
dec
xor
and
movsl
movsl
pusha
test
sahf
mov
jge
inc
sbb
imul
movsl
iret
dec
ja
pop
lret
cmp
stos
adc
loop
sahf
shll
xor
xor
push
cwtl
xor
loopne
mov
out
lcall
ljmp
xor
inc
aas
pop
mov
mov
sti
push
fldcw
popf
sarb
loope
cmp
cltd
test
jb
sbb
mov
jb
inc
test
fnstenv
shlb
cmp
adc
jo
inc
inc
fistl
ret
insl
or
sahf
and
inc
jb
pop
xor
aas
jmp
cmp
aam
dec
inc
xchg
inc
lret
or
pop
cmpsb
js
je
jge
mov
popf
pop
jae
pushf
repnz
and
lret
pop
mov
ss
not
movb
shr
scas
fsub
ss
push
push
lock
scas
mov
jl
cltd
ds
scas
jae
ja
inc
mov
inc
cld
pop
nop
mov
leave
inc
ljmp
iret
mov
jbe
imul
mov
adc
mov
inc
rol
call
xor
test
pop
sbb
mov
or
dec
sbb
das
fcomp
mov
sub
movsl
scas
lea
xchg
mov
dec
clc
enter
mov
mov
lods
push
and
cld
sub
subl
outsl
add
mov
cmp
ss
jle
push
or
xor
sbb
or
in
stc
xor
mov
xorb
mov
cmp
sbb
insb
gs
pop
mov
fdivs
in
arpl
add
jge
sarb
repz
lock
repz
cmp
push
mov
imul
fldcw
sub
jmp
mov
mulb
xor
aas
nop
inc
push
imul
cmpb
inc
std
rcl
pusha
fs
xchg
in
mov
fldt
cmp
jmp
cltd
incb
mov
leave
sbb
icebp
mov
in
je
fmuls
stos
adc
inc
insl
pop
push
and
jae
loop
call
sbb
pop
cmc
nop
jg
shl
arpl
in
repz
inc
cmp
mov
cwtl
ja
mov
sahf
xchg
ret
lahf
cmp
inc
mov
jge
lret
test
bound
dec
insl
mov
push
rcl
adc
push
shl
data16
aad
int3
adc
cs
adc
and
mov
stc
enter
dec
popa
pop
sbb
sub
insl
sub
pushf
inc
and
add
add
lods
mov
lea
pop
cmp
mov
movsl
aam
push
ffree
dec
test
leave
xlat
mov
pop
iret
xchg
pusha
mov
mov
shll
repz
movsb
daa
add
push
in
in
xchg
xchg
jge
or
lock
mov
jl
xor
aas
adc
movsb
pusha
iret
cmp
push
shrl
push
addb
mov
sbb
mov
shlb
add
cwtl
mov
jno
subb
mov
fwait
cmp
lea
imul
mulb
mov
stos
ljmp
shrb
cmc
iret
fs
inc
xor
enter
xor
add
into
daa
repnz
push
pop
push
or
adc
adc
mov
daa
ss
stos
jo
lock
les
fstpt
fldenv
sub
jmp
outsb
cmp
cmp
add
push
jo
push
cmc
sbb
cmp
std
sub
push
ja
lahf
fnsave
pop
mov
shl
mov
xor
dec
mov
xor
cmp
adc
sbb
cmp
sub
nop
adcl
out
lods
sti
push
daa
out
add
fstpl
idivl
movsb
test
test
jmp
arpl
push
mov
or
cmpsl
xchg
push
push
mov
push
lock
mov
xor
add
push
mov
mov
mov
aam
pop
mov
pop
pop
bound
cmp
dec
aas
inc
negl
movsl
movsl
mov
outsb
stc
andb
inc
repnz
sbb
jge
rcll
xchg
adc
cmp
cmp
test
add
mov
jecxz
lret
loopne
dec
jge
mov
sti
and
jo
leave
ror
mov
daa
dec
es
ret
adc
test
pop
push
test
arpl
sbb
or
lods
jb
or
arpl
push
bound
jmp
jge
pop
negb
mov
shrb
sub
ds
jecxz
popf
std
mov
pop
mov
adc
sub
scas
hlt
push
out
sbb
or
mov
cwtl
pushf
jns
push
xchg
loope
addl
inc
lods
popf
add
adc
push
mov
mov
dec
fsubrl
scas
push
cld
movsb
add
sbb
aaa
cmc
lods
pushf
lret
sub
pop
fimuls
dec
fisubrs
loopne
xchg
call
push
lods
fimull
mov
xchg
cmp
aad
dec
sbb
call
mov
movsl
cs
arpl
mov
add
cli
mov
test
rcr
add
fmulp
mov
pusha
movsl
movsw
fdivr
js
cmp
addr16
mov
mov
in
or
in
loopne
push
mov
jb
nop
incb
xorb
sbb
push
js
mov
or
mov
loope
in
mov
sahf
cmp
leave
dec
lcall
xor
push
inc
sahf
addl
outsl
adc
adc
xor
jle
outsb
xor
and
mov
lcall
sbb
movsl
loopne
dec
loopne
xor
mov
test
out
sbb
mov
inc
test
fidivrs
inc
xor
xor
lock
pop
iret
or
loopne
cmp
inc
or
lret
xchg
cmp
jns
in
lods
daa
aas
rcrb
into
cmpsb
inc
push
inc
pop
mov
add
inc
sbb
rorl
adc
shl
test
mov
sbb
pop
jecxz
xor
sti
inc
mov
pushf
or
pop
ljmp
push
mov
pop
add
mov
push
lods
xchg
mov
in
jnp
mov
dec
sub
sub
mov
lcall
dec
jmp
inc
mov
cmpl
push
inc
rcll
xchg
js
jmp
into
arpl
adc
nop
out
dec
ret
xlat
movsb
or
cltd
loopne
and
xchg
fsts
in
xor
imul
and
or
lret
mov
out
xchg
cmp
dec
bound
cmp
add
out
mov
xchg
bound
inc
decl
cld
stos
jnp
testl
inc
into
sarb
xchg
and
inc
add
cmp
arpl
dec
sbb
or
unpckhps
xchg
mov
xor
pushf
xor
in
fidivrl
lcall
or
daa
mov
in
jne
fldt
arpl
cmp
mov
push
cmp
inc
cmpsb
add
orb
roll
dec
jp
xchg
es
inc
cwtl
inc
loopne
mov
xor
dec
dec
in
in
mov
test
fiadds
cmpsb
xchg
fbstp
mov
pop
pusha
movsl
outsl
pop
scas
iret
inc
cli
in
cmp
fidivrs
leave
pop
daa
xchg
sbb
mov
testb
cltd
and
xchg
push
movsl
sbb
mov
mov
movb
mov
jl
cmp
adc
out
rol
sub
pop
sub
in
cmpsl
aaa
fcomi
pop
inc
push
push
mov
nop
dec
scas
stos
mov
loop
icebp
inc
xor
mov
js
mov
cmp
jmp
adc
jle
sbb
lock
xor
jo
mov
insl
mov
mov
adc
lods
rcrl
or
pop
sub
in
fstpt
pop
out
inc
inc
dec
push
pop
xchg
cmpsl
sbb
cs
clc
mov
adc
cmc
jl
ret
and
loop
xchg
fdivl
fldcw
mov
test
imul
pand
imul
adc
xchg
dec
icebp
adc
cmpb
push
lcall
jb
hlt
fisttpl
negb
in
jg
imul
in
cwtl
shll
popa
sbb
hlt
or
outsl
adc
adc
das
push
bound
pop
lcall
outsw
lret
adc
cmp
jae
pop
pop
repz
sbb
sub
stc
enter
and
sarb
add
aaa
fistl
pop
std
icebp
add
mov
cmpsl
cmp
or
imul
cmp
mov
lahf
inc
icebp
sbb
into
lret
sar
sub
mov
nop
jecxz
pusha
les
pop
cmpsl
or
insl
lret
ret
mov
jge
rcr
in
aaa
mov
sub
test
xor
in
sbb
lea
or
dec
sbb
test
xchg
test
daa
dec
sbb
hlt
es
sbb
aaa
in
arpl
sub
pop
js
fistpl
mov
jbe
popf
scas
pop
ret
jmp
add
lcall
xchg
sub
out
jmp
fs
pop
int3
cmpsl
cmpsl
lds
mov
fimuls
ret
pop
cltd
inc
test
fcompl
shl
and
xor
and
out
loopne
sbb
pop
dec
ret
ds
repz
push
movsb
inc
pop
insl
jle
push
xorb
jl
outsb
adc
mov
mov
fiaddl
aam
sbb
jbe
movsb
pop
sbbl
fists
add
test
mov
mov
daa
cmp
lea
pop
dec
cmc
adc
subl
cmp
loop
inc
inc
inc
outsl
in
add
mov
js
jne
lahf
sbb
jne
pop
rcl
repz
or
in
sub
sbb
pusha
sub
push
js
and
adc
loope
out
adc
sbb
sub
lret
leave
sub
les
sub
das
push
test
and
repnz
xor
sbb
mov
lea
jnp
sbb
push
mov
ret
ljmp
xchg
pop
push
out
mov
xor
outsb
icebp
adc
inc
jno
stos
scas
adc
xor
out
inc
insb
out
xor
pop
push
test
js
pop
aaa
daa
jo
test
outsb
rolb
ficomps
adc
or
in
xchg
mov
insl
lret
mov
mov
mov
sbb
gs
lock
xchg
dec
mov
sub
pusha
gs
mov
shlb
jmp
sti
pop
push
std
out
or
push
cmp
and
lcall
push
jmp
js
std
mov
out
and
lret
inc
mov
xchg
daa
cmp
subb
dec
mov
out
sbb
xchg
and
je
fldl
mov
jae
call
dec
in
iret
lret
pushf
xchg
xlat
or
cmp
push
ret
fisubl
or
mov
aam
or
fmulp
movsl
stos
sbbl
mov
ret
imul
ja
fldenv
icebp
dec
sarl
cwtl
xor
jno
lahf
shrl
pop
movl
mov
mov
or
aam
in
or
repnz
inc
call
int3
imul
mov
rolb
or
cwtl
femms
sbb
pop
fisttpl
xlat
and
adc
push
mov
les
ljmp
hlt
rcl
out
mov
call
mov
mov
jecxz
xchg
pop
pop
add
push
subb
mov
into
mov
pop
leave
pop
sarl
push
insl
outsb
adc
jo
cld
xchg
daa
scas
cli
pop
cmp
add
insb
insb
mov
or
fisubl
test
pop
inc
je
lahf
ljmp
lods
mov
gs
xor
jl
or
in
push
popa
dec
ja
jo
jns
outsl
inc
xchg
aad
mov
lret
dec
add
mov
xchg
ds
int
push
negl
fsubrs
dec
hlt
sub
push
sub
jecxz
sub
adc
mov
shrb
pop
sarb
dec
sub
inc
test
mov
xchg
sub
lret
shll
mov
rcll
test
dec
push
js
in
dec
cmp
fs
cltd
add
bound
jl
fnsave
sbb
mov
inc
push
test
and
fisubrl
outsb
pop
movsb
jne
and
sub
mov
rcrb
imul
add
das
in
jnp
test
pop
test
shrl
inc
mov
mov
pop
adc
xor
sahf
imul
stc
imul
fwait
ds
sti
iret
clc
xchg
out
sub
xchg
dec
push
iret
sbb
adc
fwait
xchg
iret
mov
dec
sbb
xor
mov
and
add
sqrtps
jp
add
leave
pop
cld
fistps
or
arpl
mov
push
mov
adc
xchg
mov
aam
push
testl
xchg
add
into
xchg
dec
sti
cmp
hlt
mov
fstl
push
fisttps
xor
sbb
dec
adc
iret
xchg
push
mov
xchg
aam
fldl
mov
ljmp
mov
mov
icebp
rcr
test
cmpsl
roll
loop
sbb
fcompl
sbb
jne
js
psrlq
cld
cli
pop
fsub
mov
data16
rclb
icebp
push
adc
sub
inc
cmpb
mov
mov
repnz
fsubl
xchg
test
inc
mov
repz
adc
pop
outsb
pop
adcb
xor
dec
imul
jno
addb
and
xchg
ljmp
rolb
mov
and
sti
clc
sbb
xchg
das
andl
xchg
jne
push
std
jbe
push
sub
int3
stos
test
cmp
adc
mov
xchg
outsb
in
mov
dec
adc
das
dec
adc
and
hlt
sbb
repnz
stos
dec
pushf
push
jae
rcl
das
ror
mov
popa
fmuls
out
cmpsl
stc
cmpsl
mov
insb
sub
sub
aam
movsb
in
mov
dec
mov
push
aaa
lea
ss
out
and
hlt
test
out
pop
mov
imul
adc
aaa
test
frstor
push
mov
fcmovu
cmp
in
inc
jl
dec
or
jle
es
mov
sbb
inc
ds
xchg
jnp
lods
repnz
inc
mov
stc
mov
sub
mov
addr16
and
les
jg
xchg
fmuls
imul
add
in
mov
imul
nopl
mov
ja
cltd
jmp
gs
sbb
lock
sub
sub
mov
inc
xlat
hlt
aaa
xchg
cs
mov
dec
mov
dec
sub
push
outsb
mov
mov
int3
ds
enter
bound
lcall
inc
not
xor
movsl
stos
movsl
clc
pushf
enter
aaa
sbb
insb
push
jno
dec
jge
clc
dec
xchg
popf
inc
push
fnstcw
repnz
mov
mov
int
aad
add
cmp
mov
ja
mov
nop
and
cmpl
cmp
jecxz
sub
sub
jge
int
add
shr
mov
add
dec
adc
xor
rcll
add
push
aam
outsl
inc
jle
xchg
jbe
sub
sub
mov
jne
and
inc
insl
mov
pusha
xchg
sbb
mov
out
out
mov
ds
test
mov
push
shlb
push
aas
adcl
jbe
xchg
shll
xchg
insb
sbb
push
add
loope
push
fildll
loopne
and
ret
sub
lds
ljmp
cmp
mov
test
aaa
jne
dec
cmc
mov
in
clc
and
lea
xchg
adc
clc
push
call
mov
push
mov
ret
in
mov
fs
iret
jno
fwait
test
outsl
test
aam
sbb
mov
cmc
fiadds
and
arpl
jno
andl
xchg
and
shrb
cmp
in
pop
pop
jmp
stos
loopne
fdiv
and
add
sbb
aad
lea
inc
pop
cmp
push
jl
dec
outsb
xchg
js
ret
ja
lods
mov
or
xor
add
jle
inc
inc
fstps
subl
adc
mov
mov
adc
sub
mov
xor
ret
in
add
movsl
mov
jbe
pop
aam
mov
mov
or
adc
pop
test
out
fcompl
icebp
ret
ret
shl
popf
cltd
add
adc
cli
add
scas
or
jns
xchg
daa
leave
dec
inc
cmp
mov
ja
push
cltd
lret
and
mov
push
mov
frstor
or
jne
gs
fcom
jg
insb
adc
outsl
dec
mov
push
xor
movsb
dec
and
push
mov
js
nop
les
cmp
jnp
es
jb
lret
aad
inc
cmpsb
outsl
pop
sub
xor
jae
stos
icebp
and
pop
fwait
sub
xchg
fmuls
or
jns
and
fmuls
dec
or
mov
subb
sub
out
loope
arpl
or
push
push
int
xchg
xor
push
xor
ljmp
in
push
pusha
xor
lods
xor
push
dec
fs
addl
sti
lret
cwtl
mov
sbb
cld
pushf
int3
in
ja
aam
sub
xor
dec
sub
sbb
in
pop
sub
dec
push
mov
xor
inc
dec
cwtl
inc
xchg
adc
pop
sbb
cmp
and
sti
inc
negb
or
mov
push
push
out
adc
lods
out
repz
fwait
sub
loope
jae
dec
jne
sbb
sub
or
fstps
pop
cli
adcb
arpl
jno
mov
xlat
outsb
test
mov
and
enter
icebp
mov
out
push
es
int3
fmull
imulb
inc
arpl
test
xor
cmpsl
mov
sub
aam
pusha
mov
cmp
popa
mov
add
push
insb
mov
jg
sub
sub
insl
das
mov
xor
jne
push
mov
imul
add
mov
dec
sti
and
cmp
aam
jp
fwait
and
pop
out
ret
inc
les
paddusb
push
test
test
add
scas
imul
mulb
inc
dec
les
fstp
cmp
shll
out
inc
add
mov
and
mov
outsl
pop
mov
xchg
and
sarb
inc
cmc
push
jp
bound
test
data16
scas
pop
fcomps
int
pop
mov
mov
pop
sbb
lods
push
mov
outsb
inc
int3
mov
inc
lea
outsl
mov
enter
bound
outsb
outsl
sbb
and
andl
sbb
xchg
icebp
jb
lahf
fiaddl
pop
movsl
pop
push
mov
or
into
shl
push
out
jecxz
or
jbe
xchg
mov
add
jl
cmpsl
mov
inc
cmp
jecxz
loopne
cmp
sbb
scas
es
test
ret
lahf
mov
xlat
xchg
bound
lret
lds
dec
std
clc
icebp
jp
inc
dec
mov
sub
or
aaa
addr16
popa
jl
imul
stos
mov
dec
inc
hlt
add
sbb
mov
into
mov
inc
out
sub
outsb
xchg
fisttpll
xor
lret
dec
sbb
out
xchg
rcrb
loope
mov
jp
mov
pop
shlb
icebp
and
xor
sub
ror
or
cli
xor
aaa
fldt
test
xchg
gs
das
out
mov
mov
adc
loope
inc
les
sbb
pushf
mov
jp
mov
pop
inc
and
or
in
cwtl
lock
bound
sub
adc
sti
mov
scas
xchg
daa
dec
adc
add
xor
scas
verr
aaa
inc
popf
pop
pushf
mov
cs
int3
mov
pop
in
out
insb
push
outsl
int3
nop
xlat
fidivs
icebp
es
xor
out
mov
sub
fwait
std
imul
int
mov
xchg
mov
mov
pop
sub
jge
sahf
and
push
scas
stos
pop
faddl
jmp
xchg
sub
push
sbb
xchg
mov
sahf
dec
fsubs
inc
repnz
inc
dec
imul
inc
mov
scas
mov
stos
lret
out
xor
and
xchg
pop
js
cmpsl
xor
or
in
pop
mov
mov
sub
fstps
and
add
pop
or
data16
ds
in
jns
push
shlb
loope
mov
mov
addb
add
into
xchg
mov
push
inc
jge
mov
call
shlb
jb
cmpsb
mov
orb
hlt
repz
rclb
and
add
cs
cltd
dec
xchg
jecxz
xchg
into
in
pop
insl
dec
dec
mov
add
sahf
jge
jl
add
mov
add
xchg
mov
fisttpl
jo
inc
fisubrl
dec
push
jle
adc
xchg
outsl
outsb
mov
fsubs
dec
cltd
mov
dec
push
and
lods
andl
repnz
mov
enter
push
das
sub
mov
js
adc
aad
adc
or
sub
sbb
outsb
dec
pushf
xacquire
mov
subl
lods
ja
repnz
jge
in
cmpsl
xlat
mov
pop
or
mov
cmp
xchg
and
pop
pop
mov
lds
push
mov
std
popa
lcall
sbb
pushf
in
jge
mov
aad
cmp
in
and
in
xchg
ds
sbb
ss
push
movsl
aaa
mov
dec
fcmovbe
movsb
cmp
mov
in
in
cmpsb
mov
arpl
sub
xor
jmp
addr16
add
mov
sub
stos
imul
mov
fiadds
sbb
sar
jl
cmpsb
inc
inc
and
sbb
pop
or
gs
mov
push
dec
jg
fwait
stos
mov
xor
adc
cmpsl
jae
dec
mov
cmp
push
daa
mov
aam
mov
out
dec
dec
jle
test
xor
inc
stc
mov
call
mov
mov
mov
push
clc
push
jb
push
adc
test
loop
pop
lock
lds
inc
andb
lods
loopne
dec
push
enter
mov
out
adc
scas
mov
adc
xchg
leave
pop
mov
das
jle
cltd
cs
ja
in
fisubrs
pop
jns
push
xor
imul
decb
jnp
mov
retw
adc
shlb
jae
pop
pop
outsb
arpl
sahf
pop
in
mov
xlat
pop
cwtl
and
lcall
add
test
and
push
lret
add
int3
add
stc
sbb
loope
adc
lret
sar
jecxz
cmp
sbb
adc
jne
add
adc
rcll
insb
outsl
pop
imul
ret
and
jns
xchg
daa
loopne
out
popf
pop
xor
push
gs
push
push
pop
mov
adcl
jae
mov
pop
push
jne
jge
pop
and
enter
xchg
pop
jb
push
enter
insb
fiaddl
mov
stos
inc
or
or
xchg
inc
stos
pop
sbb
fadds
inc
xchg
loop
inc
shlb
test
jge
mov
stc
cmpl
or
repz
es
js
int3
dec
mov
testb
movsl
lea
imul
cli
xchg
popa
addr16
idiv
pop
rclb
pop
in
stos
lret
jo
lcall
jmp
inc
pop
cli
scas
clc
xchg
dec
mov
mov
hlt
scas
icebp
mov
lcall
int3
test
bnd
cmp
imul
shlb
add
pusha
shrb
jae
jne
or
sbb
add
or
mov
ljmp
mov
popf
add
out
int
mov
cmp
push
or
xchg
cltd
insl
mov
insl
and
xchg
lret
ljmp
inc
push
dec
push
cmp
jns
adcb
flds
sahf
stos
push
mov
in
jmp
dec
je
and
mov
xorl
stos
call
popf
sub
repnz
xor
add
jno
push
shlb
hlt
repnz
push
cmp
jmp
or
sub
xlat
ja
rcrl
lret
inc
sbb
fcomi
mov
xchg
push
sub
and
cmpl
xor
jp
dec
testb
xchg
jecxz
sub
push
pop
mov
mov
xor
or
adc
jg
jne
daa
jne
sub
dec
pop
cmp
sub
loop
out
pushl
pusha
pop
dec
dec
addr16
pop
mov
pop
clc
jle
sahf
pop
and
push
pop
outsb
sbb
mov
adc
mov
ss
in
inc
xor
mov
fildll
clc
negb
push
xor
sbb
popl
dec
negb
lods
enter
cmc
lret
push
push
mov
mov
testl
jns
popf
sub
dec
in
push
je
int3
fmull
pushl
cld
and
jp
xor
sahf
cmp
cli
sub
fpatan
frstor
cld
xchg
and
lcall
aaa
inc
andl
pop
mov
sbb
mov
neg
jl
ds
jl
cmp
or
cmpsb
pop
add
xchg
push
sbb
pusha
sub
dec
xor
or
lds
dec
pop
popf
lcall
movb
ficomps
rcr
fwait
fwait
ret
subb
ss
dec
sti
dec
xchg
sarl
xchg
pop
mov
dec
sbb
lock
push
mov
insb
pop
out
pop
fisubl
ret
popf
les
mov
push
cmp
or
or
clc
mov
loop
sub
aaa
in
mov
cmp
fwait
mov
mov
test
jb
fiadds
or
mov
mov
movsb
mov
lods
sub
xchg
mov
mov
or
div
movsl
sbb
out
fwait
lret
mov
ja
xchg
fisttpll
push
xlat
into
out
mov
cmp
sbb
lods
cmpsb
insl
lahf
nop
dec
dec
lret
out
sbb
cld
fisubl
mov
les
jmp
jge
pop
fdivl
mov
je
int3
enter
cmp
jne
test
js
xor
cmp
cmp
movsl
pop
imul
mov
in
pusha
inc
pop
mov
mov
pop
xor
popl
lods
test
mov
in
or
cmp
icebp
lea
dec
cmpsl
das
lock
imul
enter
xchg
fiaddl
and
popa
in
rclb
jge
cmpsl
fwait
pusha
adc
mov
mov
mov
ss
pop
mov
test
sbb
rorb
stos
add
int
cmpsb
repnz
adc
dec
jae
test
or
into
inc
stc
test
mov
popa
push
out
mov
add
push
adc
repz
pop
stos
rcrl
fmull
insb
arpl
mov
mov
push
mov
enter
movsb
repnz
jl
js
push
push
add
cmp
push
jge
pop
fdivrs
arpl
mov
cmc
addr16
pop
push
push
repz
mov
rolb
xchg
cmp
iret
in
add
cmp
ds
mov
dec
ja
or
popf
pop
and
xor
sub
push
repnz
subb
dec
out
pop
mov
dec
push
nop
pop
scas
es
xor
outsb
xchg
mov
call
andl
cmpsb
sbb
out
pop
jno
mov
les
mov
sub
into
sahf
pushl
mov
pop
or
mov
cmp
gs
inc
dec
mov
xchg
repnz
movsb
mov
daa
push
adc
push
or
jns
out
mov
xchg
in
jo
xchg
es
push
inc
test
stos
fstpl
mov
xchg
jne
sub
mov
add
sub
aam
mov
data16
and
int3
cwtl
jg
clc
sbb
fidivrl
test
pop
outsb
pop
dec
dec
mov
icebp
dec
fstl
lcall
sub
rorb
fwait
jmp
pop
mov
fimull
xor
and
push
rclb
push
dec
xor
lret
xchg
cmp
adc
cwtl
jae
jae
mov
ret
fdivs
cli
scas
aad
je
push
in
push
cli
mov
ss
push
ret
mov
pop
popf
cmc
sti
jmp
js
jl
push
inc
push
push
sub
or
repnz
jg
add
xchg
sub
imul
pop
jmp
xlat
fildl
add
mov
or
std
or
pop
push
xor
fwait
mov
or
daa
loop
mov
mov
push
push
arpl
movsb
stos
jnp
cltd
pop
test
mov
lcall
dec
call
xchg
sbb
fstps
in
cmpsb
jae
add
outsl
sub
addr16
pop
dec
xchg
js
test
sub
push
in
aad
or
or
imul
fbld
in
in
mov
ss
aaa
popa
inc
or
cmpsb
flds
out
les
mov
aaa
xor
scas
out
pop
sub
lret
jecxz
push
mov
das
sub
push
insl
mov
lahf
push
push
into
fdiv
shrb
data16
call
cs
add
iret
cmpsl
mov
nop
adc
scas
pop
nop
mov
std
jno
cld
xchg
hlt
and
dec
add
or
in
popf
lods
std
sub
sahf
rcr
subl
incb
pop
sbb
andb
add
push
xor
outsl
push
sbb
pushf
out
xchg
dec
push
xchg
or
mov
pusha
insl
pusha
add
pop
cmp
dec
inc
sbb
cld
push
jp
dec
pop
push
and
dec
fstpt
ret
sbb
adc
in
in
sbb
push
sbb
xchg
lods
sub
or
push
mov
push
pusha
ret
ds
adc
mov
add
cmp
mov
aad
aad
add
mov
popf
ficoml
rcrl
inc
inc
jae
mov
out
repz
mov
lahf
movsb
mov
inc
mov
pop
fistpl
xlat
pop
cmp
adcl
ret
in
ret
mov
call
xchg
leave
lods
cmpsb
push
enter
mov
inc
dec
sub
dec
and
pop
loopne
fst
cwtl
lds
test
push
aad
pop
xor
jne
sti
imul
out
shrl
flds
insl
jno
mov
inc
mov
pop
mov
xor
dec
int3
mov
fstpl
and
js
add
scas
jae
and
scas
push
xchg
jbe
cmp
ficomps
jb
les
mov
lret
les
and
jnp
mov
cs
fdiv
stos
mov
cmp
xor
or
std
xchg
js
and
push
add
int3
bound
push
dec
lods
arpl
inc
mov
orl
add
mov
cmp
je
cld
inc
out
mov
push
mov
xor
xor
or
push
xor
xchg
pop
fwait
popl
cli
out
popa
out
decb
and
and
fwait
mov
iret
iret
movups
inc
xor
mov
and
push
sbb
movsb
mov
inc
cmpl
shll
in
fwait
rcr
rcll
fisubs
jb
fs
push
test
adc
icebp
into
pushf
cmpsl
sub
jg
inc
jo
orl
bound
out
inc
gs
jmp
repz
adc
scas
sub
sahf
call
mov
out
mov
or
push
jge
out
and
test
adc
jno
push
ja
ja
clc
dec
mov
adc
mov
pop
dec
mov
mov
repnz
mov
pop
into
mov
icebp
push
inc
sti
stos
dec
loope
mov
popf
add
in
lret
loop
test
mov
in
add
inc
cmp
out
mov
pop
and
sub
jecxz
push
or
mov
repz
lods
in
xor
cmc
popa
dec
stos
mov
dec
adc
pop
sub
mov
push
out
scas
add
loop
shrb
lret
or
inc
sub
and
pop
movsb
jmp
iret
rolb
push
aad
jns
jno
jp
clc
outsb
adc
inc
rorb
mov
xlat
popf
xor
adc
out
push
pushf
lahf
idiv
or
call
bnd
and
mov
cmp
outsb
inc
ja
pop
add
aas
push
loopne
pushw
ja,pt
pop
daa
mov
or
idivb
lret
mov
and
lcall
pmulhuw
popf
mov
icebp
or
mov
bound
xchg
imul
and
fdiv
jmp
decl
lret
sub
iret
add
and
push
sub
jge
add
icebp
jl
mov
mov
push
lds
cmp
into
fisubrs
cmp
sbb
cli
lock
cli
std
enter
mov
aam
ljmp
pop
aaa
mov
rolb
shr
es
aam
lods
fs
jo
nop
fidivrs
sub
pop
mov
adc
or
dec
mov
sub
ljmp
jecxz
and
sbb
int
jmp
lret
sbb
out
les
outsb
out
fistl
pop
xor
adc
popa
mov
ss
hlt
dec
scas
jbe
dec
ret
jne
movsl
out
data16
fnstenv
cmp
mov
inc
and
jno
push
mov
test
fnsave
imulb
cmp
mov
add
push
cltd
jp
pop
movsb
call
iret
mov
fwait
imull
test
xchg
stos
push
filds
cmp
adc
xchg
or
lret
pop
xchg
sbb
and
inc
mov
rcrb
sti
shll
sbb
nop
cli
int3
sti
repnz
sub
lods
jg
fdiv
adc
cmpl
lds
push
ret
fists
and
lahf
push
addr16
and
out
mov
add
jecxz
adc
jle
pop
cs
xlat
cld
nop
arpl
adc
mov
adc
jno
push
mov
in
jl
mov
movsb
push
sub
dec
cmp
outsb
adc
add
clc
out
fsubrs
psubd
gs
imul
dec
pushf
jns
pushf
mov
or
ret
adc
aam
test
into
inc
ficoms
jle
mov
gs
out
in
jg
stc
cld
js
fisubs
aam
js
pop
jo
lea
mov
adc
mov
stc
cli
or
sub
push
pop
adc
dec
cmp
cld
into
in
sbb
mov
lret
mov
lods
jg
inc
mul
clc
mov
leave
call
ds
fidivs
and
xor
aaa
or
inc
mov
push
idivl
scas
mov
lret
icebp
mov
xchg
xlat
sahf
js
cmpsl
test
repz
mov
cmp
and
sbb
jge
aaa
lcall
add
cmpsb
lahf
popa
inc
dec
aam
cmpl
ljmp
pusha
cmp
int
mov
daa
mov
movsl
cmp
jo
aas
stos
mov
fwait
pusha
js
adc
sbb
push
jns
sub
adc
aam
mov
pop
pop
xchg
loop
ljmp
xorb
fsts
adc
xor
repnz
outsl
push
hlt
mov
in
in
adc
cmpsb
aaa
mov
movsb
lcall
mov
and
int3
pop
jae
in
dec
decl
or
je
or
outsb
mov
cli
out
stos
lret
mov
cmpsb
mov
sub
push
and
or
in
lahf
shlb
sbb
jns
jp
int
stos
insl
and
cltd
das
sub
repnz
pop
inc
mov
cld
jecxz
sahf
mov
ret
dec
faddl
in
int
loop
ss
movb
sub
lea
xchg
outsl
mov
in
stos
push
in
lret
out
inc
ljmp
arpl
jl
push
mov
and
push
mov
shl
push
mov
mov
xchg
inc
inc
cmp
inc
xor
stc
mov
imul
xchg
enter
imul
dec
push
xchg
sarb
pop
xchg
and
mov
arpl
sub
mov
cmp
or
jl
inc
outsl
inc
fisubs
or
ds
loop
jmp
mov
je
xchg
test
imul
movsl
jb
push
aaa
shll
mov
enter
mov
jae
sub
js
adc
rcr
push
jp
sbb
cld
mov
loope
sub
mov
cltd
int3
mov
sub
test
stos
shrb
pop
push
cs
sbb
fs
popa
rorl
aas
cmpsl
add
mov
add
push
ds
dec
mov
aaa
jb
cmp
int3
je
cli
cmpb
adc
sbb
xchg
inc
loope
add
lds
ret
bound
cmp
je
sbb
add
ficoms
stos
aaa
xchg
lret
mov
add
testb
mov
out
push
dec
stos
jno
dec
mov
mov
shlb
cmp
in
adc
outsl
adc
mov
push
pop
rorb
push
icebp
xchg
push
push
test
jb
and
dec
lods
iret
or
mov
jnp
rcrb
cltd
jg
int3
cmpsl
pop
stos
test
xor
mov
stos
dec
push
lret
xor
xor
jp
testl
mov
hlt
popa
loope
jg
cmp
je
sbb
hlt
stc
orl
jns
add
dec
into
addb
add
stos
inc
and
xor
xor
inc
xor
mov
jg
inc
aam
fwait
pop
or
mov
mov
or
jne
push
bound
mov
adc
jmp
add
lret
add
pop
scas
lcall
mov
and
xchg
add
fists
ds
mov
and
push
test
xor
lock
push
push
or
sub
mov
or
xchg
out
dec
mov
fbld
xor
insb
aam
into
push
mov
cmp
aam
inc
lahf
mov
je
sub
dec
inc
jb
xor
daa
stos
add
subb
push
xor
fimuls
ss
mov
and
mov
lea
repz
xchg
andb
andb
cmpsb
push
std
add
jmp
mov
sarb
cmpsl
aaa
push
je
stos
fwait
push
or
mov
roll
adc
jp
push
jb
cmp
adc
insl
bound
inc
adcl
xor
xchg
outsb
aad
xor
xchg
adc
out
out
fs
mov
je
test
xchg
iret
pop
fildll
mov
in
mov
mov
cmpsl
xor
popf
pop
dec
xor
add
stos
les
or
popa
fs
mov
push
add
ret
sti
jo
insb
je
xor
sub
mov
sub
or
jg
es
in
jmp
push
add
movb
popf
jnp
jge
roll
mov
lock
mov
cmp
das
add
pop
push
lret
loopne
sub
push
xchg
stc
xor
sbb
pushf
mov
xor
fwait
inc
stc
in
xor
leave
fs
xor
jge
sub
jl
sub
pop
xor
dec
mov
iret
jecxz
loop
cmpsb
mov
push
outsl
push
mov
jae
push
arpl
cs
and
mov
sub
adc
das
nop
inc
out
loopne
iret
push
inc
leave
lods
inc
and
test
add
out
scas
push
sub
cmp
fwait
dec
mov
inc
std
pop
mov
divl
sbb
pop
cld
mov
mov
jp
jge
iret
cmp
repnz
adc
add
xor
cmp
jecxz
in
inc
sbb
repz
push
cmp
loopne
mov
lret
loope
jne
lret
test
in
push
mov
nop
add
dec
xor
dec
dec
pushf
mov
into
inc
add
subb
xor
xor
testl
lret
cwtl
mov
add
xor
xorb
jo
cli
outsb
lods
lret
push
inc
lock
xor
es
xchg
inc
push
jo
push
ljmp
inc
or
sub
cmp
cltd
loopne
lcall
repnz
sub
push
push
stos
cmp
pop
dec
fcoms
insb
mov
out
testb
pop
sub
mov
xlat
insb
jbe
push
imul
xor
stos
out
sbb
or
data16
in
push
push
dec
pushl
push
xchg
loopne
mov
mov
jbe
cwtl
and
outsl
out
insb
jne
popa
mov
push
std
out
mov
jl
dec
mov
sbb
mov
jno
iret
gs
cli
and
cmc
add
mov
popa
push
mov
in
adc
xchg
inc
adc
bound
inc
imul
icebp
mov
push
enter
pop
mov
jb
push
xor
and
insl
in
scas
push
xor
adc
jl
push
mov
or
outsl
adc
xchg
dec
mov
scas
jmp
jecxz
inc
xlat
repnz
cmp
adc
adc
mov
xchg
lret
push
sbb
test
push
xchg
inc
aaa
addr16
repz
jmp
enter
in
adcb
ds
add
push
in
lcall
fadd
jne
lds
test
subl
jae
in
mov
dec
cmp
outsl
cmp
pxor
pop
cmpsl
push
cld
xchg
cmp
or
or
mov
xorl
inc
or
inc
xor
inc
stc
sbb
insb
clc
push
mov
out
adc
imul
popf
and
je
outsb
xor
mov
mov
iret
outsl
inc
jg
pop
and
jle
push
mov
aad
dec
xchg
mov
mov
pushf
inc
scas
mov
sub
mov
sbb
cmp
pop
inc
loope
idivl
xchg
shr
fsubrl
pop
adc
mov
dec
cwtl
stc
mov
stos
lret
sbb
and
push
pop
jecxz
aad
jne
mov
xor
popa
cmp
leave
xchg
pop
out
ja
imul
pop
jecxz
test
pop
mov
daa
xor
xchg
xor
dec
ficoml
jne
sbb
and
in
fistl
popa
xor
pop
push
ss
cmp
insb
lock
repnz
push
enter
mov
jl
push
mov
add
pop
into
stos
repz
jae
xchg
push
jb
mov
or
stc
mov
mov
ds
es
push
movsb
dec
xor
mov
aaa
inc
inc
and
mov
sub
mov
pop
adc
ret
push
inc
add
lea
pop
cmc
in
lcall
loopne
mov
and
insb
mov
add
push
jo
cwtl
arpl
push
or
cmp
xlat
fsubrl
cwtl
out
test
sbb
es
push
xchg
dec
insb
fisttpll
out
mov
jge
add
push
stos
mov
or
in
sbb
sub
push
rorb
enter
popa
cmpsl
lcall
pop
out
sbb
imull
out
push
andb
ds
add
fnsave
jae
and
sub
dec
jmp
nop
jl
or
shrb
dec
sub
int
or
pop
cli
and
or
imul
mov
add
inc
in
sub
pop
push
lods
test
push
shlb
cmpb
loop
adc
outsb
mov
xor
adc
sub
inc
xchg
out
movsb
cmp
mov
outsl
mov
dec
inc
pusha
testb
cmp
push
xor
xchg
inc
sub
sub
fbstp
lea
leave
pop
mov
mov
pop
adc
cmc
in
leave
cmc
push
xor
lds
jmp
push
aas
iret
repz
and
bound
mov
sub
add
jns
xchg
xlat
es
xor
sub
ret
daa
xor
leave
push
bound
popl
imul
xchg
fidivrl
dec
cmp
pop
xchg
cmc
fadd
push
dec
xchg
hlt
push
dec
aaa
aas
test
outsb
repnz
icebp
loope
mov
inc
mov
test
sarl
lret
adc
cwtl
loope
mov
mov
dec
xchg
or
lcall
xchg
add
in
push
cmpsl
aaa
push
lds
xor
outsl
icebp
sub
sub
mov
fmull
dec
std
sbb
sub
sbb
xchg
mov
add
mov
or
fiadds
fidivl
cmp
mov
xor
pop
out
dec
xor
out
pop
enter
sahf
jno
jmp
stos
push
or
popf
sub
popa
pushf
xchg
add
addb
dec
subl
es
mov
rcrb
jecxz
sbb
nop
gs
cmp
insb
push
mov
add
out
popf
int
cmp
adc
pop
in
or
cmp
mov
into
mov
aaa
cmp
stc
jns
or
movsb
push
cltd
jne
out
push
fnstenv
ja
fcoms
add
add
inc
in
push
test
xchg
icebp
push
ljmp
es
out
call
dec
fxch
and
dec
aam
ret
sub
imul
push
imul
fcoml
and
cmp
jle
dec
and
push
dec
push
adc
mov
std
mov
stc
dec
sub
xchg
scas
test
add
mov
bound
push
icebp
mov
sub
movsl
inc
pop
push
bnd
push
dec
mov
lret
mov
scas
inc
repz
ja
cmp
les
mov
jg
cli
pop
les
and
cmp
mov
mov
repz
dec
mov
repnz
add
lcall
scas
icebp
and
jmp
movsl
xchg
nop
push
ss
and
ror
decb
call
jno
aas
cld
xor
aaa
outsl
fsts
xchg
sbb
mov
clc
scas
testl
dec
cmp
outsl
es
xor
jmp
out
mov
push
fdivr
pop
loope
addps
mov
daa
sahf
sti
jns
ret
jge
ret
inc
push
outsb
loopne
adc
shr
fisubrl
jl
mov
inc
sbb
xchg
sbb
lock
pushf
pop
mov
jmp
aas
sar
jmp
pop
stos
push
pop
mov
push
jae
lret
nop
movsb
xadd
hlt
aad
add
mov
fdivrs
ljmp
add
clc
fldt
inc
sub
mov
jnp
lahf
xchg
xchg
test
ret
lahf
and
fldl
add
pop
mov
sub
sub
cli
adc
xchg
push
add
out
outsb
mov
push
test
dec
push
cmp
add
fdivs
lods
dec
orb
push
ficoml
sbb
lahf
pop
sub
loopne
dec
jecxz
cmp
test
sub
imul
rorb
call
push
add
mov
mov
push
jae
stc
mov
and
push
data16
addr16
or
inc
push
jle
push
sub
jecxz,pt
inc
mov
cmpsb
sub
xchg
icebp
cmp
xchg
mov
sub
jmp
movsb
fists
sub
xor
xchg
ror
lods
push
arpl
scas
movsl
add
nop
jmp
pop
jg
out
rcr
sahf
mov
mov
mov
aas
add
mov
es
loop
les
dec
and
push
inc
cli
add
in
and
dec
xchg
add
cmc
push
mov
inc
leave
xor
mov
scas
jo
movswl
or
pop
sub
insl
punpckhwd
cmp
jbe
jbe
or
mov
sub
divl
mov
ret
ss
adc
test
ja
test
std
add
and
insb
push
push
pop
das
out
mov
icebp
push
fdivs
movsb
insl
pop
mov
push
adc
sbb
mov
rcll
xchg
test
jge
inc
dec
in
shr
in
and
pop
mov
push
sbb
pop
cmp
outsl
xchg
fcoml
insb
push
mov
andl
xor
cmp
js
add
xor
lea
push
sahf
adc
xchg
adc
mov
xor
cmp
push
leave
imul
sub
add
mov
clc
lods
pushf
out
or
pop
jmp
pop
in
add
hlt
clc
sarl
xor
rclb
inc
lret
mov
adc
push
fadds
imul
dec
cmc
push
xorb
out
out
inc
adc
into
jnp
cmp
add
xlat
lcall
insb
das
lods
dec
pop
sub
dec
xor
lds
sbb
mov
stc
pushf
dec
jae
sbb
test
jnp
add
cmp
int
mov
test
lcall
fistl
xchg
sbb
pop
push
sbb
inc
mov
mov
xchg
push
mov
sar
dec
out
fiadds
mov
test
cli
mov
icebp
pop
in
adc
or
push
dec
lahf
and
sub
sar
jmp
push
cwtl
xor
fs
sub
dec
mov
in
into
jns
ljmp
dec
cli
pop
jge
push
rcll
push
jp
int
shll
jno
mov
outsl
jl
dec
dec
or
sbb
insb
aam
pop
sahf
mov
test
push
xchg
movsb
mov
pop
mov
push
into
pop
sub
aad
das
pop
mov
inc
inc
ds
fmuls
inc
mov
ds
mov
aaa
and
lea
roll
fisttpll
mov
mov
aas
xchg
repnz
test
cmc
mov
push
das
mov
sbb
jecxz
cmpsb
mov
xor
mov
lock
push
aaa
add
dec
lret
cmp
rclb
sarl
jecxz
aad
ss
dec
dec
jae
cld
pushf
insl
dec
pop
les
ljmp
adc
fsubl
test
or
sub
aad
int
std
dec
inc
dec
fdiv
gs
cli
lahf
dec
mov
and
int3
out
out
pop
rcrb
mov
xor
dec
outsb
fs
mov
outsb
and
fs
mov
std
and
mov
and
std
push
dec
int
adc
inc
dec
dec
out
call
in
dec
loopne
das
sahf
out
jp
test
mov
jge
cmpb
pop
sbb
sub
in
fsts
insb
push
and
cmpsl
test
mov
push
fabs
je
sbb
mov
push
xchg
movsb
jle
or
insb
out
mov
ljmp
pop
andl
test
loopne
push
xchg
jp
hlt
cmc
push
cmpb
inc
scas
stc
mov
add
mov
mul
test
pop
mov
movsl
xchg
cmp
and
mov
pop
ss
or
pop
inc
sbb
rcr
mov
mov
stos
test
xor
inc
sarl
hlt
imul
adc
ja
xchg
pusha
addr16
jbe
mov
stc
jp
sub
push
jb
lock
mov
pusha
aas
into
jl
loopne
lea
leave
inc
cmc
insb
jge
fsubs
jmp
lcall
pusha
call
jo
pop
leave
mov
sbb
fdivs
test
das
push
pop
sbb
push
mov
xor
push
inc
sahf
adc
es
cmpsb
movb
push
int3
rcrl
push
ret
icebp
mov
adc
pop
and
sarl
roll
jge
ljmp
or
add
je
jne
pusha
adc
cwtl
gs
pop
into
mov
pop
stos
loopne
push
lock
pop
or
lret
jge
pop
call
insb
in
test
xchg
insb
orb
pushf
shrb
jge
dec
cmpsb
mov
pop
cmp
cs
out
jge
jbe
ror
jno
adc
mov
mov
adc
jne
lods
cmpsb
outsl
addr16
sub
mov
xchg
stc
rorl
push
and
sti
cmpl
ret
leave
mov
cs
lea
and
clc
cmp
mov
cwtl
stos
cmpsb
jo
shr
adc
scas
push
aam
mov
jle
scas
sahf
rcr
sbb
jecxz
je
xchg
and
xor
insl
out
out
cmp
mov
and
dec
fidivl
xchg
das
cmp
inc
xchg
push
imul
fdivrs
mov
inc
jnp
adc
or
scas
test
jecxz
dec
scas
sar
jle
lcall
scas
and
roll
push
aad
mov
popa
subl
clc
repnz
adc
inc
shrb
xlat
jb
sub
movsl
call
out
xchg
imull
cs
push
std
mov
test
addr16
sbb
jmp
inc
sub
subb
add
mov
test
mov
xor
dec
xchg
test
mov
and
movsl
jp
out
stos
mov
lea
lcall
xor
callw
lret
mov
in
ss
xchg
sub
insb
cmp
xchg
and
js
push
adc
cld
lea
mov
icebp
jne
jns
jo
pusha
std
push
push
ret
adc
xchg
addr16
arpl
mov
xorl
je
scas
or
pushf
xchg
pop
sbb
stos
add
mov
jae
sbb
jo
mov
enter
push
loope
adc
sbb
test
cltd
xor
xchg
cmp
and
cmp
or
push
fildll
mov
fsub
out
ret
push
lods
mov
xor
sub
ficomps
cmp
mov
pop
jecxz
pop
dec
testl
aas
xor
gs
jle
cmpsb
imul
nop
mov
dec
mov
add
subb
orl
dec
lret
mov
jb
fwait
mulb
fidivl
minps
stc
inc
jae
inc
mov
ret
or
xlat
xchg
test
insl
loopne
lahf
aas
or
mov
jb
inc
jbe
insb
dec
or
ljmp
cmp
in
into
lret
cs
aad
inc
jbe
xor
adc
xlat
ret
mov
mov
jnp
inc
cwtl
adc
add
ljmp
sbb
inc
and
lock
imul
inc
dec
or
jge
mov
adc
inc
fldcw
repz
dec
repnz
xchg
sub
cmp
mov
mov
fnstcw
mov
repnz
mov
sub
cwtl
mov
inc
pop
lods
cli
fwait
aam
imul
xchg
imulb
inc
arpl
dec
pushf
popa
sahf
sub
dec
cmovl
fistps
cs
in
push
xor
fnstsw
push
dec
sub
mov
cltd
dec
popf
ficoms
test
gs
movsb
adc
clc
and
add
out
shll
mov
cmp
insl
loopne
dec
inc
sbbl
aas
divb
jns
and
cmpl
aaa
xor
push
aam
push
dec
cmc
js
xor
push
sub
outsl
xchg
jp
jmp
negl
in
ret
mov
jmp
popa
cmp
ret
dec
stos
lock
cmpsl
cmp
scas
push
pop
jae
push
test
and
rorl
sti
imul
mov
cmc
outsl
xor
dec
shl
shrb
cmpsl
mov
mov
fs
sbb
leave
loope
je
idiv
pop
ret
mov
mov
xor
inc
movsb
ds
movsl
mov
lds
decl
or
dec
test
cmp
mov
dec
dec
inc
ja
push
mov
push
jmp
push
and
pop
pop
imul
inc
ljmp
and
repnz
sarl
mov
jnp
mov
cmpsb
sub
enter
addb
lods
hlt
sbb
js
xchg
pop
ljmp
mov
xor
sti
into
sbb
std
arpl
sbb
pusha
lock
hlt
std
pop
dec
pop
loope
addl
cmc
out
jle
sahf
popa
dec
xchg
loop
sbb
sub
fs
sub
cmp
sbb
jmp
xor
push
pop
faddl
xor
jmp
add
push
fs
pushf
push
lret
sub
xchg
adc
lcall
add
mov
lods
xor
xchg
call
adc
test
imul
incl
mov
push
daa
mov
adc
cmp
push
into
add
mov
adcl
jle
pushl
pop
aad
mov
push
push
popa
dec
stc
mov
and
dec
ds
mov
rcrb
nop
xor
inc
imul
aaa
xor
jl
dec
int3
fisttps
hlt
repnz
mov
ss
test
mov
stos
test
jne
xor
pushf
mov
mov
pop
ret
scas
ja
jb
xchg
test
scas
cmpsl
sbb
push
push
xor
cmp
cmpsl
outsb
popa
bound
imul
sbb
or
dec
push
push
mov
jge
scas
into
xor
cmp
stos
and
jle
push
clc
mov
test
xor
dec
mov
or
mov
lcall
roll
sbb
fs
xchg
sbb
iret
adc
gs
sub
mov
or
sbb
aam
or
mov
and
push
xor
add
div
push
fists
mov
mov
add
stc
lds
pushf
pop
xor
gs
sub
xor
lahf
jge
bound
mov
xor
xor
movsb
rolb
enter
les
scas
movsb
push
sahf
xor
push
jbe
xchg
popf
leave
test
in
movsl
push
xor
lds
jbe
cmp
fidivl
aaa
fwait
shlb
jge
movsl
push
cmp
and
mov
lahf
popa
mov
mov
ljmp
push
mov
arpl
movsl
icebp
inc
sbbb
mov
xor
jns
jbe
pop
sub
cmc
adc
xchg
leave
and
mov
or
or
int3
push
adc
outsb
push
dec
inc
out
call
scas
xor
dec
rorb
sub
decb
cmp
lcall
pop
js
pop
xchg
outsl
repz
mov
xor
cmp
test
cwtl
jbe
push
dec
ljmp
adc
popf
notb
lahf
mov
jae
cld
mov
add
or
js
push
push
fcomps
mov
dec
js
and
icebp
sbb
loope
push
dec
insl
xchg
sbbb
and
outsb
dec
stos
jne
js
sub
rol
and
das
test
movsb
lods
push
scas
leave
call
inc
sti
mov
adc
mov
movsl
scas
movb
clc
cld
mov
jl
pop
push
jge
in
addr16
stos
add
mov
push
imul
test
lret
xchg
dec
push
call
scas
sbb
stos
dec
sub
sub
pop
inc
loopne
mov
add
jnp
sbb
test
aad
jbe
add
pop
add
sbb
bound
imul
bnd
mov
push
imul
dec
arpl
adc
push
mov
jle
mov
in
sbb
and
inc
or
lea
jecxz
scas
mov
repnz
pop
and
dec
inc
das
xchg
mov
repz
xchg
int
mov
sarb
cmpsb
daa
mov
repnz
cld
fwait
mov
push
leave
rcrb
xlat
loope
es
jle
sub
jl
out
leave
xchg
adc
sti
sbb
inc
add
rorl
or
pop
pop
test
in
mov
adc
outsb
add
decl
and
pop
les
adc
push
cmp
xor
shl
clc
int3
cwtl
out
out
test
and
push
jg
mull
mov
pop
xchg
insb
sbb
out
loop
scas
mov
xor
pop
mov
sti
aam
stos
ljmp
cmp
lds
adc
dec
xchg
lret
cmp
outsl
call
pop
mov
popa
ds
shll
inc
xchg
mov
add
test
js
mov
dec
xor
aad
leave
add
add
mov
xchg
pop
mov
jno
sbb
mulb
and
and
or
mov
xorl
mov
dec
scas
sbbl
sub
mov
orl
pushf
leave
mov
icebp
mov
pop
pop
daa
cmp
divl
inc
fcmovnu
add
lods
push
or
repz
xadd
sbb
mov
mov
sub
inc
js
mov
fs
or
jns
push
mov
mov
cmp
lds
getsec
add
scas
or
sti
rcr
mov
pop
push
xchg
xchg
pop
dec
cmp
and
cmc
and
fs
lds
enter
aam
mov
punpckhdq
lahf
ficoms
hlt
adc
jecxz
xor
test
or
in
cmp
daa
insl
mov
aas
mov
adc
dec
xor
lcall
lods
lret
out
xchg
jl
pop
lock
filds
push
shrb
lahf
jp
sarl
cmp
addr16
pop
add
xchg
test
sahf
jb
aad
aam
mov
xor
mov
push
sub
mov
pop
ja
inc
gs
fidivl
ret
out
mov
filds
add
out
out
jns
lcall
cli
mov
add
mov
pushf
inc
rolb
sub
in
bound
push
sti
cmp
call
cmp
sbb
cmp
ja
push
lcall
scas
adc
dec
jg
pop
leave
movsl
jno
mov
stos
das
cli
mov
js
cmp
daa
adcl
mov
shlb
jno
inc
or
xchg
ja
in
loop
jno
outsb
push
out
imul
out
cwtl
jecxz
sub
ja
pop
jl
pop
and
push
mov
mov
push
lods
aad
in
cmp
into
pop
or
out
pop
stc
stos
fimuls
cmpsb
cmp
and
and
push
push
outsb
inc
pusha
shrb
fsubrp
mov
int3
jle
cwtl
dec
inc
int3
enter
int3
pop
cld
jne
arpl
lret
shl
stos
mov
aaa
cli
addr16
lea
repnz
pop
jp
sbb
in
xchg
loopne
cltd
cwtl
popa
sbb
push
mov
aam
in
mov
lret
pop
ds
sub
adcl
lea
pop
ret
out
add
es
into
add
inc
adc
pop
icebp
imulb
insl
imull
cmp
ficomps
lods
outsl
hlt
mov
loopne
push
push
xor
add
add
iret
jae
mov
insb
pop
inc
movl
rcll
push
insl
ja
or
dec
push
mov
push
xor
pusha
jle
mov
xor
sti
xor
push
shlb
push
je
sbb
into
mov
push
imul
push
push
xchg
fs
push
repz
lea
loope
daa
mov
fcomps
add
ret
xor
test
mov
adc
popf
jo
xchg
stc
aad
loopne
pop
fwait
mov
xor
sub
xchg
push
push
xor
mov
ret
pop
repnz
dec
into
enter
mov
aas
dec
xchg
mov
insb
push
mov
orl
cmp
out
push
pop
out
ja
mov
sbb
inc
push
loope
je
test
scas
ror
cltd
leave
out
adc
out
iret
fdivl
adc
cmp
stc
cmp
jg
mov
lea
adc
call
int3
and
cmp
xchg
pop
or
xorb
orb
in
adc
or
xor
repz
xchg
aad
push
push
sahf
push
ret
inc
inc
xor
or
cmpsb
popa
or
dec
sahf
loope
mov
xchg
insl
andb
cmp
imul
aas
add
aaa
sbb
sub
push
out
pop
loop
ret
xchg
jl
mov
loope
mov
fmuls
cmp
sub
std
pop
loopne
dec
out
add
sti
dec
stc
loopne
adc
pop
xor
mov
pop
mov
icebp
xorb
jg
add
mov
fdivrl
das
mov
aad
cmp
lds
repnz
jno
xlat
loopne
dec
mov
and
jno
cmc
pop
inc
cmpsl
add
lahf
int3
xor
dec
mov
lock
inc
jne
arpl
int3
jno
cmpsl
or
lcall
gs
push
scas
xor
or
cmp
cmp
pop
aad
mov
fiadds
into
pop
loope
and
rcll
cmpsb
fnstcw
dec
loope
inc
test
jno
cld
insl
int
xchg
ret
pop
push
ja
rcrl
lock
int3
jno
cld
gs
adc
xchg
in
add
add
xchg
shl
in
popa
stc
addr16
jnp
jmp
repnz
or
loop
lret
jg
mov
popf
or
sbb
insb
pop
mov
dec
cmp
scas
cwtl
scas
xor
les
sub
sahf
ss
jg
sub
and
or
punpcklwd
cmp
in
and
hlt
push
xlat
stos
scas
adc
addb
adc
pop
fidivs
sbb
xor
iret
fs
lret
jbe
adc
mov
push
push
into
out
inc
jp
mov
pop
or
out
sbb
shr
test
mov
jnp
loop
lock
lds
inc
push
jmp
cmp
les
inc
xchg
andl
or
cmp
nop
outsl
test
popa
je
add
pop
fwait
sub
cmp
pop
dec
add
ljmp
pop
subl
dec
mov
leave
mov
xchg
arpl
adc
push
jmp
pushf
jecxz
jecxz
lds
push
xchg
add
jo
mov
mov
jmp
cli
mov
lret
mov
mov
jp
push
mov
out
sub
jge
add
lcall
in
jae
mov
fnsave
lahf
adc
dec
sub
jbe
adc
fcmovnu
inc
push
or
mov
int
add
and
xor
mov
out
sub
mov
pop
imul
imul
mov
mov
xor
dec
mov
or
pop
out
mov
mov
sti
cwtl
into
call
adc
mov
cmp
xor
outsb
gs
xchg
add
loop
dec
xchg
pop
sbb
fistpll
pop
adc
test
das
cmp
dec
add
in
adc
xchg
nop
push
negb
int3
movsb
iret
mov
jo
sbb
clc
les
ror
nop
aam
mov
pop
lea
add
adc
shll
add
mov
lret
mov
adc
js
mov
xchg
mov
jns
popf
testb
push
xchg
jge
push
orb
out
out
arpl
and
push
push
jno
mov
xchg
pusha
pop
outsb
mov
mov
xchg
xchg
mov
add
scas
inc
add
repnz
adc
push
cld
je
add
jb
out
dec
pop
pusha
jp
call
stc
das
sub
sarb
aas
outsb
mov
mov
lea
and
in
insl
add
insl
andl
adc
mov
xchg
xor
bound
jecxz
or
mov
mov
mov
outsb
stc
test
mov
inc
pop
por
stos
mov
xor
ror
add
subb
push
sahf
daa
dec
dec
lods
pop
cmp
outsb
ljmp
fwait
dec
dec
cwtl
xchg
js
xchg
adc
stos
pop
adc
popa
push
bound
outsb
in
loope
mov
jo
fistps
push
out
lods
cmp
jle
popa
cmpsl
std
iret
dec
jbe
mov
xchg
jb
fs
ds
mov
push
mov
jo
ja
sarl
aas
dec
mov
imul
xchg
fwait
test
arpl
and
repnz
sub
push
xchg
sbb
push
or
mov
testl
sti
lret
pop
aaa
mov
push
xchg
mov
ljmp
xchg
fsubs
sbb
pusha
mov
sahf
sub
dec
movsl
fnstcw
aad
lock
or
pusha
xchg
jge
test
mov
test
aaa
inc
popa
pop
pop
xor
sti
ja
push
pop
dec
scas
xchg
popa
std
in
inc
and
pop
mov
mov
in
nop
cltd
sub
cmc
or
or
stos
and
xchg
mov
stos
xchg
nop
sti
mov
push
cmp
scas
mov
mov
cmp
pop
loop
push
adc
xor
jb
jle
clc
jns
mov
bound
xchg
lcall
xor
cmpsb
mov
lea
addb
xlat
sbb
or
ret
mov
into
xor
stc
cmpsl
xchg
out
in
scas
xchg
xor
xchg
int3
stc
xchg
test
xor
outsb
imul
loop
mov
jne
jle,pt
mov
sti
jne
pop
es
add
sbb
jmp
mov
loop
cmc
bound
data16
subb
dec
cmpsb
bound
xchg
shrl
mov
mov
cmp
stos
imul
out
stc
mov
leave
mov
cmp
mov
lock
mov
das
in
pop
mov
movsl
xor
jl
xor
in
push
sub
pop
popf
mov
push
out
cmpsb
sub
loope
adc
daa
or
test
cs
into
mov
test
pop
int3
in
outsb
inc
jb
mov
ret
jmp
insl
or
outsb
daa
in
ficoml
pop
iret
xor
movsl
xchg
jae
xor
mov
push
enter
dec
xchg
lahf
and
jb
push
int
lcall
mov
dec
popa
sahf
in
jne
clc
movsb
lret
rolb
pop
push
daa
inc
leave
data16
jns
mov
cmp
sbb
sub
jne
add
fucomi
int
test
xor
adc
or
cmp
push
or
inc
or
cmpsb
xchg
add
sahf
adc
dec
mov
pop
lcall
aas
fsubs
mov
push
and
inc
pop
aaa
pop
xlat
sti
or
ja
xor
jne
lret
lds
add
enter
imul
mov
scas
imul
insb
jnp
clc
mov
out
outsl
test
rcrb
mov
lahf
js
sti
inc
adc
sti
scas
out
movsl
and
in
dec
daa
shlb
pop
ljmp
inc
in
lahf
mov
pop
enter
mov
lea
aam
movsl
jb
cmpsl
movsb
sarl
and
out
std
xchg
es
xor
sbb
mov
in
or
sub
and
cld
std
xchg
test
outsl
mov
out
call
sub
pop
dec
and
dec
mov
rorb
cld
incl
fistl
imul
test
and
jbe
dec
mov
push
pop
jb
popa
es
xchg
add
arpl
lret
jmp
inc
add
aas
xor
fucomi
popa
adc
ljmp
in
stos
xor
jo
sub
add
aas
jg
into
imul
rorl
push
jmp
mov
in
in
cmp
pushf
inc
cs
fnstsw
push
xchg
scas
inc
or
xor
mov
dec
cmp
xor
shl
jl
or
cwtl
fstl
dec
shl
sbb
pop
dec
pop
cmovp
iret
jg
arpl
cld
cli
in
fdivp
add
subl
or
sub
mov
cs
xchg
xor
jle
imul
mov
shlb
js
cmp
rolb
xor
out
and
push
dec
in
dec
cmpsb
jecxz
repz
pop
gs
mov
ljmp
data16
insb
mov
mov
push
adc
loopne
mov
jg
rcrl
in
fwait
ficoml
lret
in
xchg
ret
cmc
lods
es
xchg
into
out
loopne
mov
and
mov
bound
add
fisttpll
mov
push
mov
fcmovu
pusha
mov
push
js
test
push
data16
xor
loop
out
and
out
outsl
push
adcl
les
test
inc
inc
aaa
aad
push
adc
xchg
pop
jno
scas
push
dec
fcmovu
aad
sub
cmp
popf
leave
int
mov
or
xchg
movl
ror
aaa
enter
lret
shlb
pusha
movsl
loopne
jmp
leave
pusha
arpl
out
adc
push
fcom
cmp
xorb
fidivrs
add
pop
add
jae
push
mov
adc
mov
shll
inc
lea
jp
adcb
cmpsb
outsl
js
lds
add
adc
jg
fs
ret
dec
push
psubsb
daa
push
pop
mov
add
jge
cmp
push
jb
nop
or
add
inc
andb
mov
add
loopne
mov
jbe
xchg
pushf
cmp
movsb
inc
pop
cwtl
in
jp
scas
cs
pop
shlb
ret
in
lock
add
call
outsl
sti
fwait
push
rep
xor
enter
and
or
bound
inc
sbb
jne
mov
mov
add
lret
mov
sbb
mov
pop
pop
push
cmp
pop
imul
push
fmuls
test
rol
aam
xor
ja
dec
mov
ds
popa
gs
int
and
dec
bound
adc
xor
add
loopne
or
add
je
and
enter
jno
sti
out
xchg
testb
movb
fs
and
mov
fstps
andb
les
shrb
cld
cmp
clc
jnp
into
and
sub
cmp
mov
fcoms
cli
mov
aam
sbb
add
add
and
lcall
sbbb
stc
or
push
dec
add
pushf
fcomps
xchg
cmp
xor
cmp
and
hlt
sbb
fbstp
xchg
adc
fidivrs
mov
jl
fnstcw
rcrl
loope
push
enter
mov
dec
gs
jmp
sbb
jne
aas
push
out
add
cmp
inc
sbb
lods
sbb
and
mov
mov
adc
mov
andb
mov
xchg
sarl
mov
into
mov
fcoml
lods
out
jmp
stos
hlt
mov
popa
pop
xchg
enter
mov
rol
daa
aas
or
pop
les
mov
je
cmpsb
dec
call
into
adcb
fidivrs
cs
enter
sahf
mov
lret
jnp
mov
inc
dec
or
sub
sbb
lods
push
and
inc
aam
aaa
jmp
mov
pushf
stc
mov
loop
cmc
mov
cmpsl
movsb
pop
sub
movsl
test
adc
mov
fwait
stos
xchg
pop
mov
push
or
and
pop
mov
clc
jmp
ljmp
mov
jg
lcall
stos
sbb
sti
add
jae
nop
loop
int3
das
stc
push
inc
lea
jl
sub
ljmp
dec
adc
jp
push
xor
js
inc
sbb
hlt
std
cmc
int3
icebp
dec
cwtl
into
out
xchg
inc
je
inc
push
cmp
push
xchg
mov
cmp
adc
jge
cwtl
and
lods
pusha
adc
or
stc
xor
pop
sub
cld
mov
fiadds
pop
iret
enter
fsubrp
es
sbb
int3
fcmove
imul
fmull
push
sbb
idivl
dec
in
into
push
sbb
movsl
js
cmpsl
movsb
or
adc
int
rclb
push
mov
out
adc
mov
ljmp
mov
cmpsl
fcmovne
jno
adc
test
lahf
jmp
push
push
dec
or
out
mov
inc
test
and
aam
insb
into
mov
ret
movsb
push
sbbb
sub
mov
ret
dec
and
insl
loop
lods
push
imul
fimull
jge
inc
sub
pop
mov
jp
add
mov
addr16
call
cmp
push
daa
iret
jmp
jne
cmp
mov
xor
pushf
or
sahf
lret
sbb
arpl
clc
aad
int3
cltd
aam
mov
das
adc
imul
xchg
sbb
into
lcall
cmp
adc
mov
jnp
sub
mov
sub
lret
mov
repnz
inc
ret
test
push
rorl
pushf
ja
sub
xchg
mov
mov
and
jmp
pop
pop
xor
cmp
addr16
sbb
lods
repz
fstpt
or
mov
add
pop
test
shrb
jmp
arpl
sahf
outsb
sub
or
lcall
jge
add
ja
jp
or
pop
mov
jae
and
dec
xlat
sbb
fsubs
dec
push
sti
xchg
xor
xchg
sub
addr16
popa
fst
movsb
xchg
fsub
xorl
dec
test
pop
mov
mov
js
paddw
mov
das
pop
mov
and
gs
dec
jbe
rcrb
and
cs
add
jp
pop
dec
sub
scas
pusha
fwait
and
pop
xchg
imul
jnp
sub
xchg
lcall
aad
inc
xlat
enter
lahf
inc
in
pop
outsl
mov
stc
xchg
sub
stos
sub
sub
shl
mov
outsl
cli
or
aam
subl
mov
cli
call
xlat
test
jp
add
mov
jbe
jb
sti
js
push
dec
push
and
rclb
sub
daa
jecxz
xor
test
lret
jns
jo
jge
push
or
inc
pop
add
or
sub
adc
insb
or
mov
into
fsubr
and
shlb
stos
jecxz
in
push
sub
inc
jnp
push
stos
pop
es
cmp
cli
bswap
enter
cwtl
cmc
jl
sub
pop
popa
in
push
pop
in
fsubl
add
push
inc
shrb
in
inc
dec
das
push
incl
inc
jns
mov
fsts
pop
and
add
xchg
xor
dec
pop
mov
sub
xor
xor
sar
aam
stc
mov
mov
fstpl
loopne
xor
mov
lahf
mov
cmp
cli
inc
adc
ss
xchg
pop
sbbl
pop
lods
xor
jge
pushw
loopne
call
sti
xchg
or
fldenv
arpl
mov
lds
loope
int
es
fwait
ret
xor
pop
cmc
lret
jb
xchg
pop
cld
pop
jae
inc
push
and
stos
fdiv
add
cwtl
pushf
rcl
stos
or
ror
stos
sub
add
jbe
sbb
out
push
flds
sub
loopne
mov
fs
xor
mov
loop
xor
push
insl
mov
call
aaa
cs
imul
inc
clc
repnz
fnsave
call
or
ljmp
cld
mov
pop
cmp
sub
inc
push
pushf
mov
or
pop
mov
enter
mov
adc
enter
cmp
shl
sbb
int
cmp
testb
cmpsl
push
out
dec
mov
pop
push
xor
lahf
and
mov
xchg
repz
out
push
mov
pushf
ret
sub
xchg
or
testb
or
test
js
cmp
arpl
and
out
lods
jne
pusha
pop
xchg
cmc
fstl
push
insb
mov
xchg
cmp
pop
cltd
test
sbb
jbe
lret
imul
inc
popf
loop
out
in
jmp
out
es
cmp
sarb
test
push
mov
addb
leave
std
rcl
jae
push
jae
test
insb
push
and
sahf
jecxz
les
fists
fildll
imul
or
xlat
andb
stc
jb
rcll
iret
or
and
mov
sub
mov
or
idivl
jbe
loope
and
or
test
dec
inc
sbb
push
adc
in
dec
rcrl
inc
scas
or
jae
mov
push
mov
idivb
xor
stc
rdpmc
jbe
add
cwtl
and
mov
jns
xor
adc
in
mov
gs
jb
mov
jge
test
pop
stc
or
push
stos
jp
jbe
mov
push
hlt
rcll
xor
mov
int
movsb
not
lahf
dec
jne
xchg
in
or
cmp
movsb
adc
ret
xorb
xor
and
push
int3
fprem1
dec
or
lret
pop
daa
es
mov
outsb
push
fbld
lock
aam
push
outsb
stos
xor
ja
aam
int
orl
test
jle
ficoml
mov
stc
xchg
mov
dec
cmpsb
adc
dec
sbb
insb
jno
daa
rclb
es
pushf
jbe
xchg
pop
pusha
inc
shrb
add
xor
xchg
mov
imul
inc
jae
xor
out
push
sbb
dec
or
adc
scas
out
add
out
xchg
subb
and
enter
add
xchg
sbb
lret
mov
adc
leave
cmovb
cmovs
xchg
adc
or
mov
ret
jp
int
cli
dec
or
cmp
xor
jmp
in
leave
xchg
push
and
mov
nop
pop
popa
cmpsl
sbb
pop
outsl
adc
daa
add
lods
pushf
xor
mov
or
pop
jge
in
cmpl
mov
push
stos
adc
add
out
int3
add
dec
mov
ret
fs
xor
in
xchg
cmpb
outsb
jle
sub
icebp
je
push
xor
inc
addr16
xchg
adc
test
test
fbstp
mov
in
sub
cwtl
add
fistpl
lods
adc
les
popa
jp
xor
xor
push
push
out
cli
mov
mov
push
cmp
adc
adc
jnp
orb
pop
xchg
push
xor
adc
fwait
hlt
adc
std
gs
call
je
pop
repz
dec
mov
ficomps
or
xor
ds
pop
mov
insb
subl
inc
mov
les
add
in
jecxz
mov
stc
and
push
cmp
leave
ljmp
xchg
sub
ja
call
int3
loop
and
mov
lahf
clc
push
adc
lods
or
jle
xchg
cmp
mov
out
and
mov
iret
insb
xor
clc
xchg
push
and
xchg
fs
or
lock
imul
in
lock
mov
lea
mov
jo
sub
xchg
scas
jmp
lock
aam
sbb
dec
mov
dec
xchg
sub
inc
in
jl
or
sahf
mov
aam
insl
mov
pusha
cmp
mov
and
xchg
cmp
mov
ret
jbe
js
xchg
mov
rcrl
sub
xor
ss
in
mov
int
mov
lahf
cld
outsl
imul
xchg
pop
shrb
cmc
pusha
lds
xchg
inc
push
pop
jge
mov
call
xor
sub
add
ja
jg
pop
insb
outsl
dec
xor
mov
pop
push
push
lret
pop
add
inc
shll
pushf
outsb
xor
adc
mov
or
lods
popl
or
jno
aam
dec
inc
popa
scas
xor
repz
fdivr
mov
lcall
jmp
test
roll
xor
imul
imul
ret
jg
mov
xchg
notl
sub
in
dec
add
fwait
sub
xchg
fldcw
mov
push
loopne
pop
cmp
pop
stos
xchg
insl
sbb
shrb
lcall
add
add
leave
or
mov
jmp
push
nop
orl
pop
gs
and
pop
mov
rcrl
sub
sbb
pusha
add
pushf
xor
int
cmp
lahf
sub
lcall
fwait
test
daa
outsb
clc
and
jo
into
adc
daa
in
ljmp
sahf
push
jg
in
xchg
pop
jge
sbb
mov
or
cwtl
and
pop
ret
lret
scas
outsb
lcall
es
xor
sub
hlt
xchg
push
ret
lcall
and
cmpsl
loopne
sub
xchg
sti
loop
or
push
scas
aad
push
fwait
test
cltd
rorb
lods
mov
mov
push
dec
test
mov
lea
mov
stc
adcl
fbstp
xchg
adc
mov
pop
cmp
scas
xchg
bound
dec
xchg
addr16
aad
mov
adc
daa
dec
ljmp
idivl
sbb
pop
push
push
fildl
int
leave
mov
sbb
rorl
imul
mov
in
jb
out
add
popa
scas
addb
mov
or
int
inc
inc
mov
in
xor
cmp
inc
addl
push
adc
fsubrs
mov
ja
mov
xor
leave
pop
add
gs
shl
ljmp
ret
repz
test
sbb
push
or
out
lret
rorb
mov
push
push
add
add
mov
scas
in
jge
movb
fisttpll
insl
outsb
pop
lahf
jo
cmp
xchg
mov
enter
xor
int3
dec
mov
jo
outsl
leave
mov
inc
sbb
dec
cmp
cli
xchg
xor
mov
or
lret
cmp
sbb
sti
jns
inc
adc
mov
pushf
lret
xor
mov
jbe
pushw
mov
add
cmp
mov
std
jl
cltd
fwait
jnp
push
mov
in
aaa
mov
outsl
add
push
pop
mov
lock
and
sbb
push
inc
pop
sahf
and
sbb
roll
jb
jle
int3
cmpsb
mov
and
and
mov
add
pop
cmp
cltd
int3
xor
and
fsubl
sbb
xchg
fs
cmp
dec
test
adc
xchg
adc
jle
push
or
sub
imul
jecxz
dec
push
dec
pop
aam
arpl
sbb
jbe
and
inc
cs
add
lahf
push
shld
push
add
pop
cmpsb
clc
ror
loopne
out
and
daa
stos
les
adc
lcall
push
leave
mov
jecxz
jl
xchg
mov
dec
pop
js
mov
loope
rcll
lret
push
ja
fwait
mov
nop
and
push
nop
fs
daa
cmovb
mov
cmp
inc
add
sub
mov
sub
fistpl
loope
pop
xchg
icebp
jbe
ljmp
outsl
fsubrs
jg
dec
and
jno
mov
mov
popa
sbb
jmp
sbb
cmc
mov
adc
int3
push
test
push
push
andl
rolb
movsl
cmp
fcmovnu
jno
and
std
cwtl
dec
cmp
mov
mov
dec
sub
or
stos
cli
mov
jnp
sbb
orb
add
out
adc
sub
push
fnstenv
mov
push
sbb
jb
rclb
rcll
push
addr16
sub
mov
mov
or
jl
lahf
jg
rcrb
scas
aaa
jp
mov
dec
repnz
outsl
and
pop
lahf
xor
aam
clc
xchg
adc
mov
popl
push
inc
jge
rcrl
repz
or
jmp
aas
jnp
dec
and
ljmp
cmp
fdivrl
sub
dec
out
mov
jo
inc
fisttpl
pop
dec
pop
int3
mov
insb
pusha
data16
inc
inc
incl
mov
call
xchg
xor
repnz
and
fistpll
lahf
mul
mov
jmp
adc
sbbl
in
data16
mov
adc
push
lahf
int
dec
cmpsb
mov
jp
aas
sar
ret
divb
dec
add
pop
loope
ja
dec
cmpsb
and
jl
aad
add
pop
mov
data16
push
shl
inc
pop
fcoms
test
pop
loopne
mov
xor
dec
push
std
loope
mov
mov
add
repz
out
jns
or
sub
or
jb
sub
add
add
sbb
std
mov
xchg
jp
fiadds
lea
js
test
adc
push
cmpsl
and
mov
inc
and
inc
inc
jb
xor
cmc
lds
sub
xchg
jae
xor
dec
nop
daa
incl
adc
popf
inc
dec
ret
adc
sahf
js
add
lods
mov
push
mov
repnz
repz
fwait
je
aas
xor
cltd
xchg
push
and
xchg
pop
push
pop
mov
pusha
scas
subb
xchg
mov
iret
adcb
dec
cmp
jne
subl
mov
lret
or
lret
jb
hlt
imul
std
xchg
push
or
jge
fsts
mov
push
repnz
xchg
mov
mov
push
xchg
cmp
pop
mov
cmp
mov
mov
inc
fldenv
dec
sarl
aas
out
jp
insl
add
jmp
push
xlat
icebp
xorb
pusha
enter
adcl
cmc
dec
icebp
out
xlat
sub
and
inc
jno
adc
cmp
in
pop
lahf
add
enter
add
addb
shl
stos
add
mov
std
mov
jl
fcmovu
in
sub
inc
mov
xor
out
jno
push
dec
and
loope
test
xchg
ja
jmp
pop
movsl
jno
jnp
popf
jbe
mov
enter
stos
or
loopne
lret
or
sub
cmp
insl
mov
pop
cmp
outsl
lods
and
mov
mov
or
or
inc
adc
fsubs
cmp
data16
or
ss
mov
lcall
arpl
pop
push
imul
xchg
pop
xchg
mov
int3
dec
test
adc
xor
push
call
sbb
pop
adc
dec
rclb
int3
cmpsb
mov
int3
xchg
pop
fdivrs
mov
jno
inc
cltd
lods
in
or
dec
add
jecxz
popa
icebp
loopne
jae
frstor
leave
frstor
leave
lds
sbb
or
int3
jno
aam
insl
outsb
ret
ja
das
fidivs
add
daa
or
clc
sarl
sti
sub
pop
call
cmp
mov
lret
bnd
decb
adc
insb
mov
pop
jmp
in
gs
lahf
pop
cmc
mov
inc
mov
cmp
add
fcompl
cmp
pushf
mov
cmp
jno
or
jae
fistps
jl
js
adc
movnti
mov
dec
mov
or
mov
test
mov
rorb
or
dec
ds
outsb
mov
mov
sti
loopne
out
or
or
scas
xchg
lret
popa
mov
jle
pusha
sar
pop
adc
inc
out
or
cmp
insl
clc
sub
pop
es
out
dec
loop
sub
and
mov
frstor
insb
les
inc
mov
jge
movsb
dec
pop
icebp
daa
enter
lods
scas
jg
jmp
sbb
cmp
in
pop
adc
jo
mov
cmp
repnz
loopne
pop
clc
rolb
mov
inc
aas
xchg
insb
jbe
pop
inc
push
add
mov
mov
lds
adc
mov
out
test
adc
add
xchg
jg
push
or
cmp
out
nop
inc
in
es
mov
ret
and
ss
addr16
test
mov
leave
jge
push
cld
xchg
test
iret
lahf
jmp
inc
lods
cli
ret
sub
mov
cwtl
pop
pop
add
repz
cmc
clc
pop
sbb
loopne
call
stos
pop
popa
mov
jne
mov
sbb
arpl
or
out
mov
jb
movsl
stos
test
in
loopne
std
or
roll
lods
or
pop
aam
rclb
push
dec
or
xor
push
xor
or
push
lods
fnstsw
sbb
rorl
inc
xor
pop
inc
inc
and
inc
xorl
popf
jmp
inc
loopne
test
cmp
scas
lods
sub
test
push
adc
push
jmp
jno
or
inc
mov
lea
sub
ss
sahf
cmp
js
lcall
adc
inc
outsb
lods
sub
imul
dec
xchg
lods
scas
mov
xor
jnp
push
push
jle
aad
out
pop
outsb
aad
lds
lea
pop
add
dec
outsb
dec
or
mov
push
xor
insl
jmp
je
add
sub
xchg
or
cli
movl
es
and
hlt
mov
or
inc
je
adc
aad
in
sbb
dec
sub
hlt
and
lret
dec
sti
aad
mov
push
cmp
dec
inc
push
push
lea
and
cwtl
mov
imul
mov
rol
rcrb
xchg
add
dec
fwait
dec
mov
cwtl
cld
jg
scas
xorl
dec
mov
dec
aam
dec
mov
aad
add
mov
repz
es
mov
xchg
mov
pop
iret
fsubrl
decb
or
jp
lods
mov
in
sub
jecxz
cmpsb
iret
dec
test
or
hlt
add
push
jo
cmc
sub
xchg
fidivrs
xchg
adc
xor
out
pop
sti
mov
pusha
cld
setbe
leave
cltd
push
aad
inc
mov
mov
mov
mov
dec
mov
push
jbe
xor
sahf
fwait
jo
jno
and
mov
jg
cmpsl
mov
andl
ja
mov
inc
inc
push
pusha
xchg
jecxz
sbb
push
mov
inc
mov
mov
mov
dec
fwait
jp
or
push
mov
js
scas
sub
arpl
push
leave
jnp
xchg
dec
xor
loop
inc
push
mov
dec
xor
adc
pop
in
cwtl
or
addb
dec
xchg
jne
lea
lock
leave
inc
in
push
dec
jb
add
lret
imul
ljmp
add
pop
adc
rorl
jl
or
and
mov
loope
pop
inc
pop
sub
mov
ret
xchg
adc
mov
mov
pop
xor
stc
fwait
enter
lea
dec
cmp
std
jg
in
outsb
cmpsb
std
adcb
sub
lds
xor
pop
cli
enter
and
and
jo
jne
sbb
push
xchg
lock
stos
jg
mov
in
jnp
scas
mov
and
or
pop
inc
ljmp
sbbb
in
aas
subb
xor
dec
adc
or
xor
fcompl
stos
adc
leave
fstpt
push
pop
sbb
mov
into
scas
hlt
adc
loopne
cmp
push
loopne
or
jp
and
aad
inc
fnsave
loope
into
xor
lret
adc
fs
int
out
push
cmp
pushf
ljmp
outsl
stos
clc
dec
mov
or
mov
test
mov
cmp
test
pusha
push
ficompl
xchg
ret
ds
je
push
xchg
pop
xchg
jne,pn
and
pop
push
jne
sub
xchg
sub
gs
or
inc
call
out
xor
jb
lret
test
outsb
sti
out
inc
push
scas
in
pop
push
push
sub
aaa
pop
mov
and
pusha
sbb
or
mov
cmp
push
leave
int
imul
and
fs
aas
bound
in
mov
xchg
aam
in
cmp
inc
inc
mov
sub
mov
ficoms
icebp
fildll
sub
lods
imul
jg
fcom
mov
inc
lcall
lds
loope
mov
lahf
jb,pn
adc
sub
sub
lds
xchg
mov
arpl
jmp
and
sbb
popa
shrl
jecxz
mov
add
push
movsl
ljmp
mov
mov
dec
pusha
xchg
mov
mov
popf
mov
shlb
in
sub
shrl
mov
push
out
push
pop
notl
out
jo
push
bswap
dec
fistpl
cmp
setb
arpl
push
call
imul
sahf
xchg
xchg
cmp
outsl
out
mov
cmp
cmp
xchg
sti
mov
cmpl
addl
sbb
mov
inc
rcrl
jo
inc
popa
ffreep
xlat
xor
std
data16
cmp
mov
stc
or
clc
lds
inc
and
jp
divb
push
push
push
cmpsb
int3
mov
jle
jcxz
mov
mov
mov
push
sbb
pop
mov
mov
sbb
bound
lcall
jmp
add
movlps
mov
lock
idivl
mov
enter
dec
and
lahf
sbb
and
xor
enter
jbe
mov
js
dec
out
mov
mov
repz
outsb
inc
pop
mov
orl
addb
jmp
cmp
test
push
je
out
into
test
sub
jne
dec
mov
push
dec
jge
jp
filds
lods
jmp
sar
out
dec
cmp
mov
jecxz
push
sbb
jl
fwait
xchg
cltd
adc
cld
outsb
imul
fwait
push
cld
bound
lods
adc
ret
out
dec
in
es
pop
dec
xchg
push
cmp
jge
scas
push
xchg
sahf
repz
adc
jg
push
push
ljmp
je
out
out
cmpsb
loope
lret
clc
sahf
mov
incl
push
mov
add
icebp
pop
mov
push
sti
mov
imul
dec
ds
xchg
push
add
leave
xor
pop
cmpsb
imul
rorb
inc
cs
loope
xchg
jne
and
js
jb
add
push
push
xchg
or
lods
sarb
lret
inc
int
sub
pop
test
xor
fs
jnp
lds
adc
test
mov
push
adc
mul
lret
xchg
cmc
jo
mov
iret
adc
and
sub
fisttps
adcb
fsubl
jg
mov
xchg
lea
icebp
test
dec
in
mov
fisubrs
pop
test
adc
aaa
subl
lds
xchg
out
imul
mov
or
mov
rorb
aad
lahf
mov
lea
lods
inc
push
lock
pop
push
xchg
outsl
cmpl
neg
xor
xchg
cmp
and
cmc
insl
enter
mov
jmp
test
popf
sub
fcompl
xchg
pop
or
vfrczpd
xor
pop
adc
mov
cmpsb
add
dec
cmp
add
push
cltd
mov
jne
jno
int
mov
pop
lahf
loop
icebp
adc
sub
and
or
ret
mov
fadds
push
sub
or
add
ljmp
mov
inc
ficoml
push
fldl
mov
inc
xor
inc
mov
movsl
inc
scas
aaa
push
scas
pop
aas
ret
movsb
and
dec
jbe
nop
sub
mov
add
js
mov
xor
dec
push
dec
or
subb
es
subb
sub
fs
bound
or
or
cli
jno
and
pop
pop
sbb
jne
in
pusha
xlat
lahf
dec
pop
cmc
std
sub
clc
xchg
mov
aam
stos
cmpl
orb
dec
mov
imul
inc
and
adc
jo
mulb
push
add
cmpsb
ret
mov
stos
cmpsl
cld
sbb
jb
jno
outsb
data16
inc
inc
adc
cmp
loope
ljmp
fsubs
cli
sbb
cli
mov
pop
das
in
lds
push
and
jno
mov
mov
popf
dec
dec
xchg
insl
mov
inc
mov
into
mov
enter
icebp
xchg
mov
test
stos
repz
pusha
sbb
sub
lret
inc
jge
xchg
in
cmp
lods
xor
out
cld
sub
lret
test
stc
sub
out
adc
mov
jo
je
mov
jmp
std
add
fcomi
sbb
std
xchg
push
push
xchg
add
mov
scas
or
adc
in
xchg
cmpsl
add
mov
sub
test
ficoms
pop
mov
push
ja
push
mov
iret
xorb
jge
mov
fcoms
push
fcompl
mov
jnp
in
inc
fld
and
ret
add
orl
fisttpl
pop
push
iret
push
cmp
xchg
cmpsl
dec
mov
inc
jne
cmp
ficompl
int3
ret
jl
mov
mov
cmp
bound
xchg
ja
movsb
mov
push
in
jae
inc
mov
sub
stc
or
loop
sahf
adc
push
inc
cs
stos
sub
inc
fwait
and
divl
ds
sbb
jns
pop
imul
popf
push
pop
dec
movsl
scas
es
push
fstl
leave
mov
lock
or
repz
xchg
repz
add
mov
jno
mov
pop
jb
out
inc
mov
and
test
mov
and
or
pop
jne
jecxz
cmc
test
add
movsl
adc
xchg
and
mov
push
sbb
clc
jbe
cmp
mov
int3
push
and
adc
adc
sbb
push
or
bound
imul
mov
add
lds
je
push
clc
jecxz
out
pop
shl
aas
mov
repnz
dec
pop
mov
jmp
shl
into
push
pushf
cmp
cmpb
xchg
inc
setl
xor
inc
jp
add
mov
cmp
call
mov
sarl
pop
std
xor
mov
mov
rclb
sub
cwtl
adc
sbb
mov
imul
inc
push
or
test
icebp
cmc
dec
insl
inc
inc
or
sub
nop
lahf
cmp
sar
dec
dec
push
rolb
sbb
xchg
hlt
mov
xor
jns
mov
add
push
stos
inc
mov
or
and
or
fimull
xor
pop
test
add
mov
dec
lock
xor
jecxz
xchg
mov
mov
jae
test
mov
inc
and
inc
push
in
data16
mov
loope
sbb
xchg
lea
in
out
outsl
sub
je
push
pop
ret
popa
repz
dec
je
inc
dec
jecxz
sub
jge
xchg
inc
mov
push
add
push
push
iret
xchg
data16
cmpl
and
flds
ljmp
or
inc
push
jae
scas
and
addr16
xchg
stc
jno
lcall
sub
aam
xchg
mov
inc
pop
or
mov
aam
dec
cmp
fildl
mov
add
push
int3
fmul
sub
add
fsubrs
pop
jns
adc
sbb
cmp
push
xor
jge
repnz
pushf
loope
or
ljmp
lock
std
dec
adc
cmp
and
pop
jb
add
cld
adc
xchg
lock
jns
sub
test
jbe
popf
mov
arpl
lret
ljmp
je
xchg
cmp
mov
adcb
xorl
adc
movlps
adc
sub
xlat
loopne
dec
daa
mov
in
sub
sub
repnz
cmp
and
push
into
movsl
jl
daa
mov
push
adc
add
ja
iret
hlt
cs
jne
test
jecxz
cmpsb
mov
jnp
enter
jb
lods
push
xchg
inc
xchg
adc
mov
out
pop
dec
cltd
cmp
sbb
mov
pop
scas
fs
inc
push
cmp
lods
out
add
outsb
icebp
xchg
jg
mov
pop
shlb
jbe
mov
fldt
sbb
leave
jb
stos
frstor
cli
pop
jnp
sarl
ds
icebp
and
int
xchg
in
test
cmpsb
roll
sbb
sub
in
mov
sub
jmp
leave
jl
adc
or
sub
jp
fidivs
push
xor
mov
pushf
out
pushf
in
pop
push
push
aas
incl
mov
dec
pushfw
or
aad
jns
fs
lcall
movsl
jb
and
jmp
cmp
jae
sub
mov
pop
add
jl
or
xchg
dec
imul
cld
fsubrl
xchg
in
aaa
cs
jge
fnstcw
xchg
rol
dec
cmp
outsl
mov
lds
js
mov
or
dec
rol
js
cltd
add
scas
sbb
subb
stos
cmc
cmp
push
jecxz
sbb
pop
aas
insb
popf
xor
lret
mov
push
idivb
dec
ret
jg
xrelease
outsb
imul
sub
fstps
loop
fildl
movsb
faddp
inc
and
add
call
or
add
add
jl
into
adc
dec
hlt
sbb
mov
jbe
sbb
pop
push
xor
mov
xor
push
mov
ret
lods
cltd
sbb
cli
xor
adcl
ret
xchg
lea
fimull
lods
mov
inc
scas
inc
es
fidivrs
mov
cmc
out
repnz
scas
fnsave
mov
ss
scas
stos
loop
mov
insb
add
add
outsl
mov
xchg
shll
or
cwtl
pop
push
rcr
push
arpl
inc
imul
cmp
mov
push
test
stos
int
ljmp
repnz
pop
int
mov
and
ja
jl
cmp
jle
dec
pop
arpl
ljmp
jg
flds
mov
dec
inc
adc
and
xor
xor
out
jb
and
iret
jno
shlb
fsubrs
sbb
repnz
ret
inc
clc
adc
lods
push
mov
jmp
cld
xor
sbb
xchg
jecxz
push
sub
and
js
cmpsb
cwtl
pop
adc
adc
adc
punpckhwd
dec
sbb
shll
adc
outsb
add
popaw
dec
push
mov
je
aas
lock
push
jae
sub
sbb
js
push
xchg
add
fcoml
loope
aaa
pop
cmp
mov
ja
sarl
lea
pushw
movsb
fstpl
add
jb
jns
adcb
sub
addr16
int3
sbb
add
scas
push
mov
adc
or
scas
aas
push
jge
push
xchg
xchg
push
popa
lock
jecxz
xor
fs
lret
sbb
inc
std
and
jecxz
xor
and
rcl
dec
mov
imul
adc
iret
pop
mov
and
xchg
and
and
es
pop
xchg
insl
arpl
fwait
inc
xchg
fists
inc
sahf
es
adc
cmp
stos
jmp
ljmp
rcrl
xor
sub
adc
imul
mov
fildll
pop
in
xchg
add
pop
hlt
adc
pop
aas
imul
xchg
loop
dec
xor
pop
xchg
jl
aam
sbb
out
js
pop
push
add
pop
in
xchg
ja
shld
iret
leave
loope
pop
mov
mov
sub
iret
fbstp
and
daa
loop
xor
roll
xchg
jmp
mov
mov
jae
cmovns
adc
mov
int
lret
xor
pop
mov
sbb
add
pop
pop
mov
lret
xchg
clc
not
cmp
dec
filds
push
adc
push
leave
xor
stos
add
fidivrs
sub
add
xor
mov
cld
and
push
sbb
and
pop
xchg
ret
ret
adc
repnz
xchg
imul
mov
test
in
and
sahf
movups
fwait
jns
lret
inc
es
clc
adcl
xchg
pop
outsb
dec
cmp
push
mov
cmp
add
xchg
into
xor
out
xor
stos
push
ret
xchg
lods
jne
jne
out
scas
jnp
jl
test
cmp
jb
outsb
mov
inc
inc
test
in
or
testl
insb
xchg
jnp
test
pop
mov
sbb
xor
pushf
mov
sub
cmp
push
sbb
loop
movsl
call
and
dec
dec
fs
cli
enter
and
push
andb
es
inc
jne
cld
ja
rorl
ja
sub
xchg
mov
lahf
inc
addr16
loop
insl
bswap
xchg
jo
mov
jp
cs
pop
add
jns
dec
push
popf
adc
in
test
cmpxchg
mov
sbb
adc
ret
lcall
cmp
fistps
cwtl
pop
mov
cli
xlat
or
xor
sbb
mov
in
add
and
mov
mov
sbb
les
push
les
fimull
cmp
rcrb
mov
jp
rolb
outsl
adc
mul
std
add
outsb
push
or
push
dec
lret
xor
and
cs
mov
dec
insl
inc
and
adc
andb
or
mov
jp
mov
or
xlat
les
aad
and
inc
push
mov
incb
testl
sbb
bound
shl
rorb
inc
in
push
jae
jle
cld
pop
jnp
add
and
bound
popf
mov
add
rorb
nop
pop
mov
movsl
mov
push
out
sbbl
nop
mov
xchg
loope
stos
in
mov
and
stos
mov
xchg
jbe
into
dec
adc
and
hlt
xlat
pop
push
mov
pop
addb
insl
add
hlt
mov
das
out
sbb
jmp
adc
mov
popa
xchg
pop
cmp
iret
dec
mov
xchg
iret
and
fildll
pop
add
xchg
pop
jp
insb
xor
mov
cltd
popf
insl
mov
push
decl
mov
cmp
xchg
lea
mov
out
pop
testb
mov
xor
pop
xor
ficoms
popf
in
sub
push
daa
xchg
dec
test
dec
mov
call
cwtl
fwait
iret
cmp
xchg
addb
aam
pop
fldenv
mov
inc
leave
stc
rcrl
mov
iret
addr16
or
mov
scas
mov
or
inc
pminsw
hlt
sbb
pusha
andb
cli
ret
sub
pop
sti
or
in
jp
aaa
push
adcb
xchg
nop
xchg
sub
cmp
dec
les
add
sbb
dec
aad
push
outsb
cwtl
orb
mulb
push
arpl
addr16
stos
int
mov
pop
pop
adc
inc
and
inc
int3
adc
sub
add
nop
pop
ror
sbb
fnsave
xor
insl
bsr
or
xchg
mov
ret
push
shl
int3
push
mov
mov
fistpll
mov
jp
loopw
add
lret
sub
push
movsb
lock
adc
xor
mov
lret
mov
leave
xor
and
xor
jbe
push
xchg
dec
mov
add
cld
or
jae
push
call
movsb
insb
add
fmuls
nop
cmp
test
push
add
or
mov
ds
xchg
inc
sub
movsl
orb
sub
stc
cmp
push
data16
js
push
adc
add
pop
and
push
sahf
insb
sbb
fcmovnbe
jae
scas
push
adc
fsubrp
test
and
and
shlb
mov
ret
fmuls
xlat
roll
hlt
jb
call
sub
pop
clc
fbstp
fimull
aaa
mov
int3
dec
aaa
inc
cs
rcll
xor
xchg
repz
inc
cmpsl
jp
mov
mov
imul
cmp
fisttps
dec
sub
mov
dec
xchg
lcall
and
ss
out
imul
std
inc
mov
pop
xchg
jmp
ds
shlb
inc
sub
jecxz
sbb
jae
daa
push
out
add
inc
ja
jmp
jl
or
add
fsts
push
add
or
loope
movl
xchg
mov
out
adc
inc
xchg
xchg
push
sub
jle
pushf
add
lock
ficoml
jb
push
mov
adc
mov
xchg
imul
or
pusha
push
fsubrs
mov
push
insl
push
pop
sbb
dec
adc
inc
pop
and
mov
shrb
and
mov
das
lds
fnsave
adc
in
jo
lcall
push
jle
sti
scas
adc
adcl
shl
rcll
jns
and
data16
and
mov
adc
mov
inc
pop
inc
cmp
adc
adc
es
adc
xor
and
xchg
sbb
dec
mov
js
out
and
adcl
adcl
push
cmp
sub
int
inc
daa
ljmp
nop
pop
pop
and
pushf
test
cmp
jbe
negl
mov
xchg
les
pop
pop
sbb
mov
pop
mov
fisubs
xchg
xchg
outsb
lds
iret
bound
fadds
movsl
in
xchg
pushf
adcb
sbbb
in
mov
incl
inc
fldcw
jno
push
lcall
bound
xchg
xchg
xchg
fimuls
xlat
cwtl
cld
lea
and
mov
mov
daa
xorl
xchg
jns
cld
dec
push
pop
and
cmp
pop
sub
hlt
mov
or
dec
add
xor
or
out
sub
add
push
sub
adc
scas
aas
dec
das
fcmove
clc
mov
pushf
cmp
out
xchg
mov
xchg
jg
xchg
sub
jmp
xchg
cmc
incb
inc
xchg
pcmpgtd
cwtl
imul
bound
insb
out
in
cli
push
shrl
push
sti
mov
sub
jne
jle
js
lods
cmp
or
and
adc
pop
xor
sub
stc
or
xor
mov
sbbb
cmpsl
jnp
jle
mov
pop
xchg
pop
dec
xchg
cltd
sub
call
jbe
rol
repnz
or
or
sub
mov
in
sub
cmpsl
aas
push
inc
mov
mov
nop
sub
hlt
loope
lock
int3
shrl
cmp
loope
fucomip
push
add
sub
into
or
mov
cmp
or
xchg
inc
outsl
sbb
add
cmp
fsubrl
das
pop
test
jl
dec
fdivl
xor
add
pop
notb
or
mov
add
data16
dec
add
jg
pusha
outsl
jbe
cmp
pop
fcmovne
mov
cmp
add
fstpl
jmp
ds
cmp
mov
mov
and
sbb
push
mov
push
test
jl
cmpsb
jg
xchg
mov
pusha
pop
pop
add
mov
mov
sbbb
lcall
stos
dec
sbb
loop
inc
xor
lret
push
sbb
add
jne
aas
jge
push
push
mov
pop
in
sbb
pusha
xor
sbb
mov
adc
cs
mov
or
mov
fdecstp
adc
pusha
push
sub
inc
push
xchg
adc
push
leave
in
mov
fs
cmpsb
cmp
push
lods
jb
cmp
dec
pop
xchg
rcrl
cmp
daa
ja
out
sbb
lret
test
mov
xchg
loopne
daa
fwait
cmp
scas
test
cld
push
std
incb
or
pushf
lock
push
clc
bound
sub
sbb
shrl
add
js
sbb
mov
stc
cmp
insl
lret
mov
aaa
and
arpl
cmp
push
in
hlt
pop
pop
push
push
xor
ret
sub
das
sub
xchg
xchg
gs
mov
cs
fwait
cld
xchg
int
daa
cmp
inc
repnz
pop
lods
hlt
and
mov
mov
cli
aaa
fisttpl
movsb
dec
or
mov
cmc
adc
fistps
lea
iret
xor
loop
cmp
xchg
mov
cwtl
jmp
push
js
xchg
rclb
lret
movsl
shlb
test
imulb
aaa
sbb
pop
jl
mov
sbb
pop
cmp
push
adc
fadds
cmp
jne
btr
js
cmp
dec
add
fsubs
inc
jae
ljmp
aad
mov
dec
push
sbb
mov
rorb
xlat
sub
fisttpll
pop
xchg
jmp
jge
pop
or
or
clc
int
imul
jle
fnstsw
sbb
and
mov
aas
mov
add
jbe
fdivl
lcall
pop
leave
xor
push
cmp
fisubs
xor
sahf
arpl
and
cmp
pop
fstpt
insl
lock
jp
les
shrb
xor
mov
push
pop
rcll
or
into
jp
std
mov
jb
ds
sti
cltd
pushf
pop
or
adc
fwait
mov
push
dec
push
shlb
out
out
lret
push
sti
push
cmp
std
lds
mov
dec
lcall
xchg
xor
xchg
or
ss
dec
clc
jae
sub
inc
in
int3
gs
add
clc
subb
mov
sbb
out
sbb
mov
mov
mov
jle
ret
cs
inc
popa
adc
xchg
data16
jge
add
cltd
into
mov
ret
call
rcr
dec
adc
mov
lcall
push
jge
test
mov
lret
mov
scas
mov
push
jp
es
xor
sub
push
xchg
jle
xor
mov
cmp
cld
sbb
andl
push
jp
cli
inc
gs
sbb
xchg
imul
aaa
ret
outsl
sbb
pusha
test
and
cmp
mov
sub
sarl
test
and
int
es
cmc
sub
mov
pop
jnp
inc
cli
fwait
pop
mov
mov
xchg
dec
push
mov
mov
test
cltd
out
iret
pop
adc
arpl
jp
xchg
push
ja
inc
sbb
aas
mov
mov
pop
cmpsl
jl
push
inc
mov
lret
dec
data16
rcrb
adc
ds
divl
lahf
fnstenv
jge
jns
nop
jge
mov
out
pusha
rorb
xchg
pop
fldcw
cwtl
jo
jne
mov
or
lods
xchg
sbb
popl
add
js
push
jne
sub
xchg
sbb
sbb
mov
sbb
movsl
pop
inc
dec
xchg
repz
scas
popf
pop
mov
jno
mov
and
jns
push
ds
adc
dec
sub
fucomi
or
push
out
sub
into
movsl
xor
movsb
add
fwait
and
popf
nop
fs
adc
lods
pusha
rorb
push
addl
imul
dec
cmp
neg
mov
cwtl
pop
stc
ljmp
lahf
loope
arpl
xor
hlt
imul
push
lahf
iret
mov
sbb
mov
loope
inc
stos
call
lds
mov
sub
mov
mov
push
lcall
int
xchg
cltd
jbe
inc
cmpsb
jne
mov
mov
shl
and
enter
push
les
push
or
jbe
lea
filds
out
inc
cmp
jecxz
jbe
push
js
pcmpgtw
out
push
lret
or
pop
or
or
pop
or
nop
pop
ffree
mov
push
nop
in
mov
icebp
in
jns
pop
outsb
stos
fmul
dec
ror
mov
inc
mov
mov
shll
insl
add
testb
dec
leave
imull
xor
inc
sbbl
nop
dec
pop
es
lret
dec
scas
adc
jmp
or
adc
xchg
inc
mov
add
fcompl
mov
mov
int
cmp
cmc
sti
or
mov
adc
aas
xchg
pop
mov
insb
js
sub
pop
aam
mov
iret
jnp
mov
fstpt
add
pop
test
cmc
xchg
lea
jb
sub
in
mov
pop
shlb
imul
enter
xor
fnsave
out
mov
adc
sbb
insl
jge
mov
orl
loop
xor
gs
mov
in
pop
je
daa
lods
gs
or
fnstcw
push
movsl
push
xchg
adc
sbb
jl
push
scas
loope
lock
mov
fisubl
xchg
add
fistl
and
cli
sbb
test
lods
popl
pop
xchg
xchg
mov
pop
mov
xchg
lahf
mov
mov
adc
add
add
into
faddl
mov
sahf
fmuls
ficoml
sub
or
adc
adc
loop
and
xor
aam
mov
out
pop
jmp
hlt
fdivl
pop
inc
out
lahf
stos
cwtl
fcomps
mov
pop
mov
enter
fdivl
sub
xchg
push
bound
sub
aaa
cld
nop
lcall
std
andb
xor
xor
push
pop
fwait
pop
decl
push
mov
push
xor
xchg
jl
add
ja
cld
lret
jg
dec
outsl
cltd
push
or
out
push
mov
push
popf
xor
test
outsl
decb
orb
push
push
jle
popa
loop
push
sub
popl
xor
sub
cwtl
jb
jno
and
xchg
ss
mov
inc
aas
in
jl
sub
mov
cwtl
test
xchg
rcrl
out
bound
push
adc
test
mov
inc
xchg
nop
scas
mov
addl
dec
inc
repz
adc
repz
sti
ds
aad
lahf
sarb
cli
push
add
mov
lea
adc
cltd
in
add
ud2
jle
mov
icebp
mov
pop
mov
xchg
mov
ja
mov
shr
aad
and
gs
pop
jne
leave
int3
pop
ss
inc
xchg
dec
scas
jg
inc
jp
rclb
jns
daa
inc
ds
lret
test
cmp
fcos
jle
cmp
or
ret
rcr
pop
jno
cmc
jmp
ffree
inc
stos
clc
mov
ret
xchg
call
hlt
mov
dec
xchg
cmpsb
jp
add
sbb
adc
ss
cli
cmp
cmp
jae
xchg
pop
test
mov
in
fucom
pop
lea
mov
test
lret
imul
in
push
inc
ret
ja
pushf
add
rcrb
pop
ret
out
je
xchg
lcall
and
cmp
xor
adc
fildll
and
pop
sbb
mov
icebp
jb
ss
sahf
add
mov
ret
cmp
mov
bound
push
sub
cmp
fistpll
or
adc
jne
push
mov
ss
das
cltd
and
jecxz
jge
mov
lods
pop
jbe
int
lret
jne
sahf
pop
inc
xor
stc
daa
daa
jae
push
fisttps
addr16
mov
mov
adc
daa
sub
and
mov
push
movsl
adc
cltd
pop
popf
mov
pop
mov
js
or
jb
mov
popa
sbb
xchg
stos
out
popf
imul
shr
pop
scas
insb
pusha
mov
cmp
sbbl
cmp
popa
cmp
test
sub
fs
sbb
mov
data16
sub
pop
stos
rol
lahf
xchg
mov
or
jmp
in
jge
decl
leave
cmp
or
push
dec
lock
mov
popf
loopne
mov
inc
push
pop
jmp
test
lods
dec
fsubrp
pop
mov
mov
add
cltd
and
lret
jmp
jge
popa
pop
mov
sub
ret
or
ja
jge
mov
rcrb
xchg
inc
sbb
mov
mov
std
lahf
in
jp
xor
pop
das
out
pop
cmpsl
out
sub
mov
jne
mov
mov
lahf
push
ret
push
test
out
into
sub
dec
iret
inc
ljmp
inc
add
outsb
shll
outsl
jae
jmp
and
sbb
fildll
sub
sub
mov
cmp
inc
cltd
sub
sbb
sub
pop
adc
mov
xor
loope
sbb
cwtl
jne
movsb
ljmp
push
xor
into
in
std
mov
hlt
lahf
add
cmpsl
pop
shll
xor
cmpl
dec
pop
jle
gs
xchg
arpl
in
repnz
cmp
pushf
adc
mov
jle
inc
leave
xchg
pop
or
imul
ret
dec
pop
and
mov
imul
cmc
pop
xchg
push
add
js
mov
out
in
push
sub
inc
inc
daa
stos
test
in
test
jb
out
push
test
push
mov
mov
and
jle
jecxz
ret
sbb
and
sbb
cmpsl
or
add
xlat
cld
scas
xchg
loope
stos
cmp
mov
jne
xchg
adc
mov
ret
cmpb
xorb
adc
insl
and
loopne
xchg
aad
push
fcom
je
xchg
adc
adc
fdivrl
xor
repnz
cmp
bound
push
sbb
das
lret
loop
xor
in
test
mov
arpl
mov
les
push
imul
pushf
inc
fs
inc
mov
push
xchg
inc
scas
in
loopne
pop
jecxz
mov
dec
and
fsts
pop
sbb
fisubs
push
or
mov
movsb
enter
pop
jecxz
adc
lods
insl
mov
das
mov
cltd
mov
sti
jb
jns
sahf
jns
aaa
jle
push
sbb
mov
fsubp
lds
out
add
push
xchg
cmpsl
push
dec
xor
or
mov
pusha
insb
add
xchg
fsubrs
mov
mov
mov
or
daa
pusha
call
push
mov
fildll
lea
xchg
cmp
xor
xchg
xchg
sbb
xchg
adc
scas
in
mov
cmc
les
or
mov
ljmp
push
push
aam
inc
push
inc
sbbl
cmp
test
pop
int
sbb
andl
cmpsl
push
pop
pop
subl
adc
push
bound
inc
fmuls
mov
add
ss
adc
daa
or
pop
repnz
sub
mov
jbe
cmp
jne
push
fs
mov
cwtl
xor
cmpsb
mov
inc
push
and
stc
sbb
jecxz
or
jmp
xor
push
in
test
aad
subb
jle
psubusb
or
sbb
int3
mov
jmp
ret
dec
ja
pop
mov
jne
ja
cltd
lods
sbb
vmulss
or
aas
adc
enter
or
std
mov
xchg
mov
push
test
mov
mov
adc
push
fwait
repnz
mov
mov
dec
pop
imulb
gs
rol
add
sub
imul
jmp
sbb
daa
out
in
add
pop
add
ljmp
repnz
imul
addl
dec
movsl
and
cli
mov
je
and
cmp
xor
icebp
fcmovnbe
jno
inc
scas
xchg
popf
push
loope
sbb
inc
push
sub
xor
inc
dec
or
xchg
adc
lods
stos
pop
jo
and
aad
sub
js
mov
std
dec
repz
pop
arpl
sti
push
mov
inc
or
jle
icebp
push
cwtl
inc
into
outsb
test
pusha
push
loop
fisttpl
iret
jmp
cli
xor
and
lretw
xor
or
adc
repz
out
mov
imul
je
inc
dec
std
loopne
sub
jbe
jmp
mov
daa
cmpsl
pop
mov
popf
fwait
lret
and
enter
xor
ret
pop
arpl
es
or
test
dec
push
push
and
insl
fiaddl
mov
addr16
pop
loop
dec
in
stc
xor
pusha
popf
mov
gs
sub
add
dec
clc
rdtsc
or
push
int3
int
rorb
cmc
imul
sbb
add
adc
ret
mov
shlb
les
cmp
sub
cmp
dec
scas
pop
inc
add
jnp
inc
pop
test
in
mov
ljmp
or
adc
dec
adc
in
mov
add
or
aaa
arpl
pushf
es
xchg
sub
sub
in
mov
pop
xor
outsb
aas
or
pop
divb
xchg
in
dec
pop
pop
test
lret
inc
jle
mov
sbb
and
dec
insb
jmp
cmp
lahf
push
scas
mov
push
dec
pop
jle
push
dec
inc
lret
mov
sbb
lahf
sbb
addr16
loope
or
or
jle
popl
push
popf
xchg
test
xlat
push
sbb
in
cmp
andl
outsb
mov
xchg
cmc
jbe
push
and
push
ffreep
scas
arpl
xchg
fsubr
movsl
sub
pop
push
push
fimull
mov
mov
fwait
adc
dec
das
mov
fs
es
and
mov
mov
or
and
and
dec
stc
pusha
pop
jp
xor
imul
inc
jmp
popa
cmc
and
mov
test
inc
sbb
pusha
add
fildll
scas
pop
pusha
dec
dec
push
cmp
loop
push
mov
or
sub
dec
loop
pop
outsl
rclb
push
sbb
fadd
mov
inc
add
and
outsb
adc
into
mov
mov
in
hlt
add
imul
js
add
xor
popa
pusha
aas
push
ljmp
pop
mov
mov
repz
and
out
inc
xchg
jge
xchg
add
pusha
and
or
add
rclb
ljmp
cmpsl
jae
fisubs
pushf
push
inc
jp,pt
push
jne
inc
nop
lret
sti
subl
jnp
pop
mov
loop
outsb
sbb
clc
sub
mov
dec
add
out
sarb
xchg
inc
enter
cltd
push
xchg
out
or
repnz
xor
mov
sahf
add
or
clc
lret
adc
mov
movsl
stc
nop
stc
daa
test
mov
or
or
pop
push
lock
pop
cmp
and
repnz
rclb
std
es
push
cmpsl
pop
push
cs
ret
aas
pop
cltd
and
mov
mov
shlb
or
push
mov
push
dec
testb
rcll
xor
ret
sub
rcr
push
jnp
les
in
shl
xchg
push
lret
add
mov
fistl
push
sbb
cmpsl
mov
inc
fninit
mov
ss
test
dec
xorl
adc
clc
mov
or
jle
test
ja
mov
popa
out
scas
xchg
pop
xchg
sub
xchg
jecxz
pop
sbb
mov
test
fucomip
cmp
pop
shl
into
fldcw
mov
mov
jmp
cld
lcall
xor
sbb
push
rcl
sti
mov
fldt
fdivp
das
pop
lds
jno
filds
aam
push
aaa
push
icebp
pop
xchg
xchg
aaa
mov
adc
jmp
fidivrl
sub
inc
jo
popa
fstps
sbb
lret
jno
call
sbb
mov
push
je
loopne
cltd
int
lods
pop
and
insb
pop
scas
or
push
jecxz
movsb
push
mov
inc
cmp
cmp
clc
icebp
pop
cld
jp
int3
xor
movsl
sub
call
inc
push
ret
leave
outsl
mov
pop
adc
mov
jae
pop
or
loop
sub
mov
shlb
shrl
jl
outsl
jne
cmp
dec
std
xor
jle
sub
aaa
xchg
and
mov
push
mov
mov
mov
mov
outsb
cmpsl
and
or
or
dec
imul
xchg
xchg
jne
xchg
lret
pushl
pop
stos
lret
pop
mov
les
xchg
loopne
xor
jmp
pmulhuw
xor
dec
pop
xchg
or
repnz
push
xor
scas
imul
adc
pop
icebp
iret
jle
insl
pushf
xchg
rolb
or
cmp
push
in
testl
cmp
jecxz
pop
stos
pop
and
xor
pop
push
inc
jge
add
cmp
xor
pushl
bound
loop
fisttps
out
pop
xor
jb
mov
and
scas
mov
pop
sub
jle
xor
inc
pop
xchg
movsl
add
loope
cmp
scas
testl
es
insl
jo
sub
mov
dec
adc
dec
mov
pop
dec
testb
orl
inc
cmp
out
dec
mov
inc
out
jo
mov
pop
and
lret
icebp
push
jp
jnp
dec
add
cmp
pop
mov
insl
andb
inc
cmp
sub
cwtl
repz
shll
and
dec
cmp
inc
xchg
shll
imul
push
sti
shlb
xor
cmp
scas
out
lods
mulb
jbe
jmp
aaa
test
aad
hlt
jbe
push
mov
stc
lds
je
mov
loopne
add
lret
dec
aad
test
xor
int
cltd
push
mov
shr
insl
cmp
fcompl
das
mov
roll
stos
dec
xchg
pop
sti
rol
loope
imul
jl
decl
dec
popf
push
test
and
inc
ja
jb
out
jo
out
xor
mov
out
mov
pop
xor
add
xchg
inc
and
scas
inc
fwait
inc
in
xor
cli
movsb
xchg
xchg
cmp
movsb
loop
frstor
stos
sbb
pop
fstps
outsb
add
scas
enter
pop
mov
jl
mov
pop
fs
dec
and
je
hlt
movsb
cs
bnd
cmp
jnp
in
xlat
mov
dec
test
xchg
aam
cmpsl
push
pop
xor
addr16
mov
jb
ds
repnz
sub
in
or
cli
jno
and
mov
xor
in
les
nop
cmpsl
clc
mov
int
mov
outsb
jns
jnp
test
mov
inc
sahf
out
inc
bound
imul
bound
test
shll
inc
pop
xor
out
push
stos
dec
pushf
rcrl
push
fcom
insb
cwtl
sbb
loope
fwait
pop
mov
mov
dec
mov
mov
or
std
push
sbb
mov
adc
lahf
push
in
loopne
xlat
pushl
outsl
popa
xchg
jno
cmp
mov
inc
push
rcrl
mov
mov
imul
jnp
fnsave
inc
cltd
jle
pop
dec
xor
jb
jbe
sub
adc
sub
ret
in
jae
add
icebp
enter
scas
mov
jl
andl
and
int3
ss
mov
hlt
and
std
and
rcrb
pop
out
sub
sub
xchg
xchg
pop
jle
cmp
push
cmc
mov
out
outsb
popf
int3
xchg
or
adc
frstor
cmpsl
inc
and
imul
aas
out
mov
in
out
sarl
jb
pop
icebp
int3
cmp
xor
adc
ret
setge
testl
push
cs
or
cmp
popa
data16
jo
dec
flds
test
insb
mov
inc
popf
sub
test
jg
pop
pushf
push
jl
iret
test
out
outsl
punpckhbw
scas
push
xlat
jbe
cmp
xor
cmp
leave
xchg
push
loopne
clc
lahf
daa
test
xchg
pop
mov
xchg
testl
push
lods
xchg
and
or
push
xor
rorb
stos
cld
xchg
jne
test
xor
push
push
jo
stos
es
and
imul
push
movsl
mov
mov
pop
rorb
pop
push
pop
xchg
jnp
dec
push
xor
lret
dec
and
push
cmp
sub
fldcw
in
je
notl
aas
imul
pop
xchg
mov
popa
test
jmp
dec
clc
jnp
dec
fidivrs
and
xchg
fistpll
in
fimuls
inc
mov
lea
fucom
in
je
cmpl
pop
lret
sbb
jns
pop
lcall
xchg
scas
call
adc
mov
xchg
dec
or
inc
jbe
inc
push
sbb
pushf
outsl
test
xlat
xchg
es
adc
xor
push
and
adcl
mov
jg
fbld
pop
das
nop
cmp
jmp
push
in
pop
jl
mov
xchg
dec
sub
push
fcoms
jb
neg
jne
arpl
es
or
fsts
repnz
ret
movsb
sub
xor
les
mov
icebp
jmp
xor
aaa
pop
and
fdivl
adc
pop
imul
inc
adc
jmp
imul
fadd
inc
cmc
sarb
push
rcll
sbb
cmp
lahf
scas
aad
incb
mul
adc
in
out
sahf
pop
jbe
jo
mov
je
sub
cs
cmpb
lret
inc
push
or
ret
pop
lahf
adc
mov
pop
cmp
cmpsl
pop
jmp
cmpsb
and
incb
scas
push
lret
ret
ljmp
out
xor
mov
test
cmpsl
sbb
adc
mov
mov
cltd
jb
xchg
icebp
orl
int3
lret
out
and
lock
pop
mov
int
or
mov
loope
xchg
xchg
jge
cmp
sub
imul
push
adc
push
int
cli
adc
cmp
and
aas
iret
enter
mov
pop
mov
jnp
sbb
xchg
jae
sub
loop
loopne
in
push
jg
inc
into
mov
in
cmc
jnp
test
das
testl
cltd
pop
lcall
shlb
sti
or
jns
popf
lea
sbb
push
inc
push
gs
sbb
aam
cwtl
mov
in
or
ret
sub
jmp
or
inc
pop
lock
test
loope
mov
sub
data16
incb
adcl
sbb
inc
inc
push
push
or
cltd
sub
fildll
insl
mov
xor
data16
xor
mov
mov
into
xor
xchg
xlat
mov
push
push
out
rorl
or
adc
sbb
sbb
aas
loop
cmpsb
stos
mov
mov
ficoms
movsb
adc
mov
or
in
pop
cwtl
repz
xchg
push
mov
test
mov
js
adc
mov
sbb
btr
and
inc
mov
sbb
sub
adc
ja
inc
mov
rorl
add
insb
ret
iret
jb
fisttpl
cs
jg
xchg
movsb
stos
and
cmp
mov
mov
inc
pop
mov
repnz
loop
ds
cld
lcall
add
js
xchg
push
insl
xchg
icebp
icebp
inc
inc
hlt
inc
mov
add
test
stos
pop
mov
pop
fucom
pop
hlt
adc
out
push
stos
shrb
aad
inc
shll
into
mov
jae
inc
push
push
cmp
bound
mov
jns
dec
mov
adc
les
mov
dec
jmp
sub
adc
rcrb
adc
mov
aad
xchg
jp
fidivrl
mov
gs
or
and
fbld
xor
add
xchg
mov
mov
in
sbb
dec
fcoms
xchg
loopne
xchg
mov
mov
inc
imul
jecxz
xchg
adc
sub
in
nop
aas
xchg
int3
or
push
dec
in
dec
mov
dec
xor
rcrl
ret
mov
mov
and
cmp
stc
sub
dec
shlb
je
jbe
je,pt
repnz
or
adc
dec
dec
add
xchg
sbb
push
jmp
and
cmpb
test
inc
push
push
mov
frstor
jp
push
rorb
mov
xchg
pop
roll
int3
repz
xchg
addr16
loop
imul
mov
in
outsl
xor
xchg
outsb
js
pop
cmp
jo
stos
adc
jmp
mov
stos
cmpsb
and
cmpsl
cwtl
int3
aam
sbb
xchg
jbe
fwait
js
pop
jecxz
push
iret
stos
push
push
aam
cli
mov
in
adc
xor
push
lock
lcall
popa
mov
sub
in
xor
idivl
xor
dec
add
inc
or
and
mov
scas
or
push
iret
pop
mov
lds
mov
int
adcl
inc
jmp
lret
loope
test
jmp
adcb
idivl
dec
xor
adc
stc
nop
pusha
push
aaa
dec
das
data16
jl
sub
pop
arpl
jmp
negb
or
or
xchg
mov
stc
outsb
jae
mov
dec
push
fs
sbb
jb
mov
stos
ss
push
arpl
out
fs
add
outsl
adc
jmp
jne
std
jg
loope
cltd
nop
inc
adc
addr16
adc
imul
lods
imul
es
movsb
jl
mov
jae
xor
std
in
test
lock
imul
mov
add
push
repnz
fsincos
rolb
fmull
cmp
std
cmp
das
mov
popf
fidivrl
out
mov
sub
push
shl
lea
iret
stos
xchg
js
out
addr16
mov
dec
xchg
xchg
mov
pop
jge
or
xchg
imul
lcall
cmp
xchg
jge
addb
shlb
mov
mov
push
cmpsb
loope
fdivs
iret
dec
xor
or
iret
outsl
insl
ret
adc
add
movsl
mov
daa
dec
icebp
test
call
sub
fisttpl
icebp
dec
pop
sbb
xor
fsubrs
imul
mov
in
cmp
mov
loopne
pop
inc
fmull
mov
nop
mov
jmp
cmp
mov
add
pop
adc
xchg
mov
shll
bound
repnz
jle
iret
xlat
outsb
je
add
ret
sub
clc
or
adc
movb
xor
out
fsubl
mov
push
add
xor
xchg
enter
sub
jp
popa
jmp
lcall
js
cltd
andb
int3
xlat
es
popa
ret
pop
into
xor
xchg
pusha
scas
push
mov
inc
jp
adc
push
jle
inc
and
in
add
mov
sub
push
enter
leave
dec
outsl
dec
stos
adc
or
pop
orl
mov
add
dec
push
mov
mov
inc
xor
sbb
sbb
push
cs
jne
xor
and
mov
jmp
mov
cli
test
lods
sub
dec
mov
xorb
and
and
into
mov
inc
rcr
inc
daa
dec
xchg
push
lods
movsl
sbbb
xchg
jnp
imul
addr16
into
js
jae
pop
mov
or
dec
aas
fisttps
inc
lcall
loope
mov
xlat
mov
mov
push
sbb
adc
push
push
mov
sub
add
cmp
ds
js
int3
fldenv
sub
mov
stos
mov
enter
or
mov
lods
call
lret
inc
dec
and
lahf
mov
push
mov
into
hlt
cmp
leave
sbb
mov
mov
push
cmp
mov
pop
pop
add
mov
sub
ja
xchg
loop
shrl
fs
xchg
rolb
mov
inc
leave
mov
mov
mov
jne
push
xor
xor
addr16
loope
xchg
icebp
pusha
sub
add
mov
aam
sub
les
bound
aam
push
or
popf
scas
add
movsl
mov
add
test
aas
insb
loopne
testb
ds
shll
pop
sub
outsl
dec
les
add
jno
in
addl
sub
xchg
push
xchg
ds
jecxz
repz
les
test
xchg
fwait
mov
jb
mov
xor
stc
lret
add
leave
cmp
dec
mov
out
jle
adc
lahf
push
pop
out
ja
nop
pop
ds
mov
ret
mov
jg
mov
mov
mov
sub
leave
xor
mov
js
push
jle,pn
hlt
sub
cli
sub
sarb
loope
rcrl
inc
pushf
push
mov
js
cmp
nop
push
jp
outsb
bnd
sarb
add
and
rcpps
add
or
and
or
xchg
dec
cltd
sub
dec
or
data16
push
je
pop
cs
dec
xchg
inc
fcoml
mov
dec
sub
push
js
nop
and
pop
push
pop
repnz
nop
mov
jno
push
int
adc
std
cmp
sti
inc
roll
aaa
pushf
mov
insb
sub
add
and
cli
mov
sub
ret
leave
dec
cmp
fs
fs
mov
jl
ret
inc
pop
cmpsb
and
ds
lret
mov
fbstp
dec
dec
out
fs
push
cmp
mov
cmp
movsb
int
orl
subl
hlt
imul
mov
xor
out
jmp
sub
dec
add
insb
or
faddl
loope
aas
and
aas
data16
jnp
sub
push
lea
cmp
add
jg
lock
mov
aaa
cmpsl
mov
cmp
pop
mov
test
jg
mov
mov
stc
add
mov
adc
jmp
dec
scas
mov
or
adc
and
negl
pop
sub
jl
lock
and
mov
fdivrl
shlb
dec
outsl
adc
ror
sbb
roll
push
adc
addr16
sbb
stos
xchg
add
adc
shrb
mov
sub
in
icebp
fistps
clc
mov
testl
adc
fdivs
stos
cmp
push
cmpsb
sti
cmp
push
mov
pop
cmp
ret
push
sti
lock
je
jg
push
pop
in
cli
inc
jbe
add
jmp
cmp
lahf
pop
icebp
mov
pop
dec
inc
cwtl
mov
jne
mov
ljmp
pop
jne
cmp
pop
ja
aas
rcl
outsl
push
cltd
je
loope
adc
adc
mov
push
mov
push
or
pop
or
out
scas
stos
movsl
clc
idiv
lods
push
scas
inc
loop
dec
int
mov
dec
and
mov
cli
mov
aad
mov
fstp
jg
subl
push
popw
sbb
adc
and
and
je
int
cltd
inc
xchg
rolb
loope
jbe
mov
and
xchg
adcl
outsb
cmc
mov
mov
fdivs
xor
pop
mov
push
push
mov
jne
sbb
mov
lods
aad
add
dec
sbb
mov
int3
push
jne
push
xchg
sbb
out
in
adc
xchg
pop
mov
jnp
je
cmp
mov
mov
push
in
out
or
lods
sti
cmpsl
xchg
push
pop
mov
std
cmpsb
cmp
mov
pop
lock
fmuls
inc
roll
adc
or
jae
orb
aad
jle
pop
mov
mov
gs
ja
inc
mov
hlt
sbb
mov
hlt
mov
push
into
pop
jg
sub
rcrb
add
rolb
and
mov
xlat
outsl
push
jo
imul
in
lret
cmpsb
js
shlb
in
xchg
and
pop
xor
adc
push
or
test
jmp
mov
cltd
jmp
jp
xchg
fldenv
fcmovb
xor
call
cmp
push
imul
sbb
bnd
aas
fisttpll
sbb
notb
jmp
int3
jp
add
gs
jge
dec
xchg
jo
jo
int3
les
stos
cmp
adc
sbb
push
rcrl
leave
decl
imul
hlt
fcmovnbe
imul
ljmp
or
loopne
pusha
xchg
jbe
icebp
or
bound
sti
mov
divb
popf
stc
xor
rorl
int
jae
js
xor
sbb
xor
test
stos
ror
pop
in
fldcw
dec
invd
jge
sbb
cld
sub
test
adc
mov
nop
in
movsb
dec
in
cmp
shlb
data16
mov
cmpsb
push
push
pop
addb
fucom
leave
pop
ljmp
sarb
std
pop
das
clc
or
sbb
inc
bnd
and
jle
cmpsb
addr16
push
mov
jmp
push
les
addb
shr
mov
jecxz
or
xchg
out
and
mov
loop
dec
cwtl
xor
mov
shl
scas
adc
insl
addr16
fimull
pop
dec
pushf
xor
shld
adc
xor
inc
add
mov
pushf
push
xor
pop
aam
pop
xchg
or
xchg
xchg
imul
sar
push
pop
lods
dec
fdivr
lret
sahf
fists
jbe
and
std
mov
sahf
inc
in
aad
popa
mov
xlat
add
jne
mov
mov
push
mov
jge
sub
push
xchg
dec
mov
stos
popa
in
stc
iret
xor
mov
mov
xor
insl
inc
addb
jg
out
push
push
jle
inc
lds
sbb
sbb
pop
bound
xchg
adc
aaa
loope
xchg
and
gs
mov
ja
lds
sahf
pop
movsl
xor
fcmovnu
movb
les
mov
push
arpl
mov
out
int
dec
inc
xorl
stc
or
xor
in
dec
dec
idiv
fcomip
addb
jmp
leave
dec
cltd
xchg
aam
pop
mov
xchg
and
pop
inc
mov
lcall
pop
ja
mov
cmp
xchg
xor
out
pushf
in
fisubrs
jae
imul
enter
cmp
out
sahf
cmp
aas
lods
cwtl
loopne
cltd
js
pop
adc
sub
fidivrl
adc
mov
push
outsb
mov
sub
mov
jbe
test
fsubrl
mov
dec
sbb
push
insl
xchg
sub
insb
rclb
jmp
js
mov
xor
adc
ljmp
push
cmp
pop
scas
and
or
xor
out
outsb
jmp
jmp
cli
sbb
incb
inc
js
mov
inc
hlt
add
js
pop
test
mov
lret
je
sbb
insb
fimuls
jne
gs
xchg
outsb
mov
xlat
imulb
mov
push
std
ficomps
cmp
cwtl
or
mov
pop
sti
push
data16
cmc
pusha
outsl
sbb
mov
call
cld
jb
sub
jno
add
xor
cmc
int
stc
sub
aaa
fmuls
add
fldenv
pop
xchg
aaa
clc
fadd
adcl
hlt
shlb
inc
idiv
adc
dec
test
repz
xlat
sbb
lahf
pop
add
mov
xchg
cmp
int
inc
scas
mov
adc
fisttps
stos
dec
mov
leave
cmp
hlt
xchg
mov
adc
test
xrelease
jns
sahf
cmp
mov
idivb
xor
mov
mov
nop
sub
add
pop
sub
add
gs
mov
outsb
mov
sub
mov
jl
js
out
lea
lahf
fs
push
push
jl
push
movsb
scas
imul
jb
jecxz
dec
mov
mov
cwtl
jns
jge
and
pop
cli
fcomps
or
es
rcrb
mov
fnsave
outsb
pop
lcall
fmull
mov
xchg
mov
imul
jne
mov
fidivrl
or
cmpsb
jge
inc
aam
out
cld
push
out
mov
insl
xor
jmp
jmp
lds
xchg
movsb
mov
inc
es
cmp
loope
stos
cmp
pop
popa
push
mov
fs
push
aaa
xor
sub
push
mov
adcb
mov
cli
mov
cmp
jae
mov
mov
stc
jb
sbb
icebp
loopne
ss
lcall
outsl
xor
mov
subl
fistl
mov
pop
test
lret
xor
jne
adc
inc
add
mov
mov
inc
push
fs
dec
push
jo
arpl
fidivs
inc
mov
imull
pop
sbb
pop
xor
outsb
in
jmp
iret
xchg
lods
ret
dec
aam
xor
dec
xchg
xor
stc
lds
insl
test
popa
aaa
jb
fs
dec
in
add
mov
push
mov
out
dec
movb
push
out
bound
pop
add
mov
xor
shrb
dec
or
sbb
sub
and
and
cmp
lea
pop
jge
pop
js
int3
fcmovbe
call
jle
xchg
test
aad
jg
leave
mov
jmp
scas
mov
pop
jno
movsl
mov
sahf
xorl
hlt
in
pop
stos
into
cmc
sbb
xor
pop
xchg
xor
aaa
sbb
adc
dec
cmc
push
push
in
xchg
stos
jge
xor
ficompl
cmpsl
repz
jmp
push
pop
add
cmp
cmp
jb
loopne
shll
cmp
frstor
int3
jl
adc
dec
jge
pop
bound
ret
icebp
das
test
jp
shlb
pushf
pusha
mov
mov
dec
lret
data16
add
cmp
pop
decb
xorb
mov
xor
pop
gs
les
xor
mov
cmp
xchg
cmp
inc
inc
dec
xchg
lock
xor
scas
orb
pop
test
insb
push
xchg
cmp
sub
push
outsl
iret
repz
dec
mov
jns
xchg
add
push
test
sub
mov
sbb
mov
test
stos
sbb
push
pop
cltd
mov
sub
mov
fwait
mov
lahf
bt
push
lret
out
cmp
test
cld
mov
loop
mov
fs
sub
outsl
dec
xchg
out
mov
out
mov
pop
js
pop
adcb
lret
idiv
cmpsb
cld
fsubrs
scas
adc
aam
scas
push
cltd
mov
pusha
lcall
push
cmp
jle
xchg
pusha
shrb
pop
dec
adc
mov
ret
jmp
pop
push
push
fistpll
fsubrs
pop
inc
rcrb
mov
push
es
adc
xchg
sbb
pusha
std
cmp
arpl
mov
xor
jmp
sub
dec
int
loop
inc
jmp
push
in
inc
push
push
movsb
into
and
adc
cmp
pop
cwtl
sub
and
and
jg
sahf
int3
jns
xchg
scas
nop
mov
and
in
out
enter
sub
cmp
sbb
test
xchg
or
inc
ret
push
stos
pop
and
nop
jmp
pop
dec
xchg
pop
sahf
xchg
mov
inc
jecxz
dec
dec
cmp
xchg
xor
xlat
bswap
adc
pushf
sbb
aas
and
cmp
jge
leave
test
add
push
std
loopne
popf
aam
imul
and
je
cmp
push
jmp
lcall
adc
call
in
mov
fdivrl
lret
jae
add
in
fcompl
or
orl
push
data16
fdivs
orl
cwtl
mov
mov
cltd
pop
lods
test
gs
sub
xchg
pop
hlt
and
popa
xchg
sub
orl
sub
or
pop
roll
fsubl
ljmp
or
mov
mov
dec
mov
xor
sub
lds
fidivs
push
pop
data16
pop
jl
push
es
rcrb
or
jnp
hlt
mov
jae
mov
jae
dec
les
or
sahf
xchg
xchg
dec
add
xchg
shll
mov
outsb
or
lods
mov
jge
enter
push
ret
pop
fists
push
dec
es
icebp
lods
mov
leave
dec
push
ss
push
xchg
xor
mov
fwait
cmp
dec
mov
rol
aad
cs
faddl
or
and
ror
push
popa
and
xor
mov
dec
pushl
mov
xchg
sub
adc
pop
in
lods
xchg
popl
pop
pop
push
and
inc
push
jns
movsl
jle
add
rcrl
jmp
loopne
cs
fimuls
mov
jno
mov
test
add
mov
jns
stos
mov
pop
aaa
mov
dec
pusha
mov
or
jmp
lret
jecxz
mov
shll
mov
cmpl
aaa
pop
xchg
sbb
mov
cmp
push
mov
andps
sub
and
clc
sub
and
mov
ja
mov
movsl
sbb
lcall
int3
mov
or
jb
jnp
outsl
cld
adc
pusha
jb
or
aad
inc
mov
in
out
inc
mov
jecxz
out
imul
dec
out
pop
and
adc
push
ss
or
and
insl
sbbb
sbb
inc
dec
out
stos
sub
imul
adcb
mov
popl
xchg
push
xchg
ljmp
jmp
push
jnp
pop
ss
fstsw
push
sbb
mov
dec
xor
mov
lret
loopne
dec
sahf
cmpl
out
cs
ja
xor
mov
add
lahf
rclb
in
out
aas
xchg
aaa
mov
xchg
sub
mov
pop
mov
ljmp
ss
lret
cli
lods
out
pop
mov
push
jno
sub
ficompl
adc
mov
jmp
adc
imul
data16
cmpsl
out
les
fildll
jns
sbb
xor
out
ror
stc
sub
ljmp
mov
fadd
or
pop
adc
mov
cmp
sub
pop
mov
dec
test
int
lcall
shll
movsb
addl
push
repnz
addr16
fdivs
jb
in
push
shrb
add
fdivrl
push
fstps
mov
sbb
mov
xchg
insl
pop
jb
sarl
pop
adc
push
add
inc
inc
adc
mov
movsb
and
addb
test
aaa
gs
std
or
out
sbb
push
incb
packuswb
fs
sbb
int3
jge
addr16
xchg
fs
xchg
dec
sbb
add
imul
inc
in
in
or
add
add
xor
scas
and
jae
or
sub
les
mov
scas
mov
cwtl
fisubrs
adcl
addr16
mov
js
xchg
jae
sub
push
xor
push
jp
dec
notb
call
rorb
xlat
mov
jb
dec
jp
fimuls
sub
test
adc
inc
inc
scas
cmp
ret
mov
pop
loope
fsubl
stc
out
jg
and
cmp
cwtl
movsb
inc
repnz
adc
jmp
roll
inc
xor
and
lods
mov
push
push
xorb
mov
jmp
int3
mov
repz
mov
popf
fsubrl
adcl
testl
testb
fidivs
out
cli
jmp
cmp
lea
iret
push
cmp
stos
add
cmp
fmuls
dec
into
xchg
xor
and
fsubp
dec
shrl
nop
mov
or
mov
out
adc
sub
or
enter
not
jno
sub
sub
push
xor
sub
test
cld
jno
or
xchg
dec
mov
sahf
cwtl
push
push
adc
sub
lds
sub
test
push
movsb
jl
xchg
cmp
test
xlat
dec
cmpxchg
xor
xor
popf
sub
or
not
xchg
js
stc
shll
push
sbb
xor
and
sbb
sub
pop
pop
or
sub
inc
sbb
arpl
push
cltd
cmp
mov
sahf
loop
mov
aas
sub
sbb
mov
cmpb
adc
int
mov
rcrl
in
dec
fsubrl
jge
add
xor
mov
ja
test
add
mov
push
rcrb
das
frstor
jl
mov
lods
test
jle
insl
push
rolb
mov
mov
mov
mulb
repz
js
jp
sbb
jmp
int
jecxz
xor
bound
sub
insb
nop
pop
js
cwtl
xor
popa
insl
xchg
fs
push
jmp
push
mov
cld
pop
enter
jne
pop
fdivrs
sbbb
clc
or
and
fsts
loopne
test
js
scas
je
scas
xchg
mov
in
aam
ret
es
and
sbb
andl
mov
scas
fisttps
pop
cmp
stc
daa
cld
call
mov
fmull
hlt
aaa
cmp
test
cltd
stos
inc
add
jecxz
push
out
or
jmp
xchg
jno
lret
loope
adcl
inc
and
or
or
iret
mov
dec
or
or
ds
push
or
inc
stos
xor
ss
cmp
lock
fwait
ret
xchg
js
test
std
mov
notb
inc
pop
in
push
sbb
or
mov
add
mov
arpl
sbb
add
add
xchg
and
jle
sub
mov
sbb
lcall
or
sub
adc
movsb
mov
dec
psrlw
ja
lock
jb
adc
jb
push
push
dec
leave
inc
shrb
jbe
fld
imul
jge
xchg
int
std
cltd
lret
inc
xor
fldcw
rclb
movsl
mov
or
and
ja
je
mov
cltd
pop
cmp
loopne
lock
in
xlat
pop
xor
aas
fdiv
adc
mov
mov
push
inc
inc
mov
clc
and
cmp
adc
movsl
lret
xor
fimull
and
ja
lea
lret
add
add
mov
adc
shl
out
jg
mov
gs
stc
cmpsl
push
pop
cmp
mov
and
fmull
mov
sbb
mov
adc
inc
pop
popf
adc
imul
mov
pop
cmp
pop
out
mov
push
mov
add
dec
inc
je
je
movsl
mov
movsb
pop
scas
cs
add
mov
int
adc
out
sub
shr
push
rcll
adc
dec
outsb
leave
push
or
push
mov
andl
lsl
xchg
fucom
cltd
imul
das
sarl
xor
cmp
lea
cmc
add
sarl
pop
ljmp
sbb
cmp
inc
sub
mov
sub
aad
adc
ficoml
ljmp
mov
add
or
dec
loop
ljmp
sbb
inc
dec
dec
mov
jo
cmpb
pop
andl
cmp
and
add
loop
test
or
inc
clc
aaa
sub
jg
jno
int
cmc
mov
pop
mov
push
cmp
sub
shlb
call
dec
xor
lock
in
adc
scas
out
call
sbb
mov
jb
and
and
pop
jns
mov
lcall
push
fcmovnbe
cmpl
mov
and
mov
mov
xchg
or
add
lods
push
lds
ret
call
repnz
ja
mov
dec
rorl
mov
ss
jle
jnp
adcb
adc
pop
popf
sub
jmp
add
js
lods
mov
inc
add
daa
xchg
mov
iret
imul
fs
sti
les
ja
call
or
jle
dec
jge
xchg
mov
pop
push
xor
mov
jg
aam
iret
aas
leave
lret
in
jmp
repnz
ffreep
imul
or
push
push
mov
aam
dec
and
test
mov
neg
inc
xorl
sbb
inc
pop
gs
adc
mov
mov
negl
dec
fisubrl
dec
subl
flds
xchg
push
stc
jl
mov
adc
or
repnz
or
mov
sub
and
jns
dec
adc
fldenv
outsl
insb
sub
popf
lea
test
scas
lods
sub
lret
cltd
jmp
mov
mov
inc
xorl
shlb
aam
cs
div
lods
cmc
cltd
xchg
xor
std
lret
mov
aas
dec
mov
push
mov
sbbl
sbb
adc
jle
cli
das
cmp
dec
roll
pop
movsl
jns
xlat
add
mov
xchg
lahf
pusha
movsb
pop
aad
lods
aam
sbb
out
leave
cmp
lds
jg
bound
out
xor
cmpsb
shlb
add
cs
loopne
or
out
push
mov
cwtl
dec
jo
movl
sub
pushf
or
insl
push
outsb
inc
lds
mov
insb
pushf
jne
aad
sbb
xor
sbb
add
dec
xor
mov
into
cmp
test
cmp
std
dec
pop
mov
gs
mov
mov
adc
loope
dec
and
dec
in
xchg
cmp
hlt
mov
lahf
aaa
sub
fldenv
pop
lods
cmp
cs
int
xchg
icebp
dec
dec
mov
jp
lcall
jno
jp
movsb
mov
idivl
sbb
xor
mov
dec
mov
push
xor
adc
mov
xor
decl
test
mov
call
std
test
shll
icebp
push
sbb
sbb
fdivrs
rolb
mov
filds
lods
mov
test
movl
das
aad
cmp
roll
adcb
or
daa
mov
jb
lock
adc
mov
inc
incl
xor
andb
add
ffreep
xor
sbb
adc
mov
push
jae
ret
je
jl
xchg
iret
add
push
cmp
mov
pop
xchg
push
lret
push
lea
negb
pusha
inc
fwait
lret
data16
pop
movsb
jo
int3
lret
or
sbb
dec
mov
inc
arpl
add
push
jnp
push
inc
fwait
and
mov
pop
fisttpll
mov
mov
divl
in
stc
dec
je
orl
sbb
in
push
fsts
add
clc
push
dec
iret
pop
pop
and
test
sbb
enter
xchg
dec
xor
or
or
xchg
popa
jle
push
ja
pop
in
push
insb
mov
jb
das
push
ret
loope
orl
in
ljmp
mov
popa
lret
and
out
lret
jno
pop
pop
lahf
xchg
nop
lahf
push
cwtl
sbb
pop
xchg
test
rol
fistl
outsl
imul
ficompl
mov
xor
mov
out
inc
and
imul
fs
xchg
mov
xchg
push
cwtl
pop
push
int3
cltd
stos
sti
and
dec
jno
bound
in
jno
mov
and
jl
jbe
loope
lcall
push
mov
or
pop
das
xor
jmp
test
push
cs
fcompl
jge
xchg
pop
imulb
or
cmp
cmp
and
repnz
mov
push
ds
push
adc
nopl
es
cltd
jge
mov
shrb
mov
jmp
mov
cld
inc
jno
popa
aad
ret
cmc
xchg
lcall
dec
lret
cmp
in
mov
ret
loope
out
shr
shrl
jbe
cmp
jmp
lods
mov
lcall
mov
ss
xlat
sti
and
xor
leave
movsb
test
mov
push
push
rorl
sub
jno
lea
dec
mov
lea
sbb
clc
call
add
test
push
add
fdivr
imul
xlat
fs
sti
xchg
inc
insl
push
lcall
ss
or
shlb
ja
aam
add
jo
gs
adc
push
jl
fdivrs
jecxz
leave
lret
popf
pop
sti
dec
xchg
sbb
in
movsb
repnz
jb
inc
shlb
cmpb
hlt
imul
or
mov
nop
or
sarb
xchg
out
pop
mov
push
mov
cld
cmp
sbb
shlb
addr16
inc
cmp
sub
lods
call
mov
and
and
xor
inc
xchg
jg
sbb
adc
sub
hlt
cwtl
sbb
mov
or
dec
push
ss
enter
lahf
fiaddl
add
scas
fisubrs
and
flds
outsb
add
testb
mov
adc
mov
pop
pop
dec
icebp
xchg
popl
movsb
or
jo
ret
inc
out
pop
mov
mov
sub
sbb
xchg
arpl
push
sti
aas
int
lds
lret
inc
add
xchg
pop
mov
xor
mov
xor
mull
call
in
movsb
and
adc
sbb
push
lock
or
mov
mov
incl
clc
sbb
repz
mov
popf
cmp
cmp
sbb
lock
and
test
xlat
pop
jp,pt
mov
nop
inc
stos
cmp
bound
mov
std
inc
mov
icebp
fs
popa
and
loop
es
jno
js
adcl
ss
pop
iret
cmp
mov
pop
aaa
jnp
dec
adc
lret
fwait
decb
cmc
hlt
xor
push
fwait
jbe
mov
push
mov
test
cmpsb
aaa
mov
and
out
pop
push
repz
in
jns
divl
jbe
ljmp
xchg
inc
fidivl
jo
mov
negl
loope
leave
sbb
mov
and
stc
or
mov
insb
mov
sub
ljmp
jp
jecxz
stos
sbb
loope
jbe
sub
nop
mov
or
out
and
push
xchg
jne
jge
lea
cmpl
and
sub
adc
fdivp
inc
and
mulb
fdivrl
pushf
or
pop
push
shll
cmp
jge
adcl
mov
jne
faddl
mov
xor
inc
stc
mov
hlt
cmp
adc
push
xor
push
mov
shrb
inc
xchg
js
sbb
fmul
rorl
xor
mov
cmp
mov
es
cmpsl
push
mov
lds
popa
lret
jo
pop
fisttps
subb
imul
pop
popf
jno
fadds
or
sbb
outsl
xchg
mov
mov
add
mov
sbb
movsl
mov
mov
adc
jg
stos
sbb
push
pop
xchg
pop
cmp
mov
jno
jge
jbe
sub
push
nop
pushf
sbb
and
dec
cltd
xor
popf
jns
movsb
dec
hlt
pop
lds
in
aas
adc
jns
dec
es
add
sahf
mov
je
aad
lcall
aad
arpl
scas
int
add
loop
repnz
pop
fdiv
ret
jmp
and
cmp
ficompl
xlat
and
out
ret
test
pop
push
into
imul
inc
iret
fstl
rclb
mov
mov
cli
call
sbb
testb
cmp
icebp
xlat
sbb
test
sbb
xor
cmp
dec
sub
lds
mov
loope
sub
rorb
lret
fucomip
jecxz
push
mov
add
jno
pop
outsb
and
rcr
mov
hlt
cmpb
test
jg
jge
adc
cltd
inc
dec
das
mov
xor
subb
loopne,pt
lds
adc
lret
out
inc
out
fcmovnb
mov
test
jp
pop
add
sbb
in
mov
push
and
sbb
mov
test
jb
aas
mov
je
enter
js
push
pop
ret
add
das
std
fwait
cvtps2pi
inc
mov
cltd
cs
mov
add
sbb
mov
pop
ret
js
push
add
adc
mov
inc
daa
in
shlb
cltd
test
mov
test
cmp
inc
pop
xor
pop
imul
cld
or
xlat
and
mov
lcall
idivl
mov
roll
ficomps
ja
xchg
and
sbb
lret
aad
imul
push
inc
add
scas
xchg
lcall
mov
xchg
dec
rcr
in
test
mov
lods
mov
jmp
imul
int
pop
enter
xchg
jns
push
std
iret
and
pushf
mov
icebp
jmp
cmpsl
sub
sub
cli
jb
lock
mov
mov
inc
leave
jbe
xchg
xor
in
loop
jge
gs
fldl
lods
jp
jmp
je
hlt
sar
in
sub
mov
push
push
fidivrs
lret
pushf
jg
ljmp
rorl
fwait
cwtl
inc
scas
adc
jns
pop
jns
insl
gs
ss
les
xchg
int
mov
and
xor
jbe
dec
xchg
and
lahf
or
cmpsb
das
outsl
iret
mov
xor
push
imul
stos
sub
es
cmp
jge
insl
mov
mov
aad
outsl
sbb
je
xchg
les
test
cs
xor
je
fs
iret
mov
popf
insb
sub
cmpsb
cld
and
jo
or
in
aam
lods
bswap
push
test
stc
in
jp
push
stos
int3
mov
sub
inc
rorb
pop
into
sub
iret
xchg
jbe
lods
mov
lret
stc
mov
mov
and
sbb
mov
int3
adc
in
xor
loop
mov
neg
cmc
lret
lds
loope
mov
sahf
call
repz
cmp
imul
mov
mov
ljmp
out
push
fcompl
addb
and
inc
inc
das
xchg
xor
decb
adcb
jle
sbb
movb
cmc
scas
scas
cmpsl
lret
and
and
and
pop
xor
loopw
xchg
ds
cmp
in
pop
notl
mov
movb
cmc
jno,pt
cmp
push
pushf
in
out
rolb
mov
arpl
add
ret
pop
lock
lcall
loop
fcmovnu
sti
test
mov
mov
repz
adc
cmpb
negl
pop
add
aad
popa
stos
push
fdivrl
aam
sahf
xchg
js
es
xor
test
xor
push
rcrb
push
inc
sub
aaa
inc
sub
adc
cmp
sub
add
pop
push
lret
xchg
jge
sub
test
enter
pop
jle
or
lock
xchg
cwtl
es
pop
hlt
cwtl
jae
inc
jne
jp
mov
sub
jbe
popf
inc
pop
xchg
pushl
subl
jnp
jns
pop
mov
add
pop
popf
int3
pop
adc
jmp
loop
adc
insl
ja
or
inc
aas
sbbl
push
dec
gs
popf
clc
cmp
sub
das
pop
cmp
lds
jl
cltd
bound
in
fisubl
ja
adc
sub
lods
int
and
inc
mov
dec
push
mov
xlat
xor
popa
mov
pop
bound
xchg
or
cli
or
lret
in
push
add
movsb
add
decb
aad
push
pop
mov
cmp
int3
push
cmc
enter
push
dec
fs
pop
xor
dec
ljmp
test
addr16
push
loop
out
mov
js
sbb
or
pusha
xor
add
dec
adc
hlt
push
xchg
mov
mov
shrb
jmp
int
xchg
mov
pop
or
mov
mov
clc
stc
stc
nop
push
insb
jge
or
fwait
clc
cs
sbb
jecxz
aaa
orl
xchg
inc
jbe
std
push
sbbb
ret
js
mov
push
iret
decl
or
xchg
dec
imul
in
popf
cmp
pop
or
in
ret
dec
add
xchg
ds
xlat
add
pop
dec
or
lahf
loopne
jno
popf
push
and
idivb
ljmp
int3
push
mov
jne
adc
cld
cmc
sbb
push
jl
in
scas
mov
xor
imull
pop
fs
scas
inc
jp
nop
std
iret
xor
pop
xchg
les
dec
mov
out
sub
or
and
popa
mov
xchg
jecxz
hlt
loopne
adc
fildl
add
fcmovbe
mov
repz
enter
add
mov
dec
clc
jo
push
int3
clc
scas
pop
clc
mov
fisubrs
out
sub
or
push
pushf
sti
cmp
imulb
pop
pop
sub
xchg
mov
std
mov
mov
rcll
inc
xchg
or
aam
mov
mov
call
pop
and
push
jo
ss
xchg
xor
or
mov
je
fisubrl
leave
cltd
aad
cwtl
insl
xchg
mov
xor
push
push
lods
or
cmp
clc
mov
out
mov
and
nop
pusha
sbbb
dec
dec
add
sti
sahf
aas
out
mov
jnp
add
pop
gs
dec
fidivs
xchg
fwait
lds
ror
notl
cmpsb
in
shr
jp
or
push
les
test
or
lods
xchg
outsb
movsl
es
mov
aaa
es
add
test
adc
call
sahf
jo
in
scas
jmp
inc
repz
push
lret
push
xor
lods
lods
pop
sti
sub
dec
std
mov
fcoms
cmp
daa
ds
mov
rorl
xor
or
dec
xlat
mov
xchg
jle
push
ds
dec
pusha
repnz
iret
ss
jle
mov
jecxz
mov
rcl
loopne
loop
push
ret
jecxz
repz
push
fsubr
push
outsb
test
push
out
bnd
imul
and
sub
xchg
pop
pop
cmp
clc
in
fildll
xor
add
lahf
or
cmpsb
scas
adc
xor
and
mov
sub
xchg
cmpsb
sub
lods
mov
or
shlb
flds
imul
xchg
mov
enter
jecxz
mov
lret
rcll
movsl
xchg
ret
loopne
cmpb
pop
fists
cmp
les
xchg
jge
adc
mov
fs
jbe
mov
aaa
imul
jle
add
push
jmp
or
incb
xchg
pop
je
pusha
jp
sub
mov
in
dec
cmpsb
inc
sbb
mov
dec
lods
mov
test
test
pop
psrlw
xchg
arpl
jno
pop
xor
fs
pushf
push
inc
xlat
stos
mov
inc
sahf
xchg
mov
add
sbb
or
cmpsb
sahf
mov
jne
test
pop
and
jno
or
mov
shll
mov
test
or
sub
ret
push
loopne
xor
mov
filds
cwtl
testb
fsubrl
andb
dec
dec
jg
xorb
cmc
test
push
shrb
push
inc
lahf
idivl
sbb
and
sbb
add
push
imul
pop
sub
rclb
push
out
and
fidivrs
call
sti
arpl
xchg
pop
xchg
or
pop
nopl
out
insl
js
mov
push
sub
ljmp
sbb
mov
imul
xchg
push
movsl
dec
xchg
outsb
into
call
stos
call
mov
mov
xchg
jns
or
and
push
mov
pushf
adc
xchg
popa
andb
cmp
cmp
daa
sub
test
adcb
fidivrl
es
scas
jle
pusha
add
int3
icebp
cmpsl
inc
adc
inc
or
adc
test
mov
sbb
imul
mov
fs
les
fidivl
cmp
add
repnz
loope
repnz
mov
pushf
push
decb
sub
inc
call
pushf
push
push
and
jg
dec
sub
faddp
imul
or
stos
orl
mov
pop
xchg
or
jne
push
shrl
xor
dec
dec
fbld
fwait
out
mov
nop
fmull
mov
test
aaa
xor
xor
rolb
sbb
dec
push
pop
not
mov
pop
or
outsb
enter
popf
dec
stos
jbe
js
jg
jp
push
mov
xor
cld
sbb
jmp
xlat
lret
jp
loopne
into
vdivps
sub
or
pop
or
inc
scas
sbbl
push
mov
cs
out
jp
sbb
jo
imul
push
sub
cwtl
scas
bswap
inc
movzbl
out
xchg
sbb
stos
xor
loop
and
lahf
inc
test
fists
cltd
out
jb
test
adc
jl
andb
add
cmp
test
cmp
ss
sub
in
jae
mov
sahf
in
jg
dec
in
in
imulb
lcall
popf
enter
mov
bound
mov
clc
inc
cmpsb
imul
push
jne
shr
add
xor
pop
lods
push
sarb
int
cltd
mov
or
lds
outsb
pop
std
add
pop
out
scas
cltd
popa
fsubrl
or
fcomp
lock
lahf
add
jecxz
xchg
push
shrb
jmp
lret
cmp
pop
in
inc
or
aaa
ja
les
lahf
mov
sub
or
jo
pop
cli
adc
int3
aas
cmpsl
and
dec
jle
scas
bound
jb
xchg
mov
iret
dec
dec
popf
ljmp
adc
xchg
aaa
mov
inc
mov
cmpsb
das
lds
arpl
push
and
shl
adc
jns
adc
or
popf
mov
orl
xchg
inc
xor
frstor
xchg
repz
cltd
mov
nop
mov
jne
rolb
and
mov
inc
gs
sub
mov
xor
cmp
daa
xor
fisubrs
fwait
cmp
aas
test
int
dec
push
dec
loop
daa
add
and
in
sti
jb
add
or
ret
stos
cmpsl
push
dec
jecxz
sbb
mov
xor
and
mov
outsb
sarb
in
aas
sti
mov
adc
and
mov
stc
xor
pop
in
sub
mov
adc
push
mov
and
sub
xor
lret
sub
pop
in
mov
test
or
out
xor
pop
insw
lods
pop
addr16
or
outsb
mov
xor
movsl
sti
inc
fcomps
inc
sub
negb
mov
loopne
nop
cmp
ret
sbb
mov
sbb
xor
ja
shll
fcomp
arpl
push
jecxz
mov
inc
rorb
mov
notl
mov
or
push
sbb
push
mov
hlt
clc
xor
adc
divl
push
push
mov
lret
sbb
sbb
mov
out
sahf
fisttpl
stos
or
incb
daa
and
jne
ljmp
push
out
mov
mov
cmp
push
mov
mov
jae
jo
les
std
test
jnp
mov
cvtps2pi
std
add
mov
out
test
hlt
iret
ds
and
mov
pop
outsb
pop
xor
cltd
ret
test
pop
add
xor
push
push
jge
or
lret
sub
cmpsb
aaa
aaa
jg
mulb
loop
fwait
jbe
jg
jp
adc
mov
xor
cmp
cli
shrl
test
mov
ret
mov
pop
pushf
mov
cltd
mov
bound
movsl
popa
or
data16
sbb
add
les
add
add
pop
mov
out
pop
test
incb
xor
mov
pinsrw
imul
sbb
mov
jmp
imul
cmp
dec
xor
arpl
lret
movsl
sub
inc
mov
sbb
aad
mov
incl
pop
movsl
jmp
push
push
jle
mov
inc
in
lds
xlat
mov
data16
sbb
gs
mov
push
cwtl
and
or
loop
aad
inc
cmp
jnp
out
mov
push
push
fstpt
sub
out
sahf
xor
repnz
jo
popa
sbb
out
cmp
outsl
repnz
and
pop
aam
test
lahf
ds
lea
shrl
lret
pusha
cmp
jecxz
mov
add
xor
jg
jnp
pop
je
xchg
cs
cmp
fimuls
stos
mov
mov
sub
sub
into
std
iret
or
test
lods
mov
xchg
call
jecxz
cmp
push
sbb
xchg
stos
in
mov
sub
pop
ret
fistl
xor
fcomps
pop
push
push
and
sbb
outsl
and
and
rclb
fistl
fldl
bound
stc
cmp
sub
push
and
mov
repz
mov
or
and
in
adc
pusha
add
xchg
or
push
fdivs
jmp
bound
cltd
adc
test
jbe
add
jecxz
adc
loope
dec
add
cmpsb
leave
jae
mov
test
cmp
add
inc
push
xchg
and
inc
subb
loope
xor
sub
inc
mov
or
mov
cmp
popa
cmpsb
shrb
pop
ror
mov
cltd
rclb
jae
in
jle
xchg
loope
in
jecxz
test
inc
scas
push
push
scas
cwtl
mulb
xchg
fwait
pop
test
fmuls
push
fcompl
dec
inc
daa
jg
sarb
fcompl
int3
sub
xor
sbb
cmp
cmc
pop
jg
jbe
repnz
push
test
into
inc
iret
fdivs
adc
and
or
pop
arpl
sbb
push
pop
pop
mov
shrb
adc
out
mov
insb
mov
xor
mov
xchg
pop
fwait
inc
xchg
ret
mov
int3
movsb
ds
sbb
out
xor
and
sbb
in
and
sbb
or
jmp
jns
int3
sub
aam
xlat
cmc
int
push
mov
out
insb
adc
sbb
test
add
mov
mov
pusha
xchg
xchg
mov
dec
mov
sbb
iret
out
mov
adc
stc
out
aad
xor
xchg
aas
add
mov
ja
int3
lret
mov
test
loop
clc
xchg
inc
es
in
iret
pusha
aam
inc
and
sbb
xchg
enter
jmp
pop
loopne
mov
mov
arpl
mov
push
stos
lret
cmp
inc
push
out
outsl
xchg
sub
cmpsl
mov
xchg
jecxz
dec
aad
inc
dec
add
movsl
ljmp
xor
cmc
testl
pop
cwtl
jle
push
lcall
stos
inc
rcrl
pushl
inc
loopne
lret
cmpsl
cmp
stos
pop
sub
push
cltd
cmp
aas
inc
xor
mov
out
push
and
cwtl
ds
dec
mov
xor
nop
xor
jg
push
test
test
dec
pop
in
popf
lret
jno
mov
repz
pop
jl
fstps
hlt
jecxz
sarb
inc
xor
pop
mov
inc
movsb
mov
stos
adc
inc
rcrb
add
out
jp
pop
jbe
mull
cld
lret
dec
mov
popa
sar
jge
mov
fldt
scas
je
nop
addr16
sub
push
ds
shll
jl
mov
jae
fdivrs
and
and
lcall
push
outsb
and
jmp
jle
pop
leave
jle
std
add
pop
mov
push
lock
cs
in
mov
jbe
test
push
sahf
push
sbbb
push
scas
cmpl
scas
cmc
in
cld
sarb
and
mov
lret
lahf
sti
sub
fwait
inc
sub
add
pop
adc
shl
sub
jecxz
add
xchg
stc
int
xchg
leave
movsb
out
pop
fstl
in
jne
stos
mov
xchg
imul
lcall
xchg
mov
lock
inc
rolb
jae
sbb
ficoms
pop
stos
fsubp
adc
dec
sbbl
repnz
mov
mov
dec
cmp
jecxz
xchg
cmp
jns
ja
inc
stos
out
jmp
and
je
stos
add
loop
das
sar
pop
and
mov
xchg
mov
and
xchg
into
mov
mov
push
orb
pop
shrl
mov
jae
popl
lret
mov
imulb
lock
insb
fwait
push
mov
or
mov
cmp
cltd
cmp
lock
pushl
xchg
sbb
mov
mov
or
aaa
or
mov
or
aas
xor
int3
dec
out
mov
cmp
push
aam
pop
inc
add
or
xor
mov
lea
sub
cli
xor
ret
jns
test
aas
mov
out
insb
xchg
lods
or
sti
movsb
cmp
jae
cld
aad
pop
fstl
pusha
adc
popa
or
fstpt
mov
ds
sbb
leave
jg
add
movsl
mov
xchg
push
aaa
flds
sbb
jb
in
rcr
std
imul
jmp
mov
aas
movsb
pusha
insl
movsl
call
aam
sti
push
cmp
insl
stos
cli
and
mov
pop
sahf
lret
sub
or
dec
or
sbb
sbb
adc
push
lds
mov
pop
sti
jb
rclb
jp
dec
or
push
outsl
xchg
rol
cwtl
fnstcw
add
test
cmp
mov
push
jb
sahf
mov
xorl
popf
lods
iret
in
in
push
fdivs
lods
cmp
scas
dec
fiaddl
mov
test
mov
and
jnp
add
jmp
addr16
and
add
fisttpll
roll
ds
or
jp
mov
lods
pop
sub
and
add
int
in
mov
push
and
outsb
sbb
cmp
jns
cld
sub
sbb
ss
and
adc
xchg
out
xor
cld
cmpb
xchg
in
stos
sbbl
js
lds
sub
adc
xchg
dec
dec
mov
dec
fmulp
xchg
mov
bound
mov
ret
sbb
enter
mov
jmp
out
mov
ret
das
aaa
bnd
filds
xchg
imul
xchg
ds
stos
sarl
decb
mov
rorl
scas
xor
in
insb
addr16
aaa
cmpsb
cld
inc
mov
orb
mov
cmpsb
fs
fxam
cmp
jle
rcr
sub
jno
fldl2t
mov
fwait
jl
dec
mov
jno
fwait
sub
ja
push
cltd
or
adc
push
or
pop
cmp
sub
pop
or
mov
pusha
xchg
push
shlb
clc
addr16
fmull
xchg
aad
dec
xor
xlat
xor
inc
shrl
mov
nop
out
mov
pop
jae
sub
fs
jl
insb
adc
inc
or
pop
cmp
xchg
hlt
imul
aam
std
aad
pushf
scas
adc
mov
mov
cmp
int3
js
pop
cmp
out
and
push
cmp
or
dec
arpl
push
ja
mov
daa
xchg
fisubs
cmc
movsl
loope
fldcw
add
nop
in
push
add
dec
or
pop
mov
enter
xlat
ds
or
fsubs
jne
mull
movsl
imul
adc
mov
xchg
cmp
rorl
into
mov
mov
add
scas
xchg
sahf
int
jno
arpl
aad
cmp
int
mov
movsb
imul
and
sbb
pop
dec
fdivl
popf
push
cltd
xor
jns
mov
pop
sub
cmp
and
in
push
and
pop
xchg
push
xchg
inc
ret
mov
int3
mov
xchg
pop
shr
imul
push
fadds
sbb
mov
mov
adc
jb
or
aad
addl
shrl
mov
je
jmp
xchg
add
adc
aam
in
std
aad
sbb
lds
sbb
stos
and
mov
testb
leave
or
jge
xchg
jmp
sbb
mov
cmp
jl
nop
sub
xchg
insl
inc
jecxz
jbe
sub
hlt
div
sbb
mov
mov
inc
xchg
lahf
gs
mov
mov
movsb
movsl
stos
cld
sbb
xchg
lea
cmp
pop
push
push
xchg
mov
sub
sub
sbb
mov
lds
insb
insl
sbb
inc
loop
icebp
add
movsl
in
in
shrl
mul
popa
outsb
adc
jmp
ss
ss
jb
into
mov
inc
ja
iret
ja
mov
lea
test
or
mov
std
jl
mov
dec
jnp
sub
or
imul
int
adc
or
xchg
test
jmp
mov
in
sub
bound
mov
sbb
mov
pusha
jbe
ja
movsl
dec
test
call
sarl
ja
cmpl
add
ljmp
and
jne
lea
leave
sbb
xlat
sub
pop
xorb
fnsave
mov
sti
mov
ja
jo
cmp
ret
daa
dec
jne
addl
jae
jg
pop
mov
mov
fwait
lea
xchg
rcrl
push
in
mov
cmp
pop
call
jge
das
cld
insl
mov
nop
mov
imul
push
rcrl
xor
inc
ljmp
mov
dec
add
push
fwait
ret
inc
ds
cmpl
inc
xor
sub
mov
rolb
cmp
pop
adc
pushf
out
add
and
jl
pop
xor
sub
ds
call
rcrb
xor
int3
icebp
loopne
jb
icebp
cmp
and
cmp
lcall
sbb
cmp
pop
dec
mov
mov
inc
sbb
js
jp
xchg
xchg
test
jle
jl
mov
mov
pop
aas
push
into
jns
ja
in
std
shlb
cmp
inc
aad
jne
and
push
movsb
push
and
push
in
adc
test
mov
mov
je
loop
lcall
sbb
xor
incl
sbb
mov
xor
mov
push
std
lret
ror
cmc
xor
mov
test
fisubrs
js
nop
adc
or
inc
ljmp
sub
mov
jne
push
mov
sbb
mov
dec
out
andnps
xchg
cli
sbb
xchg
rclb
aad
lods
call
or
repnz
pop
xchg
push
jge
fbld
sarb
repnz
xchg
add
arpl
call
mov
pop
fs
lods
mov
mov
daa
pop
test
push
repz
das
push
in
add
es
pusha
imul
test
out
clc
sbb
or
sbb
cmp
pop
test
adc
dec
push
push
cltd
inc
xchg
leave
pop
stos
rcr
test
into
imul
xor
movsb
cli
nop
sub
out
xchg
inc
scas
mov
enter
ds
or
movsb
lea
mov
je
pusha
int3
lock
fisubrl
xchg
mov
dec
movl
and
mov
push
addr16
ja
ja
lods
inc
testb
lods
adc
mov
and
cmp
pop
int3
mov
push
sub
lret
test
mov
popf
and
or
rorl
mov
or
xchg
clc
enter
ljmp
add
pop
pop
repnz
xchg
ret
dec
lea
pop
setbe
cld
inc
cmc
sahf
and
cmc
mov
fisubrl
pop
cmc
lahf
lret
dec
inc
or
pop
mov
nop
sbb
pop
pop
aaa
movsl
leave
int
xchg
daa
fdivs
xlat
xchg
inc
movups
push
ljmp
xchg
cmpsb
mov
add
mov
popa
in
lock
jl
lea
cmc
push
popf
adc
call
hlt
adc
ljmp
fcmovu
cld
lcall
das
cmp
inc
inc
mov
mov
push
aaa
shlb
push
and
xor
lods
sbb
icebp
adc
loopne
lahf
in
aad
push
cmp
and
jecxz
mov
dec
mov
adc
dec
sbbl
xchg
cmp
inc
fsubl
or
push
add
push
xchg
xchg
mov
jo
rolb
mov
sti
cmp
adc
orl
xchg
decb
mov
ja
xor
inc
sbb
arpl
sub
pop
xor
mulb
imulb
int
mov
loope
add
das
mov
mov
das
lods
push
loopne
les
xlat
add
jmp
inc
sub
mov
popf
pushf
pop
and
andl
push
add
mov
add
les
sbb
loopne
mov
shll
out
xor
push
mov
lods
je
popf
mov
mov
nop
jl
mov
adc
sbb
aam
sbb
push
jnp
lds
inc
je
jle
adc
mov
clc
inc
and
dec
iret
sub
sbb
aaa
cmc
stc
jno
add
cwtl
xchg
insl
lret
dec
fstps
gs
jnp
push
fsubrp
mov
js
mov
push
xchg
scas
lods
push
sub
xchg
fildll
outsb
sti
aas
dec
cmp
add
adc
and
jno
jg
adc
sbb
or
leave
jne
arpl
jg
nop
fldcw
or
xchg
movsl
fiaddl
jo
inc
stos
cmpsl
or
imul
frstor
mov
push
dec
mov
mov
jns
fildll
dec
decb
jo
cs
sub
xchg
xchg
pop
mov
sbb
cmpsb
push
loop
mov
int3
jo
lds
cwtl
je
outsb
and
mov
icebp
js
adc
rorb
dec
daa
mov
insb
jnp
cmpsl
out
xchg
ffreep
cmpsl
int
divb
mov
sub
icebp
cli
inc
mov
sbb
inc
movsb
xlat
and
clc
xchg
push
mov
mov
sub
cmp
test
mov
movsl
adc
cwtl
lock
outsb
pop
inc
mov
shrb
push
xor
xor
mov
sbb
ja
jmp
jne
popa
aas
and
mov
pop
inc
pop
aam
jb
sarw
lock
int3
fistps
into
xlat
mov
xchg
imul
jae
pavgb
js
sub
int3
fisubs
shlb
or
test
out
push
dec
jp,pn
sub
popf
cld
sub
cmp
jae
adc
cli
les
dec
mov
add
mov
jb
mov
xchg
loopne
and
popa
loope
ljmp
sbb
les
mov
cmp
dec
repz
inc
sahf
jmp
mov
jmp
mov
lret
mov
call
adc
jle
push
pusha
mov
ja
ds
mov
arpl
std
not
rcll
cs
fisttps
push
add
inc
mov
test
nop
add
jb
mov
aas
cmc
inc
decl
push
xchg
cmp
aas
sub
in
pushf
ret
cmp
or
mov
inc
ret
invd
xor
ja
push
mov
mov
ds
pop
and
push
pop
push
adc
lea
repnz
int
lcall
sarb
int3
jnp
ds
loop
movsb
pushf
stos
xchg
mov
or
add
add
mov
sub
popf
faddl
stos
mov
sub
ret
or
xor
sti
jno
test
rcpps
push
adc
sar
ljmp
call
pop
pop
jno
sbb
outsl
xchg
out
divb
cmp
data16
inc
pushf
inc
cmp
ret
out
inc
movl
cwtl
push
adc
jno
mov
pop
pop
cmp
push
cld
cmpsb
add
insl
cmp
lret
or
adc
int
jge
fdivrl
es
testb
xchg
daa
pop
inc
add
push
mov
and
adc
in
push
lea
xor
adc
cs
stos
xor
and
mov
and
repnz
lds
clc
xor
inc
ja
sbb
mov
adc
xlat
inc
in
mov
out
dec
dec
data16
frstor
shrl
ds
int
popf
pop
pop
mov
arpl
jl
dec
pushf
jnp
mov
mov
cmp
testb
ss
stos
mov
inc
jmp
dec
inc
pusha
sarb
xchg
adc
cli
xchg
add
pop
fadd
pop
cmpsl
add
std
pop
jns,pn
cld
test
pop
bound
jp
mov
test
xor
int3
inc
xbegin
inc
hlt
notb
jnp
push
mov
pop
fisubs
mov
inc
pop
out
mov
mov
scas
push
fwait
movsb
or
movsl
fs
and
movsl
repz
inc
adc
mov
cmc
test
jo
jbe
stos
mov
imul
dec
or
aam
stc
fdivrl
sub
out
lods
scas
jb
dec
test
mov
inc
stos
and
out
mov
loop
mov
push
les
les
test
sti
xchg
stc
daa
xchg
push
rol
js
push
test
jae
jnp
jb
pop
xor
dec
and
lcall
and
fsubrp
sub
fs
movsl
adc
jae
xor
dec
sbb
fwait
inc
dec
cmp
add
arpl
mov
dec
ljmp
jecxz
dec
test
mov
dec
fcoms
and
cmpsl
ja
les
in
xor
fdivrs
mov
add
dec
lods
nop
insb
in
sbb
or
and
xor
sti
lcall
outsw
dec
std
sarb
and
icebp
test
fldcw
jnp
int
inc
jmp
dec
push
pusha
aaa
or
sub
inc
cmp
sbbl
popa
xchg
out
test
loopne
test
stos
jns
mov
or
into
daa
xlat
loopnew
and
mov
stos
cmp
mov
xor
cli
sarl
pop
rcr
cmp
push
lods
daa
loope
jnp
and
mov
push
out
fadd
mov
pop
mov
aad
sbb
js
stos
push
das
imull
xor
sti
ss
adc
cmp
js
jg
ret
cli
or
je
dec
inc
aam
xchg
test
loopne
mov
inc
fnstcw
pop
cmpl
test
cmp
jg
daa
and
pop
xor
scas
mov
sub
fcmovu
jmp
xchg
jae
xor
test
push
jb
in
dec
or
jg
mov
cmpsb
pusha
call
cli
shrb
daa
popa
sub
jge
rclb
mov
into
mov
xchg
xor
les
xor
lods
mov
pushf
clc
mov
mov
hlt
iret
mov
jnp
cmc
negb
inc
cmp
xor
jns
ds
and
rorl
jmp
cmp
pop
xchg
mov
inc
dec
mov
popa
mov
cmp
push
mov
pop
xor
ss
es
xchg
movsb
ljmpw
lds
push
es
arpl
mov
fs
mov
out
sub
push
xchg
repnz
dec
inc
sub
sbb
lds
adc
push
inc
sbb
mov
and
cld
hlt
in
roll
cmp
dec
scas
push
shrl
push
in
movlps
faddl
lret
mov
add
iret
outsb
jecxz
jp
mov
lock
cmpsb
rolb
arpl
movsb
sub
call
sub
test
xchg
cld
pop
jmp
sub
sub
pop
pop
jo
pop
adc
negb
sti
iret
sbb
mov
jns
push
or
xchg
cltd
es
ljmp
cmp
or
dec
aam
or
out
push
mov
pop
sub
pop
ljmp
lods
and
cmc
out
imul
das
cmpsl
arpl
fisttps
push
es
or
cltd
in
sbb
clc
adc
jno
sarb
fucomp
xchg
xchg
adc
or
ret
adc
fs
call
and
lcall
and
mov
loope
in
call
jno
and
mov
imul
dec
and
mov
push
jge
iret
xor
in
test
into
mov
dec
mov
push
insl
cmpsl
xchg
sahf
pop
pop
lahf
popf
lods
cltd
push
das
xchg
sbb
call
inc
jmp
jo
sub
cmp
cmpsb
mov
push
shrl
mov
jbe
bound
ja
fldcw
into
mov
xchg
push
aad
inc
adc
mov
fadds
fiadds
and
mov
ja
xor
out
push
mov
push
push
sbb
cmp
adc
xchg
mov
cmc
aam
stc
mov
cmpsb
scas
xor
rorl
inc
jp
and
sbb
adc
dec
inc
or
imul
fs
dec
mov
or
xchg
mov
push
adc
or
fwait
daa
dec
push
adc
jns
in
sbbl
cmp
dec
xchg
inc
add
sbb
xor
add
cmpsb
fldcw
jmp
les
jmp
cmpsb
sbb
sub
push
mov
ret
xchg
xchg
shl
dec
push
xchg
dec
aam
mov
jmp
in
adc
sbb
idivl
test
sub
aaa
push
sub
cli
dec
push
cmp
mov
icebp
xchg
es
outsb
cmpsb
xor
push
arpl
mov
in
pop
add
xlat
pushf
inc
or
clc
je
adc
and
in
xchg
cmc
fisubs
add
xchg
lock
jno
js
ss
xchg
cmpsb
mov
sub
add
cli
test
shrl
hlt
dec
mov
sbb
mov
ljmp
addr16
jns
dec
inc
push
xchg
imul
xchg
sub
xor
push
popa
test
xchg
aad
push
add
mov
jnp
mov
arpl
jae
add
jle
cmpsl
mov
add
pop
dec
jg
lret
add
lea
popf
rcrl
stc
and
pop
xchg
jb
mov
and
in
aas
and
or
xchg
int
mov
pop
int3
call
add
inc
leave
pop
push
bound
enter
add
imul
mov
add
in
out
and
push
pand
aaa
shrb
adc
sbb
aas
jmp
frstor
pop
roll
jp
sub
push
push
inc
mov
or
inc
jb
shll
add
or
jg
popf
fimuls
or
arpl
xlat
in
stc
cmp
push
cld
stos
dec
jnp
cmpsl
lret
adc
jg
mov
sub
mov
add
xor
out
lods
test
test
mov
sbb
data16
mov
xlat
mov
sahf
and
cmp
rorl
cmp
push
push
sub
mov
adc
pop
pop
test
arpl
in
jns
xchg
dec
adc
aam
call
and
test
lds
rcrl
in
adc
jecxz
or
lret
repnz
add
pop
in
mov
cltd
mov
fldcw
dec
fwait
sbb
jle
test
or
inc
and
jae
ja
sbb
arpl
cmp
orb
test
dec
mov
mov
push
fs
mov
mov
inc
xchg
mov
xor
mov
outsb
scas
fcmovbe
mov
cmp
mov
and
movsl
push
and
push
ja
pop
in
dec
cmp
insb
or
repz
cmp
inc
adc
cld
push
jb
in
jl
dec
mov
sub
cltd
fdiv
in
pusha
push
jne
dec
lock
mov
out
mov
push
mov
daa
enter
in
sbbl
test
add
popf
xlat
mov
push
jb
jle
xlat
xorb
or
dec
addl
arpl
sbb
test
push
cmpsb
jae
mov
lods
and
push
lret
test
jmp
daa
pop
int
push
adcb
cs
mov
xchg
or
pop
stc
ret
ret
hlt
xchg
pop
add
lods
test
sbb
mov
fildl
sub
cli
dec
lret
scas
dec
cmp
or
push
inc
mov
icebp
mov
jle
imul
cmp
sti
dec
enter
mov
mov
idivl
mov
lahf
xor
imul
push
mov
push
cmc
inc
mov
scas
faddl
aam
out
jno
xchg
push
popa
fstpt
cs
stos
or
pop
test
dec
jb
imul
leave
push
sbbl
mov
cwtl
ja
ficoml
xchg
cmp
mov
cmpsb
outsb
pop
pop
add
fwait
dec
jl
sub
jns
arpl
or
data16
test
inc
add
sbb
aaa
outsl
push
orb
pop
rorl
out
or
jo
push
pushf
imul
insb
pop
fmul
pop
test
sbb
xchg
mov
inc
xor
adc
xchg
outsl
lods
jb
xchg
mov
mov
push
sahf
mov
ja
and
lret
xor
data16
inc
bound
xchg
jg
bts
nop
mov
inc
testb
cwtl
ret
repnz
lcall
outsb
fxch
jp
add
insl
ret
mov
ja
or
xor
adc
stos
rcrb
xor
dec
inc
add
jno
push
xchg
or
cmp
push
jmp
sahf
inc
dec
ljmp
or
mov
mov
jle
jno
push
xchg
mov
sbb
fwait
push
imul
xor
bound
pop
out
int
out
jmp
pop
mov
sbb
inc
stos
into
mov
jno
xchg
xchg
push
ljmp
cli
inc
and
icebp
sbb
fstl
or
sti
fdivl
in
jmp
icebp
out
jle
test
pop
push
pop
cmp
lcall
int3
loope
sbb
sbb
mull
xchg
dec
int
or
inc
xor
ficomps
push
jle
cmp
inc
mov
cmpsb
cmpsl
and
cmp
push
adc
pop
nop
mov
jae
push
mov
mov
leave
or
sub
push
jle
fisubs
sub
int3
imul
and
cs
lcall
daa
inc
mov
gs
and
inc
mov
xor
inc
lods
jl
mov
loope
sti
cmp
aas
nop
gs
jp
mov
lds
xchg
dec
pop
inc
add
xchg
mov
adc
adc
mov
xor
jmp
cld
xchg
lods
std
dec
add
das
inc
popa
mov
xchg
filds
inc
pop
clc
cmp
fwait
stc
aad
out
inc
lret
ja
sbb
push
mov
pop
imul
jb
das
test
xchg
and
mov
pop
inc
and
mov
stos
fs
movsl
rclb
fcmovne
pop
sbb
cmpsl
sub
jb
lea
cmp
xchg
mov
xchg
out
dec
dec
test
mov
nop
js
xor
mov
mov
adc
and
push
and
fwait
sti
mov
jge
outsb
insl
fsubr
mov
loope
xchg
push
mov
icebp
push
lret
mov
mov
stos
daa
mov
in
pop
scas
mov
movsb
jno
das
insb
jle
xchg
stos
imull
sahf
subl
aad
dec
mov
push
jbe
je
push
ss
push
sbb
es
xor
dec
stc
jo
aad
outsl
popw
xor
cmp
jo
std
mov
leave
fistpl
outsl
out
xor
cmp
lods
out
inc
pop
das
hlt
inc
mov
les
popa
dec
sbb
cld
cmp
shl
lods
les
mov
mov
inc
test
sub
dec
das
sub
jb
push
rcrb
adc
push
ficoms
out
negl
and
push
loop
bound
mov
int3
sub
repnz
insl
xor
mov
sar
popf
andb
adc
and
and
mov
mov
dec
mov
pushf
jb
idivb
cmp
sbb
out
test
adc
ljmp
rcll
decb
push
mov
dec
push
cs
cmc
mov
lods
xchg
sub
and
inc
lahf
ljmp
out
jnp
or
push
rorb
push
shll
aaa
cmpsl
cld
cmc
lods
stc
nop
cmp
scas
into
push
pushf
in
out
dec
jbe
sub
pop
rorb
sbb
jmp
xchg
xchg
in
mov
push
es
sbb
mov
testl
imul
lahf
cmpl
imul
push
fnstsw
pop
inc
aad
add
stc
testl
loopne
pop
or
pop
lods
cs
add
lock
push
push
sbbb
pop
addr16
inc
arpl
push
outsb
iret
rcrl
adc
dec
mov
mov
mov
jle
in
in
xor
adc
stos
pop
cli
push
fs
ja
xlat
cli
mov
fisubrl
decl
mov
fxch
or
repnz
shl
sbb
aad
and
jb
jp
xor
rcrl
xchg
es
inc
mov
push
wbinvd
cmc
icebp
xchg
out
cmp
pop
pop
fwait
imul
mov
jnp
imul
push
lock
dec
ror
push
test
mov
inc
ret
sbb
in
fnsave
inc
lahf
int
aas
adc
cwtl
ret
mov
sub
call
inc
pop
jecxz
push
and
test
aas
pop
adc
fscale
mov
or
sbb
jmp
push
cmpsl
into
sbb
movsl
mov
jbe
ficoml
add
mov
aam
jne
pop
and
xchg
test
xor
jo
inc
lret
jg
cmp
stc
sub
popf
cmp
mov
push
pusha
aaa
adc
mov
mov
push
bound
pop
cwtl
mov
popf
in
pop
loope
loope
ja
mov
inc
repnz
and
adcb
inc
fs
push
popf
stos
or
ss
popf
mov
fadd
pop
dec
dec
and
dec
xor
in
enter
mov
stc
ss
aas
sbb
pop
sbb
iret
mov
xchg
movsl
push
insl
mov
repz
ret
cs
mov
rcl
popa
mov
jecxz
mov
ret
ficompl
xchg
dec
sbb
jl
add
imul
mov
xchg
push
int3
enter
mov
std
lods
fimuls
mov
xchg
inc
arpl
insb
lods
jge
lret
pop
addr16
sbbb
sub
xor
shl
cmp
dec
pop
das
mov
stos
enter
push
int3
xlat
cmpsb
pop
fsub
sti
push
and
jbe
or
adc
jne
or
mov
pop
or
sar
or
ret
mov
hlt
mov
mov
inc
push
jae
xchg
or
sbb
mov
mov
and
pop
cmpsb
lock
mov
adc
jne
cwtl
rorb
pop
mov
jp
push
loop
jle
test
mov
lea
jle
cmp
dec
push
aas
pop
cmp
mov
pop
sti
add
xor
cmpl
push
pop
sbb
ret
ljmp
push
fiadds
pop
pop
push
jo
aad
in
sbb
cmpb
or
pop
push
jmp
in
test
add
repz
jecxz
push
lock
sbb
paddb
add
ret
ds
adc
jl
cli
pop
mov
inc
imul
sbb
insb
mov
add
in
xchg
push
imul
mov
add
icebp
jbe
aaa
inc
out
or
cmp
notb
ret
jp
repz
aam
cmp
xor
lahf
pusha
bound
ret
pop
ret
shr
cwtl
in
mov
rclb
dec
addr16
mov
xchg
push
xor
jecxz
sarb
and
and
aaa
jle
push
out
rclb
aad
jmp
pop
xor
scas
mov
pop
test
cltd
rep
mov
push
cmp
repz
jle
mov
inc
push
jmp
pushf
sbb
xchg
bound
xchg
mov
addr16
in
gs
cmp
mov
daa
cwtl
push
xchg
insb
aaa
stos
mov
out
mov
cmpsb
push
and
mov
dec
shll
ja
cmp
xchg
lcall
iret
jle
sbb
push
mov
je
in
lcall
iret
add
push
int
es
adc
fdivs
jmp
data16
lahf
sarb
adc
push
lea
push
xchg
push
call
stos
int
jmp
das
dec
mov
xchg
fdivrs
lods
je
outsb
push
push
xchg
sbb
or
sahf
div
xchg
sbb
jns
or
outsl
add
push
cmp
push
lahf
insl
loope
icebp
andb
shlb
cmpsl
jb
pop
push
sbb
sub
lret
je
adc
jl
stc
out
jmp
adc
ret
push
inc
cmp
sti
insb
push
pusha
loopne
stos
jnp
dec
jne
sbb
out
out
test
xor
mov
push
imul
aad
addr16
adc
fstpt
fsub
imull
xor
nop
inc
in
inc
fmul
ss
push
loop
jmp
and
mov
dec
sarb
and
addr16
jle
test
mov
xor
scas
scas
daa
lods
in
push
call
add
inc
mov
js
inc
out
sub
notb
sub
add
xor
repz
or
push
cwtl
sbb
popf
push
loop
mov
mov
pop
test
pop
pop
test
sub
leave
arpl
pop
sub
mov
mov
sbb
jmp
or
and
push
mov
mov
arpl
add
sub
orb
jae
cltd
in
cmp
test
mov
aam
push
inc
adc
movsl
cmp
add
xchg
mov
push
loope
out
out
shlb
dec
aas
ret
add
fiaddl
dec
dec
cltd
cmpsb
jl
jl
xor
mov
jmp
dec
inc
jmp
inc
leave
sbb
fdivrp
insl
sub
add
test
adc
lea
shlb
mov
mov
loop
aam
sub
orl
mov
jge
sbb
gs
adc
jle
rsm
sub
scas
loopne
mov
fcomp
cs
jle
aad
cmpsb
jg
sbb
jg
jmp
mov
jl
das
movsb
iret
inc
jae
aas
sub
stc
dec
jl
cmpsl
pop
int3
push
mov
xchg
imul
jno
mov
ret
outsl
xchg
lods
mov
xor
lret
push
sub
pcmpeqd
insb
mov
inc
cmpsl
lea
inc
stc
xlat
sar
hlt
lahf
test
insb
aad
adc
decb
inc
jns
sbbb
sbb
xchg
add
lret
lds
inc
pop
in
jbe
ja
and
or
inc
loope
add
add
aas
cmp
or
shll
out
jle
push
fisubrs
icebp
add
das
movsb
mov
or
add
adc
lcall
test
push
cld
loop
in
in
ljmp
add
xor
pop
mov
mov
imul
lock
ljmp
hlt
scas
sub
mov
std
dec
push
or
aad
add
or
mov
xchg
jle
mov
lods
int
mov
insb
adc
rcl
and
mov
sbb
mov
add
in
add
mov
in
push
sub
hlt
ret
stos
or
in
jo
cmp
fiadds
cmp
rclb
mov
dec
out
pushf
int
lea
movsl
mov
nop
or
sbb
jl
icebp
push
or
sbb
sbb
popa
dec
mov
js
and
jg
out
push
xor
inc
mov
out
dec
scas
pop
aaa
sarb
push
inc
sub
xor
inc
xchg
adc
pop
inc
sbb
fwait
ljmp
movsb
std
orl
cld
xor
push
popa
dec
mov
jmp
inc
xorb
mov
std
sbb
lret
push
ljmp
and
mov
fildll
dec
outsb
pop
dec
aam
test
imul
inc
adc
jmp
mov
cld
enter
jne
lods
daa
cmp
fisttps
mov
into
mov
mov
adc
mov
adc
pushf
push
ljmp
pop
pop
pop
fsubl
add
cltd
mov
inc
pop
sub
adc
sahf
inc
mov
pop
out
mulb
scas
adcb
mov
mov
xchg
mov
jg
pop
testl
push
xchg
adc
sub
mov
fistps
jmp
out
cmp
inc
popf
mov
cmp
and
xchg
repz
jns
mov
mov
fstl
cmp
imull
mov
faddl
push
das
js
mov
int
pop
xor
or
push
mov
add
adc
popf
jne
fbstp
je
xchg
je
aad
xor
or
push
or
jecxz
addr16
mov
rep
jle
fcoml
inc
das
push
jb
movsb
addl
mov
inc
fs
add
dec
insl
xorb
push
add
sub
sbb
lret
and
loope
push
fistps
mov
loopne
cmp
ficompl
jp
xor
xor
dec
repz
cmp
rclb
cmpb
popf
or
imul
jge
daa
inc
adc
testb
push
jg
lcall
push
xchg
xor
mov
dec
imul
push
add
fs
frstor
clc
xchg
or
pop
jl
push
sbb
stos
and
sub
cwtl
jns
enter
mov
dec
gs
push
mov
adcb
rcr
fmuls
pop
push
hlt
aam
or
int
xchg
fwait
mov
mov
mov
xchg
cmc
xor
and
testl
rorl
fstl
jo
stos
sub
cwtl
inc
movsl
bound
sahf
sbb
mov
inc
xor
dec
cmp
sub
pop
aas
sub
ficoms
mov
aaa
xor
jo
jnp
ret
cwtl
jle
repz
cs
cmp
sbb
or
popa
mov
int
mov
stc
inc
and
stc
je
jmp
aad
xchg
loopne
xor
mov
ss
rcrb
xchg
add
in
jp
and
nop
das
mov
sti
push
sub
sti
mov
lahf
sub
fs
adc
push
push
decl
mov
xor
loopne
insl
jmp
xchg
out
stc
or
and
nop
mov
outsb
into
push
mov
ss
das
adc
pop
sbb
dec
dec
pop
and
cli
or
loope
clc
pop
fnsave
xchg
outsb
xchg
xchg
aad
cmp
dec
jle
push
cwtl
test
mov
in
jmp
mov
and
and
pusha
cmp
mov
add
inc
add
sarl
and
xor
into
cmc
pop
dec
bound
sub
imul
sbb
test
repz
lods
scas
movsl
sbb
cld
push
jo
repnz
mov
push
xor
cs
aad
arpl
lds
mov
and
stos
adc
mov
xlat
arpl
cld
stc
pusha
test
fidivrl
sub
sub
sbb
pusha
mov
ficoml
jne
push
mov
add
nop
sub
push
shlb
cli
ja
jge
mov
leave
jecxz
jae
cltd
inc
xchg
jmp
rolb
mulb
imul
lods
nop
xchg
mov
pop
test
mov
adc
mov
sbb
sbb
leave
test
cmp
rcl
or
adc
add
cltd
out
sub
jg
orl
push
mov
dec
jbe
pusha
or
into
and
xor
cmp
inc
scas
arpl
sahf
dec
out
sahf
pop
inc
aam
fstpl
adcb
push
push
inc
push
and
jecxz
cmp
fstpl
shll
sub
loopne
pusha
mov
fbstp
or
and
cwtl
sub
cltd
lock
movsb
xchg
mov
mov
mov
bound
inc
mov
popa
fisubs
test
add
cmp
in
cmp
jbe,pn
out
sbb
push
cmc
or
cltd
mov
scas
jbe
pusha
dec
inc
outsl
fcoml
scas
pop
mov
incl
mov
testl
pop
mov
sahf
add
push
jo
imul
xor
shrl
sbb
sub
add
jmp
sbb
sti
or
push
sbb
repz
dec
and
xor
stos
push
dec
das
or
movsb
xor
or
mov
mov
cmp
xchg
sbb
subl
fisubrl
pop
push
test
mov
xlat
call
jp
xchg
pop
dec
push
add
mov
cmp
call
les
pop
mov
cmp
inc
push
cs
mov
decl
fwait
out
adc
cmp
lods
push
xchg
aas
pop
cmp
adc
xor
icebp
lahf
ds
mov
into
sub
fdivl
pop
pop
fwait
shrb
and
cld
movl
jne
fisttpl
mov
es
push
push
or
xchg
in
xchg
dec
arpl
pop
into
sub
jmp
pop
sub
mov
mov
stc
out
jns
pop
shl
ds
jbe
mov
xor
rclb
test
mov
xor
test
shrl
fcmovnu
or
scas
jb
pop
pusha
or
jecxz
mov
push
daa
fnstsw
inc
sbb
adc
mov
xor
stos
jae
inc
add
adc
movsb
inc
pop
pop
push
inc
leave
ds
rcrb
cmpsb
mov
or
loope
cmp
add
int
and
sbb
in
loopne
and
pop
inc
xor
add
or
leave
scas
jle
push
jne
sti
je
cmpsb
cmp
xor
mov
pop
cmp
jnp
mov
arpl
inc
daa
rcrl
push
repnz
lret
in
or
mov
out
sbb
rcrb
pushf
xor
sub
sbb
mov
hlt
ret
xor
rorl
in
lods
mov
test
adc
mov
data16
xchg
and
adc
sbb
scas
lock
jae
or
push
sub
pop
std
jle
dec
pop
sbb
jbe
push
cs
clc
call
ss
push
loope
popf
inc
jno
int3
pop
leave
dec
inc
lret
cmp
pop
push
stc
cwtl
ret
ret
mov
pop
xor
movsb
and
jmp
adcb
mov
mov
daa
mull
in
gs
mov
sbb
xor
mov
outsl
mov
aam
adc
sub
pop
dec
imul
and
in
repnz
lret
gs
outsb
xchg
jmp
call
addb
cmp
dec
out
aas
sub
mov
mov
incl
mov
outsb
cmp
xorl
xchg
ja
test
aas
add
outsb
dec
lds
sbb
cmp
sub
iret
iret
lcall
popf
pop
gs
shlb
ss
mov
std
jne
decl
and
stos
test
shll
dec
jb
inc
rcrb
shll
arpl
ficompl
in
repnz
dec
aam
clc
orb
fidivl
aam
pop
and
mov
sub
insl
mov
stos
into
cmp
push
cli
sbb
add
or
test
scas
fsubrs
xchg
fmuls
mov
sbb
cmp
stos
jge
subl
loope
insl
mov
push
ficomps
adc
aam
xchg
mov
call
inc
arpl
jl
cli
out
cs
push
enter
call
shrb
cli
add
mov
ds
js
inc
cmpsb
jecxz
call
test
xor
pop
cmpb
xchg
jns
in
pop
fwait
push
jbe
fistpll
xlat
add
or
mov
xor
shrb
ret
mov
stos
sbb
or
into
cmp
rolb
xlat
in
les
aas
dec
icebp
out
add
mov
xor
and
jb
daa
loope
aad
sbb
add
or
popa
mov
pop
xchg
xchg
adc
in
jecxz
ficoms
sbb
sbb
jp
clc
stos
rcr
mov
loopne
mov
mov
call
push
xchg
inc
icebp
xchg
or
cmc
pop
pop
aam
sub
xor
jecxz
outsb
inc
int3
xchg
xchg
xor
sbb
icebp
loop
mov
adc
push
fldt
sub
std
je
mov
lods
notb
dec
js
lret
bound
lea
dec
out
daa
dec
cmp
sub
xchg
daa
pop
lahf
push
adc
mov
stos
xchg
jg
movb
xchg
mov
out
xor
mov
mov
inc
fcomi
mov
mov
roll
mov
pop
mov
out
xor
jb
lret
push
cmp
test
xor
mov
jae
cmp
cwtl
mov
lods
ljmp
test
sahf
loope
repnz
pop
jnp
xchg
xchg
lret
cmp
mov
cltd
pop
inc
out
les
inc
mov
jg
xchg
loopne
xchg
or
fidivrl
lods
jbe
loope
loope
push
lahf
xchg
xchg
dec
add
shrl
div
xchg
jmp
ret
std
mov
inc
mov
jbe
subb
out
clc
lods
nop
test
out
rcrb
jo
fdivr
dec
push
iret
je
adc
int3
inc
xor
sbb
clc
aam
lods
fcomps
sahf
or
mov
rorb
rcll
bound
arpl
pusha
and
sub
mov
mov
dec
xchg
lret
fsubs
pop
imul
or
stc
movsb
xor
adc
iret
add
arpl
inc
cs
nop
xor
stos
xlat
int
repnz
mull
mov
inc
sti
push
std
roll
stos
movsl
sub
xor
mov
ss
jno
ja
jle
aam
lods
bound
ret
sub
jmp
push
jae
mov
dec
es
push
mov
lods
pop
cli
xor
mov
push
test
adc
aaa
add
out
inc
push
les
mov
xor
push
add
or
sub
sub
xchg
jmp
sub
pop
dec
in
jl
mov
mov
jge
push
jo
pop
push
sbb
out
sti
loop
and
popa
inc
xor
bound
stos
rcrl
jg
imul
loope
push
nop
cmc
dec
fiadds
fisubrs
in
rcrb
insl
out
or
repz
icebp
ret
sti
and
adc
ljmp
outsb
xlat
rclb
mov
rcrb
or
push
aad
mov
sbb
mov
pusha
subb
cs
xor
out
jmp
loopne
std
cmp
cli
dec
mov
in
outsb
cmpsl
cmpsl
jecxz
jecxz
push
cli
lds
test
je
daa
push
jb
cmovnp
push
test
cmpsb
mov
dec
aad
stc
sbbb
jmp
fstl
jae
mov
mov
shr
in
enter
imul
popf
mov
dec
add
xchg
repz
mov
lea
push
imul
in
fstps
stc
xchg
xchg
and
pop
call
dec
divl
inc
xchg
sbb
push
aad
lds
dec
lds
dec
in
sub
push
addr16
lahf
inc
popf
mov
sbb
into
xchg
push
lea
push
mov
adc
push
mov
pop
setle
push
jmp
ret
aam
pop
sbb
pop
cmp
rcl
mov
insb
sbb
sbbl
loope
xchg
and
sub
adc
adcb
nop
imul
mov
sbb
mov
push
mov
dec
dec
jnp
cltd
pop
mov
cmp
fmuls
sub
jb
xor
lcall
ret
inc
aam
cmp
mov
cmpsl
pop
jp
jne
and
push
popf
mov
daa
adc
sub
cmp
dec
sbb
mov
xor
inc
push
subb
in
out
jno
and
xchg
mov
shl
fsts
cmpsb
lods
push
ficompl
xchg
xlat
dec
sub
daa
sub
dec
enter
mov
mov
cmp
push
test
jecxz
lahf
je
mov
adc
popf
dec
ret
inc
push
loope
mov
mov
pusha
pop
ja
js
xchg
mov
fldenv
jb
popl
iret
jne
pop
xchg
push
and
rcrl
xchg
aas
popf
jo
push
pop
sbbl
xchg
aaa
dec
xor
hlt
xchg
stc
lcall
pop
pop
popa
sub
outsb
inc
jp
push
mov
ds
dec
mov
lea
test
add
sub
jae
fistpl
xor
mov
mov
lret
push
lcall
fmull
push
cmpsl
push
jae
jae
shl
jb
and
lea
xlat
es
mov
xchg
dec
mov
mov
mov
push
pusha
into
jnp
dec
testl
mov
jo
cwtl
and
lods
shlb
mov
ja
idivb
mov
sbb
or
mov
inc
push
inc
lock
call
mov
fidivrs
sbb
icebp
dec
imul
call
hlt
sub
test
pusha
aas
loop
je
es
imul
push
shl
sbb
sub
je
add
repz
xor
pop
pop
pop
jmp
les
or
clc
sbb
adc
mov
xchg
or
call
mov
icebp
imul
loope
mov
cs
push
jle
dec
punpcklbw
add
pop
xchg
das
aas
and
pushf
or
call
aam
sbb
mov
enter
pop
loopne
rorl
pop
dec
stos
fs
mov
arpl
xchg
dec
int3
in
out
push
cmp
cltd
ljmp
jo
sti
jne
lcall
dec
gs
pop
sti
ret
inc
out
mov
mov
ss
dec
inc
xor
popf
cmpsl
jg
movsb
mov
cmpsb
or
mov
push
or
mov
push
fnstenv
jle
mov
insb
mov
popf
fdivl
jb
and
clc
jnp
cmp
jno
sub
mov
loopne
enter
xor
out
lret
pop
sub
add
fisttps
fisttpl
pusha
ds
add
inc
push
or
fwait
in
mov
xchg
lods
je
fdivl
mov
dec
adc
int3
ret
sbb
or
dec
mov
pushf
nop
and
stc
out
sub
addb
xchg
mov
movsl
sbb
jle
add
ss
lret
mov
inc
sahf
movsl
scas
add
ret
adcl
jo
dec
pop
lret
jmp
sub
fimull
push
test
dec
cltd
popf
mov
jae
adc
ffreep
and
jae
loopne
push
lds
fcoml
dec
mov
sbb
es
bound
pushl
pop
icebp
dec
fadd
xor
cmpsb
sbb
lock
xor
fistpl
inc
pop
mov
or
push
lods
pop
les
ja
jns
aam
test
cmp
mov
push
jns
clc
dec
push
fists
hlt
jno
add
imul
adc
xchg
loope
std
pop
jbe,pn
or
stc
iret
xor
je
adc
jmp
and
inc
stos
aas
mov
fidivl
xchg
imul
and
jae
push
daa
popa
mov
push
dec
mov
jb
sub
in
adc
or
mov
std
sbb
test
sarb
ror
jg
inc
loopne
xor
scas
mov
in
ljmp
in
lds
and
push
pop
stos
lock
jmp
inc
pop
orb
jmp
adc
into
lods
imul
popa
fadd
mov
std
fistl
dec
mov
iret
mull
rcrb
inc
scas
fldt
out
dec
push
mov
bound
icebp
scas
adc
dec
in
std
pusha
lcall
and
sub
fimuls
movsl
xchg
fsubrs
inc
push
cmp
dec
jmp
mov
sbb
push
and
es
pop
and
sub
movsb
and
add
mov
insl
mov
pop
in
xchg
mov
hlt
repz
icebp
in
push
adc
jmp
cwtl
jne
rcrb
xor
and
inc
imul
std
mov
das
enter
cmp
push
push
pop
adc
xor
xor
xchg
or
imul
nop
imulb
lock
hlt
xlat
stos
sarl
frstor
mov
sahf
fistl
pusha
insb
imul
cli
pcmpeqd
pop
and
mov
out
and
jno,pt
mov
enter
dec
jb
push
icebp
ret
jnp
loope
dec
ret
mov
mov
push
aas
fmuls
out
jmp
mov
pop
inc
sarb
xor
rorl
mov
pop
sub
ja
inc
int
inc
dec
insl
pandn
lock
inc
xchg
dec
inc
in
arpl
addl
mov
cmpsb
xor
icebp
imul
cmp
cwtl
fildll
addr16
mov
xor
and
aaa
cmp
dec
mov
xor
int
imull
mov
mov
mov
cs
movsb
adc
cmp
mov
push
pop
ret
mov
daa
in
shrl
stos
pop
add
outsb
xor
movsb
mov
lds
jp
jge
loopne
mov
xor
nop
sbb
repz
pusha
jb
cmp
or
clc
les
aad
inc
ficoms
jo
or
cmpsb
and
mov
in
cmp
incb
daa
mov
or
mov
mov
mov
push
pushf
cmp
sbb
jle
add
adc
mov
cmpl
xor
sub
test
outsl
or
cld
stos
rclb
stos
sbb
es
add
jl
leave
sub
sarl
push
test
sub
mov
hlt
in
lock
inc
rcl
or
rep
adc
adc
push
mov
iret
test
cmpsl
lds
in
cmp
popf
and
inc
push
out
das
push
xchg
testl
pushf
push
sub
insl
pop
push
popa
adc
fmull
mov
cld
loope
inc
int3
inc
mov
fldl
inc
push
shlb
sub
add
inc
xchg
icebp
in
sub
xorl
pop
pop
pushl
fsubp
pusha
mov
adc
neg
je
push
aas
in
pop
mov
xor
dec
aas
loop
mov
clc
test
nop
and
jno
lea
lahf
mov
xor
xchg
dec
addr16
push
pop
xor
dec
dec
add
pusha
cmp
and
jmp
dec
je
mov
sahf
sub
lods
jl
lret
int
mov
sub
subl
shrb
gs
lcall
jmp
inc
cmpl
jg
pop
jo
push
pop
pop
fs
fwait
out
das
call
cwtl
mov
mov
prefetcht0
sub
xor
shl
in
mov
and
push
testl
add
mov
aad
and
xor
ret
and
jae
push
cwtl
in
cmp
xlat
sarb
sub
cld
jb
push
movsb
mov
xor
dec
inc
xor
add
xchg
call
or
jno
test
shl
push
gs
aam
aad
jnp
or
push
test
mov
dec
mov
adc
jp
fists
pushf
and
outsl
lods
jmp
jmp
xor
cltd
pop
mov
jo
jne
push
ja
jmp
arpl
push
movsl
fisttpl
or
pusha
mov
push
sarb
jb
subb
imul
push
dec
push
adc
rcll
icebp
cmp
rorb
jmp
add
add
fidivrs
mov
lahf
adc
subb
cli
mov
cmp
mov
push
shlb
pop
cmp
ficoml
xor
popf
adc
int
bswap
adc
xor
dec
add
lods
add
jb
add
inc
psrad
adc
mov
cmp
xorb
mov
mov
sahf
fildll
cwtd
or
icebp
push
xor
stc
cmp
xlat
jns
mov
sub
ficoml
out
mov
xchg
out
add
sti
push
cmp
inc
out
rorl
out
mov
push
xchg
jl
mov
out
ret
lret
dec
sbb
push
inc
out
icebp
push
jns
dec
sti
pop
in
mov
stos
cmpl
mov
insl
mov
movlps
sub
in
ss
push
jno
cwtl
je
orb
fsubrp
call
inc
popf
in
mov
pop
push
jmp
addb
xor
mov
outsl
jo
xchg
or
mov
cwtl
mov
push
hlt
mov
lods
leavew
cmp
popa
mov
imul
jnp
mov
int
sub
lock
pop
pop
loop
je
or
sub
mov
push
dec
clc
xchg
or
sbbl
cmp
mov
sub
fwait
cmp
ror
fnstsw
cmp
call
insl
mov
ss
adc
outsb
mov
push
adc
fcomi
inc
mov
enter
push
and
and
hlt
loopne
pop
das
mov
in
cs
out
pop
xchg
outsb
out
imull
fdivrl
stos
pop
add
movsl
pushf
xor
cltd
sub
adc
stos
mov
sbb
adc
data16
inc
loopne
pusha
or
out
and
mov
loop
shlb
fsubrl
mov
les
dec
fidivl
lds
inc
sub
mov
sub
fsts
adcb
repnz
dec
pop
ss
pop
outsl
mov
pop
jg
fstl
or
enter
lds
lds
int
adc
sub
and
je
into
sub
lcall
add
rcrl
out
xor
or
or
adc
testb
xchg
lods
xchg
cmpl
mov
cmp
push
push
repz
push
mov
into
add
scas
cs
lods
xchg
dec
jo
ja
pop
mov
add
cmc
push
scas
jno
fcmovnbe
ret
mov
cld
lret
popa
mov
insl
insb
xor
sti
adc
imul
mov
and
fmull
lods
mov
fiaddl
xor
push
inc
rcrl
adc
notl
and
imul
pop
and
cld
and
in
lods
nop
jle
jae
or
cwtl
dec
xchg
sbb
enter
mov
int3
dec
xor
dec
inc
repnz
jnp
push
cld
pop
psrlw
imul
and
dec
out
test
jmp
fcomip
mov
xor
cwtl
mov
push
push
lds
lods
fcmovnb
cvtpi2ps
xchg
std
inc
lret
xchg
push
pop
out
push
push
sbb
enter
inc
xchg
dec
mov
loop
mov
cli
jnp
mov
jl
dec
fistps
roll
lock
stos
ret
xchg
sub
call
jecxz
mov
adc
out
xchg
xlat
lahf
jno
sub
std
push
or
mov
pop
fwait
ret
pop
mov
push
mov
repz
loop
and
insl
daa
or
cs
add
mov
clc
dec
push
inc
nop
sti
loop
leave
fnstsw
push
and
and
mov
testl
or
std
cmpsl
sar
mov
pop
push
lret
inc
dec
aas
ret
add
stc
inc
fwait
sub
jmp
cli
cltd
pop
fcompl
jns
fistpll
cmp
xor
xchg
fimull
data16
push
sub
ret
data16
mov
in
pop
jmp
xchg
mov
push
pop
push
out
xlat
jl
cli
cltd
push
inc
sbb
push
fs
sub
xchg
sub
icebp
push
or
push
jne
mov
xchg
push
push
jbe
pop
repz
stos
sbb
cmp
movsb
cmp
gs
add
or
sbb
stc
sti
into
cli
in
pop
push
shr
xor
mov
jg
shl
inc
es
and
or
rorb
mov
sub
lods
hlt
loop
je
or
sub
pop
mov
notb
lcall
cli
dec
in
jne
fisubrs
jnp
or
and
and
lods
daa
pop
mov
mov
hlt
xor
lock
push
adc
shlb
pushf
orb
cmc
push
push
pop
inc
add
mov
push
pop
push
cmpsb
rcrl
mov
xlat
out
jg
lcall
push
jbe
pusha
popf
outsl
jl
add
mov
daa
mov
sub
and
xchg
pminub
sbb
inc
aad
les
jmp
subb
dec
sti
jmp
dec
leave
out
out
mov
adc
ljmp
cmp
lock
or
adcl
dec
cmp
cmp
rcll
ret
xor
fwait
loopne
jnp
mov
fisttpll
pusha
popa
int
pop
sbb
push
and
mov
dec
pop
imul
lahf
lock
mov
jb
cltd
cmpsl
in
cmpsl
sbb
filds
xchg
dec
xor
fcompl
mov
pop
mov
and
pop
aam
insb
cmp
rolb
fimull
subl
mov
dec
or
dec
mov
cmp
pop
test
add
fwait
add
jg
out
dec
mov
and
leave
clc
adc
add
xchg
stc
or
jle
dec
xor
mov
mov
popf
leave
inc
sbb
dec
lahf
mov
xchg
ds
gs
sti
scas
movsl
xor
clc
inc
ss
aad
cli
jbe
mov
in
js
ss
daa
mov
xor
lret
addr16
push
adc
jae
pop
fnstcw
pop
or
xchg
xlat
in
loopne
fcomp
and
lret
xchg
xchg
xlat
test
mov
and
int3
adc
imul
mov
jne
jo
cwtl
jge
mov
rcll
clc
out
adc
mov
scas
fidivrs
sti
mov
sub
inc
add
in
insb
xor
std
and
jl
in
xchg
add
jnp
push
xchg
into
dec
fmul
sbb
sub
out
sub
xchg
pop
pop
mov
cmp
test
push
out
push
das
sub
xchg
mov
pop
pop
jb
jae
notl
test
ss
je
mov
xor
dec
add
notb
xchg
mov
repz
jl
pop
xor
pop
push
mov
cmp
mov
dec
jg
jns
jge
jecxz
test
mov
push
fidivrs
cmp
cmc
cwtl
dec
pop
sbb
imul
test
lahf
cmp
and
push
lock
jecxz
xchg
rorl
test
fucom
push
mov
push
mov
lret
pusha
outsl
shll
in
or
daa
or
and
stos
xor
sub
stc
cmpsb
aam
push
xchg
iret
es
push
decl
push
loopne
add
mov
popa
js
push
mov
sar
adc
jns
add
adcl
fbstp
neg
fisubs
ja
dec
inc
inc
jl
pop
arpl
add
in
fwait
push
hlt
xor
je
inc
das
jge
xchg
sub
fstl
cmpsb
xor
inc
cli
jmp
fistl
jnp
dec
fiaddl
jle
jecxz
xchg
lcall
mov
jge
stos
jae
inc
xorb
jp
jl
arpl
out
inc
xor
add
iret
mov
outsb
and
pop
mov
mov
movsl
jmp
pop
icebp
fsubrs
faddl
xchg
add
sbb
jae
andb
mov
push
inc
or
out
cltd
icebp
pop
aas
rorb
lret
scas
sub
lret
mov
daa
inc
mov
pop
mov
pop
lods
mov
sub
imul
cmp
or
loopne
jle
xor
cmp
rorl
push
xchg
dec
cli
sbb
outsb
gs
cmp
cltd
test
mov
data16
jle
sbb
mov
pusha
mov
xorb
cltd
stc
arpl
mov
sbb
add
adc
push
push
cmpsb
cmpsl
cmp
bound
cwtl
push
sbb
adc
adc
cwtl
adc
jns
leave
add
aas
mov
mov
in
ljmp
xchg
rclb
sbb
mov
arpl
lcall
cmp
outsl
sahf
xchg
inc
insl
xor
jmp
sbb
mov
cltd
push
inc
inc
ficomps
fnstsw
sahf
jns
xorl
hlt
or
icebp
mov
ds
xor
clc
xorb
out
xlat
repz
popa
push
sub
dec
xchg
mov
mov
adc
stos
lret
iret
mov
test
nop
xor
jmp
cmpsb
repnz
loope
loope
mov
out
arpl
mov
mov
push
hlt
dec
dec
mov
shll
and
mov
movsl
adc
dec
mov
int
xor
dec
push
jb,pn
push
xor
mov
out
icebp
data16
mov
and
aad
pop
dec
cmpb
sti
imul
add
sub
jmp
add
fistps
cmp
fs
daa
sub
pop
outsl
dec
cmp
jge
aad
mov
jae
int3
ss
idivb
sub
dec
inc
repnz
xchg
adc
xlat
dec
out
orl
stos
push
push
es
push
sub
aad
fildll
scas
push
cld
aaa
int3
movsb
fimuls
pushf
js
popf
xchg
inc
push
adc
outsl
jne
sbb
test
mov
xchg
xorl
mov
pop
xchg
cmp
add
mov
dec
lods
stc
and
je
adc
mov
mov
out
aam
pop
fisttps
cmp
or
scas
add
lock
push
dec
in
jl
jle
xor
subb
das
jp
jb
ss
cmp
das
outsb
sarl
sbb
sub
lcall
jp
into
push
sub
pop
push
addr16
add
out
fldz
mov
repz
sbb
repz
cmpsl
or
fdivp
dec
adc
neg
pushf
pop
pop
pushf
pushl
pop
dec
add
jmp
and
sub
add
lods
sti
mov
xchg
pusha
into
sbb
sub
pop
dec
sti
pusha
out
sub
into
sbb
ret
adc
call
lock
fists
insl
out
mov
inc
mov
add
lods
cli
lds
jle
xchg
jl
mov
push
pop
mov
std
mov
popf
scas
mov
xchg
jno
xorb
cmpsb
arpl
fdivl
andl
mov
jae
pusha
or
out
loop
les
mov
scas
xchg
dec
mov
or
push
and
xor
sub
movsb
sub
cmpsb
pop
dec
mov
adc
pusha
or
sarl
cmp
dec
pop
sahf
jb
push
add
lock
pop
add
icebp
cmp
gs
cs
movsb
mov
mov
pop
pusha
adc
cs
push
testb
mov
mov
popf
push
rolb
or
mov
test
jl
pop
adc
adc
out
mov
xor
mov
push
lods
mov
ret
dec
dec
je
jle
cmp
hlt
int
cld
xchg
xchg
jmp
lret
push
mov
xchg
push
imul
stos
leave
fbstp
jbe
inc
fisubrl
adc
mov
movb
adc
sbb
fistps
les
sbb
add
jnp
imul
pop
les
mov
filds
loopne
lret
sbb
and
xchg
dec
decl
into
call
iret
loope
jg
cmp
fnsave
fbstp
test
xchg
pop
stos
fs
lcall
imul
xchg
cs
xor
jle
push
cltd
jl
pop
pop
push
dec
fnsave
aaa
cmp
aaa
notb
sti
mov
rol
int
out
inc
arpl
mov
in
and
out
xor
mov
dec
rcl
jbe
mov
sub
sbb
fs
sbb
dec
movsb
mov
int
mov
std
mov
sbb
pusha
flds
sub
jle
jns
cmpsb
inc
sub
scas
push
lea
daa
lea
aad
pop
pop
lret
aam
ja
adc
mov
aam
inc
cs
xchg
mov
incl
loopne
ss
xor
pop
and
xor
movsl
loopne
xchg
and
dec
lea
mov
ficompl
fsubrs
ror
dec
or
pushf
clc
pop
test
sub
cmp
sub
inc
ret
out
adc
mov
adc
ds
dec
mov
sbb
and
mov
inc
sbb
es
add
jge
and
pop
mov
sahf
mov
mov
adc
push
out
sbb
out
jmp
mov
sbb
loopne
sub
xchg
push
pusha
dec
aam
bound
pop
loopne
aam
mov
stc
mov
or
push
xchg
jns
stos
cwtl
push
xchg
xchg
xchg
jle
cmpsb
aaa
jmp
cmp
lods
sbb
daa
in
xor
mov
dec
mov
div
fisttpl
iret
xlat
xor
lock
push
xlat
out
das
xchg
jmp
adc
cwtl
adc
push
dec
rep
imul
mov
xchg
mov
sub
mov
jp
aaa
sbb
push
in
addr16
sti
cld
mov
adcb
mov
jp
dec
and
sbb
xchg
add
cmp
cmp
test
mov
sub
xchg
cmpsl
adc
xor
mov
loopne
mov
loop
sarl
push
sub
jle
mov
arpl
add
int
enter
push
pop
cli
push
inc
clc
or
int
out
cmp
mov
add
lcall
ljmp
out
xchg
adc
in
dec
mov
add
shlb
lods
or
adc
cmpsb
lds
cltd
xchg
push
xchg
ss
dec
in
repz
cld
mov
out
jne
cmpsl
sbb
orb
jno
popf
mov
outsl
loop
jns
cld
xchg
dec
xchg
mov
stc
inc
pop
pop
js
xchg
repnz
inc
add
in
xchg
outsb
into
jns
or
sbb
push
dec
popa
in
cltd
push
jns
imul
popf
clc
mull
arpl
cmp
sahf
xchg
rorl
jo
faddl
mov
repnz
add
xlat
jl
cmpsl
pushf
adc
cs
cld
xchg
test
mov
pop
add
out
leave
cmp
lods
mov
shlb
dec
push
rcrb
imul
xchg
cli
mov
adc
sbb
in
xchg
and
lea
add
push
imul
inc
pop
lcall
cmp
mov
mov
mov
mull
pop
add
mov
jle
mov
popa
and
pop
mov
sbbb
push
jne
jae
and
orb
add
pop
js
iret
push
lea
hlt
xchg
inc
pop
rolb
xchg
mov
dec
inc
jbe
test
jg
dec
xchg
push
cvtps2pd
stos
adc
rcll
xchg
sbb
mov
inc
lods
je
push
std
loope
mov
out
sub
xor
jg
je
rcll
mov
add
mov
xchg
into
inc
enter
jae
mov
sub
repz
roll
sti
sti
cs
scas
je
push
addr16
inc
mul
shlb
xor
and
imul
cmc
add
ds
fwait
push
inc
in
mov
inc
fld
sub
inc
inc
dec
outsb
xchg
mov
test
push
mov
lcall
aas
fwait
mov
mov
into
mov
pop
fcomip
andw
imul
adc
ja
cld
push
cli
and
clc
mulb
cmpsl
push
cwtl
sbb
mov
inc
out
les
and
xchg
xor
inc
pop
pop
out
fdiv
xor
mov
mov
cmp
mov
push
ja
mov
push
aam
push
dec
xor
sbb
dec
cwtl
loop
pop
adc
mov
xchg
inc
pushl
push
cmp
add
mov
xchg
and
rcr
mov
sbb
adc
sbb
jns
fcmovbe
into
adc
leave
ret
dec
mov
scas
insb
mov
mov
push
or
aad
cwtl
push
cmpsw
iret
scas
xor
pop
jl
mov
outsl
dec
sub
sti
mov
mov
test
sub
cmp
mov
out
cmp
xchg
imul
xlat
sub
xor
inc
test
push
mov
fbstp
test
jmp
data16
sbb
popl
sbb
push
jle
cwtl
xor
or
mov
fs
or
inc
les
mov
pop
fisttpll
mov
xchg
repz
loope
sub
dec
fstps
lods
cmp
fdivl
aam
fnstcw
sub
adc
fcomps
bound
mov
or
loopne
xor
dec
cltd
mov
cmp
and
daa
lahf
cmp
xor
mov
sahf
cmp
stc
or
dec
imul
int3
scas
out
shll
adc
and
inc
mov
push
fidivrl
cmp
push
repnz
hlt
fbld
jne
push
jecxz
xor
cmpsl
hlt
sahf
stc
popa
lods
mov
xor
or
jl
add
mov
xchg
out
cmp
mov
aas
and
jo
mov
xor
sar
dec
adc
jge
pop
insl
mov
into
xor
in
push
adc
cltd
mov
fcmovb
fldln2
addr16
push
jnp
mov
xlat
push
jmp
xchg
or
lods
daa
mov
subb
xchg
fs
fldcw
and
fdivrl
out
mov
push
bound
xor
jle
lods
loop
and
inc
ret
and
mov
popf
dec
mov
lcall
pushf
faddl
sbb
dec
mov
mov
mov
adc
xchg
rcll
movsb
and
jno
jmp
mov
push
iret
in
pop
fimull
push
sub
adc
inc
adc
lods
sub
iret
cwtl
sbbl
push
pop
call
lods
rcll
inc
icebp
andl
rolb
jnp
push
mov
rcrb
xor
in
adc
jp
fdivrs
shrl
idiv
popf
and
jno
sub
in
mov
add
popf
cltd
mov
jae
imul
fwait
in
call
and
xor
stc
nop
cmp
repz
aas
out
loopne
es
dec
cwtl
es
push
lods
inc
rcr
dec
arpl
lret
pop
out
loope
roll
sbb
subl
push
cld
in
xchg
jo
divb
cmp
mov
dec
xor
pop
pop
aaa
popa
hlt
xor
andb
ds
or
mov
sbb
pop
or
shlb
popf
jg
push
std
pop
xchg
xlat
jb
movsb
mul
popa
cld
mov
insl
inc
leave
test
leave
push
rdpmc
jge
dec
adc
in
rcrb
clc
out
adcb
pusha
mov
cltd
adc
push
lods
pop
in
inc
mov
sub
or
gs
mov
xchg
add
mov
mov
pop
adc
inc
lahf
mov
divb
movsb
mov
xchg
inc
jge
cmc
jbe
mov
mov
pop
add
sbb
xchg
in
stos
stos
mov
mov
sbb
nop
or
sbb
decl
adc
push
cs
pop
cmp
rorb
jp
in
or
test
mov
sbb
push
xchg
aaa
pop
cld
inc
jne
adc
lcall
push
mov
cld
je
or
adc
loopne
leave
xchg
shll
xor
xchg
jns
aas
push
push
negb
fiaddl
int
mov
xor
sbb
fwait
jne
sub
and
and
or
add
lcall
repz
into
lret
imul
fxch
outsl
aad
mov
sbb
jne
jmp
dec
dec
or
xchg
mov
dec
hlt
or
stos
push
inc
and
enter
ret
lcall
xchg
data16
js
cld
daa
xchg
negl
addr16
lret
test
sar
fistpl
add
mov
xchg
sti
adc
mov
push
psrad
push
xchg
insl
sub
mov
pop
cmp
cmpsb
not
lds
scas
or
gs
sbb
dec
pop
inc
inc
ret
das
mov
and
mov
adc
mov
pop
push
leave
loopne
xchg
rcrl
xor
add
push
xor
lahf
dec
outsl
addr16
fldl
icebp
pop
or
subl
scas
outsb
lea
mov
sbb
icebp
out
repnz
xor
popa
sbb
stos
lods
in
pop
fldl
test
out
and
leave
jle
sub
push
fcomps
mov
fldenv
sarl
outsl
mov
sub
jmp
call
mov
push
lock
mov
fstl
dec
mov
popf
add
aas
mov
cmpsb
sarb
pop
aad
cmc
mov
cltd
sub
shrb
into
loop
mov
js
sbb
out
sti
jg
cmp
test
push
mov
div
xchg
or
adc
iret
cmp
dec
sbb
jl
shll
sub
ljmp
std
iret
pusha
xchg
dec
enter
cmp
inc
aas
repz
and
shll
xchg
inc
xchg
lods
mov
jmp
sub
xlat
movsb
cwtl
fcomps
imul
xor
adc
cltd
out
add
das
ds
mov
repz
xchg
sub
xchg
arpl
addr16
mov
jge
inc
add
test
or
jecxz
jp
push
pop
mov
cmpsl
gs
mov
jns
mov
call
sti
jmp
cmp
loope
add
fldln2
lods
test
pop
adc
adc
insl
mov
scas
stos
mov
mov
fdivs
mov
xchg
push
or
dec
xor
fwait
nop
cmp
shrb
pop
dec
dec
fcomip
jae
adc
dec
mov
in
popa
mov
cwtl
scas
test
arpl
xor
inc
enter
in
fwait
jecxz
lret
sbb
adcb
shl
enter
or
subl
aaa
mov
out
daa
test
xchg
add
adc
test
sub
in
xchg
mov
xchg
mov
movzwl
push
push
movsb
push
filds
int
mov
fldl
popf
inc
xchg
jo
xchg
loopne
jbe
loope
outsl
addr16
fldenv
into
in
jg
xlat
andl
and
adc
cwtl
rcll
in
bound
dec
cli
mov
inc
call
cmc
fnstcw
jnp
mov
into
jbe
test
dec
xchg
xchg
movsl
cwtl
sub
cli
pop
sub
or
xchg
gs
mov
mov
ret
mov
push
adc
pop
mov
lea
repnz
leave
fwait
sti
cmp
jl
lds
daa
inc
pop
sbb
pop
enter
aad
xor
scas
shlb
fwait
mov
icebp
jmp
push
ret
das
sub
and
addb
popl
pop
pop
test
jecxz
lahf
stos
fcomip
stos
push
lcall
bound
pop
icebp
arpl
lock
adc
out
sub
cmp
add
int
adc
push
repnz
add
nop
nop
pop
jge
or
sub
daa
aaa
mov
jecxz
test
jnp
outsb
ds
imul
push
jae
cmp
push
pop
into
push
popf
or
fwait
jb
loop
pop
mov
or
mov
sbb
jb
movsb
jmp
stos
enter
push
jmp
mov
aad
iret
or
lock
insl
mov
jl
int3
in
mov
icebp
adc
or
out
adc
daa
arpl
adc
jmp
mov
not
adc
bound
or
popf
jo
add
pop
jg
ds
jnp
mov
cli
xchg
adc
mov
decb
xchg
call
cmp
push
movsb
icebp
push
jle
dec
cmp
inc
jns
movsl
pop
mov
xor
aad
adc
div
mov
mov
in
sbb
mov
xor
xor
lock
mov
add
cld
test
jmp
pop
adc
enter
mov
adc
or
jno
and
pop
std
cwtl
xchg
mov
mov
push
jae
push
stc
insl
mov
xchg
rcl
jmp
jbe
leave
cmc
sbb
ficomps
mov
jecxz
push
xor
in
mov
mov
pop
arpl
mov
jne
iret
mov
out
shlb
clc
jnp
push
sahf
das
and
or
scas
push
push
jbe
sub
add
lods
dec
jl
loopne
push
mov
mov
pop
enter
int
sbb
sub
xorl
fimuls
mov
test
imul
push
mov
adc
ds
jns
sti
cltd
imul
push
mov
push
mov
mov
jle
scas
push
idivl
cltd
adc
mov
cli
pop
sub
loop
push
leave
clc
inc
mov
mov
frstor
ja
cmovb
shrb
or
sbb
and
loop
mov
push
inc
popf
pop
or
test
lahf
repz
mov
inc
repnz
jmp
mov
push
test
cmp
cmp
lods
mov
mov
fwait
stos
jno
xor
jnp
jp
aam
test
dec
add
dec
ret
pop
lock
jecxz
cmpsl
mov
fwait
arpl
push
push
add
xor
or
and
xor
in
mov
addr16
push
andb
xchg
mov
xlat
push
adc
dec
sahf
pop
fcomip
into
mov
call
mov
sahf
insb
cmpsb
arpl
mov
lret
dec
or
xchg
scas
mov
ret
push
lcall
inc
or
xor
sarb
imulb
cmc
xchg
mov
icebp
xchg
adc
inc
adc
sbb
mov
jmp
mov
sbb
fidivs
mul
cmpb
dec
outsb
or
in
pop
jp
pop
stos
lods
lahf
es
pop
into
insb
fwait
inc
mov
test
scas
dec
cmpsb
mov
sbb
xor
push
pop
xchg
pop
in
inc
rorb
fmull
jno
jne
mov
and
cli
test
mov
ja
inc
dec
jae
mov
rcrb
push
jge
jmp
popa
lret
std
inc
xchg
xchg
int3
cmpsb
into
jp
insb
sub
dec
loop
sbb
jle,pt
sbb
sysret
movsl
bound
fbstp
ret
movsb
jle
rorb
sub
iret
fwait
imul
jae
cmp
inc
adc
stc
outsb
out
test
lret
jnp
jns
adc
xor
ret
inc
dec
xchg
pop
gs
lret
xchg
xor
iret
leave
xchg
gs
lahf
lret
push
jae
aas
leave
dec
inc
dec
icebp
jns
fwait
xchg
pusha
or
jmp
or
jp
mov
mov
ret
imull
fadd
sbbl
add
lret
xor
cmp
outsb
xchg
push
sahf
jmp
fiadds
adcl
mov
inc
icebp
sub
shlb
jbe
jns
lcall
mov
hlt
in
inc
jb
jecxz
inc
sub
jg
xchg
xlat
les
test
sbb
fistpl
and
rolb
cltd
add
cmp
inc
lods
jge
sbb
lret
inc
fimull
fimuls
add
and
rclb
and
in
pushf
lds
xchg
loop
xor
aad
addr16
call
pop
lcall
mov
jge
outsb
add
dec
pop
leave
bound
sub
xchg
ja
rorb
and
cli
in
adc
lock
test
imul
sbb
sbb
negb
mov
jge
jmp
push
idivb
mov
cmp
mov
imul
mov
xor
mov
xchg
sbbl
loop
in
icebp
js
cmp
sub
data16
popa
fs
sarl
popa
adc
enter
jbe
jmp
sbb
repnz
stc
push
sbbb
sbb
add
ds
xor
and
stc
pmullw
stc
xor
adc
cs
sub
sub
aas
mov
stos
sbb
jne
jns
pop
mov
arpl
inc
xorb
jnp
cmp
pushf
sbb
cmp
jle
add
and
pop
or
mov
shrd
xor
pop
scas
push
filds
mov
js
add
xchg
ljmp
push
ret
in
es
mov
cmp
aad
sub
icebp
lret
icebp
jg
pop
rcrl
jne
cltd
mov
xchg
mov
cli
mov
adc
insb
ret
lret
jno
dec
fisttps
aad
xchg
dec
es
push
adc
enter
out
addb
xchg
xlat
sbb
sbb
xchg
rorl
mov
inc
mov
out
adc
lret
push
inc
aaa
je
fcomps
cmp
xor
lahf
jle
sar
mov
repnz
iret
push
sbb
mov
cmp
dec
push
mov
cmp
test
push
or
sub
mov
nop
shll
insb
sub
adc
or
mov
push
push
mov
in
sbb
fisubs
jnp
jae
dec
inc
test
cmp
xchg
pop
mov
xchg
fwait
aad
insl
mov
shrb
xor
test
jmp
insb
adc
xlat
jne
out
sti
lds
add
stos
jb
clc
lods
addr16
mov
jns
pusha
in
jno
fdivs
lock
mov
test
xchg
les
nop
arpl
loop
inc
jns
popf
sbb
lret
stos
push
push
push
iret
lret
call
mov
std
insb
jbe
sub
jno
addl
adc
mov
push
enter
std
mov
inc
mov
lret
and
inc
pop
aam
mov
sbb
std
ss
bound
pop
or
shll
lods
adc
xor
lcall
jb
add
lret
cmp
or
aad
pop
push
adc
fistps
sbb
gs
xchg
push
adc
into
out
ret
xor
push
rolb
lods
or
mov
xor
sub
or
pop
inc
imul
loopne
lods
stos
xor
clc
push
jnp
xchg
adc
scas
ja
sub
push
xor
dec
adc
cmp
pop
fdivrs
pop
dec
or
test
dec
pop
fstpl
call
mov
adc
nop
rcll
xchg
mov
pop
rcll
imul
jno
xchg
or
test
imul
inc
div
cmpsl
mov
mov
push
insl
and
sbb
and
mov
movsb
push
andb
or
addr16
insl
outsl
lds
bound
xorl
stos
or
xchg
iret
sahf
jge
xor
mov
mov
mov
bound
sub
in
inc
test
cld
adc
xchg
stos
adc
loope
cmp
xchg
mov
insb
dec
stc
nop
insl
movsl
std
dec
inc
xor
jmp
insb
aam
and
and
xor
xor
loope
cmp
rcrb
sbb
mov
mov
jae
popa
mov
test
aam
ss
pop
sbb
add
shll
shrb
mov
dec
xor
paddw
pushf
test
pop
scas
mov
scas
imul
sti
or
aam
mov
loop
push
fwait
xchg
xor
shl
daa
xor
add
aaa
fbld
push
lock
test
xor
lcall
xorl
cmp
int3
lock
enter
lea
add
adc
insb
sbb
insl
aam
pop
jle
test
and
pop
testb
aam
or
add
popf
test
dec
loopne
jns
mov
addr16
pop
rcll
icebp
jno
or
pop
pop
adc
and
mov
dec
jecxz
mov
cmp
push
les
out
pop
data16
mov
lcall
outsl
out
mov
sbb
in
insl
sbb
stos
mov
test
cmp
test
subl
sub
sub
dec
cltd
jb
pop
pop
mov
push
xor
idivl
mov
clc
push
jbe
pop
scas
push
adc
pop
popa
rcrb
sub
clc
scas
call
xchg
ficoml
test
jp
pop
ss
rorl
loope
addr16
jns
daa
mull
ret
test
pop
ljmp
in
imul
loope
rcrl
mov
sub
sub
cmc
adc
les
xor
cs
ret
jb
shll
sti
pop
add
daa
inc
xor
out
out
ljmp
cmp
jae
xor
mov
ror
and
es
mov
push
xor
pop
mov
add
mov
mov
hlt
leave
fmul
jp
in
sahf
and
push
adc
cs
mov
push
mov
jge
dec
pop
cs
mov
jbe
out
mov
icebp
sbb
mov
lret
data16
pop
push
push
enter
jns
sbbb
mov
pop
fwait
ljmp
sti
inc
sbb
imul
push
dec
sub
mov
daa
inc
jp
adc
mov
xorl
jbe
mov
inc
push
xor
stc
stos
sbb
shr
pop
fnstcw
mov
data16
idivb
or
fistpll
cmp
daa
jp
pop
cmp
push
outsb
test
das
push
jmp
ret
adc
jns
xchg
and
jmp
loope
jno
inc
cmp
daa
and
shll
test
mov
inc
loop
out
and
xor
inc
shrl
adc
cmp
xchg
sbb
and
sub
pop
mov
mov
xchg
push
popa
cmp
stos
inc
dec
lods
mov
mov
add
jno
jnp
mov
xchg
sbbl
testb
xchg
jecxz
into
mov
sbb
jp
stos
jbe
mov
pusha
into
push
inc
xor
std
mov
cmp
outsb
mov
stc
insb
inc
movsl
call
pusha
push
cld
scas
daa
add
and
adc
inc
fdivl
adc
addl
mov
pusha
int
cmovg
sub
cmp
sbb
enter
dec
fisubl
cmp
sbb
xchg
fmul
movb
ljmp
repnz
push
mov
loop
or
sarl
mov
push
loopne
stos
push
shl
dec
daa
mov
pop
xchg
sbb
fldt
pop
push
lret
mov
cmp
dec
xor
or
call
jge
inc
test
js
loop
pop
sub
push
jg
sti
lret
fisttps
push
pop
out
xchg
mov
arpl
mov
xor
jmp
xor
bound
xor
jbe
jne
cli
push
mov
sbb
sbb
pop
fwait
pusha
cmp
mov
lods
add
mov
adc
jo
adc
sbbl
jge
aaa
pop
fcmovnbe
rorb
pop
add
and
in
popf
mov
stos
lea
sarl
cwtl
stos
adc
fs
into
mov
xchg
inc
add
add
stos
gs
jmp
push
pop
mov
sub
sub
pop
xchg
jle
pop
test
lahf
xchg
push
pushf
and
ja
jnp
dec
dec
add
lret
test
pop
mov
mov
hlt
add
xchg
clc
dec
mov
jl
jecxz
jbe
push
xor
fistps
fistpl
jl
je
xchg
mov
jne
into
pop
adc
mov
pushf
mov
jo
aas
and
pop
mov
je
jg
push
and
sub
ljmp
xchg
dec
mov
lea
decl
aas
out
xchg
loope
dec
jp
insl
sub
xchg
data16
loope
inc
repnz
lret
sahf
test
sbb
or
stos
jmp
in
enter
scas
jne
lcall
mov
je
push
ficoms
fcompl
lahf
cltd
int
adc
inc
push
mov
xorl
jp
mov
xor
or
gs
push
push
cmp
std
jnp
cmp
ds
pop
mov
sub
mov
sahf
cltd
mov
jmp
push
and
xorb
push
scas
imull
rolb
push
fadd
popa
inc
xchg
ds
out
sbb
test
cmpsl
stc
push
pop
dec
and
ja
fwait
popf
add
cli
xchg
fwait
xchg
mov
clc
mov
xchg
test
mov
or
jne,pn
pop
lods
aaa
mov
icebp
or
test
out
into
cmp
jne
mov
mov
xor
int3
int
jmp
pop
ret
mov
lds
test
gs
jns
lods
push
mov
xor
mov
iret
xor
sbbl
mov
push
loop
add
fdivl
xor
shll
cltd
or
jle
in
pop
loopne
in
scas
fstpt
or
adc
mov
fldz
xor
dec
push
pop
popf
cltd
addb
sbb
pop
movsb
call
push
jo
xchg
sbb
scas
xor
test
outsl
sti
jle
pop
inc
xchg
js
or
adc
in
js
xor
push
or
push
dec
test
iret
push
adc
pop
xchg
shlb
add
pop
ja
in
test
movsl
icebp
ds
loop
sbb
ret
fwait
es
jae
add
push
pop
fidivrl
test
enter
pusha
cwtl
xchg
sub
gs
dec
les
xor
sub
scas
int
sbb
dec
ss
push
xchg
test
push
inc
xor
inc
lahf
lods
test
data16
int
cmp
jp
push
mov
dec
mov
inc
push
mov
pushf
push
or
ss
mov
xchg
call
imul
daa
add
sub
cmc
sarb
inc
mov
in
push
pop
movsb
jmp
and
inc
pop
dec
xchg
int
test
idiv
addr16
imul
adc
rcll
scas
xchg
pop
xor
dec
scas
fsub
sub
pop
inc
cld
arpl
clc
inc
add
sub
adc
add
adc
xor
popf
mov
roll
fildll
out
lods
loop
gs
inc
stos
mov
sub
cltd
ss
mov
jmp
pop
dec
fs
cwtl
push
and
or
add
jg
mov
jle
iret
nop
xchg
je
adc
push
jnp
xchg
lds
push
cmp
mov
mov
cmp
mov
xor
pop
mov
cmc
add
sub
adc
add
inc
dec
ja
pop
fdivrp
shll
mov
fsubs
fsts
inc
fsubp
push
xchg
ja
xor
nop
test
fwait
stc
mov
push
shl
fiadds
mov
imul
jge
add
inc
xor
pop
jecxz
jno
insl
aas
sub
dec
pop
inc
jb
inc
outsl
mov
div
pop
sbb
shlb
push
mov
mov
dec
push
push
call
sub
inc
fstpl
mov
add
cmp
stos
stos
movb
pop
test
pop
dec
cmp
int
jge
jg
fwait
or
enter
xchg
add
outsb
sbb
sbb
push
xor
pop
lahf
dec
jno
fisubs
add
ret
scas
scas
mov
pop
xlat
out
adc
xor
pop
and
pop
and
jbe
and
adcb
sbb
rol
dec
dec
or
or
rcl
sbb
xor
mov
iret
movsb
pop
lcall
fsubrl
cmpl
pop
cmpsb
mov
imul
adc
ljmp
xchg
dec
push
or
xchg
jl
int
cmpl
sub
xor
cmp
stos
rcrb
int3
xchg
adc
inc
loopne
and
inc
inc
loopne
adc
xchg
test
mov
jmp
add
jbe
lds
cli
mov
scas
out
lcall
lods
adc
aas
fldt
add
push
add
jecxz
ret
xor
add
sub
or
jns
test
fstpt
call
mov
xor
mov
jl
xchg
lahf
mov
jecxz
push
stos
push
fstpl
push
mov
sbb
outsb
loope
call
ljmp
sub
push
daa
clc
test
outsb
mov
xor
fs
xchg
outsb
repz
lock
les
cmp
dec
icebp
hlt
fildl
mov
jne
stos
test
nop
movsl
test
movsb
adc
aaa
loope
fstpt
fisubs
lret
lret
mov
out
test
mov
or
push
cld
ljmp
mov
jmp
push
imul
das
cmp
sbb
addl
insb
bnd
outsb
inc
rorb
out
xchg
xchg
sub
sbb
add
mov
aam
pop
sub
xchg
dec
mulb
pop
test
fdivp
jge
or
mov
inc
lret
adcl
fcmove
les
inc
in
cmpsb
sub
mov
xchg
dec
lods
arpl
jne
je
into
lret
xchg
ss
push
loop
test
fnsave
das
xor
cmp
hlt
stc
int
stos
add
sbb
cmp
and
lods
mov
pop
mov
sti
outsl
jns,pt
adc
ss
stc
outsl
push
rorl
dec
shll
sbb
sbb
iret
rolb
pop
push
lret
or
dec
sub
mov
sbb
in
pop
sbb
fwait
insb
pushf
and
pop
fldenv
lret
lds
int
dec
in
push
lret
fiadds
dec
lds
or
inc
sub
adc
inc
syscall
pushf
in
mov
inc
fs
cmp
ret
xchg
loopne
bnd
jnp
ss
mov
mov
xchg
lcall
enter
sbb
popa
or
stc
lret
or
sbb
pop
ja
cltd
lods
out
mov
sahf
pop
das
mov
push
fadd
out
inc
mov
in
dec
push
fdivrl
push
pusha
mov
sub
mov
data16
adc
outsb
mov
jbe
xor
jle
xor
stc
enter
xor
inc
in
pop
xchg
push
jne
xor
lds
cli
xchg
and
pop
push
pop
ja
rcrb
roll
daa
mov
aam
idiv
inc
mov
pop
ss
insl
ficoml
cmp
hlt
or
xchg
scas
jbe
mov
ljmp
cmp
sbb
imul
repnz
mov
addl
add
xor
xchg
loop
jo
cwtl
mov
mov
repnz
inc
scas
or
inc
sbb
iret
stos
insb
test
add
jns
mov
mov
inc
aas
js
fwait
and
out
clc
jle
xor
xchg
lock
int
jl
imull
dec
mov
adc
pop
sbb
int
sub
loopne
add
or
notb
out
dec
fwait
mov
leave
xor
adc
arpl
rcrb
icebp
mov
pop
fistpl
xor
lret
jg
sub
loopne
mov
or
test
sbb
mov
or
repnz
incl
pop
push
outsl
lods
push
jbe
mov
scas
fstpl
mov
aam
mov
insb
inc
push
adc
and
ljmp
or
adc
scas
roll
inc
inc
and
push
cltd
cwtl
jge
fcomps
sub
mov
cmp
mov
mov
cmc
aaa
mov
push
ss
add
jp
mov
std
dec
call
jecxz
xor
and
enter
mov
mov
mov
das
inc
mov
mov
adc
jp
cmp
dec
xchg
lret
in
pop
cmp
push
xor
xor
pop
ja
lahf
sub
sbb
mov
aam
xchg
push
xchg
out
pop
xchg
loop
test
and
imul
test
mov
dec
imul
ds
cmp
add
ljmp
mov
imul
pop
jle
mov
mov
sti
pop
movsl
aam
add
xor
push
pop
arpl
cs
xchg
fimuls
js
ret
fisubl
or
sbb
loopne
push
xor
inc
push
pop
imul
aad
nop
mov
xchg
lock
or
xor
cmp
loop
fstpt
xor
and
in
push
inc
adc
jne
out
dec
rcrl
loope
je
popa
fisubrs
jl
stos
push
inc
ss
ds
jmp
and
xor
cmp
dec
pop
mov
imul
mov
mull
push
jnp
xor
shll
mov
cld
ljmp
mov
xchg
sbb
sti
mov
xlat
stc
mov
adc
rcrb
adcl
dec
xchg
push
outsl
jg
lods
fistpll
mov
xchg
fsubrs
pop
pop
cmc
jbe
in
js
xor
cmpsb
inc
clc
and
je
out
or
mov
mov
sub
in
js
bound
rcrl
push
insl
xchg
lahf
mov
cmp
fwait
lret
mov
movsl
jnp
lahf
sarb
aam
pop
roll
inc
cmp
and
fmuls
pop
inc
and
movsl
inc
pop
imul
mov
dec
sub
mov
nop
bound
clc
xchg
push
sbb
in
lods
and
xchg
xor
addb
cmp
jge
stc
jle
fxch
adcl
push
push
repz
push
shll
fcompl
lcall
rcr
jp
pushf
out
rcr
push
ds
int
xchg
push
or
push
push
stc
icebp
leave
fucom
inc
shlb
cmp
pushf
sbb
cs
add
out
jns
daa
fwait
int
xor
xchg
fists
adc
cwtl
arpl
pop
xor
push
cmp
out
xchg
icebp
cmp
iret
stos
jg
idivb
lcall
cmc
aam
arpl
gs
or
jns
mov
jle
cli
jmp
sub
sahf
pop
cmpsl
dec
inc
inc
mov
lcall
loopne
mov
push
adc
push
test
jle
jnp
inc
xchg
daa
sub
pushf
fldenv
xor
sub
popl
test
fsts
imul
in
pop
cmovbe
adc
out
sbb
mov
mov
mov
xchg
adc
add
adc
mov
xchg
mov
add
sbb
cmp
push
iret
adc
int3
jno
cmpb
and
test
mov
imul
jmp
fld
shrb
xchg
jne
mov
adc
xor
sbb
and
mov
fldl
mov
pop
jbe
sbb
mov
jb
std
jno
pop
xor
mov
jl
and
jecxz
and
test
sub
xor
std
push
add
popa
push
cmpsl
cltd
dec
inc
mov
filds
pop
pop
pop
adc
in
movsb
fimull
mov
and
xchg
add
push
les
popa
enter
or
push
cmp
movsb
xor
xchg
repnz
cld
mov
push
lods
sbb
adc
hlt
dec
push
adc
cmpsl
xor
dec
aaa
sti
out
movsb
sahf
sbbl
inc
xchg
xchg
inc
pop
cs
sub
mov
xchg
sbb
or
mov
div
lds
dec
ret
mov
pop
and
mov
mov
in
in
lret
adc
popf
inc
cmp
dec
push
lcall
cmpsl
cmp
test
pop
ljmp
pop
mov
jno
mov
aas
mov
jmp
push
adcl
mov
xchg
or
or
jo
mov
scas
ds
hlt
cmp
pusha
jbe
sub
mov
sbb
push
add
xlat
insb
fmuls
pop
pushf
je
inc
xor
test
xor
icebp
sti
jae
mov
inc
sub
cmp
cs
mov
pop
lahf
inc
das
and
fwait
jns
sbb
and
dec
dec
lahf
cltd
cmp
mov
and
pop
int
push
xchg
fstpl
jg
and
loope
int
cmp
pop
dec
jbe
lahf
popf
popa
repz
or
mov
ret
add
xlat
adc
sub
and
subl
mov
out
xchg
mov
std
adc
shl
mov
jp
mov
popa
jge
mov
addr16
popa
cmp
sti
shl
push
jno
icebp
inc
add
sarl
sbb
jae
pop
push
pop
rcrl
in
and
fwait
outsb
sbb
es
das
mov
sub
push
push
cmp
cmp
jp
mov
cmp
push
je
jo
fwait
dec
dec
mov
iret
int
mulb
add
data16
popa
imul
xor
mov
pop
insb
jecxz
sub
jae
movsl
and
mov
sub
dec
cmpsl
push
stos
out
mov
cmp
inc
add
xor
xchg
in
lahf
mov
xchg
push
jns
jecxz
sub
jmp
out
xchg
dec
mov
std
inc
xchg
add
sub
dec
jae
leave
aad
jle
or
pop
in
push
mov
cwtl
jbe
sbb
jbe
iret
dec
loop
and
scas
inc
dec
jno
push
mov
fldl
je
aad
cmpl
std
loop
push
and
aaa
mov
insb
clc
xor
mov
dec
lret
inc
adc
arpl
xchg
xchg
sti
jge
pop
cmp
xchg
jp
mov
scas
std
push
push
push
aam
sub
pop
imul
and
mov
addr16
mov
sbb
or
cs
pop
loopne
outsl
adcl
lcall
adc
pushf
jno
cld
pop
sbb
in
mov
arpl
movsl
jge
fs
aad
nop
xchg
cmp
jb
xor
push
movsb
cmovge
inc
mov
outsl
sub
push
mov
stos
or
mov
bound
aad
iret
imul
pop
int3
adc
cmpl
aas
cltd
pop
sbb
and
xchg
cmp
mov
xchg
daa
xchg
leave
loopne
push
inc
jae
cli
dec
cmp
int
push
pop
mov
inc
popf
sbb
scas
mov
sahf
daa
pop
in
roll
scas
or
jb
and
inc
movsl
mov
pop
stos
inc
mov
sbb
xchg
xlat
rorl
xchg
clc
or
outsb
lcall
push
pop
psubsw
lods
movsb
adc
push
push
jo
or
inc
out
sbb
fdivl
sub
iret
inc
sarl
inc
arpl
aaa
gs
pushf
jno
fisttpll
mov
xor
fsubs
dec
jecxz
cmp
cmp
arpl
pop
loopne
cmp
jb
orb
or
adc
ljmp
rcr
and
pop
pusha
movsb
jno
inc
mov
fsts
inc
lods
dec
xor
mov
cmc
add
arpl
cmp
std
dec
sbb
fdivl
mov
sub
aam
dec
pop
fldl
dec
fisttpl
sbb
add
mov
and
cli
jl
arpl
cmpsl
lea
and
push
dec
inc
push
in
rcrl
jl
inc
pop
jge
pop
popf
mov
mov
ficoml
mov
loopne
xchg
pop
add
cwtl
mov
pop
js
mov
scas
adc
shlb
jle
gs
mov
insb
lcall
sbb
orb
insb
arpl
cmp
loop
or
scas
orps
xchg
sub
xchg
int
cmp
push
pop
sahf
in
fs
xlat
jne
mov
adcl
push
addb
mov
mov
fimull
jbe
dec
jb
adc
jl
cltd
ds
mov
gs
pop
and
inc
lcall
xchg
xchg
xchg
pop
inc
lock
loope
inc
sub
iret
nop
ja
mov
jne
scas
inc
stc
fwait
shlb
fisubrs
jp
jbe
push
adc
add
call
mov
sar
ret
mov
pop
adc
add
aaa
mov
or
cmc
cmpsb
mov
push
add
sub
xchg
aam
sub
ret
cld
pop
lret
push
std
icebp
popa
lods
outsb
inc
dec
add
sahf
inc
add
cwtl
cmc
cmp
inc
adc
sti
lds
dec
outsl
inc
xchg
mov
dec
cmp
cld
mov
jnp
leave
test
lret
subb
jb
cltd
sub
rclb
mov
in
sahf
cli
dec
aam
push
out
add
sbb
dec
mov
idiv
push
lcall
push
mov
mov
rolb
stos
stc
pop
es
xor
add
test
iret
inc
scas
in
jbe,pt
fadd
add
mov
push
xor
in
ss
sbb
xor
test
fcmove
lahf
push
test
xchg
push
mov
cmp
pop
adc
imul
outsl
lcall
adc
pop
pop
jp
add
mov
fisttpl
inc
adc
cmp
shrl
mov
bound
push
add
cltd
ljmp
loop
rclb
and
and
add
inc
mov
pop
into
mov
sbb
and
insb
xor
nop
popf
ds
pop
xchg
lods
jb
iret
cmp
jae
and
repnz
loope
mov
ret
aam
adc
xor
insb
or
call
addr16
mov
xchg
dec
testb
jg
sahf
fnsave
mov
mov
and
fstpl
or
int
mov
ret
mov
sub
fmull
mov
ficoml
bound
add
shll
je
bound
mov
cltd
dec
add
cmpb
xchg
pop
sbb
xor
or
rorl
fidivs
call
in
push
ljmp
jecxz
xchg
loopne
imul
ja
insl
mov
pop
mov
outsl
mov
sahf
jge
or
sbb
push
sbb
js
mov
pop
stos
sub
sub
jb
xchg
std
push
inc
fwait
mov
ss
cmp
jmp
rol
sub
clc
pushf
xchg
addr16
icebp
pop
loope
repnz
mov
test
pop
jmp
xchg
mov
pop
lret
sbb
dec
stos
movsb
dec
sbb
add
adc
shl
stos
sbb
pop
adc
xchg
aad
mov
mov
xor
xchg
into
and
xchg
int
xor
cmp
mov
mov
or
inc
cmpsl
dec
cmp
mov
mov
js
inc
jne
jmp
or
in
imul
orb
mov
jb
je
hlt
hlt
pop
mov
push
shll
out
inc
iret
out
mov
and
mov
out
mov
les
or
call
dec
test
movsl
mov
int3
lds
sbb
adc
cld
ds
mov
jns
lcall
add
cmp
icebp
es
jnp
data16
pusha
icebp
dec
cwtl
push
mov
mov
pop
test
js
ja
ret
pop
arpl
and
ret
dec
cmp
int
stc
mov
mov
mov
shll
or
pop
lret
jo
daa
mov
pop
sti
repnz
pushf
leave
rolb
scas
mov
sub
dec
or
adc
lock
out
adc
lea
dec
dec
xor
push
aaa
adc
insb
cmc
xor
test
cs
mov
mov
jae
sahf
sub
shll
lea
je
jmp
add
cmp
out
hlt
cs
jl
call
std
add
pop
cmpsl
movsb
or
xchg
rcll
cmpsb
and
or
dec
xor
or
jb
or
jp
xchg
jge
popa
in
sbb
filds
rcll
sbb
hlt
sub
insl
cmc
loopne
mov
pop
pop
shlb
ja
hlt
mov
je
push
movsl
adc
pop
int
popa
jae
jl
mov
push
add
icebp
jns
nop
ljmp
in
fs
jo
aam
jecxz
shl
es
push
jmp
mov
mov
push
mov
jo
jle
js
into
jle
lds
mov
xchg
daa
pop
test
mov
enter
lahf
cmpl
ret
adc
es
out
mov
cmp
mov
xchg
iret
xchg
dec
lods
mov
imul
jmp
stc
cmc
mov
lods
mov
pop
mov
lds
xacquire
test
dec
sbb
mov
outsb
pushf
add
add
jmp
xchg
xchg
sub
pop
mov
ret
aam
loopne
icebp
lahf
mov
ret
push
and
repnz
pop
ret
mov
ret
mov
dec
sub
jno
inc
mov
movsb
je
lret
out
sahf
ja
fcomps
loope
dec
in
cli
fldenv
gs
mov
arpl
xchg
nop
xor
lret
mov
pop
dec
sbb
adcl
adc
iret
pop
movl
push
jo
roll
xchg
xchg
or
add
hlt
sub
fadds
lcall
into
push
xchg
mov
push
test
or
mov
inc
repnz
jb
cmp
cmp
in
adc
cli
iret
mov
loopne
popf
jge
jp
dec
dec
movsb
xor
push
and
push
mov
and
lret
bnd
movzbl
or
sarl
aam
ja
mov
ljmp
test
dec
lods
je
inc
cmp
movsl
loope
or
pop
into
adc
jae
paddd
outsb
pop
aam
adc
dec
jns
mov
fdivl
pop
aam
inc
gs
imul
jge
mov
add
mov
sbb
or
or
sub
push
nop
bound
jne
pop
jno
xchg
mov
enter
pop
jmp
jge
pop
sar
xor
jo
pop
mov
popf
mov
call
sub
repnz
mov
enter
into
out
cld
mov
mov
arpl
lods
xchg
cmp
xlat
pushf
pushf
add
fldcw
cmpsb
aad
inc
out
jae
lret
jg
cmpl
sbb
mov
lods
push
pushf
mov
jae
or
in
into
cmpsb
pop
adc
jmp
adcb
xor
mov
jle
mov
sub
xchg
jns
dec
jle
scas
xchg
pop
or
cmp
mov
loopne
test
mov
jl
rcrl
out
popa
leave
dec
push
adc
push
jbe
pop
cmp
push
orl
mov
sahf
or
push
ljmp
push
mov
mov
out
movsl
nop
fidivrs
ljmp
cltd
pop
or
xor
out
adc
lahf
mov
push
flds
test
repnz
mov
es
test
adc
int3
subb
xlat
rcl
jo
je
push
inc
push
xor
nop
xor
imul
cmpsb
out
pop
cmpsl
outsl
fcmovne
push
jge
imul
jbe
out
inc
xor
pop
shlb
outsb
ret
jl
jns
push
xlat
jnp
inc
out
decb
xor
adcb
or
test
shll
jmp
outsl
jb
in
or
xchg
insb
imul
adc
xchg
call
mov
rorb
mov
and
insb
sbb
sub
in
mov
cmp
test
iret
mov
push
push
aas
mov
outsl
test
nop
incb
inc
xor
mov
imul
mov
andl
dec
pop
pop
jne
pop
push
popa
daa
cs
sub
cmp
xchg
scas
or
lahf
sub
push
push
outsb
lcall
popa
adc
lret
jns
test
xchg
sbb
and
mov
xor
dec
mov
in
jnp
stos
popa
or
ret
dec
jmp
adcl
in
repnz
sub
jmp
fs
ret
sbb
imul
fsubrl
xchg
xor
push
xchg
mov
out
sub
adc
adc
repz
xor
xlat
sbb
cmp
sbb
packsswb
lds
push
or
jl
imul
mov
ss
xor
adc
cmc
pop
jns
loop
mov
stc
xor
cmp
jecxz
movsb
aas
movsl
xchg
daa
cmp
inc
xor
out
jmp
jnp
sbb
or
jno
mov
jo
pop
mov
faddl
jge
cmc
call
inc
mov
or
nop
xchg
jne
les
pop
adc
pop
adc
add
jb
adc
icebp
mov
fdivrl
incb
xchg
les
mov
cmpsb
scas
adc
dec
loope
js
dec
js
mov
cmp
pushl
mov
mov
cmpsl
jl
push
and
repnz
mov
and
and
and
cmp
daa
or
pushf
pop
lods
xor
popa
pop
add
nop
sub
mov
fcmovne
lret
call
adc
outsb
stos
cmp
sbb
loop
dec
nop
jmp
xor
nop
mov
adc
nop
or
cmp
ret
push
dec
cmp
sti
in
leave
cs
mov
pop
mov
sbb
dec
js
or
popl
cmc
sub
js
call
insb
inc
inc
call
and
jl
xor
int
jno
push
test
jno
popf
xchg
in
and
repnz
push
and
nop
rcl
xchg
lcall
in
push
adc
loopne
clc
insl
mov
psubusw
cmpb
cmp
clc
icebp
jae
mov
push
lea
into
sbb
gs
lods
xor
add
and
inc
insl
pop
mov
xchg
test
pop
mov
mov
movb
addr16
js
fcomi
dec
push
inc
jg
mov
stc
inc
jns
iret
lahf
out
sti
out
cmp
hlt
out
xor
roll
lret
cmpsb
and
mov
ljmp
lods
loope
jns
arpl
sbb
cmp
xchg
das
push
mov
in
ret
lret
and
sub
incb
mov
pop
stc
and
into
jg
les
out
add
mov
aam
sbb
fidivl
minps
loopne
test
fs
mov
push
ret
mov
push
cli
outsb
add
adcl
rorb
and
sub
ljmp
addr16
idivb
icebp
mov
stc
aas
call
push
xlat
in
fistpll
movsl
rcrb
int
std
sbbb
movsb
add
popf
and
xchg
fistpll
mov
stos
adc
push
and
cmp
and
xchg
cwtl
fucomi
jle
sub
xlat
shrb
jge
fcoml
pop
and
out
mov
imul
cmc
insb
faddp
sub
push
aam
jbe
enter
inc
and
adc
cwtl
sub
shrl
clc
pop
test
pop
mov
es
cmp
jne
test
repnz
push
arpl
pop
lods
push
add
xchg
mov
push
push
cmpsb
or
push
aas
sbb
ror
out
repnz
mov
fbld
into
cwtl
sti
sub
inc
jae
and
cld
movsl
mov
push
clc
mov
xor
lret
enter
repz
testl
cltd
cmp
movsl
lods
lret
mov
adc
mov
scas
adc
jno
push
pop
xor
mov
imull
dec
cmp
lds
jo
cs
add
cmp
loopne
jns
push
pop
add
and
add
aaa
mov
sub
mov
mov
and
jae
sub
cmp
lds
jp
rorb
mov
les
les
iret
mov
pushf
movsb
jp
jle
jmp
sbb
fistpll
fnsave
add
into
fnstenv
mov
fwait
lock
dec
adcl
movsb
out
sub
subl
ret
xchg
arpl
test
arpl
dec
dec
cli
insl
inc
mov
lcall
sub
jmp
mov
ljmp
mov
cmpsl
mov
in
lds
xchg
jle
inc
ds
lods
mov
mov
test
mov
int3
adcl
mov
cltd
inc
push
arpl
push
or
xor
jb
sbb
cmp
leave
negb
sbb
jle
and
outsb
cld
les
push
cmp
add
scas
es
lock
loopne
inc
movb
mov
add
inc
pusha
js
cs
fwait
xchg
dec
fcomip
out
push
pop
sbb
push
ljmp
or
cmpsl
xchg
pop
or
jmp
fs
sbb
loopne
adc
jg
inc
jmp
cmp
xor
bound
int
hlt
imul
mov
mov
xor
aaa
and
hlt
adc
mov
cmpl
sub
mov
push
arpl
mov
les
lods
sti
adc
pop
sbb
inc
adc
in
sub
cwtl
rolb
push
mov
mov
ret
lcall
iret
push
popf
inc
sub
push
mov
jmp
ja
or
ret
pop
cltd
clc
sbb
int3
xchg
popl
jb
push
inc
dec
xor
lods
pop
inc
cltd
gs
sbb
and
xchg
je
add
cmpsb
jge
imul
jge
cmp
sub
mov
dec
dec
aas
fs
xchg
and
xchg
iret
out
sub
testl
pop
xor
enter
jbe
popa
or
out
scas
mov
bound
pop
in
pop
aaa
leave
push
sub
pop
popf
and
inc
push
test
pop
mov
daa
shlb
in
sbb
repz
mov
sahf
popf
fwait
and
test
pop
in
jle
xorl
loopne
add
or
mov
sbb
lret
fildll
mov
jecxz
int
push
jae
loopne
sub
out
mov
jp
js
pop
cmp
push
not
mov
cmp
inc
mov
into
stc
shr
sbbb
ret
aad
stos
xor
push
ficomps
xchg
es
push
jae
adc
jnp
mov
and
xor
and
ficomps
and
mov
cmp
cltd
shr
inc
aam
jbe
adc
clc
addr16
or
pop
aad
push
cmpsl
sbbl
push
out
dec
popa
jnp
push
shrl
mov
shll
add
jl
pop
jmp
lret
cmp
xchg
mov
adc
popa
xchg
sbb
shrl
mov
dec
out
loope
xor
sub
pop
imull
cwtl
pop
dec
mov
test
mov
popf
movsl
and
sbb
inc
add
add
push
dec
lods
pop
mov
mov
movsl
lcall
pop
inc
pop
add
jo
loop
jb
movsb
test
js
sarb
mov
sbb
scas
imul
xchg
xchg
imul
movsb
adc
push
adc
push
jb
dec
cmp
sbb
xchg
inc
push
cmp
fs
jbe
mov
je
sbb
daa
loopne
sbb
dec
in
push
cmc
or
dec
jp
lret
dec
jb
mov
mov
xor
insb
decb
mov
sub
xorb
push
divb
adc
and
fildl
imul
jmp
push
and
jne
or
xchg
fnsave
xchg
sub
add
push
pop
mov
sub
fsub
sbb
xorb
xlat
or
xchg
mov
mov
fisubl
xor
cmpsl
mov
andb
pop
mov
stc
add
lock
cmp
out
ds
lods
sbb
aas
mov
rorb
inc
icebp
pop
and
add
push
sbb
frstor
subl
lods
ljmp
je
jmp
stos
inc
mov
xchg
push
or
inc
subl
push
jmp
inc
aaa
outsb
add
and
rolb
incl
test
push
cmp
mov
jnp
and
std
movsl
test
in
ss
movsb
pushf
xor
mov
mov
repz
cmp
or
push
incb
xlat
clc
lds
xchg
popf
mov
fmull
stc
repz
jg
adc
hlt
loopne
xor
addl
test
pop
ljmp
dec
xchg
das
push
jge
inc
mov
jne
call
mov
jae
ret
pop
inc
and
pop
sub
std
cwtl
xor
nop
cmp
cld
mov
fldt
pop
out
and
popa
xchg
pop
push
lock
inc
xor
pop
jle
mov
inc
or
mov
dec
shll
cmpsl
idivl
inc
push
pop
adc
div
outsb
sub
rcl
jae
dec
stos
arpl
loopne
imul
jb
xchg
add
mov
mov
pop
adc
scas
dec
dec
clc
mov
jl
fadd
mov
repz
dec
call
stc
addr16
inc
fdivs
lret
stc
add
scas
mov
inc
out
cmp
aaa
cmp
pushf
sbb
jnp
xchg
pop
add
cmp
idiv
lcall
inc
and
jecxz
arpl
jo
and
adcl
mov
mov
call
push
dec
lods
inc
xor
imul
popf
ret
jb
ljmp
sbb
scas
xchg
xor
and
and
mov
xchg
cltd
js
cs
jne
pushl
leave
mov
stos
xor
pop
fwait
cmp
xor
pminsw
and
and
pop
inc
imul
or
pop
add
or
pop
pushf
ret
xor
lret
pop
mov
les
cs
jns
lods
adc
jmp
sbb
or
jg
loopne
les
mov
lods
sub
pop
loopne
enter
shl
js
mov
mov
cld
mov
pop
xchg
cmc
mov
and
push
notb
in
outsb
movsb
mov
bound
mov
lahf
dec
cs
push
cltd
mov
dec
das
negl
xor
add
lds
adc
dec
mov
cmc
mov
mov
mov
sti
sbb
fiaddl
cmc
mov
lock
xchg
pop
pop
negl
mov
cwtl
lds
pop
xor
adc
push
std
cwtl
sti
pop
ret
mov
ret
push
inc
loopne
add
pop
dec
and
inc
aas
push
xor
pop
shlb
scas
enter
push
cmp
es
mov
pop
ja
sahf
out
ja
mov
loop
insl
mov
add
mov
push
aad
mov
jbe
test
xchg
stos
xor
bound
push
test
cmpsb
loope
les
mov
cmp
inc
lock
cmp
sbb
push
lret
fimull
es
xchg
xchg
cmpsb
fmul
icebp
shrl
push
or
negl
or
push
mov
aad
fistps
cmp
jg
dec
lret
rorl
int
loope
push
inc
ss
stos
mov
call
imul
ret
insb
mov
mov
lds
jecxz
cmpsb
cmpsb
dec
call
outsl
clc
fs
push
out
sub
pushl
test
push
les
scas
xor
mov
sub
mov
sub
xor
pop
sub
mov
stc
pop
divl
dec
test
jns
sub
sub
cmp
xchg
decb
push
push
push
dec
loopne
sti
movsb
adc
mov
fwait
or
stos
sbb
jne
lock
dec
les
inc
cmc
xor
cltd
add
or
orb
mov
xchg
jmp
xor
iret
xchg
into
mov
mov
inc
push
pop
add
int3
mov
sub
jbe
adc
jg
in
mov
dec
test
insl
or
mov
mov
inc
repnz
push
or
jns
adc
jbe
xchg
mov
hlt
test
xor
rcr
addb
test
fs
insl
lods
leave
xchg
call
lahf
sub
repnz
jecxz
inc
enter
mov
jecxz
mov
dec
scas
pop
inc
test
les
stc
divb
jle
cmpsb
adc
add
inc
aas
stc
jns
insb
sbb
out
int
js
mov
mov
pop
sub
jae
fninit
sbb
arpl
inc
fwait
cltd
adc
jne
imul
and
out
dec
cmp
xchg
cwtl
sbb
hlt
daa
dec
push
jl
dec
ret
fnstcw
ja
ja
mov
ja
shl
xchg
addl
sub
and
lock
sbb
sar
mov
inc
xchg
adc
ds
data16
adc
xchg
xchg
jecxz
dec
movb
js
jp
sarl
loopne
push
cmp
pop
mov
sub
or
nop
cmp
insl
lahf
jae
push
repnz
jecxz
iret
das
pop
sub
shrb
dec
mov
mov
mov
je
mov
xchg
inc
mov
xchg
cli
fdivrs
jmp
push
mov
and
fistl
push
jo
sbb
mov
or
dec
cmp
xor
xchg
adc
jnp
lret
ret
or
dec
and
and
xchg
cwtl
jns
int
mov
fisttps
push
sbbb
push
mov
xor
mov
and
sbb
xor
scas
rorl
out
mov
lret
mov
jl
jp
or
and
mov
cmpsl
pusha
mov
push
cmp
aas
inc
ret
jmp
std
xchg
ret
inc
push
push
mov
jp
and
loopne
das
add
stos
pushf
or
popa
shr
outsb
push
xchg
lea
imul
and
xchg
sub
negl
je
test
and
jbe
bound
aas
xchg
popa
xchg
jle
test
pusha
mov
xor
stos
mov
and
add
aas
or
test
iret
arpl
and
ja
leave
aad
xchg
in
xlat
add
lret
stos
xchg
dec
mov
mov
sbb
repz
push
mov
push
adc
and
sbb
insb
jp
imulb
daa
pop
mov
dec
test
push
mov
mov
addr16
test
icebp
inc
cli
fsubr
sbb
test
subb
cmp
or
out
stos
aad
int
jns
xor
leave
jnp
inc
push
sbb
inc
and
sbb
lret
jb
sahf
or
cltd
scas
adc
shrb
adc
in
sub
in
mov
cmp
add
sti
inc
or
rolb
insb
jge
aam
jecxz
sbb
and
xchg
cmpsb
fstl
dec
stos
xchg
cli
lcall
mov
xchg
xlat
jb
jge
sarb
add
and
cmp
in
jp
jae
cltd
in
cmp
or
pop
outsl
xor
push
xchg
hlt
hlt
stos
xchg
pop
push
sbbl
mov
mov
xchg
ja
cld
dec
popa
mov
mov
dec
gs
daa
inc
jl
in
lods
sbb
es
jge
push
in
pop
sub
push
mov
xchg
cmpsb
dec
leave
fnstcw
and
inc
inc
inc
jp
push
inc
dec
enter
bnd
and
push
fmull
fnstenv
loope
repnz
dec
add
popf
fldenv
pusha
push
sbb
cmp
cmpsl
mov
aaa
aad
mov
icebp
mov
mov
shl
out
inc
popa
jo
test
inc
jbe
dec
mov
adc
xor
push
ss
push
out
or
repz
mov
inc
xlat
out
fisttps
adc
pop
ds
xor
addr16
mov
push
imul
push
scas
and
push
aaa
ficoms
dec
testb
cmp
mov
cld
jbe
mov
or
xorl
xor
mov
fs
iret
cmpsl
ss
dec
sub
mov
push
roll
call
mov
dec
ret
xor
lret
lret
cwtl
mov
add
fnstsw
cmp
xor
imul
add
loop
dec
icebp
pop
das
pop
add
cmp
lret
addl
jp
mov
lods
std
loope
cmp
cli
out
pop
push
pop
pop
fcmovbe
jmp
fisttpll
mov
int3
jle
mov
adc
jne
adc
push
jle
repz
gs
sub
dec
mov
out
test
push
subb
movsl
ljmp
xor
enter
out
inc
jge
sub
mov
adc
push
gs
ljmp
hlt
mov
mov
lret
punpckhdq
cwtl
mov
push
sarl
in
mov
inc
xchg
xchg
xchg
stc
neg
jge
fs
xchg
inc
inc
in
xchg
mov
ret
xchg
cwtl
idivl
sub
pop
and
pop
mov
add
cli
repnz
popf
push
shlb
faddl
shrb
mov
xorl
jnp
gs
insl
popf
cmpsb
out
rcrl
mov
inc
jae
xchg
pop
cmp
inc
lcall
mov
xor
add
or
mov
xor
pushf
push
js
jb
jg
aad
fcoml
sbb
xor
push
orl
lcall
and
or
leave
int3
int
jbe
lcall
je
or
sbb
jns
jle
mov
xor
outsl
or
shl
inc
xchg
int
aam
push
xchg
call
lock
cmp
dec
outsl
lods
cmpsb
outsb
inc
mov
dec
popa
xor
or
lods
mov
xor
fdivrl
dec
shlb
xchg
xchg
and
or
xor
movsl
inc
inc
dec
pop
jp
ret
cmp
imul
dec
adc
inc
fsubl
aas
and
mov
cmp
dec
in
sbb
jmp
jmp
repnz
pop
lock
pop
sub
dec
jge
jl
es
adc
call
cmp
aad
scas
xchg
inc
push
mov
loope
insb
rorb
jne
mov
fdivr
adc
mov
in
testl
or
sahf
idivl
xlat
jne
in
xchg
mov
push
jae
adc
call
add
cwtl
or
scas
and
insb
mov
leave
pop
xchg
or
or
mov
fnstsw
xor
aaa
aam
rclb
adc
cmp
out
mov
mov
arpl
jb
mov
xchg
aam
xchg
stc
fnstsw
push
test
xor
aad
pusha
or
xchg
dec
sub
pop
push
nop
outsl
and
movsl
stc
sub
xor
aam
cld
loopne
xor
mov
dec
sbb
test
inc
lock
stos
iret
test
into
int
in
in
sbb
sub
ds
cmp
sbb
fwait
jg
jp
jbe
inc
pop
xchg
cli
mov
je
andb
pop
xchg
mov
push
ss
xchg
add
ja
jge
lds
std
inc
sub
cli
test
lahf
mov
in
ja
in
xor
xchg
int
sbb
nop
jo
lret
adc
inc
outsl
add
add
imul
cs
imul
out
data16
lret
or
sbb
adcb
and
popa
dec
sahf
sub
enter
xchg
mov
adc
call
dec
popa
nop
sub
repnz
sqrtps
lock
push
shrb
dec
testb
shlb
test
push
cmp
test
addb
sarb
and
adc
pop
mov
sub
push
add
bound
lock
test
mov
sub
aad
adc
dec
fadd
and
push
lods
int3
mov
in
add
xlat
mov
test
add
inc
and
into
pop
push
mov
jnp
ljmp
sub
or
inc
int3
jb
mov
push
in
jns
or
sbb
out
mov
push
cmpsb
sbb
and
sbb
or
loop
or
mov
popl
lock
in
xor
and
pushf
out
insb
int3
sbb
movsb
dec
xchg
cli
xchg
pop
cmpb
mov
xchg
mov
lahf
jle
push
dec
repnz
or
jecxz
sub
sub
int
outsb
in
dec
scas
pop
scas
sahf
incb
pusha
scas
mov
fiaddl
scas
loope
push
test
inc
xorb
and
sbb
loop
out
xchg
push
outsb
cmc
mov
pop
inc
pop
shll
mov
call
int3
push
shll
dec
loop
fidivrl
adc
cmp
push
mov
loop
call
pop
xor
loope
cmp
hlt
push
inc
xchg
addr16
in
dec
inc
mov
mov
mov
aad
ror
jbe
loope
mov
test
outsb
mov
push
pusha
in
dec
insb
cmpsb
into
and
inc
dec
sbb
mov
jne
jmp
dec
sub
aaa
out
sbb
int3
and
jecxz
adc
jmp
sub
mov
sub
push
cmp
rcrl
or
arpl
adc
sbb
jns
jnp
cltd
cmp
insl
in
rorb
pop
testb
das
int
cmp
int
add
insl
adc
ret
and
push
dec
cmp
lret
imulb
das
dec
dec
test
xchg
orb
sbb
sbb
cmpsw
insb
mov
sbb
dec
cmpsb
test
in
add
pop
inc
jns
mov
xor
cmp
dec
enter
repnz
movsb
mov
ss
xor
jae
insb
mov
jge
lds
sub
jae
insb
insb
mov
rolb
leave
test
in
add
out
mov
sub
in
arpl
int3
aas
and
aam
push
push
jne
std
cmp
insb
mov
jnp
in
into
jge
jnp
pop
mov
inc
into
cmp
scas
cmp
cmpb
test
leave
or
sbb
pop
sahf
pop
jb
cmp
aad
in
imul
insl
pop
mov
stos
sub
call
dec
les
lret
and
xchg
inc
cmpsl
test
loope
outsb
mov
pusha
xor
in
xchg
incb
scas
and
in
adc
sbb
repnz
cmpsl
fs
pop
push
mov
xor
sub
sbb
cwtl
xchg
and
icebp
xorl
dec
push
push
inc
test
jmp
or
or
add
loopne
jp
xchg
fimull
mov
data16
sub
test
add
daa
mov
mov
lds
sbb
iret
xchg
lret
mov
pop
xchg
fisttpll
xchg
clc
lcall
ret
pop
push
jecxz
inc
inc
int
cltd
xchg
mov
shr
cmp
decl
repz
pop
int3
mov
js
arpl
pop
out
sub
dec
push
sti
push
mov
add
xchg
fwait
shrl
enter
add
out
lret
stos
and
xchg
xlat
cmc
mov
dec
fidivs
daa
popa
lods
adc
pop
imul
jmp
dec
and
int
or
sub
add
rolb
mov
lret
movsl
sbb
mov
and
stos
lods
out
fnstsw
in
sub
adc
mov
imul
xchg
pop
xchg
mov
imul
xor
int
adc
cmp
adc
js
lahf
inc
xchg
xor
clc
outsb
rolb
cwtl
in
divl
add
cwtl
mov
jge
clc
adc
roll
jmp
bound
aad
adc
cmp
pop
cmp
ret
lahf
mov
sub
add
frstor
xchg
rcll
test
xor
xchg
add
or
mov
outsl
sub
inc
out
cmp
jge
lret
sbb
iret
std
iret
outsl
add
mov
pop
xchg
mov
scas
sub
movsl
push
pop
loope
jae
and
or
imul
push
cmpsl
cmp
ljmp
in
in
scas
adc
add
orb
out
test
mov
cltd
push
fsub
jae
dec
scas
ficompl
add
or
push
sbb
ja,pt
insl
mov
xor
insb
lea
and
mov
dec
dec
dec
fs
enter
test
ja
stc
add
divb
cmc
bound
push
in
or
in
lret
adc
enter
push
xchg
ja
sub
push
fwait
mov
sub
je
lcall
adc
call
jge
pop
rcr
lds
lods
xchg
pop
imul
fiaddl
sub
lcall
dec
add
xor
or
int3
loopne
mov
jle
sbb
lea
mov
ss
push
cmp
cmp
xchg
adc
mov
pop
dec
adc
dec
fisubrl
jl
cmp
pop
jl
and
dec
cli
leave
stc
jp
movsb
mov
cvttps2pi
inc
pop
filds
in
adc
subl
repz
mov
mov
push
call
jp
fiaddl
mov
loopne
dec
pop
cmc
je
cmp
jb
scas
xchg
xchg
push
mov
xchg
or
call
pop
das
mov
data16
aad
jae
sbb
lret
test
and
jns
imull
dec
loop
mov
out
xor
roll
mov
inc
outsb
fbstp
push
rcrl
pop
ret
add
das
popf
int
xor
and
cs
stos
dec
les
sbb
mov
sub
clc
mov
rorl
pop
mov
fwait
hlt
bndstx
dec
pop
sub
and
jmp
adc
mov
std
pop
addl
cmp
test
lret
movsb
pop
popa
pushf
in
ss
test
pop
mov
ja
out
pushf
xor
fmuls
sub
addr16
cmpps
inc
xchg
lea
xchg
sbbb
push
mov
xchg
clc
pusha
lahf
mov
cmp
adc
arpl
lea
sbb
cmp
mov
adc
outsb
xor
outsb
dec
and
push
jle
int
popa
pop
bound
adc
les
mov
or
fisubrs
push
sbb
mov
jbe
sbb
add
xor
or
lods
lods
fldt
popf
jmp
push
addr16
out
sahf
adc
outsb
fisttpll
imul
shl
fstpt
inc
nop
mov
inc
dec
adc
xor
jge
popf
pop
je
rclb
push
xchg
mov
out
lds
cmp
inc
pop
cmp
loope
jb
dec
cmpsb
repz
stc
mov
insl
lret
cli
cmc
jl
cli
in
sub
pop
daa
adc
movl
dec
ret
cmp
and
popa
inc
lods
and
sarb
lods
fisttps
aas
ss
daa
add
dec
stc
int
mov
jns
or
lock
je
sub
dec
mov
lock
nop
jmp
negb
push
repz
in
inc
sub
enter
shl
mov
sti
lods
out
test
push
push
inc
sbb
sbb
push
mov
dec
imulb
sbb
xchg
mov
cmpsl
and
lds
or
pushf
sub
fmuls
mov
sbb
jg
mov
test
pushf
cmc
sub
stos
ljmp
add
stos
jle
and
je
push
xchg
addr16
sbb
sbb
ds
jmp
mov
xor
nop
and
mov
push
das
fmul
xor
mov
cmp
xor
stos
mov
pushf
jae
push
adc
xchg
out
insb
mov
inc
jne
rcl
push
dec
cmpsl
into
and
nop
cmp
push
pop
test
ss
push
sub
inc
xchg
lods
cmp
xchg
dec
and
cmpsl
subl
or
xchg
arpl
jbe
subb
xchg
jb
pop
dec
stos
or
or
in
mov
lods
lcall
and
in
js
and
push
add
in
sbb
ret
push
test
mov
in
dec
fbstp
cmp
adc
pop
add
lea
cmpsl
in
ret
or
mov
cmpsb
pop
mov
and
add
pop
fwait
lods
cmp
das
mov
lods
popa
sbbl
dec
roll
or
xor
push
cmp
sub
ja
pop
in
xchg
jmp
test
stos
cmc
cmp
add
add
aam
mov
mov
sub
mov
aad
or
mov
push
pop
mov
sub
push
outsb
stos
aad
add
jp
bound
push
and
call
in
cmp
dec
mov
jl
leave
scas
aam
les
mov
mov
dec
mov
or
mov
in
push
pop
into
aad
ret
cmp
jge
sub
into
or
icebp
adc
or
xchg
sbb
and
jl
ret
sub
in
lcall
in
mov
mov
pop
cwtl
cli
daa
fistl
popf
pop
aad
mov
push
push
or
rorl
mov
cltd
ja
sbb
outsl
pop
rclb
addr16
xchg
test
xor
cmpb
incl
and
in
mov
sub
inc
ljmp
inc
repz
or
out
push
and
fadd
xchg
jge
bound
dec
andb
add
and
negl
adcl
les
nop
jno
jno
inc
jbe
pop
inc
lret
mov
and
arpl
cli
mov
dec
lock
xchg
or
xchg
jg
shlb
je
sub
cmpsl
xor
mull
nop
fdivrs
sub
mov
cld
or
xor
cs
mov
add
xchg
loop
sbb
fdivs
and
xor
stc
jns
jnp
cmp
sub
mov
lret
clc
test
jbe
stos
notl
mov
leave
cwtl
or
inc
push
in
pop
and
xchg
stos
sbbl
loop
std
push
push
lret
mov
sti
cmpl
movsb
in
xor
cs
gs
xchg
cs
dec
add
int3
xchg
rcll
in
xchg
push
mov
and
sbb
sub
movsl
fsub
pop
jno
pop
xor
sub
jge
bound
movsl
pop
pop
ljmp
arpl
cmpsb
xchg
icebp
std
das
fcoml
adc
and
pop
loopne
loop
shll
je
jne
fcoms
or
jo
pushl
lret
pop
pop
mov
mov
pusha
out
testb
jmp
or
out
movntps
xchg
push
and
aad
mov
stos
mov
rcll
cli
mov
jmp
addl
mov
jp
sbb
xor
repz
js
pop
gs
jmp
and
iret
lret
ljmp
stos
xor
lods
repnz
clc
in
jne
int3
xlat
sbb
loopne
xchg
call
lock
stc
push
loop
add
inc
push
inc
cmp
outsl
cltd
test
data16
push
das
cmp
jp
popa
iret
and
push
cli
frstor
dec
cmp
insl
cld
shll
mov
cmpl
cltd
sub
mov
inc
dec
monitor
dec
adc
inc
push
cmc
pop
push
arpl
adc
add
mov
lahf
add
lods
xlat
pop
outsl
or
cmp
xchg
ror
push
adc
outsl
pop
inc
xor
std
and
mov
xlat
xchg
add
call
sub
push
xchg
inc
es
fists
addl
std
xor
xchg
xor
imul
inc
jge
fdivrl
xchg
lahf
out
sbb
mov
xor
fs
rorl
lret
lock
xchg
ret
ljmp
leave
or
dec
in
sub
fidivrs
and
imul
mov
xchg
push
mov
mov
loop
int3
addr16
or
add
jno
in
int
and
jmp
imul
lahf
inc
cmp
pusha
push
jnp
jmp
pop
push
aam
rcr
jl
cwtl
adc
cwtl
xlat
sub
mov
pop
mov
cld
adcl
xorl
fsubrl
out
mov
push
test
adc
jns
jg
adc
sub
jg
mov
insl
das
lret
push
movl
mov
lods
dec
icebp
pop
aas
push
xor
mov
cmp
repnz
xchg
cmp
pop
iret
icebp
cld
sub
mov
flds
es
iret
inc
icebp
test
cmp
xacquire
jae
loopne
jae
mov
inc
btc
pop
fcmovnbe
lea
or
jns
shll
xchg
sub
pushf
adc
or
mov
andb
xor
popf
out
jecxz
xchg
cmp
xchg
insb
scas
jecxz
jne
pop
push
rol
cs
fstps
mov
inc
scas
outsl
and
cmpsb
out
mov
lretw
pop
inc
fscale
addr16
sub
in
repz
leave
pop
cli
pusha
jmp
lret
ja
ja
add
out
mov
sbb
add
data16
cs
fnstcw
or
hlt
jp
dec
jb
mov
inc
pushf
xor
out
mov
mov
fisttpl
mov
int
out
bound
sub
pop
nop
cld
fs
xchg
mov
fadd
pop
shrl
cmc
xlat
dec
andb
mov
test
fldl
dec
lods
push
das
test
cmpsl
pushf
push
dec
ljmp
jae
stos
or
icebp
xorl
and
mov
mov
mov
sti
data16
repz
dec
jmp
push
test
sub
nop
in
cmp
xor
mov
dec
xchg
dec
jb
mov
notb
or
mov
dec
cmp
xor
in
or
and
sti
cld
jno
lret
mov
sub
dec
jb
and
inc
pop
fidivrs
aam
push
push
mov
xor
int
call
popl
add
adc
xchg
inc
sub
imul
mov
inc
cmp
icebp
dec
xor
popa
push
pop
stos
lods
sbb
xchg
jge
sbb
sbb
xlat
cmpsb
insb
into
test
add
fidivs
stos
jne
jle
mov
ret
das
jb
stc
push
jb
mov
pushl
pop
fidivs
int3
enter
ret
popa
jbe
cmc
jae
adc
inc
push
inc
cmc
push
inc
lret
ficoml
fdivl
xchg
repnz
sub
sbb
and
rolb
mov
jp
testl
jne
mov
cmp
push
or
mov
ds
lret
jecxz
jae
call
fidivrs
insl
dec
xor
out
add
push
movsb
inc
rcll
adc
ret
or
jbe
nop
test
mov
inc
sub
or
xor
push
pushf
sbb
test
pop
pushf
cmp
xor
mov
push
insl
data16
mov
mov
lods
sbb
mov
push
dec
mov
mov
movsl
sub
sbb
xor
adc
sbbb
rorb
into
xor
call
mov
dec
and
inc
jne
xchg
xchg
in
mov
or
pop
pop
fucom
ds
inc
xor
jnp
or
cmpsl
ret
sub
jge
xchg
mov
std
lds
dec
mov
mov
xchg
icebp
scas
inc
jbe
and
mov
mov
fsubs
push
insb
pushl
pop
and
sbb
icebp
xchg
ret
pop
fldenv
clc
mov
shrl
or
es
push
xor
movsb
xchg
pop
sbbb
icebp
cmp
or
add
mov
xchg
sarb
xchg
jmp
inc
call
mov
into
ja
mov
or
pop
inc
xor
das
sub
imul
xchg
sti
popa
arpl
jnp
sbb
and
push
mov
cli
mov
mov
sahf
hlt
std
dec
sub
pop
aam
nop
or
leave
xchg
shlb
and
daa
mov
or
jns
cld
rclb
xchg
scas
pop
aam
sbbb
fdiv
sub
jp
jmp
cmp
test
ja
xlat
cltd
dec
pop
adc
push
ja
fiaddl
ret
stos
sahf
mov
mov
or
clc
xchg
rcll
ss
xchg
and
xchg
loope
fldt
test
add
cmp
addr16
iret
xchg
fistpll
xchg
jns
add
ret
jge
and
les
and
aas
sarl
pop
jge
sub
imul
push
hlt
jl
mov
or
cmpl
mov
mov
pop
cmp
mov
xchg
cmp
mov
data16
into
pop
shl
fisubs
xchg
push
and
hlt
inc
push
jge
sbb
leave
js
mov
je
imul
in
movsl
or
and
and
subl
mov
insb
vmwrite
sbb
cltd
iret
addl
jmp
daa
icebp
or
stos
jle
pop
jp
sbb
add
inc
dec
cltd
sbb
cwtl
xchg
push
negl
lahf
xchg
sub
mov
jmp
cmp
xchg
mov
loope
xor
jnp
pop
adc
xchg
aas
mov
dec
xchg
jns
outsb
cmp
cs
jge
or
lret
push
cmp
lahf
dec
jmp
fnstcw
dec
inc
int3
aad
imul
or
data16
dec
out
mov
les
cmp
cmp
mov
fsts
sub
lea
xchg
sahf
arpl
pop
mov
inc
add
dec
insb
jnp
int3
inc
push
rcrl
dec
adc
push
jns
imul
sti
jnp
lret
dec
int3
dec
pusha
sub
repz
fidivrs
dec
mov
js
call
jp
lock
into
cmc
stc
mov
dec
xchg
xchg
sbb
and
dec
cmpsb
push
mov
outsb
lcall
dec
jb
popf
adc
adc
add
sbb
dec
xor
das
and
adc
addb
jle
sub
dec
repz
std
pop
sbb
shll
test
sub
and
and
nop
cs
push
jo
jo
sahf
sub
adc
hlt
stos
mov
cld
jmp
iret
mull
cld
ret
jle
add
or
adc
popa
loope
cmp
fsts
leave
push
enter
push
es
jmp
adc
outsl
inc
jp
push
jmp
fcmovb
jae
aas
cmc
pop
test
ret
push
xor
cld
mov
lcall
lret
sub
bound
ss
out
or
lods
cwtl
xor
mov
or
in
jo
or
jmp
movsl
test
xchg
leave
xor
cmp
xchg
mov
cmpsl
inc
leave
outsb
sbb
push
mov
and
loopne
jmp
fstp
xchg
sbb
aaa
xorb
and
les
dec
in
xor
sbb
push
pop
cmp
ds
mov
lods
mov
push
push
imul
jb
ljmp
test
popa
add
stc
and
movsb
adc
jge
push
jno
call
cld
or
mov
or
xchg
mov
xor
jge
ljmp
aad
pop
push
repz
adc
mov
push
dec
std
xchg
cmp
inc
jge
scas
push
xchg
popf
mov
cmp
and
push
adc
data16
int
aas
dec
inc
or
ds
xchg
and
loope
jo
or
mov
mov
shl
jecxz
dec
cwtl
sbb
jmp
and
loopne
js
jmp
inc
movl
pop
fistpll
ds
pop
mov
sahf
imul
fstl
or
or
mov
push
mov
pop
xlat
sbb
mov
xor
lock
mov
sub
jae
shrb
cmp
mov
mov
mov
jns,pn
xchg
push
push
outsb
lahf
xchg
dec
cs
aad
jne
je
push
ss
jae,pt
lret
mov
mov
lcall
fsubp
jp
jo
xchg
push
stc
call
mov
jmp
repnz
aas
xor
xor
mov
insb
sub
mov
mov
fisttpll
sub
add
adc
mov
mov
dec
pusha
addr16
and
rcrb
mov
push
sub
and
mov
dec
shrb
or
sahf
pop
xchg
mov
xor
lea
aam
or
ss
mov
call
lods
add
cmp
or
in
dec
push
pop
sbb
rcrl
fcompl
mov
pop
dec
jmp
stc
cmc
cltd
push
sbb
cs
or
out
insl
subb
fldcw
into
out
mov
and
add
int
add
xchg
cmp
or
stc
pusha
out
jg
test
add
or
push
mov
sbb
insb
and
fisttps
out
stos
cmp
fwait
mov
push
push
xchg
lret
scas
jae
adc
sbb
je
pusha
sbb
aas
xor
jo
stos
aam
scas
sbb
pop
dec
pop
inc
shrb
lret
call
jp
or
cmpsl
xor
test
lahf
inc
cwtl
aad
inc
pop
xchg
jl
fcomps
roll
mov
mov
inc
scas
cmp
sub
cld
imul
loop
push
jg
mov
daa
mov
arpl
sbb
outsl
adc
mov
test
lret
sub
sub
pop
pop
xchg
push
add
out
subb
add
cmp
in
mov
outsb
movsb
or
sub
lds
inc
test
out
push
test
out
mov
inc
push
inc
sub
sbb
nop
shl
rcl
mov
xlat
adc
lods
xchg
test
ljmp
stos
mov
dec
inc
mov
jge
mov
out
xor
outsb
mov
dec
mov
jno
push
out
mov
sbb
sub
fmul
and
mov
outsl
xchg
add
negb
mov
push
mov
and
inc
or
ret
push
push
adc
adc
outsl
add
sub
push
popa
or
dec
push
mov
pop
icebp
test
or
shrb
imul
stc
mov
leave
fs
shrl
jne
ds
bound
sub
fidivs
icebp
in
call
sbb
and
adc
ljmp
cmpsl
push
dec
jno
ds
rcrb
adc
mov
repz
mov
sub
add
and
sbb
sbb
lcall
dec
imul
cmpl
sub
mov
fidivrl
inc
cld
je
leave
std
mov
in
shr
test
pop
mov
dec
xor
cmpsb
mov
lea
xor
inc
dec
in
add
cmp
cmpsb
into
hlt
movsl
jno
dec
add
dec
lds
cmp
shl
fs
call
xchg
repnz
int
xlat
cmpsl
clc
add
inc
hlt
lods
test
or
gs
ljmp
scas
jno
dec
adc
inc
inc
je
sub
and
push
pop
pop
and
dec
out
in
xchg
pop
jae
sti
sub
in
sarb
lods
outsl
inc
fs
cmpl
xor
fidivl
lea
xor
jae
pushl
pop
int
xchg
fs
dec
ss
sub
push
dec
repnz
push
sbb
adc
or
lahf
insl
jle
in
jmp
push
in
fstpl
or
inc
push
in
shll
mov
mov
pusha
jp
and
int3
and
mov
aas
push
je
push
add
insl
adc
test
aam
in
sub
hlt
pop
jg
loop
repnz
lea
push
mov
cmp
or
enter
callw
les
out
scas
fnstenv
dec
jmp
cmp
clc
jo
add
in
or
outsl
mov
pop
aaa
xchg
inc
rol
xor
cmpsb
sbb
pop
test
add
ret
dec
mov
sbb
repnz
sbb
sub
push
xchg
adc
sahf
out
fisttps
sbbl
sbb
xor
arpl
pushf
pop
ret
call
jo
xlat
xor
mov
lods
xor
orb
jl
andb
xchg
or
and
xchg
xchg
outsl
mov
inc
ja
in
xchg
ret
mov
data16
cli
ds
imul
xor
pop
pop
add
sbb
xchg
popa
scas
cmpb
repnz
and
fwait
pop
dec
test
jo
into
mov
xchg
push
add
mov
test
imul
jbe
sbb
mov
xchg
int
arpl
push
fwait
les
add
or
dec
mov
mov
test
aam
adc
inc
sub
mov
fsubrl
push
in
or
add
mov
lea
aam
mov
push
enter
aad
adc
or
xchg
lods
cmp
mov
popf
incb
loopne
ficoms
fucom
push
xchg
mov
sub
aam
not
imul
movsl
cld
add
cmp
jge
ret
stos
in
test
fisttps
inc
jl
scas
xchg
jbe
in
sub
sub
jae
mov
dec
pop
pop
lret
jo
loop
dec
cmp
sbb
jae
dec
fwait
jne
mov
dec
je
popf
lcall
scas
add
pop
sbb
push
dec
mov
leave
pushf
mov
mov
push
loope
cmp
pushl
xchg
mov
out
sub
xchg
jne
outsb
out
scas
pop
inc
or
jp,pt
dec
push
inc
mov
mov
sbb
xchg
or
mov
mov
mov
cmp
sahf
pop
loop
lea
hlt
cltd
or
push
dec
sbb
cmp
mov
scas
xchg
xchg
jge
test
pop
fdivrs
jmp
push
sti
mov
pop
cld
fistpl
xchg
sbb
stos
mov
leave
mov
daa
or
je
frstor
lock
mov
inc
pop
xor
mov
cmp
cld
mov
imul
add
sub
pop
test
sub
mov
jle
and
or
add
lahf
stos
mov
cmp
lods
pop
xchg
dec
push
push
mov
pop
sub
test
dec
sub
rorb
xor
std
aas
xchg
filds
mov
loopne
clc
cmpsl
iret
push
cmpl
hlt
pushf
push
adc
pusha
lock
hlt
add
add
nop
xor
mov
js
pop
in
mov
or
ds
lods
adc
mov
hlt
xchg
loope
call
repz
ljmp
sub
cmp
mov
frstor
out
lea
lds
fnstsw
imul
popa
in
push
push
and
sti
and
inc
cmp
js
xor
hlt
cld
jne
dec
or
jno
sub
sub
sbbl
imul
shll
cmpsb
imul
aas
xchg
xor
inc
dec
adc
cmpsb
repnz
cmp
sub
shlb
hlt
or
jl
andl
mov
pop
in
xor
mov
cmc
add
or
out
cmpl
clc
pop
daa
rcrb
out
add
sub
sbb
jo
fmull
and
in
or
sbb
dec
lods
mov
std
data16
xchg
enter
jmp
dec
ss
mov
enter
ret
shl
es
mov
imul
adcl
lods
jae
mov
mov
dec
pop
in
push
push
nop
dec
xchg
daa
and
out
das
xchg
adc
mov
mov
int3
outsl
inc
pop
movsb
lea
dec
jnp
test
mov
dec
mov
inc
lret
mov
xchg
push
xorb
je
mov
out
pop
adc
xor
dec
push
push
mov
call
add
gs
mov
xchg
addr16
or
fnsave
js
jge
mov
inc
mov
push
mov
lcall
xlat
jnp
sbb
lds
aad
inc
xchg
pop
aam
aaa
pop
xor
push
mov
stos
popf
sbb
repz
or
scas
xchg
aad
mov
lds
lret
mov
ja
aaa
mov
lds
cmp
and
cmp
pop
pop
scas
stc
jecxz
cmp
sub
xchg
dec
leave
sub
xchg
sub
ret
pop
int
lds
rcpps
sti
dec
or
popa
dec
outsb
push
bound
gs
test
jnp
inc
sub
adc
hlt
push
ljmp
mov
sub
jae
pop
cmpsl
jb
or
xchg
pop
sub
icebp
xchg
arpl
xchg
sbb
repz
add
clc
out
imul
movsl
hlt
mov
sahf
outsb
stos
in
xchg
lret
add
jmp
aad
jb
sub
cmp
inc
jae
add
das
push
movb
cmc
sub
sub
outsb
mov
push
rcl
lea
pop
std
int
pop
gs
sbb
cmp
es
lods
or
dec
xlat
dec
xchg
push
jns
mov
mov
mov
add
add
jg
fwait
mov
lcall
xchg
dec
cmpsb
jge
out
cwtl
mov
fsubs
xchg
mov
into
pop
out
push
imul
adc
fcomp
xor
leave
xlat
negl
outsb
xchg
in
jne
sarb
add
push
loop
mov
mov
mov
mov
pop
pop
stos
fsubs
push
jnp
int3
push
xchg
mov
sti
aaa
cmp
je
adc
xor
xchg
std
mov
fwait
sarb
xor
mov
or
fsub
lods
pushf
call
sbb
mov
xchg
cld
and
or
mov
and
popf
pushf
aad
push
and
and
lahf
jl
pop
add
in
jnp
push
jb
sub
data16
aaa
addr16
cmpsb
dec
sbb
mov
push
ja
cmc
inc
dec
inc
jb
sbb
jno
in
into
cltd
dec
lea
cld
mov
repnz
xor
adc
push
mov
iret
xchg
sub
sub
jle
xchg
test
xchg
jae
iret
ljmp
data16
jecxz
mov
sbb
jle
iret
push
in
adc
hlt
push
sbb
sub
or
adc
push
sub
loop
fs
test
call
mov
or
int3
jnp
es
mov
mov
inc
andl
cmp
cltd
mov
je
testb
in
out
jecxz
pop
sahf
mov
and
xchg
mov
repz
xchg
jne
add
aam
inc
cmpsb
xchg
in
cwtl
sbb
lahf
jno
mov
in
out
aaa
push
call
mov
insl
jns
es
jecxz
xor
add
call
test
pop
adc
cwtl
adc
sub
ret
add
xor
popa
add
sbb
imul
mov
mov
aad
stos
pop
xor
xor
icebp
stc
or
gs
cld
jae
push
jne
pop
dec
xchg
xchg
addr16
lcall
mov
dec
fmuls
push
and
movsl
mov
or
dec
in
dec
mov
int
js
mov
mov
shlb
idivl
mov
and
dec
popa
mov
pop
xor
jo
pusha
lret
scas
pop
pop
mov
dec
push
mov
mov
mov
sub
cmp
fnstcw
out
into
xlat
cmc
pusha
popf
jbe
imul
int
pop
push
test
xor
adc
rolb
cmpsl
push
mov
int
cmpsl
and
scas
mov
stos
cmpsl
fadds
ret
ljmp
mov
jo
in
push
ljmp
lahf
push
test
lods
cmc
out
sbb
lea
sahf
cmp
pop
adc
sarb
mov
frstor
stos
pop
dec
adcl
out
ds
lods
pop
iret
arpl
sub
hlt
test
addr16
out
cmp
std
in
imul
repnz
push
inc
dec
adc
int
mov
mov
cmpsb
mov
in
mov
sub
rol
lret
mov
icebp
and
xor
jmp
sbb
lret
in
or
ror
out
pop
inc
sub
xor
test
or
sbb
mov
add
fisttps
mov
inc
and
add
jns
insl
stc
out
scas
push
xchg
push
pop
ds
loopne
js
mov
add
fmull
pop
dec
ret
loop
sub
mov
test
jns
aad
into
aaa
addr16
xchg
outsl
mov
test
test
sbb
stc
fxtract
pop
cmc
and
filds
sbb
sbb
in
sub
or
aam
dec
mov
inc
mov
test
push
xchg
rcl
in
dec
stc
jmp
cli
out
and
shrl
pop
arpl
xchg
repz
in
pop
rcr
cmp
and
gs
adc
and
adc
daa
inc
xor
mov
cld
aaa
xor
and
mov
fisttps
and
dec
adc
cmp
inc
jae
dec
nop
lahf
mov
loope
jno
inc
pop
xor
or
push
xchg
ficoml
jo
jmp
insb
rcll
sbb
lcall
fstps
test
jg
cmp
push
aaa
and
test
arpl
cs
out
orb
outsb
aas
or
xchg
mov
in
push
xor
jne
outsb
jbe
lock
jge
pushf
mov
push
lret
pushf
dec
aaa
mov
adcb
inc
leave
jns
clc
dec
stos
fcoms
sub
xchg
sarb
and
mov
mov
sub
lahf
cs
lea
andl
xchg
ja
out
pop
mov
mov
mov
xchg
push
iret
lret
xchg
push
add
nop
and
cmp
push
xchg
mov
fcoml
stos
lds
cmp
iret
je
outsb
ficompl
pushf
mov
cmp
subl
xchg
jp
push
adc
pushl
fucom
push
in
rolb
movl
pop
in
int
or
pop
aad
push
scas
mov
test
push
adc
inc
repnz
fsts
adc
retw
xchg
add
sti
adc
ss
add
cwtl
cwtl
aam
cwtl
cmp
out
mov
movsl
pop
xchg
scas
mov
mov
mov
pop
xchg
mov
lret
ja
mov
in
xor
bound
jg
ret
xor
xchg
aad
js
mov
push
and
cmp
call
push
lea
jb
shl
sub
imul
jmp
or
mov
mov
mov
aad
or
nop
and
daa
cmpsl
inc
cli
nop
fists
xchg
mov
dec
mov
and
add
aas
arpl
adc
adc
inc
rcl
data16
push
cmpb
push
fs
xchg
jmp
mov
adc
xchg
jmp
cmpsl
jnp
ret
mov
enter
xor
jg
jb
xchg
pop
jns
xor
pop
stos
imul
fwait
das
jl
ds
or
jg
xor
mov
add
jge
lcall
cmp
xor
inc
xor
lret
push
sub
mov
sbb
mov
and
add
jle
inc
lahf
daa
fstps
cmp
push
jbe,pn
add
scas
dec
dec
inc
push
lds
xor
pop
pop
inc
dec
xlat
iret
loopne
xchg
sub
test
nop
add
gs
push
pop
lahf
int3
jmp
inc
sbb
movb
pop
fs
loope
daa
out
inc
lret
imul
xor
stos
mov
ret
in
divl
xchg
ret
sub
lret
jecxz
sub
pop
movsl
mov
push
jae
lds
movsb
push
jge
jmp
push
mov
push
inc
jns
mov
push
xchg
jo
xchg
xor
scas
push
test
mov
and
adc
xchg
or
cld
add
add
cmp
cmpsb
adc
jo
negl
sbb
insb
pop
int3
hlt
scas
clc
sub
pop
jno
mov
movsl
dec
push
push
push
xor
loope
stos
mov
imul
fucomi
xor
xor
mov
fcoml
sbb
jg
add
xchg
insl
int
xor
lret
idivb
js
dec
stc
mov
popf
mov
movsb
imul
in
xor
dec
mov
addr16
adc
dec
subl
mov
xor
jnp
repz
mov
pusha
into
sahf
push
es
popa
lds
test
mov
aaa
mov
or
adc
jecxz
xchg
sbbl
stos
cltd
cltd
test
rol
xor
mov
adc
jae
mov
pop
add
xchg
xor
add
sub
push
add
fistpl
int3
mov
stos
adc
mov
adc
je
fdivp
mov
mov
xor
jae
add
sti
movsb
inc
sub
push
xchg
in
push
add
jg
loope
nop
std
test
add
xchg
mov
xchg
pop
fdivl
xchg
or
jnp
ds
adc
push
loope
mov
xchg
mov
dec
in
es
outsl
pop
mov
push
xorb
push
and
xchg
repnz
or
pop
cmp
add
loopne
ljmp
cmp
pop
aas
sbb
mov
xor
inc
ret
xchg
imul
pop
dec
in
lret
adc
adc
inc
dec
xchg
dec
mov
lcall
or
adc
push
out
shl
scas
jb
outsl
stos
dec
and
mov
dec
mov
jecxz
test
push
in
cmpsl
enter
cmp
and
add
mov
xor
adc
mov
jbe
ss
mov
repz
ds
xor
mov
adc
mov
and
jbe
sahf
cmpsl
cwtl
dec
dec
lahf
mov
pop
and
pop
mov
add
stos
or
imul
fsubl
dec
mov
inc
adc
pop
pop
mov
and
adc
mov
pop
cmp
pop
or
in
repnz
inc
repz
popf
int
push
lods
mov
enter
inc
outsb
lea
movsb
and
pop
es
rorl
push
jg
popa
les
adc
mov
mov
ds
data16
push
inc
mov
and
cld
rorb
dec
xchg
add
ror
scas
sub
lcall
or
push
je
xor
lret
popf
aam
shlb
sbb
testl
in
dec
sahf
dec
xor
fwait
jle
xchg
inc
test
cwtl
daa
adc
dec
js
push
push
outsl
movsl
stos
pop
mov
mov
inc
dec
repnz
jne
les
jge
push
add
leave
into
bound
out
rol
and
das
mov
pop
mov
std
push
pop
int
add
ret
je
mov
ljmp
imul
lods
pop
ja
jle
inc
mov
add
lahf
je
cmpsl
jns
jne
cmp
pop
cmp
dec
pop
push
mov
mov
mov
dec
mov
out
jbe
dec
out
sbb
sub
sub
outsl
sub
sbb
push
mov
shlb
xchg
mov
stos
les
cmp
push
faddp
outsb
fsts
imul
out
ja
mov
xchg
add
stc
or
xchg
stc
adc
lock
mov
movsl
lods
mov
insl
sbb
add
and
mov
hlt
jnp
sti
sbb
adc
das
mov
fcomip
rcrl
hlt
dec
or
std
insb
addr16
or
cmp
pop
push
push
jecxz
cmp
iret
shll
sub
and
xchg
scas
push
gs
add
nop
jg
popf
cmc
xchg
iret
imull
add
jg
mov
dec
in
and
fcomps
mov
les
mov
xchg
fldcw
inc
xchg
push
push
mov
outsl
lret
aam
rorb
xor
jl
dec
push
dec
pop
pop
xchg
arpl
addr16
push
cld
iret
enter
pushf
mov
dec
sti
cmp
scas
adcl
faddl
cmpsb
xor
jne
push
in
jmp
lock
out
cmp
add
cld
xchg
nop
mov
shlb
mov
cmpsl
hlt
insl
sbb
daa
adc
xchg
rcrb
mov
insb
mov
pop
xor
jg
test
scas
sbb
jecxz
gs
das
mov
push
aam
mov
mov
stc
sub
vphadddq
fldt
aad
aam
fidivrl
jb
jle
rorb
movsb
inc
sub
and
ficoml
mov
cmp
aaa
push
lahf
cmpsb
cmp
loope
dec
jo
ret
lahf
jne
pusha
xor
mul
add
add
adc
mov
sub
int
xor
fisttpll
clc
ja
mov
js
sbb
mov
jbe
je
fsubl
lock
test
fmul
sbb
cmpsl
xchg
jns
sahf
ficomps
je
xorb
out
push
inc
inc
scas
jl
incl
lret
inc
pop
adc
mov
les
mov
push
sahf
shr
cltd
mov
push
enter
pop
popa
imul
lods
pop
jb
xchg
mov
dec
cmc
test
outsl
add
cwtl
lahf
mov
pusha
jl
popf
pop
pushf
cmc
ljmp
mov
or
inc
pop
or
imul
out
mov
pusha
cmp
sub
rorl
dec
jmp
pop
dec
mov
dec
push
leave
mov
popl
jne
inc
es
xchg
fwait
mov
dec
out
loop
cld
mov
aam
add
inc
shll
stos
cmpsl
fs
hlt
lcall
pop
xchg
add
pop
pop
inc
push
xor
sbb
lods
lds
ret
addr16
lret
sarl
inc
jae
cmp
and
push
roll
push
int
mov
jo
and
dec
and
clc
xchg
test
mov
movl
cld
insb
popa
orl
outsb
mov
popa
inc
mov
lahf
mov
and
pop
rcl
add
icebp
mov
cmp
jge
mov
cmp
xor
mov
pushf
mov
xlat
leave
xchg
add
mov
push
adc
push
mov
xchg
fdivrs
movsb
cld
mov
in
shll
ret
xchg
int
dec
push
mov
or
mov
jb
push
push
in
shl
xor
mov
stos
jb
jmp
lock
pushf
lods
ret
dec
loope
adc
mov
shl
pop
sub
inc
push
xchg
or
pop
outsl
push
or
daa
fbstp
cmp
std
push
or
lcall
mov
test
sub
cmc
insb
mov
daa
jns
nop
jp
ret
inc
lret
cmp
dec
and
mov
cmp
ja
or
mov
jmp
iret
out
addr16
mov
lds
imul
stc
and
mov
pop
fstpl
orl
mov
in
testl
ret
movsb
fisubrs
xchg
mov
cmp
js
mov
test
aaa
fucomi
jmp
jbe
or
stos
mov
movsb
fidivrs
sti
dec
imul
shrl
sub
cmp
push
pop
and
push
inc
mov
mov
cmp
inc
cmp
lds
mov
lcall
cmp
mov
in
ret
and
outsl
sbb
in
inc
add
test
pop
outsl
cs
inc
jne
jp
ss
cmpl
xchg
jb
cmp
sbb
ror
push
jp
and
xchg
pop
data16
repnz
notb
jecxz
int3
pop
mov
fistpl
bound
dec
push
xchg
sbb
dec
ucomiss
mov
xchg
or
insl
shrb
testl
mov
add
lahf
add
jle
mov
fst
mov
dec
pop
imul
cmpsl
bound
and
xchg
push
cld
movl
fstpl
mov
push
leave
std
sub
adc
jecxz
jmp
fs
push
pushf
xlat
lods
xor
inc
clc
push
shll
pop
insl
cmp
xor
push
ds
mov
cs
insl
pop
sbb
imul
fldl
dec
out
or
int3
in
dec
push
lds
push
clc
mov
mov
sub
test
arpl
addr16
ds
subl
xor
cmp
adcb
inc
or
lock
lret
jns
call
cmc
push
fisttpll
mov
enter
hlt
xorl
jno
adc
sub
mov
popl
jne
iret
ret
daa
pushf
scas
ja
mov
lds
cmp
push
and
addr16
jmp
outsl
enter
ret
cmp
fs
out
out
ret
xchg
mov
push
icebp
add
dec
and
push
aad
jl
inc
jne
xor
cs
push
movl
xlat
leave
jecxz
int3
ret
mov
adc
ret
ljmp
scas
jb
aam
pop
pop
int3
sti
sbb
imul
and
mov
nop
jns
cs
repz
jo
sbb
test
sbbb
test
push
stc
adc
in
test
movsb
pusha
subb
cltd
push
ss
jb
scas
outsl
push
pop
test
lea
mov
aad
ret
inc
push
mov
jo
mov
and
lret
mov
push
mov
ljmp
int3
mov
sbb
push
adc
lea
loope
adc
dec
jecxz
idivb
mov
add
push
sbb
ds
movsl
fnsave
jae
lock
mov
xchg
out
add
vmread
js
out
sub
sub
xchg
or
cld
xchg
add
test
lret
lret
dec
dec
adc
jp
inc
arpl
jp
lods
sbb
cmc
into
addr16
inc
and
test
push
or
test
adc
adc
subl
imul
mov
push
push
pop
mov
mov
jge
mov
sub
sahf
cs
xchg
dec
aaa
xchg
xor
dec
sub
loope
push
gs
jecxz
add
divb
lret
iret
or
or
mov
in
cli
movsb
outsb
mov
nop
and
and
push
sub
lahf
sahf
out
mov
or
je
test
jmp
mov
dec
test
sub
insb
jmp
and
and
xchg
lds
xor
mov
mov
push
xor
aam
nop
in
dec
incb
dec
psrlw
cmp
orl
fs
add
mov
sbb
in
ffreep
add
xchg
jp
addr16
cli
mov
pop
sbb
push
and
mov
mov
pop
dec
out
sbb
jmp
shrl
int3
mov
loopne
out
mov
gs
test
sahf
popa
pop
mov
addb
xor
xchg
loop
fs
push
rolb
pop
inc
mov
cmp
jl
mov
dec
xlat
pop
pop
pop
cmp
outsb
pop
jb
mov
insb
das
cld
das
out
pushf
cld
mov
mov
rorl
adc
jmp
imul
cmpsb
jg
inc
mov
xor
add
jno
jne
push
gs
push
fcompl
mov
je
sub
out
mov
dec
sarb
lods
inc
dec
ss
jmp
mov
jecxz
pop
ficomps
xor
mov
add
lret
adc
cmp
or
xor
cmp
push
icebp
sbb
je
dec
dec
and
clc
ret
out
jo
push
dec
sti
lahf
add
stos
and
and
lods
sbb
out
jle
scas
les
inc
push
push
aaa
outsl
xchg
mov
adc
or
cmp
sahf
iret
push
loopne
xchg
hlt
repnz
test
mov
lret
push
fwait
stc
pop
adcb
mov
jae
lahf
fsts
adc
mov
jge
daa
sub
dec
cmc
ds
movsb
stos
sbb
clc
xchg
addr16
push
icebp
inc
and
lds
mov
stos
and
adc
imul
in
dec
mull
push
repnz
cld
aam
cmc
gs
pop
dec
flds
adc
xchg
popf
iret
inc
mov
push
mov
dec
mov
test
mov
jno
cmp
xchg
sub
pop
mov
daa
sub
pop
dec
adc
or
xchg
jg
jg
cs
and
adc
push
and
jp
cwtl
cmpsb
fcomps
repz
iret
fsubrs
lcall
add
mov
fwait
adc
cltd
shr
mov
mov
cmp
in
cltd
lret
cmp
test
xor
mov
mov
loopne
pop
or
xchg
push
pop
dec
add
mov
ret
ja
out
lea
adc
adc
jae
jle
mov
push
out
mov
and
push
xchg
jecxz
loope
adc
repz
or
shlb
rcl
lahf
sub
jp
fistpll
out
push
cmc
xor
lret
sbb
sub
push
test
push
adc
mov
mov
jb
mov
jo
xchg
decl
push
lss
stos
push
dec
add
xchg
jnp
aaa
push
out
pop
lods
insl
out
pop
or
jmp
out
mov
imul
aaa
movsl
pusha
add
fildl
dec
arpl
test
sbb
fisttpll
ja
push
in
adc
and
test
push
inc
mov
shll
gs
cmp
xchg
arpl
mov
sub
out
ds
fdivrs
dec
jl
cwtl
add
jb
inc
sub
sahf
and
outsl
lds
ret
and
cmc
mov
mov
hlt
or
ljmp
and
adcb
dec
mov
sbb
jno
out
jnp
hlt
es
jge
cmp
loopne
scas
cmpsl
pop
ljmp
jae
inc
xor
pushf
notb
xor
jbe
mov
fisttpll
or
data16
and
sbb
push
movsb
ret
xchg
dec
outsl
test
push
xor
or
adcl
xchg
and
inc
out
and
cmp
imul
mov
int3
push
mov
push
idivb
or
push
sub
icebp
pop
negl
cs
sbb
lret
pop
mov
cmc
fcos
cli
dec
lods
adc
and
out
mov
and
fcomip
movsb
stos
mov
outsb
scas
jecxz
cmp
xchg
add
out
jo
mov
pusha
dec
mov
daa
or
xor
pushf
mov
fisubl
shll
xor
xor
jl
cmc
lds
inc
lret
and
lods
aad
lahf
insl
jg
ret
out
sbb
jb
sbb
shll
repnz
add
jp
in
push
lcall
fmuls
adc
and
sub
iret
mov
inc
mov
test
cld
mov
or
cmc
popf
mov
rcrb
sti
rorb
enter
stos
dec
enter
pop
je
cmc
xchg
jg
and
mov
mov
pusha
enter
or
push
push
es
popf
push
bound
mov
not
xor
mov
cmpsb
jnp
test
fstps
mov
pop
xor
lods
sarb
out
mov
sbb
sub
lret
hlt
pop
shr
lcall
dec
push
fisubl
adc
ret
call
adc
out
pop
cmp
mov
cmpsl
cwtl
icebp
or
inc
add
add
mov
imul
repnz
fld
xor
xor
and
ja
fiaddl
push
fdivrs
aad
jg
xchg
sub
sarl
loopne
xor
push
movsb
mov
cmc
inc
xor
push
jl,pt
pop
push
movsb
pop
mov
or
mov
neg
repz
cmp
adc
insl
fsubrs
sub
dec
hlt
push
int
int3
addr16
add
sbb
mov
xor
dec
inc
or
test
cmp
loop
jge
imul
push
icebp
mov
jle
cmp
pop
out
dec
cli
inc
mov
outsb
faddp
movsb
fdivp
and
in
mov
fcoms
shrb
enter
stos
incb
sbb
popf
nop
pop
ja,pn
pop
leave
pop
daa
out
and
fst
xlat
mov
cld
mov
dec
jb
sbb
mov
jmp
rol
pop
pop
andb
lods
test
mov
mov
rcr
sbb
dec
xchg
fst
xchg
shlb
xchg
rorb
fstp
gs
adc
repnz
cmpsl
pop
sbb
mov
mov
xlat
jae
dec
test
jg
sbb
xor
add
sub
and
jp
les
imul
daa
in
or
xchg
pop
in
leave
out
ret
xchg
daa
test
clc
push
push
faddl
add
add
mov
cmp
dec
adcb
push
mov
sbb
sbb
dec
lock
jb
in
mov
push
jg
adc
fwait
sbb
ret
fstps
xchg
ja
pop
pop
sarl
push
push
push
into
je
jb
arpl
pushl
cmp
adc
shlb
pop
or
dec
loope
jmp
inc
dec
jb
mov
mov
out
loop
push
lea
pop
into
cmp
outsb
outsl
loopne
clc
adcb
sbb
aas
push
push
xlat
dec
jno
and
jg
push
out
stos
imull
in
pop
cmp
sbb
mov
int
and
mov
popf
jmp
and
pop
mov
jb
repz
hlt
pop
pop
or
mov
sbb
cwtl
out
dec
ds
repz
imul
adcb
hlt
mov
jbe
stos
ret
sub
subl
loope
stos
repz
pop
sub
inc
jno
inc
dec
mov
xchg
xor
loope
xchg
arpl
std
add
out
xchg
push
mov
test
inc
fs
xor
mov
pop
pop
loop
mov
mov
aad
push
add
mov
repz
sbb
into
addl
pop
fucomi
aas
dec
scas
pop
inc
pusha
js
orb
cmp
pushl
push
jmp
scas
adc
add
xchg
pop
insb
cmpl
dec
sub
pop
mov
jg
cmp
insl
in
jnp
pop
shll
or
cmp
ja
fbld
xchg
ja
inc
mov
pop
xchg
adc
mov
andb
pop
sbb
popa
or
js
aad
mov
shrb
pop
inc
adc
jno
pop
sub
pop
and
test
mov
testl
xchg
ret
push
cs
or
rcl
imul
jg
lcall
test
mov
push
xor
fisttps
mov
lock
fnstcw
lods
ja
lcall
add
in
pop
sahf
aad
push
inc
inc
dec
jns
xor
mov
inc
cld
cmp
call
jl
sbb
add
push
cmpsb
push
pop
out
or
sbb
adc
sbb
adc
push
mov
insb
xchg
xor
outsl
push
lods
sbbb
jl
or
addb
mov
data16
inc
subl
fdivs
inc
pextrw
cmp
mov
and
xlat
cmp
mov
andl
imul
aad
add
loope
cmp
das
jne
pop
addr16
mov
mov
mov
aas
cltd
aam
lret
dec
sbb
mov
mov
mov
ds
out
popf
xor
or
stos
xor
stos
inc
xchg
adc
and
shlb
dec
push
and
mov
out
in
data16
mov
cltd
aad
cltd
push
sbbl
pop
jae
jecxz
or
out
mov
out
xlat
pop
push
mov
les
adc
dec
or
subl
add
sbbl
adc
lret
xchg
xchg
frstor
mov
inc
or
xor
out
aaa
stos
fwait
mov
pop
jo
add
movsl
in
push
push
faddl
push
inc
rorl
fstpt
loop
lds
mov
lret
fldl
jno
repz
fisubl
dec
push
into
add
test
jo
or
xchg
mov
mov
inc
push
cwtl
lea
add
in
jg
in
shll
nop
dec
lods
mov
imul
adc
inc
enter
in
inc
lret
dec
mov
pop
and
cwtl
jne
sbb
xor
dec
mov
xor
inc
or
jge
mulb
insb
repnz
or
loop
in
jns
dec
adc
sub
shrd
cmp
test
mov
inc
adc
xchg
jae
sbb
push
pop
dec
pushf
push
inc
push
mov
iret
dec
das
pusha
enter
test
and
mov
nop
lock
inc
out
imul
pop
push
inc
jnp
jno
adc
cld
xor
mov
mov
inc
xchg
outsl
mov
sbb
std
inc
jecxz
xor
cmp
or
js
add
sbb
mov
xor
dec
push
and
push
stos
mov
adc
js
xchg
pop
cli
xchg
stos
ret
push
stos
push
popa
fmulp
jl
dec
in
inc
sub
lods
mov
hlt
jg
scas
pop
cltd
nop
out
mov
and
jne
push
pop
dec
jb
pop
pop
jno
mov
pop
imul
mov
loop
leave
xor
fistl
jns
xchg
mov
stc
movsb
mov
ret
jge
push
test
loope
stos
and
stos
aad
jp
cwtl
ss
add
rolb
mov
xor
mov
pop
adc
and
mov
and
jge
push
pushf
scas
subl
mov
jl
insb
push
sub
nop
adc
cmp
cmp
test
push
mov
xchg
cmp
sub
mov
test
imul
mov
sti
je
je
mov
adc
lret
popf
cltd
into
jbe
cmpsl
jge
add
movsl
fs
rcrb
mov
imul
sarl
nop
jno
pop
cwtl
andb
cmc
dec
xor
jmp
push
mov
push
test
mov
dec
pop
mov
shl
loop
mov
jle
jno
sbb
enter
xchg
or
fldenv
iret
cld
cmp
sub
mov
push
rorl
pop
data16
int
lcall
fsubrs
jmp
outsb
mov
sbb
mov
cmp
xor
sarl
cmp
jl
adc
or
inc
loop
outsl
scas
push
shll
pushf
pop
pop
insl
imul
fidivrl
and
fdivs
insl
mov
nop
lock
jne
sub
repz
xor
rclb
pop
cmp
and
scas
arpl
jne
mov
test
mov
dec
push
fdivrl
push
cvtps2pi
mov
popa
clc
xchg
jecxz
and
call
lods
lret
mov
scas
mov
mull
mov
stos
push
mov
sbb
sub
add
enter
scas
xor
cmc
pop
pop
iret
xor
pop
xchg
stos
ljmp
xchg
mov
add
shrl
dec
test
pusha
inc
mov
movsb
insb
push
in
dec
cli
push
xlat
jno
pop
lahf
out
call
enter
sbb
out
cmp
clc
and
fs
add
shl
mov
and
or
loope,pn
push
pusha
mov
ds
outsb
dec
jo
test
xchg
decl
mov
adc
inc
aas
lcall
shll
lea
push
dec
rclb
mov
decl
testl
push
mov
cld
hlt
cmp
jo
in
xchg
mov
jnp
test
in
jmp
lods
loopw
sub
lret
cmovl
xlat
inc
fisubs
pushf
jge
mov
rolb
push
mov
xor
add
loop
outsb
nop
aaa
or
daa
stc
mov
hlt
iret
cmp
cwtl
inc
inc
mov
xchg
cmpsl
and
sbb
jnp
lahf
sbb
daa
fsts
cmpsb
pop
sub
add
sti
xchg
hlt
int
xchg
lea
sbb
mov
cmp
std
mov
mov
bound
shlb
mov
ljmp
aad
outsl
ffreep
pop
fwait
or
push
mov
xor
adc
pushf
pusha
jmp
shll
rcrb
shll
shr
cmpsl
jp
inc
or
sbb
push
dec
pop
inc
sub
add
cmp
stos
mov
push
xchg
dec
leave
jae,pt
adc
push
inc
scas
mov
insb
jp
lods
adc
loopne
push
sub
inc
jns
jae
or
push
adc
ljmp
jg
pop
enter
push
je
enter
cld
xor
add
xlat
int
xchg
mov
add
inc
mov
std
in
clc
fucomi
andl
jno
aas
popf
sbb
sub
mov
neg
mov
mov
xor
adc
mov
adc
shrl
mov
mov
fwait
loope
or
rorl
xor
xchg
xchg
aam
bound
xor
fmul
push
lret
into
daa
iret
cmp
pop
mov
mov
jmp
adc
xor
inc
test
xorb
lret
sub
pop
loopne
fstp
out
jns
popf
lods
nop
andb
xchg
jl
adc
cmc
pop
cwtl
test
xchg
ret
sub
in
insl
or
sbb
out
adcl
fmulp
iret
fucomi
jecxz
mov
sub
push
std
cmp
mov
rcrb
or
rorb
mov
mov
popa
dec
jmp
out
jecxz
add
shll
insl
jo
mov
ja
xchg
jbe
out
jno
pop
out
dec
dec
pop
pop
outsl
imul
ds
icebp
in
mov
cmp
scas
add
cmp
pop
mov
mov
stos
adc
sub
data16
outsb
mov
call
scas
cs
insl
mov
hlt
mov
xchg
xor
mov
dec
or
inc
cmp
push
int
insl
xor
clc
vmwrite
in
jnp
sbb
ret
sbb
out
aas
mov
out
dec
dec
sahf
pop
mov
sub
je
sbb
lahf
cmpsb
ds
mov
mov
pop
shrl
push
pop
add
dec
lahf
sub
dec
pop
dec
cmp
sbb
sbb
dec
pop
in
mov
cmp
mov
and
into
pop
push
mov
pop
ja
mov
mov
je
int
pop
jle
call
aas
dec
jbe
jno
cmp
adc
stos
dec
mov
cwtl
push
lds
cmpsl
jnp
in
cmp
addr16
mov
stc
rorb
inc
jbe
lret
mov
insb
pop
mov
je
xor
popa
popf
push
or
je
pop
push
cli
mov
or
jns,pt
sti
add
push
push
jge
insb
das
inc
daa
fcoms
loopne
fs
in
ljmp
push
sub
jg
outsb
cmc
mov
adc
mov
stos
jo
cmpsl
add
mov
or
mov
dec
lods
sub
or
ret
sbb
jl
jecxz
cmp
outsb
sbb
js
out
repnz
mov
cmc
ret
mov
add
push
push
lods
repnz
pop
pop
adc
mov
pop
jl
jb
cs
roll
xchg
push
arpl
xchg
test
jb
jp
imul
and
dec
lret
data16
lcall
cmp
jmp
push
test
push
rolb
jb
sbb
rorb
jmp
lods
cmp
mov
xchg
cmp
inc
jg
movsb
mov
daa
les
push
daa
push
int
int3
pop
repz
jl
imul
mov
std
sarb
cmp
dec
ljmp
int3
xchg
adc
mov
xchg
add
fsub
push
hlt
leave
scas
fcompl
sbb
rclb
jno
out
jns
adc
lods
mov
sarb
sub
fisubl
fs
xor
sbb
pop
push
arpl
sub
int
ret
fdivrl
gs
mov
ret
push
or
jecxz
dec
pop
dec
stos
mov
ret
nop
loop
push
das
and
adc
inc
jmp
lcall
push
add
fists
test
adc
test
ss
jbe
test
jns
push
mov
scas
xor
movsb
dec
imul
pusha
push
shrb
sub
subl
lret
dec
cmp
mov
mov
out
std
or
and
call
cmc
adc
lods
mov
inc
sub
cmc
pushf
fisubl
cs
fisubs
pushf
inc
xor
fadds
ss
sub
mov
ficoms
inc
xor
imul
movsb
jle
nop
sbb
gs
mov
lods
xlat
test
popf
shll
aad
sbb
push
inc
js
rolb
mov
lock
push
idivl
pop
or
rclb
xor
sbb
outsb
fistpll
je
sbb
sbb
adc
mov
shlb
fdivs
lcall
int3
pop
or
xor
jns
psllq
bswap
sub
lods
and
mov
clc
or
sbbb
arpl
sbb
mov
pop
repz
test
imul
jne
js
outsl
mov
fnstsw
mov
daa
rol
push
pop
cmpsb
leave
mov
sbb
push
insl
pushf
push
adc
in
add
fisttpl
add
addb
mov
filds
in
inc
ret
data16
inc
jecxz
add
push
fldl
repnz
outsb
stos
sbb
add
lock
out
stos
repz
lock
pop
testb
addr16
push
imul
shl
les
popf
pusha
adc
jo
aaa
adc
adc
mov
orl
std
sbb
shr
add
outsl
ret
fsub
fnstenv
sbb
mov
add
xchg
stc
jg
cltd
aad
sub
and
in
rclb
lods
ss
sub
js
and
mov
loope
xchg
jl
or
fdiv
push
dec
push
shlb
dec
je
xchg
jae
mov
test
fs
sti
stc
data16
sbb
inc
mov
lea
wrmsr
add
inc
aam
sbb
pusha
clc
outsl
jle
mov
je
mov
pushf
inc
rorl
pop
out
ret
jl
idiv
xchg
or
imul
cmpsb
incl
loope
lcall
mov
in
inc
pop
scas
cmc
inc
repz
xchg
orb
inc
bound
stos
cmpsb
pusha
mov
push
jmp
sbb
into
or
fdivrs
int3
xchg
cmpsb
or
sub
mov
sti
popf
xchg
dec
mov
jo
push
pop
mov
sbb
adc
lds
inc
cwtl
sub
aam
pop
lcall
shll
stos
inc
lret
ret
fadd
xchg
loop
sub
jne
cmp
adc
loopne
scas
add
sbb
js
ds
test
or
dec
xlat
stos
lods
pop
iret
mov
rorl
cwtl
sub
push
fcomi
sbb
decl
les
push
das
jnp
sbb
test
mov
sub
pop
mov
mov
sbb
xchg
outsb
outsb
insb
in
inc
or
jbe
mov
loopnew
add
jmp
pop
fldl
inc
ds
ret
jnp
daa
jmp
mov
adc
cmpsl
push
sbb
cmpsl
fwait
int
or
lods
imul
push
test
js
int3
aam
cmc
sbb
sub
xchg
xorl
ds
cmc
dec
xor
jno
push
sbb
stos
dec
add
int3
sub
xlat
and
insb
pop
xchg
pop
out
arpl
mov
daa
add
dec
dec
or
pop
adc
incl
inc
nop
repnz
je
fsubr
leave
inc
inc
pop
mov
lea
imul
stos
testb
data16
push
in
dec
add
mov
xor
shr
stos
or
add
mov
sub
and
mov
fldl
jbe
outsl
out
jp
test
or
pop
mov
fimull
sub
frstor
sub
pop
pop
mov
stos
adc
les
repnz
jno
insl
or
inc
adc
movsl
mov
push
fwait
std
jne
aad
sarl
in
cmp
jmp
xor
xlat
leave
or
ja
aam
adc
mov
imulb
lods
neg
repz
inc
movb
dec
or
mov
xchg
iret
xchg
bound
out
daa
mov
xor
pop
mov
xchg
mov
cmp
xchg
fimull
cwtl
mov
imul
stos
dec
ret
mov
mov
mov
cmp
pop
sbb
xchg
pop
pop
imul
inc
jno
push
pushf
stos
pusha
inc
add
gs
dec
lds
add
das
out
stos
jl
xor
xchg
aad
cmovbe
push
cmp
mov
dec
mov
out
push
popa
out
popa
ljmp
add
mov
stos
cltd
add
xchg
adc
and
cmc
dec
repz
add
and
pop
mov
pop
jg
push
or
out
inc
in
test
shl
jno
cmp
sbb
pop
push
testl
cmpb
shll
pop
sub
jp
xlat
jbe
add
stos
popa
enter
inc
jecxz
es
jg
stos
and
adc
fsubr
out
in
faddp
pop
and
fldcw
les
and
add
xlat
xor
dec
fs
push
push
cmp
xchg
inc
sbb
movsl
jno
call
std
ret
addr16
int3
movsb
xchg
je
cmp
lock
mov
gs
fists
adc
cmp
xchg
add
test
in
push
fsubr
jle
inc
jae
cmovl
movsl
pop
dec
nop
lods
jecxz
test
push
cmc
push
mov
xchg
nop
and
mov
jno
push
mov
mov
ret
push
lods
mov
adc
mov
fiadds
mov
in
xchg
add
or
iret
dec
and
out
push
adc
adc
cmp
mov
push
aas
sbb
jae
imul
sub
push
inc
cmp
mov
clc
into
pop
or
lds
int3
pusha
pop
dec
outsb
dec
enter
idivb
js
lods
rcrl
or
sbb
push
cmp
mov
lcall
push
mov
int
dec
push
dec
pusha
data16
scas
lock
jecxz
xor
push
mov
stc
mov
inc
or
lods
push
mov
mov
push
pop
sub
bound
mov
in
fs
pop
fldcw
jnp
stos
fistpl
inc
xchg
imul
push
popf
xor
xchg
sbb
xchg
xchg
push
dec
mov
iret
in
lret
xchg
fwait
roll
lret
push
insb
stos
push
int3
mov
fisttps
dec
sbb
movsl
lods
pop
enter
sub
jb
sti
je
mov
loope
fbstp
add
iret
and
mov
or
arpl
das
jp
mov
or
fiadds
aas
mov
jnp
nop
mov
std
fimuls
jo
repnz
cmc
pop
flds
test
and
insb
in
push
in
lret
inc
jmp
jb
ficompl
shll
call
aas
jb
pop
push
jne
mov
mov
gs
inc
fcmovne
insl
out
pop
or
cmpsl
cmp
add
jmp
add
in
cmp
ljmp
sub
or
mov
add
scas
mov
push
call
cwtl
and
mov
test
sbb
arpl
test
jle
mov
rcrl
hlt
test
popa
mov
sub
fidivrl
mov
mov
push
aam
mov
cmc
jge
or
pop
repz
push
mov
push
ss
xchg
ror
dec
ljmp
mov
shl
inc
mov
ds
add
add
je
jb
roll
repz
in
jb
rorb
in
cli
mov
lea
push
cmp
mov
fiaddl
clc
mov
sar
fsubs
arpl
inc
mov
lret
sbb
or
leave
fucom
testb
and
sub
sbb
ja
cli
test
rolb
dec
pop
enter
xchg
mov
test
mov
pop
mov
xchg
mov
jmp
sbb
je
xchg
sub
je
aam
ret
mov
mov
adc
gs
loopne
dec
inc
fcoml
cmc
push
jp
xor
rorl
push
enter
jge
mov
inc
shll
mov
pop
mov
arpl
push
ucomiss
out
mov
or
push
push
or
xor
mov
push
daa
stos
push
arpl
aam
and
lcall
inc
cmp
and
pop
mov
inc
mov
fs
jo
add
mov
pop
nop
loop
jbe
in
adc
aad
mov
xor
cmpsl
jo
fsts
js
repz
xchg
sbb
inc
call
aas
loopne
out
stos
addr16
dec
inc
push
loope
inc
mov
aas
ret
cmp
sbb
xchg
mov
daa
sbb
stos
movsb
inc
and
out
pop
jg
addr16
adc
adc
mov
cmp
pop
sub
pop
pop
or
and
sti
dec
mov
push
inc
lock
fidivl
add
jp
add
lock
xor
mov
xor
test
popf
and
fcmovnb
lds
cmp
or
cmc
in
pop
push
js
mov
jo
lret
or
pop
sub
sbb
dec
pop
loope
dec
in
add
push
mov
mov
jnp
sub
mov
cmp
pop
pushf
popf
ret
adc
dec
pop
loopne
sbbb
notb
inc
pop
insl
jbe
dec
repnz
sbb
int
rol
fsubrs
rolb
adc
dec
mov
ljmp
test
mov
ja
sub
add
aaa
lea
adc
adc
sub
mov
jp
arpl
jmp
movsb
adc
rcrl
mov
out
xchg
lock
inc
pushf
jg
jle
daa
sbb
jns
sbb
mov
and
pop
push
lret
pop
insb
iret
je
add
add
push
mov
adc
inc
aad
jnp
outsl
sbb
arpl
or
lcall
xchg
add
sti
aad
mov
mov
dec
push
ljmp
dec
pop
ljmp
sub
pop
cmp
jns
arpl
subl
fcompl
cmpsb
sbb
mov
pop
push
dec
insb
pop
or
nop
or
arpl
int
mov
cmpsl
sbb
fsubp
xchg
and
and
adcl
movsl
mov
mov
push
ret
mov
lcall
imul
mov
pop
test
or
xor
jno
shl
pop
mov
jl
xlat
xchg
push
or
movsl
imull
sub
loop
and
lods
or
lahf
int3
adc
ja
push
ja
add
jle
fisubrl
rorb
cmp
dec
xor
arpl
mov
mov
js
clc
jmp
and
ljmp
mov
or
adc
push
mov
adc
sub
xor
inc
mov
adc
adc
xchg
les
mov
ret
xor
ja
fmuls
sub
add
stc
fwait
sar
dec
fnstenv
sub
enter
cmpsl
mov
cwtl
adc
xlat
fsubl
pop
push
cmpsb
or
lahf
pop
lcall
insb
sbb
leave
mov
and
out
or
out
pushf
lcall
imul
testl
and
xor
lds
std
sarb
push
jecxz
cmp
outsl
shlb
cmp
repz
jmp
scas
pushl
jae
out
dec
arpl
jp
xorb
addr16
push
enter
rolb
out
xor
dec
les
ficomps
cmpsl
jb,pt
ds
leave
insb
lcall
psrad
mov
add
push
cmp
pushf
xor
jle
dec
nop
out
pop
or
mov
sub
lcall
inc
mov
pop
or
jnp
out
and
sahf
enter
cmp
imul
add
mov
mov
xlat
int3
or
dec
xchg
inc
imul
and
cmp
sub
sahf
or
in
mov
ljmp
pop
or
mov
jno
lahf
jge
or
iret
outsl
mov
dec
sub
call
enter
push
subl
xor
push
add
or
mov
test
adc
cmp
jb
mov
ret
in
mov
cmp
out
jno
jmp
rol
sub
fwait
mov
bound
shl
stos
mov
xchg
jnp
inc
ret
fdiv
mov
mov
jecxz
push
loop
or
mov
inc
mov
jcxz
mov
sub
mov
xchg
ret
push
insl
int
jae
push
push
sti
data16
andl
adc
mov
test
outsl
and
mov
loopne
push
call
and
mov
leave
mov
xor
add
mov
and
mov
adc
fidivs
loop
out
jbe
jae
adc
adc
xchg
addr16
add
lds
inc
jno
cmp
push
cli
pop
inc
push
lods
and
push
cld
add
movsb
xor
out
xchg
sbb
leave
outsl
pop
movsl
jnp
mov
mov
loop
ret
gs
or
sbb
pop
inc
scas
mov
sbbl
out
leave
adc
negb
or
mov
repz
mov
pop
jge
xchg
lods
hlt
cli
mov
mov
fcoml
repz
and
sti
xor
pop
cld
jmp
mov
mov
jmp
inc
pushf
fcom
in
cld
mov
adc
aad
addr16
in
test
mov
cmc
loopne
jmp
cmp
mov
aam
into
xchg
popf
push
nop
push
push
push
movsl
ja
pop
gs
fstpt
fcomps
push
mov
jmp
insb
xchg
add
ja
inc
call
pop
sti
lods
cmp
mov
cmp
adc
inc
std
js
sbb
mov
repnz
jno
dec
pop
push
insb
dec
pop
fdiv
mov
shl
sbb
xchg
repz
cmpsb
or
xchg
mov
xor
xchg
cld
push
les
mov
adc
idiv
xor
lahf
test
sub
fsubrs
or
pusha
inc
mov
sbb
xchg
xchg
iret
je
pusha
cmc
cwtl
sub
imul
dec
and
jle
xchg
js
lahf
adc
fsubrl
inc
mov
xor
jmp
dec
test
or
pop
mov
stos
aad
aaa
fisttpl
test
and
imul
out
cmp
cmp
shl
loopne
iret
adc
ds
insb
inc
clc
fmul
repnz
xchg
mov
mov
xor
inc
inc
or
enter
mull
scas
add
roll
mov
mov
jae
iret
rolb
mov
dec
push
movsb
inc
push
mov
add
mov
dec
mov
add
jle
insb
sub
mov
shrl
pop
sub
into
dec
jle
cli
hlt
push
mov
xchg
lods
cmp
jl
js
sub
aaa
add
ret
and
dec
subb
js
je
ds
fists
push
mov
mov
cmc
lea
xchg
jnp
mov
lret
stos
inc
cli
mov
imul
fidivs
neg
mov
popa
mov
xchg
jl
enter
xlat
cmp
or
out
pop
or
mov
push
fcompl
mov
mov
testb
mov
cmp
sub
add
iret
push
ds
enter
test
and
in
pop
shr
fbstp
xchg
xchg
test
lods
loop
mov
mulb
test
mov
push
adc
push
mov
xlat
les
xor
xchg
or
push
jbe
or
mov
mov
cmpsl
nop
xchg
pushf
fnsave
push
push
cltd
pop
cmp
popf
dec
jno
mov
repnz
mov
cmp
sti
mov
cmpb
popa
ja
lret
int3
pop
pop
stos
xor
cs
and
ja
sub
ret
jg
iret
into
movsb
mov
sbb
mov
cmp
inc
jae
cwtl
xor
and
aas
testl
push
jno
aad
or
leave
add
lahf
cmpps
repz
into
pop
cli
inc
xor
mov
call
push
subb
popf
mov
addl
xor
adc
xor
mov
jbe
sub
cld
loop
add
sub
sub
adcb
cmp
ret
arpl
test
xchg
jg
xchg
shl
mov
fimuls
push
out
decl
fisubl
add
inc
incl
sub
inc
jg
addl
sbb
push
movsl
xchg
pushf
xor
in
add
lea
sbb
lods
outsb
dec
scas
sub
aaa
int
nop
push
push
inc
push
xor
push
sub
push
add
gs
test
insl
jmp
xlat
mov
mov
jae
int
sub
call
rep
cmp
imul
ret
sbbl
cmp
cmc
mov
in
loop
and
popa
test
jecxz
sub
in
das
shlb
jp
das
ret
je
scas
dec
mov
ret
cmp
dec
xchg
push
arpl
xchg
adc
dec
jbe
roll
ror
adc
jg
insl
mov
gs
and
lods
sbb
outsl
push
stos
inc
xor
addb
fadds
ss
xor
xchg
jl
out
and
and
or
jle
cmpsb
ljmp
dec
inc
dec
mov
mov
push
sub
xor
dec
push
in
mov
inc
aam
test
push
pop
jnp
push
dec
xlat
adc
in
mov
inc
pop
pushw
add
dec
fsubl
leave
mov
xor
push
pop
jnp
sub
jb
addb
inc
cmp
push
pop
push
adc
dec
out
inc
ret
sbb
pushf
mov
jle
jp
loopne
and
lahf
fstl
push
test
popa
cld
loop
jl
fsubrp
sub
cmp
out
icebp
add
std
dec
jge
stos
cmp
lods
lea
stos
pop
push
int
es
pop
subb
mov
fdivs
sbb
pop
gs
jne
mov
mov
add
aam
shlb
lcall
sbb
inc
int
fdivl
mov
pushf
adcb
push
mov
push
dec
push
testb
jne
fistl
cmpsb
xchg
push
les
xor
incb
fdivl
inc
jmp
cs
dec
cmp
negb
and
mov
jb
xchg
lods
lret
or
int
insl
in
mov
dec
add
push
xchg
xchg
leave
mov
jnp
sbb
ds
jno
int3
inc
push
sub
push
push
clc
xlat
dec
es
jne
jno
in
adc
arpl
pusha
push
sbb
jne
jg
dec
lahf
or
adc
test
pcmpgtw
iret
int3
out
gs
push
scas
sahf
iret
cli
and
cmp
pop
pushf
inc
subb
movsl
mov
cltd
gs
icebp
scas
ffreep
mov
pop
rcrb
mov
outsl
in
xchg
fs
in
push
and
dec
loopne
clc
sbb
outsl
mov
cmp
jecxz
sbb
pusha
mov
add
loope
iret
fstpl
inc
jne
adc
and
lock
dec
ss
in
dec
or
das
mov
xadd
mov
lea
call
js
icebp
cmp
sahf
mov
cmc
sti
mov
ljmp
fidivl
mov
sub
fidivs
fcompl
test
arpl
loopne
xor
stc
push
and
ja
cmpsl
in
icebp
mov
xchg
mov
sub
and
idivb
jae
adc
mov
xchg
fadds
xor
jge
sub
and
mov
std
cmc
xor
pushf
pop
sub
daa
scas
xlat
hlt
popf
xor
push
out
testl
dec
outsl
dec
ret
mov
mov
ffree
jo
call
jns
and
mov
mov
cmp
insl
xchg
rorb
in
bound
inc
cmpsb
mov
pop
mov
mov
jbe
or
test
xchg
jmp
enter
loope
es
dec
out
xor
or
fs
mov
dec
sbb
rclb
cmp
push
scas
xchg
mov
ficoms
mov
push
push
jns
clc
sub
jp
or
out
mov
loope
push
test
sbb
push
fisubrs
adc
test
dec
ds
out
notl
jle
iret
jmp
ret
pop
hlt
cmpsl
out
and
pop
sti
xor
sti
divl
inc
adc
arpl
push
and
arpl
xchg
js
xlat
mov
adc
out
xchg
rcr
cmpsb
jle
adc
lret
mov
pop
sub
fsubrs
xchg
jo
fdivs
xlat
repnz
inc
cltd
fdivl
in
pop
push
adc
mulb
inc
movsb
jb
cltd
ret
scas
and
adc
ret
shlb
and
mov
or
psrld
insb
or
je
call
mov
inc
cmp
jmp
push
ja
jnp
fneni(8087
pop
xchg
add
or
bound
test
test
cmp
add
push
pop
sbb
push
dec
stos
pop
mov
lods
adc
js
js
sbb
or
lea
imul
cli
xor
push
enter
mov
dec
aaa
xor
shlb
xlat
mov
xchg
ret
mov
je
mov
paddusb
xchg
packsswb
sub
xlat
inc
out
or
mov
cltd
add
decl
xor
mov
xchg
xchg
cmp
push
mov
pop
jmp
out
push
inc
fcomip
sbb
test
call
pusha
pop
xor
les
jb
nop
stos
ret
inc
cld
xchg
sbbb
mov
or
xchg
out
mov
repnz
mov
dec
pop
add
or
lret
dec
outsl
out
or
pop
sub
ficoml
fsubs
pop
mov
test
sbb
cltd
pushf
orb
lods
out
loopne
js
mov
jns
fsubrs
in
adc
call
dec
and
xor
fnsave
inc
jg
inc
mov
test
xor
movsl
xor
mov
dec
pop
sub
xchg
test
loopne
icebp
rcrl
jae
lea
imulb
sub
add
cmc
lcall
mov
sbbl
roll
push
pop
repnz
add
sub
ss
bound
out
or
adcl
inc
mov
pusha
and
inc
out
lods
into
jecxz
pop
das
dec
mov
in
dec
mov
and
sub
jns
movsl
dec
and
sahf
cwtl
mov
es
lret
mov
sbb
or
mov
imul
adc
movups
in
test
or
pop
and
sbb
gs
push
arpl
jnp
add
sub
inc
out
repnz
das
sbb
popa
loopne
lahf
inc
int
fimuls
aad
or
das
jmp
xor
int
loop
and
cmp
test
lock
sbb
sbbb
mov
les
les
xchg
clc
sbb
aaa
inc
and
add
in
mov
mov
ljmp
push
inc
pop
es
mov
adc
or
push
inc
adc
decl
add
mov
mov
stos
push
stos
add
pop
pop
xor
or
loopne
mov
sbb
lock
repz
mov
cmp
pop
inc
dec
ja
ret
push
jnp
outsl
shll
lea
popf
sbb
sub
and
dec
lahf
cmpsl
movsb
sbb
notb
push
lds
push
jbe
cvtpi2ps
push
pushf
push
pop
mov
push
rcll
jno
mov
mov
cmp
push
push
mov
pop
sub
test
jmp
add
jmp
arpl
mov
mov
sub
jp
seta
bound
out
enter
xor
cmp
or
adc
scas
dec
push
loopne
cmc
xor
dec
and
leave
fwait
in
das
inc
fs
fsubs
int
les
xchg
mov
cltd
xchg
rcll
sub
pop
mov
stc
xorb
or
push
add
ret
std
cmp
xchg
inc
mov
push
sub
sbb
push
pushf
lcall
mov
outsb
add
daa
pop
scas
leave
lret
test
movsl
cmpl
leave
pusha
adc
mov
dec
cmp
mov
dec
adc
mov
iret
in
mov
jns
adc
scas
adc
xchg
or
lcall
mov
int3
cmp
hlt
fwait
orl
mov
cmpsb
sbb
stos
jle
mov
and
push
or
mov
jp
in
test
out
rcrb
lret
xchg
cs
jp
push
xor
sbb
xor
cwtl
insl
pop
sbb
jne
mov
push
mov
pushf
insl
ret
adc
insl
mov
inc
gs
aas
ja
mov
ja
dec
mov
scas
add
loope
aad
xchg
jge
push
mov
daa
test
inc
jmp
or
pop
subl
or
sub
mov
int3
xor
popa
xor
nop
insl
dec
ret
fsts
cli
dec
outsl
repz
jge
faddl
aam
adc
insl
mov
sub
sub
or
sti
clc
pop
aaa
mov
out
test
pusha
into
sbb
ds
enter
push
jae
jecxz
clc
mov
or
cmp
stc
jns
mov
dec
or
cmp
aam
push
xchg
popf
adc
in
mov
outsl
jmp
fidivs
sub
adcl
cmp
mov
bound
rclb
push
insb
mov
add
jae
push
repz
aad
sbb
rcr
sub
in
repnz
roll
push
mov
lods
and
xchg
sarb
pop
push
mov
ds
jp,pt
sbb
in
mov
orl
dec
jl
ds
add
lret
or
js
pop
jg
repnz
int3
mov
int
xor
or
pop
add
data16
idiv
inc
pop
addb
scas
push
sbb
cmpsb
xchg
add
or
fwait
or
fisttps
push
fstl
xor
sarl
or
cmc
pop
jne
arpl
mov
mul
pusha
dec
stos
testl
mov
and
mov
xchg
daa
into
jl
aam
push
push
dec
icebp
inc
sub
dec
pop
into
ret
out
dec
mov
bound
push
pushf
sub
addb
test
pop
mov
inc
xor
jecxz
insl
loope
push
pop
test
inc
add
mov
fdivrs
sbb
pusha
dec
loop
cwtl
xchg
cmp
jle
mov
adc
sbb
sahf
imul
leave
aaa
loop
jne
pop
in
out
outsl
dec
fimuls
lcall
jne
jnp
scas
and
and
dec
dec
data16
push
es
mov
pushf
xchg
inc
jbe
push
mov
mov
pop
ss
jbe
adc
sbb
mov
sbb
ljmp
mov
imul
testb
outsb
sub
push
divl
adc
mov
xor
and
fiaddl
roll
aaa
cmp
sbb
ficoms
sbb
sbb
xorb
cmc
xor
jp
pop
xchg
sarb
ret
mov
xchg
pushf
jge
cli
or
mov
in
push
je
test
les
arpl
pop
hlt
cld
orps
loopne
arpl
mov
testb
pop
adc
mov
sarb
imul
xchg
ljmp
push
jnp
xlat
iret
cltd
sbb
aad
mov
jp
outsb
fs
mov
outsl
sbb
sarb
ss
jae
pop
pop
mov
sbbb
js
fisubrs
cmp
enter
ljmp
fs
iret
xor
andb
and
and
push
sbb
call
test
cmp
icebp
sahf
fidivl
sub
inc
xchg
leave
dec
xor
fisubrs
movsl
subl
inc
mov
enter
das
test
add
xor
add
leave
push
add
out
lods
daa
mov
push
hlt
pop
test
das
mov
xchg
ds
sub
push
in
sub
mov
pop
test
out
mov
adc
push
in
jno
int3
mov
lcall
pop
sti
and
sti
push
adc
ds
das
and
pop
loop
fidivrs
inc
aad
lret
stos
dec
xor
loope
popf
out
arpl
push
lock
idivl
mov
push
or
out
jbe
fimuls
test
or
data16
dec
in
mov
push
mov
movd
insl
dec
mov
push
mov
sub
bound
pop
ljmp
jge
inc
dec
adc
mov
les
rcll
pop
jl
sub
mov
fldcw
push
or
rol
push
lock
dec
sub
int3
push
lds
fwait
and
test
jnp
fsub
fisubs
jg
adc
xchg
popa
push
int
das
loopne
inc
repz
jge
ss
push
shrl
mov
inc
movl
lods
stos
and
sbb
repnz
fidivrs
std
fmull
iret
call
add
scas
inc
es
sti
adc
pusha
sahf
ss
pop
loop
push
push
xchg
cwtl
or
mov
out
cmp
and
jle
or
jmp
out
cmpsb
loope
test
and
mov
cmc
cmp
cmp
cmp
jmp
mov
das
add
pop
or
jno
pop
mov
mov
pop
xor
test
rcrl
stos
pop
dec
aad
push
mov
mov
cmc
pop
cmpsl
mov
xchg
orl
mov
into
mov
adc
dec
hlt
push
xor
push
jnp
mov
lret
cltd
in
inc
lock
push
mov
pusha
mov
cmp
js
test
mov
add
mov
or
out
aam
rcrb
ss
sbb
rcl
inc
or
xchg
dec
push
xchg
mov
jo
sbbl
xor
icebp
cmc
dec
mov
or
outsl
in
daa
and
mov
pop
mov
mov
dec
or
and
add
fisubrs
xchg
xor
adc
aad
faddl
mov
push
push
xchg
jp
fildll
push
mov
bound
inc
imul
dec
jns
test
mov
or
adc
cs
pop
je
jl
mov
cmc
js
push
inc
ret
call
in
scas
xor
fst
xchg
arpl
ret
mov
fs
push
cmc
pop
jne
xlat
fldt
lcall
and
inc
adc
cmp
sahf
pushf
ret
cwtl
aam
cli
pusha
sbb
sub
aad
insb
cmp
push
loope
adc
xor
mov
int3
pop
sub
and
xchg
nop
vmovaps
xor
jb
outsb
add
dec
aaa
or
push
jg
push
decb
aad
lods
movsb
out
movsb
jle
aas
scas
cmc
mov
lods
mov
cmp
or
ds
or
leave
shll
mov
mov
pop
and
sub
and
lock
jns
das
cltd
mov
stos
add
cmp
dec
fmuls
test
adc
pandn
sbb
mov
psllw
out
cmp
lea
loop
mov
cmc
enter
mov
pop
jnp
sub
sub
pop
es
in
mov
mov
fcmovu
xchg
test
sub
arpl
xchg
cmp
mov
data16
aad
push
xor
ror
xorb
jecxz
adc
insb
mov
mov
sub
out
rcrl
mov
cmp
movsl
fcmove
pop
inc
jne
push
popa
data16
fimull
pop
aaa
shll
mov
iret
jno
mov
fstpl
fistpll
